
"__ctype_toupper_loc@plt" :
26e0(6): jmp 0x2126ba(%rip)
26e6(5): push $0x0

"getenv@plt" :
26f0(6): jmp 0x2126b2(%rip)
26f6(5): push $0x1

"__snprintf_chk@plt" :
2700(6): jmp 0x2126aa(%rip)
2706(5): push $0x2

"free@plt" :
2710(6): jmp 0x2126a2(%rip)
2716(5): push $0x3

"utimensat@plt" :
2720(6): jmp 0x21269a(%rip)
2726(5): push $0x4

"localtime@plt" :
2730(6): jmp 0x212692(%rip)
2736(5): push $0x5

"abort@plt" :
2740(6): jmp 0x21268a(%rip)
2746(5): push $0x6

"__errno_location@plt" :
2750(6): jmp 0x212682(%rip)
2756(5): push $0x7

"strncmp@plt" :
2760(6): jmp 0x21267a(%rip)
2766(5): push $0x8

"localtime_r@plt" :
2770(6): jmp 0x212672(%rip)
2776(5): push $0x9

"_exit@plt" :
2780(6): jmp 0x21266a(%rip)
2786(5): push $0xa

"__fpending@plt" :
2790(6): jmp 0x212662(%rip)
2796(5): push $0xb

"clock_gettime@plt" :
27a0(6): jmp 0x21265a(%rip)
27a6(5): push $0xc

"setenv@plt" :
27b0(6): jmp 0x212652(%rip)
27b6(5): push $0xd

"textdomain@plt" :
27c0(6): jmp 0x21264a(%rip)
27c6(5): push $0xe

"fclose@plt" :
27d0(6): jmp 0x212642(%rip)
27d6(5): push $0xf

"bindtextdomain@plt" :
27e0(6): jmp 0x21263a(%rip)
27e6(5): push $0x10

"dcgettext@plt" :
27f0(6): jmp 0x212632(%rip)
27f6(5): push $0x11

"__ctype_get_mb_cur_max@plt" :
2800(6): jmp 0x21262a(%rip)
2806(5): push $0x12

"strlen@plt" :
2810(6): jmp 0x212622(%rip)
2816(5): push $0x13

"__lxstat@plt" :
2820(6): jmp 0x21261a(%rip)
2826(5): push $0x14

"__stack_chk_fail@plt" :
2830(6): jmp 0x212612(%rip)
2836(5): push $0x15

"getopt_long@plt" :
2840(6): jmp 0x21260a(%rip)
2846(5): push $0x16

"mbrtowc@plt" :
2850(6): jmp 0x212602(%rip)
2856(5): push $0x17

"dup2@plt" :
2860(6): jmp 0x2125fa(%rip)
2866(5): push $0x18

"strchr@plt" :
2870(6): jmp 0x2125f2(%rip)
2876(5): push $0x19

"snprintf@plt" :
2880(6): jmp 0x2125ea(%rip)
2886(5): push $0x1a

"__overflow@plt" :
2890(6): jmp 0x2125e2(%rip)
2896(5): push $0x1b

"strrchr@plt" :
28a0(6): jmp 0x2125da(%rip)
28a6(5): push $0x1c

"gmtime_r@plt" :
28b0(6): jmp 0x2125d2(%rip)
28b6(5): push $0x1d

"lseek@plt" :
28c0(6): jmp 0x2125ca(%rip)
28c6(5): push $0x1e

"__assert_fail@plt" :
28d0(6): jmp 0x2125c2(%rip)
28d6(5): push $0x1f

"fputs@plt" :
28e0(6): jmp 0x2125ba(%rip)
28e6(5): push $0x20

"memset@plt" :
28f0(6): jmp 0x2125b2(%rip)
28f6(5): push $0x21

"close@plt" :
2900(6): jmp 0x2125aa(%rip)
2906(5): push $0x22

"fputc@plt" :
2910(6): jmp 0x2125a2(%rip)
2916(5): push $0x23

"memcmp@plt" :
2920(6): jmp 0x21259a(%rip)
2926(5): push $0x24

"fputs_unlocked@plt" :
2930(6): jmp 0x212592(%rip)
2936(5): push $0x25

"calloc@plt" :
2940(6): jmp 0x21258a(%rip)
2946(5): push $0x26

"strcmp@plt" :
2950(6): jmp 0x212582(%rip)
2956(5): push $0x27

"strtol@plt" :
2960(6): jmp 0x21257a(%rip)
2966(5): push $0x28

"memcpy@plt" :
2970(6): jmp 0x212572(%rip)
2976(5): push $0x29

"tzset@plt" :
2980(6): jmp 0x21256a(%rip)
2986(5): push $0x2a

"time@plt" :
2990(6): jmp 0x212562(%rip)
2996(5): push $0x2b

"fileno@plt" :
29a0(6): jmp 0x21255a(%rip)
29a6(5): push $0x2c

"__stpcpy_chk@plt" :
29b0(6): jmp 0x212552(%rip)
29b6(5): push $0x2d

"__xstat@plt" :
29c0(6): jmp 0x21254a(%rip)
29c6(5): push $0x2e

"malloc@plt" :
29d0(6): jmp 0x212542(%rip)
29d6(5): push $0x2f

"fflush@plt" :
29e0(6): jmp 0x21253a(%rip)
29e6(5): push $0x30

"nl_langinfo@plt" :
29f0(6): jmp 0x212532(%rip)
29f6(5): push $0x31

"mktime@plt" :
2a00(6): jmp 0x21252a(%rip)
2a06(5): push $0x32

"__freading@plt" :
2a10(6): jmp 0x212522(%rip)
2a16(5): push $0x33

"realloc@plt" :
2a20(6): jmp 0x21251a(%rip)
2a26(5): push $0x34

"setlocale@plt" :
2a30(6): jmp 0x212512(%rip)
2a36(5): push $0x35

"__printf_chk@plt" :
2a40(6): jmp 0x21250a(%rip)
2a46(5): push $0x36

"timegm@plt" :
2a50(6): jmp 0x212502(%rip)
2a56(5): push $0x37

"strftime@plt" :
2a60(6): jmp 0x2124fa(%rip)
2a66(5): push $0x38

"error@plt" :
2a70(6): jmp 0x2124f2(%rip)
2a76(5): push $0x39

"open@plt" :
2a80(6): jmp 0x2124ea(%rip)
2a86(5): push $0x3a

"fseeko@plt" :
2a90(6): jmp 0x2124e2(%rip)
2a96(5): push $0x3b

"unsetenv@plt" :
2aa0(6): jmp 0x2124da(%rip)
2aa6(5): push $0x3c

"futimens@plt" :
2ab0(6): jmp 0x2124d2(%rip)
2ab6(5): push $0x3d

"__cxa_atexit@plt" :
2ac0(6): jmp 0x2124ca(%rip)
2ac6(5): push $0x3e

"exit@plt" :
2ad0(6): jmp 0x2124c2(%rip)
2ad6(5): push $0x3f

"fwrite@plt" :
2ae0(6): jmp 0x2124ba(%rip)
2ae6(5): push $0x40

"__fprintf_chk@plt" :
2af0(6): jmp 0x2124b2(%rip)
2af6(5): push $0x41

"mbsinit@plt" :
2b00(6): jmp 0x2124aa(%rip)
2b06(5): push $0x42

"iswprint@plt" :
2b10(6): jmp 0x2124a2(%rip)
2b16(5): push $0x43

"__ctype_tolower_loc@plt" :
2b20(6): jmp 0x21249a(%rip)
2b26(5): push $0x44

"__ctype_b_loc@plt" :
2b30(6): jmp 0x212492(%rip)
2b36(5): push $0x45

"__sprintf_chk@plt" :
2b40(6): jmp 0x21248a(%rip)
2b46(5): push $0x46

".plt.got" :
2b50(6): jmp 0x2124a2(%rip)
2b56(2): nop 

"_init" :
26b0(4): sub $0x8,%rsp
26b4(7): mov 0x21292d(%rip),%rax
26bb(3): test %rax,%rax
26be(2): jz 0x4(%rip)
26c0(2): call %rax
26c2(4): add $0x8,%rsp
26c6(1): ret near (%rsp)

"tm_year_str" :
2b60(2): mov %edi,%eax
2b62(5): mov $0x64,%ecx
2b67(1): push %rbx
2b68(1): cdq %eax
2b69(3): mov %rsi,%rbx
2b6c(2): idiv %ecx,%eax
2b6e(2): xor %ecx,%ecx
2b70(4): lea 0x13(%rax),%r8d
2b74(2): mov %edx,%esi
2b76(3): sar $0x1f,%esi
2b79(3): mov %r8d,%eax
2b7c(2): xor %esi,%edx
2b7e(3): sar $0x1f,%eax
2b81(3): xor %eax,%r8d
2b84(6): cmp $0xfffff894,%edi
2b8a(7): lea 0xd52c(%rip),%rdi
2b91(3): setnl %cl
2b94(2): sub %esi,%edx
2b96(3): sub %eax,%r8d
2b99(3): add %rdi,%rcx
2b9c(3): mov %edx,%r9d
2b9f(3): mov %rbx,%rdi
2ba2(4): or $0xffffffff,%rdx
2ba6(5): mov $0x1,%esi
2bab(2): xor %eax,%eax
2bad(5): call 0xffffff93(%rip)
2bb2(3): mov %rbx,%rax
2bb5(1): pop %rbx
2bb6(1): ret near (%rsp)

"main" :
2bc0(2): push %r15
2bc2(2): push %r14
2bc4(3): xor %r15d,%r15d
2bc7(2): push %r13
2bc9(2): push %r12
2bcb(3): mov %edi,%r12d
2bce(1): push %rbp
2bcf(1): push %rbx
2bd0(3): mov %rsi,%rbp
2bd3(7): lea 0x211566(%rip),%r13
2bda(3): xor %r14d,%r14d
2bdd(7): sub $0xf8,%rsp
2be4(3): mov (%rsi),%rdi
2be7(9): mov $0x28,%rax
2bf0(8): mov %rax,0xe8(%rsp)
2bf8(2): xor %eax,%eax
2bfa(5): call 0x5f86(%rip)
2bff(7): lea 0xd770(%rip),%rsi
2c06(5): mov $0x6,%edi
2c0b(5): call 0xfffffe25(%rip)
2c10(7): lea 0xcbcd(%rip),%rsi
2c17(7): lea 0xcb9d(%rip),%rdi
2c1e(5): call 0xfffffbc2(%rip)
2c23(7): lea 0xcb91(%rip),%rdi
2c2a(5): call 0xfffffb96(%rip)
2c2f(7): lea 0x120a(%rip),%rdi
2c36(5): call 0xcaca(%rip)
2c3b(a): mov $0x0,0x2124ff(%rip)
2c45(7): mov $0x0,0x2124f6(%rip)
2c4c(7): mov $0x0,0x2124f0(%rip)
2c53(5): nop 0x0(%rax,%rax,1)
2c58(7): lea 0xcbe6(%rip),%rdx
2c5f(3): xor %r8d,%r8d
2c62(3): mov %r13,%rcx
2c65(3): mov %rbp,%rsi
2c68(3): mov %r12d,%edi
2c6b(5): call 0xfffffbd5(%rip)
2c70(3): cmp $0xff,%eax
2c73(2): mov %eax,%ebx
2c75(6): jz 0x1bd(%rip)
2c7b(3): cmp $0x66,%ebx
2c7e(2): jz 0xffffffda(%rip)
2c80(2): jle 0x30(%rip)
2c82(3): cmp $0x72,%ebx
2c85(6): jz 0x12b(%rip)
2c8b(2): jnle 0x55(%rip)
2c8d(3): cmp $0x68,%ebx
2c90(6): jz 0x110(%rip)
2c96(3): cmp $0x6d,%ebx
2c99(6): jnz 0x73d(%rip)
2c9f(7): or $0x2,0x21249e(%rip)
2ca6(2): jmp 0xffffffb2(%rip)
2ca8(8): nop 0x0(%rax,%rax,1)
2cb0(3): cmp $0x61,%ebx
2cb3(6): jz 0x12d(%rip)
2cb9(2): jle 0x7f(%rip)
2cbb(3): cmp $0x63,%ebx
2cbe(6): jz 0x112(%rip)
2cc4(3): cmp $0x64,%ebx
2cc7(6): jnz 0x70f(%rip)
2ccd(7): mov 0x2123e4(%rip),%r15
2cd4(2): jmp 0xffffff84(%rip)
2cd6(a): nop 0x0(%rax,%rax,1)
2ce0(3): cmp $0x74,%ebx
2ce3(6): jz 0x10d(%rip)
2ce9(3): add $0x80,%ebx
2cec(6): jnz 0x6ea(%rip)
2cf2(7): mov 0x21231f(%rip),%r9
2cf9(7): mov 0x2123b8(%rip),%rsi
2d00(7): lea 0x2113f9(%rip),%rdx
2d07(7): lea 0xd322(%rip),%rcx
2d0e(7): lea 0xcae7(%rip),%rdi
2d15(6): mov $0x4,%r8d
2d1b(5): call 0x1045(%rip)
2d20(7): lea 0xd309(%rip),%rdx
2d27(3): mov 0x0(%rdx,%rax,4),%eax
2d2a(6): or %eax,0x212414(%rip)
2d30(5): jmp 0xffffff28(%rip)
2d35(3): nop (%rax)
2d38(6): cmp $0xffffff7d,%ebx
2d3e(6): jnz 0x668(%rip)
2d44(7): lea 0xcad2(%rip),%rax
2d4b(2): push $0x0
2d4d(7): mov 0x212354(%rip),%rdi
2d54(7): mov 0x2122b5(%rip),%rcx
2d5b(7): lea 0xcaa1(%rip),%r9
2d62(7): lea 0xcaa9(%rip),%r8
2d69(1): push %rax
2d6a(7): lea 0xcab8(%rip),%rax
2d71(7): lea 0xca3f(%rip),%rdx
2d78(7): lea 0xc9bc(%rip),%rsi
2d7f(1): push %rax
2d80(7): lea 0xcab2(%rip),%rax
2d87(1): push %rax
2d88(2): xor %eax,%eax
2d8a(5): call 0x7fe6(%rip)
2d8f(4): add $0x20,%rsp
2d93(2): xor %edi,%edi
2d95(5): call 0xfffffd3b(%rip)
2d9a(6): nop 0x0(%rax,%rax,1)
2da0(7): mov $0x1,0x21239a(%rip)
2da7(5): jmp 0xfffffeb1(%rip)
2dac(4): nop 0x0(%rax)
2db0(7): mov 0x212301(%rip),%rax
2db7(7): mov $0x1,0x212384(%rip)
2dbe(7): mov %rax,0x21233b(%rip)
2dc5(5): jmp 0xfffffe93(%rip)
2dca(6): nop 0x0(%rax,%rax,1)
2dd0(7): mov $0x1,0x21236c(%rip)
2dd7(5): jmp 0xfffffe81(%rip)
2ddc(4): nop 0x0(%rax)
2de0(7): or $0x1,0x21235d(%rip)
2de7(5): jmp 0xfffffe71(%rip)
2dec(4): nop 0x0(%rax)
2df0(7): mov 0x2122c1(%rip),%rsi
2df7(7): lea 0x212322(%rip),%rdi
2dfe(5): mov $0x6,%edx
2e03(5): call 0x59fd(%rip)
2e08(2): test %al,%al
2e0a(3): mov %eax,%r14d
2e0d(6): jz 0x5f7(%rip)
2e13(b): mov $0x0,0x21230a(%rip)
2e1e(8): movdqa 0x2122fa(%rip),%xmm0
2e26(7): movaps %xmm0,0x212303(%rip)
2e2d(5): jmp 0xfffffe2b(%rip)
2e32(7): cmp $0x0,0x21230b(%rip)
2e39(2): jnz 0xc(%rip)
2e3b(a): mov $0x3,0x2122ff(%rip)
2e45(3): test %r14b,%r14b
2e48(7): movzx 0x2122f3(%rip),%eax
2e4f(6): jz 0x227(%rip)
2e55(3): test %r15,%r15
2e58(6): jnz 0x6be(%rip)
2e5e(2): test %al,%al
2e60(6): jnz 0x6b6(%rip)
2e66(6): mov 0x212244(%rip),%eax
2e6c(3): cmp %r12d,%eax
2e6f(6): jz 0x546(%rip)
2e75(5): mov $0x1,0xc(%rsp)
2e7a(6): jl 0xd6(%rip)
2e80(5): jmp 0x2fb(%rip)
2e85(3): xor %r8d,%r8d
2e88(3): mov %r13,%rdx
2e8b(5): mov $0xffffff9c,%esi
2e90(3): mov %r15d,%edi
2e93(5): mov %r10b,0x10(%rsp)
2e98(5): call 0x10b8(%rip)
2e9d(3): test %r15d,%r15d
2ea0(2): mov %eax,%edx
2ea2(6): movzx 0x10(%rsp),%r10d
2ea8(2): jnz 0x24(%rip)
2eaa(2): xor %edi,%edi
2eac(5): mov %r10b,0x18(%rsp)
2eb1(4): mov %edx,0x10(%rsp)
2eb5(5): call 0xfffffa4b(%rip)
2eba(2): test %eax,%eax
2ebc(4): mov 0x10(%rsp),%edx
2ec0(6): movzx 0x18(%rsp),%r10d
2ec6(6): jnz 0x309(%rip)
2ecc(2): test %edx,%edx
2ece(6): jz 0x292(%rip)
2ed4(3): test %r14d,%r14d
2ed7(6): jnz 0x162(%rip)
2edd(5): call 0xfffff873(%rip)
2ee2(7): cmp $0x0,0x21225a(%rip)
2ee9(2): jz 0xb(%rip)
2eeb(3): cmp $0x2,(%rax)
2eee(6): jz 0x272(%rip)
2ef4(3): mov %r13,%rsi
2ef7(5): mov $0x4,%edi
2efc(5): call 0x76c4(%rip)
2f01(7): lea 0xc9c8(%rip),%rsi
2f08(5): mov $0x5,%edx
2f0d(2): xor %edi,%edi
2f0f(3): mov %rax,%r14
2f12(5): call 0xfffff8de(%rip)
2f17(3): mov %rax,%r13
2f1a(5): call 0xfffff836(%rip)
2f1f(2): mov (%rax),%esi
2f21(3): mov %r14,%rcx
2f24(3): mov %r13,%rdx
2f27(2): xor %edi,%edi
2f29(2): xor %eax,%eax
2f2b(5): call 0xfffffb45(%rip)
2f30(3): xor %r10d,%r10d
2f33(6): mov 0x212177(%rip),%eax
2f39(5): and %r10b,0xc(%rsp)
2f3e(3): add $0x1,%eax
2f41(3): cmp %r12d,%eax
2f44(6): mov %eax,0x212166(%rip)
2f4a(6): jnl 0x231(%rip)
2f50(2): cwde 
2f52(7): lea 0xd2e9(%rip),%rdi
2f59(5): mov $0x2,%ecx
2f5e(5): mov 0x0(%rbp,%rax,8),%r13
2f63(6): mov $0x1,%r15d
2f69(3): mov %r13,%rsi
2f6c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2f6e(4): setnbe %r9b
2f72(4): sbb $0x0,%r9b
2f76(4): movsx %r9b,%r14d
2f7a(3): test %r14d,%r14d
2f7d(2): jz 0x1e(%rip)
2f7f(7): cmp $0x0,0x2121bd(%rip)
2f86(2): jnz 0xf(%rip)
2f88(7): cmp $0x0,0x2121b2(%rip)
2f8f(6): jz 0x345(%rip)
2f95(3): mov %ebx,%r15d
2f98(3): xor %r14d,%r14d
2f9b(6): mov 0x2121a3(%rip),%eax
2fa1(3): cmp $0x3,%eax
2fa4(2): jz 0x1f(%rip)
2fa6(3): cmp $0x2,%eax
2fa9(6): jz 0x1c2(%rip)
2faf(3): sub $0x1,%eax
2fb2(6): jnz 0x433(%rip)
2fb8(b): mov $0x3ffffffe,0x212175(%rip)
2fc3(7): cmp $0x0,0x212176(%rip)
2fca(7): lea 0x21214f(%rip),%rax
2fd1(5): mov $0x0,%ecx
2fd6(4): cmove %rax,%rcx
2fda(4): cmp $0xff,%r15d
2fde(4): setz %r10b
2fe2(7): and 0x212158(%rip),%r10b
2fe9(6): jnz 0x1c9(%rip)
2fef(4): cmp $0x1,%r15d
2ff3(6): jnz 0xfffffe92(%rip)
2ff9(3): xor %r8d,%r8d
2ffc(2): xor %edx,%edx
2ffe(5): mov $0xffffff9c,%esi
3003(5): mov $0x1,%edi
3008(5): call 0xf48(%rip)
300d(2): test %eax,%eax
300f(6): jz 0x151(%rip)
3015(5): call 0xfffff73b(%rip)
301a(3): cmp $0x9,(%rax)
301d(6): jnz 0xfffffeb7(%rip)
3023(7): cmp $0x0,0x212119(%rip)
302a(6): jnz 0x136(%rip)
3030(3): test %r14d,%r14d
3033(6): jz 0xfffffec1(%rip)
3039(3): mov %r13,%rsi
303c(5): mov $0x4,%edi
3041(5): call 0x757f(%rip)
3046(7): lea 0xc873(%rip),%rsi
304d(3): mov %rax,%r13
3050(5): mov $0x5,%edx
3055(2): xor %edi,%edi
3057(5): call 0xfffff799(%rip)
305c(3): mov %r13,%rcx
305f(3): mov %rax,%rdx
3062(3): mov %r14d,%esi
3065(2): xor %edi,%edi
3067(2): xor %eax,%eax
3069(5): call 0xfffffa07(%rip)
306e(3): xor %r10d,%r10d
3071(5): jmp 0xfffffec2(%rip)
3076(2): test %al,%al
3078(6): jnz 0x1a3(%rip)
307e(3): test %r15,%r15
3081(6): jz 0xa5(%rip)
3087(5): lea 0x20(%rsp),%r13
308c(3): mov %r13,%rdi
308f(5): call 0xf51(%rip)
3094(7): lea 0x212085(%rip),%rdi
309b(3): mov %r13,%rdx
309e(3): mov %r15,%rsi
30a1(5): call 0x59f(%rip)
30a6(7): cmp $0x3,0x212097(%rip)
30ad(8): movdqa 0x21206b(%rip),%xmm0
30b5(7): movaps %xmm0,0x212074(%rip)
30bc(6): jnz 0xfffffdaa(%rip)
30c2(7): mov 0x212057(%rip),%rax
30c9(5): cmp 0x20(%rsp),%rax
30ce(6): jnz 0xfffffd98(%rip)
30d4(7): mov 0x21204d(%rip),%rdx
30db(5): cmp 0x28(%rsp),%rdx
30e0(6): jnz 0xfffffd86(%rip)
30e6(5): mov %rdx,0x38(%rsp)
30eb(5): lea 0x40(%rsp),%rdi
30f0(5): lea 0x30(%rsp),%rdx
30f5(4): xor $0x1,%rax
30f9(3): mov %r15,%rsi
30fc(5): mov %rax,0x30(%rsp)
3101(5): call 0x53f(%rip)
3106(5): mov 0x30(%rsp),%rax
310b(5): cmp %rax,0x40(%rsp)
3110(6): jnz 0xfffffd56(%rip)
3116(5): mov 0x38(%rsp),%rax
311b(5): cmp %rax,0x48(%rsp)
3120(6): jnz 0xfffffd46(%rip)
3126(3): mov %r12d,%eax
3129(6): sub 0x211f81(%rip),%eax
312f(3): sub $0x1,%eax
3132(6): jnle 0x204(%rip)
3138(7): cmp $0x3,0x212005(%rip)
313f(6): jz 0x1eb(%rip)
3145(b): mov $0x3fffffff,0x211fd8(%rip)
3150(b): mov $0x3fffffff,0x211fdd(%rip)
315b(5): jmp 0xfffffd0b(%rip)
3160(6): mov $0x1,%r10d
3166(5): jmp 0xfffffdcd(%rip)
316b(b): mov $0x3ffffffe,0x211fb2(%rip)
3176(5): jmp 0xfffffe4d(%rip)
317b(6): movzx 0xc(%rsp),%r14d
3181(4): xor $0x1,%r14d
3185(8): mov 0xe8(%rsp),%rdx
318d(9): xor $0x28,%rdx
3196(4): movzx %r14b,%eax
319a(6): jnz 0x246(%rip)
31a0(7): add $0xf8,%rsp
31a7(1): pop %rbx
31a8(1): pop %rbp
31a9(2): pop %r12
31ab(2): pop %r13
31ad(2): pop %r14
31af(2): pop %r15
31b1(1): ret near (%rsp)
31b2(3): mov %r13,%rdx
31b5(6): mov $0x100,%r8d
31bb(5): mov $0xffffff9c,%esi
31c0(3): mov %r15d,%edi
31c3(5): call 0xd8d(%rip)
31c8(2): mov %eax,%edx
31ca(5): jmp 0xfffffd02(%rip)
31cf(3): mov %r13,%rsi
31d2(5): mov $0x4,%edi
31d7(5): mov %r10b,0x10(%rsp)
31dc(5): call 0x73e4(%rip)
31e1(7): lea 0xc6c5(%rip),%rsi
31e8(5): mov $0x5,%edx
31ed(2): xor %edi,%edi
31ef(3): mov %rax,%r14
31f2(5): call 0xfffff5fe(%rip)
31f7(3): mov %rax,%r13
31fa(5): call 0xfffff556(%rip)
31ff(2): mov (%rax),%esi
3201(3): mov %r14,%rcx
3204(3): mov %r13,%rdx
3207(2): xor %edi,%edi
3209(2): xor %eax,%eax
320b(5): call 0xfffff865(%rip)
3210(6): movzx 0x10(%rsp),%r10d
3216(5): jmp 0xfffffd1d(%rip)
321b(7): cmp $0x0,0x211f1f(%rip)
3222(7): mov 0x211ed7(%rip),%r13
3229(5): lea 0x50(%rsp),%rdx
322e(5): mov $0x1,%edi
3233(3): mov %r13,%rsi
3236(6): jz 0xe5(%rip)
323c(5): call 0xfffff5e4(%rip)
3241(2): test %eax,%eax
3243(3): setnz %al
3246(2): test %al,%al
3248(6): jnz 0x28f(%rip)
324e(8): mov 0x98(%rsp),%rax
3256(3): test %r15,%r15
3259(7): mov %rax,0x211ec0(%rip)
3260(8): mov 0xa0(%rsp),%rax
3268(7): mov %rax,0x211eb9(%rip)
326f(8): mov 0xa8(%rsp),%rax
3277(7): mov %rax,0x211eb2(%rip)
327e(8): mov 0xb0(%rsp),%rax
3286(7): mov %rax,0x211eab(%rip)
328d(6): jz 0xfffffbd9(%rip)
3293(6): mov 0x211eab(%rip),%eax
3299(2): test $0x1,%al
329b(2): jz 0x1a(%rip)
329d(7): lea 0x211e7c(%rip),%rdx
32a4(3): mov %r15,%rsi
32a7(3): mov %rdx,%rdi
32aa(5): call 0x396(%rip)
32af(6): mov 0x211e8f(%rip),%eax
32b5(2): test $0x2,%al
32b7(6): jz 0xfffffbaf(%rip)
32bd(7): lea 0x211e6c(%rip),%rdx
32c4(3): mov %r15,%rsi
32c7(3): mov %rdx,%rdi
32ca(5): call 0x376(%rip)
32cf(5): jmp 0xfffffb97(%rip)
32d4(2): xor %edi,%edi
32d6(5): mov $0x1b6,%ecx
32db(5): mov $0x941,%edx
32e0(3): mov %r13,%rsi
32e3(3): xor %r14d,%r14d
32e6(5): call 0xc0a(%rip)
32eb(3): cmp $0xff,%eax
32ee(3): mov %eax,%r15d
32f1(6): jnz 0xfffffcaa(%rip)
32f7(5): call 0xfffff459(%rip)
32fc(3): mov (%rax),%r14d
32ff(4): lea 0xffffffeb(%r14),%eax
3303(3): cmp $0x1,%eax
3306(6): jbe 0xfffffc8f(%rip)
330c(4): cmp $0x1,%r14d
3310(6): jnz 0xfffffc8b(%rip)
3316(5): jmp 0xfffffc7f(%rip)
331b(5): call 0xfffff6a5(%rip)
3320(2): test %eax,%eax
3322(3): setnz %al
3325(5): jmp 0xffffff21(%rip)
332a(7): mov $0x1,0x211e0f(%rip)
3331(5): jmp 0xfffffb35(%rip)
3336(5): call 0x57ba(%rip)
333b(5): cmp $0x30daf,%eax
3340(6): jnle 0xfffffdf8(%rip)
3346(7): movsxd 0x211d63(%rip),%rax
334d(7): lea 0x211dcc(%rip),%rdi
3354(5): mov $0x9,%edx
3359(5): mov 0x0(%rbp,%rax,8),%rsi
335e(5): call 0x54a2(%rip)
3363(2): test %al,%al
3365(6): jz 0xfffffdd3(%rip)
336b(b): mov $0x0,0x211db2(%rip)
3376(7): lea 0xc4d4(%rip),%rdi
337d(8): movdqa 0x211d9b(%rip),%xmm0
3385(7): movaps %xmm0,0x211da4(%rip)
338c(5): call 0xfffff364(%rip)
3391(3): test %rax,%rax
3394(6): jz 0xa6(%rip)
339a(7): add $0x1,0x211d0f(%rip)
33a1(5): jmp 0xfffffac5(%rip)
33a6(6): cmp $0xffffff7e,%ebx
33ac(2): jnz 0x2a(%rip)
33ae(2): xor %edi,%edi
33b0(5): call 0x2e0(%rip)
33b5(7): lea 0xc4a5(%rip),%rsi
33bc(5): mov $0x5,%edx
33c1(2): xor %edi,%edi
33c3(5): call 0xfffff42d(%rip)
33c8(2): xor %esi,%esi
33ca(3): mov %rax,%rdx
33cd(2): xor %edi,%edi
33cf(2): xor %eax,%eax
33d1(5): call 0xfffff69f(%rip)
33d6(5): mov $0x1,%edi
33db(5): call 0x2b5(%rip)
33e0(5): call 0xfffff450(%rip)
33e5(7): lea 0xcc34(%rip),%rcx
33ec(7): lea 0xc483(%rip),%rsi
33f3(7): lea 0xc49a(%rip),%rdi
33fa(5): mov $0x99,%edx
33ff(5): call 0xfffff4d1(%rip)
3404(7): mov 0x211cad(%rip),%rdi
340b(5): call 0x7485(%rip)
3410(7): lea 0xc30d(%rip),%rsi
3417(3): mov %rax,%rbx
341a(5): mov $0x5,%edx
341f(2): xor %edi,%edi
3421(5): call 0xfffff3cf(%rip)
3426(3): mov %rbx,%rcx
3429(3): mov %rax,%rdx
342c(2): xor %esi,%esi
342e(5): mov $0x1,%edi
3433(2): xor %eax,%eax
3435(5): call 0xfffff63b(%rip)
343a(7): lea 0x211cdf(%rip),%rdi
3441(5): call 0xfffff2ef(%rip)
3446(3): test %rax,%rax
3449(6): jz 0xffffff51(%rip)
344f(3): mov (%rax),%r10d
3452(4): mov 0x4(%rax),%r9d
3456(7): lea 0xcb73(%rip),%rsi
345d(4): mov 0x8(%rax),%r15d
3461(4): mov 0xc(%rax),%r14d
3465(2): xor %edi,%edi
3467(3): mov 0x10(%rax),%edx
346a(4): movsxd 0x14(%rax),%r13
346e(7): movsxd 0x211c3b(%rip),%rax
3475(5): mov %r10d,0x1c(%rsp)
347a(5): mov %r9d,0x18(%rsp)
347f(3): add $0x1,%edx
3482(4): mov %edx,0xc(%rsp)
3486(5): mov $0x5,%edx
348b(7): add $0x76c,%r13
3492(5): mov 0x0(%rbp,%rax,8),%rcx
3497(5): mov %rcx,0x10(%rsp)
349c(5): call 0xfffff354(%rip)
34a1(5): mov 0x1c(%rsp),%r10d
34a6(3): mov %rax,%rdx
34a9(3): mov %r13,%r8
34ac(2): xor %esi,%esi
34ae(2): xor %edi,%edi
34b0(2): xor %eax,%eax
34b2(2): push %r10
34b4(5): mov 0x20(%rsp),%r9d
34b9(2): push %r9
34bb(2): push %r15
34bd(2): push %r14
34bf(5): mov 0x2c(%rsp),%r9d
34c4(5): mov 0x30(%rsp),%rcx
34c9(5): call 0xfffff5a7(%rip)
34ce(4): add $0x20,%rsp
34d2(5): jmp 0xfffffec8(%rip)
34d7(3): mov %r13,%rsi
34da(5): mov $0x4,%edi
34df(5): call 0x70e1(%rip)
34e4(7): lea 0xcac5(%rip),%rsi
34eb(5): mov $0x5,%edx
34f0(2): xor %edi,%edi
34f2(3): mov %rax,%rbp
34f5(5): call 0xfffff2fb(%rip)
34fa(3): mov %rax,%rbx
34fd(5): call 0xfffff253(%rip)
3502(2): mov (%rax),%esi
3504(3): mov %rbp,%rcx
3507(3): mov %rbx,%rdx
350a(5): mov $0x1,%edi
350f(2): xor %eax,%eax
3511(5): call 0xfffff55f(%rip)
3516(5): mov $0x5,%edx
351b(7): lea 0xca5e(%rip),%rsi
3522(5): jmp 0xfffffe9f(%rip)

"_start" :
3530(2): xor %ebp,%ebp
3532(3): mov %rdx,%r9
3535(1): pop %rsi
3536(3): mov %rsp,%rdx
3539(4): and $0xfffffff0,%rsp
353d(1): push %rax
353e(1): push %rsp
353f(7): lea 0xc1aa(%rip),%r8
3546(7): lea 0xc133(%rip),%rcx
354d(7): lea 0xfffff66c(%rip),%rdi
3554(6): call 0x211a86(%rip)
355a(1): hlt 

"deregister_tm_clones" :
3560(7): lea 0x211b39(%rip),%rdi
3567(1): push %rbp
3568(7): lea 0x211b31(%rip),%rax
356f(3): cmp %rdi,%rax
3572(3): mov %rsp,%rbp
3575(2): jz 0x1b(%rip)
3577(7): mov 0x211a5a(%rip),%rax
357e(3): test %rax,%rax
3581(2): jz 0xf(%rip)
3583(1): pop %rbp
3584(2): jmp %rax
3586(a): nop 0x0(%rax,%rax,1)
3590(1): pop %rbp
3591(1): ret near (%rsp)

"register_tm_clones" :
35a0(7): lea 0x211af9(%rip),%rdi
35a7(7): lea 0x211af2(%rip),%rsi
35ae(1): push %rbp
35af(3): sub %rdi,%rsi
35b2(3): mov %rsp,%rbp
35b5(4): sar $0x3,%rsi
35b9(3): mov %rsi,%rax
35bc(4): shr $0x3f,%rax
35c0(3): add %rax,%rsi
35c3(3): sar $0x1,%rsi
35c6(2): jz 0x1a(%rip)
35c8(7): mov 0x211a21(%rip),%rax
35cf(3): test %rax,%rax
35d2(2): jz 0xe(%rip)
35d4(1): pop %rbp
35d5(2): jmp %rax
35d7(9): nop 0x0(%rax,%rax,1)
35e0(1): pop %rbp
35e1(1): ret near (%rsp)

"__do_global_dtors_aux" :
35f0(7): cmp $0x0,0x211af1(%rip)
35f7(2): jnz 0x31(%rip)
35f9(8): cmp $0x0,0x2119f7(%rip)
3601(1): push %rbp
3602(3): mov %rsp,%rbp
3605(2): jz 0xe(%rip)
3607(7): mov 0x2119fa(%rip),%rdi
360e(5): call 0xfffff542(%rip)
3613(5): call 0xffffff4d(%rip)
3618(7): mov $0x1,0x211ac9(%rip)
361f(1): pop %rbp
3620(1): ret near (%rsp)
3621(7): nop 0x0(%rax)
3628(2): REP ret near (%rsp)

"frame_dummy" :
3630(1): push %rbp
3631(3): mov %rsp,%rbp
3634(1): pop %rbp
3635(5): jmp 0xffffff6b(%rip)

"get_reldate" :
3640(1): push %rbx
3641(3): mov %rsi,%rbx
3644(5): call 0x508c(%rip)
3649(2): test %al,%al
364b(2): jz 0x4(%rip)
364d(1): pop %rbx
364e(1): ret near (%rsp)
364f(3): mov %rbx,%rdi
3652(5): call 0x723e(%rip)
3657(7): lea 0xc0c6(%rip),%rsi
365e(3): mov %rax,%rbx
3661(5): mov $0x5,%edx
3666(2): xor %edi,%edi
3668(5): call 0xfffff188(%rip)
366d(3): mov %rbx,%rcx
3670(3): mov %rax,%rdx
3673(2): xor %esi,%esi
3675(5): mov $0x1,%edi
367a(2): xor %eax,%eax
367c(5): call 0xfffff3f4(%rip)
3681(5): nop 0x0(%rax,%rax,1)
3686(a): nop 0x0(%rax,%rax,1)
3690(2): push %r13
3692(2): push %r12
3694(5): mov $0x5,%edx
3699(1): push %rbp
369a(1): push %rbx
369b(2): mov %edi,%ebp
369d(7): sub $0x88,%rsp
36a4(7): mov 0x211aad(%rip),%rbx
36ab(9): mov $0x28,%rax
36b4(5): mov %rax,0x78(%rsp)
36b9(2): xor %eax,%eax
36bb(2): test %edi,%edi
36bd(2): jz 0x30(%rip)
36bf(7): lea 0xc26a(%rip),%rsi
36c6(2): xor %edi,%edi
36c8(5): call 0xfffff128(%rip)
36cd(7): mov 0x211a0c(%rip),%rdi
36d4(3): mov %rax,%rdx
36d7(3): mov %rbx,%rcx
36da(5): mov $0x1,%esi
36df(2): xor %eax,%eax
36e1(5): call 0xfffff40f(%rip)
36e6(2): mov %ebp,%edi
36e8(5): call 0xfffff3e8(%rip)
36ed(7): lea 0xc264(%rip),%rsi
36f4(2): xor %edi,%edi
36f6(5): call 0xfffff0fa(%rip)
36fb(3): mov %rbx,%rdx
36fe(3): mov %rax,%rsi
3701(5): mov $0x1,%edi
3706(2): xor %eax,%eax
3708(5): call 0xfffff338(%rip)
370d(7): mov 0x211994(%rip),%rbx
3714(7): lea 0xc25d(%rip),%rsi
371b(5): mov $0x5,%edx
3720(2): xor %edi,%edi
3722(5): call 0xfffff0ce(%rip)
3727(3): mov %rbx,%rsi
372a(3): mov %rax,%rdi
372d(5): call 0xfffff203(%rip)
3732(7): mov 0x21196f(%rip),%rbx
3739(7): lea 0xc360(%rip),%rsi
3740(5): mov $0x5,%edx
3745(2): xor %edi,%edi
3747(5): call 0xfffff0a9(%rip)
374c(3): mov %rbx,%rsi
374f(3): mov %rax,%rdi
3752(5): call 0xfffff1de(%rip)
3757(7): mov 0x21194a(%rip),%rbx
375e(7): lea 0xc38b(%rip),%rsi
3765(5): mov $0x5,%edx
376a(2): xor %edi,%edi
376c(5): call 0xfffff084(%rip)
3771(3): mov %rbx,%rsi
3774(3): mov %rax,%rdi
3777(5): call 0xfffff1b9(%rip)
377c(7): mov 0x211925(%rip),%rbx
3783(7): lea 0xc43e(%rip),%rsi
378a(5): mov $0x5,%edx
378f(2): xor %edi,%edi
3791(5): call 0xfffff05f(%rip)
3796(3): mov %rbx,%rsi
3799(3): mov %rax,%rdi
379c(5): call 0xfffff194(%rip)
37a1(7): mov 0x211900(%rip),%rbx
37a8(7): lea 0xc521(%rip),%rsi
37af(5): mov $0x5,%edx
37b4(2): xor %edi,%edi
37b6(5): call 0xfffff03a(%rip)
37bb(3): mov %rbx,%rsi
37be(3): mov %rax,%rdi
37c1(5): call 0xfffff16f(%rip)
37c6(7): mov 0x2118db(%rip),%rbx
37cd(7): lea 0xc654(%rip),%rsi
37d4(5): mov $0x5,%edx
37d9(2): xor %edi,%edi
37db(5): call 0xfffff015(%rip)
37e0(3): mov %rbx,%rsi
37e3(3): mov %rax,%rdi
37e6(5): call 0xfffff14a(%rip)
37eb(7): mov 0x2118b6(%rip),%rbx
37f2(7): lea 0xc65f(%rip),%rsi
37f9(5): mov $0x5,%edx
37fe(2): xor %edi,%edi
3800(5): call 0xffffeff0(%rip)
3805(3): mov %rbx,%rsi
3808(3): mov %rax,%rdi
380b(5): call 0xfffff125(%rip)
3810(7): mov 0x211891(%rip),%rbx
3817(7): lea 0xc672(%rip),%rsi
381e(5): mov $0x5,%edx
3823(2): xor %edi,%edi
3825(5): call 0xffffefcb(%rip)
382a(3): mov %rbx,%rsi
382d(3): mov %rax,%rdi
3830(7): lea 0xbf04(%rip),%rbx
3837(5): call 0xfffff0f9(%rip)
383c(7): lea 0xbefe(%rip),%rax
3843(7): lea 0xbf38(%rip),%rcx
384a(9): mov $0x0,0x60(%rsp)
3853(9): mov $0x0,0x68(%rsp)
385c(3): mov %rsp,%rdx
385f(4): mov %rax,(%rsp)
3863(7): lea 0xbed9(%rip),%rax
386a(5): mov %rcx,0x30(%rsp)
386f(7): lea 0xbf16(%rip),%rcx
3876(5): mov %rax,0x8(%rsp)
387b(7): lea 0xbf39(%rip),%rax
3882(5): mov %rcx,0x40(%rsp)
3887(7): lea 0xbf08(%rip),%rcx
388e(5): mov %rax,0x10(%rsp)
3893(7): lea 0xbeb9(%rip),%rax
389a(5): mov %rcx,0x50(%rsp)
389f(5): mov %rax,0x18(%rsp)
38a4(7): lea 0xbebe(%rip),%rax
38ab(5): mov %rax,0x20(%rsp)
38b0(7): lea 0xbebc(%rip),%rax
38b7(5): mov %rax,0x28(%rsp)
38bc(5): mov %rax,0x38(%rsp)
38c1(5): mov %rax,0x48(%rsp)
38c6(5): mov %rax,0x58(%rsp)
38cb(5): nop 0x0(%rax,%rax,1)
38d0(4): add $0x10,%rdx
38d4(3): mov (%rdx),%rdi
38d7(3): test %rdi,%rdi
38da(2): jz 0x15(%rip)
38dc(5): mov $0x6,%ecx
38e1(3): mov %rbx,%rsi
38e4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
38e6(3): setnbe %al
38e9(2): sbb $0x0,%al
38eb(2): test %al,%al
38ed(2): jnz 0xffffffe3(%rip)
38ef(4): mov 0x8(%rdx),%r12
38f3(2): xor %edi,%edi
38f5(5): mov $0x5,%edx
38fa(7): lea 0xbe9f(%rip),%rsi
3901(3): test %r12,%r12
3904(6): jz 0xc7(%rip)
390a(5): call 0xffffeee6(%rip)
390f(7): lea 0xc5c2(%rip),%rcx
3916(7): lea 0xbe9a(%rip),%rdx
391d(3): mov %rax,%rsi
3920(5): mov $0x1,%edi
3925(2): xor %eax,%eax
3927(5): call 0xfffff119(%rip)
392c(2): xor %esi,%esi
392e(5): mov $0x5,%edi
3933(5): call 0xfffff0fd(%rip)
3938(3): test %rax,%rax
393b(2): jz 0x1e(%rip)
393d(7): lea 0xbe81(%rip),%rsi
3944(5): mov $0x3,%edx
3949(3): mov %rax,%rdi
394c(5): call 0xffffee14(%rip)
3951(2): test %eax,%eax
3953(6): jnz 0x10d(%rip)
3959(7): lea 0xbe69(%rip),%rsi
3960(2): xor %edi,%edi
3962(5): mov $0x5,%edx
3967(5): call 0xffffee89(%rip)
396c(7): lea 0xbdc8(%rip),%rcx
3973(7): lea 0xc55e(%rip),%rdx
397a(3): mov %rax,%rsi
397d(5): mov $0x1,%edi
3982(2): xor %eax,%eax
3984(5): call 0xfffff0bc(%rip)
3989(3): cmp %rbx,%r12
398c(7): lea 0xbdca(%rip),%rcx
3993(7): lea 0xc9dc(%rip),%rbx
399a(4): cmove %rcx,%rbx
399e(7): lea 0xc5a3(%rip),%rsi
39a5(2): xor %edi,%edi
39a7(5): mov $0x5,%edx
39ac(5): call 0xffffee44(%rip)
39b1(3): mov %rbx,%rcx
39b4(3): mov %rax,%rsi
39b7(3): mov %r12,%rdx
39ba(5): mov $0x1,%edi
39bf(2): xor %eax,%eax
39c1(5): call 0xfffff07f(%rip)
39c6(5): jmp 0xfffffd20(%rip)
39cb(5): call 0xffffee25(%rip)
39d0(7): lea 0xc501(%rip),%rcx
39d7(7): lea 0xbdd9(%rip),%rdx
39de(3): mov %rax,%rsi
39e1(5): mov $0x1,%edi
39e6(2): xor %eax,%eax
39e8(5): call 0xfffff058(%rip)
39ed(2): xor %esi,%esi
39ef(5): mov $0x5,%edi
39f4(5): call 0xfffff03c(%rip)
39f9(3): test %rax,%rax
39fc(2): jz 0x1a(%rip)
39fe(7): lea 0xbdc0(%rip),%rsi
3a05(5): mov $0x3,%edx
3a0a(3): mov %rax,%rdi
3a0d(5): call 0xffffed53(%rip)
3a12(2): test %eax,%eax
3a14(2): jnz 0x45(%rip)
3a16(7): lea 0xbdac(%rip),%rsi
3a1d(5): mov $0x5,%edx
3a22(2): xor %edi,%edi
3a24(7): lea 0xbd10(%rip),%r12
3a2b(7): lea 0xbd2b(%rip),%rbx
3a32(5): call 0xffffedbe(%rip)
3a37(7): lea 0xbcfd(%rip),%rcx
3a3e(7): lea 0xc493(%rip),%rdx
3a45(3): mov %rax,%rsi
3a48(5): mov $0x1,%edi
3a4d(2): xor %eax,%eax
3a4f(5): call 0xffffeff1(%rip)
3a54(5): jmp 0xffffff4a(%rip)
3a59(7): lea 0xbcdb(%rip),%r12
3a60(7): mov 0x211641(%rip),%r13
3a67(7): lea 0xc492(%rip),%rsi
3a6e(2): xor %edi,%edi
3a70(5): mov $0x5,%edx
3a75(5): call 0xffffed7b(%rip)
3a7a(3): mov %r13,%rsi
3a7d(3): mov %rax,%rdi
3a80(5): call 0xffffeeb0(%rip)
3a85(5): jmp 0xfffffed4(%rip)

"usage" :
3690(2): push %r13
3692(2): push %r12
3694(5): mov $0x5,%edx
3699(1): push %rbp
369a(1): push %rbx
369b(2): mov %edi,%ebp
369d(7): sub $0x88,%rsp
36a4(7): mov 0x211aad(%rip),%rbx
36ab(9): mov $0x28,%rax
36b4(5): mov %rax,0x78(%rsp)
36b9(2): xor %eax,%eax
36bb(2): test %edi,%edi
36bd(2): jz 0x30(%rip)
36bf(7): lea 0xc26a(%rip),%rsi
36c6(2): xor %edi,%edi
36c8(5): call 0xfffff128(%rip)
36cd(7): mov 0x211a0c(%rip),%rdi
36d4(3): mov %rax,%rdx
36d7(3): mov %rbx,%rcx
36da(5): mov $0x1,%esi
36df(2): xor %eax,%eax
36e1(5): call 0xfffff40f(%rip)
36e6(2): mov %ebp,%edi
36e8(5): call 0xfffff3e8(%rip)
36ed(7): lea 0xc264(%rip),%rsi
36f4(2): xor %edi,%edi
36f6(5): call 0xfffff0fa(%rip)
36fb(3): mov %rbx,%rdx
36fe(3): mov %rax,%rsi
3701(5): mov $0x1,%edi
3706(2): xor %eax,%eax
3708(5): call 0xfffff338(%rip)
370d(7): mov 0x211994(%rip),%rbx
3714(7): lea 0xc25d(%rip),%rsi
371b(5): mov $0x5,%edx
3720(2): xor %edi,%edi
3722(5): call 0xfffff0ce(%rip)
3727(3): mov %rbx,%rsi
372a(3): mov %rax,%rdi
372d(5): call 0xfffff203(%rip)
3732(7): mov 0x21196f(%rip),%rbx
3739(7): lea 0xc360(%rip),%rsi
3740(5): mov $0x5,%edx
3745(2): xor %edi,%edi
3747(5): call 0xfffff0a9(%rip)
374c(3): mov %rbx,%rsi
374f(3): mov %rax,%rdi
3752(5): call 0xfffff1de(%rip)
3757(7): mov 0x21194a(%rip),%rbx
375e(7): lea 0xc38b(%rip),%rsi
3765(5): mov $0x5,%edx
376a(2): xor %edi,%edi
376c(5): call 0xfffff084(%rip)
3771(3): mov %rbx,%rsi
3774(3): mov %rax,%rdi
3777(5): call 0xfffff1b9(%rip)
377c(7): mov 0x211925(%rip),%rbx
3783(7): lea 0xc43e(%rip),%rsi
378a(5): mov $0x5,%edx
378f(2): xor %edi,%edi
3791(5): call 0xfffff05f(%rip)
3796(3): mov %rbx,%rsi
3799(3): mov %rax,%rdi
379c(5): call 0xfffff194(%rip)
37a1(7): mov 0x211900(%rip),%rbx
37a8(7): lea 0xc521(%rip),%rsi
37af(5): mov $0x5,%edx
37b4(2): xor %edi,%edi
37b6(5): call 0xfffff03a(%rip)
37bb(3): mov %rbx,%rsi
37be(3): mov %rax,%rdi
37c1(5): call 0xfffff16f(%rip)
37c6(7): mov 0x2118db(%rip),%rbx
37cd(7): lea 0xc654(%rip),%rsi
37d4(5): mov $0x5,%edx
37d9(2): xor %edi,%edi
37db(5): call 0xfffff015(%rip)
37e0(3): mov %rbx,%rsi
37e3(3): mov %rax,%rdi
37e6(5): call 0xfffff14a(%rip)
37eb(7): mov 0x2118b6(%rip),%rbx
37f2(7): lea 0xc65f(%rip),%rsi
37f9(5): mov $0x5,%edx
37fe(2): xor %edi,%edi
3800(5): call 0xffffeff0(%rip)
3805(3): mov %rbx,%rsi
3808(3): mov %rax,%rdi
380b(5): call 0xfffff125(%rip)
3810(7): mov 0x211891(%rip),%rbx
3817(7): lea 0xc672(%rip),%rsi
381e(5): mov $0x5,%edx
3823(2): xor %edi,%edi
3825(5): call 0xffffefcb(%rip)
382a(3): mov %rbx,%rsi
382d(3): mov %rax,%rdi
3830(7): lea 0xbf04(%rip),%rbx
3837(5): call 0xfffff0f9(%rip)
383c(7): lea 0xbefe(%rip),%rax
3843(7): lea 0xbf38(%rip),%rcx
384a(9): mov $0x0,0x60(%rsp)
3853(9): mov $0x0,0x68(%rsp)
385c(3): mov %rsp,%rdx
385f(4): mov %rax,(%rsp)
3863(7): lea 0xbed9(%rip),%rax
386a(5): mov %rcx,0x30(%rsp)
386f(7): lea 0xbf16(%rip),%rcx
3876(5): mov %rax,0x8(%rsp)
387b(7): lea 0xbf39(%rip),%rax
3882(5): mov %rcx,0x40(%rsp)
3887(7): lea 0xbf08(%rip),%rcx
388e(5): mov %rax,0x10(%rsp)
3893(7): lea 0xbeb9(%rip),%rax
389a(5): mov %rcx,0x50(%rsp)
389f(5): mov %rax,0x18(%rsp)
38a4(7): lea 0xbebe(%rip),%rax
38ab(5): mov %rax,0x20(%rsp)
38b0(7): lea 0xbebc(%rip),%rax
38b7(5): mov %rax,0x28(%rsp)
38bc(5): mov %rax,0x38(%rsp)
38c1(5): mov %rax,0x48(%rsp)
38c6(5): mov %rax,0x58(%rsp)
38cb(5): nop 0x0(%rax,%rax,1)
38d0(4): add $0x10,%rdx
38d4(3): mov (%rdx),%rdi
38d7(3): test %rdi,%rdi
38da(2): jz 0x15(%rip)
38dc(5): mov $0x6,%ecx
38e1(3): mov %rbx,%rsi
38e4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
38e6(3): setnbe %al
38e9(2): sbb $0x0,%al
38eb(2): test %al,%al
38ed(2): jnz 0xffffffe3(%rip)
38ef(4): mov 0x8(%rdx),%r12
38f3(2): xor %edi,%edi
38f5(5): mov $0x5,%edx
38fa(7): lea 0xbe9f(%rip),%rsi
3901(3): test %r12,%r12
3904(6): jz 0xc7(%rip)
390a(5): call 0xffffeee6(%rip)
390f(7): lea 0xc5c2(%rip),%rcx
3916(7): lea 0xbe9a(%rip),%rdx
391d(3): mov %rax,%rsi
3920(5): mov $0x1,%edi
3925(2): xor %eax,%eax
3927(5): call 0xfffff119(%rip)
392c(2): xor %esi,%esi
392e(5): mov $0x5,%edi
3933(5): call 0xfffff0fd(%rip)
3938(3): test %rax,%rax
393b(2): jz 0x1e(%rip)
393d(7): lea 0xbe81(%rip),%rsi
3944(5): mov $0x3,%edx
3949(3): mov %rax,%rdi
394c(5): call 0xffffee14(%rip)
3951(2): test %eax,%eax
3953(6): jnz 0x10d(%rip)
3959(7): lea 0xbe69(%rip),%rsi
3960(2): xor %edi,%edi
3962(5): mov $0x5,%edx
3967(5): call 0xffffee89(%rip)
396c(7): lea 0xbdc8(%rip),%rcx
3973(7): lea 0xc55e(%rip),%rdx
397a(3): mov %rax,%rsi
397d(5): mov $0x1,%edi
3982(2): xor %eax,%eax
3984(5): call 0xfffff0bc(%rip)
3989(3): cmp %rbx,%r12
398c(7): lea 0xbdca(%rip),%rcx
3993(7): lea 0xc9dc(%rip),%rbx
399a(4): cmove %rcx,%rbx
399e(7): lea 0xc5a3(%rip),%rsi
39a5(2): xor %edi,%edi
39a7(5): mov $0x5,%edx
39ac(5): call 0xffffee44(%rip)
39b1(3): mov %rbx,%rcx
39b4(3): mov %rax,%rsi
39b7(3): mov %r12,%rdx
39ba(5): mov $0x1,%edi
39bf(2): xor %eax,%eax
39c1(5): call 0xfffff07f(%rip)
39c6(5): jmp 0xfffffd20(%rip)
39cb(5): call 0xffffee25(%rip)
39d0(7): lea 0xc501(%rip),%rcx
39d7(7): lea 0xbdd9(%rip),%rdx
39de(3): mov %rax,%rsi
39e1(5): mov $0x1,%edi
39e6(2): xor %eax,%eax
39e8(5): call 0xfffff058(%rip)
39ed(2): xor %esi,%esi
39ef(5): mov $0x5,%edi
39f4(5): call 0xfffff03c(%rip)
39f9(3): test %rax,%rax
39fc(2): jz 0x1a(%rip)
39fe(7): lea 0xbdc0(%rip),%rsi
3a05(5): mov $0x3,%edx
3a0a(3): mov %rax,%rdi
3a0d(5): call 0xffffed53(%rip)
3a12(2): test %eax,%eax
3a14(2): jnz 0x45(%rip)
3a16(7): lea 0xbdac(%rip),%rsi
3a1d(5): mov $0x5,%edx
3a22(2): xor %edi,%edi
3a24(7): lea 0xbd10(%rip),%r12
3a2b(7): lea 0xbd2b(%rip),%rbx
3a32(5): call 0xffffedbe(%rip)
3a37(7): lea 0xbcfd(%rip),%rcx
3a3e(7): lea 0xc493(%rip),%rdx
3a45(3): mov %rax,%rsi
3a48(5): mov $0x1,%edi
3a4d(2): xor %eax,%eax
3a4f(5): call 0xffffeff1(%rip)
3a54(5): jmp 0xffffff4a(%rip)
3a59(7): lea 0xbcdb(%rip),%r12
3a60(7): mov 0x211641(%rip),%r13
3a67(7): lea 0xc492(%rip),%rsi
3a6e(2): xor %edi,%edi
3a70(5): mov $0x5,%edx
3a75(5): call 0xffffed7b(%rip)
3a7a(3): mov %r13,%rsi
3a7d(3): mov %rax,%rdi
3a80(5): call 0xffffeeb0(%rip)
3a85(5): jmp 0xfffffed4(%rip)

"__argmatch_die" :
3a90(5): mov $0x1,%edi
3a95(5): jmp 0xfffffbfb(%rip)

"argmatch" :
3aa0(2): push %r15
3aa2(2): push %r14
3aa4(3): mov %rsi,%r15
3aa7(2): push %r13
3aa9(2): push %r12
3aab(3): mov %rcx,%r13
3aae(1): push %rbp
3aaf(1): push %rbx
3ab0(3): mov %rdx,%rbp
3ab3(4): sub $0x28,%rsp
3ab7(5): mov %rdi,0x8(%rsp)
3abc(5): mov %rdx,0x18(%rsp)
3ac1(5): call 0xffffed4f(%rip)
3ac6(3): mov (%r15),%r14
3ac9(8): mov $0xffffffff,(%rsp)
3ad1(3): test %r14,%r14
3ad4(6): jz 0xb9(%rip)
3ada(3): mov %rax,%r12
3add(5): mov $0x0,0x17(%rsp)
3ae2(2): xor %ebx,%ebx
3ae4(2): jmp 0x53(%rip)
3ae6(a): nop 0x0(%rax,%rax,1)
3af0(5): mov 0x18(%rsp),%rax
3af5(3): test %rax,%rax
3af8(6): jz 0xa8(%rip)
3afe(4): mov (%rsp),%rdi
3b02(3): mov %r13,%rdx
3b05(3): mov %rbp,%rsi
3b08(4): imul %r13,%rdi
3b0c(3): add %rax,%rdi
3b0f(5): call 0xffffee11(%rip)
3b14(2): test %eax,%eax
3b16(5): movzx 0x17(%rsp),%eax
3b1b(5): mov $0x1,%ecx
3b20(3): cmovne %ecx,%eax
3b23(4): mov %al,0x17(%rsp)
3b27(4): add $0x1,%rbx
3b2b(3): add %r13,%rbp
3b2e(4): mov 0x0(%r15,%rbx,8),%r14
3b32(3): test %r14,%r14
3b35(2): jz 0x43(%rip)
3b37(5): mov 0x8(%rsp),%rsi
3b3c(3): mov %r12,%rdx
3b3f(3): mov %r14,%rdi
3b42(5): call 0xffffec1e(%rip)
3b47(2): test %eax,%eax
3b49(2): jnz 0xffffffde(%rip)
3b4b(3): mov %r14,%rdi
3b4e(5): call 0xffffecc2(%rip)
3b53(3): cmp %r12,%rax
3b56(2): jz 0x5a(%rip)
3b58(5): cmp $0xffffffff,(%rsp)
3b5d(2): jnz 0xffffff93(%rip)
3b5f(4): mov %rbx,(%rsp)
3b63(4): add $0x1,%rbx
3b67(3): add %r13,%rbp
3b6a(4): mov 0x0(%r15,%rbx,8),%r14
3b6e(3): test %r14,%r14
3b71(2): jnz 0xffffffc6(%rip)
3b73(5): nop 0x0(%rax,%rax,1)
3b78(5): cmp $0x0,0x17(%rsp)
3b7d(7): mov $0xfffffffe,%rax
3b84(5): cmove (%rsp),%rax
3b89(4): mov %rax,(%rsp)
3b8d(4): mov (%rsp),%rax
3b91(4): add $0x28,%rsp
3b95(1): pop %rbx
3b96(1): pop %rbp
3b97(2): pop %r12
3b99(2): pop %r13
3b9b(2): pop %r14
3b9d(2): pop %r15
3b9f(1): ret near (%rsp)
3ba0(5): mov $0x1,0x17(%rsp)
3ba5(2): jmp 0xffffff82(%rip)
3ba7(9): nop 0x0(%rax,%rax,1)
3bb0(4): mov %rbx,(%rsp)
3bb4(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
3bc0(4): cmp $0xffffffff,%rdx
3bc4(2): push %r12
3bc6(5): mov $0x5,%edx
3bcb(1): push %rbp
3bcc(3): mov %rsi,%r12
3bcf(1): push %rbx
3bd0(3): mov %rdi,%rbp
3bd3(2): jz 0x4d(%rip)
3bd5(7): lea 0xc488(%rip),%rsi
3bdc(2): xor %edi,%edi
3bde(5): call 0xffffec12(%rip)
3be3(3): mov %rax,%rbx
3be6(3): mov %rbp,%rsi
3be9(5): mov $0x1,%edi
3bee(5): call 0x6c82(%rip)
3bf3(3): mov %r12,%rdx
3bf6(3): mov %rax,%rbp
3bf9(5): mov $0x8,%esi
3bfe(2): xor %edi,%edi
3c00(5): call 0x68a0(%rip)
3c05(3): mov %rbp,%r8
3c08(3): mov %rbx,%rdx
3c0b(3): mov %rax,%rcx
3c0e(1): pop %rbx
3c0f(1): pop %rbp
3c10(2): pop %r12
3c12(2): xor %esi,%esi
3c14(2): xor %edi,%edi
3c16(2): xor %eax,%eax
3c18(5): jmp 0xffffee58(%rip)
3c1d(3): nop (%rax)
3c20(7): lea 0xc422(%rip),%rsi
3c27(2): xor %edi,%edi
3c29(5): call 0xffffebc7(%rip)
3c2e(3): mov %rax,%rbx
3c31(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
3c40(2): push %r15
3c42(2): push %r14
3c44(3): mov %rdi,%r14
3c47(2): push %r13
3c49(2): push %r12
3c4b(2): xor %edi,%edi
3c4d(1): push %rbp
3c4e(1): push %rbx
3c4f(3): mov %rsi,%rbp
3c52(7): lea 0xc428(%rip),%rsi
3c59(3): mov %rdx,%r12
3c5c(5): mov $0x5,%edx
3c61(4): sub $0x8,%rsp
3c65(7): mov 0x211474(%rip),%rbx
3c6c(5): call 0xffffeb84(%rip)
3c71(3): mov %rax,%rdi
3c74(3): mov %rbx,%rsi
3c77(5): call 0xffffecb9(%rip)
3c7c(3): mov (%r14),%r15
3c7f(3): test %r15,%r15
3c82(6): jz 0x96(%rip)
3c88(3): xor %r13d,%r13d
3c8b(2): xor %ebx,%ebx
3c8d(2): jmp 0x3b(%rip)
3c8f(1): nop 
3c90(3): mov %r15,%rdi
3c93(4): add $0x1,%rbx
3c97(3): mov %rbp,%r13
3c9a(5): call 0x6bf6(%rip)
3c9f(7): mov 0x21143a(%rip),%rdi
3ca6(7): lea 0xc3e9(%rip),%rdx
3cad(3): mov %rax,%rcx
3cb0(5): mov $0x1,%esi
3cb5(2): xor %eax,%eax
3cb7(3): add %r12,%rbp
3cba(5): call 0xffffee36(%rip)
3cbf(4): mov 0x0(%r14,%rbx,8),%r15
3cc3(3): test %r15,%r15
3cc6(2): jz 0x52(%rip)
3cc8(3): test %rbx,%rbx
3ccb(2): jz 0xffffffc5(%rip)
3ccd(3): mov %r12,%rdx
3cd0(3): mov %rbp,%rsi
3cd3(3): mov %r13,%rdi
3cd6(5): call 0xffffec4a(%rip)
3cdb(2): test %eax,%eax
3cdd(2): jnz 0xffffffb3(%rip)
3cdf(3): mov %r15,%rdi
3ce2(4): add $0x1,%rbx
3ce6(3): add %r12,%rbp
3ce9(5): call 0x6ba7(%rip)
3cee(7): mov 0x2113eb(%rip),%rdi
3cf5(7): lea 0xc3a2(%rip),%rdx
3cfc(3): mov %rax,%rcx
3cff(5): mov $0x1,%esi
3d04(2): xor %eax,%eax
3d06(5): call 0xffffedea(%rip)
3d0b(4): mov 0x0(%r14,%rbx,8),%r15
3d0f(3): test %r15,%r15
3d12(2): jnz 0xffffffb6(%rip)
3d14(4): nop 0x0(%rax)
3d18(7): mov 0x2113c1(%rip),%rdi
3d1f(4): mov 0x28(%rdi),%rax
3d23(4): cmp 0x30(%rdi),%rax
3d27(2): jnb 0x21(%rip)
3d29(4): lea 0x1(%rax),%rdx
3d2d(4): mov %rdx,0x28(%rdi)
3d31(3): mov $0xa,(%rax)
3d34(4): add $0x8,%rsp
3d38(1): pop %rbx
3d39(1): pop %rbp
3d3a(2): pop %r12
3d3c(2): pop %r13
3d3e(2): pop %r14
3d40(2): pop %r15
3d42(1): ret near (%rsp)
3d43(5): nop 0x0(%rax,%rax,1)
3d48(4): add $0x8,%rsp
3d4c(5): mov $0xa,%esi
3d51(1): pop %rbx
3d52(1): pop %rbp
3d53(2): pop %r12
3d55(2): pop %r13
3d57(2): pop %r14
3d59(2): pop %r15
3d5b(5): jmp 0xffffeb35(%rip)

"__xargmatch_internal" :
3d60(2): push %r15
3d62(2): push %r14
3d64(3): mov %rdi,%r14
3d67(2): push %r13
3d69(2): push %r12
3d6b(3): mov %rsi,%r12
3d6e(1): push %rbp
3d6f(1): push %rbx
3d70(3): mov %rcx,%rbp
3d73(3): mov %rdx,%rbx
3d76(3): mov %r8,%rcx
3d79(3): mov %rbp,%rdx
3d7c(4): sub $0x8,%rsp
3d80(3): mov %rbx,%rsi
3d83(3): mov %r12,%rdi
3d86(3): mov %r8,%r15
3d89(3): mov %r9,%r13
3d8c(5): call 0xfffffd14(%rip)
3d91(3): test %rax,%rax
3d94(2): js 0x11(%rip)
3d96(4): add $0x8,%rsp
3d9a(1): pop %rbx
3d9b(1): pop %rbp
3d9c(2): pop %r12
3d9e(2): pop %r13
3da0(2): pop %r14
3da2(2): pop %r15
3da4(1): ret near (%rsp)
3da5(3): mov %rax,%rdx
3da8(3): mov %r12,%rsi
3dab(3): mov %r14,%rdi
3dae(5): call 0xfffffe12(%rip)
3db3(3): mov %r15,%rdx
3db6(3): mov %rbp,%rsi
3db9(3): mov %rbx,%rdi
3dbc(5): call 0xfffffe84(%rip)
3dc1(3): call %r13
3dc4(7): mov $0xffffffff,%rax
3dcb(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
3dd0(2): push %r14
3dd2(2): push %r13
3dd4(2): push %r12
3dd6(1): push %rbp
3dd7(1): push %rbx
3dd8(3): mov (%rsi),%r14
3ddb(3): test %r14,%r14
3dde(2): jz 0x33(%rip)
3de0(3): mov %rcx,%r12
3de3(3): mov %rdi,%r13
3de6(3): mov %rdx,%rbp
3de9(4): lea 0x8(%rsi),%rbx
3ded(2): jmp 0x12(%rip)
3def(1): nop 
3df0(3): mov (%rbx),%r14
3df3(3): add %r12,%rbp
3df6(4): add $0x8,%rbx
3dfa(3): test %r14,%r14
3dfd(2): jz 0x14(%rip)
3dff(3): mov %r12,%rdx
3e02(3): mov %rbp,%rsi
3e05(3): mov %r13,%rdi
3e08(5): call 0xffffeb18(%rip)
3e0d(2): test %eax,%eax
3e0f(2): jnz 0xffffffe1(%rip)
3e11(1): pop %rbx
3e12(3): mov %r14,%rax
3e15(1): pop %rbp
3e16(2): pop %r12
3e18(2): pop %r13
3e1a(2): pop %r14
3e1c(1): ret near (%rsp)

"close_stdout_set_file_name" :
3e20(7): mov %rdi,0x211329(%rip)
3e27(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3e30(7): mov %dil,0x211311(%rip)
3e37(1): ret near (%rsp)

"close_stdout" :
3e40(1): push %rbp
3e41(1): push %rbx
3e42(4): sub $0x8,%rsp
3e46(7): mov 0x21125b(%rip),%rdi
3e4d(5): call 0x7a23(%rip)
3e52(2): test %eax,%eax
3e54(2): jz 0x18(%rip)
3e56(5): call 0xffffe8fa(%rip)
3e5b(7): cmp $0x0,0x2112e6(%rip)
3e62(3): mov %rax,%rbx
3e65(2): jz 0x1e(%rip)
3e67(3): cmp $0x20,(%rax)
3e6a(2): jnz 0x19(%rip)
3e6c(7): mov 0x21126d(%rip),%rdi
3e73(5): call 0x79fd(%rip)
3e78(2): test %eax,%eax
3e7a(2): jnz 0x48(%rip)
3e7c(4): add $0x8,%rsp
3e80(1): pop %rbx
3e81(1): pop %rbp
3e82(1): ret near (%rsp)
3e83(7): lea 0xc219(%rip),%rsi
3e8a(2): xor %edi,%edi
3e8c(5): mov $0x5,%edx
3e91(5): call 0xffffe95f(%rip)
3e96(7): mov 0x2112b3(%rip),%rdi
3e9d(3): mov %rax,%rbp
3ea0(3): test %rdi,%rdi
3ea3(2): jz 0x2a(%rip)
3ea5(5): call 0x67eb(%rip)
3eaa(2): mov (%rbx),%esi
3eac(7): lea 0xc1fc(%rip),%rdx
3eb3(3): mov %rax,%rcx
3eb6(3): mov %rbp,%r8
3eb9(2): xor %edi,%edi
3ebb(2): xor %eax,%eax
3ebd(5): call 0xffffebb3(%rip)
3ec2(6): mov 0x211158(%rip),%edi
3ec8(5): call 0xffffe8b8(%rip)
3ecd(2): mov (%rbx),%esi
3ecf(7): lea 0xc1ca(%rip),%rdx
3ed6(3): mov %rax,%rcx
3ed9(2): xor %edi,%edi
3edb(2): xor %eax,%eax
3edd(5): call 0xffffeb93(%rip)
3ee2(2): jmp 0xffffffe0(%rip)

"fd_reopen" :
3ef0(2): push %r13
3ef2(2): push %r12
3ef4(2): xor %eax,%eax
3ef6(1): push %rbp
3ef7(1): push %rbx
3ef8(2): mov %edi,%ebp
3efa(3): mov %rsi,%rdi
3efd(2): mov %edx,%esi
3eff(2): mov %ecx,%edx
3f01(4): sub $0x8,%rsp
3f05(5): call 0xffffeb7b(%rip)
3f0a(2): cmp %eax,%ebp
3f0c(2): mov %eax,%ebx
3f0e(2): jz 0x2b(%rip)
3f10(2): test %eax,%eax
3f12(2): js 0x27(%rip)
3f14(2): mov %ebp,%esi
3f16(2): mov %eax,%edi
3f18(5): call 0xffffe948(%rip)
3f1d(3): mov %eax,%r12d
3f20(5): call 0xffffe830(%rip)
3f25(3): mov (%rax),%r13d
3f28(3): mov %rax,%rbp
3f2b(2): mov %ebx,%edi
3f2d(5): call 0xffffe9d3(%rip)
3f32(3): mov %r12d,%ebx
3f35(4): mov %r13d,0x0(%rbp)
3f39(4): add $0x8,%rsp
3f3d(2): mov %ebx,%eax
3f3f(1): pop %rbx
3f40(1): pop %rbp
3f41(2): pop %r12
3f43(2): pop %r13
3f45(1): ret near (%rsp)

"fdutimensat" :
3f50(2): push %r13
3f52(2): push %r12
3f54(3): mov %r8d,%r13d
3f57(1): push %rbp
3f58(1): push %rbx
3f59(3): mov %esi,%r12d
3f5c(3): mov %rdx,%rbx
3f5f(3): mov %rcx,%rbp
3f62(4): sub $0x8,%rsp
3f66(2): test %edi,%edi
3f68(2): jns 0x28(%rip)
3f6a(3): test %rdx,%rdx
3f6d(2): jz 0x53(%rip)
3f6f(3): mov %r13d,%ecx
3f72(3): mov %rbp,%rdx
3f75(3): mov %rbx,%rsi
3f78(3): mov %r12d,%edi
3f7b(5): call 0xffffe7a5(%rip)
3f80(3): cmp $0x1,%eax
3f83(2): jz 0x3d(%rip)
3f85(4): add $0x8,%rsp
3f89(1): pop %rbx
3f8a(1): pop %rbp
3f8b(2): pop %r12
3f8d(2): pop %r13
3f8f(1): ret near (%rsp)
3f90(3): mov %rcx,%rsi
3f93(5): call 0xffffeb1d(%rip)
3f98(3): test %rbx,%rbx
3f9b(2): jz 0xffffffe5(%rip)
3f9d(3): cmp $0xff,%eax
3fa0(2): jnz 0xffffffe0(%rip)
3fa2(5): call 0xffffe7ae(%rip)
3fa7(3): cmp $0x26,(%rax)
3faa(2): jz 0xffffffc5(%rip)
3fac(4): add $0x8,%rsp
3fb0(5): mov $0xffffffff,%eax
3fb5(1): pop %rbx
3fb6(1): pop %rbp
3fb7(2): pop %r12
3fb9(2): pop %r13
3fbb(1): ret near (%rsp)
3fbc(4): nop 0x0(%rax)
3fc0(5): call 0xffffe790(%rip)
3fc5(6): mov $0x9,(%rax)
3fcb(4): add $0x8,%rsp
3fcf(5): mov $0xffffffff,%eax
3fd4(1): pop %rbx
3fd5(1): pop %rbp
3fd6(2): pop %r12
3fd8(2): pop %r13
3fda(1): ret near (%rsp)

"gettime" :
3fe0(3): mov %rdi,%rsi
3fe3(2): xor %edi,%edi
3fe5(5): jmp 0xffffe7bb(%rip)

"current_timespec" :
3ff0(4): sub $0x28,%rsp
3ff4(2): xor %edi,%edi
3ff6(3): mov %rsp,%rsi
3ff9(9): mov $0x28,%rax
4002(5): mov %rax,0x18(%rsp)
4007(2): xor %eax,%eax
4009(5): call 0xffffe797(%rip)
400e(5): mov 0x18(%rsp),%rcx
4013(9): xor $0x28,%rcx
401c(4): mov (%rsp),%rax
4020(5): mov 0x8(%rsp),%rdx
4025(2): jnz 0x7(%rip)
4027(4): add $0x28,%rsp
402b(1): ret near (%rsp)
402c(5): call 0xffffe804(%rip)

"digits_to_date_time" :
4040(7): mov 0xa8(%rdi),%rax
4047(5): mov 0x10(%rsp),%r8
404c(5): mov 0x18(%rsp),%r9
4051(3): test %rax,%rax
4054(2): jz 0x44(%rip)
4056(5): cmp $0x0,0x30(%rdi)
405b(2): jnz 0x3d(%rip)
405d(7): cmp $0x0,0xa1(%rdi)
4064(2): jnz 0x34(%rip)
4066(8): cmp $0x0,0xc8(%rdi)
406e(2): jnz 0xc(%rip)
4070(4): cmp $0x2,%r9
4074(6): jle 0x124(%rip)
407a(5): mov 0x18(%rsp),%rax
407f(7): mov $0x1,0xd8(%rdi)
4086(6): movdqu 0x8(%rsp),%xmm0
408c(4): mov %rax,0x30(%rdi)
4090(4): movups %xmm0,0x20(%rdi)
4094(1): ret near (%rsp)
4095(3): nop (%rax)
4098(4): cmp $0x4,%r9
409c(2): jnle 0x64(%rip)
409e(8): add $0x1,0xc8(%rdi)
40a6(4): cmp $0x2,%r9
40aa(6): jle 0xfe(%rip)
40b0(3): mov %r8,%rax
40b3(a): mov $0x-6640827866535438581,%rdx
40bd(3): imul %rax,%rdx,%rdx
40c0(3): mov %r8,%rax
40c3(4): sar $0x3f,%rax
40c7(3): add %r8,%rdx
40ca(4): sar $0x6,%rdx
40ce(3): sub %rax,%rdx
40d1(4): lea 0x0(%rdx,%rdx,4),%rax
40d5(4): mov %rdx,0x48(%rdi)
40d9(4): lea 0x0(%rax,%rax,4),%rax
40dd(4): shl/sal $0x2,%rax
40e1(3): sub %rax,%r8
40e4(4): mov %r8,0x50(%rdi)
40e8(8): mov $0x0,0x58(%rdi)
40f0(8): mov $0x0,0x60(%rdi)
40f8(7): mov $0x2,0x1c(%rdi)
40ff(1): ret near (%rsp)
4100(4): add $0x1,%rax
4104(a): mov $0x-6640827866535438581,%rsi
410e(3): mov %r8,%r10
4111(7): mov %rax,0xa8(%rdi)
4118(3): mov %r8,%rax
411b(4): sar $0x3f,%r10
411f(3): imul %rax,%rsi,%rdx
4122(4): sub $0x4,%r9
4126(4): mov %r9,0x30(%rdi)
412a(4): lea 0x0(%rdx,%r8,1),%rcx
412e(3): mov %r8,%rdx
4131(4): sar $0x6,%rcx
4135(3): sub %r10,%rcx
4138(4): lea 0x0(%rcx,%rcx,4),%rax
413c(4): lea 0x0(%rax,%rax,4),%rax
4140(4): shl/sal $0x2,%rax
4144(3): sub %rax,%rdx
4147(3): mov %rcx,%rax
414a(4): mov %rdx,0x40(%rdi)
414e(3): imul %rax,%rsi,%rdx
4151(3): mov %rcx,%rax
4154(4): sar $0x3f,%rax
4158(4): lea 0x0(%rdx,%rcx,1),%rsi
415c(a): mov $0x3777893186295716171,%rdx
4166(4): sar $0x6,%rsi
416a(3): sub %rax,%rsi
416d(4): lea 0x0(%rsi,%rsi,4),%rax
4171(4): lea 0x0(%rax,%rax,4),%rax
4175(4): shl/sal $0x2,%rax
4179(3): sub %rax,%rcx
417c(3): mov %r8,%rax
417f(3): imul %rax,%rdx,%rdx
4182(4): mov %rcx,0x38(%rdi)
4186(4): sar $0xb,%rdx
418a(3): sub %r10,%rdx
418d(4): mov %rdx,0x28(%rdi)
4191(1): ret near (%rsp)
4192(6): nop 0x0(%rax,%rax,1)
4198(b): mov $0x1,0xc8(%rdi)
41a3(5): nop 0x0(%rax,%rax,1)
41a8(4): mov %r8,0x48(%rdi)
41ac(8): mov $0x0,0x50(%rdi)
41b4(5): jmp 0xffffff34(%rip)

"time_zone_str" :
41c0(2): mov %edi,%eax
41c2(5): mov $0x91a2b3c5,%edx
41c7(2): push %r12
41c9(2): imul %eax,%edx,%edx
41cb(1): push %rbp
41cc(1): push %rbx
41cd(2): mov %edi,%eax
41cf(2): mov %edi,%ecx
41d1(3): mov %rsi,%r12
41d4(3): sar $0x1f,%eax
41d7(3): sar $0x1f,%ecx
41da(2): mov %edi,%ebp
41dc(3): lea 0x0(%rdx,%rdi,1),%ebx
41df(3): and $0x2,%ecx
41e2(7): mov $0xffffffff,%rdx
41e9(4): lea 0x2b(%rcx),%r8d
41ed(7): lea 0xbec2(%rip),%rcx
41f4(5): mov $0x1,%esi
41f9(3): sar $0xb,%ebx
41fc(3): mov %r12,%rdi
41ff(2): sub %eax,%ebx
4201(2): mov %ebx,%eax
4203(3): sar $0x1f,%eax
4206(3): mov %eax,%r9d
4209(3): xor %ebx,%r9d
420c(6): imul %ebx,$0xe10,%ebx
4212(3): sub %eax,%r9d
4215(2): xor %eax,%eax
4217(5): call 0xffffe929(%rip)
421c(2): sub %ebx,%ebp
421e(2): jz 0x64(%rip)
4220(2): cwde 
4222(5): mov $0x88888889,%ecx
4227(6): mov $0xcccccccd,%r8d
422d(4): lea 0x0(%r12,%rax,1),%rsi
4231(2): mov %ebp,%eax
4233(3): sar $0x1f,%eax
4236(2): xor %eax,%ebp
4238(3): mov $0x3a,(%rsi)
423b(2): sub %eax,%ebp
423d(2): mov %ebp,%eax
423f(2): mul %eax,%ecx,%edx
4241(2): mov %ebp,%eax
4243(2): mov %edx,%ecx
4245(2): mov %edx,%edi
4247(5): mov $0x1b4e81b5,%edx
424c(2): mul %eax,%edx,%edx
424e(3): shr $0x5,%ecx
4251(3): shr $0x5,%edi
4254(2): mov %ecx,%eax
4256(3): shr $0x6,%edx
4259(3): add $0x30,%edx
425c(3): mov %dl,0x1(%rsi)
425f(3): mul %eax,%r8d,%edx
4262(3): imul %edi,$0x3c,%edi
4265(3): shr $0x3,%edx
4268(3): lea 0x0(%rdx,%rdx,4),%eax
426b(2): add %eax,%eax
426d(2): sub %eax,%ecx
426f(4): lea 0x3(%rsi),%rax
4273(3): add $0x30,%ecx
4276(2): sub %edi,%ebp
4278(3): mov %cl,0x2(%rsi)
427b(2): mov %ebp,%edi
427d(2): jnz 0x13(%rip)
427f(3): mov $0x0,(%rax)
4282(3): mov %r12,%rax
4285(1): pop %rbx
4286(1): pop %rbp
4287(2): pop %r12
4289(1): ret near (%rsp)
428a(6): nop 0x0(%rax,%rax,1)
4290(2): mov %ebp,%eax
4292(4): mov $0x3a,0x3(%rsi)
4296(3): mul %eax,%r8d,%edx
4299(3): shr $0x3,%edx
429c(3): lea 0x30(%rdx),%eax
429f(3): lea 0x0(%rdx,%rdx,4),%edx
42a2(2): add %edx,%edx
42a4(3): mov %al,0x4(%rsi)
42a7(4): lea 0x6(%rsi),%rax
42ab(2): sub %edx,%edi
42ad(3): add $0x30,%edi
42b0(4): mov %dil,0x5(%rsi)
42b4(2): jmp 0xffffffcb(%rip)

"dbg_printf" :
42c0(1): push %rbx
42c1(3): mov %rdi,%rbx
42c4(7): sub $0xd0,%rsp
42cb(2): test %al,%al
42cd(5): mov %rsi,0x28(%rsp)
42d2(5): mov %rdx,0x30(%rsp)
42d7(5): mov %rcx,0x38(%rsp)
42dc(5): mov %r8,0x40(%rsp)
42e1(5): mov %r9,0x48(%rsp)
42e6(2): jz 0x39(%rip)
42e8(5): movaps %xmm0,0x50(%rsp)
42ed(5): movaps %xmm1,0x60(%rsp)
42f2(5): movaps %xmm2,0x70(%rsp)
42f7(8): movaps %xmm3,0x80(%rsp)
42ff(8): movaps %xmm4,0x90(%rsp)
4307(8): movaps %xmm5,0xa0(%rsp)
430f(8): movaps %xmm6,0xb0(%rsp)
4317(8): movaps %xmm7,0xc0(%rsp)
431f(7): lea 0xbda1(%rip),%rdi
4326(5): mov $0x6,%edx
432b(5): mov $0x1,%esi
4330(9): mov $0x28,%rax
4339(5): mov %rax,0x18(%rsp)
433e(2): xor %eax,%eax
4340(7): mov 0x210d99(%rip),%rcx
4347(5): call 0xffffe799(%rip)
434c(8): lea 0xe0(%rsp),%rax
4354(7): mov 0x210d85(%rip),%rdi
435b(3): mov %rsp,%rdx
435e(3): mov %rbx,%rsi
4361(7): mov $0x8,(%rsp)
4368(8): mov $0x30,0x4(%rsp)
4370(5): mov %rax,0x8(%rsp)
4375(5): lea 0x20(%rsp),%rax
437a(5): mov %rax,0x10(%rsp)
437f(5): call 0x73f1(%rip)
4384(5): mov 0x18(%rsp),%rax
4389(9): xor $0x28,%rax
4392(2): jnz 0xb(%rip)
4394(7): add $0xd0,%rsp
439b(1): pop %rbx
439c(1): ret near (%rsp)
439d(5): call 0xffffe493(%rip)

"print_rel_part.part.2" :
43b0(3): mov %rdx,%r8
43b3(3): xor $0x1,%edi
43b6(7): lea 0xbd11(%rip),%rdx
43bd(4): movzx %dil,%edi
43c1(4): sub $0x8,%rsp
43c5(3): mov %rsi,%rcx
43c8(3): add %rdi,%rdx
43cb(7): mov 0x210d0e(%rip),%rdi
43d2(5): mov $0x1,%esi
43d7(2): xor %eax,%eax
43d9(5): call 0xffffe717(%rip)
43de(5): mov $0x1,%eax
43e3(4): add $0x8,%rsp
43e7(1): ret near (%rsp)

"time_zone_hhmm.isra.4" :
43f0(4): cmp $0x2,%rcx
43f4(3): mov %rdx,%r9
43f7(2): jnle 0x49(%rip)
43f9(3): test %r8,%r8
43fc(6): js 0x94(%rip)
4402(2): xor %ecx,%ecx
4404(4): imul %r9,$0x3c,%r9
4408(3): seto %cl
440b(3): test %sil,%sil
440e(2): jnz 0x72(%rip)
4410(2): xor %edx,%edx
4412(3): add %r8,%r9
4415(3): seto %dl
4418(2): xor %eax,%eax
441a(2): or %edx,%ecx
441c(2): jnz 0x20(%rip)
441e(7): lea 0x5a0(%r9),%rdx
4425(2): xor %eax,%eax
4427(7): cmp $0xb40,%rdx
442e(2): jnbe 0xe(%rip)
4430(4): imul %r9d,$0x3c,%r9d
4434(5): mov $0x1,%eax
4439(3): mov %r9d,(%rdi)
443c(2): REP ret near (%rsp)
443e(2): nop 
4440(3): test %r8,%r8
4443(2): jns 0xffffffbf(%rip)
4445(3): mov %r9,%rax
4448(a): mov $0x-6640827866535438581,%rdx
4452(3): imul %rax,%rdx,%rdx
4455(3): mov %r9,%rax
4458(4): sar $0x3f,%rax
445c(4): lea 0x0(%rdx,%r9,1),%rcx
4460(4): sar $0x6,%rcx
4464(3): sub %rax,%rcx
4467(4): lea 0x0(%rcx,%rcx,4),%rax
446b(3): mov %r9,%rcx
446e(4): lea 0x0(%rax,%rax,4),%rax
4472(4): shl/sal $0x2,%rax
4476(3): sub %rax,%rcx
4479(2): jmp 0x25(%rip)
447b(5): nop 0x0(%rax,%rax,1)
4480(2): xor %edx,%edx
4482(3): sub %r8,%r9
4485(3): seto %dl
4488(2): jmp 0xffffff90(%rip)
448a(6): nop 0x0(%rax,%rax,1)
4490(4): lea 0x0(%rdx,%rdx,4),%rax
4494(2): xor %ecx,%ecx
4496(4): lea 0x0(%rax,%rax,4),%r9
449a(4): shl/sal $0x2,%r9
449e(3): mov %r9,%rax
44a1(a): mov $0x-6640827866535438581,%rdx
44ab(3): imul %rax,%rdx,%rdx
44ae(3): add %r9,%rdx
44b1(4): sar $0x3f,%r9
44b5(4): sar $0x6,%rdx
44b9(3): sub %r9,%rdx
44bc(3): mov %rdx,%rax
44bf(4): shl/sal $0x4,%rax
44c3(3): sub %rdx,%rax
44c6(4): lea 0x0(%rcx,%rax,4),%r9
44ca(5): jmp 0xffffff54(%rip)

"mktime_ok.part.6" :
44d0(2): mov (%rdi),%eax
44d2(3): mov 0x4(%rdi),%edx
44d5(2): xor (%rsi),%eax
44d7(3): xor 0x4(%rsi),%edx
44da(2): or %edx,%eax
44dc(3): mov 0x8(%rdi),%edx
44df(3): xor 0x8(%rsi),%edx
44e2(2): or %edx,%eax
44e4(3): mov 0xc(%rdi),%edx
44e7(3): xor 0xc(%rsi),%edx
44ea(2): or %edx,%eax
44ec(3): mov 0x10(%rdi),%edx
44ef(3): xor 0x10(%rsi),%edx
44f2(2): or %edx,%eax
44f4(3): mov 0x14(%rdi),%edx
44f7(3): xor 0x14(%rsi),%edx
44fa(2): or %edx,%eax
44fc(3): setz %al
44ff(1): ret near (%rsp)

"lookup_zone" :
4500(2): push %r12
4502(3): mov %rdi,%r12
4505(1): push %rbp
4506(3): mov %rsi,%rbp
4509(1): push %rbx
450a(7): lea 0xbbc6(%rip),%rsi
4511(7): lea 0x2101c8(%rip),%rbx
4518(2): jmp 0x14(%rip)
451a(6): nop 0x0(%rax,%rax,1)
4520(4): add $0x10,%rbx
4524(3): mov (%rbx),%rsi
4527(3): test %rsi,%rsi
452a(2): jz 0x16(%rip)
452c(3): mov %rbp,%rdi
452f(5): call 0xffffe421(%rip)
4534(2): test %eax,%eax
4536(2): jnz 0xffffffea(%rip)
4538(3): mov %rbx,%rax
453b(1): pop %rbx
453c(1): pop %rbp
453d(2): pop %r12
453f(1): ret near (%rsp)
4540(8): mov 0xe8(%r12),%rsi
4548(8): lea 0xe8(%r12),%rbx
4550(3): test %rsi,%rsi
4553(2): jnz 0x49(%rip)
4555(3): nop (%rax)
4558(7): lea 0x20fe81(%rip),%rbx
455f(7): lea 0xbb75(%rip),%rsi
4566(2): jmp 0x16(%rip)
4568(8): nop 0x0(%rax,%rax,1)
4570(4): add $0x10,%rbx
4574(3): mov (%rbx),%rsi
4577(3): test %rsi,%rsi
457a(2): jz 0x36(%rip)
457c(3): mov %rbp,%rdi
457f(5): call 0xffffe3d1(%rip)
4584(2): test %eax,%eax
4586(2): jnz 0xffffffea(%rip)
4588(2): jmp 0xffffffb0(%rip)
458a(6): nop 0x0(%rax,%rax,1)
4590(4): add $0x10,%rbx
4594(3): mov (%rbx),%rsi
4597(3): test %rsi,%rsi
459a(2): jz 0xffffffbe(%rip)
459c(3): mov %rbp,%rdi
459f(5): call 0xffffe3b1(%rip)
45a4(2): test %eax,%eax
45a6(2): jnz 0xffffffea(%rip)
45a8(3): mov %rbx,%rax
45ab(1): pop %rbx
45ac(1): pop %rbp
45ad(2): pop %r12
45af(1): ret near (%rsp)
45b0(2): xor %ebx,%ebx
45b2(3): mov %rbx,%rax
45b5(1): pop %rbx
45b6(1): pop %rbp
45b7(2): pop %r12
45b9(1): ret near (%rsp)

"debug_print_relative_time.part.11" :
45c0(1): push %rbp
45c1(1): push %rbx
45c2(3): mov %rsi,%rbx
45c5(7): lea 0xbb13(%rip),%rsi
45cc(3): mov %rdi,%rbp
45cf(5): mov $0x5,%edx
45d4(4): sub $0x8,%rsp
45d8(2): xor %edi,%edi
45da(5): call 0xffffe216(%rip)
45df(3): mov %rbp,%rsi
45e2(3): mov %rax,%rdi
45e5(2): xor %eax,%eax
45e7(5): call 0xfffffcd9(%rip)
45ec(4): mov 0x68(%rbx),%rsi
45f0(3): test %rsi,%rsi
45f3(6): jnz 0x18d(%rip)
45f9(4): mov 0x70(%rbx),%rsi
45fd(3): test %rsi,%rsi
4600(2): jz 0x80(%rip)
4602(2): xor %edi,%edi
4604(7): lea 0xbafd(%rip),%rdx
460b(5): call 0xfffffda5(%rip)
4610(4): mov 0x78(%rbx),%rsi
4614(3): movzx %al,%edi
4617(3): test %rsi,%rsi
461a(6): jnz 0xd6(%rip)
4620(7): mov 0x80(%rbx),%rsi
4627(3): test %rsi,%rsi
462a(6): jnz 0xe5(%rip)
4630(7): mov 0x88(%rbx),%rsi
4637(3): test %rsi,%rsi
463a(6): jnz 0xf4(%rip)
4640(7): mov 0x90(%rbx),%rsi
4647(3): test %rsi,%rsi
464a(6): jnz 0x103(%rip)
4650(7): movsxd 0x98(%rbx),%rsi
4657(3): test %rsi,%rsi
465a(6): jnz 0x112(%rip)
4660(7): mov 0x210a79(%rip),%rsi
4667(4): add $0x8,%rsp
466b(5): mov $0xa,%edi
4670(1): pop %rbx
4671(1): pop %rbp
4672(5): jmp 0xffffe29e(%rip)
4677(9): nop 0x0(%rax,%rax,1)
4680(4): mov 0x78(%rbx),%rsi
4684(2): xor %edi,%edi
4686(3): test %rsi,%rsi
4689(2): jnz 0x67(%rip)
468b(8): cmp $0x0,0x80(%rbx)
4693(2): jnz 0xffffff8d(%rip)
4695(8): cmp $0x0,0x88(%rbx)
469d(2): jnz 0xffffff83(%rip)
469f(8): cmp $0x0,0x90(%rbx)
46a7(6): jnz 0xffffff79(%rip)
46ad(6): mov 0x98(%rbx),%eax
46b3(2): test %eax,%eax
46b5(6): jnz 0xffffff6b(%rip)
46bb(7): mov 0x210a1e(%rip),%rbx
46c2(7): lea 0xba27(%rip),%rsi
46c9(2): xor %edi,%edi
46cb(5): mov $0x5,%edx
46d0(5): call 0xffffe120(%rip)
46d5(4): add $0x8,%rsp
46d9(3): mov %rbx,%rsi
46dc(3): mov %rax,%rdi
46df(1): pop %rbx
46e0(1): pop %rbp
46e1(5): jmp 0xffffe1ff(%rip)
46e6(a): nop 0x0(%rax,%rax,1)
46f0(7): lea 0xba1a(%rip),%rdx
46f7(5): call 0xfffffcb9(%rip)
46fc(7): mov 0x80(%rbx),%rsi
4703(3): movzx %al,%edi
4706(3): test %rsi,%rsi
4709(6): jz 0xffffff27(%rip)
470f(7): lea 0xba02(%rip),%rdx
4716(5): call 0xfffffc9a(%rip)
471b(7): mov 0x88(%rbx),%rsi
4722(3): movzx %al,%edi
4725(3): test %rsi,%rsi
4728(6): jz 0xffffff18(%rip)
472e(7): lea 0xb9eb(%rip),%rdx
4735(5): call 0xfffffc7b(%rip)
473a(7): mov 0x90(%rbx),%rsi
4741(3): movzx %al,%edi
4744(3): test %rsi,%rsi
4747(6): jz 0xffffff09(%rip)
474d(7): lea 0xbab1(%rip),%rdx
4754(5): call 0xfffffc5c(%rip)
4759(7): movsxd 0x98(%rbx),%rsi
4760(3): movzx %al,%edi
4763(3): test %rsi,%rsi
4766(6): jz 0xfffffefa(%rip)
476c(7): lea 0xb9b5(%rip),%rdx
4773(5): call 0xfffffc3d(%rip)
4778(5): jmp 0xfffffee8(%rip)
477d(3): nop (%rax)
4780(7): lea 0xb979(%rip),%rdx
4787(2): xor %edi,%edi
4789(5): call 0xfffffc27(%rip)
478e(4): mov 0x70(%rbx),%rsi
4792(3): movzx %al,%edi
4795(3): test %rsi,%rsi
4798(6): jnz 0xfffffe6c(%rip)
479e(4): mov 0x78(%rbx),%rsi
47a2(5): jmp 0xfffffe75(%rip)

"debug_strfdatetime.constprop.12" :
47b0(2): push %r12
47b2(1): push %rbp
47b3(3): mov %rdi,%rcx
47b6(1): push %rbx
47b7(3): mov %rdx,%rbx
47ba(7): lea 0xb973(%rip),%rdx
47c1(3): mov %rsi,%r12
47c4(3): xor %r9d,%r9d
47c7(3): xor %r8d,%r8d
47ca(4): sub $0x30,%rsp
47ce(5): mov $0x64,%esi
47d3(3): mov %rbx,%rdi
47d6(9): mov $0x28,%rax
47df(5): mov %rax,0x28(%rsp)
47e4(2): xor %eax,%eax
47e6(5): call 0x8d0a(%rip)
47eb(3): test %r12,%r12
47ee(2): jz 0x15(%rip)
47f0(3): cmp $0x63,%eax
47f3(3): mov %rax,%rbp
47f6(2): jnle 0xd(%rip)
47f8(9): cmp $0x0,0xd0(%r12)
4801(2): jnz 0x1f(%rip)
4803(5): mov 0x28(%rsp),%rdx
4808(9): xor $0x28,%rdx
4811(3): mov %rbx,%rax
4814(2): jnz 0x48(%rip)
4816(4): add $0x30,%rsp
481a(1): pop %rbx
481b(1): pop %rbp
481c(2): pop %r12
481e(1): ret near (%rsp)
481f(1): nop 
4820(5): mov 0x18(%r12),%edi
4825(3): mov %rsp,%rsi
4828(5): call 0xfffff998(%rip)
482d(5): mov $0x64,%esi
4832(3): movsxd %ebp,%rdi
4835(7): lea 0xb912(%rip),%r8
483c(2): sub %ebp,%esi
483e(3): mov %rax,%r9
4841(3): add %rbx,%rdi
4844(3): movsxd %esi,%rsi
4847(7): mov $0xffffffff,%rcx
484e(5): mov $0x1,%edx
4853(2): xor %eax,%eax
4855(5): call 0xffffdeab(%rip)
485a(2): jmp 0xffffffa9(%rip)
485c(5): call 0xffffdfd4(%rip)

"str_days.constprop.13" :
4870(1): push %rbp
4871(1): push %rbx
4872(3): mov %rsi,%rbp
4875(3): mov %rdi,%rbx
4878(4): sub $0x8,%rsp
487c(7): cmp $0x0,0xe0(%rdi)
4883(2): jz 0x55(%rip)
4885(4): mov 0x8(%rdi),%r9
4889(4): lea 0x1(%r9),%rax
488d(4): cmp $0xd,%rax
4891(6): jbe 0x97(%rip)
4897(7): lea 0xb924(%rip),%r8
489e(7): mov $0xffffffff,%rcx
48a5(5): mov $0x1,%edx
48aa(5): mov $0x64,%esi
48af(3): mov %rbp,%rdi
48b2(2): xor %eax,%eax
48b4(5): call 0xffffde4c(%rip)
48b9(4): movsxd 0x10(%rbx),%rdx
48bd(3): cmp $0x6,%edx
48c0(2): jnbe 0xb(%rip)
48c2(3): cmp $0x63,%eax
48c5(6): jbe 0x90(%rip)
48cb(4): add $0x8,%rsp
48cf(3): mov %rbp,%rax
48d2(1): pop %rbx
48d3(1): pop %rbp
48d4(1): ret near (%rsp)
48d5(3): nop (%rax)
48d8(3): mov $0x0,(%rsi)
48db(4): movsxd 0x10(%rdi),%rdx
48df(3): cmp $0x6,%edx
48e2(2): jnbe 0xffffffe9(%rip)
48e4(3): mov %rsi,%rdi
48e7(5): mov $0x1,%ecx
48ec(5): mov $0x64,%esi
48f1(7): lea 0xc728(%rip),%rax
48f8(4): lea 0x0(%rax,%rdx,4),%r9
48fc(7): lea 0xb79c(%rip),%rax
4903(5): mov $0x1,%edx
4908(4): lea 0x0(%rax,%rcx,1),%r8
490c(7): mov $0xffffffff,%rcx
4913(2): xor %eax,%eax
4915(5): call 0xffffddeb(%rip)
491a(4): add $0x8,%rsp
491e(3): mov %rbp,%rax
4921(1): pop %rbx
4922(1): pop %rbp
4923(1): ret near (%rsp)
4924(4): nop 0x0(%rax)
4928(4): lea 0x0(%rax,%rax,4),%rdx
492c(5): mov $0x64,%esi
4931(3): mov %rbp,%rdi
4934(4): lea 0x0(%rax,%rdx,2),%rcx
4938(7): lea 0xc701(%rip),%rax
493f(7): lea 0xb75a(%rip),%rdx
4946(3): add %rax,%rcx
4949(2): xor %eax,%eax
494b(5): call 0xffffdf35(%rip)
4950(5): jmp 0xffffff69(%rip)
4955(2): xor %ecx,%ecx
4957(5): mov $0x64,%esi
495c(2): test %eax,%eax
495e(3): setz %cl
4961(2): sub %eax,%esi
4963(2): cwde 
4965(3): movsxd %esi,%rsi
4968(5): lea 0x0(%rbp,%rax,1),%rdi
496d(2): jmp 0xffffff84(%rip)

"debug_print_current_time.part.10" :
4970(2): push %r13
4972(2): push %r12
4974(5): mov $0x5,%edx
4979(1): push %rbp
497a(1): push %rbx
497b(3): mov %rsi,%rbx
497e(7): lea 0xb75a(%rip),%rsi
4985(3): mov %rdi,%rbp
4988(2): xor %edi,%edi
498a(4): sub $0x78,%rsp
498e(9): mov $0x28,%rax
4997(5): mov %rax,0x68(%rsp)
499c(2): xor %eax,%eax
499e(5): call 0xffffde52(%rip)
49a3(3): mov %rbp,%rsi
49a6(3): mov %rax,%rdi
49a9(2): xor %eax,%eax
49ab(5): call 0xfffff915(%rip)
49b0(8): cmp $0x0,0xa8(%rbx)
49b8(2): jz 0xf(%rip)
49ba(7): cmp $0x0,0xda(%rbx)
49c1(6): jz 0x1ff(%rip)
49c7(7): movzx 0xdf(%rbx),%eax
49ce(6): cmp %al,0xd8(%rbx)
49d4(6): jz 0x1e0(%rip)
49da(7): lea 0xb79a(%rip),%rsi
49e1(4): mov 0x28(%rbx),%rbp
49e5(5): mov $0x5,%edx
49ea(2): xor %edi,%edi
49ec(5): call 0xffffde04(%rip)
49f1(7): mov 0x2106e8(%rip),%rdi
49f8(3): mov %rax,%rdx
49fb(3): mov %rbp,%rcx
49fe(5): mov $0x1,%esi
4a03(2): xor %eax,%eax
4a05(5): call 0xffffe0eb(%rip)
4a0a(7): movzx 0xd8(%rbx),%eax
4a11(5): mov $0x1,%edx
4a16(6): mov %al,0xdf(%rbx)
4a1c(8): cmp $0x0,0xc8(%rbx)
4a24(2): jz 0xf(%rip)
4a26(7): cmp $0x0,0xdd(%rbx)
4a2d(6): jz 0x1f3(%rip)
4a33(8): cmp $0x0,0xb0(%rbx)
4a3b(2): jz 0x67(%rip)
4a3d(7): cmp $0x0,0xdb(%rbx)
4a44(2): jnz 0x5e(%rip)
4a46(2): test %dl,%dl
4a48(6): jnz 0x247(%rip)
4a4e(3): mov %rsp,%rsi
4a51(3): mov %rbx,%rdi
4a54(4): mov 0x10(%rbx),%r13d
4a58(4): mov 0x8(%rbx),%r12
4a5c(5): call 0xfffffe14(%rip)
4a61(7): lea 0xbc90(%rip),%rsi
4a68(5): mov $0x5,%edx
4a6d(2): xor %edi,%edi
4a6f(3): mov %rax,%rbp
4a72(5): call 0xffffdd7e(%rip)
4a77(7): mov 0x210662(%rip),%rdi
4a7e(3): mov %rax,%rdx
4a81(3): mov %r13d,%r9d
4a84(3): mov %r12,%r8
4a87(3): mov %rbp,%rcx
4a8a(5): mov $0x1,%esi
4a8f(2): xor %eax,%eax
4a91(5): call 0xffffe05f(%rip)
4a96(7): mov $0x1,0xdb(%rbx)
4a9d(5): mov $0x1,%edx
4aa2(8): cmp $0x0,0xb8(%rbx)
4aaa(6): jz 0x86(%rip)
4ab0(7): cmp $0x0,0xdc(%rbx)
4ab7(2): jnz 0x79(%rip)
4ab9(8): cmp $0x0,0xc0(%rbx)
4ac1(7): lea 0xb68d(%rip),%rax
4ac8(7): lea 0xb8a7(%rip),%r8
4acf(3): mov 0x14(%rbx),%ecx
4ad2(7): mov 0x210607(%rip),%rdi
4ad9(5): mov $0x1,%esi
4ade(4): cmovne %rax,%r8
4ae2(3): xor $0x1,%edx
4ae5(7): lea 0xb6b7(%rip),%rax
4aec(3): movzx %dl,%edx
4aef(3): add %rax,%rdx
4af2(2): xor %eax,%eax
4af4(5): call 0xffffdffc(%rip)
4af9(8): cmp $0x0,0xd0(%rbx)
4b01(7): mov $0x1,0xdc(%rbx)
4b08(6): jnz 0x1a0(%rip)
4b0e(7): cmp $0x0,0xa0(%rbx)
4b15(2): jz 0x6f(%rip)
4b17(4): mov 0x58(%rbx),%rbx
4b1b(7): mov 0x2105be(%rip),%rsi
4b22(5): mov $0x20,%edi
4b27(5): call 0xffffdde9(%rip)
4b2c(2): jmp 0x2c(%rip)
4b2e(2): nop 
4b30(8): cmp $0x0,0xd0(%rbx)
4b38(2): jz 0xf(%rip)
4b3a(7): cmp $0x0,0xde(%rbx)
4b41(6): jz 0x17f(%rip)
4b47(7): cmp $0x0,0xa0(%rbx)
4b4e(2): jz 0x36(%rip)
4b50(2): test %dl,%dl
4b52(4): mov 0x58(%rbx),%rbx
4b56(2): jnz 0xffffffc5(%rip)
4b58(7): lea 0xb650(%rip),%rsi
4b5f(5): mov $0x5,%edx
4b64(2): xor %edi,%edi
4b66(5): call 0xffffdc8a(%rip)
4b6b(7): mov 0x21056e(%rip),%rdi
4b72(3): mov %rax,%rdx
4b75(3): mov %rbx,%rcx
4b78(5): mov $0x1,%esi
4b7d(2): xor %eax,%eax
4b7f(5): call 0xffffdf71(%rip)
4b84(7): mov 0x210555(%rip),%rsi
4b8b(5): mov $0xa,%edi
4b90(5): call 0xffffdd80(%rip)
4b95(5): mov 0x68(%rsp),%rax
4b9a(9): xor $0x28,%rax
4ba3(6): jnz 0x19f(%rip)
4ba9(4): add $0x78,%rsp
4bad(1): pop %rbx
4bae(1): pop %rbp
4baf(2): pop %r12
4bb1(2): pop %r13
4bb3(1): ret near (%rsp)
4bb4(2): xor %edx,%edx
4bb6(5): jmp 0xfffffe66(%rip)
4bbb(5): nop 0x0(%rax,%rax,1)
4bc0(4): mov 0x28(%rbx),%rcx
4bc4(4): mov 0x40(%rbx),%r9
4bc8(7): lea 0xb592(%rip),%rdx
4bcf(4): mov 0x38(%rbx),%r8
4bd3(7): mov 0x210506(%rip),%rdi
4bda(2): xor %eax,%eax
4bdc(5): mov $0x1,%esi
4be1(5): call 0xffffdf0f(%rip)
4be6(7): movzx 0xdf(%rbx),%eax
4bed(7): mov $0x1,0xda(%rbx)
4bf4(5): mov $0x1,%edx
4bf9(6): cmp %al,0xd8(%rbx)
4bff(6): jz 0xfffffe1d(%rip)
4c05(7): mov 0x2104d4(%rip),%rsi
4c0c(5): mov $0x20,%edi
4c11(5): call 0xffffdcff(%rip)
4c16(5): jmp 0xfffffdc4(%rip)
4c1b(5): nop 0x0(%rax,%rax,1)
4c20(4): mov 0x48(%rbx),%rcx
4c24(3): xor $0x1,%edx
4c27(7): lea 0xb559(%rip),%rax
4c2e(4): mov 0x58(%rbx),%r9
4c32(4): mov 0x50(%rbx),%r8
4c36(3): movzx %dl,%edx
4c39(7): mov 0x2104a0(%rip),%rdi
4c40(3): add %rax,%rdx
4c43(5): mov $0x1,%esi
4c48(2): xor %eax,%eax
4c4a(5): call 0xffffdea6(%rip)
4c4f(4): mov 0x60(%rbx),%rcx
4c53(3): test %rcx,%rcx
4c56(6): jnz 0xaa(%rip)
4c5c(4): cmp $0x1,0x1c(%rbx)
4c60(6): jz 0xc0(%rip)
4c66(8): cmp $0x0,0xb0(%rbx)
4c6e(7): mov $0x1,0xdd(%rbx)
4c75(5): mov $0x1,%edx
4c7a(6): jz 0xfffffe28(%rip)
4c80(7): movzx 0xdb(%rbx),%edx
4c87(2): test %dl,%dl
4c89(6): jnz 0xfffffe19(%rip)
4c8f(7): mov 0x21044a(%rip),%rsi
4c96(5): mov $0x20,%edi
4c9b(5): call 0xffffdc75(%rip)
4ca0(5): jmp 0xfffffdae(%rip)
4ca5(3): nop (%rax)
4ca8(7): cmp $0x0,0xde(%rbx)
4caf(6): jnz 0xfffffe5f(%rip)
4cb5(7): lea 0xb49e(%rip),%rbp
4cbc(2): jmp 0x14(%rip)
4cbe(2): nop 
4cc0(3): xor $0x1,%edx
4cc3(3): movzx %dl,%ebp
4cc6(7): lea 0xb48d(%rip),%rdx
4ccd(3): add %rdx,%rbp
4cd0(3): mov 0x18(%rbx),%edi
4cd3(3): mov %rsp,%rsi
4cd6(5): call 0xfffff4ea(%rip)
4cdb(7): mov 0x2103fe(%rip),%rdi
4ce2(3): mov %rax,%rcx
4ce5(3): mov %rbp,%rdx
4ce8(5): mov $0x1,%esi
4ced(2): xor %eax,%eax
4cef(5): call 0xffffde01(%rip)
4cf4(7): mov $0x1,0xde(%rbx)
4cfb(5): jmp 0xfffffe13(%rip)
4d00(7): mov 0x2103d9(%rip),%rdi
4d07(7): lea 0xb48c(%rip),%rdx
4d0e(5): mov $0x1,%esi
4d13(2): xor %eax,%eax
4d15(5): call 0xffffdddb(%rip)
4d1a(5): jmp 0xffffff42(%rip)
4d1f(1): nop 
4d20(7): mov 0x2103b9(%rip),%rcx
4d27(7): lea 0xb472(%rip),%rdi
4d2e(5): mov $0x2,%edx
4d33(5): mov $0x1,%esi
4d38(5): call 0xffffdda8(%rip)
4d3d(5): jmp 0xffffff29(%rip)
4d42(5): call 0xffffdaee(%rip)

"yyparse" :
4d50(2): push %r15
4d52(2): push %r14
4d54(2): xor %edx,%edx
4d56(2): push %r13
4d58(2): push %r12
4d5a(3): mov %rdi,%r11
4d5d(1): push %rbp
4d5e(1): push %rbx
4d5f(6): mov $0x26,%r14d
4d65(2): xor %ebx,%ebx
4d67(6): mov $0xfffffffe,%r9d
4d6d(7): sub $0x5c8,%rsp
4d74(8): lea 0x110(%rsp),%r15
4d7c(8): lea 0x140(%rsp),%r13
4d84(8): mov %dx,0x110(%rsp)
4d8c(9): mov $0x28,%rax
4d95(8): mov %rax,0x5b8(%rsp)
4d9d(2): xor %eax,%eax
4d9f(3): mov %r15,%r12
4da2(8): mov $0x0,0x34(%rsp)
4daa(4): movsx %r14b,%r8d
4dae(4): cmp $0xa3,%r8d
4db2(2): jz 0x3e(%rip)
4db4(4): cmp $0xfe,%r9d
4db8(6): jz 0x688(%rip)
4dbe(3): test %r9d,%r9d
4dc1(6): jle 0x5af(%rip)
4dc7(7): cmp $0x115,%r9d
4dce(6): jle 0x652(%rip)
4dd4(4): add $0x2,%r8d
4dd8(5): mov $0x2,%eax
4ddd(4): cmp $0x70,%r8d
4de1(6): jbe 0x59e(%rip)
4de7(9): nop 0x0(%rax,%rax,1)
4df0(7): lea 0xc4e9(%rip),%rax
4df7(4): movzx 0x0(%rax,%rbx,1),%ebp
4dfb(2): test %ebp,%ebp
4dfd(6): jz 0x31b(%rip)
4e03(7): lea 0xc2d6(%rip),%rdx
4e0a(3): movsxd %ebp,%rax
4e0d(4): movzx 0x0(%rdx,%rax,1),%eax
4e11(5): mov $0x1,%edx
4e16(2): sub %eax,%edx
4e18(3): mov %rax,%rbx
4e1b(3): movsxd %edx,%rdx
4e1e(8): lea 0x0(,%rdx,8),%rax
4e26(3): sub %rdx,%rax
4e29(4): shl/sal $0x3,%rax
4e2d(3): add %r13,%rax
4e30(4): mov 0x10(%rax),%rdi
4e34(4): mov 0x30(%rax),%rdx
4e38(4): movdqu (%rax),%xmm0
4e3c(3): mov (%rax),%r14
4e3f(4): mov 0x8(%rax),%r10
4e43(5): mov %rdi,0x10(%rsp)
4e48(4): mov 0x18(%rax),%rdi
4e4c(8): movaps %xmm0,0xd0(%rsp)
4e54(8): mov %rdx,0x100(%rsp)
4e5c(5): mov %rdi,0x8(%rsp)
4e61(4): mov 0x20(%rax),%rdi
4e65(5): movdqu 0x10(%rax),%xmm0
4e6a(5): mov %rdi,0x28(%rsp)
4e6f(4): mov 0x28(%rax),%rdi
4e73(8): movaps %xmm0,0xe0(%rsp)
4e7b(5): movdqu 0x20(%rax),%xmm0
4e80(3): mov 0x30(%rax),%eax
4e83(5): mov %rdi,0x20(%rsp)
4e88(8): movaps %xmm0,0xf0(%rsp)
4e90(4): mov %eax,0x18(%rsp)
4e94(3): lea 0xfffffffc(%rbp),%eax
4e97(3): cmp $0x57,%eax
4e9a(6): jnbe 0x156(%rip)
4ea0(7): lea 0xc019(%rip),%rdx
4ea7(4): movsxd 0x0(%rdx,%rax,4),%rax
4eab(3): add %rdx,%rax
4eae(2): jmp %rax
4eb0(8): mov $0x6270,0x18(%r11)
4eb8(4): mov 0x0(%r13),%rax
4ebc(3): xor %r8d,%r8d
4ebf(4): mov 0x10(%r13),%rdx
4ec3(4): mov 0x18(%r13),%rcx
4ec7(4): mov 0x20(%r13),%rsi
4ecb(4): mov 0x28(%r13),%rdi
4ecf(5): mov %rax,0x48(%rsp)
4ed4(4): mov 0x8(%r13),%rax
4ed8(5): mov %rax,0x50(%rsp)
4edd(4): mov 0x30(%r13),%eax
4ee1(7): add 0x98(%r11),%eax
4ee8(6): jo 0x193d(%rip)
4eee(7): mov %eax,0x98(%r11)
4ef5(2): xor %eax,%eax
4ef7(7): add 0x90(%r11),%rdi
4efe(5): mov %r10,0x58(%rsp)
4f03(5): mov %r9d,0x60(%rsp)
4f08(3): seto %al
4f0b(7): mov %rdi,0x90(%r11)
4f12(2): xor %edi,%edi
4f14(7): add 0x88(%r11),%rsi
4f1b(4): seto %dil
4f1f(7): mov %rsi,0x88(%r11)
4f26(2): xor %esi,%esi
4f28(7): add 0x80(%r11),%rcx
4f2f(4): seto %sil
4f33(3): xor %r10d,%r10d
4f36(4): add 0x78(%r11),%rdx
4f3a(7): mov %rcx,0x80(%r11)
4f41(4): seto %r10b
4f45(4): mov %rdx,0x78(%r11)
4f49(3): xor %r9d,%r9d
4f4c(5): mov 0x50(%rsp),%rdx
4f51(4): add 0x70(%r11),%rdx
4f55(4): seto %r9b
4f59(4): mov %rdx,0x70(%r11)
4f5d(2): xor %ecx,%ecx
4f5f(5): mov 0x48(%rsp),%rdx
4f64(4): add 0x68(%r11),%rdx
4f68(3): seto %cl
4f6b(3): or %r8d,%eax
4f6e(4): mov %rdx,0x68(%r11)
4f72(2): or %edi,%eax
4f74(3): mov %r9d,%edi
4f77(2): or %esi,%eax
4f79(3): or %r10d,%eax
4f7c(3): or %al,%dil
4f7f(6): jnz 0x3a9(%rip)
4f85(3): test %rcx,%rcx
4f88(6): jnz 0x3a0(%rip)
4f8e(7): lea 0xb290(%rip),%rsi
4f95(8): mov $0x1,0xa1(%r11)
4f9d(2): xor %edi,%edi
4f9f(5): mov $0x5,%edx
4fa4(5): mov %r11,0x48(%rsp)
4fa9(5): call 0xffffd847(%rip)
4fae(5): mov 0x48(%rsp),%r11
4fb3(5): mov 0x58(%rsp),%r10
4fb8(5): mov 0x60(%rsp),%r9d
4fbd(8): cmp $0x0,0xd9(%r11)
4fc5(2): jz 0x2b(%rip)
4fc7(5): mov %r9d,0x58(%rsp)
4fcc(5): mov %r10,0x50(%rsp)
4fd1(3): mov %r11,%rsi
4fd4(3): mov %rax,%rdi
4fd7(5): call 0xfffff5e9(%rip)
4fdc(5): mov 0x48(%rsp),%r11
4fe1(5): mov 0x50(%rsp),%r10
4fe6(5): mov 0x58(%rsp),%r9d
4feb(5): nop 0x0(%rax,%rax,1)
4ff0(5): mov 0x10(%rsp),%rdi
4ff5(8): lea 0x0(,%rbx,8),%rax
4ffd(8): mov %r14,0xd0(%rsp)
5005(8): mov %r10,0xd8(%rsp)
500d(3): mov %r12,%rcx
5010(3): sub %rbx,%rax
5013(9): movdqa 0xd0(%rsp),%xmm0
501c(8): mov %rdi,0xe0(%rsp)
5024(5): mov 0x8(%rsp),%rdi
5029(4): shl/sal $0x3,%rax
502d(3): sub %rax,%r13
5030(3): add %rbx,%rbx
5033(3): mov %r13,%rax
5036(3): sub %rbx,%rcx
5039(4): lea 0x38(%r13),%r13
503d(8): mov %rdi,0xe8(%rsp)
5045(5): mov 0x28(%rsp),%rdi
504a(4): movups %xmm0,0x38(%rax)
504e(8): mov %rdi,0xf0(%rsp)
5056(5): mov 0x20(%rsp),%rdi
505b(9): movdqa 0xe0(%rsp),%xmm0
5064(8): mov %rdi,0xf8(%rsp)
506c(4): mov 0x18(%rsp),%edi
5070(4): movups %xmm0,0x48(%rax)
5074(7): mov %edi,0x100(%rsp)
507b(8): mov 0x100(%rsp),%rdx
5083(9): movdqa 0xf0(%rsp),%xmm0
508c(3): movsx (%rcx),%edi
508f(4): mov %rdx,0x68(%rax)
5093(7): lea 0xc226(%rip),%rdx
509a(4): movups %xmm0,0x58(%rax)
509e(7): lea 0xc09b(%rip),%rax
50a5(2): mov %edi,%esi
50a7(4): movzx 0x0(%rax,%rbp,1),%eax
50ab(3): sub $0x1c,%eax
50ae(2): cwde 
50b0(4): movsx 0x0(%rdx,%rax,1),%edx
50b4(2): add %edi,%edx
50b6(3): cmp $0x70,%edx
50b9(2): jnbe 0x1a(%rip)
50bb(7): lea 0xc0de(%rip),%rdi
50c2(3): movsxd %edx,%rdx
50c5(5): movsx 0x0(%rdi,%rdx,1),%di
50ca(3): cmp %di,%si
50cd(6): jz 0x4b3(%rip)
50d3(7): lea 0xc1c6(%rip),%rdx
50da(5): movsx 0x0(%rdx,%rax,1),%rbx
50df(4): lea 0x2(%rcx),%r12
50e3(4): lea 0x26(%r15),%rax
50e7(4): mov %bx,0x2(%rcx)
50eb(3): cmp %rax,%r12
50ee(6): jnb 0x13cb(%rip)
50f4(3): cmp $0xc,%ebx
50f7(6): jz 0x13cc(%rip)
50fd(7): lea 0xc25c(%rip),%rdx
5104(3): movsxd %ebx,%rax
5107(5): movzx 0x0(%rdx,%rax,1),%r14d
510c(5): jmp 0xfffffc9e(%rip)
5111(7): nop 0x0(%rax)
5118(5): cmp $0x3,0x34(%rsp)
511d(2): jnz 0x12(%rip)
511f(4): cmp $0x0,%r9d
5123(6): jle 0x46d(%rip)
5129(6): mov $0xfffffffe,%r9d
512f(7): lea 0xc22a(%rip),%rdx
5136(7): lea 0xc063(%rip),%rcx
513d(7): lea 0xc0dc(%rip),%rsi
5144(2): jmp 0x22(%rip)
5146(a): nop 0x0(%rax,%rax,1)
5150(3): cmp %r15,%r12
5153(6): jz 0x1d5(%rip)
5159(4): sub $0x2,%r12
515d(5): movsx (%r12),%rbx
5162(4): sub $0x38,%r13
5166(4): movsx 0x0(%rdx,%rbx,1),%eax
516a(3): cmp $0xa3,%eax
516d(2): jz 0xffffffe3(%rip)
516f(3): add $0x1,%eax
5172(3): cmp $0x70,%eax
5175(2): jnbe 0xffffffdb(%rip)
5177(2): cwde 
5179(4): cmp $0x1,0x0(%rcx,%rax,1)
517d(2): jnz 0xffffffd3(%rip)
517f(4): movzx 0x0(%rsi,%rax,1),%ebx
5183(2): test %ebx,%ebx
5185(2): jz 0xffffffcb(%rip)
5187(5): mov 0x38(%rsp),%rax
518c(4): add $0x38,%r13
5190(3): mov %r12,%rcx
5193(8): mov $0x3,0x34(%rsp)
519b(8): mov %rax,0x98(%rsp)
51a3(5): mov 0x40(%rsp),%rax
51a8(9): movdqa 0x90(%rsp),%xmm0
51b1(8): mov %rax,0xa0(%rsp)
51b9(8): mov 0xc0(%rsp),%rax
51c1(5): movups %xmm0,0x0(%r13)
51c6(9): movdqa 0xa0(%rsp),%xmm0
51cf(4): mov %rax,0x30(%r13)
51d3(5): movups %xmm0,0x10(%r13)
51d8(9): movdqa 0xb0(%rsp),%xmm0
51e1(5): movups %xmm0,0x20(%r13)
51e6(5): jmp 0xfffffef9(%rip)
51eb(4): mov 0xffffffc8(%r13),%rax
51ef(4): mov 0xffffffe8(%r13),%rsi
51f3(4): mov 0xfffffff0(%r13),%rdi
51f7(4): mov 0xfffffff8(%r13),%r8d
51fb(7): mov 0x98(%r11),%ecx
5202(7): mov 0x90(%r11),%rdx
5209(5): mov %rax,0x48(%rsp)
520e(4): mov 0xffffffd0(%r13),%rax
5212(5): mov %rax,0x50(%rsp)
5217(4): mov 0xffffffd8(%r13),%rax
521b(5): mov %rax,0x58(%rsp)
5220(4): mov 0xffffffe0(%r13),%rax
5224(5): mov %rax,0x60(%rsp)
5229(7): mov 0x88(%r11),%rax
5230(5): mov %rax,0x70(%rsp)
5235(7): mov 0x80(%r11),%rax
523c(8): mov %rax,0x80(%rsp)
5244(4): mov 0x78(%r11),%rax
5248(8): mov %rax,0x88(%rsp)
5250(4): mov 0x70(%r11),%rax
5254(5): mov %rax,0x68(%rsp)
5259(4): mov 0x68(%r11),%rax
525d(5): mov %rax,0x78(%rsp)
5262(4): mov 0x0(%r13),%eax
5266(2): test %eax,%eax
5268(6): js 0x12fa(%rip)
526e(5): mov 0x70(%rsp),%rax
5273(3): add %r8d,%ecx
5276(4): seto %r8b
527a(7): mov %ecx,0x98(%r11)
5281(2): xor %ecx,%ecx
5283(3): add %rdi,%rdx
5286(4): movzx %r8b,%r8d
528a(3): seto %cl
528d(2): xor %edi,%edi
528f(3): add %rsi,%rax
5292(4): seto %dil
5296(7): mov %rax,0x88(%r11)
529d(2): xor %esi,%esi
529f(8): mov 0x80(%rsp),%rax
52a7(5): add 0x60(%rsp),%rax
52ac(5): mov %rdi,0x70(%rsp)
52b1(7): mov %rdx,0x90(%r11)
52b8(4): seto %sil
52bc(7): mov %rax,0x80(%r11)
52c3(2): xor %edi,%edi
52c5(8): mov 0x88(%rsp),%rax
52cd(5): add 0x58(%rsp),%rax
52d2(4): seto %dil
52d6(4): mov %rax,0x78(%r11)
52da(2): xor %edx,%edx
52dc(5): mov 0x68(%rsp),%rax
52e1(5): add 0x50(%rsp),%rax
52e6(3): seto %dl
52e9(4): mov %rax,0x70(%r11)
52ed(5): mov 0x78(%rsp),%rax
52f2(5): add 0x48(%rsp),%rax
52f7(5): mov %rdx,0x50(%rsp)
52fc(4): mov %rax,0x68(%r11)
5300(2): mov %ecx,%eax
5302(3): seto %dl
5305(3): or %r8d,%eax
5308(4): or 0x70(%rsp),%al
530c(3): movzx %dl,%edx
530f(2): or %esi,%eax
5311(2): or %edi,%eax
5313(4): or 0x50(%rsp),%al
5317(2): or %edx,%eax
5319(2): test %al,%al
531b(6): jz 0x533(%rip)
5321(7): nop 0x0(%rax)
5328(5): mov $0x1,%eax
532d(8): mov 0x5b8(%rsp),%rdi
5335(9): xor $0x28,%rdi
533e(6): jnz 0x14f2(%rip)
5344(7): add $0x5c8,%rsp
534b(1): pop %rbx
534c(1): pop %rbp
534d(2): pop %r12
534f(2): pop %r13
5351(2): pop %r14
5353(2): pop %r15
5355(1): ret near (%rsp)
5356(4): lea 0x1(%rdi),%rax
535a(3): mov %rax,(%r11)
535d(4): movzx (%rdi),%r9d
5361(3): test %r9d,%r9d
5364(6): jnle 0xbc(%rip)
536a(6): nop 0x0(%rax,%rax,1)
5370(2): xor %eax,%eax
5372(3): xor %r9d,%r9d
5375(4): cmp $0x70,%r8d
5379(6): jnbe 0xfffffa77(%rip)
537f(7): lea 0xbe1a(%rip),%rdx
5386(3): movsxd %r8d,%r8
5389(5): movsx 0x0(%rdx,%r8,1),%edx
538e(2): cmp %eax,%edx
5390(6): jnz 0xfffffa60(%rip)
5396(7): lea 0xbe83(%rip),%rax
539d(5): movzx 0x0(%rax,%r8,1),%ebp
53a2(2): test %ebp,%ebp
53a4(6): jz 0x2ec(%rip)
53aa(4): mov 0x34(%rsp),%eax
53ae(3): mov %r12,%rcx
53b1(3): movsxd %ebp,%rbx
53b4(6): mov $0xfffffffe,%r9d
53ba(3): cmp $0x1,%eax
53bd(3): adc $0xff,%eax
53c0(4): add $0x38,%r13
53c4(4): mov %eax,0x34(%rsp)
53c8(5): mov 0x38(%rsp),%rax
53cd(8): mov %rax,0x98(%rsp)
53d5(5): mov 0x40(%rsp),%rax
53da(9): movdqa 0x90(%rsp),%xmm0
53e3(8): mov %rax,0xa0(%rsp)
53eb(8): mov 0xc0(%rsp),%rax
53f3(5): movups %xmm0,0x0(%r13)
53f8(9): movdqa 0xa0(%rsp),%xmm0
5401(4): mov %rax,0x30(%r13)
5405(5): movups %xmm0,0x10(%r13)
540a(9): movdqa 0xb0(%rsp),%xmm0
5413(5): movups %xmm0,0x20(%r13)
5418(5): jmp 0xfffffcc7(%rip)
541d(3): nop (%rax)
5420(7): lea 0xbfb9(%rip),%rdx
5427(3): movsxd %r9d,%rax
542a(4): movzx 0x0(%rdx,%rax,1),%eax
542e(3): add %eax,%r8d
5431(5): jmp 0xffffff44(%rip)
5436(a): nop 0x0(%rax,%rax,1)
5440(3): mov (%r11),%rdi
5443(5): mov $0x1,%edx
5448(a): mov $0x288230371923853311,%r10
5452(3): movzx (%rdi),%ecx
5455(3): cmp $0x20,%cl
5458(2): mov %ecx,%esi
545a(4): movzx %cl,%r9d
545e(2): jnbe 0x51(%rip)
5460(3): mov %rdx,%rax
5463(3): shl/sal %cl,%rax
5466(a): mov $0x4294983168,%rcx
5470(3): test %rcx,%rax
5473(6): jz 0xa7(%rip)
5479(4): lea 0x1(%rdi),%rax
547d(2): jmp 0x1c(%rip)
547f(1): nop 
5480(3): mov %rdx,%rsi
5483(a): mov $0x4294983168,%r14
548d(4): add $0x1,%rax
5491(3): shl/sal %cl,%rsi
5494(3): test %r14,%rsi
5497(2): jz 0x81(%rip)
5499(3): mov %rax,(%r11)
549c(4): movzx (%rax),%r9d
54a0(3): mov %rax,%rdi
54a3(4): cmp $0x20,%r9b
54a7(3): mov %r9d,%ecx
54aa(3): mov %r9d,%esi
54ad(2): jbe 0xffffffd3(%rip)
54af(3): lea 0xffffffd5(%rsi),%eax
54b2(3): sub $0x30,%ecx
54b5(3): and $0xfd,%eax
54b8(3): cmp $0x9,%cl
54bb(2): jnbe 0x65(%rip)
54bd(4): cmp $0x2d,%sil
54c1(3): setz %cl
54c4(2): test %al,%al
54c6(6): jnz 0x1004(%rip)
54cc(3): cmp $0x1,%cl
54cf(3): mov (%r11),%rax
54d2(3): sbb %r9d,%r9d
54d5(4): and $0x2,%r9d
54d9(4): sub $0x1,%r9d
54dd(4): add $0x1,%rax
54e1(3): mov %rax,(%r11)
54e4(3): movzx (%rax),%ecx
54e7(3): mov %rax,%rdi
54ea(3): cmp $0x20,%cl
54ed(2): mov %ecx,%esi
54ef(6): jnbe 0xe3d(%rip)
54f5(3): mov %rdx,%rsi
54f8(a): mov $0x4294983168,%r14
5502(4): add $0x1,%rax
5506(3): shl/sal %cl,%rsi
5509(3): test %r14,%rsi
550c(6): jz 0xffffff49(%rip)
5512(2): jmp 0xffffffcf(%rip)
5514(4): nop 0x0(%rax)
5518(2): mov %ecx,%esi
551a(3): lea 0xffffffd5(%rsi),%eax
551d(3): and $0xfd,%eax
5520(2): test %al,%al
5522(6): jz 0x17a(%rip)
5528(4): lea 0xffffffbf(%r9),%ecx
552c(3): cmp $0x39,%ecx
552f(2): jbe 0x71(%rip)
5531(4): cmp $0x28,%sil
5535(6): jnz 0xfffffe21(%rip)
553b(3): mov (%r11),%rsi
553e(2): xor %ecx,%ecx
5540(2): jmp 0x1f(%rip)
5542(6): nop 0x0(%rax,%rax,1)
5548(2): cmp $0x29,%al
554a(3): setz %al
554d(3): movzx %al,%eax
5550(3): sub %rax,%rcx
5553(3): test %rcx,%rcx
5556(6): jz 0x152(%rip)
555c(3): mov %rdi,%rsi
555f(4): lea 0x1(%rsi),%rdi
5563(3): mov %rdi,(%r11)
5566(4): movzx 0xffffffff(%rdi),%eax
556a(2): test %al,%al
556c(6): jz 0xfffffe04(%rip)
5572(2): cmp $0x28,%al
5574(2): jnz 0xffffffd4(%rip)
5576(4): add $0x1,%rcx
557a(2): jmp 0xffffffd9(%rip)
557c(4): nop 0x0(%rax)
5580(7): lea 0xbc99(%rip),%rax
5587(4): movzx 0x0(%rax,%rdx,1),%ebx
558b(5): jmp 0xfffffb54(%rip)
5590(6): jnz 0xfffffb9f(%rip)
5596(5): jmp 0xfffffd92(%rip)
559b(5): nop 0x0(%rax,%rax,1)
55a0(3): mov %rdx,%rax
55a3(3): shl/sal %cl,%rax
55a6(3): test %r10,%rax
55a9(2): jz 0xffffff88(%rip)
55ab(3): mov (%r11),%rax
55ae(8): lea 0x5a0(%rsp),%r14
55b6(6): mov $0x1,%r10d
55bc(a): mov $0x288230371923853311,%r9
55c6(3): mov %r14,%rdx
55c9(4): lea 0x13(%r14),%rdi
55cd(4): add $0x1,%rax
55d1(2): jmp 0x6(%rip)
55d3(4): add $0x1,%rax
55d7(3): cmp %rdi,%rdx
55da(2): jnb 0x9(%rip)
55dc(3): mov %sil,(%rdx)
55df(4): add $0x1,%rdx
55e3(3): mov %rax,(%r11)
55e6(3): movzx (%rax),%ecx
55e9(2): mov %ecx,%esi
55eb(3): sub $0x41,%ecx
55ee(3): cmp $0x39,%ecx
55f1(2): jnbe 0xd(%rip)
55f3(3): mov %r10,%rbp
55f6(3): shl/sal %cl,%rbp
55f9(3): test %r9,%rbp
55fc(2): jnz 0xffffffd7(%rip)
55fe(4): cmp $0x2e,%sil
5602(2): jz 0xffffffd1(%rip)
5604(3): mov $0x0,(%rdx)
5607(8): movzx 0x5a0(%rsp),%eax
560f(2): test %al,%al
5611(2): jz 0x21(%rip)
5613(3): mov %r14,%rdx
5616(3): movzx %al,%ecx
5619(3): sub $0x61,%eax
561c(3): lea 0xffffffe0(%rcx),%esi
561f(2): cmp $0x1a,%al
5621(3): cmovnae %esi,%ecx
5624(4): add $0x1,%rdx
5628(3): mov %cl,0xffffffff(%rdx)
562b(3): movzx (%rdx),%eax
562e(2): test %al,%al
5630(2): jnz 0xffffffe6(%rip)
5632(7): lea 0x20f4a7(%rip),%rcx
5639(7): lea 0xab86(%rip),%rsi
5640(3): mov %rcx,%rbp
5643(2): jmp 0x13(%rip)
5645(4): add $0x10,%rbp
5649(4): mov 0x0(%rbp),%rsi
564d(3): test %rsi,%rsi
5650(6): jz 0xfa5(%rip)
5656(3): mov %r14,%rdi
5659(5): mov %r11,0x10(%rsp)
565e(5): mov %r8d,0x8(%rsp)
5663(5): call 0xffffd2ed(%rip)
5668(2): test %eax,%eax
566a(5): mov 0x8(%rsp),%r8d
566f(5): mov 0x10(%rsp),%r11
5674(2): jnz 0xffffffd1(%rip)
5676(3): mov %rbp,%rcx
5679(4): movsxd 0xc(%rcx),%rax
567d(4): mov 0x8(%rcx),%r9d
5681(8): mov %rax,0x90(%rsp)
5689(5): jmp 0xfffff735(%rip)
568e(2): nop 
5690(5): mov $0x38,%eax
5695(2): xor %ebx,%ebx
5697(5): jmp 0xfffff796(%rip)
569c(4): cmp $0x2d,%sil
56a0(3): setz %cl
56a3(5): jmp 0xfffffe29(%rip)
56a8(4): movzx 0x1(%rsi),%ecx
56ac(5): jmp 0xfffffda9(%rip)
56b1(4): mov 0xffffffd0(%r13),%r10
56b5(b): mov $0x0,0x104(%rsp)
56c0(8): mov $0x0,0x18(%rsp)
56c8(9): mov $0x0,0x20(%rsp)
56d1(3): xor %r14d,%r14d
56d4(9): mov $0x0,0x28(%rsp)
56dd(9): mov $0x0,0x8(%rsp)
56e6(9): mov $0x0,0x10(%rsp)
56ef(5): jmp 0xfffff901(%rip)
56f4(4): mov 0xffffffd0(%r13),%rax
56f8(b): mov $0x0,0x104(%rsp)
5703(5): mov %rax,0x28(%rsp)
5708(8): mov $0x0,0x18(%rsp)
5710(3): xor %r10d,%r10d
5713(9): mov $0x0,0x20(%rsp)
571c(9): mov $0x0,0x8(%rsp)
5725(3): xor %r14d,%r14d
5728(9): mov $0x0,0x10(%rsp)
5731(5): jmp 0xfffff8bf(%rip)
5736(4): mov 0xffffffd0(%r13),%r14
573a(b): mov $0x0,0x104(%rsp)
5745(8): mov $0x0,0x18(%rsp)
574d(9): mov $0x0,0x20(%rsp)
5756(3): xor %r10d,%r10d
5759(9): mov $0x0,0x28(%rsp)
5762(9): mov $0x0,0x8(%rsp)
576b(9): mov $0x0,0x10(%rsp)
5774(5): jmp 0xfffff87c(%rip)
5779(4): mov 0x0(%r13),%rax
577d(3): xor %r8d,%r8d
5780(4): mov 0x10(%r13),%rdx
5784(4): mov 0x18(%r13),%rcx
5788(4): mov 0x20(%r13),%rsi
578c(4): mov 0x28(%r13),%rdi
5790(5): mov %rax,0x48(%rsp)
5795(4): mov 0x8(%r13),%rax
5799(5): mov %rax,0x50(%rsp)
579e(4): mov 0x30(%r13),%eax
57a2(7): add 0x98(%r11),%eax
57a9(6): jo 0x53b(%rip)
57af(7): mov %eax,0x98(%r11)
57b6(2): xor %eax,%eax
57b8(7): add 0x90(%r11),%rdi
57bf(3): seto %al
57c2(7): mov %rdi,0x90(%r11)
57c9(2): xor %edi,%edi
57cb(7): add 0x88(%r11),%rsi
57d2(4): seto %dil
57d6(7): mov %rsi,0x88(%r11)
57dd(2): xor %esi,%esi
57df(7): add 0x80(%r11),%rcx
57e6(4): seto %sil
57ea(7): mov %rcx,0x80(%r11)
57f1(2): xor %ecx,%ecx
57f3(4): add 0x78(%r11),%rdx
57f7(3): seto %cl
57fa(4): mov %rdx,0x78(%r11)
57fe(5): mov 0x50(%rsp),%rdx
5803(5): mov %rcx,0x58(%rsp)
5808(2): xor %ecx,%ecx
580a(4): add 0x70(%r11),%rdx
580e(3): seto %cl
5811(4): mov %rdx,0x70(%r11)
5815(5): mov 0x48(%rsp),%rdx
581a(5): mov %rcx,0x50(%rsp)
581f(2): xor %ecx,%ecx
5821(4): add 0x68(%r11),%rdx
5825(3): seto %cl
5828(3): or %r8d,%eax
582b(4): mov %rdx,0x68(%r11)
582f(2): or %edi,%eax
5831(5): movzx 0x50(%rsp),%edi
5836(2): or %esi,%eax
5838(4): or 0x58(%rsp),%al
583c(3): or %al,%dil
583f(6): jnz 0xfffffae9(%rip)
5845(3): test %rcx,%rcx
5848(6): jnz 0xfffffae0(%rip)
584e(8): mov $0x1,0xa1(%r11)
5856(5): jmp 0xfffff79a(%rip)
585b(4): mov 0xffffffd0(%r13),%rax
585f(b): mov $0x0,0x104(%rsp)
586a(5): mov %rax,0x8(%rsp)
586f(8): mov $0x0,0x18(%rsp)
5877(3): xor %r10d,%r10d
587a(9): mov $0x0,0x20(%rsp)
5883(9): mov $0x0,0x28(%rsp)
588c(3): xor %r14d,%r14d
588f(9): mov $0x0,0x10(%rsp)
5898(5): jmp 0xfffff758(%rip)
589d(4): mov 0xffffffc8(%r13),%rax
58a1(b): mov $0x0,0x104(%rsp)
58ac(5): mov %rax,0x20(%rsp)
58b1(4): mov 0xffffffd0(%r13),%eax
58b5(4): mov %eax,0x18(%rsp)
58b9(9): mov $0x0,0x28(%rsp)
58c2(9): mov $0x0,0x8(%rsp)
58cb(3): xor %r10d,%r10d
58ce(9): mov $0x0,0x10(%rsp)
58d7(3): xor %r14d,%r14d
58da(5): jmp 0xfffff716(%rip)
58df(4): mov 0xffffffd0(%r13),%rax
58e3(b): mov $0x0,0x104(%rsp)
58ee(5): mov %rax,0x20(%rsp)
58f3(8): mov $0x0,0x18(%rsp)
58fb(2): jmp 0xffffffbe(%rip)
58fd(4): mov 0x8(%r13),%r14
5901(3): xor %r10d,%r10d
5904(5): jmp 0xfffff6ec(%rip)
5909(2): xor %edx,%edx
590b(4): mov 0xffffffd0(%r13),%rax
590f(c): mov $0x0,0x100(%rsp)
591b(5): imul 0x0(%r13),%rax
5920(4): pxor %xmm0,%xmm0
5924(8): movaps %xmm0,0xd0(%rsp)
592c(8): movaps %xmm0,0xe0(%rsp)
5934(8): movaps %xmm0,0xf0(%rsp)
593c(6): jo 0x310(%rip)
5942(3): test %rdx,%rdx
5945(5): mov %rax,0x10(%rsp)
594a(6): jnz 0xfffff9de(%rip)
5950(8): mov $0x0,0x18(%rsp)
5958(9): mov $0x0,0x20(%rsp)
5961(3): xor %r10d,%r10d
5964(9): mov $0x0,0x28(%rsp)
596d(9): mov $0x0,0x8(%rsp)
5976(3): xor %r14d,%r14d
5979(5): jmp 0xfffff677(%rip)
597e(4): mov 0x0(%r13),%rax
5982(b): mov $0x0,0x104(%rsp)
598d(5): mov %rax,0x10(%rsp)
5992(2): jmp 0xffffffbe(%rip)
5994(7): mov 0xffffff30(%r13),%rcx
599b(8): movzx 0xd9(%r11),%eax
59a3(4): cmp $0x3,%rcx
59a7(6): jle 0xb61(%rip)
59ad(2): test %al,%al
59af(2): jz 0x5b(%rip)
59b1(7): mov 0xffffff28(%r13),%rax
59b8(7): lea 0xad59(%rip),%rsi
59bf(5): mov $0x5,%edx
59c4(2): xor %edi,%edi
59c6(5): mov %r11,0x68(%rsp)
59cb(5): mov %r9d,0x60(%rsp)
59d0(5): mov %r10,0x58(%rsp)
59d5(5): mov %rcx,0x50(%rsp)
59da(5): mov %rax,0x48(%rsp)
59df(5): call 0xffffce11(%rip)
59e4(5): mov 0x50(%rsp),%rcx
59e9(5): mov 0x48(%rsp),%rsi
59ee(3): mov %rax,%rdi
59f1(2): xor %eax,%eax
59f3(3): mov %rcx,%rdx
59f6(5): call 0xffffe8ca(%rip)
59fb(5): mov 0x68(%rsp),%r11
5a00(5): mov 0x60(%rsp),%r9d
5a05(5): mov 0x58(%rsp),%r10
5a0a(9): movdqu 0xffffff20(%r13),%xmm0
5a13(7): mov 0xffffff30(%r13),%rax
5a1a(5): movups %xmm0,0x20(%r11)
5a1f(4): mov %rax,0x30(%r11)
5a23(4): mov 0xffffff98(%r13),%rax
5a27(4): mov %rax,0x38(%r11)
5a2b(4): mov 0x8(%r13),%rax
5a2f(4): mov %rax,0x40(%r11)
5a33(5): jmp 0xfffff5bd(%rip)
5a38(b): mov $0x0,0x104(%rsp)
5a43(8): mov $0x0,0x18(%rsp)
5a4b(9): mov $0x1,0x20(%rsp)
5a54(5): jmp 0xfffffe65(%rip)
5a59(b): mov $0x0,0x104(%rsp)
5a64(8): mov $0x0,0x18(%rsp)
5a6c(3): xor %r10d,%r10d
5a6f(9): mov $0x0,0x20(%rsp)
5a78(9): mov $0x0,0x28(%rsp)
5a81(3): xor %r14d,%r14d
5a84(9): mov $0x1,0x8(%rsp)
5a8d(9): mov $0x0,0x10(%rsp)
5a96(5): jmp 0xfffff55a(%rip)
5a9b(6): movdqu 0x0(%r13),%xmm0
5aa1(7): lea 0xa753(%rip),%rsi
5aa8(5): mov %r9d,0x58(%rsp)
5aad(5): mov %r10,0x50(%rsp)
5ab2(5): mov $0x5,%edx
5ab7(5): movups %xmm0,0x58(%r11)
5abc(8): mov $0x1,0xa0(%r11)
5ac4(5): mov %r11,0x48(%rsp)
5ac9(2): xor %edi,%edi
5acb(5): call 0xffffcd25(%rip)
5ad0(5): mov 0x48(%rsp),%r11
5ad5(5): mov 0x50(%rsp),%r10
5ada(5): mov 0x58(%rsp),%r9d
5adf(8): cmp $0x0,0xd9(%r11)
5ae7(3): mov %r11,%rsi
5aea(6): jz 0xfffff506(%rip)
5af0(3): mov %rax,%rdi
5af3(5): call 0xffffee7d(%rip)
5af8(5): mov 0x48(%rsp),%r11
5afd(5): mov 0x50(%rsp),%r10
5b02(5): mov 0x58(%rsp),%r9d
5b07(5): jmp 0xfffff4e9(%rip)
5b0c(5): mov %r9d,0x58(%rsp)
5b11(5): mov %r10,0x50(%rsp)
5b16(5): mov $0x5,%edx
5b1b(8): add $0x1,0xc8(%r11)
5b23(5): mov %r11,0x48(%rsp)
5b28(7): lea 0x9ccf(%rip),%rsi
5b2f(2): jmp 0xffffff9a(%rip)
5b31(5): mov %r9d,0x58(%rsp)
5b36(5): mov %r10,0x50(%rsp)
5b3b(5): mov $0x5,%edx
5b40(8): add $0x1,0xc8(%r11)
5b48(8): add $0x1,0xa8(%r11)
5b50(7): lea 0xa6b6(%rip),%rsi
5b57(5): mov %r11,0x48(%rsp)
5b5c(5): jmp 0xffffff6d(%rip)
5b61(5): mov %r9d,0x58(%rsp)
5b66(5): mov %r10,0x50(%rsp)
5b6b(4): sub $0x8,%rsp
5b6f(4): push 0x10(%r13)
5b73(4): push 0x8(%r13)
5b77(3): mov %r11,%rdi
5b7a(4): push 0x0(%r13)
5b7e(5): mov %r11,0x68(%rsp)
5b83(5): call 0xffffe4bd(%rip)
5b88(4): add $0x20,%rsp
5b8c(5): mov 0x48(%rsp),%r11
5b91(5): mov 0x50(%rsp),%r10
5b96(5): mov 0x58(%rsp),%r9d
5b9b(5): jmp 0xfffff455(%rip)
5ba0(4): mov 0x8(%r13),%r14
5ba4(5): jmp 0xfffff44c(%rip)
5ba9(b): mov $0x0,0x104(%rsp)
5bb4(4): mov 0xffffffc8(%r13),%rax
5bb8(5): jmp 0xfffffd36(%rip)
5bbd(b): mov $0x0,0x104(%rsp)
5bc8(8): mov $0x0,0x18(%rsp)
5bd0(3): xor %r10d,%r10d
5bd3(9): mov $0x0,0x20(%rsp)
5bdc(9): mov $0x1,0x28(%rsp)
5be5(3): xor %r14d,%r14d
5be8(9): mov $0x0,0x8(%rsp)
5bf1(9): mov $0x0,0x10(%rsp)
5bfa(5): jmp 0xfffff3f6(%rip)
5bff(b): mov $0x0,0x104(%rsp)
5c0a(4): mov 0xffffffc8(%r13),%rax
5c0e(5): jmp 0xfffffaf5(%rip)
5c13(2): xor %edx,%edx
5c15(4): mov 0xffffffc8(%r13),%rax
5c19(c): mov $0x0,0x100(%rsp)
5c25(5): imul 0x0(%r13),%rax
5c2a(4): pxor %xmm0,%xmm0
5c2e(8): movaps %xmm0,0xd0(%rsp)
5c36(8): movaps %xmm0,0xe0(%rsp)
5c3e(8): movaps %xmm0,0xf0(%rsp)
5c46(6): jno 0xfffffcfc(%rip)
5c4c(5): mov $0x1,%edx
5c51(5): jmp 0xfffffcf1(%rip)
5c56(a): nop 0x0(%rax,%rax,1)
5c60(b): mov $0x0,0x104(%rsp)
5c6b(4): mov 0xffffffc8(%r13),%rax
5c6f(5): jmp 0xfffffbfb(%rip)
5c74(5): mov %r9d,0x68(%rsp)
5c79(5): mov %r10,0x60(%rsp)
5c7e(4): sub $0x8,%rsp
5c82(4): push 0xffffffd8(%r13)
5c86(4): push 0xffffffd0(%r13)
5c8a(3): mov %r11,%rdi
5c8d(4): push 0xffffffc8(%r13)
5c91(5): mov %r11,0x78(%rsp)
5c96(5): call 0xffffe3aa(%rip)
5c9b(4): mov 0x0(%r13),%rax
5c9f(3): xor %r8d,%r8d
5ca2(4): mov 0x10(%r13),%rdx
5ca6(4): mov 0x18(%r13),%rcx
5caa(4): mov 0x20(%r13),%rsi
5cae(4): mov 0x28(%r13),%rdi
5cb2(5): mov %rax,0x68(%rsp)
5cb7(4): mov 0x8(%r13),%rax
5cbb(5): mov %rax,0x70(%rsp)
5cc0(4): add $0x20,%rsp
5cc4(5): mov 0x58(%rsp),%r11
5cc9(4): mov 0x30(%r13),%eax
5ccd(5): mov 0x60(%rsp),%r10
5cd2(5): mov 0x68(%rsp),%r9d
5cd7(7): add 0x98(%r11),%eax
5cde(6): jno 0xfffffad1(%rip)
5ce4(6): mov $0x1,%r8d
5cea(5): jmp 0xfffffac5(%rip)
5cef(1): nop 
5cf0(b): mov $0x0,0x104(%rsp)
5cfb(8): mov $0x0,0x18(%rsp)
5d03(6): mov $0x1,%r10d
5d09(9): mov $0x0,0x20(%rsp)
5d12(9): mov $0x0,0x28(%rsp)
5d1b(3): xor %r14d,%r14d
5d1e(9): mov $0x0,0x8(%rsp)
5d27(9): mov $0x0,0x10(%rsp)
5d30(5): jmp 0xfffff2c0(%rip)
5d35(7): mov $0xffffffff,%r14
5d3c(5): jmp 0xfffff2b4(%rip)
5d41(b): mov $0x0,0x104(%rsp)
5d4c(4): mov 0xffffffc8(%r13),%r10
5d50(5): jmp 0xfffff970(%rip)
5d55(b): mov $0x0,0x104(%rsp)
5d60(8): mov $0x0,0x18(%rsp)
5d68(3): xor %r10d,%r10d
5d6b(9): mov $0x0,0x20(%rsp)
5d74(9): mov $0x0,0x28(%rsp)
5d7d(6): mov $0x1,%r14d
5d83(9): mov $0x0,0x8(%rsp)
5d8c(9): mov $0x0,0x10(%rsp)
5d95(5): jmp 0xfffff25b(%rip)
5d9a(4): mov 0xffffffa0(%r13),%rax
5d9e(a): mov $0x-9223372036854775808,%rdx
5da8(6): movdqu 0xffffff90(%r13),%xmm0
5dae(4): mov %rax,0x30(%r11)
5db2(4): mov 0xffffffd0(%r13),%rax
5db6(5): movups %xmm0,0x20(%r11)
5dbb(3): mov %rax,%rcx
5dbe(3): neg %rcx
5dc1(3): cmp %rdx,%rax
5dc4(4): mov %rcx,0x38(%r11)
5dc8(6): jz 0xfffff560(%rip)
5dce(4): mov 0x8(%r13),%rax
5dd2(3): mov %rax,%rcx
5dd5(3): neg %rcx
5dd8(3): cmp %rdx,%rax
5ddb(4): mov %rcx,0x40(%r11)
5ddf(6): jnz 0xfffff211(%rip)
5de5(5): jmp 0xfffff543(%rip)
5dea(6): nop 0x0(%rax,%rax,1)
5df0(4): mov 0xffffffd0(%r13),%rax
5df4(4): mov %rax,0x40(%r11)
5df8(4): mov 0x0(%r13),%rax
5dfc(4): mov %rax,0x38(%r11)
5e00(5): jmp 0xfffff1f0(%rip)
5e05(7): mov 0xffffff58(%r13),%rax
5e0c(6): movdqu 0x0(%r13),%xmm0
5e12(4): mov %rax,0x38(%r11)
5e16(4): mov 0xffffff98(%r13),%rax
5e1a(5): movups %xmm0,0x20(%r11)
5e1f(4): mov %rax,0x40(%r11)
5e23(4): mov 0x10(%r13),%rax
5e27(4): mov %rax,0x30(%r11)
5e2b(5): jmp 0xfffff1c5(%rip)
5e30(4): mov 0xffffff98(%r13),%rax
5e34(6): movdqu 0x0(%r13),%xmm0
5e3a(4): mov %rax,0x40(%r11)
5e3e(4): mov 0xffffffc8(%r13),%rax
5e42(5): movups %xmm0,0x20(%r11)
5e47(4): mov %rax,0x38(%r11)
5e4b(4): mov 0x10(%r13),%rax
5e4f(4): mov %rax,0x30(%r11)
5e53(5): jmp 0xfffff19d(%rip)
5e58(4): mov 0xffffffc8(%r13),%rax
5e5c(4): mov %rax,0x38(%r11)
5e60(4): mov 0x8(%r13),%rax
5e64(4): mov %rax,0x40(%r11)
5e68(5): jmp 0xfffff188(%rip)
5e6d(4): mov 0xffffff90(%r13),%rax
5e71(a): mov $0x-9223372036854775808,%rdx
5e7b(4): mov %rax,0x38(%r11)
5e7f(4): mov 0xffffffd0(%r13),%rax
5e83(3): mov %rax,%rcx
5e86(3): neg %rcx
5e89(3): cmp %rdx,%rax
5e8c(4): mov %rcx,0x40(%r11)
5e90(6): jz 0xfffff498(%rip)
5e96(4): mov 0x8(%r13),%rax
5e9a(3): mov %rax,%rcx
5e9d(3): neg %rcx
5ea0(3): cmp %rdx,%rax
5ea3(4): mov %rcx,0x28(%r11)
5ea7(6): jnz 0xffffff7c(%rip)
5ead(5): jmp 0xfffff47b(%rip)
5eb2(6): nop 0x0(%rax,%rax,1)
5eb8(4): mov 0xffffff98(%r13),%rax
5ebc(4): mov %rax,0x40(%r11)
5ec0(4): mov 0xffffffc8(%r13),%rax
5ec4(4): mov %rax,0x38(%r11)
5ec8(4): mov 0x8(%r13),%rax
5ecc(3): mov %rax,%rdx
5ecf(3): neg %rdx
5ed2(4): mov %rdx,0x28(%r11)
5ed6(a): mov $0x-9223372036854775808,%rdx
5ee0(3): cmp %rdx,%rax
5ee3(6): jnz 0xffffff40(%rip)
5ee9(5): jmp 0xfffff43f(%rip)
5eee(2): nop 
5ef0(b): mov $0x0,0x104(%rsp)
5efb(4): mov 0xffffffc8(%r13),%r14
5eff(5): jmp 0xfffff846(%rip)
5f04(4): mov 0xffffffd0(%r13),%rax
5f08(8): mov $0x1,0xe0(%r11)
5f10(4): mov %rax,0x8(%r11)
5f14(4): mov 0x0(%r13),%rax
5f18(4): mov %eax,0x10(%r11)
5f1c(5): jmp 0xfffff0d4(%rip)
5f21(4): mov 0xffffffc8(%r13),%rax
5f25(8): mov $0x1,0xe0(%r11)
5f2d(4): mov %rax,0x8(%r11)
5f31(4): mov 0x0(%r13),%rax
5f35(4): mov %eax,0x10(%r11)
5f39(5): jmp 0xfffff0b7(%rip)
5f3e(4): mov 0xffffffc8(%r13),%rax
5f42(8): mov $0x0,0x8(%r11)
5f4a(4): mov %eax,0x10(%r11)
5f4e(5): jmp 0xfffff0a2(%rip)
5f53(4): mov 0x0(%r13),%rax
5f57(8): mov $0x0,0x8(%r11)
5f5f(4): mov %eax,0x10(%r11)
5f63(5): jmp 0xfffff08d(%rip)
5f68(4): mov 0xffffffc8(%r13),%eax
5f6c(5): add $0xe10,%eax
5f71(4): mov %eax,0x18(%r11)
5f75(5): jmp 0xfffff07b(%rip)
5f7a(4): mov 0x0(%r13),%eax
5f7e(5): add $0xe10,%eax
5f83(4): mov %eax,0x18(%r11)
5f87(5): jmp 0xfffff069(%rip)
5f8c(5): movzx 0xffffffc8(%r13),%esi
5f91(4): mov 0xffffffd8(%r13),%rcx
5f95(4): lea 0x18(%r11),%rdi
5f99(4): mov 0xffffffd0(%r13),%rdx
5f9d(4): mov 0x0(%r13),%r8
5fa1(5): mov %r9d,0x58(%rsp)
5fa6(5): mov %r10,0x50(%rsp)
5fab(5): mov %r11,0x48(%rsp)
5fb0(5): call 0xffffe440(%rip)
5fb5(2): test %al,%al
5fb7(6): jz 0xfffff371(%rip)
5fbd(5): mov 0x48(%rsp),%r11
5fc2(2): xor %edx,%edx
5fc4(5): mov 0x50(%rsp),%r10
5fc9(5): mov 0x58(%rsp),%r9d
5fce(4): movsxd 0x18(%r11),%rax
5fd2(4): add 0xffffff90(%r13),%rax
5fd6(3): movsxd %eax,%rcx
5fd9(3): seto %dl
5fdc(4): mov %eax,0x18(%r11)
5fe0(3): cmp %rcx,%rax
5fe3(5): mov $0x1,%ecx
5fe8(3): cmovne %ecx,%edx
5feb(2): test %edx,%edx
5fed(6): jz 0xfffff003(%rip)
5ff3(5): jmp 0xfffff335(%rip)
5ff8(8): nop 0x0(%rax,%rax,1)
6000(4): mov 0xffffffc8(%r13),%rax
6004(4): mov %eax,0x18(%r11)
6008(5): jmp 0xffffeeb0(%rip)
600d(8): mov $0x6270,0x18(%r11)
6015(5): jmp 0xffffefdb(%rip)
601a(4): mov 0x0(%r13),%rax
601e(4): mov %eax,0x18(%r11)
6022(5): jmp 0xffffefce(%rip)
6027(8): mov $0x1,0x14(%r11)
602f(8): add $0x1,0xc0(%r11)
6037(5): jmp 0xffffefb9(%rip)
603c(4): mov 0x0(%r13),%rax
6040(4): mov %eax,0x14(%r11)
6044(5): jmp 0xffffefac(%rip)
6049(8): add $0x1,0xd0(%r11)
6051(5): movzx 0xffffffc8(%r13),%esi
6056(4): lea 0x18(%r11),%rdi
605a(4): mov 0xffffffd8(%r13),%rcx
605e(4): mov 0xffffffd0(%r13),%rdx
6062(4): mov 0x0(%r13),%r8
6066(5): mov %r9d,0x58(%rsp)
606b(5): mov %r10,0x50(%rsp)
6070(5): mov %r11,0x48(%rsp)
6075(5): call 0xffffe37b(%rip)
607a(2): test %al,%al
607c(5): mov 0x48(%rsp),%r11
6081(5): mov 0x50(%rsp),%r10
6086(5): mov 0x58(%rsp),%r9d
608b(6): jnz 0xffffef65(%rip)
6091(5): jmp 0xfffff297(%rip)
6096(a): nop 0x0(%rax,%rax,1)
60a0(4): mov 0xffffffc8(%r13),%rax
60a4(7): mov 0xffffff60(%r13),%rdx
60ab(7): mov 0xfffffef0(%r13),%rcx
60b2(8): mov $0x2,0x1c(%r11)
60ba(4): mov %rax,0x58(%r11)
60be(4): movsxd 0xffffffd0(%r13),%rax
60c2(4): mov %rcx,0x48(%r11)
60c6(4): mov %rdx,0x50(%r11)
60ca(4): mov %rax,0x60(%r11)
60ce(5): jmp 0xffffef22(%rip)
60d3(4): mov 0xffffffd0(%r13),%rax
60d7(7): mov 0xffffff60(%r13),%rdx
60de(8): mov $0x0,0x58(%r11)
60e6(8): mov $0x0,0x60(%r11)
60ee(8): mov $0x2,0x1c(%r11)
60f6(4): mov %rdx,0x48(%r11)
60fa(4): mov %rax,0x50(%r11)
60fe(5): jmp 0xffffeef2(%rip)
6103(4): mov 0xffffffd0(%r13),%rax
6107(8): mov $0x0,0x50(%r11)
610f(8): mov $0x0,0x58(%r11)
6117(8): mov $0x0,0x60(%r11)
611f(8): mov $0x2,0x1c(%r11)
6127(4): mov %rax,0x48(%r11)
612b(5): jmp 0xffffeec5(%rip)
6130(4): mov 0xffffffc8(%r13),%rax
6134(7): mov 0xffffff60(%r13),%rdx
613b(7): mov 0xfffffef0(%r13),%rcx
6142(4): mov %rax,0x58(%r11)
6146(4): movsxd 0xffffffd0(%r13),%rax
614a(4): mov %rcx,0x48(%r11)
614e(4): mov %rdx,0x50(%r11)
6152(4): mov %rax,0x60(%r11)
6156(4): mov 0x0(%r13),%rax
615a(4): mov %eax,0x1c(%r11)
615e(5): jmp 0xffffee92(%rip)
6163(4): mov 0xffffffd0(%r13),%rax
6167(7): mov 0xffffff60(%r13),%rdx
616e(8): mov $0x0,0x58(%r11)
6176(8): mov $0x0,0x60(%r11)
617e(4): mov %rax,0x50(%r11)
6182(4): mov 0x0(%r13),%rax
6186(4): mov %rdx,0x48(%r11)
618a(4): mov %eax,0x1c(%r11)
618e(5): jmp 0xffffee62(%rip)
6193(4): mov 0xffffffd0(%r13),%rax
6197(8): mov $0x0,0x50(%r11)
619f(8): mov $0x0,0x58(%r11)
61a7(8): mov $0x0,0x60(%r11)
61af(4): mov %rax,0x48(%r11)
61b3(4): mov 0x0(%r13),%rax
61b7(4): mov %eax,0x1c(%r11)
61bb(5): jmp 0xffffee35(%rip)
61c0(7): lea 0xa06e(%rip),%rsi
61c7(5): mov %r11,0x58(%rsp)
61cc(5): mov %r9d,0x50(%rsp)
61d1(5): mov %r10,0x48(%rsp)
61d6(5): mov $0x5,%edx
61db(2): xor %edi,%edi
61dd(5): call 0xffffc613(%rip)
61e2(5): mov 0x58(%rsp),%r11
61e7(5): mov 0x48(%rsp),%r10
61ec(5): mov 0x50(%rsp),%r9d
61f1(8): cmp $0x0,0xd9(%r11)
61f9(6): jz 0xffffedf7(%rip)
61ff(5): mov %r9d,0x58(%rsp)
6204(5): mov %r10,0x50(%rsp)
6209(3): mov %r11,%rsi
620c(5): mov %r11,0x48(%rsp)
6211(5): jmp 0xffffedc3(%rip)
6216(7): lea 0xa011(%rip),%rsi
621d(2): xor %edi,%edi
621f(5): mov $0x5,%edx
6224(5): mov %r11,0x58(%rsp)
6229(5): mov %r9d,0x50(%rsp)
622e(5): mov %r10,0x48(%rsp)
6233(5): call 0xffffc5bd(%rip)
6238(5): mov 0x58(%rsp),%r11
623d(5): mov 0x48(%rsp),%r10
6242(5): mov 0x50(%rsp),%r9d
6247(8): cmp $0x0,0xd9(%r11)
624f(6): jz 0xffffeda1(%rip)
6255(5): mov %r9d,0x58(%rsp)
625a(5): mov %r10,0x50(%rsp)
625f(3): mov %r11,%rsi
6262(5): mov %r11,0x48(%rsp)
6267(5): jmp 0xfffff889(%rip)
626c(5): mov %r11,0x58(%rsp)
6271(5): mov %r9d,0x50(%rsp)
6276(5): mov $0x5,%edx
627b(5): mov %r10,0x48(%rsp)
6280(7): lea 0x9f9e(%rip),%rsi
6287(5): jmp 0xffffff54(%rip)
628c(5): mov %r9d,0x58(%rsp)
6291(5): mov %r10,0x50(%rsp)
6296(5): mov $0x5,%edx
629b(8): add $0x1,0xb0(%r11)
62a3(5): mov %r11,0x48(%rsp)
62a8(7): lea 0x9f72(%rip),%rsi
62af(5): jmp 0xfffff81a(%rip)
62b4(5): mov %r9d,0x58(%rsp)
62b9(5): mov %r10,0x50(%rsp)
62be(5): mov $0x5,%edx
62c3(8): add $0x1,0xa8(%r11)
62cb(5): mov %r11,0x48(%rsp)
62d0(7): lea 0x9635(%rip),%rsi
62d7(5): jmp 0xfffff7f2(%rip)
62dc(5): mov %r9d,0x58(%rsp)
62e1(5): mov %r10,0x50(%rsp)
62e6(5): mov $0x5,%edx
62eb(8): add $0x1,0xd0(%r11)
62f3(5): mov %r11,0x48(%rsp)
62f8(7): lea 0x9f1d(%rip),%rsi
62ff(5): jmp 0xfffff7ca(%rip)
6304(5): mov %r9d,0x58(%rsp)
6309(5): mov %r10,0x50(%rsp)
630e(5): mov $0x5,%edx
6313(8): add $0x1,0xb8(%r11)
631b(5): mov %r11,0x48(%rsp)
6320(7): lea 0x9eef(%rip),%rsi
6327(5): jmp 0xfffff7a2(%rip)
632c(3): lea 0xffffffd0(%rcx),%eax
632f(2): cmp $0x9,%al
6331(6): jnbe 0xfffff124(%rip)
6337(2): xor %eax,%eax
6339(3): mov %rdi,%rcx
633c(6): mov $0x30,%r14d
6342(3): mov %rax,%r10
6345(2): jmp 0x1e(%rip)
6347(9): nop 0x0(%rax,%rax,1)
6350(4): movzx 0x1(%rcx),%esi
6354(4): lea 0x1(%rcx),%rbp
6358(3): lea 0xffffffd0(%rsi),%edx
635b(3): cmp $0x9,%dl
635e(2): jnbe 0x39(%rip)
6360(3): mov %rbp,%rcx
6363(4): imul %r10,$0xa,%r10
6367(2): jo 0x20(%rip)
6369(4): movzx %sil,%edx
636d(3): mov %r14d,%esi
6370(3): lea 0xffffffd0(%rdx),%eax
6373(2): sub %edx,%esi
6375(4): cmp $0xff,%r9d
6379(3): cmovne %eax,%esi
637c(3): movsxd %esi,%rax
637f(3): add %r10,%rax
6382(3): mov %rax,%r10
6385(2): jno 0xffffffcb(%rip)
6387(5): mov $0x2,%eax
638c(6): mov $0x3f,%r9d
6392(5): jmp 0xfffff09c(%rip)
6397(3): and $0xfd,%esi
639a(3): mov %rbp,%r10
639d(3): mov %rax,%rdx
63a0(4): cmp $0x2c,%sil
63a4(6): jnz 0xd4(%rip)
63aa(4): movsx 0x1(%rbp),%eax
63ae(3): lea 0xffffffd0(%rax),%esi
63b1(4): cmp $0x9,%sil
63b5(6): jnbe 0xc3(%rip)
63bb(4): lea 0x3(%rcx),%rdi
63bf(4): movsx 0x3(%rcx),%ecx
63c3(3): sub $0x30,%eax
63c6(6): mov $0x8,%r10d
63cc(3): lea 0x0(%rax,%rax,4),%eax
63cf(3): lea 0xffffffd0(%rcx),%esi
63d2(2): add %eax,%eax
63d4(4): cmp $0x9,%sil
63d8(2): jnbe 0xd(%rip)
63da(4): lea 0xffffffd0(%rax,%rcx,1),%eax
63de(4): add $0x1,%rdi
63e2(3): movsx (%rdi),%ecx
63e5(4): sub $0x1,%r10d
63e9(2): jnz 0xffffffe3(%rip)
63eb(4): cmp $0xff,%r9d
63ef(2): jnz 0x10(%rip)
63f1(2): jmp 0x6f(%rip)
63f3(5): nop 0x0(%rax,%rax,1)
63f8(4): add $0x1,%rdi
63fc(3): movzx (%rdi),%ecx
63ff(3): sub $0x30,%ecx
6402(3): cmp $0x9,%cl
6405(2): jbe 0xfffffff3(%rip)
6407(3): test %r9d,%r9d
640a(6): jns 0xcb(%rip)
6410(2): test %eax,%eax
6412(6): jz 0xc3(%rip)
6418(a): mov $0x-9223372036854775808,%rcx
6422(3): cmp %rcx,%rdx
6425(6): jz 0xffffff62(%rip)
642b(4): sub $0x1,%rdx
642f(3): mov %rdi,(%r11)
6432(6): mov $0x114,%r9d
6438(8): mov %rdx,0x90(%rsp)
6440(5): mov $0x3b9aca00,%edx
6445(2): sub %eax,%edx
6447(3): movsxd %edx,%rax
644a(5): mov %rax,0x38(%rsp)
644f(5): mov $0x15,%eax
6454(5): jmp 0xffffefda(%rip)
6459(4): add $0x1,%rdi
645d(3): movzx (%rdi),%ecx
6460(3): lea 0xffffffd0(%rcx),%esi
6463(4): cmp $0x9,%sil
6467(2): jnbe 0xffffff98(%rip)
6469(3): cmp $0x30,%cl
646c(2): jz 0xffffffed(%rip)
646e(3): add $0x1,%eax
6471(2): jmp 0xffffff8e(%rip)
6473(5): nop 0x0(%rax,%rax,1)
6478(3): mov %r9d,%eax
647b(3): mov %r10,(%r11)
647e(5): mov %rdx,0x38(%rsp)
6483(3): shr $0x1f,%eax
6486(7): mov %al,0x90(%rsp)
648d(3): mov %r10,%rax
6490(3): sub %rdi,%rax
6493(4): cmp $0x1,%r9d
6497(5): mov %rax,0x40(%rsp)
649c(2): sbb %eax,%eax
649e(2): not %eax
64a0(3): add $0x14,%eax
64a3(4): cmp $0x1,%r9d
64a7(3): sbb %r9d,%r9d
64aa(3): not %r9d
64ad(7): add $0x113,%r9d
64b4(5): jmp 0xffffef7a(%rip)
64b9(5): mov $0x2,%eax
64be(5): jmp 0xffffee6f(%rip)
64c3(2): xor %eax,%eax
64c5(5): jmp 0xffffee68(%rip)
64ca(3): mov (%r11),%rdi
64cd(3): xor %r9d,%r9d
64d0(5): jmp 0xfffffe67(%rip)
64d5(4): cmp $0x1,%r9d
64d9(2): cwde 
64db(8): mov %rdx,0x90(%rsp)
64e3(5): mov %rax,0x38(%rsp)
64e8(2): sbb %eax,%eax
64ea(3): mov %rdi,(%r11)
64ed(2): not %eax
64ef(3): add $0x16,%eax
64f2(4): cmp $0x1,%r9d
64f6(3): sbb %r9d,%r9d
64f9(3): not %r9d
64fc(7): add $0x115,%r9d
6503(5): jmp 0xffffef2b(%rip)
6508(7): mov 0xffffff28(%r13),%rdi
650f(2): test %al,%al
6511(5): mov %rdi,0x48(%rsp)
6516(2): jz 0x42(%rip)
6518(7): lea 0xa231(%rip),%rsi
651f(5): mov $0x5,%edx
6524(2): xor %edi,%edi
6526(5): mov %r11,0x60(%rsp)
652b(5): mov %r9d,0x58(%rsp)
6530(5): mov %r10,0x50(%rsp)
6535(5): call 0xffffc2bb(%rip)
653a(5): mov 0x48(%rsp),%rsi
653f(3): mov %rax,%rdi
6542(2): xor %eax,%eax
6544(5): call 0xffffdd7c(%rip)
6549(5): mov 0x60(%rsp),%r11
654e(5): mov 0x58(%rsp),%r9d
6553(5): mov 0x50(%rsp),%r10
6558(5): mov 0x48(%rsp),%rax
655d(5): jmp 0xfffff8af(%rip)
6562(5): mov 0x70(%rsp),%rax
6567(3): sub %r8d,%ecx
656a(4): seto %r8b
656e(7): mov %ecx,0x98(%r11)
6575(2): xor %ecx,%ecx
6577(3): sub %rdi,%rdx
657a(4): movzx %r8b,%r8d
657e(3): seto %cl
6581(2): xor %edi,%edi
6583(3): sub %rsi,%rax
6586(4): seto %dil
658a(7): mov %rax,0x88(%r11)
6591(2): xor %esi,%esi
6593(8): mov 0x80(%rsp),%rax
659b(5): sub 0x60(%rsp),%rax
65a0(5): mov %rdi,0x70(%rsp)
65a5(7): mov %rdx,0x90(%r11)
65ac(4): seto %sil
65b0(7): mov %rax,0x80(%r11)
65b7(2): xor %edi,%edi
65b9(8): mov 0x88(%rsp),%rax
65c1(5): sub 0x58(%rsp),%rax
65c6(4): seto %dil
65ca(4): mov %rax,0x78(%r11)
65ce(2): xor %edx,%edx
65d0(5): mov 0x68(%rsp),%rax
65d5(5): sub 0x50(%rsp),%rax
65da(3): seto %dl
65dd(4): mov %rax,0x70(%r11)
65e1(5): mov 0x78(%rsp),%rax
65e6(5): mov %rdx,0x50(%rsp)
65eb(5): sub 0x48(%rsp),%rax
65f0(5): jmp 0xffffed0c(%rip)
65f5(3): mov %r14,%rbp
65f8(3): mov 0x0(%rbp),%edx
65fb(4): add $0x4,%rbp
65ff(6): lea 0xfefefeff(%rdx),%eax
6605(2): not %edx
6607(2): and %edx,%eax
6609(5): and $0x80808080,%eax
660e(2): jz 0xffffffea(%rip)
6610(2): mov %eax,%edx
6612(6): mov $0x1,%r9d
6618(3): shr $0x10,%edx
661b(5): test $0x8080,%eax
6620(3): cmove %edx,%eax
6623(4): lea 0x2(%rbp),%rdx
6627(2): mov %eax,%edi
6629(4): cmove %rdx,%rbp
662d(3): add %al,%dil
6630(4): sbb $0x3,%rbp
6634(3): sub %r14,%rbp
6637(4): cmp $0x3,%rbp
663b(2): jz 0xf(%rip)
663d(3): xor %r9d,%r9d
6640(4): cmp $0x4,%rbp
6644(6): jz 0x1cd(%rip)
664a(7): lea 0x20e2ef(%rip),%rcx
6651(7): lea 0x9b71(%rip),%rsi
6658(4): mov %ebx,0x8(%rsp)
665c(5): mov %rbp,0x20(%rsp)
6661(5): mov %r8d,0x10(%rsp)
6666(3): mov %r9d,%ebx
6669(3): mov %rcx,%rbp
666c(5): mov %r11,0x18(%rsp)
6671(2): test %ebx,%ebx
6673(6): jz 0x175(%rip)
6679(5): mov $0x3,%edx
667e(3): mov %r14,%rdi
6681(5): call 0xffffc0df(%rip)
6686(2): test %eax,%eax
6688(3): setz %al
668b(2): test %al,%al
668d(6): jnz 0x16d(%rip)
6693(4): add $0x10,%rbp
6697(4): mov 0x0(%rbp),%rsi
669b(3): test %rsi,%rsi
669e(2): jnz 0xffffffd3(%rip)
66a0(5): mov 0x18(%rsp),%r11
66a5(5): mov 0x10(%rsp),%r8d
66aa(3): mov %r14,%rsi
66ad(5): movsxd 0x8(%rsp),%rbx
66b2(4): mov %al,0x8(%rsp)
66b6(5): mov 0x20(%rsp),%rbp
66bb(3): mov %r11,%rdi
66be(5): mov %r8d,0x28(%rsp)
66c3(5): mov %r11,0x10(%rsp)
66c8(5): call 0xffffde38(%rip)
66cd(3): test %rax,%rax
66d0(3): mov %rax,%rcx
66d3(5): mov 0x10(%rsp),%r11
66d8(5): mov 0x28(%rsp),%r8d
66dd(6): jnz 0xffffef9c(%rip)
66e3(7): lea 0x9a6c(%rip),%rsi
66ea(3): mov %r14,%rdi
66ed(5): mov %r11,0x18(%rsp)
66f2(5): mov %r8d,0x10(%rsp)
66f7(5): call 0xffffc259(%rip)
66fc(2): test %eax,%eax
66fe(5): mov 0x10(%rsp),%r8d
6703(5): mov 0x18(%rsp),%r11
6708(6): jz 0x12d(%rip)
670e(7): lea 0x20e16b(%rip),%rcx
6715(7): lea 0x9ab5(%rip),%rsi
671c(3): mov %r14,%rdi
671f(5): mov %r11,0x20(%rsp)
6724(5): mov %rcx,0x18(%rsp)
6729(5): mov %r8d,0x10(%rsp)
672e(5): call 0xffffc222(%rip)
6733(2): test %eax,%eax
6735(5): mov 0x10(%rsp),%r8d
673a(5): mov 0x18(%rsp),%rcx
673f(5): mov 0x20(%rsp),%r11
6744(6): jz 0xffffef35(%rip)
674a(4): add $0x10,%rcx
674e(3): mov (%rcx),%rsi
6751(3): test %rsi,%rsi
6754(2): jnz 0xffffffc8(%rip)
6756(5): lea 0xffffffff(%r14,%rbp,1),%rdx
675b(3): cmp $0x53,(%rdx)
675e(6): jz 0xe3(%rip)
6764(7): lea 0x20dfb5(%rip),%rcx
676b(7): lea 0x9a64(%rip),%rsi
6772(3): mov %r14,%rdi
6775(5): mov %r11,0x20(%rsp)
677a(5): mov %rcx,0x18(%rsp)
677f(5): mov %r8d,0x10(%rsp)
6784(5): call 0xffffc1cc(%rip)
6789(2): test %eax,%eax
678b(5): mov 0x10(%rsp),%r8d
6790(5): mov 0x18(%rsp),%rcx
6795(5): mov 0x20(%rsp),%r11
679a(6): jz 0xffffeedf(%rip)
67a0(4): add $0x10,%rcx
67a4(3): mov (%rcx),%rsi
67a7(3): test %rsi,%rsi
67aa(2): jnz 0xffffffc8(%rip)
67ac(4): sub $0x1,%rbp
67b0(8): movzx 0x5a0(%rsp),%edx
67b8(6): jz 0x174(%rip)
67be(3): mov %r14,%rax
67c1(3): mov %r14,%rdx
67c4(3): movzx (%rax),%ecx
67c7(2): test %cl,%cl
67c9(2): mov %cl,(%rdx)
67cb(6): jz 0xdd(%rip)
67d1(3): cmp $0x2e,(%rax)
67d4(6): jz 0xca(%rip)
67da(4): add $0x1,%rdx
67de(4): add $0x1,%rax
67e2(2): jmp 0xffffffe2(%rip)
67e4(4): nop 0x0(%rax)
67e8(3): mov %r14,%rdi
67eb(5): call 0xffffc165(%rip)
67f0(2): test %eax,%eax
67f2(3): setz %al
67f5(5): jmp 0xfffffe96(%rip)
67fa(5): movsxd 0x8(%rsp),%rbx
67ff(5): mov 0x10(%rsp),%r8d
6804(3): mov %rbp,%rcx
6807(5): mov 0x18(%rsp),%r11
680c(5): jmp 0xffffee6d(%rip)
6811(3): xor %r9d,%r9d
6814(8): cmp $0x2e,0x5a3(%rsp)
681c(4): setz %r9b
6820(5): jmp 0xfffffe2a(%rip)
6825(6): mov $0x1,%r8d
682b(5): jmp 0xffffe6c3(%rip)
6830(5): call 0xffffc000(%rip)
6835(7): lea 0x20e294(%rip),%rcx
683c(5): jmp 0xffffee3d(%rip)
6841(7): lea 0x20e038(%rip),%rcx
6848(7): lea 0x9982(%rip),%rsi
684f(3): mov $0x0,(%rdx)
6852(3): mov %r14,%rdi
6855(5): mov %r11,0x28(%rsp)
685a(5): mov %rcx,0x20(%rsp)
685f(5): mov %r8d,0x10(%rsp)
6864(5): mov %rdx,0x18(%rsp)
6869(5): call 0xffffc0e7(%rip)
686e(2): test %eax,%eax
6870(5): mov 0x10(%rsp),%r8d
6875(5): mov 0x20(%rsp),%rcx
687a(5): mov 0x28(%rsp),%r11
687f(6): jz 0xffffedfa(%rip)
6885(4): add $0x10,%rcx
6889(3): mov (%rcx),%rsi
688c(5): mov 0x18(%rsp),%rdx
6891(3): test %rsi,%rsi
6894(2): jnz 0xffffffbe(%rip)
6896(3): mov $0x53,(%rdx)
6899(5): jmp 0xfffffecb(%rip)
689e(5): mov $0x1,0x8(%rsp)
68a3(5): jmp 0xffffff3b(%rip)
68a8(5): cmp $0x0,0x8(%rsp)
68ad(2): jz 0x2d(%rip)
68af(3): mov %r11,%rdi
68b2(3): mov %r14,%rsi
68b5(5): mov %r8d,0x10(%rsp)
68ba(5): mov %r11,0x8(%rsp)
68bf(5): call 0xffffdc41(%rip)
68c4(3): test %rax,%rax
68c7(3): mov %rax,%rcx
68ca(5): mov 0x8(%rsp),%r11
68cf(5): mov 0x10(%rsp),%r8d
68d4(6): jnz 0xffffeda5(%rip)
68da(8): cmp $0x0,0xd9(%r11)
68e2(6): jz 0xfffffaa5(%rip)
68e8(7): lea 0x98f2(%rip),%rsi
68ef(5): mov $0x5,%edx
68f4(2): xor %edi,%edi
68f6(5): mov %r11,0x10(%rsp)
68fb(5): mov %r8d,0x8(%rsp)
6900(5): call 0xffffbef0(%rip)
6905(3): mov %r14,%rsi
6908(3): mov %rax,%rdi
690b(2): xor %eax,%eax
690d(5): call 0xffffd9b3(%rip)
6912(5): mov $0x2,%eax
6917(6): mov $0x3f,%r9d
691d(5): mov 0x8(%rsp),%r8d
6922(5): mov 0x10(%rsp),%r11
6927(5): jmp 0xffffeb07(%rip)
692c(7): lea 0x20d90d(%rip),%rcx
6933(7): lea 0x98a5(%rip),%rax
693a(2): cmp %dl,(%rax)
693c(6): jz 0xffffed3d(%rip)
6942(4): add $0x10,%rcx
6946(3): mov (%rcx),%rax
6949(3): test %rax,%rax
694c(2): jnz 0xffffffee(%rip)
694e(5): jmp 0xfffffe70(%rip)

"parse_datetime2" :
6960(2): push %r15
6962(2): push %r14
6964(3): mov %rdx,%r14
6967(2): push %r13
6969(2): push %r12
696b(1): push %rbp
696c(1): push %rbx
696d(3): mov %rsi,%rbp
6970(7): sub $0x458,%rsp
6977(5): mov %rdi,0x28(%rsp)
697c(3): mov %rsi,%rdi
697f(4): mov %ecx,0x20(%rsp)
6983(9): mov $0x28,%rax
698c(8): mov %rax,0x448(%rsp)
6994(2): xor %eax,%eax
6996(4): mov %r8,(%rsp)
699a(5): mov %r9,0x10(%rsp)
699f(5): call 0xffffbe71(%rip)
69a4(3): test %r14,%r14
69a7(5): mov %rax,0x30(%rsp)
69ac(6): jz 0x5c4(%rip)
69b2(4): mov 0x8(%r14),%rax
69b6(3): mov (%r14),%rbx
69b9(5): mov %rax,0x18(%rsp)
69be(4): movzx 0x0(%rbp),%eax
69c2(2): cmp $0x20,%al
69c4(6): jnbe 0x87c(%rip)
69ca(a): mov $0x4294983168,%rcx
69d4(3): mov %rbp,%r13
69d7(5): mov $0x1,%esi
69dc(4): bt %rax,%rcx
69e0(3): mov %rcx,%rdx
69e3(2): jb 0x18(%rip)
69e5(2): jmp 0x24(%rip)
69e7(9): nop 0x0(%rax,%rax,1)
69f0(3): mov %rsi,%rax
69f3(3): shl/sal %cl,%rax
69f6(3): test %rdx,%rax
69f9(2): jz 0x10(%rip)
69fb(4): add $0x1,%r13
69ff(5): movzx 0x0(%r13),%ecx
6a04(3): cmp $0x20,%cl
6a07(2): jbe 0xffffffe9(%rip)
6a09(7): lea 0x9834(%rip),%rdi
6a10(5): mov $0x4,%ecx
6a15(3): mov %r13,%rsi
6a18(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6a1a(3): setnbe %al
6a1d(2): sbb $0x0,%al
6a1f(2): test %al,%al
6a21(2): jnz 0x57(%rip)
6a23(5): movzx 0x4(%r13),%r12d
6a28(4): lea 0x4(%r13),%rcx
6a2c(3): test %r12b,%r12b
6a2f(2): jz 0x49(%rip)
6a31(3): mov %rcx,%rdx
6a34(3): mov %r12d,%eax
6a37(5): mov $0x1,%edi
6a3c(2): jmp 0x1f(%rip)
6a3e(2): nop 
6a40(2): cmp $0x22,%al
6a42(6): jz 0x3f6(%rip)
6a48(3): mov %rdx,%rax
6a4b(4): lea 0x1(%rax),%rdx
6a4f(4): movzx 0x1(%rax),%eax
6a53(4): add $0x1,%rdi
6a57(2): test %al,%al
6a59(2): jz 0x1f(%rip)
6a5b(2): cmp $0x5c,%al
6a5d(2): jnz 0xffffffe3(%rip)
6a5f(4): lea 0x1(%rdx),%rax
6a63(4): movzx 0x1(%rdx),%edx
6a67(3): cmp $0x5c,%dl
6a6a(2): jz 0xffffffe1(%rip)
6a6c(3): cmp $0x22,%dl
6a6f(2): jz 0xffffffdc(%rip)
6a71(7): nop 0x0(%rax)
6a78(4): mov (%rsp),%r15
6a7c(8): lea 0xf0(%rsp),%rdx
6a84(3): mov %r14,%rsi
6a87(3): mov %r15,%rdi
6a8a(5): call 0x4ae6(%rip)
6a8f(3): test %rax,%rax
6a92(6): jz 0x3ce(%rip)
6a98(9): mov $0x0,0x8(%rsp)
6aa1(5): cmp $0x0,0x0(%r13)
6aa6(7): lea 0x980f(%rip),%rax
6aad(c): mov $0x0,0x1e0(%rsp)
6ab9(b): mov $0x2,0x1cc(%rsp)
6ac4(c): mov $0x0,0x218(%rsp)
6ad0(8): lea 0x130(%rsp),%r12
6ad8(c): mov $0x0,0x220(%rsp)
6ae4(c): mov $0x0,0x228(%rsp)
6af0(6): mov $0x76a700,%r14d
6af6(c): mov $0x0,0x230(%rsp)
6b02(c): mov $0x0,0x238(%rsp)
6b0e(4): cmove %rax,%r13
6b12(5): movzx 0x20(%rsp),%eax
6b17(c): mov $0x0,0x240(%rsp)
6b23(8): mov %r13,0x1b0(%rsp)
6b2b(5): movsxd 0x18(%rsp),%r13
6b30(b): mov $0x0,0x248(%rsp)
6b3b(8): mov $0x0,0x250(%rsp)
6b43(7): mov %al,0x289(%rsp)
6b4a(8): movsxd 0x104(%rsp),%rax
6b52(8): mov %r13,0x210(%rsp)
6b5a(8): and $0x1,0x289(%rsp)
6b62(8): lea 0x170(%rsp),%r13
6b6a(6): add $0x76c,%rax
6b70(8): mov %rax,0x1d8(%rsp)
6b78(7): mov 0x100(%rsp),%eax
6b7f(3): add $0x1,%eax
6b82(2): cwde 
6b84(8): mov %rax,0x1e8(%rsp)
6b8c(8): movsxd 0xfc(%rsp),%rax
6b94(8): mov %rax,0x1f0(%rsp)
6b9c(8): movsxd 0xf8(%rsp),%rax
6ba4(8): mov %rax,0x1f8(%rsp)
6bac(8): movsxd 0xf4(%rsp),%rax
6bb4(8): mov %rax,0x200(%rsp)
6bbc(8): movsxd 0xf0(%rsp),%rax
6bc4(8): mov %rax,0x208(%rsp)
6bcc(7): mov 0x110(%rsp),%eax
6bd3(7): mov %eax,0x90(%rsp)
6bda(8): mov $0x0,0x251(%rsp)
6be2(8): mov 0x120(%rsp),%rdx
6bea(c): mov $0x0,0x258(%rsp)
6bf6(c): mov $0x0,0x260(%rsp)
6c02(c): mov $0x0,0x278(%rsp)
6c0e(c): mov $0x0,0x268(%rsp)
6c1a(c): mov $0x0,0x270(%rsp)
6c26(c): mov $0x0,0x280(%rsp)
6c32(8): mov $0x0,0x288(%rsp)
6c3a(8): mov $0x0,0x28a(%rsp)
6c42(8): mov $0x0,0x28b(%rsp)
6c4a(8): mov $0x0,0x28d(%rsp)
6c52(8): mov $0x0,0x28c(%rsp)
6c5a(8): mov $0x0,0x28e(%rsp)
6c62(8): mov $0x0,0x28f(%rsp)
6c6a(8): mov $0x0,0x290(%rsp)
6c72(8): mov %rdx,0x298(%rsp)
6c7a(b): mov $0x10d,0x2a0(%rsp)
6c85(7): mov %eax,0x2a4(%rsp)
6c8c(c): mov $0x0,0x2a8(%rsp)
6c98(3): movsxd %r14d,%rax
6c9b(3): add %rbx,%rax
6c9e(2): jo 0x4e(%rip)
6ca0(3): mov %r13,%rdx
6ca3(3): mov %r12,%rsi
6ca6(3): mov %r15,%rdi
6ca9(8): mov %rax,0x130(%rsp)
6cb1(5): call 0x48bf(%rip)
6cb6(3): test %rax,%rax
6cb9(2): jz 0x23(%rip)
6cbb(8): mov 0x1a0(%rsp),%rax
6cc3(3): test %rax,%rax
6cc6(2): jz 0x16(%rip)
6cc8(7): mov 0x190(%rsp),%edx
6ccf(7): cmp 0x2a4(%rsp),%edx
6cd6(6): jnz 0x6c8(%rip)
6cdc(7): add $0x76a700,%r14d
6ce3(7): cmp $0x1da9c00,%r14d
6cea(2): jnz 0xffffffae(%rip)
6cec(8): mov 0x298(%rsp),%rdi
6cf4(3): test %rdi,%rdi
6cf7(2): jz 0x2f(%rip)
6cf9(8): mov 0x2a8(%rsp),%rsi
6d01(3): test %rsi,%rsi
6d04(2): jz 0x22(%rip)
6d06(5): call 0xffffbc4a(%rip)
6d0b(2): test %eax,%eax
6d0d(2): jnz 0x19(%rip)
6d0f(b): mov $0xffffffff,0x2a4(%rsp)
6d1a(c): mov $0x0,0x2a8(%rsp)
6d26(8): lea 0x1b0(%rsp),%r13
6d2e(3): mov %r13,%rdi
6d31(5): call 0xffffe01f(%rip)
6d36(2): test %eax,%eax
6d38(6): jnz 0xb0(%rip)
6d3e(8): cmp $0x0,0x289(%rsp)
6d46(6): jnz 0x242(%rip)
6d4c(9): movzx 0x250(%rsp),%r12d
6d55(3): test %r12b,%r12b
6d58(6): jnz 0x200(%rip)
6d5e(8): mov 0x258(%rsp),%rax
6d66(8): or 0x278(%rsp),%rax
6d6e(8): or 0x260(%rsp),%rax
6d76(8): mov 0x268(%rsp),%rdx
6d7e(8): or 0x270(%rsp),%rax
6d86(8): add 0x280(%rsp),%rdx
6d8e(3): or %rdx,%rax
6d91(4): cmp $0x1,%rax
6d95(6): jle 0x634(%rip)
6d9b(3): xor %r12d,%r12d
6d9e(4): cmp (%rsp),%r15
6da2(2): jz 0xa(%rip)
6da4(3): mov %r15,%rdi
6da7(5): call 0x47b9(%rip)
6dac(5): mov 0x8(%rsp),%rdi
6db1(5): call 0xffffb95f(%rip)
6db6(8): mov 0x448(%rsp),%rbx
6dbe(9): xor $0x28,%rbx
6dc7(3): mov %r12d,%eax
6dca(6): jnz 0x1106(%rip)
6dd0(7): add $0x458,%rsp
6dd7(1): pop %rbx
6dd8(1): pop %rbp
6dd9(2): pop %r12
6ddb(2): pop %r13
6ddd(2): pop %r14
6ddf(2): pop %r15
6de1(1): ret near (%rsp)
6de2(6): nop 0x0(%rax,%rax,1)
6de8(9): movzx 0x289(%rsp),%r12d
6df1(3): test %r12b,%r12b
6df4(2): jz 0xffffffaa(%rip)
6df6(5): add 0x30(%rsp),%rbp
6dfb(8): mov 0x1b0(%rsp),%rbx
6e03(5): mov $0x5,%edx
6e08(3): cmp %rbp,%rbx
6e0b(6): jb 0x41d(%rip)
6e11(7): lea 0x9431(%rip),%rsi
6e18(2): xor %edi,%edi
6e1a(5): call 0xffffb9d6(%rip)
6e1f(3): mov %rax,%rdi
6e22(3): mov %rbx,%rsi
6e25(2): xor %eax,%eax
6e27(3): xor %r12d,%r12d
6e2a(5): call 0xffffd496(%rip)
6e2f(5): jmp 0xffffff6f(%rip)
6e34(4): nop 0x0(%rax)
6e38(4): cmp $0x64,%rdi
6e3c(2): jle 0x3c(%rip)
6e3e(5): mov %rcx,0x38(%rsp)
6e43(5): call 0xffffbb8d(%rip)
6e48(3): test %rax,%rax
6e4b(5): mov %rax,0x10(%rsp)
6e50(5): mov %rax,0x8(%rsp)
6e55(5): mov 0x38(%rsp),%rcx
6e5a(2): jnz 0x34(%rip)
6e5c(4): nop 0x0(%rax)
6e60(9): mov $0x0,0x8(%rsp)
6e69(3): xor %r12d,%r12d
6e6c(5): jmp 0xffffff40(%rip)
6e71(7): nop 0x0(%rax)
6e78(8): lea 0x370(%rsp),%rax
6e80(9): mov $0x0,0x8(%rsp)
6e89(5): mov %rax,0x10(%rsp)
6e8e(4): cmp $0x22,%r12b
6e92(5): mov 0x10(%rsp),%rdx
6e97(2): jz 0x2e(%rip)
6e99(7): nop 0x0(%rax)
6ea0(2): xor %eax,%eax
6ea2(4): cmp $0x5c,%r12b
6ea6(3): setz %al
6ea9(4): add $0x1,%rdx
6ead(3): add %rcx,%rax
6eb0(5): movzx 0x1(%rax),%r12d
6eb5(3): movzx (%rax),%ecx
6eb8(4): cmp $0x22,%r12b
6ebc(3): mov %cl,0xffffffff(%rdx)
6ebf(4): lea 0x1(%rax),%rcx
6ec3(2): jnz 0xffffffdd(%rip)
6ec5(5): mov 0x10(%rsp),%rdi
6eca(3): mov $0x0,(%rdx)
6ecd(3): xor %r12d,%r12d
6ed0(5): mov %rcx,0x38(%rsp)
6ed5(5): call 0x43db(%rip)
6eda(3): test %rax,%rax
6edd(3): mov %rax,%r15
6ee0(6): jz 0xfffffecc(%rip)
6ee6(5): mov 0x38(%rsp),%rcx
6eeb(4): movzx 0x1(%rcx),%eax
6eef(4): lea 0x1(%rcx),%r13
6ef3(2): cmp $0x20,%al
6ef5(2): jnbe 0x3c(%rip)
6ef7(a): mov $0x4294983168,%rcx
6f01(5): mov $0x1,%esi
6f06(4): bt %rax,%rcx
6f0a(3): mov %rcx,%rdx
6f0d(2): jb 0x16(%rip)
6f0f(2): jmp 0x22(%rip)
6f11(7): nop 0x0(%rax)
6f18(3): mov %rsi,%rax
6f1b(3): shl/sal %cl,%rax
6f1e(3): test %rdx,%rax
6f21(2): jz 0x10(%rip)
6f23(4): add $0x1,%r13
6f27(5): movzx 0x0(%r13),%ecx
6f2c(3): cmp $0x20,%cl
6f2f(2): jbe 0xffffffe9(%rip)
6f31(8): lea 0xf0(%rsp),%rdx
6f39(3): mov %r14,%rsi
6f3c(3): mov %r15,%rdi
6f3f(3): xor %r12d,%r12d
6f42(5): call 0x462e(%rip)
6f47(3): test %rax,%rax
6f4a(6): jnz 0xfffffb57(%rip)
6f50(5): jmp 0xfffffe4e(%rip)
6f55(3): nop (%rax)
6f58(5): mov 0x28(%rsp),%rax
6f5d(9): movdqu 0x208(%rsp),%xmm0
6f66(3): movups %xmm0,(%rax)
6f69(5): jmp 0xfffffe35(%rip)
6f6e(2): nop 
6f70(5): lea 0x60(%rsp),%r14
6f75(3): mov %r14,%rdi
6f78(5): call 0xffffd068(%rip)
6f7d(5): jmp 0xfffffa35(%rip)
6f82(6): nop 0x0(%rax,%rax,1)
6f88(7): lea 0x92d1(%rip),%rsi
6f8f(5): mov $0x5,%edx
6f94(2): xor %edi,%edi
6f96(5): call 0xffffb85a(%rip)
6f9b(3): mov %rax,%rdi
6f9e(2): xor %eax,%eax
6fa0(5): call 0xffffd320(%rip)
6fa5(8): cmp $0x0,0x250(%rsp)
6fad(5): mov $0x5,%edx
6fb2(7): lea 0x92b8(%rip),%rsi
6fb9(2): jnz 0x67(%rip)
6fbb(9): cmp $0x0,0x280(%rsp)
6fc4(5): mov $0x5,%edx
6fc9(7): lea 0x92ba(%rip),%rsi
6fd0(2): jnz 0x50(%rip)
6fd2(5): mov 0x10(%rsp),%rbx
6fd7(3): test %rbx,%rbx
6fda(2): jz 0x3a(%rip)
6fdc(4): cmp %r15,(%rsp)
6fe0(6): jz 0x49f(%rip)
6fe6(7): lea 0x92b5(%rip),%rsi
6fed(5): mov $0x5,%edx
6ff2(2): xor %edi,%edi
6ff4(5): call 0xffffb7fc(%rip)
6ff9(3): mov %rbx,%rcx
6ffc(7): mov 0x20e0dd(%rip),%rdi
7003(3): mov %rax,%rdx
7006(5): mov $0x1,%esi
700b(2): xor %eax,%eax
700d(5): call 0xffffbae3(%rip)
7012(2): jmp 0x2b(%rip)
7014(7): lea 0x92bd(%rip),%rsi
701b(5): mov $0x5,%edx
7020(2): xor %edi,%edi
7022(5): call 0xffffb7ce(%rip)
7027(7): mov 0x20e0b2(%rip),%rdi
702e(3): mov %rax,%rdx
7031(5): mov $0x1,%esi
7036(2): xor %eax,%eax
7038(5): call 0xffffbab8(%rip)
703d(9): cmp $0x0,0x268(%rsp)
7046(8): mov 0x280(%rsp),%rax
704e(2): jz 0x42(%rip)
7050(3): test %rax,%rax
7053(6): jnz 0x303(%rip)
7059(8): mov 0x1c4(%rsp),%r8d
7061(7): mov 0x20e078(%rip),%rsi
7068(3): test %r8d,%r8d
706b(2): jle 0x35(%rip)
706d(7): lea 0x9279(%rip),%rdi
7074(3): mov %rsi,%rcx
7077(5): mov $0x5,%edx
707c(5): mov $0x1,%esi
7081(5): call 0xffffba5f(%rip)
7086(8): mov 0x280(%rsp),%rax
708e(2): nop 
7090(3): test %rax,%rax
7093(6): jnz 0x2c3(%rip)
7099(7): mov 0x20e040(%rip),%rsi
70a0(5): mov $0xa,%edi
70a5(5): call 0xffffb86b(%rip)
70aa(8): cmp $0x0,0x250(%rsp)
70b2(9): movzx 0x289(%rsp),%r12d
70bb(6): jz 0x18d(%rip)
70c1(5): mov 0x28(%rsp),%rax
70c6(9): movdqu 0x208(%rsp),%xmm0
70cf(3): movups %xmm0,(%rax)
70d2(3): test %r12b,%r12b
70d5(6): jz 0x2be(%rip)
70db(5): mov $0x5,%edx
70e0(7): lea 0x9395(%rip),%rsi
70e7(6): cmp $0x0,0x10(%rsp)
70ed(6): jz 0x205(%rip)
70f3(5): mov 0x10(%rsp),%rsi
70f8(7): lea 0x91ba(%rip),%rdi
70ff(5): mov $0x5,%ecx
7104(5): mov $0x5,%edx
7109(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
710b(3): setnbe %al
710e(2): sbb $0x0,%al
7110(2): test %al,%al
7112(6): jz 0x1d9(%rip)
7118(7): lea 0x9d51(%rip),%rsi
711f(2): xor %edi,%edi
7121(5): call 0xffffb6cf(%rip)
7126(5): mov 0x10(%rsp),%rsi
712b(3): mov %rax,%rdi
712e(2): xor %eax,%eax
7130(5): call 0xffffd190(%rip)
7135(5): mov 0x28(%rsp),%r14
713a(7): lea 0x9d57(%rip),%rsi
7141(2): xor %edi,%edi
7143(5): mov $0x5,%edx
7148(3): mov (%r14),%rbx
714b(4): mov 0x8(%r14),%rbp
714f(5): call 0xffffb6a1(%rip)
7154(3): mov %rax,%rdi
7157(2): xor %eax,%eax
7159(3): mov %rbx,%rsi
715c(8): lea 0x130(%rsp),%rbx
7164(2): mov %ebp,%edx
7166(5): call 0xffffd15a(%rip)
716b(3): mov %rbx,%rsi
716e(3): mov %r14,%rdi
7171(5): call 0xffffb73f(%rip)
7176(3): test %rax,%rax
7179(2): jz 0x37(%rip)
717b(8): lea 0x300(%rsp),%rdx
7183(3): mov %rbx,%rdi
7186(2): xor %esi,%esi
7188(5): call 0xffffd628(%rip)
718d(7): lea 0x931c(%rip),%rsi
7194(3): mov %rax,%rbx
7197(2): xor %edi,%edi
7199(5): mov $0x5,%edx
719e(5): call 0xffffb652(%rip)
71a3(3): mov %rbx,%rsi
71a6(3): mov %rax,%rdi
71a9(2): xor %eax,%eax
71ab(5): call 0xffffd115(%rip)
71b0(8): lea 0x170(%rsp),%rbx
71b8(5): mov 0x28(%rsp),%rsi
71bd(3): mov %r15,%rdi
71c0(3): mov %rbx,%rdx
71c3(5): call 0x43ad(%rip)
71c8(3): test %rax,%rax
71cb(6): jz 0xfffffbd3(%rip)
71d1(7): mov 0x198(%rsp),%edi
71d8(8): lea 0x2e0(%rsp),%rsi
71e0(5): call 0xffffcfe0(%rip)
71e5(8): lea 0x300(%rsp),%rdx
71ed(2): xor %esi,%esi
71ef(3): mov %rbx,%rdi
71f2(3): mov %rax,%rbp
71f5(5): call 0xffffd5bb(%rip)
71fa(7): lea 0x92c0(%rip),%rsi
7201(3): mov %rax,%rbx
7204(2): xor %edi,%edi
7206(5): mov $0x5,%edx
720b(5): call 0xffffb5e5(%rip)
7210(3): mov %rbp,%rdx
7213(3): mov %rax,%rdi
7216(3): mov %rbx,%rsi
7219(2): xor %eax,%eax
721b(5): call 0xffffd0a5(%rip)
7220(5): jmp 0xfffffb7e(%rip)
7225(3): nop (%rax)
7228(7): lea 0x9569(%rip),%rsi
722f(2): xor %edi,%edi
7231(5): call 0xffffb5bf(%rip)
7236(3): mov %rax,%rdi
7239(5): jmp 0xfffffbe9(%rip)
723e(2): nop 
7240(3): mov %rbp,%r13
7243(5): jmp 0xfffff7c6(%rip)
7248(8): mov 0x278(%rsp),%rsi
7250(8): mov 0x258(%rsp),%rcx
7258(8): mov 0x280(%rsp),%rdx
7260(8): add 0x268(%rsp),%rdx
7268(3): mov %rsi,%rax
726b(3): or %rcx,%rax
726e(8): or 0x260(%rsp),%rax
7276(8): or 0x270(%rsp),%rax
727e(3): or %rdx,%rax
7281(4): cmp $0x1,%rax
7285(6): jle 0x144(%rip)
728b(3): test %r12b,%r12b
728e(6): jz 0xfffffb0d(%rip)
7294(4): cmp $0x1,%rsi
7298(6): jnle 0xa3(%rip)
729e(4): cmp $0x1,%rcx
72a2(6): jnle 0x86(%rip)
72a8(9): cmp $0x1,0x260(%rsp)
72b1(2): jnle 0x67(%rip)
72b3(9): cmp $0x1,0x270(%rsp)
72bc(2): jnle 0x4c(%rip)
72be(8): mov 0x280(%rsp),%rax
72c6(8): add 0x268(%rsp),%rax
72ce(4): cmp $0x1,%rax
72d2(6): jle 0xfffffac9(%rip)
72d8(7): lea 0x95b1(%rip),%rdi
72df(2): xor %eax,%eax
72e1(5): call 0xffffcfdf(%rip)
72e6(5): jmp 0xfffffab5(%rip)
72eb(7): lea 0x91a4(%rip),%rsi
72f2(2): xor %edi,%edi
72f4(5): call 0xffffb4fc(%rip)
72f9(3): mov %rax,%rdi
72fc(2): xor %eax,%eax
72fe(5): call 0xffffcfc2(%rip)
7303(5): jmp 0xfffffe32(%rip)
7308(7): lea 0x9551(%rip),%rdi
730f(2): xor %eax,%eax
7311(5): call 0xffffcfaf(%rip)
7316(2): jmp 0xffffffa8(%rip)
7318(7): lea 0x9519(%rip),%rdi
731f(2): xor %eax,%eax
7321(5): call 0xffffcf9f(%rip)
7326(2): jmp 0xffffff8d(%rip)
7328(7): lea 0x94e1(%rip),%rdi
732f(2): xor %eax,%eax
7331(5): call 0xffffcf8f(%rip)
7336(5): jmp 0xffffff72(%rip)
733b(7): lea 0x94a6(%rip),%rdi
7342(2): xor %eax,%eax
7344(5): call 0xffffcf7c(%rip)
7349(8): mov 0x258(%rsp),%rcx
7351(5): jmp 0xffffff4d(%rip)
7356(7): mov 0x1c8(%rsp),%edi
735d(8): lea 0x2e0(%rsp),%rsi
7365(5): call 0xffffce5b(%rip)
736a(7): mov 0x20dd6f(%rip),%rdi
7371(7): lea 0x8f6f(%rip),%rdx
7378(3): mov %rax,%rcx
737b(5): mov $0x1,%esi
7380(2): xor %eax,%eax
7382(5): call 0xffffb76e(%rip)
7387(7): mov 0x20dd52(%rip),%rsi
738e(5): jmp 0xfffffd12(%rip)
7393(6): mov $0x1,%r12d
7399(5): jmp 0xfffffa05(%rip)
739e(8): mov %rax,0x2a8(%rsp)
73a6(b): mov $0x10d,0x2b0(%rsp)
73b1(7): mov %edx,0x2b4(%rsp)
73b8(c): mov $0x0,0x2b8(%rsp)
73c4(5): jmp 0xfffff928(%rip)
73c9(8): mov 0x1d8(%rsp),%rbp
73d1(3): test %rbp,%rbp
73d4(6): js 0x534(%rip)
73da(9): cmp $0x2,0x1e0(%rsp)
73e3(6): jz 0x555(%rip)
73e9(2): xor %ebx,%ebx
73eb(7): cmp $0x76c,%rbp
73f2(7): lea 0xfffff894(%rbp),%rax
73f9(6): jnb 0x52f(%rip)
73ff(3): test %rax,%rax
7402(6): jns 0x518(%rip)
7408(3): movsxd %eax,%rdx
740b(7): mov %eax,0x84(%rsp)
7412(3): cmp %rdx,%rax
7415(5): mov $0x1,%edx
741a(3): cmovne %edx,%ebx
741d(3): and $0x1,%ebx
7420(2): test %bl,%bl
7422(6): jz 0xa1(%rip)
7428(3): test %r12b,%r12b
742b(2): jz 0x22(%rip)
742d(7): lea 0x8ebf(%rip),%rsi
7434(2): xor %edi,%edi
7436(5): mov $0x5,%edx
743b(5): call 0xffffb3b5(%rip)
7440(3): mov %rbp,%rsi
7443(3): mov %rax,%rdi
7446(2): xor %eax,%eax
7448(5): call 0xffffce78(%rip)
744d(8): movzx 0x289(%rsp),%eax
7455(2): test %al,%al
7457(5): mov $0x5,%edx
745c(7): lea 0x9485(%rip),%rsi
7463(6): jz 0xfffff938(%rip)
7469(2): xor %edi,%edi
746b(5): call 0xffffb385(%rip)
7470(3): mov %rax,%rdi
7473(2): xor %eax,%eax
7475(5): call 0xffffce4b(%rip)
747a(5): jmp 0xfffff921(%rip)
747f(5): mov 0x10(%rsp),%rsi
7484(7): lea 0x8e2e(%rip),%rdi
748b(5): mov $0x5,%ecx
7490(5): mov $0x5,%edx
7495(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7497(7): lea 0x9322(%rip),%rsi
749e(3): setnbe %al
74a1(2): sbb $0x0,%al
74a3(2): test %al,%al
74a5(6): jz 0xfffffb7b(%rip)
74ab(7): lea 0x8e0c(%rip),%rsi
74b2(2): xor %edi,%edi
74b4(5): call 0xffffb33c(%rip)
74b9(5): mov 0x10(%rsp),%rcx
74be(5): jmp 0xfffffb3e(%rip)
74c3(8): mov 0x1e8(%rsp),%rax
74cb(2): xor %edx,%edx
74cd(4): add $0xffffffff,%rax
74d1(6): jo 0x1059(%rip)
74d7(3): movsxd %eax,%rcx
74da(7): mov %eax,0x80(%rsp)
74e1(3): cmp %rcx,%rax
74e4(5): mov $0x1,%ecx
74e9(8): movzx 0x289(%rsp),%eax
74f1(3): cmovne %ecx,%edx
74f4(2): test %edx,%edx
74f6(6): jnz 0xffffff5f(%rip)
74fc(8): mov 0x1f0(%rsp),%rdx
7504(3): movsxd %edx,%rcx
7507(4): mov %edx,0x7c(%rsp)
750b(3): cmp %rcx,%rdx
750e(4): setnz %r12b
7512(4): movzx %r12b,%r12d
7516(6): jnz 0xffffff3f(%rip)
751c(9): cmp $0x0,0x278(%rsp)
7525(6): jnz 0x66e(%rip)
752b(8): cmp $0x0,0x251(%rsp)
7533(6): jz 0x70f(%rip)
7539(9): cmp $0x0,0x258(%rsp)
7542(6): jnz 0x700(%rip)
7548(9): cmp $0x0,0x260(%rsp)
7551(6): jz 0x642(%rip)
7557(2): test %al,%al
7559(9): mov $0x0,0x70(%rsp)
7562(8): mov $0x0,0x78(%rsp)
756a(c): mov $0x0,0x210(%rsp)
7576(6): jnz 0x6ed(%rip)
757c(b): mov $0xffffffff,0x90(%rsp)
7587(9): cmp $0x0,0x268(%rsp)
7590(6): jnz 0x68b(%rip)
7596(7): mov 0x90(%rsp),%eax
759d(4): mov 0x70(%rsp),%edx
75a1(7): mov %eax,0xd0(%rsp)
75a8(5): lea 0x70(%rsp),%rax
75ad(3): mov %r15,%rdi
75b0(b): mov $0xffffffff,0x88(%rsp)
75bb(3): mov %rax,%rsi
75be(3): mov %rax,%rbp
75c1(5): mov %rax,0x18(%rsp)
75c6(7): mov %edx,0xb0(%rsp)
75cd(4): mov 0x74(%rsp),%edx
75d1(7): mov %edx,0xb4(%rsp)
75d8(4): mov 0x78(%rsp),%edx
75dc(7): mov %edx,0xb8(%rsp)
75e3(4): mov 0x7c(%rsp),%edx
75e7(7): mov %edx,0xbc(%rsp)
75ee(7): mov 0x80(%rsp),%edx
75f5(7): mov %edx,0xc0(%rsp)
75fc(7): mov 0x84(%rsp),%edx
7603(7): mov %edx,0xc4(%rsp)
760a(5): call 0x4016(%rip)
760f(7): mov 0x88(%rsp),%ecx
7616(3): mov %rax,%r14
7619(2): test %ecx,%ecx
761b(2): js 0x1a(%rip)
761d(8): lea 0xb0(%rsp),%rdi
7625(3): mov %rbp,%rsi
7628(5): call 0xffffcea8(%rip)
762d(2): test %al,%al
762f(6): jnz 0x429(%rip)
7635(8): mov 0x280(%rsp),%rax
763d(3): test %rax,%rax
7640(5): mov %rax,0x30(%rsp)
7645(6): jnz 0x319(%rip)
764b(8): mov 0xb0(%rsp),%r10d
7653(5): mov 0x70(%rsp),%r9d
7658(7): mov 0x84(%rsp),%eax
765f(7): mov 0xb8(%rsp),%ebx
7666(4): mov 0x78(%rsp),%esi
766a(7): mov 0xbc(%rsp),%edi
7671(4): mov 0x7c(%rsp),%edx
7675(8): mov 0xc4(%rsp),%r11d
767d(3): cmp %r9d,%r10d
7680(4): mov %eax,0x28(%rsp)
7684(8): mov 0xb4(%rsp),%r8d
768c(4): mov 0x74(%rsp),%ecx
7690(4): mov %ebx,0x38(%rsp)
7694(4): mov %esi,0x40(%rsp)
7698(4): mov %edi,0x10(%rsp)
769c(4): mov %edx,0x20(%rsp)
76a0(8): mov 0xc0(%rsp),%r14d
76a8(7): mov 0x80(%rsp),%ebp
76af(5): mov %r11d,0x44(%rsp)
76b4(8): movzx 0x289(%rsp),%eax
76bc(6): jnz 0xb71(%rip)
76c2(3): cmp %ecx,%r8d
76c5(6): jnz 0xb68(%rip)
76cb(2): cmp %edx,%edi
76cd(6): jnz 0xb60(%rip)
76d3(2): cmp %esi,%ebx
76d5(6): jz 0xb58(%rip)
76db(3): cmp %ebp,%r14d
76de(6): jnz 0xb4f(%rip)
76e4(4): mov 0x28(%rsp),%ebx
76e8(3): cmp %ebx,%r11d
76eb(6): jnz 0xb42(%rip)
76f1(2): test %al,%al
76f3(6): jz 0xfffff6a8(%rip)
76f9(7): lea 0x92a8(%rip),%rsi
7700(5): mov $0x5,%edx
7705(2): xor %edi,%edi
7707(8): lea 0x3e0(%rsp),%rbx
770f(5): call 0xffffb0e1(%rip)
7714(3): mov %rax,%rdi
7717(2): xor %eax,%eax
7719(5): call 0xffffcba7(%rip)
771e(8): lea 0xb0(%rsp),%rdi
7726(3): mov %rbx,%rdx
7729(3): mov %r13,%rsi
772c(5): call 0xffffd084(%rip)
7731(7): lea 0x8c21(%rip),%rsi
7738(3): mov %rax,%r12
773b(5): mov $0x5,%edx
7740(2): xor %edi,%edi
7742(5): call 0xffffb0ae(%rip)
7747(3): mov %r12,%rsi
774a(3): mov %rax,%rdi
774d(2): xor %eax,%eax
774f(5): call 0xffffcb71(%rip)
7754(5): mov 0x18(%rsp),%rdi
7759(3): mov %rbx,%rdx
775c(3): mov %r13,%rsi
775f(5): call 0xffffd051(%rip)
7764(7): lea 0x8c0c(%rip),%rsi
776b(3): mov %rax,%r12
776e(5): mov $0x5,%edx
7773(2): xor %edi,%edi
7775(5): call 0xffffb07b(%rip)
777a(3): mov %r12,%rsi
777d(3): mov %rax,%rdi
7780(2): xor %eax,%eax
7782(5): call 0xffffcb3e(%rip)
7787(7): lea 0x8be8(%rip),%rsi
778e(6): mov $0x1,%r12d
7794(3): mov %rsi,%rax
7797(5): mov 0x40(%rsp),%r11d
779c(5): cmp %r11d,0x38(%rsp)
77a1(7): lea 0x8bce(%rip),%rcx
77a8(7): lea 0x8a92(%rip),%rdx
77af(5): mov 0x20(%rsp),%r11d
77b4(7): lea 0x8a84(%rip),%r9
77bb(3): mov %rcx,%r8
77be(3): mov %rcx,%rdi
77c1(4): cmovne %rdx,%r8
77c5(5): cmp %r11d,0x10(%rsp)
77ca(5): mov 0x28(%rsp),%r11d
77cf(4): cmovne %rdx,%rdi
77d3(3): cmp %ebp,%r14d
77d6(4): cmove %rcx,%rdx
77da(5): cmp %r11d,0x44(%rsp)
77df(4): cmove %rcx,%r9
77e3(4): sub $0x8,%rsp
77e7(5): mov $0x64,%ecx
77ec(1): push %rsi
77ed(1): push %rax
77ee(5): mov $0x64,%esi
77f3(2): push %r8
77f5(7): lea 0x91d4(%rip),%r8
77fc(1): push %rdi
77fd(1): push %rdx
77fe(3): mov %rbx,%rdi
7801(5): mov $0x1,%edx
7806(2): xor %eax,%eax
7808(5): call 0xffffaef8(%rip)
780d(4): add $0x30,%rsp
7811(5): mov $0x34,%eax
7816(2): jmp 0xc(%rip)
7818(4): sub $0x1,%rax
781c(4): cmp $0x20,0x0(%rbx,%rax,1)
7820(2): jnz 0x8(%rip)
7822(2): test %eax,%eax
7824(2): mov %eax,%edx
7826(2): jnz 0xfffffff2(%rip)
7828(3): movsxd %edx,%rax
782b(7): lea 0x8ba6(%rip),%rdi
7832(3): mov %rbx,%rsi
7835(8): mov $0x0,0x3e0(%rsp,%rax,1)
783d(2): xor %eax,%eax
783f(5): call 0xffffca81(%rip)
7844(7): lea 0x8b4a(%rip),%rsi
784b(2): xor %edi,%edi
784d(5): mov $0x5,%edx
7852(5): call 0xffffaf9e(%rip)
7857(3): mov %rax,%rdi
785a(2): xor %eax,%eax
785c(5): call 0xffffca64(%rip)
7861(3): test %r12d,%r12d
7864(2): jz 0x1f(%rip)
7866(7): lea 0x91a3(%rip),%rsi
786d(2): xor %edi,%edi
786f(5): mov $0x5,%edx
7874(5): call 0xffffaf7c(%rip)
7879(3): mov %rax,%rdi
787c(2): xor %eax,%eax
787e(5): call 0xffffca42(%rip)
7883(4): mov 0x20(%rsp),%ebx
7887(4): cmp %ebx,0x10(%rsp)
788b(2): jz 0x24(%rip)
788d(3): cmp %ebp,%r14d
7890(2): jz 0x1f(%rip)
7892(7): lea 0x91af(%rip),%rsi
7899(2): xor %edi,%edi
789b(5): mov $0x5,%edx
78a0(5): call 0xffffaf50(%rip)
78a5(3): mov %rax,%rdi
78a8(2): xor %eax,%eax
78aa(5): call 0xffffca16(%rip)
78af(7): lea 0x91ba(%rip),%rsi
78b6(5): mov $0x5,%edx
78bb(2): xor %edi,%edi
78bd(5): call 0xffffaf33(%rip)
78c2(3): mov %rax,%rdi
78c5(2): xor %eax,%eax
78c7(5): call 0xffffc9f9(%rip)
78cc(6): cmp $0x0,0x30(%rsp)
78d2(5): mov $0x5,%edx
78d7(6): jz 0xddf(%rip)
78dd(7): lea 0x8ac9(%rip),%rsi
78e4(2): xor %edi,%edi
78e6(5): call 0xffffaf0a(%rip)
78eb(7): lea 0x8adf(%rip),%rdi
78f2(3): mov %rax,%rsi
78f5(2): xor %eax,%eax
78f7(5): call 0xffffc9c9(%rip)
78fc(5): jmp 0xfffff49f(%rip)
7901(7): nop 0x0(%rax)
7908(7): mov $0xfffff894,%rax
790f(2): xor %ebx,%ebx
7911(3): sub %rbp,%rax
7914(6): jno 0xfffffaf4(%rip)
791a(5): mov $0x1,%ebx
791f(5): jmp 0xfffffae9(%rip)
7924(4): nop 0x0(%rax)
7928(3): test %rax,%rax
792b(6): jns 0xfffffadd(%rip)
7931(2): jmp 0xffffffe9(%rip)
7933(5): nop 0x0(%rax,%rax,1)
7938(4): cmp $0x44,%rbp
793c(5): mov $0x76c,%ebx
7941(5): mov $0x7d0,%eax
7946(4): cmovng %rax,%rbx
794a(3): add %rbp,%rbx
794d(3): test %r12b,%r12b
7950(6): jnz 0x218(%rip)
7956(3): mov %rbx,%rbp
7959(5): jmp 0xfffffa90(%rip)
795e(7): mov 0x1c8(%rsp),%edi
7965(8): lea 0x3e3(%rsp),%rsi
796d(8): lea 0x3e0(%rsp),%rbp
7975(a): mov $0x5858,0x3e0(%rsp)
797f(8): mov $0x58,0x3e2(%rsp)
7987(5): call 0xffffc839(%rip)
798c(3): mov %rbp,%rdi
798f(5): call 0x3921(%rip)
7994(3): test %rax,%rax
7997(3): mov %rax,%rdx
799a(6): jz 0xb0d(%rip)
79a0(7): mov 0xb0(%rsp),%eax
79a7(5): mov 0x18(%rsp),%rsi
79ac(3): mov %rdx,%rdi
79af(5): mov %rdx,0x20(%rsp)
79b4(b): mov $0xffffffff,0x88(%rsp)
79bf(4): mov %eax,0x70(%rsp)
79c3(7): mov 0xb4(%rsp),%eax
79ca(4): mov %eax,0x74(%rsp)
79ce(7): mov 0xb8(%rsp),%eax
79d5(4): mov %eax,0x78(%rsp)
79d9(7): mov 0xbc(%rsp),%eax
79e0(4): mov %eax,0x7c(%rsp)
79e4(7): mov 0xc0(%rsp),%eax
79eb(7): mov %eax,0x80(%rsp)
79f2(7): mov 0xc4(%rsp),%eax
79f9(7): mov %eax,0x84(%rsp)
7a00(7): mov 0xd0(%rsp),%eax
7a07(7): mov %eax,0x90(%rsp)
7a0e(5): call 0x3c12(%rip)
7a13(8): cmp $0x0,0x88(%rsp)
7a1b(3): mov %rax,%r14
7a1e(5): mov 0x20(%rsp),%rdx
7a23(6): js 0xb51(%rip)
7a29(5): mov 0x18(%rsp),%rsi
7a2e(8): lea 0xb0(%rsp),%rdi
7a36(5): mov %rdx,0x20(%rsp)
7a3b(5): call 0xffffca95(%rip)
7a40(5): mov 0x20(%rsp),%rdx
7a45(2): mov %eax,%ebp
7a47(3): mov %rdx,%rdi
7a4a(5): call 0x3b16(%rip)
7a4f(3): test %bpl,%bpl
7a52(6): jz 0xfffffbf9(%rip)
7a58(9): cmp $0x0,0x260(%rsp)
7a61(6): jz 0x296(%rip)
7a67(9): cmp $0x0,0x258(%rsp)
7a70(6): jnz 0x3ce(%rip)
7a76(8): mov 0x1b8(%rsp),%rax
7a7e(3): test %rax,%rax
7a81(2): jle 0x17(%rip)
7a83(3): xor %r12d,%r12d
7a86(7): mov 0x1c0(%rsp),%esi
7a8d(7): cmp %esi,0x88(%rsp)
7a94(4): setnz %r12b
7a98(3): sub %r12,%rax
7a9b(4): imul %rax,$0x7,%rcx
7a9f(2): jo 0x4b(%rip)
7aa1(7): mov 0x1c0(%rsp),%eax
7aa8(7): sub 0x88(%rsp),%eax
7aaf(5): mov $0x7,%esi
7ab4(3): add $0x7,%eax
7ab7(1): cdq %eax
7ab8(2): idiv %esi,%eax
7aba(3): movsxd %edx,%rax
7abd(3): add %rcx,%rax
7ac0(2): jo 0x2a(%rip)
7ac2(5): movsxd 0x7c(%rsp),%rdx
7ac7(3): add %rdx,%rax
7aca(3): seto %dl
7acd(3): movsxd %eax,%rcx
7ad0(4): mov %eax,0x7c(%rsp)
7ad4(3): cmp %rcx,%rax
7ad7(3): movzx %dl,%edx
7ada(5): mov $0x1,%ecx
7adf(3): cmovne %ecx,%edx
7ae2(2): test %edx,%edx
7ae4(6): jz 0x18f(%rip)
7aea(8): cmp $0x0,0x289(%rsp)
7af2(6): jz 0xfffff2a9(%rip)
7af8(5): mov 0x18(%rsp),%rdi
7afd(8): lea 0x300(%rsp),%rdx
7b05(3): mov %r13,%rsi
7b08(5): call 0xffffcca8(%rip)
7b0d(8): lea 0x3e0(%rsp),%rsi
7b15(8): mov 0x1c0(%rsp),%r14d
7b1d(8): mov 0x1b8(%rsp),%rbp
7b25(3): mov %r13,%rdi
7b28(3): mov %rax,%r12
7b2b(5): call 0xffffcd45(%rip)
7b30(7): lea 0x8f61(%rip),%rsi
7b37(3): mov %rax,%rbx
7b3a(2): xor %edi,%edi
7b3c(5): mov $0x5,%edx
7b41(5): call 0xffffacaf(%rip)
7b46(3): mov %r12,%r8
7b49(3): mov %rax,%rdi
7b4c(3): mov %r14d,%ecx
7b4f(3): mov %rbp,%rdx
7b52(3): mov %rbx,%rsi
7b55(2): xor %eax,%eax
7b57(5): call 0xffffc769(%rip)
7b5c(5): jmp 0xfffff23f(%rip)
7b61(7): nop 0x0(%rax)
7b68(7): lea 0x8d49(%rip),%rsi
7b6f(5): mov $0x5,%edx
7b74(2): xor %edi,%edi
7b76(5): call 0xffffac7a(%rip)
7b7b(3): mov %rbp,%rsi
7b7e(3): mov %rax,%rdi
7b81(3): mov %rbx,%rdx
7b84(2): xor %eax,%eax
7b86(3): mov %rbx,%rbp
7b89(5): call 0xffffc737(%rip)
7b8e(5): jmp 0xfffff85b(%rip)
7b93(8): mov 0x1cc(%rsp),%r9d
7b9b(8): mov 0x1f8(%rsp),%rbp
7ba3(3): test %r9d,%r9d
7ba6(6): jz 0x662(%rip)
7bac(4): cmp $0x1,%r9d
7bb0(2): jnz 0x7e(%rip)
7bb2(4): lea 0xffffffff(%rbp),%rdx
7bb6(4): lea 0xc(%rbp),%r9d
7bba(4): cmp $0xa,%rdx
7bbe(2): jbe 0x7d(%rip)
7bc0(4): cmp $0xc,%rbp
7bc4(6): jnz 0xa9e(%rip)
7bca(8): mov $0xc,0x78(%rsp)
7bd2(6): mov $0xc,%r9d
7bd8(8): mov 0x200(%rsp),%rdx
7be0(8): mov 0x208(%rsp),%rcx
7be8(2): test %al,%al
7bea(4): mov %edx,0x74(%rsp)
7bee(4): mov %ecx,0x70(%rsp)
7bf2(6): jnz 0x5b6(%rip)
7bf8(8): mov 0x258(%rsp),%rax
7c00(8): or 0x260(%rsp),%rax
7c08(8): or 0x278(%rsp),%rax
7c10(6): jz 0xfffff977(%rip)
7c16(5): jmp 0xfffff966(%rip)
7c1b(7): mov 0x1c4(%rsp),%eax
7c22(7): mov %eax,0x90(%rsp)
7c29(5): jmp 0xfffff974(%rip)
7c2e(4): cmp $0x17,%rbp
7c32(6): jnbe 0x8a8(%rip)
7c38(3): mov %ebp,%r9d
7c3b(5): mov %r9d,0x78(%rsp)
7c40(2): jmp 0xffffff98(%rip)
7c42(2): test %al,%al
7c44(9): mov $0x0,0x70(%rsp)
7c4d(8): mov $0x0,0x78(%rsp)
7c55(c): mov $0x0,0x210(%rsp)
7c61(2): jz 0xffffff97(%rip)
7c63(7): lea 0x8d06(%rip),%rdi
7c6a(2): xor %eax,%eax
7c6c(5): call 0xffffc654(%rip)
7c71(2): jmp 0xffffff87(%rip)
7c73(5): mov 0x18(%rsp),%rsi
7c78(3): mov %r15,%rdi
7c7b(b): mov $0xffffffff,0x90(%rsp)
7c86(5): call 0x399a(%rip)
7c8b(4): cmp $0xffffffff,%rax
7c8f(3): mov %rax,%r14
7c92(6): jz 0xfffffe58(%rip)
7c98(8): cmp $0x0,0x289(%rsp)
7ca0(6): jz 0x1ae(%rip)
7ca6(8): lea 0x300(%rsp),%rbp
7cae(5): mov 0x18(%rsp),%rdi
7cb3(3): mov %r13,%rsi
7cb6(3): mov %rbp,%rdx
7cb9(5): call 0xffffcaf7(%rip)
7cbe(8): lea 0x3e0(%rsp),%rsi
7cc6(3): mov %r13,%rdi
7cc9(3): mov %rax,%rbp
7ccc(5): call 0xffffcba4(%rip)
7cd1(7): lea 0x8704(%rip),%rsi
7cd8(3): mov %rax,%r12
7cdb(5): mov $0x5,%edx
7ce0(2): xor %edi,%edi
7ce2(5): call 0xffffab0e(%rip)
7ce7(3): mov %rbp,%rdx
7cea(3): mov %rax,%rdi
7ced(3): mov %r12,%rsi
7cf0(2): xor %eax,%eax
7cf2(5): call 0xffffc5ce(%rip)
7cf7(8): cmp $0x0,0x289(%rsp)
7cff(6): jz 0x14f(%rip)
7d05(9): cmp $0x0,0x258(%rsp)
7d0e(8): mov 0x260(%rsp),%rax
7d16(6): jnz 0x449(%rip)
7d1c(3): test %rax,%rax
7d1f(6): jz 0x862(%rip)
7d25(8): lea 0x300(%rsp),%rbp
7d2d(5): mov 0x18(%rsp),%rdi
7d32(3): mov %rbp,%rdx
7d35(3): mov %r13,%rsi
7d38(5): call 0xffffca78(%rip)
7d3d(7): lea 0x86cb(%rip),%rsi
7d44(3): mov %rax,%rbx
7d47(5): mov $0x5,%edx
7d4c(2): xor %edi,%edi
7d4e(5): call 0xffffaaa2(%rip)
7d53(3): mov %rbx,%rsi
7d56(3): mov %rax,%rdi
7d59(2): xor %eax,%eax
7d5b(5): call 0xffffc565(%rip)
7d60(8): mov 0x218(%rsp),%rax
7d68(8): mov 0x220(%rsp),%rdx
7d70(8): movzx 0x289(%rsp),%ebx
7d78(3): or %rax,%rdx
7d7b(3): mov %rdx,%rsi
7d7e(8): or 0x228(%rsp),%rsi
7d86(6): jz 0xe5(%rip)
7d8c(2): test %bl,%bl
7d8e(6): jz 0x147(%rip)
7d94(3): test %rdx,%rdx
7d97(6): jz 0x8f2(%rip)
7d9d(5): cmp $0xf,0x7c(%rsp)
7da2(2): jz 0x1f(%rip)
7da4(7): lea 0x8dad(%rip),%rsi
7dab(2): xor %edi,%edi
7dad(5): mov $0x5,%edx
7db2(5): call 0xffffaa3e(%rip)
7db7(3): mov %rax,%rdi
7dba(2): xor %eax,%eax
7dbc(5): call 0xffffc504(%rip)
7dc1(9): cmp $0x0,0x228(%rsp)
7dca(6): jnz 0x8bf(%rip)
7dd0(8): movsxd 0x84(%rsp),%rdx
7dd8(2): xor %eax,%eax
7dda(3): mov %rdx,%rcx
7ddd(8): add 0x218(%rsp),%rcx
7de5(3): movsxd %ecx,%rdx
7de8(3): seto %al
7deb(4): mov %ecx,0x20(%rsp)
7def(3): cmp %rdx,%rcx
7df2(5): mov $0x1,%edx
7df7(3): cmovne %edx,%eax
7dfa(2): test %eax,%eax
7dfc(6): jz 0x104(%rip)
7e02(8): cmp $0x0,0x289(%rsp)
7e0a(6): jz 0xffffef91(%rip)
7e10(7): lea 0x8612(%rip),%rsi
7e17(2): xor %edi,%edi
7e19(5): mov $0x5,%edx
7e1e(5): call 0xffffa9d2(%rip)
7e23(7): lea 0x860d(%rip),%rsi
7e2a(3): mov %rax,%rdi
7e2d(5): mov $0x877,%edx
7e32(2): xor %eax,%eax
7e34(5): call 0xffffc48c(%rip)
7e39(5): jmp 0xffffef62(%rip)
7e3e(8): movzx 0x289(%rsp),%ebx
7e46(2): test %bl,%bl
7e48(6): jnz 0x320(%rip)
7e4e(8): mov 0x218(%rsp),%rax
7e56(8): mov 0x220(%rsp),%rdx
7e5e(3): or %rax,%rdx
7e61(8): or 0x228(%rsp),%rdx
7e69(2): jnz 0x6c(%rip)
7e6b(9): cmp $0x0,0x280(%rsp)
7e74(6): jz 0x49d(%rip)
7e7a(8): movsxd 0x1c8(%rsp),%rax
7e82(2): xor %edx,%edx
7e84(3): mov %rax,%rbp
7e87(8): sub 0x98(%rsp),%rax
7e8f(3): seto %dl
7e92(3): sub %rax,%r14
7e95(3): seto %al
7e98(3): movzx %al,%eax
7e9b(3): or %rax,%rdx
7e9e(6): jz 0x473(%rip)
7ea4(2): test %bl,%bl
7ea6(6): jz 0xffffeef5(%rip)
7eac(7): lea 0x8ea5(%rip),%rsi
7eb3(2): xor %edi,%edi
7eb5(5): mov $0x5,%edx
7eba(5): call 0xffffa936(%rip)
7ebf(2): mov %ebp,%esi
7ec1(3): mov %rax,%rdi
7ec4(2): xor %eax,%eax
7ec6(5): call 0xffffc3fa(%rip)
7ecb(5): jmp 0xffffeed0(%rip)
7ed0(5): call 0xffffa960(%rip)
7ed5(8): movsxd 0x84(%rsp),%rdx
7edd(3): add %rdx,%rax
7ee0(3): seto %dl
7ee3(3): movsxd %eax,%rcx
7ee6(4): mov %eax,0x20(%rsp)
7eea(3): cmp %rcx,%rax
7eed(3): movzx %dl,%edx
7ef0(5): mov $0x1,%ecx
7ef5(3): cmovne %ecx,%edx
7ef8(2): test %edx,%edx
7efa(6): jnz 0xffffeea1(%rip)
7f00(8): movsxd 0x80(%rsp),%r12
7f08(2): xor %eax,%eax
7f0a(8): add 0x220(%rsp),%r12
7f12(3): movsxd %r12d,%rdx
7f15(3): seto %al
7f18(3): cmp %rdx,%r12
7f1b(6): jnz 0xfffffee7(%rip)
7f21(2): test %eax,%eax
7f23(6): jnz 0xfffffedf(%rip)
7f29(5): movsxd 0x7c(%rsp),%rbp
7f2e(2): xor %eax,%eax
7f30(8): add 0x228(%rsp),%rbp
7f38(3): movsxd %ebp,%rdx
7f3b(3): seto %al
7f3e(3): cmp %rdx,%rbp
7f41(6): jnz 0xfffffec1(%rip)
7f47(2): test %eax,%eax
7f49(6): jnz 0xfffffeb9(%rip)
7f4f(4): mov 0x20(%rsp),%eax
7f53(5): mov 0x18(%rsp),%rsi
7f58(3): mov %r15,%rdi
7f5b(8): mov %r12d,0x80(%rsp)
7f63(4): mov %ebp,0x7c(%rsp)
7f67(7): mov %eax,0x84(%rsp)
7f6e(7): mov 0xb8(%rsp),%eax
7f75(4): mov %eax,0x78(%rsp)
7f79(7): mov 0xb4(%rsp),%eax
7f80(4): mov %eax,0x74(%rsp)
7f84(7): mov 0xb0(%rsp),%eax
7f8b(4): mov %eax,0x70(%rsp)
7f8f(7): mov 0xd0(%rsp),%eax
7f96(7): mov %eax,0x90(%rsp)
7f9d(5): call 0x3683(%rip)
7fa2(4): cmp $0xffffffff,%rax
7fa6(3): mov %rax,%r14
7fa9(6): jz 0x66e(%rip)
7faf(8): movzx 0x289(%rsp),%ebx
7fb7(2): test %bl,%bl
7fb9(6): jz 0xfffffeb2(%rip)
7fbf(8): mov 0x228(%rsp),%rcx
7fc7(8): mov 0x218(%rsp),%rax
7fcf(7): lea 0x8c72(%rip),%rsi
7fd6(8): mov 0x220(%rsp),%rbx
7fde(2): xor %edi,%edi
7fe0(5): mov $0x5,%edx
7fe5(5): mov %rcx,0x38(%rsp)
7fea(5): mov %rax,0x30(%rsp)
7fef(5): call 0xffffa801(%rip)
7ff4(5): mov 0x38(%rsp),%rcx
7ff9(5): mov 0x30(%rsp),%rsi
7ffe(3): mov %rbx,%rdx
8001(3): mov %rax,%rdi
8004(2): xor %eax,%eax
8006(5): call 0xffffc2ba(%rip)
800b(5): mov 0x18(%rsp),%rdi
8010(8): lea 0x300(%rsp),%rdx
8018(3): mov %r13,%rsi
801b(5): call 0xffffc795(%rip)
8020(7): lea 0x8421(%rip),%rsi
8027(2): xor %edi,%edi
8029(3): mov %rax,%rbx
802c(5): mov $0x5,%edx
8031(5): call 0xffffa7bf(%rip)
8036(3): mov %rbx,%rsi
8039(3): mov %rax,%rdi
803c(2): xor %eax,%eax
803e(5): call 0xffffc282(%rip)
8043(7): mov 0xd0(%rsp),%eax
804a(3): cmp $0xff,%eax
804d(2): jz 0x28(%rip)
804f(7): cmp 0x90(%rsp),%eax
8056(2): jz 0x1f(%rip)
8058(7): lea 0x8c29(%rip),%rsi
805f(2): xor %edi,%edi
8061(5): mov $0x5,%edx
8066(5): call 0xffffa78a(%rip)
806b(3): mov %rax,%rdi
806e(2): xor %eax,%eax
8070(5): call 0xffffc250(%rip)
8075(9): cmp $0x0,0x228(%rsp)
807e(6): jnz 0xd4(%rip)
8084(4): cmp 0x7c(%rsp),%ebp
8088(2): jnz 0x1f(%rip)
808a(9): cmp $0x0,0x220(%rsp)
8093(6): jnz 0xbf(%rip)
8099(8): cmp 0x80(%rsp),%r12d
80a1(6): jz 0xb1(%rip)
80a7(7): lea 0x8c1a(%rip),%rsi
80ae(5): mov $0x5,%edx
80b3(2): xor %edi,%edi
80b5(5): call 0xffffa73b(%rip)
80ba(3): mov %rax,%rdi
80bd(2): xor %eax,%eax
80bf(5): call 0xffffc201(%rip)
80c4(8): lea 0x2d3(%rsp),%r8
80cc(4): mov 0x20(%rsp),%edi
80d0(3): mov %r8,%rsi
80d3(5): mov %r8,0x30(%rsp)
80d8(5): call 0xffffaa88(%rip)
80dd(7): lea 0x8c24(%rip),%rsi
80e4(5): mov $0x5,%edx
80e9(2): xor %edi,%edi
80eb(3): mov %rax,%rbx
80ee(5): call 0xffffa702(%rip)
80f3(5): lea 0x1(%r12),%edx
80f8(2): mov %ebp,%ecx
80fa(3): mov %rbx,%rsi
80fd(3): mov %rax,%rdi
8100(2): xor %eax,%eax
8102(5): call 0xffffc1be(%rip)
8107(5): mov 0x30(%rsp),%r8
810c(7): mov 0x80(%rsp),%eax
8113(7): mov 0x84(%rsp),%edi
811a(5): mov 0x7c(%rsp),%r12d
811f(3): mov %r8,%rsi
8122(3): lea 0x1(%rax),%ebx
8125(5): call 0xffffaa3b(%rip)
812a(7): lea 0x8bff(%rip),%rsi
8131(3): mov %rax,%rbp
8134(5): mov $0x5,%edx
8139(2): xor %edi,%edi
813b(5): call 0xffffa6b5(%rip)
8140(3): mov %r12d,%ecx
8143(3): mov %rax,%rdi
8146(2): mov %ebx,%edx
8148(3): mov %rbp,%rsi
814b(2): xor %eax,%eax
814d(5): call 0xffffc173(%rip)
8152(8): movzx 0x289(%rsp),%ebx
815a(5): jmp 0xfffffd11(%rip)
815f(3): test %rax,%rax
8162(6): jz 0xfffffbc3(%rip)
8168(8): lea 0x300(%rsp),%rbp
8170(8): lea 0x3e0(%rsp),%rsi
8178(3): mov %r13,%rdi
817b(5): call 0xffffc6f5(%rip)
8180(7): lea 0x8991(%rip),%rsi
8187(3): mov %rax,%rbx
818a(2): xor %edi,%edi
818c(5): mov $0x5,%edx
8191(5): call 0xffffa65f(%rip)
8196(3): mov %rbx,%rsi
8199(3): mov %rax,%rdi
819c(2): xor %eax,%eax
819e(5): call 0xffffc122(%rip)
81a3(5): jmp 0xfffffb8a(%rip)
81a8(8): lea 0x300(%rsp),%rbp
81b0(7): lea 0x8175(%rip),%r8
81b7(1): push %rcx
81b8(1): push %rdx
81b9(5): mov $0x64,%esi
81be(5): mov $0x1,%edx
81c3(3): mov %rbp,%rdi
81c6(2): xor %eax,%eax
81c8(5): mov $0x64,%ecx
81cd(5): call 0xffffa533(%rip)
81d2(1): pop %rsi
81d3(1): pop %rdi
81d4(9): cmp $0x0,0x278(%rsp)
81dd(5): mov $0x5,%edx
81e2(6): jz 0x494(%rip)
81e8(7): lea 0x8721(%rip),%rsi
81ef(2): xor %edi,%edi
81f1(5): call 0xffffa5ff(%rip)
81f6(3): mov %rax,%rdi
81f9(3): mov %rbp,%rsi
81fc(2): xor %eax,%eax
81fe(5): call 0xffffc0c2(%rip)
8203(5): jmp 0xfffff9f5(%rip)
8208(4): lea 0xffffffff(%rbp),%rdx
820c(4): cmp $0xa,%rdx
8210(6): jbe 0xfffffa28(%rip)
8216(4): cmp $0xc,%rbp
821a(6): jnz 0x2ff(%rip)
8220(8): mov $0x0,0x78(%rsp)
8228(5): jmp 0xfffff9b0(%rip)
822d(2): test %al,%al
822f(6): jz 0xffffeb6c(%rip)
8235(7): lea 0x876c(%rip),%rsi
823c(5): mov $0x5,%edx
8241(2): xor %edi,%edi
8243(4): mov %ecx,0x5c(%rsp)
8247(5): mov %r8d,0x58(%rsp)
824c(8): lea 0x3e0(%rsp),%rbx
8254(5): mov %r9d,0x54(%rsp)
8259(5): mov %r10d,0x50(%rsp)
825e(5): call 0xffffa592(%rip)
8263(3): mov %rax,%rdi
8266(2): xor %eax,%eax
8268(5): call 0xffffc058(%rip)
826d(8): lea 0xb0(%rsp),%rdi
8275(3): mov %r13,%rsi
8278(3): mov %rbx,%rdx
827b(5): call 0xffffc535(%rip)
8280(7): lea 0x80d2(%rip),%rsi
8287(5): mov $0x5,%edx
828c(2): xor %edi,%edi
828e(5): mov %rax,0x48(%rsp)
8293(5): call 0xffffa55d(%rip)
8298(5): mov 0x48(%rsp),%rsi
829d(3): mov %rax,%rdi
82a0(2): xor %eax,%eax
82a2(5): call 0xffffc01e(%rip)
82a7(5): mov 0x18(%rsp),%rdi
82ac(3): mov %r13,%rsi
82af(3): mov %rbx,%rdx
82b2(5): call 0xffffc4fe(%rip)
82b7(7): lea 0x80b9(%rip),%rsi
82be(5): mov $0x5,%edx
82c3(2): xor %edi,%edi
82c5(3): mov %rax,%r13
82c8(5): call 0xffffa528(%rip)
82cd(3): mov %r13,%rsi
82d0(3): mov %rax,%rdi
82d3(2): xor %eax,%eax
82d5(5): call 0xffffbfeb(%rip)
82da(5): mov 0x50(%rsp),%r10d
82df(5): mov 0x54(%rsp),%r9d
82e4(7): lea 0x808b(%rip),%rdx
82eb(5): mov 0x58(%rsp),%r8d
82f0(4): mov 0x5c(%rsp),%ecx
82f4(7): lea 0x7f46(%rip),%rax
82fb(3): mov %rdx,%rsi
82fe(3): cmp %r9d,%r10d
8301(4): cmovne %rax,%rsi
8305(3): cmp %ecx,%r8d
8308(4): cmove %rdx,%rax
830c(5): jmp 0xfffff48b(%rip)
8311(2): test %bl,%bl
8313(6): jnz 0x221(%rip)
8319(8): mov 0x230(%rsp),%rbp
8321(9): movzx 0x289(%rsp),%r12d
832a(7): imul %rbp,$0xe10,%r9
8331(6): jo 0x15c(%rip)
8337(3): add %r14,%r9
833a(6): jo 0x153(%rip)
8340(8): mov 0x238(%rsp),%r13
8348(4): imul %r13,$0x3c,%rax
834c(6): jo 0x141(%rip)
8352(3): add %rax,%r9
8355(6): jo 0x138(%rip)
835b(8): mov 0x240(%rsp),%r14
8363(3): add %r14,%r9
8366(6): jo 0x127(%rip)
836c(8): movsxd 0x248(%rsp),%rsi
8374(8): mov 0x210(%rsp),%rcx
837c(6): mov $0x3b9aca00,%r8d
8382(3): mov %r9,%rbx
8385(3): add %rsi,%rcx
8388(3): mov %rcx,%rax
838b(2): cdq %rax
838d(3): idiv %r8,%rax
8390(7): lea 0x3b9aca00(%rdx),%rax
8397(2): cdq %rax
8399(3): idiv %r8,%rax
839c(3): mov %rcx,%rax
839f(3): sub %rdx,%rax
83a2(3): mov %rdx,%rdi
83a5(2): cdq %rax
83a7(3): idiv %r8,%rax
83aa(2): cwde 
83ac(3): add %rax,%rbx
83af(6): jo 0xde(%rip)
83b5(5): mov 0x28(%rsp),%rax
83ba(3): test %r12b,%r12b
83bd(3): mov %rbx,(%rax)
83c0(4): mov %rdi,0x8(%rax)
83c4(6): jz 0xffffed0e(%rip)
83ca(3): mov %rbp,%rax
83cd(3): or %r13,%rax
83d0(3): or %r14,%rax
83d3(3): or %rsi,%rax
83d6(6): jz 0xffffecfc(%rip)
83dc(4): mov %esi,0x18(%rsp)
83e0(7): lea 0x89d1(%rip),%rsi
83e7(2): xor %edi,%edi
83e9(5): mov $0x5,%edx
83ee(5): call 0xffffa402(%rip)
83f3(5): mov 0x18(%rsp),%r10d
83f8(3): mov %r14,%rcx
83fb(3): mov %rax,%rdi
83fe(3): mov %r13,%rdx
8401(2): xor %eax,%eax
8403(3): mov %rbp,%rsi
8406(3): mov %r10d,%r8d
8409(5): call 0xffffbeb7(%rip)
840e(7): lea 0x89f3(%rip),%rsi
8415(2): xor %edi,%edi
8417(5): mov $0x5,%edx
841c(5): call 0xffffa3d4(%rip)
8421(3): mov %rbx,%rsi
8424(3): mov %rax,%rdi
8427(2): xor %eax,%eax
8429(5): call 0xffffbe97(%rip)
842e(8): cmp $0xff,0x90(%rsp)
8436(2): jz 0x49(%rip)
8438(5): mov 0x28(%rsp),%rsi
843d(8): lea 0x170(%rsp),%rdx
8445(3): mov %r15,%rdi
8448(5): call 0x3128(%rip)
844d(3): test %rax,%rax
8450(2): jz 0x2f(%rip)
8452(7): mov 0x190(%rsp),%eax
8459(7): cmp %eax,0x90(%rsp)
8460(2): jz 0x1f(%rip)
8462(7): lea 0x89c7(%rip),%rsi
8469(2): xor %edi,%edi
846b(5): mov $0x5,%edx
8470(5): call 0xffffa380(%rip)
8475(3): mov %rax,%rdi
8478(2): xor %eax,%eax
847a(5): call 0xffffbe46(%rip)
847f(9): movzx 0x289(%rsp),%r12d
8488(5): jmp 0xffffec4a(%rip)
848d(3): test %r12b,%r12b
8490(6): jz 0xffffe90b(%rip)
8496(5): mov $0x5,%edx
849b(7): lea 0x88e6(%rip),%rsi
84a2(5): jmp 0xffffefc7(%rip)
84a7(8): cmp $0x0,0x289(%rsp)
84af(6): jz 0xffffe8ec(%rip)
84b5(7): lea 0x7e7f(%rip),%rsi
84bc(2): xor %edi,%edi
84be(5): mov $0x5,%edx
84c3(5): call 0xffffa32d(%rip)
84c8(3): mov %rbp,%rsi
84cb(3): mov %rax,%rdi
84ce(2): xor %eax,%eax
84d0(5): call 0xffffbdf0(%rip)
84d5(5): jmp 0xffffe8c6(%rip)
84da(7): lea 0x7e95(%rip),%rbx
84e1(8): mov $0xffffffff,0x78(%rsp)
84e9(2): test %al,%al
84eb(6): jz 0xffffe8b0(%rip)
84f1(7): lea 0x7e19(%rip),%rsi
84f8(2): xor %edi,%edi
84fa(5): mov $0x5,%edx
84ff(5): call 0xffffa2f1(%rip)
8504(3): mov %rbx,%rdx
8507(3): mov %rax,%rdi
850a(3): mov %rbp,%rsi
850d(2): xor %eax,%eax
850f(5): call 0xffffbdb1(%rip)
8514(5): jmp 0xffffe887(%rip)
8519(8): mov $0xffffffff,0x78(%rsp)
8521(7): lea 0x7d14(%rip),%rbx
8528(2): jmp 0xffffffc1(%rip)
852a(5): mov $0x1,%edx
852f(5): jmp 0xffffefa8(%rip)
8534(5): mov 0x18(%rsp),%rdi
8539(8): lea 0x300(%rsp),%rdx
8541(3): mov %r13,%rsi
8544(5): call 0xffffc26c(%rip)
8549(7): lea 0x7f12(%rip),%rsi
8550(3): mov %rax,%rbx
8553(2): xor %edi,%edi
8555(5): mov $0x5,%edx
855a(5): call 0xffffa296(%rip)
855f(3): mov %r14,%rdx
8562(3): mov %rax,%rdi
8565(3): mov %rbx,%rsi
8568(2): xor %eax,%eax
856a(5): call 0xffffbd56(%rip)
856f(5): jmp 0xfffffdaa(%rip)
8574(3): mov %rdx,%rdi
8577(5): call 0x2fe9(%rip)
857c(5): jmp 0xfffff0cf(%rip)
8581(7): mov 0x80(%rsp),%eax
8588(7): mov 0x84(%rsp),%edi
858f(8): lea 0x2d3(%rsp),%rsi
8597(5): mov 0x7c(%rsp),%r12d
859c(8): lea 0x300(%rsp),%rbp
85a4(3): lea 0x1(%rax),%ebx
85a7(5): call 0xffffa5b9(%rip)
85ac(2): push %r12
85ae(7): lea 0x7e45(%rip),%r8
85b5(1): push %rbx
85b6(3): mov %rax,%r9
85b9(5): mov $0x64,%ecx
85be(5): mov $0x1,%edx
85c3(5): mov $0x64,%esi
85c8(3): mov %rbp,%rdi
85cb(2): xor %eax,%eax
85cd(5): call 0xffffa133(%rip)
85d2(7): lea 0x850f(%rip),%rsi
85d9(5): mov $0x5,%edx
85de(2): xor %edi,%edi
85e0(5): call 0xffffa210(%rip)
85e5(3): mov %rbp,%rsi
85e8(3): mov %rax,%rdi
85eb(2): xor %eax,%eax
85ed(5): call 0xffffbcd3(%rip)
85f2(1): pop %rax
85f3(1): pop %rdx
85f4(9): cmp $0x0,0x260(%rsp)
85fd(6): jz 0xfffff730(%rip)
8603(9): cmp $0x0,0x258(%rsp)
860c(6): jnz 0xfffffb64(%rip)
8612(5): jmp 0xfffff71b(%rip)
8617(8): cmp $0x0,0x289(%rsp)
861f(6): jz 0xffffe77c(%rip)
8625(5): mov 0x18(%rsp),%rdi
862a(8): lea 0x300(%rsp),%rdx
8632(3): mov %r13,%rsi
8635(5): call 0xffffc17b(%rip)
863a(7): lea 0x85c7(%rip),%rsi
8641(3): mov %rax,%rbx
8644(2): xor %edi,%edi
8646(5): mov $0x5,%edx
864b(5): call 0xffffa1a5(%rip)
8650(3): mov %rbx,%rsi
8653(3): mov %rax,%rdi
8656(2): xor %eax,%eax
8658(5): call 0xffffbc68(%rip)
865d(5): jmp 0xffffe73e(%rip)
8662(8): mov $0xffffffff,0x78(%rsp)
866a(7): lea 0x7b2f(%rip),%rbx
8671(5): jmp 0xfffffe78(%rip)
8676(7): lea 0x82c3(%rip),%rsi
867d(2): xor %edi,%edi
867f(5): call 0xffffa171(%rip)
8684(5): jmp 0xfffffb72(%rip)
8689(5): cmp $0xc,0x78(%rsp)
868e(6): jz 0xfffff742(%rip)
8694(7): lea 0x8525(%rip),%rsi
869b(2): xor %edi,%edi
869d(5): mov $0x5,%edx
86a2(5): call 0xffffa14e(%rip)
86a7(3): mov %rax,%rdi
86aa(2): xor %eax,%eax
86ac(5): call 0xffffbc14(%rip)
86b1(5): jmp 0xfffff71f(%rip)
86b6(7): lea 0x7d03(%rip),%rsi
86bd(2): xor %edi,%edi
86bf(5): call 0xffffa131(%rip)
86c4(5): jmp 0xfffff227(%rip)

"parse_datetime" :
86d0(2): push %r14
86d2(2): push %r13
86d4(3): mov %rdx,%r14
86d7(2): push %r12
86d9(1): push %rbp
86da(3): mov %rdi,%r12
86dd(1): push %rbx
86de(7): lea 0x7def(%rip),%rdi
86e5(3): mov %rsi,%r13
86e8(4): sub $0x10,%rsp
86ec(5): call 0xffffa004(%rip)
86f1(3): mov %rax,%rdi
86f4(3): mov %rax,%rbp
86f7(5): call 0x2bb9(%rip)
86fc(3): mov %rax,%rbx
86ff(2): xor %eax,%eax
8701(3): test %rbx,%rbx
8704(2): jz 0x29(%rip)
8706(3): mov %rbp,%r9
8709(3): mov %rbx,%r8
870c(2): xor %ecx,%ecx
870e(3): mov %r14,%rdx
8711(3): mov %r13,%rsi
8714(3): mov %r12,%rdi
8717(5): call 0xffffe249(%rip)
871c(3): mov %rbx,%rdi
871f(4): mov %al,0xf(%rsp)
8723(5): call 0x2e3d(%rip)
8728(5): movzx 0xf(%rsp),%eax
872d(4): add $0x10,%rsp
8731(1): pop %rbx
8732(1): pop %rbp
8733(2): pop %r12
8735(2): pop %r13
8737(2): pop %r14
8739(1): ret near (%rsp)

"year.isra.0" :
8740(1): push %rbp
8741(1): push %rbx
8742(3): mov %rdi,%rbx
8745(4): sub $0x18,%rsp
8749(9): mov $0x28,%rax
8752(5): mov %rax,0x8(%rsp)
8757(2): xor %eax,%eax
8759(4): cmp $0x1,%rdx
875d(2): jz 0x5b(%rip)
875f(2): jb 0x19(%rip)
8761(4): cmp $0x2,%rdx
8765(6): jnz 0x8c(%rip)
876b(3): and $0x2,%ecx
876e(2): jnz 0x6a(%rip)
8770(2): xor %eax,%eax
8772(2): jmp 0x28(%rip)
8774(4): nop 0x0(%rax)
8778(3): mov %rsp,%rbp
877b(3): mov %rbp,%rdi
877e(5): call 0xffffa212(%rip)
8783(3): mov %rbp,%rdi
8786(5): call 0xffff9faa(%rip)
878b(3): test %rax,%rax
878e(2): jz 0xc(%rip)
8790(3): mov 0x14(%rax),%eax
8793(2): mov %eax,(%rbx)
8795(5): mov $0x1,%eax
879a(5): mov 0x8(%rsp),%rdi
879f(9): xor $0x28,%rdi
87a8(2): jnz 0x44(%rip)
87aa(4): add $0x18,%rsp
87ae(1): pop %rbx
87af(1): pop %rbp
87b0(1): ret near (%rsp)
87b1(7): nop 0x0(%rax)
87b8(2): mov (%rsi),%edx
87ba(5): mov $0x1,%eax
87bf(2): mov %edx,(%rdi)
87c1(3): cmp $0x44,(%rsi)
87c4(2): jnle 0xffffffd6(%rip)
87c6(3): and $0x8,%ecx
87c9(2): jnz 0xffffffa7(%rip)
87cb(3): add $0x64,%edx
87ce(2): mov %edx,(%rdi)
87d0(2): jmp 0xffffffca(%rip)
87d2(6): nop 0x0(%rax,%rax,1)
87d8(3): imul (%rsi),$0x64,%eax
87db(3): add 0x4(%rsi),%eax
87de(5): sub $0x76c,%eax
87e3(2): mov %eax,(%rdi)
87e5(5): mov $0x1,%eax
87ea(2): jmp 0xffffffb0(%rip)
87ec(5): call 0xffffa044(%rip)
87f1(5): call 0xffff9f4f(%rip)

"posixtime" :
8800(2): push %r15
8802(2): push %r14
8804(2): push %r13
8806(2): push %r12
8808(3): mov %rdi,%r12
880b(1): push %rbp
880c(1): push %rbx
880d(2): mov %edx,%ebp
880f(3): mov %rsi,%rdi
8812(3): mov %rsi,%rbx
8815(7): sub $0xd8,%rsp
881c(9): mov $0x28,%rax
8825(8): mov %rax,0xc8(%rsp)
882d(2): xor %eax,%eax
882f(5): call 0xffff9fe1(%rip)
8834(4): test $0x4,%bpl
8838(3): mov %rax,%r13
883b(6): jz 0x235(%rip)
8841(5): mov $0x2e,%esi
8846(3): mov %rbx,%rdi
8849(5): call 0xffffa027(%rip)
884e(3): test %rax,%rax
8851(3): mov %rax,%r14
8854(2): jz 0x3f(%rip)
8856(3): sub %rbx,%rax
8859(3): sub %rax,%r13
885c(4): cmp $0x3,%r13
8860(2): jz 0x30(%rip)
8862(2): xor %eax,%eax
8864(8): mov 0xc8(%rsp),%rsi
886c(9): xor $0x28,%rsi
8875(6): jnz 0x26a(%rip)
887b(7): add $0xd8,%rsp
8882(1): pop %rbx
8883(1): pop %rbp
8884(2): pop %r12
8886(2): pop %r13
8888(2): pop %r14
888a(2): pop %r15
888c(1): ret near (%rsp)
888d(3): nop (%rax)
8890(3): mov %rax,%r13
8893(4): lea 0xfffffff8(%r13),%rax
8897(4): cmp $0x4,%rax
889b(2): jnbe 0xffffffc7(%rip)
889d(4): test $0x1,%r13b
88a1(2): jnz 0xffffffc1(%rip)
88a3(5): lea 0x0(%r13,%rbx,1),%rcx
88a8(3): mov %rbx,%rdx
88ab(5): nop 0x0(%rax,%rax,1)
88b0(3): movsx (%rdx),%eax
88b3(3): sub $0x30,%eax
88b6(3): cmp $0x9,%eax
88b9(2): jnbe 0xffffffa9(%rip)
88bb(4): add $0x1,%rdx
88bf(3): cmp %rdx,%rcx
88c2(2): jnz 0xffffffee(%rip)
88c4(3): shr $0x1,%r13
88c7(2): xor %edx,%edx
88c9(8): lea 0x90(%rsp),%r15
88d1(2): jmp 0xa(%rip)
88d3(5): nop 0x0(%rax,%rax,1)
88d8(3): mov %rax,%rdx
88db(4): movsx 0x0(%rbx,%rdx,2),%eax
88df(7): lea 0xffffff10(%rax,%rax,4),%ecx
88e6(5): movsx 0x1(%rbx,%rdx,2),%eax
88eb(4): lea 0xffffffd0(%rax,%rcx,2),%eax
88ef(4): mov %eax,0x0(%r15,%rdx,4)
88f3(4): lea 0x1(%rdx),%rax
88f7(3): cmp %rax,%r13
88fa(2): jnz 0xffffffde(%rip)
88fc(4): sub $0x3,%rdx
8900(4): test $0x1,%bpl
8904(6): jz 0x18c(%rip)
890a(7): mov 0x90(%rsp),%eax
8911(4): lea 0x10(%r15),%rsi
8915(5): lea 0x24(%rsp),%rdi
891a(2): mov %ebp,%ecx
891c(3): sub $0x1,%eax
891f(4): mov %eax,0x20(%rsp)
8923(7): mov 0x94(%rsp),%eax
892a(4): mov %eax,0x1c(%rsp)
892e(7): mov 0x98(%rsp),%eax
8935(4): mov %eax,0x18(%rsp)
8939(7): mov 0x9c(%rsp),%eax
8940(4): mov %eax,0x14(%rsp)
8944(5): call 0xfffffdfc(%rip)
8949(2): test %al,%al
894b(6): jz 0xffffff17(%rip)
8951(3): test %r14,%r14
8954(6): jz 0x17c(%rip)
895a(5): movsx 0x1(%r14),%eax
895f(3): sub $0x30,%eax
8962(3): cmp $0x9,%eax
8965(6): jnbe 0xfffffefd(%rip)
896b(5): movsx 0x2(%r14),%edx
8970(3): lea 0xffffffd0(%rdx),%ecx
8973(3): cmp $0x9,%ecx
8976(6): jnbe 0xfffffeec(%rip)
897c(3): lea 0x0(%rax,%rax,4),%eax
897f(4): lea 0xffffffd0(%rdx,%rax,2),%eax
8983(4): mov %eax,0x10(%rsp)
8987(4): mov %eax,0x50(%rsp)
898b(4): mov 0x14(%rsp),%eax
898f(5): lea 0x50(%rsp),%rdi
8994(8): mov $0xffffffff,0x68(%rsp)
899c(8): mov $0xffffffff,0x70(%rsp)
89a4(4): mov %eax,0x54(%rsp)
89a8(4): mov 0x18(%rsp),%eax
89ac(4): mov %eax,0x58(%rsp)
89b0(4): mov 0x1c(%rsp),%eax
89b4(4): mov %eax,0x5c(%rsp)
89b8(4): mov 0x20(%rsp),%eax
89bc(4): mov %eax,0x60(%rsp)
89c0(4): mov 0x24(%rsp),%eax
89c4(4): mov %eax,0x64(%rsp)
89c8(5): call 0xffffa038(%rip)
89cd(4): mov 0x68(%rsp),%ecx
89d1(3): mov %rax,%r13
89d4(2): xor %eax,%eax
89d6(2): test %ecx,%ecx
89d8(6): js 0xfffffe8c(%rip)
89de(4): mov 0x24(%rsp),%edx
89e2(4): mov 0x20(%rsp),%ecx
89e6(4): xor 0x64(%rsp),%edx
89ea(4): xor 0x60(%rsp),%ecx
89ee(4): mov 0x10(%rsp),%esi
89f2(2): or %ecx,%edx
89f4(4): mov 0x1c(%rsp),%ecx
89f8(4): xor 0x5c(%rsp),%ecx
89fc(2): or %ecx,%edx
89fe(4): mov 0x18(%rsp),%ecx
8a02(4): xor 0x58(%rsp),%ecx
8a06(2): or %ecx,%edx
8a08(4): mov 0x14(%rsp),%ecx
8a0c(4): xor 0x54(%rsp),%ecx
8a10(2): or %ecx,%edx
8a12(4): mov 0x50(%rsp),%ecx
8a16(2): xor %esi,%ecx
8a18(2): or %ecx,%edx
8a1a(2): jz 0x46(%rip)
8a1c(3): cmp $0x3c,%esi
8a1f(6): jnz 0xfffffe45(%rip)
8a25(8): lea 0xb0(%rsp),%r14
8a2d(5): mov $0x10,%edx
8a32(3): mov %rbx,%rsi
8a35(3): mov %r14,%rdi
8a38(5): call 0xffff9f78(%rip)
8a3d(5): mov $0x3935,%edx
8a42(5): lea 0x8(%rsp),%rdi
8a47(3): mov $0x0,(%rax)
8a4a(4): mov %dx,0xfffffffe(%rax)
8a4e(3): mov %r14,%rsi
8a51(2): mov %ebp,%edx
8a53(5): call 0xfffffdad(%rip)
8a58(2): test %al,%al
8a5a(6): jz 0xfffffe0a(%rip)
8a60(4): mov %r13,(%r12)
8a64(5): mov $0x1,%eax
8a69(5): jmp 0xfffffdfb(%rip)
8a6e(2): nop 
8a70(4): lea 0xfffffff8(%r13),%rax
8a74(3): xor %r14d,%r14d
8a77(4): cmp $0x4,%rax
8a7b(6): jbe 0xfffffe22(%rip)
8a81(5): jmp 0xfffffde1(%rip)
8a86(a): nop 0x0(%rax,%rax,1)
8a90(5): lea 0x24(%rsp),%rdi
8a95(2): mov %ebp,%ecx
8a97(3): mov %r15,%rsi
8a9a(5): call 0xfffffca6(%rip)
8a9f(2): test %al,%al
8aa1(6): jz 0xfffffdc1(%rip)
8aa7(5): lea 0xfffffff0(%r15,%r13,4),%rax
8aac(2): mov (%rax),%esi
8aae(3): lea 0xffffffff(%rsi),%edx
8ab1(4): mov %edx,0x20(%rsp)
8ab5(3): mov 0x4(%rax),%edx
8ab8(4): mov %edx,0x1c(%rsp)
8abc(3): mov 0x8(%rax),%edx
8abf(3): mov 0xc(%rax),%eax
8ac2(4): mov %edx,0x18(%rsp)
8ac6(4): mov %eax,0x14(%rsp)
8aca(5): jmp 0xfffffe87(%rip)
8acf(1): nop 
8ad0(8): mov $0x0,0x10(%rsp)
8ad8(2): xor %eax,%eax
8ada(5): jmp 0xfffffead(%rip)
8adf(5): call 0xffff9d51(%rip)

"posix2_version" :
8af0(1): push %rbx
8af1(7): lea 0x89fe(%rip),%rdi
8af8(5): mov $0x31069,%ebx
8afd(4): sub $0x10,%rsp
8b01(9): mov $0x28,%rax
8b0a(5): mov %rax,0x8(%rsp)
8b0f(2): xor %eax,%eax
8b11(5): call 0xffff9bdf(%rip)
8b16(3): test %rax,%rax
8b19(2): jz 0x7(%rip)
8b1b(3): cmp $0x0,(%rax)
8b1e(2): jnz 0x22(%rip)
8b20(5): mov 0x8(%rsp),%rcx
8b25(9): xor $0x28,%rcx
8b2e(2): mov %ebx,%eax
8b30(2): jnz 0x49(%rip)
8b32(4): add $0x10,%rsp
8b36(1): pop %rbx
8b37(1): ret near (%rsp)
8b38(8): nop 0x0(%rax,%rax,1)
8b40(5): mov $0xa,%edx
8b45(3): mov %rsp,%rsi
8b48(3): mov %rax,%rdi
8b4b(5): call 0xffff9e15(%rip)
8b50(4): mov (%rsp),%rdx
8b54(3): cmp $0x0,(%rdx)
8b57(2): jnz 0xffffffc9(%rip)
8b59(6): cmp $0x80000000,%rax
8b5f(2): jl 0x13(%rip)
8b61(6): cmp $0x7fffffff,%rax
8b67(5): mov $0x7fffffff,%ebx
8b6c(4): cmovng %rax,%rbx
8b70(2): jmp 0xffffffb0(%rip)
8b72(5): mov $0x80000000,%ebx
8b77(2): jmp 0xffffffa9(%rip)
8b79(5): call 0xffff9cb7(%rip)

"set_program_name" :
8b80(3): test %rdi,%rdi
8b83(1): push %rbx
8b84(2): jz 0x79(%rip)
8b86(5): mov $0x2f,%esi
8b8b(3): mov %rdi,%rbx
8b8e(5): call 0xffff9d12(%rip)
8b93(3): test %rax,%rax
8b96(2): jz 0x57(%rip)
8b98(4): lea 0x1(%rax),%r8
8b9c(3): mov %r8,%rdx
8b9f(3): sub %rbx,%rdx
8ba2(4): cmp $0x6,%rdx
8ba6(2): jle 0x47(%rip)
8ba8(4): lea 0xfffffffa(%rax),%rsi
8bac(7): lea 0x898d(%rip),%rdi
8bb3(5): mov $0x7,%ecx
8bb8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8bba(3): setnbe %dl
8bbd(3): sbb $0x0,%dl
8bc0(2): test %dl,%dl
8bc2(2): jnz 0x2b(%rip)
8bc4(7): lea 0x897d(%rip),%rdi
8bcb(5): mov $0x3,%ecx
8bd0(3): mov %r8,%rsi
8bd3(3): mov %r8,%rbx
8bd6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8bd8(3): setnbe %dl
8bdb(3): sbb $0x0,%dl
8bde(2): test %dl,%dl
8be0(2): jnz 0xd(%rip)
8be2(4): lea 0x4(%rax),%rbx
8be6(7): mov %rbx,0x20c4b3(%rip)
8bed(7): mov %rbx,0x20c564(%rip)
8bf4(7): mov %rbx,0x20c4c5(%rip)
8bfb(1): pop %rbx
8bfc(1): ret near (%rsp)
8bfd(7): mov 0x20c4dc(%rip),%rcx
8c04(7): lea 0x88fd(%rip),%rdi
8c0b(5): mov $0x37,%edx
8c10(5): mov $0x1,%esi
8c15(5): call 0xffff9ecb(%rip)
8c1a(5): call 0xffff9b26(%rip)

"gettext_quote.part.1" :
8c20(1): push %rbp
8c21(1): push %rbx
8c22(3): mov %rdi,%rbp
8c25(2): mov %esi,%ebx
8c27(4): sub $0x8,%rsp
8c2b(5): call 0x2d25(%rip)
8c30(3): movzx (%rax),%edx
8c33(3): and $0xdf,%edx
8c36(3): cmp $0x55,%dl
8c39(2): jz 0x77(%rip)
8c3b(3): cmp $0x47,%dl
8c3e(2): jz 0x22(%rip)
8c40(7): lea 0x7600(%rip),%rax
8c47(7): lea 0x890d(%rip),%rdx
8c4e(3): cmp $0x9,%ebx
8c51(4): cmovne %rdx,%rax
8c55(4): add $0x8,%rsp
8c59(1): pop %rbx
8c5a(1): pop %rbp
8c5b(1): ret near (%rsp)
8c5c(4): nop 0x0(%rax)
8c60(4): movzx 0x1(%rax),%edx
8c64(3): and $0xdf,%edx
8c67(3): cmp $0x42,%dl
8c6a(2): jnz 0xffffffd6(%rip)
8c6c(4): cmp $0x31,0x2(%rax)
8c70(2): jnz 0xffffffd0(%rip)
8c72(4): cmp $0x38,0x3(%rax)
8c76(2): jnz 0xffffffca(%rip)
8c78(4): cmp $0x30,0x4(%rax)
8c7c(2): jnz 0xffffffc4(%rip)
8c7e(4): cmp $0x33,0x5(%rax)
8c82(2): jnz 0xffffffbe(%rip)
8c84(4): cmp $0x30,0x6(%rax)
8c88(2): jnz 0xffffffb8(%rip)
8c8a(4): cmp $0x0,0x7(%rax)
8c8e(2): jnz 0xffffffb2(%rip)
8c90(4): cmp $0x60,0x0(%rbp)
8c94(7): lea 0x88b9(%rip),%rax
8c9b(7): lea 0x88b6(%rip),%rdx
8ca2(4): cmovne %rdx,%rax
8ca6(4): add $0x8,%rsp
8caa(1): pop %rbx
8cab(1): pop %rbp
8cac(1): ret near (%rsp)
8cad(3): nop (%rax)
8cb0(4): movzx 0x1(%rax),%edx
8cb4(3): and $0xdf,%edx
8cb7(3): cmp $0x54,%dl
8cba(2): jnz 0xffffff86(%rip)
8cbc(4): movzx 0x2(%rax),%edx
8cc0(3): and $0xdf,%edx
8cc3(3): cmp $0x46,%dl
8cc6(6): jnz 0xffffff7a(%rip)
8ccc(4): cmp $0x2d,0x3(%rax)
8cd0(6): jnz 0xffffff70(%rip)
8cd6(4): cmp $0x38,0x4(%rax)
8cda(6): jnz 0xffffff66(%rip)
8ce0(4): cmp $0x0,0x5(%rax)
8ce4(6): jnz 0xffffff5c(%rip)
8cea(4): cmp $0x60,0x0(%rbp)
8cee(7): lea 0x8857(%rip),%rax
8cf5(7): lea 0x8854(%rip),%rdx
8cfc(4): cmovne %rdx,%rax
8d00(4): add $0x8,%rsp
8d04(1): pop %rbx
8d05(1): pop %rbp
8d06(1): ret near (%rsp)

"quotearg_buffer_restyled" :
8d10(2): push %r15
8d12(2): push %r14
8d14(3): mov %r8d,%r15d
8d17(2): push %r13
8d19(2): push %r12
8d1b(3): mov %rdi,%r14
8d1e(1): push %rbp
8d1f(1): push %rbx
8d20(3): mov %r9d,%ebx
8d23(3): mov %rsi,%r13
8d26(3): mov %rcx,%rbp
8d29(3): and $0x2,%ebx
8d2c(7): sub $0xb8,%rsp
8d33(8): mov 0xf0(%rsp),%rax
8d3b(5): mov %rdx,0x10(%rsp)
8d40(5): mov %r8d,0x8(%rsp)
8d45(5): mov %r9d,0x78(%rsp)
8d4a(5): mov %rax,0x20(%rsp)
8d4f(8): mov 0xf8(%rsp),%rax
8d57(5): mov %rax,0x68(%rsp)
8d5c(8): mov 0x100(%rsp),%rax
8d64(5): mov %rax,0x60(%rsp)
8d69(9): mov $0x28,%rax
8d72(8): mov %rax,0xa8(%rsp)
8d7a(2): xor %eax,%eax
8d7c(5): call 0xffff9a84(%rip)
8d81(4): cmp $0xa,%r15d
8d85(5): mov %rax,0x58(%rsp)
8d8a(6): jnbe 0x11b5(%rip)
8d90(7): lea 0x8829(%rip),%rcx
8d97(3): mov %r15d,%edx
8d9a(4): movsxd 0x0(%rcx,%rdx,4),%rax
8d9e(3): add %rcx,%rax
8da1(2): jmp %rax
8da3(5): mov $0x1,0xe(%rsp)
8da8(5): mov $0x0,0x7c(%rsp)
8dad(3): xor %r12d,%r12d
8db0(9): mov $0x0,0x50(%rsp)
8db9(5): mov $0x1,0xf(%rsp)
8dbe(5): mov $0x0,0xd(%rsp)
8dc3(7): lea 0x8791(%rip),%rax
8dca(9): mov $0x1,0x18(%rsp)
8dd3(3): xor %r15d,%r15d
8dd6(8): mov $0x2,0x8(%rsp)
8dde(5): mov %rax,0x48(%rsp)
8de3(3): xor %r11d,%r11d
8de6(3): mov %rbp,%rax
8de9(3): mov %r12d,%r8d
8dec(3): mov %r11,%rbp
8def(3): mov %rax,%r11
8df2(6): nop 0x0(%rax,%rax,1)
8df8(3): cmp %rbp,%r11
8dfb(4): setnz %r12b
8dff(4): cmp $0xffffffff,%r11
8e03(2): jnz 0xf(%rip)
8e05(5): mov 0x10(%rsp),%rax
8e0a(4): cmp $0x0,0x0(%rax,%rbp,1)
8e0e(4): setnz %r12b
8e12(3): test %r12b,%r12b
8e15(6): jz 0x65b(%rip)
8e1b(5): cmp $0x2,0x8(%rsp)
8e20(5): mov 0x10(%rsp),%rdi
8e25(4): lea 0x0(%rdi,%rbp,1),%r9
8e29(3): setnz %al
8e2c(4): and 0xd(%rsp),%al
8e30(3): mov %eax,%r10d
8e33(6): jz 0xad(%rip)
8e39(5): mov 0x18(%rsp),%rax
8e3e(3): test %rax,%rax
8e41(6): jz 0x42f(%rip)
8e47(4): cmp $0xffffffff,%r11
8e4b(5): lea 0x0(%rbp,%rax,1),%rbx
8e50(2): jnz 0x30(%rip)
8e52(4): cmp $0x1,%rax
8e56(2): jbe 0x2a(%rip)
8e58(5): mov %r8b,0x38(%rsp)
8e5d(5): mov %r10b,0x30(%rsp)
8e62(5): mov %r9,0x28(%rsp)
8e67(5): call 0xffff99a9(%rip)
8e6c(6): movzx 0x38(%rsp),%r8d
8e72(6): movzx 0x30(%rsp),%r10d
8e78(3): mov %rax,%r11
8e7b(5): mov 0x28(%rsp),%r9
8e80(3): cmp %r11,%rbx
8e83(5): mov %r10b,0x28(%rsp)
8e88(6): jnbe 0x5b8(%rip)
8e8e(5): mov 0x18(%rsp),%rdx
8e93(5): mov 0x48(%rsp),%rsi
8e98(3): mov %r9,%rdi
8e9b(5): mov %r11,0x40(%rsp)
8ea0(5): mov %r8b,0x38(%rsp)
8ea5(5): mov %r9,0x30(%rsp)
8eaa(5): call 0xffff9a76(%rip)
8eaf(2): test %eax,%eax
8eb1(5): mov 0x30(%rsp),%r9
8eb6(6): movzx 0x38(%rsp),%r8d
8ebc(5): mov 0x40(%rsp),%r11
8ec1(6): jnz 0x57f(%rip)
8ec7(5): cmp $0x0,0xf(%rsp)
8ecc(6): movzx 0x28(%rsp),%r10d
8ed2(6): jnz 0xf83(%rip)
8ed8(8): nop 0x0(%rax,%rax,1)
8ee0(4): movzx (%r9),%ebx
8ee4(3): cmp $0x7e,%bl
8ee7(6): jnbe 0x321(%rip)
8eed(7): lea 0x86f8(%rip),%rcx
8ef4(3): movzx %bl,%edx
8ef7(4): movsxd 0x0(%rcx,%rdx,4),%rax
8efb(3): add %rcx,%rax
8efe(2): jmp %rax
8f00(3): xor %r10d,%r10d
8f03(4): cmp $0x1,%r11
8f07(3): setnz %al
8f0a(4): cmp $0xffffffff,%r11
8f0e(2): jnz 0xe(%rip)
8f10(5): mov 0x10(%rsp),%rax
8f15(4): cmp $0x0,0x1(%rax)
8f19(3): setnz %al
8f1c(5): cmp $0x2,0x8(%rsp)
8f21(3): setz %dl
8f24(2): test %al,%al
8f26(6): jz 0x252(%rip)
8f2c(3): xor %r12d,%r12d
8f2f(2): xor %eax,%eax
8f31(7): nop 0x0(%rax)
8f38(5): cmp $0x1,0xd(%rsp)
8f3d(6): jnz 0x115(%rip)
8f43(2): test %dl,%dl
8f45(6): jnz 0x10d(%rip)
8f4b(5): mov 0x20(%rsp),%rsi
8f50(3): test %rsi,%rsi
8f53(2): jz 0x16(%rip)
8f55(2): mov %ebx,%edx
8f57(3): shr $0x5,%dl
8f5a(3): movzx %dl,%edx
8f5d(3): mov 0x0(%rsi,%rdx,4),%edx
8f60(3): bt %ebx,%edx
8f63(6): jb 0x150(%rip)
8f69(3): test %r10b,%r10b
8f6c(6): jnz 0x147(%rip)
8f72(3): xor $0x1,%eax
8f75(4): add $0x1,%rbp
8f79(3): and %r8d,%eax
8f7c(2): test %al,%al
8f7e(2): jz 0x22(%rip)
8f80(3): cmp %r15,%r13
8f83(2): jbe 0x7(%rip)
8f85(5): mov $0x27,0x0(%r14,%r15,1)
8f8a(4): lea 0x1(%r15),%rax
8f8e(3): cmp %rax,%r13
8f91(2): jbe 0x8(%rip)
8f93(6): mov $0x27,0x1(%r14,%r15,1)
8f99(4): add $0x2,%r15
8f9d(3): xor %r8d,%r8d
8fa0(3): cmp %r13,%r15
8fa3(2): jnb 0x6(%rip)
8fa5(4): mov %bl,0x0(%r14,%r15,1)
8fa9(5): movzx 0xe(%rsp),%edi
8fae(4): add $0x1,%r15
8fb2(5): mov $0x0,%eax
8fb7(3): test %r12b,%r12b
8fba(3): cmove %eax,%edi
8fbd(5): mov %dil,0xe(%rsp)
8fc2(5): jmp 0xfffffe36(%rip)
8fc7(9): nop 0x0(%rax,%rax,1)
8fd0(3): xor %r10d,%r10d
8fd3(4): mov 0x8(%rsp),%eax
8fd7(3): cmp $0x2,%eax
8fda(6): jz 0x5be(%rip)
8fe0(3): cmp $0x5,%eax
8fe3(6): jz 0x575(%rip)
8fe9(3): cmp $0x2,%eax
8fec(5): mov $0x3f,%ebx
8ff1(3): setz %dl
8ff4(3): xor %r12d,%r12d
8ff7(2): xor %eax,%eax
8ff9(5): jmp 0xffffff3f(%rip)
8ffe(2): nop 
9000(3): xor %r10d,%r10d
9003(5): cmp $0x2,0x8(%rsp)
9008(6): jz 0x508(%rip)
900e(5): mov %r12b,0x7c(%rsp)
9013(2): xor %edx,%edx
9015(2): xor %eax,%eax
9017(5): mov $0x27,%ebx
901c(5): jmp 0xffffff1c(%rip)
9021(7): nop 0x0(%rax)
9028(5): mov $0x9,%edx
902d(5): mov $0x74,%ebx
9032(5): cmp $0x2,0x8(%rsp)
9037(3): setz %al
903a(4): and 0xf(%rsp),%al
903e(6): jnz 0x150(%rip)
9044(5): cmp $0x0,0xd(%rsp)
9049(2): jnz 0x67(%rip)
904b(2): mov %edx,%ebx
904d(3): xor %r12d,%r12d
9050(2): xor %eax,%eax
9052(5): cmp $0x0,0xf(%rsp)
9057(6): jnz 0xfffffef4(%rip)
905d(5): jmp 0xffffff0c(%rip)
9062(6): nop 0x0(%rax,%rax,1)
9068(5): mov $0x8,%edx
906d(5): mov $0x62,%ebx
9072(2): jmp 0xffffffd2(%rip)
9074(4): nop 0x0(%rax)
9078(5): cmp $0x2,0x8(%rsp)
907d(6): jz 0x3d3(%rip)
9083(5): cmp $0x0,0xd(%rsp)
9088(6): jz 0x218(%rip)
908e(5): cmp $0x0,0xf(%rsp)
9093(6): jz 0x20d(%rip)
9099(6): cmp $0x0,0x18(%rsp)
909f(6): jnz 0x3bc(%rip)
90a5(5): mov $0x5c,%ebx
90aa(6): nop 0x0(%rax,%rax,1)
90b0(3): xor %r12d,%r12d
90b3(5): cmp $0x2,0x8(%rsp)
90b8(3): setz %dl
90bb(5): cmp $0x0,0xf(%rsp)
90c0(2): mov %edx,%eax
90c2(6): jnz 0x856(%rip)
90c8(3): mov %r8d,%eax
90cb(3): xor $0x1,%eax
90ce(2): and %dl,%al
90d0(2): jz 0x31(%rip)
90d2(3): cmp %r15,%r13
90d5(2): jbe 0x7(%rip)
90d7(5): mov $0x27,0x0(%r14,%r15,1)
90dc(4): lea 0x1(%r15),%rdx
90e0(3): cmp %rdx,%r13
90e3(2): jbe 0x8(%rip)
90e5(6): mov $0x24,0x1(%r14,%r15,1)
90eb(4): lea 0x2(%r15),%rdx
90ef(3): cmp %rdx,%r13
90f2(2): jbe 0x8(%rip)
90f4(6): mov $0x27,0x2(%r14,%r15,1)
90fa(4): add $0x3,%r15
90fe(3): mov %eax,%r8d
9101(3): cmp %r15,%r13
9104(2): jbe 0x7(%rip)
9106(5): mov $0x5c,0x0(%r14,%r15,1)
910b(4): add $0x1,%r15
910f(4): add $0x1,%rbp
9113(5): jmp 0xfffffe8d(%rip)
9118(8): nop 0x0(%rax,%rax,1)
9120(5): cmp $0x0,0xd(%rsp)
9125(6): jnz 0x1ce(%rip)
912b(2): xor %edx,%edx
912d(5): test $0x1,0x78(%rsp)
9132(6): jz 0xffffff19(%rip)
9138(4): add $0x1,%rbp
913c(5): jmp 0xfffffcbc(%rip)
9141(7): nop 0x0(%rax)
9148(5): cmp $0x2,0x8(%rsp)
914d(3): setz %dl
9150(2): xor %eax,%eax
9152(5): jmp 0xfffffde6(%rip)
9157(9): nop 0x0(%rax,%rax,1)
9160(5): mov $0x7,%edx
9165(5): mov $0x61,%ebx
916a(5): jmp 0xfffffeda(%rip)
916f(1): nop 
9170(5): cmp $0x2,0x8(%rsp)
9175(3): setz %dl
9178(3): test %rbp,%rbp
917b(6): jnz 0xfffffdb1(%rip)
9181(5): movzx 0xf(%rsp),%eax
9186(2): and %dl,%al
9188(6): jz 0xfffffdb0(%rip)
918e(3): mov %r11,%rbp
9191(8): mov $0x2,0x8(%rsp)
9199(5): jmp 0x700(%rip)
919e(2): nop 
91a0(5): cmp $0x2,0x8(%rsp)
91a5(3): setz %dl
91a8(3): xor %r12d,%r12d
91ab(2): jmp 0xffffffd6(%rip)
91ad(3): nop (%rax)
91b0(5): cmp $0x2,0x8(%rsp)
91b5(5): mov $0x20,%ebx
91ba(3): setz %dl
91bd(2): jmp 0xffffffc4(%rip)
91bf(1): nop 
91c0(5): mov $0xd,%edx
91c5(5): mov $0x72,%ebx
91ca(5): jmp 0xfffffe68(%rip)
91cf(1): nop 
91d0(5): mov $0xc,%edx
91d5(5): mov $0x66,%ebx
91da(5): jmp 0xfffffe6a(%rip)
91df(1): nop 
91e0(5): mov $0xb,%edx
91e5(5): mov $0x76,%ebx
91ea(5): jmp 0xfffffe5a(%rip)
91ef(1): nop 
91f0(5): mov $0xa,%edx
91f5(5): mov $0x6e,%ebx
91fa(5): jmp 0xfffffe38(%rip)
91ff(1): nop 
9200(3): xor %r10d,%r10d
9203(5): nop 0x0(%rax,%rax,1)
9208(6): cmp $0x1,0x58(%rsp)
920e(6): jnz 0x3aa(%rip)
9214(5): mov %r11,0x38(%rsp)
9219(5): mov %r8b,0x30(%rsp)
921e(5): mov %r10b,0x28(%rsp)
9223(5): call 0xffff990d(%rip)
9228(3): mov (%rax),%rcx
922b(3): movzx %bl,%edx
922e(6): movzx 0x28(%rsp),%r10d
9234(6): movzx 0x30(%rsp),%r8d
923a(5): mov 0x38(%rsp),%r11
923f(5): mov $0x1,%edi
9244(4): movzx 0x0(%rcx,%rdx,2),%eax
9248(4): and $0x4000,%ax
924c(4): setnz %r12b
9250(3): setz %al
9253(4): and 0xd(%rsp),%al
9257(2): test %al,%al
9259(6): jnz 0x998(%rip)
925f(5): cmp $0x2,0x8(%rsp)
9264(3): setz %dl
9267(5): jmp 0xfffffcd1(%rip)
926c(4): nop 0x0(%rax)
9270(4): movzx (%r9),%ebx
9274(3): cmp $0x7e,%bl
9277(2): jnbe 0xffffff89(%rip)
9279(7): lea 0x8568(%rip),%rcx
9280(3): movzx %bl,%edx
9283(4): movsxd 0x0(%rcx,%rdx,4),%rax
9287(3): add %rcx,%rax
928a(2): jmp %rax
928c(4): nop 0x0(%rax)
9290(3): xor %r10d,%r10d
9293(5): cmp $0x0,0xd(%rsp)
9298(6): jnz 0xfffffdf6(%rip)
929e(2): nop 
92a0(5): mov $0x5c,%edx
92a5(5): mov $0x5c,%ebx
92aa(5): jmp 0xfffffd9a(%rip)
92af(1): nop 
92b0(5): mov $0xc,%edx
92b5(3): xor %r10d,%r10d
92b8(5): mov $0x66,%ebx
92bd(5): jmp 0xfffffd87(%rip)
92c2(6): nop 0x0(%rax,%rax,1)
92c8(5): mov $0xa,%edx
92cd(3): xor %r10d,%r10d
92d0(5): mov $0x6e,%ebx
92d5(5): jmp 0xfffffd5d(%rip)
92da(6): nop 0x0(%rax,%rax,1)
92e0(5): mov $0x61,%ebx
92e5(5): jmp 0xfffffdcb(%rip)
92ea(6): nop 0x0(%rax,%rax,1)
92f0(3): xor %r10d,%r10d
92f3(5): cmp $0x2,0x8(%rsp)
92f8(3): setz %dl
92fb(5): cmp $0x0,0xf(%rsp)
9300(6): jnz 0xb9a(%rip)
9306(3): mov %r8d,%eax
9309(3): mov %r15,%rcx
930c(3): xor $0x1,%eax
930f(2): and %dl,%al
9311(2): jz 0x2f(%rip)
9313(3): cmp %r15,%r13
9316(2): jbe 0x7(%rip)
9318(5): mov $0x27,0x0(%r14,%r15,1)
931d(4): lea 0x1(%r15),%rcx
9321(3): cmp %rcx,%r13
9324(2): jbe 0x8(%rip)
9326(6): mov $0x24,0x1(%r14,%r15,1)
932c(4): lea 0x2(%r15),%rcx
9330(3): cmp %rcx,%r13
9333(6): jnbe 0x636(%rip)
9339(4): lea 0x3(%r15),%rcx
933d(3): mov %eax,%r8d
9340(3): cmp %rcx,%r13
9343(2): jbe 0x7(%rip)
9345(5): mov $0x5c,0x0(%r14,%rcx,1)
934a(5): cmp $0x2,0x8(%rsp)
934f(4): lea 0x1(%rcx),%r15
9353(6): jz 0x606(%rip)
9359(4): lea 0x1(%rbp),%rax
935d(3): cmp %r11,%rax
9360(2): jnb 0x1b(%rip)
9362(5): mov 0x10(%rsp),%rax
9367(5): movzx 0x1(%rax,%rbp,1),%eax
936c(4): mov %al,0x28(%rsp)
9370(3): sub $0x30,%eax
9373(2): cmp $0x9,%al
9375(6): jbe 0x834(%rip)
937b(3): mov %r12d,%eax
937e(5): mov $0x30,%ebx
9383(3): xor %r12d,%r12d
9386(5): jmp 0xfffffbb2(%rip)
938b(5): nop 0x0(%rax,%rax,1)
9390(5): cmp $0x2,0x8(%rsp)
9395(3): mov %r10d,%r12d
9398(3): setz %dl
939b(3): xor %r10d,%r10d
939e(2): xor %eax,%eax
93a0(5): jmp 0xfffffb98(%rip)
93a5(3): nop (%rax)
93a8(5): cmp $0x2,0x8(%rsp)
93ad(3): setz %dl
93b0(3): xor %r10d,%r10d
93b3(5): jmp 0xfffffdc5(%rip)
93b8(8): nop 0x0(%rax,%rax,1)
93c0(5): cmp $0x2,0x8(%rsp)
93c5(3): setz %dl
93c8(3): xor %r10d,%r10d
93cb(3): xor %r12d,%r12d
93ce(5): jmp 0xfffffdb3(%rip)
93d3(5): nop 0x0(%rax,%rax,1)
93d8(5): cmp $0x2,0x8(%rsp)
93dd(3): mov %r10d,%r12d
93e0(5): mov $0x20,%ebx
93e5(3): setz %dl
93e8(3): xor %r10d,%r10d
93eb(5): jmp 0xfffffd96(%rip)
93f0(5): mov $0xd,%edx
93f5(3): xor %r10d,%r10d
93f8(5): mov $0x72,%ebx
93fd(5): jmp 0xfffffc35(%rip)
9402(6): nop 0x0(%rax,%rax,1)
9408(5): mov $0x76,%ebx
940d(5): jmp 0xfffffca3(%rip)
9412(6): nop 0x0(%rax,%rax,1)
9418(5): mov $0x9,%edx
941d(3): xor %r10d,%r10d
9420(5): mov $0x74,%ebx
9425(5): jmp 0xfffffc0d(%rip)
942a(6): nop 0x0(%rax,%rax,1)
9430(5): mov $0x62,%ebx
9435(5): jmp 0xfffffc7b(%rip)
943a(6): nop 0x0(%rax,%rax,1)
9440(3): xor %r10d,%r10d
9443(5): jmp 0xfffffa9d(%rip)
9448(8): nop 0x0(%rax,%rax,1)
9450(5): cmp $0x0,0xf(%rsp)
9455(6): jnz 0x96b(%rip)
945b(4): add $0x1,%rbp
945f(3): mov %r8d,%eax
9462(3): xor %r12d,%r12d
9465(5): mov $0x5c,%ebx
946a(5): jmp 0xfffffb12(%rip)
946f(1): nop 
9470(5): cmp $0x2,0x8(%rsp)
9475(5): movzx 0xf(%rsp),%ebx
947a(3): mov %r8d,%r12d
947d(3): mov %r11,%rbp
9480(3): setz %dl
9483(2): mov %ebx,%eax
9485(3): test %r15,%r15
9488(3): setz %cl
948b(2): and %edx,%eax
948d(2): and %cl,%al
948f(6): jnz 0xa67(%rip)
9495(2): mov %ebx,%eax
9497(3): xor $0x1,%eax
949a(2): and %al,%dl
949c(6): jz 0x970(%rip)
94a2(5): cmp $0x0,0x7c(%rsp)
94a7(6): jz 0x963(%rip)
94ad(5): cmp $0x0,0xe(%rsp)
94b2(6): jnz 0x9fb(%rip)
94b8(3): test %r13,%r13
94bb(3): setz %al
94be(6): cmp $0x0,0x50(%rsp)
94c4(3): setnz %dl
94c7(2): and %dl,%al
94c9(6): jz 0xa23(%rip)
94cf(5): mov 0x50(%rsp),%r13
94d4(7): lea 0x8080(%rip),%rbx
94db(4): mov $0x27,(%r14)
94df(8): mov $0x2,0x8(%rsp)
94e7(6): mov $0x1,%r15d
94ed(9): mov $0x1,0x18(%rsp)
94f6(5): mov $0x0,0xf(%rsp)
94fb(5): mov %rbx,0x48(%rsp)
9500(4): mov %al,0x7c(%rsp)
9504(5): jmp 0xfffff8df(%rip)
9509(7): nop 0x0(%rax)
9510(5): cmp $0x0,0xf(%rsp)
9515(6): jnz 0x8ab(%rip)
951b(3): test %r13,%r13
951e(6): jz 0x402(%rip)
9524(2): xor %edx,%edx
9526(6): cmp $0x0,0x50(%rsp)
952c(6): jnz 0x3f4(%rip)
9532(5): mov %r13,0x50(%rsp)
9537(4): add $0x3,%r15
953b(2): xor %eax,%eax
953d(5): mov %r12b,0x7c(%rsp)
9542(3): xor %r8d,%r8d
9545(3): mov %rdx,%r13
9548(5): mov $0x27,%ebx
954d(5): jmp 0xfffffa1c(%rip)
9552(6): nop 0x0(%rax,%rax,1)
9558(5): test $0x4,0x78(%rsp)
955d(2): jz 0x23(%rip)
955f(4): lea 0x2(%rbp),%rcx
9563(3): cmp %r11,%rcx
9566(2): jnb 0x1a(%rip)
9568(5): mov 0x10(%rsp),%rax
956d(5): cmp $0x3f,0x1(%rax,%rbp,1)
9572(6): jz 0x790(%rip)
9578(8): nop 0x0(%rax,%rax,1)
9580(2): xor %edx,%edx
9582(3): xor %r12d,%r12d
9585(2): xor %eax,%eax
9587(5): mov $0x3f,%ebx
958c(5): jmp 0xfffff9ac(%rip)
9591(7): nop 0x0(%rax)
9598(5): cmp $0x0,0xf(%rsp)
959d(6): jnz 0x823(%rip)
95a3(3): xor %r12d,%r12d
95a6(2): xor %eax,%eax
95a8(5): mov $0x3f,%ebx
95ad(5): jmp 0xfffff9bc(%rip)
95b2(6): nop 0x0(%rax,%rax,1)
95b8(8): lea 0xa0(%rsp),%rax
95c0(4): cmp $0xffffffff,%r11
95c4(c): mov $0x0,0xa0(%rsp)
95d0(5): mov %rax,0x28(%rsp)
95d5(2): jnz 0x2f(%rip)
95d7(5): mov 0x10(%rsp),%rdi
95dc(5): mov %r8b,0x40(%rsp)
95e1(5): mov %r10b,0x38(%rsp)
95e6(5): mov %r9,0x30(%rsp)
95eb(5): call 0xffff9225(%rip)
95f0(6): movzx 0x40(%rsp),%r8d
95f6(6): movzx 0x38(%rsp),%r10d
95fc(3): mov %rax,%r11
95ff(5): mov 0x30(%rsp),%r9
9604(8): lea 0x9c(%rsp),%rax
960c(2): xor %ecx,%ecx
960e(4): mov %bl,0x7e(%rsp)
9612(5): mov %r8b,0x7d(%rsp)
9617(3): mov %rcx,%rbx
961a(8): mov %r9,0x88(%rsp)
9622(5): mov %rax,0x38(%rsp)
9627(5): mov %r10b,0x7f(%rsp)
962c(8): mov %r15,0x80(%rsp)
9634(5): mov %r14,0x40(%rsp)
9639(5): mov %r13,0x70(%rsp)
963e(5): mov %r11,0x30(%rsp)
9643(5): mov 0x10(%rsp),%rax
9648(5): lea 0x0(%rbp,%rbx,1),%r14
964d(5): mov 0x30(%rsp),%rdx
9652(5): mov 0x28(%rsp),%rcx
9657(5): mov 0x38(%rsp),%rdi
965c(4): lea 0x0(%rax,%r14,1),%r13
9660(3): sub %r14,%rdx
9663(3): mov %r13,%rsi
9666(5): call 0x1afa(%rip)
966b(3): test %rax,%rax
966e(3): mov %rax,%r15
9671(2): jz 0x50(%rip)
9673(4): cmp $0xffffffff,%rax
9677(6): jz 0x61e(%rip)
967d(4): cmp $0xfffffffe,%rax
9681(6): jz 0x5a0(%rip)
9687(5): cmp $0x2,0x8(%rsp)
968c(3): setz %al
968f(4): and 0xf(%rsp),%al
9693(6): jnz 0x19d(%rip)
9699(7): mov 0x9c(%rsp),%edi
96a0(5): call 0xffff9470(%rip)
96a5(5): mov 0x28(%rsp),%rdi
96aa(2): test %eax,%eax
96ac(5): mov $0x0,%eax
96b1(4): cmove %eax,%r12d
96b5(3): add %r15,%rbx
96b8(5): call 0xffff9448(%rip)
96bd(2): test %eax,%eax
96bf(2): jz 0xffffff84(%rip)
96c1(3): mov %r12d,%edx
96c4(3): mov %rbx,%rdi
96c7(6): movzx 0x7d(%rsp),%r8d
96cd(3): xor $0x1,%edx
96d0(5): movzx 0x7e(%rsp),%ebx
96d5(6): movzx 0x7f(%rsp),%r10d
96db(4): and 0xd(%rsp),%dl
96df(8): mov 0x80(%rsp),%r15
96e7(5): mov 0x40(%rsp),%r14
96ec(5): mov 0x70(%rsp),%r13
96f1(5): mov 0x30(%rsp),%r11
96f6(4): cmp $0x1,%rdi
96fa(6): jbe 0x601(%rip)
9700(3): mov %rdi,%rcx
9703(2): xor %esi,%esi
9705(6): movzx 0xf(%rsp),%r9d
970b(3): add %rbp,%rcx
970e(5): mov 0x10(%rsp),%rdi
9713(5): jmp 0xbb(%rip)
9718(8): nop 0x0(%rax,%rax,1)
9720(5): cmp $0x2,0x8(%rsp)
9725(3): setz %al
9728(3): test %r9b,%r9b
972b(6): jnz 0x4b5(%rip)
9731(3): mov %r8d,%esi
9734(3): xor $0x1,%esi
9737(3): and %sil,%al
973a(2): jz 0x31(%rip)
973c(3): cmp %r15,%r13
973f(2): jbe 0x7(%rip)
9741(5): mov $0x27,0x0(%r14,%r15,1)
9746(4): lea 0x1(%r15),%rsi
974a(3): cmp %rsi,%r13
974d(2): jbe 0x8(%rip)
974f(6): mov $0x24,0x1(%r14,%r15,1)
9755(4): lea 0x2(%r15),%rsi
9759(3): cmp %rsi,%r13
975c(2): jbe 0x8(%rip)
975e(6): mov $0x27,0x2(%r14,%r15,1)
9764(4): add $0x3,%r15
9768(3): mov %eax,%r8d
976b(3): cmp %r15,%r13
976e(2): jbe 0x7(%rip)
9770(5): mov $0x5c,0x0(%r14,%r15,1)
9775(4): lea 0x1(%r15),%rax
9779(3): cmp %rax,%r13
977c(2): jbe 0xf(%rip)
977e(2): mov %ebx,%eax
9780(3): shr $0x6,%al
9783(3): add $0x30,%eax
9786(5): mov %al,0x1(%r14,%r15,1)
978b(4): lea 0x2(%r15),%rax
978f(3): cmp %rax,%r13
9792(2): jbe 0x12(%rip)
9794(2): mov %ebx,%eax
9796(3): shr $0x3,%al
9799(3): and $0x7,%eax
979c(3): add $0x30,%eax
979f(5): mov %al,0x2(%r14,%r15,1)
97a4(3): and $0x7,%ebx
97a7(4): add $0x1,%rbp
97ab(4): add $0x3,%r15
97af(3): add $0x30,%ebx
97b2(3): cmp %rcx,%rbp
97b5(6): jnb 0xfffff7eb(%rip)
97bb(2): mov %edx,%esi
97bd(3): cmp %r15,%r13
97c0(2): jbe 0x6(%rip)
97c2(4): mov %bl,0x0(%r14,%r15,1)
97c6(4): movzx 0x0(%rdi,%rbp,1),%ebx
97ca(4): add $0x1,%r15
97ce(2): test %dl,%dl
97d0(6): jnz 0xffffff50(%rip)
97d6(2): mov %esi,%eax
97d8(3): xor $0x1,%eax
97db(3): and %r8d,%eax
97de(3): test %r10b,%r10b
97e1(2): jz 0x10(%rip)
97e3(3): cmp %r15,%r13
97e6(2): jbe 0x7(%rip)
97e8(5): mov $0x5c,0x0(%r14,%r15,1)
97ed(4): add $0x1,%r15
97f1(4): add $0x1,%rbp
97f5(3): cmp %rcx,%rbp
97f8(6): jnb 0xfffff784(%rip)
97fe(2): test %al,%al
9800(6): jz 0x3fe(%rip)
9806(3): cmp %r15,%r13
9809(2): jbe 0x7(%rip)
980b(5): mov $0x27,0x0(%r14,%r15,1)
9810(4): lea 0x1(%r15),%rax
9814(3): cmp %rax,%r13
9817(2): jbe 0x8(%rip)
9819(6): mov $0x27,0x1(%r14,%r15,1)
981f(4): add $0x2,%r15
9823(3): xor %r10d,%r10d
9826(3): xor %r8d,%r8d
9829(2): jmp 0xffffff94(%rip)
982b(5): nop 0x0(%rax,%rax,1)
9830(4): cmp $0x1,%r15
9834(6): jz 0xfffffe65(%rip)
983a(5): mov 0x10(%rsp),%rdi
983f(4): lea 0x0(%rdi,%r15,1),%rcx
9843(5): lea 0x1(%rdi,%r14,1),%rdx
9848(4): lea 0x0(%rcx,%r14,1),%r8
984c(2): jmp 0x11(%rip)
984e(2): nop 
9850(4): add $0x1,%rdx
9854(3): cmp %rdx,%r8
9857(6): jz 0xfffffe42(%rip)
985d(3): movzx (%rdx),%ecx
9860(3): sub $0x5b,%ecx
9863(3): cmp $0x21,%cl
9866(2): jnbe 0xffffffea(%rip)
9868(5): mov $0x1,%esi
986d(3): shl/sal %cl,%rsi
9870(3): mov %rsi,%rcx
9873(a): mov $0x8589934635,%rsi
987d(3): test %rsi,%rcx
9880(2): jz 0xffffffd0(%rip)
9882(5): mov 0x40(%rsp),%r14
9887(5): mov 0x70(%rsp),%r13
988c(5): mov 0x30(%rsp),%rbp
9891(8): mov $0x2,0x8(%rsp)
9899(5): cmp $0x0,0xd(%rsp)
989e(2): jz 0x12(%rip)
98a0(2): test %al,%al
98a2(5): mov $0x4,%eax
98a7(5): cmove 0x8(%rsp),%eax
98ac(4): mov %eax,0x8(%rsp)
98b0(4): sub $0x8,%rsp
98b4(3): mov %rbp,%rcx
98b7(3): mov %r13,%rsi
98ba(4): push 0x68(%rsp)
98be(4): push 0x78(%rsp)
98c2(3): mov %r14,%rdi
98c5(2): push $0x0
98c7(8): mov 0x98(%rsp),%r9d
98cf(5): mov 0x28(%rsp),%r8d
98d4(5): mov 0x30(%rsp),%rdx
98d9(4): and $0xfd,%r9d
98dd(5): call 0xfffff433(%rip)
98e2(4): add $0x20,%rsp
98e6(3): mov %rax,%r15
98e9(8): mov 0xa8(%rsp),%rbx
98f1(9): xor $0x28,%rbx
98fa(3): mov %r15,%rax
98fd(6): jnz 0x606(%rip)
9903(7): add $0xb8,%rsp
990a(1): pop %rbx
990b(1): pop %rbp
990c(2): pop %r12
990e(2): pop %r13
9910(2): pop %r14
9912(2): pop %r15
9914(1): ret near (%rsp)
9915(3): nop (%rax)
9918(3): mov %r11,%rbp
991b(5): jmp 0xffffff7e(%rip)
9920(3): cmp %r15,%r13
9923(2): jbe 0x7(%rip)
9925(5): mov $0x27,0x0(%r14,%r15,1)
992a(4): lea 0x1(%r15),%rax
992e(3): cmp %rax,%r13
9931(2): jbe 0x8(%rip)
9933(6): mov $0x5c,0x1(%r14,%r15,1)
9939(4): lea 0x2(%r15),%rax
993d(3): cmp %rax,%r13
9940(6): jbe 0x5f2(%rip)
9946(3): mov %r13,%rdx
9949(6): mov $0x27,0x2(%r14,%r15,1)
994f(5): mov 0x50(%rsp),%r13
9954(5): jmp 0xfffffbde(%rip)
9959(3): mov %r12d,%eax
995c(5): mov $0x30,%ebx
9961(3): xor %r12d,%r12d
9964(5): jmp 0xfffff605(%rip)
9969(6): mov $0x27,0x2(%r14,%r15,1)
996f(5): jmp 0xfffff9ca(%rip)
9974(2): test %ebx,%ebx
9976(6): jnz 0xfffff42d(%rip)
997c(5): mov $0x1,0xd(%rsp)
9981(3): test %r13,%r13
9984(6): jnz 0x596(%rip)
998a(7): lea 0x7bca(%rip),%rax
9991(9): mov $0x0,0x50(%rsp)
999a(5): mov $0x1,0xe(%rsp)
999f(5): mov $0x0,0x7c(%rsp)
99a4(3): xor %r12d,%r12d
99a7(5): mov $0x0,0xf(%rsp)
99ac(9): mov $0x1,0x18(%rsp)
99b5(5): mov %rax,0x48(%rsp)
99ba(6): mov $0x1,%r15d
99c0(8): mov $0x2,0x8(%rsp)
99c8(5): jmp 0xfffff41b(%rip)
99cd(3): nop (%rax)
99d0(2): test %ebx,%ebx
99d2(6): jnz 0x3fb(%rip)
99d8(3): test %r13,%r13
99db(6): jz 0x22b(%rip)
99e1(4): mov $0x22,(%r14)
99e5(5): mov $0x1,0xe(%rsp)
99ea(3): xor %r12d,%r12d
99ed(5): mov $0x0,0x7c(%rsp)
99f2(9): mov $0x0,0x50(%rsp)
99fb(7): lea 0x6845(%rip),%rax
9a02(5): mov $0x0,0xf(%rsp)
9a07(5): mov $0x1,0xd(%rsp)
9a0c(9): mov $0x1,0x18(%rsp)
9a15(6): mov $0x1,%r15d
9a1b(5): mov %rax,0x48(%rsp)
9a20(5): jmp 0xfffff3c3(%rip)
9a25(7): lea 0x681b(%rip),%rax
9a2c(5): mov $0x1,0xe(%rsp)
9a31(5): mov $0x0,0x7c(%rsp)
9a36(3): xor %r12d,%r12d
9a39(9): mov $0x0,0x50(%rsp)
9a42(5): mov $0x1,0xf(%rsp)
9a47(5): mov $0x1,0xd(%rsp)
9a4c(9): mov $0x1,0x18(%rsp)
9a55(3): xor %r15d,%r15d
9a58(5): mov %rax,0x48(%rsp)
9a5d(8): mov $0x5,0x8(%rsp)
9a65(5): jmp 0xfffff37e(%rip)
9a6a(5): mov $0x1,0xe(%rsp)
9a6f(5): mov $0x0,0x7c(%rsp)
9a74(3): xor %r12d,%r12d
9a77(9): mov $0x0,0x50(%rsp)
9a80(5): mov $0x0,0xf(%rsp)
9a85(3): xor %r15d,%r15d
9a88(5): mov $0x1,0xd(%rsp)
9a8d(9): mov $0x0,0x18(%rsp)
9a96(9): mov $0x0,0x48(%rsp)
9a9f(5): jmp 0xfffff344(%rip)
9aa4(5): cmp $0xa,0x8(%rsp)
9aa9(2): jz 0x58(%rip)
9aab(7): lea 0x7aab(%rip),%rsi
9ab2(2): xor %edi,%edi
9ab4(5): mov $0x5,%edx
9ab9(5): call 0xffff8d37(%rip)
9abe(3): mov %rax,%rcx
9ac1(5): mov %rax,0x68(%rsp)
9ac6(7): lea 0x7a90(%rip),%rax
9acd(3): cmp %rax,%rcx
9ad0(6): jz 0x39e(%rip)
9ad6(7): lea 0x7a7e(%rip),%rsi
9add(2): xor %edi,%edi
9adf(5): mov $0x5,%edx
9ae4(5): call 0xffff8d0c(%rip)
9ae9(3): mov %rax,%rcx
9aec(5): mov %rax,0x60(%rsp)
9af1(7): lea 0x7a63(%rip),%rax
9af8(3): cmp %rax,%rcx
9afb(6): jz 0x389(%rip)
9b01(3): xor %r15d,%r15d
9b04(2): test %ebx,%ebx
9b06(6): jz 0x1c7(%rip)
9b0c(2): test %ebx,%ebx
9b0e(5): mov 0x60(%rsp),%rbx
9b13(5): setnz 0xf(%rsp)
9b18(3): xor %r12d,%r12d
9b1b(3): mov %rbx,%rdi
9b1e(5): call 0xffff8cf2(%rip)
9b23(5): mov %rbx,0x48(%rsp)
9b28(5): mov %rax,0x18(%rsp)
9b2d(5): mov $0x1,0xe(%rsp)
9b32(5): mov $0x0,0x7c(%rsp)
9b37(9): mov $0x0,0x50(%rsp)
9b40(5): mov $0x1,0xd(%rsp)
9b45(5): jmp 0xfffff29e(%rip)
9b4a(5): mov $0x1,0xe(%rsp)
9b4f(5): mov $0x0,0x7c(%rsp)
9b54(3): xor %r12d,%r12d
9b57(9): mov $0x0,0x50(%rsp)
9b60(5): mov $0x0,0xf(%rsp)
9b65(3): xor %r15d,%r15d
9b68(5): mov $0x0,0xd(%rsp)
9b6d(9): mov $0x0,0x18(%rsp)
9b76(9): mov $0x0,0x48(%rsp)
9b7f(5): jmp 0xfffff264(%rip)
9b84(5): mov $0x1,0xe(%rsp)
9b89(5): mov $0x0,0x7c(%rsp)
9b8e(3): xor %r12d,%r12d
9b91(9): mov $0x0,0x50(%rsp)
9b9a(5): mov $0x1,0xf(%rsp)
9b9f(5): mov $0x1,0xd(%rsp)
9ba4(5): jmp 0xfffff21f(%rip)
9ba9(3): cmp %r15,%r13
9bac(2): jbe 0x7(%rip)
9bae(5): mov $0x30,0x0(%r14,%r15,1)
9bb3(4): lea 0x2(%rcx),%rax
9bb7(3): cmp %rax,%r13
9bba(2): jbe 0x8(%rip)
9bbc(6): mov $0x30,0x2(%r14,%rcx,1)
9bc2(3): mov %r12d,%eax
9bc5(4): lea 0x3(%rcx),%r15
9bc9(3): xor %r12d,%r12d
9bcc(5): mov $0x30,%ebx
9bd1(5): jmp 0xfffff367(%rip)
9bd6(a): nop 0x0(%rax,%rax,1)
9be0(5): movzx 0xf(%rsp),%ebx
9be5(3): mov %r11,%rbp
9be8(4): mov %bl,0xd(%rsp)
9bec(5): jmp 0xfffffcad(%rip)
9bf1(5): movzx 0xd(%rsp),%edx
9bf6(3): xor %r12d,%r12d
9bf9(5): jmp 0xfffffb07(%rip)
9bfe(3): xor %r10d,%r10d
9c01(5): jmp 0xfffffbbc(%rip)
9c06(9): mov $0x0,0x50(%rsp)
9c0f(5): mov $0x1,0xe(%rsp)
9c14(3): xor %r12d,%r12d
9c17(5): mov $0x0,0x7c(%rsp)
9c1c(5): jmp 0xfffffddf(%rip)
9c21(5): mov 0x30(%rsp),%r11
9c26(3): mov %r14,%rsi
9c29(3): mov %r13,%rcx
9c2c(3): mov %rbx,%rax
9c2f(3): mov %rbx,%rdi
9c32(6): movzx 0x7d(%rsp),%r8d
9c38(5): movzx 0x7e(%rsp),%ebx
9c3d(8): mov 0x88(%rsp),%r9
9c45(3): cmp %r11,%rsi
9c48(6): movzx 0x7f(%rsp),%r10d
9c4e(8): mov 0x80(%rsp),%r15
9c56(5): mov 0x40(%rsp),%r14
9c5b(5): mov 0x70(%rsp),%r13
9c60(2): jnb 0x28(%rip)
9c62(3): cmp $0x0,(%rcx)
9c65(2): jnz 0x12(%rip)
9c67(2): jmp 0x21(%rip)
9c69(7): nop 0x0(%rax)
9c70(5): cmp $0x0,0x0(%r9,%rax,1)
9c75(2): jz 0x10(%rip)
9c77(4): add $0x1,%rax
9c7b(5): lea 0x0(%rbp,%rax,1),%rdx
9c80(3): cmp %rdx,%r11
9c83(2): jnbe 0xffffffed(%rip)
9c85(3): mov %rax,%rdi
9c88(5): movzx 0xd(%rsp),%edx
9c8d(3): xor %r12d,%r12d
9c90(5): jmp 0xfffffa66(%rip)
9c95(3): mov %rbx,%rdi
9c98(6): movzx 0x7d(%rsp),%r8d
9c9e(5): movzx 0x7e(%rsp),%ebx
9ca3(6): movzx 0x7f(%rsp),%r10d
9ca9(8): mov 0x80(%rsp),%r15
9cb1(3): xor %r12d,%r12d
9cb4(5): mov 0x40(%rsp),%r14
9cb9(5): mov 0x70(%rsp),%r13
9cbe(5): mov 0x30(%rsp),%r11
9cc3(5): movzx 0xd(%rsp),%edx
9cc8(5): jmp 0xfffffa2e(%rip)
9ccd(5): mov 0x68(%rsp),%rdx
9cd2(3): movzx (%rdx),%eax
9cd5(2): test %al,%al
9cd7(6): jz 0xfffffe35(%rip)
9cdd(3): nop (%rax)
9ce0(3): cmp %r15,%r13
9ce3(2): jbe 0x6(%rip)
9ce5(4): mov %al,0x0(%r14,%r15,1)
9ce9(4): add $0x1,%r15
9ced(5): movzx 0x0(%rdx,%r15,1),%eax
9cf2(2): test %al,%al
9cf4(2): jnz 0xffffffec(%rip)
9cf6(5): jmp 0xfffffe16(%rip)
9cfb(2): mov %edx,%eax
9cfd(5): jmp 0xfffff55a(%rip)
9d02(4): movzx 0x0(%rax,%rcx,1),%ebx
9d06(3): cmp $0x3e,%bl
9d09(6): jnbe 0xfffff877(%rip)
9d0f(a): mov $0x8070630310989004800,%rax
9d19(4): bt %rbx,%rax
9d1d(6): jnb 0xfffff863(%rip)
9d23(5): cmp $0x0,0xf(%rsp)
9d28(6): jnz 0x1ea(%rip)
9d2e(3): cmp %r15,%r13
9d31(2): jbe 0x7(%rip)
9d33(5): mov $0x3f,0x0(%r14,%r15,1)
9d38(4): lea 0x1(%r15),%rax
9d3c(3): cmp %rax,%r13
9d3f(2): jbe 0x8(%rip)
9d41(6): mov $0x22,0x1(%r14,%r15,1)
9d47(4): lea 0x2(%r15),%rax
9d4b(3): cmp %rax,%r13
9d4e(2): jbe 0x8(%rip)
9d50(6): mov $0x22,0x2(%r14,%r15,1)
9d56(4): lea 0x3(%r15),%rax
9d5a(3): cmp %rax,%r13
9d5d(2): jbe 0x8(%rip)
9d5f(6): mov $0x3f,0x3(%r14,%r15,1)
9d65(4): add $0x4,%r15
9d69(2): xor %edx,%edx
9d6b(3): xor %r12d,%r12d
9d6e(2): xor %eax,%eax
9d70(3): mov %rcx,%rbp
9d73(5): jmp 0xfffff1c5(%rip)
9d78(2): test %ebx,%ebx
9d7a(6): jz 0x18e(%rip)
9d80(7): lea 0x77d4(%rip),%rax
9d87(5): mov $0x1,0xe(%rsp)
9d8c(5): mov $0x0,0x7c(%rsp)
9d91(3): xor %r12d,%r12d
9d94(9): mov $0x0,0x50(%rsp)
9d9d(5): mov $0x1,0xf(%rsp)
9da2(5): mov $0x0,0xd(%rsp)
9da7(9): mov $0x1,0x18(%rsp)
9db0(3): xor %r15d,%r15d
9db3(5): mov %rax,0x48(%rsp)
9db8(5): jmp 0xfffff02b(%rip)
9dbd(3): nop (%rax)
9dc0(3): mov %r11,%rbp
9dc3(5): movzx 0xf(%rsp),%eax
9dc8(5): jmp 0xfffffad1(%rip)
9dcd(7): lea 0x6473(%rip),%rax
9dd4(5): mov $0x1,0xe(%rsp)
9dd9(5): mov $0x0,0x7c(%rsp)
9dde(3): xor %r12d,%r12d
9de1(9): mov $0x0,0x50(%rsp)
9dea(5): mov $0x1,0xf(%rsp)
9def(5): mov $0x1,0xd(%rsp)
9df4(9): mov $0x1,0x18(%rsp)
9dfd(3): xor %r15d,%r15d
9e00(5): mov %rax,0x48(%rsp)
9e05(5): jmp 0xffffefde(%rip)
9e0a(2): mov %edx,%eax
9e0c(5): mov 0x48(%rsp),%rbx
9e11(3): test %rbx,%rbx
9e14(2): jz 0x2e(%rip)
9e16(2): test %al,%al
9e18(2): jz 0x2a(%rip)
9e1a(3): movzx (%rbx),%ecx
9e1d(3): mov %rbx,%rax
9e20(2): test %cl,%cl
9e22(2): jz 0x20(%rip)
9e24(3): mov %r15,%rdx
9e27(3): sub %r15,%rax
9e2a(3): cmp %rdx,%r13
9e2d(2): jbe 0x6(%rip)
9e2f(4): mov %cl,0x0(%r14,%rdx,1)
9e33(4): add $0x1,%rdx
9e37(4): movzx 0x0(%rax,%rdx,1),%ecx
9e3b(2): test %cl,%cl
9e3d(2): jnz 0xffffffed(%rip)
9e3f(3): mov %rdx,%r15
9e42(3): cmp %r15,%r13
9e45(6): jbe 0xfffffaa4(%rip)
9e4b(5): mov $0x0,0x0(%r14,%r15,1)
9e50(5): jmp 0xfffffa99(%rip)
9e55(5): cmp $0x2,0x8(%rsp)
9e5a(5): movzx 0xf(%rsp),%ebx
9e5f(3): mov %r11,%rbp
9e62(3): setz %al
9e65(4): mov %bl,0xd(%rsp)
9e69(5): jmp 0xfffffa30(%rip)
9e6e(4): mov 0x8(%rsp),%esi
9e72(3): mov %rcx,%rdi
9e75(5): call 0xffffedab(%rip)
9e7a(5): mov %rax,0x68(%rsp)
9e7f(5): jmp 0xfffffc57(%rip)
9e84(4): mov 0x8(%rsp),%esi
9e88(3): mov %rcx,%rdi
9e8b(5): call 0xffffed95(%rip)
9e90(5): mov %rax,0x60(%rsp)
9e95(5): jmp 0xfffffc6c(%rip)
9e9a(5): movzx 0xf(%rsp),%ebx
9e9f(3): mov %r11,%rbp
9ea2(2): mov %edx,%eax
9ea4(4): mov %bl,0xd(%rsp)
9ea8(5): jmp 0xfffff9f1(%rip)
9ead(4): sub $0x8,%rsp
9eb1(6): mov $0x5,%r8d
9eb7(3): mov %r11,%rcx
9eba(4): push 0x68(%rsp)
9ebe(4): push 0x78(%rsp)
9ec2(3): mov %r14,%rdi
9ec5(4): push 0x38(%rsp)
9ec9(8): mov 0x98(%rsp),%r9d
9ed1(5): mov 0x30(%rsp),%rdx
9ed6(5): mov 0x70(%rsp),%rsi
9edb(5): call 0xffffee35(%rip)
9ee0(4): add $0x20,%rsp
9ee4(3): mov %rax,%r15
9ee7(5): jmp 0xfffffa02(%rip)
9eec(5): movzx 0x7c(%rsp),%eax
9ef1(5): jmp 0xffffff1b(%rip)
9ef6(8): mov $0x2,0x8(%rsp)
9efe(5): jmp 0xfffff99b(%rip)
9f03(5): call 0xffff892d(%rip)
9f08(5): mov $0x0,0xd(%rsp)
9f0d(5): jmp 0xfffffa74(%rip)
9f12(3): mov %r11,%rbp
9f15(5): jmp 0xfffff99b(%rip)
9f1a(5): mov $0x1,0xe(%rsp)
9f1f(2): xor %eax,%eax
9f21(3): xor %r12d,%r12d
9f24(9): mov $0x0,0x50(%rsp)
9f2d(5): jmp 0xfffff5a7(%rip)
9f32(3): mov %r13,%rdx
9f35(5): mov 0x50(%rsp),%r13
9f3a(5): jmp 0xfffff5f8(%rip)
9f3f(5): call 0xffff8801(%rip)

"quotearg_n_options" :
9f50(2): push %r15
9f52(2): push %r14
9f54(3): movsxd %edi,%r15
9f57(2): push %r13
9f59(2): push %r12
9f5b(3): mov %rdx,%r14
9f5e(1): push %rbp
9f5f(1): push %rbx
9f60(3): mov %rcx,%rbp
9f63(4): sub $0x28,%rsp
9f67(5): mov %rsi,0x8(%rsp)
9f6c(5): call 0xffff87e4(%rip)
9f71(3): mov %rax,%r13
9f74(2): mov (%rax),%eax
9f76(3): test %r15d,%r15d
9f79(7): mov 0x20b100(%rip),%rbx
9f80(4): mov %eax,0x18(%rsp)
9f84(6): js 0x16d(%rip)
9f8a(7): cmp %r15d,0x20b0e7(%rip)
9f91(2): jnle 0x64(%rip)
9f93(7): cmp $0x7fffffff,%r15d
9f9a(6): jz 0x15c(%rip)
9fa0(4): lea 0x1(%r15),%r12d
9fa4(7): lea 0x20b0e5(%rip),%rax
9fab(3): movsxd %r12d,%rsi
9fae(4): shl/sal $0x4,%rsi
9fb2(3): cmp %rax,%rbx
9fb5(6): jz 0x11b(%rip)
9fbb(3): mov %rbx,%rdi
9fbe(5): call 0xf72(%rip)
9fc3(3): mov %rax,%rbx
9fc6(7): mov %rax,0x20b0b3(%rip)
9fcd(7): movsxd 0x20b0a4(%rip),%rdi
9fd4(3): mov %r12d,%edx
9fd7(2): xor %esi,%esi
9fd9(2): sub %edi,%edx
9fdb(4): shl/sal $0x4,%rdi
9fdf(3): movsxd %edx,%rdx
9fe2(3): add %rbx,%rdi
9fe5(4): shl/sal $0x4,%rdx
9fe9(5): call 0xffff8907(%rip)
9fee(7): mov %r12d,0x20b083(%rip)
9ff5(3): mov 0x4(%rbp),%eax
9ff8(4): shl/sal $0x4,%r15
9ffc(4): sub $0x8,%rsp
a000(3): add %r15,%rbx
a003(4): lea 0x8(%rbp),%r15
a007(4): mov 0x0(%rbp),%r8d
a00b(3): mov (%rbx),%r11
a00e(4): mov 0x8(%rbx),%r12
a012(3): mov %r14,%rcx
a015(3): or $0x1,%eax
a018(4): mov %eax,0x24(%rsp)
a01c(3): push 0x30(%rbp)
a01f(3): mov %eax,%r9d
a022(3): push 0x28(%rbp)
a025(2): push %r15
a027(3): mov %r11,%rsi
a02a(5): mov 0x28(%rsp),%rdx
a02f(3): mov %r12,%rdi
a032(5): mov %r11,0x30(%rsp)
a037(5): call 0xffffecd9(%rip)
a03c(4): add $0x20,%rsp
a040(5): mov 0x10(%rsp),%r11
a045(3): cmp %rax,%r11
a048(2): jnbe 0x69(%rip)
a04a(4): lea 0x1(%rax),%rsi
a04e(7): lea 0x20b10b(%rip),%rax
a055(3): cmp %rax,%r12
a058(3): mov %rsi,(%rbx)
a05b(2): jz 0x14(%rip)
a05d(3): mov %r12,%rdi
a060(5): mov %rsi,0x10(%rsp)
a065(5): call 0xffff86ab(%rip)
a06a(5): mov 0x10(%rsp),%rsi
a06f(3): mov %rsi,%rdi
a072(5): mov %rsi,0x10(%rsp)
a077(5): call 0xe59(%rip)
a07c(4): sub $0x8,%rsp
a080(4): mov %rax,0x8(%rbx)
a084(4): mov 0x0(%rbp),%r8d
a088(3): push 0x30(%rbp)
a08b(3): push 0x28(%rbp)
a08e(3): mov %r14,%rcx
a091(2): push %r15
a093(5): mov 0x3c(%rsp),%r9d
a098(3): mov %rax,%rdi
a09b(5): mov 0x28(%rsp),%rdx
a0a0(5): mov 0x30(%rsp),%rsi
a0a5(3): mov %rax,%r12
a0a8(5): call 0xffffec68(%rip)
a0ad(4): add $0x20,%rsp
a0b1(4): mov 0x18(%rsp),%eax
a0b5(4): mov %eax,0x0(%r13)
a0b9(4): add $0x28,%rsp
a0bd(3): mov %r12,%rax
a0c0(1): pop %rbx
a0c1(1): pop %rbp
a0c2(2): pop %r12
a0c4(2): pop %r13
a0c6(2): pop %r14
a0c8(2): pop %r15
a0ca(1): ret near (%rsp)
a0cb(5): nop 0x0(%rax,%rax,1)
a0d0(2): xor %edi,%edi
a0d2(5): call 0xe5e(%rip)
a0d7(8): movdqa 0x20afb1(%rip),%xmm0
a0df(3): mov %rax,%rbx
a0e2(7): mov %rax,0x20af97(%rip)
a0e9(3): movups %xmm0,(%rax)
a0ec(5): jmp 0xfffffee1(%rip)
a0f1(5): call 0xffff864f(%rip)
a0f6(5): call 0x102a(%rip)

"clone_quoting_options" :
a100(2): push %r12
a102(1): push %rbp
a103(1): push %rbx
a104(3): mov %rdi,%rbx
a107(5): call 0xffff8649(%rip)
a10c(3): mov (%rax),%r12d
a10f(3): mov %rax,%rbp
a112(7): lea 0x20b147(%rip),%rax
a119(3): test %rbx,%rbx
a11c(5): mov $0x38,%esi
a121(4): cmove %rax,%rbx
a125(3): mov %rbx,%rdi
a128(5): call 0xfa8(%rip)
a12d(4): mov %r12d,0x0(%rbp)
a131(1): pop %rbx
a132(1): pop %rbp
a133(2): pop %r12
a135(1): ret near (%rsp)

"get_quoting_style" :
a140(7): lea 0x20b119(%rip),%rax
a147(3): test %rdi,%rdi
a14a(4): cmove %rax,%rdi
a14e(2): mov (%rdi),%eax
a150(1): ret near (%rsp)

"set_quoting_style" :
a160(7): lea 0x20b0f9(%rip),%rax
a167(3): test %rdi,%rdi
a16a(4): cmove %rax,%rdi
a16e(2): mov %esi,(%rdi)
a170(1): ret near (%rsp)

"set_char_quoting" :
a180(7): lea 0x20b0d9(%rip),%rax
a187(3): test %rdi,%rdi
a18a(2): mov %esi,%ecx
a18c(4): cmove %rax,%rdi
a190(2): mov %esi,%eax
a192(3): and $0x1f,%ecx
a195(3): shr $0x5,%al
a198(3): movzx %al,%eax
a19b(5): lea 0x8(%rdi,%rax,4),%rdi
a1a0(2): mov (%rdi),%esi
a1a2(2): mov %esi,%eax
a1a4(2): shr %cl,%eax
a1a6(2): xor %eax,%edx
a1a8(3): and $0x1,%eax
a1ab(3): and $0x1,%edx
a1ae(2): shl/sal %cl,%edx
a1b0(2): xor %esi,%edx
a1b2(2): mov %edx,(%rdi)
a1b4(1): ret near (%rsp)

"set_quoting_flags" :
a1c0(7): lea 0x20b099(%rip),%rax
a1c7(3): test %rdi,%rdi
a1ca(4): cmove %rax,%rdi
a1ce(3): mov 0x4(%rdi),%eax
a1d1(3): mov %esi,0x4(%rdi)
a1d4(1): ret near (%rsp)

"set_custom_quoting" :
a1e0(7): lea 0x20b079(%rip),%rax
a1e7(3): test %rdi,%rdi
a1ea(4): cmove %rax,%rdi
a1ee(3): test %rsi,%rsi
a1f1(6): mov $0xa,(%rdi)
a1f7(2): jz 0x10(%rip)
a1f9(3): test %rdx,%rdx
a1fc(2): jz 0xb(%rip)
a1fe(4): mov %rsi,0x28(%rdi)
a202(4): mov %rdx,0x30(%rdi)
a206(1): ret near (%rsp)
a207(4): sub $0x8,%rsp
a20b(5): call 0xffff8535(%rip)

"quotearg_buffer" :
a210(2): push %r15
a212(2): push %r14
a214(7): lea 0x20b045(%rip),%rax
a21b(2): push %r13
a21d(2): push %r12
a21f(3): mov %rdi,%r13
a222(1): push %rbp
a223(1): push %rbx
a224(3): mov %r8,%rbx
a227(3): mov %rsi,%r14
a22a(3): mov %rdx,%r15
a22d(4): sub $0x18,%rsp
a231(3): test %r8,%r8
a234(4): cmove %rax,%rbx
a238(5): mov %rcx,0x8(%rsp)
a23d(5): call 0xffff8513(%rip)
a242(3): mov (%rax),%r12d
a245(3): mov %rax,%rbp
a248(4): lea 0x8(%rbx),%rax
a24c(4): sub $0x8,%rsp
a250(4): mov 0x4(%rbx),%r9d
a254(3): push 0x30(%rbx)
a257(3): mov (%rbx),%r8d
a25a(3): push 0x28(%rbx)
a25d(3): mov %r15,%rdx
a260(1): push %rax
a261(5): mov 0x28(%rsp),%rcx
a266(3): mov %r14,%rsi
a269(3): mov %r13,%rdi
a26c(5): call 0xffffeaa4(%rip)
a271(4): mov %r12d,0x0(%rbp)
a275(4): add $0x38,%rsp
a279(1): pop %rbx
a27a(1): pop %rbp
a27b(2): pop %r12
a27d(2): pop %r13
a27f(2): pop %r14
a281(2): pop %r15
a283(1): ret near (%rsp)

"quotearg_alloc_mem" :
a290(2): push %r15
a292(2): push %r14
a294(7): lea 0x20afc5(%rip),%rax
a29b(2): push %r13
a29d(2): push %r12
a29f(3): mov %rdx,%r12
a2a2(1): push %rbp
a2a3(1): push %rbx
a2a4(3): mov %rcx,%rbx
a2a7(3): mov %rdi,%r14
a2aa(3): mov %rsi,%r15
a2ad(4): sub $0x38,%rsp
a2b1(3): test %rcx,%rcx
a2b4(4): cmove %rax,%rbx
a2b8(2): xor %ebp,%ebp
a2ba(5): call 0xffff8496(%rip)
a2bf(3): test %r12,%r12
a2c2(3): mov %rax,%r13
a2c5(2): mov (%rax),%eax
a2c7(4): setz %bpl
a2cb(3): or 0x4(%rbx),%ebp
a2ce(4): lea 0x8(%rbx),%r10
a2d2(4): sub $0x8,%rsp
a2d6(3): mov (%rbx),%r8d
a2d9(3): mov %r15,%rcx
a2dc(4): mov %eax,0x14(%rsp)
a2e0(3): push 0x30(%rbx)
a2e3(3): mov %r14,%rdx
a2e6(3): push 0x28(%rbx)
a2e9(2): push %r10
a2eb(2): xor %esi,%esi
a2ed(3): mov %ebp,%r9d
a2f0(2): xor %edi,%edi
a2f2(5): mov %r10,0x40(%rsp)
a2f7(5): call 0xffffea19(%rip)
a2fc(4): lea 0x1(%rax),%rsi
a300(5): mov %rax,0x48(%rsp)
a305(4): add $0x20,%rsp
a309(3): mov %rsi,%rdi
a30c(5): mov %rsi,0x18(%rsp)
a311(5): call 0xbbf(%rip)
a316(5): mov %rax,0x10(%rsp)
a31b(4): sub $0x8,%rsp
a31f(3): push 0x30(%rbx)
a322(3): push 0x28(%rbx)
a325(5): mov 0x38(%rsp),%r10
a32a(3): mov %ebp,%r9d
a32d(3): mov (%rbx),%r8d
a330(3): mov %r15,%rcx
a333(3): mov %r14,%rdx
a336(3): mov %rax,%rdi
a339(2): push %r10
a33b(5): mov 0x38(%rsp),%rsi
a340(5): call 0xffffe9d0(%rip)
a345(4): mov 0x2c(%rsp),%eax
a349(4): add $0x20,%rsp
a34d(3): test %r12,%r12
a350(4): mov %eax,0x0(%r13)
a354(2): jz 0xb(%rip)
a356(5): mov 0x28(%rsp),%r11
a35b(4): mov %r11,(%r12)
a35f(5): mov 0x10(%rsp),%rax
a364(4): add $0x38,%rsp
a368(1): pop %rbx
a369(1): pop %rbp
a36a(2): pop %r12
a36c(2): pop %r13
a36e(2): pop %r14
a370(2): pop %r15
a372(1): ret near (%rsp)

"quotearg_alloc" :
a380(3): mov %rdx,%rcx
a383(2): xor %edx,%edx
a385(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
a390(6): mov 0x20ace2(%rip),%eax
a396(2): push %r12
a398(7): mov 0x20ace1(%rip),%r12
a39f(1): push %rbp
a3a0(1): push %rbx
a3a1(3): cmp $0x1,%eax
a3a4(2): jle 0x2d(%rip)
a3a6(3): sub $0x2,%eax
a3a9(5): lea 0x18(%r12),%rbx
a3ae(4): shl/sal $0x4,%rax
a3b2(5): lea 0x28(%r12,%rax,1),%rbp
a3b7(9): nop 0x0(%rax,%rax,1)
a3c0(3): mov (%rbx),%rdi
a3c3(4): add $0x10,%rbx
a3c7(5): call 0xffff8349(%rip)
a3cc(3): cmp %rbp,%rbx
a3cf(2): jnz 0xfffffff1(%rip)
a3d1(5): mov 0x8(%r12),%rdi
a3d6(7): lea 0x20ad83(%rip),%rbx
a3dd(3): cmp %rbx,%rdi
a3e0(2): jz 0x19(%rip)
a3e2(5): call 0xffff832e(%rip)
a3e7(b): mov $0x100,0x20ac9e(%rip)
a3f2(7): mov %rbx,0x20ac9f(%rip)
a3f9(7): lea 0x20ac90(%rip),%rbx
a400(3): cmp %rbx,%r12
a403(2): jz 0x11(%rip)
a405(3): mov %r12,%rdi
a408(5): call 0xffff8308(%rip)
a40d(7): mov %rbx,0x20ac6c(%rip)
a414(1): pop %rbx
a415(a): mov $0x1,0x20ac59(%rip)
a41f(1): pop %rbp
a420(2): pop %r12
a422(1): ret near (%rsp)

"quotearg_n" :
a430(7): lea 0x20ae29(%rip),%rcx
a437(7): mov $0xffffffff,%rdx
a43e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
a450(7): lea 0x20ae09(%rip),%rcx
a457(5): jmp 0xfffffaf9(%rip)

"quotearg" :
a460(7): lea 0x20adf9(%rip),%rcx
a467(3): mov %rdi,%rsi
a46a(7): mov $0xffffffff,%rdx
a471(2): xor %edi,%edi
a473(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
a480(7): lea 0x20add9(%rip),%rcx
a487(3): mov %rsi,%rdx
a48a(3): mov %rdi,%rsi
a48d(2): xor %edi,%edi
a48f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
a4a0(4): sub $0x48,%rsp
a4a4(3): mov %rdx,%rax
a4a7(9): mov $0x28,%rdx
a4b0(5): mov %rdx,0x38(%rsp)
a4b5(2): xor %edx,%edx
a4b7(3): cmp $0xa,%esi
a4ba(2): jz 0x6a(%rip)
a4bc(3): mov %esi,(%rsp)
a4bf(3): mov %rsp,%rcx
a4c2(7): mov $0xffffffff,%rdx
a4c9(3): mov %rax,%rsi
a4cc(9): mov $0x0,0x4(%rsp)
a4d5(9): mov $0x0,0xc(%rsp)
a4de(9): mov $0x0,0x14(%rsp)
a4e7(9): mov $0x0,0x1c(%rsp)
a4f0(9): mov $0x0,0x24(%rsp)
a4f9(9): mov $0x0,0x2c(%rsp)
a502(8): mov $0x0,0x34(%rsp)
a50a(5): call 0xfffffa46(%rip)
a50f(5): mov 0x38(%rsp),%rcx
a514(9): xor $0x28,%rcx
a51d(2): jnz 0xc(%rip)
a51f(4): add $0x48,%rsp
a523(1): ret near (%rsp)
a524(5): call 0xffff821c(%rip)
a529(5): call 0xffff8307(%rip)

"quotearg_n_style_mem" :
a530(4): sub $0x48,%rsp
a534(3): mov %rdx,%rax
a537(3): mov %rcx,%rdx
a53a(9): mov $0x28,%rcx
a543(5): mov %rcx,0x38(%rsp)
a548(2): xor %ecx,%ecx
a54a(3): cmp $0xa,%esi
a54d(2): jz 0x63(%rip)
a54f(3): mov %esi,(%rsp)
a552(3): mov %rsp,%rcx
a555(3): mov %rax,%rsi
a558(9): mov $0x0,0x4(%rsp)
a561(9): mov $0x0,0xc(%rsp)
a56a(9): mov $0x0,0x14(%rsp)
a573(9): mov $0x0,0x1c(%rsp)
a57c(9): mov $0x0,0x24(%rsp)
a585(9): mov $0x0,0x2c(%rsp)
a58e(8): mov $0x0,0x34(%rsp)
a596(5): call 0xfffff9ba(%rip)
a59b(5): mov 0x38(%rsp),%rdx
a5a0(9): xor $0x28,%rdx
a5a9(2): jnz 0xc(%rip)
a5ab(4): add $0x48,%rsp
a5af(1): ret near (%rsp)
a5b0(5): call 0xffff8190(%rip)
a5b5(5): call 0xffff827b(%rip)

"quotearg_style" :
a5c0(3): mov %rsi,%rdx
a5c3(2): mov %edi,%esi
a5c5(2): xor %edi,%edi
a5c7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
a5d0(3): mov %rdx,%rcx
a5d3(3): mov %rsi,%rdx
a5d6(2): mov %edi,%esi
a5d8(2): xor %edi,%edi
a5da(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
a5e0(4): sub $0x48,%rsp
a5e4(2): mov %edx,%ecx
a5e6(9): mov $0x28,%rax
a5ef(5): mov %rax,0x38(%rsp)
a5f4(2): xor %eax,%eax
a5f6(7): mov 0x20ac93(%rip),%rax
a5fd(3): mov %rsp,%r8
a600(3): and $0x1f,%ecx
a603(8): movdqa 0x20ac55(%rip),%xmm0
a60b(5): mov %rax,0x30(%rsp)
a610(2): mov %edx,%eax
a612(4): movaps %xmm0,(%rsp)
a616(3): shr $0x5,%al
a619(3): movzx %al,%eax
a61c(5): lea 0x8(%r8,%rax,4),%r9
a621(8): movdqa 0x20ac47(%rip),%xmm0
a629(5): movaps %xmm0,0x10(%rsp)
a62e(8): movdqa 0x20ac4a(%rip),%xmm0
a636(5): movaps %xmm0,0x20(%rsp)
a63b(3): mov (%r9),%edx
a63e(2): mov %edx,%eax
a640(2): shr %cl,%eax
a642(2): not %eax
a644(3): and $0x1,%eax
a647(2): shl/sal %cl,%eax
a649(3): mov %r8,%rcx
a64c(2): xor %edx,%eax
a64e(3): mov %rsi,%rdx
a651(3): mov %rdi,%rsi
a654(3): mov %eax,(%r9)
a657(2): xor %edi,%edi
a659(5): call 0xfffff8f7(%rip)
a65e(5): mov 0x38(%rsp),%rsi
a663(9): xor $0x28,%rsi
a66c(2): jnz 0x7(%rip)
a66e(4): add $0x48,%rsp
a672(1): ret near (%rsp)
a673(5): call 0xffff81bd(%rip)

"quotearg_char" :
a680(4): movsx %sil,%edx
a684(7): mov $0xffffffff,%rsi
a68b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
a690(5): mov $0x3a,%edx
a695(7): mov $0xffffffff,%rsi
a69c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
a6b0(5): mov $0x3a,%edx
a6b5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
a6c0(4): sub $0x48,%rsp
a6c4(3): mov %rdx,%rax
a6c7(9): mov $0x28,%rdx
a6d0(5): mov %rdx,0x38(%rsp)
a6d5(2): xor %edx,%edx
a6d7(3): cmp $0xa,%esi
a6da(2): jz 0x6a(%rip)
a6dc(3): mov %esi,(%rsp)
a6df(3): mov %rsp,%rcx
a6e2(7): mov $0xffffffff,%rdx
a6e9(3): mov %rax,%rsi
a6ec(9): mov $0x0,0x4(%rsp)
a6f5(9): mov $0x4000000,0xc(%rsp)
a6fe(9): mov $0x0,0x14(%rsp)
a707(9): mov $0x0,0x1c(%rsp)
a710(9): mov $0x0,0x24(%rsp)
a719(9): mov $0x0,0x2c(%rsp)
a722(8): mov $0x0,0x34(%rsp)
a72a(5): call 0xfffff826(%rip)
a72f(5): mov 0x38(%rsp),%rcx
a734(9): xor $0x28,%rcx
a73d(2): jnz 0xc(%rip)
a73f(4): add $0x48,%rsp
a743(1): ret near (%rsp)
a744(5): call 0xffff7ffc(%rip)
a749(5): call 0xffff80e7(%rip)

"quotearg_n_custom_mem" :
a750(4): sub $0x48,%rsp
a754(3): mov %rcx,%r9
a757(7): mov 0x20ab32(%rip),%rcx
a75e(8): movdqa 0x20aafa(%rip),%xmm0
a766(9): mov $0x28,%rax
a76f(5): mov %rax,0x38(%rsp)
a774(2): xor %eax,%eax
a776(4): movaps %xmm0,(%rsp)
a77a(3): test %rsi,%rsi
a77d(5): mov %rcx,0x30(%rsp)
a782(7): mov $0xa,(%rsp)
a789(8): movdqa 0x20aadf(%rip),%xmm0
a791(5): movaps %xmm0,0x10(%rsp)
a796(8): movdqa 0x20aae2(%rip),%xmm0
a79e(5): movaps %xmm0,0x20(%rsp)
a7a3(2): jz 0x34(%rip)
a7a5(3): test %rdx,%rdx
a7a8(2): jz 0x2f(%rip)
a7aa(5): mov %rsi,0x28(%rsp)
a7af(5): mov %rdx,0x30(%rsp)
a7b4(3): mov %rsp,%rcx
a7b7(3): mov %r8,%rdx
a7ba(3): mov %r9,%rsi
a7bd(5): call 0xfffff793(%rip)
a7c2(5): mov 0x38(%rsp),%rdi
a7c7(9): xor $0x28,%rdi
a7d0(2): jnz 0xc(%rip)
a7d2(4): add $0x48,%rsp
a7d6(1): ret near (%rsp)
a7d7(5): call 0xffff7f69(%rip)
a7dc(5): call 0xffff8054(%rip)

"quotearg_n_custom" :
a7f0(7): mov $0xffffffff,%r8
a7f7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
a800(3): mov %rdx,%rcx
a803(7): mov $0xffffffff,%r8
a80a(3): mov %rsi,%rdx
a80d(3): mov %rdi,%rsi
a810(2): xor %edi,%edi
a812(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
a820(3): mov %rcx,%r8
a823(3): mov %rdx,%rcx
a826(3): mov %rsi,%rdx
a829(3): mov %rdi,%rsi
a82c(2): xor %edi,%edi
a82e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
a840(7): lea 0x20a7f9(%rip),%rcx
a847(5): jmp 0xfffff709(%rip)

"quote_mem" :
a850(7): lea 0x20a7e9(%rip),%rcx
a857(3): mov %rsi,%rdx
a85a(3): mov %rdi,%rsi
a85d(2): xor %edi,%edi
a85f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
a870(7): lea 0x20a7c9(%rip),%rcx
a877(7): mov $0xffffffff,%rdx
a87e(5): jmp 0xfffff6d2(%rip)

"quote" :
a890(7): lea 0x20a7a9(%rip),%rcx
a897(3): mov %rdi,%rsi
a89a(7): mov $0xffffffff,%rdx
a8a1(2): xor %edi,%edi
a8a3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
a8b0(2): push %r15
a8b2(2): push %r14
a8b4(2): push %r13
a8b6(2): push %r12
a8b8(3): mov %r9,%r12
a8bb(1): push %rbp
a8bc(1): push %rbx
a8bd(3): mov %rdi,%rbp
a8c0(3): mov %r8,%rbx
a8c3(4): sub $0x28,%rsp
a8c7(3): test %rsi,%rsi
a8ca(6): jz 0x11e(%rip)
a8d0(3): mov %rdx,%r8
a8d3(7): lea 0x714e(%rip),%rdx
a8da(3): mov %rcx,%r9
a8dd(2): xor %eax,%eax
a8df(3): mov %rsi,%rcx
a8e2(5): mov $0x1,%esi
a8e7(5): call 0xffff8209(%rip)
a8ec(7): lea 0x7148(%rip),%rsi
a8f3(2): xor %edi,%edi
a8f5(5): mov $0x5,%edx
a8fa(5): call 0xffff7ef6(%rip)
a8ff(7): lea 0x745a(%rip),%rdx
a906(3): mov %rax,%rcx
a909(6): mov $0x7e3,%r8d
a90f(5): mov $0x1,%esi
a914(3): mov %rbp,%rdi
a917(2): xor %eax,%eax
a919(5): call 0xffff81d7(%rip)
a91e(7): lea 0x71a3(%rip),%rsi
a925(2): xor %edi,%edi
a927(5): mov $0x5,%edx
a92c(5): call 0xffff7ec4(%rip)
a931(3): mov %rbp,%rsi
a934(3): mov %rax,%rdi
a937(5): call 0xffff7ff9(%rip)
a93c(4): cmp $0x9,%r12
a940(6): jnbe 0x340(%rip)
a946(7): lea 0x73db(%rip),%rdx
a94d(4): movsxd 0x0(%rdx,%r12,4),%rax
a951(3): add %rdx,%rax
a954(2): jmp %rax
a956(a): nop 0x0(%rax,%rax,1)
a960(4): mov 0x38(%rbx),%r9
a964(4): mov 0x10(%rbx),%rax
a968(7): lea 0x72c9(%rip),%rsi
a96f(4): mov 0x8(%rbx),%r8
a973(5): mov $0x5,%edx
a978(2): xor %edi,%edi
a97a(4): mov 0x30(%rbx),%r13
a97e(4): mov 0x28(%rbx),%r12
a982(5): mov %r9,0x10(%rsp)
a987(4): mov 0x20(%rbx),%r15
a98b(4): mov 0x18(%rbx),%r14
a98f(4): mov %rax,(%rsp)
a993(5): mov %r8,0x8(%rsp)
a998(3): mov (%rbx),%rbx
a99b(5): call 0xffff7e55(%rip)
a9a0(4): sub $0x8,%rsp
a9a4(5): mov 0x18(%rsp),%r9
a9a9(3): mov %rax,%rdx
a9ac(3): mov %rbx,%rcx
a9af(5): mov $0x1,%esi
a9b4(3): mov %rbp,%rdi
a9b7(2): xor %eax,%eax
a9b9(2): push %r9
a9bb(2): push %r13
a9bd(2): push %r12
a9bf(2): push %r15
a9c1(2): push %r14
a9c3(5): mov 0x30(%rsp),%r9
a9c8(5): mov 0x38(%rsp),%r8
a9cd(5): call 0xffff8123(%rip)
a9d2(4): add $0x30,%rsp
a9d6(4): add $0x28,%rsp
a9da(1): pop %rbx
a9db(1): pop %rbp
a9dc(2): pop %r12
a9de(2): pop %r13
a9e0(2): pop %r14
a9e2(2): pop %r15
a9e4(1): ret near (%rsp)
a9e5(3): nop (%rax)
a9e8(3): mov %rcx,%r8
a9eb(3): mov %rdx,%rcx
a9ee(7): lea 0x703f(%rip),%rdx
a9f5(5): mov $0x1,%esi
a9fa(2): xor %eax,%eax
a9fc(5): call 0xffff80f4(%rip)
aa01(5): jmp 0xfffffeeb(%rip)
aa06(a): nop 0x0(%rax,%rax,1)
aa10(4): mov 0x40(%rbx),%r10
aa14(4): mov 0x38(%rbx),%r9
aa18(7): lea 0x7249(%rip),%rsi
aa1f(4): mov 0x10(%rbx),%rax
aa23(4): mov 0x8(%rbx),%r8
aa27(5): mov $0x5,%edx
aa2c(4): mov 0x30(%rbx),%r13
aa30(4): mov 0x28(%rbx),%r12
aa34(4): mov 0x20(%rbx),%r15
aa38(4): mov 0x18(%rbx),%r14
aa3c(3): mov (%rbx),%rbx
aa3f(5): mov %r10,0x18(%rsp)
aa44(5): mov %r9,0x10(%rsp)
aa49(4): mov %rax,(%rsp)
aa4d(5): mov %r8,0x8(%rsp)
aa52(2): xor %edi,%edi
aa54(5): call 0xffff7d9c(%rip)
aa59(5): mov 0x18(%rsp),%r10
aa5e(2): push %r10
aa60(5): jmp 0xffffff44(%rip)
aa65(3): nop (%rax)
aa68(3): mov (%rbx),%rbx
aa6b(7): lea 0x6fcd(%rip),%rsi
aa72(5): mov $0x5,%edx
aa77(2): xor %edi,%edi
aa79(5): call 0xffff7d77(%rip)
aa7e(4): add $0x28,%rsp
aa82(3): mov %rbx,%rcx
aa85(3): mov %rbp,%rdi
aa88(1): pop %rbx
aa89(1): pop %rbp
aa8a(2): pop %r12
aa8c(2): pop %r13
aa8e(2): pop %r14
aa90(2): pop %r15
aa92(3): mov %rax,%rdx
aa95(5): mov $0x1,%esi
aa9a(2): xor %eax,%eax
aa9c(5): jmp 0xffff8054(%rip)
aaa1(7): nop 0x0(%rax)
aaa8(4): mov 0x8(%rbx),%r12
aaac(7): lea 0x6f9c(%rip),%rsi
aab3(3): mov (%rbx),%rbx
aab6(5): mov $0x5,%edx
aabb(2): xor %edi,%edi
aabd(5): call 0xffff7d33(%rip)
aac2(4): add $0x28,%rsp
aac6(3): mov %r12,%r8
aac9(3): mov %rbx,%rcx
aacc(3): mov %rbp,%rdi
aacf(3): mov %rax,%rdx
aad2(5): mov $0x1,%esi
aad7(1): pop %rbx
aad8(1): pop %rbp
aad9(2): pop %r12
aadb(2): pop %r13
aadd(2): pop %r14
aadf(2): pop %r15
aae1(2): xor %eax,%eax
aae3(5): jmp 0xffff800d(%rip)
aae8(8): nop 0x0(%rax,%rax,1)
aaf0(4): mov 0x10(%rbx),%r13
aaf4(4): mov 0x8(%rbx),%r12
aaf8(7): lea 0x6f67(%rip),%rsi
aaff(3): mov (%rbx),%rbx
ab02(5): mov $0x5,%edx
ab07(2): xor %edi,%edi
ab09(5): call 0xffff7ce7(%rip)
ab0e(4): add $0x28,%rsp
ab12(3): mov %r13,%r9
ab15(3): mov %r12,%r8
ab18(3): mov %rbx,%rcx
ab1b(3): mov %rbp,%rdi
ab1e(3): mov %rax,%rdx
ab21(1): pop %rbx
ab22(1): pop %rbp
ab23(2): pop %r12
ab25(2): pop %r13
ab27(2): pop %r14
ab29(2): pop %r15
ab2b(5): mov $0x1,%esi
ab30(2): xor %eax,%eax
ab32(5): jmp 0xffff7fbe(%rip)
ab37(9): nop 0x0(%rax,%rax,1)
ab40(7): lea 0x7051(%rip),%rsi
ab47(5): mov $0x5,%edx
ab4c(2): xor %edi,%edi
ab4e(4): mov 0x18(%rbx),%r14
ab52(4): mov 0x10(%rbx),%r13
ab56(4): mov 0x8(%rbx),%r12
ab5a(3): mov (%rbx),%rbx
ab5d(5): call 0xffff7c93(%rip)
ab62(4): sub $0x8,%rsp
ab66(2): push %r14
ab68(3): mov %rax,%rdx
ab6b(3): mov %r13,%r9
ab6e(3): mov %r12,%r8
ab71(3): mov %rbx,%rcx
ab74(3): mov %rbp,%rdi
ab77(5): mov $0x1,%esi
ab7c(2): xor %eax,%eax
ab7e(5): call 0xffff7f72(%rip)
ab83(1): pop %rax
ab84(1): pop %rdx
ab85(4): add $0x28,%rsp
ab89(1): pop %rbx
ab8a(1): pop %rbp
ab8b(2): pop %r12
ab8d(2): pop %r13
ab8f(2): pop %r14
ab91(2): pop %r15
ab93(1): ret near (%rsp)
ab94(4): nop 0x0(%rax)
ab98(4): mov 0x20(%rbx),%r15
ab9c(7): lea 0x7015(%rip),%rsi
aba3(5): mov $0x5,%edx
aba8(2): xor %edi,%edi
abaa(4): mov 0x18(%rbx),%r14
abae(4): mov 0x10(%rbx),%r13
abb2(4): mov 0x8(%rbx),%r12
abb6(3): mov (%rbx),%rbx
abb9(5): call 0xffff7c37(%rip)
abbe(2): push %r15
abc0(2): jmp 0xffffffa6(%rip)
abc2(6): nop 0x0(%rax,%rax,1)
abc8(4): mov 0x8(%rbx),%r8
abcc(4): mov 0x28(%rbx),%r12
abd0(7): lea 0x7009(%rip),%rsi
abd7(4): mov 0x20(%rbx),%r15
abdb(4): mov 0x18(%rbx),%r14
abdf(5): mov $0x5,%edx
abe4(4): mov 0x10(%rbx),%r13
abe8(2): xor %edi,%edi
abea(3): mov (%rbx),%rbx
abed(4): mov %r8,(%rsp)
abf1(5): call 0xffff7bff(%rip)
abf6(4): sub $0x8,%rsp
abfa(3): mov %r13,%r9
abfd(2): push %r12
abff(2): push %r15
ac01(2): push %r14
ac03(5): mov 0x20(%rsp),%r8
ac08(3): mov %rbx,%rcx
ac0b(3): mov %rax,%rdx
ac0e(3): mov %rbp,%rdi
ac11(5): mov $0x1,%esi
ac16(2): xor %eax,%eax
ac18(5): call 0xffff7ed8(%rip)
ac1d(4): add $0x20,%rsp
ac21(4): add $0x28,%rsp
ac25(1): pop %rbx
ac26(1): pop %rbp
ac27(2): pop %r12
ac29(2): pop %r13
ac2b(2): pop %r14
ac2d(2): pop %r15
ac2f(1): ret near (%rsp)
ac30(4): mov 0x10(%rbx),%r9
ac34(4): mov 0x30(%rbx),%r13
ac38(7): lea 0x6fc9(%rip),%rsi
ac3f(4): mov 0x28(%rbx),%r12
ac43(4): mov 0x20(%rbx),%r15
ac47(5): mov $0x5,%edx
ac4c(4): mov 0x18(%rbx),%r14
ac50(4): mov 0x8(%rbx),%r8
ac54(2): xor %edi,%edi
ac56(5): mov %r9,0x8(%rsp)
ac5b(3): mov (%rbx),%rbx
ac5e(4): mov %r8,(%rsp)
ac62(5): call 0xffff7b8e(%rip)
ac67(2): push %r13
ac69(2): push %r12
ac6b(2): push %r15
ac6d(2): push %r14
ac6f(5): mov 0x28(%rsp),%r9
ac74(2): jmp 0xffffff8f(%rip)
ac76(a): nop 0x0(%rax,%rax,1)
ac80(4): mov 0x40(%rbx),%r10
ac84(4): mov 0x38(%rbx),%r9
ac88(5): mov $0x5,%edx
ac8d(4): mov 0x10(%rbx),%rax
ac91(4): mov 0x8(%rbx),%r8
ac95(7): lea 0x7004(%rip),%rsi
ac9c(4): mov 0x30(%rbx),%r13
aca0(4): mov 0x28(%rbx),%r12
aca4(4): mov 0x20(%rbx),%r15
aca8(4): mov 0x18(%rbx),%r14
acac(5): mov %r10,0x18(%rsp)
acb1(5): mov %r9,0x10(%rsp)
acb6(4): mov %rax,(%rsp)
acba(5): mov %r8,0x8(%rsp)
acbf(3): mov (%rbx),%rbx
acc2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
acd0(3): xor %r9d,%r9d
acd3(4): cmp $0x0,(%r8)
acd7(2): jz 0x14(%rip)
acd9(7): nop 0x0(%rax)
ace0(4): add $0x1,%r9
ace4(5): cmp $0x0,0x0(%r8,%r9,8)
ace9(2): jnz 0xfffffff7(%rip)
aceb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
acf0(4): sub $0x68,%rsp
acf4(3): mov %r8,%r10
acf7(3): xor %r9d,%r9d
acfa(9): mov $0x28,%rax
ad03(5): mov %rax,0x58(%rsp)
ad08(2): xor %eax,%eax
ad0a(3): mov %rsp,%r8
ad0d(3): nop (%rax)
ad10(3): mov (%r10),%eax
ad13(3): cmp $0x2f,%eax
ad16(2): jnbe 0x44(%rip)
ad18(3): mov %eax,%r11d
ad1b(4): add 0x10(%r10),%r11
ad1f(3): add $0x8,%eax
ad22(3): mov %eax,(%r10)
ad25(3): mov (%r11),%rax
ad28(3): test %rax,%rax
ad2b(4): mov %rax,0x0(%r8,%r9,8)
ad2f(2): jz 0xc(%rip)
ad31(4): add $0x1,%r9
ad35(4): cmp $0xa,%r9
ad39(2): jnz 0xffffffd7(%rip)
ad3b(5): call 0xfffffb75(%rip)
ad40(5): mov 0x58(%rsp),%rax
ad45(9): xor $0x28,%rax
ad4e(2): jnz 0x7(%rip)
ad50(4): add $0x68,%rsp
ad54(1): ret near (%rsp)
ad55(5): call 0xffff7adb(%rip)
ad5a(4): mov 0x8(%r10),%r11
ad5e(4): lea 0x8(%r11),%rax
ad62(4): mov %rax,0x8(%r10)
ad66(2): jmp 0xffffffbf(%rip)

"version_etc" :
ad70(1): push %rbp
ad71(1): push %rbx
ad72(6): mov $0x20,%r10d
ad78(3): xor %r11d,%r11d
ad7b(7): sub $0xb8,%rsp
ad82(9): mov $0x28,%rax
ad8b(5): mov %rax,0x78(%rsp)
ad90(2): xor %eax,%eax
ad92(8): lea 0xd0(%rsp),%rax
ad9a(8): mov %r8,0xa0(%rsp)
ada2(8): lea 0xd0(%rsp),%rbx
adaa(5): lea 0x20(%rsp),%r8
adaf(8): mov %r9,0xa8(%rsp)
adb7(8): mov $0x20,0x8(%rsp)
adbf(5): mov %rax,0x10(%rsp)
adc4(8): lea 0x80(%rsp),%rax
adcc(3): xor %r9d,%r9d
adcf(5): mov %rax,0x18(%rsp)
add4(3): mov %rax,%rbp
add7(9): nop 0x0(%rax,%rax,1)
ade0(4): cmp $0x2f,%r10d
ade4(2): jnbe 0x58(%rip)
ade6(3): mov %r10d,%eax
ade9(6): mov $0x1,%r11d
adef(4): add $0x8,%r10d
adf3(3): add %rbp,%rax
adf6(3): mov (%rax),%rax
adf9(3): test %rax,%rax
adfc(4): mov %rax,0x0(%r8,%r9,8)
ae00(2): jz 0xc(%rip)
ae02(4): add $0x1,%r9
ae06(4): cmp $0xa,%r9
ae0a(2): jnz 0xffffffd6(%rip)
ae0c(3): test %r11b,%r11b
ae0f(2): jnz 0x26(%rip)
ae11(5): call 0xfffffa9f(%rip)
ae16(5): mov 0x78(%rsp),%rax
ae1b(9): xor $0x28,%rax
ae24(2): jnz 0xc(%rip)
ae26(7): add $0xb8,%rsp
ae2d(1): pop %rbx
ae2e(1): pop %rbp
ae2f(1): ret near (%rsp)
ae30(5): call 0xffff7a00(%rip)
ae35(5): mov %r10d,0x8(%rsp)
ae3a(2): jmp 0xffffffd7(%rip)
ae3c(3): mov %rbx,%rax
ae3f(4): add $0x8,%rbx
ae43(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
ae50(1): push %rbx
ae51(7): lea 0x6c2a(%rip),%rsi
ae58(5): mov $0x5,%edx
ae5d(2): xor %edi,%edi
ae5f(5): call 0xffff7991(%rip)
ae64(7): lea 0x6c2c(%rip),%rdx
ae6b(3): mov %rax,%rsi
ae6e(5): mov $0x1,%edi
ae73(2): xor %eax,%eax
ae75(5): call 0xffff7bcb(%rip)
ae7a(7): lea 0x6c2c(%rip),%rsi
ae81(5): mov $0x5,%edx
ae86(2): xor %edi,%edi
ae88(5): call 0xffff7968(%rip)
ae8d(7): lea 0x5044(%rip),%rcx
ae94(7): lea 0x491c(%rip),%rdx
ae9b(3): mov %rax,%rsi
ae9e(5): mov $0x1,%edi
aea3(2): xor %eax,%eax
aea5(5): call 0xffff7b9b(%rip)
aeaa(7): mov 0x20a1f7(%rip),%rbx
aeb1(7): lea 0x6e28(%rip),%rsi
aeb8(2): xor %edi,%edi
aeba(5): mov $0x5,%edx
aebf(5): call 0xffff7931(%rip)
aec4(3): mov %rbx,%rsi
aec7(3): mov %rax,%rdi
aeca(1): pop %rbx
aecb(5): jmp 0xffff7a65(%rip)

"xmalloc" :
aed0(1): push %rbx
aed1(3): mov %rdi,%rbx
aed4(5): call 0xffff7afc(%rip)
aed9(3): test %rax,%rax
aedc(2): jnz 0x7(%rip)
aede(3): test %rbx,%rbx
aee1(2): jnz 0x4(%rip)
aee3(1): pop %rbx
aee4(1): ret near (%rsp)
aee5(5): call 0x23b(%rip)

"xnmalloc" :
aef0(3): mov %rdi,%rax
aef3(3): mul %rax,%rsi,%rdx
aef6(3): mov %rax,%rdi
aef9(3): seto %al
aefc(3): test %rdi,%rdi
aeff(2): js 0xc(%rip)
af01(3): movzx %al,%eax
af04(3): test %rax,%rax
af07(2): jnz 0x4(%rip)
af09(2): jmp 0xffffffc7(%rip)
af0b(4): sub $0x8,%rsp
af0f(5): call 0x211(%rip)

"xrealloc" :
af30(3): test %rsi,%rsi
af33(1): push %rbx
af34(3): mov %rsi,%rbx
af37(2): jnz 0x7(%rip)
af39(3): test %rdi,%rdi
af3c(2): jnz 0x1c(%rip)
af3e(3): mov %rbx,%rsi
af41(5): call 0xffff7adf(%rip)
af46(3): test %rax,%rax
af49(2): jnz 0x7(%rip)
af4b(3): test %rbx,%rbx
af4e(2): jnz 0x13(%rip)
af50(1): pop %rbx
af51(1): ret near (%rsp)
af52(6): nop 0x0(%rax,%rax,1)
af58(5): call 0xffff77b8(%rip)
af5d(2): xor %eax,%eax
af5f(1): pop %rbx
af60(1): ret near (%rsp)
af61(5): call 0x1bf(%rip)

"xnrealloc" :
af70(3): mov %rsi,%rax
af73(3): mul %rax,%rdx,%rdx
af76(3): mov %rax,%rsi
af79(3): seto %al
af7c(3): test %rsi,%rsi
af7f(2): js 0xc(%rip)
af81(3): movzx %al,%eax
af84(3): test %rax,%rax
af87(2): jnz 0x4(%rip)
af89(2): jmp 0xffffffa7(%rip)
af8b(4): sub $0x8,%rsp
af8f(5): call 0x191(%rip)

"x2nrealloc" :
afa0(3): test %rdi,%rdi
afa3(3): mov %rdx,%r9
afa6(3): mov (%rsi),%rcx
afa9(2): jz 0x37(%rip)
afab(2): xor %edx,%edx
afad(a): mov $0x6148914691236517204,%rax
afb7(3): div %r9,%rax
afba(3): cmp %rcx,%rax
afbd(2): jbe 0x3e(%rip)
afbf(3): mov %rcx,%rax
afc2(3): shr $0x1,%rax
afc5(5): lea 0x1(%rax,%rcx,1),%rcx
afca(3): mov %rcx,(%rsi)
afcd(4): imul %r9,%rcx
afd1(3): mov %rcx,%rsi
afd4(5): jmp 0xffffff5c(%rip)
afd9(7): nop 0x0(%rax)
afe0(3): test %rcx,%rcx
afe3(2): jz 0x25(%rip)
afe5(3): mov %rcx,%rax
afe8(3): mul %rax,%r9,%rdx
afeb(3): seto %dl
afee(3): test %rax,%rax
aff1(3): movzx %dl,%edx
aff4(2): js 0x7(%rip)
aff6(3): test %rdx,%rdx
aff9(2): jz 0xffffffd1(%rip)
affb(4): sub $0x8,%rsp
afff(5): call 0x121(%rip)
b004(4): nop 0x0(%rax)
b008(2): xor %edx,%edx
b00a(5): mov $0x80,%eax
b00f(3): xor %r8d,%r8d
b012(3): div %r9,%rax
b015(3): test %rax,%rax
b018(4): setz %r8b
b01c(4): lea 0x0(%r8,%rax,1),%rcx
b020(2): jmp 0xffffffc5(%rip)

"x2realloc" :
b030(3): test %rdi,%rdi
b033(3): mov (%rsi),%rax
b036(2): jz 0x2a(%rip)
b038(a): mov $0x6148914691236517203,%rdx
b042(3): cmp %rdx,%rax
b045(2): jnbe 0x2c(%rip)
b047(3): mov %rax,%rdx
b04a(3): shr $0x1,%rdx
b04d(5): lea 0x1(%rdx,%rax,1),%rax
b052(3): mov %rax,(%rsi)
b055(3): mov %rax,%rsi
b058(5): jmp 0xfffffed8(%rip)
b05d(3): nop (%rax)
b060(3): test %rax,%rax
b063(5): mov $0x80,%edx
b068(4): cmove %rdx,%rax
b06c(3): test %rax,%rax
b06f(2): jns 0xffffffe3(%rip)
b071(4): sub $0x8,%rsp
b075(5): call 0xab(%rip)

"xzalloc" :
b080(1): push %rbx
b081(3): mov %rdi,%rbx
b084(5): call 0xfffffe4c(%rip)
b089(3): mov %rbx,%rdx
b08c(2): xor %esi,%esi
b08e(3): mov %rax,%rdi
b091(1): pop %rbx
b092(5): jmp 0xffff785e(%rip)

"xcalloc" :
b0a0(3): mov %rdi,%rax
b0a3(4): sub $0x8,%rsp
b0a7(3): mul %rax,%rsi,%rdx
b0aa(3): seto %dl
b0ad(3): test %rax,%rax
b0b0(2): js 0x19(%rip)
b0b2(3): movzx %dl,%edx
b0b5(3): test %rdx,%rdx
b0b8(2): jnz 0x11(%rip)
b0ba(5): call 0xffff7886(%rip)
b0bf(3): test %rax,%rax
b0c2(2): jz 0x7(%rip)
b0c4(4): add $0x8,%rsp
b0c8(1): ret near (%rsp)
b0c9(5): call 0x57(%rip)

"xmemdup" :
b0d0(1): push %rbp
b0d1(1): push %rbx
b0d2(3): mov %rdi,%rbp
b0d5(3): mov %rsi,%rdi
b0d8(3): mov %rsi,%rbx
b0db(4): sub $0x8,%rsp
b0df(5): call 0xfffffdf1(%rip)
b0e4(4): add $0x8,%rsp
b0e8(3): mov %rbx,%rdx
b0eb(3): mov %rbp,%rsi
b0ee(1): pop %rbx
b0ef(1): pop %rbp
b0f0(3): mov %rax,%rdi
b0f3(5): jmp 0xffff787d(%rip)

"xstrdup" :
b100(1): push %rbx
b101(3): mov %rdi,%rbx
b104(5): call 0xffff770c(%rip)
b109(3): mov %rbx,%rdi
b10c(4): lea 0x1(%rax),%rsi
b110(1): pop %rbx
b111(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
b120(7): lea 0x6c68(%rip),%rsi
b127(4): sub $0x8,%rsp
b12b(5): mov $0x5,%edx
b130(2): xor %edi,%edi
b132(5): call 0xffff76be(%rip)
b137(6): mov 0x209ee3(%rip),%edi
b13d(7): lea 0x4f5c(%rip),%rdx
b144(3): mov %rax,%rcx
b147(2): xor %esi,%esi
b149(2): xor %eax,%eax
b14b(5): call 0xffff7925(%rip)
b150(5): call 0xffff75f0(%rip)

"rpl_mbrtowc" :
b160(2): push %r13
b162(2): push %r12
b164(3): mov %rsi,%r13
b167(1): push %rbp
b168(1): push %rbx
b169(3): mov %rdi,%rbx
b16c(3): mov %rdx,%r12
b16f(4): sub $0x18,%rsp
b173(9): mov $0x28,%rax
b17c(5): mov %rax,0x8(%rsp)
b181(2): xor %eax,%eax
b183(5): lea 0x4(%rsp),%rax
b188(3): test %rdi,%rdi
b18b(4): cmove %rax,%rbx
b18f(3): mov %rbx,%rdi
b192(5): call 0xffff76be(%rip)
b197(4): cmp $0xfffffffd,%rax
b19b(3): mov %rax,%rbp
b19e(2): jbe 0x22(%rip)
b1a0(3): test %r12,%r12
b1a3(2): jz 0x1d(%rip)
b1a5(2): xor %edi,%edi
b1a7(5): call 0x749(%rip)
b1ac(2): test %al,%al
b1ae(2): jnz 0x12(%rip)
b1b0(5): movzx 0x0(%r13),%eax
b1b5(5): mov $0x1,%ebp
b1ba(2): mov %eax,(%rbx)
b1bc(4): nop 0x0(%rax)
b1c0(5): mov 0x8(%rsp),%rdx
b1c5(9): xor $0x28,%rdx
b1ce(3): mov %rbp,%rax
b1d1(2): jnz 0xd(%rip)
b1d3(4): add $0x18,%rsp
b1d7(1): pop %rbx
b1d8(1): pop %rbp
b1d9(2): pop %r12
b1db(2): pop %r13
b1dd(1): ret near (%rsp)
b1de(5): call 0xffff7652(%rip)

"setenv_TZ" :
b1f0(3): test %rdi,%rdi
b1f3(2): jz 0x1d(%rip)
b1f5(3): mov %rdi,%rsi
b1f8(7): lea 0x52d5(%rip),%rdi
b1ff(5): mov $0x1,%edx
b204(5): jmp 0xffff75ac(%rip)
b209(7): nop 0x0(%rax)
b210(7): lea 0x52bd(%rip),%rdi
b217(5): jmp 0xffff7889(%rip)

"tzfree.part.0" :
b220(3): test %rdi,%rdi
b223(2): jz 0x25(%rip)
b225(1): push %rbx
b226(a): nop 0x0(%rax,%rax,1)
b230(3): mov (%rdi),%rbx
b233(5): call 0xffff74dd(%rip)
b238(3): test %rbx,%rbx
b23b(3): mov %rbx,%rdi
b23e(2): jnz 0xfffffff2(%rip)
b240(1): pop %rbx
b241(1): ret near (%rsp)
b242(6): nop 0x0(%rax,%rax,1)
b248(2): REP ret near (%rsp)

"revert_tz.part.1" :
b250(2): push %r13
b252(2): push %r12
b254(1): push %rbp
b255(1): push %rbx
b256(3): mov %rdi,%rbp
b259(4): sub $0x8,%rsp
b25d(5): call 0xffff74f3(%rip)
b262(4): cmp $0x0,0x8(%rbp)
b266(3): mov %rax,%rbx
b269(3): mov (%rax),%r12d
b26c(4): lea 0x9(%rbp),%rdi
b270(2): jnz 0x4(%rip)
b272(2): xor %edi,%edi
b274(5): call 0xffffff7c(%rip)
b279(2): test %eax,%eax
b27b(2): jz 0x25(%rip)
b27d(3): mov (%rbx),%r12d
b280(3): xor %r13d,%r13d
b283(3): mov %rbp,%rdi
b286(5): call 0xffffff9a(%rip)
b28b(3): mov %r12d,(%rbx)
b28e(4): add $0x8,%rsp
b292(3): mov %r13d,%eax
b295(1): pop %rbx
b296(1): pop %rbp
b297(2): pop %r12
b299(2): pop %r13
b29b(1): ret near (%rsp)
b29c(4): nop 0x0(%rax)
b2a0(5): call 0xffff76e0(%rip)
b2a5(6): mov $0x1,%r13d
b2ab(2): jmp 0xffffffd8(%rip)

"tzalloc" :
b2b0(3): test %rdi,%rdi
b2b3(2): push %r12
b2b5(1): push %rbp
b2b6(1): push %rbx
b2b7(2): jz 0x61(%rip)
b2b9(3): mov %rdi,%r12
b2bc(5): call 0xffff7554(%rip)
b2c1(4): lea 0x1(%rax),%rbp
b2c5(5): mov $0x76,%edi
b2ca(4): cmp $0x76,%rbp
b2ce(4): cmovnb %rbp,%rdi
b2d2(4): add $0x11,%rdi
b2d6(4): and $0xfffffff8,%rdi
b2da(5): call 0xffff76f6(%rip)
b2df(3): test %rax,%rax
b2e2(3): mov %rax,%rbx
b2e5(2): jz 0x26(%rip)
b2e7(7): mov $0x0,(%rax)
b2ee(4): lea 0x9(%rbx),%rdi
b2f2(5): mov $0x1,%eax
b2f7(4): mov %ax,0x8(%rbx)
b2fb(3): mov %rbp,%rdx
b2fe(3): mov %r12,%rsi
b301(5): call 0xffff766f(%rip)
b306(5): mov $0x0,0x9(%rbx,%rbp,1)
b30b(3): mov %rbx,%rax
b30e(1): pop %rbx
b30f(1): pop %rbp
b310(2): pop %r12
b312(1): ret near (%rsp)
b313(5): nop 0x0(%rax,%rax,1)
b318(5): mov $0x80,%edi
b31d(5): call 0xffff76b3(%rip)
b322(3): test %rax,%rax
b325(3): mov %rax,%rbx
b328(2): jz 0xffffffe3(%rip)
b32a(2): xor %edx,%edx
b32c(7): mov $0x0,(%rbx)
b333(3): mov %rbx,%rax
b336(4): mov %dx,0x8(%rbx)
b33a(1): pop %rbx
b33b(1): pop %rbp
b33c(2): pop %r12
b33e(1): ret near (%rsp)

"save_abbr" :
b340(2): push %r15
b342(2): push %r14
b344(5): mov $0x1,%eax
b349(2): push %r13
b34b(2): push %r12
b34d(1): push %rbp
b34e(1): push %rbx
b34f(4): sub $0x8,%rsp
b353(4): mov 0x30(%rsi),%rbp
b357(3): test %rbp,%rbp
b35a(6): jz 0x96(%rip)
b360(3): cmp %rbp,%rsi
b363(3): mov %rdi,%r12
b366(3): mov %rsi,%r13
b369(2): jnbe 0xb(%rip)
b36b(4): lea 0x38(%rsi),%rdx
b36f(3): cmp %rdx,%rbp
b372(2): jb 0x7e(%rip)
b374(4): cmp $0x0,0x0(%rbp)
b378(5): lea 0x9(%r12),%rbx
b37d(2): jz 0x63(%rip)
b37f(1): nop 
b380(3): mov %rbp,%rsi
b383(3): mov %rbx,%rdi
b386(5): call 0xffff75ca(%rip)
b38b(2): test %eax,%eax
b38d(2): jz 0x5a(%rip)
b38f(3): cmp $0x0,(%rbx)
b392(2): jnz 0x14(%rip)
b394(5): lea 0x9(%r12),%r14
b399(3): cmp %rbx,%r14
b39c(2): jnz 0x64(%rip)
b39e(6): cmp $0x0,0x8(%r12)
b3a4(2): jz 0x5c(%rip)
b3a6(3): mov %rbx,%rdi
b3a9(5): call 0xffff7467(%rip)
b3ae(5): lea 0x1(%rbx,%rax,1),%rbx
b3b3(3): cmp $0x0,(%rbx)
b3b6(2): jnz 0xffffffca(%rip)
b3b8(4): mov (%r12),%rax
b3bc(3): test %rax,%rax
b3bf(2): jz 0xffffffc1(%rip)
b3c1(4): lea 0x9(%rax),%rbx
b3c5(3): mov %rbp,%rsi
b3c8(3): mov %rax,%r12
b3cb(3): mov %rbx,%rdi
b3ce(5): call 0xffff7582(%rip)
b3d3(2): test %eax,%eax
b3d5(2): jnz 0xffffffba(%rip)
b3d7(2): jmp 0x10(%rip)
b3d9(7): nop 0x0(%rax)
b3e0(7): lea 0x4f8f(%rip),%rbx
b3e7(4): mov %rbx,0x30(%r13)
b3eb(5): mov $0x1,%eax
b3f0(4): add $0x8,%rsp
b3f4(1): pop %rbx
b3f5(1): pop %rbp
b3f6(2): pop %r12
b3f8(2): pop %r13
b3fa(2): pop %r14
b3fc(2): pop %r15
b3fe(1): ret near (%rsp)
b3ff(1): nop 
b400(3): mov %rbp,%rdi
b403(5): call 0xffff740d(%rip)
b408(4): lea 0x1(%rax),%rdx
b40c(3): mov %rax,%r15
b40f(3): mov %rbx,%rax
b412(3): sub %r14,%rax
b415(3): mov %rax,%rcx
b418(3): not %rcx
b41b(3): cmp %rdx,%rcx
b41e(2): jb 0x32(%rip)
b420(3): add %rdx,%rax
b423(4): cmp $0x76,%rax
b427(2): jbe 0x39(%rip)
b429(3): mov %rbp,%rdi
b42c(5): call 0xfffffe84(%rip)
b431(3): mov %rax,%rbx
b434(4): mov %rax,(%r12)
b438(2): xor %eax,%eax
b43a(3): test %rbx,%rbx
b43d(2): jz 0xffffffb3(%rip)
b43f(4): mov $0x0,0x8(%rbx)
b443(4): add $0x9,%rbx
b447(2): jmp 0xffffffa0(%rip)
b449(7): nop 0x0(%rax)
b450(5): call 0xffff7300(%rip)
b455(6): mov $0xc,(%rax)
b45b(2): xor %eax,%eax
b45d(2): jmp 0xffffff93(%rip)
b45f(1): nop 
b460(3): mov %rbp,%rsi
b463(3): mov %rbx,%rdi
b466(5): call 0xffff750a(%rip)
b46b(6): mov $0x0,0x1(%rbx,%r15,1)
b471(5): jmp 0xffffff76(%rip)

"set_tz" :
b480(2): push %r12
b482(1): push %rbp
b483(3): mov %rdi,%rbp
b486(1): push %rbx
b487(7): lea 0x5046(%rip),%rdi
b48e(4): sub $0x10,%rsp
b492(5): call 0xffff725e(%rip)
b497(3): test %rax,%rax
b49a(3): mov %rax,%rbx
b49d(6): jz 0x9b(%rip)
b4a3(4): cmp $0x0,0x8(%rbp)
b4a7(2): jnz 0x69(%rip)
b4a9(3): mov %rbx,%rdi
b4ac(5): call 0xfffffe04(%rip)
b4b1(3): test %rax,%rax
b4b4(3): mov %rax,%r12
b4b7(2): jz 0x46(%rip)
b4b9(2): xor %edi,%edi
b4bb(4): cmp $0x0,0x8(%rbp)
b4bf(2): jz 0x6(%rip)
b4c1(4): lea 0x9(%rbp),%rdi
b4c5(5): call 0xfffffd2b(%rip)
b4ca(2): test %eax,%eax
b4cc(6): jz 0x8c(%rip)
b4d2(5): call 0xffff727e(%rip)
b4d7(4): cmp $0x1,%r12
b4db(2): mov (%rax),%ebx
b4dd(2): jz 0x1b(%rip)
b4df(3): mov %r12,%rdi
b4e2(5): mov %rax,0x8(%rsp)
b4e7(5): call 0xfffffd39(%rip)
b4ec(5): mov 0x8(%rsp),%rax
b4f1(7): nop 0x0(%rax)
b4f8(2): mov %ebx,(%rax)
b4fa(3): xor %r12d,%r12d
b4fd(4): add $0x10,%rsp
b501(3): mov %r12,%rax
b504(1): pop %rbx
b505(1): pop %rbp
b506(2): pop %r12
b508(1): ret near (%rsp)
b509(7): nop 0x0(%rax)
b510(4): lea 0x9(%rbp),%rdi
b514(3): mov %rax,%rsi
b517(6): mov $0x1,%r12d
b51d(5): call 0xffff7433(%rip)
b522(2): test %eax,%eax
b524(2): jnz 0xffffff85(%rip)
b526(4): add $0x10,%rsp
b52a(3): mov %r12,%rax
b52d(1): pop %rbx
b52e(1): pop %rbp
b52f(2): pop %r12
b531(1): ret near (%rsp)
b532(6): nop 0x0(%rax,%rax,1)
b538(4): cmp $0x0,0x8(%rbp)
b53c(6): mov $0x1,%r12d
b542(6): jnz 0xffffff67(%rip)
b548(4): add $0x10,%rsp
b54c(3): mov %r12,%rax
b54f(1): pop %rbx
b550(1): pop %rbp
b551(2): pop %r12
b553(1): ret near (%rsp)
b554(4): nop 0x0(%rax)
b558(5): call 0xffff7428(%rip)
b55d(2): jmp 0xffffffa0(%rip)

"tzfree" :
b560(4): cmp $0x1,%rdi
b564(2): jz 0x7(%rip)
b566(5): jmp 0xfffffcba(%rip)
b56b(1): ret near (%rsp)

"localtime_rz" :
b570(2): push %r13
b572(2): push %r12
b574(1): push %rbp
b575(1): push %rbx
b576(3): mov %rsi,%rbp
b579(4): sub $0x8,%rsp
b57d(3): test %rdi,%rdi
b580(2): jz 0x70(%rip)
b582(3): mov %rdx,%r13
b585(3): mov %rdi,%rbx
b588(5): call 0xfffffef8(%rip)
b58d(3): test %rax,%rax
b590(3): mov %rax,%r12
b593(2): jz 0x4b(%rip)
b595(3): mov %r13,%rsi
b598(3): mov %rbp,%rdi
b59b(5): call 0xffff71d5(%rip)
b5a0(3): test %rax,%rax
b5a3(2): jz 0x2d(%rip)
b5a5(3): mov %r13,%rsi
b5a8(3): mov %rbx,%rdi
b5ab(5): call 0xfffffd95(%rip)
b5b0(2): test %al,%al
b5b2(2): jz 0x1e(%rip)
b5b4(4): cmp $0x1,%r12
b5b8(2): jnz 0x4d(%rip)
b5ba(4): add $0x8,%rsp
b5be(3): mov %r13,%rax
b5c1(1): pop %rbx
b5c2(1): pop %rbp
b5c3(2): pop %r12
b5c5(2): pop %r13
b5c7(1): ret near (%rsp)
b5c8(8): nop 0x0(%rax,%rax,1)
b5d0(4): cmp $0x1,%r12
b5d4(2): jz 0xa(%rip)
b5d6(3): mov %r12,%rdi
b5d9(5): call 0xfffffc77(%rip)
b5de(4): add $0x8,%rsp
b5e2(2): xor %eax,%eax
b5e4(1): pop %rbx
b5e5(1): pop %rbp
b5e6(2): pop %r12
b5e8(2): pop %r13
b5ea(1): ret near (%rsp)
b5eb(5): nop 0x0(%rax,%rax,1)
b5f0(4): add $0x8,%rsp
b5f4(3): mov %rbp,%rdi
b5f7(3): mov %rdx,%rsi
b5fa(1): pop %rbx
b5fb(1): pop %rbp
b5fc(2): pop %r12
b5fe(2): pop %r13
b600(5): jmp 0xffff72b0(%rip)
b605(3): mov %r12,%rdi
b608(5): call 0xfffffc48(%rip)
b60d(2): test %al,%al
b60f(2): jnz 0xffffffab(%rip)
b611(2): jmp 0xffffffcd(%rip)

"mktime_z" :
b620(2): push %r12
b622(1): push %rbp
b623(1): push %rbx
b624(3): mov %rsi,%rbx
b627(4): sub $0x50,%rsp
b62b(9): mov $0x28,%rax
b634(5): mov %rax,0x48(%rsp)
b639(2): xor %eax,%eax
b63b(3): test %rdi,%rdi
b63e(6): jz 0x102(%rip)
b644(3): mov %rdi,%rbp
b647(5): call 0xfffffe39(%rip)
b64c(3): test %rax,%rax
b64f(3): mov %rax,%r12
b652(6): jz 0xfe(%rip)
b658(3): mov %rbx,%rdi
b65b(5): call 0xffff73a5(%rip)
b660(4): cmp $0xffffffff,%rax
b664(5): mov %rax,0x8(%rsp)
b669(2): jz 0x57(%rip)
b66b(3): mov %rbx,%rsi
b66e(3): mov %rbp,%rdi
b671(5): call 0xfffffccf(%rip)
b676(2): test %al,%al
b678(2): jnz 0xb(%rip)
b67a(9): mov $0xffffffff,0x8(%rsp)
b683(4): cmp $0x1,%r12
b687(2): jz 0x12(%rip)
b689(3): mov %r12,%rdi
b68c(5): call 0xfffffbc4(%rip)
b691(2): test %al,%al
b693(6): jz 0xbd(%rip)
b699(5): mov 0x8(%rsp),%rax
b69e(5): mov 0x48(%rsp),%rcx
b6a3(9): xor $0x28,%rcx
b6ac(6): jnz 0xb0(%rip)
b6b2(4): add $0x50,%rsp
b6b6(1): pop %rbx
b6b7(1): pop %rbp
b6b8(2): pop %r12
b6ba(1): ret near (%rsp)
b6bb(5): nop 0x0(%rax,%rax,1)
b6c0(5): lea 0x10(%rsp),%rsi
b6c5(5): lea 0x8(%rsp),%rdi
b6ca(5): call 0xffff70a6(%rip)
b6cf(3): test %rax,%rax
b6d2(2): jz 0xffffffb1(%rip)
b6d4(2): mov (%rbx),%eax
b6d6(3): mov 0x4(%rbx),%edx
b6d9(4): xor 0x10(%rsp),%eax
b6dd(4): xor 0x14(%rsp),%edx
b6e1(4): mov 0x30(%rsp),%ecx
b6e5(2): or %edx,%eax
b6e7(3): mov 0x8(%rbx),%edx
b6ea(4): xor 0x18(%rsp),%edx
b6ee(2): or %edx,%eax
b6f0(3): mov 0xc(%rbx),%edx
b6f3(4): xor 0x1c(%rsp),%edx
b6f7(2): or %edx,%eax
b6f9(3): mov 0x10(%rbx),%edx
b6fc(4): xor 0x20(%rsp),%edx
b700(2): or %edx,%eax
b702(3): mov 0x14(%rbx),%edx
b705(4): xor 0x24(%rsp),%edx
b709(2): or %edx,%eax
b70b(3): mov 0x20(%rbx),%edx
b70e(2): test %edx,%edx
b710(4): setz %dil
b714(2): test %ecx,%ecx
b716(4): setz %sil
b71a(3): cmp %sil,%dil
b71d(2): jz 0xe(%rip)
b71f(2): test %edx,%edx
b721(2): js 0xa(%rip)
b723(2): test %ecx,%ecx
b725(6): jns 0xffffff5e(%rip)
b72b(2): test %eax,%eax
b72d(6): jz 0xffffff3e(%rip)
b733(5): jmp 0xffffff50(%rip)
b738(8): nop 0x0(%rax,%rax,1)
b740(3): mov %rsi,%rdi
b743(5): call 0xffff730d(%rip)
b748(5): jmp 0xffffff56(%rip)
b74d(3): nop (%rax)
b750(7): mov $0xffffffff,%rax
b757(5): jmp 0xffffff47(%rip)
b75c(5): call 0xffff70d4(%rip)

"rpl_vfprintf" :
b770(2): push %r13
b772(2): push %r12
b774(3): mov %rsi,%rax
b777(1): push %rbp
b778(1): push %rbx
b779(3): mov %rdi,%r13
b77c(7): sub $0x7f8,%rsp
b783(5): lea 0x10(%rsp),%r12
b788(5): lea 0x8(%rsp),%rsi
b78d(9): mov $0x7d0,0x8(%rsp)
b796(9): mov $0x28,%rcx
b79f(8): mov %rcx,0x7e8(%rsp)
b7a7(2): xor %ecx,%ecx
b7a9(3): mov %r12,%rdi
b7ac(3): mov %rdx,%rcx
b7af(3): mov %rax,%rdx
b7b2(5): call 0x1ebe(%rip)
b7b7(3): test %rax,%rax
b7ba(5): mov 0x8(%rsp),%rbx
b7bf(6): jz 0x8f(%rip)
b7c5(3): mov %r13,%rcx
b7c8(3): mov %rbx,%rdx
b7cb(5): mov $0x1,%esi
b7d0(3): mov %rax,%rdi
b7d3(3): mov %rax,%rbp
b7d6(5): call 0xffff730a(%rip)
b7db(3): cmp %rbx,%rax
b7de(2): jb 0x42(%rip)
b7e0(3): cmp %r12,%rbp
b7e3(2): jz 0xa(%rip)
b7e5(3): mov %rbp,%rdi
b7e8(5): call 0xffff6f28(%rip)
b7ed(7): cmp $0x7fffffff,%rbx
b7f4(2): jnbe 0x4f(%rip)
b7f6(8): mov 0x7e8(%rsp),%rcx
b7fe(9): xor $0x28,%rcx
b807(2): mov %ebx,%eax
b809(2): jnz 0x54(%rip)
b80b(7): add $0x7f8,%rsp
b812(1): pop %rbx
b813(1): pop %rbp
b814(2): pop %r12
b816(2): pop %r13
b818(1): ret near (%rsp)
b819(7): nop 0x0(%rax)
b820(3): cmp %r12,%rbp
b823(5): mov $0xffffffff,%ebx
b828(2): jz 0xffffffce(%rip)
b82a(5): call 0xffff6f26(%rip)
b82f(3): mov (%rax),%r13d
b832(3): mov %rax,%r12
b835(3): mov %rbp,%rdi
b838(5): call 0xffff6ed8(%rip)
b83d(4): mov %r13d,(%r12)
b841(2): jmp 0xffffffb5(%rip)
b843(5): call 0xffff6f0d(%rip)
b848(6): mov $0x4b,(%rax)
b84e(3): mov %r13,%rdi
b851(5): mov $0xffffffff,%ebx
b856(5): call 0x1e0a(%rip)
b85b(2): jmp 0xffffff9b(%rip)
b85d(5): call 0xffff6fd3(%rip)

"close_stream" :
b870(2): push %r12
b872(1): push %rbp
b873(3): mov %rdi,%rbp
b876(1): push %rbx
b877(5): call 0xffff6f19(%rip)
b87c(3): mov 0x0(%rbp),%ebx
b87f(3): mov %rbp,%rdi
b882(3): mov %rax,%r12
b885(5): call 0x1cbb(%rip)
b88a(3): and $0x20,%ebx
b88d(2): test %ebx,%ebx
b88f(2): jnz 0x19(%rip)
b891(2): test %eax,%eax
b893(2): jz 0xc(%rip)
b895(3): test %r12,%r12
b898(5): mov $0xffffffff,%eax
b89d(2): jz 0x3b(%rip)
b89f(1): pop %rbx
b8a0(1): pop %rbp
b8a1(2): pop %r12
b8a3(1): ret near (%rsp)
b8a4(4): nop 0x0(%rax)
b8a8(2): test %eax,%eax
b8aa(2): jnz 0x1e(%rip)
b8ac(5): call 0xffff6ea4(%rip)
b8b1(6): mov $0x0,(%rax)
b8b7(5): mov $0xffffffff,%eax
b8bc(1): pop %rbx
b8bd(1): pop %rbp
b8be(2): pop %r12
b8c0(1): ret near (%rsp)
b8c1(7): nop 0x0(%rax)
b8c8(1): pop %rbx
b8c9(5): mov $0xffffffff,%eax
b8ce(1): pop %rbp
b8cf(2): pop %r12
b8d1(1): ret near (%rsp)
b8d2(6): nop 0x0(%rax,%rax,1)
b8d8(5): call 0xffff6e78(%rip)
b8dd(3): cmp $0x9,(%rax)
b8e0(1): pop %rbx
b8e1(1): pop %rbp
b8e2(2): pop %r12
b8e4(3): setnz %al
b8e7(3): movzx %al,%eax
b8ea(2): neg %eax
b8ec(1): ret near (%rsp)

"hard_locale" :
b8f0(4): sub $0x8,%rsp
b8f4(2): xor %esi,%esi
b8f6(5): call 0xffff713a(%rip)
b8fb(3): mov %rax,%rdx
b8fe(5): mov $0x1,%eax
b903(3): test %rdx,%rdx
b906(2): jz 0x1f(%rip)
b908(7): lea 0x4d35(%rip),%rdi
b90f(5): mov $0x2,%ecx
b914(3): mov %rdx,%rsi
b917(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b919(3): setnbe %cl
b91c(3): sbb $0x0,%cl
b91f(2): xor %eax,%eax
b921(2): test %cl,%cl
b923(2): jnz 0xd(%rip)
b925(4): add $0x8,%rsp
b929(1): ret near (%rsp)
b92a(6): nop 0x0(%rax,%rax,1)
b930(7): lea 0x6469(%rip),%rdi
b937(5): mov $0x6,%ecx
b93c(3): mov %rdx,%rsi
b93f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b941(3): setnbe %al
b944(2): sbb $0x0,%al
b946(2): test %al,%al
b948(3): setnz %al
b94b(4): add $0x8,%rsp
b94f(1): ret near (%rsp)

"locale_charset" :
b950(4): sub $0x8,%rsp
b954(5): mov $0xe,%edi
b959(5): call 0xffff7097(%rip)
b95e(3): test %rax,%rax
b961(2): jz 0x1f(%rip)
b963(3): cmp $0x0,(%rax)
b966(7): lea 0x6439(%rip),%rdx
b96d(4): cmove %rdx,%rax
b971(4): add $0x8,%rsp
b975(1): ret near (%rsp)
b976(a): nop 0x0(%rax,%rax,1)
b980(7): lea 0x641f(%rip),%rax
b987(4): add $0x8,%rsp
b98b(1): ret near (%rsp)

"memcpy_lowcase" :
b990(3): test %rdx,%rdx
b993(2): push %r12
b995(1): push %rbp
b996(3): mov %rdi,%rbp
b999(1): push %rbx
b99a(2): jz 0x2f(%rip)
b99c(3): mov %rsi,%r12
b99f(4): lea 0xffffffff(%rdx),%rbx
b9a3(5): call 0xffff717d(%rip)
b9a8(8): nop 0x0(%rax,%rax,1)
b9b0(5): movzx 0x0(%r12,%rbx,1),%ecx
b9b5(3): mov (%rax),%rdx
b9b8(3): mov 0x0(%rdx,%rcx,4),%edx
b9bb(4): mov %dl,0x0(%rbp,%rbx,1)
b9bf(4): sub $0x1,%rbx
b9c3(4): cmp $0xffffffff,%rbx
b9c7(2): jnz 0xffffffe9(%rip)
b9c9(3): mov %rbp,%rax
b9cc(1): pop %rbx
b9cd(1): pop %rbp
b9ce(2): pop %r12
b9d0(1): ret near (%rsp)

"memcpy_uppcase" :
b9e0(3): test %rdx,%rdx
b9e3(2): push %r12
b9e5(1): push %rbp
b9e6(3): mov %rdi,%rbp
b9e9(1): push %rbx
b9ea(2): jz 0x2f(%rip)
b9ec(3): mov %rsi,%r12
b9ef(4): lea 0xffffffff(%rdx),%rbx
b9f3(5): call 0xffff6ced(%rip)
b9f8(8): nop 0x0(%rax,%rax,1)
ba00(5): movzx 0x0(%r12,%rbx,1),%ecx
ba05(3): mov (%rax),%rdx
ba08(3): mov 0x0(%rdx,%rcx,4),%edx
ba0b(4): mov %dl,0x0(%rbp,%rbx,1)
ba0f(4): sub $0x1,%rbx
ba13(4): cmp $0xffffffff,%rbx
ba17(2): jnz 0xffffffe9(%rip)
ba19(3): mov %rbp,%rax
ba1c(1): pop %rbx
ba1d(1): pop %rbp
ba1e(2): pop %r12
ba20(1): ret near (%rsp)

"__strftime_internal" :
ba30(2): push %r15
ba32(2): push %r14
ba34(3): mov %rdx,%r11
ba37(2): push %r13
ba39(2): push %r12
ba3b(3): mov %rcx,%r13
ba3e(1): push %rbp
ba3f(1): push %rbx
ba40(3): mov %rdi,%rbp
ba43(7): sub $0x4c8,%rsp
ba4a(4): mov 0x30(%rcx),%rdi
ba4e(4): mov 0x8(%rcx),%r15d
ba52(8): mov 0x508(%rsp),%rax
ba5a(5): mov %rsi,0x8(%rsp)
ba5f(5): mov %r9d,0x2c(%rsp)
ba64(8): movsxd 0x500(%rsp),%r10
ba6c(5): mov %r8b,0x2b(%rsp)
ba71(5): mov %rax,0x18(%rsp)
ba76(8): mov 0x510(%rsp),%rax
ba7e(5): mov %rax,0x10(%rsp)
ba83(9): mov $0x28,%rax
ba8c(8): mov %rax,0x4b8(%rsp)
ba94(2): xor %eax,%eax
ba96(7): lea 0x48d9(%rip),%rax
ba9d(3): test %rdi,%rdi
baa0(4): cmovne %rdi,%rax
baa4(4): cmp $0xc,%r15d
baa8(5): mov %rax,0x20(%rsp)
baad(6): jle 0xf3(%rip)
bab3(4): sub $0xc,%r15d
bab7(4): movzx (%r11),%eax
babb(3): xor %r14d,%r14d
babe(2): test %al,%al
bac0(6): jz 0xbc(%rip)
bac6(5): mov %r15d,0x68(%rsp)
bacb(3): mov %r11,%rbx
bace(2): cmp $0x25,%al
bad0(6): jz 0xe8(%rip)
bad6(3): test %r10d,%r10d
bad9(6): mov $0x0,%r12d
badf(5): mov $0x1,%eax
bae4(4): cmovns %r10,%r12
bae8(3): test %r12,%r12
baeb(4): cmove %rax,%r12
baef(5): mov 0x8(%rsp),%rax
baf4(3): sub %r14,%rax
baf7(3): cmp %r12,%rax
bafa(2): jnbe 0x36(%rip)
bafc(3): xor %r14d,%r14d
baff(8): mov 0x4b8(%rsp),%rbx
bb07(9): xor $0x28,%rbx
bb10(3): mov %r14,%rax
bb13(6): jnz 0x19b2(%rip)
bb19(7): add $0x4c8,%rsp
bb20(1): pop %rbx
bb21(1): pop %rbp
bb22(2): pop %r12
bb24(2): pop %r13
bb26(2): pop %r14
bb28(2): pop %r15
bb2a(1): ret near (%rsp)
bb2b(5): nop 0x0(%rax,%rax,1)
bb30(3): test %rbp,%rbp
bb33(2): jz 0x29(%rip)
bb35(4): cmp $0x1,%r10d
bb39(2): jle 0x19(%rip)
bb3b(4): lea 0xffffffff(%r10),%r15
bb3f(3): mov %rbp,%rdi
bb42(5): mov $0x20,%esi
bb47(3): mov %r15,%rdx
bb4a(3): add %r15,%rbp
bb4d(5): call 0xffff6da3(%rip)
bb52(3): movzx (%rbx),%eax
bb55(4): add $0x1,%rbp
bb59(3): mov %al,0xffffffff(%rbp)
bb5c(3): add %r12,%r14
bb5f(3): mov %rbx,%r12
bb62(6): movzx 0x1(%r12),%eax
bb68(5): lea 0x1(%r12),%rbx
bb6d(7): mov $0xffffffff,%r10
bb74(2): test %al,%al
bb76(6): jnz 0xffffff58(%rip)
bb7c(3): test %rbp,%rbp
bb7f(6): jz 0xffffff80(%rip)
bb85(6): cmp $0x0,0x8(%rsp)
bb8b(6): jz 0xffffff74(%rip)
bb91(4): mov $0x0,0x0(%rbp)
bb95(5): jmp 0xffffff6a(%rip)
bb9a(6): nop 0x0(%rax,%rax,1)
bba0(3): test %r15d,%r15d
bba3(5): mov $0xc,%eax
bba8(4): cmove %eax,%r15d
bbac(5): jmp 0xffffff0b(%rip)
bbb1(7): nop 0x0(%rax)
bbb8(5): movzx 0x2b(%rsp),%eax
bbbd(3): xor %r8d,%r8d
bbc0(3): xor %r15d,%r15d
bbc3(5): mov $0x1,%edx
bbc8(4): mov %al,0x30(%rsp)
bbcc(4): add $0x1,%rbx
bbd0(3): movsx (%rbx),%eax
bbd3(3): lea 0xffffffdd(%rax),%ecx
bbd6(2): mov %eax,%esi
bbd8(3): mov %eax,%r9d
bbdb(3): cmp $0x3c,%cl
bbde(2): jnbe 0x2e(%rip)
bbe0(3): mov %rdx,%rdi
bbe3(a): mov $0x1152921504606856448,%r11
bbed(3): shl/sal %cl,%rdi
bbf0(3): test %r11,%rdi
bbf3(2): jnz 0x6d(%rip)
bbf5(2): test %cl,%cl
bbf7(2): jz 0x79(%rip)
bbf9(a): mov $0x576460752303423488,%rcx
bc03(3): test %rcx,%rdi
bc06(6): jnz 0x15a(%rip)
bc0c(3): lea 0xffffffd0(%rax),%edx
bc0f(3): cmp $0x9,%edx
bc12(6): jbe 0x15e(%rip)
bc18(4): cmp $0x45,%sil
bc1c(2): jz 0x2c(%rip)
bc1e(3): xor %r11d,%r11d
bc21(4): cmp $0x4f,%sil
bc25(2): jz 0x23(%rip)
bc27(4): cmp $0x7a,%sil
bc2b(2): jnbe 0x55(%rip)
bc2d(7): lea 0x6190(%rip),%rdx
bc34(4): movzx %sil,%eax
bc38(4): movsxd 0x0(%rdx,%rax,4),%rax
bc3c(3): add %rdx,%rax
bc3f(2): jmp %rax
bc41(7): nop 0x0(%rax)
bc48(5): movsx 0x1(%rbx),%r9d
bc4d(3): mov %eax,%r11d
bc50(4): add $0x1,%rbx
bc54(3): mov %r9d,%esi
bc57(2): jmp 0xffffffd0(%rip)
bc59(7): nop 0x0(%rax)
bc60(3): mov %eax,%r15d
bc63(5): jmp 0xffffff69(%rip)
bc68(8): nop 0x0(%rax,%rax,1)
bc70(6): mov $0x1,%r8d
bc76(5): jmp 0xffffff56(%rip)
bc7b(3): mov %r9,%rbx
bc7e(2): nop 
bc80(4): lea 0xffffffff(%rbx),%rax
bc84(6): mov $0x1,%r8d
bc8a(3): mov %rax,%r9
bc8d(4): lea 0xffffffff(%rax),%rax
bc91(4): add $0x1,%r8d
bc95(4): cmp $0x25,0x1(%rax)
bc99(2): jnz 0xfffffff1(%rip)
bc9b(5): mov 0x8(%rsp),%rdx
bca0(5): mov $0x0,%eax
bca5(3): movsxd %r8d,%r8
bca8(3): mov %r8,%rcx
bcab(3): mov %rbx,%r12
bcae(3): sub %r14,%rdx
bcb1(3): test %r10d,%r10d
bcb4(4): cmovns %r10d,%eax
bcb8(2): cwde 
bcba(3): cmp %r8,%rax
bcbd(4): cmovnb %rax,%rcx
bcc1(3): cmp %rdx,%rcx
bcc4(6): jnb 0xfffffe38(%rip)
bcca(3): test %rbp,%rbp
bccd(6): jz 0x88(%rip)
bcd3(3): cmp %r8,%rax
bcd6(2): jbe 0x4f(%rip)
bcd8(3): movsxd %r10d,%rdx
bcdb(5): mov %r8,0x48(%rsp)
bce0(5): mov %rcx,0x40(%rsp)
bce5(3): sub %r8,%rdx
bce8(4): cmp $0x30,%r15d
bcec(5): mov %r9,0x38(%rsp)
bcf1(5): lea 0x0(%rbp,%rdx,1),%rbx
bcf6(6): jz 0x1270(%rip)
bcfc(4): cmp $0x2b,%r15d
bd00(6): jz 0x1266(%rip)
bd06(3): mov %rbp,%rdi
bd09(5): mov $0x20,%esi
bd0e(3): mov %rbx,%rbp
bd11(5): call 0xffff6bdf(%rip)
bd16(5): mov 0x48(%rsp),%r8
bd1b(5): mov 0x40(%rsp),%rcx
bd20(5): mov 0x38(%rsp),%r9
bd25(5): cmp $0x0,0x30(%rsp)
bd2a(5): mov %rcx,0x38(%rsp)
bd2f(3): mov %r8,%rdx
bd32(5): mov %r8,0x30(%rsp)
bd37(3): mov %r9,%rsi
bd3a(3): mov %rbp,%rdi
bd3d(6): jz 0x11d3(%rip)
bd43(5): call 0xfffffc9d(%rip)
bd48(5): mov 0x30(%rsp),%r8
bd4d(5): mov 0x38(%rsp),%rcx
bd52(3): add %r8,%rbp
bd55(3): add %rcx,%r14
bd58(5): jmp 0xfffffe0a(%rip)
bd5d(3): nop (%rax)
bd60(5): mov $0x1,0x30(%rsp)
bd65(5): jmp 0xfffffe67(%rip)
bd6a(6): nop 0x0(%rax,%rax,1)
bd70(3): xor %r10d,%r10d
bd73(4): movsx 0x1(%rbx),%eax
bd77(7): cmp $0xccccccc,%r10d
bd7e(4): lea 0x1(%rbx),%rcx
bd82(2): mov %eax,%esi
bd84(3): lea 0xffffffd0(%rax),%edx
bd87(2): jnle 0x2f(%rip)
bd89(3): movsx (%rbx),%edi
bd8c(2): jz 0x24(%rip)
bd8e(4): lea 0x0(%r10,%r10,4),%r9d
bd92(3): mov %rcx,%rbx
bd95(5): lea 0xffffffd0(%rdi,%r9,2),%r10d
bd9a(3): cmp $0x9,%edx
bd9d(2): jbe 0xffffffd6(%rip)
bd9f(3): mov %eax,%r9d
bda2(5): jmp 0xfffffe76(%rip)
bda7(9): nop 0x0(%rax,%rax,1)
bdb0(4): cmp $0x37,%dil
bdb4(2): jle 0xffffffda(%rip)
bdb6(3): cmp $0x9,%edx
bdb9(2): jnbe 0x17(%rip)
bdbb(4): movsx 0x2(%rbx),%eax
bdbf(6): mov $0x7fffffff,%r10d
bdc5(4): add $0x2,%rbx
bdc9(2): mov %eax,%esi
bdcb(3): lea 0xffffffd0(%rax),%edx
bdce(2): jmp 0xffffffcc(%rip)
bdd0(3): mov %eax,%r9d
bdd3(3): mov %rcx,%rbx
bdd6(6): mov $0x7fffffff,%r10d
bddc(5): jmp 0xfffffe3c(%rip)
bde1(7): nop 0x0(%rax)
bde8(4): cmp $0x4f,%r11d
bdec(6): jz 0xfffffe94(%rip)
bdf2(3): xor %r8d,%r8d
bdf5(5): mov $0x2520,%eax
bdfa(3): test %r11d,%r11d
bdfd(8): mov %ax,0xab(%rsp)
be05(6): jnz 0x16d6(%rip)
be0b(8): lea 0xab(%rsp),%rdx
be13(3): mov %rbx,%r12
be16(4): lea 0x2(%rdx),%rax
be1a(8): lea 0xb0(%rsp),%r9
be22(3): mov %sil,(%rax)
be25(4): mov $0x0,0x1(%rax)
be29(3): mov %r13,%rcx
be2c(5): mov $0x400,%esi
be31(5): mov %r10d,0x38(%rsp)
be36(3): mov %r9,%rdi
be39(5): mov %r8b,0x50(%rsp)
be3e(5): mov %r11d,0x48(%rsp)
be43(5): mov %r9,0x40(%rsp)
be48(5): call 0xffff6c18(%rip)
be4d(3): test %rax,%rax
be50(6): jz 0xfffffd12(%rip)
be56(5): movsxd 0x38(%rsp),%r10
be5b(4): lea 0xffffffff(%rax),%rcx
be5f(5): mov 0x8(%rsp),%rdx
be64(5): mov $0x0,%eax
be69(3): test %r10d,%r10d
be6c(4): cmovns %r10,%rax
be70(3): cmp %rax,%rcx
be73(3): mov %rax,%rbx
be76(4): cmovnb %rcx,%rbx
be7a(3): sub %r14,%rdx
be7d(3): cmp %rbx,%rdx
be80(6): jbe 0xfffffc7c(%rip)
be86(3): test %rbp,%rbp
be89(6): jz 0xa5(%rip)
be8f(5): mov 0x48(%rsp),%r11d
be94(5): mov 0x40(%rsp),%r9
be99(6): movzx 0x50(%rsp),%r8d
be9f(3): test %r11d,%r11d
bea2(2): jnz 0x5c(%rip)
bea4(3): cmp %rax,%rcx
bea7(2): jnb 0x57(%rip)
bea9(3): movsxd %r10d,%rdx
beac(5): mov %r9,0x50(%rsp)
beb1(5): mov %rcx,0x48(%rsp)
beb6(3): sub %rcx,%rdx
beb9(4): cmp $0x30,%r15d
bebd(5): mov %r8b,0x40(%rsp)
bec2(5): lea 0x0(%rbp,%rdx,1),%rax
bec7(5): mov %rax,0x38(%rsp)
becc(6): jz 0x1073(%rip)
bed2(4): cmp $0x2b,%r15d
bed6(6): jz 0x1069(%rip)
bedc(3): mov %rbp,%rdi
bedf(5): mov $0x20,%esi
bee4(5): call 0xffff6a0c(%rip)
bee9(6): movzx 0x40(%rsp),%r8d
beef(5): mov 0x38(%rsp),%rbp
bef4(5): mov 0x50(%rsp),%r9
bef9(5): mov 0x48(%rsp),%rcx
befe(3): test %r8b,%r8b
bf01(4): lea 0x1(%r9),%rsi
bf05(3): mov %rcx,%rdx
bf08(6): jnz 0x1020(%rip)
bf0e(5): cmp $0x0,0x30(%rsp)
bf13(3): mov %rbp,%rdi
bf16(5): mov %rcx,0x30(%rsp)
bf1b(6): jz 0x876(%rip)
bf21(5): call 0xfffffabf(%rip)
bf26(5): mov 0x30(%rsp),%rcx
bf2b(3): add %rcx,%rbp
bf2e(3): add %rbx,%r14
bf31(5): jmp 0xfffffc31(%rip)
bf36(3): test %r11d,%r11d
bf39(6): jnz 0xfffffd47(%rip)
bf3f(5): movzx 0x30(%rsp),%eax
bf44(3): test %r8b,%r8b
bf47(8): lea 0xab(%rsp),%rdx
bf4f(3): mov %rbx,%r12
bf52(4): cmovne %r8d,%eax
bf56(3): xor %r8d,%r8d
bf59(3): xor %r11d,%r11d
bf5c(4): mov %al,0x30(%rsp)
bf60(5): mov $0x2520,%eax
bf65(8): mov %ax,0xab(%rsp)
bf6d(4): lea 0x2(%rdx),%rax
bf71(5): jmp 0xfffffea9(%rip)
bf76(4): cmp $0x45,%r11d
bf7a(6): jz 0xfffffd06(%rip)
bf80(4): mov 0x0(%r13),%ecx
bf84(5): mov $0x2,%edi
bf89(7): nop 0x0(%rax)
bf90(2): mov %ecx,%eax
bf92(2): xor %esi,%esi
bf94(5): mov $0x0,0x40(%rsp)
bf99(3): shr $0x1f,%eax
bf9c(4): mov %eax,0x38(%rsp)
bfa0(2): mov %ecx,%eax
bfa2(2): not %eax
bfa4(3): shr $0x1f,%eax
bfa7(4): cmp $0x4f,%r11d
bfab(6): jnz 0xe85(%rip)
bfb1(2): test %al,%al
bfb3(6): jz 0xe7d(%rip)
bfb9(3): mov %r9d,%esi
bfbc(5): mov $0x2520,%edx
bfc1(3): xor %r8d,%r8d
bfc4(8): mov %dx,0xab(%rsp)
bfcc(8): lea 0xab(%rsp),%rdx
bfd4(8): mov %r11b,0xad(%rsp)
bfdc(3): mov %rbx,%r12
bfdf(3): mov %edi,%r11d
bfe2(4): lea 0x3(%rdx),%rax
bfe6(5): jmp 0xfffffe34(%rip)
bfeb(3): test %r10d,%r10d
bfee(5): mov $0x0,%ecx
bff3(5): mov $0x1,%eax
bff8(4): cmovns %r10d,%ecx
bffc(3): movsxd %ecx,%rcx
bfff(3): test %rcx,%rcx
c002(4): cmove %rax,%rcx
c006(5): mov 0x8(%rsp),%rax
c00b(3): sub %r14,%rax
c00e(3): cmp %rcx,%rax
c011(6): jbe 0xfffffaeb(%rip)
c017(3): test %rbp,%rbp
c01a(2): jz 0x4e(%rip)
c01c(4): cmp $0x1,%r10d
c020(2): jle 0x3c(%rip)
c022(3): movsxd %r10d,%rdx
c025(5): mov %rcx,0x30(%rsp)
c02a(4): sub $0x1,%rdx
c02e(4): cmp $0x30,%r15d
c032(5): lea 0x0(%rbp,%rdx,1),%r12
c037(6): jz 0x131d(%rip)
c03d(4): cmp $0x2b,%r15d
c041(6): jz 0x1313(%rip)
c047(3): mov %rbp,%rdi
c04a(5): mov $0x20,%esi
c04f(3): mov %r12,%rbp
c052(5): call 0xffff689e(%rip)
c057(5): mov 0x30(%rsp),%rcx
c05c(4): mov $0x9,0x0(%rbp)
c060(4): add $0x1,%rbp
c064(4): nop 0x0(%rax)
c068(3): add %rcx,%r14
c06b(3): mov %rbx,%r12
c06e(5): jmp 0xfffffaf4(%rip)
c073(5): mov $0x1,%eax
c078(3): test %r8b,%r8b
c07b(6): jnz 0xf30(%rip)
c081(3): mov %eax,%r8d
c084(5): mov $0x70,%esi
c089(5): jmp 0xfffffd6c(%rip)
c08e(7): lea 0x5d17(%rip),%rax
c095(8): mov $0xffffffff,0x38(%rsp)
c09d(5): mov %rax,0x40(%rsp)
c0a2(6): movzx 0x30(%rsp),%r8d
c0a8(7): mov 0x518(%rsp),%eax
c0af(7): mov $0xffffffff,%rsi
c0b6(5): mov %r10d,0x48(%rsp)
c0bb(2): xor %edi,%edi
c0bd(3): mov %r15d,%r9d
c0c0(3): mov %r13,%rcx
c0c3(5): mov %r8d,0x30(%rsp)
c0c8(1): push %rax
c0c9(4): push 0x18(%rsp)
c0cd(4): push 0x28(%rsp)
c0d1(4): mov 0x50(%rsp),%eax
c0d5(1): push %rax
c0d6(5): mov 0x60(%rsp),%rdx
c0db(5): call 0xfffff955(%rip)
c0e0(4): add $0x20,%rsp
c0e4(5): movsxd 0x48(%rsp),%r10
c0e9(3): mov %rax,%r11
c0ec(5): mov 0x8(%rsp),%rsi
c0f1(5): mov $0x0,%eax
c0f6(3): test %r10d,%r10d
c0f9(4): cmovns %r10,%rax
c0fd(3): cmp %rax,%r11
c100(3): mov %rax,%r12
c103(4): cmovnb %r11,%r12
c107(3): sub %r14,%rsi
c10a(3): cmp %r12,%rsi
c10d(5): mov %rsi,0x48(%rsp)
c112(6): jbe 0xfffff9ea(%rip)
c118(3): test %rbp,%rbp
c11b(6): jz 0xfffffa41(%rip)
c121(3): cmp %rax,%r11
c124(2): jnb 0x42(%rip)
c126(3): movsxd %r10d,%rdx
c129(5): mov %r11,0x58(%rsp)
c12e(3): sub %r11,%rdx
c131(4): cmp $0x30,%r15d
c135(5): lea 0x0(%rbp,%rdx,1),%rax
c13a(5): mov %rax,0x50(%rsp)
c13f(6): jz 0x10fd(%rip)
c145(4): cmp $0x2b,%r15d
c149(6): jz 0x10f3(%rip)
c14f(3): mov %rbp,%rdi
c152(5): mov $0x20,%esi
c157(5): call 0xffff6799(%rip)
c15c(5): mov 0x50(%rsp),%rbp
c161(5): mov 0x58(%rsp),%r11
c166(7): mov 0x518(%rsp),%eax
c16d(5): mov %r11,0x50(%rsp)
c172(3): mov %rbp,%rdi
c175(3): mov %r15d,%r9d
c178(3): mov %r13,%rcx
c17b(1): push %rax
c17c(4): push 0x18(%rsp)
c180(4): push 0x28(%rsp)
c184(4): mov 0x50(%rsp),%eax
c188(1): push %rax
c189(5): mov 0x50(%rsp),%r8d
c18e(5): mov 0x60(%rsp),%rdx
c193(5): mov 0x68(%rsp),%rsi
c198(5): call 0xfffff898(%rip)
c19d(5): mov 0x70(%rsp),%r11
c1a2(4): add $0x20,%rsp
c1a6(3): add %r11,%rbp
c1a9(5): jmp 0xfffff9b3(%rip)
c1ae(5): mov 0x8(%rsp),%rdx
c1b3(5): mov $0x0,%eax
c1b8(5): mov $0x1,%ecx
c1bd(3): sub %r14,%rdx
c1c0(3): test %r10d,%r10d
c1c3(4): cmovns %r10d,%eax
c1c7(2): cwde 
c1c9(3): test %rax,%rax
c1cc(4): cmovne %rax,%rcx
c1d0(3): test %r11d,%r11d
c1d3(6): jnz 0x1035(%rip)
c1d9(3): cmp %rdx,%rcx
c1dc(6): jnb 0xfffff920(%rip)
c1e2(3): test %rbp,%rbp
c1e5(6): jz 0xfffffe83(%rip)
c1eb(4): cmp $0x1,%r10d
c1ef(2): jle 0x3f(%rip)
c1f1(3): movsxd %r10d,%rdx
c1f4(5): mov %rcx,0x30(%rsp)
c1f9(4): sub $0x1,%rdx
c1fd(4): cmp $0x30,%r15d
c201(5): lea 0x0(%rbp,%rdx,1),%r12
c206(6): jz 0x126f(%rip)
c20c(4): cmp $0x2b,%r15d
c210(5): mov $0x20,%esi
c215(6): jz 0x1260(%rip)
c21b(3): mov %rbp,%rdi
c21e(3): mov %r12,%rbp
c221(5): call 0xffff66cf(%rip)
c226(3): movzx (%rbx),%esi
c229(5): mov 0x30(%rsp),%rcx
c22e(4): mov %sil,0x0(%rbp)
c232(4): add $0x1,%rbp
c236(5): jmp 0xfffffe32(%rip)
c23b(7): lea 0x3f03(%rip),%rax
c242(8): mov $0xffffffff,0x38(%rsp)
c24a(5): mov %rax,0x40(%rsp)
c24f(5): jmp 0xfffffe53(%rip)
c254(4): cmp $0x45,%r11d
c258(6): jz 0xfffffa28(%rip)
c25e(4): mov 0x1c(%r13),%esi
c262(4): sub 0x18(%r13),%esi
c266(5): mov $0x92492493,%edx
c26b(3): add $0x7,%esi
c26e(2): mov %esi,%eax
c270(2): imul %eax,%edx,%edx
c272(3): lea 0x0(%rdx,%rsi,1),%ecx
c275(3): sar $0x1f,%esi
c278(5): mov $0x2,%edi
c27d(3): sar $0x2,%ecx
c280(2): sub %esi,%ecx
c282(5): jmp 0xfffffd0e(%rip)
c287(4): cmp $0x45,%r11d
c28b(6): jz 0xd2f(%rip)
c291(4): cmp $0x4f,%r11d
c295(6): jz 0xfffff9eb(%rip)
c29b(4): mov 0x14(%r13),%eax
c29f(5): cmp $0xfffff894,%eax
c2a4(6): lea 0x76c(%rax),%ecx
c2aa(5): setl 0x38(%rsp)
c2af(5): cmp $0xfffff894,%eax
c2b4(3): setnl %al
c2b7(3): test %r15d,%r15d
c2ba(6): jnz 0xe7f(%rip)
c2c0(5): mov 0x2c(%rsp),%r15d
c2c5(4): cmp $0x2b,%r15d
c2c9(6): jz 0xe7a(%rip)
c2cf(5): mov $0x0,0x40(%rsp)
c2d4(5): mov $0x4,%edi
c2d9(2): xor %esi,%esi
c2db(5): jmp 0xfffffccc(%rip)
c2e0(5): movzx 0x30(%rsp),%esi
c2e5(5): mov 0x20(%rsp),%rdi
c2ea(3): test %r8b,%r8b
c2ed(5): mov $0x0,%eax
c2f2(5): mov %r10d,0x38(%rsp)
c2f7(5): mov %r8b,0x40(%rsp)
c2fc(3): cmovne %eax,%esi
c2ff(5): mov %sil,0x30(%rsp)
c304(5): call 0xffff650c(%rip)
c309(5): movsxd 0x38(%rsp),%r10
c30e(3): mov %rax,%r12
c311(5): mov 0x8(%rsp),%rdx
c316(5): mov $0x0,%eax
c31b(3): test %r10d,%r10d
c31e(4): cmovns %r10,%rax
c322(3): cmp %rax,%r12
c325(3): mov %rax,%rcx
c328(4): cmovnb %r12,%rcx
c32c(3): sub %r14,%rdx
c32f(3): cmp %rcx,%rdx
c332(6): jbe 0xfffff7ca(%rip)
c338(3): test %rbp,%rbp
c33b(6): jz 0xfffffd2d(%rip)
c341(3): cmp %rax,%r12
c344(6): movzx 0x40(%rsp),%r8d
c34a(2): jnb 0x4d(%rip)
c34c(3): movsxd %r10d,%rdx
c34f(5): mov %rcx,0x48(%rsp)
c354(5): mov %r8b,0x40(%rsp)
c359(3): sub %r12,%rdx
c35c(4): cmp $0x30,%r15d
c360(5): lea 0x0(%rbp,%rdx,1),%rax
c365(5): mov %rax,0x38(%rsp)
c36a(6): jz 0x10c5(%rip)
c370(4): cmp $0x2b,%r15d
c374(6): jz 0x10bb(%rip)
c37a(3): mov %rbp,%rdi
c37d(5): mov $0x20,%esi
c382(5): call 0xffff656e(%rip)
c387(6): movzx 0x40(%rsp),%r8d
c38d(5): mov 0x38(%rsp),%rbp
c392(5): mov 0x48(%rsp),%rcx
c397(3): test %r8b,%r8b
c39a(6): jnz 0xffd(%rip)
c3a0(5): cmp $0x0,0x30(%rsp)
c3a5(3): mov %r12,%rdx
c3a8(5): mov %rcx,0x30(%rsp)
c3ad(5): mov 0x20(%rsp),%rsi
c3b2(3): mov %rbp,%rdi
c3b5(6): jz 0xfd3(%rip)
c3bb(5): call 0xfffff625(%rip)
c3c0(5): mov 0x30(%rsp),%rcx
c3c5(3): add %r12,%rbp
c3c8(5): jmp 0xfffffca0(%rip)
c3cd(4): cmp $0x45,%r11d
c3d1(6): jz 0xbe9(%rip)
c3d7(4): mov 0x14(%r13),%esi
c3db(5): mov $0x51eb851f,%edx
c3e0(2): mov %esi,%eax
c3e2(2): imul %eax,%edx,%edx
c3e4(2): mov %esi,%eax
c3e6(3): sar $0x1f,%eax
c3e9(2): mov %edx,%ecx
c3eb(3): sar $0x5,%ecx
c3ee(2): sub %eax,%ecx
c3f0(2): mov %esi,%eax
c3f2(3): imul %ecx,$0x64,%ecx
c3f5(2): sub %ecx,%eax
c3f7(2): mov %eax,%ecx
c3f9(2): jns 0x10(%rip)
c3fb(2): neg %eax
c3fd(3): add $0x64,%ecx
c400(6): cmp $0xfffff893,%esi
c406(3): cmovng %eax,%ecx
c409(3): test %r15d,%r15d
c40c(6): jz 0x62e(%rip)
c412(5): mov $0x1,%eax
c417(5): mov $0x0,0x38(%rsp)
c41c(4): cmp $0x2b,%r15d
c420(6): jz 0x773(%rip)
c426(5): mov $0x0,0x40(%rsp)
c42b(5): mov $0x2,%edi
c430(2): xor %esi,%esi
c432(5): jmp 0xfffffb75(%rip)
c437(5): movzx 0x30(%rsp),%eax
c43c(3): test %r8b,%r8b
c43f(4): cmovne %r8d,%eax
c443(4): cmp $0x45,%r11d
c447(6): jz 0xf6f(%rip)
c44d(3): mov %r9d,%esi
c450(4): mov %al,0x30(%rsp)
c454(3): xor %r8d,%r8d
c457(5): jmp 0xfffff99e(%rip)
c45c(3): xor %r8d,%r8d
c45f(4): mov 0x20(%r13),%ecx
c463(2): test %ecx,%ecx
c465(6): js 0xca9(%rip)
c46b(4): mov 0x28(%r13),%rcx
c46f(5): mov $0x1,0x38(%rsp)
c474(2): test %ecx,%ecx
c476(2): js 0x16(%rip)
c478(5): mov $0x0,0x38(%rsp)
c47d(2): jnz 0xf(%rip)
c47f(5): mov 0x20(%rsp),%rax
c484(3): cmp $0x2d,(%rax)
c487(5): setz 0x38(%rsp)
c48c(2): mov %ecx,%eax
c48e(5): mov $0x91a2b3c5,%edx
c493(5): mov $0x88888889,%esi
c498(2): imul %eax,%edx,%edx
c49a(2): mov %ecx,%eax
c49c(3): sar $0x1f,%eax
c49f(4): mov %eax,0x40(%rsp)
c4a3(4): lea 0x0(%rdx,%rcx,1),%r12d
c4a7(4): sar $0xb,%r12d
c4ab(3): sub %eax,%r12d
c4ae(2): mov %ecx,%eax
c4b0(2): imul %eax,%esi,%edx
c4b2(3): lea 0x0(%rdx,%rcx,1),%edi
c4b5(3): sar $0x5,%edi
c4b8(4): sub 0x40(%rsp),%edi
c4bc(2): mov %edi,%eax
c4be(2): imul %eax,%esi,%edx
c4c0(2): mov %edi,%eax
c4c2(3): sar $0x1f,%eax
c4c5(3): lea 0x0(%rdx,%rdi,1),%esi
c4c8(3): sar $0x5,%esi
c4cb(2): sub %eax,%esi
c4cd(2): mov %edi,%eax
c4cf(3): imul %esi,$0x3c,%esi
c4d2(3): imul %edi,$0x3c,%edi
c4d5(2): sub %esi,%eax
c4d7(2): sub %edi,%ecx
c4d9(4): cmp $0x1,%r8
c4dd(2): mov %eax,%esi
c4df(6): jz 0xe53(%rip)
c4e5(6): jb 0xf2b(%rip)
c4eb(4): cmp $0x2,%r8
c4ef(6): jz 0xdf6(%rip)
c4f5(4): cmp $0x3,%r8
c4f9(6): jnz 0xec6(%rip)
c4ff(2): test %ecx,%ecx
c501(6): jnz 0xde4(%rip)
c507(2): test %eax,%eax
c509(6): jnz 0xe29(%rip)
c50f(5): movzx 0x38(%rsp),%eax
c514(3): mov %r12d,%ecx
c517(5): mov $0x1,0x40(%rsp)
c51c(5): mov $0x3,%edi
c521(3): xor $0x1,%eax
c524(5): jmp 0xfffffa83(%rip)
c529(7): nop 0x0(%rax)
c530(4): cmp $0x4f,%r11d
c534(4): mov 0x10(%r13),%eax
c538(5): mov $0x1,%edi
c53d(6): jz 0xfffffa7f(%rip)
c543(3): lea 0x0(%rax,%rax,4),%edx
c546(5): mov $0x0,0x40(%rsp)
c54b(5): mov $0x0,0x38(%rsp)
c550(2): xor %esi,%esi
c552(3): lea 0x0(%rax,%rdx,2),%ecx
c555(3): sar $0x5,%ecx
c558(3): add $0x1,%ecx
c55b(5): nop 0x0(%rax,%rax,1)
c560(8): lea 0xb0(%rsp),%r9
c568(6): mov $0xcccccccd,%r12d
c56e(4): lea 0x17(%r9),%r11
c572(6): nop 0x0(%rax,%rax,1)
c578(4): test $0x1,%sil
c57c(4): lea 0xffffffff(%r11),%r8
c580(2): jz 0x11(%rip)
c582(4): lea 0xfffffffe(%r11),%rax
c586(5): mov $0x3a,0xffffffff(%r11)
c58b(3): mov %r8,%r11
c58e(3): mov %rax,%r8
c591(2): mov %ecx,%eax
c593(2): sar $0x1,%esi
c595(3): mul %eax,%r12d,%edx
c598(3): shr $0x3,%edx
c59b(3): lea 0x0(%rdx,%rdx,4),%eax
c59e(2): add %eax,%eax
c5a0(2): sub %eax,%ecx
c5a2(2): mov %esi,%eax
c5a4(3): add $0x30,%ecx
c5a7(2): or %edx,%eax
c5a9(4): mov %cl,0xffffffff(%r11)
c5ad(2): mov %edx,%ecx
c5af(3): mov %r8,%r11
c5b2(2): jnz 0xffffffc6(%rip)
c5b4(3): cmp %edi,%r10d
c5b7(4): cmovnl %r10d,%edi
c5bb(5): cmp $0x0,0x38(%rsp)
c5c0(4): mov %edi,0x48(%rsp)
c5c4(6): jnz 0x884(%rip)
c5ca(5): cmp $0x0,0x40(%rsp)
c5cf(6): jz 0x29a(%rip)
c5d5(4): cmp $0x2d,%r15d
c5d9(6): jz 0xb2a(%rip)
c5df(5): mov $0x2b,0x38(%rsp)
c5e4(4): mov 0x48(%rsp),%eax
c5e8(4): lea 0x17(%r9),%rcx
c5ec(5): mov 0x8(%rsp),%rdx
c5f1(3): sub %r8,%rcx
c5f4(4): lea 0xffffffff(%rax),%r12d
c5f8(3): sub %r14,%rdx
c5fb(3): sub %ecx,%r12d
c5fe(3): test %r12d,%r12d
c601(6): jle 0xa4b(%rip)
c607(4): cmp $0x5f,%r15d
c60b(6): jz 0x9bb(%rip)
c611(5): movsxd 0x48(%rsp),%rax
c616(3): cmp %rdx,%rax
c619(3): mov %rax,%rdi
c61c(6): jnb 0xfffff4e0(%rip)
c622(3): test %r10d,%r10d
c625(5): mov $0x0,%eax
c62a(5): mov $0x1,%esi
c62f(4): cmovns %r10d,%eax
c633(2): cwde 
c635(3): test %rax,%rax
c638(4): cmovne %rax,%rsi
c63c(3): cmp %rdx,%rsi
c63f(6): jnb 0xfffff4bd(%rip)
c645(3): add %rsi,%r14
c648(3): test %rbp,%rbp
c64b(3): movsxd %r12d,%r9
c64e(3): mov %rbx,%r12
c651(6): jz 0xa3(%rip)
c657(2): test %edi,%edi
c659(2): jnz 0x56(%rip)
c65b(4): cmp $0x1,%rax
c65f(2): jbe 0x50(%rip)
c661(3): movsxd %r10d,%rdx
c664(5): mov %r8,0x58(%rsp)
c669(5): mov %r9,0x50(%rsp)
c66e(4): sub $0x1,%rdx
c672(4): cmp $0x30,%r15d
c676(5): mov %rcx,0x40(%rsp)
c67b(5): lea 0x0(%rbp,%rdx,1),%r12
c680(6): jz 0xdd1(%rip)
c686(4): cmp $0x2b,%r15d
c68a(6): jz 0xdc7(%rip)
c690(3): mov %rbp,%rdi
c693(5): mov $0x20,%esi
c698(3): mov %r12,%rbp
c69b(5): call 0xffff6255(%rip)
c6a0(5): mov 0x58(%rsp),%r8
c6a5(5): mov 0x50(%rsp),%r9
c6aa(5): mov 0x40(%rsp),%rcx
c6af(5): movzx 0x38(%rsp),%eax
c6b4(4): add $0x1,%rbp
c6b8(3): mov %rbx,%r12
c6bb(3): mov %al,0xffffffff(%rbp)
c6be(3): test %rbp,%rbp
c6c1(2): jz 0x33(%rip)
c6c3(3): mov %r9,%rdx
c6c6(3): mov %rbp,%rdi
c6c9(5): mov $0x30,%esi
c6ce(5): mov %r8,0x50(%rsp)
c6d3(5): mov %rcx,0x40(%rsp)
c6d8(5): mov %r9,0x38(%rsp)
c6dd(5): call 0xffff6213(%rip)
c6e2(5): mov 0x38(%rsp),%r9
c6e7(5): mov 0x50(%rsp),%r8
c6ec(5): mov 0x40(%rsp),%rcx
c6f1(3): add %r9,%rbp
c6f4(5): mov 0x8(%rsp),%rdx
c6f9(3): add %r9,%r14
c6fc(3): xor %r11d,%r11d
c6ff(3): xor %r10d,%r10d
c702(3): sub %r14,%rdx
c705(3): cmp %r11,%rcx
c708(3): mov %r11,%rbx
c70b(4): cmovnb %rcx,%rbx
c70f(3): cmp %rdx,%rbx
c712(6): jnb 0xfffff3ea(%rip)
c718(3): test %rbp,%rbp
c71b(6): jz 0xfffff813(%rip)
c721(4): mov 0x48(%rsp),%esi
c725(2): test %esi,%esi
c727(2): jnz 0x51(%rip)
c729(3): cmp %r11,%rcx
c72c(2): jnb 0x4c(%rip)
c72e(3): movsxd %r10d,%rdx
c731(5): mov %r8,0x48(%rsp)
c736(5): mov %rcx,0x40(%rsp)
c73b(3): sub %rcx,%rdx
c73e(4): cmp $0x30,%r15d
c742(5): lea 0x0(%rbp,%rdx,1),%rax
c747(5): mov %rax,0x38(%rsp)
c74c(6): jz 0x83e(%rip)
c752(4): cmp $0x2b,%r15d
c756(6): jz 0x834(%rip)
c75c(3): mov %rbp,%rdi
c75f(5): mov $0x20,%esi
c764(5): call 0xffff618c(%rip)
c769(5): mov 0x38(%rsp),%rbp
c76e(5): mov 0x48(%rsp),%r8
c773(5): mov 0x40(%rsp),%rcx
c778(5): cmp $0x0,0x30(%rsp)
c77d(3): mov %rcx,%rdx
c780(5): mov %rcx,0x30(%rsp)
c785(3): mov %r8,%rsi
c788(3): mov %rbp,%rdi
c78b(6): jnz 0xfffff796(%rip)
c791(5): call 0xffff61df(%rip)
c796(5): mov 0x30(%rsp),%rcx
c79b(5): jmp 0xfffff790(%rip)
c7a0(6): movdqu 0x0(%r13),%xmm0
c7a6(5): lea 0x70(%rsp),%rsi
c7ab(4): mov 0x30(%r13),%rax
c7af(5): mov 0x10(%rsp),%rdi
c7b4(5): movaps %xmm0,0x70(%rsp)
c7b9(5): mov %r10d,0x38(%rsp)
c7be(6): movdqu 0x10(%r13),%xmm0
c7c4(8): mov %rax,0xa0(%rsp)
c7cc(8): movaps %xmm0,0x80(%rsp)
c7d4(6): movdqu 0x20(%r13),%xmm0
c7da(8): movaps %xmm0,0x90(%rsp)
c7e2(5): call 0xffffee3e(%rip)
c7e7(8): lea 0xb0(%rsp),%r9
c7ef(3): mov %rax,%rsi
c7f2(3): mov %rax,%rcx
c7f5(a): mov $0x7378697629483820647,%r11
c7ff(5): mov $0x30,%edi
c804(5): mov 0x38(%rsp),%r10d
c809(4): lea 0x17(%r9),%r8
c80d(3): nop (%rax)
c810(3): mov %rcx,%rax
c813(3): imul %rax,%r11,%rdx
c816(3): mov %rcx,%rax
c819(4): sar $0x3f,%rax
c81d(4): sar $0x2,%rdx
c821(3): sub %rax,%rdx
c824(3): mov %rdx,%rax
c827(4): lea 0x0(%rdx,%rdx,4),%rdx
c82b(3): add %rdx,%rdx
c82e(3): sub %rdx,%rcx
c831(3): mov %rcx,%rdx
c834(3): mov %rax,%rcx
c837(2): mov %edi,%eax
c839(2): sub %edx,%eax
c83b(3): add $0x30,%edx
c83e(3): test %rsi,%rsi
c841(3): cmovs %eax,%edx
c844(4): sub $0x1,%r8
c848(3): test %rcx,%rcx
c84b(3): mov %dl,(%r8)
c84e(2): jnz 0xffffffc2(%rip)
c850(3): test %r10d,%r10d
c853(5): mov $0x1,%edi
c858(4): cmovnl %r10d,%edi
c85c(3): test %rsi,%rsi
c85f(4): mov %edi,0x48(%rsp)
c863(6): js 0x5e5(%rip)
c869(5): mov 0x8(%rsp),%rdx
c86e(4): lea 0x17(%r9),%rcx
c872(3): sub %r8,%rcx
c875(3): sub %r14,%rdx
c878(4): cmp $0x2d,%r15d
c87c(2): jz 0x13(%rip)
c87e(5): mov 0x48(%rsp),%r12d
c883(3): sub %ecx,%r12d
c886(3): test %r12d,%r12d
c889(6): jnle 0x990(%rip)
c88f(3): test %r10d,%r10d
c892(6): mov $0x0,%r11d
c898(3): mov %rbx,%r12
c89b(4): cmovns %r10d,%r11d
c89f(3): movsxd %r11d,%r11
c8a2(5): jmp 0xfffffe63(%rip)
c8a7(4): movzx 0x1(%rbx),%eax
c8ab(4): lea 0x1(%rbx),%rdx
c8af(2): cmp $0x3a,%al
c8b1(6): jz 0xb19(%rip)
c8b7(6): mov $0x1,%r8d
c8bd(2): cmp $0x7a,%al
c8bf(6): jnz 0xfffff3c1(%rip)
c8c5(3): mov %rdx,%rbx
c8c8(5): jmp 0xfffffb97(%rip)
c8cd(4): cmp $0x45,%r11d
c8d1(6): jz 0xfffff3af(%rip)
c8d7(4): mov 0x14(%r13),%edi
c8db(4): mov 0x1c(%r13),%r8d
c8df(5): mov $0x92492493,%edx
c8e4(2): mov %edi,%eax
c8e6(3): mov %r8d,%ecx
c8e9(3): sar $0x1f,%eax
c8ec(5): and $0x190,%eax
c8f1(5): lea 0xffffff9c(%rdi,%rax,1),%r12d
c8f6(4): mov 0x18(%r13),%eax
c8fa(2): sub %eax,%ecx
c8fc(4): mov %eax,0x38(%rsp)
c900(6): add $0x17e,%ecx
c906(2): mov %ecx,%eax
c908(2): imul %eax,%edx,%edx
c90a(3): lea 0x0(%rdx,%rcx,1),%eax
c90d(2): mov %ecx,%edx
c90f(3): sar $0x1f,%edx
c912(3): sar $0x2,%eax
c915(2): sub %edx,%eax
c917(7): lea 0x0(,%rax,8),%edx
c91e(2): sub %eax,%edx
c920(2): mov %edx,%eax
c922(3): mov %r8d,%edx
c925(2): sub %ecx,%edx
c927(4): lea 0x3(%rdx,%rax,1),%eax
c92b(2): test %eax,%eax
c92d(4): mov %eax,0x40(%rsp)
c931(6): js 0x927(%rip)
c937(4): test $0x3,%r12b
c93b(5): mov $0x16d,%eax
c940(2): jnz 0x47(%rip)
c942(5): mov $0x51eb851f,%ecx
c947(3): mov %r12d,%eax
c94a(2): imul %eax,%ecx,%edx
c94c(3): mov %r12d,%eax
c94f(3): sar $0x1f,%eax
c952(4): mov %eax,0x48(%rsp)
c956(2): mov %edx,%ecx
c958(3): sar $0x5,%edx
c95b(2): sub %eax,%edx
c95d(5): mov $0x16e,%eax
c962(3): imul %edx,$0x64,%edx
c965(3): cmp %edx,%r12d
c968(2): jnz 0x1f(%rip)
c96a(3): sar $0x7,%ecx
c96d(2): mov %ecx,%eax
c96f(4): sub 0x48(%rsp),%eax
c973(6): imul %eax,$0x190,%eax
c979(3): cmp %eax,%r12d
c97c(3): setz %al
c97f(3): movzx %al,%eax
c982(5): add $0x16d,%eax
c987(3): sub %eax,%r8d
c98a(5): mov $0x92492493,%edx
c98f(3): mov %r8d,%ecx
c992(4): sub 0x38(%rsp),%ecx
c996(6): add $0x17e,%ecx
c99c(2): mov %ecx,%eax
c99e(3): sub %ecx,%r8d
c9a1(2): imul %eax,%edx,%edx
c9a3(3): lea 0x0(%rdx,%rcx,1),%eax
c9a6(2): mov %ecx,%edx
c9a8(3): sar $0x1f,%edx
c9ab(3): sar $0x2,%eax
c9ae(2): sub %edx,%eax
c9b0(7): lea 0x0(,%rax,8),%edx
c9b7(2): sub %eax,%edx
c9b9(5): lea 0x3(%r8,%rdx,1),%ecx
c9be(6): mov $0x1,%r8d
c9c4(2): test %ecx,%ecx
c9c6(2): jns 0x9(%rip)
c9c8(4): mov 0x40(%rsp),%ecx
c9cc(3): xor %r8d,%r8d
c9cf(4): cmp $0x47,%sil
c9d3(6): jz 0x743(%rip)
c9d9(4): cmp $0x67,%sil
c9dd(6): jnz 0x932(%rip)
c9e3(5): mov $0x51eb851f,%ecx
c9e8(2): mov %edi,%eax
c9ea(2): mov %edi,%esi
c9ec(2): imul %eax,%ecx,%edx
c9ee(2): mov %edx,%eax
c9f0(2): mov %edi,%edx
c9f2(3): sar $0x1f,%edx
c9f5(3): sar $0x5,%eax
c9f8(2): sub %edx,%eax
c9fa(3): imul %eax,$0x64,%eax
c9fd(2): sub %eax,%esi
c9ff(3): add %r8d,%esi
ca02(2): mov %esi,%eax
ca04(2): imul %eax,%ecx,%edx
ca06(2): mov %esi,%eax
ca08(3): sar $0x1f,%eax
ca0b(2): mov %edx,%ecx
ca0d(3): sar $0x5,%ecx
ca10(2): sub %eax,%ecx
ca12(3): imul %ecx,$0x64,%ecx
ca15(2): sub %ecx,%esi
ca17(2): mov %esi,%ecx
ca19(6): jns 0xfffff9f0(%rip)
ca1f(5): mov $0xfffff894,%eax
ca24(3): sub %r8d,%eax
ca27(2): cmp %eax,%edi
ca29(6): jnl 0xaa1(%rip)
ca2f(2): neg %ecx
ca31(3): test %r15d,%r15d
ca34(6): jnz 0xfffff9de(%rip)
ca3a(5): mov 0x2c(%rsp),%r15d
ca3f(5): mov $0x1,%eax
ca44(4): cmp $0x2b,%r15d
ca48(6): jz 0xa62(%rip)
ca4e(5): mov $0x0,0x40(%rsp)
ca53(5): mov $0x0,0x38(%rsp)
ca58(5): mov $0x2,%edi
ca5d(2): xor %esi,%esi
ca5f(5): jmp 0xfffff548(%rip)
ca64(4): cmp $0x45,%r11d
ca68(6): jz 0xfffff218(%rip)
ca6e(4): mov 0xc(%r13),%ecx
ca72(5): mov $0x2,%edi
ca77(5): jmp 0xfffff519(%rip)
ca7c(4): mov 0x18(%r13),%eax
ca80(5): mov $0x92492493,%edx
ca85(5): mov $0x1,%edi
ca8a(3): lea 0x6(%rax),%ecx
ca8d(2): mov %ecx,%eax
ca8f(2): imul %eax,%edx,%edx
ca91(3): lea 0x0(%rdx,%rcx,1),%eax
ca94(2): mov %ecx,%edx
ca96(3): sar $0x1f,%edx
ca99(3): sar $0x2,%eax
ca9c(2): sub %edx,%eax
ca9e(7): lea 0x0(,%rax,8),%edx
caa5(2): sub %eax,%edx
caa7(2): sub %edx,%ecx
caa9(3): add $0x1,%ecx
caac(5): jmp 0xfffff4e4(%rip)
cab1(4): cmp $0x45,%r11d
cab5(6): jz 0xfffff1cb(%rip)
cabb(4): mov 0x18(%r13),%ecx
cabf(5): mov $0x1,%edi
cac4(5): jmp 0xfffff4cc(%rip)
cac9(4): cmp $0x45,%r11d
cacd(6): jz 0xfffff1b3(%rip)
cad3(4): mov 0x18(%r13),%eax
cad7(5): mov $0x92492493,%ecx
cadc(3): lea 0x6(%rax),%esi
cadf(2): mov %esi,%eax
cae1(2): imul %eax,%ecx,%edx
cae3(3): lea 0x0(%rdx,%rsi,1),%eax
cae6(2): mov %esi,%edx
cae8(3): sar $0x1f,%edx
caeb(3): sar $0x2,%eax
caee(2): sub %edx,%eax
caf0(7): lea 0x0(,%rax,8),%edx
caf7(2): sub %eax,%edx
caf9(2): mov %edx,%eax
cafb(4): mov 0x1c(%r13),%edx
caff(2): sub %esi,%eax
cb01(4): lea 0x7(%rax,%rdx,1),%esi
cb05(2): mov %esi,%eax
cb07(2): imul %eax,%ecx,%edx
cb09(5): jmp 0xfffff769(%rip)
cb0e(4): cmp $0x45,%r11d
cb12(6): jz 0xfffff16e(%rip)
cb18(3): test %r8b,%r8b
cb1b(6): jz 0xfffff2da(%rip)
cb21(5): mov %r8b,0x30(%rsp)
cb26(5): jmp 0xfffff2cc(%rip)
cb2b(4): cmp $0x45,%r11d
cb2f(6): jz 0x48b(%rip)
cb35(4): mov 0x14(%r13),%esi
cb39(5): mov $0x51eb851f,%edx
cb3e(2): mov %esi,%eax
cb40(2): imul %eax,%edx,%edx
cb42(2): mov %edx,%eax
cb44(2): mov %esi,%edx
cb46(3): sar $0x1f,%edx
cb49(3): sar $0x5,%eax
cb4c(2): sub %edx,%eax
cb4e(2): mov %esi,%edx
cb50(3): lea 0x13(%rax),%ecx
cb53(3): imul %eax,$0x64,%eax
cb56(2): sub %eax,%edx
cb58(2): mov %edx,%eax
cb5a(3): shr $0x1f,%eax
cb5d(2): test %ecx,%ecx
cb5f(3): setnle %dl
cb62(2): and %edx,%eax
cb64(6): cmp $0xfffff894,%esi
cb6a(5): setl 0x38(%rsp)
cb6f(2): sub %eax,%ecx
cb71(6): cmp $0xfffff894,%esi
cb77(3): setnl %al
cb7a(3): test %r15d,%r15d
cb7d(6): jnz 0xfffff89f(%rip)
cb83(5): cmp $0x2b,0x2c(%rsp)
cb88(5): mov 0x2c(%rsp),%r15d
cb8d(6): jnz 0xfffff899(%rip)
cb93(5): mov $0x2,%edi
cb98(5): mov $0x63,%edx
cb9d(2): cmp %ecx,%edx
cb9f(5): mov $0x1,0x40(%rsp)
cba4(6): mov $0x2b,%r15d
cbaa(6): jb 0xfffff72f(%rip)
cbb0(3): cmp %edi,%r10d
cbb3(6): mov $0x2b,%r15d
cbb9(5): setnle 0x40(%rsp)
cbbe(2): xor %esi,%esi
cbc0(5): jmp 0xfffff3e7(%rip)
cbc5(3): test %r11d,%r11d
cbc8(6): jnz 0xfffff0b8(%rip)
cbce(7): lea 0x51e6(%rip),%rax
cbd5(8): mov $0xffffffff,0x38(%rsp)
cbdd(5): mov %rax,0x40(%rsp)
cbe2(5): jmp 0xfffff4c0(%rip)
cbe7(3): test %r11d,%r11d
cbea(6): jnz 0xfffff096(%rip)
cbf0(3): test %r15d,%r15d
cbf3(6): jnz 0x7fa(%rip)
cbf9(3): test %r10d,%r10d
cbfc(6): jns 0x7f1(%rip)
cc02(7): lea 0x51a9(%rip),%rax
cc09(8): mov $0x4,0x38(%rsp)
cc11(6): mov $0x2b,%r15d
cc17(5): mov %rax,0x40(%rsp)
cc1c(5): jmp 0xfffff486(%rip)
cc21(4): movzx 0xffffffff(%rbx),%ecx
cc25(4): lea 0xffffffff(%rbx),%r9
cc29(5): mov 0x8(%rsp),%rdx
cc2e(5): mov $0x0,%eax
cc33(3): sub %r14,%rdx
cc36(3): test %r10d,%r10d
cc39(4): cmovns %r10d,%eax
cc3d(3): cmp $0x25,%cl
cc40(2): cwde 
cc42(6): jnz 0xfffff039(%rip)
cc48(3): test %rax,%rax
cc4b(5): mov $0x1,%ecx
cc50(3): mov %r9,%r12
cc53(4): cmovne %rax,%rcx
cc57(6): mov $0x1,%r8d
cc5d(5): jmp 0xfffff064(%rip)
cc62(4): cmp $0x45,%r11d
cc66(6): jz 0xfffff01a(%rip)
cc6c(4): mov 0x8(%r13),%ecx
cc70(5): mov $0x2,%edi
cc75(5): jmp 0xfffff31b(%rip)
cc7a(4): cmp $0x45,%r11d
cc7e(6): jz 0xfffff002(%rip)
cc84(4): mov 0x4(%r13),%ecx
cc88(5): mov $0x2,%edi
cc8d(5): jmp 0xfffff303(%rip)
cc92(4): cmp $0x45,%r11d
cc96(6): jz 0xffffefea(%rip)
cc9c(4): cmp $0xff,%r10d
cca0(6): jz 0x551(%rip)
cca6(4): cmp $0x8,%r10d
ccaa(6): jnle 0x80f(%rip)
ccb0(7): mov 0x518(%rsp),%ecx
ccb7(3): mov %r10d,%esi
ccba(5): mov $0x66666667,%edi
ccbf(1): nop 
ccc0(2): mov %ecx,%eax
ccc2(3): add $0x1,%esi
ccc5(3): sar $0x1f,%ecx
ccc8(2): imul %eax,%edi,%edx
ccca(3): sar $0x2,%edx
cccd(2): sub %ecx,%edx
cccf(3): cmp $0x9,%esi
ccd2(2): mov %edx,%ecx
ccd4(2): jnz 0xffffffec(%rip)
ccd6(3): mov %r10d,%edi
ccd9(5): jmp 0xfffff2b7(%rip)
ccde(4): cmp $0x45,%r11d
cce2(6): jz 0xffffef9e(%rip)
cce8(4): mov 0x68(%rsp),%ecx
ccec(5): mov $0x2,%edi
ccf1(5): jmp 0xfffff29f(%rip)
ccf6(4): cmp $0x45,%r11d
ccfa(6): jz 0xffffef86(%rip)
cd00(4): mov 0x68(%rsp),%ecx
cd04(3): test %r15d,%r15d
cd07(5): mov $0x2,%edi
cd0c(6): jnz 0xfffff284(%rip)
cd12(6): mov $0x5f,%r15d
cd18(5): jmp 0xfffff278(%rip)
cd1d(4): cmp $0x45,%r11d
cd21(6): jz 0xffffef5f(%rip)
cd27(4): mov 0x10(%r13),%eax
cd2b(5): mov $0x0,0x40(%rsp)
cd30(5): mov $0x2,%edi
cd35(3): cmp $0xff,%eax
cd38(3): lea 0x1(%rax),%ecx
cd3b(5): setl 0x38(%rsp)
cd40(3): cmp $0xff,%eax
cd43(3): setnl %al
cd46(2): xor %esi,%esi
cd48(5): jmp 0xfffff25f(%rip)
cd4d(3): test %r10d,%r10d
cd50(5): mov $0x0,%ecx
cd55(5): mov $0x1,%eax
cd5a(4): cmovns %r10d,%ecx
cd5e(3): movsxd %ecx,%rcx
cd61(3): test %rcx,%rcx
cd64(4): cmove %rax,%rcx
cd68(5): mov 0x8(%rsp),%rax
cd6d(3): sub %r14,%rax
cd70(3): cmp %rcx,%rax
cd73(6): jbe 0xffffed89(%rip)
cd79(3): test %rbp,%rbp
cd7c(6): jz 0xfffff2ec(%rip)
cd82(4): cmp $0x1,%r10d
cd86(2): jle 0x3c(%rip)
cd88(3): movsxd %r10d,%rdx
cd8b(5): mov %rcx,0x30(%rsp)
cd90(4): sub $0x1,%rdx
cd94(4): cmp $0x30,%r15d
cd98(5): lea 0x0(%rbp,%rdx,1),%r12
cd9d(6): jz 0x5d1(%rip)
cda3(4): cmp $0x2b,%r15d
cda7(6): jz 0x5c7(%rip)
cdad(3): mov %rbp,%rdi
cdb0(5): mov $0x20,%esi
cdb5(3): mov %r12,%rbp
cdb8(5): call 0xffff5b38(%rip)
cdbd(5): mov 0x30(%rsp),%rcx
cdc2(4): mov $0xa,0x0(%rbp)
cdc6(4): add $0x1,%rbp
cdca(5): jmp 0xfffff29e(%rip)
cdcf(2): xor %eax,%eax
cdd1(5): jmp 0xfffff2a7(%rip)
cdd6(4): cmp $0x45,%r11d
cdda(6): jz 0xffffeea6(%rip)
cde0(4): mov 0x1c(%r13),%eax
cde4(5): mov $0x0,0x40(%rsp)
cde9(5): mov $0x3,%edi
cdee(3): cmp $0xff,%eax
cdf1(3): lea 0x1(%rax),%ecx
cdf4(5): setl 0x38(%rsp)
cdf9(3): cmp $0xff,%eax
cdfc(3): setnl %al
cdff(2): xor %esi,%esi
ce01(5): jmp 0xfffff1a6(%rip)
ce06(4): cmp $0x45,%r11d
ce0a(6): jz 0xffffee76(%rip)
ce10(4): mov 0x8(%r13),%ecx
ce14(5): jmp 0xfffffef0(%rip)
ce19(4): cmp $0x45,%r11d
ce1d(6): jz 0xffffee63(%rip)
ce23(4): mov 0xc(%r13),%ecx
ce27(5): jmp 0xfffffedd(%rip)
ce2c(4): nop 0x0(%rax)
ce30(2): mov %ecx,%eax
ce32(2): neg %eax
ce34(5): cmp $0x0,0x38(%rsp)
ce39(3): cmovne %eax,%ecx
ce3c(5): jmp 0xfffff724(%rip)
ce41(7): nop 0x0(%rax)
ce48(4): cmp $0x2d,%r15d
ce4c(5): mov $0x2d,0x38(%rsp)
ce51(6): jnz 0xfffff793(%rip)
ce57(3): test %r10d,%r10d
ce5a(6): mov $0x0,%r11d
ce60(5): mov 0x8(%rsp),%rax
ce65(4): cmovns %r10d,%r11d
ce69(6): mov $0x1,%r12d
ce6f(3): movsxd %r11d,%r11
ce72(3): test %r11,%r11
ce75(4): cmovne %r11,%r12
ce79(3): sub %r14,%rax
ce7c(3): cmp %r12,%rax
ce7f(6): jbe 0xffffec7d(%rip)
ce85(3): test %rbp,%rbp
ce88(2): jz 0x64(%rip)
ce8a(4): mov 0x48(%rsp),%eax
ce8e(2): test %eax,%eax
ce90(2): jnz 0x54(%rip)
ce92(4): cmp $0x1,%r11
ce96(2): jbe 0x4e(%rip)
ce98(3): movsxd %r10d,%rax
ce9b(3): mov %rbp,%rdi
ce9e(5): mov $0x20,%esi
cea3(4): lea 0xffffffff(%rax),%rcx
cea7(5): mov %r9,0x60(%rsp)
ceac(5): mov %r8,0x58(%rsp)
ceb1(5): mov %r11,0x50(%rsp)
ceb6(5): mov %r10d,0x40(%rsp)
cebb(3): mov %rcx,%rdx
cebe(5): mov %rcx,0x38(%rsp)
cec3(5): call 0xffff5a2d(%rip)
cec8(5): mov 0x38(%rsp),%rcx
cecd(5): mov 0x60(%rsp),%r9
ced2(5): mov 0x58(%rsp),%r8
ced7(5): mov 0x50(%rsp),%r11
cedc(5): mov 0x40(%rsp),%r10d
cee1(3): add %rcx,%rbp
cee4(4): mov %r15b,0x0(%rbp)
cee8(4): add $0x1,%rbp
ceec(5): mov 0x8(%rsp),%rdx
cef1(4): lea 0x17(%r9),%rcx
cef5(3): add %r12,%r14
cef8(6): mov $0x2d,%r15d
cefe(3): mov %rbx,%r12
cf01(3): sub %r8,%rcx
cf04(3): sub %r14,%rdx
cf07(5): jmp 0xfffff7fe(%rip)
cf0c(4): nop 0x0(%rax)
cf10(5): call 0xffff5a60(%rip)
cf15(5): mov 0x38(%rsp),%rcx
cf1a(5): mov 0x30(%rsp),%r8
cf1f(5): jmp 0xffffee33(%rip)
cf24(4): nop 0x0(%rax)
cf28(3): mov %rbp,%rdi
cf2b(5): mov %rcx,0x30(%rsp)
cf30(5): call 0xffffea60(%rip)
cf35(5): mov 0x30(%rsp),%rcx
cf3a(5): jmp 0xffffeff1(%rip)
cf3f(3): mov %rbp,%rdi
cf42(5): mov $0x30,%esi
cf47(5): call 0xffff59a9(%rip)
cf4c(5): mov 0x38(%rsp),%rbp
cf51(6): movzx 0x40(%rsp),%r8d
cf57(5): mov 0x48(%rsp),%rcx
cf5c(5): mov 0x50(%rsp),%r9
cf61(5): jmp 0xffffef9d(%rip)
cf66(3): mov %rbp,%rdi
cf69(5): mov $0x30,%esi
cf6e(3): mov %rbx,%rbp
cf71(5): call 0xffff597f(%rip)
cf76(5): mov 0x38(%rsp),%r9
cf7b(5): mov 0x40(%rsp),%rcx
cf80(5): mov 0x48(%rsp),%r8
cf85(5): jmp 0xffffeda0(%rip)
cf8a(3): mov %rbp,%rdi
cf8d(5): mov $0x30,%esi
cf92(5): call 0xffff595e(%rip)
cf97(5): mov 0x38(%rsp),%rbp
cf9c(5): mov 0x40(%rsp),%rcx
cfa1(5): mov 0x48(%rsp),%r8
cfa6(5): jmp 0xfffff7d2(%rip)
cfab(5): mov $0x70,%esi
cfb0(5): mov $0x0,0x30(%rsp)
cfb5(5): jmp 0xffffee40(%rip)
cfba(2): xor %edi,%edi
cfbc(5): jmp 0xfffff000(%rip)
cfc1(5): mov $0x0,0x38(%rsp)
cfc6(3): movsxd %r12d,%r15
cfc9(3): cmp %rdx,%r15
cfcc(6): jnb 0xffffeb30(%rip)
cfd2(3): test %rbp,%rbp
cfd5(2): jz 0x33(%rip)
cfd7(3): mov %rbp,%rdi
cfda(3): mov %r15,%rdx
cfdd(5): mov $0x20,%esi
cfe2(5): mov %r10d,0x58(%rsp)
cfe7(5): mov %r9,0x50(%rsp)
cfec(3): add %r15,%rbp
cfef(5): mov %r8,0x40(%rsp)
cff4(5): call 0xffff58fc(%rip)
cff9(5): mov 0x58(%rsp),%r10d
cffe(5): mov 0x50(%rsp),%r9
d003(5): mov 0x40(%rsp),%r8
d008(5): mov 0x8(%rsp),%rdx
d00d(3): mov %r10d,%eax
d010(3): add %r15,%r14
d013(3): sub %r12d,%eax
d016(3): cmp %r12d,%r10d
d019(6): mov $0x0,%r10d
d01f(4): cmovnl %eax,%r10d
d023(3): sub %r14,%rdx
d026(5): cmp $0x0,0x38(%rsp)
d02b(6): jnz 0x127(%rip)
d031(4): add $0x17,%r9
d035(3): movsxd %r10d,%r11
d038(3): mov %rbx,%r12
d03b(3): mov %r9,%rcx
d03e(6): mov $0x5f,%r15d
d044(3): sub %r8,%rcx
d047(5): jmp 0xfffff6be(%rip)
d04c(3): test %r10d,%r10d
d04f(6): mov $0x0,%r11d
d055(6): mov $0x1,%r12d
d05b(4): cmovns %r10d,%r11d
d05f(3): movsxd %r11d,%r11
d062(3): test %r11,%r11
d065(4): cmovne %r11,%r12
d069(3): cmp %rdx,%r12
d06c(6): jnb 0xffffea90(%rip)
d072(3): test %rbp,%rbp
d075(2): jz 0x7b(%rip)
d077(4): mov 0x48(%rsp),%edi
d07b(2): test %edi,%edi
d07d(2): jnz 0x67(%rip)
d07f(4): cmp $0x1,%r11
d083(2): jbe 0x61(%rip)
d085(3): movsxd %r10d,%rdx
d088(5): mov %r10d,0x6c(%rsp)
d08d(5): mov %r8,0x60(%rsp)
d092(4): sub $0x1,%rdx
d096(4): cmp $0x30,%r15d
d09a(5): mov %rcx,0x58(%rsp)
d09f(5): lea 0x0(%rbp,%rdx,1),%rax
d0a4(5): mov %r11,0x50(%rsp)
d0a9(5): mov %rax,0x40(%rsp)
d0ae(6): jz 0x3d1(%rip)
d0b4(4): cmp $0x2b,%r15d
d0b8(6): jz 0x3c7(%rip)
d0be(3): mov %rbp,%rdi
d0c1(5): mov $0x20,%esi
d0c6(5): call 0xffff582a(%rip)
d0cb(5): mov 0x40(%rsp),%rbp
d0d0(5): mov 0x6c(%rsp),%r10d
d0d5(5): mov 0x60(%rsp),%r8
d0da(5): mov 0x58(%rsp),%rcx
d0df(5): mov 0x50(%rsp),%r11
d0e4(5): movzx 0x38(%rsp),%eax
d0e9(4): add $0x1,%rbp
d0ed(3): mov %al,0xffffffff(%rbp)
d0f0(5): mov 0x8(%rsp),%rdx
d0f5(3): add %r12,%r14
d0f8(3): mov %rbx,%r12
d0fb(3): sub %r14,%rdx
d0fe(5): jmp 0xfffff607(%rip)
d103(6): mov $0x2b,%r15d
d109(5): jmp 0xfffffd4e(%rip)
d10e(3): mov %rbx,%r12
d111(5): jmp 0xffffea51(%rip)
d116(5): mov $0xfffff894,%eax
d11b(8): lea 0x76c(%rdi,%r8,1),%ecx
d123(3): sub %r8d,%eax
d126(2): cmp %eax,%edi
d128(5): setl 0x38(%rsp)
d12d(3): setnl %al
d130(3): test %r15d,%r15d
d133(6): jz 0xfffff18d(%rip)
d139(4): cmp $0x2b,%r15d
d13d(6): jnz 0xfffff192(%rip)
d143(5): mov $0x4,%edi
d148(5): mov $0x270f,%edx
d14d(5): jmp 0xfffffa50(%rip)
d152(3): movsxd %r10d,%r15
d155(6): mov $0x1,%r12d
d15b(3): test %r15,%r15
d15e(4): cmovne %r15,%r12
d162(3): cmp %rdx,%r12
d165(6): jnb 0xffffe997(%rip)
d16b(3): test %rbp,%rbp
d16e(2): jz 0x5d(%rip)
d170(5): mov 0x48(%rsp),%r11d
d175(3): test %r11d,%r11d
d178(2): jnz 0x47(%rip)
d17a(4): cmp $0x1,%r15
d17e(2): jbe 0x41(%rip)
d180(4): lea 0xffffffff(%r15),%rcx
d184(3): mov %rbp,%rdi
d187(5): mov $0x20,%esi
d18c(5): mov %r10d,0x60(%rsp)
d191(5): mov %r9,0x58(%rsp)
d196(3): mov %rcx,%rdx
d199(5): mov %r8,0x50(%rsp)
d19e(5): mov %rcx,0x40(%rsp)
d1a3(5): call 0xffff574d(%rip)
d1a8(5): mov 0x40(%rsp),%rcx
d1ad(5): mov 0x60(%rsp),%r10d
d1b2(5): mov 0x58(%rsp),%r9
d1b7(5): mov 0x50(%rsp),%r8
d1bc(3): add %rcx,%rbp
d1bf(5): movzx 0x38(%rsp),%eax
d1c4(4): add $0x1,%rbp
d1c8(3): mov %al,0xffffffff(%rbp)
d1cb(5): mov 0x8(%rsp),%rdx
d1d0(4): add $0x17,%r9
d1d4(3): add %r12,%r14
d1d7(3): mov %r9,%rcx
d1da(3): mov %r15,%r11
d1dd(3): mov %rbx,%r12
d1e0(3): sub %r8,%rcx
d1e3(6): mov $0x5f,%r15d
d1e9(3): sub %r14,%rdx
d1ec(5): jmp 0xfffff519(%rip)
d1f1(7): mov 0x518(%rsp),%ecx
d1f8(5): mov $0x9,%edi
d1fd(6): mov $0x9,%r10d
d203(5): jmp 0xffffed8d(%rip)
d208(3): mov %rbx,%r12
d20b(3): mov %rbx,%r9
d20e(6): mov $0x1,%r8d
d214(5): jmp 0xffffeaad(%rip)
d219(4): cmp $0x5f,%r15d
d21d(6): jz 0xfffffda4(%rip)
d223(5): movsxd 0x48(%rsp),%rax
d228(3): cmp %rdx,%rax
d22b(6): jnb 0xffffe8d1(%rip)
d231(3): movsxd %r12d,%r9
d234(3): mov %rbx,%r12
d237(5): jmp 0xfffff487(%rip)
d23c(3): mov %rbp,%rdi
d23f(5): mov $0x30,%esi
d244(5): call 0xffff56ac(%rip)
d249(5): mov 0x50(%rsp),%rbp
d24e(5): mov 0x58(%rsp),%r11
d253(5): jmp 0xffffef13(%rip)
d258(4): sub $0x1,%r12d
d25c(5): mov $0x16d,%edx
d261(4): test $0x3,%r12b
d265(2): jnz 0x3e(%rip)
d267(3): mov %r12d,%eax
d26a(5): mov $0x51eb851f,%edx
d26f(2): imul %eax,%edx,%edx
d271(2): mov %edx,%eax
d273(3): mov %r12d,%edx
d276(3): sar $0x1f,%edx
d279(3): sar $0x5,%eax
d27c(2): sub %edx,%eax
d27e(5): mov $0x16e,%edx
d283(3): imul %eax,$0x64,%eax
d286(3): cmp %eax,%r12d
d289(2): jnz 0x1a(%rip)
d28b(3): mov %r12d,%eax
d28e(5): mov $0x190,%ecx
d293(1): cdq %eax
d294(2): idiv %ecx,%eax
d296(3): cmp $0x1,%edx
d299(2): sbb %edx,%edx
d29b(2): not %edx
d29d(6): add $0x16e,%edx
d2a3(3): add %edx,%r8d
d2a6(5): mov $0x92492493,%edx
d2ab(3): mov %r8d,%ecx
d2ae(4): sub 0x38(%rsp),%ecx
d2b2(6): add $0x17e,%ecx
d2b8(2): mov %ecx,%eax
d2ba(3): sub %ecx,%r8d
d2bd(2): imul %eax,%edx,%edx
d2bf(3): lea 0x0(%rdx,%rcx,1),%eax
d2c2(2): mov %ecx,%edx
d2c4(3): sar $0x1f,%edx
d2c7(3): sar $0x2,%eax
d2ca(2): sub %edx,%eax
d2cc(7): lea 0x0(,%rax,8),%edx
d2d3(2): sub %eax,%edx
d2d5(5): lea 0x3(%r8,%rdx,1),%ecx
d2da(6): mov $0xffffffff,%r8d
d2e0(5): jmp 0xfffff6ef(%rip)
d2e5(3): imul %esi,$0x64,%esi
d2e8(5): mov $0x1,0x40(%rsp)
d2ed(5): mov $0x9,%edi
d2f2(7): imul %r12d,$0x2710,%eax
d2f9(2): add %esi,%eax
d2fb(5): mov $0x14,%esi
d300(2): add %eax,%ecx
d302(5): movzx 0x38(%rsp),%eax
d307(3): xor $0x1,%eax
d30a(5): jmp 0xffffec9d(%rip)
d30f(2): mov %ecx,%eax
d311(5): mov $0x92492493,%edx
d316(5): mov $0x2,%edi
d31b(2): imul %eax,%edx,%edx
d31d(3): lea 0x0(%rdx,%rcx,1),%eax
d320(3): sar $0x1f,%ecx
d323(3): sar $0x2,%eax
d326(2): sub %ecx,%eax
d328(2): mov %eax,%ecx
d32a(3): add $0x1,%ecx
d32d(5): jmp 0xffffec63(%rip)
d332(5): movzx 0x38(%rsp),%eax
d337(5): mov $0x1,0x40(%rsp)
d33c(5): mov $0x6,%edi
d341(4): imul %r12d,$0x64,%ecx
d345(3): xor $0x1,%eax
d348(2): add %esi,%ecx
d34a(5): mov $0x4,%esi
d34f(5): jmp 0xffffec58(%rip)
d354(3): mov %rbp,%rdi
d357(5): mov $0x30,%esi
d35c(3): mov %r12,%rbp
d35f(5): call 0xffff5591(%rip)
d364(5): mov 0x30(%rsp),%rcx
d369(5): jmp 0xffffecf3(%rip)
d36e(3): mov %rbp,%rdi
d371(5): mov $0x30,%esi
d376(3): mov %r12,%rbp
d379(5): call 0xffff5577(%rip)
d37e(5): mov 0x30(%rsp),%rcx
d383(5): jmp 0xfffffa3f(%rip)
d388(5): call 0xffff55e8(%rip)
d38d(5): mov 0x30(%rsp),%rcx
d392(5): jmp 0xfffff033(%rip)
d397(5): mov 0x20(%rsp),%rsi
d39c(3): mov %r12,%rdx
d39f(3): mov %rbp,%rdi
d3a2(5): mov %rcx,0x30(%rsp)
d3a7(5): call 0xffffe5e9(%rip)
d3ac(5): mov 0x30(%rsp),%rcx
d3b1(5): jmp 0xfffff014(%rip)
d3b6(4): mov %al,0x30(%rsp)
d3ba(5): jmp 0xffffe8c6(%rip)
d3bf(3): movzx (%rbx),%ecx
d3c2(3): mov %rbx,%r9
d3c5(5): jmp 0xfffff864(%rip)
d3ca(4): lea 0x2(%rbx),%rcx
d3ce(6): mov $0x1,%r8d
d3d4(3): mov %rcx,%rdx
d3d7(4): add $0x1,%rcx
d3db(4): movzx 0xffffffff(%rcx),%eax
d3df(4): add $0x1,%r8
d3e3(2): cmp $0x3a,%al
d3e5(6): jnz 0xfffff4d8(%rip)
d3eb(2): jmp 0xffffffe9(%rip)
d3ed(3): mov %r10d,%esi
d3f0(5): mov $0x0,%eax
d3f5(3): sub $0x6,%esi
d3f8(3): cmovns %esi,%eax
d3fb(4): mov %eax,0x38(%rsp)
d3ff(7): lea 0x49ac(%rip),%rax
d406(5): mov %rax,0x40(%rsp)
d40b(5): jmp 0xffffec97(%rip)
d410(4): imul %r12d,$0x64,%ecx
d414(2): xor %esi,%esi
d416(5): mov $0x1,0x40(%rsp)
d41b(5): mov $0x5,%edi
d420(2): add %eax,%ecx
d422(5): movzx 0x38(%rsp),%eax
d427(3): xor $0x1,%eax
d42a(5): jmp 0xffffeb7d(%rip)
d42f(3): mov %rbp,%rdi
d432(5): mov $0x30,%esi
d437(5): call 0xffff54b9(%rip)
d43c(5): mov 0x38(%rsp),%rbp
d441(6): movzx 0x40(%rsp),%r8d
d447(5): mov 0x48(%rsp),%rcx
d44c(5): jmp 0xffffef4b(%rip)
d451(3): mov %rbp,%rdi
d454(5): mov $0x30,%esi
d459(3): mov %r12,%rbp
d45c(5): call 0xffff5494(%rip)
d461(5): mov 0x40(%rsp),%rcx
d466(5): mov 0x50(%rsp),%r9
d46b(5): mov 0x58(%rsp),%r8
d470(5): jmp 0xfffff23f(%rip)
d475(5): mov $0x30,%esi
d47a(5): jmp 0xffffeda1(%rip)
d47f(3): mov %rbp,%rdi
d482(5): mov $0x30,%esi
d487(5): call 0xffff5469(%rip)
d48c(5): mov 0x40(%rsp),%rbp
d491(5): mov 0x50(%rsp),%r11
d496(5): mov 0x58(%rsp),%rcx
d49b(5): mov 0x60(%rsp),%r8
d4a0(5): mov 0x6c(%rsp),%r10d
d4a5(5): jmp 0xfffffc3f(%rip)
d4aa(5): mov $0x0,0x38(%rsp)
d4af(5): mov $0x2,%edi
d4b4(5): jmp 0xfffff6fc(%rip)
d4b9(7): mov 0x518(%rsp),%ecx
d4c0(5): jmp 0xfffff816(%rip)
d4c5(5): call 0xffff536b(%rip)
d4ca(3): add $0x64,%ecx
d4cd(3): test %r15d,%r15d
d4d0(6): jz 0xfffff56a(%rip)
d4d6(5): jmp 0xffffef3c(%rip)
d4db(2): xor %edi,%edi
d4dd(5): jmp 0xffffeaef(%rip)

"nstrftime" :
d4f0(4): sub $0x18,%rsp
d4f4(9): mov $0x28,%rax
d4fd(5): mov %rax,0x8(%rsp)
d502(2): xor %eax,%eax
d504(5): mov $0x0,0x7(%rsp)
d509(2): push %r9
d50b(3): xor %r9d,%r9d
d50e(2): push %r8
d510(3): xor %r8d,%r8d
d513(5): lea 0x17(%rsp),%rax
d518(1): push %rax
d519(2): push $0xff
d51b(5): call 0xffffe515(%rip)
d520(4): add $0x20,%rsp
d524(5): mov 0x8(%rsp),%rdx
d529(9): xor $0x28,%rdx
d532(2): jnz 0x7(%rip)
d534(4): add $0x18,%rsp
d538(1): ret near (%rsp)
d539(5): call 0xffff52f7(%rip)

"rpl_fclose" :
d540(2): push %r12
d542(1): push %rbp
d543(1): push %rbx
d544(3): mov %rdi,%rbx
d547(5): call 0xffff5459(%rip)
d54c(2): test %eax,%eax
d54e(3): mov %rbx,%rdi
d551(2): js 0x56(%rip)
d553(5): call 0xffff54bd(%rip)
d558(2): test %eax,%eax
d55a(2): jnz 0x2e(%rip)
d55c(3): mov %rbx,%rdi
d55f(5): call 0x61(%rip)
d564(2): test %eax,%eax
d566(2): jz 0x3e(%rip)
d568(5): call 0xffff51e8(%rip)
d56d(3): mov (%rax),%r12d
d570(3): mov %rbx,%rdi
d573(3): mov %rax,%rbp
d576(5): call 0xffff525a(%rip)
d57b(3): test %r12d,%r12d
d57e(2): jnz 0x32(%rip)
d580(1): pop %rbx
d581(1): pop %rbp
d582(2): pop %r12
d584(1): ret near (%rsp)
d585(3): nop (%rax)
d588(3): mov %rbx,%rdi
d58b(5): call 0xffff5415(%rip)
d590(2): xor %esi,%esi
d592(5): mov $0x1,%edx
d597(2): mov %eax,%edi
d599(5): call 0xffff5327(%rip)
d59e(4): cmp $0xffffffff,%rax
d5a2(2): jnz 0xffffffba(%rip)
d5a4(3): mov %rbx,%rdi
d5a7(1): pop %rbx
d5a8(1): pop %rbp
d5a9(2): pop %r12
d5ab(5): jmp 0xffff5225(%rip)
d5b0(4): mov %r12d,0x0(%rbp)
d5b4(5): mov $0xffffffff,%eax
d5b9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
d5c0(3): test %rdi,%rdi
d5c3(1): push %rbx
d5c4(3): mov %rdi,%rbx
d5c7(2): jz 0x13(%rip)
d5c9(5): call 0xffff5447(%rip)
d5ce(2): test %eax,%eax
d5d0(2): jz 0xa(%rip)
d5d2(6): test $0x100,(%rbx)
d5d8(2): jnz 0x10(%rip)
d5da(3): mov %rbx,%rdi
d5dd(1): pop %rbx
d5de(5): jmp 0xffff5402(%rip)
d5e3(5): nop 0x0(%rax,%rax,1)
d5e8(3): mov %rbx,%rdi
d5eb(5): mov $0x1,%edx
d5f0(2): xor %esi,%esi
d5f2(5): call 0xe(%rip)
d5f7(3): mov %rbx,%rdi
d5fa(1): pop %rbx
d5fb(5): jmp 0xffff53e5(%rip)

"rpl_fseeko" :
d600(4): mov 0x8(%rdi),%rax
d604(4): cmp %rax,0x10(%rdi)
d608(2): jz 0x8(%rip)
d60a(5): jmp 0xffff5486(%rip)
d60f(1): nop 
d610(4): mov 0x20(%rdi),%rax
d614(4): cmp %rax,0x28(%rdi)
d618(2): jnz 0xfffffff2(%rip)
d61a(5): cmp $0x0,0x48(%rdi)
d61f(2): jnz 0xffffffeb(%rip)
d621(2): push %r12
d623(1): push %rbp
d624(3): mov %edx,%r12d
d627(1): push %rbx
d628(3): mov %rsi,%rbp
d62b(3): mov %rdi,%rbx
d62e(5): call 0xffff5372(%rip)
d633(3): mov %r12d,%edx
d636(3): mov %rbp,%rsi
d639(2): mov %eax,%edi
d63b(5): call 0xffff5285(%rip)
d640(4): cmp $0xffffffff,%rax
d644(2): jz 0xe(%rip)
d646(3): and $0xef,(%rbx)
d649(7): mov %rax,0x90(%rbx)
d650(2): xor %eax,%eax
d652(1): pop %rbx
d653(1): pop %rbp
d654(2): pop %r12
d656(1): ret near (%rsp)

"fseterr" :
d660(3): or $0x20,(%rdi)
d663(1): ret near (%rsp)

"vasnprintf" :
d670(1): push %rbp
d671(3): mov %rsp,%rbp
d674(2): push %r15
d676(2): push %r14
d678(2): push %r13
d67a(2): push %r12
d67c(7): lea 0xfffffc50(%rbp),%r14
d683(1): push %rbx
d684(3): mov %rdx,%rbx
d687(3): mov %rcx,%r12
d68a(3): mov %r14,%rdx
d68d(7): sub $0x408,%rsp
d694(7): mov %rsi,0xfffffbe8(%rbp)
d69b(7): lea 0xfffffd40(%rbp),%rsi
d6a2(7): mov %rdi,0xfffffc18(%rbp)
d6a9(3): mov %rbx,%rdi
d6ac(7): mov %r14,0xfffffbf0(%rbp)
d6b3(9): mov $0x28,%rax
d6bc(4): mov %rax,0xffffffc8(%rbp)
d6c0(2): xor %eax,%eax
d6c2(7): mov %rsi,0xfffffbf8(%rbp)
d6c9(5): call 0x12c7(%rip)
d6ce(2): test %eax,%eax
d6d0(6): js 0xe68(%rip)
d6d6(3): mov %r14,%rsi
d6d9(3): mov %r12,%rdi
d6dc(5): call 0x10b4(%rip)
d6e1(2): test %eax,%eax
d6e3(6): js 0xebd(%rip)
d6e9(7): mov 0xfffffd50(%rbp),%rax
d6f0(7): mov $0xffffffff,%rdx
d6f7(4): add $0x7,%rax
d6fb(4): cmp $0x6,%rax
d6ff(4): cmovbe %rdx,%rax
d703(7): add 0xfffffd58(%rbp),%rax
d70a(6): jb 0xa2e(%rip)
d710(3): mov %rax,%rdi
d713(3): xor %r8d,%r8d
d716(4): add $0x6,%rdi
d71a(4): setb %r8b
d71e(6): jb 0xa1a(%rip)
d724(7): cmp $0xf9f,%rdi
d72b(6): jbe 0x14d(%rip)
d731(4): cmp $0xffffffff,%rdi
d735(7): mov %r8,0xfffffc38(%rbp)
d73c(6): jz 0x9fc(%rip)
d742(5): call 0xffff528e(%rip)
d747(3): test %rax,%rax
d74a(7): mov %rax,0xfffffc28(%rbp)
d751(6): jz 0x9e7(%rip)
d757(7): mov 0xfffffc38(%rbp),%r8
d75e(7): mov %rax,0xfffffbe0(%rbp)
d765(3): xor %r12d,%r12d
d768(8): cmp $0x0,0xfffffc18(%rbp)
d770(2): jz 0xc(%rip)
d772(7): mov 0xfffffbe8(%rbp),%rax
d779(3): mov (%rax),%r12
d77c(7): mov 0xfffffd48(%rbp),%r13
d783(7): lea 0xfffffc44(%rbp),%rax
d78a(7): mov 0xfffffc18(%rbp),%r15
d791(b): mov $0x0,0xfffffc00(%rbp)
d79c(7): mov %rax,0xfffffc10(%rbp)
d7a3(3): mov %rbx,%rax
d7a6(3): mov %r8,%rbx
d7a9(4): mov 0x0(%r13),%rcx
d7ad(3): mov %rax,%r8
d7b0(3): cmp %r8,%rcx
d7b3(6): jz 0x96e(%rip)
d7b9(3): sub %r8,%rcx
d7bc(3): mov %rbx,%rax
d7bf(3): add %rcx,%rax
d7c2(3): mov %rax,%r14
d7c5(6): jnb 0xe3(%rip)
d7cb(4): cmp $0xffffffff,%r12
d7cf(6): jz 0xad1(%rip)
d7d5(5): call 0xffff4f7b(%rip)
d7da(7): mov %rax,0xfffffc38(%rbp)
d7e1(7): cmp 0xfffffc18(%rbp),%r15
d7e8(2): jz 0xb(%rip)
d7ea(3): test %r15,%r15
d7ed(6): jnz 0xae3(%rip)
d7f3(7): mov 0xfffffbe0(%rbp),%rax
d7fa(3): test %rax,%rax
d7fd(2): jz 0xa(%rip)
d7ff(3): mov %rax,%rdi
d802(5): call 0xffff4f0e(%rip)
d807(7): mov 0xfffffbf8(%rbp),%rax
d80e(7): mov 0xfffffd48(%rbp),%rdi
d815(4): add $0x20,%rax
d819(3): cmp %rax,%rdi
d81c(2): jz 0x7(%rip)
d81e(5): call 0xffff4ef2(%rip)
d823(7): mov 0xfffffbf0(%rbp),%rax
d82a(7): mov 0xfffffc58(%rbp),%rdi
d831(4): add $0x10,%rax
d835(3): cmp %rax,%rdi
d838(2): jz 0x7(%rip)
d83a(5): call 0xffff4ed6(%rip)
d83f(7): mov 0xfffffc38(%rbp),%rax
d846(3): xor %r15d,%r15d
d849(6): mov $0xc,(%rax)
d84f(4): mov 0xffffffc8(%rbp),%rdi
d853(9): xor $0x28,%rdi
d85c(3): mov %r15,%rax
d85f(6): jnz 0xf08(%rip)
d865(4): lea 0xffffffd8(%rbp),%rsp
d869(1): pop %rbx
d86a(2): pop %r12
d86c(2): pop %r13
d86e(2): pop %r14
d870(2): pop %r15
d872(1): pop %rbp
d873(1): ret near (%rsp)
d874(4): nop 0x0(%rax)
d878(4): add $0x24,%rax
d87c(b): mov $0x0,0xfffffbe0(%rbp)
d887(4): and $0xfffffff0,%rax
d88b(3): sub %rax,%rsp
d88e(5): lea 0xf(%rsp),%rax
d893(4): and $0xfffffff0,%rax
d897(7): mov %rax,0xfffffc28(%rbp)
d89e(5): jmp 0xfffffec7(%rip)
d8a3(5): nop 0x0(%rax,%rax,1)
d8a8(3): cmp %rax,%r12
d8ab(2): jnb 0x69(%rip)
d8ad(3): test %r12,%r12
d8b0(6): jnz 0x930(%rip)
d8b6(4): cmp $0xc,%rax
d8ba(6): jnbe 0x938(%rip)
d8c0(6): mov $0xc,%r12d
d8c6(7): cmp 0xfffffc18(%rbp),%r15
d8cd(3): setz %dl
d8d0(3): test %r15,%r15
d8d3(6): jz 0x945(%rip)
d8d9(2): test %dl,%dl
d8db(6): jnz 0x93d(%rip)
d8e1(3): mov %r12,%rsi
d8e4(3): mov %r15,%rdi
d8e7(7): mov %r8,0xfffffc30(%rbp)
d8ee(7): mov %rcx,0xfffffc38(%rbp)
d8f5(5): call 0xffff512b(%rip)
d8fa(3): test %rax,%rax
d8fd(7): mov 0xfffffc38(%rbp),%rcx
d904(7): mov 0xfffffc30(%rbp),%r8
d90b(6): jz 0x9b0(%rip)
d911(3): mov %rax,%r15
d914(4): lea 0x0(%r15,%rbx,1),%rdi
d918(3): mov %rcx,%rdx
d91b(3): mov %r8,%rsi
d91e(5): call 0xffff5052(%rip)
d923(7): mov 0xfffffc00(%rbp),%rax
d92a(7): cmp %rax,0xfffffd40(%rbp)
d931(6): jz 0xcba(%rip)
d937(5): movzx 0x48(%r13),%edx
d93c(4): mov 0x50(%r13),%rax
d940(3): cmp $0x25,%dl
d943(6): jz 0x795(%rip)
d949(4): cmp $0xffffffff,%rax
d94d(6): jz 0xc49(%rip)
d953(7): mov 0xfffffc58(%rbp),%r8
d95a(4): shl/sal $0x5,%rax
d95e(3): add %r8,%rax
d961(3): cmp $0x6e,%dl
d964(2): mov (%rax),%edi
d966(6): mov %edi,0xfffffc30(%rbp)
d96c(6): jz 0x7e4(%rip)
d972(4): mov 0x10(%r13),%eax
d976(7): mov 0xfffffc28(%rbp),%rdi
d97d(2): test $0x1,%al
d97f(3): mov $0x25,(%rdi)
d982(4): lea 0x1(%rdi),%rbx
d986(2): jz 0x11(%rip)
d988(7): mov 0xfffffc28(%rbp),%rdi
d98f(4): lea 0x2(%rdi),%rbx
d993(4): mov $0x27,0x1(%rdi)
d997(2): test $0x2,%al
d999(2): jz 0x9(%rip)
d99b(3): mov $0x2d,(%rbx)
d99e(4): add $0x1,%rbx
d9a2(2): test $0x4,%al
d9a4(2): jz 0x9(%rip)
d9a6(3): mov $0x2b,(%rbx)
d9a9(4): add $0x1,%rbx
d9ad(2): test $0x8,%al
d9af(2): jz 0x9(%rip)
d9b1(3): mov $0x20,(%rbx)
d9b4(4): add $0x1,%rbx
d9b8(2): test $0x10,%al
d9ba(2): jz 0x9(%rip)
d9bc(3): mov $0x23,(%rbx)
d9bf(4): add $0x1,%rbx
d9c3(2): test $0x40,%al
d9c5(2): jz 0x9(%rip)
d9c7(3): mov $0x49,(%rbx)
d9ca(4): add $0x1,%rbx
d9ce(2): test $0x20,%al
d9d0(2): jz 0x9(%rip)
d9d2(3): mov $0x30,(%rbx)
d9d5(4): add $0x1,%rbx
d9d9(4): mov 0x18(%r13),%rsi
d9dd(4): mov 0x20(%r13),%rdx
d9e1(3): cmp %rdx,%rsi
d9e4(2): jz 0x32(%rip)
d9e6(3): mov %rdx,%rcx
d9e9(3): mov %rbx,%rdi
d9ec(7): mov %r8,0xfffffc20(%rbp)
d9f3(3): sub %rsi,%rcx
d9f6(3): mov %rcx,%rdx
d9f9(7): mov %rcx,0xfffffc38(%rbp)
da00(5): call 0xffff4f70(%rip)
da05(7): mov 0xfffffc38(%rbp),%rcx
da0c(7): mov 0xfffffc20(%rbp),%r8
da13(3): add %rcx,%rbx
da16(4): mov 0x30(%r13),%rsi
da1a(4): mov 0x38(%r13),%rdx
da1e(3): cmp %rdx,%rsi
da21(2): jz 0x32(%rip)
da23(3): mov %rdx,%rcx
da26(3): mov %rbx,%rdi
da29(7): mov %r8,0xfffffc20(%rbp)
da30(3): sub %rsi,%rcx
da33(3): mov %rcx,%rdx
da36(7): mov %rcx,0xfffffc38(%rbp)
da3d(5): call 0xffff4f33(%rip)
da42(7): mov 0xfffffc38(%rbp),%rcx
da49(7): mov 0xfffffc20(%rbp),%r8
da50(3): add %rcx,%rbx
da53(6): mov 0xfffffc30(%rbp),%edi
da59(3): cmp $0x10,%edi
da5c(2): jnbe 0x2f(%rip)
da5e(5): mov $0x1,%eax
da63(2): mov %edi,%ecx
da65(3): shl/sal %cl,%rax
da68(5): test $0x14180,%eax
da6d(2): jnz 0x17(%rip)
da6f(3): test $0x10,%ah
da72(6): jnz 0x95e(%rip)
da78(3): test $0x6,%ah
da7b(2): jz 0x10(%rip)
da7d(3): mov $0x6c,(%rbx)
da80(4): add $0x1,%rbx
da84(3): mov $0x6c,(%rbx)
da87(4): add $0x1,%rbx
da8b(5): movzx 0x48(%r13),%eax
da90(4): mov $0x0,0x1(%rbx)
da94(2): mov %al,(%rbx)
da96(4): mov 0x28(%r13),%rax
da9a(4): cmp $0xffffffff,%rax
da9e(6): jz 0x732(%rip)
daa4(4): shl/sal $0x5,%rax
daa8(3): add %r8,%rax
daab(3): cmp $0x5,(%rax)
daae(6): jnz 0xae8(%rip)
dab4(3): mov 0x10(%rax),%eax
dab7(a): mov $0x1,0xfffffc20(%rbp)
dac1(6): mov %eax,0xfffffc48(%rbp)
dac7(4): mov 0x40(%r13),%rax
dacb(4): cmp $0xffffffff,%rax
dacf(2): jz 0x2d(%rip)
dad1(4): shl/sal $0x5,%rax
dad5(3): add %rax,%r8
dad8(4): cmp $0x5,(%r8)
dadc(6): jnz 0xaba(%rip)
dae2(6): mov 0xfffffc20(%rbp),%eax
dae8(4): mov 0x10(%r8),%edx
daec(7): mov %edx,0xfffffc48(%rbp,%rax,4)
daf3(3): lea 0x1(%rax),%eax
daf6(6): mov %eax,0xfffffc20(%rbp)
dafc(3): mov %r14,%rax
daff(2): xor %edx,%edx
db01(4): add $0x2,%rax
db05(6): jb 0xc67(%rip)
db0b(3): cmp %rax,%r12
db0e(2): jnb 0x4d(%rip)
db10(3): test %r12,%r12
db13(6): jnz 0x825(%rip)
db19(4): cmp $0xc,%rax
db1d(6): jnbe 0x833(%rip)
db23(6): mov $0xc,%r12d
db29(7): cmp 0xfffffc18(%rbp),%r15
db30(3): setz %dl
db33(3): test %r15,%r15
db36(6): jz 0x84a(%rip)
db3c(2): test %dl,%dl
db3e(6): jnz 0x842(%rip)
db44(3): mov %r12,%rsi
db47(3): mov %r15,%rdi
db4a(5): call 0xffff4ed6(%rip)
db4f(3): test %rax,%rax
db52(6): jz 0xfffffc83(%rip)
db58(3): mov %rax,%r15
db5b(5): mov $0x0,0x0(%r15,%r14,1)
db60(5): call 0xffff4bf0(%rip)
db65(7): mov %rax,0xfffffc38(%rbp)
db6c(2): mov (%rax),%eax
db6e(7): mov %rbx,0xfffffc08(%rbp)
db75(6): mov %eax,0xfffffbdc(%rbp)
db7b(5): nop 0x0(%rax,%rax,1)
db80(7): mov 0xfffffc38(%rbp),%rax
db87(3): mov %r12,%rbx
db8a(6): mov $0x7fffffff,%r10d
db90(3): sub %r14,%rbx
db93(a): mov $0xffffffff,0xfffffc44(%rbp)
db9d(7): cmp $0x7fffffff,%rbx
dba4(6): mov $0x0,(%rax)
dbaa(6): mov 0xfffffc30(%rbp),%eax
dbb0(4): cmovbe %rbx,%r10
dbb4(3): cmp $0x11,%eax
dbb7(6): jnbe 0x9df(%rip)
dbbd(7): lea 0x43ec(%rip),%rsi
dbc4(4): movsxd 0x0(%rsi,%rax,4),%rax
dbc8(3): add %rsi,%rax
dbcb(2): jmp %rax
dbcd(3): nop (%rax)
dbd0(4): mov 0x50(%r13),%rax
dbd4(4): lea 0x0(%r15,%r14,1),%rdi
dbd8(4): shl/sal $0x5,%rax
dbdc(7): add 0xfffffc58(%rbp),%rax
dbe3(4): mov 0x10(%rax),%r9
dbe7(6): mov 0xfffffc20(%rbp),%eax
dbed(3): cmp $0x1,%eax
dbf0(6): jz 0x4c8(%rip)
dbf6(3): cmp $0x2,%eax
dbf9(6): jz 0x4a7(%rip)
dbff(4): sub $0x8,%rsp
dc03(6): push 0xfffffc10(%rbp)
dc09(7): mov 0xfffffc28(%rbp),%r8
dc10(3): mov %r10,%rsi
dc13(7): mov $0xffffffff,%rcx
dc1a(5): mov $0x1,%edx
dc1f(2): xor %eax,%eax
dc21(7): mov %r10,0xfffffbd0(%rbp)
dc28(5): call 0xffff4ad8(%rip)
dc2d(1): pop %rsi
dc2e(1): pop %rdi
dc2f(7): mov 0xfffffbd0(%rbp),%r10
dc36(6): mov 0xfffffc44(%rbp),%ecx
dc3c(2): test %ecx,%ecx
dc3e(6): js 0x13e(%rip)
dc44(3): movsxd %ecx,%rdx
dc47(3): cmp %r10,%rdx
dc4a(2): jnb 0x10(%rip)
dc4c(3): add %r15,%rdx
dc4f(5): cmp $0x0,0x0(%rdx,%r14,1)
dc54(6): jnz 0x942(%rip)
dc5a(2): cmp %eax,%ecx
dc5c(2): jnl 0xa(%rip)
dc5e(6): mov %eax,0xfffffc44(%rbp)
dc64(2): mov %eax,%ecx
dc66(3): lea 0x1(%rcx),%eax
dc69(3): cmp %r10,%rax
dc6c(6): jb 0x834(%rip)
dc72(7): cmp $0x7ffffffe,%rbx
dc79(6): jnbe 0x847(%rip)
dc7f(4): lea 0x0(%r12,%r12,1),%rsi
dc83(3): lea 0x2(%rcx),%edx
dc86(3): test %r12,%r12
dc89(7): mov $0xffffffff,%rax
dc90(4): cmovns %rsi,%rax
dc94(3): add %r14,%rdx
dc97(6): jb 0xac1(%rip)
dc9d(3): cmp %rdx,%rax
dca0(4): cmovnae %rdx,%rax
dca4(3): cmp %rax,%r12
dca7(6): jnb 0xfffffed9(%rip)
dcad(3): test %r12,%r12
dcb0(6): js 0xfffffb31(%rip)
dcb6(3): cmp %rax,%rsi
dcb9(3): mov %rsi,%r12
dcbc(2): jnb 0xf(%rip)
dcbe(4): cmp $0xffffffff,%rax
dcc2(6): jz 0xfffffb1f(%rip)
dcc8(3): mov %rax,%r12
dccb(7): cmp 0xfffffc18(%rbp),%r15
dcd2(3): setz %bl
dcd5(3): test %r15,%r15
dcd8(6): jz 0x388(%rip)
dcde(2): test %bl,%bl
dce0(6): jnz 0x380(%rip)
dce6(3): mov %r12,%rsi
dce9(3): mov %r15,%rdi
dcec(5): call 0xffff4d34(%rip)
dcf1(3): test %rax,%rax
dcf4(6): jz 0xfffffaed(%rip)
dcfa(3): mov %rax,%r15
dcfd(5): jmp 0xfffffe83(%rip)
dd02(6): nop 0x0(%rax,%rax,1)
dd08(4): mov 0x50(%r13),%rax
dd0c(4): lea 0x0(%r15,%r14,1),%rdi
dd10(4): shl/sal $0x5,%rax
dd14(7): add 0xfffffc58(%rbp),%rax
dd1b(4): mov 0x10(%rax),%r9d
dd1f(6): mov 0xfffffc20(%rbp),%eax
dd25(3): cmp $0x1,%eax
dd28(6): jz 0x238(%rip)
dd2e(3): cmp $0x2,%eax
dd31(6): jz 0x277(%rip)
dd37(4): sub $0x8,%rsp
dd3b(6): push 0xfffffc10(%rbp)
dd41(7): mov 0xfffffc28(%rbp),%r8
dd48(7): mov $0xffffffff,%rcx
dd4f(5): mov $0x1,%edx
dd54(3): mov %r10,%rsi
dd57(2): xor %eax,%eax
dd59(7): mov %r10,0xfffffbd0(%rbp)
dd60(5): call 0xffff49a0(%rip)
dd65(1): pop %rdx
dd66(1): pop %rcx
dd67(6): mov 0xfffffc44(%rbp),%ecx
dd6d(7): mov 0xfffffbd0(%rbp),%r10
dd74(2): test %ecx,%ecx
dd76(6): jns 0xfffffece(%rip)
dd7c(7): mov 0xfffffc08(%rbp),%rdi
dd83(4): cmp $0x0,0x1(%rdi)
dd87(6): jnz 0x341(%rip)
dd8d(2): test %eax,%eax
dd8f(6): jns 0xfffffecf(%rip)
dd95(7): mov 0xfffffc38(%rbp),%rax
dd9c(2): mov (%rax),%ebx
dd9e(2): test %ebx,%ebx
dda0(2): jnz 0x20(%rip)
dda2(5): movzx 0x48(%r13),%eax
dda7(5): mov $0x16,%ebx
ddac(3): and $0xef,%eax
ddaf(2): cmp $0x63,%al
ddb1(5): mov $0x54,%eax
ddb6(3): cmove %eax,%ebx
ddb9(7): nop 0x0(%rax)
ddc0(7): cmp 0xfffffc18(%rbp),%r15
ddc7(2): jz 0xb(%rip)
ddc9(3): test %r15,%r15
ddcc(6): jnz 0x7b0(%rip)
ddd2(7): mov 0xfffffbe0(%rbp),%rax
ddd9(3): test %rax,%rax
dddc(2): jz 0xa(%rip)
ddde(3): mov %rax,%rdi
dde1(5): call 0xffff492f(%rip)
dde6(7): mov 0xfffffbf8(%rbp),%rax
dded(7): mov 0xfffffd48(%rbp),%rdi
ddf4(4): add $0x20,%rax
ddf8(3): cmp %rax,%rdi
ddfb(2): jz 0x7(%rip)
ddfd(5): call 0xffff4913(%rip)
de02(7): mov 0xfffffbf0(%rbp),%rax
de09(7): mov 0xfffffc58(%rbp),%rdi
de10(4): add $0x10,%rax
de14(3): cmp %rax,%rdi
de17(2): jz 0x7(%rip)
de19(5): call 0xffff48f7(%rip)
de1e(7): mov 0xfffffc38(%rbp),%rax
de25(3): xor %r15d,%r15d
de28(2): mov %ebx,(%rax)
de2a(5): jmp 0xfffffa25(%rip)
de2f(1): nop 
de30(4): mov 0x50(%r13),%rax
de34(4): lea 0x0(%r15,%r14,1),%rdi
de38(4): shl/sal $0x5,%rax
de3c(7): add 0xfffffc58(%rbp),%rax
de43(3): fld 0x10(%rax),%st0
de46(6): mov 0xfffffc20(%rbp),%eax
de4c(3): cmp $0x1,%eax
de4f(6): jz 0x631(%rip)
de55(3): cmp $0x2,%eax
de58(6): jnz 0x4c8(%rip)
de5e(6): mov 0xfffffc4c(%rbp),%eax
de64(4): sub $0x8,%rsp
de68(6): push 0xfffffc10(%rbp)
de6e(7): mov 0xfffffc48(%rbp),%r9d
de75(7): mov 0xfffffc28(%rbp),%r8
de7c(3): mov %r10,%rsi
de7f(4): sub $0x18,%rsp
de83(7): mov $0xffffffff,%rcx
de8a(5): mov $0x1,%edx
de8f(4): fstp %st0,0x8(%rsp)
de93(1): push %rax
de94(2): xor %eax,%eax
de96(7): mov %r10,0xfffffbd0(%rbp)
de9d(5): call 0xffff4863(%rip)
dea2(4): add $0x30,%rsp
dea6(7): mov 0xfffffbd0(%rbp),%r10
dead(5): jmp 0xfffffd89(%rip)
deb2(6): nop 0x0(%rax,%rax,1)
deb8(4): mov 0x50(%r13),%rax
debc(4): lea 0x0(%r15,%r14,1),%rdi
dec0(4): shl/sal $0x5,%rax
dec4(7): add 0xfffffc58(%rbp),%rax
decb(5): movsd 0x10(%rax),%xmm0
ded0(6): mov 0xfffffc20(%rbp),%eax
ded6(3): cmp $0x1,%eax
ded9(6): jz 0x597(%rip)
dedf(3): cmp $0x2,%eax
dee2(6): jnz 0x3fe(%rip)
dee8(6): mov 0xfffffc4c(%rbp),%eax
deee(6): push 0xfffffc10(%rbp)
def4(1): push %rax
def5(7): mov 0xfffffc48(%rbp),%r9d
defc(7): mov 0xfffffc28(%rbp),%r8
df03(3): mov %r10,%rsi
df06(7): mov $0xffffffff,%rcx
df0d(5): mov $0x1,%edx
df12(5): mov $0x1,%eax
df17(7): mov %r10,0xfffffbd0(%rbp)
df1e(5): call 0xffff47e2(%rip)
df23(2): pop %r8
df25(7): mov 0xfffffbd0(%rbp),%r10
df2c(2): pop %r9
df2e(5): jmp 0xfffffd08(%rip)
df33(5): nop 0x0(%rax,%rax,1)
df38(4): mov 0x50(%r13),%rax
df3c(4): lea 0x0(%r15,%r14,1),%rdi
df40(4): shl/sal $0x5,%rax
df44(7): add 0xfffffc58(%rbp),%rax
df4b(5): movzx 0x10(%rax),%r9d
df50(6): mov 0xfffffc20(%rbp),%eax
df56(3): cmp $0x1,%eax
df59(6): jnz 0xfffffdd5(%rip)
df5f(1): nop 
df60(6): push 0xfffffc10(%rbp)
df66(2): push %r9
df68(7): mov 0xfffffc48(%rbp),%r9d
df6f(5): jmp 0xfffffdd2(%rip)
df74(4): nop 0x0(%rax)
df78(4): mov 0x50(%r13),%rax
df7c(4): lea 0x0(%r15,%r14,1),%rdi
df80(4): shl/sal $0x5,%rax
df84(7): add 0xfffffc58(%rbp),%rax
df8b(5): movsx 0x10(%rax),%r9d
df90(6): mov 0xfffffc20(%rbp),%eax
df96(3): cmp $0x1,%eax
df99(2): jz 0xffffffc7(%rip)
df9b(3): cmp $0x2,%eax
df9e(6): jnz 0xfffffd99(%rip)
dfa4(4): nop 0x0(%rax)
dfa8(4): sub $0x8,%rsp
dfac(6): push 0xfffffc10(%rbp)
dfb2(2): push %r9
dfb4(6): mov 0xfffffc4c(%rbp),%eax
dfba(1): push %rax
dfbb(7): mov 0xfffffc48(%rbp),%r9d
dfc2(7): mov 0xfffffc28(%rbp),%r8
dfc9(3): mov %r10,%rsi
dfcc(7): mov $0xffffffff,%rcx
dfd3(5): mov $0x1,%edx
dfd8(2): xor %eax,%eax
dfda(7): mov %r10,0xfffffbd0(%rbp)
dfe1(5): call 0xffff471f(%rip)
dfe6(4): add $0x20,%rsp
dfea(7): mov 0xfffffbd0(%rbp),%r10
dff1(5): jmp 0xfffffc45(%rip)
dff6(a): nop 0x0(%rax,%rax,1)
e000(4): mov 0x50(%r13),%rax
e004(4): lea 0x0(%r15,%r14,1),%rdi
e008(4): shl/sal $0x5,%rax
e00c(7): add 0xfffffc58(%rbp),%rax
e013(5): movzx 0x10(%rax),%r9d
e018(6): mov 0xfffffc20(%rbp),%eax
e01e(3): cmp $0x1,%eax
e021(6): jnz 0xfffffd0d(%rip)
e027(5): jmp 0xffffff39(%rip)
e02c(4): nop 0x0(%rax)
e030(4): mov 0x50(%r13),%rax
e034(4): lea 0x0(%r15,%r14,1),%rdi
e038(4): shl/sal $0x5,%rax
e03c(7): add 0xfffffc58(%rbp),%rax
e043(5): movsx 0x10(%rax),%r9d
e048(6): mov 0xfffffc20(%rbp),%eax
e04e(3): cmp $0x1,%eax
e051(6): jnz 0xfffffcdd(%rip)
e057(5): jmp 0xffffff09(%rip)
e05c(4): nop 0x0(%rax)
e060(3): mov %r12,%rdi
e063(5): call 0xffff496d(%rip)
e068(3): test %rax,%rax
e06b(3): mov %rax,%rcx
e06e(6): jz 0xfffff773(%rip)
e074(3): test %r14,%r14
e077(6): jz 0xb9(%rip)
e07d(2): test %bl,%bl
e07f(6): jz 0xb1(%rip)
e085(3): mov %r15,%rsi
e088(3): mov %r14,%rdx
e08b(3): mov %rax,%rdi
e08e(5): call 0xffff48e2(%rip)
e093(3): mov %rax,%r15
e096(5): jmp 0xfffffaea(%rip)
e09b(5): nop 0x0(%rax,%rax,1)
e0a0(4): sub $0x8,%rsp
e0a4(6): push 0xfffffc10(%rbp)
e0aa(2): push %r9
e0ac(5): jmp 0xffffff08(%rip)
e0b1(7): nop 0x0(%rax)
e0b8(6): push 0xfffffc10(%rbp)
e0be(2): push %r9
e0c0(5): jmp 0xfffffea8(%rip)
e0c5(3): nop (%rax)
e0c8(4): mov $0x0,0x1(%rdi)
e0cc(5): jmp 0xfffffab4(%rip)
e0d1(7): nop 0x0(%rax)
e0d8(4): cmp $0xffffffff,%rax
e0dc(6): jnz 0x4ba(%rip)
e0e2(3): mov %r14,%rax
e0e5(4): add $0x1,%rax
e0e9(3): mov %rax,%rbx
e0ec(6): jnb 0x8c(%rip)
e0f2(4): cmp $0xffffffff,%r12
e0f6(6): jnz 0xfffff6df(%rip)
e0fc(3): mov %r12,%rbx
e0ff(5): mov $0x25,0x0(%r15,%r14,1)
e104(4): mov 0x8(%r13),%r8
e108(4): add $0x58,%r13
e10c(4): mov 0x0(%r13),%rcx
e110(8): add $0x1,0xfffffc00(%rbp)
e118(3): cmp %r8,%rcx
e11b(6): jnz 0xfffff69e(%rip)
e121(3): mov %rbx,%r14
e124(5): jmp 0xfffff7ff(%rip)
e129(7): nop 0x0(%rax)
e130(3): mov %rcx,%r15
e133(5): jmp 0xfffffa4d(%rip)
e138(5): call 0xffff4618(%rip)
e13d(7): mov %rax,0xfffffc38(%rbp)
e144(5): jmp 0xfffff6c3(%rip)
e149(7): nop 0x0(%rax)
e150(2): mov %edi,%edx
e152(3): sub $0x12,%edx
e155(3): cmp $0x4,%edx
e158(6): jnbe 0x43e(%rip)
e15e(7): lea 0x3e93(%rip),%rdi
e165(4): mov 0x10(%rax),%rax
e169(4): movsxd 0x0(%rdi,%rdx,4),%rdx
e16d(3): add %rdi,%rdx
e170(2): jmp %rdx
e172(6): nop 0x0(%rax,%rax,1)
e178(3): cmp %rax,%r12
e17b(2): jnb 0xffffff84(%rip)
e17d(3): test %r12,%r12
e180(6): jnz 0x3d0(%rip)
e186(4): cmp $0xc,%rax
e18a(6): jnbe 0x3d8(%rip)
e190(6): mov $0xc,%r12d
e196(7): cmp 0xfffffc18(%rbp),%r15
e19d(3): setz %dl
e1a0(3): test %r15,%r15
e1a3(6): jz 0x26d(%rip)
e1a9(2): test %dl,%dl
e1ab(6): jnz 0x265(%rip)
e1b1(3): mov %r12,%rsi
e1b4(3): mov %r15,%rdi
e1b7(5): call 0xffff4869(%rip)
e1bc(3): test %rax,%rax
e1bf(6): jz 0xfc(%rip)
e1c5(3): mov %rax,%r15
e1c8(5): jmp 0xffffff37(%rip)
e1cd(3): nop (%rax)
e1d0(a): mov $0x0,0xfffffc20(%rbp)
e1da(5): jmp 0xfffff8ed(%rip)
e1df(1): nop 
e1e0(6): js 0xfffff5f5(%rip)
e1e6(3): add %r12,%r12
e1e9(3): cmp %rax,%r12
e1ec(6): jnb 0xfffff6da(%rip)
e1f2(4): cmp $0xffffffff,%rax
e1f6(6): jz 0xfffff5df(%rip)
e1fc(7): cmp 0xfffffc18(%rbp),%r15
e203(3): mov %rax,%r12
e206(3): setz %dl
e209(3): test %r15,%r15
e20c(6): jnz 0xfffff6cd(%rip)
e212(6): nop 0x0(%rax,%rax,1)
e218(3): mov %r12,%rdi
e21b(7): mov %r8,0xfffffc20(%rbp)
e222(6): mov %dl,0xfffffc30(%rbp)
e228(7): mov %rcx,0xfffffc38(%rbp)
e22f(5): call 0xffff47a1(%rip)
e234(3): test %rax,%rax
e237(3): mov %rax,%r9
e23a(7): mov 0xfffffc38(%rbp),%rcx
e241(7): movzx 0xfffffc30(%rbp),%edx
e248(7): mov 0xfffffc20(%rbp),%r8
e24f(6): jz 0xfffff586(%rip)
e255(3): test %rbx,%rbx
e258(6): jz 0x208(%rip)
e25e(2): test %dl,%dl
e260(6): jz 0x200(%rip)
e266(3): mov %r15,%rsi
e269(3): mov %rbx,%rdx
e26c(3): mov %rax,%rdi
e26f(7): mov %r8,0xfffffc30(%rbp)
e276(7): mov %rcx,0xfffffc38(%rbp)
e27d(5): call 0xffff46f3(%rip)
e282(7): mov 0xfffffc38(%rbp),%rcx
e289(3): mov %rax,%r15
e28c(7): mov 0xfffffc30(%rbp),%r8
e293(5): jmp 0xfffff681(%rip)
e298(8): nop 0x0(%rax,%rax,1)
e2a0(3): mov %r12,%r14
e2a3(5): jmp 0xfffff671(%rip)
e2a8(8): nop 0x0(%rax,%rax,1)
e2b0(3): mov %r14,(%rax)
e2b3(3): mov %r14,%rbx
e2b6(5): jmp 0xfffffe4e(%rip)
e2bb(5): call 0xffff4495(%rip)
e2c0(7): mov %rax,0xfffffc38(%rbp)
e2c7(9): nop 0x0(%rax,%rax,1)
e2d0(3): mov %r15,%rdi
e2d3(5): call 0xffff443d(%rip)
e2d8(5): jmp 0xfffff51b(%rip)
e2dd(3): nop (%rax)
e2e0(7): mov 0xfffffc10(%rbp),%r9
e2e7(7): mov 0xfffffc28(%rbp),%r8
e2ee(3): mov %r10,%rsi
e2f1(7): mov $0xffffffff,%rcx
e2f8(5): mov $0x1,%edx
e2fd(5): mov $0x1,%eax
e302(7): mov %r10,0xfffffbd0(%rbp)
e309(5): call 0xffff43f7(%rip)
e30e(7): mov 0xfffffbd0(%rbp),%r10
e315(5): jmp 0xfffff921(%rip)
e31a(6): nop 0x0(%rax,%rax,1)
e320(4): sub $0x10,%rsp
e324(7): mov 0xfffffc10(%rbp),%r9
e32b(3): fstp %st0,(%rsp)
e32e(5): jmp 0xfffff8db(%rip)
e333(5): nop 0x0(%rax,%rax,1)
e338(6): js 0xfffff49d(%rip)
e33e(3): add %r12,%r12
e341(3): cmp %rax,%r12
e344(6): jnb 0xfffff7e5(%rip)
e34a(6): nop 0x0(%rax,%rax,1)
e350(3): test %rdx,%rdx
e353(6): jnz 0xfffff482(%rip)
e359(4): cmp $0xffffffff,%rax
e35d(6): jz 0xfffff478(%rip)
e363(7): cmp 0xfffffc18(%rbp),%r15
e36a(3): mov %rax,%r12
e36d(3): setz %dl
e370(3): test %r15,%r15
e373(6): jnz 0xfffff7c9(%rip)
e379(7): nop 0x0(%rax)
e380(3): mov %r12,%rdi
e383(6): mov %dl,0xfffffc38(%rbp)
e389(5): call 0xffff4647(%rip)
e38e(3): test %rax,%rax
e391(3): mov %rax,%rcx
e394(7): movzx 0xfffffc38(%rbp),%edx
e39b(6): jz 0xfffff43a(%rip)
e3a1(3): test %r14,%r14
e3a4(6): jz 0x19c(%rip)
e3aa(2): test %dl,%dl
e3ac(6): jz 0x194(%rip)
e3b2(3): mov %r15,%rsi
e3b5(3): mov %r14,%rdx
e3b8(3): mov %rax,%rdi
e3bb(5): call 0xffff45b5(%rip)
e3c0(3): mov %rax,%r15
e3c3(5): jmp 0xfffff798(%rip)
e3c8(8): nop 0x0(%rax,%rax,1)
e3d0(3): mov $0x4c,(%rbx)
e3d3(4): add $0x1,%rbx
e3d7(5): jmp 0xfffff6b4(%rip)
e3dc(4): nop 0x0(%rax)
e3e0(3): mov %r14b,(%rax)
e3e3(3): mov %r14,%rbx
e3e6(5): jmp 0xfffffd1e(%rip)
e3eb(5): nop 0x0(%rax,%rax,1)
e3f0(3): mov %r14d,(%rax)
e3f3(3): mov %r14,%rbx
e3f6(5): jmp 0xfffffd0e(%rip)
e3fb(5): nop 0x0(%rax,%rax,1)
e400(4): mov %r14w,(%rax)
e404(3): mov %r14,%rbx
e407(5): jmp 0xfffffcfd(%rip)
e40c(4): nop 0x0(%rax)
e410(3): mov %r12,%rdi
e413(6): mov %dl,0xfffffc38(%rbp)
e419(5): call 0xffff45b7(%rip)
e41e(3): test %rax,%rax
e421(3): mov %rax,%rcx
e424(7): movzx 0xfffffc38(%rbp),%edx
e42b(6): jz 0xfffff3aa(%rip)
e431(3): test %r14,%r14
e434(6): jz 0x140(%rip)
e43a(2): test %dl,%dl
e43c(6): jz 0x138(%rip)
e442(3): mov %r15,%rsi
e445(3): mov %r14,%rdx
e448(3): mov %rax,%rdi
e44b(5): call 0xffff4525(%rip)
e450(3): mov %rax,%r15
e453(5): jmp 0xfffffcac(%rip)
e458(8): nop 0x0(%rax,%rax,1)
e460(3): mov %r9,%r15
e463(5): jmp 0xfffff4b1(%rip)
e468(8): nop 0x0(%rax,%rax,1)
e470(4): sub $0x8,%rsp
e474(6): push 0xfffffc10(%rbp)
e47a(5): jmp 0xfffffa7b(%rip)
e47f(1): nop 
e480(4): sub $0x8,%rsp
e484(6): push 0xfffffc10(%rbp)
e48a(4): sub $0x10,%rsp
e48e(3): fstp %st0,(%rsp)
e491(5): jmp 0xfffffb2a(%rip)
e496(a): nop 0x0(%rax,%rax,1)
e4a0(7): mov 0xfffffc38(%rbp),%rax
e4a7(6): mov 0xfffffbdc(%rbp),%edi
e4ad(3): movsxd %ecx,%rbx
e4b0(3): add %r14,%rbx
e4b3(2): mov %edi,(%rax)
e4b5(5): jmp 0xfffffc4f(%rip)
e4ba(6): nop 0x0(%rax,%rax,1)
e4c0(7): cmp 0xfffffc18(%rbp),%r15
e4c7(2): jz 0xb(%rip)
e4c9(3): test %r15,%r15
e4cc(6): jnz 0xbd(%rip)
e4d2(7): mov 0xfffffbe0(%rbp),%rax
e4d9(3): test %rax,%rax
e4dc(2): jz 0xa(%rip)
e4de(3): mov %rax,%rdi
e4e1(5): call 0xffff422f(%rip)
e4e6(7): mov 0xfffffbf8(%rbp),%rax
e4ed(7): mov 0xfffffd48(%rbp),%rdi
e4f4(4): add $0x20,%rax
e4f8(3): cmp %rax,%rdi
e4fb(2): jz 0x7(%rip)
e4fd(5): call 0xffff4213(%rip)
e502(7): mov 0xfffffbf0(%rbp),%rax
e509(7): mov 0xfffffc58(%rbp),%rdi
e510(4): add $0x10,%rax
e514(3): cmp %rax,%rdi
e517(2): jz 0x7(%rip)
e519(5): call 0xffff41f7(%rip)
e51e(7): mov 0xfffffc38(%rbp),%rax
e525(3): xor %r15d,%r15d
e528(6): mov $0x4b,(%rax)
e52e(5): jmp 0xfffff321(%rip)
e533(5): nop 0x0(%rax,%rax,1)
e538(3): xor %r15d,%r15d
e53b(5): jmp 0xfffff314(%rip)
e540(3): mov %rcx,%r15
e543(5): jmp 0xfffff618(%rip)
e548(8): nop 0x0(%rax,%rax,1)
e550(6): js 0xfffff285(%rip)
e556(3): add %r12,%r12
e559(3): cmp %rax,%r12
e55c(6): jnb 0xfffffc3a(%rip)
e562(4): cmp $0xffffffff,%rax
e566(6): jz 0xfffff26f(%rip)
e56c(3): mov %rax,%r12
e56f(5): jmp 0xfffffc27(%rip)
e574(3): mov %rcx,%r15
e577(5): jmp 0xfffffb88(%rip)
e57c(3): mov %r15,%rdi
e57f(5): call 0xffff4191(%rip)
e584(5): jmp 0xfffff84e(%rip)
e589(3): mov %r15,%rdi
e58c(5): call 0xffff4184(%rip)
e591(5): jmp 0xffffff41(%rip)
e596(5): call 0xffff41aa(%rip)
e59b(5): nop 0x0(%rax,%rax,1)
e5a0(7): mov 0xfffffbf8(%rbp),%rax
e5a7(7): mov 0xfffffd48(%rbp),%rdi
e5ae(4): add $0x20,%rax
e5b2(3): cmp %rax,%rdi
e5b5(2): jz 0x7(%rip)
e5b7(5): call 0xffff4159(%rip)
e5bc(7): mov 0xfffffbf0(%rbp),%rax
e5c3(7): mov 0xfffffc58(%rbp),%rdi
e5ca(4): add $0x10,%rax
e5ce(3): cmp %rax,%rdi
e5d1(2): jz 0x7(%rip)
e5d3(5): call 0xffff413d(%rip)
e5d8(5): call 0xffff4178(%rip)
e5dd(3): xor %r15d,%r15d
e5e0(6): mov $0x16,(%rax)
e5e6(5): jmp 0xfffff269(%rip)
e5eb(3): mov %r14,%rbx
e5ee(2): xor %eax,%eax
e5f0(4): add $0x1,%rbx
e5f4(6): jb 0x10c(%rip)
e5fa(3): cmp %rbx,%r12
e5fd(2): jnb 0x4f(%rip)
e5ff(3): test %r12,%r12
e602(6): jnz 0x137(%rip)
e608(4): cmp $0xc,%rbx
e60c(6): jnbe 0x112(%rip)
e612(6): mov $0xc,%r12d
e618(7): cmp 0xfffffc18(%rbp),%r15
e61f(4): setz %r13b
e623(3): test %r15,%r15
e626(6): jz 0xa6(%rip)
e62c(3): test %r13b,%r13b
e62f(6): jnz 0x9d(%rip)
e635(3): mov %r12,%rsi
e638(3): mov %r15,%rdi
e63b(5): call 0xffff43e5(%rip)
e640(3): test %rax,%rax
e643(6): jz 0xfffffc78(%rip)
e649(3): mov %rax,%r15
e64c(7): cmp 0xfffffc18(%rbp),%r15
e653(5): mov $0x0,0x0(%r15,%r14,1)
e658(2): jz 0x19(%rip)
e65a(3): cmp %rbx,%r12
e65d(2): jbe 0x14(%rip)
e65f(3): mov %r15,%rdi
e662(3): mov %rbx,%rsi
e665(5): call 0xffff43bb(%rip)
e66a(3): test %rax,%rax
e66d(4): cmovne %rax,%r15
e671(7): mov 0xfffffbe0(%rbp),%rax
e678(3): test %rax,%rax
e67b(2): jz 0xa(%rip)
e67d(3): mov %rax,%rdi
e680(5): call 0xffff4090(%rip)
e685(7): mov 0xfffffbf8(%rbp),%rax
e68c(7): mov 0xfffffd48(%rbp),%rdi
e693(4): add $0x20,%rax
e697(3): cmp %rax,%rdi
e69a(2): jz 0x7(%rip)
e69c(5): call 0xffff4074(%rip)
e6a1(7): mov 0xfffffbf0(%rbp),%rax
e6a8(7): mov 0xfffffc58(%rbp),%rdi
e6af(4): add $0x10,%rax
e6b3(3): cmp %rax,%rdi
e6b6(2): jz 0x7(%rip)
e6b8(5): call 0xffff4058(%rip)
e6bd(7): mov 0xfffffbe8(%rbp),%rax
e6c4(3): mov %r14,(%rax)
e6c7(5): jmp 0xfffff188(%rip)
e6cc(3): mov %r12,%rdi
e6cf(5): call 0xffff4301(%rip)
e6d4(3): test %rax,%rax
e6d7(3): mov %rax,%rcx
e6da(6): jz 0xfffff0fb(%rip)
e6e0(3): test %r14,%r14
e6e3(2): jz 0x6d(%rip)
e6e5(3): test %r13b,%r13b
e6e8(2): jz 0x68(%rip)
e6ea(3): mov %r15,%rsi
e6ed(3): mov %r14,%rdx
e6f0(3): mov %rax,%rdi
e6f3(5): call 0xffff427d(%rip)
e6f8(3): mov %rax,%r15
e6fb(5): jmp 0xffffff51(%rip)
e700(4): cmp $0xffffffff,%r12
e704(5): mov $0x1,%eax
e709(6): jz 0xffffff43(%rip)
e70f(3): test %r12,%r12
e712(6): jz 0xfffff0c3(%rip)
e718(6): js 0xfffff0bd(%rip)
e71e(3): test %rax,%rax
e721(6): jnz 0xfffff0b4(%rip)
e727(4): cmp $0xffffffff,%rbx
e72b(6): jz 0xfffff0aa(%rip)
e731(3): mov %rbx,%r12
e734(5): jmp 0xfffffee4(%rip)
e739(6): js 0xfffff09c(%rip)
e73f(3): add %r12,%r12
e742(3): cmp %rbx,%r12
e745(6): jnb 0xfffffed3(%rip)
e74b(2): jmp 0xffffffd3(%rip)
e74d(3): nop (%rax)
e750(3): mov %rcx,%r15
e753(5): jmp 0xfffffef9(%rip)
e758(4): cmp $0xffffffff,%r12
e75c(6): jz 0xfffff424(%rip)
e762(5): jmp 0xfffff07f(%rip)
e767(5): call 0xffff40c9(%rip)
e76c(4): cmp $0xffffffff,%r12
e770(5): mov $0x1,%edx
e775(6): jz 0xfffff3e6(%rip)
e77b(3): test %r12,%r12
e77e(6): jz 0xfffff057(%rip)
e784(6): jns 0xfffffbcc(%rip)
e78a(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
e790(4): cmp $0x0,(%rsi)
e794(4): mov 0x8(%rsi),%rax
e798(2): jz 0x65(%rip)
e79a(7): lea 0x387f(%rip),%r8
e7a1(7): lea 0x38d8(%rip),%r10
e7a8(7): lea 0x385d(%rip),%r9
e7af(2): xor %ecx,%ecx
e7b1(7): nop 0x0(%rax)
e7b8(3): cmp $0x16,(%rax)
e7bb(2): jnbe 0x45(%rip)
e7bd(2): mov (%rax),%edx
e7bf(4): movsxd 0x0(%r8,%rdx,4),%rdx
e7c3(3): add %r8,%rdx
e7c6(2): jmp %rdx
e7c8(8): nop 0x0(%rax,%rax,1)
e7d0(4): mov 0x8(%rdi),%rdx
e7d4(4): add $0xf,%rdx
e7d8(4): and $0xfffffff0,%rdx
e7dc(4): lea 0x10(%rdx),%r11
e7e0(4): mov %r11,0x8(%rdi)
e7e4(2): fld (%rdx),%st0
e7e6(3): fstp %st0,0x10(%rax)
e7e9(7): nop 0x0(%rax)
e7f0(4): add $0x1,%rcx
e7f4(4): add $0x20,%rax
e7f8(3): cmp %rcx,(%rsi)
e7fb(2): jnbe 0xffffffbd(%rip)
e7fd(2): xor %eax,%eax
e7ff(1): ret near (%rsp)
e800(5): mov $0xffffffff,%eax
e805(1): ret near (%rsp)
e806(3): mov (%rdi),%r11d
e809(4): cmp $0x2f,%r11d
e80d(6): jnbe 0x13d(%rip)
e813(3): mov %r11d,%edx
e816(4): add 0x10(%rdi),%rdx
e81a(4): add $0x8,%r11d
e81e(3): mov %r11d,(%rdi)
e821(3): mov (%rdx),%rdx
e824(4): mov %rdx,0x10(%rax)
e828(2): jmp 0xffffffc8(%rip)
e82a(3): mov (%rdi),%r11d
e82d(4): cmp $0x2f,%r11d
e831(6): jnbe 0x13b(%rip)
e837(3): mov %r11d,%edx
e83a(4): add 0x10(%rdi),%rdx
e83e(4): add $0x8,%r11d
e842(3): mov %r11d,(%rdi)
e845(2): mov (%rdx),%edx
e847(3): mov %edx,0x10(%rax)
e84a(2): jmp 0xffffffa6(%rip)
e84c(3): mov (%rdi),%r11d
e84f(4): cmp $0x2f,%r11d
e853(6): jnbe 0x108(%rip)
e859(3): mov %r11d,%edx
e85c(4): add 0x10(%rdi),%rdx
e860(4): add $0x8,%r11d
e864(3): mov %r11d,(%rdi)
e867(2): mov (%rdx),%edx
e869(3): mov %dl,0x10(%rax)
e86c(2): jmp 0xffffff84(%rip)
e86e(3): mov (%rdi),%r11d
e871(4): cmp $0x2f,%r11d
e875(6): jnbe 0xa5(%rip)
e87b(3): mov %r11d,%edx
e87e(4): add 0x10(%rdi),%rdx
e882(4): add $0x8,%r11d
e886(3): mov %r11d,(%rdi)
e889(2): mov (%rdx),%edx
e88b(4): mov %dx,0x10(%rax)
e88f(5): jmp 0xffffff61(%rip)
e894(3): mov (%rdi),%r11d
e897(4): cmp $0x2f,%r11d
e89b(6): jnbe 0x90(%rip)
e8a1(3): mov %r11d,%edx
e8a4(4): add 0x10(%rdi),%rdx
e8a8(4): add $0x8,%r11d
e8ac(3): mov %r11d,(%rdi)
e8af(3): mov (%rdx),%rdx
e8b2(3): test %rdx,%rdx
e8b5(4): cmove %r9,%rdx
e8b9(4): mov %rdx,0x10(%rax)
e8bd(5): jmp 0xffffff33(%rip)
e8c2(4): mov 0x4(%rdi),%r11d
e8c6(7): cmp $0xaf,%r11d
e8cd(6): jnbe 0xb0(%rip)
e8d3(3): mov %r11d,%edx
e8d6(4): add 0x10(%rdi),%rdx
e8da(4): add $0x10,%r11d
e8de(4): mov %r11d,0x4(%rdi)
e8e2(4): movsd (%rdx),%xmm0
e8e6(5): movsd %xmm0,0x10(%rax)
e8eb(5): jmp 0xffffff05(%rip)
e8f0(3): mov (%rdi),%r11d
e8f3(4): cmp $0x2f,%r11d
e8f7(2): jnbe 0x45(%rip)
e8f9(3): mov %r11d,%edx
e8fc(4): add 0x10(%rdi),%rdx
e900(4): add $0x8,%r11d
e904(3): mov %r11d,(%rdi)
e907(3): mov (%rdx),%rdx
e90a(3): test %rdx,%rdx
e90d(4): cmove %r10,%rdx
e911(4): mov %rdx,0x10(%rax)
e915(5): jmp 0xfffffedb(%rip)
e91a(4): mov 0x8(%rdi),%rdx
e91e(4): lea 0x8(%rdx),%r11
e922(4): mov %r11,0x8(%rdi)
e926(5): jmp 0xffffff63(%rip)
e92b(4): mov 0x8(%rdi),%rdx
e92f(4): lea 0x8(%rdx),%r11
e933(4): mov %r11,0x8(%rdi)
e937(5): jmp 0xffffff78(%rip)
e93c(4): mov 0x8(%rdi),%rdx
e940(4): lea 0x8(%rdx),%r11
e944(4): mov %r11,0x8(%rdi)
e948(2): jmp 0xffffffbf(%rip)
e94a(4): mov 0x8(%rdi),%rdx
e94e(4): lea 0x8(%rdx),%r11
e952(4): mov %r11,0x8(%rdi)
e956(5): jmp 0xfffffecb(%rip)
e95b(4): mov 0x8(%rdi),%rdx
e95f(4): lea 0x8(%rdx),%r11
e963(4): mov %r11,0x8(%rdi)
e967(5): jmp 0xffffff00(%rip)
e96c(4): mov 0x8(%rdi),%rdx
e970(4): lea 0x8(%rdx),%r11
e974(4): mov %r11,0x8(%rdi)
e978(5): jmp 0xfffffecd(%rip)
e97d(4): mov 0x8(%rdi),%rdx
e981(4): lea 0x8(%rdx),%r11
e985(4): mov %r11,0x8(%rdi)
e989(5): jmp 0xffffff59(%rip)

"printf_parse" :
e990(2): push %r15
e992(2): push %r14
e994(4): lea 0x20(%rsi),%rcx
e998(2): push %r13
e99a(2): push %r12
e99c(4): lea 0x10(%rdx),%rax
e9a0(1): push %rbp
e9a1(1): push %rbx
e9a2(3): mov %rsi,%r14
e9a5(3): mov %rdx,%r15
e9a8(2): xor %ebx,%ebx
e9aa(6): mov $0x7,%r9d
e9b0(4): sub $0x58,%rsp
e9b4(6): mov $0x7,%r10d
e9ba(7): mov $0x0,(%rsi)
e9c1(4): mov %rcx,0x8(%rsi)
e9c5(5): mov %rcx,0x28(%rsp)
e9ca(7): mov $0xffffffff,%r8
e9d1(7): mov $0x0,(%rdx)
e9d8(5): mov %rax,0x8(%rsp)
e9dd(4): mov %rax,0x8(%rdx)
e9e1(9): mov $0x0,0x18(%rsp)
e9ea(9): mov $0x0,0x10(%rsp)
e9f3(9): mov $0x0,0x20(%rsp)
e9fc(2): jmp 0xf(%rip)
e9fe(2): nop 
ea00(2): cmp $0x25,%al
ea02(4): lea 0x1(%rdi),%rbp
ea06(2): jz 0x42(%rip)
ea08(3): mov %rbp,%rdi
ea0b(3): movzx (%rdi),%eax
ea0e(2): test %al,%al
ea10(2): jnz 0xfffffff0(%rip)
ea12(4): lea 0x0(%rbx,%rbx,4),%rax
ea16(4): lea 0x0(%rbx,%rax,2),%rax
ea1a(4): mov %rdi,0x0(%rcx,%rax,8)
ea1e(5): mov 0x10(%rsp),%rax
ea23(4): mov %rax,0x10(%r14)
ea27(5): mov 0x18(%rsp),%rax
ea2c(4): mov %rax,0x18(%r14)
ea30(2): xor %eax,%eax
ea32(4): add $0x58,%rsp
ea36(1): pop %rbx
ea37(1): pop %rbp
ea38(2): pop %r12
ea3a(2): pop %r13
ea3c(2): pop %r14
ea3e(2): pop %r15
ea40(1): ret near (%rsp)
ea41(7): nop 0x0(%rax)
ea48(4): lea 0x0(%rbx,%rbx,4),%rax
ea4c(3): mov %r8,%r13
ea4f(4): lea 0x0(%rbx,%rax,2),%rax
ea53(4): lea 0x0(%rcx,%rax,8),%r12
ea57(4): mov %rdi,(%r12)
ea5b(9): mov $0x0,0x10(%r12)
ea64(9): mov $0x0,0x18(%r12)
ea6d(9): mov $0x0,0x20(%r12)
ea76(5): mov %r8,0x28(%r12)
ea7b(9): mov $0x0,0x30(%r12)
ea84(9): mov $0x0,0x38(%r12)
ea8d(5): mov %r8,0x40(%r12)
ea92(5): mov %r8,0x50(%r12)
ea97(4): movzx 0x1(%rdi),%ebx
ea9b(3): lea 0xffffffd0(%rbx),%eax
ea9e(2): cmp $0x9,%al
eaa0(2): jnbe 0x3e(%rip)
eaa2(5): jmp 0x438(%rip)
eaa7(9): nop 0x0(%rax,%rax,1)
eab0(3): cmp $0x2d,%bl
eab3(2): jz 0x45(%rip)
eab5(3): cmp $0x2b,%bl
eab8(2): jz 0x48(%rip)
eaba(3): cmp $0x20,%bl
eabd(2): jz 0x53(%rip)
eabf(3): cmp $0x23,%bl
eac2(2): jz 0x5e(%rip)
eac4(3): cmp $0x30,%bl
eac7(2): jz 0x69(%rip)
eac9(3): cmp $0x49,%bl
eacc(2): jnz 0x74(%rip)
eace(6): or $0x40,0x10(%r12)
ead4(4): nop 0x0(%rax)
ead8(3): movzx (%rax),%ebx
eadb(3): mov %rax,%rbp
eade(4): lea 0x1(%rbp),%rax
eae2(3): cmp $0x27,%bl
eae5(3): mov %rax,%rdx
eae8(2): jnz 0xffffffc8(%rip)
eaea(6): or $0x1,0x10(%r12)
eaf0(2): jmp 0xffffffe8(%rip)
eaf2(6): nop 0x0(%rax,%rax,1)
eaf8(6): or $0x2,0x10(%r12)
eafe(2): jmp 0xffffffda(%rip)
eb00(6): or $0x4,0x10(%r12)
eb06(2): jmp 0xffffffd2(%rip)
eb08(8): nop 0x0(%rax,%rax,1)
eb10(6): or $0x8,0x10(%r12)
eb16(2): jmp 0xffffffc2(%rip)
eb18(8): nop 0x0(%rax,%rax,1)
eb20(6): or $0x10,0x10(%r12)
eb26(2): jmp 0xffffffb2(%rip)
eb28(8): nop 0x0(%rax,%rax,1)
eb30(6): or $0x20,0x10(%r12)
eb36(2): jmp 0xffffffa2(%rip)
eb38(8): nop 0x0(%rax,%rax,1)
eb40(3): cmp $0x2a,%bl
eb43(6): jz 0x1b6(%rip)
eb49(3): lea 0xffffffd0(%rbx),%ecx
eb4c(3): cmp $0x9,%cl
eb4f(6): jbe 0x418(%rip)
eb55(3): cmp $0x2e,%bl
eb58(6): jz 0x2d7(%rip)
eb5e(2): xor %eax,%eax
eb60(5): mov $0x1,%esi
eb65(2): jmp 0x32(%rip)
eb67(9): nop 0x0(%rax,%rax,1)
eb70(3): cmp $0x4c,%bl
eb73(2): jz 0x3d(%rip)
eb75(3): cmp $0x6c,%bl
eb78(2): jz 0x18(%rip)
eb7a(3): cmp $0x6a,%bl
eb7d(2): jz 0x13(%rip)
eb7f(2): mov %ebx,%edx
eb81(3): and $0xdf,%edx
eb84(3): cmp $0x5a,%dl
eb87(2): jz 0x9(%rip)
eb89(3): cmp $0x74,%bl
eb8c(2): jnz 0x2c(%rip)
eb8e(2): nop 
eb90(3): add $0x8,%eax
eb93(4): movzx 0x0(%rbp),%ebx
eb97(4): add $0x1,%rbp
eb9b(3): cmp $0x68,%bl
eb9e(2): jnz 0xffffffd2(%rip)
eba0(2): mov %eax,%ecx
eba2(2): mov %esi,%edx
eba4(3): and $0x1,%ecx
eba7(2): shl/sal %cl,%edx
eba9(2): or %edx,%eax
ebab(2): jmp 0xffffffe8(%rip)
ebad(3): nop (%rax)
ebb0(3): or $0x4,%eax
ebb3(2): jmp 0xffffffe0(%rip)
ebb5(3): nop (%rax)
ebb8(3): lea 0xffffffdb(%rbx),%edx
ebbb(3): cmp $0x53,%dl
ebbe(6): jnbe 0x61d(%rip)
ebc4(7): lea 0x34d1(%rip),%rcx
ebcb(3): movzx %dl,%edx
ebce(4): movsxd 0x0(%rcx,%rdx,4),%rdx
ebd2(3): add %rcx,%rdx
ebd5(2): jmp %rdx
ebd7(6): mov $0x10,%r11d
ebdd(5): mov $0x73,%ebx
ebe2(6): nop 0x0(%rax,%rax,1)
ebe8(4): cmp $0xffffffff,%r13
ebec(6): jz 0x6bb(%rip)
ebf2(5): mov %r13,0x50(%r12)
ebf7(3): cmp %r13,%r9
ebfa(4): mov 0x8(%r15),%rcx
ebfe(6): jbe 0x622(%rip)
ec04(3): mov (%r15),%rax
ec07(3): mov %rax,%rdx
ec0a(4): shl/sal $0x5,%rdx
ec0e(3): add %rcx,%rdx
ec11(3): cmp %r13,%rax
ec14(2): jnbe 0x22(%rip)
ec16(a): nop 0x0(%rax,%rax,1)
ec20(4): add $0x1,%rax
ec24(6): mov $0x0,(%rdx)
ec2a(4): add $0x20,%rdx
ec2e(3): cmp %r13,%rax
ec31(2): jbe 0xffffffef(%rip)
ec33(3): mov %rax,(%r15)
ec36(4): shl/sal $0x5,%r13
ec3a(4): lea 0x0(%rcx,%r13,1),%rax
ec3e(2): mov (%rax),%edx
ec40(2): test %edx,%edx
ec42(6): jnz 0x5d1(%rip)
ec48(3): mov %r11d,(%rax)
ec4b(5): mov %bl,0x48(%r12)
ec50(3): mov (%r14),%rax
ec53(5): mov %rbp,0x8(%r12)
ec58(4): lea 0x1(%rax),%rbx
ec5c(3): cmp %rbx,%r10
ec5f(3): mov %rbx,(%r14)
ec62(6): jnbe 0x8e(%rip)
ec68(3): test %r10,%r10
ec6b(6): js 0x9ac(%rip)
ec71(3): add %r10,%r10
ec74(a): mov $0x209622091746699450,%rax
ec7e(3): cmp %rax,%r10
ec81(6): jnbe 0x996(%rip)
ec87(4): lea 0x0(%r10,%r10,4),%rax
ec8b(4): mov 0x8(%r14),%rdi
ec8f(5): cmp %rdi,0x28(%rsp)
ec94(5): mov %r9,0x40(%rsp)
ec99(5): mov %r10,0x38(%rsp)
ec9e(4): lea 0x0(%r10,%rax,2),%rax
eca2(5): mov %r8,0x30(%rsp)
eca7(8): lea 0x0(,%rax,8),%rsi
ecaf(6): jz 0x6be(%rip)
ecb5(5): call 0xffff3d6b(%rip)
ecba(3): test %rax,%rax
ecbd(3): mov %rax,%rcx
ecc0(5): mov 0x30(%rsp),%r8
ecc5(5): mov 0x38(%rsp),%r10
ecca(5): mov 0x40(%rsp),%r9
eccf(6): jz 0x948(%rip)
ecd5(5): mov 0x28(%rsp),%rax
ecda(4): cmp 0x8(%r14),%rax
ecde(3): mov (%r14),%rbx
ece1(6): jz 0x6af(%rip)
ece7(4): mov %rcx,0x8(%r14)
eceb(5): jmp 0xfffffd1d(%rip)
ecf0(4): mov 0x8(%r14),%rcx
ecf4(5): jmp 0xfffffd14(%rip)
ecf9(5): mov 0x10(%rsp),%rsi
ecfe(5): mov $0x1,%ecx
ed03(5): mov %rbp,0x18(%r12)
ed08(5): mov %rax,0x20(%r12)
ed0d(3): test %rsi,%rsi
ed10(4): cmovne %rsi,%rcx
ed14(5): mov %rcx,0x10(%rsp)
ed19(4): movzx 0x1(%rbp),%ecx
ed1d(3): lea 0xffffffd0(%rcx),%esi
ed20(4): cmp $0x9,%sil
ed24(6): jbe 0x2e1(%rip)
ed2a(5): mov 0x20(%rsp),%rsi
ed2f(4): cmp $0xffffffff,%rsi
ed33(4): lea 0x1(%rsi),%rdx
ed37(5): mov %rsi,0x28(%r12)
ed3c(6): jz 0x49f(%rip)
ed42(5): mov 0x20(%rsp),%rbx
ed47(3): mov %rax,%rbp
ed4a(5): mov %rdx,0x20(%rsp)
ed4f(3): cmp %rbx,%r9
ed52(4): mov 0x8(%r15),%rcx
ed56(6): jnbe 0x67c(%rip)
ed5c(3): add %r9,%r9
ed5f(4): lea 0x1(%rbx),%rax
ed63(3): cmp %rbx,%r9
ed66(4): cmovbe %rax,%r9
ed6a(a): mov $0x576460752303423487,%rax
ed74(3): cmp %rax,%r9
ed77(6): jnbe 0x8a4(%rip)
ed7d(3): mov %r9,%rsi
ed80(5): mov %r9,0x40(%rsp)
ed85(5): mov %r10,0x38(%rsp)
ed8a(4): shl/sal $0x5,%rsi
ed8e(5): cmp %rcx,0x8(%rsp)
ed93(5): mov %r8,0x30(%rsp)
ed98(6): jz 0x719(%rip)
ed9e(3): mov %rcx,%rdi
eda1(5): call 0xffff3c7f(%rip)
eda6(4): mov 0x8(%r15),%rdx
edaa(5): mov 0x30(%rsp),%r8
edaf(3): mov %rax,%rcx
edb2(5): mov 0x38(%rsp),%r10
edb7(5): mov 0x40(%rsp),%r9
edbc(3): test %rcx,%rcx
edbf(6): jz 0x8b8(%rip)
edc5(5): cmp %rdx,0x8(%rsp)
edca(3): mov (%r15),%rax
edcd(6): jz 0x7be(%rip)
edd3(4): mov %rcx,0x8(%r15)
edd7(3): mov %rax,%rdx
edda(4): shl/sal $0x5,%rdx
edde(3): add %rcx,%rdx
ede1(3): cmp %rbx,%rax
ede4(2): jnbe 0x22(%rip)
ede6(a): nop 0x0(%rax,%rax,1)
edf0(4): add $0x1,%rax
edf4(6): mov $0x0,(%rdx)
edfa(4): add $0x20,%rdx
edfe(3): cmp %rbx,%rax
ee01(2): jbe 0xffffffef(%rip)
ee03(3): mov %rax,(%r15)
ee06(4): shl/sal $0x5,%rbx
ee0a(4): lea 0x0(%rcx,%rbx,1),%rax
ee0e(2): mov (%rax),%edx
ee10(2): test %edx,%edx
ee12(6): jnz 0x4d9(%rip)
ee18(6): mov $0x5,(%rax)
ee1e(4): movzx 0x0(%rbp),%ebx
ee22(4): lea 0x1(%rbp),%rdx
ee26(3): cmp $0x2e,%bl
ee29(6): jnz 0xfffffd35(%rip)
ee2f(4): cmp $0x2a,0x1(%rbp)
ee33(5): mov %rbp,0x30(%r12)
ee38(6): jnz 0x186(%rip)
ee3e(5): mov 0x18(%rsp),%rsi
ee43(4): lea 0x2(%rbp),%r11
ee47(5): mov $0x2,%eax
ee4c(5): mov %r11,0x38(%r12)
ee51(4): cmp $0x2,%rsi
ee55(4): cmovnb %rsi,%rax
ee59(5): mov %rax,0x18(%rsp)
ee5e(4): movsx 0x2(%rbp),%eax
ee62(3): lea 0xffffffd0(%rax),%edx
ee65(3): cmp $0x9,%dl
ee68(6): jbe 0x694(%rip)
ee6e(5): mov 0x40(%r12),%rbx
ee73(4): cmp $0xffffffff,%rbx
ee77(6): jz 0x65e(%rip)
ee7d(3): cmp %rbx,%r9
ee80(4): mov 0x8(%r15),%rcx
ee84(6): jbe 0x56b(%rip)
ee8a(3): mov (%r15),%rax
ee8d(3): mov %rax,%rdx
ee90(4): shl/sal $0x5,%rdx
ee94(3): add %rcx,%rdx
ee97(3): cmp %rbx,%rax
ee9a(2): jnbe 0x1c(%rip)
ee9c(4): nop 0x0(%rax)
eea0(4): add $0x1,%rax
eea4(6): mov $0x0,(%rdx)
eeaa(4): add $0x20,%rdx
eeae(3): cmp %rbx,%rax
eeb1(2): jbe 0xffffffef(%rip)
eeb3(3): mov %rax,(%r15)
eeb6(4): shl/sal $0x5,%rbx
eeba(4): lea 0x0(%rcx,%rbx,1),%rax
eebe(2): mov (%rax),%edx
eec0(2): test %edx,%edx
eec2(6): jnz 0x518(%rip)
eec8(6): mov $0x5,(%rax)
eece(3): mov %r11,%rbp
eed1(4): movzx (%r11),%ebx
eed5(5): jmp 0xfffffc89(%rip)
eeda(3): mov %rbp,%rax
eedd(3): nop (%rax)
eee0(4): add $0x1,%rax
eee4(3): movzx (%rax),%edx
eee7(3): lea 0xffffffd0(%rdx),%ecx
eeea(3): cmp $0x9,%cl
eeed(2): jbe 0xfffffff3(%rip)
eeef(3): cmp $0x24,%dl
eef2(3): mov %r8,%r13
eef5(6): jnz 0xfffffbe9(%rip)
eefb(2): xor %edx,%edx
eefd(3): movsx %bl,%eax
ef00(a): mov $0x1844674407370955161,%rdi
ef0a(3): mov %r8,%rsi
ef0d(3): sub $0x30,%eax
ef10(3): cmp %rdi,%rdx
ef13(2): cwde 
ef15(2): jnbe 0x9(%rip)
ef17(4): lea 0x0(%rdx,%rdx,4),%rsi
ef1b(3): add %rsi,%rsi
ef1e(3): mov %rbp,%rcx
ef21(3): add %rsi,%rax
ef24(4): movzx 0x1(%rbp),%ebx
ef28(4): setb %sil
ef2c(4): add $0x1,%rbp
ef30(3): mov %rax,%rdx
ef33(4): movzx %sil,%esi
ef37(3): test %rsi,%rsi
ef3a(3): lea 0xffffffd0(%rbx),%edi
ef3d(6): jnz 0x391(%rip)
ef43(4): cmp $0x9,%dil
ef47(2): jbe 0xffffffb6(%rip)
ef49(3): mov %rax,%r13
ef4c(4): sub $0x1,%r13
ef50(4): cmp $0xfffffffd,%r13
ef54(6): jnbe 0x287(%rip)
ef5a(4): lea 0x2(%rcx),%rbp
ef5e(4): movzx 0x2(%rcx),%ebx
ef62(5): jmp 0xfffffb7c(%rip)
ef67(5): mov %rbp,0x18(%r12)
ef6c(4): movzx 0x0(%rbp),%edi
ef70(3): mov %rbp,%rsi
ef73(3): lea 0xffffffd0(%rdi),%ecx
ef76(3): cmp $0x9,%cl
ef79(2): jbe 0xe(%rip)
ef7b(2): jmp 0x35(%rip)
ef7d(3): nop (%rax)
ef80(3): mov %rax,%rbp
ef83(4): add $0x1,%rax
ef87(3): movzx (%rax),%edi
ef8a(3): lea 0xffffffd0(%rdi),%edx
ef8d(3): cmp $0x9,%dl
ef90(2): jbe 0xfffffff0(%rip)
ef92(3): mov %rax,%rcx
ef95(4): lea 0x2(%rbp),%rdx
ef99(3): mov %rax,%rbp
ef9c(3): sub %rsi,%rcx
ef9f(5): mov 0x10(%rsp),%rsi
efa4(3): cmp %rcx,%rsi
efa7(4): cmovnb %rsi,%rcx
efab(5): mov %rcx,0x10(%rsp)
efb0(5): mov %rbp,0x20(%r12)
efb5(4): movzx 0x0(%rbp),%ebx
efb9(5): jmp 0xfffffb9c(%rip)
efbe(4): movzx 0x1(%rbp),%eax
efc2(3): sub $0x30,%eax
efc5(2): cmp $0x9,%al
efc7(2): jnbe 0x17(%rip)
efc9(7): nop 0x0(%rax)
efd0(4): add $0x1,%rdx
efd4(3): movzx (%rdx),%eax
efd7(3): sub $0x30,%eax
efda(2): cmp $0x9,%al
efdc(2): jbe 0xfffffff4(%rip)
efde(5): mov 0x18(%rsp),%rsi
efe3(3): mov %rdx,%rax
efe6(5): mov %rdx,0x38(%r12)
efeb(3): sub %rbp,%rax
efee(3): movzx (%rdx),%ebx
eff1(3): mov %rdx,%rbp
eff4(3): cmp %rax,%rsi
eff7(4): cmovnb %rsi,%rax
effb(5): mov %rax,0x18(%rsp)
f000(5): jmp 0xfffffb5e(%rip)
f005(3): mov %rax,%rsi
f008(4): add $0x1,%rsi
f00c(3): movzx (%rsi),%edi
f00f(4): lea 0xffffffd0(%rdi),%r11d
f013(4): cmp $0x9,%r11b
f017(2): jbe 0xfffffff1(%rip)
f019(4): cmp $0x24,%dil
f01d(6): jnz 0xfffffd0d(%rip)
f023(2): xor %esi,%esi
f025(3): movsx %cl,%eax
f028(a): mov $0x1844674407370955161,%rdi
f032(3): mov %r8,%rcx
f035(3): sub $0x30,%eax
f038(3): cmp %rdi,%rsi
f03b(2): cwde 
f03d(2): jnbe 0x9(%rip)
f03f(4): lea 0x0(%rsi,%rsi,4),%rcx
f043(3): add %rcx,%rcx
f046(3): mov %rdx,%rbp
f049(3): xor %r11d,%r11d
f04c(3): add %rcx,%rax
f04f(4): movzx 0x1(%rdx),%ecx
f053(4): setb %r11b
f057(4): add $0x1,%rdx
f05b(3): mov %rax,%rsi
f05e(3): test %r11,%r11
f061(3): lea 0xffffffd0(%rcx),%edi
f064(6): jnz 0x50a(%rip)
f06a(4): cmp $0x9,%dil
f06e(2): jbe 0xffffffb7(%rip)
f070(4): lea 0xffffffff(%rax),%rbx
f074(4): cmp $0xfffffffd,%rbx
f078(6): jnbe 0x163(%rip)
f07e(5): mov %rbx,0x28(%r12)
f083(4): add $0x2,%rbp
f087(5): jmp 0xfffffcc8(%rip)
f08c(3): cmp $0xf,%eax
f08f(6): mov $0x16,%r11d
f095(6): jnle 0xfffffb53(%rip)
f09b(2): test $0x4,%al
f09d(6): jnz 0xfffffb4b(%rip)
f0a3(3): cmp $0x7,%eax
f0a6(6): mov $0x15,%r11d
f0ac(6): jnle 0xfffffb3c(%rip)
f0b2(2): test $0x2,%al
f0b4(6): mov $0x12,%r11d
f0ba(6): jnz 0xfffffb2e(%rip)
f0c0(3): xor %r11d,%r11d
f0c3(2): test $0x1,%al
f0c5(4): setz %r11b
f0c9(4): add $0x13,%r11d
f0cd(5): jmp 0xfffffb1b(%rip)
f0d2(6): nop 0x0(%rax,%rax,1)
f0d8(3): xor %r11d,%r11d
f0db(3): cmp $0x7,%eax
f0de(4): setnle %r11b
f0e2(4): add $0xd,%r11d
f0e6(5): jmp 0xfffffb02(%rip)
f0eb(3): cmp $0xf,%eax
f0ee(6): mov $0x9,%r11d
f0f4(6): jnle 0xfffffaf4(%rip)
f0fa(2): test $0x4,%al
f0fc(6): jnz 0xfffffaec(%rip)
f102(3): cmp $0x7,%eax
f105(6): mov $0x7,%r11d
f10b(6): jnle 0xfffffadd(%rip)
f111(2): test $0x2,%al
f113(6): mov $0x1,%r11d
f119(6): jnz 0xfffffacf(%rip)
f11f(3): and $0x1,%eax
f122(3): cmp $0x1,%eax
f125(3): sbb %r11d,%r11d
f128(4): and $0x2,%r11d
f12c(4): add $0x3,%r11d
f130(5): jmp 0xfffffab8(%rip)
f135(3): nop (%rax)
f138(3): xor %r11d,%r11d
f13b(3): cmp $0x7,%eax
f13e(4): setnle %r11b
f142(4): add $0xf,%r11d
f146(5): jmp 0xfffffaa2(%rip)
f14b(3): cmp $0xf,%eax
f14e(6): mov $0xc,%r11d
f154(6): jnle 0xfffffa94(%rip)
f15a(3): xor %r11d,%r11d
f15d(2): test $0x4,%al
f15f(4): setnz %r11b
f163(4): add $0xb,%r11d
f167(5): jmp 0xfffffa81(%rip)
f16c(6): mov $0xe,%r11d
f172(5): mov $0x63,%ebx
f177(5): jmp 0xfffffa71(%rip)
f17c(3): cmp $0xf,%eax
f17f(6): mov $0xa,%r11d
f185(6): jnle 0xfffffa63(%rip)
f18b(2): test $0x4,%al
f18d(6): jnz 0xfffffa5b(%rip)
f193(3): cmp $0x7,%eax
f196(6): mov $0x8,%r11d
f19c(6): jnle 0xfffffa4c(%rip)
f1a2(2): test $0x2,%al
f1a4(6): mov $0x2,%r11d
f1aa(6): jnz 0xfffffa3e(%rip)
f1b0(3): and $0x1,%eax
f1b3(3): cmp $0x1,%eax
f1b6(3): sbb %r11d,%r11d
f1b9(4): and $0x2,%r11d
f1bd(4): add $0x4,%r11d
f1c1(5): jmp 0xfffffa27(%rip)
f1c6(a): nop 0x0(%rax,%rax,1)
f1d0(6): mov $0x11,%r11d
f1d6(5): jmp 0xfffffa12(%rip)
f1db(4): mov 0x8(%r15),%rcx
f1df(5): cmp %rcx,0x8(%rsp)
f1e4(2): jz 0xa(%rip)
f1e6(3): mov %rcx,%rdi
f1e9(5): call 0xffff3527(%rip)
f1ee(4): mov 0x8(%r14),%rdi
f1f2(5): cmp %rdi,0x28(%rsp)
f1f7(2): jz 0x7(%rip)
f1f9(5): call 0xffff3517(%rip)
f1fe(5): call 0xffff3552(%rip)
f203(6): mov $0x16,(%rax)
f209(5): mov $0xffffffff,%eax
f20e(5): jmp 0xfffff824(%rip)
f213(3): cmp %r11d,%edx
f216(6): jz 0xfffffa35(%rip)
f21c(2): jmp 0xffffffc3(%rip)
f21e(2): nop 
f220(3): add %r9,%r9
f223(4): lea 0x1(%r13),%rax
f227(3): cmp %r13,%r9
f22a(4): cmovbe %rax,%r9
f22e(a): mov $0x576460752303423487,%rax
f238(3): cmp %rax,%r9
f23b(6): jnbe 0x3e0(%rip)
f241(3): mov %r9,%rsi
f244(5): mov %r9,0x48(%rsp)
f249(5): mov %r10,0x40(%rsp)
f24e(4): shl/sal $0x5,%rsi
f252(5): cmp %rcx,0x8(%rsp)
f257(5): mov %r8,0x38(%rsp)
f25c(5): mov %r11d,0x30(%rsp)
f261(6): jz 0xa0(%rip)
f267(3): mov %rcx,%rdi
f26a(5): call 0xffff37b6(%rip)
f26f(3): test %rax,%rax
f272(3): mov %rax,%rcx
f275(5): mov 0x30(%rsp),%r11d
f27a(5): mov 0x38(%rsp),%r8
f27f(5): mov 0x40(%rsp),%r10
f284(5): mov 0x48(%rsp),%r9
f289(6): jz 0x38e(%rip)
f28f(5): mov 0x8(%rsp),%rax
f294(4): cmp 0x8(%r15),%rax
f298(6): jz 0x91(%rip)
f29e(4): mov %rcx,0x8(%r15)
f2a2(5): jmp 0xfffff962(%rip)
f2a7(5): mov 0x20(%rsp),%rsi
f2ac(4): cmp $0xffffffff,%rsi
f2b0(4): lea 0x1(%rsi),%rax
f2b4(5): mov %rsi,0x50(%r12)
f2b9(6): jz 0xffffff22(%rip)
f2bf(5): mov 0x20(%rsp),%r13
f2c4(5): mov %rax,0x20(%rsp)
f2c9(5): jmp 0xfffff92e(%rip)
f2ce(4): cmp $0x9,%dil
f2d2(6): jnbe 0xffffff09(%rip)
f2d8(3): movsx %bl,%eax
f2db(3): mov %r8,%rsi
f2de(3): mov %rbp,%rcx
f2e1(3): sub $0x30,%eax
f2e4(2): cwde 
f2e6(5): jmp 0xfffffc3b(%rip)
f2eb(3): cmp $0x5,%edx
f2ee(6): jnz 0xfffffef1(%rip)
f2f4(4): movzx 0x0(%rbp),%ebx
f2f8(4): lea 0x1(%rbp),%rdx
f2fc(5): jmp 0xfffff859(%rip)
f301(3): mov %rsi,%rdi
f304(5): call 0xffff36cc(%rip)
f309(3): test %rax,%rax
f30c(3): mov %rax,%rcx
f30f(5): mov 0x30(%rsp),%r11d
f314(5): mov 0x38(%rsp),%r8
f319(5): mov 0x40(%rsp),%r10
f31e(5): mov 0x48(%rsp),%r9
f323(6): jz 0x169(%rip)
f329(3): mov (%r15),%rdx
f32c(5): mov 0x8(%rsp),%rsi
f331(3): mov %rcx,%rdi
f334(5): mov %r9,0x48(%rsp)
f339(5): mov %r10,0x40(%rsp)
f33e(5): mov %r8,0x38(%rsp)
f343(5): mov %r11d,0x30(%rsp)
f348(4): shl/sal $0x5,%rdx
f34c(5): call 0xffff3624(%rip)
f351(5): mov 0x48(%rsp),%r9
f356(5): mov 0x40(%rsp),%r10
f35b(3): mov %rax,%rcx
f35e(5): mov 0x38(%rsp),%r8
f363(5): mov 0x30(%rsp),%r11d
f368(5): jmp 0xffffff36(%rip)
f36d(3): mov %rsi,%rdi
f370(5): call 0xffff3660(%rip)
f375(3): test %rax,%rax
f378(3): mov %rax,%rcx
f37b(5): mov 0x30(%rsp),%r8
f380(5): mov 0x38(%rsp),%r10
f385(5): mov 0x40(%rsp),%r9
f38a(6): jz 0xef(%rip)
f390(4): lea 0x0(%rbx,%rbx,4),%rax
f394(5): mov 0x28(%rsp),%rsi
f399(3): mov %rcx,%rdi
f39c(5): mov %r9,0x40(%rsp)
f3a1(5): mov %r10,0x38(%rsp)
f3a6(4): lea 0x0(%rbx,%rax,2),%rdx
f3aa(5): mov %r8,0x30(%rsp)
f3af(4): shl/sal $0x3,%rdx
f3b3(5): call 0xffff35bd(%rip)
f3b8(3): mov (%r14),%rbx
f3bb(3): mov %rax,%rcx
f3be(5): mov 0x40(%rsp),%r9
f3c3(5): mov 0x38(%rsp),%r10
f3c8(5): mov 0x30(%rsp),%r8
f3cd(5): jmp 0xfffff91a(%rip)
f3d2(3): mov (%r15),%rax
f3d5(5): jmp 0xfffffa02(%rip)
f3da(3): cmp $0x5,%edx
f3dd(6): jnz 0xfffffe02(%rip)
f3e3(4): movzx (%r11),%ebx
f3e7(3): mov %r11,%rbp
f3ea(5): jmp 0xfffff774(%rip)
f3ef(3): add %r9,%r9
f3f2(4): lea 0x1(%rbx),%rax
f3f6(3): cmp %rbx,%r9
f3f9(4): cmovbe %rax,%r9
f3fd(a): mov $0x576460752303423487,%rax
f407(3): cmp %rax,%r9
f40a(6): jnbe 0x211(%rip)
f410(3): mov %r9,%rsi
f413(5): mov %r9,0x48(%rsp)
f418(5): mov %r10,0x40(%rsp)
f41d(4): shl/sal $0x5,%rsi
f421(5): cmp %rcx,0x8(%rsp)
f426(5): mov %r8,0x38(%rsp)
f42b(5): mov %r11,0x30(%rsp)
f430(6): jz 0x1be(%rip)
f436(3): mov %rcx,%rdi
f439(5): call 0xffff35e7(%rip)
f43e(4): mov 0x8(%r15),%rdx
f442(5): mov 0x30(%rsp),%r11
f447(3): mov %rax,%rcx
f44a(5): mov 0x38(%rsp),%r8
f44f(5): mov 0x40(%rsp),%r10
f454(5): mov 0x48(%rsp),%r9
f459(3): test %rcx,%rcx
f45c(6): jz 0x21b(%rip)
f462(5): cmp %rdx,0x8(%rsp)
f467(3): mov (%r15),%rax
f46a(6): jz 0x1c6(%rip)
f470(4): mov %rcx,0x8(%r15)
f474(5): jmp 0xfffffa19(%rip)
f479(4): mov 0x8(%r15),%rcx
f47d(5): cmp %rcx,0x8(%rsp)
f482(2): jz 0x1a(%rip)
f484(3): mov %rcx,%rdi
f487(5): call 0xffff3289(%rip)
f48c(4): mov 0x8(%r14),%rdi
f490(5): cmp %rdi,0x28(%rsp)
f495(2): jz 0x7(%rip)
f497(5): call 0xffff3279(%rip)
f49c(5): call 0xffff32b4(%rip)
f4a1(6): mov $0xc,(%rax)
f4a7(5): mov $0xffffffff,%eax
f4ac(5): jmp 0xfffff586(%rip)
f4b1(3): mov %rsi,%rdi
f4b4(5): call 0xffff351c(%rip)
f4b9(5): mov 0x8(%rsp),%rdx
f4be(3): mov %rax,%rcx
f4c1(5): mov 0x40(%rsp),%r9
f4c6(5): mov 0x38(%rsp),%r10
f4cb(5): mov 0x30(%rsp),%r8
f4d0(5): jmp 0xfffff8ec(%rip)
f4d5(5): mov 0x20(%rsp),%rsi
f4da(4): cmp $0xffffffff,%rsi
f4de(4): lea 0x1(%rsi),%rax
f4e2(5): mov %rsi,0x40(%r12)
f4e7(6): jz 0xfffffcf4(%rip)
f4ed(5): mov 0x20(%rsp),%rbx
f4f2(5): mov %rax,0x20(%rsp)
f4f7(5): jmp 0xfffff986(%rip)
f4fc(3): mov %r11,%rdx
f4ff(4): add $0x1,%rdx
f503(3): movzx (%rdx),%ecx
f506(3): lea 0xffffffd0(%rcx),%esi
f509(4): cmp $0x9,%sil
f50d(2): jbe 0xfffffff2(%rip)
f50f(3): cmp $0x24,%cl
f512(6): jnz 0xfffff95c(%rip)
f518(2): xor %ecx,%ecx
f51a(a): mov $0x1844674407370955161,%rsi
f524(3): sub $0x30,%eax
f527(3): mov %r8,%rdx
f52a(3): cmp %rsi,%rcx
f52d(2): cwde 
f52f(2): jnbe 0x9(%rip)
f531(4): lea 0x0(%rcx,%rcx,4),%rdx
f535(3): add %rdx,%rdx
f538(3): mov %r11,%rsi
f53b(2): xor %ebx,%ebx
f53d(3): add %rax,%rdx
f540(5): movsx 0x1(%r11),%eax
f545(3): setb %bl
f548(4): add $0x1,%r11
f54c(3): mov %rdx,%rcx
f54f(3): test %rbx,%rbx
f552(3): lea 0xffffffd0(%rax),%edi
f555(2): jz 0x73(%rip)
f557(4): cmp $0x9,%dil
f55b(6): jnbe 0xfffffc80(%rip)
f561(3): sub $0x30,%eax
f564(3): mov %r8,%rdx
f567(3): mov %r11,%rsi
f56a(2): cwde 
f56c(2): jmp 0xffffffcf(%rip)
f56e(4): cmp $0x9,%dil
f572(6): jnbe 0xfffffc69(%rip)
f578(3): movsx %cl,%eax
f57b(3): mov %rdx,%rbp
f57e(3): mov %r8,%rcx
f581(3): sub $0x30,%eax
f584(2): cwde 
f586(5): jmp 0xfffffac3(%rip)
f58b(5): mov 0x8(%rsp),%rsi
f590(4): shl/sal $0x5,%rax
f594(3): mov %rcx,%rdi
f597(3): mov %rax,%rdx
f59a(5): mov %r9,0x40(%rsp)
f59f(5): mov %r10,0x38(%rsp)
f5a4(5): mov %r8,0x30(%rsp)
f5a9(5): call 0xffff33c7(%rip)
f5ae(5): mov 0x40(%rsp),%r9
f5b3(3): mov %rax,%rcx
f5b6(5): mov 0x38(%rsp),%r10
f5bb(3): mov (%r15),%rax
f5be(5): mov 0x30(%rsp),%r8
f5c3(5): jmp 0xfffff810(%rip)
f5c8(4): cmp $0x9,%dil
f5cc(6): jbe 0xffffff4e(%rip)
f5d2(4): lea 0xffffffff(%rdx),%rbx
f5d6(4): cmp $0xfffffffd,%rbx
f5da(6): jnbe 0xfffffc01(%rip)
f5e0(5): mov %rbx,0x40(%r12)
f5e5(4): lea 0x2(%rsi),%r11
f5e9(5): jmp 0xfffff894(%rip)
f5ee(3): mov %rsi,%rdi
f5f1(5): call 0xffff33df(%rip)
f5f6(5): mov 0x8(%rsp),%rdx
f5fb(3): mov %rax,%rcx
f5fe(5): mov 0x48(%rsp),%r9
f603(5): mov 0x40(%rsp),%r10
f608(5): mov 0x38(%rsp),%r8
f60d(5): mov 0x30(%rsp),%r11
f612(5): jmp 0xfffffe47(%rip)
f617(4): mov 0x8(%r15),%rcx
f61b(5): cmp %rcx,0x8(%rsp)
f620(6): jnz 0xfffffe64(%rip)
f626(5): jmp 0xfffffe66(%rip)
f62b(5): nop 0x0(%rax,%rax,1)
f630(5): mov 0x8(%rsp),%rsi
f635(4): shl/sal $0x5,%rax
f639(3): mov %rcx,%rdi
f63c(3): mov %rax,%rdx
f63f(5): mov %r9,0x48(%rsp)
f644(5): mov %r10,0x40(%rsp)
f649(5): mov %r8,0x38(%rsp)
f64e(5): mov %r11,0x30(%rsp)
f653(5): call 0xffff331d(%rip)
f658(5): mov 0x48(%rsp),%r9
f65d(3): mov %rax,%rcx
f660(5): mov 0x40(%rsp),%r10
f665(3): mov (%r15),%rax
f668(5): mov 0x38(%rsp),%r8
f66d(5): mov 0x30(%rsp),%r11
f672(5): jmp 0xfffffdfe(%rip)
f677(3): mov %rdx,%rcx
f67a(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
f680(2): push %r15
f682(2): push %r14
f684(3): mov %rdx,%r15
f687(2): push %r13
f689(2): push %r12
f68b(7): lea 0x204a5e(%rip),%r12
f692(1): push %rbp
f693(7): lea 0x204a5e(%rip),%rbp
f69a(1): push %rbx
f69b(3): mov %edi,%r13d
f69e(3): mov %rsi,%r14
f6a1(3): sub %r12,%rbp
f6a4(4): sub $0x8,%rsp
f6a8(4): sar $0x3,%rbp
f6ac(5): call 0xffff3004(%rip)
f6b1(3): test %rbp,%rbp
f6b4(2): jz 0x22(%rip)
f6b6(2): xor %ebx,%ebx
f6b8(8): nop 0x0(%rax,%rax,1)
f6c0(3): mov %r15,%rdx
f6c3(3): mov %r14,%rsi
f6c6(3): mov %r13d,%edi
f6c9(4): call 0x0(%r12,%rbx,8)
f6cd(4): add $0x1,%rbx
f6d1(3): cmp %rbx,%rbp
f6d4(2): jnz 0xffffffec(%rip)
f6d6(4): add $0x8,%rsp
f6da(1): pop %rbx
f6db(1): pop %rbp
f6dc(2): pop %r12
f6de(2): pop %r13
f6e0(2): pop %r14
f6e2(2): pop %r15
f6e4(1): ret near (%rsp)

"atexit" :
f700(7): mov 0x205901(%rip),%rdx
f707(2): xor %esi,%esi
f709(5): jmp 0xffff33b7(%rip)

"_fini" :
f710(4): sub $0x8,%rsp
f714(4): add $0x8,%rsp
f718(1): ret near (%rsp)

