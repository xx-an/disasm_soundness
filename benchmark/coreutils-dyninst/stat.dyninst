
"__ctype_toupper_loc@plt" :
1ce0(6): jmp 0x21103a(%rip)
1ce6(5): push $0x0

"getenv@plt" :
1cf0(6): jmp 0x211032(%rip)
1cf6(5): push $0x1

"__snprintf_chk@plt" :
1d00(6): jmp 0x21102a(%rip)
1d06(5): push $0x2

"free@plt" :
1d10(6): jmp 0x211022(%rip)
1d16(5): push $0x3

"endmntent@plt" :
1d20(6): jmp 0x21101a(%rip)
1d26(5): push $0x4

"abort@plt" :
1d30(6): jmp 0x211012(%rip)
1d36(5): push $0x5

"__errno_location@plt" :
1d40(6): jmp 0x21100a(%rip)
1d46(5): push $0x6

"strncmp@plt" :
1d50(6): jmp 0x211002(%rip)
1d56(5): push $0x7

"localtime_r@plt" :
1d60(6): jmp 0x210ffa(%rip)
1d66(5): push $0x8

"_exit@plt" :
1d70(6): jmp 0x210ff2(%rip)
1d76(5): push $0x9

"strcpy@plt" :
1d80(6): jmp 0x210fea(%rip)
1d86(5): push $0xa

"__fpending@plt" :
1d90(6): jmp 0x210fe2(%rip)
1d96(5): push $0xb

"localeconv@plt" :
1da0(6): jmp 0x210fda(%rip)
1da6(5): push $0xc

"readlink@plt" :
1db0(6): jmp 0x210fd2(%rip)
1db6(5): push $0xd

"fcntl@plt" :
1dc0(6): jmp 0x210fca(%rip)
1dc6(5): push $0xe

"setenv@plt" :
1dd0(6): jmp 0x210fc2(%rip)
1dd6(5): push $0xf

"textdomain@plt" :
1de0(6): jmp 0x210fba(%rip)
1de6(5): push $0x10

"fclose@plt" :
1df0(6): jmp 0x210fb2(%rip)
1df6(5): push $0x11

"getpwuid@plt" :
1e00(6): jmp 0x210faa(%rip)
1e06(5): push $0x12

"bindtextdomain@plt" :
1e10(6): jmp 0x210fa2(%rip)
1e16(5): push $0x13

"dcgettext@plt" :
1e20(6): jmp 0x210f9a(%rip)
1e26(5): push $0x14

"__ctype_get_mb_cur_max@plt" :
1e30(6): jmp 0x210f92(%rip)
1e36(5): push $0x15

"strlen@plt" :
1e40(6): jmp 0x210f8a(%rip)
1e46(5): push $0x16

"__lxstat@plt" :
1e50(6): jmp 0x210f82(%rip)
1e56(5): push $0x17

"openat@plt" :
1e60(6): jmp 0x210f7a(%rip)
1e66(5): push $0x18

"chdir@plt" :
1e70(6): jmp 0x210f72(%rip)
1e76(5): push $0x19

"__stack_chk_fail@plt" :
1e80(6): jmp 0x210f6a(%rip)
1e86(5): push $0x1a

"getopt_long@plt" :
1e90(6): jmp 0x210f62(%rip)
1e96(5): push $0x1b

"mbrtowc@plt" :
1ea0(6): jmp 0x210f5a(%rip)
1ea6(5): push $0x1c

"strchr@plt" :
1eb0(6): jmp 0x210f52(%rip)
1eb6(5): push $0x1d

"getgrgid@plt" :
1ec0(6): jmp 0x210f4a(%rip)
1ec6(5): push $0x1e

"__overflow@plt" :
1ed0(6): jmp 0x210f42(%rip)
1ed6(5): push $0x1f

"strrchr@plt" :
1ee0(6): jmp 0x210f3a(%rip)
1ee6(5): push $0x20

"gmtime_r@plt" :
1ef0(6): jmp 0x210f32(%rip)
1ef6(5): push $0x21

"lseek@plt" :
1f00(6): jmp 0x210f2a(%rip)
1f06(5): push $0x22

"__assert_fail@plt" :
1f10(6): jmp 0x210f22(%rip)
1f16(5): push $0x23

"memset@plt" :
1f20(6): jmp 0x210f1a(%rip)
1f26(5): push $0x24

"getcwd@plt" :
1f30(6): jmp 0x210f12(%rip)
1f36(5): push $0x25

"canonicalize_file_name@plt" :
1f40(6): jmp 0x210f0a(%rip)
1f46(5): push $0x26

"close@plt" :
1f50(6): jmp 0x210f02(%rip)
1f56(5): push $0x27

"strspn@plt" :
1f60(6): jmp 0x210efa(%rip)
1f66(5): push $0x28

"memchr@plt" :
1f70(6): jmp 0x210ef2(%rip)
1f76(5): push $0x29

"memcmp@plt" :
1f80(6): jmp 0x210eea(%rip)
1f86(5): push $0x2a

"fputs_unlocked@plt" :
1f90(6): jmp 0x210ee2(%rip)
1f96(5): push $0x2b

"calloc@plt" :
1fa0(6): jmp 0x210eda(%rip)
1fa6(5): push $0x2c

"__getdelim@plt" :
1fb0(6): jmp 0x210ed2(%rip)
1fb6(5): push $0x2d

"strcmp@plt" :
1fc0(6): jmp 0x210eca(%rip)
1fc6(5): push $0x2e

"strtol@plt" :
1fd0(6): jmp 0x210ec2(%rip)
1fd6(5): push $0x2f

"memcpy@plt" :
1fe0(6): jmp 0x210eba(%rip)
1fe6(5): push $0x30

"tzset@plt" :
1ff0(6): jmp 0x210eb2(%rip)
1ff6(5): push $0x31

"fileno@plt" :
2000(6): jmp 0x210eaa(%rip)
2006(5): push $0x32

"statfs@plt" :
2010(6): jmp 0x210ea2(%rip)
2016(5): push $0x33

"__xstat@plt" :
2020(6): jmp 0x210e9a(%rip)
2026(5): push $0x34

"malloc@plt" :
2030(6): jmp 0x210e92(%rip)
2036(5): push $0x35

"fflush@plt" :
2040(6): jmp 0x210e8a(%rip)
2046(5): push $0x36

"getmntent@plt" :
2050(6): jmp 0x210e82(%rip)
2056(5): push $0x37

"setmntent@plt" :
2060(6): jmp 0x210e7a(%rip)
2066(5): push $0x38

"nl_langinfo@plt" :
2070(6): jmp 0x210e72(%rip)
2076(5): push $0x39

"__fxstat@plt" :
2080(6): jmp 0x210e6a(%rip)
2086(5): push $0x3a

"sscanf@plt" :
2090(6): jmp 0x210e62(%rip)
2096(5): push $0x3b

"mktime@plt" :
20a0(6): jmp 0x210e5a(%rip)
20a6(5): push $0x3c

"__freading@plt" :
20b0(6): jmp 0x210e52(%rip)
20b6(5): push $0x3d

"fchdir@plt" :
20c0(6): jmp 0x210e4a(%rip)
20c6(5): push $0x3e

"realloc@plt" :
20d0(6): jmp 0x210e42(%rip)
20d6(5): push $0x3f

"setlocale@plt" :
20e0(6): jmp 0x210e3a(%rip)
20e6(5): push $0x40

"__printf_chk@plt" :
20f0(6): jmp 0x210e32(%rip)
20f6(5): push $0x41

"timegm@plt" :
2100(6): jmp 0x210e2a(%rip)
2106(5): push $0x42

"strftime@plt" :
2110(6): jmp 0x210e22(%rip)
2116(5): push $0x43

"error@plt" :
2120(6): jmp 0x210e1a(%rip)
2126(5): push $0x44

"memrchr@plt" :
2130(6): jmp 0x210e12(%rip)
2136(5): push $0x45

"open@plt" :
2140(6): jmp 0x210e0a(%rip)
2146(5): push $0x46

"fseeko@plt" :
2150(6): jmp 0x210e02(%rip)
2156(5): push $0x47

"fopen@plt" :
2160(6): jmp 0x210dfa(%rip)
2166(5): push $0x48

"unsetenv@plt" :
2170(6): jmp 0x210df2(%rip)
2176(5): push $0x49

"__cxa_atexit@plt" :
2180(6): jmp 0x210dea(%rip)
2186(5): push $0x4a

"exit@plt" :
2190(6): jmp 0x210de2(%rip)
2196(5): push $0x4b

"fwrite@plt" :
21a0(6): jmp 0x210dda(%rip)
21a6(5): push $0x4c

"__fprintf_chk@plt" :
21b0(6): jmp 0x210dd2(%rip)
21b6(5): push $0x4d

"mbsinit@plt" :
21c0(6): jmp 0x210dca(%rip)
21c6(5): push $0x4e

"iswprint@plt" :
21d0(6): jmp 0x210dc2(%rip)
21d6(5): push $0x4f

"hasmntopt@plt" :
21e0(6): jmp 0x210dba(%rip)
21e6(5): push $0x50

"strstr@plt" :
21f0(6): jmp 0x210db2(%rip)
21f6(5): push $0x51

"__ctype_tolower_loc@plt" :
2200(6): jmp 0x210daa(%rip)
2206(5): push $0x52

"__ctype_b_loc@plt" :
2210(6): jmp 0x210da2(%rip)
2216(5): push $0x53

"__sprintf_chk@plt" :
2220(6): jmp 0x210d9a(%rip)
2226(5): push $0x54

".plt.got" :
2230(6): jmp 0x210db2(%rip)
2236(2): nop 

"_init" :
1cb8(4): sub $0x8,%rsp
1cbc(7): mov 0x211315(%rip),%rax
1cc3(3): test %rax,%rax
1cc6(2): jz 0x4(%rip)
1cc8(2): call %rax
1cca(4): add $0x8,%rsp
1cce(1): ret near (%rsp)

"main" :
2240(2): push %r15
2242(2): push %r14
2244(6): mov $0x1,%r15d
224a(2): push %r13
224c(2): push %r12
224e(7): lea 0x21076b(%rip),%r12
2255(1): push %rbp
2256(1): push %rbx
2257(2): mov %edi,%ebp
2259(3): mov %rsi,%rbx
225c(7): sub $0xc8,%rsp
2263(3): mov (%rsi),%rdi
2266(9): mov $0x28,%rax
226f(8): mov %rax,0xb8(%rsp)
2277(2): xor %eax,%eax
2279(5): call 0x5547(%rip)
227e(7): lea 0xd8fc(%rip),%rsi
2285(5): mov $0x6,%edi
228a(5): call 0xfffffe56(%rip)
228f(7): lea 0xbc43(%rip),%rsi
2296(7): lea 0xbc13(%rip),%rdi
229d(5): call 0xfffffb73(%rip)
22a2(7): lea 0xbc07(%rip),%rdi
22a9(5): call 0xfffffb37(%rip)
22ae(5): call 0xfffffaf2(%rip)
22b3(3): mov (%rax),%rdi
22b6(7): lea 0xcff7(%rip),%rax
22bd(3): cmp $0x0,(%rdi)
22c0(4): cmove %rax,%rdi
22c4(3): xor %r13d,%r13d
22c7(7): mov %rdi,0x210eca(%rip)
22ce(5): call 0xfffffb72(%rip)
22d3(7): lea 0x33c6(%rip),%rdi
22da(7): mov %rax,0x210eaf(%rip)
22e1(5): call 0xb76f(%rip)
22e6(5): mov $0x0,0x8(%rsp)
22eb(5): mov $0x0,0x7(%rsp)
22f0(7): lea 0xbc09(%rip),%rdx
22f7(3): xor %r8d,%r8d
22fa(3): mov %r12,%rcx
22fd(3): mov %rbx,%rsi
2300(2): mov %ebp,%edi
2302(5): call 0xfffffb8e(%rip)
2307(3): cmp $0xff,%eax
230a(3): mov %eax,%r14d
230d(6): jz 0x10d(%rip)
2313(4): cmp $0x63,%r14d
2317(6): jz 0xa9(%rip)
231d(2): jle 0x43(%rip)
231f(4): cmp $0x74,%r14d
2323(6): jz 0xed(%rip)
2329(7): cmp $0x80,%r14d
2330(6): jz 0xb8(%rip)
2336(4): cmp $0x66,%r14d
233a(2): jz 0x16(%rip)
233c(5): mov $0x1,%edi
2341(5): call 0x25ef(%rip)
2346(a): nop 0x0(%rax,%rax,1)
2350(5): mov $0x1,0x7(%rsp)
2355(2): jmp 0xffffff9b(%rip)
2357(9): nop 0x0(%rax,%rax,1)
2360(7): cmp $0xffffff7e,%r14d
2367(6): jz 0x40b(%rip)
236d(4): cmp $0x4c,%r14d
2371(2): jz 0x3f(%rip)
2373(7): cmp $0xffffff7d,%r14d
237a(2): jnz 0xffffffc2(%rip)
237c(7): mov 0x210d25(%rip),%rdi
2383(7): mov 0x210c8e(%rip),%rcx
238a(7): lea 0xbb60(%rip),%r8
2391(7): lea 0xbb14(%rip),%rdx
2398(7): lea 0xba92(%rip),%rsi
239f(3): xor %r9d,%r9d
23a2(2): xor %eax,%eax
23a4(5): call 0x769c(%rip)
23a9(2): xor %edi,%edi
23ab(5): call 0xfffffde5(%rip)
23b0(7): mov %r15b,0x210dea(%rip)
23b7(5): jmp 0xffffff39(%rip)
23bc(4): nop 0x0(%rax)
23c0(7): lea 0xd7b9(%rip),%rax
23c7(7): mov 0x210cea(%rip),%r13
23ce(7): mov $0x0,0x210dcb(%rip)
23d5(7): mov %rax,0x210c34(%rip)
23dc(5): jmp 0xffffff14(%rip)
23e1(7): nop 0x0(%rax)
23e8(7): lea 0xd792(%rip),%rax
23ef(7): mov 0x210cc2(%rip),%r13
23f6(7): mov %r15b,0x210da3(%rip)
23fd(7): mov %rax,0x210c0c(%rip)
2404(5): jmp 0xfffffeec(%rip)
2409(7): nop 0x0(%rax)
2410(5): mov $0x1,0x8(%rsp)
2415(5): jmp 0xfffffedb(%rip)
241a(6): cmp %ebp,0x210c90(%rip)
2420(6): jz 0x35e(%rip)
2426(3): test %r13,%r13
2429(6): jz 0x2fd(%rip)
242f(7): lea 0xbae0(%rip),%rsi
2436(3): mov %r13,%rdi
2439(5): call 0xfffffdb7(%rip)
243e(3): test %rax,%rax
2441(5): mov %r13,0x10(%rsp)
2446(2): jz 0x55(%rip)
2448(7): lea 0xbaca(%rip),%rdi
244f(5): call 0xfffff8a1(%rip)
2454(3): test %rax,%rax
2457(3): mov %rax,%r12
245a(6): jz 0x302(%rip)
2460(7): lea 0xd699(%rip),%rdx
2467(7): lea 0x210652(%rip),%rsi
246e(5): mov $0x4,%ecx
2473(3): mov %rax,%rdi
2476(5): call 0x2e8a(%rip)
247b(2): test %eax,%eax
247d(6): js 0x264(%rip)
2483(7): lea 0xd676(%rip),%rdx
248a(2): cwde 
248c(2): xor %edi,%edi
248e(3): mov 0x0(%rdx,%rax,4),%esi
2491(5): call 0x690f(%rip)
2496(5): mov %r13,0x10(%rsp)
249b(6): mov 0x210c0f(%rip),%eax
24a1(2): cmp %eax,%ebp
24a3(6): jle 0x140(%rip)
24a9(3): movsxd %eax,%rdx
24ac(2): not %eax
24ae(2): add %ebp,%eax
24b0(4): lea 0x0(%rbx,%rdx,8),%r12
24b4(5): lea 0x20(%rsp),%rbp
24b9(3): add %rdx,%rax
24bc(5): lea 0x8(%rbx,%rax,8),%rax
24c1(5): mov $0x1,%ebx
24c6(5): mov %rax,0x8(%rsp)
24cb(2): jmp 0x51(%rip)
24cd(2): test %eax,%eax
24cf(6): jz 0xd9(%rip)
24d5(3): mov %rbp,%rsi
24d8(3): mov %r15,%rdi
24db(5): call 0xfffffb35(%rip)
24e0(2): test %eax,%eax
24e2(6): jnz 0x198(%rip)
24e8(7): lea 0x591(%rip),%rcx
24ef(3): mov %rbp,%r8
24f2(3): mov %r15,%rdx
24f5(3): or $0xff,%esi
24f8(3): mov %r13,%rdi
24fb(5): call 0x1265(%rip)
2500(3): xor $0x1,%eax
2503(5): nop 0x0(%rax,%rax,1)
2508(3): movzx %al,%eax
250b(4): add $0x8,%r12
250f(2): and %eax,%ebx
2511(5): cmp %r12,0x8(%rsp)
2516(6): jz 0xd2(%rip)
251c(4): mov (%r12),%r15
2520(7): lea 0xd11b(%rip),%rdi
2527(5): mov $0x2,%ecx
252c(3): mov %r15,%rsi
252f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2531(3): setnbe %al
2534(2): sbb $0x0,%al
2536(5): cmp $0x0,0x7(%rsp)
253b(3): movsx %al,%eax
253e(2): jnz 0xffffff8f(%rip)
2540(2): test %eax,%eax
2542(6): jz 0xef(%rip)
2548(7): cmp $0x0,0x210c52(%rip)
254f(6): jz 0xc8(%rip)
2555(3): mov %rbp,%rdx
2558(3): mov %r15,%rsi
255b(5): mov $0x1,%edi
2560(5): call 0xfffffac0(%rip)
2565(2): test %eax,%eax
2567(3): setnz %al
256a(2): test %al,%al
256c(3): mov %r14d,%esi
256f(6): jnz 0x152(%rip)
2575(4): mov 0x38(%rsp),%edx
2579(5): mov 0x10(%rsp),%rdi
257e(7): lea 0x1d9b(%rip),%rcx
2585(3): mov %rbp,%r8
2588(6): and $0xb000,%edx
258e(6): cmp $0x2000,%edx
2594(3): mov %r15,%rdx
2597(4): cmovne %r13,%rdi
259b(5): call 0x11c5(%rip)
25a0(3): xor $0x1,%eax
25a3(5): jmp 0xffffff65(%rip)
25a8(3): mov %r15,%rsi
25ab(5): mov $0x4,%edi
25b0(5): call 0x6c50(%rip)
25b5(7): lea 0xcc3c(%rip),%rsi
25bc(3): mov %rax,%r15
25bf(5): mov $0x5,%edx
25c4(2): xor %edi,%edi
25c6(5): call 0xfffff85a(%rip)
25cb(3): mov %r15,%rcx
25ce(3): mov %rax,%rdx
25d1(2): xor %esi,%esi
25d3(2): xor %eax,%eax
25d5(2): xor %edi,%edi
25d7(5): call 0xfffffb49(%rip)
25dc(2): xor %eax,%eax
25de(5): jmp 0xffffff2a(%rip)
25e3(5): mov $0x1,%ebx
25e8(3): xor $0x1,%ebx
25eb(3): movzx %bl,%eax
25ee(8): mov 0xb8(%rsp),%rbx
25f6(9): xor $0x28,%rbx
25ff(6): jnz 0x17a(%rip)
2605(7): add $0xc8,%rsp
260c(1): pop %rbx
260d(1): pop %rbp
260e(2): pop %r12
2610(2): pop %r13
2612(2): pop %r14
2614(2): pop %r15
2616(1): ret near (%rsp)
2617(3): mov %rbp,%rdx
261a(3): mov %r15,%rsi
261d(5): mov $0x1,%edi
2622(5): call 0xfffff82e(%rip)
2627(2): test %eax,%eax
2629(3): setnz %al
262c(5): jmp 0xffffff3e(%rip)
2631(2): xor %esi,%esi
2633(3): mov %rbp,%rdx
2636(5): mov $0x1,%edi
263b(5): call 0xfffffa45(%rip)
2640(2): test %eax,%eax
2642(2): mov %eax,%esi
2644(6): jz 0xffffff31(%rip)
264a(7): lea 0xb8d6(%rip),%rsi
2651(5): mov $0x5,%edx
2656(2): xor %edi,%edi
2658(5): call 0xfffff7c8(%rip)
265d(3): mov %rax,%r15
2660(5): call 0xfffff6e0(%rip)
2665(2): mov (%rax),%esi
2667(3): mov %r15,%rdx
266a(2): xor %eax,%eax
266c(2): xor %edi,%edi
266e(5): call 0xfffffab2(%rip)
2673(2): xor %eax,%eax
2675(5): jmp 0xfffffe93(%rip)
267a(3): mov %r15,%rsi
267d(5): mov $0x4,%edi
2682(5): call 0x6b7e(%rip)
2687(7): lea 0xcbb2(%rip),%rsi
268e(5): mov %rax,0x18(%rsp)
2693(5): mov $0x5,%edx
2698(2): xor %edi,%edi
269a(5): call 0xfffff786(%rip)
269f(3): mov %rax,%r15
26a2(5): call 0xfffff69e(%rip)
26a7(5): mov 0x18(%rsp),%rcx
26ac(2): mov (%rax),%esi
26ae(3): mov %r15,%rdx
26b1(2): xor %eax,%eax
26b3(2): xor %edi,%edi
26b5(5): call 0xfffffa6b(%rip)
26ba(2): xor %eax,%eax
26bc(5): jmp 0xfffffe4c(%rip)
26c1(3): mov %r15,%rsi
26c4(5): mov $0x4,%edi
26c9(5): call 0x6b37(%rip)
26ce(5): mov $0x5,%edx
26d3(5): mov %rax,0x18(%rsp)
26d8(7): lea 0xb863(%rip),%rsi
26df(2): jmp 0xffffffb9(%rip)
26e1(5): mov $0x4,%esi
26e6(2): xor %edi,%edi
26e8(5): call 0x66b8(%rip)
26ed(3): mov %r12,%rdi
26f0(5): call 0x6de0(%rip)
26f5(7): lea 0xcab4(%rip),%rsi
26fc(3): mov %rax,%r12
26ff(5): mov $0x5,%edx
2704(2): xor %edi,%edi
2706(5): call 0xfffff71a(%rip)
270b(3): mov %r12,%rcx
270e(3): mov %rax,%rdx
2711(2): xor %esi,%esi
2713(2): xor %edi,%edi
2715(2): xor %eax,%eax
2717(5): call 0xfffffa09(%rip)
271c(5): mov %r13,0x10(%rsp)
2721(5): jmp 0xfffffd7a(%rip)
2726(6): movzx 0x8(%rsp),%r12d
272c(6): movzx 0x7(%rsp),%r15d
2732(2): xor %edx,%edx
2734(3): mov %r12d,%esi
2737(3): mov %r15d,%edi
273a(5): call 0x1756(%rip)
273f(5): mov $0x1,%edx
2744(3): mov %r12d,%esi
2747(3): mov %r15d,%edi
274a(3): mov %rax,%r13
274d(5): call 0x1743(%rip)
2752(5): mov %rax,0x10(%rsp)
2757(5): jmp 0xfffffd44(%rip)
275c(5): mov $0x4,%esi
2761(2): xor %edi,%edi
2763(5): call 0x663d(%rip)
2768(5): mov %r13,0x10(%rsp)
276d(5): jmp 0xfffffd2e(%rip)
2772(2): xor %edi,%edi
2774(5): call 0x21bc(%rip)
2779(5): call 0xfffff707(%rip)
277e(7): lea 0xb781(%rip),%rsi
2785(2): xor %edi,%edi
2787(5): mov $0x5,%edx
278c(5): call 0xfffff694(%rip)
2791(2): xor %esi,%esi
2793(3): mov %rax,%rdx
2796(2): xor %edi,%edi
2798(2): xor %eax,%eax
279a(5): call 0xfffff986(%rip)
279f(5): jmp 0xfffffb9d(%rip)

"_start" :
27b0(2): xor %ebp,%ebp
27b2(3): mov %rdx,%r9
27b5(1): pop %rsi
27b6(3): mov %rsp,%rdx
27b9(4): and $0xfffffff0,%rsp
27bd(1): push %rax
27be(1): push %rsp
27bf(7): lea 0xb27a(%rip),%r8
27c6(7): lea 0xb203(%rip),%rcx
27cd(7): lea 0xfffffa6c(%rip),%rdi
27d4(6): call 0x2107f6(%rip)
27da(1): hlt 

"deregister_tm_clones" :
27e0(7): lea 0x2108b9(%rip),%rdi
27e7(1): push %rbp
27e8(7): lea 0x2108b1(%rip),%rax
27ef(3): cmp %rdi,%rax
27f2(3): mov %rsp,%rbp
27f5(2): jz 0x1b(%rip)
27f7(7): mov 0x2107ca(%rip),%rax
27fe(3): test %rax,%rax
2801(2): jz 0xf(%rip)
2803(1): pop %rbp
2804(2): jmp %rax
2806(a): nop 0x0(%rax,%rax,1)
2810(1): pop %rbp
2811(1): ret near (%rsp)

"register_tm_clones" :
2820(7): lea 0x210879(%rip),%rdi
2827(7): lea 0x210872(%rip),%rsi
282e(1): push %rbp
282f(3): sub %rdi,%rsi
2832(3): mov %rsp,%rbp
2835(4): sar $0x3,%rsi
2839(3): mov %rsi,%rax
283c(4): shr $0x3f,%rax
2840(3): add %rax,%rsi
2843(3): sar $0x1,%rsi
2846(2): jz 0x1a(%rip)
2848(7): mov 0x210791(%rip),%rax
284f(3): test %rax,%rax
2852(2): jz 0xe(%rip)
2854(1): pop %rbp
2855(2): jmp %rax
2857(9): nop 0x0(%rax,%rax,1)
2860(1): pop %rbp
2861(1): ret near (%rsp)

"__do_global_dtors_aux" :
2870(7): cmp $0x0,0x210871(%rip)
2877(2): jnz 0x31(%rip)
2879(8): cmp $0x0,0x210767(%rip)
2881(1): push %rbp
2882(3): mov %rsp,%rbp
2885(2): jz 0xe(%rip)
2887(7): mov 0x21077a(%rip),%rdi
288e(5): call 0xfffff9a2(%rip)
2893(5): call 0xffffff4d(%rip)
2898(7): mov $0x1,0x210849(%rip)
289f(1): pop %rbp
28a0(1): ret near (%rsp)
28a1(7): nop 0x0(%rax)
28a8(2): REP ret near (%rsp)

"frame_dummy" :
28b0(1): push %rbp
28b1(3): mov %rsp,%rbp
28b4(1): pop %rbp
28b5(5): jmp 0xffffff6b(%rip)

"make_format" :
28c0(2): push %r15
28c2(2): push %r14
28c4(2): push %r13
28c6(2): push %r12
28c8(4): lea 0x0(%rdi,%rsi,1),%r12
28cc(1): push %rbp
28cd(4): lea 0x1(%rdi),%rbp
28d1(1): push %rbx
28d2(7): lea 0xba0f(%rip),%r13
28d9(4): sub $0x18,%rsp
28dd(3): cmp %r12,%rbp
28e0(3): mov %rbp,%rbx
28e3(4): mov %rdx,(%rsp)
28e7(5): mov %rcx,0x8(%rsp)
28ec(2): jb 0x26(%rip)
28ee(2): jmp 0x6d(%rip)
28f0(4): mov (%rsp),%rdi
28f4(3): mov %r14d,%esi
28f7(5): call 0xfffff5b9(%rip)
28fc(3): test %rax,%rax
28ff(2): jz 0xa(%rip)
2901(4): mov %r15b,0x0(%rbp)
2905(4): add $0x1,%rbp
2909(4): add $0x1,%rbx
290d(3): cmp %rbx,%r12
2910(2): jbe 0x4b(%rip)
2912(4): movsx (%rbx),%r14d
2916(3): mov %r13,%rdi
2919(3): mov %r14d,%esi
291c(3): mov %r14d,%r15d
291f(5): call 0xfffff591(%rip)
2924(3): test %rax,%rax
2927(2): jnz 0xffffffc9(%rip)
2929(3): cmp %r12,%rbx
292c(2): jnb 0x2f(%rip)
292e(3): mov %r12,%rsi
2931(3): mov %rbx,%rcx
2934(3): mov %rbp,%rax
2937(3): sub %rbx,%rsi
293a(3): add %rbp,%rsi
293d(2): jmp 0x7(%rip)
293f(1): nop 
2940(4): movzx (%rcx),%r15d
2944(4): add $0x1,%rax
2948(4): add $0x1,%rcx
294c(4): mov %r15b,0xffffffff(%rax)
2950(3): cmp %rsi,%rax
2953(2): jnz 0xffffffed(%rip)
2955(3): sub %rbx,%r12
2958(3): add %r12,%rbp
295b(5): mov 0x8(%rsp),%rsi
2960(4): add $0x18,%rsp
2964(3): mov %rbp,%rdi
2967(1): pop %rbx
2968(1): pop %rbp
2969(2): pop %r12
296b(2): pop %r13
296d(2): pop %r14
296f(2): pop %r15
2971(5): jmp 0xfffff40f(%rip)

"out_uint_x" :
2980(1): push %rbp
2981(1): push %rbx
2982(3): mov %rdx,%rbp
2985(7): lea 0xb0f8(%rip),%rcx
298c(7): lea 0xb0f4(%rip),%rdx
2993(3): mov %rdi,%rbx
2996(4): sub $0x8,%rsp
299a(5): call 0xffffff26(%rip)
299f(4): add $0x8,%rsp
29a3(3): mov %rbp,%rdx
29a6(3): mov %rbx,%rsi
29a9(1): pop %rbx
29aa(1): pop %rbp
29ab(5): mov $0x1,%edi
29b0(2): xor %eax,%eax
29b2(5): jmp 0xfffff73e(%rip)

"out_string" :
29c0(1): push %rbp
29c1(1): push %rbx
29c2(3): mov %rdx,%rbp
29c5(7): lea 0xc99f(%rip),%rcx
29cc(7): lea 0xcc6f(%rip),%rdx
29d3(3): mov %rdi,%rbx
29d6(4): sub $0x8,%rsp
29da(5): call 0xfffffee6(%rip)
29df(4): add $0x8,%rsp
29e3(3): mov %rbp,%rdx
29e6(3): mov %rbx,%rsi
29e9(1): pop %rbx
29ea(1): pop %rbp
29eb(5): mov $0x1,%edi
29f0(2): xor %eax,%eax
29f2(5): jmp 0xfffff6fe(%rip)

"out_uint" :
2a00(1): push %rbp
2a01(1): push %rbx
2a02(3): mov %rdx,%rbp
2a05(7): lea 0xb07f(%rip),%rcx
2a0c(7): lea 0xb07b(%rip),%rdx
2a13(3): mov %rdi,%rbx
2a16(4): sub $0x8,%rsp
2a1a(5): call 0xfffffea6(%rip)
2a1f(4): add $0x8,%rsp
2a23(3): mov %rbp,%rdx
2a26(3): mov %rbx,%rsi
2a29(1): pop %rbx
2a2a(1): pop %rbp
2a2b(5): mov $0x1,%edi
2a30(2): xor %eax,%eax
2a32(5): jmp 0xfffff6be(%rip)

"out_int" :
2a40(1): push %rbp
2a41(1): push %rbx
2a42(3): mov %rdx,%rbp
2a45(7): lea 0xb046(%rip),%rcx
2a4c(7): lea 0xb042(%rip),%rdx
2a53(3): mov %rdi,%rbx
2a56(4): sub $0x8,%rsp
2a5a(5): call 0xfffffe66(%rip)
2a5f(4): add $0x8,%rsp
2a63(3): mov %rbp,%rdx
2a66(3): mov %rbx,%rsi
2a69(1): pop %rbx
2a6a(1): pop %rbp
2a6b(5): mov $0x1,%edi
2a70(2): xor %eax,%eax
2a72(5): jmp 0xfffff67e(%rip)

"print_statfs" :
2a80(1): push %rbp
2a81(3): lea 0xffffffad(%rdx),%eax
2a84(1): push %rbx
2a85(4): sub $0x8,%rsp
2a89(3): cmp $0x21,%eax
2a8c(6): jnbe 0x1c4(%rip)
2a92(7): lea 0xb507(%rip),%rcx
2a99(3): mov %rdi,%rbx
2a9c(3): mov %rsi,%rbp
2a9f(4): movsxd 0x0(%rcx,%rax,4),%rax
2aa3(3): add %rcx,%rax
2aa6(2): jmp %rax
2aa8(8): nop 0x0(%rax,%rax,1)
2ab0(4): mov 0x48(%r9),%rdx
2ab4(3): test %rdx,%rdx
2ab7(2): jnz 0x6(%rip)
2ab9(4): mov 0x8(%r9),%rdx
2abd(3): mov %rbp,%rsi
2ac0(3): mov %rbx,%rdi
2ac3(5): call 0xffffff3d(%rip)
2ac8(4): add $0x8,%rsp
2acc(2): xor %eax,%eax
2ace(1): pop %rbx
2acf(1): pop %rbp
2ad0(1): ret near (%rsp)
2ad1(7): nop 0x0(%rax)
2ad8(3): mov (%r9),%rdx
2adb(5): call 0xfffffea5(%rip)
2ae0(2): jmp 0xffffffe8(%rip)
2ae2(6): nop 0x0(%rax,%rax,1)
2ae8(3): mov (%r9),%r8
2aeb(7): cmp $0x2bad1dea,%r8
2af2(6): jz 0xbcb(%rip)
2af8(6): jle 0x180(%rip)
2afe(7): cmp $0x65735543,%r8
2b05(6): jz 0xc3c(%rip)
2b0b(6): jnle 0x205(%rip)
2b11(7): cmp $0x534f434b,%r8
2b18(6): jz 0xc05(%rip)
2b1e(6): jnle 0x302(%rip)
2b24(7): cmp $0x45584653,%r8
2b2b(6): jz 0xb7a(%rip)
2b31(6): jle 0x6ff(%rip)
2b37(7): cmp $0x5346314d,%r8
2b3e(7): lea 0xb0de(%rip),%rdx
2b45(2): jz 0x63(%rip)
2b47(6): jnle 0x9f7(%rip)
2b4d(7): cmp $0x50495045,%r8
2b54(7): lea 0xb186(%rip),%rdx
2b5b(2): jz 0x4d(%rip)
2b5d(7): cmp $0x52654973,%r8
2b64(7): lea 0xb163(%rip),%rdx
2b6b(2): jz 0x3d(%rip)
2b6d(7): cmp $0x47504653,%r8
2b74(7): lea 0xb038(%rip),%rdx
2b7b(2): jz 0x2d(%rip)
2b7d(7): lea 0xb205(%rip),%rcx
2b84(7): lea 0x2105e5(%rip),%rdi
2b8b(5): mov $0x1d,%edx
2b90(5): mov $0x1,%esi
2b95(2): xor %eax,%eax
2b97(5): call 0xfffff689(%rip)
2b9c(7): lea 0x2105cd(%rip),%rdx
2ba3(5): nop 0x0(%rax,%rax,1)
2ba8(3): mov %rbp,%rsi
2bab(3): mov %rbx,%rdi
2bae(5): call 0xfffffe12(%rip)
2bb3(5): jmp 0xffffff15(%rip)
2bb8(8): nop 0x0(%rax,%rax,1)
2bc0(4): mov 0x20(%r9),%rdx
2bc4(5): call 0xfffffe7c(%rip)
2bc9(5): jmp 0xfffffeff(%rip)
2bce(2): nop 
2bd0(4): mov 0x10(%r9),%rdx
2bd4(5): call 0xfffffe6c(%rip)
2bd9(5): jmp 0xfffffeef(%rip)
2bde(2): nop 
2be0(4): mov 0x28(%r9),%rdx
2be4(5): jmp 0xfffffed9(%rip)
2be9(7): nop 0x0(%rax)
2bf0(4): mov 0x30(%r9),%rdx
2bf4(5): call 0xfffffe4c(%rip)
2bf9(5): jmp 0xfffffecf(%rip)
2bfe(2): nop 
2c00(4): mov 0x18(%r9),%rdx
2c04(5): call 0xfffffe3c(%rip)
2c09(5): jmp 0xfffffebf(%rip)
2c0e(2): nop 
2c10(4): mov 0x38(%r9),%edx
2c14(4): mov 0x3c(%r9),%eax
2c18(4): shl/sal $0x20,%rdx
2c1c(3): or %rax,%rdx
2c1f(5): call 0xfffffd61(%rip)
2c24(5): jmp 0xfffffea4(%rip)
2c29(7): nop 0x0(%rax)
2c30(4): mov 0x40(%r9),%rdx
2c34(5): call 0xfffffdcc(%rip)
2c39(5): jmp 0xfffffe8f(%rip)
2c3e(2): nop 
2c40(3): mov %r8,%rdx
2c43(5): call 0xfffffd7d(%rip)
2c48(5): jmp 0xfffffe80(%rip)
2c4d(3): nop (%rax)
2c50(7): mov 0x210451(%rip),%rdi
2c57(4): mov 0x28(%rdi),%rax
2c5b(4): cmp 0x30(%rdi),%rax
2c5f(6): jnb 0x381(%rip)
2c65(4): lea 0x1(%rax),%rdx
2c69(4): mov %rdx,0x28(%rdi)
2c6d(3): mov $0x3f,(%rax)
2c70(5): jmp 0xfffffe58(%rip)
2c75(3): nop (%rax)
2c78(7): cmp $0xadf5,%r8
2c7f(6): jz 0xa7a(%rip)
2c85(6): jnle 0x113(%rip)
2c8b(7): cmp $0x4244,%r8
2c92(6): jz 0xa5b(%rip)
2c98(6): jnle 0x2d8(%rip)
2c9e(7): cmp $0x138f,%r8
2ca5(6): jz 0xa30(%rip)
2cab(6): jle 0x5e5(%rip)
2cb1(7): cmp $0x3434,%r8
2cb8(7): lea 0xafbd(%rip),%rdx
2cbf(6): jz 0xfffffee9(%rip)
2cc5(6): jnle 0x8ba(%rip)
2ccb(7): cmp $0x2468,%r8
2cd2(7): lea 0xaf66(%rip),%rdx
2cd9(6): jz 0xfffffecf(%rip)
2cdf(7): cmp $0x2478,%r8
2ce6(7): lea 0xaf5b(%rip),%rdx
2ced(6): jz 0xfffffebb(%rip)
2cf3(7): cmp $0x1cd1,%r8
2cfa(7): lea 0xae50(%rip),%rdx
2d01(6): jnz 0xfffffe7c(%rip)
2d07(5): jmp 0xfffffea1(%rip)
2d0c(4): nop 0x0(%rax)
2d10(5): mov $0x858458f6,%eax
2d15(3): cmp %rax,%r8
2d18(6): jz 0x9ed(%rip)
2d1e(6): jnle 0x1da(%rip)
2d24(7): cmp $0x73636673,%r8
2d2b(6): jz 0x9fe(%rip)
2d31(6): jle 0x49f(%rip)
2d37(7): cmp $0x7461636f,%r8
2d3e(7): lea 0xaf50(%rip),%rdx
2d45(6): jz 0xfffffe63(%rip)
2d4b(6): jnle 0x6a9(%rip)
2d51(7): cmp $0x73727279,%r8
2d58(7): lea 0xad97(%rip),%rdx
2d5f(6): jz 0xfffffe49(%rip)
2d65(7): cmp $0x73757245,%r8
2d6c(7): lea 0xadab(%rip),%rdx
2d73(6): jz 0xfffffe35(%rip)
2d79(7): cmp $0x73717368,%r8
2d80(7): lea 0xaf9a(%rip),%rdx
2d87(6): jnz 0xfffffdf6(%rip)
2d8d(5): jmp 0xfffffe1b(%rip)
2d92(6): nop 0x0(%rax,%rax,1)
2d98(7): cmp $0x12ff7b5,%r8
2d9f(6): jz 0x92a(%rip)
2da5(6): jnle 0xe9(%rip)
2dab(7): cmp $0x414a53,%r8
2db2(6): jz 0x99b(%rip)
2db8(6): jle 0x360(%rip)
2dbe(7): cmp $0x1021997,%r8
2dc5(7): lea 0xaf91(%rip),%rdx
2dcc(6): jz 0xfffffddc(%rip)
2dd2(6): jnle 0x55a(%rip)
2dd8(7): cmp $0xc36400,%r8
2ddf(7): lea 0xad1b(%rip),%rdx
2de6(6): jz 0xfffffdc2(%rip)
2dec(7): cmp $0x1021994,%r8
2df3(7): lea 0xaf42(%rip),%rdx
2dfa(6): jz 0xfffffdae(%rip)
2e00(7): cmp $0xc0ffee,%r8
2e07(7): lea 0xadb4(%rip),%rdx
2e0e(6): jnz 0xfffffd6f(%rip)
2e14(5): jmp 0xfffffd94(%rip)
2e19(7): nop 0x0(%rax)
2e20(7): cmp $0x6165676c,%r8
2e27(6): jz 0x8ea(%rip)
2e2d(6): jnle 0x1c2(%rip)
2e33(7): cmp $0x58465342,%r8
2e3a(7): lea 0xad04(%rip),%rdx
2e41(6): jz 0xfffffd67(%rip)
2e47(6): jnle 0x4a4(%rip)
2e4d(7): cmp $0x565a4653,%r8
2e54(7): lea 0xaf13(%rip),%rdx
2e5b(6): jz 0xfffffd4d(%rip)
2e61(7): cmp $0x58295829,%r8
2e68(7): lea 0xad87(%rip),%rdx
2e6f(6): jz 0xfffffd39(%rip)
2e75(7): cmp $0x54190100,%r8
2e7c(6): jnz 0xfffffd01(%rip)
2e82(7): lea 0xac35(%rip),%rdx
2e89(5): jmp 0xfffffd1f(%rip)
2e8e(7): cmp $0x11307854,%r8
2e95(6): jz 0x84c(%rip)
2e9b(6): jnle 0x1b5(%rip)
2ea1(7): cmp $0x7655821,%r8
2ea8(7): lea 0xae1b(%rip),%rdx
2eaf(6): jz 0xfffffcf9(%rip)
2eb5(6): jnle 0x580(%rip)
2ebb(7): cmp $0x12ff7b7,%r8
2ec2(7): lea 0xac5a(%rip),%rdx
2ec9(6): jz 0xfffffcdf(%rip)
2ecf(7): lea 0xae5a(%rip),%rdx
2ed6(6): jl 0xfffffcd2(%rip)
2edc(7): cmp $0x13111a8,%r8
2ee3(7): lea 0xacf6(%rip),%rdx
2eea(6): jz 0xfffffcbe(%rip)
2ef0(5): jmp 0xfffffc8d(%rip)
2ef5(3): nop (%rax)
2ef8(5): mov $0xc97e8168,%eax
2efd(3): cmp %rax,%r8
2f00(6): jz 0x7b1(%rip)
2f06(6): jnle 0x1aa(%rip)
2f0c(6): sub $0x1ea6d67e,%rax
2f12(7): lea 0xad8c(%rip),%rdx
2f19(3): cmp %rax,%r8
2f1c(6): jz 0xfffffc8c(%rip)
2f22(6): jnle 0x595(%rip)
2f28(6): sub $0x155351f4,%rax
2f2e(7): lea 0xac99(%rip),%rdx
2f35(3): cmp %rax,%r8
2f38(6): jz 0xfffffc70(%rip)
2f3e(6): add $0xf7da3ff,%rax
2f44(7): lea 0xae1e(%rip),%rdx
2f4b(3): cmp %rax,%r8
2f4e(6): jz 0xfffffc5a(%rip)
2f54(6): sub $0x13de94b7,%rax
2f5a(7): lea 0xab8f(%rip),%rdx
2f61(3): cmp %rax,%r8
2f64(6): jnz 0xfffffc19(%rip)
2f6a(5): jmp 0xfffffc3e(%rip)
2f6f(1): nop 
2f70(7): cmp $0x5df5,%r8
2f77(6): jz 0x7be(%rip)
2f7d(6): jle 0x1f3(%rip)
2f83(7): cmp $0x9660,%r8
2f8a(6): jz 0x61f(%rip)
2f90(6): jnle 0x423(%rip)
2f96(7): cmp $0x7275,%r8
2f9d(7): lea 0xad33(%rip),%rdx
2fa4(6): jz 0xfffffc04(%rip)
2faa(7): cmp $0x72b6,%r8
2fb1(7): lea 0xac4e(%rip),%rdx
2fb8(6): jz 0xfffffbf0(%rip)
2fbe(7): cmp $0x6969,%r8
2fc5(7): lea 0xacdb(%rip),%rdx
2fcc(6): jnz 0xfffffbb1(%rip)
2fd2(5): jmp 0xfffffbd6(%rip)
2fd7(9): nop 0x0(%rax,%rax,1)
2fe0(5): mov $0x3f,%esi
2fe5(5): call 0xffffeeeb(%rip)
2fea(5): jmp 0xfffffade(%rip)
2fef(7): cmp $0x62656572,%r8
2ff6(7): lea 0xad2d(%rip),%rdx
2ffd(6): jz 0xfffffbab(%rip)
3003(6): jnle 0x473(%rip)
3009(7): cmp $0x62646576,%r8
3010(7): lea 0xad3f(%rip),%rdx
3017(6): jz 0xfffffb91(%rip)
301d(7): cmp $0x62656570,%r8
3024(7): lea 0xaafc(%rip),%rdx
302b(6): jz 0xfffffb7d(%rip)
3031(7): cmp $0x61756673,%r8
3038(7): lea 0xaa7e(%rip),%rdx
303f(6): jnz 0xfffffb3e(%rip)
3045(5): jmp 0xfffffb63(%rip)
304a(6): nop 0x0(%rax,%rax,1)
3050(7): cmp $0x19830326,%r8
3057(7): lea 0xab2e(%rip),%rdx
305e(6): jz 0xfffffb4a(%rip)
3064(6): jnle 0x499(%rip)
306a(7): cmp $0x15013346,%r8
3071(7): lea 0xacd8(%rip),%rdx
3078(6): jz 0xfffffb30(%rip)
307e(7): cmp $0x19800202,%r8
3085(7): lea 0xabd7(%rip),%rdx
308c(6): jz 0xfffffb1c(%rip)
3092(7): cmp $0x13661366,%r8
3099(7): lea 0xaa29(%rip),%rdx
30a0(6): jnz 0xfffffadd(%rip)
30a6(5): jmp 0xfffffb02(%rip)
30ab(5): nop 0x0(%rax,%rax,1)
30b0(5): mov $0xf97cff8c,%eax
30b5(7): lea 0xac40(%rip),%rdx
30bc(3): cmp %rax,%r8
30bf(6): jz 0xfffffae9(%rip)
30c5(6): jnle 0x2a8(%rip)
30cb(6): sub $0x1b1e7da8,%rax
30d1(7): lea 0xaa89(%rip),%rdx
30d8(3): cmp %rax,%r8
30db(6): jz 0xfffffacd(%rip)
30e1(6): add $0x14969e2c,%rax
30e7(7): lea 0xaa95(%rip),%rdx
30ee(3): cmp %rax,%r8
30f1(6): jz 0xfffffab7(%rip)
30f7(6): sub $0x27f6d5ff,%rax
30fd(7): lea 0xa9d9(%rip),%rdx
3104(3): cmp %rax,%r8
3107(6): jnz 0xfffffa76(%rip)
310d(5): jmp 0xfffffa9b(%rip)
3112(6): nop 0x0(%rax,%rax,1)
3118(7): cmp $0xef53,%r8
311f(7): lea 0xaa4e(%rip),%rdx
3126(6): jz 0xfffffa82(%rip)
312c(6): jle 0x4bc(%rip)
3132(7): cmp $0x11954,%r8
3139(6): jz 0xfffffd49(%rip)
313f(7): cmp $0x27e0eb,%r8
3146(7): lea 0xa9b9(%rip),%rdx
314d(6): jz 0xfffffa5b(%rip)
3153(7): cmp $0xf15f,%r8
315a(7): lea 0xa9f7(%rip),%rdx
3161(6): jnz 0xfffffa1c(%rip)
3167(5): jmp 0xfffffa41(%rip)
316c(4): nop 0x0(%rax)
3170(7): cmp $0x4d44,%r8
3177(7): lea 0xaaec(%rip),%rdx
317e(6): jz 0xfffffa2a(%rip)
3184(6): jle 0x431(%rip)
318a(7): cmp $0x517b,%r8
3191(7): lea 0xab74(%rip),%rdx
3198(6): jz 0xfffffa10(%rip)
319e(7): cmp $0x564c,%r8
31a5(7): lea 0xaac4(%rip),%rdx
31ac(6): jz 0xfffff9fc(%rip)
31b2(7): cmp $0x4d5a,%r8
31b9(7): lea 0xaa9c(%rip),%rdx
31c0(6): jnz 0xfffff9bd(%rip)
31c6(5): jmp 0xfffff9e2(%rip)
31cb(5): nop 0x0(%rax,%rax,1)
31d0(7): cmp $0x68191122,%r8
31d7(7): lea 0xaae7(%rip),%rdx
31de(6): jz 0xfffff9ca(%rip)
31e4(6): jle 0x494(%rip)
31ea(7): cmp $0x6e667364,%r8
31f1(7): lea 0xaa7f(%rip),%rdx
31f8(6): jz 0xfffff9b0(%rip)
31fe(7): cmp $0x6e736673,%r8
3205(7): lea 0xaa76(%rip),%rdx
320c(6): jz 0xfffff99c(%rip)
3212(7): cmp $0x6b414653,%r8
3219(7): lea 0xa9f0(%rip),%rdx
3220(6): jnz 0xfffff95d(%rip)
3226(5): jmp 0xfffff982(%rip)
322b(5): nop 0x0(%rax,%rax,1)
3230(7): cmp $0x42465331,%r8
3237(7): lea 0xa89a(%rip),%rdx
323e(6): jz 0xfffff96a(%rip)
3244(6): jle 0x404(%rip)
324a(7): cmp $0x43415d53,%r8
3251(7): lea 0xaaac(%rip),%rdx
3258(6): jz 0xfffff950(%rip)
325e(7): cmp $0x453dcd28,%r8
3265(7): lea 0xa8cb(%rip),%rdx
326c(6): jz 0xfffff93c(%rip)
3272(7): cmp $0x42494e4d,%r8
3279(7): lea 0xa864(%rip),%rdx
3280(6): jnz 0xfffff8fd(%rip)
3286(5): jmp 0xfffff922(%rip)
328b(5): nop 0x0(%rax,%rax,1)
3290(7): cmp $0x7c0,%r8
3297(7): lea 0xa963(%rip),%rdx
329e(6): jz 0xfffff90a(%rip)
32a4(6): jle 0x374(%rip)
32aa(7): cmp $0x137d,%r8
32b1(7): lea 0xa8b8(%rip),%rdx
32b8(6): jz 0xfffff8f0(%rip)
32be(7): cmp $0x137f,%r8
32c5(7): lea 0xa95c(%rip),%rdx
32cc(6): jz 0xfffff8dc(%rip)
32d2(7): cmp $0x1373,%r8
32d9(7): lea 0xaa77(%rip),%rdx
32e0(6): jnz 0xfffff89d(%rip)
32e6(5): jmp 0xfffff8c2(%rip)
32eb(7): cmp $0x5dca2df5,%r8
32f2(7): lea 0xa9ef(%rip),%rdx
32f9(6): jz 0xfffff8af(%rip)
32ff(7): cmp $0x61636673,%r8
3306(7): lea 0xa793(%rip),%rdx
330d(6): jz 0xfffff89b(%rip)
3313(7): cmp $0x5a3c69f0,%r8
331a(7): lea 0xa77a(%rip),%rdx
3321(6): jnz 0xfffff85c(%rip)
3327(5): jmp 0xfffff881(%rip)
332c(7): cmp $0x12fd16d,%r8
3333(7): lea 0xaa4b(%rip),%rdx
333a(6): jz 0xfffff86e(%rip)
3340(7): cmp $0x12ff7b4,%r8
3347(7): lea 0xaa31(%rip),%rdx
334e(6): jz 0xfffff85a(%rip)
3354(7): cmp $0x1161970,%r8
335b(7): lea 0xa848(%rip),%rdx
3362(6): jnz 0xfffff81b(%rip)
3368(5): jmp 0xfffff840(%rip)
336d(5): mov $0xfe534d42,%eax
3372(7): lea 0xa997(%rip),%rdx
3379(3): cmp %rax,%r8
337c(6): jz 0xfffff82c(%rip)
3382(6): add $0x1000000,%rax
3388(7): lea 0xa78a(%rip),%rdx
338f(3): cmp %rax,%r8
3392(6): jz 0xfffff816(%rip)
3398(6): sub $0x5bd64f9,%rax
339e(7): lea 0xa824(%rip),%rdx
33a5(3): cmp %rax,%r8
33a8(6): jnz 0xfffff7d5(%rip)
33ae(5): jmp 0xfffff7fa(%rip)
33b3(7): cmp $0x9fa1,%r8
33ba(7): lea 0xa8cb(%rip),%rdx
33c1(6): jz 0xfffff7e7(%rip)
33c7(7): cmp $0x9fa2,%r8
33ce(7): lea 0xa97f(%rip),%rdx
33d5(6): jz 0xfffff7d3(%rip)
33db(7): cmp $0x9fa0,%r8
33e2(7): lea 0xa8c9(%rip),%rdx
33e9(6): jnz 0xfffff794(%rip)
33ef(5): jmp 0xfffff7b9(%rip)
33f4(7): cmp $0x794c7630,%r8
33fb(7): lea 0xa899(%rip),%rdx
3402(6): jz 0xfffff7a6(%rip)
3408(7): cmp $0x7c7c6673,%r8
340f(7): lea 0xa895(%rip),%rdx
3416(6): jz 0xfffff792(%rip)
341c(7): cmp $0x74726163,%r8
3423(7): lea 0xa918(%rip),%rdx
342a(6): jnz 0xfffff753(%rip)
3430(5): jmp 0xfffff778(%rip)
3435(7): cmp $0xbad1dea,%r8
343c(7): lea 0xa75f(%rip),%rdx
3443(6): jz 0xfffff765(%rip)
3449(7): cmp $0xbd00bd0,%r8
3450(7): lea 0xa7c5(%rip),%rdx
3457(6): jz 0xfffff751(%rip)
345d(7): cmp $0x9041934,%r8
3464(7): lea 0xa644(%rip),%rdx
346b(6): jnz 0xfffff712(%rip)
3471(5): jmp 0xfffff737(%rip)
3476(7): cmp $0x64626720,%r8
347d(7): lea 0xa6c5(%rip),%rdx
3484(6): jz 0xfffff724(%rip)
348a(7): cmp $0x64646178,%r8
3491(7): lea 0xa6ab(%rip),%rdx
3498(6): jz 0xfffff710(%rip)
349e(7): cmp $0x63677270,%r8
34a5(7): lea 0xa663(%rip),%rdx
34ac(6): jnz 0xfffff6d1(%rip)
34b2(5): jmp 0xfffff6f6(%rip)
34b7(5): mov $0xbacbacbc,%eax
34bc(7): lea 0xa89f(%rip),%rdx
34c3(3): cmp %rax,%r8
34c6(6): jz 0xfffff6e2(%rip)
34cc(6): add $0x42431f1,%rax
34d2(7): lea 0xa83c(%rip),%rdx
34d9(3): cmp %rax,%r8
34dc(6): jz 0xfffff6cc(%rip)
34e2(6): sub $0x1335c539,%rax
34e8(7): lea 0xa88a(%rip),%rdx
34ef(3): cmp %rax,%r8
34f2(6): jnz 0xfffff68b(%rip)
34f8(5): jmp 0xfffff6b0(%rip)
34fd(7): cmp $0x24051905,%r8
3504(7): lea 0xa83f(%rip),%rdx
350b(6): jz 0xfffff69d(%rip)
3511(7): cmp $0x28cd3d45,%r8
3518(7): lea 0xa611(%rip),%rdx
351f(6): jz 0xfffff689(%rip)
3525(7): cmp $0x1badface,%r8
352c(7): lea 0xa6a1(%rip),%rdx
3533(6): jnz 0xfffff64a(%rip)
3539(5): jmp 0xfffff66f(%rip)
353e(7): cmp $0x53464846,%r8
3545(7): lea 0xa827(%rip),%rdx
354c(6): jz 0xfffff65c(%rip)
3552(7): cmp $0x5346544e,%r8
3559(7): lea 0xa727(%rip),%rdx
3560(6): jz 0xfffff648(%rip)
3566(7): cmp $0x5346414f,%r8
356d(7): lea 0xa69e(%rip),%rdx
3574(6): jnz 0xfffff609(%rip)
357a(5): jmp 0xfffff62e(%rip)
357f(7): cmp $0x4004,%r8
3586(2): jz 0x23(%rip)
3588(7): cmp $0x4006,%r8
358f(7): lea 0xa5f2(%rip),%rdx
3596(6): jz 0xfffff612(%rip)
359c(7): cmp $0x4000,%r8
35a3(6): jnz 0xfffff5da(%rip)
35a9(7): lea 0xa640(%rip),%rdx
35b0(5): jmp 0xfffff5f8(%rip)
35b5(7): cmp $0x482b,%r8
35bc(7): lea 0xa5f5(%rip),%rdx
35c3(6): jz 0xfffff5e5(%rip)
35c9(7): cmp $0x4858,%r8
35d0(7): lea 0xa5e6(%rip),%rdx
35d7(6): jz 0xfffff5d1(%rip)
35dd(5): jmp 0xfffff5a0(%rip)
35e2(6): nop 0x0(%rax,%rax,1)
35e8(7): cmp $0xadff,%r8
35ef(7): lea 0xa4b4(%rip),%rdx
35f6(6): jz 0xfffff5b2(%rip)
35fc(7): cmp $0xef51,%r8
3603(7): lea 0xa574(%rip),%rdx
360a(6): jz 0xfffff59e(%rip)
3610(5): jmp 0xfffff56d(%rip)
3615(3): nop (%rax)
3618(4): cmp $0x2f,%r8
361c(7): lea 0xa69d(%rip),%rdx
3623(6): jz 0xfffff585(%rip)
3629(7): cmp $0x187,%r8
3630(7): lea 0xa48b(%rip),%rdx
3637(6): jz 0xfffff571(%rip)
363d(5): jmp 0xfffff540(%rip)
3642(6): nop 0x0(%rax,%rax,1)
3648(7): cmp $0x2fc12fc1,%r8
364f(7): lea 0xa719(%rip),%rdx
3656(6): jz 0xfffff552(%rip)
365c(7): cmp $0x3153464a,%r8
3663(7): lea 0xa5a2(%rip),%rdx
366a(6): jz 0xfffff53e(%rip)
3670(5): jmp 0xfffff50d(%rip)
3675(3): nop (%rax)
3678(7): cmp $0x65735546,%r8
367f(7): lea 0xa50c(%rip),%rdx
3686(6): jz 0xfffff522(%rip)
368c(7): cmp $0x67596969,%r8
3693(7): lea 0xa643(%rip),%rdx
369a(6): jz 0xfffff50e(%rip)
36a0(5): jmp 0xfffff4dd(%rip)
36a5(7): lea 0xa4f9(%rip),%rdx
36ac(5): jmp 0xfffff4fc(%rip)
36b1(7): lea 0xa55e(%rip),%rdx
36b8(5): jmp 0xfffff4f0(%rip)
36bd(7): lea 0xa522(%rip),%rdx
36c4(5): jmp 0xfffff4e4(%rip)
36c9(7): lea 0xa666(%rip),%rdx
36d0(5): jmp 0xfffff4d8(%rip)
36d5(7): lea 0xa552(%rip),%rdx
36dc(5): jmp 0xfffff4cc(%rip)
36e1(7): lea 0xa4f0(%rip),%rdx
36e8(5): jmp 0xfffff4c0(%rip)
36ed(7): lea 0xa632(%rip),%rdx
36f4(5): jmp 0xfffff4b4(%rip)
36f9(7): lea 0xa3a5(%rip),%rdx
3700(5): jmp 0xfffff4a8(%rip)
3705(7): lea 0xa425(%rip),%rdx
370c(5): jmp 0xfffff49c(%rip)
3711(7): lea 0xa59f(%rip),%rdx
3718(5): jmp 0xfffff490(%rip)
371d(7): lea 0xa5f6(%rip),%rdx
3724(5): jmp 0xfffff484(%rip)
3729(7): lea 0xa5c1(%rip),%rdx
3730(5): jmp 0xfffff478(%rip)
3735(7): lea 0xa42e(%rip),%rdx
373c(5): jmp 0xfffff46c(%rip)
3741(7): lea 0xa452(%rip),%rdx
3748(5): jmp 0xfffff460(%rip)
374d(7): lea 0xa385(%rip),%rdx
3754(5): jmp 0xfffff454(%rip)

"print_it" :
3760(2): push %r15
3762(2): push %r14
3764(3): mov %rdi,%r14
3767(2): push %r13
3769(2): push %r12
376b(1): push %rbp
376c(1): push %rbx
376d(4): sub $0x28,%rsp
3771(4): mov %esi,0x4(%rsp)
3775(5): mov %rdx,0x8(%rsp)
377a(5): mov %rcx,0x10(%rsp)
377f(5): mov %r8,0x18(%rsp)
3784(5): call 0xffffe6bc(%rip)
3789(4): lea 0x3(%rax),%rdi
378d(5): call 0x6413(%rip)
3792(4): movzx (%r14),%esi
3796(3): mov %rax,%rbx
3799(5): mov $0x0,0x3(%rsp)
379e(3): test %sil,%sil
37a1(6): jz 0xd3(%rip)
37a7(3): mov %r14,%r12
37aa(5): jmp 0x85(%rip)
37af(1): nop 
37b0(7): cmp $0x0,0x20f9e9(%rip)
37b7(2): jz 0x48(%rip)
37b9(6): movsx 0x1(%r12),%r14d
37bf(4): lea 0xffffffd0(%r14),%eax
37c3(2): cmp $0x7,%al
37c5(6): jbe 0x1bb(%rip)
37cb(4): cmp $0x78,%r14b
37cf(6): jz 0x211(%rip)
37d5(3): test %r14b,%r14b
37d8(6): jnz 0x2b8(%rip)
37de(7): lea 0xab1b(%rip),%rsi
37e5(5): mov $0x5,%edx
37ea(2): xor %edi,%edi
37ec(5): call 0xffffe634(%rip)
37f1(2): xor %esi,%esi
37f3(3): mov %rax,%rdx
37f6(2): xor %edi,%edi
37f8(2): xor %eax,%eax
37fa(5): call 0xffffe926(%rip)
37ff(7): mov 0x20f8a2(%rip),%rdi
3806(4): mov 0x28(%rdi),%rax
380a(4): cmp 0x30(%rdi),%rax
380e(6): jnb 0x312(%rip)
3814(4): lea 0x1(%rax),%rdx
3818(3): mov %r12,%r14
381b(3): mov %rbp,%r12
381e(4): mov %rdx,0x28(%rdi)
3822(3): mov $0x5c,(%rax)
3825(5): movzx 0x1(%r14),%esi
382a(3): test %sil,%sil
382d(2): jz 0x47(%rip)
382f(4): cmp $0x25,%sil
3833(5): lea 0x1(%r12),%rbp
3838(2): jz 0x70(%rip)
383a(4): cmp $0x5c,%sil
383e(6): jz 0xffffff72(%rip)
3844(7): mov 0x20f85d(%rip),%rdi
384b(4): mov 0x28(%rdi),%rax
384f(4): cmp 0x30(%rdi),%rax
3853(6): jnb 0x22d(%rip)
3859(4): lea 0x1(%rax),%rdx
385d(3): mov %r12,%r14
3860(3): mov %rbp,%r12
3863(4): mov %rdx,0x28(%rdi)
3867(3): mov %sil,(%rax)
386a(5): movzx 0x1(%r14),%esi
386f(3): test %sil,%sil
3872(2): jnz 0xffffffbd(%rip)
3874(3): mov %rbx,%rdi
3877(5): call 0xffffe499(%rip)
387c(7): mov 0x20f825(%rip),%rsi
3883(7): mov 0x20f786(%rip),%rdi
388a(5): call 0xffffe706(%rip)
388f(5): movzx 0x3(%rsp),%eax
3894(4): add $0x28,%rsp
3898(1): pop %rbx
3899(1): pop %rbp
389a(2): pop %r12
389c(2): pop %r13
389e(2): pop %r14
38a0(2): pop %r15
38a2(1): ret near (%rsp)
38a3(5): nop 0x0(%rax,%rax,1)
38a8(7): lea 0xaa39(%rip),%rsi
38af(3): mov %rbp,%rdi
38b2(5): call 0xffffe6ae(%rip)
38b7(5): lea 0x1(%r12,%rax,1),%r14
38bc(7): lea 0xaa2d(%rip),%rsi
38c3(3): mov %r14,%rdi
38c6(5): call 0xffffe69a(%rip)
38cb(3): add %rax,%r14
38ce(4): movzx (%r14),%r13d
38d2(4): cmp $0x2e,%r13b
38d6(2): jnz 0x1b(%rip)
38d8(4): lea 0x1(%r14),%rdi
38dc(7): lea 0xaa0d(%rip),%rsi
38e3(5): call 0xffffe67d(%rip)
38e8(5): lea 0x1(%r14,%rax,1),%r14
38ed(4): movzx (%r14),%r13d
38f1(3): mov %r14,%rax
38f4(3): mov %r12,%rsi
38f7(3): mov %rbx,%rdi
38fa(3): sub %rbp,%rax
38fd(4): lea 0x1(%rax),%r15
3901(3): mov %rax,%rbp
3904(3): mov %r15,%rdx
3907(5): call 0xffffe6d9(%rip)
390c(3): test %r13b,%r13b
390f(2): jz 0x39(%rip)
3911(4): cmp $0x25,%r13b
3915(2): jz 0x37(%rip)
3917(4): movsx %r13b,%edx
391b(5): mov 0x18(%rsp),%r9
3920(5): mov 0x8(%rsp),%r8
3925(4): mov 0x4(%rsp),%ecx
3929(3): mov %r15,%rsi
392c(3): mov %rbx,%rdi
392f(5): mov 0x10(%rsp),%rax
3934(4): lea 0x1(%r14),%r12
3938(2): call %rax
393a(4): or %al,0x3(%rsp)
393e(5): jmp 0xfffffee7(%rip)
3943(5): nop 0x0(%rax,%rax,1)
3948(4): sub $0x1,%r14
394c(3): test %rbp,%rbp
394f(6): jnz 0x2c2(%rip)
3955(7): mov 0x20f74c(%rip),%rdi
395c(4): lea 0x1(%r14),%r12
3960(4): mov 0x28(%rdi),%rax
3964(4): cmp 0x30(%rdi),%rax
3968(6): jnb 0x1a8(%rip)
396e(4): lea 0x1(%rax),%rdx
3972(4): mov %rdx,0x28(%rdi)
3976(3): mov $0x25,(%rax)
3979(5): jmp 0xfffffeac(%rip)
397e(2): nop 
3980(6): movsx 0x2(%r12),%eax
3986(4): sub $0x30,%r14d
398a(3): lea 0xffffffd0(%rax),%edx
398d(3): cmp $0x7,%dl
3990(6): jnbe 0x251(%rip)
3996(5): lea 0xffffffd0(%rax,%r14,8),%r14d
399b(6): movsx 0x3(%r12),%eax
39a1(3): lea 0xffffffd0(%rax),%edx
39a4(3): cmp $0x7,%dl
39a7(6): jnbe 0x243(%rip)
39ad(5): lea 0xffffffd0(%rax,%r14,8),%r14d
39b2(4): add $0x4,%r12
39b6(7): mov 0x20f6eb(%rip),%rdi
39bd(4): mov 0x28(%rdi),%rax
39c1(4): cmp 0x30(%rdi),%rax
39c5(6): jnb 0x1e9(%rip)
39cb(4): lea 0x1(%rax),%rdx
39cf(4): mov %rdx,0x28(%rdi)
39d3(3): mov %r14b,(%rax)
39d6(5): lea 0xffffffff(%r12),%r14
39db(5): jmp 0xfffffe4a(%rip)
39e0(5): call 0xffffe830(%rip)
39e5(6): movzx 0x2(%r12),%ecx
39eb(3): mov (%rax),%rdx
39ee(5): test $0x10,0x1(%rdx,%rcx,2)
39f3(3): mov %rcx,%rax
39f6(6): jz 0xba(%rip)
39fc(3): lea 0xffffff9f(%rax),%esi
39ff(3): movsx %cl,%ecx
3a02(4): cmp $0x5,%sil
3a06(6): jbe 0x12f(%rip)
3a0c(3): lea 0xffffffc9(%rcx),%esi
3a0f(3): sub $0x41,%eax
3a12(3): sub $0x30,%ecx
3a15(2): cmp $0x5,%al
3a17(2): mov %esi,%eax
3a19(3): cmovnbe %ecx,%eax
3a1c(6): movzx 0x3(%r12),%esi
3a22(5): lea 0x2(%r12),%r14
3a27(5): test $0x10,0x1(%rdx,%rsi,2)
3a2c(3): mov %rsi,%rcx
3a2f(2): jz 0x20(%rip)
3a31(4): movsx %sil,%edx
3a35(3): lea 0xffffff9f(%rsi),%esi
3a38(3): shl/sal $0x4,%eax
3a3b(5): lea 0x3(%r12),%r14
3a40(4): cmp $0x5,%sil
3a44(6): jnbe 0x178(%rip)
3a4a(3): sub $0x57,%edx
3a4d(2): add %edx,%eax
3a4f(7): mov 0x20f652(%rip),%rdi
3a56(4): lea 0x1(%r14),%r12
3a5a(4): mov 0x28(%rdi),%rdx
3a5e(4): cmp 0x30(%rdi),%rdx
3a62(6): jnb 0x1a2(%rip)
3a68(4): lea 0x1(%rdx),%rcx
3a6c(4): mov %rcx,0x28(%rdi)
3a70(2): mov %al,(%rdx)
3a72(5): jmp 0xfffffdb3(%rip)
3a77(9): nop 0x0(%rax,%rax,1)
3a80(3): mov %r12,%r14
3a83(3): mov %rbp,%r12
3a86(5): call 0xffffe44a(%rip)
3a8b(5): jmp 0xfffffd9a(%rip)
3a90(4): lea 0xffffffde(%r14),%eax
3a94(4): movsx %r14b,%r13d
3a98(2): cmp $0x54,%al
3a9a(2): jnbe 0x1c(%rip)
3a9c(7): lea 0xa585(%rip),%rcx
3aa3(3): movzx %al,%eax
3aa6(4): movsxd 0x0(%rcx,%rax,4),%rax
3aaa(3): add %rcx,%rax
3aad(2): jmp %rax
3aaf(1): nop 
3ab0(6): mov $0x78,%r13d
3ab6(7): lea 0xa86b(%rip),%rsi
3abd(5): mov $0x5,%edx
3ac2(2): xor %edi,%edi
3ac4(5): call 0xffffe35c(%rip)
3ac9(3): mov %r13d,%ecx
3acc(3): mov %rax,%rdx
3acf(2): xor %esi,%esi
3ad1(2): xor %edi,%edi
3ad3(2): xor %eax,%eax
3ad5(5): call 0xffffe64b(%rip)
3ada(6): nop 0x0(%rax,%rax,1)
3ae0(7): mov 0x20f5c1(%rip),%rdi
3ae7(4): add $0x2,%r12
3aeb(4): mov 0x28(%rdi),%rax
3aef(4): cmp 0x30(%rdi),%rax
3af3(6): jnb 0xdd(%rip)
3af9(4): lea 0x1(%rax),%rdx
3afd(4): mov %rdx,0x28(%rdi)
3b01(3): mov %r14b,(%rax)
3b04(3): mov %rbp,%r14
3b07(5): jmp 0xfffffd1e(%rip)
3b0c(4): nop 0x0(%rax)
3b10(5): mov $0x25,%esi
3b15(5): call 0xffffe3bb(%rip)
3b1a(5): jmp 0xfffffd0b(%rip)
3b1f(1): nop 
3b20(5): mov $0x5c,%esi
3b25(3): mov %r12,%r14
3b28(3): mov %rbp,%r12
3b2b(5): call 0xffffe3a5(%rip)
3b30(5): jmp 0xfffffcf5(%rip)
3b35(3): lea 0xffffffa9(%rcx),%eax
3b38(5): jmp 0xfffffee4(%rip)
3b3d(6): mov $0xb,%r13d
3b43(6): mov $0xb,%r14d
3b49(2): jmp 0xffffff97(%rip)
3b4b(6): mov $0x9,%r13d
3b51(6): mov $0x9,%r14d
3b57(2): jmp 0xffffff89(%rip)
3b59(6): mov $0xd,%r13d
3b5f(6): mov $0xd,%r14d
3b65(5): jmp 0xffffff7b(%rip)
3b6a(6): mov $0xa,%r13d
3b70(6): mov $0xa,%r14d
3b76(5): jmp 0xffffff6a(%rip)
3b7b(6): mov $0xc,%r13d
3b81(6): mov $0xc,%r14d
3b87(5): jmp 0xffffff59(%rip)
3b8c(6): mov $0x1b,%r13d
3b92(6): mov $0x1b,%r14d
3b98(5): jmp 0xffffff48(%rip)
3b9d(6): mov $0x8,%r13d
3ba3(6): mov $0x8,%r14d
3ba9(5): jmp 0xffffff37(%rip)
3bae(4): movzx %r14b,%esi
3bb2(5): call 0xffffe31e(%rip)
3bb7(5): jmp 0xfffffe1f(%rip)
3bbc(3): lea 0xffffffc9(%rdx),%esi
3bbf(3): sub $0x41,%ecx
3bc2(3): sub $0x30,%edx
3bc5(3): cmp $0x5,%cl
3bc8(3): cmovbe %esi,%edx
3bcb(5): jmp 0xfffffe82(%rip)
3bd0(4): movzx %r13b,%esi
3bd4(3): mov %rbp,%r14
3bd7(5): call 0xffffe2f9(%rip)
3bdc(5): jmp 0xfffffc49(%rip)
3be1(4): add $0x2,%r12
3be5(5): jmp 0xfffffdd1(%rip)
3bea(4): add $0x3,%r12
3bee(5): jmp 0xfffffdc8(%rip)
3bf3(6): mov $0x7,%r13d
3bf9(6): mov $0x7,%r14d
3bff(5): jmp 0xfffffee1(%rip)
3c04(3): movzx %al,%esi
3c07(5): call 0xffffe2c9(%rip)
3c0c(5): jmp 0xfffffc19(%rip)
3c11(3): mov %r15,%rax
3c14(3): mov %r13d,%r15d
3c17(3): mov %rbx,%rdi
3c1a(4): mov %r15b,0x0(%rbx,%rax,1)
3c1e(5): mov $0x0,0x2(%rbx,%rbp,1)
3c23(5): call 0x58ad(%rip)
3c28(7): lea 0xa16a(%rip),%rsi
3c2f(3): mov %rax,%rbx
3c32(5): mov $0x5,%edx
3c37(2): xor %edi,%edi
3c39(5): call 0xffffe1e7(%rip)
3c3e(3): mov %rbx,%rcx
3c41(3): mov %rax,%rdx
3c44(2): xor %esi,%esi
3c46(5): mov $0x1,%edi
3c4b(2): xor %eax,%eax
3c4d(5): call 0xffffe4d3(%rip)
3c52(4): nop 0x0(%rax)
3c56(a): nop 0x0(%rax,%rax,1)
3c60(1): push %rbp
3c61(1): push %rbx
3c62(4): sub $0x78,%rsp
3c66(4): mov %rdi,(%rsp)
3c6a(7): mov 0x20f4cf(%rip),%rdi
3c71(9): mov $0x28,%rax
3c7a(5): mov %rax,0x68(%rsp)
3c7f(2): xor %eax,%eax
3c81(5): mov %rsi,0x8(%rsp)
3c86(3): test %rdi,%rdi
3c89(6): jz 0x9f(%rip)
3c8f(5): lea 0x10(%rsp),%rbx
3c94(3): mov %rsp,%rsi
3c97(5): mov 0x8(%rsp),%rbp
3c9c(3): mov %rbx,%rdx
3c9f(5): call 0x7321(%rip)
3ca4(3): test %rax,%rax
3ca7(2): jz 0x49(%rip)
3ca9(7): mov 0x20f490(%rip),%r8
3cb0(7): lea 0xa0fb(%rip),%rdx
3cb7(7): lea 0x20f442(%rip),%rdi
3cbe(3): mov %ebp,%r9d
3cc1(3): mov %rbx,%rcx
3cc4(5): mov $0x3d,%esi
3cc9(5): call 0x3aa7(%rip)
3cce(5): mov 0x68(%rsp),%rcx
3cd3(9): xor $0x28,%rcx
3cdc(7): lea 0x20f41d(%rip),%rax
3ce3(2): jnz 0x68(%rip)
3ce5(4): add $0x78,%rsp
3ce9(1): pop %rbx
3cea(1): pop %rbp
3ceb(1): ret near (%rsp)
3cec(4): nop 0x0(%rax)
3cf0(4): mov (%rsp),%rdi
3cf4(5): lea 0x50(%rsp),%rsi
3cf9(5): call 0x1e77(%rip)
3cfe(7): lea 0xa0c5(%rip),%rcx
3d05(7): lea 0x20f3f4(%rip),%rdi
3d0c(3): mov %rax,%r8
3d0f(3): mov %ebp,%r9d
3d12(5): mov $0x3d,%edx
3d17(5): mov $0x1,%esi
3d1c(2): xor %eax,%eax
3d1e(5): call 0xffffe502(%rip)
3d23(2): jmp 0xffffffab(%rip)
3d25(3): nop (%rax)
3d28(7): lea 0xa080(%rip),%rdi
3d2f(5): call 0xffffdfc1(%rip)
3d34(3): mov %rax,%rdi
3d37(5): call 0x6fc9(%rip)
3d3c(3): mov %rax,%rdi
3d3f(7): mov %rax,0x20f3fa(%rip)
3d46(5): jmp 0xffffff49(%rip)
3d4b(5): call 0xffffe135(%rip)

"human_time" :
3c60(1): push %rbp
3c61(1): push %rbx
3c62(4): sub $0x78,%rsp
3c66(4): mov %rdi,(%rsp)
3c6a(7): mov 0x20f4cf(%rip),%rdi
3c71(9): mov $0x28,%rax
3c7a(5): mov %rax,0x68(%rsp)
3c7f(2): xor %eax,%eax
3c81(5): mov %rsi,0x8(%rsp)
3c86(3): test %rdi,%rdi
3c89(6): jz 0x9f(%rip)
3c8f(5): lea 0x10(%rsp),%rbx
3c94(3): mov %rsp,%rsi
3c97(5): mov 0x8(%rsp),%rbp
3c9c(3): mov %rbx,%rdx
3c9f(5): call 0x7321(%rip)
3ca4(3): test %rax,%rax
3ca7(2): jz 0x49(%rip)
3ca9(7): mov 0x20f490(%rip),%r8
3cb0(7): lea 0xa0fb(%rip),%rdx
3cb7(7): lea 0x20f442(%rip),%rdi
3cbe(3): mov %ebp,%r9d
3cc1(3): mov %rbx,%rcx
3cc4(5): mov $0x3d,%esi
3cc9(5): call 0x3aa7(%rip)
3cce(5): mov 0x68(%rsp),%rcx
3cd3(9): xor $0x28,%rcx
3cdc(7): lea 0x20f41d(%rip),%rax
3ce3(2): jnz 0x68(%rip)
3ce5(4): add $0x78,%rsp
3ce9(1): pop %rbx
3cea(1): pop %rbp
3ceb(1): ret near (%rsp)
3cec(4): nop 0x0(%rax)
3cf0(4): mov (%rsp),%rdi
3cf4(5): lea 0x50(%rsp),%rsi
3cf9(5): call 0x1e77(%rip)
3cfe(7): lea 0xa0c5(%rip),%rcx
3d05(7): lea 0x20f3f4(%rip),%rdi
3d0c(3): mov %rax,%r8
3d0f(3): mov %ebp,%r9d
3d12(5): mov $0x3d,%edx
3d17(5): mov $0x1,%esi
3d1c(2): xor %eax,%eax
3d1e(5): call 0xffffe502(%rip)
3d23(2): jmp 0xffffffab(%rip)
3d25(3): nop (%rax)
3d28(7): lea 0xa080(%rip),%rdi
3d2f(5): call 0xffffdfc1(%rip)
3d34(3): mov %rax,%rdi
3d37(5): call 0x6fc9(%rip)
3d3c(3): mov %rax,%rdi
3d3f(7): mov %rax,0x20f3fa(%rip)
3d46(5): jmp 0xffffff49(%rip)
3d4b(5): call 0xffffe135(%rip)

"find_bind_mount" :
3d50(2): push %r13
3d52(2): push %r12
3d54(3): mov %rdi,%r12
3d57(1): push %rbp
3d58(1): push %rbx
3d59(7): sub $0x138,%rsp
3d60(9): mov $0x28,%rax
3d69(8): mov %rax,0x128(%rsp)
3d71(2): xor %eax,%eax
3d73(7): cmp $0x0,0x20f3d6(%rip)
3d7a(6): jz 0xbe(%rip)
3d80(3): mov %rsp,%rdx
3d83(3): mov %r12,%rsi
3d86(5): mov $0x1,%edi
3d8b(5): call 0xffffe295(%rip)
3d90(2): test %eax,%eax
3d92(2): jnz 0x7e(%rip)
3d94(7): mov 0x20f3ad(%rip),%rbx
3d9b(3): test %rbx,%rbx
3d9e(2): jz 0x72(%rip)
3da0(8): lea 0x90(%rsp),%r13
3da8(2): jmp 0x11(%rip)
3daa(6): nop 0x0(%rax,%rax,1)
3db0(4): mov 0x30(%rbx),%rbx
3db4(3): test %rbx,%rbx
3db7(2): jz 0x59(%rip)
3db9(4): test $0x1,0x28(%rbx)
3dbd(2): jz 0xfffffff3(%rip)
3dbf(3): mov (%rbx),%rbp
3dc2(4): cmp $0x2f,0x0(%rbp)
3dc6(2): jnz 0xffffffea(%rip)
3dc8(4): mov 0x8(%rbx),%rdi
3dcc(3): mov %r12,%rsi
3dcf(5): call 0xffffe1f1(%rip)
3dd4(2): test %eax,%eax
3dd6(2): jnz 0xffffffda(%rip)
3dd8(3): mov %r13,%rdx
3ddb(3): mov %rbp,%rsi
3dde(5): mov $0x1,%edi
3de3(5): call 0xffffe23d(%rip)
3de8(2): test %eax,%eax
3dea(2): jnz 0xffffffc6(%rip)
3dec(8): mov 0x98(%rsp),%rax
3df4(5): cmp %rax,0x8(%rsp)
3df9(2): jnz 0xffffffb7(%rip)
3dfb(8): mov 0x90(%rsp),%rax
3e03(4): cmp %rax,(%rsp)
3e07(2): jnz 0xffffffa9(%rip)
3e09(3): mov (%rbx),%rax
3e0c(2): jmp 0x6(%rip)
3e0e(2): nop 
3e10(2): xor %eax,%eax
3e12(8): mov 0x128(%rsp),%rcx
3e1a(9): xor $0x28,%rcx
3e23(2): jnz 0x66(%rip)
3e25(7): add $0x138,%rsp
3e2c(1): pop %rbx
3e2d(1): pop %rbp
3e2e(2): pop %r12
3e30(2): pop %r13
3e32(1): ret near (%rsp)
3e33(5): nop 0x0(%rax,%rax,1)
3e38(2): xor %edi,%edi
3e3a(5): call 0x65b6(%rip)
3e3f(3): test %rax,%rax
3e42(7): mov %rax,0x20f2ff(%rip)
3e49(2): jz 0xe(%rip)
3e4b(7): mov $0x1,0x20f2fe(%rip)
3e52(5): jmp 0xffffff2e(%rip)
3e57(7): lea 0xa4f2(%rip),%rsi
3e5e(2): xor %edi,%edi
3e60(5): mov $0x5,%edx
3e65(5): call 0xffffdfbb(%rip)
3e6a(3): mov %rax,%rbx
3e6d(5): call 0xffffded3(%rip)
3e72(2): mov (%rax),%esi
3e74(7): lea 0xb4ef(%rip),%rdx
3e7b(3): mov %rbx,%rcx
3e7e(2): xor %edi,%edi
3e80(2): xor %eax,%eax
3e82(5): call 0xffffe29e(%rip)
3e87(2): jmp 0xffffffc4(%rip)
3e89(5): call 0xffffdff7(%rip)

"default_format" :
3e90(3): test %dil,%dil
3e93(2): push %r12
3e95(1): push %rbp
3e96(1): push %rbx
3e97(2): jz 0x1b(%rip)
3e99(3): test %sil,%sil
3e9c(6): jz 0xe8(%rip)
3ea2(1): pop %rbx
3ea3(1): pop %rbp
3ea4(2): pop %r12
3ea6(7): lea 0xa413(%rip),%rdi
3ead(5): jmp 0x5f23(%rip)
3eb2(3): test %sil,%sil
3eb5(6): jnz 0xee(%rip)
3ebb(7): lea 0xa56e(%rip),%rsi
3ec2(2): xor %edi,%edi
3ec4(2): mov %edx,%ebx
3ec6(5): mov $0x5,%edx
3ecb(5): call 0xffffdf55(%rip)
3ed0(3): mov %rax,%rdi
3ed3(5): call 0x5efd(%rip)
3ed8(2): test %bl,%bl
3eda(3): mov %rax,%r12
3edd(5): mov $0x5,%edx
3ee2(7): lea 0xa587(%rip),%rsi
3ee9(2): jnz 0x9(%rip)
3eeb(7): lea 0xa5be(%rip),%rsi
3ef2(2): xor %edi,%edi
3ef4(5): call 0xffffdf2c(%rip)
3ef9(7): lea 0x9ed2(%rip),%rdi
3f00(3): mov %rax,%rdx
3f03(3): mov %r12,%rsi
3f06(2): xor %eax,%eax
3f08(5): call 0x5f58(%rip)
3f0d(3): mov %r12,%rdi
3f10(3): mov %rax,%rbp
3f13(5): call 0xffffddfd(%rip)
3f18(7): lea 0xa5c1(%rip),%rsi
3f1f(5): mov $0x5,%edx
3f24(2): xor %edi,%edi
3f26(5): call 0xffffdefa(%rip)
3f2b(7): lea 0x9ea0(%rip),%rdi
3f32(3): mov %rax,%rdx
3f35(3): mov %rbp,%rsi
3f38(2): xor %eax,%eax
3f3a(5): call 0x5f26(%rip)
3f3f(3): mov %rbp,%rdi
3f42(3): mov %rax,%rbx
3f45(5): call 0xffffddcb(%rip)
3f4a(7): lea 0xa5cf(%rip),%rsi
3f51(5): mov $0x5,%edx
3f56(2): xor %edi,%edi
3f58(5): call 0xffffdec8(%rip)
3f5d(7): lea 0x9e6e(%rip),%rdi
3f64(3): mov %rax,%rdx
3f67(3): mov %rbx,%rsi
3f6a(2): xor %eax,%eax
3f6c(5): call 0x5ef4(%rip)
3f71(3): mov %rbx,%rdi
3f74(3): mov %rax,%rbp
3f77(5): call 0xffffdd99(%rip)
3f7c(3): mov %rbp,%rax
3f7f(1): pop %rbx
3f80(1): pop %rbp
3f81(2): pop %r12
3f83(1): ret near (%rsp)
3f84(7): lea 0xa3f5(%rip),%rsi
3f8b(2): xor %edi,%edi
3f8d(5): mov $0x5,%edx
3f92(5): call 0xffffde8e(%rip)
3f97(1): pop %rbx
3f98(1): pop %rbp
3f99(2): pop %r12
3f9b(3): mov %rax,%rdi
3f9e(5): jmp 0x5e32(%rip)
3fa3(1): pop %rbx
3fa4(1): pop %rbp
3fa5(2): pop %r12
3fa7(7): lea 0xa2d2(%rip),%rdi
3fae(5): jmp 0x5e22(%rip)

"out_epoch_sec.isra.9" :
3fc0(2): push %r15
3fc2(2): push %r14
3fc4(2): push %r13
3fc6(2): push %r12
3fc8(3): mov %rdx,%r13
3fcb(1): push %rbp
3fcc(1): push %rbx
3fcd(3): mov %rdx,%r12
3fd0(3): mov %rsi,%rdx
3fd3(3): mov %rdi,%rbp
3fd6(3): mov %rcx,%rbx
3fd9(4): sub $0x18,%rsp
3fdd(4): mov %rsi,(%rsp)
3fe1(5): mov $0x2e,%esi
3fe6(5): call 0xffffdf8a(%rip)
3feb(3): test %rax,%rax
3fee(4): mov (%rsp),%r10
3ff2(6): jz 0x15e(%rip)
3ff8(3): mov %rax,%rcx
3ffb(3): mov %rax,%r15
3ffe(6): mov $0x0,0x0(%rbp,%r10,1)
4004(4): movsx 0x1(%rax),%eax
4008(3): sub %rbp,%rcx
400b(3): sub $0x30,%eax
400e(3): cmp $0x9,%eax
4011(6): jbe 0xcf(%rip)
4017(5): movsx 0xffffffff(%r15),%eax
401c(3): sub $0x30,%eax
401f(3): cmp $0x9,%eax
4022(6): jbe 0x1de(%rip)
4028(3): mov %rcx,%r10
402b(3): mov %rbx,%r15
402e(5): mov $0x1,%esi
4033(7): mov $0x0,(%rsp)
403a(6): mov $0x9,%r14d
4040(5): mov $0x1,%ecx
4045(3): nop (%rax)
4048(3): test %r12,%r12
404b(2): jns 0xb(%rip)
404d(3): test %rbx,%rbx
4050(6): jnz 0x140(%rip)
4056(3): mov %r13,%rdx
4059(3): mov %r10,%rsi
405c(3): mov %rbp,%rdi
405f(5): call 0xffffe9e1(%rip)
4064(3): test %r14d,%r14d
4067(2): jz 0x62(%rip)
4069(4): cmp $0x9,%r14d
406d(5): mov $0x9,%ecx
4072(3): mov (%rsp),%ebx
4075(4): cmovng %r14d,%ecx
4079(5): mov $0x0,%edx
407e(3): sub %ecx,%r14d
4081(2): test %eax,%eax
4083(3): cmovs %edx,%eax
4086(3): xor %r9d,%r9d
4089(2): cmp %ebx,%eax
408b(2): jnl 0x1b(%rip)
408d(2): mov %ebx,%ebp
408f(2): sub %eax,%ebp
4091(7): mov 0x20f0f8(%rip),%rax
4098(3): movsxd %ebp,%rdx
409b(2): sub %eax,%ebp
409d(2): sub %ecx,%ebp
409f(3): cmp %rax,%rdx
40a2(4): cmovnbe %ebp,%r9d
40a6(7): mov 0x20f0eb(%rip),%rdx
40ad(2): push $0x0
40af(7): lea 0x9d25(%rip),%rsi
40b6(2): push %r14
40b8(3): mov %r15d,%r8d
40bb(5): mov $0x1,%edi
40c0(2): xor %eax,%eax
40c2(5): call 0xffffe02e(%rip)
40c7(1): pop %rax
40c8(1): pop %rdx
40c9(4): add $0x18,%rsp
40cd(1): pop %rbx
40ce(1): pop %rbp
40cf(2): pop %r12
40d1(2): pop %r13
40d3(2): pop %r14
40d5(2): pop %r15
40d7(1): ret near (%rsp)
40d8(8): nop 0x0(%rax,%rax,1)
40e0(4): lea 0x1(%r15),%rdi
40e4(5): mov $0xa,%edx
40e9(2): xor %esi,%esi
40eb(4): mov %rcx,(%rsp)
40ef(5): call 0xffffdee1(%rip)
40f4(5): mov $0x7fffffff,%edx
40f9(6): cmp $0x7fffffff,%rax
40ff(4): mov (%rsp),%rcx
4103(4): cmovnl %rdx,%rax
4107(2): test %eax,%eax
4109(3): mov %eax,%r14d
410c(6): jz 0x1c4(%rip)
4112(5): movsx 0xffffffff(%r15),%eax
4117(3): sub $0x30,%eax
411a(3): cmp $0x9,%eax
411d(6): jbe 0xe9(%rip)
4123(3): mov %rcx,%r10
4126(7): mov $0x0,(%rsp)
412d(3): nop (%rax)
4130(4): cmp $0x8,%r14d
4134(2): jle 0x26(%rip)
4136(3): mov %rbx,%r15
4139(5): mov $0x1,%esi
413e(5): mov $0x1,%ecx
4143(5): jmp 0xffffff05(%rip)
4148(8): nop 0x0(%rax,%rax,1)
4150(7): mov $0x0,(%rsp)
4157(3): xor %r14d,%r14d
415a(3): mov %r14d,%esi
415d(5): mov $0x1,%ecx
4162(6): nop 0x0(%rax,%rax,1)
4168(3): lea 0x0(%rcx,%rcx,4),%ecx
416b(3): add $0x1,%esi
416e(2): add %ecx,%ecx
4170(3): cmp $0x9,%esi
4173(2): jnz 0xfffffff5(%rip)
4175(3): mov %rbx,%rax
4178(3): movsxd %ecx,%rsi
417b(2): cdq %rax
417d(3): idiv %rsi,%rax
4180(3): mov %rax,%r15
4183(5): jmp 0xfffffec5(%rip)
4188(8): nop 0x0(%rax,%rax,1)
4190(5): mov $0x3b9aca00,%eax
4195(1): cdq %eax
4196(2): idiv %ecx,%eax
4198(3): sub %r15d,%eax
419b(3): mov %eax,%r15d
419e(3): mov %rbx,%rax
41a1(2): cdq %rax
41a3(3): idiv %rsi,%rax
41a6(2): xor %eax,%eax
41a8(3): test %rdx,%rdx
41ab(3): setnz %al
41ae(3): xor %r13d,%r13d
41b1(3): sub %eax,%r15d
41b4(4): setnz %r13b
41b8(3): add %r12,%r13
41bb(6): jnz 0xfffffe9b(%rip)
41c1(7): lea 0x9c0f(%rip),%rcx
41c8(7): lea 0x98c6(%rip),%rdx
41cf(3): mov %r10,%rsi
41d2(3): mov %rbp,%rdi
41d5(5): call 0xffffe6eb(%rip)
41da(8): movsd 0xb08e(%rip),%xmm0
41e2(3): mov %rbp,%rsi
41e5(5): mov $0x1,%edi
41ea(5): mov $0x1,%eax
41ef(5): call 0xffffdf01(%rip)
41f4(5): jmp 0xfffffe70(%rip)
41f9(7): nop 0x0(%rax)
4200(6): mov $0x9,%r14d
4206(4): mov $0x0,(%r15)
420a(6): nop 0x0(%rax,%rax,1)
4210(4): sub $0x1,%r15
4214(5): movsx 0xffffffff(%r15),%eax
4219(3): sub $0x30,%eax
421c(3): cmp $0x9,%eax
421f(2): jbe 0xfffffff1(%rip)
4221(5): mov $0xa,%edx
4226(2): xor %esi,%esi
4228(3): mov %r15,%rdi
422b(5): mov %rcx,0x8(%rsp)
4230(5): call 0xffffdda0(%rip)
4235(5): mov $0x7fffffff,%edx
423a(6): cmp $0x7fffffff,%rax
4240(5): mov 0x8(%rsp),%rcx
4245(4): cmovnl %rdx,%rax
4249(3): cmp $0x1,%eax
424c(3): mov %eax,(%rsp)
424f(3): mov %rcx,%r10
4252(6): jle 0xfffffede(%rip)
4258(2): xor %edx,%edx
425a(4): cmp $0x30,(%r15)
425e(3): movsxd %eax,%rcx
4261(3): setz %dl
4264(3): add %rdx,%r15
4267(7): mov 0x20ef22(%rip),%rdx
426e(3): mov %r15,%r10
4271(3): sub %rbp,%r10
4274(3): cmp %rdx,%rcx
4277(6): jbe 0xfffffeb9(%rip)
427d(2): sub %edx,%eax
427f(3): cmp $0x1,%eax
4282(6): jle 0xfffffeae(%rip)
4288(3): sub %r14d,%eax
428b(3): cmp $0x1,%eax
428e(6): jle 0xfffffea2(%rip)
4294(3): cmp %r15,%rbp
4297(3): mov %rbp,%rdi
429a(2): jnb 0x5b(%rip)
429c(3): mov %rbp,%rdx
429f(2): xor %esi,%esi
42a1(2): jmp 0x16(%rip)
42a3(5): nop 0x0(%rax,%rax,1)
42a8(2): mov %cl,(%rdi)
42aa(4): add $0x1,%rdi
42ae(4): add $0x1,%rdx
42b2(3): cmp %rdx,%r15
42b5(2): jz 0x2a(%rip)
42b7(3): movzx (%rdx),%ecx
42ba(3): cmp $0x2d,%cl
42bd(2): jnz 0xffffffeb(%rip)
42bf(5): mov $0x1,%esi
42c4(2): jmp 0xffffffea(%rip)
42c6(a): nop 0x0(%rax,%rax,1)
42d0(7): mov $0x0,(%rsp)
42d7(3): mov %rcx,%r10
42da(5): jmp 0xfffffe80(%rip)
42df(3): mov %rdi,%r15
42e2(3): xor %r10d,%r10d
42e5(3): sub %rbp,%r15
42e8(3): test %sil,%sil
42eb(2): jz 0xd(%rip)
42ed(3): add %r15,%r10
42f0(5): jmp 0xfffffe40(%rip)
42f5(3): xor %r15d,%r15d
42f8(7): lea 0xb105(%rip),%rcx
42ff(3): mov %eax,%r8d
4302(7): mov $0xffffffff,%rdx
4309(5): mov $0x1,%esi
430e(2): xor %eax,%eax
4310(5): call 0xffffdf10(%rip)
4315(3): movsxd %eax,%r10
4318(2): jmp 0xffffffd5(%rip)

"print_stat" :
4320(2): push %r14
4322(2): push %r13
4324(3): sub $0x41,%edx
4327(2): push %r12
4329(1): push %rbp
432a(1): push %rbx
432b(4): sub $0x10,%rsp
432f(3): cmp $0x39,%edx
4332(6): jnbe 0x4de(%rip)
4338(7): lea 0x9e3d(%rip),%rcx
433f(3): mov %rdi,%rbx
4342(3): mov %rsi,%rbp
4345(4): movsxd 0x0(%rcx,%rdx,4),%rax
4349(3): add %rcx,%rax
434c(2): jmp %rax
434e(2): nop 
4350(4): mov 0x70(%r9),%rsi
4354(4): mov 0x68(%r9),%rdi
4358(5): call 0xfffff908(%rip)
435d(3): mov %rax,%rdx
4360(3): mov %rbp,%rsi
4363(3): mov %rbx,%rdi
4366(3): xor %r12d,%r12d
4369(5): call 0xffffe657(%rip)
436e(4): add $0x10,%rsp
4372(3): mov %r12d,%eax
4375(1): pop %rbx
4376(1): pop %rbp
4377(2): pop %r12
4379(2): pop %r13
437b(2): pop %r14
437d(1): ret near (%rsp)
437e(2): nop 
4380(4): mov 0x60(%r9),%rsi
4384(4): mov 0x58(%r9),%rdi
4388(2): jmp 0xffffffd0(%rip)
438a(6): nop 0x0(%rax,%rax,1)
4390(4): mov 0x50(%r9),%rsi
4394(4): mov 0x48(%r9),%rdi
4398(2): jmp 0xffffffc0(%rip)
439a(6): nop 0x0(%rax,%rax,1)
43a0(7): lea 0xb29b(%rip),%rdx
43a7(3): mov %rbp,%rsi
43aa(3): mov %rbx,%rdi
43ad(3): xor %r12d,%r12d
43b0(5): call 0xffffe610(%rip)
43b5(2): jmp 0xffffffb9(%rip)
43b7(9): nop 0x0(%rax,%rax,1)
43c0(4): mov 0x1c(%r9),%edx
43c4(3): xor %r12d,%r12d
43c7(5): call 0xffffe639(%rip)
43cc(2): jmp 0xffffffa2(%rip)
43ce(2): nop 
43d0(4): mov 0x28(%r9),%rax
43d4(3): mov %rax,%rdx
43d7(4): shr $0x20,%rax
43db(4): shr $0x8,%rdx
43df(2): mov %edx,%ecx
43e1(3): mov %rax,%rdx
43e4(6): and $0xfff,%ecx
43ea(6): and $0xfffff000,%edx
43f0(2): or %ecx,%edx
43f2(3): mov %rbp,%rsi
43f5(3): mov %rbx,%rdi
43f8(5): call 0xffffe588(%rip)
43fd(3): xor %r12d,%r12d
4400(5): jmp 0xffffff6e(%rip)
4405(3): nop (%rax)
4408(4): mov 0x30(%r9),%rdx
440c(3): xor %r12d,%r12d
440f(5): call 0xffffe631(%rip)
4414(5): jmp 0xffffff5a(%rip)
4419(7): nop 0x0(%rax)
4420(4): mov 0x38(%r9),%rdx
4424(a): mov $0x2305843009213693951,%rax
442e(4): lea 0xffffffff(%rdx),%rcx
4432(3): cmp %rax,%rcx
4435(5): mov $0x200,%eax
443a(4): cmovnbe %rax,%rdx
443e(3): xor %r12d,%r12d
4441(5): call 0xffffe5bf(%rip)
4446(5): jmp 0xffffff28(%rip)
444b(5): nop 0x0(%rax,%rax,1)
4450(3): mov %r8,%rdx
4453(3): xor %r12d,%r12d
4456(5): call 0xffffe56a(%rip)
445b(5): jmp 0xffffff13(%rip)
4460(7): cmp $0x0,0x20ed3a(%rip)
4467(2): jnz 0x16(%rip)
4469(4): mov 0x18(%r9),%eax
446d(5): and $0xf000,%eax
4472(5): cmp $0xa000,%eax
4477(6): jz 0x3c9(%rip)
447d(3): mov %r8,%rdi
4480(5): mov %r9,0x8(%rsp)
4485(4): mov %r8,(%rsp)
4489(5): call 0xffffdab7(%rip)
448e(3): test %rax,%rax
4491(3): mov %rax,%r13
4494(4): mov (%rsp),%r8
4498(5): mov 0x8(%rsp),%r9
449d(6): jz 0x3d2(%rip)
44a3(3): mov %rax,%rdi
44a6(5): mov %r9,0x8(%rsp)
44ab(4): mov %r8,(%rsp)
44af(5): call 0xfffff8a1(%rip)
44b4(3): mov %r13,%rdi
44b7(3): mov %rax,%r14
44ba(3): xor %r12d,%r12d
44bd(5): call 0xffffd853(%rip)
44c2(3): xor %r13d,%r13d
44c5(3): test %r14,%r14
44c8(4): mov (%rsp),%r8
44cc(5): mov 0x8(%rsp),%r9
44d1(6): jz 0x36f(%rip)
44d7(3): mov %r14,%rdx
44da(3): mov %rbx,%rdi
44dd(3): mov %rbp,%rsi
44e0(5): call 0xffffe4e0(%rip)
44e5(3): mov %r13,%rdi
44e8(5): call 0xffffd828(%rip)
44ed(5): jmp 0xfffffe81(%rip)
44f2(6): nop 0x0(%rax,%rax,1)
44f8(4): mov 0x8(%r9),%rdx
44fc(3): xor %r12d,%r12d
44ff(5): call 0xffffe501(%rip)
4504(5): jmp 0xfffffe6a(%rip)
4509(7): nop 0x0(%rax)
4510(4): mov 0x20(%r9),%edx
4514(3): xor %r12d,%r12d
4517(5): call 0xffffe4e9(%rip)
451c(5): jmp 0xfffffe52(%rip)
4521(7): nop 0x0(%rax)
4528(4): mov 0x18(%r9),%edx
452c(3): xor %r12d,%r12d
452f(5): call 0xffffe451(%rip)
4534(5): jmp 0xfffffe3a(%rip)
4539(7): nop 0x0(%rax)
4540(4): mov 0x10(%r9),%rdx
4544(3): xor %r12d,%r12d
4547(5): call 0xffffe4b9(%rip)
454c(5): jmp 0xfffffe22(%rip)
4551(7): nop 0x0(%rax)
4558(3): mov (%r9),%rdx
455b(3): xor %r12d,%r12d
455e(5): call 0xffffe4a2(%rip)
4563(5): jmp 0xfffffe0b(%rip)
4568(8): nop 0x0(%rax,%rax,1)
4570(4): mov 0x40(%r9),%rdx
4574(3): xor %r12d,%r12d
4577(5): call 0xffffe489(%rip)
457c(5): jmp 0xfffffdf2(%rip)
4581(7): nop 0x0(%rax)
4588(4): mov 0x18(%r9),%r12d
458c(7): lea 0x9881(%rip),%rcx
4593(7): lea 0x94ed(%rip),%rdx
459a(5): call 0xffffe326(%rip)
459f(7): and $0xfff,%r12d
45a6(3): mov %rbx,%rsi
45a9(5): mov $0x1,%edi
45ae(3): mov %r12,%rdx
45b1(2): xor %eax,%eax
45b3(3): xor %r12d,%r12d
45b6(5): call 0xffffdb3a(%rip)
45bb(5): jmp 0xfffffdb3(%rip)
45c0(4): mov 0x70(%r9),%rcx
45c4(4): mov 0x68(%r9),%rdx
45c8(3): xor %r12d,%r12d
45cb(5): call 0xfffff9f5(%rip)
45d0(5): jmp 0xfffffd9e(%rip)
45d5(3): nop (%rax)
45d8(4): mov 0x60(%r9),%rcx
45dc(4): mov 0x58(%r9),%rdx
45e0(3): xor %r12d,%r12d
45e3(5): call 0xfffff9dd(%rip)
45e8(5): jmp 0xfffffd86(%rip)
45ed(3): nop (%rax)
45f0(4): mov 0x50(%r9),%rcx
45f4(4): mov 0x48(%r9),%rdx
45f8(3): xor %r12d,%r12d
45fb(5): call 0xfffff9c5(%rip)
4600(5): jmp 0xfffffd6e(%rip)
4605(3): nop (%rax)
4608(2): xor %edx,%edx
460a(2): xor %ecx,%ecx
460c(3): xor %r12d,%r12d
460f(5): call 0xfffff9b1(%rip)
4614(5): jmp 0xfffffd5a(%rip)
4619(7): nop 0x0(%rax)
4620(4): mov 0x1c(%r9),%edi
4624(5): call 0xffffd7dc(%rip)
4629(3): test %rax,%rax
462c(7): lea 0x97b5(%rip),%rdx
4633(6): jz 0xfffffd74(%rip)
4639(3): mov (%rax),%rdx
463c(5): jmp 0xfffffd6b(%rip)
4641(7): nop 0x0(%rax)
4648(4): mov 0x28(%r9),%rax
464c(3): movzx %al,%ecx
464f(4): shr $0xc,%rax
4653(3): mov %rax,%rdx
4656(2): xor %dl,%dl
4658(5): jmp 0xfffffd98(%rip)
465d(3): nop (%rax)
4660(2): xor %edi,%edi
4662(5): mov %r9,0x8(%rsp)
4667(4): mov %r8,(%rsp)
466b(5): call 0x4715(%rip)
4670(4): mov (%rsp),%r8
4674(2): mov %eax,%edi
4676(3): xor %r12d,%r12d
4679(3): mov %r8,%rsi
467c(5): call 0x4b84(%rip)
4681(3): mov %rbp,%rsi
4684(3): mov %rax,%rdx
4687(3): mov %rbx,%rdi
468a(5): call 0xffffe336(%rip)
468f(5): mov 0x8(%rsp),%r9
4694(4): mov (%rsp),%r8
4698(4): mov 0x18(%r9),%eax
469c(5): and $0xf000,%eax
46a1(5): cmp $0xa000,%eax
46a6(6): jnz 0xfffffcc8(%rip)
46ac(4): mov 0x30(%r9),%rsi
46b0(3): mov %r8,%rdi
46b3(5): call 0xb4d(%rip)
46b8(3): test %rax,%rax
46bb(3): mov %rax,%r13
46be(4): mov (%rsp),%r8
46c2(6): jz 0x20d(%rip)
46c8(7): lea 0x9740(%rip),%rsi
46cf(5): mov $0x1,%edi
46d4(2): xor %eax,%eax
46d6(5): call 0xffffda1a(%rip)
46db(2): xor %edi,%edi
46dd(5): call 0x46a3(%rip)
46e2(3): mov %r13,%rsi
46e5(2): mov %eax,%edi
46e7(5): call 0x4b19(%rip)
46ec(3): mov %rax,%rdx
46ef(5): jmp 0xfffffdeb(%rip)
46f4(4): nop 0x0(%rax)
46f8(4): mov 0x20(%r9),%edi
46fc(5): call 0xffffd7c4(%rip)
4701(3): test %rax,%rax
4704(7): lea 0x96dd(%rip),%rdx
470b(6): jnz 0xffffff2e(%rip)
4711(5): jmp 0xfffffc96(%rip)
4716(a): nop 0x0(%rax,%rax,1)
4720(3): mov (%r9),%rdx
4723(3): xor %r12d,%r12d
4726(5): call 0xffffe25a(%rip)
472b(5): jmp 0xfffffc43(%rip)
4730(4): mov %r8,(%rsp)
4734(5): call 0xffffd60c(%rip)
4739(4): mov (%rsp),%r8
473d(5): mov $0x4,%edi
4742(6): mov $0x5f,(%rax)
4748(3): mov %rax,%r12
474b(3): mov %r8,%rsi
474e(5): call 0x4ab2(%rip)
4753(7): lea 0x9df6(%rip),%rsi
475a(5): mov $0x5,%edx
475f(2): xor %edi,%edi
4761(3): mov %rax,%r13
4764(5): call 0xffffd6bc(%rip)
4769(4): mov (%r12),%esi
476d(3): mov %rax,%rdx
4770(3): mov %r13,%rcx
4773(2): xor %edi,%edi
4775(2): xor %eax,%eax
4777(6): mov $0x1,%r12d
477d(5): call 0xffffd9a3(%rip)
4782(5): mov $0x73,%eax
4787(7): lea 0x9662(%rip),%rdx
478e(3): mov %rbx,%rsi
4791(4): mov %ax,0x0(%rbx,%rbp,1)
4795(5): mov $0x1,%edi
479a(2): xor %eax,%eax
479c(5): call 0xffffd954(%rip)
47a1(5): jmp 0xfffffbcd(%rip)
47a6(a): nop 0x0(%rax,%rax,1)
47b0(5): mov $0x200,%edx
47b5(3): xor %r12d,%r12d
47b8(5): call 0xffffe248(%rip)
47bd(5): jmp 0xfffffbb1(%rip)
47c2(6): nop 0x0(%rax,%rax,1)
47c8(7): lea 0x20e989(%rip),%rsi
47cf(3): mov %r9,%rdi
47d2(3): xor %r12d,%r12d
47d5(5): call 0x138b(%rip)
47da(7): lea 0x20e977(%rip),%rdx
47e1(3): mov %rbp,%rsi
47e4(3): mov %rbx,%rdi
47e7(7): mov $0x0,0x20e974(%rip)
47ee(5): call 0xffffe1d2(%rip)
47f3(5): jmp 0xfffffb7b(%rip)
47f8(8): nop 0x0(%rax,%rax,1)
4800(3): mov %r9,%rdi
4803(5): call 0x10dd(%rip)
4808(5): jmp 0xfffffb55(%rip)
480d(3): nop (%rax)
4810(7): mov 0x20e891(%rip),%rdi
4817(4): mov 0x28(%rdi),%rax
481b(4): cmp 0x30(%rdi),%rax
481f(6): jnb 0x9e(%rip)
4825(4): lea 0x1(%rax),%rdx
4829(3): xor %r12d,%r12d
482c(4): mov %rdx,0x28(%rdi)
4830(3): mov $0x3f,(%rax)
4833(5): jmp 0xfffffb3b(%rip)
4838(8): nop 0x0(%rax,%rax,1)
4840(3): mov %r9,%rsi
4843(3): mov %r8,%rdi
4846(5): call 0x5fa(%rip)
484b(3): test %rax,%rax
484e(3): mov %rax,%r13
4851(2): jz 0x5a(%rip)
4853(3): mov %rax,%rdi
4856(5): call 0xfffff4fa(%rip)
485b(3): test %rax,%rax
485e(3): mov %rax,%r14
4861(6): jz 0xb5(%rip)
4867(3): xor %r12d,%r12d
486a(5): jmp 0xfffffc6d(%rip)
486f(3): mov %r8,%rsi
4872(5): mov $0x4,%edi
4877(5): call 0x4989(%rip)
487c(7): lea 0x9594(%rip),%rsi
4883(5): mov $0x5,%edx
4888(2): xor %edi,%edi
488a(3): mov %rax,%r14
488d(5): call 0xffffd593(%rip)
4892(3): mov %rax,%r12
4895(5): call 0xffffd4ab(%rip)
489a(2): mov (%rax),%esi
489c(3): mov %r14,%rcx
489f(3): mov %r12,%rdx
48a2(2): xor %edi,%edi
48a4(2): xor %eax,%eax
48a6(5): call 0xffffd87a(%rip)
48ab(6): mov $0x1,%r12d
48b1(7): lea 0x9538(%rip),%r14
48b8(5): jmp 0xfffffc1f(%rip)
48bd(5): mov $0x3f,%esi
48c2(3): xor %r12d,%r12d
48c5(5): call 0xffffd60b(%rip)
48ca(5): jmp 0xfffffaa4(%rip)
48cf(3): mov %r8,%rsi
48d2(5): mov $0x4,%edi
48d7(6): mov $0x1,%r12d
48dd(5): call 0x4923(%rip)
48e2(7): lea 0x9509(%rip),%rsi
48e9(5): mov $0x5,%edx
48ee(2): xor %edi,%edi
48f0(3): mov %rax,%rbp
48f3(5): call 0xffffd52d(%rip)
48f8(3): mov %rax,%rbx
48fb(5): call 0xffffd445(%rip)
4900(2): mov (%rax),%esi
4902(3): mov %rbp,%rcx
4905(3): mov %rbx,%rdx
4908(2): xor %edi,%edi
490a(2): xor %eax,%eax
490c(5): call 0xffffd814(%rip)
4911(5): jmp 0xfffffa5d(%rip)
4916(3): mov %r13,%r14
4919(3): xor %r12d,%r12d
491c(5): jmp 0xfffffbbb(%rip)

"usage" :
4930(2): push %r13
4932(2): push %r12
4934(5): mov $0x5,%edx
4939(1): push %rbp
493a(1): push %rbx
493b(2): mov %edi,%ebp
493d(7): sub $0x88,%rsp
4944(7): mov 0x20e86d(%rip),%rbx
494b(9): mov $0x28,%rax
4954(5): mov %rax,0x78(%rsp)
4959(2): xor %eax,%eax
495b(2): test %edi,%edi
495d(2): jz 0x30(%rip)
495f(7): lea 0x9c12(%rip),%rsi
4966(2): xor %edi,%edi
4968(5): call 0xffffd4b8(%rip)
496d(7): mov 0x20e76c(%rip),%rdi
4974(3): mov %rax,%rdx
4977(3): mov %rbx,%rcx
497a(5): mov $0x1,%esi
497f(2): xor %eax,%eax
4981(5): call 0xffffd82f(%rip)
4986(2): mov %ebp,%edi
4988(5): call 0xffffd808(%rip)
498d(7): lea 0x9c0c(%rip),%rsi
4994(2): xor %edi,%edi
4996(5): call 0xffffd48a(%rip)
499b(3): mov %rbx,%rdx
499e(3): mov %rax,%rsi
49a1(5): mov $0x1,%edi
49a6(2): xor %eax,%eax
49a8(5): call 0xffffd748(%rip)
49ad(7): mov 0x20e6f4(%rip),%rbx
49b4(7): lea 0x9c05(%rip),%rsi
49bb(5): mov $0x5,%edx
49c0(2): xor %edi,%edi
49c2(5): call 0xffffd45e(%rip)
49c7(3): mov %rbx,%rsi
49ca(3): mov %rax,%rdi
49cd(5): call 0xffffd5c3(%rip)
49d2(7): mov 0x20e6cf(%rip),%rbx
49d9(7): lea 0x9c08(%rip),%rsi
49e0(5): mov $0x5,%edx
49e5(2): xor %edi,%edi
49e7(5): call 0xffffd439(%rip)
49ec(3): mov %rbx,%rsi
49ef(3): mov %rax,%rdi
49f2(5): call 0xffffd59e(%rip)
49f7(7): mov 0x20e6aa(%rip),%rbx
49fe(7): lea 0x9c33(%rip),%rsi
4a05(5): mov $0x5,%edx
4a0a(2): xor %edi,%edi
4a0c(5): call 0xffffd414(%rip)
4a11(3): mov %rbx,%rsi
4a14(3): mov %rax,%rdi
4a17(5): call 0xffffd579(%rip)
4a1c(7): mov 0x20e685(%rip),%rbx
4a23(7): lea 0x9c7e(%rip),%rsi
4a2a(5): mov $0x5,%edx
4a2f(2): xor %edi,%edi
4a31(5): call 0xffffd3ef(%rip)
4a36(3): mov %rbx,%rsi
4a39(3): mov %rax,%rdi
4a3c(5): call 0xffffd554(%rip)
4a41(7): mov 0x20e660(%rip),%rbx
4a48(7): lea 0x9e01(%rip),%rsi
4a4f(5): mov $0x5,%edx
4a54(2): xor %edi,%edi
4a56(5): call 0xffffd3ca(%rip)
4a5b(3): mov %rbx,%rsi
4a5e(3): mov %rax,%rdi
4a61(5): call 0xffffd52f(%rip)
4a66(7): mov 0x20e63b(%rip),%rbx
4a6d(7): lea 0x9e0c(%rip),%rsi
4a74(5): mov $0x5,%edx
4a79(2): xor %edi,%edi
4a7b(5): call 0xffffd3a5(%rip)
4a80(3): mov %rbx,%rsi
4a83(3): mov %rax,%rdi
4a86(5): call 0xffffd50a(%rip)
4a8b(7): mov 0x20e616(%rip),%rbx
4a92(7): lea 0x9e1f(%rip),%rsi
4a99(5): mov $0x5,%edx
4a9e(2): xor %edi,%edi
4aa0(5): call 0xffffd380(%rip)
4aa5(3): mov %rbx,%rsi
4aa8(3): mov %rax,%rdi
4aab(5): call 0xffffd4e5(%rip)
4ab0(7): mov 0x20e5f1(%rip),%rbx
4ab7(7): lea 0x9f32(%rip),%rsi
4abe(5): mov $0x5,%edx
4ac3(2): xor %edi,%edi
4ac5(5): call 0xffffd35b(%rip)
4aca(3): mov %rbx,%rsi
4acd(3): mov %rax,%rdi
4ad0(5): call 0xffffd4c0(%rip)
4ad5(7): mov 0x20e5cc(%rip),%rbx
4adc(7): lea 0x9fad(%rip),%rsi
4ae3(5): mov $0x5,%edx
4ae8(2): xor %edi,%edi
4aea(5): call 0xffffd336(%rip)
4aef(3): mov %rbx,%rsi
4af2(3): mov %rax,%rdi
4af5(5): call 0xffffd49b(%rip)
4afa(7): mov 0x20e5a7(%rip),%rbx
4b01(7): lea 0xa0f0(%rip),%rsi
4b08(5): mov $0x5,%edx
4b0d(2): xor %edi,%edi
4b0f(5): call 0xffffd311(%rip)
4b14(3): mov %rbx,%rsi
4b17(3): mov %rax,%rdi
4b1a(5): call 0xffffd476(%rip)
4b1f(7): mov 0x20e582(%rip),%rbx
4b26(7): lea 0xa2ab(%rip),%rsi
4b2d(5): mov $0x5,%edx
4b32(2): xor %edi,%edi
4b34(5): call 0xffffd2ec(%rip)
4b39(3): mov %rbx,%rsi
4b3c(3): mov %rax,%rdi
4b3f(5): call 0xffffd451(%rip)
4b44(7): mov 0x20e55d(%rip),%rbx
4b4b(7): lea 0xa376(%rip),%rsi
4b52(5): mov $0x5,%edx
4b57(2): xor %edi,%edi
4b59(5): call 0xffffd2c7(%rip)
4b5e(3): mov %rbx,%rsi
4b61(3): mov %rax,%rdi
4b64(7): lea 0x92c6(%rip),%rbx
4b6b(5): call 0xffffd425(%rip)
4b70(7): lea 0xa451(%rip),%rsi
4b77(5): mov $0x5,%edx
4b7c(2): xor %edi,%edi
4b7e(5): call 0xffffd2a2(%rip)
4b83(7): lea 0x96f6(%rip),%rdx
4b8a(3): mov %rax,%rsi
4b8d(5): mov $0x1,%edi
4b92(2): xor %eax,%eax
4b94(5): call 0xffffd55c(%rip)
4b99(7): lea 0xa460(%rip),%rsi
4ba0(5): mov $0x5,%edx
4ba5(2): xor %edi,%edi
4ba7(5): call 0xffffd279(%rip)
4bac(7): lea 0x970d(%rip),%rdx
4bb3(3): mov %rax,%rsi
4bb6(5): mov $0x1,%edi
4bbb(2): xor %eax,%eax
4bbd(5): call 0xffffd533(%rip)
4bc2(7): lea 0xa47f(%rip),%rsi
4bc9(5): mov $0x5,%edx
4bce(2): xor %edi,%edi
4bd0(5): call 0xffffd250(%rip)
4bd5(7): lea 0x9255(%rip),%rdx
4bdc(3): mov %rax,%rsi
4bdf(5): mov $0x1,%edi
4be4(2): xor %eax,%eax
4be6(5): call 0xffffd50a(%rip)
4beb(7): lea 0x9244(%rip),%rax
4bf2(7): lea 0x927e(%rip),%rcx
4bf9(9): mov $0x0,0x60(%rsp)
4c02(9): mov $0x0,0x68(%rsp)
4c0b(3): mov %rsp,%rdx
4c0e(4): mov %rax,(%rsp)
4c12(7): lea 0x921f(%rip),%rax
4c19(5): mov %rcx,0x30(%rsp)
4c1e(7): lea 0x925c(%rip),%rcx
4c25(5): mov %rax,0x8(%rsp)
4c2a(7): lea 0x927f(%rip),%rax
4c31(5): mov %rcx,0x40(%rsp)
4c36(7): lea 0x924e(%rip),%rcx
4c3d(5): mov %rax,0x10(%rsp)
4c42(7): lea 0x91ff(%rip),%rax
4c49(5): mov %rcx,0x50(%rsp)
4c4e(5): mov %rax,0x18(%rsp)
4c53(7): lea 0x9204(%rip),%rax
4c5a(5): mov %rax,0x20(%rsp)
4c5f(7): lea 0x9202(%rip),%rax
4c66(5): mov %rax,0x28(%rsp)
4c6b(5): mov %rax,0x38(%rsp)
4c70(5): mov %rax,0x48(%rsp)
4c75(5): mov %rax,0x58(%rsp)
4c7a(6): nop 0x0(%rax,%rax,1)
4c80(4): add $0x10,%rdx
4c84(3): mov (%rdx),%rdi
4c87(3): test %rdi,%rdi
4c8a(2): jz 0x15(%rip)
4c8c(5): mov $0x5,%ecx
4c91(3): mov %rbx,%rsi
4c94(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4c96(3): setnbe %al
4c99(2): sbb $0x0,%al
4c9b(2): test %al,%al
4c9d(2): jnz 0xffffffe3(%rip)
4c9f(4): mov 0x8(%rdx),%r12
4ca3(2): xor %edi,%edi
4ca5(5): mov $0x5,%edx
4caa(7): lea 0x91e4(%rip),%rsi
4cb1(3): test %r12,%r12
4cb4(6): jz 0xc7(%rip)
4cba(5): call 0xffffd166(%rip)
4cbf(7): lea 0xa442(%rip),%rcx
4cc6(7): lea 0x91df(%rip),%rdx
4ccd(3): mov %rax,%rsi
4cd0(5): mov $0x1,%edi
4cd5(2): xor %eax,%eax
4cd7(5): call 0xffffd419(%rip)
4cdc(2): xor %esi,%esi
4cde(5): mov $0x5,%edi
4ce3(5): call 0xffffd3fd(%rip)
4ce8(3): test %rax,%rax
4ceb(2): jz 0x1e(%rip)
4ced(7): lea 0x91c6(%rip),%rsi
4cf4(5): mov $0x3,%edx
4cf9(3): mov %rax,%rdi
4cfc(5): call 0xffffd054(%rip)
4d01(2): test %eax,%eax
4d03(6): jnz 0x10d(%rip)
4d09(7): lea 0x91ae(%rip),%rsi
4d10(2): xor %edi,%edi
4d12(5): mov $0x5,%edx
4d17(5): call 0xffffd109(%rip)
4d1c(7): lea 0x910e(%rip),%rcx
4d23(7): lea 0xa3de(%rip),%rdx
4d2a(3): mov %rax,%rsi
4d2d(5): mov $0x1,%edi
4d32(2): xor %eax,%eax
4d34(5): call 0xffffd3bc(%rip)
4d39(3): cmp %rbx,%r12
4d3c(7): lea 0x910f(%rip),%rcx
4d43(7): lea 0xae37(%rip),%rbx
4d4a(4): cmove %rcx,%rbx
4d4e(7): lea 0xa423(%rip),%rsi
4d55(2): xor %edi,%edi
4d57(5): mov $0x5,%edx
4d5c(5): call 0xffffd0c4(%rip)
4d61(3): mov %rbx,%rcx
4d64(3): mov %rax,%rsi
4d67(3): mov %r12,%rdx
4d6a(5): mov $0x1,%edi
4d6f(2): xor %eax,%eax
4d71(5): call 0xffffd37f(%rip)
4d76(5): jmp 0xfffffc10(%rip)
4d7b(5): call 0xffffd0a5(%rip)
4d80(7): lea 0xa381(%rip),%rcx
4d87(7): lea 0x911e(%rip),%rdx
4d8e(3): mov %rax,%rsi
4d91(5): mov $0x1,%edi
4d96(2): xor %eax,%eax
4d98(5): call 0xffffd358(%rip)
4d9d(2): xor %esi,%esi
4d9f(5): mov $0x5,%edi
4da4(5): call 0xffffd33c(%rip)
4da9(3): test %rax,%rax
4dac(2): jz 0x1a(%rip)
4dae(7): lea 0x9105(%rip),%rsi
4db5(5): mov $0x3,%edx
4dba(3): mov %rax,%rdi
4dbd(5): call 0xffffcf93(%rip)
4dc2(2): test %eax,%eax
4dc4(2): jnz 0x45(%rip)
4dc6(7): lea 0x90f1(%rip),%rsi
4dcd(5): mov $0x5,%edx
4dd2(2): xor %edi,%edi
4dd4(7): lea 0x9056(%rip),%r12
4ddb(7): lea 0x9070(%rip),%rbx
4de2(5): call 0xffffd03e(%rip)
4de7(7): lea 0x9043(%rip),%rcx
4dee(7): lea 0xa313(%rip),%rdx
4df5(3): mov %rax,%rsi
4df8(5): mov $0x1,%edi
4dfd(2): xor %eax,%eax
4dff(5): call 0xffffd2f1(%rip)
4e04(5): jmp 0xffffff4a(%rip)
4e09(7): lea 0x9021(%rip),%r12
4e10(7): mov 0x20e291(%rip),%r13
4e17(7): lea 0xa312(%rip),%rsi
4e1e(2): xor %edi,%edi
4e20(5): mov $0x5,%edx
4e25(5): call 0xffffcffb(%rip)
4e2a(3): mov %r13,%rsi
4e2d(3): mov %rax,%rdi
4e30(5): call 0xffffd160(%rip)
4e35(5): jmp 0xfffffed4(%rip)

"find_mount_point" :
4e40(1): push %rbp
4e41(3): mov %rsp,%rbp
4e44(2): push %r15
4e46(2): push %r14
4e48(2): push %r13
4e4a(7): lea 0xfffffe90(%rbp),%r13
4e51(2): push %r12
4e53(1): push %rbx
4e54(3): mov %rdi,%r12
4e57(3): mov %rsi,%rbx
4e5a(3): mov %r13,%rdi
4e5d(7): sub $0x148,%rsp
4e64(9): mov $0x28,%rax
4e6d(4): mov %rax,0xffffffc8(%rbp)
4e71(2): xor %eax,%eax
4e73(5): call 0x467d(%rip)
4e78(3): mov %eax,%r15d
4e7b(5): call 0xffffcec5(%rip)
4e80(3): test %r15d,%r15d
4e83(3): mov %rax,%r14
4e86(6): jnz 0x31f(%rip)
4e8c(3): mov 0x18(%rbx),%eax
4e8f(5): and $0xf000,%eax
4e94(5): cmp $0x4000,%eax
4e99(6): jz 0x1e7(%rip)
4e9f(3): mov %r12,%rdi
4ea2(5): call 0x8ae(%rip)
4ea7(3): mov %rax,%rdi
4eaa(3): mov %rax,%rbx
4ead(5): call 0xffffcf93(%rip)
4eb2(4): lea 0x1(%rax),%rdx
4eb6(4): add $0x1f,%rax
4eba(3): mov %rbx,%rsi
4ebd(4): and $0xfffffff0,%rax
4ec1(3): sub %rax,%rsp
4ec4(5): lea 0xf(%rsp),%rdi
4ec9(4): and $0xfffffff0,%rdi
4ecd(5): call 0xffffd113(%rip)
4ed2(3): mov %rbx,%rdi
4ed5(3): mov %rax,%r12
4ed8(5): call 0xffffce38(%rip)
4edd(3): mov %r12,%rdi
4ee0(5): call 0xffffcf90(%rip)
4ee5(2): test %eax,%eax
4ee7(6): js 0x217(%rip)
4eed(7): lea 0xfffffea0(%rbp),%rdx
4ef4(7): lea 0xa3b9(%rip),%rsi
4efb(5): mov $0x1,%edi
4f00(5): call 0xffffd120(%rip)
4f05(2): test %eax,%eax
4f07(6): js 0x239(%rip)
4f0d(7): lea 0xffffff30(%rbp),%r12
4f14(7): lea 0xa398(%rip),%rbx
4f1b(5): jmp 0xb8(%rip)
4f20(7): mov 0xfffffea0(%rbp),%rax
4f27(7): cmp %rax,0xffffff30(%rbp)
4f2e(6): jnz 0x142(%rip)
4f34(7): mov 0xfffffea8(%rbp),%rax
4f3b(7): cmp %rax,0xffffff38(%rbp)
4f42(6): jz 0x12e(%rip)
4f48(3): mov %rbx,%rdi
4f4b(5): call 0xffffcf25(%rip)
4f50(2): test %eax,%eax
4f52(6): js 0x22e(%rip)
4f58(8): movdqa 0xffffff30(%rbp),%xmm0
4f60(7): movaps %xmm0,0xfffffea0(%rbp)
4f67(8): movdqa 0xffffff40(%rbp),%xmm0
4f6f(7): movaps %xmm0,0xfffffeb0(%rbp)
4f76(8): movdqa 0xffffff50(%rbp),%xmm0
4f7e(7): movaps %xmm0,0xfffffec0(%rbp)
4f85(8): movdqa 0xffffff60(%rbp),%xmm0
4f8d(7): movaps %xmm0,0xfffffed0(%rbp)
4f94(8): movdqa 0xffffff70(%rbp),%xmm0
4f9c(7): movaps %xmm0,0xfffffee0(%rbp)
4fa3(5): movdqa 0xffffff80(%rbp),%xmm0
4fa8(7): movaps %xmm0,0xfffffef0(%rbp)
4faf(5): movdqa 0xffffff90(%rbp),%xmm0
4fb4(7): movaps %xmm0,0xffffff00(%rbp)
4fbb(5): movdqa 0xffffffa0(%rbp),%xmm0
4fc0(7): movaps %xmm0,0xffffff10(%rbp)
4fc7(5): movdqa 0xffffffb0(%rbp),%xmm0
4fcc(7): movaps %xmm0,0xffffff20(%rbp)
4fd3(3): mov %r12,%rdx
4fd6(3): mov %rbx,%rsi
4fd9(5): mov $0x1,%edi
4fde(5): call 0xffffd042(%rip)
4fe3(2): test %eax,%eax
4fe5(6): jns 0xffffff3b(%rip)
4feb(7): lea 0xa2c1(%rip),%rsi
4ff2(5): mov $0x4,%edi
4ff7(5): call 0x4209(%rip)
4ffc(7): lea 0x8f3f(%rip),%rsi
5003(3): mov %rax,%rbx
5006(5): mov $0x5,%edx
500b(2): xor %edi,%edi
500d(5): call 0xffffce13(%rip)
5012(3): mov (%r14),%esi
5015(3): mov %rbx,%rcx
5018(3): mov %rax,%rdx
501b(2): xor %edi,%edi
501d(2): xor %eax,%eax
501f(2): xor %ebx,%ebx
5021(5): call 0xffffd0ff(%rip)
5026(3): mov %r13,%rdi
5029(3): mov (%r14),%r12d
502c(5): call 0x4514(%rip)
5031(2): test %eax,%eax
5033(6): jnz 0x19b(%rip)
5039(3): mov %r13,%rdi
503c(5): call 0x4524(%rip)
5041(3): mov %r12d,(%r14)
5044(4): mov 0xffffffc8(%rbp),%rcx
5048(9): xor $0x28,%rcx
5051(3): mov %rbx,%rax
5054(6): jnz 0x19f(%rip)
505a(4): lea 0xffffffd8(%rbp),%rsp
505e(1): pop %rbx
505f(2): pop %r12
5061(2): pop %r13
5063(2): pop %r14
5065(2): pop %r15
5067(1): pop %rbp
5068(1): ret near (%rsp)
5069(7): nop 0x0(%rax)
5070(5): call 0x4dc0(%rip)
5075(3): mov %rax,%rbx
5078(2): jmp 0xffffffae(%rip)
507a(6): nop 0x0(%rax,%rax,1)
5080(4): movdqu (%rbx),%xmm0
5084(3): mov %r12,%rdi
5087(7): movaps %xmm0,0xfffffea0(%rbp)
508e(5): movdqu 0x10(%rbx),%xmm0
5093(7): movaps %xmm0,0xfffffeb0(%rbp)
509a(5): movdqu 0x20(%rbx),%xmm0
509f(7): movaps %xmm0,0xfffffec0(%rbp)
50a6(5): movdqu 0x30(%rbx),%xmm0
50ab(7): movaps %xmm0,0xfffffed0(%rbp)
50b2(5): movdqu 0x40(%rbx),%xmm0
50b7(7): movaps %xmm0,0xfffffee0(%rbp)
50be(5): movdqu 0x50(%rbx),%xmm0
50c3(7): movaps %xmm0,0xfffffef0(%rbp)
50ca(5): movdqu 0x60(%rbx),%xmm0
50cf(7): movaps %xmm0,0xffffff00(%rbp)
50d6(5): movdqu 0x70(%rbx),%xmm0
50db(7): movaps %xmm0,0xffffff10(%rbp)
50e2(8): movdqu 0x80(%rbx),%xmm0
50ea(7): movaps %xmm0,0xffffff20(%rbp)
50f1(5): call 0xffffcd7f(%rip)
50f6(2): test %eax,%eax
50f8(6): jns 0xfffffe15(%rip)
50fe(3): mov %r12,%rsi
5101(5): mov $0x4,%edi
5106(5): call 0x40fa(%rip)
510b(7): lea 0xa183(%rip),%rsi
5112(5): mov $0x5,%edx
5117(2): xor %edi,%edi
5119(3): mov %rax,%rbx
511c(5): call 0xffffcd04(%rip)
5121(3): mov (%r14),%esi
5124(3): mov %rbx,%rcx
5127(3): mov %rax,%rdx
512a(2): xor %edi,%edi
512c(2): xor %eax,%eax
512e(2): xor %ebx,%ebx
5130(5): call 0xffffcff0(%rip)
5135(5): jmp 0xffffff0f(%rip)
513a(6): nop 0x0(%rax,%rax,1)
5140(3): mov %r12,%rsi
5143(5): mov $0x4,%edi
5148(5): call 0x40b8(%rip)
514d(7): lea 0xa164(%rip),%rsi
5154(5): mov $0x5,%edx
5159(2): xor %edi,%edi
515b(3): mov %rax,%rbx
515e(5): call 0xffffccc2(%rip)
5163(3): mov (%r14),%esi
5166(3): mov %rbx,%rcx
5169(3): mov %rax,%rdx
516c(2): xor %edi,%edi
516e(2): xor %eax,%eax
5170(2): xor %ebx,%ebx
5172(5): call 0xffffcfae(%rip)
5177(5): jmp 0xfffffeaf(%rip)
517c(4): nop 0x0(%rax)
5180(7): lea 0xa12c(%rip),%rsi
5187(5): mov $0x4,%edi
518c(5): call 0x4074(%rip)
5191(5): mov $0x5,%edx
5196(3): mov %rax,%rbx
5199(7): lea 0xa0f5(%rip),%rsi
51a0(5): jmp 0xfffffe6b(%rip)
51a5(7): lea 0xa0cc(%rip),%rsi
51ac(5): mov $0x5,%edx
51b1(2): xor %edi,%edi
51b3(2): xor %ebx,%ebx
51b5(5): call 0xffffcc6b(%rip)
51ba(3): mov (%r14),%esi
51bd(3): mov %rax,%rdx
51c0(2): xor %edi,%edi
51c2(2): xor %eax,%eax
51c4(5): call 0xffffcf5c(%rip)
51c9(5): jmp 0xfffffe7b(%rip)
51ce(7): lea 0xa10b(%rip),%rsi
51d5(5): mov $0x5,%edx
51da(2): xor %edi,%edi
51dc(5): call 0xffffcc44(%rip)
51e1(3): mov (%r14),%esi
51e4(3): mov %rax,%rdx
51e7(5): mov $0x1,%edi
51ec(2): xor %eax,%eax
51ee(5): call 0xffffcf32(%rip)
51f3(5): call 0xffffcc8d(%rip)

"areadlink_with_size" :
5200(2): push %r15
5202(2): push %r14
5204(5): mov $0x401,%eax
5209(2): push %r13
520b(2): push %r12
520d(3): mov %rdi,%r13
5210(1): push %rbp
5211(1): push %rbx
5212(4): lea 0x1(%rsi),%rbx
5216(a): mov $0x4611686018427387903,%r14
5220(a): mov $0x9223372036854775806,%r15
522a(4): sub $0x8,%rsp
522e(7): cmp $0x401,%rsi
5235(4): cmovnb %rax,%rbx
5239(7): nop 0x0(%rax)
5240(3): mov %rbx,%rdi
5243(5): call 0xffffcded(%rip)
5248(3): test %rax,%rax
524b(3): mov %rax,%rbp
524e(2): jz 0x3d(%rip)
5250(3): mov %rbx,%rdx
5253(3): mov %rax,%rsi
5256(3): mov %r13,%rdi
5259(5): call 0xffffcb57(%rip)
525e(3): test %rax,%rax
5261(3): mov %rax,%r12
5264(2): js 0x54(%rip)
5266(3): cmp %r12,%rbx
5269(2): jnbe 0x67(%rip)
526b(3): mov %rbp,%rdi
526e(5): call 0xffffcaa2(%rip)
5273(3): cmp %r14,%rbx
5276(2): jnbe 0x2a(%rip)
5278(3): add %rbx,%rbx
527b(3): mov %rbx,%rdi
527e(5): call 0xffffcdb2(%rip)
5283(3): test %rax,%rax
5286(3): mov %rax,%rbp
5289(2): jnz 0xffffffc7(%rip)
528b(4): add $0x8,%rsp
528f(3): mov %rbp,%rax
5292(1): pop %rbx
5293(1): pop %rbp
5294(2): pop %r12
5296(2): pop %r13
5298(2): pop %r14
529a(2): pop %r15
529c(1): ret near (%rsp)
529d(3): nop (%rax)
52a0(3): cmp %r15,%rbx
52a3(2): jnbe 0x3d(%rip)
52a5(a): mov $0x9223372036854775807,%rbx
52af(2): jmp 0xffffff91(%rip)
52b1(7): nop 0x0(%rax)
52b8(5): call 0xffffca88(%rip)
52bd(3): cmp $0x22,(%rax)
52c0(2): jz 0xffffffa6(%rip)
52c2(3): mov %rbp,%rdi
52c5(2): xor %ebp,%ebp
52c7(5): call 0xffffca49(%rip)
52cc(2): jmp 0xffffffbf(%rip)
52ce(2): nop 
52d0(6): mov $0x0,0x0(%rbp,%r12,1)
52d6(2): jmp 0xffffffb5(%rip)
52d8(8): nop 0x0(%rax,%rax,1)
52e0(5): call 0xffffca60(%rip)
52e5(2): xor %ebp,%ebp
52e7(6): mov $0xc,(%rax)
52ed(2): jmp 0xffffff9e(%rip)

"__argmatch_die" :
52f0(5): mov $0x1,%edi
52f5(5): jmp 0xfffff63b(%rip)

"argmatch" :
5300(2): push %r15
5302(2): push %r14
5304(3): mov %rsi,%r15
5307(2): push %r13
5309(2): push %r12
530b(3): mov %rcx,%r13
530e(1): push %rbp
530f(1): push %rbx
5310(3): mov %rdx,%rbp
5313(4): sub $0x28,%rsp
5317(5): mov %rdi,0x8(%rsp)
531c(5): mov %rdx,0x18(%rsp)
5321(5): call 0xffffcb1f(%rip)
5326(3): mov (%r15),%r14
5329(8): mov $0xffffffff,(%rsp)
5331(3): test %r14,%r14
5334(6): jz 0xb9(%rip)
533a(3): mov %rax,%r12
533d(5): mov $0x0,0x17(%rsp)
5342(2): xor %ebx,%ebx
5344(2): jmp 0x53(%rip)
5346(a): nop 0x0(%rax,%rax,1)
5350(5): mov 0x18(%rsp),%rax
5355(3): test %rax,%rax
5358(6): jz 0xa8(%rip)
535e(4): mov (%rsp),%rdi
5362(3): mov %r13,%rdx
5365(3): mov %rbp,%rsi
5368(4): imul %r13,%rdi
536c(3): add %rax,%rdi
536f(5): call 0xffffcc11(%rip)
5374(2): test %eax,%eax
5376(5): movzx 0x17(%rsp),%eax
537b(5): mov $0x1,%ecx
5380(3): cmovne %ecx,%eax
5383(4): mov %al,0x17(%rsp)
5387(4): add $0x1,%rbx
538b(3): add %r13,%rbp
538e(4): mov 0x0(%r15,%rbx,8),%r14
5392(3): test %r14,%r14
5395(2): jz 0x43(%rip)
5397(5): mov 0x8(%rsp),%rsi
539c(3): mov %r12,%rdx
539f(3): mov %r14,%rdi
53a2(5): call 0xffffc9ae(%rip)
53a7(2): test %eax,%eax
53a9(2): jnz 0xffffffde(%rip)
53ab(3): mov %r14,%rdi
53ae(5): call 0xffffca92(%rip)
53b3(3): cmp %r12,%rax
53b6(2): jz 0x5a(%rip)
53b8(5): cmp $0xffffffff,(%rsp)
53bd(2): jnz 0xffffff93(%rip)
53bf(4): mov %rbx,(%rsp)
53c3(4): add $0x1,%rbx
53c7(3): add %r13,%rbp
53ca(4): mov 0x0(%r15,%rbx,8),%r14
53ce(3): test %r14,%r14
53d1(2): jnz 0xffffffc6(%rip)
53d3(5): nop 0x0(%rax,%rax,1)
53d8(5): cmp $0x0,0x17(%rsp)
53dd(7): mov $0xfffffffe,%rax
53e4(5): cmove (%rsp),%rax
53e9(4): mov %rax,(%rsp)
53ed(4): mov (%rsp),%rax
53f1(4): add $0x28,%rsp
53f5(1): pop %rbx
53f6(1): pop %rbp
53f7(2): pop %r12
53f9(2): pop %r13
53fb(2): pop %r14
53fd(2): pop %r15
53ff(1): ret near (%rsp)
5400(5): mov $0x1,0x17(%rsp)
5405(2): jmp 0xffffff82(%rip)
5407(9): nop 0x0(%rax,%rax,1)
5410(4): mov %rbx,(%rsp)
5414(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
5420(4): cmp $0xffffffff,%rdx
5424(2): push %r12
5426(5): mov $0x5,%edx
542b(1): push %rbp
542c(3): mov %rsi,%r12
542f(1): push %rbx
5430(3): mov %rdi,%rbp
5433(2): jz 0x4d(%rip)
5435(7): lea 0x9ef2(%rip),%rsi
543c(2): xor %edi,%edi
543e(5): call 0xffffc9e2(%rip)
5443(3): mov %rax,%rbx
5446(3): mov %rbp,%rsi
5449(5): mov $0x1,%edi
544e(5): call 0x4062(%rip)
5453(3): mov %r12,%rdx
5456(3): mov %rax,%rbp
5459(5): mov $0x8,%esi
545e(2): xor %edi,%edi
5460(5): call 0x3c80(%rip)
5465(3): mov %rbp,%r8
5468(3): mov %rbx,%rdx
546b(3): mov %rax,%rcx
546e(1): pop %rbx
546f(1): pop %rbp
5470(2): pop %r12
5472(2): xor %esi,%esi
5474(2): xor %edi,%edi
5476(2): xor %eax,%eax
5478(5): jmp 0xffffcca8(%rip)
547d(3): nop (%rax)
5480(7): lea 0x9e8c(%rip),%rsi
5487(2): xor %edi,%edi
5489(5): call 0xffffc997(%rip)
548e(3): mov %rax,%rbx
5491(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
54a0(2): push %r15
54a2(2): push %r14
54a4(3): mov %rdi,%r14
54a7(2): push %r13
54a9(2): push %r12
54ab(2): xor %edi,%edi
54ad(1): push %rbp
54ae(1): push %rbx
54af(3): mov %rsi,%rbp
54b2(7): lea 0x9e92(%rip),%rsi
54b9(3): mov %rdx,%r12
54bc(5): mov $0x5,%edx
54c1(4): sub $0x8,%rsp
54c5(7): mov 0x20dc14(%rip),%rbx
54cc(5): call 0xffffc954(%rip)
54d1(3): mov %rax,%rdi
54d4(3): mov %rbx,%rsi
54d7(5): call 0xffffcab9(%rip)
54dc(3): mov (%r14),%r15
54df(3): test %r15,%r15
54e2(6): jz 0x96(%rip)
54e8(3): xor %r13d,%r13d
54eb(2): xor %ebx,%ebx
54ed(2): jmp 0x3b(%rip)
54ef(1): nop 
54f0(3): mov %r15,%rdi
54f3(4): add $0x1,%rbx
54f7(3): mov %rbp,%r13
54fa(5): call 0x3fd6(%rip)
54ff(7): mov 0x20dbda(%rip),%rdi
5506(7): lea 0x9e53(%rip),%rdx
550d(3): mov %rax,%rcx
5510(5): mov $0x1,%esi
5515(2): xor %eax,%eax
5517(3): add %r12,%rbp
551a(5): call 0xffffcc96(%rip)
551f(4): mov 0x0(%r14,%rbx,8),%r15
5523(3): test %r15,%r15
5526(2): jz 0x52(%rip)
5528(3): test %rbx,%rbx
552b(2): jz 0xffffffc5(%rip)
552d(3): mov %r12,%rdx
5530(3): mov %rbp,%rsi
5533(3): mov %r13,%rdi
5536(5): call 0xffffca4a(%rip)
553b(2): test %eax,%eax
553d(2): jnz 0xffffffb3(%rip)
553f(3): mov %r15,%rdi
5542(4): add $0x1,%rbx
5546(3): add %r12,%rbp
5549(5): call 0x3f87(%rip)
554e(7): mov 0x20db8b(%rip),%rdi
5555(7): lea 0x9e0c(%rip),%rdx
555c(3): mov %rax,%rcx
555f(5): mov $0x1,%esi
5564(2): xor %eax,%eax
5566(5): call 0xffffcc4a(%rip)
556b(4): mov 0x0(%r14,%rbx,8),%r15
556f(3): test %r15,%r15
5572(2): jnz 0xffffffb6(%rip)
5574(4): nop 0x0(%rax)
5578(7): mov 0x20db61(%rip),%rdi
557f(4): mov 0x28(%rdi),%rax
5583(4): cmp 0x30(%rdi),%rax
5587(2): jnb 0x21(%rip)
5589(4): lea 0x1(%rax),%rdx
558d(4): mov %rdx,0x28(%rdi)
5591(3): mov $0xa,(%rax)
5594(4): add $0x8,%rsp
5598(1): pop %rbx
5599(1): pop %rbp
559a(2): pop %r12
559c(2): pop %r13
559e(2): pop %r14
55a0(2): pop %r15
55a2(1): ret near (%rsp)
55a3(5): nop 0x0(%rax,%rax,1)
55a8(4): add $0x8,%rsp
55ac(5): mov $0xa,%esi
55b1(1): pop %rbx
55b2(1): pop %rbp
55b3(2): pop %r12
55b5(2): pop %r13
55b7(2): pop %r14
55b9(2): pop %r15
55bb(5): jmp 0xffffc915(%rip)

"__xargmatch_internal" :
55c0(2): push %r15
55c2(2): push %r14
55c4(3): mov %rdi,%r14
55c7(2): push %r13
55c9(2): push %r12
55cb(3): mov %rsi,%r12
55ce(1): push %rbp
55cf(1): push %rbx
55d0(3): mov %rcx,%rbp
55d3(3): mov %rdx,%rbx
55d6(3): mov %r8,%rcx
55d9(3): mov %rbp,%rdx
55dc(4): sub $0x8,%rsp
55e0(3): mov %rbx,%rsi
55e3(3): mov %r12,%rdi
55e6(3): mov %r8,%r15
55e9(3): mov %r9,%r13
55ec(5): call 0xfffffd14(%rip)
55f1(3): test %rax,%rax
55f4(2): js 0x11(%rip)
55f6(4): add $0x8,%rsp
55fa(1): pop %rbx
55fb(1): pop %rbp
55fc(2): pop %r12
55fe(2): pop %r13
5600(2): pop %r14
5602(2): pop %r15
5604(1): ret near (%rsp)
5605(3): mov %rax,%rdx
5608(3): mov %r12,%rsi
560b(3): mov %r14,%rdi
560e(5): call 0xfffffe12(%rip)
5613(3): mov %r15,%rdx
5616(3): mov %rbp,%rsi
5619(3): mov %rbx,%rdi
561c(5): call 0xfffffe84(%rip)
5621(3): call %r13
5624(7): mov $0xffffffff,%rax
562b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
5630(2): push %r14
5632(2): push %r13
5634(2): push %r12
5636(1): push %rbp
5637(1): push %rbx
5638(3): mov (%rsi),%r14
563b(3): test %r14,%r14
563e(2): jz 0x33(%rip)
5640(3): mov %rcx,%r12
5643(3): mov %rdi,%r13
5646(3): mov %rdx,%rbp
5649(4): lea 0x8(%rsi),%rbx
564d(2): jmp 0x12(%rip)
564f(1): nop 
5650(3): mov (%rbx),%r14
5653(3): add %r12,%rbp
5656(4): add $0x8,%rbx
565a(3): test %r14,%r14
565d(2): jz 0x14(%rip)
565f(3): mov %r12,%rdx
5662(3): mov %rbp,%rsi
5665(3): mov %r13,%rdi
5668(5): call 0xffffc918(%rip)
566d(2): test %eax,%eax
566f(2): jnz 0xffffffe1(%rip)
5671(1): pop %rbx
5672(3): mov %r14,%rax
5675(1): pop %rbp
5676(2): pop %r12
5678(2): pop %r13
567a(2): pop %r14
567c(1): ret near (%rsp)

"close_stdout_set_file_name" :
5680(7): mov %rdi,0x20db29(%rip)
5687(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
5690(7): mov %dil,0x20db11(%rip)
5697(1): ret near (%rsp)

"close_stdout" :
56a0(1): push %rbp
56a1(1): push %rbx
56a2(4): sub $0x8,%rsp
56a6(7): mov 0x20d9fb(%rip),%rdi
56ad(5): call 0x5b13(%rip)
56b2(2): test %eax,%eax
56b4(2): jz 0x18(%rip)
56b6(5): call 0xffffc68a(%rip)
56bb(7): cmp $0x0,0x20dae6(%rip)
56c2(3): mov %rax,%rbx
56c5(2): jz 0x1e(%rip)
56c7(3): cmp $0x20,(%rax)
56ca(2): jnz 0x19(%rip)
56cc(7): mov 0x20da0d(%rip),%rdi
56d3(5): call 0x5aed(%rip)
56d8(2): test %eax,%eax
56da(2): jnz 0x48(%rip)
56dc(4): add $0x8,%rsp
56e0(1): pop %rbx
56e1(1): pop %rbp
56e2(1): ret near (%rsp)
56e3(7): lea 0x9c83(%rip),%rsi
56ea(2): xor %edi,%edi
56ec(5): mov $0x5,%edx
56f1(5): call 0xffffc72f(%rip)
56f6(7): mov 0x20dab3(%rip),%rdi
56fd(3): mov %rax,%rbp
5700(3): test %rdi,%rdi
5703(2): jz 0x2a(%rip)
5705(5): call 0x3bcb(%rip)
570a(2): mov (%rbx),%esi
570c(7): lea 0x9c66(%rip),%rdx
5713(3): mov %rax,%rcx
5716(3): mov %rbp,%r8
5719(2): xor %edi,%edi
571b(2): xor %eax,%eax
571d(5): call 0xffffca03(%rip)
5722(6): mov 0x20d900(%rip),%edi
5728(5): call 0xffffc648(%rip)
572d(2): mov (%rbx),%esi
572f(7): lea 0x9c34(%rip),%rdx
5736(3): mov %rax,%rcx
5739(2): xor %edi,%edi
573b(2): xor %eax,%eax
573d(5): call 0xffffc9e3(%rip)
5742(2): jmp 0xffffffe0(%rip)

"dir_name" :
5750(4): sub $0x8,%rsp
5754(5): call 0x7c(%rip)
5759(3): test %rax,%rax
575c(2): jz 0x7(%rip)
575e(4): add $0x8,%rsp
5762(1): ret near (%rsp)
5763(5): call 0x468d(%rip)

"dir_len" :
5770(1): push %rbp
5771(1): push %rbx
5772(2): xor %ebp,%ebp
5774(3): mov %rdi,%rbx
5777(4): sub $0x8,%rsp
577b(3): cmp $0x2f,(%rdi)
577e(4): setz %bpl
5782(5): call 0xae(%rip)
5787(3): mov %rax,%rcx
578a(3): sub %rbx,%rcx
578d(3): cmp %rbp,%rcx
5790(2): jbe 0x30(%rip)
5792(4): cmp $0x2f,0xffffffff(%rax)
5796(4): lea 0xffffffff(%rcx),%rdx
579a(2): jz 0x14(%rip)
579c(2): jmp 0x24(%rip)
579e(2): nop 
57a0(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
57a5(4): lea 0xffffffff(%rdx),%rax
57a9(2): jnz 0xa(%rip)
57ab(3): mov %rax,%rdx
57ae(3): cmp %rdx,%rbp
57b1(2): jnz 0xffffffef(%rip)
57b3(4): add $0x8,%rsp
57b7(3): mov %rdx,%rax
57ba(1): pop %rbx
57bb(1): pop %rbp
57bc(1): ret near (%rsp)
57bd(3): nop (%rax)
57c0(4): add $0x8,%rsp
57c4(3): mov %rcx,%rdx
57c7(3): mov %rdx,%rax
57ca(1): pop %rbx
57cb(1): pop %rbp
57cc(1): ret near (%rsp)

"mdir_name" :
57d0(1): push %rbp
57d1(1): push %rbx
57d2(3): mov %rdi,%rbp
57d5(4): sub $0x8,%rsp
57d9(5): call 0xffffff97(%rip)
57de(3): test %rax,%rax
57e1(3): mov %rax,%rbx
57e4(3): setz %al
57e7(3): movzx %al,%eax
57ea(5): lea 0x1(%rbx,%rax,1),%rdi
57ef(5): call 0xffffc841(%rip)
57f4(3): test %rax,%rax
57f7(3): mov %rax,%rcx
57fa(2): jz 0x1c(%rip)
57fc(3): mov %rbx,%rdx
57ff(3): mov %rbp,%rsi
5802(3): mov %rax,%rdi
5805(5): call 0xffffc7db(%rip)
580a(3): test %rbx,%rbx
580d(3): mov %rax,%rcx
5810(2): jz 0x10(%rip)
5812(4): mov $0x0,0x0(%rcx,%rbx,1)
5816(4): add $0x8,%rsp
581a(3): mov %rcx,%rax
581d(1): pop %rbx
581e(1): pop %rbp
581f(1): ret near (%rsp)
5820(3): mov $0x2e,(%rax)
5823(5): mov $0x1,%ebx
5828(2): jmp 0xffffffea(%rip)

"last_component" :
5830(3): movzx (%rdi),%edx
5833(3): mov %rdi,%rax
5836(3): cmp $0x2f,%dl
5839(2): jnz 0x13(%rip)
583b(5): nop 0x0(%rax,%rax,1)
5840(4): add $0x1,%rax
5844(3): movzx (%rax),%edx
5847(3): cmp $0x2f,%dl
584a(2): jz 0xfffffff6(%rip)
584c(2): test %dl,%dl
584e(2): jz 0x3c(%rip)
5850(3): mov %rax,%rcx
5853(2): xor %esi,%esi
5855(2): jmp 0x20(%rip)
5857(9): nop 0x0(%rax,%rax,1)
5860(3): test %sil,%sil
5863(2): jz 0x7(%rip)
5865(3): mov %rcx,%rax
5868(2): xor %esi,%esi
586a(4): add $0x1,%rcx
586e(3): movzx (%rcx),%edx
5871(2): test %dl,%dl
5873(2): jz 0x17(%rip)
5875(3): cmp $0x2f,%dl
5878(2): jnz 0xffffffe8(%rip)
587a(4): add $0x1,%rcx
587e(3): movzx (%rcx),%edx
5881(5): mov $0x1,%esi
5886(2): test %dl,%dl
5888(2): jnz 0xffffffed(%rip)
588a(2): REP ret near (%rsp)

"base_len" :
5890(1): push %rbx
5891(3): mov %rdi,%rbx
5894(5): call 0xffffc5ac(%rip)
5899(4): cmp $0x1,%rax
589d(2): jbe 0xd(%rip)
589f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
58a4(4): lea 0xffffffff(%rax),%rdx
58a8(2): jz 0x10(%rip)
58aa(1): pop %rbx
58ab(1): ret near (%rsp)
58ac(4): nop 0x0(%rax)
58b0(3): mov %rax,%rdx
58b3(5): nop 0x0(%rax,%rax,1)
58b8(4): cmp $0x1,%rdx
58bc(2): jz 0x14(%rip)
58be(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
58c3(4): lea 0xffffffff(%rdx),%rax
58c7(2): jz 0xffffffe9(%rip)
58c9(3): mov %rdx,%rax
58cc(1): pop %rbx
58cd(1): ret near (%rsp)
58ce(2): nop 
58d0(5): mov $0x1,%eax
58d5(1): pop %rbx
58d6(1): ret near (%rsp)

"file_type" :
58e0(3): mov 0x18(%rdi),%eax
58e3(5): mov $0x5,%edx
58e8(5): and $0xf000,%eax
58ed(5): cmp $0x8000,%eax
58f2(2): jz 0x4e(%rip)
58f4(5): cmp $0x4000,%eax
58f9(6): jz 0x97(%rip)
58ff(5): cmp $0xa000,%eax
5904(2): jz 0x6c(%rip)
5906(5): cmp $0x6000,%eax
590b(6): jz 0x95(%rip)
5911(5): cmp $0x2000,%eax
5916(6): jz 0x9a(%rip)
591c(5): cmp $0x1000,%eax
5921(6): jz 0x9f(%rip)
5927(5): cmp $0xc000,%eax
592c(2): jz 0x54(%rip)
592e(7): lea 0x9aaf(%rip),%rsi
5935(2): xor %edi,%edi
5937(5): jmp 0xffffc4e9(%rip)
593c(4): nop 0x0(%rax)
5940(5): cmp $0x0,0x30(%rdi)
5945(2): jnz 0x13(%rip)
5947(7): lea 0x9a32(%rip),%rsi
594e(2): xor %edi,%edi
5950(5): jmp 0xffffc4d0(%rip)
5955(3): nop (%rax)
5958(7): lea 0x9a34(%rip),%rsi
595f(2): xor %edi,%edi
5961(5): jmp 0xffffc4bf(%rip)
5966(a): nop 0x0(%rax,%rax,1)
5970(7): lea 0x9a29(%rip),%rsi
5977(2): xor %edi,%edi
5979(5): jmp 0xffffc4a7(%rip)
597e(2): nop 
5980(7): lea 0x9a56(%rip),%rsi
5987(2): xor %edi,%edi
5989(5): jmp 0xffffc497(%rip)
598e(2): nop 
5990(7): lea 0x98f4(%rip),%rsi
5997(2): xor %edi,%edi
5999(5): jmp 0xffffc487(%rip)
599e(2): nop 
59a0(7): lea 0x9a07(%rip),%rsi
59a7(2): xor %edi,%edi
59a9(5): jmp 0xffffc477(%rip)
59ae(2): nop 
59b0(7): lea 0x9a0a(%rip),%rsi
59b7(2): xor %edi,%edi
59b9(5): jmp 0xffffc467(%rip)
59be(2): nop 
59c0(7): lea 0x9a11(%rip),%rsi
59c7(2): xor %edi,%edi
59c9(5): jmp 0xffffc457(%rip)

"strmode" :
59d0(2): mov %edi,%edx
59d2(5): mov $0x2d,%eax
59d7(6): and $0xf000,%edx
59dd(6): cmp $0x8000,%edx
59e3(2): jz 0x5d(%rip)
59e5(6): cmp $0x4000,%edx
59eb(5): mov $0x64,%eax
59f0(2): jz 0x50(%rip)
59f2(6): cmp $0x6000,%edx
59f8(5): mov $0x62,%eax
59fd(2): jz 0x43(%rip)
59ff(6): cmp $0x2000,%edx
5a05(5): mov $0x63,%eax
5a0a(2): jz 0x36(%rip)
5a0c(6): cmp $0xa000,%edx
5a12(5): mov $0x6c,%eax
5a17(2): jz 0x29(%rip)
5a19(6): cmp $0x1000,%edx
5a1f(5): mov $0x70,%eax
5a24(2): jz 0x1c(%rip)
5a26(6): cmp $0xc000,%edx
5a2c(5): mov $0x73,%eax
5a31(5): mov $0x3f,%edx
5a36(3): cmovne %edx,%eax
5a39(7): nop 0x0(%rax)
5a40(2): mov %al,(%rsi)
5a42(2): mov %edi,%eax
5a44(5): and $0x100,%eax
5a49(3): cmp $0x1,%eax
5a4c(2): sbb %eax,%eax
5a4e(3): and $0xbb,%eax
5a51(3): add $0x72,%eax
5a54(3): mov %al,0x1(%rsi)
5a57(2): mov %edi,%eax
5a59(5): and $0x80,%eax
5a5e(3): cmp $0x1,%eax
5a61(2): sbb %eax,%eax
5a63(3): and $0xb6,%eax
5a66(3): add $0x77,%eax
5a69(3): mov %al,0x2(%rsi)
5a6c(2): mov %edi,%eax
5a6e(3): and $0x40,%eax
5a71(3): cmp $0x1,%eax
5a74(2): sbb %eax,%eax
5a76(6): test $0x800,%edi
5a7c(6): jz 0xa4(%rip)
5a82(3): and $0xe0,%eax
5a85(3): add $0x73,%eax
5a88(3): mov %al,0x3(%rsi)
5a8b(2): mov %edi,%eax
5a8d(3): and $0x20,%eax
5a90(3): cmp $0x1,%eax
5a93(2): sbb %eax,%eax
5a95(3): and $0xbb,%eax
5a98(3): add $0x72,%eax
5a9b(3): mov %al,0x4(%rsi)
5a9e(2): mov %edi,%eax
5aa0(3): and $0x10,%eax
5aa3(3): cmp $0x1,%eax
5aa6(2): sbb %eax,%eax
5aa8(3): and $0xb6,%eax
5aab(3): add $0x77,%eax
5aae(3): mov %al,0x5(%rsi)
5ab1(2): mov %edi,%eax
5ab3(3): and $0x8,%eax
5ab6(3): cmp $0x1,%eax
5ab9(2): sbb %eax,%eax
5abb(6): test $0x400,%edi
5ac1(6): jz 0x87(%rip)
5ac7(3): and $0xe0,%eax
5aca(3): add $0x73,%eax
5acd(3): mov %al,0x6(%rsi)
5ad0(2): mov %edi,%eax
5ad2(3): and $0x4,%eax
5ad5(3): cmp $0x1,%eax
5ad8(2): sbb %eax,%eax
5ada(3): and $0xbb,%eax
5add(3): add $0x72,%eax
5ae0(3): mov %al,0x7(%rsi)
5ae3(2): mov %edi,%eax
5ae5(3): and $0x2,%eax
5ae8(3): cmp $0x1,%eax
5aeb(2): sbb %eax,%eax
5aed(3): and $0xb6,%eax
5af0(3): add $0x77,%eax
5af3(3): mov %al,0x8(%rsi)
5af6(2): mov %edi,%eax
5af8(3): and $0x1,%eax
5afb(3): cmp $0x1,%eax
5afe(2): sbb %eax,%eax
5b00(6): and $0x200,%edi
5b06(2): jz 0x2a(%rip)
5b08(3): and $0xe0,%eax
5b0b(3): add $0x74,%eax
5b0e(3): mov %al,0x9(%rsi)
5b11(5): mov $0x20,%eax
5b16(4): mov %ax,0xa(%rsi)
5b1a(1): ret near (%rsp)
5b1b(5): nop 0x0(%rax,%rax,1)
5b20(3): and $0xb5,%eax
5b23(3): add $0x78,%eax
5b26(5): jmp 0xffffff62(%rip)
5b2b(5): nop 0x0(%rax,%rax,1)
5b30(3): and $0xb5,%eax
5b33(3): add $0x78,%eax
5b36(3): mov %al,0x9(%rsi)
5b39(5): mov $0x20,%eax
5b3e(4): mov %ax,0xa(%rsi)
5b42(1): ret near (%rsp)
5b43(5): nop 0x0(%rax,%rax,1)
5b48(3): and $0xb5,%eax
5b4b(3): add $0x78,%eax
5b4e(5): jmp 0xffffff7f(%rip)

"filemodestring" :
5b60(3): mov 0x18(%rdi),%edi
5b63(5): jmp 0xfffffe6d(%rip)

"imaxtostr" :
5b70(3): test %rdi,%rdi
5b73(4): lea 0x14(%rsi),%rcx
5b77(4): mov $0x0,0x14(%rsi)
5b7b(a): mov $0x7378697629483820647,%r9
5b85(a): mov $0x-3689348814741910323,%rsi
5b8f(6): mov $0x30,%r8d
5b95(2): js 0x3e(%rip)
5b97(9): nop 0x0(%rax,%rax,1)
5ba0(3): mov %rdi,%rax
5ba3(4): sub $0x1,%rcx
5ba7(3): mul %rax,%rsi,%rdx
5baa(4): shr $0x3,%rdx
5bae(4): lea 0x0(%rdx,%rdx,4),%rax
5bb2(3): add %rax,%rax
5bb5(3): sub %rax,%rdi
5bb8(3): add $0x30,%edi
5bbb(3): test %rdx,%rdx
5bbe(3): mov %dil,(%rcx)
5bc1(3): mov %rdx,%rdi
5bc4(2): jnz 0xffffffdc(%rip)
5bc6(3): mov %rcx,%rax
5bc9(1): ret near (%rsp)
5bca(6): nop 0x0(%rax,%rax,1)
5bd0(3): mov %rsi,%rcx
5bd3(3): mov %rdi,%rax
5bd6(4): lea 0xffffffff(%rcx),%rsi
5bda(3): imul %rax,%r9,%rdx
5bdd(3): mov %rdi,%rax
5be0(4): sar $0x3f,%rax
5be4(4): sar $0x2,%rdx
5be8(3): sub %rax,%rdx
5beb(4): lea 0x0(%rdx,%rdx,4),%rax
5bef(4): lea 0x0(%r8,%rax,2),%eax
5bf3(2): sub %edi,%eax
5bf5(3): test %rdx,%rdx
5bf8(3): mov %rdx,%rdi
5bfb(3): mov %al,0xffffffff(%rcx)
5bfe(2): jnz 0xffffffd2(%rip)
5c00(4): sub $0x2,%rcx
5c04(4): mov $0x2d,0xffffffff(%rsi)
5c08(3): mov %rcx,%rax
5c0b(1): ret near (%rsp)

"memcpy_lowcase" :
5c10(3): test %rdx,%rdx
5c13(2): push %r12
5c15(1): push %rbp
5c16(3): mov %rdi,%rbp
5c19(1): push %rbx
5c1a(2): jz 0x2f(%rip)
5c1c(3): mov %rsi,%r12
5c1f(4): lea 0xffffffff(%rdx),%rbx
5c23(5): call 0xffffc5dd(%rip)
5c28(8): nop 0x0(%rax,%rax,1)
5c30(5): movzx 0x0(%r12,%rbx,1),%ecx
5c35(3): mov (%rax),%rdx
5c38(3): mov 0x0(%rdx,%rcx,4),%edx
5c3b(4): mov %dl,0x0(%rbp,%rbx,1)
5c3f(4): sub $0x1,%rbx
5c43(4): cmp $0xffffffff,%rbx
5c47(2): jnz 0xffffffe9(%rip)
5c49(3): mov %rbp,%rax
5c4c(1): pop %rbx
5c4d(1): pop %rbp
5c4e(2): pop %r12
5c50(1): ret near (%rsp)

"memcpy_uppcase" :
5c60(3): test %rdx,%rdx
5c63(2): push %r12
5c65(1): push %rbp
5c66(3): mov %rdi,%rbp
5c69(1): push %rbx
5c6a(2): jz 0x2f(%rip)
5c6c(3): mov %rsi,%r12
5c6f(4): lea 0xffffffff(%rdx),%rbx
5c73(5): call 0xffffc06d(%rip)
5c78(8): nop 0x0(%rax,%rax,1)
5c80(5): movzx 0x0(%r12,%rbx,1),%ecx
5c85(3): mov (%rax),%rdx
5c88(3): mov 0x0(%rdx,%rcx,4),%edx
5c8b(4): mov %dl,0x0(%rbp,%rbx,1)
5c8f(4): sub $0x1,%rbx
5c93(4): cmp $0xffffffff,%rbx
5c97(2): jnz 0xffffffe9(%rip)
5c99(3): mov %rbp,%rax
5c9c(1): pop %rbx
5c9d(1): pop %rbp
5c9e(2): pop %r12
5ca0(1): ret near (%rsp)

"__strftime_internal" :
5cb0(2): push %r15
5cb2(2): push %r14
5cb4(3): mov %rdx,%r11
5cb7(2): push %r13
5cb9(2): push %r12
5cbb(3): mov %rcx,%r13
5cbe(1): push %rbp
5cbf(1): push %rbx
5cc0(3): mov %rdi,%rbp
5cc3(7): sub $0x4c8,%rsp
5cca(4): mov 0x30(%rcx),%rdi
5cce(4): mov 0x8(%rcx),%r15d
5cd2(8): mov 0x508(%rsp),%rax
5cda(5): mov %rsi,0x8(%rsp)
5cdf(5): mov %r9d,0x2c(%rsp)
5ce4(8): movsxd 0x500(%rsp),%r10
5cec(5): mov %r8b,0x2b(%rsp)
5cf1(5): mov %rax,0x18(%rsp)
5cf6(8): mov 0x510(%rsp),%rax
5cfe(5): mov %rax,0x10(%rsp)
5d03(9): mov $0x28,%rax
5d0c(8): mov %rax,0x4b8(%rsp)
5d14(2): xor %eax,%eax
5d16(7): lea 0x9e64(%rip),%rax
5d1d(3): test %rdi,%rdi
5d20(4): cmovne %rdi,%rax
5d24(4): cmp $0xc,%r15d
5d28(5): mov %rax,0x20(%rsp)
5d2d(6): jle 0xf3(%rip)
5d33(4): sub $0xc,%r15d
5d37(4): movzx (%r11),%eax
5d3b(3): xor %r14d,%r14d
5d3e(2): test %al,%al
5d40(6): jz 0xbc(%rip)
5d46(5): mov %r15d,0x68(%rsp)
5d4b(3): mov %r11,%rbx
5d4e(2): cmp $0x25,%al
5d50(6): jz 0xe8(%rip)
5d56(3): test %r10d,%r10d
5d59(6): mov $0x0,%r12d
5d5f(5): mov $0x1,%eax
5d64(4): cmovns %r10,%r12
5d68(3): test %r12,%r12
5d6b(4): cmove %rax,%r12
5d6f(5): mov 0x8(%rsp),%rax
5d74(3): sub %r14,%rax
5d77(3): cmp %r12,%rax
5d7a(2): jnbe 0x36(%rip)
5d7c(3): xor %r14d,%r14d
5d7f(8): mov 0x4b8(%rsp),%rbx
5d87(9): xor $0x28,%rbx
5d90(3): mov %r14,%rax
5d93(6): jnz 0x19b2(%rip)
5d99(7): add $0x4c8,%rsp
5da0(1): pop %rbx
5da1(1): pop %rbp
5da2(2): pop %r12
5da4(2): pop %r13
5da6(2): pop %r14
5da8(2): pop %r15
5daa(1): ret near (%rsp)
5dab(5): nop 0x0(%rax,%rax,1)
5db0(3): test %rbp,%rbp
5db3(2): jz 0x29(%rip)
5db5(4): cmp $0x1,%r10d
5db9(2): jle 0x19(%rip)
5dbb(4): lea 0xffffffff(%r10),%r15
5dbf(3): mov %rbp,%rdi
5dc2(5): mov $0x20,%esi
5dc7(3): mov %r15,%rdx
5dca(3): add %r15,%rbp
5dcd(5): call 0xffffc153(%rip)
5dd2(3): movzx (%rbx),%eax
5dd5(4): add $0x1,%rbp
5dd9(3): mov %al,0xffffffff(%rbp)
5ddc(3): add %r12,%r14
5ddf(3): mov %rbx,%r12
5de2(6): movzx 0x1(%r12),%eax
5de8(5): lea 0x1(%r12),%rbx
5ded(7): mov $0xffffffff,%r10
5df4(2): test %al,%al
5df6(6): jnz 0xffffff58(%rip)
5dfc(3): test %rbp,%rbp
5dff(6): jz 0xffffff80(%rip)
5e05(6): cmp $0x0,0x8(%rsp)
5e0b(6): jz 0xffffff74(%rip)
5e11(4): mov $0x0,0x0(%rbp)
5e15(5): jmp 0xffffff6a(%rip)
5e1a(6): nop 0x0(%rax,%rax,1)
5e20(3): test %r15d,%r15d
5e23(5): mov $0xc,%eax
5e28(4): cmove %eax,%r15d
5e2c(5): jmp 0xffffff0b(%rip)
5e31(7): nop 0x0(%rax)
5e38(5): movzx 0x2b(%rsp),%eax
5e3d(3): xor %r8d,%r8d
5e40(3): xor %r15d,%r15d
5e43(5): mov $0x1,%edx
5e48(4): mov %al,0x30(%rsp)
5e4c(4): add $0x1,%rbx
5e50(3): movsx (%rbx),%eax
5e53(3): lea 0xffffffdd(%rax),%ecx
5e56(2): mov %eax,%esi
5e58(3): mov %eax,%r9d
5e5b(3): cmp $0x3c,%cl
5e5e(2): jnbe 0x2e(%rip)
5e60(3): mov %rdx,%rdi
5e63(a): mov $0x1152921504606856448,%r11
5e6d(3): shl/sal %cl,%rdi
5e70(3): test %r11,%rdi
5e73(2): jnz 0x6d(%rip)
5e75(2): test %cl,%cl
5e77(2): jz 0x79(%rip)
5e79(a): mov $0x576460752303423488,%rcx
5e83(3): test %rcx,%rdi
5e86(6): jnz 0x15a(%rip)
5e8c(3): lea 0xffffffd0(%rax),%edx
5e8f(3): cmp $0x9,%edx
5e92(6): jbe 0x15e(%rip)
5e98(4): cmp $0x45,%sil
5e9c(2): jz 0x2c(%rip)
5e9e(3): xor %r11d,%r11d
5ea1(4): cmp $0x4f,%sil
5ea5(2): jz 0x23(%rip)
5ea7(4): cmp $0x7a,%sil
5eab(2): jnbe 0x55(%rip)
5ead(7): lea 0x955c(%rip),%rdx
5eb4(4): movzx %sil,%eax
5eb8(4): movsxd 0x0(%rdx,%rax,4),%rax
5ebc(3): add %rdx,%rax
5ebf(2): jmp %rax
5ec1(7): nop 0x0(%rax)
5ec8(5): movsx 0x1(%rbx),%r9d
5ecd(3): mov %eax,%r11d
5ed0(4): add $0x1,%rbx
5ed4(3): mov %r9d,%esi
5ed7(2): jmp 0xffffffd0(%rip)
5ed9(7): nop 0x0(%rax)
5ee0(3): mov %eax,%r15d
5ee3(5): jmp 0xffffff69(%rip)
5ee8(8): nop 0x0(%rax,%rax,1)
5ef0(6): mov $0x1,%r8d
5ef6(5): jmp 0xffffff56(%rip)
5efb(3): mov %r9,%rbx
5efe(2): nop 
5f00(4): lea 0xffffffff(%rbx),%rax
5f04(6): mov $0x1,%r8d
5f0a(3): mov %rax,%r9
5f0d(4): lea 0xffffffff(%rax),%rax
5f11(4): add $0x1,%r8d
5f15(4): cmp $0x25,0x1(%rax)
5f19(2): jnz 0xfffffff1(%rip)
5f1b(5): mov 0x8(%rsp),%rdx
5f20(5): mov $0x0,%eax
5f25(3): movsxd %r8d,%r8
5f28(3): mov %r8,%rcx
5f2b(3): mov %rbx,%r12
5f2e(3): sub %r14,%rdx
5f31(3): test %r10d,%r10d
5f34(4): cmovns %r10d,%eax
5f38(2): cwde 
5f3a(3): cmp %r8,%rax
5f3d(4): cmovnb %rax,%rcx
5f41(3): cmp %rdx,%rcx
5f44(6): jnb 0xfffffe38(%rip)
5f4a(3): test %rbp,%rbp
5f4d(6): jz 0x88(%rip)
5f53(3): cmp %r8,%rax
5f56(2): jbe 0x4f(%rip)
5f58(3): movsxd %r10d,%rdx
5f5b(5): mov %r8,0x48(%rsp)
5f60(5): mov %rcx,0x40(%rsp)
5f65(3): sub %r8,%rdx
5f68(4): cmp $0x30,%r15d
5f6c(5): mov %r9,0x38(%rsp)
5f71(5): lea 0x0(%rbp,%rdx,1),%rbx
5f76(6): jz 0x1270(%rip)
5f7c(4): cmp $0x2b,%r15d
5f80(6): jz 0x1266(%rip)
5f86(3): mov %rbp,%rdi
5f89(5): mov $0x20,%esi
5f8e(3): mov %rbx,%rbp
5f91(5): call 0xffffbf8f(%rip)
5f96(5): mov 0x48(%rsp),%r8
5f9b(5): mov 0x40(%rsp),%rcx
5fa0(5): mov 0x38(%rsp),%r9
5fa5(5): cmp $0x0,0x30(%rsp)
5faa(5): mov %rcx,0x38(%rsp)
5faf(3): mov %r8,%rdx
5fb2(5): mov %r8,0x30(%rsp)
5fb7(3): mov %r9,%rsi
5fba(3): mov %rbp,%rdi
5fbd(6): jz 0x11d3(%rip)
5fc3(5): call 0xfffffc9d(%rip)
5fc8(5): mov 0x30(%rsp),%r8
5fcd(5): mov 0x38(%rsp),%rcx
5fd2(3): add %r8,%rbp
5fd5(3): add %rcx,%r14
5fd8(5): jmp 0xfffffe0a(%rip)
5fdd(3): nop (%rax)
5fe0(5): mov $0x1,0x30(%rsp)
5fe5(5): jmp 0xfffffe67(%rip)
5fea(6): nop 0x0(%rax,%rax,1)
5ff0(3): xor %r10d,%r10d
5ff3(4): movsx 0x1(%rbx),%eax
5ff7(7): cmp $0xccccccc,%r10d
5ffe(4): lea 0x1(%rbx),%rcx
6002(2): mov %eax,%esi
6004(3): lea 0xffffffd0(%rax),%edx
6007(2): jnle 0x2f(%rip)
6009(3): movsx (%rbx),%edi
600c(2): jz 0x24(%rip)
600e(4): lea 0x0(%r10,%r10,4),%r9d
6012(3): mov %rcx,%rbx
6015(5): lea 0xffffffd0(%rdi,%r9,2),%r10d
601a(3): cmp $0x9,%edx
601d(2): jbe 0xffffffd6(%rip)
601f(3): mov %eax,%r9d
6022(5): jmp 0xfffffe76(%rip)
6027(9): nop 0x0(%rax,%rax,1)
6030(4): cmp $0x37,%dil
6034(2): jle 0xffffffda(%rip)
6036(3): cmp $0x9,%edx
6039(2): jnbe 0x17(%rip)
603b(4): movsx 0x2(%rbx),%eax
603f(6): mov $0x7fffffff,%r10d
6045(4): add $0x2,%rbx
6049(2): mov %eax,%esi
604b(3): lea 0xffffffd0(%rax),%edx
604e(2): jmp 0xffffffcc(%rip)
6050(3): mov %eax,%r9d
6053(3): mov %rcx,%rbx
6056(6): mov $0x7fffffff,%r10d
605c(5): jmp 0xfffffe3c(%rip)
6061(7): nop 0x0(%rax)
6068(4): cmp $0x4f,%r11d
606c(6): jz 0xfffffe94(%rip)
6072(3): xor %r8d,%r8d
6075(5): mov $0x2520,%eax
607a(3): test %r11d,%r11d
607d(8): mov %ax,0xab(%rsp)
6085(6): jnz 0x16d6(%rip)
608b(8): lea 0xab(%rsp),%rdx
6093(3): mov %rbx,%r12
6096(4): lea 0x2(%rdx),%rax
609a(8): lea 0xb0(%rsp),%r9
60a2(3): mov %sil,(%rax)
60a5(4): mov $0x0,0x1(%rax)
60a9(3): mov %r13,%rcx
60ac(5): mov $0x400,%esi
60b1(5): mov %r10d,0x38(%rsp)
60b6(3): mov %r9,%rdi
60b9(5): mov %r8b,0x50(%rsp)
60be(5): mov %r11d,0x48(%rsp)
60c3(5): mov %r9,0x40(%rsp)
60c8(5): call 0xffffc048(%rip)
60cd(3): test %rax,%rax
60d0(6): jz 0xfffffd12(%rip)
60d6(5): movsxd 0x38(%rsp),%r10
60db(4): lea 0xffffffff(%rax),%rcx
60df(5): mov 0x8(%rsp),%rdx
60e4(5): mov $0x0,%eax
60e9(3): test %r10d,%r10d
60ec(4): cmovns %r10,%rax
60f0(3): cmp %rax,%rcx
60f3(3): mov %rax,%rbx
60f6(4): cmovnb %rcx,%rbx
60fa(3): sub %r14,%rdx
60fd(3): cmp %rbx,%rdx
6100(6): jbe 0xfffffc7c(%rip)
6106(3): test %rbp,%rbp
6109(6): jz 0xa5(%rip)
610f(5): mov 0x48(%rsp),%r11d
6114(5): mov 0x40(%rsp),%r9
6119(6): movzx 0x50(%rsp),%r8d
611f(3): test %r11d,%r11d
6122(2): jnz 0x5c(%rip)
6124(3): cmp %rax,%rcx
6127(2): jnb 0x57(%rip)
6129(3): movsxd %r10d,%rdx
612c(5): mov %r9,0x50(%rsp)
6131(5): mov %rcx,0x48(%rsp)
6136(3): sub %rcx,%rdx
6139(4): cmp $0x30,%r15d
613d(5): mov %r8b,0x40(%rsp)
6142(5): lea 0x0(%rbp,%rdx,1),%rax
6147(5): mov %rax,0x38(%rsp)
614c(6): jz 0x1073(%rip)
6152(4): cmp $0x2b,%r15d
6156(6): jz 0x1069(%rip)
615c(3): mov %rbp,%rdi
615f(5): mov $0x20,%esi
6164(5): call 0xffffbdbc(%rip)
6169(6): movzx 0x40(%rsp),%r8d
616f(5): mov 0x38(%rsp),%rbp
6174(5): mov 0x50(%rsp),%r9
6179(5): mov 0x48(%rsp),%rcx
617e(3): test %r8b,%r8b
6181(4): lea 0x1(%r9),%rsi
6185(3): mov %rcx,%rdx
6188(6): jnz 0x1020(%rip)
618e(5): cmp $0x0,0x30(%rsp)
6193(3): mov %rbp,%rdi
6196(5): mov %rcx,0x30(%rsp)
619b(6): jz 0x876(%rip)
61a1(5): call 0xfffffabf(%rip)
61a6(5): mov 0x30(%rsp),%rcx
61ab(3): add %rcx,%rbp
61ae(3): add %rbx,%r14
61b1(5): jmp 0xfffffc31(%rip)
61b6(3): test %r11d,%r11d
61b9(6): jnz 0xfffffd47(%rip)
61bf(5): movzx 0x30(%rsp),%eax
61c4(3): test %r8b,%r8b
61c7(8): lea 0xab(%rsp),%rdx
61cf(3): mov %rbx,%r12
61d2(4): cmovne %r8d,%eax
61d6(3): xor %r8d,%r8d
61d9(3): xor %r11d,%r11d
61dc(4): mov %al,0x30(%rsp)
61e0(5): mov $0x2520,%eax
61e5(8): mov %ax,0xab(%rsp)
61ed(4): lea 0x2(%rdx),%rax
61f1(5): jmp 0xfffffea9(%rip)
61f6(4): cmp $0x45,%r11d
61fa(6): jz 0xfffffd06(%rip)
6200(4): mov 0x0(%r13),%ecx
6204(5): mov $0x2,%edi
6209(7): nop 0x0(%rax)
6210(2): mov %ecx,%eax
6212(2): xor %esi,%esi
6214(5): mov $0x0,0x40(%rsp)
6219(3): shr $0x1f,%eax
621c(4): mov %eax,0x38(%rsp)
6220(2): mov %ecx,%eax
6222(2): not %eax
6224(3): shr $0x1f,%eax
6227(4): cmp $0x4f,%r11d
622b(6): jnz 0xe85(%rip)
6231(2): test %al,%al
6233(6): jz 0xe7d(%rip)
6239(3): mov %r9d,%esi
623c(5): mov $0x2520,%edx
6241(3): xor %r8d,%r8d
6244(8): mov %dx,0xab(%rsp)
624c(8): lea 0xab(%rsp),%rdx
6254(8): mov %r11b,0xad(%rsp)
625c(3): mov %rbx,%r12
625f(3): mov %edi,%r11d
6262(4): lea 0x3(%rdx),%rax
6266(5): jmp 0xfffffe34(%rip)
626b(3): test %r10d,%r10d
626e(5): mov $0x0,%ecx
6273(5): mov $0x1,%eax
6278(4): cmovns %r10d,%ecx
627c(3): movsxd %ecx,%rcx
627f(3): test %rcx,%rcx
6282(4): cmove %rax,%rcx
6286(5): mov 0x8(%rsp),%rax
628b(3): sub %r14,%rax
628e(3): cmp %rcx,%rax
6291(6): jbe 0xfffffaeb(%rip)
6297(3): test %rbp,%rbp
629a(2): jz 0x4e(%rip)
629c(4): cmp $0x1,%r10d
62a0(2): jle 0x3c(%rip)
62a2(3): movsxd %r10d,%rdx
62a5(5): mov %rcx,0x30(%rsp)
62aa(4): sub $0x1,%rdx
62ae(4): cmp $0x30,%r15d
62b2(5): lea 0x0(%rbp,%rdx,1),%r12
62b7(6): jz 0x131d(%rip)
62bd(4): cmp $0x2b,%r15d
62c1(6): jz 0x1313(%rip)
62c7(3): mov %rbp,%rdi
62ca(5): mov $0x20,%esi
62cf(3): mov %r12,%rbp
62d2(5): call 0xffffbc4e(%rip)
62d7(5): mov 0x30(%rsp),%rcx
62dc(4): mov $0x9,0x0(%rbp)
62e0(4): add $0x1,%rbp
62e4(4): nop 0x0(%rax)
62e8(3): add %rcx,%r14
62eb(3): mov %rbx,%r12
62ee(5): jmp 0xfffffaf4(%rip)
62f3(5): mov $0x1,%eax
62f8(3): test %r8b,%r8b
62fb(6): jnz 0xf30(%rip)
6301(3): mov %eax,%r8d
6304(5): mov $0x70,%esi
6309(5): jmp 0xfffffd6c(%rip)
630e(7): lea 0x90da(%rip),%rax
6315(8): mov $0xffffffff,0x38(%rsp)
631d(5): mov %rax,0x40(%rsp)
6322(6): movzx 0x30(%rsp),%r8d
6328(7): mov 0x518(%rsp),%eax
632f(7): mov $0xffffffff,%rsi
6336(5): mov %r10d,0x48(%rsp)
633b(2): xor %edi,%edi
633d(3): mov %r15d,%r9d
6340(3): mov %r13,%rcx
6343(5): mov %r8d,0x30(%rsp)
6348(1): push %rax
6349(4): push 0x18(%rsp)
634d(4): push 0x28(%rsp)
6351(4): mov 0x50(%rsp),%eax
6355(1): push %rax
6356(5): mov 0x60(%rsp),%rdx
635b(5): call 0xfffff955(%rip)
6360(4): add $0x20,%rsp
6364(5): movsxd 0x48(%rsp),%r10
6369(3): mov %rax,%r11
636c(5): mov 0x8(%rsp),%rsi
6371(5): mov $0x0,%eax
6376(3): test %r10d,%r10d
6379(4): cmovns %r10,%rax
637d(3): cmp %rax,%r11
6380(3): mov %rax,%r12
6383(4): cmovnb %r11,%r12
6387(3): sub %r14,%rsi
638a(3): cmp %r12,%rsi
638d(5): mov %rsi,0x48(%rsp)
6392(6): jbe 0xfffff9ea(%rip)
6398(3): test %rbp,%rbp
639b(6): jz 0xfffffa41(%rip)
63a1(3): cmp %rax,%r11
63a4(2): jnb 0x42(%rip)
63a6(3): movsxd %r10d,%rdx
63a9(5): mov %r11,0x58(%rsp)
63ae(3): sub %r11,%rdx
63b1(4): cmp $0x30,%r15d
63b5(5): lea 0x0(%rbp,%rdx,1),%rax
63ba(5): mov %rax,0x50(%rsp)
63bf(6): jz 0x10fd(%rip)
63c5(4): cmp $0x2b,%r15d
63c9(6): jz 0x10f3(%rip)
63cf(3): mov %rbp,%rdi
63d2(5): mov $0x20,%esi
63d7(5): call 0xffffbb49(%rip)
63dc(5): mov 0x50(%rsp),%rbp
63e1(5): mov 0x58(%rsp),%r11
63e6(7): mov 0x518(%rsp),%eax
63ed(5): mov %r11,0x50(%rsp)
63f2(3): mov %rbp,%rdi
63f5(3): mov %r15d,%r9d
63f8(3): mov %r13,%rcx
63fb(1): push %rax
63fc(4): push 0x18(%rsp)
6400(4): push 0x28(%rsp)
6404(4): mov 0x50(%rsp),%eax
6408(1): push %rax
6409(5): mov 0x50(%rsp),%r8d
640e(5): mov 0x60(%rsp),%rdx
6413(5): mov 0x68(%rsp),%rsi
6418(5): call 0xfffff898(%rip)
641d(5): mov 0x70(%rsp),%r11
6422(4): add $0x20,%rsp
6426(3): add %r11,%rbp
6429(5): jmp 0xfffff9b3(%rip)
642e(5): mov 0x8(%rsp),%rdx
6433(5): mov $0x0,%eax
6438(5): mov $0x1,%ecx
643d(3): sub %r14,%rdx
6440(3): test %r10d,%r10d
6443(4): cmovns %r10d,%eax
6447(2): cwde 
6449(3): test %rax,%rax
644c(4): cmovne %rax,%rcx
6450(3): test %r11d,%r11d
6453(6): jnz 0x1035(%rip)
6459(3): cmp %rdx,%rcx
645c(6): jnb 0xfffff920(%rip)
6462(3): test %rbp,%rbp
6465(6): jz 0xfffffe83(%rip)
646b(4): cmp $0x1,%r10d
646f(2): jle 0x3f(%rip)
6471(3): movsxd %r10d,%rdx
6474(5): mov %rcx,0x30(%rsp)
6479(4): sub $0x1,%rdx
647d(4): cmp $0x30,%r15d
6481(5): lea 0x0(%rbp,%rdx,1),%r12
6486(6): jz 0x126f(%rip)
648c(4): cmp $0x2b,%r15d
6490(5): mov $0x20,%esi
6495(6): jz 0x1260(%rip)
649b(3): mov %rbp,%rdi
649e(3): mov %r12,%rbp
64a1(5): call 0xffffba7f(%rip)
64a6(3): movzx (%rbx),%esi
64a9(5): mov 0x30(%rsp),%rcx
64ae(4): mov %sil,0x0(%rbp)
64b2(4): add $0x1,%rbp
64b6(5): jmp 0xfffffe32(%rip)
64bb(7): lea 0x8f33(%rip),%rax
64c2(8): mov $0xffffffff,0x38(%rsp)
64ca(5): mov %rax,0x40(%rsp)
64cf(5): jmp 0xfffffe53(%rip)
64d4(4): cmp $0x45,%r11d
64d8(6): jz 0xfffffa28(%rip)
64de(4): mov 0x1c(%r13),%esi
64e2(4): sub 0x18(%r13),%esi
64e6(5): mov $0x92492493,%edx
64eb(3): add $0x7,%esi
64ee(2): mov %esi,%eax
64f0(2): imul %eax,%edx,%edx
64f2(3): lea 0x0(%rdx,%rsi,1),%ecx
64f5(3): sar $0x1f,%esi
64f8(5): mov $0x2,%edi
64fd(3): sar $0x2,%ecx
6500(2): sub %esi,%ecx
6502(5): jmp 0xfffffd0e(%rip)
6507(4): cmp $0x45,%r11d
650b(6): jz 0xd2f(%rip)
6511(4): cmp $0x4f,%r11d
6515(6): jz 0xfffff9eb(%rip)
651b(4): mov 0x14(%r13),%eax
651f(5): cmp $0xfffff894,%eax
6524(6): lea 0x76c(%rax),%ecx
652a(5): setl 0x38(%rsp)
652f(5): cmp $0xfffff894,%eax
6534(3): setnl %al
6537(3): test %r15d,%r15d
653a(6): jnz 0xe7f(%rip)
6540(5): mov 0x2c(%rsp),%r15d
6545(4): cmp $0x2b,%r15d
6549(6): jz 0xe7a(%rip)
654f(5): mov $0x0,0x40(%rsp)
6554(5): mov $0x4,%edi
6559(2): xor %esi,%esi
655b(5): jmp 0xfffffccc(%rip)
6560(5): movzx 0x30(%rsp),%esi
6565(5): mov 0x20(%rsp),%rdi
656a(3): test %r8b,%r8b
656d(5): mov $0x0,%eax
6572(5): mov %r10d,0x38(%rsp)
6577(5): mov %r8b,0x40(%rsp)
657c(3): cmovne %eax,%esi
657f(5): mov %sil,0x30(%rsp)
6584(5): call 0xffffb8bc(%rip)
6589(5): movsxd 0x38(%rsp),%r10
658e(3): mov %rax,%r12
6591(5): mov 0x8(%rsp),%rdx
6596(5): mov $0x0,%eax
659b(3): test %r10d,%r10d
659e(4): cmovns %r10,%rax
65a2(3): cmp %rax,%r12
65a5(3): mov %rax,%rcx
65a8(4): cmovnb %r12,%rcx
65ac(3): sub %r14,%rdx
65af(3): cmp %rcx,%rdx
65b2(6): jbe 0xfffff7ca(%rip)
65b8(3): test %rbp,%rbp
65bb(6): jz 0xfffffd2d(%rip)
65c1(3): cmp %rax,%r12
65c4(6): movzx 0x40(%rsp),%r8d
65ca(2): jnb 0x4d(%rip)
65cc(3): movsxd %r10d,%rdx
65cf(5): mov %rcx,0x48(%rsp)
65d4(5): mov %r8b,0x40(%rsp)
65d9(3): sub %r12,%rdx
65dc(4): cmp $0x30,%r15d
65e0(5): lea 0x0(%rbp,%rdx,1),%rax
65e5(5): mov %rax,0x38(%rsp)
65ea(6): jz 0x10c5(%rip)
65f0(4): cmp $0x2b,%r15d
65f4(6): jz 0x10bb(%rip)
65fa(3): mov %rbp,%rdi
65fd(5): mov $0x20,%esi
6602(5): call 0xffffb91e(%rip)
6607(6): movzx 0x40(%rsp),%r8d
660d(5): mov 0x38(%rsp),%rbp
6612(5): mov 0x48(%rsp),%rcx
6617(3): test %r8b,%r8b
661a(6): jnz 0xffd(%rip)
6620(5): cmp $0x0,0x30(%rsp)
6625(3): mov %r12,%rdx
6628(5): mov %rcx,0x30(%rsp)
662d(5): mov 0x20(%rsp),%rsi
6632(3): mov %rbp,%rdi
6635(6): jz 0xfd3(%rip)
663b(5): call 0xfffff625(%rip)
6640(5): mov 0x30(%rsp),%rcx
6645(3): add %r12,%rbp
6648(5): jmp 0xfffffca0(%rip)
664d(4): cmp $0x45,%r11d
6651(6): jz 0xbe9(%rip)
6657(4): mov 0x14(%r13),%esi
665b(5): mov $0x51eb851f,%edx
6660(2): mov %esi,%eax
6662(2): imul %eax,%edx,%edx
6664(2): mov %esi,%eax
6666(3): sar $0x1f,%eax
6669(2): mov %edx,%ecx
666b(3): sar $0x5,%ecx
666e(2): sub %eax,%ecx
6670(2): mov %esi,%eax
6672(3): imul %ecx,$0x64,%ecx
6675(2): sub %ecx,%eax
6677(2): mov %eax,%ecx
6679(2): jns 0x10(%rip)
667b(2): neg %eax
667d(3): add $0x64,%ecx
6680(6): cmp $0xfffff893,%esi
6686(3): cmovng %eax,%ecx
6689(3): test %r15d,%r15d
668c(6): jz 0x62e(%rip)
6692(5): mov $0x1,%eax
6697(5): mov $0x0,0x38(%rsp)
669c(4): cmp $0x2b,%r15d
66a0(6): jz 0x773(%rip)
66a6(5): mov $0x0,0x40(%rsp)
66ab(5): mov $0x2,%edi
66b0(2): xor %esi,%esi
66b2(5): jmp 0xfffffb75(%rip)
66b7(5): movzx 0x30(%rsp),%eax
66bc(3): test %r8b,%r8b
66bf(4): cmovne %r8d,%eax
66c3(4): cmp $0x45,%r11d
66c7(6): jz 0xf6f(%rip)
66cd(3): mov %r9d,%esi
66d0(4): mov %al,0x30(%rsp)
66d4(3): xor %r8d,%r8d
66d7(5): jmp 0xfffff99e(%rip)
66dc(3): xor %r8d,%r8d
66df(4): mov 0x20(%r13),%ecx
66e3(2): test %ecx,%ecx
66e5(6): js 0xca9(%rip)
66eb(4): mov 0x28(%r13),%rcx
66ef(5): mov $0x1,0x38(%rsp)
66f4(2): test %ecx,%ecx
66f6(2): js 0x16(%rip)
66f8(5): mov $0x0,0x38(%rsp)
66fd(2): jnz 0xf(%rip)
66ff(5): mov 0x20(%rsp),%rax
6704(3): cmp $0x2d,(%rax)
6707(5): setz 0x38(%rsp)
670c(2): mov %ecx,%eax
670e(5): mov $0x91a2b3c5,%edx
6713(5): mov $0x88888889,%esi
6718(2): imul %eax,%edx,%edx
671a(2): mov %ecx,%eax
671c(3): sar $0x1f,%eax
671f(4): mov %eax,0x40(%rsp)
6723(4): lea 0x0(%rdx,%rcx,1),%r12d
6727(4): sar $0xb,%r12d
672b(3): sub %eax,%r12d
672e(2): mov %ecx,%eax
6730(2): imul %eax,%esi,%edx
6732(3): lea 0x0(%rdx,%rcx,1),%edi
6735(3): sar $0x5,%edi
6738(4): sub 0x40(%rsp),%edi
673c(2): mov %edi,%eax
673e(2): imul %eax,%esi,%edx
6740(2): mov %edi,%eax
6742(3): sar $0x1f,%eax
6745(3): lea 0x0(%rdx,%rdi,1),%esi
6748(3): sar $0x5,%esi
674b(2): sub %eax,%esi
674d(2): mov %edi,%eax
674f(3): imul %esi,$0x3c,%esi
6752(3): imul %edi,$0x3c,%edi
6755(2): sub %esi,%eax
6757(2): sub %edi,%ecx
6759(4): cmp $0x1,%r8
675d(2): mov %eax,%esi
675f(6): jz 0xe53(%rip)
6765(6): jb 0xf2b(%rip)
676b(4): cmp $0x2,%r8
676f(6): jz 0xdf6(%rip)
6775(4): cmp $0x3,%r8
6779(6): jnz 0xec6(%rip)
677f(2): test %ecx,%ecx
6781(6): jnz 0xde4(%rip)
6787(2): test %eax,%eax
6789(6): jnz 0xe29(%rip)
678f(5): movzx 0x38(%rsp),%eax
6794(3): mov %r12d,%ecx
6797(5): mov $0x1,0x40(%rsp)
679c(5): mov $0x3,%edi
67a1(3): xor $0x1,%eax
67a4(5): jmp 0xfffffa83(%rip)
67a9(7): nop 0x0(%rax)
67b0(4): cmp $0x4f,%r11d
67b4(4): mov 0x10(%r13),%eax
67b8(5): mov $0x1,%edi
67bd(6): jz 0xfffffa7f(%rip)
67c3(3): lea 0x0(%rax,%rax,4),%edx
67c6(5): mov $0x0,0x40(%rsp)
67cb(5): mov $0x0,0x38(%rsp)
67d0(2): xor %esi,%esi
67d2(3): lea 0x0(%rax,%rdx,2),%ecx
67d5(3): sar $0x5,%ecx
67d8(3): add $0x1,%ecx
67db(5): nop 0x0(%rax,%rax,1)
67e0(8): lea 0xb0(%rsp),%r9
67e8(6): mov $0xcccccccd,%r12d
67ee(4): lea 0x17(%r9),%r11
67f2(6): nop 0x0(%rax,%rax,1)
67f8(4): test $0x1,%sil
67fc(4): lea 0xffffffff(%r11),%r8
6800(2): jz 0x11(%rip)
6802(4): lea 0xfffffffe(%r11),%rax
6806(5): mov $0x3a,0xffffffff(%r11)
680b(3): mov %r8,%r11
680e(3): mov %rax,%r8
6811(2): mov %ecx,%eax
6813(2): sar $0x1,%esi
6815(3): mul %eax,%r12d,%edx
6818(3): shr $0x3,%edx
681b(3): lea 0x0(%rdx,%rdx,4),%eax
681e(2): add %eax,%eax
6820(2): sub %eax,%ecx
6822(2): mov %esi,%eax
6824(3): add $0x30,%ecx
6827(2): or %edx,%eax
6829(4): mov %cl,0xffffffff(%r11)
682d(2): mov %edx,%ecx
682f(3): mov %r8,%r11
6832(2): jnz 0xffffffc6(%rip)
6834(3): cmp %edi,%r10d
6837(4): cmovnl %r10d,%edi
683b(5): cmp $0x0,0x38(%rsp)
6840(4): mov %edi,0x48(%rsp)
6844(6): jnz 0x884(%rip)
684a(5): cmp $0x0,0x40(%rsp)
684f(6): jz 0x29a(%rip)
6855(4): cmp $0x2d,%r15d
6859(6): jz 0xb2a(%rip)
685f(5): mov $0x2b,0x38(%rsp)
6864(4): mov 0x48(%rsp),%eax
6868(4): lea 0x17(%r9),%rcx
686c(5): mov 0x8(%rsp),%rdx
6871(3): sub %r8,%rcx
6874(4): lea 0xffffffff(%rax),%r12d
6878(3): sub %r14,%rdx
687b(3): sub %ecx,%r12d
687e(3): test %r12d,%r12d
6881(6): jle 0xa4b(%rip)
6887(4): cmp $0x5f,%r15d
688b(6): jz 0x9bb(%rip)
6891(5): movsxd 0x48(%rsp),%rax
6896(3): cmp %rdx,%rax
6899(3): mov %rax,%rdi
689c(6): jnb 0xfffff4e0(%rip)
68a2(3): test %r10d,%r10d
68a5(5): mov $0x0,%eax
68aa(5): mov $0x1,%esi
68af(4): cmovns %r10d,%eax
68b3(2): cwde 
68b5(3): test %rax,%rax
68b8(4): cmovne %rax,%rsi
68bc(3): cmp %rdx,%rsi
68bf(6): jnb 0xfffff4bd(%rip)
68c5(3): add %rsi,%r14
68c8(3): test %rbp,%rbp
68cb(3): movsxd %r12d,%r9
68ce(3): mov %rbx,%r12
68d1(6): jz 0xa3(%rip)
68d7(2): test %edi,%edi
68d9(2): jnz 0x56(%rip)
68db(4): cmp $0x1,%rax
68df(2): jbe 0x50(%rip)
68e1(3): movsxd %r10d,%rdx
68e4(5): mov %r8,0x58(%rsp)
68e9(5): mov %r9,0x50(%rsp)
68ee(4): sub $0x1,%rdx
68f2(4): cmp $0x30,%r15d
68f6(5): mov %rcx,0x40(%rsp)
68fb(5): lea 0x0(%rbp,%rdx,1),%r12
6900(6): jz 0xdd1(%rip)
6906(4): cmp $0x2b,%r15d
690a(6): jz 0xdc7(%rip)
6910(3): mov %rbp,%rdi
6913(5): mov $0x20,%esi
6918(3): mov %r12,%rbp
691b(5): call 0xffffb605(%rip)
6920(5): mov 0x58(%rsp),%r8
6925(5): mov 0x50(%rsp),%r9
692a(5): mov 0x40(%rsp),%rcx
692f(5): movzx 0x38(%rsp),%eax
6934(4): add $0x1,%rbp
6938(3): mov %rbx,%r12
693b(3): mov %al,0xffffffff(%rbp)
693e(3): test %rbp,%rbp
6941(2): jz 0x33(%rip)
6943(3): mov %r9,%rdx
6946(3): mov %rbp,%rdi
6949(5): mov $0x30,%esi
694e(5): mov %r8,0x50(%rsp)
6953(5): mov %rcx,0x40(%rsp)
6958(5): mov %r9,0x38(%rsp)
695d(5): call 0xffffb5c3(%rip)
6962(5): mov 0x38(%rsp),%r9
6967(5): mov 0x50(%rsp),%r8
696c(5): mov 0x40(%rsp),%rcx
6971(3): add %r9,%rbp
6974(5): mov 0x8(%rsp),%rdx
6979(3): add %r9,%r14
697c(3): xor %r11d,%r11d
697f(3): xor %r10d,%r10d
6982(3): sub %r14,%rdx
6985(3): cmp %r11,%rcx
6988(3): mov %r11,%rbx
698b(4): cmovnb %rcx,%rbx
698f(3): cmp %rdx,%rbx
6992(6): jnb 0xfffff3ea(%rip)
6998(3): test %rbp,%rbp
699b(6): jz 0xfffff813(%rip)
69a1(4): mov 0x48(%rsp),%esi
69a5(2): test %esi,%esi
69a7(2): jnz 0x51(%rip)
69a9(3): cmp %r11,%rcx
69ac(2): jnb 0x4c(%rip)
69ae(3): movsxd %r10d,%rdx
69b1(5): mov %r8,0x48(%rsp)
69b6(5): mov %rcx,0x40(%rsp)
69bb(3): sub %rcx,%rdx
69be(4): cmp $0x30,%r15d
69c2(5): lea 0x0(%rbp,%rdx,1),%rax
69c7(5): mov %rax,0x38(%rsp)
69cc(6): jz 0x83e(%rip)
69d2(4): cmp $0x2b,%r15d
69d6(6): jz 0x834(%rip)
69dc(3): mov %rbp,%rdi
69df(5): mov $0x20,%esi
69e4(5): call 0xffffb53c(%rip)
69e9(5): mov 0x38(%rsp),%rbp
69ee(5): mov 0x48(%rsp),%r8
69f3(5): mov 0x40(%rsp),%rcx
69f8(5): cmp $0x0,0x30(%rsp)
69fd(3): mov %rcx,%rdx
6a00(5): mov %rcx,0x30(%rsp)
6a05(3): mov %r8,%rsi
6a08(3): mov %rbp,%rdi
6a0b(6): jnz 0xfffff796(%rip)
6a11(5): call 0xffffb5cf(%rip)
6a16(5): mov 0x30(%rsp),%rcx
6a1b(5): jmp 0xfffff790(%rip)
6a20(6): movdqu 0x0(%r13),%xmm0
6a26(5): lea 0x70(%rsp),%rsi
6a2b(4): mov 0x30(%r13),%rax
6a2f(5): mov 0x10(%rsp),%rdi
6a34(5): movaps %xmm0,0x70(%rsp)
6a39(5): mov %r10d,0x38(%rsp)
6a3e(6): movdqu 0x10(%r13),%xmm0
6a44(8): mov %rax,0xa0(%rsp)
6a4c(8): movaps %xmm0,0x80(%rsp)
6a54(6): movdqu 0x20(%r13),%xmm0
6a5a(8): movaps %xmm0,0x90(%rsp)
6a62(5): call 0x460e(%rip)
6a67(8): lea 0xb0(%rsp),%r9
6a6f(3): mov %rax,%rsi
6a72(3): mov %rax,%rcx
6a75(a): mov $0x7378697629483820647,%r11
6a7f(5): mov $0x30,%edi
6a84(5): mov 0x38(%rsp),%r10d
6a89(4): lea 0x17(%r9),%r8
6a8d(3): nop (%rax)
6a90(3): mov %rcx,%rax
6a93(3): imul %rax,%r11,%rdx
6a96(3): mov %rcx,%rax
6a99(4): sar $0x3f,%rax
6a9d(4): sar $0x2,%rdx
6aa1(3): sub %rax,%rdx
6aa4(3): mov %rdx,%rax
6aa7(4): lea 0x0(%rdx,%rdx,4),%rdx
6aab(3): add %rdx,%rdx
6aae(3): sub %rdx,%rcx
6ab1(3): mov %rcx,%rdx
6ab4(3): mov %rax,%rcx
6ab7(2): mov %edi,%eax
6ab9(2): sub %edx,%eax
6abb(3): add $0x30,%edx
6abe(3): test %rsi,%rsi
6ac1(3): cmovs %eax,%edx
6ac4(4): sub $0x1,%r8
6ac8(3): test %rcx,%rcx
6acb(3): mov %dl,(%r8)
6ace(2): jnz 0xffffffc2(%rip)
6ad0(3): test %r10d,%r10d
6ad3(5): mov $0x1,%edi
6ad8(4): cmovnl %r10d,%edi
6adc(3): test %rsi,%rsi
6adf(4): mov %edi,0x48(%rsp)
6ae3(6): js 0x5e5(%rip)
6ae9(5): mov 0x8(%rsp),%rdx
6aee(4): lea 0x17(%r9),%rcx
6af2(3): sub %r8,%rcx
6af5(3): sub %r14,%rdx
6af8(4): cmp $0x2d,%r15d
6afc(2): jz 0x13(%rip)
6afe(5): mov 0x48(%rsp),%r12d
6b03(3): sub %ecx,%r12d
6b06(3): test %r12d,%r12d
6b09(6): jnle 0x990(%rip)
6b0f(3): test %r10d,%r10d
6b12(6): mov $0x0,%r11d
6b18(3): mov %rbx,%r12
6b1b(4): cmovns %r10d,%r11d
6b1f(3): movsxd %r11d,%r11
6b22(5): jmp 0xfffffe63(%rip)
6b27(4): movzx 0x1(%rbx),%eax
6b2b(4): lea 0x1(%rbx),%rdx
6b2f(2): cmp $0x3a,%al
6b31(6): jz 0xb19(%rip)
6b37(6): mov $0x1,%r8d
6b3d(2): cmp $0x7a,%al
6b3f(6): jnz 0xfffff3c1(%rip)
6b45(3): mov %rdx,%rbx
6b48(5): jmp 0xfffffb97(%rip)
6b4d(4): cmp $0x45,%r11d
6b51(6): jz 0xfffff3af(%rip)
6b57(4): mov 0x14(%r13),%edi
6b5b(4): mov 0x1c(%r13),%r8d
6b5f(5): mov $0x92492493,%edx
6b64(2): mov %edi,%eax
6b66(3): mov %r8d,%ecx
6b69(3): sar $0x1f,%eax
6b6c(5): and $0x190,%eax
6b71(5): lea 0xffffff9c(%rdi,%rax,1),%r12d
6b76(4): mov 0x18(%r13),%eax
6b7a(2): sub %eax,%ecx
6b7c(4): mov %eax,0x38(%rsp)
6b80(6): add $0x17e,%ecx
6b86(2): mov %ecx,%eax
6b88(2): imul %eax,%edx,%edx
6b8a(3): lea 0x0(%rdx,%rcx,1),%eax
6b8d(2): mov %ecx,%edx
6b8f(3): sar $0x1f,%edx
6b92(3): sar $0x2,%eax
6b95(2): sub %edx,%eax
6b97(7): lea 0x0(,%rax,8),%edx
6b9e(2): sub %eax,%edx
6ba0(2): mov %edx,%eax
6ba2(3): mov %r8d,%edx
6ba5(2): sub %ecx,%edx
6ba7(4): lea 0x3(%rdx,%rax,1),%eax
6bab(2): test %eax,%eax
6bad(4): mov %eax,0x40(%rsp)
6bb1(6): js 0x927(%rip)
6bb7(4): test $0x3,%r12b
6bbb(5): mov $0x16d,%eax
6bc0(2): jnz 0x47(%rip)
6bc2(5): mov $0x51eb851f,%ecx
6bc7(3): mov %r12d,%eax
6bca(2): imul %eax,%ecx,%edx
6bcc(3): mov %r12d,%eax
6bcf(3): sar $0x1f,%eax
6bd2(4): mov %eax,0x48(%rsp)
6bd6(2): mov %edx,%ecx
6bd8(3): sar $0x5,%edx
6bdb(2): sub %eax,%edx
6bdd(5): mov $0x16e,%eax
6be2(3): imul %edx,$0x64,%edx
6be5(3): cmp %edx,%r12d
6be8(2): jnz 0x1f(%rip)
6bea(3): sar $0x7,%ecx
6bed(2): mov %ecx,%eax
6bef(4): sub 0x48(%rsp),%eax
6bf3(6): imul %eax,$0x190,%eax
6bf9(3): cmp %eax,%r12d
6bfc(3): setz %al
6bff(3): movzx %al,%eax
6c02(5): add $0x16d,%eax
6c07(3): sub %eax,%r8d
6c0a(5): mov $0x92492493,%edx
6c0f(3): mov %r8d,%ecx
6c12(4): sub 0x38(%rsp),%ecx
6c16(6): add $0x17e,%ecx
6c1c(2): mov %ecx,%eax
6c1e(3): sub %ecx,%r8d
6c21(2): imul %eax,%edx,%edx
6c23(3): lea 0x0(%rdx,%rcx,1),%eax
6c26(2): mov %ecx,%edx
6c28(3): sar $0x1f,%edx
6c2b(3): sar $0x2,%eax
6c2e(2): sub %edx,%eax
6c30(7): lea 0x0(,%rax,8),%edx
6c37(2): sub %eax,%edx
6c39(5): lea 0x3(%r8,%rdx,1),%ecx
6c3e(6): mov $0x1,%r8d
6c44(2): test %ecx,%ecx
6c46(2): jns 0x9(%rip)
6c48(4): mov 0x40(%rsp),%ecx
6c4c(3): xor %r8d,%r8d
6c4f(4): cmp $0x47,%sil
6c53(6): jz 0x743(%rip)
6c59(4): cmp $0x67,%sil
6c5d(6): jnz 0x932(%rip)
6c63(5): mov $0x51eb851f,%ecx
6c68(2): mov %edi,%eax
6c6a(2): mov %edi,%esi
6c6c(2): imul %eax,%ecx,%edx
6c6e(2): mov %edx,%eax
6c70(2): mov %edi,%edx
6c72(3): sar $0x1f,%edx
6c75(3): sar $0x5,%eax
6c78(2): sub %edx,%eax
6c7a(3): imul %eax,$0x64,%eax
6c7d(2): sub %eax,%esi
6c7f(3): add %r8d,%esi
6c82(2): mov %esi,%eax
6c84(2): imul %eax,%ecx,%edx
6c86(2): mov %esi,%eax
6c88(3): sar $0x1f,%eax
6c8b(2): mov %edx,%ecx
6c8d(3): sar $0x5,%ecx
6c90(2): sub %eax,%ecx
6c92(3): imul %ecx,$0x64,%ecx
6c95(2): sub %ecx,%esi
6c97(2): mov %esi,%ecx
6c99(6): jns 0xfffff9f0(%rip)
6c9f(5): mov $0xfffff894,%eax
6ca4(3): sub %r8d,%eax
6ca7(2): cmp %eax,%edi
6ca9(6): jnl 0xaa1(%rip)
6caf(2): neg %ecx
6cb1(3): test %r15d,%r15d
6cb4(6): jnz 0xfffff9de(%rip)
6cba(5): mov 0x2c(%rsp),%r15d
6cbf(5): mov $0x1,%eax
6cc4(4): cmp $0x2b,%r15d
6cc8(6): jz 0xa62(%rip)
6cce(5): mov $0x0,0x40(%rsp)
6cd3(5): mov $0x0,0x38(%rsp)
6cd8(5): mov $0x2,%edi
6cdd(2): xor %esi,%esi
6cdf(5): jmp 0xfffff548(%rip)
6ce4(4): cmp $0x45,%r11d
6ce8(6): jz 0xfffff218(%rip)
6cee(4): mov 0xc(%r13),%ecx
6cf2(5): mov $0x2,%edi
6cf7(5): jmp 0xfffff519(%rip)
6cfc(4): mov 0x18(%r13),%eax
6d00(5): mov $0x92492493,%edx
6d05(5): mov $0x1,%edi
6d0a(3): lea 0x6(%rax),%ecx
6d0d(2): mov %ecx,%eax
6d0f(2): imul %eax,%edx,%edx
6d11(3): lea 0x0(%rdx,%rcx,1),%eax
6d14(2): mov %ecx,%edx
6d16(3): sar $0x1f,%edx
6d19(3): sar $0x2,%eax
6d1c(2): sub %edx,%eax
6d1e(7): lea 0x0(,%rax,8),%edx
6d25(2): sub %eax,%edx
6d27(2): sub %edx,%ecx
6d29(3): add $0x1,%ecx
6d2c(5): jmp 0xfffff4e4(%rip)
6d31(4): cmp $0x45,%r11d
6d35(6): jz 0xfffff1cb(%rip)
6d3b(4): mov 0x18(%r13),%ecx
6d3f(5): mov $0x1,%edi
6d44(5): jmp 0xfffff4cc(%rip)
6d49(4): cmp $0x45,%r11d
6d4d(6): jz 0xfffff1b3(%rip)
6d53(4): mov 0x18(%r13),%eax
6d57(5): mov $0x92492493,%ecx
6d5c(3): lea 0x6(%rax),%esi
6d5f(2): mov %esi,%eax
6d61(2): imul %eax,%ecx,%edx
6d63(3): lea 0x0(%rdx,%rsi,1),%eax
6d66(2): mov %esi,%edx
6d68(3): sar $0x1f,%edx
6d6b(3): sar $0x2,%eax
6d6e(2): sub %edx,%eax
6d70(7): lea 0x0(,%rax,8),%edx
6d77(2): sub %eax,%edx
6d79(2): mov %edx,%eax
6d7b(4): mov 0x1c(%r13),%edx
6d7f(2): sub %esi,%eax
6d81(4): lea 0x7(%rax,%rdx,1),%esi
6d85(2): mov %esi,%eax
6d87(2): imul %eax,%ecx,%edx
6d89(5): jmp 0xfffff769(%rip)
6d8e(4): cmp $0x45,%r11d
6d92(6): jz 0xfffff16e(%rip)
6d98(3): test %r8b,%r8b
6d9b(6): jz 0xfffff2da(%rip)
6da1(5): mov %r8b,0x30(%rsp)
6da6(5): jmp 0xfffff2cc(%rip)
6dab(4): cmp $0x45,%r11d
6daf(6): jz 0x48b(%rip)
6db5(4): mov 0x14(%r13),%esi
6db9(5): mov $0x51eb851f,%edx
6dbe(2): mov %esi,%eax
6dc0(2): imul %eax,%edx,%edx
6dc2(2): mov %edx,%eax
6dc4(2): mov %esi,%edx
6dc6(3): sar $0x1f,%edx
6dc9(3): sar $0x5,%eax
6dcc(2): sub %edx,%eax
6dce(2): mov %esi,%edx
6dd0(3): lea 0x13(%rax),%ecx
6dd3(3): imul %eax,$0x64,%eax
6dd6(2): sub %eax,%edx
6dd8(2): mov %edx,%eax
6dda(3): shr $0x1f,%eax
6ddd(2): test %ecx,%ecx
6ddf(3): setnle %dl
6de2(2): and %edx,%eax
6de4(6): cmp $0xfffff894,%esi
6dea(5): setl 0x38(%rsp)
6def(2): sub %eax,%ecx
6df1(6): cmp $0xfffff894,%esi
6df7(3): setnl %al
6dfa(3): test %r15d,%r15d
6dfd(6): jnz 0xfffff89f(%rip)
6e03(5): cmp $0x2b,0x2c(%rsp)
6e08(5): mov 0x2c(%rsp),%r15d
6e0d(6): jnz 0xfffff899(%rip)
6e13(5): mov $0x2,%edi
6e18(5): mov $0x63,%edx
6e1d(2): cmp %ecx,%edx
6e1f(5): mov $0x1,0x40(%rsp)
6e24(6): mov $0x2b,%r15d
6e2a(6): jb 0xfffff72f(%rip)
6e30(3): cmp %edi,%r10d
6e33(6): mov $0x2b,%r15d
6e39(5): setnle 0x40(%rsp)
6e3e(2): xor %esi,%esi
6e40(5): jmp 0xfffff3e7(%rip)
6e45(3): test %r11d,%r11d
6e48(6): jnz 0xfffff0b8(%rip)
6e4e(7): lea 0x85b2(%rip),%rax
6e55(8): mov $0xffffffff,0x38(%rsp)
6e5d(5): mov %rax,0x40(%rsp)
6e62(5): jmp 0xfffff4c0(%rip)
6e67(3): test %r11d,%r11d
6e6a(6): jnz 0xfffff096(%rip)
6e70(3): test %r15d,%r15d
6e73(6): jnz 0x7fa(%rip)
6e79(3): test %r10d,%r10d
6e7c(6): jns 0x7f1(%rip)
6e82(7): lea 0x8575(%rip),%rax
6e89(8): mov $0x4,0x38(%rsp)
6e91(6): mov $0x2b,%r15d
6e97(5): mov %rax,0x40(%rsp)
6e9c(5): jmp 0xfffff486(%rip)
6ea1(4): movzx 0xffffffff(%rbx),%ecx
6ea5(4): lea 0xffffffff(%rbx),%r9
6ea9(5): mov 0x8(%rsp),%rdx
6eae(5): mov $0x0,%eax
6eb3(3): sub %r14,%rdx
6eb6(3): test %r10d,%r10d
6eb9(4): cmovns %r10d,%eax
6ebd(3): cmp $0x25,%cl
6ec0(2): cwde 
6ec2(6): jnz 0xfffff039(%rip)
6ec8(3): test %rax,%rax
6ecb(5): mov $0x1,%ecx
6ed0(3): mov %r9,%r12
6ed3(4): cmovne %rax,%rcx
6ed7(6): mov $0x1,%r8d
6edd(5): jmp 0xfffff064(%rip)
6ee2(4): cmp $0x45,%r11d
6ee6(6): jz 0xfffff01a(%rip)
6eec(4): mov 0x8(%r13),%ecx
6ef0(5): mov $0x2,%edi
6ef5(5): jmp 0xfffff31b(%rip)
6efa(4): cmp $0x45,%r11d
6efe(6): jz 0xfffff002(%rip)
6f04(4): mov 0x4(%r13),%ecx
6f08(5): mov $0x2,%edi
6f0d(5): jmp 0xfffff303(%rip)
6f12(4): cmp $0x45,%r11d
6f16(6): jz 0xffffefea(%rip)
6f1c(4): cmp $0xff,%r10d
6f20(6): jz 0x551(%rip)
6f26(4): cmp $0x8,%r10d
6f2a(6): jnle 0x80f(%rip)
6f30(7): mov 0x518(%rsp),%ecx
6f37(3): mov %r10d,%esi
6f3a(5): mov $0x66666667,%edi
6f3f(1): nop 
6f40(2): mov %ecx,%eax
6f42(3): add $0x1,%esi
6f45(3): sar $0x1f,%ecx
6f48(2): imul %eax,%edi,%edx
6f4a(3): sar $0x2,%edx
6f4d(2): sub %ecx,%edx
6f4f(3): cmp $0x9,%esi
6f52(2): mov %edx,%ecx
6f54(2): jnz 0xffffffec(%rip)
6f56(3): mov %r10d,%edi
6f59(5): jmp 0xfffff2b7(%rip)
6f5e(4): cmp $0x45,%r11d
6f62(6): jz 0xffffef9e(%rip)
6f68(4): mov 0x68(%rsp),%ecx
6f6c(5): mov $0x2,%edi
6f71(5): jmp 0xfffff29f(%rip)
6f76(4): cmp $0x45,%r11d
6f7a(6): jz 0xffffef86(%rip)
6f80(4): mov 0x68(%rsp),%ecx
6f84(3): test %r15d,%r15d
6f87(5): mov $0x2,%edi
6f8c(6): jnz 0xfffff284(%rip)
6f92(6): mov $0x5f,%r15d
6f98(5): jmp 0xfffff278(%rip)
6f9d(4): cmp $0x45,%r11d
6fa1(6): jz 0xffffef5f(%rip)
6fa7(4): mov 0x10(%r13),%eax
6fab(5): mov $0x0,0x40(%rsp)
6fb0(5): mov $0x2,%edi
6fb5(3): cmp $0xff,%eax
6fb8(3): lea 0x1(%rax),%ecx
6fbb(5): setl 0x38(%rsp)
6fc0(3): cmp $0xff,%eax
6fc3(3): setnl %al
6fc6(2): xor %esi,%esi
6fc8(5): jmp 0xfffff25f(%rip)
6fcd(3): test %r10d,%r10d
6fd0(5): mov $0x0,%ecx
6fd5(5): mov $0x1,%eax
6fda(4): cmovns %r10d,%ecx
6fde(3): movsxd %ecx,%rcx
6fe1(3): test %rcx,%rcx
6fe4(4): cmove %rax,%rcx
6fe8(5): mov 0x8(%rsp),%rax
6fed(3): sub %r14,%rax
6ff0(3): cmp %rcx,%rax
6ff3(6): jbe 0xffffed89(%rip)
6ff9(3): test %rbp,%rbp
6ffc(6): jz 0xfffff2ec(%rip)
7002(4): cmp $0x1,%r10d
7006(2): jle 0x3c(%rip)
7008(3): movsxd %r10d,%rdx
700b(5): mov %rcx,0x30(%rsp)
7010(4): sub $0x1,%rdx
7014(4): cmp $0x30,%r15d
7018(5): lea 0x0(%rbp,%rdx,1),%r12
701d(6): jz 0x5d1(%rip)
7023(4): cmp $0x2b,%r15d
7027(6): jz 0x5c7(%rip)
702d(3): mov %rbp,%rdi
7030(5): mov $0x20,%esi
7035(3): mov %r12,%rbp
7038(5): call 0xffffaee8(%rip)
703d(5): mov 0x30(%rsp),%rcx
7042(4): mov $0xa,0x0(%rbp)
7046(4): add $0x1,%rbp
704a(5): jmp 0xfffff29e(%rip)
704f(2): xor %eax,%eax
7051(5): jmp 0xfffff2a7(%rip)
7056(4): cmp $0x45,%r11d
705a(6): jz 0xffffeea6(%rip)
7060(4): mov 0x1c(%r13),%eax
7064(5): mov $0x0,0x40(%rsp)
7069(5): mov $0x3,%edi
706e(3): cmp $0xff,%eax
7071(3): lea 0x1(%rax),%ecx
7074(5): setl 0x38(%rsp)
7079(3): cmp $0xff,%eax
707c(3): setnl %al
707f(2): xor %esi,%esi
7081(5): jmp 0xfffff1a6(%rip)
7086(4): cmp $0x45,%r11d
708a(6): jz 0xffffee76(%rip)
7090(4): mov 0x8(%r13),%ecx
7094(5): jmp 0xfffffef0(%rip)
7099(4): cmp $0x45,%r11d
709d(6): jz 0xffffee63(%rip)
70a3(4): mov 0xc(%r13),%ecx
70a7(5): jmp 0xfffffedd(%rip)
70ac(4): nop 0x0(%rax)
70b0(2): mov %ecx,%eax
70b2(2): neg %eax
70b4(5): cmp $0x0,0x38(%rsp)
70b9(3): cmovne %eax,%ecx
70bc(5): jmp 0xfffff724(%rip)
70c1(7): nop 0x0(%rax)
70c8(4): cmp $0x2d,%r15d
70cc(5): mov $0x2d,0x38(%rsp)
70d1(6): jnz 0xfffff793(%rip)
70d7(3): test %r10d,%r10d
70da(6): mov $0x0,%r11d
70e0(5): mov 0x8(%rsp),%rax
70e5(4): cmovns %r10d,%r11d
70e9(6): mov $0x1,%r12d
70ef(3): movsxd %r11d,%r11
70f2(3): test %r11,%r11
70f5(4): cmovne %r11,%r12
70f9(3): sub %r14,%rax
70fc(3): cmp %r12,%rax
70ff(6): jbe 0xffffec7d(%rip)
7105(3): test %rbp,%rbp
7108(2): jz 0x64(%rip)
710a(4): mov 0x48(%rsp),%eax
710e(2): test %eax,%eax
7110(2): jnz 0x54(%rip)
7112(4): cmp $0x1,%r11
7116(2): jbe 0x4e(%rip)
7118(3): movsxd %r10d,%rax
711b(3): mov %rbp,%rdi
711e(5): mov $0x20,%esi
7123(4): lea 0xffffffff(%rax),%rcx
7127(5): mov %r9,0x60(%rsp)
712c(5): mov %r8,0x58(%rsp)
7131(5): mov %r11,0x50(%rsp)
7136(5): mov %r10d,0x40(%rsp)
713b(3): mov %rcx,%rdx
713e(5): mov %rcx,0x38(%rsp)
7143(5): call 0xffffaddd(%rip)
7148(5): mov 0x38(%rsp),%rcx
714d(5): mov 0x60(%rsp),%r9
7152(5): mov 0x58(%rsp),%r8
7157(5): mov 0x50(%rsp),%r11
715c(5): mov 0x40(%rsp),%r10d
7161(3): add %rcx,%rbp
7164(4): mov %r15b,0x0(%rbp)
7168(4): add $0x1,%rbp
716c(5): mov 0x8(%rsp),%rdx
7171(4): lea 0x17(%r9),%rcx
7175(3): add %r12,%r14
7178(6): mov $0x2d,%r15d
717e(3): mov %rbx,%r12
7181(3): sub %r8,%rcx
7184(3): sub %r14,%rdx
7187(5): jmp 0xfffff7fe(%rip)
718c(4): nop 0x0(%rax)
7190(5): call 0xffffae50(%rip)
7195(5): mov 0x38(%rsp),%rcx
719a(5): mov 0x30(%rsp),%r8
719f(5): jmp 0xffffee33(%rip)
71a4(4): nop 0x0(%rax)
71a8(3): mov %rbp,%rdi
71ab(5): mov %rcx,0x30(%rsp)
71b0(5): call 0xffffea60(%rip)
71b5(5): mov 0x30(%rsp),%rcx
71ba(5): jmp 0xffffeff1(%rip)
71bf(3): mov %rbp,%rdi
71c2(5): mov $0x30,%esi
71c7(5): call 0xffffad59(%rip)
71cc(5): mov 0x38(%rsp),%rbp
71d1(6): movzx 0x40(%rsp),%r8d
71d7(5): mov 0x48(%rsp),%rcx
71dc(5): mov 0x50(%rsp),%r9
71e1(5): jmp 0xffffef9d(%rip)
71e6(3): mov %rbp,%rdi
71e9(5): mov $0x30,%esi
71ee(3): mov %rbx,%rbp
71f1(5): call 0xffffad2f(%rip)
71f6(5): mov 0x38(%rsp),%r9
71fb(5): mov 0x40(%rsp),%rcx
7200(5): mov 0x48(%rsp),%r8
7205(5): jmp 0xffffeda0(%rip)
720a(3): mov %rbp,%rdi
720d(5): mov $0x30,%esi
7212(5): call 0xffffad0e(%rip)
7217(5): mov 0x38(%rsp),%rbp
721c(5): mov 0x40(%rsp),%rcx
7221(5): mov 0x48(%rsp),%r8
7226(5): jmp 0xfffff7d2(%rip)
722b(5): mov $0x70,%esi
7230(5): mov $0x0,0x30(%rsp)
7235(5): jmp 0xffffee40(%rip)
723a(2): xor %edi,%edi
723c(5): jmp 0xfffff000(%rip)
7241(5): mov $0x0,0x38(%rsp)
7246(3): movsxd %r12d,%r15
7249(3): cmp %rdx,%r15
724c(6): jnb 0xffffeb30(%rip)
7252(3): test %rbp,%rbp
7255(2): jz 0x33(%rip)
7257(3): mov %rbp,%rdi
725a(3): mov %r15,%rdx
725d(5): mov $0x20,%esi
7262(5): mov %r10d,0x58(%rsp)
7267(5): mov %r9,0x50(%rsp)
726c(3): add %r15,%rbp
726f(5): mov %r8,0x40(%rsp)
7274(5): call 0xffffacac(%rip)
7279(5): mov 0x58(%rsp),%r10d
727e(5): mov 0x50(%rsp),%r9
7283(5): mov 0x40(%rsp),%r8
7288(5): mov 0x8(%rsp),%rdx
728d(3): mov %r10d,%eax
7290(3): add %r15,%r14
7293(3): sub %r12d,%eax
7296(3): cmp %r12d,%r10d
7299(6): mov $0x0,%r10d
729f(4): cmovnl %eax,%r10d
72a3(3): sub %r14,%rdx
72a6(5): cmp $0x0,0x38(%rsp)
72ab(6): jnz 0x127(%rip)
72b1(4): add $0x17,%r9
72b5(3): movsxd %r10d,%r11
72b8(3): mov %rbx,%r12
72bb(3): mov %r9,%rcx
72be(6): mov $0x5f,%r15d
72c4(3): sub %r8,%rcx
72c7(5): jmp 0xfffff6be(%rip)
72cc(3): test %r10d,%r10d
72cf(6): mov $0x0,%r11d
72d5(6): mov $0x1,%r12d
72db(4): cmovns %r10d,%r11d
72df(3): movsxd %r11d,%r11
72e2(3): test %r11,%r11
72e5(4): cmovne %r11,%r12
72e9(3): cmp %rdx,%r12
72ec(6): jnb 0xffffea90(%rip)
72f2(3): test %rbp,%rbp
72f5(2): jz 0x7b(%rip)
72f7(4): mov 0x48(%rsp),%edi
72fb(2): test %edi,%edi
72fd(2): jnz 0x67(%rip)
72ff(4): cmp $0x1,%r11
7303(2): jbe 0x61(%rip)
7305(3): movsxd %r10d,%rdx
7308(5): mov %r10d,0x6c(%rsp)
730d(5): mov %r8,0x60(%rsp)
7312(4): sub $0x1,%rdx
7316(4): cmp $0x30,%r15d
731a(5): mov %rcx,0x58(%rsp)
731f(5): lea 0x0(%rbp,%rdx,1),%rax
7324(5): mov %r11,0x50(%rsp)
7329(5): mov %rax,0x40(%rsp)
732e(6): jz 0x3d1(%rip)
7334(4): cmp $0x2b,%r15d
7338(6): jz 0x3c7(%rip)
733e(3): mov %rbp,%rdi
7341(5): mov $0x20,%esi
7346(5): call 0xffffabda(%rip)
734b(5): mov 0x40(%rsp),%rbp
7350(5): mov 0x6c(%rsp),%r10d
7355(5): mov 0x60(%rsp),%r8
735a(5): mov 0x58(%rsp),%rcx
735f(5): mov 0x50(%rsp),%r11
7364(5): movzx 0x38(%rsp),%eax
7369(4): add $0x1,%rbp
736d(3): mov %al,0xffffffff(%rbp)
7370(5): mov 0x8(%rsp),%rdx
7375(3): add %r12,%r14
7378(3): mov %rbx,%r12
737b(3): sub %r14,%rdx
737e(5): jmp 0xfffff607(%rip)
7383(6): mov $0x2b,%r15d
7389(5): jmp 0xfffffd4e(%rip)
738e(3): mov %rbx,%r12
7391(5): jmp 0xffffea51(%rip)
7396(5): mov $0xfffff894,%eax
739b(8): lea 0x76c(%rdi,%r8,1),%ecx
73a3(3): sub %r8d,%eax
73a6(2): cmp %eax,%edi
73a8(5): setl 0x38(%rsp)
73ad(3): setnl %al
73b0(3): test %r15d,%r15d
73b3(6): jz 0xfffff18d(%rip)
73b9(4): cmp $0x2b,%r15d
73bd(6): jnz 0xfffff192(%rip)
73c3(5): mov $0x4,%edi
73c8(5): mov $0x270f,%edx
73cd(5): jmp 0xfffffa50(%rip)
73d2(3): movsxd %r10d,%r15
73d5(6): mov $0x1,%r12d
73db(3): test %r15,%r15
73de(4): cmovne %r15,%r12
73e2(3): cmp %rdx,%r12
73e5(6): jnb 0xffffe997(%rip)
73eb(3): test %rbp,%rbp
73ee(2): jz 0x5d(%rip)
73f0(5): mov 0x48(%rsp),%r11d
73f5(3): test %r11d,%r11d
73f8(2): jnz 0x47(%rip)
73fa(4): cmp $0x1,%r15
73fe(2): jbe 0x41(%rip)
7400(4): lea 0xffffffff(%r15),%rcx
7404(3): mov %rbp,%rdi
7407(5): mov $0x20,%esi
740c(5): mov %r10d,0x60(%rsp)
7411(5): mov %r9,0x58(%rsp)
7416(3): mov %rcx,%rdx
7419(5): mov %r8,0x50(%rsp)
741e(5): mov %rcx,0x40(%rsp)
7423(5): call 0xffffaafd(%rip)
7428(5): mov 0x40(%rsp),%rcx
742d(5): mov 0x60(%rsp),%r10d
7432(5): mov 0x58(%rsp),%r9
7437(5): mov 0x50(%rsp),%r8
743c(3): add %rcx,%rbp
743f(5): movzx 0x38(%rsp),%eax
7444(4): add $0x1,%rbp
7448(3): mov %al,0xffffffff(%rbp)
744b(5): mov 0x8(%rsp),%rdx
7450(4): add $0x17,%r9
7454(3): add %r12,%r14
7457(3): mov %r9,%rcx
745a(3): mov %r15,%r11
745d(3): mov %rbx,%r12
7460(3): sub %r8,%rcx
7463(6): mov $0x5f,%r15d
7469(3): sub %r14,%rdx
746c(5): jmp 0xfffff519(%rip)
7471(7): mov 0x518(%rsp),%ecx
7478(5): mov $0x9,%edi
747d(6): mov $0x9,%r10d
7483(5): jmp 0xffffed8d(%rip)
7488(3): mov %rbx,%r12
748b(3): mov %rbx,%r9
748e(6): mov $0x1,%r8d
7494(5): jmp 0xffffeaad(%rip)
7499(4): cmp $0x5f,%r15d
749d(6): jz 0xfffffda4(%rip)
74a3(5): movsxd 0x48(%rsp),%rax
74a8(3): cmp %rdx,%rax
74ab(6): jnb 0xffffe8d1(%rip)
74b1(3): movsxd %r12d,%r9
74b4(3): mov %rbx,%r12
74b7(5): jmp 0xfffff487(%rip)
74bc(3): mov %rbp,%rdi
74bf(5): mov $0x30,%esi
74c4(5): call 0xffffaa5c(%rip)
74c9(5): mov 0x50(%rsp),%rbp
74ce(5): mov 0x58(%rsp),%r11
74d3(5): jmp 0xffffef13(%rip)
74d8(4): sub $0x1,%r12d
74dc(5): mov $0x16d,%edx
74e1(4): test $0x3,%r12b
74e5(2): jnz 0x3e(%rip)
74e7(3): mov %r12d,%eax
74ea(5): mov $0x51eb851f,%edx
74ef(2): imul %eax,%edx,%edx
74f1(2): mov %edx,%eax
74f3(3): mov %r12d,%edx
74f6(3): sar $0x1f,%edx
74f9(3): sar $0x5,%eax
74fc(2): sub %edx,%eax
74fe(5): mov $0x16e,%edx
7503(3): imul %eax,$0x64,%eax
7506(3): cmp %eax,%r12d
7509(2): jnz 0x1a(%rip)
750b(3): mov %r12d,%eax
750e(5): mov $0x190,%ecx
7513(1): cdq %eax
7514(2): idiv %ecx,%eax
7516(3): cmp $0x1,%edx
7519(2): sbb %edx,%edx
751b(2): not %edx
751d(6): add $0x16e,%edx
7523(3): add %edx,%r8d
7526(5): mov $0x92492493,%edx
752b(3): mov %r8d,%ecx
752e(4): sub 0x38(%rsp),%ecx
7532(6): add $0x17e,%ecx
7538(2): mov %ecx,%eax
753a(3): sub %ecx,%r8d
753d(2): imul %eax,%edx,%edx
753f(3): lea 0x0(%rdx,%rcx,1),%eax
7542(2): mov %ecx,%edx
7544(3): sar $0x1f,%edx
7547(3): sar $0x2,%eax
754a(2): sub %edx,%eax
754c(7): lea 0x0(,%rax,8),%edx
7553(2): sub %eax,%edx
7555(5): lea 0x3(%r8,%rdx,1),%ecx
755a(6): mov $0xffffffff,%r8d
7560(5): jmp 0xfffff6ef(%rip)
7565(3): imul %esi,$0x64,%esi
7568(5): mov $0x1,0x40(%rsp)
756d(5): mov $0x9,%edi
7572(7): imul %r12d,$0x2710,%eax
7579(2): add %esi,%eax
757b(5): mov $0x14,%esi
7580(2): add %eax,%ecx
7582(5): movzx 0x38(%rsp),%eax
7587(3): xor $0x1,%eax
758a(5): jmp 0xffffec9d(%rip)
758f(2): mov %ecx,%eax
7591(5): mov $0x92492493,%edx
7596(5): mov $0x2,%edi
759b(2): imul %eax,%edx,%edx
759d(3): lea 0x0(%rdx,%rcx,1),%eax
75a0(3): sar $0x1f,%ecx
75a3(3): sar $0x2,%eax
75a6(2): sub %ecx,%eax
75a8(2): mov %eax,%ecx
75aa(3): add $0x1,%ecx
75ad(5): jmp 0xffffec63(%rip)
75b2(5): movzx 0x38(%rsp),%eax
75b7(5): mov $0x1,0x40(%rsp)
75bc(5): mov $0x6,%edi
75c1(4): imul %r12d,$0x64,%ecx
75c5(3): xor $0x1,%eax
75c8(2): add %esi,%ecx
75ca(5): mov $0x4,%esi
75cf(5): jmp 0xffffec58(%rip)
75d4(3): mov %rbp,%rdi
75d7(5): mov $0x30,%esi
75dc(3): mov %r12,%rbp
75df(5): call 0xffffa941(%rip)
75e4(5): mov 0x30(%rsp),%rcx
75e9(5): jmp 0xffffecf3(%rip)
75ee(3): mov %rbp,%rdi
75f1(5): mov $0x30,%esi
75f6(3): mov %r12,%rbp
75f9(5): call 0xffffa927(%rip)
75fe(5): mov 0x30(%rsp),%rcx
7603(5): jmp 0xfffffa3f(%rip)
7608(5): call 0xffffa9d8(%rip)
760d(5): mov 0x30(%rsp),%rcx
7612(5): jmp 0xfffff033(%rip)
7617(5): mov 0x20(%rsp),%rsi
761c(3): mov %r12,%rdx
761f(3): mov %rbp,%rdi
7622(5): mov %rcx,0x30(%rsp)
7627(5): call 0xffffe5e9(%rip)
762c(5): mov 0x30(%rsp),%rcx
7631(5): jmp 0xfffff014(%rip)
7636(4): mov %al,0x30(%rsp)
763a(5): jmp 0xffffe8c6(%rip)
763f(3): movzx (%rbx),%ecx
7642(3): mov %rbx,%r9
7645(5): jmp 0xfffff864(%rip)
764a(4): lea 0x2(%rbx),%rcx
764e(6): mov $0x1,%r8d
7654(3): mov %rcx,%rdx
7657(4): add $0x1,%rcx
765b(4): movzx 0xffffffff(%rcx),%eax
765f(4): add $0x1,%r8
7663(2): cmp $0x3a,%al
7665(6): jnz 0xfffff4d8(%rip)
766b(2): jmp 0xffffffe9(%rip)
766d(3): mov %r10d,%esi
7670(5): mov $0x0,%eax
7675(3): sub $0x6,%esi
7678(3): cmovns %esi,%eax
767b(4): mov %eax,0x38(%rsp)
767f(7): lea 0x7d78(%rip),%rax
7686(5): mov %rax,0x40(%rsp)
768b(5): jmp 0xffffec97(%rip)
7690(4): imul %r12d,$0x64,%ecx
7694(2): xor %esi,%esi
7696(5): mov $0x1,0x40(%rsp)
769b(5): mov $0x5,%edi
76a0(2): add %eax,%ecx
76a2(5): movzx 0x38(%rsp),%eax
76a7(3): xor $0x1,%eax
76aa(5): jmp 0xffffeb7d(%rip)
76af(3): mov %rbp,%rdi
76b2(5): mov $0x30,%esi
76b7(5): call 0xffffa869(%rip)
76bc(5): mov 0x38(%rsp),%rbp
76c1(6): movzx 0x40(%rsp),%r8d
76c7(5): mov 0x48(%rsp),%rcx
76cc(5): jmp 0xffffef4b(%rip)
76d1(3): mov %rbp,%rdi
76d4(5): mov $0x30,%esi
76d9(3): mov %r12,%rbp
76dc(5): call 0xffffa844(%rip)
76e1(5): mov 0x40(%rsp),%rcx
76e6(5): mov 0x50(%rsp),%r9
76eb(5): mov 0x58(%rsp),%r8
76f0(5): jmp 0xfffff23f(%rip)
76f5(5): mov $0x30,%esi
76fa(5): jmp 0xffffeda1(%rip)
76ff(3): mov %rbp,%rdi
7702(5): mov $0x30,%esi
7707(5): call 0xffffa819(%rip)
770c(5): mov 0x40(%rsp),%rbp
7711(5): mov 0x50(%rsp),%r11
7716(5): mov 0x58(%rsp),%rcx
771b(5): mov 0x60(%rsp),%r8
7720(5): mov 0x6c(%rsp),%r10d
7725(5): jmp 0xfffffc3f(%rip)
772a(5): mov $0x0,0x38(%rsp)
772f(5): mov $0x2,%edi
7734(5): jmp 0xfffff6fc(%rip)
7739(7): mov 0x518(%rsp),%ecx
7740(5): jmp 0xfffff816(%rip)
7745(5): call 0xffffa73b(%rip)
774a(3): add $0x64,%ecx
774d(3): test %r15d,%r15d
7750(6): jz 0xfffff56a(%rip)
7756(5): jmp 0xffffef3c(%rip)
775b(2): xor %edi,%edi
775d(5): jmp 0xffffeaef(%rip)

"nstrftime" :
7770(4): sub $0x18,%rsp
7774(9): mov $0x28,%rax
777d(5): mov %rax,0x8(%rsp)
7782(2): xor %eax,%eax
7784(5): mov $0x0,0x7(%rsp)
7789(2): push %r9
778b(3): xor %r9d,%r9d
778e(2): push %r8
7790(3): xor %r8d,%r8d
7793(5): lea 0x17(%rsp),%rax
7798(1): push %rax
7799(2): push $0xff
779b(5): call 0xffffe515(%rip)
77a0(4): add $0x20,%rsp
77a4(5): mov 0x8(%rsp),%rdx
77a9(9): xor $0x28,%rdx
77b2(2): jnz 0x7(%rip)
77b4(4): add $0x18,%rsp
77b8(1): ret near (%rsp)
77b9(5): call 0xffffa6c7(%rip)

"set_program_name" :
77c0(3): test %rdi,%rdi
77c3(1): push %rbx
77c4(2): jz 0x79(%rip)
77c6(5): mov $0x2f,%esi
77cb(3): mov %rdi,%rbx
77ce(5): call 0xffffa712(%rip)
77d3(3): test %rax,%rax
77d6(2): jz 0x57(%rip)
77d8(4): lea 0x1(%rax),%r8
77dc(3): mov %r8,%rdx
77df(3): sub %rbx,%rdx
77e2(4): cmp $0x6,%rdx
77e6(2): jle 0x47(%rip)
77e8(4): lea 0xfffffffa(%rax),%rsi
77ec(7): lea 0x7e45(%rip),%rdi
77f3(5): mov $0x7,%ecx
77f8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
77fa(3): setnbe %dl
77fd(3): sbb $0x0,%dl
7800(2): test %dl,%dl
7802(2): jnz 0x2b(%rip)
7804(7): lea 0x7e35(%rip),%rdi
780b(5): mov $0x3,%ecx
7810(3): mov %r8,%rsi
7813(3): mov %r8,%rbx
7816(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7818(3): setnbe %dl
781b(3): sbb $0x0,%dl
781e(2): test %dl,%dl
7820(2): jnz 0xd(%rip)
7822(4): lea 0x4(%rax),%rbx
7826(7): mov %rbx,0x20b873(%rip)
782d(7): mov %rbx,0x20b984(%rip)
7834(7): mov %rbx,0x20b885(%rip)
783b(1): pop %rbx
783c(1): ret near (%rsp)
783d(7): mov 0x20b89c(%rip),%rcx
7844(7): lea 0x7db5(%rip),%rdi
784b(5): mov $0x37,%edx
7850(5): mov $0x1,%esi
7855(5): call 0xffffa94b(%rip)
785a(5): call 0xffffa4d6(%rip)

"gettext_quote.part.1" :
7860(1): push %rbp
7861(1): push %rbx
7862(3): mov %rdi,%rbp
7865(2): mov %esi,%ebx
7867(4): sub $0x8,%rsp
786b(5): call 0x3aa5(%rip)
7870(3): movzx (%rax),%edx
7873(3): and $0xdf,%edx
7876(3): cmp $0x55,%dl
7879(2): jz 0x77(%rip)
787b(3): cmp $0x47,%dl
787e(2): jz 0x22(%rip)
7880(7): lea 0x7dcc(%rip),%rax
7887(7): lea 0x8660(%rip),%rdx
788e(3): cmp $0x9,%ebx
7891(4): cmovne %rdx,%rax
7895(4): add $0x8,%rsp
7899(1): pop %rbx
789a(1): pop %rbp
789b(1): ret near (%rsp)
789c(4): nop 0x0(%rax)
78a0(4): movzx 0x1(%rax),%edx
78a4(3): and $0xdf,%edx
78a7(3): cmp $0x42,%dl
78aa(2): jnz 0xffffffd6(%rip)
78ac(4): cmp $0x31,0x2(%rax)
78b0(2): jnz 0xffffffd0(%rip)
78b2(4): cmp $0x38,0x3(%rax)
78b6(2): jnz 0xffffffca(%rip)
78b8(4): cmp $0x30,0x4(%rax)
78bc(2): jnz 0xffffffc4(%rip)
78be(4): cmp $0x33,0x5(%rax)
78c2(2): jnz 0xffffffbe(%rip)
78c4(4): cmp $0x30,0x6(%rax)
78c8(2): jnz 0xffffffb8(%rip)
78ca(4): cmp $0x0,0x7(%rax)
78ce(2): jnz 0xffffffb2(%rip)
78d0(4): cmp $0x60,0x0(%rbp)
78d4(7): lea 0x7d71(%rip),%rax
78db(7): lea 0x7d6e(%rip),%rdx
78e2(4): cmovne %rdx,%rax
78e6(4): add $0x8,%rsp
78ea(1): pop %rbx
78eb(1): pop %rbp
78ec(1): ret near (%rsp)
78ed(3): nop (%rax)
78f0(4): movzx 0x1(%rax),%edx
78f4(3): and $0xdf,%edx
78f7(3): cmp $0x54,%dl
78fa(2): jnz 0xffffff86(%rip)
78fc(4): movzx 0x2(%rax),%edx
7900(3): and $0xdf,%edx
7903(3): cmp $0x46,%dl
7906(6): jnz 0xffffff7a(%rip)
790c(4): cmp $0x2d,0x3(%rax)
7910(6): jnz 0xffffff70(%rip)
7916(4): cmp $0x38,0x4(%rax)
791a(6): jnz 0xffffff66(%rip)
7920(4): cmp $0x0,0x5(%rax)
7924(6): jnz 0xffffff5c(%rip)
792a(4): cmp $0x60,0x0(%rbp)
792e(7): lea 0x7d0f(%rip),%rax
7935(7): lea 0x7d0c(%rip),%rdx
793c(4): cmovne %rdx,%rax
7940(4): add $0x8,%rsp
7944(1): pop %rbx
7945(1): pop %rbp
7946(1): ret near (%rsp)

"quotearg_buffer_restyled" :
7950(2): push %r15
7952(2): push %r14
7954(3): mov %r8d,%r15d
7957(2): push %r13
7959(2): push %r12
795b(3): mov %rdi,%r14
795e(1): push %rbp
795f(1): push %rbx
7960(3): mov %r9d,%ebx
7963(3): mov %rsi,%r13
7966(3): mov %rcx,%rbp
7969(3): and $0x2,%ebx
796c(7): sub $0xb8,%rsp
7973(8): mov 0xf0(%rsp),%rax
797b(5): mov %rdx,0x10(%rsp)
7980(5): mov %r8d,0x8(%rsp)
7985(5): mov %r9d,0x78(%rsp)
798a(5): mov %rax,0x20(%rsp)
798f(8): mov 0xf8(%rsp),%rax
7997(5): mov %rax,0x68(%rsp)
799c(8): mov 0x100(%rsp),%rax
79a4(5): mov %rax,0x60(%rsp)
79a9(9): mov $0x28,%rax
79b2(8): mov %rax,0xa8(%rsp)
79ba(2): xor %eax,%eax
79bc(5): call 0xffffa474(%rip)
79c1(4): cmp $0xa,%r15d
79c5(5): mov %rax,0x58(%rsp)
79ca(6): jnbe 0x11b5(%rip)
79d0(7): lea 0x7ce9(%rip),%rcx
79d7(3): mov %r15d,%edx
79da(4): movsxd 0x0(%rcx,%rdx,4),%rax
79de(3): add %rcx,%rax
79e1(2): jmp %rax
79e3(5): mov $0x1,0xe(%rsp)
79e8(5): mov $0x0,0x7c(%rsp)
79ed(3): xor %r12d,%r12d
79f0(9): mov $0x0,0x50(%rsp)
79f9(5): mov $0x1,0xf(%rsp)
79fe(5): mov $0x0,0xd(%rsp)
7a03(7): lea 0x84e4(%rip),%rax
7a0a(9): mov $0x1,0x18(%rsp)
7a13(3): xor %r15d,%r15d
7a16(8): mov $0x2,0x8(%rsp)
7a1e(5): mov %rax,0x48(%rsp)
7a23(3): xor %r11d,%r11d
7a26(3): mov %rbp,%rax
7a29(3): mov %r12d,%r8d
7a2c(3): mov %r11,%rbp
7a2f(3): mov %rax,%r11
7a32(6): nop 0x0(%rax,%rax,1)
7a38(3): cmp %rbp,%r11
7a3b(4): setnz %r12b
7a3f(4): cmp $0xffffffff,%r11
7a43(2): jnz 0xf(%rip)
7a45(5): mov 0x10(%rsp),%rax
7a4a(4): cmp $0x0,0x0(%rax,%rbp,1)
7a4e(4): setnz %r12b
7a52(3): test %r12b,%r12b
7a55(6): jz 0x65b(%rip)
7a5b(5): cmp $0x2,0x8(%rsp)
7a60(5): mov 0x10(%rsp),%rdi
7a65(4): lea 0x0(%rdi,%rbp,1),%r9
7a69(3): setnz %al
7a6c(4): and 0xd(%rsp),%al
7a70(3): mov %eax,%r10d
7a73(6): jz 0xad(%rip)
7a79(5): mov 0x18(%rsp),%rax
7a7e(3): test %rax,%rax
7a81(6): jz 0x42f(%rip)
7a87(4): cmp $0xffffffff,%r11
7a8b(5): lea 0x0(%rbp,%rax,1),%rbx
7a90(2): jnz 0x30(%rip)
7a92(4): cmp $0x1,%rax
7a96(2): jbe 0x2a(%rip)
7a98(5): mov %r8b,0x38(%rsp)
7a9d(5): mov %r10b,0x30(%rsp)
7aa2(5): mov %r9,0x28(%rsp)
7aa7(5): call 0xffffa399(%rip)
7aac(6): movzx 0x38(%rsp),%r8d
7ab2(6): movzx 0x30(%rsp),%r10d
7ab8(3): mov %rax,%r11
7abb(5): mov 0x28(%rsp),%r9
7ac0(3): cmp %r11,%rbx
7ac3(5): mov %r10b,0x28(%rsp)
7ac8(6): jnbe 0x5b8(%rip)
7ace(5): mov 0x18(%rsp),%rdx
7ad3(5): mov 0x48(%rsp),%rsi
7ad8(3): mov %r9,%rdi
7adb(5): mov %r11,0x40(%rsp)
7ae0(5): mov %r8b,0x38(%rsp)
7ae5(5): mov %r9,0x30(%rsp)
7aea(5): call 0xffffa496(%rip)
7aef(2): test %eax,%eax
7af1(5): mov 0x30(%rsp),%r9
7af6(6): movzx 0x38(%rsp),%r8d
7afc(5): mov 0x40(%rsp),%r11
7b01(6): jnz 0x57f(%rip)
7b07(5): cmp $0x0,0xf(%rsp)
7b0c(6): movzx 0x28(%rsp),%r10d
7b12(6): jnz 0xf83(%rip)
7b18(8): nop 0x0(%rax,%rax,1)
7b20(4): movzx (%r9),%ebx
7b24(3): cmp $0x7e,%bl
7b27(6): jnbe 0x321(%rip)
7b2d(7): lea 0x7bb8(%rip),%rcx
7b34(3): movzx %bl,%edx
7b37(4): movsxd 0x0(%rcx,%rdx,4),%rax
7b3b(3): add %rcx,%rax
7b3e(2): jmp %rax
7b40(3): xor %r10d,%r10d
7b43(4): cmp $0x1,%r11
7b47(3): setnz %al
7b4a(4): cmp $0xffffffff,%r11
7b4e(2): jnz 0xe(%rip)
7b50(5): mov 0x10(%rsp),%rax
7b55(4): cmp $0x0,0x1(%rax)
7b59(3): setnz %al
7b5c(5): cmp $0x2,0x8(%rsp)
7b61(3): setz %dl
7b64(2): test %al,%al
7b66(6): jz 0x252(%rip)
7b6c(3): xor %r12d,%r12d
7b6f(2): xor %eax,%eax
7b71(7): nop 0x0(%rax)
7b78(5): cmp $0x1,0xd(%rsp)
7b7d(6): jnz 0x115(%rip)
7b83(2): test %dl,%dl
7b85(6): jnz 0x10d(%rip)
7b8b(5): mov 0x20(%rsp),%rsi
7b90(3): test %rsi,%rsi
7b93(2): jz 0x16(%rip)
7b95(2): mov %ebx,%edx
7b97(3): shr $0x5,%dl
7b9a(3): movzx %dl,%edx
7b9d(3): mov 0x0(%rsi,%rdx,4),%edx
7ba0(3): bt %ebx,%edx
7ba3(6): jb 0x150(%rip)
7ba9(3): test %r10b,%r10b
7bac(6): jnz 0x147(%rip)
7bb2(3): xor $0x1,%eax
7bb5(4): add $0x1,%rbp
7bb9(3): and %r8d,%eax
7bbc(2): test %al,%al
7bbe(2): jz 0x22(%rip)
7bc0(3): cmp %r15,%r13
7bc3(2): jbe 0x7(%rip)
7bc5(5): mov $0x27,0x0(%r14,%r15,1)
7bca(4): lea 0x1(%r15),%rax
7bce(3): cmp %rax,%r13
7bd1(2): jbe 0x8(%rip)
7bd3(6): mov $0x27,0x1(%r14,%r15,1)
7bd9(4): add $0x2,%r15
7bdd(3): xor %r8d,%r8d
7be0(3): cmp %r13,%r15
7be3(2): jnb 0x6(%rip)
7be5(4): mov %bl,0x0(%r14,%r15,1)
7be9(5): movzx 0xe(%rsp),%edi
7bee(4): add $0x1,%r15
7bf2(5): mov $0x0,%eax
7bf7(3): test %r12b,%r12b
7bfa(3): cmove %eax,%edi
7bfd(5): mov %dil,0xe(%rsp)
7c02(5): jmp 0xfffffe36(%rip)
7c07(9): nop 0x0(%rax,%rax,1)
7c10(3): xor %r10d,%r10d
7c13(4): mov 0x8(%rsp),%eax
7c17(3): cmp $0x2,%eax
7c1a(6): jz 0x5be(%rip)
7c20(3): cmp $0x5,%eax
7c23(6): jz 0x575(%rip)
7c29(3): cmp $0x2,%eax
7c2c(5): mov $0x3f,%ebx
7c31(3): setz %dl
7c34(3): xor %r12d,%r12d
7c37(2): xor %eax,%eax
7c39(5): jmp 0xffffff3f(%rip)
7c3e(2): nop 
7c40(3): xor %r10d,%r10d
7c43(5): cmp $0x2,0x8(%rsp)
7c48(6): jz 0x508(%rip)
7c4e(5): mov %r12b,0x7c(%rsp)
7c53(2): xor %edx,%edx
7c55(2): xor %eax,%eax
7c57(5): mov $0x27,%ebx
7c5c(5): jmp 0xffffff1c(%rip)
7c61(7): nop 0x0(%rax)
7c68(5): mov $0x9,%edx
7c6d(5): mov $0x74,%ebx
7c72(5): cmp $0x2,0x8(%rsp)
7c77(3): setz %al
7c7a(4): and 0xf(%rsp),%al
7c7e(6): jnz 0x150(%rip)
7c84(5): cmp $0x0,0xd(%rsp)
7c89(2): jnz 0x67(%rip)
7c8b(2): mov %edx,%ebx
7c8d(3): xor %r12d,%r12d
7c90(2): xor %eax,%eax
7c92(5): cmp $0x0,0xf(%rsp)
7c97(6): jnz 0xfffffef4(%rip)
7c9d(5): jmp 0xffffff0c(%rip)
7ca2(6): nop 0x0(%rax,%rax,1)
7ca8(5): mov $0x8,%edx
7cad(5): mov $0x62,%ebx
7cb2(2): jmp 0xffffffd2(%rip)
7cb4(4): nop 0x0(%rax)
7cb8(5): cmp $0x2,0x8(%rsp)
7cbd(6): jz 0x3d3(%rip)
7cc3(5): cmp $0x0,0xd(%rsp)
7cc8(6): jz 0x218(%rip)
7cce(5): cmp $0x0,0xf(%rsp)
7cd3(6): jz 0x20d(%rip)
7cd9(6): cmp $0x0,0x18(%rsp)
7cdf(6): jnz 0x3bc(%rip)
7ce5(5): mov $0x5c,%ebx
7cea(6): nop 0x0(%rax,%rax,1)
7cf0(3): xor %r12d,%r12d
7cf3(5): cmp $0x2,0x8(%rsp)
7cf8(3): setz %dl
7cfb(5): cmp $0x0,0xf(%rsp)
7d00(2): mov %edx,%eax
7d02(6): jnz 0x856(%rip)
7d08(3): mov %r8d,%eax
7d0b(3): xor $0x1,%eax
7d0e(2): and %dl,%al
7d10(2): jz 0x31(%rip)
7d12(3): cmp %r15,%r13
7d15(2): jbe 0x7(%rip)
7d17(5): mov $0x27,0x0(%r14,%r15,1)
7d1c(4): lea 0x1(%r15),%rdx
7d20(3): cmp %rdx,%r13
7d23(2): jbe 0x8(%rip)
7d25(6): mov $0x24,0x1(%r14,%r15,1)
7d2b(4): lea 0x2(%r15),%rdx
7d2f(3): cmp %rdx,%r13
7d32(2): jbe 0x8(%rip)
7d34(6): mov $0x27,0x2(%r14,%r15,1)
7d3a(4): add $0x3,%r15
7d3e(3): mov %eax,%r8d
7d41(3): cmp %r15,%r13
7d44(2): jbe 0x7(%rip)
7d46(5): mov $0x5c,0x0(%r14,%r15,1)
7d4b(4): add $0x1,%r15
7d4f(4): add $0x1,%rbp
7d53(5): jmp 0xfffffe8d(%rip)
7d58(8): nop 0x0(%rax,%rax,1)
7d60(5): cmp $0x0,0xd(%rsp)
7d65(6): jnz 0x1ce(%rip)
7d6b(2): xor %edx,%edx
7d6d(5): test $0x1,0x78(%rsp)
7d72(6): jz 0xffffff19(%rip)
7d78(4): add $0x1,%rbp
7d7c(5): jmp 0xfffffcbc(%rip)
7d81(7): nop 0x0(%rax)
7d88(5): cmp $0x2,0x8(%rsp)
7d8d(3): setz %dl
7d90(2): xor %eax,%eax
7d92(5): jmp 0xfffffde6(%rip)
7d97(9): nop 0x0(%rax,%rax,1)
7da0(5): mov $0x7,%edx
7da5(5): mov $0x61,%ebx
7daa(5): jmp 0xfffffeda(%rip)
7daf(1): nop 
7db0(5): cmp $0x2,0x8(%rsp)
7db5(3): setz %dl
7db8(3): test %rbp,%rbp
7dbb(6): jnz 0xfffffdb1(%rip)
7dc1(5): movzx 0xf(%rsp),%eax
7dc6(2): and %dl,%al
7dc8(6): jz 0xfffffdb0(%rip)
7dce(3): mov %r11,%rbp
7dd1(8): mov $0x2,0x8(%rsp)
7dd9(5): jmp 0x700(%rip)
7dde(2): nop 
7de0(5): cmp $0x2,0x8(%rsp)
7de5(3): setz %dl
7de8(3): xor %r12d,%r12d
7deb(2): jmp 0xffffffd6(%rip)
7ded(3): nop (%rax)
7df0(5): cmp $0x2,0x8(%rsp)
7df5(5): mov $0x20,%ebx
7dfa(3): setz %dl
7dfd(2): jmp 0xffffffc4(%rip)
7dff(1): nop 
7e00(5): mov $0xd,%edx
7e05(5): mov $0x72,%ebx
7e0a(5): jmp 0xfffffe68(%rip)
7e0f(1): nop 
7e10(5): mov $0xc,%edx
7e15(5): mov $0x66,%ebx
7e1a(5): jmp 0xfffffe6a(%rip)
7e1f(1): nop 
7e20(5): mov $0xb,%edx
7e25(5): mov $0x76,%ebx
7e2a(5): jmp 0xfffffe5a(%rip)
7e2f(1): nop 
7e30(5): mov $0xa,%edx
7e35(5): mov $0x6e,%ebx
7e3a(5): jmp 0xfffffe38(%rip)
7e3f(1): nop 
7e40(3): xor %r10d,%r10d
7e43(5): nop 0x0(%rax,%rax,1)
7e48(6): cmp $0x1,0x58(%rsp)
7e4e(6): jnz 0x3aa(%rip)
7e54(5): mov %r11,0x38(%rsp)
7e59(5): mov %r8b,0x30(%rsp)
7e5e(5): mov %r10b,0x28(%rsp)
7e63(5): call 0xffffa3ad(%rip)
7e68(3): mov (%rax),%rcx
7e6b(3): movzx %bl,%edx
7e6e(6): movzx 0x28(%rsp),%r10d
7e74(6): movzx 0x30(%rsp),%r8d
7e7a(5): mov 0x38(%rsp),%r11
7e7f(5): mov $0x1,%edi
7e84(4): movzx 0x0(%rcx,%rdx,2),%eax
7e88(4): and $0x4000,%ax
7e8c(4): setnz %r12b
7e90(3): setz %al
7e93(4): and 0xd(%rsp),%al
7e97(2): test %al,%al
7e99(6): jnz 0x998(%rip)
7e9f(5): cmp $0x2,0x8(%rsp)
7ea4(3): setz %dl
7ea7(5): jmp 0xfffffcd1(%rip)
7eac(4): nop 0x0(%rax)
7eb0(4): movzx (%r9),%ebx
7eb4(3): cmp $0x7e,%bl
7eb7(2): jnbe 0xffffff89(%rip)
7eb9(7): lea 0x7a28(%rip),%rcx
7ec0(3): movzx %bl,%edx
7ec3(4): movsxd 0x0(%rcx,%rdx,4),%rax
7ec7(3): add %rcx,%rax
7eca(2): jmp %rax
7ecc(4): nop 0x0(%rax)
7ed0(3): xor %r10d,%r10d
7ed3(5): cmp $0x0,0xd(%rsp)
7ed8(6): jnz 0xfffffdf6(%rip)
7ede(2): nop 
7ee0(5): mov $0x5c,%edx
7ee5(5): mov $0x5c,%ebx
7eea(5): jmp 0xfffffd9a(%rip)
7eef(1): nop 
7ef0(5): mov $0xc,%edx
7ef5(3): xor %r10d,%r10d
7ef8(5): mov $0x66,%ebx
7efd(5): jmp 0xfffffd87(%rip)
7f02(6): nop 0x0(%rax,%rax,1)
7f08(5): mov $0xa,%edx
7f0d(3): xor %r10d,%r10d
7f10(5): mov $0x6e,%ebx
7f15(5): jmp 0xfffffd5d(%rip)
7f1a(6): nop 0x0(%rax,%rax,1)
7f20(5): mov $0x61,%ebx
7f25(5): jmp 0xfffffdcb(%rip)
7f2a(6): nop 0x0(%rax,%rax,1)
7f30(3): xor %r10d,%r10d
7f33(5): cmp $0x2,0x8(%rsp)
7f38(3): setz %dl
7f3b(5): cmp $0x0,0xf(%rsp)
7f40(6): jnz 0xb9a(%rip)
7f46(3): mov %r8d,%eax
7f49(3): mov %r15,%rcx
7f4c(3): xor $0x1,%eax
7f4f(2): and %dl,%al
7f51(2): jz 0x2f(%rip)
7f53(3): cmp %r15,%r13
7f56(2): jbe 0x7(%rip)
7f58(5): mov $0x27,0x0(%r14,%r15,1)
7f5d(4): lea 0x1(%r15),%rcx
7f61(3): cmp %rcx,%r13
7f64(2): jbe 0x8(%rip)
7f66(6): mov $0x24,0x1(%r14,%r15,1)
7f6c(4): lea 0x2(%r15),%rcx
7f70(3): cmp %rcx,%r13
7f73(6): jnbe 0x636(%rip)
7f79(4): lea 0x3(%r15),%rcx
7f7d(3): mov %eax,%r8d
7f80(3): cmp %rcx,%r13
7f83(2): jbe 0x7(%rip)
7f85(5): mov $0x5c,0x0(%r14,%rcx,1)
7f8a(5): cmp $0x2,0x8(%rsp)
7f8f(4): lea 0x1(%rcx),%r15
7f93(6): jz 0x606(%rip)
7f99(4): lea 0x1(%rbp),%rax
7f9d(3): cmp %r11,%rax
7fa0(2): jnb 0x1b(%rip)
7fa2(5): mov 0x10(%rsp),%rax
7fa7(5): movzx 0x1(%rax,%rbp,1),%eax
7fac(4): mov %al,0x28(%rsp)
7fb0(3): sub $0x30,%eax
7fb3(2): cmp $0x9,%al
7fb5(6): jbe 0x834(%rip)
7fbb(3): mov %r12d,%eax
7fbe(5): mov $0x30,%ebx
7fc3(3): xor %r12d,%r12d
7fc6(5): jmp 0xfffffbb2(%rip)
7fcb(5): nop 0x0(%rax,%rax,1)
7fd0(5): cmp $0x2,0x8(%rsp)
7fd5(3): mov %r10d,%r12d
7fd8(3): setz %dl
7fdb(3): xor %r10d,%r10d
7fde(2): xor %eax,%eax
7fe0(5): jmp 0xfffffb98(%rip)
7fe5(3): nop (%rax)
7fe8(5): cmp $0x2,0x8(%rsp)
7fed(3): setz %dl
7ff0(3): xor %r10d,%r10d
7ff3(5): jmp 0xfffffdc5(%rip)
7ff8(8): nop 0x0(%rax,%rax,1)
8000(5): cmp $0x2,0x8(%rsp)
8005(3): setz %dl
8008(3): xor %r10d,%r10d
800b(3): xor %r12d,%r12d
800e(5): jmp 0xfffffdb3(%rip)
8013(5): nop 0x0(%rax,%rax,1)
8018(5): cmp $0x2,0x8(%rsp)
801d(3): mov %r10d,%r12d
8020(5): mov $0x20,%ebx
8025(3): setz %dl
8028(3): xor %r10d,%r10d
802b(5): jmp 0xfffffd96(%rip)
8030(5): mov $0xd,%edx
8035(3): xor %r10d,%r10d
8038(5): mov $0x72,%ebx
803d(5): jmp 0xfffffc35(%rip)
8042(6): nop 0x0(%rax,%rax,1)
8048(5): mov $0x76,%ebx
804d(5): jmp 0xfffffca3(%rip)
8052(6): nop 0x0(%rax,%rax,1)
8058(5): mov $0x9,%edx
805d(3): xor %r10d,%r10d
8060(5): mov $0x74,%ebx
8065(5): jmp 0xfffffc0d(%rip)
806a(6): nop 0x0(%rax,%rax,1)
8070(5): mov $0x62,%ebx
8075(5): jmp 0xfffffc7b(%rip)
807a(6): nop 0x0(%rax,%rax,1)
8080(3): xor %r10d,%r10d
8083(5): jmp 0xfffffa9d(%rip)
8088(8): nop 0x0(%rax,%rax,1)
8090(5): cmp $0x0,0xf(%rsp)
8095(6): jnz 0x96b(%rip)
809b(4): add $0x1,%rbp
809f(3): mov %r8d,%eax
80a2(3): xor %r12d,%r12d
80a5(5): mov $0x5c,%ebx
80aa(5): jmp 0xfffffb12(%rip)
80af(1): nop 
80b0(5): cmp $0x2,0x8(%rsp)
80b5(5): movzx 0xf(%rsp),%ebx
80ba(3): mov %r8d,%r12d
80bd(3): mov %r11,%rbp
80c0(3): setz %dl
80c3(2): mov %ebx,%eax
80c5(3): test %r15,%r15
80c8(3): setz %cl
80cb(2): and %edx,%eax
80cd(2): and %cl,%al
80cf(6): jnz 0xa67(%rip)
80d5(2): mov %ebx,%eax
80d7(3): xor $0x1,%eax
80da(2): and %al,%dl
80dc(6): jz 0x970(%rip)
80e2(5): cmp $0x0,0x7c(%rsp)
80e7(6): jz 0x963(%rip)
80ed(5): cmp $0x0,0xe(%rsp)
80f2(6): jnz 0x9fb(%rip)
80f8(3): test %r13,%r13
80fb(3): setz %al
80fe(6): cmp $0x0,0x50(%rsp)
8104(3): setnz %dl
8107(2): and %dl,%al
8109(6): jz 0xa23(%rip)
810f(5): mov 0x50(%rsp),%r13
8114(7): lea 0x7dd3(%rip),%rbx
811b(4): mov $0x27,(%r14)
811f(8): mov $0x2,0x8(%rsp)
8127(6): mov $0x1,%r15d
812d(9): mov $0x1,0x18(%rsp)
8136(5): mov $0x0,0xf(%rsp)
813b(5): mov %rbx,0x48(%rsp)
8140(4): mov %al,0x7c(%rsp)
8144(5): jmp 0xfffff8df(%rip)
8149(7): nop 0x0(%rax)
8150(5): cmp $0x0,0xf(%rsp)
8155(6): jnz 0x8ab(%rip)
815b(3): test %r13,%r13
815e(6): jz 0x402(%rip)
8164(2): xor %edx,%edx
8166(6): cmp $0x0,0x50(%rsp)
816c(6): jnz 0x3f4(%rip)
8172(5): mov %r13,0x50(%rsp)
8177(4): add $0x3,%r15
817b(2): xor %eax,%eax
817d(5): mov %r12b,0x7c(%rsp)
8182(3): xor %r8d,%r8d
8185(3): mov %rdx,%r13
8188(5): mov $0x27,%ebx
818d(5): jmp 0xfffffa1c(%rip)
8192(6): nop 0x0(%rax,%rax,1)
8198(5): test $0x4,0x78(%rsp)
819d(2): jz 0x23(%rip)
819f(4): lea 0x2(%rbp),%rcx
81a3(3): cmp %r11,%rcx
81a6(2): jnb 0x1a(%rip)
81a8(5): mov 0x10(%rsp),%rax
81ad(5): cmp $0x3f,0x1(%rax,%rbp,1)
81b2(6): jz 0x790(%rip)
81b8(8): nop 0x0(%rax,%rax,1)
81c0(2): xor %edx,%edx
81c2(3): xor %r12d,%r12d
81c5(2): xor %eax,%eax
81c7(5): mov $0x3f,%ebx
81cc(5): jmp 0xfffff9ac(%rip)
81d1(7): nop 0x0(%rax)
81d8(5): cmp $0x0,0xf(%rsp)
81dd(6): jnz 0x823(%rip)
81e3(3): xor %r12d,%r12d
81e6(2): xor %eax,%eax
81e8(5): mov $0x3f,%ebx
81ed(5): jmp 0xfffff9bc(%rip)
81f2(6): nop 0x0(%rax,%rax,1)
81f8(8): lea 0xa0(%rsp),%rax
8200(4): cmp $0xffffffff,%r11
8204(c): mov $0x0,0xa0(%rsp)
8210(5): mov %rax,0x28(%rsp)
8215(2): jnz 0x2f(%rip)
8217(5): mov 0x10(%rsp),%rdi
821c(5): mov %r8b,0x40(%rsp)
8221(5): mov %r10b,0x38(%rsp)
8226(5): mov %r9,0x30(%rsp)
822b(5): call 0xffff9c15(%rip)
8230(6): movzx 0x40(%rsp),%r8d
8236(6): movzx 0x38(%rsp),%r10d
823c(3): mov %rax,%r11
823f(5): mov 0x30(%rsp),%r9
8244(8): lea 0x9c(%rsp),%rax
824c(2): xor %ecx,%ecx
824e(4): mov %bl,0x7e(%rsp)
8252(5): mov %r8b,0x7d(%rsp)
8257(3): mov %rcx,%rbx
825a(8): mov %r9,0x88(%rsp)
8262(5): mov %rax,0x38(%rsp)
8267(5): mov %r10b,0x7f(%rsp)
826c(8): mov %r15,0x80(%rsp)
8274(5): mov %r14,0x40(%rsp)
8279(5): mov %r13,0x70(%rsp)
827e(5): mov %r11,0x30(%rsp)
8283(5): mov 0x10(%rsp),%rax
8288(5): lea 0x0(%rbp,%rbx,1),%r14
828d(5): mov 0x30(%rsp),%rdx
8292(5): mov 0x28(%rsp),%rcx
8297(5): mov 0x38(%rsp),%rdi
829c(4): lea 0x0(%rax,%r14,1),%r13
82a0(3): sub %r14,%rdx
82a3(3): mov %r13,%rsi
82a6(5): call 0x1fea(%rip)
82ab(3): test %rax,%rax
82ae(3): mov %rax,%r15
82b1(2): jz 0x50(%rip)
82b3(4): cmp $0xffffffff,%rax
82b7(6): jz 0x61e(%rip)
82bd(4): cmp $0xfffffffe,%rax
82c1(6): jz 0x5a0(%rip)
82c7(5): cmp $0x2,0x8(%rsp)
82cc(3): setz %al
82cf(4): and 0xf(%rsp),%al
82d3(6): jnz 0x19d(%rip)
82d9(7): mov 0x9c(%rsp),%edi
82e0(5): call 0xffff9ef0(%rip)
82e5(5): mov 0x28(%rsp),%rdi
82ea(2): test %eax,%eax
82ec(5): mov $0x0,%eax
82f1(4): cmove %eax,%r12d
82f5(3): add %r15,%rbx
82f8(5): call 0xffff9ec8(%rip)
82fd(2): test %eax,%eax
82ff(2): jz 0xffffff84(%rip)
8301(3): mov %r12d,%edx
8304(3): mov %rbx,%rdi
8307(6): movzx 0x7d(%rsp),%r8d
830d(3): xor $0x1,%edx
8310(5): movzx 0x7e(%rsp),%ebx
8315(6): movzx 0x7f(%rsp),%r10d
831b(4): and 0xd(%rsp),%dl
831f(8): mov 0x80(%rsp),%r15
8327(5): mov 0x40(%rsp),%r14
832c(5): mov 0x70(%rsp),%r13
8331(5): mov 0x30(%rsp),%r11
8336(4): cmp $0x1,%rdi
833a(6): jbe 0x601(%rip)
8340(3): mov %rdi,%rcx
8343(2): xor %esi,%esi
8345(6): movzx 0xf(%rsp),%r9d
834b(3): add %rbp,%rcx
834e(5): mov 0x10(%rsp),%rdi
8353(5): jmp 0xbb(%rip)
8358(8): nop 0x0(%rax,%rax,1)
8360(5): cmp $0x2,0x8(%rsp)
8365(3): setz %al
8368(3): test %r9b,%r9b
836b(6): jnz 0x4b5(%rip)
8371(3): mov %r8d,%esi
8374(3): xor $0x1,%esi
8377(3): and %sil,%al
837a(2): jz 0x31(%rip)
837c(3): cmp %r15,%r13
837f(2): jbe 0x7(%rip)
8381(5): mov $0x27,0x0(%r14,%r15,1)
8386(4): lea 0x1(%r15),%rsi
838a(3): cmp %rsi,%r13
838d(2): jbe 0x8(%rip)
838f(6): mov $0x24,0x1(%r14,%r15,1)
8395(4): lea 0x2(%r15),%rsi
8399(3): cmp %rsi,%r13
839c(2): jbe 0x8(%rip)
839e(6): mov $0x27,0x2(%r14,%r15,1)
83a4(4): add $0x3,%r15
83a8(3): mov %eax,%r8d
83ab(3): cmp %r15,%r13
83ae(2): jbe 0x7(%rip)
83b0(5): mov $0x5c,0x0(%r14,%r15,1)
83b5(4): lea 0x1(%r15),%rax
83b9(3): cmp %rax,%r13
83bc(2): jbe 0xf(%rip)
83be(2): mov %ebx,%eax
83c0(3): shr $0x6,%al
83c3(3): add $0x30,%eax
83c6(5): mov %al,0x1(%r14,%r15,1)
83cb(4): lea 0x2(%r15),%rax
83cf(3): cmp %rax,%r13
83d2(2): jbe 0x12(%rip)
83d4(2): mov %ebx,%eax
83d6(3): shr $0x3,%al
83d9(3): and $0x7,%eax
83dc(3): add $0x30,%eax
83df(5): mov %al,0x2(%r14,%r15,1)
83e4(3): and $0x7,%ebx
83e7(4): add $0x1,%rbp
83eb(4): add $0x3,%r15
83ef(3): add $0x30,%ebx
83f2(3): cmp %rcx,%rbp
83f5(6): jnb 0xfffff7eb(%rip)
83fb(2): mov %edx,%esi
83fd(3): cmp %r15,%r13
8400(2): jbe 0x6(%rip)
8402(4): mov %bl,0x0(%r14,%r15,1)
8406(4): movzx 0x0(%rdi,%rbp,1),%ebx
840a(4): add $0x1,%r15
840e(2): test %dl,%dl
8410(6): jnz 0xffffff50(%rip)
8416(2): mov %esi,%eax
8418(3): xor $0x1,%eax
841b(3): and %r8d,%eax
841e(3): test %r10b,%r10b
8421(2): jz 0x10(%rip)
8423(3): cmp %r15,%r13
8426(2): jbe 0x7(%rip)
8428(5): mov $0x5c,0x0(%r14,%r15,1)
842d(4): add $0x1,%r15
8431(4): add $0x1,%rbp
8435(3): cmp %rcx,%rbp
8438(6): jnb 0xfffff784(%rip)
843e(2): test %al,%al
8440(6): jz 0x3fe(%rip)
8446(3): cmp %r15,%r13
8449(2): jbe 0x7(%rip)
844b(5): mov $0x27,0x0(%r14,%r15,1)
8450(4): lea 0x1(%r15),%rax
8454(3): cmp %rax,%r13
8457(2): jbe 0x8(%rip)
8459(6): mov $0x27,0x1(%r14,%r15,1)
845f(4): add $0x2,%r15
8463(3): xor %r10d,%r10d
8466(3): xor %r8d,%r8d
8469(2): jmp 0xffffff94(%rip)
846b(5): nop 0x0(%rax,%rax,1)
8470(4): cmp $0x1,%r15
8474(6): jz 0xfffffe65(%rip)
847a(5): mov 0x10(%rsp),%rdi
847f(4): lea 0x0(%rdi,%r15,1),%rcx
8483(5): lea 0x1(%rdi,%r14,1),%rdx
8488(4): lea 0x0(%rcx,%r14,1),%r8
848c(2): jmp 0x11(%rip)
848e(2): nop 
8490(4): add $0x1,%rdx
8494(3): cmp %rdx,%r8
8497(6): jz 0xfffffe42(%rip)
849d(3): movzx (%rdx),%ecx
84a0(3): sub $0x5b,%ecx
84a3(3): cmp $0x21,%cl
84a6(2): jnbe 0xffffffea(%rip)
84a8(5): mov $0x1,%esi
84ad(3): shl/sal %cl,%rsi
84b0(3): mov %rsi,%rcx
84b3(a): mov $0x8589934635,%rsi
84bd(3): test %rsi,%rcx
84c0(2): jz 0xffffffd0(%rip)
84c2(5): mov 0x40(%rsp),%r14
84c7(5): mov 0x70(%rsp),%r13
84cc(5): mov 0x30(%rsp),%rbp
84d1(8): mov $0x2,0x8(%rsp)
84d9(5): cmp $0x0,0xd(%rsp)
84de(2): jz 0x12(%rip)
84e0(2): test %al,%al
84e2(5): mov $0x4,%eax
84e7(5): cmove 0x8(%rsp),%eax
84ec(4): mov %eax,0x8(%rsp)
84f0(4): sub $0x8,%rsp
84f4(3): mov %rbp,%rcx
84f7(3): mov %r13,%rsi
84fa(4): push 0x68(%rsp)
84fe(4): push 0x78(%rsp)
8502(3): mov %r14,%rdi
8505(2): push $0x0
8507(8): mov 0x98(%rsp),%r9d
850f(5): mov 0x28(%rsp),%r8d
8514(5): mov 0x30(%rsp),%rdx
8519(4): and $0xfd,%r9d
851d(5): call 0xfffff433(%rip)
8522(4): add $0x20,%rsp
8526(3): mov %rax,%r15
8529(8): mov 0xa8(%rsp),%rbx
8531(9): xor $0x28,%rbx
853a(3): mov %r15,%rax
853d(6): jnz 0x606(%rip)
8543(7): add $0xb8,%rsp
854a(1): pop %rbx
854b(1): pop %rbp
854c(2): pop %r12
854e(2): pop %r13
8550(2): pop %r14
8552(2): pop %r15
8554(1): ret near (%rsp)
8555(3): nop (%rax)
8558(3): mov %r11,%rbp
855b(5): jmp 0xffffff7e(%rip)
8560(3): cmp %r15,%r13
8563(2): jbe 0x7(%rip)
8565(5): mov $0x27,0x0(%r14,%r15,1)
856a(4): lea 0x1(%r15),%rax
856e(3): cmp %rax,%r13
8571(2): jbe 0x8(%rip)
8573(6): mov $0x5c,0x1(%r14,%r15,1)
8579(4): lea 0x2(%r15),%rax
857d(3): cmp %rax,%r13
8580(6): jbe 0x5f2(%rip)
8586(3): mov %r13,%rdx
8589(6): mov $0x27,0x2(%r14,%r15,1)
858f(5): mov 0x50(%rsp),%r13
8594(5): jmp 0xfffffbde(%rip)
8599(3): mov %r12d,%eax
859c(5): mov $0x30,%ebx
85a1(3): xor %r12d,%r12d
85a4(5): jmp 0xfffff605(%rip)
85a9(6): mov $0x27,0x2(%r14,%r15,1)
85af(5): jmp 0xfffff9ca(%rip)
85b4(2): test %ebx,%ebx
85b6(6): jnz 0xfffff42d(%rip)
85bc(5): mov $0x1,0xd(%rsp)
85c1(3): test %r13,%r13
85c4(6): jnz 0x596(%rip)
85ca(7): lea 0x791d(%rip),%rax
85d1(9): mov $0x0,0x50(%rsp)
85da(5): mov $0x1,0xe(%rsp)
85df(5): mov $0x0,0x7c(%rsp)
85e4(3): xor %r12d,%r12d
85e7(5): mov $0x0,0xf(%rsp)
85ec(9): mov $0x1,0x18(%rsp)
85f5(5): mov %rax,0x48(%rsp)
85fa(6): mov $0x1,%r15d
8600(8): mov $0x2,0x8(%rsp)
8608(5): jmp 0xfffff41b(%rip)
860d(3): nop (%rax)
8610(2): test %ebx,%ebx
8612(6): jnz 0x3fb(%rip)
8618(3): test %r13,%r13
861b(6): jz 0x22b(%rip)
8621(4): mov $0x22,(%r14)
8625(5): mov $0x1,0xe(%rsp)
862a(3): xor %r12d,%r12d
862d(5): mov $0x0,0x7c(%rsp)
8632(9): mov $0x0,0x50(%rsp)
863b(7): lea 0x7011(%rip),%rax
8642(5): mov $0x0,0xf(%rsp)
8647(5): mov $0x1,0xd(%rsp)
864c(9): mov $0x1,0x18(%rsp)
8655(6): mov $0x1,%r15d
865b(5): mov %rax,0x48(%rsp)
8660(5): jmp 0xfffff3c3(%rip)
8665(7): lea 0x6fe7(%rip),%rax
866c(5): mov $0x1,0xe(%rsp)
8671(5): mov $0x0,0x7c(%rsp)
8676(3): xor %r12d,%r12d
8679(9): mov $0x0,0x50(%rsp)
8682(5): mov $0x1,0xf(%rsp)
8687(5): mov $0x1,0xd(%rsp)
868c(9): mov $0x1,0x18(%rsp)
8695(3): xor %r15d,%r15d
8698(5): mov %rax,0x48(%rsp)
869d(8): mov $0x5,0x8(%rsp)
86a5(5): jmp 0xfffff37e(%rip)
86aa(5): mov $0x1,0xe(%rsp)
86af(5): mov $0x0,0x7c(%rsp)
86b4(3): xor %r12d,%r12d
86b7(9): mov $0x0,0x50(%rsp)
86c0(5): mov $0x0,0xf(%rsp)
86c5(3): xor %r15d,%r15d
86c8(5): mov $0x1,0xd(%rsp)
86cd(9): mov $0x0,0x18(%rsp)
86d6(9): mov $0x0,0x48(%rsp)
86df(5): jmp 0xfffff344(%rip)
86e4(5): cmp $0xa,0x8(%rsp)
86e9(2): jz 0x58(%rip)
86eb(7): lea 0x6f63(%rip),%rsi
86f2(2): xor %edi,%edi
86f4(5): mov $0x5,%edx
86f9(5): call 0xffff9727(%rip)
86fe(3): mov %rax,%rcx
8701(5): mov %rax,0x68(%rsp)
8706(7): lea 0x6f48(%rip),%rax
870d(3): cmp %rax,%rcx
8710(6): jz 0x39e(%rip)
8716(7): lea 0x77d1(%rip),%rsi
871d(2): xor %edi,%edi
871f(5): mov $0x5,%edx
8724(5): call 0xffff96fc(%rip)
8729(3): mov %rax,%rcx
872c(5): mov %rax,0x60(%rsp)
8731(7): lea 0x77b6(%rip),%rax
8738(3): cmp %rax,%rcx
873b(6): jz 0x389(%rip)
8741(3): xor %r15d,%r15d
8744(2): test %ebx,%ebx
8746(6): jz 0x1c7(%rip)
874c(2): test %ebx,%ebx
874e(5): mov 0x60(%rsp),%rbx
8753(5): setnz 0xf(%rsp)
8758(3): xor %r12d,%r12d
875b(3): mov %rbx,%rdi
875e(5): call 0xffff96e2(%rip)
8763(5): mov %rbx,0x48(%rsp)
8768(5): mov %rax,0x18(%rsp)
876d(5): mov $0x1,0xe(%rsp)
8772(5): mov $0x0,0x7c(%rsp)
8777(9): mov $0x0,0x50(%rsp)
8780(5): mov $0x1,0xd(%rsp)
8785(5): jmp 0xfffff29e(%rip)
878a(5): mov $0x1,0xe(%rsp)
878f(5): mov $0x0,0x7c(%rsp)
8794(3): xor %r12d,%r12d
8797(9): mov $0x0,0x50(%rsp)
87a0(5): mov $0x0,0xf(%rsp)
87a5(3): xor %r15d,%r15d
87a8(5): mov $0x0,0xd(%rsp)
87ad(9): mov $0x0,0x18(%rsp)
87b6(9): mov $0x0,0x48(%rsp)
87bf(5): jmp 0xfffff264(%rip)
87c4(5): mov $0x1,0xe(%rsp)
87c9(5): mov $0x0,0x7c(%rsp)
87ce(3): xor %r12d,%r12d
87d1(9): mov $0x0,0x50(%rsp)
87da(5): mov $0x1,0xf(%rsp)
87df(5): mov $0x1,0xd(%rsp)
87e4(5): jmp 0xfffff21f(%rip)
87e9(3): cmp %r15,%r13
87ec(2): jbe 0x7(%rip)
87ee(5): mov $0x30,0x0(%r14,%r15,1)
87f3(4): lea 0x2(%rcx),%rax
87f7(3): cmp %rax,%r13
87fa(2): jbe 0x8(%rip)
87fc(6): mov $0x30,0x2(%r14,%rcx,1)
8802(3): mov %r12d,%eax
8805(4): lea 0x3(%rcx),%r15
8809(3): xor %r12d,%r12d
880c(5): mov $0x30,%ebx
8811(5): jmp 0xfffff367(%rip)
8816(a): nop 0x0(%rax,%rax,1)
8820(5): movzx 0xf(%rsp),%ebx
8825(3): mov %r11,%rbp
8828(4): mov %bl,0xd(%rsp)
882c(5): jmp 0xfffffcad(%rip)
8831(5): movzx 0xd(%rsp),%edx
8836(3): xor %r12d,%r12d
8839(5): jmp 0xfffffb07(%rip)
883e(3): xor %r10d,%r10d
8841(5): jmp 0xfffffbbc(%rip)
8846(9): mov $0x0,0x50(%rsp)
884f(5): mov $0x1,0xe(%rsp)
8854(3): xor %r12d,%r12d
8857(5): mov $0x0,0x7c(%rsp)
885c(5): jmp 0xfffffddf(%rip)
8861(5): mov 0x30(%rsp),%r11
8866(3): mov %r14,%rsi
8869(3): mov %r13,%rcx
886c(3): mov %rbx,%rax
886f(3): mov %rbx,%rdi
8872(6): movzx 0x7d(%rsp),%r8d
8878(5): movzx 0x7e(%rsp),%ebx
887d(8): mov 0x88(%rsp),%r9
8885(3): cmp %r11,%rsi
8888(6): movzx 0x7f(%rsp),%r10d
888e(8): mov 0x80(%rsp),%r15
8896(5): mov 0x40(%rsp),%r14
889b(5): mov 0x70(%rsp),%r13
88a0(2): jnb 0x28(%rip)
88a2(3): cmp $0x0,(%rcx)
88a5(2): jnz 0x12(%rip)
88a7(2): jmp 0x21(%rip)
88a9(7): nop 0x0(%rax)
88b0(5): cmp $0x0,0x0(%r9,%rax,1)
88b5(2): jz 0x10(%rip)
88b7(4): add $0x1,%rax
88bb(5): lea 0x0(%rbp,%rax,1),%rdx
88c0(3): cmp %rdx,%r11
88c3(2): jnbe 0xffffffed(%rip)
88c5(3): mov %rax,%rdi
88c8(5): movzx 0xd(%rsp),%edx
88cd(3): xor %r12d,%r12d
88d0(5): jmp 0xfffffa66(%rip)
88d5(3): mov %rbx,%rdi
88d8(6): movzx 0x7d(%rsp),%r8d
88de(5): movzx 0x7e(%rsp),%ebx
88e3(6): movzx 0x7f(%rsp),%r10d
88e9(8): mov 0x80(%rsp),%r15
88f1(3): xor %r12d,%r12d
88f4(5): mov 0x40(%rsp),%r14
88f9(5): mov 0x70(%rsp),%r13
88fe(5): mov 0x30(%rsp),%r11
8903(5): movzx 0xd(%rsp),%edx
8908(5): jmp 0xfffffa2e(%rip)
890d(5): mov 0x68(%rsp),%rdx
8912(3): movzx (%rdx),%eax
8915(2): test %al,%al
8917(6): jz 0xfffffe35(%rip)
891d(3): nop (%rax)
8920(3): cmp %r15,%r13
8923(2): jbe 0x6(%rip)
8925(4): mov %al,0x0(%r14,%r15,1)
8929(4): add $0x1,%r15
892d(5): movzx 0x0(%rdx,%r15,1),%eax
8932(2): test %al,%al
8934(2): jnz 0xffffffec(%rip)
8936(5): jmp 0xfffffe16(%rip)
893b(2): mov %edx,%eax
893d(5): jmp 0xfffff55a(%rip)
8942(4): movzx 0x0(%rax,%rcx,1),%ebx
8946(3): cmp $0x3e,%bl
8949(6): jnbe 0xfffff877(%rip)
894f(a): mov $0x8070630310989004800,%rax
8959(4): bt %rbx,%rax
895d(6): jnb 0xfffff863(%rip)
8963(5): cmp $0x0,0xf(%rsp)
8968(6): jnz 0x1ea(%rip)
896e(3): cmp %r15,%r13
8971(2): jbe 0x7(%rip)
8973(5): mov $0x3f,0x0(%r14,%r15,1)
8978(4): lea 0x1(%r15),%rax
897c(3): cmp %rax,%r13
897f(2): jbe 0x8(%rip)
8981(6): mov $0x22,0x1(%r14,%r15,1)
8987(4): lea 0x2(%r15),%rax
898b(3): cmp %rax,%r13
898e(2): jbe 0x8(%rip)
8990(6): mov $0x22,0x2(%r14,%r15,1)
8996(4): lea 0x3(%r15),%rax
899a(3): cmp %rax,%r13
899d(2): jbe 0x8(%rip)
899f(6): mov $0x3f,0x3(%r14,%r15,1)
89a5(4): add $0x4,%r15
89a9(2): xor %edx,%edx
89ab(3): xor %r12d,%r12d
89ae(2): xor %eax,%eax
89b0(3): mov %rcx,%rbp
89b3(5): jmp 0xfffff1c5(%rip)
89b8(2): test %ebx,%ebx
89ba(6): jz 0x18e(%rip)
89c0(7): lea 0x7527(%rip),%rax
89c7(5): mov $0x1,0xe(%rsp)
89cc(5): mov $0x0,0x7c(%rsp)
89d1(3): xor %r12d,%r12d
89d4(9): mov $0x0,0x50(%rsp)
89dd(5): mov $0x1,0xf(%rsp)
89e2(5): mov $0x0,0xd(%rsp)
89e7(9): mov $0x1,0x18(%rsp)
89f0(3): xor %r15d,%r15d
89f3(5): mov %rax,0x48(%rsp)
89f8(5): jmp 0xfffff02b(%rip)
89fd(3): nop (%rax)
8a00(3): mov %r11,%rbp
8a03(5): movzx 0xf(%rsp),%eax
8a08(5): jmp 0xfffffad1(%rip)
8a0d(7): lea 0x6c3f(%rip),%rax
8a14(5): mov $0x1,0xe(%rsp)
8a19(5): mov $0x0,0x7c(%rsp)
8a1e(3): xor %r12d,%r12d
8a21(9): mov $0x0,0x50(%rsp)
8a2a(5): mov $0x1,0xf(%rsp)
8a2f(5): mov $0x1,0xd(%rsp)
8a34(9): mov $0x1,0x18(%rsp)
8a3d(3): xor %r15d,%r15d
8a40(5): mov %rax,0x48(%rsp)
8a45(5): jmp 0xffffefde(%rip)
8a4a(2): mov %edx,%eax
8a4c(5): mov 0x48(%rsp),%rbx
8a51(3): test %rbx,%rbx
8a54(2): jz 0x2e(%rip)
8a56(2): test %al,%al
8a58(2): jz 0x2a(%rip)
8a5a(3): movzx (%rbx),%ecx
8a5d(3): mov %rbx,%rax
8a60(2): test %cl,%cl
8a62(2): jz 0x20(%rip)
8a64(3): mov %r15,%rdx
8a67(3): sub %r15,%rax
8a6a(3): cmp %rdx,%r13
8a6d(2): jbe 0x6(%rip)
8a6f(4): mov %cl,0x0(%r14,%rdx,1)
8a73(4): add $0x1,%rdx
8a77(4): movzx 0x0(%rax,%rdx,1),%ecx
8a7b(2): test %cl,%cl
8a7d(2): jnz 0xffffffed(%rip)
8a7f(3): mov %rdx,%r15
8a82(3): cmp %r15,%r13
8a85(6): jbe 0xfffffaa4(%rip)
8a8b(5): mov $0x0,0x0(%r14,%r15,1)
8a90(5): jmp 0xfffffa99(%rip)
8a95(5): cmp $0x2,0x8(%rsp)
8a9a(5): movzx 0xf(%rsp),%ebx
8a9f(3): mov %r11,%rbp
8aa2(3): setz %al
8aa5(4): mov %bl,0xd(%rsp)
8aa9(5): jmp 0xfffffa30(%rip)
8aae(4): mov 0x8(%rsp),%esi
8ab2(3): mov %rcx,%rdi
8ab5(5): call 0xffffedab(%rip)
8aba(5): mov %rax,0x68(%rsp)
8abf(5): jmp 0xfffffc57(%rip)
8ac4(4): mov 0x8(%rsp),%esi
8ac8(3): mov %rcx,%rdi
8acb(5): call 0xffffed95(%rip)
8ad0(5): mov %rax,0x60(%rsp)
8ad5(5): jmp 0xfffffc6c(%rip)
8ada(5): movzx 0xf(%rsp),%ebx
8adf(3): mov %r11,%rbp
8ae2(2): mov %edx,%eax
8ae4(4): mov %bl,0xd(%rsp)
8ae8(5): jmp 0xfffff9f1(%rip)
8aed(4): sub $0x8,%rsp
8af1(6): mov $0x5,%r8d
8af7(3): mov %r11,%rcx
8afa(4): push 0x68(%rsp)
8afe(4): push 0x78(%rsp)
8b02(3): mov %r14,%rdi
8b05(4): push 0x38(%rsp)
8b09(8): mov 0x98(%rsp),%r9d
8b11(5): mov 0x30(%rsp),%rdx
8b16(5): mov 0x70(%rsp),%rsi
8b1b(5): call 0xffffee35(%rip)
8b20(4): add $0x20,%rsp
8b24(3): mov %rax,%r15
8b27(5): jmp 0xfffffa02(%rip)
8b2c(5): movzx 0x7c(%rsp),%eax
8b31(5): jmp 0xffffff1b(%rip)
8b36(8): mov $0x2,0x8(%rsp)
8b3e(5): jmp 0xfffff99b(%rip)
8b43(5): call 0xffff933d(%rip)
8b48(5): mov $0x0,0xd(%rsp)
8b4d(5): jmp 0xfffffa74(%rip)
8b52(3): mov %r11,%rbp
8b55(5): jmp 0xfffff99b(%rip)
8b5a(5): mov $0x1,0xe(%rsp)
8b5f(2): xor %eax,%eax
8b61(3): xor %r12d,%r12d
8b64(9): mov $0x0,0x50(%rsp)
8b6d(5): jmp 0xfffff5a7(%rip)
8b72(3): mov %r13,%rdx
8b75(5): mov 0x50(%rsp),%r13
8b7a(5): jmp 0xfffff5f8(%rip)
8b7f(5): call 0xffff91b1(%rip)

"quotearg_n_options" :
8b90(2): push %r15
8b92(2): push %r14
8b94(3): movsxd %edi,%r15
8b97(2): push %r13
8b99(2): push %r12
8b9b(3): mov %rdx,%r14
8b9e(1): push %rbp
8b9f(1): push %rbx
8ba0(3): mov %rcx,%rbp
8ba3(4): sub $0x28,%rsp
8ba7(5): mov %rsi,0x8(%rsp)
8bac(5): call 0xffff9194(%rip)
8bb1(3): mov %rax,%r13
8bb4(2): mov (%rax),%eax
8bb6(3): test %r15d,%r15d
8bb9(7): mov 0x20a4c0(%rip),%rbx
8bc0(4): mov %eax,0x18(%rsp)
8bc4(6): js 0x16d(%rip)
8bca(7): cmp %r15d,0x20a4a7(%rip)
8bd1(2): jnle 0x64(%rip)
8bd3(7): cmp $0x7fffffff,%r15d
8bda(6): jz 0x15c(%rip)
8be0(4): lea 0x1(%r15),%r12d
8be4(7): lea 0x20a4a5(%rip),%rax
8beb(3): movsxd %r12d,%rsi
8bee(4): shl/sal $0x4,%rsi
8bf2(3): cmp %rax,%rbx
8bf5(6): jz 0x11b(%rip)
8bfb(3): mov %rbx,%rdi
8bfe(5): call 0x1002(%rip)
8c03(3): mov %rax,%rbx
8c06(7): mov %rax,0x20a473(%rip)
8c0d(7): movsxd 0x20a464(%rip),%rdi
8c14(3): mov %r12d,%edx
8c17(2): xor %esi,%esi
8c19(2): sub %edi,%edx
8c1b(4): shl/sal $0x4,%rdi
8c1f(3): movsxd %edx,%rdx
8c22(3): add %rbx,%rdi
8c25(4): shl/sal $0x4,%rdx
8c29(5): call 0xffff92f7(%rip)
8c2e(7): mov %r12d,0x20a443(%rip)
8c35(3): mov 0x4(%rbp),%eax
8c38(4): shl/sal $0x4,%r15
8c3c(4): sub $0x8,%rsp
8c40(3): add %r15,%rbx
8c43(4): lea 0x8(%rbp),%r15
8c47(4): mov 0x0(%rbp),%r8d
8c4b(3): mov (%rbx),%r11
8c4e(4): mov 0x8(%rbx),%r12
8c52(3): mov %r14,%rcx
8c55(3): or $0x1,%eax
8c58(4): mov %eax,0x24(%rsp)
8c5c(3): push 0x30(%rbp)
8c5f(3): mov %eax,%r9d
8c62(3): push 0x28(%rbp)
8c65(2): push %r15
8c67(3): mov %r11,%rsi
8c6a(5): mov 0x28(%rsp),%rdx
8c6f(3): mov %r12,%rdi
8c72(5): mov %r11,0x30(%rsp)
8c77(5): call 0xffffecd9(%rip)
8c7c(4): add $0x20,%rsp
8c80(5): mov 0x10(%rsp),%r11
8c85(3): cmp %rax,%r11
8c88(2): jnbe 0x69(%rip)
8c8a(4): lea 0x1(%rax),%rsi
8c8e(7): lea 0x20a52b(%rip),%rax
8c95(3): cmp %rax,%r12
8c98(3): mov %rsi,(%rbx)
8c9b(2): jz 0x14(%rip)
8c9d(3): mov %r12,%rdi
8ca0(5): mov %rsi,0x10(%rsp)
8ca5(5): call 0xffff906b(%rip)
8caa(5): mov 0x10(%rsp),%rsi
8caf(3): mov %rsi,%rdi
8cb2(5): mov %rsi,0x10(%rsp)
8cb7(5): call 0xee9(%rip)
8cbc(4): sub $0x8,%rsp
8cc0(4): mov %rax,0x8(%rbx)
8cc4(4): mov 0x0(%rbp),%r8d
8cc8(3): push 0x30(%rbp)
8ccb(3): push 0x28(%rbp)
8cce(3): mov %r14,%rcx
8cd1(2): push %r15
8cd3(5): mov 0x3c(%rsp),%r9d
8cd8(3): mov %rax,%rdi
8cdb(5): mov 0x28(%rsp),%rdx
8ce0(5): mov 0x30(%rsp),%rsi
8ce5(3): mov %rax,%r12
8ce8(5): call 0xffffec68(%rip)
8ced(4): add $0x20,%rsp
8cf1(4): mov 0x18(%rsp),%eax
8cf5(4): mov %eax,0x0(%r13)
8cf9(4): add $0x28,%rsp
8cfd(3): mov %r12,%rax
8d00(1): pop %rbx
8d01(1): pop %rbp
8d02(2): pop %r12
8d04(2): pop %r13
8d06(2): pop %r14
8d08(2): pop %r15
8d0a(1): ret near (%rsp)
8d0b(5): nop 0x0(%rax,%rax,1)
8d10(2): xor %edi,%edi
8d12(5): call 0xeee(%rip)
8d17(8): movdqa 0x20a371(%rip),%xmm0
8d1f(3): mov %rax,%rbx
8d22(7): mov %rax,0x20a357(%rip)
8d29(3): movups %xmm0,(%rax)
8d2c(5): jmp 0xfffffee1(%rip)
8d31(5): call 0xffff8fff(%rip)
8d36(5): call 0x10ba(%rip)

"clone_quoting_options" :
8d40(2): push %r12
8d42(1): push %rbp
8d43(1): push %rbx
8d44(3): mov %rdi,%rbx
8d47(5): call 0xffff8ff9(%rip)
8d4c(3): mov (%rax),%r12d
8d4f(3): mov %rax,%rbp
8d52(7): lea 0x20a567(%rip),%rax
8d59(3): test %rbx,%rbx
8d5c(5): mov $0x38,%esi
8d61(4): cmove %rax,%rbx
8d65(3): mov %rbx,%rdi
8d68(5): call 0x1038(%rip)
8d6d(4): mov %r12d,0x0(%rbp)
8d71(1): pop %rbx
8d72(1): pop %rbp
8d73(2): pop %r12
8d75(1): ret near (%rsp)

"get_quoting_style" :
8d80(7): lea 0x20a539(%rip),%rax
8d87(3): test %rdi,%rdi
8d8a(4): cmove %rax,%rdi
8d8e(2): mov (%rdi),%eax
8d90(1): ret near (%rsp)

"set_quoting_style" :
8da0(7): lea 0x20a519(%rip),%rax
8da7(3): test %rdi,%rdi
8daa(4): cmove %rax,%rdi
8dae(2): mov %esi,(%rdi)
8db0(1): ret near (%rsp)

"set_char_quoting" :
8dc0(7): lea 0x20a4f9(%rip),%rax
8dc7(3): test %rdi,%rdi
8dca(2): mov %esi,%ecx
8dcc(4): cmove %rax,%rdi
8dd0(2): mov %esi,%eax
8dd2(3): and $0x1f,%ecx
8dd5(3): shr $0x5,%al
8dd8(3): movzx %al,%eax
8ddb(5): lea 0x8(%rdi,%rax,4),%rdi
8de0(2): mov (%rdi),%esi
8de2(2): mov %esi,%eax
8de4(2): shr %cl,%eax
8de6(2): xor %eax,%edx
8de8(3): and $0x1,%eax
8deb(3): and $0x1,%edx
8dee(2): shl/sal %cl,%edx
8df0(2): xor %esi,%edx
8df2(2): mov %edx,(%rdi)
8df4(1): ret near (%rsp)

"set_quoting_flags" :
8e00(7): lea 0x20a4b9(%rip),%rax
8e07(3): test %rdi,%rdi
8e0a(4): cmove %rax,%rdi
8e0e(3): mov 0x4(%rdi),%eax
8e11(3): mov %esi,0x4(%rdi)
8e14(1): ret near (%rsp)

"set_custom_quoting" :
8e20(7): lea 0x20a499(%rip),%rax
8e27(3): test %rdi,%rdi
8e2a(4): cmove %rax,%rdi
8e2e(3): test %rsi,%rsi
8e31(6): mov $0xa,(%rdi)
8e37(2): jz 0x10(%rip)
8e39(3): test %rdx,%rdx
8e3c(2): jz 0xb(%rip)
8e3e(4): mov %rsi,0x28(%rdi)
8e42(4): mov %rdx,0x30(%rdi)
8e46(1): ret near (%rsp)
8e47(4): sub $0x8,%rsp
8e4b(5): call 0xffff8ee5(%rip)

"quotearg_buffer" :
8e50(2): push %r15
8e52(2): push %r14
8e54(7): lea 0x20a465(%rip),%rax
8e5b(2): push %r13
8e5d(2): push %r12
8e5f(3): mov %rdi,%r13
8e62(1): push %rbp
8e63(1): push %rbx
8e64(3): mov %r8,%rbx
8e67(3): mov %rsi,%r14
8e6a(3): mov %rdx,%r15
8e6d(4): sub $0x18,%rsp
8e71(3): test %r8,%r8
8e74(4): cmove %rax,%rbx
8e78(5): mov %rcx,0x8(%rsp)
8e7d(5): call 0xffff8ec3(%rip)
8e82(3): mov (%rax),%r12d
8e85(3): mov %rax,%rbp
8e88(4): lea 0x8(%rbx),%rax
8e8c(4): sub $0x8,%rsp
8e90(4): mov 0x4(%rbx),%r9d
8e94(3): push 0x30(%rbx)
8e97(3): mov (%rbx),%r8d
8e9a(3): push 0x28(%rbx)
8e9d(3): mov %r15,%rdx
8ea0(1): push %rax
8ea1(5): mov 0x28(%rsp),%rcx
8ea6(3): mov %r14,%rsi
8ea9(3): mov %r13,%rdi
8eac(5): call 0xffffeaa4(%rip)
8eb1(4): mov %r12d,0x0(%rbp)
8eb5(4): add $0x38,%rsp
8eb9(1): pop %rbx
8eba(1): pop %rbp
8ebb(2): pop %r12
8ebd(2): pop %r13
8ebf(2): pop %r14
8ec1(2): pop %r15
8ec3(1): ret near (%rsp)

"quotearg_alloc_mem" :
8ed0(2): push %r15
8ed2(2): push %r14
8ed4(7): lea 0x20a3e5(%rip),%rax
8edb(2): push %r13
8edd(2): push %r12
8edf(3): mov %rdx,%r12
8ee2(1): push %rbp
8ee3(1): push %rbx
8ee4(3): mov %rcx,%rbx
8ee7(3): mov %rdi,%r14
8eea(3): mov %rsi,%r15
8eed(4): sub $0x38,%rsp
8ef1(3): test %rcx,%rcx
8ef4(4): cmove %rax,%rbx
8ef8(2): xor %ebp,%ebp
8efa(5): call 0xffff8e46(%rip)
8eff(3): test %r12,%r12
8f02(3): mov %rax,%r13
8f05(2): mov (%rax),%eax
8f07(4): setz %bpl
8f0b(3): or 0x4(%rbx),%ebp
8f0e(4): lea 0x8(%rbx),%r10
8f12(4): sub $0x8,%rsp
8f16(3): mov (%rbx),%r8d
8f19(3): mov %r15,%rcx
8f1c(4): mov %eax,0x14(%rsp)
8f20(3): push 0x30(%rbx)
8f23(3): mov %r14,%rdx
8f26(3): push 0x28(%rbx)
8f29(2): push %r10
8f2b(2): xor %esi,%esi
8f2d(3): mov %ebp,%r9d
8f30(2): xor %edi,%edi
8f32(5): mov %r10,0x40(%rsp)
8f37(5): call 0xffffea19(%rip)
8f3c(4): lea 0x1(%rax),%rsi
8f40(5): mov %rax,0x48(%rsp)
8f45(4): add $0x20,%rsp
8f49(3): mov %rsi,%rdi
8f4c(5): mov %rsi,0x18(%rsp)
8f51(5): call 0xc4f(%rip)
8f56(5): mov %rax,0x10(%rsp)
8f5b(4): sub $0x8,%rsp
8f5f(3): push 0x30(%rbx)
8f62(3): push 0x28(%rbx)
8f65(5): mov 0x38(%rsp),%r10
8f6a(3): mov %ebp,%r9d
8f6d(3): mov (%rbx),%r8d
8f70(3): mov %r15,%rcx
8f73(3): mov %r14,%rdx
8f76(3): mov %rax,%rdi
8f79(2): push %r10
8f7b(5): mov 0x38(%rsp),%rsi
8f80(5): call 0xffffe9d0(%rip)
8f85(4): mov 0x2c(%rsp),%eax
8f89(4): add $0x20,%rsp
8f8d(3): test %r12,%r12
8f90(4): mov %eax,0x0(%r13)
8f94(2): jz 0xb(%rip)
8f96(5): mov 0x28(%rsp),%r11
8f9b(4): mov %r11,(%r12)
8f9f(5): mov 0x10(%rsp),%rax
8fa4(4): add $0x38,%rsp
8fa8(1): pop %rbx
8fa9(1): pop %rbp
8faa(2): pop %r12
8fac(2): pop %r13
8fae(2): pop %r14
8fb0(2): pop %r15
8fb2(1): ret near (%rsp)

"quotearg_alloc" :
8fc0(3): mov %rdx,%rcx
8fc3(2): xor %edx,%edx
8fc5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
8fd0(6): mov 0x20a0a2(%rip),%eax
8fd6(2): push %r12
8fd8(7): mov 0x20a0a1(%rip),%r12
8fdf(1): push %rbp
8fe0(1): push %rbx
8fe1(3): cmp $0x1,%eax
8fe4(2): jle 0x2d(%rip)
8fe6(3): sub $0x2,%eax
8fe9(5): lea 0x18(%r12),%rbx
8fee(4): shl/sal $0x4,%rax
8ff2(5): lea 0x28(%r12,%rax,1),%rbp
8ff7(9): nop 0x0(%rax,%rax,1)
9000(3): mov (%rbx),%rdi
9003(4): add $0x10,%rbx
9007(5): call 0xffff8d09(%rip)
900c(3): cmp %rbp,%rbx
900f(2): jnz 0xfffffff1(%rip)
9011(5): mov 0x8(%r12),%rdi
9016(7): lea 0x20a1a3(%rip),%rbx
901d(3): cmp %rbx,%rdi
9020(2): jz 0x19(%rip)
9022(5): call 0xffff8cee(%rip)
9027(b): mov $0x100,0x20a05e(%rip)
9032(7): mov %rbx,0x20a05f(%rip)
9039(7): lea 0x20a050(%rip),%rbx
9040(3): cmp %rbx,%r12
9043(2): jz 0x11(%rip)
9045(3): mov %r12,%rdi
9048(5): call 0xffff8cc8(%rip)
904d(7): mov %rbx,0x20a02c(%rip)
9054(1): pop %rbx
9055(a): mov $0x1,0x20a019(%rip)
905f(1): pop %rbp
9060(2): pop %r12
9062(1): ret near (%rsp)

"quotearg_n" :
9070(7): lea 0x20a249(%rip),%rcx
9077(7): mov $0xffffffff,%rdx
907e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
9090(7): lea 0x20a229(%rip),%rcx
9097(5): jmp 0xfffffaf9(%rip)

"quotearg" :
90a0(7): lea 0x20a219(%rip),%rcx
90a7(3): mov %rdi,%rsi
90aa(7): mov $0xffffffff,%rdx
90b1(2): xor %edi,%edi
90b3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
90c0(7): lea 0x20a1f9(%rip),%rcx
90c7(3): mov %rsi,%rdx
90ca(3): mov %rdi,%rsi
90cd(2): xor %edi,%edi
90cf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
90e0(4): sub $0x48,%rsp
90e4(3): mov %rdx,%rax
90e7(9): mov $0x28,%rdx
90f0(5): mov %rdx,0x38(%rsp)
90f5(2): xor %edx,%edx
90f7(3): cmp $0xa,%esi
90fa(2): jz 0x6a(%rip)
90fc(3): mov %esi,(%rsp)
90ff(3): mov %rsp,%rcx
9102(7): mov $0xffffffff,%rdx
9109(3): mov %rax,%rsi
910c(9): mov $0x0,0x4(%rsp)
9115(9): mov $0x0,0xc(%rsp)
911e(9): mov $0x0,0x14(%rsp)
9127(9): mov $0x0,0x1c(%rsp)
9130(9): mov $0x0,0x24(%rsp)
9139(9): mov $0x0,0x2c(%rsp)
9142(8): mov $0x0,0x34(%rsp)
914a(5): call 0xfffffa46(%rip)
914f(5): mov 0x38(%rsp),%rcx
9154(9): xor $0x28,%rcx
915d(2): jnz 0xc(%rip)
915f(4): add $0x48,%rsp
9163(1): ret near (%rsp)
9164(5): call 0xffff8bcc(%rip)
9169(5): call 0xffff8d17(%rip)

"quotearg_n_style_mem" :
9170(4): sub $0x48,%rsp
9174(3): mov %rdx,%rax
9177(3): mov %rcx,%rdx
917a(9): mov $0x28,%rcx
9183(5): mov %rcx,0x38(%rsp)
9188(2): xor %ecx,%ecx
918a(3): cmp $0xa,%esi
918d(2): jz 0x63(%rip)
918f(3): mov %esi,(%rsp)
9192(3): mov %rsp,%rcx
9195(3): mov %rax,%rsi
9198(9): mov $0x0,0x4(%rsp)
91a1(9): mov $0x0,0xc(%rsp)
91aa(9): mov $0x0,0x14(%rsp)
91b3(9): mov $0x0,0x1c(%rsp)
91bc(9): mov $0x0,0x24(%rsp)
91c5(9): mov $0x0,0x2c(%rsp)
91ce(8): mov $0x0,0x34(%rsp)
91d6(5): call 0xfffff9ba(%rip)
91db(5): mov 0x38(%rsp),%rdx
91e0(9): xor $0x28,%rdx
91e9(2): jnz 0xc(%rip)
91eb(4): add $0x48,%rsp
91ef(1): ret near (%rsp)
91f0(5): call 0xffff8b40(%rip)
91f5(5): call 0xffff8c8b(%rip)

"quotearg_style" :
9200(3): mov %rsi,%rdx
9203(2): mov %edi,%esi
9205(2): xor %edi,%edi
9207(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
9210(3): mov %rdx,%rcx
9213(3): mov %rsi,%rdx
9216(2): mov %edi,%esi
9218(2): xor %edi,%edi
921a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
9220(4): sub $0x48,%rsp
9224(2): mov %edx,%ecx
9226(9): mov $0x28,%rax
922f(5): mov %rax,0x38(%rsp)
9234(2): xor %eax,%eax
9236(7): mov 0x20a0b3(%rip),%rax
923d(3): mov %rsp,%r8
9240(3): and $0x1f,%ecx
9243(8): movdqa 0x20a075(%rip),%xmm0
924b(5): mov %rax,0x30(%rsp)
9250(2): mov %edx,%eax
9252(4): movaps %xmm0,(%rsp)
9256(3): shr $0x5,%al
9259(3): movzx %al,%eax
925c(5): lea 0x8(%r8,%rax,4),%r9
9261(8): movdqa 0x20a067(%rip),%xmm0
9269(5): movaps %xmm0,0x10(%rsp)
926e(8): movdqa 0x20a06a(%rip),%xmm0
9276(5): movaps %xmm0,0x20(%rsp)
927b(3): mov (%r9),%edx
927e(2): mov %edx,%eax
9280(2): shr %cl,%eax
9282(2): not %eax
9284(3): and $0x1,%eax
9287(2): shl/sal %cl,%eax
9289(3): mov %r8,%rcx
928c(2): xor %edx,%eax
928e(3): mov %rsi,%rdx
9291(3): mov %rdi,%rsi
9294(3): mov %eax,(%r9)
9297(2): xor %edi,%edi
9299(5): call 0xfffff8f7(%rip)
929e(5): mov 0x38(%rsp),%rsi
92a3(9): xor $0x28,%rsi
92ac(2): jnz 0x7(%rip)
92ae(4): add $0x48,%rsp
92b2(1): ret near (%rsp)
92b3(5): call 0xffff8bcd(%rip)

"quotearg_char" :
92c0(4): movsx %sil,%edx
92c4(7): mov $0xffffffff,%rsi
92cb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
92d0(5): mov $0x3a,%edx
92d5(7): mov $0xffffffff,%rsi
92dc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
92f0(5): mov $0x3a,%edx
92f5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
9300(4): sub $0x48,%rsp
9304(3): mov %rdx,%rax
9307(9): mov $0x28,%rdx
9310(5): mov %rdx,0x38(%rsp)
9315(2): xor %edx,%edx
9317(3): cmp $0xa,%esi
931a(2): jz 0x6a(%rip)
931c(3): mov %esi,(%rsp)
931f(3): mov %rsp,%rcx
9322(7): mov $0xffffffff,%rdx
9329(3): mov %rax,%rsi
932c(9): mov $0x0,0x4(%rsp)
9335(9): mov $0x4000000,0xc(%rsp)
933e(9): mov $0x0,0x14(%rsp)
9347(9): mov $0x0,0x1c(%rsp)
9350(9): mov $0x0,0x24(%rsp)
9359(9): mov $0x0,0x2c(%rsp)
9362(8): mov $0x0,0x34(%rsp)
936a(5): call 0xfffff826(%rip)
936f(5): mov 0x38(%rsp),%rcx
9374(9): xor $0x28,%rcx
937d(2): jnz 0xc(%rip)
937f(4): add $0x48,%rsp
9383(1): ret near (%rsp)
9384(5): call 0xffff89ac(%rip)
9389(5): call 0xffff8af7(%rip)

"quotearg_n_custom_mem" :
9390(4): sub $0x48,%rsp
9394(3): mov %rcx,%r9
9397(7): mov 0x209f52(%rip),%rcx
939e(8): movdqa 0x209f1a(%rip),%xmm0
93a6(9): mov $0x28,%rax
93af(5): mov %rax,0x38(%rsp)
93b4(2): xor %eax,%eax
93b6(4): movaps %xmm0,(%rsp)
93ba(3): test %rsi,%rsi
93bd(5): mov %rcx,0x30(%rsp)
93c2(7): mov $0xa,(%rsp)
93c9(8): movdqa 0x209eff(%rip),%xmm0
93d1(5): movaps %xmm0,0x10(%rsp)
93d6(8): movdqa 0x209f02(%rip),%xmm0
93de(5): movaps %xmm0,0x20(%rsp)
93e3(2): jz 0x34(%rip)
93e5(3): test %rdx,%rdx
93e8(2): jz 0x2f(%rip)
93ea(5): mov %rsi,0x28(%rsp)
93ef(5): mov %rdx,0x30(%rsp)
93f4(3): mov %rsp,%rcx
93f7(3): mov %r8,%rdx
93fa(3): mov %r9,%rsi
93fd(5): call 0xfffff793(%rip)
9402(5): mov 0x38(%rsp),%rdi
9407(9): xor $0x28,%rdi
9410(2): jnz 0xc(%rip)
9412(4): add $0x48,%rsp
9416(1): ret near (%rsp)
9417(5): call 0xffff8919(%rip)
941c(5): call 0xffff8a64(%rip)

"quotearg_n_custom" :
9430(7): mov $0xffffffff,%r8
9437(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
9440(3): mov %rdx,%rcx
9443(7): mov $0xffffffff,%r8
944a(3): mov %rsi,%rdx
944d(3): mov %rdi,%rsi
9450(2): xor %edi,%edi
9452(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
9460(3): mov %rcx,%r8
9463(3): mov %rdx,%rcx
9466(3): mov %rsi,%rdx
9469(3): mov %rdi,%rsi
946c(2): xor %edi,%edi
946e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
9480(7): lea 0x209bb9(%rip),%rcx
9487(5): jmp 0xfffff709(%rip)

"quote_mem" :
9490(7): lea 0x209ba9(%rip),%rcx
9497(3): mov %rsi,%rdx
949a(3): mov %rdi,%rsi
949d(2): xor %edi,%edi
949f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
94b0(7): lea 0x209b89(%rip),%rcx
94b7(7): mov $0xffffffff,%rdx
94be(5): jmp 0xfffff6d2(%rip)

"quote" :
94d0(7): lea 0x209b69(%rip),%rcx
94d7(3): mov %rdi,%rsi
94da(7): mov $0xffffffff,%rdx
94e1(2): xor %edi,%edi
94e3(5): jmp 0xfffff6ad(%rip)

"save_cwd" :
94f0(1): push %rbx
94f1(3): mov %rdi,%rbx
94f4(8): mov $0x0,0x8(%rdi)
94fc(7): lea 0x5db1(%rip),%rdi
9503(2): xor %eax,%eax
9505(5): mov $0x80000,%esi
950a(5): call 0x1d36(%rip)
950f(2): mov %eax,%edx
9511(2): mov %eax,(%rbx)
9513(2): xor %eax,%eax
9515(2): test %edx,%edx
9517(2): js 0x9(%rip)
9519(1): pop %rbx
951a(1): ret near (%rsp)
951b(5): nop 0x0(%rax,%rax,1)
9520(2): xor %esi,%esi
9522(2): xor %edi,%edi
9524(5): call 0xffff8a0c(%rip)
9529(3): test %rax,%rax
952c(4): mov %rax,0x8(%rbx)
9530(3): setz %al
9533(3): movzx %al,%eax
9536(2): neg %eax
9538(1): pop %rbx
9539(1): ret near (%rsp)

"restore_cwd" :
9540(2): mov (%rdi),%eax
9542(2): test %eax,%eax
9544(2): js 0xc(%rip)
9546(2): mov %eax,%edi
9548(5): jmp 0xffff8b78(%rip)
954d(3): nop (%rax)
9550(4): mov 0x8(%rdi),%rdi
9554(5): jmp 0xa5c(%rip)

"free_cwd" :
9560(1): push %rbx
9561(3): mov %rdi,%rbx
9564(2): mov (%rdi),%edi
9566(2): test %edi,%edi
9568(2): js 0x7(%rip)
956a(5): call 0xffff89e6(%rip)
956f(4): mov 0x8(%rbx),%rdi
9573(1): pop %rbx
9574(5): jmp 0xffff879c(%rip)

"version_etc_arn" :
9580(2): push %r15
9582(2): push %r14
9584(2): push %r13
9586(2): push %r12
9588(3): mov %r9,%r12
958b(1): push %rbp
958c(1): push %rbx
958d(3): mov %rdi,%rbp
9590(3): mov %r8,%rbx
9593(4): sub $0x28,%rsp
9597(3): test %rsi,%rsi
959a(6): jz 0x11e(%rip)
95a0(3): mov %rdx,%r8
95a3(7): lea 0x657e(%rip),%rdx
95aa(3): mov %rcx,%r9
95ad(2): xor %eax,%eax
95af(3): mov %rsi,%rcx
95b2(5): mov $0x1,%esi
95b7(5): call 0xffff8bf9(%rip)
95bc(7): lea 0x6578(%rip),%rsi
95c3(2): xor %edi,%edi
95c5(5): mov $0x5,%edx
95ca(5): call 0xffff8856(%rip)
95cf(7): lea 0x688a(%rip),%rdx
95d6(3): mov %rax,%rcx
95d9(6): mov $0x7e3,%r8d
95df(5): mov $0x1,%esi
95e4(3): mov %rbp,%rdi
95e7(2): xor %eax,%eax
95e9(5): call 0xffff8bc7(%rip)
95ee(7): lea 0x65d3(%rip),%rsi
95f5(2): xor %edi,%edi
95f7(5): mov $0x5,%edx
95fc(5): call 0xffff8824(%rip)
9601(3): mov %rbp,%rsi
9604(3): mov %rax,%rdi
9607(5): call 0xffff8989(%rip)
960c(4): cmp $0x9,%r12
9610(6): jnbe 0x340(%rip)
9616(7): lea 0x6807(%rip),%rdx
961d(4): movsxd 0x0(%rdx,%r12,4),%rax
9621(3): add %rdx,%rax
9624(2): jmp %rax
9626(a): nop 0x0(%rax,%rax,1)
9630(4): mov 0x38(%rbx),%r9
9634(4): mov 0x10(%rbx),%rax
9638(7): lea 0x66f9(%rip),%rsi
963f(4): mov 0x8(%rbx),%r8
9643(5): mov $0x5,%edx
9648(2): xor %edi,%edi
964a(4): mov 0x30(%rbx),%r13
964e(4): mov 0x28(%rbx),%r12
9652(5): mov %r9,0x10(%rsp)
9657(4): mov 0x20(%rbx),%r15
965b(4): mov 0x18(%rbx),%r14
965f(4): mov %rax,(%rsp)
9663(5): mov %r8,0x8(%rsp)
9668(3): mov (%rbx),%rbx
966b(5): call 0xffff87b5(%rip)
9670(4): sub $0x8,%rsp
9674(5): mov 0x18(%rsp),%r9
9679(3): mov %rax,%rdx
967c(3): mov %rbx,%rcx
967f(5): mov $0x1,%esi
9684(3): mov %rbp,%rdi
9687(2): xor %eax,%eax
9689(2): push %r9
968b(2): push %r13
968d(2): push %r12
968f(2): push %r15
9691(2): push %r14
9693(5): mov 0x30(%rsp),%r9
9698(5): mov 0x38(%rsp),%r8
969d(5): call 0xffff8b13(%rip)
96a2(4): add $0x30,%rsp
96a6(4): add $0x28,%rsp
96aa(1): pop %rbx
96ab(1): pop %rbp
96ac(2): pop %r12
96ae(2): pop %r13
96b0(2): pop %r14
96b2(2): pop %r15
96b4(1): ret near (%rsp)
96b5(3): nop (%rax)
96b8(3): mov %rcx,%r8
96bb(3): mov %rdx,%rcx
96be(7): lea 0x646f(%rip),%rdx
96c5(5): mov $0x1,%esi
96ca(2): xor %eax,%eax
96cc(5): call 0xffff8ae4(%rip)
96d1(5): jmp 0xfffffeeb(%rip)
96d6(a): nop 0x0(%rax,%rax,1)
96e0(4): mov 0x40(%rbx),%r10
96e4(4): mov 0x38(%rbx),%r9
96e8(7): lea 0x6679(%rip),%rsi
96ef(4): mov 0x10(%rbx),%rax
96f3(4): mov 0x8(%rbx),%r8
96f7(5): mov $0x5,%edx
96fc(4): mov 0x30(%rbx),%r13
9700(4): mov 0x28(%rbx),%r12
9704(4): mov 0x20(%rbx),%r15
9708(4): mov 0x18(%rbx),%r14
970c(3): mov (%rbx),%rbx
970f(5): mov %r10,0x18(%rsp)
9714(5): mov %r9,0x10(%rsp)
9719(4): mov %rax,(%rsp)
971d(5): mov %r8,0x8(%rsp)
9722(2): xor %edi,%edi
9724(5): call 0xffff86fc(%rip)
9729(5): mov 0x18(%rsp),%r10
972e(2): push %r10
9730(5): jmp 0xffffff44(%rip)
9735(3): nop (%rax)
9738(3): mov (%rbx),%rbx
973b(7): lea 0x63fd(%rip),%rsi
9742(5): mov $0x5,%edx
9747(2): xor %edi,%edi
9749(5): call 0xffff86d7(%rip)
974e(4): add $0x28,%rsp
9752(3): mov %rbx,%rcx
9755(3): mov %rbp,%rdi
9758(1): pop %rbx
9759(1): pop %rbp
975a(2): pop %r12
975c(2): pop %r13
975e(2): pop %r14
9760(2): pop %r15
9762(3): mov %rax,%rdx
9765(5): mov $0x1,%esi
976a(2): xor %eax,%eax
976c(5): jmp 0xffff8a44(%rip)
9771(7): nop 0x0(%rax)
9778(4): mov 0x8(%rbx),%r12
977c(7): lea 0x63cc(%rip),%rsi
9783(3): mov (%rbx),%rbx
9786(5): mov $0x5,%edx
978b(2): xor %edi,%edi
978d(5): call 0xffff8693(%rip)
9792(4): add $0x28,%rsp
9796(3): mov %r12,%r8
9799(3): mov %rbx,%rcx
979c(3): mov %rbp,%rdi
979f(3): mov %rax,%rdx
97a2(5): mov $0x1,%esi
97a7(1): pop %rbx
97a8(1): pop %rbp
97a9(2): pop %r12
97ab(2): pop %r13
97ad(2): pop %r14
97af(2): pop %r15
97b1(2): xor %eax,%eax
97b3(5): jmp 0xffff89fd(%rip)
97b8(8): nop 0x0(%rax,%rax,1)
97c0(4): mov 0x10(%rbx),%r13
97c4(4): mov 0x8(%rbx),%r12
97c8(7): lea 0x6397(%rip),%rsi
97cf(3): mov (%rbx),%rbx
97d2(5): mov $0x5,%edx
97d7(2): xor %edi,%edi
97d9(5): call 0xffff8647(%rip)
97de(4): add $0x28,%rsp
97e2(3): mov %r13,%r9
97e5(3): mov %r12,%r8
97e8(3): mov %rbx,%rcx
97eb(3): mov %rbp,%rdi
97ee(3): mov %rax,%rdx
97f1(1): pop %rbx
97f2(1): pop %rbp
97f3(2): pop %r12
97f5(2): pop %r13
97f7(2): pop %r14
97f9(2): pop %r15
97fb(5): mov $0x1,%esi
9800(2): xor %eax,%eax
9802(5): jmp 0xffff89ae(%rip)
9807(9): nop 0x0(%rax,%rax,1)
9810(7): lea 0x6481(%rip),%rsi
9817(5): mov $0x5,%edx
981c(2): xor %edi,%edi
981e(4): mov 0x18(%rbx),%r14
9822(4): mov 0x10(%rbx),%r13
9826(4): mov 0x8(%rbx),%r12
982a(3): mov (%rbx),%rbx
982d(5): call 0xffff85f3(%rip)
9832(4): sub $0x8,%rsp
9836(2): push %r14
9838(3): mov %rax,%rdx
983b(3): mov %r13,%r9
983e(3): mov %r12,%r8
9841(3): mov %rbx,%rcx
9844(3): mov %rbp,%rdi
9847(5): mov $0x1,%esi
984c(2): xor %eax,%eax
984e(5): call 0xffff8962(%rip)
9853(1): pop %rax
9854(1): pop %rdx
9855(4): add $0x28,%rsp
9859(1): pop %rbx
985a(1): pop %rbp
985b(2): pop %r12
985d(2): pop %r13
985f(2): pop %r14
9861(2): pop %r15
9863(1): ret near (%rsp)
9864(4): nop 0x0(%rax)
9868(4): mov 0x20(%rbx),%r15
986c(7): lea 0x6445(%rip),%rsi
9873(5): mov $0x5,%edx
9878(2): xor %edi,%edi
987a(4): mov 0x18(%rbx),%r14
987e(4): mov 0x10(%rbx),%r13
9882(4): mov 0x8(%rbx),%r12
9886(3): mov (%rbx),%rbx
9889(5): call 0xffff8597(%rip)
988e(2): push %r15
9890(2): jmp 0xffffffa6(%rip)
9892(6): nop 0x0(%rax,%rax,1)
9898(4): mov 0x8(%rbx),%r8
989c(4): mov 0x28(%rbx),%r12
98a0(7): lea 0x6439(%rip),%rsi
98a7(4): mov 0x20(%rbx),%r15
98ab(4): mov 0x18(%rbx),%r14
98af(5): mov $0x5,%edx
98b4(4): mov 0x10(%rbx),%r13
98b8(2): xor %edi,%edi
98ba(3): mov (%rbx),%rbx
98bd(4): mov %r8,(%rsp)
98c1(5): call 0xffff855f(%rip)
98c6(4): sub $0x8,%rsp
98ca(3): mov %r13,%r9
98cd(2): push %r12
98cf(2): push %r15
98d1(2): push %r14
98d3(5): mov 0x20(%rsp),%r8
98d8(3): mov %rbx,%rcx
98db(3): mov %rax,%rdx
98de(3): mov %rbp,%rdi
98e1(5): mov $0x1,%esi
98e6(2): xor %eax,%eax
98e8(5): call 0xffff88c8(%rip)
98ed(4): add $0x20,%rsp
98f1(4): add $0x28,%rsp
98f5(1): pop %rbx
98f6(1): pop %rbp
98f7(2): pop %r12
98f9(2): pop %r13
98fb(2): pop %r14
98fd(2): pop %r15
98ff(1): ret near (%rsp)
9900(4): mov 0x10(%rbx),%r9
9904(4): mov 0x30(%rbx),%r13
9908(7): lea 0x63f9(%rip),%rsi
990f(4): mov 0x28(%rbx),%r12
9913(4): mov 0x20(%rbx),%r15
9917(5): mov $0x5,%edx
991c(4): mov 0x18(%rbx),%r14
9920(4): mov 0x8(%rbx),%r8
9924(2): xor %edi,%edi
9926(5): mov %r9,0x8(%rsp)
992b(3): mov (%rbx),%rbx
992e(4): mov %r8,(%rsp)
9932(5): call 0xffff84ee(%rip)
9937(2): push %r13
9939(2): push %r12
993b(2): push %r15
993d(2): push %r14
993f(5): mov 0x28(%rsp),%r9
9944(2): jmp 0xffffff8f(%rip)
9946(a): nop 0x0(%rax,%rax,1)
9950(4): mov 0x40(%rbx),%r10
9954(4): mov 0x38(%rbx),%r9
9958(5): mov $0x5,%edx
995d(4): mov 0x10(%rbx),%rax
9961(4): mov 0x8(%rbx),%r8
9965(7): lea 0x6434(%rip),%rsi
996c(4): mov 0x30(%rbx),%r13
9970(4): mov 0x28(%rbx),%r12
9974(4): mov 0x20(%rbx),%r15
9978(4): mov 0x18(%rbx),%r14
997c(5): mov %r10,0x18(%rsp)
9981(5): mov %r9,0x10(%rsp)
9986(4): mov %rax,(%rsp)
998a(5): mov %r8,0x8(%rsp)
998f(3): mov (%rbx),%rbx
9992(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
99a0(3): xor %r9d,%r9d
99a3(4): cmp $0x0,(%r8)
99a7(2): jz 0x14(%rip)
99a9(7): nop 0x0(%rax)
99b0(4): add $0x1,%r9
99b4(5): cmp $0x0,0x0(%r8,%r9,8)
99b9(2): jnz 0xfffffff7(%rip)
99bb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
99c0(4): sub $0x68,%rsp
99c4(3): mov %r8,%r10
99c7(3): xor %r9d,%r9d
99ca(9): mov $0x28,%rax
99d3(5): mov %rax,0x58(%rsp)
99d8(2): xor %eax,%eax
99da(3): mov %rsp,%r8
99dd(3): nop (%rax)
99e0(3): mov (%r10),%eax
99e3(3): cmp $0x2f,%eax
99e6(2): jnbe 0x44(%rip)
99e8(3): mov %eax,%r11d
99eb(4): add 0x10(%r10),%r11
99ef(3): add $0x8,%eax
99f2(3): mov %eax,(%r10)
99f5(3): mov (%r11),%rax
99f8(3): test %rax,%rax
99fb(4): mov %rax,0x0(%r8,%r9,8)
99ff(2): jz 0xc(%rip)
9a01(4): add $0x1,%r9
9a05(4): cmp $0xa,%r9
9a09(2): jnz 0xffffffd7(%rip)
9a0b(5): call 0xfffffb75(%rip)
9a10(5): mov 0x58(%rsp),%rax
9a15(9): xor $0x28,%rax
9a1e(2): jnz 0x7(%rip)
9a20(4): add $0x68,%rsp
9a24(1): ret near (%rsp)
9a25(5): call 0xffff845b(%rip)
9a2a(4): mov 0x8(%r10),%r11
9a2e(4): lea 0x8(%r11),%rax
9a32(4): mov %rax,0x8(%r10)
9a36(2): jmp 0xffffffbf(%rip)

"version_etc" :
9a40(1): push %rbp
9a41(1): push %rbx
9a42(6): mov $0x20,%r10d
9a48(3): xor %r11d,%r11d
9a4b(7): sub $0xb8,%rsp
9a52(9): mov $0x28,%rax
9a5b(5): mov %rax,0x78(%rsp)
9a60(2): xor %eax,%eax
9a62(8): lea 0xd0(%rsp),%rax
9a6a(8): mov %r8,0xa0(%rsp)
9a72(8): lea 0xd0(%rsp),%rbx
9a7a(5): lea 0x20(%rsp),%r8
9a7f(8): mov %r9,0xa8(%rsp)
9a87(8): mov $0x20,0x8(%rsp)
9a8f(5): mov %rax,0x10(%rsp)
9a94(8): lea 0x80(%rsp),%rax
9a9c(3): xor %r9d,%r9d
9a9f(5): mov %rax,0x18(%rsp)
9aa4(3): mov %rax,%rbp
9aa7(9): nop 0x0(%rax,%rax,1)
9ab0(4): cmp $0x2f,%r10d
9ab4(2): jnbe 0x58(%rip)
9ab6(3): mov %r10d,%eax
9ab9(6): mov $0x1,%r11d
9abf(4): add $0x8,%r10d
9ac3(3): add %rbp,%rax
9ac6(3): mov (%rax),%rax
9ac9(3): test %rax,%rax
9acc(4): mov %rax,0x0(%r8,%r9,8)
9ad0(2): jz 0xc(%rip)
9ad2(4): add $0x1,%r9
9ad6(4): cmp $0xa,%r9
9ada(2): jnz 0xffffffd6(%rip)
9adc(3): test %r11b,%r11b
9adf(2): jnz 0x26(%rip)
9ae1(5): call 0xfffffa9f(%rip)
9ae6(5): mov 0x78(%rsp),%rax
9aeb(9): xor $0x28,%rax
9af4(2): jnz 0xc(%rip)
9af6(7): add $0xb8,%rsp
9afd(1): pop %rbx
9afe(1): pop %rbp
9aff(1): ret near (%rsp)
9b00(5): call 0xffff8380(%rip)
9b05(5): mov %r10d,0x8(%rsp)
9b0a(2): jmp 0xffffffd7(%rip)
9b0c(3): mov %rbx,%rax
9b0f(4): add $0x8,%rbx
9b13(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
9b20(1): push %rbx
9b21(7): lea 0x605a(%rip),%rsi
9b28(5): mov $0x5,%edx
9b2d(2): xor %edi,%edi
9b2f(5): call 0xffff82f1(%rip)
9b34(7): lea 0x605c(%rip),%rdx
9b3b(3): mov %rax,%rsi
9b3e(5): mov $0x1,%edi
9b43(2): xor %eax,%eax
9b45(5): call 0xffff85ab(%rip)
9b4a(7): lea 0x605c(%rip),%rsi
9b51(5): mov $0x5,%edx
9b56(2): xor %edi,%edi
9b58(5): call 0xffff82c8(%rip)
9b5d(7): lea 0x55a4(%rip),%rcx
9b64(7): lea 0x4341(%rip),%rdx
9b6b(3): mov %rax,%rsi
9b6e(5): mov $0x1,%edi
9b73(2): xor %eax,%eax
9b75(5): call 0xffff857b(%rip)
9b7a(7): mov 0x209527(%rip),%rbx
9b81(7): lea 0x6258(%rip),%rsi
9b88(2): xor %edi,%edi
9b8a(5): mov $0x5,%edx
9b8f(5): call 0xffff8291(%rip)
9b94(3): mov %rbx,%rsi
9b97(3): mov %rax,%rdi
9b9a(1): pop %rbx
9b9b(5): jmp 0xffff83f5(%rip)

"xmalloc" :
9ba0(1): push %rbx
9ba1(3): mov %rdi,%rbx
9ba4(5): call 0xffff848c(%rip)
9ba9(3): test %rax,%rax
9bac(2): jnz 0x7(%rip)
9bae(3): test %rbx,%rbx
9bb1(2): jnz 0x4(%rip)
9bb3(1): pop %rbx
9bb4(1): ret near (%rsp)
9bb5(5): call 0x23b(%rip)

"xnmalloc" :
9bc0(3): mov %rdi,%rax
9bc3(3): mul %rax,%rsi,%rdx
9bc6(3): mov %rax,%rdi
9bc9(3): seto %al
9bcc(3): test %rdi,%rdi
9bcf(2): js 0xc(%rip)
9bd1(3): movzx %al,%eax
9bd4(3): test %rax,%rax
9bd7(2): jnz 0x4(%rip)
9bd9(2): jmp 0xffffffc7(%rip)
9bdb(4): sub $0x8,%rsp
9bdf(5): call 0x211(%rip)

"xrealloc" :
9c00(3): test %rsi,%rsi
9c03(1): push %rbx
9c04(3): mov %rsi,%rbx
9c07(2): jnz 0x7(%rip)
9c09(3): test %rdi,%rdi
9c0c(2): jnz 0x1c(%rip)
9c0e(3): mov %rbx,%rsi
9c11(5): call 0xffff84bf(%rip)
9c16(3): test %rax,%rax
9c19(2): jnz 0x7(%rip)
9c1b(3): test %rbx,%rbx
9c1e(2): jnz 0x13(%rip)
9c20(1): pop %rbx
9c21(1): ret near (%rsp)
9c22(6): nop 0x0(%rax,%rax,1)
9c28(5): call 0xffff80e8(%rip)
9c2d(2): xor %eax,%eax
9c2f(1): pop %rbx
9c30(1): ret near (%rsp)
9c31(5): call 0x1bf(%rip)

"xnrealloc" :
9c40(3): mov %rsi,%rax
9c43(3): mul %rax,%rdx,%rdx
9c46(3): mov %rax,%rsi
9c49(3): seto %al
9c4c(3): test %rsi,%rsi
9c4f(2): js 0xc(%rip)
9c51(3): movzx %al,%eax
9c54(3): test %rax,%rax
9c57(2): jnz 0x4(%rip)
9c59(2): jmp 0xffffffa7(%rip)
9c5b(4): sub $0x8,%rsp
9c5f(5): call 0x191(%rip)

"x2nrealloc" :
9c70(3): test %rdi,%rdi
9c73(3): mov %rdx,%r9
9c76(3): mov (%rsi),%rcx
9c79(2): jz 0x37(%rip)
9c7b(2): xor %edx,%edx
9c7d(a): mov $0x6148914691236517204,%rax
9c87(3): div %r9,%rax
9c8a(3): cmp %rcx,%rax
9c8d(2): jbe 0x3e(%rip)
9c8f(3): mov %rcx,%rax
9c92(3): shr $0x1,%rax
9c95(5): lea 0x1(%rax,%rcx,1),%rcx
9c9a(3): mov %rcx,(%rsi)
9c9d(4): imul %r9,%rcx
9ca1(3): mov %rcx,%rsi
9ca4(5): jmp 0xffffff5c(%rip)
9ca9(7): nop 0x0(%rax)
9cb0(3): test %rcx,%rcx
9cb3(2): jz 0x25(%rip)
9cb5(3): mov %rcx,%rax
9cb8(3): mul %rax,%r9,%rdx
9cbb(3): seto %dl
9cbe(3): test %rax,%rax
9cc1(3): movzx %dl,%edx
9cc4(2): js 0x7(%rip)
9cc6(3): test %rdx,%rdx
9cc9(2): jz 0xffffffd1(%rip)
9ccb(4): sub $0x8,%rsp
9ccf(5): call 0x121(%rip)
9cd4(4): nop 0x0(%rax)
9cd8(2): xor %edx,%edx
9cda(5): mov $0x80,%eax
9cdf(3): xor %r8d,%r8d
9ce2(3): div %r9,%rax
9ce5(3): test %rax,%rax
9ce8(4): setz %r8b
9cec(4): lea 0x0(%r8,%rax,1),%rcx
9cf0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
9d00(3): test %rdi,%rdi
9d03(3): mov (%rsi),%rax
9d06(2): jz 0x2a(%rip)
9d08(a): mov $0x6148914691236517203,%rdx
9d12(3): cmp %rdx,%rax
9d15(2): jnbe 0x2c(%rip)
9d17(3): mov %rax,%rdx
9d1a(3): shr $0x1,%rdx
9d1d(5): lea 0x1(%rdx,%rax,1),%rax
9d22(3): mov %rax,(%rsi)
9d25(3): mov %rax,%rsi
9d28(5): jmp 0xfffffed8(%rip)
9d2d(3): nop (%rax)
9d30(3): test %rax,%rax
9d33(5): mov $0x80,%edx
9d38(4): cmove %rdx,%rax
9d3c(3): test %rax,%rax
9d3f(2): jns 0xffffffe3(%rip)
9d41(4): sub $0x8,%rsp
9d45(5): call 0xab(%rip)

"xzalloc" :
9d50(1): push %rbx
9d51(3): mov %rdi,%rbx
9d54(5): call 0xfffffe4c(%rip)
9d59(3): mov %rbx,%rdx
9d5c(2): xor %esi,%esi
9d5e(3): mov %rax,%rdi
9d61(1): pop %rbx
9d62(5): jmp 0xffff81be(%rip)

"xcalloc" :
9d70(3): mov %rdi,%rax
9d73(4): sub $0x8,%rsp
9d77(3): mul %rax,%rsi,%rdx
9d7a(3): seto %dl
9d7d(3): test %rax,%rax
9d80(2): js 0x19(%rip)
9d82(3): movzx %dl,%edx
9d85(3): test %rdx,%rdx
9d88(2): jnz 0x11(%rip)
9d8a(5): call 0xffff8216(%rip)
9d8f(3): test %rax,%rax
9d92(2): jz 0x7(%rip)
9d94(4): add $0x8,%rsp
9d98(1): ret near (%rsp)
9d99(5): call 0x57(%rip)

"xmemdup" :
9da0(1): push %rbp
9da1(1): push %rbx
9da2(3): mov %rdi,%rbp
9da5(3): mov %rsi,%rdi
9da8(3): mov %rsi,%rbx
9dab(4): sub $0x8,%rsp
9daf(5): call 0xfffffdf1(%rip)
9db4(4): add $0x8,%rsp
9db8(3): mov %rbx,%rdx
9dbb(3): mov %rbp,%rsi
9dbe(1): pop %rbx
9dbf(1): pop %rbp
9dc0(3): mov %rax,%rdi
9dc3(5): jmp 0xffff821d(%rip)

"xstrdup" :
9dd0(1): push %rbx
9dd1(3): mov %rdi,%rbx
9dd4(5): call 0xffff806c(%rip)
9dd9(3): mov %rbx,%rdi
9ddc(4): lea 0x1(%rax),%rsi
9de0(1): pop %rbx
9de1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
9df0(7): lea 0x6098(%rip),%rsi
9df7(4): sub $0x8,%rsp
9dfb(5): mov $0x5,%edx
9e00(2): xor %edi,%edi
9e02(5): call 0xffff801e(%rip)
9e07(6): mov 0x20921b(%rip),%edi
9e0d(7): lea 0x5556(%rip),%rdx
9e14(3): mov %rax,%rcx
9e17(2): xor %esi,%esi
9e19(2): xor %eax,%eax
9e1b(5): call 0xffff8305(%rip)
9e20(5): call 0xffff7f10(%rip)

"xgetcwd" :
9e30(1): push %rbx
9e31(2): xor %esi,%esi
9e33(2): xor %edi,%edi
9e35(5): call 0xffff80fb(%rip)
9e3a(3): test %rax,%rax
9e3d(3): mov %rax,%rbx
9e40(2): jz 0x10(%rip)
9e42(3): mov %rbx,%rax
9e45(1): pop %rbx
9e46(1): ret near (%rsp)
9e47(9): nop 0x0(%rax,%rax,1)
9e50(5): call 0xffff7ef0(%rip)
9e55(3): cmp $0xc,(%rax)
9e58(2): jnz 0xffffffea(%rip)
9e5a(5): call 0xffffff96(%rip)

"xasprintf" :
9e60(7): sub $0xd8,%rsp
9e67(2): test %al,%al
9e69(5): mov %rsi,0x28(%rsp)
9e6e(5): mov %rdx,0x30(%rsp)
9e73(5): mov %rcx,0x38(%rsp)
9e78(5): mov %r8,0x40(%rsp)
9e7d(5): mov %r9,0x48(%rsp)
9e82(2): jz 0x39(%rip)
9e84(5): movaps %xmm0,0x50(%rsp)
9e89(5): movaps %xmm1,0x60(%rsp)
9e8e(5): movaps %xmm2,0x70(%rsp)
9e93(8): movaps %xmm3,0x80(%rsp)
9e9b(8): movaps %xmm4,0x90(%rsp)
9ea3(8): movaps %xmm5,0xa0(%rsp)
9eab(8): movaps %xmm6,0xb0(%rsp)
9eb3(8): movaps %xmm7,0xc0(%rsp)
9ebb(9): mov $0x28,%rax
9ec4(5): mov %rax,0x18(%rsp)
9ec9(2): xor %eax,%eax
9ecb(8): lea 0xe0(%rsp),%rax
9ed3(3): mov %rsp,%rsi
9ed6(5): mov %rax,0x8(%rsp)
9edb(5): lea 0x20(%rsp),%rax
9ee0(7): mov $0x8,(%rsp)
9ee7(8): mov $0x30,0x4(%rsp)
9eef(5): mov %rax,0x10(%rsp)
9ef4(5): call 0x15ec(%rip)
9ef9(5): mov 0x18(%rsp),%rdx
9efe(9): xor $0x28,%rdx
9f07(2): jnz 0xa(%rip)
9f09(7): add $0xd8,%rsp
9f10(1): ret near (%rsp)
9f11(5): call 0xffff7f6f(%rip)

"cdb_free" :
9f20(2): mov (%rdi),%edi
9f22(2): test %edi,%edi
9f24(2): js 0x1c(%rip)
9f26(4): sub $0x8,%rsp
9f2a(5): call 0xffff8026(%rip)
9f2f(2): test %eax,%eax
9f31(2): jnz 0x11(%rip)
9f33(4): add $0x8,%rsp
9f37(1): ret near (%rsp)
9f38(8): nop 0x0(%rax,%rax,1)
9f40(2): REP ret near (%rsp)
9f42(7): lea 0x5fcf(%rip),%rcx
9f49(7): lea 0x5f50(%rip),%rsi
9f50(7): lea 0x5f6c(%rip),%rdi
9f57(5): mov $0x40,%edx
9f5c(5): call 0xffff7fb4(%rip)

"cdb_advance_fd" :
9f70(1): push %rbp
9f71(1): push %rbx
9f72(3): mov %rdi,%rbx
9f75(2): xor %eax,%eax
9f77(5): mov $0x10900,%edx
9f7c(4): sub $0x8,%rsp
9f80(2): mov (%rdi),%edi
9f82(5): call 0xffff7ede(%rip)
9f87(2): test %eax,%eax
9f89(2): js 0x17(%rip)
9f8b(2): mov %eax,%ebp
9f8d(3): mov %rbx,%rdi
9f90(5): call 0xffffff90(%rip)
9f95(2): mov %ebp,(%rbx)
9f97(2): xor %eax,%eax
9f99(4): add $0x8,%rsp
9f9d(1): pop %rbx
9f9e(1): pop %rbp
9f9f(1): ret near (%rsp)
9fa0(5): mov $0xffffffff,%eax
9fa5(2): jmp 0xfffffff4(%rip)

"chdir_long" :
9fb0(2): push %r15
9fb2(2): push %r14
9fb4(2): push %r13
9fb6(2): push %r12
9fb8(1): push %rbp
9fb9(1): push %rbx
9fba(3): mov %rdi,%rbp
9fbd(4): sub $0x18,%rsp
9fc1(9): mov $0x28,%rax
9fca(5): mov %rax,0x8(%rsp)
9fcf(2): xor %eax,%eax
9fd1(5): call 0xffff7e9f(%rip)
9fd6(2): test %eax,%eax
9fd8(2): mov %eax,%ebx
9fda(2): jz 0xf(%rip)
9fdc(5): call 0xffff7d64(%rip)
9fe1(3): cmp $0x24,(%rax)
9fe4(3): mov %rax,%r14
9fe7(2): jz 0x29(%rip)
9fe9(5): mov 0x8(%rsp),%rcx
9fee(9): xor $0x28,%rcx
9ff7(2): mov %ebx,%eax
9ff9(6): jnz 0x208(%rip)
9fff(4): add $0x18,%rsp
a003(1): pop %rbx
a004(1): pop %rbp
a005(2): pop %r12
a007(2): pop %r13
a009(2): pop %r14
a00b(2): pop %r15
a00d(1): ret near (%rsp)
a00e(2): nop 
a010(3): mov %rbp,%rdi
a013(5): call 0xffff7e2d(%rip)
a018(3): test %rax,%rax
a01b(3): mov %rax,%r12
a01e(8): mov $0xffffff9c,0x4(%rsp)
a026(6): jz 0x1e0(%rip)
a02c(6): cmp $0xfff,%rax
a032(6): jbe 0x1f3(%rip)
a038(7): lea 0x55ff(%rip),%rsi
a03f(3): mov %rbp,%rdi
a042(5): call 0xffff7f1e(%rip)
a047(4): cmp $0x2,%rax
a04b(3): mov %rax,%rbx
a04e(6): jz 0xd2(%rip)
a054(3): test %rax,%rax
a057(3): mov %rbp,%r15
a05a(6): jnz 0x166(%rip)
a060(4): cmp $0x2f,(%r15)
a064(6): jz 0x1ff(%rip)
a06a(3): add %r12,%rbp
a06d(3): cmp %rbp,%r15
a070(6): jnbe 0x1d4(%rip)
a076(3): mov %rbp,%rax
a079(5): lea 0x4(%rsp),%r12
a07e(3): sub %r15,%rax
a081(6): cmp $0xfff,%rax
a087(3): mov %r12,%r13
a08a(2): jnle 0x62(%rip)
a08c(5): jmp 0x104(%rip)
a091(7): nop 0x0(%rax)
a098(3): mov $0x0,(%rax)
a09b(3): sub %r15,%rax
a09e(6): cmp $0xfff,%rax
a0a4(6): jnle 0x13e(%rip)
a0aa(3): mov %r15,%rsi
a0ad(3): mov %r12,%rdi
a0b0(3): mov %r12,%r13
a0b3(5): call 0xfffffebd(%rip)
a0b8(2): test %eax,%eax
a0ba(3): mov $0x2f,(%rbx)
a0bd(6): jnz 0xbb(%rip)
a0c3(4): add $0x1,%rbx
a0c7(7): lea 0x5570(%rip),%rsi
a0ce(3): mov %rbx,%rdi
a0d1(5): call 0xffff7e8f(%rip)
a0d6(4): lea 0x0(%rbx,%rax,1),%r15
a0da(3): mov %rbp,%rax
a0dd(3): sub %r15,%rax
a0e0(6): cmp $0xfff,%rax
a0e6(6): jle 0xaa(%rip)
a0ec(5): mov $0x1000,%edx
a0f1(5): mov $0x2f,%esi
a0f6(3): mov %r15,%rdi
a0f9(5): call 0xffff8037(%rip)
a0fe(3): test %rax,%rax
a101(3): mov %rax,%rbx
a104(2): jnz 0xffffff94(%rip)
a106(7): mov $0x24,(%r14)
a10d(5): mov $0xffffffff,%ebx
a112(5): jmp 0xfffffed7(%rip)
a117(9): nop 0x0(%rax,%rax,1)
a120(5): lea 0xfffffffd(%r12),%rdx
a125(4): lea 0x3(%rbp),%rdi
a129(5): mov $0x2f,%esi
a12e(5): call 0xffff7e42(%rip)
a133(3): test %rax,%rax
a136(3): mov %rax,%rbx
a139(2): jz 0x4d(%rip)
a13b(5): lea 0x4(%rsp),%r13
a140(3): mov $0x0,(%rax)
a143(3): mov %rbp,%rsi
a146(3): mov %r13,%rdi
a149(5): call 0xfffffe27(%rip)
a14e(2): test %eax,%eax
a150(3): mov $0x2f,(%rbx)
a153(2): jnz 0x25(%rip)
a155(4): add $0x1,%rbx
a159(7): lea 0x54de(%rip),%rsi
a160(3): mov %rbx,%rdi
a163(5): call 0xffff7dfd(%rip)
a168(4): lea 0x0(%rbx,%rax,1),%r15
a16c(5): jmp 0xfffffef4(%rip)
a171(7): nop 0x0(%rax)
a178(3): mov (%r14),%ebx
a17b(3): mov %r13,%rdi
a17e(5): call 0xfffffda2(%rip)
a183(3): mov %ebx,(%r14)
a186(5): mov $0xffffffff,%ebx
a18b(5): jmp 0xfffffe5e(%rip)
a190(3): cmp %r15,%rbp
a193(2): jbe 0x11(%rip)
a195(3): mov %r15,%rsi
a198(3): mov %r13,%rdi
a19b(5): call 0xfffffdd5(%rip)
a1a0(2): test %eax,%eax
a1a2(2): jnz 0xffffffd6(%rip)
a1a4(4): mov 0x4(%rsp),%edi
a1a8(5): call 0xffff7f18(%rip)
a1ad(2): test %eax,%eax
a1af(2): mov %eax,%ebx
a1b1(2): jnz 0xffffffc7(%rip)
a1b3(3): mov %r13,%rdi
a1b6(5): call 0xfffffd6a(%rip)
a1bb(5): jmp 0xfffffe2e(%rip)
a1c0(5): lea 0x4(%rsp),%r13
a1c5(7): lea 0x5472(%rip),%rsi
a1cc(3): mov %r13,%rdi
a1cf(5): call 0xfffffda1(%rip)
a1d4(2): test %eax,%eax
a1d6(2): jnz 0xffffffa2(%rip)
a1d8(5): lea 0x0(%rbp,%rbx,1),%r15
a1dd(5): jmp 0xfffffe83(%rip)
a1e2(7): lea 0x5d3f(%rip),%rcx
a1e9(7): lea 0x5cb0(%rip),%rsi
a1f0(7): lea 0x5d08(%rip),%rdi
a1f7(5): mov $0xb3,%edx
a1fc(5): call 0xffff7d14(%rip)
a201(5): call 0xffff7c7f(%rip)
a206(7): lea 0x5d1b(%rip),%rcx
a20d(7): lea 0x5c8c(%rip),%rsi
a214(7): lea 0x5cb5(%rip),%rdi
a21b(5): mov $0x7e,%edx
a220(5): call 0xffff7cf0(%rip)
a225(7): lea 0x5cfc(%rip),%rcx
a22c(7): lea 0x5c6d(%rip),%rsi
a233(7): lea 0x5c9e(%rip),%rdi
a23a(5): mov $0x7f,%edx
a23f(5): call 0xffff7cd1(%rip)
a244(7): lea 0x5cdd(%rip),%rcx
a24b(7): lea 0x5c4e(%rip),%rsi
a252(7): lea 0x5c97(%rip),%rdi
a259(5): mov $0xa3,%edx
a25e(5): call 0xffff7cb2(%rip)
a263(7): lea 0x5cbe(%rip),%rcx
a26a(7): lea 0x5c2f(%rip),%rsi
a271(7): lea 0x5c6c(%rip),%rdi
a278(5): mov $0xa2,%edx
a27d(5): call 0xffff7c93(%rip)

"rpl_mbrtowc" :
a290(2): push %r13
a292(2): push %r12
a294(3): mov %rsi,%r13
a297(1): push %rbp
a298(1): push %rbx
a299(3): mov %rdi,%rbx
a29c(3): mov %rdx,%r12
a29f(4): sub $0x18,%rsp
a2a3(9): mov $0x28,%rax
a2ac(5): mov %rax,0x8(%rsp)
a2b1(2): xor %eax,%eax
a2b3(5): lea 0x4(%rsp),%rax
a2b8(3): test %rdi,%rdi
a2bb(4): cmove %rax,%rbx
a2bf(3): mov %rbx,%rdi
a2c2(5): call 0xffff7bde(%rip)
a2c7(4): cmp $0xfffffffd,%rax
a2cb(3): mov %rax,%rbp
a2ce(2): jbe 0x22(%rip)
a2d0(3): test %r12,%r12
a2d3(2): jz 0x1d(%rip)
a2d5(2): xor %edi,%edi
a2d7(5): call 0xfd9(%rip)
a2dc(2): test %al,%al
a2de(2): jnz 0x12(%rip)
a2e0(5): movzx 0x0(%r13),%eax
a2e5(5): mov $0x1,%ebp
a2ea(2): mov %eax,(%rbx)
a2ec(4): nop 0x0(%rax)
a2f0(5): mov 0x8(%rsp),%rdx
a2f5(9): xor $0x28,%rdx
a2fe(3): mov %rbp,%rax
a301(2): jnz 0xd(%rip)
a303(4): add $0x18,%rsp
a307(1): pop %rbx
a308(1): pop %rbp
a309(2): pop %r12
a30b(2): pop %r13
a30d(1): ret near (%rsp)
a30e(5): call 0xffff7b72(%rip)

"unescape_tab" :
a320(1): push %rbx
a321(3): mov %rdi,%rbx
a324(5): call 0xffff7b1c(%rip)
a329(3): mov %rbx,%rcx
a32c(4): add $0x1,%rax
a330(2): xor %edx,%edx
a332(2): jmp 0x15(%rip)
a334(4): nop 0x0(%rax)
a338(3): mov %sil,(%rcx)
a33b(3): mov %rdi,%rdx
a33e(4): add $0x1,%rcx
a342(3): cmp %rdx,%rax
a345(2): jbe 0x5b(%rip)
a347(4): movzx 0x0(%rbx,%rdx,1),%esi
a34b(4): lea 0x1(%rdx),%rdi
a34f(4): cmp $0x5c,%sil
a353(2): jnz 0xffffffe5(%rip)
a355(4): lea 0x4(%rdx),%r8
a359(3): cmp %rax,%r8
a35c(2): jnb 0xffffffdc(%rip)
a35e(5): movzx 0x0(%rbx,%rdi,1),%r9d
a363(4): lea 0xffffffd0(%r9),%r10d
a367(4): cmp $0x3,%r10b
a36b(2): jnbe 0xffffffcd(%rip)
a36d(6): movzx 0x2(%rbx,%rdx,1),%r10d
a373(4): lea 0xffffffd0(%r10),%r11d
a377(4): cmp $0x7,%r11b
a37b(2): jnbe 0xffffffbd(%rip)
a37d(5): movzx 0x3(%rbx,%rdx,1),%edx
a382(4): lea 0xffffffd0(%rdx),%r11d
a386(4): cmp $0x7,%r11b
a38a(2): jnbe 0xffffffae(%rip)
a38c(4): lea 0x0(%r10,%r9,8),%edx
a390(5): lea 0xffffff80(%r11,%rdx,8),%edx
a395(2): mov %dl,(%rcx)
a397(3): mov %r8,%rdx
a39a(2): jmp 0xffffffa4(%rip)
a39c(4): nop 0x0(%rax)
a3a0(1): pop %rbx
a3a1(1): ret near (%rsp)

"free_mount_entry" :
a3b0(1): push %rbx
a3b1(3): mov %rdi,%rbx
a3b4(3): mov (%rdi),%rdi
a3b7(5): call 0xffff7959(%rip)
a3bc(4): mov 0x8(%rbx),%rdi
a3c0(5): call 0xffff7950(%rip)
a3c5(4): mov 0x10(%rbx),%rdi
a3c9(5): call 0xffff7947(%rip)
a3ce(4): test $0x4,0x28(%rbx)
a3d2(2): jz 0xb(%rip)
a3d4(4): mov 0x18(%rbx),%rdi
a3d8(5): call 0xffff7938(%rip)
a3dd(3): mov %rbx,%rdi
a3e0(1): pop %rbx
a3e1(5): jmp 0xffff792f(%rip)

"read_file_system_list" :
a3f0(2): push %r15
a3f2(2): push %r14
a3f4(7): lea 0x4f7c(%rip),%rsi
a3fb(2): push %r13
a3fd(2): push %r12
a3ff(7): lea 0x5b2d(%rip),%rdi
a406(1): push %rbp
a407(1): push %rbx
a408(4): sub $0x68,%rsp
a40c(9): mov $0x28,%rax
a415(5): mov %rax,0x58(%rsp)
a41a(2): xor %eax,%eax
a41c(5): call 0xffff7d44(%rip)
a421(3): test %rax,%rax
a424(6): jz 0x44c(%rip)
a42a(5): lea 0x40(%rsp),%r14
a42f(5): lea 0x50(%rsp),%r13
a434(5): lea 0x48(%rsp),%r12
a439(3): mov %rax,%rbp
a43c(9): mov $0x0,0x48(%rsp)
a445(9): mov $0x0,0x50(%rsp)
a44e(2): nop 
a450(3): mov %rbp,%rcx
a453(5): mov $0xa,%edx
a458(3): mov %r13,%rsi
a45b(3): mov %r12,%rdi
a45e(5): call 0xffff7b52(%rip)
a463(4): cmp $0xffffffff,%rax
a467(6): jz 0x239(%rip)
a46d(5): lea 0x1c(%rsp),%rcx
a472(5): lea 0x18(%rsp),%rdx
a477(4): sub $0x8,%rsp
a47b(5): lea 0x1f(%rsp),%rbx
a480(7): lea 0x5b11(%rip),%rsi
a487(1): push %rbx
a488(5): lea 0x34(%rsp),%rax
a48d(1): push %rax
a48e(5): lea 0x38(%rsp),%rax
a493(1): push %rax
a494(5): mov 0x68(%rsp),%rdi
a499(2): xor %eax,%eax
a49b(5): lea 0x5c(%rsp),%r9
a4a0(5): lea 0x58(%rsp),%r8
a4a5(5): call 0xffff7beb(%rip)
a4aa(3): and $0xfb,%eax
a4ad(4): add $0x20,%rsp
a4b1(3): cmp $0x3,%eax
a4b4(2): jnz 0xffffff9c(%rip)
a4b6(5): movsxd 0x24(%rsp),%rdi
a4bb(7): lea 0x5a86(%rip),%rsi
a4c2(5): add 0x48(%rsp),%rdi
a4c7(5): call 0xffff7d29(%rip)
a4cc(3): test %rax,%rax
a4cf(3): mov %rax,%r15
a4d2(6): jz 0xffffff7e(%rip)
a4d8(5): lea 0x2c(%rsp),%rcx
a4dd(5): lea 0x28(%rsp),%rdx
a4e2(4): sub $0x8,%rsp
a4e6(1): push %rbx
a4e7(7): lea 0x5a5e(%rip),%rsi
a4ee(3): mov %rax,%rdi
a4f1(2): xor %eax,%eax
a4f3(5): lea 0x44(%rsp),%r9
a4f8(5): lea 0x40(%rsp),%r8
a4fd(5): call 0xffff7b93(%rip)
a502(3): and $0xfb,%eax
a505(3): cmp $0x1,%eax
a508(1): pop %rdx
a509(1): pop %rcx
a50a(6): jnz 0xffffff46(%rip)
a510(5): movsxd 0x3c(%rsp),%rax
a515(5): mov 0x48(%rsp),%rdx
a51a(4): mov $0x0,0x0(%rdx,%rax,1)
a51e(5): movsxd 0x24(%rsp),%rax
a523(5): mov 0x48(%rsp),%rdx
a528(4): mov $0x0,0x0(%rdx,%rax,1)
a52c(5): movsxd 0x2c(%rsp),%rax
a531(5): mov $0x0,0x0(%r15,%rax,1)
a536(5): movsxd 0x34(%rsp),%rax
a53b(5): mov $0x0,0x0(%r15,%rax,1)
a540(5): movsxd 0x30(%rsp),%rdi
a545(3): add %r15,%rdi
a548(5): call 0xfffffdd8(%rip)
a54d(5): movsxd 0x20(%rsp),%rdi
a552(5): add 0x48(%rsp),%rdi
a557(5): call 0xfffffdc9(%rip)
a55c(5): movsxd 0x38(%rsp),%rdi
a561(5): add 0x48(%rsp),%rdi
a566(5): call 0xfffffdba(%rip)
a56b(5): mov $0x38,%edi
a570(5): call 0xfffff630(%rip)
a575(5): movsxd 0x30(%rsp),%rdi
a57a(3): mov %rax,%rbx
a57d(3): add %r15,%rdi
a580(5): call 0xfffff850(%rip)
a585(5): movsxd 0x20(%rsp),%rdi
a58a(3): mov %rax,(%rbx)
a58d(5): add 0x48(%rsp),%rdi
a592(5): call 0xfffff83e(%rip)
a597(5): movsxd 0x38(%rsp),%rdi
a59c(4): mov %rax,0x8(%rbx)
a5a0(5): add 0x48(%rsp),%rdi
a5a5(5): call 0xfffff82b(%rip)
a5aa(5): movsxd 0x28(%rsp),%rdi
a5af(4): mov %rax,0x10(%rbx)
a5b3(3): add %r15,%rdi
a5b6(5): call 0xfffff81a(%rip)
a5bb(4): mov 0x18(%rsp),%edx
a5bf(3): mov %rax,%r15
a5c2(4): mov %rax,0x18(%rbx)
a5c6(4): mov 0x1c(%rsp),%eax
a5ca(a): mov $0x-17592186044416,%rsi
a5d4(7): lea 0x34e7(%rip),%rdi
a5db(4): or $0x4,0x28(%rbx)
a5df(3): mov %rdx,%rcx
a5e2(4): shl/sal $0x20,%rdx
a5e6(4): shl/sal $0x8,%rcx
a5ea(3): and %rsi,%rdx
a5ed(a): mov $0x17592184995840,%rsi
a5f7(6): and $0xfff00,%ecx
a5fd(3): or %rcx,%rdx
a600(3): movzx %al,%ecx
a603(4): shl/sal $0xc,%rax
a607(3): or %rcx,%rdx
a60a(3): and %rsi,%rax
a60d(5): mov $0x7,%ecx
a612(3): mov %r15,%rsi
a615(3): or %rdx,%rax
a618(5): mov $0x1,%edx
a61d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a61f(4): mov %rax,0x20(%rbx)
a623(3): setnbe %al
a626(2): sbb $0x0,%al
a628(2): test %al,%al
a62a(2): jz 0x20(%rip)
a62c(7): lea 0x367f(%rip),%rdi
a633(5): mov $0x5,%ecx
a638(3): mov %r15,%rsi
a63b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a63d(3): setnbe %al
a640(2): sbb $0x0,%al
a642(2): test %al,%al
a644(6): jnz 0xb4(%rip)
a64a(4): movzx 0x28(%rbx),%eax
a64e(3): mov (%rbx),%r8
a651(5): mov $0x3a,%esi
a656(3): mov %r8,%rdi
a659(5): mov %r8,0x8(%rsp)
a65e(3): and $0xfe,%eax
a661(2): or %edx,%eax
a663(3): mov %al,0x28(%rbx)
a666(5): call 0xffff784a(%rip)
a66b(3): test %rax,%rax
a66e(5): mov $0x1,%edx
a673(5): mov 0x8(%rsp),%r8
a678(6): jz 0x1c8(%rip)
a67e(4): movzx 0x28(%rbx),%eax
a682(2): add %edx,%edx
a684(3): and $0xfd,%eax
a687(2): or %edx,%eax
a689(3): mov %al,0x28(%rbx)
a68c(3): mov %rbx,(%r14)
a68f(4): lea 0x30(%rbx),%r14
a693(5): jmp 0xfffffdbd(%rip)
a698(8): nop 0x0(%rax,%rax,1)
a6a0(5): mov 0x48(%rsp),%rdi
a6a5(5): call 0xffff766b(%rip)
a6aa(4): test $0x20,0x0(%rbp)
a6ae(6): jnz 0x562(%rip)
a6b4(3): mov %rbp,%rdi
a6b7(5): call 0xed9(%rip)
a6bc(3): cmp $0xff,%eax
a6bf(6): jz 0x43f(%rip)
a6c5(7): mov $0x0,(%r14)
a6cc(5): mov 0x40(%rsp),%rax
a6d1(5): mov 0x58(%rsp),%rbx
a6d6(9): xor $0x28,%rbx
a6df(6): jnz 0x554(%rip)
a6e5(4): add $0x68,%rsp
a6e9(1): pop %rbx
a6ea(1): pop %rbp
a6eb(2): pop %r12
a6ed(2): pop %r13
a6ef(2): pop %r14
a6f1(2): pop %r15
a6f3(1): ret near (%rsp)
a6f4(4): nop 0x0(%rax)
a6f8(7): lea 0x5863(%rip),%rdi
a6ff(5): mov $0x6,%ecx
a704(3): mov %r15,%rsi
a707(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a709(3): setnbe %al
a70c(2): sbb $0x0,%al
a70e(2): test %al,%al
a710(6): jz 0xffffff3a(%rip)
a716(7): lea 0x342c(%rip),%rdi
a71d(5): mov $0x8,%ecx
a722(3): mov %r15,%rsi
a725(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a727(3): setnbe %al
a72a(2): sbb $0x0,%al
a72c(2): test %al,%al
a72e(6): jz 0xffffff1c(%rip)
a734(7): lea 0x3416(%rip),%rdi
a73b(5): mov $0x7,%ecx
a740(3): mov %r15,%rsi
a743(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a745(3): setnbe %al
a748(2): sbb $0x0,%al
a74a(2): test %al,%al
a74c(6): jz 0xfffffefe(%rip)
a752(7): lea 0x3441(%rip),%rdi
a759(5): mov $0x8,%ecx
a75e(3): mov %r15,%rsi
a761(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a763(3): setnbe %al
a766(2): sbb $0x0,%al
a768(2): test %al,%al
a76a(6): jz 0xfffffee0(%rip)
a770(7): lea 0x34ec(%rip),%rdi
a777(5): mov $0x7,%ecx
a77c(3): mov %r15,%rsi
a77f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a781(3): setnbe %al
a784(2): sbb $0x0,%al
a786(2): test %al,%al
a788(6): jz 0xfffffec2(%rip)
a78e(7): lea 0x3548(%rip),%rdi
a795(5): mov $0xb,%ecx
a79a(3): mov %r15,%rsi
a79d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a79f(3): setnbe %al
a7a2(2): sbb $0x0,%al
a7a4(2): test %al,%al
a7a6(6): jz 0xfffffea4(%rip)
a7ac(7): lea 0x3577(%rip),%rdi
a7b3(5): mov $0x6,%ecx
a7b8(3): mov %r15,%rsi
a7bb(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a7bd(3): setnbe %al
a7c0(2): sbb $0x0,%al
a7c2(2): test %al,%al
a7c4(6): jz 0xfffffe86(%rip)
a7ca(7): lea 0x3586(%rip),%rdi
a7d1(5): mov $0x6,%ecx
a7d6(3): mov %r15,%rsi
a7d9(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a7db(3): setnbe %al
a7de(2): sbb $0x0,%al
a7e0(2): test %al,%al
a7e2(6): jz 0xfffffe68(%rip)
a7e8(7): lea 0x5779(%rip),%rdi
a7ef(5): mov $0x7,%ecx
a7f4(3): mov %r15,%rsi
a7f7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a7f9(3): setnbe %al
a7fc(2): sbb $0x0,%al
a7fe(2): test %al,%al
a800(6): jz 0xfffffe4a(%rip)
a806(7): lea 0x5762(%rip),%rsi
a80d(3): mov %r15,%rdi
a810(4): mov %dl,0x8(%rsp)
a814(5): call 0xffff77ac(%rip)
a819(2): test %eax,%eax
a81b(5): movzx 0x8(%rsp),%edx
a820(6): jz 0xfffffe2a(%rip)
a826(7): lea 0x5749(%rip),%rsi
a82d(3): mov %r15,%rdi
a830(5): call 0xffff7790(%rip)
a835(2): test %eax,%eax
a837(3): setz %dl
a83a(5): jmp 0xfffffe10(%rip)
a83f(1): nop 
a840(4): cmp $0x2f,(%r8)
a844(6): jz 0x32c(%rip)
a84a(7): lea 0x5730(%rip),%rsi
a851(5): mov $0x7,%ecx
a856(3): mov %r8,%rdi
a859(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a85b(3): setnbe %al
a85e(2): sbb $0x0,%al
a860(2): test %al,%al
a862(3): setz %dl
a865(5): jmp 0xfffffe19(%rip)
a86a(6): nop 0x0(%rax,%rax,1)
a870(7): lea 0x4b00(%rip),%rsi
a877(7): lea 0x570a(%rip),%rdi
a87e(5): call 0xffff77e2(%rip)
a883(3): test %rax,%rax
a886(3): mov %rax,%rbx
a889(6): jz 0x3a3(%rip)
a88f(3): mov %rbx,%rdi
a892(5): lea 0x40(%rsp),%r14
a897(7): lea 0x3224(%rip),%rbp
a89e(5): call 0xffff77b2(%rip)
a8a3(3): test %rax,%rax
a8a6(3): mov %rax,%r13
a8a9(6): jz 0x245(%rip)
a8af(1): nop 
a8b0(7): lea 0x56db(%rip),%rsi
a8b7(3): mov %r13,%rdi
a8ba(5): call 0xffff7926(%rip)
a8bf(5): mov $0x38,%edi
a8c4(3): mov %rax,%r15
a8c7(5): call 0xfffff2d9(%rip)
a8cc(4): mov 0x0(%r13),%rdi
a8d0(3): mov %rax,%r12
a8d3(5): call 0xfffff4fd(%rip)
a8d8(4): mov 0x8(%r13),%rdi
a8dc(4): mov %rax,(%r12)
a8e0(5): call 0xfffff4f0(%rip)
a8e5(4): mov 0x10(%r13),%rdi
a8e9(5): mov %rax,0x8(%r12)
a8ee(9): mov $0x0,0x10(%r12)
a8f7(5): call 0xfffff4d9(%rip)
a8fc(5): mov $0x7,%ecx
a901(3): mov %rax,%rsi
a904(3): mov %rbp,%rdi
a907(6): or $0x4,0x28(%r12)
a90d(3): mov %rax,%r13
a910(5): mov %rax,0x18(%r12)
a915(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a917(5): mov $0x1,%edx
a91c(3): setnbe %al
a91f(2): sbb $0x0,%al
a921(2): test %al,%al
a923(6): jz 0x165(%rip)
a929(7): lea 0x3382(%rip),%rdi
a930(5): mov $0x5,%ecx
a935(3): mov %r13,%rsi
a938(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a93a(3): setnbe %al
a93d(2): sbb $0x0,%al
a93f(2): test %al,%al
a941(6): jz 0x147(%rip)
a947(7): lea 0x5614(%rip),%rdi
a94e(5): mov $0x6,%ecx
a953(3): mov %r13,%rsi
a956(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a958(3): setnbe %al
a95b(2): sbb $0x0,%al
a95d(2): test %al,%al
a95f(6): jz 0x129(%rip)
a965(7): lea 0x31dd(%rip),%rdi
a96c(5): mov $0x8,%ecx
a971(3): mov %r13,%rsi
a974(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a976(3): setnbe %al
a979(2): sbb $0x0,%al
a97b(2): test %al,%al
a97d(6): jz 0x10b(%rip)
a983(7): lea 0x31c7(%rip),%rdi
a98a(5): mov $0x7,%ecx
a98f(3): mov %r13,%rsi
a992(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a994(3): setnbe %al
a997(2): sbb $0x0,%al
a999(2): test %al,%al
a99b(6): jz 0xed(%rip)
a9a1(7): lea 0x31f2(%rip),%rdi
a9a8(5): mov $0x8,%ecx
a9ad(3): mov %r13,%rsi
a9b0(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a9b2(3): setnbe %al
a9b5(2): sbb $0x0,%al
a9b7(2): test %al,%al
a9b9(6): jz 0xcf(%rip)
a9bf(7): lea 0x329d(%rip),%rdi
a9c6(5): mov $0x7,%ecx
a9cb(3): mov %r13,%rsi
a9ce(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a9d0(3): setnbe %al
a9d3(2): sbb $0x0,%al
a9d5(2): test %al,%al
a9d7(6): jz 0xb1(%rip)
a9dd(7): lea 0x32f9(%rip),%rdi
a9e4(5): mov $0xb,%ecx
a9e9(3): mov %r13,%rsi
a9ec(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a9ee(3): setnbe %al
a9f1(2): sbb $0x0,%al
a9f3(2): test %al,%al
a9f5(6): jz 0x93(%rip)
a9fb(7): lea 0x3328(%rip),%rdi
aa02(5): mov $0x6,%ecx
aa07(3): mov %r13,%rsi
aa0a(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
aa0c(3): setnbe %al
aa0f(2): sbb $0x0,%al
aa11(2): test %al,%al
aa13(2): jz 0x75(%rip)
aa15(7): lea 0x333b(%rip),%rdi
aa1c(5): mov $0x6,%ecx
aa21(3): mov %r13,%rsi
aa24(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
aa26(3): setnbe %al
aa29(2): sbb $0x0,%al
aa2b(2): test %al,%al
aa2d(2): jz 0x5b(%rip)
aa2f(7): lea 0x5532(%rip),%rdi
aa36(5): mov $0x7,%ecx
aa3b(3): mov %r13,%rsi
aa3e(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
aa40(3): setnbe %al
aa43(2): sbb $0x0,%al
aa45(2): test %al,%al
aa47(2): jz 0x41(%rip)
aa49(7): lea 0x551f(%rip),%rsi
aa50(3): mov %r13,%rdi
aa53(4): mov %dl,0x8(%rsp)
aa57(5): call 0xffff7569(%rip)
aa5c(2): test %eax,%eax
aa5e(5): movzx 0x8(%rsp),%edx
aa63(2): jz 0x25(%rip)
aa65(7): lea 0x550a(%rip),%rsi
aa6c(3): mov %r13,%rdi
aa6f(5): call 0xffff7551(%rip)
aa74(3): test %r15,%r15
aa77(3): setz %dl
aa7a(2): test %eax,%eax
aa7c(3): setz %al
aa7f(2): and %eax,%edx
aa81(7): nop 0x0(%rax)
aa88(6): movzx 0x28(%r12),%eax
aa8e(4): mov (%r12),%r15
aa92(5): mov $0x3a,%esi
aa97(3): mov %r15,%rdi
aa9a(3): and $0xfe,%eax
aa9d(2): or %edx,%eax
aa9f(5): mov %al,0x28(%r12)
aaa4(5): call 0xffff740c(%rip)
aaa9(3): test %rax,%rax
aaac(5): mov $0x1,%edx
aab1(6): jz 0x97(%rip)
aab7(6): movzx 0x28(%r12),%eax
aabd(2): add %edx,%edx
aabf(9): mov $0xffffffff,0x20(%r12)
aac8(3): mov %rbx,%rdi
aacb(3): and $0xfd,%eax
aace(2): or %edx,%eax
aad0(5): mov %al,0x28(%r12)
aad5(3): mov %r12,(%r14)
aad8(5): lea 0x30(%r12),%r14
aadd(5): call 0xffff7573(%rip)
aae2(3): test %rax,%rax
aae5(3): mov %rax,%r13
aae8(6): jnz 0xfffffdc8(%rip)
aaee(3): mov %rbx,%rdi
aaf1(5): call 0xffff722f(%rip)
aaf6(2): test %eax,%eax
aaf8(6): jnz 0xfffffbcd(%rip)
aafe(5): call 0xffff7242(%rip)
ab03(3): mov (%rax),%r13d
ab06(3): mov %rax,%r12
ab09(7): mov $0x0,(%r14)
ab10(5): mov 0x40(%rsp),%rdi
ab15(3): test %rdi,%rdi
ab18(2): jz 0x1e(%rip)
ab1a(6): nop 0x0(%rax,%rax,1)
ab20(4): mov 0x30(%rdi),%rbx
ab24(5): call 0xfffff88c(%rip)
ab29(3): test %rbx,%rbx
ab2c(5): mov %rbx,0x40(%rsp)
ab31(3): mov %rbx,%rdi
ab34(2): jnz 0xffffffec(%rip)
ab36(4): mov %r13d,(%r12)
ab3a(2): xor %eax,%eax
ab3c(5): jmp 0xfffffb95(%rip)
ab41(7): nop 0x0(%rax)
ab48(4): cmp $0x2f,(%r15)
ab4c(2): jz 0x74(%rip)
ab4e(7): lea 0x542c(%rip),%rsi
ab55(5): mov $0x7,%ecx
ab5a(3): mov %r15,%rdi
ab5d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
ab5f(3): setnbe %al
ab62(2): sbb $0x0,%al
ab64(2): test %al,%al
ab66(3): setz %dl
ab69(5): jmp 0xffffff4e(%rip)
ab6e(2): nop 
ab70(5): cmp $0x2f,0x1(%r8)
ab75(6): jnz 0xfffffcd5(%rip)
ab7b(7): lea 0x53f9(%rip),%rdi
ab82(5): mov $0x6,%ecx
ab87(3): mov %r15,%rsi
ab8a(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
ab8c(3): setnbe %al
ab8f(2): sbb $0x0,%al
ab91(2): test %al,%al
ab93(6): jz 0xfffffaeb(%rip)
ab99(7): lea 0x2f79(%rip),%rdi
aba0(5): mov $0x5,%ecx
aba5(3): mov %r15,%rsi
aba8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
abaa(3): setnbe %al
abad(2): sbb $0x0,%al
abaf(2): test %al,%al
abb1(6): jz 0xfffffacd(%rip)
abb7(5): jmp 0xfffffc93(%rip)
abbc(4): nop 0x0(%rax)
abc0(5): cmp $0x2f,0x1(%r15)
abc5(2): jnz 0xffffff89(%rip)
abc7(7): lea 0x53ad(%rip),%rdi
abce(5): mov $0x6,%ecx
abd3(3): mov %r13,%rsi
abd6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
abd8(3): setnbe %al
abdb(2): sbb $0x0,%al
abdd(2): test %al,%al
abdf(6): jz 0xfffffed8(%rip)
abe5(7): lea 0x2f2d(%rip),%rdi
abec(5): mov $0x5,%ecx
abf1(3): mov %r13,%rsi
abf4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
abf6(3): setnbe %al
abf9(2): sbb $0x0,%al
abfb(2): test %al,%al
abfd(6): jz 0xfffffeba(%rip)
ac03(5): jmp 0xffffff4b(%rip)
ac08(8): nop 0x0(%rax,%rax,1)
ac10(5): call 0xffff7130(%rip)
ac15(3): mov (%rax),%r13d
ac18(3): mov %rax,%r12
ac1b(3): mov %rbp,%rdi
ac1e(5): call 0x972(%rip)
ac23(4): mov %r13d,(%r12)
ac27(5): jmp 0xfffffee2(%rip)
ac2c(2): xor %eax,%eax
ac2e(5): jmp 0xfffffaa3(%rip)
ac33(5): call 0xffff724d(%rip)

"setenv_TZ" :
ac40(3): test %rdi,%rdi
ac43(2): jz 0x1d(%rip)
ac45(3): mov %rdi,%rsi
ac48(7): lea 0x3160(%rip),%rdi
ac4f(5): mov $0x1,%edx
ac54(5): jmp 0xffff717c(%rip)
ac59(7): nop 0x0(%rax)
ac60(7): lea 0x3148(%rip),%rdi
ac67(5): jmp 0xffff7509(%rip)

"tzfree.part.0" :
ac70(3): test %rdi,%rdi
ac73(2): jz 0x25(%rip)
ac75(1): push %rbx
ac76(a): nop 0x0(%rax,%rax,1)
ac80(3): mov (%rdi),%rbx
ac83(5): call 0xffff708d(%rip)
ac88(3): test %rbx,%rbx
ac8b(3): mov %rbx,%rdi
ac8e(2): jnz 0xfffffff2(%rip)
ac90(1): pop %rbx
ac91(1): ret near (%rsp)
ac92(6): nop 0x0(%rax,%rax,1)
ac98(2): REP ret near (%rsp)

"revert_tz.part.1" :
aca0(2): push %r13
aca2(2): push %r12
aca4(1): push %rbp
aca5(1): push %rbx
aca6(3): mov %rdi,%rbp
aca9(4): sub $0x8,%rsp
acad(5): call 0xffff7093(%rip)
acb2(4): cmp $0x0,0x8(%rbp)
acb6(3): mov %rax,%rbx
acb9(3): mov (%rax),%r12d
acbc(4): lea 0x9(%rbp),%rdi
acc0(2): jnz 0x4(%rip)
acc2(2): xor %edi,%edi
acc4(5): call 0xffffff7c(%rip)
acc9(2): test %eax,%eax
accb(2): jz 0x25(%rip)
accd(3): mov (%rbx),%r12d
acd0(3): xor %r13d,%r13d
acd3(3): mov %rbp,%rdi
acd6(5): call 0xffffff9a(%rip)
acdb(3): mov %r12d,(%rbx)
acde(4): add $0x8,%rsp
ace2(3): mov %r13d,%eax
ace5(1): pop %rbx
ace6(1): pop %rbp
ace7(2): pop %r12
ace9(2): pop %r13
aceb(1): ret near (%rsp)
acec(4): nop 0x0(%rax)
acf0(5): call 0xffff7300(%rip)
acf5(6): mov $0x1,%r13d
acfb(2): jmp 0xffffffd8(%rip)

"tzalloc" :
ad00(3): test %rdi,%rdi
ad03(2): push %r12
ad05(1): push %rbp
ad06(1): push %rbx
ad07(2): jz 0x61(%rip)
ad09(3): mov %rdi,%r12
ad0c(5): call 0xffff7134(%rip)
ad11(4): lea 0x1(%rax),%rbp
ad15(5): mov $0x76,%edi
ad1a(4): cmp $0x76,%rbp
ad1e(4): cmovnb %rbp,%rdi
ad22(4): add $0x11,%rdi
ad26(4): and $0xfffffff8,%rdi
ad2a(5): call 0xffff7306(%rip)
ad2f(3): test %rax,%rax
ad32(3): mov %rax,%rbx
ad35(2): jz 0x26(%rip)
ad37(7): mov $0x0,(%rax)
ad3e(4): lea 0x9(%rbx),%rdi
ad42(5): mov $0x1,%eax
ad47(4): mov %ax,0x8(%rbx)
ad4b(3): mov %rbp,%rdx
ad4e(3): mov %r12,%rsi
ad51(5): call 0xffff728f(%rip)
ad56(5): mov $0x0,0x9(%rbx,%rbp,1)
ad5b(3): mov %rbx,%rax
ad5e(1): pop %rbx
ad5f(1): pop %rbp
ad60(2): pop %r12
ad62(1): ret near (%rsp)
ad63(5): nop 0x0(%rax,%rax,1)
ad68(5): mov $0x80,%edi
ad6d(5): call 0xffff72c3(%rip)
ad72(3): test %rax,%rax
ad75(3): mov %rax,%rbx
ad78(2): jz 0xffffffe3(%rip)
ad7a(2): xor %edx,%edx
ad7c(7): mov $0x0,(%rbx)
ad83(3): mov %rbx,%rax
ad86(4): mov %dx,0x8(%rbx)
ad8a(1): pop %rbx
ad8b(1): pop %rbp
ad8c(2): pop %r12
ad8e(1): ret near (%rsp)

"save_abbr" :
ad90(2): push %r15
ad92(2): push %r14
ad94(5): mov $0x1,%eax
ad99(2): push %r13
ad9b(2): push %r12
ad9d(1): push %rbp
ad9e(1): push %rbx
ad9f(4): sub $0x8,%rsp
ada3(4): mov 0x30(%rsi),%rbp
ada7(3): test %rbp,%rbp
adaa(6): jz 0x96(%rip)
adb0(3): cmp %rbp,%rsi
adb3(3): mov %rdi,%r12
adb6(3): mov %rsi,%r13
adb9(2): jnbe 0xb(%rip)
adbb(4): lea 0x38(%rsi),%rdx
adbf(3): cmp %rdx,%rbp
adc2(2): jb 0x7e(%rip)
adc4(4): cmp $0x0,0x0(%rbp)
adc8(5): lea 0x9(%r12),%rbx
adcd(2): jz 0x63(%rip)
adcf(1): nop 
add0(3): mov %rbp,%rsi
add3(3): mov %rbx,%rdi
add6(5): call 0xffff71ea(%rip)
addb(2): test %eax,%eax
addd(2): jz 0x5a(%rip)
addf(3): cmp $0x0,(%rbx)
ade2(2): jnz 0x14(%rip)
ade4(5): lea 0x9(%r12),%r14
ade9(3): cmp %rbx,%r14
adec(2): jnz 0x64(%rip)
adee(6): cmp $0x0,0x8(%r12)
adf4(2): jz 0x5c(%rip)
adf6(3): mov %rbx,%rdi
adf9(5): call 0xffff7047(%rip)
adfe(5): lea 0x1(%rbx,%rax,1),%rbx
ae03(3): cmp $0x0,(%rbx)
ae06(2): jnz 0xffffffca(%rip)
ae08(4): mov (%r12),%rax
ae0c(3): test %rax,%rax
ae0f(2): jz 0xffffffc1(%rip)
ae11(4): lea 0x9(%rax),%rbx
ae15(3): mov %rbp,%rsi
ae18(3): mov %rax,%r12
ae1b(3): mov %rbx,%rdi
ae1e(5): call 0xffff71a2(%rip)
ae23(2): test %eax,%eax
ae25(2): jnz 0xffffffba(%rip)
ae27(2): jmp 0x10(%rip)
ae29(7): nop 0x0(%rax)
ae30(7): lea 0x4d4a(%rip),%rbx
ae37(4): mov %rbx,0x30(%r13)
ae3b(5): mov $0x1,%eax
ae40(4): add $0x8,%rsp
ae44(1): pop %rbx
ae45(1): pop %rbp
ae46(2): pop %r12
ae48(2): pop %r13
ae4a(2): pop %r14
ae4c(2): pop %r15
ae4e(1): ret near (%rsp)
ae4f(1): nop 
ae50(3): mov %rbp,%rdi
ae53(5): call 0xffff6fed(%rip)
ae58(4): lea 0x1(%rax),%rdx
ae5c(3): mov %rax,%r15
ae5f(3): mov %rbx,%rax
ae62(3): sub %r14,%rax
ae65(3): mov %rax,%rcx
ae68(3): not %rcx
ae6b(3): cmp %rdx,%rcx
ae6e(2): jb 0x32(%rip)
ae70(3): add %rdx,%rax
ae73(4): cmp $0x76,%rax
ae77(2): jbe 0x39(%rip)
ae79(3): mov %rbp,%rdi
ae7c(5): call 0xfffffe84(%rip)
ae81(3): mov %rax,%rbx
ae84(4): mov %rax,(%r12)
ae88(2): xor %eax,%eax
ae8a(3): test %rbx,%rbx
ae8d(2): jz 0xffffffb3(%rip)
ae8f(4): mov $0x0,0x8(%rbx)
ae93(4): add $0x9,%rbx
ae97(2): jmp 0xffffffa0(%rip)
ae99(7): nop 0x0(%rax)
aea0(5): call 0xffff6ea0(%rip)
aea5(6): mov $0xc,(%rax)
aeab(2): xor %eax,%eax
aead(2): jmp 0xffffff93(%rip)
aeaf(1): nop 
aeb0(3): mov %rbp,%rsi
aeb3(3): mov %rbx,%rdi
aeb6(5): call 0xffff712a(%rip)
aebb(6): mov $0x0,0x1(%rbx,%r15,1)
aec1(5): jmp 0xffffff76(%rip)

"set_tz" :
aed0(2): push %r12
aed2(1): push %rbp
aed3(3): mov %rdi,%rbp
aed6(1): push %rbx
aed7(7): lea 0x2ed1(%rip),%rdi
aede(4): sub $0x10,%rsp
aee2(5): call 0xffff6e0e(%rip)
aee7(3): test %rax,%rax
aeea(3): mov %rax,%rbx
aeed(6): jz 0x9b(%rip)
aef3(4): cmp $0x0,0x8(%rbp)
aef7(2): jnz 0x69(%rip)
aef9(3): mov %rbx,%rdi
aefc(5): call 0xfffffe04(%rip)
af01(3): test %rax,%rax
af04(3): mov %rax,%r12
af07(2): jz 0x46(%rip)
af09(2): xor %edi,%edi
af0b(4): cmp $0x0,0x8(%rbp)
af0f(2): jz 0x6(%rip)
af11(4): lea 0x9(%rbp),%rdi
af15(5): call 0xfffffd2b(%rip)
af1a(2): test %eax,%eax
af1c(6): jz 0x8c(%rip)
af22(5): call 0xffff6e1e(%rip)
af27(4): cmp $0x1,%r12
af2b(2): mov (%rax),%ebx
af2d(2): jz 0x1b(%rip)
af2f(3): mov %r12,%rdi
af32(5): mov %rax,0x8(%rsp)
af37(5): call 0xfffffd39(%rip)
af3c(5): mov 0x8(%rsp),%rax
af41(7): nop 0x0(%rax)
af48(2): mov %ebx,(%rax)
af4a(3): xor %r12d,%r12d
af4d(4): add $0x10,%rsp
af51(3): mov %r12,%rax
af54(1): pop %rbx
af55(1): pop %rbp
af56(2): pop %r12
af58(1): ret near (%rsp)
af59(7): nop 0x0(%rax)
af60(4): lea 0x9(%rbp),%rdi
af64(3): mov %rax,%rsi
af67(6): mov $0x1,%r12d
af6d(5): call 0xffff7053(%rip)
af72(2): test %eax,%eax
af74(2): jnz 0xffffff85(%rip)
af76(4): add $0x10,%rsp
af7a(3): mov %r12,%rax
af7d(1): pop %rbx
af7e(1): pop %rbp
af7f(2): pop %r12
af81(1): ret near (%rsp)
af82(6): nop 0x0(%rax,%rax,1)
af88(4): cmp $0x0,0x8(%rbp)
af8c(6): mov $0x1,%r12d
af92(6): jnz 0xffffff67(%rip)
af98(4): add $0x10,%rsp
af9c(3): mov %r12,%rax
af9f(1): pop %rbx
afa0(1): pop %rbp
afa1(2): pop %r12
afa3(1): ret near (%rsp)
afa4(4): nop 0x0(%rax)
afa8(5): call 0xffff7048(%rip)
afad(2): jmp 0xffffffa0(%rip)

"tzfree" :
afb0(4): cmp $0x1,%rdi
afb4(2): jz 0x7(%rip)
afb6(5): jmp 0xfffffcba(%rip)
afbb(1): ret near (%rsp)

"localtime_rz" :
afc0(2): push %r13
afc2(2): push %r12
afc4(1): push %rbp
afc5(1): push %rbx
afc6(3): mov %rsi,%rbp
afc9(4): sub $0x8,%rsp
afcd(3): test %rdi,%rdi
afd0(2): jz 0x70(%rip)
afd2(3): mov %rdx,%r13
afd5(3): mov %rdi,%rbx
afd8(5): call 0xfffffef8(%rip)
afdd(3): test %rax,%rax
afe0(3): mov %rax,%r12
afe3(2): jz 0x4b(%rip)
afe5(3): mov %r13,%rsi
afe8(3): mov %rbp,%rdi
afeb(5): call 0xffff6d75(%rip)
aff0(3): test %rax,%rax
aff3(2): jz 0x2d(%rip)
aff5(3): mov %r13,%rsi
aff8(3): mov %rbx,%rdi
affb(5): call 0xfffffd95(%rip)
b000(2): test %al,%al
b002(2): jz 0x1e(%rip)
b004(4): cmp $0x1,%r12
b008(2): jnz 0x4d(%rip)
b00a(4): add $0x8,%rsp
b00e(3): mov %r13,%rax
b011(1): pop %rbx
b012(1): pop %rbp
b013(2): pop %r12
b015(2): pop %r13
b017(1): ret near (%rsp)
b018(8): nop 0x0(%rax,%rax,1)
b020(4): cmp $0x1,%r12
b024(2): jz 0xa(%rip)
b026(3): mov %r12,%rdi
b029(5): call 0xfffffc77(%rip)
b02e(4): add $0x8,%rsp
b032(2): xor %eax,%eax
b034(1): pop %rbx
b035(1): pop %rbp
b036(2): pop %r12
b038(2): pop %r13
b03a(1): ret near (%rsp)
b03b(5): nop 0x0(%rax,%rax,1)
b040(4): add $0x8,%rsp
b044(3): mov %rbp,%rdi
b047(3): mov %rdx,%rsi
b04a(1): pop %rbx
b04b(1): pop %rbp
b04c(2): pop %r12
b04e(2): pop %r13
b050(5): jmp 0xffff6ea0(%rip)
b055(3): mov %r12,%rdi
b058(5): call 0xfffffc48(%rip)
b05d(2): test %al,%al
b05f(2): jnz 0xffffffab(%rip)
b061(2): jmp 0xffffffcd(%rip)

"mktime_z" :
b070(2): push %r12
b072(1): push %rbp
b073(1): push %rbx
b074(3): mov %rsi,%rbx
b077(4): sub $0x50,%rsp
b07b(9): mov $0x28,%rax
b084(5): mov %rax,0x48(%rsp)
b089(2): xor %eax,%eax
b08b(3): test %rdi,%rdi
b08e(6): jz 0x102(%rip)
b094(3): mov %rdi,%rbp
b097(5): call 0xfffffe39(%rip)
b09c(3): test %rax,%rax
b09f(3): mov %rax,%r12
b0a2(6): jz 0xfe(%rip)
b0a8(3): mov %rbx,%rdi
b0ab(5): call 0xffff6ff5(%rip)
b0b0(4): cmp $0xffffffff,%rax
b0b4(5): mov %rax,0x8(%rsp)
b0b9(2): jz 0x57(%rip)
b0bb(3): mov %rbx,%rsi
b0be(3): mov %rbp,%rdi
b0c1(5): call 0xfffffccf(%rip)
b0c6(2): test %al,%al
b0c8(2): jnz 0xb(%rip)
b0ca(9): mov $0xffffffff,0x8(%rsp)
b0d3(4): cmp $0x1,%r12
b0d7(2): jz 0x12(%rip)
b0d9(3): mov %r12,%rdi
b0dc(5): call 0xfffffbc4(%rip)
b0e1(2): test %al,%al
b0e3(6): jz 0xbd(%rip)
b0e9(5): mov 0x8(%rsp),%rax
b0ee(5): mov 0x48(%rsp),%rcx
b0f3(9): xor $0x28,%rcx
b0fc(6): jnz 0xb0(%rip)
b102(4): add $0x50,%rsp
b106(1): pop %rbx
b107(1): pop %rbp
b108(2): pop %r12
b10a(1): ret near (%rsp)
b10b(5): nop 0x0(%rax,%rax,1)
b110(5): lea 0x10(%rsp),%rsi
b115(5): lea 0x8(%rsp),%rdi
b11a(5): call 0xffff6c46(%rip)
b11f(3): test %rax,%rax
b122(2): jz 0xffffffb1(%rip)
b124(2): mov (%rbx),%eax
b126(3): mov 0x4(%rbx),%edx
b129(4): xor 0x10(%rsp),%eax
b12d(4): xor 0x14(%rsp),%edx
b131(4): mov 0x30(%rsp),%ecx
b135(2): or %edx,%eax
b137(3): mov 0x8(%rbx),%edx
b13a(4): xor 0x18(%rsp),%edx
b13e(2): or %edx,%eax
b140(3): mov 0xc(%rbx),%edx
b143(4): xor 0x1c(%rsp),%edx
b147(2): or %edx,%eax
b149(3): mov 0x10(%rbx),%edx
b14c(4): xor 0x20(%rsp),%edx
b150(2): or %edx,%eax
b152(3): mov 0x14(%rbx),%edx
b155(4): xor 0x24(%rsp),%edx
b159(2): or %edx,%eax
b15b(3): mov 0x20(%rbx),%edx
b15e(2): test %edx,%edx
b160(4): setz %dil
b164(2): test %ecx,%ecx
b166(4): setz %sil
b16a(3): cmp %sil,%dil
b16d(2): jz 0xe(%rip)
b16f(2): test %edx,%edx
b171(2): js 0xa(%rip)
b173(2): test %ecx,%ecx
b175(6): jns 0xffffff5e(%rip)
b17b(2): test %eax,%eax
b17d(6): jz 0xffffff3e(%rip)
b183(5): jmp 0xffffff50(%rip)
b188(8): nop 0x0(%rax,%rax,1)
b190(3): mov %rsi,%rdi
b193(5): call 0xffff6f6d(%rip)
b198(5): jmp 0xffffff56(%rip)
b19d(3): nop (%rax)
b1a0(7): mov $0xffffffff,%rax
b1a7(5): jmp 0xffffff47(%rip)
b1ac(5): call 0xffff6cd4(%rip)

"close_stream" :
b1c0(2): push %r12
b1c2(1): push %rbp
b1c3(3): mov %rdi,%rbp
b1c6(1): push %rbx
b1c7(5): call 0xffff6bc9(%rip)
b1cc(3): mov 0x0(%rbp),%ebx
b1cf(3): mov %rbp,%rdi
b1d2(3): mov %rax,%r12
b1d5(5): call 0x3bb(%rip)
b1da(3): and $0x20,%ebx
b1dd(2): test %ebx,%ebx
b1df(2): jnz 0x19(%rip)
b1e1(2): test %eax,%eax
b1e3(2): jz 0xc(%rip)
b1e5(3): test %r12,%r12
b1e8(5): mov $0xffffffff,%eax
b1ed(2): jz 0x3b(%rip)
b1ef(1): pop %rbx
b1f0(1): pop %rbp
b1f1(2): pop %r12
b1f3(1): ret near (%rsp)
b1f4(4): nop 0x0(%rax)
b1f8(2): test %eax,%eax
b1fa(2): jnz 0x1e(%rip)
b1fc(5): call 0xffff6b44(%rip)
b201(6): mov $0x0,(%rax)
b207(5): mov $0xffffffff,%eax
b20c(1): pop %rbx
b20d(1): pop %rbp
b20e(2): pop %r12
b210(1): ret near (%rsp)
b211(7): nop 0x0(%rax)
b218(1): pop %rbx
b219(5): mov $0xffffffff,%eax
b21e(1): pop %rbp
b21f(2): pop %r12
b221(1): ret near (%rsp)
b222(6): nop 0x0(%rax,%rax,1)
b228(5): call 0xffff6b18(%rip)
b22d(3): cmp $0x9,(%rax)
b230(1): pop %rbx
b231(1): pop %rbp
b232(2): pop %r12
b234(3): setnz %al
b237(3): movzx %al,%eax
b23a(2): neg %eax
b23c(1): ret near (%rsp)

"open_safer" :
b240(4): sub $0x58,%rsp
b244(5): mov %rdx,0x30(%rsp)
b249(2): xor %edx,%edx
b24b(9): mov $0x28,%rax
b254(5): mov %rax,0x18(%rsp)
b259(2): xor %eax,%eax
b25b(4): test $0x40,%sil
b25f(2): jnz 0x29(%rip)
b261(2): xor %eax,%eax
b263(5): call 0xffff6edd(%rip)
b268(2): mov %eax,%edi
b26a(5): call 0xe6(%rip)
b26f(5): mov 0x18(%rsp),%rcx
b274(9): xor $0x28,%rcx
b27d(2): jnz 0x2c(%rip)
b27f(4): add $0x58,%rsp
b283(1): ret near (%rsp)
b284(4): nop 0x0(%rax)
b288(5): lea 0x60(%rsp),%rax
b28d(7): mov $0x10,(%rsp)
b294(4): mov 0x30(%rsp),%edx
b298(5): mov %rax,0x8(%rsp)
b29d(5): lea 0x20(%rsp),%rax
b2a2(5): mov %rax,0x10(%rsp)
b2a7(2): jmp 0xffffffba(%rip)
b2a9(5): call 0xffff6bd7(%rip)

"hard_locale" :
b2b0(4): sub $0x8,%rsp
b2b4(2): xor %esi,%esi
b2b6(5): call 0xffff6e2a(%rip)
b2bb(3): mov %rax,%rdx
b2be(5): mov $0x1,%eax
b2c3(3): test %rdx,%rdx
b2c6(2): jz 0x1f(%rip)
b2c8(7): lea 0x4ce9(%rip),%rdi
b2cf(5): mov $0x2,%ecx
b2d4(3): mov %rdx,%rsi
b2d7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b2d9(3): setnbe %cl
b2dc(3): sbb $0x0,%cl
b2df(2): xor %eax,%eax
b2e1(2): test %cl,%cl
b2e3(2): jnz 0xd(%rip)
b2e5(4): add $0x8,%rsp
b2e9(1): ret near (%rsp)
b2ea(6): nop 0x0(%rax,%rax,1)
b2f0(7): lea 0x4cc3(%rip),%rdi
b2f7(5): mov $0x6,%ecx
b2fc(3): mov %rdx,%rsi
b2ff(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b301(3): setnbe %al
b304(2): sbb $0x0,%al
b306(2): test %al,%al
b308(3): setnz %al
b30b(4): add $0x8,%rsp
b30f(1): ret near (%rsp)

"locale_charset" :
b310(4): sub $0x8,%rsp
b314(5): mov $0xe,%edi
b319(5): call 0xffff6d57(%rip)
b31e(3): test %rax,%rax
b321(2): jz 0x1f(%rip)
b323(3): cmp $0x0,(%rax)
b326(7): lea 0x4c93(%rip),%rdx
b32d(4): cmove %rdx,%rax
b331(4): add $0x8,%rsp
b335(1): ret near (%rsp)
b336(a): nop 0x0(%rax,%rax,1)
b340(7): lea 0x4c79(%rip),%rax
b347(4): add $0x8,%rsp
b34b(1): ret near (%rsp)

"fd_safer" :
b350(2): push %r13
b352(2): push %r12
b354(1): push %rbp
b355(1): push %rbx
b356(2): mov %edi,%ebx
b358(4): sub $0x8,%rsp
b35c(3): cmp $0x2,%edi
b35f(2): jnbe 0x23(%rip)
b361(5): call 0x3cf(%rip)
b366(3): mov %eax,%r12d
b369(5): call 0xffff69d7(%rip)
b36e(3): mov (%rax),%r13d
b371(3): mov %rax,%rbp
b374(2): mov %ebx,%edi
b376(5): call 0xffff6bda(%rip)
b37b(3): mov %r12d,%ebx
b37e(4): mov %r13d,0x0(%rbp)
b382(4): add $0x8,%rsp
b386(2): mov %ebx,%eax
b388(1): pop %rbx
b389(1): pop %rbp
b38a(2): pop %r12
b38c(2): pop %r13
b38e(1): ret near (%rsp)

"xstrcat" :
b390(2): push %r15
b392(2): push %r14
b394(2): push %r13
b396(2): push %r12
b398(1): push %rbp
b399(1): push %rbx
b39a(4): sub $0x28,%rsp
b39e(9): mov $0x28,%rax
b3a7(5): mov %rax,0x18(%rsp)
b3ac(2): xor %eax,%eax
b3ae(3): test %rdi,%rdi
b3b1(4): movdqu (%rsi),%xmm0
b3b5(4): movups %xmm0,(%rsp)
b3b9(4): mov 0x10(%rsi),%r14
b3bd(5): mov %r14,0x10(%rsp)
b3c2(6): jz 0xae(%rip)
b3c8(3): mov %rdi,%r12
b3cb(3): mov %rsi,%r15
b3ce(3): mov %rdi,%rbp
b3d1(2): xor %ebx,%ebx
b3d3(7): mov $0xffffffff,%r13
b3da(3): mov (%rsp),%edx
b3dd(3): cmp $0x2f,%edx
b3e0(6): jnbe 0xe0(%rip)
b3e6(2): mov %edx,%eax
b3e8(3): add $0x8,%edx
b3eb(3): add %r14,%rax
b3ee(3): mov %edx,(%rsp)
b3f1(3): mov (%rax),%rdi
b3f4(5): call 0xffff6a4c(%rip)
b3f9(3): add %rax,%rbx
b3fc(4): cmovnae %r13,%rbx
b400(4): sub $0x1,%rbp
b404(2): jnz 0xffffffd6(%rip)
b406(7): cmp $0x7fffffff,%rbx
b40d(6): jnbe 0xa3(%rip)
b413(4): lea 0x1(%rbx),%rdi
b417(5): call 0xffffe789(%rip)
b41c(3): mov %rax,%r14
b41f(3): mov %rax,%rbx
b422(2): jmp 0x33(%rip)
b424(2): mov %edx,%eax
b426(4): add 0x10(%r15),%rax
b42a(3): add $0x8,%edx
b42d(3): mov %edx,(%r15)
b430(3): mov (%rax),%r13
b433(3): mov %r13,%rdi
b436(5): call 0xffff6a0a(%rip)
b43b(3): mov %rbx,%rdi
b43e(3): mov %rax,%rbp
b441(3): mov %rax,%rdx
b444(3): mov %r13,%rsi
b447(3): add %rbp,%rbx
b44a(5): call 0xffff6b96(%rip)
b44f(4): sub $0x1,%r12
b453(2): jz 0x2d(%rip)
b455(3): mov (%r15),%edx
b458(3): cmp $0x2f,%edx
b45b(2): jbe 0xffffffc9(%rip)
b45d(4): mov 0x8(%r15),%rax
b461(4): lea 0x8(%rax),%rdx
b465(4): mov %rdx,0x8(%r15)
b469(2): jmp 0xffffffc7(%rip)
b46b(5): nop 0x0(%rax,%rax,1)
b470(5): mov $0x1,%edi
b475(5): call 0xffffe72b(%rip)
b47a(3): mov %rax,%rbx
b47d(3): mov %rax,%r14
b480(3): mov $0x0,(%rbx)
b483(5): mov 0x18(%rsp),%rcx
b488(9): xor $0x28,%rcx
b491(3): mov %r14,%rax
b494(2): jnz 0x11(%rip)
b496(4): add $0x28,%rsp
b49a(1): pop %rbx
b49b(1): pop %rbp
b49c(2): pop %r12
b49e(2): pop %r13
b4a0(2): pop %r14
b4a2(2): pop %r15
b4a4(1): ret near (%rsp)
b4a5(5): call 0xffff69db(%rip)
b4aa(6): nop 0x0(%rax,%rax,1)
b4b0(5): call 0xffff6890(%rip)
b4b5(3): xor %r14d,%r14d
b4b8(6): mov $0x4b,(%rax)
b4be(2): jmp 0xffffffc5(%rip)
b4c0(5): mov 0x8(%rsp),%rax
b4c5(4): lea 0x8(%rax),%rdx
b4c9(5): mov %rdx,0x8(%rsp)
b4ce(5): jmp 0xffffff23(%rip)

"xvasprintf" :
b4e0(4): sub $0x18,%rsp
b4e4(9): mov $0x28,%rax
b4ed(5): mov %rax,0x8(%rsp)
b4f2(2): xor %eax,%eax
b4f4(3): movzx (%rdi),%eax
b4f7(2): test %al,%al
b4f9(2): jz 0x7d(%rip)
b4fb(2): cmp $0x25,%al
b4fd(3): mov %rdi,%r8
b500(2): jnz 0x38(%rip)
b502(4): cmp $0x73,0x1(%rdi)
b506(2): jnz 0x32(%rip)
b508(2): xor %edi,%edi
b50a(2): jmp 0x13(%rip)
b50c(4): nop 0x0(%rax)
b510(3): cmp $0x25,%cl
b513(2): jnz 0x25(%rip)
b515(6): cmp $0x73,0x1(%r8,%rdi,2)
b51b(2): jnz 0x1d(%rip)
b51d(4): add $0x1,%rdi
b521(5): movzx 0x0(%r8,%rdi,2),%ecx
b526(2): test %cl,%cl
b528(2): jnz 0xffffffe8(%rip)
b52a(5): call 0xfffffe66(%rip)
b52f(2): jmp 0x1f(%rip)
b531(7): nop 0x0(%rax)
b538(3): mov %rsi,%rdx
b53b(3): mov %rsp,%rdi
b53e(3): mov %r8,%rsi
b541(5): call 0x16f(%rip)
b546(2): test %eax,%eax
b548(2): js 0x20(%rip)
b54a(4): mov (%rsp),%rax
b54e(5): mov 0x8(%rsp),%rdx
b553(9): xor $0x28,%rdx
b55c(2): jnz 0x1e(%rip)
b55e(4): add $0x18,%rsp
b562(1): ret near (%rsp)
b563(5): nop 0x0(%rax,%rax,1)
b568(5): call 0xffff67d8(%rip)
b56d(3): cmp $0xc,(%rax)
b570(2): jz 0xf(%rip)
b572(2): xor %eax,%eax
b574(2): jmp 0xffffffda(%rip)
b576(2): xor %edi,%edi
b578(2): jmp 0xffffffb2(%rip)
b57a(5): call 0xffff6906(%rip)
b57f(5): call 0xffffe871(%rip)

"rpl_fclose" :
b590(2): push %r12
b592(1): push %rbp
b593(1): push %rbx
b594(3): mov %rdi,%rbx
b597(5): call 0xffff6a69(%rip)
b59c(2): test %eax,%eax
b59e(3): mov %rbx,%rdi
b5a1(2): js 0x56(%rip)
b5a3(5): call 0xffff6b0d(%rip)
b5a8(2): test %eax,%eax
b5aa(2): jnz 0x2e(%rip)
b5ac(3): mov %rbx,%rdi
b5af(5): call 0x61(%rip)
b5b4(2): test %eax,%eax
b5b6(2): jz 0x3e(%rip)
b5b8(5): call 0xffff6788(%rip)
b5bd(3): mov (%rax),%r12d
b5c0(3): mov %rbx,%rdi
b5c3(3): mov %rax,%rbp
b5c6(5): call 0xffff682a(%rip)
b5cb(3): test %r12d,%r12d
b5ce(2): jnz 0x32(%rip)
b5d0(1): pop %rbx
b5d1(1): pop %rbp
b5d2(2): pop %r12
b5d4(1): ret near (%rsp)
b5d5(3): nop (%rax)
b5d8(3): mov %rbx,%rdi
b5db(5): call 0xffff6a25(%rip)
b5e0(2): xor %esi,%esi
b5e2(5): mov $0x1,%edx
b5e7(2): mov %eax,%edi
b5e9(5): call 0xffff6917(%rip)
b5ee(4): cmp $0xffffffff,%rax
b5f2(2): jnz 0xffffffba(%rip)
b5f4(3): mov %rbx,%rdi
b5f7(1): pop %rbx
b5f8(1): pop %rbp
b5f9(2): pop %r12
b5fb(5): jmp 0xffff67f5(%rip)
b600(4): mov %r12d,0x0(%rbp)
b604(5): mov $0xffffffff,%eax
b609(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
b610(3): test %rdi,%rdi
b613(1): push %rbx
b614(3): mov %rdi,%rbx
b617(2): jz 0x13(%rip)
b619(5): call 0xffff6a97(%rip)
b61e(2): test %eax,%eax
b620(2): jz 0xa(%rip)
b622(6): test $0x100,(%rbx)
b628(2): jnz 0x10(%rip)
b62a(3): mov %rbx,%rdi
b62d(1): pop %rbx
b62e(5): jmp 0xffff6a12(%rip)
b633(5): nop 0x0(%rax,%rax,1)
b638(3): mov %rbx,%rdi
b63b(5): mov $0x1,%edx
b640(2): xor %esi,%esi
b642(5): call 0xe(%rip)
b647(3): mov %rbx,%rdi
b64a(1): pop %rbx
b64b(5): jmp 0xffff69f5(%rip)

"rpl_fseeko" :
b650(4): mov 0x8(%rdi),%rax
b654(4): cmp %rax,0x10(%rdi)
b658(2): jz 0x8(%rip)
b65a(5): jmp 0xffff6af6(%rip)
b65f(1): nop 
b660(4): mov 0x20(%rdi),%rax
b664(4): cmp %rax,0x28(%rdi)
b668(2): jnz 0xfffffff2(%rip)
b66a(5): cmp $0x0,0x48(%rdi)
b66f(2): jnz 0xffffffeb(%rip)
b671(2): push %r12
b673(1): push %rbp
b674(3): mov %edx,%r12d
b677(1): push %rbx
b678(3): mov %rsi,%rbp
b67b(3): mov %rdi,%rbx
b67e(5): call 0xffff6982(%rip)
b683(3): mov %r12d,%edx
b686(3): mov %rbp,%rsi
b689(2): mov %eax,%edi
b68b(5): call 0xffff6875(%rip)
b690(4): cmp $0xffffffff,%rax
b694(2): jz 0xe(%rip)
b696(3): and $0xef,(%rbx)
b699(7): mov %rax,0x90(%rbx)
b6a0(2): xor %eax,%eax
b6a2(1): pop %rbx
b6a3(1): pop %rbp
b6a4(2): pop %r12
b6a6(1): ret near (%rsp)

"rpl_vasprintf" :
b6b0(1): push %rbx
b6b1(3): mov %rsi,%rax
b6b4(3): mov %rdi,%rbx
b6b7(2): xor %edi,%edi
b6b9(4): sub $0x10,%rsp
b6bd(9): mov $0x28,%rcx
b6c6(5): mov %rcx,0x8(%rsp)
b6cb(2): xor %ecx,%ecx
b6cd(3): mov %rsp,%rsi
b6d0(3): mov %rdx,%rcx
b6d3(3): mov %rax,%rdx
b6d6(5): call 0x2ea(%rip)
b6db(3): test %rax,%rax
b6de(2): jz 0x44(%rip)
b6e0(4): mov (%rsp),%rdx
b6e4(7): cmp $0x7fffffff,%rdx
b6eb(2): jnbe 0x1d(%rip)
b6ed(3): mov %rax,(%rbx)
b6f0(2): mov %edx,%eax
b6f2(5): mov 0x8(%rsp),%rbx
b6f7(9): xor $0x28,%rbx
b700(2): jnz 0x29(%rip)
b702(4): add $0x10,%rsp
b706(1): pop %rbx
b707(1): ret near (%rsp)
b708(3): mov %rax,%rdi
b70b(5): call 0xffff6605(%rip)
b710(5): call 0xffff6630(%rip)
b715(6): mov $0x4b,(%rax)
b71b(5): mov $0xffffffff,%eax
b720(2): jmp 0xffffffd2(%rip)
b722(5): mov $0xffffffff,%eax
b727(2): jmp 0xffffffcb(%rip)
b729(5): call 0xffff6757(%rip)

"dup_safer" :
b730(5): mov $0x3,%edx
b735(2): xor %esi,%esi
b737(2): xor %eax,%eax
b739(5): jmp 0x7(%rip)

"rpl_fcntl" :
b740(2): push %r12
b742(1): push %rbp
b743(2): mov %edi,%ebp
b745(1): push %rbx
b746(4): sub $0x50,%rsp
b74a(9): mov $0x28,%rax
b753(5): mov %rax,0x18(%rsp)
b758(2): xor %eax,%eax
b75a(5): lea 0x70(%rsp),%rax
b75f(2): test %esi,%esi
b761(5): mov %rdx,0x30(%rsp)
b766(5): mov %rcx,0x38(%rsp)
b76b(5): mov %r8,0x40(%rsp)
b770(5): mov %rax,0x8(%rsp)
b775(5): lea 0x20(%rsp),%rax
b77a(5): mov %r9,0x48(%rsp)
b77f(7): mov $0x10,(%rsp)
b786(5): mov %rax,0x10(%rsp)
b78b(6): jz 0x207(%rip)
b791(6): cmp $0x406,%esi
b797(2): jnz 0x49(%rip)
b799(5): mov 0x10(%rsp),%rax
b79e(7): cmp $0x0,0x207b53(%rip)
b7a5(7): mov $0x18,(%rsp)
b7ac(4): mov 0x10(%rax),%r12d
b7b0(3): mov %r12d,%edx
b7b3(6): js 0x130(%rip)
b7b9(2): xor %eax,%eax
b7bb(5): mov $0x406,%esi
b7c0(5): call 0xffff6600(%rip)
b7c5(2): test %eax,%eax
b7c7(2): mov %eax,%ebx
b7c9(6): js 0x18f(%rip)
b7cf(a): mov $0x1,0x207b1f(%rip)
b7d9(2): jmp 0x47(%rip)
b7db(5): nop 0x0(%rax,%rax,1)
b7e0(3): cmp $0xb,%esi
b7e3(2): jz 0x2d(%rip)
b7e5(2): jnle 0x5b(%rip)
b7e7(3): cmp $0x4,%esi
b7ea(6): jz 0xd6(%rip)
b7f0(6): jnle 0xc0(%rip)
b7f6(3): cmp $0x2,%esi
b7f9(6): jz 0xc7(%rip)
b7ff(2): jnle 0x11(%rip)
b801(3): cmp $0x1,%esi
b804(2): jnz 0x64(%rip)
b806(a): nop 0x0(%rax,%rax,1)
b810(2): mov %ebp,%edi
b812(2): xor %eax,%eax
b814(5): call 0xffff65ac(%rip)
b819(2): mov %eax,%ebx
b81b(5): nop 0x0(%rax,%rax,1)
b820(5): mov 0x18(%rsp),%rcx
b825(9): xor $0x28,%rcx
b82e(2): mov %ebx,%eax
b830(6): jnz 0x15d(%rip)
b836(4): add $0x50,%rsp
b83a(1): pop %rbx
b83b(1): pop %rbp
b83c(2): pop %r12
b83e(1): ret near (%rsp)
b83f(1): nop 
b840(6): cmp $0x407,%esi
b846(2): jnle 0x4a(%rip)
b848(6): cmp $0x406,%esi
b84e(2): jnl 0x72(%rip)
b850(6): cmp $0x401,%esi
b856(2): jz 0xffffffba(%rip)
b858(6): cmp $0x402,%esi
b85e(2): jz 0x62(%rip)
b860(6): cmp $0x400,%esi
b866(2): jz 0x5a(%rip)
b868(3): mov (%rsp),%eax
b86b(3): cmp $0x2f,%eax
b86e(6): jnbe 0x13c(%rip)
b874(5): add 0x10(%rsp),%rax
b879(3): mov (%rax),%rdx
b87c(2): mov %ebp,%edi
b87e(2): xor %eax,%eax
b880(5): call 0xffff6540(%rip)
b885(2): mov %eax,%ebx
b887(2): jmp 0xffffff99(%rip)
b889(7): nop 0x0(%rax)
b890(6): cmp $0x409,%esi
b896(2): jz 0x2a(%rip)
b898(6): jl 0xffffff78(%rip)
b89e(6): cmp $0x40a,%esi
b8a4(2): jnz 0xffffffc4(%rip)
b8a6(5): jmp 0xffffff6a(%rip)
b8ab(5): nop 0x0(%rax,%rax,1)
b8b0(3): cmp $0x9,%esi
b8b3(6): jz 0xffffff5d(%rip)
b8b9(2): jnle 0x7(%rip)
b8bb(3): cmp $0x8,%esi
b8be(2): jnz 0xffffffaa(%rip)
b8c0(3): mov (%rsp),%eax
b8c3(3): cmp $0x2f,%eax
b8c6(6): jnbe 0xee(%rip)
b8cc(5): add 0x10(%rsp),%rax
b8d1(2): mov (%rax),%edx
b8d3(2): mov %ebp,%edi
b8d5(2): xor %eax,%eax
b8d7(5): call 0xffff64e9(%rip)
b8dc(2): mov %eax,%ebx
b8de(5): jmp 0xffffff42(%rip)
b8e3(2): xor %esi,%esi
b8e5(2): xor %eax,%eax
b8e7(5): call 0xffff64d9(%rip)
b8ec(2): test %eax,%eax
b8ee(2): mov %eax,%ebx
b8f0(6): js 0xffffff30(%rip)
b8f6(7): cmp $0xff,0x2079fb(%rip)
b8fd(6): jnz 0xffffff23(%rip)
b903(2): xor %eax,%eax
b905(5): mov $0x1,%esi
b90a(2): mov %ebx,%edi
b90c(5): call 0xffff64b4(%rip)
b911(2): test %eax,%eax
b913(2): js 0x1e(%rip)
b915(3): or $0x1,%eax
b918(5): mov $0x2,%esi
b91d(2): mov %ebx,%edi
b91f(2): mov %eax,%edx
b921(2): xor %eax,%eax
b923(5): call 0xffff649d(%rip)
b928(3): cmp $0xff,%eax
b92b(6): jnz 0xfffffef5(%rip)
b931(5): call 0xffff640f(%rip)
b936(3): mov (%rax),%r12d
b939(3): mov %rax,%rbp
b93c(2): mov %ebx,%edi
b93e(5): call 0xffff6612(%rip)
b943(5): mov $0xffffffff,%ebx
b948(4): mov %r12d,0x0(%rbp)
b94c(5): jmp 0xfffffed4(%rip)
b951(7): nop 0x0(%rax)
b958(5): call 0xffff63e8(%rip)
b95d(3): cmp $0x16,(%rax)
b960(6): jnz 0xfffffe6f(%rip)
b966(2): xor %esi,%esi
b968(2): xor %eax,%eax
b96a(3): mov %r12d,%edx
b96d(2): mov %ebp,%edi
b96f(5): call 0xffff6451(%rip)
b974(2): test %eax,%eax
b976(2): mov %eax,%ebx
b978(6): js 0xfffffea8(%rip)
b97e(a): mov $0xffffffff,0x207970(%rip)
b988(5): jmp 0xffffff7b(%rip)
b98d(5): call 0xffff64f3(%rip)
b992(5): mov 0x10(%rsp),%rax
b997(2): xor %esi,%esi
b999(3): mov 0x10(%rax),%edx
b99c(2): xor %eax,%eax
b99e(5): call 0xffff6422(%rip)
b9a3(2): mov %eax,%ebx
b9a5(5): jmp 0xfffffe7b(%rip)
b9aa(5): mov 0x8(%rsp),%rax
b9af(5): jmp 0xfffffeca(%rip)
b9b4(5): mov 0x8(%rsp),%rax
b9b9(5): jmp 0xffffff18(%rip)

"vasnprintf" :
b9c0(1): push %rbp
b9c1(3): mov %rsp,%rbp
b9c4(2): push %r15
b9c6(2): push %r14
b9c8(2): push %r13
b9ca(2): push %r12
b9cc(7): lea 0xfffffc50(%rbp),%r14
b9d3(1): push %rbx
b9d4(3): mov %rdx,%rbx
b9d7(3): mov %rcx,%r12
b9da(3): mov %r14,%rdx
b9dd(7): sub $0x408,%rsp
b9e4(7): mov %rsi,0xfffffbe8(%rbp)
b9eb(7): lea 0xfffffd40(%rbp),%rsi
b9f2(7): mov %rdi,0xfffffc18(%rbp)
b9f9(3): mov %rbx,%rdi
b9fc(7): mov %r14,0xfffffbf0(%rbp)
ba03(9): mov $0x28,%rax
ba0c(4): mov %rax,0xffffffc8(%rbp)
ba10(2): xor %eax,%eax
ba12(7): mov %rsi,0xfffffbf8(%rbp)
ba19(5): call 0x12c7(%rip)
ba1e(2): test %eax,%eax
ba20(6): js 0xe68(%rip)
ba26(3): mov %r14,%rsi
ba29(3): mov %r12,%rdi
ba2c(5): call 0x10b4(%rip)
ba31(2): test %eax,%eax
ba33(6): js 0xebd(%rip)
ba39(7): mov 0xfffffd50(%rbp),%rax
ba40(7): mov $0xffffffff,%rdx
ba47(4): add $0x7,%rax
ba4b(4): cmp $0x6,%rax
ba4f(4): cmovbe %rdx,%rax
ba53(7): add 0xfffffd58(%rbp),%rax
ba5a(6): jb 0xa2e(%rip)
ba60(3): mov %rax,%rdi
ba63(3): xor %r8d,%r8d
ba66(4): add $0x6,%rdi
ba6a(4): setb %r8b
ba6e(6): jb 0xa1a(%rip)
ba74(7): cmp $0xf9f,%rdi
ba7b(6): jbe 0x14d(%rip)
ba81(4): cmp $0xffffffff,%rdi
ba85(7): mov %r8,0xfffffc38(%rbp)
ba8c(6): jz 0x9fc(%rip)
ba92(5): call 0xffff659e(%rip)
ba97(3): test %rax,%rax
ba9a(7): mov %rax,0xfffffc28(%rbp)
baa1(6): jz 0x9e7(%rip)
baa7(7): mov 0xfffffc38(%rbp),%r8
baae(7): mov %rax,0xfffffbe0(%rbp)
bab5(3): xor %r12d,%r12d
bab8(8): cmp $0x0,0xfffffc18(%rbp)
bac0(2): jz 0xc(%rip)
bac2(7): mov 0xfffffbe8(%rbp),%rax
bac9(3): mov (%rax),%r12
bacc(7): mov 0xfffffd48(%rbp),%r13
bad3(7): lea 0xfffffc44(%rbp),%rax
bada(7): mov 0xfffffc18(%rbp),%r15
bae1(b): mov $0x0,0xfffffc00(%rbp)
baec(7): mov %rax,0xfffffc10(%rbp)
baf3(3): mov %rbx,%rax
baf6(3): mov %r8,%rbx
baf9(4): mov 0x0(%r13),%rcx
bafd(3): mov %rax,%r8
bb00(3): cmp %r8,%rcx
bb03(6): jz 0x96e(%rip)
bb09(3): sub %r8,%rcx
bb0c(3): mov %rbx,%rax
bb0f(3): add %rcx,%rax
bb12(3): mov %rax,%r14
bb15(6): jnb 0xe3(%rip)
bb1b(4): cmp $0xffffffff,%r12
bb1f(6): jz 0xad1(%rip)
bb25(5): call 0xffff621b(%rip)
bb2a(7): mov %rax,0xfffffc38(%rbp)
bb31(7): cmp 0xfffffc18(%rbp),%r15
bb38(2): jz 0xb(%rip)
bb3a(3): test %r15,%r15
bb3d(6): jnz 0xae3(%rip)
bb43(7): mov 0xfffffbe0(%rbp),%rax
bb4a(3): test %rax,%rax
bb4d(2): jz 0xa(%rip)
bb4f(3): mov %rax,%rdi
bb52(5): call 0xffff61be(%rip)
bb57(7): mov 0xfffffbf8(%rbp),%rax
bb5e(7): mov 0xfffffd48(%rbp),%rdi
bb65(4): add $0x20,%rax
bb69(3): cmp %rax,%rdi
bb6c(2): jz 0x7(%rip)
bb6e(5): call 0xffff61a2(%rip)
bb73(7): mov 0xfffffbf0(%rbp),%rax
bb7a(7): mov 0xfffffc58(%rbp),%rdi
bb81(4): add $0x10,%rax
bb85(3): cmp %rax,%rdi
bb88(2): jz 0x7(%rip)
bb8a(5): call 0xffff6186(%rip)
bb8f(7): mov 0xfffffc38(%rbp),%rax
bb96(3): xor %r15d,%r15d
bb99(6): mov $0xc,(%rax)
bb9f(4): mov 0xffffffc8(%rbp),%rdi
bba3(9): xor $0x28,%rdi
bbac(3): mov %r15,%rax
bbaf(6): jnz 0xf08(%rip)
bbb5(4): lea 0xffffffd8(%rbp),%rsp
bbb9(1): pop %rbx
bbba(2): pop %r12
bbbc(2): pop %r13
bbbe(2): pop %r14
bbc0(2): pop %r15
bbc2(1): pop %rbp
bbc3(1): ret near (%rsp)
bbc4(4): nop 0x0(%rax)
bbc8(4): add $0x24,%rax
bbcc(b): mov $0x0,0xfffffbe0(%rbp)
bbd7(4): and $0xfffffff0,%rax
bbdb(3): sub %rax,%rsp
bbde(5): lea 0xf(%rsp),%rax
bbe3(4): and $0xfffffff0,%rax
bbe7(7): mov %rax,0xfffffc28(%rbp)
bbee(5): jmp 0xfffffec7(%rip)
bbf3(5): nop 0x0(%rax,%rax,1)
bbf8(3): cmp %rax,%r12
bbfb(2): jnb 0x69(%rip)
bbfd(3): test %r12,%r12
bc00(6): jnz 0x930(%rip)
bc06(4): cmp $0xc,%rax
bc0a(6): jnbe 0x938(%rip)
bc10(6): mov $0xc,%r12d
bc16(7): cmp 0xfffffc18(%rbp),%r15
bc1d(3): setz %dl
bc20(3): test %r15,%r15
bc23(6): jz 0x945(%rip)
bc29(2): test %dl,%dl
bc2b(6): jnz 0x93d(%rip)
bc31(3): mov %r12,%rsi
bc34(3): mov %r15,%rdi
bc37(7): mov %r8,0xfffffc30(%rbp)
bc3e(7): mov %rcx,0xfffffc38(%rbp)
bc45(5): call 0xffff648b(%rip)
bc4a(3): test %rax,%rax
bc4d(7): mov 0xfffffc38(%rbp),%rcx
bc54(7): mov 0xfffffc30(%rbp),%r8
bc5b(6): jz 0x9b0(%rip)
bc61(3): mov %rax,%r15
bc64(4): lea 0x0(%r15,%rbx,1),%rdi
bc68(3): mov %rcx,%rdx
bc6b(3): mov %r8,%rsi
bc6e(5): call 0xffff6372(%rip)
bc73(7): mov 0xfffffc00(%rbp),%rax
bc7a(7): cmp %rax,0xfffffd40(%rbp)
bc81(6): jz 0xcba(%rip)
bc87(5): movzx 0x48(%r13),%edx
bc8c(4): mov 0x50(%r13),%rax
bc90(3): cmp $0x25,%dl
bc93(6): jz 0x795(%rip)
bc99(4): cmp $0xffffffff,%rax
bc9d(6): jz 0xc49(%rip)
bca3(7): mov 0xfffffc58(%rbp),%r8
bcaa(4): shl/sal $0x5,%rax
bcae(3): add %r8,%rax
bcb1(3): cmp $0x6e,%dl
bcb4(2): mov (%rax),%edi
bcb6(6): mov %edi,0xfffffc30(%rbp)
bcbc(6): jz 0x7e4(%rip)
bcc2(4): mov 0x10(%r13),%eax
bcc6(7): mov 0xfffffc28(%rbp),%rdi
bccd(2): test $0x1,%al
bccf(3): mov $0x25,(%rdi)
bcd2(4): lea 0x1(%rdi),%rbx
bcd6(2): jz 0x11(%rip)
bcd8(7): mov 0xfffffc28(%rbp),%rdi
bcdf(4): lea 0x2(%rdi),%rbx
bce3(4): mov $0x27,0x1(%rdi)
bce7(2): test $0x2,%al
bce9(2): jz 0x9(%rip)
bceb(3): mov $0x2d,(%rbx)
bcee(4): add $0x1,%rbx
bcf2(2): test $0x4,%al
bcf4(2): jz 0x9(%rip)
bcf6(3): mov $0x2b,(%rbx)
bcf9(4): add $0x1,%rbx
bcfd(2): test $0x8,%al
bcff(2): jz 0x9(%rip)
bd01(3): mov $0x20,(%rbx)
bd04(4): add $0x1,%rbx
bd08(2): test $0x10,%al
bd0a(2): jz 0x9(%rip)
bd0c(3): mov $0x23,(%rbx)
bd0f(4): add $0x1,%rbx
bd13(2): test $0x40,%al
bd15(2): jz 0x9(%rip)
bd17(3): mov $0x49,(%rbx)
bd1a(4): add $0x1,%rbx
bd1e(2): test $0x20,%al
bd20(2): jz 0x9(%rip)
bd22(3): mov $0x30,(%rbx)
bd25(4): add $0x1,%rbx
bd29(4): mov 0x18(%r13),%rsi
bd2d(4): mov 0x20(%r13),%rdx
bd31(3): cmp %rdx,%rsi
bd34(2): jz 0x32(%rip)
bd36(3): mov %rdx,%rcx
bd39(3): mov %rbx,%rdi
bd3c(7): mov %r8,0xfffffc20(%rbp)
bd43(3): sub %rsi,%rcx
bd46(3): mov %rcx,%rdx
bd49(7): mov %rcx,0xfffffc38(%rbp)
bd50(5): call 0xffff6290(%rip)
bd55(7): mov 0xfffffc38(%rbp),%rcx
bd5c(7): mov 0xfffffc20(%rbp),%r8
bd63(3): add %rcx,%rbx
bd66(4): mov 0x30(%r13),%rsi
bd6a(4): mov 0x38(%r13),%rdx
bd6e(3): cmp %rdx,%rsi
bd71(2): jz 0x32(%rip)
bd73(3): mov %rdx,%rcx
bd76(3): mov %rbx,%rdi
bd79(7): mov %r8,0xfffffc20(%rbp)
bd80(3): sub %rsi,%rcx
bd83(3): mov %rcx,%rdx
bd86(7): mov %rcx,0xfffffc38(%rbp)
bd8d(5): call 0xffff6253(%rip)
bd92(7): mov 0xfffffc38(%rbp),%rcx
bd99(7): mov 0xfffffc20(%rbp),%r8
bda0(3): add %rcx,%rbx
bda3(6): mov 0xfffffc30(%rbp),%edi
bda9(3): cmp $0x10,%edi
bdac(2): jnbe 0x2f(%rip)
bdae(5): mov $0x1,%eax
bdb3(2): mov %edi,%ecx
bdb5(3): shl/sal %cl,%rax
bdb8(5): test $0x14180,%eax
bdbd(2): jnz 0x17(%rip)
bdbf(3): test $0x10,%ah
bdc2(6): jnz 0x95e(%rip)
bdc8(3): test $0x6,%ah
bdcb(2): jz 0x10(%rip)
bdcd(3): mov $0x6c,(%rbx)
bdd0(4): add $0x1,%rbx
bdd4(3): mov $0x6c,(%rbx)
bdd7(4): add $0x1,%rbx
bddb(5): movzx 0x48(%r13),%eax
bde0(4): mov $0x0,0x1(%rbx)
bde4(2): mov %al,(%rbx)
bde6(4): mov 0x28(%r13),%rax
bdea(4): cmp $0xffffffff,%rax
bdee(6): jz 0x732(%rip)
bdf4(4): shl/sal $0x5,%rax
bdf8(3): add %r8,%rax
bdfb(3): cmp $0x5,(%rax)
bdfe(6): jnz 0xae8(%rip)
be04(3): mov 0x10(%rax),%eax
be07(a): mov $0x1,0xfffffc20(%rbp)
be11(6): mov %eax,0xfffffc48(%rbp)
be17(4): mov 0x40(%r13),%rax
be1b(4): cmp $0xffffffff,%rax
be1f(2): jz 0x2d(%rip)
be21(4): shl/sal $0x5,%rax
be25(3): add %rax,%r8
be28(4): cmp $0x5,(%r8)
be2c(6): jnz 0xaba(%rip)
be32(6): mov 0xfffffc20(%rbp),%eax
be38(4): mov 0x10(%r8),%edx
be3c(7): mov %edx,0xfffffc48(%rbp,%rax,4)
be43(3): lea 0x1(%rax),%eax
be46(6): mov %eax,0xfffffc20(%rbp)
be4c(3): mov %r14,%rax
be4f(2): xor %edx,%edx
be51(4): add $0x2,%rax
be55(6): jb 0xc67(%rip)
be5b(3): cmp %rax,%r12
be5e(2): jnb 0x4d(%rip)
be60(3): test %r12,%r12
be63(6): jnz 0x825(%rip)
be69(4): cmp $0xc,%rax
be6d(6): jnbe 0x833(%rip)
be73(6): mov $0xc,%r12d
be79(7): cmp 0xfffffc18(%rbp),%r15
be80(3): setz %dl
be83(3): test %r15,%r15
be86(6): jz 0x84a(%rip)
be8c(2): test %dl,%dl
be8e(6): jnz 0x842(%rip)
be94(3): mov %r12,%rsi
be97(3): mov %r15,%rdi
be9a(5): call 0xffff6236(%rip)
be9f(3): test %rax,%rax
bea2(6): jz 0xfffffc83(%rip)
bea8(3): mov %rax,%r15
beab(5): mov $0x0,0x0(%r15,%r14,1)
beb0(5): call 0xffff5e90(%rip)
beb5(7): mov %rax,0xfffffc38(%rbp)
bebc(2): mov (%rax),%eax
bebe(7): mov %rbx,0xfffffc08(%rbp)
bec5(6): mov %eax,0xfffffbdc(%rbp)
becb(5): nop 0x0(%rax,%rax,1)
bed0(7): mov 0xfffffc38(%rbp),%rax
bed7(3): mov %r12,%rbx
beda(6): mov $0x7fffffff,%r10d
bee0(3): sub %r14,%rbx
bee3(a): mov $0xffffffff,0xfffffc44(%rbp)
beed(7): cmp $0x7fffffff,%rbx
bef4(6): mov $0x0,(%rax)
befa(6): mov 0xfffffc30(%rbp),%eax
bf00(4): cmovbe %rbx,%r10
bf04(3): cmp $0x11,%eax
bf07(6): jnbe 0x9df(%rip)
bf0d(7): lea 0x40b4(%rip),%rsi
bf14(4): movsxd 0x0(%rsi,%rax,4),%rax
bf18(3): add %rsi,%rax
bf1b(2): jmp %rax
bf1d(3): nop (%rax)
bf20(4): mov 0x50(%r13),%rax
bf24(4): lea 0x0(%r15,%r14,1),%rdi
bf28(4): shl/sal $0x5,%rax
bf2c(7): add 0xfffffc58(%rbp),%rax
bf33(4): mov 0x10(%rax),%r9
bf37(6): mov 0xfffffc20(%rbp),%eax
bf3d(3): cmp $0x1,%eax
bf40(6): jz 0x4c8(%rip)
bf46(3): cmp $0x2,%eax
bf49(6): jz 0x4a7(%rip)
bf4f(4): sub $0x8,%rsp
bf53(6): push 0xfffffc10(%rbp)
bf59(7): mov 0xfffffc28(%rbp),%r8
bf60(3): mov %r10,%rsi
bf63(7): mov $0xffffffff,%rcx
bf6a(5): mov $0x1,%edx
bf6f(2): xor %eax,%eax
bf71(7): mov %r10,0xfffffbd0(%rbp)
bf78(5): call 0xffff5d88(%rip)
bf7d(1): pop %rsi
bf7e(1): pop %rdi
bf7f(7): mov 0xfffffbd0(%rbp),%r10
bf86(6): mov 0xfffffc44(%rbp),%ecx
bf8c(2): test %ecx,%ecx
bf8e(6): js 0x13e(%rip)
bf94(3): movsxd %ecx,%rdx
bf97(3): cmp %r10,%rdx
bf9a(2): jnb 0x10(%rip)
bf9c(3): add %r15,%rdx
bf9f(5): cmp $0x0,0x0(%rdx,%r14,1)
bfa4(6): jnz 0x942(%rip)
bfaa(2): cmp %eax,%ecx
bfac(2): jnl 0xa(%rip)
bfae(6): mov %eax,0xfffffc44(%rbp)
bfb4(2): mov %eax,%ecx
bfb6(3): lea 0x1(%rcx),%eax
bfb9(3): cmp %r10,%rax
bfbc(6): jb 0x834(%rip)
bfc2(7): cmp $0x7ffffffe,%rbx
bfc9(6): jnbe 0x847(%rip)
bfcf(4): lea 0x0(%r12,%r12,1),%rsi
bfd3(3): lea 0x2(%rcx),%edx
bfd6(3): test %r12,%r12
bfd9(7): mov $0xffffffff,%rax
bfe0(4): cmovns %rsi,%rax
bfe4(3): add %r14,%rdx
bfe7(6): jb 0xac1(%rip)
bfed(3): cmp %rdx,%rax
bff0(4): cmovnae %rdx,%rax
bff4(3): cmp %rax,%r12
bff7(6): jnb 0xfffffed9(%rip)
bffd(3): test %r12,%r12
c000(6): js 0xfffffb31(%rip)
c006(3): cmp %rax,%rsi
c009(3): mov %rsi,%r12
c00c(2): jnb 0xf(%rip)
c00e(4): cmp $0xffffffff,%rax
c012(6): jz 0xfffffb1f(%rip)
c018(3): mov %rax,%r12
c01b(7): cmp 0xfffffc18(%rbp),%r15
c022(3): setz %bl
c025(3): test %r15,%r15
c028(6): jz 0x388(%rip)
c02e(2): test %bl,%bl
c030(6): jnz 0x380(%rip)
c036(3): mov %r12,%rsi
c039(3): mov %r15,%rdi
c03c(5): call 0xffff6094(%rip)
c041(3): test %rax,%rax
c044(6): jz 0xfffffaed(%rip)
c04a(3): mov %rax,%r15
c04d(5): jmp 0xfffffe83(%rip)
c052(6): nop 0x0(%rax,%rax,1)
c058(4): mov 0x50(%r13),%rax
c05c(4): lea 0x0(%r15,%r14,1),%rdi
c060(4): shl/sal $0x5,%rax
c064(7): add 0xfffffc58(%rbp),%rax
c06b(4): mov 0x10(%rax),%r9d
c06f(6): mov 0xfffffc20(%rbp),%eax
c075(3): cmp $0x1,%eax
c078(6): jz 0x238(%rip)
c07e(3): cmp $0x2,%eax
c081(6): jz 0x277(%rip)
c087(4): sub $0x8,%rsp
c08b(6): push 0xfffffc10(%rbp)
c091(7): mov 0xfffffc28(%rbp),%r8
c098(7): mov $0xffffffff,%rcx
c09f(5): mov $0x1,%edx
c0a4(3): mov %r10,%rsi
c0a7(2): xor %eax,%eax
c0a9(7): mov %r10,0xfffffbd0(%rbp)
c0b0(5): call 0xffff5c50(%rip)
c0b5(1): pop %rdx
c0b6(1): pop %rcx
c0b7(6): mov 0xfffffc44(%rbp),%ecx
c0bd(7): mov 0xfffffbd0(%rbp),%r10
c0c4(2): test %ecx,%ecx
c0c6(6): jns 0xfffffece(%rip)
c0cc(7): mov 0xfffffc08(%rbp),%rdi
c0d3(4): cmp $0x0,0x1(%rdi)
c0d7(6): jnz 0x341(%rip)
c0dd(2): test %eax,%eax
c0df(6): jns 0xfffffecf(%rip)
c0e5(7): mov 0xfffffc38(%rbp),%rax
c0ec(2): mov (%rax),%ebx
c0ee(2): test %ebx,%ebx
c0f0(2): jnz 0x20(%rip)
c0f2(5): movzx 0x48(%r13),%eax
c0f7(5): mov $0x16,%ebx
c0fc(3): and $0xef,%eax
c0ff(2): cmp $0x63,%al
c101(5): mov $0x54,%eax
c106(3): cmove %eax,%ebx
c109(7): nop 0x0(%rax)
c110(7): cmp 0xfffffc18(%rbp),%r15
c117(2): jz 0xb(%rip)
c119(3): test %r15,%r15
c11c(6): jnz 0x7b0(%rip)
c122(7): mov 0xfffffbe0(%rbp),%rax
c129(3): test %rax,%rax
c12c(2): jz 0xa(%rip)
c12e(3): mov %rax,%rdi
c131(5): call 0xffff5bdf(%rip)
c136(7): mov 0xfffffbf8(%rbp),%rax
c13d(7): mov 0xfffffd48(%rbp),%rdi
c144(4): add $0x20,%rax
c148(3): cmp %rax,%rdi
c14b(2): jz 0x7(%rip)
c14d(5): call 0xffff5bc3(%rip)
c152(7): mov 0xfffffbf0(%rbp),%rax
c159(7): mov 0xfffffc58(%rbp),%rdi
c160(4): add $0x10,%rax
c164(3): cmp %rax,%rdi
c167(2): jz 0x7(%rip)
c169(5): call 0xffff5ba7(%rip)
c16e(7): mov 0xfffffc38(%rbp),%rax
c175(3): xor %r15d,%r15d
c178(2): mov %ebx,(%rax)
c17a(5): jmp 0xfffffa25(%rip)
c17f(1): nop 
c180(4): mov 0x50(%r13),%rax
c184(4): lea 0x0(%r15,%r14,1),%rdi
c188(4): shl/sal $0x5,%rax
c18c(7): add 0xfffffc58(%rbp),%rax
c193(3): fld 0x10(%rax),%st0
c196(6): mov 0xfffffc20(%rbp),%eax
c19c(3): cmp $0x1,%eax
c19f(6): jz 0x631(%rip)
c1a5(3): cmp $0x2,%eax
c1a8(6): jnz 0x4c8(%rip)
c1ae(6): mov 0xfffffc4c(%rbp),%eax
c1b4(4): sub $0x8,%rsp
c1b8(6): push 0xfffffc10(%rbp)
c1be(7): mov 0xfffffc48(%rbp),%r9d
c1c5(7): mov 0xfffffc28(%rbp),%r8
c1cc(3): mov %r10,%rsi
c1cf(4): sub $0x18,%rsp
c1d3(7): mov $0xffffffff,%rcx
c1da(5): mov $0x1,%edx
c1df(4): fstp %st0,0x8(%rsp)
c1e3(1): push %rax
c1e4(2): xor %eax,%eax
c1e6(7): mov %r10,0xfffffbd0(%rbp)
c1ed(5): call 0xffff5b13(%rip)
c1f2(4): add $0x30,%rsp
c1f6(7): mov 0xfffffbd0(%rbp),%r10
c1fd(5): jmp 0xfffffd89(%rip)
c202(6): nop 0x0(%rax,%rax,1)
c208(4): mov 0x50(%r13),%rax
c20c(4): lea 0x0(%r15,%r14,1),%rdi
c210(4): shl/sal $0x5,%rax
c214(7): add 0xfffffc58(%rbp),%rax
c21b(5): movsd 0x10(%rax),%xmm0
c220(6): mov 0xfffffc20(%rbp),%eax
c226(3): cmp $0x1,%eax
c229(6): jz 0x597(%rip)
c22f(3): cmp $0x2,%eax
c232(6): jnz 0x3fe(%rip)
c238(6): mov 0xfffffc4c(%rbp),%eax
c23e(6): push 0xfffffc10(%rbp)
c244(1): push %rax
c245(7): mov 0xfffffc48(%rbp),%r9d
c24c(7): mov 0xfffffc28(%rbp),%r8
c253(3): mov %r10,%rsi
c256(7): mov $0xffffffff,%rcx
c25d(5): mov $0x1,%edx
c262(5): mov $0x1,%eax
c267(7): mov %r10,0xfffffbd0(%rbp)
c26e(5): call 0xffff5a92(%rip)
c273(2): pop %r8
c275(7): mov 0xfffffbd0(%rbp),%r10
c27c(2): pop %r9
c27e(5): jmp 0xfffffd08(%rip)
c283(5): nop 0x0(%rax,%rax,1)
c288(4): mov 0x50(%r13),%rax
c28c(4): lea 0x0(%r15,%r14,1),%rdi
c290(4): shl/sal $0x5,%rax
c294(7): add 0xfffffc58(%rbp),%rax
c29b(5): movzx 0x10(%rax),%r9d
c2a0(6): mov 0xfffffc20(%rbp),%eax
c2a6(3): cmp $0x1,%eax
c2a9(6): jnz 0xfffffdd5(%rip)
c2af(1): nop 
c2b0(6): push 0xfffffc10(%rbp)
c2b6(2): push %r9
c2b8(7): mov 0xfffffc48(%rbp),%r9d
c2bf(5): jmp 0xfffffdd2(%rip)
c2c4(4): nop 0x0(%rax)
c2c8(4): mov 0x50(%r13),%rax
c2cc(4): lea 0x0(%r15,%r14,1),%rdi
c2d0(4): shl/sal $0x5,%rax
c2d4(7): add 0xfffffc58(%rbp),%rax
c2db(5): movsx 0x10(%rax),%r9d
c2e0(6): mov 0xfffffc20(%rbp),%eax
c2e6(3): cmp $0x1,%eax
c2e9(2): jz 0xffffffc7(%rip)
c2eb(3): cmp $0x2,%eax
c2ee(6): jnz 0xfffffd99(%rip)
c2f4(4): nop 0x0(%rax)
c2f8(4): sub $0x8,%rsp
c2fc(6): push 0xfffffc10(%rbp)
c302(2): push %r9
c304(6): mov 0xfffffc4c(%rbp),%eax
c30a(1): push %rax
c30b(7): mov 0xfffffc48(%rbp),%r9d
c312(7): mov 0xfffffc28(%rbp),%r8
c319(3): mov %r10,%rsi
c31c(7): mov $0xffffffff,%rcx
c323(5): mov $0x1,%edx
c328(2): xor %eax,%eax
c32a(7): mov %r10,0xfffffbd0(%rbp)
c331(5): call 0xffff59cf(%rip)
c336(4): add $0x20,%rsp
c33a(7): mov 0xfffffbd0(%rbp),%r10
c341(5): jmp 0xfffffc45(%rip)
c346(a): nop 0x0(%rax,%rax,1)
c350(4): mov 0x50(%r13),%rax
c354(4): lea 0x0(%r15,%r14,1),%rdi
c358(4): shl/sal $0x5,%rax
c35c(7): add 0xfffffc58(%rbp),%rax
c363(5): movzx 0x10(%rax),%r9d
c368(6): mov 0xfffffc20(%rbp),%eax
c36e(3): cmp $0x1,%eax
c371(6): jnz 0xfffffd0d(%rip)
c377(5): jmp 0xffffff39(%rip)
c37c(4): nop 0x0(%rax)
c380(4): mov 0x50(%r13),%rax
c384(4): lea 0x0(%r15,%r14,1),%rdi
c388(4): shl/sal $0x5,%rax
c38c(7): add 0xfffffc58(%rbp),%rax
c393(5): movsx 0x10(%rax),%r9d
c398(6): mov 0xfffffc20(%rbp),%eax
c39e(3): cmp $0x1,%eax
c3a1(6): jnz 0xfffffcdd(%rip)
c3a7(5): jmp 0xffffff09(%rip)
c3ac(4): nop 0x0(%rax)
c3b0(3): mov %r12,%rdi
c3b3(5): call 0xffff5c7d(%rip)
c3b8(3): test %rax,%rax
c3bb(3): mov %rax,%rcx
c3be(6): jz 0xfffff773(%rip)
c3c4(3): test %r14,%r14
c3c7(6): jz 0xb9(%rip)
c3cd(2): test %bl,%bl
c3cf(6): jz 0xb1(%rip)
c3d5(3): mov %r15,%rsi
c3d8(3): mov %r14,%rdx
c3db(3): mov %rax,%rdi
c3de(5): call 0xffff5c02(%rip)
c3e3(3): mov %rax,%r15
c3e6(5): jmp 0xfffffaea(%rip)
c3eb(5): nop 0x0(%rax,%rax,1)
c3f0(4): sub $0x8,%rsp
c3f4(6): push 0xfffffc10(%rbp)
c3fa(2): push %r9
c3fc(5): jmp 0xffffff08(%rip)
c401(7): nop 0x0(%rax)
c408(6): push 0xfffffc10(%rbp)
c40e(2): push %r9
c410(5): jmp 0xfffffea8(%rip)
c415(3): nop (%rax)
c418(4): mov $0x0,0x1(%rdi)
c41c(5): jmp 0xfffffab4(%rip)
c421(7): nop 0x0(%rax)
c428(4): cmp $0xffffffff,%rax
c42c(6): jnz 0x4ba(%rip)
c432(3): mov %r14,%rax
c435(4): add $0x1,%rax
c439(3): mov %rax,%rbx
c43c(6): jnb 0x8c(%rip)
c442(4): cmp $0xffffffff,%r12
c446(6): jnz 0xfffff6df(%rip)
c44c(3): mov %r12,%rbx
c44f(5): mov $0x25,0x0(%r15,%r14,1)
c454(4): mov 0x8(%r13),%r8
c458(4): add $0x58,%r13
c45c(4): mov 0x0(%r13),%rcx
c460(8): add $0x1,0xfffffc00(%rbp)
c468(3): cmp %r8,%rcx
c46b(6): jnz 0xfffff69e(%rip)
c471(3): mov %rbx,%r14
c474(5): jmp 0xfffff7ff(%rip)
c479(7): nop 0x0(%rax)
c480(3): mov %rcx,%r15
c483(5): jmp 0xfffffa4d(%rip)
c488(5): call 0xffff58b8(%rip)
c48d(7): mov %rax,0xfffffc38(%rbp)
c494(5): jmp 0xfffff6c3(%rip)
c499(7): nop 0x0(%rax)
c4a0(2): mov %edi,%edx
c4a2(3): sub $0x12,%edx
c4a5(3): cmp $0x4,%edx
c4a8(6): jnbe 0x43e(%rip)
c4ae(7): lea 0x3b5b(%rip),%rdi
c4b5(4): mov 0x10(%rax),%rax
c4b9(4): movsxd 0x0(%rdi,%rdx,4),%rdx
c4bd(3): add %rdi,%rdx
c4c0(2): jmp %rdx
c4c2(6): nop 0x0(%rax,%rax,1)
c4c8(3): cmp %rax,%r12
c4cb(2): jnb 0xffffff84(%rip)
c4cd(3): test %r12,%r12
c4d0(6): jnz 0x3d0(%rip)
c4d6(4): cmp $0xc,%rax
c4da(6): jnbe 0x3d8(%rip)
c4e0(6): mov $0xc,%r12d
c4e6(7): cmp 0xfffffc18(%rbp),%r15
c4ed(3): setz %dl
c4f0(3): test %r15,%r15
c4f3(6): jz 0x26d(%rip)
c4f9(2): test %dl,%dl
c4fb(6): jnz 0x265(%rip)
c501(3): mov %r12,%rsi
c504(3): mov %r15,%rdi
c507(5): call 0xffff5bc9(%rip)
c50c(3): test %rax,%rax
c50f(6): jz 0xfc(%rip)
c515(3): mov %rax,%r15
c518(5): jmp 0xffffff37(%rip)
c51d(3): nop (%rax)
c520(a): mov $0x0,0xfffffc20(%rbp)
c52a(5): jmp 0xfffff8ed(%rip)
c52f(1): nop 
c530(6): js 0xfffff5f5(%rip)
c536(3): add %r12,%r12
c539(3): cmp %rax,%r12
c53c(6): jnb 0xfffff6da(%rip)
c542(4): cmp $0xffffffff,%rax
c546(6): jz 0xfffff5df(%rip)
c54c(7): cmp 0xfffffc18(%rbp),%r15
c553(3): mov %rax,%r12
c556(3): setz %dl
c559(3): test %r15,%r15
c55c(6): jnz 0xfffff6cd(%rip)
c562(6): nop 0x0(%rax,%rax,1)
c568(3): mov %r12,%rdi
c56b(7): mov %r8,0xfffffc20(%rbp)
c572(6): mov %dl,0xfffffc30(%rbp)
c578(7): mov %rcx,0xfffffc38(%rbp)
c57f(5): call 0xffff5ab1(%rip)
c584(3): test %rax,%rax
c587(3): mov %rax,%r9
c58a(7): mov 0xfffffc38(%rbp),%rcx
c591(7): movzx 0xfffffc30(%rbp),%edx
c598(7): mov 0xfffffc20(%rbp),%r8
c59f(6): jz 0xfffff586(%rip)
c5a5(3): test %rbx,%rbx
c5a8(6): jz 0x208(%rip)
c5ae(2): test %dl,%dl
c5b0(6): jz 0x200(%rip)
c5b6(3): mov %r15,%rsi
c5b9(3): mov %rbx,%rdx
c5bc(3): mov %rax,%rdi
c5bf(7): mov %r8,0xfffffc30(%rbp)
c5c6(7): mov %rcx,0xfffffc38(%rbp)
c5cd(5): call 0xffff5a13(%rip)
c5d2(7): mov 0xfffffc38(%rbp),%rcx
c5d9(3): mov %rax,%r15
c5dc(7): mov 0xfffffc30(%rbp),%r8
c5e3(5): jmp 0xfffff681(%rip)
c5e8(8): nop 0x0(%rax,%rax,1)
c5f0(3): mov %r12,%r14
c5f3(5): jmp 0xfffff671(%rip)
c5f8(8): nop 0x0(%rax,%rax,1)
c600(3): mov %r14,(%rax)
c603(3): mov %r14,%rbx
c606(5): jmp 0xfffffe4e(%rip)
c60b(5): call 0xffff5735(%rip)
c610(7): mov %rax,0xfffffc38(%rbp)
c617(9): nop 0x0(%rax,%rax,1)
c620(3): mov %r15,%rdi
c623(5): call 0xffff56ed(%rip)
c628(5): jmp 0xfffff51b(%rip)
c62d(3): nop (%rax)
c630(7): mov 0xfffffc10(%rbp),%r9
c637(7): mov 0xfffffc28(%rbp),%r8
c63e(3): mov %r10,%rsi
c641(7): mov $0xffffffff,%rcx
c648(5): mov $0x1,%edx
c64d(5): mov $0x1,%eax
c652(7): mov %r10,0xfffffbd0(%rbp)
c659(5): call 0xffff56a7(%rip)
c65e(7): mov 0xfffffbd0(%rbp),%r10
c665(5): jmp 0xfffff921(%rip)
c66a(6): nop 0x0(%rax,%rax,1)
c670(4): sub $0x10,%rsp
c674(7): mov 0xfffffc10(%rbp),%r9
c67b(3): fstp %st0,(%rsp)
c67e(5): jmp 0xfffff8db(%rip)
c683(5): nop 0x0(%rax,%rax,1)
c688(6): js 0xfffff49d(%rip)
c68e(3): add %r12,%r12
c691(3): cmp %rax,%r12
c694(6): jnb 0xfffff7e5(%rip)
c69a(6): nop 0x0(%rax,%rax,1)
c6a0(3): test %rdx,%rdx
c6a3(6): jnz 0xfffff482(%rip)
c6a9(4): cmp $0xffffffff,%rax
c6ad(6): jz 0xfffff478(%rip)
c6b3(7): cmp 0xfffffc18(%rbp),%r15
c6ba(3): mov %rax,%r12
c6bd(3): setz %dl
c6c0(3): test %r15,%r15
c6c3(6): jnz 0xfffff7c9(%rip)
c6c9(7): nop 0x0(%rax)
c6d0(3): mov %r12,%rdi
c6d3(6): mov %dl,0xfffffc38(%rbp)
c6d9(5): call 0xffff5957(%rip)
c6de(3): test %rax,%rax
c6e1(3): mov %rax,%rcx
c6e4(7): movzx 0xfffffc38(%rbp),%edx
c6eb(6): jz 0xfffff43a(%rip)
c6f1(3): test %r14,%r14
c6f4(6): jz 0x19c(%rip)
c6fa(2): test %dl,%dl
c6fc(6): jz 0x194(%rip)
c702(3): mov %r15,%rsi
c705(3): mov %r14,%rdx
c708(3): mov %rax,%rdi
c70b(5): call 0xffff58d5(%rip)
c710(3): mov %rax,%r15
c713(5): jmp 0xfffff798(%rip)
c718(8): nop 0x0(%rax,%rax,1)
c720(3): mov $0x4c,(%rbx)
c723(4): add $0x1,%rbx
c727(5): jmp 0xfffff6b4(%rip)
c72c(4): nop 0x0(%rax)
c730(3): mov %r14b,(%rax)
c733(3): mov %r14,%rbx
c736(5): jmp 0xfffffd1e(%rip)
c73b(5): nop 0x0(%rax,%rax,1)
c740(3): mov %r14d,(%rax)
c743(3): mov %r14,%rbx
c746(5): jmp 0xfffffd0e(%rip)
c74b(5): nop 0x0(%rax,%rax,1)
c750(4): mov %r14w,(%rax)
c754(3): mov %r14,%rbx
c757(5): jmp 0xfffffcfd(%rip)
c75c(4): nop 0x0(%rax)
c760(3): mov %r12,%rdi
c763(6): mov %dl,0xfffffc38(%rbp)
c769(5): call 0xffff58c7(%rip)
c76e(3): test %rax,%rax
c771(3): mov %rax,%rcx
c774(7): movzx 0xfffffc38(%rbp),%edx
c77b(6): jz 0xfffff3aa(%rip)
c781(3): test %r14,%r14
c784(6): jz 0x140(%rip)
c78a(2): test %dl,%dl
c78c(6): jz 0x138(%rip)
c792(3): mov %r15,%rsi
c795(3): mov %r14,%rdx
c798(3): mov %rax,%rdi
c79b(5): call 0xffff5845(%rip)
c7a0(3): mov %rax,%r15
c7a3(5): jmp 0xfffffcac(%rip)
c7a8(8): nop 0x0(%rax,%rax,1)
c7b0(3): mov %r9,%r15
c7b3(5): jmp 0xfffff4b1(%rip)
c7b8(8): nop 0x0(%rax,%rax,1)
c7c0(4): sub $0x8,%rsp
c7c4(6): push 0xfffffc10(%rbp)
c7ca(5): jmp 0xfffffa7b(%rip)
c7cf(1): nop 
c7d0(4): sub $0x8,%rsp
c7d4(6): push 0xfffffc10(%rbp)
c7da(4): sub $0x10,%rsp
c7de(3): fstp %st0,(%rsp)
c7e1(5): jmp 0xfffffb2a(%rip)
c7e6(a): nop 0x0(%rax,%rax,1)
c7f0(7): mov 0xfffffc38(%rbp),%rax
c7f7(6): mov 0xfffffbdc(%rbp),%edi
c7fd(3): movsxd %ecx,%rbx
c800(3): add %r14,%rbx
c803(2): mov %edi,(%rax)
c805(5): jmp 0xfffffc4f(%rip)
c80a(6): nop 0x0(%rax,%rax,1)
c810(7): cmp 0xfffffc18(%rbp),%r15
c817(2): jz 0xb(%rip)
c819(3): test %r15,%r15
c81c(6): jnz 0xbd(%rip)
c822(7): mov 0xfffffbe0(%rbp),%rax
c829(3): test %rax,%rax
c82c(2): jz 0xa(%rip)
c82e(3): mov %rax,%rdi
c831(5): call 0xffff54df(%rip)
c836(7): mov 0xfffffbf8(%rbp),%rax
c83d(7): mov 0xfffffd48(%rbp),%rdi
c844(4): add $0x20,%rax
c848(3): cmp %rax,%rdi
c84b(2): jz 0x7(%rip)
c84d(5): call 0xffff54c3(%rip)
c852(7): mov 0xfffffbf0(%rbp),%rax
c859(7): mov 0xfffffc58(%rbp),%rdi
c860(4): add $0x10,%rax
c864(3): cmp %rax,%rdi
c867(2): jz 0x7(%rip)
c869(5): call 0xffff54a7(%rip)
c86e(7): mov 0xfffffc38(%rbp),%rax
c875(3): xor %r15d,%r15d
c878(6): mov $0x4b,(%rax)
c87e(5): jmp 0xfffff321(%rip)
c883(5): nop 0x0(%rax,%rax,1)
c888(3): xor %r15d,%r15d
c88b(5): jmp 0xfffff314(%rip)
c890(3): mov %rcx,%r15
c893(5): jmp 0xfffff618(%rip)
c898(8): nop 0x0(%rax,%rax,1)
c8a0(6): js 0xfffff285(%rip)
c8a6(3): add %r12,%r12
c8a9(3): cmp %rax,%r12
c8ac(6): jnb 0xfffffc3a(%rip)
c8b2(4): cmp $0xffffffff,%rax
c8b6(6): jz 0xfffff26f(%rip)
c8bc(3): mov %rax,%r12
c8bf(5): jmp 0xfffffc27(%rip)
c8c4(3): mov %rcx,%r15
c8c7(5): jmp 0xfffffb88(%rip)
c8cc(3): mov %r15,%rdi
c8cf(5): call 0xffff5441(%rip)
c8d4(5): jmp 0xfffff84e(%rip)
c8d9(3): mov %r15,%rdi
c8dc(5): call 0xffff5434(%rip)
c8e1(5): jmp 0xffffff41(%rip)
c8e6(5): call 0xffff544a(%rip)
c8eb(5): nop 0x0(%rax,%rax,1)
c8f0(7): mov 0xfffffbf8(%rbp),%rax
c8f7(7): mov 0xfffffd48(%rbp),%rdi
c8fe(4): add $0x20,%rax
c902(3): cmp %rax,%rdi
c905(2): jz 0x7(%rip)
c907(5): call 0xffff5409(%rip)
c90c(7): mov 0xfffffbf0(%rbp),%rax
c913(7): mov 0xfffffc58(%rbp),%rdi
c91a(4): add $0x10,%rax
c91e(3): cmp %rax,%rdi
c921(2): jz 0x7(%rip)
c923(5): call 0xffff53ed(%rip)
c928(5): call 0xffff5418(%rip)
c92d(3): xor %r15d,%r15d
c930(6): mov $0x16,(%rax)
c936(5): jmp 0xfffff269(%rip)
c93b(3): mov %r14,%rbx
c93e(2): xor %eax,%eax
c940(4): add $0x1,%rbx
c944(6): jb 0x10c(%rip)
c94a(3): cmp %rbx,%r12
c94d(2): jnb 0x4f(%rip)
c94f(3): test %r12,%r12
c952(6): jnz 0x137(%rip)
c958(4): cmp $0xc,%rbx
c95c(6): jnbe 0x112(%rip)
c962(6): mov $0xc,%r12d
c968(7): cmp 0xfffffc18(%rbp),%r15
c96f(4): setz %r13b
c973(3): test %r15,%r15
c976(6): jz 0xa6(%rip)
c97c(3): test %r13b,%r13b
c97f(6): jnz 0x9d(%rip)
c985(3): mov %r12,%rsi
c988(3): mov %r15,%rdi
c98b(5): call 0xffff5745(%rip)
c990(3): test %rax,%rax
c993(6): jz 0xfffffc78(%rip)
c999(3): mov %rax,%r15
c99c(7): cmp 0xfffffc18(%rbp),%r15
c9a3(5): mov $0x0,0x0(%r15,%r14,1)
c9a8(2): jz 0x19(%rip)
c9aa(3): cmp %rbx,%r12
c9ad(2): jbe 0x14(%rip)
c9af(3): mov %r15,%rdi
c9b2(3): mov %rbx,%rsi
c9b5(5): call 0xffff571b(%rip)
c9ba(3): test %rax,%rax
c9bd(4): cmovne %rax,%r15
c9c1(7): mov 0xfffffbe0(%rbp),%rax
c9c8(3): test %rax,%rax
c9cb(2): jz 0xa(%rip)
c9cd(3): mov %rax,%rdi
c9d0(5): call 0xffff5340(%rip)
c9d5(7): mov 0xfffffbf8(%rbp),%rax
c9dc(7): mov 0xfffffd48(%rbp),%rdi
c9e3(4): add $0x20,%rax
c9e7(3): cmp %rax,%rdi
c9ea(2): jz 0x7(%rip)
c9ec(5): call 0xffff5324(%rip)
c9f1(7): mov 0xfffffbf0(%rbp),%rax
c9f8(7): mov 0xfffffc58(%rbp),%rdi
c9ff(4): add $0x10,%rax
ca03(3): cmp %rax,%rdi
ca06(2): jz 0x7(%rip)
ca08(5): call 0xffff5308(%rip)
ca0d(7): mov 0xfffffbe8(%rbp),%rax
ca14(3): mov %r14,(%rax)
ca17(5): jmp 0xfffff188(%rip)
ca1c(3): mov %r12,%rdi
ca1f(5): call 0xffff5611(%rip)
ca24(3): test %rax,%rax
ca27(3): mov %rax,%rcx
ca2a(6): jz 0xfffff0fb(%rip)
ca30(3): test %r14,%r14
ca33(2): jz 0x6d(%rip)
ca35(3): test %r13b,%r13b
ca38(2): jz 0x68(%rip)
ca3a(3): mov %r15,%rsi
ca3d(3): mov %r14,%rdx
ca40(3): mov %rax,%rdi
ca43(5): call 0xffff559d(%rip)
ca48(3): mov %rax,%r15
ca4b(5): jmp 0xffffff51(%rip)
ca50(4): cmp $0xffffffff,%r12
ca54(5): mov $0x1,%eax
ca59(6): jz 0xffffff43(%rip)
ca5f(3): test %r12,%r12
ca62(6): jz 0xfffff0c3(%rip)
ca68(6): js 0xfffff0bd(%rip)
ca6e(3): test %rax,%rax
ca71(6): jnz 0xfffff0b4(%rip)
ca77(4): cmp $0xffffffff,%rbx
ca7b(6): jz 0xfffff0aa(%rip)
ca81(3): mov %rbx,%r12
ca84(5): jmp 0xfffffee4(%rip)
ca89(6): js 0xfffff09c(%rip)
ca8f(3): add %r12,%r12
ca92(3): cmp %rbx,%r12
ca95(6): jnb 0xfffffed3(%rip)
ca9b(2): jmp 0xffffffd3(%rip)
ca9d(3): nop (%rax)
caa0(3): mov %rcx,%r15
caa3(5): jmp 0xfffffef9(%rip)
caa8(4): cmp $0xffffffff,%r12
caac(6): jz 0xfffff424(%rip)
cab2(5): jmp 0xfffff07f(%rip)
cab7(5): call 0xffff53c9(%rip)
cabc(4): cmp $0xffffffff,%r12
cac0(5): mov $0x1,%edx
cac5(6): jz 0xfffff3e6(%rip)
cacb(3): test %r12,%r12
cace(6): jz 0xfffff057(%rip)
cad4(6): jns 0xfffffbcc(%rip)
cada(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
cae0(4): cmp $0x0,(%rsi)
cae4(4): mov 0x8(%rsi),%rax
cae8(2): jz 0x65(%rip)
caea(7): lea 0x353f(%rip),%r8
caf1(7): lea 0x3598(%rip),%r10
caf8(7): lea 0x3525(%rip),%r9
caff(2): xor %ecx,%ecx
cb01(7): nop 0x0(%rax)
cb08(3): cmp $0x16,(%rax)
cb0b(2): jnbe 0x45(%rip)
cb0d(2): mov (%rax),%edx
cb0f(4): movsxd 0x0(%r8,%rdx,4),%rdx
cb13(3): add %r8,%rdx
cb16(2): jmp %rdx
cb18(8): nop 0x0(%rax,%rax,1)
cb20(4): mov 0x8(%rdi),%rdx
cb24(4): add $0xf,%rdx
cb28(4): and $0xfffffff0,%rdx
cb2c(4): lea 0x10(%rdx),%r11
cb30(4): mov %r11,0x8(%rdi)
cb34(2): fld (%rdx),%st0
cb36(3): fstp %st0,0x10(%rax)
cb39(7): nop 0x0(%rax)
cb40(4): add $0x1,%rcx
cb44(4): add $0x20,%rax
cb48(3): cmp %rcx,(%rsi)
cb4b(2): jnbe 0xffffffbd(%rip)
cb4d(2): xor %eax,%eax
cb4f(1): ret near (%rsp)
cb50(5): mov $0xffffffff,%eax
cb55(1): ret near (%rsp)
cb56(3): mov (%rdi),%r11d
cb59(4): cmp $0x2f,%r11d
cb5d(6): jnbe 0x13d(%rip)
cb63(3): mov %r11d,%edx
cb66(4): add 0x10(%rdi),%rdx
cb6a(4): add $0x8,%r11d
cb6e(3): mov %r11d,(%rdi)
cb71(3): mov (%rdx),%rdx
cb74(4): mov %rdx,0x10(%rax)
cb78(2): jmp 0xffffffc8(%rip)
cb7a(3): mov (%rdi),%r11d
cb7d(4): cmp $0x2f,%r11d
cb81(6): jnbe 0x13b(%rip)
cb87(3): mov %r11d,%edx
cb8a(4): add 0x10(%rdi),%rdx
cb8e(4): add $0x8,%r11d
cb92(3): mov %r11d,(%rdi)
cb95(2): mov (%rdx),%edx
cb97(3): mov %edx,0x10(%rax)
cb9a(2): jmp 0xffffffa6(%rip)
cb9c(3): mov (%rdi),%r11d
cb9f(4): cmp $0x2f,%r11d
cba3(6): jnbe 0x108(%rip)
cba9(3): mov %r11d,%edx
cbac(4): add 0x10(%rdi),%rdx
cbb0(4): add $0x8,%r11d
cbb4(3): mov %r11d,(%rdi)
cbb7(2): mov (%rdx),%edx
cbb9(3): mov %dl,0x10(%rax)
cbbc(2): jmp 0xffffff84(%rip)
cbbe(3): mov (%rdi),%r11d
cbc1(4): cmp $0x2f,%r11d
cbc5(6): jnbe 0xa5(%rip)
cbcb(3): mov %r11d,%edx
cbce(4): add 0x10(%rdi),%rdx
cbd2(4): add $0x8,%r11d
cbd6(3): mov %r11d,(%rdi)
cbd9(2): mov (%rdx),%edx
cbdb(4): mov %dx,0x10(%rax)
cbdf(5): jmp 0xffffff61(%rip)
cbe4(3): mov (%rdi),%r11d
cbe7(4): cmp $0x2f,%r11d
cbeb(6): jnbe 0x90(%rip)
cbf1(3): mov %r11d,%edx
cbf4(4): add 0x10(%rdi),%rdx
cbf8(4): add $0x8,%r11d
cbfc(3): mov %r11d,(%rdi)
cbff(3): mov (%rdx),%rdx
cc02(3): test %rdx,%rdx
cc05(4): cmove %r9,%rdx
cc09(4): mov %rdx,0x10(%rax)
cc0d(5): jmp 0xffffff33(%rip)
cc12(4): mov 0x4(%rdi),%r11d
cc16(7): cmp $0xaf,%r11d
cc1d(6): jnbe 0xb0(%rip)
cc23(3): mov %r11d,%edx
cc26(4): add 0x10(%rdi),%rdx
cc2a(4): add $0x10,%r11d
cc2e(4): mov %r11d,0x4(%rdi)
cc32(4): movsd (%rdx),%xmm0
cc36(5): movsd %xmm0,0x10(%rax)
cc3b(5): jmp 0xffffff05(%rip)
cc40(3): mov (%rdi),%r11d
cc43(4): cmp $0x2f,%r11d
cc47(2): jnbe 0x45(%rip)
cc49(3): mov %r11d,%edx
cc4c(4): add 0x10(%rdi),%rdx
cc50(4): add $0x8,%r11d
cc54(3): mov %r11d,(%rdi)
cc57(3): mov (%rdx),%rdx
cc5a(3): test %rdx,%rdx
cc5d(4): cmove %r10,%rdx
cc61(4): mov %rdx,0x10(%rax)
cc65(5): jmp 0xfffffedb(%rip)
cc6a(4): mov 0x8(%rdi),%rdx
cc6e(4): lea 0x8(%rdx),%r11
cc72(4): mov %r11,0x8(%rdi)
cc76(5): jmp 0xffffff63(%rip)
cc7b(4): mov 0x8(%rdi),%rdx
cc7f(4): lea 0x8(%rdx),%r11
cc83(4): mov %r11,0x8(%rdi)
cc87(5): jmp 0xffffff78(%rip)
cc8c(4): mov 0x8(%rdi),%rdx
cc90(4): lea 0x8(%rdx),%r11
cc94(4): mov %r11,0x8(%rdi)
cc98(2): jmp 0xffffffbf(%rip)
cc9a(4): mov 0x8(%rdi),%rdx
cc9e(4): lea 0x8(%rdx),%r11
cca2(4): mov %r11,0x8(%rdi)
cca6(5): jmp 0xfffffecb(%rip)
ccab(4): mov 0x8(%rdi),%rdx
ccaf(4): lea 0x8(%rdx),%r11
ccb3(4): mov %r11,0x8(%rdi)
ccb7(5): jmp 0xffffff00(%rip)
ccbc(4): mov 0x8(%rdi),%rdx
ccc0(4): lea 0x8(%rdx),%r11
ccc4(4): mov %r11,0x8(%rdi)
ccc8(5): jmp 0xfffffecd(%rip)
cccd(4): mov 0x8(%rdi),%rdx
ccd1(4): lea 0x8(%rdx),%r11
ccd5(4): mov %r11,0x8(%rdi)
ccd9(5): jmp 0xffffff59(%rip)

"printf_parse" :
cce0(2): push %r15
cce2(2): push %r14
cce4(4): lea 0x20(%rsi),%rcx
cce8(2): push %r13
ccea(2): push %r12
ccec(4): lea 0x10(%rdx),%rax
ccf0(1): push %rbp
ccf1(1): push %rbx
ccf2(3): mov %rsi,%r14
ccf5(3): mov %rdx,%r15
ccf8(2): xor %ebx,%ebx
ccfa(6): mov $0x7,%r9d
cd00(4): sub $0x58,%rsp
cd04(6): mov $0x7,%r10d
cd0a(7): mov $0x0,(%rsi)
cd11(4): mov %rcx,0x8(%rsi)
cd15(5): mov %rcx,0x28(%rsp)
cd1a(7): mov $0xffffffff,%r8
cd21(7): mov $0x0,(%rdx)
cd28(5): mov %rax,0x8(%rsp)
cd2d(4): mov %rax,0x8(%rdx)
cd31(9): mov $0x0,0x18(%rsp)
cd3a(9): mov $0x0,0x10(%rsp)
cd43(9): mov $0x0,0x20(%rsp)
cd4c(2): jmp 0xf(%rip)
cd4e(2): nop 
cd50(2): cmp $0x25,%al
cd52(4): lea 0x1(%rdi),%rbp
cd56(2): jz 0x42(%rip)
cd58(3): mov %rbp,%rdi
cd5b(3): movzx (%rdi),%eax
cd5e(2): test %al,%al
cd60(2): jnz 0xfffffff0(%rip)
cd62(4): lea 0x0(%rbx,%rbx,4),%rax
cd66(4): lea 0x0(%rbx,%rax,2),%rax
cd6a(4): mov %rdi,0x0(%rcx,%rax,8)
cd6e(5): mov 0x10(%rsp),%rax
cd73(4): mov %rax,0x10(%r14)
cd77(5): mov 0x18(%rsp),%rax
cd7c(4): mov %rax,0x18(%r14)
cd80(2): xor %eax,%eax
cd82(4): add $0x58,%rsp
cd86(1): pop %rbx
cd87(1): pop %rbp
cd88(2): pop %r12
cd8a(2): pop %r13
cd8c(2): pop %r14
cd8e(2): pop %r15
cd90(1): ret near (%rsp)
cd91(7): nop 0x0(%rax)
cd98(4): lea 0x0(%rbx,%rbx,4),%rax
cd9c(3): mov %r8,%r13
cd9f(4): lea 0x0(%rbx,%rax,2),%rax
cda3(4): lea 0x0(%rcx,%rax,8),%r12
cda7(4): mov %rdi,(%r12)
cdab(9): mov $0x0,0x10(%r12)
cdb4(9): mov $0x0,0x18(%r12)
cdbd(9): mov $0x0,0x20(%r12)
cdc6(5): mov %r8,0x28(%r12)
cdcb(9): mov $0x0,0x30(%r12)
cdd4(9): mov $0x0,0x38(%r12)
cddd(5): mov %r8,0x40(%r12)
cde2(5): mov %r8,0x50(%r12)
cde7(4): movzx 0x1(%rdi),%ebx
cdeb(3): lea 0xffffffd0(%rbx),%eax
cdee(2): cmp $0x9,%al
cdf0(2): jnbe 0x3e(%rip)
cdf2(5): jmp 0x438(%rip)
cdf7(9): nop 0x0(%rax,%rax,1)
ce00(3): cmp $0x2d,%bl
ce03(2): jz 0x45(%rip)
ce05(3): cmp $0x2b,%bl
ce08(2): jz 0x48(%rip)
ce0a(3): cmp $0x20,%bl
ce0d(2): jz 0x53(%rip)
ce0f(3): cmp $0x23,%bl
ce12(2): jz 0x5e(%rip)
ce14(3): cmp $0x30,%bl
ce17(2): jz 0x69(%rip)
ce19(3): cmp $0x49,%bl
ce1c(2): jnz 0x74(%rip)
ce1e(6): or $0x40,0x10(%r12)
ce24(4): nop 0x0(%rax)
ce28(3): movzx (%rax),%ebx
ce2b(3): mov %rax,%rbp
ce2e(4): lea 0x1(%rbp),%rax
ce32(3): cmp $0x27,%bl
ce35(3): mov %rax,%rdx
ce38(2): jnz 0xffffffc8(%rip)
ce3a(6): or $0x1,0x10(%r12)
ce40(2): jmp 0xffffffe8(%rip)
ce42(6): nop 0x0(%rax,%rax,1)
ce48(6): or $0x2,0x10(%r12)
ce4e(2): jmp 0xffffffda(%rip)
ce50(6): or $0x4,0x10(%r12)
ce56(2): jmp 0xffffffd2(%rip)
ce58(8): nop 0x0(%rax,%rax,1)
ce60(6): or $0x8,0x10(%r12)
ce66(2): jmp 0xffffffc2(%rip)
ce68(8): nop 0x0(%rax,%rax,1)
ce70(6): or $0x10,0x10(%r12)
ce76(2): jmp 0xffffffb2(%rip)
ce78(8): nop 0x0(%rax,%rax,1)
ce80(6): or $0x20,0x10(%r12)
ce86(2): jmp 0xffffffa2(%rip)
ce88(8): nop 0x0(%rax,%rax,1)
ce90(3): cmp $0x2a,%bl
ce93(6): jz 0x1b6(%rip)
ce99(3): lea 0xffffffd0(%rbx),%ecx
ce9c(3): cmp $0x9,%cl
ce9f(6): jbe 0x418(%rip)
cea5(3): cmp $0x2e,%bl
cea8(6): jz 0x2d7(%rip)
ceae(2): xor %eax,%eax
ceb0(5): mov $0x1,%esi
ceb5(2): jmp 0x32(%rip)
ceb7(9): nop 0x0(%rax,%rax,1)
cec0(3): cmp $0x4c,%bl
cec3(2): jz 0x3d(%rip)
cec5(3): cmp $0x6c,%bl
cec8(2): jz 0x18(%rip)
ceca(3): cmp $0x6a,%bl
cecd(2): jz 0x13(%rip)
cecf(2): mov %ebx,%edx
ced1(3): and $0xdf,%edx
ced4(3): cmp $0x5a,%dl
ced7(2): jz 0x9(%rip)
ced9(3): cmp $0x74,%bl
cedc(2): jnz 0x2c(%rip)
cede(2): nop 
cee0(3): add $0x8,%eax
cee3(4): movzx 0x0(%rbp),%ebx
cee7(4): add $0x1,%rbp
ceeb(3): cmp $0x68,%bl
ceee(2): jnz 0xffffffd2(%rip)
cef0(2): mov %eax,%ecx
cef2(2): mov %esi,%edx
cef4(3): and $0x1,%ecx
cef7(2): shl/sal %cl,%edx
cef9(2): or %edx,%eax
cefb(2): jmp 0xffffffe8(%rip)
cefd(3): nop (%rax)
cf00(3): or $0x4,%eax
cf03(2): jmp 0xffffffe0(%rip)
cf05(3): nop (%rax)
cf08(3): lea 0xffffffdb(%rbx),%edx
cf0b(3): cmp $0x53,%dl
cf0e(6): jnbe 0x61d(%rip)
cf14(7): lea 0x3191(%rip),%rcx
cf1b(3): movzx %dl,%edx
cf1e(4): movsxd 0x0(%rcx,%rdx,4),%rdx
cf22(3): add %rcx,%rdx
cf25(2): jmp %rdx
cf27(6): mov $0x10,%r11d
cf2d(5): mov $0x73,%ebx
cf32(6): nop 0x0(%rax,%rax,1)
cf38(4): cmp $0xffffffff,%r13
cf3c(6): jz 0x6bb(%rip)
cf42(5): mov %r13,0x50(%r12)
cf47(3): cmp %r13,%r9
cf4a(4): mov 0x8(%r15),%rcx
cf4e(6): jbe 0x622(%rip)
cf54(3): mov (%r15),%rax
cf57(3): mov %rax,%rdx
cf5a(4): shl/sal $0x5,%rdx
cf5e(3): add %rcx,%rdx
cf61(3): cmp %r13,%rax
cf64(2): jnbe 0x22(%rip)
cf66(a): nop 0x0(%rax,%rax,1)
cf70(4): add $0x1,%rax
cf74(6): mov $0x0,(%rdx)
cf7a(4): add $0x20,%rdx
cf7e(3): cmp %r13,%rax
cf81(2): jbe 0xffffffef(%rip)
cf83(3): mov %rax,(%r15)
cf86(4): shl/sal $0x5,%r13
cf8a(4): lea 0x0(%rcx,%r13,1),%rax
cf8e(2): mov (%rax),%edx
cf90(2): test %edx,%edx
cf92(6): jnz 0x5d1(%rip)
cf98(3): mov %r11d,(%rax)
cf9b(5): mov %bl,0x48(%r12)
cfa0(3): mov (%r14),%rax
cfa3(5): mov %rbp,0x8(%r12)
cfa8(4): lea 0x1(%rax),%rbx
cfac(3): cmp %rbx,%r10
cfaf(3): mov %rbx,(%r14)
cfb2(6): jnbe 0x8e(%rip)
cfb8(3): test %r10,%r10
cfbb(6): js 0x9ac(%rip)
cfc1(3): add %r10,%r10
cfc4(a): mov $0x209622091746699450,%rax
cfce(3): cmp %rax,%r10
cfd1(6): jnbe 0x996(%rip)
cfd7(4): lea 0x0(%r10,%r10,4),%rax
cfdb(4): mov 0x8(%r14),%rdi
cfdf(5): cmp %rdi,0x28(%rsp)
cfe4(5): mov %r9,0x40(%rsp)
cfe9(5): mov %r10,0x38(%rsp)
cfee(4): lea 0x0(%r10,%rax,2),%rax
cff2(5): mov %r8,0x30(%rsp)
cff7(8): lea 0x0(,%rax,8),%rsi
cfff(6): jz 0x6be(%rip)
d005(5): call 0xffff50cb(%rip)
d00a(3): test %rax,%rax
d00d(3): mov %rax,%rcx
d010(5): mov 0x30(%rsp),%r8
d015(5): mov 0x38(%rsp),%r10
d01a(5): mov 0x40(%rsp),%r9
d01f(6): jz 0x948(%rip)
d025(5): mov 0x28(%rsp),%rax
d02a(4): cmp 0x8(%r14),%rax
d02e(3): mov (%r14),%rbx
d031(6): jz 0x6af(%rip)
d037(4): mov %rcx,0x8(%r14)
d03b(5): jmp 0xfffffd1d(%rip)
d040(4): mov 0x8(%r14),%rcx
d044(5): jmp 0xfffffd14(%rip)
d049(5): mov 0x10(%rsp),%rsi
d04e(5): mov $0x1,%ecx
d053(5): mov %rbp,0x18(%r12)
d058(5): mov %rax,0x20(%r12)
d05d(3): test %rsi,%rsi
d060(4): cmovne %rsi,%rcx
d064(5): mov %rcx,0x10(%rsp)
d069(4): movzx 0x1(%rbp),%ecx
d06d(3): lea 0xffffffd0(%rcx),%esi
d070(4): cmp $0x9,%sil
d074(6): jbe 0x2e1(%rip)
d07a(5): mov 0x20(%rsp),%rsi
d07f(4): cmp $0xffffffff,%rsi
d083(4): lea 0x1(%rsi),%rdx
d087(5): mov %rsi,0x28(%r12)
d08c(6): jz 0x49f(%rip)
d092(5): mov 0x20(%rsp),%rbx
d097(3): mov %rax,%rbp
d09a(5): mov %rdx,0x20(%rsp)
d09f(3): cmp %rbx,%r9
d0a2(4): mov 0x8(%r15),%rcx
d0a6(6): jnbe 0x67c(%rip)
d0ac(3): add %r9,%r9
d0af(4): lea 0x1(%rbx),%rax
d0b3(3): cmp %rbx,%r9
d0b6(4): cmovbe %rax,%r9
d0ba(a): mov $0x576460752303423487,%rax
d0c4(3): cmp %rax,%r9
d0c7(6): jnbe 0x8a4(%rip)
d0cd(3): mov %r9,%rsi
d0d0(5): mov %r9,0x40(%rsp)
d0d5(5): mov %r10,0x38(%rsp)
d0da(4): shl/sal $0x5,%rsi
d0de(5): cmp %rcx,0x8(%rsp)
d0e3(5): mov %r8,0x30(%rsp)
d0e8(6): jz 0x719(%rip)
d0ee(3): mov %rcx,%rdi
d0f1(5): call 0xffff4fdf(%rip)
d0f6(4): mov 0x8(%r15),%rdx
d0fa(5): mov 0x30(%rsp),%r8
d0ff(3): mov %rax,%rcx
d102(5): mov 0x38(%rsp),%r10
d107(5): mov 0x40(%rsp),%r9
d10c(3): test %rcx,%rcx
d10f(6): jz 0x8b8(%rip)
d115(5): cmp %rdx,0x8(%rsp)
d11a(3): mov (%r15),%rax
d11d(6): jz 0x7be(%rip)
d123(4): mov %rcx,0x8(%r15)
d127(3): mov %rax,%rdx
d12a(4): shl/sal $0x5,%rdx
d12e(3): add %rcx,%rdx
d131(3): cmp %rbx,%rax
d134(2): jnbe 0x22(%rip)
d136(a): nop 0x0(%rax,%rax,1)
d140(4): add $0x1,%rax
d144(6): mov $0x0,(%rdx)
d14a(4): add $0x20,%rdx
d14e(3): cmp %rbx,%rax
d151(2): jbe 0xffffffef(%rip)
d153(3): mov %rax,(%r15)
d156(4): shl/sal $0x5,%rbx
d15a(4): lea 0x0(%rcx,%rbx,1),%rax
d15e(2): mov (%rax),%edx
d160(2): test %edx,%edx
d162(6): jnz 0x4d9(%rip)
d168(6): mov $0x5,(%rax)
d16e(4): movzx 0x0(%rbp),%ebx
d172(4): lea 0x1(%rbp),%rdx
d176(3): cmp $0x2e,%bl
d179(6): jnz 0xfffffd35(%rip)
d17f(4): cmp $0x2a,0x1(%rbp)
d183(5): mov %rbp,0x30(%r12)
d188(6): jnz 0x186(%rip)
d18e(5): mov 0x18(%rsp),%rsi
d193(4): lea 0x2(%rbp),%r11
d197(5): mov $0x2,%eax
d19c(5): mov %r11,0x38(%r12)
d1a1(4): cmp $0x2,%rsi
d1a5(4): cmovnb %rsi,%rax
d1a9(5): mov %rax,0x18(%rsp)
d1ae(4): movsx 0x2(%rbp),%eax
d1b2(3): lea 0xffffffd0(%rax),%edx
d1b5(3): cmp $0x9,%dl
d1b8(6): jbe 0x694(%rip)
d1be(5): mov 0x40(%r12),%rbx
d1c3(4): cmp $0xffffffff,%rbx
d1c7(6): jz 0x65e(%rip)
d1cd(3): cmp %rbx,%r9
d1d0(4): mov 0x8(%r15),%rcx
d1d4(6): jbe 0x56b(%rip)
d1da(3): mov (%r15),%rax
d1dd(3): mov %rax,%rdx
d1e0(4): shl/sal $0x5,%rdx
d1e4(3): add %rcx,%rdx
d1e7(3): cmp %rbx,%rax
d1ea(2): jnbe 0x1c(%rip)
d1ec(4): nop 0x0(%rax)
d1f0(4): add $0x1,%rax
d1f4(6): mov $0x0,(%rdx)
d1fa(4): add $0x20,%rdx
d1fe(3): cmp %rbx,%rax
d201(2): jbe 0xffffffef(%rip)
d203(3): mov %rax,(%r15)
d206(4): shl/sal $0x5,%rbx
d20a(4): lea 0x0(%rcx,%rbx,1),%rax
d20e(2): mov (%rax),%edx
d210(2): test %edx,%edx
d212(6): jnz 0x518(%rip)
d218(6): mov $0x5,(%rax)
d21e(3): mov %r11,%rbp
d221(4): movzx (%r11),%ebx
d225(5): jmp 0xfffffc89(%rip)
d22a(3): mov %rbp,%rax
d22d(3): nop (%rax)
d230(4): add $0x1,%rax
d234(3): movzx (%rax),%edx
d237(3): lea 0xffffffd0(%rdx),%ecx
d23a(3): cmp $0x9,%cl
d23d(2): jbe 0xfffffff3(%rip)
d23f(3): cmp $0x24,%dl
d242(3): mov %r8,%r13
d245(6): jnz 0xfffffbe9(%rip)
d24b(2): xor %edx,%edx
d24d(3): movsx %bl,%eax
d250(a): mov $0x1844674407370955161,%rdi
d25a(3): mov %r8,%rsi
d25d(3): sub $0x30,%eax
d260(3): cmp %rdi,%rdx
d263(2): cwde 
d265(2): jnbe 0x9(%rip)
d267(4): lea 0x0(%rdx,%rdx,4),%rsi
d26b(3): add %rsi,%rsi
d26e(3): mov %rbp,%rcx
d271(3): add %rsi,%rax
d274(4): movzx 0x1(%rbp),%ebx
d278(4): setb %sil
d27c(4): add $0x1,%rbp
d280(3): mov %rax,%rdx
d283(4): movzx %sil,%esi
d287(3): test %rsi,%rsi
d28a(3): lea 0xffffffd0(%rbx),%edi
d28d(6): jnz 0x391(%rip)
d293(4): cmp $0x9,%dil
d297(2): jbe 0xffffffb6(%rip)
d299(3): mov %rax,%r13
d29c(4): sub $0x1,%r13
d2a0(4): cmp $0xfffffffd,%r13
d2a4(6): jnbe 0x287(%rip)
d2aa(4): lea 0x2(%rcx),%rbp
d2ae(4): movzx 0x2(%rcx),%ebx
d2b2(5): jmp 0xfffffb7c(%rip)
d2b7(5): mov %rbp,0x18(%r12)
d2bc(4): movzx 0x0(%rbp),%edi
d2c0(3): mov %rbp,%rsi
d2c3(3): lea 0xffffffd0(%rdi),%ecx
d2c6(3): cmp $0x9,%cl
d2c9(2): jbe 0xe(%rip)
d2cb(2): jmp 0x35(%rip)
d2cd(3): nop (%rax)
d2d0(3): mov %rax,%rbp
d2d3(4): add $0x1,%rax
d2d7(3): movzx (%rax),%edi
d2da(3): lea 0xffffffd0(%rdi),%edx
d2dd(3): cmp $0x9,%dl
d2e0(2): jbe 0xfffffff0(%rip)
d2e2(3): mov %rax,%rcx
d2e5(4): lea 0x2(%rbp),%rdx
d2e9(3): mov %rax,%rbp
d2ec(3): sub %rsi,%rcx
d2ef(5): mov 0x10(%rsp),%rsi
d2f4(3): cmp %rcx,%rsi
d2f7(4): cmovnb %rsi,%rcx
d2fb(5): mov %rcx,0x10(%rsp)
d300(5): mov %rbp,0x20(%r12)
d305(4): movzx 0x0(%rbp),%ebx
d309(5): jmp 0xfffffb9c(%rip)
d30e(4): movzx 0x1(%rbp),%eax
d312(3): sub $0x30,%eax
d315(2): cmp $0x9,%al
d317(2): jnbe 0x17(%rip)
d319(7): nop 0x0(%rax)
d320(4): add $0x1,%rdx
d324(3): movzx (%rdx),%eax
d327(3): sub $0x30,%eax
d32a(2): cmp $0x9,%al
d32c(2): jbe 0xfffffff4(%rip)
d32e(5): mov 0x18(%rsp),%rsi
d333(3): mov %rdx,%rax
d336(5): mov %rdx,0x38(%r12)
d33b(3): sub %rbp,%rax
d33e(3): movzx (%rdx),%ebx
d341(3): mov %rdx,%rbp
d344(3): cmp %rax,%rsi
d347(4): cmovnb %rsi,%rax
d34b(5): mov %rax,0x18(%rsp)
d350(5): jmp 0xfffffb5e(%rip)
d355(3): mov %rax,%rsi
d358(4): add $0x1,%rsi
d35c(3): movzx (%rsi),%edi
d35f(4): lea 0xffffffd0(%rdi),%r11d
d363(4): cmp $0x9,%r11b
d367(2): jbe 0xfffffff1(%rip)
d369(4): cmp $0x24,%dil
d36d(6): jnz 0xfffffd0d(%rip)
d373(2): xor %esi,%esi
d375(3): movsx %cl,%eax
d378(a): mov $0x1844674407370955161,%rdi
d382(3): mov %r8,%rcx
d385(3): sub $0x30,%eax
d388(3): cmp %rdi,%rsi
d38b(2): cwde 
d38d(2): jnbe 0x9(%rip)
d38f(4): lea 0x0(%rsi,%rsi,4),%rcx
d393(3): add %rcx,%rcx
d396(3): mov %rdx,%rbp
d399(3): xor %r11d,%r11d
d39c(3): add %rcx,%rax
d39f(4): movzx 0x1(%rdx),%ecx
d3a3(4): setb %r11b
d3a7(4): add $0x1,%rdx
d3ab(3): mov %rax,%rsi
d3ae(3): test %r11,%r11
d3b1(3): lea 0xffffffd0(%rcx),%edi
d3b4(6): jnz 0x50a(%rip)
d3ba(4): cmp $0x9,%dil
d3be(2): jbe 0xffffffb7(%rip)
d3c0(4): lea 0xffffffff(%rax),%rbx
d3c4(4): cmp $0xfffffffd,%rbx
d3c8(6): jnbe 0x163(%rip)
d3ce(5): mov %rbx,0x28(%r12)
d3d3(4): add $0x2,%rbp
d3d7(5): jmp 0xfffffcc8(%rip)
d3dc(3): cmp $0xf,%eax
d3df(6): mov $0x16,%r11d
d3e5(6): jnle 0xfffffb53(%rip)
d3eb(2): test $0x4,%al
d3ed(6): jnz 0xfffffb4b(%rip)
d3f3(3): cmp $0x7,%eax
d3f6(6): mov $0x15,%r11d
d3fc(6): jnle 0xfffffb3c(%rip)
d402(2): test $0x2,%al
d404(6): mov $0x12,%r11d
d40a(6): jnz 0xfffffb2e(%rip)
d410(3): xor %r11d,%r11d
d413(2): test $0x1,%al
d415(4): setz %r11b
d419(4): add $0x13,%r11d
d41d(5): jmp 0xfffffb1b(%rip)
d422(6): nop 0x0(%rax,%rax,1)
d428(3): xor %r11d,%r11d
d42b(3): cmp $0x7,%eax
d42e(4): setnle %r11b
d432(4): add $0xd,%r11d
d436(5): jmp 0xfffffb02(%rip)
d43b(3): cmp $0xf,%eax
d43e(6): mov $0x9,%r11d
d444(6): jnle 0xfffffaf4(%rip)
d44a(2): test $0x4,%al
d44c(6): jnz 0xfffffaec(%rip)
d452(3): cmp $0x7,%eax
d455(6): mov $0x7,%r11d
d45b(6): jnle 0xfffffadd(%rip)
d461(2): test $0x2,%al
d463(6): mov $0x1,%r11d
d469(6): jnz 0xfffffacf(%rip)
d46f(3): and $0x1,%eax
d472(3): cmp $0x1,%eax
d475(3): sbb %r11d,%r11d
d478(4): and $0x2,%r11d
d47c(4): add $0x3,%r11d
d480(5): jmp 0xfffffab8(%rip)
d485(3): nop (%rax)
d488(3): xor %r11d,%r11d
d48b(3): cmp $0x7,%eax
d48e(4): setnle %r11b
d492(4): add $0xf,%r11d
d496(5): jmp 0xfffffaa2(%rip)
d49b(3): cmp $0xf,%eax
d49e(6): mov $0xc,%r11d
d4a4(6): jnle 0xfffffa94(%rip)
d4aa(3): xor %r11d,%r11d
d4ad(2): test $0x4,%al
d4af(4): setnz %r11b
d4b3(4): add $0xb,%r11d
d4b7(5): jmp 0xfffffa81(%rip)
d4bc(6): mov $0xe,%r11d
d4c2(5): mov $0x63,%ebx
d4c7(5): jmp 0xfffffa71(%rip)
d4cc(3): cmp $0xf,%eax
d4cf(6): mov $0xa,%r11d
d4d5(6): jnle 0xfffffa63(%rip)
d4db(2): test $0x4,%al
d4dd(6): jnz 0xfffffa5b(%rip)
d4e3(3): cmp $0x7,%eax
d4e6(6): mov $0x8,%r11d
d4ec(6): jnle 0xfffffa4c(%rip)
d4f2(2): test $0x2,%al
d4f4(6): mov $0x2,%r11d
d4fa(6): jnz 0xfffffa3e(%rip)
d500(3): and $0x1,%eax
d503(3): cmp $0x1,%eax
d506(3): sbb %r11d,%r11d
d509(4): and $0x2,%r11d
d50d(4): add $0x4,%r11d
d511(5): jmp 0xfffffa27(%rip)
d516(a): nop 0x0(%rax,%rax,1)
d520(6): mov $0x11,%r11d
d526(5): jmp 0xfffffa12(%rip)
d52b(4): mov 0x8(%r15),%rcx
d52f(5): cmp %rcx,0x8(%rsp)
d534(2): jz 0xa(%rip)
d536(3): mov %rcx,%rdi
d539(5): call 0xffff47d7(%rip)
d53e(4): mov 0x8(%r14),%rdi
d542(5): cmp %rdi,0x28(%rsp)
d547(2): jz 0x7(%rip)
d549(5): call 0xffff47c7(%rip)
d54e(5): call 0xffff47f2(%rip)
d553(6): mov $0x16,(%rax)
d559(5): mov $0xffffffff,%eax
d55e(5): jmp 0xfffff824(%rip)
d563(3): cmp %r11d,%edx
d566(6): jz 0xfffffa35(%rip)
d56c(2): jmp 0xffffffc3(%rip)
d56e(2): nop 
d570(3): add %r9,%r9
d573(4): lea 0x1(%r13),%rax
d577(3): cmp %r13,%r9
d57a(4): cmovbe %rax,%r9
d57e(a): mov $0x576460752303423487,%rax
d588(3): cmp %rax,%r9
d58b(6): jnbe 0x3e0(%rip)
d591(3): mov %r9,%rsi
d594(5): mov %r9,0x48(%rsp)
d599(5): mov %r10,0x40(%rsp)
d59e(4): shl/sal $0x5,%rsi
d5a2(5): cmp %rcx,0x8(%rsp)
d5a7(5): mov %r8,0x38(%rsp)
d5ac(5): mov %r11d,0x30(%rsp)
d5b1(6): jz 0xa0(%rip)
d5b7(3): mov %rcx,%rdi
d5ba(5): call 0xffff4b16(%rip)
d5bf(3): test %rax,%rax
d5c2(3): mov %rax,%rcx
d5c5(5): mov 0x30(%rsp),%r11d
d5ca(5): mov 0x38(%rsp),%r8
d5cf(5): mov 0x40(%rsp),%r10
d5d4(5): mov 0x48(%rsp),%r9
d5d9(6): jz 0x38e(%rip)
d5df(5): mov 0x8(%rsp),%rax
d5e4(4): cmp 0x8(%r15),%rax
d5e8(6): jz 0x91(%rip)
d5ee(4): mov %rcx,0x8(%r15)
d5f2(5): jmp 0xfffff962(%rip)
d5f7(5): mov 0x20(%rsp),%rsi
d5fc(4): cmp $0xffffffff,%rsi
d600(4): lea 0x1(%rsi),%rax
d604(5): mov %rsi,0x50(%r12)
d609(6): jz 0xffffff22(%rip)
d60f(5): mov 0x20(%rsp),%r13
d614(5): mov %rax,0x20(%rsp)
d619(5): jmp 0xfffff92e(%rip)
d61e(4): cmp $0x9,%dil
d622(6): jnbe 0xffffff09(%rip)
d628(3): movsx %bl,%eax
d62b(3): mov %r8,%rsi
d62e(3): mov %rbp,%rcx
d631(3): sub $0x30,%eax
d634(2): cwde 
d636(5): jmp 0xfffffc3b(%rip)
d63b(3): cmp $0x5,%edx
d63e(6): jnz 0xfffffef1(%rip)
d644(4): movzx 0x0(%rbp),%ebx
d648(4): lea 0x1(%rbp),%rdx
d64c(5): jmp 0xfffff859(%rip)
d651(3): mov %rsi,%rdi
d654(5): call 0xffff49dc(%rip)
d659(3): test %rax,%rax
d65c(3): mov %rax,%rcx
d65f(5): mov 0x30(%rsp),%r11d
d664(5): mov 0x38(%rsp),%r8
d669(5): mov 0x40(%rsp),%r10
d66e(5): mov 0x48(%rsp),%r9
d673(6): jz 0x169(%rip)
d679(3): mov (%r15),%rdx
d67c(5): mov 0x8(%rsp),%rsi
d681(3): mov %rcx,%rdi
d684(5): mov %r9,0x48(%rsp)
d689(5): mov %r10,0x40(%rsp)
d68e(5): mov %r8,0x38(%rsp)
d693(5): mov %r11d,0x30(%rsp)
d698(4): shl/sal $0x5,%rdx
d69c(5): call 0xffff4944(%rip)
d6a1(5): mov 0x48(%rsp),%r9
d6a6(5): mov 0x40(%rsp),%r10
d6ab(3): mov %rax,%rcx
d6ae(5): mov 0x38(%rsp),%r8
d6b3(5): mov 0x30(%rsp),%r11d
d6b8(5): jmp 0xffffff36(%rip)
d6bd(3): mov %rsi,%rdi
d6c0(5): call 0xffff4970(%rip)
d6c5(3): test %rax,%rax
d6c8(3): mov %rax,%rcx
d6cb(5): mov 0x30(%rsp),%r8
d6d0(5): mov 0x38(%rsp),%r10
d6d5(5): mov 0x40(%rsp),%r9
d6da(6): jz 0xef(%rip)
d6e0(4): lea 0x0(%rbx,%rbx,4),%rax
d6e4(5): mov 0x28(%rsp),%rsi
d6e9(3): mov %rcx,%rdi
d6ec(5): mov %r9,0x40(%rsp)
d6f1(5): mov %r10,0x38(%rsp)
d6f6(4): lea 0x0(%rbx,%rax,2),%rdx
d6fa(5): mov %r8,0x30(%rsp)
d6ff(4): shl/sal $0x3,%rdx
d703(5): call 0xffff48dd(%rip)
d708(3): mov (%r14),%rbx
d70b(3): mov %rax,%rcx
d70e(5): mov 0x40(%rsp),%r9
d713(5): mov 0x38(%rsp),%r10
d718(5): mov 0x30(%rsp),%r8
d71d(5): jmp 0xfffff91a(%rip)
d722(3): mov (%r15),%rax
d725(5): jmp 0xfffffa02(%rip)
d72a(3): cmp $0x5,%edx
d72d(6): jnz 0xfffffe02(%rip)
d733(4): movzx (%r11),%ebx
d737(3): mov %r11,%rbp
d73a(5): jmp 0xfffff774(%rip)
d73f(3): add %r9,%r9
d742(4): lea 0x1(%rbx),%rax
d746(3): cmp %rbx,%r9
d749(4): cmovbe %rax,%r9
d74d(a): mov $0x576460752303423487,%rax
d757(3): cmp %rax,%r9
d75a(6): jnbe 0x211(%rip)
d760(3): mov %r9,%rsi
d763(5): mov %r9,0x48(%rsp)
d768(5): mov %r10,0x40(%rsp)
d76d(4): shl/sal $0x5,%rsi
d771(5): cmp %rcx,0x8(%rsp)
d776(5): mov %r8,0x38(%rsp)
d77b(5): mov %r11,0x30(%rsp)
d780(6): jz 0x1be(%rip)
d786(3): mov %rcx,%rdi
d789(5): call 0xffff4947(%rip)
d78e(4): mov 0x8(%r15),%rdx
d792(5): mov 0x30(%rsp),%r11
d797(3): mov %rax,%rcx
d79a(5): mov 0x38(%rsp),%r8
d79f(5): mov 0x40(%rsp),%r10
d7a4(5): mov 0x48(%rsp),%r9
d7a9(3): test %rcx,%rcx
d7ac(6): jz 0x21b(%rip)
d7b2(5): cmp %rdx,0x8(%rsp)
d7b7(3): mov (%r15),%rax
d7ba(6): jz 0x1c6(%rip)
d7c0(4): mov %rcx,0x8(%r15)
d7c4(5): jmp 0xfffffa19(%rip)
d7c9(4): mov 0x8(%r15),%rcx
d7cd(5): cmp %rcx,0x8(%rsp)
d7d2(2): jz 0x1a(%rip)
d7d4(3): mov %rcx,%rdi
d7d7(5): call 0xffff4539(%rip)
d7dc(4): mov 0x8(%r14),%rdi
d7e0(5): cmp %rdi,0x28(%rsp)
d7e5(2): jz 0x7(%rip)
d7e7(5): call 0xffff4529(%rip)
d7ec(5): call 0xffff4554(%rip)
d7f1(6): mov $0xc,(%rax)
d7f7(5): mov $0xffffffff,%eax
d7fc(5): jmp 0xfffff586(%rip)
d801(3): mov %rsi,%rdi
d804(5): call 0xffff482c(%rip)
d809(5): mov 0x8(%rsp),%rdx
d80e(3): mov %rax,%rcx
d811(5): mov 0x40(%rsp),%r9
d816(5): mov 0x38(%rsp),%r10
d81b(5): mov 0x30(%rsp),%r8
d820(5): jmp 0xfffff8ec(%rip)
d825(5): mov 0x20(%rsp),%rsi
d82a(4): cmp $0xffffffff,%rsi
d82e(4): lea 0x1(%rsi),%rax
d832(5): mov %rsi,0x40(%r12)
d837(6): jz 0xfffffcf4(%rip)
d83d(5): mov 0x20(%rsp),%rbx
d842(5): mov %rax,0x20(%rsp)
d847(5): jmp 0xfffff986(%rip)
d84c(3): mov %r11,%rdx
d84f(4): add $0x1,%rdx
d853(3): movzx (%rdx),%ecx
d856(3): lea 0xffffffd0(%rcx),%esi
d859(4): cmp $0x9,%sil
d85d(2): jbe 0xfffffff2(%rip)
d85f(3): cmp $0x24,%cl
d862(6): jnz 0xfffff95c(%rip)
d868(2): xor %ecx,%ecx
d86a(a): mov $0x1844674407370955161,%rsi
d874(3): sub $0x30,%eax
d877(3): mov %r8,%rdx
d87a(3): cmp %rsi,%rcx
d87d(2): cwde 
d87f(2): jnbe 0x9(%rip)
d881(4): lea 0x0(%rcx,%rcx,4),%rdx
d885(3): add %rdx,%rdx
d888(3): mov %r11,%rsi
d88b(2): xor %ebx,%ebx
d88d(3): add %rax,%rdx
d890(5): movsx 0x1(%r11),%eax
d895(3): setb %bl
d898(4): add $0x1,%r11
d89c(3): mov %rdx,%rcx
d89f(3): test %rbx,%rbx
d8a2(3): lea 0xffffffd0(%rax),%edi
d8a5(2): jz 0x73(%rip)
d8a7(4): cmp $0x9,%dil
d8ab(6): jnbe 0xfffffc80(%rip)
d8b1(3): sub $0x30,%eax
d8b4(3): mov %r8,%rdx
d8b7(3): mov %r11,%rsi
d8ba(2): cwde 
d8bc(2): jmp 0xffffffcf(%rip)
d8be(4): cmp $0x9,%dil
d8c2(6): jnbe 0xfffffc69(%rip)
d8c8(3): movsx %cl,%eax
d8cb(3): mov %rdx,%rbp
d8ce(3): mov %r8,%rcx
d8d1(3): sub $0x30,%eax
d8d4(2): cwde 
d8d6(5): jmp 0xfffffac3(%rip)
d8db(5): mov 0x8(%rsp),%rsi
d8e0(4): shl/sal $0x5,%rax
d8e4(3): mov %rcx,%rdi
d8e7(3): mov %rax,%rdx
d8ea(5): mov %r9,0x40(%rsp)
d8ef(5): mov %r10,0x38(%rsp)
d8f4(5): mov %r8,0x30(%rsp)
d8f9(5): call 0xffff46e7(%rip)
d8fe(5): mov 0x40(%rsp),%r9
d903(3): mov %rax,%rcx
d906(5): mov 0x38(%rsp),%r10
d90b(3): mov (%r15),%rax
d90e(5): mov 0x30(%rsp),%r8
d913(5): jmp 0xfffff810(%rip)
d918(4): cmp $0x9,%dil
d91c(6): jbe 0xffffff4e(%rip)
d922(4): lea 0xffffffff(%rdx),%rbx
d926(4): cmp $0xfffffffd,%rbx
d92a(6): jnbe 0xfffffc01(%rip)
d930(5): mov %rbx,0x40(%r12)
d935(4): lea 0x2(%rsi),%r11
d939(5): jmp 0xfffff894(%rip)
d93e(3): mov %rsi,%rdi
d941(5): call 0xffff46ef(%rip)
d946(5): mov 0x8(%rsp),%rdx
d94b(3): mov %rax,%rcx
d94e(5): mov 0x48(%rsp),%r9
d953(5): mov 0x40(%rsp),%r10
d958(5): mov 0x38(%rsp),%r8
d95d(5): mov 0x30(%rsp),%r11
d962(5): jmp 0xfffffe47(%rip)
d967(4): mov 0x8(%r15),%rcx
d96b(5): cmp %rcx,0x8(%rsp)
d970(6): jnz 0xfffffe64(%rip)
d976(5): jmp 0xfffffe66(%rip)
d97b(5): nop 0x0(%rax,%rax,1)
d980(5): mov 0x8(%rsp),%rsi
d985(4): shl/sal $0x5,%rax
d989(3): mov %rcx,%rdi
d98c(3): mov %rax,%rdx
d98f(5): mov %r9,0x48(%rsp)
d994(5): mov %r10,0x40(%rsp)
d999(5): mov %r8,0x38(%rsp)
d99e(5): mov %r11,0x30(%rsp)
d9a3(5): call 0xffff463d(%rip)
d9a8(5): mov 0x48(%rsp),%r9
d9ad(3): mov %rax,%rcx
d9b0(5): mov 0x40(%rsp),%r10
d9b5(3): mov (%r15),%rax
d9b8(5): mov 0x38(%rsp),%r8
d9bd(5): mov 0x30(%rsp),%r11
d9c2(5): jmp 0xfffffdfe(%rip)
d9c7(3): mov %rdx,%rcx
d9ca(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
d9d0(2): push %r15
d9d2(2): push %r14
d9d4(3): mov %rdx,%r15
d9d7(2): push %r13
d9d9(2): push %r12
d9db(7): lea 0x204fce(%rip),%r12
d9e2(1): push %rbp
d9e3(7): lea 0x204fce(%rip),%rbp
d9ea(1): push %rbx
d9eb(3): mov %edi,%r13d
d9ee(3): mov %rsi,%r14
d9f1(3): sub %r12,%rbp
d9f4(4): sub $0x8,%rsp
d9f8(4): sar $0x3,%rbp
d9fc(5): call 0xffff42bc(%rip)
da01(3): test %rbp,%rbp
da04(2): jz 0x22(%rip)
da06(2): xor %ebx,%ebx
da08(8): nop 0x0(%rax,%rax,1)
da10(3): mov %r15,%rdx
da13(3): mov %r14,%rsi
da16(3): mov %r13d,%edi
da19(4): call 0x0(%r12,%rbx,8)
da1d(4): add $0x1,%rbx
da21(3): cmp %rbx,%rbp
da24(2): jnz 0xffffffec(%rip)
da26(4): add $0x8,%rsp
da2a(1): pop %rbx
da2b(1): pop %rbp
da2c(2): pop %r12
da2e(2): pop %r13
da30(2): pop %r14
da32(2): pop %r15
da34(1): ret near (%rsp)

"atexit" :
da50(7): mov 0x2055b1(%rip),%rdx
da57(2): xor %esi,%esi
da59(5): jmp 0xffff4727(%rip)

"_fini" :
da60(4): sub $0x8,%rsp
da64(4): add $0x8,%rsp
da68(1): ret near (%rsp)

