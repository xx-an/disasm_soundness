
"getenv@plt" :
1880(6): jmp 0x20855a(%rip)
1886(5): push $0x0

"sigprocmask@plt" :
1890(6): jmp 0x208552(%rip)
1896(5): push $0x1

"free@plt" :
18a0(6): jmp 0x20854a(%rip)
18a6(5): push $0x2

"abort@plt" :
18b0(6): jmp 0x208542(%rip)
18b6(5): push $0x3

"__errno_location@plt" :
18c0(6): jmp 0x20853a(%rip)
18c6(5): push $0x4

"strncmp@plt" :
18d0(6): jmp 0x208532(%rip)
18d6(5): push $0x5

"_exit@plt" :
18e0(6): jmp 0x20852a(%rip)
18e6(5): push $0x6

"strcpy@plt" :
18f0(6): jmp 0x208522(%rip)
18f6(5): push $0x7

"__fpending@plt" :
1900(6): jmp 0x20851a(%rip)
1906(5): push $0x8

"sigaction@plt" :
1910(6): jmp 0x208512(%rip)
1916(5): push $0x9

"textdomain@plt" :
1920(6): jmp 0x20850a(%rip)
1926(5): push $0xa

"fclose@plt" :
1930(6): jmp 0x208502(%rip)
1936(5): push $0xb

"bindtextdomain@plt" :
1940(6): jmp 0x2084fa(%rip)
1946(5): push $0xc

"stpcpy@plt" :
1950(6): jmp 0x2084f2(%rip)
1956(5): push $0xd

"dcgettext@plt" :
1960(6): jmp 0x2084ea(%rip)
1966(5): push $0xe

"__ctype_get_mb_cur_max@plt" :
1970(6): jmp 0x2084e2(%rip)
1976(5): push $0xf

"strlen@plt" :
1980(6): jmp 0x2084da(%rip)
1986(5): push $0x10

"chdir@plt" :
1990(6): jmp 0x2084d2(%rip)
1996(5): push $0x11

"__stack_chk_fail@plt" :
19a0(6): jmp 0x2084ca(%rip)
19a6(5): push $0x12

"getopt_long@plt" :
19b0(6): jmp 0x2084c2(%rip)
19b6(5): push $0x13

"mbrtowc@plt" :
19c0(6): jmp 0x2084ba(%rip)
19c6(5): push $0x14

"strchr@plt" :
19d0(6): jmp 0x2084b2(%rip)
19d6(5): push $0x15

"strrchr@plt" :
19e0(6): jmp 0x2084aa(%rip)
19e6(5): push $0x16

"lseek@plt" :
19f0(6): jmp 0x2084a2(%rip)
19f6(5): push $0x17

"__assert_fail@plt" :
1a00(6): jmp 0x20849a(%rip)
1a06(5): push $0x18

"memset@plt" :
1a10(6): jmp 0x208492(%rip)
1a16(5): push $0x19

"strspn@plt" :
1a20(6): jmp 0x20848a(%rip)
1a26(5): push $0x1a

"memcmp@plt" :
1a30(6): jmp 0x208482(%rip)
1a36(5): push $0x1b

"fputs_unlocked@plt" :
1a40(6): jmp 0x20847a(%rip)
1a46(5): push $0x1c

"calloc@plt" :
1a50(6): jmp 0x208472(%rip)
1a56(5): push $0x1d

"putenv@plt" :
1a60(6): jmp 0x20846a(%rip)
1a66(5): push $0x1e

"strcmp@plt" :
1a70(6): jmp 0x208462(%rip)
1a76(5): push $0x1f

"sigemptyset@plt" :
1a80(6): jmp 0x20845a(%rip)
1a86(5): push $0x20

"strtol@plt" :
1a90(6): jmp 0x208452(%rip)
1a96(5): push $0x21

"sigfillset@plt" :
1aa0(6): jmp 0x20844a(%rip)
1aa6(5): push $0x22

"memcpy@plt" :
1ab0(6): jmp 0x208442(%rip)
1ab6(5): push $0x23

"fileno@plt" :
1ac0(6): jmp 0x20843a(%rip)
1ac6(5): push $0x24

"malloc@plt" :
1ad0(6): jmp 0x208432(%rip)
1ad6(5): push $0x25

"fflush@plt" :
1ae0(6): jmp 0x20842a(%rip)
1ae6(5): push $0x26

"nl_langinfo@plt" :
1af0(6): jmp 0x208422(%rip)
1af6(5): push $0x27

"__freading@plt" :
1b00(6): jmp 0x20841a(%rip)
1b06(5): push $0x28

"realloc@plt" :
1b10(6): jmp 0x208412(%rip)
1b16(5): push $0x29

"setlocale@plt" :
1b20(6): jmp 0x20840a(%rip)
1b26(5): push $0x2a

"__printf_chk@plt" :
1b30(6): jmp 0x208402(%rip)
1b36(5): push $0x2b

"error@plt" :
1b40(6): jmp 0x2083fa(%rip)
1b46(5): push $0x2c

"fseeko@plt" :
1b50(6): jmp 0x2083f2(%rip)
1b56(5): push $0x2d

"sigdelset@plt" :
1b60(6): jmp 0x2083ea(%rip)
1b66(5): push $0x2e

"strtok@plt" :
1b70(6): jmp 0x2083e2(%rip)
1b76(5): push $0x2f

"unsetenv@plt" :
1b80(6): jmp 0x2083da(%rip)
1b86(5): push $0x30

"execvp@plt" :
1b90(6): jmp 0x2083d2(%rip)
1b96(5): push $0x31

"__cxa_atexit@plt" :
1ba0(6): jmp 0x2083ca(%rip)
1ba6(5): push $0x32

"__libc_current_sigrtmin@plt" :
1bb0(6): jmp 0x2083c2(%rip)
1bb6(5): push $0x33

"sigismember@plt" :
1bc0(6): jmp 0x2083ba(%rip)
1bc6(5): push $0x34

"exit@plt" :
1bd0(6): jmp 0x2083b2(%rip)
1bd6(5): push $0x35

"fwrite@plt" :
1be0(6): jmp 0x2083aa(%rip)
1be6(5): push $0x36

"__fprintf_chk@plt" :
1bf0(6): jmp 0x2083a2(%rip)
1bf6(5): push $0x37

"__libc_current_sigrtmax@plt" :
1c00(6): jmp 0x20839a(%rip)
1c06(5): push $0x38

"mbsinit@plt" :
1c10(6): jmp 0x208392(%rip)
1c16(5): push $0x39

"iswprint@plt" :
1c20(6): jmp 0x20838a(%rip)
1c26(5): push $0x3a

"sigaddset@plt" :
1c30(6): jmp 0x208382(%rip)
1c36(5): push $0x3b

"__ctype_b_loc@plt" :
1c40(6): jmp 0x20837a(%rip)
1c46(5): push $0x3c

"__sprintf_chk@plt" :
1c50(6): jmp 0x208372(%rip)
1c56(5): push $0x3d

".plt.got" :
1c60(6): jmp 0x20838a(%rip)
1c66(2): nop 

"_init" :
1858(4): sub $0x8,%rsp
185c(7): mov 0x20877d(%rip),%rax
1863(3): test %rax,%rax
1866(2): jz 0x4(%rip)
1868(2): call %rax
186a(4): add $0x8,%rsp
186e(1): ret near (%rsp)

"main" :
1c70(2): push %r15
1c72(2): push %r14
1c74(3): mov %rsi,%r15
1c77(2): push %r13
1c79(2): push %r12
1c7b(1): push %rbp
1c7c(1): push %rbx
1c7d(7): sub $0x118,%rsp
1c84(4): mov %edi,0x48(%rsp)
1c88(3): mov (%rsi),%rdi
1c8b(9): mov $0x28,%rax
1c94(8): mov %rax,0x108(%rsp)
1c9c(2): xor %eax,%eax
1c9e(5): call 0x22e2(%rip)
1ca3(7): lea 0x5007(%rip),%rsi
1caa(5): mov $0x6,%edi
1caf(5): call 0xfffffe71(%rip)
1cb4(7): lea 0x4fb3(%rip),%rsi
1cbb(7): lea 0x4f4d(%rip),%rdi
1cc2(5): call 0xfffffc7e(%rip)
1cc7(7): lea 0x4f41(%rip),%rdi
1cce(5): call 0xfffffc52(%rip)
1cd3(7): lea 0x21f6(%rip),%rdi
1cda(a): mov $0x7d,0x208334(%rip)
1ce4(5): call 0x4e3c(%rip)
1ce9(5): mov $0x104,%edi
1cee(5): call 0x45e2(%rip)
1cf3(7): lea 0x104(%rax),%rdx
1cfa(7): mov %rax,0x2086bf(%rip)
1d01(7): nop 0x0(%rax)
1d08(6): mov $0x0,(%rax)
1d0e(4): add $0x4,%rax
1d12(3): cmp %rax,%rdx
1d15(2): jnz 0xfffffff3(%rip)
1d17(9): mov $0x0,0x8(%rsp)
1d20(5): mov $0x0,0x10(%rsp)
1d25(5): mov $0x0,0x18(%rsp)
1d2a(6): nop 0x0(%rax,%rax,1)
1d30(4): mov 0x48(%rsp),%edi
1d34(7): lea 0x207ca5(%rip),%rcx
1d3b(7): lea 0x59b6(%rip),%rdx
1d42(3): xor %r8d,%r8d
1d45(3): mov %r15,%rsi
1d48(5): call 0xfffffc68(%rip)
1d4d(3): cmp $0xff,%eax
1d50(6): jz 0x82d(%rip)
1d56(3): cmp $0x53,%eax
1d59(6): jz 0xa7(%rip)
1d5f(2): jle 0x41(%rip)
1d61(5): cmp $0x80,%eax
1d66(6): jz 0x1da(%rip)
1d6c(2): jnle 0x6c(%rip)
1d6e(3): cmp $0x75,%eax
1d71(6): jz 0x23f(%rip)
1d77(3): cmp $0x76,%eax
1d7a(6): jz 0x226(%rip)
1d80(3): cmp $0x69,%eax
1d83(2): jz 0xd(%rip)
1d85(5): mov $0x7d,%edi
1d8a(5): call 0x1706(%rip)
1d8f(1): nop 
1d90(5): mov $0x1,0x18(%rsp)
1d95(2): jmp 0xffffff9b(%rip)
1d97(9): nop 0x0(%rax,%rax,1)
1da0(3): cmp $0x9,%eax
1da3(6): jz 0x1097(%rip)
1da9(6): jle 0x257(%rip)
1daf(3): cmp $0x30,%eax
1db2(6): jz 0x23e(%rip)
1db8(3): cmp $0x43,%eax
1dbb(6): jnz 0x10dc(%rip)
1dc1(7): mov 0x208498(%rip),%rax
1dc8(5): mov %rax,0x8(%rsp)
1dcd(5): jmp 0xffffff63(%rip)
1dd2(6): nop 0x0(%rax,%rax,1)
1dd8(5): cmp $0x82,%eax
1ddd(6): jz 0x1a3(%rip)
1de3(6): jl 0x185(%rip)
1de9(5): cmp $0x83,%eax
1dee(2): jnz 0xffffff97(%rip)
1df0(7): mov $0x1,0x2084b1(%rip)
1df7(5): jmp 0xffffff39(%rip)
1dfc(4): nop 0x0(%rax)
1e00(5): call 0xfffffe40(%rip)
1e05(7): mov 0x208454(%rip),%r12
1e0c(3): mov %rax,%r11
1e0f(3): mov (%rax),%r8
1e12(2): jmp 0xa(%rip)
1e14(4): nop 0x0(%rax)
1e18(4): add $0x1,%r12
1e1c(5): movsx (%r12),%rsi
1e21(6): test $0x20,0x1(%r8,%rsi,2)
1e27(3): mov %rsi,%rdx
1e2a(2): jnz 0xffffffee(%rip)
1e2c(3): test %sil,%sil
1e2f(6): jz 0xffffff01(%rip)
1e35(4): mov 0x48(%rsp),%eax
1e39(6): sub 0x208411(%rip),%eax
1e3f(4): or $0xffffffff,%r9
1e43(3): mov %r12,%rdi
1e46(3): mov %r9,%rcx
1e49(5): mov $0x1,%ebx
1e4e(3): xor %r10d,%r10d
1e51(3): mov %r12,%r13
1e54(3): xor %r14d,%r14d
1e57(2): xor %ebp,%ebp
1e59(4): mov %eax,0x30(%rsp)
1e5d(2): xor %eax,%eax
1e5f(2): REPNZ scasb rdi(%es,10),%al
1e61(5): mov %r12,0x38(%rsp)
1e66(5): mov %r15,0x40(%rsp)
1e6b(3): mov %r10d,%r12d
1e6e(3): not %rcx
1e71(3): mov %ebx,%r15d
1e74(5): mov %r9,0x28(%rsp)
1e79(5): mov %rcx,0x20(%rsp)
1e7e(3): mov %r11,%rbx
1e81(7): nop 0x0(%rax)
1e88(6): test $0x20,0x1(%r8,%rsi,2)
1e8e(5): movzx 0x1(%r13),%eax
1e93(6): jz 0x1bd(%rip)
1e99(3): mov %r14d,%ecx
1e9c(3): or %bpl,%cl
1e9f(6): jnz 0x1b1(%rip)
1ea5(3): cmp $0x24,%dl
1ea8(6): mov $0x1,%r12d
1eae(6): jz 0x3fd(%rip)
1eb4(6): jle 0x44c(%rip)
1eba(3): cmp $0x27,%dl
1ebd(6): jz 0x3cb(%rip)
1ec3(3): cmp $0x5c,%dl
1ec6(6): jnz 0x443(%rip)
1ecc(2): cmp $0x63,%al
1ece(4): setz %sil
1ed2(3): test %sil,%sil
1ed5(2): mov %esi,%edx
1ed7(2): jz 0xb(%rip)
1ed9(3): test %bpl,%bpl
1edc(6): jnz 0x1193(%rip)
1ee2(2): test %al,%al
1ee4(6): jz 0x1033(%rip)
1eea(3): lea 0xffffff9a(%rax),%ecx
1eed(3): cmp $0x10,%cl
1ef0(2): jnbe 0xf(%rip)
1ef2(5): mov $0x15101,%edx
1ef7(3): shr %cl,%rdx
1efa(3): and $0x1,%edx
1efd(2): or %esi,%edx
1eff(2): test %dl,%dl
1f01(6): jnz 0x3df(%rip)
1f07(3): lea 0xffffffde(%rax),%edx
1f0a(3): cmp $0x3d,%dl
1f0d(6): jbe 0x3b6(%rip)
1f13(7): lea 0x4d78(%rip),%rsi
1f1a(2): mov %eax,%ebp
1f1c(5): mov $0x5,%edx
1f21(2): xor %edi,%edi
1f23(5): call 0xfffffa3d(%rip)
1f28(4): movsx %bpl,%ecx
1f2c(3): mov %rax,%rdx
1f2f(2): xor %esi,%esi
1f31(5): mov $0x7d,%edi
1f36(2): xor %eax,%eax
1f38(5): call 0xfffffc08(%rip)
1f3d(3): nop (%rax)
1f40(7): mov 0x208319(%rip),%rdi
1f47(5): mov $0x1,%esi
1f4c(5): call 0x1a24(%rip)
1f51(7): mov 0x208308(%rip),%rdi
1f58(2): xor %esi,%esi
1f5a(5): call 0x1b86(%rip)
1f5f(5): jmp 0xfffffdd1(%rip)
1f64(4): nop 0x0(%rax)
1f68(7): mov 0x2082f1(%rip),%rdi
1f6f(2): xor %esi,%esi
1f71(5): call 0x19ff(%rip)
1f76(5): jmp 0xfffffdba(%rip)
1f7b(5): nop 0x0(%rax,%rax,1)
1f80(7): mov 0x2082d9(%rip),%rdi
1f87(5): mov $0x1,%esi
1f8c(5): call 0x1b54(%rip)
1f91(5): jmp 0xfffffd9f(%rip)
1f96(a): nop 0x0(%rax,%rax,1)
1fa0(7): mov $0x1,0x208431(%rip)
1fa7(5): jmp 0xfffffd89(%rip)
1fac(4): nop 0x0(%rax)
1fb0(7): mov 0x208429(%rip),%rcx
1fb7(7): cmp 0x20842a(%rip),%rcx
1fbe(7): mov 0x20829b(%rip),%rbx
1fc5(3): mov %rcx,%rax
1fc8(6): jz 0x712(%rip)
1fce(4): lea 0x1(%rax),%rdx
1fd2(7): mov %rdx,0x208407(%rip)
1fd9(7): mov 0x208410(%rip),%rdx
1fe0(4): mov %rbx,0x0(%rdx,%rax,8)
1fe4(5): jmp 0xfffffd4c(%rip)
1fe9(7): nop 0x0(%rax)
1ff0(5): mov $0x1,0x10(%rsp)
1ff5(5): jmp 0xfffffd3b(%rip)
1ffa(6): nop 0x0(%rax,%rax,1)
2000(5): cmp $0xffffff7d,%eax
2005(6): jnz 0xe23(%rip)
200b(7): lea 0x4d1e(%rip),%rax
2012(7): mov 0x20822f(%rip),%rdi
2019(7): mov 0x207ff0(%rip),%rcx
2020(2): push $0x0
2022(7): lea 0x4ce6(%rip),%r9
2029(7): lea 0x4cef(%rip),%r8
2030(1): push %rax
2031(7): lea 0x4bd3(%rip),%rdx
2038(7): lea 0x4b52(%rip),%rsi
203f(2): xor %eax,%eax
2041(5): call 0x412f(%rip)
2046(2): xor %edi,%edi
2048(5): call 0xfffffb88(%rip)
204d(3): nop (%rax)
2050(4): cmp $0x1,%r12b
2054(4): sbb $0xff,%r15d
2058(3): cmp $0x24,%dl
205b(6): jz 0x24d(%rip)
2061(2): jle 0x37(%rip)
2063(3): xor %r12d,%r12d
2066(3): cmp $0x27,%dl
2069(6): jz 0x21f(%rip)
206f(3): cmp $0x5c,%dl
2072(6): jz 0xfffffe5a(%rip)
2078(2): mov %eax,%edx
207a(3): xor %r12d,%r12d
207d(4): add $0x1,%r13
2081(2): test %dl,%dl
2083(2): jz 0x36(%rip)
2085(3): mov (%rbx),%r8
2088(4): movsx %dl,%rsi
208c(5): jmp 0xfffffdfc(%rip)
2091(7): nop 0x0(%rax)
2098(3): cmp $0x22,%dl
209b(2): jnz 0xffffffdd(%rip)
209d(3): mov %r14d,%r12d
20a0(3): and %bpl,%r12b
20a3(6): jnz 0xe98(%rip)
20a9(3): or %r14d,%ebp
20ac(2): mov %eax,%edx
20ae(4): add $0x1,%r13
20b2(3): xor $0x1,%ebp
20b5(2): test %dl,%dl
20b7(2): jnz 0xffffffce(%rip)
20b9(3): or %r14b,%bpl
20bc(3): mov %r15d,%ebx
20bf(5): mov 0x38(%rsp),%r12
20c4(5): mov 0x40(%rsp),%r15
20c9(6): jnz 0xeb0(%rip)
20cf(5): mov 0x20(%rsp),%rdi
20d4(4): add $0x7,%rdi
20d8(5): call 0x41f8(%rip)
20dd(3): mov %rax,%rbp
20e0(4): mov 0x30(%rsp),%eax
20e4(4): lea 0x2(%rax,%rbx,1),%edi
20e8(3): mov %r12,%rbx
20eb(3): movsxd %edi,%rdi
20ee(4): shl/sal $0x3,%rdi
20f2(5): call 0x41de(%rip)
20f7(4): lea 0x8(%rax),%r14
20fb(7): mov $0x4d4d5544,0x0(%rbp)
2102(6): mov $0x59,0x4(%rbp)
2108(3): mov %rbp,(%rax)
210b(3): mov %rax,%r10
210e(4): add $0x6,%rbp
2112(3): mov %r14,%r13
2115(3): xor %r9d,%r9d
2118(3): xor %r11d,%r11d
211b(6): mov $0x1,%r8d
2121(3): movzx (%rbx),%eax
2124(2): test %al,%al
2126(2): jz 0x58(%rip)
2128(2): cmp $0x23,%al
212a(6): jz 0x3fe(%rip)
2130(6): jle 0x240(%rip)
2136(2): cmp $0x27,%al
2138(6): jz 0x3bc(%rip)
213e(2): cmp $0x5c,%al
2140(6): jz 0x386(%rip)
2146(2): cmp $0x24,%al
2148(6): jz 0x286(%rip)
214e(3): mov %rbx,%rcx
2151(3): test %r8b,%r8b
2154(4): lea 0x1(%rbp),%rdx
2158(6): jz 0x268(%rip)
215e(4): mov $0x0,0x0(%rbp)
2162(4): mov %rdx,0x0(%r13)
2166(4): add $0x2,%rbp
216a(4): add $0x8,%r13
216e(4): lea 0x1(%rcx),%rbx
2172(2): mov %al,(%rdx)
2174(3): xor %r8d,%r8d
2177(3): movzx (%rbx),%eax
217a(2): test %al,%al
217c(2): jnz 0xffffffac(%rip)
217e(7): cmp $0x0,0x208253(%rip)
2185(8): mov $0x0,0x0(%r13)
218d(3): mov (%r15),%rax
2190(4): mov $0x0,0x0(%rbp)
2194(3): mov %rax,(%r10)
2197(6): jz 0x4f8(%rip)
219d(5): cmp $0x0,0x8(%r10)
21a2(2): jz 0x5e(%rip)
21a4(3): mov %r12,%rdi
21a7(5): mov %r10,0x20(%rsp)
21ac(5): call 0x3ae4(%rip)
21b1(7): mov 0x2080c8(%rip),%rdi
21b8(7): lea 0x4b0e(%rip),%rdx
21bf(3): mov %rax,%rcx
21c2(5): mov $0x1,%esi
21c7(2): xor %eax,%eax
21c9(5): call 0xfffffa27(%rip)
21ce(7): cmp $0x0,0x208203(%rip)
21d5(5): mov 0x20(%rsp),%r10
21da(6): jnz 0xa74(%rip)
21e0(3): mov %r10,%rbx
21e3(3): mov (%r14),%rdi
21e6(7): movzx 0x2081eb(%rip),%eax
21ed(2): jmp 0xb(%rip)
21ef(1): nop 
21f0(2): test %al,%al
21f2(6): jnz 0x843(%rip)
21f8(3): test %rdi,%rdi
21fb(2): jnz 0xfffffff5(%rip)
21fd(3): mov %rbx,%r10
2200(7): movsxd 0x208049(%rip),%rax
2207(4): mov 0x48(%rsp),%ecx
220b(2): cmp %ecx,%eax
220d(2): jnl 0x37(%rip)
220f(2): mov %eax,%edi
2211(2): not %edi
2213(3): lea 0x0(%rdi,%rcx,1),%edx
2216(4): lea 0x0(%r15,%rax,8),%rcx
221a(2): xor %eax,%eax
221c(8): lea 0x8(,%rdx,8),%rsi
2224(4): nop 0x0(%rax)
2228(4): mov 0x0(%rcx,%rax,1),%rdx
222c(4): mov %rdx,0x0(%r14,%rax,1)
2230(4): add $0x8,%rax
2234(3): cmp %rax,%rsi
2237(2): jnz 0xfffffff1(%rip)
2239(4): mov 0x48(%rsp),%eax
223d(2): add %edi,%eax
223f(5): lea 0x8(%r14,%rax,8),%r14
2244(7): mov $0x0,(%r14)
224b(4): cmp $0x0,(%r10)
224f(6): jz 0x8d2(%rip)
2255(3): mov %r10,%rax
2258(2): xor %edx,%edx
225a(6): nop 0x0(%rax,%rax,1)
2260(4): add $0x8,%rax
2264(3): add $0x1,%edx
2267(4): cmp $0x0,(%rax)
226b(2): jnz 0xfffffff5(%rip)
226d(4): mov %edx,0x48(%rsp)
2271(a): mov $0x0,0x207fd5(%rip)
227b(3): mov %r10,%r15
227e(5): jmp 0xfffffab2(%rip)
2283(5): nop 0x0(%rax,%rax,1)
2288(3): test %r14b,%r14b
228b(2): jz 0xb(%rip)
228d(3): test %bpl,%bpl
2290(6): jnz 0xcca(%rip)
2296(3): or %ebp,%r14d
2299(2): mov %eax,%edx
229b(4): xor $0x1,%r14d
229f(5): jmp 0xfffffdde(%rip)
22a4(4): nop 0x0(%rax)
22a8(3): xor %r12d,%r12d
22ab(3): test %r14b,%r14b
22ae(2): jz 0x72(%rip)
22b0(4): add $0x1,%r13
22b4(2): test %al,%al
22b6(6): jz 0xcc3(%rip)
22bc(2): mov %eax,%edx
22be(5): jmp 0xfffffdca(%rip)
22c3(a): mov $0x2594073385365405735,%rcx
22cd(4): bt %rdx,%rcx
22d1(6): jnb 0xfffffc42(%rip)
22d7(9): nop 0x0(%rax,%rax,1)
22e0(2): cmp $0x5f,%al
22e2(5): movzx 0x2(%r13),%edx
22e7(3): setz %al
22ea(4): add $0x1,%r13
22ee(3): movzx %al,%eax
22f1(3): add %eax,%r15d
22f4(5): jmp 0xfffffd89(%rip)
22f9(7): nop 0x0(%rax)
2300(3): cmp $0x22,%dl
2303(6): jz 0xfffffda6(%rip)
2309(2): mov %eax,%edx
230b(3): xor %r14d,%r14d
230e(2): xor %ebp,%ebp
2310(6): mov $0x1,%r12d
2316(5): jmp 0xfffffd67(%rip)
231b(5): nop 0x0(%rax,%rax,1)
2320(3): mov %r13,%rdi
2323(5): call 0xecd(%rip)
2328(3): test %rax,%rax
232b(6): jz 0xb45(%rip)
2331(3): mov %rax,%rdi
2334(5): call 0xfffff54c(%rip)
2339(3): test %rax,%rax
233c(3): mov %rax,%rdi
233f(2): jz 0x1e(%rip)
2341(5): mov 0x28(%rsp),%rcx
2346(3): mov %r14d,%eax
2349(2): REPNZ scasb rdi(%es,10),%al
234b(5): mov 0x20(%rsp),%rax
2350(3): not %rcx
2353(5): lea 0xffffffff(%rax,%rcx,1),%rax
2358(5): mov %rax,0x20(%rsp)
235d(5): movzx 0x1(%r13),%edx
2362(5): jmp 0xfffffd1b(%rip)
2367(9): nop 0x0(%rax,%rax,1)
2370(2): cmp $0x20,%al
2372(2): jz 0x12(%rip)
2374(2): cmp $0x22,%al
2376(6): jz 0x1ca(%rip)
237c(2): cmp $0x9,%al
237e(6): jnz 0xfffffdd0(%rip)
2384(3): mov %r11d,%edi
2387(3): mov %rbx,%rcx
238a(3): or %r9b,%dil
238d(6): jnz 0xfffffdc4(%rip)
2393(7): lea 0x4915(%rip),%rsi
239a(3): mov %rbx,%rdi
239d(5): mov %r10,0x20(%rsp)
23a2(5): call 0xfffff67e(%rip)
23a7(3): xor %r9d,%r9d
23aa(3): add %rax,%rbx
23ad(3): xor %r11d,%r11d
23b0(6): mov $0x1,%r8d
23b6(5): mov 0x20(%rsp),%r10
23bb(5): jmp 0xfffffd66(%rip)
23c0(3): mov %rdx,%rsi
23c3(3): mov %rbp,%rdx
23c6(3): mov %rsi,%rbp
23c9(5): jmp 0xfffffda5(%rip)
23ce(3): test %r9b,%r9b
23d1(3): mov %rbx,%rcx
23d4(6): jnz 0xfffffd7d(%rip)
23da(3): mov %rbx,%rdi
23dd(5): mov %r11b,0x4f(%rsp)
23e2(5): mov %r10,0x40(%rsp)
23e7(5): mov %r9b,0x38(%rsp)
23ec(5): mov %r8b,0x30(%rsp)
23f1(5): call 0xdff(%rip)
23f6(3): mov %rax,%rdi
23f9(5): mov %rax,0x28(%rsp)
23fe(5): call 0xfffff482(%rip)
2403(3): test %rax,%rax
2406(5): mov %rax,0x20(%rsp)
240b(5): mov 0x28(%rsp),%rcx
2410(6): movzx 0x30(%rsp),%r8d
2416(6): movzx 0x38(%rsp),%r9d
241c(5): mov 0x40(%rsp),%r10
2421(6): movzx 0x4f(%rsp),%r11d
2427(6): jz 0x707(%rip)
242d(3): test %r8b,%r8b
2430(2): jz 0x15(%rip)
2432(4): lea 0x1(%rbp),%rax
2436(4): mov $0x0,0x0(%rbp)
243a(4): add $0x8,%r13
243e(4): mov %rax,0xfffffff8(%r13)
2442(3): mov %rax,%rbp
2445(7): cmp $0x0,0x207f8c(%rip)
244c(6): jnz 0x7ac(%rip)
2452(5): mov 0x20(%rsp),%rsi
2457(3): mov %rbp,%rdi
245a(5): mov %r11b,0x38(%rsp)
245f(5): mov %r10,0x30(%rsp)
2464(5): mov %r9b,0x28(%rsp)
2469(5): call 0xfffff4e7(%rip)
246e(6): movzx 0x28(%rsp),%r9d
2474(6): movzx 0x38(%rsp),%r11d
247a(3): mov %rax,%rbp
247d(5): mov 0x30(%rsp),%r10
2482(3): xor %r8d,%r8d
2485(3): mov %rbx,%rdi
2488(5): mov $0x7d,%esi
248d(5): mov %r11b,0x38(%rsp)
2492(5): mov %r10,0x30(%rsp)
2497(5): mov %r9b,0x28(%rsp)
249c(5): mov %r8b,0x20(%rsp)
24a1(5): call 0xfffff52f(%rip)
24a6(6): movzx 0x20(%rsp),%r8d
24ac(4): lea 0x1(%rax),%rbx
24b0(6): movzx 0x28(%rsp),%r9d
24b6(5): mov 0x30(%rsp),%r10
24bb(6): movzx 0x38(%rsp),%r11d
24c1(5): jmp 0xfffffc60(%rip)
24c6(3): test %r9b,%r9b
24c9(4): lea 0x1(%rbx),%rcx
24cd(4): movzx 0x1(%rbx),%edx
24d1(6): jz 0x86(%rip)
24d7(3): cmp $0x5c,%dl
24da(6): jz 0xfffffc77(%rip)
24e0(3): cmp $0x27,%dl
24e3(5): mov $0x27,%esi
24e8(3): cmove %esi,%eax
24eb(4): cmovne %rbx,%rcx
24ef(5): jmp 0xfffffc62(%rip)
24f4(3): test %r11b,%r11b
24f7(3): mov %rbx,%rcx
24fa(6): jnz 0xfffffc57(%rip)
2500(4): xor $0x1,%r9d
2504(3): test %r8b,%r8b
2507(2): jz 0x15(%rip)
2509(4): lea 0x1(%rbp),%rax
250d(4): mov $0x0,0x0(%rbp)
2511(4): add $0x8,%r13
2515(4): mov %rax,0xfffffff8(%r13)
2519(3): mov %rax,%rbp
251c(4): add $0x1,%rbx
2520(3): xor %r8d,%r8d
2523(5): jmp 0xfffffbfe(%rip)
2528(3): test %r8b,%r8b
252b(6): jnz 0xfffffc53(%rip)
2531(3): mov %rbp,%rdx
2534(3): mov %rbx,%rcx
2537(4): add $0x1,%rbp
253b(5): jmp 0xfffffc33(%rip)
2540(3): test %r9b,%r9b
2543(3): mov %rbx,%rcx
2546(6): jnz 0xfffffc0b(%rip)
254c(4): xor $0x1,%r11d
2550(3): test %r8b,%r8b
2553(2): jz 0xffffffc9(%rip)
2555(2): jmp 0xffffffb4(%rip)
2557(3): lea 0xffffffde(%rdx),%eax
255a(2): cmp $0x3a,%al
255c(6): jnbe 0x10a(%rip)
2562(a): mov $0x288230376151711783,%rbx
256c(4): bt %rax,%rbx
2570(6): jnb 0x364(%rip)
2576(2): mov %edx,%eax
2578(5): jmp 0xfffffbd9(%rip)
257d(7): mov 0x207ccc(%rip),%r13d
2584(5): cmp 0x48(%rsp),%r13d
2589(6): jl 0x126(%rip)
258f(5): cmp $0x0,0x18(%rsp)
2594(6): jz 0x42a(%rip)
259a(7): cmp $0x0,0x207e37(%rip)
25a1(2): jz 0x1f(%rip)
25a3(7): mov 0x207cd6(%rip),%rcx
25aa(7): lea 0x478c(%rip),%rdi
25b1(5): mov $0x11,%edx
25b6(5): mov $0x1,%esi
25bb(5): call 0xfffff625(%rip)
25c0(7): lea 0x207cd9(%rip),%rax
25c7(7): mov 0x207c82(%rip),%r13d
25ce(7): mov %rax,0x207c83(%rip)
25d5(5): mov 0x48(%rsp),%r14d
25da(3): cmp %r14d,%r13d
25dd(6): jnl 0x152(%rip)
25e3(7): lea 0x4783(%rip),%rbp
25ea(2): jmp 0x38(%rip)
25ec(4): nop 0x0(%rax)
25f0(7): movsxd 0x207c59(%rip),%rax
25f7(4): mov 0x0(%r15,%rax,8),%rdi
25fb(5): call 0xfffff465(%rip)
2600(2): test %eax,%eax
2602(6): jnz 0xa28(%rip)
2608(6): mov 0x207c42(%rip),%eax
260e(4): lea 0x1(%rax),%r13d
2612(3): cmp %r14d,%r13d
2615(7): mov %r13d,0x207c34(%rip)
261c(6): jnl 0x113(%rip)
2622(3): movsxd %r13d,%rax
2625(5): mov $0x3d,%esi
262a(4): mov 0x0(%r15,%rax,8),%r12
262e(3): mov %r12,%rdi
2631(5): call 0xfffff39f(%rip)
2636(3): test %rax,%rax
2639(3): mov %rax,%rbx
263c(6): jz 0x174(%rip)
2642(7): cmp $0x0,0x207d8f(%rip)
2649(2): jz 0xffffffa7(%rip)
264b(7): mov 0x207c2e(%rip),%rdi
2652(3): mov %r12,%rcx
2655(3): mov %rbp,%rdx
2658(5): mov $0x1,%esi
265d(2): xor %eax,%eax
265f(5): call 0xfffff591(%rip)
2664(2): jmp 0xffffff8c(%rip)
2666(3): cmp $0x5f,%dl
2669(6): jnz 0x26b(%rip)
266f(3): test %r11b,%r11b
2672(5): mov $0x20,%eax
2677(6): jnz 0xfffffada(%rip)
267d(4): add $0x2,%rbx
2681(3): mov %r11d,%r9d
2684(6): mov $0x1,%r8d
268a(5): jmp 0xfffffa97(%rip)
268f(5): cmp $0x0,0x8(%r10)
2694(6): jz 0xfffffb6c(%rip)
269a(6): nop 0x0(%rax,%rax,1)
26a0(4): add $0x8,%r14
26a4(4): cmp $0x0,(%r14)
26a8(2): jnz 0xfffffff8(%rip)
26aa(5): jmp 0xfffffb56(%rip)
26af(3): movsxd %r13d,%rax
26b2(7): lea 0x50c1(%rip),%rsi
26b9(4): mov 0x0(%r15,%rax,8),%rdi
26bd(5): call 0xfffff3b3(%rip)
26c2(2): test %eax,%eax
26c4(6): jnz 0xfffffecb(%rip)
26ca(4): add $0x1,%r13d
26ce(7): mov %r13d,0x207b7b(%rip)
26d5(5): jmp 0xfffffec5(%rip)
26da(7): mov 0x207d0f(%rip),%rdi
26e1(3): test %rdi,%rdi
26e4(6): jz 0x388(%rip)
26ea(a): mov $0x768614336404564649,%rax
26f4(3): cmp %rax,%rcx
26f7(6): jnbe 0x3a2(%rip)
26fd(3): mov %rcx,%rax
2700(3): shr $0x1,%rax
2703(5): lea 0x1(%rcx,%rax,1),%rcx
2708(8): lea 0x0(,%rcx,8),%rsi
2710(7): mov %rcx,0x207cd1(%rip)
2717(5): call 0x3c19(%rip)
271c(7): mov %rax,0x207ccd(%rip)
2723(7): mov 0x207cb6(%rip),%rax
272a(5): jmp 0xfffff8a4(%rip)
272f(6): cmp $0x0,0x8(%rsp)
2735(2): jz 0xd(%rip)
2737(5): cmp 0x48(%rsp),%r13d
273c(6): jnl 0x8be(%rip)
2742(7): mov 0x207b0f(%rip),%rbx
2749(3): mov (%rbx),%rdx
274c(3): test %rdx,%rdx
274f(2): jz 0x36(%rip)
2751(5): cmp $0x1,0x10(%rsp)
2756(7): lea 0x462c(%rip),%r12
275d(2): sbb %ebp,%ebp
275f(3): and $0xa,%ebp
2762(6): nop 0x0(%rax,%rax,1)
2768(4): add $0x8,%rbx
276c(2): xor %eax,%eax
276e(2): mov %ebp,%ecx
2770(3): mov %r12,%rsi
2773(5): mov $0x1,%edi
2778(5): call 0xfffff3b8(%rip)
277d(3): mov (%rbx),%rdx
2780(3): test %rdx,%rdx
2783(2): jnz 0xffffffe5(%rip)
2785(2): xor %eax,%eax
2787(8): mov 0x108(%rsp),%rcx
278f(9): xor $0x28,%rcx
2798(6): jnz 0x85d(%rip)
279e(7): add $0x118,%rsp
27a5(1): pop %rbx
27a6(1): pop %rbp
27a7(2): pop %r12
27a9(2): pop %r13
27ab(2): pop %r14
27ad(2): pop %r15
27af(1): ret near (%rsp)
27b0(5): cmp 0x48(%rsp),%r13d
27b5(2): jnl 0xd(%rip)
27b7(5): cmp $0x0,0x10(%rsp)
27bc(6): jnz 0x2fa(%rip)
27c2(6): mov $0x4,%r13d
27c8(6): mov $0x1,%r12d
27ce(5): mov %r15,0x10(%rsp)
27d3(2): jmp 0x17(%rip)
27d5(3): nop (%rax)
27d8(4): add $0x1,%r12d
27dc(4): add $0x4,%r13
27e0(4): cmp $0x41,%r12d
27e4(6): jz 0x124(%rip)
27ea(7): mov 0x207bcf(%rip),%rax
27f1(4): mov 0x0(%rax,%r13,1),%eax
27f5(2): test %eax,%eax
27f7(2): jz 0xffffffe1(%rip)
27f9(5): lea 0x50(%rsp),%r15
27fe(3): lea 0xfffffffe(%rax),%ebp
2801(2): xor %esi,%esi
2803(3): mov %r12d,%edi
2806(3): lea 0xffffffff(%rax),%ebx
2809(3): mov %r15,%rdx
280c(3): and $0xfd,%ebp
280f(5): call 0xfffff101(%rip)
2814(2): test %eax,%eax
2816(3): mov %eax,%r14d
2819(2): jz 0xa(%rip)
281b(2): test %ebp,%ebp
281d(6): jnz 0x7a9(%rip)
2823(3): test %r14d,%r14d
2826(2): jnz 0x2b(%rip)
2828(2): xor %eax,%eax
282a(3): cmp $0x1,%ebx
282d(3): mov %r15,%rsi
2830(3): setnbe %al
2833(3): mov %r12d,%edi
2836(2): xor %edx,%edx
2838(5): mov %rax,0x50(%rsp)
283d(5): call 0xfffff0d3(%rip)
2842(2): test %eax,%eax
2844(3): mov %eax,%r14d
2847(2): jz 0xa(%rip)
2849(2): test %ebp,%ebp
284b(6): jnz 0x659(%rip)
2851(7): cmp $0x0,0x207b80(%rip)
2858(6): jz 0xffffff80(%rip)
285e(8): lea 0xf0(%rsp),%rbp
2866(3): mov %r12d,%edi
2869(3): mov %rbp,%rsi
286c(5): call 0x3f14(%rip)
2871(7): cmp $0x0,0x207b60(%rip)
2878(6): jz 0xffffff60(%rip)
287e(7): lea 0x442c(%rip),%rcx
2885(7): lea 0x43bf(%rip),%rax
288c(3): test %r14d,%r14d
288f(7): lea 0x43c8(%rip),%r9
2896(7): mov 0x2079e3(%rip),%rdi
289d(7): lea 0x44ea(%rip),%rdx
28a4(4): cmove %rcx,%rax
28a8(3): cmp $0x1,%ebx
28ab(7): lea 0x42c1(%rip),%rbx
28b2(3): mov %r12d,%r8d
28b5(3): mov %rbp,%rcx
28b8(5): mov $0x1,%esi
28bd(4): cmovnbe %rbx,%r9
28c1(4): sub $0x8,%rsp
28c5(1): push %rax
28c6(2): xor %eax,%eax
28c8(5): call 0xfffff328(%rip)
28cd(1): pop %rax
28ce(1): pop %rdx
28cf(5): jmp 0xffffff09(%rip)
28d4(3): cmp $0x63,%dl
28d7(6): jz 0xfffff8a7(%rip)
28dd(3): cmp $0x72,%dl
28e0(6): jz 0x534(%rip)
28e6(6): jnle 0x1b8(%rip)
28ec(3): cmp $0x66,%dl
28ef(6): jz 0x1ed(%rip)
28f5(3): cmp $0x6e,%dl
28f8(6): jnz 0x713(%rip)
28fe(5): mov $0xa,%eax
2903(5): jmp 0xfffff84e(%rip)
2908(5): call 0xffffefb8(%rip)
290d(7): cmp $0x0,0x207995(%rip)
2914(5): mov 0x10(%rsp),%r15
2919(5): mov %rax,0x10(%rsp)
291e(6): jnz 0x3e0(%rip)
2924(7): cmp $0x0,0x20797d(%rip)
292b(2): jz 0x7(%rip)
292d(5): call 0x9f3(%rip)
2932(6): cmp $0x0,0x8(%rsp)
2938(2): jz 0x21(%rip)
293a(7): cmp $0x0,0x207a97(%rip)
2941(6): jnz 0x1a5(%rip)
2947(5): mov 0x8(%rsp),%rdi
294c(5): call 0xfffff044(%rip)
2951(2): test %eax,%eax
2953(6): jnz 0x740(%rip)
2959(7): cmp $0x0,0x207a78(%rip)
2960(6): jnz 0x325(%rip)
2966(7): movsxd 0x2078e3(%rip),%rax
296d(4): lea 0x0(%r15,%rax,8),%rax
2971(3): mov (%rax),%rdi
2974(3): mov %rax,%rsi
2977(5): call 0xfffff219(%rip)
297c(5): mov 0x10(%rsp),%rax
2981(3): cmp $0x2,(%rax)
2984(6): jz 0x201(%rip)
298a(7): movsxd 0x2078bf(%rip),%rax
2991(4): mov 0x0(%r15,%rax,8),%rdi
2995(5): call 0x32fb(%rip)
299a(3): mov %rax,%rcx
299d(5): mov 0x10(%rsp),%rax
29a2(7): lea 0x4d8c(%rip),%rdx
29a9(2): xor %edi,%edi
29ab(2): mov (%rax),%esi
29ad(2): xor %eax,%eax
29af(5): call 0xfffff191(%rip)
29b4(5): mov $0x7e,%eax
29b9(5): jmp 0xfffffdce(%rip)
29be(8): cmp $0x0,0x207a1a(%rip)
29c6(6): jz 0xfffffc0f(%rip)
29cc(7): mov 0x207a1d(%rip),%r13
29d3(3): xor %r12d,%r12d
29d6(7): lea 0x4372(%rip),%rbp
29dd(2): jmp 0x2a(%rip)
29df(1): nop 
29e0(7): mov 0x207a09(%rip),%r13
29e7(3): add %r13,%rbx
29ea(3): mov (%rbx),%rdi
29ed(5): call 0xfffff193(%rip)
29f2(2): test %eax,%eax
29f4(6): jnz 0x4e9(%rip)
29fa(4): add $0x1,%r12
29fe(7): cmp 0x2079db(%rip),%r12
2a05(2): jnb 0x5b(%rip)
2a07(7): cmp $0x0,0x2079ca(%rip)
2a0e(8): lea 0x0(,%r12,8),%rbx
2a16(2): jz 0xffffffca(%rip)
2a18(5): mov 0x0(%r13,%r12,8),%rcx
2a1d(7): mov 0x20785c(%rip),%rdi
2a24(3): mov %rbp,%rdx
2a27(5): mov $0x1,%esi
2a2c(2): xor %eax,%eax
2a2e(5): call 0xfffff1c2(%rip)
2a33(2): jmp 0xffffffad(%rip)
2a35(5): call 0x325b(%rip)
2a3a(7): mov 0x20783f(%rip),%rdi
2a41(7): lea 0x42a2(%rip),%rdx
2a48(3): mov %rax,%rcx
2a4b(5): mov $0x1,%esi
2a50(2): xor %eax,%eax
2a52(4): add $0x8,%r14
2a56(5): call 0xfffff19a(%rip)
2a5b(5): jmp 0xfffff788(%rip)
2a60(7): mov 0x2077e9(%rip),%r13d
2a67(5): jmp 0xfffffb6e(%rip)
2a6c(3): test %rcx,%rcx
2a6f(5): mov $0x10,%eax
2a74(5): mov $0x8,%edx
2a79(4): cmove %rax,%rcx
2a7d(3): mov %rdx,%rax
2a80(2): xor %esi,%esi
2a82(3): mul %rax,%rcx,%rdx
2a85(6): jo 0x44e(%rip)
2a8b(3): test %rax,%rax
2a8e(2): js 0xb(%rip)
2a90(3): test %rsi,%rsi
2a93(6): jz 0xfffffc75(%rip)
2a99(5): call 0x3a87(%rip)
2a9e(3): cmp $0x74,%dl
2aa1(2): jz 0x76(%rip)
2aa3(3): cmp $0x76,%dl
2aa6(6): jnz 0x565(%rip)
2aac(5): mov $0xb,%eax
2ab1(5): jmp 0xfffff6a0(%rip)
2ab6(7): lea 0x4b0b(%rip),%rsi
2abd(5): mov $0x5,%edx
2ac2(2): xor %edi,%edi
2ac4(5): call 0xffffee9c(%rip)
2ac9(2): xor %esi,%esi
2acb(3): mov %rax,%rdx
2ace(2): xor %edi,%edi
2ad0(2): xor %eax,%eax
2ad2(5): call 0xfffff06e(%rip)
2ad7(5): jmp 0xfffff2ae(%rip)
2adc(5): mov $0xc,%eax
2ae1(5): jmp 0xfffff670(%rip)
2ae6(5): mov 0x8(%rsp),%rsi
2aeb(5): mov $0x4,%edi
2af0(5): call 0x2ed0(%rip)
2af5(7): mov 0x207784(%rip),%rdi
2afc(7): lea 0x42a9(%rip),%rdx
2b03(3): mov %rax,%rcx
2b06(5): mov $0x1,%esi
2b0b(2): xor %eax,%eax
2b0d(5): call 0xfffff0e3(%rip)
2b12(5): jmp 0xfffffe35(%rip)
2b17(5): mov $0x9,%eax
2b1c(5): jmp 0xfffff635(%rip)
2b21(8): mov $0x0,0x48(%rsp)
2b29(5): jmp 0xfffff748(%rip)
2b2e(7): cmp $0x0,0x2078a3(%rip)
2b35(6): jz 0xfffff950(%rip)
2b3b(7): mov 0x20773e(%rip),%rdi
2b42(7): lea 0x4a27(%rip),%rdx
2b49(5): mov $0x1,%esi
2b4e(2): xor %eax,%eax
2b50(5): mov %r11b,0x38(%rsp)
2b55(5): mov %r10,0x30(%rsp)
2b5a(5): mov %r9b,0x28(%rsp)
2b5f(5): mov %r8b,0x20(%rsp)
2b64(5): call 0xfffff08c(%rip)
2b69(6): movzx 0x38(%rsp),%r11d
2b6f(5): mov 0x30(%rsp),%r10
2b74(6): movzx 0x28(%rsp),%r9d
2b7a(6): movzx 0x20(%rsp),%r8d
2b80(5): jmp 0xfffff905(%rip)
2b85(7): movsxd 0x2076c4(%rip),%rax
2b8c(4): mov 0x0(%r15,%rax,8),%rdi
2b90(5): call 0x3100(%rip)
2b95(3): mov %rax,%rcx
2b98(5): mov 0x10(%rsp),%rax
2b9d(7): lea 0x4b91(%rip),%rdx
2ba4(2): xor %edi,%edi
2ba6(2): mov (%rax),%esi
2ba8(2): xor %eax,%eax
2baa(5): call 0xffffef96(%rip)
2baf(7): movsxd 0x20769a(%rip),%rax
2bb6(5): mov $0x20,%esi
2bbb(4): mov 0x0(%r15,%rax,8),%rdi
2bbf(5): call 0xffffee11(%rip)
2bc4(3): test %rax,%rax
2bc7(6): jz 0x257(%rip)
2bcd(7): lea 0x49c4(%rip),%rsi
2bd4(5): mov $0x5,%edx
2bd9(2): xor %edi,%edi
2bdb(5): call 0xffffed85(%rip)
2be0(2): xor %esi,%esi
2be2(3): mov %rax,%rdx
2be5(2): xor %edi,%edi
2be7(2): xor %eax,%eax
2be9(5): call 0xffffef57(%rip)
2bee(5): mov $0x7f,%eax
2bf3(5): jmp 0xfffffb94(%rip)
2bf8(5): mov 0x20(%rsp),%rdi
2bfd(5): mov %r11b,0x40(%rsp)
2c02(5): mov %r10,0x38(%rsp)
2c07(5): mov %r9b,0x30(%rsp)
2c0c(5): mov %rcx,0x28(%rsp)
2c11(5): call 0x307f(%rip)
2c16(5): mov 0x28(%rsp),%rcx
2c1b(7): mov 0x20765e(%rip),%rdi
2c22(7): lea 0x408b(%rip),%rdx
2c29(3): mov %rax,%r8
2c2c(5): mov $0x1,%esi
2c31(2): xor %eax,%eax
2c33(5): call 0xffffefbd(%rip)
2c38(6): movzx 0x40(%rsp),%r11d
2c3e(5): mov 0x38(%rsp),%r10
2c43(6): movzx 0x30(%rsp),%r9d
2c49(5): jmp 0xfffff809(%rip)
2c4e(4): mov 0x8(%r10),%rdi
2c52(4): lea 0x10(%r10),%r14
2c56(5): call 0x303a(%rip)
2c5b(7): mov 0x20761e(%rip),%rdi
2c62(7): lea 0x4073(%rip),%rdx
2c69(3): mov %rax,%rcx
2c6c(5): mov $0x1,%esi
2c71(2): xor %eax,%eax
2c73(5): call 0xffffef7d(%rip)
2c78(5): mov 0x20(%rsp),%r10
2c7d(3): mov %r10,%rbx
2c80(5): jmp 0xfffff563(%rip)
2c85(7): movsxd 0x2075c4(%rip),%rax
2c8c(7): mov 0x2075ed(%rip),%rdi
2c93(7): lea 0x413e(%rip),%rdx
2c9a(5): mov $0x1,%esi
2c9f(7): lea 0x4141(%rip),%r12
2ca6(4): mov 0x0(%r15,%rax,8),%rcx
2caa(2): xor %eax,%eax
2cac(5): call 0xffffef44(%rip)
2cb1(7): movsxd 0x207598(%rip),%rbx
2cb8(2): jmp 0x39(%rip)
2cba(7): cmp $0x0,0x207717(%rip)
2cc1(2): jz 0x2c(%rip)
2cc3(4): mov 0x0(%r15,%rbx,8),%rdi
2cc7(5): call 0x2fc9(%rip)
2ccc(2): mov %ebp,%ecx
2cce(6): sub 0x20757c(%rip),%ecx
2cd4(7): mov 0x2075a5(%rip),%rdi
2cdb(3): mov %rax,%r8
2cde(3): mov %r12,%rdx
2ce1(5): mov $0x1,%esi
2ce6(2): xor %eax,%eax
2ce8(5): call 0xffffef08(%rip)
2ced(4): add $0x1,%rbx
2cf1(4): cmp 0x48(%rsp),%ebx
2cf5(2): mov %ebx,%ebp
2cf7(2): jl 0xffffffc3(%rip)
2cf9(5): jmp 0xfffffc6d(%rip)
2cfe(5): lea 0x50(%rsp),%r12
2d03(5): mov $0x1,%ebx
2d08(3): mov %r12,%rdi
2d0b(5): call 0xffffed75(%rip)
2d10(2): xor %esi,%esi
2d12(2): xor %edi,%edi
2d14(3): mov %r12,%rdx
2d17(5): call 0xffffeb79(%rip)
2d1c(2): test %eax,%eax
2d1e(6): jnz 0x27f(%rip)
2d24(7): lea 0x207615(%rip),%rbp
2d2b(8): lea 0xf0(%rsp),%r14
2d33(7): lea 0x3f2e(%rip),%r13
2d3a(5): mov %r15,0x18(%rsp)
2d3f(2): jmp 0x25(%rip)
2d41(7): nop 0x0(%rax)
2d48(3): mov %r12,%rdi
2d4b(3): mov %r13,%r15
2d4e(5): call 0xffffeee2(%rip)
2d53(7): cmp $0x0,0x20767e(%rip)
2d5a(2): jnz 0x3d(%rip)
2d5c(3): add $0x1,%ebx
2d5f(3): cmp $0x41,%ebx
2d62(2): jz 0x6d(%rip)
2d64(2): mov %ebx,%esi
2d66(3): mov %rbp,%rdi
2d69(5): call 0xffffee57(%rip)
2d6e(2): test %eax,%eax
2d70(2): mov %ebx,%esi
2d72(2): jnz 0xffffffd6(%rip)
2d74(7): lea 0x207545(%rip),%rdi
2d7b(5): call 0xffffee45(%rip)
2d80(2): test %eax,%eax
2d82(2): jz 0xffffffda(%rip)
2d84(2): mov %ebx,%esi
2d86(3): mov %r12,%rdi
2d89(7): lea 0x3ed6(%rip),%r15
2d90(5): call 0xffffedd0(%rip)
2d95(2): jmp 0xffffffbe(%rip)
2d97(3): mov %r14,%rsi
2d9a(2): mov %ebx,%edi
2d9c(5): call 0x39e4(%rip)
2da1(7): cmp $0x0,0x207630(%rip)
2da8(2): jz 0xffffffb4(%rip)
2daa(7): mov 0x2074cf(%rip),%rdi
2db1(7): lea 0x48c0(%rip),%rdx
2db8(3): mov %r15,%r9
2dbb(3): mov %ebx,%r8d
2dbe(3): mov %r14,%rcx
2dc1(5): mov $0x1,%esi
2dc6(2): xor %eax,%eax
2dc8(5): call 0xffffee28(%rip)
2dcd(2): jmp 0xffffff8f(%rip)
2dcf(2): xor %edx,%edx
2dd1(3): mov %r12,%rsi
2dd4(5): mov $0x2,%edi
2dd9(5): mov 0x18(%rsp),%r15
2dde(5): call 0xffffeab2(%rip)
2de3(2): test %eax,%eax
2de5(6): jz 0xfffffb3f(%rip)
2deb(7): lea 0x48a6(%rip),%rsi
2df2(5): mov $0x5,%edx
2df7(2): xor %edi,%edi
2df9(5): call 0xffffeb67(%rip)
2dfe(3): mov %rax,%rdx
2e01(5): mov 0x10(%rsp),%rax
2e06(5): mov $0x7d,%edi
2e0b(2): mov (%rax),%esi
2e0d(2): xor %eax,%eax
2e0f(5): call 0xffffed31(%rip)
2e14(5): mov $0xd,%eax
2e19(5): jmp 0xfffff338(%rip)
2e1e(5): mov $0x7f,%eax
2e23(5): jmp 0xfffff964(%rip)
2e28(5): cmp $0xffffff7e,%eax
2e2d(6): jnz 0xffffef58(%rip)
2e33(2): xor %edi,%edi
2e35(5): call 0x65b(%rip)
2e3a(2): mov %eax,%ebx
2e3c(7): lea 0x3eb5(%rip),%rsi
2e43(5): mov $0x5,%edx
2e48(2): xor %edi,%edi
2e4a(5): call 0xffffeb16(%rip)
2e4f(2): xor %esi,%esi
2e51(3): mov %rax,%rdx
2e54(2): mov %ebx,%ecx
2e56(2): xor %edi,%edi
2e58(2): xor %eax,%eax
2e5a(5): call 0xffffece6(%rip)
2e5f(5): mov $0x5,%edx
2e64(7): lea 0x472d(%rip),%rsi
2e6b(5): jmp 0xfffffc57(%rip)
2e70(7): lea 0x4699(%rip),%rsi
2e77(5): mov $0x5,%edx
2e7c(2): xor %edi,%edi
2e7e(5): call 0xffffeae2(%rip)
2e83(3): mov %r13,%rcx
2e86(3): mov %rax,%rdx
2e89(2): xor %esi,%esi
2e8b(5): mov $0x7d,%edi
2e90(2): xor %eax,%eax
2e92(5): call 0xffffecae(%rip)
2e97(3): cmp $0x20,%eax
2e9a(2): mov %eax,%ebx
2e9c(6): jnz 0xffffeee9(%rip)
2ea2(2): jmp 0xffffff9a(%rip)
2ea4(7): lea 0x479d(%rip),%rsi
2eab(5): mov $0x5,%edx
2eb0(2): xor %edi,%edi
2eb2(5): call 0xffffeaae(%rip)
2eb7(3): mov %rax,%rbx
2eba(5): call 0xffffea06(%rip)
2ebf(2): mov (%rax),%esi
2ec1(3): mov %r12d,%ecx
2ec4(3): mov %rbx,%rdx
2ec7(5): mov $0x7d,%edi
2ecc(2): xor %eax,%eax
2ece(5): call 0xffffec72(%rip)
2ed3(5): mov $0x1,%esi
2ed8(5): jmp 0xfffffbb3(%rip)
2edd(3): mov (%rbx),%rdi
2ee0(5): call 0x2db0(%rip)
2ee5(7): lea 0x3e71(%rip),%rsi
2eec(5): mov $0x5,%edx
2ef1(2): xor %edi,%edi
2ef3(3): mov %rax,%rbp
2ef6(5): call 0xffffea6a(%rip)
2efb(3): mov %rax,%rbx
2efe(5): call 0xffffe9c2(%rip)
2f03(2): mov (%rax),%esi
2f05(3): mov %rbp,%rcx
2f08(3): mov %rbx,%rdx
2f0b(5): mov $0x7d,%edi
2f10(2): xor %eax,%eax
2f12(5): call 0xffffec2e(%rip)
2f17(7): lea 0x45c2(%rip),%rsi
2f1e(5): mov $0x5,%edx
2f23(2): xor %edi,%edi
2f25(5): call 0xffffea3b(%rip)
2f2a(2): xor %esi,%esi
2f2c(3): mov %rax,%rdx
2f2f(5): mov $0x7d,%edi
2f34(2): xor %eax,%eax
2f36(5): call 0xffffec0a(%rip)
2f3b(7): lea 0x479e(%rip),%rcx
2f42(7): lea 0x3bfb(%rip),%rsi
2f49(7): lea 0x3d36(%rip),%rdi
2f50(5): mov $0x134,%edx
2f55(5): call 0xffffeaab(%rip)
2f5a(7): lea 0x477f(%rip),%rcx
2f61(7): lea 0x3bdc(%rip),%rsi
2f68(7): lea 0x3d17(%rip),%rdi
2f6f(5): mov $0x12f,%edx
2f74(5): call 0xffffea8c(%rip)
2f79(7): lea 0x45c8(%rip),%rsi
2f80(5): mov $0x5,%edx
2f85(2): xor %edi,%edi
2f87(5): call 0xffffe9d9(%rip)
2f8c(2): xor %esi,%esi
2f8e(3): mov %rax,%rdx
2f91(5): mov $0x7d,%edi
2f96(2): xor %eax,%eax
2f98(5): call 0xffffeba8(%rip)
2f9d(7): lea 0x3edc(%rip),%rsi
2fa4(5): mov $0x5,%edx
2fa9(2): xor %edi,%edi
2fab(5): call 0xffffe9b5(%rip)
2fb0(3): mov %rax,%rdx
2fb3(5): mov 0x10(%rsp),%rax
2fb8(5): mov $0x7d,%edi
2fbd(2): mov (%rax),%esi
2fbf(2): xor %eax,%eax
2fc1(5): call 0xffffeb7f(%rip)
2fc6(7): lea 0x464b(%rip),%rsi
2fcd(5): mov $0x5,%edx
2fd2(2): xor %edi,%edi
2fd4(5): call 0xffffe98c(%rip)
2fd9(3): mov %rax,%rbx
2fdc(5): call 0xffffe8e4(%rip)
2fe1(2): mov (%rax),%esi
2fe3(3): mov %r12d,%ecx
2fe6(3): mov %rbx,%rdx
2fe9(5): mov $0x7d,%edi
2fee(2): xor %eax,%eax
2ff0(5): call 0xffffeb50(%rip)
2ff5(5): call 0xffffe9ab(%rip)
2ffa(5): mov $0x5,%edx
2fff(7): lea 0x45ea(%rip),%rsi
3006(5): jmp 0xfffffabc(%rip)
300b(7): lea 0x46be(%rip),%rcx
3012(7): lea 0x3b2b(%rip),%rsi
3019(7): lea 0x3c92(%rip),%rdi
3020(5): mov $0xd2,%edx
3025(5): call 0xffffe9db(%rip)
302a(3): mov $0x0,(%rbx)
302d(7): movsxd 0x20721c(%rip),%rax
3034(4): mov 0x0(%r15,%rax,8),%rdi
3038(5): call 0x2c58(%rip)
303d(7): lea 0x3d37(%rip),%rsi
3044(5): mov $0x5,%edx
3049(2): xor %edi,%edi
304b(3): mov %rax,%rbp
304e(5): call 0xffffe912(%rip)
3053(3): mov %rax,%rbx
3056(5): call 0xffffe86a(%rip)
305b(2): mov (%rax),%esi
305d(3): mov %rbp,%rcx
3060(3): mov %rbx,%rdx
3063(5): mov $0x7d,%edi
3068(2): xor %eax,%eax
306a(5): call 0xffffead6(%rip)
306f(7): lea 0x443a(%rip),%rsi
3076(5): mov $0x5,%edx
307b(2): xor %edi,%edi
307d(5): call 0xffffe8e3(%rip)
3082(2): xor %esi,%esi
3084(3): mov %rax,%rdx
3087(5): mov $0x7d,%edi
308c(2): xor %eax,%eax
308e(5): call 0xffffeab2(%rip)
3093(5): mov 0x8(%rsp),%rsi
3098(5): mov $0x4,%edi
309d(5): call 0x2923(%rip)
30a2(7): lea 0x3d11(%rip),%rsi
30a9(5): mov $0x5,%edx
30ae(2): xor %edi,%edi
30b0(3): mov %rax,%rbx
30b3(5): call 0xffffe8ad(%rip)
30b8(3): mov %rax,%rdx
30bb(5): mov 0x10(%rsp),%rax
30c0(3): mov %rbx,%rcx
30c3(5): mov $0x7d,%edi
30c8(2): mov (%rax),%esi
30ca(2): xor %eax,%eax
30cc(5): call 0xffffea74(%rip)
30d1(a): nop 0x0(%rax,%rax,1)
30db(5): nop 0x0(%rax,%rax,1)
30e0(2): xor %ebp,%ebp
30e2(3): mov %rdx,%r9
30e5(1): pop %rsi
30e6(3): mov %rsp,%rdx
30e9(4): and $0xfffffff0,%rsp
30ed(1): push %rax
30ee(1): push %rsp
30ef(7): lea 0x3a1a(%rip),%r8
30f6(7): lea 0x39a3(%rip),%rcx
30fd(7): lea 0xffffeb6c(%rip),%rdi
3104(6): call 0x206ece(%rip)
310a(1): hlt 

"_start" :
30e0(2): xor %ebp,%ebp
30e2(3): mov %rdx,%r9
30e5(1): pop %rsi
30e6(3): mov %rsp,%rdx
30e9(4): and $0xfffffff0,%rsp
30ed(1): push %rax
30ee(1): push %rsp
30ef(7): lea 0x3a1a(%rip),%r8
30f6(7): lea 0x39a3(%rip),%rcx
30fd(7): lea 0xffffeb6c(%rip),%rdi
3104(6): call 0x206ece(%rip)
310a(1): hlt 

"deregister_tm_clones" :
3110(7): lea 0x207111(%rip),%rdi
3117(1): push %rbp
3118(7): lea 0x207109(%rip),%rax
311f(3): cmp %rdi,%rax
3122(3): mov %rsp,%rbp
3125(2): jz 0x1b(%rip)
3127(7): mov 0x206ea2(%rip),%rax
312e(3): test %rax,%rax
3131(2): jz 0xf(%rip)
3133(1): pop %rbp
3134(2): jmp %rax
3136(a): nop 0x0(%rax,%rax,1)
3140(1): pop %rbp
3141(1): ret near (%rsp)

"register_tm_clones" :
3150(7): lea 0x2070d1(%rip),%rdi
3157(7): lea 0x2070ca(%rip),%rsi
315e(1): push %rbp
315f(3): sub %rdi,%rsi
3162(3): mov %rsp,%rbp
3165(4): sar $0x3,%rsi
3169(3): mov %rsi,%rax
316c(4): shr $0x3f,%rax
3170(3): add %rax,%rsi
3173(3): sar $0x1,%rsi
3176(2): jz 0x1a(%rip)
3178(7): mov 0x206e69(%rip),%rax
317f(3): test %rax,%rax
3182(2): jz 0xe(%rip)
3184(1): pop %rbp
3185(2): jmp %rax
3187(9): nop 0x0(%rax,%rax,1)
3190(1): pop %rbp
3191(1): ret near (%rsp)

"__do_global_dtors_aux" :
31a0(7): cmp $0x0,0x2070e1(%rip)
31a7(2): jnz 0x31(%rip)
31a9(8): cmp $0x0,0x206e3f(%rip)
31b1(1): push %rbp
31b2(3): mov %rsp,%rbp
31b5(2): jz 0xe(%rip)
31b7(7): mov 0x206e4a(%rip),%rdi
31be(5): call 0xffffeaa2(%rip)
31c3(5): call 0xffffff4d(%rip)
31c8(7): mov $0x1,0x2070b9(%rip)
31cf(1): pop %rbp
31d0(1): ret near (%rsp)
31d1(7): nop 0x0(%rax)
31d8(2): REP ret near (%rsp)

"frame_dummy" :
31e0(1): push %rbp
31e1(3): mov %rsp,%rbp
31e4(1): pop %rbp
31e5(5): jmp 0xffffff6b(%rip)

"extract_varname" :
31f0(1): push %rbp
31f1(1): push %rbx
31f2(4): sub $0x18,%rsp
31f6(3): test %rdi,%rdi
31f9(6): jz 0x100(%rip)
31ff(3): cmp $0x24,(%rdi)
3202(3): mov %rdi,%rbp
3205(6): jnz 0xf4(%rip)
320b(4): cmp $0x7b,0x1(%rdi)
320f(6): jnz 0xae(%rip)
3215(4): movsx 0x2(%rdi),%eax
3219(2): mov %eax,%edx
321b(3): sub $0x41,%eax
321e(3): cmp $0x39,%eax
3221(2): jbe 0x7f(%rip)
3223(3): cmp $0x5f,%dl
3226(6): jnz 0x97(%rip)
322c(4): lea 0x3(%rbp),%rdx
3230(2): jmp 0x1c(%rip)
3232(6): nop 0x0(%rax,%rax,1)
3238(2): cmp $0x41,%al
323a(2): jnl 0xe(%rip)
323c(3): lea 0xffffffd0(%rax),%ecx
323f(3): cmp $0x9,%cl
3242(2): jbe 0x6(%rip)
3244(2): cmp $0x5f,%al
3246(2): jnz 0x19(%rip)
3248(4): add $0x1,%rdx
324c(3): movzx (%rdx),%eax
324f(2): cmp $0x5a,%al
3251(2): jle 0xffffffe7(%rip)
3253(3): lea 0xffffff9f(%rax),%ecx
3256(3): cmp $0x19,%cl
3259(2): jbe 0xffffffef(%rip)
325b(2): cmp $0x5f,%al
325d(2): jz 0xffffffeb(%rip)
325f(2): cmp $0x7d,%al
3261(2): jnz 0x5c(%rip)
3263(3): mov %rdx,%rbx
3266(7): mov 0x207163(%rip),%rcx
326d(3): sub %rbp,%rbx
3270(4): lea 0xfffffffe(%rbx),%rdx
3274(7): cmp 0x20714d(%rip),%rdx
327b(2): jnb 0x55(%rip)
327d(4): lea 0x2(%rbp),%rsi
3281(3): mov %rcx,%rdi
3284(5): call 0xffffe82c(%rip)
3289(5): mov $0x0,0xfffffffe(%rax,%rbx,1)
328e(3): mov %rax,%rcx
3291(4): add $0x18,%rsp
3295(3): mov %rcx,%rax
3298(1): pop %rbx
3299(1): pop %rbp
329a(1): ret near (%rsp)
329b(5): nop 0x0(%rax,%rax,1)
32a0(a): mov $0x288230371923853311,%rcx
32aa(4): bt %rax,%rcx
32ae(6): jb 0xffffff7e(%rip)
32b4(3): cmp $0x5f,%dl
32b7(6): jz 0xffffff75(%rip)
32bd(4): add $0x18,%rsp
32c1(2): xor %ecx,%ecx
32c3(3): mov %rcx,%rax
32c6(1): pop %rbx
32c7(1): pop %rbp
32c8(1): ret near (%rsp)
32c9(7): nop 0x0(%rax)
32d0(4): lea 0xffffffff(%rbx),%rsi
32d4(3): mov %rcx,%rdi
32d7(5): mov %rdx,0x8(%rsp)
32dc(7): mov %rsi,0x2070e5(%rip)
32e3(5): call 0x304d(%rip)
32e8(5): mov 0x8(%rsp),%rdx
32ed(3): mov %rax,%rcx
32f0(7): mov %rax,0x2070d9(%rip)
32f7(2): jmp 0xffffff86(%rip)
32f9(7): lea 0x43c0(%rip),%rcx
3300(7): lea 0x383d(%rip),%rsi
3307(7): lea 0x3852(%rip),%rdi
330e(5): mov $0xdd,%edx
3313(5): call 0xffffe6ed(%rip)

"list_signal_handling" :
3320(2): push %r15
3322(2): push %r14
3324(2): push %r13
3326(2): push %r12
3328(1): push %rbp
3329(1): push %rbx
332a(7): sub $0x158,%rsp
3331(5): lea 0x10(%rsp),%rbx
3336(9): mov $0x28,%rax
333f(8): mov %rax,0x148(%rsp)
3347(2): xor %eax,%eax
3349(3): mov %rbx,%rdi
334c(5): mov %rbx,0x8(%rsp)
3351(5): call 0xffffe72f(%rip)
3356(2): xor %esi,%esi
3358(2): xor %edi,%edi
335a(3): mov %rbx,%rdx
335d(5): call 0xffffe533(%rip)
3362(2): test %eax,%eax
3364(6): jnz 0xf1(%rip)
336a(5): mov $0x1,%ebx
336f(8): lea 0x90(%rsp),%rbp
3377(2): jmp 0x66(%rip)
3379(7): nop 0x0(%rax)
3380(5): call 0xffffe840(%rip)
3385(2): test %eax,%eax
3387(2): jz 0x4e(%rip)
3389(7): lea 0x3921(%rip),%r13
3390(7): lea 0x38d1(%rip),%r15
3397(3): mov %r13,%r12
339a(8): lea 0x130(%rsp),%r14
33a2(2): mov %ebx,%edi
33a4(3): mov %r14,%rsi
33a7(5): call 0x33d9(%rip)
33ac(7): mov 0x206ecd(%rip),%rdi
33b3(2): push %r13
33b5(7): lea 0x37c0(%rip),%rdx
33bc(2): push %r12
33be(3): mov %r15,%r9
33c1(3): mov %ebx,%r8d
33c4(3): mov %r14,%rcx
33c7(5): mov $0x1,%esi
33cc(2): xor %eax,%eax
33ce(5): call 0xffffe822(%rip)
33d3(1): pop %rax
33d4(1): pop %rdx
33d5(3): add $0x1,%ebx
33d8(3): cmp $0x41,%ebx
33db(2): jz 0x55(%rip)
33dd(2): xor %esi,%esi
33df(3): mov %rbp,%rdx
33e2(2): mov %ebx,%edi
33e4(5): call 0xffffe52c(%rip)
33e9(2): test %eax,%eax
33eb(2): jnz 0xffffffea(%rip)
33ed(9): cmp $0x1,0x90(%rsp)
33f6(2): mov %ebx,%esi
33f8(5): mov 0x8(%rsp),%rdi
33fd(2): jnz 0xffffff83(%rip)
33ff(5): call 0xffffe7c1(%rip)
3404(2): test %eax,%eax
3406(7): lea 0x3766(%rip),%r13
340d(7): lea 0x3766(%rip),%r12
3414(7): lea 0x384d(%rip),%r15
341b(6): jnz 0xffffff7f(%rip)
3421(7): lea 0x3889(%rip),%r12
3428(3): mov %r12,%r15
342b(5): jmp 0xffffff6f(%rip)
3430(8): mov 0x148(%rsp),%rax
3438(9): xor $0x28,%rax
3441(2): jnz 0x40(%rip)
3443(7): add $0x158,%rsp
344a(1): pop %rbx
344b(1): pop %rbp
344c(2): pop %r12
344e(2): pop %r13
3450(2): pop %r14
3452(2): pop %r15
3454(1): ret near (%rsp)
3455(7): lea 0x3a24(%rip),%rsi
345c(5): mov $0x5,%edx
3461(2): xor %edi,%edi
3463(5): call 0xffffe4fd(%rip)
3468(3): mov %rax,%rbx
346b(5): call 0xffffe455(%rip)
3470(2): mov (%rax),%esi
3472(3): mov %rbx,%rdx
3475(5): mov $0x7d,%edi
347a(2): xor %eax,%eax
347c(5): call 0xffffe6c4(%rip)
3481(5): call 0xffffe51f(%rip)

"usage" :
3490(2): push %r13
3492(2): push %r12
3494(5): mov $0x5,%edx
3499(1): push %rbp
349a(1): push %rbx
349b(2): mov %edi,%ebp
349d(7): sub $0x88,%rsp
34a4(7): mov 0x206f5d(%rip),%rbx
34ab(9): mov $0x28,%rax
34b4(5): mov %rax,0x78(%rsp)
34b9(2): xor %eax,%eax
34bb(2): test %edi,%edi
34bd(2): jz 0x30(%rip)
34bf(7): lea 0x39e2(%rip),%rsi
34c6(2): xor %edi,%edi
34c8(5): call 0xffffe498(%rip)
34cd(7): mov 0x206dac(%rip),%rdi
34d4(3): mov %rax,%rdx
34d7(3): mov %rbx,%rcx
34da(5): mov $0x1,%esi
34df(2): xor %eax,%eax
34e1(5): call 0xffffe70f(%rip)
34e6(2): mov %ebp,%edi
34e8(5): call 0xffffe6e8(%rip)
34ed(7): lea 0x39dc(%rip),%rsi
34f4(2): xor %edi,%edi
34f6(5): call 0xffffe46a(%rip)
34fb(3): mov %rbx,%rdx
34fe(3): mov %rax,%rsi
3501(5): mov $0x1,%edi
3506(2): xor %eax,%eax
3508(5): call 0xffffe628(%rip)
350d(7): mov 0x206d34(%rip),%rbx
3514(7): lea 0x39f5(%rip),%rsi
351b(5): mov $0x5,%edx
3520(2): xor %edi,%edi
3522(5): call 0xffffe43e(%rip)
3527(3): mov %rbx,%rsi
352a(3): mov %rax,%rdi
352d(5): call 0xffffe513(%rip)
3532(7): mov 0x206d0f(%rip),%rbx
3539(7): lea 0x3a10(%rip),%rsi
3540(5): mov $0x5,%edx
3545(2): xor %edi,%edi
3547(5): call 0xffffe419(%rip)
354c(3): mov %rbx,%rsi
354f(3): mov %rax,%rdi
3552(5): call 0xffffe4ee(%rip)
3557(7): mov 0x206cea(%rip),%rbx
355e(7): lea 0x3a3b(%rip),%rsi
3565(5): mov $0x5,%edx
356a(2): xor %edi,%edi
356c(5): call 0xffffe3f4(%rip)
3571(3): mov %rbx,%rsi
3574(3): mov %rax,%rdi
3577(5): call 0xffffe4c9(%rip)
357c(7): mov 0x206cc5(%rip),%rbx
3583(7): lea 0x3ad6(%rip),%rsi
358a(5): mov $0x5,%edx
358f(2): xor %edi,%edi
3591(5): call 0xffffe3cf(%rip)
3596(3): mov %rbx,%rsi
3599(3): mov %rax,%rdi
359c(5): call 0xffffe4a4(%rip)
35a1(7): mov 0x206ca0(%rip),%rbx
35a8(7): lea 0x3ae9(%rip),%rsi
35af(5): mov $0x5,%edx
35b4(2): xor %edi,%edi
35b6(5): call 0xffffe3aa(%rip)
35bb(3): mov %rbx,%rsi
35be(3): mov %rax,%rdi
35c1(5): call 0xffffe47f(%rip)
35c6(7): mov 0x206c7b(%rip),%rbx
35cd(7): lea 0x3b54(%rip),%rsi
35d4(5): mov $0x5,%edx
35d9(2): xor %edi,%edi
35db(5): call 0xffffe385(%rip)
35e0(3): mov %rbx,%rsi
35e3(3): mov %rax,%rdi
35e6(5): call 0xffffe45a(%rip)
35eb(7): mov 0x206c56(%rip),%rbx
35f2(7): lea 0x3b7f(%rip),%rsi
35f9(5): mov $0x5,%edx
35fe(2): xor %edi,%edi
3600(5): call 0xffffe360(%rip)
3605(3): mov %rbx,%rsi
3608(3): mov %rax,%rdi
360b(5): call 0xffffe435(%rip)
3610(7): mov 0x206c31(%rip),%rbx
3617(7): lea 0x3baa(%rip),%rsi
361e(5): mov $0x5,%edx
3623(2): xor %edi,%edi
3625(5): call 0xffffe33b(%rip)
362a(3): mov %rbx,%rsi
362d(3): mov %rax,%rdi
3630(5): call 0xffffe410(%rip)
3635(7): mov 0x206c0c(%rip),%rbx
363c(7): lea 0x3bd5(%rip),%rsi
3643(5): mov $0x5,%edx
3648(2): xor %edi,%edi
364a(5): call 0xffffe316(%rip)
364f(3): mov %rbx,%rsi
3652(3): mov %rax,%rdi
3655(5): call 0xffffe3eb(%rip)
365a(7): mov 0x206be7(%rip),%rbx
3661(7): lea 0x3c00(%rip),%rsi
3668(5): mov $0x5,%edx
366d(2): xor %edi,%edi
366f(5): call 0xffffe2f1(%rip)
3674(3): mov %rbx,%rsi
3677(3): mov %rax,%rdi
367a(5): call 0xffffe3c6(%rip)
367f(7): mov 0x206bc2(%rip),%rbx
3686(7): lea 0x3c2b(%rip),%rsi
368d(5): mov $0x5,%edx
3692(2): xor %edi,%edi
3694(5): call 0xffffe2cc(%rip)
3699(3): mov %rbx,%rsi
369c(3): mov %rax,%rdi
369f(5): call 0xffffe3a1(%rip)
36a4(7): mov 0x206b9d(%rip),%rbx
36ab(7): lea 0x3c36(%rip),%rsi
36b2(5): mov $0x5,%edx
36b7(2): xor %edi,%edi
36b9(5): call 0xffffe2a7(%rip)
36be(3): mov %rbx,%rsi
36c1(3): mov %rax,%rdi
36c4(5): call 0xffffe37c(%rip)
36c9(7): mov 0x206b78(%rip),%rbx
36d0(7): lea 0x3c49(%rip),%rsi
36d7(5): mov $0x5,%edx
36dc(2): xor %edi,%edi
36de(5): call 0xffffe282(%rip)
36e3(3): mov %rbx,%rsi
36e6(3): mov %rax,%rdi
36e9(5): call 0xffffe357(%rip)
36ee(7): mov 0x206b53(%rip),%rbx
36f5(7): lea 0x3c6c(%rip),%rsi
36fc(5): mov $0x5,%edx
3701(2): xor %edi,%edi
3703(5): call 0xffffe25d(%rip)
3708(3): mov %rbx,%rsi
370b(3): mov %rax,%rdi
370e(7): lea 0x347c(%rip),%rbx
3715(5): call 0xffffe32b(%rip)
371a(7): lea 0x3474(%rip),%rax
3721(7): lea 0x34ae(%rip),%rcx
3728(9): mov $0x0,0x60(%rsp)
3731(9): mov $0x0,0x68(%rsp)
373a(3): mov %rsp,%rdx
373d(4): mov %rax,(%rsp)
3741(7): lea 0x344f(%rip),%rax
3748(5): mov %rcx,0x30(%rsp)
374d(7): lea 0x348c(%rip),%rcx
3754(5): mov %rax,0x8(%rsp)
3759(7): lea 0x34af(%rip),%rax
3760(5): mov %rcx,0x40(%rsp)
3765(7): lea 0x347e(%rip),%rcx
376c(5): mov %rax,0x10(%rsp)
3771(7): lea 0x342f(%rip),%rax
3778(5): mov %rcx,0x50(%rsp)
377d(5): mov %rax,0x18(%rsp)
3782(7): lea 0x3434(%rip),%rax
3789(5): mov %rax,0x20(%rsp)
378e(7): lea 0x3432(%rip),%rax
3795(5): mov %rax,0x28(%rsp)
379a(5): mov %rax,0x38(%rsp)
379f(5): mov %rax,0x48(%rsp)
37a4(5): mov %rax,0x58(%rsp)
37a9(7): nop 0x0(%rax)
37b0(4): add $0x10,%rdx
37b4(3): mov (%rdx),%rdi
37b7(3): test %rdi,%rdi
37ba(2): jz 0x15(%rip)
37bc(5): mov $0x4,%ecx
37c1(3): mov %rbx,%rsi
37c4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
37c6(3): setnbe %al
37c9(2): sbb $0x0,%al
37cb(2): test %al,%al
37cd(2): jnz 0xffffffe3(%rip)
37cf(4): mov 0x8(%rdx),%r12
37d3(2): xor %edi,%edi
37d5(5): mov $0x5,%edx
37da(7): lea 0x3413(%rip),%rsi
37e1(3): test %r12,%r12
37e4(6): jz 0xc7(%rip)
37ea(5): call 0xffffe176(%rip)
37ef(7): lea 0x3c12(%rip),%rcx
37f6(7): lea 0x340e(%rip),%rdx
37fd(3): mov %rax,%rsi
3800(5): mov $0x1,%edi
3805(2): xor %eax,%eax
3807(5): call 0xffffe329(%rip)
380c(2): xor %esi,%esi
380e(5): mov $0x5,%edi
3813(5): call 0xffffe30d(%rip)
3818(3): test %rax,%rax
381b(2): jz 0x1e(%rip)
381d(7): lea 0x33f5(%rip),%rsi
3824(5): mov $0x3,%edx
3829(3): mov %rax,%rdi
382c(5): call 0xffffe0a4(%rip)
3831(2): test %eax,%eax
3833(6): jnz 0x10d(%rip)
3839(7): lea 0x33dd(%rip),%rsi
3840(2): xor %edi,%edi
3842(5): mov $0x5,%edx
3847(5): call 0xffffe119(%rip)
384c(7): lea 0x333e(%rip),%rcx
3853(7): lea 0x3bae(%rip),%rdx
385a(3): mov %rax,%rsi
385d(5): mov $0x1,%edi
3862(2): xor %eax,%eax
3864(5): call 0xffffe2cc(%rip)
3869(3): cmp %rbx,%r12
386c(7): lea 0x333e(%rip),%rcx
3873(7): lea 0x3437(%rip),%rbx
387a(4): cmove %rcx,%rbx
387e(7): lea 0x3bf3(%rip),%rsi
3885(2): xor %edi,%edi
3887(5): mov $0x5,%edx
388c(5): call 0xffffe0d4(%rip)
3891(3): mov %rbx,%rcx
3894(3): mov %rax,%rsi
3897(3): mov %r12,%rdx
389a(5): mov $0x1,%edi
389f(2): xor %eax,%eax
38a1(5): call 0xffffe28f(%rip)
38a6(5): jmp 0xfffffc40(%rip)
38ab(5): call 0xffffe0b5(%rip)
38b0(7): lea 0x3b51(%rip),%rcx
38b7(7): lea 0x334d(%rip),%rdx
38be(3): mov %rax,%rsi
38c1(5): mov $0x1,%edi
38c6(2): xor %eax,%eax
38c8(5): call 0xffffe268(%rip)
38cd(2): xor %esi,%esi
38cf(5): mov $0x5,%edi
38d4(5): call 0xffffe24c(%rip)
38d9(3): test %rax,%rax
38dc(2): jz 0x1a(%rip)
38de(7): lea 0x3334(%rip),%rsi
38e5(5): mov $0x3,%edx
38ea(3): mov %rax,%rdi
38ed(5): call 0xffffdfe3(%rip)
38f2(2): test %eax,%eax
38f4(2): jnz 0x45(%rip)
38f6(7): lea 0x3320(%rip),%rsi
38fd(5): mov $0x5,%edx
3902(2): xor %edi,%edi
3904(7): lea 0x3286(%rip),%r12
390b(7): lea 0x329f(%rip),%rbx
3912(5): call 0xffffe04e(%rip)
3917(7): lea 0x3273(%rip),%rcx
391e(7): lea 0x3ae3(%rip),%rdx
3925(3): mov %rax,%rsi
3928(5): mov $0x1,%edi
392d(2): xor %eax,%eax
392f(5): call 0xffffe201(%rip)
3934(5): jmp 0xffffff4a(%rip)
3939(7): lea 0x3251(%rip),%r12
3940(7): mov 0x206901(%rip),%r13
3947(7): lea 0x3ae2(%rip),%rsi
394e(2): xor %edi,%edi
3950(5): mov $0x5,%edx
3955(5): call 0xffffe00b(%rip)
395a(3): mov %r13,%rsi
395d(3): mov %rax,%rdi
3960(5): call 0xffffe0e0(%rip)
3965(5): jmp 0xfffffed4(%rip)

"parse_signal_action_params" :
3970(2): push %r14
3972(2): push %r13
3974(2): push %r12
3976(1): push %rbp
3977(1): push %rbx
3978(2): mov %esi,%ebx
397a(4): sub $0x20,%rsp
397e(9): mov $0x28,%rax
3987(5): mov %rax,0x18(%rsp)
398c(2): xor %eax,%eax
398e(3): test %rdi,%rdi
3991(6): jz 0xdf(%rip)
3997(5): call 0x2b69(%rip)
399c(7): lea 0x31d7(%rip),%rsi
39a3(3): mov %rax,%rdi
39a6(3): mov %rax,%r13
39a9(5): call 0xffffe1c7(%rip)
39ae(3): test %rax,%rax
39b1(3): mov %rax,%r14
39b4(6): jz 0x94(%rip)
39ba(3): cmp $0x1,%bl
39bd(3): mov %rsp,%r12
39c0(7): lea 0x31b3(%rip),%rbp
39c7(2): sbb %ebx,%ebx
39c9(3): and $0x2,%ebx
39cc(3): add $0x1,%ebx
39cf(2): jmp 0x29(%rip)
39d1(7): nop 0x0(%rax)
39d8(2): jle 0x5f(%rip)
39da(7): mov 0x2069df(%rip),%rdx
39e1(2): cwde 
39e3(2): xor %edi,%edi
39e5(3): mov %rbp,%rsi
39e8(3): mov %ebx,0x0(%rdx,%rax,4)
39eb(5): call 0xffffe185(%rip)
39f0(3): test %rax,%rax
39f3(3): mov %rax,%r14
39f6(2): jz 0x52(%rip)
39f8(3): mov %r12,%rsi
39fb(3): mov %r14,%rdi
39fe(5): call 0x2c2(%rip)
3a03(3): cmp $0x0,%eax
3a06(2): jnz 0xffffffd2(%rip)
3a08(3): mov %r14,%rdi
3a0b(5): call 0x2285(%rip)
3a10(7): lea 0x3221(%rip),%rsi
3a17(3): mov %rax,%rbx
3a1a(5): mov $0x5,%edx
3a1f(2): xor %edi,%edi
3a21(5): call 0xffffdf3f(%rip)
3a26(3): mov %rbx,%rcx
3a29(3): mov %rax,%rdx
3a2c(2): xor %esi,%esi
3a2e(2): xor %edi,%edi
3a30(2): xor %eax,%eax
3a32(5): call 0xffffe10e(%rip)
3a37(6): mov 0x2065db(%rip),%edi
3a3d(5): call 0xfffffa53(%rip)
3a42(6): nop 0x0(%rax,%rax,1)
3a48(5): mov 0x18(%rsp),%rax
3a4d(9): xor $0x28,%rax
3a56(2): jnz 0x7c(%rip)
3a58(4): add $0x20,%rsp
3a5c(3): mov %r13,%rdi
3a5f(1): pop %rbx
3a60(1): pop %rbp
3a61(2): pop %r12
3a63(2): pop %r13
3a65(2): pop %r14
3a67(5): jmp 0xffffde39(%rip)
3a6c(4): nop 0x0(%rax)
3a70(4): cmp $0x1,%sil
3a74(5): mov $0x4,%ebp
3a79(5): mov $0x1,%ebx
3a7e(3): sbb %r13d,%r13d
3a81(3): mov %rsp,%r12
3a84(4): and $0x2,%r13d
3a88(4): add $0x2,%r13d
3a8c(4): nop 0x0(%rax)
3a90(3): mov %r12,%rsi
3a93(2): mov %ebx,%edi
3a95(5): call 0x2ceb(%rip)
3a9a(2): test %eax,%eax
3a9c(2): jnz 0xd(%rip)
3a9e(7): mov 0x20691b(%rip),%rax
3aa5(4): mov %r13d,0x0(%rax,%rbp,1)
3aa9(3): add $0x1,%ebx
3aac(4): add $0x4,%rbp
3ab0(3): cmp $0x41,%ebx
3ab3(2): jnz 0xffffffdd(%rip)
3ab5(5): mov 0x18(%rsp),%rax
3aba(9): xor $0x28,%rax
3ac3(2): jnz 0xf(%rip)
3ac5(4): add $0x20,%rsp
3ac9(1): pop %rbx
3aca(1): pop %rbp
3acb(2): pop %r12
3acd(2): pop %r13
3acf(2): pop %r14
3ad1(1): ret near (%rsp)
3ad2(5): call 0xffffdece(%rip)

"parse_block_signal_params" :
3ae0(2): push %r15
3ae2(2): push %r14
3ae4(2): push %r13
3ae6(2): push %r12
3ae8(1): push %rbp
3ae9(1): push %rbx
3aea(2): mov %esi,%ebx
3aec(4): sub $0x38,%rsp
3af0(9): mov $0x28,%rax
3af9(5): mov %rax,0x28(%rsp)
3afe(2): xor %eax,%eax
3b00(3): test %rdi,%rdi
3b03(6): jz 0x155(%rip)
3b09(7): cmp $0x0,0x206799(%rip)
3b10(3): mov %rdi,%rbp
3b13(3): mov %esi,%r12d
3b16(6): jz 0x122(%rip)
3b1c(3): mov %rbp,%rdi
3b1f(7): mov $0x1,0x206783(%rip)
3b26(5): call 0x29da(%rip)
3b2b(7): lea 0x3048(%rip),%rsi
3b32(3): mov %rax,%rdi
3b35(5): mov %rax,0x8(%rsp)
3b3a(5): call 0xffffe036(%rip)
3b3f(3): test %rax,%rax
3b42(3): mov %rax,%r15
3b45(6): jz 0xc3(%rip)
3b4b(7): lea 0x2067ee(%rip),%r14
3b52(7): lea 0x206767(%rip),%rbp
3b59(2): test %bl,%bl
3b5b(5): lea 0x10(%rsp),%r13
3b60(4): cmove %r14,%rbp
3b64(2): jmp 0x36(%rip)
3b66(a): nop 0x0(%rax,%rax,1)
3b70(2): mov %eax,%esi
3b72(3): mov %r14,%rdi
3b75(5): call 0xffffe0bb(%rip)
3b7a(2): mov %ebx,%esi
3b7c(3): mov %rbp,%rdi
3b7f(5): call 0xffffdfe1(%rip)
3b84(7): lea 0x2fef(%rip),%rsi
3b8b(2): xor %edi,%edi
3b8d(5): call 0xffffdfe3(%rip)
3b92(3): test %rax,%rax
3b95(3): mov %rax,%r15
3b98(2): jz 0x70(%rip)
3b9a(3): mov %r13,%rsi
3b9d(3): mov %r15,%rdi
3ba0(5): call 0x120(%rip)
3ba5(3): cmp $0x0,%eax
3ba8(2): mov %eax,%ebx
3baa(2): jz 0x1e(%rip)
3bac(2): jle 0x4b(%rip)
3bae(3): test %r12b,%r12b
3bb1(2): jnz 0xffffffbf(%rip)
3bb3(7): lea 0x206706(%rip),%rdi
3bba(2): mov %eax,%esi
3bbc(5): call 0xffffe074(%rip)
3bc1(2): jmp 0xffffffb9(%rip)
3bc3(5): nop 0x0(%rax,%rax,1)
3bc8(3): mov %r15,%rdi
3bcb(5): call 0x20c5(%rip)
3bd0(7): lea 0x3061(%rip),%rsi
3bd7(3): mov %rax,%rbx
3bda(5): mov $0x5,%edx
3bdf(2): xor %edi,%edi
3be1(5): call 0xffffdd7f(%rip)
3be6(3): mov %rbx,%rcx
3be9(3): mov %rax,%rdx
3bec(2): xor %esi,%esi
3bee(2): xor %edi,%edi
3bf0(2): xor %eax,%eax
3bf2(5): call 0xffffdf4e(%rip)
3bf7(6): mov 0x20641b(%rip),%edi
3bfd(5): call 0xfffff893(%rip)
3c02(6): nop 0x0(%rax,%rax,1)
3c08(5): mov 0x28(%rsp),%rax
3c0d(9): xor $0x28,%rax
3c16(6): jnz 0x9f(%rip)
3c1c(5): mov 0x8(%rsp),%rdi
3c21(4): add $0x38,%rsp
3c25(1): pop %rbx
3c26(1): pop %rbp
3c27(2): pop %r12
3c29(2): pop %r13
3c2b(2): pop %r14
3c2d(2): pop %r15
3c2f(5): jmp 0xffffdc71(%rip)
3c34(4): nop 0x0(%rax)
3c38(7): lea 0x206701(%rip),%rdi
3c3f(5): call 0xffffde41(%rip)
3c44(7): lea 0x206675(%rip),%rdi
3c4b(5): call 0xffffde35(%rip)
3c50(5): jmp 0xfffffecc(%rip)
3c55(3): nop (%rax)
3c58(3): test %sil,%sil
3c5b(2): jz 0x45(%rip)
3c5d(7): lea 0x2066dc(%rip),%rdi
3c64(5): call 0xffffde3c(%rip)
3c69(7): lea 0x206650(%rip),%rdi
3c70(5): call 0xffffde10(%rip)
3c75(5): mov 0x28(%rsp),%rax
3c7a(9): xor $0x28,%rax
3c83(7): mov $0x1,0x20661f(%rip)
3c8a(2): jnz 0x2b(%rip)
3c8c(4): add $0x38,%rsp
3c90(1): pop %rbx
3c91(1): pop %rbp
3c92(2): pop %r12
3c94(2): pop %r13
3c96(2): pop %r14
3c98(2): pop %r15
3c9a(1): ret near (%rsp)
3c9b(5): nop 0x0(%rax,%rax,1)
3ca0(7): lea 0x206619(%rip),%rdi
3ca7(5): call 0xffffddf9(%rip)
3cac(7): lea 0x20668d(%rip),%rdi
3cb3(2): jmp 0xffffffbd(%rip)
3cb5(5): call 0xffffdceb(%rip)

"operand2sig" :
3cc0(2): push %r15
3cc2(2): push %r14
3cc4(3): mov %rsi,%r14
3cc7(2): push %r13
3cc9(2): push %r12
3ccb(1): push %rbp
3ccc(1): push %rbx
3ccd(3): mov %rdi,%rbp
3cd0(4): sub $0x28,%rsp
3cd4(9): mov $0x28,%rax
3cdd(5): mov %rax,0x18(%rsp)
3ce2(2): xor %eax,%eax
3ce4(3): movsx (%rdi),%eax
3ce7(3): sub $0x30,%eax
3cea(3): cmp $0x9,%eax
3ced(6): jnbe 0x93(%rip)
3cf3(5): call 0xffffdbcd(%rip)
3cf8(5): lea 0x10(%rsp),%rsi
3cfd(5): mov $0xa,%edx
3d02(6): mov $0x0,(%rax)
3d08(3): mov %rbp,%rdi
3d0b(3): mov %rax,%rbx
3d0e(5): call 0xffffdd82(%rip)
3d13(5): mov 0x10(%rsp),%rdx
3d18(3): cmp %rbp,%rdx
3d1b(2): jz 0x1d(%rip)
3d1d(3): cmp $0x0,(%rdx)
3d20(2): jnz 0x18(%rip)
3d22(2): mov (%rbx),%edx
3d24(2): test %edx,%edx
3d26(2): jnz 0x12(%rip)
3d28(3): movsxd %eax,%rdx
3d2b(3): cmp %rax,%rdx
3d2e(6): jz 0x142(%rip)
3d34(4): nop 0x0(%rax)
3d38(8): mov $0xffffffff,0xc(%rsp)
3d40(3): mov %rbp,%rdi
3d43(5): call 0x1f4d(%rip)
3d48(7): lea 0x2ee9(%rip),%rsi
3d4f(3): mov %rax,%rbx
3d52(5): mov $0x5,%edx
3d57(2): xor %edi,%edi
3d59(5): call 0xffffdc07(%rip)
3d5e(3): mov %rbx,%rcx
3d61(3): mov %rax,%rdx
3d64(2): xor %esi,%esi
3d66(2): xor %eax,%eax
3d68(2): xor %edi,%edi
3d6a(5): call 0xffffddd6(%rip)
3d6f(5): mov $0xffffffff,%eax
3d74(5): jmp 0x8c(%rip)
3d79(7): nop 0x0(%rax)
3d80(5): call 0x2780(%rip)
3d85(3): movzx (%rax),%ebx
3d88(3): mov %rax,%r13
3d8b(2): test %bl,%bl
3d8d(2): jz 0x35(%rip)
3d8f(7): lea 0x396f(%rip),%r12
3d96(3): mov %rax,%r15
3d99(7): nop 0x0(%rax)
3da0(3): movsx %bl,%esi
3da3(3): mov %r12,%rdi
3da6(5): call 0xffffdc2a(%rip)
3dab(3): test %rax,%rax
3dae(2): jz 0x8(%rip)
3db0(3): sub $0x20,%ebx
3db3(3): mov %bl,(%r15)
3db6(4): add $0x1,%r15
3dba(4): movzx (%r15),%ebx
3dbe(2): test %bl,%bl
3dc0(2): jnz 0xffffffe0(%rip)
3dc2(5): lea 0xc(%rsp),%rbx
3dc7(3): mov %r13,%rdi
3dca(3): mov %rbx,%rsi
3dcd(5): call 0x2823(%rip)
3dd2(2): test %eax,%eax
3dd4(2): jnz 0x54(%rip)
3dd6(4): mov 0xc(%rsp),%ebx
3dda(3): mov %r13,%rdi
3ddd(5): call 0xffffdac3(%rip)
3de2(2): test %ebx,%ebx
3de4(6): js 0xffffff5c(%rip)
3dea(3): mov %r14,%rsi
3ded(2): mov %ebx,%edi
3def(5): call 0x2991(%rip)
3df4(2): test %eax,%eax
3df6(6): jnz 0xffffff4a(%rip)
3dfc(4): mov 0xc(%rsp),%eax
3e00(5): mov 0x18(%rsp),%rcx
3e05(9): xor $0x28,%rcx
3e0e(6): jnz 0x8e(%rip)
3e14(4): add $0x28,%rsp
3e18(1): pop %rbx
3e19(1): pop %rbp
3e1a(2): pop %r12
3e1c(2): pop %r13
3e1e(2): pop %r14
3e20(2): pop %r15
3e22(1): ret near (%rsp)
3e23(5): nop 0x0(%rax,%rax,1)
3e28(5): cmp $0x53,0x0(%r13)
3e2d(2): jz 0x1b(%rip)
3e2f(3): mov %r13,%rdi
3e32(8): mov $0xffffffff,0xc(%rsp)
3e3a(5): call 0xffffda66(%rip)
3e3f(5): jmp 0xffffff01(%rip)
3e44(4): nop 0x0(%rax)
3e48(5): cmp $0x49,0x1(%r13)
3e4d(2): jnz 0xffffffe2(%rip)
3e4f(5): cmp $0x47,0x2(%r13)
3e54(2): jnz 0xffffffdb(%rip)
3e56(4): lea 0x3(%r13),%rdi
3e5a(3): mov %rbx,%rsi
3e5d(5): call 0x2793(%rip)
3e62(2): test %eax,%eax
3e64(2): jnz 0xffffffcb(%rip)
3e66(5): jmp 0xffffff70(%rip)
3e6b(5): nop 0x0(%rax,%rax,1)
3e70(3): cmp $0xff,%edx
3e73(2): jz 0x20(%rip)
3e75(6): cmp $0xff,%edx
3e7b(5): mov $0x7f,%eax
3e80(5): mov $0xff,%ebx
3e85(3): cmovnge %eax,%ebx
3e88(2): and %edx,%ebx
3e8a(4): mov %ebx,0xc(%rsp)
3e8e(5): jmp 0xffffff5c(%rip)
3e93(4): mov %edx,0xc(%rsp)
3e97(5): jmp 0xfffffea9(%rip)
3e9c(5): call 0xffffdb04(%rip)

"close_stdout_set_file_name" :
3eb0(7): mov %rdi,0x206549(%rip)
3eb7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3ec0(7): mov %dil,0x206531(%rip)
3ec7(1): ret near (%rsp)

"close_stdout" :
3ed0(1): push %rbp
3ed1(1): push %rbx
3ed2(4): sub $0x8,%rsp
3ed6(7): mov 0x20636b(%rip),%rdi
3edd(5): call 0x2983(%rip)
3ee2(2): test %eax,%eax
3ee4(2): jz 0x18(%rip)
3ee6(5): call 0xffffd9da(%rip)
3eeb(7): cmp $0x0,0x206506(%rip)
3ef2(3): mov %rax,%rbx
3ef5(2): jz 0x1e(%rip)
3ef7(3): cmp $0x20,(%rax)
3efa(2): jnz 0x19(%rip)
3efc(7): mov 0x20637d(%rip),%rdi
3f03(5): call 0x295d(%rip)
3f08(2): test %eax,%eax
3f0a(2): jnz 0x48(%rip)
3f0c(4): add $0x8,%rsp
3f10(1): pop %rbx
3f11(1): pop %rbp
3f12(1): ret near (%rsp)
3f13(7): lea 0x380b(%rip),%rsi
3f1a(2): xor %edi,%edi
3f1c(5): mov $0x5,%edx
3f21(5): call 0xffffda3f(%rip)
3f26(7): mov 0x2064d3(%rip),%rdi
3f2d(3): mov %rax,%rbp
3f30(3): test %rdi,%rdi
3f33(2): jz 0x2a(%rip)
3f35(5): call 0x1b5b(%rip)
3f3a(2): mov (%rbx),%esi
3f3c(7): lea 0x37ee(%rip),%rdx
3f43(3): mov %rax,%rcx
3f46(3): mov %rbp,%r8
3f49(2): xor %edi,%edi
3f4b(2): xor %eax,%eax
3f4d(5): call 0xffffdbf3(%rip)
3f52(6): mov 0x2060c0(%rip),%edi
3f58(5): call 0xffffd988(%rip)
3f5d(2): mov (%rbx),%esi
3f5f(7): lea 0x37cf(%rip),%rdx
3f66(3): mov %rax,%rcx
3f69(2): xor %edi,%edi
3f6b(2): xor %eax,%eax
3f6d(5): call 0xffffdbd3(%rip)
3f72(2): jmp 0xffffffe0(%rip)

"set_program_name" :
3f80(3): test %rdi,%rdi
3f83(1): push %rbx
3f84(2): jz 0x79(%rip)
3f86(5): mov $0x2f,%esi
3f8b(3): mov %rdi,%rbx
3f8e(5): call 0xffffda52(%rip)
3f93(3): test %rax,%rax
3f96(2): jz 0x57(%rip)
3f98(4): lea 0x1(%rax),%r8
3f9c(3): mov %r8,%rdx
3f9f(3): sub %rbx,%rdx
3fa2(4): cmp $0x6,%rdx
3fa6(2): jle 0x47(%rip)
3fa8(4): lea 0xfffffffa(%rax),%rsi
3fac(7): lea 0x37bd(%rip),%rdi
3fb3(5): mov $0x7,%ecx
3fb8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3fba(3): setnbe %dl
3fbd(3): sbb $0x0,%dl
3fc0(2): test %dl,%dl
3fc2(2): jnz 0x2b(%rip)
3fc4(7): lea 0x37ad(%rip),%rdi
3fcb(5): mov $0x3,%ecx
3fd0(3): mov %r8,%rsi
3fd3(3): mov %r8,%rbx
3fd6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3fd8(3): setnbe %dl
3fdb(3): sbb $0x0,%dl
3fde(2): test %dl,%dl
3fe0(2): jnz 0xd(%rip)
3fe2(4): lea 0x4(%rax),%rbx
3fe6(7): mov %rbx,0x206253(%rip)
3fed(7): mov %rbx,0x206414(%rip)
3ff4(7): mov %rbx,0x20626d(%rip)
3ffb(1): pop %rbx
3ffc(1): ret near (%rsp)
3ffd(7): mov 0x20627c(%rip),%rcx
4004(7): lea 0x372d(%rip),%rdi
400b(5): mov $0x37,%edx
4010(5): mov $0x1,%esi
4015(5): call 0xffffdbcb(%rip)
401a(5): call 0xffffd896(%rip)

"gettext_quote.part.1" :
4020(1): push %rbp
4021(1): push %rbx
4022(3): mov %rdi,%rbp
4025(2): mov %esi,%ebx
4027(4): sub $0x8,%rsp
402b(5): call 0x2915(%rip)
4030(3): movzx (%rax),%edx
4033(3): and $0xdf,%edx
4036(3): cmp $0x55,%dl
4039(2): jz 0x77(%rip)
403b(3): cmp $0x47,%dl
403e(2): jz 0x22(%rip)
4040(7): lea 0x3744(%rip),%rax
4047(7): lea 0x2b23(%rip),%rdx
404e(3): cmp $0x9,%ebx
4051(4): cmovne %rdx,%rax
4055(4): add $0x8,%rsp
4059(1): pop %rbx
405a(1): pop %rbp
405b(1): ret near (%rsp)
405c(4): nop 0x0(%rax)
4060(4): movzx 0x1(%rax),%edx
4064(3): and $0xdf,%edx
4067(3): cmp $0x42,%dl
406a(2): jnz 0xffffffd6(%rip)
406c(4): cmp $0x31,0x2(%rax)
4070(2): jnz 0xffffffd0(%rip)
4072(4): cmp $0x38,0x3(%rax)
4076(2): jnz 0xffffffca(%rip)
4078(4): cmp $0x30,0x4(%rax)
407c(2): jnz 0xffffffc4(%rip)
407e(4): cmp $0x33,0x5(%rax)
4082(2): jnz 0xffffffbe(%rip)
4084(4): cmp $0x30,0x6(%rax)
4088(2): jnz 0xffffffb8(%rip)
408a(4): cmp $0x0,0x7(%rax)
408e(2): jnz 0xffffffb2(%rip)
4090(4): cmp $0x60,0x0(%rbp)
4094(7): lea 0x36e9(%rip),%rax
409b(7): lea 0x36e6(%rip),%rdx
40a2(4): cmovne %rdx,%rax
40a6(4): add $0x8,%rsp
40aa(1): pop %rbx
40ab(1): pop %rbp
40ac(1): ret near (%rsp)
40ad(3): nop (%rax)
40b0(4): movzx 0x1(%rax),%edx
40b4(3): and $0xdf,%edx
40b7(3): cmp $0x54,%dl
40ba(2): jnz 0xffffff86(%rip)
40bc(4): movzx 0x2(%rax),%edx
40c0(3): and $0xdf,%edx
40c3(3): cmp $0x46,%dl
40c6(6): jnz 0xffffff7a(%rip)
40cc(4): cmp $0x2d,0x3(%rax)
40d0(6): jnz 0xffffff70(%rip)
40d6(4): cmp $0x38,0x4(%rax)
40da(6): jnz 0xffffff66(%rip)
40e0(4): cmp $0x0,0x5(%rax)
40e4(6): jnz 0xffffff5c(%rip)
40ea(4): cmp $0x60,0x0(%rbp)
40ee(7): lea 0x3687(%rip),%rax
40f5(7): lea 0x3684(%rip),%rdx
40fc(4): cmovne %rdx,%rax
4100(4): add $0x8,%rsp
4104(1): pop %rbx
4105(1): pop %rbp
4106(1): ret near (%rsp)

"quotearg_buffer_restyled" :
4110(2): push %r15
4112(2): push %r14
4114(3): mov %r8d,%r15d
4117(2): push %r13
4119(2): push %r12
411b(3): mov %rdi,%r14
411e(1): push %rbp
411f(1): push %rbx
4120(3): mov %r9d,%ebx
4123(3): mov %rsi,%r13
4126(3): mov %rcx,%rbp
4129(3): and $0x2,%ebx
412c(7): sub $0xb8,%rsp
4133(8): mov 0xf0(%rsp),%rax
413b(5): mov %rdx,0x10(%rsp)
4140(5): mov %r8d,0x8(%rsp)
4145(5): mov %r9d,0x78(%rsp)
414a(5): mov %rax,0x20(%rsp)
414f(8): mov 0xf8(%rsp),%rax
4157(5): mov %rax,0x68(%rsp)
415c(8): mov 0x100(%rsp),%rax
4164(5): mov %rax,0x60(%rsp)
4169(9): mov $0x28,%rax
4172(8): mov %rax,0xa8(%rsp)
417a(2): xor %eax,%eax
417c(5): call 0xffffd7f4(%rip)
4181(4): cmp $0xa,%r15d
4185(5): mov %rax,0x58(%rsp)
418a(6): jnbe 0x11b5(%rip)
4190(7): lea 0x3649(%rip),%rcx
4197(3): mov %r15d,%edx
419a(4): movsxd 0x0(%rcx,%rdx,4),%rax
419e(3): add %rcx,%rax
41a1(2): jmp %rax
41a3(5): mov $0x1,0xe(%rsp)
41a8(5): mov $0x0,0x7c(%rsp)
41ad(3): xor %r12d,%r12d
41b0(9): mov $0x0,0x50(%rsp)
41b9(5): mov $0x1,0xf(%rsp)
41be(5): mov $0x0,0xd(%rsp)
41c3(7): lea 0x29a7(%rip),%rax
41ca(9): mov $0x1,0x18(%rsp)
41d3(3): xor %r15d,%r15d
41d6(8): mov $0x2,0x8(%rsp)
41de(5): mov %rax,0x48(%rsp)
41e3(3): xor %r11d,%r11d
41e6(3): mov %rbp,%rax
41e9(3): mov %r12d,%r8d
41ec(3): mov %r11,%rbp
41ef(3): mov %rax,%r11
41f2(6): nop 0x0(%rax,%rax,1)
41f8(3): cmp %rbp,%r11
41fb(4): setnz %r12b
41ff(4): cmp $0xffffffff,%r11
4203(2): jnz 0xf(%rip)
4205(5): mov 0x10(%rsp),%rax
420a(4): cmp $0x0,0x0(%rax,%rbp,1)
420e(4): setnz %r12b
4212(3): test %r12b,%r12b
4215(6): jz 0x65b(%rip)
421b(5): cmp $0x2,0x8(%rsp)
4220(5): mov 0x10(%rsp),%rdi
4225(4): lea 0x0(%rdi,%rbp,1),%r9
4229(3): setnz %al
422c(4): and 0xd(%rsp),%al
4230(3): mov %eax,%r10d
4233(6): jz 0xad(%rip)
4239(5): mov 0x18(%rsp),%rax
423e(3): test %rax,%rax
4241(6): jz 0x42f(%rip)
4247(4): cmp $0xffffffff,%r11
424b(5): lea 0x0(%rbp,%rax,1),%rbx
4250(2): jnz 0x30(%rip)
4252(4): cmp $0x1,%rax
4256(2): jbe 0x2a(%rip)
4258(5): mov %r8b,0x38(%rsp)
425d(5): mov %r10b,0x30(%rsp)
4262(5): mov %r9,0x28(%rsp)
4267(5): call 0xffffd719(%rip)
426c(6): movzx 0x38(%rsp),%r8d
4272(6): movzx 0x30(%rsp),%r10d
4278(3): mov %rax,%r11
427b(5): mov 0x28(%rsp),%r9
4280(3): cmp %r11,%rbx
4283(5): mov %r10b,0x28(%rsp)
4288(6): jnbe 0x5b8(%rip)
428e(5): mov 0x18(%rsp),%rdx
4293(5): mov 0x48(%rsp),%rsi
4298(3): mov %r9,%rdi
429b(5): mov %r11,0x40(%rsp)
42a0(5): mov %r8b,0x38(%rsp)
42a5(5): mov %r9,0x30(%rsp)
42aa(5): call 0xffffd786(%rip)
42af(2): test %eax,%eax
42b1(5): mov 0x30(%rsp),%r9
42b6(6): movzx 0x38(%rsp),%r8d
42bc(5): mov 0x40(%rsp),%r11
42c1(6): jnz 0x57f(%rip)
42c7(5): cmp $0x0,0xf(%rsp)
42cc(6): movzx 0x28(%rsp),%r10d
42d2(6): jnz 0xf83(%rip)
42d8(8): nop 0x0(%rax,%rax,1)
42e0(4): movzx (%r9),%ebx
42e4(3): cmp $0x7e,%bl
42e7(6): jnbe 0x321(%rip)
42ed(7): lea 0x3518(%rip),%rcx
42f4(3): movzx %bl,%edx
42f7(4): movsxd 0x0(%rcx,%rdx,4),%rax
42fb(3): add %rcx,%rax
42fe(2): jmp %rax
4300(3): xor %r10d,%r10d
4303(4): cmp $0x1,%r11
4307(3): setnz %al
430a(4): cmp $0xffffffff,%r11
430e(2): jnz 0xe(%rip)
4310(5): mov 0x10(%rsp),%rax
4315(4): cmp $0x0,0x1(%rax)
4319(3): setnz %al
431c(5): cmp $0x2,0x8(%rsp)
4321(3): setz %dl
4324(2): test %al,%al
4326(6): jz 0x252(%rip)
432c(3): xor %r12d,%r12d
432f(2): xor %eax,%eax
4331(7): nop 0x0(%rax)
4338(5): cmp $0x1,0xd(%rsp)
433d(6): jnz 0x115(%rip)
4343(2): test %dl,%dl
4345(6): jnz 0x10d(%rip)
434b(5): mov 0x20(%rsp),%rsi
4350(3): test %rsi,%rsi
4353(2): jz 0x16(%rip)
4355(2): mov %ebx,%edx
4357(3): shr $0x5,%dl
435a(3): movzx %dl,%edx
435d(3): mov 0x0(%rsi,%rdx,4),%edx
4360(3): bt %ebx,%edx
4363(6): jb 0x150(%rip)
4369(3): test %r10b,%r10b
436c(6): jnz 0x147(%rip)
4372(3): xor $0x1,%eax
4375(4): add $0x1,%rbp
4379(3): and %r8d,%eax
437c(2): test %al,%al
437e(2): jz 0x22(%rip)
4380(3): cmp %r15,%r13
4383(2): jbe 0x7(%rip)
4385(5): mov $0x27,0x0(%r14,%r15,1)
438a(4): lea 0x1(%r15),%rax
438e(3): cmp %rax,%r13
4391(2): jbe 0x8(%rip)
4393(6): mov $0x27,0x1(%r14,%r15,1)
4399(4): add $0x2,%r15
439d(3): xor %r8d,%r8d
43a0(3): cmp %r13,%r15
43a3(2): jnb 0x6(%rip)
43a5(4): mov %bl,0x0(%r14,%r15,1)
43a9(5): movzx 0xe(%rsp),%edi
43ae(4): add $0x1,%r15
43b2(5): mov $0x0,%eax
43b7(3): test %r12b,%r12b
43ba(3): cmove %eax,%edi
43bd(5): mov %dil,0xe(%rsp)
43c2(5): jmp 0xfffffe36(%rip)
43c7(9): nop 0x0(%rax,%rax,1)
43d0(3): xor %r10d,%r10d
43d3(4): mov 0x8(%rsp),%eax
43d7(3): cmp $0x2,%eax
43da(6): jz 0x5be(%rip)
43e0(3): cmp $0x5,%eax
43e3(6): jz 0x575(%rip)
43e9(3): cmp $0x2,%eax
43ec(5): mov $0x3f,%ebx
43f1(3): setz %dl
43f4(3): xor %r12d,%r12d
43f7(2): xor %eax,%eax
43f9(5): jmp 0xffffff3f(%rip)
43fe(2): nop 
4400(3): xor %r10d,%r10d
4403(5): cmp $0x2,0x8(%rsp)
4408(6): jz 0x508(%rip)
440e(5): mov %r12b,0x7c(%rsp)
4413(2): xor %edx,%edx
4415(2): xor %eax,%eax
4417(5): mov $0x27,%ebx
441c(5): jmp 0xffffff1c(%rip)
4421(7): nop 0x0(%rax)
4428(5): mov $0x9,%edx
442d(5): mov $0x74,%ebx
4432(5): cmp $0x2,0x8(%rsp)
4437(3): setz %al
443a(4): and 0xf(%rsp),%al
443e(6): jnz 0x150(%rip)
4444(5): cmp $0x0,0xd(%rsp)
4449(2): jnz 0x67(%rip)
444b(2): mov %edx,%ebx
444d(3): xor %r12d,%r12d
4450(2): xor %eax,%eax
4452(5): cmp $0x0,0xf(%rsp)
4457(6): jnz 0xfffffef4(%rip)
445d(5): jmp 0xffffff0c(%rip)
4462(6): nop 0x0(%rax,%rax,1)
4468(5): mov $0x8,%edx
446d(5): mov $0x62,%ebx
4472(2): jmp 0xffffffd2(%rip)
4474(4): nop 0x0(%rax)
4478(5): cmp $0x2,0x8(%rsp)
447d(6): jz 0x3d3(%rip)
4483(5): cmp $0x0,0xd(%rsp)
4488(6): jz 0x218(%rip)
448e(5): cmp $0x0,0xf(%rsp)
4493(6): jz 0x20d(%rip)
4499(6): cmp $0x0,0x18(%rsp)
449f(6): jnz 0x3bc(%rip)
44a5(5): mov $0x5c,%ebx
44aa(6): nop 0x0(%rax,%rax,1)
44b0(3): xor %r12d,%r12d
44b3(5): cmp $0x2,0x8(%rsp)
44b8(3): setz %dl
44bb(5): cmp $0x0,0xf(%rsp)
44c0(2): mov %edx,%eax
44c2(6): jnz 0x856(%rip)
44c8(3): mov %r8d,%eax
44cb(3): xor $0x1,%eax
44ce(2): and %dl,%al
44d0(2): jz 0x31(%rip)
44d2(3): cmp %r15,%r13
44d5(2): jbe 0x7(%rip)
44d7(5): mov $0x27,0x0(%r14,%r15,1)
44dc(4): lea 0x1(%r15),%rdx
44e0(3): cmp %rdx,%r13
44e3(2): jbe 0x8(%rip)
44e5(6): mov $0x24,0x1(%r14,%r15,1)
44eb(4): lea 0x2(%r15),%rdx
44ef(3): cmp %rdx,%r13
44f2(2): jbe 0x8(%rip)
44f4(6): mov $0x27,0x2(%r14,%r15,1)
44fa(4): add $0x3,%r15
44fe(3): mov %eax,%r8d
4501(3): cmp %r15,%r13
4504(2): jbe 0x7(%rip)
4506(5): mov $0x5c,0x0(%r14,%r15,1)
450b(4): add $0x1,%r15
450f(4): add $0x1,%rbp
4513(5): jmp 0xfffffe8d(%rip)
4518(8): nop 0x0(%rax,%rax,1)
4520(5): cmp $0x0,0xd(%rsp)
4525(6): jnz 0x1ce(%rip)
452b(2): xor %edx,%edx
452d(5): test $0x1,0x78(%rsp)
4532(6): jz 0xffffff19(%rip)
4538(4): add $0x1,%rbp
453c(5): jmp 0xfffffcbc(%rip)
4541(7): nop 0x0(%rax)
4548(5): cmp $0x2,0x8(%rsp)
454d(3): setz %dl
4550(2): xor %eax,%eax
4552(5): jmp 0xfffffde6(%rip)
4557(9): nop 0x0(%rax,%rax,1)
4560(5): mov $0x7,%edx
4565(5): mov $0x61,%ebx
456a(5): jmp 0xfffffeda(%rip)
456f(1): nop 
4570(5): cmp $0x2,0x8(%rsp)
4575(3): setz %dl
4578(3): test %rbp,%rbp
457b(6): jnz 0xfffffdb1(%rip)
4581(5): movzx 0xf(%rsp),%eax
4586(2): and %dl,%al
4588(6): jz 0xfffffdb0(%rip)
458e(3): mov %r11,%rbp
4591(8): mov $0x2,0x8(%rsp)
4599(5): jmp 0x700(%rip)
459e(2): nop 
45a0(5): cmp $0x2,0x8(%rsp)
45a5(3): setz %dl
45a8(3): xor %r12d,%r12d
45ab(2): jmp 0xffffffd6(%rip)
45ad(3): nop (%rax)
45b0(5): cmp $0x2,0x8(%rsp)
45b5(5): mov $0x20,%ebx
45ba(3): setz %dl
45bd(2): jmp 0xffffffc4(%rip)
45bf(1): nop 
45c0(5): mov $0xd,%edx
45c5(5): mov $0x72,%ebx
45ca(5): jmp 0xfffffe68(%rip)
45cf(1): nop 
45d0(5): mov $0xc,%edx
45d5(5): mov $0x66,%ebx
45da(5): jmp 0xfffffe6a(%rip)
45df(1): nop 
45e0(5): mov $0xb,%edx
45e5(5): mov $0x76,%ebx
45ea(5): jmp 0xfffffe5a(%rip)
45ef(1): nop 
45f0(5): mov $0xa,%edx
45f5(5): mov $0x6e,%ebx
45fa(5): jmp 0xfffffe38(%rip)
45ff(1): nop 
4600(3): xor %r10d,%r10d
4603(5): nop 0x0(%rax,%rax,1)
4608(6): cmp $0x1,0x58(%rsp)
460e(6): jnz 0x3aa(%rip)
4614(5): mov %r11,0x38(%rsp)
4619(5): mov %r8b,0x30(%rsp)
461e(5): mov %r10b,0x28(%rsp)
4623(5): call 0xffffd61d(%rip)
4628(3): mov (%rax),%rcx
462b(3): movzx %bl,%edx
462e(6): movzx 0x28(%rsp),%r10d
4634(6): movzx 0x30(%rsp),%r8d
463a(5): mov 0x38(%rsp),%r11
463f(5): mov $0x1,%edi
4644(4): movzx 0x0(%rcx,%rdx,2),%eax
4648(4): and $0x4000,%ax
464c(4): setnz %r12b
4650(3): setz %al
4653(4): and 0xd(%rsp),%al
4657(2): test %al,%al
4659(6): jnz 0x998(%rip)
465f(5): cmp $0x2,0x8(%rsp)
4664(3): setz %dl
4667(5): jmp 0xfffffcd1(%rip)
466c(4): nop 0x0(%rax)
4670(4): movzx (%r9),%ebx
4674(3): cmp $0x7e,%bl
4677(2): jnbe 0xffffff89(%rip)
4679(7): lea 0x3388(%rip),%rcx
4680(3): movzx %bl,%edx
4683(4): movsxd 0x0(%rcx,%rdx,4),%rax
4687(3): add %rcx,%rax
468a(2): jmp %rax
468c(4): nop 0x0(%rax)
4690(3): xor %r10d,%r10d
4693(5): cmp $0x0,0xd(%rsp)
4698(6): jnz 0xfffffdf6(%rip)
469e(2): nop 
46a0(5): mov $0x5c,%edx
46a5(5): mov $0x5c,%ebx
46aa(5): jmp 0xfffffd9a(%rip)
46af(1): nop 
46b0(5): mov $0xc,%edx
46b5(3): xor %r10d,%r10d
46b8(5): mov $0x66,%ebx
46bd(5): jmp 0xfffffd87(%rip)
46c2(6): nop 0x0(%rax,%rax,1)
46c8(5): mov $0xa,%edx
46cd(3): xor %r10d,%r10d
46d0(5): mov $0x6e,%ebx
46d5(5): jmp 0xfffffd5d(%rip)
46da(6): nop 0x0(%rax,%rax,1)
46e0(5): mov $0x61,%ebx
46e5(5): jmp 0xfffffdcb(%rip)
46ea(6): nop 0x0(%rax,%rax,1)
46f0(3): xor %r10d,%r10d
46f3(5): cmp $0x2,0x8(%rsp)
46f8(3): setz %dl
46fb(5): cmp $0x0,0xf(%rsp)
4700(6): jnz 0xb9a(%rip)
4706(3): mov %r8d,%eax
4709(3): mov %r15,%rcx
470c(3): xor $0x1,%eax
470f(2): and %dl,%al
4711(2): jz 0x2f(%rip)
4713(3): cmp %r15,%r13
4716(2): jbe 0x7(%rip)
4718(5): mov $0x27,0x0(%r14,%r15,1)
471d(4): lea 0x1(%r15),%rcx
4721(3): cmp %rcx,%r13
4724(2): jbe 0x8(%rip)
4726(6): mov $0x24,0x1(%r14,%r15,1)
472c(4): lea 0x2(%r15),%rcx
4730(3): cmp %rcx,%r13
4733(6): jnbe 0x636(%rip)
4739(4): lea 0x3(%r15),%rcx
473d(3): mov %eax,%r8d
4740(3): cmp %rcx,%r13
4743(2): jbe 0x7(%rip)
4745(5): mov $0x5c,0x0(%r14,%rcx,1)
474a(5): cmp $0x2,0x8(%rsp)
474f(4): lea 0x1(%rcx),%r15
4753(6): jz 0x606(%rip)
4759(4): lea 0x1(%rbp),%rax
475d(3): cmp %r11,%rax
4760(2): jnb 0x1b(%rip)
4762(5): mov 0x10(%rsp),%rax
4767(5): movzx 0x1(%rax,%rbp,1),%eax
476c(4): mov %al,0x28(%rsp)
4770(3): sub $0x30,%eax
4773(2): cmp $0x9,%al
4775(6): jbe 0x834(%rip)
477b(3): mov %r12d,%eax
477e(5): mov $0x30,%ebx
4783(3): xor %r12d,%r12d
4786(5): jmp 0xfffffbb2(%rip)
478b(5): nop 0x0(%rax,%rax,1)
4790(5): cmp $0x2,0x8(%rsp)
4795(3): mov %r10d,%r12d
4798(3): setz %dl
479b(3): xor %r10d,%r10d
479e(2): xor %eax,%eax
47a0(5): jmp 0xfffffb98(%rip)
47a5(3): nop (%rax)
47a8(5): cmp $0x2,0x8(%rsp)
47ad(3): setz %dl
47b0(3): xor %r10d,%r10d
47b3(5): jmp 0xfffffdc5(%rip)
47b8(8): nop 0x0(%rax,%rax,1)
47c0(5): cmp $0x2,0x8(%rsp)
47c5(3): setz %dl
47c8(3): xor %r10d,%r10d
47cb(3): xor %r12d,%r12d
47ce(5): jmp 0xfffffdb3(%rip)
47d3(5): nop 0x0(%rax,%rax,1)
47d8(5): cmp $0x2,0x8(%rsp)
47dd(3): mov %r10d,%r12d
47e0(5): mov $0x20,%ebx
47e5(3): setz %dl
47e8(3): xor %r10d,%r10d
47eb(5): jmp 0xfffffd96(%rip)
47f0(5): mov $0xd,%edx
47f5(3): xor %r10d,%r10d
47f8(5): mov $0x72,%ebx
47fd(5): jmp 0xfffffc35(%rip)
4802(6): nop 0x0(%rax,%rax,1)
4808(5): mov $0x76,%ebx
480d(5): jmp 0xfffffca3(%rip)
4812(6): nop 0x0(%rax,%rax,1)
4818(5): mov $0x9,%edx
481d(3): xor %r10d,%r10d
4820(5): mov $0x74,%ebx
4825(5): jmp 0xfffffc0d(%rip)
482a(6): nop 0x0(%rax,%rax,1)
4830(5): mov $0x62,%ebx
4835(5): jmp 0xfffffc7b(%rip)
483a(6): nop 0x0(%rax,%rax,1)
4840(3): xor %r10d,%r10d
4843(5): jmp 0xfffffa9d(%rip)
4848(8): nop 0x0(%rax,%rax,1)
4850(5): cmp $0x0,0xf(%rsp)
4855(6): jnz 0x96b(%rip)
485b(4): add $0x1,%rbp
485f(3): mov %r8d,%eax
4862(3): xor %r12d,%r12d
4865(5): mov $0x5c,%ebx
486a(5): jmp 0xfffffb12(%rip)
486f(1): nop 
4870(5): cmp $0x2,0x8(%rsp)
4875(5): movzx 0xf(%rsp),%ebx
487a(3): mov %r8d,%r12d
487d(3): mov %r11,%rbp
4880(3): setz %dl
4883(2): mov %ebx,%eax
4885(3): test %r15,%r15
4888(3): setz %cl
488b(2): and %edx,%eax
488d(2): and %cl,%al
488f(6): jnz 0xa67(%rip)
4895(2): mov %ebx,%eax
4897(3): xor $0x1,%eax
489a(2): and %al,%dl
489c(6): jz 0x970(%rip)
48a2(5): cmp $0x0,0x7c(%rsp)
48a7(6): jz 0x963(%rip)
48ad(5): cmp $0x0,0xe(%rsp)
48b2(6): jnz 0x9fb(%rip)
48b8(3): test %r13,%r13
48bb(3): setz %al
48be(6): cmp $0x0,0x50(%rsp)
48c4(3): setnz %dl
48c7(2): and %dl,%al
48c9(6): jz 0xa23(%rip)
48cf(5): mov 0x50(%rsp),%r13
48d4(7): lea 0x2296(%rip),%rbx
48db(4): mov $0x27,(%r14)
48df(8): mov $0x2,0x8(%rsp)
48e7(6): mov $0x1,%r15d
48ed(9): mov $0x1,0x18(%rsp)
48f6(5): mov $0x0,0xf(%rsp)
48fb(5): mov %rbx,0x48(%rsp)
4900(4): mov %al,0x7c(%rsp)
4904(5): jmp 0xfffff8df(%rip)
4909(7): nop 0x0(%rax)
4910(5): cmp $0x0,0xf(%rsp)
4915(6): jnz 0x8ab(%rip)
491b(3): test %r13,%r13
491e(6): jz 0x402(%rip)
4924(2): xor %edx,%edx
4926(6): cmp $0x0,0x50(%rsp)
492c(6): jnz 0x3f4(%rip)
4932(5): mov %r13,0x50(%rsp)
4937(4): add $0x3,%r15
493b(2): xor %eax,%eax
493d(5): mov %r12b,0x7c(%rsp)
4942(3): xor %r8d,%r8d
4945(3): mov %rdx,%r13
4948(5): mov $0x27,%ebx
494d(5): jmp 0xfffffa1c(%rip)
4952(6): nop 0x0(%rax,%rax,1)
4958(5): test $0x4,0x78(%rsp)
495d(2): jz 0x23(%rip)
495f(4): lea 0x2(%rbp),%rcx
4963(3): cmp %r11,%rcx
4966(2): jnb 0x1a(%rip)
4968(5): mov 0x10(%rsp),%rax
496d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4972(6): jz 0x790(%rip)
4978(8): nop 0x0(%rax,%rax,1)
4980(2): xor %edx,%edx
4982(3): xor %r12d,%r12d
4985(2): xor %eax,%eax
4987(5): mov $0x3f,%ebx
498c(5): jmp 0xfffff9ac(%rip)
4991(7): nop 0x0(%rax)
4998(5): cmp $0x0,0xf(%rsp)
499d(6): jnz 0x823(%rip)
49a3(3): xor %r12d,%r12d
49a6(2): xor %eax,%eax
49a8(5): mov $0x3f,%ebx
49ad(5): jmp 0xfffff9bc(%rip)
49b2(6): nop 0x0(%rax,%rax,1)
49b8(8): lea 0xa0(%rsp),%rax
49c0(4): cmp $0xffffffff,%r11
49c4(c): mov $0x0,0xa0(%rsp)
49d0(5): mov %rax,0x28(%rsp)
49d5(2): jnz 0x2f(%rip)
49d7(5): mov 0x10(%rsp),%rdi
49dc(5): mov %r8b,0x40(%rsp)
49e1(5): mov %r10b,0x38(%rsp)
49e6(5): mov %r9,0x30(%rsp)
49eb(5): call 0xffffcf95(%rip)
49f0(6): movzx 0x40(%rsp),%r8d
49f6(6): movzx 0x38(%rsp),%r10d
49fc(3): mov %rax,%r11
49ff(5): mov 0x30(%rsp),%r9
4a04(8): lea 0x9c(%rsp),%rax
4a0c(2): xor %ecx,%ecx
4a0e(4): mov %bl,0x7e(%rsp)
4a12(5): mov %r8b,0x7d(%rsp)
4a17(3): mov %rcx,%rbx
4a1a(8): mov %r9,0x88(%rsp)
4a22(5): mov %rax,0x38(%rsp)
4a27(5): mov %r10b,0x7f(%rsp)
4a2c(8): mov %r15,0x80(%rsp)
4a34(5): mov %r14,0x40(%rsp)
4a39(5): mov %r13,0x70(%rsp)
4a3e(5): mov %r11,0x30(%rsp)
4a43(5): mov 0x10(%rsp),%rax
4a48(5): lea 0x0(%rbp,%rbx,1),%r14
4a4d(5): mov 0x30(%rsp),%rdx
4a52(5): mov 0x28(%rsp),%rcx
4a57(5): mov 0x38(%rsp),%rdi
4a5c(4): lea 0x0(%rax,%r14,1),%r13
4a60(3): sub %r14,%rdx
4a63(3): mov %r13,%rsi
4a66(5): call 0x1afa(%rip)
4a6b(3): test %rax,%rax
4a6e(3): mov %rax,%r15
4a71(2): jz 0x50(%rip)
4a73(4): cmp $0xffffffff,%rax
4a77(6): jz 0x61e(%rip)
4a7d(4): cmp $0xfffffffe,%rax
4a81(6): jz 0x5a0(%rip)
4a87(5): cmp $0x2,0x8(%rsp)
4a8c(3): setz %al
4a8f(4): and 0xf(%rsp),%al
4a93(6): jnz 0x19d(%rip)
4a99(7): mov 0x9c(%rsp),%edi
4aa0(5): call 0xffffd180(%rip)
4aa5(5): mov 0x28(%rsp),%rdi
4aaa(2): test %eax,%eax
4aac(5): mov $0x0,%eax
4ab1(4): cmove %eax,%r12d
4ab5(3): add %r15,%rbx
4ab8(5): call 0xffffd158(%rip)
4abd(2): test %eax,%eax
4abf(2): jz 0xffffff84(%rip)
4ac1(3): mov %r12d,%edx
4ac4(3): mov %rbx,%rdi
4ac7(6): movzx 0x7d(%rsp),%r8d
4acd(3): xor $0x1,%edx
4ad0(5): movzx 0x7e(%rsp),%ebx
4ad5(6): movzx 0x7f(%rsp),%r10d
4adb(4): and 0xd(%rsp),%dl
4adf(8): mov 0x80(%rsp),%r15
4ae7(5): mov 0x40(%rsp),%r14
4aec(5): mov 0x70(%rsp),%r13
4af1(5): mov 0x30(%rsp),%r11
4af6(4): cmp $0x1,%rdi
4afa(6): jbe 0x601(%rip)
4b00(3): mov %rdi,%rcx
4b03(2): xor %esi,%esi
4b05(6): movzx 0xf(%rsp),%r9d
4b0b(3): add %rbp,%rcx
4b0e(5): mov 0x10(%rsp),%rdi
4b13(5): jmp 0xbb(%rip)
4b18(8): nop 0x0(%rax,%rax,1)
4b20(5): cmp $0x2,0x8(%rsp)
4b25(3): setz %al
4b28(3): test %r9b,%r9b
4b2b(6): jnz 0x4b5(%rip)
4b31(3): mov %r8d,%esi
4b34(3): xor $0x1,%esi
4b37(3): and %sil,%al
4b3a(2): jz 0x31(%rip)
4b3c(3): cmp %r15,%r13
4b3f(2): jbe 0x7(%rip)
4b41(5): mov $0x27,0x0(%r14,%r15,1)
4b46(4): lea 0x1(%r15),%rsi
4b4a(3): cmp %rsi,%r13
4b4d(2): jbe 0x8(%rip)
4b4f(6): mov $0x24,0x1(%r14,%r15,1)
4b55(4): lea 0x2(%r15),%rsi
4b59(3): cmp %rsi,%r13
4b5c(2): jbe 0x8(%rip)
4b5e(6): mov $0x27,0x2(%r14,%r15,1)
4b64(4): add $0x3,%r15
4b68(3): mov %eax,%r8d
4b6b(3): cmp %r15,%r13
4b6e(2): jbe 0x7(%rip)
4b70(5): mov $0x5c,0x0(%r14,%r15,1)
4b75(4): lea 0x1(%r15),%rax
4b79(3): cmp %rax,%r13
4b7c(2): jbe 0xf(%rip)
4b7e(2): mov %ebx,%eax
4b80(3): shr $0x6,%al
4b83(3): add $0x30,%eax
4b86(5): mov %al,0x1(%r14,%r15,1)
4b8b(4): lea 0x2(%r15),%rax
4b8f(3): cmp %rax,%r13
4b92(2): jbe 0x12(%rip)
4b94(2): mov %ebx,%eax
4b96(3): shr $0x3,%al
4b99(3): and $0x7,%eax
4b9c(3): add $0x30,%eax
4b9f(5): mov %al,0x2(%r14,%r15,1)
4ba4(3): and $0x7,%ebx
4ba7(4): add $0x1,%rbp
4bab(4): add $0x3,%r15
4baf(3): add $0x30,%ebx
4bb2(3): cmp %rcx,%rbp
4bb5(6): jnb 0xfffff7eb(%rip)
4bbb(2): mov %edx,%esi
4bbd(3): cmp %r15,%r13
4bc0(2): jbe 0x6(%rip)
4bc2(4): mov %bl,0x0(%r14,%r15,1)
4bc6(4): movzx 0x0(%rdi,%rbp,1),%ebx
4bca(4): add $0x1,%r15
4bce(2): test %dl,%dl
4bd0(6): jnz 0xffffff50(%rip)
4bd6(2): mov %esi,%eax
4bd8(3): xor $0x1,%eax
4bdb(3): and %r8d,%eax
4bde(3): test %r10b,%r10b
4be1(2): jz 0x10(%rip)
4be3(3): cmp %r15,%r13
4be6(2): jbe 0x7(%rip)
4be8(5): mov $0x5c,0x0(%r14,%r15,1)
4bed(4): add $0x1,%r15
4bf1(4): add $0x1,%rbp
4bf5(3): cmp %rcx,%rbp
4bf8(6): jnb 0xfffff784(%rip)
4bfe(2): test %al,%al
4c00(6): jz 0x3fe(%rip)
4c06(3): cmp %r15,%r13
4c09(2): jbe 0x7(%rip)
4c0b(5): mov $0x27,0x0(%r14,%r15,1)
4c10(4): lea 0x1(%r15),%rax
4c14(3): cmp %rax,%r13
4c17(2): jbe 0x8(%rip)
4c19(6): mov $0x27,0x1(%r14,%r15,1)
4c1f(4): add $0x2,%r15
4c23(3): xor %r10d,%r10d
4c26(3): xor %r8d,%r8d
4c29(2): jmp 0xffffff94(%rip)
4c2b(5): nop 0x0(%rax,%rax,1)
4c30(4): cmp $0x1,%r15
4c34(6): jz 0xfffffe65(%rip)
4c3a(5): mov 0x10(%rsp),%rdi
4c3f(4): lea 0x0(%rdi,%r15,1),%rcx
4c43(5): lea 0x1(%rdi,%r14,1),%rdx
4c48(4): lea 0x0(%rcx,%r14,1),%r8
4c4c(2): jmp 0x11(%rip)
4c4e(2): nop 
4c50(4): add $0x1,%rdx
4c54(3): cmp %rdx,%r8
4c57(6): jz 0xfffffe42(%rip)
4c5d(3): movzx (%rdx),%ecx
4c60(3): sub $0x5b,%ecx
4c63(3): cmp $0x21,%cl
4c66(2): jnbe 0xffffffea(%rip)
4c68(5): mov $0x1,%esi
4c6d(3): shl/sal %cl,%rsi
4c70(3): mov %rsi,%rcx
4c73(a): mov $0x8589934635,%rsi
4c7d(3): test %rsi,%rcx
4c80(2): jz 0xffffffd0(%rip)
4c82(5): mov 0x40(%rsp),%r14
4c87(5): mov 0x70(%rsp),%r13
4c8c(5): mov 0x30(%rsp),%rbp
4c91(8): mov $0x2,0x8(%rsp)
4c99(5): cmp $0x0,0xd(%rsp)
4c9e(2): jz 0x12(%rip)
4ca0(2): test %al,%al
4ca2(5): mov $0x4,%eax
4ca7(5): cmove 0x8(%rsp),%eax
4cac(4): mov %eax,0x8(%rsp)
4cb0(4): sub $0x8,%rsp
4cb4(3): mov %rbp,%rcx
4cb7(3): mov %r13,%rsi
4cba(4): push 0x68(%rsp)
4cbe(4): push 0x78(%rsp)
4cc2(3): mov %r14,%rdi
4cc5(2): push $0x0
4cc7(8): mov 0x98(%rsp),%r9d
4ccf(5): mov 0x28(%rsp),%r8d
4cd4(5): mov 0x30(%rsp),%rdx
4cd9(4): and $0xfd,%r9d
4cdd(5): call 0xfffff433(%rip)
4ce2(4): add $0x20,%rsp
4ce6(3): mov %rax,%r15
4ce9(8): mov 0xa8(%rsp),%rbx
4cf1(9): xor $0x28,%rbx
4cfa(3): mov %r15,%rax
4cfd(6): jnz 0x606(%rip)
4d03(7): add $0xb8,%rsp
4d0a(1): pop %rbx
4d0b(1): pop %rbp
4d0c(2): pop %r12
4d0e(2): pop %r13
4d10(2): pop %r14
4d12(2): pop %r15
4d14(1): ret near (%rsp)
4d15(3): nop (%rax)
4d18(3): mov %r11,%rbp
4d1b(5): jmp 0xffffff7e(%rip)
4d20(3): cmp %r15,%r13
4d23(2): jbe 0x7(%rip)
4d25(5): mov $0x27,0x0(%r14,%r15,1)
4d2a(4): lea 0x1(%r15),%rax
4d2e(3): cmp %rax,%r13
4d31(2): jbe 0x8(%rip)
4d33(6): mov $0x5c,0x1(%r14,%r15,1)
4d39(4): lea 0x2(%r15),%rax
4d3d(3): cmp %rax,%r13
4d40(6): jbe 0x5f2(%rip)
4d46(3): mov %r13,%rdx
4d49(6): mov $0x27,0x2(%r14,%r15,1)
4d4f(5): mov 0x50(%rsp),%r13
4d54(5): jmp 0xfffffbde(%rip)
4d59(3): mov %r12d,%eax
4d5c(5): mov $0x30,%ebx
4d61(3): xor %r12d,%r12d
4d64(5): jmp 0xfffff605(%rip)
4d69(6): mov $0x27,0x2(%r14,%r15,1)
4d6f(5): jmp 0xfffff9ca(%rip)
4d74(2): test %ebx,%ebx
4d76(6): jnz 0xfffff42d(%rip)
4d7c(5): mov $0x1,0xd(%rsp)
4d81(3): test %r13,%r13
4d84(6): jnz 0x596(%rip)
4d8a(7): lea 0x1de0(%rip),%rax
4d91(9): mov $0x0,0x50(%rsp)
4d9a(5): mov $0x1,0xe(%rsp)
4d9f(5): mov $0x0,0x7c(%rsp)
4da4(3): xor %r12d,%r12d
4da7(5): mov $0x0,0xf(%rsp)
4dac(9): mov $0x1,0x18(%rsp)
4db5(5): mov %rax,0x48(%rsp)
4dba(6): mov $0x1,%r15d
4dc0(8): mov $0x2,0x8(%rsp)
4dc8(5): jmp 0xfffff41b(%rip)
4dcd(3): nop (%rax)
4dd0(2): test %ebx,%ebx
4dd2(6): jnz 0x3fb(%rip)
4dd8(3): test %r13,%r13
4ddb(6): jz 0x22b(%rip)
4de1(4): mov $0x22,(%r14)
4de5(5): mov $0x1,0xe(%rsp)
4dea(3): xor %r12d,%r12d
4ded(5): mov $0x0,0x7c(%rsp)
4df2(9): mov $0x0,0x50(%rsp)
4dfb(7): lea 0x2989(%rip),%rax
4e02(5): mov $0x0,0xf(%rsp)
4e07(5): mov $0x1,0xd(%rsp)
4e0c(9): mov $0x1,0x18(%rsp)
4e15(6): mov $0x1,%r15d
4e1b(5): mov %rax,0x48(%rsp)
4e20(5): jmp 0xfffff3c3(%rip)
4e25(7): lea 0x295f(%rip),%rax
4e2c(5): mov $0x1,0xe(%rsp)
4e31(5): mov $0x0,0x7c(%rsp)
4e36(3): xor %r12d,%r12d
4e39(9): mov $0x0,0x50(%rsp)
4e42(5): mov $0x1,0xf(%rsp)
4e47(5): mov $0x1,0xd(%rsp)
4e4c(9): mov $0x1,0x18(%rsp)
4e55(3): xor %r15d,%r15d
4e58(5): mov %rax,0x48(%rsp)
4e5d(8): mov $0x5,0x8(%rsp)
4e65(5): jmp 0xfffff37e(%rip)
4e6a(5): mov $0x1,0xe(%rsp)
4e6f(5): mov $0x0,0x7c(%rsp)
4e74(3): xor %r12d,%r12d
4e77(9): mov $0x0,0x50(%rsp)
4e80(5): mov $0x0,0xf(%rsp)
4e85(3): xor %r15d,%r15d
4e88(5): mov $0x1,0xd(%rsp)
4e8d(9): mov $0x0,0x18(%rsp)
4e96(9): mov $0x0,0x48(%rsp)
4e9f(5): jmp 0xfffff344(%rip)
4ea4(5): cmp $0xa,0x8(%rsp)
4ea9(2): jz 0x58(%rip)
4eab(7): lea 0x28db(%rip),%rsi
4eb2(2): xor %edi,%edi
4eb4(5): mov $0x5,%edx
4eb9(5): call 0xffffcaa7(%rip)
4ebe(3): mov %rax,%rcx
4ec1(5): mov %rax,0x68(%rsp)
4ec6(7): lea 0x28c0(%rip),%rax
4ecd(3): cmp %rax,%rcx
4ed0(6): jz 0x39e(%rip)
4ed6(7): lea 0x1c94(%rip),%rsi
4edd(2): xor %edi,%edi
4edf(5): mov $0x5,%edx
4ee4(5): call 0xffffca7c(%rip)
4ee9(3): mov %rax,%rcx
4eec(5): mov %rax,0x60(%rsp)
4ef1(7): lea 0x1c79(%rip),%rax
4ef8(3): cmp %rax,%rcx
4efb(6): jz 0x389(%rip)
4f01(3): xor %r15d,%r15d
4f04(2): test %ebx,%ebx
4f06(6): jz 0x1c7(%rip)
4f0c(2): test %ebx,%ebx
4f0e(5): mov 0x60(%rsp),%rbx
4f13(5): setnz 0xf(%rsp)
4f18(3): xor %r12d,%r12d
4f1b(3): mov %rbx,%rdi
4f1e(5): call 0xffffca62(%rip)
4f23(5): mov %rbx,0x48(%rsp)
4f28(5): mov %rax,0x18(%rsp)
4f2d(5): mov $0x1,0xe(%rsp)
4f32(5): mov $0x0,0x7c(%rsp)
4f37(9): mov $0x0,0x50(%rsp)
4f40(5): mov $0x1,0xd(%rsp)
4f45(5): jmp 0xfffff29e(%rip)
4f4a(5): mov $0x1,0xe(%rsp)
4f4f(5): mov $0x0,0x7c(%rsp)
4f54(3): xor %r12d,%r12d
4f57(9): mov $0x0,0x50(%rsp)
4f60(5): mov $0x0,0xf(%rsp)
4f65(3): xor %r15d,%r15d
4f68(5): mov $0x0,0xd(%rsp)
4f6d(9): mov $0x0,0x18(%rsp)
4f76(9): mov $0x0,0x48(%rsp)
4f7f(5): jmp 0xfffff264(%rip)
4f84(5): mov $0x1,0xe(%rsp)
4f89(5): mov $0x0,0x7c(%rsp)
4f8e(3): xor %r12d,%r12d
4f91(9): mov $0x0,0x50(%rsp)
4f9a(5): mov $0x1,0xf(%rsp)
4f9f(5): mov $0x1,0xd(%rsp)
4fa4(5): jmp 0xfffff21f(%rip)
4fa9(3): cmp %r15,%r13
4fac(2): jbe 0x7(%rip)
4fae(5): mov $0x30,0x0(%r14,%r15,1)
4fb3(4): lea 0x2(%rcx),%rax
4fb7(3): cmp %rax,%r13
4fba(2): jbe 0x8(%rip)
4fbc(6): mov $0x30,0x2(%r14,%rcx,1)
4fc2(3): mov %r12d,%eax
4fc5(4): lea 0x3(%rcx),%r15
4fc9(3): xor %r12d,%r12d
4fcc(5): mov $0x30,%ebx
4fd1(5): jmp 0xfffff367(%rip)
4fd6(a): nop 0x0(%rax,%rax,1)
4fe0(5): movzx 0xf(%rsp),%ebx
4fe5(3): mov %r11,%rbp
4fe8(4): mov %bl,0xd(%rsp)
4fec(5): jmp 0xfffffcad(%rip)
4ff1(5): movzx 0xd(%rsp),%edx
4ff6(3): xor %r12d,%r12d
4ff9(5): jmp 0xfffffb07(%rip)
4ffe(3): xor %r10d,%r10d
5001(5): jmp 0xfffffbbc(%rip)
5006(9): mov $0x0,0x50(%rsp)
500f(5): mov $0x1,0xe(%rsp)
5014(3): xor %r12d,%r12d
5017(5): mov $0x0,0x7c(%rsp)
501c(5): jmp 0xfffffddf(%rip)
5021(5): mov 0x30(%rsp),%r11
5026(3): mov %r14,%rsi
5029(3): mov %r13,%rcx
502c(3): mov %rbx,%rax
502f(3): mov %rbx,%rdi
5032(6): movzx 0x7d(%rsp),%r8d
5038(5): movzx 0x7e(%rsp),%ebx
503d(8): mov 0x88(%rsp),%r9
5045(3): cmp %r11,%rsi
5048(6): movzx 0x7f(%rsp),%r10d
504e(8): mov 0x80(%rsp),%r15
5056(5): mov 0x40(%rsp),%r14
505b(5): mov 0x70(%rsp),%r13
5060(2): jnb 0x28(%rip)
5062(3): cmp $0x0,(%rcx)
5065(2): jnz 0x12(%rip)
5067(2): jmp 0x21(%rip)
5069(7): nop 0x0(%rax)
5070(5): cmp $0x0,0x0(%r9,%rax,1)
5075(2): jz 0x10(%rip)
5077(4): add $0x1,%rax
507b(5): lea 0x0(%rbp,%rax,1),%rdx
5080(3): cmp %rdx,%r11
5083(2): jnbe 0xffffffed(%rip)
5085(3): mov %rax,%rdi
5088(5): movzx 0xd(%rsp),%edx
508d(3): xor %r12d,%r12d
5090(5): jmp 0xfffffa66(%rip)
5095(3): mov %rbx,%rdi
5098(6): movzx 0x7d(%rsp),%r8d
509e(5): movzx 0x7e(%rsp),%ebx
50a3(6): movzx 0x7f(%rsp),%r10d
50a9(8): mov 0x80(%rsp),%r15
50b1(3): xor %r12d,%r12d
50b4(5): mov 0x40(%rsp),%r14
50b9(5): mov 0x70(%rsp),%r13
50be(5): mov 0x30(%rsp),%r11
50c3(5): movzx 0xd(%rsp),%edx
50c8(5): jmp 0xfffffa2e(%rip)
50cd(5): mov 0x68(%rsp),%rdx
50d2(3): movzx (%rdx),%eax
50d5(2): test %al,%al
50d7(6): jz 0xfffffe35(%rip)
50dd(3): nop (%rax)
50e0(3): cmp %r15,%r13
50e3(2): jbe 0x6(%rip)
50e5(4): mov %al,0x0(%r14,%r15,1)
50e9(4): add $0x1,%r15
50ed(5): movzx 0x0(%rdx,%r15,1),%eax
50f2(2): test %al,%al
50f4(2): jnz 0xffffffec(%rip)
50f6(5): jmp 0xfffffe16(%rip)
50fb(2): mov %edx,%eax
50fd(5): jmp 0xfffff55a(%rip)
5102(4): movzx 0x0(%rax,%rcx,1),%ebx
5106(3): cmp $0x3e,%bl
5109(6): jnbe 0xfffff877(%rip)
510f(a): mov $0x8070630310989004800,%rax
5119(4): bt %rbx,%rax
511d(6): jnb 0xfffff863(%rip)
5123(5): cmp $0x0,0xf(%rsp)
5128(6): jnz 0x1ea(%rip)
512e(3): cmp %r15,%r13
5131(2): jbe 0x7(%rip)
5133(5): mov $0x3f,0x0(%r14,%r15,1)
5138(4): lea 0x1(%r15),%rax
513c(3): cmp %rax,%r13
513f(2): jbe 0x8(%rip)
5141(6): mov $0x22,0x1(%r14,%r15,1)
5147(4): lea 0x2(%r15),%rax
514b(3): cmp %rax,%r13
514e(2): jbe 0x8(%rip)
5150(6): mov $0x22,0x2(%r14,%r15,1)
5156(4): lea 0x3(%r15),%rax
515a(3): cmp %rax,%r13
515d(2): jbe 0x8(%rip)
515f(6): mov $0x3f,0x3(%r14,%r15,1)
5165(4): add $0x4,%r15
5169(2): xor %edx,%edx
516b(3): xor %r12d,%r12d
516e(2): xor %eax,%eax
5170(3): mov %rcx,%rbp
5173(5): jmp 0xfffff1c5(%rip)
5178(2): test %ebx,%ebx
517a(6): jz 0x18e(%rip)
5180(7): lea 0x19ea(%rip),%rax
5187(5): mov $0x1,0xe(%rsp)
518c(5): mov $0x0,0x7c(%rsp)
5191(3): xor %r12d,%r12d
5194(9): mov $0x0,0x50(%rsp)
519d(5): mov $0x1,0xf(%rsp)
51a2(5): mov $0x0,0xd(%rsp)
51a7(9): mov $0x1,0x18(%rsp)
51b0(3): xor %r15d,%r15d
51b3(5): mov %rax,0x48(%rsp)
51b8(5): jmp 0xfffff02b(%rip)
51bd(3): nop (%rax)
51c0(3): mov %r11,%rbp
51c3(5): movzx 0xf(%rsp),%eax
51c8(5): jmp 0xfffffad1(%rip)
51cd(7): lea 0x25b7(%rip),%rax
51d4(5): mov $0x1,0xe(%rsp)
51d9(5): mov $0x0,0x7c(%rsp)
51de(3): xor %r12d,%r12d
51e1(9): mov $0x0,0x50(%rsp)
51ea(5): mov $0x1,0xf(%rsp)
51ef(5): mov $0x1,0xd(%rsp)
51f4(9): mov $0x1,0x18(%rsp)
51fd(3): xor %r15d,%r15d
5200(5): mov %rax,0x48(%rsp)
5205(5): jmp 0xffffefde(%rip)
520a(2): mov %edx,%eax
520c(5): mov 0x48(%rsp),%rbx
5211(3): test %rbx,%rbx
5214(2): jz 0x2e(%rip)
5216(2): test %al,%al
5218(2): jz 0x2a(%rip)
521a(3): movzx (%rbx),%ecx
521d(3): mov %rbx,%rax
5220(2): test %cl,%cl
5222(2): jz 0x20(%rip)
5224(3): mov %r15,%rdx
5227(3): sub %r15,%rax
522a(3): cmp %rdx,%r13
522d(2): jbe 0x6(%rip)
522f(4): mov %cl,0x0(%r14,%rdx,1)
5233(4): add $0x1,%rdx
5237(4): movzx 0x0(%rax,%rdx,1),%ecx
523b(2): test %cl,%cl
523d(2): jnz 0xffffffed(%rip)
523f(3): mov %rdx,%r15
5242(3): cmp %r15,%r13
5245(6): jbe 0xfffffaa4(%rip)
524b(5): mov $0x0,0x0(%r14,%r15,1)
5250(5): jmp 0xfffffa99(%rip)
5255(5): cmp $0x2,0x8(%rsp)
525a(5): movzx 0xf(%rsp),%ebx
525f(3): mov %r11,%rbp
5262(3): setz %al
5265(4): mov %bl,0xd(%rsp)
5269(5): jmp 0xfffffa30(%rip)
526e(4): mov 0x8(%rsp),%esi
5272(3): mov %rcx,%rdi
5275(5): call 0xffffedab(%rip)
527a(5): mov %rax,0x68(%rsp)
527f(5): jmp 0xfffffc57(%rip)
5284(4): mov 0x8(%rsp),%esi
5288(3): mov %rcx,%rdi
528b(5): call 0xffffed95(%rip)
5290(5): mov %rax,0x60(%rsp)
5295(5): jmp 0xfffffc6c(%rip)
529a(5): movzx 0xf(%rsp),%ebx
529f(3): mov %r11,%rbp
52a2(2): mov %edx,%eax
52a4(4): mov %bl,0xd(%rsp)
52a8(5): jmp 0xfffff9f1(%rip)
52ad(4): sub $0x8,%rsp
52b1(6): mov $0x5,%r8d
52b7(3): mov %r11,%rcx
52ba(4): push 0x68(%rsp)
52be(4): push 0x78(%rsp)
52c2(3): mov %r14,%rdi
52c5(4): push 0x38(%rsp)
52c9(8): mov 0x98(%rsp),%r9d
52d1(5): mov 0x30(%rsp),%rdx
52d6(5): mov 0x70(%rsp),%rsi
52db(5): call 0xffffee35(%rip)
52e0(4): add $0x20,%rsp
52e4(3): mov %rax,%r15
52e7(5): jmp 0xfffffa02(%rip)
52ec(5): movzx 0x7c(%rsp),%eax
52f1(5): jmp 0xffffff1b(%rip)
52f6(8): mov $0x2,0x8(%rsp)
52fe(5): jmp 0xfffff99b(%rip)
5303(5): call 0xffffc69d(%rip)
5308(5): mov $0x0,0xd(%rsp)
530d(5): jmp 0xfffffa74(%rip)
5312(3): mov %r11,%rbp
5315(5): jmp 0xfffff99b(%rip)
531a(5): mov $0x1,0xe(%rsp)
531f(2): xor %eax,%eax
5321(3): xor %r12d,%r12d
5324(9): mov $0x0,0x50(%rsp)
532d(5): jmp 0xfffff5a7(%rip)
5332(3): mov %r13,%rdx
5335(5): mov 0x50(%rsp),%r13
533a(5): jmp 0xfffff5f8(%rip)
533f(5): call 0xffffc571(%rip)

"quotearg_n_options" :
5350(2): push %r15
5352(2): push %r14
5354(3): movsxd %edi,%r15
5357(2): push %r13
5359(2): push %r12
535b(3): mov %rdx,%r14
535e(1): push %rbp
535f(1): push %rbx
5360(3): mov %rcx,%rbp
5363(4): sub $0x28,%rsp
5367(5): mov %rsi,0x8(%rsp)
536c(5): call 0xffffc554(%rip)
5371(3): mov %rax,%r13
5374(2): mov (%rax),%eax
5376(3): test %r15d,%r15d
5379(7): mov 0x204ce0(%rip),%rbx
5380(4): mov %eax,0x18(%rsp)
5384(6): js 0x16d(%rip)
538a(7): cmp %r15d,0x204cc7(%rip)
5391(2): jnle 0x64(%rip)
5393(7): cmp $0x7fffffff,%r15d
539a(6): jz 0x15c(%rip)
53a0(4): lea 0x1(%r15),%r12d
53a4(7): lea 0x204cc5(%rip),%rax
53ab(3): movsxd %r12d,%rsi
53ae(4): shl/sal $0x4,%rsi
53b2(3): cmp %rax,%rbx
53b5(6): jz 0x11b(%rip)
53bb(3): mov %rbx,%rdi
53be(5): call 0xf72(%rip)
53c3(3): mov %rax,%rbx
53c6(7): mov %rax,0x204c93(%rip)
53cd(7): movsxd 0x204c84(%rip),%rdi
53d4(3): mov %r12d,%edx
53d7(2): xor %esi,%esi
53d9(2): sub %edi,%edx
53db(4): shl/sal $0x4,%rdi
53df(3): movsxd %edx,%rdx
53e2(3): add %rbx,%rdi
53e5(4): shl/sal $0x4,%rdx
53e9(5): call 0xffffc627(%rip)
53ee(7): mov %r12d,0x204c63(%rip)
53f5(3): mov 0x4(%rbp),%eax
53f8(4): shl/sal $0x4,%r15
53fc(4): sub $0x8,%rsp
5400(3): add %r15,%rbx
5403(4): lea 0x8(%rbp),%r15
5407(4): mov 0x0(%rbp),%r8d
540b(3): mov (%rbx),%r11
540e(4): mov 0x8(%rbx),%r12
5412(3): mov %r14,%rcx
5415(3): or $0x1,%eax
5418(4): mov %eax,0x24(%rsp)
541c(3): push 0x30(%rbp)
541f(3): mov %eax,%r9d
5422(3): push 0x28(%rbp)
5425(2): push %r15
5427(3): mov %r11,%rsi
542a(5): mov 0x28(%rsp),%rdx
542f(3): mov %r12,%rdi
5432(5): mov %r11,0x30(%rsp)
5437(5): call 0xffffecd9(%rip)
543c(4): add $0x20,%rsp
5440(5): mov 0x10(%rsp),%r11
5445(3): cmp %rax,%r11
5448(2): jnbe 0x69(%rip)
544a(4): lea 0x1(%rax),%rsi
544e(7): lea 0x204fcb(%rip),%rax
5455(3): cmp %rax,%r12
5458(3): mov %rsi,(%rbx)
545b(2): jz 0x14(%rip)
545d(3): mov %r12,%rdi
5460(5): mov %rsi,0x10(%rsp)
5465(5): call 0xffffc43b(%rip)
546a(5): mov 0x10(%rsp),%rsi
546f(3): mov %rsi,%rdi
5472(5): mov %rsi,0x10(%rsp)
5477(5): call 0xe59(%rip)
547c(4): sub $0x8,%rsp
5480(4): mov %rax,0x8(%rbx)
5484(4): mov 0x0(%rbp),%r8d
5488(3): push 0x30(%rbp)
548b(3): push 0x28(%rbp)
548e(3): mov %r14,%rcx
5491(2): push %r15
5493(5): mov 0x3c(%rsp),%r9d
5498(3): mov %rax,%rdi
549b(5): mov 0x28(%rsp),%rdx
54a0(5): mov 0x30(%rsp),%rsi
54a5(3): mov %rax,%r12
54a8(5): call 0xffffec68(%rip)
54ad(4): add $0x20,%rsp
54b1(4): mov 0x18(%rsp),%eax
54b5(4): mov %eax,0x0(%r13)
54b9(4): add $0x28,%rsp
54bd(3): mov %r12,%rax
54c0(1): pop %rbx
54c1(1): pop %rbp
54c2(2): pop %r12
54c4(2): pop %r13
54c6(2): pop %r14
54c8(2): pop %r15
54ca(1): ret near (%rsp)
54cb(5): nop 0x0(%rax,%rax,1)
54d0(2): xor %edi,%edi
54d2(5): call 0xe5e(%rip)
54d7(8): movdqa 0x204b91(%rip),%xmm0
54df(3): mov %rax,%rbx
54e2(7): mov %rax,0x204b77(%rip)
54e9(3): movups %xmm0,(%rax)
54ec(5): jmp 0xfffffee1(%rip)
54f1(5): call 0xffffc3bf(%rip)
54f6(5): call 0x102a(%rip)

"clone_quoting_options" :
5500(2): push %r12
5502(1): push %rbp
5503(1): push %rbx
5504(3): mov %rdi,%rbx
5507(5): call 0xffffc3b9(%rip)
550c(3): mov (%rax),%r12d
550f(3): mov %rax,%rbp
5512(7): lea 0x205007(%rip),%rax
5519(3): test %rbx,%rbx
551c(5): mov $0x38,%esi
5521(4): cmove %rax,%rbx
5525(3): mov %rbx,%rdi
5528(5): call 0xfa8(%rip)
552d(4): mov %r12d,0x0(%rbp)
5531(1): pop %rbx
5532(1): pop %rbp
5533(2): pop %r12
5535(1): ret near (%rsp)

"get_quoting_style" :
5540(7): lea 0x204fd9(%rip),%rax
5547(3): test %rdi,%rdi
554a(4): cmove %rax,%rdi
554e(2): mov (%rdi),%eax
5550(1): ret near (%rsp)

"set_quoting_style" :
5560(7): lea 0x204fb9(%rip),%rax
5567(3): test %rdi,%rdi
556a(4): cmove %rax,%rdi
556e(2): mov %esi,(%rdi)
5570(1): ret near (%rsp)

"set_char_quoting" :
5580(7): lea 0x204f99(%rip),%rax
5587(3): test %rdi,%rdi
558a(2): mov %esi,%ecx
558c(4): cmove %rax,%rdi
5590(2): mov %esi,%eax
5592(3): and $0x1f,%ecx
5595(3): shr $0x5,%al
5598(3): movzx %al,%eax
559b(5): lea 0x8(%rdi,%rax,4),%rdi
55a0(2): mov (%rdi),%esi
55a2(2): mov %esi,%eax
55a4(2): shr %cl,%eax
55a6(2): xor %eax,%edx
55a8(3): and $0x1,%eax
55ab(3): and $0x1,%edx
55ae(2): shl/sal %cl,%edx
55b0(2): xor %esi,%edx
55b2(2): mov %edx,(%rdi)
55b4(1): ret near (%rsp)

"set_quoting_flags" :
55c0(7): lea 0x204f59(%rip),%rax
55c7(3): test %rdi,%rdi
55ca(4): cmove %rax,%rdi
55ce(3): mov 0x4(%rdi),%eax
55d1(3): mov %esi,0x4(%rdi)
55d4(1): ret near (%rsp)

"set_custom_quoting" :
55e0(7): lea 0x204f39(%rip),%rax
55e7(3): test %rdi,%rdi
55ea(4): cmove %rax,%rdi
55ee(3): test %rsi,%rsi
55f1(6): mov $0xa,(%rdi)
55f7(2): jz 0x10(%rip)
55f9(3): test %rdx,%rdx
55fc(2): jz 0xb(%rip)
55fe(4): mov %rsi,0x28(%rdi)
5602(4): mov %rdx,0x30(%rdi)
5606(1): ret near (%rsp)
5607(4): sub $0x8,%rsp
560b(5): call 0xffffc2a5(%rip)

"quotearg_buffer" :
5610(2): push %r15
5612(2): push %r14
5614(7): lea 0x204f05(%rip),%rax
561b(2): push %r13
561d(2): push %r12
561f(3): mov %rdi,%r13
5622(1): push %rbp
5623(1): push %rbx
5624(3): mov %r8,%rbx
5627(3): mov %rsi,%r14
562a(3): mov %rdx,%r15
562d(4): sub $0x18,%rsp
5631(3): test %r8,%r8
5634(4): cmove %rax,%rbx
5638(5): mov %rcx,0x8(%rsp)
563d(5): call 0xffffc283(%rip)
5642(3): mov (%rax),%r12d
5645(3): mov %rax,%rbp
5648(4): lea 0x8(%rbx),%rax
564c(4): sub $0x8,%rsp
5650(4): mov 0x4(%rbx),%r9d
5654(3): push 0x30(%rbx)
5657(3): mov (%rbx),%r8d
565a(3): push 0x28(%rbx)
565d(3): mov %r15,%rdx
5660(1): push %rax
5661(5): mov 0x28(%rsp),%rcx
5666(3): mov %r14,%rsi
5669(3): mov %r13,%rdi
566c(5): call 0xffffeaa4(%rip)
5671(4): mov %r12d,0x0(%rbp)
5675(4): add $0x38,%rsp
5679(1): pop %rbx
567a(1): pop %rbp
567b(2): pop %r12
567d(2): pop %r13
567f(2): pop %r14
5681(2): pop %r15
5683(1): ret near (%rsp)

"quotearg_alloc_mem" :
5690(2): push %r15
5692(2): push %r14
5694(7): lea 0x204e85(%rip),%rax
569b(2): push %r13
569d(2): push %r12
569f(3): mov %rdx,%r12
56a2(1): push %rbp
56a3(1): push %rbx
56a4(3): mov %rcx,%rbx
56a7(3): mov %rdi,%r14
56aa(3): mov %rsi,%r15
56ad(4): sub $0x38,%rsp
56b1(3): test %rcx,%rcx
56b4(4): cmove %rax,%rbx
56b8(2): xor %ebp,%ebp
56ba(5): call 0xffffc206(%rip)
56bf(3): test %r12,%r12
56c2(3): mov %rax,%r13
56c5(2): mov (%rax),%eax
56c7(4): setz %bpl
56cb(3): or 0x4(%rbx),%ebp
56ce(4): lea 0x8(%rbx),%r10
56d2(4): sub $0x8,%rsp
56d6(3): mov (%rbx),%r8d
56d9(3): mov %r15,%rcx
56dc(4): mov %eax,0x14(%rsp)
56e0(3): push 0x30(%rbx)
56e3(3): mov %r14,%rdx
56e6(3): push 0x28(%rbx)
56e9(2): push %r10
56eb(2): xor %esi,%esi
56ed(3): mov %ebp,%r9d
56f0(2): xor %edi,%edi
56f2(5): mov %r10,0x40(%rsp)
56f7(5): call 0xffffea19(%rip)
56fc(4): lea 0x1(%rax),%rsi
5700(5): mov %rax,0x48(%rsp)
5705(4): add $0x20,%rsp
5709(3): mov %rsi,%rdi
570c(5): mov %rsi,0x18(%rsp)
5711(5): call 0xbbf(%rip)
5716(5): mov %rax,0x10(%rsp)
571b(4): sub $0x8,%rsp
571f(3): push 0x30(%rbx)
5722(3): push 0x28(%rbx)
5725(5): mov 0x38(%rsp),%r10
572a(3): mov %ebp,%r9d
572d(3): mov (%rbx),%r8d
5730(3): mov %r15,%rcx
5733(3): mov %r14,%rdx
5736(3): mov %rax,%rdi
5739(2): push %r10
573b(5): mov 0x38(%rsp),%rsi
5740(5): call 0xffffe9d0(%rip)
5745(4): mov 0x2c(%rsp),%eax
5749(4): add $0x20,%rsp
574d(3): test %r12,%r12
5750(4): mov %eax,0x0(%r13)
5754(2): jz 0xb(%rip)
5756(5): mov 0x28(%rsp),%r11
575b(4): mov %r11,(%r12)
575f(5): mov 0x10(%rsp),%rax
5764(4): add $0x38,%rsp
5768(1): pop %rbx
5769(1): pop %rbp
576a(2): pop %r12
576c(2): pop %r13
576e(2): pop %r14
5770(2): pop %r15
5772(1): ret near (%rsp)

"quotearg_alloc" :
5780(3): mov %rdx,%rcx
5783(2): xor %edx,%edx
5785(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5790(6): mov 0x2048c2(%rip),%eax
5796(2): push %r12
5798(7): mov 0x2048c1(%rip),%r12
579f(1): push %rbp
57a0(1): push %rbx
57a1(3): cmp $0x1,%eax
57a4(2): jle 0x2d(%rip)
57a6(3): sub $0x2,%eax
57a9(5): lea 0x18(%r12),%rbx
57ae(4): shl/sal $0x4,%rax
57b2(5): lea 0x28(%r12,%rax,1),%rbp
57b7(9): nop 0x0(%rax,%rax,1)
57c0(3): mov (%rbx),%rdi
57c3(4): add $0x10,%rbx
57c7(5): call 0xffffc0d9(%rip)
57cc(3): cmp %rbp,%rbx
57cf(2): jnz 0xfffffff1(%rip)
57d1(5): mov 0x8(%r12),%rdi
57d6(7): lea 0x204c43(%rip),%rbx
57dd(3): cmp %rbx,%rdi
57e0(2): jz 0x19(%rip)
57e2(5): call 0xffffc0be(%rip)
57e7(b): mov $0x100,0x20487e(%rip)
57f2(7): mov %rbx,0x20487f(%rip)
57f9(7): lea 0x204870(%rip),%rbx
5800(3): cmp %rbx,%r12
5803(2): jz 0x11(%rip)
5805(3): mov %r12,%rdi
5808(5): call 0xffffc098(%rip)
580d(7): mov %rbx,0x20484c(%rip)
5814(1): pop %rbx
5815(a): mov $0x1,0x204839(%rip)
581f(1): pop %rbp
5820(2): pop %r12
5822(1): ret near (%rsp)

"quotearg_n" :
5830(7): lea 0x204ce9(%rip),%rcx
5837(7): mov $0xffffffff,%rdx
583e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5850(7): lea 0x204cc9(%rip),%rcx
5857(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5860(7): lea 0x204cb9(%rip),%rcx
5867(3): mov %rdi,%rsi
586a(7): mov $0xffffffff,%rdx
5871(2): xor %edi,%edi
5873(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5880(7): lea 0x204c99(%rip),%rcx
5887(3): mov %rsi,%rdx
588a(3): mov %rdi,%rsi
588d(2): xor %edi,%edi
588f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
58a0(4): sub $0x48,%rsp
58a4(3): mov %rdx,%rax
58a7(9): mov $0x28,%rdx
58b0(5): mov %rdx,0x38(%rsp)
58b5(2): xor %edx,%edx
58b7(3): cmp $0xa,%esi
58ba(2): jz 0x6a(%rip)
58bc(3): mov %esi,(%rsp)
58bf(3): mov %rsp,%rcx
58c2(7): mov $0xffffffff,%rdx
58c9(3): mov %rax,%rsi
58cc(9): mov $0x0,0x4(%rsp)
58d5(9): mov $0x0,0xc(%rsp)
58de(9): mov $0x0,0x14(%rsp)
58e7(9): mov $0x0,0x1c(%rsp)
58f0(9): mov $0x0,0x24(%rsp)
58f9(9): mov $0x0,0x2c(%rsp)
5902(8): mov $0x0,0x34(%rsp)
590a(5): call 0xfffffa46(%rip)
590f(5): mov 0x38(%rsp),%rcx
5914(9): xor $0x28,%rcx
591d(2): jnz 0xc(%rip)
591f(4): add $0x48,%rsp
5923(1): ret near (%rsp)
5924(5): call 0xffffbf8c(%rip)
5929(5): call 0xffffc077(%rip)

"quotearg_n_style_mem" :
5930(4): sub $0x48,%rsp
5934(3): mov %rdx,%rax
5937(3): mov %rcx,%rdx
593a(9): mov $0x28,%rcx
5943(5): mov %rcx,0x38(%rsp)
5948(2): xor %ecx,%ecx
594a(3): cmp $0xa,%esi
594d(2): jz 0x63(%rip)
594f(3): mov %esi,(%rsp)
5952(3): mov %rsp,%rcx
5955(3): mov %rax,%rsi
5958(9): mov $0x0,0x4(%rsp)
5961(9): mov $0x0,0xc(%rsp)
596a(9): mov $0x0,0x14(%rsp)
5973(9): mov $0x0,0x1c(%rsp)
597c(9): mov $0x0,0x24(%rsp)
5985(9): mov $0x0,0x2c(%rsp)
598e(8): mov $0x0,0x34(%rsp)
5996(5): call 0xfffff9ba(%rip)
599b(5): mov 0x38(%rsp),%rdx
59a0(9): xor $0x28,%rdx
59a9(2): jnz 0xc(%rip)
59ab(4): add $0x48,%rsp
59af(1): ret near (%rsp)
59b0(5): call 0xffffbf00(%rip)
59b5(5): call 0xffffbfeb(%rip)

"quotearg_style" :
59c0(3): mov %rsi,%rdx
59c3(2): mov %edi,%esi
59c5(2): xor %edi,%edi
59c7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
59d0(3): mov %rdx,%rcx
59d3(3): mov %rsi,%rdx
59d6(2): mov %edi,%esi
59d8(2): xor %edi,%edi
59da(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
59e0(4): sub $0x48,%rsp
59e4(2): mov %edx,%ecx
59e6(9): mov $0x28,%rax
59ef(5): mov %rax,0x38(%rsp)
59f4(2): xor %eax,%eax
59f6(7): mov 0x204b53(%rip),%rax
59fd(3): mov %rsp,%r8
5a00(3): and $0x1f,%ecx
5a03(8): movdqa 0x204b15(%rip),%xmm0
5a0b(5): mov %rax,0x30(%rsp)
5a10(2): mov %edx,%eax
5a12(4): movaps %xmm0,(%rsp)
5a16(3): shr $0x5,%al
5a19(3): movzx %al,%eax
5a1c(5): lea 0x8(%r8,%rax,4),%r9
5a21(8): movdqa 0x204b07(%rip),%xmm0
5a29(5): movaps %xmm0,0x10(%rsp)
5a2e(8): movdqa 0x204b0a(%rip),%xmm0
5a36(5): movaps %xmm0,0x20(%rsp)
5a3b(3): mov (%r9),%edx
5a3e(2): mov %edx,%eax
5a40(2): shr %cl,%eax
5a42(2): not %eax
5a44(3): and $0x1,%eax
5a47(2): shl/sal %cl,%eax
5a49(3): mov %r8,%rcx
5a4c(2): xor %edx,%eax
5a4e(3): mov %rsi,%rdx
5a51(3): mov %rdi,%rsi
5a54(3): mov %eax,(%r9)
5a57(2): xor %edi,%edi
5a59(5): call 0xfffff8f7(%rip)
5a5e(5): mov 0x38(%rsp),%rsi
5a63(9): xor $0x28,%rsi
5a6c(2): jnz 0x7(%rip)
5a6e(4): add $0x48,%rsp
5a72(1): ret near (%rsp)
5a73(5): call 0xffffbf2d(%rip)

"quotearg_char" :
5a80(4): movsx %sil,%edx
5a84(7): mov $0xffffffff,%rsi
5a8b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5a90(5): mov $0x3a,%edx
5a95(7): mov $0xffffffff,%rsi
5a9c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5ab0(5): mov $0x3a,%edx
5ab5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5ac0(4): sub $0x48,%rsp
5ac4(3): mov %rdx,%rax
5ac7(9): mov $0x28,%rdx
5ad0(5): mov %rdx,0x38(%rsp)
5ad5(2): xor %edx,%edx
5ad7(3): cmp $0xa,%esi
5ada(2): jz 0x6a(%rip)
5adc(3): mov %esi,(%rsp)
5adf(3): mov %rsp,%rcx
5ae2(7): mov $0xffffffff,%rdx
5ae9(3): mov %rax,%rsi
5aec(9): mov $0x0,0x4(%rsp)
5af5(9): mov $0x4000000,0xc(%rsp)
5afe(9): mov $0x0,0x14(%rsp)
5b07(9): mov $0x0,0x1c(%rsp)
5b10(9): mov $0x0,0x24(%rsp)
5b19(9): mov $0x0,0x2c(%rsp)
5b22(8): mov $0x0,0x34(%rsp)
5b2a(5): call 0xfffff826(%rip)
5b2f(5): mov 0x38(%rsp),%rcx
5b34(9): xor $0x28,%rcx
5b3d(2): jnz 0xc(%rip)
5b3f(4): add $0x48,%rsp
5b43(1): ret near (%rsp)
5b44(5): call 0xffffbd6c(%rip)
5b49(5): call 0xffffbe57(%rip)

"quotearg_n_custom_mem" :
5b50(4): sub $0x48,%rsp
5b54(3): mov %rcx,%r9
5b57(7): mov 0x2049f2(%rip),%rcx
5b5e(8): movdqa 0x2049ba(%rip),%xmm0
5b66(9): mov $0x28,%rax
5b6f(5): mov %rax,0x38(%rsp)
5b74(2): xor %eax,%eax
5b76(4): movaps %xmm0,(%rsp)
5b7a(3): test %rsi,%rsi
5b7d(5): mov %rcx,0x30(%rsp)
5b82(7): mov $0xa,(%rsp)
5b89(8): movdqa 0x20499f(%rip),%xmm0
5b91(5): movaps %xmm0,0x10(%rsp)
5b96(8): movdqa 0x2049a2(%rip),%xmm0
5b9e(5): movaps %xmm0,0x20(%rsp)
5ba3(2): jz 0x34(%rip)
5ba5(3): test %rdx,%rdx
5ba8(2): jz 0x2f(%rip)
5baa(5): mov %rsi,0x28(%rsp)
5baf(5): mov %rdx,0x30(%rsp)
5bb4(3): mov %rsp,%rcx
5bb7(3): mov %r8,%rdx
5bba(3): mov %r9,%rsi
5bbd(5): call 0xfffff793(%rip)
5bc2(5): mov 0x38(%rsp),%rdi
5bc7(9): xor $0x28,%rdi
5bd0(2): jnz 0xc(%rip)
5bd2(4): add $0x48,%rsp
5bd6(1): ret near (%rsp)
5bd7(5): call 0xffffbcd9(%rip)
5bdc(5): call 0xffffbdc4(%rip)

"quotearg_n_custom" :
5bf0(7): mov $0xffffffff,%r8
5bf7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5c00(3): mov %rdx,%rcx
5c03(7): mov $0xffffffff,%r8
5c0a(3): mov %rsi,%rdx
5c0d(3): mov %rdi,%rsi
5c10(2): xor %edi,%edi
5c12(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5c20(3): mov %rcx,%r8
5c23(3): mov %rdx,%rcx
5c26(3): mov %rsi,%rdx
5c29(3): mov %rdi,%rsi
5c2c(2): xor %edi,%edi
5c2e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5c40(7): lea 0x2043d9(%rip),%rcx
5c47(5): jmp 0xfffff709(%rip)

"quote_mem" :
5c50(7): lea 0x2043c9(%rip),%rcx
5c57(3): mov %rsi,%rdx
5c5a(3): mov %rdi,%rsi
5c5d(2): xor %edi,%edi
5c5f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5c70(7): lea 0x2043a9(%rip),%rcx
5c77(7): mov $0xffffffff,%rdx
5c7e(5): jmp 0xfffff6d2(%rip)

"quote" :
5c90(7): lea 0x204389(%rip),%rcx
5c97(3): mov %rdi,%rsi
5c9a(7): mov $0xffffffff,%rdx
5ca1(2): xor %edi,%edi
5ca3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
5cb0(2): push %r15
5cb2(2): push %r14
5cb4(2): push %r13
5cb6(2): push %r12
5cb8(3): mov %r9,%r12
5cbb(1): push %rbp
5cbc(1): push %rbx
5cbd(3): mov %rdi,%rbp
5cc0(3): mov %r8,%rbx
5cc3(4): sub $0x28,%rsp
5cc7(3): test %rsi,%rsi
5cca(6): jz 0x11e(%rip)
5cd0(3): mov %rdx,%r8
5cd3(7): lea 0x1f6e(%rip),%rdx
5cda(3): mov %rcx,%r9
5cdd(2): xor %eax,%eax
5cdf(3): mov %rsi,%rcx
5ce2(5): mov $0x1,%esi
5ce7(5): call 0xffffbf09(%rip)
5cec(7): lea 0x1f68(%rip),%rsi
5cf3(2): xor %edi,%edi
5cf5(5): mov $0x5,%edx
5cfa(5): call 0xffffbc66(%rip)
5cff(7): lea 0x227a(%rip),%rdx
5d06(3): mov %rax,%rcx
5d09(6): mov $0x7e3,%r8d
5d0f(5): mov $0x1,%esi
5d14(3): mov %rbp,%rdi
5d17(2): xor %eax,%eax
5d19(5): call 0xffffbed7(%rip)
5d1e(7): lea 0x1fc3(%rip),%rsi
5d25(2): xor %edi,%edi
5d27(5): mov $0x5,%edx
5d2c(5): call 0xffffbc34(%rip)
5d31(3): mov %rbp,%rsi
5d34(3): mov %rax,%rdi
5d37(5): call 0xffffbd09(%rip)
5d3c(4): cmp $0x9,%r12
5d40(6): jnbe 0x340(%rip)
5d46(7): lea 0x21fb(%rip),%rdx
5d4d(4): movsxd 0x0(%rdx,%r12,4),%rax
5d51(3): add %rdx,%rax
5d54(2): jmp %rax
5d56(a): nop 0x0(%rax,%rax,1)
5d60(4): mov 0x38(%rbx),%r9
5d64(4): mov 0x10(%rbx),%rax
5d68(7): lea 0x20e9(%rip),%rsi
5d6f(4): mov 0x8(%rbx),%r8
5d73(5): mov $0x5,%edx
5d78(2): xor %edi,%edi
5d7a(4): mov 0x30(%rbx),%r13
5d7e(4): mov 0x28(%rbx),%r12
5d82(5): mov %r9,0x10(%rsp)
5d87(4): mov 0x20(%rbx),%r15
5d8b(4): mov 0x18(%rbx),%r14
5d8f(4): mov %rax,(%rsp)
5d93(5): mov %r8,0x8(%rsp)
5d98(3): mov (%rbx),%rbx
5d9b(5): call 0xffffbbc5(%rip)
5da0(4): sub $0x8,%rsp
5da4(5): mov 0x18(%rsp),%r9
5da9(3): mov %rax,%rdx
5dac(3): mov %rbx,%rcx
5daf(5): mov $0x1,%esi
5db4(3): mov %rbp,%rdi
5db7(2): xor %eax,%eax
5db9(2): push %r9
5dbb(2): push %r13
5dbd(2): push %r12
5dbf(2): push %r15
5dc1(2): push %r14
5dc3(5): mov 0x30(%rsp),%r9
5dc8(5): mov 0x38(%rsp),%r8
5dcd(5): call 0xffffbe23(%rip)
5dd2(4): add $0x30,%rsp
5dd6(4): add $0x28,%rsp
5dda(1): pop %rbx
5ddb(1): pop %rbp
5ddc(2): pop %r12
5dde(2): pop %r13
5de0(2): pop %r14
5de2(2): pop %r15
5de4(1): ret near (%rsp)
5de5(3): nop (%rax)
5de8(3): mov %rcx,%r8
5deb(3): mov %rdx,%rcx
5dee(7): lea 0x1e5f(%rip),%rdx
5df5(5): mov $0x1,%esi
5dfa(2): xor %eax,%eax
5dfc(5): call 0xffffbdf4(%rip)
5e01(5): jmp 0xfffffeeb(%rip)
5e06(a): nop 0x0(%rax,%rax,1)
5e10(4): mov 0x40(%rbx),%r10
5e14(4): mov 0x38(%rbx),%r9
5e18(7): lea 0x2069(%rip),%rsi
5e1f(4): mov 0x10(%rbx),%rax
5e23(4): mov 0x8(%rbx),%r8
5e27(5): mov $0x5,%edx
5e2c(4): mov 0x30(%rbx),%r13
5e30(4): mov 0x28(%rbx),%r12
5e34(4): mov 0x20(%rbx),%r15
5e38(4): mov 0x18(%rbx),%r14
5e3c(3): mov (%rbx),%rbx
5e3f(5): mov %r10,0x18(%rsp)
5e44(5): mov %r9,0x10(%rsp)
5e49(4): mov %rax,(%rsp)
5e4d(5): mov %r8,0x8(%rsp)
5e52(2): xor %edi,%edi
5e54(5): call 0xffffbb0c(%rip)
5e59(5): mov 0x18(%rsp),%r10
5e5e(2): push %r10
5e60(5): jmp 0xffffff44(%rip)
5e65(3): nop (%rax)
5e68(3): mov (%rbx),%rbx
5e6b(7): lea 0x1ded(%rip),%rsi
5e72(5): mov $0x5,%edx
5e77(2): xor %edi,%edi
5e79(5): call 0xffffbae7(%rip)
5e7e(4): add $0x28,%rsp
5e82(3): mov %rbx,%rcx
5e85(3): mov %rbp,%rdi
5e88(1): pop %rbx
5e89(1): pop %rbp
5e8a(2): pop %r12
5e8c(2): pop %r13
5e8e(2): pop %r14
5e90(2): pop %r15
5e92(3): mov %rax,%rdx
5e95(5): mov $0x1,%esi
5e9a(2): xor %eax,%eax
5e9c(5): jmp 0xffffbd54(%rip)
5ea1(7): nop 0x0(%rax)
5ea8(4): mov 0x8(%rbx),%r12
5eac(7): lea 0x1dbc(%rip),%rsi
5eb3(3): mov (%rbx),%rbx
5eb6(5): mov $0x5,%edx
5ebb(2): xor %edi,%edi
5ebd(5): call 0xffffbaa3(%rip)
5ec2(4): add $0x28,%rsp
5ec6(3): mov %r12,%r8
5ec9(3): mov %rbx,%rcx
5ecc(3): mov %rbp,%rdi
5ecf(3): mov %rax,%rdx
5ed2(5): mov $0x1,%esi
5ed7(1): pop %rbx
5ed8(1): pop %rbp
5ed9(2): pop %r12
5edb(2): pop %r13
5edd(2): pop %r14
5edf(2): pop %r15
5ee1(2): xor %eax,%eax
5ee3(5): jmp 0xffffbd0d(%rip)
5ee8(8): nop 0x0(%rax,%rax,1)
5ef0(4): mov 0x10(%rbx),%r13
5ef4(4): mov 0x8(%rbx),%r12
5ef8(7): lea 0x1d87(%rip),%rsi
5eff(3): mov (%rbx),%rbx
5f02(5): mov $0x5,%edx
5f07(2): xor %edi,%edi
5f09(5): call 0xffffba57(%rip)
5f0e(4): add $0x28,%rsp
5f12(3): mov %r13,%r9
5f15(3): mov %r12,%r8
5f18(3): mov %rbx,%rcx
5f1b(3): mov %rbp,%rdi
5f1e(3): mov %rax,%rdx
5f21(1): pop %rbx
5f22(1): pop %rbp
5f23(2): pop %r12
5f25(2): pop %r13
5f27(2): pop %r14
5f29(2): pop %r15
5f2b(5): mov $0x1,%esi
5f30(2): xor %eax,%eax
5f32(5): jmp 0xffffbcbe(%rip)
5f37(9): nop 0x0(%rax,%rax,1)
5f40(7): lea 0x1e71(%rip),%rsi
5f47(5): mov $0x5,%edx
5f4c(2): xor %edi,%edi
5f4e(4): mov 0x18(%rbx),%r14
5f52(4): mov 0x10(%rbx),%r13
5f56(4): mov 0x8(%rbx),%r12
5f5a(3): mov (%rbx),%rbx
5f5d(5): call 0xffffba03(%rip)
5f62(4): sub $0x8,%rsp
5f66(2): push %r14
5f68(3): mov %rax,%rdx
5f6b(3): mov %r13,%r9
5f6e(3): mov %r12,%r8
5f71(3): mov %rbx,%rcx
5f74(3): mov %rbp,%rdi
5f77(5): mov $0x1,%esi
5f7c(2): xor %eax,%eax
5f7e(5): call 0xffffbc72(%rip)
5f83(1): pop %rax
5f84(1): pop %rdx
5f85(4): add $0x28,%rsp
5f89(1): pop %rbx
5f8a(1): pop %rbp
5f8b(2): pop %r12
5f8d(2): pop %r13
5f8f(2): pop %r14
5f91(2): pop %r15
5f93(1): ret near (%rsp)
5f94(4): nop 0x0(%rax)
5f98(4): mov 0x20(%rbx),%r15
5f9c(7): lea 0x1e35(%rip),%rsi
5fa3(5): mov $0x5,%edx
5fa8(2): xor %edi,%edi
5faa(4): mov 0x18(%rbx),%r14
5fae(4): mov 0x10(%rbx),%r13
5fb2(4): mov 0x8(%rbx),%r12
5fb6(3): mov (%rbx),%rbx
5fb9(5): call 0xffffb9a7(%rip)
5fbe(2): push %r15
5fc0(2): jmp 0xffffffa6(%rip)
5fc2(6): nop 0x0(%rax,%rax,1)
5fc8(4): mov 0x8(%rbx),%r8
5fcc(4): mov 0x28(%rbx),%r12
5fd0(7): lea 0x1e29(%rip),%rsi
5fd7(4): mov 0x20(%rbx),%r15
5fdb(4): mov 0x18(%rbx),%r14
5fdf(5): mov $0x5,%edx
5fe4(4): mov 0x10(%rbx),%r13
5fe8(2): xor %edi,%edi
5fea(3): mov (%rbx),%rbx
5fed(4): mov %r8,(%rsp)
5ff1(5): call 0xffffb96f(%rip)
5ff6(4): sub $0x8,%rsp
5ffa(3): mov %r13,%r9
5ffd(2): push %r12
5fff(2): push %r15
6001(2): push %r14
6003(5): mov 0x20(%rsp),%r8
6008(3): mov %rbx,%rcx
600b(3): mov %rax,%rdx
600e(3): mov %rbp,%rdi
6011(5): mov $0x1,%esi
6016(2): xor %eax,%eax
6018(5): call 0xffffbbd8(%rip)
601d(4): add $0x20,%rsp
6021(4): add $0x28,%rsp
6025(1): pop %rbx
6026(1): pop %rbp
6027(2): pop %r12
6029(2): pop %r13
602b(2): pop %r14
602d(2): pop %r15
602f(1): ret near (%rsp)
6030(4): mov 0x10(%rbx),%r9
6034(4): mov 0x30(%rbx),%r13
6038(7): lea 0x1de9(%rip),%rsi
603f(4): mov 0x28(%rbx),%r12
6043(4): mov 0x20(%rbx),%r15
6047(5): mov $0x5,%edx
604c(4): mov 0x18(%rbx),%r14
6050(4): mov 0x8(%rbx),%r8
6054(2): xor %edi,%edi
6056(5): mov %r9,0x8(%rsp)
605b(3): mov (%rbx),%rbx
605e(4): mov %r8,(%rsp)
6062(5): call 0xffffb8fe(%rip)
6067(2): push %r13
6069(2): push %r12
606b(2): push %r15
606d(2): push %r14
606f(5): mov 0x28(%rsp),%r9
6074(2): jmp 0xffffff8f(%rip)
6076(a): nop 0x0(%rax,%rax,1)
6080(4): mov 0x40(%rbx),%r10
6084(4): mov 0x38(%rbx),%r9
6088(5): mov $0x5,%edx
608d(4): mov 0x10(%rbx),%rax
6091(4): mov 0x8(%rbx),%r8
6095(7): lea 0x1e24(%rip),%rsi
609c(4): mov 0x30(%rbx),%r13
60a0(4): mov 0x28(%rbx),%r12
60a4(4): mov 0x20(%rbx),%r15
60a8(4): mov 0x18(%rbx),%r14
60ac(5): mov %r10,0x18(%rsp)
60b1(5): mov %r9,0x10(%rsp)
60b6(4): mov %rax,(%rsp)
60ba(5): mov %r8,0x8(%rsp)
60bf(3): mov (%rbx),%rbx
60c2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
60d0(3): xor %r9d,%r9d
60d3(4): cmp $0x0,(%r8)
60d7(2): jz 0x14(%rip)
60d9(7): nop 0x0(%rax)
60e0(4): add $0x1,%r9
60e4(5): cmp $0x0,0x0(%r8,%r9,8)
60e9(2): jnz 0xfffffff7(%rip)
60eb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
60f0(4): sub $0x68,%rsp
60f4(3): mov %r8,%r10
60f7(3): xor %r9d,%r9d
60fa(9): mov $0x28,%rax
6103(5): mov %rax,0x58(%rsp)
6108(2): xor %eax,%eax
610a(3): mov %rsp,%r8
610d(3): nop (%rax)
6110(3): mov (%r10),%eax
6113(3): cmp $0x2f,%eax
6116(2): jnbe 0x44(%rip)
6118(3): mov %eax,%r11d
611b(4): add 0x10(%r10),%r11
611f(3): add $0x8,%eax
6122(3): mov %eax,(%r10)
6125(3): mov (%r11),%rax
6128(3): test %rax,%rax
612b(4): mov %rax,0x0(%r8,%r9,8)
612f(2): jz 0xc(%rip)
6131(4): add $0x1,%r9
6135(4): cmp $0xa,%r9
6139(2): jnz 0xffffffd7(%rip)
613b(5): call 0xfffffb75(%rip)
6140(5): mov 0x58(%rsp),%rax
6145(9): xor $0x28,%rax
614e(2): jnz 0x7(%rip)
6150(4): add $0x68,%rsp
6154(1): ret near (%rsp)
6155(5): call 0xffffb84b(%rip)
615a(4): mov 0x8(%r10),%r11
615e(4): lea 0x8(%r11),%rax
6162(4): mov %rax,0x8(%r10)
6166(2): jmp 0xffffffbf(%rip)

"version_etc" :
6170(1): push %rbp
6171(1): push %rbx
6172(6): mov $0x20,%r10d
6178(3): xor %r11d,%r11d
617b(7): sub $0xb8,%rsp
6182(9): mov $0x28,%rax
618b(5): mov %rax,0x78(%rsp)
6190(2): xor %eax,%eax
6192(8): lea 0xd0(%rsp),%rax
619a(8): mov %r8,0xa0(%rsp)
61a2(8): lea 0xd0(%rsp),%rbx
61aa(5): lea 0x20(%rsp),%r8
61af(8): mov %r9,0xa8(%rsp)
61b7(8): mov $0x20,0x8(%rsp)
61bf(5): mov %rax,0x10(%rsp)
61c4(8): lea 0x80(%rsp),%rax
61cc(3): xor %r9d,%r9d
61cf(5): mov %rax,0x18(%rsp)
61d4(3): mov %rax,%rbp
61d7(9): nop 0x0(%rax,%rax,1)
61e0(4): cmp $0x2f,%r10d
61e4(2): jnbe 0x58(%rip)
61e6(3): mov %r10d,%eax
61e9(6): mov $0x1,%r11d
61ef(4): add $0x8,%r10d
61f3(3): add %rbp,%rax
61f6(3): mov (%rax),%rax
61f9(3): test %rax,%rax
61fc(4): mov %rax,0x0(%r8,%r9,8)
6200(2): jz 0xc(%rip)
6202(4): add $0x1,%r9
6206(4): cmp $0xa,%r9
620a(2): jnz 0xffffffd6(%rip)
620c(3): test %r11b,%r11b
620f(2): jnz 0x26(%rip)
6211(5): call 0xfffffa9f(%rip)
6216(5): mov 0x78(%rsp),%rax
621b(9): xor $0x28,%rax
6224(2): jnz 0xc(%rip)
6226(7): add $0xb8,%rsp
622d(1): pop %rbx
622e(1): pop %rbp
622f(1): ret near (%rsp)
6230(5): call 0xffffb770(%rip)
6235(5): mov %r10d,0x8(%rsp)
623a(2): jmp 0xffffffd7(%rip)
623c(3): mov %rbx,%rax
623f(4): add $0x8,%rbx
6243(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6250(1): push %rbx
6251(7): lea 0x1a4a(%rip),%rsi
6258(5): mov $0x5,%edx
625d(2): xor %edi,%edi
625f(5): call 0xffffb701(%rip)
6264(7): lea 0x1a4c(%rip),%rdx
626b(3): mov %rax,%rsi
626e(5): mov $0x1,%edi
6273(2): xor %eax,%eax
6275(5): call 0xffffb8bb(%rip)
627a(7): lea 0x1a4c(%rip),%rsi
6281(5): mov $0x5,%edx
6286(2): xor %edi,%edi
6288(5): call 0xffffb6d8(%rip)
628d(7): lea 0x1174(%rip),%rcx
6294(7): lea 0x970(%rip),%rdx
629b(3): mov %rax,%rsi
629e(5): mov $0x1,%edi
62a3(2): xor %eax,%eax
62a5(5): call 0xffffb88b(%rip)
62aa(7): mov 0x203f97(%rip),%rbx
62b1(7): lea 0x1c48(%rip),%rsi
62b8(2): xor %edi,%edi
62ba(5): mov $0x5,%edx
62bf(5): call 0xffffb6a1(%rip)
62c4(3): mov %rbx,%rsi
62c7(3): mov %rax,%rdi
62ca(1): pop %rbx
62cb(5): jmp 0xffffb775(%rip)

"xmalloc" :
62d0(1): push %rbx
62d1(3): mov %rdi,%rbx
62d4(5): call 0xffffb7fc(%rip)
62d9(3): test %rax,%rax
62dc(2): jnz 0x7(%rip)
62de(3): test %rbx,%rbx
62e1(2): jnz 0x4(%rip)
62e3(1): pop %rbx
62e4(1): ret near (%rsp)
62e5(5): call 0x23b(%rip)

"xnmalloc" :
62f0(3): mov %rdi,%rax
62f3(3): mul %rax,%rsi,%rdx
62f6(3): mov %rax,%rdi
62f9(3): seto %al
62fc(3): test %rdi,%rdi
62ff(2): js 0xc(%rip)
6301(3): movzx %al,%eax
6304(3): test %rax,%rax
6307(2): jnz 0x4(%rip)
6309(2): jmp 0xffffffc7(%rip)
630b(4): sub $0x8,%rsp
630f(5): call 0x211(%rip)

"xrealloc" :
6330(3): test %rsi,%rsi
6333(1): push %rbx
6334(3): mov %rsi,%rbx
6337(2): jnz 0x7(%rip)
6339(3): test %rdi,%rdi
633c(2): jnz 0x1c(%rip)
633e(3): mov %rbx,%rsi
6341(5): call 0xffffb7cf(%rip)
6346(3): test %rax,%rax
6349(2): jnz 0x7(%rip)
634b(3): test %rbx,%rbx
634e(2): jnz 0x13(%rip)
6350(1): pop %rbx
6351(1): ret near (%rsp)
6352(6): nop 0x0(%rax,%rax,1)
6358(5): call 0xffffb548(%rip)
635d(2): xor %eax,%eax
635f(1): pop %rbx
6360(1): ret near (%rsp)
6361(5): call 0x1bf(%rip)

"xnrealloc" :
6370(3): mov %rsi,%rax
6373(3): mul %rax,%rdx,%rdx
6376(3): mov %rax,%rsi
6379(3): seto %al
637c(3): test %rsi,%rsi
637f(2): js 0xc(%rip)
6381(3): movzx %al,%eax
6384(3): test %rax,%rax
6387(2): jnz 0x4(%rip)
6389(2): jmp 0xffffffa7(%rip)
638b(4): sub $0x8,%rsp
638f(5): call 0x191(%rip)

"x2nrealloc" :
63a0(3): test %rdi,%rdi
63a3(3): mov %rdx,%r9
63a6(3): mov (%rsi),%rcx
63a9(2): jz 0x37(%rip)
63ab(2): xor %edx,%edx
63ad(a): mov $0x6148914691236517204,%rax
63b7(3): div %r9,%rax
63ba(3): cmp %rcx,%rax
63bd(2): jbe 0x3e(%rip)
63bf(3): mov %rcx,%rax
63c2(3): shr $0x1,%rax
63c5(5): lea 0x1(%rax,%rcx,1),%rcx
63ca(3): mov %rcx,(%rsi)
63cd(4): imul %r9,%rcx
63d1(3): mov %rcx,%rsi
63d4(5): jmp 0xffffff5c(%rip)
63d9(7): nop 0x0(%rax)
63e0(3): test %rcx,%rcx
63e3(2): jz 0x25(%rip)
63e5(3): mov %rcx,%rax
63e8(3): mul %rax,%r9,%rdx
63eb(3): seto %dl
63ee(3): test %rax,%rax
63f1(3): movzx %dl,%edx
63f4(2): js 0x7(%rip)
63f6(3): test %rdx,%rdx
63f9(2): jz 0xffffffd1(%rip)
63fb(4): sub $0x8,%rsp
63ff(5): call 0x121(%rip)
6404(4): nop 0x0(%rax)
6408(2): xor %edx,%edx
640a(5): mov $0x80,%eax
640f(3): xor %r8d,%r8d
6412(3): div %r9,%rax
6415(3): test %rax,%rax
6418(4): setz %r8b
641c(4): lea 0x0(%r8,%rax,1),%rcx
6420(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6430(3): test %rdi,%rdi
6433(3): mov (%rsi),%rax
6436(2): jz 0x2a(%rip)
6438(a): mov $0x6148914691236517203,%rdx
6442(3): cmp %rdx,%rax
6445(2): jnbe 0x2c(%rip)
6447(3): mov %rax,%rdx
644a(3): shr $0x1,%rdx
644d(5): lea 0x1(%rdx,%rax,1),%rax
6452(3): mov %rax,(%rsi)
6455(3): mov %rax,%rsi
6458(5): jmp 0xfffffed8(%rip)
645d(3): nop (%rax)
6460(3): test %rax,%rax
6463(5): mov $0x80,%edx
6468(4): cmove %rdx,%rax
646c(3): test %rax,%rax
646f(2): jns 0xffffffe3(%rip)
6471(4): sub $0x8,%rsp
6475(5): call 0xab(%rip)

"xzalloc" :
6480(1): push %rbx
6481(3): mov %rdi,%rbx
6484(5): call 0xfffffe4c(%rip)
6489(3): mov %rbx,%rdx
648c(2): xor %esi,%esi
648e(3): mov %rax,%rdi
6491(1): pop %rbx
6492(5): jmp 0xffffb57e(%rip)

"xcalloc" :
64a0(3): mov %rdi,%rax
64a3(4): sub $0x8,%rsp
64a7(3): mul %rax,%rsi,%rdx
64aa(3): seto %dl
64ad(3): test %rax,%rax
64b0(2): js 0x19(%rip)
64b2(3): movzx %dl,%edx
64b5(3): test %rdx,%rdx
64b8(2): jnz 0x11(%rip)
64ba(5): call 0xffffb596(%rip)
64bf(3): test %rax,%rax
64c2(2): jz 0x7(%rip)
64c4(4): add $0x8,%rsp
64c8(1): ret near (%rsp)
64c9(5): call 0x57(%rip)

"xmemdup" :
64d0(1): push %rbp
64d1(1): push %rbx
64d2(3): mov %rdi,%rbp
64d5(3): mov %rsi,%rdi
64d8(3): mov %rsi,%rbx
64db(4): sub $0x8,%rsp
64df(5): call 0xfffffdf1(%rip)
64e4(4): add $0x8,%rsp
64e8(3): mov %rbx,%rdx
64eb(3): mov %rbp,%rsi
64ee(1): pop %rbx
64ef(1): pop %rbp
64f0(3): mov %rax,%rdi
64f3(5): jmp 0xffffb5bd(%rip)

"xstrdup" :
6500(1): push %rbx
6501(3): mov %rdi,%rbx
6504(5): call 0xffffb47c(%rip)
6509(3): mov %rbx,%rdi
650c(4): lea 0x1(%rax),%rsi
6510(1): pop %rbx
6511(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
6520(7): lea 0x1a88(%rip),%rsi
6527(4): sub $0x8,%rsp
652b(5): mov $0x5,%edx
6530(2): xor %edi,%edi
6532(5): call 0xffffb42e(%rip)
6537(6): mov 0x203adb(%rip),%edi
653d(7): lea 0x11f1(%rip),%rdx
6544(3): mov %rax,%rcx
6547(2): xor %esi,%esi
6549(2): xor %eax,%eax
654b(5): call 0xffffb5f5(%rip)
6550(5): call 0xffffb360(%rip)

"rpl_mbrtowc" :
6560(2): push %r13
6562(2): push %r12
6564(3): mov %rsi,%r13
6567(1): push %rbp
6568(1): push %rbx
6569(3): mov %rdi,%rbx
656c(3): mov %rdx,%r12
656f(4): sub $0x18,%rsp
6573(9): mov $0x28,%rax
657c(5): mov %rax,0x8(%rsp)
6581(2): xor %eax,%eax
6583(5): lea 0x4(%rsp),%rax
6588(3): test %rdi,%rdi
658b(4): cmove %rax,%rbx
658f(3): mov %rbx,%rdi
6592(5): call 0xffffb42e(%rip)
6597(4): cmp $0xfffffffd,%rax
659b(3): mov %rax,%rbp
659e(2): jbe 0x22(%rip)
65a0(3): test %r12,%r12
65a3(2): jz 0x1d(%rip)
65a5(2): xor %edi,%edi
65a7(5): call 0x339(%rip)
65ac(2): test %al,%al
65ae(2): jnz 0x12(%rip)
65b0(5): movzx 0x0(%r13),%eax
65b5(5): mov $0x1,%ebp
65ba(2): mov %eax,(%rbx)
65bc(4): nop 0x0(%rax)
65c0(5): mov 0x8(%rsp),%rdx
65c5(9): xor $0x28,%rdx
65ce(3): mov %rbp,%rax
65d1(2): jnz 0xd(%rip)
65d3(4): add $0x18,%rsp
65d7(1): pop %rbx
65d8(1): pop %rbp
65d9(2): pop %r12
65db(2): pop %r13
65dd(1): ret near (%rsp)
65de(5): call 0xffffb3c2(%rip)

"str2sig" :
65f0(2): push %r13
65f2(2): push %r12
65f4(3): mov %rsi,%r13
65f7(1): push %rbp
65f8(1): push %rbx
65f9(2): xor %ebx,%ebx
65fb(3): mov %rdi,%r12
65fe(7): lea 0x203a7f(%rip),%rbp
6605(4): sub $0x18,%rsp
6609(9): mov $0x28,%rax
6612(5): mov %rax,0x8(%rsp)
6617(2): xor %eax,%eax
6619(3): movsx (%rdi),%eax
661c(3): sub $0x30,%eax
661f(3): cmp $0x9,%eax
6622(2): jnbe 0x1a(%rip)
6624(2): jmp 0x5c(%rip)
6626(a): nop 0x0(%rax,%rax,1)
6630(3): add $0x1,%ebx
6633(4): add $0xc,%rbp
6637(3): cmp $0x23,%ebx
663a(2): jz 0x76(%rip)
663c(3): mov %r12,%rsi
663f(3): mov %rbp,%rdi
6642(5): call 0xffffb42e(%rip)
6647(2): test %eax,%eax
6649(2): jnz 0xffffffe7(%rip)
664b(4): lea 0x0(%rbx,%rbx,2),%rdx
664f(7): lea 0x203a2a(%rip),%rax
6656(3): mov 0x0(%rax,%rdx,4),%eax
6659(4): mov %eax,0x0(%r13)
665d(3): sar $0x1f,%eax
6660(5): mov 0x8(%rsp),%rcx
6665(9): xor $0x28,%rcx
666e(6): jnz 0x102(%rip)
6674(4): add $0x18,%rsp
6678(1): pop %rbx
6679(1): pop %rbp
667a(2): pop %r12
667c(2): pop %r13
667e(1): ret near (%rsp)
667f(1): nop 
6680(5): mov $0xa,%edx
6685(3): mov %rsp,%rsi
6688(5): call 0xffffb408(%rip)
668d(4): mov (%rsp),%rdx
6691(3): cmp $0x0,(%rdx)
6694(2): jnz 0x8(%rip)
6696(4): cmp $0x40,%rax
669a(2): jle 0xffffffbf(%rip)
669c(8): mov $0xffffffff,0x0(%r13)
66a4(5): mov $0xffffffff,%eax
66a9(2): jmp 0xffffffb7(%rip)
66ab(5): nop 0x0(%rax,%rax,1)
66b0(5): call 0xffffb500(%rip)
66b5(2): mov %eax,%ebp
66b7(5): call 0xffffb549(%rip)
66bc(2): test %ebp,%ebp
66be(2): mov %eax,%ebx
66c0(2): jle 0x1c(%rip)
66c2(7): lea 0x18f7(%rip),%rdi
66c9(5): mov $0x5,%ecx
66ce(3): mov %r12,%rsi
66d1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
66d3(3): setnbe %al
66d6(2): sbb $0x0,%al
66d8(2): test %al,%al
66da(2): jz 0x59(%rip)
66dc(2): test %ebx,%ebx
66de(2): jle 0xffffffbe(%rip)
66e0(7): lea 0x18df(%rip),%rdi
66e7(5): mov $0x5,%ecx
66ec(3): mov %r12,%rsi
66ef(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
66f1(3): setnbe %al
66f4(2): sbb $0x0,%al
66f6(2): test %al,%al
66f8(2): jnz 0xffffffa4(%rip)
66fa(5): lea 0x5(%r12),%rdi
66ff(5): mov $0xa,%edx
6704(3): mov %rsp,%rsi
6707(5): call 0xffffb389(%rip)
670c(4): mov (%rsp),%rdx
6710(3): cmp $0x0,(%rdx)
6713(2): jnz 0xffffff89(%rip)
6715(2): sub %ebx,%ebp
6717(3): movsxd %ebp,%rbp
671a(3): cmp %rbp,%rax
671d(6): jl 0xffffff7f(%rip)
6723(3): test %rax,%rax
6726(6): jnle 0xffffff76(%rip)
672c(2): add %ebx,%eax
672e(5): jmp 0xffffff2b(%rip)
6733(5): lea 0x5(%r12),%rdi
6738(5): mov $0xa,%edx
673d(3): mov %rsp,%rsi
6740(5): call 0xffffb350(%rip)
6745(4): mov (%rsp),%rdx
6749(3): cmp $0x0,(%rdx)
674c(6): jnz 0xffffff50(%rip)
6752(3): test %rax,%rax
6755(6): js 0xffffff47(%rip)
675b(2): sub %ebp,%ebx
675d(3): movsxd %ebx,%rdx
6760(3): cmp %rdx,%rax
6763(6): jnle 0xffffff39(%rip)
6769(2): add %ebp,%eax
676b(5): jmp 0xfffffeee(%rip)
6770(5): call 0xffffb230(%rip)

"sig2str" :
6780(1): push %rbp
6781(7): lea 0x2038f8(%rip),%rax
6788(1): push %rbx
6789(2): xor %edx,%edx
678b(2): mov %edi,%ebx
678d(3): mov %rsi,%rdi
6790(4): sub $0x18,%rsp
6794(3): mov %rax,%rcx
6797(2): jmp 0x15(%rip)
6799(7): nop 0x0(%rax)
67a0(3): add $0x1,%edx
67a3(4): add $0xc,%rcx
67a7(3): cmp $0x23,%edx
67aa(2): jz 0x26(%rip)
67ac(2): cmp %ebx,(%rcx)
67ae(2): jnz 0xfffffff2(%rip)
67b0(4): lea 0x0(%rdx,%rdx,2),%rdx
67b4(5): lea 0x4(%rax,%rdx,4),%rsi
67b9(5): call 0xffffb137(%rip)
67be(2): xor %eax,%eax
67c0(4): add $0x18,%rsp
67c4(1): pop %rbx
67c5(1): pop %rbp
67c6(1): ret near (%rsp)
67c7(9): nop 0x0(%rax,%rax,1)
67d0(5): mov %rdi,0x8(%rsp)
67d5(5): call 0xffffb3db(%rip)
67da(2): mov %eax,%ebp
67dc(5): call 0xffffb424(%rip)
67e1(2): cmp %ebx,%ebp
67e3(2): jnle 0x6e(%rip)
67e5(2): cmp %ebx,%eax
67e7(2): jl 0x6a(%rip)
67e9(2): mov %eax,%edx
67eb(5): mov 0x8(%rsp),%rdi
67f0(2): sub %ebp,%edx
67f2(2): sar $0x1,%edx
67f4(2): add %ebp,%edx
67f6(2): cmp %ebx,%edx
67f8(2): jnl 0x48(%rip)
67fa(5): mov $0x58,%edx
67ff(6): mov $0x414d5452,(%rdi)
6805(2): mov %eax,%ebp
6807(4): mov %dx,0x4(%rdi)
680b(2): mov %ebx,%eax
680d(2): sub %ebp,%eax
680f(2): jz 0xffffffb1(%rip)
6811(7): lea 0x17b4(%rip),%rcx
6818(3): mov %eax,%r8d
681b(4): add $0x5,%rdi
681f(7): mov $0xffffffff,%rdx
6826(5): mov $0x1,%esi
682b(2): xor %eax,%eax
682d(5): call 0xffffb423(%rip)
6832(4): add $0x18,%rsp
6836(2): xor %eax,%eax
6838(1): pop %rbx
6839(1): pop %rbp
683a(1): ret near (%rsp)
683b(5): nop 0x0(%rax,%rax,1)
6840(5): mov $0x4e,%ecx
6845(6): mov $0x494d5452,(%rdi)
684b(4): mov %cx,0x4(%rdi)
684f(2): jmp 0xffffffbc(%rip)
6851(5): mov $0xffffffff,%eax
6856(5): jmp 0xffffff6a(%rip)

"close_stream" :
6860(2): push %r12
6862(1): push %rbp
6863(3): mov %rdi,%rbp
6866(1): push %rbx
6867(5): call 0xffffb099(%rip)
686c(3): mov 0x0(%rbp),%ebx
686f(3): mov %rbp,%rdi
6872(3): mov %rax,%r12
6875(5): call 0x10b(%rip)
687a(3): and $0x20,%ebx
687d(2): test %ebx,%ebx
687f(2): jnz 0x19(%rip)
6881(2): test %eax,%eax
6883(2): jz 0xc(%rip)
6885(3): test %r12,%r12
6888(5): mov $0xffffffff,%eax
688d(2): jz 0x3b(%rip)
688f(1): pop %rbx
6890(1): pop %rbp
6891(2): pop %r12
6893(1): ret near (%rsp)
6894(4): nop 0x0(%rax)
6898(2): test %eax,%eax
689a(2): jnz 0x1e(%rip)
689c(5): call 0xffffb024(%rip)
68a1(6): mov $0x0,(%rax)
68a7(5): mov $0xffffffff,%eax
68ac(1): pop %rbx
68ad(1): pop %rbp
68ae(2): pop %r12
68b0(1): ret near (%rsp)
68b1(7): nop 0x0(%rax)
68b8(1): pop %rbx
68b9(5): mov $0xffffffff,%eax
68be(1): pop %rbp
68bf(2): pop %r12
68c1(1): ret near (%rsp)
68c2(6): nop 0x0(%rax,%rax,1)
68c8(5): call 0xffffaff8(%rip)
68cd(3): cmp $0x9,(%rax)
68d0(1): pop %rbx
68d1(1): pop %rbp
68d2(2): pop %r12
68d4(3): setnz %al
68d7(3): movzx %al,%eax
68da(2): neg %eax
68dc(1): ret near (%rsp)

"hard_locale" :
68e0(4): sub $0x8,%rsp
68e4(2): xor %esi,%esi
68e6(5): call 0xffffb23a(%rip)
68eb(3): mov %rax,%rdx
68ee(5): mov $0x1,%eax
68f3(3): test %rdx,%rdx
68f6(2): jz 0x1f(%rip)
68f8(7): lea 0x16d1(%rip),%rdi
68ff(5): mov $0x2,%ecx
6904(3): mov %rdx,%rsi
6907(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6909(3): setnbe %cl
690c(3): sbb $0x0,%cl
690f(2): xor %eax,%eax
6911(2): test %cl,%cl
6913(2): jnz 0xd(%rip)
6915(4): add $0x8,%rsp
6919(1): ret near (%rsp)
691a(6): nop 0x0(%rax,%rax,1)
6920(7): lea 0x16ab(%rip),%rdi
6927(5): mov $0x6,%ecx
692c(3): mov %rdx,%rsi
692f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6931(3): setnbe %al
6934(2): sbb $0x0,%al
6936(2): test %al,%al
6938(3): setnz %al
693b(4): add $0x8,%rsp
693f(1): ret near (%rsp)

"locale_charset" :
6940(4): sub $0x8,%rsp
6944(5): mov $0xe,%edi
6949(5): call 0xffffb1a7(%rip)
694e(3): test %rax,%rax
6951(2): jz 0x1f(%rip)
6953(3): cmp $0x0,(%rax)
6956(7): lea 0x167b(%rip),%rdx
695d(4): cmove %rdx,%rax
6961(4): add $0x8,%rsp
6965(1): ret near (%rsp)
6966(a): nop 0x0(%rax,%rax,1)
6970(7): lea 0x1661(%rip),%rax
6977(4): add $0x8,%rsp
697b(1): ret near (%rsp)

"rpl_fclose" :
6980(2): push %r12
6982(1): push %rbp
6983(1): push %rbx
6984(3): mov %rdi,%rbx
6987(5): call 0xffffb139(%rip)
698c(2): test %eax,%eax
698e(3): mov %rbx,%rdi
6991(2): js 0x56(%rip)
6993(5): call 0xffffb16d(%rip)
6998(2): test %eax,%eax
699a(2): jnz 0x2e(%rip)
699c(3): mov %rbx,%rdi
699f(5): call 0x61(%rip)
69a4(2): test %eax,%eax
69a6(2): jz 0x3e(%rip)
69a8(5): call 0xffffaf18(%rip)
69ad(3): mov (%rax),%r12d
69b0(3): mov %rbx,%rdi
69b3(3): mov %rax,%rbp
69b6(5): call 0xffffaf7a(%rip)
69bb(3): test %r12d,%r12d
69be(2): jnz 0x32(%rip)
69c0(1): pop %rbx
69c1(1): pop %rbp
69c2(2): pop %r12
69c4(1): ret near (%rsp)
69c5(3): nop (%rax)
69c8(3): mov %rbx,%rdi
69cb(5): call 0xffffb0f5(%rip)
69d0(2): xor %esi,%esi
69d2(5): mov $0x1,%edx
69d7(2): mov %eax,%edi
69d9(5): call 0xffffb017(%rip)
69de(4): cmp $0xffffffff,%rax
69e2(2): jnz 0xffffffba(%rip)
69e4(3): mov %rbx,%rdi
69e7(1): pop %rbx
69e8(1): pop %rbp
69e9(2): pop %r12
69eb(5): jmp 0xffffaf45(%rip)
69f0(4): mov %r12d,0x0(%rbp)
69f4(5): mov $0xffffffff,%eax
69f9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
6a00(3): test %rdi,%rdi
6a03(1): push %rbx
6a04(3): mov %rdi,%rbx
6a07(2): jz 0x13(%rip)
6a09(5): call 0xffffb0f7(%rip)
6a0e(2): test %eax,%eax
6a10(2): jz 0xa(%rip)
6a12(6): test $0x100,(%rbx)
6a18(2): jnz 0x10(%rip)
6a1a(3): mov %rbx,%rdi
6a1d(1): pop %rbx
6a1e(5): jmp 0xffffb0c2(%rip)
6a23(5): nop 0x0(%rax,%rax,1)
6a28(3): mov %rbx,%rdi
6a2b(5): mov $0x1,%edx
6a30(2): xor %esi,%esi
6a32(5): call 0xe(%rip)
6a37(3): mov %rbx,%rdi
6a3a(1): pop %rbx
6a3b(5): jmp 0xffffb0a5(%rip)

"rpl_fseeko" :
6a40(4): mov 0x8(%rdi),%rax
6a44(4): cmp %rax,0x10(%rdi)
6a48(2): jz 0x8(%rip)
6a4a(5): jmp 0xffffb106(%rip)
6a4f(1): nop 
6a50(4): mov 0x20(%rdi),%rax
6a54(4): cmp %rax,0x28(%rdi)
6a58(2): jnz 0xfffffff2(%rip)
6a5a(5): cmp $0x0,0x48(%rdi)
6a5f(2): jnz 0xffffffeb(%rip)
6a61(2): push %r12
6a63(1): push %rbp
6a64(3): mov %edx,%r12d
6a67(1): push %rbx
6a68(3): mov %rsi,%rbp
6a6b(3): mov %rdi,%rbx
6a6e(5): call 0xffffb052(%rip)
6a73(3): mov %r12d,%edx
6a76(3): mov %rbp,%rsi
6a79(2): mov %eax,%edi
6a7b(5): call 0xffffaf75(%rip)
6a80(4): cmp $0xffffffff,%rax
6a84(2): jz 0xe(%rip)
6a86(3): and $0xef,(%rbx)
6a89(7): mov %rax,0x90(%rbx)
6a90(2): xor %eax,%eax
6a92(1): pop %rbx
6a93(1): pop %rbp
6a94(2): pop %r12
6a96(1): ret near (%rsp)

"__libc_csu_init" :
6aa0(2): push %r15
6aa2(2): push %r14
6aa4(3): mov %rdx,%r15
6aa7(2): push %r13
6aa9(2): push %r12
6aab(7): lea 0x202f1e(%rip),%r12
6ab2(1): push %rbp
6ab3(7): lea 0x202f1e(%rip),%rbp
6aba(1): push %rbx
6abb(3): mov %edi,%r13d
6abe(3): mov %rsi,%r14
6ac1(3): sub %r12,%rbp
6ac4(4): sub $0x8,%rsp
6ac8(4): sar $0x3,%rbp
6acc(5): call 0xffffad8c(%rip)
6ad1(3): test %rbp,%rbp
6ad4(2): jz 0x22(%rip)
6ad6(2): xor %ebx,%ebx
6ad8(8): nop 0x0(%rax,%rax,1)
6ae0(3): mov %r15,%rdx
6ae3(3): mov %r14,%rsi
6ae6(3): mov %r13d,%edi
6ae9(4): call 0x0(%r12,%rbx,8)
6aed(4): add $0x1,%rbx
6af1(3): cmp %rbx,%rbp
6af4(2): jnz 0xffffffec(%rip)
6af6(4): add $0x8,%rsp
6afa(1): pop %rbx
6afb(1): pop %rbp
6afc(2): pop %r12
6afe(2): pop %r13
6b00(2): pop %r14
6b02(2): pop %r15
6b04(1): ret near (%rsp)

"atexit" :
6b20(7): mov 0x2034e1(%rip),%rdx
6b27(2): xor %esi,%esi
6b29(5): jmp 0xffffb077(%rip)

"_fini" :
6b30(4): sub $0x8,%rsp
6b34(4): add $0x8,%rsp
6b38(1): ret near (%rsp)

