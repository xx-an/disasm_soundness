
"__snprintf_chk@plt" :
17c0(6): jmp 0x20e63a(%rip)
17c6(5): push $0x0

"free@plt" :
17d0(6): jmp 0x20e632(%rip)
17d6(5): push $0x1

"abort@plt" :
17e0(6): jmp 0x20e62a(%rip)
17e6(5): push $0x2

"__errno_location@plt" :
17f0(6): jmp 0x20e622(%rip)
17f6(5): push $0x3

"strncmp@plt" :
1800(6): jmp 0x20e61a(%rip)
1806(5): push $0x4

"_exit@plt" :
1810(6): jmp 0x20e612(%rip)
1816(5): push $0x5

"__fpending@plt" :
1820(6): jmp 0x20e60a(%rip)
1826(5): push $0x6

"puts@plt" :
1830(6): jmp 0x20e602(%rip)
1836(5): push $0x7

"ferror@plt" :
1840(6): jmp 0x20e5fa(%rip)
1846(5): push $0x8

"strtod@plt" :
1850(6): jmp 0x20e5f2(%rip)
1856(5): push $0x9

"localeconv@plt" :
1860(6): jmp 0x20e5ea(%rip)
1866(5): push $0xa

"fread_unlocked@plt" :
1870(6): jmp 0x20e5e2(%rip)
1876(5): push $0xb

"textdomain@plt" :
1880(6): jmp 0x20e5da(%rip)
1886(5): push $0xc

"fclose@plt" :
1890(6): jmp 0x20e5d2(%rip)
1896(5): push $0xd

"bindtextdomain@plt" :
18a0(6): jmp 0x20e5ca(%rip)
18a6(5): push $0xe

"dcgettext@plt" :
18b0(6): jmp 0x20e5c2(%rip)
18b6(5): push $0xf

"__ctype_get_mb_cur_max@plt" :
18c0(6): jmp 0x20e5ba(%rip)
18c6(5): push $0x10

"strlen@plt" :
18d0(6): jmp 0x20e5b2(%rip)
18d6(5): push $0x11

"__stack_chk_fail@plt" :
18e0(6): jmp 0x20e5aa(%rip)
18e6(5): push $0x12

"getopt_long@plt" :
18f0(6): jmp 0x20e5a2(%rip)
18f6(5): push $0x13

"mbrtowc@plt" :
1900(6): jmp 0x20e59a(%rip)
1906(5): push $0x14

"strchr@plt" :
1910(6): jmp 0x20e592(%rip)
1916(5): push $0x15

"__overflow@plt" :
1920(6): jmp 0x20e58a(%rip)
1926(5): push $0x16

"strrchr@plt" :
1930(6): jmp 0x20e582(%rip)
1936(5): push $0x17

"lseek@plt" :
1940(6): jmp 0x20e57a(%rip)
1946(5): push $0x18

"__assert_fail@plt" :
1950(6): jmp 0x20e572(%rip)
1956(5): push $0x19

"__strtoul_internal@plt" :
1960(6): jmp 0x20e56a(%rip)
1966(5): push $0x1a

"strtof@plt" :
1970(6): jmp 0x20e562(%rip)
1976(5): push $0x1b

"memset@plt" :
1980(6): jmp 0x20e55a(%rip)
1986(5): push $0x1c

"fgetc@plt" :
1990(6): jmp 0x20e552(%rip)
1996(5): push $0x1d

"memcmp@plt" :
19a0(6): jmp 0x20e54a(%rip)
19a6(5): push $0x1e

"fputs_unlocked@plt" :
19b0(6): jmp 0x20e542(%rip)
19b6(5): push $0x1f

"calloc@plt" :
19c0(6): jmp 0x20e53a(%rip)
19c6(5): push $0x20

"memcpy@plt" :
19d0(6): jmp 0x20e532(%rip)
19d6(5): push $0x21

"fileno@plt" :
19e0(6): jmp 0x20e52a(%rip)
19e6(5): push $0x22

"malloc@plt" :
19f0(6): jmp 0x20e522(%rip)
19f6(5): push $0x23

"fflush@plt" :
1a00(6): jmp 0x20e51a(%rip)
1a06(5): push $0x24

"nl_langinfo@plt" :
1a10(6): jmp 0x20e512(%rip)
1a16(5): push $0x25

"__fxstat@plt" :
1a20(6): jmp 0x20e50a(%rip)
1a26(5): push $0x26

"__freading@plt" :
1a30(6): jmp 0x20e502(%rip)
1a36(5): push $0x27

"fwrite_unlocked@plt" :
1a40(6): jmp 0x20e4fa(%rip)
1a46(5): push $0x28

"realloc@plt" :
1a50(6): jmp 0x20e4f2(%rip)
1a56(5): push $0x29

"setlocale@plt" :
1a60(6): jmp 0x20e4ea(%rip)
1a66(5): push $0x2a

"__printf_chk@plt" :
1a70(6): jmp 0x20e4e2(%rip)
1a76(5): push $0x2b

"setvbuf@plt" :
1a80(6): jmp 0x20e4da(%rip)
1a86(5): push $0x2c

"strtold@plt" :
1a90(6): jmp 0x20e4d2(%rip)
1a96(5): push $0x2d

"error@plt" :
1aa0(6): jmp 0x20e4ca(%rip)
1aa6(5): push $0x2e

"fseeko@plt" :
1ab0(6): jmp 0x20e4c2(%rip)
1ab6(5): push $0x2f

"fopen@plt" :
1ac0(6): jmp 0x20e4ba(%rip)
1ac6(5): push $0x30

"__fread_unlocked_chk@plt" :
1ad0(6): jmp 0x20e4b2(%rip)
1ad6(5): push $0x31

"__cxa_atexit@plt" :
1ae0(6): jmp 0x20e4aa(%rip)
1ae6(5): push $0x32

"exit@plt" :
1af0(6): jmp 0x20e4a2(%rip)
1af6(5): push $0x33

"fwrite@plt" :
1b00(6): jmp 0x20e49a(%rip)
1b06(5): push $0x34

"__fprintf_chk@plt" :
1b10(6): jmp 0x20e492(%rip)
1b16(5): push $0x35

"mbsinit@plt" :
1b20(6): jmp 0x20e48a(%rip)
1b26(5): push $0x36

"iswprint@plt" :
1b30(6): jmp 0x20e482(%rip)
1b36(5): push $0x37

"__ctype_b_loc@plt" :
1b40(6): jmp 0x20e47a(%rip)
1b46(5): push $0x38

"__sprintf_chk@plt" :
1b50(6): jmp 0x20e472(%rip)
1b56(5): push $0x39

".plt.got" :
1b60(6): jmp 0x20e48a(%rip)
1b66(2): nop 

"_init" :
1790(4): sub $0x8,%rsp
1794(7): mov 0x20e845(%rip),%rax
179b(3): test %rax,%rax
179e(2): jz 0x4(%rip)
17a0(2): call %rax
17a2(4): add $0x8,%rsp
17a6(1): ret near (%rsp)

"main" :
1b70(2): push %r15
1b72(2): push %r14
1b74(3): mov %edi,%r14d
1b77(2): push %r13
1b79(2): push %r12
1b7b(3): mov %rsi,%r13
1b7e(1): push %rbp
1b7f(1): push %rbx
1b80(4): sub $0x58,%rsp
1b84(3): mov (%rsi),%rdi
1b87(9): mov $0x28,%rax
1b90(5): mov %rax,0x48(%rsp)
1b95(2): xor %eax,%eax
1b97(5): call 0x3f79(%rip)
1b9c(7): lea 0xb21e(%rip),%rsi
1ba3(5): mov $0x6,%edi
1ba8(5): call 0xfffffeb8(%rip)
1bad(7): lea 0x92af(%rip),%rsi
1bb4(7): lea 0x927f(%rip),%rdi
1bbb(5): call 0xfffffce5(%rip)
1bc0(7): lea 0x9273(%rip),%rdi
1bc7(5): call 0xfffffcb9(%rip)
1bcc(7): lea 0x3a5d(%rip),%rdi
1bd3(5): call 0x90bd(%rip)
1bd8(7): lea 0x20e5a1(%rip),%rax
1bdf(4): lea 0x24(%rax),%rdx
1be3(5): nop 0x0(%rax,%rax,1)
1be8(6): mov $0x0,(%rax)
1bee(4): add $0x4,%rax
1bf2(3): cmp %rdx,%rax
1bf5(2): jnz 0xfffffff3(%rip)
1bf7(7): lea 0x20e522(%rip),%rax
1bfe(a): mov $0x1,0x20e57c(%rip)
1c08(a): mov $0x2,0x20e576(%rip)
1c12(a): mov $0x3,0x20e574(%rip)
1c1c(a): mov $0x5,0x20e57a(%rip)
1c26(4): lea 0x44(%rax),%rdx
1c2a(6): nop 0x0(%rax,%rax,1)
1c30(6): mov $0x0,(%rax)
1c36(4): add $0x4,%rax
1c3a(3): cmp %rax,%rdx
1c3d(2): jnz 0xfffffff3(%rip)
1c3f(7): lea 0x124a(%rip),%rax
1c46(5): lea 0x20(%rsp),%rbx
1c4b(7): lea 0xa41e(%rip),%rbp
1c52(a): mov $0x6,0x20e4d4(%rip)
1c5c(a): mov $0x8,0x20e4fa(%rip)
1c66(6): mov $0x1,%r12d
1c6c(7): mov %rax,0x20e58d(%rip)
1c73(5): lea 0x28(%rsp),%rax
1c78(a): mov $0x7,0x20e4be(%rip)
1c82(b): mov $0x0,0x20e543(%rip)
1c8d(b): mov $0x0,0x20e530(%rip)
1c98(3): xor %r15d,%r15d
1c9b(b): mov $0x0,0x20e532(%rip)
1ca6(a): mov $0x8,0x20e574(%rip)
1cb0(a): mov $0x7,0x20e566(%rip)
1cba(7): mov $0x0,0x20e551(%rip)
1cc1(4): mov $0x0,(%rsp)
1cc5(5): mov %rax,0x8(%rsp)
1cca(6): nop 0x0(%rax,%rax,1)
1cd0(7): lea 0x20dd09(%rip),%rcx
1cd7(7): lea 0xa822(%rip),%rdx
1cde(3): mov %rbx,%r8
1ce1(3): mov %r13,%rsi
1ce4(3): mov %r14d,%edi
1ce7(8): mov $0xffffffff,0x20(%rsp)
1cef(5): call 0xfffffc01(%rip)
1cf4(3): cmp $0xff,%eax
1cf7(6): jz 0x409(%rip)
1cfd(5): add $0x83,%eax
1d02(5): cmp $0x104,%eax
1d07(6): jnbe 0x7d1(%rip)
1d0d(5): movsxd 0x0(%rbp,%rax,4),%rax
1d12(3): add %rbp,%rax
1d15(2): jmp %rax
1d17(9): nop 0x0(%rax,%rax,1)
1d20(7): mov 0x20e2f9(%rip),%r9
1d27(7): mov 0x20e392(%rip),%rsi
1d2e(7): lea 0x20de2b(%rip),%rdx
1d35(7): lea 0xa7bc(%rip),%rcx
1d3c(7): lea 0x9138(%rip),%rdi
1d43(6): mov $0x4,%r8d
1d49(5): call 0x3807(%rip)
1d4e(7): lea 0xa7a3(%rip),%rdx
1d55(3): mov 0x0(%rdx,%rax,4),%eax
1d58(2): test %eax,%eax
1d5a(6): jz 0x39a(%rip)
1d60(3): sub $0x1,%eax
1d63(6): jnz 0xffffff6d(%rip)
1d69(7): mov $0x1,0x20e391(%rip)
1d70(5): jmp 0xffffff60(%rip)
1d75(3): nop (%rax)
1d78(7): mov $0x1,0x20e492(%rip)
1d7f(5): jmp 0xffffff51(%rip)
1d84(4): nop 0x0(%rax)
1d88(7): mov 0x20e331(%rip),%rdi
1d8f(3): test %rdi,%rdi
1d92(6): jz 0x34a(%rip)
1d98(5): mov 0x8(%rsp),%rcx
1d9d(7): lea 0xb01d(%rip),%r8
1da4(2): xor %esi,%esi
1da6(5): mov $0xa,%edx
1dab(5): call 0x6635(%rip)
1db0(2): test %eax,%eax
1db2(6): jnz 0xf32(%rip)
1db8(5): mov 0x28(%rsp),%rax
1dbd(4): mov $0x1,(%rsp)
1dc1(6): mov $0x1,%r15d
1dc7(5): mov %rax,0x10(%rsp)
1dcc(5): jmp 0xffffff04(%rip)
1dd1(7): nop 0x0(%rax)
1dd8(7): mov $0x0,0x20e232(%rip)
1ddf(6): mov $0x1,%r15d
1de5(5): jmp 0xfffffeeb(%rip)
1dea(6): nop 0x0(%rax,%rax,1)
1df0(7): mov 0x20e2c9(%rip),%rdi
1df7(6): mov $0x1,%r15d
1dfd(5): call 0x1ca3(%rip)
1e02(3): and %eax,%r12d
1e05(5): jmp 0xfffffecb(%rip)
1e0a(6): nop 0x0(%rax,%rax,1)
1e10(7): lea 0x908b(%rip),%rdi
1e17(5): call 0x1c89(%rip)
1e1c(3): and %eax,%r12d
1e1f(5): jmp 0xfffffeb1(%rip)
1e24(4): nop 0x0(%rax)
1e28(7): mov 0x20e291(%rip),%rdi
1e2f(7): lea 0xa6b2(%rip),%r8
1e36(7): lea 0x20e3bb(%rip),%rcx
1e3d(2): xor %edx,%edx
1e3f(2): xor %esi,%esi
1e41(5): call 0x659f(%rip)
1e46(2): test %eax,%eax
1e48(6): jnz 0xede(%rip)
1e4e(6): mov $0x1,%r15d
1e54(5): jmp 0xfffffe7c(%rip)
1e59(7): nop 0x0(%rax)
1e60(7): lea 0x902f(%rip),%rdi
1e67(5): call 0x1c39(%rip)
1e6c(3): and %eax,%r12d
1e6f(5): jmp 0xfffffe61(%rip)
1e74(4): nop 0x0(%rax)
1e78(7): lea 0x9026(%rip),%rdi
1e7f(5): call 0x1c21(%rip)
1e84(3): and %eax,%r12d
1e87(5): jmp 0xfffffe49(%rip)
1e8c(4): nop 0x0(%rax)
1e90(7): lea 0x8ff9(%rip),%rdi
1e97(5): call 0x1c09(%rip)
1e9c(3): and %eax,%r12d
1e9f(5): jmp 0xfffffe31(%rip)
1ea4(4): nop 0x0(%rax)
1ea8(7): lea 0x8fdb(%rip),%rdi
1eaf(5): call 0x1bf1(%rip)
1eb4(3): and %eax,%r12d
1eb7(5): jmp 0xfffffe19(%rip)
1ebc(4): nop 0x0(%rax)
1ec0(7): lea 0x8e89(%rip),%rdi
1ec7(5): call 0x1bd9(%rip)
1ecc(3): and %eax,%r12d
1ecf(5): jmp 0xfffffe01(%rip)
1ed4(4): nop 0x0(%rax)
1ed8(7): lea 0x8fa5(%rip),%rdi
1edf(5): call 0x1bc1(%rip)
1ee4(3): and %eax,%r12d
1ee7(5): jmp 0xfffffde9(%rip)
1eec(4): nop 0x0(%rax)
1ef0(7): lea 0x8e64(%rip),%rdi
1ef7(5): call 0x1ba9(%rip)
1efc(3): and %eax,%r12d
1eff(5): jmp 0xfffffdd1(%rip)
1f04(4): nop 0x0(%rax)
1f08(7): mov 0x20e1b1(%rip),%rdi
1f0f(3): test %rdi,%rdi
1f12(6): jz 0x1ba(%rip)
1f18(5): mov 0x8(%rsp),%rcx
1f1d(7): lea 0xa5c4(%rip),%r8
1f24(2): xor %edx,%edx
1f26(2): xor %esi,%esi
1f28(5): call 0x64b8(%rip)
1f2d(2): test %eax,%eax
1f2f(6): jnz 0xe15(%rip)
1f35(5): mov 0x28(%rsp),%rax
1f3a(7): mov %rax,0x20e2d7(%rip)
1f41(7): mov $0x1,0x20e2ca(%rip)
1f48(6): mov $0x1,%r15d
1f4e(5): jmp 0xfffffd82(%rip)
1f53(5): nop 0x0(%rax,%rax,1)
1f58(7): lea 0x8f3d(%rip),%rdi
1f5f(5): call 0x1b41(%rip)
1f64(3): and %eax,%r12d
1f67(5): jmp 0xfffffd69(%rip)
1f6c(4): nop 0x0(%rax)
1f70(7): mov 0x20e149(%rip),%rdi
1f77(7): lea 0xa56a(%rip),%r8
1f7e(7): lea 0x20e263(%rip),%rcx
1f85(2): xor %edx,%edx
1f87(2): xor %esi,%esi
1f89(7): mov $0x1,0x20e260(%rip)
1f90(5): call 0x6450(%rip)
1f95(2): test %eax,%eax
1f97(6): jz 0xfffffeb7(%rip)
1f9d(7): mov 0x20e11c(%rip),%r8
1fa4(4): mov 0x20(%rsp),%esi
1fa8(7): lea 0x20da31(%rip),%rcx
1faf(5): mov $0x4e,%edx
1fb4(2): mov %eax,%edi
1fb6(5): call 0x637a(%rip)
1fbb(5): nop 0x0(%rax,%rax,1)
1fc0(7): lea 0x8ed2(%rip),%rdi
1fc7(5): call 0x1ad9(%rip)
1fcc(3): and %eax,%r12d
1fcf(5): jmp 0xfffffd01(%rip)
1fd4(4): nop 0x0(%rax)
1fd8(7): lea 0x8eb4(%rip),%rdi
1fdf(5): call 0x1ac1(%rip)
1fe4(3): and %eax,%r12d
1fe7(5): jmp 0xfffffce9(%rip)
1fec(4): nop 0x0(%rax)
1ff0(7): lea 0x8e96(%rip),%rdi
1ff7(5): call 0x1aa9(%rip)
1ffc(3): and %eax,%r12d
1fff(5): jmp 0xfffffcd1(%rip)
2004(4): nop 0x0(%rax)
2008(7): lea 0x8e78(%rip),%rdi
200f(5): call 0x1a91(%rip)
2014(3): and %eax,%r12d
2017(5): jmp 0xfffffcb9(%rip)
201c(4): nop 0x0(%rax)
2020(7): lea 0x8e78(%rip),%rdi
2027(5): call 0x1a79(%rip)
202c(3): and %eax,%r12d
202f(5): jmp 0xfffffca1(%rip)
2034(4): nop 0x0(%rax)
2038(7): mov 0x20e081(%rip),%rax
203f(4): movzx (%rax),%r15d
2043(4): cmp $0x6e,%r15b
2047(6): jz 0x3e5(%rip)
204d(6): jle 0x225(%rip)
2053(4): cmp $0x6f,%r15b
2057(6): jz 0x252(%rip)
205d(4): cmp $0x78,%r15b
2061(6): jnz 0xc5b(%rip)
2067(7): lea 0xe22(%rip),%rax
206e(a): mov $0x10,0x20e1ac(%rip)
2078(a): mov $0x6,0x20e19e(%rip)
2082(6): mov $0x1,%r15d
2088(7): mov %rax,0x20e171(%rip)
208f(5): jmp 0xfffffc41(%rip)
2094(4): nop 0x0(%rax)
2098(7): mov 0x20e009(%rip),%rdi
209f(7): mov 0x20df72(%rip),%rcx
20a6(7): lea 0x8dfb(%rip),%r8
20ad(7): lea 0x8d82(%rip),%rdx
20b4(7): lea 0x8d02(%rip),%rsi
20bb(3): xor %r9d,%r9d
20be(2): xor %eax,%eax
20c0(5): call 0x5c40(%rip)
20c5(2): xor %edi,%edi
20c7(5): call 0xfffffa29(%rip)
20cc(b): mov $0x3,0x20e141(%rip)
20d7(5): jmp 0xfffffe6a(%rip)
20dc(4): mov $0x1,(%rsp)
20e0(6): mov $0x1,%r15d
20e6(9): mov $0x20,0x10(%rsp)
20ef(5): jmp 0xfffffbe1(%rip)
20f4(7): mov $0x0,0x20e006(%rip)
20fb(5): jmp 0xfffffbd5(%rip)
2100(3): test %r12b,%r12b
2103(6): jz 0x1d3(%rip)
2109(7): cmp $0x0,0x20e102(%rip)
2110(2): jz 0x10(%rip)
2112(8): cmp $0x0,0x20e0b6(%rip)
211a(6): jnz 0xbe8(%rip)
2120(7): movsxd 0x20df91(%rip),%rax
2127(7): movzx 0x20e0e3(%rip),%edx
212e(3): sub %eax,%r14d
2131(3): test %r15b,%r15b
2134(6): jz 0x31b(%rip)
213a(2): test %dl,%dl
213c(6): jnz 0x579(%rip)
2142(7): cmp $0x0,0x20e0c7(%rip)
2149(2): jz 0x24(%rip)
214b(7): lea 0xd2e(%rip),%rax
2152(7): cmp %rax,0x20e0a7(%rip)
2159(6): jz 0x750(%rip)
215f(7): lea 0x2b0a(%rip),%rax
2166(7): mov %rax,0x20e093(%rip)
216d(7): cmp $0x0,0x20e07c(%rip)
2174(2): jz 0x28(%rip)
2176(2): xor %edx,%edx
2178(7): mov 0x20e069(%rip),%rax
217f(7): add 0x20e072(%rip),%rax
2186(6): jb 0xada(%rip)
218c(3): test %rdx,%rdx
218f(7): mov %rax,0x20e04a(%rip)
2196(6): jnz 0xaa6(%rip)
219c(8): cmp $0x0,0x20e02c(%rip)
21a4(6): jz 0x4bf(%rip)
21aa(3): test %r14d,%r14d
21ad(6): jle 0x4a3(%rip)
21b3(7): movsxd 0x20defe(%rip),%rax
21ba(5): lea 0x0(%r13,%rax,8),%rax
21bf(7): mov %rax,0x20dfea(%rip)
21c6(5): call 0x241a(%rip)
21cb(8): cmp $0x0,0x20dfd5(%rip)
21d3(3): mov %eax,%r13d
21d6(6): jz 0x23c(%rip)
21dc(7): mov 0x20e015(%rip),%rdi
21e3(5): call 0x251d(%rip)
21e8(3): and %eax,%r13d
21eb(8): cmp $0x0,0x20dfb5(%rip)
21f3(6): jz 0x21f(%rip)
21f9(2): xor %eax,%eax
21fb(7): cmp $0x0,0x20e00e(%rip)
2202(6): jnz 0x4fe(%rip)
2208(7): mov 0x20dfc1(%rip),%r9
220f(7): mov 0x20dfc2(%rip),%r10
2216(7): lea 0xa3c3(%rip),%r11
221d(7): mov %rax,0x20dfe4(%rip)
2224(2): xor %edi,%edi
2226(6): mov $0x1,%r8d
222c(3): cmp %r9,%rdi
222f(6): jz 0x2b3(%rip)
2235(4): imul %rdi,$0x28,%rax
2239(3): movsxd %r8d,%r8
223c(5): mov 0x4(%r10,%rax,1),%eax
2241(4): movsxd 0x0(%r11,%rax,4),%rsi
2245(3): mov %r8,%rax
2248(3): mov %rsi,%rcx
224b(2): jmp 0x8(%rip)
224d(3): nop (%rax)
2250(3): mov %rdx,%rcx
2253(2): xor %edx,%edx
2255(3): div %rcx,%rax
2258(3): mov %rcx,%rax
225b(3): test %rdx,%rdx
225e(2): jnz 0xfffffff2(%rip)
2260(3): mov %rsi,%rax
2263(2): xor %edx,%edx
2265(4): add $0x1,%rdi
2269(3): div %rcx,%rax
226c(4): imul %eax,%r8d
2270(2): jmp 0xffffffbc(%rip)
2272(4): cmp $0x64,%r15b
2276(6): jnz 0xa46(%rip)
227c(7): lea 0xc0d(%rip),%rax
2283(a): mov $0xa,0x20df97(%rip)
228d(a): mov $0x7,0x20df89(%rip)
2297(6): mov $0x1,%r15d
229d(7): mov %rax,0x20df5c(%rip)
22a4(5): jmp 0xfffffa2c(%rip)
22a9(7): lea 0xbe0(%rip),%rax
22b0(a): mov $0x8,0x20df6a(%rip)
22ba(a): mov $0x7,0x20df5c(%rip)
22c4(6): mov $0x1,%r15d
22ca(7): mov %rax,0x20df2f(%rip)
22d1(5): jmp 0xfffff9ff(%rip)
22d6(5): mov $0x1,%eax
22db(5): mov 0x48(%rsp),%rbx
22e0(9): xor $0x28,%rbx
22e9(6): jnz 0x9ce(%rip)
22ef(4): add $0x58,%rsp
22f3(1): pop %rbx
22f4(1): pop %rbp
22f5(2): pop %r12
22f7(2): pop %r13
22f9(2): pop %r14
22fb(2): pop %r15
22fd(1): ret near (%rsp)
22fe(5): mov $0x2,%eax
2303(2): xor %ecx,%ecx
2305(3): mul %rax,%rdi,%rdx
2308(6): jo 0x967(%rip)
230e(3): test %rax,%rax
2311(6): js 0x959(%rip)
2317(3): test %rcx,%rcx
231a(6): jnz 0x950(%rip)
2320(3): add %rdi,%rdi
2323(5): call 0x5b3d(%rip)
2328(7): movzx 0x20dec1(%rip),%ebx
232f(7): mov 0x20de8a(%rip),%rdi
2336(5): mov %rax,0x30(%rsp)
233b(7): mov 0x20deb6(%rip),%r14
2342(3): add %rdi,%rax
2345(2): test %bl,%bl
2347(5): mov %rax,0x38(%rsp)
234c(6): jz 0x584(%rip)
2352(5): lea 0x28(%rsp),%r12
2357(4): mov %r13b,(%rsp)
235b(2): jmp 0x60(%rip)
235d(4): movzx %bpl,%edx
2361(7): mov 0x20de58(%rip),%rdi
2368(3): sub %r14,%rax
236b(5): mov 0x30(%rsp,%rdx,8),%r13
2370(3): mov %rdx,%r15
2373(3): mov %r12,%rdx
2376(3): cmp %rdi,%rax
2379(4): cmovbe %rax,%rdi
237d(3): mov %r13,%rsi
2380(5): call 0x2920(%rip)
2385(5): mov 0x28(%rsp),%rsi
238a(2): and %eax,%ebx
238c(7): cmp 0x20de2d(%rip),%rsi
2393(6): jb 0x5a2(%rip)
2399(6): jnz 0x8e0(%rip)
239f(3): xor $0x1,%ebp
23a2(3): mov %r14,%rdi
23a5(3): mov %r13,%rcx
23a8(4): movzx %bpl,%eax
23ac(5): mov 0x30(%rsp,%rax,8),%rdx
23b1(5): call 0x258f(%rip)
23b6(5): add 0x28(%rsp),%r14
23bb(7): mov 0x20de1e(%rip),%rax
23c2(3): cmp %r14,%rax
23c5(2): jnbe 0xffffff98(%rip)
23c7(5): movzx (%rsp),%r13d
23cc(9): mov $0x0,0x28(%rsp)
23d5(5): mov $0xa,%esi
23da(3): mov %r14,%rdi
23dd(6): call 0x20de1d(%rip)
23e3(7): cmp $0x0,0x20de06(%rip)
23ea(2): jz 0x14(%rip)
23ec(7): cmp 0x20dded(%rip),%r14
23f3(2): jb 0xb(%rip)
23f5(2): xor %edi,%edi
23f7(5): call 0x2099(%rip)
23fc(2): and %eax,%ebx
23fe(5): mov 0x30(%rsp),%rdi
2403(3): movzx %bl,%ebx
2406(5): call 0xfffff3ca(%rip)
240b(3): and %ebx,%r13d
240e(4): and $0x1,%r13d
2412(7): cmp $0x0,0x20dd8b(%rip)
2419(6): jnz 0x25b(%rip)
241f(4): xor $0x1,%r13d
2423(4): movzx %r13b,%eax
2427(5): jmp 0xfffffeb4(%rip)
242c(7): lea 0xa4d(%rip),%rax
2433(a): mov $0x0,0x20dde3(%rip)
243d(6): mov $0x1,%r15d
2443(7): mov %rax,0x20ddb6(%rip)
244a(5): jmp 0xfffff886(%rip)
244f(4): cmp $0x2,%r14d
2453(6): jz 0x3cd(%rip)
2459(4): cmp $0x3,%r14d
245d(6): jz 0x359(%rip)
2463(4): cmp $0x1,%r14d
2467(6): jz 0x53e(%rip)
246d(4): cmp $0x1,%r14d
2471(6): jle 0xfffffcd1(%rip)
2477(2): test %dl,%dl
2479(6): jz 0xfffffcc9(%rip)
247f(5): mov 0x8(%r13,%rax,8),%rdi
2484(5): call 0x539c(%rip)
2489(7): lea 0x8a25(%rip),%rsi
2490(3): mov %rax,%rbx
2493(5): mov $0x5,%edx
2498(2): xor %edi,%edi
249a(5): call 0xfffff416(%rip)
249f(3): mov %rbx,%rcx
24a2(3): mov %rax,%rdx
24a5(2): xor %esi,%esi
24a7(2): xor %edi,%edi
24a9(2): xor %eax,%eax
24ab(5): call 0xfffff5f5(%rip)
24b0(7): lea 0x9a61(%rip),%rsi
24b7(5): mov $0x5,%edx
24bc(2): xor %edi,%edi
24be(5): call 0xfffff3f2(%rip)
24c3(7): lea 0xa316(%rip),%rdx
24ca(3): mov %rax,%rcx
24cd(2): xor %esi,%esi
24cf(2): xor %edi,%edi
24d1(2): xor %eax,%eax
24d3(5): call 0xfffff5cd(%rip)
24d8(5): mov $0x1,%edi
24dd(5): call 0x2893(%rip)
24e2(4): cmp $0x0,(%rsp)
24e6(6): jnz 0x2a2(%rip)
24ec(4): cmp $0xf,%r8d
24f0(6): jnle 0x56f(%rip)
24f6(5): mov $0x10,%eax
24fb(1): cdq %eax
24fc(3): idiv %r8d,%eax
24ff(4): imul %r8d,%eax
2503(2): cwde 
2505(7): mov %rax,0x20dcb4(%rip)
250c(4): imul %r9,$0x28,%r9
2510(4): lea 0x4(%r10),%rcx
2514(7): mov 0x20dca5(%rip),%rdi
251b(3): xor %r8d,%r8d
251e(3): mov %rcx,%rsi
2521(5): lea 0x4(%r10,%r9,1),%r9
2526(7): lea 0xa0b3(%rip),%r10
252d(2): jmp 0x26(%rip)
252f(2): mov (%rsi),%eax
2531(2): xor %edx,%edx
2533(4): movsxd 0x0(%r10,%rax,4),%r11
2537(3): mov %rdi,%rax
253a(3): div %r11,%rax
253d(3): mov 0x18(%rsi),%edx
2540(3): add $0x1,%edx
2543(3): imul %edx,%eax
2546(2): cwde 
2548(3): cmp %rax,%r8
254b(4): cmovnae %rax,%r8
254f(4): add $0x28,%rsi
2553(3): cmp %rsi,%r9
2556(2): jnz 0xffffffd9(%rip)
2558(7): lea 0xa081(%rip),%r10
255f(2): jmp 0x20(%rip)
2561(2): mov (%rcx),%eax
2563(2): xor %edx,%edx
2565(4): add $0x28,%rcx
2569(4): movsxd 0x0(%r10,%rax,4),%r9
256d(3): mov %rdi,%rax
2570(3): div %r9,%rax
2573(3): mov %r8d,%edx
2576(4): imul 0xfffffff0(%rcx),%eax
257a(2): sub %eax,%edx
257c(3): mov %edx,0xfffffff4(%rcx)
257f(3): cmp %rcx,%rsi
2582(2): jnz 0xffffffdf(%rip)
2584(7): movzx 0x20dc87(%rip),%ebp
258b(3): test %bpl,%bpl
258e(6): jz 0xfffffd70(%rip)
2594(8): cmp $0x64,0x20dc7c(%rip)
259c(5): mov $0x64,%edi
25a1(8): cmovnb 0x20dc6f(%rip),%rdi
25a9(5): mov %rdi,0x28(%rsp)
25ae(5): call 0x58b2(%rip)
25b3(7): mov 0x20dc3e(%rip),%r14
25ba(4): mov %rax,(%rsp)
25be(5): lea 0x28(%rsp),%rax
25c3(5): mov %r13b,0x8(%rsp)
25c8(5): mov %rax,0x10(%rsp)
25cd(7): cmp $0x0,0x20dc1c(%rip)
25d4(2): jz 0x25(%rip)
25d6(7): mov 0x20dc3b(%rip),%rdx
25dd(7): mov 0x20dbfc(%rip),%rax
25e4(3): cmp %rdx,%rax
25e7(6): jb 0x5bb(%rip)
25ed(3): sub %rdx,%rax
25f0(3): cmp %r14,%rax
25f3(6): jbe 0x5af(%rip)
25f9(4): mov (%rsp),%r13
25fd(3): mov %r14,%r12
2600(3): sub %r14,%r13
2603(2): jmp 0x39(%rip)
2605(3): mov %rbx,%rdi
2608(4): add $0x1,%r12
260c(5): call 0x22d4(%rip)
2611(5): mov 0x20(%rsp),%r15d
2616(2): and %eax,%ebp
2618(3): test %r15d,%r15d
261b(6): js 0x228(%rip)
2621(5): call 0xfffff51f(%rip)
2626(3): mov (%rax),%rsi
2629(3): movsxd %r15d,%rcx
262c(5): test $0x40,0x1(%rsi,%rcx,2)
2631(6): jz 0x1e7(%rip)
2637(5): mov %r15b,0xffffffff(%r13,%r12,1)
263c(3): mov %r12,%rax
263f(3): sub %r14,%rax
2642(7): cmp %rax,0x20dbcf(%rip)
2649(2): jnbe 0xffffffbc(%rip)
264b(5): jmp 0x118(%rip)
2650(7): lea 0x20d529(%rip),%rax
2657(7): mov %rax,0x20db52(%rip)
265e(5): jmp 0xfffffb68(%rip)
2663(7): lea 0x885c(%rip),%rdi
266a(5): call 0x1436(%rip)
266f(5): jmp 0xfffffb3b(%rip)
2674(7): mov 0x20da35(%rip),%rdi
267b(5): call 0x6185(%rip)
2680(3): add $0x1,%eax
2683(6): jnz 0xfffffd9c(%rip)
2689(7): lea 0x86fa(%rip),%rsi
2690(5): mov $0x5,%edx
2695(2): xor %edi,%edi
2697(5): call 0xfffff219(%rip)
269c(3): mov %rax,%rbx
269f(5): call 0xfffff151(%rip)
26a4(2): mov (%rax),%esi
26a6(3): mov %rbx,%rdx
26a9(5): mov $0x1,%edi
26ae(2): xor %eax,%eax
26b0(5): call 0xfffff3f0(%rip)
26b5(4): cmp $0x2,%r14d
26b9(6): jz 0x167(%rip)
26bf(4): cmp $0x3,%r14d
26c3(6): jz 0xf3(%rip)
26c9(4): cmp $0x1,%r14d
26cd(6): jnz 0xfffffda0(%rip)
26d3(5): mov 0x0(%r13,%rax,8),%rdi
26d8(3): mov %rbx,%rsi
26db(5): call 0x8e5(%rip)
26e0(2): test %al,%al
26e2(6): jz 0x2d9(%rip)
26e8(5): mov 0x20(%rsp),%rax
26ed(4): add $0x8,%r13
26f1(3): xor %r14d,%r14d
26f4(7): mov %rax,0x20dafd(%rip)
26fb(5): jmp 0xfffffa47(%rip)
2700(5): mov 0x18(%rsp),%rax
2705(7): sub 0x20daec(%rip),%rax
270c(5): jmp 0xfffffafc(%rip)
2711(5): mov 0x10(%rsp),%rsi
2716(4): mov (%rsp),%rdi
271a(5): call 0x58a6(%rip)
271f(4): mov %rax,(%rsp)
2723(3): mov %rbx,%rdi
2726(4): add $0x1,%r12
272a(5): call 0x21b6(%rip)
272f(5): mov 0x20(%rsp),%r15d
2734(2): and %eax,%ebp
2736(3): test %r15d,%r15d
2739(6): js 0x10a(%rip)
273f(6): jz 0x33a(%rip)
2745(5): call 0xfffff3fb(%rip)
274a(3): mov (%rax),%rsi
274d(3): movsxd %r15d,%rdx
2750(5): test $0x40,0x1(%rsi,%rdx,2)
2755(6): jz 0xc3(%rip)
275b(4): mov (%rsp),%rax
275f(4): mov %r15b,0x0(%rax,%r13,1)
2763(3): mov %r12,%r13
2766(3): sub %r14,%r13
2769(7): cmp $0x0,0x20da80(%rip)
2770(2): jz 0xf(%rip)
2772(7): cmp 0x20da67(%rip),%r12
2779(6): jnb 0x300(%rip)
277f(5): cmp 0x28(%rsp),%r13
2784(2): jnz 0xffffff9f(%rip)
2786(2): jmp 0xffffff8b(%rip)
2788(5): mov 0x10(%rsp),%rsi
278d(3): movsxd %r8d,%rbp
2790(3): test %rsi,%rsi
2793(3): mov %rsi,%rax
2796(6): jz 0x230(%rip)
279c(2): xor %edx,%edx
279e(3): div %rbp,%rax
27a1(3): test %rdx,%rdx
27a4(6): jnz 0x222(%rip)
27aa(7): mov %rsi,0x20da0f(%rip)
27b1(5): jmp 0xfffffd5b(%rip)
27b6(2): test %dl,%dl
27b8(6): mov $0x3,%r14d
27be(6): jz 0xfffff984(%rip)
27c4(5): mov 0x8(%r13,%rax,8),%rdi
27c9(3): mov %rbx,%rsi
27cc(5): call 0x7f4(%rip)
27d1(2): test %al,%al
27d3(6): jnz 0x3ec(%rip)
27d9(6): mov $0x3,%r14d
27df(7): cmp $0x0,0x20da2b(%rip)
27e6(6): jz 0xfffff95c(%rip)
27ec(7): movsxd 0x20d8c5(%rip),%rax
27f3(5): jmp 0xfffffc8c(%rip)
27f8(2): xor %edi,%edi
27fa(5): call 0x2576(%rip)
27ff(4): mov 0x28(%rcx),%rax
2803(4): cmp 0x30(%rcx),%rax
2807(6): jnb 0x413(%rip)
280d(4): lea 0x1(%rax),%rdx
2811(4): mov %rdx,0x28(%rcx)
2815(3): mov $0xa,(%rax)
2818(3): mov %r12,%r14
281b(5): jmp 0xfffffdb2(%rip)
2820(2): test %dl,%dl
2822(5): mov 0x8(%r13,%rax,8),%rdi
2827(2): jnz 0x34(%rip)
2829(3): movsx (%rdi),%eax
282c(2): cmp $0x2b,%al
282e(2): jz 0x2d(%rip)
2830(3): sub $0x30,%eax
2833(3): cmp $0x9,%eax
2836(2): jbe 0x25(%rip)
2838(6): mov $0x2,%r14d
283e(5): jmp 0xfffff904(%rip)
2843(4): mov (%rsp),%rdi
2847(6): movzx 0x8(%rsp),%r13d
284d(5): call 0xffffef83(%rip)
2852(4): movzx %bpl,%ebx
2856(5): jmp 0xfffffbb5(%rip)
285b(5): lea 0x28(%rsp),%rax
2860(3): mov %rax,%rsi
2863(5): call 0x75d(%rip)
2868(2): test %al,%al
286a(6): jz 0x204(%rip)
2870(7): cmp $0x0,0x20d99a(%rip)
2877(6): jnz 0x2e6(%rip)
287d(5): mov 0x28(%rsp),%rax
2882(6): mov $0x1,%r14d
2888(7): mov %rax,0x20d969(%rip)
288f(7): movsxd 0x20d822(%rip),%rax
2896(5): mov 0x0(%r13,%rax,8),%rdx
289b(5): mov %rdx,0x8(%r13,%rax,8)
28a0(4): add $0x8,%r13
28a4(5): jmp 0xfffff89e(%rip)
28a9(7): lea 0x2340(%rip),%rax
28b0(a): mov $0x8,0x20d96a(%rip)
28ba(a): mov $0x7,0x20d95c(%rip)
28c4(7): mov %rax,0x20d935(%rip)
28cb(5): jmp 0xfffff8a2(%rip)
28d0(5): lea 0x28(%rsp),%rax
28d5(3): mov %r12d,%ebx
28d8(2): xor %ebp,%ebp
28da(3): xor %r15d,%r15d
28dd(4): mov %r13b,(%rsp)
28e1(3): mov %rax,%r12
28e4(2): jmp 0x2e(%rip)
28e6(6): jnz 0x3b2(%rip)
28ec(3): xor $0x1,%ebp
28ef(3): mov %r14,%rdi
28f2(3): mov %r13,%rcx
28f5(4): movzx %bpl,%eax
28f9(5): mov 0x30(%rsp,%rax,8),%rdx
28fe(3): mov %rax,%r15
2901(5): call 0x203f(%rip)
2906(5): add 0x28(%rsp),%r14
290b(7): mov 0x20d8ae(%rip),%rdi
2912(3): movsxd %r15d,%rax
2915(3): mov %r12,%rdx
2918(5): mov 0x30(%rsp,%rax,8),%r13
291d(3): mov %r13,%rsi
2920(5): call 0x2380(%rip)
2925(5): mov 0x28(%rsp),%rsi
292a(2): and %eax,%ebx
292c(7): cmp 0x20d88d(%rip),%rsi
2933(2): jnb 0xffffffb3(%rip)
2935(3): test %rsi,%rsi
2938(5): movzx (%rsp),%r13d
293d(3): mov %rsi,%r8
2940(6): jz 0xfffffa95(%rip)
2946(7): mov 0x20d883(%rip),%r10
294d(7): mov 0x20d884(%rip),%r12
2954(7): lea 0x9c85(%rip),%r11
295b(3): xor %r9d,%r9d
295e(5): mov $0x1,%esi
2963(3): cmp %r10,%r9
2966(3): movsxd %esi,%rsi
2969(6): jz 0xa5(%rip)
296f(4): imul %r9,$0x28,%rax
2973(5): mov 0x4(%r12,%rax,1),%eax
2978(4): movsxd 0x0(%r11,%rax,4),%rdi
297c(3): mov %rsi,%rax
297f(3): mov %rdi,%rcx
2982(2): jmp 0x5(%rip)
2984(3): mov %rdx,%rcx
2987(2): xor %edx,%edx
2989(3): div %rcx,%rax
298c(3): mov %rcx,%rax
298f(3): test %rdx,%rdx
2992(2): jnz 0xfffffff2(%rip)
2994(3): mov %rdi,%rax
2997(2): xor %edx,%edx
2999(4): add $0x1,%r9
299d(3): div %rcx,%rax
29a0(3): imul %eax,%esi
29a3(2): jmp 0xffffffc0(%rip)
29a5(2): test %dl,%dl
29a7(5): mov 0x0(%r13,%rax,8),%rcx
29ac(6): jnz 0xfffffd27(%rip)
29b2(3): cmp $0x2b,(%rcx)
29b5(6): jz 0xfffffd1e(%rip)
29bb(6): mov $0x1,%r14d
29c1(5): jmp 0xfffff781(%rip)
29c6(7): lea 0x95a3(%rip),%rsi
29cd(5): mov $0x5,%edx
29d2(2): xor %edi,%edi
29d4(4): mov %r8d,(%rsp)
29d8(5): call 0xffffeed8(%rip)
29dd(4): mov (%rsp),%r8d
29e1(5): mov 0x10(%rsp),%rcx
29e6(3): mov %rax,%rdx
29e9(2): xor %esi,%esi
29eb(2): xor %edi,%edi
29ed(2): xor %eax,%eax
29ef(5): call 0xfffff0b1(%rip)
29f4(7): mov %rbp,0x20d7c5(%rip)
29fb(7): mov 0x20d7ce(%rip),%r9
2a02(7): mov 0x20d7cf(%rip),%r10
2a09(5): jmp 0xfffffb03(%rip)
2a0e(5): lea 0xffffffff(%rsi,%r8,1),%rax
2a13(2): xor %edx,%edx
2a15(5): mov 0x30(%rsp,%r15,8),%r12
2a1a(4): mov %r8,(%rsp)
2a1e(3): div %rsi,%rax
2a21(4): lea 0x0(%r12,%r8,1),%rdi
2a25(4): imul %rsi,%rax
2a29(2): xor %esi,%esi
2a2b(3): sub %r8,%rax
2a2e(3): mov %rax,%rdx
2a31(5): call 0xffffef4f(%rip)
2a36(2): mov %ebp,%eax
2a38(4): mov (%rsp),%r8
2a3c(3): mov %r14,%rdi
2a3f(3): xor $0x1,%eax
2a42(3): mov %r12,%rcx
2a45(3): movzx %al,%eax
2a48(5): mov 0x30(%rsp,%rax,8),%rdx
2a4d(3): mov %r8,%rsi
2a50(5): call 0x1ef0(%rip)
2a55(5): add 0x28(%rsp),%r14
2a5a(5): jmp 0xfffff97b(%rip)
2a5f(3): movsxd %r8d,%r8
2a62(7): mov %r8,0x20d757(%rip)
2a69(5): jmp 0xfffffaa3(%rip)
2a6e(6): mov $0x2,%r14d
2a74(5): jmp 0xfffffd6b(%rip)
2a79(4): mov (%rsp),%r15
2a7d(3): mov %r13,%rdi
2a80(5): mov $0x20,%esi
2a85(3): not %rdi
2a88(3): add %r12,%rdi
2a8b(5): mov $0x0,0x0(%r15,%r13,1)
2a90(3): mov %r15,%r13
2a93(6): call 0x20d767(%rip)
2a99(5): movzx 0x0(%r13),%eax
2a9e(7): mov 0x20d603(%rip),%rcx
2aa5(3): movsx %al,%edx
2aa8(2): test %edx,%edx
2aaa(4): mov %edx,0x20(%rsp)
2aae(6): jz 0xfffffd51(%rip)
2ab4(3): lea 0xfffffff9(%rax),%edx
2ab7(3): cmp $0x6,%dl
2aba(6): jnbe 0x89(%rip)
2ac0(7): lea 0x99bd(%rip),%rsi
2ac7(3): movzx %dl,%edx
2aca(4): movsxd 0x0(%rsi,%rdx,4),%rax
2ace(5): mov $0x2,%edx
2ad3(3): add %rsi,%rax
2ad6(5): mov $0x1,%esi
2adb(2): jmp %rax
2add(7): lea 0x827c(%rip),%rdi
2ae4(5): call 0xffffef5c(%rip)
2ae9(4): add $0x1,%r13
2aed(2): jmp 0xffffffac(%rip)
2aef(7): lea 0x8276(%rip),%rdi
2af6(5): call 0xffffef4a(%rip)
2afb(2): jmp 0xffffffee(%rip)
2afd(7): lea 0x825f(%rip),%rdi
2b04(5): call 0xffffef3c(%rip)
2b09(2): jmp 0xffffffe0(%rip)
2b0b(7): lea 0x8257(%rip),%rdi
2b12(5): call 0xffffef2e(%rip)
2b17(2): jmp 0xffffffd2(%rip)
2b19(7): lea 0x823d(%rip),%rdi
2b20(5): call 0xffffef20(%rip)
2b25(2): jmp 0xffffffc4(%rip)
2b27(7): lea 0x822c(%rip),%rdi
2b2e(5): call 0xffffef12(%rip)
2b33(2): jmp 0xffffffb6(%rip)
2b35(7): lea 0x822a(%rip),%rdi
2b3c(5): call 0xffffef04(%rip)
2b41(2): jmp 0xffffffa8(%rip)
2b43(4): mov 0x28(%rcx),%rdx
2b47(4): cmp 0x30(%rcx),%rdx
2b4b(6): jnb 0xe1(%rip)
2b51(4): lea 0x1(%rdx),%rsi
2b55(4): mov %rsi,0x28(%rcx)
2b59(2): mov %al,(%rdx)
2b5b(2): jmp 0xffffff8e(%rip)
2b5d(7): movsxd 0x20d554(%rip),%rax
2b64(3): mov %rbx,%rsi
2b67(5): mov 0x0(%r13,%rax,8),%rdi
2b6c(5): call 0x454(%rip)
2b71(2): test %al,%al
2b73(6): jz 0xfffffd0a(%rip)
2b79(5): mov 0x20(%rsp),%rax
2b7e(7): mov $0x1,0x20d68b(%rip)
2b85(4): add $0x10,%r13
2b89(3): xor %r14d,%r14d
2b8c(7): mov %rax,0x20d665(%rip)
2b93(5): mov 0x28(%rsp),%rax
2b98(5): mov %rax,0x18(%rsp)
2b9d(5): jmp 0xfffff5a5(%rip)
2ba2(4): mov (%rsp),%rdi
2ba6(6): movzx 0x8(%rsp),%r13d
2bac(5): call 0xffffec24(%rip)
2bb1(2): xor %edi,%edi
2bb3(5): call 0x18dd(%rip)
2bb8(2): and %eax,%ebp
2bba(5): jmp 0xfffffc98(%rip)
2bbf(7): movsxd 0x20d4f2(%rip),%rax
2bc6(5): lea 0x28(%rsp),%rsi
2bcb(5): mov 0x10(%r13,%rax,8),%rdi
2bd0(5): call 0x3f0(%rip)
2bd5(2): test %al,%al
2bd7(6): jz 0xfffffc02(%rip)
2bdd(5): mov 0x20(%rsp),%rax
2be2(7): mov $0x1,0x20d627(%rip)
2be9(6): mov $0x1,%r14d
2bef(7): mov %rax,0x20d602(%rip)
2bf6(5): mov 0x28(%rsp),%rax
2bfb(5): mov %rax,0x18(%rsp)
2c00(7): movsxd 0x20d4b1(%rip),%rax
2c07(5): mov 0x0(%r13,%rax,8),%rdx
2c0c(5): mov %rdx,0x10(%r13,%rax,8)
2c11(4): add $0x10,%r13
2c15(5): jmp 0xfffff52d(%rip)
2c1a(5): mov $0xa,%esi
2c1f(3): mov %rcx,%rdi
2c22(5): call 0xffffecfe(%rip)
2c27(5): jmp 0xfffffbf1(%rip)
2c2c(3): movzx %al,%esi
2c2f(3): mov %rcx,%rdi
2c32(5): call 0xffffecee(%rip)
2c37(5): jmp 0xfffffeb2(%rip)
2c3c(7): lea 0x9305(%rip),%rsi
2c43(5): mov $0x5,%edx
2c48(2): xor %edi,%edi
2c4a(5): call 0xffffec66(%rip)
2c4f(2): xor %esi,%esi
2c51(3): mov %rax,%rdx
2c54(5): mov $0x1,%edi
2c59(2): xor %eax,%eax
2c5b(5): call 0xffffee45(%rip)
2c60(5): mov $0x1,%edx
2c65(5): jmp 0xfffff527(%rip)
2c6a(5): call 0x5446(%rip)
2c6f(5): mov $0x1,%ecx
2c74(5): jmp 0xfffff69a(%rip)
2c79(7): lea 0x982b(%rip),%rcx
2c80(7): lea 0x8065(%rip),%rsi
2c87(7): lea 0x9312(%rip),%rdi
2c8e(5): mov $0x576,%edx
2c93(5): call 0xffffecbd(%rip)
2c98(7): lea 0x980c(%rip),%rcx
2c9f(7): lea 0x8046(%rip),%rsi
2ca6(7): lea 0x92f3(%rip),%rdi
2cad(5): mov $0x584,%edx
2cb2(5): call 0xffffec9e(%rip)
2cb7(5): call 0xffffec29(%rip)
2cbc(7): lea 0x91dd(%rip),%rsi
2cc3(5): mov $0x5,%edx
2cc8(2): xor %edi,%edi
2cca(5): call 0xffffebe6(%rip)
2ccf(4): movsx %r15b,%ecx
2cd3(3): mov %rax,%rdx
2cd6(2): xor %esi,%esi
2cd8(5): mov $0x1,%edi
2cdd(2): xor %eax,%eax
2cdf(5): call 0xffffedc1(%rip)
2ce4(7): mov 0x20d3d5(%rip),%r8
2ceb(4): mov 0x20(%rsp),%esi
2cef(7): lea 0x20ccea(%rip),%rcx
2cf6(5): mov $0x77,%edx
2cfb(2): mov %eax,%edi
2cfd(5): call 0x5633(%rip)
2d02(7): lea 0x91df(%rip),%rsi
2d09(5): mov $0x5,%edx
2d0e(2): xor %edi,%edi
2d10(5): call 0xffffeba0(%rip)
2d15(2): xor %esi,%esi
2d17(3): mov %rax,%rdx
2d1a(5): mov $0x1,%edi
2d1f(2): xor %eax,%eax
2d21(5): call 0xffffed7f(%rip)
2d26(7): mov 0x20d393(%rip),%r8
2d2d(4): mov 0x20(%rsp),%esi
2d31(7): lea 0x20cca8(%rip),%rcx
2d38(5): mov $0x6a,%edx
2d3d(2): mov %eax,%edi
2d3f(5): call 0x55f1(%rip)
2d44(7): mov 0x20d375(%rip),%r8
2d4b(4): mov 0x20(%rsp),%esi
2d4f(7): lea 0x20cc8a(%rip),%rcx
2d56(5): mov $0x53,%edx
2d5b(2): mov %eax,%edi
2d5d(5): call 0x55d3(%rip)

"_start" :
2d70(2): xor %ebp,%ebp
2d72(3): mov %rdx,%r9
2d75(1): pop %rsi
2d76(3): mov %rsp,%rdx
2d79(4): and $0xfffffff0,%rsp
2d7d(1): push %rax
2d7e(1): push %rsp
2d7f(7): lea 0x7efa(%rip),%r8
2d86(7): lea 0x7e83(%rip),%rcx
2d8d(7): lea 0xffffeddc(%rip),%rdi
2d94(6): call 0x20d23e(%rip)
2d9a(1): hlt 

"deregister_tm_clones" :
2da0(7): lea 0x20d2f9(%rip),%rdi
2da7(1): push %rbp
2da8(7): lea 0x20d2f1(%rip),%rax
2daf(3): cmp %rdi,%rax
2db2(3): mov %rsp,%rbp
2db5(2): jz 0x1b(%rip)
2db7(7): mov 0x20d212(%rip),%rax
2dbe(3): test %rax,%rax
2dc1(2): jz 0xf(%rip)
2dc3(1): pop %rbp
2dc4(2): jmp %rax
2dc6(a): nop 0x0(%rax,%rax,1)
2dd0(1): pop %rbp
2dd1(1): ret near (%rsp)

"register_tm_clones" :
2de0(7): lea 0x20d2b9(%rip),%rdi
2de7(7): lea 0x20d2b2(%rip),%rsi
2dee(1): push %rbp
2def(3): sub %rdi,%rsi
2df2(3): mov %rsp,%rbp
2df5(4): sar $0x3,%rsi
2df9(3): mov %rsi,%rax
2dfc(4): shr $0x3f,%rax
2e00(3): add %rax,%rsi
2e03(3): sar $0x1,%rsi
2e06(2): jz 0x1a(%rip)
2e08(7): mov 0x20d1d9(%rip),%rax
2e0f(3): test %rax,%rax
2e12(2): jz 0xe(%rip)
2e14(1): pop %rbp
2e15(2): jmp %rax
2e17(9): nop 0x0(%rax,%rax,1)
2e20(1): pop %rbp
2e21(1): ret near (%rsp)

"__do_global_dtors_aux" :
2e30(7): cmp $0x0,0x20d2b1(%rip)
2e37(2): jnz 0x31(%rip)
2e39(8): cmp $0x0,0x20d1af(%rip)
2e41(1): push %rbp
2e42(3): mov %rsp,%rbp
2e45(2): jz 0xe(%rip)
2e47(7): mov 0x20d1ba(%rip),%rdi
2e4e(5): call 0xffffed12(%rip)
2e53(5): call 0xffffff4d(%rip)
2e58(7): mov $0x1,0x20d289(%rip)
2e5f(1): pop %rbp
2e60(1): ret near (%rsp)
2e61(7): nop 0x0(%rax)
2e68(2): REP ret near (%rsp)

"frame_dummy" :
2e70(1): push %rbp
2e71(3): mov %rsp,%rbp
2e74(1): pop %rbp
2e75(5): jmp 0xffffff6b(%rip)

"format_address_std" :
2e90(4): sub $0x38,%rsp
2e94(3): mov %rdi,%rcx
2e97(9): mov $0x28,%rax
2ea0(5): mov %rax,0x28(%rsp)
2ea5(2): xor %eax,%eax
2ea7(7): movsxd 0x20d372(%rip),%rax
2eae(5): lea 0x17(%rsp),%rdi
2eb3(5): mov %sil,0x17(%rsp)
2eb8(5): mov $0x0,0x18(%rsp)
2ebd(3): mov %rdi,%rsi
2ec0(3): sub %rax,%rsi
2ec3(6): mov 0x20d35b(%rip),%eax
2ec9(3): cmp $0xa,%eax
2ecc(2): jz 0x74(%rip)
2ece(3): cmp $0x10,%eax
2ed1(6): jz 0xaf(%rip)
2ed7(3): cmp $0x8,%eax
2eda(2): jz 0x46(%rip)
2edc(3): cmp %rdi,%rsi
2edf(3): mov %rdi,%rax
2ee2(2): jnb 0x15(%rip)
2ee4(4): nop 0x0(%rax)
2ee8(4): sub $0x1,%rax
2eec(3): mov $0x30,(%rax)
2eef(3): cmp %rax,%rsi
2ef2(2): jnz 0xfffffff6(%rip)
2ef4(3): mov %rsi,%rdi
2ef7(7): mov 0x20d1aa(%rip),%rsi
2efe(5): call 0xffffeab2(%rip)
2f03(5): mov 0x28(%rsp),%rax
2f08(9): xor $0x28,%rax
2f11(6): jnz 0x9d(%rip)
2f17(4): add $0x38,%rsp
2f1b(1): ret near (%rsp)
2f1c(4): nop 0x0(%rax)
2f20(2): mov %ecx,%eax
2f22(4): shr $0x3,%rcx
2f26(4): sub $0x1,%rdi
2f2a(3): and $0x7,%eax
2f2d(3): add $0x30,%eax
2f30(3): test %rcx,%rcx
2f33(2): mov %al,(%rdi)
2f35(2): jnz 0xffffffeb(%rip)
2f37(2): jmp 0xffffffa5(%rip)
2f39(7): nop 0x0(%rax)
2f40(a): mov $0x-3689348814741910323,%r8
2f4a(6): nop 0x0(%rax,%rax,1)
2f50(3): mov %rcx,%rax
2f53(4): sub $0x1,%rdi
2f57(3): mul %rax,%r8,%rdx
2f5a(4): shr $0x3,%rdx
2f5e(4): lea 0x0(%rdx,%rdx,4),%rax
2f62(3): add %rax,%rax
2f65(3): sub %rax,%rcx
2f68(3): add $0x30,%ecx
2f6b(3): test %rdx,%rdx
2f6e(2): mov %cl,(%rdi)
2f70(3): mov %rdx,%rcx
2f73(2): jnz 0xffffffdd(%rip)
2f75(5): jmp 0xffffff67(%rip)
2f7a(6): nop 0x0(%rax,%rax,1)
2f80(7): lea 0x7d3d(%rip),%rdx
2f87(9): nop 0x0(%rax,%rax,1)
2f90(3): mov %rcx,%rax
2f93(4): shr $0x4,%rcx
2f97(4): sub $0x1,%rdi
2f9b(3): and $0xf,%eax
2f9e(3): test %rcx,%rcx
2fa1(4): movzx 0x0(%rdx,%rax,1),%eax
2fa5(2): mov %al,(%rdi)
2fa7(2): jnz 0xffffffe9(%rip)
2fa9(5): jmp 0xffffff33(%rip)
2fae(5): call 0xffffe932(%rip)

"parse_old_offset" :
2fc0(3): movzx (%rdi),%edx
2fc3(2): test %dl,%dl
2fc5(2): jz 0x47(%rip)
2fc7(1): push %rbp
2fc8(1): push %rbx
2fc9(3): mov %rsi,%rbp
2fcc(3): mov %rdi,%rbx
2fcf(4): sub $0x8,%rsp
2fd3(3): cmp $0x2b,%dl
2fd6(2): jz 0x39(%rip)
2fd8(5): mov $0x2e,%esi
2fdd(3): mov %rbx,%rdi
2fe0(5): call 0xffffe930(%rip)
2fe5(3): test %rax,%rax
2fe8(5): mov $0xa,%edx
2fed(2): jz 0x28(%rip)
2fef(7): lea 0x7cdf(%rip),%r8
2ff6(3): mov %rbp,%rcx
2ff9(2): xor %esi,%esi
2ffb(3): mov %rbx,%rdi
2ffe(5): call 0x53e2(%rip)
3003(2): test %eax,%eax
3005(1): pop %rdx
3006(3): setz %al
3009(1): pop %rbx
300a(1): pop %rbp
300b(1): ret near (%rsp)
300c(2): xor %eax,%eax
300e(1): ret near (%rsp)
300f(4): add $0x1,%rbx
3013(2): jmp 0xffffffc5(%rip)
3015(3): cmp $0x30,(%rbx)
3018(5): mov $0x8,%edx
301d(2): jnz 0xffffffd2(%rip)
301f(4): movzx 0x1(%rbx),%eax
3023(2): xor %edx,%edx
3025(3): and $0xdf,%eax
3028(2): cmp $0x58,%al
302a(3): setz %dl
302d(7): lea 0x8(,%rdx,8),%edx
3034(2): jmp 0xffffffbb(%rip)

"print_named_ascii" :
3040(2): push %r15
3042(2): push %r14
3044(2): push %r13
3046(2): push %r12
3048(1): push %rbp
3049(1): push %rbx
304a(4): sub $0x28,%rsp
304e(9): mov $0x28,%rax
3057(5): mov %rax,0x18(%rsp)
305c(2): xor %eax,%eax
305e(3): cmp %rsi,%rdi
3061(6): jbe 0xa7(%rip)
3067(3): mov %r8d,%r13d
306a(3): mov %rdi,%rbp
306d(4): lea 0xffffffff(%rdi),%r8
3071(3): movsxd %r9d,%r12
3074(3): sub %rsi,%rbp
3077(3): mov %rdi,%rbx
307a(4): lea 0x0(%rdx,%rbp,1),%rax
307e(3): mov %rdx,%r14
3081(4): imul %r12,%r8
3085(4): mov %rax,(%rsp)
3089(5): lea 0x16(%rsp),%rax
308e(5): mov %rax,0x8(%rsp)
3093(3): mov %r8,%r15
3096(2): jmp 0x39(%rip)
3098(8): nop 0x0(%rax,%rax,1)
30a0(7): lea 0x9499(%rip),%rcx
30a7(3): movzx %al,%eax
30aa(4): lea 0x0(%rcx,%rax,4),%rdx
30ae(3): sub %ebp,%r9d
30b1(7): lea 0x7c24(%rip),%rdi
30b8(2): xor %eax,%eax
30ba(4): lea 0x0(%r9,%r13,1),%esi
30be(3): sub %r12,%r15
30c1(5): call 0x508f(%rip)
30c6(4): cmp (%rsp),%r14
30ca(3): mov %ebp,%r9d
30cd(2): jz 0x3b(%rip)
30cf(2): xor %edx,%edx
30d1(3): mov %r15,%rax
30d4(4): add $0x1,%r14
30d8(3): div %rbx,%rax
30db(7): lea 0x7bf6(%rip),%rdx
30e2(3): mov %rax,%rbp
30e5(5): movzx 0xffffffff(%r14),%eax
30ea(3): and $0x7f,%eax
30ed(2): cmp $0x7f,%al
30ef(2): jz 0xffffffbf(%rip)
30f1(2): cmp $0x20,%al
30f3(2): jbe 0xffffffad(%rip)
30f5(4): mov %al,0x16(%rsp)
30f9(5): mov $0x0,0x17(%rsp)
30fe(5): mov 0x8(%rsp),%rdx
3103(2): jmp 0xffffffab(%rip)
3105(3): nop (%rax)
3108(5): mov 0x18(%rsp),%rax
310d(9): xor $0x28,%rax
3116(2): jnz 0x11(%rip)
3118(4): add $0x28,%rsp
311c(1): pop %rbx
311d(1): pop %rbp
311e(2): pop %r12
3120(2): pop %r13
3122(2): pop %r14
3124(2): pop %r15
3126(1): ret near (%rsp)
3127(5): call 0xffffe7b9(%rip)

"print_long_long" :
3130(2): push %r15
3132(2): push %r14
3134(2): push %r13
3136(2): push %r12
3138(1): push %rbp
3139(1): push %rbx
313a(4): sub $0x38,%rsp
313e(9): mov $0x28,%rax
3147(5): mov %rax,0x28(%rsp)
314c(2): xor %eax,%eax
314e(3): cmp %rsi,%rdi
3151(5): mov %rcx,0x8(%rsp)
3156(5): mov %r8d,0x14(%rsp)
315b(6): jbe 0xa5(%rip)
3161(4): lea 0xffffffff(%rdi),%rcx
3165(3): movsxd %r9d,%rax
3168(3): mov %rdi,%rbx
316b(3): mov %rsi,%rbp
316e(3): mov %rdx,%r15
3171(5): mov %rax,0x18(%rsp)
3176(4): imul %rax,%rcx
317a(3): mov %rdi,%r13
317d(3): mov %rcx,%r14
3180(2): jmp 0x28(%rip)
3182(6): nop 0x0(%rax,%rax,1)
3188(3): mov (%r15),%rdx
318b(5): mov 0x8(%rsp),%rdi
3190(2): xor %eax,%eax
3192(4): add $0x8,%r15
3196(5): call 0x4fba(%rip)
319b(5): sub 0x18(%rsp),%r14
31a0(3): cmp %rbp,%r13
31a3(3): mov %r12d,%r9d
31a6(2): jz 0x5a(%rip)
31a8(2): xor %edx,%edx
31aa(3): mov %r14,%rax
31ad(4): sub $0x1,%r13
31b1(3): div %rbx,%rax
31b4(3): sub %eax,%r9d
31b7(7): cmp $0x0,0x20cf43(%rip)
31be(3): mov %rax,%r12
31c1(4): mov 0x14(%rsp),%eax
31c5(4): lea 0x0(%r9,%rax,1),%esi
31c9(2): jz 0xffffffbf(%rip)
31cb(4): lea 0x7(%r15),%rdx
31cf(5): lea 0x20(%rsp),%r9
31d4(2): xor %eax,%eax
31d6(a): nop 0x0(%rax,%rax,1)
31e0(3): movzx (%rdx),%edi
31e3(4): sub $0x1,%rdx
31e7(4): mov %dil,0x0(%r9,%rax,1)
31eb(4): add $0x1,%rax
31ef(4): cmp $0x8,%rax
31f3(2): jnz 0xffffffed(%rip)
31f5(5): mov 0x20(%rsp),%rdx
31fa(2): jmp 0xffffff91(%rip)
31fc(4): nop 0x0(%rax)
3200(5): mov 0x28(%rsp),%rax
3205(9): xor $0x28,%rax
320e(2): jnz 0x11(%rip)
3210(4): add $0x38,%rsp
3214(1): pop %rbx
3215(1): pop %rbp
3216(2): pop %r12
3218(2): pop %r13
321a(2): pop %r14
321c(2): pop %r15
321e(1): ret near (%rsp)
321f(5): call 0xffffe6c1(%rip)

"print_long" :
3230(2): push %r15
3232(2): push %r14
3234(2): push %r13
3236(2): push %r12
3238(1): push %rbp
3239(1): push %rbx
323a(4): sub $0x38,%rsp
323e(9): mov $0x28,%rax
3247(5): mov %rax,0x28(%rsp)
324c(2): xor %eax,%eax
324e(3): cmp %rsi,%rdi
3251(5): mov %rcx,0x8(%rsp)
3256(5): mov %r8d,0x14(%rsp)
325b(6): jbe 0xa5(%rip)
3261(4): lea 0xffffffff(%rdi),%rcx
3265(3): movsxd %r9d,%rax
3268(3): mov %rdi,%rbx
326b(3): mov %rsi,%rbp
326e(3): mov %rdx,%r15
3271(5): mov %rax,0x18(%rsp)
3276(4): imul %rax,%rcx
327a(3): mov %rdi,%r13
327d(3): mov %rcx,%r14
3280(2): jmp 0x28(%rip)
3282(6): nop 0x0(%rax,%rax,1)
3288(3): mov (%r15),%rdx
328b(5): mov 0x8(%rsp),%rdi
3290(2): xor %eax,%eax
3292(4): add $0x8,%r15
3296(5): call 0x4eba(%rip)
329b(5): sub 0x18(%rsp),%r14
32a0(3): cmp %rbp,%r13
32a3(3): mov %r12d,%r9d
32a6(2): jz 0x5a(%rip)
32a8(2): xor %edx,%edx
32aa(3): mov %r14,%rax
32ad(4): sub $0x1,%r13
32b1(3): div %rbx,%rax
32b4(3): sub %eax,%r9d
32b7(7): cmp $0x0,0x20ce43(%rip)
32be(3): mov %rax,%r12
32c1(4): mov 0x14(%rsp),%eax
32c5(4): lea 0x0(%r9,%rax,1),%esi
32c9(2): jz 0xffffffbf(%rip)
32cb(4): lea 0x7(%r15),%rdx
32cf(5): lea 0x20(%rsp),%r9
32d4(2): xor %eax,%eax
32d6(a): nop 0x0(%rax,%rax,1)
32e0(3): movzx (%rdx),%edi
32e3(4): sub $0x1,%rdx
32e7(4): mov %dil,0x0(%r9,%rax,1)
32eb(4): add $0x1,%rax
32ef(4): cmp $0x8,%rax
32f3(2): jnz 0xffffffed(%rip)
32f5(5): mov 0x20(%rsp),%rdx
32fa(2): jmp 0xffffff91(%rip)
32fc(4): nop 0x0(%rax)
3300(5): mov 0x28(%rsp),%rax
3305(9): xor $0x28,%rax
330e(2): jnz 0x11(%rip)
3310(4): add $0x38,%rsp
3314(1): pop %rbx
3315(1): pop %rbp
3316(2): pop %r12
3318(2): pop %r13
331a(2): pop %r14
331c(2): pop %r15
331e(1): ret near (%rsp)
331f(5): call 0xffffe5c1(%rip)

"print_int" :
3330(2): push %r15
3332(2): push %r14
3334(2): push %r13
3336(2): push %r12
3338(1): push %rbp
3339(1): push %rbx
333a(3): mov %rdi,%rbx
333d(4): sub $0x38,%rsp
3341(9): mov $0x28,%rdi
334a(5): mov %rdi,0x28(%rsp)
334f(2): xor %edi,%edi
3351(3): cmp %rsi,%rbx
3354(4): mov %rsi,(%rsp)
3358(5): mov %rcx,0x8(%rsp)
335d(5): mov %r8d,0x14(%rsp)
3362(6): jbe 0x9e(%rip)
3368(4): lea 0xffffffff(%rbx),%rcx
336c(3): movsxd %r9d,%rax
336f(3): mov %rdx,%r15
3372(5): mov %rax,0x18(%rsp)
3377(3): mov %rbx,%r13
337a(4): imul %rax,%rcx
337e(3): mov %rcx,%r14
3381(2): jmp 0x28(%rip)
3383(5): nop 0x0(%rax,%rax,1)
3388(3): mov (%r15),%edx
338b(5): mov 0x8(%rsp),%rdi
3390(2): xor %eax,%eax
3392(4): add $0x4,%r15
3396(5): call 0x4dba(%rip)
339b(5): sub 0x18(%rsp),%r14
33a0(4): cmp (%rsp),%r13
33a4(3): mov %ebp,%r9d
33a7(2): jz 0x59(%rip)
33a9(2): xor %edx,%edx
33ab(3): mov %r14,%rax
33ae(4): sub $0x1,%r13
33b2(3): div %rbx,%rax
33b5(3): sub %eax,%r9d
33b8(7): cmp $0x0,0x20cd42(%rip)
33bf(3): mov %rax,%rbp
33c2(4): mov 0x14(%rsp),%eax
33c6(4): lea 0x0(%r9,%rax,1),%esi
33ca(2): jz 0xffffffbe(%rip)
33cc(4): mov 0x3(%r15),%r12b
33d0(5): movzx 0x2(%r15),%ecx
33d5(5): movzx 0x1(%r15),%edx
33da(3): mov %r12d,%eax
33dd(2): mov %cl,%ah
33df(4): movzx %ax,%r10d
33e3(4): movzx (%r15),%eax
33e7(3): shl/sal $0x10,%edx
33ea(3): or %edx,%r10d
33ed(3): shl/sal $0x18,%eax
33f0(3): or %eax,%r10d
33f3(3): mov %r10d,%r12d
33f6(3): mov %r10d,%edx
33f9(2): jmp 0xffffff92(%rip)
33fb(5): nop 0x0(%rax,%rax,1)
3400(5): mov 0x28(%rsp),%rax
3405(9): xor $0x28,%rax
340e(2): jnz 0x11(%rip)
3410(4): add $0x38,%rsp
3414(1): pop %rbx
3415(1): pop %rbp
3416(2): pop %r12
3418(2): pop %r13
341a(2): pop %r14
341c(2): pop %r15
341e(1): ret near (%rsp)
341f(5): call 0xffffe4c1(%rip)

"print_short" :
3430(2): push %r15
3432(2): push %r14
3434(2): push %r13
3436(2): push %r12
3438(1): push %rbp
3439(1): push %rbx
343a(4): sub $0x38,%rsp
343e(9): mov $0x28,%rax
3447(5): mov %rax,0x28(%rsp)
344c(2): xor %eax,%eax
344e(3): cmp %rsi,%rdi
3451(4): mov %rcx,(%rsp)
3455(5): mov %r8d,0xc(%rsp)
345a(6): jbe 0x96(%rip)
3460(4): lea 0xffffffff(%rdi),%r8
3464(3): movsxd %r9d,%rax
3467(3): mov %rdi,%rbx
346a(5): mov %rax,0x18(%rsp)
346f(3): mov %rdx,%rbp
3472(3): xor %r15d,%r15d
3475(4): imul %rax,%r8
3479(3): mov %rdi,%rax
347c(3): sub %rsi,%rax
347f(5): mov %rax,0x10(%rsp)
3484(3): mov %r8,%r13
3487(2): jmp 0x2d(%rip)
3489(7): nop 0x0(%rax)
3490(6): movzx 0x0(%rbp,%r15,2),%edx
3496(4): mov (%rsp),%rdi
349a(2): xor %eax,%eax
349c(4): add $0x1,%r15
34a0(5): call 0x4cb0(%rip)
34a5(5): sub 0x18(%rsp),%r13
34aa(5): cmp %r15,0x10(%rsp)
34af(3): mov %r12d,%r9d
34b2(2): jz 0x3e(%rip)
34b4(2): xor %edx,%edx
34b6(3): mov %r13,%rax
34b9(3): div %rbx,%rax
34bc(3): sub %eax,%r9d
34bf(7): cmp $0x0,0x20cc3b(%rip)
34c6(3): mov %rax,%r12
34c9(4): mov 0xc(%rsp),%eax
34cd(4): lea 0x0(%r9,%rax,1),%esi
34d1(2): jz 0xffffffbf(%rip)
34d3(5): mov 0x1(%rbp,%r15,2),%r14b
34d8(6): movzx 0x0(%rbp,%r15,2),%eax
34de(3): mov %r14d,%ecx
34e1(2): mov %al,%ch
34e3(3): mov %ecx,%r14d
34e6(3): movzx %cx,%edx
34e9(2): jmp 0xffffffad(%rip)
34eb(5): nop 0x0(%rax,%rax,1)
34f0(5): mov 0x28(%rsp),%rax
34f5(9): xor $0x28,%rax
34fe(2): jnz 0x11(%rip)
3500(4): add $0x38,%rsp
3504(1): pop %rbx
3505(1): pop %rbp
3506(2): pop %r12
3508(2): pop %r13
350a(2): pop %r14
350c(2): pop %r15
350e(1): ret near (%rsp)
350f(5): call 0xffffe3d1(%rip)

"print_s_short" :
3520(2): push %r15
3522(2): push %r14
3524(2): push %r13
3526(2): push %r12
3528(1): push %rbp
3529(1): push %rbx
352a(4): sub $0x38,%rsp
352e(9): mov $0x28,%rax
3537(5): mov %rax,0x28(%rsp)
353c(2): xor %eax,%eax
353e(3): cmp %rsi,%rdi
3541(4): mov %rcx,(%rsp)
3545(5): mov %r8d,0xc(%rsp)
354a(6): jbe 0x96(%rip)
3550(4): lea 0xffffffff(%rdi),%r8
3554(3): movsxd %r9d,%rax
3557(3): mov %rdi,%rbx
355a(5): mov %rax,0x18(%rsp)
355f(3): mov %rdx,%rbp
3562(3): xor %r15d,%r15d
3565(4): imul %rax,%r8
3569(3): mov %rdi,%rax
356c(3): sub %rsi,%rax
356f(5): mov %rax,0x10(%rsp)
3574(3): mov %r8,%r13
3577(2): jmp 0x2d(%rip)
3579(7): nop 0x0(%rax)
3580(6): movsx 0x0(%rbp,%r15,2),%edx
3586(4): mov (%rsp),%rdi
358a(2): xor %eax,%eax
358c(4): add $0x1,%r15
3590(5): call 0x4bc0(%rip)
3595(5): sub 0x18(%rsp),%r13
359a(5): cmp %r15,0x10(%rsp)
359f(3): mov %r12d,%r9d
35a2(2): jz 0x3e(%rip)
35a4(2): xor %edx,%edx
35a6(3): mov %r13,%rax
35a9(3): div %rbx,%rax
35ac(3): sub %eax,%r9d
35af(7): cmp $0x0,0x20cb4b(%rip)
35b6(3): mov %rax,%r12
35b9(4): mov 0xc(%rsp),%eax
35bd(4): lea 0x0(%r9,%rax,1),%esi
35c1(2): jz 0xffffffbf(%rip)
35c3(5): mov 0x1(%rbp,%r15,2),%r14b
35c8(6): movzx 0x0(%rbp,%r15,2),%eax
35ce(3): mov %r14d,%ecx
35d1(2): mov %al,%ch
35d3(3): mov %ecx,%r14d
35d6(3): movsx %cx,%edx
35d9(2): jmp 0xffffffad(%rip)
35db(5): nop 0x0(%rax,%rax,1)
35e0(5): mov 0x28(%rsp),%rax
35e5(9): xor $0x28,%rax
35ee(2): jnz 0x11(%rip)
35f0(4): add $0x38,%rsp
35f4(1): pop %rbx
35f5(1): pop %rbp
35f6(2): pop %r12
35f8(2): pop %r13
35fa(2): pop %r14
35fc(2): pop %r15
35fe(1): ret near (%rsp)
35ff(5): call 0xffffe2e1(%rip)

"print_char" :
3610(2): push %r15
3612(2): push %r14
3614(2): push %r13
3616(2): push %r12
3618(1): push %rbp
3619(1): push %rbx
361a(4): sub $0x18,%rsp
361e(3): cmp %rsi,%rdi
3621(4): mov %rcx,(%rsp)
3625(2): jbe 0x5d(%rip)
3627(4): lea 0xffffffff(%rdi),%rcx
362b(3): movsxd %r9d,%r12
362e(3): mov %rdi,%rbp
3631(3): sub %rsi,%rbp
3634(3): mov %rdi,%rbx
3637(3): mov %rdx,%r15
363a(4): imul %r12,%rcx
363e(4): lea 0x0(%rdx,%rbp,1),%rax
3642(3): mov %r8d,%r14d
3645(5): mov %rax,0x8(%rsp)
364a(3): mov %rcx,%r13
364d(3): nop (%rax)
3650(3): mov %r13,%rax
3653(2): xor %edx,%edx
3655(4): mov (%rsp),%rdi
3659(3): div %rbx,%rax
365c(4): movzx (%r15),%edx
3660(3): sub %r12,%r13
3663(4): add $0x1,%r15
3667(3): sub %eax,%r9d
366a(3): mov %rax,%rbp
366d(2): xor %eax,%eax
366f(4): lea 0x0(%r9,%r14,1),%esi
3673(5): call 0x4add(%rip)
3678(5): cmp 0x8(%rsp),%r15
367d(3): mov %ebp,%r9d
3680(2): jnz 0xffffffd0(%rip)
3682(4): add $0x18,%rsp
3686(1): pop %rbx
3687(1): pop %rbp
3688(2): pop %r12
368a(2): pop %r13
368c(2): pop %r14
368e(2): pop %r15
3690(1): ret near (%rsp)

"print_s_char" :
36a0(2): push %r15
36a2(2): push %r14
36a4(2): push %r13
36a6(2): push %r12
36a8(1): push %rbp
36a9(1): push %rbx
36aa(4): sub $0x18,%rsp
36ae(3): cmp %rsi,%rdi
36b1(4): mov %rcx,(%rsp)
36b5(2): jbe 0x5d(%rip)
36b7(4): lea 0xffffffff(%rdi),%rcx
36bb(3): movsxd %r9d,%r12
36be(3): mov %rdi,%rbp
36c1(3): sub %rsi,%rbp
36c4(3): mov %rdi,%rbx
36c7(3): mov %rdx,%r15
36ca(4): imul %r12,%rcx
36ce(4): lea 0x0(%rdx,%rbp,1),%rax
36d2(3): mov %r8d,%r14d
36d5(5): mov %rax,0x8(%rsp)
36da(3): mov %rcx,%r13
36dd(3): nop (%rax)
36e0(3): mov %r13,%rax
36e3(2): xor %edx,%edx
36e5(4): mov (%rsp),%rdi
36e9(3): div %rbx,%rax
36ec(4): movsx (%r15),%edx
36f0(3): sub %r12,%r13
36f3(4): add $0x1,%r15
36f7(3): sub %eax,%r9d
36fa(3): mov %rax,%rbp
36fd(2): xor %eax,%eax
36ff(4): lea 0x0(%r9,%r14,1),%esi
3703(5): call 0x4a4d(%rip)
3708(5): cmp 0x8(%rsp),%r15
370d(3): mov %ebp,%r9d
3710(2): jnz 0xffffffd0(%rip)
3712(4): add $0x18,%rsp
3716(1): pop %rbx
3717(1): pop %rbp
3718(2): pop %r12
371a(2): pop %r13
371c(2): pop %r14
371e(2): pop %r15
3720(1): ret near (%rsp)

"print_long_double" :
3730(2): push %r15
3732(2): push %r14
3734(2): push %r13
3736(2): push %r12
3738(3): mov %rdi,%r12
373b(1): push %rbp
373c(1): push %rbx
373d(4): sub $0x78,%rsp
3741(9): mov $0x28,%rdi
374a(5): mov %rdi,0x68(%rsp)
374f(2): xor %edi,%edi
3751(3): cmp %rsi,%r12
3754(5): mov %rsi,0x8(%rsp)
3759(5): mov %r8d,0x14(%rsp)
375e(6): jbe 0xc2(%rip)
3764(5): lea 0xffffffff(%r12),%r8
3769(3): movsxd %r9d,%rax
376c(3): mov %rdx,%rbx
376f(5): mov %rax,0x18(%rsp)
3774(3): mov %r12,%r15
3777(5): lea 0x30(%rsp),%r13
377c(4): imul %rax,%r8
3780(3): mov %r8,%r14
3783(2): jmp 0x49(%rip)
3785(3): nop (%rax)
3788(2): fld (%rbx),%st0
378a(4): sub $0x10,%rsp
378e(2): xor %ecx,%ecx
3790(2): xor %edx,%edx
3792(5): mov $0x2d,%esi
3797(3): mov %r13,%rdi
379a(4): add $0x10,%rbx
379e(3): fstp %st0,(%rsp)
37a1(5): call 0x221f(%rip)
37a6(7): lea 0x752f(%rip),%rdi
37ad(3): mov %r13,%rdx
37b0(2): xor %eax,%eax
37b2(4): mov 0x20(%rsp),%esi
37b6(5): call 0x499a(%rip)
37bb(5): sub 0x28(%rsp),%r14
37c0(3): mov %ebp,%r9d
37c3(1): pop %rax
37c4(1): pop %rdx
37c5(5): cmp 0x8(%rsp),%r15
37ca(2): jz 0x56(%rip)
37cc(2): xor %edx,%edx
37ce(3): mov %r14,%rax
37d1(4): sub $0x1,%r15
37d5(3): div %r12,%rax
37d8(3): sub %eax,%r9d
37db(5): add 0x14(%rsp),%r9d
37e0(7): cmp $0x0,0x20c91a(%rip)
37e7(3): mov %rax,%rbp
37ea(5): mov %r9d,0x10(%rsp)
37ef(2): jz 0xffffff99(%rip)
37f1(4): lea 0xf(%rbx),%rdx
37f5(5): lea 0x20(%rsp),%rax
37fa(5): lea 0x30(%rsp),%rsi
37ff(1): nop 
3800(3): movzx (%rdx),%ecx
3803(4): add $0x1,%rax
3807(4): sub $0x1,%rdx
380b(3): mov %cl,0xffffffff(%rax)
380e(3): cmp %rax,%rsi
3811(2): jnz 0xffffffef(%rip)
3813(4): fld 0x20(%rsp),%st0
3817(5): jmp 0xffffff73(%rip)
381c(4): nop 0x0(%rax)
3820(5): mov 0x68(%rsp),%rax
3825(9): xor $0x28,%rax
382e(2): jnz 0x11(%rip)
3830(4): add $0x78,%rsp
3834(1): pop %rbx
3835(1): pop %rbp
3836(2): pop %r12
3838(2): pop %r13
383a(2): pop %r14
383c(2): pop %r15
383e(1): ret near (%rsp)
383f(5): call 0xffffe0a1(%rip)

"print_double" :
3850(2): push %r15
3852(2): push %r14
3854(2): push %r13
3856(2): push %r12
3858(1): push %rbp
3859(1): push %rbx
385a(3): mov %rdi,%rbp
385d(4): sub $0x68,%rsp
3861(9): mov $0x28,%rdi
386a(5): mov %rdi,0x58(%rsp)
386f(2): xor %edi,%edi
3871(3): cmp %rsi,%rbp
3874(5): mov %rsi,0x8(%rsp)
3879(5): mov %r8d,0x14(%rsp)
387e(6): jbe 0xc2(%rip)
3884(4): lea 0xffffffff(%rbp),%r8
3888(3): movsxd %r9d,%rax
388b(3): mov %rdx,%r13
388e(5): mov %rax,0x18(%rsp)
3893(3): mov %rbp,%r15
3896(5): lea 0x30(%rsp),%r12
389b(4): imul %rax,%r8
389f(3): mov %r8,%r14
38a2(2): jmp 0x45(%rip)
38a4(4): nop 0x0(%rax)
38a8(6): movsd 0x0(%r13),%xmm0
38ae(2): xor %ecx,%ecx
38b0(2): xor %edx,%edx
38b2(5): mov $0x28,%esi
38b7(3): mov %r12,%rdi
38ba(4): add $0x8,%r13
38be(5): call 0x1e22(%rip)
38c3(4): mov 0x10(%rsp),%esi
38c7(7): lea 0x740e(%rip),%rdi
38ce(2): xor %eax,%eax
38d0(3): mov %r12,%rdx
38d3(5): call 0x487d(%rip)
38d8(5): sub 0x18(%rsp),%r14
38dd(5): cmp 0x8(%rsp),%r15
38e2(3): mov %ebx,%r9d
38e5(2): jz 0x5b(%rip)
38e7(2): xor %edx,%edx
38e9(3): mov %r14,%rax
38ec(4): sub $0x1,%r15
38f0(3): div %rbp,%rax
38f3(3): sub %eax,%r9d
38f6(5): add 0x14(%rsp),%r9d
38fb(7): cmp $0x0,0x20c7ff(%rip)
3902(3): mov %rax,%rbx
3905(5): mov %r9d,0x10(%rsp)
390a(2): jz 0xffffff9e(%rip)
390c(4): lea 0x7(%r13),%rdx
3910(5): lea 0x28(%rsp),%rsi
3915(2): xor %eax,%eax
3917(9): nop 0x0(%rax,%rax,1)
3920(3): movzx (%rdx),%ecx
3923(4): sub $0x1,%rdx
3927(3): mov %cl,0x0(%rsi,%rax,1)
392a(4): add $0x1,%rax
392e(4): cmp $0x8,%rax
3932(2): jnz 0xffffffee(%rip)
3934(6): movsd 0x28(%rsp),%xmm0
393a(5): jmp 0xffffff74(%rip)
393f(1): nop 
3940(5): mov 0x58(%rsp),%rax
3945(9): xor $0x28,%rax
394e(2): jnz 0x11(%rip)
3950(4): add $0x68,%rsp
3954(1): pop %rbx
3955(1): pop %rbp
3956(2): pop %r12
3958(2): pop %r13
395a(2): pop %r14
395c(2): pop %r15
395e(1): ret near (%rsp)
395f(5): call 0xffffdf81(%rip)

"print_float" :
3970(2): push %r15
3972(2): push %r14
3974(3): mov %rsi,%rax
3977(2): push %r13
3979(2): push %r12
397b(1): push %rbp
397c(1): push %rbx
397d(4): sub $0x68,%rsp
3981(5): mov %rsi,0x10(%rsp)
3986(5): mov %r8d,0x28(%rsp)
398b(9): mov $0x28,%rsi
3994(5): mov %rsi,0x58(%rsp)
3999(2): xor %esi,%esi
399b(3): cmp %rax,%rdi
399e(6): jbe 0xd2(%rip)
39a4(4): lea 0xffffffff(%rdi),%r8
39a8(3): movsxd %r9d,%rax
39ab(3): mov %ebp,%r12d
39ae(5): mov %rax,0x18(%rsp)
39b3(3): mov %rdx,%rbx
39b6(5): mov %rdi,0x20(%rsp)
39bb(4): imul %rax,%r8
39bf(5): lea 0x30(%rsp),%rax
39c4(3): mov %rdi,%rbp
39c7(3): mov %r9d,%r13d
39ca(5): mov %rax,0x8(%rsp)
39cf(3): mov %r8,%r15
39d2(2): jmp 0x46(%rip)
39d4(4): nop 0x0(%rax)
39d8(4): movss (%rbx),%xmm0
39dc(5): mov 0x8(%rsp),%rdi
39e1(2): xor %ecx,%ecx
39e3(2): xor %edx,%edx
39e5(5): mov $0x1f,%esi
39ea(4): add $0x4,%rbx
39ee(5): call 0x1e62(%rip)
39f3(5): mov 0x8(%rsp),%rdx
39f8(7): lea 0x72dd(%rip),%rdi
39ff(3): mov %r13d,%esi
3a02(2): xor %eax,%eax
3a04(3): mov %r14d,%r13d
3a07(5): call 0x4749(%rip)
3a0c(5): sub 0x18(%rsp),%r15
3a11(5): cmp 0x10(%rsp),%rbp
3a16(2): jz 0x5a(%rip)
3a18(2): xor %edx,%edx
3a1a(3): mov %r15,%rax
3a1d(4): sub $0x1,%rbp
3a21(5): div 0x20(%rsp),%rax
3a26(3): sub %eax,%r13d
3a29(5): add 0x28(%rsp),%r13d
3a2e(7): cmp $0x0,0x20c6cc(%rip)
3a35(3): mov %rax,%r14
3a38(2): jz 0xffffffa0(%rip)
3a3a(4): mov 0x3(%rbx),%r12b
3a3e(4): movzx 0x1(%rbx),%edx
3a42(3): mov %r12d,%eax
3a45(3): mov 0x2(%rbx),%ah
3a48(3): shl/sal $0x10,%edx
3a4b(4): movzx %ax,%r10d
3a4f(3): movzx (%rbx),%eax
3a52(3): or %edx,%r10d
3a55(3): shl/sal $0x18,%eax
3a58(3): or %eax,%r10d
3a5b(5): mov %r10d,0x2c(%rsp)
3a60(3): mov %r10d,%r12d
3a63(6): movss 0x2c(%rsp),%xmm0
3a69(5): jmp 0xffffff73(%rip)
3a6e(2): nop 
3a70(5): mov 0x58(%rsp),%rax
3a75(9): xor $0x28,%rax
3a7e(2): jnz 0x11(%rip)
3a80(4): add $0x68,%rsp
3a84(1): pop %rbx
3a85(1): pop %rbp
3a86(2): pop %r12
3a88(2): pop %r13
3a8a(2): pop %r14
3a8c(2): pop %r15
3a8e(1): ret near (%rsp)
3a8f(5): call 0xffffde51(%rip)

"decode_format_string" :
3aa0(2): push %r15
3aa2(2): push %r14
3aa4(2): push %r13
3aa6(2): push %r12
3aa8(1): push %rbp
3aa9(1): push %rbx
3aaa(4): sub $0x18,%rsp
3aae(3): test %rdi,%rdi
3ab1(4): mov %rdi,(%rsp)
3ab5(6): jz 0x7f0(%rip)
3abb(3): cmp $0x0,(%rdi)
3abe(7): mov 0x20c70b(%rip),%rax
3ac5(3): mov %rdi,%r12
3ac8(7): lea 0x84f1(%rip),%r14
3acf(6): jz 0x223(%rip)
3ad5(3): nop (%rax)
3ad8(7): mov 0x20c6e9(%rip),%rcx
3adf(7): mov 0x20c6f2(%rip),%rdi
3ae6(3): cmp %rax,%rcx
3ae9(6): jbe 0x297(%rip)
3aef(4): lea 0x0(%rax,%rax,4),%rax
3af3(4): lea 0x0(%rdi,%rax,8),%rbp
3af7(3): test %rbp,%rbp
3afa(6): jz 0x763(%rip)
3b00(5): movzx (%r12),%esi
3b05(3): lea 0xffffff9f(%rsi),%eax
3b08(2): cmp $0x17,%al
3b0a(6): jnbe 0x22e(%rip)
3b10(3): movzx %al,%eax
3b13(4): movsxd 0x0(%r14,%rax,4),%rax
3b17(3): add %r14,%rax
3b1a(2): jmp %rax
3b1c(4): nop 0x0(%rax)
3b20(6): movzx 0x1(%r12),%eax
3b26(2): cmp $0x46,%al
3b28(6): jz 0x5a0(%rip)
3b2e(2): cmp $0x4c,%al
3b30(6): jz 0x580(%rip)
3b36(2): cmp $0x44,%al
3b38(6): jz 0x560(%rip)
3b3e(3): movsx %al,%ecx
3b41(5): lea 0x1(%r12),%rsi
3b46(3): sub $0x30,%ecx
3b49(3): cmp $0x9,%ecx
3b4c(6): jnbe 0x4c4(%rip)
3b52(5): lea 0x2(%r12),%rbx
3b57(3): movsxd %ecx,%rcx
3b5a(3): xor %r8d,%r8d
3b5d(2): jmp 0x2a(%rip)
3b5f(1): nop 
3b60(3): movsxd %eax,%rcx
3b63(a): mov $0x-3689348814741910323,%rax
3b6d(4): add $0x1,%rbx
3b71(3): mov %rcx,%rdx
3b74(3): not %rdx
3b77(3): mul %rax,%rdx,%rdx
3b7a(4): shr $0x3,%rdx
3b7e(3): cmp %r8,%rdx
3b81(6): jb 0x61f(%rip)
3b87(4): lea 0x0(%r8,%r8,4),%rax
3b8b(4): lea 0x0(%rcx,%rax,2),%r8
3b8f(3): movsx (%rbx),%eax
3b92(3): sub $0x30,%eax
3b95(3): cmp $0x9,%eax
3b98(2): jbe 0xffffffc8(%rip)
3b9a(3): cmp %rbx,%rsi
3b9d(7): mov 0x20c59c(%rip),%r13d
3ba4(6): jz 0x47c(%rip)
3baa(4): cmp $0x10,%r8
3bae(2): jnbe 0x16(%rip)
3bb0(7): lea 0x20c569(%rip),%rax
3bb7(4): mov 0x0(%rax,%r8,4),%r13d
3bbb(3): test %r13d,%r13d
3bbe(6): jnz 0x462(%rip)
3bc4(4): mov (%rsp),%rdi
3bc8(5): mov %r8,0x8(%rsp)
3bcd(5): call 0x3c53(%rip)
3bd2(5): mov $0x5,%edx
3bd7(3): mov %rax,%rbx
3bda(7): lea 0x73df(%rip),%rsi
3be1(5): jmp 0x401(%rip)
3be6(a): nop 0x0(%rax,%rax,1)
3bf0(6): movzx 0x1(%r12),%eax
3bf6(2): cmp $0x49,%al
3bf8(6): jz 0x608(%rip)
3bfe(6): jle 0x202(%rip)
3c04(2): cmp $0x4c,%al
3c06(6): jz 0x5e2(%rip)
3c0c(2): cmp $0x53,%al
3c0e(6): jnz 0x332(%rip)
3c14(4): cmp $0x6f,%sil
3c18(5): lea 0x2(%r12),%rbx
3c1d(7): mov 0x20c564(%rip),%r13d
3c24(6): mov $0x2,%r8d
3c2a(6): jnz 0x1fa(%rip)
3c30(4): lea 0xfffffffc(%r13),%eax
3c34(7): lea 0x711a(%rip),%r9
3c3b(4): lea 0x10(%rbp),%r10
3c3f(7): lea 0x70df(%rip),%rcx
3c46(5): mov $0x8,%edx
3c4b(5): mov $0x1,%esi
3c50(3): cmp $0x1,%eax
3c53(7): lea 0x7089(%rip),%rax
3c5a(3): mov %r10,%rdi
3c5d(5): mov %r10,0x8(%rsp)
3c62(4): cmovbe %rax,%r9
3c66(7): lea 0x8ad3(%rip),%rax
3c6d(4): mov 0x0(%rax,%r8,4),%r15d
3c71(2): xor %eax,%eax
3c73(3): mov %r15d,%r8d
3c76(5): call 0xffffdeda(%rip)
3c7b(5): mov $0x2,%edx
3c80(5): mov 0x8(%rsp),%r10
3c85(5): jmp 0x20e(%rip)
3c8a(6): nop 0x0(%rax,%rax,1)
3c90(5): lea 0x1(%r12),%rbx
3c95(7): lea 0x634(%rip),%rax
3c9c(6): mov $0x3,%r15d
3ca2(5): mov $0x6,%edx
3ca7(6): mov $0x1,%r13d
3cad(4): mov %rax,0x8(%rbp)
3cb1(4): mov %r13d,0x4(%rbp)
3cb5(3): mov %edx,0x0(%rbp)
3cb8(4): mov %r15d,0x1c(%rbp)
3cbc(3): cmp $0x7a,(%rbx)
3cbf(3): setz %al
3cc2(3): mov %al,0x18(%rbp)
3cc5(3): movzx %al,%eax
3cc8(3): add %rax,%rbx
3ccb(3): cmp %rbx,%r12
3cce(6): jz 0x570(%rip)
3cd4(7): mov 0x20c4f5(%rip),%rax
3cdb(3): mov %rbx,%r12
3cde(4): add $0x1,%rax
3ce2(3): cmp $0x0,(%rbx)
3ce5(7): mov %rax,0x20c4e4(%rip)
3cec(6): jnz 0xfffffdec(%rip)
3cf2(4): add $0x18,%rsp
3cf6(5): mov $0x1,%eax
3cfb(1): pop %rbx
3cfc(1): pop %rbp
3cfd(2): pop %r12
3cff(2): pop %r13
3d01(2): pop %r14
3d03(2): pop %r15
3d05(1): ret near (%rsp)
3d06(a): nop 0x0(%rax,%rax,1)
3d10(5): lea 0x1(%r12),%rbx
3d15(6): mov $0x3,%r15d
3d1b(7): lea 0xfffff31e(%rip),%rax
3d22(5): mov $0x5,%edx
3d27(6): mov $0x1,%r13d
3d2d(5): jmp 0xffffff80(%rip)
3d32(6): nop 0x0(%rax,%rax,1)
3d38(4): mov (%rsp),%rdi
3d3c(5): call 0x3ae4(%rip)
3d41(5): movsx (%r12),%ebx
3d46(7): lea 0x72cb(%rip),%rsi
3d4d(3): mov %rax,%rbp
3d50(5): mov $0x5,%edx
3d55(2): xor %edi,%edi
3d57(5): call 0xffffdb59(%rip)
3d5c(3): mov %rbp,%r8
3d5f(3): mov %rax,%rdx
3d62(2): xor %esi,%esi
3d64(2): mov %ebx,%ecx
3d66(2): xor %eax,%eax
3d68(2): xor %edi,%edi
3d6a(5): call 0xffffdd36(%rip)
3d6f(4): add $0x18,%rsp
3d73(2): xor %eax,%eax
3d75(1): pop %rbx
3d76(1): pop %rbp
3d77(2): pop %r12
3d79(2): pop %r13
3d7b(2): pop %r14
3d7d(2): pop %r15
3d7f(1): ret near (%rsp)
3d80(3): test %rdi,%rdi
3d83(2): jz 0x4d(%rip)
3d85(a): mov $0x153722867280912929,%rax
3d8f(3): cmp %rax,%rcx
3d92(2): jnbe 0x67(%rip)
3d94(3): mov %rcx,%rax
3d97(3): shr $0x1,%rax
3d9a(5): lea 0x1(%rcx,%rax,1),%rcx
3d9f(4): lea 0x0(%rcx,%rcx,4),%rsi
3da3(7): mov %rcx,0x20c41e(%rip)
3daa(4): shl/sal $0x3,%rsi
3dae(5): call 0x4112(%rip)
3db3(3): mov %rax,%rdi
3db6(7): mov %rax,0x20c41b(%rip)
3dbd(7): mov 0x20c40c(%rip),%rax
3dc4(5): jmp 0xfffffd2b(%rip)
3dc9(7): nop 0x0(%rax)
3dd0(3): test %rcx,%rcx
3dd3(5): mov $0x3,%eax
3dd8(5): mov $0x28,%edx
3ddd(4): cmove %rax,%rcx
3de1(3): mov %rdx,%rax
3de4(2): xor %esi,%esi
3de6(3): mul %rax,%rcx,%rdx
3de9(6): jo 0x4b2(%rip)
3def(3): test %rax,%rax
3df2(2): js 0x7(%rip)
3df4(3): test %rsi,%rsi
3df7(2): jz 0xffffffa8(%rip)
3df9(5): call 0x42b7(%rip)
3dfe(2): nop 
3e00(2): cmp $0x43,%al
3e02(6): jnz 0x13e(%rip)
3e08(7): mov 0x20c375(%rip),%r13d
3e0f(5): lea 0x2(%r12),%rbx
3e14(6): mov $0x1,%r8d
3e1a(4): cmp $0x6f,%sil
3e1e(6): jz 0xfffffe12(%rip)
3e24(6): jle 0x2bc(%rip)
3e2a(4): cmp $0x75,%sil
3e2e(6): jz 0x312(%rip)
3e34(4): cmp $0x78,%sil
3e38(6): jnz 0x211(%rip)
3e3e(4): lea 0xfffffffc(%r13),%eax
3e42(7): lea 0x7097(%rip),%r9
3e49(4): lea 0x10(%rbp),%r10
3e4d(7): lea 0x6ed1(%rip),%rcx
3e54(5): mov $0x8,%edx
3e59(5): mov $0x1,%esi
3e5e(3): cmp $0x1,%eax
3e61(7): lea 0x6e81(%rip),%rax
3e68(3): mov %r10,%rdi
3e6b(5): mov %r10,0x8(%rsp)
3e70(4): cmovbe %rax,%r9
3e74(7): lea 0x87a5(%rip),%rax
3e7b(4): mov 0x0(%rax,%r8,4),%r15d
3e7f(2): xor %eax,%eax
3e81(3): mov %r15d,%r8d
3e84(5): call 0xffffdccc(%rip)
3e89(5): mov 0x8(%rsp),%r10
3e8e(5): mov $0x3,%edx
3e93(3): mov %r10,%rdi
3e96(4): mov %edx,0x8(%rsp)
3e9a(5): call 0xffffda36(%rip)
3e9f(4): cmp $0x7,%rax
3ea3(4): mov 0x8(%rsp),%edx
3ea7(6): jnbe 0x3d5(%rip)
3ead(4): cmp $0x5,%r13d
3eb1(6): jnbe 0x198(%rip)
3eb7(7): lea 0x8162(%rip),%rsi
3ebe(3): mov %r13d,%ecx
3ec1(4): movsxd 0x0(%rsi,%rcx,4),%rax
3ec5(3): add %rsi,%rax
3ec8(2): jmp %rax
3eca(6): nop 0x0(%rax,%rax,1)
3ed0(7): lea 0xfffff259(%rip),%rax
3ed7(5): jmp 0xfffffdd6(%rip)
3edc(4): nop 0x0(%rax)
3ee0(7): lea 0xfffff349(%rip),%rax
3ee7(5): jmp 0xfffffdc6(%rip)
3eec(4): nop 0x0(%rax)
3ef0(7): lea 0xfffff439(%rip),%rax
3ef7(5): jmp 0xfffffdb6(%rip)
3efc(4): nop 0x0(%rax)
3f00(7): lea 0xfffff529(%rip),%rax
3f07(7): lea 0xfffff612(%rip),%rcx
3f0e(2): test %edx,%edx
3f10(4): cmove %rcx,%rax
3f14(5): jmp 0xfffffd99(%rip)
3f19(7): nop 0x0(%rax)
3f20(7): lea 0xfffff6e9(%rip),%rax
3f27(7): lea 0xfffff772(%rip),%rcx
3f2e(2): test %edx,%edx
3f30(4): cmove %rcx,%rax
3f34(5): jmp 0xfffffd79(%rip)
3f39(7): nop 0x0(%rax)
3f40(3): movsx %al,%ecx
3f43(5): lea 0x1(%r12),%rdi
3f48(3): sub $0x30,%ecx
3f4b(3): cmp $0x9,%ecx
3f4e(6): jnbe 0x2db(%rip)
3f54(5): lea 0x2(%r12),%rbx
3f59(3): movsxd %ecx,%rcx
3f5c(3): xor %r8d,%r8d
3f5f(2): jmp 0x30(%rip)
3f61(7): nop 0x0(%rax)
3f68(3): movsxd %eax,%rcx
3f6b(a): mov $0x-3689348814741910323,%rax
3f75(4): add $0x1,%rbx
3f79(3): mov %rcx,%rdx
3f7c(3): not %rdx
3f7f(3): mul %rax,%rdx,%rdx
3f82(4): shr $0x3,%rdx
3f86(3): cmp %r8,%rdx
3f89(6): jb 0x217(%rip)
3f8f(4): lea 0x0(%r8,%r8,4),%rax
3f93(4): lea 0x0(%rcx,%rax,2),%r8
3f97(3): movsx (%rbx),%eax
3f9a(3): sub $0x30,%eax
3f9d(3): cmp $0x9,%eax
3fa0(2): jbe 0xffffffc8(%rip)
3fa2(3): cmp %rbx,%rdi
3fa5(6): jz 0x272(%rip)
3fab(4): cmp $0x8,%r8
3faf(2): jnbe 0x16(%rip)
3fb1(7): lea 0x20c1c8(%rip),%rax
3fb8(4): mov 0x0(%rax,%r8,4),%r13d
3fbc(3): test %r13d,%r13d
3fbf(6): jnz 0xfffffe5b(%rip)
3fc5(4): mov (%rsp),%rdi
3fc9(5): mov %r8,0x8(%rsp)
3fce(5): call 0x3852(%rip)
3fd3(7): lea 0x6f5e(%rip),%rsi
3fda(3): mov %rax,%rbx
3fdd(5): mov $0x5,%edx
3fe2(2): xor %edi,%edi
3fe4(5): call 0xffffd8cc(%rip)
3fe9(5): mov 0x8(%rsp),%r8
3fee(3): mov %rbx,%rcx
3ff1(3): mov %rax,%rdx
3ff4(2): xor %esi,%esi
3ff6(2): xor %eax,%eax
3ff8(2): xor %edi,%edi
3ffa(5): call 0xffffdaa6(%rip)
3fff(4): add $0x18,%rsp
4003(2): xor %eax,%eax
4005(1): pop %rbx
4006(1): pop %rbp
4007(2): pop %r12
4009(2): pop %r13
400b(2): pop %r14
400d(2): pop %r15
400f(1): ret near (%rsp)
4010(7): mov 0x20c129(%rip),%r13d
4017(3): mov %rsi,%rbx
401a(6): nop 0x0(%rax,%rax,1)
4020(5): call 0xffffd840(%rip)
4025(3): mov (%rax),%rdi
4028(5): mov $0x1,%eax
402d(3): cmp $0x0,(%rdi)
4030(2): jz 0x7(%rip)
4032(5): call 0xffffd89e(%rip)
4037(4): cmp $0x7,%r13d
403b(2): jz 0x15(%rip)
403d(4): cmp $0x8,%r13d
4041(2): jz 0x3f(%rip)
4043(4): cmp $0x6,%r13d
4047(2): jz 0x21(%rip)
4049(5): call 0xffffd797(%rip)
404e(2): nop 
4050(4): lea 0x17(%rax),%r15d
4054(5): mov $0x4,%edx
4059(7): lea 0xfffff7f0(%rip),%rax
4060(5): jmp 0xfffffc4d(%rip)
4065(3): nop (%rax)
4068(4): lea 0xe(%rax),%r15d
406c(5): mov $0x4,%edx
4071(7): lea 0xfffff8f8(%rip),%rax
4078(5): jmp 0xfffffc35(%rip)
407d(3): nop (%rax)
4080(4): lea 0x1c(%rax),%r15d
4084(5): mov $0x4,%edx
4089(7): lea 0xfffff6a0(%rip),%rax
4090(5): jmp 0xfffffc1d(%rip)
4095(3): nop (%rax)
4098(5): lea 0x2(%r12),%rbx
409d(7): mov 0x20c09c(%rip),%r13d
40a4(5): jmp 0xffffff7c(%rip)
40a9(7): nop 0x0(%rax)
40b0(5): lea 0x2(%r12),%rbx
40b5(7): mov 0x20c0a4(%rip),%r13d
40bc(5): jmp 0xffffff64(%rip)
40c1(7): nop 0x0(%rax)
40c8(5): lea 0x2(%r12),%rbx
40cd(7): mov 0x20c05c(%rip),%r13d
40d4(5): jmp 0xffffff4c(%rip)
40d9(7): nop 0x0(%rax)
40e0(4): cmp $0x64,%sil
40e4(6): jnz 0xffffff65(%rip)
40ea(7): lea 0x85ef(%rip),%rax
40f1(4): lea 0x10(%rbp),%r10
40f5(7): lea 0x6c23(%rip),%rcx
40fc(5): mov $0x8,%edx
4101(5): mov $0x1,%esi
4106(4): mov 0x0(%rax,%r8,4),%r15d
410a(4): lea 0xfffffffc(%r13),%eax
410e(7): lea 0x8fc9(%rip),%r8
4115(3): mov %r10,%rdi
4118(5): mov %r10,0x8(%rsp)
411d(3): cmp $0x1,%eax
4120(7): lea 0x6bb9(%rip),%rax
4127(4): cmovbe %rax,%r8
412b(2): xor %eax,%eax
412d(5): call 0xffffda23(%rip)
4132(2): xor %edx,%edx
4134(5): mov 0x8(%rsp),%r10
4139(5): jmp 0xfffffd5a(%rip)
413e(2): nop 
4140(7): lea 0x8539(%rip),%rax
4147(4): lea 0x10(%rbp),%r10
414b(7): lea 0x6bcd(%rip),%rcx
4152(5): mov $0x8,%edx
4157(5): mov $0x1,%esi
415c(4): mov 0x0(%rax,%r8,4),%r15d
4160(4): lea 0xfffffffc(%r13),%eax
4164(7): lea 0x6b7c(%rip),%r8
416b(3): mov %r10,%rdi
416e(5): mov %r10,0x8(%rsp)
4173(3): cmp $0x1,%eax
4176(7): lea 0x6b69(%rip),%rax
417d(4): cmovbe %rax,%r8
4181(2): xor %eax,%eax
4183(5): call 0xffffd9cd(%rip)
4188(5): mov $0x1,%edx
418d(5): mov 0x8(%rsp),%r10
4192(5): jmp 0xfffffd01(%rip)
4197(9): nop 0x0(%rax,%rax,1)
41a0(4): mov (%rsp),%rdi
41a4(5): call 0x367c(%rip)
41a9(7): lea 0x6b88(%rip),%rsi
41b0(3): mov %rax,%rbx
41b3(5): mov $0x5,%edx
41b8(2): xor %edi,%edi
41ba(5): call 0xffffd6f6(%rip)
41bf(3): mov %rbx,%rcx
41c2(3): mov %rax,%rdx
41c5(2): xor %esi,%esi
41c7(2): xor %eax,%eax
41c9(2): xor %edi,%edi
41cb(5): call 0xffffd8d5(%rip)
41d0(4): add $0x18,%rsp
41d4(2): xor %eax,%eax
41d6(1): pop %rbx
41d7(1): pop %rbp
41d8(2): pop %r12
41da(2): pop %r13
41dc(2): pop %r14
41de(2): pop %r15
41e0(1): ret near (%rsp)
41e1(7): nop 0x0(%rax)
41e8(5): lea 0x2(%r12),%rbx
41ed(7): mov 0x20bfac(%rip),%r13d
41f4(6): mov $0x8,%r8d
41fa(5): jmp 0xfffffc20(%rip)
41ff(1): nop 
4200(5): lea 0x2(%r12),%rbx
4205(7): mov 0x20bf84(%rip),%r13d
420c(6): mov $0x4,%r8d
4212(5): jmp 0xfffffc08(%rip)
4217(7): mov 0x20bf72(%rip),%r13d
421e(6): mov $0x4,%r8d
4224(5): jmp 0xfffffbf6(%rip)
4229(7): mov 0x20bf60(%rip),%r13d
4230(3): mov %rdi,%rbx
4233(6): mov $0x4,%r8d
4239(5): jmp 0xfffffbe1(%rip)
423e(7): lea 0x828b(%rip),%rcx
4245(7): lea 0x6aa0(%rip),%rsi
424c(7): lea 0x6adb(%rip),%rdi
4253(5): mov $0x3e4,%edx
4258(5): call 0xffffd6f8(%rip)
425d(7): lea 0x824c(%rip),%rcx
4264(7): lea 0x6a81(%rip),%rsi
426b(7): lea 0x6a9f(%rip),%rdi
4272(5): mov $0x286,%edx
4277(5): call 0xffffd6d9(%rip)
427c(7): lea 0x822d(%rip),%rcx
4283(7): lea 0x6a62(%rip),%rsi
428a(7): lea 0x6cf7(%rip),%rdi
4291(5): mov $0x2e9,%edx
4296(5): call 0xffffd6ba(%rip)
429b(5): mov $0x1,%esi
42a0(5): jmp 0xfffffb4f(%rip)
42a5(7): lea 0x8224(%rip),%rcx
42ac(7): lea 0x6a39(%rip),%rsi
42b3(7): lea 0x6a4d(%rip),%rdi
42ba(5): mov $0x3d8,%edx
42bf(5): call 0xffffd691(%rip)

"print_ascii" :
42d0(2): push %r15
42d2(2): push %r14
42d4(2): push %r13
42d6(2): push %r12
42d8(1): push %rbp
42d9(1): push %rbx
42da(4): sub $0x38,%rsp
42de(9): mov $0x28,%rax
42e7(5): mov %rax,0x28(%rsp)
42ec(2): xor %eax,%eax
42ee(3): cmp %rsi,%rdi
42f1(5): mov %r8d,0x18(%rsp)
42f6(6): jbe 0x8f(%rip)
42fc(4): lea 0xffffffff(%rdi),%rbx
4300(3): movsxd %r9d,%r14
4303(3): mov %rdi,%rax
4306(3): sub %rsi,%rax
4309(7): lea 0x7d28(%rip),%r13
4310(3): mov %rdi,%r12
4313(4): imul %r14,%rbx
4317(3): add %rdx,%rax
431a(3): mov %rdx,%r15
431d(4): mov %rax,(%rsp)
4321(7): nop 0x0(%rax)
4328(2): xor %edx,%edx
432a(3): mov %rbx,%rax
432d(4): add $0x1,%r15
4331(5): movzx 0xffffffff(%r15),%r8d
4336(3): div %r12,%rax
4339(4): cmp $0xd,%r8b
433d(4): movzx %r8b,%edx
4341(3): mov %rax,%rbp
4344(6): jnbe 0xdc(%rip)
434a(5): movsxd 0x0(%r13,%rdx,4),%rax
434f(3): add %r13,%rax
4352(2): jmp %rax
4354(4): nop 0x0(%rax)
4358(7): lea 0x69fb(%rip),%rdx
435f(1): nop 
4360(4): mov 0x18(%rsp),%eax
4364(3): sub %ebp,%r9d
4367(7): lea 0x696e(%rip),%rdi
436e(3): sub %r14,%rbx
4371(4): lea 0x0(%r9,%rax,1),%esi
4375(2): xor %eax,%eax
4377(5): call 0x3dd9(%rip)
437c(4): cmp (%rsp),%r15
4380(3): mov %ebp,%r9d
4383(2): jnz 0xffffffa5(%rip)
4385(5): mov 0x28(%rsp),%rax
438a(9): xor $0x28,%rax
4393(6): jnz 0xf6(%rip)
4399(4): add $0x38,%rsp
439d(1): pop %rbx
439e(1): pop %rbp
439f(2): pop %r12
43a1(2): pop %r13
43a3(2): pop %r14
43a5(2): pop %r15
43a7(1): ret near (%rsp)
43a8(8): nop 0x0(%rax,%rax,1)
43b0(7): lea 0x69a0(%rip),%rdx
43b7(2): jmp 0xffffffa9(%rip)
43b9(7): nop 0x0(%rax)
43c0(7): lea 0x699f(%rip),%rdx
43c7(2): jmp 0xffffff99(%rip)
43c9(7): nop 0x0(%rax)
43d0(7): lea 0x6989(%rip),%rdx
43d7(2): jmp 0xffffff89(%rip)
43d9(7): nop 0x0(%rax)
43e0(7): lea 0x6985(%rip),%rdx
43e7(5): jmp 0xffffff79(%rip)
43ec(4): nop 0x0(%rax)
43f0(7): lea 0x696c(%rip),%rdx
43f7(5): jmp 0xffffff69(%rip)
43fc(4): nop 0x0(%rax)
4400(7): lea 0x6962(%rip),%rdx
4407(5): jmp 0xffffff59(%rip)
440c(4): nop 0x0(%rax)
4410(7): lea 0x6946(%rip),%rdx
4417(5): jmp 0xffffff49(%rip)
441c(4): nop 0x0(%rax)
4420(5): mov %r9d,0x1c(%rsp)
4425(5): mov %rdx,0x10(%rsp)
442a(5): mov %r8b,0x8(%rsp)
442f(5): call 0xffffd711(%rip)
4434(5): mov 0x10(%rsp),%rdx
4439(3): mov (%rax),%rax
443c(5): lea 0x24(%rsp),%r11
4441(6): movzx 0x8(%rsp),%r8d
4447(7): lea 0x6901(%rip),%rcx
444e(5): mov $0x1,%esi
4453(3): mov %r11,%rdi
4456(5): mov %r11,0x8(%rsp)
445b(5): test $0x40,0x1(%rax,%rdx,2)
4460(7): lea 0x68eb(%rip),%rax
4467(5): mov $0x4,%edx
446c(4): cmove %rax,%rcx
4470(2): xor %eax,%eax
4472(5): call 0xffffd6de(%rip)
4477(5): mov 0x8(%rsp),%r11
447c(5): mov 0x1c(%rsp),%r9d
4481(3): mov %r11,%rdx
4484(5): jmp 0xfffffedc(%rip)
4489(5): call 0xffffd457(%rip)

"check_and_close" :
4490(1): push %rbp
4491(1): push %rbx
4492(5): mov $0x1,%ebx
4497(4): sub $0x8,%rsp
449b(7): mov 0x20bd06(%rip),%rax
44a2(3): test %rax,%rax
44a5(2): jz 0x40(%rip)
44a7(3): test $0x20,(%rax)
44aa(2): mov %edi,%ebp
44ac(2): jnz 0x74(%rip)
44ae(7): mov 0x20bcfb(%rip),%rdx
44b5(7): lea 0x8c7d(%rip),%rdi
44bc(5): mov $0x2,%ecx
44c1(4): mov 0xfffffff8(%rdx),%rsi
44c5(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
44c7(3): setnbe %dl
44ca(3): sbb $0x0,%dl
44cd(2): test %dl,%dl
44cf(6): jnz 0xc9(%rip)
44d5(5): mov $0x1,%ebx
44da(b): mov $0x0,0x20bcc3(%rip)
44e5(7): mov 0x20bbbc(%rip),%rax
44ec(3): test $0x20,(%rax)
44ef(2): jz 0x25(%rip)
44f1(7): lea 0x6886(%rip),%rsi
44f8(5): mov $0x5,%edx
44fd(2): xor %edi,%edi
44ff(2): xor %ebx,%ebx
4501(5): call 0xffffd3af(%rip)
4506(2): xor %esi,%esi
4508(3): mov %rax,%rdx
450b(2): xor %edi,%edi
450d(2): xor %eax,%eax
450f(5): call 0xffffd591(%rip)
4514(4): add $0x8,%rsp
4518(2): mov %ebx,%eax
451a(1): pop %rbx
451b(1): pop %rbp
451c(1): ret near (%rsp)
451d(3): nop (%rax)
4520(7): mov 0x20bc91(%rip),%rdx
4527(2): xor %edi,%edi
4529(5): mov $0x3,%esi
452e(5): call 0x3122(%rip)
4533(7): lea 0x6835(%rip),%rsi
453a(3): mov %rax,%rbx
453d(2): xor %edi,%edi
453f(5): mov $0x5,%edx
4544(5): call 0xffffd36c(%rip)
4549(3): mov %rbx,%rcx
454c(2): xor %edi,%edi
454e(3): mov %rax,%rdx
4551(2): mov %ebp,%esi
4553(2): xor %eax,%eax
4555(5): call 0xffffd54b(%rip)
455a(7): mov 0x20bc4f(%rip),%rax
4561(7): lea 0x8bd1(%rip),%rdi
4568(5): mov $0x2,%ecx
456d(4): mov 0xfffffff8(%rax),%rsi
4571(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4573(3): setnbe %al
4576(2): sbb $0x0,%al
4578(2): xor %ebx,%ebx
457a(2): test %al,%al
457c(6): jz 0xffffff5e(%rip)
4582(7): mov 0x20bc1f(%rip),%rdi
4589(5): call 0x4277(%rip)
458e(5): jmp 0xffffff4c(%rip)
4593(5): nop 0x0(%rax,%rax,1)
4598(3): mov %rax,%rdi
459b(5): call 0x4265(%rip)
45a0(2): test %eax,%eax
45a2(6): jz 0xffffff33(%rip)
45a8(7): mov 0x20bc09(%rip),%rdx
45af(5): mov $0x3,%esi
45b4(2): xor %edi,%edi
45b6(5): call 0x309a(%rip)
45bb(3): mov %rax,%rbx
45be(5): call 0xffffd232(%rip)
45c3(2): mov (%rax),%esi
45c5(7): lea 0x8214(%rip),%rdx
45cc(3): mov %rbx,%rcx
45cf(2): xor %edi,%edi
45d1(2): xor %eax,%eax
45d3(2): xor %ebx,%ebx
45d5(5): call 0xffffd4cb(%rip)
45da(5): jmp 0xffffff00(%rip)

"open_next_file" :
45e0(1): push %rbp
45e1(1): push %rbx
45e2(7): lea 0x8b50(%rip),%rbx
45e9(5): mov $0x1,%ebp
45ee(4): sub $0x8,%rsp
45f2(7): mov 0x20bbb7(%rip),%rax
45f9(3): mov (%rax),%rdx
45fc(3): test %rdx,%rdx
45ff(7): mov %rdx,0x20bbb2(%rip)
4606(6): jz 0x8f(%rip)
460c(5): mov $0x2,%ecx
4611(3): mov %rdx,%rsi
4614(3): mov %rbx,%rdi
4617(4): add $0x8,%rax
461b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
461d(7): mov %rax,0x20bb8c(%rip)
4624(3): setnbe %al
4627(2): sbb $0x0,%al
4629(2): test %al,%al
462b(2): jnz 0x3d(%rip)
462d(7): lea 0x6756(%rip),%rsi
4634(5): mov $0x5,%edx
4639(2): xor %edi,%edi
463b(5): call 0xffffd275(%rip)
4640(7): mov %rax,0x20bb71(%rip)
4647(7): mov 0x20ba62(%rip),%rax
464e(7): mov $0x1,0x20bb4f(%rip)
4655(7): mov %rax,0x20bb4c(%rip)
465c(3): test %rax,%rax
465f(2): jz 0xffffff93(%rip)
4661(2): jmp 0x22(%rip)
4663(5): nop 0x0(%rax,%rax,1)
4668(7): lea 0x66f8(%rip),%rsi
466f(3): mov %rdx,%rdi
4672(5): call 0xffffd44e(%rip)
4677(3): test %rax,%rax
467a(7): mov %rax,0x20bb27(%rip)
4681(2): jz 0x1f(%rip)
4683(7): cmp $0x0,0x20bb66(%rip)
468a(2): jz 0xb(%rip)
468c(7): cmp $0x0,0x20bb7f(%rip)
4693(2): jz 0x4d(%rip)
4695(4): add $0x8,%rsp
4699(2): mov %ebp,%eax
469b(1): pop %rbx
469c(1): pop %rbp
469d(1): ret near (%rsp)
469e(2): nop 
46a0(7): mov 0x20bb11(%rip),%rdx
46a7(5): mov $0x3,%esi
46ac(2): xor %edi,%edi
46ae(5): call 0x2fa2(%rip)
46b3(3): mov %rax,%rbp
46b6(5): call 0xffffd13a(%rip)
46bb(2): mov (%rax),%esi
46bd(7): lea 0x811c(%rip),%rdx
46c4(3): mov %rbp,%rcx
46c7(2): xor %eax,%eax
46c9(2): xor %edi,%edi
46cb(2): xor %ebp,%ebp
46cd(5): call 0xffffd3d3(%rip)
46d2(7): mov 0x20bacf(%rip),%rax
46d9(5): jmp 0xffffff83(%rip)
46de(2): nop 
46e0(2): xor %ecx,%ecx
46e2(5): mov $0x2,%edx
46e7(2): xor %esi,%esi
46e9(3): mov %rax,%rdi
46ec(5): call 0xffffd394(%rip)
46f1(2): jmp 0xffffffa4(%rip)

"skip" :
4700(2): push %r15
4702(2): push %r14
4704(2): push %r13
4706(2): push %r12
4708(1): push %rbp
4709(1): push %rbx
470a(7): sub $0x20a8,%rsp
4711(9): mov $0x28,%rax
471a(8): mov %rax,0x2098(%rsp)
4722(2): xor %eax,%eax
4724(3): test %rdi,%rdi
4727(6): jz 0x181(%rip)
472d(7): mov 0x20ba74(%rip),%r15
4734(3): test %r15,%r15
4737(6): jz 0xd7(%rip)
473d(3): mov %rdi,%r13
4740(5): mov $0x1,%ebx
4745(3): mov %rsp,%r12
4748(8): lea 0x90(%rsp),%rbp
4750(a): mov $0x2305843009213693951,%r14
475a(2): jmp 0x65(%rip)
475c(4): nop 0x0(%rax)
4760(4): mov 0x18(%rsp),%eax
4764(5): and $0xd000,%eax
4769(5): cmp $0x8000,%eax
476e(6): jnz 0xca(%rip)
4774(5): mov 0x38(%rsp),%rax
4779(5): mov $0x200,%ecx
477e(4): lea 0xffffffff(%rax),%rdx
4782(3): cmp %r14,%rdx
4785(5): mov 0x30(%rsp),%rdx
478a(4): cmovnbe %rcx,%rax
478e(3): cmp %rax,%rdx
4791(6): jle 0xa7(%rip)
4797(3): cmp %r13,%rdx
479a(6): jnb 0x124(%rip)
47a0(3): sub %rdx,%r13
47a3(2): xor %edi,%edi
47a5(5): call 0xfffffceb(%rip)
47aa(2): and %eax,%ebx
47ac(5): call 0xfffffe34(%rip)
47b1(7): mov 0x20b9f0(%rip),%r15
47b8(2): and %eax,%ebx
47ba(3): test %r15,%r15
47bd(2): jz 0x51(%rip)
47bf(3): mov %r15,%rdi
47c2(5): call 0xffffd21e(%rip)
47c7(3): mov %r12,%rdx
47ca(2): mov %eax,%esi
47cc(5): mov $0x1,%edi
47d1(5): call 0xffffd24f(%rip)
47d6(2): test %eax,%eax
47d8(2): jz 0xffffff88(%rip)
47da(7): mov 0x20b9d7(%rip),%rdx
47e1(5): mov $0x3,%esi
47e6(2): xor %edi,%edi
47e8(5): call 0x2e68(%rip)
47ed(3): mov %rax,%rbx
47f0(5): call 0xffffd000(%rip)
47f5(2): mov (%rax),%esi
47f7(7): lea 0x7fe2(%rip),%rdx
47fe(3): mov %rbx,%rcx
4801(2): xor %edi,%edi
4803(2): xor %eax,%eax
4805(2): xor %ebx,%ebx
4807(5): call 0xffffd299(%rip)
480c(2): jmp 0xffffff97(%rip)
480e(7): lea 0x6833(%rip),%rsi
4815(5): mov $0x5,%edx
481a(2): xor %edi,%edi
481c(5): call 0xffffd094(%rip)
4821(2): xor %esi,%esi
4823(3): mov %rax,%rdx
4826(5): mov $0x1,%edi
482b(2): xor %eax,%eax
482d(5): call 0xffffd273(%rip)
4832(6): nop 0x0(%rax,%rax,1)
4838(6): mov $0x2000,%r15d
483e(2): nop 
4840(3): cmp %r13,%r15
4843(7): mov 0x20b95e(%rip),%r8
484a(5): mov $0x1,%edx
484f(4): cmovnbe %r13,%r15
4853(5): mov $0x2000,%esi
4858(3): mov %rbp,%rdi
485b(3): mov %r15,%rcx
485e(5): call 0xffffd272(%rip)
4863(3): sub %rax,%r13
4866(3): cmp %r15,%rax
4869(2): jz 0x13(%rip)
486b(7): mov 0x20b936(%rip),%rax
4872(2): mov (%rax),%eax
4874(2): test $0x20,%al
4876(2): jnz 0x39(%rip)
4878(2): test $0x10,%al
487a(2): jnz 0x39(%rip)
487c(3): test %r13,%r13
487f(2): jnz 0xffffffc1(%rip)
4881(8): mov 0x2098(%rsp),%rcx
4889(9): xor $0x28,%rcx
4892(2): mov %ebx,%eax
4894(2): jnz 0x46(%rip)
4896(7): add $0x20a8,%rsp
489d(1): pop %rbx
489e(1): pop %rbp
489f(2): pop %r12
48a1(2): pop %r13
48a3(2): pop %r14
48a5(2): pop %r15
48a7(1): ret near (%rsp)
48a8(5): mov $0x1,%ebx
48ad(2): jmp 0xffffffd4(%rip)
48af(2): xor %ebx,%ebx
48b1(2): jmp 0xffffffd0(%rip)
48b3(3): test %r13,%r13
48b6(6): jnz 0xfffffeed(%rip)
48bc(2): jmp 0xffffffc5(%rip)
48be(5): mov $0x1,%edx
48c3(3): mov %r13,%rsi
48c6(3): mov %r15,%rdi
48c9(5): call 0x3ff7(%rip)
48ce(2): test %eax,%eax
48d0(5): mov $0x0,%eax
48d5(3): cmovne %eax,%ebx
48d8(2): jmp 0xffffffa9(%rip)
48da(5): call 0xffffd006(%rip)

"read_char" :
48e0(2): push %r12
48e2(3): mov %rdi,%r12
48e5(1): push %rbp
48e6(1): push %rbx
48e7(6): mov $0xffffffff,(%rdi)
48ed(5): mov $0x1,%ebp
48f2(7): mov 0x20b8af(%rip),%rdi
48f9(3): test %rdi,%rdi
48fc(2): jnz 0x27(%rip)
48fe(2): jmp 0x33(%rip)
4900(5): call 0xffffcef0(%rip)
4905(2): mov (%rax),%edi
4907(5): call 0xfffffb89(%rip)
490c(2): mov %eax,%ebx
490e(5): call 0xfffffcd2(%rip)
4913(7): mov 0x20b88e(%rip),%rdi
491a(2): and %eax,%ebx
491c(2): and %ebx,%ebp
491e(3): test %rdi,%rdi
4921(2): jz 0x10(%rip)
4923(5): call 0xffffd06d(%rip)
4928(3): cmp $0xff,%eax
492b(4): mov %eax,(%r12)
492f(2): jz 0xffffffd1(%rip)
4931(2): mov %ebp,%eax
4933(1): pop %rbx
4934(1): pop %rbp
4935(2): pop %r12
4937(1): ret near (%rsp)

"write_block" :
4940(2): push %r15
4942(2): push %r14
4944(3): mov %rsi,%r14
4947(2): push %r13
4949(2): push %r12
494b(1): push %rbp
494c(1): push %rbx
494d(4): sub $0x28,%rsp
4951(7): cmp $0x0,0x20b6b9(%rip)
4958(5): mov %rdi,0x18(%rsp)
495d(5): mov %rcx,0x8(%rsp)
4962(2): jz 0xf(%rip)
4964(7): cmp $0x0,0x20b6a5(%rip)
496b(6): jz 0x1d5(%rip)
4971(8): cmp $0x0,0x20b857(%rip)
4979(7): mov $0x0,0x20b780(%rip)
4980(6): jz 0x1ff(%rip)
4986(5): mov 0x8(%rsp),%rax
498b(2): xor %ebp,%ebp
498d(3): xor %r12d,%r12d
4990(5): mov %r14,0x10(%rsp)
4995(4): lea 0x0(%rax,%r14,1),%r13
4999(2): jmp 0x3c(%rip)
499b(5): nop 0x0(%rax,%rax,1)
49a0(7): mov 0x20b701(%rip),%rdi
49a7(4): mov 0x28(%rdi),%rax
49ab(4): cmp 0x30(%rdi),%rax
49af(6): jnb 0x1e9(%rip)
49b5(4): lea 0x1(%rax),%rdx
49b9(4): mov %rdx,0x28(%rdi)
49bd(3): mov $0xa,(%rax)
49c0(4): add $0x1,%r12
49c4(4): add $0x28,%rbp
49c8(7): cmp %r12,0x20b801(%rip)
49cf(6): jbe 0x1b0(%rip)
49d5(7): mov 0x20b7fc(%rip),%rax
49dc(7): lea 0x7bfd(%rip),%rsi
49e3(7): mov 0x20b7d6(%rip),%rbx
49ea(2): xor %edx,%edx
49ec(4): mov 0x4(%rax,%rbp,1),%eax
49f0(4): movsxd 0x0(%rsi,%rax,4),%rcx
49f4(3): mov %rbx,%rax
49f7(5): sub 0x10(%rsp),%rbx
49fc(3): div %rcx,%rax
49ff(2): xor %edx,%edx
4a01(3): mov %rax,%r14
4a04(3): mov %eax,%r15d
4a07(3): mov %rbx,%rax
4a0a(3): div %rcx,%rax
4a0d(3): test %r12,%r12
4a10(3): mov %rax,%rbx
4a13(6): jnz 0x19d(%rip)
4a19(2): xor %esi,%esi
4a1b(5): mov 0x18(%rsp),%rdi
4a20(6): call 0x20b7da(%rip)
4a26(7): mov 0x20b7ab(%rip),%rax
4a2d(3): movsxd %ebx,%rsi
4a30(3): movsxd %r14d,%rdi
4a33(5): mov 0x8(%rsp),%rdx
4a38(3): add %rbp,%rax
4a3b(4): lea 0x10(%rax),%rcx
4a3f(4): mov 0x20(%rax),%r9d
4a43(4): mov 0x1c(%rax),%r8d
4a47(3): call 0x8(%rax)
4a4a(7): mov 0x20b787(%rip),%rcx
4a51(3): add %rbp,%rcx
4a54(4): cmp $0x0,0x18(%rcx)
4a58(6): jz 0xffffff48(%rip)
4a5e(3): mov 0x20(%rcx),%eax
4a61(7): lea 0x6274(%rip),%rsi
4a68(5): mov $0x1,%edi
4a6d(3): imul %ebx,%eax
4a70(4): imul 0x1c(%rcx),%ebx
4a74(7): lea 0x8346(%rip),%rcx
4a7b(1): cdq %eax
4a7c(3): idiv %r15d,%eax
4a7f(3): lea 0x0(%rax,%rbx,1),%edx
4a82(2): xor %eax,%eax
4a84(5): call 0xffffcfec(%rip)
4a89(7): mov 0x20b618(%rip),%rcx
4a90(7): lea 0x6304(%rip),%rdi
4a97(5): mov $0x3,%edx
4a9c(5): mov $0x1,%esi
4aa1(5): call 0xffffcf9f(%rip)
4aa6(6): cmp $0x0,0x10(%rsp)
4aac(2): jz 0x56(%rip)
4aae(5): call 0xffffd092(%rip)
4ab3(5): mov 0x8(%rsp),%rbx
4ab8(3): mov %rax,%r15
4abb(5): nop 0x0(%rax,%rax,1)
4ac0(4): add $0x1,%rbx
4ac4(4): movzx 0xffffffff(%rbx),%ecx
4ac8(3): mov (%r15),%rdx
4acb(5): test $0x40,0x1(%rdx,%rcx,2)
4ad0(3): mov %rcx,%rax
4ad3(3): movzx %cl,%esi
4ad6(2): jnz 0xc(%rip)
4ad8(5): mov $0x2e,%esi
4add(5): mov $0x2e,%eax
4ae2(7): mov 0x20b5bf(%rip),%rdi
4ae9(4): mov 0x28(%rdi),%rdx
4aed(4): cmp 0x30(%rdi),%rdx
4af1(2): jnb 0x3f(%rip)
4af3(4): lea 0x1(%rdx),%rcx
4af7(4): mov %rcx,0x28(%rdi)
4afb(2): mov %al,(%rdx)
4afd(3): cmp %r13,%rbx
4b00(2): jnz 0xffffffc0(%rip)
4b02(7): mov 0x20b59f(%rip),%rdi
4b09(4): mov 0x28(%rdi),%rax
4b0d(4): cmp 0x30(%rdi),%rax
4b11(6): jnb 0xc7(%rip)
4b17(4): lea 0x1(%rax),%rdx
4b1b(4): mov %rdx,0x28(%rdi)
4b1f(3): mov $0x3c,(%rax)
4b22(5): jmp 0xfffffe7e(%rip)
4b27(9): nop 0x0(%rax,%rax,1)
4b30(5): call 0xffffcdf0(%rip)
4b35(2): jmp 0xffffffc8(%rip)
4b37(9): nop 0x0(%rax,%rax,1)
4b40(3): mov %rdx,%rdi
4b43(7): mov 0x20b676(%rip),%rdx
4b4a(3): cmp %rsi,%rdx
4b4d(6): jnz 0xfffffe24(%rip)
4b53(3): mov %rcx,%rsi
4b56(5): call 0xffffce4a(%rip)
4b5b(2): test %eax,%eax
4b5d(6): jnz 0xfffffe14(%rip)
4b63(7): cmp $0x0,0x20b596(%rip)
4b6a(2): jnz 0x15(%rip)
4b6c(7): lea 0x6226(%rip),%rdi
4b73(5): call 0xffffccbd(%rip)
4b78(7): mov $0x1,0x20b581(%rip)
4b7f(7): mov $0x0,0x20b48a(%rip)
4b86(4): add $0x28,%rsp
4b8a(1): pop %rbx
4b8b(1): pop %rbp
4b8c(2): pop %r12
4b8e(2): pop %r13
4b90(2): pop %r14
4b92(2): pop %r15
4b94(1): ret near (%rsp)
4b95(3): nop (%rax)
4b98(5): mov $0xa,%esi
4b9d(5): call 0xffffcd83(%rip)
4ba2(5): jmp 0xfffffe1e(%rip)
4ba7(9): nop 0x0(%rax,%rax,1)
4bb0(6): mov 0x20b66a(%rip),%edx
4bb6(7): lea 0x8204(%rip),%rcx
4bbd(7): lea 0x6118(%rip),%rsi
4bc4(5): mov $0x1,%edi
4bc9(2): xor %eax,%eax
4bcb(5): call 0xffffcea5(%rip)
4bd0(5): jmp 0xfffffe56(%rip)
4bd5(3): nop (%rax)
4bd8(5): mov $0x3c,%esi
4bdd(5): call 0xffffcd43(%rip)
4be2(5): jmp 0xfffffdbe(%rip)

"format_address_paren" :
4bf0(1): push %rbp
4bf1(1): push %rbx
4bf2(3): mov %rdi,%rbp
4bf5(2): mov %esi,%ebx
4bf7(4): sub $0x8,%rsp
4bfb(7): mov 0x20b4a6(%rip),%rdi
4c02(4): mov 0x28(%rdi),%rax
4c06(4): cmp 0x30(%rdi),%rax
4c0a(2): jnb 0x56(%rip)
4c0c(4): lea 0x1(%rax),%rdx
4c10(4): mov %rdx,0x28(%rdi)
4c14(3): mov $0x28,(%rax)
4c17(5): mov $0x29,%esi
4c1c(3): mov %rbp,%rdi
4c1f(5): call 0xffffe271(%rip)
4c24(2): test %bl,%bl
4c26(2): jz 0x1d(%rip)
4c28(7): mov 0x20b479(%rip),%rdi
4c2f(4): mov 0x28(%rdi),%rax
4c33(4): cmp 0x30(%rdi),%rax
4c37(2): jnb 0x19(%rip)
4c39(4): lea 0x1(%rax),%rdx
4c3d(4): mov %rdx,0x28(%rdi)
4c41(2): mov %bl,(%rax)
4c43(4): add $0x8,%rsp
4c47(1): pop %rbx
4c48(1): pop %rbp
4c49(1): ret near (%rsp)
4c4a(6): nop 0x0(%rax,%rax,1)
4c50(4): add $0x8,%rsp
4c54(3): movzx %bl,%esi
4c57(1): pop %rbx
4c58(1): pop %rbp
4c59(5): jmp 0xffffccc7(%rip)
4c5e(2): nop 
4c60(5): mov $0x28,%esi
4c65(5): call 0xffffccbb(%rip)
4c6a(2): jmp 0xffffffad(%rip)

"format_address_label" :
4c70(1): push %rbp
4c71(1): push %rbx
4c72(2): mov %esi,%ebp
4c74(5): mov $0x20,%esi
4c79(3): mov %rdi,%rbx
4c7c(4): sub $0x8,%rsp
4c80(5): call 0xffffe210(%rip)
4c85(7): add 0x20b57c(%rip),%rbx
4c8c(4): add $0x8,%rsp
4c90(4): movsx %bpl,%esi
4c94(3): mov %rbx,%rdi
4c97(1): pop %rbx
4c98(1): pop %rbp
4c99(5): jmp 0xffffff57(%rip)

"read_block" :
4ca0(3): test %rdi,%rdi
4ca3(2): push %r14
4ca5(2): push %r13
4ca7(2): push %r12
4ca9(1): push %rbp
4caa(1): push %rbx
4cab(6): jz 0x9c(%rip)
4cb1(7): cmp %rdi,0x20b508(%rip)
4cb8(3): mov %rdi,%r12
4cbb(6): jb 0x8c(%rip)
4cc1(7): mov 0x20b4e0(%rip),%rcx
4cc8(3): mov %rdx,%rbx
4ccb(7): mov $0x0,(%rdx)
4cd2(3): test %rcx,%rcx
4cd5(2): jz 0x6b(%rip)
4cd7(3): mov %rsi,%r13
4cda(2): xor %edi,%edi
4cdc(5): mov $0x1,%ebp
4ce1(2): jmp 0x30(%rip)
4ce3(5): nop 0x0(%rax,%rax,1)
4ce8(5): call 0xffffcb08(%rip)
4ced(2): mov (%rax),%edi
4cef(5): call 0xfffff7a1(%rip)
4cf4(3): mov %eax,%r14d
4cf7(5): call 0xfffff8e9(%rip)
4cfc(7): mov 0x20b4a5(%rip),%rcx
4d03(3): and %eax,%r14d
4d06(3): and %r14d,%ebp
4d09(3): test %rcx,%rcx
4d0c(2): jz 0x23(%rip)
4d0e(3): mov (%rbx),%rdi
4d11(3): mov %r12,%r14
4d14(5): mov $0x1,%esi
4d19(3): sub %rdi,%r14
4d1c(3): add %r13,%rdi
4d1f(3): mov %r14,%rdx
4d22(5): call 0xffffcb4e(%rip)
4d27(3): add %rax,(%rbx)
4d2a(3): cmp %rax,%r14
4d2d(2): jnz 0xffffffbb(%rip)
4d2f(1): pop %rbx
4d30(2): mov %ebp,%eax
4d32(1): pop %rbp
4d33(2): pop %r12
4d35(2): pop %r13
4d37(2): pop %r14
4d39(1): ret near (%rsp)
4d3a(6): nop 0x0(%rax,%rax,1)
4d40(5): mov $0x1,%ebp
4d45(2): jmp 0xffffffea(%rip)
4d47(7): lea 0x7752(%rip),%rcx
4d4e(7): lea 0x5f97(%rip),%rsi
4d55(7): lea 0x6043(%rip),%rdi
4d5c(5): mov $0x508,%edx
4d61(5): call 0xffffcbef(%rip)

"usage" :
4d70(2): push %r13
4d72(2): push %r12
4d74(5): mov $0x5,%edx
4d79(1): push %rbp
4d7a(1): push %rbx
4d7b(2): mov %edi,%ebp
4d7d(7): sub $0x88,%rsp
4d84(7): mov 0x20b4ad(%rip),%rbx
4d8b(9): mov $0x28,%rax
4d94(5): mov %rax,0x78(%rsp)
4d99(2): xor %eax,%eax
4d9b(2): test %edi,%edi
4d9d(2): jz 0x30(%rip)
4d9f(7): lea 0x62ca(%rip),%rsi
4da6(2): xor %edi,%edi
4da8(5): call 0xffffcb08(%rip)
4dad(7): mov 0x20b32c(%rip),%rdi
4db4(3): mov %rax,%rdx
4db7(3): mov %rbx,%rcx
4dba(5): mov $0x1,%esi
4dbf(2): xor %eax,%eax
4dc1(5): call 0xffffcd4f(%rip)
4dc6(2): mov %ebp,%edi
4dc8(5): call 0xffffcd28(%rip)
4dcd(7): lea 0x62c4(%rip),%rsi
4dd4(2): xor %edi,%edi
4dd6(5): call 0xffffcada(%rip)
4ddb(3): mov %rbx,%rcx
4dde(3): mov %rbx,%r8
4de1(3): mov %rbx,%rdx
4de4(3): mov %rax,%rsi
4de7(5): mov $0x1,%edi
4dec(2): xor %eax,%eax
4dee(5): call 0xffffcc82(%rip)
4df3(7): mov 0x20b2ae(%rip),%rbx
4dfa(7): lea 0x633f(%rip),%rsi
4e01(5): mov $0x5,%edx
4e06(2): xor %edi,%edi
4e08(5): call 0xffffcaa8(%rip)
4e0d(3): mov %rbx,%rsi
4e10(3): mov %rax,%rdi
4e13(5): call 0xffffcb9d(%rip)
4e18(7): mov 0x20b289(%rip),%rbx
4e1f(7): lea 0x63d2(%rip),%rsi
4e26(5): mov $0x5,%edx
4e2b(2): xor %edi,%edi
4e2d(5): call 0xffffca83(%rip)
4e32(3): mov %rbx,%rsi
4e35(3): mov %rax,%rdi
4e38(5): call 0xffffcb78(%rip)
4e3d(7): mov 0x20b264(%rip),%rbx
4e44(7): lea 0x63e5(%rip),%rsi
4e4b(5): mov $0x5,%edx
4e50(2): xor %edi,%edi
4e52(5): call 0xffffca5e(%rip)
4e57(3): mov %rbx,%rsi
4e5a(3): mov %rax,%rdi
4e5d(5): call 0xffffcb53(%rip)
4e62(7): mov 0x20b23f(%rip),%rbx
4e69(7): lea 0x6548(%rip),%rsi
4e70(5): mov $0x5,%edx
4e75(2): xor %edi,%edi
4e77(5): call 0xffffca39(%rip)
4e7c(3): mov %rbx,%rsi
4e7f(3): mov %rax,%rdi
4e82(5): call 0xffffcb2e(%rip)
4e87(7): mov 0x20b21a(%rip),%rbx
4e8e(7): lea 0x6573(%rip),%rsi
4e95(5): mov $0x5,%edx
4e9a(2): xor %edi,%edi
4e9c(5): call 0xffffca14(%rip)
4ea1(3): mov %rbx,%rsi
4ea4(3): mov %rax,%rdi
4ea7(5): call 0xffffcb09(%rip)
4eac(7): mov 0x20b1f5(%rip),%rbx
4eb3(7): lea 0x666e(%rip),%rsi
4eba(5): mov $0x5,%edx
4ebf(2): xor %edi,%edi
4ec1(5): call 0xffffc9ef(%rip)
4ec6(3): mov %rbx,%rsi
4ec9(3): mov %rax,%rdi
4ecc(5): call 0xffffcae4(%rip)
4ed1(7): mov 0x20b1d0(%rip),%rbx
4ed8(7): lea 0x6871(%rip),%rsi
4edf(5): mov $0x5,%edx
4ee4(2): xor %edi,%edi
4ee6(5): call 0xffffc9ca(%rip)
4eeb(3): mov %rbx,%rsi
4eee(3): mov %rax,%rdi
4ef1(5): call 0xffffcabf(%rip)
4ef6(7): mov 0x20b1ab(%rip),%rbx
4efd(7): lea 0x687c(%rip),%rsi
4f04(5): mov $0x5,%edx
4f09(2): xor %edi,%edi
4f0b(5): call 0xffffc9a5(%rip)
4f10(3): mov %rbx,%rsi
4f13(3): mov %rax,%rdi
4f16(5): call 0xffffca9a(%rip)
4f1b(7): mov 0x20b186(%rip),%rbx
4f22(7): lea 0x688f(%rip),%rsi
4f29(5): mov $0x5,%edx
4f2e(2): xor %edi,%edi
4f30(5): call 0xffffc980(%rip)
4f35(3): mov %rbx,%rsi
4f38(3): mov %rax,%rdi
4f3b(5): call 0xffffca75(%rip)
4f40(7): mov 0x20b161(%rip),%rbx
4f47(7): lea 0x69aa(%rip),%rsi
4f4e(5): mov $0x5,%edx
4f53(2): xor %edi,%edi
4f55(5): call 0xffffc95b(%rip)
4f5a(3): mov %rbx,%rsi
4f5d(3): mov %rax,%rdi
4f60(5): call 0xffffca50(%rip)
4f65(7): mov 0x20b13c(%rip),%rbx
4f6c(7): lea 0x6a9d(%rip),%rsi
4f73(5): mov $0x5,%edx
4f78(2): xor %edi,%edi
4f7a(5): call 0xffffc936(%rip)
4f7f(3): mov %rbx,%rsi
4f82(3): mov %rax,%rdi
4f85(5): call 0xffffca2b(%rip)
4f8a(7): mov 0x20b117(%rip),%rbx
4f91(7): lea 0x6b20(%rip),%rsi
4f98(5): mov $0x5,%edx
4f9d(2): xor %edi,%edi
4f9f(5): call 0xffffc911(%rip)
4fa4(3): mov %rbx,%rsi
4fa7(3): mov %rax,%rdi
4faa(5): call 0xffffca06(%rip)
4faf(7): mov 0x20b0f2(%rip),%rbx
4fb6(7): lea 0x6bfb(%rip),%rsi
4fbd(5): mov $0x5,%edx
4fc2(2): xor %edi,%edi
4fc4(5): call 0xffffc8ec(%rip)
4fc9(3): mov %rbx,%rsi
4fcc(3): mov %rax,%rdi
4fcf(5): call 0xffffc9e1(%rip)
4fd4(7): mov 0x20b0cd(%rip),%rbx
4fdb(7): lea 0x6cce(%rip),%rsi
4fe2(5): mov $0x5,%edx
4fe7(2): xor %edi,%edi
4fe9(5): call 0xffffc8c7(%rip)
4fee(3): mov %rbx,%rsi
4ff1(3): mov %rax,%rdi
4ff4(5): call 0xffffc9bc(%rip)
4ff9(7): mov 0x20b0a8(%rip),%rbx
5000(7): lea 0x6d09(%rip),%rsi
5007(5): mov $0x5,%edx
500c(2): xor %edi,%edi
500e(5): call 0xffffc8a2(%rip)
5013(3): mov %rbx,%rsi
5016(3): mov %rax,%rdi
5019(7): lea 0x5d9d(%rip),%rbx
5020(5): call 0xffffc990(%rip)
5025(7): lea 0x5d94(%rip),%rax
502c(7): lea 0x5dce(%rip),%rcx
5033(9): mov $0x0,0x60(%rsp)
503c(9): mov $0x0,0x68(%rsp)
5045(3): mov %rsp,%rdx
5048(4): mov %rax,(%rsp)
504c(7): lea 0x5d6f(%rip),%rax
5053(5): mov %rcx,0x30(%rsp)
5058(7): lea 0x5dac(%rip),%rcx
505f(5): mov %rax,0x8(%rsp)
5064(7): lea 0x5dcf(%rip),%rax
506b(5): mov %rcx,0x40(%rsp)
5070(7): lea 0x5d9e(%rip),%rcx
5077(5): mov %rax,0x10(%rsp)
507c(7): lea 0x5d4f(%rip),%rax
5083(5): mov %rcx,0x50(%rsp)
5088(5): mov %rax,0x18(%rsp)
508d(7): lea 0x5d54(%rip),%rax
5094(5): mov %rax,0x20(%rsp)
5099(7): lea 0x5d52(%rip),%rax
50a0(5): mov %rax,0x28(%rsp)
50a5(5): mov %rax,0x38(%rsp)
50aa(5): mov %rax,0x48(%rsp)
50af(5): mov %rax,0x58(%rsp)
50b4(4): nop 0x0(%rax)
50b8(4): add $0x10,%rdx
50bc(3): mov (%rdx),%rdi
50bf(3): test %rdi,%rdi
50c2(2): jz 0x15(%rip)
50c4(5): mov $0x3,%ecx
50c9(3): mov %rbx,%rsi
50cc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
50ce(3): setnbe %al
50d1(2): sbb $0x0,%al
50d3(2): test %al,%al
50d5(2): jnz 0xffffffe3(%rip)
50d7(4): mov 0x8(%rdx),%r12
50db(2): xor %edi,%edi
50dd(5): mov $0x5,%edx
50e2(7): lea 0x5d36(%rip),%rsi
50e9(3): test %r12,%r12
50ec(6): jz 0xc7(%rip)
50f2(5): call 0xffffc7be(%rip)
50f7(7): lea 0x6cfa(%rip),%rcx
50fe(7): lea 0x5d31(%rip),%rdx
5105(3): mov %rax,%rsi
5108(5): mov $0x1,%edi
510d(2): xor %eax,%eax
510f(5): call 0xffffc961(%rip)
5114(2): xor %esi,%esi
5116(5): mov $0x5,%edi
511b(5): call 0xffffc945(%rip)
5120(3): test %rax,%rax
5123(2): jz 0x1e(%rip)
5125(7): lea 0x5d18(%rip),%rsi
512c(5): mov $0x3,%edx
5131(3): mov %rax,%rdi
5134(5): call 0xffffc6cc(%rip)
5139(2): test %eax,%eax
513b(6): jnz 0x10d(%rip)
5141(7): lea 0x5d00(%rip),%rsi
5148(2): xor %edi,%edi
514a(5): mov $0x5,%edx
514f(5): call 0xffffc761(%rip)
5154(7): lea 0x5c62(%rip),%rcx
515b(7): lea 0x6c96(%rip),%rdx
5162(3): mov %rax,%rsi
5165(5): mov $0x1,%edi
516a(2): xor %eax,%eax
516c(5): call 0xffffc904(%rip)
5171(3): cmp %rbx,%r12
5174(7): lea 0x5c61(%rip),%rcx
517b(7): lea 0x7c3f(%rip),%rbx
5182(4): cmove %rcx,%rbx
5186(7): lea 0x6cdb(%rip),%rsi
518d(2): xor %edi,%edi
518f(5): mov $0x5,%edx
5194(5): call 0xffffc71c(%rip)
5199(3): mov %rbx,%rcx
519c(3): mov %rax,%rsi
519f(3): mov %r12,%rdx
51a2(5): mov $0x1,%edi
51a7(2): xor %eax,%eax
51a9(5): call 0xffffc8c7(%rip)
51ae(5): jmp 0xfffffc18(%rip)
51b3(5): call 0xffffc6fd(%rip)
51b8(7): lea 0x6c39(%rip),%rcx
51bf(7): lea 0x5c70(%rip),%rdx
51c6(3): mov %rax,%rsi
51c9(5): mov $0x1,%edi
51ce(2): xor %eax,%eax
51d0(5): call 0xffffc8a0(%rip)
51d5(2): xor %esi,%esi
51d7(5): mov $0x5,%edi
51dc(5): call 0xffffc884(%rip)
51e1(3): test %rax,%rax
51e4(2): jz 0x1a(%rip)
51e6(7): lea 0x5c57(%rip),%rsi
51ed(5): mov $0x3,%edx
51f2(3): mov %rax,%rdi
51f5(5): call 0xffffc60b(%rip)
51fa(2): test %eax,%eax
51fc(2): jnz 0x45(%rip)
51fe(7): lea 0x5c43(%rip),%rsi
5205(5): mov $0x5,%edx
520a(2): xor %edi,%edi
520c(7): lea 0x5baa(%rip),%r12
5213(7): lea 0x5bc2(%rip),%rbx
521a(5): call 0xffffc696(%rip)
521f(7): lea 0x5b97(%rip),%rcx
5226(7): lea 0x6bcb(%rip),%rdx
522d(3): mov %rax,%rsi
5230(5): mov $0x1,%edi
5235(2): xor %eax,%eax
5237(5): call 0xffffc839(%rip)
523c(5): jmp 0xffffff4a(%rip)
5241(7): lea 0x5b75(%rip),%r12
5248(7): mov 0x20ae59(%rip),%r13
524f(7): lea 0x6bca(%rip),%rsi
5256(2): xor %edi,%edi
5258(5): mov $0x5,%edx
525d(5): call 0xffffc653(%rip)
5262(3): mov %r13,%rsi
5265(3): mov %rax,%rdi
5268(5): call 0xffffc748(%rip)
526d(5): jmp 0xfffffed4(%rip)

"__argmatch_die" :
5280(5): mov $0x1,%edi
5285(5): jmp 0xfffffaeb(%rip)

"argmatch" :
5290(2): push %r15
5292(2): push %r14
5294(3): mov %rsi,%r15
5297(2): push %r13
5299(2): push %r12
529b(3): mov %rcx,%r13
529e(1): push %rbp
529f(1): push %rbx
52a0(3): mov %rdx,%rbp
52a3(4): sub $0x28,%rsp
52a7(5): mov %rdi,0x8(%rsp)
52ac(5): mov %rdx,0x18(%rsp)
52b1(5): call 0xffffc61f(%rip)
52b6(3): mov (%r15),%r14
52b9(8): mov $0xffffffff,(%rsp)
52c1(3): test %r14,%r14
52c4(6): jz 0xb9(%rip)
52ca(3): mov %rax,%r12
52cd(5): mov $0x0,0x17(%rsp)
52d2(2): xor %ebx,%ebx
52d4(2): jmp 0x53(%rip)
52d6(a): nop 0x0(%rax,%rax,1)
52e0(5): mov 0x18(%rsp),%rax
52e5(3): test %rax,%rax
52e8(6): jz 0xa8(%rip)
52ee(4): mov (%rsp),%rdi
52f2(3): mov %r13,%rdx
52f5(3): mov %rbp,%rsi
52f8(4): imul %r13,%rdi
52fc(3): add %rax,%rdi
52ff(5): call 0xffffc6a1(%rip)
5304(2): test %eax,%eax
5306(5): movzx 0x17(%rsp),%eax
530b(5): mov $0x1,%ecx
5310(3): cmovne %ecx,%eax
5313(4): mov %al,0x17(%rsp)
5317(4): add $0x1,%rbx
531b(3): add %r13,%rbp
531e(4): mov 0x0(%r15,%rbx,8),%r14
5322(3): test %r14,%r14
5325(2): jz 0x43(%rip)
5327(5): mov 0x8(%rsp),%rsi
532c(3): mov %r12,%rdx
532f(3): mov %r14,%rdi
5332(5): call 0xffffc4ce(%rip)
5337(2): test %eax,%eax
5339(2): jnz 0xffffffde(%rip)
533b(3): mov %r14,%rdi
533e(5): call 0xffffc592(%rip)
5343(3): cmp %r12,%rax
5346(2): jz 0x5a(%rip)
5348(5): cmp $0xffffffff,(%rsp)
534d(2): jnz 0xffffff93(%rip)
534f(4): mov %rbx,(%rsp)
5353(4): add $0x1,%rbx
5357(3): add %r13,%rbp
535a(4): mov 0x0(%r15,%rbx,8),%r14
535e(3): test %r14,%r14
5361(2): jnz 0xffffffc6(%rip)
5363(5): nop 0x0(%rax,%rax,1)
5368(5): cmp $0x0,0x17(%rsp)
536d(7): mov $0xfffffffe,%rax
5374(5): cmove (%rsp),%rax
5379(4): mov %rax,(%rsp)
537d(4): mov (%rsp),%rax
5381(4): add $0x28,%rsp
5385(1): pop %rbx
5386(1): pop %rbp
5387(2): pop %r12
5389(2): pop %r13
538b(2): pop %r14
538d(2): pop %r15
538f(1): ret near (%rsp)
5390(5): mov $0x1,0x17(%rsp)
5395(2): jmp 0xffffff82(%rip)
5397(9): nop 0x0(%rax,%rax,1)
53a0(4): mov %rbx,(%rsp)
53a4(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
53b0(4): cmp $0xffffffff,%rdx
53b4(2): push %r12
53b6(5): mov $0x5,%edx
53bb(1): push %rbp
53bc(3): mov %rsi,%r12
53bf(1): push %rbx
53c0(3): mov %rdi,%rbp
53c3(2): jz 0x4d(%rip)
53c5(7): lea 0x73d8(%rip),%rsi
53cc(2): xor %edi,%edi
53ce(5): call 0xffffc4e2(%rip)
53d3(3): mov %rax,%rbx
53d6(3): mov %rbp,%rsi
53d9(5): mov $0x1,%edi
53de(5): call 0x2422(%rip)
53e3(3): mov %r12,%rdx
53e6(3): mov %rax,%rbp
53e9(5): mov $0x8,%esi
53ee(2): xor %edi,%edi
53f0(5): call 0x2040(%rip)
53f5(3): mov %rbp,%r8
53f8(3): mov %rbx,%rdx
53fb(3): mov %rax,%rcx
53fe(1): pop %rbx
53ff(1): pop %rbp
5400(2): pop %r12
5402(2): xor %esi,%esi
5404(2): xor %edi,%edi
5406(2): xor %eax,%eax
5408(5): jmp 0xffffc698(%rip)
540d(3): nop (%rax)
5410(7): lea 0x7372(%rip),%rsi
5417(2): xor %edi,%edi
5419(5): call 0xffffc497(%rip)
541e(3): mov %rax,%rbx
5421(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
5430(2): push %r15
5432(2): push %r14
5434(3): mov %rdi,%r14
5437(2): push %r13
5439(2): push %r12
543b(2): xor %edi,%edi
543d(1): push %rbp
543e(1): push %rbx
543f(3): mov %rsi,%rbp
5442(7): lea 0x7378(%rip),%rsi
5449(3): mov %rdx,%r12
544c(5): mov $0x5,%edx
5451(4): sub $0x8,%rsp
5455(7): mov 0x20ac84(%rip),%rbx
545c(5): call 0xffffc454(%rip)
5461(3): mov %rax,%rdi
5464(3): mov %rbx,%rsi
5467(5): call 0xffffc549(%rip)
546c(3): mov (%r14),%r15
546f(3): test %r15,%r15
5472(6): jz 0x96(%rip)
5478(3): xor %r13d,%r13d
547b(2): xor %ebx,%ebx
547d(2): jmp 0x3b(%rip)
547f(1): nop 
5480(3): mov %r15,%rdi
5483(4): add $0x1,%rbx
5487(3): mov %rbp,%r13
548a(5): call 0x2396(%rip)
548f(7): mov 0x20ac4a(%rip),%rdi
5496(7): lea 0x7339(%rip),%rdx
549d(3): mov %rax,%rcx
54a0(5): mov $0x1,%esi
54a5(2): xor %eax,%eax
54a7(3): add %r12,%rbp
54aa(5): call 0xffffc666(%rip)
54af(4): mov 0x0(%r14,%rbx,8),%r15
54b3(3): test %r15,%r15
54b6(2): jz 0x52(%rip)
54b8(3): test %rbx,%rbx
54bb(2): jz 0xffffffc5(%rip)
54bd(3): mov %r12,%rdx
54c0(3): mov %rbp,%rsi
54c3(3): mov %r13,%rdi
54c6(5): call 0xffffc4da(%rip)
54cb(2): test %eax,%eax
54cd(2): jnz 0xffffffb3(%rip)
54cf(3): mov %r15,%rdi
54d2(4): add $0x1,%rbx
54d6(3): add %r12,%rbp
54d9(5): call 0x2347(%rip)
54de(7): mov 0x20abfb(%rip),%rdi
54e5(7): lea 0x72f2(%rip),%rdx
54ec(3): mov %rax,%rcx
54ef(5): mov $0x1,%esi
54f4(2): xor %eax,%eax
54f6(5): call 0xffffc61a(%rip)
54fb(4): mov 0x0(%r14,%rbx,8),%r15
54ff(3): test %r15,%r15
5502(2): jnz 0xffffffb6(%rip)
5504(4): nop 0x0(%rax)
5508(7): mov 0x20abd1(%rip),%rdi
550f(4): mov 0x28(%rdi),%rax
5513(4): cmp 0x30(%rdi),%rax
5517(2): jnb 0x21(%rip)
5519(4): lea 0x1(%rax),%rdx
551d(4): mov %rdx,0x28(%rdi)
5521(3): mov $0xa,(%rax)
5524(4): add $0x8,%rsp
5528(1): pop %rbx
5529(1): pop %rbp
552a(2): pop %r12
552c(2): pop %r13
552e(2): pop %r14
5530(2): pop %r15
5532(1): ret near (%rsp)
5533(5): nop 0x0(%rax,%rax,1)
5538(4): add $0x8,%rsp
553c(5): mov $0xa,%esi
5541(1): pop %rbx
5542(1): pop %rbp
5543(2): pop %r12
5545(2): pop %r13
5547(2): pop %r14
5549(2): pop %r15
554b(5): jmp 0xffffc3d5(%rip)

"__xargmatch_internal" :
5550(2): push %r15
5552(2): push %r14
5554(3): mov %rdi,%r14
5557(2): push %r13
5559(2): push %r12
555b(3): mov %rsi,%r12
555e(1): push %rbp
555f(1): push %rbx
5560(3): mov %rcx,%rbp
5563(3): mov %rdx,%rbx
5566(3): mov %r8,%rcx
5569(3): mov %rbp,%rdx
556c(4): sub $0x8,%rsp
5570(3): mov %rbx,%rsi
5573(3): mov %r12,%rdi
5576(3): mov %r8,%r15
5579(3): mov %r9,%r13
557c(5): call 0xfffffd14(%rip)
5581(3): test %rax,%rax
5584(2): js 0x11(%rip)
5586(4): add $0x8,%rsp
558a(1): pop %rbx
558b(1): pop %rbp
558c(2): pop %r12
558e(2): pop %r13
5590(2): pop %r14
5592(2): pop %r15
5594(1): ret near (%rsp)
5595(3): mov %rax,%rdx
5598(3): mov %r12,%rsi
559b(3): mov %r14,%rdi
559e(5): call 0xfffffe12(%rip)
55a3(3): mov %r15,%rdx
55a6(3): mov %rbp,%rsi
55a9(3): mov %rbx,%rdi
55ac(5): call 0xfffffe84(%rip)
55b1(3): call %r13
55b4(7): mov $0xffffffff,%rax
55bb(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
55c0(2): push %r14
55c2(2): push %r13
55c4(2): push %r12
55c6(1): push %rbp
55c7(1): push %rbx
55c8(3): mov (%rsi),%r14
55cb(3): test %r14,%r14
55ce(2): jz 0x33(%rip)
55d0(3): mov %rcx,%r12
55d3(3): mov %rdi,%r13
55d6(3): mov %rdx,%rbp
55d9(4): lea 0x8(%rsi),%rbx
55dd(2): jmp 0x12(%rip)
55df(1): nop 
55e0(3): mov (%rbx),%r14
55e3(3): add %r12,%rbp
55e6(4): add $0x8,%rbx
55ea(3): test %r14,%r14
55ed(2): jz 0x14(%rip)
55ef(3): mov %r12,%rdx
55f2(3): mov %rbp,%rsi
55f5(3): mov %r13,%rdi
55f8(5): call 0xffffc3a8(%rip)
55fd(2): test %eax,%eax
55ff(2): jnz 0xffffffe1(%rip)
5601(1): pop %rbx
5602(3): mov %r14,%rax
5605(1): pop %rbp
5606(2): pop %r12
5608(2): pop %r13
560a(2): pop %r14
560c(1): ret near (%rsp)

"close_stdout_set_file_name" :
5610(7): mov %rdi,0x20ac19(%rip)
5617(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
5620(7): mov %dil,0x20ac01(%rip)
5627(1): ret near (%rsp)

"close_stdout" :
5630(1): push %rbp
5631(1): push %rbx
5632(4): sub $0x8,%rsp
5636(7): mov 0x20aa6b(%rip),%rdi
563d(5): call 0x3493(%rip)
5642(2): test %eax,%eax
5644(2): jz 0x18(%rip)
5646(5): call 0xffffc1aa(%rip)
564b(7): cmp $0x0,0x20abd6(%rip)
5652(3): mov %rax,%rbx
5655(2): jz 0x1e(%rip)
5657(3): cmp $0x20,(%rax)
565a(2): jnz 0x19(%rip)
565c(7): mov 0x20aa7d(%rip),%rdi
5663(5): call 0x346d(%rip)
5668(2): test %eax,%eax
566a(2): jnz 0x48(%rip)
566c(4): add $0x8,%rsp
5670(1): pop %rbx
5671(1): pop %rbp
5672(1): ret near (%rsp)
5673(7): lea 0x5704(%rip),%rsi
567a(2): xor %edi,%edi
567c(5): mov $0x5,%edx
5681(5): call 0xffffc22f(%rip)
5686(7): mov 0x20aba3(%rip),%rdi
568d(3): mov %rax,%rbp
5690(3): test %rdi,%rdi
5693(2): jz 0x2a(%rip)
5695(5): call 0x1f8b(%rip)
569a(2): mov (%rbx),%esi
569c(7): lea 0x7140(%rip),%rdx
56a3(3): mov %rax,%rcx
56a6(3): mov %rbp,%r8
56a9(2): xor %edi,%edi
56ab(2): xor %eax,%eax
56ad(5): call 0xffffc3f3(%rip)
56b2(6): mov 0x20a970(%rip),%edi
56b8(5): call 0xffffc158(%rip)
56bd(2): mov (%rbx),%esi
56bf(7): lea 0x711a(%rip),%rdx
56c6(3): mov %rax,%rcx
56c9(2): xor %edi,%edi
56cb(2): xor %eax,%eax
56cd(5): call 0xffffc3d3(%rip)
56d2(2): jmp 0xffffffe0(%rip)

"dtoastr" :
56e0(2): push %r15
56e2(2): push %r14
56e4(3): mov %ecx,%r14d
56e7(2): push %r13
56e9(2): push %r12
56eb(3): mov %rdi,%r12
56ee(1): push %rbp
56ef(1): push %rbx
56f0(3): mov %rsi,%rbp
56f3(4): movapd %xmm0,%xmm3
56f7(4): sub $0x38,%rsp
56fb(5): movsd %xmm0,(%rsp)
5700(4): pxor %xmm0,%xmm0
5704(9): mov $0x28,%rax
570d(5): mov %rax,0x28(%rsp)
5712(2): xor %eax,%eax
5714(4): ucomisd %xmm3,%xmm0
5718(6): jnbe 0x118(%rip)
571e(5): movsd (%rsp),%xmm0
5723(2): mov %edx,%eax
5725(5): lea 0x1d(%rsp),%r13
572a(2): mov %edx,%ecx
572c(3): and $0x1,%eax
572f(2): shr $0x1,%ecx
5731(5): mov $0x2d25,%esi
5736(5): lea 0x1(%r13,%rax,1),%rdi
573b(3): and $0x1,%ecx
573e(2): mov %edx,%eax
5740(5): mov %si,0x1d(%rsp)
5745(3): shr $0x2,%eax
5748(5): mov $0x1,%ebx
574d(4): lea 0x0(%rdi,%rcx,1),%rsi
5751(3): and $0x1,%eax
5754(3): mov $0x2b,(%rdi)
5757(8): movsd 0x70a1(%rip),%xmm1
575f(5): mov $0x2e2a,%edi
5764(4): lea 0x0(%rsi,%rax,1),%rcx
5768(2): mov %edx,%eax
576a(3): and $0x10,%edx
576d(3): shr $0x3,%eax
5770(3): mov $0x20,(%rsi)
5773(7): mov $0xffffffff,%r15
577a(3): and $0x1,%eax
577d(3): mov $0x30,(%rcx)
5780(3): add %rcx,%rax
5783(3): cmp $0x1,%edx
5786(2): sbb %edx,%edx
5788(3): mov %di,(%rax)
578b(4): mov $0x2a,0x2(%rax)
578f(3): and $0x20,%edx
5792(4): mov $0x0,0x4(%rax)
5796(3): add $0x47,%edx
5799(4): ucomisd %xmm0,%xmm1
579d(3): mov %dl,0x3(%rax)
57a0(5): mov $0xf,%eax
57a5(3): cmovbe %eax,%ebx
57a8(2): jmp 0xb(%rip)
57aa(6): nop 0x0(%rax,%rax,1)
57b0(3): add $0x1,%ebx
57b3(4): sub $0x8,%rsp
57b7(3): mov %r15,%rcx
57ba(5): mov $0x1,%edx
57bf(1): push %rbx
57c0(3): mov %r14d,%r9d
57c3(3): mov %r13,%r8
57c6(3): mov %rbp,%rsi
57c9(3): mov %r12,%rdi
57cc(5): mov $0x1,%eax
57d1(6): movsd 0x10(%rsp),%xmm0
57d7(5): call 0xffffbfe9(%rip)
57dc(2): test %eax,%eax
57de(1): pop %rdx
57df(1): pop %rcx
57e0(2): js 0x2a(%rip)
57e2(3): cmp $0x10,%ebx
57e5(2): jnle 0x25(%rip)
57e7(3): movsxd %eax,%rdx
57ea(3): cmp %rbp,%rdx
57ed(2): jnb 0xffffffc3(%rip)
57ef(2): xor %esi,%esi
57f1(3): mov %r12,%rdi
57f4(4): mov %eax,0xc(%rsp)
57f8(5): call 0xffffc058(%rip)
57fd(5): ucomisd (%rsp),%xmm0
5802(2): jp 0xffffffae(%rip)
5804(4): mov 0xc(%rsp),%eax
5808(2): jnz 0xffffffa8(%rip)
580a(5): mov 0x28(%rsp),%rsi
580f(9): xor $0x28,%rsi
5818(2): jnz 0x29(%rip)
581a(4): add $0x38,%rsp
581e(1): pop %rbx
581f(1): pop %rbp
5820(2): pop %r12
5822(2): pop %r13
5824(2): pop %r14
5826(2): pop %r15
5828(1): ret near (%rsp)
5829(7): nop 0x0(%rax)
5830(4): movapd %xmm3,%xmm0
5834(8): xorpd 0x6fb4(%rip),%xmm0
583c(5): jmp 0xfffffee7(%rip)
5841(5): call 0xffffc09f(%rip)

"ftoastr" :
5850(2): push %r15
5852(4): pxor %xmm4,%xmm4
5856(2): push %r14
5858(2): push %r13
585a(3): mov %ecx,%r15d
585d(2): push %r12
585f(1): push %rbp
5860(3): mov %rdi,%r12
5863(1): push %rbx
5864(3): movaps %xmm0,%xmm3
5867(4): cvtss2sd %xmm0,%xmm4
586b(3): mov %rsi,%rbp
586e(4): sub $0x38,%rsp
5872(6): movss %xmm0,0xc(%rsp)
5878(4): pxor %xmm0,%xmm0
587c(9): mov $0x28,%rax
5885(5): mov %rax,0x28(%rsp)
588a(2): xor %eax,%eax
588c(5): movsd %xmm4,(%rsp)
5891(3): ucomiss %xmm3,%xmm0
5894(6): jnbe 0x114(%rip)
589a(6): movss 0xc(%rsp),%xmm0
58a0(2): mov %edx,%eax
58a2(5): lea 0x1d(%rsp),%r13
58a7(2): mov %edx,%ecx
58a9(3): and $0x1,%eax
58ac(2): shr $0x1,%ecx
58ae(5): mov $0x2d25,%esi
58b3(5): lea 0x1(%r13,%rax,1),%rdi
58b8(3): and $0x1,%ecx
58bb(2): mov %edx,%eax
58bd(5): mov %si,0x1d(%rsp)
58c2(3): shr $0x2,%eax
58c5(7): mov $0xffffffff,%r14
58cc(4): lea 0x0(%rdi,%rcx,1),%rsi
58d0(3): and $0x1,%eax
58d3(3): mov $0x2b,(%rdi)
58d6(8): movss 0x6f42(%rip),%xmm1
58de(5): mov $0x2e2a,%edi
58e3(4): lea 0x0(%rsi,%rax,1),%rcx
58e7(2): mov %edx,%eax
58e9(3): and $0x10,%edx
58ec(3): shr $0x3,%eax
58ef(3): mov $0x20,(%rsi)
58f2(3): and $0x1,%eax
58f5(3): mov $0x30,(%rcx)
58f8(3): add %rcx,%rax
58fb(3): cmp $0x1,%edx
58fe(2): sbb %edx,%edx
5900(2): xor %ebx,%ebx
5902(3): mov %di,(%rax)
5905(3): and $0x20,%edx
5908(4): mov $0x2a,0x2(%rax)
590c(4): mov $0x0,0x4(%rax)
5910(3): add $0x47,%edx
5913(3): ucomiss %xmm0,%xmm1
5916(3): mov %dl,0x3(%rax)
5919(3): setbe %bl
591c(4): lea 0x1(%rbx,%rbx,4),%ebx
5920(2): jmp 0xb(%rip)
5922(6): nop 0x0(%rax,%rax,1)
5928(3): add $0x1,%ebx
592b(4): sub $0x8,%rsp
592f(3): mov %r14,%rcx
5932(5): mov $0x1,%edx
5937(1): push %rbx
5938(3): mov %r15d,%r9d
593b(3): mov %r13,%r8
593e(3): mov %rbp,%rsi
5941(3): mov %r12,%rdi
5944(5): mov $0x1,%eax
5949(6): movsd 0x10(%rsp),%xmm0
594f(5): call 0xffffbe71(%rip)
5954(2): test %eax,%eax
5956(1): pop %rdx
5957(1): pop %rcx
5958(2): js 0x2a(%rip)
595a(3): cmp $0x8,%ebx
595d(2): jnle 0x25(%rip)
595f(3): movsxd %eax,%rdx
5962(3): cmp %rbp,%rdx
5965(2): jnb 0xffffffc3(%rip)
5967(2): xor %esi,%esi
5969(3): mov %r12,%rdi
596c(4): mov %eax,0x8(%rsp)
5970(5): call 0xffffc000(%rip)
5975(5): ucomiss 0xc(%rsp),%xmm0
597a(2): jp 0xffffffae(%rip)
597c(4): mov 0x8(%rsp),%eax
5980(2): jnz 0xffffffa8(%rip)
5982(5): mov 0x28(%rsp),%rsi
5987(9): xor $0x28,%rsi
5990(2): jnz 0x27(%rip)
5992(4): add $0x38,%rsp
5996(1): pop %rbx
5997(1): pop %rbp
5998(2): pop %r12
599a(2): pop %r13
599c(2): pop %r14
599e(2): pop %r15
59a0(1): ret near (%rsp)
59a1(7): nop 0x0(%rax)
59a8(3): movaps %xmm3,%xmm0
59ab(7): xorps 0x6e5e(%rip),%xmm0
59b2(5): jmp 0xfffffeee(%rip)
59b7(5): call 0xffffbf29(%rip)

"ldtoastr" :
59c0(2): push %r15
59c2(2): push %r14
59c4(2): fld1 %st0
59c6(2): push %r13
59c8(2): push %r12
59ca(3): mov %ecx,%r14d
59cd(1): push %rbp
59ce(1): push %rbx
59cf(3): mov %rdi,%r12
59d2(3): mov %rsi,%rbp
59d5(4): sub $0x38,%rsp
59d9(4): fld 0x70(%rsp),%st0
59dd(2): fxch %st1,%st0
59df(9): mov $0x28,%rax
59e8(5): mov %rax,0x28(%rsp)
59ed(2): xor %eax,%eax
59ef(2): fucomip %st1,%st0
59f1(6): jnbe 0x10f(%rip)
59f7(2): fstp %st0,%st0
59f9(4): fld 0x70(%rsp),%st0
59fd(5): mov $0x2d25,%eax
5a02(5): lea 0x1d(%rsp),%r13
5a07(2): mov %edx,%ecx
5a09(5): mov %ax,0x1d(%rsp)
5a0e(2): mov %edx,%eax
5a10(2): shr $0x1,%ecx
5a12(3): and $0x1,%eax
5a15(3): and $0x1,%ecx
5a18(5): mov $0x1,%ebx
5a1d(5): lea 0x1(%r13,%rax,1),%rdi
5a22(2): mov %edx,%eax
5a24(7): mov $0xffffffff,%r15
5a2b(3): shr $0x2,%eax
5a2e(4): lea 0x0(%rdi,%rcx,1),%rsi
5a32(3): and $0x1,%eax
5a35(3): mov $0x2b,(%rdi)
5a38(4): lea 0x0(%rsi,%rax,1),%rcx
5a3c(2): mov %edx,%eax
5a3e(3): and $0x10,%edx
5a41(6): fld 0x6de9(%rip),%st0
5a47(3): shr $0x3,%eax
5a4a(3): mov $0x20,(%rsi)
5a4d(3): mov $0x30,(%rcx)
5a50(3): and $0x1,%eax
5a53(3): add %rcx,%rax
5a56(3): cmp $0x1,%edx
5a59(2): sbb %edx,%edx
5a5b(6): mov $0x4c2a2e2a,(%rax)
5a61(4): mov $0x0,0x5(%rax)
5a65(3): and $0x20,%edx
5a68(3): add $0x47,%edx
5a6b(3): mov %dl,0x4(%rax)
5a6e(5): mov $0x12,%eax
5a73(2): fucomip %st1,%st0
5a75(2): fstp %st0,%st0
5a77(3): cmovbe %eax,%ebx
5a7a(2): jmp 0x9(%rip)
5a7c(4): nop 0x0(%rax)
5a80(3): add $0x1,%ebx
5a83(4): push 0x78(%rsp)
5a87(4): push 0x78(%rsp)
5a8b(2): xor %eax,%eax
5a8d(3): mov %r14d,%r9d
5a90(3): mov %r13,%r8
5a93(3): mov %r15,%rcx
5a96(4): sub $0x8,%rsp
5a9a(5): mov $0x1,%edx
5a9f(3): mov %rbp,%rsi
5aa2(1): push %rbx
5aa3(3): mov %r12,%rdi
5aa6(5): call 0xffffbd1a(%rip)
5aab(4): add $0x20,%rsp
5aaf(2): test %eax,%eax
5ab1(2): js 0x2f(%rip)
5ab3(3): cmp $0x14,%ebx
5ab6(2): jnle 0x2a(%rip)
5ab8(3): movsxd %eax,%rdx
5abb(3): cmp %rbp,%rdx
5abe(2): jnb 0xffffffc2(%rip)
5ac0(2): xor %esi,%esi
5ac2(3): mov %r12,%rdi
5ac5(4): mov %eax,0xc(%rsp)
5ac9(5): call 0xffffbfc7(%rip)
5ace(4): fld 0x70(%rsp),%st0
5ad2(2): fxch %st1,%st0
5ad4(2): fucomip %st1,%st0
5ad6(2): fstp %st0,%st0
5ad8(2): jp 0xffffffa8(%rip)
5ada(4): mov 0xc(%rsp),%eax
5ade(2): jnz 0xffffffa2(%rip)
5ae0(5): mov 0x28(%rsp),%rsi
5ae5(9): xor $0x28,%rsi
5aee(2): jnz 0x19(%rip)
5af0(4): add $0x38,%rsp
5af4(1): pop %rbx
5af5(1): pop %rbp
5af6(2): pop %r12
5af8(2): pop %r13
5afa(2): pop %r14
5afc(2): pop %r15
5afe(1): ret near (%rsp)
5aff(1): nop 
5b00(2): fchs %st0
5b02(5): jmp 0xfffffefb(%rip)
5b07(5): call 0xffffbdd9(%rip)

"set_program_name" :
5b10(3): test %rdi,%rdi
5b13(1): push %rbx
5b14(2): jz 0x79(%rip)
5b16(5): mov $0x2f,%esi
5b1b(3): mov %rdi,%rbx
5b1e(5): call 0xffffbe12(%rip)
5b23(3): test %rax,%rax
5b26(2): jz 0x57(%rip)
5b28(4): lea 0x1(%rax),%r8
5b2c(3): mov %r8,%rdx
5b2f(3): sub %rbx,%rdx
5b32(4): cmp $0x6,%rdx
5b36(2): jle 0x47(%rip)
5b38(4): lea 0xfffffffa(%rax),%rsi
5b3c(7): lea 0x6d35(%rip),%rdi
5b43(5): mov $0x7,%ecx
5b48(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5b4a(3): setnbe %dl
5b4d(3): sbb $0x0,%dl
5b50(2): test %dl,%dl
5b52(2): jnz 0x2b(%rip)
5b54(7): lea 0x6d25(%rip),%rdi
5b5b(5): mov $0x3,%ecx
5b60(3): mov %r8,%rsi
5b63(3): mov %r8,%rbx
5b66(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5b68(3): setnbe %dl
5b6b(3): sbb $0x0,%dl
5b6e(2): test %dl,%dl
5b70(2): jnz 0xd(%rip)
5b72(4): lea 0x4(%rax),%rbx
5b76(7): mov %rbx,0x20a523(%rip)
5b7d(7): mov %rbx,0x20a6b4(%rip)
5b84(7): mov %rbx,0x20a53d(%rip)
5b8b(1): pop %rbx
5b8c(1): ret near (%rsp)
5b8d(7): mov 0x20a54c(%rip),%rcx
5b94(7): lea 0x6ca5(%rip),%rdi
5b9b(5): mov $0x37,%edx
5ba0(5): mov $0x1,%esi
5ba5(5): call 0xffffbf5b(%rip)
5baa(5): call 0xffffbc36(%rip)

"gettext_quote.part.1" :
5bb0(1): push %rbp
5bb1(1): push %rbx
5bb2(3): mov %rdi,%rbp
5bb5(2): mov %esi,%ebx
5bb7(4): sub $0x8,%rsp
5bbb(5): call 0x2ff5(%rip)
5bc0(3): movzx (%rax),%edx
5bc3(3): and $0xdf,%edx
5bc6(3): cmp $0x55,%dl
5bc9(2): jz 0x77(%rip)
5bcb(3): cmp $0x47,%dl
5bce(2): jz 0x22(%rip)
5bd0(7): lea 0x6cbc(%rip),%rax
5bd7(7): lea 0x753b(%rip),%rdx
5bde(3): cmp $0x9,%ebx
5be1(4): cmovne %rdx,%rax
5be5(4): add $0x8,%rsp
5be9(1): pop %rbx
5bea(1): pop %rbp
5beb(1): ret near (%rsp)
5bec(4): nop 0x0(%rax)
5bf0(4): movzx 0x1(%rax),%edx
5bf4(3): and $0xdf,%edx
5bf7(3): cmp $0x42,%dl
5bfa(2): jnz 0xffffffd6(%rip)
5bfc(4): cmp $0x31,0x2(%rax)
5c00(2): jnz 0xffffffd0(%rip)
5c02(4): cmp $0x38,0x3(%rax)
5c06(2): jnz 0xffffffca(%rip)
5c08(4): cmp $0x30,0x4(%rax)
5c0c(2): jnz 0xffffffc4(%rip)
5c0e(4): cmp $0x33,0x5(%rax)
5c12(2): jnz 0xffffffbe(%rip)
5c14(4): cmp $0x30,0x6(%rax)
5c18(2): jnz 0xffffffb8(%rip)
5c1a(4): cmp $0x0,0x7(%rax)
5c1e(2): jnz 0xffffffb2(%rip)
5c20(4): cmp $0x60,0x0(%rbp)
5c24(7): lea 0x6c61(%rip),%rax
5c2b(7): lea 0x6c5e(%rip),%rdx
5c32(4): cmovne %rdx,%rax
5c36(4): add $0x8,%rsp
5c3a(1): pop %rbx
5c3b(1): pop %rbp
5c3c(1): ret near (%rsp)
5c3d(3): nop (%rax)
5c40(4): movzx 0x1(%rax),%edx
5c44(3): and $0xdf,%edx
5c47(3): cmp $0x54,%dl
5c4a(2): jnz 0xffffff86(%rip)
5c4c(4): movzx 0x2(%rax),%edx
5c50(3): and $0xdf,%edx
5c53(3): cmp $0x46,%dl
5c56(6): jnz 0xffffff7a(%rip)
5c5c(4): cmp $0x2d,0x3(%rax)
5c60(6): jnz 0xffffff70(%rip)
5c66(4): cmp $0x38,0x4(%rax)
5c6a(6): jnz 0xffffff66(%rip)
5c70(4): cmp $0x0,0x5(%rax)
5c74(6): jnz 0xffffff5c(%rip)
5c7a(4): cmp $0x60,0x0(%rbp)
5c7e(7): lea 0x6bff(%rip),%rax
5c85(7): lea 0x6bfc(%rip),%rdx
5c8c(4): cmovne %rdx,%rax
5c90(4): add $0x8,%rsp
5c94(1): pop %rbx
5c95(1): pop %rbp
5c96(1): ret near (%rsp)

"quotearg_buffer_restyled" :
5ca0(2): push %r15
5ca2(2): push %r14
5ca4(3): mov %r8d,%r15d
5ca7(2): push %r13
5ca9(2): push %r12
5cab(3): mov %rdi,%r14
5cae(1): push %rbp
5caf(1): push %rbx
5cb0(3): mov %r9d,%ebx
5cb3(3): mov %rsi,%r13
5cb6(3): mov %rcx,%rbp
5cb9(3): and $0x2,%ebx
5cbc(7): sub $0xb8,%rsp
5cc3(8): mov 0xf0(%rsp),%rax
5ccb(5): mov %rdx,0x10(%rsp)
5cd0(5): mov %r8d,0x8(%rsp)
5cd5(5): mov %r9d,0x78(%rsp)
5cda(5): mov %rax,0x20(%rsp)
5cdf(8): mov 0xf8(%rsp),%rax
5ce7(5): mov %rax,0x68(%rsp)
5cec(8): mov 0x100(%rsp),%rax
5cf4(5): mov %rax,0x60(%rsp)
5cf9(9): mov $0x28,%rax
5d02(8): mov %rax,0xa8(%rsp)
5d0a(2): xor %eax,%eax
5d0c(5): call 0xffffbbb4(%rip)
5d11(4): cmp $0xa,%r15d
5d15(5): mov %rax,0x58(%rsp)
5d1a(6): jnbe 0x11b5(%rip)
5d20(7): lea 0x6bd9(%rip),%rcx
5d27(3): mov %r15d,%edx
5d2a(4): movsxd 0x0(%rcx,%rdx,4),%rax
5d2e(3): add %rcx,%rax
5d31(2): jmp %rax
5d33(5): mov $0x1,0xe(%rsp)
5d38(5): mov $0x0,0x7c(%rsp)
5d3d(3): xor %r12d,%r12d
5d40(9): mov $0x0,0x50(%rsp)
5d49(5): mov $0x1,0xf(%rsp)
5d4e(5): mov $0x0,0xd(%rsp)
5d53(7): lea 0x73bf(%rip),%rax
5d5a(9): mov $0x1,0x18(%rsp)
5d63(3): xor %r15d,%r15d
5d66(8): mov $0x2,0x8(%rsp)
5d6e(5): mov %rax,0x48(%rsp)
5d73(3): xor %r11d,%r11d
5d76(3): mov %rbp,%rax
5d79(3): mov %r12d,%r8d
5d7c(3): mov %r11,%rbp
5d7f(3): mov %rax,%r11
5d82(6): nop 0x0(%rax,%rax,1)
5d88(3): cmp %rbp,%r11
5d8b(4): setnz %r12b
5d8f(4): cmp $0xffffffff,%r11
5d93(2): jnz 0xf(%rip)
5d95(5): mov 0x10(%rsp),%rax
5d9a(4): cmp $0x0,0x0(%rax,%rbp,1)
5d9e(4): setnz %r12b
5da2(3): test %r12b,%r12b
5da5(6): jz 0x65b(%rip)
5dab(5): cmp $0x2,0x8(%rsp)
5db0(5): mov 0x10(%rsp),%rdi
5db5(4): lea 0x0(%rdi,%rbp,1),%r9
5db9(3): setnz %al
5dbc(4): and 0xd(%rsp),%al
5dc0(3): mov %eax,%r10d
5dc3(6): jz 0xad(%rip)
5dc9(5): mov 0x18(%rsp),%rax
5dce(3): test %rax,%rax
5dd1(6): jz 0x42f(%rip)
5dd7(4): cmp $0xffffffff,%r11
5ddb(5): lea 0x0(%rbp,%rax,1),%rbx
5de0(2): jnz 0x30(%rip)
5de2(4): cmp $0x1,%rax
5de6(2): jbe 0x2a(%rip)
5de8(5): mov %r8b,0x38(%rsp)
5ded(5): mov %r10b,0x30(%rsp)
5df2(5): mov %r9,0x28(%rsp)
5df7(5): call 0xffffbad9(%rip)
5dfc(6): movzx 0x38(%rsp),%r8d
5e02(6): movzx 0x30(%rsp),%r10d
5e08(3): mov %rax,%r11
5e0b(5): mov 0x28(%rsp),%r9
5e10(3): cmp %r11,%rbx
5e13(5): mov %r10b,0x28(%rsp)
5e18(6): jnbe 0x5b8(%rip)
5e1e(5): mov 0x18(%rsp),%rdx
5e23(5): mov 0x48(%rsp),%rsi
5e28(3): mov %r9,%rdi
5e2b(5): mov %r11,0x40(%rsp)
5e30(5): mov %r8b,0x38(%rsp)
5e35(5): mov %r9,0x30(%rsp)
5e3a(5): call 0xffffbb66(%rip)
5e3f(2): test %eax,%eax
5e41(5): mov 0x30(%rsp),%r9
5e46(6): movzx 0x38(%rsp),%r8d
5e4c(5): mov 0x40(%rsp),%r11
5e51(6): jnz 0x57f(%rip)
5e57(5): cmp $0x0,0xf(%rsp)
5e5c(6): movzx 0x28(%rsp),%r10d
5e62(6): jnz 0xf83(%rip)
5e68(8): nop 0x0(%rax,%rax,1)
5e70(4): movzx (%r9),%ebx
5e74(3): cmp $0x7e,%bl
5e77(6): jnbe 0x321(%rip)
5e7d(7): lea 0x6aa8(%rip),%rcx
5e84(3): movzx %bl,%edx
5e87(4): movsxd 0x0(%rcx,%rdx,4),%rax
5e8b(3): add %rcx,%rax
5e8e(2): jmp %rax
5e90(3): xor %r10d,%r10d
5e93(4): cmp $0x1,%r11
5e97(3): setnz %al
5e9a(4): cmp $0xffffffff,%r11
5e9e(2): jnz 0xe(%rip)
5ea0(5): mov 0x10(%rsp),%rax
5ea5(4): cmp $0x0,0x1(%rax)
5ea9(3): setnz %al
5eac(5): cmp $0x2,0x8(%rsp)
5eb1(3): setz %dl
5eb4(2): test %al,%al
5eb6(6): jz 0x252(%rip)
5ebc(3): xor %r12d,%r12d
5ebf(2): xor %eax,%eax
5ec1(7): nop 0x0(%rax)
5ec8(5): cmp $0x1,0xd(%rsp)
5ecd(6): jnz 0x115(%rip)
5ed3(2): test %dl,%dl
5ed5(6): jnz 0x10d(%rip)
5edb(5): mov 0x20(%rsp),%rsi
5ee0(3): test %rsi,%rsi
5ee3(2): jz 0x16(%rip)
5ee5(2): mov %ebx,%edx
5ee7(3): shr $0x5,%dl
5eea(3): movzx %dl,%edx
5eed(3): mov 0x0(%rsi,%rdx,4),%edx
5ef0(3): bt %ebx,%edx
5ef3(6): jb 0x150(%rip)
5ef9(3): test %r10b,%r10b
5efc(6): jnz 0x147(%rip)
5f02(3): xor $0x1,%eax
5f05(4): add $0x1,%rbp
5f09(3): and %r8d,%eax
5f0c(2): test %al,%al
5f0e(2): jz 0x22(%rip)
5f10(3): cmp %r15,%r13
5f13(2): jbe 0x7(%rip)
5f15(5): mov $0x27,0x0(%r14,%r15,1)
5f1a(4): lea 0x1(%r15),%rax
5f1e(3): cmp %rax,%r13
5f21(2): jbe 0x8(%rip)
5f23(6): mov $0x27,0x1(%r14,%r15,1)
5f29(4): add $0x2,%r15
5f2d(3): xor %r8d,%r8d
5f30(3): cmp %r13,%r15
5f33(2): jnb 0x6(%rip)
5f35(4): mov %bl,0x0(%r14,%r15,1)
5f39(5): movzx 0xe(%rsp),%edi
5f3e(4): add $0x1,%r15
5f42(5): mov $0x0,%eax
5f47(3): test %r12b,%r12b
5f4a(3): cmove %eax,%edi
5f4d(5): mov %dil,0xe(%rsp)
5f52(5): jmp 0xfffffe36(%rip)
5f57(9): nop 0x0(%rax,%rax,1)
5f60(3): xor %r10d,%r10d
5f63(4): mov 0x8(%rsp),%eax
5f67(3): cmp $0x2,%eax
5f6a(6): jz 0x5be(%rip)
5f70(3): cmp $0x5,%eax
5f73(6): jz 0x575(%rip)
5f79(3): cmp $0x2,%eax
5f7c(5): mov $0x3f,%ebx
5f81(3): setz %dl
5f84(3): xor %r12d,%r12d
5f87(2): xor %eax,%eax
5f89(5): jmp 0xffffff3f(%rip)
5f8e(2): nop 
5f90(3): xor %r10d,%r10d
5f93(5): cmp $0x2,0x8(%rsp)
5f98(6): jz 0x508(%rip)
5f9e(5): mov %r12b,0x7c(%rsp)
5fa3(2): xor %edx,%edx
5fa5(2): xor %eax,%eax
5fa7(5): mov $0x27,%ebx
5fac(5): jmp 0xffffff1c(%rip)
5fb1(7): nop 0x0(%rax)
5fb8(5): mov $0x9,%edx
5fbd(5): mov $0x74,%ebx
5fc2(5): cmp $0x2,0x8(%rsp)
5fc7(3): setz %al
5fca(4): and 0xf(%rsp),%al
5fce(6): jnz 0x150(%rip)
5fd4(5): cmp $0x0,0xd(%rsp)
5fd9(2): jnz 0x67(%rip)
5fdb(2): mov %edx,%ebx
5fdd(3): xor %r12d,%r12d
5fe0(2): xor %eax,%eax
5fe2(5): cmp $0x0,0xf(%rsp)
5fe7(6): jnz 0xfffffef4(%rip)
5fed(5): jmp 0xffffff0c(%rip)
5ff2(6): nop 0x0(%rax,%rax,1)
5ff8(5): mov $0x8,%edx
5ffd(5): mov $0x62,%ebx
6002(2): jmp 0xffffffd2(%rip)
6004(4): nop 0x0(%rax)
6008(5): cmp $0x2,0x8(%rsp)
600d(6): jz 0x3d3(%rip)
6013(5): cmp $0x0,0xd(%rsp)
6018(6): jz 0x218(%rip)
601e(5): cmp $0x0,0xf(%rsp)
6023(6): jz 0x20d(%rip)
6029(6): cmp $0x0,0x18(%rsp)
602f(6): jnz 0x3bc(%rip)
6035(5): mov $0x5c,%ebx
603a(6): nop 0x0(%rax,%rax,1)
6040(3): xor %r12d,%r12d
6043(5): cmp $0x2,0x8(%rsp)
6048(3): setz %dl
604b(5): cmp $0x0,0xf(%rsp)
6050(2): mov %edx,%eax
6052(6): jnz 0x856(%rip)
6058(3): mov %r8d,%eax
605b(3): xor $0x1,%eax
605e(2): and %dl,%al
6060(2): jz 0x31(%rip)
6062(3): cmp %r15,%r13
6065(2): jbe 0x7(%rip)
6067(5): mov $0x27,0x0(%r14,%r15,1)
606c(4): lea 0x1(%r15),%rdx
6070(3): cmp %rdx,%r13
6073(2): jbe 0x8(%rip)
6075(6): mov $0x24,0x1(%r14,%r15,1)
607b(4): lea 0x2(%r15),%rdx
607f(3): cmp %rdx,%r13
6082(2): jbe 0x8(%rip)
6084(6): mov $0x27,0x2(%r14,%r15,1)
608a(4): add $0x3,%r15
608e(3): mov %eax,%r8d
6091(3): cmp %r15,%r13
6094(2): jbe 0x7(%rip)
6096(5): mov $0x5c,0x0(%r14,%r15,1)
609b(4): add $0x1,%r15
609f(4): add $0x1,%rbp
60a3(5): jmp 0xfffffe8d(%rip)
60a8(8): nop 0x0(%rax,%rax,1)
60b0(5): cmp $0x0,0xd(%rsp)
60b5(6): jnz 0x1ce(%rip)
60bb(2): xor %edx,%edx
60bd(5): test $0x1,0x78(%rsp)
60c2(6): jz 0xffffff19(%rip)
60c8(4): add $0x1,%rbp
60cc(5): jmp 0xfffffcbc(%rip)
60d1(7): nop 0x0(%rax)
60d8(5): cmp $0x2,0x8(%rsp)
60dd(3): setz %dl
60e0(2): xor %eax,%eax
60e2(5): jmp 0xfffffde6(%rip)
60e7(9): nop 0x0(%rax,%rax,1)
60f0(5): mov $0x7,%edx
60f5(5): mov $0x61,%ebx
60fa(5): jmp 0xfffffeda(%rip)
60ff(1): nop 
6100(5): cmp $0x2,0x8(%rsp)
6105(3): setz %dl
6108(3): test %rbp,%rbp
610b(6): jnz 0xfffffdb1(%rip)
6111(5): movzx 0xf(%rsp),%eax
6116(2): and %dl,%al
6118(6): jz 0xfffffdb0(%rip)
611e(3): mov %r11,%rbp
6121(8): mov $0x2,0x8(%rsp)
6129(5): jmp 0x700(%rip)
612e(2): nop 
6130(5): cmp $0x2,0x8(%rsp)
6135(3): setz %dl
6138(3): xor %r12d,%r12d
613b(2): jmp 0xffffffd6(%rip)
613d(3): nop (%rax)
6140(5): cmp $0x2,0x8(%rsp)
6145(5): mov $0x20,%ebx
614a(3): setz %dl
614d(2): jmp 0xffffffc4(%rip)
614f(1): nop 
6150(5): mov $0xd,%edx
6155(5): mov $0x72,%ebx
615a(5): jmp 0xfffffe68(%rip)
615f(1): nop 
6160(5): mov $0xc,%edx
6165(5): mov $0x66,%ebx
616a(5): jmp 0xfffffe6a(%rip)
616f(1): nop 
6170(5): mov $0xb,%edx
6175(5): mov $0x76,%ebx
617a(5): jmp 0xfffffe5a(%rip)
617f(1): nop 
6180(5): mov $0xa,%edx
6185(5): mov $0x6e,%ebx
618a(5): jmp 0xfffffe38(%rip)
618f(1): nop 
6190(3): xor %r10d,%r10d
6193(5): nop 0x0(%rax,%rax,1)
6198(6): cmp $0x1,0x58(%rsp)
619e(6): jnz 0x3aa(%rip)
61a4(5): mov %r11,0x38(%rsp)
61a9(5): mov %r8b,0x30(%rsp)
61ae(5): mov %r10b,0x28(%rsp)
61b3(5): call 0xffffb98d(%rip)
61b8(3): mov (%rax),%rcx
61bb(3): movzx %bl,%edx
61be(6): movzx 0x28(%rsp),%r10d
61c4(6): movzx 0x30(%rsp),%r8d
61ca(5): mov 0x38(%rsp),%r11
61cf(5): mov $0x1,%edi
61d4(4): movzx 0x0(%rcx,%rdx,2),%eax
61d8(4): and $0x4000,%ax
61dc(4): setnz %r12b
61e0(3): setz %al
61e3(4): and 0xd(%rsp),%al
61e7(2): test %al,%al
61e9(6): jnz 0x998(%rip)
61ef(5): cmp $0x2,0x8(%rsp)
61f4(3): setz %dl
61f7(5): jmp 0xfffffcd1(%rip)
61fc(4): nop 0x0(%rax)
6200(4): movzx (%r9),%ebx
6204(3): cmp $0x7e,%bl
6207(2): jnbe 0xffffff89(%rip)
6209(7): lea 0x6918(%rip),%rcx
6210(3): movzx %bl,%edx
6213(4): movsxd 0x0(%rcx,%rdx,4),%rax
6217(3): add %rcx,%rax
621a(2): jmp %rax
621c(4): nop 0x0(%rax)
6220(3): xor %r10d,%r10d
6223(5): cmp $0x0,0xd(%rsp)
6228(6): jnz 0xfffffdf6(%rip)
622e(2): nop 
6230(5): mov $0x5c,%edx
6235(5): mov $0x5c,%ebx
623a(5): jmp 0xfffffd9a(%rip)
623f(1): nop 
6240(5): mov $0xc,%edx
6245(3): xor %r10d,%r10d
6248(5): mov $0x66,%ebx
624d(5): jmp 0xfffffd87(%rip)
6252(6): nop 0x0(%rax,%rax,1)
6258(5): mov $0xa,%edx
625d(3): xor %r10d,%r10d
6260(5): mov $0x6e,%ebx
6265(5): jmp 0xfffffd5d(%rip)
626a(6): nop 0x0(%rax,%rax,1)
6270(5): mov $0x61,%ebx
6275(5): jmp 0xfffffdcb(%rip)
627a(6): nop 0x0(%rax,%rax,1)
6280(3): xor %r10d,%r10d
6283(5): cmp $0x2,0x8(%rsp)
6288(3): setz %dl
628b(5): cmp $0x0,0xf(%rsp)
6290(6): jnz 0xb9a(%rip)
6296(3): mov %r8d,%eax
6299(3): mov %r15,%rcx
629c(3): xor $0x1,%eax
629f(2): and %dl,%al
62a1(2): jz 0x2f(%rip)
62a3(3): cmp %r15,%r13
62a6(2): jbe 0x7(%rip)
62a8(5): mov $0x27,0x0(%r14,%r15,1)
62ad(4): lea 0x1(%r15),%rcx
62b1(3): cmp %rcx,%r13
62b4(2): jbe 0x8(%rip)
62b6(6): mov $0x24,0x1(%r14,%r15,1)
62bc(4): lea 0x2(%r15),%rcx
62c0(3): cmp %rcx,%r13
62c3(6): jnbe 0x636(%rip)
62c9(4): lea 0x3(%r15),%rcx
62cd(3): mov %eax,%r8d
62d0(3): cmp %rcx,%r13
62d3(2): jbe 0x7(%rip)
62d5(5): mov $0x5c,0x0(%r14,%rcx,1)
62da(5): cmp $0x2,0x8(%rsp)
62df(4): lea 0x1(%rcx),%r15
62e3(6): jz 0x606(%rip)
62e9(4): lea 0x1(%rbp),%rax
62ed(3): cmp %r11,%rax
62f0(2): jnb 0x1b(%rip)
62f2(5): mov 0x10(%rsp),%rax
62f7(5): movzx 0x1(%rax,%rbp,1),%eax
62fc(4): mov %al,0x28(%rsp)
6300(3): sub $0x30,%eax
6303(2): cmp $0x9,%al
6305(6): jbe 0x834(%rip)
630b(3): mov %r12d,%eax
630e(5): mov $0x30,%ebx
6313(3): xor %r12d,%r12d
6316(5): jmp 0xfffffbb2(%rip)
631b(5): nop 0x0(%rax,%rax,1)
6320(5): cmp $0x2,0x8(%rsp)
6325(3): mov %r10d,%r12d
6328(3): setz %dl
632b(3): xor %r10d,%r10d
632e(2): xor %eax,%eax
6330(5): jmp 0xfffffb98(%rip)
6335(3): nop (%rax)
6338(5): cmp $0x2,0x8(%rsp)
633d(3): setz %dl
6340(3): xor %r10d,%r10d
6343(5): jmp 0xfffffdc5(%rip)
6348(8): nop 0x0(%rax,%rax,1)
6350(5): cmp $0x2,0x8(%rsp)
6355(3): setz %dl
6358(3): xor %r10d,%r10d
635b(3): xor %r12d,%r12d
635e(5): jmp 0xfffffdb3(%rip)
6363(5): nop 0x0(%rax,%rax,1)
6368(5): cmp $0x2,0x8(%rsp)
636d(3): mov %r10d,%r12d
6370(5): mov $0x20,%ebx
6375(3): setz %dl
6378(3): xor %r10d,%r10d
637b(5): jmp 0xfffffd96(%rip)
6380(5): mov $0xd,%edx
6385(3): xor %r10d,%r10d
6388(5): mov $0x72,%ebx
638d(5): jmp 0xfffffc35(%rip)
6392(6): nop 0x0(%rax,%rax,1)
6398(5): mov $0x76,%ebx
639d(5): jmp 0xfffffca3(%rip)
63a2(6): nop 0x0(%rax,%rax,1)
63a8(5): mov $0x9,%edx
63ad(3): xor %r10d,%r10d
63b0(5): mov $0x74,%ebx
63b5(5): jmp 0xfffffc0d(%rip)
63ba(6): nop 0x0(%rax,%rax,1)
63c0(5): mov $0x62,%ebx
63c5(5): jmp 0xfffffc7b(%rip)
63ca(6): nop 0x0(%rax,%rax,1)
63d0(3): xor %r10d,%r10d
63d3(5): jmp 0xfffffa9d(%rip)
63d8(8): nop 0x0(%rax,%rax,1)
63e0(5): cmp $0x0,0xf(%rsp)
63e5(6): jnz 0x96b(%rip)
63eb(4): add $0x1,%rbp
63ef(3): mov %r8d,%eax
63f2(3): xor %r12d,%r12d
63f5(5): mov $0x5c,%ebx
63fa(5): jmp 0xfffffb12(%rip)
63ff(1): nop 
6400(5): cmp $0x2,0x8(%rsp)
6405(5): movzx 0xf(%rsp),%ebx
640a(3): mov %r8d,%r12d
640d(3): mov %r11,%rbp
6410(3): setz %dl
6413(2): mov %ebx,%eax
6415(3): test %r15,%r15
6418(3): setz %cl
641b(2): and %edx,%eax
641d(2): and %cl,%al
641f(6): jnz 0xa67(%rip)
6425(2): mov %ebx,%eax
6427(3): xor $0x1,%eax
642a(2): and %al,%dl
642c(6): jz 0x970(%rip)
6432(5): cmp $0x0,0x7c(%rsp)
6437(6): jz 0x963(%rip)
643d(5): cmp $0x0,0xe(%rsp)
6442(6): jnz 0x9fb(%rip)
6448(3): test %r13,%r13
644b(3): setz %al
644e(6): cmp $0x0,0x50(%rsp)
6454(3): setnz %dl
6457(2): and %dl,%al
6459(6): jz 0xa23(%rip)
645f(5): mov 0x50(%rsp),%r13
6464(7): lea 0x6cae(%rip),%rbx
646b(4): mov $0x27,(%r14)
646f(8): mov $0x2,0x8(%rsp)
6477(6): mov $0x1,%r15d
647d(9): mov $0x1,0x18(%rsp)
6486(5): mov $0x0,0xf(%rsp)
648b(5): mov %rbx,0x48(%rsp)
6490(4): mov %al,0x7c(%rsp)
6494(5): jmp 0xfffff8df(%rip)
6499(7): nop 0x0(%rax)
64a0(5): cmp $0x0,0xf(%rsp)
64a5(6): jnz 0x8ab(%rip)
64ab(3): test %r13,%r13
64ae(6): jz 0x402(%rip)
64b4(2): xor %edx,%edx
64b6(6): cmp $0x0,0x50(%rsp)
64bc(6): jnz 0x3f4(%rip)
64c2(5): mov %r13,0x50(%rsp)
64c7(4): add $0x3,%r15
64cb(2): xor %eax,%eax
64cd(5): mov %r12b,0x7c(%rsp)
64d2(3): xor %r8d,%r8d
64d5(3): mov %rdx,%r13
64d8(5): mov $0x27,%ebx
64dd(5): jmp 0xfffffa1c(%rip)
64e2(6): nop 0x0(%rax,%rax,1)
64e8(5): test $0x4,0x78(%rsp)
64ed(2): jz 0x23(%rip)
64ef(4): lea 0x2(%rbp),%rcx
64f3(3): cmp %r11,%rcx
64f6(2): jnb 0x1a(%rip)
64f8(5): mov 0x10(%rsp),%rax
64fd(5): cmp $0x3f,0x1(%rax,%rbp,1)
6502(6): jz 0x790(%rip)
6508(8): nop 0x0(%rax,%rax,1)
6510(2): xor %edx,%edx
6512(3): xor %r12d,%r12d
6515(2): xor %eax,%eax
6517(5): mov $0x3f,%ebx
651c(5): jmp 0xfffff9ac(%rip)
6521(7): nop 0x0(%rax)
6528(5): cmp $0x0,0xf(%rsp)
652d(6): jnz 0x823(%rip)
6533(3): xor %r12d,%r12d
6536(2): xor %eax,%eax
6538(5): mov $0x3f,%ebx
653d(5): jmp 0xfffff9bc(%rip)
6542(6): nop 0x0(%rax,%rax,1)
6548(8): lea 0xa0(%rsp),%rax
6550(4): cmp $0xffffffff,%r11
6554(c): mov $0x0,0xa0(%rsp)
6560(5): mov %rax,0x28(%rsp)
6565(2): jnz 0x2f(%rip)
6567(5): mov 0x10(%rsp),%rdi
656c(5): mov %r8b,0x40(%rsp)
6571(5): mov %r10b,0x38(%rsp)
6576(5): mov %r9,0x30(%rsp)
657b(5): call 0xffffb355(%rip)
6580(6): movzx 0x40(%rsp),%r8d
6586(6): movzx 0x38(%rsp),%r10d
658c(3): mov %rax,%r11
658f(5): mov 0x30(%rsp),%r9
6594(8): lea 0x9c(%rsp),%rax
659c(2): xor %ecx,%ecx
659e(4): mov %bl,0x7e(%rsp)
65a2(5): mov %r8b,0x7d(%rsp)
65a7(3): mov %rcx,%rbx
65aa(8): mov %r9,0x88(%rsp)
65b2(5): mov %rax,0x38(%rsp)
65b7(5): mov %r10b,0x7f(%rsp)
65bc(8): mov %r15,0x80(%rsp)
65c4(5): mov %r14,0x40(%rsp)
65c9(5): mov %r13,0x70(%rsp)
65ce(5): mov %r11,0x30(%rsp)
65d3(5): mov 0x10(%rsp),%rax
65d8(5): lea 0x0(%rbp,%rbx,1),%r14
65dd(5): mov 0x30(%rsp),%rdx
65e2(5): mov 0x28(%rsp),%rcx
65e7(5): mov 0x38(%rsp),%rdi
65ec(4): lea 0x0(%rax,%r14,1),%r13
65f0(3): sub %r14,%rdx
65f3(3): mov %r13,%rsi
65f6(5): call 0x232a(%rip)
65fb(3): test %rax,%rax
65fe(3): mov %rax,%r15
6601(2): jz 0x50(%rip)
6603(4): cmp $0xffffffff,%rax
6607(6): jz 0x61e(%rip)
660d(4): cmp $0xfffffffe,%rax
6611(6): jz 0x5a0(%rip)
6617(5): cmp $0x2,0x8(%rsp)
661c(3): setz %al
661f(4): and 0xf(%rsp),%al
6623(6): jnz 0x19d(%rip)
6629(7): mov 0x9c(%rsp),%edi
6630(5): call 0xffffb500(%rip)
6635(5): mov 0x28(%rsp),%rdi
663a(2): test %eax,%eax
663c(5): mov $0x0,%eax
6641(4): cmove %eax,%r12d
6645(3): add %r15,%rbx
6648(5): call 0xffffb4d8(%rip)
664d(2): test %eax,%eax
664f(2): jz 0xffffff84(%rip)
6651(3): mov %r12d,%edx
6654(3): mov %rbx,%rdi
6657(6): movzx 0x7d(%rsp),%r8d
665d(3): xor $0x1,%edx
6660(5): movzx 0x7e(%rsp),%ebx
6665(6): movzx 0x7f(%rsp),%r10d
666b(4): and 0xd(%rsp),%dl
666f(8): mov 0x80(%rsp),%r15
6677(5): mov 0x40(%rsp),%r14
667c(5): mov 0x70(%rsp),%r13
6681(5): mov 0x30(%rsp),%r11
6686(4): cmp $0x1,%rdi
668a(6): jbe 0x601(%rip)
6690(3): mov %rdi,%rcx
6693(2): xor %esi,%esi
6695(6): movzx 0xf(%rsp),%r9d
669b(3): add %rbp,%rcx
669e(5): mov 0x10(%rsp),%rdi
66a3(5): jmp 0xbb(%rip)
66a8(8): nop 0x0(%rax,%rax,1)
66b0(5): cmp $0x2,0x8(%rsp)
66b5(3): setz %al
66b8(3): test %r9b,%r9b
66bb(6): jnz 0x4b5(%rip)
66c1(3): mov %r8d,%esi
66c4(3): xor $0x1,%esi
66c7(3): and %sil,%al
66ca(2): jz 0x31(%rip)
66cc(3): cmp %r15,%r13
66cf(2): jbe 0x7(%rip)
66d1(5): mov $0x27,0x0(%r14,%r15,1)
66d6(4): lea 0x1(%r15),%rsi
66da(3): cmp %rsi,%r13
66dd(2): jbe 0x8(%rip)
66df(6): mov $0x24,0x1(%r14,%r15,1)
66e5(4): lea 0x2(%r15),%rsi
66e9(3): cmp %rsi,%r13
66ec(2): jbe 0x8(%rip)
66ee(6): mov $0x27,0x2(%r14,%r15,1)
66f4(4): add $0x3,%r15
66f8(3): mov %eax,%r8d
66fb(3): cmp %r15,%r13
66fe(2): jbe 0x7(%rip)
6700(5): mov $0x5c,0x0(%r14,%r15,1)
6705(4): lea 0x1(%r15),%rax
6709(3): cmp %rax,%r13
670c(2): jbe 0xf(%rip)
670e(2): mov %ebx,%eax
6710(3): shr $0x6,%al
6713(3): add $0x30,%eax
6716(5): mov %al,0x1(%r14,%r15,1)
671b(4): lea 0x2(%r15),%rax
671f(3): cmp %rax,%r13
6722(2): jbe 0x12(%rip)
6724(2): mov %ebx,%eax
6726(3): shr $0x3,%al
6729(3): and $0x7,%eax
672c(3): add $0x30,%eax
672f(5): mov %al,0x2(%r14,%r15,1)
6734(3): and $0x7,%ebx
6737(4): add $0x1,%rbp
673b(4): add $0x3,%r15
673f(3): add $0x30,%ebx
6742(3): cmp %rcx,%rbp
6745(6): jnb 0xfffff7eb(%rip)
674b(2): mov %edx,%esi
674d(3): cmp %r15,%r13
6750(2): jbe 0x6(%rip)
6752(4): mov %bl,0x0(%r14,%r15,1)
6756(4): movzx 0x0(%rdi,%rbp,1),%ebx
675a(4): add $0x1,%r15
675e(2): test %dl,%dl
6760(6): jnz 0xffffff50(%rip)
6766(2): mov %esi,%eax
6768(3): xor $0x1,%eax
676b(3): and %r8d,%eax
676e(3): test %r10b,%r10b
6771(2): jz 0x10(%rip)
6773(3): cmp %r15,%r13
6776(2): jbe 0x7(%rip)
6778(5): mov $0x5c,0x0(%r14,%r15,1)
677d(4): add $0x1,%r15
6781(4): add $0x1,%rbp
6785(3): cmp %rcx,%rbp
6788(6): jnb 0xfffff784(%rip)
678e(2): test %al,%al
6790(6): jz 0x3fe(%rip)
6796(3): cmp %r15,%r13
6799(2): jbe 0x7(%rip)
679b(5): mov $0x27,0x0(%r14,%r15,1)
67a0(4): lea 0x1(%r15),%rax
67a4(3): cmp %rax,%r13
67a7(2): jbe 0x8(%rip)
67a9(6): mov $0x27,0x1(%r14,%r15,1)
67af(4): add $0x2,%r15
67b3(3): xor %r10d,%r10d
67b6(3): xor %r8d,%r8d
67b9(2): jmp 0xffffff94(%rip)
67bb(5): nop 0x0(%rax,%rax,1)
67c0(4): cmp $0x1,%r15
67c4(6): jz 0xfffffe65(%rip)
67ca(5): mov 0x10(%rsp),%rdi
67cf(4): lea 0x0(%rdi,%r15,1),%rcx
67d3(5): lea 0x1(%rdi,%r14,1),%rdx
67d8(4): lea 0x0(%rcx,%r14,1),%r8
67dc(2): jmp 0x11(%rip)
67de(2): nop 
67e0(4): add $0x1,%rdx
67e4(3): cmp %rdx,%r8
67e7(6): jz 0xfffffe42(%rip)
67ed(3): movzx (%rdx),%ecx
67f0(3): sub $0x5b,%ecx
67f3(3): cmp $0x21,%cl
67f6(2): jnbe 0xffffffea(%rip)
67f8(5): mov $0x1,%esi
67fd(3): shl/sal %cl,%rsi
6800(3): mov %rsi,%rcx
6803(a): mov $0x8589934635,%rsi
680d(3): test %rsi,%rcx
6810(2): jz 0xffffffd0(%rip)
6812(5): mov 0x40(%rsp),%r14
6817(5): mov 0x70(%rsp),%r13
681c(5): mov 0x30(%rsp),%rbp
6821(8): mov $0x2,0x8(%rsp)
6829(5): cmp $0x0,0xd(%rsp)
682e(2): jz 0x12(%rip)
6830(2): test %al,%al
6832(5): mov $0x4,%eax
6837(5): cmove 0x8(%rsp),%eax
683c(4): mov %eax,0x8(%rsp)
6840(4): sub $0x8,%rsp
6844(3): mov %rbp,%rcx
6847(3): mov %r13,%rsi
684a(4): push 0x68(%rsp)
684e(4): push 0x78(%rsp)
6852(3): mov %r14,%rdi
6855(2): push $0x0
6857(8): mov 0x98(%rsp),%r9d
685f(5): mov 0x28(%rsp),%r8d
6864(5): mov 0x30(%rsp),%rdx
6869(4): and $0xfd,%r9d
686d(5): call 0xfffff433(%rip)
6872(4): add $0x20,%rsp
6876(3): mov %rax,%r15
6879(8): mov 0xa8(%rsp),%rbx
6881(9): xor $0x28,%rbx
688a(3): mov %r15,%rax
688d(6): jnz 0x606(%rip)
6893(7): add $0xb8,%rsp
689a(1): pop %rbx
689b(1): pop %rbp
689c(2): pop %r12
689e(2): pop %r13
68a0(2): pop %r14
68a2(2): pop %r15
68a4(1): ret near (%rsp)
68a5(3): nop (%rax)
68a8(3): mov %r11,%rbp
68ab(5): jmp 0xffffff7e(%rip)
68b0(3): cmp %r15,%r13
68b3(2): jbe 0x7(%rip)
68b5(5): mov $0x27,0x0(%r14,%r15,1)
68ba(4): lea 0x1(%r15),%rax
68be(3): cmp %rax,%r13
68c1(2): jbe 0x8(%rip)
68c3(6): mov $0x5c,0x1(%r14,%r15,1)
68c9(4): lea 0x2(%r15),%rax
68cd(3): cmp %rax,%r13
68d0(6): jbe 0x5f2(%rip)
68d6(3): mov %r13,%rdx
68d9(6): mov $0x27,0x2(%r14,%r15,1)
68df(5): mov 0x50(%rsp),%r13
68e4(5): jmp 0xfffffbde(%rip)
68e9(3): mov %r12d,%eax
68ec(5): mov $0x30,%ebx
68f1(3): xor %r12d,%r12d
68f4(5): jmp 0xfffff605(%rip)
68f9(6): mov $0x27,0x2(%r14,%r15,1)
68ff(5): jmp 0xfffff9ca(%rip)
6904(2): test %ebx,%ebx
6906(6): jnz 0xfffff42d(%rip)
690c(5): mov $0x1,0xd(%rsp)
6911(3): test %r13,%r13
6914(6): jnz 0x596(%rip)
691a(7): lea 0x67f8(%rip),%rax
6921(9): mov $0x0,0x50(%rsp)
692a(5): mov $0x1,0xe(%rsp)
692f(5): mov $0x0,0x7c(%rsp)
6934(3): xor %r12d,%r12d
6937(5): mov $0x0,0xf(%rsp)
693c(9): mov $0x1,0x18(%rsp)
6945(5): mov %rax,0x48(%rsp)
694a(6): mov $0x1,%r15d
6950(8): mov $0x2,0x8(%rsp)
6958(5): jmp 0xfffff41b(%rip)
695d(3): nop (%rax)
6960(2): test %ebx,%ebx
6962(6): jnz 0x3fb(%rip)
6968(3): test %r13,%r13
696b(6): jz 0x22b(%rip)
6971(4): mov $0x22,(%r14)
6975(5): mov $0x1,0xe(%rsp)
697a(3): xor %r12d,%r12d
697d(5): mov $0x0,0x7c(%rsp)
6982(9): mov $0x0,0x50(%rsp)
698b(7): lea 0x5f01(%rip),%rax
6992(5): mov $0x0,0xf(%rsp)
6997(5): mov $0x1,0xd(%rsp)
699c(9): mov $0x1,0x18(%rsp)
69a5(6): mov $0x1,%r15d
69ab(5): mov %rax,0x48(%rsp)
69b0(5): jmp 0xfffff3c3(%rip)
69b5(7): lea 0x5ed7(%rip),%rax
69bc(5): mov $0x1,0xe(%rsp)
69c1(5): mov $0x0,0x7c(%rsp)
69c6(3): xor %r12d,%r12d
69c9(9): mov $0x0,0x50(%rsp)
69d2(5): mov $0x1,0xf(%rsp)
69d7(5): mov $0x1,0xd(%rsp)
69dc(9): mov $0x1,0x18(%rsp)
69e5(3): xor %r15d,%r15d
69e8(5): mov %rax,0x48(%rsp)
69ed(8): mov $0x5,0x8(%rsp)
69f5(5): jmp 0xfffff37e(%rip)
69fa(5): mov $0x1,0xe(%rsp)
69ff(5): mov $0x0,0x7c(%rsp)
6a04(3): xor %r12d,%r12d
6a07(9): mov $0x0,0x50(%rsp)
6a10(5): mov $0x0,0xf(%rsp)
6a15(3): xor %r15d,%r15d
6a18(5): mov $0x1,0xd(%rsp)
6a1d(9): mov $0x0,0x18(%rsp)
6a26(9): mov $0x0,0x48(%rsp)
6a2f(5): jmp 0xfffff344(%rip)
6a34(5): cmp $0xa,0x8(%rsp)
6a39(2): jz 0x58(%rip)
6a3b(7): lea 0x5e53(%rip),%rsi
6a42(2): xor %edi,%edi
6a44(5): mov $0x5,%edx
6a49(5): call 0xffffae67(%rip)
6a4e(3): mov %rax,%rcx
6a51(5): mov %rax,0x68(%rsp)
6a56(7): lea 0x5e38(%rip),%rax
6a5d(3): cmp %rax,%rcx
6a60(6): jz 0x39e(%rip)
6a66(7): lea 0x66ac(%rip),%rsi
6a6d(2): xor %edi,%edi
6a6f(5): mov $0x5,%edx
6a74(5): call 0xffffae3c(%rip)
6a79(3): mov %rax,%rcx
6a7c(5): mov %rax,0x60(%rsp)
6a81(7): lea 0x6691(%rip),%rax
6a88(3): cmp %rax,%rcx
6a8b(6): jz 0x389(%rip)
6a91(3): xor %r15d,%r15d
6a94(2): test %ebx,%ebx
6a96(6): jz 0x1c7(%rip)
6a9c(2): test %ebx,%ebx
6a9e(5): mov 0x60(%rsp),%rbx
6aa3(5): setnz 0xf(%rsp)
6aa8(3): xor %r12d,%r12d
6aab(3): mov %rbx,%rdi
6aae(5): call 0xffffae22(%rip)
6ab3(5): mov %rbx,0x48(%rsp)
6ab8(5): mov %rax,0x18(%rsp)
6abd(5): mov $0x1,0xe(%rsp)
6ac2(5): mov $0x0,0x7c(%rsp)
6ac7(9): mov $0x0,0x50(%rsp)
6ad0(5): mov $0x1,0xd(%rsp)
6ad5(5): jmp 0xfffff29e(%rip)
6ada(5): mov $0x1,0xe(%rsp)
6adf(5): mov $0x0,0x7c(%rsp)
6ae4(3): xor %r12d,%r12d
6ae7(9): mov $0x0,0x50(%rsp)
6af0(5): mov $0x0,0xf(%rsp)
6af5(3): xor %r15d,%r15d
6af8(5): mov $0x0,0xd(%rsp)
6afd(9): mov $0x0,0x18(%rsp)
6b06(9): mov $0x0,0x48(%rsp)
6b0f(5): jmp 0xfffff264(%rip)
6b14(5): mov $0x1,0xe(%rsp)
6b19(5): mov $0x0,0x7c(%rsp)
6b1e(3): xor %r12d,%r12d
6b21(9): mov $0x0,0x50(%rsp)
6b2a(5): mov $0x1,0xf(%rsp)
6b2f(5): mov $0x1,0xd(%rsp)
6b34(5): jmp 0xfffff21f(%rip)
6b39(3): cmp %r15,%r13
6b3c(2): jbe 0x7(%rip)
6b3e(5): mov $0x30,0x0(%r14,%r15,1)
6b43(4): lea 0x2(%rcx),%rax
6b47(3): cmp %rax,%r13
6b4a(2): jbe 0x8(%rip)
6b4c(6): mov $0x30,0x2(%r14,%rcx,1)
6b52(3): mov %r12d,%eax
6b55(4): lea 0x3(%rcx),%r15
6b59(3): xor %r12d,%r12d
6b5c(5): mov $0x30,%ebx
6b61(5): jmp 0xfffff367(%rip)
6b66(a): nop 0x0(%rax,%rax,1)
6b70(5): movzx 0xf(%rsp),%ebx
6b75(3): mov %r11,%rbp
6b78(4): mov %bl,0xd(%rsp)
6b7c(5): jmp 0xfffffcad(%rip)
6b81(5): movzx 0xd(%rsp),%edx
6b86(3): xor %r12d,%r12d
6b89(5): jmp 0xfffffb07(%rip)
6b8e(3): xor %r10d,%r10d
6b91(5): jmp 0xfffffbbc(%rip)
6b96(9): mov $0x0,0x50(%rsp)
6b9f(5): mov $0x1,0xe(%rsp)
6ba4(3): xor %r12d,%r12d
6ba7(5): mov $0x0,0x7c(%rsp)
6bac(5): jmp 0xfffffddf(%rip)
6bb1(5): mov 0x30(%rsp),%r11
6bb6(3): mov %r14,%rsi
6bb9(3): mov %r13,%rcx
6bbc(3): mov %rbx,%rax
6bbf(3): mov %rbx,%rdi
6bc2(6): movzx 0x7d(%rsp),%r8d
6bc8(5): movzx 0x7e(%rsp),%ebx
6bcd(8): mov 0x88(%rsp),%r9
6bd5(3): cmp %r11,%rsi
6bd8(6): movzx 0x7f(%rsp),%r10d
6bde(8): mov 0x80(%rsp),%r15
6be6(5): mov 0x40(%rsp),%r14
6beb(5): mov 0x70(%rsp),%r13
6bf0(2): jnb 0x28(%rip)
6bf2(3): cmp $0x0,(%rcx)
6bf5(2): jnz 0x12(%rip)
6bf7(2): jmp 0x21(%rip)
6bf9(7): nop 0x0(%rax)
6c00(5): cmp $0x0,0x0(%r9,%rax,1)
6c05(2): jz 0x10(%rip)
6c07(4): add $0x1,%rax
6c0b(5): lea 0x0(%rbp,%rax,1),%rdx
6c10(3): cmp %rdx,%r11
6c13(2): jnbe 0xffffffed(%rip)
6c15(3): mov %rax,%rdi
6c18(5): movzx 0xd(%rsp),%edx
6c1d(3): xor %r12d,%r12d
6c20(5): jmp 0xfffffa66(%rip)
6c25(3): mov %rbx,%rdi
6c28(6): movzx 0x7d(%rsp),%r8d
6c2e(5): movzx 0x7e(%rsp),%ebx
6c33(6): movzx 0x7f(%rsp),%r10d
6c39(8): mov 0x80(%rsp),%r15
6c41(3): xor %r12d,%r12d
6c44(5): mov 0x40(%rsp),%r14
6c49(5): mov 0x70(%rsp),%r13
6c4e(5): mov 0x30(%rsp),%r11
6c53(5): movzx 0xd(%rsp),%edx
6c58(5): jmp 0xfffffa2e(%rip)
6c5d(5): mov 0x68(%rsp),%rdx
6c62(3): movzx (%rdx),%eax
6c65(2): test %al,%al
6c67(6): jz 0xfffffe35(%rip)
6c6d(3): nop (%rax)
6c70(3): cmp %r15,%r13
6c73(2): jbe 0x6(%rip)
6c75(4): mov %al,0x0(%r14,%r15,1)
6c79(4): add $0x1,%r15
6c7d(5): movzx 0x0(%rdx,%r15,1),%eax
6c82(2): test %al,%al
6c84(2): jnz 0xffffffec(%rip)
6c86(5): jmp 0xfffffe16(%rip)
6c8b(2): mov %edx,%eax
6c8d(5): jmp 0xfffff55a(%rip)
6c92(4): movzx 0x0(%rax,%rcx,1),%ebx
6c96(3): cmp $0x3e,%bl
6c99(6): jnbe 0xfffff877(%rip)
6c9f(a): mov $0x8070630310989004800,%rax
6ca9(4): bt %rbx,%rax
6cad(6): jnb 0xfffff863(%rip)
6cb3(5): cmp $0x0,0xf(%rsp)
6cb8(6): jnz 0x1ea(%rip)
6cbe(3): cmp %r15,%r13
6cc1(2): jbe 0x7(%rip)
6cc3(5): mov $0x3f,0x0(%r14,%r15,1)
6cc8(4): lea 0x1(%r15),%rax
6ccc(3): cmp %rax,%r13
6ccf(2): jbe 0x8(%rip)
6cd1(6): mov $0x22,0x1(%r14,%r15,1)
6cd7(4): lea 0x2(%r15),%rax
6cdb(3): cmp %rax,%r13
6cde(2): jbe 0x8(%rip)
6ce0(6): mov $0x22,0x2(%r14,%r15,1)
6ce6(4): lea 0x3(%r15),%rax
6cea(3): cmp %rax,%r13
6ced(2): jbe 0x8(%rip)
6cef(6): mov $0x3f,0x3(%r14,%r15,1)
6cf5(4): add $0x4,%r15
6cf9(2): xor %edx,%edx
6cfb(3): xor %r12d,%r12d
6cfe(2): xor %eax,%eax
6d00(3): mov %rcx,%rbp
6d03(5): jmp 0xfffff1c5(%rip)
6d08(2): test %ebx,%ebx
6d0a(6): jz 0x18e(%rip)
6d10(7): lea 0x6402(%rip),%rax
6d17(5): mov $0x1,0xe(%rsp)
6d1c(5): mov $0x0,0x7c(%rsp)
6d21(3): xor %r12d,%r12d
6d24(9): mov $0x0,0x50(%rsp)
6d2d(5): mov $0x1,0xf(%rsp)
6d32(5): mov $0x0,0xd(%rsp)
6d37(9): mov $0x1,0x18(%rsp)
6d40(3): xor %r15d,%r15d
6d43(5): mov %rax,0x48(%rsp)
6d48(5): jmp 0xfffff02b(%rip)
6d4d(3): nop (%rax)
6d50(3): mov %r11,%rbp
6d53(5): movzx 0xf(%rsp),%eax
6d58(5): jmp 0xfffffad1(%rip)
6d5d(7): lea 0x5b2f(%rip),%rax
6d64(5): mov $0x1,0xe(%rsp)
6d69(5): mov $0x0,0x7c(%rsp)
6d6e(3): xor %r12d,%r12d
6d71(9): mov $0x0,0x50(%rsp)
6d7a(5): mov $0x1,0xf(%rsp)
6d7f(5): mov $0x1,0xd(%rsp)
6d84(9): mov $0x1,0x18(%rsp)
6d8d(3): xor %r15d,%r15d
6d90(5): mov %rax,0x48(%rsp)
6d95(5): jmp 0xffffefde(%rip)
6d9a(2): mov %edx,%eax
6d9c(5): mov 0x48(%rsp),%rbx
6da1(3): test %rbx,%rbx
6da4(2): jz 0x2e(%rip)
6da6(2): test %al,%al
6da8(2): jz 0x2a(%rip)
6daa(3): movzx (%rbx),%ecx
6dad(3): mov %rbx,%rax
6db0(2): test %cl,%cl
6db2(2): jz 0x20(%rip)
6db4(3): mov %r15,%rdx
6db7(3): sub %r15,%rax
6dba(3): cmp %rdx,%r13
6dbd(2): jbe 0x6(%rip)
6dbf(4): mov %cl,0x0(%r14,%rdx,1)
6dc3(4): add $0x1,%rdx
6dc7(4): movzx 0x0(%rax,%rdx,1),%ecx
6dcb(2): test %cl,%cl
6dcd(2): jnz 0xffffffed(%rip)
6dcf(3): mov %rdx,%r15
6dd2(3): cmp %r15,%r13
6dd5(6): jbe 0xfffffaa4(%rip)
6ddb(5): mov $0x0,0x0(%r14,%r15,1)
6de0(5): jmp 0xfffffa99(%rip)
6de5(5): cmp $0x2,0x8(%rsp)
6dea(5): movzx 0xf(%rsp),%ebx
6def(3): mov %r11,%rbp
6df2(3): setz %al
6df5(4): mov %bl,0xd(%rsp)
6df9(5): jmp 0xfffffa30(%rip)
6dfe(4): mov 0x8(%rsp),%esi
6e02(3): mov %rcx,%rdi
6e05(5): call 0xffffedab(%rip)
6e0a(5): mov %rax,0x68(%rsp)
6e0f(5): jmp 0xfffffc57(%rip)
6e14(4): mov 0x8(%rsp),%esi
6e18(3): mov %rcx,%rdi
6e1b(5): call 0xffffed95(%rip)
6e20(5): mov %rax,0x60(%rsp)
6e25(5): jmp 0xfffffc6c(%rip)
6e2a(5): movzx 0xf(%rsp),%ebx
6e2f(3): mov %r11,%rbp
6e32(2): mov %edx,%eax
6e34(4): mov %bl,0xd(%rsp)
6e38(5): jmp 0xfffff9f1(%rip)
6e3d(4): sub $0x8,%rsp
6e41(6): mov $0x5,%r8d
6e47(3): mov %r11,%rcx
6e4a(4): push 0x68(%rsp)
6e4e(4): push 0x78(%rsp)
6e52(3): mov %r14,%rdi
6e55(4): push 0x38(%rsp)
6e59(8): mov 0x98(%rsp),%r9d
6e61(5): mov 0x30(%rsp),%rdx
6e66(5): mov 0x70(%rsp),%rsi
6e6b(5): call 0xffffee35(%rip)
6e70(4): add $0x20,%rsp
6e74(3): mov %rax,%r15
6e77(5): jmp 0xfffffa02(%rip)
6e7c(5): movzx 0x7c(%rsp),%eax
6e81(5): jmp 0xffffff1b(%rip)
6e86(8): mov $0x2,0x8(%rsp)
6e8e(5): jmp 0xfffff99b(%rip)
6e93(5): call 0xffffaa4d(%rip)
6e98(5): mov $0x0,0xd(%rsp)
6e9d(5): jmp 0xfffffa74(%rip)
6ea2(3): mov %r11,%rbp
6ea5(5): jmp 0xfffff99b(%rip)
6eaa(5): mov $0x1,0xe(%rsp)
6eaf(2): xor %eax,%eax
6eb1(3): xor %r12d,%r12d
6eb4(9): mov $0x0,0x50(%rsp)
6ebd(5): jmp 0xfffff5a7(%rip)
6ec2(3): mov %r13,%rdx
6ec5(5): mov 0x50(%rsp),%r13
6eca(5): jmp 0xfffff5f8(%rip)
6ecf(5): call 0xffffa911(%rip)

"quotearg_n_options" :
6ee0(2): push %r15
6ee2(2): push %r14
6ee4(3): movsxd %edi,%r15
6ee7(2): push %r13
6ee9(2): push %r12
6eeb(3): mov %rdx,%r14
6eee(1): push %rbp
6eef(1): push %rbx
6ef0(3): mov %rcx,%rbp
6ef3(4): sub $0x28,%rsp
6ef7(5): mov %rsi,0x8(%rsp)
6efc(5): call 0xffffa8f4(%rip)
6f01(3): mov %rax,%r13
6f04(2): mov (%rax),%eax
6f06(3): test %r15d,%r15d
6f09(7): mov 0x209170(%rip),%rbx
6f10(4): mov %eax,0x18(%rsp)
6f14(6): js 0x16d(%rip)
6f1a(7): cmp %r15d,0x209157(%rip)
6f21(2): jnle 0x64(%rip)
6f23(7): cmp $0x7fffffff,%r15d
6f2a(6): jz 0x15c(%rip)
6f30(4): lea 0x1(%r15),%r12d
6f34(7): lea 0x209155(%rip),%rax
6f3b(3): movsxd %r12d,%rsi
6f3e(4): shl/sal $0x4,%rsi
6f42(3): cmp %rax,%rbx
6f45(6): jz 0x11b(%rip)
6f4b(3): mov %rbx,%rdi
6f4e(5): call 0xf72(%rip)
6f53(3): mov %rax,%rbx
6f56(7): mov %rax,0x209123(%rip)
6f5d(7): movsxd 0x209114(%rip),%rdi
6f64(3): mov %r12d,%edx
6f67(2): xor %esi,%esi
6f69(2): sub %edi,%edx
6f6b(4): shl/sal $0x4,%rdi
6f6f(3): movsxd %edx,%rdx
6f72(3): add %rbx,%rdi
6f75(4): shl/sal $0x4,%rdx
6f79(5): call 0xffffaa07(%rip)
6f7e(7): mov %r12d,0x2090f3(%rip)
6f85(3): mov 0x4(%rbp),%eax
6f88(4): shl/sal $0x4,%r15
6f8c(4): sub $0x8,%rsp
6f90(3): add %r15,%rbx
6f93(4): lea 0x8(%rbp),%r15
6f97(4): mov 0x0(%rbp),%r8d
6f9b(3): mov (%rbx),%r11
6f9e(4): mov 0x8(%rbx),%r12
6fa2(3): mov %r14,%rcx
6fa5(3): or $0x1,%eax
6fa8(4): mov %eax,0x24(%rsp)
6fac(3): push 0x30(%rbp)
6faf(3): mov %eax,%r9d
6fb2(3): push 0x28(%rbp)
6fb5(2): push %r15
6fb7(3): mov %r11,%rsi
6fba(5): mov 0x28(%rsp),%rdx
6fbf(3): mov %r12,%rdi
6fc2(5): mov %r11,0x30(%rsp)
6fc7(5): call 0xffffecd9(%rip)
6fcc(4): add $0x20,%rsp
6fd0(5): mov 0x10(%rsp),%r11
6fd5(3): cmp %rax,%r11
6fd8(2): jnbe 0x69(%rip)
6fda(4): lea 0x1(%rax),%rsi
6fde(7): lea 0x20925b(%rip),%rax
6fe5(3): cmp %rax,%r12
6fe8(3): mov %rsi,(%rbx)
6feb(2): jz 0x14(%rip)
6fed(3): mov %r12,%rdi
6ff0(5): mov %rsi,0x10(%rsp)
6ff5(5): call 0xffffa7db(%rip)
6ffa(5): mov 0x10(%rsp),%rsi
6fff(3): mov %rsi,%rdi
7002(5): mov %rsi,0x10(%rsp)
7007(5): call 0xe59(%rip)
700c(4): sub $0x8,%rsp
7010(4): mov %rax,0x8(%rbx)
7014(4): mov 0x0(%rbp),%r8d
7018(3): push 0x30(%rbp)
701b(3): push 0x28(%rbp)
701e(3): mov %r14,%rcx
7021(2): push %r15
7023(5): mov 0x3c(%rsp),%r9d
7028(3): mov %rax,%rdi
702b(5): mov 0x28(%rsp),%rdx
7030(5): mov 0x30(%rsp),%rsi
7035(3): mov %rax,%r12
7038(5): call 0xffffec68(%rip)
703d(4): add $0x20,%rsp
7041(4): mov 0x18(%rsp),%eax
7045(4): mov %eax,0x0(%r13)
7049(4): add $0x28,%rsp
704d(3): mov %r12,%rax
7050(1): pop %rbx
7051(1): pop %rbp
7052(2): pop %r12
7054(2): pop %r13
7056(2): pop %r14
7058(2): pop %r15
705a(1): ret near (%rsp)
705b(5): nop 0x0(%rax,%rax,1)
7060(2): xor %edi,%edi
7062(5): call 0xe5e(%rip)
7067(8): movdqa 0x209021(%rip),%xmm0
706f(3): mov %rax,%rbx
7072(7): mov %rax,0x209007(%rip)
7079(3): movups %xmm0,(%rax)
707c(5): jmp 0xfffffee1(%rip)
7081(5): call 0xffffa75f(%rip)
7086(5): call 0x102a(%rip)

"clone_quoting_options" :
7090(2): push %r12
7092(1): push %rbp
7093(1): push %rbx
7094(3): mov %rdi,%rbx
7097(5): call 0xffffa759(%rip)
709c(3): mov (%rax),%r12d
709f(3): mov %rax,%rbp
70a2(7): lea 0x209297(%rip),%rax
70a9(3): test %rbx,%rbx
70ac(5): mov $0x38,%esi
70b1(4): cmove %rax,%rbx
70b5(3): mov %rbx,%rdi
70b8(5): call 0xfa8(%rip)
70bd(4): mov %r12d,0x0(%rbp)
70c1(1): pop %rbx
70c2(1): pop %rbp
70c3(2): pop %r12
70c5(1): ret near (%rsp)

"get_quoting_style" :
70d0(7): lea 0x209269(%rip),%rax
70d7(3): test %rdi,%rdi
70da(4): cmove %rax,%rdi
70de(2): mov (%rdi),%eax
70e0(1): ret near (%rsp)

"set_quoting_style" :
70f0(7): lea 0x209249(%rip),%rax
70f7(3): test %rdi,%rdi
70fa(4): cmove %rax,%rdi
70fe(2): mov %esi,(%rdi)
7100(1): ret near (%rsp)

"set_char_quoting" :
7110(7): lea 0x209229(%rip),%rax
7117(3): test %rdi,%rdi
711a(2): mov %esi,%ecx
711c(4): cmove %rax,%rdi
7120(2): mov %esi,%eax
7122(3): and $0x1f,%ecx
7125(3): shr $0x5,%al
7128(3): movzx %al,%eax
712b(5): lea 0x8(%rdi,%rax,4),%rdi
7130(2): mov (%rdi),%esi
7132(2): mov %esi,%eax
7134(2): shr %cl,%eax
7136(2): xor %eax,%edx
7138(3): and $0x1,%eax
713b(3): and $0x1,%edx
713e(2): shl/sal %cl,%edx
7140(2): xor %esi,%edx
7142(2): mov %edx,(%rdi)
7144(1): ret near (%rsp)

"set_quoting_flags" :
7150(7): lea 0x2091e9(%rip),%rax
7157(3): test %rdi,%rdi
715a(4): cmove %rax,%rdi
715e(3): mov 0x4(%rdi),%eax
7161(3): mov %esi,0x4(%rdi)
7164(1): ret near (%rsp)

"set_custom_quoting" :
7170(7): lea 0x2091c9(%rip),%rax
7177(3): test %rdi,%rdi
717a(4): cmove %rax,%rdi
717e(3): test %rsi,%rsi
7181(6): mov $0xa,(%rdi)
7187(2): jz 0x10(%rip)
7189(3): test %rdx,%rdx
718c(2): jz 0xb(%rip)
718e(4): mov %rsi,0x28(%rdi)
7192(4): mov %rdx,0x30(%rdi)
7196(1): ret near (%rsp)
7197(4): sub $0x8,%rsp
719b(5): call 0xffffa645(%rip)

"quotearg_buffer" :
71a0(2): push %r15
71a2(2): push %r14
71a4(7): lea 0x209195(%rip),%rax
71ab(2): push %r13
71ad(2): push %r12
71af(3): mov %rdi,%r13
71b2(1): push %rbp
71b3(1): push %rbx
71b4(3): mov %r8,%rbx
71b7(3): mov %rsi,%r14
71ba(3): mov %rdx,%r15
71bd(4): sub $0x18,%rsp
71c1(3): test %r8,%r8
71c4(4): cmove %rax,%rbx
71c8(5): mov %rcx,0x8(%rsp)
71cd(5): call 0xffffa623(%rip)
71d2(3): mov (%rax),%r12d
71d5(3): mov %rax,%rbp
71d8(4): lea 0x8(%rbx),%rax
71dc(4): sub $0x8,%rsp
71e0(4): mov 0x4(%rbx),%r9d
71e4(3): push 0x30(%rbx)
71e7(3): mov (%rbx),%r8d
71ea(3): push 0x28(%rbx)
71ed(3): mov %r15,%rdx
71f0(1): push %rax
71f1(5): mov 0x28(%rsp),%rcx
71f6(3): mov %r14,%rsi
71f9(3): mov %r13,%rdi
71fc(5): call 0xffffeaa4(%rip)
7201(4): mov %r12d,0x0(%rbp)
7205(4): add $0x38,%rsp
7209(1): pop %rbx
720a(1): pop %rbp
720b(2): pop %r12
720d(2): pop %r13
720f(2): pop %r14
7211(2): pop %r15
7213(1): ret near (%rsp)

"quotearg_alloc_mem" :
7220(2): push %r15
7222(2): push %r14
7224(7): lea 0x209115(%rip),%rax
722b(2): push %r13
722d(2): push %r12
722f(3): mov %rdx,%r12
7232(1): push %rbp
7233(1): push %rbx
7234(3): mov %rcx,%rbx
7237(3): mov %rdi,%r14
723a(3): mov %rsi,%r15
723d(4): sub $0x38,%rsp
7241(3): test %rcx,%rcx
7244(4): cmove %rax,%rbx
7248(2): xor %ebp,%ebp
724a(5): call 0xffffa5a6(%rip)
724f(3): test %r12,%r12
7252(3): mov %rax,%r13
7255(2): mov (%rax),%eax
7257(4): setz %bpl
725b(3): or 0x4(%rbx),%ebp
725e(4): lea 0x8(%rbx),%r10
7262(4): sub $0x8,%rsp
7266(3): mov (%rbx),%r8d
7269(3): mov %r15,%rcx
726c(4): mov %eax,0x14(%rsp)
7270(3): push 0x30(%rbx)
7273(3): mov %r14,%rdx
7276(3): push 0x28(%rbx)
7279(2): push %r10
727b(2): xor %esi,%esi
727d(3): mov %ebp,%r9d
7280(2): xor %edi,%edi
7282(5): mov %r10,0x40(%rsp)
7287(5): call 0xffffea19(%rip)
728c(4): lea 0x1(%rax),%rsi
7290(5): mov %rax,0x48(%rsp)
7295(4): add $0x20,%rsp
7299(3): mov %rsi,%rdi
729c(5): mov %rsi,0x18(%rsp)
72a1(5): call 0xbbf(%rip)
72a6(5): mov %rax,0x10(%rsp)
72ab(4): sub $0x8,%rsp
72af(3): push 0x30(%rbx)
72b2(3): push 0x28(%rbx)
72b5(5): mov 0x38(%rsp),%r10
72ba(3): mov %ebp,%r9d
72bd(3): mov (%rbx),%r8d
72c0(3): mov %r15,%rcx
72c3(3): mov %r14,%rdx
72c6(3): mov %rax,%rdi
72c9(2): push %r10
72cb(5): mov 0x38(%rsp),%rsi
72d0(5): call 0xffffe9d0(%rip)
72d5(4): mov 0x2c(%rsp),%eax
72d9(4): add $0x20,%rsp
72dd(3): test %r12,%r12
72e0(4): mov %eax,0x0(%r13)
72e4(2): jz 0xb(%rip)
72e6(5): mov 0x28(%rsp),%r11
72eb(4): mov %r11,(%r12)
72ef(5): mov 0x10(%rsp),%rax
72f4(4): add $0x38,%rsp
72f8(1): pop %rbx
72f9(1): pop %rbp
72fa(2): pop %r12
72fc(2): pop %r13
72fe(2): pop %r14
7300(2): pop %r15
7302(1): ret near (%rsp)

"quotearg_alloc" :
7310(3): mov %rdx,%rcx
7313(2): xor %edx,%edx
7315(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
7320(6): mov 0x208d52(%rip),%eax
7326(2): push %r12
7328(7): mov 0x208d51(%rip),%r12
732f(1): push %rbp
7330(1): push %rbx
7331(3): cmp $0x1,%eax
7334(2): jle 0x2d(%rip)
7336(3): sub $0x2,%eax
7339(5): lea 0x18(%r12),%rbx
733e(4): shl/sal $0x4,%rax
7342(5): lea 0x28(%r12,%rax,1),%rbp
7347(9): nop 0x0(%rax,%rax,1)
7350(3): mov (%rbx),%rdi
7353(4): add $0x10,%rbx
7357(5): call 0xffffa479(%rip)
735c(3): cmp %rbp,%rbx
735f(2): jnz 0xfffffff1(%rip)
7361(5): mov 0x8(%r12),%rdi
7366(7): lea 0x208ed3(%rip),%rbx
736d(3): cmp %rbx,%rdi
7370(2): jz 0x19(%rip)
7372(5): call 0xffffa45e(%rip)
7377(b): mov $0x100,0x208d0e(%rip)
7382(7): mov %rbx,0x208d0f(%rip)
7389(7): lea 0x208d00(%rip),%rbx
7390(3): cmp %rbx,%r12
7393(2): jz 0x11(%rip)
7395(3): mov %r12,%rdi
7398(5): call 0xffffa438(%rip)
739d(7): mov %rbx,0x208cdc(%rip)
73a4(1): pop %rbx
73a5(a): mov $0x1,0x208cc9(%rip)
73af(1): pop %rbp
73b0(2): pop %r12
73b2(1): ret near (%rsp)

"quotearg_n" :
73c0(7): lea 0x208f79(%rip),%rcx
73c7(7): mov $0xffffffff,%rdx
73ce(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
73e0(7): lea 0x208f59(%rip),%rcx
73e7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
73f0(7): lea 0x208f49(%rip),%rcx
73f7(3): mov %rdi,%rsi
73fa(7): mov $0xffffffff,%rdx
7401(2): xor %edi,%edi
7403(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
7410(7): lea 0x208f29(%rip),%rcx
7417(3): mov %rsi,%rdx
741a(3): mov %rdi,%rsi
741d(2): xor %edi,%edi
741f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
7430(4): sub $0x48,%rsp
7434(3): mov %rdx,%rax
7437(9): mov $0x28,%rdx
7440(5): mov %rdx,0x38(%rsp)
7445(2): xor %edx,%edx
7447(3): cmp $0xa,%esi
744a(2): jz 0x6a(%rip)
744c(3): mov %esi,(%rsp)
744f(3): mov %rsp,%rcx
7452(7): mov $0xffffffff,%rdx
7459(3): mov %rax,%rsi
745c(9): mov $0x0,0x4(%rsp)
7465(9): mov $0x0,0xc(%rsp)
746e(9): mov $0x0,0x14(%rsp)
7477(9): mov $0x0,0x1c(%rsp)
7480(9): mov $0x0,0x24(%rsp)
7489(9): mov $0x0,0x2c(%rsp)
7492(8): mov $0x0,0x34(%rsp)
749a(5): call 0xfffffa46(%rip)
749f(5): mov 0x38(%rsp),%rcx
74a4(9): xor $0x28,%rcx
74ad(2): jnz 0xc(%rip)
74af(4): add $0x48,%rsp
74b3(1): ret near (%rsp)
74b4(5): call 0xffffa32c(%rip)
74b9(5): call 0xffffa427(%rip)

"quotearg_n_style_mem" :
74c0(4): sub $0x48,%rsp
74c4(3): mov %rdx,%rax
74c7(3): mov %rcx,%rdx
74ca(9): mov $0x28,%rcx
74d3(5): mov %rcx,0x38(%rsp)
74d8(2): xor %ecx,%ecx
74da(3): cmp $0xa,%esi
74dd(2): jz 0x63(%rip)
74df(3): mov %esi,(%rsp)
74e2(3): mov %rsp,%rcx
74e5(3): mov %rax,%rsi
74e8(9): mov $0x0,0x4(%rsp)
74f1(9): mov $0x0,0xc(%rsp)
74fa(9): mov $0x0,0x14(%rsp)
7503(9): mov $0x0,0x1c(%rsp)
750c(9): mov $0x0,0x24(%rsp)
7515(9): mov $0x0,0x2c(%rsp)
751e(8): mov $0x0,0x34(%rsp)
7526(5): call 0xfffff9ba(%rip)
752b(5): mov 0x38(%rsp),%rdx
7530(9): xor $0x28,%rdx
7539(2): jnz 0xc(%rip)
753b(4): add $0x48,%rsp
753f(1): ret near (%rsp)
7540(5): call 0xffffa2a0(%rip)
7545(5): call 0xffffa39b(%rip)

"quotearg_style" :
7550(3): mov %rsi,%rdx
7553(2): mov %edi,%esi
7555(2): xor %edi,%edi
7557(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
7560(3): mov %rdx,%rcx
7563(3): mov %rsi,%rdx
7566(2): mov %edi,%esi
7568(2): xor %edi,%edi
756a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
7570(4): sub $0x48,%rsp
7574(2): mov %edx,%ecx
7576(9): mov $0x28,%rax
757f(5): mov %rax,0x38(%rsp)
7584(2): xor %eax,%eax
7586(7): mov 0x208de3(%rip),%rax
758d(3): mov %rsp,%r8
7590(3): and $0x1f,%ecx
7593(8): movdqa 0x208da5(%rip),%xmm0
759b(5): mov %rax,0x30(%rsp)
75a0(2): mov %edx,%eax
75a2(4): movaps %xmm0,(%rsp)
75a6(3): shr $0x5,%al
75a9(3): movzx %al,%eax
75ac(5): lea 0x8(%r8,%rax,4),%r9
75b1(8): movdqa 0x208d97(%rip),%xmm0
75b9(5): movaps %xmm0,0x10(%rsp)
75be(8): movdqa 0x208d9a(%rip),%xmm0
75c6(5): movaps %xmm0,0x20(%rsp)
75cb(3): mov (%r9),%edx
75ce(2): mov %edx,%eax
75d0(2): shr %cl,%eax
75d2(2): not %eax
75d4(3): and $0x1,%eax
75d7(2): shl/sal %cl,%eax
75d9(3): mov %r8,%rcx
75dc(2): xor %edx,%eax
75de(3): mov %rsi,%rdx
75e1(3): mov %rdi,%rsi
75e4(3): mov %eax,(%r9)
75e7(2): xor %edi,%edi
75e9(5): call 0xfffff8f7(%rip)
75ee(5): mov 0x38(%rsp),%rsi
75f3(9): xor $0x28,%rsi
75fc(2): jnz 0x7(%rip)
75fe(4): add $0x48,%rsp
7602(1): ret near (%rsp)
7603(5): call 0xffffa2dd(%rip)

"quotearg_char" :
7610(4): movsx %sil,%edx
7614(7): mov $0xffffffff,%rsi
761b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
7620(5): mov $0x3a,%edx
7625(7): mov $0xffffffff,%rsi
762c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
7640(5): mov $0x3a,%edx
7645(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
7650(4): sub $0x48,%rsp
7654(3): mov %rdx,%rax
7657(9): mov $0x28,%rdx
7660(5): mov %rdx,0x38(%rsp)
7665(2): xor %edx,%edx
7667(3): cmp $0xa,%esi
766a(2): jz 0x6a(%rip)
766c(3): mov %esi,(%rsp)
766f(3): mov %rsp,%rcx
7672(7): mov $0xffffffff,%rdx
7679(3): mov %rax,%rsi
767c(9): mov $0x0,0x4(%rsp)
7685(9): mov $0x4000000,0xc(%rsp)
768e(9): mov $0x0,0x14(%rsp)
7697(9): mov $0x0,0x1c(%rsp)
76a0(9): mov $0x0,0x24(%rsp)
76a9(9): mov $0x0,0x2c(%rsp)
76b2(8): mov $0x0,0x34(%rsp)
76ba(5): call 0xfffff826(%rip)
76bf(5): mov 0x38(%rsp),%rcx
76c4(9): xor $0x28,%rcx
76cd(2): jnz 0xc(%rip)
76cf(4): add $0x48,%rsp
76d3(1): ret near (%rsp)
76d4(5): call 0xffffa10c(%rip)
76d9(5): call 0xffffa207(%rip)

"quotearg_n_custom_mem" :
76e0(4): sub $0x48,%rsp
76e4(3): mov %rcx,%r9
76e7(7): mov 0x208c82(%rip),%rcx
76ee(8): movdqa 0x208c4a(%rip),%xmm0
76f6(9): mov $0x28,%rax
76ff(5): mov %rax,0x38(%rsp)
7704(2): xor %eax,%eax
7706(4): movaps %xmm0,(%rsp)
770a(3): test %rsi,%rsi
770d(5): mov %rcx,0x30(%rsp)
7712(7): mov $0xa,(%rsp)
7719(8): movdqa 0x208c2f(%rip),%xmm0
7721(5): movaps %xmm0,0x10(%rsp)
7726(8): movdqa 0x208c32(%rip),%xmm0
772e(5): movaps %xmm0,0x20(%rsp)
7733(2): jz 0x34(%rip)
7735(3): test %rdx,%rdx
7738(2): jz 0x2f(%rip)
773a(5): mov %rsi,0x28(%rsp)
773f(5): mov %rdx,0x30(%rsp)
7744(3): mov %rsp,%rcx
7747(3): mov %r8,%rdx
774a(3): mov %r9,%rsi
774d(5): call 0xfffff793(%rip)
7752(5): mov 0x38(%rsp),%rdi
7757(9): xor $0x28,%rdi
7760(2): jnz 0xc(%rip)
7762(4): add $0x48,%rsp
7766(1): ret near (%rsp)
7767(5): call 0xffffa079(%rip)
776c(5): call 0xffffa174(%rip)

"quotearg_n_custom" :
7780(7): mov $0xffffffff,%r8
7787(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
7790(3): mov %rdx,%rcx
7793(7): mov $0xffffffff,%r8
779a(3): mov %rsi,%rdx
779d(3): mov %rdi,%rsi
77a0(2): xor %edi,%edi
77a2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
77b0(3): mov %rcx,%r8
77b3(3): mov %rdx,%rcx
77b6(3): mov %rsi,%rdx
77b9(3): mov %rdi,%rsi
77bc(2): xor %edi,%edi
77be(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
77d0(7): lea 0x208869(%rip),%rcx
77d7(5): jmp 0xfffff709(%rip)

"quote_mem" :
77e0(7): lea 0x208859(%rip),%rcx
77e7(3): mov %rsi,%rdx
77ea(3): mov %rdi,%rsi
77ed(2): xor %edi,%edi
77ef(5): jmp 0xfffff6f1(%rip)

"quote_n" :
7800(7): lea 0x208839(%rip),%rcx
7807(7): mov $0xffffffff,%rdx
780e(5): jmp 0xfffff6d2(%rip)

"quote" :
7820(7): lea 0x208819(%rip),%rcx
7827(3): mov %rdi,%rsi
782a(7): mov $0xffffffff,%rdx
7831(2): xor %edi,%edi
7833(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
7840(2): push %r15
7842(2): push %r14
7844(2): push %r13
7846(2): push %r12
7848(3): mov %r9,%r12
784b(1): push %rbp
784c(1): push %rbx
784d(3): mov %rdi,%rbp
7850(3): mov %r8,%rbx
7853(4): sub $0x28,%rsp
7857(3): test %rsi,%rsi
785a(6): jz 0x11e(%rip)
7860(3): mov %rdx,%r8
7863(7): lea 0x54fe(%rip),%rdx
786a(3): mov %rcx,%r9
786d(2): xor %eax,%eax
786f(3): mov %rsi,%rcx
7872(5): mov $0x1,%esi
7877(5): call 0xffffa299(%rip)
787c(7): lea 0x54f8(%rip),%rsi
7883(2): xor %edi,%edi
7885(5): mov $0x5,%edx
788a(5): call 0xffffa026(%rip)
788f(7): lea 0x580a(%rip),%rdx
7896(3): mov %rax,%rcx
7899(6): mov $0x7e3,%r8d
789f(5): mov $0x1,%esi
78a4(3): mov %rbp,%rdi
78a7(2): xor %eax,%eax
78a9(5): call 0xffffa267(%rip)
78ae(7): lea 0x5553(%rip),%rsi
78b5(2): xor %edi,%edi
78b7(5): mov $0x5,%edx
78bc(5): call 0xffff9ff4(%rip)
78c1(3): mov %rbp,%rsi
78c4(3): mov %rax,%rdi
78c7(5): call 0xffffa0e9(%rip)
78cc(4): cmp $0x9,%r12
78d0(6): jnbe 0x340(%rip)
78d6(7): lea 0x5787(%rip),%rdx
78dd(4): movsxd 0x0(%rdx,%r12,4),%rax
78e1(3): add %rdx,%rax
78e4(2): jmp %rax
78e6(a): nop 0x0(%rax,%rax,1)
78f0(4): mov 0x38(%rbx),%r9
78f4(4): mov 0x10(%rbx),%rax
78f8(7): lea 0x5679(%rip),%rsi
78ff(4): mov 0x8(%rbx),%r8
7903(5): mov $0x5,%edx
7908(2): xor %edi,%edi
790a(4): mov 0x30(%rbx),%r13
790e(4): mov 0x28(%rbx),%r12
7912(5): mov %r9,0x10(%rsp)
7917(4): mov 0x20(%rbx),%r15
791b(4): mov 0x18(%rbx),%r14
791f(4): mov %rax,(%rsp)
7923(5): mov %r8,0x8(%rsp)
7928(3): mov (%rbx),%rbx
792b(5): call 0xffff9f85(%rip)
7930(4): sub $0x8,%rsp
7934(5): mov 0x18(%rsp),%r9
7939(3): mov %rax,%rdx
793c(3): mov %rbx,%rcx
793f(5): mov $0x1,%esi
7944(3): mov %rbp,%rdi
7947(2): xor %eax,%eax
7949(2): push %r9
794b(2): push %r13
794d(2): push %r12
794f(2): push %r15
7951(2): push %r14
7953(5): mov 0x30(%rsp),%r9
7958(5): mov 0x38(%rsp),%r8
795d(5): call 0xffffa1b3(%rip)
7962(4): add $0x30,%rsp
7966(4): add $0x28,%rsp
796a(1): pop %rbx
796b(1): pop %rbp
796c(2): pop %r12
796e(2): pop %r13
7970(2): pop %r14
7972(2): pop %r15
7974(1): ret near (%rsp)
7975(3): nop (%rax)
7978(3): mov %rcx,%r8
797b(3): mov %rdx,%rcx
797e(7): lea 0x53ef(%rip),%rdx
7985(5): mov $0x1,%esi
798a(2): xor %eax,%eax
798c(5): call 0xffffa184(%rip)
7991(5): jmp 0xfffffeeb(%rip)
7996(a): nop 0x0(%rax,%rax,1)
79a0(4): mov 0x40(%rbx),%r10
79a4(4): mov 0x38(%rbx),%r9
79a8(7): lea 0x55f9(%rip),%rsi
79af(4): mov 0x10(%rbx),%rax
79b3(4): mov 0x8(%rbx),%r8
79b7(5): mov $0x5,%edx
79bc(4): mov 0x30(%rbx),%r13
79c0(4): mov 0x28(%rbx),%r12
79c4(4): mov 0x20(%rbx),%r15
79c8(4): mov 0x18(%rbx),%r14
79cc(3): mov (%rbx),%rbx
79cf(5): mov %r10,0x18(%rsp)
79d4(5): mov %r9,0x10(%rsp)
79d9(4): mov %rax,(%rsp)
79dd(5): mov %r8,0x8(%rsp)
79e2(2): xor %edi,%edi
79e4(5): call 0xffff9ecc(%rip)
79e9(5): mov 0x18(%rsp),%r10
79ee(2): push %r10
79f0(5): jmp 0xffffff44(%rip)
79f5(3): nop (%rax)
79f8(3): mov (%rbx),%rbx
79fb(7): lea 0x537d(%rip),%rsi
7a02(5): mov $0x5,%edx
7a07(2): xor %edi,%edi
7a09(5): call 0xffff9ea7(%rip)
7a0e(4): add $0x28,%rsp
7a12(3): mov %rbx,%rcx
7a15(3): mov %rbp,%rdi
7a18(1): pop %rbx
7a19(1): pop %rbp
7a1a(2): pop %r12
7a1c(2): pop %r13
7a1e(2): pop %r14
7a20(2): pop %r15
7a22(3): mov %rax,%rdx
7a25(5): mov $0x1,%esi
7a2a(2): xor %eax,%eax
7a2c(5): jmp 0xffffa0e4(%rip)
7a31(7): nop 0x0(%rax)
7a38(4): mov 0x8(%rbx),%r12
7a3c(7): lea 0x534c(%rip),%rsi
7a43(3): mov (%rbx),%rbx
7a46(5): mov $0x5,%edx
7a4b(2): xor %edi,%edi
7a4d(5): call 0xffff9e63(%rip)
7a52(4): add $0x28,%rsp
7a56(3): mov %r12,%r8
7a59(3): mov %rbx,%rcx
7a5c(3): mov %rbp,%rdi
7a5f(3): mov %rax,%rdx
7a62(5): mov $0x1,%esi
7a67(1): pop %rbx
7a68(1): pop %rbp
7a69(2): pop %r12
7a6b(2): pop %r13
7a6d(2): pop %r14
7a6f(2): pop %r15
7a71(2): xor %eax,%eax
7a73(5): jmp 0xffffa09d(%rip)
7a78(8): nop 0x0(%rax,%rax,1)
7a80(4): mov 0x10(%rbx),%r13
7a84(4): mov 0x8(%rbx),%r12
7a88(7): lea 0x5317(%rip),%rsi
7a8f(3): mov (%rbx),%rbx
7a92(5): mov $0x5,%edx
7a97(2): xor %edi,%edi
7a99(5): call 0xffff9e17(%rip)
7a9e(4): add $0x28,%rsp
7aa2(3): mov %r13,%r9
7aa5(3): mov %r12,%r8
7aa8(3): mov %rbx,%rcx
7aab(3): mov %rbp,%rdi
7aae(3): mov %rax,%rdx
7ab1(1): pop %rbx
7ab2(1): pop %rbp
7ab3(2): pop %r12
7ab5(2): pop %r13
7ab7(2): pop %r14
7ab9(2): pop %r15
7abb(5): mov $0x1,%esi
7ac0(2): xor %eax,%eax
7ac2(5): jmp 0xffffa04e(%rip)
7ac7(9): nop 0x0(%rax,%rax,1)
7ad0(7): lea 0x5401(%rip),%rsi
7ad7(5): mov $0x5,%edx
7adc(2): xor %edi,%edi
7ade(4): mov 0x18(%rbx),%r14
7ae2(4): mov 0x10(%rbx),%r13
7ae6(4): mov 0x8(%rbx),%r12
7aea(3): mov (%rbx),%rbx
7aed(5): call 0xffff9dc3(%rip)
7af2(4): sub $0x8,%rsp
7af6(2): push %r14
7af8(3): mov %rax,%rdx
7afb(3): mov %r13,%r9
7afe(3): mov %r12,%r8
7b01(3): mov %rbx,%rcx
7b04(3): mov %rbp,%rdi
7b07(5): mov $0x1,%esi
7b0c(2): xor %eax,%eax
7b0e(5): call 0xffffa002(%rip)
7b13(1): pop %rax
7b14(1): pop %rdx
7b15(4): add $0x28,%rsp
7b19(1): pop %rbx
7b1a(1): pop %rbp
7b1b(2): pop %r12
7b1d(2): pop %r13
7b1f(2): pop %r14
7b21(2): pop %r15
7b23(1): ret near (%rsp)
7b24(4): nop 0x0(%rax)
7b28(4): mov 0x20(%rbx),%r15
7b2c(7): lea 0x53c5(%rip),%rsi
7b33(5): mov $0x5,%edx
7b38(2): xor %edi,%edi
7b3a(4): mov 0x18(%rbx),%r14
7b3e(4): mov 0x10(%rbx),%r13
7b42(4): mov 0x8(%rbx),%r12
7b46(3): mov (%rbx),%rbx
7b49(5): call 0xffff9d67(%rip)
7b4e(2): push %r15
7b50(2): jmp 0xffffffa6(%rip)
7b52(6): nop 0x0(%rax,%rax,1)
7b58(4): mov 0x8(%rbx),%r8
7b5c(4): mov 0x28(%rbx),%r12
7b60(7): lea 0x53b9(%rip),%rsi
7b67(4): mov 0x20(%rbx),%r15
7b6b(4): mov 0x18(%rbx),%r14
7b6f(5): mov $0x5,%edx
7b74(4): mov 0x10(%rbx),%r13
7b78(2): xor %edi,%edi
7b7a(3): mov (%rbx),%rbx
7b7d(4): mov %r8,(%rsp)
7b81(5): call 0xffff9d2f(%rip)
7b86(4): sub $0x8,%rsp
7b8a(3): mov %r13,%r9
7b8d(2): push %r12
7b8f(2): push %r15
7b91(2): push %r14
7b93(5): mov 0x20(%rsp),%r8
7b98(3): mov %rbx,%rcx
7b9b(3): mov %rax,%rdx
7b9e(3): mov %rbp,%rdi
7ba1(5): mov $0x1,%esi
7ba6(2): xor %eax,%eax
7ba8(5): call 0xffff9f68(%rip)
7bad(4): add $0x20,%rsp
7bb1(4): add $0x28,%rsp
7bb5(1): pop %rbx
7bb6(1): pop %rbp
7bb7(2): pop %r12
7bb9(2): pop %r13
7bbb(2): pop %r14
7bbd(2): pop %r15
7bbf(1): ret near (%rsp)
7bc0(4): mov 0x10(%rbx),%r9
7bc4(4): mov 0x30(%rbx),%r13
7bc8(7): lea 0x5379(%rip),%rsi
7bcf(4): mov 0x28(%rbx),%r12
7bd3(4): mov 0x20(%rbx),%r15
7bd7(5): mov $0x5,%edx
7bdc(4): mov 0x18(%rbx),%r14
7be0(4): mov 0x8(%rbx),%r8
7be4(2): xor %edi,%edi
7be6(5): mov %r9,0x8(%rsp)
7beb(3): mov (%rbx),%rbx
7bee(4): mov %r8,(%rsp)
7bf2(5): call 0xffff9cbe(%rip)
7bf7(2): push %r13
7bf9(2): push %r12
7bfb(2): push %r15
7bfd(2): push %r14
7bff(5): mov 0x28(%rsp),%r9
7c04(2): jmp 0xffffff8f(%rip)
7c06(a): nop 0x0(%rax,%rax,1)
7c10(4): mov 0x40(%rbx),%r10
7c14(4): mov 0x38(%rbx),%r9
7c18(5): mov $0x5,%edx
7c1d(4): mov 0x10(%rbx),%rax
7c21(4): mov 0x8(%rbx),%r8
7c25(7): lea 0x53b4(%rip),%rsi
7c2c(4): mov 0x30(%rbx),%r13
7c30(4): mov 0x28(%rbx),%r12
7c34(4): mov 0x20(%rbx),%r15
7c38(4): mov 0x18(%rbx),%r14
7c3c(5): mov %r10,0x18(%rsp)
7c41(5): mov %r9,0x10(%rsp)
7c46(4): mov %rax,(%rsp)
7c4a(5): mov %r8,0x8(%rsp)
7c4f(3): mov (%rbx),%rbx
7c52(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
7c60(3): xor %r9d,%r9d
7c63(4): cmp $0x0,(%r8)
7c67(2): jz 0x14(%rip)
7c69(7): nop 0x0(%rax)
7c70(4): add $0x1,%r9
7c74(5): cmp $0x0,0x0(%r8,%r9,8)
7c79(2): jnz 0xfffffff7(%rip)
7c7b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
7c80(4): sub $0x68,%rsp
7c84(3): mov %r8,%r10
7c87(3): xor %r9d,%r9d
7c8a(9): mov $0x28,%rax
7c93(5): mov %rax,0x58(%rsp)
7c98(2): xor %eax,%eax
7c9a(3): mov %rsp,%r8
7c9d(3): nop (%rax)
7ca0(3): mov (%r10),%eax
7ca3(3): cmp $0x2f,%eax
7ca6(2): jnbe 0x44(%rip)
7ca8(3): mov %eax,%r11d
7cab(4): add 0x10(%r10),%r11
7caf(3): add $0x8,%eax
7cb2(3): mov %eax,(%r10)
7cb5(3): mov (%r11),%rax
7cb8(3): test %rax,%rax
7cbb(4): mov %rax,0x0(%r8,%r9,8)
7cbf(2): jz 0xc(%rip)
7cc1(4): add $0x1,%r9
7cc5(4): cmp $0xa,%r9
7cc9(2): jnz 0xffffffd7(%rip)
7ccb(5): call 0xfffffb75(%rip)
7cd0(5): mov 0x58(%rsp),%rax
7cd5(9): xor $0x28,%rax
7cde(2): jnz 0x7(%rip)
7ce0(4): add $0x68,%rsp
7ce4(1): ret near (%rsp)
7ce5(5): call 0xffff9bfb(%rip)
7cea(4): mov 0x8(%r10),%r11
7cee(4): lea 0x8(%r11),%rax
7cf2(4): mov %rax,0x8(%r10)
7cf6(2): jmp 0xffffffbf(%rip)

"version_etc" :
7d00(1): push %rbp
7d01(1): push %rbx
7d02(6): mov $0x20,%r10d
7d08(3): xor %r11d,%r11d
7d0b(7): sub $0xb8,%rsp
7d12(9): mov $0x28,%rax
7d1b(5): mov %rax,0x78(%rsp)
7d20(2): xor %eax,%eax
7d22(8): lea 0xd0(%rsp),%rax
7d2a(8): mov %r8,0xa0(%rsp)
7d32(8): lea 0xd0(%rsp),%rbx
7d3a(5): lea 0x20(%rsp),%r8
7d3f(8): mov %r9,0xa8(%rsp)
7d47(8): mov $0x20,0x8(%rsp)
7d4f(5): mov %rax,0x10(%rsp)
7d54(8): lea 0x80(%rsp),%rax
7d5c(3): xor %r9d,%r9d
7d5f(5): mov %rax,0x18(%rsp)
7d64(3): mov %rax,%rbp
7d67(9): nop 0x0(%rax,%rax,1)
7d70(4): cmp $0x2f,%r10d
7d74(2): jnbe 0x58(%rip)
7d76(3): mov %r10d,%eax
7d79(6): mov $0x1,%r11d
7d7f(4): add $0x8,%r10d
7d83(3): add %rbp,%rax
7d86(3): mov (%rax),%rax
7d89(3): test %rax,%rax
7d8c(4): mov %rax,0x0(%r8,%r9,8)
7d90(2): jz 0xc(%rip)
7d92(4): add $0x1,%r9
7d96(4): cmp $0xa,%r9
7d9a(2): jnz 0xffffffd6(%rip)
7d9c(3): test %r11b,%r11b
7d9f(2): jnz 0x26(%rip)
7da1(5): call 0xfffffa9f(%rip)
7da6(5): mov 0x78(%rsp),%rax
7dab(9): xor $0x28,%rax
7db4(2): jnz 0xc(%rip)
7db6(7): add $0xb8,%rsp
7dbd(1): pop %rbx
7dbe(1): pop %rbp
7dbf(1): ret near (%rsp)
7dc0(5): call 0xffff9b20(%rip)
7dc5(5): mov %r10d,0x8(%rsp)
7dca(2): jmp 0xffffffd7(%rip)
7dcc(3): mov %rbx,%rax
7dcf(4): add $0x8,%rbx
7dd3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
7de0(1): push %rbx
7de1(7): lea 0x4fda(%rip),%rsi
7de8(5): mov $0x5,%edx
7ded(2): xor %edi,%edi
7def(5): call 0xffff9ac1(%rip)
7df4(7): lea 0x4fdc(%rip),%rdx
7dfb(3): mov %rax,%rsi
7dfe(5): mov $0x1,%edi
7e03(2): xor %eax,%eax
7e05(5): call 0xffff9c6b(%rip)
7e0a(7): lea 0x4fdc(%rip),%rsi
7e11(5): mov $0x5,%edx
7e16(2): xor %edi,%edi
7e18(5): call 0xffff9a98(%rip)
7e1d(7): lea 0x3fd4(%rip),%rcx
7e24(7): lea 0x300b(%rip),%rdx
7e2b(3): mov %rax,%rsi
7e2e(5): mov $0x1,%edi
7e33(2): xor %eax,%eax
7e35(5): call 0xffff9c3b(%rip)
7e3a(7): mov 0x208267(%rip),%rbx
7e41(7): lea 0x51d8(%rip),%rsi
7e48(2): xor %edi,%edi
7e4a(5): mov $0x5,%edx
7e4f(5): call 0xffff9a61(%rip)
7e54(3): mov %rbx,%rsi
7e57(3): mov %rax,%rdi
7e5a(1): pop %rbx
7e5b(5): jmp 0xffff9b55(%rip)

"xmalloc" :
7e60(1): push %rbx
7e61(3): mov %rdi,%rbx
7e64(5): call 0xffff9b8c(%rip)
7e69(3): test %rax,%rax
7e6c(2): jnz 0x7(%rip)
7e6e(3): test %rbx,%rbx
7e71(2): jnz 0x4(%rip)
7e73(1): pop %rbx
7e74(1): ret near (%rsp)
7e75(5): call 0x23b(%rip)

"xnmalloc" :
7e80(3): mov %rdi,%rax
7e83(3): mul %rax,%rsi,%rdx
7e86(3): mov %rax,%rdi
7e89(3): seto %al
7e8c(3): test %rdi,%rdi
7e8f(2): js 0xc(%rip)
7e91(3): movzx %al,%eax
7e94(3): test %rax,%rax
7e97(2): jnz 0x4(%rip)
7e99(2): jmp 0xffffffc7(%rip)
7e9b(4): sub $0x8,%rsp
7e9f(5): call 0x211(%rip)

"xrealloc" :
7ec0(3): test %rsi,%rsi
7ec3(1): push %rbx
7ec4(3): mov %rsi,%rbx
7ec7(2): jnz 0x7(%rip)
7ec9(3): test %rdi,%rdi
7ecc(2): jnz 0x1c(%rip)
7ece(3): mov %rbx,%rsi
7ed1(5): call 0xffff9b7f(%rip)
7ed6(3): test %rax,%rax
7ed9(2): jnz 0x7(%rip)
7edb(3): test %rbx,%rbx
7ede(2): jnz 0x13(%rip)
7ee0(1): pop %rbx
7ee1(1): ret near (%rsp)
7ee2(6): nop 0x0(%rax,%rax,1)
7ee8(5): call 0xffff98e8(%rip)
7eed(2): xor %eax,%eax
7eef(1): pop %rbx
7ef0(1): ret near (%rsp)
7ef1(5): call 0x1bf(%rip)

"xnrealloc" :
7f00(3): mov %rsi,%rax
7f03(3): mul %rax,%rdx,%rdx
7f06(3): mov %rax,%rsi
7f09(3): seto %al
7f0c(3): test %rsi,%rsi
7f0f(2): js 0xc(%rip)
7f11(3): movzx %al,%eax
7f14(3): test %rax,%rax
7f17(2): jnz 0x4(%rip)
7f19(2): jmp 0xffffffa7(%rip)
7f1b(4): sub $0x8,%rsp
7f1f(5): call 0x191(%rip)

"x2nrealloc" :
7f30(3): test %rdi,%rdi
7f33(3): mov %rdx,%r9
7f36(3): mov (%rsi),%rcx
7f39(2): jz 0x37(%rip)
7f3b(2): xor %edx,%edx
7f3d(a): mov $0x6148914691236517204,%rax
7f47(3): div %r9,%rax
7f4a(3): cmp %rcx,%rax
7f4d(2): jbe 0x3e(%rip)
7f4f(3): mov %rcx,%rax
7f52(3): shr $0x1,%rax
7f55(5): lea 0x1(%rax,%rcx,1),%rcx
7f5a(3): mov %rcx,(%rsi)
7f5d(4): imul %r9,%rcx
7f61(3): mov %rcx,%rsi
7f64(5): jmp 0xffffff5c(%rip)
7f69(7): nop 0x0(%rax)
7f70(3): test %rcx,%rcx
7f73(2): jz 0x25(%rip)
7f75(3): mov %rcx,%rax
7f78(3): mul %rax,%r9,%rdx
7f7b(3): seto %dl
7f7e(3): test %rax,%rax
7f81(3): movzx %dl,%edx
7f84(2): js 0x7(%rip)
7f86(3): test %rdx,%rdx
7f89(2): jz 0xffffffd1(%rip)
7f8b(4): sub $0x8,%rsp
7f8f(5): call 0x121(%rip)
7f94(4): nop 0x0(%rax)
7f98(2): xor %edx,%edx
7f9a(5): mov $0x80,%eax
7f9f(3): xor %r8d,%r8d
7fa2(3): div %r9,%rax
7fa5(3): test %rax,%rax
7fa8(4): setz %r8b
7fac(4): lea 0x0(%r8,%rax,1),%rcx
7fb0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
7fc0(3): test %rdi,%rdi
7fc3(3): mov (%rsi),%rax
7fc6(2): jz 0x2a(%rip)
7fc8(a): mov $0x6148914691236517203,%rdx
7fd2(3): cmp %rdx,%rax
7fd5(2): jnbe 0x2c(%rip)
7fd7(3): mov %rax,%rdx
7fda(3): shr $0x1,%rdx
7fdd(5): lea 0x1(%rdx,%rax,1),%rax
7fe2(3): mov %rax,(%rsi)
7fe5(3): mov %rax,%rsi
7fe8(5): jmp 0xfffffed8(%rip)
7fed(3): nop (%rax)
7ff0(3): test %rax,%rax
7ff3(5): mov $0x80,%edx
7ff8(4): cmove %rdx,%rax
7ffc(3): test %rax,%rax
7fff(2): jns 0xffffffe3(%rip)
8001(4): sub $0x8,%rsp
8005(5): call 0xab(%rip)

"xzalloc" :
8010(1): push %rbx
8011(3): mov %rdi,%rbx
8014(5): call 0xfffffe4c(%rip)
8019(3): mov %rbx,%rdx
801c(2): xor %esi,%esi
801e(3): mov %rax,%rdi
8021(1): pop %rbx
8022(5): jmp 0xffff995e(%rip)

"xcalloc" :
8030(3): mov %rdi,%rax
8033(4): sub $0x8,%rsp
8037(3): mul %rax,%rsi,%rdx
803a(3): seto %dl
803d(3): test %rax,%rax
8040(2): js 0x19(%rip)
8042(3): movzx %dl,%edx
8045(3): test %rdx,%rdx
8048(2): jnz 0x11(%rip)
804a(5): call 0xffff9976(%rip)
804f(3): test %rax,%rax
8052(2): jz 0x7(%rip)
8054(4): add $0x8,%rsp
8058(1): ret near (%rsp)
8059(5): call 0x57(%rip)

"xmemdup" :
8060(1): push %rbp
8061(1): push %rbx
8062(3): mov %rdi,%rbp
8065(3): mov %rsi,%rdi
8068(3): mov %rsi,%rbx
806b(4): sub $0x8,%rsp
806f(5): call 0xfffffdf1(%rip)
8074(4): add $0x8,%rsp
8078(3): mov %rbx,%rdx
807b(3): mov %rbp,%rsi
807e(1): pop %rbx
807f(1): pop %rbp
8080(3): mov %rax,%rdi
8083(5): jmp 0xffff994d(%rip)

"xstrdup" :
8090(1): push %rbx
8091(3): mov %rdi,%rbx
8094(5): call 0xffff983c(%rip)
8099(3): mov %rbx,%rdi
809c(4): lea 0x1(%rax),%rsi
80a0(1): pop %rbx
80a1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
80b0(7): lea 0x5018(%rip),%rsi
80b7(4): sub $0x8,%rsp
80bb(5): mov $0x5,%edx
80c0(2): xor %edi,%edi
80c2(5): call 0xffff97ee(%rip)
80c7(6): mov 0x207f5b(%rip),%edi
80cd(7): lea 0x470c(%rip),%rdx
80d4(3): mov %rax,%rcx
80d7(2): xor %esi,%esi
80d9(2): xor %eax,%eax
80db(5): call 0xffff99c5(%rip)
80e0(5): call 0xffff9700(%rip)

"xvprintf" :
80f0(1): push %rbp
80f1(1): push %rbx
80f2(4): sub $0x8,%rsp
80f6(5): call 0x9ba(%rip)
80fb(2): test %eax,%eax
80fd(2): mov %eax,%ebx
80ff(2): js 0x11(%rip)
8101(4): add $0x8,%rsp
8105(2): mov %ebx,%eax
8107(1): pop %rbx
8108(1): pop %rbp
8109(1): ret near (%rsp)
810a(6): nop 0x0(%rax,%rax,1)
8110(7): mov 0x207f91(%rip),%rdi
8117(5): call 0xffff9729(%rip)
811c(2): test %eax,%eax
811e(2): jnz 0xffffffe3(%rip)
8120(7): lea 0x4fb9(%rip),%rsi
8127(2): xor %edi,%edi
8129(5): mov $0x5,%edx
812e(5): call 0xffff9782(%rip)
8133(3): mov %rax,%rbp
8136(5): call 0xffff96ba(%rip)
813b(6): mov 0x207ee7(%rip),%edi
8141(2): mov (%rax),%esi
8143(3): mov %rbp,%rdx
8146(2): xor %eax,%eax
8148(5): call 0xffff9958(%rip)
814d(2): jmp 0xffffffb4(%rip)

"xprintf" :
8150(7): sub $0xd8,%rsp
8157(2): test %al,%al
8159(5): mov %rsi,0x28(%rsp)
815e(5): mov %rdx,0x30(%rsp)
8163(5): mov %rcx,0x38(%rsp)
8168(5): mov %r8,0x40(%rsp)
816d(5): mov %r9,0x48(%rsp)
8172(2): jz 0x39(%rip)
8174(5): movaps %xmm0,0x50(%rsp)
8179(5): movaps %xmm1,0x60(%rsp)
817e(5): movaps %xmm2,0x70(%rsp)
8183(8): movaps %xmm3,0x80(%rsp)
818b(8): movaps %xmm4,0x90(%rsp)
8193(8): movaps %xmm5,0xa0(%rsp)
819b(8): movaps %xmm6,0xb0(%rsp)
81a3(8): movaps %xmm7,0xc0(%rsp)
81ab(9): mov $0x28,%rax
81b4(5): mov %rax,0x18(%rsp)
81b9(2): xor %eax,%eax
81bb(8): lea 0xe0(%rsp),%rax
81c3(3): mov %rsp,%rsi
81c6(5): mov %rax,0x8(%rsp)
81cb(5): lea 0x20(%rsp),%rax
81d0(7): mov $0x8,(%rsp)
81d7(8): mov $0x30,0x4(%rsp)
81df(5): mov %rax,0x10(%rsp)
81e4(5): call 0xffffff0c(%rip)
81e9(5): mov 0x18(%rsp),%rdx
81ee(9): xor $0x28,%rdx
81f7(2): jnz 0xa(%rip)
81f9(7): add $0xd8,%rsp
8200(1): ret near (%rsp)
8201(5): call 0xffff96df(%rip)

"xvfprintf" :
8210(1): push %rbp
8211(1): push %rbx
8212(3): mov %rdi,%rbp
8215(4): sub $0x8,%rsp
8219(5): call 0x797(%rip)
821e(2): test %eax,%eax
8220(2): mov %eax,%ebx
8222(2): js 0xe(%rip)
8224(4): add $0x8,%rsp
8228(2): mov %ebx,%eax
822a(1): pop %rbx
822b(1): pop %rbp
822c(1): ret near (%rsp)
822d(3): nop (%rax)
8230(3): mov %rbp,%rdi
8233(5): call 0xffff960d(%rip)
8238(2): test %eax,%eax
823a(2): jnz 0xffffffea(%rip)
823c(7): lea 0x4e9d(%rip),%rsi
8243(2): xor %edi,%edi
8245(5): mov $0x5,%edx
824a(5): call 0xffff9666(%rip)
824f(3): mov %rax,%rbp
8252(5): call 0xffff959e(%rip)
8257(6): mov 0x207dcb(%rip),%edi
825d(2): mov (%rax),%esi
825f(3): mov %rbp,%rdx
8262(2): xor %eax,%eax
8264(5): call 0xffff983c(%rip)
8269(2): jmp 0xffffffbb(%rip)

"xfprintf" :
8270(7): sub $0xd8,%rsp
8277(2): test %al,%al
8279(5): mov %rdx,0x30(%rsp)
827e(5): mov %rcx,0x38(%rsp)
8283(5): mov %r8,0x40(%rsp)
8288(5): mov %r9,0x48(%rsp)
828d(2): jz 0x39(%rip)
828f(5): movaps %xmm0,0x50(%rsp)
8294(5): movaps %xmm1,0x60(%rsp)
8299(5): movaps %xmm2,0x70(%rsp)
829e(8): movaps %xmm3,0x80(%rsp)
82a6(8): movaps %xmm4,0x90(%rsp)
82ae(8): movaps %xmm5,0xa0(%rsp)
82b6(8): movaps %xmm6,0xb0(%rsp)
82be(8): movaps %xmm7,0xc0(%rsp)
82c6(9): mov $0x28,%rax
82cf(5): mov %rax,0x18(%rsp)
82d4(2): xor %eax,%eax
82d6(8): lea 0xe0(%rsp),%rax
82de(3): mov %rsp,%rdx
82e1(5): mov %rax,0x8(%rsp)
82e6(5): lea 0x20(%rsp),%rax
82eb(7): mov $0x10,(%rsp)
82f2(8): mov $0x30,0x4(%rsp)
82fa(5): mov %rax,0x10(%rsp)
82ff(5): call 0xffffff11(%rip)
8304(5): mov 0x18(%rsp),%rcx
8309(9): xor $0x28,%rcx
8312(2): jnz 0xa(%rip)
8314(7): add $0xd8,%rsp
831b(1): ret near (%rsp)
831c(5): call 0xffff95c4(%rip)

"xstrtol_fatal" :
8330(2): push %r13
8332(2): push %r12
8334(3): mov %esi,%r10d
8337(1): push %rbp
8338(1): push %rbx
8339(3): mov %r8,%r12
833c(4): sub $0x18,%rsp
8340(9): mov $0x28,%rax
8349(5): mov %rax,0x8(%rsp)
834e(2): xor %eax,%eax
8350(3): cmp $0x3,%edi
8353(6): mov 0x207ccf(%rip),%ebp
8359(2): jnbe 0x5b(%rip)
835b(3): cmp $0x2,%edi
835e(2): jnb 0x4d(%rip)
8360(3): sub $0x1,%edi
8363(7): lea 0x4db1(%rip),%rsi
836a(2): jnz 0x3c(%rip)
836c(3): test %r10d,%r10d
836f(3): movsxd %r10d,%rax
8372(2): js 0x50(%rip)
8374(4): shl/sal $0x5,%rax
8378(7): lea 0x4db9(%rip),%rbx
837f(4): mov 0x0(%rcx,%rax,1),%r13
8383(5): mov $0x5,%edx
8388(2): xor %edi,%edi
838a(5): call 0xffff9526(%rip)
838f(3): mov %r12,%r9
8392(3): mov %rax,%rdx
8395(3): mov %r13,%r8
8398(3): mov %rbx,%rcx
839b(2): xor %esi,%esi
839d(2): mov %ebp,%edi
839f(2): xor %eax,%eax
83a1(5): call 0xffff96ff(%rip)
83a6(5): call 0xffff943a(%rip)
83ab(7): lea 0x4d8e(%rip),%rsi
83b2(2): jmp 0xffffffba(%rip)
83b4(3): cmp $0x4,%edi
83b7(7): lea 0x4d42(%rip),%rsi
83be(2): jz 0xffffffae(%rip)
83c0(2): jmp 0xffffffe6(%rip)
83c2(7): lea 0x4d6f(%rip),%rbx
83c9(4): mov %dl,0x6(%rsp)
83cd(5): mov $0x0,0x7(%rsp)
83d2(5): lea 0x6(%rsp),%r13
83d7(3): sub %rax,%rbx
83da(2): jmp 0xffffffa9(%rip)

"xstrtoumax" :
83e0(2): push %r15
83e2(2): push %r14
83e4(2): push %r13
83e6(2): push %r12
83e8(1): push %rbp
83e9(1): push %rbx
83ea(4): sub $0x28,%rsp
83ee(9): mov $0x28,%rax
83f7(5): mov %rax,0x18(%rsp)
83fc(2): xor %eax,%eax
83fe(3): cmp $0x24,%edx
8401(6): jnbe 0x364(%rip)
8407(5): lea 0x10(%rsp),%rax
840c(3): mov %rsi,%r15
840f(3): test %rsi,%rsi
8412(3): mov %rdi,%rbp
8415(4): mov %edx,0x8(%rsp)
8419(3): mov %rcx,%r14
841c(3): mov %r8,%r13
841f(4): cmove %rax,%r15
8423(5): call 0xffff93cd(%rip)
8428(6): mov $0x0,(%rax)
842e(3): mov %rax,%r12
8431(4): movzx 0x0(%rbp),%ebx
8435(5): call 0xffff970b(%rip)
843a(4): mov 0x8(%rsp),%edx
843e(3): mov (%rax),%rsi
8441(3): mov %rbp,%rax
8444(2): jmp 0x13(%rip)
8446(a): nop 0x0(%rax,%rax,1)
8450(4): add $0x1,%rax
8454(3): movzx (%rax),%ebx
8457(3): movzx %bl,%ecx
845a(5): test $0x20,0x1(%rsi,%rcx,2)
845f(2): jnz 0xfffffff1(%rip)
8461(3): cmp $0x2d,%bl
8464(2): jz 0x54(%rip)
8466(2): xor %ecx,%ecx
8468(3): mov %r15,%rsi
846b(3): mov %rbp,%rdi
846e(5): call 0xffff94f2(%rip)
8473(3): mov (%r15),%rcx
8476(3): mov %rax,%rbx
8479(3): cmp %rbp,%rcx
847c(2): jz 0x2c(%rip)
847e(4): mov (%r12),%eax
8482(2): test %eax,%eax
8484(2): jz 0x64(%rip)
8486(3): cmp $0x22,%eax
8489(5): mov $0x1,%ebp
848e(2): jnz 0x2a(%rip)
8490(3): test %r13,%r13
8493(2): jz 0xb(%rip)
8495(4): movzx (%rcx),%r12d
8499(3): test %r12b,%r12b
849c(2): jnz 0x7b(%rip)
849e(3): mov %rbx,(%r14)
84a1(2): jmp 0x1c(%rip)
84a3(5): nop 0x0(%rax,%rax,1)
84a8(3): test %r13,%r13
84ab(5): mov %rcx,0x8(%rsp)
84b0(2): jnz 0x40(%rip)
84b2(6): nop 0x0(%rax,%rax,1)
84b8(5): mov $0x4,%ebp
84bd(5): mov 0x18(%rsp),%rdi
84c2(9): xor $0x28,%rdi
84cb(2): mov %ebp,%eax
84cd(6): jnz 0x293(%rip)
84d3(4): add $0x28,%rsp
84d7(1): pop %rbx
84d8(1): pop %rbp
84d9(2): pop %r12
84db(2): pop %r13
84dd(2): pop %r14
84df(2): pop %r15
84e1(1): ret near (%rsp)
84e2(6): nop 0x0(%rax,%rax,1)
84e8(2): xor %ebp,%ebp
84ea(2): jmp 0xffffffa6(%rip)
84ec(4): nop 0x0(%rax)
84f0(5): movzx 0x0(%rbp),%r12d
84f5(3): test %r12b,%r12b
84f8(2): jz 0xffffffc0(%rip)
84fa(4): movsx %r12b,%esi
84fe(3): mov %r13,%rdi
8501(2): xor %ebp,%ebp
8503(5): call 0xffff940d(%rip)
8508(3): test %rax,%rax
850b(5): mov $0x1,%ebx
8510(5): mov 0x8(%rsp),%rcx
8515(2): jz 0xffffffa3(%rip)
8517(4): movsx %r12b,%esi
851b(3): mov %r13,%rdi
851e(5): mov %rcx,0x8(%rsp)
8523(5): call 0xffff93ed(%rip)
8528(3): test %rax,%rax
852b(5): mov 0x8(%rsp),%rcx
8530(6): jz 0xcc(%rip)
8536(5): lea 0xffffffbb(%r12),%eax
853b(2): cmp $0x2f,%al
853d(2): jnbe 0x53(%rip)
853f(a): mov $0x142129060940101,%rdx
8549(4): bt %rax,%rdx
854d(2): jnb 0x43(%rip)
854f(5): mov $0x30,%esi
8554(3): mov %r13,%rdi
8557(5): mov %rcx,0x8(%rsp)
855c(5): call 0xffff93b4(%rip)
8561(3): test %rax,%rax
8564(5): mov 0x8(%rsp),%rcx
8569(2): jz 0x27(%rip)
856b(4): movzx 0x1(%rcx),%eax
856f(2): cmp $0x44,%al
8571(2): jz 0xe(%rip)
8573(2): cmp $0x69,%al
8575(6): jz 0x1d3(%rip)
857b(2): cmp $0x42,%al
857d(2): jnz 0x13(%rip)
857f(5): mov $0x2,%edi
8584(5): mov $0x3e8,%esi
8589(2): jmp 0x11(%rip)
858b(5): nop 0x0(%rax,%rax,1)
8590(5): mov $0x1,%edi
8595(5): mov $0x400,%esi
859a(4): sub $0x42,%r12d
859e(4): cmp $0x35,%r12b
85a2(2): jnbe 0x5a(%rip)
85a4(7): lea 0x4c05(%rip),%rdx
85ab(4): movzx %r12b,%r12d
85af(4): movsxd 0x0(%rdx,%r12,4),%rax
85b3(3): add %rdx,%rax
85b6(2): jmp %rax
85b8(3): mov %rbx,%rax
85bb(3): mul %rax,%rsi,%rdx
85be(6): jo 0x1f3(%rip)
85c4(3): xor %r8d,%r8d
85c7(3): mul %rax,%rsi,%rdx
85ca(6): jo 0x1d8(%rip)
85d0(3): mov %rax,%rbx
85d3(3): or %r8d,%ebp
85d6(a): nop 0x0(%rax,%rax,1)
85e0(3): movsxd %edi,%rdi
85e3(2): mov %ebp,%eax
85e5(3): add %rdi,%rcx
85e8(3): or $0x2,%eax
85eb(3): mov %rcx,(%r15)
85ee(3): cmp $0x0,(%rcx)
85f1(3): mov %rbx,(%r14)
85f4(3): cmovne %eax,%ebp
85f7(5): jmp 0xfffffec6(%rip)
85fc(3): mov %rbx,(%r14)
85ff(3): or $0x2,%ebp
8602(5): jmp 0xfffffebb(%rip)
8607(5): mov $0x2,%edx
860c(3): mov %rdx,%rax
860f(3): mul %rax,%rbx,%rdx
8612(6): jo 0x9c(%rip)
8618(3): add %rbx,%rbx
861b(2): jmp 0xffffffc5(%rip)
861d(5): mov $0x200,%edx
8622(3): mov %rdx,%rax
8625(3): mul %rax,%rbx,%rdx
8628(6): jo 0x86(%rip)
862e(4): shl/sal $0x9,%rbx
8632(2): jmp 0xffffffae(%rip)
8634(6): mov $0x7,%r8d
863a(3): xor %r9d,%r9d
863d(3): nop (%rax)
8640(3): mov %rbx,%rax
8643(3): mul %rax,%rsi,%rdx
8646(3): mov %rax,%rbx
8649(6): jo 0x195(%rip)
864f(4): sub $0x1,%r8d
8653(2): jnz 0xffffffed(%rip)
8655(3): or %r9d,%ebp
8658(2): jmp 0xffffff88(%rip)
865a(6): mov $0x8,%r8d
8660(3): xor %r9d,%r9d
8663(5): nop 0x0(%rax,%rax,1)
8668(3): mov %rbx,%rax
866b(3): mul %rax,%rsi,%rdx
866e(3): mov %rax,%rbx
8671(6): jo 0x14f(%rip)
8677(4): sub $0x1,%r8d
867b(2): jnz 0xffffffed(%rip)
867d(2): jmp 0xffffffd8(%rip)
867f(6): mov $0x4,%r8d
8685(3): xor %r9d,%r9d
8688(3): mov %rbx,%rax
868b(3): mul %rax,%rsi,%rdx
868e(3): mov %rax,%rbx
8691(6): jo 0x102(%rip)
8697(4): sub $0x1,%r8d
869b(2): jnz 0xffffffed(%rip)
869d(2): jmp 0xffffffb8(%rip)
869f(3): mov %rbx,%rax
86a2(3): mul %rax,%rsi,%rdx
86a5(3): mov %rax,%rbx
86a8(6): jno 0xffffff38(%rip)
86ae(5): mov $0x1,%ebp
86b3(4): or $0xffffffff,%rbx
86b7(5): jmp 0xffffff29(%rip)
86bc(4): nop 0x0(%rax)
86c0(6): mov $0x5,%r8d
86c6(3): xor %r9d,%r9d
86c9(3): mov %rbx,%rax
86cc(3): mul %rax,%rsi,%rdx
86cf(3): mov %rax,%rbx
86d2(6): jo 0xfd(%rip)
86d8(4): sub $0x1,%r8d
86dc(2): jnz 0xffffffed(%rip)
86de(5): jmp 0xffffff77(%rip)
86e3(6): mov $0x6,%r8d
86e9(3): xor %r9d,%r9d
86ec(3): mov %rbx,%rax
86ef(3): mul %rax,%rsi,%rdx
86f2(3): mov %rax,%rbx
86f5(6): jo 0x8f(%rip)
86fb(4): sub $0x1,%r8d
86ff(2): jnz 0xffffffed(%rip)
8701(5): jmp 0xffffff54(%rip)
8706(5): mov $0x400,%edx
870b(3): mov %rdx,%rax
870e(3): mul %rax,%rbx,%rdx
8711(2): jo 0xffffff9d(%rip)
8713(4): shl/sal $0xa,%rbx
8717(5): jmp 0xfffffec9(%rip)
871c(3): mov %rbx,%rax
871f(3): mul %rax,%rsi,%rdx
8722(6): jo 0xcb(%rip)
8728(3): xor %r8d,%r8d
872b(3): mul %rax,%rsi,%rdx
872e(6): jno 0xfffffe99(%rip)
8734(6): mov $0x1,%r8d
873a(4): or $0xffffffff,%rax
873e(5): jmp 0xfffffe89(%rip)
8743(5): nop 0x0(%rax,%rax,1)
8748(2): xor %edi,%edi
874a(4): cmp $0x42,0x2(%rcx)
874e(5): mov $0x400,%esi
8753(4): setz %dil
8757(4): lea 0x1(%rdi,%rdi,1),%edi
875b(5): jmp 0xfffffe3f(%rip)
8760(5): call 0xffff9180(%rip)
8765(7): lea 0x4b1c(%rip),%rcx
876c(7): lea 0x49f5(%rip),%rsi
8773(7): lea 0x4a0e(%rip),%rdi
877a(5): mov $0x54,%edx
877f(5): call 0xffff91d1(%rip)
8784(6): mov $0x1,%r9d
878a(4): or $0xffffffff,%rbx
878e(5): jmp 0xffffff6d(%rip)
8793(6): mov $0x1,%r9d
8799(4): or $0xffffffff,%rbx
879d(5): jmp 0xfffffefa(%rip)
87a2(6): mov $0x1,%r8d
87a8(4): or $0xffffffff,%rbx
87ac(5): jmp 0xfffffe27(%rip)
87b1(4): or $0xffffffff,%rax
87b5(6): mov $0x1,%r8d
87bb(5): jmp 0xfffffe0c(%rip)
87c0(6): mov $0x1,%r9d
87c6(4): or $0xffffffff,%rbx
87ca(5): jmp 0xfffffead(%rip)
87cf(6): mov $0x1,%r9d
87d5(4): or $0xffffffff,%rbx
87d9(5): jmp 0xfffffeff(%rip)
87de(6): mov $0x1,%r9d
87e4(4): or $0xffffffff,%rbx
87e8(5): jmp 0xfffffe67(%rip)
87ed(6): mov $0x1,%r8d
87f3(4): or $0xffffffff,%rax
87f7(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
8800(2): push %r12
8802(1): push %rbp
8803(1): push %rbx
8804(3): mov %rdi,%rbx
8807(5): call 0xffff91d9(%rip)
880c(2): test %eax,%eax
880e(3): mov %rbx,%rdi
8811(2): js 0x56(%rip)
8813(5): call 0xffff921d(%rip)
8818(2): test %eax,%eax
881a(2): jnz 0x2e(%rip)
881c(3): mov %rbx,%rdi
881f(5): call 0x61(%rip)
8824(2): test %eax,%eax
8826(2): jz 0x3e(%rip)
8828(5): call 0xffff8fc8(%rip)
882d(3): mov (%rax),%r12d
8830(3): mov %rbx,%rdi
8833(3): mov %rax,%rbp
8836(5): call 0xffff905a(%rip)
883b(3): test %r12d,%r12d
883e(2): jnz 0x32(%rip)
8840(1): pop %rbx
8841(1): pop %rbp
8842(2): pop %r12
8844(1): ret near (%rsp)
8845(3): nop (%rax)
8848(3): mov %rbx,%rdi
884b(5): call 0xffff9195(%rip)
8850(2): xor %esi,%esi
8852(5): mov $0x1,%edx
8857(2): mov %eax,%edi
8859(5): call 0xffff90e7(%rip)
885e(4): cmp $0xffffffff,%rax
8862(2): jnz 0xffffffba(%rip)
8864(3): mov %rbx,%rdi
8867(1): pop %rbx
8868(1): pop %rbp
8869(2): pop %r12
886b(5): jmp 0xffff9025(%rip)
8870(4): mov %r12d,0x0(%rbp)
8874(5): mov $0xffffffff,%eax
8879(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
8880(3): test %rdi,%rdi
8883(1): push %rbx
8884(3): mov %rdi,%rbx
8887(2): jz 0x13(%rip)
8889(5): call 0xffff91a7(%rip)
888e(2): test %eax,%eax
8890(2): jz 0xa(%rip)
8892(6): test $0x100,(%rbx)
8898(2): jnz 0x10(%rip)
889a(3): mov %rbx,%rdi
889d(1): pop %rbx
889e(5): jmp 0xffff9162(%rip)
88a3(5): nop 0x0(%rax,%rax,1)
88a8(3): mov %rbx,%rdi
88ab(5): mov $0x1,%edx
88b0(2): xor %esi,%esi
88b2(5): call 0xe(%rip)
88b7(3): mov %rbx,%rdi
88ba(1): pop %rbx
88bb(5): jmp 0xffff9145(%rip)

"rpl_fseeko" :
88c0(4): mov 0x8(%rdi),%rax
88c4(4): cmp %rax,0x10(%rdi)
88c8(2): jz 0x8(%rip)
88ca(5): jmp 0xffff91e6(%rip)
88cf(1): nop 
88d0(4): mov 0x20(%rdi),%rax
88d4(4): cmp %rax,0x28(%rdi)
88d8(2): jnz 0xfffffff2(%rip)
88da(5): cmp $0x0,0x48(%rdi)
88df(2): jnz 0xffffffeb(%rip)
88e1(2): push %r12
88e3(1): push %rbp
88e4(3): mov %edx,%r12d
88e7(1): push %rbx
88e8(3): mov %rsi,%rbp
88eb(3): mov %rdi,%rbx
88ee(5): call 0xffff90f2(%rip)
88f3(3): mov %r12d,%edx
88f6(3): mov %rbp,%rsi
88f9(2): mov %eax,%edi
88fb(5): call 0xffff9045(%rip)
8900(4): cmp $0xffffffff,%rax
8904(2): jz 0xe(%rip)
8906(3): and $0xef,(%rbx)
8909(7): mov %rax,0x90(%rbx)
8910(2): xor %eax,%eax
8912(1): pop %rbx
8913(1): pop %rbp
8914(2): pop %r12
8916(1): ret near (%rsp)

"rpl_mbrtowc" :
8920(2): push %r13
8922(2): push %r12
8924(3): mov %rsi,%r13
8927(1): push %rbp
8928(1): push %rbx
8929(3): mov %rdi,%rbx
892c(3): mov %rdx,%r12
892f(4): sub $0x18,%rsp
8933(9): mov $0x28,%rax
893c(5): mov %rax,0x8(%rsp)
8941(2): xor %eax,%eax
8943(5): lea 0x4(%rsp),%rax
8948(3): test %rdi,%rdi
894b(4): cmove %rax,%rbx
894f(3): mov %rbx,%rdi
8952(5): call 0xffff8fae(%rip)
8957(4): cmp $0xfffffffd,%rax
895b(3): mov %rax,%rbp
895e(2): jbe 0x22(%rip)
8960(3): test %r12,%r12
8963(2): jz 0x1d(%rip)
8965(2): xor %edi,%edi
8967(5): call 0x1e9(%rip)
896c(2): test %al,%al
896e(2): jnz 0x12(%rip)
8970(5): movzx 0x0(%r13),%eax
8975(5): mov $0x1,%ebp
897a(2): mov %eax,(%rbx)
897c(4): nop 0x0(%rax)
8980(5): mov 0x8(%rsp),%rdx
8985(9): xor $0x28,%rdx
898e(3): mov %rbp,%rax
8991(2): jnz 0xd(%rip)
8993(4): add $0x18,%rsp
8997(1): pop %rbx
8998(1): pop %rbp
8999(2): pop %r12
899b(2): pop %r13
899d(1): ret near (%rsp)
899e(5): call 0xffff8f42(%rip)

"rpl_vfprintf" :
89b0(2): push %r13
89b2(2): push %r12
89b4(3): mov %rsi,%rax
89b7(1): push %rbp
89b8(1): push %rbx
89b9(3): mov %rdi,%r13
89bc(7): sub $0x7f8,%rsp
89c3(5): lea 0x10(%rsp),%r12
89c8(5): lea 0x8(%rsp),%rsi
89cd(9): mov $0x7d0,0x8(%rsp)
89d6(9): mov $0x28,%rcx
89df(8): mov %rcx,0x7e8(%rsp)
89e7(2): xor %ecx,%ecx
89e9(3): mov %r12,%rdi
89ec(3): mov %rdx,%rcx
89ef(3): mov %rax,%rdx
89f2(5): call 0x20e(%rip)
89f7(3): test %rax,%rax
89fa(5): mov 0x8(%rsp),%rbx
89ff(6): jz 0x8f(%rip)
8a05(3): mov %r13,%rcx
8a08(3): mov %rbx,%rdx
8a0b(5): mov $0x1,%esi
8a10(3): mov %rax,%rdi
8a13(3): mov %rax,%rbp
8a16(5): call 0xffff90ea(%rip)
8a1b(3): cmp %rbx,%rax
8a1e(2): jb 0x42(%rip)
8a20(3): cmp %r12,%rbp
8a23(2): jz 0xa(%rip)
8a25(3): mov %rbp,%rdi
8a28(5): call 0xffff8da8(%rip)
8a2d(7): cmp $0x7fffffff,%rbx
8a34(2): jnbe 0x4f(%rip)
8a36(8): mov 0x7e8(%rsp),%rcx
8a3e(9): xor $0x28,%rcx
8a47(2): mov %ebx,%eax
8a49(2): jnz 0x54(%rip)
8a4b(7): add $0x7f8,%rsp
8a52(1): pop %rbx
8a53(1): pop %rbp
8a54(2): pop %r12
8a56(2): pop %r13
8a58(1): ret near (%rsp)
8a59(7): nop 0x0(%rax)
8a60(3): cmp %r12,%rbp
8a63(5): mov $0xffffffff,%ebx
8a68(2): jz 0xffffffce(%rip)
8a6a(5): call 0xffff8d86(%rip)
8a6f(3): mov (%rax),%r13d
8a72(3): mov %rax,%r12
8a75(3): mov %rbp,%rdi
8a78(5): call 0xffff8d58(%rip)
8a7d(4): mov %r13d,(%r12)
8a81(2): jmp 0xffffffb5(%rip)
8a83(5): call 0xffff8d6d(%rip)
8a88(6): mov $0x4b,(%rax)
8a8e(3): mov %r13,%rdi
8a91(5): mov $0xffffffff,%ebx
8a96(5): call 0x15a(%rip)
8a9b(2): jmp 0xffffff9b(%rip)
8a9d(5): call 0xffff8e43(%rip)

"rpl_vprintf" :
8ab0(3): mov %rsi,%rdx
8ab3(3): mov %rdi,%rsi
8ab6(7): mov 0x2075eb(%rip),%rdi
8abd(5): jmp 0xfffffef3(%rip)

"close_stream" :
8ad0(2): push %r12
8ad2(1): push %rbp
8ad3(3): mov %rdi,%rbp
8ad6(1): push %rbx
8ad7(5): call 0xffff8d49(%rip)
8adc(3): mov 0x0(%rbp),%ebx
8adf(3): mov %rbp,%rdi
8ae2(3): mov %rax,%r12
8ae5(5): call 0xfffffd1b(%rip)
8aea(3): and $0x20,%ebx
8aed(2): test %ebx,%ebx
8aef(2): jnz 0x19(%rip)
8af1(2): test %eax,%eax
8af3(2): jz 0xc(%rip)
8af5(3): test %r12,%r12
8af8(5): mov $0xffffffff,%eax
8afd(2): jz 0x3b(%rip)
8aff(1): pop %rbx
8b00(1): pop %rbp
8b01(2): pop %r12
8b03(1): ret near (%rsp)
8b04(4): nop 0x0(%rax)
8b08(2): test %eax,%eax
8b0a(2): jnz 0x1e(%rip)
8b0c(5): call 0xffff8ce4(%rip)
8b11(6): mov $0x0,(%rax)
8b17(5): mov $0xffffffff,%eax
8b1c(1): pop %rbx
8b1d(1): pop %rbp
8b1e(2): pop %r12
8b20(1): ret near (%rsp)
8b21(7): nop 0x0(%rax)
8b28(1): pop %rbx
8b29(5): mov $0xffffffff,%eax
8b2e(1): pop %rbp
8b2f(2): pop %r12
8b31(1): ret near (%rsp)
8b32(6): nop 0x0(%rax,%rax,1)
8b38(5): call 0xffff8cb8(%rip)
8b3d(3): cmp $0x9,(%rax)
8b40(1): pop %rbx
8b41(1): pop %rbp
8b42(2): pop %r12
8b44(3): setnz %al
8b47(3): movzx %al,%eax
8b4a(2): neg %eax
8b4c(1): ret near (%rsp)

"hard_locale" :
8b50(4): sub $0x8,%rsp
8b54(2): xor %esi,%esi
8b56(5): call 0xffff8f0a(%rip)
8b5b(3): mov %rax,%rdx
8b5e(5): mov $0x1,%eax
8b63(3): test %rdx,%rdx
8b66(2): jz 0x1f(%rip)
8b68(7): lea 0x4724(%rip),%rdi
8b6f(5): mov $0x2,%ecx
8b74(3): mov %rdx,%rsi
8b77(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8b79(3): setnbe %cl
8b7c(3): sbb $0x0,%cl
8b7f(2): xor %eax,%eax
8b81(2): test %cl,%cl
8b83(2): jnz 0xd(%rip)
8b85(4): add $0x8,%rsp
8b89(1): ret near (%rsp)
8b8a(6): nop 0x0(%rax,%rax,1)
8b90(7): lea 0x46fe(%rip),%rdi
8b97(5): mov $0x6,%ecx
8b9c(3): mov %rdx,%rsi
8b9f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8ba1(3): setnbe %al
8ba4(2): sbb $0x0,%al
8ba6(2): test %al,%al
8ba8(3): setnz %al
8bab(4): add $0x8,%rsp
8baf(1): ret near (%rsp)

"locale_charset" :
8bb0(4): sub $0x8,%rsp
8bb4(5): mov $0xe,%edi
8bb9(5): call 0xffff8e57(%rip)
8bbe(3): test %rax,%rax
8bc1(2): jz 0x1f(%rip)
8bc3(3): cmp $0x0,(%rax)
8bc6(7): lea 0x46ce(%rip),%rdx
8bcd(4): cmove %rdx,%rax
8bd1(4): add $0x8,%rsp
8bd5(1): ret near (%rsp)
8bd6(a): nop 0x0(%rax,%rax,1)
8be0(7): lea 0x46b4(%rip),%rax
8be7(4): add $0x8,%rsp
8beb(1): ret near (%rsp)

"fseterr" :
8bf0(3): or $0x20,(%rdi)
8bf3(1): ret near (%rsp)

"vasnprintf" :
8c00(1): push %rbp
8c01(3): mov %rsp,%rbp
8c04(2): push %r15
8c06(2): push %r14
8c08(2): push %r13
8c0a(2): push %r12
8c0c(7): lea 0xfffffc50(%rbp),%r14
8c13(1): push %rbx
8c14(3): mov %rdx,%rbx
8c17(3): mov %rcx,%r12
8c1a(3): mov %r14,%rdx
8c1d(7): sub $0x408,%rsp
8c24(7): mov %rsi,0xfffffbe8(%rbp)
8c2b(7): lea 0xfffffd40(%rbp),%rsi
8c32(7): mov %rdi,0xfffffc18(%rbp)
8c39(3): mov %rbx,%rdi
8c3c(7): mov %r14,0xfffffbf0(%rbp)
8c43(9): mov $0x28,%rax
8c4c(4): mov %rax,0xffffffc8(%rbp)
8c50(2): xor %eax,%eax
8c52(7): mov %rsi,0xfffffbf8(%rbp)
8c59(5): call 0x12c7(%rip)
8c5e(2): test %eax,%eax
8c60(6): js 0xe68(%rip)
8c66(3): mov %r14,%rsi
8c69(3): mov %r12,%rdi
8c6c(5): call 0x10b4(%rip)
8c71(2): test %eax,%eax
8c73(6): js 0xebd(%rip)
8c79(7): mov 0xfffffd50(%rbp),%rax
8c80(7): mov $0xffffffff,%rdx
8c87(4): add $0x7,%rax
8c8b(4): cmp $0x6,%rax
8c8f(4): cmovbe %rdx,%rax
8c93(7): add 0xfffffd58(%rbp),%rax
8c9a(6): jb 0xa2e(%rip)
8ca0(3): mov %rax,%rdi
8ca3(3): xor %r8d,%r8d
8ca6(4): add $0x6,%rdi
8caa(4): setb %r8b
8cae(6): jb 0xa1a(%rip)
8cb4(7): cmp $0xf9f,%rdi
8cbb(6): jbe 0x14d(%rip)
8cc1(4): cmp $0xffffffff,%rdi
8cc5(7): mov %r8,0xfffffc38(%rbp)
8ccc(6): jz 0x9fc(%rip)
8cd2(5): call 0xffff8d1e(%rip)
8cd7(3): test %rax,%rax
8cda(7): mov %rax,0xfffffc28(%rbp)
8ce1(6): jz 0x9e7(%rip)
8ce7(7): mov 0xfffffc38(%rbp),%r8
8cee(7): mov %rax,0xfffffbe0(%rbp)
8cf5(3): xor %r12d,%r12d
8cf8(8): cmp $0x0,0xfffffc18(%rbp)
8d00(2): jz 0xc(%rip)
8d02(7): mov 0xfffffbe8(%rbp),%rax
8d09(3): mov (%rax),%r12
8d0c(7): mov 0xfffffd48(%rbp),%r13
8d13(7): lea 0xfffffc44(%rbp),%rax
8d1a(7): mov 0xfffffc18(%rbp),%r15
8d21(b): mov $0x0,0xfffffc00(%rbp)
8d2c(7): mov %rax,0xfffffc10(%rbp)
8d33(3): mov %rbx,%rax
8d36(3): mov %r8,%rbx
8d39(4): mov 0x0(%r13),%rcx
8d3d(3): mov %rax,%r8
8d40(3): cmp %r8,%rcx
8d43(6): jz 0x96e(%rip)
8d49(3): sub %r8,%rcx
8d4c(3): mov %rbx,%rax
8d4f(3): add %rcx,%rax
8d52(3): mov %rax,%r14
8d55(6): jnb 0xe3(%rip)
8d5b(4): cmp $0xffffffff,%r12
8d5f(6): jz 0xad1(%rip)
8d65(5): call 0xffff8a8b(%rip)
8d6a(7): mov %rax,0xfffffc38(%rbp)
8d71(7): cmp 0xfffffc18(%rbp),%r15
8d78(2): jz 0xb(%rip)
8d7a(3): test %r15,%r15
8d7d(6): jnz 0xae3(%rip)
8d83(7): mov 0xfffffbe0(%rbp),%rax
8d8a(3): test %rax,%rax
8d8d(2): jz 0xa(%rip)
8d8f(3): mov %rax,%rdi
8d92(5): call 0xffff8a3e(%rip)
8d97(7): mov 0xfffffbf8(%rbp),%rax
8d9e(7): mov 0xfffffd48(%rbp),%rdi
8da5(4): add $0x20,%rax
8da9(3): cmp %rax,%rdi
8dac(2): jz 0x7(%rip)
8dae(5): call 0xffff8a22(%rip)
8db3(7): mov 0xfffffbf0(%rbp),%rax
8dba(7): mov 0xfffffc58(%rbp),%rdi
8dc1(4): add $0x10,%rax
8dc5(3): cmp %rax,%rdi
8dc8(2): jz 0x7(%rip)
8dca(5): call 0xffff8a06(%rip)
8dcf(7): mov 0xfffffc38(%rbp),%rax
8dd6(3): xor %r15d,%r15d
8dd9(6): mov $0xc,(%rax)
8ddf(4): mov 0xffffffc8(%rbp),%rdi
8de3(9): xor $0x28,%rdi
8dec(3): mov %r15,%rax
8def(6): jnz 0xf08(%rip)
8df5(4): lea 0xffffffd8(%rbp),%rsp
8df9(1): pop %rbx
8dfa(2): pop %r12
8dfc(2): pop %r13
8dfe(2): pop %r14
8e00(2): pop %r15
8e02(1): pop %rbp
8e03(1): ret near (%rsp)
8e04(4): nop 0x0(%rax)
8e08(4): add $0x24,%rax
8e0c(b): mov $0x0,0xfffffbe0(%rbp)
8e17(4): and $0xfffffff0,%rax
8e1b(3): sub %rax,%rsp
8e1e(5): lea 0xf(%rsp),%rax
8e23(4): and $0xfffffff0,%rax
8e27(7): mov %rax,0xfffffc28(%rbp)
8e2e(5): jmp 0xfffffec7(%rip)
8e33(5): nop 0x0(%rax,%rax,1)
8e38(3): cmp %rax,%r12
8e3b(2): jnb 0x69(%rip)
8e3d(3): test %r12,%r12
8e40(6): jnz 0x930(%rip)
8e46(4): cmp $0xc,%rax
8e4a(6): jnbe 0x938(%rip)
8e50(6): mov $0xc,%r12d
8e56(7): cmp 0xfffffc18(%rbp),%r15
8e5d(3): setz %dl
8e60(3): test %r15,%r15
8e63(6): jz 0x945(%rip)
8e69(2): test %dl,%dl
8e6b(6): jnz 0x93d(%rip)
8e71(3): mov %r12,%rsi
8e74(3): mov %r15,%rdi
8e77(7): mov %r8,0xfffffc30(%rbp)
8e7e(7): mov %rcx,0xfffffc38(%rbp)
8e85(5): call 0xffff8bcb(%rip)
8e8a(3): test %rax,%rax
8e8d(7): mov 0xfffffc38(%rbp),%rcx
8e94(7): mov 0xfffffc30(%rbp),%r8
8e9b(6): jz 0x9b0(%rip)
8ea1(3): mov %rax,%r15
8ea4(4): lea 0x0(%r15,%rbx,1),%rdi
8ea8(3): mov %rcx,%rdx
8eab(3): mov %r8,%rsi
8eae(5): call 0xffff8b22(%rip)
8eb3(7): mov 0xfffffc00(%rbp),%rax
8eba(7): cmp %rax,0xfffffd40(%rbp)
8ec1(6): jz 0xcba(%rip)
8ec7(5): movzx 0x48(%r13),%edx
8ecc(4): mov 0x50(%r13),%rax
8ed0(3): cmp $0x25,%dl
8ed3(6): jz 0x795(%rip)
8ed9(4): cmp $0xffffffff,%rax
8edd(6): jz 0xc49(%rip)
8ee3(7): mov 0xfffffc58(%rbp),%r8
8eea(4): shl/sal $0x5,%rax
8eee(3): add %r8,%rax
8ef1(3): cmp $0x6e,%dl
8ef4(2): mov (%rax),%edi
8ef6(6): mov %edi,0xfffffc30(%rbp)
8efc(6): jz 0x7e4(%rip)
8f02(4): mov 0x10(%r13),%eax
8f06(7): mov 0xfffffc28(%rbp),%rdi
8f0d(2): test $0x1,%al
8f0f(3): mov $0x25,(%rdi)
8f12(4): lea 0x1(%rdi),%rbx
8f16(2): jz 0x11(%rip)
8f18(7): mov 0xfffffc28(%rbp),%rdi
8f1f(4): lea 0x2(%rdi),%rbx
8f23(4): mov $0x27,0x1(%rdi)
8f27(2): test $0x2,%al
8f29(2): jz 0x9(%rip)
8f2b(3): mov $0x2d,(%rbx)
8f2e(4): add $0x1,%rbx
8f32(2): test $0x4,%al
8f34(2): jz 0x9(%rip)
8f36(3): mov $0x2b,(%rbx)
8f39(4): add $0x1,%rbx
8f3d(2): test $0x8,%al
8f3f(2): jz 0x9(%rip)
8f41(3): mov $0x20,(%rbx)
8f44(4): add $0x1,%rbx
8f48(2): test $0x10,%al
8f4a(2): jz 0x9(%rip)
8f4c(3): mov $0x23,(%rbx)
8f4f(4): add $0x1,%rbx
8f53(2): test $0x40,%al
8f55(2): jz 0x9(%rip)
8f57(3): mov $0x49,(%rbx)
8f5a(4): add $0x1,%rbx
8f5e(2): test $0x20,%al
8f60(2): jz 0x9(%rip)
8f62(3): mov $0x30,(%rbx)
8f65(4): add $0x1,%rbx
8f69(4): mov 0x18(%r13),%rsi
8f6d(4): mov 0x20(%r13),%rdx
8f71(3): cmp %rdx,%rsi
8f74(2): jz 0x32(%rip)
8f76(3): mov %rdx,%rcx
8f79(3): mov %rbx,%rdi
8f7c(7): mov %r8,0xfffffc20(%rbp)
8f83(3): sub %rsi,%rcx
8f86(3): mov %rcx,%rdx
8f89(7): mov %rcx,0xfffffc38(%rbp)
8f90(5): call 0xffff8a40(%rip)
8f95(7): mov 0xfffffc38(%rbp),%rcx
8f9c(7): mov 0xfffffc20(%rbp),%r8
8fa3(3): add %rcx,%rbx
8fa6(4): mov 0x30(%r13),%rsi
8faa(4): mov 0x38(%r13),%rdx
8fae(3): cmp %rdx,%rsi
8fb1(2): jz 0x32(%rip)
8fb3(3): mov %rdx,%rcx
8fb6(3): mov %rbx,%rdi
8fb9(7): mov %r8,0xfffffc20(%rbp)
8fc0(3): sub %rsi,%rcx
8fc3(3): mov %rcx,%rdx
8fc6(7): mov %rcx,0xfffffc38(%rbp)
8fcd(5): call 0xffff8a03(%rip)
8fd2(7): mov 0xfffffc38(%rbp),%rcx
8fd9(7): mov 0xfffffc20(%rbp),%r8
8fe0(3): add %rcx,%rbx
8fe3(6): mov 0xfffffc30(%rbp),%edi
8fe9(3): cmp $0x10,%edi
8fec(2): jnbe 0x2f(%rip)
8fee(5): mov $0x1,%eax
8ff3(2): mov %edi,%ecx
8ff5(3): shl/sal %cl,%rax
8ff8(5): test $0x14180,%eax
8ffd(2): jnz 0x17(%rip)
8fff(3): test $0x10,%ah
9002(6): jnz 0x95e(%rip)
9008(3): test $0x6,%ah
900b(2): jz 0x10(%rip)
900d(3): mov $0x6c,(%rbx)
9010(4): add $0x1,%rbx
9014(3): mov $0x6c,(%rbx)
9017(4): add $0x1,%rbx
901b(5): movzx 0x48(%r13),%eax
9020(4): mov $0x0,0x1(%rbx)
9024(2): mov %al,(%rbx)
9026(4): mov 0x28(%r13),%rax
902a(4): cmp $0xffffffff,%rax
902e(6): jz 0x732(%rip)
9034(4): shl/sal $0x5,%rax
9038(3): add %r8,%rax
903b(3): cmp $0x5,(%rax)
903e(6): jnz 0xae8(%rip)
9044(3): mov 0x10(%rax),%eax
9047(a): mov $0x1,0xfffffc20(%rbp)
9051(6): mov %eax,0xfffffc48(%rbp)
9057(4): mov 0x40(%r13),%rax
905b(4): cmp $0xffffffff,%rax
905f(2): jz 0x2d(%rip)
9061(4): shl/sal $0x5,%rax
9065(3): add %rax,%r8
9068(4): cmp $0x5,(%r8)
906c(6): jnz 0xaba(%rip)
9072(6): mov 0xfffffc20(%rbp),%eax
9078(4): mov 0x10(%r8),%edx
907c(7): mov %edx,0xfffffc48(%rbp,%rax,4)
9083(3): lea 0x1(%rax),%eax
9086(6): mov %eax,0xfffffc20(%rbp)
908c(3): mov %r14,%rax
908f(2): xor %edx,%edx
9091(4): add $0x2,%rax
9095(6): jb 0xc67(%rip)
909b(3): cmp %rax,%r12
909e(2): jnb 0x4d(%rip)
90a0(3): test %r12,%r12
90a3(6): jnz 0x825(%rip)
90a9(4): cmp $0xc,%rax
90ad(6): jnbe 0x833(%rip)
90b3(6): mov $0xc,%r12d
90b9(7): cmp 0xfffffc18(%rbp),%r15
90c0(3): setz %dl
90c3(3): test %r15,%r15
90c6(6): jz 0x84a(%rip)
90cc(2): test %dl,%dl
90ce(6): jnz 0x842(%rip)
90d4(3): mov %r12,%rsi
90d7(3): mov %r15,%rdi
90da(5): call 0xffff8976(%rip)
90df(3): test %rax,%rax
90e2(6): jz 0xfffffc83(%rip)
90e8(3): mov %rax,%r15
90eb(5): mov $0x0,0x0(%r15,%r14,1)
90f0(5): call 0xffff8700(%rip)
90f5(7): mov %rax,0xfffffc38(%rbp)
90fc(2): mov (%rax),%eax
90fe(7): mov %rbx,0xfffffc08(%rbp)
9105(6): mov %eax,0xfffffbdc(%rbp)
910b(5): nop 0x0(%rax,%rax,1)
9110(7): mov 0xfffffc38(%rbp),%rax
9117(3): mov %r12,%rbx
911a(6): mov $0x7fffffff,%r10d
9120(3): sub %r14,%rbx
9123(a): mov $0xffffffff,0xfffffc44(%rbp)
912d(7): cmp $0x7fffffff,%rbx
9134(6): mov $0x0,(%rax)
913a(6): mov 0xfffffc30(%rbp),%eax
9140(4): cmovbe %rbx,%r10
9144(3): cmp $0x11,%eax
9147(6): jnbe 0x9df(%rip)
914d(7): lea 0x4150(%rip),%rsi
9154(4): movsxd 0x0(%rsi,%rax,4),%rax
9158(3): add %rsi,%rax
915b(2): jmp %rax
915d(3): nop (%rax)
9160(4): mov 0x50(%r13),%rax
9164(4): lea 0x0(%r15,%r14,1),%rdi
9168(4): shl/sal $0x5,%rax
916c(7): add 0xfffffc58(%rbp),%rax
9173(4): mov 0x10(%rax),%r9
9177(6): mov 0xfffffc20(%rbp),%eax
917d(3): cmp $0x1,%eax
9180(6): jz 0x4c8(%rip)
9186(3): cmp $0x2,%eax
9189(6): jz 0x4a7(%rip)
918f(4): sub $0x8,%rsp
9193(6): push 0xfffffc10(%rbp)
9199(7): mov 0xfffffc28(%rbp),%r8
91a0(3): mov %r10,%rsi
91a3(7): mov $0xffffffff,%rcx
91aa(5): mov $0x1,%edx
91af(2): xor %eax,%eax
91b1(7): mov %r10,0xfffffbd0(%rbp)
91b8(5): call 0xffff8608(%rip)
91bd(1): pop %rsi
91be(1): pop %rdi
91bf(7): mov 0xfffffbd0(%rbp),%r10
91c6(6): mov 0xfffffc44(%rbp),%ecx
91cc(2): test %ecx,%ecx
91ce(6): js 0x13e(%rip)
91d4(3): movsxd %ecx,%rdx
91d7(3): cmp %r10,%rdx
91da(2): jnb 0x10(%rip)
91dc(3): add %r15,%rdx
91df(5): cmp $0x0,0x0(%rdx,%r14,1)
91e4(6): jnz 0x942(%rip)
91ea(2): cmp %eax,%ecx
91ec(2): jnl 0xa(%rip)
91ee(6): mov %eax,0xfffffc44(%rbp)
91f4(2): mov %eax,%ecx
91f6(3): lea 0x1(%rcx),%eax
91f9(3): cmp %r10,%rax
91fc(6): jb 0x834(%rip)
9202(7): cmp $0x7ffffffe,%rbx
9209(6): jnbe 0x847(%rip)
920f(4): lea 0x0(%r12,%r12,1),%rsi
9213(3): lea 0x2(%rcx),%edx
9216(3): test %r12,%r12
9219(7): mov $0xffffffff,%rax
9220(4): cmovns %rsi,%rax
9224(3): add %r14,%rdx
9227(6): jb 0xac1(%rip)
922d(3): cmp %rdx,%rax
9230(4): cmovnae %rdx,%rax
9234(3): cmp %rax,%r12
9237(6): jnb 0xfffffed9(%rip)
923d(3): test %r12,%r12
9240(6): js 0xfffffb31(%rip)
9246(3): cmp %rax,%rsi
9249(3): mov %rsi,%r12
924c(2): jnb 0xf(%rip)
924e(4): cmp $0xffffffff,%rax
9252(6): jz 0xfffffb1f(%rip)
9258(3): mov %rax,%r12
925b(7): cmp 0xfffffc18(%rbp),%r15
9262(3): setz %bl
9265(3): test %r15,%r15
9268(6): jz 0x388(%rip)
926e(2): test %bl,%bl
9270(6): jnz 0x380(%rip)
9276(3): mov %r12,%rsi
9279(3): mov %r15,%rdi
927c(5): call 0xffff87d4(%rip)
9281(3): test %rax,%rax
9284(6): jz 0xfffffaed(%rip)
928a(3): mov %rax,%r15
928d(5): jmp 0xfffffe83(%rip)
9292(6): nop 0x0(%rax,%rax,1)
9298(4): mov 0x50(%r13),%rax
929c(4): lea 0x0(%r15,%r14,1),%rdi
92a0(4): shl/sal $0x5,%rax
92a4(7): add 0xfffffc58(%rbp),%rax
92ab(4): mov 0x10(%rax),%r9d
92af(6): mov 0xfffffc20(%rbp),%eax
92b5(3): cmp $0x1,%eax
92b8(6): jz 0x238(%rip)
92be(3): cmp $0x2,%eax
92c1(6): jz 0x277(%rip)
92c7(4): sub $0x8,%rsp
92cb(6): push 0xfffffc10(%rbp)
92d1(7): mov 0xfffffc28(%rbp),%r8
92d8(7): mov $0xffffffff,%rcx
92df(5): mov $0x1,%edx
92e4(3): mov %r10,%rsi
92e7(2): xor %eax,%eax
92e9(7): mov %r10,0xfffffbd0(%rbp)
92f0(5): call 0xffff84d0(%rip)
92f5(1): pop %rdx
92f6(1): pop %rcx
92f7(6): mov 0xfffffc44(%rbp),%ecx
92fd(7): mov 0xfffffbd0(%rbp),%r10
9304(2): test %ecx,%ecx
9306(6): jns 0xfffffece(%rip)
930c(7): mov 0xfffffc08(%rbp),%rdi
9313(4): cmp $0x0,0x1(%rdi)
9317(6): jnz 0x341(%rip)
931d(2): test %eax,%eax
931f(6): jns 0xfffffecf(%rip)
9325(7): mov 0xfffffc38(%rbp),%rax
932c(2): mov (%rax),%ebx
932e(2): test %ebx,%ebx
9330(2): jnz 0x20(%rip)
9332(5): movzx 0x48(%r13),%eax
9337(5): mov $0x16,%ebx
933c(3): and $0xef,%eax
933f(2): cmp $0x63,%al
9341(5): mov $0x54,%eax
9346(3): cmove %eax,%ebx
9349(7): nop 0x0(%rax)
9350(7): cmp 0xfffffc18(%rbp),%r15
9357(2): jz 0xb(%rip)
9359(3): test %r15,%r15
935c(6): jnz 0x7b0(%rip)
9362(7): mov 0xfffffbe0(%rbp),%rax
9369(3): test %rax,%rax
936c(2): jz 0xa(%rip)
936e(3): mov %rax,%rdi
9371(5): call 0xffff845f(%rip)
9376(7): mov 0xfffffbf8(%rbp),%rax
937d(7): mov 0xfffffd48(%rbp),%rdi
9384(4): add $0x20,%rax
9388(3): cmp %rax,%rdi
938b(2): jz 0x7(%rip)
938d(5): call 0xffff8443(%rip)
9392(7): mov 0xfffffbf0(%rbp),%rax
9399(7): mov 0xfffffc58(%rbp),%rdi
93a0(4): add $0x10,%rax
93a4(3): cmp %rax,%rdi
93a7(2): jz 0x7(%rip)
93a9(5): call 0xffff8427(%rip)
93ae(7): mov 0xfffffc38(%rbp),%rax
93b5(3): xor %r15d,%r15d
93b8(2): mov %ebx,(%rax)
93ba(5): jmp 0xfffffa25(%rip)
93bf(1): nop 
93c0(4): mov 0x50(%r13),%rax
93c4(4): lea 0x0(%r15,%r14,1),%rdi
93c8(4): shl/sal $0x5,%rax
93cc(7): add 0xfffffc58(%rbp),%rax
93d3(3): fld 0x10(%rax),%st0
93d6(6): mov 0xfffffc20(%rbp),%eax
93dc(3): cmp $0x1,%eax
93df(6): jz 0x631(%rip)
93e5(3): cmp $0x2,%eax
93e8(6): jnz 0x4c8(%rip)
93ee(6): mov 0xfffffc4c(%rbp),%eax
93f4(4): sub $0x8,%rsp
93f8(6): push 0xfffffc10(%rbp)
93fe(7): mov 0xfffffc48(%rbp),%r9d
9405(7): mov 0xfffffc28(%rbp),%r8
940c(3): mov %r10,%rsi
940f(4): sub $0x18,%rsp
9413(7): mov $0xffffffff,%rcx
941a(5): mov $0x1,%edx
941f(4): fstp %st0,0x8(%rsp)
9423(1): push %rax
9424(2): xor %eax,%eax
9426(7): mov %r10,0xfffffbd0(%rbp)
942d(5): call 0xffff8393(%rip)
9432(4): add $0x30,%rsp
9436(7): mov 0xfffffbd0(%rbp),%r10
943d(5): jmp 0xfffffd89(%rip)
9442(6): nop 0x0(%rax,%rax,1)
9448(4): mov 0x50(%r13),%rax
944c(4): lea 0x0(%r15,%r14,1),%rdi
9450(4): shl/sal $0x5,%rax
9454(7): add 0xfffffc58(%rbp),%rax
945b(5): movsd 0x10(%rax),%xmm0
9460(6): mov 0xfffffc20(%rbp),%eax
9466(3): cmp $0x1,%eax
9469(6): jz 0x597(%rip)
946f(3): cmp $0x2,%eax
9472(6): jnz 0x3fe(%rip)
9478(6): mov 0xfffffc4c(%rbp),%eax
947e(6): push 0xfffffc10(%rbp)
9484(1): push %rax
9485(7): mov 0xfffffc48(%rbp),%r9d
948c(7): mov 0xfffffc28(%rbp),%r8
9493(3): mov %r10,%rsi
9496(7): mov $0xffffffff,%rcx
949d(5): mov $0x1,%edx
94a2(5): mov $0x1,%eax
94a7(7): mov %r10,0xfffffbd0(%rbp)
94ae(5): call 0xffff8312(%rip)
94b3(2): pop %r8
94b5(7): mov 0xfffffbd0(%rbp),%r10
94bc(2): pop %r9
94be(5): jmp 0xfffffd08(%rip)
94c3(5): nop 0x0(%rax,%rax,1)
94c8(4): mov 0x50(%r13),%rax
94cc(4): lea 0x0(%r15,%r14,1),%rdi
94d0(4): shl/sal $0x5,%rax
94d4(7): add 0xfffffc58(%rbp),%rax
94db(5): movzx 0x10(%rax),%r9d
94e0(6): mov 0xfffffc20(%rbp),%eax
94e6(3): cmp $0x1,%eax
94e9(6): jnz 0xfffffdd5(%rip)
94ef(1): nop 
94f0(6): push 0xfffffc10(%rbp)
94f6(2): push %r9
94f8(7): mov 0xfffffc48(%rbp),%r9d
94ff(5): jmp 0xfffffdd2(%rip)
9504(4): nop 0x0(%rax)
9508(4): mov 0x50(%r13),%rax
950c(4): lea 0x0(%r15,%r14,1),%rdi
9510(4): shl/sal $0x5,%rax
9514(7): add 0xfffffc58(%rbp),%rax
951b(5): movsx 0x10(%rax),%r9d
9520(6): mov 0xfffffc20(%rbp),%eax
9526(3): cmp $0x1,%eax
9529(2): jz 0xffffffc7(%rip)
952b(3): cmp $0x2,%eax
952e(6): jnz 0xfffffd99(%rip)
9534(4): nop 0x0(%rax)
9538(4): sub $0x8,%rsp
953c(6): push 0xfffffc10(%rbp)
9542(2): push %r9
9544(6): mov 0xfffffc4c(%rbp),%eax
954a(1): push %rax
954b(7): mov 0xfffffc48(%rbp),%r9d
9552(7): mov 0xfffffc28(%rbp),%r8
9559(3): mov %r10,%rsi
955c(7): mov $0xffffffff,%rcx
9563(5): mov $0x1,%edx
9568(2): xor %eax,%eax
956a(7): mov %r10,0xfffffbd0(%rbp)
9571(5): call 0xffff824f(%rip)
9576(4): add $0x20,%rsp
957a(7): mov 0xfffffbd0(%rbp),%r10
9581(5): jmp 0xfffffc45(%rip)
9586(a): nop 0x0(%rax,%rax,1)
9590(4): mov 0x50(%r13),%rax
9594(4): lea 0x0(%r15,%r14,1),%rdi
9598(4): shl/sal $0x5,%rax
959c(7): add 0xfffffc58(%rbp),%rax
95a3(5): movzx 0x10(%rax),%r9d
95a8(6): mov 0xfffffc20(%rbp),%eax
95ae(3): cmp $0x1,%eax
95b1(6): jnz 0xfffffd0d(%rip)
95b7(5): jmp 0xffffff39(%rip)
95bc(4): nop 0x0(%rax)
95c0(4): mov 0x50(%r13),%rax
95c4(4): lea 0x0(%r15,%r14,1),%rdi
95c8(4): shl/sal $0x5,%rax
95cc(7): add 0xfffffc58(%rbp),%rax
95d3(5): movsx 0x10(%rax),%r9d
95d8(6): mov 0xfffffc20(%rbp),%eax
95de(3): cmp $0x1,%eax
95e1(6): jnz 0xfffffcdd(%rip)
95e7(5): jmp 0xffffff09(%rip)
95ec(4): nop 0x0(%rax)
95f0(3): mov %r12,%rdi
95f3(5): call 0xffff83fd(%rip)
95f8(3): test %rax,%rax
95fb(3): mov %rax,%rcx
95fe(6): jz 0xfffff773(%rip)
9604(3): test %r14,%r14
9607(6): jz 0xb9(%rip)
960d(2): test %bl,%bl
960f(6): jz 0xb1(%rip)
9615(3): mov %r15,%rsi
9618(3): mov %r14,%rdx
961b(3): mov %rax,%rdi
961e(5): call 0xffff83b2(%rip)
9623(3): mov %rax,%r15
9626(5): jmp 0xfffffaea(%rip)
962b(5): nop 0x0(%rax,%rax,1)
9630(4): sub $0x8,%rsp
9634(6): push 0xfffffc10(%rbp)
963a(2): push %r9
963c(5): jmp 0xffffff08(%rip)
9641(7): nop 0x0(%rax)
9648(6): push 0xfffffc10(%rbp)
964e(2): push %r9
9650(5): jmp 0xfffffea8(%rip)
9655(3): nop (%rax)
9658(4): mov $0x0,0x1(%rdi)
965c(5): jmp 0xfffffab4(%rip)
9661(7): nop 0x0(%rax)
9668(4): cmp $0xffffffff,%rax
966c(6): jnz 0x4ba(%rip)
9672(3): mov %r14,%rax
9675(4): add $0x1,%rax
9679(3): mov %rax,%rbx
967c(6): jnb 0x8c(%rip)
9682(4): cmp $0xffffffff,%r12
9686(6): jnz 0xfffff6df(%rip)
968c(3): mov %r12,%rbx
968f(5): mov $0x25,0x0(%r15,%r14,1)
9694(4): mov 0x8(%r13),%r8
9698(4): add $0x58,%r13
969c(4): mov 0x0(%r13),%rcx
96a0(8): add $0x1,0xfffffc00(%rbp)
96a8(3): cmp %r8,%rcx
96ab(6): jnz 0xfffff69e(%rip)
96b1(3): mov %rbx,%r14
96b4(5): jmp 0xfffff7ff(%rip)
96b9(7): nop 0x0(%rax)
96c0(3): mov %rcx,%r15
96c3(5): jmp 0xfffffa4d(%rip)
96c8(5): call 0xffff8128(%rip)
96cd(7): mov %rax,0xfffffc38(%rbp)
96d4(5): jmp 0xfffff6c3(%rip)
96d9(7): nop 0x0(%rax)
96e0(2): mov %edi,%edx
96e2(3): sub $0x12,%edx
96e5(3): cmp $0x4,%edx
96e8(6): jnbe 0x43e(%rip)
96ee(7): lea 0x3bf7(%rip),%rdi
96f5(4): mov 0x10(%rax),%rax
96f9(4): movsxd 0x0(%rdi,%rdx,4),%rdx
96fd(3): add %rdi,%rdx
9700(2): jmp %rdx
9702(6): nop 0x0(%rax,%rax,1)
9708(3): cmp %rax,%r12
970b(2): jnb 0xffffff84(%rip)
970d(3): test %r12,%r12
9710(6): jnz 0x3d0(%rip)
9716(4): cmp $0xc,%rax
971a(6): jnbe 0x3d8(%rip)
9720(6): mov $0xc,%r12d
9726(7): cmp 0xfffffc18(%rbp),%r15
972d(3): setz %dl
9730(3): test %r15,%r15
9733(6): jz 0x26d(%rip)
9739(2): test %dl,%dl
973b(6): jnz 0x265(%rip)
9741(3): mov %r12,%rsi
9744(3): mov %r15,%rdi
9747(5): call 0xffff8309(%rip)
974c(3): test %rax,%rax
974f(6): jz 0xfc(%rip)
9755(3): mov %rax,%r15
9758(5): jmp 0xffffff37(%rip)
975d(3): nop (%rax)
9760(a): mov $0x0,0xfffffc20(%rbp)
976a(5): jmp 0xfffff8ed(%rip)
976f(1): nop 
9770(6): js 0xfffff5f5(%rip)
9776(3): add %r12,%r12
9779(3): cmp %rax,%r12
977c(6): jnb 0xfffff6da(%rip)
9782(4): cmp $0xffffffff,%rax
9786(6): jz 0xfffff5df(%rip)
978c(7): cmp 0xfffffc18(%rbp),%r15
9793(3): mov %rax,%r12
9796(3): setz %dl
9799(3): test %r15,%r15
979c(6): jnz 0xfffff6cd(%rip)
97a2(6): nop 0x0(%rax,%rax,1)
97a8(3): mov %r12,%rdi
97ab(7): mov %r8,0xfffffc20(%rbp)
97b2(6): mov %dl,0xfffffc30(%rbp)
97b8(7): mov %rcx,0xfffffc38(%rbp)
97bf(5): call 0xffff8231(%rip)
97c4(3): test %rax,%rax
97c7(3): mov %rax,%r9
97ca(7): mov 0xfffffc38(%rbp),%rcx
97d1(7): movzx 0xfffffc30(%rbp),%edx
97d8(7): mov 0xfffffc20(%rbp),%r8
97df(6): jz 0xfffff586(%rip)
97e5(3): test %rbx,%rbx
97e8(6): jz 0x208(%rip)
97ee(2): test %dl,%dl
97f0(6): jz 0x200(%rip)
97f6(3): mov %r15,%rsi
97f9(3): mov %rbx,%rdx
97fc(3): mov %rax,%rdi
97ff(7): mov %r8,0xfffffc30(%rbp)
9806(7): mov %rcx,0xfffffc38(%rbp)
980d(5): call 0xffff81c3(%rip)
9812(7): mov 0xfffffc38(%rbp),%rcx
9819(3): mov %rax,%r15
981c(7): mov 0xfffffc30(%rbp),%r8
9823(5): jmp 0xfffff681(%rip)
9828(8): nop 0x0(%rax,%rax,1)
9830(3): mov %r12,%r14
9833(5): jmp 0xfffff671(%rip)
9838(8): nop 0x0(%rax,%rax,1)
9840(3): mov %r14,(%rax)
9843(3): mov %r14,%rbx
9846(5): jmp 0xfffffe4e(%rip)
984b(5): call 0xffff7fa5(%rip)
9850(7): mov %rax,0xfffffc38(%rbp)
9857(9): nop 0x0(%rax,%rax,1)
9860(3): mov %r15,%rdi
9863(5): call 0xffff7f6d(%rip)
9868(5): jmp 0xfffff51b(%rip)
986d(3): nop (%rax)
9870(7): mov 0xfffffc10(%rbp),%r9
9877(7): mov 0xfffffc28(%rbp),%r8
987e(3): mov %r10,%rsi
9881(7): mov $0xffffffff,%rcx
9888(5): mov $0x1,%edx
988d(5): mov $0x1,%eax
9892(7): mov %r10,0xfffffbd0(%rbp)
9899(5): call 0xffff7f27(%rip)
989e(7): mov 0xfffffbd0(%rbp),%r10
98a5(5): jmp 0xfffff921(%rip)
98aa(6): nop 0x0(%rax,%rax,1)
98b0(4): sub $0x10,%rsp
98b4(7): mov 0xfffffc10(%rbp),%r9
98bb(3): fstp %st0,(%rsp)
98be(5): jmp 0xfffff8db(%rip)
98c3(5): nop 0x0(%rax,%rax,1)
98c8(6): js 0xfffff49d(%rip)
98ce(3): add %r12,%r12
98d1(3): cmp %rax,%r12
98d4(6): jnb 0xfffff7e5(%rip)
98da(6): nop 0x0(%rax,%rax,1)
98e0(3): test %rdx,%rdx
98e3(6): jnz 0xfffff482(%rip)
98e9(4): cmp $0xffffffff,%rax
98ed(6): jz 0xfffff478(%rip)
98f3(7): cmp 0xfffffc18(%rbp),%r15
98fa(3): mov %rax,%r12
98fd(3): setz %dl
9900(3): test %r15,%r15
9903(6): jnz 0xfffff7c9(%rip)
9909(7): nop 0x0(%rax)
9910(3): mov %r12,%rdi
9913(6): mov %dl,0xfffffc38(%rbp)
9919(5): call 0xffff80d7(%rip)
991e(3): test %rax,%rax
9921(3): mov %rax,%rcx
9924(7): movzx 0xfffffc38(%rbp),%edx
992b(6): jz 0xfffff43a(%rip)
9931(3): test %r14,%r14
9934(6): jz 0x19c(%rip)
993a(2): test %dl,%dl
993c(6): jz 0x194(%rip)
9942(3): mov %r15,%rsi
9945(3): mov %r14,%rdx
9948(3): mov %rax,%rdi
994b(5): call 0xffff8085(%rip)
9950(3): mov %rax,%r15
9953(5): jmp 0xfffff798(%rip)
9958(8): nop 0x0(%rax,%rax,1)
9960(3): mov $0x4c,(%rbx)
9963(4): add $0x1,%rbx
9967(5): jmp 0xfffff6b4(%rip)
996c(4): nop 0x0(%rax)
9970(3): mov %r14b,(%rax)
9973(3): mov %r14,%rbx
9976(5): jmp 0xfffffd1e(%rip)
997b(5): nop 0x0(%rax,%rax,1)
9980(3): mov %r14d,(%rax)
9983(3): mov %r14,%rbx
9986(5): jmp 0xfffffd0e(%rip)
998b(5): nop 0x0(%rax,%rax,1)
9990(4): mov %r14w,(%rax)
9994(3): mov %r14,%rbx
9997(5): jmp 0xfffffcfd(%rip)
999c(4): nop 0x0(%rax)
99a0(3): mov %r12,%rdi
99a3(6): mov %dl,0xfffffc38(%rbp)
99a9(5): call 0xffff8047(%rip)
99ae(3): test %rax,%rax
99b1(3): mov %rax,%rcx
99b4(7): movzx 0xfffffc38(%rbp),%edx
99bb(6): jz 0xfffff3aa(%rip)
99c1(3): test %r14,%r14
99c4(6): jz 0x140(%rip)
99ca(2): test %dl,%dl
99cc(6): jz 0x138(%rip)
99d2(3): mov %r15,%rsi
99d5(3): mov %r14,%rdx
99d8(3): mov %rax,%rdi
99db(5): call 0xffff7ff5(%rip)
99e0(3): mov %rax,%r15
99e3(5): jmp 0xfffffcac(%rip)
99e8(8): nop 0x0(%rax,%rax,1)
99f0(3): mov %r9,%r15
99f3(5): jmp 0xfffff4b1(%rip)
99f8(8): nop 0x0(%rax,%rax,1)
9a00(4): sub $0x8,%rsp
9a04(6): push 0xfffffc10(%rbp)
9a0a(5): jmp 0xfffffa7b(%rip)
9a0f(1): nop 
9a10(4): sub $0x8,%rsp
9a14(6): push 0xfffffc10(%rbp)
9a1a(4): sub $0x10,%rsp
9a1e(3): fstp %st0,(%rsp)
9a21(5): jmp 0xfffffb2a(%rip)
9a26(a): nop 0x0(%rax,%rax,1)
9a30(7): mov 0xfffffc38(%rbp),%rax
9a37(6): mov 0xfffffbdc(%rbp),%edi
9a3d(3): movsxd %ecx,%rbx
9a40(3): add %r14,%rbx
9a43(2): mov %edi,(%rax)
9a45(5): jmp 0xfffffc4f(%rip)
9a4a(6): nop 0x0(%rax,%rax,1)
9a50(7): cmp 0xfffffc18(%rbp),%r15
9a57(2): jz 0xb(%rip)
9a59(3): test %r15,%r15
9a5c(6): jnz 0xbd(%rip)
9a62(7): mov 0xfffffbe0(%rbp),%rax
9a69(3): test %rax,%rax
9a6c(2): jz 0xa(%rip)
9a6e(3): mov %rax,%rdi
9a71(5): call 0xffff7d5f(%rip)
9a76(7): mov 0xfffffbf8(%rbp),%rax
9a7d(7): mov 0xfffffd48(%rbp),%rdi
9a84(4): add $0x20,%rax
9a88(3): cmp %rax,%rdi
9a8b(2): jz 0x7(%rip)
9a8d(5): call 0xffff7d43(%rip)
9a92(7): mov 0xfffffbf0(%rbp),%rax
9a99(7): mov 0xfffffc58(%rbp),%rdi
9aa0(4): add $0x10,%rax
9aa4(3): cmp %rax,%rdi
9aa7(2): jz 0x7(%rip)
9aa9(5): call 0xffff7d27(%rip)
9aae(7): mov 0xfffffc38(%rbp),%rax
9ab5(3): xor %r15d,%r15d
9ab8(6): mov $0x4b,(%rax)
9abe(5): jmp 0xfffff321(%rip)
9ac3(5): nop 0x0(%rax,%rax,1)
9ac8(3): xor %r15d,%r15d
9acb(5): jmp 0xfffff314(%rip)
9ad0(3): mov %rcx,%r15
9ad3(5): jmp 0xfffff618(%rip)
9ad8(8): nop 0x0(%rax,%rax,1)
9ae0(6): js 0xfffff285(%rip)
9ae6(3): add %r12,%r12
9ae9(3): cmp %rax,%r12
9aec(6): jnb 0xfffffc3a(%rip)
9af2(4): cmp $0xffffffff,%rax
9af6(6): jz 0xfffff26f(%rip)
9afc(3): mov %rax,%r12
9aff(5): jmp 0xfffffc27(%rip)
9b04(3): mov %rcx,%r15
9b07(5): jmp 0xfffffb88(%rip)
9b0c(3): mov %r15,%rdi
9b0f(5): call 0xffff7cc1(%rip)
9b14(5): jmp 0xfffff84e(%rip)
9b19(3): mov %r15,%rdi
9b1c(5): call 0xffff7cb4(%rip)
9b21(5): jmp 0xffffff41(%rip)
9b26(5): call 0xffff7cba(%rip)
9b2b(5): nop 0x0(%rax,%rax,1)
9b30(7): mov 0xfffffbf8(%rbp),%rax
9b37(7): mov 0xfffffd48(%rbp),%rdi
9b3e(4): add $0x20,%rax
9b42(3): cmp %rax,%rdi
9b45(2): jz 0x7(%rip)
9b47(5): call 0xffff7c89(%rip)
9b4c(7): mov 0xfffffbf0(%rbp),%rax
9b53(7): mov 0xfffffc58(%rbp),%rdi
9b5a(4): add $0x10,%rax
9b5e(3): cmp %rax,%rdi
9b61(2): jz 0x7(%rip)
9b63(5): call 0xffff7c6d(%rip)
9b68(5): call 0xffff7c88(%rip)
9b6d(3): xor %r15d,%r15d
9b70(6): mov $0x16,(%rax)
9b76(5): jmp 0xfffff269(%rip)
9b7b(3): mov %r14,%rbx
9b7e(2): xor %eax,%eax
9b80(4): add $0x1,%rbx
9b84(6): jb 0x10c(%rip)
9b8a(3): cmp %rbx,%r12
9b8d(2): jnb 0x4f(%rip)
9b8f(3): test %r12,%r12
9b92(6): jnz 0x137(%rip)
9b98(4): cmp $0xc,%rbx
9b9c(6): jnbe 0x112(%rip)
9ba2(6): mov $0xc,%r12d
9ba8(7): cmp 0xfffffc18(%rbp),%r15
9baf(4): setz %r13b
9bb3(3): test %r15,%r15
9bb6(6): jz 0xa6(%rip)
9bbc(3): test %r13b,%r13b
9bbf(6): jnz 0x9d(%rip)
9bc5(3): mov %r12,%rsi
9bc8(3): mov %r15,%rdi
9bcb(5): call 0xffff7e85(%rip)
9bd0(3): test %rax,%rax
9bd3(6): jz 0xfffffc78(%rip)
9bd9(3): mov %rax,%r15
9bdc(7): cmp 0xfffffc18(%rbp),%r15
9be3(5): mov $0x0,0x0(%r15,%r14,1)
9be8(2): jz 0x19(%rip)
9bea(3): cmp %rbx,%r12
9bed(2): jbe 0x14(%rip)
9bef(3): mov %r15,%rdi
9bf2(3): mov %rbx,%rsi
9bf5(5): call 0xffff7e5b(%rip)
9bfa(3): test %rax,%rax
9bfd(4): cmovne %rax,%r15
9c01(7): mov 0xfffffbe0(%rbp),%rax
9c08(3): test %rax,%rax
9c0b(2): jz 0xa(%rip)
9c0d(3): mov %rax,%rdi
9c10(5): call 0xffff7bc0(%rip)
9c15(7): mov 0xfffffbf8(%rbp),%rax
9c1c(7): mov 0xfffffd48(%rbp),%rdi
9c23(4): add $0x20,%rax
9c27(3): cmp %rax,%rdi
9c2a(2): jz 0x7(%rip)
9c2c(5): call 0xffff7ba4(%rip)
9c31(7): mov 0xfffffbf0(%rbp),%rax
9c38(7): mov 0xfffffc58(%rbp),%rdi
9c3f(4): add $0x10,%rax
9c43(3): cmp %rax,%rdi
9c46(2): jz 0x7(%rip)
9c48(5): call 0xffff7b88(%rip)
9c4d(7): mov 0xfffffbe8(%rbp),%rax
9c54(3): mov %r14,(%rax)
9c57(5): jmp 0xfffff188(%rip)
9c5c(3): mov %r12,%rdi
9c5f(5): call 0xffff7d91(%rip)
9c64(3): test %rax,%rax
9c67(3): mov %rax,%rcx
9c6a(6): jz 0xfffff0fb(%rip)
9c70(3): test %r14,%r14
9c73(2): jz 0x6d(%rip)
9c75(3): test %r13b,%r13b
9c78(2): jz 0x68(%rip)
9c7a(3): mov %r15,%rsi
9c7d(3): mov %r14,%rdx
9c80(3): mov %rax,%rdi
9c83(5): call 0xffff7d4d(%rip)
9c88(3): mov %rax,%r15
9c8b(5): jmp 0xffffff51(%rip)
9c90(4): cmp $0xffffffff,%r12
9c94(5): mov $0x1,%eax
9c99(6): jz 0xffffff43(%rip)
9c9f(3): test %r12,%r12
9ca2(6): jz 0xfffff0c3(%rip)
9ca8(6): js 0xfffff0bd(%rip)
9cae(3): test %rax,%rax
9cb1(6): jnz 0xfffff0b4(%rip)
9cb7(4): cmp $0xffffffff,%rbx
9cbb(6): jz 0xfffff0aa(%rip)
9cc1(3): mov %rbx,%r12
9cc4(5): jmp 0xfffffee4(%rip)
9cc9(6): js 0xfffff09c(%rip)
9ccf(3): add %r12,%r12
9cd2(3): cmp %rbx,%r12
9cd5(6): jnb 0xfffffed3(%rip)
9cdb(2): jmp 0xffffffd3(%rip)
9cdd(3): nop (%rax)
9ce0(3): mov %rcx,%r15
9ce3(5): jmp 0xfffffef9(%rip)
9ce8(4): cmp $0xffffffff,%r12
9cec(6): jz 0xfffff424(%rip)
9cf2(5): jmp 0xfffff07f(%rip)
9cf7(5): call 0xffff7be9(%rip)
9cfc(4): cmp $0xffffffff,%r12
9d00(5): mov $0x1,%edx
9d05(6): jz 0xfffff3e6(%rip)
9d0b(3): test %r12,%r12
9d0e(6): jz 0xfffff057(%rip)
9d14(6): jns 0xfffffbcc(%rip)
9d1a(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
9d20(4): cmp $0x0,(%rsi)
9d24(4): mov 0x8(%rsi),%rax
9d28(2): jz 0x65(%rip)
9d2a(7): lea 0x35df(%rip),%r8
9d31(7): lea 0x3638(%rip),%r10
9d38(7): lea 0x35c1(%rip),%r9
9d3f(2): xor %ecx,%ecx
9d41(7): nop 0x0(%rax)
9d48(3): cmp $0x16,(%rax)
9d4b(2): jnbe 0x45(%rip)
9d4d(2): mov (%rax),%edx
9d4f(4): movsxd 0x0(%r8,%rdx,4),%rdx
9d53(3): add %r8,%rdx
9d56(2): jmp %rdx
9d58(8): nop 0x0(%rax,%rax,1)
9d60(4): mov 0x8(%rdi),%rdx
9d64(4): add $0xf,%rdx
9d68(4): and $0xfffffff0,%rdx
9d6c(4): lea 0x10(%rdx),%r11
9d70(4): mov %r11,0x8(%rdi)
9d74(2): fld (%rdx),%st0
9d76(3): fstp %st0,0x10(%rax)
9d79(7): nop 0x0(%rax)
9d80(4): add $0x1,%rcx
9d84(4): add $0x20,%rax
9d88(3): cmp %rcx,(%rsi)
9d8b(2): jnbe 0xffffffbd(%rip)
9d8d(2): xor %eax,%eax
9d8f(1): ret near (%rsp)
9d90(5): mov $0xffffffff,%eax
9d95(1): ret near (%rsp)
9d96(3): mov (%rdi),%r11d
9d99(4): cmp $0x2f,%r11d
9d9d(6): jnbe 0x13d(%rip)
9da3(3): mov %r11d,%edx
9da6(4): add 0x10(%rdi),%rdx
9daa(4): add $0x8,%r11d
9dae(3): mov %r11d,(%rdi)
9db1(3): mov (%rdx),%rdx
9db4(4): mov %rdx,0x10(%rax)
9db8(2): jmp 0xffffffc8(%rip)
9dba(3): mov (%rdi),%r11d
9dbd(4): cmp $0x2f,%r11d
9dc1(6): jnbe 0x13b(%rip)
9dc7(3): mov %r11d,%edx
9dca(4): add 0x10(%rdi),%rdx
9dce(4): add $0x8,%r11d
9dd2(3): mov %r11d,(%rdi)
9dd5(2): mov (%rdx),%edx
9dd7(3): mov %edx,0x10(%rax)
9dda(2): jmp 0xffffffa6(%rip)
9ddc(3): mov (%rdi),%r11d
9ddf(4): cmp $0x2f,%r11d
9de3(6): jnbe 0x108(%rip)
9de9(3): mov %r11d,%edx
9dec(4): add 0x10(%rdi),%rdx
9df0(4): add $0x8,%r11d
9df4(3): mov %r11d,(%rdi)
9df7(2): mov (%rdx),%edx
9df9(3): mov %dl,0x10(%rax)
9dfc(2): jmp 0xffffff84(%rip)
9dfe(3): mov (%rdi),%r11d
9e01(4): cmp $0x2f,%r11d
9e05(6): jnbe 0xa5(%rip)
9e0b(3): mov %r11d,%edx
9e0e(4): add 0x10(%rdi),%rdx
9e12(4): add $0x8,%r11d
9e16(3): mov %r11d,(%rdi)
9e19(2): mov (%rdx),%edx
9e1b(4): mov %dx,0x10(%rax)
9e1f(5): jmp 0xffffff61(%rip)
9e24(3): mov (%rdi),%r11d
9e27(4): cmp $0x2f,%r11d
9e2b(6): jnbe 0x90(%rip)
9e31(3): mov %r11d,%edx
9e34(4): add 0x10(%rdi),%rdx
9e38(4): add $0x8,%r11d
9e3c(3): mov %r11d,(%rdi)
9e3f(3): mov (%rdx),%rdx
9e42(3): test %rdx,%rdx
9e45(4): cmove %r9,%rdx
9e49(4): mov %rdx,0x10(%rax)
9e4d(5): jmp 0xffffff33(%rip)
9e52(4): mov 0x4(%rdi),%r11d
9e56(7): cmp $0xaf,%r11d
9e5d(6): jnbe 0xb0(%rip)
9e63(3): mov %r11d,%edx
9e66(4): add 0x10(%rdi),%rdx
9e6a(4): add $0x10,%r11d
9e6e(4): mov %r11d,0x4(%rdi)
9e72(4): movsd (%rdx),%xmm0
9e76(5): movsd %xmm0,0x10(%rax)
9e7b(5): jmp 0xffffff05(%rip)
9e80(3): mov (%rdi),%r11d
9e83(4): cmp $0x2f,%r11d
9e87(2): jnbe 0x45(%rip)
9e89(3): mov %r11d,%edx
9e8c(4): add 0x10(%rdi),%rdx
9e90(4): add $0x8,%r11d
9e94(3): mov %r11d,(%rdi)
9e97(3): mov (%rdx),%rdx
9e9a(3): test %rdx,%rdx
9e9d(4): cmove %r10,%rdx
9ea1(4): mov %rdx,0x10(%rax)
9ea5(5): jmp 0xfffffedb(%rip)
9eaa(4): mov 0x8(%rdi),%rdx
9eae(4): lea 0x8(%rdx),%r11
9eb2(4): mov %r11,0x8(%rdi)
9eb6(5): jmp 0xffffff63(%rip)
9ebb(4): mov 0x8(%rdi),%rdx
9ebf(4): lea 0x8(%rdx),%r11
9ec3(4): mov %r11,0x8(%rdi)
9ec7(5): jmp 0xffffff78(%rip)
9ecc(4): mov 0x8(%rdi),%rdx
9ed0(4): lea 0x8(%rdx),%r11
9ed4(4): mov %r11,0x8(%rdi)
9ed8(2): jmp 0xffffffbf(%rip)
9eda(4): mov 0x8(%rdi),%rdx
9ede(4): lea 0x8(%rdx),%r11
9ee2(4): mov %r11,0x8(%rdi)
9ee6(5): jmp 0xfffffecb(%rip)
9eeb(4): mov 0x8(%rdi),%rdx
9eef(4): lea 0x8(%rdx),%r11
9ef3(4): mov %r11,0x8(%rdi)
9ef7(5): jmp 0xffffff00(%rip)
9efc(4): mov 0x8(%rdi),%rdx
9f00(4): lea 0x8(%rdx),%r11
9f04(4): mov %r11,0x8(%rdi)
9f08(5): jmp 0xfffffecd(%rip)
9f0d(4): mov 0x8(%rdi),%rdx
9f11(4): lea 0x8(%rdx),%r11
9f15(4): mov %r11,0x8(%rdi)
9f19(5): jmp 0xffffff59(%rip)

"printf_parse" :
9f20(2): push %r15
9f22(2): push %r14
9f24(4): lea 0x20(%rsi),%rcx
9f28(2): push %r13
9f2a(2): push %r12
9f2c(4): lea 0x10(%rdx),%rax
9f30(1): push %rbp
9f31(1): push %rbx
9f32(3): mov %rsi,%r14
9f35(3): mov %rdx,%r15
9f38(2): xor %ebx,%ebx
9f3a(6): mov $0x7,%r9d
9f40(4): sub $0x58,%rsp
9f44(6): mov $0x7,%r10d
9f4a(7): mov $0x0,(%rsi)
9f51(4): mov %rcx,0x8(%rsi)
9f55(5): mov %rcx,0x28(%rsp)
9f5a(7): mov $0xffffffff,%r8
9f61(7): mov $0x0,(%rdx)
9f68(5): mov %rax,0x8(%rsp)
9f6d(4): mov %rax,0x8(%rdx)
9f71(9): mov $0x0,0x18(%rsp)
9f7a(9): mov $0x0,0x10(%rsp)
9f83(9): mov $0x0,0x20(%rsp)
9f8c(2): jmp 0xf(%rip)
9f8e(2): nop 
9f90(2): cmp $0x25,%al
9f92(4): lea 0x1(%rdi),%rbp
9f96(2): jz 0x42(%rip)
9f98(3): mov %rbp,%rdi
9f9b(3): movzx (%rdi),%eax
9f9e(2): test %al,%al
9fa0(2): jnz 0xfffffff0(%rip)
9fa2(4): lea 0x0(%rbx,%rbx,4),%rax
9fa6(4): lea 0x0(%rbx,%rax,2),%rax
9faa(4): mov %rdi,0x0(%rcx,%rax,8)
9fae(5): mov 0x10(%rsp),%rax
9fb3(4): mov %rax,0x10(%r14)
9fb7(5): mov 0x18(%rsp),%rax
9fbc(4): mov %rax,0x18(%r14)
9fc0(2): xor %eax,%eax
9fc2(4): add $0x58,%rsp
9fc6(1): pop %rbx
9fc7(1): pop %rbp
9fc8(2): pop %r12
9fca(2): pop %r13
9fcc(2): pop %r14
9fce(2): pop %r15
9fd0(1): ret near (%rsp)
9fd1(7): nop 0x0(%rax)
9fd8(4): lea 0x0(%rbx,%rbx,4),%rax
9fdc(3): mov %r8,%r13
9fdf(4): lea 0x0(%rbx,%rax,2),%rax
9fe3(4): lea 0x0(%rcx,%rax,8),%r12
9fe7(4): mov %rdi,(%r12)
9feb(9): mov $0x0,0x10(%r12)
9ff4(9): mov $0x0,0x18(%r12)
9ffd(9): mov $0x0,0x20(%r12)
a006(5): mov %r8,0x28(%r12)
a00b(9): mov $0x0,0x30(%r12)
a014(9): mov $0x0,0x38(%r12)
a01d(5): mov %r8,0x40(%r12)
a022(5): mov %r8,0x50(%r12)
a027(4): movzx 0x1(%rdi),%ebx
a02b(3): lea 0xffffffd0(%rbx),%eax
a02e(2): cmp $0x9,%al
a030(2): jnbe 0x3e(%rip)
a032(5): jmp 0x438(%rip)
a037(9): nop 0x0(%rax,%rax,1)
a040(3): cmp $0x2d,%bl
a043(2): jz 0x45(%rip)
a045(3): cmp $0x2b,%bl
a048(2): jz 0x48(%rip)
a04a(3): cmp $0x20,%bl
a04d(2): jz 0x53(%rip)
a04f(3): cmp $0x23,%bl
a052(2): jz 0x5e(%rip)
a054(3): cmp $0x30,%bl
a057(2): jz 0x69(%rip)
a059(3): cmp $0x49,%bl
a05c(2): jnz 0x74(%rip)
a05e(6): or $0x40,0x10(%r12)
a064(4): nop 0x0(%rax)
a068(3): movzx (%rax),%ebx
a06b(3): mov %rax,%rbp
a06e(4): lea 0x1(%rbp),%rax
a072(3): cmp $0x27,%bl
a075(3): mov %rax,%rdx
a078(2): jnz 0xffffffc8(%rip)
a07a(6): or $0x1,0x10(%r12)
a080(2): jmp 0xffffffe8(%rip)
a082(6): nop 0x0(%rax,%rax,1)
a088(6): or $0x2,0x10(%r12)
a08e(2): jmp 0xffffffda(%rip)
a090(6): or $0x4,0x10(%r12)
a096(2): jmp 0xffffffd2(%rip)
a098(8): nop 0x0(%rax,%rax,1)
a0a0(6): or $0x8,0x10(%r12)
a0a6(2): jmp 0xffffffc2(%rip)
a0a8(8): nop 0x0(%rax,%rax,1)
a0b0(6): or $0x10,0x10(%r12)
a0b6(2): jmp 0xffffffb2(%rip)
a0b8(8): nop 0x0(%rax,%rax,1)
a0c0(6): or $0x20,0x10(%r12)
a0c6(2): jmp 0xffffffa2(%rip)
a0c8(8): nop 0x0(%rax,%rax,1)
a0d0(3): cmp $0x2a,%bl
a0d3(6): jz 0x1b6(%rip)
a0d9(3): lea 0xffffffd0(%rbx),%ecx
a0dc(3): cmp $0x9,%cl
a0df(6): jbe 0x418(%rip)
a0e5(3): cmp $0x2e,%bl
a0e8(6): jz 0x2d7(%rip)
a0ee(2): xor %eax,%eax
a0f0(5): mov $0x1,%esi
a0f5(2): jmp 0x32(%rip)
a0f7(9): nop 0x0(%rax,%rax,1)
a100(3): cmp $0x4c,%bl
a103(2): jz 0x3d(%rip)
a105(3): cmp $0x6c,%bl
a108(2): jz 0x18(%rip)
a10a(3): cmp $0x6a,%bl
a10d(2): jz 0x13(%rip)
a10f(2): mov %ebx,%edx
a111(3): and $0xdf,%edx
a114(3): cmp $0x5a,%dl
a117(2): jz 0x9(%rip)
a119(3): cmp $0x74,%bl
a11c(2): jnz 0x2c(%rip)
a11e(2): nop 
a120(3): add $0x8,%eax
a123(4): movzx 0x0(%rbp),%ebx
a127(4): add $0x1,%rbp
a12b(3): cmp $0x68,%bl
a12e(2): jnz 0xffffffd2(%rip)
a130(2): mov %eax,%ecx
a132(2): mov %esi,%edx
a134(3): and $0x1,%ecx
a137(2): shl/sal %cl,%edx
a139(2): or %edx,%eax
a13b(2): jmp 0xffffffe8(%rip)
a13d(3): nop (%rax)
a140(3): or $0x4,%eax
a143(2): jmp 0xffffffe0(%rip)
a145(3): nop (%rax)
a148(3): lea 0xffffffdb(%rbx),%edx
a14b(3): cmp $0x53,%dl
a14e(6): jnbe 0x61d(%rip)
a154(7): lea 0x3231(%rip),%rcx
a15b(3): movzx %dl,%edx
a15e(4): movsxd 0x0(%rcx,%rdx,4),%rdx
a162(3): add %rcx,%rdx
a165(2): jmp %rdx
a167(6): mov $0x10,%r11d
a16d(5): mov $0x73,%ebx
a172(6): nop 0x0(%rax,%rax,1)
a178(4): cmp $0xffffffff,%r13
a17c(6): jz 0x6bb(%rip)
a182(5): mov %r13,0x50(%r12)
a187(3): cmp %r13,%r9
a18a(4): mov 0x8(%r15),%rcx
a18e(6): jbe 0x622(%rip)
a194(3): mov (%r15),%rax
a197(3): mov %rax,%rdx
a19a(4): shl/sal $0x5,%rdx
a19e(3): add %rcx,%rdx
a1a1(3): cmp %r13,%rax
a1a4(2): jnbe 0x22(%rip)
a1a6(a): nop 0x0(%rax,%rax,1)
a1b0(4): add $0x1,%rax
a1b4(6): mov $0x0,(%rdx)
a1ba(4): add $0x20,%rdx
a1be(3): cmp %r13,%rax
a1c1(2): jbe 0xffffffef(%rip)
a1c3(3): mov %rax,(%r15)
a1c6(4): shl/sal $0x5,%r13
a1ca(4): lea 0x0(%rcx,%r13,1),%rax
a1ce(2): mov (%rax),%edx
a1d0(2): test %edx,%edx
a1d2(6): jnz 0x5d1(%rip)
a1d8(3): mov %r11d,(%rax)
a1db(5): mov %bl,0x48(%r12)
a1e0(3): mov (%r14),%rax
a1e3(5): mov %rbp,0x8(%r12)
a1e8(4): lea 0x1(%rax),%rbx
a1ec(3): cmp %rbx,%r10
a1ef(3): mov %rbx,(%r14)
a1f2(6): jnbe 0x8e(%rip)
a1f8(3): test %r10,%r10
a1fb(6): js 0x9ac(%rip)
a201(3): add %r10,%r10
a204(a): mov $0x209622091746699450,%rax
a20e(3): cmp %rax,%r10
a211(6): jnbe 0x996(%rip)
a217(4): lea 0x0(%r10,%r10,4),%rax
a21b(4): mov 0x8(%r14),%rdi
a21f(5): cmp %rdi,0x28(%rsp)
a224(5): mov %r9,0x40(%rsp)
a229(5): mov %r10,0x38(%rsp)
a22e(4): lea 0x0(%r10,%rax,2),%rax
a232(5): mov %r8,0x30(%rsp)
a237(8): lea 0x0(,%rax,8),%rsi
a23f(6): jz 0x6be(%rip)
a245(5): call 0xffff780b(%rip)
a24a(3): test %rax,%rax
a24d(3): mov %rax,%rcx
a250(5): mov 0x30(%rsp),%r8
a255(5): mov 0x38(%rsp),%r10
a25a(5): mov 0x40(%rsp),%r9
a25f(6): jz 0x948(%rip)
a265(5): mov 0x28(%rsp),%rax
a26a(4): cmp 0x8(%r14),%rax
a26e(3): mov (%r14),%rbx
a271(6): jz 0x6af(%rip)
a277(4): mov %rcx,0x8(%r14)
a27b(5): jmp 0xfffffd1d(%rip)
a280(4): mov 0x8(%r14),%rcx
a284(5): jmp 0xfffffd14(%rip)
a289(5): mov 0x10(%rsp),%rsi
a28e(5): mov $0x1,%ecx
a293(5): mov %rbp,0x18(%r12)
a298(5): mov %rax,0x20(%r12)
a29d(3): test %rsi,%rsi
a2a0(4): cmovne %rsi,%rcx
a2a4(5): mov %rcx,0x10(%rsp)
a2a9(4): movzx 0x1(%rbp),%ecx
a2ad(3): lea 0xffffffd0(%rcx),%esi
a2b0(4): cmp $0x9,%sil
a2b4(6): jbe 0x2e1(%rip)
a2ba(5): mov 0x20(%rsp),%rsi
a2bf(4): cmp $0xffffffff,%rsi
a2c3(4): lea 0x1(%rsi),%rdx
a2c7(5): mov %rsi,0x28(%r12)
a2cc(6): jz 0x49f(%rip)
a2d2(5): mov 0x20(%rsp),%rbx
a2d7(3): mov %rax,%rbp
a2da(5): mov %rdx,0x20(%rsp)
a2df(3): cmp %rbx,%r9
a2e2(4): mov 0x8(%r15),%rcx
a2e6(6): jnbe 0x67c(%rip)
a2ec(3): add %r9,%r9
a2ef(4): lea 0x1(%rbx),%rax
a2f3(3): cmp %rbx,%r9
a2f6(4): cmovbe %rax,%r9
a2fa(a): mov $0x576460752303423487,%rax
a304(3): cmp %rax,%r9
a307(6): jnbe 0x8a4(%rip)
a30d(3): mov %r9,%rsi
a310(5): mov %r9,0x40(%rsp)
a315(5): mov %r10,0x38(%rsp)
a31a(4): shl/sal $0x5,%rsi
a31e(5): cmp %rcx,0x8(%rsp)
a323(5): mov %r8,0x30(%rsp)
a328(6): jz 0x719(%rip)
a32e(3): mov %rcx,%rdi
a331(5): call 0xffff771f(%rip)
a336(4): mov 0x8(%r15),%rdx
a33a(5): mov 0x30(%rsp),%r8
a33f(3): mov %rax,%rcx
a342(5): mov 0x38(%rsp),%r10
a347(5): mov 0x40(%rsp),%r9
a34c(3): test %rcx,%rcx
a34f(6): jz 0x8b8(%rip)
a355(5): cmp %rdx,0x8(%rsp)
a35a(3): mov (%r15),%rax
a35d(6): jz 0x7be(%rip)
a363(4): mov %rcx,0x8(%r15)
a367(3): mov %rax,%rdx
a36a(4): shl/sal $0x5,%rdx
a36e(3): add %rcx,%rdx
a371(3): cmp %rbx,%rax
a374(2): jnbe 0x22(%rip)
a376(a): nop 0x0(%rax,%rax,1)
a380(4): add $0x1,%rax
a384(6): mov $0x0,(%rdx)
a38a(4): add $0x20,%rdx
a38e(3): cmp %rbx,%rax
a391(2): jbe 0xffffffef(%rip)
a393(3): mov %rax,(%r15)
a396(4): shl/sal $0x5,%rbx
a39a(4): lea 0x0(%rcx,%rbx,1),%rax
a39e(2): mov (%rax),%edx
a3a0(2): test %edx,%edx
a3a2(6): jnz 0x4d9(%rip)
a3a8(6): mov $0x5,(%rax)
a3ae(4): movzx 0x0(%rbp),%ebx
a3b2(4): lea 0x1(%rbp),%rdx
a3b6(3): cmp $0x2e,%bl
a3b9(6): jnz 0xfffffd35(%rip)
a3bf(4): cmp $0x2a,0x1(%rbp)
a3c3(5): mov %rbp,0x30(%r12)
a3c8(6): jnz 0x186(%rip)
a3ce(5): mov 0x18(%rsp),%rsi
a3d3(4): lea 0x2(%rbp),%r11
a3d7(5): mov $0x2,%eax
a3dc(5): mov %r11,0x38(%r12)
a3e1(4): cmp $0x2,%rsi
a3e5(4): cmovnb %rsi,%rax
a3e9(5): mov %rax,0x18(%rsp)
a3ee(4): movsx 0x2(%rbp),%eax
a3f2(3): lea 0xffffffd0(%rax),%edx
a3f5(3): cmp $0x9,%dl
a3f8(6): jbe 0x694(%rip)
a3fe(5): mov 0x40(%r12),%rbx
a403(4): cmp $0xffffffff,%rbx
a407(6): jz 0x65e(%rip)
a40d(3): cmp %rbx,%r9
a410(4): mov 0x8(%r15),%rcx
a414(6): jbe 0x56b(%rip)
a41a(3): mov (%r15),%rax
a41d(3): mov %rax,%rdx
a420(4): shl/sal $0x5,%rdx
a424(3): add %rcx,%rdx
a427(3): cmp %rbx,%rax
a42a(2): jnbe 0x1c(%rip)
a42c(4): nop 0x0(%rax)
a430(4): add $0x1,%rax
a434(6): mov $0x0,(%rdx)
a43a(4): add $0x20,%rdx
a43e(3): cmp %rbx,%rax
a441(2): jbe 0xffffffef(%rip)
a443(3): mov %rax,(%r15)
a446(4): shl/sal $0x5,%rbx
a44a(4): lea 0x0(%rcx,%rbx,1),%rax
a44e(2): mov (%rax),%edx
a450(2): test %edx,%edx
a452(6): jnz 0x518(%rip)
a458(6): mov $0x5,(%rax)
a45e(3): mov %r11,%rbp
a461(4): movzx (%r11),%ebx
a465(5): jmp 0xfffffc89(%rip)
a46a(3): mov %rbp,%rax
a46d(3): nop (%rax)
a470(4): add $0x1,%rax
a474(3): movzx (%rax),%edx
a477(3): lea 0xffffffd0(%rdx),%ecx
a47a(3): cmp $0x9,%cl
a47d(2): jbe 0xfffffff3(%rip)
a47f(3): cmp $0x24,%dl
a482(3): mov %r8,%r13
a485(6): jnz 0xfffffbe9(%rip)
a48b(2): xor %edx,%edx
a48d(3): movsx %bl,%eax
a490(a): mov $0x1844674407370955161,%rdi
a49a(3): mov %r8,%rsi
a49d(3): sub $0x30,%eax
a4a0(3): cmp %rdi,%rdx
a4a3(2): cwde 
a4a5(2): jnbe 0x9(%rip)
a4a7(4): lea 0x0(%rdx,%rdx,4),%rsi
a4ab(3): add %rsi,%rsi
a4ae(3): mov %rbp,%rcx
a4b1(3): add %rsi,%rax
a4b4(4): movzx 0x1(%rbp),%ebx
a4b8(4): setb %sil
a4bc(4): add $0x1,%rbp
a4c0(3): mov %rax,%rdx
a4c3(4): movzx %sil,%esi
a4c7(3): test %rsi,%rsi
a4ca(3): lea 0xffffffd0(%rbx),%edi
a4cd(6): jnz 0x391(%rip)
a4d3(4): cmp $0x9,%dil
a4d7(2): jbe 0xffffffb6(%rip)
a4d9(3): mov %rax,%r13
a4dc(4): sub $0x1,%r13
a4e0(4): cmp $0xfffffffd,%r13
a4e4(6): jnbe 0x287(%rip)
a4ea(4): lea 0x2(%rcx),%rbp
a4ee(4): movzx 0x2(%rcx),%ebx
a4f2(5): jmp 0xfffffb7c(%rip)
a4f7(5): mov %rbp,0x18(%r12)
a4fc(4): movzx 0x0(%rbp),%edi
a500(3): mov %rbp,%rsi
a503(3): lea 0xffffffd0(%rdi),%ecx
a506(3): cmp $0x9,%cl
a509(2): jbe 0xe(%rip)
a50b(2): jmp 0x35(%rip)
a50d(3): nop (%rax)
a510(3): mov %rax,%rbp
a513(4): add $0x1,%rax
a517(3): movzx (%rax),%edi
a51a(3): lea 0xffffffd0(%rdi),%edx
a51d(3): cmp $0x9,%dl
a520(2): jbe 0xfffffff0(%rip)
a522(3): mov %rax,%rcx
a525(4): lea 0x2(%rbp),%rdx
a529(3): mov %rax,%rbp
a52c(3): sub %rsi,%rcx
a52f(5): mov 0x10(%rsp),%rsi
a534(3): cmp %rcx,%rsi
a537(4): cmovnb %rsi,%rcx
a53b(5): mov %rcx,0x10(%rsp)
a540(5): mov %rbp,0x20(%r12)
a545(4): movzx 0x0(%rbp),%ebx
a549(5): jmp 0xfffffb9c(%rip)
a54e(4): movzx 0x1(%rbp),%eax
a552(3): sub $0x30,%eax
a555(2): cmp $0x9,%al
a557(2): jnbe 0x17(%rip)
a559(7): nop 0x0(%rax)
a560(4): add $0x1,%rdx
a564(3): movzx (%rdx),%eax
a567(3): sub $0x30,%eax
a56a(2): cmp $0x9,%al
a56c(2): jbe 0xfffffff4(%rip)
a56e(5): mov 0x18(%rsp),%rsi
a573(3): mov %rdx,%rax
a576(5): mov %rdx,0x38(%r12)
a57b(3): sub %rbp,%rax
a57e(3): movzx (%rdx),%ebx
a581(3): mov %rdx,%rbp
a584(3): cmp %rax,%rsi
a587(4): cmovnb %rsi,%rax
a58b(5): mov %rax,0x18(%rsp)
a590(5): jmp 0xfffffb5e(%rip)
a595(3): mov %rax,%rsi
a598(4): add $0x1,%rsi
a59c(3): movzx (%rsi),%edi
a59f(4): lea 0xffffffd0(%rdi),%r11d
a5a3(4): cmp $0x9,%r11b
a5a7(2): jbe 0xfffffff1(%rip)
a5a9(4): cmp $0x24,%dil
a5ad(6): jnz 0xfffffd0d(%rip)
a5b3(2): xor %esi,%esi
a5b5(3): movsx %cl,%eax
a5b8(a): mov $0x1844674407370955161,%rdi
a5c2(3): mov %r8,%rcx
a5c5(3): sub $0x30,%eax
a5c8(3): cmp %rdi,%rsi
a5cb(2): cwde 
a5cd(2): jnbe 0x9(%rip)
a5cf(4): lea 0x0(%rsi,%rsi,4),%rcx
a5d3(3): add %rcx,%rcx
a5d6(3): mov %rdx,%rbp
a5d9(3): xor %r11d,%r11d
a5dc(3): add %rcx,%rax
a5df(4): movzx 0x1(%rdx),%ecx
a5e3(4): setb %r11b
a5e7(4): add $0x1,%rdx
a5eb(3): mov %rax,%rsi
a5ee(3): test %r11,%r11
a5f1(3): lea 0xffffffd0(%rcx),%edi
a5f4(6): jnz 0x50a(%rip)
a5fa(4): cmp $0x9,%dil
a5fe(2): jbe 0xffffffb7(%rip)
a600(4): lea 0xffffffff(%rax),%rbx
a604(4): cmp $0xfffffffd,%rbx
a608(6): jnbe 0x163(%rip)
a60e(5): mov %rbx,0x28(%r12)
a613(4): add $0x2,%rbp
a617(5): jmp 0xfffffcc8(%rip)
a61c(3): cmp $0xf,%eax
a61f(6): mov $0x16,%r11d
a625(6): jnle 0xfffffb53(%rip)
a62b(2): test $0x4,%al
a62d(6): jnz 0xfffffb4b(%rip)
a633(3): cmp $0x7,%eax
a636(6): mov $0x15,%r11d
a63c(6): jnle 0xfffffb3c(%rip)
a642(2): test $0x2,%al
a644(6): mov $0x12,%r11d
a64a(6): jnz 0xfffffb2e(%rip)
a650(3): xor %r11d,%r11d
a653(2): test $0x1,%al
a655(4): setz %r11b
a659(4): add $0x13,%r11d
a65d(5): jmp 0xfffffb1b(%rip)
a662(6): nop 0x0(%rax,%rax,1)
a668(3): xor %r11d,%r11d
a66b(3): cmp $0x7,%eax
a66e(4): setnle %r11b
a672(4): add $0xd,%r11d
a676(5): jmp 0xfffffb02(%rip)
a67b(3): cmp $0xf,%eax
a67e(6): mov $0x9,%r11d
a684(6): jnle 0xfffffaf4(%rip)
a68a(2): test $0x4,%al
a68c(6): jnz 0xfffffaec(%rip)
a692(3): cmp $0x7,%eax
a695(6): mov $0x7,%r11d
a69b(6): jnle 0xfffffadd(%rip)
a6a1(2): test $0x2,%al
a6a3(6): mov $0x1,%r11d
a6a9(6): jnz 0xfffffacf(%rip)
a6af(3): and $0x1,%eax
a6b2(3): cmp $0x1,%eax
a6b5(3): sbb %r11d,%r11d
a6b8(4): and $0x2,%r11d
a6bc(4): add $0x3,%r11d
a6c0(5): jmp 0xfffffab8(%rip)
a6c5(3): nop (%rax)
a6c8(3): xor %r11d,%r11d
a6cb(3): cmp $0x7,%eax
a6ce(4): setnle %r11b
a6d2(4): add $0xf,%r11d
a6d6(5): jmp 0xfffffaa2(%rip)
a6db(3): cmp $0xf,%eax
a6de(6): mov $0xc,%r11d
a6e4(6): jnle 0xfffffa94(%rip)
a6ea(3): xor %r11d,%r11d
a6ed(2): test $0x4,%al
a6ef(4): setnz %r11b
a6f3(4): add $0xb,%r11d
a6f7(5): jmp 0xfffffa81(%rip)
a6fc(6): mov $0xe,%r11d
a702(5): mov $0x63,%ebx
a707(5): jmp 0xfffffa71(%rip)
a70c(3): cmp $0xf,%eax
a70f(6): mov $0xa,%r11d
a715(6): jnle 0xfffffa63(%rip)
a71b(2): test $0x4,%al
a71d(6): jnz 0xfffffa5b(%rip)
a723(3): cmp $0x7,%eax
a726(6): mov $0x8,%r11d
a72c(6): jnle 0xfffffa4c(%rip)
a732(2): test $0x2,%al
a734(6): mov $0x2,%r11d
a73a(6): jnz 0xfffffa3e(%rip)
a740(3): and $0x1,%eax
a743(3): cmp $0x1,%eax
a746(3): sbb %r11d,%r11d
a749(4): and $0x2,%r11d
a74d(4): add $0x4,%r11d
a751(5): jmp 0xfffffa27(%rip)
a756(a): nop 0x0(%rax,%rax,1)
a760(6): mov $0x11,%r11d
a766(5): jmp 0xfffffa12(%rip)
a76b(4): mov 0x8(%r15),%rcx
a76f(5): cmp %rcx,0x8(%rsp)
a774(2): jz 0xa(%rip)
a776(3): mov %rcx,%rdi
a779(5): call 0xffff7057(%rip)
a77e(4): mov 0x8(%r14),%rdi
a782(5): cmp %rdi,0x28(%rsp)
a787(2): jz 0x7(%rip)
a789(5): call 0xffff7047(%rip)
a78e(5): call 0xffff7062(%rip)
a793(6): mov $0x16,(%rax)
a799(5): mov $0xffffffff,%eax
a79e(5): jmp 0xfffff824(%rip)
a7a3(3): cmp %r11d,%edx
a7a6(6): jz 0xfffffa35(%rip)
a7ac(2): jmp 0xffffffc3(%rip)
a7ae(2): nop 
a7b0(3): add %r9,%r9
a7b3(4): lea 0x1(%r13),%rax
a7b7(3): cmp %r13,%r9
a7ba(4): cmovbe %rax,%r9
a7be(a): mov $0x576460752303423487,%rax
a7c8(3): cmp %rax,%r9
a7cb(6): jnbe 0x3e0(%rip)
a7d1(3): mov %r9,%rsi
a7d4(5): mov %r9,0x48(%rsp)
a7d9(5): mov %r10,0x40(%rsp)
a7de(4): shl/sal $0x5,%rsi
a7e2(5): cmp %rcx,0x8(%rsp)
a7e7(5): mov %r8,0x38(%rsp)
a7ec(5): mov %r11d,0x30(%rsp)
a7f1(6): jz 0xa0(%rip)
a7f7(3): mov %rcx,%rdi
a7fa(5): call 0xffff7256(%rip)
a7ff(3): test %rax,%rax
a802(3): mov %rax,%rcx
a805(5): mov 0x30(%rsp),%r11d
a80a(5): mov 0x38(%rsp),%r8
a80f(5): mov 0x40(%rsp),%r10
a814(5): mov 0x48(%rsp),%r9
a819(6): jz 0x38e(%rip)
a81f(5): mov 0x8(%rsp),%rax
a824(4): cmp 0x8(%r15),%rax
a828(6): jz 0x91(%rip)
a82e(4): mov %rcx,0x8(%r15)
a832(5): jmp 0xfffff962(%rip)
a837(5): mov 0x20(%rsp),%rsi
a83c(4): cmp $0xffffffff,%rsi
a840(4): lea 0x1(%rsi),%rax
a844(5): mov %rsi,0x50(%r12)
a849(6): jz 0xffffff22(%rip)
a84f(5): mov 0x20(%rsp),%r13
a854(5): mov %rax,0x20(%rsp)
a859(5): jmp 0xfffff92e(%rip)
a85e(4): cmp $0x9,%dil
a862(6): jnbe 0xffffff09(%rip)
a868(3): movsx %bl,%eax
a86b(3): mov %r8,%rsi
a86e(3): mov %rbp,%rcx
a871(3): sub $0x30,%eax
a874(2): cwde 
a876(5): jmp 0xfffffc3b(%rip)
a87b(3): cmp $0x5,%edx
a87e(6): jnz 0xfffffef1(%rip)
a884(4): movzx 0x0(%rbp),%ebx
a888(4): lea 0x1(%rbp),%rdx
a88c(5): jmp 0xfffff859(%rip)
a891(3): mov %rsi,%rdi
a894(5): call 0xffff715c(%rip)
a899(3): test %rax,%rax
a89c(3): mov %rax,%rcx
a89f(5): mov 0x30(%rsp),%r11d
a8a4(5): mov 0x38(%rsp),%r8
a8a9(5): mov 0x40(%rsp),%r10
a8ae(5): mov 0x48(%rsp),%r9
a8b3(6): jz 0x169(%rip)
a8b9(3): mov (%r15),%rdx
a8bc(5): mov 0x8(%rsp),%rsi
a8c1(3): mov %rcx,%rdi
a8c4(5): mov %r9,0x48(%rsp)
a8c9(5): mov %r10,0x40(%rsp)
a8ce(5): mov %r8,0x38(%rsp)
a8d3(5): mov %r11d,0x30(%rsp)
a8d8(4): shl/sal $0x5,%rdx
a8dc(5): call 0xffff70f4(%rip)
a8e1(5): mov 0x48(%rsp),%r9
a8e6(5): mov 0x40(%rsp),%r10
a8eb(3): mov %rax,%rcx
a8ee(5): mov 0x38(%rsp),%r8
a8f3(5): mov 0x30(%rsp),%r11d
a8f8(5): jmp 0xffffff36(%rip)
a8fd(3): mov %rsi,%rdi
a900(5): call 0xffff70f0(%rip)
a905(3): test %rax,%rax
a908(3): mov %rax,%rcx
a90b(5): mov 0x30(%rsp),%r8
a910(5): mov 0x38(%rsp),%r10
a915(5): mov 0x40(%rsp),%r9
a91a(6): jz 0xef(%rip)
a920(4): lea 0x0(%rbx,%rbx,4),%rax
a924(5): mov 0x28(%rsp),%rsi
a929(3): mov %rcx,%rdi
a92c(5): mov %r9,0x40(%rsp)
a931(5): mov %r10,0x38(%rsp)
a936(4): lea 0x0(%rbx,%rax,2),%rdx
a93a(5): mov %r8,0x30(%rsp)
a93f(4): shl/sal $0x3,%rdx
a943(5): call 0xffff708d(%rip)
a948(3): mov (%r14),%rbx
a94b(3): mov %rax,%rcx
a94e(5): mov 0x40(%rsp),%r9
a953(5): mov 0x38(%rsp),%r10
a958(5): mov 0x30(%rsp),%r8
a95d(5): jmp 0xfffff91a(%rip)
a962(3): mov (%r15),%rax
a965(5): jmp 0xfffffa02(%rip)
a96a(3): cmp $0x5,%edx
a96d(6): jnz 0xfffffe02(%rip)
a973(4): movzx (%r11),%ebx
a977(3): mov %r11,%rbp
a97a(5): jmp 0xfffff774(%rip)
a97f(3): add %r9,%r9
a982(4): lea 0x1(%rbx),%rax
a986(3): cmp %rbx,%r9
a989(4): cmovbe %rax,%r9
a98d(a): mov $0x576460752303423487,%rax
a997(3): cmp %rax,%r9
a99a(6): jnbe 0x211(%rip)
a9a0(3): mov %r9,%rsi
a9a3(5): mov %r9,0x48(%rsp)
a9a8(5): mov %r10,0x40(%rsp)
a9ad(4): shl/sal $0x5,%rsi
a9b1(5): cmp %rcx,0x8(%rsp)
a9b6(5): mov %r8,0x38(%rsp)
a9bb(5): mov %r11,0x30(%rsp)
a9c0(6): jz 0x1be(%rip)
a9c6(3): mov %rcx,%rdi
a9c9(5): call 0xffff7087(%rip)
a9ce(4): mov 0x8(%r15),%rdx
a9d2(5): mov 0x30(%rsp),%r11
a9d7(3): mov %rax,%rcx
a9da(5): mov 0x38(%rsp),%r8
a9df(5): mov 0x40(%rsp),%r10
a9e4(5): mov 0x48(%rsp),%r9
a9e9(3): test %rcx,%rcx
a9ec(6): jz 0x21b(%rip)
a9f2(5): cmp %rdx,0x8(%rsp)
a9f7(3): mov (%r15),%rax
a9fa(6): jz 0x1c6(%rip)
aa00(4): mov %rcx,0x8(%r15)
aa04(5): jmp 0xfffffa19(%rip)
aa09(4): mov 0x8(%r15),%rcx
aa0d(5): cmp %rcx,0x8(%rsp)
aa12(2): jz 0x1a(%rip)
aa14(3): mov %rcx,%rdi
aa17(5): call 0xffff6db9(%rip)
aa1c(4): mov 0x8(%r14),%rdi
aa20(5): cmp %rdi,0x28(%rsp)
aa25(2): jz 0x7(%rip)
aa27(5): call 0xffff6da9(%rip)
aa2c(5): call 0xffff6dc4(%rip)
aa31(6): mov $0xc,(%rax)
aa37(5): mov $0xffffffff,%eax
aa3c(5): jmp 0xfffff586(%rip)
aa41(3): mov %rsi,%rdi
aa44(5): call 0xffff6fac(%rip)
aa49(5): mov 0x8(%rsp),%rdx
aa4e(3): mov %rax,%rcx
aa51(5): mov 0x40(%rsp),%r9
aa56(5): mov 0x38(%rsp),%r10
aa5b(5): mov 0x30(%rsp),%r8
aa60(5): jmp 0xfffff8ec(%rip)
aa65(5): mov 0x20(%rsp),%rsi
aa6a(4): cmp $0xffffffff,%rsi
aa6e(4): lea 0x1(%rsi),%rax
aa72(5): mov %rsi,0x40(%r12)
aa77(6): jz 0xfffffcf4(%rip)
aa7d(5): mov 0x20(%rsp),%rbx
aa82(5): mov %rax,0x20(%rsp)
aa87(5): jmp 0xfffff986(%rip)
aa8c(3): mov %r11,%rdx
aa8f(4): add $0x1,%rdx
aa93(3): movzx (%rdx),%ecx
aa96(3): lea 0xffffffd0(%rcx),%esi
aa99(4): cmp $0x9,%sil
aa9d(2): jbe 0xfffffff2(%rip)
aa9f(3): cmp $0x24,%cl
aaa2(6): jnz 0xfffff95c(%rip)
aaa8(2): xor %ecx,%ecx
aaaa(a): mov $0x1844674407370955161,%rsi
aab4(3): sub $0x30,%eax
aab7(3): mov %r8,%rdx
aaba(3): cmp %rsi,%rcx
aabd(2): cwde 
aabf(2): jnbe 0x9(%rip)
aac1(4): lea 0x0(%rcx,%rcx,4),%rdx
aac5(3): add %rdx,%rdx
aac8(3): mov %r11,%rsi
aacb(2): xor %ebx,%ebx
aacd(3): add %rax,%rdx
aad0(5): movsx 0x1(%r11),%eax
aad5(3): setb %bl
aad8(4): add $0x1,%r11
aadc(3): mov %rdx,%rcx
aadf(3): test %rbx,%rbx
aae2(3): lea 0xffffffd0(%rax),%edi
aae5(2): jz 0x73(%rip)
aae7(4): cmp $0x9,%dil
aaeb(6): jnbe 0xfffffc80(%rip)
aaf1(3): sub $0x30,%eax
aaf4(3): mov %r8,%rdx
aaf7(3): mov %r11,%rsi
aafa(2): cwde 
aafc(2): jmp 0xffffffcf(%rip)
aafe(4): cmp $0x9,%dil
ab02(6): jnbe 0xfffffc69(%rip)
ab08(3): movsx %cl,%eax
ab0b(3): mov %rdx,%rbp
ab0e(3): mov %r8,%rcx
ab11(3): sub $0x30,%eax
ab14(2): cwde 
ab16(5): jmp 0xfffffac3(%rip)
ab1b(5): mov 0x8(%rsp),%rsi
ab20(4): shl/sal $0x5,%rax
ab24(3): mov %rcx,%rdi
ab27(3): mov %rax,%rdx
ab2a(5): mov %r9,0x40(%rsp)
ab2f(5): mov %r10,0x38(%rsp)
ab34(5): mov %r8,0x30(%rsp)
ab39(5): call 0xffff6e97(%rip)
ab3e(5): mov 0x40(%rsp),%r9
ab43(3): mov %rax,%rcx
ab46(5): mov 0x38(%rsp),%r10
ab4b(3): mov (%r15),%rax
ab4e(5): mov 0x30(%rsp),%r8
ab53(5): jmp 0xfffff810(%rip)
ab58(4): cmp $0x9,%dil
ab5c(6): jbe 0xffffff4e(%rip)
ab62(4): lea 0xffffffff(%rdx),%rbx
ab66(4): cmp $0xfffffffd,%rbx
ab6a(6): jnbe 0xfffffc01(%rip)
ab70(5): mov %rbx,0x40(%r12)
ab75(4): lea 0x2(%rsi),%r11
ab79(5): jmp 0xfffff894(%rip)
ab7e(3): mov %rsi,%rdi
ab81(5): call 0xffff6e6f(%rip)
ab86(5): mov 0x8(%rsp),%rdx
ab8b(3): mov %rax,%rcx
ab8e(5): mov 0x48(%rsp),%r9
ab93(5): mov 0x40(%rsp),%r10
ab98(5): mov 0x38(%rsp),%r8
ab9d(5): mov 0x30(%rsp),%r11
aba2(5): jmp 0xfffffe47(%rip)
aba7(4): mov 0x8(%r15),%rcx
abab(5): cmp %rcx,0x8(%rsp)
abb0(6): jnz 0xfffffe64(%rip)
abb6(5): jmp 0xfffffe66(%rip)
abbb(5): nop 0x0(%rax,%rax,1)
abc0(5): mov 0x8(%rsp),%rsi
abc5(4): shl/sal $0x5,%rax
abc9(3): mov %rcx,%rdi
abcc(3): mov %rax,%rdx
abcf(5): mov %r9,0x48(%rsp)
abd4(5): mov %r10,0x40(%rsp)
abd9(5): mov %r8,0x38(%rsp)
abde(5): mov %r11,0x30(%rsp)
abe3(5): call 0xffff6ded(%rip)
abe8(5): mov 0x48(%rsp),%r9
abed(3): mov %rax,%rcx
abf0(5): mov 0x40(%rsp),%r10
abf5(3): mov (%r15),%rax
abf8(5): mov 0x38(%rsp),%r8
abfd(5): mov 0x30(%rsp),%r11
ac02(5): jmp 0xfffffdfe(%rip)
ac07(3): mov %rdx,%rcx
ac0a(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
ac10(2): push %r15
ac12(2): push %r14
ac14(3): mov %rdx,%r15
ac17(2): push %r13
ac19(2): push %r12
ac1b(7): lea 0x204dae(%rip),%r12
ac22(1): push %rbp
ac23(7): lea 0x204dae(%rip),%rbp
ac2a(1): push %rbx
ac2b(3): mov %edi,%r13d
ac2e(3): mov %rsi,%r14
ac31(3): sub %r12,%rbp
ac34(4): sub $0x8,%rsp
ac38(4): sar $0x3,%rbp
ac3c(5): call 0xffff6b54(%rip)
ac41(3): test %rbp,%rbp
ac44(2): jz 0x22(%rip)
ac46(2): xor %ebx,%ebx
ac48(8): nop 0x0(%rax,%rax,1)
ac50(3): mov %r15,%rdx
ac53(3): mov %r14,%rsi
ac56(3): mov %r13d,%edi
ac59(4): call 0x0(%r12,%rbx,8)
ac5d(4): add $0x1,%rbx
ac61(3): cmp %rbx,%rbp
ac64(2): jnz 0xffffffec(%rip)
ac66(4): add $0x8,%rsp
ac6a(1): pop %rbx
ac6b(1): pop %rbp
ac6c(2): pop %r12
ac6e(2): pop %r13
ac70(2): pop %r14
ac72(2): pop %r15
ac74(1): ret near (%rsp)

"atexit" :
ac90(7): mov 0x205371(%rip),%rdx
ac97(2): xor %esi,%esi
ac99(5): jmp 0xffff6e47(%rip)

"_fini" :
aca0(4): sub $0x8,%rsp
aca4(4): add $0x8,%rsp
aca8(1): ret near (%rsp)

