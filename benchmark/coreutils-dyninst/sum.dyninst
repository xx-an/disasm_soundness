
"__uflow@plt" :
15c0(6): jmp 0x20785a(%rip)
15c6(5): push $0x0

"getenv@plt" :
15d0(6): jmp 0x207852(%rip)
15d6(5): push $0x1

"free@plt" :
15e0(6): jmp 0x20784a(%rip)
15e6(5): push $0x2

"abort@plt" :
15f0(6): jmp 0x207842(%rip)
15f6(5): push $0x3

"__errno_location@plt" :
1600(6): jmp 0x20783a(%rip)
1606(5): push $0x4

"strncmp@plt" :
1610(6): jmp 0x207832(%rip)
1616(5): push $0x5

"_exit@plt" :
1620(6): jmp 0x20782a(%rip)
1626(5): push $0x6

"__fpending@plt" :
1630(6): jmp 0x207822(%rip)
1636(5): push $0x7

"localeconv@plt" :
1640(6): jmp 0x20781a(%rip)
1646(5): push $0x8

"textdomain@plt" :
1650(6): jmp 0x207812(%rip)
1656(5): push $0x9

"fclose@plt" :
1660(6): jmp 0x20780a(%rip)
1666(5): push $0xa

"bindtextdomain@plt" :
1670(6): jmp 0x207802(%rip)
1676(5): push $0xb

"dcgettext@plt" :
1680(6): jmp 0x2077fa(%rip)
1686(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
1690(6): jmp 0x2077f2(%rip)
1696(5): push $0xd

"strlen@plt" :
16a0(6): jmp 0x2077ea(%rip)
16a6(5): push $0xe

"__stack_chk_fail@plt" :
16b0(6): jmp 0x2077e2(%rip)
16b6(5): push $0xf

"getopt_long@plt" :
16c0(6): jmp 0x2077da(%rip)
16c6(5): push $0x10

"mbrtowc@plt" :
16d0(6): jmp 0x2077d2(%rip)
16d6(5): push $0x11

"strchr@plt" :
16e0(6): jmp 0x2077ca(%rip)
16e6(5): push $0x12

"__overflow@plt" :
16f0(6): jmp 0x2077c2(%rip)
16f6(5): push $0x13

"strrchr@plt" :
1700(6): jmp 0x2077ba(%rip)
1706(5): push $0x14

"lseek@plt" :
1710(6): jmp 0x2077b2(%rip)
1716(5): push $0x15

"__assert_fail@plt" :
1720(6): jmp 0x2077aa(%rip)
1726(5): push $0x16

"__strtoul_internal@plt" :
1730(6): jmp 0x2077a2(%rip)
1736(5): push $0x17

"memset@plt" :
1740(6): jmp 0x20779a(%rip)
1746(5): push $0x18

"close@plt" :
1750(6): jmp 0x207792(%rip)
1756(5): push $0x19

"posix_fadvise@plt" :
1760(6): jmp 0x20778a(%rip)
1766(5): push $0x1a

"read@plt" :
1770(6): jmp 0x207782(%rip)
1776(5): push $0x1b

"memcmp@plt" :
1780(6): jmp 0x20777a(%rip)
1786(5): push $0x1c

"fputs_unlocked@plt" :
1790(6): jmp 0x207772(%rip)
1796(5): push $0x1d

"calloc@plt" :
17a0(6): jmp 0x20776a(%rip)
17a6(5): push $0x1e

"__memcpy_chk@plt" :
17b0(6): jmp 0x207762(%rip)
17b6(5): push $0x1f

"memcpy@plt" :
17c0(6): jmp 0x20775a(%rip)
17c6(5): push $0x20

"fileno@plt" :
17d0(6): jmp 0x207752(%rip)
17d6(5): push $0x21

"malloc@plt" :
17e0(6): jmp 0x20774a(%rip)
17e6(5): push $0x22

"fflush@plt" :
17f0(6): jmp 0x207742(%rip)
17f6(5): push $0x23

"nl_langinfo@plt" :
1800(6): jmp 0x20773a(%rip)
1806(5): push $0x24

"__freading@plt" :
1810(6): jmp 0x207732(%rip)
1816(5): push $0x25

"realloc@plt" :
1820(6): jmp 0x20772a(%rip)
1826(5): push $0x26

"setlocale@plt" :
1830(6): jmp 0x207722(%rip)
1836(5): push $0x27

"__printf_chk@plt" :
1840(6): jmp 0x20771a(%rip)
1846(5): push $0x28

"setvbuf@plt" :
1850(6): jmp 0x207712(%rip)
1856(5): push $0x29

"memmove@plt" :
1860(6): jmp 0x20770a(%rip)
1866(5): push $0x2a

"error@plt" :
1870(6): jmp 0x207702(%rip)
1876(5): push $0x2b

"open@plt" :
1880(6): jmp 0x2076fa(%rip)
1886(5): push $0x2c

"fseeko@plt" :
1890(6): jmp 0x2076f2(%rip)
1896(5): push $0x2d

"fopen@plt" :
18a0(6): jmp 0x2076ea(%rip)
18a6(5): push $0x2e

"__cxa_atexit@plt" :
18b0(6): jmp 0x2076e2(%rip)
18b6(5): push $0x2f

"exit@plt" :
18c0(6): jmp 0x2076da(%rip)
18c6(5): push $0x30

"fwrite@plt" :
18d0(6): jmp 0x2076d2(%rip)
18d6(5): push $0x31

"__fprintf_chk@plt" :
18e0(6): jmp 0x2076ca(%rip)
18e6(5): push $0x32

"mbsinit@plt" :
18f0(6): jmp 0x2076c2(%rip)
18f6(5): push $0x33

"iswprint@plt" :
1900(6): jmp 0x2076ba(%rip)
1906(5): push $0x34

"__ctype_b_loc@plt" :
1910(6): jmp 0x2076b2(%rip)
1916(5): push $0x35

"__sprintf_chk@plt" :
1920(6): jmp 0x2076aa(%rip)
1926(5): push $0x36

".plt.got" :
1930(6): jmp 0x2076c2(%rip)
1936(2): nop 

"_init" :
1598(4): sub $0x8,%rsp
159c(7): mov 0x207a45(%rip),%rax
15a3(3): test %rax,%rax
15a6(2): jz 0x4(%rip)
15a8(2): call %rax
15aa(4): add $0x8,%rsp
15ae(1): ret near (%rsp)

"main" :
1940(2): push %r15
1942(2): push %r14
1944(7): lea 0x2071d5(%rip),%r14
194b(2): push %r13
194d(2): push %r12
194f(7): lea 0x51a(%rip),%r12
1956(1): push %rbp
1957(1): push %rbx
1958(2): mov %edi,%ebp
195a(3): mov %rsi,%rbx
195d(7): lea 0x4b0c(%rip),%r13
1964(3): mov %r12,%r15
1967(4): sub $0x8,%rsp
196b(3): mov (%rsi),%rdi
196e(5): call 0x18b2(%rip)
1973(7): lea 0x5367(%rip),%rsi
197a(5): mov $0x6,%edi
197f(5): call 0xfffffeb1(%rip)
1984(7): lea 0x4aab(%rip),%rsi
198b(7): lea 0x4a7b(%rip),%rdi
1992(5): call 0xfffffcde(%rip)
1997(7): lea 0x4a6f(%rip),%rdi
199e(5): call 0xfffffcb2(%rip)
19a3(7): lea 0xab6(%rip),%rdi
19aa(5): call 0x49b6(%rip)
19af(7): mov 0x2076f2(%rip),%rdi
19b6(2): xor %ecx,%ecx
19b8(5): mov $0x1,%edx
19bd(2): xor %esi,%esi
19bf(5): call 0xfffffe91(%rip)
19c4(7): mov $0x0,0x20771e(%rip)
19cb(3): xor %r8d,%r8d
19ce(3): mov %r14,%rcx
19d1(3): mov %r13,%rdx
19d4(3): mov %rbx,%rsi
19d7(2): mov %ebp,%edi
19d9(5): call 0xfffffce7(%rip)
19de(3): cmp $0xff,%eax
19e1(6): jz 0x87(%rip)
19e7(5): cmp $0xffffff7e,%eax
19ec(6): jz 0x132(%rip)
19f2(2): jle 0x1e(%rip)
19f4(3): cmp $0x72,%eax
19f7(2): jz 0x69(%rip)
19f9(3): cmp $0x73,%eax
19fc(6): jnz 0x118(%rip)
1a02(7): lea 0x237(%rip),%r12
1a09(2): jmp 0xffffffc2(%rip)
1a0b(5): nop 0x0(%rax,%rax,1)
1a10(5): cmp $0xffffff7d,%eax
1a15(6): jnz 0xff(%rip)
1a1b(4): sub $0x8,%rsp
1a1f(7): mov 0x207682(%rip),%rdi
1a26(7): mov 0x2075e3(%rip),%rcx
1a2d(2): push $0x0
1a2f(7): lea 0x4a18(%rip),%r9
1a36(7): lea 0x4a21(%rip),%r8
1a3d(7): lea 0x49c5(%rip),%rdx
1a44(7): lea 0x49a3(%rip),%rsi
1a4b(2): xor %eax,%eax
1a4d(5): call 0x3a23(%rip)
1a52(2): xor %edi,%edi
1a54(5): call 0xfffffe6c(%rip)
1a59(7): nop 0x0(%rax)
1a60(3): mov %r15,%r12
1a63(5): jmp 0xffffff68(%rip)
1a68(3): mov %ebp,%r14d
1a6b(7): sub 0x207646(%rip),%r14d
1a72(3): test %r14d,%r14d
1a75(2): jnle 0x73(%rip)
1a77(3): mov %r14d,%esi
1a7a(7): lea 0x4d31(%rip),%rdi
1a81(3): call %r12
1a84(3): mov %eax,%r13d
1a87(7): cmp $0x0,0x20765b(%rip)
1a8e(2): jnz 0x16(%rip)
1a90(4): xor $0x1,%r13d
1a94(1): pop %rdx
1a95(4): movzx %r13b,%eax
1a99(1): pop %rbx
1a9a(1): pop %rbp
1a9b(2): pop %r12
1a9d(2): pop %r13
1a9f(2): pop %r14
1aa1(2): pop %r15
1aa3(1): ret near (%rsp)
1aa4(7): mov 0x207605(%rip),%rdi
1aab(5): call 0x41d5(%rip)
1ab0(3): add $0x1,%eax
1ab3(2): jnz 0xffffffdd(%rip)
1ab5(7): lea 0x4cf6(%rip),%rdx
1abc(5): mov $0x3,%esi
1ac1(2): xor %edi,%edi
1ac3(5): call 0x329d(%rip)
1ac8(3): mov %rax,%rbx
1acb(5): call 0xfffffb35(%rip)
1ad0(2): mov (%rax),%esi
1ad2(7): lea 0x56a9(%rip),%rdx
1ad9(3): mov %rbx,%rcx
1adc(5): mov $0x1,%edi
1ae1(2): xor %eax,%eax
1ae3(5): call 0xfffffd8d(%rip)
1ae8(6): mov $0x1,%r13d
1aee(2): jmp 0x16(%rip)
1af0(4): mov 0x0(%rbx,%rax,8),%rdi
1af4(3): mov %r14d,%esi
1af7(3): call %r12
1afa(7): add $0x1,0x2075b7(%rip)
1b01(3): and %eax,%r13d
1b04(7): movsxd 0x2075ad(%rip),%rax
1b0b(2): cmp %ebp,%eax
1b0d(2): jl 0xffffffe3(%rip)
1b0f(5): jmp 0xffffff78(%rip)
1b14(5): mov $0x1,%edi
1b19(5): call 0x597(%rip)
1b1e(2): xor %edi,%edi
1b20(5): call 0x590(%rip)

"_start" :
1b30(2): xor %ebp,%ebp
1b32(3): mov %rdx,%r9
1b35(1): pop %rsi
1b36(3): mov %rsp,%rdx
1b39(4): and $0xfffffff0,%rsp
1b3d(1): push %rax
1b3e(1): push %rsp
1b3f(7): lea 0x480a(%rip),%r8
1b46(7): lea 0x4793(%rip),%rcx
1b4d(7): lea 0xfffffdec(%rip),%rdi
1b54(6): call 0x207486(%rip)
1b5a(1): hlt 

"deregister_tm_clones" :
1b60(7): lea 0x207521(%rip),%rdi
1b67(1): push %rbp
1b68(7): lea 0x207519(%rip),%rax
1b6f(3): cmp %rdi,%rax
1b72(3): mov %rsp,%rbp
1b75(2): jz 0x1b(%rip)
1b77(7): mov 0x20745a(%rip),%rax
1b7e(3): test %rax,%rax
1b81(2): jz 0xf(%rip)
1b83(1): pop %rbp
1b84(2): jmp %rax
1b86(a): nop 0x0(%rax,%rax,1)
1b90(1): pop %rbp
1b91(1): ret near (%rsp)

"register_tm_clones" :
1ba0(7): lea 0x2074e1(%rip),%rdi
1ba7(7): lea 0x2074da(%rip),%rsi
1bae(1): push %rbp
1baf(3): sub %rdi,%rsi
1bb2(3): mov %rsp,%rbp
1bb5(4): sar $0x3,%rsi
1bb9(3): mov %rsi,%rax
1bbc(4): shr $0x3f,%rax
1bc0(3): add %rax,%rsi
1bc3(3): sar $0x1,%rsi
1bc6(2): jz 0x1a(%rip)
1bc8(7): mov 0x207421(%rip),%rax
1bcf(3): test %rax,%rax
1bd2(2): jz 0xe(%rip)
1bd4(1): pop %rbp
1bd5(2): jmp %rax
1bd7(9): nop 0x0(%rax,%rax,1)
1be0(1): pop %rbp
1be1(1): ret near (%rsp)

"__do_global_dtors_aux" :
1bf0(7): cmp $0x0,0x2074f1(%rip)
1bf7(2): jnz 0x31(%rip)
1bf9(8): cmp $0x0,0x2073f7(%rip)
1c01(1): push %rbp
1c02(3): mov %rsp,%rbp
1c05(2): jz 0xe(%rip)
1c07(7): mov 0x2073fa(%rip),%rdi
1c0e(5): call 0xfffffd22(%rip)
1c13(5): call 0xffffff4d(%rip)
1c18(7): mov $0x1,0x2074c9(%rip)
1c1f(1): pop %rbp
1c20(1): ret near (%rsp)
1c21(7): nop 0x0(%rax)
1c28(2): REP ret near (%rsp)

"frame_dummy" :
1c30(1): push %rbp
1c31(3): mov %rsp,%rbp
1c34(1): pop %rbp
1c35(5): jmp 0xffffff6b(%rip)

"sysv_sum_file" :
1c40(2): push %r15
1c42(2): push %r14
1c44(5): mov $0x2,%ecx
1c49(2): push %r13
1c4b(2): push %r12
1c4d(3): mov %rdi,%r13
1c50(1): push %rbp
1c51(1): push %rbx
1c52(7): lea 0x4b59(%rip),%rdi
1c59(7): sub $0x22b8,%rsp
1c60(4): mov %esi,0xc(%rsp)
1c64(3): mov %r13,%rsi
1c67(9): mov $0x28,%rax
1c70(8): mov %rax,0x22a8(%rsp)
1c78(2): xor %eax,%eax
1c7a(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1c7c(4): setnbe %r12b
1c80(4): sbb $0x0,%r12b
1c84(4): movsx %r12b,%r12d
1c88(3): test %r12d,%r12d
1c8b(6): jnz 0x165(%rip)
1c91(7): mov $0x1,0x207451(%rip)
1c98(2): xor %ebp,%ebp
1c9a(8): lea 0x2a0(%rsp),%r14
1ca2(3): xor %r15d,%r15d
1ca5(2): xor %ebx,%ebx
1ca7(9): nop 0x0(%rax,%rax,1)
1cb0(5): mov $0x2000,%edx
1cb5(3): mov %r14,%rsi
1cb8(2): mov %ebp,%edi
1cba(5): call 0x3296(%rip)
1cbf(3): test %rax,%rax
1cc2(2): jz 0x2e(%rip)
1cc4(4): cmp $0xffffffff,%rax
1cc8(6): jz 0xe8(%rip)
1cce(4): lea 0x0(%r14,%rax,1),%rsi
1cd2(3): mov %r14,%rdx
1cd5(3): nop (%rax)
1cd8(3): movzx (%rdx),%ecx
1cdb(4): add $0x1,%rdx
1cdf(3): add %ecx,%r15d
1ce2(3): cmp %rdx,%rsi
1ce5(2): jnz 0xfffffff3(%rip)
1ce7(3): add %rax,%rbx
1cea(2): jmp 0xffffffc6(%rip)
1cec(4): nop 0x0(%rax)
1cf0(3): test %r12d,%r12d
1cf3(2): jz 0x11(%rip)
1cf5(2): mov %ebp,%edi
1cf7(5): call 0xfffffa59(%rip)
1cfc(2): test %eax,%eax
1cfe(6): jnz 0x109(%rip)
1d04(4): movzx %r15w,%eax
1d08(4): shr $0x10,%r15d
1d0c(5): lea 0x10(%rsp),%rsi
1d11(3): add %eax,%r15d
1d14(2): xor %edx,%edx
1d16(6): mov $0x200,%r8d
1d1c(4): movzx %r15w,%eax
1d20(5): mov $0x1,%ecx
1d25(4): sar $0x10,%r15d
1d29(3): mov %rbx,%rdi
1d2c(3): add %eax,%r15d
1d2f(5): call 0x8f1(%rip)
1d34(7): lea 0x4649(%rip),%rsi
1d3b(3): mov %rax,%rcx
1d3e(3): mov %r15d,%edx
1d41(2): xor %eax,%eax
1d43(5): mov $0x1,%edi
1d48(5): call 0xfffffaf8(%rip)
1d4d(4): mov 0xc(%rsp),%eax
1d51(2): test %eax,%eax
1d53(6): jnz 0xe7(%rip)
1d59(7): mov 0x207348(%rip),%rdi
1d60(4): mov 0x28(%rdi),%rax
1d64(4): cmp 0x30(%rdi),%rax
1d68(6): jnb 0xed(%rip)
1d6e(4): lea 0x1(%rax),%rdx
1d72(5): mov $0x1,%ebx
1d77(4): mov %rdx,0x28(%rdi)
1d7b(3): mov $0xa,(%rax)
1d7e(2): mov %ebx,%eax
1d80(8): mov 0x22a8(%rsp),%rbx
1d88(9): xor $0x28,%rbx
1d91(6): jnz 0xd8(%rip)
1d97(7): add $0x22b8,%rsp
1d9e(1): pop %rbx
1d9f(1): pop %rbp
1da0(2): pop %r12
1da2(2): pop %r13
1da4(2): pop %r14
1da6(2): pop %r15
1da8(1): ret near (%rsp)
1da9(7): nop 0x0(%rax)
1db0(2): xor %edi,%edi
1db2(3): mov %r13,%rdx
1db5(5): mov $0x3,%esi
1dba(5): call 0x2fa6(%rip)
1dbf(3): mov %rax,%rbx
1dc2(5): call 0xfffff83e(%rip)
1dc7(2): mov (%rax),%esi
1dc9(7): lea 0x53b2(%rip),%rdx
1dd0(3): mov %rbx,%rcx
1dd3(2): xor %edi,%edi
1dd5(2): xor %eax,%eax
1dd7(2): xor %ebx,%ebx
1dd9(5): call 0xfffffa97(%rip)
1dde(3): test %r12d,%r12d
1de1(2): jz 0xffffff9d(%rip)
1de3(2): mov %ebp,%edi
1de5(5): call 0xfffff96b(%rip)
1dea(2): jmp 0xffffff94(%rip)
1dec(4): nop 0x0(%rax)
1df0(2): xor %esi,%esi
1df2(2): xor %eax,%eax
1df4(3): mov %r13,%rdi
1df7(5): call 0xfffffa89(%rip)
1dfc(3): cmp $0xff,%eax
1dff(2): mov %eax,%ebp
1e01(6): jnz 0xfffffe99(%rip)
1e07(3): mov %r13,%rdx
1e0a(5): mov $0x3,%esi
1e0f(2): xor %edi,%edi
1e11(5): call 0x2f4f(%rip)
1e16(3): mov %rax,%rbx
1e19(5): call 0xfffff7e7(%rip)
1e1e(2): mov (%rax),%esi
1e20(7): lea 0x535b(%rip),%rdx
1e27(3): mov %rbx,%rcx
1e2a(2): xor %edi,%edi
1e2c(2): xor %eax,%eax
1e2e(2): xor %ebx,%ebx
1e30(5): call 0xfffffa40(%rip)
1e35(5): jmp 0xffffff49(%rip)
1e3a(7): lea 0x5340(%rip),%rsi
1e41(3): mov %r13,%rdx
1e44(5): mov $0x1,%edi
1e49(2): xor %eax,%eax
1e4b(5): call 0xfffff9f5(%rip)
1e50(5): jmp 0xffffff09(%rip)
1e55(5): mov $0xa,%esi
1e5a(5): mov $0x1,%ebx
1e5f(5): call 0xfffff891(%rip)
1e64(5): jmp 0xffffff1a(%rip)
1e69(5): call 0xfffff847(%rip)

"bsd_sum_file" :
1e70(2): push %r15
1e72(2): push %r14
1e74(5): mov $0x2,%ecx
1e79(2): push %r13
1e7b(2): push %r12
1e7d(3): mov %rdi,%r12
1e80(1): push %rbp
1e81(1): push %rbx
1e82(7): lea 0x4929(%rip),%rdi
1e89(3): mov %esi,%r13d
1e8c(3): mov %r12,%rsi
1e8f(7): sub $0x2a8,%rsp
1e96(9): mov $0x28,%rax
1e9f(8): mov %rax,0x298(%rsp)
1ea7(2): xor %eax,%eax
1ea9(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1eab(4): setnbe %bpl
1eaf(4): sbb $0x0,%bpl
1eb3(4): movsx %bpl,%ebp
1eb7(2): test %ebp,%ebp
1eb9(6): jnz 0x137(%rip)
1ebf(7): mov 0x2071ea(%rip),%r15
1ec6(7): mov $0x1,0x20721c(%rip)
1ecd(5): mov $0x2,%esi
1ed2(3): mov %r15,%rdi
1ed5(3): xor %r14d,%r14d
1ed8(5): call 0x648(%rip)
1edd(2): xor %ebx,%ebx
1edf(4): mov 0x10(%r15),%rsi
1ee3(4): mov 0x8(%r15),%rax
1ee7(2): jmp 0x2c(%rip)
1ee9(7): nop 0x0(%rax)
1ef0(4): lea 0x1(%rax),%rcx
1ef4(4): mov %rcx,0x8(%r15)
1ef8(3): movzx (%rax),%eax
1efb(2): mov %ebx,%edx
1efd(3): shl/sal $0xf,%ebx
1f00(4): add $0x1,%r14
1f04(2): sar $0x1,%edx
1f06(3): movzx %bx,%ebx
1f09(2): add %edx,%ebx
1f0b(2): add %eax,%ebx
1f0d(3): mov %rcx,%rax
1f10(3): movzx %bx,%ebx
1f13(3): cmp %rax,%rsi
1f16(2): jnbe 0xffffffda(%rip)
1f18(3): mov %r15,%rdi
1f1b(5): call 0xfffff6a5(%rip)
1f20(3): cmp $0xff,%eax
1f23(6): jnz 0x179(%rip)
1f29(4): test $0x20,(%r15)
1f2d(6): jnz 0x113(%rip)
1f33(2): test %ebp,%ebp
1f35(2): jz 0x12(%rip)
1f37(3): mov %r15,%rdi
1f3a(5): call 0x3d46(%rip)
1f3f(2): test %eax,%eax
1f41(6): jnz 0xca(%rip)
1f47(2): xor %edx,%edx
1f49(3): mov %rsp,%rsi
1f4c(6): mov $0x400,%r8d
1f52(5): mov $0x1,%ecx
1f57(3): mov %r14,%rdi
1f5a(5): call 0x6c6(%rip)
1f5f(7): lea 0x4424(%rip),%rsi
1f66(3): mov %rax,%rcx
1f69(2): mov %ebx,%edx
1f6b(2): xor %eax,%eax
1f6d(5): mov $0x1,%edi
1f72(5): call 0xfffff8ce(%rip)
1f77(4): cmp $0x1,%r13d
1f7b(2): jnle 0x55(%rip)
1f7d(7): mov 0x207124(%rip),%rdi
1f84(4): mov 0x28(%rdi),%rax
1f88(4): cmp 0x30(%rdi),%rax
1f8c(6): jnb 0xf7(%rip)
1f92(4): lea 0x1(%rax),%rdx
1f96(5): mov $0x1,%ebx
1f9b(4): mov %rdx,0x28(%rdi)
1f9f(3): mov $0xa,(%rax)
1fa2(8): mov 0x298(%rsp),%rdi
1faa(9): xor $0x28,%rdi
1fb3(2): mov %ebx,%eax
1fb5(6): jnz 0xe2(%rip)
1fbb(7): add $0x2a8,%rsp
1fc2(1): pop %rbx
1fc3(1): pop %rbp
1fc4(2): pop %r12
1fc6(2): pop %r13
1fc8(2): pop %r14
1fca(2): pop %r15
1fcc(1): ret near (%rsp)
1fcd(3): nop (%rax)
1fd0(7): lea 0x51aa(%rip),%rsi
1fd7(3): mov %r12,%rdx
1fda(5): mov $0x1,%edi
1fdf(2): xor %eax,%eax
1fe1(5): call 0xfffff85f(%rip)
1fe6(2): jmp 0xffffff97(%rip)
1fe8(8): nop 0x0(%rax,%rax,1)
1ff0(7): lea 0x46e3(%rip),%rsi
1ff7(3): mov %r12,%rdi
1ffa(5): call 0xfffff8a6(%rip)
1fff(3): test %rax,%rax
2002(3): mov %rax,%r15
2005(6): jnz 0xfffffec8(%rip)
200b(3): mov %r12,%rdx
200e(5): mov $0x3,%esi
2013(2): xor %edi,%edi
2015(5): call 0x2d4b(%rip)
201a(3): mov %rax,%rbx
201d(5): call 0xfffff5e3(%rip)
2022(2): mov (%rax),%esi
2024(7): lea 0x5157(%rip),%rdx
202b(3): mov %rbx,%rcx
202e(2): xor %edi,%edi
2030(2): xor %eax,%eax
2032(2): xor %ebx,%ebx
2034(5): call 0xfffff83c(%rip)
2039(5): jmp 0xffffff69(%rip)
203e(2): nop 
2040(2): xor %edi,%edi
2042(3): mov %r12,%rdx
2045(5): mov $0x3,%esi
204a(5): call 0x2d16(%rip)
204f(3): mov %rax,%rbx
2052(5): call 0xfffff5ae(%rip)
2057(2): mov (%rax),%esi
2059(7): lea 0x5122(%rip),%rdx
2060(3): mov %rbx,%rcx
2063(2): xor %edi,%edi
2065(2): xor %eax,%eax
2067(2): xor %ebx,%ebx
2069(5): call 0xfffff807(%rip)
206e(2): test %ebp,%ebp
2070(6): jz 0xffffff32(%rip)
2076(3): mov %r15,%rdi
2079(5): call 0x3c07(%rip)
207e(5): jmp 0xffffff24(%rip)
2083(5): mov $0xa,%esi
2088(5): mov $0x1,%ebx
208d(5): call 0xfffff663(%rip)
2092(5): jmp 0xffffff10(%rip)
2097(5): call 0xfffff619(%rip)
209c(4): mov 0x10(%r15),%rsi
20a0(4): mov 0x8(%r15),%rcx
20a4(5): jmp 0xfffffe57(%rip)

"usage" :
20b0(2): push %r13
20b2(2): push %r12
20b4(5): mov $0x5,%edx
20b9(1): push %rbp
20ba(1): push %rbx
20bb(2): mov %edi,%ebp
20bd(7): sub $0x88,%rsp
20c4(7): mov 0x207035(%rip),%rbx
20cb(9): mov $0x28,%rax
20d4(5): mov %rax,0x78(%rsp)
20d9(2): xor %eax,%eax
20db(2): test %edi,%edi
20dd(2): jz 0x30(%rip)
20df(7): lea 0x43a2(%rip),%rsi
20e6(2): xor %edi,%edi
20e8(5): call 0xfffff598(%rip)
20ed(7): mov 0x206fec(%rip),%rdi
20f4(3): mov %rax,%rdx
20f7(3): mov %rbx,%rcx
20fa(5): mov $0x1,%esi
20ff(2): xor %eax,%eax
2101(5): call 0xfffff7df(%rip)
2106(2): mov %ebp,%edi
2108(5): call 0xfffff7b8(%rip)
210d(7): lea 0x439c(%rip),%rsi
2114(2): xor %edi,%edi
2116(5): call 0xfffff56a(%rip)
211b(3): mov %rbx,%rdx
211e(3): mov %rax,%rsi
2121(5): mov $0x1,%edi
2126(2): xor %eax,%eax
2128(5): call 0xfffff718(%rip)
212d(7): mov 0x206f74(%rip),%rbx
2134(7): lea 0x439d(%rip),%rsi
213b(5): mov $0x5,%edx
2140(2): xor %edi,%edi
2142(5): call 0xfffff53e(%rip)
2147(3): mov %rbx,%rsi
214a(3): mov %rax,%rdi
214d(5): call 0xfffff643(%rip)
2152(7): mov 0x206f4f(%rip),%rbx
2159(7): lea 0x43a8(%rip),%rsi
2160(5): mov $0x5,%edx
2165(2): xor %edi,%edi
2167(5): call 0xfffff519(%rip)
216c(3): mov %rbx,%rsi
216f(3): mov %rax,%rdi
2172(5): call 0xfffff61e(%rip)
2177(7): mov 0x206f2a(%rip),%rbx
217e(7): lea 0x43bb(%rip),%rsi
2185(5): mov $0x5,%edx
218a(2): xor %edi,%edi
218c(5): call 0xfffff4f4(%rip)
2191(3): mov %rbx,%rsi
2194(3): mov %rax,%rdi
2197(5): call 0xfffff5f9(%rip)
219c(7): mov 0x206f05(%rip),%rbx
21a3(7): lea 0x4416(%rip),%rsi
21aa(5): mov $0x5,%edx
21af(2): xor %edi,%edi
21b1(5): call 0xfffff4cf(%rip)
21b6(3): mov %rbx,%rsi
21b9(3): mov %rax,%rdi
21bc(5): call 0xfffff5d4(%rip)
21c1(7): mov 0x206ee0(%rip),%rbx
21c8(7): lea 0x4421(%rip),%rsi
21cf(5): mov $0x5,%edx
21d4(2): xor %edi,%edi
21d6(5): call 0xfffff4aa(%rip)
21db(3): mov %rbx,%rsi
21de(3): mov %rax,%rdi
21e1(7): lea 0x4206(%rip),%rbx
21e8(5): call 0xfffff5a8(%rip)
21ed(7): lea 0x419f(%rip),%rax
21f4(7): lea 0x41d9(%rip),%rcx
21fb(9): mov $0x0,0x60(%rsp)
2204(9): mov $0x0,0x68(%rsp)
220d(3): mov %rsp,%rdx
2210(4): mov %rax,(%rsp)
2214(7): lea 0x417a(%rip),%rax
221b(5): mov %rcx,0x30(%rsp)
2220(7): lea 0x41b7(%rip),%rcx
2227(5): mov %rax,0x8(%rsp)
222c(7): lea 0x41da(%rip),%rax
2233(5): mov %rcx,0x40(%rsp)
2238(7): lea 0x41a9(%rip),%rcx
223f(5): mov %rax,0x10(%rsp)
2244(7): lea 0x415a(%rip),%rax
224b(5): mov %rcx,0x50(%rsp)
2250(5): mov %rax,0x18(%rsp)
2255(7): lea 0x415f(%rip),%rax
225c(5): mov %rax,0x20(%rsp)
2261(7): lea 0x415d(%rip),%rax
2268(5): mov %rax,0x28(%rsp)
226d(5): mov %rax,0x38(%rsp)
2272(5): mov %rax,0x48(%rsp)
2277(5): mov %rax,0x58(%rsp)
227c(4): nop 0x0(%rax)
2280(4): add $0x10,%rdx
2284(3): mov (%rdx),%rdi
2287(3): test %rdi,%rdi
228a(2): jz 0x15(%rip)
228c(5): mov $0x4,%ecx
2291(3): mov %rbx,%rsi
2294(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2296(3): setnbe %al
2299(2): sbb $0x0,%al
229b(2): test %al,%al
229d(2): jnz 0xffffffe3(%rip)
229f(4): mov 0x8(%rdx),%r12
22a3(2): xor %edi,%edi
22a5(5): mov $0x5,%edx
22aa(7): lea 0x4141(%rip),%rsi
22b1(3): test %r12,%r12
22b4(6): jz 0xc7(%rip)
22ba(5): call 0xfffff3c6(%rip)
22bf(7): lea 0x4362(%rip),%rcx
22c6(7): lea 0x413c(%rip),%rdx
22cd(3): mov %rax,%rsi
22d0(5): mov $0x1,%edi
22d5(2): xor %eax,%eax
22d7(5): call 0xfffff569(%rip)
22dc(2): xor %esi,%esi
22de(5): mov $0x5,%edi
22e3(5): call 0xfffff54d(%rip)
22e8(3): test %rax,%rax
22eb(2): jz 0x1e(%rip)
22ed(7): lea 0x4123(%rip),%rsi
22f4(5): mov $0x3,%edx
22f9(3): mov %rax,%rdi
22fc(5): call 0xfffff314(%rip)
2301(2): test %eax,%eax
2303(6): jnz 0x10d(%rip)
2309(7): lea 0x410b(%rip),%rsi
2310(2): xor %edi,%edi
2312(5): mov $0x5,%edx
2317(5): call 0xfffff369(%rip)
231c(7): lea 0x40cb(%rip),%rcx
2323(7): lea 0x42fe(%rip),%rdx
232a(3): mov %rax,%rsi
232d(5): mov $0x1,%edi
2332(2): xor %eax,%eax
2334(5): call 0xfffff50c(%rip)
2339(3): cmp %rbx,%r12
233c(7): lea 0x406c(%rip),%rcx
2343(7): lea 0x4997(%rip),%rbx
234a(4): cmove %rcx,%rbx
234e(7): lea 0x4343(%rip),%rsi
2355(2): xor %edi,%edi
2357(5): mov $0x5,%edx
235c(5): call 0xfffff324(%rip)
2361(3): mov %rbx,%rcx
2364(3): mov %rax,%rsi
2367(3): mov %r12,%rdx
236a(5): mov $0x1,%edi
236f(2): xor %eax,%eax
2371(5): call 0xfffff4cf(%rip)
2376(5): jmp 0xfffffd90(%rip)
237b(5): call 0xfffff305(%rip)
2380(7): lea 0x42a1(%rip),%rcx
2387(7): lea 0x407b(%rip),%rdx
238e(3): mov %rax,%rsi
2391(5): mov $0x1,%edi
2396(2): xor %eax,%eax
2398(5): call 0xfffff4a8(%rip)
239d(2): xor %esi,%esi
239f(5): mov $0x5,%edi
23a4(5): call 0xfffff48c(%rip)
23a9(3): test %rax,%rax
23ac(2): jz 0x1a(%rip)
23ae(7): lea 0x4062(%rip),%rsi
23b5(5): mov $0x3,%edx
23ba(3): mov %rax,%rdi
23bd(5): call 0xfffff253(%rip)
23c2(2): test %eax,%eax
23c4(2): jnz 0x45(%rip)
23c6(7): lea 0x404e(%rip),%rsi
23cd(5): mov $0x5,%edx
23d2(2): xor %edi,%edi
23d4(7): lea 0x4013(%rip),%r12
23db(7): lea 0x3fcd(%rip),%rbx
23e2(5): call 0xfffff29e(%rip)
23e7(7): lea 0x4000(%rip),%rcx
23ee(7): lea 0x4233(%rip),%rdx
23f5(3): mov %rax,%rsi
23f8(5): mov $0x1,%edi
23fd(2): xor %eax,%eax
23ff(5): call 0xfffff441(%rip)
2404(5): jmp 0xffffff4a(%rip)
2409(7): lea 0x3fde(%rip),%r12
2410(7): mov 0x206c91(%rip),%r13
2417(7): lea 0x4232(%rip),%rsi
241e(2): xor %edi,%edi
2420(5): mov $0x5,%edx
2425(5): call 0xfffff25b(%rip)
242a(3): mov %r13,%rsi
242d(3): mov %rax,%rdi
2430(5): call 0xfffff360(%rip)
2435(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2440(7): mov %rdi,0x206cb1(%rip)
2447(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2450(7): mov %dil,0x206c99(%rip)
2457(1): ret near (%rsp)

"close_stdout" :
2460(1): push %rbp
2461(1): push %rbx
2462(4): sub $0x8,%rsp
2466(7): mov 0x206c3b(%rip),%rdi
246d(5): call 0x3d53(%rip)
2472(2): test %eax,%eax
2474(2): jz 0x18(%rip)
2476(5): call 0xfffff18a(%rip)
247b(7): cmp $0x0,0x206c6e(%rip)
2482(3): mov %rax,%rbx
2485(2): jz 0x1e(%rip)
2487(3): cmp $0x20,(%rax)
248a(2): jnz 0x19(%rip)
248c(7): mov 0x206c4d(%rip),%rdi
2493(5): call 0x3d2d(%rip)
2498(2): test %eax,%eax
249a(2): jnz 0x48(%rip)
249c(4): add $0x8,%rsp
24a0(1): pop %rbx
24a1(1): pop %rbp
24a2(1): ret near (%rsp)
24a3(7): lea 0x4226(%rip),%rsi
24aa(2): xor %edi,%edi
24ac(5): mov $0x5,%edx
24b1(5): call 0xfffff1cf(%rip)
24b6(7): mov 0x206c3b(%rip),%rdi
24bd(3): mov %rax,%rbp
24c0(3): test %rdi,%rdi
24c3(2): jz 0x2a(%rip)
24c5(5): call 0x286b(%rip)
24ca(2): mov (%rbx),%esi
24cc(7): lea 0x4209(%rip),%rdx
24d3(3): mov %rax,%rcx
24d6(3): mov %rbp,%r8
24d9(2): xor %edi,%edi
24db(2): xor %eax,%eax
24dd(5): call 0xfffff393(%rip)
24e2(6): mov 0x206b30(%rip),%edi
24e8(5): call 0xfffff138(%rip)
24ed(2): mov (%rbx),%esi
24ef(7): lea 0x4c8c(%rip),%rdx
24f6(3): mov %rax,%rcx
24f9(2): xor %edi,%edi
24fb(2): xor %eax,%eax
24fd(5): call 0xfffff373(%rip)
2502(2): jmp 0xffffffe0(%rip)

"fadvise" :
2520(3): test %rdi,%rdi
2523(2): jz 0x1d(%rip)
2525(1): push %rbx
2526(2): mov %esi,%ebx
2528(5): call 0xfffff2a8(%rip)
252d(2): mov %ebx,%ecx
252f(2): xor %edx,%edx
2531(2): xor %esi,%esi
2533(1): pop %rbx
2534(2): mov %eax,%edi
2536(5): jmp 0xfffff22a(%rip)
253b(5): nop 0x0(%rax,%rax,1)
2540(2): REP ret near (%rsp)

"adjust_value.part.0" :
2550(6): fld 0x41fe(%rip),%st0
2556(4): fld 0x8(%rsp),%st0
255a(2): fucomi %st1,%st0
255c(2): jnb 0x74(%rip)
255e(2): fstp %st0,%st1
2560(4): fstcw 0xfffffff6(%rsp)
2564(5): movzx 0xfffffff6(%rsp),%eax
2569(3): or $0xc,%ah
256c(5): mov %ax,0xfffffff4(%rsp)
2571(2): fld %st0,%st0
2573(4): fldcw 0xfffffff4(%rsp)
2577(4): fistp %st0,0xffffffe8(%rsp)
257b(4): fldcw 0xfffffff6(%rsp)
257f(5): mov 0xffffffe8(%rsp),%rax
2584(5): mov %rax,0xffffffe0(%rsp)
2589(3): test %rax,%rax
258c(4): fild 0xffffffe0(%rsp),%st0
2590(2): jns 0x8(%rip)
2592(6): fadd 0x41c0(%rip)
2598(2): test %edi,%edi
259a(2): jnz 0x2e(%rip)
259c(2): fxch %st1,%st0
259e(2): fucomip %st1,%st0
25a0(2): jp 0x8(%rip)
25a2(2): jz 0x28(%rip)
25a4(2): fstp %st0,%st0
25a6(2): jmp 0xa(%rip)
25a8(2): fstp %st0,%st0
25aa(6): nop 0x0(%rax,%rax,1)
25b0(4): add $0x1,%rax
25b4(5): mov %rax,0xffffffe0(%rsp)
25b9(3): test %rax,%rax
25bc(4): fild 0xffffffe0(%rsp),%st0
25c0(2): js 0x50(%rip)
25c2(2): jmp 0x8(%rip)
25c4(4): nop 0x0(%rax)
25c8(2): fstp %st0,%st1
25ca(2): REP ret near (%rsp)
25cc(4): nop 0x0(%rax)
25d0(4): fstcw 0xfffffff6(%rsp)
25d4(5): movzx 0xfffffff6(%rsp),%eax
25d9(2): fsubr %st0,%st1
25db(2): fxch %st1,%st0
25dd(a): mov $0x-9223372036854775808,%rdx
25e7(3): or $0xc,%ah
25ea(5): mov %ax,0xfffffff4(%rsp)
25ef(4): fldcw 0xfffffff4(%rsp)
25f3(4): fistp %st0,0xffffffe8(%rsp)
25f7(4): fldcw 0xfffffff6(%rsp)
25fb(5): mov 0xffffffe8(%rsp),%rax
2600(3): xor %rdx,%rax
2603(5): jmp 0xffffff81(%rip)
2608(8): nop 0x0(%rax,%rax,1)
2610(6): fadd 0x4142(%rip)
2616(1): ret near (%rsp)

"human_readable" :
2620(2): push %r15
2622(2): push %r14
2624(2): mov %edx,%eax
2626(2): push %r13
2628(2): push %r12
262a(3): mov %edx,%r15d
262d(1): push %rbp
262e(1): push %rbx
262f(3): and $0x20,%eax
2632(4): and $0x3,%r15d
2636(3): mov %edx,%r12d
2639(3): mov %rdi,%rbx
263c(7): sub $0x98,%rsp
2643(5): mov %rcx,0x18(%rsp)
2648(4): mov %eax,0x30(%rsp)
264c(9): mov $0x28,%rcx
2655(8): mov %rcx,0x88(%rsp)
265d(2): xor %ecx,%ecx
265f(3): cmp $0x1,%eax
2662(4): mov %rsi,(%rsp)
2666(5): mov %r8,0x10(%rsp)
266b(2): sbb %eax,%eax
266d(3): and $0xe8,%eax
2670(5): add $0x400,%eax
2675(4): mov %eax,0x34(%rsp)
2679(5): call 0xffffefc7(%rip)
267e(3): mov (%rax),%r14
2681(3): mov %rax,%r13
2684(3): mov %r14,%rdi
2687(5): call 0xfffff019(%rip)
268c(4): mov 0x10(%r13),%rcx
2690(4): mov 0x8(%r13),%r13
2694(3): mov %rax,%rbp
2697(4): sub $0x1,%rax
269b(5): mov $0x1,%edx
26a0(4): cmp $0x10,%rax
26a4(7): lea 0x4038(%rip),%rax
26ab(3): mov %r13,%rdi
26ae(4): cmovnb %rdx,%rbp
26b2(5): mov %rcx,0x38(%rsp)
26b7(4): cmovnb %rax,%r14
26bb(5): call 0xffffefe5(%rip)
26c0(4): cmp $0x11,%rax
26c4(7): lea 0x4616(%rip),%rax
26cb(5): mov 0x10(%rsp),%rdi
26d0(5): mov 0x18(%rsp),%rcx
26d5(4): cmovnb %rax,%r13
26d9(4): mov (%rsp),%rax
26dd(6): add $0x287,%rax
26e3(3): cmp %rcx,%rdi
26e6(5): mov %rax,0x8(%rsp)
26eb(6): jnbe 0x14d(%rip)
26f1(2): xor %edx,%edx
26f3(3): mov %rcx,%rax
26f6(3): div %rdi,%rax
26f9(3): test %rdx,%rdx
26fc(3): mov %rax,%rdi
26ff(6): jz 0x361(%rip)
2705(5): mov %rcx,0x18(%rsp)
270a(3): test %rcx,%rcx
270d(4): fild 0x18(%rsp),%st0
2711(2): jns 0x8(%rip)
2713(6): fadd 0x403f(%rip)
2719(5): mov 0x10(%rsp),%rax
271e(5): mov %rax,0x18(%rsp)
2723(3): test %rax,%rax
2726(4): fild 0x18(%rsp),%st0
272a(2): jns 0x8(%rip)
272c(6): fadd 0x4026(%rip)
2732(2): fdivp %st0,%st1
2734(5): mov %rbx,0x18(%rsp)
2739(3): test %rbx,%rbx
273c(4): fild 0x18(%rsp),%st0
2740(2): jns 0x8(%rip)
2742(6): fadd 0x4010(%rip)
2748(4): test $0x10,%r12b
274c(2): fmulp %st0,%st1
274e(6): jz 0x1ca(%rip)
2754(4): fild 0x34(%rsp),%st0
2758(2): xor %ebx,%ebx
275a(2): fld %st0,%st0
275c(2): jmp 0x8(%rip)
275e(2): nop 
2760(2): fstp %st0,%st1
2762(2): fxch %st2,%st0
2764(2): fld %st0,%st0
2766(3): add $0x1,%ebx
2769(2): fmul %st2
276b(2): fxch %st3,%st0
276d(2): fucomi %st3,%st0
276f(2): jb 0x11(%rip)
2771(3): cmp $0x8,%ebx
2774(2): jnz 0xffffffec(%rip)
2776(2): fstp %st0,%st2
2778(2): fstp %st0,%st2
277a(2): jmp 0xa(%rip)
277c(4): nop 0x0(%rax)
2780(2): fstp %st0,%st2
2782(2): fstp %st0,%st2
2784(4): mov 0x30(%rsp),%ecx
2788(4): add $0x1,%rbp
278c(2): xor %eax,%eax
278e(2): fdivrp %st0,%st1
2790(2): test %ecx,%ecx
2792(3): setz %al
2795(4): cmp $0x1,%r15d
2799(5): lea 0x1(%rbp,%rax,1),%rax
279e(5): mov %rax,0x18(%rsp)
27a3(6): jz 0x56d(%rip)
27a9(6): fld 0x3fb1(%rip),%st0
27af(2): fucomip %st1,%st0
27b1(6): jnbe 0x3d7(%rip)
27b7(2): fld %st0,%st0
27b9(4): fstp %st0,0x20(%rsp)
27bd(4): sub $0x10,%rsp
27c1(7): lea 0x3f23(%rip),%rcx
27c8(5): mov $0x1,%esi
27cd(7): mov $0xffffffff,%rdx
27d4(2): xor %eax,%eax
27d6(5): mov 0x10(%rsp),%r14
27db(3): mov %r14,%rdi
27de(3): fstp %st0,(%rsp)
27e1(5): call 0xfffff13f(%rip)
27e6(3): mov %r14,%rdi
27e9(5): call 0xffffeeb7(%rip)
27ee(1): pop %rcx
27ef(1): pop %rsi
27f0(5): cmp 0x18(%rsp),%rax
27f5(3): mov %rax,%r14
27f8(4): fld 0x20(%rsp),%st0
27fc(6): jnbe 0x5ac(%rip)
2802(4): test $0x8,%r12b
2806(6): jz 0x16a(%rip)
280c(4): mov (%rsp),%rax
2810(6): cmp $0x30,0xffffffff(%rax,%r14,1)
2816(6): jnz 0x162(%rip)
281c(6): fld 0x3f3a(%rip),%st0
2822(4): cmp $0x1,%r15d
2826(2): fmul %st0,%st1
2828(6): jnz 0x588(%rip)
282e(5): jmp 0x535(%rip)
2833(5): nop 0x0(%rax,%rax,1)
2838(3): test %rcx,%rcx
283b(6): jz 0xfffffeca(%rip)
2841(5): mov 0x10(%rsp),%rax
2846(2): xor %edx,%edx
2848(3): div %rcx,%rax
284b(3): test %rdx,%rdx
284e(3): mov %rax,%r8
2851(6): jnz 0xfffffeb4(%rip)
2857(3): mov %rbx,%rax
285a(2): xor %edx,%edx
285c(3): div %r8,%rax
285f(3): mov %rax,%rbx
2862(4): lea 0x0(%rdx,%rdx,4),%rax
2866(2): xor %edx,%edx
2868(3): mov %rbx,%rsi
286b(3): add %rax,%rax
286e(3): div %r8,%rax
2871(3): add %rdx,%rdx
2874(3): mov %eax,%r9d
2877(3): cmp %rdx,%r8
287a(6): jbe 0x58e(%rip)
2880(2): xor %edi,%edi
2882(3): test %rdx,%rdx
2885(4): setnz %dil
2889(3): mov %r12d,%ecx
288c(5): mov 0x8(%rsp),%r8
2891(5): mov $0xffffffff,%ebx
2896(3): and $0x10,%ecx
2899(6): jz 0x3c7(%rip)
289f(5): mov 0x34(%rsp),%r8d
28a4(3): cmp %rsi,%r8
28a7(3): mov %r8,%r11
28aa(6): jnbe 0x576(%rip)
28b0(2): xor %ebx,%ebx
28b2(2): jmp 0x25(%rip)
28b4(4): nop 0x0(%rax)
28b8(2): test %edi,%edi
28ba(4): setnz %dil
28be(4): movzx %dil,%edi
28c2(3): add $0x1,%ebx
28c5(3): cmp %r10,%r8
28c8(6): jnbe 0x315(%rip)
28ce(3): cmp $0x8,%ebx
28d1(6): jz 0x5a7(%rip)
28d7(3): mov %rsi,%rax
28da(2): xor %edx,%edx
28dc(2): mov %edi,%esi
28de(3): div %r8,%rax
28e1(2): sar $0x1,%esi
28e3(3): mov %rax,%r10
28e6(3): lea 0x0(%rdx,%rdx,4),%eax
28e9(2): xor %edx,%edx
28eb(4): lea 0x0(%r9,%rax,2),%eax
28ef(3): div %r11d,%eax
28f2(3): lea 0x0(%rsi,%rdx,2),%edx
28f5(3): mov %eax,%r9d
28f8(3): mov %r10,%rsi
28fb(2): add %edx,%edi
28fd(3): cmp %edx,%r11d
2900(2): jnbe 0xffffffb8(%rip)
2902(3): cmp %edi,%r11d
2905(4): setb %dil
2909(4): movzx %dil,%edi
290d(3): add $0x2,%edi
2910(2): jmp 0xffffffb2(%rip)
2912(6): nop 0x0(%rax,%rax,1)
2918(4): cmp $0x1,%r15d
291c(2): jz 0x10(%rip)
291e(6): fld 0x3e3c(%rip),%st0
2924(2): fucomip %st1,%st0
2926(6): jnbe 0x28a(%rip)
292c(4): sub $0x10,%rsp
2930(7): lea 0x3dae(%rip),%rcx
2937(5): mov $0x1,%esi
293c(5): mov 0x10(%rsp),%rbx
2941(7): mov $0xffffffff,%rdx
2948(2): xor %eax,%eax
294a(3): fstp %st0,(%rsp)
294d(2): xor %ebp,%ebp
294f(3): mov %rbx,%rdi
2952(5): call 0xffffefce(%rip)
2957(3): mov %rbx,%rdi
295a(5): mov $0xffffffff,%ebx
295f(5): call 0xffffed41(%rip)
2964(1): pop %rsi
2965(1): pop %rdi
2966(3): mov %rax,%r14
2969(2): jmp 0x17(%rip)
296b(5): nop 0x0(%rax,%rax,1)
2970(2): fstp %st0,%st0
2972(2): jmp 0xe(%rip)
2974(4): nop 0x0(%rax)
2978(2): fstp %st0,%st0
297a(6): nop 0x0(%rax,%rax,1)
2980(5): mov 0x8(%rsp),%r15
2985(4): mov (%rsp),%rsi
2989(3): mov %r14,%rdx
298c(3): sub %r14,%r15
298f(3): sub %rbp,%r14
2992(3): mov %r15,%rdi
2995(5): call 0xffffeecb(%rip)
299a(3): mov %r14,%r8
299d(3): add %r15,%r8
29a0(4): test $0x4,%r12b
29a4(6): jnz 0xe4(%rip)
29aa(4): test $0x80,%r12b
29ae(2): jz 0x79(%rip)
29b0(3): cmp $0xff,%ebx
29b3(6): jz 0x31d(%rip)
29b9(3): mov %r12d,%eax
29bc(5): and $0x100,%eax
29c1(2): mov %eax,%ecx
29c3(2): or %ebx,%ecx
29c5(2): jz 0x62(%rip)
29c7(4): and $0x40,%r12d
29cb(6): jnz 0x19d(%rip)
29d1(2): test %ebx,%ebx
29d3(6): jz 0x633(%rip)
29d9(3): cmp $0x1,%ebx
29dc(2): jnz 0x10(%rip)
29de(5): mov 0x30(%rsp),%r9d
29e3(3): test %r9d,%r9d
29e6(6): jz 0x44a(%rip)
29ec(7): lea 0x3d55(%rip),%rcx
29f3(3): movsxd %ebx,%rbx
29f6(5): mov 0x8(%rsp),%rdi
29fb(2): test %eax,%eax
29fd(4): movzx 0x0(%rcx,%rbx,1),%ecx
2a01(4): lea 0x1(%rdi),%rdx
2a05(2): mov %cl,(%rdi)
2a07(6): jz 0x43d(%rip)
2a0d(5): mov 0x30(%rsp),%r8d
2a12(3): test %r8d,%r8d
2a15(6): jnz 0x1bb(%rip)
2a1b(4): lea 0x1(%rdx),%rax
2a1f(3): mov $0x42,(%rdx)
2a22(5): mov %rax,0x8(%rsp)
2a27(5): mov 0x8(%rsp),%rax
2a2c(8): mov 0x88(%rsp),%rcx
2a34(9): xor $0x28,%rcx
2a3d(3): mov $0x0,(%rax)
2a40(3): mov %r15,%rax
2a43(6): jnz 0x598(%rip)
2a49(7): add $0x98,%rsp
2a50(1): pop %rbx
2a51(1): pop %rbp
2a52(2): pop %r12
2a54(2): pop %r13
2a56(2): pop %r14
2a58(2): pop %r15
2a5a(1): ret near (%rsp)
2a5b(5): nop 0x0(%rax,%rax,1)
2a60(3): mov %rbx,%rsi
2a63(2): xor %edx,%edx
2a65(4): imul %rax,%rsi
2a69(3): mov %rsi,%rax
2a6c(3): div %rdi,%rax
2a6f(3): cmp %rbx,%rax
2a72(6): jnz 0xfffffc93(%rip)
2a78(2): xor %edi,%edi
2a7a(3): xor %r9d,%r9d
2a7d(5): jmp 0xfffffe0c(%rip)
2a82(6): nop 0x0(%rax,%rax,1)
2a88(3): mov %r8,%r14
2a8b(3): mov %r13,%rdi
2a8e(5): mov %r8,0x48(%rsp)
2a93(3): sub %r15,%r14
2a96(7): mov $0xffffffff,%rbp
2a9d(5): call 0xffffec03(%rip)
2aa2(5): lea 0x50(%rsp),%rdi
2aa7(5): mov $0x29,%ecx
2aac(3): mov %r14,%rdx
2aaf(3): mov %r15,%rsi
2ab2(5): mov %rax,0x40(%rsp)
2ab7(5): mov %rdi,0x18(%rsp)
2abc(5): call 0xffffecf4(%rip)
2ac1(3): mov %r12d,%ecx
2ac4(4): mov %ebx,0x20(%rsp)
2ac8(3): mov %r14,%r12
2acb(3): mov %r13,%rbx
2ace(5): mov 0x48(%rsp),%r8
2ad3(5): mov 0x38(%rsp),%r15
2ad8(5): mov 0x40(%rsp),%r13
2add(3): mov %ecx,%r14d
2ae0(2): jmp 0x42(%rip)
2ae2(6): nop 0x0(%rax,%rax,1)
2ae8(5): mov 0x18(%rsp),%rax
2aed(3): sub %rbp,%r12
2af0(3): sub %rbp,%r8
2af3(3): mov %r8,%rdi
2af6(3): mov %rbp,%rdx
2af9(4): lea 0x0(%rax,%r12,1),%rsi
2afd(5): call 0xffffecc3(%rip)
2b02(3): test %r12,%r12
2b05(3): mov %rax,%r8
2b08(6): jz 0x510(%rip)
2b0e(3): sub %r13,%r8
2b11(3): mov %r13,%rdx
2b14(3): mov %rbx,%rsi
2b17(3): mov %r8,%rdi
2b1a(5): call 0xffffeca6(%rip)
2b1f(3): mov %rax,%r8
2b22(4): movzx (%r15),%eax
2b26(2): test %al,%al
2b28(2): jz 0xf(%rip)
2b2a(2): cmp $0x7f,%al
2b2c(3): movzx %al,%ebp
2b2f(4): cmovnb %r12,%rbp
2b33(4): add $0x1,%r15
2b37(3): cmp %r12,%rbp
2b3a(2): jbe 0xffffffae(%rip)
2b3c(3): mov %r14d,%eax
2b3f(3): mov %r8,%r15
2b42(3): mov %r12,%r14
2b45(5): mov 0x18(%rsp),%rsi
2b4a(3): sub %r14,%r15
2b4d(3): mov %r14,%rdx
2b50(3): mov %r15,%rdi
2b53(4): mov 0x20(%rsp),%ebx
2b57(3): mov %eax,%r12d
2b5a(5): call 0xffffec66(%rip)
2b5f(5): jmp 0xfffffe4b(%rip)
2b64(4): nop 0x0(%rax)
2b68(4): mov (%rsp),%rcx
2b6c(7): lea 0x288(%rcx),%rdi
2b73(7): mov $0x20,0x287(%rcx)
2b7a(5): mov %rdi,0x8(%rsp)
2b7f(5): jmp 0xfffffe52(%rip)
2b84(4): nop 0x0(%rax)
2b88(4): sub $0x10,%rsp
2b8c(3): mov %r15d,%edi
2b8f(2): fld %st0,%st0
2b91(3): fstp %st0,(%rsp)
2b94(4): fstp %st0,0x30(%rsp)
2b98(5): call 0xfffff9b8(%rip)
2b9d(1): pop %rax
2b9e(1): pop %rdx
2b9f(4): fld 0x20(%rsp),%st0
2ba3(5): jmp 0xfffffc16(%rip)
2ba8(8): nop 0x0(%rax,%rax,1)
2bb0(4): sub $0x10,%rsp
2bb4(3): mov %r15d,%edi
2bb7(3): fstp %st0,(%rsp)
2bba(5): call 0xfffff996(%rip)
2bbf(2): pop %r8
2bc1(2): pop %r9
2bc3(5): jmp 0xfffffd69(%rip)
2bc8(8): nop 0x0(%rax,%rax,1)
2bd0(4): lea 0x2(%rdi),%rdx
2bd4(4): mov $0x69,0x1(%rdi)
2bd8(5): jmp 0xfffffe43(%rip)
2bdd(4): cmp $0x9,%r10
2be1(6): jnbe 0x297(%rip)
2be7(4): cmp $0x1,%r15d
2beb(6): jz 0x2b7(%rip)
2bf1(3): test %r15d,%r15d
2bf4(3): setz %dl
2bf7(2): test %edi,%edi
2bf9(4): setnle %r8b
2bfd(3): and %r8d,%edx
2c00(2): test %dl,%dl
2c02(6): jz 0x287(%rip)
2c08(4): lea 0x1(%rax),%r9d
2c0c(4): cmp $0xa,%r9d
2c10(6): jz 0x301(%rip)
2c16(4): add $0x30,%r9d
2c1a(4): mov (%rsp),%rax
2c1e(7): lea 0x286(%rax),%r8
2c25(7): mov %r9b,0x286(%rax)
2c2c(2): mov %ebp,%eax
2c2e(3): sub %rbp,%r8
2c31(3): cmp $0x8,%ebp
2c34(6): jnb 0x28d(%rip)
2c3a(4): test $0x4,%bpl
2c3e(6): jnz 0x388(%rip)
2c44(2): test %eax,%eax
2c46(2): jz 0x11(%rip)
2c48(4): movzx (%r14),%edx
2c4c(2): test $0x2,%al
2c4e(3): mov %dl,(%r8)
2c51(6): jnz 0x38f(%rip)
2c57(2): xor %edi,%edi
2c59(3): xor %r9d,%r9d
2c5c(4): nop 0x0(%rax)
2c60(4): cmp $0x1,%r15d
2c64(6): jz 0x17c(%rip)
2c6a(3): test %r15d,%r15d
2c6d(2): jnz 0x23(%rip)
2c6f(3): add %r9d,%edi
2c72(2): test %edi,%edi
2c74(2): jle 0x1c(%rip)
2c76(4): add $0x1,%rsi
2c7a(2): test %ecx,%ecx
2c7c(2): jz 0x14(%rip)
2c7e(4): mov 0x34(%rsp),%eax
2c82(3): cmp %rsi,%rax
2c85(6): jz 0x1cb(%rip)
2c8b(5): nop 0x0(%rax,%rax,1)
2c90(3): mov %r8,%r15
2c93(a): mov $0x-3689348814741910323,%rcx
2c9d(3): nop (%rax)
2ca0(3): mov %rsi,%rax
2ca3(4): sub $0x1,%r15
2ca7(3): mul %rax,%rcx,%rdx
2caa(4): shr $0x3,%rdx
2cae(4): lea 0x0(%rdx,%rdx,4),%rax
2cb2(3): add %rax,%rax
2cb5(3): sub %rax,%rsi
2cb8(3): add $0x30,%esi
2cbb(3): test %rdx,%rdx
2cbe(3): mov %sil,(%r15)
2cc1(3): mov %rdx,%rsi
2cc4(2): jnz 0xffffffdc(%rip)
2cc6(5): jmp 0xfffffcda(%rip)
2ccb(5): nop 0x0(%rax,%rax,1)
2cd0(5): mov 0x10(%rsp),%rcx
2cd5(4): cmp $0x1,%rcx
2cd9(6): jbe 0x1a9(%rip)
2cdf(4): mov 0x34(%rsp),%edx
2ce3(5): mov $0x1,%ebx
2ce8(5): mov $0x1,%eax
2ced(4): imul %rdx,%rax
2cf1(3): cmp %rax,%rcx
2cf4(6): jbe 0xfffffcc5(%rip)
2cfa(3): add $0x1,%ebx
2cfd(3): cmp $0x8,%ebx
2d00(2): jnz 0xffffffed(%rip)
2d02(5): jmp 0xfffffcb7(%rip)
2d07(9): nop 0x0(%rax,%rax,1)
2d10(4): sub $0x10,%rsp
2d14(7): lea 0x39d0(%rip),%rcx
2d1b(7): mov $0xffffffff,%rdx
2d22(2): fld %st0,%st0
2d24(3): fstp %st0,(%rsp)
2d27(5): mov 0x10(%rsp),%r14
2d2c(5): mov $0x1,%esi
2d31(2): xor %eax,%eax
2d33(3): mov %r14,%rdi
2d36(4): fstp %st0,0x30(%rsp)
2d3a(5): call 0xffffebe6(%rip)
2d3f(3): mov %r14,%rdi
2d42(5): call 0xffffe95e(%rip)
2d47(3): mov %rax,%r14
2d4a(1): pop %rax
2d4b(1): pop %rdx
2d4c(5): cmp 0x18(%rsp),%r14
2d51(4): fld 0x20(%rsp),%st0
2d55(6): jbe 0xfffffaad(%rip)
2d5b(6): fld 0x39fb(%rip),%st0
2d61(2): fmul %st0,%st1
2d63(2): fdivp %st0,%st1
2d65(4): sub $0x10,%rsp
2d69(7): lea 0x3975(%rip),%rcx
2d70(5): mov 0x10(%rsp),%r14
2d75(7): mov $0xffffffff,%rdx
2d7c(5): mov $0x1,%esi
2d81(2): xor %eax,%eax
2d83(2): xor %ebp,%ebp
2d85(3): mov %r14,%rdi
2d88(3): fstp %st0,(%rsp)
2d8b(5): call 0xffffeb95(%rip)
2d90(3): mov %r14,%rdi
2d93(5): call 0xffffe90d(%rip)
2d98(2): pop %r10
2d9a(3): mov %rax,%r14
2d9d(2): pop %r11
2d9f(5): jmp 0xfffffbe1(%rip)
2da4(4): nop 0x0(%rax)
2da8(6): fld 0x39ae(%rip),%st0
2dae(2): fmul %st0,%st1
2db0(6): fld 0x39aa(%rip),%st0
2db6(2): fucomip %st2,%st0
2db8(2): jbe 0xffffffab(%rip)
2dba(4): fstp %st0,0x18(%rsp)
2dbe(4): sub $0x10,%rsp
2dc2(3): mov %r15d,%edi
2dc5(3): fstp %st0,(%rsp)
2dc8(5): call 0xfffff788(%rip)
2dcd(1): pop %rbp
2dce(2): pop %r14
2dd0(4): fld 0x18(%rsp),%st0
2dd4(2): jmp 0xffffff8f(%rip)
2dd6(a): nop 0x0(%rax,%rax,1)
2de0(3): mov %rsi,%rax
2de3(3): movsxd %edi,%rdi
2de6(3): and $0x1,%eax
2de9(3): add %rdi,%rax
2dec(3): setnz %al
2def(3): movzx %al,%eax
2df2(3): add %eax,%r9d
2df5(4): cmp $0x5,%r9d
2df9(6): jnle 0xfffffe7d(%rip)
2dff(5): jmp 0xfffffe91(%rip)
2e04(4): nop 0x0(%rax)
2e08(4): setb %dil
2e0c(4): movzx %dil,%edi
2e10(3): add $0x2,%edi
2e13(5): jmp 0xfffffa76(%rip)
2e18(8): nop 0x0(%rax,%rax,1)
2e20(5): mov 0x8(%rsp),%r8
2e25(2): xor %ebx,%ebx
2e27(5): jmp 0xfffffe39(%rip)
2e2c(4): nop 0x0(%rax)
2e30(5): mov 0x8(%rsp),%rbx
2e35(2): test %eax,%eax
2e37(4): lea 0x1(%rbx),%rdx
2e3b(3): mov $0x6b,(%rbx)
2e3e(6): jnz 0xfffffbdd(%rip)
2e44(5): mov %rdx,0x8(%rsp)
2e49(5): jmp 0xfffffbde(%rip)
2e4e(2): nop 
2e50(3): cmp $0x8,%ebx
2e53(6): jz 0xfffffe3d(%rip)
2e59(3): add $0x1,%ebx
2e5c(4): test $0x8,%r12b
2e60(6): jz 0xc2(%rip)
2e66(4): lea 0xffffffff(%r8),%r15
2e6a(5): mov $0x31,0xffffffff(%r8)
2e6f(5): jmp 0xfffffb31(%rip)
2e74(4): nop 0x0(%rax)
2e78(5): mov 0x8(%rsp),%r8
2e7d(5): jmp 0xfffffde3(%rip)
2e82(2): xor %ebx,%ebx
2e84(5): jmp 0xfffffb35(%rip)
2e89(2): test %eax,%eax
2e8b(6): jnz 0xfffffd8b(%rip)
2e91(4): test $0x8,%r12b
2e95(2): jnz 0x1f(%rip)
2e97(6): mov $0x30,%r9d
2e9d(5): jmp 0xfffffd7d(%rip)
2ea2(2): mov %eax,%edx
2ea4(3): and $0x1,%edx
2ea7(2): add %edi,%edx
2ea9(3): cmp $0x2,%edx
2eac(3): setnle %dl
2eaf(5): jmp 0xfffffd51(%rip)
2eb4(5): mov 0x8(%rsp),%r8
2eb9(3): xor %r9d,%r9d
2ebc(5): jmp 0xfffffda4(%rip)
2ec1(3): mov (%r14),%rax
2ec4(3): mov %r14,%r9
2ec7(3): mov %rax,(%r8)
2eca(2): mov %ebp,%eax
2ecc(5): mov 0xfffffff8(%r14,%rax,1),%rdx
2ed1(5): mov %rdx,0xfffffff8(%r8,%rax,1)
2ed6(4): lea 0x8(%r8),%rdx
2eda(3): mov %r8,%rax
2edd(4): and $0xfffffff8,%rdx
2ee1(3): sub %rdx,%rax
2ee4(3): sub %rax,%r9
2ee7(2): add %ebp,%eax
2ee9(3): and $0xf8,%eax
2eec(3): cmp $0x8,%eax
2eef(6): jb 0xfffffd68(%rip)
2ef5(3): and $0xf8,%eax
2ef8(2): xor %edi,%edi
2efa(3): mov %edi,%r10d
2efd(3): add $0x8,%edi
2f00(4): mov 0x0(%r9,%r10,1),%r11
2f04(2): cmp %eax,%edi
2f06(4): mov %r11,0x0(%rdx,%r10,1)
2f0a(2): jb 0xfffffff0(%rip)
2f0c(5): jmp 0xfffffd4b(%rip)
2f11(4): lea 0x1(%r10),%rsi
2f15(4): cmp $0xa,%rsi
2f19(2): jz 0x57(%rip)
2f1b(2): xor %edi,%edi
2f1d(5): jmp 0xffffff74(%rip)
2f22(3): mov %rbp,%rax
2f25(5): mov $0x30,0xffffffff(%r8)
2f2a(3): not %rax
2f2d(3): add %rax,%r8
2f30(3): cmp $0x8,%ebp
2f33(2): mov %ebp,%eax
2f35(2): jnb 0x45(%rip)
2f37(3): and $0x4,%ebp
2f3a(6): jnz 0xb7(%rip)
2f40(2): test %eax,%eax
2f42(6): jz 0xffffff24(%rip)
2f48(4): movzx (%r14),%edx
2f4c(2): test $0x2,%al
2f4e(3): mov %dl,(%r8)
2f51(6): jz 0xffffff15(%rip)
2f57(6): movzx 0xfffffffe(%r14,%rax,1),%edx
2f5d(6): mov %dx,0xfffffffe(%r8,%rax,1)
2f63(5): jmp 0xffffff03(%rip)
2f68(8): nop 0x0(%rax,%rax,1)
2f70(5): mov 0x8(%rsp),%r8
2f75(5): jmp 0xfffffce2(%rip)
2f7a(3): mov (%r14),%rax
2f7d(4): lea 0x8(%r8),%rcx
2f81(4): and $0xfffffff8,%rcx
2f85(3): mov %rax,(%r8)
2f88(2): mov %ebp,%eax
2f8a(5): mov 0xfffffff8(%r14,%rax,1),%rdx
2f8f(5): mov %rdx,0xfffffff8(%r8,%rax,1)
2f94(3): mov %r8,%rax
2f97(3): sub %rcx,%rax
2f9a(3): sub %rax,%r14
2f9d(2): add %ebp,%eax
2f9f(3): and $0xf8,%eax
2fa2(3): cmp $0x8,%eax
2fa5(6): jb 0xfffffec1(%rip)
2fab(3): and $0xf8,%eax
2fae(2): xor %edx,%edx
2fb0(2): mov %edx,%esi
2fb2(3): add $0x8,%edx
2fb5(4): mov 0x0(%r14,%rsi,1),%rdi
2fb9(2): cmp %eax,%edx
2fbb(4): mov %rdi,0x0(%rcx,%rsi,1)
2fbf(2): jb 0xfffffff1(%rip)
2fc1(5): jmp 0xfffffea5(%rip)
2fc6(3): mov (%r14),%edx
2fc9(3): mov %edx,(%r8)
2fcc(5): mov 0xfffffffc(%r14,%rax,1),%edx
2fd1(5): mov %edx,0xfffffffc(%r8,%rax,1)
2fd6(5): jmp 0xfffffc81(%rip)
2fdb(5): call 0xffffe6d5(%rip)
2fe0(6): movzx 0xfffffffe(%r14,%rax,1),%edx
2fe6(6): mov %dx,0xfffffffe(%r8,%rax,1)
2fec(5): jmp 0xfffffc6b(%rip)
2ff1(3): mov (%r14),%edx
2ff4(3): mov %edx,(%r8)
2ff7(5): mov 0xfffffffc(%r14,%rax,1),%edx
2ffc(5): mov %edx,0xfffffffc(%r8,%rax,1)
3001(5): jmp 0xfffffe65(%rip)
3006(2): test %eax,%eax
3008(5): mov 0x8(%rsp),%rdx
300d(6): jnz 0xfffffa0e(%rip)
3013(5): jmp 0xfffffa14(%rip)
3018(4): mov 0x20(%rsp),%ebx
301c(3): mov %rax,%r15
301f(3): mov %r14d,%r12d
3022(5): jmp 0xfffff988(%rip)

"human_options" :
3030(2): push %r13
3032(2): push %r12
3034(3): mov %rsi,%r13
3037(1): push %rbp
3038(1): push %rbx
3039(3): mov %rdx,%r12
303c(3): mov %rdi,%rbx
303f(4): sub $0x18,%rsp
3043(9): mov $0x28,%rax
304c(5): mov %rax,0x8(%rsp)
3051(2): xor %eax,%eax
3053(3): test %rdi,%rdi
3056(6): jz 0x11a(%rip)
305c(2): xor %ebp,%ebp
305e(3): cmp $0x27,(%rbx)
3061(2): jnz 0xb(%rip)
3063(4): add $0x1,%rbx
3067(5): mov $0x4,%ebp
306c(7): lea 0x36cd(%rip),%rdx
3073(7): lea 0x205b26(%rip),%rsi
307a(5): mov $0x4,%ecx
307f(3): mov %rbx,%rdi
3082(5): call 0x2dbe(%rip)
3087(2): test %eax,%eax
3089(2): js 0x3f(%rip)
308b(7): lea 0x36ae(%rip),%rdx
3092(2): cwde 
3094(8): mov $0x1,(%r12)
309c(3): or 0x0(%rdx,%rax,4),%ebp
309f(2): xor %eax,%eax
30a1(4): mov %ebp,0x0(%r13)
30a5(5): mov 0x8(%rsp),%rcx
30aa(9): xor $0x28,%rcx
30b3(6): jnz 0x15e(%rip)
30b9(4): add $0x18,%rsp
30bd(1): pop %rbx
30be(1): pop %rbp
30bf(2): pop %r12
30c1(2): pop %r13
30c3(1): ret near (%rsp)
30c4(4): nop 0x0(%rax)
30c8(7): lea 0x3647(%rip),%r8
30cf(2): xor %edx,%edx
30d1(3): mov %rsp,%rsi
30d4(3): mov %r12,%rcx
30d7(3): mov %rbx,%rdi
30da(5): call 0x2786(%rip)
30df(2): test %eax,%eax
30e1(2): jnz 0x47(%rip)
30e3(3): movzx (%rbx),%esi
30e6(3): lea 0xffffffd0(%rsi),%edx
30e9(3): cmp $0x9,%dl
30ec(2): jbe 0x2c(%rip)
30ee(4): mov (%rsp),%rcx
30f2(3): cmp %rcx,%rbx
30f5(2): jnz 0x14(%rip)
30f7(5): jmp 0xd9(%rip)
30fc(4): nop 0x0(%rax)
3100(3): cmp %rcx,%rbx
3103(6): jz 0xcd(%rip)
3109(4): add $0x1,%rbx
310d(3): movzx (%rbx),%edi
3110(3): lea 0xffffffd0(%rdi),%edx
3113(3): cmp $0x9,%dl
3116(2): jnbe 0xffffffea(%rip)
3118(4): mov (%r12),%rdx
311c(4): mov %ebp,0x0(%r13)
3120(2): jmp 0x14(%rip)
3122(6): nop 0x0(%rax,%rax,1)
3128(4): mov (%r12),%rdx
312c(8): mov $0x0,0x0(%r13)
3134(3): test %rdx,%rdx
3137(6): jnz 0xffffff6e(%rip)
313d(7): lea 0x35c2(%rip),%rdi
3144(5): call 0xffffe48c(%rip)
3149(4): cmp $0x1,%rax
314d(3): sbb %rax,%rax
3150(5): and $0x200,%eax
3155(6): add $0x200,%rax
315b(4): mov %rax,(%r12)
315f(5): mov $0x4,%eax
3164(5): jmp 0xffffff41(%rip)
3169(7): nop 0x0(%rax)
3170(7): lea 0x357a(%rip),%rdi
3177(5): call 0xffffe459(%rip)
317c(3): test %rax,%rax
317f(3): mov %rax,%rbx
3182(6): jnz 0xfffffeda(%rip)
3188(7): lea 0x356d(%rip),%rdi
318f(5): call 0xffffe441(%rip)
3194(3): test %rax,%rax
3197(3): mov %rax,%rbx
319a(6): jnz 0xfffffec2(%rip)
31a0(7): lea 0x355f(%rip),%rdi
31a7(5): call 0xffffe429(%rip)
31ac(3): test %rax,%rax
31af(2): jz 0x4b(%rip)
31b1(8): mov $0x200,(%r12)
31b9(2): xor %eax,%eax
31bb(8): mov $0x0,0x0(%r13)
31c3(5): jmp 0xfffffee2(%rip)
31c8(8): nop 0x0(%rax,%rax,1)
31d0(4): cmp $0x42,0xffffffff(%rcx)
31d4(2): jz 0x14(%rip)
31d6(4): or $0x80,%bpl
31da(3): or $0x20,%ebp
31dd(5): jmp 0xffffff3b(%rip)
31e2(6): nop 0x0(%rax,%rax,1)
31e8(6): or $0x180,%ebp
31ee(4): cmp $0x69,0xfffffffe(%rcx)
31f2(6): jnz 0xffffff26(%rip)
31f8(2): jmp 0xffffffe2(%rip)
31fa(8): mov $0x400,(%r12)
3202(2): xor %eax,%eax
3204(8): mov $0x0,0x0(%r13)
320c(5): jmp 0xfffffe99(%rip)
3211(5): call 0xffffe49f(%rip)

"set_program_name" :
3220(3): test %rdi,%rdi
3223(1): push %rbx
3224(2): jz 0x79(%rip)
3226(5): mov $0x2f,%esi
322b(3): mov %rdi,%rbx
322e(5): call 0xffffe4d2(%rip)
3233(3): test %rax,%rax
3236(2): jz 0x57(%rip)
3238(4): lea 0x1(%rax),%r8
323c(3): mov %r8,%rdx
323f(3): sub %rbx,%rdx
3242(4): cmp $0x6,%rdx
3246(2): jle 0x47(%rip)
3248(4): lea 0xfffffffa(%rax),%rsi
324c(7): lea 0x3555(%rip),%rdi
3253(5): mov $0x7,%ecx
3258(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
325a(3): setnbe %dl
325d(3): sbb $0x0,%dl
3260(2): test %dl,%dl
3262(2): jnz 0x2b(%rip)
3264(7): lea 0x3545(%rip),%rdi
326b(5): mov $0x3,%ecx
3270(3): mov %r8,%rsi
3273(3): mov %r8,%rbx
3276(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3278(3): setnbe %dl
327b(3): sbb $0x0,%dl
327e(2): test %dl,%dl
3280(2): jnz 0xd(%rip)
3282(4): lea 0x4(%rax),%rbx
3286(7): mov %rbx,0x205e13(%rip)
328d(7): mov %rbx,0x205e6c(%rip)
3294(7): mov %rbx,0x205e25(%rip)
329b(1): pop %rbx
329c(1): ret near (%rsp)
329d(7): mov 0x205e3c(%rip),%rcx
32a4(7): lea 0x34c5(%rip),%rdi
32ab(5): mov $0x37,%edx
32b0(5): mov $0x1,%esi
32b5(5): call 0xffffe61b(%rip)
32ba(5): call 0xffffe336(%rip)

"gettext_quote.part.1" :
32c0(1): push %rbp
32c1(1): push %rbx
32c2(3): mov %rdi,%rbp
32c5(2): mov %esi,%ebx
32c7(4): sub $0x8,%rsp
32cb(5): call 0x2fd5(%rip)
32d0(3): movzx (%rax),%edx
32d3(3): and $0xdf,%edx
32d6(3): cmp $0x55,%dl
32d9(2): jz 0x77(%rip)
32db(3): cmp $0x47,%dl
32de(2): jz 0x22(%rip)
32e0(7): lea 0x34dc(%rip),%rax
32e7(7): lea 0x34d7(%rip),%rdx
32ee(3): cmp $0x9,%ebx
32f1(4): cmovne %rdx,%rax
32f5(4): add $0x8,%rsp
32f9(1): pop %rbx
32fa(1): pop %rbp
32fb(1): ret near (%rsp)
32fc(4): nop 0x0(%rax)
3300(4): movzx 0x1(%rax),%edx
3304(3): and $0xdf,%edx
3307(3): cmp $0x42,%dl
330a(2): jnz 0xffffffd6(%rip)
330c(4): cmp $0x31,0x2(%rax)
3310(2): jnz 0xffffffd0(%rip)
3312(4): cmp $0x38,0x3(%rax)
3316(2): jnz 0xffffffca(%rip)
3318(4): cmp $0x30,0x4(%rax)
331c(2): jnz 0xffffffc4(%rip)
331e(4): cmp $0x33,0x5(%rax)
3322(2): jnz 0xffffffbe(%rip)
3324(4): cmp $0x30,0x6(%rax)
3328(2): jnz 0xffffffb8(%rip)
332a(4): cmp $0x0,0x7(%rax)
332e(2): jnz 0xffffffb2(%rip)
3330(4): cmp $0x60,0x0(%rbp)
3334(7): lea 0x3481(%rip),%rax
333b(7): lea 0x347e(%rip),%rdx
3342(4): cmovne %rdx,%rax
3346(4): add $0x8,%rsp
334a(1): pop %rbx
334b(1): pop %rbp
334c(1): ret near (%rsp)
334d(3): nop (%rax)
3350(4): movzx 0x1(%rax),%edx
3354(3): and $0xdf,%edx
3357(3): cmp $0x54,%dl
335a(2): jnz 0xffffff86(%rip)
335c(4): movzx 0x2(%rax),%edx
3360(3): and $0xdf,%edx
3363(3): cmp $0x46,%dl
3366(6): jnz 0xffffff7a(%rip)
336c(4): cmp $0x2d,0x3(%rax)
3370(6): jnz 0xffffff70(%rip)
3376(4): cmp $0x38,0x4(%rax)
337a(6): jnz 0xffffff66(%rip)
3380(4): cmp $0x0,0x5(%rax)
3384(6): jnz 0xffffff5c(%rip)
338a(4): cmp $0x60,0x0(%rbp)
338e(7): lea 0x341f(%rip),%rax
3395(7): lea 0x341c(%rip),%rdx
339c(4): cmovne %rdx,%rax
33a0(4): add $0x8,%rsp
33a4(1): pop %rbx
33a5(1): pop %rbp
33a6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
33b0(2): push %r15
33b2(2): push %r14
33b4(3): mov %r8d,%r15d
33b7(2): push %r13
33b9(2): push %r12
33bb(3): mov %rdi,%r14
33be(1): push %rbp
33bf(1): push %rbx
33c0(3): mov %r9d,%ebx
33c3(3): mov %rsi,%r13
33c6(3): mov %rcx,%rbp
33c9(3): and $0x2,%ebx
33cc(7): sub $0xb8,%rsp
33d3(8): mov 0xf0(%rsp),%rax
33db(5): mov %rdx,0x10(%rsp)
33e0(5): mov %r8d,0x8(%rsp)
33e5(5): mov %r9d,0x78(%rsp)
33ea(5): mov %rax,0x20(%rsp)
33ef(8): mov 0xf8(%rsp),%rax
33f7(5): mov %rax,0x68(%rsp)
33fc(8): mov 0x100(%rsp),%rax
3404(5): mov %rax,0x60(%rsp)
3409(9): mov $0x28,%rax
3412(8): mov %rax,0xa8(%rsp)
341a(2): xor %eax,%eax
341c(5): call 0xffffe274(%rip)
3421(4): cmp $0xa,%r15d
3425(5): mov %rax,0x58(%rsp)
342a(6): jnbe 0x11b5(%rip)
3430(7): lea 0x33e9(%rip),%rcx
3437(3): mov %r15d,%edx
343a(4): movsxd 0x0(%rcx,%rdx,4),%rax
343e(3): add %rcx,%rax
3441(2): jmp %rax
3443(5): mov $0x1,0xe(%rsp)
3448(5): mov $0x0,0x7c(%rsp)
344d(3): xor %r12d,%r12d
3450(9): mov $0x0,0x50(%rsp)
3459(5): mov $0x1,0xf(%rsp)
345e(5): mov $0x0,0xd(%rsp)
3463(7): lea 0x335b(%rip),%rax
346a(9): mov $0x1,0x18(%rsp)
3473(3): xor %r15d,%r15d
3476(8): mov $0x2,0x8(%rsp)
347e(5): mov %rax,0x48(%rsp)
3483(3): xor %r11d,%r11d
3486(3): mov %rbp,%rax
3489(3): mov %r12d,%r8d
348c(3): mov %r11,%rbp
348f(3): mov %rax,%r11
3492(6): nop 0x0(%rax,%rax,1)
3498(3): cmp %rbp,%r11
349b(4): setnz %r12b
349f(4): cmp $0xffffffff,%r11
34a3(2): jnz 0xf(%rip)
34a5(5): mov 0x10(%rsp),%rax
34aa(4): cmp $0x0,0x0(%rax,%rbp,1)
34ae(4): setnz %r12b
34b2(3): test %r12b,%r12b
34b5(6): jz 0x65b(%rip)
34bb(5): cmp $0x2,0x8(%rsp)
34c0(5): mov 0x10(%rsp),%rdi
34c5(4): lea 0x0(%rdi,%rbp,1),%r9
34c9(3): setnz %al
34cc(4): and 0xd(%rsp),%al
34d0(3): mov %eax,%r10d
34d3(6): jz 0xad(%rip)
34d9(5): mov 0x18(%rsp),%rax
34de(3): test %rax,%rax
34e1(6): jz 0x42f(%rip)
34e7(4): cmp $0xffffffff,%r11
34eb(5): lea 0x0(%rbp,%rax,1),%rbx
34f0(2): jnz 0x30(%rip)
34f2(4): cmp $0x1,%rax
34f6(2): jbe 0x2a(%rip)
34f8(5): mov %r8b,0x38(%rsp)
34fd(5): mov %r10b,0x30(%rsp)
3502(5): mov %r9,0x28(%rsp)
3507(5): call 0xffffe199(%rip)
350c(6): movzx 0x38(%rsp),%r8d
3512(6): movzx 0x30(%rsp),%r10d
3518(3): mov %rax,%r11
351b(5): mov 0x28(%rsp),%r9
3520(3): cmp %r11,%rbx
3523(5): mov %r10b,0x28(%rsp)
3528(6): jnbe 0x5b8(%rip)
352e(5): mov 0x18(%rsp),%rdx
3533(5): mov 0x48(%rsp),%rsi
3538(3): mov %r9,%rdi
353b(5): mov %r11,0x40(%rsp)
3540(5): mov %r8b,0x38(%rsp)
3545(5): mov %r9,0x30(%rsp)
354a(5): call 0xffffe236(%rip)
354f(2): test %eax,%eax
3551(5): mov 0x30(%rsp),%r9
3556(6): movzx 0x38(%rsp),%r8d
355c(5): mov 0x40(%rsp),%r11
3561(6): jnz 0x57f(%rip)
3567(5): cmp $0x0,0xf(%rsp)
356c(6): movzx 0x28(%rsp),%r10d
3572(6): jnz 0xf83(%rip)
3578(8): nop 0x0(%rax,%rax,1)
3580(4): movzx (%r9),%ebx
3584(3): cmp $0x7e,%bl
3587(6): jnbe 0x321(%rip)
358d(7): lea 0x32b8(%rip),%rcx
3594(3): movzx %bl,%edx
3597(4): movsxd 0x0(%rcx,%rdx,4),%rax
359b(3): add %rcx,%rax
359e(2): jmp %rax
35a0(3): xor %r10d,%r10d
35a3(4): cmp $0x1,%r11
35a7(3): setnz %al
35aa(4): cmp $0xffffffff,%r11
35ae(2): jnz 0xe(%rip)
35b0(5): mov 0x10(%rsp),%rax
35b5(4): cmp $0x0,0x1(%rax)
35b9(3): setnz %al
35bc(5): cmp $0x2,0x8(%rsp)
35c1(3): setz %dl
35c4(2): test %al,%al
35c6(6): jz 0x252(%rip)
35cc(3): xor %r12d,%r12d
35cf(2): xor %eax,%eax
35d1(7): nop 0x0(%rax)
35d8(5): cmp $0x1,0xd(%rsp)
35dd(6): jnz 0x115(%rip)
35e3(2): test %dl,%dl
35e5(6): jnz 0x10d(%rip)
35eb(5): mov 0x20(%rsp),%rsi
35f0(3): test %rsi,%rsi
35f3(2): jz 0x16(%rip)
35f5(2): mov %ebx,%edx
35f7(3): shr $0x5,%dl
35fa(3): movzx %dl,%edx
35fd(3): mov 0x0(%rsi,%rdx,4),%edx
3600(3): bt %ebx,%edx
3603(6): jb 0x150(%rip)
3609(3): test %r10b,%r10b
360c(6): jnz 0x147(%rip)
3612(3): xor $0x1,%eax
3615(4): add $0x1,%rbp
3619(3): and %r8d,%eax
361c(2): test %al,%al
361e(2): jz 0x22(%rip)
3620(3): cmp %r15,%r13
3623(2): jbe 0x7(%rip)
3625(5): mov $0x27,0x0(%r14,%r15,1)
362a(4): lea 0x1(%r15),%rax
362e(3): cmp %rax,%r13
3631(2): jbe 0x8(%rip)
3633(6): mov $0x27,0x1(%r14,%r15,1)
3639(4): add $0x2,%r15
363d(3): xor %r8d,%r8d
3640(3): cmp %r13,%r15
3643(2): jnb 0x6(%rip)
3645(4): mov %bl,0x0(%r14,%r15,1)
3649(5): movzx 0xe(%rsp),%edi
364e(4): add $0x1,%r15
3652(5): mov $0x0,%eax
3657(3): test %r12b,%r12b
365a(3): cmove %eax,%edi
365d(5): mov %dil,0xe(%rsp)
3662(5): jmp 0xfffffe36(%rip)
3667(9): nop 0x0(%rax,%rax,1)
3670(3): xor %r10d,%r10d
3673(4): mov 0x8(%rsp),%eax
3677(3): cmp $0x2,%eax
367a(6): jz 0x5be(%rip)
3680(3): cmp $0x5,%eax
3683(6): jz 0x575(%rip)
3689(3): cmp $0x2,%eax
368c(5): mov $0x3f,%ebx
3691(3): setz %dl
3694(3): xor %r12d,%r12d
3697(2): xor %eax,%eax
3699(5): jmp 0xffffff3f(%rip)
369e(2): nop 
36a0(3): xor %r10d,%r10d
36a3(5): cmp $0x2,0x8(%rsp)
36a8(6): jz 0x508(%rip)
36ae(5): mov %r12b,0x7c(%rsp)
36b3(2): xor %edx,%edx
36b5(2): xor %eax,%eax
36b7(5): mov $0x27,%ebx
36bc(5): jmp 0xffffff1c(%rip)
36c1(7): nop 0x0(%rax)
36c8(5): mov $0x9,%edx
36cd(5): mov $0x74,%ebx
36d2(5): cmp $0x2,0x8(%rsp)
36d7(3): setz %al
36da(4): and 0xf(%rsp),%al
36de(6): jnz 0x150(%rip)
36e4(5): cmp $0x0,0xd(%rsp)
36e9(2): jnz 0x67(%rip)
36eb(2): mov %edx,%ebx
36ed(3): xor %r12d,%r12d
36f0(2): xor %eax,%eax
36f2(5): cmp $0x0,0xf(%rsp)
36f7(6): jnz 0xfffffef4(%rip)
36fd(5): jmp 0xffffff0c(%rip)
3702(6): nop 0x0(%rax,%rax,1)
3708(5): mov $0x8,%edx
370d(5): mov $0x62,%ebx
3712(2): jmp 0xffffffd2(%rip)
3714(4): nop 0x0(%rax)
3718(5): cmp $0x2,0x8(%rsp)
371d(6): jz 0x3d3(%rip)
3723(5): cmp $0x0,0xd(%rsp)
3728(6): jz 0x218(%rip)
372e(5): cmp $0x0,0xf(%rsp)
3733(6): jz 0x20d(%rip)
3739(6): cmp $0x0,0x18(%rsp)
373f(6): jnz 0x3bc(%rip)
3745(5): mov $0x5c,%ebx
374a(6): nop 0x0(%rax,%rax,1)
3750(3): xor %r12d,%r12d
3753(5): cmp $0x2,0x8(%rsp)
3758(3): setz %dl
375b(5): cmp $0x0,0xf(%rsp)
3760(2): mov %edx,%eax
3762(6): jnz 0x856(%rip)
3768(3): mov %r8d,%eax
376b(3): xor $0x1,%eax
376e(2): and %dl,%al
3770(2): jz 0x31(%rip)
3772(3): cmp %r15,%r13
3775(2): jbe 0x7(%rip)
3777(5): mov $0x27,0x0(%r14,%r15,1)
377c(4): lea 0x1(%r15),%rdx
3780(3): cmp %rdx,%r13
3783(2): jbe 0x8(%rip)
3785(6): mov $0x24,0x1(%r14,%r15,1)
378b(4): lea 0x2(%r15),%rdx
378f(3): cmp %rdx,%r13
3792(2): jbe 0x8(%rip)
3794(6): mov $0x27,0x2(%r14,%r15,1)
379a(4): add $0x3,%r15
379e(3): mov %eax,%r8d
37a1(3): cmp %r15,%r13
37a4(2): jbe 0x7(%rip)
37a6(5): mov $0x5c,0x0(%r14,%r15,1)
37ab(4): add $0x1,%r15
37af(4): add $0x1,%rbp
37b3(5): jmp 0xfffffe8d(%rip)
37b8(8): nop 0x0(%rax,%rax,1)
37c0(5): cmp $0x0,0xd(%rsp)
37c5(6): jnz 0x1ce(%rip)
37cb(2): xor %edx,%edx
37cd(5): test $0x1,0x78(%rsp)
37d2(6): jz 0xffffff19(%rip)
37d8(4): add $0x1,%rbp
37dc(5): jmp 0xfffffcbc(%rip)
37e1(7): nop 0x0(%rax)
37e8(5): cmp $0x2,0x8(%rsp)
37ed(3): setz %dl
37f0(2): xor %eax,%eax
37f2(5): jmp 0xfffffde6(%rip)
37f7(9): nop 0x0(%rax,%rax,1)
3800(5): mov $0x7,%edx
3805(5): mov $0x61,%ebx
380a(5): jmp 0xfffffeda(%rip)
380f(1): nop 
3810(5): cmp $0x2,0x8(%rsp)
3815(3): setz %dl
3818(3): test %rbp,%rbp
381b(6): jnz 0xfffffdb1(%rip)
3821(5): movzx 0xf(%rsp),%eax
3826(2): and %dl,%al
3828(6): jz 0xfffffdb0(%rip)
382e(3): mov %r11,%rbp
3831(8): mov $0x2,0x8(%rsp)
3839(5): jmp 0x700(%rip)
383e(2): nop 
3840(5): cmp $0x2,0x8(%rsp)
3845(3): setz %dl
3848(3): xor %r12d,%r12d
384b(2): jmp 0xffffffd6(%rip)
384d(3): nop (%rax)
3850(5): cmp $0x2,0x8(%rsp)
3855(5): mov $0x20,%ebx
385a(3): setz %dl
385d(2): jmp 0xffffffc4(%rip)
385f(1): nop 
3860(5): mov $0xd,%edx
3865(5): mov $0x72,%ebx
386a(5): jmp 0xfffffe68(%rip)
386f(1): nop 
3870(5): mov $0xc,%edx
3875(5): mov $0x66,%ebx
387a(5): jmp 0xfffffe6a(%rip)
387f(1): nop 
3880(5): mov $0xb,%edx
3885(5): mov $0x76,%ebx
388a(5): jmp 0xfffffe5a(%rip)
388f(1): nop 
3890(5): mov $0xa,%edx
3895(5): mov $0x6e,%ebx
389a(5): jmp 0xfffffe38(%rip)
389f(1): nop 
38a0(3): xor %r10d,%r10d
38a3(5): nop 0x0(%rax,%rax,1)
38a8(6): cmp $0x1,0x58(%rsp)
38ae(6): jnz 0x3aa(%rip)
38b4(5): mov %r11,0x38(%rsp)
38b9(5): mov %r8b,0x30(%rsp)
38be(5): mov %r10b,0x28(%rsp)
38c3(5): call 0xffffe04d(%rip)
38c8(3): mov (%rax),%rcx
38cb(3): movzx %bl,%edx
38ce(6): movzx 0x28(%rsp),%r10d
38d4(6): movzx 0x30(%rsp),%r8d
38da(5): mov 0x38(%rsp),%r11
38df(5): mov $0x1,%edi
38e4(4): movzx 0x0(%rcx,%rdx,2),%eax
38e8(4): and $0x4000,%ax
38ec(4): setnz %r12b
38f0(3): setz %al
38f3(4): and 0xd(%rsp),%al
38f7(2): test %al,%al
38f9(6): jnz 0x998(%rip)
38ff(5): cmp $0x2,0x8(%rsp)
3904(3): setz %dl
3907(5): jmp 0xfffffcd1(%rip)
390c(4): nop 0x0(%rax)
3910(4): movzx (%r9),%ebx
3914(3): cmp $0x7e,%bl
3917(2): jnbe 0xffffff89(%rip)
3919(7): lea 0x3128(%rip),%rcx
3920(3): movzx %bl,%edx
3923(4): movsxd 0x0(%rcx,%rdx,4),%rax
3927(3): add %rcx,%rax
392a(2): jmp %rax
392c(4): nop 0x0(%rax)
3930(3): xor %r10d,%r10d
3933(5): cmp $0x0,0xd(%rsp)
3938(6): jnz 0xfffffdf6(%rip)
393e(2): nop 
3940(5): mov $0x5c,%edx
3945(5): mov $0x5c,%ebx
394a(5): jmp 0xfffffd9a(%rip)
394f(1): nop 
3950(5): mov $0xc,%edx
3955(3): xor %r10d,%r10d
3958(5): mov $0x66,%ebx
395d(5): jmp 0xfffffd87(%rip)
3962(6): nop 0x0(%rax,%rax,1)
3968(5): mov $0xa,%edx
396d(3): xor %r10d,%r10d
3970(5): mov $0x6e,%ebx
3975(5): jmp 0xfffffd5d(%rip)
397a(6): nop 0x0(%rax,%rax,1)
3980(5): mov $0x61,%ebx
3985(5): jmp 0xfffffdcb(%rip)
398a(6): nop 0x0(%rax,%rax,1)
3990(3): xor %r10d,%r10d
3993(5): cmp $0x2,0x8(%rsp)
3998(3): setz %dl
399b(5): cmp $0x0,0xf(%rsp)
39a0(6): jnz 0xb9a(%rip)
39a6(3): mov %r8d,%eax
39a9(3): mov %r15,%rcx
39ac(3): xor $0x1,%eax
39af(2): and %dl,%al
39b1(2): jz 0x2f(%rip)
39b3(3): cmp %r15,%r13
39b6(2): jbe 0x7(%rip)
39b8(5): mov $0x27,0x0(%r14,%r15,1)
39bd(4): lea 0x1(%r15),%rcx
39c1(3): cmp %rcx,%r13
39c4(2): jbe 0x8(%rip)
39c6(6): mov $0x24,0x1(%r14,%r15,1)
39cc(4): lea 0x2(%r15),%rcx
39d0(3): cmp %rcx,%r13
39d3(6): jnbe 0x636(%rip)
39d9(4): lea 0x3(%r15),%rcx
39dd(3): mov %eax,%r8d
39e0(3): cmp %rcx,%r13
39e3(2): jbe 0x7(%rip)
39e5(5): mov $0x5c,0x0(%r14,%rcx,1)
39ea(5): cmp $0x2,0x8(%rsp)
39ef(4): lea 0x1(%rcx),%r15
39f3(6): jz 0x606(%rip)
39f9(4): lea 0x1(%rbp),%rax
39fd(3): cmp %r11,%rax
3a00(2): jnb 0x1b(%rip)
3a02(5): mov 0x10(%rsp),%rax
3a07(5): movzx 0x1(%rax,%rbp,1),%eax
3a0c(4): mov %al,0x28(%rsp)
3a10(3): sub $0x30,%eax
3a13(2): cmp $0x9,%al
3a15(6): jbe 0x834(%rip)
3a1b(3): mov %r12d,%eax
3a1e(5): mov $0x30,%ebx
3a23(3): xor %r12d,%r12d
3a26(5): jmp 0xfffffbb2(%rip)
3a2b(5): nop 0x0(%rax,%rax,1)
3a30(5): cmp $0x2,0x8(%rsp)
3a35(3): mov %r10d,%r12d
3a38(3): setz %dl
3a3b(3): xor %r10d,%r10d
3a3e(2): xor %eax,%eax
3a40(5): jmp 0xfffffb98(%rip)
3a45(3): nop (%rax)
3a48(5): cmp $0x2,0x8(%rsp)
3a4d(3): setz %dl
3a50(3): xor %r10d,%r10d
3a53(5): jmp 0xfffffdc5(%rip)
3a58(8): nop 0x0(%rax,%rax,1)
3a60(5): cmp $0x2,0x8(%rsp)
3a65(3): setz %dl
3a68(3): xor %r10d,%r10d
3a6b(3): xor %r12d,%r12d
3a6e(5): jmp 0xfffffdb3(%rip)
3a73(5): nop 0x0(%rax,%rax,1)
3a78(5): cmp $0x2,0x8(%rsp)
3a7d(3): mov %r10d,%r12d
3a80(5): mov $0x20,%ebx
3a85(3): setz %dl
3a88(3): xor %r10d,%r10d
3a8b(5): jmp 0xfffffd96(%rip)
3a90(5): mov $0xd,%edx
3a95(3): xor %r10d,%r10d
3a98(5): mov $0x72,%ebx
3a9d(5): jmp 0xfffffc35(%rip)
3aa2(6): nop 0x0(%rax,%rax,1)
3aa8(5): mov $0x76,%ebx
3aad(5): jmp 0xfffffca3(%rip)
3ab2(6): nop 0x0(%rax,%rax,1)
3ab8(5): mov $0x9,%edx
3abd(3): xor %r10d,%r10d
3ac0(5): mov $0x74,%ebx
3ac5(5): jmp 0xfffffc0d(%rip)
3aca(6): nop 0x0(%rax,%rax,1)
3ad0(5): mov $0x62,%ebx
3ad5(5): jmp 0xfffffc7b(%rip)
3ada(6): nop 0x0(%rax,%rax,1)
3ae0(3): xor %r10d,%r10d
3ae3(5): jmp 0xfffffa9d(%rip)
3ae8(8): nop 0x0(%rax,%rax,1)
3af0(5): cmp $0x0,0xf(%rsp)
3af5(6): jnz 0x96b(%rip)
3afb(4): add $0x1,%rbp
3aff(3): mov %r8d,%eax
3b02(3): xor %r12d,%r12d
3b05(5): mov $0x5c,%ebx
3b0a(5): jmp 0xfffffb12(%rip)
3b0f(1): nop 
3b10(5): cmp $0x2,0x8(%rsp)
3b15(5): movzx 0xf(%rsp),%ebx
3b1a(3): mov %r8d,%r12d
3b1d(3): mov %r11,%rbp
3b20(3): setz %dl
3b23(2): mov %ebx,%eax
3b25(3): test %r15,%r15
3b28(3): setz %cl
3b2b(2): and %edx,%eax
3b2d(2): and %cl,%al
3b2f(6): jnz 0xa67(%rip)
3b35(2): mov %ebx,%eax
3b37(3): xor $0x1,%eax
3b3a(2): and %al,%dl
3b3c(6): jz 0x970(%rip)
3b42(5): cmp $0x0,0x7c(%rsp)
3b47(6): jz 0x963(%rip)
3b4d(5): cmp $0x0,0xe(%rsp)
3b52(6): jnz 0x9fb(%rip)
3b58(3): test %r13,%r13
3b5b(3): setz %al
3b5e(6): cmp $0x0,0x50(%rsp)
3b64(3): setnz %dl
3b67(2): and %dl,%al
3b69(6): jz 0xa23(%rip)
3b6f(5): mov 0x50(%rsp),%r13
3b74(7): lea 0x2c4a(%rip),%rbx
3b7b(4): mov $0x27,(%r14)
3b7f(8): mov $0x2,0x8(%rsp)
3b87(6): mov $0x1,%r15d
3b8d(9): mov $0x1,0x18(%rsp)
3b96(5): mov $0x0,0xf(%rsp)
3b9b(5): mov %rbx,0x48(%rsp)
3ba0(4): mov %al,0x7c(%rsp)
3ba4(5): jmp 0xfffff8df(%rip)
3ba9(7): nop 0x0(%rax)
3bb0(5): cmp $0x0,0xf(%rsp)
3bb5(6): jnz 0x8ab(%rip)
3bbb(3): test %r13,%r13
3bbe(6): jz 0x402(%rip)
3bc4(2): xor %edx,%edx
3bc6(6): cmp $0x0,0x50(%rsp)
3bcc(6): jnz 0x3f4(%rip)
3bd2(5): mov %r13,0x50(%rsp)
3bd7(4): add $0x3,%r15
3bdb(2): xor %eax,%eax
3bdd(5): mov %r12b,0x7c(%rsp)
3be2(3): xor %r8d,%r8d
3be5(3): mov %rdx,%r13
3be8(5): mov $0x27,%ebx
3bed(5): jmp 0xfffffa1c(%rip)
3bf2(6): nop 0x0(%rax,%rax,1)
3bf8(5): test $0x4,0x78(%rsp)
3bfd(2): jz 0x23(%rip)
3bff(4): lea 0x2(%rbp),%rcx
3c03(3): cmp %r11,%rcx
3c06(2): jnb 0x1a(%rip)
3c08(5): mov 0x10(%rsp),%rax
3c0d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3c12(6): jz 0x790(%rip)
3c18(8): nop 0x0(%rax,%rax,1)
3c20(2): xor %edx,%edx
3c22(3): xor %r12d,%r12d
3c25(2): xor %eax,%eax
3c27(5): mov $0x3f,%ebx
3c2c(5): jmp 0xfffff9ac(%rip)
3c31(7): nop 0x0(%rax)
3c38(5): cmp $0x0,0xf(%rsp)
3c3d(6): jnz 0x823(%rip)
3c43(3): xor %r12d,%r12d
3c46(2): xor %eax,%eax
3c48(5): mov $0x3f,%ebx
3c4d(5): jmp 0xfffff9bc(%rip)
3c52(6): nop 0x0(%rax,%rax,1)
3c58(8): lea 0xa0(%rsp),%rax
3c60(4): cmp $0xffffffff,%r11
3c64(c): mov $0x0,0xa0(%rsp)
3c70(5): mov %rax,0x28(%rsp)
3c75(2): jnz 0x2f(%rip)
3c77(5): mov 0x10(%rsp),%rdi
3c7c(5): mov %r8b,0x40(%rsp)
3c81(5): mov %r10b,0x38(%rsp)
3c86(5): mov %r9,0x30(%rsp)
3c8b(5): call 0xffffda15(%rip)
3c90(6): movzx 0x40(%rsp),%r8d
3c96(6): movzx 0x38(%rsp),%r10d
3c9c(3): mov %rax,%r11
3c9f(5): mov 0x30(%rsp),%r9
3ca4(8): lea 0x9c(%rsp),%rax
3cac(2): xor %ecx,%ecx
3cae(4): mov %bl,0x7e(%rsp)
3cb2(5): mov %r8b,0x7d(%rsp)
3cb7(3): mov %rcx,%rbx
3cba(8): mov %r9,0x88(%rsp)
3cc2(5): mov %rax,0x38(%rsp)
3cc7(5): mov %r10b,0x7f(%rsp)
3ccc(8): mov %r15,0x80(%rsp)
3cd4(5): mov %r14,0x40(%rsp)
3cd9(5): mov %r13,0x70(%rsp)
3cde(5): mov %r11,0x30(%rsp)
3ce3(5): mov 0x10(%rsp),%rax
3ce8(5): lea 0x0(%rbp,%rbx,1),%r14
3ced(5): mov 0x30(%rsp),%rdx
3cf2(5): mov 0x28(%rsp),%rcx
3cf7(5): mov 0x38(%rsp),%rdi
3cfc(4): lea 0x0(%rax,%r14,1),%r13
3d00(3): sub %r14,%rdx
3d03(3): mov %r13,%rsi
3d06(5): call 0x209a(%rip)
3d0b(3): test %rax,%rax
3d0e(3): mov %rax,%r15
3d11(2): jz 0x50(%rip)
3d13(4): cmp $0xffffffff,%rax
3d17(6): jz 0x61e(%rip)
3d1d(4): cmp $0xfffffffe,%rax
3d21(6): jz 0x5a0(%rip)
3d27(5): cmp $0x2,0x8(%rsp)
3d2c(3): setz %al
3d2f(4): and 0xf(%rsp),%al
3d33(6): jnz 0x19d(%rip)
3d39(7): mov 0x9c(%rsp),%edi
3d40(5): call 0xffffdbc0(%rip)
3d45(5): mov 0x28(%rsp),%rdi
3d4a(2): test %eax,%eax
3d4c(5): mov $0x0,%eax
3d51(4): cmove %eax,%r12d
3d55(3): add %r15,%rbx
3d58(5): call 0xffffdb98(%rip)
3d5d(2): test %eax,%eax
3d5f(2): jz 0xffffff84(%rip)
3d61(3): mov %r12d,%edx
3d64(3): mov %rbx,%rdi
3d67(6): movzx 0x7d(%rsp),%r8d
3d6d(3): xor $0x1,%edx
3d70(5): movzx 0x7e(%rsp),%ebx
3d75(6): movzx 0x7f(%rsp),%r10d
3d7b(4): and 0xd(%rsp),%dl
3d7f(8): mov 0x80(%rsp),%r15
3d87(5): mov 0x40(%rsp),%r14
3d8c(5): mov 0x70(%rsp),%r13
3d91(5): mov 0x30(%rsp),%r11
3d96(4): cmp $0x1,%rdi
3d9a(6): jbe 0x601(%rip)
3da0(3): mov %rdi,%rcx
3da3(2): xor %esi,%esi
3da5(6): movzx 0xf(%rsp),%r9d
3dab(3): add %rbp,%rcx
3dae(5): mov 0x10(%rsp),%rdi
3db3(5): jmp 0xbb(%rip)
3db8(8): nop 0x0(%rax,%rax,1)
3dc0(5): cmp $0x2,0x8(%rsp)
3dc5(3): setz %al
3dc8(3): test %r9b,%r9b
3dcb(6): jnz 0x4b5(%rip)
3dd1(3): mov %r8d,%esi
3dd4(3): xor $0x1,%esi
3dd7(3): and %sil,%al
3dda(2): jz 0x31(%rip)
3ddc(3): cmp %r15,%r13
3ddf(2): jbe 0x7(%rip)
3de1(5): mov $0x27,0x0(%r14,%r15,1)
3de6(4): lea 0x1(%r15),%rsi
3dea(3): cmp %rsi,%r13
3ded(2): jbe 0x8(%rip)
3def(6): mov $0x24,0x1(%r14,%r15,1)
3df5(4): lea 0x2(%r15),%rsi
3df9(3): cmp %rsi,%r13
3dfc(2): jbe 0x8(%rip)
3dfe(6): mov $0x27,0x2(%r14,%r15,1)
3e04(4): add $0x3,%r15
3e08(3): mov %eax,%r8d
3e0b(3): cmp %r15,%r13
3e0e(2): jbe 0x7(%rip)
3e10(5): mov $0x5c,0x0(%r14,%r15,1)
3e15(4): lea 0x1(%r15),%rax
3e19(3): cmp %rax,%r13
3e1c(2): jbe 0xf(%rip)
3e1e(2): mov %ebx,%eax
3e20(3): shr $0x6,%al
3e23(3): add $0x30,%eax
3e26(5): mov %al,0x1(%r14,%r15,1)
3e2b(4): lea 0x2(%r15),%rax
3e2f(3): cmp %rax,%r13
3e32(2): jbe 0x12(%rip)
3e34(2): mov %ebx,%eax
3e36(3): shr $0x3,%al
3e39(3): and $0x7,%eax
3e3c(3): add $0x30,%eax
3e3f(5): mov %al,0x2(%r14,%r15,1)
3e44(3): and $0x7,%ebx
3e47(4): add $0x1,%rbp
3e4b(4): add $0x3,%r15
3e4f(3): add $0x30,%ebx
3e52(3): cmp %rcx,%rbp
3e55(6): jnb 0xfffff7eb(%rip)
3e5b(2): mov %edx,%esi
3e5d(3): cmp %r15,%r13
3e60(2): jbe 0x6(%rip)
3e62(4): mov %bl,0x0(%r14,%r15,1)
3e66(4): movzx 0x0(%rdi,%rbp,1),%ebx
3e6a(4): add $0x1,%r15
3e6e(2): test %dl,%dl
3e70(6): jnz 0xffffff50(%rip)
3e76(2): mov %esi,%eax
3e78(3): xor $0x1,%eax
3e7b(3): and %r8d,%eax
3e7e(3): test %r10b,%r10b
3e81(2): jz 0x10(%rip)
3e83(3): cmp %r15,%r13
3e86(2): jbe 0x7(%rip)
3e88(5): mov $0x5c,0x0(%r14,%r15,1)
3e8d(4): add $0x1,%r15
3e91(4): add $0x1,%rbp
3e95(3): cmp %rcx,%rbp
3e98(6): jnb 0xfffff784(%rip)
3e9e(2): test %al,%al
3ea0(6): jz 0x3fe(%rip)
3ea6(3): cmp %r15,%r13
3ea9(2): jbe 0x7(%rip)
3eab(5): mov $0x27,0x0(%r14,%r15,1)
3eb0(4): lea 0x1(%r15),%rax
3eb4(3): cmp %rax,%r13
3eb7(2): jbe 0x8(%rip)
3eb9(6): mov $0x27,0x1(%r14,%r15,1)
3ebf(4): add $0x2,%r15
3ec3(3): xor %r10d,%r10d
3ec6(3): xor %r8d,%r8d
3ec9(2): jmp 0xffffff94(%rip)
3ecb(5): nop 0x0(%rax,%rax,1)
3ed0(4): cmp $0x1,%r15
3ed4(6): jz 0xfffffe65(%rip)
3eda(5): mov 0x10(%rsp),%rdi
3edf(4): lea 0x0(%rdi,%r15,1),%rcx
3ee3(5): lea 0x1(%rdi,%r14,1),%rdx
3ee8(4): lea 0x0(%rcx,%r14,1),%r8
3eec(2): jmp 0x11(%rip)
3eee(2): nop 
3ef0(4): add $0x1,%rdx
3ef4(3): cmp %rdx,%r8
3ef7(6): jz 0xfffffe42(%rip)
3efd(3): movzx (%rdx),%ecx
3f00(3): sub $0x5b,%ecx
3f03(3): cmp $0x21,%cl
3f06(2): jnbe 0xffffffea(%rip)
3f08(5): mov $0x1,%esi
3f0d(3): shl/sal %cl,%rsi
3f10(3): mov %rsi,%rcx
3f13(a): mov $0x8589934635,%rsi
3f1d(3): test %rsi,%rcx
3f20(2): jz 0xffffffd0(%rip)
3f22(5): mov 0x40(%rsp),%r14
3f27(5): mov 0x70(%rsp),%r13
3f2c(5): mov 0x30(%rsp),%rbp
3f31(8): mov $0x2,0x8(%rsp)
3f39(5): cmp $0x0,0xd(%rsp)
3f3e(2): jz 0x12(%rip)
3f40(2): test %al,%al
3f42(5): mov $0x4,%eax
3f47(5): cmove 0x8(%rsp),%eax
3f4c(4): mov %eax,0x8(%rsp)
3f50(4): sub $0x8,%rsp
3f54(3): mov %rbp,%rcx
3f57(3): mov %r13,%rsi
3f5a(4): push 0x68(%rsp)
3f5e(4): push 0x78(%rsp)
3f62(3): mov %r14,%rdi
3f65(2): push $0x0
3f67(8): mov 0x98(%rsp),%r9d
3f6f(5): mov 0x28(%rsp),%r8d
3f74(5): mov 0x30(%rsp),%rdx
3f79(4): and $0xfd,%r9d
3f7d(5): call 0xfffff433(%rip)
3f82(4): add $0x20,%rsp
3f86(3): mov %rax,%r15
3f89(8): mov 0xa8(%rsp),%rbx
3f91(9): xor $0x28,%rbx
3f9a(3): mov %r15,%rax
3f9d(6): jnz 0x606(%rip)
3fa3(7): add $0xb8,%rsp
3faa(1): pop %rbx
3fab(1): pop %rbp
3fac(2): pop %r12
3fae(2): pop %r13
3fb0(2): pop %r14
3fb2(2): pop %r15
3fb4(1): ret near (%rsp)
3fb5(3): nop (%rax)
3fb8(3): mov %r11,%rbp
3fbb(5): jmp 0xffffff7e(%rip)
3fc0(3): cmp %r15,%r13
3fc3(2): jbe 0x7(%rip)
3fc5(5): mov $0x27,0x0(%r14,%r15,1)
3fca(4): lea 0x1(%r15),%rax
3fce(3): cmp %rax,%r13
3fd1(2): jbe 0x8(%rip)
3fd3(6): mov $0x5c,0x1(%r14,%r15,1)
3fd9(4): lea 0x2(%r15),%rax
3fdd(3): cmp %rax,%r13
3fe0(6): jbe 0x5f2(%rip)
3fe6(3): mov %r13,%rdx
3fe9(6): mov $0x27,0x2(%r14,%r15,1)
3fef(5): mov 0x50(%rsp),%r13
3ff4(5): jmp 0xfffffbde(%rip)
3ff9(3): mov %r12d,%eax
3ffc(5): mov $0x30,%ebx
4001(3): xor %r12d,%r12d
4004(5): jmp 0xfffff605(%rip)
4009(6): mov $0x27,0x2(%r14,%r15,1)
400f(5): jmp 0xfffff9ca(%rip)
4014(2): test %ebx,%ebx
4016(6): jnz 0xfffff42d(%rip)
401c(5): mov $0x1,0xd(%rsp)
4021(3): test %r13,%r13
4024(6): jnz 0x596(%rip)
402a(7): lea 0x2794(%rip),%rax
4031(9): mov $0x0,0x50(%rsp)
403a(5): mov $0x1,0xe(%rsp)
403f(5): mov $0x0,0x7c(%rsp)
4044(3): xor %r12d,%r12d
4047(5): mov $0x0,0xf(%rsp)
404c(9): mov $0x1,0x18(%rsp)
4055(5): mov %rax,0x48(%rsp)
405a(6): mov $0x1,%r15d
4060(8): mov $0x2,0x8(%rsp)
4068(5): jmp 0xfffff41b(%rip)
406d(3): nop (%rax)
4070(2): test %ebx,%ebx
4072(6): jnz 0x3fb(%rip)
4078(3): test %r13,%r13
407b(6): jz 0x22b(%rip)
4081(4): mov $0x22,(%r14)
4085(5): mov $0x1,0xe(%rsp)
408a(3): xor %r12d,%r12d
408d(5): mov $0x0,0x7c(%rsp)
4092(9): mov $0x0,0x50(%rsp)
409b(7): lea 0x2721(%rip),%rax
40a2(5): mov $0x0,0xf(%rsp)
40a7(5): mov $0x1,0xd(%rsp)
40ac(9): mov $0x1,0x18(%rsp)
40b5(6): mov $0x1,%r15d
40bb(5): mov %rax,0x48(%rsp)
40c0(5): jmp 0xfffff3c3(%rip)
40c5(7): lea 0x26f7(%rip),%rax
40cc(5): mov $0x1,0xe(%rsp)
40d1(5): mov $0x0,0x7c(%rsp)
40d6(3): xor %r12d,%r12d
40d9(9): mov $0x0,0x50(%rsp)
40e2(5): mov $0x1,0xf(%rsp)
40e7(5): mov $0x1,0xd(%rsp)
40ec(9): mov $0x1,0x18(%rsp)
40f5(3): xor %r15d,%r15d
40f8(5): mov %rax,0x48(%rsp)
40fd(8): mov $0x5,0x8(%rsp)
4105(5): jmp 0xfffff37e(%rip)
410a(5): mov $0x1,0xe(%rsp)
410f(5): mov $0x0,0x7c(%rsp)
4114(3): xor %r12d,%r12d
4117(9): mov $0x0,0x50(%rsp)
4120(5): mov $0x0,0xf(%rsp)
4125(3): xor %r15d,%r15d
4128(5): mov $0x1,0xd(%rsp)
412d(9): mov $0x0,0x18(%rsp)
4136(9): mov $0x0,0x48(%rsp)
413f(5): jmp 0xfffff344(%rip)
4144(5): cmp $0xa,0x8(%rsp)
4149(2): jz 0x58(%rip)
414b(7): lea 0x2675(%rip),%rsi
4152(2): xor %edi,%edi
4154(5): mov $0x5,%edx
4159(5): call 0xffffd527(%rip)
415e(3): mov %rax,%rcx
4161(5): mov %rax,0x68(%rsp)
4166(7): lea 0x265a(%rip),%rax
416d(3): cmp %rax,%rcx
4170(6): jz 0x39e(%rip)
4176(7): lea 0x2648(%rip),%rsi
417d(2): xor %edi,%edi
417f(5): mov $0x5,%edx
4184(5): call 0xffffd4fc(%rip)
4189(3): mov %rax,%rcx
418c(5): mov %rax,0x60(%rsp)
4191(7): lea 0x262d(%rip),%rax
4198(3): cmp %rax,%rcx
419b(6): jz 0x389(%rip)
41a1(3): xor %r15d,%r15d
41a4(2): test %ebx,%ebx
41a6(6): jz 0x1c7(%rip)
41ac(2): test %ebx,%ebx
41ae(5): mov 0x60(%rsp),%rbx
41b3(5): setnz 0xf(%rsp)
41b8(3): xor %r12d,%r12d
41bb(3): mov %rbx,%rdi
41be(5): call 0xffffd4e2(%rip)
41c3(5): mov %rbx,0x48(%rsp)
41c8(5): mov %rax,0x18(%rsp)
41cd(5): mov $0x1,0xe(%rsp)
41d2(5): mov $0x0,0x7c(%rsp)
41d7(9): mov $0x0,0x50(%rsp)
41e0(5): mov $0x1,0xd(%rsp)
41e5(5): jmp 0xfffff29e(%rip)
41ea(5): mov $0x1,0xe(%rsp)
41ef(5): mov $0x0,0x7c(%rsp)
41f4(3): xor %r12d,%r12d
41f7(9): mov $0x0,0x50(%rsp)
4200(5): mov $0x0,0xf(%rsp)
4205(3): xor %r15d,%r15d
4208(5): mov $0x0,0xd(%rsp)
420d(9): mov $0x0,0x18(%rsp)
4216(9): mov $0x0,0x48(%rsp)
421f(5): jmp 0xfffff264(%rip)
4224(5): mov $0x1,0xe(%rsp)
4229(5): mov $0x0,0x7c(%rsp)
422e(3): xor %r12d,%r12d
4231(9): mov $0x0,0x50(%rsp)
423a(5): mov $0x1,0xf(%rsp)
423f(5): mov $0x1,0xd(%rsp)
4244(5): jmp 0xfffff21f(%rip)
4249(3): cmp %r15,%r13
424c(2): jbe 0x7(%rip)
424e(5): mov $0x30,0x0(%r14,%r15,1)
4253(4): lea 0x2(%rcx),%rax
4257(3): cmp %rax,%r13
425a(2): jbe 0x8(%rip)
425c(6): mov $0x30,0x2(%r14,%rcx,1)
4262(3): mov %r12d,%eax
4265(4): lea 0x3(%rcx),%r15
4269(3): xor %r12d,%r12d
426c(5): mov $0x30,%ebx
4271(5): jmp 0xfffff367(%rip)
4276(a): nop 0x0(%rax,%rax,1)
4280(5): movzx 0xf(%rsp),%ebx
4285(3): mov %r11,%rbp
4288(4): mov %bl,0xd(%rsp)
428c(5): jmp 0xfffffcad(%rip)
4291(5): movzx 0xd(%rsp),%edx
4296(3): xor %r12d,%r12d
4299(5): jmp 0xfffffb07(%rip)
429e(3): xor %r10d,%r10d
42a1(5): jmp 0xfffffbbc(%rip)
42a6(9): mov $0x0,0x50(%rsp)
42af(5): mov $0x1,0xe(%rsp)
42b4(3): xor %r12d,%r12d
42b7(5): mov $0x0,0x7c(%rsp)
42bc(5): jmp 0xfffffddf(%rip)
42c1(5): mov 0x30(%rsp),%r11
42c6(3): mov %r14,%rsi
42c9(3): mov %r13,%rcx
42cc(3): mov %rbx,%rax
42cf(3): mov %rbx,%rdi
42d2(6): movzx 0x7d(%rsp),%r8d
42d8(5): movzx 0x7e(%rsp),%ebx
42dd(8): mov 0x88(%rsp),%r9
42e5(3): cmp %r11,%rsi
42e8(6): movzx 0x7f(%rsp),%r10d
42ee(8): mov 0x80(%rsp),%r15
42f6(5): mov 0x40(%rsp),%r14
42fb(5): mov 0x70(%rsp),%r13
4300(2): jnb 0x28(%rip)
4302(3): cmp $0x0,(%rcx)
4305(2): jnz 0x12(%rip)
4307(2): jmp 0x21(%rip)
4309(7): nop 0x0(%rax)
4310(5): cmp $0x0,0x0(%r9,%rax,1)
4315(2): jz 0x10(%rip)
4317(4): add $0x1,%rax
431b(5): lea 0x0(%rbp,%rax,1),%rdx
4320(3): cmp %rdx,%r11
4323(2): jnbe 0xffffffed(%rip)
4325(3): mov %rax,%rdi
4328(5): movzx 0xd(%rsp),%edx
432d(3): xor %r12d,%r12d
4330(5): jmp 0xfffffa66(%rip)
4335(3): mov %rbx,%rdi
4338(6): movzx 0x7d(%rsp),%r8d
433e(5): movzx 0x7e(%rsp),%ebx
4343(6): movzx 0x7f(%rsp),%r10d
4349(8): mov 0x80(%rsp),%r15
4351(3): xor %r12d,%r12d
4354(5): mov 0x40(%rsp),%r14
4359(5): mov 0x70(%rsp),%r13
435e(5): mov 0x30(%rsp),%r11
4363(5): movzx 0xd(%rsp),%edx
4368(5): jmp 0xfffffa2e(%rip)
436d(5): mov 0x68(%rsp),%rdx
4372(3): movzx (%rdx),%eax
4375(2): test %al,%al
4377(6): jz 0xfffffe35(%rip)
437d(3): nop (%rax)
4380(3): cmp %r15,%r13
4383(2): jbe 0x6(%rip)
4385(4): mov %al,0x0(%r14,%r15,1)
4389(4): add $0x1,%r15
438d(5): movzx 0x0(%rdx,%r15,1),%eax
4392(2): test %al,%al
4394(2): jnz 0xffffffec(%rip)
4396(5): jmp 0xfffffe16(%rip)
439b(2): mov %edx,%eax
439d(5): jmp 0xfffff55a(%rip)
43a2(4): movzx 0x0(%rax,%rcx,1),%ebx
43a6(3): cmp $0x3e,%bl
43a9(6): jnbe 0xfffff877(%rip)
43af(a): mov $0x8070630310989004800,%rax
43b9(4): bt %rbx,%rax
43bd(6): jnb 0xfffff863(%rip)
43c3(5): cmp $0x0,0xf(%rsp)
43c8(6): jnz 0x1ea(%rip)
43ce(3): cmp %r15,%r13
43d1(2): jbe 0x7(%rip)
43d3(5): mov $0x3f,0x0(%r14,%r15,1)
43d8(4): lea 0x1(%r15),%rax
43dc(3): cmp %rax,%r13
43df(2): jbe 0x8(%rip)
43e1(6): mov $0x22,0x1(%r14,%r15,1)
43e7(4): lea 0x2(%r15),%rax
43eb(3): cmp %rax,%r13
43ee(2): jbe 0x8(%rip)
43f0(6): mov $0x22,0x2(%r14,%r15,1)
43f6(4): lea 0x3(%r15),%rax
43fa(3): cmp %rax,%r13
43fd(2): jbe 0x8(%rip)
43ff(6): mov $0x3f,0x3(%r14,%r15,1)
4405(4): add $0x4,%r15
4409(2): xor %edx,%edx
440b(3): xor %r12d,%r12d
440e(2): xor %eax,%eax
4410(3): mov %rcx,%rbp
4413(5): jmp 0xfffff1c5(%rip)
4418(2): test %ebx,%ebx
441a(6): jz 0x18e(%rip)
4420(7): lea 0x239e(%rip),%rax
4427(5): mov $0x1,0xe(%rsp)
442c(5): mov $0x0,0x7c(%rsp)
4431(3): xor %r12d,%r12d
4434(9): mov $0x0,0x50(%rsp)
443d(5): mov $0x1,0xf(%rsp)
4442(5): mov $0x0,0xd(%rsp)
4447(9): mov $0x1,0x18(%rsp)
4450(3): xor %r15d,%r15d
4453(5): mov %rax,0x48(%rsp)
4458(5): jmp 0xfffff02b(%rip)
445d(3): nop (%rax)
4460(3): mov %r11,%rbp
4463(5): movzx 0xf(%rsp),%eax
4468(5): jmp 0xfffffad1(%rip)
446d(7): lea 0x234f(%rip),%rax
4474(5): mov $0x1,0xe(%rsp)
4479(5): mov $0x0,0x7c(%rsp)
447e(3): xor %r12d,%r12d
4481(9): mov $0x0,0x50(%rsp)
448a(5): mov $0x1,0xf(%rsp)
448f(5): mov $0x1,0xd(%rsp)
4494(9): mov $0x1,0x18(%rsp)
449d(3): xor %r15d,%r15d
44a0(5): mov %rax,0x48(%rsp)
44a5(5): jmp 0xffffefde(%rip)
44aa(2): mov %edx,%eax
44ac(5): mov 0x48(%rsp),%rbx
44b1(3): test %rbx,%rbx
44b4(2): jz 0x2e(%rip)
44b6(2): test %al,%al
44b8(2): jz 0x2a(%rip)
44ba(3): movzx (%rbx),%ecx
44bd(3): mov %rbx,%rax
44c0(2): test %cl,%cl
44c2(2): jz 0x20(%rip)
44c4(3): mov %r15,%rdx
44c7(3): sub %r15,%rax
44ca(3): cmp %rdx,%r13
44cd(2): jbe 0x6(%rip)
44cf(4): mov %cl,0x0(%r14,%rdx,1)
44d3(4): add $0x1,%rdx
44d7(4): movzx 0x0(%rax,%rdx,1),%ecx
44db(2): test %cl,%cl
44dd(2): jnz 0xffffffed(%rip)
44df(3): mov %rdx,%r15
44e2(3): cmp %r15,%r13
44e5(6): jbe 0xfffffaa4(%rip)
44eb(5): mov $0x0,0x0(%r14,%r15,1)
44f0(5): jmp 0xfffffa99(%rip)
44f5(5): cmp $0x2,0x8(%rsp)
44fa(5): movzx 0xf(%rsp),%ebx
44ff(3): mov %r11,%rbp
4502(3): setz %al
4505(4): mov %bl,0xd(%rsp)
4509(5): jmp 0xfffffa30(%rip)
450e(4): mov 0x8(%rsp),%esi
4512(3): mov %rcx,%rdi
4515(5): call 0xffffedab(%rip)
451a(5): mov %rax,0x68(%rsp)
451f(5): jmp 0xfffffc57(%rip)
4524(4): mov 0x8(%rsp),%esi
4528(3): mov %rcx,%rdi
452b(5): call 0xffffed95(%rip)
4530(5): mov %rax,0x60(%rsp)
4535(5): jmp 0xfffffc6c(%rip)
453a(5): movzx 0xf(%rsp),%ebx
453f(3): mov %r11,%rbp
4542(2): mov %edx,%eax
4544(4): mov %bl,0xd(%rsp)
4548(5): jmp 0xfffff9f1(%rip)
454d(4): sub $0x8,%rsp
4551(6): mov $0x5,%r8d
4557(3): mov %r11,%rcx
455a(4): push 0x68(%rsp)
455e(4): push 0x78(%rsp)
4562(3): mov %r14,%rdi
4565(4): push 0x38(%rsp)
4569(8): mov 0x98(%rsp),%r9d
4571(5): mov 0x30(%rsp),%rdx
4576(5): mov 0x70(%rsp),%rsi
457b(5): call 0xffffee35(%rip)
4580(4): add $0x20,%rsp
4584(3): mov %rax,%r15
4587(5): jmp 0xfffffa02(%rip)
458c(5): movzx 0x7c(%rsp),%eax
4591(5): jmp 0xffffff1b(%rip)
4596(8): mov $0x2,0x8(%rsp)
459e(5): jmp 0xfffff99b(%rip)
45a3(5): call 0xffffd10d(%rip)
45a8(5): mov $0x0,0xd(%rsp)
45ad(5): jmp 0xfffffa74(%rip)
45b2(3): mov %r11,%rbp
45b5(5): jmp 0xfffff99b(%rip)
45ba(5): mov $0x1,0xe(%rsp)
45bf(2): xor %eax,%eax
45c1(3): xor %r12d,%r12d
45c4(9): mov $0x0,0x50(%rsp)
45cd(5): jmp 0xfffff5a7(%rip)
45d2(3): mov %r13,%rdx
45d5(5): mov 0x50(%rsp),%r13
45da(5): jmp 0xfffff5f8(%rip)
45df(5): call 0xffffd011(%rip)

"quotearg_n_options" :
45f0(2): push %r15
45f2(2): push %r14
45f4(3): movsxd %edi,%r15
45f7(2): push %r13
45f9(2): push %r12
45fb(3): mov %rdx,%r14
45fe(1): push %rbp
45ff(1): push %rbx
4600(3): mov %rcx,%rbp
4603(4): sub $0x28,%rsp
4607(5): mov %rsi,0x8(%rsp)
460c(5): call 0xffffcff4(%rip)
4611(3): mov %rax,%r13
4614(2): mov (%rax),%eax
4616(3): test %r15d,%r15d
4619(7): mov 0x204a40(%rip),%rbx
4620(4): mov %eax,0x18(%rsp)
4624(6): js 0x16d(%rip)
462a(7): cmp %r15d,0x204a27(%rip)
4631(2): jnle 0x64(%rip)
4633(7): cmp $0x7fffffff,%r15d
463a(6): jz 0x15c(%rip)
4640(4): lea 0x1(%r15),%r12d
4644(7): lea 0x204a25(%rip),%rax
464b(3): movsxd %r12d,%rsi
464e(4): shl/sal $0x4,%rsi
4652(3): cmp %rax,%rbx
4655(6): jz 0x11b(%rip)
465b(3): mov %rbx,%rdi
465e(5): call 0xfd2(%rip)
4663(3): mov %rax,%rbx
4666(7): mov %rax,0x2049f3(%rip)
466d(7): movsxd 0x2049e4(%rip),%rdi
4674(3): mov %r12d,%edx
4677(2): xor %esi,%esi
4679(2): sub %edi,%edx
467b(4): shl/sal $0x4,%rdi
467f(3): movsxd %edx,%rdx
4682(3): add %rbx,%rdi
4685(4): shl/sal $0x4,%rdx
4689(5): call 0xffffd0b7(%rip)
468e(7): mov %r12d,0x2049c3(%rip)
4695(3): mov 0x4(%rbp),%eax
4698(4): shl/sal $0x4,%r15
469c(4): sub $0x8,%rsp
46a0(3): add %r15,%rbx
46a3(4): lea 0x8(%rbp),%r15
46a7(4): mov 0x0(%rbp),%r8d
46ab(3): mov (%rbx),%r11
46ae(4): mov 0x8(%rbx),%r12
46b2(3): mov %r14,%rcx
46b5(3): or $0x1,%eax
46b8(4): mov %eax,0x24(%rsp)
46bc(3): push 0x30(%rbp)
46bf(3): mov %eax,%r9d
46c2(3): push 0x28(%rbp)
46c5(2): push %r15
46c7(3): mov %r11,%rsi
46ca(5): mov 0x28(%rsp),%rdx
46cf(3): mov %r12,%rdi
46d2(5): mov %r11,0x30(%rsp)
46d7(5): call 0xffffecd9(%rip)
46dc(4): add $0x20,%rsp
46e0(5): mov 0x10(%rsp),%r11
46e5(3): cmp %rax,%r11
46e8(2): jnbe 0x69(%rip)
46ea(4): lea 0x1(%rax),%rsi
46ee(7): lea 0x204a2b(%rip),%rax
46f5(3): cmp %rax,%r12
46f8(3): mov %rsi,(%rbx)
46fb(2): jz 0x14(%rip)
46fd(3): mov %r12,%rdi
4700(5): mov %rsi,0x10(%rsp)
4705(5): call 0xffffcedb(%rip)
470a(5): mov 0x10(%rsp),%rsi
470f(3): mov %rsi,%rdi
4712(5): mov %rsi,0x10(%rsp)
4717(5): call 0xeb9(%rip)
471c(4): sub $0x8,%rsp
4720(4): mov %rax,0x8(%rbx)
4724(4): mov 0x0(%rbp),%r8d
4728(3): push 0x30(%rbp)
472b(3): push 0x28(%rbp)
472e(3): mov %r14,%rcx
4731(2): push %r15
4733(5): mov 0x3c(%rsp),%r9d
4738(3): mov %rax,%rdi
473b(5): mov 0x28(%rsp),%rdx
4740(5): mov 0x30(%rsp),%rsi
4745(3): mov %rax,%r12
4748(5): call 0xffffec68(%rip)
474d(4): add $0x20,%rsp
4751(4): mov 0x18(%rsp),%eax
4755(4): mov %eax,0x0(%r13)
4759(4): add $0x28,%rsp
475d(3): mov %r12,%rax
4760(1): pop %rbx
4761(1): pop %rbp
4762(2): pop %r12
4764(2): pop %r13
4766(2): pop %r14
4768(2): pop %r15
476a(1): ret near (%rsp)
476b(5): nop 0x0(%rax,%rax,1)
4770(2): xor %edi,%edi
4772(5): call 0xebe(%rip)
4777(8): movdqa 0x2048f1(%rip),%xmm0
477f(3): mov %rax,%rbx
4782(7): mov %rax,0x2048d7(%rip)
4789(3): movups %xmm0,(%rax)
478c(5): jmp 0xfffffee1(%rip)
4791(5): call 0xffffce5f(%rip)
4796(5): call 0x108a(%rip)

"clone_quoting_options" :
47a0(2): push %r12
47a2(1): push %rbp
47a3(1): push %rbx
47a4(3): mov %rdi,%rbx
47a7(5): call 0xffffce59(%rip)
47ac(3): mov (%rax),%r12d
47af(3): mov %rax,%rbp
47b2(7): lea 0x204a67(%rip),%rax
47b9(3): test %rbx,%rbx
47bc(5): mov $0x38,%esi
47c1(4): cmove %rax,%rbx
47c5(3): mov %rbx,%rdi
47c8(5): call 0x1008(%rip)
47cd(4): mov %r12d,0x0(%rbp)
47d1(1): pop %rbx
47d2(1): pop %rbp
47d3(2): pop %r12
47d5(1): ret near (%rsp)

"get_quoting_style" :
47e0(7): lea 0x204a39(%rip),%rax
47e7(3): test %rdi,%rdi
47ea(4): cmove %rax,%rdi
47ee(2): mov (%rdi),%eax
47f0(1): ret near (%rsp)

"set_quoting_style" :
4800(7): lea 0x204a19(%rip),%rax
4807(3): test %rdi,%rdi
480a(4): cmove %rax,%rdi
480e(2): mov %esi,(%rdi)
4810(1): ret near (%rsp)

"set_char_quoting" :
4820(7): lea 0x2049f9(%rip),%rax
4827(3): test %rdi,%rdi
482a(2): mov %esi,%ecx
482c(4): cmove %rax,%rdi
4830(2): mov %esi,%eax
4832(3): and $0x1f,%ecx
4835(3): shr $0x5,%al
4838(3): movzx %al,%eax
483b(5): lea 0x8(%rdi,%rax,4),%rdi
4840(2): mov (%rdi),%esi
4842(2): mov %esi,%eax
4844(2): shr %cl,%eax
4846(2): xor %eax,%edx
4848(3): and $0x1,%eax
484b(3): and $0x1,%edx
484e(2): shl/sal %cl,%edx
4850(2): xor %esi,%edx
4852(2): mov %edx,(%rdi)
4854(1): ret near (%rsp)

"set_quoting_flags" :
4860(7): lea 0x2049b9(%rip),%rax
4867(3): test %rdi,%rdi
486a(4): cmove %rax,%rdi
486e(3): mov 0x4(%rdi),%eax
4871(3): mov %esi,0x4(%rdi)
4874(1): ret near (%rsp)

"set_custom_quoting" :
4880(7): lea 0x204999(%rip),%rax
4887(3): test %rdi,%rdi
488a(4): cmove %rax,%rdi
488e(3): test %rsi,%rsi
4891(6): mov $0xa,(%rdi)
4897(2): jz 0x10(%rip)
4899(3): test %rdx,%rdx
489c(2): jz 0xb(%rip)
489e(4): mov %rsi,0x28(%rdi)
48a2(4): mov %rdx,0x30(%rdi)
48a6(1): ret near (%rsp)
48a7(4): sub $0x8,%rsp
48ab(5): call 0xffffcd45(%rip)

"quotearg_buffer" :
48b0(2): push %r15
48b2(2): push %r14
48b4(7): lea 0x204965(%rip),%rax
48bb(2): push %r13
48bd(2): push %r12
48bf(3): mov %rdi,%r13
48c2(1): push %rbp
48c3(1): push %rbx
48c4(3): mov %r8,%rbx
48c7(3): mov %rsi,%r14
48ca(3): mov %rdx,%r15
48cd(4): sub $0x18,%rsp
48d1(3): test %r8,%r8
48d4(4): cmove %rax,%rbx
48d8(5): mov %rcx,0x8(%rsp)
48dd(5): call 0xffffcd23(%rip)
48e2(3): mov (%rax),%r12d
48e5(3): mov %rax,%rbp
48e8(4): lea 0x8(%rbx),%rax
48ec(4): sub $0x8,%rsp
48f0(4): mov 0x4(%rbx),%r9d
48f4(3): push 0x30(%rbx)
48f7(3): mov (%rbx),%r8d
48fa(3): push 0x28(%rbx)
48fd(3): mov %r15,%rdx
4900(1): push %rax
4901(5): mov 0x28(%rsp),%rcx
4906(3): mov %r14,%rsi
4909(3): mov %r13,%rdi
490c(5): call 0xffffeaa4(%rip)
4911(4): mov %r12d,0x0(%rbp)
4915(4): add $0x38,%rsp
4919(1): pop %rbx
491a(1): pop %rbp
491b(2): pop %r12
491d(2): pop %r13
491f(2): pop %r14
4921(2): pop %r15
4923(1): ret near (%rsp)

"quotearg_alloc_mem" :
4930(2): push %r15
4932(2): push %r14
4934(7): lea 0x2048e5(%rip),%rax
493b(2): push %r13
493d(2): push %r12
493f(3): mov %rdx,%r12
4942(1): push %rbp
4943(1): push %rbx
4944(3): mov %rcx,%rbx
4947(3): mov %rdi,%r14
494a(3): mov %rsi,%r15
494d(4): sub $0x38,%rsp
4951(3): test %rcx,%rcx
4954(4): cmove %rax,%rbx
4958(2): xor %ebp,%ebp
495a(5): call 0xffffcca6(%rip)
495f(3): test %r12,%r12
4962(3): mov %rax,%r13
4965(2): mov (%rax),%eax
4967(4): setz %bpl
496b(3): or 0x4(%rbx),%ebp
496e(4): lea 0x8(%rbx),%r10
4972(4): sub $0x8,%rsp
4976(3): mov (%rbx),%r8d
4979(3): mov %r15,%rcx
497c(4): mov %eax,0x14(%rsp)
4980(3): push 0x30(%rbx)
4983(3): mov %r14,%rdx
4986(3): push 0x28(%rbx)
4989(2): push %r10
498b(2): xor %esi,%esi
498d(3): mov %ebp,%r9d
4990(2): xor %edi,%edi
4992(5): mov %r10,0x40(%rsp)
4997(5): call 0xffffea19(%rip)
499c(4): lea 0x1(%rax),%rsi
49a0(5): mov %rax,0x48(%rsp)
49a5(4): add $0x20,%rsp
49a9(3): mov %rsi,%rdi
49ac(5): mov %rsi,0x18(%rsp)
49b1(5): call 0xc1f(%rip)
49b6(5): mov %rax,0x10(%rsp)
49bb(4): sub $0x8,%rsp
49bf(3): push 0x30(%rbx)
49c2(3): push 0x28(%rbx)
49c5(5): mov 0x38(%rsp),%r10
49ca(3): mov %ebp,%r9d
49cd(3): mov (%rbx),%r8d
49d0(3): mov %r15,%rcx
49d3(3): mov %r14,%rdx
49d6(3): mov %rax,%rdi
49d9(2): push %r10
49db(5): mov 0x38(%rsp),%rsi
49e0(5): call 0xffffe9d0(%rip)
49e5(4): mov 0x2c(%rsp),%eax
49e9(4): add $0x20,%rsp
49ed(3): test %r12,%r12
49f0(4): mov %eax,0x0(%r13)
49f4(2): jz 0xb(%rip)
49f6(5): mov 0x28(%rsp),%r11
49fb(4): mov %r11,(%r12)
49ff(5): mov 0x10(%rsp),%rax
4a04(4): add $0x38,%rsp
4a08(1): pop %rbx
4a09(1): pop %rbp
4a0a(2): pop %r12
4a0c(2): pop %r13
4a0e(2): pop %r14
4a10(2): pop %r15
4a12(1): ret near (%rsp)

"quotearg_alloc" :
4a20(3): mov %rdx,%rcx
4a23(2): xor %edx,%edx
4a25(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4a30(6): mov 0x204622(%rip),%eax
4a36(2): push %r12
4a38(7): mov 0x204621(%rip),%r12
4a3f(1): push %rbp
4a40(1): push %rbx
4a41(3): cmp $0x1,%eax
4a44(2): jle 0x2d(%rip)
4a46(3): sub $0x2,%eax
4a49(5): lea 0x18(%r12),%rbx
4a4e(4): shl/sal $0x4,%rax
4a52(5): lea 0x28(%r12,%rax,1),%rbp
4a57(9): nop 0x0(%rax,%rax,1)
4a60(3): mov (%rbx),%rdi
4a63(4): add $0x10,%rbx
4a67(5): call 0xffffcb79(%rip)
4a6c(3): cmp %rbp,%rbx
4a6f(2): jnz 0xfffffff1(%rip)
4a71(5): mov 0x8(%r12),%rdi
4a76(7): lea 0x2046a3(%rip),%rbx
4a7d(3): cmp %rbx,%rdi
4a80(2): jz 0x19(%rip)
4a82(5): call 0xffffcb5e(%rip)
4a87(b): mov $0x100,0x2045de(%rip)
4a92(7): mov %rbx,0x2045df(%rip)
4a99(7): lea 0x2045d0(%rip),%rbx
4aa0(3): cmp %rbx,%r12
4aa3(2): jz 0x11(%rip)
4aa5(3): mov %r12,%rdi
4aa8(5): call 0xffffcb38(%rip)
4aad(7): mov %rbx,0x2045ac(%rip)
4ab4(1): pop %rbx
4ab5(a): mov $0x1,0x204599(%rip)
4abf(1): pop %rbp
4ac0(2): pop %r12
4ac2(1): ret near (%rsp)

"quotearg_n" :
4ad0(7): lea 0x204749(%rip),%rcx
4ad7(7): mov $0xffffffff,%rdx
4ade(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4af0(7): lea 0x204729(%rip),%rcx
4af7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4b00(7): lea 0x204719(%rip),%rcx
4b07(3): mov %rdi,%rsi
4b0a(7): mov $0xffffffff,%rdx
4b11(2): xor %edi,%edi
4b13(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4b20(7): lea 0x2046f9(%rip),%rcx
4b27(3): mov %rsi,%rdx
4b2a(3): mov %rdi,%rsi
4b2d(2): xor %edi,%edi
4b2f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4b40(4): sub $0x48,%rsp
4b44(3): mov %rdx,%rax
4b47(9): mov $0x28,%rdx
4b50(5): mov %rdx,0x38(%rsp)
4b55(2): xor %edx,%edx
4b57(3): cmp $0xa,%esi
4b5a(2): jz 0x6a(%rip)
4b5c(3): mov %esi,(%rsp)
4b5f(3): mov %rsp,%rcx
4b62(7): mov $0xffffffff,%rdx
4b69(3): mov %rax,%rsi
4b6c(9): mov $0x0,0x4(%rsp)
4b75(9): mov $0x0,0xc(%rsp)
4b7e(9): mov $0x0,0x14(%rsp)
4b87(9): mov $0x0,0x1c(%rsp)
4b90(9): mov $0x0,0x24(%rsp)
4b99(9): mov $0x0,0x2c(%rsp)
4ba2(8): mov $0x0,0x34(%rsp)
4baa(5): call 0xfffffa46(%rip)
4baf(5): mov 0x38(%rsp),%rcx
4bb4(9): xor $0x28,%rcx
4bbd(2): jnz 0xc(%rip)
4bbf(4): add $0x48,%rsp
4bc3(1): ret near (%rsp)
4bc4(5): call 0xffffca2c(%rip)
4bc9(5): call 0xffffcae7(%rip)

"quotearg_n_style_mem" :
4bd0(4): sub $0x48,%rsp
4bd4(3): mov %rdx,%rax
4bd7(3): mov %rcx,%rdx
4bda(9): mov $0x28,%rcx
4be3(5): mov %rcx,0x38(%rsp)
4be8(2): xor %ecx,%ecx
4bea(3): cmp $0xa,%esi
4bed(2): jz 0x63(%rip)
4bef(3): mov %esi,(%rsp)
4bf2(3): mov %rsp,%rcx
4bf5(3): mov %rax,%rsi
4bf8(9): mov $0x0,0x4(%rsp)
4c01(9): mov $0x0,0xc(%rsp)
4c0a(9): mov $0x0,0x14(%rsp)
4c13(9): mov $0x0,0x1c(%rsp)
4c1c(9): mov $0x0,0x24(%rsp)
4c25(9): mov $0x0,0x2c(%rsp)
4c2e(8): mov $0x0,0x34(%rsp)
4c36(5): call 0xfffff9ba(%rip)
4c3b(5): mov 0x38(%rsp),%rdx
4c40(9): xor $0x28,%rdx
4c49(2): jnz 0xc(%rip)
4c4b(4): add $0x48,%rsp
4c4f(1): ret near (%rsp)
4c50(5): call 0xffffc9a0(%rip)
4c55(5): call 0xffffca5b(%rip)

"quotearg_style" :
4c60(3): mov %rsi,%rdx
4c63(2): mov %edi,%esi
4c65(2): xor %edi,%edi
4c67(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4c70(3): mov %rdx,%rcx
4c73(3): mov %rsi,%rdx
4c76(2): mov %edi,%esi
4c78(2): xor %edi,%edi
4c7a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4c80(4): sub $0x48,%rsp
4c84(2): mov %edx,%ecx
4c86(9): mov $0x28,%rax
4c8f(5): mov %rax,0x38(%rsp)
4c94(2): xor %eax,%eax
4c96(7): mov 0x2045b3(%rip),%rax
4c9d(3): mov %rsp,%r8
4ca0(3): and $0x1f,%ecx
4ca3(8): movdqa 0x204575(%rip),%xmm0
4cab(5): mov %rax,0x30(%rsp)
4cb0(2): mov %edx,%eax
4cb2(4): movaps %xmm0,(%rsp)
4cb6(3): shr $0x5,%al
4cb9(3): movzx %al,%eax
4cbc(5): lea 0x8(%r8,%rax,4),%r9
4cc1(8): movdqa 0x204567(%rip),%xmm0
4cc9(5): movaps %xmm0,0x10(%rsp)
4cce(8): movdqa 0x20456a(%rip),%xmm0
4cd6(5): movaps %xmm0,0x20(%rsp)
4cdb(3): mov (%r9),%edx
4cde(2): mov %edx,%eax
4ce0(2): shr %cl,%eax
4ce2(2): not %eax
4ce4(3): and $0x1,%eax
4ce7(2): shl/sal %cl,%eax
4ce9(3): mov %r8,%rcx
4cec(2): xor %edx,%eax
4cee(3): mov %rsi,%rdx
4cf1(3): mov %rdi,%rsi
4cf4(3): mov %eax,(%r9)
4cf7(2): xor %edi,%edi
4cf9(5): call 0xfffff8f7(%rip)
4cfe(5): mov 0x38(%rsp),%rsi
4d03(9): xor $0x28,%rsi
4d0c(2): jnz 0x7(%rip)
4d0e(4): add $0x48,%rsp
4d12(1): ret near (%rsp)
4d13(5): call 0xffffc99d(%rip)

"quotearg_char" :
4d20(4): movsx %sil,%edx
4d24(7): mov $0xffffffff,%rsi
4d2b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4d30(5): mov $0x3a,%edx
4d35(7): mov $0xffffffff,%rsi
4d3c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4d50(5): mov $0x3a,%edx
4d55(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4d60(4): sub $0x48,%rsp
4d64(3): mov %rdx,%rax
4d67(9): mov $0x28,%rdx
4d70(5): mov %rdx,0x38(%rsp)
4d75(2): xor %edx,%edx
4d77(3): cmp $0xa,%esi
4d7a(2): jz 0x6a(%rip)
4d7c(3): mov %esi,(%rsp)
4d7f(3): mov %rsp,%rcx
4d82(7): mov $0xffffffff,%rdx
4d89(3): mov %rax,%rsi
4d8c(9): mov $0x0,0x4(%rsp)
4d95(9): mov $0x4000000,0xc(%rsp)
4d9e(9): mov $0x0,0x14(%rsp)
4da7(9): mov $0x0,0x1c(%rsp)
4db0(9): mov $0x0,0x24(%rsp)
4db9(9): mov $0x0,0x2c(%rsp)
4dc2(8): mov $0x0,0x34(%rsp)
4dca(5): call 0xfffff826(%rip)
4dcf(5): mov 0x38(%rsp),%rcx
4dd4(9): xor $0x28,%rcx
4ddd(2): jnz 0xc(%rip)
4ddf(4): add $0x48,%rsp
4de3(1): ret near (%rsp)
4de4(5): call 0xffffc80c(%rip)
4de9(5): call 0xffffc8c7(%rip)

"quotearg_n_custom_mem" :
4df0(4): sub $0x48,%rsp
4df4(3): mov %rcx,%r9
4df7(7): mov 0x204452(%rip),%rcx
4dfe(8): movdqa 0x20441a(%rip),%xmm0
4e06(9): mov $0x28,%rax
4e0f(5): mov %rax,0x38(%rsp)
4e14(2): xor %eax,%eax
4e16(4): movaps %xmm0,(%rsp)
4e1a(3): test %rsi,%rsi
4e1d(5): mov %rcx,0x30(%rsp)
4e22(7): mov $0xa,(%rsp)
4e29(8): movdqa 0x2043ff(%rip),%xmm0
4e31(5): movaps %xmm0,0x10(%rsp)
4e36(8): movdqa 0x204402(%rip),%xmm0
4e3e(5): movaps %xmm0,0x20(%rsp)
4e43(2): jz 0x34(%rip)
4e45(3): test %rdx,%rdx
4e48(2): jz 0x2f(%rip)
4e4a(5): mov %rsi,0x28(%rsp)
4e4f(5): mov %rdx,0x30(%rsp)
4e54(3): mov %rsp,%rcx
4e57(3): mov %r8,%rdx
4e5a(3): mov %r9,%rsi
4e5d(5): call 0xfffff793(%rip)
4e62(5): mov 0x38(%rsp),%rdi
4e67(9): xor $0x28,%rdi
4e70(2): jnz 0xc(%rip)
4e72(4): add $0x48,%rsp
4e76(1): ret near (%rsp)
4e77(5): call 0xffffc779(%rip)
4e7c(5): call 0xffffc834(%rip)

"quotearg_n_custom" :
4e90(7): mov $0xffffffff,%r8
4e97(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4ea0(3): mov %rdx,%rcx
4ea3(7): mov $0xffffffff,%r8
4eaa(3): mov %rsi,%rdx
4ead(3): mov %rdi,%rsi
4eb0(2): xor %edi,%edi
4eb2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4ec0(3): mov %rcx,%r8
4ec3(3): mov %rdx,%rcx
4ec6(3): mov %rsi,%rdx
4ec9(3): mov %rdi,%rsi
4ecc(2): xor %edi,%edi
4ece(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4ee0(7): lea 0x204139(%rip),%rcx
4ee7(5): jmp 0xfffff709(%rip)

"quote_mem" :
4ef0(7): lea 0x204129(%rip),%rcx
4ef7(3): mov %rsi,%rdx
4efa(3): mov %rdi,%rsi
4efd(2): xor %edi,%edi
4eff(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4f10(7): lea 0x204109(%rip),%rcx
4f17(7): mov $0xffffffff,%rdx
4f1e(5): jmp 0xfffff6d2(%rip)

"quote" :
4f30(7): lea 0x2040e9(%rip),%rcx
4f37(3): mov %rdi,%rsi
4f3a(7): mov $0xffffffff,%rdx
4f41(2): xor %edi,%edi
4f43(5): jmp 0xfffff6ad(%rip)

"safe_read" :
4f50(2): push %r13
4f52(2): push %r12
4f54(3): mov %edi,%r13d
4f57(1): push %rbp
4f58(1): push %rbx
4f59(3): mov %rsi,%r12
4f5c(3): mov %rdx,%rbx
4f5f(4): sub $0x8,%rsp
4f63(5): nop 0x0(%rax,%rax,1)
4f68(3): mov %rbx,%rdx
4f6b(3): mov %r12,%rsi
4f6e(3): mov %r13d,%edi
4f71(5): call 0xffffc7ff(%rip)
4f76(3): test %rax,%rax
4f79(3): mov %rax,%rbp
4f7c(2): jns 0x24(%rip)
4f7e(5): call 0xffffc682(%rip)
4f83(2): mov (%rax),%eax
4f85(3): cmp $0x4,%eax
4f88(2): jz 0xffffffe0(%rip)
4f8a(7): cmp $0x7ff00000,%rbx
4f91(2): jbe 0xf(%rip)
4f93(3): cmp $0x16,%eax
4f96(2): jnz 0xa(%rip)
4f98(5): mov $0x7ff00000,%ebx
4f9d(2): jmp 0xffffffcb(%rip)
4f9f(1): nop 
4fa0(4): add $0x8,%rsp
4fa4(3): mov %rbp,%rax
4fa7(1): pop %rbx
4fa8(1): pop %rbp
4fa9(2): pop %r12
4fab(2): pop %r13
4fad(1): ret near (%rsp)

"version_etc_arn" :
4fb0(2): push %r15
4fb2(2): push %r14
4fb4(2): push %r13
4fb6(2): push %r12
4fb8(3): mov %r9,%r12
4fbb(1): push %rbp
4fbc(1): push %rbx
4fbd(3): mov %rdi,%rbp
4fc0(3): mov %r8,%rbx
4fc3(4): sub $0x28,%rsp
4fc7(3): test %rsi,%rsi
4fca(6): jz 0x11e(%rip)
4fd0(3): mov %rdx,%r8
4fd3(7): lea 0x1cae(%rip),%rdx
4fda(3): mov %rcx,%r9
4fdd(2): xor %eax,%eax
4fdf(3): mov %rsi,%rcx
4fe2(5): mov $0x1,%esi
4fe7(5): call 0xffffc8f9(%rip)
4fec(7): lea 0x1ca8(%rip),%rsi
4ff3(2): xor %edi,%edi
4ff5(5): mov $0x5,%edx
4ffa(5): call 0xffffc686(%rip)
4fff(7): lea 0x1fba(%rip),%rdx
5006(3): mov %rax,%rcx
5009(6): mov $0x7e3,%r8d
500f(5): mov $0x1,%esi
5014(3): mov %rbp,%rdi
5017(2): xor %eax,%eax
5019(5): call 0xffffc8c7(%rip)
501e(7): lea 0x1d03(%rip),%rsi
5025(2): xor %edi,%edi
5027(5): mov $0x5,%edx
502c(5): call 0xffffc654(%rip)
5031(3): mov %rbp,%rsi
5034(3): mov %rax,%rdi
5037(5): call 0xffffc759(%rip)
503c(4): cmp $0x9,%r12
5040(6): jnbe 0x340(%rip)
5046(7): lea 0x1f37(%rip),%rdx
504d(4): movsxd 0x0(%rdx,%r12,4),%rax
5051(3): add %rdx,%rax
5054(2): jmp %rax
5056(a): nop 0x0(%rax,%rax,1)
5060(4): mov 0x38(%rbx),%r9
5064(4): mov 0x10(%rbx),%rax
5068(7): lea 0x1e29(%rip),%rsi
506f(4): mov 0x8(%rbx),%r8
5073(5): mov $0x5,%edx
5078(2): xor %edi,%edi
507a(4): mov 0x30(%rbx),%r13
507e(4): mov 0x28(%rbx),%r12
5082(5): mov %r9,0x10(%rsp)
5087(4): mov 0x20(%rbx),%r15
508b(4): mov 0x18(%rbx),%r14
508f(4): mov %rax,(%rsp)
5093(5): mov %r8,0x8(%rsp)
5098(3): mov (%rbx),%rbx
509b(5): call 0xffffc5e5(%rip)
50a0(4): sub $0x8,%rsp
50a4(5): mov 0x18(%rsp),%r9
50a9(3): mov %rax,%rdx
50ac(3): mov %rbx,%rcx
50af(5): mov $0x1,%esi
50b4(3): mov %rbp,%rdi
50b7(2): xor %eax,%eax
50b9(2): push %r9
50bb(2): push %r13
50bd(2): push %r12
50bf(2): push %r15
50c1(2): push %r14
50c3(5): mov 0x30(%rsp),%r9
50c8(5): mov 0x38(%rsp),%r8
50cd(5): call 0xffffc813(%rip)
50d2(4): add $0x30,%rsp
50d6(4): add $0x28,%rsp
50da(1): pop %rbx
50db(1): pop %rbp
50dc(2): pop %r12
50de(2): pop %r13
50e0(2): pop %r14
50e2(2): pop %r15
50e4(1): ret near (%rsp)
50e5(3): nop (%rax)
50e8(3): mov %rcx,%r8
50eb(3): mov %rdx,%rcx
50ee(7): lea 0x1b9f(%rip),%rdx
50f5(5): mov $0x1,%esi
50fa(2): xor %eax,%eax
50fc(5): call 0xffffc7e4(%rip)
5101(5): jmp 0xfffffeeb(%rip)
5106(a): nop 0x0(%rax,%rax,1)
5110(4): mov 0x40(%rbx),%r10
5114(4): mov 0x38(%rbx),%r9
5118(7): lea 0x1da9(%rip),%rsi
511f(4): mov 0x10(%rbx),%rax
5123(4): mov 0x8(%rbx),%r8
5127(5): mov $0x5,%edx
512c(4): mov 0x30(%rbx),%r13
5130(4): mov 0x28(%rbx),%r12
5134(4): mov 0x20(%rbx),%r15
5138(4): mov 0x18(%rbx),%r14
513c(3): mov (%rbx),%rbx
513f(5): mov %r10,0x18(%rsp)
5144(5): mov %r9,0x10(%rsp)
5149(4): mov %rax,(%rsp)
514d(5): mov %r8,0x8(%rsp)
5152(2): xor %edi,%edi
5154(5): call 0xffffc52c(%rip)
5159(5): mov 0x18(%rsp),%r10
515e(2): push %r10
5160(5): jmp 0xffffff44(%rip)
5165(3): nop (%rax)
5168(3): mov (%rbx),%rbx
516b(7): lea 0x1b2d(%rip),%rsi
5172(5): mov $0x5,%edx
5177(2): xor %edi,%edi
5179(5): call 0xffffc507(%rip)
517e(4): add $0x28,%rsp
5182(3): mov %rbx,%rcx
5185(3): mov %rbp,%rdi
5188(1): pop %rbx
5189(1): pop %rbp
518a(2): pop %r12
518c(2): pop %r13
518e(2): pop %r14
5190(2): pop %r15
5192(3): mov %rax,%rdx
5195(5): mov $0x1,%esi
519a(2): xor %eax,%eax
519c(5): jmp 0xffffc744(%rip)
51a1(7): nop 0x0(%rax)
51a8(4): mov 0x8(%rbx),%r12
51ac(7): lea 0x1afc(%rip),%rsi
51b3(3): mov (%rbx),%rbx
51b6(5): mov $0x5,%edx
51bb(2): xor %edi,%edi
51bd(5): call 0xffffc4c3(%rip)
51c2(4): add $0x28,%rsp
51c6(3): mov %r12,%r8
51c9(3): mov %rbx,%rcx
51cc(3): mov %rbp,%rdi
51cf(3): mov %rax,%rdx
51d2(5): mov $0x1,%esi
51d7(1): pop %rbx
51d8(1): pop %rbp
51d9(2): pop %r12
51db(2): pop %r13
51dd(2): pop %r14
51df(2): pop %r15
51e1(2): xor %eax,%eax
51e3(5): jmp 0xffffc6fd(%rip)
51e8(8): nop 0x0(%rax,%rax,1)
51f0(4): mov 0x10(%rbx),%r13
51f4(4): mov 0x8(%rbx),%r12
51f8(7): lea 0x1ac7(%rip),%rsi
51ff(3): mov (%rbx),%rbx
5202(5): mov $0x5,%edx
5207(2): xor %edi,%edi
5209(5): call 0xffffc477(%rip)
520e(4): add $0x28,%rsp
5212(3): mov %r13,%r9
5215(3): mov %r12,%r8
5218(3): mov %rbx,%rcx
521b(3): mov %rbp,%rdi
521e(3): mov %rax,%rdx
5221(1): pop %rbx
5222(1): pop %rbp
5223(2): pop %r12
5225(2): pop %r13
5227(2): pop %r14
5229(2): pop %r15
522b(5): mov $0x1,%esi
5230(2): xor %eax,%eax
5232(5): jmp 0xffffc6ae(%rip)
5237(9): nop 0x0(%rax,%rax,1)
5240(7): lea 0x1bb1(%rip),%rsi
5247(5): mov $0x5,%edx
524c(2): xor %edi,%edi
524e(4): mov 0x18(%rbx),%r14
5252(4): mov 0x10(%rbx),%r13
5256(4): mov 0x8(%rbx),%r12
525a(3): mov (%rbx),%rbx
525d(5): call 0xffffc423(%rip)
5262(4): sub $0x8,%rsp
5266(2): push %r14
5268(3): mov %rax,%rdx
526b(3): mov %r13,%r9
526e(3): mov %r12,%r8
5271(3): mov %rbx,%rcx
5274(3): mov %rbp,%rdi
5277(5): mov $0x1,%esi
527c(2): xor %eax,%eax
527e(5): call 0xffffc662(%rip)
5283(1): pop %rax
5284(1): pop %rdx
5285(4): add $0x28,%rsp
5289(1): pop %rbx
528a(1): pop %rbp
528b(2): pop %r12
528d(2): pop %r13
528f(2): pop %r14
5291(2): pop %r15
5293(1): ret near (%rsp)
5294(4): nop 0x0(%rax)
5298(4): mov 0x20(%rbx),%r15
529c(7): lea 0x1b75(%rip),%rsi
52a3(5): mov $0x5,%edx
52a8(2): xor %edi,%edi
52aa(4): mov 0x18(%rbx),%r14
52ae(4): mov 0x10(%rbx),%r13
52b2(4): mov 0x8(%rbx),%r12
52b6(3): mov (%rbx),%rbx
52b9(5): call 0xffffc3c7(%rip)
52be(2): push %r15
52c0(2): jmp 0xffffffa6(%rip)
52c2(6): nop 0x0(%rax,%rax,1)
52c8(4): mov 0x8(%rbx),%r8
52cc(4): mov 0x28(%rbx),%r12
52d0(7): lea 0x1b69(%rip),%rsi
52d7(4): mov 0x20(%rbx),%r15
52db(4): mov 0x18(%rbx),%r14
52df(5): mov $0x5,%edx
52e4(4): mov 0x10(%rbx),%r13
52e8(2): xor %edi,%edi
52ea(3): mov (%rbx),%rbx
52ed(4): mov %r8,(%rsp)
52f1(5): call 0xffffc38f(%rip)
52f6(4): sub $0x8,%rsp
52fa(3): mov %r13,%r9
52fd(2): push %r12
52ff(2): push %r15
5301(2): push %r14
5303(5): mov 0x20(%rsp),%r8
5308(3): mov %rbx,%rcx
530b(3): mov %rax,%rdx
530e(3): mov %rbp,%rdi
5311(5): mov $0x1,%esi
5316(2): xor %eax,%eax
5318(5): call 0xffffc5c8(%rip)
531d(4): add $0x20,%rsp
5321(4): add $0x28,%rsp
5325(1): pop %rbx
5326(1): pop %rbp
5327(2): pop %r12
5329(2): pop %r13
532b(2): pop %r14
532d(2): pop %r15
532f(1): ret near (%rsp)
5330(4): mov 0x10(%rbx),%r9
5334(4): mov 0x30(%rbx),%r13
5338(7): lea 0x1b29(%rip),%rsi
533f(4): mov 0x28(%rbx),%r12
5343(4): mov 0x20(%rbx),%r15
5347(5): mov $0x5,%edx
534c(4): mov 0x18(%rbx),%r14
5350(4): mov 0x8(%rbx),%r8
5354(2): xor %edi,%edi
5356(5): mov %r9,0x8(%rsp)
535b(3): mov (%rbx),%rbx
535e(4): mov %r8,(%rsp)
5362(5): call 0xffffc31e(%rip)
5367(2): push %r13
5369(2): push %r12
536b(2): push %r15
536d(2): push %r14
536f(5): mov 0x28(%rsp),%r9
5374(2): jmp 0xffffff8f(%rip)
5376(a): nop 0x0(%rax,%rax,1)
5380(4): mov 0x40(%rbx),%r10
5384(4): mov 0x38(%rbx),%r9
5388(5): mov $0x5,%edx
538d(4): mov 0x10(%rbx),%rax
5391(4): mov 0x8(%rbx),%r8
5395(7): lea 0x1b64(%rip),%rsi
539c(4): mov 0x30(%rbx),%r13
53a0(4): mov 0x28(%rbx),%r12
53a4(4): mov 0x20(%rbx),%r15
53a8(4): mov 0x18(%rbx),%r14
53ac(5): mov %r10,0x18(%rsp)
53b1(5): mov %r9,0x10(%rsp)
53b6(4): mov %rax,(%rsp)
53ba(5): mov %r8,0x8(%rsp)
53bf(3): mov (%rbx),%rbx
53c2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
53d0(3): xor %r9d,%r9d
53d3(4): cmp $0x0,(%r8)
53d7(2): jz 0x14(%rip)
53d9(7): nop 0x0(%rax)
53e0(4): add $0x1,%r9
53e4(5): cmp $0x0,0x0(%r8,%r9,8)
53e9(2): jnz 0xfffffff7(%rip)
53eb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
53f0(4): sub $0x68,%rsp
53f4(3): mov %r8,%r10
53f7(3): xor %r9d,%r9d
53fa(9): mov $0x28,%rax
5403(5): mov %rax,0x58(%rsp)
5408(2): xor %eax,%eax
540a(3): mov %rsp,%r8
540d(3): nop (%rax)
5410(3): mov (%r10),%eax
5413(3): cmp $0x2f,%eax
5416(2): jnbe 0x44(%rip)
5418(3): mov %eax,%r11d
541b(4): add 0x10(%r10),%r11
541f(3): add $0x8,%eax
5422(3): mov %eax,(%r10)
5425(3): mov (%r11),%rax
5428(3): test %rax,%rax
542b(4): mov %rax,0x0(%r8,%r9,8)
542f(2): jz 0xc(%rip)
5431(4): add $0x1,%r9
5435(4): cmp $0xa,%r9
5439(2): jnz 0xffffffd7(%rip)
543b(5): call 0xfffffb75(%rip)
5440(5): mov 0x58(%rsp),%rax
5445(9): xor $0x28,%rax
544e(2): jnz 0x7(%rip)
5450(4): add $0x68,%rsp
5454(1): ret near (%rsp)
5455(5): call 0xffffc25b(%rip)
545a(4): mov 0x8(%r10),%r11
545e(4): lea 0x8(%r11),%rax
5462(4): mov %rax,0x8(%r10)
5466(2): jmp 0xffffffbf(%rip)

"version_etc" :
5470(1): push %rbp
5471(1): push %rbx
5472(6): mov $0x20,%r10d
5478(3): xor %r11d,%r11d
547b(7): sub $0xb8,%rsp
5482(9): mov $0x28,%rax
548b(5): mov %rax,0x78(%rsp)
5490(2): xor %eax,%eax
5492(8): lea 0xd0(%rsp),%rax
549a(8): mov %r8,0xa0(%rsp)
54a2(8): lea 0xd0(%rsp),%rbx
54aa(5): lea 0x20(%rsp),%r8
54af(8): mov %r9,0xa8(%rsp)
54b7(8): mov $0x20,0x8(%rsp)
54bf(5): mov %rax,0x10(%rsp)
54c4(8): lea 0x80(%rsp),%rax
54cc(3): xor %r9d,%r9d
54cf(5): mov %rax,0x18(%rsp)
54d4(3): mov %rax,%rbp
54d7(9): nop 0x0(%rax,%rax,1)
54e0(4): cmp $0x2f,%r10d
54e4(2): jnbe 0x58(%rip)
54e6(3): mov %r10d,%eax
54e9(6): mov $0x1,%r11d
54ef(4): add $0x8,%r10d
54f3(3): add %rbp,%rax
54f6(3): mov (%rax),%rax
54f9(3): test %rax,%rax
54fc(4): mov %rax,0x0(%r8,%r9,8)
5500(2): jz 0xc(%rip)
5502(4): add $0x1,%r9
5506(4): cmp $0xa,%r9
550a(2): jnz 0xffffffd6(%rip)
550c(3): test %r11b,%r11b
550f(2): jnz 0x26(%rip)
5511(5): call 0xfffffa9f(%rip)
5516(5): mov 0x78(%rsp),%rax
551b(9): xor $0x28,%rax
5524(2): jnz 0xc(%rip)
5526(7): add $0xb8,%rsp
552d(1): pop %rbx
552e(1): pop %rbp
552f(1): ret near (%rsp)
5530(5): call 0xffffc180(%rip)
5535(5): mov %r10d,0x8(%rsp)
553a(2): jmp 0xffffffd7(%rip)
553c(3): mov %rbx,%rax
553f(4): add $0x8,%rbx
5543(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5550(1): push %rbx
5551(7): lea 0x178a(%rip),%rsi
5558(5): mov $0x5,%edx
555d(2): xor %edi,%edi
555f(5): call 0xffffc121(%rip)
5564(7): lea 0x178c(%rip),%rdx
556b(3): mov %rax,%rsi
556e(5): mov $0x1,%edi
5573(2): xor %eax,%eax
5575(5): call 0xffffc2cb(%rip)
557a(7): lea 0x178c(%rip),%rsi
5581(5): mov $0x5,%edx
5586(2): xor %edi,%edi
5588(5): call 0xffffc0f8(%rip)
558d(7): lea 0x1094(%rip),%rcx
5594(7): lea 0xe6e(%rip),%rdx
559b(3): mov %rax,%rsi
559e(5): mov $0x1,%edi
55a3(2): xor %eax,%eax
55a5(5): call 0xffffc29b(%rip)
55aa(7): mov 0x203af7(%rip),%rbx
55b1(7): lea 0x1988(%rip),%rsi
55b8(2): xor %edi,%edi
55ba(5): mov $0x5,%edx
55bf(5): call 0xffffc0c1(%rip)
55c4(3): mov %rbx,%rsi
55c7(3): mov %rax,%rdi
55ca(1): pop %rbx
55cb(5): jmp 0xffffc1c5(%rip)

"xmalloc" :
55d0(1): push %rbx
55d1(3): mov %rdi,%rbx
55d4(5): call 0xffffc20c(%rip)
55d9(3): test %rax,%rax
55dc(2): jnz 0x7(%rip)
55de(3): test %rbx,%rbx
55e1(2): jnz 0x4(%rip)
55e3(1): pop %rbx
55e4(1): ret near (%rsp)
55e5(5): call 0x23b(%rip)

"xnmalloc" :
55f0(3): mov %rdi,%rax
55f3(3): mul %rax,%rsi,%rdx
55f6(3): mov %rax,%rdi
55f9(3): seto %al
55fc(3): test %rdi,%rdi
55ff(2): js 0xc(%rip)
5601(3): movzx %al,%eax
5604(3): test %rax,%rax
5607(2): jnz 0x4(%rip)
5609(2): jmp 0xffffffc7(%rip)
560b(4): sub $0x8,%rsp
560f(5): call 0x211(%rip)

"xrealloc" :
5630(3): test %rsi,%rsi
5633(1): push %rbx
5634(3): mov %rsi,%rbx
5637(2): jnz 0x7(%rip)
5639(3): test %rdi,%rdi
563c(2): jnz 0x1c(%rip)
563e(3): mov %rbx,%rsi
5641(5): call 0xffffc1df(%rip)
5646(3): test %rax,%rax
5649(2): jnz 0x7(%rip)
564b(3): test %rbx,%rbx
564e(2): jnz 0x13(%rip)
5650(1): pop %rbx
5651(1): ret near (%rsp)
5652(6): nop 0x0(%rax,%rax,1)
5658(5): call 0xffffbf88(%rip)
565d(2): xor %eax,%eax
565f(1): pop %rbx
5660(1): ret near (%rsp)
5661(5): call 0x1bf(%rip)

"xnrealloc" :
5670(3): mov %rsi,%rax
5673(3): mul %rax,%rdx,%rdx
5676(3): mov %rax,%rsi
5679(3): seto %al
567c(3): test %rsi,%rsi
567f(2): js 0xc(%rip)
5681(3): movzx %al,%eax
5684(3): test %rax,%rax
5687(2): jnz 0x4(%rip)
5689(2): jmp 0xffffffa7(%rip)
568b(4): sub $0x8,%rsp
568f(5): call 0x191(%rip)

"x2nrealloc" :
56a0(3): test %rdi,%rdi
56a3(3): mov %rdx,%r9
56a6(3): mov (%rsi),%rcx
56a9(2): jz 0x37(%rip)
56ab(2): xor %edx,%edx
56ad(a): mov $0x6148914691236517204,%rax
56b7(3): div %r9,%rax
56ba(3): cmp %rcx,%rax
56bd(2): jbe 0x3e(%rip)
56bf(3): mov %rcx,%rax
56c2(3): shr $0x1,%rax
56c5(5): lea 0x1(%rax,%rcx,1),%rcx
56ca(3): mov %rcx,(%rsi)
56cd(4): imul %r9,%rcx
56d1(3): mov %rcx,%rsi
56d4(5): jmp 0xffffff5c(%rip)
56d9(7): nop 0x0(%rax)
56e0(3): test %rcx,%rcx
56e3(2): jz 0x25(%rip)
56e5(3): mov %rcx,%rax
56e8(3): mul %rax,%r9,%rdx
56eb(3): seto %dl
56ee(3): test %rax,%rax
56f1(3): movzx %dl,%edx
56f4(2): js 0x7(%rip)
56f6(3): test %rdx,%rdx
56f9(2): jz 0xffffffd1(%rip)
56fb(4): sub $0x8,%rsp
56ff(5): call 0x121(%rip)
5704(4): nop 0x0(%rax)
5708(2): xor %edx,%edx
570a(5): mov $0x80,%eax
570f(3): xor %r8d,%r8d
5712(3): div %r9,%rax
5715(3): test %rax,%rax
5718(4): setz %r8b
571c(4): lea 0x0(%r8,%rax,1),%rcx
5720(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5730(3): test %rdi,%rdi
5733(3): mov (%rsi),%rax
5736(2): jz 0x2a(%rip)
5738(a): mov $0x6148914691236517203,%rdx
5742(3): cmp %rdx,%rax
5745(2): jnbe 0x2c(%rip)
5747(3): mov %rax,%rdx
574a(3): shr $0x1,%rdx
574d(5): lea 0x1(%rdx,%rax,1),%rax
5752(3): mov %rax,(%rsi)
5755(3): mov %rax,%rsi
5758(5): jmp 0xfffffed8(%rip)
575d(3): nop (%rax)
5760(3): test %rax,%rax
5763(5): mov $0x80,%edx
5768(4): cmove %rdx,%rax
576c(3): test %rax,%rax
576f(2): jns 0xffffffe3(%rip)
5771(4): sub $0x8,%rsp
5775(5): call 0xab(%rip)

"xzalloc" :
5780(1): push %rbx
5781(3): mov %rdi,%rbx
5784(5): call 0xfffffe4c(%rip)
5789(3): mov %rbx,%rdx
578c(2): xor %esi,%esi
578e(3): mov %rax,%rdi
5791(1): pop %rbx
5792(5): jmp 0xffffbfae(%rip)

"xcalloc" :
57a0(3): mov %rdi,%rax
57a3(4): sub $0x8,%rsp
57a7(3): mul %rax,%rsi,%rdx
57aa(3): seto %dl
57ad(3): test %rax,%rax
57b0(2): js 0x19(%rip)
57b2(3): movzx %dl,%edx
57b5(3): test %rdx,%rdx
57b8(2): jnz 0x11(%rip)
57ba(5): call 0xffffbfe6(%rip)
57bf(3): test %rax,%rax
57c2(2): jz 0x7(%rip)
57c4(4): add $0x8,%rsp
57c8(1): ret near (%rsp)
57c9(5): call 0x57(%rip)

"xmemdup" :
57d0(1): push %rbp
57d1(1): push %rbx
57d2(3): mov %rdi,%rbp
57d5(3): mov %rsi,%rdi
57d8(3): mov %rsi,%rbx
57db(4): sub $0x8,%rsp
57df(5): call 0xfffffdf1(%rip)
57e4(4): add $0x8,%rsp
57e8(3): mov %rbx,%rdx
57eb(3): mov %rbp,%rsi
57ee(1): pop %rbx
57ef(1): pop %rbp
57f0(3): mov %rax,%rdi
57f3(5): jmp 0xffffbfcd(%rip)

"xstrdup" :
5800(1): push %rbx
5801(3): mov %rdi,%rbx
5804(5): call 0xffffbe9c(%rip)
5809(3): mov %rbx,%rdi
580c(4): lea 0x1(%rax),%rsi
5810(1): pop %rbx
5811(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5820(7): lea 0x17c8(%rip),%rsi
5827(4): sub $0x8,%rsp
582b(5): mov $0x5,%edx
5830(2): xor %edi,%edi
5832(5): call 0xffffbe4e(%rip)
5837(6): mov 0x2037db(%rip),%edi
583d(7): lea 0x193e(%rip),%rdx
5844(3): mov %rax,%rcx
5847(2): xor %esi,%esi
5849(2): xor %eax,%eax
584b(5): call 0xffffc025(%rip)
5850(5): call 0xffffbda0(%rip)

"xstrtoumax" :
5860(2): push %r15
5862(2): push %r14
5864(2): push %r13
5866(2): push %r12
5868(1): push %rbp
5869(1): push %rbx
586a(4): sub $0x28,%rsp
586e(9): mov $0x28,%rax
5877(5): mov %rax,0x18(%rsp)
587c(2): xor %eax,%eax
587e(3): cmp $0x24,%edx
5881(6): jnbe 0x364(%rip)
5887(5): lea 0x10(%rsp),%rax
588c(3): mov %rsi,%r15
588f(3): test %rsi,%rsi
5892(3): mov %rdi,%rbp
5895(4): mov %edx,0x8(%rsp)
5899(3): mov %rcx,%r14
589c(3): mov %r8,%r13
589f(4): cmove %rax,%r15
58a3(5): call 0xffffbd5d(%rip)
58a8(6): mov $0x0,(%rax)
58ae(3): mov %rax,%r12
58b1(4): movzx 0x0(%rbp),%ebx
58b5(5): call 0xffffc05b(%rip)
58ba(4): mov 0x8(%rsp),%edx
58be(3): mov (%rax),%rsi
58c1(3): mov %rbp,%rax
58c4(2): jmp 0x13(%rip)
58c6(a): nop 0x0(%rax,%rax,1)
58d0(4): add $0x1,%rax
58d4(3): movzx (%rax),%ebx
58d7(3): movzx %bl,%ecx
58da(5): test $0x20,0x1(%rsi,%rcx,2)
58df(2): jnz 0xfffffff1(%rip)
58e1(3): cmp $0x2d,%bl
58e4(2): jz 0x54(%rip)
58e6(2): xor %ecx,%ecx
58e8(3): mov %r15,%rsi
58eb(3): mov %rbp,%rdi
58ee(5): call 0xffffbe42(%rip)
58f3(3): mov (%r15),%rcx
58f6(3): mov %rax,%rbx
58f9(3): cmp %rbp,%rcx
58fc(2): jz 0x2c(%rip)
58fe(4): mov (%r12),%eax
5902(2): test %eax,%eax
5904(2): jz 0x64(%rip)
5906(3): cmp $0x22,%eax
5909(5): mov $0x1,%ebp
590e(2): jnz 0x2a(%rip)
5910(3): test %r13,%r13
5913(2): jz 0xb(%rip)
5915(4): movzx (%rcx),%r12d
5919(3): test %r12b,%r12b
591c(2): jnz 0x7b(%rip)
591e(3): mov %rbx,(%r14)
5921(2): jmp 0x1c(%rip)
5923(5): nop 0x0(%rax,%rax,1)
5928(3): test %r13,%r13
592b(5): mov %rcx,0x8(%rsp)
5930(2): jnz 0x40(%rip)
5932(6): nop 0x0(%rax,%rax,1)
5938(5): mov $0x4,%ebp
593d(5): mov 0x18(%rsp),%rdi
5942(9): xor $0x28,%rdi
594b(2): mov %ebp,%eax
594d(6): jnz 0x293(%rip)
5953(4): add $0x28,%rsp
5957(1): pop %rbx
5958(1): pop %rbp
5959(2): pop %r12
595b(2): pop %r13
595d(2): pop %r14
595f(2): pop %r15
5961(1): ret near (%rsp)
5962(6): nop 0x0(%rax,%rax,1)
5968(2): xor %ebp,%ebp
596a(2): jmp 0xffffffa6(%rip)
596c(4): nop 0x0(%rax)
5970(5): movzx 0x0(%rbp),%r12d
5975(3): test %r12b,%r12b
5978(2): jz 0xffffffc0(%rip)
597a(4): movsx %r12b,%esi
597e(3): mov %r13,%rdi
5981(2): xor %ebp,%ebp
5983(5): call 0xffffbd5d(%rip)
5988(3): test %rax,%rax
598b(5): mov $0x1,%ebx
5990(5): mov 0x8(%rsp),%rcx
5995(2): jz 0xffffffa3(%rip)
5997(4): movsx %r12b,%esi
599b(3): mov %r13,%rdi
599e(5): mov %rcx,0x8(%rsp)
59a3(5): call 0xffffbd3d(%rip)
59a8(3): test %rax,%rax
59ab(5): mov 0x8(%rsp),%rcx
59b0(6): jz 0xcc(%rip)
59b6(5): lea 0xffffffbb(%r12),%eax
59bb(2): cmp $0x2f,%al
59bd(2): jnbe 0x53(%rip)
59bf(a): mov $0x142129060940101,%rdx
59c9(4): bt %rax,%rdx
59cd(2): jnb 0x43(%rip)
59cf(5): mov $0x30,%esi
59d4(3): mov %r13,%rdi
59d7(5): mov %rcx,0x8(%rsp)
59dc(5): call 0xffffbd04(%rip)
59e1(3): test %rax,%rax
59e4(5): mov 0x8(%rsp),%rcx
59e9(2): jz 0x27(%rip)
59eb(4): movzx 0x1(%rcx),%eax
59ef(2): cmp $0x44,%al
59f1(2): jz 0xe(%rip)
59f3(2): cmp $0x69,%al
59f5(6): jz 0x1d3(%rip)
59fb(2): cmp $0x42,%al
59fd(2): jnz 0x13(%rip)
59ff(5): mov $0x2,%edi
5a04(5): mov $0x3e8,%esi
5a09(2): jmp 0x11(%rip)
5a0b(5): nop 0x0(%rax,%rax,1)
5a10(5): mov $0x1,%edi
5a15(5): mov $0x400,%esi
5a1a(4): sub $0x42,%r12d
5a1e(4): cmp $0x35,%r12b
5a22(2): jnbe 0x5a(%rip)
5a24(7): lea 0x161d(%rip),%rdx
5a2b(4): movzx %r12b,%r12d
5a2f(4): movsxd 0x0(%rdx,%r12,4),%rax
5a33(3): add %rdx,%rax
5a36(2): jmp %rax
5a38(3): mov %rbx,%rax
5a3b(3): mul %rax,%rsi,%rdx
5a3e(6): jo 0x1f3(%rip)
5a44(3): xor %r8d,%r8d
5a47(3): mul %rax,%rsi,%rdx
5a4a(6): jo 0x1d8(%rip)
5a50(3): mov %rax,%rbx
5a53(3): or %r8d,%ebp
5a56(a): nop 0x0(%rax,%rax,1)
5a60(3): movsxd %edi,%rdi
5a63(2): mov %ebp,%eax
5a65(3): add %rdi,%rcx
5a68(3): or $0x2,%eax
5a6b(3): mov %rcx,(%r15)
5a6e(3): cmp $0x0,(%rcx)
5a71(3): mov %rbx,(%r14)
5a74(3): cmovne %eax,%ebp
5a77(5): jmp 0xfffffec6(%rip)
5a7c(3): mov %rbx,(%r14)
5a7f(3): or $0x2,%ebp
5a82(5): jmp 0xfffffebb(%rip)
5a87(5): mov $0x2,%edx
5a8c(3): mov %rdx,%rax
5a8f(3): mul %rax,%rbx,%rdx
5a92(6): jo 0x9c(%rip)
5a98(3): add %rbx,%rbx
5a9b(2): jmp 0xffffffc5(%rip)
5a9d(5): mov $0x200,%edx
5aa2(3): mov %rdx,%rax
5aa5(3): mul %rax,%rbx,%rdx
5aa8(6): jo 0x86(%rip)
5aae(4): shl/sal $0x9,%rbx
5ab2(2): jmp 0xffffffae(%rip)
5ab4(6): mov $0x7,%r8d
5aba(3): xor %r9d,%r9d
5abd(3): nop (%rax)
5ac0(3): mov %rbx,%rax
5ac3(3): mul %rax,%rsi,%rdx
5ac6(3): mov %rax,%rbx
5ac9(6): jo 0x195(%rip)
5acf(4): sub $0x1,%r8d
5ad3(2): jnz 0xffffffed(%rip)
5ad5(3): or %r9d,%ebp
5ad8(2): jmp 0xffffff88(%rip)
5ada(6): mov $0x8,%r8d
5ae0(3): xor %r9d,%r9d
5ae3(5): nop 0x0(%rax,%rax,1)
5ae8(3): mov %rbx,%rax
5aeb(3): mul %rax,%rsi,%rdx
5aee(3): mov %rax,%rbx
5af1(6): jo 0x14f(%rip)
5af7(4): sub $0x1,%r8d
5afb(2): jnz 0xffffffed(%rip)
5afd(2): jmp 0xffffffd8(%rip)
5aff(6): mov $0x4,%r8d
5b05(3): xor %r9d,%r9d
5b08(3): mov %rbx,%rax
5b0b(3): mul %rax,%rsi,%rdx
5b0e(3): mov %rax,%rbx
5b11(6): jo 0x102(%rip)
5b17(4): sub $0x1,%r8d
5b1b(2): jnz 0xffffffed(%rip)
5b1d(2): jmp 0xffffffb8(%rip)
5b1f(3): mov %rbx,%rax
5b22(3): mul %rax,%rsi,%rdx
5b25(3): mov %rax,%rbx
5b28(6): jno 0xffffff38(%rip)
5b2e(5): mov $0x1,%ebp
5b33(4): or $0xffffffff,%rbx
5b37(5): jmp 0xffffff29(%rip)
5b3c(4): nop 0x0(%rax)
5b40(6): mov $0x5,%r8d
5b46(3): xor %r9d,%r9d
5b49(3): mov %rbx,%rax
5b4c(3): mul %rax,%rsi,%rdx
5b4f(3): mov %rax,%rbx
5b52(6): jo 0xfd(%rip)
5b58(4): sub $0x1,%r8d
5b5c(2): jnz 0xffffffed(%rip)
5b5e(5): jmp 0xffffff77(%rip)
5b63(6): mov $0x6,%r8d
5b69(3): xor %r9d,%r9d
5b6c(3): mov %rbx,%rax
5b6f(3): mul %rax,%rsi,%rdx
5b72(3): mov %rax,%rbx
5b75(6): jo 0x8f(%rip)
5b7b(4): sub $0x1,%r8d
5b7f(2): jnz 0xffffffed(%rip)
5b81(5): jmp 0xffffff54(%rip)
5b86(5): mov $0x400,%edx
5b8b(3): mov %rdx,%rax
5b8e(3): mul %rax,%rbx,%rdx
5b91(2): jo 0xffffff9d(%rip)
5b93(4): shl/sal $0xa,%rbx
5b97(5): jmp 0xfffffec9(%rip)
5b9c(3): mov %rbx,%rax
5b9f(3): mul %rax,%rsi,%rdx
5ba2(6): jo 0xcb(%rip)
5ba8(3): xor %r8d,%r8d
5bab(3): mul %rax,%rsi,%rdx
5bae(6): jno 0xfffffe99(%rip)
5bb4(6): mov $0x1,%r8d
5bba(4): or $0xffffffff,%rax
5bbe(5): jmp 0xfffffe89(%rip)
5bc3(5): nop 0x0(%rax,%rax,1)
5bc8(2): xor %edi,%edi
5bca(4): cmp $0x42,0x2(%rcx)
5bce(5): mov $0x400,%esi
5bd3(4): setz %dil
5bd7(4): lea 0x1(%rdi,%rdi,1),%edi
5bdb(5): jmp 0xfffffe3f(%rip)
5be0(5): call 0xffffbad0(%rip)
5be5(7): lea 0x1534(%rip),%rcx
5bec(7): lea 0x140d(%rip),%rsi
5bf3(7): lea 0x1426(%rip),%rdi
5bfa(5): mov $0x54,%edx
5bff(5): call 0xffffbb21(%rip)
5c04(6): mov $0x1,%r9d
5c0a(4): or $0xffffffff,%rbx
5c0e(5): jmp 0xffffff6d(%rip)
5c13(6): mov $0x1,%r9d
5c19(4): or $0xffffffff,%rbx
5c1d(5): jmp 0xfffffefa(%rip)
5c22(6): mov $0x1,%r8d
5c28(4): or $0xffffffff,%rbx
5c2c(5): jmp 0xfffffe27(%rip)
5c31(4): or $0xffffffff,%rax
5c35(6): mov $0x1,%r8d
5c3b(5): jmp 0xfffffe0c(%rip)
5c40(6): mov $0x1,%r9d
5c46(4): or $0xffffffff,%rbx
5c4a(5): jmp 0xfffffead(%rip)
5c4f(6): mov $0x1,%r9d
5c55(4): or $0xffffffff,%rbx
5c59(5): jmp 0xfffffeff(%rip)
5c5e(6): mov $0x1,%r9d
5c64(4): or $0xffffffff,%rbx
5c68(5): jmp 0xfffffe67(%rip)
5c6d(6): mov $0x1,%r8d
5c73(4): or $0xffffffff,%rax
5c77(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
5c80(2): push %r12
5c82(1): push %rbp
5c83(1): push %rbx
5c84(3): mov %rdi,%rbx
5c87(5): call 0xffffbb49(%rip)
5c8c(2): test %eax,%eax
5c8e(3): mov %rbx,%rdi
5c91(2): js 0x56(%rip)
5c93(5): call 0xffffbb7d(%rip)
5c98(2): test %eax,%eax
5c9a(2): jnz 0x2e(%rip)
5c9c(3): mov %rbx,%rdi
5c9f(5): call 0x61(%rip)
5ca4(2): test %eax,%eax
5ca6(2): jz 0x3e(%rip)
5ca8(5): call 0xffffb958(%rip)
5cad(3): mov (%rax),%r12d
5cb0(3): mov %rbx,%rdi
5cb3(3): mov %rax,%rbp
5cb6(5): call 0xffffb9aa(%rip)
5cbb(3): test %r12d,%r12d
5cbe(2): jnz 0x32(%rip)
5cc0(1): pop %rbx
5cc1(1): pop %rbp
5cc2(2): pop %r12
5cc4(1): ret near (%rsp)
5cc5(3): nop (%rax)
5cc8(3): mov %rbx,%rdi
5ccb(5): call 0xffffbb05(%rip)
5cd0(2): xor %esi,%esi
5cd2(5): mov $0x1,%edx
5cd7(2): mov %eax,%edi
5cd9(5): call 0xffffba37(%rip)
5cde(4): cmp $0xffffffff,%rax
5ce2(2): jnz 0xffffffba(%rip)
5ce4(3): mov %rbx,%rdi
5ce7(1): pop %rbx
5ce8(1): pop %rbp
5ce9(2): pop %r12
5ceb(5): jmp 0xffffb975(%rip)
5cf0(4): mov %r12d,0x0(%rbp)
5cf4(5): mov $0xffffffff,%eax
5cf9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5d00(3): test %rdi,%rdi
5d03(1): push %rbx
5d04(3): mov %rdi,%rbx
5d07(2): jz 0x13(%rip)
5d09(5): call 0xffffbb07(%rip)
5d0e(2): test %eax,%eax
5d10(2): jz 0xa(%rip)
5d12(6): test $0x100,(%rbx)
5d18(2): jnz 0x10(%rip)
5d1a(3): mov %rbx,%rdi
5d1d(1): pop %rbx
5d1e(5): jmp 0xffffbad2(%rip)
5d23(5): nop 0x0(%rax,%rax,1)
5d28(3): mov %rbx,%rdi
5d2b(5): mov $0x1,%edx
5d30(2): xor %esi,%esi
5d32(5): call 0xe(%rip)
5d37(3): mov %rbx,%rdi
5d3a(1): pop %rbx
5d3b(5): jmp 0xffffbab5(%rip)

"rpl_fseeko" :
5d40(4): mov 0x8(%rdi),%rax
5d44(4): cmp %rax,0x10(%rdi)
5d48(2): jz 0x8(%rip)
5d4a(5): jmp 0xffffbb46(%rip)
5d4f(1): nop 
5d50(4): mov 0x20(%rdi),%rax
5d54(4): cmp %rax,0x28(%rdi)
5d58(2): jnz 0xfffffff2(%rip)
5d5a(5): cmp $0x0,0x48(%rdi)
5d5f(2): jnz 0xffffffeb(%rip)
5d61(2): push %r12
5d63(1): push %rbp
5d64(3): mov %edx,%r12d
5d67(1): push %rbx
5d68(3): mov %rsi,%rbp
5d6b(3): mov %rdi,%rbx
5d6e(5): call 0xffffba62(%rip)
5d73(3): mov %r12d,%edx
5d76(3): mov %rbp,%rsi
5d79(2): mov %eax,%edi
5d7b(5): call 0xffffb995(%rip)
5d80(4): cmp $0xffffffff,%rax
5d84(2): jz 0xe(%rip)
5d86(3): and $0xef,(%rbx)
5d89(7): mov %rax,0x90(%rbx)
5d90(2): xor %eax,%eax
5d92(1): pop %rbx
5d93(1): pop %rbp
5d94(2): pop %r12
5d96(1): ret near (%rsp)

"rpl_mbrtowc" :
5da0(2): push %r13
5da2(2): push %r12
5da4(3): mov %rsi,%r13
5da7(1): push %rbp
5da8(1): push %rbx
5da9(3): mov %rdi,%rbx
5dac(3): mov %rdx,%r12
5daf(4): sub $0x18,%rsp
5db3(9): mov $0x28,%rax
5dbc(5): mov %rax,0x8(%rsp)
5dc1(2): xor %eax,%eax
5dc3(5): lea 0x4(%rsp),%rax
5dc8(3): test %rdi,%rdi
5dcb(4): cmove %rax,%rbx
5dcf(3): mov %rbx,%rdi
5dd2(5): call 0xffffb8fe(%rip)
5dd7(4): cmp $0xfffffffd,%rax
5ddb(3): mov %rax,%rbp
5dde(2): jbe 0x22(%rip)
5de0(3): test %r12,%r12
5de3(2): jz 0x1d(%rip)
5de5(2): xor %edi,%edi
5de7(5): call 0x459(%rip)
5dec(2): test %al,%al
5dee(2): jnz 0x12(%rip)
5df0(5): movzx 0x0(%r13),%eax
5df5(5): mov $0x1,%ebp
5dfa(2): mov %eax,(%rbx)
5dfc(4): nop 0x0(%rax)
5e00(5): mov 0x8(%rsp),%rdx
5e05(9): xor $0x28,%rdx
5e0e(3): mov %rbp,%rax
5e11(2): jnz 0xd(%rip)
5e13(4): add $0x18,%rsp
5e17(1): pop %rbx
5e18(1): pop %rbp
5e19(2): pop %r12
5e1b(2): pop %r13
5e1d(1): ret near (%rsp)
5e1e(5): call 0xffffb892(%rip)

"__argmatch_die" :
5e30(5): mov $0x1,%edi
5e35(5): jmp 0xffffc27b(%rip)

"argmatch" :
5e40(2): push %r15
5e42(2): push %r14
5e44(3): mov %rsi,%r15
5e47(2): push %r13
5e49(2): push %r12
5e4b(3): mov %rcx,%r13
5e4e(1): push %rbp
5e4f(1): push %rbx
5e50(3): mov %rdx,%rbp
5e53(4): sub $0x28,%rsp
5e57(5): mov %rdi,0x8(%rsp)
5e5c(5): mov %rdx,0x18(%rsp)
5e61(5): call 0xffffb83f(%rip)
5e66(3): mov (%r15),%r14
5e69(8): mov $0xffffffff,(%rsp)
5e71(3): test %r14,%r14
5e74(6): jz 0xb9(%rip)
5e7a(3): mov %rax,%r12
5e7d(5): mov $0x0,0x17(%rsp)
5e82(2): xor %ebx,%ebx
5e84(2): jmp 0x53(%rip)
5e86(a): nop 0x0(%rax,%rax,1)
5e90(5): mov 0x18(%rsp),%rax
5e95(3): test %rax,%rax
5e98(6): jz 0xa8(%rip)
5e9e(4): mov (%rsp),%rdi
5ea2(3): mov %r13,%rdx
5ea5(3): mov %rbp,%rsi
5ea8(4): imul %r13,%rdi
5eac(3): add %rax,%rdi
5eaf(5): call 0xffffb8d1(%rip)
5eb4(2): test %eax,%eax
5eb6(5): movzx 0x17(%rsp),%eax
5ebb(5): mov $0x1,%ecx
5ec0(3): cmovne %ecx,%eax
5ec3(4): mov %al,0x17(%rsp)
5ec7(4): add $0x1,%rbx
5ecb(3): add %r13,%rbp
5ece(4): mov 0x0(%r15,%rbx,8),%r14
5ed2(3): test %r14,%r14
5ed5(2): jz 0x43(%rip)
5ed7(5): mov 0x8(%rsp),%rsi
5edc(3): mov %r12,%rdx
5edf(3): mov %r14,%rdi
5ee2(5): call 0xffffb72e(%rip)
5ee7(2): test %eax,%eax
5ee9(2): jnz 0xffffffde(%rip)
5eeb(3): mov %r14,%rdi
5eee(5): call 0xffffb7b2(%rip)
5ef3(3): cmp %r12,%rax
5ef6(2): jz 0x5a(%rip)
5ef8(5): cmp $0xffffffff,(%rsp)
5efd(2): jnz 0xffffff93(%rip)
5eff(4): mov %rbx,(%rsp)
5f03(4): add $0x1,%rbx
5f07(3): add %r13,%rbp
5f0a(4): mov 0x0(%r15,%rbx,8),%r14
5f0e(3): test %r14,%r14
5f11(2): jnz 0xffffffc6(%rip)
5f13(5): nop 0x0(%rax,%rax,1)
5f18(5): cmp $0x0,0x17(%rsp)
5f1d(7): mov $0xfffffffe,%rax
5f24(5): cmove (%rsp),%rax
5f29(4): mov %rax,(%rsp)
5f2d(4): mov (%rsp),%rax
5f31(4): add $0x28,%rsp
5f35(1): pop %rbx
5f36(1): pop %rbp
5f37(2): pop %r12
5f39(2): pop %r13
5f3b(2): pop %r14
5f3d(2): pop %r15
5f3f(1): ret near (%rsp)
5f40(5): mov $0x1,0x17(%rsp)
5f45(2): jmp 0xffffff82(%rip)
5f47(9): nop 0x0(%rax,%rax,1)
5f50(4): mov %rbx,(%rsp)
5f54(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
5f60(4): cmp $0xffffffff,%rdx
5f64(2): push %r12
5f66(5): mov $0x5,%edx
5f6b(1): push %rbp
5f6c(3): mov %rsi,%r12
5f6f(1): push %rbx
5f70(3): mov %rdi,%rbp
5f73(2): jz 0x4d(%rip)
5f75(7): lea 0x11ca(%rip),%rsi
5f7c(2): xor %edi,%edi
5f7e(5): call 0xffffb702(%rip)
5f83(3): mov %rax,%rbx
5f86(3): mov %rbp,%rsi
5f89(5): mov $0x1,%edi
5f8e(5): call 0xffffef82(%rip)
5f93(3): mov %r12,%rdx
5f96(3): mov %rax,%rbp
5f99(5): mov $0x8,%esi
5f9e(2): xor %edi,%edi
5fa0(5): call 0xffffeba0(%rip)
5fa5(3): mov %rbp,%r8
5fa8(3): mov %rbx,%rdx
5fab(3): mov %rax,%rcx
5fae(1): pop %rbx
5faf(1): pop %rbp
5fb0(2): pop %r12
5fb2(2): xor %esi,%esi
5fb4(2): xor %edi,%edi
5fb6(2): xor %eax,%eax
5fb8(5): jmp 0xffffb8b8(%rip)
5fbd(3): nop (%rax)
5fc0(7): lea 0x1164(%rip),%rsi
5fc7(2): xor %edi,%edi
5fc9(5): call 0xffffb6b7(%rip)
5fce(3): mov %rax,%rbx
5fd1(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
5fe0(2): push %r15
5fe2(2): push %r14
5fe4(3): mov %rdi,%r14
5fe7(2): push %r13
5fe9(2): push %r12
5feb(2): xor %edi,%edi
5fed(1): push %rbp
5fee(1): push %rbx
5fef(3): mov %rsi,%rbp
5ff2(7): lea 0x116a(%rip),%rsi
5ff9(3): mov %rdx,%r12
5ffc(5): mov $0x5,%edx
6001(4): sub $0x8,%rsp
6005(7): mov 0x2030d4(%rip),%rbx
600c(5): call 0xffffb674(%rip)
6011(3): mov %rax,%rdi
6014(3): mov %rbx,%rsi
6017(5): call 0xffffb779(%rip)
601c(3): mov (%r14),%r15
601f(3): test %r15,%r15
6022(6): jz 0x96(%rip)
6028(3): xor %r13d,%r13d
602b(2): xor %ebx,%ebx
602d(2): jmp 0x3b(%rip)
602f(1): nop 
6030(3): mov %r15,%rdi
6033(4): add $0x1,%rbx
6037(3): mov %rbp,%r13
603a(5): call 0xffffeef6(%rip)
603f(7): mov 0x20309a(%rip),%rdi
6046(7): lea 0x112b(%rip),%rdx
604d(3): mov %rax,%rcx
6050(5): mov $0x1,%esi
6055(2): xor %eax,%eax
6057(3): add %r12,%rbp
605a(5): call 0xffffb886(%rip)
605f(4): mov 0x0(%r14,%rbx,8),%r15
6063(3): test %r15,%r15
6066(2): jz 0x52(%rip)
6068(3): test %rbx,%rbx
606b(2): jz 0xffffffc5(%rip)
606d(3): mov %r12,%rdx
6070(3): mov %rbp,%rsi
6073(3): mov %r13,%rdi
6076(5): call 0xffffb70a(%rip)
607b(2): test %eax,%eax
607d(2): jnz 0xffffffb3(%rip)
607f(3): mov %r15,%rdi
6082(4): add $0x1,%rbx
6086(3): add %r12,%rbp
6089(5): call 0xffffeea7(%rip)
608e(7): mov 0x20304b(%rip),%rdi
6095(7): lea 0x10e4(%rip),%rdx
609c(3): mov %rax,%rcx
609f(5): mov $0x1,%esi
60a4(2): xor %eax,%eax
60a6(5): call 0xffffb83a(%rip)
60ab(4): mov 0x0(%r14,%rbx,8),%r15
60af(3): test %r15,%r15
60b2(2): jnz 0xffffffb6(%rip)
60b4(4): nop 0x0(%rax)
60b8(7): mov 0x203021(%rip),%rdi
60bf(4): mov 0x28(%rdi),%rax
60c3(4): cmp 0x30(%rdi),%rax
60c7(2): jnb 0x21(%rip)
60c9(4): lea 0x1(%rax),%rdx
60cd(4): mov %rdx,0x28(%rdi)
60d1(3): mov $0xa,(%rax)
60d4(4): add $0x8,%rsp
60d8(1): pop %rbx
60d9(1): pop %rbp
60da(2): pop %r12
60dc(2): pop %r13
60de(2): pop %r14
60e0(2): pop %r15
60e2(1): ret near (%rsp)
60e3(5): nop 0x0(%rax,%rax,1)
60e8(4): add $0x8,%rsp
60ec(5): mov $0xa,%esi
60f1(1): pop %rbx
60f2(1): pop %rbp
60f3(2): pop %r12
60f5(2): pop %r13
60f7(2): pop %r14
60f9(2): pop %r15
60fb(5): jmp 0xffffb5f5(%rip)

"__xargmatch_internal" :
6100(2): push %r15
6102(2): push %r14
6104(3): mov %rdi,%r14
6107(2): push %r13
6109(2): push %r12
610b(3): mov %rsi,%r12
610e(1): push %rbp
610f(1): push %rbx
6110(3): mov %rcx,%rbp
6113(3): mov %rdx,%rbx
6116(3): mov %r8,%rcx
6119(3): mov %rbp,%rdx
611c(4): sub $0x8,%rsp
6120(3): mov %rbx,%rsi
6123(3): mov %r12,%rdi
6126(3): mov %r8,%r15
6129(3): mov %r9,%r13
612c(5): call 0xfffffd14(%rip)
6131(3): test %rax,%rax
6134(2): js 0x11(%rip)
6136(4): add $0x8,%rsp
613a(1): pop %rbx
613b(1): pop %rbp
613c(2): pop %r12
613e(2): pop %r13
6140(2): pop %r14
6142(2): pop %r15
6144(1): ret near (%rsp)
6145(3): mov %rax,%rdx
6148(3): mov %r12,%rsi
614b(3): mov %r14,%rdi
614e(5): call 0xfffffe12(%rip)
6153(3): mov %r15,%rdx
6156(3): mov %rbp,%rsi
6159(3): mov %rbx,%rdi
615c(5): call 0xfffffe84(%rip)
6161(3): call %r13
6164(7): mov $0xffffffff,%rax
616b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
6170(2): push %r14
6172(2): push %r13
6174(2): push %r12
6176(1): push %rbp
6177(1): push %rbx
6178(3): mov (%rsi),%r14
617b(3): test %r14,%r14
617e(2): jz 0x33(%rip)
6180(3): mov %rcx,%r12
6183(3): mov %rdi,%r13
6186(3): mov %rdx,%rbp
6189(4): lea 0x8(%rsi),%rbx
618d(2): jmp 0x12(%rip)
618f(1): nop 
6190(3): mov (%rbx),%r14
6193(3): add %r12,%rbp
6196(4): add $0x8,%rbx
619a(3): test %r14,%r14
619d(2): jz 0x14(%rip)
619f(3): mov %r12,%rdx
61a2(3): mov %rbp,%rsi
61a5(3): mov %r13,%rdi
61a8(5): call 0xffffb5d8(%rip)
61ad(2): test %eax,%eax
61af(2): jnz 0xffffffe1(%rip)
61b1(1): pop %rbx
61b2(3): mov %r14,%rax
61b5(1): pop %rbp
61b6(2): pop %r12
61b8(2): pop %r13
61ba(2): pop %r14
61bc(1): ret near (%rsp)

"close_stream" :
61c0(2): push %r12
61c2(1): push %rbp
61c3(3): mov %rdi,%rbp
61c6(1): push %rbx
61c7(5): call 0xffffb469(%rip)
61cc(3): mov 0x0(%rbp),%ebx
61cf(3): mov %rbp,%rdi
61d2(3): mov %rax,%r12
61d5(5): call 0xfffffaab(%rip)
61da(3): and $0x20,%ebx
61dd(2): test %ebx,%ebx
61df(2): jnz 0x19(%rip)
61e1(2): test %eax,%eax
61e3(2): jz 0xc(%rip)
61e5(3): test %r12,%r12
61e8(5): mov $0xffffffff,%eax
61ed(2): jz 0x3b(%rip)
61ef(1): pop %rbx
61f0(1): pop %rbp
61f1(2): pop %r12
61f3(1): ret near (%rsp)
61f4(4): nop 0x0(%rax)
61f8(2): test %eax,%eax
61fa(2): jnz 0x1e(%rip)
61fc(5): call 0xffffb404(%rip)
6201(6): mov $0x0,(%rax)
6207(5): mov $0xffffffff,%eax
620c(1): pop %rbx
620d(1): pop %rbp
620e(2): pop %r12
6210(1): ret near (%rsp)
6211(7): nop 0x0(%rax)
6218(1): pop %rbx
6219(5): mov $0xffffffff,%eax
621e(1): pop %rbp
621f(2): pop %r12
6221(1): ret near (%rsp)
6222(6): nop 0x0(%rax,%rax,1)
6228(5): call 0xffffb3d8(%rip)
622d(3): cmp $0x9,(%rax)
6230(1): pop %rbx
6231(1): pop %rbp
6232(2): pop %r12
6234(3): setnz %al
6237(3): movzx %al,%eax
623a(2): neg %eax
623c(1): ret near (%rsp)

"hard_locale" :
6240(4): sub $0x8,%rsp
6244(2): xor %esi,%esi
6246(5): call 0xffffb5ea(%rip)
624b(3): mov %rax,%rdx
624e(5): mov $0x1,%eax
6253(3): test %rdx,%rdx
6256(2): jz 0x1f(%rip)
6258(7): lea 0xf26(%rip),%rdi
625f(5): mov $0x2,%ecx
6264(3): mov %rdx,%rsi
6267(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6269(3): setnbe %cl
626c(3): sbb $0x0,%cl
626f(2): xor %eax,%eax
6271(2): test %cl,%cl
6273(2): jnz 0xd(%rip)
6275(4): add $0x8,%rsp
6279(1): ret near (%rsp)
627a(6): nop 0x0(%rax,%rax,1)
6280(7): lea 0xf00(%rip),%rdi
6287(5): mov $0x6,%ecx
628c(3): mov %rdx,%rsi
628f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6291(3): setnbe %al
6294(2): sbb $0x0,%al
6296(2): test %al,%al
6298(3): setnz %al
629b(4): add $0x8,%rsp
629f(1): ret near (%rsp)

"locale_charset" :
62a0(4): sub $0x8,%rsp
62a4(5): mov $0xe,%edi
62a9(5): call 0xffffb557(%rip)
62ae(3): test %rax,%rax
62b1(2): jz 0x1f(%rip)
62b3(3): cmp $0x0,(%rax)
62b6(7): lea 0xed0(%rip),%rdx
62bd(4): cmove %rdx,%rax
62c1(4): add $0x8,%rsp
62c5(1): ret near (%rsp)
62c6(a): nop 0x0(%rax,%rax,1)
62d0(7): lea 0xeb6(%rip),%rax
62d7(4): add $0x8,%rsp
62db(1): ret near (%rsp)

"__libc_csu_init" :
62e0(2): push %r15
62e2(2): push %r14
62e4(3): mov %rdx,%r15
62e7(2): push %r13
62e9(2): push %r12
62eb(7): lea 0x20281e(%rip),%r12
62f2(1): push %rbp
62f3(7): lea 0x20281e(%rip),%rbp
62fa(1): push %rbx
62fb(3): mov %edi,%r13d
62fe(3): mov %rsi,%r14
6301(3): sub %r12,%rbp
6304(4): sub $0x8,%rsp
6308(4): sar $0x3,%rbp
630c(5): call 0xffffb28c(%rip)
6311(3): test %rbp,%rbp
6314(2): jz 0x22(%rip)
6316(2): xor %ebx,%ebx
6318(8): nop 0x0(%rax,%rax,1)
6320(3): mov %r15,%rdx
6323(3): mov %r14,%rsi
6326(3): mov %r13d,%edi
6329(4): call 0x0(%r12,%rbx,8)
632d(4): add $0x1,%rbx
6331(3): cmp %rbx,%rbp
6334(2): jnz 0xffffffec(%rip)
6336(4): add $0x8,%rsp
633a(1): pop %rbx
633b(1): pop %rbp
633c(2): pop %r12
633e(2): pop %r13
6340(2): pop %r14
6342(2): pop %r15
6344(1): ret near (%rsp)

"atexit" :
6360(7): mov 0x202ca1(%rip),%rdx
6367(2): xor %esi,%esi
6369(5): jmp 0xffffb547(%rip)

"_fini" :
6370(4): sub $0x8,%rsp
6374(4): add $0x8,%rsp
6378(1): ret near (%rsp)

