
"free@plt" :
12c0(6): jmp 0x205bba(%rip)
12c6(5): push $0x0

"abort@plt" :
12d0(6): jmp 0x205bb2(%rip)
12d6(5): push $0x1

"__errno_location@plt" :
12e0(6): jmp 0x205baa(%rip)
12e6(5): push $0x2

"strncmp@plt" :
12f0(6): jmp 0x205ba2(%rip)
12f6(5): push $0x3

"_exit@plt" :
1300(6): jmp 0x205b9a(%rip)
1306(5): push $0x4

"__fpending@plt" :
1310(6): jmp 0x205b92(%rip)
1316(5): push $0x5

"textdomain@plt" :
1320(6): jmp 0x205b8a(%rip)
1326(5): push $0x6

"fclose@plt" :
1330(6): jmp 0x205b82(%rip)
1336(5): push $0x7

"bindtextdomain@plt" :
1340(6): jmp 0x205b7a(%rip)
1346(5): push $0x8

"dcgettext@plt" :
1350(6): jmp 0x205b72(%rip)
1356(5): push $0x9

"__ctype_get_mb_cur_max@plt" :
1360(6): jmp 0x205b6a(%rip)
1366(5): push $0xa

"strlen@plt" :
1370(6): jmp 0x205b62(%rip)
1376(5): push $0xb

"__stack_chk_fail@plt" :
1380(6): jmp 0x205b5a(%rip)
1386(5): push $0xc

"getopt_long@plt" :
1390(6): jmp 0x205b52(%rip)
1396(5): push $0xd

"mbrtowc@plt" :
13a0(6): jmp 0x205b4a(%rip)
13a6(5): push $0xe

"strrchr@plt" :
13b0(6): jmp 0x205b42(%rip)
13b6(5): push $0xf

"lseek@plt" :
13c0(6): jmp 0x205b3a(%rip)
13c6(5): push $0x10

"memset@plt" :
13d0(6): jmp 0x205b32(%rip)
13d6(5): push $0x11

"memcmp@plt" :
13e0(6): jmp 0x205b2a(%rip)
13e6(5): push $0x12

"fputs_unlocked@plt" :
13f0(6): jmp 0x205b22(%rip)
13f6(5): push $0x13

"calloc@plt" :
1400(6): jmp 0x205b1a(%rip)
1406(5): push $0x14

"mkfifo@plt" :
1410(6): jmp 0x205b12(%rip)
1416(5): push $0x15

"umask@plt" :
1420(6): jmp 0x205b0a(%rip)
1426(5): push $0x16

"memcpy@plt" :
1430(6): jmp 0x205b02(%rip)
1436(5): push $0x17

"fileno@plt" :
1440(6): jmp 0x205afa(%rip)
1446(5): push $0x18

"__xstat@plt" :
1450(6): jmp 0x205af2(%rip)
1456(5): push $0x19

"malloc@plt" :
1460(6): jmp 0x205aea(%rip)
1466(5): push $0x1a

"fflush@plt" :
1470(6): jmp 0x205ae2(%rip)
1476(5): push $0x1b

"nl_langinfo@plt" :
1480(6): jmp 0x205ada(%rip)
1486(5): push $0x1c

"__freading@plt" :
1490(6): jmp 0x205ad2(%rip)
1496(5): push $0x1d

"realloc@plt" :
14a0(6): jmp 0x205aca(%rip)
14a6(5): push $0x1e

"setlocale@plt" :
14b0(6): jmp 0x205ac2(%rip)
14b6(5): push $0x1f

"__printf_chk@plt" :
14c0(6): jmp 0x205aba(%rip)
14c6(5): push $0x20

"chmod@plt" :
14d0(6): jmp 0x205ab2(%rip)
14d6(5): push $0x21

"error@plt" :
14e0(6): jmp 0x205aaa(%rip)
14e6(5): push $0x22

"fseeko@plt" :
14f0(6): jmp 0x205aa2(%rip)
14f6(5): push $0x23

"__cxa_atexit@plt" :
1500(6): jmp 0x205a9a(%rip)
1506(5): push $0x24

"exit@plt" :
1510(6): jmp 0x205a92(%rip)
1516(5): push $0x25

"fwrite@plt" :
1520(6): jmp 0x205a8a(%rip)
1526(5): push $0x26

"__fprintf_chk@plt" :
1530(6): jmp 0x205a82(%rip)
1536(5): push $0x27

"mbsinit@plt" :
1540(6): jmp 0x205a7a(%rip)
1546(5): push $0x28

"iswprint@plt" :
1550(6): jmp 0x205a72(%rip)
1556(5): push $0x29

"__ctype_b_loc@plt" :
1560(6): jmp 0x205a6a(%rip)
1566(5): push $0x2a

".plt.got" :
1570(6): jmp 0x205a82(%rip)
1576(2): nop 

"_init" :
1298(4): sub $0x8,%rsp
129c(7): mov 0x205d45(%rip),%rax
12a3(3): test %rax,%rax
12a6(2): jz 0x4(%rip)
12a8(2): call %rax
12aa(4): add $0x8,%rsp
12ae(1): ret near (%rsp)

"main" :
1580(2): push %r15
1582(2): push %r14
1584(2): push %r13
1586(2): push %r12
1588(7): lea 0x2055f1(%rip),%r13
158f(1): push %rbp
1590(1): push %rbx
1591(2): mov %edi,%ebp
1593(3): mov %rsi,%rbx
1596(3): xor %r12d,%r12d
1599(4): sub $0x8,%rsp
159d(3): mov (%rsi),%rdi
15a0(5): call 0xe20(%rip)
15a5(7): lea 0x4235(%rip),%rsi
15ac(5): mov $0x6,%edi
15b1(5): call 0xfffffeff(%rip)
15b6(7): lea 0x3811(%rip),%rsi
15bd(7): lea 0x37e1(%rip),%rdi
15c4(5): call 0xfffffd7c(%rip)
15c9(7): lea 0x37d5(%rip),%rdi
15d0(5): call 0xfffffd50(%rip)
15d5(7): lea 0x784(%rip),%rdi
15dc(5): call 0x3714(%rip)
15e1(7): lea 0x380e(%rip),%rdx
15e8(3): xor %r8d,%r8d
15eb(3): mov %r13,%rcx
15ee(3): mov %rbx,%rsi
15f1(2): mov %ebp,%edi
15f3(5): call 0xfffffd9d(%rip)
15f8(3): cmp $0xff,%eax
15fb(6): jz 0xa9(%rip)
1601(5): cmp $0xffffff7e,%eax
1606(6): jz 0x213(%rip)
160c(2): jle 0x1c(%rip)
160e(3): cmp $0x5a,%eax
1611(2): jz 0x5f(%rip)
1613(3): cmp $0x6d,%eax
1616(6): jnz 0x1f9(%rip)
161c(7): mov 0x205a75(%rip),%r12
1623(2): jmp 0xffffffbe(%rip)
1625(3): nop (%rax)
1628(5): cmp $0xffffff7d,%eax
162d(6): jnz 0x1e2(%rip)
1633(7): mov 0x205a4e(%rip),%rdi
163a(7): mov 0x2059cf(%rip),%rcx
1641(7): lea 0x379e(%rip),%r8
1648(7): lea 0x3752(%rip),%rdx
164f(7): lea 0x36ce(%rip),%rsi
1656(3): xor %r9d,%r9d
1659(2): xor %eax,%eax
165b(5): call 0x2f55(%rip)
1660(2): xor %edi,%edi
1662(5): call 0xfffffeae(%rip)
1667(9): nop 0x0(%rax,%rax,1)
1670(8): cmp $0x0,0x205a20(%rip)
1678(6): jz 0xffffff69(%rip)
167e(7): lea 0x3adb(%rip),%rsi
1685(2): xor %edi,%edi
1687(5): mov $0x5,%edx
168c(5): call 0xfffffcc4(%rip)
1691(2): xor %esi,%esi
1693(3): mov %rax,%rdx
1696(2): xor %edi,%edi
1698(2): xor %eax,%eax
169a(5): call 0xfffffe46(%rip)
169f(5): jmp 0xffffff42(%rip)
16a4(6): cmp %ebp,0x2059e6(%rip)
16aa(6): jz 0x144(%rip)
16b0(3): test %r12,%r12
16b3(6): jz 0x130(%rip)
16b9(3): mov %r12,%rdi
16bc(5): call 0x754(%rip)
16c1(3): test %rax,%rax
16c4(3): mov %rax,%r14
16c7(6): jz 0x17d(%rip)
16cd(2): xor %edi,%edi
16cf(5): call 0xfffffd51(%rip)
16d4(3): mov %eax,%r13d
16d7(2): mov %eax,%edi
16d9(5): call 0xfffffd47(%rip)
16de(3): xor %r8d,%r8d
16e1(3): mov %r13d,%edx
16e4(2): xor %esi,%esi
16e6(3): mov %r14,%rcx
16e9(5): mov $0x1b6,%edi
16ee(5): call 0xb62(%rip)
16f3(3): mov %r14,%rdi
16f6(3): mov %eax,%r13d
16f9(5): call 0xfffffbc7(%rip)
16fe(7): test $0xfffffe00,%r13d
1705(6): jnz 0x11b(%rip)
170b(6): mov 0x20597f(%rip),%eax
1711(3): xor %r14d,%r14d
1714(2): cmp %eax,%ebp
1716(2): jnle 0x3a(%rip)
1718(5): jmp 0x96(%rip)
171d(3): test %r12,%r12
1720(2): jz 0x1d(%rip)
1722(7): movsxd 0x205967(%rip),%rax
1729(3): mov %r13d,%esi
172c(4): mov 0x0(%rbx,%rax,8),%rdi
1730(5): call 0xfffffda0(%rip)
1735(2): test %eax,%eax
1737(6): jnz 0x86(%rip)
173d(6): mov 0x20594d(%rip),%eax
1743(3): add $0x1,%eax
1746(2): cmp %ebp,%eax
1748(6): mov %eax,0x205942(%rip)
174e(2): jnl 0x60(%rip)
1750(2): cwde 
1752(3): mov %r13d,%esi
1755(4): mov 0x0(%rbx,%rax,8),%rdi
1759(5): call 0xfffffcb7(%rip)
175e(2): test %eax,%eax
1760(2): jz 0xffffffbd(%rip)
1762(7): movsxd 0x205927(%rip),%rax
1769(5): mov $0x4,%edi
176e(4): mov 0x0(%rbx,%rax,8),%rsi
1772(5): call 0x268e(%rip)
1777(7): lea 0x3699(%rip),%rsi
177e(3): mov %rax,%r15
1781(5): mov $0x5,%edx
1786(2): xor %edi,%edi
1788(5): call 0xfffffbc8(%rip)
178d(3): mov %rax,%r14
1790(5): call 0xfffffb50(%rip)
1795(2): mov (%rax),%esi
1797(3): mov %r14,%rdx
179a(3): mov %r15,%rcx
179d(2): xor %edi,%edi
179f(2): xor %eax,%eax
17a1(6): mov $0x1,%r14d
17a7(5): call 0xfffffd39(%rip)
17ac(2): jmp 0xffffff91(%rip)
17ae(1): pop %rdx
17af(3): mov %r14d,%eax
17b2(1): pop %rbx
17b3(1): pop %rbp
17b4(2): pop %r12
17b6(2): pop %r13
17b8(2): pop %r14
17ba(2): pop %r15
17bc(1): ret near (%rsp)
17bd(7): movsxd 0x2058cc(%rip),%rax
17c4(5): mov $0x4,%edi
17c9(4): mov 0x0(%rbx,%rax,8),%rsi
17cd(5): call 0x2633(%rip)
17d2(5): mov $0x5,%edx
17d7(3): mov %rax,%r15
17da(7): lea 0x364c(%rip),%rsi
17e1(2): jmp 0xffffffa5(%rip)
17e3(6): mov $0x1b6,%r13d
17e9(5): jmp 0xffffff22(%rip)
17ee(7): lea 0x3605(%rip),%rsi
17f5(5): mov $0x5,%edx
17fa(2): xor %edi,%edi
17fc(5): call 0xfffffb54(%rip)
1801(2): xor %esi,%esi
1803(3): mov %rax,%rdx
1806(2): xor %edi,%edi
1808(2): xor %eax,%eax
180a(5): call 0xfffffcd6(%rip)
180f(5): mov $0x1,%edi
1814(5): call 0x16c(%rip)
1819(2): xor %edi,%edi
181b(5): call 0x165(%rip)
1820(7): lea 0x3989(%rip),%rsi
1827(5): mov $0x5,%edx
182c(2): xor %edi,%edi
182e(5): call 0xfffffb22(%rip)
1833(2): xor %esi,%esi
1835(3): mov %rax,%rdx
1838(5): mov $0x1,%edi
183d(2): xor %eax,%eax
183f(5): call 0xfffffca1(%rip)
1844(7): lea 0x35bf(%rip),%rsi
184b(5): mov $0x5,%edx
1850(2): xor %edi,%edi
1852(5): call 0xfffffafe(%rip)
1857(2): xor %esi,%esi
1859(3): mov %rax,%rdx
185c(5): mov $0x1,%edi
1861(2): xor %eax,%eax
1863(5): call 0xfffffc7d(%rip)
1868(8): nop 0x0(%rax,%rax,1)
1870(2): xor %ebp,%ebp
1872(3): mov %rdx,%r9
1875(1): pop %rsi
1876(3): mov %rsp,%rdx
1879(4): and $0xfffffff0,%rsp
187d(1): push %rax
187e(1): push %rsp
187f(7): lea 0x345a(%rip),%r8
1886(7): lea 0x33e3(%rip),%rcx
188d(7): lea 0xfffffcec(%rip),%rdi
1894(6): call 0x205746(%rip)
189a(1): hlt 

"_start" :
1870(2): xor %ebp,%ebp
1872(3): mov %rdx,%r9
1875(1): pop %rsi
1876(3): mov %rsp,%rdx
1879(4): and $0xfffffff0,%rsp
187d(1): push %rax
187e(1): push %rsp
187f(7): lea 0x345a(%rip),%r8
1886(7): lea 0x33e3(%rip),%rcx
188d(7): lea 0xfffffcec(%rip),%rdi
1894(6): call 0x205746(%rip)
189a(1): hlt 

"deregister_tm_clones" :
18a0(7): lea 0x2057d9(%rip),%rdi
18a7(1): push %rbp
18a8(7): lea 0x2057d1(%rip),%rax
18af(3): cmp %rdi,%rax
18b2(3): mov %rsp,%rbp
18b5(2): jz 0x1b(%rip)
18b7(7): mov 0x20571a(%rip),%rax
18be(3): test %rax,%rax
18c1(2): jz 0xf(%rip)
18c3(1): pop %rbp
18c4(2): jmp %rax
18c6(a): nop 0x0(%rax,%rax,1)
18d0(1): pop %rbp
18d1(1): ret near (%rsp)

"register_tm_clones" :
18e0(7): lea 0x205799(%rip),%rdi
18e7(7): lea 0x205792(%rip),%rsi
18ee(1): push %rbp
18ef(3): sub %rdi,%rsi
18f2(3): mov %rsp,%rbp
18f5(4): sar $0x3,%rsi
18f9(3): mov %rsi,%rax
18fc(4): shr $0x3f,%rax
1900(3): add %rax,%rsi
1903(3): sar $0x1,%rsi
1906(2): jz 0x1a(%rip)
1908(7): mov 0x2056e1(%rip),%rax
190f(3): test %rax,%rax
1912(2): jz 0xe(%rip)
1914(1): pop %rbp
1915(2): jmp %rax
1917(9): nop 0x0(%rax,%rax,1)
1920(1): pop %rbp
1921(1): ret near (%rsp)

"__do_global_dtors_aux" :
1930(7): cmp $0x0,0x205791(%rip)
1937(2): jnz 0x31(%rip)
1939(8): cmp $0x0,0x2056b7(%rip)
1941(1): push %rbp
1942(3): mov %rsp,%rbp
1945(2): jz 0xe(%rip)
1947(7): mov 0x2056ba(%rip),%rdi
194e(5): call 0xfffffc22(%rip)
1953(5): call 0xffffff4d(%rip)
1958(7): mov $0x1,0x205769(%rip)
195f(1): pop %rbp
1960(1): ret near (%rsp)
1961(7): nop 0x0(%rax)
1968(2): REP ret near (%rsp)

"frame_dummy" :
1970(1): push %rbp
1971(3): mov %rsp,%rbp
1974(1): pop %rbp
1975(5): jmp 0xffffff6b(%rip)

"usage" :
1980(2): push %r13
1982(2): push %r12
1984(5): mov $0x5,%edx
1989(1): push %rbp
198a(1): push %rbx
198b(2): mov %edi,%ebp
198d(7): sub $0x88,%rsp
1994(7): mov 0x205745(%rip),%rbx
199b(9): mov $0x28,%rax
19a4(5): mov %rax,0x78(%rsp)
19a9(2): xor %eax,%eax
19ab(2): test %edi,%edi
19ad(2): jz 0x30(%rip)
19af(7): lea 0x34aa(%rip),%rsi
19b6(2): xor %edi,%edi
19b8(5): call 0xfffff998(%rip)
19bd(7): mov 0x2056fc(%rip),%rdi
19c4(3): mov %rax,%rdx
19c7(3): mov %rbx,%rcx
19ca(5): mov $0x1,%esi
19cf(2): xor %eax,%eax
19d1(5): call 0xfffffb5f(%rip)
19d6(2): mov %ebp,%edi
19d8(5): call 0xfffffb38(%rip)
19dd(7): lea 0x34a4(%rip),%rsi
19e4(2): xor %edi,%edi
19e6(5): call 0xfffff96a(%rip)
19eb(3): mov %rbx,%rdx
19ee(3): mov %rax,%rsi
19f1(5): mov $0x1,%edi
19f6(2): xor %eax,%eax
19f8(5): call 0xfffffac8(%rip)
19fd(7): mov 0x205684(%rip),%rbx
1a04(7): lea 0x349d(%rip),%rsi
1a0b(5): mov $0x5,%edx
1a10(2): xor %edi,%edi
1a12(5): call 0xfffff93e(%rip)
1a17(3): mov %rbx,%rsi
1a1a(3): mov %rax,%rdi
1a1d(5): call 0xfffff9d3(%rip)
1a22(7): mov 0x20565f(%rip),%rbx
1a29(7): lea 0x34b0(%rip),%rsi
1a30(5): mov $0x5,%edx
1a35(2): xor %edi,%edi
1a37(5): call 0xfffff919(%rip)
1a3c(3): mov %rbx,%rsi
1a3f(3): mov %rax,%rdi
1a42(5): call 0xfffff9ae(%rip)
1a47(7): mov 0x20563a(%rip),%rbx
1a4e(7): lea 0x34db(%rip),%rsi
1a55(5): mov $0x5,%edx
1a5a(2): xor %edi,%edi
1a5c(5): call 0xfffff8f4(%rip)
1a61(3): mov %rbx,%rsi
1a64(3): mov %rax,%rdi
1a67(5): call 0xfffff989(%rip)
1a6c(7): mov 0x205615(%rip),%rbx
1a73(7): lea 0x3506(%rip),%rsi
1a7a(5): mov $0x5,%edx
1a7f(2): xor %edi,%edi
1a81(5): call 0xfffff8cf(%rip)
1a86(3): mov %rbx,%rsi
1a89(3): mov %rax,%rdi
1a8c(5): call 0xfffff964(%rip)
1a91(7): mov 0x2055f0(%rip),%rbx
1a98(7): lea 0x35b1(%rip),%rsi
1a9f(5): mov $0x5,%edx
1aa4(2): xor %edi,%edi
1aa6(5): call 0xfffff8aa(%rip)
1aab(3): mov %rbx,%rsi
1aae(3): mov %rax,%rdi
1ab1(5): call 0xfffff93f(%rip)
1ab6(7): mov 0x2055cb(%rip),%rbx
1abd(7): lea 0x35bc(%rip),%rsi
1ac4(5): mov $0x5,%edx
1ac9(2): xor %edi,%edi
1acb(5): call 0xfffff885(%rip)
1ad0(3): mov %rbx,%rsi
1ad3(3): mov %rax,%rdi
1ad6(7): lea 0x3247(%rip),%rbx
1add(5): call 0xfffff913(%rip)
1ae2(7): lea 0x3242(%rip),%rax
1ae9(7): lea 0x327c(%rip),%rcx
1af0(9): mov $0x0,0x60(%rsp)
1af9(9): mov $0x0,0x68(%rsp)
1b02(3): mov %rsp,%rdx
1b05(4): mov %rax,(%rsp)
1b09(7): lea 0x321d(%rip),%rax
1b10(5): mov %rcx,0x30(%rsp)
1b15(7): lea 0x325a(%rip),%rcx
1b1c(5): mov %rax,0x8(%rsp)
1b21(7): lea 0x327d(%rip),%rax
1b28(5): mov %rcx,0x40(%rsp)
1b2d(7): lea 0x324c(%rip),%rcx
1b34(5): mov %rax,0x10(%rsp)
1b39(7): lea 0x31fd(%rip),%rax
1b40(5): mov %rcx,0x50(%rsp)
1b45(5): mov %rax,0x18(%rsp)
1b4a(7): lea 0x3202(%rip),%rax
1b51(5): mov %rax,0x20(%rsp)
1b56(7): lea 0x3200(%rip),%rax
1b5d(5): mov %rax,0x28(%rsp)
1b62(5): mov %rax,0x38(%rsp)
1b67(5): mov %rax,0x48(%rsp)
1b6c(5): mov %rax,0x58(%rsp)
1b71(7): nop 0x0(%rax)
1b78(4): add $0x10,%rdx
1b7c(3): mov (%rdx),%rdi
1b7f(3): test %rdi,%rdi
1b82(2): jz 0x15(%rip)
1b84(5): mov $0x7,%ecx
1b89(3): mov %rbx,%rsi
1b8c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1b8e(3): setnbe %al
1b91(2): sbb $0x0,%al
1b93(2): test %al,%al
1b95(2): jnz 0xffffffe3(%rip)
1b97(4): mov 0x8(%rdx),%r12
1b9b(2): xor %edi,%edi
1b9d(5): mov $0x5,%edx
1ba2(7): lea 0x31e1(%rip),%rsi
1ba9(3): test %r12,%r12
1bac(6): jz 0xc7(%rip)
1bb2(5): call 0xfffff79e(%rip)
1bb7(7): lea 0x34fa(%rip),%rcx
1bbe(7): lea 0x31dc(%rip),%rdx
1bc5(3): mov %rax,%rsi
1bc8(5): mov $0x1,%edi
1bcd(2): xor %eax,%eax
1bcf(5): call 0xfffff8f1(%rip)
1bd4(2): xor %esi,%esi
1bd6(5): mov $0x5,%edi
1bdb(5): call 0xfffff8d5(%rip)
1be0(3): test %rax,%rax
1be3(2): jz 0x1e(%rip)
1be5(7): lea 0x31c3(%rip),%rsi
1bec(5): mov $0x3,%edx
1bf1(3): mov %rax,%rdi
1bf4(5): call 0xfffff6fc(%rip)
1bf9(2): test %eax,%eax
1bfb(6): jnz 0x10d(%rip)
1c01(7): lea 0x31ab(%rip),%rsi
1c08(2): xor %edi,%edi
1c0a(5): mov $0x5,%edx
1c0f(5): call 0xfffff741(%rip)
1c14(7): lea 0x3109(%rip),%rcx
1c1b(7): lea 0x3496(%rip),%rdx
1c22(3): mov %rax,%rsi
1c25(5): mov $0x1,%edi
1c2a(2): xor %eax,%eax
1c2c(5): call 0xfffff894(%rip)
1c31(3): cmp %rbx,%r12
1c34(7): lea 0x310c(%rip),%rcx
1c3b(7): lea 0x3b9f(%rip),%rbx
1c42(4): cmove %rcx,%rbx
1c46(7): lea 0x34db(%rip),%rsi
1c4d(2): xor %edi,%edi
1c4f(5): mov $0x5,%edx
1c54(5): call 0xfffff6fc(%rip)
1c59(3): mov %rbx,%rcx
1c5c(3): mov %rax,%rsi
1c5f(3): mov %r12,%rdx
1c62(5): mov $0x1,%edi
1c67(2): xor %eax,%eax
1c69(5): call 0xfffff857(%rip)
1c6e(5): jmp 0xfffffd68(%rip)
1c73(5): call 0xfffff6dd(%rip)
1c78(7): lea 0x3439(%rip),%rcx
1c7f(7): lea 0x311b(%rip),%rdx
1c86(3): mov %rax,%rsi
1c89(5): mov $0x1,%edi
1c8e(2): xor %eax,%eax
1c90(5): call 0xfffff830(%rip)
1c95(2): xor %esi,%esi
1c97(5): mov $0x5,%edi
1c9c(5): call 0xfffff814(%rip)
1ca1(3): test %rax,%rax
1ca4(2): jz 0x1a(%rip)
1ca6(7): lea 0x3102(%rip),%rsi
1cad(5): mov $0x3,%edx
1cb2(3): mov %rax,%rdi
1cb5(5): call 0xfffff63b(%rip)
1cba(2): test %eax,%eax
1cbc(2): jnz 0x45(%rip)
1cbe(7): lea 0x30ee(%rip),%rsi
1cc5(5): mov $0x5,%edx
1cca(2): xor %edi,%edi
1ccc(7): lea 0x3051(%rip),%r12
1cd3(7): lea 0x306d(%rip),%rbx
1cda(5): call 0xfffff676(%rip)
1cdf(7): lea 0x303e(%rip),%rcx
1ce6(7): lea 0x33cb(%rip),%rdx
1ced(3): mov %rax,%rsi
1cf0(5): mov $0x1,%edi
1cf5(2): xor %eax,%eax
1cf7(5): call 0xfffff7c9(%rip)
1cfc(5): jmp 0xffffff4a(%rip)
1d01(7): lea 0x301c(%rip),%r12
1d08(7): mov 0x205379(%rip),%r13
1d0f(7): lea 0x33ca(%rip),%rsi
1d16(2): xor %edi,%edi
1d18(5): mov $0x5,%edx
1d1d(5): call 0xfffff633(%rip)
1d22(3): mov %r13,%rsi
1d25(3): mov %rax,%rdi
1d28(5): call 0xfffff6c8(%rip)
1d2d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1d40(7): mov %rdi,0x205391(%rip)
1d47(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1d50(7): mov %dil,0x205379(%rip)
1d57(1): ret near (%rsp)

"close_stdout" :
1d60(1): push %rbp
1d61(1): push %rbx
1d62(4): sub $0x8,%rsp
1d66(7): mov 0x20531b(%rip),%rdi
1d6d(5): call 0x2cc3(%rip)
1d72(2): test %eax,%eax
1d74(2): jz 0x18(%rip)
1d76(5): call 0xfffff56a(%rip)
1d7b(7): cmp $0x0,0x20534e(%rip)
1d82(3): mov %rax,%rbx
1d85(2): jz 0x1e(%rip)
1d87(3): cmp $0x20,(%rax)
1d8a(2): jnz 0x19(%rip)
1d8c(7): mov 0x20532d(%rip),%rdi
1d93(5): call 0x2c9d(%rip)
1d98(2): test %eax,%eax
1d9a(2): jnz 0x48(%rip)
1d9c(4): add $0x8,%rsp
1da0(1): pop %rbx
1da1(1): pop %rbp
1da2(1): ret near (%rsp)
1da3(7): lea 0x3437(%rip),%rsi
1daa(2): xor %edi,%edi
1dac(5): mov $0x5,%edx
1db1(5): call 0xfffff59f(%rip)
1db6(7): mov 0x20531b(%rip),%rdi
1dbd(3): mov %rax,%rbp
1dc0(3): test %rdi,%rdi
1dc3(2): jz 0x2a(%rip)
1dc5(5): call 0x210b(%rip)
1dca(2): mov (%rbx),%esi
1dcc(7): lea 0x341a(%rip),%rdx
1dd3(3): mov %rax,%rcx
1dd6(3): mov %rbp,%r8
1dd9(2): xor %edi,%edi
1ddb(2): xor %eax,%eax
1ddd(5): call 0xfffff703(%rip)
1de2(6): mov 0x205230(%rip),%edi
1de8(5): call 0xfffff518(%rip)
1ded(2): mov (%rbx),%esi
1def(7): lea 0x33fb(%rip),%rdx
1df6(3): mov %rax,%rcx
1df9(2): xor %edi,%edi
1dfb(2): xor %eax,%eax
1dfd(5): call 0xfffff6e3(%rip)
1e02(2): jmp 0xffffffe0(%rip)

"mode_compile" :
1e10(1): push %rbp
1e11(1): push %rbx
1e12(3): mov %rdi,%rbx
1e15(4): sub $0x8,%rsp
1e19(3): movsx (%rdi),%eax
1e1c(3): lea 0xffffffd0(%rax),%edx
1e1f(3): cmp $0x7,%dl
1e22(6): jbe 0xb6(%rip)
1e28(2): test %al,%al
1e2a(3): mov %rdi,%rcx
1e2d(5): mov $0x1,%edi
1e32(2): jz 0x29(%rip)
1e34(4): nop 0x0(%rax)
1e38(2): mov %eax,%edx
1e3a(3): and $0xef,%edx
1e3d(3): cmp $0x2d,%dl
1e40(3): setz %dl
1e43(2): cmp $0x2b,%al
1e45(3): setz %al
1e48(4): add $0x1,%rcx
1e4c(2): or %edx,%eax
1e4e(3): movzx %al,%eax
1e51(3): add %rax,%rdi
1e54(3): movzx (%rcx),%eax
1e57(2): test %al,%al
1e59(2): jnz 0xffffffdf(%rip)
1e5b(5): mov $0x10,%edx
1e60(2): xor %ecx,%ecx
1e62(3): mov %rdx,%rax
1e65(3): mul %rax,%rdi,%rdx
1e68(6): jo 0x317(%rip)
1e6e(3): test %rax,%rax
1e71(6): js 0x318(%rip)
1e77(3): test %rcx,%rcx
1e7a(6): jnz 0x30f(%rip)
1e80(4): shl/sal $0x4,%rdi
1e84(7): lea 0x3369(%rip),%rbp
1e8b(5): call 0x2885(%rip)
1e90(2): xor %esi,%esi
1e92(3): xor %r11d,%r11d
1e95(4): movzx (%rbx),%r9d
1e99(4): cmp $0x61,%r9b
1e9d(6): jz 0x253(%rip)
1ea3(2): jle 0x6d(%rip)
1ea5(4): cmp $0x6f,%r9b
1ea9(6): jz 0x277(%rip)
1eaf(4): cmp $0x75,%r9b
1eb3(6): jz 0x25d(%rip)
1eb9(4): cmp $0x67,%r9b
1ebd(6): jz 0x243(%rip)
1ec3(3): mov %rax,%rdi
1ec6(5): call 0xfffff3fa(%rip)
1ecb(2): xor %eax,%eax
1ecd(4): add $0x8,%rsp
1ed1(1): pop %rbx
1ed2(1): pop %rbp
1ed3(1): ret near (%rsp)
1ed4(4): nop 0x0(%rax)
1ed8(3): mov %rdi,%rdx
1edb(2): xor %ebp,%ebp
1edd(2): jmp 0x12(%rip)
1edf(1): nop 
1ee0(3): movsx (%rdx),%eax
1ee3(3): lea 0xffffffd0(%rax),%ecx
1ee6(3): cmp $0x7,%cl
1ee9(6): jnbe 0x247(%rip)
1eef(4): lea 0xffffffd0(%rax,%rbp,8),%ebp
1ef3(4): add $0x1,%rdx
1ef7(6): cmp $0xfff,%ebp
1efd(2): jbe 0xffffffe3(%rip)
1eff(4): add $0x8,%rsp
1f03(2): xor %eax,%eax
1f05(1): pop %rbx
1f06(1): pop %rbp
1f07(1): ret near (%rsp)
1f08(8): nop 0x0(%rax,%rax,1)
1f10(4): cmp $0x2d,%r9b
1f14(2): jz 0xe(%rip)
1f16(4): cmp $0x3d,%r9b
1f1a(2): jz 0x8(%rip)
1f1c(4): cmp $0x2b,%r9b
1f20(2): jnz 0xffffffa3(%rip)
1f22(4): lea 0x1(%rsi),%rdi
1f26(4): shl/sal $0x4,%rsi
1f2a(3): add %rax,%rsi
1f2d(2): jmp 0x67(%rip)
1f2f(1): nop 
1f30(3): cmp $0x6f,%dl
1f33(4): lea 0x2(%rbx),%r8
1f37(6): jz 0x199(%rip)
1f3d(3): cmp $0x75,%dl
1f40(6): mov $0x1c0,%r10d
1f46(6): jnz 0xda(%rip)
1f4c(3): mov %r9b,(%rsi)
1f4f(4): mov $0x3,0x1(%rsi)
1f53(5): movzx 0x2(%rbx),%r9d
1f58(4): mov %r11d,0x4(%rsi)
1f5c(3): mov %r8,%rbx
1f5f(4): mov %r10d,0x8(%rsi)
1f63(3): mov %r10d,%edx
1f66(3): and %r11d,%edx
1f69(3): test %r11d,%r11d
1f6c(4): cmovne %edx,%r10d
1f70(3): mov %r9d,%edx
1f73(4): mov %r10d,0xc(%rsi)
1f77(4): add $0x10,%rsi
1f7b(3): and $0xef,%edx
1f7e(4): lea 0x1(%rdi),%rcx
1f82(3): cmp $0x2d,%dl
1f85(2): jz 0xc(%rip)
1f87(4): cmp $0x2b,%r9b
1f8b(6): jnz 0x205(%rip)
1f91(3): mov %rcx,%rdi
1f94(4): movsx 0x1(%rbx),%edx
1f98(4): lea 0x1(%rbx),%rcx
1f9c(3): cmp $0x67,%dl
1f9f(6): jz 0x141(%rip)
1fa5(2): jnle 0xffffff8b(%rip)
1fa7(4): lea 0xffffffd0(%rdx),%r8d
1fab(4): cmp $0x7,%r8b
1faf(2): jnbe 0x71(%rip)
1fb1(3): xor %r8d,%r8d
1fb4(4): nop 0x0(%rax)
1fb8(5): lea 0xffffffd0(%rdx,%r8,8),%r8d
1fbd(4): add $0x1,%rcx
1fc1(7): cmp $0xfff,%r8d
1fc8(6): jnbe 0xfffffefb(%rip)
1fce(3): movsx (%rcx),%edx
1fd1(4): lea 0xffffffd0(%rdx),%r10d
1fd5(4): cmp $0x7,%r10b
1fd9(2): jbe 0xffffffdf(%rip)
1fdb(3): test %r11d,%r11d
1fde(6): jnz 0xfffffee5(%rip)
1fe4(2): test %dl,%dl
1fe6(2): jz 0xb(%rip)
1fe8(3): cmp $0x2c,%dl
1feb(6): jnz 0xfffffed8(%rip)
1ff1(3): mov %r9b,(%rsi)
1ff4(4): mov $0x1,0x1(%rsi)
1ff8(3): mov %edx,%r9d
1ffb(7): mov $0xfff,0x4(%rsi)
2002(4): mov %r8d,0x8(%rsi)
2006(3): mov %rcx,%rbx
2009(6): mov $0xfff,%r11d
200f(6): mov $0xfff,%r10d
2015(5): jmp 0xffffff5b(%rip)
201a(6): nop 0x0(%rax,%rax,1)
2020(4): lea 0xffffffa8(%rdx),%r8d
2024(3): xor %r10d,%r10d
2027(5): mov $0x1,%ebx
202c(4): cmp $0x20,%r8b
2030(2): jnbe 0x39(%rip)
2032(6): nop 0x0(%rax,%rax,1)
2038(4): movzx %r8b,%r8d
203c(5): movsxd 0x0(%rbp,%r8,4),%r8
2041(3): add %rbp,%r8
2044(3): jmp %r8
2047(9): nop 0x0(%rax,%rax,1)
2050(5): mov $0x2,%ebx
2055(3): nop (%rax)
2058(4): add $0x1,%rcx
205c(3): movzx (%rcx),%edx
205f(4): lea 0xffffffa8(%rdx),%r8d
2063(4): cmp $0x20,%r8b
2067(2): jbe 0xffffffd1(%rip)
2069(3): mov %r9b,(%rsi)
206c(3): mov %bl,0x1(%rsi)
206f(3): mov %edx,%r9d
2072(4): mov %r11d,0x4(%rsi)
2076(4): mov %r10d,0x8(%rsi)
207a(3): mov %rcx,%rbx
207d(5): jmp 0xfffffee6(%rip)
2082(6): nop 0x0(%rax,%rax,1)
2088(4): or $0x49,%r10d
208c(2): jmp 0xffffffcc(%rip)
208e(2): nop 
2090(4): or $0x92,%r10b
2094(2): jmp 0xffffffc4(%rip)
2096(a): nop 0x0(%rax,%rax,1)
20a0(7): or $0x200,%r10d
20a7(2): jmp 0xffffffb1(%rip)
20a9(7): nop 0x0(%rax)
20b0(7): or $0xc00,%r10d
20b7(2): jmp 0xffffffa1(%rip)
20b9(7): nop 0x0(%rax)
20c0(7): or $0x124,%r10d
20c7(2): jmp 0xffffff91(%rip)
20c9(7): nop 0x0(%rax)
20d0(6): mov $0x7,%r10d
20d6(5): jmp 0xfffffe76(%rip)
20db(5): nop 0x0(%rax,%rax,1)
20e0(4): lea 0x2(%rbx),%r8
20e4(6): mov $0x38,%r10d
20ea(5): jmp 0xfffffe62(%rip)
20ef(1): nop 
20f0(6): mov $0xfff,%r11d
20f6(4): add $0x1,%rbx
20fa(5): jmp 0xfffffd9b(%rip)
20ff(1): nop 
2100(7): or $0x438,%r11d
2107(2): jmp 0xffffffef(%rip)
2109(7): nop 0x0(%rax)
2110(7): or $0x9c0,%r11d
2117(2): jmp 0xffffffdf(%rip)
2119(7): nop 0x0(%rax)
2120(7): or $0x207,%r11d
2127(2): jmp 0xffffffcf(%rip)
2129(7): nop 0x0(%rax)
2130(2): test %al,%al
2132(6): jnz 0xfffffdcd(%rip)
2138(3): sub %rbx,%rdx
213b(2): mov %ebp,%ebx
213d(5): mov $0xfff,%eax
2142(6): and $0xc00,%ebx
2148(5): mov $0x20,%edi
214d(6): or $0x3ff,%ebx
2153(4): cmp $0x5,%rdx
2157(3): cmovnl %eax,%ebx
215a(5): call 0x25b6(%rip)
215f(5): mov $0x13d,%edx
2164(7): mov $0xfff,0x4(%rax)
216b(3): mov %ebp,0x8(%rax)
216e(3): mov %dx,(%rax)
2171(3): mov %ebx,0xc(%rax)
2174(4): mov $0x0,0x11(%rax)
2178(4): add $0x8,%rsp
217c(1): pop %rbx
217d(1): pop %rbp
217e(1): ret near (%rsp)
217f(5): mov $0x1,%ecx
2184(5): jmp 0xfffffcea(%rip)
2189(5): call 0x27d7(%rip)
218e(2): nop 
2190(4): cmp $0x2c,%r9b
2194(2): jnz 0xe(%rip)
2196(4): add $0x1,%rbx
219a(3): mov %rdi,%rsi
219d(5): jmp 0xfffffcf5(%rip)
21a2(3): test %r9b,%r9b
21a5(6): jnz 0xfffffd1e(%rip)
21ab(4): shl/sal $0x4,%rdi
21af(5): mov $0x0,0x1(%rax,%rdi,1)
21b4(5): jmp 0xfffffd19(%rip)

"mode_create_from_ref" :
21c0(1): push %rbx
21c1(3): mov %rdi,%rsi
21c4(5): mov $0x1,%edi
21c9(7): sub $0xa0,%rsp
21d0(3): mov %rsp,%rdx
21d3(9): mov $0x28,%rax
21dc(8): mov %rax,0x98(%rsp)
21e4(2): xor %eax,%eax
21e6(5): call 0xfffff26a(%rip)
21eb(2): test %eax,%eax
21ed(2): jnz 0x53(%rip)
21ef(4): mov 0x18(%rsp),%ebx
21f3(5): mov $0x20,%edi
21f8(5): call 0x2518(%rip)
21fd(5): mov $0x13d,%edx
2202(7): mov $0xfff,0x4(%rax)
2209(7): mov $0xfff,0xc(%rax)
2210(3): mov %dx,(%rax)
2213(3): mov %ebx,0x8(%rax)
2216(4): mov $0x0,0x11(%rax)
221a(8): mov 0x98(%rsp),%rcx
2222(9): xor $0x28,%rcx
222b(2): jnz 0x19(%rip)
222d(7): add $0xa0,%rsp
2234(1): pop %rbx
2235(1): ret near (%rsp)
2236(a): nop 0x0(%rax,%rax,1)
2240(2): xor %eax,%eax
2242(2): jmp 0xffffffd8(%rip)
2244(5): call 0xfffff13c(%rip)

"mode_adjust" :
2250(5): movzx 0x1(%rcx),%r10d
2255(2): mov %edi,%eax
2257(5): and $0xfff,%eax
225c(3): test %r10b,%r10b
225f(6): jz 0x151(%rip)
2265(4): cmp $0x1,%sil
2269(2): push %r12
226b(1): push %rbp
226c(1): push %rbx
226d(2): sbb %ebx,%ebx
226f(4): movzx %sil,%ebp
2273(2): not %ebx
2275(3): xor %r11d,%r11d
2278(6): and $0xc00,%ebx
227e(2): jmp 0x3c(%rip)
2280(3): mov %r9d,%edi
2283(2): or %edx,%edi
2285(2): not %edi
2287(2): and %edi,%esi
2289(4): cmp $0x2d,%r12b
228d(6): jz 0x113(%rip)
2293(4): cmp $0x3d,%r12b
2297(6): jz 0xb4(%rip)
229d(4): cmp $0x2b,%r12b
22a1(2): jnz 0x7(%rip)
22a3(3): or %esi,%r11d
22a6(2): or %esi,%eax
22a8(4): add $0x10,%rcx
22ac(5): movzx 0x1(%rcx),%r10d
22b1(3): test %r10b,%r10b
22b4(6): jz 0xb8(%rip)
22ba(4): mov 0xc(%rcx),%r9d
22be(3): mov 0x4(%rcx),%edi
22c1(3): mov 0x8(%rcx),%esi
22c4(3): not %r9d
22c7(3): and %ebx,%r9d
22ca(4): cmp $0x2,%r10b
22ce(6): jz 0xb2(%rip)
22d4(4): cmp $0x3,%r10b
22d8(2): jnz 0x40(%rip)
22da(2): and %eax,%esi
22dc(3): mov %esi,%r10d
22df(7): and $0x124,%r10d
22e6(4): cmp $0x1,%r10d
22ea(3): sbb %r10d,%r10d
22ed(3): not %r10d
22f0(7): and $0x124,%r10d
22f7(3): mov %r10d,%r12d
22fa(4): or $0x92,%r12b
22fe(4): test $0x92,%sil
2302(4): cmovne %r12d,%r10d
2306(3): mov %r10d,%r12d
2309(4): or $0x49,%r12d
230d(4): test $0x49,%sil
2311(4): cmovne %r12d,%r10d
2315(3): or %r10d,%esi
2318(3): mov %r9d,%r10d
231b(2): test %edi,%edi
231d(4): movzx (%rcx),%r12d
2321(3): not %r10d
2324(6): jz 0xffffff5c(%rip)
232a(3): and %edi,%r10d
232d(3): and %r10d,%esi
2330(4): cmp $0x2d,%r12b
2334(2): jz 0x6c(%rip)
2336(4): cmp $0x3d,%r12b
233a(6): jnz 0xffffff63(%rip)
2340(2): not %edi
2342(3): or %edi,%r9d
2345(3): mov %r9d,%r10d
2348(3): not %r10d
234b(7): and $0xfff,%r10d
2352(4): add $0x10,%rcx
2356(3): and %r9d,%eax
2359(3): or %r10d,%r11d
235c(5): movzx 0x1(%rcx),%r10d
2361(2): or %esi,%eax
2363(3): test %r10b,%r10b
2366(6): jnz 0xffffff54(%rip)
236c(3): test %r8,%r8
236f(2): jz 0x5(%rip)
2371(3): mov %r11d,(%r8)
2374(1): pop %rbx
2375(1): pop %rbp
2376(2): pop %r12
2378(1): ret near (%rsp)
2379(7): nop 0x0(%rax)
2380(3): mov %eax,%r12d
2383(3): mov %esi,%r10d
2386(4): and $0x49,%r12d
238a(4): or $0x49,%r10d
238e(3): or %ebp,%r12d
2391(4): cmovne %r10d,%esi
2395(2): jmp 0xffffff83(%rip)
2397(9): nop 0x0(%rax,%rax,1)
23a0(3): or %esi,%r11d
23a3(2): not %esi
23a5(2): and %esi,%eax
23a7(5): jmp 0xffffff01(%rip)
23ac(4): nop 0x0(%rax)
23b0(3): xor %r11d,%r11d
23b3(3): test %r8,%r8
23b6(2): jz 0x5(%rip)
23b8(3): mov %r11d,(%r8)
23bb(2): REP ret near (%rsp)

"set_program_name" :
23c0(3): test %rdi,%rdi
23c3(1): push %rbx
23c4(2): jz 0x79(%rip)
23c6(5): mov $0x2f,%esi
23cb(3): mov %rdi,%rbx
23ce(5): call 0xffffefe2(%rip)
23d3(3): test %rax,%rax
23d6(2): jz 0x57(%rip)
23d8(4): lea 0x1(%rax),%r8
23dc(3): mov %r8,%rdx
23df(3): sub %rbx,%rdx
23e2(4): cmp $0x6,%rdx
23e6(2): jle 0x47(%rip)
23e8(4): lea 0xfffffffa(%rax),%rsi
23ec(7): lea 0x2ebd(%rip),%rdi
23f3(5): mov $0x7,%ecx
23f8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
23fa(3): setnbe %dl
23fd(3): sbb $0x0,%dl
2400(2): test %dl,%dl
2402(2): jnz 0x2b(%rip)
2404(7): lea 0x2ead(%rip),%rdi
240b(5): mov $0x3,%ecx
2410(3): mov %r8,%rsi
2413(3): mov %r8,%rbx
2416(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2418(3): setnbe %dl
241b(3): sbb $0x0,%dl
241e(2): test %dl,%dl
2420(2): jnz 0xd(%rip)
2422(4): lea 0x4(%rax),%rbx
2426(7): mov %rbx,0x204c53(%rip)
242d(7): mov %rbx,0x204cac(%rip)
2434(7): mov %rbx,0x204c65(%rip)
243b(1): pop %rbx
243c(1): ret near (%rsp)
243d(7): mov 0x204c7c(%rip),%rcx
2444(7): lea 0x2e2d(%rip),%rdi
244b(5): mov $0x37,%edx
2450(5): mov $0x1,%esi
2455(5): call 0xfffff0cb(%rip)
245a(5): call 0xffffee76(%rip)

"gettext_quote.part.1" :
2460(1): push %rbp
2461(1): push %rbx
2462(3): mov %rdi,%rbp
2465(2): mov %esi,%ebx
2467(4): sub $0x8,%rsp
246b(5): call 0x26a5(%rip)
2470(3): movzx (%rax),%edx
2473(3): and $0xdf,%edx
2476(3): cmp $0x55,%dl
2479(2): jz 0x77(%rip)
247b(3): cmp $0x47,%dl
247e(2): jz 0x22(%rip)
2480(7): lea 0x2e44(%rip),%rax
2487(7): lea 0x2e3f(%rip),%rdx
248e(3): cmp $0x9,%ebx
2491(4): cmovne %rdx,%rax
2495(4): add $0x8,%rsp
2499(1): pop %rbx
249a(1): pop %rbp
249b(1): ret near (%rsp)
249c(4): nop 0x0(%rax)
24a0(4): movzx 0x1(%rax),%edx
24a4(3): and $0xdf,%edx
24a7(3): cmp $0x42,%dl
24aa(2): jnz 0xffffffd6(%rip)
24ac(4): cmp $0x31,0x2(%rax)
24b0(2): jnz 0xffffffd0(%rip)
24b2(4): cmp $0x38,0x3(%rax)
24b6(2): jnz 0xffffffca(%rip)
24b8(4): cmp $0x30,0x4(%rax)
24bc(2): jnz 0xffffffc4(%rip)
24be(4): cmp $0x33,0x5(%rax)
24c2(2): jnz 0xffffffbe(%rip)
24c4(4): cmp $0x30,0x6(%rax)
24c8(2): jnz 0xffffffb8(%rip)
24ca(4): cmp $0x0,0x7(%rax)
24ce(2): jnz 0xffffffb2(%rip)
24d0(4): cmp $0x60,0x0(%rbp)
24d4(7): lea 0x2de9(%rip),%rax
24db(7): lea 0x2de6(%rip),%rdx
24e2(4): cmovne %rdx,%rax
24e6(4): add $0x8,%rsp
24ea(1): pop %rbx
24eb(1): pop %rbp
24ec(1): ret near (%rsp)
24ed(3): nop (%rax)
24f0(4): movzx 0x1(%rax),%edx
24f4(3): and $0xdf,%edx
24f7(3): cmp $0x54,%dl
24fa(2): jnz 0xffffff86(%rip)
24fc(4): movzx 0x2(%rax),%edx
2500(3): and $0xdf,%edx
2503(3): cmp $0x46,%dl
2506(6): jnz 0xffffff7a(%rip)
250c(4): cmp $0x2d,0x3(%rax)
2510(6): jnz 0xffffff70(%rip)
2516(4): cmp $0x38,0x4(%rax)
251a(6): jnz 0xffffff66(%rip)
2520(4): cmp $0x0,0x5(%rax)
2524(6): jnz 0xffffff5c(%rip)
252a(4): cmp $0x60,0x0(%rbp)
252e(7): lea 0x2d87(%rip),%rax
2535(7): lea 0x2d84(%rip),%rdx
253c(4): cmovne %rdx,%rax
2540(4): add $0x8,%rsp
2544(1): pop %rbx
2545(1): pop %rbp
2546(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2550(2): push %r15
2552(2): push %r14
2554(3): mov %r8d,%r15d
2557(2): push %r13
2559(2): push %r12
255b(3): mov %rdi,%r14
255e(1): push %rbp
255f(1): push %rbx
2560(3): mov %r9d,%ebx
2563(3): mov %rsi,%r13
2566(3): mov %rcx,%rbp
2569(3): and $0x2,%ebx
256c(7): sub $0xb8,%rsp
2573(8): mov 0xf0(%rsp),%rax
257b(5): mov %rdx,0x10(%rsp)
2580(5): mov %r8d,0x8(%rsp)
2585(5): mov %r9d,0x78(%rsp)
258a(5): mov %rax,0x20(%rsp)
258f(8): mov 0xf8(%rsp),%rax
2597(5): mov %rax,0x68(%rsp)
259c(8): mov 0x100(%rsp),%rax
25a4(5): mov %rax,0x60(%rsp)
25a9(9): mov $0x28,%rax
25b2(8): mov %rax,0xa8(%rsp)
25ba(2): xor %eax,%eax
25bc(5): call 0xffffeda4(%rip)
25c1(4): cmp $0xa,%r15d
25c5(5): mov %rax,0x58(%rsp)
25ca(6): jnbe 0x11b5(%rip)
25d0(7): lea 0x2d49(%rip),%rcx
25d7(3): mov %r15d,%edx
25da(4): movsxd 0x0(%rcx,%rdx,4),%rax
25de(3): add %rcx,%rax
25e1(2): jmp %rax
25e3(5): mov $0x1,0xe(%rsp)
25e8(5): mov $0x0,0x7c(%rsp)
25ed(3): xor %r12d,%r12d
25f0(9): mov $0x0,0x50(%rsp)
25f9(5): mov $0x1,0xf(%rsp)
25fe(5): mov $0x0,0xd(%rsp)
2603(7): lea 0x2cc3(%rip),%rax
260a(9): mov $0x1,0x18(%rsp)
2613(3): xor %r15d,%r15d
2616(8): mov $0x2,0x8(%rsp)
261e(5): mov %rax,0x48(%rsp)
2623(3): xor %r11d,%r11d
2626(3): mov %rbp,%rax
2629(3): mov %r12d,%r8d
262c(3): mov %r11,%rbp
262f(3): mov %rax,%r11
2632(6): nop 0x0(%rax,%rax,1)
2638(3): cmp %rbp,%r11
263b(4): setnz %r12b
263f(4): cmp $0xffffffff,%r11
2643(2): jnz 0xf(%rip)
2645(5): mov 0x10(%rsp),%rax
264a(4): cmp $0x0,0x0(%rax,%rbp,1)
264e(4): setnz %r12b
2652(3): test %r12b,%r12b
2655(6): jz 0x65b(%rip)
265b(5): cmp $0x2,0x8(%rsp)
2660(5): mov 0x10(%rsp),%rdi
2665(4): lea 0x0(%rdi,%rbp,1),%r9
2669(3): setnz %al
266c(4): and 0xd(%rsp),%al
2670(3): mov %eax,%r10d
2673(6): jz 0xad(%rip)
2679(5): mov 0x18(%rsp),%rax
267e(3): test %rax,%rax
2681(6): jz 0x42f(%rip)
2687(4): cmp $0xffffffff,%r11
268b(5): lea 0x0(%rbp,%rax,1),%rbx
2690(2): jnz 0x30(%rip)
2692(4): cmp $0x1,%rax
2696(2): jbe 0x2a(%rip)
2698(5): mov %r8b,0x38(%rsp)
269d(5): mov %r10b,0x30(%rsp)
26a2(5): mov %r9,0x28(%rsp)
26a7(5): call 0xffffecc9(%rip)
26ac(6): movzx 0x38(%rsp),%r8d
26b2(6): movzx 0x30(%rsp),%r10d
26b8(3): mov %rax,%r11
26bb(5): mov 0x28(%rsp),%r9
26c0(3): cmp %r11,%rbx
26c3(5): mov %r10b,0x28(%rsp)
26c8(6): jnbe 0x5b8(%rip)
26ce(5): mov 0x18(%rsp),%rdx
26d3(5): mov 0x48(%rsp),%rsi
26d8(3): mov %r9,%rdi
26db(5): mov %r11,0x40(%rsp)
26e0(5): mov %r8b,0x38(%rsp)
26e5(5): mov %r9,0x30(%rsp)
26ea(5): call 0xffffecf6(%rip)
26ef(2): test %eax,%eax
26f1(5): mov 0x30(%rsp),%r9
26f6(6): movzx 0x38(%rsp),%r8d
26fc(5): mov 0x40(%rsp),%r11
2701(6): jnz 0x57f(%rip)
2707(5): cmp $0x0,0xf(%rsp)
270c(6): movzx 0x28(%rsp),%r10d
2712(6): jnz 0xf83(%rip)
2718(8): nop 0x0(%rax,%rax,1)
2720(4): movzx (%r9),%ebx
2724(3): cmp $0x7e,%bl
2727(6): jnbe 0x321(%rip)
272d(7): lea 0x2c18(%rip),%rcx
2734(3): movzx %bl,%edx
2737(4): movsxd 0x0(%rcx,%rdx,4),%rax
273b(3): add %rcx,%rax
273e(2): jmp %rax
2740(3): xor %r10d,%r10d
2743(4): cmp $0x1,%r11
2747(3): setnz %al
274a(4): cmp $0xffffffff,%r11
274e(2): jnz 0xe(%rip)
2750(5): mov 0x10(%rsp),%rax
2755(4): cmp $0x0,0x1(%rax)
2759(3): setnz %al
275c(5): cmp $0x2,0x8(%rsp)
2761(3): setz %dl
2764(2): test %al,%al
2766(6): jz 0x252(%rip)
276c(3): xor %r12d,%r12d
276f(2): xor %eax,%eax
2771(7): nop 0x0(%rax)
2778(5): cmp $0x1,0xd(%rsp)
277d(6): jnz 0x115(%rip)
2783(2): test %dl,%dl
2785(6): jnz 0x10d(%rip)
278b(5): mov 0x20(%rsp),%rsi
2790(3): test %rsi,%rsi
2793(2): jz 0x16(%rip)
2795(2): mov %ebx,%edx
2797(3): shr $0x5,%dl
279a(3): movzx %dl,%edx
279d(3): mov 0x0(%rsi,%rdx,4),%edx
27a0(3): bt %ebx,%edx
27a3(6): jb 0x150(%rip)
27a9(3): test %r10b,%r10b
27ac(6): jnz 0x147(%rip)
27b2(3): xor $0x1,%eax
27b5(4): add $0x1,%rbp
27b9(3): and %r8d,%eax
27bc(2): test %al,%al
27be(2): jz 0x22(%rip)
27c0(3): cmp %r15,%r13
27c3(2): jbe 0x7(%rip)
27c5(5): mov $0x27,0x0(%r14,%r15,1)
27ca(4): lea 0x1(%r15),%rax
27ce(3): cmp %rax,%r13
27d1(2): jbe 0x8(%rip)
27d3(6): mov $0x27,0x1(%r14,%r15,1)
27d9(4): add $0x2,%r15
27dd(3): xor %r8d,%r8d
27e0(3): cmp %r13,%r15
27e3(2): jnb 0x6(%rip)
27e5(4): mov %bl,0x0(%r14,%r15,1)
27e9(5): movzx 0xe(%rsp),%edi
27ee(4): add $0x1,%r15
27f2(5): mov $0x0,%eax
27f7(3): test %r12b,%r12b
27fa(3): cmove %eax,%edi
27fd(5): mov %dil,0xe(%rsp)
2802(5): jmp 0xfffffe36(%rip)
2807(9): nop 0x0(%rax,%rax,1)
2810(3): xor %r10d,%r10d
2813(4): mov 0x8(%rsp),%eax
2817(3): cmp $0x2,%eax
281a(6): jz 0x5be(%rip)
2820(3): cmp $0x5,%eax
2823(6): jz 0x575(%rip)
2829(3): cmp $0x2,%eax
282c(5): mov $0x3f,%ebx
2831(3): setz %dl
2834(3): xor %r12d,%r12d
2837(2): xor %eax,%eax
2839(5): jmp 0xffffff3f(%rip)
283e(2): nop 
2840(3): xor %r10d,%r10d
2843(5): cmp $0x2,0x8(%rsp)
2848(6): jz 0x508(%rip)
284e(5): mov %r12b,0x7c(%rsp)
2853(2): xor %edx,%edx
2855(2): xor %eax,%eax
2857(5): mov $0x27,%ebx
285c(5): jmp 0xffffff1c(%rip)
2861(7): nop 0x0(%rax)
2868(5): mov $0x9,%edx
286d(5): mov $0x74,%ebx
2872(5): cmp $0x2,0x8(%rsp)
2877(3): setz %al
287a(4): and 0xf(%rsp),%al
287e(6): jnz 0x150(%rip)
2884(5): cmp $0x0,0xd(%rsp)
2889(2): jnz 0x67(%rip)
288b(2): mov %edx,%ebx
288d(3): xor %r12d,%r12d
2890(2): xor %eax,%eax
2892(5): cmp $0x0,0xf(%rsp)
2897(6): jnz 0xfffffef4(%rip)
289d(5): jmp 0xffffff0c(%rip)
28a2(6): nop 0x0(%rax,%rax,1)
28a8(5): mov $0x8,%edx
28ad(5): mov $0x62,%ebx
28b2(2): jmp 0xffffffd2(%rip)
28b4(4): nop 0x0(%rax)
28b8(5): cmp $0x2,0x8(%rsp)
28bd(6): jz 0x3d3(%rip)
28c3(5): cmp $0x0,0xd(%rsp)
28c8(6): jz 0x218(%rip)
28ce(5): cmp $0x0,0xf(%rsp)
28d3(6): jz 0x20d(%rip)
28d9(6): cmp $0x0,0x18(%rsp)
28df(6): jnz 0x3bc(%rip)
28e5(5): mov $0x5c,%ebx
28ea(6): nop 0x0(%rax,%rax,1)
28f0(3): xor %r12d,%r12d
28f3(5): cmp $0x2,0x8(%rsp)
28f8(3): setz %dl
28fb(5): cmp $0x0,0xf(%rsp)
2900(2): mov %edx,%eax
2902(6): jnz 0x856(%rip)
2908(3): mov %r8d,%eax
290b(3): xor $0x1,%eax
290e(2): and %dl,%al
2910(2): jz 0x31(%rip)
2912(3): cmp %r15,%r13
2915(2): jbe 0x7(%rip)
2917(5): mov $0x27,0x0(%r14,%r15,1)
291c(4): lea 0x1(%r15),%rdx
2920(3): cmp %rdx,%r13
2923(2): jbe 0x8(%rip)
2925(6): mov $0x24,0x1(%r14,%r15,1)
292b(4): lea 0x2(%r15),%rdx
292f(3): cmp %rdx,%r13
2932(2): jbe 0x8(%rip)
2934(6): mov $0x27,0x2(%r14,%r15,1)
293a(4): add $0x3,%r15
293e(3): mov %eax,%r8d
2941(3): cmp %r15,%r13
2944(2): jbe 0x7(%rip)
2946(5): mov $0x5c,0x0(%r14,%r15,1)
294b(4): add $0x1,%r15
294f(4): add $0x1,%rbp
2953(5): jmp 0xfffffe8d(%rip)
2958(8): nop 0x0(%rax,%rax,1)
2960(5): cmp $0x0,0xd(%rsp)
2965(6): jnz 0x1ce(%rip)
296b(2): xor %edx,%edx
296d(5): test $0x1,0x78(%rsp)
2972(6): jz 0xffffff19(%rip)
2978(4): add $0x1,%rbp
297c(5): jmp 0xfffffcbc(%rip)
2981(7): nop 0x0(%rax)
2988(5): cmp $0x2,0x8(%rsp)
298d(3): setz %dl
2990(2): xor %eax,%eax
2992(5): jmp 0xfffffde6(%rip)
2997(9): nop 0x0(%rax,%rax,1)
29a0(5): mov $0x7,%edx
29a5(5): mov $0x61,%ebx
29aa(5): jmp 0xfffffeda(%rip)
29af(1): nop 
29b0(5): cmp $0x2,0x8(%rsp)
29b5(3): setz %dl
29b8(3): test %rbp,%rbp
29bb(6): jnz 0xfffffdb1(%rip)
29c1(5): movzx 0xf(%rsp),%eax
29c6(2): and %dl,%al
29c8(6): jz 0xfffffdb0(%rip)
29ce(3): mov %r11,%rbp
29d1(8): mov $0x2,0x8(%rsp)
29d9(5): jmp 0x700(%rip)
29de(2): nop 
29e0(5): cmp $0x2,0x8(%rsp)
29e5(3): setz %dl
29e8(3): xor %r12d,%r12d
29eb(2): jmp 0xffffffd6(%rip)
29ed(3): nop (%rax)
29f0(5): cmp $0x2,0x8(%rsp)
29f5(5): mov $0x20,%ebx
29fa(3): setz %dl
29fd(2): jmp 0xffffffc4(%rip)
29ff(1): nop 
2a00(5): mov $0xd,%edx
2a05(5): mov $0x72,%ebx
2a0a(5): jmp 0xfffffe68(%rip)
2a0f(1): nop 
2a10(5): mov $0xc,%edx
2a15(5): mov $0x66,%ebx
2a1a(5): jmp 0xfffffe6a(%rip)
2a1f(1): nop 
2a20(5): mov $0xb,%edx
2a25(5): mov $0x76,%ebx
2a2a(5): jmp 0xfffffe5a(%rip)
2a2f(1): nop 
2a30(5): mov $0xa,%edx
2a35(5): mov $0x6e,%ebx
2a3a(5): jmp 0xfffffe38(%rip)
2a3f(1): nop 
2a40(3): xor %r10d,%r10d
2a43(5): nop 0x0(%rax,%rax,1)
2a48(6): cmp $0x1,0x58(%rsp)
2a4e(6): jnz 0x3aa(%rip)
2a54(5): mov %r11,0x38(%rsp)
2a59(5): mov %r8b,0x30(%rsp)
2a5e(5): mov %r10b,0x28(%rsp)
2a63(5): call 0xffffeafd(%rip)
2a68(3): mov (%rax),%rcx
2a6b(3): movzx %bl,%edx
2a6e(6): movzx 0x28(%rsp),%r10d
2a74(6): movzx 0x30(%rsp),%r8d
2a7a(5): mov 0x38(%rsp),%r11
2a7f(5): mov $0x1,%edi
2a84(4): movzx 0x0(%rcx,%rdx,2),%eax
2a88(4): and $0x4000,%ax
2a8c(4): setnz %r12b
2a90(3): setz %al
2a93(4): and 0xd(%rsp),%al
2a97(2): test %al,%al
2a99(6): jnz 0x998(%rip)
2a9f(5): cmp $0x2,0x8(%rsp)
2aa4(3): setz %dl
2aa7(5): jmp 0xfffffcd1(%rip)
2aac(4): nop 0x0(%rax)
2ab0(4): movzx (%r9),%ebx
2ab4(3): cmp $0x7e,%bl
2ab7(2): jnbe 0xffffff89(%rip)
2ab9(7): lea 0x2a88(%rip),%rcx
2ac0(3): movzx %bl,%edx
2ac3(4): movsxd 0x0(%rcx,%rdx,4),%rax
2ac7(3): add %rcx,%rax
2aca(2): jmp %rax
2acc(4): nop 0x0(%rax)
2ad0(3): xor %r10d,%r10d
2ad3(5): cmp $0x0,0xd(%rsp)
2ad8(6): jnz 0xfffffdf6(%rip)
2ade(2): nop 
2ae0(5): mov $0x5c,%edx
2ae5(5): mov $0x5c,%ebx
2aea(5): jmp 0xfffffd9a(%rip)
2aef(1): nop 
2af0(5): mov $0xc,%edx
2af5(3): xor %r10d,%r10d
2af8(5): mov $0x66,%ebx
2afd(5): jmp 0xfffffd87(%rip)
2b02(6): nop 0x0(%rax,%rax,1)
2b08(5): mov $0xa,%edx
2b0d(3): xor %r10d,%r10d
2b10(5): mov $0x6e,%ebx
2b15(5): jmp 0xfffffd5d(%rip)
2b1a(6): nop 0x0(%rax,%rax,1)
2b20(5): mov $0x61,%ebx
2b25(5): jmp 0xfffffdcb(%rip)
2b2a(6): nop 0x0(%rax,%rax,1)
2b30(3): xor %r10d,%r10d
2b33(5): cmp $0x2,0x8(%rsp)
2b38(3): setz %dl
2b3b(5): cmp $0x0,0xf(%rsp)
2b40(6): jnz 0xb9a(%rip)
2b46(3): mov %r8d,%eax
2b49(3): mov %r15,%rcx
2b4c(3): xor $0x1,%eax
2b4f(2): and %dl,%al
2b51(2): jz 0x2f(%rip)
2b53(3): cmp %r15,%r13
2b56(2): jbe 0x7(%rip)
2b58(5): mov $0x27,0x0(%r14,%r15,1)
2b5d(4): lea 0x1(%r15),%rcx
2b61(3): cmp %rcx,%r13
2b64(2): jbe 0x8(%rip)
2b66(6): mov $0x24,0x1(%r14,%r15,1)
2b6c(4): lea 0x2(%r15),%rcx
2b70(3): cmp %rcx,%r13
2b73(6): jnbe 0x636(%rip)
2b79(4): lea 0x3(%r15),%rcx
2b7d(3): mov %eax,%r8d
2b80(3): cmp %rcx,%r13
2b83(2): jbe 0x7(%rip)
2b85(5): mov $0x5c,0x0(%r14,%rcx,1)
2b8a(5): cmp $0x2,0x8(%rsp)
2b8f(4): lea 0x1(%rcx),%r15
2b93(6): jz 0x606(%rip)
2b99(4): lea 0x1(%rbp),%rax
2b9d(3): cmp %r11,%rax
2ba0(2): jnb 0x1b(%rip)
2ba2(5): mov 0x10(%rsp),%rax
2ba7(5): movzx 0x1(%rax,%rbp,1),%eax
2bac(4): mov %al,0x28(%rsp)
2bb0(3): sub $0x30,%eax
2bb3(2): cmp $0x9,%al
2bb5(6): jbe 0x834(%rip)
2bbb(3): mov %r12d,%eax
2bbe(5): mov $0x30,%ebx
2bc3(3): xor %r12d,%r12d
2bc6(5): jmp 0xfffffbb2(%rip)
2bcb(5): nop 0x0(%rax,%rax,1)
2bd0(5): cmp $0x2,0x8(%rsp)
2bd5(3): mov %r10d,%r12d
2bd8(3): setz %dl
2bdb(3): xor %r10d,%r10d
2bde(2): xor %eax,%eax
2be0(5): jmp 0xfffffb98(%rip)
2be5(3): nop (%rax)
2be8(5): cmp $0x2,0x8(%rsp)
2bed(3): setz %dl
2bf0(3): xor %r10d,%r10d
2bf3(5): jmp 0xfffffdc5(%rip)
2bf8(8): nop 0x0(%rax,%rax,1)
2c00(5): cmp $0x2,0x8(%rsp)
2c05(3): setz %dl
2c08(3): xor %r10d,%r10d
2c0b(3): xor %r12d,%r12d
2c0e(5): jmp 0xfffffdb3(%rip)
2c13(5): nop 0x0(%rax,%rax,1)
2c18(5): cmp $0x2,0x8(%rsp)
2c1d(3): mov %r10d,%r12d
2c20(5): mov $0x20,%ebx
2c25(3): setz %dl
2c28(3): xor %r10d,%r10d
2c2b(5): jmp 0xfffffd96(%rip)
2c30(5): mov $0xd,%edx
2c35(3): xor %r10d,%r10d
2c38(5): mov $0x72,%ebx
2c3d(5): jmp 0xfffffc35(%rip)
2c42(6): nop 0x0(%rax,%rax,1)
2c48(5): mov $0x76,%ebx
2c4d(5): jmp 0xfffffca3(%rip)
2c52(6): nop 0x0(%rax,%rax,1)
2c58(5): mov $0x9,%edx
2c5d(3): xor %r10d,%r10d
2c60(5): mov $0x74,%ebx
2c65(5): jmp 0xfffffc0d(%rip)
2c6a(6): nop 0x0(%rax,%rax,1)
2c70(5): mov $0x62,%ebx
2c75(5): jmp 0xfffffc7b(%rip)
2c7a(6): nop 0x0(%rax,%rax,1)
2c80(3): xor %r10d,%r10d
2c83(5): jmp 0xfffffa9d(%rip)
2c88(8): nop 0x0(%rax,%rax,1)
2c90(5): cmp $0x0,0xf(%rsp)
2c95(6): jnz 0x96b(%rip)
2c9b(4): add $0x1,%rbp
2c9f(3): mov %r8d,%eax
2ca2(3): xor %r12d,%r12d
2ca5(5): mov $0x5c,%ebx
2caa(5): jmp 0xfffffb12(%rip)
2caf(1): nop 
2cb0(5): cmp $0x2,0x8(%rsp)
2cb5(5): movzx 0xf(%rsp),%ebx
2cba(3): mov %r8d,%r12d
2cbd(3): mov %r11,%rbp
2cc0(3): setz %dl
2cc3(2): mov %ebx,%eax
2cc5(3): test %r15,%r15
2cc8(3): setz %cl
2ccb(2): and %edx,%eax
2ccd(2): and %cl,%al
2ccf(6): jnz 0xa67(%rip)
2cd5(2): mov %ebx,%eax
2cd7(3): xor $0x1,%eax
2cda(2): and %al,%dl
2cdc(6): jz 0x970(%rip)
2ce2(5): cmp $0x0,0x7c(%rsp)
2ce7(6): jz 0x963(%rip)
2ced(5): cmp $0x0,0xe(%rsp)
2cf2(6): jnz 0x9fb(%rip)
2cf8(3): test %r13,%r13
2cfb(3): setz %al
2cfe(6): cmp $0x0,0x50(%rsp)
2d04(3): setnz %dl
2d07(2): and %dl,%al
2d09(6): jz 0xa23(%rip)
2d0f(5): mov 0x50(%rsp),%r13
2d14(7): lea 0x25b2(%rip),%rbx
2d1b(4): mov $0x27,(%r14)
2d1f(8): mov $0x2,0x8(%rsp)
2d27(6): mov $0x1,%r15d
2d2d(9): mov $0x1,0x18(%rsp)
2d36(5): mov $0x0,0xf(%rsp)
2d3b(5): mov %rbx,0x48(%rsp)
2d40(4): mov %al,0x7c(%rsp)
2d44(5): jmp 0xfffff8df(%rip)
2d49(7): nop 0x0(%rax)
2d50(5): cmp $0x0,0xf(%rsp)
2d55(6): jnz 0x8ab(%rip)
2d5b(3): test %r13,%r13
2d5e(6): jz 0x402(%rip)
2d64(2): xor %edx,%edx
2d66(6): cmp $0x0,0x50(%rsp)
2d6c(6): jnz 0x3f4(%rip)
2d72(5): mov %r13,0x50(%rsp)
2d77(4): add $0x3,%r15
2d7b(2): xor %eax,%eax
2d7d(5): mov %r12b,0x7c(%rsp)
2d82(3): xor %r8d,%r8d
2d85(3): mov %rdx,%r13
2d88(5): mov $0x27,%ebx
2d8d(5): jmp 0xfffffa1c(%rip)
2d92(6): nop 0x0(%rax,%rax,1)
2d98(5): test $0x4,0x78(%rsp)
2d9d(2): jz 0x23(%rip)
2d9f(4): lea 0x2(%rbp),%rcx
2da3(3): cmp %r11,%rcx
2da6(2): jnb 0x1a(%rip)
2da8(5): mov 0x10(%rsp),%rax
2dad(5): cmp $0x3f,0x1(%rax,%rbp,1)
2db2(6): jz 0x790(%rip)
2db8(8): nop 0x0(%rax,%rax,1)
2dc0(2): xor %edx,%edx
2dc2(3): xor %r12d,%r12d
2dc5(2): xor %eax,%eax
2dc7(5): mov $0x3f,%ebx
2dcc(5): jmp 0xfffff9ac(%rip)
2dd1(7): nop 0x0(%rax)
2dd8(5): cmp $0x0,0xf(%rsp)
2ddd(6): jnz 0x823(%rip)
2de3(3): xor %r12d,%r12d
2de6(2): xor %eax,%eax
2de8(5): mov $0x3f,%ebx
2ded(5): jmp 0xfffff9bc(%rip)
2df2(6): nop 0x0(%rax,%rax,1)
2df8(8): lea 0xa0(%rsp),%rax
2e00(4): cmp $0xffffffff,%r11
2e04(c): mov $0x0,0xa0(%rsp)
2e10(5): mov %rax,0x28(%rsp)
2e15(2): jnz 0x2f(%rip)
2e17(5): mov 0x10(%rsp),%rdi
2e1c(5): mov %r8b,0x40(%rsp)
2e21(5): mov %r10b,0x38(%rsp)
2e26(5): mov %r9,0x30(%rsp)
2e2b(5): call 0xffffe545(%rip)
2e30(6): movzx 0x40(%rsp),%r8d
2e36(6): movzx 0x38(%rsp),%r10d
2e3c(3): mov %rax,%r11
2e3f(5): mov 0x30(%rsp),%r9
2e44(8): lea 0x9c(%rsp),%rax
2e4c(2): xor %ecx,%ecx
2e4e(4): mov %bl,0x7e(%rsp)
2e52(5): mov %r8b,0x7d(%rsp)
2e57(3): mov %rcx,%rbx
2e5a(8): mov %r9,0x88(%rsp)
2e62(5): mov %rax,0x38(%rsp)
2e67(5): mov %r10b,0x7f(%rsp)
2e6c(8): mov %r15,0x80(%rsp)
2e74(5): mov %r14,0x40(%rsp)
2e79(5): mov %r13,0x70(%rsp)
2e7e(5): mov %r11,0x30(%rsp)
2e83(5): mov 0x10(%rsp),%rax
2e88(5): lea 0x0(%rbp,%rbx,1),%r14
2e8d(5): mov 0x30(%rsp),%rdx
2e92(5): mov 0x28(%rsp),%rcx
2e97(5): mov 0x38(%rsp),%rdi
2e9c(4): lea 0x0(%rax,%r14,1),%r13
2ea0(3): sub %r14,%rdx
2ea3(3): mov %r13,%rsi
2ea6(5): call 0x1afa(%rip)
2eab(3): test %rax,%rax
2eae(3): mov %rax,%r15
2eb1(2): jz 0x50(%rip)
2eb3(4): cmp $0xffffffff,%rax
2eb7(6): jz 0x61e(%rip)
2ebd(4): cmp $0xfffffffe,%rax
2ec1(6): jz 0x5a0(%rip)
2ec7(5): cmp $0x2,0x8(%rsp)
2ecc(3): setz %al
2ecf(4): and 0xf(%rsp),%al
2ed3(6): jnz 0x19d(%rip)
2ed9(7): mov 0x9c(%rsp),%edi
2ee0(5): call 0xffffe670(%rip)
2ee5(5): mov 0x28(%rsp),%rdi
2eea(2): test %eax,%eax
2eec(5): mov $0x0,%eax
2ef1(4): cmove %eax,%r12d
2ef5(3): add %r15,%rbx
2ef8(5): call 0xffffe648(%rip)
2efd(2): test %eax,%eax
2eff(2): jz 0xffffff84(%rip)
2f01(3): mov %r12d,%edx
2f04(3): mov %rbx,%rdi
2f07(6): movzx 0x7d(%rsp),%r8d
2f0d(3): xor $0x1,%edx
2f10(5): movzx 0x7e(%rsp),%ebx
2f15(6): movzx 0x7f(%rsp),%r10d
2f1b(4): and 0xd(%rsp),%dl
2f1f(8): mov 0x80(%rsp),%r15
2f27(5): mov 0x40(%rsp),%r14
2f2c(5): mov 0x70(%rsp),%r13
2f31(5): mov 0x30(%rsp),%r11
2f36(4): cmp $0x1,%rdi
2f3a(6): jbe 0x601(%rip)
2f40(3): mov %rdi,%rcx
2f43(2): xor %esi,%esi
2f45(6): movzx 0xf(%rsp),%r9d
2f4b(3): add %rbp,%rcx
2f4e(5): mov 0x10(%rsp),%rdi
2f53(5): jmp 0xbb(%rip)
2f58(8): nop 0x0(%rax,%rax,1)
2f60(5): cmp $0x2,0x8(%rsp)
2f65(3): setz %al
2f68(3): test %r9b,%r9b
2f6b(6): jnz 0x4b5(%rip)
2f71(3): mov %r8d,%esi
2f74(3): xor $0x1,%esi
2f77(3): and %sil,%al
2f7a(2): jz 0x31(%rip)
2f7c(3): cmp %r15,%r13
2f7f(2): jbe 0x7(%rip)
2f81(5): mov $0x27,0x0(%r14,%r15,1)
2f86(4): lea 0x1(%r15),%rsi
2f8a(3): cmp %rsi,%r13
2f8d(2): jbe 0x8(%rip)
2f8f(6): mov $0x24,0x1(%r14,%r15,1)
2f95(4): lea 0x2(%r15),%rsi
2f99(3): cmp %rsi,%r13
2f9c(2): jbe 0x8(%rip)
2f9e(6): mov $0x27,0x2(%r14,%r15,1)
2fa4(4): add $0x3,%r15
2fa8(3): mov %eax,%r8d
2fab(3): cmp %r15,%r13
2fae(2): jbe 0x7(%rip)
2fb0(5): mov $0x5c,0x0(%r14,%r15,1)
2fb5(4): lea 0x1(%r15),%rax
2fb9(3): cmp %rax,%r13
2fbc(2): jbe 0xf(%rip)
2fbe(2): mov %ebx,%eax
2fc0(3): shr $0x6,%al
2fc3(3): add $0x30,%eax
2fc6(5): mov %al,0x1(%r14,%r15,1)
2fcb(4): lea 0x2(%r15),%rax
2fcf(3): cmp %rax,%r13
2fd2(2): jbe 0x12(%rip)
2fd4(2): mov %ebx,%eax
2fd6(3): shr $0x3,%al
2fd9(3): and $0x7,%eax
2fdc(3): add $0x30,%eax
2fdf(5): mov %al,0x2(%r14,%r15,1)
2fe4(3): and $0x7,%ebx
2fe7(4): add $0x1,%rbp
2feb(4): add $0x3,%r15
2fef(3): add $0x30,%ebx
2ff2(3): cmp %rcx,%rbp
2ff5(6): jnb 0xfffff7eb(%rip)
2ffb(2): mov %edx,%esi
2ffd(3): cmp %r15,%r13
3000(2): jbe 0x6(%rip)
3002(4): mov %bl,0x0(%r14,%r15,1)
3006(4): movzx 0x0(%rdi,%rbp,1),%ebx
300a(4): add $0x1,%r15
300e(2): test %dl,%dl
3010(6): jnz 0xffffff50(%rip)
3016(2): mov %esi,%eax
3018(3): xor $0x1,%eax
301b(3): and %r8d,%eax
301e(3): test %r10b,%r10b
3021(2): jz 0x10(%rip)
3023(3): cmp %r15,%r13
3026(2): jbe 0x7(%rip)
3028(5): mov $0x5c,0x0(%r14,%r15,1)
302d(4): add $0x1,%r15
3031(4): add $0x1,%rbp
3035(3): cmp %rcx,%rbp
3038(6): jnb 0xfffff784(%rip)
303e(2): test %al,%al
3040(6): jz 0x3fe(%rip)
3046(3): cmp %r15,%r13
3049(2): jbe 0x7(%rip)
304b(5): mov $0x27,0x0(%r14,%r15,1)
3050(4): lea 0x1(%r15),%rax
3054(3): cmp %rax,%r13
3057(2): jbe 0x8(%rip)
3059(6): mov $0x27,0x1(%r14,%r15,1)
305f(4): add $0x2,%r15
3063(3): xor %r10d,%r10d
3066(3): xor %r8d,%r8d
3069(2): jmp 0xffffff94(%rip)
306b(5): nop 0x0(%rax,%rax,1)
3070(4): cmp $0x1,%r15
3074(6): jz 0xfffffe65(%rip)
307a(5): mov 0x10(%rsp),%rdi
307f(4): lea 0x0(%rdi,%r15,1),%rcx
3083(5): lea 0x1(%rdi,%r14,1),%rdx
3088(4): lea 0x0(%rcx,%r14,1),%r8
308c(2): jmp 0x11(%rip)
308e(2): nop 
3090(4): add $0x1,%rdx
3094(3): cmp %rdx,%r8
3097(6): jz 0xfffffe42(%rip)
309d(3): movzx (%rdx),%ecx
30a0(3): sub $0x5b,%ecx
30a3(3): cmp $0x21,%cl
30a6(2): jnbe 0xffffffea(%rip)
30a8(5): mov $0x1,%esi
30ad(3): shl/sal %cl,%rsi
30b0(3): mov %rsi,%rcx
30b3(a): mov $0x8589934635,%rsi
30bd(3): test %rsi,%rcx
30c0(2): jz 0xffffffd0(%rip)
30c2(5): mov 0x40(%rsp),%r14
30c7(5): mov 0x70(%rsp),%r13
30cc(5): mov 0x30(%rsp),%rbp
30d1(8): mov $0x2,0x8(%rsp)
30d9(5): cmp $0x0,0xd(%rsp)
30de(2): jz 0x12(%rip)
30e0(2): test %al,%al
30e2(5): mov $0x4,%eax
30e7(5): cmove 0x8(%rsp),%eax
30ec(4): mov %eax,0x8(%rsp)
30f0(4): sub $0x8,%rsp
30f4(3): mov %rbp,%rcx
30f7(3): mov %r13,%rsi
30fa(4): push 0x68(%rsp)
30fe(4): push 0x78(%rsp)
3102(3): mov %r14,%rdi
3105(2): push $0x0
3107(8): mov 0x98(%rsp),%r9d
310f(5): mov 0x28(%rsp),%r8d
3114(5): mov 0x30(%rsp),%rdx
3119(4): and $0xfd,%r9d
311d(5): call 0xfffff433(%rip)
3122(4): add $0x20,%rsp
3126(3): mov %rax,%r15
3129(8): mov 0xa8(%rsp),%rbx
3131(9): xor $0x28,%rbx
313a(3): mov %r15,%rax
313d(6): jnz 0x606(%rip)
3143(7): add $0xb8,%rsp
314a(1): pop %rbx
314b(1): pop %rbp
314c(2): pop %r12
314e(2): pop %r13
3150(2): pop %r14
3152(2): pop %r15
3154(1): ret near (%rsp)
3155(3): nop (%rax)
3158(3): mov %r11,%rbp
315b(5): jmp 0xffffff7e(%rip)
3160(3): cmp %r15,%r13
3163(2): jbe 0x7(%rip)
3165(5): mov $0x27,0x0(%r14,%r15,1)
316a(4): lea 0x1(%r15),%rax
316e(3): cmp %rax,%r13
3171(2): jbe 0x8(%rip)
3173(6): mov $0x5c,0x1(%r14,%r15,1)
3179(4): lea 0x2(%r15),%rax
317d(3): cmp %rax,%r13
3180(6): jbe 0x5f2(%rip)
3186(3): mov %r13,%rdx
3189(6): mov $0x27,0x2(%r14,%r15,1)
318f(5): mov 0x50(%rsp),%r13
3194(5): jmp 0xfffffbde(%rip)
3199(3): mov %r12d,%eax
319c(5): mov $0x30,%ebx
31a1(3): xor %r12d,%r12d
31a4(5): jmp 0xfffff605(%rip)
31a9(6): mov $0x27,0x2(%r14,%r15,1)
31af(5): jmp 0xfffff9ca(%rip)
31b4(2): test %ebx,%ebx
31b6(6): jnz 0xfffff42d(%rip)
31bc(5): mov $0x1,0xd(%rsp)
31c1(3): test %r13,%r13
31c4(6): jnz 0x596(%rip)
31ca(7): lea 0x20fc(%rip),%rax
31d1(9): mov $0x0,0x50(%rsp)
31da(5): mov $0x1,0xe(%rsp)
31df(5): mov $0x0,0x7c(%rsp)
31e4(3): xor %r12d,%r12d
31e7(5): mov $0x0,0xf(%rsp)
31ec(9): mov $0x1,0x18(%rsp)
31f5(5): mov %rax,0x48(%rsp)
31fa(6): mov $0x1,%r15d
3200(8): mov $0x2,0x8(%rsp)
3208(5): jmp 0xfffff41b(%rip)
320d(3): nop (%rax)
3210(2): test %ebx,%ebx
3212(6): jnz 0x3fb(%rip)
3218(3): test %r13,%r13
321b(6): jz 0x22b(%rip)
3221(4): mov $0x22,(%r14)
3225(5): mov $0x1,0xe(%rsp)
322a(3): xor %r12d,%r12d
322d(5): mov $0x0,0x7c(%rsp)
3232(9): mov $0x0,0x50(%rsp)
323b(7): lea 0x2089(%rip),%rax
3242(5): mov $0x0,0xf(%rsp)
3247(5): mov $0x1,0xd(%rsp)
324c(9): mov $0x1,0x18(%rsp)
3255(6): mov $0x1,%r15d
325b(5): mov %rax,0x48(%rsp)
3260(5): jmp 0xfffff3c3(%rip)
3265(7): lea 0x205f(%rip),%rax
326c(5): mov $0x1,0xe(%rsp)
3271(5): mov $0x0,0x7c(%rsp)
3276(3): xor %r12d,%r12d
3279(9): mov $0x0,0x50(%rsp)
3282(5): mov $0x1,0xf(%rsp)
3287(5): mov $0x1,0xd(%rsp)
328c(9): mov $0x1,0x18(%rsp)
3295(3): xor %r15d,%r15d
3298(5): mov %rax,0x48(%rsp)
329d(8): mov $0x5,0x8(%rsp)
32a5(5): jmp 0xfffff37e(%rip)
32aa(5): mov $0x1,0xe(%rsp)
32af(5): mov $0x0,0x7c(%rsp)
32b4(3): xor %r12d,%r12d
32b7(9): mov $0x0,0x50(%rsp)
32c0(5): mov $0x0,0xf(%rsp)
32c5(3): xor %r15d,%r15d
32c8(5): mov $0x1,0xd(%rsp)
32cd(9): mov $0x0,0x18(%rsp)
32d6(9): mov $0x0,0x48(%rsp)
32df(5): jmp 0xfffff344(%rip)
32e4(5): cmp $0xa,0x8(%rsp)
32e9(2): jz 0x58(%rip)
32eb(7): lea 0x1fdd(%rip),%rsi
32f2(2): xor %edi,%edi
32f4(5): mov $0x5,%edx
32f9(5): call 0xffffe057(%rip)
32fe(3): mov %rax,%rcx
3301(5): mov %rax,0x68(%rsp)
3306(7): lea 0x1fc2(%rip),%rax
330d(3): cmp %rax,%rcx
3310(6): jz 0x39e(%rip)
3316(7): lea 0x1fb0(%rip),%rsi
331d(2): xor %edi,%edi
331f(5): mov $0x5,%edx
3324(5): call 0xffffe02c(%rip)
3329(3): mov %rax,%rcx
332c(5): mov %rax,0x60(%rsp)
3331(7): lea 0x1f95(%rip),%rax
3338(3): cmp %rax,%rcx
333b(6): jz 0x389(%rip)
3341(3): xor %r15d,%r15d
3344(2): test %ebx,%ebx
3346(6): jz 0x1c7(%rip)
334c(2): test %ebx,%ebx
334e(5): mov 0x60(%rsp),%rbx
3353(5): setnz 0xf(%rsp)
3358(3): xor %r12d,%r12d
335b(3): mov %rbx,%rdi
335e(5): call 0xffffe012(%rip)
3363(5): mov %rbx,0x48(%rsp)
3368(5): mov %rax,0x18(%rsp)
336d(5): mov $0x1,0xe(%rsp)
3372(5): mov $0x0,0x7c(%rsp)
3377(9): mov $0x0,0x50(%rsp)
3380(5): mov $0x1,0xd(%rsp)
3385(5): jmp 0xfffff29e(%rip)
338a(5): mov $0x1,0xe(%rsp)
338f(5): mov $0x0,0x7c(%rsp)
3394(3): xor %r12d,%r12d
3397(9): mov $0x0,0x50(%rsp)
33a0(5): mov $0x0,0xf(%rsp)
33a5(3): xor %r15d,%r15d
33a8(5): mov $0x0,0xd(%rsp)
33ad(9): mov $0x0,0x18(%rsp)
33b6(9): mov $0x0,0x48(%rsp)
33bf(5): jmp 0xfffff264(%rip)
33c4(5): mov $0x1,0xe(%rsp)
33c9(5): mov $0x0,0x7c(%rsp)
33ce(3): xor %r12d,%r12d
33d1(9): mov $0x0,0x50(%rsp)
33da(5): mov $0x1,0xf(%rsp)
33df(5): mov $0x1,0xd(%rsp)
33e4(5): jmp 0xfffff21f(%rip)
33e9(3): cmp %r15,%r13
33ec(2): jbe 0x7(%rip)
33ee(5): mov $0x30,0x0(%r14,%r15,1)
33f3(4): lea 0x2(%rcx),%rax
33f7(3): cmp %rax,%r13
33fa(2): jbe 0x8(%rip)
33fc(6): mov $0x30,0x2(%r14,%rcx,1)
3402(3): mov %r12d,%eax
3405(4): lea 0x3(%rcx),%r15
3409(3): xor %r12d,%r12d
340c(5): mov $0x30,%ebx
3411(5): jmp 0xfffff367(%rip)
3416(a): nop 0x0(%rax,%rax,1)
3420(5): movzx 0xf(%rsp),%ebx
3425(3): mov %r11,%rbp
3428(4): mov %bl,0xd(%rsp)
342c(5): jmp 0xfffffcad(%rip)
3431(5): movzx 0xd(%rsp),%edx
3436(3): xor %r12d,%r12d
3439(5): jmp 0xfffffb07(%rip)
343e(3): xor %r10d,%r10d
3441(5): jmp 0xfffffbbc(%rip)
3446(9): mov $0x0,0x50(%rsp)
344f(5): mov $0x1,0xe(%rsp)
3454(3): xor %r12d,%r12d
3457(5): mov $0x0,0x7c(%rsp)
345c(5): jmp 0xfffffddf(%rip)
3461(5): mov 0x30(%rsp),%r11
3466(3): mov %r14,%rsi
3469(3): mov %r13,%rcx
346c(3): mov %rbx,%rax
346f(3): mov %rbx,%rdi
3472(6): movzx 0x7d(%rsp),%r8d
3478(5): movzx 0x7e(%rsp),%ebx
347d(8): mov 0x88(%rsp),%r9
3485(3): cmp %r11,%rsi
3488(6): movzx 0x7f(%rsp),%r10d
348e(8): mov 0x80(%rsp),%r15
3496(5): mov 0x40(%rsp),%r14
349b(5): mov 0x70(%rsp),%r13
34a0(2): jnb 0x28(%rip)
34a2(3): cmp $0x0,(%rcx)
34a5(2): jnz 0x12(%rip)
34a7(2): jmp 0x21(%rip)
34a9(7): nop 0x0(%rax)
34b0(5): cmp $0x0,0x0(%r9,%rax,1)
34b5(2): jz 0x10(%rip)
34b7(4): add $0x1,%rax
34bb(5): lea 0x0(%rbp,%rax,1),%rdx
34c0(3): cmp %rdx,%r11
34c3(2): jnbe 0xffffffed(%rip)
34c5(3): mov %rax,%rdi
34c8(5): movzx 0xd(%rsp),%edx
34cd(3): xor %r12d,%r12d
34d0(5): jmp 0xfffffa66(%rip)
34d5(3): mov %rbx,%rdi
34d8(6): movzx 0x7d(%rsp),%r8d
34de(5): movzx 0x7e(%rsp),%ebx
34e3(6): movzx 0x7f(%rsp),%r10d
34e9(8): mov 0x80(%rsp),%r15
34f1(3): xor %r12d,%r12d
34f4(5): mov 0x40(%rsp),%r14
34f9(5): mov 0x70(%rsp),%r13
34fe(5): mov 0x30(%rsp),%r11
3503(5): movzx 0xd(%rsp),%edx
3508(5): jmp 0xfffffa2e(%rip)
350d(5): mov 0x68(%rsp),%rdx
3512(3): movzx (%rdx),%eax
3515(2): test %al,%al
3517(6): jz 0xfffffe35(%rip)
351d(3): nop (%rax)
3520(3): cmp %r15,%r13
3523(2): jbe 0x6(%rip)
3525(4): mov %al,0x0(%r14,%r15,1)
3529(4): add $0x1,%r15
352d(5): movzx 0x0(%rdx,%r15,1),%eax
3532(2): test %al,%al
3534(2): jnz 0xffffffec(%rip)
3536(5): jmp 0xfffffe16(%rip)
353b(2): mov %edx,%eax
353d(5): jmp 0xfffff55a(%rip)
3542(4): movzx 0x0(%rax,%rcx,1),%ebx
3546(3): cmp $0x3e,%bl
3549(6): jnbe 0xfffff877(%rip)
354f(a): mov $0x8070630310989004800,%rax
3559(4): bt %rbx,%rax
355d(6): jnb 0xfffff863(%rip)
3563(5): cmp $0x0,0xf(%rsp)
3568(6): jnz 0x1ea(%rip)
356e(3): cmp %r15,%r13
3571(2): jbe 0x7(%rip)
3573(5): mov $0x3f,0x0(%r14,%r15,1)
3578(4): lea 0x1(%r15),%rax
357c(3): cmp %rax,%r13
357f(2): jbe 0x8(%rip)
3581(6): mov $0x22,0x1(%r14,%r15,1)
3587(4): lea 0x2(%r15),%rax
358b(3): cmp %rax,%r13
358e(2): jbe 0x8(%rip)
3590(6): mov $0x22,0x2(%r14,%r15,1)
3596(4): lea 0x3(%r15),%rax
359a(3): cmp %rax,%r13
359d(2): jbe 0x8(%rip)
359f(6): mov $0x3f,0x3(%r14,%r15,1)
35a5(4): add $0x4,%r15
35a9(2): xor %edx,%edx
35ab(3): xor %r12d,%r12d
35ae(2): xor %eax,%eax
35b0(3): mov %rcx,%rbp
35b3(5): jmp 0xfffff1c5(%rip)
35b8(2): test %ebx,%ebx
35ba(6): jz 0x18e(%rip)
35c0(7): lea 0x1d06(%rip),%rax
35c7(5): mov $0x1,0xe(%rsp)
35cc(5): mov $0x0,0x7c(%rsp)
35d1(3): xor %r12d,%r12d
35d4(9): mov $0x0,0x50(%rsp)
35dd(5): mov $0x1,0xf(%rsp)
35e2(5): mov $0x0,0xd(%rsp)
35e7(9): mov $0x1,0x18(%rsp)
35f0(3): xor %r15d,%r15d
35f3(5): mov %rax,0x48(%rsp)
35f8(5): jmp 0xfffff02b(%rip)
35fd(3): nop (%rax)
3600(3): mov %r11,%rbp
3603(5): movzx 0xf(%rsp),%eax
3608(5): jmp 0xfffffad1(%rip)
360d(7): lea 0x1cb7(%rip),%rax
3614(5): mov $0x1,0xe(%rsp)
3619(5): mov $0x0,0x7c(%rsp)
361e(3): xor %r12d,%r12d
3621(9): mov $0x0,0x50(%rsp)
362a(5): mov $0x1,0xf(%rsp)
362f(5): mov $0x1,0xd(%rsp)
3634(9): mov $0x1,0x18(%rsp)
363d(3): xor %r15d,%r15d
3640(5): mov %rax,0x48(%rsp)
3645(5): jmp 0xffffefde(%rip)
364a(2): mov %edx,%eax
364c(5): mov 0x48(%rsp),%rbx
3651(3): test %rbx,%rbx
3654(2): jz 0x2e(%rip)
3656(2): test %al,%al
3658(2): jz 0x2a(%rip)
365a(3): movzx (%rbx),%ecx
365d(3): mov %rbx,%rax
3660(2): test %cl,%cl
3662(2): jz 0x20(%rip)
3664(3): mov %r15,%rdx
3667(3): sub %r15,%rax
366a(3): cmp %rdx,%r13
366d(2): jbe 0x6(%rip)
366f(4): mov %cl,0x0(%r14,%rdx,1)
3673(4): add $0x1,%rdx
3677(4): movzx 0x0(%rax,%rdx,1),%ecx
367b(2): test %cl,%cl
367d(2): jnz 0xffffffed(%rip)
367f(3): mov %rdx,%r15
3682(3): cmp %r15,%r13
3685(6): jbe 0xfffffaa4(%rip)
368b(5): mov $0x0,0x0(%r14,%r15,1)
3690(5): jmp 0xfffffa99(%rip)
3695(5): cmp $0x2,0x8(%rsp)
369a(5): movzx 0xf(%rsp),%ebx
369f(3): mov %r11,%rbp
36a2(3): setz %al
36a5(4): mov %bl,0xd(%rsp)
36a9(5): jmp 0xfffffa30(%rip)
36ae(4): mov 0x8(%rsp),%esi
36b2(3): mov %rcx,%rdi
36b5(5): call 0xffffedab(%rip)
36ba(5): mov %rax,0x68(%rsp)
36bf(5): jmp 0xfffffc57(%rip)
36c4(4): mov 0x8(%rsp),%esi
36c8(3): mov %rcx,%rdi
36cb(5): call 0xffffed95(%rip)
36d0(5): mov %rax,0x60(%rsp)
36d5(5): jmp 0xfffffc6c(%rip)
36da(5): movzx 0xf(%rsp),%ebx
36df(3): mov %r11,%rbp
36e2(2): mov %edx,%eax
36e4(4): mov %bl,0xd(%rsp)
36e8(5): jmp 0xfffff9f1(%rip)
36ed(4): sub $0x8,%rsp
36f1(6): mov $0x5,%r8d
36f7(3): mov %r11,%rcx
36fa(4): push 0x68(%rsp)
36fe(4): push 0x78(%rsp)
3702(3): mov %r14,%rdi
3705(4): push 0x38(%rsp)
3709(8): mov 0x98(%rsp),%r9d
3711(5): mov 0x30(%rsp),%rdx
3716(5): mov 0x70(%rsp),%rsi
371b(5): call 0xffffee35(%rip)
3720(4): add $0x20,%rsp
3724(3): mov %rax,%r15
3727(5): jmp 0xfffffa02(%rip)
372c(5): movzx 0x7c(%rsp),%eax
3731(5): jmp 0xffffff1b(%rip)
3736(8): mov $0x2,0x8(%rsp)
373e(5): jmp 0xfffff99b(%rip)
3743(5): call 0xffffdc3d(%rip)
3748(5): mov $0x0,0xd(%rsp)
374d(5): jmp 0xfffffa74(%rip)
3752(3): mov %r11,%rbp
3755(5): jmp 0xfffff99b(%rip)
375a(5): mov $0x1,0xe(%rsp)
375f(2): xor %eax,%eax
3761(3): xor %r12d,%r12d
3764(9): mov $0x0,0x50(%rsp)
376d(5): jmp 0xfffff5a7(%rip)
3772(3): mov %r13,%rdx
3775(5): mov 0x50(%rsp),%r13
377a(5): jmp 0xfffff5f8(%rip)
377f(5): call 0xffffdb51(%rip)

"quotearg_n_options" :
3790(2): push %r15
3792(2): push %r14
3794(3): movsxd %edi,%r15
3797(2): push %r13
3799(2): push %r12
379b(3): mov %rdx,%r14
379e(1): push %rbp
379f(1): push %rbx
37a0(3): mov %rcx,%rbp
37a3(4): sub $0x28,%rsp
37a7(5): mov %rsi,0x8(%rsp)
37ac(5): call 0xffffdb34(%rip)
37b1(3): mov %rax,%r13
37b4(2): mov (%rax),%eax
37b6(3): test %r15d,%r15d
37b9(7): mov 0x2038a0(%rip),%rbx
37c0(4): mov %eax,0x18(%rsp)
37c4(6): js 0x16d(%rip)
37ca(7): cmp %r15d,0x203887(%rip)
37d1(2): jnle 0x64(%rip)
37d3(7): cmp $0x7fffffff,%r15d
37da(6): jz 0x15c(%rip)
37e0(4): lea 0x1(%r15),%r12d
37e4(7): lea 0x203885(%rip),%rax
37eb(3): movsxd %r12d,%rsi
37ee(4): shl/sal $0x4,%rsi
37f2(3): cmp %rax,%rbx
37f5(6): jz 0x11b(%rip)
37fb(3): mov %rbx,%rdi
37fe(5): call 0xf72(%rip)
3803(3): mov %rax,%rbx
3806(7): mov %rax,0x203853(%rip)
380d(7): movsxd 0x203844(%rip),%rdi
3814(3): mov %r12d,%edx
3817(2): xor %esi,%esi
3819(2): sub %edi,%edx
381b(4): shl/sal $0x4,%rdi
381f(3): movsxd %edx,%rdx
3822(3): add %rbx,%rdi
3825(4): shl/sal $0x4,%rdx
3829(5): call 0xffffdba7(%rip)
382e(7): mov %r12d,0x203823(%rip)
3835(3): mov 0x4(%rbp),%eax
3838(4): shl/sal $0x4,%r15
383c(4): sub $0x8,%rsp
3840(3): add %r15,%rbx
3843(4): lea 0x8(%rbp),%r15
3847(4): mov 0x0(%rbp),%r8d
384b(3): mov (%rbx),%r11
384e(4): mov 0x8(%rbx),%r12
3852(3): mov %r14,%rcx
3855(3): or $0x1,%eax
3858(4): mov %eax,0x24(%rsp)
385c(3): push 0x30(%rbp)
385f(3): mov %eax,%r9d
3862(3): push 0x28(%rbp)
3865(2): push %r15
3867(3): mov %r11,%rsi
386a(5): mov 0x28(%rsp),%rdx
386f(3): mov %r12,%rdi
3872(5): mov %r11,0x30(%rsp)
3877(5): call 0xffffecd9(%rip)
387c(4): add $0x20,%rsp
3880(5): mov 0x10(%rsp),%r11
3885(3): cmp %rax,%r11
3888(2): jnbe 0x69(%rip)
388a(4): lea 0x1(%rax),%rsi
388e(7): lea 0x20386b(%rip),%rax
3895(3): cmp %rax,%r12
3898(3): mov %rsi,(%rbx)
389b(2): jz 0x14(%rip)
389d(3): mov %r12,%rdi
38a0(5): mov %rsi,0x10(%rsp)
38a5(5): call 0xffffda1b(%rip)
38aa(5): mov 0x10(%rsp),%rsi
38af(3): mov %rsi,%rdi
38b2(5): mov %rsi,0x10(%rsp)
38b7(5): call 0xe59(%rip)
38bc(4): sub $0x8,%rsp
38c0(4): mov %rax,0x8(%rbx)
38c4(4): mov 0x0(%rbp),%r8d
38c8(3): push 0x30(%rbp)
38cb(3): push 0x28(%rbp)
38ce(3): mov %r14,%rcx
38d1(2): push %r15
38d3(5): mov 0x3c(%rsp),%r9d
38d8(3): mov %rax,%rdi
38db(5): mov 0x28(%rsp),%rdx
38e0(5): mov 0x30(%rsp),%rsi
38e5(3): mov %rax,%r12
38e8(5): call 0xffffec68(%rip)
38ed(4): add $0x20,%rsp
38f1(4): mov 0x18(%rsp),%eax
38f5(4): mov %eax,0x0(%r13)
38f9(4): add $0x28,%rsp
38fd(3): mov %r12,%rax
3900(1): pop %rbx
3901(1): pop %rbp
3902(2): pop %r12
3904(2): pop %r13
3906(2): pop %r14
3908(2): pop %r15
390a(1): ret near (%rsp)
390b(5): nop 0x0(%rax,%rax,1)
3910(2): xor %edi,%edi
3912(5): call 0xe5e(%rip)
3917(8): movdqa 0x203751(%rip),%xmm0
391f(3): mov %rax,%rbx
3922(7): mov %rax,0x203737(%rip)
3929(3): movups %xmm0,(%rax)
392c(5): jmp 0xfffffee1(%rip)
3931(5): call 0xffffd99f(%rip)
3936(5): call 0x102a(%rip)

"clone_quoting_options" :
3940(2): push %r12
3942(1): push %rbp
3943(1): push %rbx
3944(3): mov %rdi,%rbx
3947(5): call 0xffffd999(%rip)
394c(3): mov (%rax),%r12d
394f(3): mov %rax,%rbp
3952(7): lea 0x2038a7(%rip),%rax
3959(3): test %rbx,%rbx
395c(5): mov $0x38,%esi
3961(4): cmove %rax,%rbx
3965(3): mov %rbx,%rdi
3968(5): call 0xfa8(%rip)
396d(4): mov %r12d,0x0(%rbp)
3971(1): pop %rbx
3972(1): pop %rbp
3973(2): pop %r12
3975(1): ret near (%rsp)

"get_quoting_style" :
3980(7): lea 0x203879(%rip),%rax
3987(3): test %rdi,%rdi
398a(4): cmove %rax,%rdi
398e(2): mov (%rdi),%eax
3990(1): ret near (%rsp)

"set_quoting_style" :
39a0(7): lea 0x203859(%rip),%rax
39a7(3): test %rdi,%rdi
39aa(4): cmove %rax,%rdi
39ae(2): mov %esi,(%rdi)
39b0(1): ret near (%rsp)

"set_char_quoting" :
39c0(7): lea 0x203839(%rip),%rax
39c7(3): test %rdi,%rdi
39ca(2): mov %esi,%ecx
39cc(4): cmove %rax,%rdi
39d0(2): mov %esi,%eax
39d2(3): and $0x1f,%ecx
39d5(3): shr $0x5,%al
39d8(3): movzx %al,%eax
39db(5): lea 0x8(%rdi,%rax,4),%rdi
39e0(2): mov (%rdi),%esi
39e2(2): mov %esi,%eax
39e4(2): shr %cl,%eax
39e6(2): xor %eax,%edx
39e8(3): and $0x1,%eax
39eb(3): and $0x1,%edx
39ee(2): shl/sal %cl,%edx
39f0(2): xor %esi,%edx
39f2(2): mov %edx,(%rdi)
39f4(1): ret near (%rsp)

"set_quoting_flags" :
3a00(7): lea 0x2037f9(%rip),%rax
3a07(3): test %rdi,%rdi
3a0a(4): cmove %rax,%rdi
3a0e(3): mov 0x4(%rdi),%eax
3a11(3): mov %esi,0x4(%rdi)
3a14(1): ret near (%rsp)

"set_custom_quoting" :
3a20(7): lea 0x2037d9(%rip),%rax
3a27(3): test %rdi,%rdi
3a2a(4): cmove %rax,%rdi
3a2e(3): test %rsi,%rsi
3a31(6): mov $0xa,(%rdi)
3a37(2): jz 0x10(%rip)
3a39(3): test %rdx,%rdx
3a3c(2): jz 0xb(%rip)
3a3e(4): mov %rsi,0x28(%rdi)
3a42(4): mov %rdx,0x30(%rdi)
3a46(1): ret near (%rsp)
3a47(4): sub $0x8,%rsp
3a4b(5): call 0xffffd885(%rip)

"quotearg_buffer" :
3a50(2): push %r15
3a52(2): push %r14
3a54(7): lea 0x2037a5(%rip),%rax
3a5b(2): push %r13
3a5d(2): push %r12
3a5f(3): mov %rdi,%r13
3a62(1): push %rbp
3a63(1): push %rbx
3a64(3): mov %r8,%rbx
3a67(3): mov %rsi,%r14
3a6a(3): mov %rdx,%r15
3a6d(4): sub $0x18,%rsp
3a71(3): test %r8,%r8
3a74(4): cmove %rax,%rbx
3a78(5): mov %rcx,0x8(%rsp)
3a7d(5): call 0xffffd863(%rip)
3a82(3): mov (%rax),%r12d
3a85(3): mov %rax,%rbp
3a88(4): lea 0x8(%rbx),%rax
3a8c(4): sub $0x8,%rsp
3a90(4): mov 0x4(%rbx),%r9d
3a94(3): push 0x30(%rbx)
3a97(3): mov (%rbx),%r8d
3a9a(3): push 0x28(%rbx)
3a9d(3): mov %r15,%rdx
3aa0(1): push %rax
3aa1(5): mov 0x28(%rsp),%rcx
3aa6(3): mov %r14,%rsi
3aa9(3): mov %r13,%rdi
3aac(5): call 0xffffeaa4(%rip)
3ab1(4): mov %r12d,0x0(%rbp)
3ab5(4): add $0x38,%rsp
3ab9(1): pop %rbx
3aba(1): pop %rbp
3abb(2): pop %r12
3abd(2): pop %r13
3abf(2): pop %r14
3ac1(2): pop %r15
3ac3(1): ret near (%rsp)

"quotearg_alloc_mem" :
3ad0(2): push %r15
3ad2(2): push %r14
3ad4(7): lea 0x203725(%rip),%rax
3adb(2): push %r13
3add(2): push %r12
3adf(3): mov %rdx,%r12
3ae2(1): push %rbp
3ae3(1): push %rbx
3ae4(3): mov %rcx,%rbx
3ae7(3): mov %rdi,%r14
3aea(3): mov %rsi,%r15
3aed(4): sub $0x38,%rsp
3af1(3): test %rcx,%rcx
3af4(4): cmove %rax,%rbx
3af8(2): xor %ebp,%ebp
3afa(5): call 0xffffd7e6(%rip)
3aff(3): test %r12,%r12
3b02(3): mov %rax,%r13
3b05(2): mov (%rax),%eax
3b07(4): setz %bpl
3b0b(3): or 0x4(%rbx),%ebp
3b0e(4): lea 0x8(%rbx),%r10
3b12(4): sub $0x8,%rsp
3b16(3): mov (%rbx),%r8d
3b19(3): mov %r15,%rcx
3b1c(4): mov %eax,0x14(%rsp)
3b20(3): push 0x30(%rbx)
3b23(3): mov %r14,%rdx
3b26(3): push 0x28(%rbx)
3b29(2): push %r10
3b2b(2): xor %esi,%esi
3b2d(3): mov %ebp,%r9d
3b30(2): xor %edi,%edi
3b32(5): mov %r10,0x40(%rsp)
3b37(5): call 0xffffea19(%rip)
3b3c(4): lea 0x1(%rax),%rsi
3b40(5): mov %rax,0x48(%rsp)
3b45(4): add $0x20,%rsp
3b49(3): mov %rsi,%rdi
3b4c(5): mov %rsi,0x18(%rsp)
3b51(5): call 0xbbf(%rip)
3b56(5): mov %rax,0x10(%rsp)
3b5b(4): sub $0x8,%rsp
3b5f(3): push 0x30(%rbx)
3b62(3): push 0x28(%rbx)
3b65(5): mov 0x38(%rsp),%r10
3b6a(3): mov %ebp,%r9d
3b6d(3): mov (%rbx),%r8d
3b70(3): mov %r15,%rcx
3b73(3): mov %r14,%rdx
3b76(3): mov %rax,%rdi
3b79(2): push %r10
3b7b(5): mov 0x38(%rsp),%rsi
3b80(5): call 0xffffe9d0(%rip)
3b85(4): mov 0x2c(%rsp),%eax
3b89(4): add $0x20,%rsp
3b8d(3): test %r12,%r12
3b90(4): mov %eax,0x0(%r13)
3b94(2): jz 0xb(%rip)
3b96(5): mov 0x28(%rsp),%r11
3b9b(4): mov %r11,(%r12)
3b9f(5): mov 0x10(%rsp),%rax
3ba4(4): add $0x38,%rsp
3ba8(1): pop %rbx
3ba9(1): pop %rbp
3baa(2): pop %r12
3bac(2): pop %r13
3bae(2): pop %r14
3bb0(2): pop %r15
3bb2(1): ret near (%rsp)

"quotearg_alloc" :
3bc0(3): mov %rdx,%rcx
3bc3(2): xor %edx,%edx
3bc5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3bd0(6): mov 0x203482(%rip),%eax
3bd6(2): push %r12
3bd8(7): mov 0x203481(%rip),%r12
3bdf(1): push %rbp
3be0(1): push %rbx
3be1(3): cmp $0x1,%eax
3be4(2): jle 0x2d(%rip)
3be6(3): sub $0x2,%eax
3be9(5): lea 0x18(%r12),%rbx
3bee(4): shl/sal $0x4,%rax
3bf2(5): lea 0x28(%r12,%rax,1),%rbp
3bf7(9): nop 0x0(%rax,%rax,1)
3c00(3): mov (%rbx),%rdi
3c03(4): add $0x10,%rbx
3c07(5): call 0xffffd6b9(%rip)
3c0c(3): cmp %rbp,%rbx
3c0f(2): jnz 0xfffffff1(%rip)
3c11(5): mov 0x8(%r12),%rdi
3c16(7): lea 0x2034e3(%rip),%rbx
3c1d(3): cmp %rbx,%rdi
3c20(2): jz 0x19(%rip)
3c22(5): call 0xffffd69e(%rip)
3c27(b): mov $0x100,0x20343e(%rip)
3c32(7): mov %rbx,0x20343f(%rip)
3c39(7): lea 0x203430(%rip),%rbx
3c40(3): cmp %rbx,%r12
3c43(2): jz 0x11(%rip)
3c45(3): mov %r12,%rdi
3c48(5): call 0xffffd678(%rip)
3c4d(7): mov %rbx,0x20340c(%rip)
3c54(1): pop %rbx
3c55(a): mov $0x1,0x2033f9(%rip)
3c5f(1): pop %rbp
3c60(2): pop %r12
3c62(1): ret near (%rsp)

"quotearg_n" :
3c70(7): lea 0x203589(%rip),%rcx
3c77(7): mov $0xffffffff,%rdx
3c7e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3c90(7): lea 0x203569(%rip),%rcx
3c97(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3ca0(7): lea 0x203559(%rip),%rcx
3ca7(3): mov %rdi,%rsi
3caa(7): mov $0xffffffff,%rdx
3cb1(2): xor %edi,%edi
3cb3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3cc0(7): lea 0x203539(%rip),%rcx
3cc7(3): mov %rsi,%rdx
3cca(3): mov %rdi,%rsi
3ccd(2): xor %edi,%edi
3ccf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3ce0(4): sub $0x48,%rsp
3ce4(3): mov %rdx,%rax
3ce7(9): mov $0x28,%rdx
3cf0(5): mov %rdx,0x38(%rsp)
3cf5(2): xor %edx,%edx
3cf7(3): cmp $0xa,%esi
3cfa(2): jz 0x6a(%rip)
3cfc(3): mov %esi,(%rsp)
3cff(3): mov %rsp,%rcx
3d02(7): mov $0xffffffff,%rdx
3d09(3): mov %rax,%rsi
3d0c(9): mov $0x0,0x4(%rsp)
3d15(9): mov $0x0,0xc(%rsp)
3d1e(9): mov $0x0,0x14(%rsp)
3d27(9): mov $0x0,0x1c(%rsp)
3d30(9): mov $0x0,0x24(%rsp)
3d39(9): mov $0x0,0x2c(%rsp)
3d42(8): mov $0x0,0x34(%rsp)
3d4a(5): call 0xfffffa46(%rip)
3d4f(5): mov 0x38(%rsp),%rcx
3d54(9): xor $0x28,%rcx
3d5d(2): jnz 0xc(%rip)
3d5f(4): add $0x48,%rsp
3d63(1): ret near (%rsp)
3d64(5): call 0xffffd56c(%rip)
3d69(5): call 0xffffd617(%rip)

"quotearg_n_style_mem" :
3d70(4): sub $0x48,%rsp
3d74(3): mov %rdx,%rax
3d77(3): mov %rcx,%rdx
3d7a(9): mov $0x28,%rcx
3d83(5): mov %rcx,0x38(%rsp)
3d88(2): xor %ecx,%ecx
3d8a(3): cmp $0xa,%esi
3d8d(2): jz 0x63(%rip)
3d8f(3): mov %esi,(%rsp)
3d92(3): mov %rsp,%rcx
3d95(3): mov %rax,%rsi
3d98(9): mov $0x0,0x4(%rsp)
3da1(9): mov $0x0,0xc(%rsp)
3daa(9): mov $0x0,0x14(%rsp)
3db3(9): mov $0x0,0x1c(%rsp)
3dbc(9): mov $0x0,0x24(%rsp)
3dc5(9): mov $0x0,0x2c(%rsp)
3dce(8): mov $0x0,0x34(%rsp)
3dd6(5): call 0xfffff9ba(%rip)
3ddb(5): mov 0x38(%rsp),%rdx
3de0(9): xor $0x28,%rdx
3de9(2): jnz 0xc(%rip)
3deb(4): add $0x48,%rsp
3def(1): ret near (%rsp)
3df0(5): call 0xffffd4e0(%rip)
3df5(5): call 0xffffd58b(%rip)

"quotearg_style" :
3e00(3): mov %rsi,%rdx
3e03(2): mov %edi,%esi
3e05(2): xor %edi,%edi
3e07(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3e10(3): mov %rdx,%rcx
3e13(3): mov %rsi,%rdx
3e16(2): mov %edi,%esi
3e18(2): xor %edi,%edi
3e1a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3e20(4): sub $0x48,%rsp
3e24(2): mov %edx,%ecx
3e26(9): mov $0x28,%rax
3e2f(5): mov %rax,0x38(%rsp)
3e34(2): xor %eax,%eax
3e36(7): mov 0x2033f3(%rip),%rax
3e3d(3): mov %rsp,%r8
3e40(3): and $0x1f,%ecx
3e43(8): movdqa 0x2033b5(%rip),%xmm0
3e4b(5): mov %rax,0x30(%rsp)
3e50(2): mov %edx,%eax
3e52(4): movaps %xmm0,(%rsp)
3e56(3): shr $0x5,%al
3e59(3): movzx %al,%eax
3e5c(5): lea 0x8(%r8,%rax,4),%r9
3e61(8): movdqa 0x2033a7(%rip),%xmm0
3e69(5): movaps %xmm0,0x10(%rsp)
3e6e(8): movdqa 0x2033aa(%rip),%xmm0
3e76(5): movaps %xmm0,0x20(%rsp)
3e7b(3): mov (%r9),%edx
3e7e(2): mov %edx,%eax
3e80(2): shr %cl,%eax
3e82(2): not %eax
3e84(3): and $0x1,%eax
3e87(2): shl/sal %cl,%eax
3e89(3): mov %r8,%rcx
3e8c(2): xor %edx,%eax
3e8e(3): mov %rsi,%rdx
3e91(3): mov %rdi,%rsi
3e94(3): mov %eax,(%r9)
3e97(2): xor %edi,%edi
3e99(5): call 0xfffff8f7(%rip)
3e9e(5): mov 0x38(%rsp),%rsi
3ea3(9): xor $0x28,%rsi
3eac(2): jnz 0x7(%rip)
3eae(4): add $0x48,%rsp
3eb2(1): ret near (%rsp)
3eb3(5): call 0xffffd4cd(%rip)

"quotearg_char" :
3ec0(4): movsx %sil,%edx
3ec4(7): mov $0xffffffff,%rsi
3ecb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3ed0(5): mov $0x3a,%edx
3ed5(7): mov $0xffffffff,%rsi
3edc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3ef0(5): mov $0x3a,%edx
3ef5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3f00(4): sub $0x48,%rsp
3f04(3): mov %rdx,%rax
3f07(9): mov $0x28,%rdx
3f10(5): mov %rdx,0x38(%rsp)
3f15(2): xor %edx,%edx
3f17(3): cmp $0xa,%esi
3f1a(2): jz 0x6a(%rip)
3f1c(3): mov %esi,(%rsp)
3f1f(3): mov %rsp,%rcx
3f22(7): mov $0xffffffff,%rdx
3f29(3): mov %rax,%rsi
3f2c(9): mov $0x0,0x4(%rsp)
3f35(9): mov $0x4000000,0xc(%rsp)
3f3e(9): mov $0x0,0x14(%rsp)
3f47(9): mov $0x0,0x1c(%rsp)
3f50(9): mov $0x0,0x24(%rsp)
3f59(9): mov $0x0,0x2c(%rsp)
3f62(8): mov $0x0,0x34(%rsp)
3f6a(5): call 0xfffff826(%rip)
3f6f(5): mov 0x38(%rsp),%rcx
3f74(9): xor $0x28,%rcx
3f7d(2): jnz 0xc(%rip)
3f7f(4): add $0x48,%rsp
3f83(1): ret near (%rsp)
3f84(5): call 0xffffd34c(%rip)
3f89(5): call 0xffffd3f7(%rip)

"quotearg_n_custom_mem" :
3f90(4): sub $0x48,%rsp
3f94(3): mov %rcx,%r9
3f97(7): mov 0x203292(%rip),%rcx
3f9e(8): movdqa 0x20325a(%rip),%xmm0
3fa6(9): mov $0x28,%rax
3faf(5): mov %rax,0x38(%rsp)
3fb4(2): xor %eax,%eax
3fb6(4): movaps %xmm0,(%rsp)
3fba(3): test %rsi,%rsi
3fbd(5): mov %rcx,0x30(%rsp)
3fc2(7): mov $0xa,(%rsp)
3fc9(8): movdqa 0x20323f(%rip),%xmm0
3fd1(5): movaps %xmm0,0x10(%rsp)
3fd6(8): movdqa 0x203242(%rip),%xmm0
3fde(5): movaps %xmm0,0x20(%rsp)
3fe3(2): jz 0x34(%rip)
3fe5(3): test %rdx,%rdx
3fe8(2): jz 0x2f(%rip)
3fea(5): mov %rsi,0x28(%rsp)
3fef(5): mov %rdx,0x30(%rsp)
3ff4(3): mov %rsp,%rcx
3ff7(3): mov %r8,%rdx
3ffa(3): mov %r9,%rsi
3ffd(5): call 0xfffff793(%rip)
4002(5): mov 0x38(%rsp),%rdi
4007(9): xor $0x28,%rdi
4010(2): jnz 0xc(%rip)
4012(4): add $0x48,%rsp
4016(1): ret near (%rsp)
4017(5): call 0xffffd2b9(%rip)
401c(5): call 0xffffd364(%rip)

"quotearg_n_custom" :
4030(7): mov $0xffffffff,%r8
4037(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4040(3): mov %rdx,%rcx
4043(7): mov $0xffffffff,%r8
404a(3): mov %rsi,%rdx
404d(3): mov %rdi,%rsi
4050(2): xor %edi,%edi
4052(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4060(3): mov %rcx,%r8
4063(3): mov %rdx,%rcx
4066(3): mov %rsi,%rdx
4069(3): mov %rdi,%rsi
406c(2): xor %edi,%edi
406e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4080(7): lea 0x202f99(%rip),%rcx
4087(5): jmp 0xfffff709(%rip)

"quote_mem" :
4090(7): lea 0x202f89(%rip),%rcx
4097(3): mov %rsi,%rdx
409a(3): mov %rdi,%rsi
409d(2): xor %edi,%edi
409f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
40b0(7): lea 0x202f69(%rip),%rcx
40b7(7): mov $0xffffffff,%rdx
40be(5): jmp 0xfffff6d2(%rip)

"quote" :
40d0(7): lea 0x202f49(%rip),%rcx
40d7(3): mov %rdi,%rsi
40da(7): mov $0xffffffff,%rdx
40e1(2): xor %edi,%edi
40e3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
40f0(2): push %r15
40f2(2): push %r14
40f4(2): push %r13
40f6(2): push %r12
40f8(3): mov %r9,%r12
40fb(1): push %rbp
40fc(1): push %rbx
40fd(3): mov %rdi,%rbp
4100(3): mov %r8,%rbx
4103(4): sub $0x28,%rsp
4107(3): test %rsi,%rsi
410a(6): jz 0x11e(%rip)
4110(3): mov %rdx,%r8
4113(7): lea 0x166e(%rip),%rdx
411a(3): mov %rcx,%r9
411d(2): xor %eax,%eax
411f(3): mov %rsi,%rcx
4122(5): mov $0x1,%esi
4127(5): call 0xffffd409(%rip)
412c(7): lea 0x1668(%rip),%rsi
4133(2): xor %edi,%edi
4135(5): mov $0x5,%edx
413a(5): call 0xffffd216(%rip)
413f(7): lea 0x197a(%rip),%rdx
4146(3): mov %rax,%rcx
4149(6): mov $0x7e3,%r8d
414f(5): mov $0x1,%esi
4154(3): mov %rbp,%rdi
4157(2): xor %eax,%eax
4159(5): call 0xffffd3d7(%rip)
415e(7): lea 0x16c3(%rip),%rsi
4165(2): xor %edi,%edi
4167(5): mov $0x5,%edx
416c(5): call 0xffffd1e4(%rip)
4171(3): mov %rbp,%rsi
4174(3): mov %rax,%rdi
4177(5): call 0xffffd279(%rip)
417c(4): cmp $0x9,%r12
4180(6): jnbe 0x340(%rip)
4186(7): lea 0x18fb(%rip),%rdx
418d(4): movsxd 0x0(%rdx,%r12,4),%rax
4191(3): add %rdx,%rax
4194(2): jmp %rax
4196(a): nop 0x0(%rax,%rax,1)
41a0(4): mov 0x38(%rbx),%r9
41a4(4): mov 0x10(%rbx),%rax
41a8(7): lea 0x17e9(%rip),%rsi
41af(4): mov 0x8(%rbx),%r8
41b3(5): mov $0x5,%edx
41b8(2): xor %edi,%edi
41ba(4): mov 0x30(%rbx),%r13
41be(4): mov 0x28(%rbx),%r12
41c2(5): mov %r9,0x10(%rsp)
41c7(4): mov 0x20(%rbx),%r15
41cb(4): mov 0x18(%rbx),%r14
41cf(4): mov %rax,(%rsp)
41d3(5): mov %r8,0x8(%rsp)
41d8(3): mov (%rbx),%rbx
41db(5): call 0xffffd175(%rip)
41e0(4): sub $0x8,%rsp
41e4(5): mov 0x18(%rsp),%r9
41e9(3): mov %rax,%rdx
41ec(3): mov %rbx,%rcx
41ef(5): mov $0x1,%esi
41f4(3): mov %rbp,%rdi
41f7(2): xor %eax,%eax
41f9(2): push %r9
41fb(2): push %r13
41fd(2): push %r12
41ff(2): push %r15
4201(2): push %r14
4203(5): mov 0x30(%rsp),%r9
4208(5): mov 0x38(%rsp),%r8
420d(5): call 0xffffd323(%rip)
4212(4): add $0x30,%rsp
4216(4): add $0x28,%rsp
421a(1): pop %rbx
421b(1): pop %rbp
421c(2): pop %r12
421e(2): pop %r13
4220(2): pop %r14
4222(2): pop %r15
4224(1): ret near (%rsp)
4225(3): nop (%rax)
4228(3): mov %rcx,%r8
422b(3): mov %rdx,%rcx
422e(7): lea 0x155f(%rip),%rdx
4235(5): mov $0x1,%esi
423a(2): xor %eax,%eax
423c(5): call 0xffffd2f4(%rip)
4241(5): jmp 0xfffffeeb(%rip)
4246(a): nop 0x0(%rax,%rax,1)
4250(4): mov 0x40(%rbx),%r10
4254(4): mov 0x38(%rbx),%r9
4258(7): lea 0x1769(%rip),%rsi
425f(4): mov 0x10(%rbx),%rax
4263(4): mov 0x8(%rbx),%r8
4267(5): mov $0x5,%edx
426c(4): mov 0x30(%rbx),%r13
4270(4): mov 0x28(%rbx),%r12
4274(4): mov 0x20(%rbx),%r15
4278(4): mov 0x18(%rbx),%r14
427c(3): mov (%rbx),%rbx
427f(5): mov %r10,0x18(%rsp)
4284(5): mov %r9,0x10(%rsp)
4289(4): mov %rax,(%rsp)
428d(5): mov %r8,0x8(%rsp)
4292(2): xor %edi,%edi
4294(5): call 0xffffd0bc(%rip)
4299(5): mov 0x18(%rsp),%r10
429e(2): push %r10
42a0(5): jmp 0xffffff44(%rip)
42a5(3): nop (%rax)
42a8(3): mov (%rbx),%rbx
42ab(7): lea 0x14ed(%rip),%rsi
42b2(5): mov $0x5,%edx
42b7(2): xor %edi,%edi
42b9(5): call 0xffffd097(%rip)
42be(4): add $0x28,%rsp
42c2(3): mov %rbx,%rcx
42c5(3): mov %rbp,%rdi
42c8(1): pop %rbx
42c9(1): pop %rbp
42ca(2): pop %r12
42cc(2): pop %r13
42ce(2): pop %r14
42d0(2): pop %r15
42d2(3): mov %rax,%rdx
42d5(5): mov $0x1,%esi
42da(2): xor %eax,%eax
42dc(5): jmp 0xffffd254(%rip)
42e1(7): nop 0x0(%rax)
42e8(4): mov 0x8(%rbx),%r12
42ec(7): lea 0x14bc(%rip),%rsi
42f3(3): mov (%rbx),%rbx
42f6(5): mov $0x5,%edx
42fb(2): xor %edi,%edi
42fd(5): call 0xffffd053(%rip)
4302(4): add $0x28,%rsp
4306(3): mov %r12,%r8
4309(3): mov %rbx,%rcx
430c(3): mov %rbp,%rdi
430f(3): mov %rax,%rdx
4312(5): mov $0x1,%esi
4317(1): pop %rbx
4318(1): pop %rbp
4319(2): pop %r12
431b(2): pop %r13
431d(2): pop %r14
431f(2): pop %r15
4321(2): xor %eax,%eax
4323(5): jmp 0xffffd20d(%rip)
4328(8): nop 0x0(%rax,%rax,1)
4330(4): mov 0x10(%rbx),%r13
4334(4): mov 0x8(%rbx),%r12
4338(7): lea 0x1487(%rip),%rsi
433f(3): mov (%rbx),%rbx
4342(5): mov $0x5,%edx
4347(2): xor %edi,%edi
4349(5): call 0xffffd007(%rip)
434e(4): add $0x28,%rsp
4352(3): mov %r13,%r9
4355(3): mov %r12,%r8
4358(3): mov %rbx,%rcx
435b(3): mov %rbp,%rdi
435e(3): mov %rax,%rdx
4361(1): pop %rbx
4362(1): pop %rbp
4363(2): pop %r12
4365(2): pop %r13
4367(2): pop %r14
4369(2): pop %r15
436b(5): mov $0x1,%esi
4370(2): xor %eax,%eax
4372(5): jmp 0xffffd1be(%rip)
4377(9): nop 0x0(%rax,%rax,1)
4380(7): lea 0x1571(%rip),%rsi
4387(5): mov $0x5,%edx
438c(2): xor %edi,%edi
438e(4): mov 0x18(%rbx),%r14
4392(4): mov 0x10(%rbx),%r13
4396(4): mov 0x8(%rbx),%r12
439a(3): mov (%rbx),%rbx
439d(5): call 0xffffcfb3(%rip)
43a2(4): sub $0x8,%rsp
43a6(2): push %r14
43a8(3): mov %rax,%rdx
43ab(3): mov %r13,%r9
43ae(3): mov %r12,%r8
43b1(3): mov %rbx,%rcx
43b4(3): mov %rbp,%rdi
43b7(5): mov $0x1,%esi
43bc(2): xor %eax,%eax
43be(5): call 0xffffd172(%rip)
43c3(1): pop %rax
43c4(1): pop %rdx
43c5(4): add $0x28,%rsp
43c9(1): pop %rbx
43ca(1): pop %rbp
43cb(2): pop %r12
43cd(2): pop %r13
43cf(2): pop %r14
43d1(2): pop %r15
43d3(1): ret near (%rsp)
43d4(4): nop 0x0(%rax)
43d8(4): mov 0x20(%rbx),%r15
43dc(7): lea 0x1535(%rip),%rsi
43e3(5): mov $0x5,%edx
43e8(2): xor %edi,%edi
43ea(4): mov 0x18(%rbx),%r14
43ee(4): mov 0x10(%rbx),%r13
43f2(4): mov 0x8(%rbx),%r12
43f6(3): mov (%rbx),%rbx
43f9(5): call 0xffffcf57(%rip)
43fe(2): push %r15
4400(2): jmp 0xffffffa6(%rip)
4402(6): nop 0x0(%rax,%rax,1)
4408(4): mov 0x8(%rbx),%r8
440c(4): mov 0x28(%rbx),%r12
4410(7): lea 0x1529(%rip),%rsi
4417(4): mov 0x20(%rbx),%r15
441b(4): mov 0x18(%rbx),%r14
441f(5): mov $0x5,%edx
4424(4): mov 0x10(%rbx),%r13
4428(2): xor %edi,%edi
442a(3): mov (%rbx),%rbx
442d(4): mov %r8,(%rsp)
4431(5): call 0xffffcf1f(%rip)
4436(4): sub $0x8,%rsp
443a(3): mov %r13,%r9
443d(2): push %r12
443f(2): push %r15
4441(2): push %r14
4443(5): mov 0x20(%rsp),%r8
4448(3): mov %rbx,%rcx
444b(3): mov %rax,%rdx
444e(3): mov %rbp,%rdi
4451(5): mov $0x1,%esi
4456(2): xor %eax,%eax
4458(5): call 0xffffd0d8(%rip)
445d(4): add $0x20,%rsp
4461(4): add $0x28,%rsp
4465(1): pop %rbx
4466(1): pop %rbp
4467(2): pop %r12
4469(2): pop %r13
446b(2): pop %r14
446d(2): pop %r15
446f(1): ret near (%rsp)
4470(4): mov 0x10(%rbx),%r9
4474(4): mov 0x30(%rbx),%r13
4478(7): lea 0x14e9(%rip),%rsi
447f(4): mov 0x28(%rbx),%r12
4483(4): mov 0x20(%rbx),%r15
4487(5): mov $0x5,%edx
448c(4): mov 0x18(%rbx),%r14
4490(4): mov 0x8(%rbx),%r8
4494(2): xor %edi,%edi
4496(5): mov %r9,0x8(%rsp)
449b(3): mov (%rbx),%rbx
449e(4): mov %r8,(%rsp)
44a2(5): call 0xffffceae(%rip)
44a7(2): push %r13
44a9(2): push %r12
44ab(2): push %r15
44ad(2): push %r14
44af(5): mov 0x28(%rsp),%r9
44b4(2): jmp 0xffffff8f(%rip)
44b6(a): nop 0x0(%rax,%rax,1)
44c0(4): mov 0x40(%rbx),%r10
44c4(4): mov 0x38(%rbx),%r9
44c8(5): mov $0x5,%edx
44cd(4): mov 0x10(%rbx),%rax
44d1(4): mov 0x8(%rbx),%r8
44d5(7): lea 0x1524(%rip),%rsi
44dc(4): mov 0x30(%rbx),%r13
44e0(4): mov 0x28(%rbx),%r12
44e4(4): mov 0x20(%rbx),%r15
44e8(4): mov 0x18(%rbx),%r14
44ec(5): mov %r10,0x18(%rsp)
44f1(5): mov %r9,0x10(%rsp)
44f6(4): mov %rax,(%rsp)
44fa(5): mov %r8,0x8(%rsp)
44ff(3): mov (%rbx),%rbx
4502(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4510(3): xor %r9d,%r9d
4513(4): cmp $0x0,(%r8)
4517(2): jz 0x14(%rip)
4519(7): nop 0x0(%rax)
4520(4): add $0x1,%r9
4524(5): cmp $0x0,0x0(%r8,%r9,8)
4529(2): jnz 0xfffffff7(%rip)
452b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4530(4): sub $0x68,%rsp
4534(3): mov %r8,%r10
4537(3): xor %r9d,%r9d
453a(9): mov $0x28,%rax
4543(5): mov %rax,0x58(%rsp)
4548(2): xor %eax,%eax
454a(3): mov %rsp,%r8
454d(3): nop (%rax)
4550(3): mov (%r10),%eax
4553(3): cmp $0x2f,%eax
4556(2): jnbe 0x44(%rip)
4558(3): mov %eax,%r11d
455b(4): add 0x10(%r10),%r11
455f(3): add $0x8,%eax
4562(3): mov %eax,(%r10)
4565(3): mov (%r11),%rax
4568(3): test %rax,%rax
456b(4): mov %rax,0x0(%r8,%r9,8)
456f(2): jz 0xc(%rip)
4571(4): add $0x1,%r9
4575(4): cmp $0xa,%r9
4579(2): jnz 0xffffffd7(%rip)
457b(5): call 0xfffffb75(%rip)
4580(5): mov 0x58(%rsp),%rax
4585(9): xor $0x28,%rax
458e(2): jnz 0x7(%rip)
4590(4): add $0x68,%rsp
4594(1): ret near (%rsp)
4595(5): call 0xffffcdeb(%rip)
459a(4): mov 0x8(%r10),%r11
459e(4): lea 0x8(%r11),%rax
45a2(4): mov %rax,0x8(%r10)
45a6(2): jmp 0xffffffbf(%rip)

"version_etc" :
45b0(1): push %rbp
45b1(1): push %rbx
45b2(6): mov $0x20,%r10d
45b8(3): xor %r11d,%r11d
45bb(7): sub $0xb8,%rsp
45c2(9): mov $0x28,%rax
45cb(5): mov %rax,0x78(%rsp)
45d0(2): xor %eax,%eax
45d2(8): lea 0xd0(%rsp),%rax
45da(8): mov %r8,0xa0(%rsp)
45e2(8): lea 0xd0(%rsp),%rbx
45ea(5): lea 0x20(%rsp),%r8
45ef(8): mov %r9,0xa8(%rsp)
45f7(8): mov $0x20,0x8(%rsp)
45ff(5): mov %rax,0x10(%rsp)
4604(8): lea 0x80(%rsp),%rax
460c(3): xor %r9d,%r9d
460f(5): mov %rax,0x18(%rsp)
4614(3): mov %rax,%rbp
4617(9): nop 0x0(%rax,%rax,1)
4620(4): cmp $0x2f,%r10d
4624(2): jnbe 0x58(%rip)
4626(3): mov %r10d,%eax
4629(6): mov $0x1,%r11d
462f(4): add $0x8,%r10d
4633(3): add %rbp,%rax
4636(3): mov (%rax),%rax
4639(3): test %rax,%rax
463c(4): mov %rax,0x0(%r8,%r9,8)
4640(2): jz 0xc(%rip)
4642(4): add $0x1,%r9
4646(4): cmp $0xa,%r9
464a(2): jnz 0xffffffd6(%rip)
464c(3): test %r11b,%r11b
464f(2): jnz 0x26(%rip)
4651(5): call 0xfffffa9f(%rip)
4656(5): mov 0x78(%rsp),%rax
465b(9): xor $0x28,%rax
4664(2): jnz 0xc(%rip)
4666(7): add $0xb8,%rsp
466d(1): pop %rbx
466e(1): pop %rbp
466f(1): ret near (%rsp)
4670(5): call 0xffffcd10(%rip)
4675(5): mov %r10d,0x8(%rsp)
467a(2): jmp 0xffffffd7(%rip)
467c(3): mov %rbx,%rax
467f(4): add $0x8,%rbx
4683(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4690(1): push %rbx
4691(7): lea 0x114a(%rip),%rsi
4698(5): mov $0x5,%edx
469d(2): xor %edi,%edi
469f(5): call 0xffffccb1(%rip)
46a4(7): lea 0x114c(%rip),%rdx
46ab(3): mov %rax,%rsi
46ae(5): mov $0x1,%edi
46b3(2): xor %eax,%eax
46b5(5): call 0xffffce0b(%rip)
46ba(7): lea 0x114c(%rip),%rsi
46c1(5): mov $0x5,%edx
46c6(2): xor %edi,%edi
46c8(5): call 0xffffcc88(%rip)
46cd(7): lea 0x9e4(%rip),%rcx
46d4(7): lea 0x6c6(%rip),%rdx
46db(3): mov %rax,%rsi
46de(5): mov $0x1,%edi
46e3(2): xor %eax,%eax
46e5(5): call 0xffffcddb(%rip)
46ea(7): mov 0x202997(%rip),%rbx
46f1(7): lea 0x1348(%rip),%rsi
46f8(2): xor %edi,%edi
46fa(5): mov $0x5,%edx
46ff(5): call 0xffffcc51(%rip)
4704(3): mov %rbx,%rsi
4707(3): mov %rax,%rdi
470a(1): pop %rbx
470b(5): jmp 0xffffcce5(%rip)

"xmalloc" :
4710(1): push %rbx
4711(3): mov %rdi,%rbx
4714(5): call 0xffffcd4c(%rip)
4719(3): test %rax,%rax
471c(2): jnz 0x7(%rip)
471e(3): test %rbx,%rbx
4721(2): jnz 0x4(%rip)
4723(1): pop %rbx
4724(1): ret near (%rsp)
4725(5): call 0x23b(%rip)

"xnmalloc" :
4730(3): mov %rdi,%rax
4733(3): mul %rax,%rsi,%rdx
4736(3): mov %rax,%rdi
4739(3): seto %al
473c(3): test %rdi,%rdi
473f(2): js 0xc(%rip)
4741(3): movzx %al,%eax
4744(3): test %rax,%rax
4747(2): jnz 0x4(%rip)
4749(2): jmp 0xffffffc7(%rip)
474b(4): sub $0x8,%rsp
474f(5): call 0x211(%rip)

"xrealloc" :
4770(3): test %rsi,%rsi
4773(1): push %rbx
4774(3): mov %rsi,%rbx
4777(2): jnz 0x7(%rip)
4779(3): test %rdi,%rdi
477c(2): jnz 0x1c(%rip)
477e(3): mov %rbx,%rsi
4781(5): call 0xffffcd1f(%rip)
4786(3): test %rax,%rax
4789(2): jnz 0x7(%rip)
478b(3): test %rbx,%rbx
478e(2): jnz 0x13(%rip)
4790(1): pop %rbx
4791(1): ret near (%rsp)
4792(6): nop 0x0(%rax,%rax,1)
4798(5): call 0xffffcb28(%rip)
479d(2): xor %eax,%eax
479f(1): pop %rbx
47a0(1): ret near (%rsp)
47a1(5): call 0x1bf(%rip)

"xnrealloc" :
47b0(3): mov %rsi,%rax
47b3(3): mul %rax,%rdx,%rdx
47b6(3): mov %rax,%rsi
47b9(3): seto %al
47bc(3): test %rsi,%rsi
47bf(2): js 0xc(%rip)
47c1(3): movzx %al,%eax
47c4(3): test %rax,%rax
47c7(2): jnz 0x4(%rip)
47c9(2): jmp 0xffffffa7(%rip)
47cb(4): sub $0x8,%rsp
47cf(5): call 0x191(%rip)

"x2nrealloc" :
47e0(3): test %rdi,%rdi
47e3(3): mov %rdx,%r9
47e6(3): mov (%rsi),%rcx
47e9(2): jz 0x37(%rip)
47eb(2): xor %edx,%edx
47ed(a): mov $0x6148914691236517204,%rax
47f7(3): div %r9,%rax
47fa(3): cmp %rcx,%rax
47fd(2): jbe 0x3e(%rip)
47ff(3): mov %rcx,%rax
4802(3): shr $0x1,%rax
4805(5): lea 0x1(%rax,%rcx,1),%rcx
480a(3): mov %rcx,(%rsi)
480d(4): imul %r9,%rcx
4811(3): mov %rcx,%rsi
4814(5): jmp 0xffffff5c(%rip)
4819(7): nop 0x0(%rax)
4820(3): test %rcx,%rcx
4823(2): jz 0x25(%rip)
4825(3): mov %rcx,%rax
4828(3): mul %rax,%r9,%rdx
482b(3): seto %dl
482e(3): test %rax,%rax
4831(3): movzx %dl,%edx
4834(2): js 0x7(%rip)
4836(3): test %rdx,%rdx
4839(2): jz 0xffffffd1(%rip)
483b(4): sub $0x8,%rsp
483f(5): call 0x121(%rip)
4844(4): nop 0x0(%rax)
4848(2): xor %edx,%edx
484a(5): mov $0x80,%eax
484f(3): xor %r8d,%r8d
4852(3): div %r9,%rax
4855(3): test %rax,%rax
4858(4): setz %r8b
485c(4): lea 0x0(%r8,%rax,1),%rcx
4860(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4870(3): test %rdi,%rdi
4873(3): mov (%rsi),%rax
4876(2): jz 0x2a(%rip)
4878(a): mov $0x6148914691236517203,%rdx
4882(3): cmp %rdx,%rax
4885(2): jnbe 0x2c(%rip)
4887(3): mov %rax,%rdx
488a(3): shr $0x1,%rdx
488d(5): lea 0x1(%rdx,%rax,1),%rax
4892(3): mov %rax,(%rsi)
4895(3): mov %rax,%rsi
4898(5): jmp 0xfffffed8(%rip)
489d(3): nop (%rax)
48a0(3): test %rax,%rax
48a3(5): mov $0x80,%edx
48a8(4): cmove %rdx,%rax
48ac(3): test %rax,%rax
48af(2): jns 0xffffffe3(%rip)
48b1(4): sub $0x8,%rsp
48b5(5): call 0xab(%rip)

"xzalloc" :
48c0(1): push %rbx
48c1(3): mov %rdi,%rbx
48c4(5): call 0xfffffe4c(%rip)
48c9(3): mov %rbx,%rdx
48cc(2): xor %esi,%esi
48ce(3): mov %rax,%rdi
48d1(1): pop %rbx
48d2(5): jmp 0xffffcafe(%rip)

"xcalloc" :
48e0(3): mov %rdi,%rax
48e3(4): sub $0x8,%rsp
48e7(3): mul %rax,%rsi,%rdx
48ea(3): seto %dl
48ed(3): test %rax,%rax
48f0(2): js 0x19(%rip)
48f2(3): movzx %dl,%edx
48f5(3): test %rdx,%rdx
48f8(2): jnz 0x11(%rip)
48fa(5): call 0xffffcb06(%rip)
48ff(3): test %rax,%rax
4902(2): jz 0x7(%rip)
4904(4): add $0x8,%rsp
4908(1): ret near (%rsp)
4909(5): call 0x57(%rip)

"xmemdup" :
4910(1): push %rbp
4911(1): push %rbx
4912(3): mov %rdi,%rbp
4915(3): mov %rsi,%rdi
4918(3): mov %rsi,%rbx
491b(4): sub $0x8,%rsp
491f(5): call 0xfffffdf1(%rip)
4924(4): add $0x8,%rsp
4928(3): mov %rbx,%rdx
492b(3): mov %rbp,%rsi
492e(1): pop %rbx
492f(1): pop %rbp
4930(3): mov %rax,%rdi
4933(5): jmp 0xffffcafd(%rip)

"xstrdup" :
4940(1): push %rbx
4941(3): mov %rdi,%rbx
4944(5): call 0xffffca2c(%rip)
4949(3): mov %rbx,%rdi
494c(4): lea 0x1(%rax),%rsi
4950(1): pop %rbx
4951(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4960(7): lea 0x1188(%rip),%rsi
4967(4): sub $0x8,%rsp
496b(5): mov $0x5,%edx
4970(2): xor %edi,%edi
4972(5): call 0xffffc9de(%rip)
4977(6): mov 0x20269b(%rip),%edi
497d(7): lea 0x86d(%rip),%rdx
4984(3): mov %rax,%rcx
4987(2): xor %esi,%esi
4989(2): xor %eax,%eax
498b(5): call 0xffffcb55(%rip)
4990(5): call 0xffffc940(%rip)

"rpl_mbrtowc" :
49a0(2): push %r13
49a2(2): push %r12
49a4(3): mov %rsi,%r13
49a7(1): push %rbp
49a8(1): push %rbx
49a9(3): mov %rdi,%rbx
49ac(3): mov %rdx,%r12
49af(4): sub $0x18,%rsp
49b3(9): mov $0x28,%rax
49bc(5): mov %rax,0x8(%rsp)
49c1(2): xor %eax,%eax
49c3(5): lea 0x4(%rsp),%rax
49c8(3): test %rdi,%rdi
49cb(4): cmove %rax,%rbx
49cf(3): mov %rbx,%rdi
49d2(5): call 0xffffc9ce(%rip)
49d7(4): cmp $0xfffffffd,%rax
49db(3): mov %rax,%rbp
49de(2): jbe 0x22(%rip)
49e0(3): test %r12,%r12
49e3(2): jz 0x1d(%rip)
49e5(2): xor %edi,%edi
49e7(5): call 0xc9(%rip)
49ec(2): test %al,%al
49ee(2): jnz 0x12(%rip)
49f0(5): movzx 0x0(%r13),%eax
49f5(5): mov $0x1,%ebp
49fa(2): mov %eax,(%rbx)
49fc(4): nop 0x0(%rax)
4a00(5): mov 0x8(%rsp),%rdx
4a05(9): xor $0x28,%rdx
4a0e(3): mov %rbp,%rax
4a11(2): jnz 0xd(%rip)
4a13(4): add $0x18,%rsp
4a17(1): pop %rbx
4a18(1): pop %rbp
4a19(2): pop %r12
4a1b(2): pop %r13
4a1d(1): ret near (%rsp)
4a1e(5): call 0xffffc962(%rip)

"close_stream" :
4a30(2): push %r12
4a32(1): push %rbp
4a33(3): mov %rdi,%rbp
4a36(1): push %rbx
4a37(5): call 0xffffc8d9(%rip)
4a3c(3): mov 0x0(%rbp),%ebx
4a3f(3): mov %rbp,%rdi
4a42(3): mov %rax,%r12
4a45(5): call 0x10b(%rip)
4a4a(3): and $0x20,%ebx
4a4d(2): test %ebx,%ebx
4a4f(2): jnz 0x19(%rip)
4a51(2): test %eax,%eax
4a53(2): jz 0xc(%rip)
4a55(3): test %r12,%r12
4a58(5): mov $0xffffffff,%eax
4a5d(2): jz 0x3b(%rip)
4a5f(1): pop %rbx
4a60(1): pop %rbp
4a61(2): pop %r12
4a63(1): ret near (%rsp)
4a64(4): nop 0x0(%rax)
4a68(2): test %eax,%eax
4a6a(2): jnz 0x1e(%rip)
4a6c(5): call 0xffffc874(%rip)
4a71(6): mov $0x0,(%rax)
4a77(5): mov $0xffffffff,%eax
4a7c(1): pop %rbx
4a7d(1): pop %rbp
4a7e(2): pop %r12
4a80(1): ret near (%rsp)
4a81(7): nop 0x0(%rax)
4a88(1): pop %rbx
4a89(5): mov $0xffffffff,%eax
4a8e(1): pop %rbp
4a8f(2): pop %r12
4a91(1): ret near (%rsp)
4a92(6): nop 0x0(%rax,%rax,1)
4a98(5): call 0xffffc848(%rip)
4a9d(3): cmp $0x9,(%rax)
4aa0(1): pop %rbx
4aa1(1): pop %rbp
4aa2(2): pop %r12
4aa4(3): setnz %al
4aa7(3): movzx %al,%eax
4aaa(2): neg %eax
4aac(1): ret near (%rsp)

"hard_locale" :
4ab0(4): sub $0x8,%rsp
4ab4(2): xor %esi,%esi
4ab6(5): call 0xffffc9fa(%rip)
4abb(3): mov %rax,%rdx
4abe(5): mov $0x1,%eax
4ac3(3): test %rdx,%rdx
4ac6(2): jz 0x1f(%rip)
4ac8(7): lea 0x1031(%rip),%rdi
4acf(5): mov $0x2,%ecx
4ad4(3): mov %rdx,%rsi
4ad7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4ad9(3): setnbe %cl
4adc(3): sbb $0x0,%cl
4adf(2): xor %eax,%eax
4ae1(2): test %cl,%cl
4ae3(2): jnz 0xd(%rip)
4ae5(4): add $0x8,%rsp
4ae9(1): ret near (%rsp)
4aea(6): nop 0x0(%rax,%rax,1)
4af0(7): lea 0x100b(%rip),%rdi
4af7(5): mov $0x6,%ecx
4afc(3): mov %rdx,%rsi
4aff(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4b01(3): setnbe %al
4b04(2): sbb $0x0,%al
4b06(2): test %al,%al
4b08(3): setnz %al
4b0b(4): add $0x8,%rsp
4b0f(1): ret near (%rsp)

"locale_charset" :
4b10(4): sub $0x8,%rsp
4b14(5): mov $0xe,%edi
4b19(5): call 0xffffc967(%rip)
4b1e(3): test %rax,%rax
4b21(2): jz 0x1f(%rip)
4b23(3): cmp $0x0,(%rax)
4b26(7): lea 0xfdb(%rip),%rdx
4b2d(4): cmove %rdx,%rax
4b31(4): add $0x8,%rsp
4b35(1): ret near (%rsp)
4b36(a): nop 0x0(%rax,%rax,1)
4b40(7): lea 0xfc1(%rip),%rax
4b47(4): add $0x8,%rsp
4b4b(1): ret near (%rsp)

"rpl_fclose" :
4b50(2): push %r12
4b52(1): push %rbp
4b53(1): push %rbx
4b54(3): mov %rdi,%rbx
4b57(5): call 0xffffc8e9(%rip)
4b5c(2): test %eax,%eax
4b5e(3): mov %rbx,%rdi
4b61(2): js 0x56(%rip)
4b63(5): call 0xffffc92d(%rip)
4b68(2): test %eax,%eax
4b6a(2): jnz 0x2e(%rip)
4b6c(3): mov %rbx,%rdi
4b6f(5): call 0x61(%rip)
4b74(2): test %eax,%eax
4b76(2): jz 0x3e(%rip)
4b78(5): call 0xffffc768(%rip)
4b7d(3): mov (%rax),%r12d
4b80(3): mov %rbx,%rdi
4b83(3): mov %rax,%rbp
4b86(5): call 0xffffc7aa(%rip)
4b8b(3): test %r12d,%r12d
4b8e(2): jnz 0x32(%rip)
4b90(1): pop %rbx
4b91(1): pop %rbp
4b92(2): pop %r12
4b94(1): ret near (%rsp)
4b95(3): nop (%rax)
4b98(3): mov %rbx,%rdi
4b9b(5): call 0xffffc8a5(%rip)
4ba0(2): xor %esi,%esi
4ba2(5): mov $0x1,%edx
4ba7(2): mov %eax,%edi
4ba9(5): call 0xffffc817(%rip)
4bae(4): cmp $0xffffffff,%rax
4bb2(2): jnz 0xffffffba(%rip)
4bb4(3): mov %rbx,%rdi
4bb7(1): pop %rbx
4bb8(1): pop %rbp
4bb9(2): pop %r12
4bbb(5): jmp 0xffffc775(%rip)
4bc0(4): mov %r12d,0x0(%rbp)
4bc4(5): mov $0xffffffff,%eax
4bc9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4bd0(3): test %rdi,%rdi
4bd3(1): push %rbx
4bd4(3): mov %rdi,%rbx
4bd7(2): jz 0x13(%rip)
4bd9(5): call 0xffffc8b7(%rip)
4bde(2): test %eax,%eax
4be0(2): jz 0xa(%rip)
4be2(6): test $0x100,(%rbx)
4be8(2): jnz 0x10(%rip)
4bea(3): mov %rbx,%rdi
4bed(1): pop %rbx
4bee(5): jmp 0xffffc882(%rip)
4bf3(5): nop 0x0(%rax,%rax,1)
4bf8(3): mov %rbx,%rdi
4bfb(5): mov $0x1,%edx
4c00(2): xor %esi,%esi
4c02(5): call 0xe(%rip)
4c07(3): mov %rbx,%rdi
4c0a(1): pop %rbx
4c0b(5): jmp 0xffffc865(%rip)

"rpl_fseeko" :
4c10(4): mov 0x8(%rdi),%rax
4c14(4): cmp %rax,0x10(%rdi)
4c18(2): jz 0x8(%rip)
4c1a(5): jmp 0xffffc8d6(%rip)
4c1f(1): nop 
4c20(4): mov 0x20(%rdi),%rax
4c24(4): cmp %rax,0x28(%rdi)
4c28(2): jnz 0xfffffff2(%rip)
4c2a(5): cmp $0x0,0x48(%rdi)
4c2f(2): jnz 0xffffffeb(%rip)
4c31(2): push %r12
4c33(1): push %rbp
4c34(3): mov %edx,%r12d
4c37(1): push %rbx
4c38(3): mov %rsi,%rbp
4c3b(3): mov %rdi,%rbx
4c3e(5): call 0xffffc802(%rip)
4c43(3): mov %r12d,%edx
4c46(3): mov %rbp,%rsi
4c49(2): mov %eax,%edi
4c4b(5): call 0xffffc775(%rip)
4c50(4): cmp $0xffffffff,%rax
4c54(2): jz 0xe(%rip)
4c56(3): and $0xef,(%rbx)
4c59(7): mov %rax,0x90(%rbx)
4c60(2): xor %eax,%eax
4c62(1): pop %rbx
4c63(1): pop %rbp
4c64(2): pop %r12
4c66(1): ret near (%rsp)

"__libc_csu_init" :
4c70(2): push %r15
4c72(2): push %r14
4c74(3): mov %rdx,%r15
4c77(2): push %r13
4c79(2): push %r12
4c7b(7): lea 0x201eee(%rip),%r12
4c82(1): push %rbp
4c83(7): lea 0x201eee(%rip),%rbp
4c8a(1): push %rbx
4c8b(3): mov %edi,%r13d
4c8e(3): mov %rsi,%r14
4c91(3): sub %r12,%rbp
4c94(4): sub $0x8,%rsp
4c98(4): sar $0x3,%rbp
4c9c(5): call 0xffffc5fc(%rip)
4ca1(3): test %rbp,%rbp
4ca4(2): jz 0x22(%rip)
4ca6(2): xor %ebx,%ebx
4ca8(8): nop 0x0(%rax,%rax,1)
4cb0(3): mov %r15,%rdx
4cb3(3): mov %r14,%rsi
4cb6(3): mov %r13d,%edi
4cb9(4): call 0x0(%r12,%rbx,8)
4cbd(4): add $0x1,%rbx
4cc1(3): cmp %rbx,%rbp
4cc4(2): jnz 0xffffffec(%rip)
4cc6(4): add $0x8,%rsp
4cca(1): pop %rbx
4ccb(1): pop %rbp
4ccc(2): pop %r12
4cce(2): pop %r13
4cd0(2): pop %r14
4cd2(2): pop %r15
4cd4(1): ret near (%rsp)

"atexit" :
4cf0(7): mov 0x202311(%rip),%rdx
4cf7(2): xor %esi,%esi
4cf9(5): jmp 0xffffc807(%rip)

"_fini" :
4d00(4): sub $0x8,%rsp
4d04(4): add $0x8,%rsp
4d08(1): ret near (%rsp)

