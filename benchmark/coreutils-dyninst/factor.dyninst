
"__uflow@plt" :
1db0(6): jmp 0x210f7a(%rip)
1db6(5): push $0x0

"__gmpz_scan1@plt" :
1dc0(6): jmp 0x210f72(%rip)
1dc6(5): push $0x1

"free@plt" :
1dd0(6): jmp 0x210f6a(%rip)
1dd6(5): push $0x2

"abort@plt" :
1de0(6): jmp 0x210f62(%rip)
1de6(5): push $0x3

"__errno_location@plt" :
1df0(6): jmp 0x210f5a(%rip)
1df6(5): push $0x4

"strncmp@plt" :
1e00(6): jmp 0x210f52(%rip)
1e06(5): push $0x5

"_exit@plt" :
1e10(6): jmp 0x210f4a(%rip)
1e16(5): push $0x6

"__fpending@plt" :
1e20(6): jmp 0x210f42(%rip)
1e26(5): push $0x7

"iconv@plt" :
1e30(6): jmp 0x210f3a(%rip)
1e36(5): push $0x8

"__gmpz_sub_ui@plt" :
1e40(6): jmp 0x210f32(%rip)
1e46(5): push $0x9

"__gmpz_clears@plt" :
1e50(6): jmp 0x210f2a(%rip)
1e56(5): push $0xa

"isatty@plt" :
1e60(6): jmp 0x210f22(%rip)
1e66(5): push $0xb

"__gmpz_set_ui@plt" :
1e70(6): jmp 0x210f1a(%rip)
1e76(5): push $0xc

"iswcntrl@plt" :
1e80(6): jmp 0x210f12(%rip)
1e86(5): push $0xd

"write@plt" :
1e90(6): jmp 0x210f0a(%rip)
1e96(5): push $0xe

"__gmpz_sub@plt" :
1ea0(6): jmp 0x210f02(%rip)
1ea6(5): push $0xf

"textdomain@plt" :
1eb0(6): jmp 0x210efa(%rip)
1eb6(5): push $0x10

"fclose@plt" :
1ec0(6): jmp 0x210ef2(%rip)
1ec6(5): push $0x11

"bindtextdomain@plt" :
1ed0(6): jmp 0x210eea(%rip)
1ed6(5): push $0x12

"dcgettext@plt" :
1ee0(6): jmp 0x210ee2(%rip)
1ee6(5): push $0x13

"__ctype_get_mb_cur_max@plt" :
1ef0(6): jmp 0x210eda(%rip)
1ef6(5): push $0x14

"strlen@plt" :
1f00(6): jmp 0x210ed2(%rip)
1f06(5): push $0x15

"__gmpz_powm@plt" :
1f10(6): jmp 0x210eca(%rip)
1f16(5): push $0x16

"__stack_chk_fail@plt" :
1f20(6): jmp 0x210ec2(%rip)
1f26(5): push $0x17

"getopt_long@plt" :
1f30(6): jmp 0x210eba(%rip)
1f36(5): push $0x18

"__gmpz_divexact@plt" :
1f40(6): jmp 0x210eb2(%rip)
1f46(5): push $0x19

"mbrtowc@plt" :
1f50(6): jmp 0x210eaa(%rip)
1f56(5): push $0x1a

"__gmpz_inits@plt" :
1f60(6): jmp 0x210ea2(%rip)
1f66(5): push $0x1b

"strchr@plt" :
1f70(6): jmp 0x210e9a(%rip)
1f76(5): push $0x1c

"__gmpz_set@plt" :
1f80(6): jmp 0x210e92(%rip)
1f86(5): push $0x1d

"__gmpz_mul@plt" :
1f90(6): jmp 0x210e8a(%rip)
1f96(5): push $0x1e

"__overflow@plt" :
1fa0(6): jmp 0x210e82(%rip)
1fa6(5): push $0x1f

"strrchr@plt" :
1fb0(6): jmp 0x210e7a(%rip)
1fb6(5): push $0x20

"__gmpz_tdiv_q_ui@plt" :
1fc0(6): jmp 0x210e72(%rip)
1fc6(5): push $0x21

"lseek@plt" :
1fd0(6): jmp 0x210e6a(%rip)
1fd6(5): push $0x22

"__assert_fail@plt" :
1fe0(6): jmp 0x210e62(%rip)
1fe6(5): push $0x23

"memset@plt" :
1ff0(6): jmp 0x210e5a(%rip)
1ff6(5): push $0x24

"strnlen@plt" :
2000(6): jmp 0x210e52(%rip)
2006(5): push $0x25

"__gmpz_fdiv_q_2exp@plt" :
2010(6): jmp 0x210e4a(%rip)
2016(5): push $0x26

"memchr@plt" :
2020(6): jmp 0x210e42(%rip)
2026(5): push $0x27

"memcmp@plt" :
2030(6): jmp 0x210e3a(%rip)
2036(5): push $0x28

"__gmp_printf@plt" :
2040(6): jmp 0x210e32(%rip)
2046(5): push $0x29

"fputs_unlocked@plt" :
2050(6): jmp 0x210e2a(%rip)
2056(5): push $0x2a

"calloc@plt" :
2060(6): jmp 0x210e22(%rip)
2066(5): push $0x2b

"strcmp@plt" :
2070(6): jmp 0x210e1a(%rip)
2076(5): push $0x2c

"__gmpz_init_set_si@plt" :
2080(6): jmp 0x210e12(%rip)
2086(5): push $0x2d

"__gmpz_add_ui@plt" :
2090(6): jmp 0x210e0a(%rip)
2096(5): push $0x2e

"memcpy@plt" :
20a0(6): jmp 0x210e02(%rip)
20a6(5): push $0x2f

"fileno@plt" :
20b0(6): jmp 0x210dfa(%rip)
20b6(5): push $0x30

"__gmpz_divisible_ui_p@plt" :
20c0(6): jmp 0x210df2(%rip)
20c6(5): push $0x31

"wcwidth@plt" :
20d0(6): jmp 0x210dea(%rip)
20d6(5): push $0x32

"iswalnum@plt" :
20e0(6): jmp 0x210de2(%rip)
20e6(5): push $0x33

"malloc@plt" :
20f0(6): jmp 0x210dda(%rip)
20f6(5): push $0x34

"fflush@plt" :
2100(6): jmp 0x210dd2(%rip)
2106(5): push $0x35

"__gmpz_clear@plt" :
2110(6): jmp 0x210dca(%rip)
2116(5): push $0x36

"nl_langinfo@plt" :
2120(6): jmp 0x210dc2(%rip)
2126(5): push $0x37

"__gmpz_tdiv_q_2exp@plt" :
2130(6): jmp 0x210dba(%rip)
2136(5): push $0x38

"__freading@plt" :
2140(6): jmp 0x210db2(%rip)
2146(5): push $0x39

"realloc@plt" :
2150(6): jmp 0x210daa(%rip)
2156(5): push $0x3a

"setlocale@plt" :
2160(6): jmp 0x210da2(%rip)
2166(5): push $0x3b

"__printf_chk@plt" :
2170(6): jmp 0x210d9a(%rip)
2176(5): push $0x3c

"iconv_close@plt" :
2180(6): jmp 0x210d92(%rip)
2186(5): push $0x3d

"__gmpz_mod@plt" :
2190(6): jmp 0x210d8a(%rip)
2196(5): push $0x3e

"iswspace@plt" :
21a0(6): jmp 0x210d82(%rip)
21a6(5): push $0x3f

"__gmpz_init_set_ui@plt" :
21b0(6): jmp 0x210d7a(%rip)
21b6(5): push $0x40

"__gmpz_cmp@plt" :
21c0(6): jmp 0x210d72(%rip)
21c6(5): push $0x41

"memmove@plt" :
21d0(6): jmp 0x210d6a(%rip)
21d6(5): push $0x42

"error@plt" :
21e0(6): jmp 0x210d62(%rip)
21e6(5): push $0x43

"fseeko@plt" :
21f0(6): jmp 0x210d5a(%rip)
21f6(5): push $0x44

"__gmpz_gcd@plt" :
2200(6): jmp 0x210d52(%rip)
2206(5): push $0x45

"__gmpz_init_set_str@plt" :
2210(6): jmp 0x210d4a(%rip)
2216(5): push $0x46

"__cxa_atexit@plt" :
2220(6): jmp 0x210d42(%rip)
2226(5): push $0x47

"exit@plt" :
2230(6): jmp 0x210d3a(%rip)
2236(5): push $0x48

"fwrite@plt" :
2240(6): jmp 0x210d32(%rip)
2246(5): push $0x49

"__fprintf_chk@plt" :
2250(6): jmp 0x210d2a(%rip)
2256(5): push $0x4a

"__gmpz_cmp_ui@plt" :
2260(6): jmp 0x210d22(%rip)
2266(5): push $0x4b

"__gmpz_init@plt" :
2270(6): jmp 0x210d1a(%rip)
2276(5): push $0x4c

"fflush_unlocked@plt" :
2280(6): jmp 0x210d12(%rip)
2286(5): push $0x4d

"__gmpz_powm_ui@plt" :
2290(6): jmp 0x210d0a(%rip)
2296(5): push $0x4e

"strdup@plt" :
22a0(6): jmp 0x210d02(%rip)
22a6(5): push $0x4f

"mbsinit@plt" :
22b0(6): jmp 0x210cfa(%rip)
22b6(5): push $0x50

"iswprint@plt" :
22c0(6): jmp 0x210cf2(%rip)
22c6(5): push $0x51

"__ctype_b_loc@plt" :
22d0(6): jmp 0x210cea(%rip)
22d6(5): push $0x52

"iconv_open@plt" :
22e0(6): jmp 0x210ce2(%rip)
22e6(5): push $0x53

"__sprintf_chk@plt" :
22f0(6): jmp 0x210cda(%rip)
22f6(5): push $0x54

".plt.got" :
2300(6): jmp 0x210cf2(%rip)
2306(2): nop 

"_init" :
1d88(4): sub $0x8,%rsp
1d8c(7): mov 0x211255(%rip),%rax
1d93(3): test %rax,%rax
1d96(2): jz 0x4(%rip)
1d98(2): call %rax
1d9a(4): add $0x8,%rsp
1d9e(1): ret near (%rsp)

"mbuiter_multi_next.part.0" :
2310(7): lea 0xddb9(%rip),%rcx
2317(7): lea 0xdd3a(%rip),%rsi
231e(7): lea 0xdd53(%rip),%rdi
2325(4): sub $0x8,%rsp
2329(5): mov $0xb3,%edx
232e(5): call 0xfffffcb2(%rip)

"mbiter_multi_next.part.0" :
2333(7): lea 0xe2b6(%rip),%rcx
233a(7): lea 0xe287(%rip),%rsi
2341(7): lea 0xdd30(%rip),%rdi
2348(4): sub $0x8,%rsp
234c(5): mov $0xaa,%edx
2351(5): call 0xfffffc8f(%rip)

"mbuiter_multi_next.part.0" :
2356(7): lea 0xe663(%rip),%rcx
235d(7): lea 0xdcf4(%rip),%rsi
2364(7): lea 0xdd0d(%rip),%rdi
236b(4): sub $0x8,%rsp
236f(5): mov $0xb3,%edx
2374(5): call 0xfffffc6c(%rip)

"main" :
2380(2): push %r14
2382(2): push %r13
2384(2): push %r12
2386(1): push %rbp
2387(2): mov %edi,%ebp
2389(1): push %rbx
238a(3): mov %rsi,%rbx
238d(4): sub $0x20,%rsp
2391(3): mov (%rsi),%rdi
2394(9): mov $0x28,%rax
239d(5): mov %rax,0x18(%rsp)
23a2(2): xor %eax,%eax
23a4(5): call 0x3e0c(%rip)
23a9(7): lea 0xe2ab(%rip),%rsi
23b0(5): mov $0x6,%edi
23b5(5): call 0xfffffdab(%rip)
23ba(7): lea 0xab07(%rip),%rsi
23c1(7): lea 0xaad7(%rip),%rdi
23c8(5): call 0xfffffb08(%rip)
23cd(7): lea 0xaacb(%rip),%rdi
23d4(5): call 0xfffffadc(%rip)
23d9(8): cmp $0x0,0x210d0f(%rip)
23e1(6): jz 0xdb(%rip)
23e7(7): lea 0x3c42(%rip),%rdi
23ee(7): lea 0x21064b(%rip),%r12
23f5(5): call 0xa62b(%rip)
23fa(7): lea 0xc2f(%rip),%rdi
2401(5): call 0xa61f(%rip)
2406(7): lea 0xe24e(%rip),%rdx
240d(3): xor %r8d,%r8d
2410(3): mov %r12,%rcx
2413(3): mov %rbx,%rsi
2416(2): mov %ebp,%edi
2418(5): call 0xfffffb18(%rip)
241d(3): cmp $0xff,%eax
2420(6): jz 0xb9(%rip)
2426(5): cmp $0xffffff7e,%eax
242b(6): jz 0x14b(%rip)
2431(5): cmp $0x80,%eax
2436(2): jz 0x7a(%rip)
2438(5): cmp $0xffffff7d,%eax
243d(2): jz 0x13(%rip)
243f(5): mov $0x1,%edi
2444(5): call 0x387c(%rip)
2449(7): nop 0x0(%rax)
2450(7): lea 0xaa89(%rip),%rsi
2457(7): lea 0xaa90(%rip),%rdi
245e(5): call 0x47f2(%rip)
2463(7): lea 0xaa91(%rip),%rsi
246a(7): lea 0xaa9d(%rip),%rdi
2471(3): mov %rax,%rbx
2474(5): call 0x47dc(%rip)
2479(7): mov 0x210c28(%rip),%rdi
2480(7): mov 0x210b91(%rip),%rcx
2487(7): lea 0xaa92(%rip),%r8
248e(2): push $0x0
2490(7): lea 0xaa04(%rip),%rdx
2497(1): push %rbx
2498(7): lea 0xa97f(%rip),%rsi
249f(3): mov %rax,%r9
24a2(2): xor %eax,%eax
24a4(5): call 0x76dc(%rip)
24a9(2): xor %edi,%edi
24ab(5): call 0xfffffd85(%rip)
24b0(7): mov $0x1,0x210c49(%rip)
24b7(5): jmp 0xffffff4f(%rip)
24bc(5): mov $0x400,%edi
24c1(5): call 0x781f(%rip)
24c6(7): mov %rax,0x210c23(%rip)
24cd(7): mov %rax,0x210c24(%rip)
24d4(5): jmp 0xffffff13(%rip)
24d9(7): movsxd 0x210bd8(%rip),%r12
24e0(3): cmp %ebp,%r12d
24e3(2): jnl 0x48(%rip)
24e5(6): mov $0x1,%r13d
24eb(3): xor %r14d,%r14d
24ee(4): mov 0x0(%rbx,%r12,8),%rdi
24f2(5): call 0x343e(%rip)
24f7(2): test %al,%al
24f9(4): cmove %r14d,%r13d
24fd(4): add $0x1,%r12
2501(3): cmp %r12d,%ebp
2504(2): jnle 0xffffffea(%rip)
2506(4): xor $0x1,%r13d
250a(5): mov 0x18(%rsp),%rdx
250f(9): xor $0x28,%rdx
2518(4): movzx %r13b,%eax
251c(2): jnz 0x61(%rip)
251e(4): add $0x20,%rsp
2522(1): pop %rbx
2523(1): pop %rbp
2524(2): pop %r12
2526(2): pop %r13
2528(2): pop %r14
252a(1): ret near (%rsp)
252b(3): mov %rsp,%rbx
252e(6): mov $0x1,%r13d
2534(7): lea 0xa9f0(%rip),%rbp
253b(3): mov %rbx,%rdi
253e(5): call 0x6692(%rip)
2543(2): jmp 0xa(%rip)
2545(5): call 0x33eb(%rip)
254a(3): and %eax,%r13d
254d(7): mov 0x210b5c(%rip),%rdi
2554(3): mov %rbx,%rcx
2557(5): mov $0x3,%edx
255c(3): mov %rbp,%rsi
255f(5): call 0x6681(%rip)
2564(4): add $0x1,%rax
2568(5): mov 0x8(%rsp),%rdi
256d(2): jnz 0xffffffd8(%rip)
256f(5): call 0xfffff861(%rip)
2574(2): jmp 0xffffff92(%rip)
2576(2): xor %edi,%edi
2578(5): call 0x3748(%rip)
257d(5): call 0xfffff9a3(%rip)

"_start" :
2590(2): xor %ebp,%ebp
2592(3): mov %rdx,%r9
2595(1): pop %rsi
2596(3): mov %rsp,%rdx
2599(4): and $0xfffffff0,%rsp
259d(1): push %rax
259e(1): push %rsp
259f(7): lea 0xa46a(%rip),%r8
25a6(7): lea 0xa3f3(%rip),%rcx
25ad(7): lea 0xfffffdcc(%rip),%rdi
25b4(6): call 0x210a26(%rip)
25ba(1): hlt 

"deregister_tm_clones" :
25c0(7): lea 0x210ad9(%rip),%rdi
25c7(1): push %rbp
25c8(7): lea 0x210ad1(%rip),%rax
25cf(3): cmp %rdi,%rax
25d2(3): mov %rsp,%rbp
25d5(2): jz 0x1b(%rip)
25d7(7): mov 0x2109fa(%rip),%rax
25de(3): test %rax,%rax
25e1(2): jz 0xf(%rip)
25e3(1): pop %rbp
25e4(2): jmp %rax
25e6(a): nop 0x0(%rax,%rax,1)
25f0(1): pop %rbp
25f1(1): ret near (%rsp)

"register_tm_clones" :
2600(7): lea 0x210a99(%rip),%rdi
2607(7): lea 0x210a92(%rip),%rsi
260e(1): push %rbp
260f(3): sub %rdi,%rsi
2612(3): mov %rsp,%rbp
2615(4): sar $0x3,%rsi
2619(3): mov %rsi,%rax
261c(4): shr $0x3f,%rax
2620(3): add %rax,%rsi
2623(3): sar $0x1,%rsi
2626(2): jz 0x1a(%rip)
2628(7): mov 0x2109c1(%rip),%rax
262f(3): test %rax,%rax
2632(2): jz 0xe(%rip)
2634(1): pop %rbp
2635(2): jmp %rax
2637(9): nop 0x0(%rax,%rax,1)
2640(1): pop %rbp
2641(1): ret near (%rsp)

"__do_global_dtors_aux" :
2650(7): cmp $0x0,0x210a91(%rip)
2657(2): jnz 0x31(%rip)
2659(8): cmp $0x0,0x210997(%rip)
2661(1): push %rbp
2662(3): mov %rsp,%rbp
2665(2): jz 0xe(%rip)
2667(7): mov 0x21099a(%rip),%rdi
266e(5): call 0xfffffc92(%rip)
2673(5): call 0xffffff4d(%rip)
2678(7): mov $0x1,0x210a69(%rip)
267f(1): pop %rbp
2680(1): ret near (%rsp)
2681(7): nop 0x0(%rax)
2688(2): REP ret near (%rsp)

"frame_dummy" :
2690(1): push %rbp
2691(3): mov %rsp,%rbp
2694(1): pop %rbp
2695(5): jmp 0xffffff6b(%rip)

"gcd_odd" :
26a0(4): test $0x1,%sil
26a4(2): jz 0xb(%rip)
26a6(3): mov %rsi,%rax
26a9(3): mov %rdi,%rsi
26ac(3): mov %rax,%rdi
26af(3): mov %rdi,%rax
26b2(3): shr $0x1,%rdi
26b5(3): test %rsi,%rsi
26b8(2): jnz 0x1c(%rip)
26ba(2): jmp 0x36(%rip)
26bc(4): nop 0x0(%rax)
26c0(2): cdq %rax
26c2(3): mov %rax,%rcx
26c5(3): and %rdx,%rcx
26c8(3): xor %rdx,%rax
26cb(3): add %rcx,%rdi
26ce(3): sub %rdx,%rax
26d1(3): mov %rax,%rsi
26d4(3): mov %rsi,%rax
26d7(3): shr $0x1,%rax
26da(4): test $0x1,%sil
26de(2): jz 0xfffffff3(%rip)
26e0(3): sub %rdi,%rax
26e3(2): jnz 0xffffffdd(%rip)
26e5(3): mov %rsi,%rax
26e8(4): or $0x1,%rax
26ec(1): ret near (%rsp)
26ed(3): nop (%rax)
26f0(2): REP ret near (%rsp)

"factor_insert_multiplicity" :
2700(2): push %r14
2702(2): push %r13
2704(4): lea 0x10(%rdi),%r11
2708(8): movzx 0xfa(%rdi),%r13d
2710(2): push %r12
2712(1): push %rbp
2713(1): push %rbx
2714(7): lea 0xe0(%rdi),%rbx
271b(3): mov %r13d,%r12d
271e(4): sub $0x1,%r13d
2722(4): cmp $0xff,%r13d
2726(6): jz 0xd2(%rip)
272c(3): movsxd %r13d,%rcx
272f(8): lea 0x0(,%rcx,8),%rax
2737(5): mov 0x10(%rdi,%rax,1),%rbp
273c(3): cmp %rbp,%rsi
273f(6): jnb 0xa1(%rip)
2745(3): mov %r13d,%r9d
2748(4): lea 0xffffffff(%rcx),%rax
274c(3): mov %rcx,%r14
274f(3): sub %r9,%r14
2752(3): mov %r13d,%r9d
2755(3): mov %rax,%r8
2758(4): sub $0x1,%r14
275c(2): jmp 0x12(%rip)
275e(2): nop 
2760(4): lea 0xffffffff(%r8),%r10
2764(5): cmp %rsi,0x8(%r11,%r10,8)
2769(2): jbe 0x5f(%rip)
276b(3): mov %r10,%r8
276e(4): sub $0x1,%r9d
2772(3): cmp %r8,%r14
2775(2): jnz 0xffffffeb(%rip)
2777(3): mov %rbx,%r8
277a(3): mov %r11,%r14
277d(6): mov $0xffffffff,%r9d
2783(2): jmp 0xd(%rip)
2785(3): nop (%rax)
2788(4): mov 0x0(%r11,%rax,8),%rbp
278c(4): sub $0x1,%rax
2790(5): mov %rbp,0x8(%r11,%rcx,8)
2795(5): movzx 0x0(%rbx,%rcx,1),%r10d
279a(3): cmp %eax,%r9d
279d(5): mov %r10b,0x1(%rbx,%rcx,1)
27a2(3): mov %rax,%rcx
27a5(2): jl 0xffffffe3(%rip)
27a7(4): add $0x1,%r12d
27ab(3): mov %rsi,(%r14)
27ae(3): mov %dl,(%r8)
27b1(7): mov %r12b,0xfa(%rdi)
27b8(1): pop %rbx
27b9(1): pop %rbp
27ba(2): pop %r12
27bc(2): pop %r13
27be(2): pop %r14
27c0(1): ret near (%rsp)
27c1(7): nop 0x0(%rax)
27c8(2): jz 0x1d(%rip)
27ca(4): add $0x1,%r8
27ce(4): lea 0x0(%r11,%r8,8),%r14
27d2(3): add %rbx,%r8
27d5(3): cmp %r9d,%r13d
27d8(2): jnle 0xffffffb8(%rip)
27da(2): jmp 0xffffffcd(%rip)
27dc(4): nop 0x0(%rax)
27e0(2): jnz 0x20(%rip)
27e2(3): mov %rcx,%r8
27e5(4): add %dl,0x0(%rbx,%r8,1)
27e9(1): pop %rbx
27ea(1): pop %rbp
27eb(2): pop %r12
27ed(2): pop %r13
27ef(2): pop %r14
27f1(1): ret near (%rsp)
27f2(6): nop 0x0(%rax,%rax,1)
27f8(3): mov %rbx,%r8
27fb(3): mov %r11,%r14
27fe(2): jmp 0xffffffa9(%rip)
2800(5): lea 0x8(%r11,%rax,1),%r14
2805(5): lea 0x1(%rbx,%rcx,1),%r8
280a(2): jmp 0xffffff9d(%rip)

"powm" :
2810(4): test $0x1,%sil
2814(3): mov %rdx,%r9
2817(2): jz 0x59(%rip)
2819(3): mov %rdi,%r8
281c(4): nop 0x0(%rax)
2820(3): mov %rdi,%rax
2823(3): mul %rax,%rdi,%rdx
2826(3): mov %rdx,%r10
2829(3): mov %r10,%rdi
282c(4): imul %rcx,%rax
2830(3): mul %rax,%r9,%rdx
2833(3): sub %rdx,%rdi
2836(3): cmp %rdx,%r10
2839(4): lea 0x0(%rdi,%r9,1),%rax
283d(4): cmovnae %rax,%rdi
2841(3): shr $0x1,%rsi
2844(4): test $0x1,%sil
2848(2): jz 0x28(%rip)
284a(3): mov %r8,%rax
284d(3): mul %rax,%rdi,%rdx
2850(3): mov %rdx,%r10
2853(3): mov %r10,%r8
2856(4): imul %rcx,%rax
285a(3): mul %rax,%r9,%rdx
285d(3): sub %rdx,%r8
2860(3): cmp %rdx,%r10
2863(4): lea 0x0(%r8,%r9,1),%rax
2867(4): cmovnae %rax,%r8
286b(2): jmp 0xffffffb5(%rip)
286d(3): nop (%rax)
2870(3): test %rsi,%rsi
2873(2): jnz 0xffffffad(%rip)
2875(3): mov %r8,%rax
2878(1): ret near (%rsp)

"millerrabin" :
2880(2): push %r12
2882(3): mov %rdi,%r11
2885(1): push %rbp
2886(1): push %rbx
2887(3): mov %rsi,%rbx
288a(3): mov %rdx,%rdi
288d(3): mov %rcx,%rsi
2890(3): mov %r11,%rdx
2893(3): mov %r8d,%ebp
2896(3): mov %rbx,%rcx
2899(3): mov %r9,%r8
289c(3): mov %r9,%r12
289f(5): call 0xffffff71(%rip)
28a4(3): mov %r11,%rdi
28a7(3): sub %r12,%rdi
28aa(3): cmp %rax,%r12
28ad(4): setz %r8b
28b1(3): cmp %rdi,%rax
28b4(3): setz %dl
28b7(3): or %dl,%r8b
28ba(2): jnz 0x4b(%rip)
28bc(3): cmp $0x1,%ebp
28bf(2): jbe 0x46(%rip)
28c1(5): mov $0x1,%esi
28c6(2): jmp 0x16(%rip)
28c8(8): nop 0x0(%rax,%rax,1)
28d0(3): cmp %rax,%r12
28d3(2): jz 0x32(%rip)
28d5(3): add $0x1,%esi
28d8(2): cmp %esi,%ebp
28da(2): jz 0x2b(%rip)
28dc(3): mul %rax,%rax,%rdx
28df(3): mov %rdx,%rcx
28e2(4): imul %rbx,%rax
28e6(3): mul %rax,%r11,%rdx
28e9(3): mov %rcx,%rax
28ec(3): sub %rdx,%rax
28ef(3): cmp %rdx,%rcx
28f2(4): lea 0x0(%rax,%r11,1),%r9
28f6(4): cmovnae %r9,%rax
28fa(3): cmp %rax,%rdi
28fd(2): jnz 0xffffffd3(%rip)
28ff(6): mov $0x1,%r8d
2905(1): pop %rbx
2906(3): mov %r8d,%eax
2909(1): pop %rbp
290a(2): pop %r12
290c(1): ret near (%rsp)

"mp_factor_clear" :
2910(1): push %rbp
2911(1): push %rbx
2912(3): mov %rdi,%rbp
2915(4): sub $0x8,%rsp
2919(5): cmp $0x0,0x10(%rdi)
291e(2): jz 0x23(%rip)
2920(2): xor %ebx,%ebx
2922(2): xor %edi,%edi
2924(4): nop 0x0(%rax)
2928(4): shl/sal $0x4,%rdi
292c(4): add 0x0(%rbp),%rdi
2930(5): call 0xfffff7e0(%rip)
2935(3): lea 0x1(%rbx),%edi
2938(4): cmp 0x10(%rbp),%rdi
293c(3): mov %rdi,%rbx
293f(2): jb 0xffffffe9(%rip)
2941(4): mov 0x0(%rbp),%rdi
2945(5): call 0xfffff48b(%rip)
294a(4): mov 0x8(%rbp),%rdi
294e(4): add $0x8,%rsp
2952(1): pop %rbx
2953(1): pop %rbp
2954(5): jmp 0xfffff47c(%rip)

"mulredc2" :
2960(2): push %r15
2962(2): push %r14
2964(2): push %r13
2966(2): push %r12
2968(1): push %rbp
2969(1): push %rbx
296a(4): sub $0x8,%rsp
296e(5): mov 0x48(%rsp),%rbx
2973(5): mov 0x40(%rsp),%r10
2978(3): neg %rbx
297b(3): test %rsi,%rsi
297e(6): js 0x139(%rip)
2984(3): test %rcx,%rcx
2987(6): js 0x111(%rip)
298d(3): test %r9,%r9
2990(6): js 0xe9(%rip)
2996(3): mov %rdx,%rbp
2999(3): mov %rbx,%r15
299c(3): mov %rbp,%rax
299f(3): mul %rax,%r8,%rdx
29a2(3): mov %rax,%r12
29a5(3): mov %rdx,%r13
29a8(3): mov %rbp,%rax
29ab(4): imul %r12,%r15
29af(3): mul %rax,%rcx,%rdx
29b2(3): mov %rdx,%r11
29b5(3): mov %rax,%rbp
29b8(3): mov %r15,%rax
29bb(3): mul %rax,%r10,%rdx
29be(3): mov %r15,%rax
29c1(3): mov %rdx,%r14
29c4(3): mul %rax,%r9,%rdx
29c7(3): test %r12,%r12
29ca(4): setnz %r12b
29ce(4): movzx %r12b,%r12d
29d2(3): add %r12,%rbp
29d5(3): add %r14,%rbp
29d8(4): adc $0x0,%r11
29dc(3): add %r13,%rbp
29df(4): adc $0x0,%r11
29e3(3): add %rax,%rbp
29e6(3): adc %rdx,%r11
29e9(3): mov %rsi,%rax
29ec(3): mul %rax,%r8,%rdx
29ef(3): mov %rdx,%r8
29f2(3): mov %rax,%r12
29f5(3): mov %rsi,%rax
29f8(3): add %rbp,%r12
29fb(4): adc $0x0,%r8
29ff(4): imul %r12,%rbx
2a03(2): xor %esi,%esi
2a05(3): mul %rax,%rcx,%rdx
2a08(3): mov %rdx,%rcx
2a0b(3): mov %rax,%rbp
2a0e(3): add %r11,%rbp
2a11(4): adc $0x0,%rcx
2a15(3): mov %rbx,%rax
2a18(3): mul %rax,%r10,%rdx
2a1b(3): mov %rbx,%rax
2a1e(3): mov %rdx,%r11
2a21(3): mul %rax,%r9,%rdx
2a24(3): test %r12,%r12
2a27(4): setnz %sil
2a2b(3): add %rbp,%rsi
2a2e(3): add %r11,%rsi
2a31(4): adc $0x0,%rcx
2a35(3): add %r8,%rsi
2a38(4): adc $0x0,%rcx
2a3c(3): add %rax,%rsi
2a3f(3): adc %rdx,%rcx
2a42(3): cmp %rcx,%r9
2a45(3): mov %rcx,%rdx
2a48(3): mov %rsi,%rax
2a4b(2): jnb 0x25(%rip)
2a4d(3): sub %r10,%rsi
2a50(3): sbb %r9,%rcx
2a53(3): mov %rcx,%rdx
2a56(3): mov %rsi,%rax
2a59(3): mov %rdx,(%rdi)
2a5c(4): add $0x8,%rsp
2a60(1): pop %rbx
2a61(1): pop %rbp
2a62(2): pop %r12
2a64(2): pop %r13
2a66(2): pop %r14
2a68(2): pop %r15
2a6a(1): ret near (%rsp)
2a6b(5): nop 0x0(%rax,%rax,1)
2a70(2): jnz 0xffffffe9(%rip)
2a72(3): cmp %rsi,%r10
2a75(2): jbe 0xffffffd8(%rip)
2a77(2): jmp 0xffffffe2(%rip)
2a79(7): lea 0xa538(%rip),%rcx
2a80(7): lea 0x9fc1(%rip),%rsi
2a87(7): lea 0xa01a(%rip),%rdi
2a8e(5): mov $0x3e9,%edx
2a93(5): call 0xfffff54d(%rip)
2a98(7): lea 0xa519(%rip),%rcx
2a9f(7): lea 0x9fa2(%rip),%rsi
2aa6(7): lea 0x9fdb(%rip),%rdi
2aad(5): mov $0x3e8,%edx
2ab2(5): call 0xfffff52e(%rip)
2ab7(7): lea 0xa4fa(%rip),%rcx
2abe(7): lea 0x9f83(%rip),%rsi
2ac5(7): lea 0x9f9c(%rip),%rdi
2acc(5): mov $0x3e7,%edx
2ad1(5): call 0xfffff50f(%rip)

"powm2" :
2ae0(2): push %r15
2ae2(2): push %r14
2ae4(3): mov %r8,%r15
2ae7(2): push %r13
2ae9(2): push %r12
2aeb(3): mov %rdi,%r12
2aee(1): push %rbp
2aef(1): push %rbx
2af0(5): mov $0x40,%ebx
2af5(4): sub $0x38,%rsp
2af9(3): mov (%r9),%rax
2afc(3): mov (%rsi),%r10
2aff(5): mov %rdx,0x28(%rsp)
2b04(4): mov 0x8(%rsi),%r11
2b08(3): mov (%rcx),%r13
2b0b(4): mov 0x8(%rcx),%r14
2b0f(5): mov %rax,0x10(%rsp)
2b14(4): mov 0x8(%r9),%rax
2b18(3): mov (%rdx),%rbp
2b1b(5): mov %rax,0x8(%rsp)
2b20(2): jmp 0x35(%rip)
2b22(6): nop 0x0(%rax,%rax,1)
2b28(2): push %r15
2b2a(2): push %r13
2b2c(3): mov %r10,%r8
2b2f(3): mov %r11,%rcx
2b32(3): mov %r10,%rdx
2b35(3): mov %r11,%rsi
2b38(3): mov %r12,%rdi
2b3b(3): mov %r14,%r9
2b3e(3): shr $0x1,%rbp
2b41(5): call 0xfffffe1f(%rip)
2b46(3): sub $0x1,%ebx
2b49(3): mov %rax,%r10
2b4c(4): mov (%r12),%r11
2b50(1): pop %rdi
2b51(2): pop %r8
2b53(2): jz 0x55(%rip)
2b55(4): test $0x1,%bpl
2b59(2): jz 0xffffffcf(%rip)
2b5b(2): push %r15
2b5d(2): push %r13
2b5f(3): mov %r14,%r9
2b62(5): mov 0x20(%rsp),%rdx
2b67(5): mov 0x18(%rsp),%rsi
2b6c(3): mov %r10,%r8
2b6f(3): mov %r11,%rcx
2b72(3): mov %r12,%rdi
2b75(5): mov %r11,0x28(%rsp)
2b7a(5): mov %r10,0x30(%rsp)
2b7f(5): call 0xfffffde1(%rip)
2b84(5): mov %rax,0x20(%rsp)
2b89(4): mov (%r12),%rax
2b8d(5): mov %rax,0x18(%rsp)
2b92(2): pop %r9
2b94(2): pop %r10
2b96(5): mov 0x20(%rsp),%r10
2b9b(5): mov 0x18(%rsp),%r11
2ba0(2): jmp 0xffffff88(%rip)
2ba2(6): nop 0x0(%rax,%rax,1)
2ba8(5): mov 0x28(%rsp),%rax
2bad(4): mov 0x8(%rax),%rbx
2bb1(3): test %rbx,%rbx
2bb4(2): jnz 0x35(%rip)
2bb6(5): jmp 0x82(%rip)
2bbb(5): nop 0x0(%rax,%rax,1)
2bc0(2): push %r15
2bc2(2): push %r13
2bc4(3): mov %r10,%rdx
2bc7(3): mov %r10,%r8
2bca(3): mov %r11,%rcx
2bcd(3): mov %r11,%rsi
2bd0(3): mov %r14,%r9
2bd3(3): mov %r12,%rdi
2bd6(5): call 0xfffffd8a(%rip)
2bdb(3): shr $0x1,%rbx
2bde(3): mov %rax,%r10
2be1(4): mov (%r12),%r11
2be5(1): pop %rax
2be6(1): pop %rdx
2be7(2): jz 0x51(%rip)
2be9(3): test $0x1,%bl
2bec(2): jz 0xffffffd4(%rip)
2bee(2): push %r15
2bf0(2): push %r13
2bf2(3): mov %r11,%rcx
2bf5(5): mov 0x20(%rsp),%rdx
2bfa(5): mov 0x18(%rsp),%rsi
2bff(3): mov %r10,%r8
2c02(3): mov %r14,%r9
2c05(3): mov %r12,%rdi
2c08(5): mov %r10,0x30(%rsp)
2c0d(5): mov %r11,0x28(%rsp)
2c12(5): call 0xfffffd4e(%rip)
2c17(5): mov %rax,0x20(%rsp)
2c1c(4): mov (%r12),%rax
2c20(5): mov %rax,0x18(%rsp)
2c25(1): pop %rcx
2c26(1): pop %rsi
2c27(5): mov 0x20(%rsp),%r10
2c2c(5): mov 0x18(%rsp),%r11
2c31(2): jmp 0xffffff8f(%rip)
2c33(5): nop 0x0(%rax,%rax,1)
2c38(5): mov 0x8(%rsp),%rax
2c3d(4): mov %rax,(%r12)
2c41(5): mov 0x10(%rsp),%rax
2c46(4): add $0x38,%rsp
2c4a(1): pop %rbx
2c4b(1): pop %rbp
2c4c(2): pop %r12
2c4e(2): pop %r13
2c50(2): pop %r14
2c52(2): pop %r15
2c54(1): ret near (%rsp)

"millerrabin2" :
2c60(2): push %r15
2c62(2): push %r14
2c64(3): mov %rdi,%r14
2c67(2): push %r13
2c69(2): push %r12
2c6b(3): mov %rsi,%r13
2c6e(1): push %rbp
2c6f(1): push %rbx
2c70(3): mov %rdx,%rsi
2c73(3): mov %r9,%rbx
2c76(3): mov %rcx,%rdx
2c79(3): mov %r14,%rcx
2c7c(4): sub $0x28,%rsp
2c80(5): lea 0x10(%rsp),%rdi
2c85(5): mov %r8d,0x8(%rsp)
2c8a(3): mov %r13,%r8
2c8d(9): mov $0x28,%rax
2c96(5): mov %rax,0x18(%rsp)
2c9b(2): xor %eax,%eax
2c9d(4): mov %rdi,(%rsp)
2ca1(5): call 0xfffffe3f(%rip)
2ca6(3): mov (%rbx),%rcx
2ca9(5): mov 0x10(%rsp),%rsi
2cae(4): mov 0x8(%rbx),%rdi
2cb2(3): cmp %rax,%rcx
2cb5(6): jz 0x8b(%rip)
2cbb(4): mov 0x8(%r14),%r9
2cbf(3): mov (%r14),%rdx
2cc2(3): mov %r9,%r12
2cc5(3): mov %rdx,%rbp
2cc8(3): sub %rcx,%rbp
2ccb(3): sbb %rdi,%r12
2cce(3): cmp %rbp,%rax
2cd1(4): setz %dil
2cd5(3): cmp %r12,%rsi
2cd8(3): setz %cl
2cdb(3): and %cl,%dil
2cde(5): mov %dil,0xf(%rsp)
2ce3(2): jnz 0x6d(%rip)
2ce5(5): cmp $0x1,0x8(%rsp)
2cea(6): mov $0x1,%r15d
2cf0(2): jnbe 0x1a(%rip)
2cf2(2): jmp 0x63(%rip)
2cf4(4): nop 0x0(%rax)
2cf8(4): add $0x1,%r15d
2cfc(5): cmp %r15d,0x8(%rsp)
2d01(2): jz 0x54(%rip)
2d03(3): mov (%r14),%rdx
2d06(4): mov 0x8(%r14),%r9
2d0a(2): push %r13
2d0c(1): push %rdx
2d0d(3): mov %rsi,%rcx
2d10(5): mov 0x10(%rsp),%rdi
2d15(3): mov %rax,%rdx
2d18(3): mov %rax,%r8
2d1b(5): call 0xfffffc45(%rip)
2d20(3): cmp %rax,%rbp
2d23(5): mov 0x20(%rsp),%rsi
2d28(1): pop %rdx
2d29(1): pop %rcx
2d2a(2): jnz 0x7(%rip)
2d2c(3): cmp %rsi,%r12
2d2f(2): jz 0x21(%rip)
2d31(3): cmp %rax,(%rbx)
2d34(2): jnz 0xffffffc4(%rip)
2d36(4): cmp %rsi,0x8(%rbx)
2d3a(2): jnz 0xffffffbe(%rip)
2d3c(2): jmp 0x19(%rip)
2d3e(2): nop 
2d40(3): cmp %rsi,%rdi
2d43(6): jnz 0xffffff78(%rip)
2d49(7): nop 0x0(%rax)
2d50(5): mov $0x1,0xf(%rsp)
2d55(5): mov 0x18(%rsp),%rbx
2d5a(9): xor $0x28,%rbx
2d63(5): movzx 0xf(%rsp),%eax
2d68(2): jnz 0x11(%rip)
2d6a(4): add $0x28,%rsp
2d6e(1): pop %rbx
2d6f(1): pop %rbp
2d70(2): pop %r12
2d72(2): pop %r13
2d74(2): pop %r14
2d76(2): pop %r15
2d78(1): ret near (%rsp)
2d79(5): call 0xfffff1a7(%rip)

"lbuf_putint" :
2d80(1): push %rbp
2d81(1): push %rbx
2d82(3): mov %rsi,%rbp
2d85(4): sub $0x28,%rsp
2d89(3): mov %rsp,%rbx
2d8c(3): mov %rbx,%rsi
2d8f(9): mov $0x28,%rax
2d98(5): mov %rax,0x18(%rsp)
2d9d(2): xor %eax,%eax
2d9f(5): call 0x33c1(%rip)
2da4(3): sub %rax,%rbx
2da7(7): mov 0x21034a(%rip),%r8
2dae(4): add $0x14,%rbx
2db2(3): cmp %rbp,%rbx
2db5(2): jnb 0x2b(%rip)
2db7(5): lea 0x0(%rbp,%r8,1),%rcx
2dbc(3): mov %r8,%rdx
2dbf(3): sub %rbx,%rcx
2dc2(6): nop 0x0(%rax,%rax,1)
2dc8(3): mov $0x30,(%rdx)
2dcb(4): add $0x1,%rdx
2dcf(3): cmp %rcx,%rdx
2dd2(2): jnz 0xfffffff6(%rip)
2dd4(3): sub %rbx,%rbp
2dd7(3): add %rbp,%r8
2dda(6): nop 0x0(%rax,%rax,1)
2de0(3): mov %r8,%rdi
2de3(3): mov %rbx,%rdx
2de6(3): mov %rax,%rsi
2de9(5): call 0xfffff2b7(%rip)
2dee(3): mov %rax,%r8
2df1(3): add %rbx,%r8
2df4(5): mov 0x18(%rsp),%rax
2df9(9): xor $0x28,%rax
2e02(7): mov %r8,0x2102ef(%rip)
2e09(2): jnz 0x9(%rip)
2e0b(4): add $0x28,%rsp
2e0f(1): pop %rbx
2e10(1): pop %rbp
2e11(1): ret near (%rsp)
2e12(5): call 0xfffff10e(%rip)

"mp_factor_insert" :
2e20(2): push %r15
2e22(2): push %r14
2e24(2): push %r13
2e26(2): push %r12
2e28(3): mov %rsi,%r12
2e2b(1): push %rbp
2e2c(1): push %rbx
2e2d(4): sub $0x38,%rsp
2e31(4): mov 0x10(%rdi),%r15
2e35(3): mov (%rdi),%rdx
2e38(4): mov 0x8(%rdi),%rax
2e3c(5): mov %rdi,0x10(%rsp)
2e41(4): lea 0xffffffff(%r15),%rbp
2e45(5): mov %rdx,0x18(%rsp)
2e4a(5): mov %rax,0x8(%rsp)
2e4f(3): test %rbp,%rbp
2e52(6): js 0x186(%rip)
2e58(3): mov %r15,%rax
2e5b(3): mov %rbp,%r13
2e5e(3): mov %rbp,%r14
2e61(4): shl/sal $0x4,%rax
2e65(5): mov %rax,0x20(%rsp)
2e6a(5): lea 0xfffffff0(%rdx,%rax,1),%rbx
2e6f(2): jmp 0x17(%rip)
2e71(7): nop 0x0(%rax)
2e78(4): sub $0x1,%r14
2e7c(4): sub $0x10,%rbx
2e80(4): cmp $0xffffffff,%r14
2e84(2): jz 0x3c(%rip)
2e86(3): mov %r12,%rsi
2e89(3): mov %rbx,%rdi
2e8c(3): mov %r14,%rbp
2e8f(5): call 0xfffff331(%rip)
2e94(3): cmp $0x0,%eax
2e97(2): jnle 0xffffffe1(%rip)
2e99(6): jnz 0xe7(%rip)
2e9f(5): mov 0x8(%rsp),%rax
2ea4(5): add $0x1,0x0(%rax,%r14,8)
2ea9(4): add $0x38,%rsp
2ead(1): pop %rbx
2eae(1): pop %rbp
2eaf(2): pop %r12
2eb1(2): pop %r13
2eb3(2): pop %r14
2eb5(2): pop %r15
2eb7(1): ret near (%rsp)
2eb8(8): nop 0x0(%rax,%rax,1)
2ec0(5): mov 0x20(%rsp),%rbx
2ec5(5): mov 0x18(%rsp),%rdi
2eca(4): add $0x1,%r15
2ece(5): mov %r15,0x28(%rsp)
2ed3(4): lea 0x10(%rbx),%rsi
2ed7(5): call 0x6e69(%rip)
2edc(5): mov 0x8(%rsp),%rdi
2ee1(3): mov %rax,%rbp
2ee4(8): lea 0x0(,%r15,8),%rsi
2eec(3): add %rbp,%rbx
2eef(5): mov %rax,0x18(%rsp)
2ef4(3): mov %r14,%rbp
2ef7(5): call 0x6e49(%rip)
2efc(3): mov %rbx,%rdi
2eff(3): mov %rax,%r15
2f02(5): call 0xfffff36e(%rip)
2f07(3): mov %rbx,%rdi
2f0a(6): nop 0x0(%rax,%rax,1)
2f10(4): lea 0xfffffff0(%rdi),%rbx
2f14(3): mov %rbx,%rsi
2f17(5): call 0xfffff069(%rip)
2f1c(4): mov 0x0(%r15,%r13,8),%rax
2f20(3): mov %rbx,%rdi
2f23(5): mov %rax,0x8(%r15,%r13,8)
2f28(4): sub $0x1,%r13
2f2c(3): cmp %r14,%r13
2f2f(2): jnle 0xffffffe1(%rip)
2f31(5): mov 0x18(%rsp),%rbx
2f36(4): add $0x1,%rbp
2f3a(3): mov %r12,%rsi
2f3d(3): mov %rbp,%rdi
2f40(4): shl/sal $0x4,%rdi
2f44(3): add %rbx,%rdi
2f47(5): call 0xfffff039(%rip)
2f4c(5): mov 0x10(%rsp),%rax
2f51(5): mov 0x28(%rsp),%rcx
2f56(8): mov $0x1,0x0(%r15,%rbp,8)
2f5e(3): mov %rbx,(%rax)
2f61(4): mov %r15,0x8(%rax)
2f65(4): mov %rcx,0x10(%rax)
2f69(4): add $0x38,%rsp
2f6d(1): pop %rbx
2f6e(1): pop %rbp
2f6f(2): pop %r12
2f71(2): pop %r13
2f73(2): pop %r14
2f75(2): pop %r15
2f77(1): ret near (%rsp)
2f78(8): nop 0x0(%rax,%rax,1)
2f80(5): mov 0x20(%rsp),%rbx
2f85(5): mov 0x18(%rsp),%rdi
2f8a(4): add $0x1,%r15
2f8e(5): mov %r15,0x28(%rsp)
2f93(4): lea 0x10(%rbx),%rsi
2f97(5): call 0x6da9(%rip)
2f9c(5): mov 0x8(%rsp),%rdi
2fa1(8): lea 0x0(,%r15,8),%rsi
2fa9(5): mov %rax,0x18(%rsp)
2fae(5): call 0x6d92(%rip)
2fb3(5): add 0x18(%rsp),%rbx
2fb8(3): mov %rax,%r15
2fbb(3): mov %rbx,%rdi
2fbe(5): call 0xfffff2b2(%rip)
2fc3(3): cmp %r14,%r13
2fc6(6): jnle 0xffffff41(%rip)
2fcc(5): jmp 0xffffff65(%rip)
2fd1(7): nop 0x0(%rax)
2fd8(4): add $0x1,%r15
2fdc(5): mov 0x18(%rsp),%rdi
2fe1(3): mov %r15,%rbx
2fe4(5): mov %r15,0x28(%rsp)
2fe9(4): shl/sal $0x4,%rbx
2fed(3): mov %rbx,%rsi
2ff0(5): call 0x6d50(%rip)
2ff5(5): mov 0x8(%rsp),%rdi
2ffa(8): lea 0x0(,%r15,8),%rsi
3002(3): mov %rax,%r14
3005(5): mov %rax,0x18(%rsp)
300a(5): call 0x6d36(%rip)
300f(5): lea 0xfffffff0(%r14,%rbx,1),%rdi
3014(3): mov %rax,%r15
3017(5): call 0xfffff259(%rip)
301c(5): jmp 0xffffff15(%rip)

"lbuf_flush" :
3030(1): push %rbx
3031(7): mov 0x2100b8(%rip),%rsi
3038(5): mov $0x1,%edi
303d(7): mov 0x2100b4(%rip),%rbx
3044(3): sub %rsi,%rbx
3047(3): mov %rbx,%rdx
304a(5): call 0x3096(%rip)
304f(3): cmp %rbx,%rax
3052(2): jnz 0x12(%rip)
3054(7): mov 0x210095(%rip),%rax
305b(1): pop %rbx
305c(7): mov %rax,0x210095(%rip)
3063(1): ret near (%rsp)
3064(7): lea 0x9d20(%rip),%rsi
306b(5): mov $0x5,%edx
3070(2): xor %edi,%edi
3072(5): call 0xffffee6e(%rip)
3077(3): mov %rax,%rbx
307a(5): call 0xffffed76(%rip)
307f(2): mov (%rax),%esi
3081(7): lea 0xcf84(%rip),%rdx
3088(3): mov %rbx,%rcx
308b(5): mov $0x1,%edi
3090(2): xor %eax,%eax
3092(5): call 0xfffff14e(%rip)
3097(9): nop 0x0(%rax,%rax,1)
30a0(3): test %rsi,%rsi
30a3(3): mov %rdx,%rax
30a6(2): jz 0x1a(%rip)
30a8(5): cmp $0x0,0x8(%rdi)
30ad(2): jnz 0x20(%rip)
30af(3): mov %rdx,(%rdi)
30b2(4): mov %rsi,0x8(%rdi)
30b6(1): ret near (%rsp)
30b7(9): nop 0x0(%rax,%rax,1)
30c0(5): mov $0x1,%edx
30c5(3): mov %rax,%rsi
30c8(5): jmp 0xfffff638(%rip)
30cd(7): lea 0x9ecc(%rip),%rcx
30d4(7): lea 0x996d(%rip),%rsi
30db(7): lea 0x9cb5(%rip),%rdi
30e2(4): sub $0x8,%rsp
30e6(5): mov $0x235,%edx
30eb(5): call 0xffffeef5(%rip)

"factor_insert_large" :
30a0(3): test %rsi,%rsi
30a3(3): mov %rdx,%rax
30a6(2): jz 0x1a(%rip)
30a8(5): cmp $0x0,0x8(%rdi)
30ad(2): jnz 0x20(%rip)
30af(3): mov %rdx,(%rdi)
30b2(4): mov %rsi,0x8(%rdi)
30b6(1): ret near (%rsp)
30b7(9): nop 0x0(%rax,%rax,1)
30c0(5): mov $0x1,%edx
30c5(3): mov %rax,%rsi
30c8(5): jmp 0xfffff638(%rip)
30cd(7): lea 0x9ecc(%rip),%rcx
30d4(7): lea 0x996d(%rip),%rsi
30db(7): lea 0x9cb5(%rip),%rdi
30e2(4): sub $0x8,%rsp
30e6(5): mov $0x235,%edx
30eb(5): call 0xffffeef5(%rip)

"gcd2_odd" :
30f0(4): test $0x1,%r8b
30f4(6): jz 0xda(%rip)
30fa(3): mov %rdx,%rax
30fd(3): mov %rsi,%r9
3100(3): or %rsi,%rax
3103(2): jnz 0x1d(%rip)
3105(5): jmp 0xbb(%rip)
310a(6): nop 0x0(%rax,%rax,1)
3110(3): mov %r9,%rax
3113(3): shr $0x1,%rdx
3116(3): shr $0x1,%r9
3119(4): shl/sal $0x3f,%rax
311d(3): or %rax,%rdx
3120(3): test $0x1,%dl
3123(2): jz 0xffffffed(%rip)
3125(3): nop (%rax)
3128(3): mov %r9,%rax
312b(3): or %rcx,%rax
312e(2): jz 0x48(%rip)
3130(3): cmp %rcx,%r9
3133(2): jnbe 0x5d(%rip)
3135(3): setz %al
3138(3): cmp %r8,%rdx
313b(2): jbe 0x6(%rip)
313d(2): test %al,%al
313f(2): jnz 0x51(%rip)
3141(3): cmp %rcx,%r9
3144(2): jb 0xb(%rip)
3146(3): cmp %r8,%rdx
3149(2): jnb 0x7e(%rip)
314b(2): test %al,%al
314d(2): jz 0x7a(%rip)
314f(3): sub %rdx,%r8
3152(3): sbb %r9,%rcx
3155(3): nop (%rax)
3158(3): mov %rcx,%rax
315b(3): shr $0x1,%r8
315e(3): shr $0x1,%rcx
3161(4): shl/sal $0x3f,%rax
3165(3): or %rax,%r8
3168(4): test $0x1,%r8b
316c(2): jz 0xffffffec(%rip)
316e(3): mov %r9,%rax
3171(3): or %rcx,%rax
3174(2): jnz 0xffffffbc(%rip)
3176(7): mov $0x0,(%rdi)
317d(3): mov %rdx,%rsi
3180(3): mov %r8,%rdi
3183(5): jmp 0xfffff51d(%rip)
3188(8): nop 0x0(%rax,%rax,1)
3190(3): sub %r8,%rdx
3193(3): sbb %rcx,%r9
3196(a): nop 0x0(%rax,%rax,1)
31a0(3): mov %r9,%rax
31a3(3): shr $0x1,%rdx
31a6(3): shr $0x1,%r9
31a9(4): shl/sal $0x3f,%rax
31ad(3): or %rax,%rdx
31b0(3): test $0x1,%dl
31b3(2): jz 0xffffffed(%rip)
31b5(5): jmp 0xffffff73(%rip)
31ba(6): nop 0x0(%rax,%rax,1)
31c0(3): mov %rcx,(%rdi)
31c3(3): mov %r8,%rax
31c6(1): ret near (%rsp)
31c7(3): mov %r9,(%rdi)
31ca(3): mov %rdx,%rax
31cd(1): ret near (%rsp)
31ce(7): lea 0x9d93(%rip),%rcx
31d5(7): lea 0x986c(%rip),%rsi
31dc(7): lea 0x9bcc(%rip),%rdi
31e3(4): sub $0x8,%rsp
31e7(5): mov $0x1e3,%edx
31ec(5): call 0xffffedf4(%rip)

"mod2" :
3200(3): test %rcx,%rcx
3203(6): jz 0x85(%rip)
3209(3): test %rsi,%rsi
320c(3): mov %rdx,%rax
320f(2): jz 0x71(%rip)
3211(4): bsr %rcx,%r10
3215(4): bsr %rsi,%rdx
3219(4): xor $0x3f,%r10d
321d(3): xor $0x3f,%edx
3220(3): mov %r8,%r9
3223(3): sub %edx,%r10d
3226(3): mov %rcx,%rdx
3229(3): mov %r10d,%ecx
322c(3): shl/sal %cl,%rdx
322f(5): mov $0x40,%ecx
3234(3): sub %r10d,%ecx
3237(3): shr %cl,%r9
323a(3): mov %r10d,%ecx
323d(3): or %rdx,%r9
3240(3): shl/sal %cl,%r8
3243(3): test %r10d,%r10d
3246(2): jle 0x34(%rip)
3248(2): xor %edx,%edx
324a(6): nop 0x0(%rax,%rax,1)
3250(3): cmp %rsi,%r9
3253(2): jb 0x9(%rip)
3255(2): jnz 0xd(%rip)
3257(3): cmp %r8,%rax
325a(2): jb 0x8(%rip)
325c(3): sub %r8,%rax
325f(3): sbb %r9,%rsi
3262(3): mov %r9,%rcx
3265(3): shr $0x1,%r8
3268(3): add $0x1,%edx
326b(4): shl/sal $0x3f,%rcx
326f(3): shr $0x1,%r9
3272(3): or %rcx,%r8
3275(3): cmp %edx,%r10d
3278(2): jnz 0xffffffd8(%rip)
327a(3): mov %rsi,(%rdi)
327d(1): ret near (%rsp)
327e(2): nop 
3280(7): mov $0x0,(%rdi)
3287(1): ret near (%rsp)
3288(7): lea 0x9cd1(%rip),%rcx
328f(7): lea 0x97b2(%rip),%rsi
3296(7): lea 0x9b19(%rip),%rdi
329d(4): sub $0x8,%rsp
32a1(5): mov $0x1a3,%edx
32a6(5): call 0xffffed3a(%rip)

"print_uintmaxes" :
32b0(3): test %rdi,%rdi
32b3(3): mov %rsi,%r8
32b6(2): jnz 0x12(%rip)
32b8(2): xor %esi,%esi
32ba(3): mov %r8,%rdi
32bd(5): jmp 0xfffffac3(%rip)
32c2(6): nop 0x0(%rax,%rax,1)
32c8(3): mov %rdi,%rdx
32cb(a): mov $0x19342813113834067,%rcx
32d5(4): sub $0x18,%rsp
32d9(4): shr $0x9,%rdx
32dd(6): mov $0x40,%r9d
32e3(2): xor %esi,%esi
32e5(3): mov %rdx,%rax
32e8(3): mul %rax,%rcx,%rdx
32eb(5): mov $0x3b9aca00,%ecx
32f0(4): shr $0xb,%rdx
32f4(7): imul %rdx,$0x3b9aca00,%rax
32fb(3): sub %rax,%rdi
32fe(2): xor %eax,%eax
3300(3): mov %rcx,%r10
3303(3): shr $0x1,%rax
3306(3): shr $0x1,%rcx
3309(4): shl/sal $0x3f,%r10
330d(3): add %rsi,%rsi
3310(3): or %r10,%rax
3313(3): cmp %rdi,%rcx
3316(2): jb 0x9(%rip)
3318(2): jnz 0x11(%rip)
331a(3): cmp %r8,%rax
331d(2): jnbe 0xc(%rip)
331f(4): add $0x1,%rsi
3323(3): sub %rax,%r8
3326(3): sbb %rcx,%rdi
3329(4): sub $0x1,%r9d
332d(2): jnz 0xffffffd3(%rip)
332f(3): mov %rdx,%rdi
3332(5): mov %r8,0x8(%rsp)
3337(5): call 0xffffff79(%rip)
333c(5): mov 0x8(%rsp),%r8
3341(5): mov $0x9,%esi
3346(4): add $0x18,%rsp
334a(3): mov %r8,%rdi
334d(5): jmp 0xfffffa33(%rip)

"lbuf_putc" :
3360(1): push %rbp
3361(1): push %rbx
3362(4): sub $0x8,%rsp
3366(7): mov 0x20fd8b(%rip),%rax
336d(4): cmp $0xa,%dil
3371(4): lea 0x1(%rax),%rbp
3375(3): mov %dil,(%rax)
3378(7): mov %rbp,0x20fd79(%rip)
337f(2): jz 0x11(%rip)
3381(4): add $0x8,%rsp
3385(1): pop %rbx
3386(1): pop %rbp
3387(1): ret near (%rsp)
3388(8): nop 0x0(%rax,%rax,1)
3390(6): mov 0x20fc7a(%rip),%eax
3396(7): mov 0x20fd53(%rip),%rbx
339d(3): cmp $0xff,%eax
33a0(2): jz 0x80(%rip)
33a2(2): test %eax,%eax
33a4(2): jnz 0x6c(%rip)
33a6(3): mov %rbp,%rax
33a9(3): sub %rbx,%rax
33ac(7): add $0x200,%rbx
33b3(6): cmp $0x1ff,%rax
33b9(2): jbe 0xffffffc8(%rip)
33bb(4): cmp $0xa,0xffffffff(%rbx)
33bf(4): lea 0xffffffff(%rbx),%rax
33c3(2): jz 0x12(%rip)
33c5(3): nop (%rax)
33c8(3): mov %rax,%rbx
33cb(4): cmp $0xa,0xffffffff(%rbx)
33cf(4): lea 0xffffffff(%rbx),%rax
33d3(2): jnz 0xfffffff5(%rip)
33d5(7): mov %rbx,0x20fd1c(%rip)
33dc(3): sub %rbx,%rbp
33df(5): call 0xfffffc51(%rip)
33e4(7): mov 0x20fd05(%rip),%rcx
33eb(3): mov %rbp,%rdx
33ee(3): mov %rbx,%rsi
33f1(3): mov %rcx,%rdi
33f4(5): call 0xffffecac(%rip)
33f9(3): add %rax,%rbp
33fc(7): mov %rbp,0x20fcf5(%rip)
3403(4): add $0x8,%rsp
3407(1): pop %rbx
3408(1): pop %rbp
3409(1): ret near (%rsp)
340a(6): nop 0x0(%rax,%rax,1)
3410(4): add $0x8,%rsp
3414(1): pop %rbx
3415(1): pop %rbp
3416(5): jmp 0xfffffc1a(%rip)
341b(5): nop 0x0(%rax,%rax,1)
3420(2): xor %edi,%edi
3422(5): call 0xffffea3e(%rip)
3427(6): mov %eax,0x20fbe3(%rip)
342d(5): jmp 0xffffff75(%rip)

"mp_millerrabin" :
3440(2): push %r14
3442(2): push %r13
3444(3): mov %rsi,%r13
3447(2): push %r12
3449(1): push %rbp
344a(3): mov %rdx,%rsi
344d(1): push %rbx
344e(3): mov %rcx,%rbx
3451(3): mov %r8,%rdx
3454(3): mov %rdi,%rcx
3457(3): mov %rdi,%r12
345a(3): mov %rbx,%rdi
345d(3): mov %r9,%r14
3460(5): call 0xffffeab0(%rip)
3465(5): mov $0x1,%esi
346a(3): mov %rbx,%rdi
346d(5): call 0xffffedf3(%rip)
3472(2): test %eax,%eax
3474(2): jz 0x60(%rip)
3476(3): mov %r13,%rsi
3479(3): mov %rbx,%rdi
347c(5): call 0xffffed44(%rip)
3481(2): test %eax,%eax
3483(2): jz 0x51(%rip)
3485(4): cmp $0x1,%r14
3489(5): mov $0x1,%ebp
348e(2): jnbe 0x24(%rip)
3490(2): jmp 0x58(%rip)
3492(6): nop 0x0(%rax,%rax,1)
3498(5): mov $0x1,%esi
349d(3): mov %rbx,%rdi
34a0(5): call 0xffffedc0(%rip)
34a5(2): test %eax,%eax
34a7(2): jz 0x41(%rip)
34a9(4): add $0x1,%rbp
34ad(3): cmp %rbp,%r14
34b0(2): jz 0x38(%rip)
34b2(3): mov %r12,%rcx
34b5(5): mov $0x2,%edx
34ba(3): mov %rbx,%rsi
34bd(3): mov %rbx,%rdi
34c0(5): call 0xffffedd0(%rip)
34c5(3): mov %r13,%rsi
34c8(3): mov %rbx,%rdi
34cb(5): call 0xffffecf5(%rip)
34d0(2): test %eax,%eax
34d2(2): jnz 0xffffffc6(%rip)
34d4(1): pop %rbx
34d5(5): mov $0x1,%eax
34da(1): pop %rbp
34db(2): pop %r12
34dd(2): pop %r13
34df(2): pop %r14
34e1(1): ret near (%rsp)
34e2(6): nop 0x0(%rax,%rax,1)
34e8(1): pop %rbx
34e9(2): xor %eax,%eax
34eb(1): pop %rbp
34ec(2): pop %r12
34ee(2): pop %r13
34f0(2): pop %r14
34f2(1): ret near (%rsp)

"mp_factor" :
3500(2): push %r15
3502(2): push %r14
3504(2): push %r13
3506(2): push %r12
3508(1): push %rbp
3509(1): push %rbx
350a(4): sub $0x48,%rsp
350e(7): mov $0x0,(%rsi)
3515(8): mov $0x0,0x8(%rsi)
351d(9): mov $0x28,%rax
3526(5): mov %rax,0x38(%rsp)
352b(2): xor %eax,%eax
352d(3): mov 0x4(%rdi),%eax
3530(8): mov $0x0,0x10(%rsi)
3538(2): test %eax,%eax
353a(2): jnz 0x26(%rip)
353c(5): mov 0x38(%rsp),%rax
3541(9): xor $0x28,%rax
354a(6): jnz 0x1c8(%rip)
3550(4): add $0x48,%rsp
3554(1): pop %rbx
3555(1): pop %rbp
3556(2): pop %r12
3558(2): pop %r13
355a(2): pop %r14
355c(2): pop %r15
355e(1): ret near (%rsp)
355f(1): nop 
3560(7): cmp $0x0,0x20fb99(%rip)
3567(3): mov %rdi,%r12
356a(3): mov %rsi,%r13
356d(6): jnz 0x143(%rip)
3573(5): lea 0x10(%rsp),%rdi
3578(5): mov %rdi,0x8(%rsp)
357d(5): call 0xffffecf3(%rip)
3582(2): xor %esi,%esi
3584(3): mov %r12,%rdi
3587(5): call 0xffffe839(%rip)
358c(3): mov %r12,%rsi
358f(3): mov %rax,%rbx
3592(3): mov %rax,%rdx
3595(3): mov %r12,%rdi
3598(5): call 0xffffea78(%rip)
359d(3): test %rbx,%rbx
35a0(2): jz 0x36(%rip)
35a2(5): lea 0x20(%rsp),%rbp
35a7(9): nop 0x0(%rax,%rax,1)
35b0(5): mov $0x2,%esi
35b5(3): mov %rbp,%rdi
35b8(5): call 0xffffebf8(%rip)
35bd(3): mov %rbp,%rsi
35c0(3): mov %r13,%rdi
35c3(5): call 0xfffff85d(%rip)
35c8(3): mov %rbp,%rdi
35cb(5): call 0xffffeb45(%rip)
35d0(4): sub $0x1,%rbx
35d4(2): jnz 0xffffffdc(%rip)
35d6(5): mov $0x1,%ebp
35db(5): mov $0x3,%ebx
35e0(5): lea 0x20(%rsp),%r15
35e5(2): jmp 0x3b(%rip)
35e7(9): nop 0x0(%rax,%rax,1)
35f0(7): lea 0xc769(%rip),%rax
35f7(3): mov %r12,%rdi
35fa(4): lea 0x1(%rbp),%r14d
35fe(4): movzx 0x0(%rax,%rbp,1),%eax
3602(3): add %rax,%rbx
3605(3): mov %rbx,%rsi
3608(4): imul %rbx,%rsi
360c(5): call 0xffffec54(%rip)
3611(2): test %eax,%eax
3613(2): js 0x50(%rip)
3615(3): mov %r14d,%ebp
3618(6): cmp $0x29d,%ebp
361e(2): jz 0x45(%rip)
3620(3): mov %rbx,%rsi
3623(3): mov %r12,%rdi
3626(5): call 0xffffea9a(%rip)
362b(2): test %eax,%eax
362d(2): jz 0xffffffc3(%rip)
362f(3): mov %rbx,%rdx
3632(3): mov %r12,%rsi
3635(3): mov %r12,%rdi
3638(5): call 0xffffe988(%rip)
363d(3): mov %rbx,%rsi
3640(3): mov %r15,%rdi
3643(5): call 0xffffeb6d(%rip)
3648(3): mov %r15,%rsi
364b(3): mov %r13,%rdi
364e(5): call 0xfffff7d2(%rip)
3653(3): mov %r15,%rdi
3656(5): call 0xffffeaba(%rip)
365b(6): cmp $0x29d,%ebp
3661(2): jnz 0xffffffbf(%rip)
3663(5): mov 0x8(%rsp),%rdi
3668(5): call 0xffffeaa8(%rip)
366d(5): mov $0x1,%esi
3672(3): mov %r12,%rdi
3675(5): call 0xffffebeb(%rip)
367a(2): test %eax,%eax
367c(6): jz 0xfffffec0(%rip)
3682(7): cmp $0x0,0x20fa77(%rip)
3689(2): jnz 0x67(%rip)
368b(3): mov %r12,%rdi
368e(5): call 0x92(%rip)
3693(2): test %al,%al
3695(2): jnz 0x43(%rip)
3697(3): mov %r13,%rdx
369a(5): mov $0x1,%esi
369f(3): mov %r12,%rdi
36a2(5): call 0x2ce(%rip)
36a7(5): jmp 0xfffffe95(%rip)
36ac(4): nop 0x0(%rax)
36b0(7): mov 0x20fa29(%rip),%rcx
36b7(7): lea 0x9700(%rip),%rdi
36be(5): mov $0x11,%edx
36c3(5): mov $0x1,%esi
36c8(5): call 0xffffeb78(%rip)
36cd(5): jmp 0xfffffea6(%rip)
36d2(6): nop 0x0(%rax,%rax,1)
36d8(3): mov %r12,%rsi
36db(3): mov %r13,%rdi
36de(5): call 0xfffff742(%rip)
36e3(5): jmp 0xfffffe59(%rip)
36e8(8): nop 0x0(%rax,%rax,1)
36f0(7): mov 0x20f9e9(%rip),%rcx
36f7(7): lea 0x96d2(%rip),%rdi
36fe(5): mov $0x13,%edx
3703(5): mov $0x1,%esi
3708(5): call 0xffffeb38(%rip)
370d(5): jmp 0xffffff7e(%rip)
3712(5): call 0xffffe80e(%rip)

"mp_prime_p" :
3720(2): push %r15
3722(2): push %r14
3724(5): mov $0x1,%esi
3729(2): push %r13
372b(2): push %r12
372d(3): mov %rdi,%r12
3730(1): push %rbp
3731(1): push %rbx
3732(7): sub $0x98,%rsp
3739(9): mov $0x28,%rax
3742(8): mov %rax,0x88(%rsp)
374a(2): xor %eax,%eax
374c(5): call 0xffffeb14(%rip)
3751(2): test %eax,%eax
3753(6): jle 0x205(%rip)
3759(5): mov $0x17ded79,%esi
375e(3): mov %r12,%rdi
3761(5): call 0xffffeaff(%rip)
3766(2): test %eax,%eax
3768(6): js 0x188(%rip)
376e(5): lea 0x60(%rsp),%r13
3773(5): lea 0x40(%rsp),%r14
3778(5): lea 0x50(%rsp),%rbp
377d(5): lea 0x70(%rsp),%rbx
3782(3): xor %r8d,%r8d
3785(2): xor %eax,%eax
3787(3): mov %r13,%rdx
378a(3): mov %rbp,%rsi
378d(3): mov %r14,%rdi
3790(3): mov %rbx,%rcx
3793(4): mov %r14,(%rsp)
3797(5): call 0xffffe7c9(%rip)
379c(5): mov $0x1,%edx
37a1(3): mov %r12,%rsi
37a4(3): mov %r13,%rdi
37a7(5): call 0xffffe699(%rip)
37ac(2): xor %esi,%esi
37ae(3): mov %r13,%rdi
37b1(5): call 0xffffe60f(%rip)
37b6(3): mov %r13,%rsi
37b9(3): mov %rax,%rdx
37bc(3): mov %r14,%rdi
37bf(3): mov %rax,%r15
37c2(5): mov %rax,0x8(%rsp)
37c7(5): call 0xffffe969(%rip)
37cc(5): mov $0x2,%esi
37d1(3): mov %rbp,%rdi
37d4(5): call 0xffffe69c(%rip)
37d9(3): mov %r15,%r9
37dc(3): mov %r14,%r8
37df(3): mov %rbx,%rcx
37e2(3): mov %rbp,%rdx
37e5(3): mov %r13,%rsi
37e8(3): mov %r12,%rdi
37eb(5): call 0xfffffc55(%rip)
37f0(2): test %al,%al
37f2(4): mov %al,0x17(%rsp)
37f6(6): jz 0x144(%rip)
37fc(3): mov %r13,%rsi
37ff(3): mov %rbx,%rdi
3802(7): lea 0xc557(%rip),%r14
3809(5): call 0xffffe777(%rip)
380e(5): lea 0x20(%rsp),%rsi
3813(3): mov %rbx,%rdi
3816(5): mov %rsi,0x18(%rsp)
381b(5): call 0xfffffce5(%rip)
3820(6): cmp $0x0,0x30(%rsp)
3826(6): jz 0x10a(%rip)
382c(3): xor %r15d,%r15d
382f(3): mov %r15,%rdx
3832(3): mov %r13,%rsi
3835(3): mov %rbx,%rdi
3838(4): shl/sal $0x4,%rdx
383c(5): add 0x20(%rsp),%rdx
3841(4): add $0x1,%r15
3845(5): call 0xffffe6fb(%rip)
384a(3): mov %r12,%rcx
384d(3): mov %rbx,%rdx
3850(3): mov %rbp,%rsi
3853(3): mov %rbx,%rdi
3856(5): call 0xffffe6ba(%rip)
385b(5): mov $0x1,%esi
3860(3): mov %rbx,%rdi
3863(5): call 0xffffe9fd(%rip)
3868(5): cmp 0x30(%rsp),%r15
386d(6): jnb 0xb3(%rip)
3873(2): test %eax,%eax
3875(2): jnz 0xffffffba(%rip)
3877(9): nop 0x0(%rax,%rax,1)
3880(4): movzx (%r14),%edx
3884(3): mov %rbp,%rsi
3887(3): mov %rbp,%rdi
388a(5): call 0xffffe806(%rip)
388f(5): mov 0x8(%rsp),%r9
3894(4): mov (%rsp),%r8
3898(3): mov %rbx,%rcx
389b(3): mov %rbp,%rdx
389e(3): mov %r13,%rsi
38a1(3): mov %r12,%rdi
38a4(5): call 0xfffffb9c(%rip)
38a9(2): test %al,%al
38ab(6): jz 0xb5(%rip)
38b1(7): lea 0xc744(%rip),%rax
38b8(4): add $0x1,%r14
38bc(3): cmp %rax,%r14
38bf(6): jnz 0xffffff61(%rip)
38c5(7): lea 0x91fc(%rip),%rsi
38cc(5): mov $0x5,%edx
38d1(2): xor %edi,%edi
38d3(5): call 0xffffe60d(%rip)
38d8(2): xor %esi,%esi
38da(3): mov %rax,%rdx
38dd(2): xor %edi,%edi
38df(2): xor %eax,%eax
38e1(5): call 0xffffe8ff(%rip)
38e6(5): call 0xffffe4fa(%rip)
38eb(5): nop 0x0(%rax,%rax,1)
38f0(5): mov $0x1,0x17(%rsp)
38f5(8): mov 0x88(%rsp),%rcx
38fd(9): xor $0x28,%rcx
3906(5): movzx 0x17(%rsp),%eax
390b(2): jnz 0x5c(%rip)
390d(7): add $0x98,%rsp
3914(1): pop %rbx
3915(1): pop %rbp
3916(2): pop %r12
3918(2): pop %r13
391a(2): pop %r14
391c(2): pop %r15
391e(1): ret near (%rsp)
391f(1): nop 
3920(2): test %eax,%eax
3922(6): jz 0xffffff5e(%rip)
3928(8): nop 0x0(%rax,%rax,1)
3930(5): mov 0x18(%rsp),%rdi
3935(5): call 0xffffefdb(%rip)
393a(4): mov (%rsp),%rdi
393e(3): xor %r8d,%r8d
3941(3): mov %rbx,%rcx
3944(3): mov %r13,%rdx
3947(3): mov %rbp,%rsi
394a(2): xor %eax,%eax
394c(5): call 0xffffe504(%rip)
3951(2): jmp 0xffffffa4(%rip)
3953(5): nop 0x0(%rax,%rax,1)
3958(5): mov $0x0,0x17(%rsp)
395d(2): jmp 0xffffff98(%rip)
395f(1): nop 
3960(5): mov $0x0,0x17(%rsp)
3965(2): jmp 0xffffffcb(%rip)
3967(5): call 0xffffe5b9(%rip)

"mp_factor_using_pollard_rho" :
3970(2): push %r15
3972(2): push %r14
3974(2): push %r13
3976(2): push %r12
3978(3): mov %rdi,%r13
397b(1): push %rbp
397c(1): push %rbx
397d(7): sub $0xc8,%rsp
3984(9): mov $0x28,%rax
398d(8): mov %rax,0xb8(%rsp)
3995(2): xor %eax,%eax
3997(7): cmp $0x0,0x20f762(%rip)
399e(5): mov %rsi,0x10(%rsp)
39a3(5): mov %rdx,0x40(%rsp)
39a8(6): jnz 0x398(%rip)
39ae(8): lea 0xa0(%rsp),%r15
39b6(8): lea 0x90(%rsp),%rbp
39be(2): xor %edx,%edx
39c0(2): xor %eax,%eax
39c2(5): lea 0x50(%rsp),%rbx
39c7(8): lea 0x80(%rsp),%r14
39cf(3): mov %r15,%rsi
39d2(3): mov %rbp,%rdi
39d5(6): mov $0x1,%r12d
39db(5): call 0xffffe585(%rip)
39e0(5): lea 0x70(%rsp),%rax
39e5(5): mov $0x2,%esi
39ea(3): mov %rax,%rdi
39ed(5): mov %rax,0x18(%rsp)
39f2(5): call 0xffffe68e(%rip)
39f7(5): mov $0x2,%esi
39fc(3): mov %rbx,%rdi
39ff(5): call 0xffffe681(%rip)
3a04(5): lea 0x60(%rsp),%rax
3a09(5): mov $0x2,%esi
3a0e(3): mov %rax,%rdi
3a11(5): mov %rax,0x8(%rsp)
3a16(5): call 0xffffe66a(%rip)
3a1b(5): mov $0x1,%esi
3a20(3): mov %r14,%rdi
3a23(5): call 0xffffe78d(%rip)
3a28(5): mov 0x10(%rsp),%rax
3a2d(9): mov $0x1,0x20(%rsp)
3a36(4): add $0x1,%rax
3a3a(5): mov %rax,0x48(%rsp)
3a3f(5): mov $0x1,%esi
3a44(3): mov %r13,%rdi
3a47(5): call 0xffffe819(%rip)
3a4c(2): test %eax,%eax
3a4e(2): jnz 0x14(%rip)
3a50(5): jmp 0x284(%rip)
3a55(3): nop (%rax)
3a58(4): sub $0x1,%r12
3a5c(6): jz 0xa4(%rip)
3a62(3): mov %rbx,%rdx
3a65(3): mov %rbx,%rsi
3a68(3): mov %rbp,%rdi
3a6b(5): call 0xffffe525(%rip)
3a70(3): mov %r13,%rdx
3a73(3): mov %rbp,%rsi
3a76(3): mov %rbx,%rdi
3a79(5): call 0xffffe717(%rip)
3a7e(5): mov 0x10(%rsp),%rdx
3a83(3): mov %rbx,%rsi
3a86(3): mov %rbx,%rdi
3a89(5): call 0xffffe607(%rip)
3a8e(5): mov 0x8(%rsp),%rsi
3a93(3): mov %rbx,%rdx
3a96(3): mov %rbp,%rdi
3a99(5): call 0xffffe407(%rip)
3a9e(3): mov %rbp,%rdx
3aa1(3): mov %r14,%rsi
3aa4(3): mov %r15,%rdi
3aa7(5): call 0xffffe4e9(%rip)
3aac(3): mov %r13,%rdx
3aaf(3): mov %r15,%rsi
3ab2(3): mov %r14,%rdi
3ab5(5): call 0xffffe6db(%rip)
3aba(3): mov %r12,%rax
3abd(3): and $0x1f,%eax
3ac0(4): cmp $0x1,%rax
3ac4(2): jnz 0xffffff94(%rip)
3ac6(3): mov %r13,%rdx
3ac9(3): mov %r14,%rsi
3acc(3): mov %rbp,%rdi
3acf(5): call 0xffffe731(%rip)
3ad4(5): mov $0x1,%esi
3ad9(3): mov %rbp,%rdi
3adc(5): call 0xffffe784(%rip)
3ae1(2): test %eax,%eax
3ae3(6): jnz 0xbd(%rip)
3ae9(5): mov 0x18(%rsp),%rdi
3aee(3): mov %rbx,%rsi
3af1(5): call 0xffffe48f(%rip)
3af6(4): sub $0x1,%r12
3afa(6): jnz 0xffffff68(%rip)
3b00(5): mov 0x8(%rsp),%rdi
3b05(3): mov %rbx,%rsi
3b08(5): call 0xffffe478(%rip)
3b0d(5): mov 0x20(%rsp),%rax
3b12(4): lea 0x0(%rax,%rax,1),%rcx
3b16(3): test %rax,%rax
3b19(5): mov %rcx,0x28(%rsp)
3b1e(2): jz 0x57(%rip)
3b20(5): mov %r14,0x30(%rsp)
3b25(3): mov %r12,%r14
3b28(5): mov 0x10(%rsp),%r12
3b2d(5): mov %r15,0x38(%rsp)
3b32(3): mov %rax,%r15
3b35(3): nop (%rax)
3b38(3): mov %rbx,%rdx
3b3b(3): mov %rbx,%rsi
3b3e(3): mov %rbp,%rdi
3b41(5): call 0xffffe44f(%rip)
3b46(3): mov %r13,%rdx
3b49(3): mov %rbp,%rsi
3b4c(3): mov %rbx,%rdi
3b4f(5): call 0xffffe641(%rip)
3b54(4): add $0x1,%r14
3b58(3): mov %r12,%rdx
3b5b(3): mov %rbx,%rsi
3b5e(3): mov %rbx,%rdi
3b61(5): call 0xffffe52f(%rip)
3b66(3): cmp %r15,%r14
3b69(2): jnz 0xffffffcf(%rip)
3b6b(5): mov 0x30(%rsp),%r14
3b70(5): mov 0x38(%rsp),%r15
3b75(5): mov 0x18(%rsp),%rdi
3b7a(3): mov %rbx,%rsi
3b7d(5): call 0xffffe403(%rip)
3b82(5): mov 0x28(%rsp),%rax
3b87(5): mov 0x20(%rsp),%r12
3b8c(5): mov %rax,0x20(%rsp)
3b91(5): jmp 0xfffffed1(%rip)
3b96(a): nop 0x0(%rax,%rax,1)
3ba0(5): mov %r12,0x28(%rsp)
3ba5(5): mov %r14,0x30(%rsp)
3baa(5): mov %rbx,0x38(%rsp)
3baf(5): mov 0x18(%rsp),%r12
3bb4(5): mov 0x10(%rsp),%rbx
3bb9(5): mov 0x8(%rsp),%r14
3bbe(2): nop 
3bc0(3): mov %r12,%rdx
3bc3(3): mov %r12,%rsi
3bc6(3): mov %rbp,%rdi
3bc9(5): call 0xffffe3c7(%rip)
3bce(3): mov %r13,%rdx
3bd1(3): mov %rbp,%rsi
3bd4(3): mov %r12,%rdi
3bd7(5): call 0xffffe5b9(%rip)
3bdc(3): mov %rbx,%rdx
3bdf(3): mov %r12,%rsi
3be2(3): mov %r12,%rdi
3be5(5): call 0xffffe4ab(%rip)
3bea(3): mov %r12,%rdx
3bed(3): mov %r14,%rsi
3bf0(3): mov %rbp,%rdi
3bf3(5): call 0xffffe2ad(%rip)
3bf8(3): mov %r13,%rdx
3bfb(3): mov %rbp,%rsi
3bfe(3): mov %rbp,%rdi
3c01(5): call 0xffffe5ff(%rip)
3c06(5): mov $0x1,%esi
3c0b(3): mov %rbp,%rdi
3c0e(5): call 0xffffe652(%rip)
3c13(2): test %eax,%eax
3c15(2): jz 0xffffffab(%rip)
3c17(3): mov %rbp,%rdx
3c1a(3): mov %r13,%rsi
3c1d(3): mov %r13,%rdi
3c20(5): mov %rbx,0x10(%rsp)
3c25(5): mov %r12,0x18(%rsp)
3c2a(5): mov %r14,0x8(%rsp)
3c2f(5): mov 0x28(%rsp),%r12
3c34(5): mov 0x38(%rsp),%rbx
3c39(5): mov 0x30(%rsp),%r14
3c3e(5): call 0xffffe302(%rip)
3c43(3): mov %rbp,%rdi
3c46(5): call 0xfffffada(%rip)
3c4b(2): test %al,%al
3c4d(2): jz 0x53(%rip)
3c4f(5): mov 0x40(%rsp),%rdi
3c54(3): mov %rbp,%rsi
3c57(5): call 0xfffff1c9(%rip)
3c5c(3): mov %r13,%rdi
3c5f(5): call 0xfffffac1(%rip)
3c64(2): test %al,%al
3c66(2): jnz 0x61(%rip)
3c68(3): mov %r13,%rdx
3c6b(3): mov %rbx,%rsi
3c6e(3): mov %rbx,%rdi
3c71(5): call 0xffffe51f(%rip)
3c76(5): mov 0x8(%rsp),%rdi
3c7b(3): mov %r13,%rdx
3c7e(3): mov %rdi,%rsi
3c81(5): call 0xffffe50f(%rip)
3c86(5): mov 0x18(%rsp),%rdi
3c8b(3): mov %r13,%rdx
3c8e(3): mov %rdi,%rsi
3c91(5): call 0xffffe4ff(%rip)
3c96(5): jmp 0xfffffda9(%rip)
3c9b(5): nop 0x0(%rax,%rax,1)
3ca0(7): cmp $0x0,0x20f459(%rip)
3ca7(2): jnz 0x77(%rip)
3ca9(5): mov 0x40(%rsp),%rdx
3cae(5): mov 0x48(%rsp),%rsi
3cb3(3): mov %rbp,%rdi
3cb6(5): call 0xfffffcba(%rip)
3cbb(3): mov %r13,%rdi
3cbe(5): call 0xfffffa62(%rip)
3cc3(2): test %al,%al
3cc5(2): jz 0xffffffa3(%rip)
3cc7(5): mov 0x40(%rsp),%rdi
3ccc(3): mov %r13,%rsi
3ccf(5): call 0xfffff151(%rip)
3cd4(4): sub $0x8,%rsp
3cd8(2): xor %eax,%eax
3cda(3): mov %rbp,%rdx
3cdd(2): push $0x0
3cdf(5): mov 0x28(%rsp),%r9
3ce4(3): mov %rbx,%r8
3ce7(5): mov 0x18(%rsp),%rcx
3cec(3): mov %r15,%rsi
3cef(3): mov %r14,%rdi
3cf2(5): call 0xffffe15e(%rip)
3cf7(1): pop %rax
3cf8(1): pop %rdx
3cf9(8): mov 0xb8(%rsp),%rax
3d01(9): xor $0x28,%rax
3d0a(2): jnz 0x56(%rip)
3d0c(7): add $0xc8,%rsp
3d13(1): pop %rbx
3d14(1): pop %rbp
3d15(2): pop %r12
3d17(2): pop %r13
3d19(2): pop %r14
3d1b(2): pop %r15
3d1d(1): ret near (%rsp)
3d1e(7): mov 0x20f3bb(%rip),%rcx
3d25(7): lea 0x8dd4(%rip),%rdi
3d2c(5): mov $0x2b,%edx
3d31(5): mov $0x1,%esi
3d36(5): call 0xffffe50a(%rip)
3d3b(5): jmp 0xffffff6e(%rip)
3d40(7): mov 0x20f399(%rip),%rdi
3d47(7): lea 0x9096(%rip),%rdx
3d4e(3): mov %rsi,%rcx
3d51(5): mov $0x1,%esi
3d56(5): call 0xffffe4fa(%rip)
3d5b(5): jmp 0xfffffc53(%rip)
3d60(5): call 0xffffe1c0(%rip)

"factor_using_pollard_rho" :
3d70(2): push %r15
3d72(2): push %r14
3d74(2): push %r13
3d76(2): push %r12
3d78(1): push %rbp
3d79(1): push %rbx
3d7a(4): sub $0x38,%rsp
3d7e(4): cmp $0x1,%rdi
3d82(5): mov %rdx,0x8(%rsp)
3d87(6): jbe 0x3ca(%rip)
3d8d(4): lea 0x1(%rsi),%rax
3d91(3): mov %rdi,%r13
3d94(5): mov %rax,0x20(%rsp)
3d99(5): mov 0x20(%rsp),%rax
3d9e(5): mov $0x1,%ecx
3da3(3): mov %r13,%rsi
3da6(5): mov $0x40,%edi
3dab(3): xor %r12d,%r12d
3dae(3): mov %rcx,%rdx
3db1(4): sub $0x1,%rax
3db5(4): mov %rax,(%rsp)
3db9(2): xor %eax,%eax
3dbb(5): nop 0x0(%rax,%rax,1)
3dc0(3): mov %rsi,%rcx
3dc3(3): shr $0x1,%rax
3dc6(3): shr $0x1,%rsi
3dc9(4): shl/sal $0x3f,%rcx
3dcd(3): or %rcx,%rax
3dd0(3): cmp %rdx,%rsi
3dd3(2): jb 0x9(%rip)
3dd5(2): jnz 0xd(%rip)
3dd7(3): cmp %r12,%rax
3dda(2): jnbe 0x8(%rip)
3ddc(3): sub %rax,%r12
3ddf(3): sbb %rsi,%rdx
3de2(3): sub $0x1,%edi
3de5(2): jnz 0xffffffdb(%rip)
3de7(3): mov %r13,%rax
3dea(2): xor %ebp,%ebp
3dec(3): sub %r12,%rax
3def(3): cmp %r12,%rax
3df2(4): setnbe %bpl
3df6(3): neg %rbp
3df9(3): mov %rbp,%rax
3dfc(4): lea 0x0(%r12,%r12,1),%rbp
3e00(3): and %r13,%rax
3e03(3): sub %r13,%rbp
3e06(3): add %rax,%rbp
3e09(4): cmp (%rsp),%r13
3e0d(6): jbe 0x29e(%rip)
3e13(3): mov %rbp,%rbx
3e16(3): mov %rbp,%r15
3e19(5): mov $0x1,%ecx
3e1e(6): mov $0x1,%r14d
3e24(3): mov %r13,%rax
3e27(7): lea 0x91b2(%rip),%rsi
3e2e(3): mov %r13,%r10
3e31(3): shr $0x1,%rax
3e34(3): mov %rcx,%r11
3e37(3): and $0x7f,%eax
3e3a(4): movzx 0x0(%rsi,%rax,1),%eax
3e3e(4): lea 0x0(%rax,%rax,1),%rdx
3e42(4): imul %rax,%rax
3e46(4): imul %r13,%rax
3e4a(3): sub %rax,%rdx
3e4d(4): lea 0x0(%rdx,%rdx,1),%rax
3e51(4): imul %rdx,%rdx
3e55(4): imul %r13,%rdx
3e59(3): sub %rdx,%rax
3e5c(4): lea 0x0(%rax,%rax,1),%r8
3e60(4): imul %rax,%rax
3e64(4): imul %r13,%rax
3e68(3): sub %rax,%r8
3e6b(4): mov (%rsp),%rax
3e6f(3): sub %rax,%r10
3e72(3): sub %r13,%rax
3e75(3): mov %rax,%r9
3e78(8): nop 0x0(%rax,%rax,1)
3e80(3): mov %rbp,%rax
3e83(3): mul %rax,%rbp,%rdx
3e86(3): mov %rdx,%rcx
3e89(3): mov %rcx,%rsi
3e8c(4): imul %r8,%rax
3e90(3): mul %rax,%r13,%rdx
3e93(3): sub %rdx,%rsi
3e96(3): cmp %rdx,%rcx
3e99(4): lea 0x0(%rsi,%r13,1),%rax
3e9d(4): cmovnae %rax,%rsi
3ea1(3): mov %r15,%rax
3ea4(3): cmp %r10,%rsi
3ea7(3): sbb %rbp,%rbp
3eaa(3): add %r9,%rsi
3ead(3): and %r13,%rbp
3eb0(3): add %rsi,%rbp
3eb3(3): cmp %rbp,%r15
3eb6(3): sbb %rcx,%rcx
3eb9(3): sub %rbp,%rax
3ebc(3): and %r13,%rcx
3ebf(3): add %rax,%rcx
3ec2(3): mov %r12,%rax
3ec5(3): mul %rax,%rcx,%rdx
3ec8(3): mov %rdx,%rcx
3ecb(3): mov %rcx,%r12
3ece(4): imul %r8,%rax
3ed2(3): mul %rax,%r13,%rdx
3ed5(3): sub %rdx,%r12
3ed8(3): cmp %rdx,%rcx
3edb(4): lea 0x0(%r12,%r13,1),%rax
3edf(4): cmovnae %rax,%r12
3ee3(3): mov %r14,%rax
3ee6(3): and $0x1f,%eax
3ee9(4): cmp $0x1,%rax
3eed(2): jz 0x63(%rip)
3eef(4): sub $0x1,%r14
3ef3(2): jnz 0xffffff8d(%rip)
3ef5(3): test %r11,%r11
3ef8(4): lea 0x0(%r11,%r11,1),%rsi
3efc(6): jz 0x1d4(%rip)
3f02(3): mov %rbp,%rax
3f05(3): nop (%rax)
3f08(3): mul %rax,%rax,%rdx
3f0b(3): mov %rdx,%rcx
3f0e(3): mov %rcx,%rdi
3f11(4): imul %r8,%rax
3f15(3): mul %rax,%r13,%rdx
3f18(3): sub %rdx,%rdi
3f1b(3): cmp %rdx,%rcx
3f1e(4): lea 0x0(%rdi,%r13,1),%rax
3f22(4): cmovnae %rax,%rdi
3f26(3): cmp %r10,%rdi
3f29(3): sbb %rax,%rax
3f2c(3): add %r9,%rdi
3f2f(4): add $0x1,%r14
3f33(3): and %r13,%rax
3f36(3): add %rdi,%rax
3f39(3): cmp %r14,%r11
3f3c(2): jnz 0xffffffcc(%rip)
3f3e(3): mov %rbp,%r15
3f41(3): mov %rax,%rbx
3f44(3): mov %rsi,%r11
3f47(3): mov %rax,%rbp
3f4a(5): jmp 0xffffff36(%rip)
3f4f(1): nop 
3f50(3): mov %r13,%rsi
3f53(3): mov %r12,%rdi
3f56(5): call 0xffffe74a(%rip)
3f5b(4): cmp $0x1,%rax
3f5f(2): jnz 0x11(%rip)
3f61(3): mov %rbp,%rbx
3f64(2): jmp 0xffffff8b(%rip)
3f66(a): nop 0x0(%rax,%rax,1)
3f70(3): mov %rbx,%rax
3f73(3): mul %rax,%rbx,%rdx
3f76(3): mov %rdx,%rcx
3f79(3): mov %rcx,%rsi
3f7c(4): imul %r8,%rax
3f80(3): mul %rax,%r13,%rdx
3f83(3): sub %rdx,%rsi
3f86(3): cmp %rdx,%rcx
3f89(4): lea 0x0(%rsi,%r13,1),%rax
3f8d(4): cmovnae %rax,%rsi
3f91(3): cmp %r10,%rsi
3f94(3): sbb %rax,%rax
3f97(3): add %r9,%rsi
3f9a(3): and %r13,%rax
3f9d(4): lea 0x0(%rax,%rsi,1),%rbx
3fa1(3): mov %r15,%rax
3fa4(3): mov %r13,%rsi
3fa7(3): cmp %rbx,%r15
3faa(3): sbb %rdi,%rdi
3fad(3): sub %rbx,%rax
3fb0(3): and %r13,%rdi
3fb3(3): add %rax,%rdi
3fb6(5): call 0xffffe6ea(%rip)
3fbb(4): cmp $0x1,%rax
3fbf(2): jz 0xffffffb1(%rip)
3fc1(3): cmp %rax,%r13
3fc4(3): mov %r11,%rcx
3fc7(3): mov %rax,%r11
3fca(6): jz 0x17c(%rip)
3fd0(3): mov %r13,%rax
3fd3(2): xor %edx,%edx
3fd5(3): div %r11,%rax
3fd8(4): cmp $0x1,%r11
3fdc(3): mov %rax,%r8
3fdf(3): mov %rax,%r13
3fe2(2): jbe 0x3d(%rip)
3fe4(7): cmp $0x17ded78,%r11
3feb(6): jbe 0xfd(%rip)
3ff1(3): mov %r11,%rdi
3ff4(5): mov %rcx,0x18(%rsp)
3ff9(5): mov %r11,0x10(%rsp)
3ffe(5): mov %rax,0x28(%rsp)
4003(5): call 0xf7d(%rip)
4008(2): test %al,%al
400a(5): mov 0x10(%rsp),%r11
400f(5): mov 0x18(%rsp),%rcx
4014(5): mov 0x28(%rsp),%r8
4019(6): jnz 0xcf(%rip)
401f(5): mov 0x8(%rsp),%rdx
4024(5): mov 0x20(%rsp),%rsi
4029(3): mov %r11,%rdi
402c(5): mov %r8,0x18(%rsp)
4031(5): mov %rcx,0x10(%rsp)
4036(5): call 0xfffffd3a(%rip)
403b(5): mov 0x18(%rsp),%r8
4040(5): mov 0x10(%rsp),%rcx
4045(4): cmp $0x1,%r8
4049(6): jbe 0xcf(%rip)
404f(7): cmp $0x17ded78,%r8
4056(6): jbe 0xd0(%rip)
405c(3): mov %r8,%rdi
405f(5): mov %rcx,0x18(%rsp)
4064(5): mov %r8,0x10(%rsp)
4069(5): call 0xf17(%rip)
406e(2): test %al,%al
4070(5): mov 0x10(%rsp),%r8
4075(5): mov 0x18(%rsp),%rcx
407a(6): jnz 0xac(%rip)
4080(3): mov %rbp,%rax
4083(2): xor %edx,%edx
4085(3): div %r8,%rax
4088(3): mov %r15,%rax
408b(3): mov %rdx,%rbp
408e(2): xor %edx,%edx
4090(3): div %r8,%rax
4093(3): mov %rbx,%rax
4096(3): mov %rdx,%r15
4099(2): xor %edx,%edx
409b(3): div %r8,%rax
409e(3): mov %rdx,%rbx
40a1(4): cmp (%rsp),%r8
40a5(6): jnbe 0xfffffd7f(%rip)
40ab(7): lea 0x8ece(%rip),%rcx
40b2(7): lea 0x898f(%rip),%rsi
40b9(7): lea 0x8d43(%rip),%rdi
40c0(5): mov $0x5c8,%edx
40c5(5): call 0xffffdf1b(%rip)
40ca(6): nop 0x0(%rax,%rax,1)
40d0(3): mov %r11,%r14
40d3(3): mov %rbp,%rbx
40d6(3): mov %rsi,%r11
40d9(3): mov %rbp,%r15
40dc(5): jmp 0xfffffda4(%rip)
40e1(7): nop 0x0(%rax)
40e8(5): mov 0x8(%rsp),%rdi
40ed(5): mov $0x1,%edx
40f2(3): mov %r11,%rsi
40f5(5): mov %r8,0x18(%rsp)
40fa(5): mov %rcx,0x10(%rsp)
40ff(5): call 0xffffe601(%rip)
4104(5): mov 0x18(%rsp),%r8
4109(5): mov 0x10(%rsp),%rcx
410e(4): cmp $0x1,%r8
4112(6): jnbe 0xffffff3d(%rip)
4118(2): jz 0x58(%rip)
411a(2): xor %ebx,%ebx
411c(3): xor %r15d,%r15d
411f(2): xor %ebp,%ebp
4121(5): jmp 0xffffff80(%rip)
4126(5): mov 0x8(%rsp),%rdi
412b(4): add $0x38,%rsp
412f(5): mov $0x1,%edx
4134(1): pop %rbx
4135(1): pop %rbp
4136(2): pop %r12
4138(2): pop %r13
413a(2): pop %r14
413c(2): pop %r15
413e(3): mov %r8,%rsi
4141(5): jmp 0xffffe5bf(%rip)
4146(6): add $0x1,0x20(%rsp)
414c(5): jmp 0xfffffc4d(%rip)
4151(7): lea 0x8e28(%rip),%rcx
4158(7): lea 0x88e9(%rip),%rsi
415f(7): lea 0x8c93(%rip),%rdi
4166(5): mov $0x5c2,%edx
416b(5): call 0xffffde75(%rip)
4170(4): add $0x38,%rsp
4174(1): pop %rbx
4175(1): pop %rbp
4176(2): pop %r12
4178(2): pop %r13
417a(2): pop %r14
417c(2): pop %r15
417e(1): ret near (%rsp)

"factor_using_pollard_rho2" :
4180(2): push %r15
4182(2): push %r14
4184(2): push %r13
4186(2): push %r12
4188(3): mov %rsi,%r12
418b(1): push %rbp
418c(1): push %rbx
418d(3): mov %rdi,%rbp
4190(7): sub $0xa8,%rsp
4197(9): mov $0x28,%rax
41a0(8): mov %rax,0x98(%rsp)
41a8(2): xor %eax,%eax
41aa(4): cmp $0x2,%rdi
41ae(5): mov %rcx,0x50(%rsp)
41b3(5): mov %rdx,0x28(%rsp)
41b8(3): sbb %rax,%rax
41bb(2): xor %ecx,%ecx
41bd(3): and $0x40,%eax
41c0(4): add $0x40,%rax
41c4(4): cmp $0x2,%rdi
41c8(3): setb %cl
41cb(3): sbb %rbx,%rbx
41ce(4): add $0x1,%rbx
41d2(3): mov %rbx,%rdx
41d5(4): sub $0x1,%rax
41d9(4): cmp $0xffffffff,%rax
41dd(2): jz 0x2e(%rip)
41df(3): mov %rcx,%rsi
41e2(3): add %rdx,%rdx
41e5(3): add %rcx,%rcx
41e8(4): shr $0x3f,%rsi
41ec(3): or %rsi,%rdx
41ef(3): cmp %rdx,%rbp
41f2(2): jb 0x9(%rip)
41f4(2): jnz 0xffffffe1(%rip)
41f6(3): cmp %rcx,%r12
41f9(2): jnbe 0xffffffdc(%rip)
41fb(4): sub $0x1,%rax
41ff(3): sub %r12,%rcx
4202(3): sbb %rbp,%rdx
4205(4): cmp $0xffffffff,%rax
4209(2): jnz 0xffffffd6(%rip)
420b(3): mov %rdx,%rax
420e(5): mov %rdx,0x18(%rsp)
4213(3): mov %rcx,%rdx
4216(3): add %rcx,%rdx
4219(3): adc %rax,%rax
421c(3): cmp %rbp,%rax
421f(5): mov %rcx,0x20(%rsp)
4224(5): mov %rax,0x70(%rsp)
4229(3): mov %rdx,%rbx
422c(3): mov %rax,%rsi
422f(2): jnbe 0x9(%rip)
4231(2): jnz 0x18(%rip)
4233(3): cmp %r12,%rdx
4236(2): jb 0x13(%rip)
4238(3): mov %rax,%rsi
423b(3): mov %rdx,%rbx
423e(3): sub %r12,%rbx
4241(3): sbb %rbp,%rsi
4244(5): mov %rsi,0x70(%rsp)
4249(4): cmp $0x1,%r12
424d(5): mov %rsi,0x78(%rsp)
4252(8): mov %rsi,0x80(%rsp)
425a(2): jnz 0xb(%rip)
425c(3): test %rbp,%rbp
425f(6): jz 0x3fb(%rip)
4265(8): lea 0x90(%rsp),%rax
426d(3): mov %rbx,%r15
4270(5): mov %rbx,0x30(%rsp)
4275(9): mov $0x1,0x8(%rsp)
427e(6): mov $0x1,%r13d
4284(5): mov %rax,0x10(%rsp)
4289(8): lea 0x88(%rsp),%rax
4291(5): mov %rax,0x38(%rsp)
4296(5): lea 0x70(%rsp),%rax
429b(5): mov %rax,0x58(%rsp)
42a0(5): lea 0x78(%rsp),%rax
42a5(5): mov %rax,0x60(%rsp)
42aa(8): lea 0x80(%rsp),%rax
42b2(5): mov %rax,0x68(%rsp)
42b7(9): nop 0x0(%rax,%rax,1)
42c0(3): mov %r12,%rax
42c3(7): lea 0x8d16(%rip),%rdi
42ca(3): shr $0x1,%rax
42cd(3): and $0x7f,%eax
42d0(4): movzx 0x0(%rdi,%rax,1),%eax
42d4(4): lea 0x0(%rax,%rax,1),%rdx
42d8(4): imul %rax,%rax
42dc(4): imul %r12,%rax
42e0(3): sub %rax,%rdx
42e3(4): lea 0x0(%rdx,%rdx,1),%rax
42e7(4): imul %rdx,%rdx
42eb(4): imul %r12,%rdx
42ef(3): sub %rdx,%rax
42f2(4): lea 0x0(%rax,%rax,1),%r14
42f6(4): imul %rax,%rax
42fa(4): imul %r12,%rax
42fe(3): sub %rax,%r14
4301(3): mov %r15,%rax
4304(3): mov %rbx,%r15
4307(3): mov %rax,%rbx
430a(6): nop 0x0(%rax,%rax,1)
4310(2): push %r14
4312(2): push %r12
4314(3): mov %rsi,%rcx
4317(5): mov 0x20(%rsp),%rdi
431c(3): mov %r15,%rdx
431f(3): mov %r15,%r8
4322(3): mov %rbp,%r9
4325(5): call 0xffffe63b(%rip)
432a(8): mov 0xa0(%rsp),%rdx
4332(5): add 0x38(%rsp),%rax
4337(4): adc $0x0,%rdx
433b(3): cmp %rdx,%rbp
433e(8): mov %rdx,0x80(%rsp)
4346(3): mov %rax,%r15
4349(1): pop %rcx
434a(3): mov %rdx,%rsi
434d(1): pop %rdi
434e(2): jb 0x9(%rip)
4350(2): jnz 0x18(%rip)
4352(3): cmp %rax,%r12
4355(2): jnbe 0x13(%rip)
4357(3): sub %r12,%rax
435a(3): sbb %rbp,%rdx
435d(5): mov %rdx,0x70(%rsp)
4362(3): mov %rax,%r15
4365(3): mov %rdx,%rsi
4368(5): mov 0x78(%rsp),%rcx
436d(5): mov 0x30(%rsp),%r8
4372(3): sub %r15,%r8
4375(3): sbb %rsi,%rcx
4378(3): test %rcx,%rcx
437b(2): jns 0x8(%rip)
437d(3): add %r12,%r8
4380(3): adc %rbp,%rcx
4383(2): push %r14
4385(2): push %r12
4387(3): mov %rbp,%r9
438a(5): mov 0x30(%rsp),%rdx
438f(5): mov 0x28(%rsp),%rsi
4394(5): mov 0x20(%rsp),%rdi
4399(5): call 0xffffe5c7(%rip)
439e(5): mov %rax,0x30(%rsp)
43a3(8): mov 0xa0(%rsp),%rax
43ab(5): mov %rax,0x28(%rsp)
43b0(3): mov %r13,%rax
43b3(3): and $0x1f,%eax
43b6(4): cmp $0x1,%rax
43ba(2): pop %r10
43bc(2): pop %r11
43be(6): jz 0xe2(%rip)
43c4(5): mov 0x70(%rsp),%rsi
43c9(4): sub $0x1,%r13
43cd(6): jnz 0xffffff43(%rip)
43d3(5): mov 0x8(%rsp),%rax
43d8(5): mov %rsi,0x78(%rsp)
43dd(4): lea 0x0(%rax,%rax,1),%rbx
43e1(3): test %rax,%rax
43e4(5): mov %rbx,0x30(%rsp)
43e9(3): mov %r15,%rbx
43ec(6): jz 0x8a(%rip)
43f2(5): mov %r15,0x40(%rsp)
43f7(3): mov %r15,%rdx
43fa(3): mov %r13,%rbx
43fd(5): mov 0x10(%rsp),%r15
4402(5): mov 0x28(%rsp),%r13
4407(9): nop 0x0(%rax,%rax,1)
4410(2): push %r14
4412(2): push %r12
4414(3): mov %rdx,%r8
4417(3): mov %rsi,%rcx
441a(3): mov %rbp,%r9
441d(3): mov %r15,%rdi
4420(5): call 0xffffe540(%rip)
4425(8): mov 0xa0(%rsp),%rcx
442d(3): add %r13,%rax
4430(4): adc $0x0,%rcx
4434(3): cmp %rcx,%rbp
4437(8): mov %rcx,0x80(%rsp)
443f(3): mov %rax,%rdx
4442(2): pop %r8
4444(3): mov %rcx,%rsi
4447(2): pop %r9
4449(2): jb 0x9(%rip)
444b(2): jnz 0x18(%rip)
444d(3): cmp %rax,%r12
4450(2): jnbe 0x13(%rip)
4452(3): mov %rcx,%rsi
4455(3): sub %r12,%rax
4458(3): sbb %rbp,%rsi
445b(5): mov %rsi,0x70(%rsp)
4460(3): mov %rax,%rdx
4463(4): add $0x1,%rbx
4467(5): cmp %rbx,0x8(%rsp)
446c(2): jnz 0xffffffa4(%rip)
446e(5): mov 0x40(%rsp),%r15
4473(3): mov %rdx,%rbx
4476(5): mov 0x30(%rsp),%rax
447b(5): mov 0x8(%rsp),%r13
4480(5): mov %r15,0x30(%rsp)
4485(8): mov %rsi,0x80(%rsp)
448d(3): mov %rbx,%r15
4490(5): mov %rax,0x8(%rsp)
4495(5): jmp 0xfffffe7b(%rip)
449a(6): nop 0x0(%rax,%rax,1)
44a0(5): mov 0x20(%rsp),%rdx
44a5(5): mov 0x18(%rsp),%rsi
44aa(3): mov %r12,%r8
44ad(5): mov 0x38(%rsp),%rdi
44b2(3): mov %rbp,%rcx
44b5(5): call 0xffffec3b(%rip)
44ba(9): cmp $0x0,0x88(%rsp)
44c3(2): jnz 0x1d(%rip)
44c5(4): cmp $0x1,%rax
44c9(2): jnz 0x17(%rip)
44cb(5): mov 0x70(%rsp),%rsi
44d0(3): mov %r15,%rbx
44d3(8): mov %rsi,0x80(%rsp)
44db(5): jmp 0xfffffeee(%rip)
44e0(5): mov %r13,0x40(%rsp)
44e5(5): mov %r15,0x48(%rsp)
44ea(3): mov %rbx,%r13
44ed(5): mov 0x30(%rsp),%r15
44f2(5): mov 0x10(%rsp),%rbx
44f7(2): jmp 0x13(%rip)
44f9(7): nop 0x0(%rax)
4500(4): cmp $0x1,%rax
4504(6): jnz 0x184(%rip)
450a(8): mov 0x80(%rsp),%rsi
4512(2): push %r14
4514(3): mov %r13,%rdx
4517(2): push %r12
4519(3): mov %r13,%r8
451c(3): mov %rbx,%rdi
451f(3): mov %rbp,%r9
4522(3): mov %rsi,%rcx
4525(5): call 0xffffe43b(%rip)
452a(8): mov 0xa0(%rsp),%rdx
4532(5): add 0x38(%rsp),%rax
4537(4): adc $0x0,%rdx
453b(3): cmp %rdx,%rbp
453e(8): mov %rdx,0x90(%rsp)
4546(3): mov %rax,%r13
4549(1): pop %rsi
454a(3): mov %rdx,%rcx
454d(1): pop %rdi
454e(2): jb 0x9(%rip)
4550(2): jnz 0x1b(%rip)
4552(3): cmp %rax,%r12
4555(2): jnbe 0x16(%rip)
4557(3): sub %r12,%rax
455a(3): sbb %rbp,%rdx
455d(8): mov %rdx,0x80(%rsp)
4565(3): mov %rax,%r13
4568(3): mov %rdx,%rcx
456b(5): mov 0x78(%rsp),%rsi
4570(3): mov %r15,%rdx
4573(3): sub %r13,%rdx
4576(3): sbb %rcx,%rsi
4579(3): test %rsi,%rsi
457c(2): jns 0x8(%rip)
457e(3): add %r12,%rdx
4581(3): adc %rbp,%rsi
4584(5): mov 0x38(%rsp),%rdi
4589(3): mov %r12,%r8
458c(3): mov %rbp,%rcx
458f(5): call 0xffffeb61(%rip)
4594(8): mov 0x88(%rsp),%rdi
459c(3): test %rdi,%rdi
459f(6): jz 0xffffff61(%rip)
45a5(3): cmp %rax,%r12
45a8(3): mov %rax,%r8
45ab(6): jz 0x22c(%rip)
45b1(3): mov %r8,%rax
45b4(7): lea 0x8a25(%rip),%rbx
45bb(3): mov %r8,%rsi
45be(3): shr $0x1,%rax
45c1(5): mov %r8,0x8(%rsp)
45c6(3): and $0x7f,%eax
45c9(4): movzx 0x0(%rbx,%rax,1),%eax
45cd(4): lea 0x0(%rax,%rax,1),%rdx
45d1(4): imul %rax,%rax
45d5(4): imul %r8,%rax
45d9(3): sub %rax,%rdx
45dc(4): lea 0x0(%rdx,%rdx,1),%rax
45e0(4): imul %rdx,%rdx
45e4(4): imul %r8,%rdx
45e8(3): sub %rdx,%rax
45eb(4): lea 0x0(%rax,%rax,1),%rdx
45ef(4): imul %rax,%rax
45f3(4): imul %r8,%rax
45f7(3): sub %rax,%rdx
45fa(4): imul %rdx,%r12
45fe(5): call 0x12f2(%rip)
4603(2): test %al,%al
4605(5): mov 0x8(%rsp),%r8
460a(6): jz 0x229(%rip)
4610(8): mov 0x88(%rsp),%rsi
4618(5): mov 0x50(%rsp),%rdi
461d(3): mov %r8,%rdx
4620(5): call 0xffffea80(%rip)
4625(4): cmp $0x1,%r12
4629(6): jbe 0x1de(%rip)
462f(7): cmp $0x17ded78,%r12
4636(2): jbe 0x12(%rip)
4638(3): mov %r12,%rdi
463b(5): call 0x945(%rip)
4640(2): test %al,%al
4642(6): jz 0x1c5(%rip)
4648(5): mov 0x50(%rsp),%rdi
464d(5): mov $0x1,%edx
4652(3): mov %r12,%rsi
4655(5): call 0xffffe0ab(%rip)
465a(8): mov 0x98(%rsp),%rax
4662(9): xor $0x28,%rax
466b(6): jnz 0x1eb(%rip)
4671(7): add $0xa8,%rsp
4678(1): pop %rbx
4679(1): pop %rbp
467a(2): pop %r12
467c(2): pop %r13
467e(2): pop %r14
4680(2): pop %r15
4682(1): ret near (%rsp)
4683(5): nop 0x0(%rax,%rax,1)
4688(3): mov %rax,%r8
468b(7): lea 0x894e(%rip),%rdi
4692(3): shr $0x1,%rax
4695(3): and $0x7f,%eax
4698(5): mov %r15,0x30(%rsp)
469d(5): mov %rbx,0x10(%rsp)
46a2(4): movzx 0x0(%rdi,%rax,1),%eax
46a6(3): mov %r13,%r15
46a9(5): mov 0x48(%rsp),%rbx
46ae(5): mov 0x40(%rsp),%r13
46b3(4): lea 0x0(%rax,%rax,1),%rdx
46b7(4): imul %rax,%rax
46bb(4): imul %r8,%rax
46bf(3): sub %rax,%rdx
46c2(4): lea 0x0(%rdx,%rdx,1),%rax
46c6(4): imul %rdx,%rdx
46ca(4): imul %r8,%rdx
46ce(3): sub %rdx,%rax
46d1(4): lea 0x0(%rax,%rax,1),%rcx
46d5(4): imul %rax,%rax
46d9(4): imul %r8,%rax
46dd(3): sub %rax,%rcx
46e0(4): imul %rcx,%r12
46e4(3): cmp %r8,%rbp
46e7(6): jb 0x119(%rip)
46ed(3): mov %r12,%rax
46f0(3): mul %rax,%r8,%rdx
46f3(3): sub %rdx,%rbp
46f6(4): imul %rcx,%rbp
46fa(4): cmp $0x1,%r8
46fe(2): jbe 0x29(%rip)
4700(7): cmp $0x17ded78,%r8
4707(6): jbe 0xb9(%rip)
470d(3): mov %r8,%rdi
4710(5): mov %r8,0x40(%rsp)
4715(5): call 0x86b(%rip)
471a(2): test %al,%al
471c(5): mov 0x40(%rsp),%r8
4721(6): jnz 0x9f(%rip)
4727(5): mov 0x28(%rsp),%rax
472c(5): mov 0x50(%rsp),%rdx
4731(3): mov %r8,%rdi
4734(4): lea 0x1(%rax),%rsi
4738(5): call 0xfffff638(%rip)
473d(3): test %rbp,%rbp
4740(6): jz 0xfffffee5(%rip)
4746(3): mov %r12,%rsi
4749(3): mov %rbp,%rdi
474c(5): call 0x11a4(%rip)
4751(2): test %al,%al
4753(6): jnz 0xcb(%rip)
4759(5): mov 0x70(%rsp),%rsi
475e(5): mov 0x58(%rsp),%rdi
4763(3): mov %rbx,%rdx
4766(3): mov %r12,%r8
4769(3): mov %rbp,%rcx
476c(5): call 0xffffea94(%rip)
4771(5): mov 0x30(%rsp),%rdx
4776(5): mov 0x78(%rsp),%rsi
477b(3): mov %r12,%r8
477e(5): mov 0x60(%rsp),%rdi
4783(3): mov %rbp,%rcx
4786(3): mov %rax,%rbx
4789(5): call 0xffffea77(%rip)
478e(8): mov 0x80(%rsp),%rsi
4796(5): mov 0x68(%rsp),%rdi
479b(3): mov %r15,%rdx
479e(3): mov %r12,%r8
47a1(3): mov %rbp,%rcx
47a4(5): mov %rax,0x30(%rsp)
47a9(5): call 0xffffea57(%rip)
47ae(5): mov 0x70(%rsp),%rsi
47b3(3): mov %rax,%r15
47b6(5): jmp 0xfffffb0a(%rip)
47bb(5): nop 0x0(%rax,%rax,1)
47c0(5): mov 0x50(%rsp),%rdi
47c5(5): mov $0x1,%edx
47ca(3): mov %r8,%rsi
47cd(5): call 0xffffdf33(%rip)
47d2(5): jmp 0xffffff6b(%rip)
47d7(3): cmp %rdi,%rbp
47da(6): jnz 0xfffffdd7(%rip)
47e0(5): mov 0x28(%rsp),%rdx
47e5(5): mov 0x50(%rsp),%rcx
47ea(3): mov %r12,%rsi
47ed(3): mov %rbp,%rdi
47f0(4): add $0x1,%rdx
47f4(5): call 0xfffff98c(%rip)
47f9(5): jmp 0xfffffe61(%rip)
47fe(2): nop 
4800(2): xor %ebp,%ebp
4802(5): jmp 0xfffffef8(%rip)
4807(5): mov 0x50(%rsp),%rdx
480c(5): mov 0x28(%rsp),%rsi
4811(3): mov %r12,%rdi
4814(5): call 0xfffff55c(%rip)
4819(5): jmp 0xfffffe41(%rip)
481e(5): mov 0x50(%rsp),%rdi
4823(3): mov %r12,%rdx
4826(3): mov %rbp,%rsi
4829(5): call 0xffffe877(%rip)
482e(5): jmp 0xfffffe2c(%rip)
4833(5): mov 0x28(%rsp),%rax
4838(5): mov 0x50(%rsp),%rcx
483d(3): mov %r8,%rsi
4840(8): mov 0x88(%rsp),%rdi
4848(4): lea 0x1(%rax),%rdx
484c(5): call 0xfffff934(%rip)
4851(5): jmp 0xfffffdd4(%rip)
4856(5): call 0xffffd6ca(%rip)

"factor" :
4860(2): push %r15
4862(2): push %r14
4864(3): mov %rdi,%r8
4867(2): push %r13
4869(2): push %r12
486b(3): mov %rdx,%r13
486e(1): push %rbp
486f(1): push %rbx
4870(3): mov %rsi,%rbx
4873(4): sub $0x38,%rsp
4877(3): test %rdi,%rdi
487a(7): mov $0x0,0xfa(%rdx)
4881(8): mov $0x0,0x8(%rdx)
4889(2): jnz 0x17(%rip)
488b(4): cmp $0x1,%rsi
488f(2): jnbe 0x11(%rip)
4891(4): add $0x38,%rsp
4895(1): pop %rbx
4896(1): pop %rbp
4897(2): pop %r12
4899(2): pop %r13
489b(2): pop %r14
489d(2): pop %r15
489f(1): ret near (%rsp)
48a0(3): test $0x1,%bl
48a3(6): jz 0x5cd(%rip)
48a9(3): test %r8,%r8
48ac(6): jz 0x5ea(%rip)
48b2(7): lea 0x87af(%rip),%rcx
48b9(6): mov $0x1,%r14d
48bf(a): mov $0x-6148914691236517205,%r9
48c9(6): mov $0x2,%r12d
48cf(5): mov $0x3,%ebp
48d4(2): jmp 0x3e(%rip)
48d6(a): nop 0x0(%rax,%rax,1)
48e0(3): mov %r14d,%eax
48e3(3): add %r12,%rbp
48e6(4): add $0x1,%r14
48ea(4): add $0x10,%rcx
48ee(3): test %r8,%r8
48f1(6): jz 0xaf(%rip)
48f7(5): cmp $0x29b,%eax
48fc(6): jnbe 0xa4(%rip)
4902(7): lea 0xb457(%rip),%rax
4909(4): mov 0xfffffff8(%rcx),%r9
490d(5): movzx 0x0(%rax,%r14,1),%r12d
4912(3): mov %r9,%r10
4915(4): imul %rbx,%r10
4919(3): mov %r10,%rax
491c(3): mul %rax,%rbp,%rdx
491f(3): cmp %rdx,%r8
4922(2): jb 0xffffffbe(%rip)
4924(3): mov %r8,%r15
4927(3): mov (%rcx),%r11
492a(3): sub %rdx,%r15
492d(4): imul %r9,%r15
4931(3): cmp %r11,%r15
4934(2): jnbe 0xffffffac(%rip)
4936(5): mov $0x1,%edx
493b(3): mov %rbp,%rsi
493e(3): mov %r13,%rdi
4941(5): mov %r11,0x20(%rsp)
4946(5): mov %r10,0x18(%rsp)
494b(5): mov %rcx,0x10(%rsp)
4950(5): mov %r9,0x8(%rsp)
4955(5): call 0xffffddab(%rip)
495a(5): mov 0x8(%rsp),%r9
495f(5): mov 0x18(%rsp),%r10
4964(5): mov 0x10(%rsp),%rcx
4969(5): mov 0x20(%rsp),%r11
496e(3): mov %r9,%rsi
4971(4): imul %r10,%rsi
4975(3): mov %rsi,%rax
4978(3): mul %rax,%rbp,%rdx
497b(3): cmp %r15,%rdx
497e(2): jnbe 0x15(%rip)
4980(3): mov %r15,%rax
4983(3): sub %rdx,%rax
4986(4): imul %r9,%rax
498a(3): cmp %r11,%rax
498d(6): jbe 0x5df(%rip)
4993(3): mov %r15,%r8
4996(3): mov %r10,%rbx
4999(5): jmp 0xffffff47(%rip)
499e(2): nop 
49a0(5): cmp $0x29b,%eax
49a5(6): jnbe 0x32b(%rip)
49ab(2): mov %eax,%ecx
49ad(7): lea 0x86ac(%rip),%rsi
49b4(3): mov %rcx,%rdx
49b7(4): shl/sal $0x4,%rdx
49bb(5): mov %rsi,0x8(%rsp)
49c0(3): add %rsi,%rdx
49c3(3): mov (%rdx),%r10
49c6(4): mov 0x8(%rdx),%r11
49ca(7): lea 0xb0cf(%rip),%rdx
49d1(5): movzx 0x0(%rdx,%rcx,1),%r12d
49d6(7): lea 0xb383(%rip),%r15
49dd(5): jmp 0xcb(%rip)
49e2(6): nop 0x0(%rax,%rax,1)
49e8(4): mov 0x10(%r14),%rdx
49ec(4): imul %rbx,%rdx
49f0(4): cmp 0x18(%r14),%rdx
49f4(6): jbe 0x12c(%rip)
49fa(4): mov 0x20(%r14),%rdx
49fe(4): imul %rbx,%rdx
4a02(4): cmp 0x28(%r14),%rdx
4a06(6): jbe 0x17a(%rip)
4a0c(4): mov 0x30(%r14),%rdx
4a10(4): imul %rbx,%rdx
4a14(4): cmp %rdx,0x38(%r14)
4a18(6): jnb 0x1d0(%rip)
4a1e(4): mov 0x40(%r14),%rdx
4a22(4): imul %rbx,%rdx
4a26(4): cmp %rdx,0x48(%r14)
4a2a(6): jnb 0x236(%rip)
4a30(4): mov 0x50(%r14),%rdx
4a34(4): imul %rbx,%rdx
4a38(4): cmp 0x58(%r14),%rdx
4a3c(6): jbe 0x3c4(%rip)
4a42(4): mov 0x60(%r14),%rdx
4a46(4): imul %rbx,%rdx
4a4a(4): cmp %rdx,0x68(%r14)
4a4e(6): jnb 0x342(%rip)
4a54(4): mov 0x70(%r14),%rdx
4a58(4): imul %rbx,%rdx
4a5c(4): cmp 0x78(%r14),%rdx
4a60(6): jbe 0x2c0(%rip)
4a66(3): add %r12,%rbp
4a69(3): mov %rbp,%rdx
4a6c(4): imul %rbp,%rdx
4a70(3): cmp %rdx,%rbx
4a73(6): jb 0x25d(%rip)
4a79(3): add $0x8,%eax
4a7c(5): cmp $0x29b,%eax
4a81(6): jnbe 0x24f(%rip)
4a87(2): mov %eax,%ecx
4a89(7): lea 0xb010(%rip),%rsi
4a90(3): mov %rcx,%rdx
4a93(4): shl/sal $0x4,%rdx
4a97(5): add 0x8(%rsp),%rdx
4a9c(5): movzx 0x0(%rsi,%rcx,1),%r12d
4aa1(3): mov (%rdx),%r10
4aa4(4): mov 0x8(%rdx),%r11
4aa8(3): mov %rbx,%rdx
4aab(5): mov 0x8(%rsp),%rsi
4ab0(4): shl/sal $0x4,%rcx
4ab4(4): imul %r10,%rdx
4ab8(4): lea 0x0(%rsi,%rcx,1),%r14
4abc(3): cmp %r11,%rdx
4abf(6): jnbe 0xffffff29(%rip)
4ac5(3): mov %rdx,%rbx
4ac8(3): mov %rbp,%rsi
4acb(5): mov $0x1,%edx
4ad0(3): mov %r13,%rdi
4ad3(5): mov %r8,0x28(%rsp)
4ad8(5): mov %r11,0x20(%rsp)
4add(5): mov %r10,0x18(%rsp)
4ae2(4): mov %eax,0x10(%rsp)
4ae6(5): call 0xffffdc1a(%rip)
4aeb(5): mov 0x18(%rsp),%r10
4af0(3): mov %rbx,%rdx
4af3(5): mov 0x20(%rsp),%r11
4af8(4): mov 0x10(%rsp),%eax
4afc(5): mov 0x28(%rsp),%r8
4b01(4): imul %r10,%rdx
4b05(3): cmp %r11,%rdx
4b08(2): jbe 0xffffffbd(%rip)
4b0a(4): mov 0x10(%r14),%rdx
4b0e(4): imul %rbx,%rdx
4b12(4): cmp 0x18(%r14),%rdx
4b16(6): jnbe 0xfffffee4(%rip)
4b1c(4): nop 0x0(%rax)
4b20(3): lea 0x1(%rax),%esi
4b23(5): movzx 0x0(%r15,%rsi,1),%esi
4b28(4): lea 0x0(%rsi,%rbp,1),%rcx
4b2c(5): mov %rcx,0x20(%rsp)
4b31(5): mov 0x20(%rsp),%rsi
4b36(3): mov %rdx,%rbx
4b39(3): mov %r13,%rdi
4b3c(5): mov $0x1,%edx
4b41(5): mov %r8,0x18(%rsp)
4b46(4): mov %eax,0x10(%rsp)
4b4a(5): call 0xffffdbb6(%rip)
4b4f(4): mov 0x10(%r14),%rdx
4b53(4): mov 0x10(%rsp),%eax
4b57(5): mov 0x18(%rsp),%r8
4b5c(4): imul %rbx,%rdx
4b60(4): cmp 0x18(%r14),%rdx
4b64(2): jbe 0xffffffcd(%rip)
4b66(4): mov 0x20(%r14),%rdx
4b6a(4): imul %rbx,%rdx
4b6e(4): cmp 0x28(%r14),%rdx
4b72(6): jnbe 0xfffffe9a(%rip)
4b78(8): nop 0x0(%rax,%rax,1)
4b80(3): lea 0x1(%rax),%esi
4b83(3): lea 0x2(%rax),%edi
4b86(5): movzx 0x0(%r15,%rsi,1),%esi
4b8b(5): movzx 0x0(%r15,%rdi,1),%edi
4b90(3): add %rdi,%rsi
4b93(4): lea 0x0(%rsi,%rbp,1),%rcx
4b97(5): mov %rcx,0x20(%rsp)
4b9c(5): mov 0x20(%rsp),%rsi
4ba1(3): mov %rdx,%rbx
4ba4(3): mov %r13,%rdi
4ba7(5): mov $0x1,%edx
4bac(5): mov %r8,0x18(%rsp)
4bb1(4): mov %eax,0x10(%rsp)
4bb5(5): call 0xffffdb4b(%rip)
4bba(4): mov 0x20(%r14),%rdx
4bbe(4): mov 0x10(%rsp),%eax
4bc2(5): mov 0x18(%rsp),%r8
4bc7(4): imul %rbx,%rdx
4bcb(4): cmp 0x28(%r14),%rdx
4bcf(2): jbe 0xffffffcd(%rip)
4bd1(4): mov 0x30(%r14),%rdx
4bd5(4): imul %rbx,%rdx
4bd9(4): cmp %rdx,0x38(%r14)
4bdd(6): jb 0xfffffe41(%rip)
4be3(5): nop 0x0(%rax,%rax,1)
4be8(3): lea 0x1(%rax),%esi
4beb(3): lea 0x3(%rax),%edi
4bee(5): movzx 0x0(%r15,%rsi,1),%esi
4bf3(5): movzx 0x0(%r15,%rdi,1),%edi
4bf8(3): add %rdi,%rsi
4bfb(3): lea 0x2(%rax),%edi
4bfe(3): add %rbp,%rsi
4c01(5): movzx 0x0(%r15,%rdi,1),%edi
4c06(4): lea 0x0(%rsi,%rdi,1),%rcx
4c0a(5): mov %rcx,0x20(%rsp)
4c0f(5): mov 0x20(%rsp),%rsi
4c14(3): mov %rdx,%rbx
4c17(3): mov %r13,%rdi
4c1a(5): mov $0x1,%edx
4c1f(5): mov %r8,0x18(%rsp)
4c24(4): mov %eax,0x10(%rsp)
4c28(5): call 0xffffdad8(%rip)
4c2d(4): mov 0x30(%r14),%rdx
4c31(4): mov 0x10(%rsp),%eax
4c35(5): mov 0x18(%rsp),%r8
4c3a(4): imul %rbx,%rdx
4c3e(4): cmp 0x38(%r14),%rdx
4c42(2): jbe 0xffffffcd(%rip)
4c44(4): mov 0x40(%r14),%rdx
4c48(4): imul %rbx,%rdx
4c4c(4): cmp %rdx,0x48(%r14)
4c50(6): jb 0xfffffde0(%rip)
4c56(a): nop 0x0(%rax,%rax,1)
4c60(3): lea 0x1(%rax),%ecx
4c63(4): lea 0x5(%rax),%r10d
4c67(3): mov %rdx,%rbx
4c6a(4): mov %ecx,0x10(%rsp)
4c6e(4): mov 0x10(%rsp),%edx
4c72(3): mov %rbp,%rsi
4c75(2): mov %edx,%edi
4c77(3): add $0x1,%edx
4c7a(5): movzx 0x0(%r15,%rdi,1),%edi
4c7f(3): add %rdi,%rsi
4c82(3): cmp %edx,%r10d
4c85(2): jnz 0xfffffff0(%rip)
4c87(5): mov $0x1,%edx
4c8c(3): mov %r13,%rdi
4c8f(5): mov %r10d,0x28(%rsp)
4c94(5): mov %r8,0x20(%rsp)
4c99(4): mov %eax,0x18(%rsp)
4c9d(5): call 0xffffda63(%rip)
4ca2(4): mov 0x40(%r14),%rdx
4ca6(4): mov 0x18(%rsp),%eax
4caa(5): mov 0x20(%rsp),%r8
4caf(5): mov 0x28(%rsp),%r10d
4cb4(4): imul %rbx,%rdx
4cb8(4): cmp 0x48(%r14),%rdx
4cbc(6): jnbe 0xfffffd74(%rip)
4cc2(3): mov %rdx,%rbx
4cc5(2): jmp 0xffffffa9(%rip)
4cc7(9): nop 0x0(%rax,%rax,1)
4cd0(3): test %r8,%r8
4cd3(6): jnz 0x1fd(%rip)
4cd9(4): cmp $0x1,%rbx
4cdd(6): jbe 0xfffffbb4(%rip)
4ce3(2): xor %edi,%edi
4ce5(3): mov %rbx,%rsi
4ce8(5): mov %r8,0x8(%rsp)
4ced(5): call 0xc03(%rip)
4cf2(2): test %al,%al
4cf4(5): mov 0x8(%rsp),%r8
4cf9(6): jnz 0x257(%rip)
4cff(4): add $0x38,%rsp
4d03(3): mov %r13,%rdx
4d06(3): mov %rbx,%rdi
4d09(1): pop %rbx
4d0a(1): pop %rbp
4d0b(2): pop %r12
4d0d(2): pop %r13
4d0f(2): pop %r14
4d11(2): pop %r15
4d13(5): mov $0x1,%esi
4d18(5): jmp 0xfffff058(%rip)
4d1d(3): nop (%rax)
4d20(3): lea 0x1(%rax),%ecx
4d23(4): lea 0x8(%rax),%r10d
4d27(3): mov %rdx,%rbx
4d2a(4): mov %ecx,0x10(%rsp)
4d2e(4): mov 0x10(%rsp),%edx
4d32(3): mov %rbp,%rsi
4d35(3): nop (%rax)
4d38(2): mov %edx,%edi
4d3a(3): add $0x1,%edx
4d3d(5): movzx 0x0(%r15,%rdi,1),%edi
4d42(3): add %rdi,%rsi
4d45(3): cmp %edx,%r10d
4d48(2): jnz 0xfffffff0(%rip)
4d4a(5): mov $0x1,%edx
4d4f(3): mov %r13,%rdi
4d52(5): mov %r10d,0x28(%rsp)
4d57(5): mov %r8,0x20(%rsp)
4d5c(4): mov %eax,0x18(%rsp)
4d60(5): call 0xffffd9a0(%rip)
4d65(4): mov 0x70(%r14),%rdx
4d69(4): mov 0x18(%rsp),%eax
4d6d(5): mov 0x20(%rsp),%r8
4d72(5): mov 0x28(%rsp),%r10d
4d77(4): imul %rbx,%rdx
4d7b(4): cmp 0x78(%r14),%rdx
4d7f(6): jnbe 0xfffffce7(%rip)
4d85(3): mov %rdx,%rbx
4d88(2): jmp 0xffffffa6(%rip)
4d8a(6): nop 0x0(%rax,%rax,1)
4d90(3): lea 0x1(%rax),%ecx
4d93(4): lea 0x7(%rax),%r10d
4d97(3): mov %rdx,%rbx
4d9a(4): mov %ecx,0x10(%rsp)
4d9e(4): mov 0x10(%rsp),%edx
4da2(3): mov %rbp,%rsi
4da5(3): nop (%rax)
4da8(2): mov %edx,%edi
4daa(3): add $0x1,%edx
4dad(5): movzx 0x0(%r15,%rdi,1),%edi
4db2(3): add %rdi,%rsi
4db5(3): cmp %edx,%r10d
4db8(2): jnz 0xfffffff0(%rip)
4dba(5): mov $0x1,%edx
4dbf(3): mov %r13,%rdi
4dc2(5): mov %r10d,0x28(%rsp)
4dc7(5): mov %r8,0x20(%rsp)
4dcc(4): mov %eax,0x18(%rsp)
4dd0(5): call 0xffffd930(%rip)
4dd5(4): mov 0x60(%r14),%rdx
4dd9(4): mov 0x18(%rsp),%eax
4ddd(5): mov 0x20(%rsp),%r8
4de2(5): mov 0x28(%rsp),%r10d
4de7(4): imul %rbx,%rdx
4deb(4): cmp 0x68(%r14),%rdx
4def(6): jnbe 0xfffffc65(%rip)
4df5(3): mov %rdx,%rbx
4df8(2): jmp 0xffffffa6(%rip)
4dfa(6): nop 0x0(%rax,%rax,1)
4e00(3): lea 0x1(%rax),%ecx
4e03(4): lea 0x6(%rax),%r10d
4e07(3): mov %rdx,%rbx
4e0a(4): mov %ecx,0x10(%rsp)
4e0e(4): mov 0x10(%rsp),%edx
4e12(3): mov %rbp,%rsi
4e15(2): mov %edx,%edi
4e17(3): add $0x1,%edx
4e1a(5): movzx 0x0(%r15,%rdi,1),%edi
4e1f(3): add %rdi,%rsi
4e22(3): cmp %edx,%r10d
4e25(2): jnz 0xfffffff0(%rip)
4e27(5): mov $0x1,%edx
4e2c(3): mov %r13,%rdi
4e2f(5): mov %r10d,0x28(%rsp)
4e34(5): mov %r8,0x20(%rsp)
4e39(4): mov %eax,0x18(%rsp)
4e3d(5): call 0xffffd8c3(%rip)
4e42(4): mov 0x50(%r14),%rdx
4e46(4): mov 0x18(%rsp),%eax
4e4a(5): mov 0x20(%rsp),%r8
4e4f(5): mov 0x28(%rsp),%r10d
4e54(4): imul %rbx,%rdx
4e58(4): cmp 0x58(%r14),%rdx
4e5c(6): jnbe 0xfffffbe6(%rip)
4e62(3): mov %rdx,%rbx
4e65(2): jmp 0xffffffa9(%rip)
4e67(9): nop 0x0(%rax,%rax,1)
4e70(3): test %rbx,%rbx
4e73(6): jnz 0x9d(%rip)
4e79(4): bsf %r8,%rcx
4e7d(3): lea 0x40(%rcx),%edx
4e80(3): mov %r8,%rbx
4e83(5): mov $0x2,%esi
4e88(3): mov %r13,%rdi
4e8b(3): shr %cl,%rbx
4e8e(5): call 0xffffd872(%rip)
4e93(3): xor %r8d,%r8d
4e96(7): lea 0x81c3(%rip),%rcx
4e9d(6): mov $0x1a,%r12d
4ea3(a): mov $0x6148914691236517205,%r11
4ead(a): mov $0x-6148914691236517205,%r10
4eb7(5): mov $0x3,%ebp
4ebc(2): xor %eax,%eax
4ebe(5): mov %rcx,0x8(%rsp)
4ec3(2): xor %ecx,%ecx
4ec5(5): jmp 0xfffffb11(%rip)
4eca(6): nop 0x0(%rax,%rax,1)
4ed0(3): mov %r8,%rdi
4ed3(3): mov %rbx,%rsi
4ed6(5): mov %r8,0x8(%rsp)
4edb(5): call 0xa15(%rip)
4ee0(2): test %al,%al
4ee2(5): mov 0x8(%rsp),%r8
4ee7(2): jnz 0x69(%rip)
4ee9(4): add $0x38,%rsp
4eed(3): mov %r13,%rcx
4ef0(3): mov %rbx,%rsi
4ef3(1): pop %rbx
4ef4(1): pop %rbp
4ef5(2): pop %r12
4ef7(2): pop %r13
4ef9(2): pop %r14
4efb(2): pop %r15
4efd(5): mov $0x1,%edx
4f02(3): mov %r8,%rdi
4f05(5): jmp 0xfffff27b(%rip)
4f0a(6): nop 0x0(%rax,%rax,1)
4f10(5): mov $0x40,%ecx
4f15(3): mov %r8,%rax
4f18(5): mov $0x2,%esi
4f1d(4): bsf %rbx,%rdx
4f21(2): sub %edx,%ecx
4f23(3): mov %r13,%rdi
4f26(3): shl/sal %cl,%rax
4f29(2): mov %edx,%ecx
4f2b(3): shr %cl,%r8
4f2e(3): shr %cl,%rbx
4f31(5): mov %r8,0x8(%rsp)
4f36(3): or %rax,%rbx
4f39(5): call 0xffffd7c7(%rip)
4f3e(5): mov 0x8(%rsp),%r8
4f43(5): jmp 0xfffff966(%rip)
4f48(8): nop 0x0(%rax,%rax,1)
4f50(4): add $0x38,%rsp
4f54(3): mov %rbx,%rdx
4f57(3): mov %r13,%rdi
4f5a(1): pop %rbx
4f5b(1): pop %rbp
4f5c(2): pop %r12
4f5e(2): pop %r13
4f60(2): pop %r14
4f62(2): pop %r15
4f64(3): mov %r8,%rsi
4f67(5): jmp 0xffffe139(%rip)
4f6c(3): mov %rax,%r15
4f6f(3): mov %rsi,%r10
4f72(5): jmp 0xfffff9c4(%rip)

"prime_p.part.4" :
4f80(2): push %r15
4f82(2): push %r14
4f84(2): push %r13
4f86(2): push %r12
4f88(4): lea 0xffffffff(%rdi),%r12
4f8c(1): push %rbp
4f8d(1): push %rbx
4f8e(3): mov %rdi,%rbx
4f91(7): sub $0x148,%rsp
4f98(9): mov $0x28,%rax
4fa1(8): mov %rax,0x138(%rsp)
4fa9(2): xor %eax,%eax
4fab(4): test $0x1,%r12b
4faf(4): mov %r12,(%rsp)
4fb3(6): jnz 0x2b9(%rip)
4fb9(7): nop 0x0(%rax)
4fc0(3): shr $0x1,%r12
4fc3(3): add $0x1,%eax
4fc6(4): test $0x1,%r12b
4fca(2): jz 0xfffffff6(%rip)
4fcc(4): mov %eax,0x14(%rsp)
4fd0(3): mov %rbx,%rax
4fd3(7): lea 0x8006(%rip),%rdx
4fda(3): mov %rbx,%rsi
4fdd(3): shr $0x1,%rax
4fe0(5): mov $0x40,%edi
4fe5(3): xor %r10d,%r10d
4fe8(3): and $0x7f,%eax
4feb(5): mov $0x1,%ecx
4ff0(4): movzx 0x0(%rdx,%rax,1),%eax
4ff4(4): lea 0x0(%rax,%rax,1),%rdx
4ff8(4): imul %rax,%rax
4ffc(4): imul %rbx,%rax
5000(3): sub %rax,%rdx
5003(4): lea 0x0(%rdx,%rdx,1),%rax
5007(4): imul %rdx,%rdx
500b(4): imul %rbx,%rdx
500f(3): sub %rdx,%rax
5012(4): lea 0x0(%rax,%rax,1),%r14
5016(4): imul %rax,%rax
501a(4): imul %rbx,%rax
501e(3): sub %rax,%r14
5021(2): xor %eax,%eax
5023(5): nop 0x0(%rax,%rax,1)
5028(3): mov %rsi,%rdx
502b(3): shr $0x1,%rax
502e(3): shr $0x1,%rsi
5031(4): shl/sal $0x3f,%rdx
5035(3): or %rdx,%rax
5038(3): cmp %rcx,%rsi
503b(2): jb 0x9(%rip)
503d(2): jnz 0xd(%rip)
503f(3): cmp %r10,%rax
5042(2): jnbe 0x8(%rip)
5044(3): sub %rax,%r10
5047(3): sbb %rsi,%rcx
504a(3): sub $0x1,%edi
504d(2): jnz 0xffffffdb(%rip)
504f(3): mov %rbx,%rax
5052(3): xor %r11d,%r11d
5055(5): mov 0x14(%rsp),%r8d
505a(3): sub %r10,%rax
505d(3): mov %r10,%r9
5060(3): mov %r12,%rcx
5063(3): cmp %r10,%rax
5066(3): mov %r14,%rsi
5069(3): mov %rbx,%rdi
506c(4): setnbe %r11b
5070(5): mov %r10,0x8(%rsp)
5075(3): neg %r11
5078(3): mov %r11,%rax
507b(4): lea 0x0(%r10,%r10,1),%r11
507f(3): and %rbx,%rax
5082(3): sub %rbx,%r11
5085(4): lea 0x0(%rax,%r11,1),%r15
5089(3): mov %r15,%rdx
508c(5): call 0xffffd7f4(%rip)
5091(2): test %al,%al
5093(4): mov %al,0x2f(%rsp)
5097(6): jz 0x189(%rip)
509d(5): lea 0x30(%rsp),%rbp
50a2(4): mov (%rsp),%rsi
50a6(2): xor %edi,%edi
50a8(7): lea 0xacb1(%rip),%r13
50af(3): mov %rbp,%rdx
50b2(5): mov %rbp,0x20(%rsp)
50b7(5): call 0xfffff7a9(%rip)
50bc(8): movzx 0x12a(%rsp),%eax
50c4(5): mov 0x8(%rsp),%r10
50c9(5): mov %r12,0x18(%rsp)
50ce(3): mov %r10,%r12
50d1(3): mov %r15,%r10
50d4(4): mov %eax,0x28(%rsp)
50d8(3): sub $0x1,%eax
50db(5): lea 0x10(%rbp,%rax,8),%rax
50e0(5): mov $0x2,%ebp
50e5(3): mov %rax,%r15
50e8(8): nop 0x0(%rax,%rax,1)
50f0(4): mov 0x28(%rsp),%eax
50f4(2): test %eax,%eax
50f6(6): jz 0xfa(%rip)
50fc(5): mov 0x20(%rsp),%rax
5101(5): mov %rbp,0x8(%rsp)
5106(4): lea 0x10(%rax),%r11
510a(3): mov %r11,%rbp
510d(3): mov %r10,%r11
5110(4): mov (%rsp),%rax
5114(2): xor %edx,%edx
5116(3): mov %r12,%r8
5119(3): mov %r14,%rcx
511c(3): mov %r11,%rdi
511f(4): div 0x0(%rbp),%rax
5123(3): mov %rbx,%rdx
5126(3): mov %rax,%rsi
5129(5): call 0xffffd6e7(%rip)
512e(3): cmp %rbp,%r15
5131(6): jz 0xa7(%rip)
5137(4): add $0x8,%rbp
513b(3): cmp %r12,%rax
513e(2): jnz 0xffffffd2(%rip)
5140(5): mov 0x8(%rsp),%rbp
5145(3): nop (%rax)
5148(5): movzx 0x0(%r13),%eax
514d(3): add %rax,%rbp
5150(3): mov %r12,%rax
5153(3): mul %rax,%rbp,%rdx
5156(3): test %rdx,%rdx
5159(3): mov %rax,%r10
515c(6): jnz 0xcb(%rip)
5162(2): xor %edx,%edx
5164(3): div %rbx,%rax
5167(3): mov %rdx,%r10
516a(5): mov 0x14(%rsp),%r8d
516f(5): mov 0x18(%rsp),%rcx
5174(3): mov %r12,%r9
5177(3): mov %r10,%rdx
517a(3): mov %r14,%rsi
517d(3): mov %rbx,%rdi
5180(5): mov %r10,0x8(%rsp)
5185(5): call 0xffffd6fb(%rip)
518a(2): test %al,%al
518c(6): jz 0x94(%rip)
5192(7): lea 0xae63(%rip),%rax
5199(4): add $0x1,%r13
519d(5): mov 0x8(%rsp),%r10
51a2(3): cmp %r13,%rax
51a5(6): jnz 0xffffff4b(%rip)
51ab(7): lea 0x7916(%rip),%rsi
51b2(5): mov $0x5,%edx
51b7(2): xor %edi,%edi
51b9(5): call 0xffffcd27(%rip)
51be(2): xor %esi,%esi
51c0(3): mov %rax,%rdx
51c3(2): xor %edi,%edi
51c5(2): xor %eax,%eax
51c7(5): call 0xffffd019(%rip)
51cc(5): call 0xffffcc14(%rip)
51d1(7): nop 0x0(%rax)
51d8(3): cmp %r12,%rax
51db(5): mov 0x8(%rsp),%rbp
51e0(6): jz 0xffffff68(%rip)
51e6(a): nop 0x0(%rax,%rax,1)
51f0(8): mov 0x138(%rsp),%rbx
51f8(9): xor $0x28,%rbx
5201(5): movzx 0x2f(%rsp),%eax
5206(2): jnz 0x77(%rip)
5208(7): add $0x148,%rsp
520f(1): pop %rbx
5210(1): pop %rbp
5211(2): pop %r12
5213(2): pop %r13
5215(2): pop %r14
5217(2): pop %r15
5219(1): ret near (%rsp)
521a(6): nop 0x0(%rax,%rax,1)
5220(5): mov $0x0,0x2f(%rsp)
5225(2): jmp 0xffffffcb(%rip)
5227(3): cmp %rdx,%rbx
522a(2): jbe 0x58(%rip)
522c(3): mov %rbx,%rsi
522f(5): mov $0x40,%edi
5234(2): xor %ecx,%ecx
5236(a): nop 0x0(%rax,%rax,1)
5240(3): mov %rsi,%rax
5243(3): shr $0x1,%rcx
5246(3): shr $0x1,%rsi
5249(4): shl/sal $0x3f,%rax
524d(3): or %rax,%rcx
5250(3): cmp %rdx,%rsi
5253(2): jb 0x9(%rip)
5255(2): jnz 0xd(%rip)
5257(3): cmp %r10,%rcx
525a(2): jnbe 0x8(%rip)
525c(3): sub %rcx,%r10
525f(3): sbb %rsi,%rdx
5262(3): sub $0x1,%edi
5265(2): jnz 0xffffffdb(%rip)
5267(5): jmp 0xffffff03(%rip)
526c(4): mov (%rsp),%r12
5270(8): mov $0x0,0x14(%rsp)
5278(5): jmp 0xfffffd58(%rip)
527d(5): call 0xffffcca3(%rip)
5282(7): lea 0x7d3f(%rip),%rcx
5289(7): lea 0x77b8(%rip),%rsi
5290(7): lea 0x7b72(%rip),%rdi
5297(5): mov $0x4f4,%edx
529c(5): call 0xffffcd44(%rip)

"prime2_p.part.5" :
52b0(2): push %r15
52b2(2): push %r14
52b4(3): mov %rsi,%r15
52b7(2): push %r13
52b9(2): push %r12
52bb(1): push %rbp
52bc(1): push %rbx
52bd(3): mov %rdi,%rbx
52c0(7): sub $0x208,%rsp
52c7(9): mov $0x28,%rax
52d0(8): mov %rax,0x1f8(%rsp)
52d8(2): xor %eax,%eax
52da(2): xor %eax,%eax
52dc(3): test %rsi,%rsi
52df(3): setz %al
52e2(3): sub %rax,%rdi
52e5(3): mov %rdi,%rax
52e8(5): mov %rdi,0x28(%rsp)
52ed(3): mov %rsi,%rdi
52f0(4): sub $0x1,%rdi
52f4(5): mov %rdi,0x18(%rsp)
52f9(6): jnz 0x587(%rip)
52ff(4): bsf %rax,%rcx
5303(3): shr %cl,%rax
5306(c): mov $0x0,0x98(%rsp)
5312(8): mov %rax,0x90(%rsp)
531a(3): lea 0x40(%rcx),%eax
531d(4): mov %eax,0x70(%rsp)
5321(3): mov %r15,%rax
5324(7): lea 0x7cb5(%rip),%rdi
532b(3): shr $0x1,%rax
532e(3): and $0x7f,%eax
5331(4): movzx 0x0(%rdi,%rax,1),%eax
5335(4): lea 0x0(%rax,%rax,1),%rdx
5339(4): imul %rax,%rax
533d(4): imul %r15,%rax
5341(3): sub %rax,%rdx
5344(4): lea 0x0(%rdx,%rdx,1),%rax
5348(4): imul %rdx,%rdx
534c(4): imul %r15,%rdx
5350(3): sub %rdx,%rax
5353(4): lea 0x0(%rax,%rax,1),%rdx
5357(4): imul %rax,%rax
535b(4): imul %r15,%rax
535f(3): sub %rax,%rdx
5362(4): cmp $0x2,%rbx
5366(3): sbb %rsi,%rsi
5369(2): xor %ecx,%ecx
536b(5): mov %rdx,0x20(%rsp)
5370(3): and $0x40,%esi
5373(4): add $0x40,%rsi
5377(4): cmp $0x2,%rbx
537b(3): setb %cl
537e(3): sbb %rax,%rax
5381(4): add $0x1,%rax
5385(4): sub $0x1,%rsi
5389(4): cmp $0xffffffff,%rsi
538d(2): jz 0x2e(%rip)
538f(3): mov %rcx,%rdx
5392(3): add %rax,%rax
5395(3): add %rcx,%rcx
5398(4): shr $0x3f,%rdx
539c(3): or %rdx,%rax
539f(3): cmp %rax,%rbx
53a2(2): jb 0x9(%rip)
53a4(2): jnz 0xffffffe1(%rip)
53a6(3): cmp %rcx,%r15
53a9(2): jnbe 0xffffffdc(%rip)
53ab(4): sub $0x1,%rsi
53af(3): sub %r15,%rcx
53b2(3): sbb %rbx,%rax
53b5(4): cmp $0xffffffff,%rsi
53b9(2): jnz 0xffffffd6(%rip)
53bb(8): mov %rax,0xb8(%rsp)
53c3(8): mov %rcx,0xb0(%rsp)
53cb(3): mov %rcx,%rdi
53ce(3): add %rdi,%rcx
53d1(3): adc %rax,%rax
53d4(3): cmp %rax,%rbx
53d7(8): mov %rax,0xa8(%rsp)
53df(8): mov %rcx,0xa0(%rsp)
53e7(6): jb 0x3a9(%rip)
53ed(6): jz 0x391(%rip)
53f3(8): lea 0xa0(%rsp),%rax
53fb(8): lea 0xc0(%rsp),%r14
5403(5): mov 0x70(%rsp),%r8d
5408(5): mov 0x20(%rsp),%rsi
540d(8): lea 0xb0(%rsp),%r9
5415(8): lea 0x90(%rsp),%rcx
541d(3): mov %rax,%rdx
5420(3): mov %r14,%rdi
5423(8): mov %r15,0xc0(%rsp)
542b(8): mov %rbx,0xc8(%rsp)
5433(5): mov %r9,0x8(%rsp)
5438(5): mov %rcx,0x38(%rsp)
543d(5): mov %rax,0x30(%rsp)
5442(5): call 0xffffd81e(%rip)
5447(2): test %al,%al
5449(4): mov %al,0x77(%rsp)
544d(6): jz 0x303(%rip)
5453(5): mov 0x28(%rsp),%rbp
5458(5): mov 0x18(%rsp),%r13
545d(8): lea 0xf0(%rsp),%rax
5465(7): lea 0xa8f4(%rip),%r12
546c(3): mov %rax,%rdx
546f(5): mov %rax,0x78(%rsp)
5474(3): mov %rbp,%rdi
5477(3): mov %r13,%rsi
547a(5): call 0xfffff3e6(%rip)
547f(3): mov %rbp,%rdx
5482(3): mov %r13,%rax
5485(3): mov %rbp,%rdi
5488(3): shr $0x1,%rax
548b(4): shl/sal $0x3f,%rdx
548f(3): shr $0x1,%rdi
5492(3): or %rax,%rdx
5495(8): lea 0xd0(%rsp),%rax
549d(5): mov %rdi,0x48(%rsp)
54a2(5): mov %rdx,0x40(%rsp)
54a7(5): mov $0x2,%ebp
54ac(5): mov %rax,0x10(%rsp)
54b1(8): lea 0xe0(%rsp),%rax
54b9(8): mov %rax,0x80(%rsp)
54c1(8): lea 0xe8(%rsp),%rax
54c9(8): mov %rax,0x88(%rsp)
54d1(7): nop 0x0(%rax)
54d8(9): cmp $0x0,0xf8(%rsp)
54e1(6): jnz 0x2cf(%rip)
54e7(8): cmp $0x0,0x1ea(%rsp)
54ef(6): jz 0x261(%rip)
54f5(8): mov 0x80(%rsp),%rax
54fd(6): mov $0x1,%r13d
5503(5): mov %rbp,0x50(%rsp)
5508(5): mov %r12,0x58(%rsp)
550d(5): mov %rbx,0x60(%rsp)
5512(5): mov %r15,0x68(%rsp)
5517(5): mov 0x20(%rsp),%r12
551c(3): mov %r13,%r15
551f(4): add $0x8,%rax
5523(5): mov 0x78(%rsp),%r13
5528(5): mov 0x30(%rsp),%rbx
552d(3): mov %rax,%rbp
5530(5): jmp 0xc2(%rip)
5535(3): nop (%rax)
5538(3): mov %rdx,%rax
553b(7): lea 0x7a9e(%rip),%rdi
5542(5): mov 0x18(%rsp),%rsi
5547(3): shr $0x1,%rax
554a(3): and $0x7f,%eax
554d(4): movzx 0x0(%rdi,%rax,1),%eax
5551(5): mov 0x28(%rsp),%rdi
5556(4): lea 0x0(%rax,%rax,1),%rcx
555a(4): imul %rax,%rax
555e(4): imul %rdx,%rax
5562(3): sub %rax,%rcx
5565(4): lea 0x0(%rcx,%rcx,1),%rax
5569(4): imul %rcx,%rcx
556d(4): imul %rdx,%rcx
5571(3): sub %rcx,%rax
5574(4): lea 0x0(%rax,%rax,1),%rcx
5578(4): imul %rax,%rax
557c(4): imul %rdx,%rax
5580(3): sub %rax,%rcx
5583(4): imul %rcx,%rsi
5587(3): cmp %rdx,%rdi
558a(6): jb 0x1a6(%rip)
5590(3): mov %rsi,%rax
5593(8): mov %rsi,0xd0(%rsp)
559b(3): mul %rax,%rdx,%rdx
559e(3): mov %rdi,%rax
55a1(3): sub %rdx,%rax
55a4(4): imul %rax,%rcx
55a8(8): mov %rcx,0xd8(%rsp)
55b0(5): mov 0x8(%rsp),%r9
55b5(5): mov 0x10(%rsp),%rdx
55ba(3): mov %r12,%r8
55bd(3): mov %r14,%rcx
55c0(3): mov %rbx,%rsi
55c3(3): mov %rbp,%rdi
55c6(5): call 0xffffd51a(%rip)
55cb(8): cmp 0xb0(%rsp),%rax
55d3(8): mov %rax,0xe0(%rsp)
55db(2): jz 0x45(%rip)
55dd(8): movzx 0x1ea(%rsp),%eax
55e5(3): cmp %r15d,%eax
55e8(6): jbe 0x168(%rip)
55ee(4): add $0x1,%r15
55f2(5): mov 0x8(%r13,%r15,8),%rdx
55f7(4): cmp $0x2,%rdx
55fb(6): jnz 0xffffff3d(%rip)
5601(5): mov 0x40(%rsp),%rax
5606(8): mov %rax,0xd0(%rsp)
560e(5): mov 0x48(%rsp),%rax
5613(8): mov %rax,0xd8(%rsp)
561b(2): jmp 0xffffff95(%rip)
561d(3): nop (%rax)
5620(8): mov 0xe8(%rsp),%rdx
5628(8): mov 0xb8(%rsp),%rax
5630(8): movzx 0x1ea(%rsp),%esi
5638(3): cmp %rax,%rdx
563b(3): setnz %cl
563e(3): cmp %r15d,%esi
5641(6): jbe 0x283(%rip)
5647(3): cmp %rax,%rdx
564a(2): jnz 0xffffffa4(%rip)
564c(5): mov 0x50(%rsp),%rbp
5651(5): mov 0x58(%rsp),%r12
5656(5): mov 0x60(%rsp),%rbx
565b(5): mov 0x68(%rsp),%r15
5660(5): movzx (%r12),%eax
5665(2): xor %ecx,%ecx
5667(3): add %rax,%rbp
566a(3): mov %rcx,%rax
566d(3): cmp %rbp,%rbx
5670(4): cmovnbe %rbp,%rax
5674(3): cmp %rbx,%rbp
5677(3): sbb %rsi,%rsi
567a(4): and $0xffffffc0,%rsi
567e(4): sub $0xffffff80,%rsi
5682(3): cmp %rbp,%rbx
5685(4): cmovbe %rbp,%rcx
5689(4): sub $0x1,%rsi
568d(4): cmp $0xffffffff,%rsi
5691(2): jz 0x2e(%rip)
5693(3): mov %rcx,%rdx
5696(3): add %rax,%rax
5699(3): add %rcx,%rcx
569c(4): shr $0x3f,%rdx
56a0(3): or %rdx,%rax
56a3(3): cmp %rax,%rbx
56a6(2): jb 0x9(%rip)
56a8(2): jnz 0xffffffe1(%rip)
56aa(3): cmp %rcx,%r15
56ad(2): jnbe 0xffffffdc(%rip)
56af(4): sub $0x1,%rsi
56b3(3): sub %r15,%rcx
56b6(3): sbb %rbx,%rax
56b9(4): cmp $0xffffffff,%rsi
56bd(2): jnz 0xffffffd6(%rip)
56bf(8): mov %rcx,0xa0(%rsp)
56c7(5): mov 0x8(%rsp),%r9
56cc(3): mov %r14,%rdi
56cf(5): mov 0x70(%rsp),%r8d
56d4(5): mov 0x38(%rsp),%rcx
56d9(5): mov 0x30(%rsp),%rdx
56de(5): mov 0x20(%rsp),%rsi
56e3(8): mov %rax,0xa8(%rsp)
56eb(5): call 0xffffd575(%rip)
56f0(2): test %al,%al
56f2(2): jz 0x57(%rip)
56f4(7): lea 0xa901(%rip),%rax
56fb(4): add $0x1,%r12
56ff(3): cmp %r12,%rax
5702(6): jnz 0xfffffdd6(%rip)
5708(7): lea 0x73b9(%rip),%rsi
570f(5): mov $0x5,%edx
5714(2): xor %edi,%edi
5716(5): call 0xffffc7ca(%rip)
571b(2): xor %esi,%esi
571d(3): mov %rax,%rdx
5720(2): xor %edi,%edi
5722(2): xor %eax,%eax
5724(5): call 0xffffcabc(%rip)
5729(5): call 0xffffc6b7(%rip)
572e(2): nop 
5730(8): mov %rsi,0xd0(%rsp)
5738(c): mov $0x0,0xd8(%rsp)
5744(5): jmp 0xfffffe6c(%rip)
5749(5): mov $0x0,0x77(%rsp)
574e(2): nop 
5750(8): mov 0x1f8(%rsp),%rdi
5758(9): xor $0x28,%rdi
5761(5): movzx 0x77(%rsp),%eax
5766(6): jnz 0x17f(%rip)
576c(7): add $0x208,%rsp
5773(1): pop %rbx
5774(1): pop %rbp
5775(2): pop %r12
5777(2): pop %r13
5779(2): pop %r14
577b(2): pop %r15
577d(1): ret near (%rsp)
577e(3): cmp %rcx,%r15
5781(6): jnbe 0xfffffc72(%rip)
5787(9): nop 0x0(%rax,%rax,1)
5790(3): sub %r15,%rcx
5793(3): sbb %rbx,%rax
5796(8): mov %rax,0xa8(%rsp)
579e(8): mov %rcx,0xa0(%rsp)
57a6(5): jmp 0xfffffc4d(%rip)
57ab(5): nop 0x0(%rax,%rax,1)
57b0(8): mov 0xf0(%rsp),%rcx
57b8(7): lea 0x7821(%rip),%rdi
57bf(5): mov 0x8(%rsp),%r9
57c4(5): mov 0x20(%rsp),%r8
57c9(5): mov 0x30(%rsp),%rsi
57ce(c): mov $0x0,0xd8(%rsp)
57da(3): mov %rcx,%rax
57dd(3): shr $0x1,%rax
57e0(3): and $0x7f,%eax
57e3(4): movzx 0x0(%rdi,%rax,1),%eax
57e7(8): mov 0x88(%rsp),%rdi
57ef(4): lea 0x0(%rax,%rax,1),%rdx
57f3(4): imul %rax,%rax
57f7(4): imul %rcx,%rax
57fb(3): sub %rax,%rdx
57fe(4): lea 0x0(%rdx,%rdx,1),%rax
5802(4): imul %rdx,%rdx
5806(4): imul %rcx,%rdx
580a(3): sub %rdx,%rax
580d(4): lea 0x0(%rax,%rax,1),%rdx
5811(4): imul %rax,%rax
5815(4): imul %rcx,%rax
5819(3): mov %r14,%rcx
581c(3): sub %rax,%rdx
581f(5): mov 0x18(%rsp),%rax
5824(4): imul %rdx,%rax
5828(5): mov 0x10(%rsp),%rdx
582d(8): mov %rax,0xd0(%rsp)
5835(5): call 0xffffd2ab(%rip)
583a(8): cmp 0xb0(%rsp),%rax
5842(8): mov %rax,0xe0(%rsp)
584a(6): jnz 0xfffffc9d(%rip)
5850(8): mov 0xe8(%rsp),%rdx
5858(8): mov 0xb8(%rsp),%rax
5860(3): cmp %rax,%rdx
5863(3): setnz %cl
5866(8): cmp $0x0,0x1ea(%rsp)
586e(2): jz 0x6a(%rip)
5870(3): cmp %rax,%rdx
5873(6): jz 0xfffffded(%rip)
5879(5): jmp 0xfffffc7c(%rip)
587e(2): nop 
5880(5): mov 0x28(%rsp),%rsi
5885(5): mov 0x18(%rsp),%rdx
588a(5): mov $0x40,%ecx
588f(4): bsf %rdx,%rax
5893(2): sub %eax,%ecx
5895(2): mov %eax,%edi
5897(4): mov %eax,0x70(%rsp)
589b(3): mov %rsi,%rax
589e(3): shl/sal %cl,%rax
58a1(2): mov %edi,%ecx
58a3(3): shr %cl,%rdx
58a6(3): or %rdx,%rax
58a9(8): mov %rax,0x90(%rsp)
58b1(3): mov %rsi,%rax
58b4(3): shr %cl,%rax
58b7(8): mov %rax,0x98(%rsp)
58bf(5): jmp 0xfffffa62(%rip)
58c4(5): mov 0x50(%rsp),%rbp
58c9(5): mov 0x58(%rsp),%r12
58ce(5): mov 0x60(%rsp),%rbx
58d3(5): mov 0x68(%rsp),%r15
58d8(2): test %cl,%cl
58da(6): jz 0xfffffd86(%rip)
58e0(5): jmp 0xfffffe70(%rip)
58e5(5): call 0xffffc63b(%rip)

"prime2_p" :
58f0(3): test %rdi,%rdi
58f3(2): jnz 0x1d(%rip)
58f5(4): cmp $0x1,%rsi
58f9(2): jbe 0x1f(%rip)
58fb(7): cmp $0x17ded78,%rsi
5902(5): mov $0x1,%eax
5907(2): jnbe 0x19(%rip)
5909(2): REP ret near (%rsp)
590b(5): nop 0x0(%rax,%rax,1)
5910(5): jmp 0xfffff9a0(%rip)
5915(3): nop (%rax)
5918(2): xor %eax,%eax
591a(1): ret near (%rsp)
591b(5): nop 0x0(%rax,%rax,1)
5920(3): mov %rsi,%rdi
5923(5): jmp 0xfffff65d(%rip)

"print_factors" :
5930(2): push %r15
5932(2): push %r14
5934(3): mov %rdi,%rdx
5937(2): push %r13
5939(2): push %r12
593b(1): push %rbp
593c(1): push %rbx
593d(3): mov %rdi,%rbp
5940(7): sub $0x148,%rsp
5947(9): mov $0x28,%rax
5950(8): mov %rax,0x138(%rsp)
5958(2): xor %eax,%eax
595a(3): movzx (%rdi),%eax
595d(2): cmp $0x20,%al
595f(2): jnz 0x14(%rip)
5961(7): nop 0x0(%rax)
5968(4): add $0x1,%rdx
596c(3): movzx (%rdx),%eax
596f(2): cmp $0x20,%al
5971(2): jz 0xfffffff7(%rip)
5973(2): cmp $0x2b,%al
5975(4): lea 0x1(%rdx),%rsi
5979(2): jnz 0xc(%rip)
597b(4): lea 0x2(%rdx),%rax
597f(3): mov %rsi,%rdx
5982(3): mov %rax,%rsi
5985(3): mov %rdx,%rcx
5988(5): mov $0x4,%edi
598d(3): nop (%rax)
5990(4): add $0x1,%rcx
5994(4): movsx 0xffffffff(%rcx),%eax
5998(2): test %eax,%eax
599a(2): jz 0x66(%rip)
599c(3): sub $0x30,%eax
599f(2): xor %edi,%edi
59a1(3): cmp $0x9,%eax
59a4(2): jbe 0xffffffec(%rip)
59a6(3): mov %rbp,%rdi
59a9(5): call 0x3207(%rip)
59ae(7): lea 0x71a3(%rip),%rsi
59b5(3): mov %rax,%rbx
59b8(5): mov $0x5,%edx
59bd(2): xor %edi,%edi
59bf(5): call 0xffffc521(%rip)
59c4(3): mov %rbx,%rcx
59c7(3): mov %rax,%rdx
59ca(2): xor %esi,%esi
59cc(2): xor %eax,%eax
59ce(2): xor %edi,%edi
59d0(5): call 0xffffc810(%rip)
59d5(2): xor %eax,%eax
59d7(8): mov 0x138(%rsp),%rdi
59df(9): xor $0x28,%rdi
59e8(6): jnz 0x2c3(%rip)
59ee(7): add $0x148,%rsp
59f5(1): pop %rbx
59f6(1): pop %rbp
59f7(2): pop %r12
59f9(2): pop %r13
59fb(2): pop %r14
59fd(2): pop %r15
59ff(1): ret near (%rsp)
5a00(2): test %edi,%edi
5a02(6): jnz 0x2ae(%rip)
5a08(3): movsx (%rdx),%ecx
5a0b(2): test %ecx,%ecx
5a0d(6): jz 0x294(%rip)
5a13(3): sub $0x30,%ecx
5a16(3): xor %r12d,%r12d
5a19(2): xor %ebx,%ebx
5a1b(a): mov $0x1844674407370955161,%rdi
5a25(2): jmp 0x23(%rip)
5a27(9): nop 0x0(%rax,%rax,1)
5a30(4): add $0x1,%rsi
5a34(4): movsx 0xffffffff(%rsi),%edx
5a38(2): test %edx,%edx
5a3a(6): jz 0x140(%rip)
5a40(3): cmp %rdi,%rbx
5a43(3): lea 0xffffffd0(%rdx),%ecx
5a46(2): jnbe 0x3b(%rip)
5a48(4): lea 0x0(%r12,%r12,4),%rdx
5a4c(3): mov %r12,%r8
5a4f(3): mov %r12,%rax
5a52(3): add %r12,%r12
5a55(4): shr $0x3d,%r8
5a59(4): shr $0x3f,%rax
5a5d(3): add %rdx,%rdx
5a60(3): cmp %r12,%rdx
5a63(3): adc %r8d,%eax
5a66(3): add %rcx,%rdx
5a69(3): setb %cl
5a6c(3): mov %rdx,%r12
5a6f(4): lea 0x0(%rbx,%rbx,4),%rdx
5a73(3): movzx %cl,%ecx
5a76(3): lea 0x0(%rax,%rcx,1),%ebx
5a79(3): add %rdx,%rdx
5a7c(3): add %rdx,%rbx
5a7f(2): jnb 0xffffffb1(%rip)
5a81(7): cmp $0x0,0x20d678(%rip)
5a88(6): jnz 0x1e8(%rip)
5a8e(5): lea 0x30(%rsp),%r14
5a93(5): mov $0xa,%edx
5a98(3): mov %rbp,%rsi
5a9b(3): mov %r14,%rdi
5a9e(5): call 0xffffc772(%rip)
5aa3(7): lea 0x736a(%rip),%rdi
5aaa(3): mov %r14,%rsi
5aad(2): xor %eax,%eax
5aaf(5): call 0xffffc591(%rip)
5ab4(5): lea 0x10(%rsp),%rsi
5ab9(3): mov %r14,%rdi
5abc(5): mov %rsi,0x8(%rsp)
5ac1(5): call 0xffffda3f(%rip)
5ac6(6): cmp $0x0,0x20(%rsp)
5acc(2): jz 0x66(%rip)
5ace(5): mov 0x18(%rsp),%rax
5ad3(7): lea 0x733f(%rip),%r12
5ada(3): xor %r13d,%r13d
5add(2): xor %ecx,%ecx
5adf(1): nop 
5ae0(3): mov %rcx,%rbx
5ae3(3): xor %r15d,%r15d
5ae6(8): lea 0x0(,%rcx,8),%rbp
5aee(4): shl/sal $0x4,%rbx
5af2(5): cmp $0x0,0x0(%rax,%rcx,8)
5af7(2): jz 0x2d(%rip)
5af9(7): nop 0x0(%rax)
5b00(5): mov 0x10(%rsp),%rsi
5b05(2): xor %eax,%eax
5b07(3): mov %r12,%rdi
5b0a(3): add %rbx,%rsi
5b0d(5): call 0xffffc533(%rip)
5b12(5): mov 0x18(%rsp),%rax
5b17(4): lea 0x1(%r15),%ecx
5b1b(3): mov %rcx,%r15
5b1e(4): cmp 0x0(%rax,%rbp,1),%rcx
5b22(2): jb 0xffffffde(%rip)
5b24(4): lea 0x1(%r13),%ecx
5b28(5): cmp 0x20(%rsp),%rcx
5b2d(3): mov %rcx,%r13
5b30(2): jb 0xffffffb0(%rip)
5b32(5): mov 0x8(%rsp),%rdi
5b37(5): call 0xffffcdd9(%rip)
5b3c(3): mov %r14,%rdi
5b3f(5): call 0xffffc5d1(%rip)
5b44(7): mov 0x20d55d(%rip),%rdi
5b4b(4): mov 0x28(%rdi),%rax
5b4f(4): cmp 0x30(%rdi),%rax
5b53(6): jnb 0x13f(%rip)
5b59(4): lea 0x1(%rax),%rdx
5b5d(4): mov %rdx,0x28(%rdi)
5b61(3): mov $0xa,(%rax)
5b64(7): mov 0x20d53d(%rip),%rdi
5b6b(5): call 0xffffc715(%rip)
5b70(5): mov $0x1,%eax
5b75(5): jmp 0xfffffe62(%rip)
5b7a(3): test %rbx,%rbx
5b7d(6): js 0xffffff04(%rip)
5b83(7): cmp $0x0,0x20d576(%rip)
5b8a(2): jz 0x1f(%rip)
5b8c(7): mov 0x20d54d(%rip),%rcx
5b93(7): lea 0x6f96(%rip),%rdi
5b9a(5): mov $0x24,%edx
5b9f(5): mov $0x1,%esi
5ba4(5): call 0xffffc69c(%rip)
5ba9(3): mov %r12,%rsi
5bac(3): mov %rbx,%rdi
5baf(5): lea 0x30(%rsp),%r13
5bb4(5): call 0xffffd6fc(%rip)
5bb9(5): mov $0x3a,%edi
5bbe(5): call 0xffffd7a2(%rip)
5bc3(3): mov %r13,%rdx
5bc6(3): mov %r12,%rsi
5bc9(3): mov %rbx,%rdi
5bcc(5): call 0xffffec94(%rip)
5bd1(8): cmp $0x0,0x12a(%rsp)
5bd9(2): jz 0x60(%rip)
5bdb(7): lea 0xe0(%r13),%rbp
5be2(4): lea 0x10(%r13),%r12
5be6(3): xor %r13d,%r13d
5be9(7): nop 0x0(%rax)
5bf0(2): xor %ebx,%ebx
5bf2(4): cmp $0x0,0x0(%rbp)
5bf6(2): jz 0x2a(%rip)
5bf8(8): nop 0x0(%rax,%rax,1)
5c00(5): mov $0x20,%edi
5c05(3): add $0x1,%ebx
5c08(5): call 0xffffd758(%rip)
5c0d(4): mov (%r12),%rdi
5c11(2): xor %esi,%esi
5c13(5): call 0xffffd16d(%rip)
5c18(4): movzx 0x0(%rbp),%eax
5c1c(2): cmp %eax,%ebx
5c1e(2): jb 0xffffffe2(%rip)
5c20(8): movzx 0x12a(%rsp),%eax
5c28(4): add $0x1,%r13d
5c2c(4): add $0x1,%rbp
5c30(4): add $0x8,%r12
5c34(3): cmp %eax,%r13d
5c37(2): jb 0xffffffb9(%rip)
5c39(6): cmp $0x0,0x38(%rsp)
5c3f(2): jz 0x1b(%rip)
5c41(5): mov $0x20,%edi
5c46(5): call 0xffffd71a(%rip)
5c4b(5): mov 0x30(%rsp),%rsi
5c50(5): mov 0x38(%rsp),%rdi
5c55(5): call 0xffffd65b(%rip)
5c5a(5): mov $0xa,%edi
5c5f(5): call 0xffffd701(%rip)
5c64(5): mov $0x1,%eax
5c69(5): jmp 0xfffffd6e(%rip)
5c6e(2): nop 
5c70(7): mov 0x20d469(%rip),%rcx
5c77(7): lea 0x6f02(%rip),%rdi
5c7e(5): mov $0x27,%edx
5c83(5): mov $0x1,%esi
5c88(5): call 0xffffc5b8(%rip)
5c8d(5): jmp 0xfffffe01(%rip)
5c92(5): mov $0xa,%esi
5c97(5): call 0xffffc309(%rip)
5c9c(5): jmp 0xfffffec8(%rip)
5ca1(3): xor %r12d,%r12d
5ca4(2): xor %ebx,%ebx
5ca6(5): jmp 0xfffffedd(%rip)
5cab(5): call 0xffffc275(%rip)
5cb0(3): sub $0x1,%edi
5cb3(6): jnz 0xfffffcf3(%rip)
5cb9(5): jmp 0xfffffdc8(%rip)

"usage" :
5cc0(2): push %r13
5cc2(2): push %r12
5cc4(5): mov $0x5,%edx
5cc9(1): push %rbp
5cca(1): push %rbx
5ccb(2): mov %edi,%ebp
5ccd(7): sub $0x88,%rsp
5cd4(7): mov 0x20d43d(%rip),%rbx
5cdb(9): mov $0x28,%rax
5ce4(5): mov %rax,0x78(%rsp)
5ce9(2): xor %eax,%eax
5ceb(2): test %edi,%edi
5ced(2): jz 0x30(%rip)
5cef(7): lea 0x6eb2(%rip),%rsi
5cf6(2): xor %edi,%edi
5cf8(5): call 0xffffc1e8(%rip)
5cfd(7): mov 0x20d3dc(%rip),%rdi
5d04(3): mov %rax,%rdx
5d07(3): mov %rbx,%rcx
5d0a(5): mov $0x1,%esi
5d0f(2): xor %eax,%eax
5d11(5): call 0xffffc53f(%rip)
5d16(2): mov %ebp,%edi
5d18(5): call 0xffffc518(%rip)
5d1d(7): lea 0x6eac(%rip),%rsi
5d24(2): xor %edi,%edi
5d26(5): call 0xffffc1ba(%rip)
5d2b(3): mov %rbx,%rcx
5d2e(3): mov %rbx,%rdx
5d31(3): mov %rax,%rsi
5d34(5): mov $0x1,%edi
5d39(2): xor %eax,%eax
5d3b(5): call 0xffffc435(%rip)
5d40(7): mov 0x20d361(%rip),%rbx
5d47(7): lea 0x6eaa(%rip),%rsi
5d4e(5): mov $0x5,%edx
5d53(2): xor %edi,%edi
5d55(5): call 0xffffc18b(%rip)
5d5a(3): mov %rbx,%rsi
5d5d(3): mov %rax,%rdi
5d60(5): call 0xffffc2f0(%rip)
5d65(7): mov 0x20d33c(%rip),%rbx
5d6c(7): lea 0x6f0d(%rip),%rsi
5d73(5): mov $0x5,%edx
5d78(2): xor %edi,%edi
5d7a(5): call 0xffffc166(%rip)
5d7f(3): mov %rbx,%rsi
5d82(3): mov %rax,%rdi
5d85(5): call 0xffffc2cb(%rip)
5d8a(7): mov 0x20d317(%rip),%rbx
5d91(7): lea 0x6f18(%rip),%rsi
5d98(5): mov $0x5,%edx
5d9d(2): xor %edi,%edi
5d9f(5): call 0xffffc141(%rip)
5da4(3): mov %rbx,%rsi
5da7(3): mov %rax,%rdi
5daa(7): lea 0x706d(%rip),%rbx
5db1(5): call 0xffffc29f(%rip)
5db6(7): lea 0x7068(%rip),%rax
5dbd(7): lea 0x70a2(%rip),%rcx
5dc4(9): mov $0x0,0x60(%rsp)
5dcd(9): mov $0x0,0x68(%rsp)
5dd6(3): mov %rsp,%rdx
5dd9(4): mov %rax,(%rsp)
5ddd(7): lea 0x7043(%rip),%rax
5de4(5): mov %rcx,0x30(%rsp)
5de9(7): lea 0x7080(%rip),%rcx
5df0(5): mov %rax,0x8(%rsp)
5df5(7): lea 0x70a3(%rip),%rax
5dfc(5): mov %rcx,0x40(%rsp)
5e01(7): lea 0x7072(%rip),%rcx
5e08(5): mov %rax,0x10(%rsp)
5e0d(7): lea 0x7023(%rip),%rax
5e14(5): mov %rcx,0x50(%rsp)
5e19(5): mov %rax,0x18(%rsp)
5e1e(7): lea 0x7028(%rip),%rax
5e25(5): mov %rax,0x20(%rsp)
5e2a(7): lea 0x7026(%rip),%rax
5e31(5): mov %rax,0x28(%rsp)
5e36(5): mov %rax,0x38(%rsp)
5e3b(5): mov %rax,0x48(%rsp)
5e40(5): mov %rax,0x58(%rsp)
5e45(3): nop (%rax)
5e48(4): add $0x10,%rdx
5e4c(3): mov (%rdx),%rdi
5e4f(3): test %rdi,%rdi
5e52(2): jz 0x15(%rip)
5e54(5): mov $0x7,%ecx
5e59(3): mov %rbx,%rsi
5e5c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5e5e(3): setnbe %al
5e61(2): sbb $0x0,%al
5e63(2): test %al,%al
5e65(2): jnz 0xffffffe3(%rip)
5e67(4): mov 0x8(%rdx),%r12
5e6b(2): xor %edi,%edi
5e6d(5): mov $0x5,%edx
5e72(7): lea 0x700b(%rip),%rsi
5e79(3): test %r12,%r12
5e7c(6): jz 0xc7(%rip)
5e82(5): call 0xffffc05e(%rip)
5e87(7): lea 0x6e5a(%rip),%rcx
5e8e(7): lea 0x7006(%rip),%rdx
5e95(3): mov %rax,%rsi
5e98(5): mov $0x1,%edi
5e9d(2): xor %eax,%eax
5e9f(5): call 0xffffc2d1(%rip)
5ea4(2): xor %esi,%esi
5ea6(5): mov $0x5,%edi
5eab(5): call 0xffffc2b5(%rip)
5eb0(3): test %rax,%rax
5eb3(2): jz 0x1e(%rip)
5eb5(7): lea 0x6fed(%rip),%rsi
5ebc(5): mov $0x3,%edx
5ec1(3): mov %rax,%rdi
5ec4(5): call 0xffffbf3c(%rip)
5ec9(2): test %eax,%eax
5ecb(6): jnz 0x10d(%rip)
5ed1(7): lea 0x6fd5(%rip),%rsi
5ed8(2): xor %edi,%edi
5eda(5): mov $0x5,%edx
5edf(5): call 0xffffc001(%rip)
5ee4(7): lea 0x6f33(%rip),%rcx
5eeb(7): lea 0x6df6(%rip),%rdx
5ef2(3): mov %rax,%rsi
5ef5(5): mov $0x1,%edi
5efa(2): xor %eax,%eax
5efc(5): call 0xffffc274(%rip)
5f01(3): cmp %rbx,%r12
5f04(7): lea 0x6f36(%rip),%rcx
5f0b(7): lea 0xa749(%rip),%rbx
5f12(4): cmove %rcx,%rbx
5f16(7): lea 0x6e3b(%rip),%rsi
5f1d(2): xor %edi,%edi
5f1f(5): mov $0x5,%edx
5f24(5): call 0xffffbfbc(%rip)
5f29(3): mov %rbx,%rcx
5f2c(3): mov %rax,%rsi
5f2f(3): mov %r12,%rdx
5f32(5): mov $0x1,%edi
5f37(2): xor %eax,%eax
5f39(5): call 0xffffc237(%rip)
5f3e(5): jmp 0xfffffdd8(%rip)
5f43(5): call 0xffffbf9d(%rip)
5f48(7): lea 0x6d99(%rip),%rcx
5f4f(7): lea 0x6f45(%rip),%rdx
5f56(3): mov %rax,%rsi
5f59(5): mov $0x1,%edi
5f5e(2): xor %eax,%eax
5f60(5): call 0xffffc210(%rip)
5f65(2): xor %esi,%esi
5f67(5): mov $0x5,%edi
5f6c(5): call 0xffffc1f4(%rip)
5f71(3): test %rax,%rax
5f74(2): jz 0x1a(%rip)
5f76(7): lea 0x6f2c(%rip),%rsi
5f7d(5): mov $0x3,%edx
5f82(3): mov %rax,%rdi
5f85(5): call 0xffffbe7b(%rip)
5f8a(2): test %eax,%eax
5f8c(2): jnz 0x45(%rip)
5f8e(7): lea 0x6f18(%rip),%rsi
5f95(5): mov $0x5,%edx
5f9a(2): xor %edi,%edi
5f9c(7): lea 0x6e7b(%rip),%r12
5fa3(7): lea 0x6e97(%rip),%rbx
5faa(5): call 0xffffbf36(%rip)
5faf(7): lea 0x6e68(%rip),%rcx
5fb6(7): lea 0x6d2b(%rip),%rdx
5fbd(3): mov %rax,%rsi
5fc0(5): mov $0x1,%edi
5fc5(2): xor %eax,%eax
5fc7(5): call 0xffffc1a9(%rip)
5fcc(5): jmp 0xffffff4a(%rip)
5fd1(7): lea 0x6e46(%rip),%r12
5fd8(7): mov 0x20d0c9(%rip),%r13
5fdf(7): lea 0x6d2a(%rip),%rsi
5fe6(2): xor %edi,%edi
5fe8(5): mov $0x5,%edx
5fed(5): call 0xffffbef3(%rip)
5ff2(3): mov %r13,%rsi
5ff5(3): mov %rax,%rdi
5ff8(5): call 0xffffc058(%rip)
5ffd(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
6010(7): mov %rdi,0x20d0f9(%rip)
6017(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
6020(7): mov %dil,0x20d0e1(%rip)
6027(1): ret near (%rsp)

"close_stdout" :
6030(1): push %rbp
6031(1): push %rbx
6032(4): sub $0x8,%rsp
6036(7): mov 0x20d06b(%rip),%rdi
603d(5): call 0x4093(%rip)
6042(2): test %eax,%eax
6044(2): jz 0x18(%rip)
6046(5): call 0xffffbdaa(%rip)
604b(7): cmp $0x0,0x20d0b6(%rip)
6052(3): mov %rax,%rbx
6055(2): jz 0x1e(%rip)
6057(3): cmp $0x20,(%rax)
605a(2): jnz 0x19(%rip)
605c(7): mov 0x20d07d(%rip),%rdi
6063(5): call 0x406d(%rip)
6068(2): test %eax,%eax
606a(2): jnz 0x48(%rip)
606c(4): add $0x8,%rsp
6070(1): pop %rbx
6071(1): pop %rbp
6072(1): ret near (%rsp)
6073(7): lea 0x6d11(%rip),%rsi
607a(2): xor %edi,%edi
607c(5): mov $0x5,%edx
6081(5): call 0xffffbe5f(%rip)
6086(7): mov 0x20d083(%rip),%rdi
608d(3): mov %rax,%rbp
6090(3): test %rdi,%rdi
6093(2): jz 0x2a(%rip)
6095(5): call 0x291b(%rip)
609a(2): mov (%rbx),%esi
609c(7): lea 0x9f65(%rip),%rdx
60a3(3): mov %rax,%rcx
60a6(3): mov %rbp,%r8
60a9(2): xor %edi,%edi
60ab(2): xor %eax,%eax
60ad(5): call 0xffffc133(%rip)
60b2(6): mov 0x20cf68(%rip),%edi
60b8(5): call 0xffffbd58(%rip)
60bd(2): mov (%rbx),%esi
60bf(7): lea 0x9f46(%rip),%rdx
60c6(3): mov %rax,%rcx
60c9(2): xor %edi,%edi
60cb(2): xor %eax,%eax
60cd(5): call 0xffffc113(%rip)
60d2(2): jmp 0xffffffe0(%rip)

"full_write" :
60e0(2): push %r13
60e2(2): push %r12
60e4(1): push %rbp
60e5(1): push %rbx
60e6(4): sub $0x8,%rsp
60ea(3): test %rdx,%rdx
60ed(2): jz 0x64(%rip)
60ef(3): mov %edi,%r13d
60f2(3): mov %rsi,%rbp
60f5(3): mov %rdx,%rbx
60f8(3): xor %r12d,%r12d
60fb(2): jmp 0x15(%rip)
60fd(3): nop (%rax)
6100(3): test %rax,%rax
6103(2): jz 0x35(%rip)
6105(3): add %rax,%r12
6108(3): add %rax,%rbp
610b(3): sub %rax,%rbx
610e(2): jz 0x16(%rip)
6110(3): mov %rbx,%rdx
6113(3): mov %rbp,%rsi
6116(3): mov %r13d,%edi
6119(5): call 0x2ed7(%rip)
611e(4): cmp $0xffffffff,%rax
6122(2): jnz 0xffffffde(%rip)
6124(4): add $0x8,%rsp
6128(3): mov %r12,%rax
612b(1): pop %rbx
612c(1): pop %rbp
612d(2): pop %r12
612f(2): pop %r13
6131(1): ret near (%rsp)
6132(6): nop 0x0(%rax,%rax,1)
6138(5): call 0xffffbcb8(%rip)
613d(6): mov $0x1c,(%rax)
6143(4): add $0x8,%rsp
6147(3): mov %r12,%rax
614a(1): pop %rbx
614b(1): pop %rbp
614c(2): pop %r12
614e(2): pop %r13
6150(1): ret near (%rsp)
6151(3): xor %r12d,%r12d
6154(2): jmp 0xffffffd0(%rip)

"umaxtostr" :
6160(4): lea 0x14(%rsi),%rcx
6164(4): mov $0x0,0x14(%rsi)
6168(a): mov $0x-3689348814741910323,%rsi
6172(6): nop 0x0(%rax,%rax,1)
6178(3): mov %rdi,%rax
617b(4): sub $0x1,%rcx
617f(3): mul %rax,%rsi,%rdx
6182(4): shr $0x3,%rdx
6186(4): lea 0x0(%rdx,%rdx,4),%rax
618a(3): add %rax,%rax
618d(3): sub %rax,%rdi
6190(3): add $0x30,%edi
6193(3): test %rdx,%rdx
6196(3): mov %dil,(%rcx)
6199(3): mov %rdx,%rdi
619c(2): jnz 0xffffffdc(%rip)
619e(3): mov %rcx,%rax
61a1(1): ret near (%rsp)

"set_program_name" :
61b0(3): test %rdi,%rdi
61b3(1): push %rbx
61b4(2): jz 0x79(%rip)
61b6(5): mov $0x2f,%esi
61bb(3): mov %rdi,%rbx
61be(5): call 0xffffbdf2(%rip)
61c3(3): test %rax,%rax
61c6(2): jz 0x57(%rip)
61c8(4): lea 0x1(%rax),%r8
61cc(3): mov %r8,%rdx
61cf(3): sub %rbx,%rdx
61d2(4): cmp $0x6,%rdx
61d6(2): jle 0x47(%rip)
61d8(4): lea 0xfffffffa(%rax),%rsi
61dc(7): lea 0x9e65(%rip),%rdi
61e3(5): mov $0x7,%ecx
61e8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
61ea(3): setnbe %dl
61ed(3): sbb $0x0,%dl
61f0(2): test %dl,%dl
61f2(2): jnz 0x2b(%rip)
61f4(7): lea 0x9e55(%rip),%rdi
61fb(5): mov $0x3,%ecx
6200(3): mov %r8,%rsi
6203(3): mov %r8,%rbx
6206(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6208(3): setnbe %dl
620b(3): sbb $0x0,%dl
620e(2): test %dl,%dl
6210(2): jnz 0xd(%rip)
6212(4): lea 0x4(%rax),%rbx
6216(7): mov %rbx,0x20ce83(%rip)
621d(7): mov %rbx,0x20cef4(%rip)
6224(7): mov %rbx,0x20ce95(%rip)
622b(1): pop %rbx
622c(1): ret near (%rsp)
622d(7): mov 0x20ceac(%rip),%rcx
6234(7): lea 0x9dd5(%rip),%rdi
623b(5): mov $0x37,%edx
6240(5): mov $0x1,%esi
6245(5): call 0xffffbffb(%rip)
624a(5): call 0xffffbb96(%rip)

"mbsstr_trimmed_wordbounded" :
6250(2): push %r15
6252(2): push %r14
6254(3): mov %rdi,%r15
6257(2): push %r13
6259(2): push %r12
625b(3): mov %rsi,%rdi
625e(1): push %rbp
625f(1): push %rbx
6260(5): mov $0x2,%esi
6265(7): lea 0xa734(%rip),%r13
626c(7): sub $0xb8,%rsp
6273(5): lea 0x20(%rsp),%rbx
6278(5): lea 0x60(%rsp),%r12
627d(9): mov $0x28,%rax
6286(8): mov %rax,0xa8(%rsp)
628e(2): xor %eax,%eax
6290(4): lea 0x24(%rbx),%r14
6294(5): call 0x2dfc(%rip)
6299(5): mov %rax,0x8(%rsp)
629e(2): nop 
62a0(4): cmp $0x0,(%r15)
62a4(2): jz 0x81(%rip)
62a6(5): mov 0x8(%rsp),%rsi
62ab(3): mov %r15,%rdi
62ae(5): call 0x4c22(%rip)
62b3(3): test %rax,%rax
62b6(3): mov %rax,%rbp
62b9(2): jz 0x6c(%rip)
62bb(5): call 0xffffbc35(%rip)
62c0(4): cmp $0x1,%rax
62c4(6): jnbe 0xa4(%rip)
62ca(3): cmp %rbp,%r15
62cd(6): jnb 0x66b(%rip)
62d3(5): call 0xffffbffd(%rip)
62d8(4): movzx 0xffffffff(%rbp),%edx
62dc(3): mov (%rax),%rax
62df(5): mov 0x8(%rsp),%rdi
62e4(5): movzx 0x0(%rax,%rdx,2),%r15d
62e9(5): shr $0x3,%r15w
62ee(4): xor $0x1,%r15d
62f2(3): mov %r15d,%eax
62f5(3): and $0x1,%eax
62f8(4): mov %al,0x10(%rsp)
62fc(5): call 0xffffbc04(%rip)
6301(5): movzx 0x0(%rbp,%rax,1),%edx
6306(2): test %dl,%dl
6308(6): jnz 0x64c(%rip)
630e(5): cmp $0x0,0x10(%rsp)
6313(2): jnz 0x17(%rip)
6315(4): cmp $0x0,0x0(%rbp)
6319(2): jz 0xc(%rip)
631b(4): lea 0x1(%rbp),%r15
631f(4): cmp $0x0,(%r15)
6323(2): jnz 0xffffff83(%rip)
6325(5): mov $0x0,0x10(%rsp)
632a(5): mov 0x8(%rsp),%rdi
632f(5): call 0xffffbaa1(%rip)
6334(8): mov 0xa8(%rsp),%rbx
633c(9): xor $0x28,%rbx
6345(5): movzx 0x10(%rsp),%eax
634a(6): jnz 0x84c(%rip)
6350(7): add $0xb8,%rsp
6357(1): pop %rbx
6358(1): pop %rbp
6359(2): pop %r12
635b(2): pop %r13
635d(2): pop %r14
635f(2): pop %r15
6361(1): ret near (%rsp)
6362(6): nop 0x0(%rax,%rax,1)
6368(3): cmp %rbp,%r15
636b(5): mov %r15,0x30(%rsp)
6370(5): mov $0x0,0x20(%rsp)
6375(8): mov $0x0,0x4(%rbx)
637d(5): mov $0x0,0x2c(%rsp)
6382(2): jb 0x75(%rip)
6384(5): jmp 0x5a4(%rip)
6389(7): nop 0x0(%rax)
6390(5): mov 0x30(%rsp),%r15
6395(4): movzx (%r15),%edx
6399(2): mov %edx,%eax
639b(3): shr $0x5,%al
639e(3): and $0x7,%eax
63a1(5): mov 0x0(%r13,%rax,4),%eax
63a6(3): bt %edx,%eax
63a9(6): jnb 0xef(%rip)
63af(9): mov $0x1,0x38(%rsp)
63b8(4): movsx (%r15),%edx
63bc(5): mov $0x1,0x40(%rsp)
63c1(5): mov $0x1,0x2c(%rsp)
63c6(4): mov %edx,0x44(%rsp)
63ca(2): test %edx,%edx
63cc(6): jz 0x7a6(%rip)
63d2(5): mov 0x30(%rsp),%r15
63d7(5): mov 0x38(%rsp),%rax
63dc(5): movzx 0x40(%rsp),%ecx
63e1(5): mov $0x0,0x2c(%rsp)
63e6(3): add %r15,%rax
63e9(3): cmp %rbp,%rax
63ec(5): mov %rax,0x30(%rsp)
63f1(6): jnb 0x12f(%rip)
63f7(5): cmp $0x0,0x20(%rsp)
63fc(2): jz 0xffffff94(%rip)
63fe(5): call 0xffffbaf2(%rip)
6403(5): mov 0x30(%rsp),%r15
6408(3): mov %rax,%rsi
640b(3): mov %r15,%rdi
640e(5): call 0x2c42(%rip)
6413(4): lea 0x4(%rbx),%rcx
6417(3): mov %rax,%rdx
641a(3): mov %r15,%rsi
641d(3): mov %r14,%rdi
6420(5): call 0x3bd0(%rip)
6425(4): cmp $0xffffffff,%rax
6429(5): mov %rax,0x38(%rsp)
642e(6): jz 0x8a(%rip)
6434(4): cmp $0xfffffffe,%rax
6438(6): jz 0xa0(%rip)
643e(3): test %rax,%rax
6441(6): jnz 0xcf(%rip)
6447(5): mov 0x30(%rsp),%r15
644c(9): mov $0x1,0x38(%rsp)
6455(4): cmp $0x0,(%r15)
6459(6): jnz 0x742(%rip)
645f(4): mov 0x44(%rsp),%edx
6463(2): test %edx,%edx
6465(6): jnz 0x6b7(%rip)
646b(4): lea 0x4(%rbx),%rdi
646f(4): mov %edx,0x10(%rsp)
6473(5): mov $0x1,0x40(%rsp)
6478(5): call 0xffffbe38(%rip)
647d(2): test %eax,%eax
647f(4): mov 0x10(%rsp),%edx
6483(2): jz 0x7d(%rip)
6485(5): mov $0x0,0x20(%rsp)
648a(5): mov $0x1,0x2c(%rsp)
648f(5): jmp 0xffffff3b(%rip)
6494(4): nop 0x0(%rax)
6498(4): lea 0x4(%rbx),%rdi
649c(5): call 0xffffbe14(%rip)
64a1(2): test %eax,%eax
64a3(6): jz 0x6d4(%rip)
64a9(5): mov $0x1,0x20(%rsp)
64ae(5): jmp 0xffffff50(%rip)
64b3(5): nop 0x0(%rax,%rax,1)
64b8(9): mov $0x1,0x38(%rsp)
64c1(5): mov $0x0,0x40(%rsp)
64c6(4): mov 0x44(%rsp),%edx
64ca(5): mov 0x30(%rsp),%r15
64cf(5): jmp 0xffffff08(%rip)
64d4(4): nop 0x0(%rax)
64d8(5): mov 0x30(%rsp),%r15
64dd(3): mov %r15,%rdi
64e0(5): call 0xffffba20(%rip)
64e5(5): mov $0x0,0x40(%rsp)
64ea(5): mov %rax,0x38(%rsp)
64ef(4): mov 0x44(%rsp),%edx
64f3(5): jmp 0xfffffee4(%rip)
64f8(8): nop 0x0(%rax,%rax,1)
6500(5): mov $0x1,0x2c(%rsp)
6505(5): jmp 0xfffffec5(%rip)
650a(6): nop 0x0(%rax,%rax,1)
6510(4): mov 0x44(%rsp),%edx
6514(5): jmp 0xffffff57(%rip)
6519(7): nop 0x0(%rax)
6520(2): test %cl,%cl
6522(6): jz 0x406(%rip)
6528(2): mov %edx,%edi
652a(5): call 0xffffbbb6(%rip)
652f(2): test %eax,%eax
6531(5): setz 0x10(%rsp)
6536(5): mov 0x8(%rsp),%rax
653b(5): mov %rbp,0x30(%rsp)
6540(5): mov $0x0,0x20(%rsp)
6545(8): mov $0x0,0x4(%rbx)
654d(5): mov $0x0,0x2c(%rsp)
6552(5): mov $0x0,0x60(%rsp)
6557(5): mov %rax,0x70(%rsp)
655c(9): mov $0x0,0x4(%r12)
6565(5): mov $0x0,0x6c(%rsp)
656a(2): jmp 0x73(%rip)
656c(4): nop 0x0(%rax)
6570(5): cmp $0x0,0x20(%rsp)
6575(6): jnz 0x281(%rip)
657b(5): mov 0x30(%rsp),%rcx
6580(3): movzx (%rcx),%edx
6583(2): mov %edx,%eax
6585(3): shr $0x5,%al
6588(3): and $0x7,%eax
658b(5): mov 0x0(%r13,%rax,4),%eax
6590(3): bt %edx,%eax
6593(6): jnb 0x24d(%rip)
6599(9): mov $0x1,0x38(%rsp)
65a2(3): movsx (%rcx),%eax
65a5(5): mov $0x1,0x40(%rsp)
65aa(5): mov $0x1,0x2c(%rsp)
65af(4): mov %eax,0x44(%rsp)
65b3(4): mov 0x44(%rsp),%edi
65b7(2): test %edi,%edi
65b9(6): jz 0x5b9(%rip)
65bf(5): mov 0x38(%rsp),%rax
65c4(5): add %rax,0x30(%rsp)
65c9(5): mov 0x78(%rsp),%rax
65ce(5): add %rax,0x70(%rsp)
65d3(5): mov $0x0,0x2c(%rsp)
65d8(5): mov $0x0,0x6c(%rsp)
65dd(5): cmp $0x0,0x60(%rsp)
65e2(2): jnz 0x7d(%rip)
65e4(5): mov 0x70(%rsp),%rcx
65e9(3): movzx (%rcx),%edx
65ec(2): mov %edx,%eax
65ee(3): shr $0x5,%al
65f1(3): and $0x7,%eax
65f4(5): mov 0x0(%r13,%rax,4),%eax
65f9(3): bt %edx,%eax
65fc(2): jnb 0x4c(%rip)
65fe(9): mov $0x1,0x78(%rsp)
6607(3): movsx (%rcx),%eax
660a(8): mov $0x1,0x80(%rsp)
6612(5): mov $0x1,0x6c(%rsp)
6617(7): mov %eax,0x84(%rsp)
661e(7): mov 0x84(%rsp),%ecx
6625(2): test %ecx,%ecx
6627(6): jz 0xd9(%rip)
662d(5): cmp $0x0,0x2c(%rsp)
6632(6): jz 0xffffff3e(%rip)
6638(5): cmp $0x0,0x40(%rsp)
663d(2): jz 0xffffff82(%rip)
663f(5): jmp 0xffffff74(%rip)
6644(4): nop 0x0(%rax)
6648(5): lea 0x4(%r12),%rdi
664d(5): call 0xffffbc63(%rip)
6652(2): test %eax,%eax
6654(6): jz 0x523(%rip)
665a(5): mov $0x1,0x60(%rsp)
665f(5): call 0xffffb891(%rip)
6664(5): mov 0x70(%rsp),%r15
6669(3): mov %rax,%rsi
666c(3): mov %r15,%rdi
666f(5): call 0x29e1(%rip)
6674(5): lea 0x4(%r12),%rcx
6679(5): lea 0x24(%r12),%rdi
667e(3): mov %rax,%rdx
6681(3): mov %r15,%rsi
6684(5): call 0x396c(%rip)
6689(4): cmp $0xffffffff,%rax
668d(5): mov %rax,0x78(%rsp)
6692(6): jz 0x1f6(%rip)
6698(4): cmp $0xfffffffe,%rax
669c(6): jz 0x224(%rip)
66a2(3): test %rax,%rax
66a5(2): jnz 0x28(%rip)
66a7(5): mov 0x70(%rsp),%rax
66ac(9): mov $0x1,0x78(%rsp)
66b5(3): cmp $0x0,(%rax)
66b8(6): jnz 0x4e3(%rip)
66be(7): mov 0x84(%rsp),%esi
66c5(2): test %esi,%esi
66c7(6): jnz 0x455(%rip)
66cd(5): lea 0x4(%r12),%rdi
66d2(8): mov $0x1,0x80(%rsp)
66da(5): call 0xffffbbd6(%rip)
66df(2): test %eax,%eax
66e1(6): jz 0x207(%rip)
66e7(7): mov 0x84(%rsp),%ecx
66ee(5): mov $0x0,0x60(%rsp)
66f3(5): mov $0x1,0x6c(%rsp)
66f8(2): test %ecx,%ecx
66fa(6): jnz 0xffffff33(%rip)
6700(5): cmp $0x0,0x2c(%rsp)
6705(6): jnz 0x273(%rip)
670b(5): cmp $0x0,0x20(%rsp)
6710(6): jnz 0x292(%rip)
6716(5): mov 0x30(%rsp),%rcx
671b(3): movzx (%rcx),%edx
671e(2): mov %edx,%eax
6720(3): shr $0x5,%al
6723(3): and $0x7,%eax
6726(5): mov 0x0(%r13,%rax,4),%eax
672b(3): bt %edx,%eax
672e(6): jnb 0x25e(%rip)
6734(9): mov $0x1,0x38(%rsp)
673d(3): movsx (%rcx),%edx
6740(5): mov $0x1,0x40(%rsp)
6745(5): mov $0x1,0x2c(%rsp)
674a(4): mov %edx,0x44(%rsp)
674e(2): test %edx,%edx
6750(2): jz 0x14(%rip)
6752(5): cmp $0x0,0x40(%rsp)
6757(2): jz 0xd(%rip)
6759(2): mov %edx,%edi
675b(5): call 0xffffb985(%rip)
6760(2): test %eax,%eax
6762(2): jnz 0xd(%rip)
6764(5): cmp $0x0,0x10(%rsp)
6769(6): jnz 0xfffffbc1(%rip)
676f(5): mov %rbp,0x30(%rsp)
6774(5): mov $0x0,0x20(%rsp)
6779(4): lea 0x4(%rbx),%r15
677d(8): mov $0x0,0x4(%rbx)
6785(5): mov $0x0,0x2c(%rsp)
678a(4): movzx 0x0(%rbp),%edx
678e(2): mov %edx,%eax
6790(3): shr $0x5,%al
6793(3): and $0x7,%eax
6796(5): mov 0x0(%r13,%rax,4),%eax
679b(3): bt %edx,%eax
679e(6): jnb 0x292(%rip)
67a4(9): mov $0x1,0x38(%rsp)
67ad(4): movsx 0x0(%rbp),%eax
67b1(5): mov $0x1,0x40(%rsp)
67b6(5): mov $0x1,0x2c(%rsp)
67bb(4): mov %eax,0x44(%rsp)
67bf(4): mov 0x44(%rsp),%eax
67c3(2): test %eax,%eax
67c5(6): jz 0xfffffb60(%rip)
67cb(5): mov 0x38(%rsp),%r15
67d0(3): add %rbp,%r15
67d3(5): jmp 0xfffffacd(%rip)
67d8(8): nop 0x0(%rax,%rax,1)
67e0(4): lea 0x4(%rbx),%rdi
67e4(5): call 0xffffbacc(%rip)
67e9(2): test %eax,%eax
67eb(6): jz 0x38c(%rip)
67f1(5): mov $0x1,0x20(%rsp)
67f6(5): call 0xffffb6fa(%rip)
67fb(5): mov 0x30(%rsp),%r15
6800(3): mov %rax,%rsi
6803(3): mov %r15,%rdi
6806(5): call 0x284a(%rip)
680b(4): lea 0x4(%rbx),%rcx
680f(3): mov %rax,%rdx
6812(3): mov %r15,%rsi
6815(3): mov %r14,%rdi
6818(5): call 0x37d8(%rip)
681d(4): cmp $0xffffffff,%rax
6821(5): mov %rax,0x38(%rsp)
6826(6): jz 0x82(%rip)
682c(4): cmp $0xfffffffe,%rax
6830(6): jz 0xc8(%rip)
6836(3): test %rax,%rax
6839(2): jnz 0x27(%rip)
683b(5): mov 0x30(%rsp),%rax
6840(9): mov $0x1,0x38(%rsp)
6849(3): cmp $0x0,(%rax)
684c(6): jnz 0x34f(%rip)
6852(5): mov 0x44(%rsp),%r8d
6857(3): test %r8d,%r8d
685a(6): jnz 0x2c2(%rip)
6860(4): lea 0x4(%rbx),%rdi
6864(5): mov $0x1,0x40(%rsp)
6869(5): call 0xffffba47(%rip)
686e(2): test %eax,%eax
6870(6): jz 0xa8(%rip)
6876(5): mov $0x0,0x20(%rsp)
687b(5): mov $0x1,0x2c(%rsp)
6880(5): jmp 0xfffffd33(%rip)
6885(3): nop (%rax)
6888(9): mov $0x1,0x78(%rsp)
6891(8): mov $0x0,0x80(%rsp)
6899(5): mov $0x1,0x6c(%rsp)
689e(5): jmp 0xfffffd8f(%rip)
68a3(5): nop 0x0(%rax,%rax,1)
68a8(9): mov $0x1,0x38(%rsp)
68b1(5): mov $0x0,0x40(%rsp)
68b6(5): jmp 0xfffffd09(%rip)
68bb(5): nop 0x0(%rax,%rax,1)
68c0(5): mov 0x70(%rsp),%rdi
68c5(5): call 0xffffb63b(%rip)
68ca(8): mov $0x0,0x80(%rsp)
68d2(5): mov %rax,0x78(%rsp)
68d7(5): mov $0x1,0x6c(%rsp)
68dc(5): jmp 0xfffffd51(%rip)
68e1(7): nop 0x0(%rax)
68e8(5): mov $0x1,0x6c(%rsp)
68ed(5): jmp 0xfffffd31(%rip)
68f2(6): nop 0x0(%rax,%rax,1)
68f8(5): mov 0x30(%rsp),%rdi
68fd(5): call 0xffffb603(%rip)
6902(5): mov $0x0,0x40(%rsp)
6907(5): mov %rax,0x38(%rsp)
690c(5): jmp 0xfffffcb3(%rip)
6911(7): nop 0x0(%rax)
6918(5): mov $0x1,0x2c(%rsp)
691d(5): jmp 0xfffffc96(%rip)
6922(6): nop 0x0(%rax,%rax,1)
6928(5): mov $0x1,0x10(%rsp)
692d(5): jmp 0xfffffc09(%rip)
6932(6): nop 0x0(%rax,%rax,1)
6938(5): mov 0x8(%rsp),%rdi
693d(5): call 0xffffb5c3(%rip)
6942(5): movzx 0x0(%rbp,%rax,1),%edx
6947(5): mov $0x1,0x10(%rsp)
694c(2): test %dl,%dl
694e(6): jz 0xfffff9dc(%rip)
6954(4): mov %dl,0x18(%rsp)
6958(5): call 0xffffb978(%rip)
695d(5): movzx 0x18(%rsp),%edx
6962(3): mov (%rax),%rax
6965(4): test $0x8,0x0(%rax,%rdx,2)
6969(6): jnz 0xfffff9ac(%rip)
696f(5): jmp 0xfffff99f(%rip)
6974(4): nop 0x0(%rax)
6978(5): cmp $0x0,0x40(%rsp)
697d(4): mov 0x44(%rsp),%edx
6981(6): jz 0xfffffdd1(%rip)
6987(5): jmp 0xfffffdc7(%rip)
698c(4): lea 0x4(%rbx),%rdi
6990(5): call 0xffffb920(%rip)
6995(2): test %eax,%eax
6997(6): jz 0x1e0(%rip)
699d(5): mov $0x1,0x20(%rsp)
69a2(5): call 0xffffb54e(%rip)
69a7(5): mov 0x30(%rsp),%r8
69ac(3): mov %rax,%rsi
69af(3): mov %r8,%rdi
69b2(5): mov %r8,0x18(%rsp)
69b7(5): call 0x2699(%rip)
69bc(5): mov 0x18(%rsp),%r8
69c1(4): lea 0x4(%rbx),%rcx
69c5(3): mov %rax,%rdx
69c8(3): mov %r14,%rdi
69cb(3): mov %r8,%rsi
69ce(5): call 0x3622(%rip)
69d3(4): cmp $0xffffffff,%rax
69d7(5): mov %rax,0x38(%rsp)
69dc(6): jz 0xf3(%rip)
69e2(4): cmp $0xfffffffe,%rax
69e6(6): jz 0x16a(%rip)
69ec(3): test %rax,%rax
69ef(6): jz 0x10a(%rip)
69f5(4): mov 0x44(%rsp),%edx
69f9(4): lea 0x4(%rbx),%rdi
69fd(4): mov %edx,0x18(%rsp)
6a01(5): mov $0x1,0x40(%rsp)
6a06(5): call 0xffffb8aa(%rip)
6a0b(2): test %eax,%eax
6a0d(4): mov 0x18(%rsp),%edx
6a11(6): jz 0x121(%rip)
6a17(5): mov $0x0,0x20(%rsp)
6a1c(5): mov $0x1,0x2c(%rsp)
6a21(5): jmp 0xfffffd2d(%rip)
6a26(a): nop 0x0(%rax,%rax,1)
6a30(3): mov %r15,%rdi
6a33(5): call 0xffffb87d(%rip)
6a38(2): test %eax,%eax
6a3a(6): jz 0x13d(%rip)
6a40(5): mov $0x1,0x20(%rsp)
6a45(5): call 0xffffb4ab(%rip)
6a4a(5): mov 0x30(%rsp),%r8
6a4f(3): mov %rax,%rsi
6a52(3): mov %r8,%rdi
6a55(5): mov %r8,0x10(%rsp)
6a5a(5): call 0x25f6(%rip)
6a5f(5): mov 0x10(%rsp),%r8
6a64(3): mov %r15,%rcx
6a67(3): mov %rax,%rdx
6a6a(3): mov %r14,%rdi
6a6d(3): mov %r8,%rsi
6a70(5): call 0x3580(%rip)
6a75(4): cmp $0xffffffff,%rax
6a79(5): mov %rax,0x38(%rsp)
6a7e(2): jz 0x6d(%rip)
6a80(4): cmp $0xfffffffe,%rax
6a84(6): jz 0xb8(%rip)
6a8a(3): test %rax,%rax
6a8d(2): jnz 0x21(%rip)
6a8f(5): mov 0x30(%rsp),%rax
6a94(9): mov $0x1,0x38(%rsp)
6a9d(3): cmp $0x0,(%rax)
6aa0(6): jnz 0xfb(%rip)
6aa6(4): mov 0x44(%rsp),%edx
6aaa(2): test %edx,%edx
6aac(2): jnz 0x70(%rip)
6aae(4): lea 0x4(%rbx),%rdi
6ab2(5): mov $0x1,0x40(%rsp)
6ab7(5): call 0xffffb7f9(%rip)
6abc(2): test %eax,%eax
6abe(2): jz 0x6a(%rip)
6ac0(5): mov $0x0,0x20(%rsp)
6ac5(5): mov $0x1,0x2c(%rsp)
6aca(5): jmp 0xfffffcf5(%rip)
6acf(9): mov $0x1,0x38(%rsp)
6ad8(5): mov $0x0,0x40(%rsp)
6add(4): mov 0x44(%rsp),%edx
6ae1(5): mov $0x1,0x2c(%rsp)
6ae6(5): jmp 0xfffffc6c(%rip)
6aeb(9): mov $0x1,0x38(%rsp)
6af4(5): jmp 0xfffffcd7(%rip)
6af9(5): mov 0x30(%rsp),%rax
6afe(9): mov $0x1,0x38(%rsp)
6b07(3): cmp $0x0,(%rax)
6b0a(6): jnz 0x91(%rip)
6b10(4): mov 0x44(%rsp),%edx
6b14(2): test %edx,%edx
6b16(6): jz 0xfffffee3(%rip)
6b1c(5): call 0xffffb7f4(%rip)
6b21(7): nop 0x0(%rax)
6b28(5): mov $0x1,0x2c(%rsp)
6b2d(5): jmp 0xfffffc92(%rip)
6b32(5): mov $0x1,0x2c(%rsp)
6b37(5): jmp 0xfffffc17(%rip)
6b3c(5): mov 0x30(%rsp),%rdi
6b41(5): call 0xffffb3bf(%rip)
6b46(5): mov %rax,0x38(%rsp)
6b4b(5): jmp 0xfffffc80(%rip)
6b50(5): mov 0x30(%rsp),%rdi
6b55(5): call 0xffffb3ab(%rip)
6b5a(5): mov $0x0,0x40(%rsp)
6b5f(5): mov %rax,0x38(%rsp)
6b64(4): mov 0x44(%rsp),%edx
6b68(5): mov $0x1,0x2c(%rsp)
6b6d(5): jmp 0xfffffbe5(%rip)
6b72(5): call 0xffffb26e(%rip)
6b77(7): lea 0x9552(%rip),%rcx
6b7e(7): lea 0x94d3(%rip),%rsi
6b85(7): lea 0x94fe(%rip),%rdi
6b8c(5): mov $0x96,%edx
6b91(5): call 0xffffb44f(%rip)
6b96(5): call 0xffffb38a(%rip)
6b9b(7): lea 0x952e(%rip),%rcx
6ba2(7): lea 0x94af(%rip),%rsi
6ba9(7): lea 0x94f1(%rip),%rdi
6bb0(5): mov $0xb2,%edx
6bb5(5): call 0xffffb42b(%rip)

"proper_name" :
6bc0(2): push %r12
6bc2(1): push %rbp
6bc3(3): mov %rdi,%rsi
6bc6(1): push %rbx
6bc7(3): mov %rdi,%rbp
6bca(5): mov $0x5,%edx
6bcf(2): xor %edi,%edi
6bd1(5): call 0xffffb30f(%rip)
6bd6(3): cmp %rax,%rbp
6bd9(3): mov %rax,%rbx
6bdc(2): jz 0x11(%rip)
6bde(3): mov %rbp,%rsi
6be1(3): mov %rax,%rdi
6be4(5): call 0xfffff66c(%rip)
6be9(2): test %al,%al
6beb(2): jz 0xd(%rip)
6bed(3): mov %rbx,%rax
6bf0(1): pop %rbx
6bf1(1): pop %rbp
6bf2(2): pop %r12
6bf4(1): ret near (%rsp)
6bf5(3): nop (%rax)
6bf8(3): mov %rbx,%rdi
6bfb(5): call 0xffffb305(%rip)
6c00(3): mov %rbp,%rdi
6c03(3): mov %rax,%r12
6c06(5): call 0xffffb2fa(%rip)
6c0b(5): lea 0x4(%r12,%rax,1),%rdi
6c10(5): call 0x30d0(%rip)
6c15(7): lea 0x949c(%rip),%rcx
6c1c(3): mov %rax,%r12
6c1f(3): mov %rbp,%r9
6c22(3): mov %rbx,%r8
6c25(3): mov %rax,%rdi
6c28(3): mov %r12,%rbx
6c2b(7): mov $0xffffffff,%rdx
6c32(5): mov $0x1,%esi
6c37(2): xor %eax,%eax
6c39(5): call 0xffffb6b7(%rip)
6c3e(3): mov %rbx,%rax
6c41(1): pop %rbx
6c42(1): pop %rbp
6c43(2): pop %r12
6c45(1): ret near (%rsp)

"proper_name_utf8" :
6c50(2): push %r15
6c52(2): push %r14
6c54(5): mov $0x5,%edx
6c59(2): push %r13
6c5b(2): push %r12
6c5d(3): mov %rdi,%r13
6c60(1): push %rbp
6c61(1): push %rbx
6c62(3): mov %rsi,%rbp
6c65(3): mov %rdi,%rsi
6c68(2): xor %edi,%edi
6c6a(4): sub $0x18,%rsp
6c6e(5): call 0xffffb272(%rip)
6c73(3): mov %rax,%r14
6c76(5): call 0x353a(%rip)
6c7b(7): lea 0x943e(%rip),%rsi
6c82(3): mov %rax,%rdi
6c85(3): mov %rax,%r12
6c88(5): call 0x33f8(%rip)
6c8d(2): test %eax,%eax
6c8f(6): jnz 0xe9(%rip)
6c95(3): test %rbp,%rbp
6c98(2): jz 0x58(%rip)
6c9a(5): mov %rbp,0x8(%rsp)
6c9f(3): mov %rbp,%rbx
6ca2(3): xor %r12d,%r12d
6ca5(3): xor %r15d,%r15d
6ca8(3): mov %r13,%rsi
6cab(3): mov %r14,%rdi
6cae(5): call 0xffffb3c2(%rip)
6cb3(2): test %eax,%eax
6cb5(2): jnz 0x5c(%rip)
6cb7(3): test %r15,%r15
6cba(2): jz 0xf(%rip)
6cbc(3): cmp %r15,%rbx
6cbf(2): jz 0xa(%rip)
6cc1(3): mov %r15,%rdi
6cc4(5): call 0xffffb10c(%rip)
6cc9(3): test %r12,%r12
6ccc(2): jz 0xf(%rip)
6cce(3): cmp %r12,%rbx
6cd1(2): jz 0xa(%rip)
6cd3(3): mov %r12,%rdi
6cd6(5): call 0xffffb0fa(%rip)
6cdb(4): add $0x18,%rsp
6cdf(3): mov %rbx,%rax
6ce2(1): pop %rbx
6ce3(1): pop %rbp
6ce4(2): pop %r12
6ce6(2): pop %r13
6ce8(2): pop %r14
6cea(2): pop %r15
6cec(1): ret near (%rsp)
6ced(3): nop (%rax)
6cf0(3): mov %r13,%rsi
6cf3(3): mov %r14,%rdi
6cf6(9): mov $0x0,0x8(%rsp)
6cff(3): xor %r12d,%r12d
6d02(3): xor %r15d,%r15d
6d05(3): mov %r13,%rbx
6d08(5): call 0xffffb368(%rip)
6d0d(2): test %eax,%eax
6d0f(2): jz 0xffffffa8(%rip)
6d11(3): mov %r13,%rsi
6d14(3): mov %r14,%rdi
6d17(5): call 0xfffff539(%rip)
6d1c(2): test %al,%al
6d1e(2): jnz 0x3a(%rip)
6d20(3): test %rbp,%rbp
6d23(2): jz 0x11(%rip)
6d25(3): mov %rbp,%rsi
6d28(3): mov %r14,%rdi
6d2b(5): call 0xfffff525(%rip)
6d30(2): test %al,%al
6d32(2): jnz 0x26(%rip)
6d34(6): cmp $0x0,0x8(%rsp)
6d3a(6): jz 0x176(%rip)
6d40(5): mov 0x8(%rsp),%rsi
6d45(3): mov %r14,%rdi
6d48(5): call 0xfffff508(%rip)
6d4d(2): test %al,%al
6d4f(6): jz 0x161(%rip)
6d55(3): nop (%rax)
6d58(3): test %r15,%r15
6d5b(6): jnz 0xf5(%rip)
6d61(3): test %r12,%r12
6d64(3): mov %r14,%rbx
6d67(6): jnz 0xffffff6c(%rip)
6d6d(5): jmp 0xffffff6e(%rip)
6d72(6): nop 0x0(%rax,%rax,1)
6d78(7): lea 0x9341(%rip),%rsi
6d7f(3): mov %r12,%rdx
6d82(3): mov %rbp,%rdi
6d85(5): call 0x323b(%rip)
6d8a(3): mov %r12,%rdi
6d8d(3): mov %rax,%rbx
6d90(5): call 0xffffb170(%rip)
6d95(4): lea 0xb(%rax),%rdi
6d99(3): mov %rax,%r15
6d9c(5): call 0x2f44(%rip)
6da1(3): mov %r15,%rdx
6da4(3): mov %r12,%rsi
6da7(3): mov %rax,%rdi
6daa(5): call 0xffffb2f6(%rip)
6daf(3): mov %rax,%rcx
6db2(3): add %rax,%r15
6db5(a): mov $0x5499825612410597167,%rax
6dbf(3): mov %rax,(%r15)
6dc2(7): lea 0x92f7(%rip),%rsi
6dc9(5): mov $0x5449,%eax
6dce(3): mov %rcx,%rdx
6dd1(3): mov %rbp,%rdi
6dd4(5): mov %ax,0x8(%r15)
6dd9(5): mov $0x0,0xa(%r15)
6dde(5): mov %rcx,0x8(%rsp)
6de3(5): call 0x31dd(%rip)
6de8(5): mov 0x8(%rsp),%rcx
6ded(3): mov %rax,%r12
6df0(3): mov %rcx,%rdi
6df3(5): call 0xffffafdd(%rip)
6df8(3): test %r12,%r12
6dfb(2): jz 0x1c(%rip)
6dfd(5): mov $0x3f,%esi
6e02(3): mov %r12,%rdi
6e05(5): call 0xffffb16b(%rip)
6e0a(3): test %rax,%rax
6e0d(2): jz 0x63(%rip)
6e0f(3): mov %r12,%rdi
6e12(5): call 0xffffafbe(%rip)
6e17(3): test %rbx,%rbx
6e1a(2): jz 0x76(%rip)
6e1c(3): mov %r13,%rsi
6e1f(3): mov %r14,%rdi
6e22(5): call 0xffffb24e(%rip)
6e27(2): test %eax,%eax
6e29(6): jz 0xfffffeb2(%rip)
6e2f(3): mov %r13,%rsi
6e32(3): mov %r14,%rdi
6e35(5): call 0xfffff41b(%rip)
6e3a(2): test %al,%al
6e3c(6): jz 0xdc(%rip)
6e42(3): mov %rbx,%r15
6e45(3): xor %r12d,%r12d
6e48(8): nop 0x0(%rax,%rax,1)
6e50(3): mov %r15,%rdi
6e53(3): mov %r14,%rbx
6e56(5): call 0xffffaf7a(%rip)
6e5b(3): test %r12,%r12
6e5e(6): jnz 0xfffffe75(%rip)
6e64(5): jmp 0xfffffe77(%rip)
6e69(7): nop 0x0(%rax)
6e70(3): test %rbx,%rbx
6e73(5): mov %r12,0x8(%rsp)
6e78(6): jz 0xb8(%rip)
6e7e(3): mov %rbx,%rbp
6e81(3): mov %rbx,%r15
6e84(5): jmp 0xfffffe24(%rip)
6e89(7): nop 0x0(%rax)
6e90(3): mov %r13,%rbx
6e93(9): mov $0x0,0x8(%rsp)
6e9c(2): xor %ebp,%ebp
6e9e(3): xor %r12d,%r12d
6ea1(3): xor %r15d,%r15d
6ea4(5): jmp 0xfffffe04(%rip)
6ea9(7): nop 0x0(%rax)
6eb0(3): mov %r14,%rdi
6eb3(5): call 0xffffb04d(%rip)
6eb8(3): mov %rbx,%rdi
6ebb(3): mov %rax,%rbp
6ebe(5): call 0xffffb042(%rip)
6ec3(5): lea 0x4(%rbp,%rax,1),%rdi
6ec8(5): call 0x2e18(%rip)
6ecd(7): lea 0x91e4(%rip),%rcx
6ed4(3): mov %rax,%rdi
6ed7(3): mov %rax,%rbp
6eda(3): mov %rbx,%r9
6edd(2): xor %eax,%eax
6edf(3): mov %r14,%r8
6ee2(7): mov $0xffffffff,%rdx
6ee9(5): mov $0x1,%esi
6eee(5): call 0xffffb402(%rip)
6ef3(3): test %r15,%r15
6ef6(2): jz 0xa(%rip)
6ef8(3): mov %r15,%rdi
6efb(5): call 0xffffaed5(%rip)
6f00(3): test %r12,%r12
6f03(3): mov %rbp,%rbx
6f06(6): jnz 0xfffffdcd(%rip)
6f0c(5): jmp 0xfffffdcf(%rip)
6f11(7): nop 0x0(%rax)
6f18(3): mov %rbx,%rbp
6f1b(3): mov %rbx,%r15
6f1e(9): mov $0x0,0x8(%rsp)
6f27(3): xor %r12d,%r12d
6f2a(5): jmp 0xfffffdf6(%rip)
6f2f(1): nop 
6f30(2): xor %ebp,%ebp
6f32(3): xor %r15d,%r15d
6f35(3): mov %r12,%rbx
6f38(5): jmp 0xfffffd70(%rip)

"gettext_quote.part.1" :
6f40(1): push %rbp
6f41(1): push %rbx
6f42(3): mov %rdi,%rbp
6f45(2): mov %esi,%ebx
6f47(4): sub $0x8,%rsp
6f4b(5): call 0x3265(%rip)
6f50(3): movzx (%rax),%edx
6f53(3): and $0xdf,%edx
6f56(3): cmp $0x55,%dl
6f59(2): jz 0x77(%rip)
6f5b(3): cmp $0x47,%dl
6f5e(2): jz 0x22(%rip)
6f60(7): lea 0x918b(%rip),%rax
6f67(7): lea 0x9148(%rip),%rdx
6f6e(3): cmp $0x9,%ebx
6f71(4): cmovne %rdx,%rax
6f75(4): add $0x8,%rsp
6f79(1): pop %rbx
6f7a(1): pop %rbp
6f7b(1): ret near (%rsp)
6f7c(4): nop 0x0(%rax)
6f80(4): movzx 0x1(%rax),%edx
6f84(3): and $0xdf,%edx
6f87(3): cmp $0x42,%dl
6f8a(2): jnz 0xffffffd6(%rip)
6f8c(4): cmp $0x31,0x2(%rax)
6f90(2): jnz 0xffffffd0(%rip)
6f92(4): cmp $0x38,0x3(%rax)
6f96(2): jnz 0xffffffca(%rip)
6f98(4): cmp $0x30,0x4(%rax)
6f9c(2): jnz 0xffffffc4(%rip)
6f9e(4): cmp $0x33,0x5(%rax)
6fa2(2): jnz 0xffffffbe(%rip)
6fa4(4): cmp $0x30,0x6(%rax)
6fa8(2): jnz 0xffffffb8(%rip)
6faa(4): cmp $0x0,0x7(%rax)
6fae(2): jnz 0xffffffb2(%rip)
6fb0(4): cmp $0x60,0x0(%rbp)
6fb4(7): lea 0x9130(%rip),%rax
6fbb(7): lea 0x912d(%rip),%rdx
6fc2(4): cmovne %rdx,%rax
6fc6(4): add $0x8,%rsp
6fca(1): pop %rbx
6fcb(1): pop %rbp
6fcc(1): ret near (%rsp)
6fcd(3): nop (%rax)
6fd0(4): movzx 0x1(%rax),%edx
6fd4(3): and $0xdf,%edx
6fd7(3): cmp $0x54,%dl
6fda(2): jnz 0xffffff86(%rip)
6fdc(4): movzx 0x2(%rax),%edx
6fe0(3): and $0xdf,%edx
6fe3(3): cmp $0x46,%dl
6fe6(6): jnz 0xffffff7a(%rip)
6fec(4): cmp $0x2d,0x3(%rax)
6ff0(6): jnz 0xffffff70(%rip)
6ff6(4): cmp $0x38,0x4(%rax)
6ffa(6): jnz 0xffffff66(%rip)
7000(4): cmp $0x0,0x5(%rax)
7004(6): jnz 0xffffff5c(%rip)
700a(4): cmp $0x60,0x0(%rbp)
700e(7): lea 0x90ce(%rip),%rax
7015(7): lea 0x90cb(%rip),%rdx
701c(4): cmovne %rdx,%rax
7020(4): add $0x8,%rsp
7024(1): pop %rbx
7025(1): pop %rbp
7026(1): ret near (%rsp)

"quotearg_buffer_restyled" :
7030(2): push %r15
7032(2): push %r14
7034(3): mov %r8d,%r15d
7037(2): push %r13
7039(2): push %r12
703b(3): mov %rdi,%r14
703e(1): push %rbp
703f(1): push %rbx
7040(3): mov %r9d,%ebx
7043(3): mov %rsi,%r13
7046(3): mov %rcx,%rbp
7049(3): and $0x2,%ebx
704c(7): sub $0xb8,%rsp
7053(8): mov 0xf0(%rsp),%rax
705b(5): mov %rdx,0x10(%rsp)
7060(5): mov %r8d,0x8(%rsp)
7065(5): mov %r9d,0x78(%rsp)
706a(5): mov %rax,0x20(%rsp)
706f(8): mov 0xf8(%rsp),%rax
7077(5): mov %rax,0x68(%rsp)
707c(8): mov 0x100(%rsp),%rax
7084(5): mov %rax,0x60(%rsp)
7089(9): mov $0x28,%rax
7092(8): mov %rax,0xa8(%rsp)
709a(2): xor %eax,%eax
709c(5): call 0xffffae54(%rip)
70a1(4): cmp $0xa,%r15d
70a5(5): mov %rax,0x58(%rsp)
70aa(6): jnbe 0x11b5(%rip)
70b0(7): lea 0x90a9(%rip),%rcx
70b7(3): mov %r15d,%edx
70ba(4): movsxd 0x0(%rcx,%rdx,4),%rax
70be(3): add %rcx,%rax
70c1(2): jmp %rax
70c3(5): mov $0x1,0xe(%rsp)
70c8(5): mov $0x0,0x7c(%rsp)
70cd(3): xor %r12d,%r12d
70d0(9): mov $0x0,0x50(%rsp)
70d9(5): mov $0x1,0xf(%rsp)
70de(5): mov $0x0,0xd(%rsp)
70e3(7): lea 0x8fcc(%rip),%rax
70ea(9): mov $0x1,0x18(%rsp)
70f3(3): xor %r15d,%r15d
70f6(8): mov $0x2,0x8(%rsp)
70fe(5): mov %rax,0x48(%rsp)
7103(3): xor %r11d,%r11d
7106(3): mov %rbp,%rax
7109(3): mov %r12d,%r8d
710c(3): mov %r11,%rbp
710f(3): mov %rax,%r11
7112(6): nop 0x0(%rax,%rax,1)
7118(3): cmp %rbp,%r11
711b(4): setnz %r12b
711f(4): cmp $0xffffffff,%r11
7123(2): jnz 0xf(%rip)
7125(5): mov 0x10(%rsp),%rax
712a(4): cmp $0x0,0x0(%rax,%rbp,1)
712e(4): setnz %r12b
7132(3): test %r12b,%r12b
7135(6): jz 0x65b(%rip)
713b(5): cmp $0x2,0x8(%rsp)
7140(5): mov 0x10(%rsp),%rdi
7145(4): lea 0x0(%rdi,%rbp,1),%r9
7149(3): setnz %al
714c(4): and 0xd(%rsp),%al
7150(3): mov %eax,%r10d
7153(6): jz 0xad(%rip)
7159(5): mov 0x18(%rsp),%rax
715e(3): test %rax,%rax
7161(6): jz 0x42f(%rip)
7167(4): cmp $0xffffffff,%r11
716b(5): lea 0x0(%rbp,%rax,1),%rbx
7170(2): jnz 0x30(%rip)
7172(4): cmp $0x1,%rax
7176(2): jbe 0x2a(%rip)
7178(5): mov %r8b,0x38(%rsp)
717d(5): mov %r10b,0x30(%rsp)
7182(5): mov %r9,0x28(%rsp)
7187(5): call 0xffffad79(%rip)
718c(6): movzx 0x38(%rsp),%r8d
7192(6): movzx 0x30(%rsp),%r10d
7198(3): mov %rax,%r11
719b(5): mov 0x28(%rsp),%r9
71a0(3): cmp %r11,%rbx
71a3(5): mov %r10b,0x28(%rsp)
71a8(6): jnbe 0x5b8(%rip)
71ae(5): mov 0x18(%rsp),%rdx
71b3(5): mov 0x48(%rsp),%rsi
71b8(3): mov %r9,%rdi
71bb(5): mov %r11,0x40(%rsp)
71c0(5): mov %r8b,0x38(%rsp)
71c5(5): mov %r9,0x30(%rsp)
71ca(5): call 0xffffae66(%rip)
71cf(2): test %eax,%eax
71d1(5): mov 0x30(%rsp),%r9
71d6(6): movzx 0x38(%rsp),%r8d
71dc(5): mov 0x40(%rsp),%r11
71e1(6): jnz 0x57f(%rip)
71e7(5): cmp $0x0,0xf(%rsp)
71ec(6): movzx 0x28(%rsp),%r10d
71f2(6): jnz 0xf83(%rip)
71f8(8): nop 0x0(%rax,%rax,1)
7200(4): movzx (%r9),%ebx
7204(3): cmp $0x7e,%bl
7207(6): jnbe 0x321(%rip)
720d(7): lea 0x8f78(%rip),%rcx
7214(3): movzx %bl,%edx
7217(4): movsxd 0x0(%rcx,%rdx,4),%rax
721b(3): add %rcx,%rax
721e(2): jmp %rax
7220(3): xor %r10d,%r10d
7223(4): cmp $0x1,%r11
7227(3): setnz %al
722a(4): cmp $0xffffffff,%r11
722e(2): jnz 0xe(%rip)
7230(5): mov 0x10(%rsp),%rax
7235(4): cmp $0x0,0x1(%rax)
7239(3): setnz %al
723c(5): cmp $0x2,0x8(%rsp)
7241(3): setz %dl
7244(2): test %al,%al
7246(6): jz 0x252(%rip)
724c(3): xor %r12d,%r12d
724f(2): xor %eax,%eax
7251(7): nop 0x0(%rax)
7258(5): cmp $0x1,0xd(%rsp)
725d(6): jnz 0x115(%rip)
7263(2): test %dl,%dl
7265(6): jnz 0x10d(%rip)
726b(5): mov 0x20(%rsp),%rsi
7270(3): test %rsi,%rsi
7273(2): jz 0x16(%rip)
7275(2): mov %ebx,%edx
7277(3): shr $0x5,%dl
727a(3): movzx %dl,%edx
727d(3): mov 0x0(%rsi,%rdx,4),%edx
7280(3): bt %ebx,%edx
7283(6): jb 0x150(%rip)
7289(3): test %r10b,%r10b
728c(6): jnz 0x147(%rip)
7292(3): xor $0x1,%eax
7295(4): add $0x1,%rbp
7299(3): and %r8d,%eax
729c(2): test %al,%al
729e(2): jz 0x22(%rip)
72a0(3): cmp %r15,%r13
72a3(2): jbe 0x7(%rip)
72a5(5): mov $0x27,0x0(%r14,%r15,1)
72aa(4): lea 0x1(%r15),%rax
72ae(3): cmp %rax,%r13
72b1(2): jbe 0x8(%rip)
72b3(6): mov $0x27,0x1(%r14,%r15,1)
72b9(4): add $0x2,%r15
72bd(3): xor %r8d,%r8d
72c0(3): cmp %r13,%r15
72c3(2): jnb 0x6(%rip)
72c5(4): mov %bl,0x0(%r14,%r15,1)
72c9(5): movzx 0xe(%rsp),%edi
72ce(4): add $0x1,%r15
72d2(5): mov $0x0,%eax
72d7(3): test %r12b,%r12b
72da(3): cmove %eax,%edi
72dd(5): mov %dil,0xe(%rsp)
72e2(5): jmp 0xfffffe36(%rip)
72e7(9): nop 0x0(%rax,%rax,1)
72f0(3): xor %r10d,%r10d
72f3(4): mov 0x8(%rsp),%eax
72f7(3): cmp $0x2,%eax
72fa(6): jz 0x5be(%rip)
7300(3): cmp $0x5,%eax
7303(6): jz 0x575(%rip)
7309(3): cmp $0x2,%eax
730c(5): mov $0x3f,%ebx
7311(3): setz %dl
7314(3): xor %r12d,%r12d
7317(2): xor %eax,%eax
7319(5): jmp 0xffffff3f(%rip)
731e(2): nop 
7320(3): xor %r10d,%r10d
7323(5): cmp $0x2,0x8(%rsp)
7328(6): jz 0x508(%rip)
732e(5): mov %r12b,0x7c(%rsp)
7333(2): xor %edx,%edx
7335(2): xor %eax,%eax
7337(5): mov $0x27,%ebx
733c(5): jmp 0xffffff1c(%rip)
7341(7): nop 0x0(%rax)
7348(5): mov $0x9,%edx
734d(5): mov $0x74,%ebx
7352(5): cmp $0x2,0x8(%rsp)
7357(3): setz %al
735a(4): and 0xf(%rsp),%al
735e(6): jnz 0x150(%rip)
7364(5): cmp $0x0,0xd(%rsp)
7369(2): jnz 0x67(%rip)
736b(2): mov %edx,%ebx
736d(3): xor %r12d,%r12d
7370(2): xor %eax,%eax
7372(5): cmp $0x0,0xf(%rsp)
7377(6): jnz 0xfffffef4(%rip)
737d(5): jmp 0xffffff0c(%rip)
7382(6): nop 0x0(%rax,%rax,1)
7388(5): mov $0x8,%edx
738d(5): mov $0x62,%ebx
7392(2): jmp 0xffffffd2(%rip)
7394(4): nop 0x0(%rax)
7398(5): cmp $0x2,0x8(%rsp)
739d(6): jz 0x3d3(%rip)
73a3(5): cmp $0x0,0xd(%rsp)
73a8(6): jz 0x218(%rip)
73ae(5): cmp $0x0,0xf(%rsp)
73b3(6): jz 0x20d(%rip)
73b9(6): cmp $0x0,0x18(%rsp)
73bf(6): jnz 0x3bc(%rip)
73c5(5): mov $0x5c,%ebx
73ca(6): nop 0x0(%rax,%rax,1)
73d0(3): xor %r12d,%r12d
73d3(5): cmp $0x2,0x8(%rsp)
73d8(3): setz %dl
73db(5): cmp $0x0,0xf(%rsp)
73e0(2): mov %edx,%eax
73e2(6): jnz 0x856(%rip)
73e8(3): mov %r8d,%eax
73eb(3): xor $0x1,%eax
73ee(2): and %dl,%al
73f0(2): jz 0x31(%rip)
73f2(3): cmp %r15,%r13
73f5(2): jbe 0x7(%rip)
73f7(5): mov $0x27,0x0(%r14,%r15,1)
73fc(4): lea 0x1(%r15),%rdx
7400(3): cmp %rdx,%r13
7403(2): jbe 0x8(%rip)
7405(6): mov $0x24,0x1(%r14,%r15,1)
740b(4): lea 0x2(%r15),%rdx
740f(3): cmp %rdx,%r13
7412(2): jbe 0x8(%rip)
7414(6): mov $0x27,0x2(%r14,%r15,1)
741a(4): add $0x3,%r15
741e(3): mov %eax,%r8d
7421(3): cmp %r15,%r13
7424(2): jbe 0x7(%rip)
7426(5): mov $0x5c,0x0(%r14,%r15,1)
742b(4): add $0x1,%r15
742f(4): add $0x1,%rbp
7433(5): jmp 0xfffffe8d(%rip)
7438(8): nop 0x0(%rax,%rax,1)
7440(5): cmp $0x0,0xd(%rsp)
7445(6): jnz 0x1ce(%rip)
744b(2): xor %edx,%edx
744d(5): test $0x1,0x78(%rsp)
7452(6): jz 0xffffff19(%rip)
7458(4): add $0x1,%rbp
745c(5): jmp 0xfffffcbc(%rip)
7461(7): nop 0x0(%rax)
7468(5): cmp $0x2,0x8(%rsp)
746d(3): setz %dl
7470(2): xor %eax,%eax
7472(5): jmp 0xfffffde6(%rip)
7477(9): nop 0x0(%rax,%rax,1)
7480(5): mov $0x7,%edx
7485(5): mov $0x61,%ebx
748a(5): jmp 0xfffffeda(%rip)
748f(1): nop 
7490(5): cmp $0x2,0x8(%rsp)
7495(3): setz %dl
7498(3): test %rbp,%rbp
749b(6): jnz 0xfffffdb1(%rip)
74a1(5): movzx 0xf(%rsp),%eax
74a6(2): and %dl,%al
74a8(6): jz 0xfffffdb0(%rip)
74ae(3): mov %r11,%rbp
74b1(8): mov $0x2,0x8(%rsp)
74b9(5): jmp 0x700(%rip)
74be(2): nop 
74c0(5): cmp $0x2,0x8(%rsp)
74c5(3): setz %dl
74c8(3): xor %r12d,%r12d
74cb(2): jmp 0xffffffd6(%rip)
74cd(3): nop (%rax)
74d0(5): cmp $0x2,0x8(%rsp)
74d5(5): mov $0x20,%ebx
74da(3): setz %dl
74dd(2): jmp 0xffffffc4(%rip)
74df(1): nop 
74e0(5): mov $0xd,%edx
74e5(5): mov $0x72,%ebx
74ea(5): jmp 0xfffffe68(%rip)
74ef(1): nop 
74f0(5): mov $0xc,%edx
74f5(5): mov $0x66,%ebx
74fa(5): jmp 0xfffffe6a(%rip)
74ff(1): nop 
7500(5): mov $0xb,%edx
7505(5): mov $0x76,%ebx
750a(5): jmp 0xfffffe5a(%rip)
750f(1): nop 
7510(5): mov $0xa,%edx
7515(5): mov $0x6e,%ebx
751a(5): jmp 0xfffffe38(%rip)
751f(1): nop 
7520(3): xor %r10d,%r10d
7523(5): nop 0x0(%rax,%rax,1)
7528(6): cmp $0x1,0x58(%rsp)
752e(6): jnz 0x3aa(%rip)
7534(5): mov %r11,0x38(%rsp)
7539(5): mov %r8b,0x30(%rsp)
753e(5): mov %r10b,0x28(%rsp)
7543(5): call 0xffffad8d(%rip)
7548(3): mov (%rax),%rcx
754b(3): movzx %bl,%edx
754e(6): movzx 0x28(%rsp),%r10d
7554(6): movzx 0x30(%rsp),%r8d
755a(5): mov 0x38(%rsp),%r11
755f(5): mov $0x1,%edi
7564(4): movzx 0x0(%rcx,%rdx,2),%eax
7568(4): and $0x4000,%ax
756c(4): setnz %r12b
7570(3): setz %al
7573(4): and 0xd(%rsp),%al
7577(2): test %al,%al
7579(6): jnz 0x998(%rip)
757f(5): cmp $0x2,0x8(%rsp)
7584(3): setz %dl
7587(5): jmp 0xfffffcd1(%rip)
758c(4): nop 0x0(%rax)
7590(4): movzx (%r9),%ebx
7594(3): cmp $0x7e,%bl
7597(2): jnbe 0xffffff89(%rip)
7599(7): lea 0x8de8(%rip),%rcx
75a0(3): movzx %bl,%edx
75a3(4): movsxd 0x0(%rcx,%rdx,4),%rax
75a7(3): add %rcx,%rax
75aa(2): jmp %rax
75ac(4): nop 0x0(%rax)
75b0(3): xor %r10d,%r10d
75b3(5): cmp $0x0,0xd(%rsp)
75b8(6): jnz 0xfffffdf6(%rip)
75be(2): nop 
75c0(5): mov $0x5c,%edx
75c5(5): mov $0x5c,%ebx
75ca(5): jmp 0xfffffd9a(%rip)
75cf(1): nop 
75d0(5): mov $0xc,%edx
75d5(3): xor %r10d,%r10d
75d8(5): mov $0x66,%ebx
75dd(5): jmp 0xfffffd87(%rip)
75e2(6): nop 0x0(%rax,%rax,1)
75e8(5): mov $0xa,%edx
75ed(3): xor %r10d,%r10d
75f0(5): mov $0x6e,%ebx
75f5(5): jmp 0xfffffd5d(%rip)
75fa(6): nop 0x0(%rax,%rax,1)
7600(5): mov $0x61,%ebx
7605(5): jmp 0xfffffdcb(%rip)
760a(6): nop 0x0(%rax,%rax,1)
7610(3): xor %r10d,%r10d
7613(5): cmp $0x2,0x8(%rsp)
7618(3): setz %dl
761b(5): cmp $0x0,0xf(%rsp)
7620(6): jnz 0xb9a(%rip)
7626(3): mov %r8d,%eax
7629(3): mov %r15,%rcx
762c(3): xor $0x1,%eax
762f(2): and %dl,%al
7631(2): jz 0x2f(%rip)
7633(3): cmp %r15,%r13
7636(2): jbe 0x7(%rip)
7638(5): mov $0x27,0x0(%r14,%r15,1)
763d(4): lea 0x1(%r15),%rcx
7641(3): cmp %rcx,%r13
7644(2): jbe 0x8(%rip)
7646(6): mov $0x24,0x1(%r14,%r15,1)
764c(4): lea 0x2(%r15),%rcx
7650(3): cmp %rcx,%r13
7653(6): jnbe 0x636(%rip)
7659(4): lea 0x3(%r15),%rcx
765d(3): mov %eax,%r8d
7660(3): cmp %rcx,%r13
7663(2): jbe 0x7(%rip)
7665(5): mov $0x5c,0x0(%r14,%rcx,1)
766a(5): cmp $0x2,0x8(%rsp)
766f(4): lea 0x1(%rcx),%r15
7673(6): jz 0x606(%rip)
7679(4): lea 0x1(%rbp),%rax
767d(3): cmp %r11,%rax
7680(2): jnb 0x1b(%rip)
7682(5): mov 0x10(%rsp),%rax
7687(5): movzx 0x1(%rax,%rbp,1),%eax
768c(4): mov %al,0x28(%rsp)
7690(3): sub $0x30,%eax
7693(2): cmp $0x9,%al
7695(6): jbe 0x834(%rip)
769b(3): mov %r12d,%eax
769e(5): mov $0x30,%ebx
76a3(3): xor %r12d,%r12d
76a6(5): jmp 0xfffffbb2(%rip)
76ab(5): nop 0x0(%rax,%rax,1)
76b0(5): cmp $0x2,0x8(%rsp)
76b5(3): mov %r10d,%r12d
76b8(3): setz %dl
76bb(3): xor %r10d,%r10d
76be(2): xor %eax,%eax
76c0(5): jmp 0xfffffb98(%rip)
76c5(3): nop (%rax)
76c8(5): cmp $0x2,0x8(%rsp)
76cd(3): setz %dl
76d0(3): xor %r10d,%r10d
76d3(5): jmp 0xfffffdc5(%rip)
76d8(8): nop 0x0(%rax,%rax,1)
76e0(5): cmp $0x2,0x8(%rsp)
76e5(3): setz %dl
76e8(3): xor %r10d,%r10d
76eb(3): xor %r12d,%r12d
76ee(5): jmp 0xfffffdb3(%rip)
76f3(5): nop 0x0(%rax,%rax,1)
76f8(5): cmp $0x2,0x8(%rsp)
76fd(3): mov %r10d,%r12d
7700(5): mov $0x20,%ebx
7705(3): setz %dl
7708(3): xor %r10d,%r10d
770b(5): jmp 0xfffffd96(%rip)
7710(5): mov $0xd,%edx
7715(3): xor %r10d,%r10d
7718(5): mov $0x72,%ebx
771d(5): jmp 0xfffffc35(%rip)
7722(6): nop 0x0(%rax,%rax,1)
7728(5): mov $0x76,%ebx
772d(5): jmp 0xfffffca3(%rip)
7732(6): nop 0x0(%rax,%rax,1)
7738(5): mov $0x9,%edx
773d(3): xor %r10d,%r10d
7740(5): mov $0x74,%ebx
7745(5): jmp 0xfffffc0d(%rip)
774a(6): nop 0x0(%rax,%rax,1)
7750(5): mov $0x62,%ebx
7755(5): jmp 0xfffffc7b(%rip)
775a(6): nop 0x0(%rax,%rax,1)
7760(3): xor %r10d,%r10d
7763(5): jmp 0xfffffa9d(%rip)
7768(8): nop 0x0(%rax,%rax,1)
7770(5): cmp $0x0,0xf(%rsp)
7775(6): jnz 0x96b(%rip)
777b(4): add $0x1,%rbp
777f(3): mov %r8d,%eax
7782(3): xor %r12d,%r12d
7785(5): mov $0x5c,%ebx
778a(5): jmp 0xfffffb12(%rip)
778f(1): nop 
7790(5): cmp $0x2,0x8(%rsp)
7795(5): movzx 0xf(%rsp),%ebx
779a(3): mov %r8d,%r12d
779d(3): mov %r11,%rbp
77a0(3): setz %dl
77a3(2): mov %ebx,%eax
77a5(3): test %r15,%r15
77a8(3): setz %cl
77ab(2): and %edx,%eax
77ad(2): and %cl,%al
77af(6): jnz 0xa67(%rip)
77b5(2): mov %ebx,%eax
77b7(3): xor $0x1,%eax
77ba(2): and %al,%dl
77bc(6): jz 0x970(%rip)
77c2(5): cmp $0x0,0x7c(%rsp)
77c7(6): jz 0x963(%rip)
77cd(5): cmp $0x0,0xe(%rsp)
77d2(6): jnz 0x9fb(%rip)
77d8(3): test %r13,%r13
77db(3): setz %al
77de(6): cmp $0x0,0x50(%rsp)
77e4(3): setnz %dl
77e7(2): and %dl,%al
77e9(6): jz 0xa23(%rip)
77ef(5): mov 0x50(%rsp),%r13
77f4(7): lea 0x88bb(%rip),%rbx
77fb(4): mov $0x27,(%r14)
77ff(8): mov $0x2,0x8(%rsp)
7807(6): mov $0x1,%r15d
780d(9): mov $0x1,0x18(%rsp)
7816(5): mov $0x0,0xf(%rsp)
781b(5): mov %rbx,0x48(%rsp)
7820(4): mov %al,0x7c(%rsp)
7824(5): jmp 0xfffff8df(%rip)
7829(7): nop 0x0(%rax)
7830(5): cmp $0x0,0xf(%rsp)
7835(6): jnz 0x8ab(%rip)
783b(3): test %r13,%r13
783e(6): jz 0x402(%rip)
7844(2): xor %edx,%edx
7846(6): cmp $0x0,0x50(%rsp)
784c(6): jnz 0x3f4(%rip)
7852(5): mov %r13,0x50(%rsp)
7857(4): add $0x3,%r15
785b(2): xor %eax,%eax
785d(5): mov %r12b,0x7c(%rsp)
7862(3): xor %r8d,%r8d
7865(3): mov %rdx,%r13
7868(5): mov $0x27,%ebx
786d(5): jmp 0xfffffa1c(%rip)
7872(6): nop 0x0(%rax,%rax,1)
7878(5): test $0x4,0x78(%rsp)
787d(2): jz 0x23(%rip)
787f(4): lea 0x2(%rbp),%rcx
7883(3): cmp %r11,%rcx
7886(2): jnb 0x1a(%rip)
7888(5): mov 0x10(%rsp),%rax
788d(5): cmp $0x3f,0x1(%rax,%rbp,1)
7892(6): jz 0x790(%rip)
7898(8): nop 0x0(%rax,%rax,1)
78a0(2): xor %edx,%edx
78a2(3): xor %r12d,%r12d
78a5(2): xor %eax,%eax
78a7(5): mov $0x3f,%ebx
78ac(5): jmp 0xfffff9ac(%rip)
78b1(7): nop 0x0(%rax)
78b8(5): cmp $0x0,0xf(%rsp)
78bd(6): jnz 0x823(%rip)
78c3(3): xor %r12d,%r12d
78c6(2): xor %eax,%eax
78c8(5): mov $0x3f,%ebx
78cd(5): jmp 0xfffff9bc(%rip)
78d2(6): nop 0x0(%rax,%rax,1)
78d8(8): lea 0xa0(%rsp),%rax
78e0(4): cmp $0xffffffff,%r11
78e4(c): mov $0x0,0xa0(%rsp)
78f0(5): mov %rax,0x28(%rsp)
78f5(2): jnz 0x2f(%rip)
78f7(5): mov 0x10(%rsp),%rdi
78fc(5): mov %r8b,0x40(%rsp)
7901(5): mov %r10b,0x38(%rsp)
7906(5): mov %r9,0x30(%rsp)
790b(5): call 0xffffa5f5(%rip)
7910(6): movzx 0x40(%rsp),%r8d
7916(6): movzx 0x38(%rsp),%r10d
791c(3): mov %rax,%r11
791f(5): mov 0x30(%rsp),%r9
7924(8): lea 0x9c(%rsp),%rax
792c(2): xor %ecx,%ecx
792e(4): mov %bl,0x7e(%rsp)
7932(5): mov %r8b,0x7d(%rsp)
7937(3): mov %rcx,%rbx
793a(8): mov %r9,0x88(%rsp)
7942(5): mov %rax,0x38(%rsp)
7947(5): mov %r10b,0x7f(%rsp)
794c(8): mov %r15,0x80(%rsp)
7954(5): mov %r14,0x40(%rsp)
7959(5): mov %r13,0x70(%rsp)
795e(5): mov %r11,0x30(%rsp)
7963(5): mov 0x10(%rsp),%rax
7968(5): lea 0x0(%rbp,%rbx,1),%r14
796d(5): mov 0x30(%rsp),%rdx
7972(5): mov 0x28(%rsp),%rcx
7977(5): mov 0x38(%rsp),%rdi
797c(4): lea 0x0(%rax,%r14,1),%r13
7980(3): sub %r14,%rdx
7983(3): mov %r13,%rsi
7986(5): call 0x266a(%rip)
798b(3): test %rax,%rax
798e(3): mov %rax,%r15
7991(2): jz 0x50(%rip)
7993(4): cmp $0xffffffff,%rax
7997(6): jz 0x61e(%rip)
799d(4): cmp $0xfffffffe,%rax
79a1(6): jz 0x5a0(%rip)
79a7(5): cmp $0x2,0x8(%rsp)
79ac(3): setz %al
79af(4): and 0xf(%rsp),%al
79b3(6): jnz 0x19d(%rip)
79b9(7): mov 0x9c(%rsp),%edi
79c0(5): call 0xffffa900(%rip)
79c5(5): mov 0x28(%rsp),%rdi
79ca(2): test %eax,%eax
79cc(5): mov $0x0,%eax
79d1(4): cmove %eax,%r12d
79d5(3): add %r15,%rbx
79d8(5): call 0xffffa8d8(%rip)
79dd(2): test %eax,%eax
79df(2): jz 0xffffff84(%rip)
79e1(3): mov %r12d,%edx
79e4(3): mov %rbx,%rdi
79e7(6): movzx 0x7d(%rsp),%r8d
79ed(3): xor $0x1,%edx
79f0(5): movzx 0x7e(%rsp),%ebx
79f5(6): movzx 0x7f(%rsp),%r10d
79fb(4): and 0xd(%rsp),%dl
79ff(8): mov 0x80(%rsp),%r15
7a07(5): mov 0x40(%rsp),%r14
7a0c(5): mov 0x70(%rsp),%r13
7a11(5): mov 0x30(%rsp),%r11
7a16(4): cmp $0x1,%rdi
7a1a(6): jbe 0x601(%rip)
7a20(3): mov %rdi,%rcx
7a23(2): xor %esi,%esi
7a25(6): movzx 0xf(%rsp),%r9d
7a2b(3): add %rbp,%rcx
7a2e(5): mov 0x10(%rsp),%rdi
7a33(5): jmp 0xbb(%rip)
7a38(8): nop 0x0(%rax,%rax,1)
7a40(5): cmp $0x2,0x8(%rsp)
7a45(3): setz %al
7a48(3): test %r9b,%r9b
7a4b(6): jnz 0x4b5(%rip)
7a51(3): mov %r8d,%esi
7a54(3): xor $0x1,%esi
7a57(3): and %sil,%al
7a5a(2): jz 0x31(%rip)
7a5c(3): cmp %r15,%r13
7a5f(2): jbe 0x7(%rip)
7a61(5): mov $0x27,0x0(%r14,%r15,1)
7a66(4): lea 0x1(%r15),%rsi
7a6a(3): cmp %rsi,%r13
7a6d(2): jbe 0x8(%rip)
7a6f(6): mov $0x24,0x1(%r14,%r15,1)
7a75(4): lea 0x2(%r15),%rsi
7a79(3): cmp %rsi,%r13
7a7c(2): jbe 0x8(%rip)
7a7e(6): mov $0x27,0x2(%r14,%r15,1)
7a84(4): add $0x3,%r15
7a88(3): mov %eax,%r8d
7a8b(3): cmp %r15,%r13
7a8e(2): jbe 0x7(%rip)
7a90(5): mov $0x5c,0x0(%r14,%r15,1)
7a95(4): lea 0x1(%r15),%rax
7a99(3): cmp %rax,%r13
7a9c(2): jbe 0xf(%rip)
7a9e(2): mov %ebx,%eax
7aa0(3): shr $0x6,%al
7aa3(3): add $0x30,%eax
7aa6(5): mov %al,0x1(%r14,%r15,1)
7aab(4): lea 0x2(%r15),%rax
7aaf(3): cmp %rax,%r13
7ab2(2): jbe 0x12(%rip)
7ab4(2): mov %ebx,%eax
7ab6(3): shr $0x3,%al
7ab9(3): and $0x7,%eax
7abc(3): add $0x30,%eax
7abf(5): mov %al,0x2(%r14,%r15,1)
7ac4(3): and $0x7,%ebx
7ac7(4): add $0x1,%rbp
7acb(4): add $0x3,%r15
7acf(3): add $0x30,%ebx
7ad2(3): cmp %rcx,%rbp
7ad5(6): jnb 0xfffff7eb(%rip)
7adb(2): mov %edx,%esi
7add(3): cmp %r15,%r13
7ae0(2): jbe 0x6(%rip)
7ae2(4): mov %bl,0x0(%r14,%r15,1)
7ae6(4): movzx 0x0(%rdi,%rbp,1),%ebx
7aea(4): add $0x1,%r15
7aee(2): test %dl,%dl
7af0(6): jnz 0xffffff50(%rip)
7af6(2): mov %esi,%eax
7af8(3): xor $0x1,%eax
7afb(3): and %r8d,%eax
7afe(3): test %r10b,%r10b
7b01(2): jz 0x10(%rip)
7b03(3): cmp %r15,%r13
7b06(2): jbe 0x7(%rip)
7b08(5): mov $0x5c,0x0(%r14,%r15,1)
7b0d(4): add $0x1,%r15
7b11(4): add $0x1,%rbp
7b15(3): cmp %rcx,%rbp
7b18(6): jnb 0xfffff784(%rip)
7b1e(2): test %al,%al
7b20(6): jz 0x3fe(%rip)
7b26(3): cmp %r15,%r13
7b29(2): jbe 0x7(%rip)
7b2b(5): mov $0x27,0x0(%r14,%r15,1)
7b30(4): lea 0x1(%r15),%rax
7b34(3): cmp %rax,%r13
7b37(2): jbe 0x8(%rip)
7b39(6): mov $0x27,0x1(%r14,%r15,1)
7b3f(4): add $0x2,%r15
7b43(3): xor %r10d,%r10d
7b46(3): xor %r8d,%r8d
7b49(2): jmp 0xffffff94(%rip)
7b4b(5): nop 0x0(%rax,%rax,1)
7b50(4): cmp $0x1,%r15
7b54(6): jz 0xfffffe65(%rip)
7b5a(5): mov 0x10(%rsp),%rdi
7b5f(4): lea 0x0(%rdi,%r15,1),%rcx
7b63(5): lea 0x1(%rdi,%r14,1),%rdx
7b68(4): lea 0x0(%rcx,%r14,1),%r8
7b6c(2): jmp 0x11(%rip)
7b6e(2): nop 
7b70(4): add $0x1,%rdx
7b74(3): cmp %rdx,%r8
7b77(6): jz 0xfffffe42(%rip)
7b7d(3): movzx (%rdx),%ecx
7b80(3): sub $0x5b,%ecx
7b83(3): cmp $0x21,%cl
7b86(2): jnbe 0xffffffea(%rip)
7b88(5): mov $0x1,%esi
7b8d(3): shl/sal %cl,%rsi
7b90(3): mov %rsi,%rcx
7b93(a): mov $0x8589934635,%rsi
7b9d(3): test %rsi,%rcx
7ba0(2): jz 0xffffffd0(%rip)
7ba2(5): mov 0x40(%rsp),%r14
7ba7(5): mov 0x70(%rsp),%r13
7bac(5): mov 0x30(%rsp),%rbp
7bb1(8): mov $0x2,0x8(%rsp)
7bb9(5): cmp $0x0,0xd(%rsp)
7bbe(2): jz 0x12(%rip)
7bc0(2): test %al,%al
7bc2(5): mov $0x4,%eax
7bc7(5): cmove 0x8(%rsp),%eax
7bcc(4): mov %eax,0x8(%rsp)
7bd0(4): sub $0x8,%rsp
7bd4(3): mov %rbp,%rcx
7bd7(3): mov %r13,%rsi
7bda(4): push 0x68(%rsp)
7bde(4): push 0x78(%rsp)
7be2(3): mov %r14,%rdi
7be5(2): push $0x0
7be7(8): mov 0x98(%rsp),%r9d
7bef(5): mov 0x28(%rsp),%r8d
7bf4(5): mov 0x30(%rsp),%rdx
7bf9(4): and $0xfd,%r9d
7bfd(5): call 0xfffff433(%rip)
7c02(4): add $0x20,%rsp
7c06(3): mov %rax,%r15
7c09(8): mov 0xa8(%rsp),%rbx
7c11(9): xor $0x28,%rbx
7c1a(3): mov %r15,%rax
7c1d(6): jnz 0x606(%rip)
7c23(7): add $0xb8,%rsp
7c2a(1): pop %rbx
7c2b(1): pop %rbp
7c2c(2): pop %r12
7c2e(2): pop %r13
7c30(2): pop %r14
7c32(2): pop %r15
7c34(1): ret near (%rsp)
7c35(3): nop (%rax)
7c38(3): mov %r11,%rbp
7c3b(5): jmp 0xffffff7e(%rip)
7c40(3): cmp %r15,%r13
7c43(2): jbe 0x7(%rip)
7c45(5): mov $0x27,0x0(%r14,%r15,1)
7c4a(4): lea 0x1(%r15),%rax
7c4e(3): cmp %rax,%r13
7c51(2): jbe 0x8(%rip)
7c53(6): mov $0x5c,0x1(%r14,%r15,1)
7c59(4): lea 0x2(%r15),%rax
7c5d(3): cmp %rax,%r13
7c60(6): jbe 0x5f2(%rip)
7c66(3): mov %r13,%rdx
7c69(6): mov $0x27,0x2(%r14,%r15,1)
7c6f(5): mov 0x50(%rsp),%r13
7c74(5): jmp 0xfffffbde(%rip)
7c79(3): mov %r12d,%eax
7c7c(5): mov $0x30,%ebx
7c81(3): xor %r12d,%r12d
7c84(5): jmp 0xfffff605(%rip)
7c89(6): mov $0x27,0x2(%r14,%r15,1)
7c8f(5): jmp 0xfffff9ca(%rip)
7c94(2): test %ebx,%ebx
7c96(6): jnz 0xfffff42d(%rip)
7c9c(5): mov $0x1,0xd(%rsp)
7ca1(3): test %r13,%r13
7ca4(6): jnz 0x596(%rip)
7caa(7): lea 0x8405(%rip),%rax
7cb1(9): mov $0x0,0x50(%rsp)
7cba(5): mov $0x1,0xe(%rsp)
7cbf(5): mov $0x0,0x7c(%rsp)
7cc4(3): xor %r12d,%r12d
7cc7(5): mov $0x0,0xf(%rsp)
7ccc(9): mov $0x1,0x18(%rsp)
7cd5(5): mov %rax,0x48(%rsp)
7cda(6): mov $0x1,%r15d
7ce0(8): mov $0x2,0x8(%rsp)
7ce8(5): jmp 0xfffff41b(%rip)
7ced(3): nop (%rax)
7cf0(2): test %ebx,%ebx
7cf2(6): jnz 0x3fb(%rip)
7cf8(3): test %r13,%r13
7cfb(6): jz 0x22b(%rip)
7d01(4): mov $0x22,(%r14)
7d05(5): mov $0x1,0xe(%rsp)
7d0a(3): xor %r12d,%r12d
7d0d(5): mov $0x0,0x7c(%rsp)
7d12(9): mov $0x0,0x50(%rsp)
7d1b(7): lea 0x83d0(%rip),%rax
7d22(5): mov $0x0,0xf(%rsp)
7d27(5): mov $0x1,0xd(%rsp)
7d2c(9): mov $0x1,0x18(%rsp)
7d35(6): mov $0x1,%r15d
7d3b(5): mov %rax,0x48(%rsp)
7d40(5): jmp 0xfffff3c3(%rip)
7d45(7): lea 0x83a6(%rip),%rax
7d4c(5): mov $0x1,0xe(%rsp)
7d51(5): mov $0x0,0x7c(%rsp)
7d56(3): xor %r12d,%r12d
7d59(9): mov $0x0,0x50(%rsp)
7d62(5): mov $0x1,0xf(%rsp)
7d67(5): mov $0x1,0xd(%rsp)
7d6c(9): mov $0x1,0x18(%rsp)
7d75(3): xor %r15d,%r15d
7d78(5): mov %rax,0x48(%rsp)
7d7d(8): mov $0x5,0x8(%rsp)
7d85(5): jmp 0xfffff37e(%rip)
7d8a(5): mov $0x1,0xe(%rsp)
7d8f(5): mov $0x0,0x7c(%rsp)
7d94(3): xor %r12d,%r12d
7d97(9): mov $0x0,0x50(%rsp)
7da0(5): mov $0x0,0xf(%rsp)
7da5(3): xor %r15d,%r15d
7da8(5): mov $0x1,0xd(%rsp)
7dad(9): mov $0x0,0x18(%rsp)
7db6(9): mov $0x0,0x48(%rsp)
7dbf(5): jmp 0xfffff344(%rip)
7dc4(5): cmp $0xa,0x8(%rsp)
7dc9(2): jz 0x58(%rip)
7dcb(7): lea 0x8322(%rip),%rsi
7dd2(2): xor %edi,%edi
7dd4(5): mov $0x5,%edx
7dd9(5): call 0xffffa107(%rip)
7dde(3): mov %rax,%rcx
7de1(5): mov %rax,0x68(%rsp)
7de6(7): lea 0x8307(%rip),%rax
7ded(3): cmp %rax,%rcx
7df0(6): jz 0x39e(%rip)
7df6(7): lea 0x82b9(%rip),%rsi
7dfd(2): xor %edi,%edi
7dff(5): mov $0x5,%edx
7e04(5): call 0xffffa0dc(%rip)
7e09(3): mov %rax,%rcx
7e0c(5): mov %rax,0x60(%rsp)
7e11(7): lea 0x829e(%rip),%rax
7e18(3): cmp %rax,%rcx
7e1b(6): jz 0x389(%rip)
7e21(3): xor %r15d,%r15d
7e24(2): test %ebx,%ebx
7e26(6): jz 0x1c7(%rip)
7e2c(2): test %ebx,%ebx
7e2e(5): mov 0x60(%rsp),%rbx
7e33(5): setnz 0xf(%rsp)
7e38(3): xor %r12d,%r12d
7e3b(3): mov %rbx,%rdi
7e3e(5): call 0xffffa0c2(%rip)
7e43(5): mov %rbx,0x48(%rsp)
7e48(5): mov %rax,0x18(%rsp)
7e4d(5): mov $0x1,0xe(%rsp)
7e52(5): mov $0x0,0x7c(%rsp)
7e57(9): mov $0x0,0x50(%rsp)
7e60(5): mov $0x1,0xd(%rsp)
7e65(5): jmp 0xfffff29e(%rip)
7e6a(5): mov $0x1,0xe(%rsp)
7e6f(5): mov $0x0,0x7c(%rsp)
7e74(3): xor %r12d,%r12d
7e77(9): mov $0x0,0x50(%rsp)
7e80(5): mov $0x0,0xf(%rsp)
7e85(3): xor %r15d,%r15d
7e88(5): mov $0x0,0xd(%rsp)
7e8d(9): mov $0x0,0x18(%rsp)
7e96(9): mov $0x0,0x48(%rsp)
7e9f(5): jmp 0xfffff264(%rip)
7ea4(5): mov $0x1,0xe(%rsp)
7ea9(5): mov $0x0,0x7c(%rsp)
7eae(3): xor %r12d,%r12d
7eb1(9): mov $0x0,0x50(%rsp)
7eba(5): mov $0x1,0xf(%rsp)
7ebf(5): mov $0x1,0xd(%rsp)
7ec4(5): jmp 0xfffff21f(%rip)
7ec9(3): cmp %r15,%r13
7ecc(2): jbe 0x7(%rip)
7ece(5): mov $0x30,0x0(%r14,%r15,1)
7ed3(4): lea 0x2(%rcx),%rax
7ed7(3): cmp %rax,%r13
7eda(2): jbe 0x8(%rip)
7edc(6): mov $0x30,0x2(%r14,%rcx,1)
7ee2(3): mov %r12d,%eax
7ee5(4): lea 0x3(%rcx),%r15
7ee9(3): xor %r12d,%r12d
7eec(5): mov $0x30,%ebx
7ef1(5): jmp 0xfffff367(%rip)
7ef6(a): nop 0x0(%rax,%rax,1)
7f00(5): movzx 0xf(%rsp),%ebx
7f05(3): mov %r11,%rbp
7f08(4): mov %bl,0xd(%rsp)
7f0c(5): jmp 0xfffffcad(%rip)
7f11(5): movzx 0xd(%rsp),%edx
7f16(3): xor %r12d,%r12d
7f19(5): jmp 0xfffffb07(%rip)
7f1e(3): xor %r10d,%r10d
7f21(5): jmp 0xfffffbbc(%rip)
7f26(9): mov $0x0,0x50(%rsp)
7f2f(5): mov $0x1,0xe(%rsp)
7f34(3): xor %r12d,%r12d
7f37(5): mov $0x0,0x7c(%rsp)
7f3c(5): jmp 0xfffffddf(%rip)
7f41(5): mov 0x30(%rsp),%r11
7f46(3): mov %r14,%rsi
7f49(3): mov %r13,%rcx
7f4c(3): mov %rbx,%rax
7f4f(3): mov %rbx,%rdi
7f52(6): movzx 0x7d(%rsp),%r8d
7f58(5): movzx 0x7e(%rsp),%ebx
7f5d(8): mov 0x88(%rsp),%r9
7f65(3): cmp %r11,%rsi
7f68(6): movzx 0x7f(%rsp),%r10d
7f6e(8): mov 0x80(%rsp),%r15
7f76(5): mov 0x40(%rsp),%r14
7f7b(5): mov 0x70(%rsp),%r13
7f80(2): jnb 0x28(%rip)
7f82(3): cmp $0x0,(%rcx)
7f85(2): jnz 0x12(%rip)
7f87(2): jmp 0x21(%rip)
7f89(7): nop 0x0(%rax)
7f90(5): cmp $0x0,0x0(%r9,%rax,1)
7f95(2): jz 0x10(%rip)
7f97(4): add $0x1,%rax
7f9b(5): lea 0x0(%rbp,%rax,1),%rdx
7fa0(3): cmp %rdx,%r11
7fa3(2): jnbe 0xffffffed(%rip)
7fa5(3): mov %rax,%rdi
7fa8(5): movzx 0xd(%rsp),%edx
7fad(3): xor %r12d,%r12d
7fb0(5): jmp 0xfffffa66(%rip)
7fb5(3): mov %rbx,%rdi
7fb8(6): movzx 0x7d(%rsp),%r8d
7fbe(5): movzx 0x7e(%rsp),%ebx
7fc3(6): movzx 0x7f(%rsp),%r10d
7fc9(8): mov 0x80(%rsp),%r15
7fd1(3): xor %r12d,%r12d
7fd4(5): mov 0x40(%rsp),%r14
7fd9(5): mov 0x70(%rsp),%r13
7fde(5): mov 0x30(%rsp),%r11
7fe3(5): movzx 0xd(%rsp),%edx
7fe8(5): jmp 0xfffffa2e(%rip)
7fed(5): mov 0x68(%rsp),%rdx
7ff2(3): movzx (%rdx),%eax
7ff5(2): test %al,%al
7ff7(6): jz 0xfffffe35(%rip)
7ffd(3): nop (%rax)
8000(3): cmp %r15,%r13
8003(2): jbe 0x6(%rip)
8005(4): mov %al,0x0(%r14,%r15,1)
8009(4): add $0x1,%r15
800d(5): movzx 0x0(%rdx,%r15,1),%eax
8012(2): test %al,%al
8014(2): jnz 0xffffffec(%rip)
8016(5): jmp 0xfffffe16(%rip)
801b(2): mov %edx,%eax
801d(5): jmp 0xfffff55a(%rip)
8022(4): movzx 0x0(%rax,%rcx,1),%ebx
8026(3): cmp $0x3e,%bl
8029(6): jnbe 0xfffff877(%rip)
802f(a): mov $0x8070630310989004800,%rax
8039(4): bt %rbx,%rax
803d(6): jnb 0xfffff863(%rip)
8043(5): cmp $0x0,0xf(%rsp)
8048(6): jnz 0x1ea(%rip)
804e(3): cmp %r15,%r13
8051(2): jbe 0x7(%rip)
8053(5): mov $0x3f,0x0(%r14,%r15,1)
8058(4): lea 0x1(%r15),%rax
805c(3): cmp %rax,%r13
805f(2): jbe 0x8(%rip)
8061(6): mov $0x22,0x1(%r14,%r15,1)
8067(4): lea 0x2(%r15),%rax
806b(3): cmp %rax,%r13
806e(2): jbe 0x8(%rip)
8070(6): mov $0x22,0x2(%r14,%r15,1)
8076(4): lea 0x3(%r15),%rax
807a(3): cmp %rax,%r13
807d(2): jbe 0x8(%rip)
807f(6): mov $0x3f,0x3(%r14,%r15,1)
8085(4): add $0x4,%r15
8089(2): xor %edx,%edx
808b(3): xor %r12d,%r12d
808e(2): xor %eax,%eax
8090(3): mov %rcx,%rbp
8093(5): jmp 0xfffff1c5(%rip)
8098(2): test %ebx,%ebx
809a(6): jz 0x18e(%rip)
80a0(7): lea 0x800f(%rip),%rax
80a7(5): mov $0x1,0xe(%rsp)
80ac(5): mov $0x0,0x7c(%rsp)
80b1(3): xor %r12d,%r12d
80b4(9): mov $0x0,0x50(%rsp)
80bd(5): mov $0x1,0xf(%rsp)
80c2(5): mov $0x0,0xd(%rsp)
80c7(9): mov $0x1,0x18(%rsp)
80d0(3): xor %r15d,%r15d
80d3(5): mov %rax,0x48(%rsp)
80d8(5): jmp 0xfffff02b(%rip)
80dd(3): nop (%rax)
80e0(3): mov %r11,%rbp
80e3(5): movzx 0xf(%rsp),%eax
80e8(5): jmp 0xfffffad1(%rip)
80ed(7): lea 0x7ffe(%rip),%rax
80f4(5): mov $0x1,0xe(%rsp)
80f9(5): mov $0x0,0x7c(%rsp)
80fe(3): xor %r12d,%r12d
8101(9): mov $0x0,0x50(%rsp)
810a(5): mov $0x1,0xf(%rsp)
810f(5): mov $0x1,0xd(%rsp)
8114(9): mov $0x1,0x18(%rsp)
811d(3): xor %r15d,%r15d
8120(5): mov %rax,0x48(%rsp)
8125(5): jmp 0xffffefde(%rip)
812a(2): mov %edx,%eax
812c(5): mov 0x48(%rsp),%rbx
8131(3): test %rbx,%rbx
8134(2): jz 0x2e(%rip)
8136(2): test %al,%al
8138(2): jz 0x2a(%rip)
813a(3): movzx (%rbx),%ecx
813d(3): mov %rbx,%rax
8140(2): test %cl,%cl
8142(2): jz 0x20(%rip)
8144(3): mov %r15,%rdx
8147(3): sub %r15,%rax
814a(3): cmp %rdx,%r13
814d(2): jbe 0x6(%rip)
814f(4): mov %cl,0x0(%r14,%rdx,1)
8153(4): add $0x1,%rdx
8157(4): movzx 0x0(%rax,%rdx,1),%ecx
815b(2): test %cl,%cl
815d(2): jnz 0xffffffed(%rip)
815f(3): mov %rdx,%r15
8162(3): cmp %r15,%r13
8165(6): jbe 0xfffffaa4(%rip)
816b(5): mov $0x0,0x0(%r14,%r15,1)
8170(5): jmp 0xfffffa99(%rip)
8175(5): cmp $0x2,0x8(%rsp)
817a(5): movzx 0xf(%rsp),%ebx
817f(3): mov %r11,%rbp
8182(3): setz %al
8185(4): mov %bl,0xd(%rsp)
8189(5): jmp 0xfffffa30(%rip)
818e(4): mov 0x8(%rsp),%esi
8192(3): mov %rcx,%rdi
8195(5): call 0xffffedab(%rip)
819a(5): mov %rax,0x68(%rsp)
819f(5): jmp 0xfffffc57(%rip)
81a4(4): mov 0x8(%rsp),%esi
81a8(3): mov %rcx,%rdi
81ab(5): call 0xffffed95(%rip)
81b0(5): mov %rax,0x60(%rsp)
81b5(5): jmp 0xfffffc6c(%rip)
81ba(5): movzx 0xf(%rsp),%ebx
81bf(3): mov %r11,%rbp
81c2(2): mov %edx,%eax
81c4(4): mov %bl,0xd(%rsp)
81c8(5): jmp 0xfffff9f1(%rip)
81cd(4): sub $0x8,%rsp
81d1(6): mov $0x5,%r8d
81d7(3): mov %r11,%rcx
81da(4): push 0x68(%rsp)
81de(4): push 0x78(%rsp)
81e2(3): mov %r14,%rdi
81e5(4): push 0x38(%rsp)
81e9(8): mov 0x98(%rsp),%r9d
81f1(5): mov 0x30(%rsp),%rdx
81f6(5): mov 0x70(%rsp),%rsi
81fb(5): call 0xffffee35(%rip)
8200(4): add $0x20,%rsp
8204(3): mov %rax,%r15
8207(5): jmp 0xfffffa02(%rip)
820c(5): movzx 0x7c(%rsp),%eax
8211(5): jmp 0xffffff1b(%rip)
8216(8): mov $0x2,0x8(%rsp)
821e(5): jmp 0xfffff99b(%rip)
8223(5): call 0xffff9cfd(%rip)
8228(5): mov $0x0,0xd(%rsp)
822d(5): jmp 0xfffffa74(%rip)
8232(3): mov %r11,%rbp
8235(5): jmp 0xfffff99b(%rip)
823a(5): mov $0x1,0xe(%rsp)
823f(2): xor %eax,%eax
8241(3): xor %r12d,%r12d
8244(9): mov $0x0,0x50(%rsp)
824d(5): jmp 0xfffff5a7(%rip)
8252(3): mov %r13,%rdx
8255(5): mov 0x50(%rsp),%r13
825a(5): jmp 0xfffff5f8(%rip)
825f(5): call 0xffff9b81(%rip)

"quotearg_n_options" :
8270(2): push %r15
8272(2): push %r14
8274(3): movsxd %edi,%r15
8277(2): push %r13
8279(2): push %r12
827b(3): mov %rdx,%r14
827e(1): push %rbp
827f(1): push %rbx
8280(3): mov %rcx,%rbp
8283(4): sub $0x28,%rsp
8287(5): mov %rsi,0x8(%rsp)
828c(5): call 0xffff9b64(%rip)
8291(3): mov %rax,%r13
8294(2): mov (%rax),%eax
8296(3): test %r15d,%r15d
8299(7): mov 0x20ade0(%rip),%rbx
82a0(4): mov %eax,0x18(%rsp)
82a4(6): js 0x16d(%rip)
82aa(7): cmp %r15d,0x20adc7(%rip)
82b1(2): jnle 0x64(%rip)
82b3(7): cmp $0x7fffffff,%r15d
82ba(6): jz 0x15c(%rip)
82c0(4): lea 0x1(%r15),%r12d
82c4(7): lea 0x20adc5(%rip),%rax
82cb(3): movsxd %r12d,%rsi
82ce(4): shl/sal $0x4,%rsi
82d2(3): cmp %rax,%rbx
82d5(6): jz 0x11b(%rip)
82db(3): mov %rbx,%rdi
82de(5): call 0x1a62(%rip)
82e3(3): mov %rax,%rbx
82e6(7): mov %rax,0x20ad93(%rip)
82ed(7): movsxd 0x20ad84(%rip),%rdi
82f4(3): mov %r12d,%edx
82f7(2): xor %esi,%esi
82f9(2): sub %edi,%edx
82fb(4): shl/sal $0x4,%rdi
82ff(3): movsxd %edx,%rdx
8302(3): add %rbx,%rdi
8305(4): shl/sal $0x4,%rdx
8309(5): call 0xffff9ce7(%rip)
830e(7): mov %r12d,0x20ad63(%rip)
8315(3): mov 0x4(%rbp),%eax
8318(4): shl/sal $0x4,%r15
831c(4): sub $0x8,%rsp
8320(3): add %r15,%rbx
8323(4): lea 0x8(%rbp),%r15
8327(4): mov 0x0(%rbp),%r8d
832b(3): mov (%rbx),%r11
832e(4): mov 0x8(%rbx),%r12
8332(3): mov %r14,%rcx
8335(3): or $0x1,%eax
8338(4): mov %eax,0x24(%rsp)
833c(3): push 0x30(%rbp)
833f(3): mov %eax,%r9d
8342(3): push 0x28(%rbp)
8345(2): push %r15
8347(3): mov %r11,%rsi
834a(5): mov 0x28(%rsp),%rdx
834f(3): mov %r12,%rdi
8352(5): mov %r11,0x30(%rsp)
8357(5): call 0xffffecd9(%rip)
835c(4): add $0x20,%rsp
8360(5): mov 0x10(%rsp),%r11
8365(3): cmp %rax,%r11
8368(2): jnbe 0x69(%rip)
836a(4): lea 0x1(%rax),%rsi
836e(7): lea 0x20adab(%rip),%rax
8375(3): cmp %rax,%r12
8378(3): mov %rsi,(%rbx)
837b(2): jz 0x14(%rip)
837d(3): mov %r12,%rdi
8380(5): mov %rsi,0x10(%rsp)
8385(5): call 0xffff9a4b(%rip)
838a(5): mov 0x10(%rsp),%rsi
838f(3): mov %rsi,%rdi
8392(5): mov %rsi,0x10(%rsp)
8397(5): call 0x1949(%rip)
839c(4): sub $0x8,%rsp
83a0(4): mov %rax,0x8(%rbx)
83a4(4): mov 0x0(%rbp),%r8d
83a8(3): push 0x30(%rbp)
83ab(3): push 0x28(%rbp)
83ae(3): mov %r14,%rcx
83b1(2): push %r15
83b3(5): mov 0x3c(%rsp),%r9d
83b8(3): mov %rax,%rdi
83bb(5): mov 0x28(%rsp),%rdx
83c0(5): mov 0x30(%rsp),%rsi
83c5(3): mov %rax,%r12
83c8(5): call 0xffffec68(%rip)
83cd(4): add $0x20,%rsp
83d1(4): mov 0x18(%rsp),%eax
83d5(4): mov %eax,0x0(%r13)
83d9(4): add $0x28,%rsp
83dd(3): mov %r12,%rax
83e0(1): pop %rbx
83e1(1): pop %rbp
83e2(2): pop %r12
83e4(2): pop %r13
83e6(2): pop %r14
83e8(2): pop %r15
83ea(1): ret near (%rsp)
83eb(5): nop 0x0(%rax,%rax,1)
83f0(2): xor %edi,%edi
83f2(5): call 0x194e(%rip)
83f7(8): movdqa 0x20ac91(%rip),%xmm0
83ff(3): mov %rax,%rbx
8402(7): mov %rax,0x20ac77(%rip)
8409(3): movups %xmm0,(%rax)
840c(5): jmp 0xfffffee1(%rip)
8411(5): call 0xffff99cf(%rip)
8416(5): call 0x1b1a(%rip)

"clone_quoting_options" :
8420(2): push %r12
8422(1): push %rbp
8423(1): push %rbx
8424(3): mov %rdi,%rbx
8427(5): call 0xffff99c9(%rip)
842c(3): mov (%rax),%r12d
842f(3): mov %rax,%rbp
8432(7): lea 0x20ade7(%rip),%rax
8439(3): test %rbx,%rbx
843c(5): mov $0x38,%esi
8441(4): cmove %rax,%rbx
8445(3): mov %rbx,%rdi
8448(5): call 0x1a98(%rip)
844d(4): mov %r12d,0x0(%rbp)
8451(1): pop %rbx
8452(1): pop %rbp
8453(2): pop %r12
8455(1): ret near (%rsp)

"get_quoting_style" :
8460(7): lea 0x20adb9(%rip),%rax
8467(3): test %rdi,%rdi
846a(4): cmove %rax,%rdi
846e(2): mov (%rdi),%eax
8470(1): ret near (%rsp)

"set_quoting_style" :
8480(7): lea 0x20ad99(%rip),%rax
8487(3): test %rdi,%rdi
848a(4): cmove %rax,%rdi
848e(2): mov %esi,(%rdi)
8490(1): ret near (%rsp)

"set_char_quoting" :
84a0(7): lea 0x20ad79(%rip),%rax
84a7(3): test %rdi,%rdi
84aa(2): mov %esi,%ecx
84ac(4): cmove %rax,%rdi
84b0(2): mov %esi,%eax
84b2(3): and $0x1f,%ecx
84b5(3): shr $0x5,%al
84b8(3): movzx %al,%eax
84bb(5): lea 0x8(%rdi,%rax,4),%rdi
84c0(2): mov (%rdi),%esi
84c2(2): mov %esi,%eax
84c4(2): shr %cl,%eax
84c6(2): xor %eax,%edx
84c8(3): and $0x1,%eax
84cb(3): and $0x1,%edx
84ce(2): shl/sal %cl,%edx
84d0(2): xor %esi,%edx
84d2(2): mov %edx,(%rdi)
84d4(1): ret near (%rsp)

"set_quoting_flags" :
84e0(7): lea 0x20ad39(%rip),%rax
84e7(3): test %rdi,%rdi
84ea(4): cmove %rax,%rdi
84ee(3): mov 0x4(%rdi),%eax
84f1(3): mov %esi,0x4(%rdi)
84f4(1): ret near (%rsp)

"set_custom_quoting" :
8500(7): lea 0x20ad19(%rip),%rax
8507(3): test %rdi,%rdi
850a(4): cmove %rax,%rdi
850e(3): test %rsi,%rsi
8511(6): mov $0xa,(%rdi)
8517(2): jz 0x10(%rip)
8519(3): test %rdx,%rdx
851c(2): jz 0xb(%rip)
851e(4): mov %rsi,0x28(%rdi)
8522(4): mov %rdx,0x30(%rdi)
8526(1): ret near (%rsp)
8527(4): sub $0x8,%rsp
852b(5): call 0xffff98b5(%rip)

"quotearg_buffer" :
8530(2): push %r15
8532(2): push %r14
8534(7): lea 0x20ace5(%rip),%rax
853b(2): push %r13
853d(2): push %r12
853f(3): mov %rdi,%r13
8542(1): push %rbp
8543(1): push %rbx
8544(3): mov %r8,%rbx
8547(3): mov %rsi,%r14
854a(3): mov %rdx,%r15
854d(4): sub $0x18,%rsp
8551(3): test %r8,%r8
8554(4): cmove %rax,%rbx
8558(5): mov %rcx,0x8(%rsp)
855d(5): call 0xffff9893(%rip)
8562(3): mov (%rax),%r12d
8565(3): mov %rax,%rbp
8568(4): lea 0x8(%rbx),%rax
856c(4): sub $0x8,%rsp
8570(4): mov 0x4(%rbx),%r9d
8574(3): push 0x30(%rbx)
8577(3): mov (%rbx),%r8d
857a(3): push 0x28(%rbx)
857d(3): mov %r15,%rdx
8580(1): push %rax
8581(5): mov 0x28(%rsp),%rcx
8586(3): mov %r14,%rsi
8589(3): mov %r13,%rdi
858c(5): call 0xffffeaa4(%rip)
8591(4): mov %r12d,0x0(%rbp)
8595(4): add $0x38,%rsp
8599(1): pop %rbx
859a(1): pop %rbp
859b(2): pop %r12
859d(2): pop %r13
859f(2): pop %r14
85a1(2): pop %r15
85a3(1): ret near (%rsp)

"quotearg_alloc_mem" :
85b0(2): push %r15
85b2(2): push %r14
85b4(7): lea 0x20ac65(%rip),%rax
85bb(2): push %r13
85bd(2): push %r12
85bf(3): mov %rdx,%r12
85c2(1): push %rbp
85c3(1): push %rbx
85c4(3): mov %rcx,%rbx
85c7(3): mov %rdi,%r14
85ca(3): mov %rsi,%r15
85cd(4): sub $0x38,%rsp
85d1(3): test %rcx,%rcx
85d4(4): cmove %rax,%rbx
85d8(2): xor %ebp,%ebp
85da(5): call 0xffff9816(%rip)
85df(3): test %r12,%r12
85e2(3): mov %rax,%r13
85e5(2): mov (%rax),%eax
85e7(4): setz %bpl
85eb(3): or 0x4(%rbx),%ebp
85ee(4): lea 0x8(%rbx),%r10
85f2(4): sub $0x8,%rsp
85f6(3): mov (%rbx),%r8d
85f9(3): mov %r15,%rcx
85fc(4): mov %eax,0x14(%rsp)
8600(3): push 0x30(%rbx)
8603(3): mov %r14,%rdx
8606(3): push 0x28(%rbx)
8609(2): push %r10
860b(2): xor %esi,%esi
860d(3): mov %ebp,%r9d
8610(2): xor %edi,%edi
8612(5): mov %r10,0x40(%rsp)
8617(5): call 0xffffea19(%rip)
861c(4): lea 0x1(%rax),%rsi
8620(5): mov %rax,0x48(%rsp)
8625(4): add $0x20,%rsp
8629(3): mov %rsi,%rdi
862c(5): mov %rsi,0x18(%rsp)
8631(5): call 0x16af(%rip)
8636(5): mov %rax,0x10(%rsp)
863b(4): sub $0x8,%rsp
863f(3): push 0x30(%rbx)
8642(3): push 0x28(%rbx)
8645(5): mov 0x38(%rsp),%r10
864a(3): mov %ebp,%r9d
864d(3): mov (%rbx),%r8d
8650(3): mov %r15,%rcx
8653(3): mov %r14,%rdx
8656(3): mov %rax,%rdi
8659(2): push %r10
865b(5): mov 0x38(%rsp),%rsi
8660(5): call 0xffffe9d0(%rip)
8665(4): mov 0x2c(%rsp),%eax
8669(4): add $0x20,%rsp
866d(3): test %r12,%r12
8670(4): mov %eax,0x0(%r13)
8674(2): jz 0xb(%rip)
8676(5): mov 0x28(%rsp),%r11
867b(4): mov %r11,(%r12)
867f(5): mov 0x10(%rsp),%rax
8684(4): add $0x38,%rsp
8688(1): pop %rbx
8689(1): pop %rbp
868a(2): pop %r12
868c(2): pop %r13
868e(2): pop %r14
8690(2): pop %r15
8692(1): ret near (%rsp)

"quotearg_alloc" :
86a0(3): mov %rdx,%rcx
86a3(2): xor %edx,%edx
86a5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
86b0(6): mov 0x20a9c2(%rip),%eax
86b6(2): push %r12
86b8(7): mov 0x20a9c1(%rip),%r12
86bf(1): push %rbp
86c0(1): push %rbx
86c1(3): cmp $0x1,%eax
86c4(2): jle 0x2d(%rip)
86c6(3): sub $0x2,%eax
86c9(5): lea 0x18(%r12),%rbx
86ce(4): shl/sal $0x4,%rax
86d2(5): lea 0x28(%r12,%rax,1),%rbp
86d7(9): nop 0x0(%rax,%rax,1)
86e0(3): mov (%rbx),%rdi
86e3(4): add $0x10,%rbx
86e7(5): call 0xffff96e9(%rip)
86ec(3): cmp %rbp,%rbx
86ef(2): jnz 0xfffffff1(%rip)
86f1(5): mov 0x8(%r12),%rdi
86f6(7): lea 0x20aa23(%rip),%rbx
86fd(3): cmp %rbx,%rdi
8700(2): jz 0x19(%rip)
8702(5): call 0xffff96ce(%rip)
8707(b): mov $0x100,0x20a97e(%rip)
8712(7): mov %rbx,0x20a97f(%rip)
8719(7): lea 0x20a970(%rip),%rbx
8720(3): cmp %rbx,%r12
8723(2): jz 0x11(%rip)
8725(3): mov %r12,%rdi
8728(5): call 0xffff96a8(%rip)
872d(7): mov %rbx,0x20a94c(%rip)
8734(1): pop %rbx
8735(a): mov $0x1,0x20a939(%rip)
873f(1): pop %rbp
8740(2): pop %r12
8742(1): ret near (%rsp)

"quotearg_n" :
8750(7): lea 0x20aac9(%rip),%rcx
8757(7): mov $0xffffffff,%rdx
875e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
8770(7): lea 0x20aaa9(%rip),%rcx
8777(5): jmp 0xfffffaf9(%rip)

"quotearg" :
8780(7): lea 0x20aa99(%rip),%rcx
8787(3): mov %rdi,%rsi
878a(7): mov $0xffffffff,%rdx
8791(2): xor %edi,%edi
8793(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
87a0(7): lea 0x20aa79(%rip),%rcx
87a7(3): mov %rsi,%rdx
87aa(3): mov %rdi,%rsi
87ad(2): xor %edi,%edi
87af(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
87c0(4): sub $0x48,%rsp
87c4(3): mov %rdx,%rax
87c7(9): mov $0x28,%rdx
87d0(5): mov %rdx,0x38(%rsp)
87d5(2): xor %edx,%edx
87d7(3): cmp $0xa,%esi
87da(2): jz 0x6a(%rip)
87dc(3): mov %esi,(%rsp)
87df(3): mov %rsp,%rcx
87e2(7): mov $0xffffffff,%rdx
87e9(3): mov %rax,%rsi
87ec(9): mov $0x0,0x4(%rsp)
87f5(9): mov $0x0,0xc(%rsp)
87fe(9): mov $0x0,0x14(%rsp)
8807(9): mov $0x0,0x1c(%rsp)
8810(9): mov $0x0,0x24(%rsp)
8819(9): mov $0x0,0x2c(%rsp)
8822(8): mov $0x0,0x34(%rsp)
882a(5): call 0xfffffa46(%rip)
882f(5): mov 0x38(%rsp),%rcx
8834(9): xor $0x28,%rcx
883d(2): jnz 0xc(%rip)
883f(4): add $0x48,%rsp
8843(1): ret near (%rsp)
8844(5): call 0xffff959c(%rip)
8849(5): call 0xffff96d7(%rip)

"quotearg_n_style_mem" :
8850(4): sub $0x48,%rsp
8854(3): mov %rdx,%rax
8857(3): mov %rcx,%rdx
885a(9): mov $0x28,%rcx
8863(5): mov %rcx,0x38(%rsp)
8868(2): xor %ecx,%ecx
886a(3): cmp $0xa,%esi
886d(2): jz 0x63(%rip)
886f(3): mov %esi,(%rsp)
8872(3): mov %rsp,%rcx
8875(3): mov %rax,%rsi
8878(9): mov $0x0,0x4(%rsp)
8881(9): mov $0x0,0xc(%rsp)
888a(9): mov $0x0,0x14(%rsp)
8893(9): mov $0x0,0x1c(%rsp)
889c(9): mov $0x0,0x24(%rsp)
88a5(9): mov $0x0,0x2c(%rsp)
88ae(8): mov $0x0,0x34(%rsp)
88b6(5): call 0xfffff9ba(%rip)
88bb(5): mov 0x38(%rsp),%rdx
88c0(9): xor $0x28,%rdx
88c9(2): jnz 0xc(%rip)
88cb(4): add $0x48,%rsp
88cf(1): ret near (%rsp)
88d0(5): call 0xffff9510(%rip)
88d5(5): call 0xffff964b(%rip)

"quotearg_style" :
88e0(3): mov %rsi,%rdx
88e3(2): mov %edi,%esi
88e5(2): xor %edi,%edi
88e7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
88f0(3): mov %rdx,%rcx
88f3(3): mov %rsi,%rdx
88f6(2): mov %edi,%esi
88f8(2): xor %edi,%edi
88fa(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
8900(4): sub $0x48,%rsp
8904(2): mov %edx,%ecx
8906(9): mov $0x28,%rax
890f(5): mov %rax,0x38(%rsp)
8914(2): xor %eax,%eax
8916(7): mov 0x20a933(%rip),%rax
891d(3): mov %rsp,%r8
8920(3): and $0x1f,%ecx
8923(8): movdqa 0x20a8f5(%rip),%xmm0
892b(5): mov %rax,0x30(%rsp)
8930(2): mov %edx,%eax
8932(4): movaps %xmm0,(%rsp)
8936(3): shr $0x5,%al
8939(3): movzx %al,%eax
893c(5): lea 0x8(%r8,%rax,4),%r9
8941(8): movdqa 0x20a8e7(%rip),%xmm0
8949(5): movaps %xmm0,0x10(%rsp)
894e(8): movdqa 0x20a8ea(%rip),%xmm0
8956(5): movaps %xmm0,0x20(%rsp)
895b(3): mov (%r9),%edx
895e(2): mov %edx,%eax
8960(2): shr %cl,%eax
8962(2): not %eax
8964(3): and $0x1,%eax
8967(2): shl/sal %cl,%eax
8969(3): mov %r8,%rcx
896c(2): xor %edx,%eax
896e(3): mov %rsi,%rdx
8971(3): mov %rdi,%rsi
8974(3): mov %eax,(%r9)
8977(2): xor %edi,%edi
8979(5): call 0xfffff8f7(%rip)
897e(5): mov 0x38(%rsp),%rsi
8983(9): xor $0x28,%rsi
898c(2): jnz 0x7(%rip)
898e(4): add $0x48,%rsp
8992(1): ret near (%rsp)
8993(5): call 0xffff958d(%rip)

"quotearg_char" :
89a0(4): movsx %sil,%edx
89a4(7): mov $0xffffffff,%rsi
89ab(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
89b0(5): mov $0x3a,%edx
89b5(7): mov $0xffffffff,%rsi
89bc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
89d0(5): mov $0x3a,%edx
89d5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
89e0(4): sub $0x48,%rsp
89e4(3): mov %rdx,%rax
89e7(9): mov $0x28,%rdx
89f0(5): mov %rdx,0x38(%rsp)
89f5(2): xor %edx,%edx
89f7(3): cmp $0xa,%esi
89fa(2): jz 0x6a(%rip)
89fc(3): mov %esi,(%rsp)
89ff(3): mov %rsp,%rcx
8a02(7): mov $0xffffffff,%rdx
8a09(3): mov %rax,%rsi
8a0c(9): mov $0x0,0x4(%rsp)
8a15(9): mov $0x4000000,0xc(%rsp)
8a1e(9): mov $0x0,0x14(%rsp)
8a27(9): mov $0x0,0x1c(%rsp)
8a30(9): mov $0x0,0x24(%rsp)
8a39(9): mov $0x0,0x2c(%rsp)
8a42(8): mov $0x0,0x34(%rsp)
8a4a(5): call 0xfffff826(%rip)
8a4f(5): mov 0x38(%rsp),%rcx
8a54(9): xor $0x28,%rcx
8a5d(2): jnz 0xc(%rip)
8a5f(4): add $0x48,%rsp
8a63(1): ret near (%rsp)
8a64(5): call 0xffff937c(%rip)
8a69(5): call 0xffff94b7(%rip)

"quotearg_n_custom_mem" :
8a70(4): sub $0x48,%rsp
8a74(3): mov %rcx,%r9
8a77(7): mov 0x20a7d2(%rip),%rcx
8a7e(8): movdqa 0x20a79a(%rip),%xmm0
8a86(9): mov $0x28,%rax
8a8f(5): mov %rax,0x38(%rsp)
8a94(2): xor %eax,%eax
8a96(4): movaps %xmm0,(%rsp)
8a9a(3): test %rsi,%rsi
8a9d(5): mov %rcx,0x30(%rsp)
8aa2(7): mov $0xa,(%rsp)
8aa9(8): movdqa 0x20a77f(%rip),%xmm0
8ab1(5): movaps %xmm0,0x10(%rsp)
8ab6(8): movdqa 0x20a782(%rip),%xmm0
8abe(5): movaps %xmm0,0x20(%rsp)
8ac3(2): jz 0x34(%rip)
8ac5(3): test %rdx,%rdx
8ac8(2): jz 0x2f(%rip)
8aca(5): mov %rsi,0x28(%rsp)
8acf(5): mov %rdx,0x30(%rsp)
8ad4(3): mov %rsp,%rcx
8ad7(3): mov %r8,%rdx
8ada(3): mov %r9,%rsi
8add(5): call 0xfffff793(%rip)
8ae2(5): mov 0x38(%rsp),%rdi
8ae7(9): xor $0x28,%rdi
8af0(2): jnz 0xc(%rip)
8af2(4): add $0x48,%rsp
8af6(1): ret near (%rsp)
8af7(5): call 0xffff92e9(%rip)
8afc(5): call 0xffff9424(%rip)

"quotearg_n_custom" :
8b10(7): mov $0xffffffff,%r8
8b17(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
8b20(3): mov %rdx,%rcx
8b23(7): mov $0xffffffff,%r8
8b2a(3): mov %rsi,%rdx
8b2d(3): mov %rdi,%rsi
8b30(2): xor %edi,%edi
8b32(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
8b40(3): mov %rcx,%r8
8b43(3): mov %rdx,%rcx
8b46(3): mov %rsi,%rdx
8b49(3): mov %rdi,%rsi
8b4c(2): xor %edi,%edi
8b4e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
8b60(7): lea 0x20a4d9(%rip),%rcx
8b67(5): jmp 0xfffff709(%rip)

"quote_mem" :
8b70(7): lea 0x20a4c9(%rip),%rcx
8b77(3): mov %rsi,%rdx
8b7a(3): mov %rdi,%rsi
8b7d(2): xor %edi,%edi
8b7f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
8b90(7): lea 0x20a4a9(%rip),%rcx
8b97(7): mov $0xffffffff,%rdx
8b9e(5): jmp 0xfffff6d2(%rip)

"quote" :
8bb0(7): lea 0x20a489(%rip),%rcx
8bb7(3): mov %rdi,%rsi
8bba(7): mov $0xffffffff,%rdx
8bc1(2): xor %edi,%edi
8bc3(5): jmp 0xfffff6ad(%rip)

"init_tokenbuffer" :
8bd0(7): mov $0x0,(%rdi)
8bd7(8): mov $0x0,0x8(%rdi)
8bdf(1): ret near (%rsp)

"readtoken" :
8be0(2): push %r15
8be2(2): push %r14
8be4(2): push %r13
8be6(2): push %r12
8be8(3): mov %rcx,%r13
8beb(1): push %rbp
8bec(1): push %rbx
8bed(3): mov %rdi,%rbp
8bf0(4): pxor %xmm0,%xmm0
8bf4(4): sub $0x38,%rsp
8bf8(9): mov $0x28,%rax
8c01(5): mov %rax,0x28(%rsp)
8c06(2): xor %eax,%eax
8c08(3): test %rdx,%rdx
8c0b(4): movaps %xmm0,(%rsp)
8c0f(5): movaps %xmm0,0x10(%rsp)
8c14(2): jz 0x68(%rip)
8c16(3): add %rsi,%rdx
8c19(3): mov %rsp,%rdi
8c1c(6): mov $0x1,%r8d
8c22(6): nop 0x0(%rax,%rax,1)
8c28(3): mov %r8,%rbx
8c2b(4): add $0x1,%rsi
8c2f(4): movzx 0xffffffff(%rsi),%ecx
8c33(3): mov %rcx,%rax
8c36(3): and $0x3f,%ecx
8c39(4): shr $0x3,%rax
8c3d(3): shl/sal %cl,%rbx
8c40(3): and $0x18,%eax
8c43(4): or %rbx,0x0(%rdi,%rax,1)
8c47(3): cmp %rsi,%rdx
8c4a(2): jnz 0xffffffde(%rip)
8c4c(4): mov 0x8(%rbp),%rax
8c50(4): cmp 0x10(%rbp),%rax
8c54(2): jnb 0x32(%rip)
8c56(a): nop 0x0(%rax,%rax,1)
8c60(4): lea 0x1(%rax),%rdx
8c64(4): mov %rdx,0x8(%rbp)
8c68(3): movzx (%rax),%ebx
8c6b(3): movsxd %ebx,%rax
8c6e(4): shr $0x6,%rax
8c72(4): mov 0x0(%rsp,%rax,8),%rax
8c76(4): bt %rbx,%rax
8c7a(2): jnb 0x1a(%rip)
8c7c(4): mov 0x8(%rbp),%rax
8c80(4): cmp 0x10(%rbp),%rax
8c84(2): jb 0xffffffdc(%rip)
8c86(3): mov %rbp,%rdi
8c89(5): call 0xffff9127(%rip)
8c8e(2): test %eax,%eax
8c90(2): mov %eax,%ebx
8c92(2): jns 0xffffffd9(%rip)
8c94(4): mov 0x8(%r13),%r15
8c98(4): mov 0x0(%r13),%r14
8c9c(3): xor %r12d,%r12d
8c9f(2): test %ebx,%ebx
8ca1(2): jns 0xf(%rip)
8ca3(3): test %r12,%r12
8ca6(2): jz 0x54(%rip)
8ca8(8): nop 0x0(%rax,%rax,1)
8cb0(3): cmp %r14,%r12
8cb3(2): jz 0x55(%rip)
8cb5(2): test %ebx,%ebx
8cb7(4): lea 0x0(%r15,%r12,1),%rdx
8cbb(6): js 0x95(%rip)
8cc1(3): movsxd %ebx,%rax
8cc4(4): shr $0x6,%rax
8cc8(4): mov 0x0(%rsp,%rax,8),%rax
8ccc(4): bt %rbx,%rax
8cd0(2): jb 0x80(%rip)
8cd2(2): mov %bl,(%rdx)
8cd4(4): add $0x1,%r12
8cd8(4): mov 0x8(%rbp),%rax
8cdc(4): cmp 0x10(%rbp),%rax
8ce0(6): jnb 0xa0(%rip)
8ce6(4): lea 0x1(%rax),%rdx
8cea(4): mov %rdx,0x8(%rbp)
8cee(3): movzx (%rax),%ebx
8cf1(2): test %ebx,%ebx
8cf3(2): jns 0xffffffbd(%rip)
8cf5(3): test %r12,%r12
8cf8(2): jnz 0xffffffb8(%rip)
8cfa(7): mov $0xffffffff,%r12
8d01(2): jmp 0x5a(%rip)
8d03(5): nop 0x0(%rax,%rax,1)
8d08(3): test %r15,%r15
8d0b(6): jz 0x85(%rip)
8d11(a): mov $0x6148914691236517203,%rax
8d1b(3): cmp %rax,%r12
8d1e(6): jnbe 0x86(%rip)
8d24(3): mov %r12,%rax
8d27(3): shr $0x1,%rax
8d2a(5): lea 0x1(%r12,%rax,1),%r14
8d2f(3): mov %r15,%rdi
8d32(3): mov %r14,%rsi
8d35(5): call 0x100b(%rip)
8d3a(2): test %ebx,%ebx
8d3c(3): mov %rax,%r15
8d3f(4): lea 0x0(%r15,%r12,1),%rdx
8d43(6): jns 0xffffff7e(%rip)
8d49(7): nop 0x0(%rax)
8d50(3): mov $0x0,(%rdx)
8d53(4): mov %r15,0x8(%r13)
8d57(4): mov %r14,0x0(%r13)
8d5b(5): mov 0x28(%rsp),%rdi
8d60(9): xor $0x28,%rdi
8d69(3): mov %r12,%rax
8d6c(2): jnz 0x3d(%rip)
8d6e(4): add $0x38,%rsp
8d72(1): pop %rbx
8d73(1): pop %rbp
8d74(2): pop %r12
8d76(2): pop %r13
8d78(2): pop %r14
8d7a(2): pop %r15
8d7c(1): ret near (%rsp)
8d7d(3): nop (%rax)
8d80(3): mov %rbp,%rdi
8d83(5): call 0xffff902d(%rip)
8d88(2): mov %eax,%ebx
8d8a(5): jmp 0xffffff15(%rip)
8d8f(1): nop 
8d90(3): test %r12,%r12
8d93(5): mov $0x80,%ecx
8d98(4): cmovne %r12,%rcx
8d9c(3): test %rcx,%rcx
8d9f(3): mov %rcx,%r14
8da2(2): jns 0xffffff8d(%rip)
8da4(5): call 0x118c(%rip)
8da9(5): call 0xffff9177(%rip)

"readtokens" :
8db0(2): push %r15
8db2(2): push %r14
8db4(2): push %r13
8db6(2): push %r12
8db8(1): push %rbp
8db9(1): push %rbx
8dba(4): lea 0x1(%rsi),%rbp
8dbe(4): sub $0x68,%rsp
8dc2(9): mov $0x28,%rax
8dcb(5): mov %rax,0x58(%rsp)
8dd0(2): xor %eax,%eax
8dd2(5): mov %rdx,0x10(%rsp)
8dd7(3): test %rsi,%rsi
8dda(5): mov $0x40,%eax
8ddf(5): mov $0x8,%edx
8de4(4): cmove %rax,%rbp
8de8(5): mov %rdi,0x8(%rsp)
8ded(3): mov %rdx,%rax
8df0(5): mov %rcx,0x18(%rsp)
8df5(5): mov %r8,0x38(%rsp)
8dfa(3): mul %rax,%rbp,%rdx
8dfd(5): mov %r9,0x30(%rsp)
8e02(6): jo 0x1ce(%rip)
8e08(2): xor %ecx,%ecx
8e0a(3): test %rax,%rax
8e0d(6): js 0x1be(%rip)
8e13(3): test %rcx,%rcx
8e16(6): jnz 0x1b5(%rip)
8e1c(8): lea 0x0(,%rbp,8),%rbx
8e24(3): mov %rbx,%rdi
8e27(5): call 0xeb9(%rip)
8e2c(3): mov %rbx,%rdi
8e2f(3): mov %rax,%r12
8e32(2): xor %ebx,%ebx
8e34(5): call 0xeac(%rip)
8e39(3): mov %rax,%r13
8e3c(5): lea 0x40(%rsp),%rax
8e41(9): mov $0x0,0x40(%rsp)
8e4a(9): mov $0x0,0x48(%rsp)
8e53(5): mov %rax,0x20(%rsp)
8e58(2): jmp 0x44(%rip)
8e5a(6): nop 0x0(%rax,%rax,1)
8e60(4): cmp $0xffffffff,%r14
8e64(6): jz 0xb8(%rip)
8e6a(3): mov %r14,%r15
8e6d(4): add $0x1,%r15
8e71(6): js 0x15a(%rip)
8e77(3): mov %r15,%rdi
8e7a(5): call 0xe66(%rip)
8e7f(5): mov 0x48(%rsp),%rsi
8e84(5): mov %r14,0x0(%r13,%rbx,8)
8e89(3): mov %r15,%rdx
8e8c(3): mov %rax,%rdi
8e8f(5): call 0xffff9211(%rip)
8e94(4): mov %rax,0x0(%r12,%rbx,8)
8e98(4): add $0x1,%rbx
8e9c(5): mov 0x20(%rsp),%rcx
8ea1(5): mov 0x18(%rsp),%rdx
8ea6(5): mov 0x10(%rsp),%rsi
8eab(5): mov 0x8(%rsp),%rdi
8eb0(5): call 0xfffffd30(%rip)
8eb5(3): cmp %rbp,%rbx
8eb8(3): mov %rax,%r14
8ebb(2): jb 0xffffffa5(%rip)
8ebd(3): test %r12,%r12
8ec0(6): jz 0xb8(%rip)
8ec6(a): mov $0x768614336404564649,%rax
8ed0(3): cmp %rax,%rbp
8ed3(6): jnbe 0xf8(%rip)
8ed9(3): mov %rbp,%rax
8edc(3): mov %r12,%rdi
8edf(3): shr $0x1,%rax
8ee2(5): lea 0x1(%rbp,%rax,1),%rbp
8ee7(8): lea 0x0(,%rbp,8),%rdx
8eef(3): mov %rdx,%rsi
8ef2(5): mov %rdx,0x28(%rsp)
8ef7(5): call 0xe49(%rip)
8efc(5): mov 0x28(%rsp),%rdx
8f01(3): mov %rax,%r12
8f04(3): mov %r13,%rdi
8f07(3): mov %rdx,%rsi
8f0a(5): call 0xe36(%rip)
8f0f(4): cmp $0xffffffff,%r14
8f13(3): mov %rax,%r13
8f16(6): jnz 0xffffff54(%rip)
8f1c(8): mov $0x0,0x0(%r12,%rbx,8)
8f24(5): mov 0x48(%rsp),%rdi
8f29(9): mov $0x0,0x0(%r13,%rbx,8)
8f32(5): call 0xffff8e9e(%rip)
8f37(6): cmp $0x0,0x30(%rsp)
8f3d(5): mov 0x38(%rsp),%rax
8f42(3): mov %r12,(%rax)
8f45(2): jz 0x7c(%rip)
8f47(5): mov 0x30(%rsp),%rax
8f4c(3): mov %r13,(%rax)
8f4f(5): mov 0x58(%rsp),%rcx
8f54(9): xor $0x28,%rcx
8f5d(3): mov %rbx,%rax
8f60(2): jnz 0x7a(%rip)
8f62(4): add $0x68,%rsp
8f66(1): pop %rbx
8f67(1): pop %rbp
8f68(2): pop %r12
8f6a(2): pop %r13
8f6c(2): pop %r14
8f6e(2): pop %r15
8f70(1): ret near (%rsp)
8f71(7): nop 0x0(%rax)
8f78(3): test %rbp,%rbp
8f7b(5): mov $0x10,%eax
8f80(5): mov $0x8,%edx
8f85(4): cmove %rax,%rbp
8f89(3): mov %rdx,%rax
8f8c(2): xor %esi,%esi
8f8e(3): mul %rax,%rbp,%rdx
8f91(2): jo 0x4e(%rip)
8f93(3): test %rax,%rax
8f96(2): js 0x35(%rip)
8f98(3): test %rsi,%rsi
8f9b(2): jnz 0x30(%rip)
8f9d(8): lea 0x0(,%rbp,8),%rdx
8fa5(2): xor %edi,%edi
8fa7(3): mov %rdx,%rsi
8faa(5): mov %rdx,0x28(%rsp)
8faf(5): call 0xd91(%rip)
8fb4(5): mov 0x28(%rsp),%rdx
8fb9(3): mov %rax,%r12
8fbc(5): jmp 0xffffff48(%rip)
8fc1(3): mov %r13,%rdi
8fc4(5): call 0xffff8e0c(%rip)
8fc9(2): jmp 0xffffff86(%rip)
8fcb(5): call 0xf65(%rip)
8fd0(5): mov $0x1,%ecx
8fd5(5): jmp 0xfffffe35(%rip)
8fda(5): call 0xffff8f46(%rip)
8fdf(5): mov $0x1,%esi
8fe4(2): jmp 0xffffffaf(%rip)

"safe_write" :
8ff0(2): push %r13
8ff2(2): push %r12
8ff4(3): mov %edi,%r13d
8ff7(1): push %rbp
8ff8(1): push %rbx
8ff9(3): mov %rsi,%r12
8ffc(3): mov %rdx,%rbx
8fff(4): sub $0x8,%rsp
9003(5): nop 0x0(%rax,%rax,1)
9008(3): mov %rbx,%rdx
900b(3): mov %r12,%rsi
900e(3): mov %r13d,%edi
9011(5): call 0xffff8e7f(%rip)
9016(3): test %rax,%rax
9019(3): mov %rax,%rbp
901c(2): jns 0x24(%rip)
901e(5): call 0xffff8dd2(%rip)
9023(2): mov (%rax),%eax
9025(3): cmp $0x4,%eax
9028(2): jz 0xffffffe0(%rip)
902a(3): cmp $0x16,%eax
902d(2): jnz 0x13(%rip)
902f(7): cmp $0x7ff00000,%rbx
9036(2): jbe 0xa(%rip)
9038(5): mov $0x7ff00000,%ebx
903d(2): jmp 0xffffffcb(%rip)
903f(1): nop 
9040(4): add $0x8,%rsp
9044(3): mov %rbp,%rax
9047(1): pop %rbx
9048(1): pop %rbp
9049(2): pop %r12
904b(2): pop %r13
904d(1): ret near (%rsp)

"strnlen1" :
9050(1): push %rbp
9051(1): push %rbx
9052(3): mov %rsi,%rdx
9055(3): mov %rsi,%rbx
9058(2): xor %esi,%esi
905a(3): mov %rdi,%rbp
905d(4): sub $0x8,%rsp
9061(5): call 0xffff8fbf(%rip)
9066(3): mov %rax,%rdx
9069(3): sub %rbp,%rdx
906c(4): add $0x1,%rdx
9070(3): test %rax,%rax
9073(3): mov %rbx,%rax
9076(4): cmovne %rdx,%rax
907a(4): add $0x8,%rsp
907e(1): pop %rbx
907f(1): pop %rbp
9080(1): ret near (%rsp)

"trim2" :
9090(2): push %r15
9092(2): push %r14
9094(2): push %r13
9096(2): push %r12
9098(3): mov %esi,%r12d
909b(1): push %rbp
909c(1): push %rbx
909d(4): sub $0x78,%rsp
90a1(9): mov $0x28,%rax
90aa(5): mov %rax,0x68(%rsp)
90af(2): xor %eax,%eax
90b1(5): call 0xffff91ef(%rip)
90b6(3): test %rax,%rax
90b9(6): jz 0x5be(%rip)
90bf(3): mov %rax,%rbx
90c2(5): call 0xffff8e2e(%rip)
90c7(4): cmp $0x1,%rax
90cb(6): jbe 0x305(%rip)
90d1(3): test %r12d,%r12d
90d4(6): jnz 0x154(%rip)
90da(5): mov %rbx,0x38(%rsp)
90df(3): mov %rbx,%rdx
90e2(2): mov (%rdx),%ecx
90e4(4): add $0x4,%rdx
90e8(6): lea 0xfefefeff(%rcx),%eax
90ee(2): not %ecx
90f0(2): and %ecx,%eax
90f2(5): and $0x80808080,%eax
90f7(2): jz 0xffffffeb(%rip)
90f9(2): mov %eax,%ecx
90fb(5): mov $0x0,0x28(%rsp)
9100(9): mov $0x0,0x2c(%rsp)
9109(3): shr $0x10,%ecx
910c(5): test $0x8080,%eax
9111(5): mov $0x0,0x34(%rsp)
9116(3): cmove %ecx,%eax
9119(4): lea 0x2(%rdx),%rcx
911d(2): mov %eax,%esi
911f(4): cmove %rcx,%rdx
9123(3): add %al,%sil
9126(3): mov %rbx,%rsi
9129(4): sbb $0x3,%rdx
912d(3): xor %r15d,%r15d
9130(3): cmp %rbx,%rdx
9133(3): mov %rdx,%r14
9136(5): mov %rdx,0x20(%rsp)
913b(6): jbe 0x265(%rip)
9141(5): lea 0x20(%rsp),%rbp
9146(4): lea 0xc(%rbp),%rax
914a(5): mov %rax,0x18(%rsp)
914f(2): jmp 0x3f(%rip)
9151(7): nop 0x0(%rax)
9158(5): cmp $0x0,0x48(%rsp)
915d(6): mov $0x1,%r15d
9163(2): jz 0x14(%rip)
9165(4): mov 0x4c(%rsp),%edi
9169(3): xor %r15d,%r15d
916c(5): call 0xffff9034(%rip)
9171(2): test %eax,%eax
9173(4): setz %r15b
9177(4): lea 0x0(%r12,%r13,1),%rsi
917b(5): mov $0x0,0x34(%rsp)
9180(3): cmp %r14,%rsi
9183(5): mov %rsi,0x38(%rsp)
9188(6): jnb 0x208(%rip)
918e(5): cmp $0x0,0x28(%rsp)
9193(6): jnz 0x32e(%rip)
9199(3): movzx (%rsi),%ecx
919c(7): lea 0x77fd(%rip),%rdi
91a3(2): mov %ecx,%eax
91a5(3): shr $0x5,%al
91a8(3): and $0x7,%eax
91ab(3): mov 0x0(%rdi,%rax,4),%eax
91ae(3): bt %ecx,%eax
91b1(6): jnb 0x2ef(%rip)
91b7(9): mov $0x1,0x40(%rsp)
91c0(3): movsx (%rsi),%eax
91c3(6): mov $0x1,%r13d
91c9(5): mov 0x38(%rsp),%r12
91ce(5): mov 0x20(%rsp),%r14
91d3(5): mov $0x1,0x48(%rsp)
91d8(4): mov %eax,0x4c(%rsp)
91dc(3): test %r15d,%r15d
91df(5): mov $0x1,0x34(%rsp)
91e4(6): jz 0xffffff74(%rip)
91ea(4): cmp $0x1,%r15d
91ee(6): jz 0x352(%rip)
91f4(4): cmp $0x2,%r15d
91f8(6): jnz 0x418(%rip)
91fe(5): cmp $0x0,0x48(%rsp)
9203(6): jz 0x40d(%rip)
9209(4): mov 0x4c(%rsp),%edi
920d(5): call 0xffff8f93(%rip)
9212(2): test %eax,%eax
9214(5): mov $0x1,%eax
9219(4): cmove %eax,%r15d
921d(5): jmp 0xffffff5a(%rip)
9222(6): nop 0x0(%rax,%rax,1)
9228(5): mov %rbx,0x38(%rsp)
922d(3): mov %rbx,%rdx
9230(2): mov (%rdx),%ecx
9232(4): add $0x4,%rdx
9236(6): lea 0xfefefeff(%rcx),%eax
923c(2): not %ecx
923e(2): and %ecx,%eax
9240(5): and $0x80808080,%eax
9245(2): jz 0xffffffeb(%rip)
9247(2): mov %eax,%ecx
9249(5): mov $0x0,0x28(%rsp)
924e(9): mov $0x0,0x2c(%rsp)
9257(3): shr $0x10,%ecx
925a(5): test $0x8080,%eax
925f(5): mov $0x0,0x34(%rsp)
9264(3): cmove %ecx,%eax
9267(4): lea 0x2(%rdx),%rcx
926b(3): mov %rbx,%r15
926e(2): mov %eax,%esi
9270(4): cmove %rcx,%rdx
9274(3): add %al,%sil
9277(4): sbb $0x3,%rdx
927b(3): cmp %rbx,%rdx
927e(5): mov %rdx,0x20(%rsp)
9283(6): jbe 0x35d(%rip)
9289(5): lea 0x20(%rsp),%rbp
928e(7): lea 0x770b(%rip),%r14
9295(4): lea 0xc(%rbp),%r13
9299(2): jmp 0x6e(%rip)
929b(5): nop 0x0(%rax,%rax,1)
92a0(4): movzx (%r15),%ecx
92a4(2): mov %ecx,%eax
92a6(3): shr $0x5,%al
92a9(3): and $0x7,%eax
92ac(4): mov 0x0(%r14,%rax,4),%eax
92b0(3): bt %ecx,%eax
92b3(6): jnb 0x2c5(%rip)
92b9(9): mov $0x1,0x40(%rsp)
92c2(4): movsx (%r15),%eax
92c6(5): mov 0x38(%rsp),%r15
92cb(5): mov $0x1,0x48(%rsp)
92d0(5): mov $0x1,0x34(%rsp)
92d5(4): mov %eax,0x4c(%rsp)
92d9(4): mov 0x4c(%rsp),%edi
92dd(5): call 0xffff8ec3(%rip)
92e2(2): test %eax,%eax
92e4(6): jz 0x2fc(%rip)
92ea(5): add 0x40(%rsp),%r15
92ef(5): mov 0x20(%rsp),%rdx
92f4(5): mov $0x0,0x34(%rsp)
92f9(3): cmp %rdx,%r15
92fc(5): mov %r15,0x38(%rsp)
9301(6): jnb 0x2df(%rip)
9307(5): cmp $0x0,0x28(%rsp)
930c(2): jz 0xffffff94(%rip)
930e(4): lea 0xc(%rbp),%rcx
9312(4): lea 0x2c(%rbp),%rdi
9316(3): sub %r15,%rdx
9319(3): mov %r15,%rsi
931c(5): call 0xcd4(%rip)
9321(4): cmp $0xffffffff,%rax
9325(5): mov %rax,0x40(%rsp)
932a(6): jz 0x29e(%rip)
9330(4): cmp $0xfffffffe,%rax
9334(5): mov 0x38(%rsp),%r15
9339(6): jz 0x307(%rip)
933f(3): test %rax,%rax
9342(2): jnz 0x21(%rip)
9344(9): mov $0x1,0x40(%rsp)
934d(4): cmp $0x0,(%r15)
9351(6): jnz 0x34f(%rip)
9357(4): mov 0x4c(%rsp),%edx
935b(2): test %edx,%edx
935d(6): jnz 0x33e(%rip)
9363(4): lea 0xc(%rbp),%rdi
9367(5): mov $0x1,0x48(%rsp)
936c(5): call 0xffff8f44(%rip)
9371(2): test %eax,%eax
9373(6): jz 0x2ed(%rip)
9379(5): mov $0x0,0x28(%rsp)
937e(5): mov $0x1,0x34(%rsp)
9383(5): jmp 0xffffff56(%rip)
9388(8): nop 0x0(%rax,%rax,1)
9390(4): cmp $0x2,%r15d
9394(2): jnz 0xc(%rip)
9396(5): mov 0x8(%rsp),%rax
939b(3): mov $0x0,(%rax)
939e(2): nop 
93a0(3): mov %rbx,%rax
93a3(5): mov 0x68(%rsp),%rbx
93a8(9): xor $0x28,%rbx
93b1(6): jnz 0x2c1(%rip)
93b7(4): add $0x78,%rsp
93bb(1): pop %rbx
93bc(1): pop %rbp
93bd(2): pop %r12
93bf(2): pop %r13
93c1(2): pop %r14
93c3(2): pop %r15
93c5(1): ret near (%rsp)
93c6(a): nop 0x0(%rax,%rax,1)
93d0(3): test %r12d,%r12d
93d3(2): jz 0x53(%rip)
93d5(3): movzx (%rbx),%ebp
93d8(3): test %bpl,%bpl
93db(6): jz 0x28f(%rip)
93e1(5): call 0xffff8eef(%rip)
93e6(3): mov %rbx,%r13
93e9(3): mov (%rax),%rax
93ec(2): jmp 0x12(%rip)
93ee(2): nop 
93f0(4): add $0x1,%r13
93f4(5): movzx 0x0(%r13),%ebp
93f9(3): test %bpl,%bpl
93fc(2): jz 0x9(%rip)
93fe(5): test $0x20,0x1(%rax,%rbp,2)
9403(2): jnz 0xffffffed(%rip)
9405(3): mov %r13,%rdi
9408(5): call 0xffff8af8(%rip)
940d(4): lea 0x1(%rax),%rdx
9411(3): mov %r13,%rsi
9414(3): mov %rbx,%rdi
9417(5): call 0xffff8db9(%rip)
941c(4): cmp $0x1,%r12d
9420(6): jz 0xffffff80(%rip)
9426(3): mov %rbx,%rdx
9429(2): mov (%rdx),%ecx
942b(4): add $0x4,%rdx
942f(6): lea 0xfefefeff(%rcx),%eax
9435(2): not %ecx
9437(2): and %ecx,%eax
9439(5): and $0x80808080,%eax
943e(2): jz 0xffffffeb(%rip)
9440(2): mov %eax,%ecx
9442(3): shr $0x10,%ecx
9445(5): test $0x8080,%eax
944a(3): cmove %ecx,%eax
944d(4): lea 0x2(%rdx),%rcx
9451(2): mov %eax,%esi
9453(4): cmove %rcx,%rdx
9457(3): add %al,%sil
945a(4): sbb $0x3,%rdx
945e(4): lea 0xffffffff(%rdx),%rbp
9462(3): cmp %rbp,%rbx
9465(6): jnbe 0xffffff3b(%rip)
946b(5): call 0xffff8e65(%rip)
9470(3): mov (%rax),%rdx
9473(2): jmp 0x16(%rip)
9475(3): nop (%rax)
9478(4): mov $0x0,0x0(%rbp)
947c(4): sub $0x1,%rbp
9480(3): cmp %rbp,%rbx
9483(6): jnbe 0xffffff1d(%rip)
9489(4): movzx 0x0(%rbp),%eax
948d(5): test $0x20,0x1(%rdx,%rax,2)
9492(2): jnz 0xffffffe6(%rip)
9494(5): jmp 0xffffff0c(%rip)
9499(7): nop 0x0(%rax)
94a0(5): mov 0x18(%rsp),%rdi
94a5(5): mov %rsi,0x10(%rsp)
94aa(5): call 0xffff8e06(%rip)
94af(2): test %eax,%eax
94b1(6): jz 0x1cb(%rip)
94b7(5): mov 0x10(%rsp),%rsi
94bc(5): mov $0x1,0x28(%rsp)
94c1(4): lea 0xc(%rbp),%rcx
94c5(3): mov %r14,%rdx
94c8(4): lea 0x2c(%rbp),%rdi
94cc(3): sub %rsi,%rdx
94cf(5): call 0xb21(%rip)
94d4(4): cmp $0xffffffff,%rax
94d8(5): mov %rax,0x40(%rsp)
94dd(6): jz 0xc3(%rip)
94e3(4): cmp $0xfffffffe,%rax
94e7(5): mov 0x38(%rsp),%r12
94ec(6): jz 0x134(%rip)
94f2(3): test %rax,%rax
94f5(2): jnz 0x22(%rip)
94f7(9): mov $0x1,0x40(%rsp)
9500(5): cmp $0x0,(%r12)
9505(6): jnz 0x19b(%rip)
950b(4): mov 0x4c(%rsp),%eax
950f(2): test %eax,%eax
9511(6): jnz 0x18a(%rip)
9517(4): lea 0xc(%rbp),%rdi
951b(5): mov $0x1,0x48(%rsp)
9520(5): call 0xffff8d90(%rip)
9525(2): test %eax,%eax
9527(5): mov 0x20(%rsp),%r14
952c(2): jz 0x7(%rip)
952e(5): mov $0x0,0x28(%rsp)
9533(5): mov 0x40(%rsp),%r13
9538(5): jmp 0xfffffca4(%rip)
953d(3): nop (%rax)
9540(5): cmp $0x0,0x48(%rsp)
9545(6): jz 0xfffffc32(%rip)
954b(4): mov 0x4c(%rsp),%edi
954f(5): call 0xffff8c51(%rip)
9554(5): mov 0x8(%rsp),%rsi
9559(2): test %eax,%eax
955b(5): mov $0x2,%eax
9560(4): cmovne %eax,%r15d
9564(4): cmovne %r12,%rsi
9568(5): mov %rsi,0x8(%rsp)
956d(5): jmp 0xfffffc0a(%rip)
9572(6): nop 0x0(%rax,%rax,1)
9578(3): mov %r13,%rdi
957b(5): mov %rdx,0x10(%rsp)
9580(5): call 0xffff8d30(%rip)
9585(2): test %eax,%eax
9587(5): mov 0x10(%rsp),%rdx
958c(6): jz 0xf0(%rip)
9592(5): mov $0x1,0x28(%rsp)
9597(5): jmp 0xfffffd77(%rip)
959c(4): nop 0x0(%rax)
95a0(9): mov $0x1,0x40(%rsp)
95a9(5): mov $0x0,0x48(%rsp)
95ae(6): mov $0x1,%r13d
95b4(5): mov 0x38(%rsp),%r12
95b9(5): mov 0x20(%rsp),%r14
95be(5): jmp 0xfffffc1e(%rip)
95c3(5): nop 0x0(%rax,%rax,1)
95c8(5): mov 0x38(%rsp),%r15
95cd(9): mov $0x1,0x40(%rsp)
95d6(5): mov $0x0,0x48(%rsp)
95db(5): mov $0x1,0x34(%rsp)
95e0(3): mov %r15,%rdi
95e3(5): call 0xffff891d(%rip)
95e8(4): lea 0x1(%rax),%rdx
95ec(3): mov %r15,%rsi
95ef(3): mov %rbx,%rdi
95f2(5): call 0xffff8bde(%rip)
95f7(4): cmp $0x1,%r12d
95fb(6): jz 0xfffffda5(%rip)
9601(5): jmp 0xfffffad9(%rip)
9606(a): nop 0x0(%rax,%rax,1)
9610(6): mov $0x1,%r15d
9616(5): jmp 0xfffffb61(%rip)
961b(5): nop 0x0(%rax,%rax,1)
9620(5): mov 0x20(%rsp),%r14
9625(5): mov $0x0,0x48(%rsp)
962a(3): mov %r14,%r13
962d(3): sub %r12,%r13
9630(5): mov %r13,0x40(%rsp)
9635(5): jmp 0xfffffba7(%rip)
963a(6): nop 0x0(%rax,%rax,1)
9640(5): mov 0x20(%rsp),%rax
9645(5): mov $0x0,0x48(%rsp)
964a(5): mov $0x1,0x34(%rsp)
964f(3): sub %r15,%rax
9652(5): mov %rax,0x40(%rsp)
9657(2): jmp 0xffffff89(%rip)
9659(7): nop 0x0(%rax)
9660(5): mov $0x1,0x34(%rsp)
9665(5): jmp 0xfffffc74(%rip)
966a(3): mov %rbx,%r13
966d(5): jmp 0xfffffd98(%rip)
9672(5): call 0xffff88ae(%rip)
9677(5): call 0x8b9(%rip)
967c(7): lea 0x6f6d(%rip),%rcx
9683(7): lea 0x6f3e(%rip),%rsi
968a(7): lea 0x69f9(%rip),%rdi
9691(5): mov $0x8e,%edx
9696(5): call 0xffff894a(%rip)
969b(5): call 0xffff8c98(%rip)
96a0(7): lea 0x6f49(%rip),%rcx
96a7(7): lea 0x6f1a(%rip),%rsi
96ae(7): lea 0x69ec(%rip),%rdi
96b5(5): mov $0xa9,%edx
96ba(5): call 0xffff8926(%rip)

"version_etc_arn" :
96c0(2): push %r15
96c2(2): push %r14
96c4(2): push %r13
96c6(2): push %r12
96c8(3): mov %r9,%r12
96cb(1): push %rbp
96cc(1): push %rbx
96cd(3): mov %rdi,%rbp
96d0(3): mov %r8,%rbx
96d3(4): sub $0x28,%rsp
96d7(3): test %rsi,%rsi
96da(6): jz 0x11e(%rip)
96e0(3): mov %rdx,%r8
96e3(7): lea 0x6f18(%rip),%rdx
96ea(3): mov %rcx,%r9
96ed(2): xor %eax,%eax
96ef(3): mov %rsi,%rcx
96f2(5): mov $0x1,%esi
96f7(5): call 0xffff8b59(%rip)
96fc(7): lea 0x6f12(%rip),%rsi
9703(2): xor %edi,%edi
9705(5): mov $0x5,%edx
970a(5): call 0xffff87d6(%rip)
970f(7): lea 0x722a(%rip),%rdx
9716(3): mov %rax,%rcx
9719(6): mov $0x7e3,%r8d
971f(5): mov $0x1,%esi
9724(3): mov %rbp,%rdi
9727(2): xor %eax,%eax
9729(5): call 0xffff8b27(%rip)
972e(7): lea 0x6f6b(%rip),%rsi
9735(2): xor %edi,%edi
9737(5): mov $0x5,%edx
973c(5): call 0xffff87a4(%rip)
9741(3): mov %rbp,%rsi
9744(3): mov %rax,%rdi
9747(5): call 0xffff8909(%rip)
974c(4): cmp $0x9,%r12
9750(6): jnbe 0x340(%rip)
9756(7): lea 0x71a3(%rip),%rdx
975d(4): movsxd 0x0(%rdx,%r12,4),%rax
9761(3): add %rdx,%rax
9764(2): jmp %rax
9766(a): nop 0x0(%rax,%rax,1)
9770(4): mov 0x38(%rbx),%r9
9774(4): mov 0x10(%rbx),%rax
9778(7): lea 0x7091(%rip),%rsi
977f(4): mov 0x8(%rbx),%r8
9783(5): mov $0x5,%edx
9788(2): xor %edi,%edi
978a(4): mov 0x30(%rbx),%r13
978e(4): mov 0x28(%rbx),%r12
9792(5): mov %r9,0x10(%rsp)
9797(4): mov 0x20(%rbx),%r15
979b(4): mov 0x18(%rbx),%r14
979f(4): mov %rax,(%rsp)
97a3(5): mov %r8,0x8(%rsp)
97a8(3): mov (%rbx),%rbx
97ab(5): call 0xffff8735(%rip)
97b0(4): sub $0x8,%rsp
97b4(5): mov 0x18(%rsp),%r9
97b9(3): mov %rax,%rdx
97bc(3): mov %rbx,%rcx
97bf(5): mov $0x1,%esi
97c4(3): mov %rbp,%rdi
97c7(2): xor %eax,%eax
97c9(2): push %r9
97cb(2): push %r13
97cd(2): push %r12
97cf(2): push %r15
97d1(2): push %r14
97d3(5): mov 0x30(%rsp),%r9
97d8(5): mov 0x38(%rsp),%r8
97dd(5): call 0xffff8a73(%rip)
97e2(4): add $0x30,%rsp
97e6(4): add $0x28,%rsp
97ea(1): pop %rbx
97eb(1): pop %rbp
97ec(2): pop %r12
97ee(2): pop %r13
97f0(2): pop %r14
97f2(2): pop %r15
97f4(1): ret near (%rsp)
97f5(3): nop (%rax)
97f8(3): mov %rcx,%r8
97fb(3): mov %rdx,%rcx
97fe(7): lea 0x6e09(%rip),%rdx
9805(5): mov $0x1,%esi
980a(2): xor %eax,%eax
980c(5): call 0xffff8a44(%rip)
9811(5): jmp 0xfffffeeb(%rip)
9816(a): nop 0x0(%rax,%rax,1)
9820(4): mov 0x40(%rbx),%r10
9824(4): mov 0x38(%rbx),%r9
9828(7): lea 0x7011(%rip),%rsi
982f(4): mov 0x10(%rbx),%rax
9833(4): mov 0x8(%rbx),%r8
9837(5): mov $0x5,%edx
983c(4): mov 0x30(%rbx),%r13
9840(4): mov 0x28(%rbx),%r12
9844(4): mov 0x20(%rbx),%r15
9848(4): mov 0x18(%rbx),%r14
984c(3): mov (%rbx),%rbx
984f(5): mov %r10,0x18(%rsp)
9854(5): mov %r9,0x10(%rsp)
9859(4): mov %rax,(%rsp)
985d(5): mov %r8,0x8(%rsp)
9862(2): xor %edi,%edi
9864(5): call 0xffff867c(%rip)
9869(5): mov 0x18(%rsp),%r10
986e(2): push %r10
9870(5): jmp 0xffffff44(%rip)
9875(3): nop (%rax)
9878(3): mov (%rbx),%rbx
987b(7): lea 0x6d97(%rip),%rsi
9882(5): mov $0x5,%edx
9887(2): xor %edi,%edi
9889(5): call 0xffff8657(%rip)
988e(4): add $0x28,%rsp
9892(3): mov %rbx,%rcx
9895(3): mov %rbp,%rdi
9898(1): pop %rbx
9899(1): pop %rbp
989a(2): pop %r12
989c(2): pop %r13
989e(2): pop %r14
98a0(2): pop %r15
98a2(3): mov %rax,%rdx
98a5(5): mov $0x1,%esi
98aa(2): xor %eax,%eax
98ac(5): jmp 0xffff89a4(%rip)
98b1(7): nop 0x0(%rax)
98b8(4): mov 0x8(%rbx),%r12
98bc(7): lea 0x6d66(%rip),%rsi
98c3(3): mov (%rbx),%rbx
98c6(5): mov $0x5,%edx
98cb(2): xor %edi,%edi
98cd(5): call 0xffff8613(%rip)
98d2(4): add $0x28,%rsp
98d6(3): mov %r12,%r8
98d9(3): mov %rbx,%rcx
98dc(3): mov %rbp,%rdi
98df(3): mov %rax,%rdx
98e2(5): mov $0x1,%esi
98e7(1): pop %rbx
98e8(1): pop %rbp
98e9(2): pop %r12
98eb(2): pop %r13
98ed(2): pop %r14
98ef(2): pop %r15
98f1(2): xor %eax,%eax
98f3(5): jmp 0xffff895d(%rip)
98f8(8): nop 0x0(%rax,%rax,1)
9900(4): mov 0x10(%rbx),%r13
9904(4): mov 0x8(%rbx),%r12
9908(7): lea 0x6d31(%rip),%rsi
990f(3): mov (%rbx),%rbx
9912(5): mov $0x5,%edx
9917(2): xor %edi,%edi
9919(5): call 0xffff85c7(%rip)
991e(4): add $0x28,%rsp
9922(3): mov %r13,%r9
9925(3): mov %r12,%r8
9928(3): mov %rbx,%rcx
992b(3): mov %rbp,%rdi
992e(3): mov %rax,%rdx
9931(1): pop %rbx
9932(1): pop %rbp
9933(2): pop %r12
9935(2): pop %r13
9937(2): pop %r14
9939(2): pop %r15
993b(5): mov $0x1,%esi
9940(2): xor %eax,%eax
9942(5): jmp 0xffff890e(%rip)
9947(9): nop 0x0(%rax,%rax,1)
9950(7): lea 0x6e19(%rip),%rsi
9957(5): mov $0x5,%edx
995c(2): xor %edi,%edi
995e(4): mov 0x18(%rbx),%r14
9962(4): mov 0x10(%rbx),%r13
9966(4): mov 0x8(%rbx),%r12
996a(3): mov (%rbx),%rbx
996d(5): call 0xffff8573(%rip)
9972(4): sub $0x8,%rsp
9976(2): push %r14
9978(3): mov %rax,%rdx
997b(3): mov %r13,%r9
997e(3): mov %r12,%r8
9981(3): mov %rbx,%rcx
9984(3): mov %rbp,%rdi
9987(5): mov $0x1,%esi
998c(2): xor %eax,%eax
998e(5): call 0xffff88c2(%rip)
9993(1): pop %rax
9994(1): pop %rdx
9995(4): add $0x28,%rsp
9999(1): pop %rbx
999a(1): pop %rbp
999b(2): pop %r12
999d(2): pop %r13
999f(2): pop %r14
99a1(2): pop %r15
99a3(1): ret near (%rsp)
99a4(4): nop 0x0(%rax)
99a8(4): mov 0x20(%rbx),%r15
99ac(7): lea 0x6ddd(%rip),%rsi
99b3(5): mov $0x5,%edx
99b8(2): xor %edi,%edi
99ba(4): mov 0x18(%rbx),%r14
99be(4): mov 0x10(%rbx),%r13
99c2(4): mov 0x8(%rbx),%r12
99c6(3): mov (%rbx),%rbx
99c9(5): call 0xffff8517(%rip)
99ce(2): push %r15
99d0(2): jmp 0xffffffa6(%rip)
99d2(6): nop 0x0(%rax,%rax,1)
99d8(4): mov 0x8(%rbx),%r8
99dc(4): mov 0x28(%rbx),%r12
99e0(7): lea 0x6dd1(%rip),%rsi
99e7(4): mov 0x20(%rbx),%r15
99eb(4): mov 0x18(%rbx),%r14
99ef(5): mov $0x5,%edx
99f4(4): mov 0x10(%rbx),%r13
99f8(2): xor %edi,%edi
99fa(3): mov (%rbx),%rbx
99fd(4): mov %r8,(%rsp)
9a01(5): call 0xffff84df(%rip)
9a06(4): sub $0x8,%rsp
9a0a(3): mov %r13,%r9
9a0d(2): push %r12
9a0f(2): push %r15
9a11(2): push %r14
9a13(5): mov 0x20(%rsp),%r8
9a18(3): mov %rbx,%rcx
9a1b(3): mov %rax,%rdx
9a1e(3): mov %rbp,%rdi
9a21(5): mov $0x1,%esi
9a26(2): xor %eax,%eax
9a28(5): call 0xffff8828(%rip)
9a2d(4): add $0x20,%rsp
9a31(4): add $0x28,%rsp
9a35(1): pop %rbx
9a36(1): pop %rbp
9a37(2): pop %r12
9a39(2): pop %r13
9a3b(2): pop %r14
9a3d(2): pop %r15
9a3f(1): ret near (%rsp)
9a40(4): mov 0x10(%rbx),%r9
9a44(4): mov 0x30(%rbx),%r13
9a48(7): lea 0x6d91(%rip),%rsi
9a4f(4): mov 0x28(%rbx),%r12
9a53(4): mov 0x20(%rbx),%r15
9a57(5): mov $0x5,%edx
9a5c(4): mov 0x18(%rbx),%r14
9a60(4): mov 0x8(%rbx),%r8
9a64(2): xor %edi,%edi
9a66(5): mov %r9,0x8(%rsp)
9a6b(3): mov (%rbx),%rbx
9a6e(4): mov %r8,(%rsp)
9a72(5): call 0xffff846e(%rip)
9a77(2): push %r13
9a79(2): push %r12
9a7b(2): push %r15
9a7d(2): push %r14
9a7f(5): mov 0x28(%rsp),%r9
9a84(2): jmp 0xffffff8f(%rip)
9a86(a): nop 0x0(%rax,%rax,1)
9a90(4): mov 0x40(%rbx),%r10
9a94(4): mov 0x38(%rbx),%r9
9a98(5): mov $0x5,%edx
9a9d(4): mov 0x10(%rbx),%rax
9aa1(4): mov 0x8(%rbx),%r8
9aa5(7): lea 0x6dcc(%rip),%rsi
9aac(4): mov 0x30(%rbx),%r13
9ab0(4): mov 0x28(%rbx),%r12
9ab4(4): mov 0x20(%rbx),%r15
9ab8(4): mov 0x18(%rbx),%r14
9abc(5): mov %r10,0x18(%rsp)
9ac1(5): mov %r9,0x10(%rsp)
9ac6(4): mov %rax,(%rsp)
9aca(5): mov %r8,0x8(%rsp)
9acf(3): mov (%rbx),%rbx
9ad2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
9ae0(3): xor %r9d,%r9d
9ae3(4): cmp $0x0,(%r8)
9ae7(2): jz 0x14(%rip)
9ae9(7): nop 0x0(%rax)
9af0(4): add $0x1,%r9
9af4(5): cmp $0x0,0x0(%r8,%r9,8)
9af9(2): jnz 0xfffffff7(%rip)
9afb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
9b00(4): sub $0x68,%rsp
9b04(3): mov %r8,%r10
9b07(3): xor %r9d,%r9d
9b0a(9): mov $0x28,%rax
9b13(5): mov %rax,0x58(%rsp)
9b18(2): xor %eax,%eax
9b1a(3): mov %rsp,%r8
9b1d(3): nop (%rax)
9b20(3): mov (%r10),%eax
9b23(3): cmp $0x2f,%eax
9b26(2): jnbe 0x44(%rip)
9b28(3): mov %eax,%r11d
9b2b(4): add 0x10(%r10),%r11
9b2f(3): add $0x8,%eax
9b32(3): mov %eax,(%r10)
9b35(3): mov (%r11),%rax
9b38(3): test %rax,%rax
9b3b(4): mov %rax,0x0(%r8,%r9,8)
9b3f(2): jz 0xc(%rip)
9b41(4): add $0x1,%r9
9b45(4): cmp $0xa,%r9
9b49(2): jnz 0xffffffd7(%rip)
9b4b(5): call 0xfffffb75(%rip)
9b50(5): mov 0x58(%rsp),%rax
9b55(9): xor $0x28,%rax
9b5e(2): jnz 0x7(%rip)
9b60(4): add $0x68,%rsp
9b64(1): ret near (%rsp)
9b65(5): call 0xffff83bb(%rip)
9b6a(4): mov 0x8(%r10),%r11
9b6e(4): lea 0x8(%r11),%rax
9b72(4): mov %rax,0x8(%r10)
9b76(2): jmp 0xffffffbf(%rip)

"version_etc" :
9b80(1): push %rbp
9b81(1): push %rbx
9b82(6): mov $0x20,%r10d
9b88(3): xor %r11d,%r11d
9b8b(7): sub $0xb8,%rsp
9b92(9): mov $0x28,%rax
9b9b(5): mov %rax,0x78(%rsp)
9ba0(2): xor %eax,%eax
9ba2(8): lea 0xd0(%rsp),%rax
9baa(8): mov %r8,0xa0(%rsp)
9bb2(8): lea 0xd0(%rsp),%rbx
9bba(5): lea 0x20(%rsp),%r8
9bbf(8): mov %r9,0xa8(%rsp)
9bc7(8): mov $0x20,0x8(%rsp)
9bcf(5): mov %rax,0x10(%rsp)
9bd4(8): lea 0x80(%rsp),%rax
9bdc(3): xor %r9d,%r9d
9bdf(5): mov %rax,0x18(%rsp)
9be4(3): mov %rax,%rbp
9be7(9): nop 0x0(%rax,%rax,1)
9bf0(4): cmp $0x2f,%r10d
9bf4(2): jnbe 0x58(%rip)
9bf6(3): mov %r10d,%eax
9bf9(6): mov $0x1,%r11d
9bff(4): add $0x8,%r10d
9c03(3): add %rbp,%rax
9c06(3): mov (%rax),%rax
9c09(3): test %rax,%rax
9c0c(4): mov %rax,0x0(%r8,%r9,8)
9c10(2): jz 0xc(%rip)
9c12(4): add $0x1,%r9
9c16(4): cmp $0xa,%r9
9c1a(2): jnz 0xffffffd6(%rip)
9c1c(3): test %r11b,%r11b
9c1f(2): jnz 0x26(%rip)
9c21(5): call 0xfffffa9f(%rip)
9c26(5): mov 0x78(%rsp),%rax
9c2b(9): xor $0x28,%rax
9c34(2): jnz 0xc(%rip)
9c36(7): add $0xb8,%rsp
9c3d(1): pop %rbx
9c3e(1): pop %rbp
9c3f(1): ret near (%rsp)
9c40(5): call 0xffff82e0(%rip)
9c45(5): mov %r10d,0x8(%rsp)
9c4a(2): jmp 0xffffffd7(%rip)
9c4c(3): mov %rbx,%rax
9c4f(4): add $0x8,%rbx
9c53(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
9c60(1): push %rbx
9c61(7): lea 0x69f4(%rip),%rsi
9c68(5): mov $0x5,%edx
9c6d(2): xor %edi,%edi
9c6f(5): call 0xffff8271(%rip)
9c74(7): lea 0x69f6(%rip),%rdx
9c7b(3): mov %rax,%rsi
9c7e(5): mov $0x1,%edi
9c83(2): xor %eax,%eax
9c85(5): call 0xffff84eb(%rip)
9c8a(7): lea 0x69f6(%rip),%rsi
9c91(5): mov $0x5,%edx
9c96(2): xor %edi,%edi
9c98(5): call 0xffff8248(%rip)
9c9d(7): lea 0x3044(%rip),%rcx
9ca4(7): lea 0x31f0(%rip),%rdx
9cab(3): mov %rax,%rsi
9cae(5): mov $0x1,%edi
9cb3(2): xor %eax,%eax
9cb5(5): call 0xffff84bb(%rip)
9cba(7): mov 0x2093e7(%rip),%rbx
9cc1(7): lea 0x6bf0(%rip),%rsi
9cc8(2): xor %edi,%edi
9cca(5): mov $0x5,%edx
9ccf(5): call 0xffff8211(%rip)
9cd4(3): mov %rbx,%rsi
9cd7(3): mov %rax,%rdi
9cda(1): pop %rbx
9cdb(5): jmp 0xffff8375(%rip)

"xmalloc" :
9ce0(1): push %rbx
9ce1(3): mov %rdi,%rbx
9ce4(5): call 0xffff840c(%rip)
9ce9(3): test %rax,%rax
9cec(2): jnz 0x7(%rip)
9cee(3): test %rbx,%rbx
9cf1(2): jnz 0x4(%rip)
9cf3(1): pop %rbx
9cf4(1): ret near (%rsp)
9cf5(5): call 0x23b(%rip)

"xnmalloc" :
9d00(3): mov %rdi,%rax
9d03(3): mul %rax,%rsi,%rdx
9d06(3): mov %rax,%rdi
9d09(3): seto %al
9d0c(3): test %rdi,%rdi
9d0f(2): js 0xc(%rip)
9d11(3): movzx %al,%eax
9d14(3): test %rax,%rax
9d17(2): jnz 0x4(%rip)
9d19(2): jmp 0xffffffc7(%rip)
9d1b(4): sub $0x8,%rsp
9d1f(5): call 0x211(%rip)

"xrealloc" :
9d40(3): test %rsi,%rsi
9d43(1): push %rbx
9d44(3): mov %rsi,%rbx
9d47(2): jnz 0x7(%rip)
9d49(3): test %rdi,%rdi
9d4c(2): jnz 0x1c(%rip)
9d4e(3): mov %rbx,%rsi
9d51(5): call 0xffff83ff(%rip)
9d56(3): test %rax,%rax
9d59(2): jnz 0x7(%rip)
9d5b(3): test %rbx,%rbx
9d5e(2): jnz 0x13(%rip)
9d60(1): pop %rbx
9d61(1): ret near (%rsp)
9d62(6): nop 0x0(%rax,%rax,1)
9d68(5): call 0xffff8068(%rip)
9d6d(2): xor %eax,%eax
9d6f(1): pop %rbx
9d70(1): ret near (%rsp)
9d71(5): call 0x1bf(%rip)

"xnrealloc" :
9d80(3): mov %rsi,%rax
9d83(3): mul %rax,%rdx,%rdx
9d86(3): mov %rax,%rsi
9d89(3): seto %al
9d8c(3): test %rsi,%rsi
9d8f(2): js 0xc(%rip)
9d91(3): movzx %al,%eax
9d94(3): test %rax,%rax
9d97(2): jnz 0x4(%rip)
9d99(2): jmp 0xffffffa7(%rip)
9d9b(4): sub $0x8,%rsp
9d9f(5): call 0x191(%rip)

"x2nrealloc" :
9db0(3): test %rdi,%rdi
9db3(3): mov %rdx,%r9
9db6(3): mov (%rsi),%rcx
9db9(2): jz 0x37(%rip)
9dbb(2): xor %edx,%edx
9dbd(a): mov $0x6148914691236517204,%rax
9dc7(3): div %r9,%rax
9dca(3): cmp %rcx,%rax
9dcd(2): jbe 0x3e(%rip)
9dcf(3): mov %rcx,%rax
9dd2(3): shr $0x1,%rax
9dd5(5): lea 0x1(%rax,%rcx,1),%rcx
9dda(3): mov %rcx,(%rsi)
9ddd(4): imul %r9,%rcx
9de1(3): mov %rcx,%rsi
9de4(5): jmp 0xffffff5c(%rip)
9de9(7): nop 0x0(%rax)
9df0(3): test %rcx,%rcx
9df3(2): jz 0x25(%rip)
9df5(3): mov %rcx,%rax
9df8(3): mul %rax,%r9,%rdx
9dfb(3): seto %dl
9dfe(3): test %rax,%rax
9e01(3): movzx %dl,%edx
9e04(2): js 0x7(%rip)
9e06(3): test %rdx,%rdx
9e09(2): jz 0xffffffd1(%rip)
9e0b(4): sub $0x8,%rsp
9e0f(5): call 0x121(%rip)
9e14(4): nop 0x0(%rax)
9e18(2): xor %edx,%edx
9e1a(5): mov $0x80,%eax
9e1f(3): xor %r8d,%r8d
9e22(3): div %r9,%rax
9e25(3): test %rax,%rax
9e28(4): setz %r8b
9e2c(4): lea 0x0(%r8,%rax,1),%rcx
9e30(2): jmp 0xffffffc5(%rip)

"x2realloc" :
9e40(3): test %rdi,%rdi
9e43(3): mov (%rsi),%rax
9e46(2): jz 0x2a(%rip)
9e48(a): mov $0x6148914691236517203,%rdx
9e52(3): cmp %rdx,%rax
9e55(2): jnbe 0x2c(%rip)
9e57(3): mov %rax,%rdx
9e5a(3): shr $0x1,%rdx
9e5d(5): lea 0x1(%rdx,%rax,1),%rax
9e62(3): mov %rax,(%rsi)
9e65(3): mov %rax,%rsi
9e68(5): jmp 0xfffffed8(%rip)
9e6d(3): nop (%rax)
9e70(3): test %rax,%rax
9e73(5): mov $0x80,%edx
9e78(4): cmove %rdx,%rax
9e7c(3): test %rax,%rax
9e7f(2): jns 0xffffffe3(%rip)
9e81(4): sub $0x8,%rsp
9e85(5): call 0xab(%rip)

"xzalloc" :
9e90(1): push %rbx
9e91(3): mov %rdi,%rbx
9e94(5): call 0xfffffe4c(%rip)
9e99(3): mov %rbx,%rdx
9e9c(2): xor %esi,%esi
9e9e(3): mov %rax,%rdi
9ea1(1): pop %rbx
9ea2(5): jmp 0xffff814e(%rip)

"xcalloc" :
9eb0(3): mov %rdi,%rax
9eb3(4): sub $0x8,%rsp
9eb7(3): mul %rax,%rsi,%rdx
9eba(3): seto %dl
9ebd(3): test %rax,%rax
9ec0(2): js 0x19(%rip)
9ec2(3): movzx %dl,%edx
9ec5(3): test %rdx,%rdx
9ec8(2): jnz 0x11(%rip)
9eca(5): call 0xffff8196(%rip)
9ecf(3): test %rax,%rax
9ed2(2): jz 0x7(%rip)
9ed4(4): add $0x8,%rsp
9ed8(1): ret near (%rsp)
9ed9(5): call 0x57(%rip)

"xmemdup" :
9ee0(1): push %rbp
9ee1(1): push %rbx
9ee2(3): mov %rdi,%rbp
9ee5(3): mov %rsi,%rdi
9ee8(3): mov %rsi,%rbx
9eeb(4): sub $0x8,%rsp
9eef(5): call 0xfffffdf1(%rip)
9ef4(4): add $0x8,%rsp
9ef8(3): mov %rbx,%rdx
9efb(3): mov %rbp,%rsi
9efe(1): pop %rbx
9eff(1): pop %rbp
9f00(3): mov %rax,%rdi
9f03(5): jmp 0xffff819d(%rip)

"xstrdup" :
9f10(1): push %rbx
9f11(3): mov %rdi,%rbx
9f14(5): call 0xffff7fec(%rip)
9f19(3): mov %rbx,%rdi
9f1c(4): lea 0x1(%rax),%rsi
9f20(1): pop %rbx
9f21(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
9f30(7): lea 0x6a38(%rip),%rsi
9f37(4): sub $0x8,%rsp
9f3b(5): mov $0x5,%edx
9f40(2): xor %edi,%edi
9f42(5): call 0xffff7f9e(%rip)
9f47(6): mov 0x2090d3(%rip),%edi
9f4d(7): lea 0x60b8(%rip),%rdx
9f54(3): mov %rax,%rcx
9f57(2): xor %esi,%esi
9f59(2): xor %eax,%eax
9f5b(5): call 0xffff8285(%rip)
9f60(5): call 0xffff7e80(%rip)

"xmem_cd_iconv" :
9f70(1): push %rbx
9f71(5): call 0x206f(%rip)
9f76(2): test %eax,%eax
9f78(2): mov %eax,%ebx
9f7a(2): js 0x6(%rip)
9f7c(2): mov %ebx,%eax
9f7e(1): pop %rbx
9f7f(1): ret near (%rsp)
9f80(5): call 0xffff7e70(%rip)
9f85(3): cmp $0xc,(%rax)
9f88(2): jnz 0xfffffff4(%rip)
9f8a(5): call 0xffffffa6(%rip)

"xstr_cd_iconv" :
9f90(1): push %rbx
9f91(5): call 0x230f(%rip)
9f96(3): test %rax,%rax
9f99(3): mov %rax,%rbx
9f9c(2): jz 0xc(%rip)
9f9e(3): mov %rbx,%rax
9fa1(1): pop %rbx
9fa2(1): ret near (%rsp)
9fa3(5): nop 0x0(%rax,%rax,1)
9fa8(5): call 0xffff7e48(%rip)
9fad(3): cmp $0xc,(%rax)
9fb0(2): jnz 0xffffffee(%rip)
9fb2(5): call 0xffffff7e(%rip)

"xstr_iconv" :
9fc0(1): push %rbx
9fc1(5): call 0x252f(%rip)
9fc6(3): test %rax,%rax
9fc9(3): mov %rax,%rbx
9fcc(2): jz 0xc(%rip)
9fce(3): mov %rbx,%rax
9fd1(1): pop %rbx
9fd2(1): ret near (%rsp)
9fd3(5): nop 0x0(%rax,%rax,1)
9fd8(5): call 0xffff7e18(%rip)
9fdd(3): cmp $0xc,(%rax)
9fe0(2): jnz 0xffffffee(%rip)
9fe2(5): call 0xffffff4e(%rip)

"rpl_mbrtowc" :
9ff0(2): push %r13
9ff2(2): push %r12
9ff4(3): mov %rsi,%r13
9ff7(1): push %rbp
9ff8(1): push %rbx
9ff9(3): mov %rdi,%rbx
9ffc(3): mov %rdx,%r12
9fff(4): sub $0x18,%rsp
a003(9): mov $0x28,%rax
a00c(5): mov %rax,0x8(%rsp)
a011(2): xor %eax,%eax
a013(5): lea 0x4(%rsp),%rax
a018(3): test %rdi,%rdi
a01b(4): cmove %rax,%rbx
a01f(3): mov %rbx,%rdi
a022(5): call 0xffff7f2e(%rip)
a027(4): cmp $0xfffffffd,%rax
a02b(3): mov %rax,%rbp
a02e(2): jbe 0x22(%rip)
a030(3): test %r12,%r12
a033(2): jz 0x1d(%rip)
a035(2): xor %edi,%edi
a037(5): call 0x119(%rip)
a03c(2): test %al,%al
a03e(2): jnz 0x12(%rip)
a040(5): movzx 0x0(%r13),%eax
a045(5): mov $0x1,%ebp
a04a(2): mov %eax,(%rbx)
a04c(4): nop 0x0(%rax)
a050(5): mov 0x8(%rsp),%rdx
a055(9): xor $0x28,%rdx
a05e(3): mov %rbp,%rax
a061(2): jnz 0xd(%rip)
a063(4): add $0x18,%rsp
a067(1): pop %rbx
a068(1): pop %rbp
a069(2): pop %r12
a06b(2): pop %r13
a06d(1): ret near (%rsp)
a06e(5): call 0xffff7eb2(%rip)

"c_strcasecmp" :
a080(2): xor %eax,%eax
a082(3): cmp %rsi,%rdi
a085(2): jnz 0x17(%rip)
a087(2): jmp 0x45(%rip)
a089(7): nop 0x0(%rax)
a090(4): add $0x1,%rdi
a094(4): add $0x1,%rsi
a098(2): cmp %dl,%al
a09a(2): jnz 0x2a(%rip)
a09c(3): movzx (%rdi),%eax
a09f(2): mov %eax,%edx
a0a1(3): lea 0x20(%rax),%ecx
a0a4(3): sub $0x41,%edx
a0a7(3): cmp $0x1a,%dl
a0aa(3): movzx (%rsi),%edx
a0ad(3): cmovnae %ecx,%eax
a0b0(2): mov %edx,%ecx
a0b2(4): lea 0x20(%rdx),%r9d
a0b6(3): sub $0x41,%ecx
a0b9(3): cmp $0x1a,%cl
a0bc(4): cmovnae %r9d,%edx
a0c0(2): test %al,%al
a0c2(2): jnz 0xffffffce(%rip)
a0c4(3): movzx %al,%eax
a0c7(3): movzx %dl,%edx
a0ca(2): sub %edx,%eax
a0cc(2): REP ret near (%rsp)

"close_stream" :
a0d0(2): push %r12
a0d2(1): push %rbp
a0d3(3): mov %rdi,%rbp
a0d6(1): push %rbx
a0d7(5): call 0xffff7d49(%rip)
a0dc(3): mov 0x0(%rbp),%ebx
a0df(3): mov %rbp,%rdi
a0e2(3): mov %rax,%r12
a0e5(5): call 0x24fb(%rip)
a0ea(3): and $0x20,%ebx
a0ed(2): test %ebx,%ebx
a0ef(2): jnz 0x19(%rip)
a0f1(2): test %eax,%eax
a0f3(2): jz 0xc(%rip)
a0f5(3): test %r12,%r12
a0f8(5): mov $0xffffffff,%eax
a0fd(2): jz 0x3b(%rip)
a0ff(1): pop %rbx
a100(1): pop %rbp
a101(2): pop %r12
a103(1): ret near (%rsp)
a104(4): nop 0x0(%rax)
a108(2): test %eax,%eax
a10a(2): jnz 0x1e(%rip)
a10c(5): call 0xffff7ce4(%rip)
a111(6): mov $0x0,(%rax)
a117(5): mov $0xffffffff,%eax
a11c(1): pop %rbx
a11d(1): pop %rbp
a11e(2): pop %r12
a120(1): ret near (%rsp)
a121(7): nop 0x0(%rax)
a128(1): pop %rbx
a129(5): mov $0xffffffff,%eax
a12e(1): pop %rbp
a12f(2): pop %r12
a131(1): ret near (%rsp)
a132(6): nop 0x0(%rax,%rax,1)
a138(5): call 0xffff7cb8(%rip)
a13d(3): cmp $0x9,(%rax)
a140(1): pop %rbx
a141(1): pop %rbp
a142(2): pop %r12
a144(3): setnz %al
a147(3): movzx %al,%eax
a14a(2): neg %eax
a14c(1): ret near (%rsp)

"hard_locale" :
a150(4): sub $0x8,%rsp
a154(2): xor %esi,%esi
a156(5): call 0xffff800a(%rip)
a15b(3): mov %rax,%rdx
a15e(5): mov $0x1,%eax
a163(3): test %rdx,%rdx
a166(2): jz 0x1f(%rip)
a168(7): lea 0x6811(%rip),%rdi
a16f(5): mov $0x2,%ecx
a174(3): mov %rdx,%rsi
a177(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a179(3): setnbe %cl
a17c(3): sbb $0x0,%cl
a17f(2): xor %eax,%eax
a181(2): test %cl,%cl
a183(2): jnz 0xd(%rip)
a185(4): add $0x8,%rsp
a189(1): ret near (%rsp)
a18a(6): nop 0x0(%rax,%rax,1)
a190(7): lea 0x67eb(%rip),%rdi
a197(5): mov $0x6,%ecx
a19c(3): mov %rdx,%rsi
a19f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a1a1(3): setnbe %al
a1a4(2): sbb $0x0,%al
a1a6(2): test %al,%al
a1a8(3): setnz %al
a1ab(4): add $0x8,%rsp
a1af(1): ret near (%rsp)

"locale_charset" :
a1b0(4): sub $0x8,%rsp
a1b4(5): mov $0xe,%edi
a1b9(5): call 0xffff7f67(%rip)
a1be(3): test %rax,%rax
a1c1(2): jz 0x1f(%rip)
a1c3(3): cmp $0x0,(%rax)
a1c6(7): lea 0x67bb(%rip),%rdx
a1cd(4): cmove %rdx,%rax
a1d1(4): add $0x8,%rsp
a1d5(1): ret near (%rsp)
a1d6(a): nop 0x0(%rax,%rax,1)
a1e0(7): lea 0x67a1(%rip),%rax
a1e7(4): add $0x8,%rsp
a1eb(1): ret near (%rsp)

"mb_width_aux" :
a1f0(1): push %rbx
a1f1(2): mov %edi,%ebx
a1f3(5): call 0xffff7edd(%rip)
a1f8(2): test %eax,%eax
a1fa(2): js 0x6(%rip)
a1fc(1): pop %rbx
a1fd(1): ret near (%rsp)
a1fe(2): nop 
a200(2): mov %ebx,%edi
a202(5): call 0xffff7c7e(%rip)
a207(2): test %eax,%eax
a209(3): setz %al
a20c(3): movzx %al,%eax
a20f(1): pop %rbx
a210(1): ret near (%rsp)

"mb_copy" :
a220(1): push %rbp
a221(1): push %rbx
a222(3): mov %rsi,%rbx
a225(4): lea 0x18(%rbx),%rax
a229(3): mov %rdi,%rbp
a22c(4): sub $0x8,%rsp
a230(3): mov (%rsi),%rsi
a233(4): mov 0x8(%rbx),%rdx
a237(3): cmp %rax,%rsi
a23a(2): jz 0x26(%rip)
a23c(3): mov %rsi,(%rdi)
a23f(4): movzx 0x10(%rbx),%eax
a243(4): mov %rdx,0x8(%rbp)
a247(2): test %al,%al
a249(3): mov %al,0x10(%rbp)
a24c(2): jz 0x8(%rip)
a24e(3): mov 0x14(%rbx),%eax
a251(3): mov %eax,0x14(%rbp)
a254(4): add $0x8,%rsp
a258(1): pop %rbx
a259(1): pop %rbp
a25a(1): ret near (%rsp)
a25b(5): nop 0x0(%rax,%rax,1)
a260(4): lea 0x18(%rdi),%rcx
a264(3): mov %rcx,%rdi
a267(5): call 0xffff7e39(%rip)
a26c(4): mov 0x8(%rbx),%rdx
a270(4): mov %rax,0x0(%rbp)
a274(2): jmp 0xffffffcb(%rip)

"is_basic" :
a280(2): mov %edi,%eax
a282(7): lea 0x6717(%rip),%rdx
a289(2): mov %edi,%ecx
a28b(3): shr $0x5,%al
a28e(3): and $0x1f,%ecx
a291(3): and $0x7,%eax
a294(3): mov 0x0(%rdx,%rax,4),%eax
a297(2): shr %cl,%eax
a299(3): and $0x1,%eax
a29c(1): ret near (%rsp)

"knuth_morris_pratt" :
a2a0(1): push %rbp
a2a1(3): mov %rsp,%rbp
a2a4(2): push %r12
a2a6(1): push %rbx
a2a7(3): mov %rdx,%r12
a2aa(5): mov $0x8,%edx
a2af(3): mov %rdi,%rbx
a2b2(4): sub $0x20,%rsp
a2b6(9): mov $0x28,%rax
a2bf(4): mov %rax,0xffffffe8(%rbp)
a2c3(2): xor %eax,%eax
a2c5(3): mov %rdx,%rax
a2c8(3): mul %rax,%r12,%rdx
a2cb(6): jo 0x172(%rip)
a2d1(2): xor %edi,%edi
a2d3(3): test %rax,%rax
a2d6(6): js 0xda(%rip)
a2dc(3): test %rdi,%rdi
a2df(6): jnz 0xd1(%rip)
a2e5(8): lea 0x0(,%r12,8),%rdi
a2ed(7): cmp $0xfa0,%rdi
a2f4(6): jnbe 0x124(%rip)
a2fa(4): add $0x3d,%rdi
a2fe(4): and $0xfffffff0,%rdi
a302(3): sub %rdi,%rsp
a305(5): lea 0xf(%rsp),%rdi
a30a(4): and $0xfffffff0,%rdi
a30e(4): add $0x1f,%rdi
a312(4): and $0xffffffe0,%rdi
a316(3): test %rdi,%rdi
a319(6): jz 0x97(%rip)
a31f(4): cmp $0x2,%r12
a323(8): mov $0x1,0x8(%rdi)
a32b(2): jbe 0x46(%rip)
a32d(2): xor %edx,%edx
a32f(6): mov $0x2,%r8d
a335(3): nop (%rax)
a338(6): movzx 0xffffffff(%rsi,%r8,1),%eax
a33e(3): cmp 0x0(%rsi,%rdx,1),%al
a341(2): jnz 0x1c(%rip)
a343(5): jmp 0xbd(%rip)
a348(8): nop 0x0(%rax,%rax,1)
a350(4): sub 0x0(%rdi,%rdx,8),%rdx
a354(3): cmp %al,0x0(%rsi,%rdx,1)
a357(6): jz 0xa9(%rip)
a35d(3): test %rdx,%rdx
a360(2): jnz 0xfffffff0(%rip)
a362(4): mov %r8,0x0(%rdi,%r8,8)
a366(2): xor %edx,%edx
a368(4): add $0x1,%r8
a36c(3): cmp %r8,%r12
a36f(2): jnz 0xffffffc9(%rip)
a371(7): mov $0x0,(%rcx)
a378(3): movzx (%rbx),%edx
a37b(3): mov %rbx,%r8
a37e(2): xor %eax,%eax
a380(2): test %dl,%dl
a382(2): jz 0x1a(%rip)
a384(3): cmp %dl,0x0(%rsi,%rax,1)
a387(2): jz 0x49(%rip)
a389(3): test %rax,%rax
a38c(2): jz 0x64(%rip)
a38e(4): mov 0x0(%rdi,%rax,8),%r9
a392(3): add %r9,%rbx
a395(3): sub %r9,%rax
a398(2): test %dl,%dl
a39a(2): jnz 0xffffffea(%rip)
a39c(5): call 0x23a4(%rip)
a3a1(5): mov $0x1,%eax
a3a6(2): jmp 0xc(%rip)
a3a8(8): nop 0x0(%rax,%rax,1)
a3b0(2): xor %eax,%eax
a3b2(4): mov 0xffffffe8(%rbp),%rcx
a3b6(9): xor $0x28,%rcx
a3bf(6): jnz 0x88(%rip)
a3c5(4): lea 0xfffffff0(%rbp),%rsp
a3c9(1): pop %rbx
a3ca(2): pop %r12
a3cc(1): pop %rbp
a3cd(1): ret near (%rsp)
a3ce(2): nop 
a3d0(4): add $0x1,%rax
a3d4(4): lea 0x1(%r8),%r9
a3d8(3): cmp %rax,%r12
a3db(2): jz 0x5a(%rip)
a3dd(5): movzx 0x1(%r8),%edx
a3e2(3): mov %r9,%r8
a3e5(2): jmp 0xffffff9b(%rip)
a3e7(9): nop 0x0(%rax,%rax,1)
a3f0(5): movzx 0x1(%r8),%edx
a3f5(4): add $0x1,%rbx
a3f9(4): add $0x1,%r8
a3fd(2): jmp 0xffffff83(%rip)
a3ff(1): nop 
a400(4): add $0x1,%rdx
a404(3): mov %r8,%rax
a407(3): sub %rdx,%rax
a40a(4): mov %rax,0x0(%rdi,%r8,8)
a40e(5): jmp 0xffffff5a(%rip)
a413(5): nop 0x0(%rax,%rax,1)
a418(4): mov %rcx,0xffffffd0(%rbp)
a41c(4): mov %rsi,0xffffffd8(%rbp)
a420(5): call 0x22e0(%rip)
a425(4): mov 0xffffffd0(%rbp),%rcx
a429(3): mov %rax,%rdi
a42c(4): mov 0xffffffd8(%rbp),%rsi
a430(5): jmp 0xfffffee6(%rip)
a435(3): mov %rbx,(%rcx)
a438(5): jmp 0xffffff64(%rip)
a43d(5): mov $0x1,%edi
a442(5): jmp 0xfffffe91(%rip)
a447(5): call 0xffff7ad9(%rip)

"knuth_morris_pratt_multibyte" :
a450(1): push %rbp
a451(3): mov %rsp,%rbp
a454(2): push %r15
a456(2): push %r14
a458(2): push %r13
a45a(2): push %r12
a45c(1): push %rbx
a45d(3): mov %rsi,%rbx
a460(7): sub $0x108,%rsp
a467(7): mov %rdi,0xfffffee8(%rbp)
a46e(3): mov %rsi,%rdi
a471(7): mov %rdx,0xfffffed8(%rbp)
a478(9): mov $0x28,%rax
a481(4): mov %rax,0xffffffc8(%rbp)
a485(2): xor %eax,%eax
a487(5): call 0x22e9(%rip)
a48c(5): mov $0x38,%edx
a491(3): mov %rax,%rsi
a494(7): mov %rax,0xfffffef8(%rbp)
a49b(3): mov %rdx,%rax
a49e(3): mul %rax,%rsi,%rdx
a4a1(6): jo 0xa16(%rip)
a4a7(2): xor %ecx,%ecx
a4a9(3): test %rax,%rax
a4ac(6): js 0x424(%rip)
a4b2(3): test %rcx,%rcx
a4b5(6): jnz 0x41b(%rip)
a4bb(7): mov 0xfffffef8(%rbp),%rax
a4c2(8): lea 0x0(,%rax,8),%rdi
a4ca(3): sub %rax,%rdi
a4cd(4): shl/sal $0x3,%rdi
a4d1(7): cmp $0xfa0,%rdi
a4d8(6): jnbe 0x93c(%rip)
a4de(4): add $0x3d,%rdi
a4e2(4): and $0xfffffff0,%rdi
a4e6(3): sub %rdi,%rsp
a4e9(5): lea 0xf(%rsp),%r12
a4ee(4): and $0xfffffff0,%r12
a4f2(4): add $0x1f,%r12
a4f6(4): and $0xffffffe0,%r12
a4fa(3): test %r12,%r12
a4fd(6): jz 0x3d3(%rip)
a503(7): mov 0xfffffef8(%rbp),%rax
a50a(7): mov %rbx,0xffffff10(%rbp)
a511(7): lea 0xffffff00(%rbp),%rbx
a518(7): mov $0x0,0xffffff00(%rbp)
a51f(b): mov $0x0,0xffffff04(%rbp)
a52a(3): mov %r12,%r15
a52d(7): mov $0x0,0xffffff0c(%rbp)
a534(6): mov $0x1,%r14d
a53a(4): lea 0x0(%rax,%rax,2),%r13
a53e(4): lea 0x4(%rbx),%rax
a542(4): shl/sal $0x4,%r13
a546(7): mov %rax,0xfffffee0(%rbp)
a54d(3): add %r12,%r13
a550(5): jmp 0xb1(%rip)
a555(3): nop (%rax)
a558(7): mov 0xffffff10(%rbp),%rcx
a55f(7): lea 0x643a(%rip),%rsi
a566(3): movzx (%rcx),%edx
a569(2): mov %edx,%eax
a56b(3): shr $0x5,%al
a56e(3): and $0x7,%eax
a571(3): mov 0x0(%rsi,%rax,4),%eax
a574(3): bt %edx,%eax
a577(6): jnb 0x381(%rip)
a57d(b): mov $0x1,0xffffff18(%rbp)
a588(3): movsx (%rcx),%eax
a58b(7): mov %r14b,0xffffff20(%rbp)
a592(7): mov %r14b,0xffffff0c(%rbp)
a599(6): mov %eax,0xffffff24(%rbp)
a59f(7): mov 0xffffff24(%rbp),%r8d
a5a6(3): test %r8d,%r8d
a5a9(6): jz 0x127(%rip)
a5af(5): mov $0x1,%eax
a5b4(7): mov 0xffffff10(%rbp),%rsi
a5bb(4): lea 0x28(%rbx),%rcx
a5bf(7): mov 0xffffff18(%rbp),%rdx
a5c6(3): cmp %rcx,%rsi
a5c9(6): jz 0x357(%rip)
a5cf(3): mov %rsi,(%r15)
a5d2(2): test %al,%al
a5d4(4): mov %rdx,0x8(%r15)
a5d8(4): mov %al,0x10(%r15)
a5dc(2): jz 0xc(%rip)
a5de(6): mov 0xffffff24(%rbp),%eax
a5e4(4): mov %eax,0x14(%r15)
a5e8(7): mov 0xffffff18(%rbp),%rax
a5ef(7): add %rax,0xffffff10(%rbp)
a5f6(4): add $0x30,%r15
a5fa(7): mov $0x0,0xffffff0c(%rbp)
a601(7): cmp $0x0,0xffffff00(%rbp)
a608(6): jz 0xffffff50(%rip)
a60e(5): call 0xffff78e2(%rip)
a613(7): mov 0xffffff10(%rbp),%r9
a61a(3): mov %rax,%rsi
a61d(3): mov %r9,%rdi
a620(7): mov %r9,0xfffffef0(%rbp)
a627(5): call 0xffffea29(%rip)
a62c(7): mov 0xfffffef0(%rbp),%r9
a633(4): lea 0x4(%rbx),%rcx
a637(4): lea 0x24(%rbx),%rdi
a63b(3): mov %rax,%rdx
a63e(3): mov %r9,%rsi
a641(5): call 0xfffff9af(%rip)
a646(4): cmp $0xffffffff,%rax
a64a(7): mov %rax,0xffffff18(%rbp)
a651(6): jz 0x2f7(%rip)
a657(4): cmp $0xfffffffe,%rax
a65b(6): jz 0x76e(%rip)
a661(3): test %rax,%rax
a664(2): jnz 0x2d(%rip)
a666(7): mov 0xffffff10(%rbp),%rax
a66d(b): mov $0x1,0xffffff18(%rbp)
a678(3): cmp $0x0,(%rax)
a67b(6): jnz 0x818(%rip)
a681(7): mov 0xffffff24(%rbp),%r9d
a688(3): test %r9d,%r9d
a68b(6): jnz 0x827(%rip)
a691(4): lea 0x4(%rbx),%rdi
a695(7): mov %r14b,0xffffff20(%rbp)
a69c(5): call 0xffff7c14(%rip)
a6a1(2): test %eax,%eax
a6a3(6): jz 0x74e(%rip)
a6a9(7): mov 0xffffff24(%rbp),%r8d
a6b0(7): mov $0x0,0xffffff00(%rbp)
a6b7(7): mov %r14b,0xffffff0c(%rbp)
a6be(3): test %r8d,%r8d
a6c1(6): jnz 0xfffffeee(%rip)
a6c7(9): nop 0x0(%rax,%rax,1)
a6d0(8): cmp $0x2,0xfffffef8(%rbp)
a6d8(8): mov $0x1,0x8(%r13)
a6e0(6): jbe 0x96(%rip)
a6e6(5): lea 0x30(%r12),%r14
a6eb(2): xor %ebx,%ebx
a6ed(6): mov $0x2,%r15d
a6f3(5): nop 0x0(%rax,%rax,1)
a6f8(5): movzx 0x10(%r14),%ecx
a6fd(2): jmp 0x20(%rip)
a6ff(1): nop 
a700(4): cmp $0x0,0x10(%rax)
a704(2): jz 0x28(%rip)
a706(3): mov 0x14(%rax),%eax
a709(4): cmp %eax,0x14(%r14)
a70d(2): jz 0x45(%rip)
a70f(3): test %rbx,%rbx
a712(6): jz 0x5b6(%rip)
a718(5): sub 0x0(%r13,%rbx,8),%rbx
a71d(4): lea 0x0(%rbx,%rbx,2),%rax
a721(4): shl/sal $0x4,%rax
a725(3): add %r12,%rax
a728(2): test %cl,%cl
a72a(2): jnz 0xffffffd6(%rip)
a72c(4): mov 0x8(%r14),%rdx
a730(4): cmp 0x8(%rax),%rdx
a734(2): jnz 0xffffffdb(%rip)
a736(3): mov (%rax),%rsi
a739(3): mov (%r14),%rdi
a73c(6): mov %cl,0xfffffef0(%rbp)
a742(5): call 0xffff78ee(%rip)
a747(2): test %eax,%eax
a749(7): movzx 0xfffffef0(%rbp),%ecx
a750(2): jnz 0xffffffbf(%rip)
a752(4): add $0x1,%rbx
a756(3): mov %r15,%rax
a759(3): sub %rbx,%rax
a75c(5): mov %rax,0x0(%r13,%r15,8)
a761(4): add $0x1,%r15
a765(4): add $0x30,%r14
a769(7): cmp %r15,0xfffffef8(%rbp)
a770(6): jnz 0xffffff88(%rip)
a776(7): mov 0xfffffed8(%rbp),%rax
a77d(4): lea 0xffffff80(%rbp),%rbx
a781(7): mov $0x0,0xffffff40(%rbp)
a788(b): mov $0x0,0xffffff44(%rbp)
a793(7): mov $0x0,0xffffff4c(%rbp)
a79a(3): xor %r15d,%r15d
a79d(4): mov $0x0,0xffffff80(%rbp)
a7a1(8): mov $0x0,0xffffff84(%rbp)
a7a9(7): mov $0x0,(%rax)
a7b0(7): mov 0xfffffee8(%rbp),%rax
a7b7(7): mov %rbx,0xfffffee8(%rbp)
a7be(4): add $0x4,%rbx
a7c2(4): mov $0x0,0xffffff8c(%rbp)
a7c6(7): mov %rbx,0xfffffee0(%rbp)
a7cd(7): lea 0xffffff40(%rbp),%rbx
a7d4(7): mov %rax,0xffffff50(%rbp)
a7db(4): mov %rax,0xffffff90(%rbp)
a7df(2): xor %eax,%eax
a7e1(7): nop 0x0(%rax)
a7e8(2): test %al,%al
a7ea(6): jz 0x1e2(%rip)
a7f0(4): cmp $0x0,0xffffffa0(%rbp)
a7f4(6): jnz 0x192(%rip)
a7fa(4): lea 0x0(%r15,%r15,2),%rax
a7fe(4): shl/sal $0x4,%rax
a802(3): add %r12,%rax
a805(4): mov 0x8(%rax),%rdx
a809(4): cmp 0xffffff98(%rbp),%rdx
a80d(6): jz 0x393(%rip)
a813(3): test %r15,%r15
a816(6): jz 0x3da(%rip)
a81c(5): mov 0x0(%r13,%r15,8),%r14
a821(3): mov %r15,%rax
a824(3): sub %r14,%rax
a827(3): test %r14,%r14
a82a(7): mov %rax,0xfffffef0(%rbp)
a831(4): movzx 0xffffff8c(%rbp),%eax
a835(2): jz 0xffffffb3(%rip)
a837(7): cmp $0x0,0xffffff4c(%rbp)
a83e(2): jz 0x2a(%rip)
a840(7): cmp $0x0,0xffffff60(%rbp)
a847(2): jnz 0x75(%rip)
a849(7): mov 0xffffff58(%rbp),%rax
a850(7): add %rax,0xffffff50(%rbp)
a857(4): sub $0x1,%r14
a85b(7): mov $0x0,0xffffff4c(%rbp)
a862(6): jz 0x426(%rip)
a868(7): cmp $0x0,0xffffff40(%rbp)
a86f(6): jnz 0x271(%rip)
a875(7): mov 0xffffff50(%rbp),%rcx
a87c(7): lea 0x611d(%rip),%rsi
a883(3): movzx (%rcx),%edx
a886(2): mov %edx,%eax
a888(3): shr $0x5,%al
a88b(3): and $0x7,%eax
a88e(3): mov 0x0(%rsi,%rax,4),%eax
a891(3): bt %edx,%eax
a894(6): jnb 0x234(%rip)
a89a(b): mov $0x1,0xffffff58(%rbp)
a8a5(3): movsx (%rcx),%eax
a8a8(7): mov $0x1,0xffffff60(%rbp)
a8af(7): mov $0x1,0xffffff4c(%rbp)
a8b6(6): mov %eax,0xffffff64(%rbp)
a8bc(6): mov 0xffffff64(%rbp),%esi
a8c2(2): test %esi,%esi
a8c4(2): jnz 0xffffff85(%rip)
a8c6(5): call 0xffff751a(%rip)
a8cb(5): nop 0x0(%rax,%rax,1)
a8d0(2): xor %eax,%eax
a8d2(4): mov 0xffffffc8(%rbp),%rbx
a8d6(9): xor $0x28,%rbx
a8df(6): jnz 0x5af(%rip)
a8e5(4): lea 0xffffffd8(%rbp),%rsp
a8e9(1): pop %rbx
a8ea(2): pop %r12
a8ec(2): pop %r13
a8ee(2): pop %r14
a8f0(2): pop %r15
a8f2(1): pop %rbp
a8f3(1): ret near (%rsp)
a8f4(4): nop 0x0(%rax)
a8f8(7): mov 0xfffffee0(%rbp),%rdi
a8ff(5): call 0xffff79b1(%rip)
a904(2): test %eax,%eax
a906(6): jz 0x569(%rip)
a90c(7): mov %r14b,0xffffff00(%rbp)
a913(5): jmp 0xfffffcfb(%rip)
a918(8): nop 0x0(%rax,%rax,1)
a920(4): lea 0x18(%r15),%rcx
a924(3): mov %rcx,%rdi
a927(5): call 0xffff7779(%rip)
a92c(7): mov 0xffffff18(%rbp),%rdx
a933(3): mov %rax,(%r15)
a936(7): movzx 0xffffff20(%rbp),%eax
a93d(5): jmp 0xfffffc95(%rip)
a942(6): nop 0x0(%rax,%rax,1)
a948(b): mov $0x1,0xffffff18(%rbp)
a953(7): mov $0x0,0xffffff20(%rbp)
a95a(2): xor %eax,%eax
a95c(7): mov %r14b,0xffffff0c(%rbp)
a963(5): jmp 0xfffffc51(%rip)
a968(8): nop 0x0(%rax,%rax,1)
a970(8): mov $0x1,0xffffff98(%rbp)
a978(3): movsx (%rcx),%eax
a97b(4): mov $0x1,0xffffffa0(%rbp)
a97f(4): mov $0x1,0xffffff8c(%rbp)
a983(3): mov %eax,0xffffffa4(%rbp)
a986(3): mov 0xffffffa4(%rbp),%edx
a989(2): test %edx,%edx
a98b(6): jz 0x125(%rip)
a991(4): lea 0x0(%r15,%r15,2),%rax
a995(4): shl/sal $0x4,%rax
a999(3): add %r12,%rax
a99c(4): cmp $0x0,0x10(%rax)
a9a0(6): jz 0xfffffe65(%rip)
a9a6(3): cmp %edx,0x14(%rax)
a9a9(6): jnz 0xfffffe6a(%rip)
a9af(4): add $0x1,%r15
a9b3(4): mov 0xffffff98(%rbp),%rax
a9b7(4): add %rax,0xffffff90(%rbp)
a9bb(7): cmp %r15,0xfffffef8(%rbp)
a9c2(4): mov $0x0,0xffffff8c(%rbp)
a9c6(6): jz 0x486(%rip)
a9cc(4): cmp $0x0,0xffffff80(%rbp)
a9d0(2): jnz 0x38(%rip)
a9d2(4): mov 0xffffff90(%rbp),%rcx
a9d6(7): lea 0x5fc3(%rip),%rsi
a9dd(3): movzx (%rcx),%edx
a9e0(2): mov %edx,%eax
a9e2(3): shr $0x5,%al
a9e5(3): and $0x7,%eax
a9e8(3): mov 0x0(%rsi,%rax,4),%eax
a9eb(3): bt %edx,%eax
a9ee(2): jb 0xffffff82(%rip)
a9f0(7): mov 0xfffffee0(%rbp),%rdi
a9f7(5): call 0xffff78b9(%rip)
a9fc(2): test %eax,%eax
a9fe(6): jz 0x471(%rip)
aa04(4): mov $0x1,0xffffff80(%rbp)
aa08(5): call 0xffff74e8(%rip)
aa0d(4): mov 0xffffff90(%rbp),%r8
aa11(3): mov %rax,%rsi
aa14(3): mov %r8,%rdi
aa17(7): mov %r8,0xfffffef0(%rbp)
aa1e(5): call 0xffffe632(%rip)
aa23(7): mov 0xfffffee8(%rbp),%rsi
aa2a(7): mov 0xfffffef0(%rbp),%r8
aa31(3): mov %rax,%rdx
aa34(4): lea 0x4(%rsi),%rcx
aa38(4): lea 0x24(%rsi),%rdi
aa3c(3): mov %r8,%rsi
aa3f(5): call 0xfffff5b1(%rip)
aa44(4): cmp $0xffffffff,%rax
aa48(4): mov %rax,0xffffff98(%rbp)
aa4c(6): jz 0x254(%rip)
aa52(4): cmp $0xfffffffe,%rax
aa56(6): jz 0x34a(%rip)
aa5c(3): test %rax,%rax
aa5f(2): jnz 0x22(%rip)
aa61(4): mov 0xffffff90(%rbp),%rax
aa65(8): mov $0x1,0xffffff98(%rbp)
aa6d(3): cmp $0x0,(%rax)
aa70(6): jnz 0x423(%rip)
aa76(3): mov 0xffffffa4(%rbp),%eax
aa79(2): test %eax,%eax
aa7b(6): jnz 0x437(%rip)
aa81(7): mov 0xfffffee8(%rbp),%rax
aa88(4): mov $0x1,0xffffffa0(%rbp)
aa8c(4): lea 0x4(%rax),%rdi
aa90(5): call 0xffff7820(%rip)
aa95(2): test %eax,%eax
aa97(6): jz 0x329(%rip)
aa9d(3): mov 0xffffffa4(%rbp),%edx
aaa0(4): mov $0x0,0xffffff80(%rbp)
aaa4(4): mov $0x1,0xffffff8c(%rbp)
aaa8(2): test %edx,%edx
aaaa(6): jnz 0xfffffee7(%rip)
aab0(3): mov %r12,%rdi
aab3(5): call 0x1c8d(%rip)
aab8(5): mov $0x1,%eax
aabd(5): jmp 0xfffffe15(%rip)
aac2(6): nop 0x0(%rax,%rax,1)
aac8(4): lea 0x4(%rbx),%rdi
aacc(5): call 0xffff77e4(%rip)
aad1(2): test %eax,%eax
aad3(6): jz 0x39c(%rip)
aad9(7): mov $0x1,0xffffff40(%rbp)
aae0(5): call 0xffff7410(%rip)
aae5(7): mov 0xffffff50(%rbp),%r15
aaec(3): mov %rax,%rsi
aaef(3): mov %r15,%rdi
aaf2(5): call 0xffffe55e(%rip)
aaf7(4): lea 0x4(%rbx),%rcx
aafb(4): lea 0x24(%rbx),%rdi
aaff(3): mov %rax,%rdx
ab02(3): mov %r15,%rsi
ab05(5): call 0xfffff4eb(%rip)
ab0a(4): cmp $0xffffffff,%rax
ab0e(7): mov %rax,0xffffff58(%rbp)
ab15(2): jz 0x6b(%rip)
ab17(4): cmp $0xfffffffe,%rax
ab1b(6): jz 0xa5(%rip)
ab21(3): test %rax,%rax
ab24(2): jnz 0x2b(%rip)
ab26(7): mov 0xffffff50(%rbp),%rax
ab2d(b): mov $0x1,0xffffff58(%rbp)
ab38(3): cmp $0x0,(%rax)
ab3b(6): jnz 0x358(%rip)
ab41(6): mov 0xffffff64(%rbp),%edi
ab47(2): test %edi,%edi
ab49(6): jnz 0x369(%rip)
ab4f(4): lea 0x4(%rbx),%rdi
ab53(7): mov $0x1,0xffffff60(%rbp)
ab5a(5): call 0xffff7756(%rip)
ab5f(2): test %eax,%eax
ab61(2): jz 0x7f(%rip)
ab63(7): mov $0x0,0xffffff40(%rbp)
ab6a(7): mov $0x1,0xffffff4c(%rbp)
ab71(5): jmp 0xfffffd4b(%rip)
ab76(a): nop 0x0(%rax,%rax,1)
ab80(b): mov $0x1,0xffffff58(%rbp)
ab8b(7): mov $0x0,0xffffff60(%rbp)
ab92(5): jmp 0xfffffcb7(%rip)
ab97(9): nop 0x0(%rax,%rax,1)
aba0(4): mov 0xffffff90(%rbp),%rsi
aba4(3): mov (%rax),%rdi
aba7(5): call 0xffff7489(%rip)
abac(2): test %eax,%eax
abae(6): jnz 0xfffffc65(%rip)
abb4(5): jmp 0xfffffdfb(%rip)
abb9(7): nop 0x0(%rax)
abc0(7): mov 0xffffff50(%rbp),%rdi
abc7(5): call 0xffff7339(%rip)
abcc(7): mov $0x0,0xffffff60(%rbp)
abd3(7): mov %rax,0xffffff58(%rbp)
abda(5): jmp 0xfffffc6f(%rip)
abdf(1): nop 
abe0(7): mov $0x1,0xffffff4c(%rbp)
abe7(5): jmp 0xfffffcd5(%rip)
abec(4): nop 0x0(%rax)
abf0(7): cmp $0x0,0xffffff4c(%rbp)
abf7(6): jnz 0xc1(%rip)
abfd(7): cmp $0x0,0xffffff40(%rbp)
ac04(6): jnz 0xec(%rip)
ac0a(7): mov 0xffffff50(%rbp),%rcx
ac11(7): lea 0x5d88(%rip),%rsi
ac18(3): movzx (%rcx),%edx
ac1b(2): mov %edx,%eax
ac1d(3): shr $0x5,%al
ac20(3): and $0x7,%eax
ac23(3): mov 0x0(%rsi,%rax,4),%eax
ac26(3): bt %edx,%eax
ac29(6): jnb 0xaf(%rip)
ac2f(b): mov $0x1,0xffffff58(%rbp)
ac3a(3): movsx (%rcx),%eax
ac3d(7): mov $0x1,0xffffff60(%rbp)
ac44(7): mov $0x1,0xffffff4c(%rbp)
ac4b(6): mov %eax,0xffffff64(%rbp)
ac51(6): mov 0xffffff64(%rbp),%edx
ac57(2): test %edx,%edx
ac59(6): jz 0xfffffc6d(%rip)
ac5f(7): mov 0xffffff58(%rbp),%rax
ac66(7): mov $0x0,0xffffff4c(%rbp)
ac6d(7): add %rax,0xffffff50(%rbp)
ac74(4): mov $0x0,0xffffff8c(%rbp)
ac78(4): mov 0xffffff98(%rbp),%rax
ac7c(4): add %rax,0xffffff90(%rbp)
ac80(5): jmp 0xfffffd4c(%rip)
ac85(3): nop (%rax)
ac88(4): movzx 0xffffff8c(%rbp),%eax
ac8c(7): mov 0xfffffef0(%rbp),%r15
ac93(5): jmp 0xfffffb55(%rip)
ac98(8): nop 0x0(%rax,%rax,1)
aca0(8): mov $0x1,0xffffff98(%rbp)
aca8(4): mov $0x0,0xffffffa0(%rbp)
acac(4): mov $0x1,0xffffff8c(%rbp)
acb0(5): jmp 0xfffffb4a(%rip)
acb5(3): nop (%rax)
acb8(7): cmp $0x0,0xffffff60(%rbp)
acbf(2): jz 0xffffffa0(%rip)
acc1(2): jmp 0xffffff90(%rip)
acc3(5): nop 0x0(%rax,%rax,1)
acc8(5): mov %r15,0x0(%r13,%r15,8)
accd(5): jmp 0xfffffa94(%rip)
acd2(6): nop 0x0(%rax,%rax,1)
acd8(4): lea 0x4(%rbx),%rdi
acdc(5): call 0xffff75d4(%rip)
ace1(2): test %eax,%eax
ace3(6): jz 0x18c(%rip)
ace9(7): mov $0x1,0xffffff40(%rbp)
acf0(5): call 0xffff7200(%rip)
acf5(7): mov 0xffffff50(%rbp),%r8
acfc(3): mov %rax,%rsi
acff(3): mov %r8,%rdi
ad02(7): mov %r8,0xfffffef0(%rbp)
ad09(5): call 0xffffe347(%rip)
ad0e(7): mov 0xfffffef0(%rbp),%r8
ad15(4): lea 0x4(%rbx),%rcx
ad19(4): lea 0x24(%rbx),%rdi
ad1d(3): mov %rax,%rdx
ad20(3): mov %r8,%rsi
ad23(5): call 0xfffff2cd(%rip)
ad28(4): cmp $0xffffffff,%rax
ad2c(7): mov %rax,0xffffff58(%rbp)
ad33(6): jz 0xca(%rip)
ad39(4): cmp $0xfffffffe,%rax
ad3d(6): jz 0xf0(%rip)
ad43(3): test %rax,%rax
ad46(2): jnz 0x2b(%rip)
ad48(7): mov 0xffffff50(%rbp),%rax
ad4f(b): mov $0x1,0xffffff58(%rbp)
ad5a(3): cmp $0x0,(%rax)
ad5d(6): jnz 0x136(%rip)
ad63(6): mov 0xffffff64(%rbp),%ecx
ad69(2): test %ecx,%ecx
ad6b(6): jnz 0x147(%rip)
ad71(4): lea 0x4(%rbx),%rdi
ad75(7): mov $0x1,0xffffff60(%rbp)
ad7c(5): call 0xffff7534(%rip)
ad81(2): test %eax,%eax
ad83(6): jz 0x9e(%rip)
ad89(7): mov $0x0,0xffffff40(%rbp)
ad90(7): mov $0x1,0xffffff4c(%rbp)
ad97(5): jmp 0xfffffeba(%rip)
ad9c(4): nop 0x0(%rax)
ada0(4): mov 0xffffff90(%rbp),%rdi
ada4(5): call 0xffff715c(%rip)
ada9(4): mov $0x0,0xffffffa0(%rbp)
adad(4): mov %rax,0xffffff98(%rbp)
adb1(4): mov $0x1,0xffffff8c(%rbp)
adb5(5): jmp 0xfffffa45(%rip)
adba(6): nop 0x0(%rax,%rax,1)
adc0(4): mov $0x1,0xffffff8c(%rbp)
adc4(5): jmp 0xfffffbc2(%rip)
adc9(7): mov 0xffffff10(%rbp),%rdi
add0(5): call 0xffff7130(%rip)
add5(7): mov $0x0,0xffffff20(%rbp)
addc(7): mov %rax,0xffffff18(%rbp)
ade3(2): xor %eax,%eax
ade5(7): mov %r14b,0xffffff0c(%rbp)
adec(5): jmp 0xfffff7c8(%rip)
adf1(7): mov %r14b,0xffffff0c(%rbp)
adf8(5): jmp 0xfffff7a7(%rip)
adfd(b): mov $0x1,0xffffff58(%rbp)
ae08(7): mov $0x0,0xffffff60(%rbp)
ae0f(5): jmp 0xfffffe50(%rip)
ae14(5): call 0x18ec(%rip)
ae19(3): mov %rax,%r12
ae1c(5): jmp 0xfffff6de(%rip)
ae21(7): mov $0x1,0xffffff4c(%rbp)
ae28(5): jmp 0xfffffe29(%rip)
ae2d(7): mov 0xffffff50(%rbp),%rdi
ae34(5): call 0xffff70cc(%rip)
ae39(7): mov $0x0,0xffffff60(%rbp)
ae40(7): mov %rax,0xffffff58(%rbp)
ae47(5): jmp 0xfffffe18(%rip)
ae4c(7): mov 0xffffff50(%rbp),%rax
ae53(7): mov 0xfffffed8(%rbp),%rbx
ae5a(3): mov %r12,%rdi
ae5d(3): mov %rax,(%rbx)
ae60(5): call 0x18e0(%rip)
ae65(5): mov $0x1,%eax
ae6a(5): jmp 0xfffffa68(%rip)
ae6f(7): lea 0x5b4a(%rip),%rcx
ae76(7): lea 0x51db(%rip),%rsi
ae7d(7): lea 0x5206(%rip),%rdi
ae84(5): mov $0x96,%edx
ae89(5): call 0xffff7157(%rip)
ae8e(5): call 0xffff7092(%rip)
ae93(7): lea 0x5b26(%rip),%rcx
ae9a(7): lea 0x51b7(%rip),%rsi
aea1(7): lea 0x51f9(%rip),%rdi
aea8(5): mov $0xb2,%edx
aead(5): call 0xffff7133(%rip)
aeb2(5): call 0xffff74a4(%rip)
aeb7(5): mov $0x1,%ecx
aebc(5): jmp 0xfffff5ed(%rip)

"mbsstr" :
aed0(2): push %r15
aed2(2): push %r14
aed4(2): push %r13
aed6(2): push %r12
aed8(3): mov %rdi,%r12
aedb(1): push %rbp
aedc(1): push %rbx
aedd(3): mov %rsi,%rbx
aee0(7): sub $0x198,%rsp
aee7(9): mov $0x28,%rax
aef0(8): mov %rax,0x188(%rsp)
aef8(2): xor %eax,%eax
aefa(5): mov %rsi,0x8(%rsp)
aeff(5): call 0xffff6ff1(%rip)
af04(4): cmp $0x1,%rax
af08(6): jnbe 0xe8(%rip)
af0e(5): mov 0x8(%rsp),%rax
af13(4): movzx (%rax),%r15d
af17(3): mov %r12,%rax
af1a(3): test %r15b,%r15b
af1d(6): jz 0x139(%rip)
af23(5): movzx (%r12),%esi
af28(3): test %sil,%sil
af2b(6): jz 0x7a5(%rip)
af31(5): lea 0x38(%rsp),%rbx
af36(5): mov 0x8(%rsp),%rbp
af3b(3): xor %r13d,%r13d
af3e(2): xor %edx,%edx
af40(3): xor %r8d,%r8d
af43(5): mov $0x1,%eax
af48(5): mov %rbx,0x10(%rsp)
af4d(3): nop (%rax)
af50(4): add $0x1,%r13
af54(3): cmp %r15b,%sil
af57(4): lea 0x1(%rdx),%rbx
af5b(5): lea 0x1(%r12),%r14
af60(6): jz 0x8e0(%rip)
af66(6): cmp $0x0,0x1(%r12)
af6c(6): jz 0x764(%rip)
af72(4): cmp $0x9,%r13
af76(3): setnbe %dl
af79(2): and %al,%dl
af7b(6): jz 0x107(%rip)
af81(5): lea 0x0(%r13,%r13,4),%rax
af86(3): cmp %rbx,%rax
af89(6): jnbe 0xf7(%rip)
af8f(3): test %rbp,%rbp
af92(3): mov %dl,(%rsp)
af95(2): jz 0x24(%rip)
af97(3): mov %rbx,%rsi
af9a(3): mov %rbp,%rdi
af9d(3): sub %r8,%rsi
afa0(5): call 0xffff7060(%rip)
afa5(3): add %rax,%rbp
afa8(3): mov %rbx,%r8
afab(4): movzx (%rsp),%edx
afaf(4): cmp $0x0,0x0(%rbp)
afb3(6): jnz 0xcd(%rip)
afb9(5): mov 0x8(%rsp),%rbp
afbe(4): mov %r8,(%rsp)
afc2(3): mov %rbp,%rdi
afc5(5): call 0xffff6f3b(%rip)
afca(5): mov 0x10(%rsp),%rcx
afcf(3): mov %rax,%rdx
afd2(3): mov %rbp,%rsi
afd5(3): mov %r14,%rdi
afd8(5): call 0xfffff2c8(%rip)
afdd(2): test %al,%al
afdf(4): mov (%rsp),%r8
afe3(6): jnz 0xeec(%rip)
afe9(2): xor %ebp,%ebp
afeb(5): jmp 0x97(%rip)
aff0(3): mov %rbx,%rax
aff3(7): lea 0x59a6(%rip),%r13
affa(5): mov %rbx,0x50(%rsp)
afff(3): movsx (%rax),%edx
b002(5): lea 0x40(%rsp),%rbx
b007(5): mov $0x0,0x40(%rsp)
b00c(9): mov $0x0,0x44(%rsp)
b015(5): mov $0x0,0x4c(%rsp)
b01a(4): lea 0x4(%rbx),%rbp
b01e(2): mov %edx,%eax
b020(3): shr $0x5,%al
b023(3): and $0x7,%eax
b026(5): mov 0x0(%r13,%rax,4),%eax
b02b(3): bt %edx,%eax
b02e(6): jnb 0xca2(%rip)
b034(9): mov $0x1,0x58(%rsp)
b03d(4): mov %edx,0x64(%rsp)
b041(5): mov $0x1,0x60(%rsp)
b046(5): mov $0x1,0x4c(%rsp)
b04b(4): mov 0x64(%rsp),%eax
b04f(2): test %eax,%eax
b051(2): jnz 0x5a(%rip)
b053(3): mov %r12,%rax
b056(8): mov 0x188(%rsp),%rbx
b05e(9): xor $0x28,%rbx
b067(6): jnz 0xf49(%rip)
b06d(7): add $0x198,%rsp
b074(1): pop %rbx
b075(1): pop %rbp
b076(2): pop %r12
b078(2): pop %r13
b07a(2): pop %r14
b07c(2): pop %r15
b07e(1): ret near (%rsp)
b07f(1): nop 
b080(2): mov %edx,%eax
b082(4): movzx (%r14),%esi
b086(3): mov %r14,%r12
b089(3): mov %rbx,%rdx
b08c(5): jmp 0xfffffec4(%rip)
b091(7): nop 0x0(%rax)
b098(9): mov $0x1,0x58(%rsp)
b0a1(5): mov $0x0,0x60(%rsp)
b0a6(5): mov $0x1,0x4c(%rsp)
b0ab(5): mov 0x8(%rsp),%rax
b0b0(8): mov $0x0,0xc0(%rsp)
b0b8(3): xor %r14d,%r14d
b0bb(2): xor %ebx,%ebx
b0bd(8): cmp $0x0,0xc0(%rsp)
b0c5(8): mov $0x0,0x80(%rsp)
b0cd(c): mov $0x0,0x84(%rsp)
b0d9(8): mov $0x0,0x8c(%rsp)
b0e1(8): lea 0x140(%rsp),%rbp
b0e9(8): mov %rax,0x90(%rsp)
b0f1(5): lea 0x38(%rsp),%rax
b0f6(8): mov %r12,0xd0(%rsp)
b0fe(c): mov $0x0,0xc4(%rsp)
b10a(8): mov $0x0,0xcc(%rsp)
b112(8): lea 0x100(%rsp),%r15
b11a(9): mov $0x0,0x20(%rsp)
b123(5): mov $0x1,0x10(%rsp)
b128(5): mov %rax,0x28(%rsp)
b12d(6): jnz 0x316(%rip)
b133(5): nop 0x0(%rax,%rax,1)
b138(8): mov 0xd0(%rsp),%rcx
b140(3): movzx (%rcx),%edx
b143(2): mov %edx,%eax
b145(3): shr $0x5,%al
b148(3): and $0x7,%eax
b14b(5): mov 0x0(%r13,%rax,4),%eax
b150(3): bt %edx,%eax
b153(6): jnb 0x75d(%rip)
b159(c): mov $0x1,0xd8(%rsp)
b165(3): movsx (%rcx),%eax
b168(8): mov $0x1,0xe0(%rsp)
b170(8): mov $0x1,0xcc(%rsp)
b178(7): mov %eax,0xe4(%rsp)
b17f(7): mov 0xe4(%rsp),%eax
b186(2): test %eax,%eax
b188(6): jz 0x548(%rip)
b18e(4): cmp $0x9,%r14
b192(3): setnbe %al
b195(4): and 0x10(%rsp),%al
b199(6): jz 0xe0e(%rip)
b19f(4): lea 0x0(%r14,%r14,4),%rdx
b1a3(3): cmp %rdx,%rbx
b1a6(6): jnb 0x73a(%rip)
b1ac(4): add $0x1,%rbx
b1b0(4): mov %al,0x10(%rsp)
b1b4(5): cmp $0x0,0x60(%rsp)
b1b9(6): jz 0x578(%rip)
b1bf(4): mov 0x64(%rsp),%eax
b1c3(7): cmp %eax,0xe4(%rsp)
b1ca(6): jnz 0x24f(%rip)
b1d0(9): movdqa 0xc0(%rsp),%xmm0
b1d9(4): lea 0x4(%rbp),%rcx
b1dd(8): mov $0x0,0x140(%rsp)
b1e5(8): mov $0x0,0x4(%rbp)
b1ed(8): movaps %xmm0,0x100(%rsp)
b1f5(8): mov $0x0,0x14c(%rsp)
b1fd(8): mov $0x0,0x10c(%rsp)
b205(9): movdqa 0xd0(%rsp),%xmm0
b20e(8): movaps %xmm0,0x110(%rsp)
b216(8): mov 0x118(%rsp),%rax
b21e(8): add %rax,0x110(%rsp)
b226(5): mov 0x8(%rsp),%rax
b22b(9): movdqa 0xe0(%rsp),%xmm0
b234(3): movsx (%rax),%edx
b237(8): mov %rax,0x150(%rsp)
b23f(8): movaps %xmm0,0x120(%rsp)
b247(2): mov %edx,%eax
b249(3): shr $0x5,%al
b24c(9): movdqa 0xf0(%rsp),%xmm0
b255(3): and $0x7,%eax
b258(5): mov 0x0(%r13,%rax,4),%eax
b25d(8): movaps %xmm0,0x130(%rsp)
b265(3): bt %edx,%eax
b268(6): jnb 0x990(%rip)
b26e(c): mov $0x1,0x158(%rsp)
b27a(7): mov %edx,0x164(%rsp)
b281(8): mov $0x1,0x160(%rsp)
b289(8): mov $0x1,0x14c(%rsp)
b291(7): mov 0x164(%rsp),%esi
b298(2): test %esi,%esi
b29a(6): jz 0xd3a(%rip)
b2a0(8): mov 0x158(%rsp),%rax
b2a8(8): mov $0x0,0x14c(%rsp)
b2b0(4): add $0x1,%rbx
b2b4(8): add %rax,0x150(%rsp)
b2bc(5): jmp 0xc7(%rip)
b2c1(7): nop 0x0(%rax)
b2c8(8): cmp $0x0,0x100(%rsp)
b2d0(6): jnz 0x341(%rip)
b2d6(8): mov 0x110(%rsp),%rcx
b2de(3): movzx (%rcx),%edx
b2e1(2): mov %edx,%eax
b2e3(3): shr $0x5,%al
b2e6(3): and $0x7,%eax
b2e9(5): mov 0x0(%r13,%rax,4),%eax
b2ee(3): bt %edx,%eax
b2f1(6): jnb 0x307(%rip)
b2f7(c): mov $0x1,0x118(%rsp)
b303(3): movsx (%rcx),%eax
b306(8): mov $0x1,0x120(%rsp)
b30e(8): mov $0x1,0x10c(%rsp)
b316(7): mov %eax,0x124(%rsp)
b31d(7): mov 0x124(%rsp),%eax
b324(2): test %eax,%eax
b326(6): jz 0x3aa(%rip)
b32c(8): cmp $0x0,0x160(%rsp)
b334(6): jz 0xcf(%rip)
b33a(7): cmp %eax,0x164(%rsp)
b341(3): setnz %al
b344(2): test %al,%al
b346(4): lea 0x1(%rbx),%rdx
b34a(6): jnz 0xcf(%rip)
b350(8): mov 0x118(%rsp),%rax
b358(8): add %rax,0x110(%rsp)
b360(3): mov %rdx,%rbx
b363(8): mov 0x158(%rsp),%rax
b36b(8): add %rax,0x150(%rsp)
b373(8): mov $0x0,0x10c(%rsp)
b37b(8): mov $0x0,0x14c(%rsp)
b383(8): cmp $0x0,0x140(%rsp)
b38b(6): jnz 0x19e(%rip)
b391(8): mov 0x150(%rsp),%rcx
b399(3): movzx (%rcx),%edx
b39c(2): mov %edx,%eax
b39e(3): shr $0x5,%al
b3a1(3): and $0x7,%eax
b3a4(5): mov 0x0(%r13,%rax,4),%eax
b3a9(3): bt %edx,%eax
b3ac(6): jnb 0x164(%rip)
b3b2(c): mov $0x1,0x158(%rsp)
b3be(3): movsx (%rcx),%eax
b3c1(8): mov $0x1,0x160(%rsp)
b3c9(8): mov $0x1,0x14c(%rsp)
b3d1(7): mov %eax,0x164(%rsp)
b3d8(7): mov 0x164(%rsp),%edx
b3df(2): test %edx,%edx
b3e1(6): jz 0x207(%rip)
b3e7(8): cmp $0x0,0x10c(%rsp)
b3ef(6): jz 0xfffffed9(%rip)
b3f5(8): cmp $0x0,0x120(%rsp)
b3fd(6): jnz 0xffffff20(%rip)
b403(8): mov 0x118(%rsp),%rdx
b40b(8): cmp 0x158(%rsp),%rdx
b413(6): jz 0x2cd(%rip)
b419(8): mov 0xd8(%rsp),%rcx
b421(8): add %rcx,0xd0(%rsp)
b429(4): add $0x1,%r14
b42d(8): cmp $0x0,0xc0(%rsp)
b435(8): mov $0x0,0xcc(%rsp)
b43d(6): jz 0xfffffcfb(%rip)
b443(8): lea 0xc0(%rsp),%rax
b44b(4): mov %rax,(%rsp)
b44f(5): call 0xffff6aa1(%rip)
b454(8): mov 0xd0(%rsp),%r8
b45c(3): mov %rax,%rsi
b45f(3): mov %r8,%rdi
b462(5): mov %r8,0x18(%rsp)
b467(5): call 0xffffdbe9(%rip)
b46c(4): mov (%rsp),%rsi
b470(5): mov 0x18(%rsp),%r8
b475(3): mov %rax,%rdx
b478(4): lea 0x4(%rsi),%rcx
b47c(4): lea 0x24(%rsi),%rdi
b480(3): mov %r8,%rsi
b483(5): call 0xffffeb6d(%rip)
b488(4): cmp $0xffffffff,%rax
b48c(8): mov %rax,0xd8(%rsp)
b494(6): jz 0x26c(%rip)
b49a(4): cmp $0xfffffffe,%rax
b49e(6): jz 0x72a(%rip)
b4a4(3): test %rax,%rax
b4a7(2): jnz 0x2e(%rip)
b4a9(8): mov 0xd0(%rsp),%rax
b4b1(c): mov $0x1,0xd8(%rsp)
b4bd(3): cmp $0x0,(%rax)
b4c0(6): jnz 0xaf5(%rip)
b4c6(7): mov 0xe4(%rsp),%eax
b4cd(2): test %eax,%eax
b4cf(6): jnz 0x7c3(%rip)
b4d5(4): mov (%rsp),%rdi
b4d9(8): mov $0x1,0xe0(%rsp)
b4e1(4): add $0x4,%rdi
b4e5(5): call 0xffff6dcb(%rip)
b4ea(2): test %eax,%eax
b4ec(6): jz 0x614(%rip)
b4f2(8): mov $0x0,0xc0(%rsp)
b4fa(8): mov $0x1,0xcc(%rsp)
b502(5): jmp 0xfffffc7d(%rip)
b507(9): nop 0x0(%rax,%rax,1)
b510(4): lea 0x4(%rbp),%rdi
b514(5): call 0xffff6d9c(%rip)
b519(2): test %eax,%eax
b51b(6): jz 0xa6d(%rip)
b521(8): mov $0x1,0x140(%rsp)
b529(5): call 0xffff69c7(%rip)
b52e(8): mov 0x150(%rsp),%r8
b536(3): mov %rax,%rsi
b539(3): mov %r8,%rdi
b53c(4): mov %r8,(%rsp)
b540(5): call 0xffffdb10(%rip)
b545(4): mov (%rsp),%r8
b549(4): lea 0x4(%rbp),%rcx
b54d(4): lea 0x24(%rbp),%rdi
b551(3): mov %rax,%rdx
b554(3): mov %r8,%rsi
b557(5): call 0xffffea99(%rip)
b55c(4): cmp $0xffffffff,%rax
b560(8): mov %rax,0x158(%rsp)
b568(6): jz 0x208(%rip)
b56e(4): cmp $0xfffffffe,%rax
b572(6): jz 0x24e(%rip)
b578(3): test %rax,%rax
b57b(2): jnz 0x2e(%rip)
b57d(8): mov 0x150(%rsp),%rax
b585(c): mov $0x1,0x158(%rsp)
b591(3): cmp $0x0,(%rax)
b594(6): jnz 0xa21(%rip)
b59a(7): mov 0x164(%rsp),%ecx
b5a1(2): test %ecx,%ecx
b5a3(6): jnz 0x6ef(%rip)
b5a9(4): lea 0x4(%rbp),%rdi
b5ad(8): mov $0x1,0x160(%rsp)
b5b5(5): call 0xffff6cfb(%rip)
b5ba(2): test %eax,%eax
b5bc(6): jz 0x234(%rip)
b5c2(7): mov 0x164(%rsp),%edx
b5c9(8): mov $0x0,0x140(%rsp)
b5d1(8): mov $0x1,0x14c(%rsp)
b5d9(2): test %edx,%edx
b5db(6): jnz 0xfffffe0c(%rip)
b5e1(7): nop 0x0(%rax)
b5e8(8): mov 0xd0(%rsp),%rax
b5f0(5): jmp 0xfffffa66(%rip)
b5f5(3): nop (%rax)
b5f8(4): lea 0x4(%r15),%rdi
b5fc(5): call 0xffff6cb4(%rip)
b601(2): test %eax,%eax
b603(6): jz 0x985(%rip)
b609(8): mov $0x1,0x100(%rsp)
b611(5): call 0xffff68df(%rip)
b616(8): mov 0x110(%rsp),%r8
b61e(3): mov %rax,%rsi
b621(3): mov %r8,%rdi
b624(4): mov %r8,(%rsp)
b628(5): call 0xffffda28(%rip)
b62d(4): mov (%rsp),%r8
b631(4): lea 0x4(%r15),%rcx
b635(4): lea 0x24(%r15),%rdi
b639(3): mov %rax,%rdx
b63c(3): mov %r8,%rsi
b63f(5): call 0xffffe9b1(%rip)
b644(4): cmp $0xffffffff,%rax
b648(8): mov %rax,0x118(%rsp)
b650(6): jz 0x148(%rip)
b656(4): cmp $0xfffffffe,%rax
b65a(6): jz 0x1a6(%rip)
b660(3): test %rax,%rax
b663(2): jnz 0x2e(%rip)
b665(8): mov 0x110(%rsp),%rax
b66d(c): mov $0x1,0x118(%rsp)
b679(3): cmp $0x0,(%rax)
b67c(6): jnz 0x939(%rip)
b682(7): mov 0x124(%rsp),%eax
b689(2): test %eax,%eax
b68b(6): jnz 0x607(%rip)
b691(4): lea 0x4(%r15),%rdi
b695(8): mov $0x1,0x120(%rsp)
b69d(5): call 0xffff6c13(%rip)
b6a2(2): test %eax,%eax
b6a4(6): jz 0x18c(%rip)
b6aa(7): mov 0x124(%rsp),%eax
b6b1(8): mov $0x0,0x100(%rsp)
b6b9(8): mov $0x1,0x10c(%rsp)
b6c1(2): test %eax,%eax
b6c3(6): jnz 0xfffffc69(%rip)
b6c9(7): nop 0x0(%rax)
b6d0(2): xor %eax,%eax
b6d2(5): jmp 0xfffff984(%rip)
b6d7(9): nop 0x0(%rax,%rax,1)
b6e0(8): mov 0x150(%rsp),%rsi
b6e8(8): mov 0x110(%rsp),%rdi
b6f0(5): call 0xffff6940(%rip)
b6f5(2): test %eax,%eax
b6f7(3): setnz %al
b6fa(5): jmp 0xfffffc4a(%rip)
b6ff(1): nop 
b700(c): mov $0x1,0xd8(%rsp)
b70c(8): mov $0x0,0xe0(%rsp)
b714(8): mov $0x1,0xcc(%rsp)
b71c(4): cmp $0x9,%r14
b720(3): setnbe %al
b723(4): and 0x10(%rsp),%al
b727(6): jnz 0x841(%rip)
b72d(4): add $0x1,%rbx
b731(8): mov 0xd8(%rsp),%rcx
b739(5): cmp 0x58(%rsp),%rcx
b73e(6): jnz 0xfffffce3(%rip)
b744(5): mov 0x50(%rsp),%rsi
b749(8): mov 0xd0(%rsp),%rdi
b751(3): mov %rcx,%rdx
b754(4): mov %rcx,(%rsp)
b758(5): call 0xffff68d8(%rip)
b75d(2): test %eax,%eax
b75f(4): mov (%rsp),%rcx
b763(6): jnz 0xfffffcbe(%rip)
b769(5): jmp 0xfffffa67(%rip)
b76e(2): nop 
b770(c): mov $0x1,0x158(%rsp)
b77c(8): mov $0x0,0x160(%rsp)
b784(8): mov $0x1,0x14c(%rsp)
b78c(5): jmp 0xfffffc5b(%rip)
b791(7): nop 0x0(%rax)
b798(c): mov $0x1,0x118(%rsp)
b7a4(8): mov $0x0,0x120(%rsp)
b7ac(8): mov $0x1,0x10c(%rsp)
b7b4(5): jmp 0xfffffc4f(%rip)
b7b9(7): nop 0x0(%rax)
b7c0(8): mov 0x150(%rsp),%rdi
b7c8(5): call 0xffff6738(%rip)
b7cd(8): mov $0x0,0x160(%rsp)
b7d5(8): mov %rax,0x158(%rsp)
b7dd(8): mov $0x1,0x14c(%rsp)
b7e5(5): jmp 0xfffffc02(%rip)
b7ea(6): nop 0x0(%rax,%rax,1)
b7f0(8): mov $0x1,0x14c(%rsp)
b7f8(5): jmp 0xfffffbe0(%rip)
b7fd(3): nop (%rax)
b800(8): mov 0x110(%rsp),%rdi
b808(5): call 0xffff66f8(%rip)
b80d(8): mov $0x0,0x120(%rsp)
b815(8): mov %rax,0x118(%rsp)
b81d(8): mov $0x1,0x10c(%rsp)
b825(5): jmp 0xfffffbde(%rip)
b82a(6): nop 0x0(%rax,%rax,1)
b830(8): mov $0x1,0x10c(%rsp)
b838(5): jmp 0xfffffae5(%rip)
b83d(3): nop (%rax)
b840(5): mov 0x8(%rsp),%rcx
b845(4): movzx 0x1(%rcx),%esi
b849(3): test %sil,%sil
b84c(6): jz 0xfffff807(%rip)
b852(4): movzx (%r14),%edi
b856(3): test %dil,%dil
b859(6): jz 0xfffffe77(%rip)
b85f(3): cmp %dil,%sil
b862(4): lea 0x2(%rdx),%rbx
b866(6): jnz 0xfffff70c(%rip)
b86c(3): neg %rdx
b86f(4): lea 0x0(%rcx,%rdx,1),%r9
b873(3): add %r12,%rdx
b876(2): jmp 0x24(%rip)
b878(8): nop 0x0(%rax,%rax,1)
b880(4): movzx 0x0(%rdx,%rbx,1),%edi
b884(3): test %dil,%dil
b887(6): jz 0xfffffe49(%rip)
b88d(4): add $0x1,%rbx
b891(3): cmp %dil,%sil
b894(6): jnz 0xfffff6de(%rip)
b89a(5): movzx 0x0(%r9,%rbx,1),%esi
b89f(3): test %sil,%sil
b8a2(2): jnz 0xffffffde(%rip)
b8a4(5): jmp 0xfffff7af(%rip)
b8a9(7): nop 0x0(%rax)
b8b0(8): lea 0xc0(%rsp),%rax
b8b8(8): lea 0xc4(%rsp),%rdi
b8c0(4): mov %rax,(%rsp)
b8c4(5): call 0xffff69ec(%rip)
b8c9(2): test %eax,%eax
b8cb(6): jz 0x6bd(%rip)
b8d1(8): mov $0x1,0xc0(%rsp)
b8d9(5): jmp 0xfffffb76(%rip)
b8de(2): nop 
b8e0(3): mov %rbx,%rsi
b8e3(5): sub 0x20(%rsp),%rsi
b8e8(8): movzx 0x8c(%rsp),%eax
b8f0(4): mov %rsi,(%rsp)
b8f4(6): jz 0x653(%rip)
b8fa(2): test %al,%al
b8fc(2): jz 0x2f(%rip)
b8fe(8): cmp $0x0,0xa0(%rsp)
b906(2): jnz 0x76(%rip)
b908(8): mov 0x98(%rsp),%rax
b910(8): add %rax,0x90(%rsp)
b918(5): sub $0x1,(%rsp)
b91d(8): mov $0x0,0x8c(%rsp)
b925(6): jz 0x213(%rip)
b92b(8): cmp $0x0,0x80(%rsp)
b933(6): jnz 0x185(%rip)
b939(8): mov 0x90(%rsp),%rcx
b941(3): movzx (%rcx),%edx
b944(2): mov %edx,%eax
b946(3): shr $0x5,%al
b949(3): and $0x7,%eax
b94c(5): mov 0x0(%r13,%rax,4),%eax
b951(3): bt %edx,%eax
b954(2): jnb 0x7c(%rip)
b956(c): mov $0x1,0x98(%rsp)
b962(3): movsx (%rcx),%eax
b965(8): mov $0x1,0xa0(%rsp)
b96d(8): mov $0x1,0x8c(%rsp)
b975(7): mov %eax,0xa4(%rsp)
b97c(8): mov 0xa4(%rsp),%r10d
b984(3): test %r10d,%r10d
b987(6): jnz 0xffffff81(%rip)
b98d(8): cmp $0x0,0x8c(%rsp)
b995(6): jz 0x1a3(%rip)
b99b(5): mov 0x28(%rsp),%rdx
b9a0(5): mov 0x8(%rsp),%rsi
b9a5(3): mov %r12,%rdi
b9a8(5): call 0xffffeaa8(%rip)
b9ad(2): test %al,%al
b9af(4): mov %al,0x10(%rsp)
b9b3(6): jnz 0x51c(%rip)
b9b9(8): movzx 0xe0(%rsp),%edx
b9c1(5): jmp 0x1ea(%rip)
b9c6(a): nop 0x0(%rax,%rax,1)
b9d0(8): lea 0x80(%rsp),%rax
b9d8(8): lea 0x84(%rsp),%rdi
b9e0(5): mov %rax,0x10(%rsp)
b9e5(5): call 0xffff68cb(%rip)
b9ea(2): test %eax,%eax
b9ec(6): jz 0x59c(%rip)
b9f2(8): mov $0x1,0x80(%rsp)
b9fa(5): call 0xffff64f6(%rip)
b9ff(8): mov 0x90(%rsp),%r8
ba07(3): mov %rax,%rsi
ba0a(3): mov %r8,%rdi
ba0d(5): mov %r8,0x18(%rsp)
ba12(5): call 0xffffd63e(%rip)
ba17(5): mov 0x10(%rsp),%rsi
ba1c(5): mov 0x18(%rsp),%r8
ba21(3): mov %rax,%rdx
ba24(4): lea 0x4(%rsi),%rcx
ba28(4): lea 0x24(%rsi),%rdi
ba2c(3): mov %r8,%rsi
ba2f(5): call 0xffffe5c1(%rip)
ba34(4): cmp $0xffffffff,%rax
ba38(8): mov %rax,0x98(%rsp)
ba40(6): jz 0x90(%rip)
ba46(4): cmp $0xfffffffe,%rax
ba4a(6): jz 0xc6(%rip)
ba50(3): test %rax,%rax
ba53(2): jnz 0x30(%rip)
ba55(8): mov 0x90(%rsp),%rax
ba5d(c): mov $0x1,0x98(%rsp)
ba69(3): cmp $0x0,(%rax)
ba6c(6): jnz 0x549(%rip)
ba72(8): mov 0xa4(%rsp),%r11d
ba7a(3): test %r11d,%r11d
ba7d(6): jnz 0x215(%rip)
ba83(5): mov 0x10(%rsp),%rdi
ba88(8): mov $0x1,0xa0(%rsp)
ba90(4): add $0x4,%rdi
ba94(5): call 0xffff681c(%rip)
ba99(2): test %eax,%eax
ba9b(2): jz 0x55(%rip)
ba9d(8): mov $0x0,0x80(%rsp)
baa5(8): mov $0x1,0x8c(%rsp)
baad(5): jmp 0xfffffecf(%rip)
bab2(6): nop 0x0(%rax,%rax,1)
bab8(8): lea 0x80(%rsp),%rax
bac0(5): mov %rax,0x10(%rsp)
bac5(5): jmp 0xffffff35(%rip)
baca(6): nop 0x0(%rax,%rax,1)
bad0(c): mov $0x1,0x98(%rsp)
badc(8): mov $0x0,0xa0(%rsp)
bae4(5): jmp 0xfffffe24(%rip)
bae9(7): nop 0x0(%rax)
baf0(8): mov $0x1,0x8c(%rsp)
baf8(5): jmp 0xfffffe84(%rip)
bafd(3): nop (%rax)
bb00(8): mov $0x1,0xcc(%rsp)
bb08(5): jmp 0xfffff677(%rip)
bb0d(3): nop (%rax)
bb10(8): mov 0x90(%rsp),%rdi
bb18(5): call 0xffff63e8(%rip)
bb1d(8): mov $0x0,0xa0(%rsp)
bb25(8): mov %rax,0x98(%rsp)
bb2d(5): jmp 0xfffffddb(%rip)
bb32(6): nop 0x0(%rax,%rax,1)
bb38(8): cmp $0x0,0x80(%rsp)
bb40(6): jnz 0x258(%rip)
bb46(8): mov 0x90(%rsp),%rcx
bb4e(3): movzx (%rcx),%edx
bb51(2): mov %edx,%eax
bb53(3): shr $0x5,%al
bb56(3): and $0x7,%eax
bb59(5): mov 0x0(%r13,%rax,4),%eax
bb5e(3): bt %edx,%eax
bb61(6): jnb 0x2fe(%rip)
bb67(c): mov $0x1,0x98(%rsp)
bb73(3): movsx (%rcx),%eax
bb76(8): mov $0x1,0xa0(%rsp)
bb7e(8): mov $0x1,0x8c(%rsp)
bb86(7): mov %eax,0xa4(%rsp)
bb8d(8): mov 0xa4(%rsp),%r8d
bb95(3): test %r8d,%r8d
bb98(6): jz 0xfffffe03(%rip)
bb9e(8): movzx 0xe0(%rsp),%edx
bba6(5): mov $0x1,0x10(%rsp)
bbab(4): lea 0x1(%rbx),%rax
bbaf(2): test %dl,%dl
bbb1(5): mov %rbx,0x20(%rsp)
bbb6(3): mov %rax,%rbx
bbb9(6): jnz 0xfffff5fb(%rip)
bbbf(5): jmp 0xfffffb72(%rip)
bbc4(4): nop 0x0(%rax)
bbc8(8): mov 0xd0(%rsp),%rdi
bbd0(5): call 0xffff6330(%rip)
bbd5(8): mov $0x0,0xe0(%rsp)
bbdd(8): mov %rax,0xd8(%rsp)
bbe5(8): mov $0x1,0xcc(%rsp)
bbed(5): jmp 0xfffffb2f(%rip)
bbf2(6): nop 0x0(%rax,%rax,1)
bbf8(3): mov %rcx,%rdi
bbfb(5): mov %rcx,0x18(%rsp)
bc00(5): call 0xffff66b0(%rip)
bc05(2): test %eax,%eax
bc07(6): jz 0x381(%rip)
bc0d(8): mov $0x1,0x140(%rsp)
bc15(5): call 0xffff62db(%rip)
bc1a(8): mov 0x150(%rsp),%r8
bc22(3): mov %rax,%rsi
bc25(3): mov %r8,%rdi
bc28(4): mov %r8,(%rsp)
bc2c(5): call 0xffffd424(%rip)
bc31(4): mov (%rsp),%r8
bc35(5): mov 0x18(%rsp),%rcx
bc3a(4): lea 0x24(%rbp),%rdi
bc3e(3): mov %rax,%rdx
bc41(3): mov %r8,%rsi
bc44(5): call 0xffffe3ac(%rip)
bc49(4): cmp $0xffffffff,%rax
bc4d(8): mov %rax,0x158(%rsp)
bc55(6): jz 0x123(%rip)
bc5b(4): cmp $0xfffffffe,%rax
bc5f(6): jz 0x27a(%rip)
bc65(3): test %rax,%rax
bc68(2): jnz 0x38(%rip)
bc6a(8): mov 0x150(%rsp),%rax
bc72(c): mov $0x1,0x158(%rsp)
bc7e(3): cmp $0x0,(%rax)
bc81(6): jnz 0x334(%rip)
bc87(7): mov 0x164(%rsp),%edi
bc8e(2): test %edi,%edi
bc90(2): jz 0x10(%rip)
bc92(5): call 0xffff66c4(%rip)
bc97(9): nop 0x0(%rax,%rax,1)
bca0(4): lea 0x4(%rbp),%rdi
bca4(8): mov $0x1,0x160(%rsp)
bcac(5): call 0xffff6604(%rip)
bcb1(2): test %eax,%eax
bcb3(6): jz 0x1db(%rip)
bcb9(8): mov $0x0,0x140(%rsp)
bcc1(8): mov $0x1,0x14c(%rsp)
bcc9(5): jmp 0xfffff5c8(%rip)
bcce(2): nop 
bcd0(3): mov %rbp,%rdi
bcd3(5): call 0xffff65dd(%rip)
bcd8(2): test %eax,%eax
bcda(6): jz 0x2ae(%rip)
bce0(5): mov $0x1,0x40(%rsp)
bce5(5): call 0xffff620b(%rip)
bcea(5): mov 0x50(%rsp),%r14
bcef(3): mov %rax,%rsi
bcf2(3): mov %r14,%rdi
bcf5(5): call 0xffffd35b(%rip)
bcfa(4): lea 0x24(%rbx),%rdi
bcfe(3): mov %rbp,%rcx
bd01(3): mov %rax,%rdx
bd04(3): mov %r14,%rsi
bd07(5): call 0xffffe2e9(%rip)
bd0c(4): cmp $0xffffffff,%rax
bd10(5): mov %rax,0x58(%rsp)
bd15(6): jz 0xfffff383(%rip)
bd1b(4): cmp $0xfffffffe,%rax
bd1f(6): jz 0x1dc(%rip)
bd25(3): test %rax,%rax
bd28(2): jnz 0x25(%rip)
bd2a(5): mov 0x50(%rsp),%rax
bd2f(9): mov $0x1,0x58(%rsp)
bd38(3): cmp $0x0,(%rax)
bd3b(6): jnz 0x27a(%rip)
bd41(4): mov 0x64(%rsp),%eax
bd45(2): test %eax,%eax
bd47(6): jnz 0xffffff4b(%rip)
bd4d(4): lea 0x4(%rbx),%rdi
bd51(5): mov $0x1,0x60(%rsp)
bd56(5): call 0xffff655a(%rip)
bd5b(2): test %eax,%eax
bd5d(6): jz 0x13e(%rip)
bd63(5): mov $0x0,0x40(%rsp)
bd68(5): mov $0x1,0x4c(%rsp)
bd6d(5): jmp 0xfffff2de(%rip)
bd72(6): nop 0x0(%rax,%rax,1)
bd78(c): mov $0x1,0x158(%rsp)
bd84(8): mov $0x0,0x160(%rsp)
bd8c(5): jmp 0xfffff514(%rip)
bd91(7): nop 0x0(%rax)
bd98(8): lea 0x80(%rsp),%rax
bda0(5): mov %rax,0x10(%rsp)
bda5(5): call 0xffff614b(%rip)
bdaa(8): mov 0x90(%rsp),%r8
bdb2(3): mov %rax,%rsi
bdb5(3): mov %r8,%rdi
bdb8(4): mov %r8,(%rsp)
bdbc(5): call 0xffffd294(%rip)
bdc1(5): mov 0x10(%rsp),%rsi
bdc6(4): mov (%rsp),%r8
bdca(3): mov %rax,%rdx
bdcd(4): lea 0x4(%rsi),%rcx
bdd1(4): lea 0x24(%rsi),%rdi
bdd5(3): mov %r8,%rsi
bdd8(5): call 0xffffe218(%rip)
bddd(4): cmp $0xffffffff,%rax
bde1(8): mov %rax,0x98(%rsp)
bde9(6): jz 0x130(%rip)
bdef(4): cmp $0xfffffffe,%rax
bdf3(6): jz 0xb2(%rip)
bdf9(3): test %rax,%rax
bdfc(2): jnz 0x30(%rip)
bdfe(8): mov 0x90(%rsp),%rax
be06(c): mov $0x1,0x98(%rsp)
be12(3): cmp $0x0,(%rax)
be15(6): jnz 0x1a0(%rip)
be1b(8): mov 0xa4(%rsp),%r9d
be23(3): test %r9d,%r9d
be26(6): jnz 0xfffffe6c(%rip)
be2c(5): mov 0x10(%rsp),%rdi
be31(8): mov $0x1,0xa0(%rsp)
be39(4): add $0x4,%rdi
be3d(5): call 0xffff6473(%rip)
be42(2): test %eax,%eax
be44(6): jz 0xf6(%rip)
be4a(8): mov $0x0,0x80(%rsp)
be52(8): mov $0x1,0x8c(%rsp)
be5a(5): jmp 0xfffffd33(%rip)
be5f(8): lea 0x80(%rsp),%rax
be67(8): lea 0x84(%rsp),%rdi
be6f(5): mov %rax,0x10(%rsp)
be74(5): call 0xffff643c(%rip)
be79(2): test %eax,%eax
be7b(6): jz 0x10d(%rip)
be81(8): mov $0x1,0x80(%rsp)
be89(5): jmp 0xffffff1c(%rip)
be8e(8): mov $0x1,0x14c(%rsp)
be96(5): jmp 0xfffff3fb(%rip)
be9b(5): mov $0x1,0x4c(%rsp)
bea0(5): jmp 0xfffff1ab(%rip)
bea5(8): mov 0x90(%rsp),%rdi
bead(5): call 0xffff6053(%rip)
beb2(8): mov $0x0,0xa0(%rsp)
beba(8): mov %rax,0x98(%rsp)
bec2(8): mov $0x1,0x8c(%rsp)
beca(5): jmp 0xfffffcd4(%rip)
becf(5): mov 0x38(%rsp),%rax
bed4(5): jmp 0xfffff182(%rip)
bed9(8): mov 0x150(%rsp),%rdi
bee1(5): call 0xffff601f(%rip)
bee6(8): mov $0x0,0x160(%rsp)
beee(8): mov %rax,0x158(%rsp)
bef6(5): jmp 0xfffff3aa(%rip)
befb(5): mov 0x50(%rsp),%rdi
bf00(5): call 0xffff6000(%rip)
bf05(5): mov $0x0,0x60(%rsp)
bf0a(5): mov %rax,0x58(%rsp)
bf0f(5): mov $0x1,0x4c(%rsp)
bf14(5): jmp 0xfffff197(%rip)
bf19(c): mov $0x1,0x98(%rsp)
bf25(8): mov $0x0,0xa0(%rsp)
bf2d(8): mov $0x1,0x8c(%rsp)
bf35(5): jmp 0xfffffc69(%rip)
bf3a(8): mov $0x1,0x8c(%rsp)
bf42(5): jmp 0xfffffc4b(%rip)
bf47(2): test %al,%al
bf49(6): jz 0xfffffbef(%rip)
bf4f(8): cmp $0x0,0xa0(%rsp)
bf57(6): jz 0xfffffc47(%rip)
bf5d(5): jmp 0xfffffc30(%rip)
bf62(6): nop 0x0(%rax,%rax,1)
bf68(4): lea 0x0(%r14,%r14,4),%rdx
bf6c(3): cmp %rdx,%rbx
bf6f(6): jnb 0xfffff971(%rip)
bf75(4): add $0x1,%rbx
bf79(4): mov %al,0x10(%rsp)
bf7d(5): jmp 0xfffff7b4(%rip)
bf82(6): nop 0x0(%rax,%rax,1)
bf88(7): lea 0x4a31(%rip),%rcx
bf8f(7): lea 0x40c2(%rip),%rsi
bf96(7): lea 0x40ed(%rip),%rdi
bf9d(5): mov $0x96,%edx
bfa2(5): call 0xffff603e(%rip)
bfa7(4): add $0x1,%rbx
bfab(5): jmp 0xfffff209(%rip)
bfb0(5): call 0xffff5f70(%rip)
bfb5(7): lea 0x4a04(%rip),%rcx
bfbc(7): lea 0x4095(%rip),%rsi
bfc3(7): lea 0x40d7(%rip),%rdi
bfca(5): mov $0xb2,%edx
bfcf(5): call 0xffff6011(%rip)
bfd4(5): call 0xffff5e0c(%rip)

"mem_cd_iconv" :
bfe0(2): push %r15
bfe2(2): push %r14
bfe4(3): mov %rdi,%r15
bfe7(2): push %r13
bfe9(2): push %r12
bfeb(3): mov %rsi,%r13
bfee(1): push %rbp
bfef(1): push %rbx
bff0(3): mov %rdx,%rbx
bff3(2): xor %esi,%esi
bff5(2): xor %edx,%edx
bff7(7): sub $0x1068,%rsp
bffe(5): mov %rdi,0x28(%rsp)
c003(5): mov %rcx,0x18(%rsp)
c008(3): mov %rbx,%rdi
c00b(5): mov %r8,0x10(%rsp)
c010(2): xor %ecx,%ecx
c012(3): xor %r8d,%r8d
c015(9): mov $0x28,%rax
c01e(8): mov %rax,0x1058(%rsp)
c026(2): xor %eax,%eax
c028(5): call 0xffff5e08(%rip)
c02d(5): mov %r15,0x30(%rsp)
c032(3): xor %r15d,%r15d
c035(3): test %r13,%r13
c038(5): mov %r13,0x38(%rsp)
c03d(5): lea 0x50(%rsp),%r14
c042(5): lea 0x48(%rsp),%r12
c047(5): lea 0x40(%rsp),%rbp
c04c(2): jz 0x7f(%rip)
c04e(5): lea 0x38(%rsp),%rax
c053(5): lea 0x30(%rsp),%rsi
c058(5): mov %r13,0x20(%rsp)
c05d(5): mov %rsi,0x8(%rsp)
c062(3): mov %rax,%r13
c065(2): jmp 0x22(%rip)
c067(9): nop 0x0(%rax,%rax,1)
c070(5): mov 0x40(%rsp),%rax
c075(3): sub %r14,%rax
c078(3): add %rax,%r15
c07b(6): cmp $0x0,0x38(%rsp)
c081(6): jz 0x19f(%rip)
c087(5): mov 0x8(%rsp),%rsi
c08c(3): mov %r12,%r8
c08f(3): mov %rbp,%rcx
c092(3): mov %r13,%rdx
c095(3): mov %rbx,%rdi
c098(5): mov %r14,0x40(%rsp)
c09d(9): mov $0x1000,0x48(%rsp)
c0a6(5): call 0xffff5d8a(%rip)
c0ab(4): cmp $0xffffffff,%rax
c0af(2): jnz 0xffffffc1(%rip)
c0b1(5): call 0xffff5d3f(%rip)
c0b6(2): mov (%rax),%eax
c0b8(3): cmp $0x7,%eax
c0bb(2): jz 0xffffffb5(%rip)
c0bd(3): cmp $0x16,%eax
c0c0(5): mov 0x20(%rsp),%r13
c0c5(6): jnz 0x1c4(%rip)
c0cb(2): xor %edx,%edx
c0cd(2): xor %esi,%esi
c0cf(3): mov %r12,%r8
c0d2(3): mov %rbp,%rcx
c0d5(3): mov %rbx,%rdi
c0d8(5): mov %r14,0x40(%rsp)
c0dd(9): mov $0x1000,0x48(%rsp)
c0e6(5): call 0xffff5d4a(%rip)
c0eb(4): cmp $0xffffffff,%rax
c0ef(6): jz 0x19a(%rip)
c0f5(5): mov 0x40(%rsp),%rax
c0fa(3): sub %r14,%rax
c0fd(3): add %r15,%rax
c100(5): mov %rax,0x8(%rsp)
c105(6): jz 0x12b(%rip)
c10b(5): mov 0x18(%rsp),%rax
c110(3): mov (%rax),%rax
c113(3): test %rax,%rax
c116(5): mov %rax,0x20(%rsp)
c11b(2): jz 0x11(%rip)
c11d(5): mov 0x10(%rsp),%rax
c122(5): mov 0x8(%rsp),%rcx
c127(3): cmp %rcx,(%rax)
c12a(2): jnb 0x1a(%rip)
c12c(5): mov 0x8(%rsp),%rdi
c131(5): call 0xffff5fbf(%rip)
c136(3): test %rax,%rax
c139(5): mov %rax,0x20(%rsp)
c13e(6): jz 0x140(%rip)
c144(3): xor %r8d,%r8d
c147(2): xor %ecx,%ecx
c149(2): xor %edx,%edx
c14b(2): xor %esi,%esi
c14d(3): mov %rbx,%rdi
c150(5): lea 0x38(%rsp),%r15
c155(5): call 0xffff5cdb(%rip)
c15a(5): mov 0x28(%rsp),%rax
c15f(5): mov %r13,0x38(%rsp)
c164(5): lea 0x30(%rsp),%r14
c169(5): mov %rax,0x30(%rsp)
c16e(5): mov 0x20(%rsp),%rax
c173(5): mov %rax,0x40(%rsp)
c178(5): mov 0x8(%rsp),%rax
c17d(5): mov %rax,0x48(%rsp)
c182(2): jmp 0x29(%rip)
c184(4): nop 0x0(%rax)
c188(3): mov %r12,%r8
c18b(3): mov %rbp,%rcx
c18e(3): mov %r15,%rdx
c191(3): mov %r14,%rsi
c194(3): mov %rbx,%rdi
c197(5): call 0xffff5c99(%rip)
c19c(4): cmp $0xffffffff,%rax
c1a0(6): jz 0xa0(%rip)
c1a6(5): mov 0x38(%rsp),%r13
c1ab(3): test %r13,%r13
c1ae(2): jnz 0xffffffda(%rip)
c1b0(2): xor %edx,%edx
c1b2(2): xor %esi,%esi
c1b4(3): mov %r12,%r8
c1b7(3): mov %rbp,%rcx
c1ba(3): mov %rbx,%rdi
c1bd(5): call 0xffff5c73(%rip)
c1c2(4): cmp $0xffffffff,%rax
c1c6(6): jz 0x88(%rip)
c1cc(6): cmp $0x0,0x48(%rsp)
c1d2(6): jnz 0xc1(%rip)
c1d8(5): mov 0x18(%rsp),%rax
c1dd(5): mov 0x20(%rsp),%rsi
c1e2(2): xor %ebx,%ebx
c1e4(5): mov 0x8(%rsp),%rdi
c1e9(3): mov %rsi,(%rax)
c1ec(5): mov 0x10(%rsp),%rax
c1f1(3): mov %rdi,(%rax)
c1f4(8): mov 0x1058(%rsp),%rdx
c1fc(9): xor $0x28,%rdx
c205(2): mov %ebx,%eax
c207(6): jnz 0x91(%rip)
c20d(7): add $0x1068,%rsp
c214(1): pop %rbx
c215(1): pop %rbp
c216(2): pop %r12
c218(2): pop %r13
c21a(2): pop %r14
c21c(2): pop %r15
c21e(1): ret near (%rsp)
c21f(1): nop 
c220(5): mov 0x20(%rsp),%r13
c225(5): jmp 0xfffffea6(%rip)
c22a(6): nop 0x0(%rax,%rax,1)
c230(5): mov 0x10(%rsp),%rax
c235(2): xor %ebx,%ebx
c237(7): mov $0x0,(%rax)
c23e(2): jmp 0xffffffb6(%rip)
c240(5): call 0xffff5bb0(%rip)
c245(3): cmp $0x16,(%rax)
c248(6): jz 0xffffff68(%rip)
c24e(5): mov 0x18(%rsp),%rax
c253(5): mov 0x20(%rsp),%r15
c258(5): mov $0xffffffff,%ebx
c25d(3): cmp %r15,(%rax)
c260(2): jz 0xffffff94(%rip)
c262(5): call 0xffff5b8e(%rip)
c267(3): mov (%rax),%r12d
c26a(3): mov %rax,%rbp
c26d(3): mov %r15,%rdi
c270(5): call 0xffff5b60(%rip)
c275(4): mov %r12d,0x0(%rbp)
c279(5): jmp 0xffffff7b(%rip)
c27e(5): call 0xffff5b72(%rip)
c283(6): mov $0xc,(%rax)
c289(5): mov $0xffffffff,%ebx
c28e(5): jmp 0xffffff66(%rip)
c293(5): call 0xffff5b4d(%rip)
c298(5): call 0xffff5c88(%rip)

"str_cd_iconv" :
c2a0(2): push %r15
c2a2(2): push %r14
c2a4(2): push %r13
c2a6(2): push %r12
c2a8(3): mov %rsi,%r12
c2ab(1): push %rbp
c2ac(1): push %rbx
c2ad(4): sub $0x58,%rsp
c2b1(9): mov $0x28,%rax
c2ba(5): mov %rax,0x48(%rsp)
c2bf(2): xor %eax,%eax
c2c1(5): mov %rdi,0x28(%rsp)
c2c6(5): call 0xffff5c3a(%rip)
c2cb(3): mov %rax,%r13
c2ce(5): mov %rax,0x30(%rsp)
c2d3(4): shl/sal $0x4,%r13
c2d7(6): cmp $0x10000000,%rax
c2dd(4): cmovnb %rax,%r13
c2e1(4): lea 0x1(%r13),%rbp
c2e5(3): mov %rbp,%rdi
c2e8(5): call 0xffff5e08(%rip)
c2ed(3): test %rax,%rax
c2f0(3): mov %rax,%rbx
c2f3(6): jz 0x1dd(%rip)
c2f9(3): xor %r8d,%r8d
c2fc(2): xor %ecx,%ecx
c2fe(2): xor %edx,%edx
c300(2): xor %esi,%esi
c302(3): mov %r12,%rdi
c305(5): call 0xffff5b2b(%rip)
c30a(5): lea 0x40(%rsp),%rax
c30f(5): mov %rbx,0x38(%rsp)
c314(5): mov %r13,0x40(%rsp)
c319(5): mov %rax,0x8(%rsp)
c31e(5): lea 0x38(%rsp),%rax
c323(4): mov %rax,(%rsp)
c327(5): lea 0x30(%rsp),%rax
c32c(5): mov %rax,0x18(%rsp)
c331(5): lea 0x28(%rsp),%rax
c336(5): mov %rax,0x10(%rsp)
c33b(2): jmp 0x69(%rip)
c33d(3): nop (%rax)
c340(5): call 0xffff5ab0(%rip)
c345(3): mov %rax,%r15
c348(2): mov (%rax),%eax
c34a(3): cmp $0x16,%eax
c34d(6): jz 0xe9(%rip)
c353(3): cmp $0x7,%eax
c356(6): jnz 0x138(%rip)
c35c(5): mov 0x38(%rsp),%r14
c361(5): lea 0x0(%rbp,%rbp,1),%r13
c366(3): sub %rbx,%r14
c369(3): cmp %r13,%rbp
c36c(6): jnb 0x154(%rip)
c372(3): mov %r13,%rsi
c375(3): mov %rbx,%rdi
c378(5): call 0xffff5dd8(%rip)
c37d(3): test %rax,%rax
c380(6): jz 0x140(%rip)
c386(4): lea 0x0(%rax,%r14,1),%rsi
c38a(3): mov %rax,%rbx
c38d(3): mov %r13,%rbp
c390(5): mov %rsi,0x38(%rsp)
c395(4): lea 0xffffffff(%r13),%rsi
c399(3): mov %rsi,%rdx
c39c(3): sub %r14,%rdx
c39f(5): mov %rdx,0x40(%rsp)
c3a4(5): mov 0x8(%rsp),%r8
c3a9(4): mov (%rsp),%rcx
c3ad(3): mov %r12,%rdi
c3b0(5): mov 0x18(%rsp),%rdx
c3b5(5): mov 0x10(%rsp),%rsi
c3ba(5): call 0xffff5a76(%rip)
c3bf(4): cmp $0xffffffff,%rax
c3c3(6): jz 0xffffff7d(%rip)
c3c9(2): jmp 0x6d(%rip)
c3cb(5): nop 0x0(%rax,%rax,1)
c3d0(5): call 0xffff5a20(%rip)
c3d5(3): cmp $0x7,(%rax)
c3d8(3): mov %rax,%rcx
c3db(6): jnz 0xb3(%rip)
c3e1(5): mov 0x38(%rsp),%r15
c3e6(5): lea 0x0(%rbp,%rbp,1),%rdx
c3eb(3): sub %rbx,%r15
c3ee(3): cmp %rdx,%rbp
c3f1(6): jnb 0x97(%rip)
c3f7(3): mov %rdx,%rsi
c3fa(3): mov %rbx,%rdi
c3fd(5): mov %rdx,0x10(%rsp)
c402(5): mov %rax,0x18(%rsp)
c407(5): call 0xffff5d49(%rip)
c40c(3): test %rax,%rax
c40f(5): mov 0x10(%rsp),%rdx
c414(5): mov 0x18(%rsp),%rcx
c419(2): jz 0x6f(%rip)
c41b(4): lea 0x0(%rax,%r15,1),%rcx
c41f(3): mov %rdx,%rbp
c422(3): mov %rax,%rbx
c425(5): mov %rcx,0x38(%rsp)
c42a(4): lea 0xffffffff(%rdx),%rcx
c42e(3): sub %r15,%rcx
c431(5): mov %rcx,0x40(%rsp)
c436(5): mov 0x8(%rsp),%r8
c43b(4): mov (%rsp),%rcx
c43f(2): xor %edx,%edx
c441(2): xor %esi,%esi
c443(3): mov %r12,%rdi
c446(5): call 0xffff59ea(%rip)
c44b(4): cmp $0xffffffff,%rax
c44f(6): jz 0xffffff81(%rip)
c455(5): mov 0x38(%rsp),%rax
c45a(4): lea 0x1(%rax),%rdx
c45e(5): mov %rdx,0x38(%rsp)
c463(3): mov $0x0,(%rax)
c466(5): mov 0x38(%rsp),%rsi
c46b(3): sub %rbx,%rsi
c46e(3): cmp %rsi,%rbp
c471(2): jbe 0x27(%rip)
c473(3): mov %rbx,%rdi
c476(5): call 0xffff5cda(%rip)
c47b(3): test %rax,%rax
c47e(4): cmovne %rax,%rbx
c482(2): jmp 0x16(%rip)
c484(4): nop 0x0(%rax)
c488(6): mov $0xc,(%rcx)
c48e(3): mov %rbx,%rdi
c491(2): xor %ebx,%ebx
c493(5): call 0xffff593d(%rip)
c498(5): mov 0x48(%rsp),%rdi
c49d(9): xor $0x28,%rdi
c4a6(3): mov %rbx,%rax
c4a9(2): jnz 0x34(%rip)
c4ab(4): add $0x58,%rsp
c4af(1): pop %rbx
c4b0(1): pop %rbp
c4b1(2): pop %r12
c4b3(2): pop %r13
c4b5(2): pop %r14
c4b7(2): pop %r15
c4b9(1): ret near (%rsp)
c4ba(6): nop 0x0(%rax,%rax,1)
c4c0(7): mov $0xc,(%r15)
c4c7(2): jmp 0xffffffc7(%rip)
c4c9(7): nop 0x0(%rax)
c4d0(5): call 0xffff5920(%rip)
c4d5(6): mov $0xc,(%rax)
c4db(2): jmp 0xffffffbd(%rip)
c4dd(5): call 0xffff5a43(%rip)

"str_iconv" :
c4f0(2): push %r13
c4f2(2): push %r12
c4f4(1): push %rbp
c4f5(1): push %rbx
c4f6(3): mov %rdi,%rbx
c4f9(4): sub $0x8,%rsp
c4fd(3): cmp $0x0,(%rdi)
c500(2): jz 0x17(%rip)
c502(3): mov %rsi,%r12
c505(3): mov %rdx,%rsi
c508(3): mov %rdx,%rbp
c50b(3): mov %r12,%rdi
c50e(5): call 0xffffdb72(%rip)
c513(2): test %eax,%eax
c515(2): jnz 0x23(%rip)
c517(3): mov %rbx,%rdi
c51a(5): call 0xffff5d86(%rip)
c51f(3): test %rax,%rax
c522(3): mov %rax,%rbx
c525(2): jz 0x6b(%rip)
c527(4): add $0x8,%rsp
c52b(3): mov %rbx,%rax
c52e(1): pop %rbx
c52f(1): pop %rbp
c530(2): pop %r12
c532(2): pop %r13
c534(1): ret near (%rsp)
c535(3): nop (%rax)
c538(3): mov %rbp,%rdi
c53b(3): mov %r12,%rsi
c53e(5): call 0xffff5da2(%rip)
c543(4): cmp $0xffffffff,%rax
c547(3): mov %rax,%rbp
c54a(6): jz 0x86(%rip)
c550(3): mov %rbx,%rdi
c553(3): mov %rax,%rsi
c556(5): call 0xfffffd4a(%rip)
c55b(3): test %rax,%rax
c55e(3): mov %rax,%rbx
c561(2): jz 0x4f(%rip)
c563(3): mov %rbp,%rdi
c566(5): call 0xffff5c1a(%rip)
c56b(2): test %eax,%eax
c56d(2): jns 0xffffffba(%rip)
c56f(5): call 0xffff5881(%rip)
c574(3): mov (%rax),%r12d
c577(3): mov %rax,%rbp
c57a(3): mov %rbx,%rdi
c57d(5): call 0xffff5853(%rip)
c582(2): xor %ebx,%ebx
c584(4): mov %r12d,0x0(%rbp)
c588(2): jmp 0xffffff9f(%rip)
c58a(6): nop 0x0(%rax,%rax,1)
c590(5): call 0xffff5860(%rip)
c595(6): mov $0xc,(%rax)
c59b(4): add $0x8,%rsp
c59f(3): mov %rbx,%rax
c5a2(1): pop %rbx
c5a3(1): pop %rbp
c5a4(2): pop %r12
c5a6(2): pop %r13
c5a8(1): ret near (%rsp)
c5a9(7): nop 0x0(%rax)
c5b0(5): call 0xffff5840(%rip)
c5b5(3): mov (%rax),%r13d
c5b8(3): mov %rax,%r12
c5bb(3): mov %rbp,%rdi
c5be(5): call 0xffff5bc2(%rip)
c5c3(4): mov %r13d,(%r12)
c5c7(5): jmp 0xffffff60(%rip)
c5cc(4): nop 0x0(%rax)
c5d0(2): xor %ebx,%ebx
c5d2(5): jmp 0xffffff55(%rip)

"rpl_fclose" :
c5e0(2): push %r12
c5e2(1): push %rbp
c5e3(1): push %rbx
c5e4(3): mov %rdi,%rbx
c5e7(5): call 0xffff5ac9(%rip)
c5ec(2): test %eax,%eax
c5ee(3): mov %rbx,%rdi
c5f1(2): js 0x56(%rip)
c5f3(5): call 0xffff5b4d(%rip)
c5f8(2): test %eax,%eax
c5fa(2): jnz 0x2e(%rip)
c5fc(3): mov %rbx,%rdi
c5ff(5): call 0x61(%rip)
c604(2): test %eax,%eax
c606(2): jz 0x3e(%rip)
c608(5): call 0xffff57e8(%rip)
c60d(3): mov (%rax),%r12d
c610(3): mov %rbx,%rdi
c613(3): mov %rax,%rbp
c616(5): call 0xffff58aa(%rip)
c61b(3): test %r12d,%r12d
c61e(2): jnz 0x32(%rip)
c620(1): pop %rbx
c621(1): pop %rbp
c622(2): pop %r12
c624(1): ret near (%rsp)
c625(3): nop (%rax)
c628(3): mov %rbx,%rdi
c62b(5): call 0xffff5a85(%rip)
c630(2): xor %esi,%esi
c632(5): mov $0x1,%edx
c637(2): mov %eax,%edi
c639(5): call 0xffff5997(%rip)
c63e(4): cmp $0xffffffff,%rax
c642(2): jnz 0xffffffba(%rip)
c644(3): mov %rbx,%rdi
c647(1): pop %rbx
c648(1): pop %rbp
c649(2): pop %r12
c64b(5): jmp 0xffff5875(%rip)
c650(4): mov %r12d,0x0(%rbp)
c654(5): mov $0xffffffff,%eax
c659(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
c660(3): test %rdi,%rdi
c663(1): push %rbx
c664(3): mov %rdi,%rbx
c667(2): jz 0x13(%rip)
c669(5): call 0xffff5ad7(%rip)
c66e(2): test %eax,%eax
c670(2): jz 0xa(%rip)
c672(6): test $0x100,(%rbx)
c678(2): jnz 0x10(%rip)
c67a(3): mov %rbx,%rdi
c67d(1): pop %rbx
c67e(5): jmp 0xffff5a82(%rip)
c683(5): nop 0x0(%rax,%rax,1)
c688(3): mov %rbx,%rdi
c68b(5): mov $0x1,%edx
c690(2): xor %esi,%esi
c692(5): call 0xe(%rip)
c697(3): mov %rbx,%rdi
c69a(1): pop %rbx
c69b(5): jmp 0xffff5a65(%rip)

"rpl_fseeko" :
c6a0(4): mov 0x8(%rdi),%rax
c6a4(4): cmp %rax,0x10(%rdi)
c6a8(2): jz 0x8(%rip)
c6aa(5): jmp 0xffff5b46(%rip)
c6af(1): nop 
c6b0(4): mov 0x20(%rdi),%rax
c6b4(4): cmp %rax,0x28(%rdi)
c6b8(2): jnz 0xfffffff2(%rip)
c6ba(5): cmp $0x0,0x48(%rdi)
c6bf(2): jnz 0xffffffeb(%rip)
c6c1(2): push %r12
c6c3(1): push %rbp
c6c4(3): mov %edx,%r12d
c6c7(1): push %rbx
c6c8(3): mov %rsi,%rbp
c6cb(3): mov %rdi,%rbx
c6ce(5): call 0xffff59e2(%rip)
c6d3(3): mov %r12d,%edx
c6d6(3): mov %rbp,%rsi
c6d9(2): mov %eax,%edi
c6db(5): call 0xffff58f5(%rip)
c6e0(4): cmp $0xffffffff,%rax
c6e4(2): jz 0xe(%rip)
c6e6(3): and $0xef,(%rbx)
c6e9(7): mov %rax,0x90(%rbx)
c6f0(2): xor %eax,%eax
c6f2(1): pop %rbx
c6f3(1): pop %rbp
c6f4(2): pop %r12
c6f6(1): ret near (%rsp)

"mmalloca" :
c700(4): add $0x20,%rdi
c704(2): jb 0x2f(%rip)
c706(4): sub $0x8,%rsp
c70a(5): call 0xffff59e6(%rip)
c70f(2): xor %edx,%edx
c711(3): test %rax,%rax
c714(2): jz 0x17(%rip)
c716(4): lea 0x10(%rax),%rdx
c71a(4): and $0xffffffe0,%rdx
c71e(4): add $0x10,%rdx
c722(3): mov %rdx,%rcx
c725(3): sub %rax,%rcx
c728(3): mov %cl,0xffffffff(%rdx)
c72b(3): mov %rdx,%rax
c72e(4): add $0x8,%rsp
c732(1): ret near (%rsp)
c733(2): xor %edx,%edx
c735(3): mov %rdx,%rax
c738(1): ret near (%rsp)

"freea" :
c740(4): test $0xf,%dil
c744(2): jnz 0x18(%rip)
c746(4): test $0x10,%dil
c74a(2): jnz 0x6(%rip)
c74c(2): REP ret near (%rsp)
c74e(2): nop 
c750(4): movzx 0xffffffff(%rdi),%eax
c754(3): sub %rax,%rdi
c757(5): jmp 0xffff5679(%rip)
c75c(4): sub $0x8,%rsp
c760(5): call 0xffff5680(%rip)

"mbslen" :
c770(2): push %r14
c772(2): push %r13
c774(2): push %r12
c776(1): push %rbp
c777(1): push %rbx
c778(3): mov %rdi,%rbx
c77b(4): sub $0x50,%rsp
c77f(9): mov $0x28,%rax
c788(5): mov %rax,0x48(%rsp)
c78d(2): xor %eax,%eax
c78f(5): call 0xffff5761(%rip)
c794(4): cmp $0x1,%rax
c798(2): jnbe 0x38(%rip)
c79a(3): mov %rbx,%rdi
c79d(5): call 0xffff5763(%rip)
c7a2(3): mov %rax,%rbx
c7a5(5): mov 0x48(%rsp),%rsi
c7aa(9): xor $0x28,%rsi
c7b3(3): mov %rbx,%rax
c7b6(6): jnz 0x1a3(%rip)
c7bc(4): add $0x50,%rsp
c7c0(1): pop %rbx
c7c1(1): pop %rbp
c7c2(2): pop %r12
c7c4(2): pop %r13
c7c6(2): pop %r14
c7c8(1): ret near (%rsp)
c7c9(7): nop 0x0(%rax)
c7d0(3): mov %rsp,%rbp
c7d3(5): mov %rbx,0x10(%rsp)
c7d8(4): mov $0x0,(%rsp)
c7dc(9): mov $0x0,0x4(%rsp)
c7e5(5): mov $0x0,0xc(%rsp)
c7ea(2): xor %ebx,%ebx
c7ec(7): lea 0x41ad(%rip),%r12
c7f3(4): lea 0x4(%rbp),%r13
c7f7(2): jmp 0x5f(%rip)
c7f9(7): nop 0x0(%rax)
c800(5): mov 0x10(%rsp),%rcx
c805(3): movzx (%rcx),%edx
c808(2): mov %edx,%eax
c80a(3): shr $0x5,%al
c80d(3): and $0x7,%eax
c810(4): mov 0x0(%r12,%rax,4),%eax
c814(3): bt %edx,%eax
c817(6): jnb 0xc9(%rip)
c81d(9): mov $0x1,0x18(%rsp)
c826(3): movsx (%rcx),%eax
c829(5): mov $0x1,0x20(%rsp)
c82e(5): mov $0x1,0xc(%rsp)
c833(4): mov %eax,0x24(%rsp)
c837(4): mov 0x24(%rsp),%eax
c83b(2): test %eax,%eax
c83d(6): jz 0xffffff68(%rip)
c843(5): mov 0x18(%rsp),%rax
c848(5): add %rax,0x10(%rsp)
c84d(4): add $0x1,%rbx
c851(5): mov $0x0,0xc(%rsp)
c856(4): cmp $0x0,(%rsp)
c85a(2): jz 0xffffffa6(%rip)
c85c(5): call 0xffff5694(%rip)
c861(5): mov 0x10(%rsp),%r14
c866(3): mov %rax,%rsi
c869(3): mov %r14,%rdi
c86c(5): call 0xffffc7e4(%rip)
c871(4): lea 0x4(%rbp),%rcx
c875(4): lea 0x24(%rbp),%rdi
c879(3): mov %rax,%rdx
c87c(3): mov %r14,%rsi
c87f(5): call 0xffffd771(%rip)
c884(4): cmp $0xffffffff,%rax
c888(5): mov %rax,0x18(%rsp)
c88d(2): jz 0x6b(%rip)
c88f(4): cmp $0xfffffffe,%rax
c893(2): jz 0x7d(%rip)
c895(3): test %rax,%rax
c898(2): jnz 0x25(%rip)
c89a(5): mov 0x10(%rsp),%rax
c89f(9): mov $0x1,0x18(%rsp)
c8a8(3): cmp $0x0,(%rax)
c8ab(6): jnz 0xb3(%rip)
c8b1(4): mov 0x24(%rsp),%edx
c8b5(2): test %edx,%edx
c8b7(6): jnz 0xc6(%rip)
c8bd(4): lea 0x4(%rbp),%rdi
c8c1(5): mov $0x1,0x20(%rsp)
c8c6(5): call 0xffff59ea(%rip)
c8cb(2): test %eax,%eax
c8cd(2): jz 0x63(%rip)
c8cf(4): mov $0x0,(%rsp)
c8d3(5): mov $0x1,0xc(%rsp)
c8d8(5): jmp 0xffffff5f(%rip)
c8dd(3): nop (%rax)
c8e0(3): mov %r13,%rdi
c8e3(5): call 0xffff59cd(%rip)
c8e8(2): test %eax,%eax
c8ea(2): jz 0x50(%rip)
c8ec(4): mov $0x1,(%rsp)
c8f0(5): jmp 0xffffff6c(%rip)
c8f5(3): nop (%rax)
c8f8(9): mov $0x1,0x18(%rsp)
c901(5): mov $0x0,0x20(%rsp)
c906(5): jmp 0xffffff3d(%rip)
c90b(5): nop 0x0(%rax,%rax,1)
c910(5): mov 0x10(%rsp),%rdi
c915(5): call 0xffff55eb(%rip)
c91a(5): mov $0x0,0x20(%rsp)
c91f(5): mov %rax,0x18(%rsp)
c924(5): jmp 0xffffff1f(%rip)
c929(7): nop 0x0(%rax)
c930(5): mov $0x1,0xc(%rsp)
c935(5): jmp 0xffffff02(%rip)
c93a(7): lea 0x409f(%rip),%rcx
c941(7): lea 0x3710(%rip),%rsi
c948(7): lea 0x373b(%rip),%rdi
c94f(5): mov $0x96,%edx
c954(5): call 0xffff568c(%rip)
c959(5): call 0xffff55c7(%rip)
c95e(7): lea 0x407b(%rip),%rcx
c965(7): lea 0x36ec(%rip),%rsi
c96c(7): lea 0x372e(%rip),%rdi
c973(5): mov $0xb2,%edx
c978(5): call 0xffff5668(%rip)
c97d(7): lea 0x405c(%rip),%rcx
c984(7): lea 0x36cd(%rip),%rsi
c98b(7): lea 0x36e6(%rip),%rdi
c992(5): mov $0xb3,%edx
c997(5): call 0xffff5649(%rip)

"__libc_csu_init" :
c9a0(2): push %r15
c9a2(2): push %r14
c9a4(3): mov %rdx,%r15
c9a7(2): push %r13
c9a9(2): push %r12
c9ab(7): lea 0x20607e(%rip),%r12
c9b2(1): push %rbp
c9b3(7): lea 0x20607e(%rip),%rbp
c9ba(1): push %rbx
c9bb(3): mov %edi,%r13d
c9be(3): mov %rsi,%r14
c9c1(3): sub %r12,%rbp
c9c4(4): sub $0x8,%rsp
c9c8(4): sar $0x3,%rbp
c9cc(5): call 0xffff53bc(%rip)
c9d1(3): test %rbp,%rbp
c9d4(2): jz 0x22(%rip)
c9d6(2): xor %ebx,%ebx
c9d8(8): nop 0x0(%rax,%rax,1)
c9e0(3): mov %r15,%rdx
c9e3(3): mov %r14,%rsi
c9e6(3): mov %r13d,%edi
c9e9(4): call 0x0(%r12,%rbx,8)
c9ed(4): add $0x1,%rbx
c9f1(3): cmp %rbx,%rbp
c9f4(2): jnz 0xffffffec(%rip)
c9f6(4): add $0x8,%rsp
c9fa(1): pop %rbx
c9fb(1): pop %rbp
c9fc(2): pop %r12
c9fe(2): pop %r13
ca00(2): pop %r14
ca02(2): pop %r15
ca04(1): ret near (%rsp)

"atexit" :
ca20(7): mov 0x2065e1(%rip),%rdx
ca27(2): xor %esi,%esi
ca29(5): jmp 0xffff57f7(%rip)

"_fini" :
ca30(4): sub $0x8,%rsp
ca34(4): add $0x8,%rsp
ca38(1): ret near (%rsp)

