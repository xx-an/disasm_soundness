
"__uflow@plt" :
1480(6): jmp 0x2079ba(%rip)
1486(5): push $0x0

"free@plt" :
1490(6): jmp 0x2079b2(%rip)
1496(5): push $0x1

"abort@plt" :
14a0(6): jmp 0x2079aa(%rip)
14a6(5): push $0x2

"__errno_location@plt" :
14b0(6): jmp 0x2079a2(%rip)
14b6(5): push $0x3

"strncmp@plt" :
14c0(6): jmp 0x20799a(%rip)
14c6(5): push $0x4

"_exit@plt" :
14d0(6): jmp 0x207992(%rip)
14d6(5): push $0x5

"__fpending@plt" :
14e0(6): jmp 0x20798a(%rip)
14e6(5): push $0x6

"fcntl@plt" :
14f0(6): jmp 0x207982(%rip)
14f6(5): push $0x7

"textdomain@plt" :
1500(6): jmp 0x20797a(%rip)
1506(5): push $0x8

"fclose@plt" :
1510(6): jmp 0x207972(%rip)
1516(5): push $0x9

"bindtextdomain@plt" :
1520(6): jmp 0x20796a(%rip)
1526(5): push $0xa

"dcgettext@plt" :
1530(6): jmp 0x207962(%rip)
1536(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1540(6): jmp 0x20795a(%rip)
1546(5): push $0xc

"strlen@plt" :
1550(6): jmp 0x207952(%rip)
1556(5): push $0xd

"__stack_chk_fail@plt" :
1560(6): jmp 0x20794a(%rip)
1566(5): push $0xe

"getopt_long@plt" :
1570(6): jmp 0x207942(%rip)
1576(5): push $0xf

"mbrtowc@plt" :
1580(6): jmp 0x20793a(%rip)
1586(5): push $0x10

"strrchr@plt" :
1590(6): jmp 0x207932(%rip)
1596(5): push $0x11

"lseek@plt" :
15a0(6): jmp 0x20792a(%rip)
15a6(5): push $0x12

"memset@plt" :
15b0(6): jmp 0x207922(%rip)
15b6(5): push $0x13

"close@plt" :
15c0(6): jmp 0x20791a(%rip)
15c6(5): push $0x14

"posix_fadvise@plt" :
15d0(6): jmp 0x207912(%rip)
15d6(5): push $0x15

"memcmp@plt" :
15e0(6): jmp 0x20790a(%rip)
15e6(5): push $0x16

"fputs_unlocked@plt" :
15f0(6): jmp 0x207902(%rip)
15f6(5): push $0x17

"calloc@plt" :
1600(6): jmp 0x2078fa(%rip)
1606(5): push $0x18

"strcmp@plt" :
1610(6): jmp 0x2078f2(%rip)
1616(5): push $0x19

"memcpy@plt" :
1620(6): jmp 0x2078ea(%rip)
1626(5): push $0x1a

"fileno@plt" :
1630(6): jmp 0x2078e2(%rip)
1636(5): push $0x1b

"malloc@plt" :
1640(6): jmp 0x2078da(%rip)
1646(5): push $0x1c

"fflush@plt" :
1650(6): jmp 0x2078d2(%rip)
1656(5): push $0x1d

"nl_langinfo@plt" :
1660(6): jmp 0x2078ca(%rip)
1666(5): push $0x1e

"strcoll@plt" :
1670(6): jmp 0x2078c2(%rip)
1676(5): push $0x1f

"__freading@plt" :
1680(6): jmp 0x2078ba(%rip)
1686(5): push $0x20

"fwrite_unlocked@plt" :
1690(6): jmp 0x2078b2(%rip)
1696(5): push $0x21

"realloc@plt" :
16a0(6): jmp 0x2078aa(%rip)
16a6(5): push $0x22

"fdopen@plt" :
16b0(6): jmp 0x2078a2(%rip)
16b6(5): push $0x23

"setlocale@plt" :
16c0(6): jmp 0x20789a(%rip)
16c6(5): push $0x24

"__printf_chk@plt" :
16d0(6): jmp 0x207892(%rip)
16d6(5): push $0x25

"error@plt" :
16e0(6): jmp 0x20788a(%rip)
16e6(5): push $0x26

"fseeko@plt" :
16f0(6): jmp 0x207882(%rip)
16f6(5): push $0x27

"fopen@plt" :
1700(6): jmp 0x20787a(%rip)
1706(5): push $0x28

"__cxa_atexit@plt" :
1710(6): jmp 0x207872(%rip)
1716(5): push $0x29

"exit@plt" :
1720(6): jmp 0x20786a(%rip)
1726(5): push $0x2a

"fwrite@plt" :
1730(6): jmp 0x207862(%rip)
1736(5): push $0x2b

"__fprintf_chk@plt" :
1740(6): jmp 0x20785a(%rip)
1746(5): push $0x2c

"mbsinit@plt" :
1750(6): jmp 0x207852(%rip)
1756(5): push $0x2d

"iswprint@plt" :
1760(6): jmp 0x20784a(%rip)
1766(5): push $0x2e

"__ctype_b_loc@plt" :
1770(6): jmp 0x207842(%rip)
1776(5): push $0x2f

".plt.got" :
1780(6): jmp 0x20785a(%rip)
1786(2): nop 

"_init" :
1458(4): sub $0x8,%rsp
145c(7): mov 0x207b6d(%rip),%rax
1463(3): test %rax,%rax
1466(2): jz 0x4(%rip)
1468(2): call %rax
146a(4): add $0x8,%rsp
146e(1): ret near (%rsp)

"main" :
1790(2): push %r13
1792(2): push %r12
1794(7): mov $0xffffffff,%r12
179b(1): push %rbp
179c(1): push %rbx
179d(3): movsxd %edi,%rbp
17a0(3): mov %rsi,%rbx
17a3(4): sub $0x8,%rsp
17a7(3): mov (%rsi),%rdi
17aa(5): call 0x1416(%rip)
17af(7): lea 0x4a43(%rip),%rsi
17b6(5): mov $0x6,%edi
17bb(5): call 0xffffff05(%rip)
17c0(7): lea 0x495d(%rip),%rsi
17c7(7): lea 0x492d(%rip),%rdi
17ce(5): call 0xfffffd52(%rip)
17d3(7): lea 0x4921(%rip),%rdi
17da(5): call 0xfffffd26(%rip)
17df(5): mov $0x3,%edi
17e4(5): call 0x11ac(%rip)
17e9(7): lea 0x1010(%rip),%rdi
17f0(6): mov %al,0x20790d(%rip)
17f6(5): call 0x425a(%rip)
17fb(7): mov $0x1,0x207900(%rip)
1802(7): mov $0x1,0x2078f8(%rip)
1809(7): mov $0x1,0x2078f0(%rip)
1810(7): mov $0x0,0x2078e8(%rip)
1817(7): mov $0x0,0x2078e0(%rip)
181e(7): mov $0x0,0x2078d8(%rip)
1825(a): mov $0x0,0x2078c9(%rip)
182f(7): mov $0x0,0x2078c6(%rip)
1836(a): nop 0x0(%rax,%rax,1)
1840(7): lea 0x207299(%rip),%rcx
1847(7): lea 0x4912(%rip),%rdx
184e(3): xor %r8d,%r8d
1851(3): mov %rbx,%rsi
1854(2): mov %ebp,%edi
1856(5): call 0xfffffd1a(%rip)
185b(3): cmp $0xff,%eax
185e(6): jz 0x17b(%rip)
1864(3): cmp $0x33,%eax
1867(6): jz 0xf9(%rip)
186d(2): jle 0x33(%rip)
186f(5): cmp $0x81,%eax
1874(2): jz 0x7c(%rip)
1876(2): jnle 0x5a(%rip)
1878(3): cmp $0x7a,%eax
187b(6): jz 0xf5(%rip)
1881(3): add $0x80,%eax
1884(6): jnz 0x1e7(%rip)
188a(a): mov $0x1,0x207864(%rip)
1894(2): jmp 0xffffffac(%rip)
1896(a): nop 0x0(%rax,%rax,1)
18a0(5): cmp $0xffffff7e,%eax
18a5(6): jz 0x1d0(%rip)
18ab(6): jle 0xe5(%rip)
18b1(3): cmp $0x31,%eax
18b4(6): jz 0xcc(%rip)
18ba(3): cmp $0x32,%eax
18bd(6): jnz 0x1ae(%rip)
18c3(7): mov $0x0,0x207837(%rip)
18ca(5): jmp 0xffffff76(%rip)
18cf(1): nop 
18d0(5): cmp $0x82,%eax
18d5(2): jz 0x2b(%rip)
18d7(5): cmp $0x83,%eax
18dc(6): jnz 0x18f(%rip)
18e2(7): mov $0x1,0x207813(%rip)
18e9(5): jmp 0xffffff57(%rip)
18ee(2): nop 
18f0(a): mov $0x2,0x2077fe(%rip)
18fa(5): jmp 0xffffff46(%rip)
18ff(1): nop 
1900(8): cmp $0x0,0x2077e8(%rip)
1908(7): mov 0x2077b1(%rip),%r13
190f(2): jz 0x19(%rip)
1911(7): mov 0x207700(%rip),%rdi
1918(3): mov %r13,%rsi
191b(5): call 0xfffffcf5(%rip)
1920(2): test %eax,%eax
1922(6): jnz 0x181(%rip)
1928(5): cmp $0x0,0x0(%r13)
192d(7): mov %r13,0x2076e4(%rip)
1934(5): mov $0x1,%eax
1939(2): jz 0x16(%rip)
193b(2): xor %eax,%eax
193d(3): mov %r12,%rcx
1940(3): mov %r13,%rdi
1943(2): REPNZ scasb rdi(%es,10),%al
1945(3): mov %rcx,%rax
1948(3): not %rax
194b(4): sub $0x1,%rax
194f(7): mov %rax,0x20779a(%rip)
1956(5): jmp 0xfffffeea(%rip)
195b(5): nop 0x0(%rax,%rax,1)
1960(7): mov $0x0,0x207799(%rip)
1967(5): jmp 0xfffffed9(%rip)
196c(4): nop 0x0(%rax)
1970(7): mov $0x0,0x207699(%rip)
1977(5): jmp 0xfffffec9(%rip)
197c(4): nop 0x0(%rax)
1980(7): mov $0x0,0x20777b(%rip)
1987(5): jmp 0xfffffeb9(%rip)
198c(4): nop 0x0(%rax)
1990(5): cmp $0xffffff7d,%eax
1995(6): jnz 0xd6(%rip)
199b(4): sub $0x8,%rsp
199f(7): mov 0x207702(%rip),%rdi
19a6(7): mov 0x207673(%rip),%rcx
19ad(2): push $0x0
19af(7): lea 0x4786(%rip),%r9
19b6(7): lea 0x478f(%rip),%r8
19bd(7): lea 0x4733(%rip),%rdx
19c4(7): lea 0x46b1(%rip),%rsi
19cb(2): xor %eax,%eax
19cd(5): call 0x33f3(%rip)
19d2(2): xor %edi,%edi
19d4(5): call 0xfffffd4c(%rip)
19d9(8): cmp $0x0,0x20770f(%rip)
19e1(2): jz 0x4c(%rip)
19e3(7): movsxd 0x2076ce(%rip),%rax
19ea(2): mov %ebp,%edx
19ec(2): sub %eax,%edx
19ee(3): cmp $0x1,%edx
19f1(6): jle 0x8b(%rip)
19f7(3): cmp $0x2,%edx
19fa(6): jnz 0xcd(%rip)
1a00(4): lea 0x0(%rbx,%rax,8),%rdi
1a04(5): call 0x35c(%rip)
1a09(7): cmp $0x0,0x2076ed(%rip)
1a10(6): jnz 0xd5(%rip)
1a16(7): cmp $0x0,0x2076e1(%rip)
1a1d(6): jnz 0xc8(%rip)
1a23(1): pop %rdx
1a24(2): xor %eax,%eax
1a26(1): pop %rbx
1a27(1): pop %rbp
1a28(2): pop %r12
1a2a(2): pop %r13
1a2c(1): ret near (%rsp)
1a2d(b): mov $0x1,0x2076b8(%rip)
1a38(2): jmp 0xffffffab(%rip)
1a3a(5): mov 0xfffffff8(%rbx,%rbp,8),%rdi
1a3f(5): call 0x2e91(%rip)
1a44(7): lea 0x472a(%rip),%rsi
1a4b(3): mov %rax,%rbx
1a4e(5): mov $0x5,%edx
1a53(2): xor %edi,%edi
1a55(5): call 0xfffffadb(%rip)
1a5a(3): mov %rbx,%rcx
1a5d(3): mov %rax,%rdx
1a60(2): xor %esi,%esi
1a62(2): xor %edi,%edi
1a64(2): xor %eax,%eax
1a66(5): call 0xfffffc7a(%rip)
1a6b(5): mov $0x1,%edi
1a70(5): call 0x8d0(%rip)
1a75(2): xor %edi,%edi
1a77(5): call 0x8c9(%rip)
1a7c(2): cmp %ebp,%eax
1a7e(2): jl 0xffffffbc(%rip)
1a80(7): lea 0x46de(%rip),%rsi
1a87(2): xor %edi,%edi
1a89(5): mov $0x5,%edx
1a8e(5): call 0xfffffaa2(%rip)
1a93(2): xor %esi,%esi
1a95(3): mov %rax,%rdx
1a98(2): xor %edi,%edi
1a9a(2): xor %eax,%eax
1a9c(5): call 0xfffffc44(%rip)
1aa1(2): jmp 0xffffffca(%rip)
1aa3(7): lea 0x4596(%rip),%rsi
1aaa(5): mov $0x5,%edx
1aaf(2): xor %edi,%edi
1ab1(5): call 0xfffffa7f(%rip)
1ab6(2): xor %esi,%esi
1ab8(3): mov %rax,%rdx
1abb(5): mov $0x1,%edi
1ac0(2): xor %eax,%eax
1ac2(5): call 0xfffffc1e(%rip)
1ac7(5): mov 0x10(%rbx,%rax,8),%rdi
1acc(5): call 0x2e04(%rip)
1ad1(5): mov $0x5,%edx
1ad6(3): mov %rax,%rbx
1ad9(7): lea 0x46ae(%rip),%rsi
1ae0(5): jmp 0xffffff73(%rip)
1ae5(7): lea 0x46b3(%rip),%rsi
1aec(5): mov $0x5,%edx
1af1(2): xor %edi,%edi
1af3(5): call 0xfffffa3d(%rip)
1af8(2): xor %esi,%esi
1afa(3): mov %rax,%rdx
1afd(5): mov $0x1,%edi
1b02(2): xor %eax,%eax
1b04(5): call 0xfffffbdc(%rip)
1b09(7): nop 0x0(%rax)
1b10(2): xor %ebp,%ebp
1b12(3): mov %rdx,%r9
1b15(1): pop %rsi
1b16(3): mov %rsp,%rdx
1b19(4): and $0xfffffff0,%rsp
1b1d(1): push %rax
1b1e(1): push %rsp
1b1f(7): lea 0x3f1a(%rip),%r8
1b26(7): lea 0x3ea3(%rip),%rcx
1b2d(7): lea 0xfffffc5c(%rip),%rdi
1b34(6): call 0x20748e(%rip)
1b3a(1): hlt 

"_start" :
1b10(2): xor %ebp,%ebp
1b12(3): mov %rdx,%r9
1b15(1): pop %rsi
1b16(3): mov %rsp,%rdx
1b19(4): and $0xfffffff0,%rsp
1b1d(1): push %rax
1b1e(1): push %rsp
1b1f(7): lea 0x3f1a(%rip),%r8
1b26(7): lea 0x3ea3(%rip),%rcx
1b2d(7): lea 0xfffffc5c(%rip),%rdi
1b34(6): call 0x20748e(%rip)
1b3a(1): hlt 

"deregister_tm_clones" :
1b40(7): lea 0x207559(%rip),%rdi
1b47(1): push %rbp
1b48(7): lea 0x207551(%rip),%rax
1b4f(3): cmp %rdi,%rax
1b52(3): mov %rsp,%rbp
1b55(2): jz 0x1b(%rip)
1b57(7): mov 0x207462(%rip),%rax
1b5e(3): test %rax,%rax
1b61(2): jz 0xf(%rip)
1b63(1): pop %rbp
1b64(2): jmp %rax
1b66(a): nop 0x0(%rax,%rax,1)
1b70(1): pop %rbp
1b71(1): ret near (%rsp)

"register_tm_clones" :
1b80(7): lea 0x207519(%rip),%rdi
1b87(7): lea 0x207512(%rip),%rsi
1b8e(1): push %rbp
1b8f(3): sub %rdi,%rsi
1b92(3): mov %rsp,%rbp
1b95(4): sar $0x3,%rsi
1b99(3): mov %rsi,%rax
1b9c(4): shr $0x3f,%rax
1ba0(3): add %rax,%rsi
1ba3(3): sar $0x1,%rsi
1ba6(2): jz 0x1a(%rip)
1ba8(7): mov 0x207429(%rip),%rax
1baf(3): test %rax,%rax
1bb2(2): jz 0xe(%rip)
1bb4(1): pop %rbp
1bb5(2): jmp %rax
1bb7(9): nop 0x0(%rax,%rax,1)
1bc0(1): pop %rbp
1bc1(1): ret near (%rsp)

"__do_global_dtors_aux" :
1bd0(7): cmp $0x0,0x207511(%rip)
1bd7(2): jnz 0x31(%rip)
1bd9(8): cmp $0x0,0x2073ff(%rip)
1be1(1): push %rbp
1be2(3): mov %rsp,%rbp
1be5(2): jz 0xe(%rip)
1be7(7): mov 0x20741a(%rip),%rdi
1bee(5): call 0xfffffb92(%rip)
1bf3(5): call 0xffffff4d(%rip)
1bf8(7): mov $0x1,0x2074e9(%rip)
1bff(1): pop %rbp
1c00(1): ret near (%rsp)
1c01(7): nop 0x0(%rax)
1c08(2): REP ret near (%rsp)

"frame_dummy" :
1c10(1): push %rbp
1c11(3): mov %rsp,%rbp
1c14(1): pop %rbp
1c15(5): jmp 0xffffff6b(%rip)

"writeline.isra.0" :
1c20(3): cmp $0x2,%ecx
1c23(2): push %r12
1c25(3): mov %rdi,%r12
1c28(1): push %rbp
1c29(3): mov %rsi,%rbp
1c2c(1): push %rbx
1c2d(3): mov %rdx,%rbx
1c30(2): jz 0x70(%rip)
1c32(3): cmp $0x3,%ecx
1c35(2): jnz 0x5b(%rip)
1c37(7): cmp $0x0,0x2074c2(%rip)
1c3e(2): jz 0x5b(%rip)
1c40(7): cmp $0x0,0x2074bb(%rip)
1c47(2): jz 0x1d(%rip)
1c49(3): mov %rdx,%rcx
1c4c(7): mov 0x2073c5(%rip),%rdi
1c53(7): mov 0x207496(%rip),%rdx
1c5a(5): mov $0x1,%esi
1c5f(5): call 0xfffffa31(%rip)
1c64(7): cmp $0x0,0x207496(%rip)
1c6b(2): jnz 0x47(%rip)
1c6d(3): mov %rbx,%rcx
1c70(4): mov (%r12),%rdx
1c74(4): mov 0x0(%rbp),%rdi
1c78(1): pop %rbx
1c79(1): pop %rbp
1c7a(2): pop %r12
1c7c(5): mov $0x1,%esi
1c81(5): jmp 0xfffffa0f(%rip)
1c86(a): nop 0x0(%rax,%rax,1)
1c90(7): cmp $0x0,0x20746b(%rip)
1c97(2): jnz 0xffffffd6(%rip)
1c99(1): pop %rbx
1c9a(1): pop %rbp
1c9b(2): pop %r12
1c9d(1): ret near (%rsp)
1c9e(2): nop 
1ca0(7): cmp $0x0,0x20745a(%rip)
1ca7(2): jz 0xfffffff2(%rip)
1ca9(7): cmp $0x0,0x207452(%rip)
1cb0(2): jz 0xffffffbd(%rip)
1cb2(7): mov 0x207437(%rip),%rdx
1cb9(7): mov 0x207358(%rip),%rdi
1cc0(3): mov %rbx,%rcx
1cc3(5): mov $0x1,%esi
1cc8(5): call 0xfffff9c8(%rip)
1ccd(2): jmp 0xffffffa0(%rip)

"check_order.isra.1.part.2" :
1cd0(2): push %r12
1cd2(1): push %rbp
1cd3(7): lea 0x207423(%rip),%r12
1cda(1): push %rbx
1cdb(4): lea 0xffffffff(%r8),%ebx
1cdf(3): movsxd %ebx,%rbx
1ce2(5): cmp $0x0,0x0(%r12,%rbx,1)
1ce7(2): jnz 0x64(%rip)
1ce9(3): mov %rsi,%rax
1cec(3): mov %r8d,%ebp
1cef(3): mov (%rdi),%rsi
1cf2(3): mov %rcx,%r8
1cf5(3): mov (%rdx),%rcx
1cf8(3): mov (%rax),%rdi
1cfb(3): mov (%r8),%rdx
1cfe(4): sub $0x1,%rsi
1d02(4): sub $0x1,%rcx
1d06(7): cmp $0x0,0x2073f6(%rip)
1d0d(2): jnz 0x43(%rip)
1d0f(5): call 0xe71(%rip)
1d14(2): test %eax,%eax
1d16(2): jle 0x35(%rip)
1d18(7): lea 0x3d69(%rip),%rsi
1d1f(2): xor %edi,%edi
1d21(5): mov $0x5,%edx
1d26(5): call 0xfffff80a(%rip)
1d2b(2): xor %edi,%edi
1d2d(7): cmp $0x1,0x2073c4(%rip)
1d34(3): mov %rax,%rdx
1d37(2): mov %ebp,%ecx
1d39(4): setz %dil
1d3d(2): xor %esi,%esi
1d3f(2): xor %eax,%eax
1d41(5): call 0xfffff99f(%rip)
1d46(5): mov $0x1,0x0(%r12,%rbx,1)
1d4b(1): pop %rbx
1d4c(1): pop %rbp
1d4d(2): pop %r12
1d4f(1): ret near (%rsp)
1d50(5): call 0x3520(%rip)
1d55(2): jmp 0xffffffbf(%rip)

"compare_files" :
1d60(2): push %r15
1d62(2): push %r14
1d64(3): mov %rdi,%r14
1d67(2): push %r13
1d69(2): push %r12
1d6b(1): push %rbp
1d6c(1): push %rbx
1d6d(2): xor %ebp,%ebp
1d6f(7): sub $0x208,%rsp
1d76(9): mov $0x28,%rax
1d7f(8): mov %rax,0x1f8(%rsp)
1d87(2): xor %eax,%eax
1d89(8): lea 0x80(%rsp),%rax
1d91(8): lea 0xe0(%rsp),%r15
1d99(5): mov %rdi,0x48(%rsp)
1d9e(5): mov %rax,0x10(%rsp)
1da3(3): mov %rax,%r12
1da6(5): lea 0x70(%rsp),%rax
1dab(5): mov %rax,0x18(%rsp)
1db0(8): lea 0xa0(%rsp),%rax
1db8(5): mov %rax,0x20(%rsp)
1dbd(5): mov 0x20(%rsp),%rcx
1dc2(3): mov %rbp,%rax
1dc5(4): lea 0x60(%r15),%r13
1dc9(4): shl/sal $0x5,%rax
1dcd(4): mov %ebp,0x8(%rsp)
1dd1(4): lea 0x0(%rcx,%rax,1),%rbx
1dd5(3): mov %r15,%rdi
1dd8(4): add $0x8,%rbx
1ddc(5): call 0xc64(%rip)
1de1(4): mov %r15,0xfffffff8(%rbx)
1de5(4): add $0x18,%r15
1de9(3): cmp %r13,%r15
1dec(2): jnz 0xffffffe9(%rip)
1dee(3): mov (%r14),%rdx
1df1(7): lea 0x446a(%rip),%rdi
1df8(5): mov $0x2,%ecx
1dfd(8): mov $0x0,(%r12)
1e05(9): mov $0x0,0x4(%r12)
1e0e(9): mov $0x0,0x8(%r12)
1e17(7): mov 0x207292(%rip),%r13
1e1e(3): mov %rdx,%rsi
1e21(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e23(3): setnbe %al
1e26(2): sbb $0x0,%al
1e28(2): test %al,%al
1e2a(6): jnz 0x41b(%rip)
1e30(5): mov 0x18(%rsp),%rax
1e35(3): test %r13,%r13
1e38(4): mov %r13,0x0(%rax,%rbp,8)
1e3c(6): jz 0x4ce(%rip)
1e42(5): mov $0x2,%esi
1e47(3): mov %r13,%rdi
1e4a(5): call 0xa76(%rip)
1e4f(5): movsxd 0x8(%rsp),%rbx
1e54(7): movsx 0x2071b5(%rip),%edx
1e5b(3): mov %r13,%rsi
1e5e(4): shl/sal $0x5,%rbx
1e62(8): mov 0xa0(%rsp,%rbx,1),%rdi
1e6a(5): call 0xbe6(%rip)
1e6f(5): lea 0x60(%rsp),%rdx
1e74(4): mov %rax,0x0(%rdx,%rbp,8)
1e78(4): mov 0x0(%r13),%eax
1e7c(3): and $0x20,%eax
1e7f(6): jnz 0x45c(%rip)
1e85(4): add $0x8,%r14
1e89(4): add $0xc,%r12
1e8d(4): cmp $0x1,%rbp
1e91(2): jz 0xf(%rip)
1e93(5): mov $0x1,%ebp
1e98(5): jmp 0xffffff25(%rip)
1e9d(3): nop (%rax)
1ea0(4): mov %eax,0x44(%rsp)
1ea4(5): mov %rdx,0x20(%rsp)
1ea9(9): mov $0x0,0x38(%rsp)
1eb2(9): mov $0x0,0x28(%rsp)
1ebb(9): mov $0x0,0x30(%rsp)
1ec4(4): nop 0x0(%rax)
1ec8(5): mov 0x60(%rsp),%rbp
1ecd(5): mov 0x68(%rsp),%rbx
1ed2(3): test %rbp,%rbp
1ed5(6): jz 0x1d3(%rip)
1edb(3): test %rbx,%rbx
1ede(5): mov $0x0,0x5e(%rsp)
1ee3(5): mov $0x0,0x5f(%rsp)
1ee8(6): jz 0x208(%rip)
1eee(7): cmp $0x0,0x20720e(%rip)
1ef5(4): mov 0x8(%rbx),%r14
1ef9(4): mov 0x10(%rbx),%rsi
1efd(4): mov 0x8(%rbp),%r15
1f01(4): mov 0x10(%rbp),%rdi
1f05(6): jnz 0x233(%rip)
1f0b(3): cmp %r14,%r15
1f0e(3): mov %r14,%rdx
1f11(4): cmovbe %r15,%rdx
1f15(4): sub $0x1,%rdx
1f19(5): call 0xfffff6c7(%rip)
1f1e(2): test %eax,%eax
1f20(6): jnz 0x200(%rip)
1f26(3): cmp %r14,%r15
1f29(6): jb 0x1c7(%rip)
1f2f(3): setnz %al
1f32(3): movzx %al,%eax
1f35(2): test %eax,%eax
1f37(7): mov 0x20716a(%rip),%rdx
1f3e(6): jnz 0x1e9(%rip)
1f44(4): lea 0x10(%rbx),%rsi
1f48(4): lea 0x8(%rbx),%rdi
1f4c(5): mov $0x3,%ecx
1f51(6): add $0x1,0x38(%rsp)
1f57(5): call 0xfffffcc9(%rip)
1f5c(5): mov $0x1,0x5f(%rsp)
1f61(5): mov $0x1,0x5e(%rsp)
1f66(5): mov $0x1,%eax
1f6b(2): xor %ebx,%ebx
1f6d(2): test %al,%al
1f6f(5): mov 0x10(%rsp),%rbp
1f74(3): mov %ebx,%r14d
1f77(2): jnz 0x21(%rip)
1f79(4): add $0xc,%rbp
1f7d(4): cmp $0x1,%rbx
1f81(6): jz 0xffffff47(%rip)
1f87(5): movzx 0x5f(%rsp),%eax
1f8c(5): mov $0x1,%ebx
1f91(3): mov %ebx,%r14d
1f94(2): test %al,%al
1f96(2): jz 0xffffffe3(%rip)
1f98(4): movsxd 0x0(%rbp),%r12
1f9c(5): mov 0x18(%rsp),%rcx
1fa1(4): movsxd 0x4(%rbp),%r15
1fa5(7): movsx 0x207064(%rip),%edx
1fac(4): mov 0x0(%rcx,%rbx,8),%r13
1fb0(8): lea 0x0(,%rbx,4),%rcx
1fb8(5): lea 0x1(%r12),%eax
1fbd(4): mov %r12d,0x4(%rbp)
1fc1(4): mov %r15d,0x8(%rbp)
1fc5(5): mov %rcx,0x8(%rsp)
1fca(3): and $0x3,%eax
1fcd(3): mov %r13,%rsi
1fd0(3): mov %eax,0x0(%rbp)
1fd3(2): cwde 
1fd5(3): add %rcx,%rax
1fd8(8): mov 0xa0(%rsp,%rax,8),%rdi
1fe0(5): call 0xa70(%rip)
1fe5(5): mov 0x20(%rsp),%rsi
1fea(3): test %rax,%rax
1fed(5): mov 0x8(%rsp),%rcx
1ff2(4): mov %rax,0x0(%rsi,%rbx,8)
1ff6(2): jz 0x5a(%rip)
1ff8(6): mov 0x2070fa(%rip),%edx
1ffe(3): cmp $0x2,%edx
2001(2): jz 0x38(%rip)
2003(3): cmp $0x1,%edx
2006(2): jz 0xb(%rip)
2008(7): cmp $0x0,0x2070f0(%rip)
200f(2): jz 0x2a(%rip)
2011(3): movsxd %r14d,%rdx
2014(4): lea 0x10(%rax),%rcx
2018(4): lea 0x1(%rbx),%r8d
201c(4): lea 0x0(%r12,%rdx,4),%rdx
2020(8): mov 0xa0(%rsp,%rdx,8),%rdi
2028(4): lea 0x8(%rax),%rdx
202c(4): lea 0x10(%rdi),%rsi
2030(4): add $0x8,%rdi
2034(5): call 0xfffffc9c(%rip)
2039(5): test $0x20,0x0(%r13)
203e(6): jnz 0x21e(%rip)
2044(5): mov $0x0,0x5e(%rsp,%rbx,1)
2049(5): jmp 0xffffff30(%rip)
204e(2): nop 
2050(3): add %r15,%rcx
2053(8): mov 0xa0(%rsp,%rcx,8),%rdi
205b(5): cmp $0x0,0x10(%rdi)
2060(2): jz 0xffffffd9(%rip)
2062(6): mov 0x207090(%rip),%eax
2068(3): cmp $0x2,%eax
206b(2): jz 0xffffffce(%rip)
206d(3): cmp $0x1,%eax
2070(2): jz 0xb(%rip)
2072(7): cmp $0x0,0x207086(%rip)
2079(2): jz 0xffffffc0(%rip)
207b(3): movsxd %r14d,%rax
207e(4): lea 0x10(%rdi),%rsi
2082(4): lea 0x1(%rbx),%r8d
2086(4): lea 0x0(%r12,%rax,4),%rax
208a(4): add $0x8,%rdi
208e(8): mov 0xa0(%rsp,%rax,8),%rdx
2096(4): lea 0x10(%rdx),%rcx
209a(4): add $0x8,%rdx
209e(5): call 0xfffffc32(%rip)
20a3(2): jmp 0xffffff96(%rip)
20a5(3): nop (%rax)
20a8(3): test %rbx,%rbx
20ab(6): jz 0xa5(%rip)
20b1(7): mov 0x206ff0(%rip),%rdx
20b8(5): mov $0x0,0x5e(%rsp)
20bd(7): mov $0x1,0x20703b(%rip)
20c4(4): lea 0x10(%rbx),%rsi
20c8(4): lea 0x8(%rbx),%rdi
20cc(5): mov $0x2,%ecx
20d1(6): add $0x1,0x28(%rsp)
20d7(5): call 0xfffffb49(%rip)
20dc(5): mov $0x1,0x5f(%rsp)
20e1(5): movzx 0x5e(%rsp),%eax
20e6(5): jmp 0xfffffe85(%rip)
20eb(5): nop 0x0(%rax,%rax,1)
20f0(7): mov 0x206fb1(%rip),%rdx
20f7(7): mov $0x1,0x207001(%rip)
20fe(4): lea 0x10(%rbp),%rsi
2102(4): lea 0x8(%rbp),%rdi
2106(5): mov $0x1,%ecx
210b(6): add $0x1,0x30(%rsp)
2111(5): call 0xfffffb0f(%rip)
2116(5): jmp 0xfffffe4b(%rip)
211b(5): nop 0x0(%rax,%rax,1)
2120(7): mov 0x206f81(%rip),%rdx
2127(2): test %eax,%eax
2129(7): mov $0x1,0x206fcf(%rip)
2130(2): jnle 0xffffff94(%rip)
2132(2): jmp 0xffffffcc(%rip)
2134(4): nop 0x0(%rax)
2138(4): sub $0x1,%r15
213c(4): lea 0xffffffff(%r14),%rcx
2140(3): mov %rsi,%rdx
2143(3): mov %r15,%rsi
2146(5): call 0x312a(%rip)
214b(5): jmp 0xfffffdea(%rip)
2150(5): mov 0x70(%rsp),%rdi
2155(5): call 0x31bb(%rip)
215a(2): test %eax,%eax
215c(6): jnz 0x140(%rip)
2162(5): mov 0x78(%rsp),%rdi
2167(5): call 0x31a9(%rip)
216c(2): test %eax,%eax
216e(6): jnz 0x126(%rip)
2174(7): cmp $0x0,0x206f81(%rip)
217b(6): jz 0xa1(%rip)
2181(7): lea 0x3edd(%rip),%rsi
2188(5): mov $0x5,%edx
218d(2): xor %edi,%edi
218f(7): movzx 0x206e7a(%rip),%ebp
2196(5): call 0xfffff39a(%rip)
219b(5): mov 0x38(%rsp),%rdi
21a0(8): lea 0x1e0(%rsp),%rsi
21a8(3): mov %rax,%rbx
21ab(7): mov 0x206e66(%rip),%r15
21b2(5): call 0x83e(%rip)
21b7(5): mov 0x28(%rsp),%rdi
21bc(8): lea 0x1c0(%rsp),%rsi
21c4(3): mov %rax,%r14
21c7(7): mov 0x206e4a(%rip),%r12
21ce(5): call 0x822(%rip)
21d3(5): mov 0x30(%rsp),%rdi
21d8(8): lea 0x1a0(%rsp),%rsi
21e0(7): mov 0x206e31(%rip),%r13
21e7(5): mov %rax,0x8(%rsp)
21ec(5): call 0x804(%rip)
21f1(1): push %rbp
21f2(1): push %rbx
21f3(7): lea 0x3e71(%rip),%rsi
21fa(2): push %r15
21fc(2): push %r14
21fe(3): mov %rax,%rdx
2201(5): mov 0x28(%rsp),%r8
2206(3): mov %r12,%r9
2209(3): mov %r13,%rcx
220c(5): mov $0x1,%edi
2211(2): xor %eax,%eax
2213(5): call 0xfffff4bd(%rip)
2218(4): add $0x20,%rsp
221c(8): mov 0x1f8(%rsp),%rax
2224(9): xor $0x28,%rax
222d(6): jnz 0xa9(%rip)
2233(7): add $0x208,%rsp
223a(1): pop %rbx
223b(1): pop %rbp
223c(2): pop %r12
223e(2): pop %r13
2240(2): pop %r14
2242(2): pop %r15
2244(1): ret near (%rsp)
2245(7): lea 0x3f6e(%rip),%rsi
224c(3): mov %rdx,%rdi
224f(5): call 0x6a1(%rip)
2254(3): mov %rax,%r13
2257(5): jmp 0xfffffbd9(%rip)
225c(5): mov 0x48(%rsp),%rax
2261(3): movsxd %r14d,%r15
2264(5): mov $0x3,%esi
2269(2): xor %edi,%edi
226b(4): mov 0x0(%rax,%r15,8),%rdx
226f(5): call 0x2491(%rip)
2274(3): mov %rax,%rbx
2277(5): call 0xfffff239(%rip)
227c(2): mov (%rax),%esi
227e(7): lea 0x3f8a(%rip),%rdx
2285(3): mov %rbx,%rcx
2288(5): mov $0x1,%edi
228d(2): xor %eax,%eax
228f(5): call 0xfffff451(%rip)
2294(8): mov $0x1,0x44(%rsp)
229c(5): movsxd 0x44(%rsp),%rax
22a1(5): mov 0x48(%rsp),%rcx
22a6(5): mov $0x3,%esi
22ab(2): xor %edi,%edi
22ad(4): mov 0x0(%rcx,%rax,8),%rdx
22b1(5): call 0x244f(%rip)
22b6(3): mov %rax,%rbx
22b9(5): call 0xfffff1f7(%rip)
22be(2): mov (%rax),%esi
22c0(7): lea 0x3f48(%rip),%rdx
22c7(3): mov %rbx,%rcx
22ca(5): mov $0x1,%edi
22cf(2): xor %eax,%eax
22d1(5): call 0xfffff40f(%rip)
22d6(5): call 0xfffff28a(%rip)
22db(3): mov (%r14),%rdx
22de(5): mov $0x3,%esi
22e3(2): xor %edi,%edi
22e5(5): call 0x241b(%rip)
22ea(3): mov %rax,%rbx
22ed(5): call 0xfffff1c3(%rip)
22f2(2): mov (%rax),%esi
22f4(7): lea 0x3f14(%rip),%rdx
22fb(3): mov %rbx,%rcx
22fe(5): mov $0x1,%edi
2303(2): xor %eax,%eax
2305(5): call 0xfffff3db(%rip)
230a(3): mov (%r14),%rdx
230d(5): mov $0x3,%esi
2312(2): xor %edi,%edi
2314(5): call 0x23ec(%rip)
2319(3): mov %rax,%rbx
231c(5): call 0xfffff194(%rip)
2321(2): mov (%rax),%esi
2323(7): lea 0x3ee5(%rip),%rdx
232a(3): mov %rbx,%rcx
232d(5): mov $0x1,%edi
2332(2): xor %eax,%eax
2334(5): call 0xfffff3ac(%rip)
2339(7): nop 0x0(%rax)
2340(2): push %r13
2342(2): push %r12
2344(5): mov $0x5,%edx
2349(1): push %rbp
234a(1): push %rbx
234b(2): mov %edi,%ebp
234d(7): sub $0x88,%rsp
2354(7): mov 0x206dbd(%rip),%rbx
235b(9): mov $0x28,%rax
2364(5): mov %rax,0x78(%rsp)
2369(2): xor %eax,%eax
236b(2): test %edi,%edi
236d(2): jz 0x30(%rip)
236f(7): lea 0x3732(%rip),%rsi
2376(2): xor %edi,%edi
2378(5): call 0xfffff1b8(%rip)
237d(7): mov 0x206d5c(%rip),%rdi
2384(3): mov %rax,%rdx
2387(3): mov %rbx,%rcx
238a(5): mov $0x1,%esi
238f(2): xor %eax,%eax
2391(5): call 0xfffff3af(%rip)
2396(2): mov %ebp,%edi
2398(5): call 0xfffff388(%rip)
239d(7): lea 0x372c(%rip),%rsi
23a4(2): xor %edi,%edi
23a6(5): call 0xfffff18a(%rip)
23ab(3): mov %rbx,%rdx
23ae(3): mov %rax,%rsi
23b1(5): mov $0x1,%edi
23b6(2): xor %eax,%eax
23b8(5): call 0xfffff318(%rip)
23bd(7): mov 0x206ce4(%rip),%rbx
23c4(7): lea 0x372d(%rip),%rsi
23cb(5): mov $0x5,%edx
23d0(2): xor %edi,%edi
23d2(5): call 0xfffff15e(%rip)
23d7(3): mov %rbx,%rsi
23da(3): mov %rax,%rdi
23dd(5): call 0xfffff213(%rip)
23e2(7): mov 0x206cbf(%rip),%rbx
23e9(7): lea 0x3740(%rip),%rsi
23f0(5): mov $0x5,%edx
23f5(2): xor %edi,%edi
23f7(5): call 0xfffff139(%rip)
23fc(3): mov %rbx,%rsi
23ff(3): mov %rax,%rdi
2402(5): call 0xfffff1ee(%rip)
2407(7): mov 0x206c9a(%rip),%rbx
240e(7): lea 0x375b(%rip),%rsi
2415(5): mov $0x5,%edx
241a(2): xor %edi,%edi
241c(5): call 0xfffff114(%rip)
2421(3): mov %rbx,%rsi
2424(3): mov %rax,%rdi
2427(5): call 0xfffff1c9(%rip)
242c(7): mov 0x206c75(%rip),%rbx
2433(7): lea 0x37f6(%rip),%rsi
243a(5): mov $0x5,%edx
243f(2): xor %edi,%edi
2441(5): call 0xfffff0ef(%rip)
2446(3): mov %rbx,%rsi
2449(3): mov %rax,%rdi
244c(5): call 0xfffff1a4(%rip)
2451(7): mov 0x206c50(%rip),%rbx
2458(7): lea 0x3891(%rip),%rsi
245f(5): mov $0x5,%edx
2464(2): xor %edi,%edi
2466(5): call 0xfffff0ca(%rip)
246b(3): mov %rbx,%rsi
246e(3): mov %rax,%rdi
2471(5): call 0xfffff17f(%rip)
2476(7): mov 0x206c2b(%rip),%rbx
247d(7): lea 0x392c(%rip),%rsi
2484(5): mov $0x5,%edx
2489(2): xor %edi,%edi
248b(5): call 0xfffff0a5(%rip)
2490(3): mov %rbx,%rsi
2493(3): mov %rax,%rdi
2496(5): call 0xfffff15a(%rip)
249b(7): mov 0x206c06(%rip),%rbx
24a2(7): lea 0x393f(%rip),%rsi
24a9(5): mov $0x5,%edx
24ae(2): xor %edi,%edi
24b0(5): call 0xfffff080(%rip)
24b5(3): mov %rbx,%rsi
24b8(3): mov %rax,%rdi
24bb(5): call 0xfffff135(%rip)
24c0(7): mov 0x206be1(%rip),%rbx
24c7(7): lea 0x3942(%rip),%rsi
24ce(5): mov $0x5,%edx
24d3(2): xor %edi,%edi
24d5(5): call 0xfffff05b(%rip)
24da(3): mov %rbx,%rsi
24dd(3): mov %rax,%rdi
24e0(5): call 0xfffff110(%rip)
24e5(7): mov 0x206bbc(%rip),%rbx
24ec(7): lea 0x395d(%rip),%rsi
24f3(5): mov $0x5,%edx
24f8(2): xor %edi,%edi
24fa(5): call 0xfffff036(%rip)
24ff(3): mov %rbx,%rsi
2502(3): mov %rax,%rdi
2505(5): call 0xfffff0eb(%rip)
250a(7): mov 0x206b97(%rip),%rbx
2511(7): lea 0x3968(%rip),%rsi
2518(5): mov $0x5,%edx
251d(2): xor %edi,%edi
251f(5): call 0xfffff011(%rip)
2524(3): mov %rbx,%rsi
2527(3): mov %rax,%rdi
252a(5): call 0xfffff0c6(%rip)
252f(7): mov 0x206b72(%rip),%rbx
2536(7): lea 0x397b(%rip),%rsi
253d(5): mov $0x5,%edx
2542(2): xor %edi,%edi
2544(5): call 0xffffefec(%rip)
2549(3): mov %rbx,%rsi
254c(3): mov %rax,%rdi
254f(5): call 0xfffff0a1(%rip)
2554(7): mov 0x206bbd(%rip),%rbx
255b(7): lea 0x3996(%rip),%rsi
2562(5): mov $0x5,%edx
2567(2): xor %edi,%edi
2569(5): call 0xffffefc7(%rip)
256e(3): mov %rbx,%rcx
2571(3): mov %rbx,%rdx
2574(3): mov %rax,%rsi
2577(5): mov $0x1,%edi
257c(2): xor %eax,%eax
257e(7): lea 0x3af7(%rip),%rbx
2585(5): call 0xfffff14b(%rip)
258a(7): lea 0x3af0(%rip),%rax
2591(7): lea 0x3b2a(%rip),%rcx
2598(9): mov $0x0,0x60(%rsp)
25a1(9): mov $0x0,0x68(%rsp)
25aa(3): mov %rsp,%rdx
25ad(4): mov %rax,(%rsp)
25b1(7): lea 0x3acb(%rip),%rax
25b8(5): mov %rcx,0x30(%rsp)
25bd(7): lea 0x3b08(%rip),%rcx
25c4(5): mov %rax,0x8(%rsp)
25c9(7): lea 0x3b2b(%rip),%rax
25d0(5): mov %rcx,0x40(%rsp)
25d5(7): lea 0x3afa(%rip),%rcx
25dc(5): mov %rax,0x10(%rsp)
25e1(7): lea 0x3aab(%rip),%rax
25e8(5): mov %rcx,0x50(%rsp)
25ed(5): mov %rax,0x18(%rsp)
25f2(7): lea 0x3ab0(%rip),%rax
25f9(5): mov %rax,0x20(%rsp)
25fe(7): lea 0x3aae(%rip),%rax
2605(5): mov %rax,0x28(%rsp)
260a(5): mov %rax,0x38(%rsp)
260f(5): mov %rax,0x48(%rsp)
2614(5): mov %rax,0x58(%rsp)
2619(7): nop 0x0(%rax)
2620(4): add $0x10,%rdx
2624(3): mov (%rdx),%rdi
2627(3): test %rdi,%rdi
262a(2): jz 0x15(%rip)
262c(5): mov $0x5,%ecx
2631(3): mov %rbx,%rsi
2634(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2636(3): setnbe %al
2639(2): sbb $0x0,%al
263b(2): test %al,%al
263d(2): jnz 0xffffffe3(%rip)
263f(4): mov 0x8(%rdx),%r12
2643(2): xor %edi,%edi
2645(5): mov $0x5,%edx
264a(7): lea 0x3a8f(%rip),%rsi
2651(3): test %r12,%r12
2654(6): jz 0xc7(%rip)
265a(5): call 0xffffeed6(%rip)
265f(7): lea 0x3932(%rip),%rcx
2666(7): lea 0x3a8a(%rip),%rdx
266d(3): mov %rax,%rsi
2670(5): mov $0x1,%edi
2675(2): xor %eax,%eax
2677(5): call 0xfffff059(%rip)
267c(2): xor %esi,%esi
267e(5): mov $0x5,%edi
2683(5): call 0xfffff03d(%rip)
2688(3): test %rax,%rax
268b(2): jz 0x1e(%rip)
268d(7): lea 0x3a71(%rip),%rsi
2694(5): mov $0x3,%edx
2699(3): mov %rax,%rdi
269c(5): call 0xffffee24(%rip)
26a1(2): test %eax,%eax
26a3(6): jnz 0x10d(%rip)
26a9(7): lea 0x3a59(%rip),%rsi
26b0(2): xor %edi,%edi
26b2(5): mov $0x5,%edx
26b7(5): call 0xffffee79(%rip)
26bc(7): lea 0x39b9(%rip),%rcx
26c3(7): lea 0x38ce(%rip),%rdx
26ca(3): mov %rax,%rsi
26cd(5): mov $0x1,%edi
26d2(2): xor %eax,%eax
26d4(5): call 0xffffeffc(%rip)
26d9(3): cmp %rbx,%r12
26dc(7): lea 0x39ba(%rip),%rcx
26e3(7): lea 0x3b0f(%rip),%rbx
26ea(4): cmove %rcx,%rbx
26ee(7): lea 0x3913(%rip),%rsi
26f5(2): xor %edi,%edi
26f7(5): mov $0x5,%edx
26fc(5): call 0xffffee34(%rip)
2701(3): mov %rbx,%rcx
2704(3): mov %rax,%rsi
2707(3): mov %r12,%rdx
270a(5): mov $0x1,%edi
270f(2): xor %eax,%eax
2711(5): call 0xffffefbf(%rip)
2716(5): jmp 0xfffffc80(%rip)
271b(5): call 0xffffee15(%rip)
2720(7): lea 0x3871(%rip),%rcx
2727(7): lea 0x39c9(%rip),%rdx
272e(3): mov %rax,%rsi
2731(5): mov $0x1,%edi
2736(2): xor %eax,%eax
2738(5): call 0xffffef98(%rip)
273d(2): xor %esi,%esi
273f(5): mov $0x5,%edi
2744(5): call 0xffffef7c(%rip)
2749(3): test %rax,%rax
274c(2): jz 0x1a(%rip)
274e(7): lea 0x39b0(%rip),%rsi
2755(5): mov $0x3,%edx
275a(3): mov %rax,%rdi
275d(5): call 0xffffed63(%rip)
2762(2): test %eax,%eax
2764(2): jnz 0x45(%rip)
2766(7): lea 0x399c(%rip),%rsi
276d(5): mov $0x5,%edx
2772(2): xor %edi,%edi
2774(7): lea 0x3901(%rip),%r12
277b(7): lea 0x391b(%rip),%rbx
2782(5): call 0xffffedae(%rip)
2787(7): lea 0x38ee(%rip),%rcx
278e(7): lea 0x3803(%rip),%rdx
2795(3): mov %rax,%rsi
2798(5): mov $0x1,%edi
279d(2): xor %eax,%eax
279f(5): call 0xffffef31(%rip)
27a4(5): jmp 0xffffff4a(%rip)
27a9(7): lea 0x38cc(%rip),%r12
27b0(7): mov 0x2068f1(%rip),%r13
27b7(7): lea 0x3802(%rip),%rsi
27be(2): xor %edi,%edi
27c0(5): mov $0x5,%edx
27c5(5): call 0xffffed6b(%rip)
27ca(3): mov %r13,%rsi
27cd(3): mov %rax,%rdi
27d0(5): call 0xffffee20(%rip)
27d5(5): jmp 0xfffffed4(%rip)

"usage" :
2340(2): push %r13
2342(2): push %r12
2344(5): mov $0x5,%edx
2349(1): push %rbp
234a(1): push %rbx
234b(2): mov %edi,%ebp
234d(7): sub $0x88,%rsp
2354(7): mov 0x206dbd(%rip),%rbx
235b(9): mov $0x28,%rax
2364(5): mov %rax,0x78(%rsp)
2369(2): xor %eax,%eax
236b(2): test %edi,%edi
236d(2): jz 0x30(%rip)
236f(7): lea 0x3732(%rip),%rsi
2376(2): xor %edi,%edi
2378(5): call 0xfffff1b8(%rip)
237d(7): mov 0x206d5c(%rip),%rdi
2384(3): mov %rax,%rdx
2387(3): mov %rbx,%rcx
238a(5): mov $0x1,%esi
238f(2): xor %eax,%eax
2391(5): call 0xfffff3af(%rip)
2396(2): mov %ebp,%edi
2398(5): call 0xfffff388(%rip)
239d(7): lea 0x372c(%rip),%rsi
23a4(2): xor %edi,%edi
23a6(5): call 0xfffff18a(%rip)
23ab(3): mov %rbx,%rdx
23ae(3): mov %rax,%rsi
23b1(5): mov $0x1,%edi
23b6(2): xor %eax,%eax
23b8(5): call 0xfffff318(%rip)
23bd(7): mov 0x206ce4(%rip),%rbx
23c4(7): lea 0x372d(%rip),%rsi
23cb(5): mov $0x5,%edx
23d0(2): xor %edi,%edi
23d2(5): call 0xfffff15e(%rip)
23d7(3): mov %rbx,%rsi
23da(3): mov %rax,%rdi
23dd(5): call 0xfffff213(%rip)
23e2(7): mov 0x206cbf(%rip),%rbx
23e9(7): lea 0x3740(%rip),%rsi
23f0(5): mov $0x5,%edx
23f5(2): xor %edi,%edi
23f7(5): call 0xfffff139(%rip)
23fc(3): mov %rbx,%rsi
23ff(3): mov %rax,%rdi
2402(5): call 0xfffff1ee(%rip)
2407(7): mov 0x206c9a(%rip),%rbx
240e(7): lea 0x375b(%rip),%rsi
2415(5): mov $0x5,%edx
241a(2): xor %edi,%edi
241c(5): call 0xfffff114(%rip)
2421(3): mov %rbx,%rsi
2424(3): mov %rax,%rdi
2427(5): call 0xfffff1c9(%rip)
242c(7): mov 0x206c75(%rip),%rbx
2433(7): lea 0x37f6(%rip),%rsi
243a(5): mov $0x5,%edx
243f(2): xor %edi,%edi
2441(5): call 0xfffff0ef(%rip)
2446(3): mov %rbx,%rsi
2449(3): mov %rax,%rdi
244c(5): call 0xfffff1a4(%rip)
2451(7): mov 0x206c50(%rip),%rbx
2458(7): lea 0x3891(%rip),%rsi
245f(5): mov $0x5,%edx
2464(2): xor %edi,%edi
2466(5): call 0xfffff0ca(%rip)
246b(3): mov %rbx,%rsi
246e(3): mov %rax,%rdi
2471(5): call 0xfffff17f(%rip)
2476(7): mov 0x206c2b(%rip),%rbx
247d(7): lea 0x392c(%rip),%rsi
2484(5): mov $0x5,%edx
2489(2): xor %edi,%edi
248b(5): call 0xfffff0a5(%rip)
2490(3): mov %rbx,%rsi
2493(3): mov %rax,%rdi
2496(5): call 0xfffff15a(%rip)
249b(7): mov 0x206c06(%rip),%rbx
24a2(7): lea 0x393f(%rip),%rsi
24a9(5): mov $0x5,%edx
24ae(2): xor %edi,%edi
24b0(5): call 0xfffff080(%rip)
24b5(3): mov %rbx,%rsi
24b8(3): mov %rax,%rdi
24bb(5): call 0xfffff135(%rip)
24c0(7): mov 0x206be1(%rip),%rbx
24c7(7): lea 0x3942(%rip),%rsi
24ce(5): mov $0x5,%edx
24d3(2): xor %edi,%edi
24d5(5): call 0xfffff05b(%rip)
24da(3): mov %rbx,%rsi
24dd(3): mov %rax,%rdi
24e0(5): call 0xfffff110(%rip)
24e5(7): mov 0x206bbc(%rip),%rbx
24ec(7): lea 0x395d(%rip),%rsi
24f3(5): mov $0x5,%edx
24f8(2): xor %edi,%edi
24fa(5): call 0xfffff036(%rip)
24ff(3): mov %rbx,%rsi
2502(3): mov %rax,%rdi
2505(5): call 0xfffff0eb(%rip)
250a(7): mov 0x206b97(%rip),%rbx
2511(7): lea 0x3968(%rip),%rsi
2518(5): mov $0x5,%edx
251d(2): xor %edi,%edi
251f(5): call 0xfffff011(%rip)
2524(3): mov %rbx,%rsi
2527(3): mov %rax,%rdi
252a(5): call 0xfffff0c6(%rip)
252f(7): mov 0x206b72(%rip),%rbx
2536(7): lea 0x397b(%rip),%rsi
253d(5): mov $0x5,%edx
2542(2): xor %edi,%edi
2544(5): call 0xffffefec(%rip)
2549(3): mov %rbx,%rsi
254c(3): mov %rax,%rdi
254f(5): call 0xfffff0a1(%rip)
2554(7): mov 0x206bbd(%rip),%rbx
255b(7): lea 0x3996(%rip),%rsi
2562(5): mov $0x5,%edx
2567(2): xor %edi,%edi
2569(5): call 0xffffefc7(%rip)
256e(3): mov %rbx,%rcx
2571(3): mov %rbx,%rdx
2574(3): mov %rax,%rsi
2577(5): mov $0x1,%edi
257c(2): xor %eax,%eax
257e(7): lea 0x3af7(%rip),%rbx
2585(5): call 0xfffff14b(%rip)
258a(7): lea 0x3af0(%rip),%rax
2591(7): lea 0x3b2a(%rip),%rcx
2598(9): mov $0x0,0x60(%rsp)
25a1(9): mov $0x0,0x68(%rsp)
25aa(3): mov %rsp,%rdx
25ad(4): mov %rax,(%rsp)
25b1(7): lea 0x3acb(%rip),%rax
25b8(5): mov %rcx,0x30(%rsp)
25bd(7): lea 0x3b08(%rip),%rcx
25c4(5): mov %rax,0x8(%rsp)
25c9(7): lea 0x3b2b(%rip),%rax
25d0(5): mov %rcx,0x40(%rsp)
25d5(7): lea 0x3afa(%rip),%rcx
25dc(5): mov %rax,0x10(%rsp)
25e1(7): lea 0x3aab(%rip),%rax
25e8(5): mov %rcx,0x50(%rsp)
25ed(5): mov %rax,0x18(%rsp)
25f2(7): lea 0x3ab0(%rip),%rax
25f9(5): mov %rax,0x20(%rsp)
25fe(7): lea 0x3aae(%rip),%rax
2605(5): mov %rax,0x28(%rsp)
260a(5): mov %rax,0x38(%rsp)
260f(5): mov %rax,0x48(%rsp)
2614(5): mov %rax,0x58(%rsp)
2619(7): nop 0x0(%rax)
2620(4): add $0x10,%rdx
2624(3): mov (%rdx),%rdi
2627(3): test %rdi,%rdi
262a(2): jz 0x15(%rip)
262c(5): mov $0x5,%ecx
2631(3): mov %rbx,%rsi
2634(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2636(3): setnbe %al
2639(2): sbb $0x0,%al
263b(2): test %al,%al
263d(2): jnz 0xffffffe3(%rip)
263f(4): mov 0x8(%rdx),%r12
2643(2): xor %edi,%edi
2645(5): mov $0x5,%edx
264a(7): lea 0x3a8f(%rip),%rsi
2651(3): test %r12,%r12
2654(6): jz 0xc7(%rip)
265a(5): call 0xffffeed6(%rip)
265f(7): lea 0x3932(%rip),%rcx
2666(7): lea 0x3a8a(%rip),%rdx
266d(3): mov %rax,%rsi
2670(5): mov $0x1,%edi
2675(2): xor %eax,%eax
2677(5): call 0xfffff059(%rip)
267c(2): xor %esi,%esi
267e(5): mov $0x5,%edi
2683(5): call 0xfffff03d(%rip)
2688(3): test %rax,%rax
268b(2): jz 0x1e(%rip)
268d(7): lea 0x3a71(%rip),%rsi
2694(5): mov $0x3,%edx
2699(3): mov %rax,%rdi
269c(5): call 0xffffee24(%rip)
26a1(2): test %eax,%eax
26a3(6): jnz 0x10d(%rip)
26a9(7): lea 0x3a59(%rip),%rsi
26b0(2): xor %edi,%edi
26b2(5): mov $0x5,%edx
26b7(5): call 0xffffee79(%rip)
26bc(7): lea 0x39b9(%rip),%rcx
26c3(7): lea 0x38ce(%rip),%rdx
26ca(3): mov %rax,%rsi
26cd(5): mov $0x1,%edi
26d2(2): xor %eax,%eax
26d4(5): call 0xffffeffc(%rip)
26d9(3): cmp %rbx,%r12
26dc(7): lea 0x39ba(%rip),%rcx
26e3(7): lea 0x3b0f(%rip),%rbx
26ea(4): cmove %rcx,%rbx
26ee(7): lea 0x3913(%rip),%rsi
26f5(2): xor %edi,%edi
26f7(5): mov $0x5,%edx
26fc(5): call 0xffffee34(%rip)
2701(3): mov %rbx,%rcx
2704(3): mov %rax,%rsi
2707(3): mov %r12,%rdx
270a(5): mov $0x1,%edi
270f(2): xor %eax,%eax
2711(5): call 0xffffefbf(%rip)
2716(5): jmp 0xfffffc80(%rip)
271b(5): call 0xffffee15(%rip)
2720(7): lea 0x3871(%rip),%rcx
2727(7): lea 0x39c9(%rip),%rdx
272e(3): mov %rax,%rsi
2731(5): mov $0x1,%edi
2736(2): xor %eax,%eax
2738(5): call 0xffffef98(%rip)
273d(2): xor %esi,%esi
273f(5): mov $0x5,%edi
2744(5): call 0xffffef7c(%rip)
2749(3): test %rax,%rax
274c(2): jz 0x1a(%rip)
274e(7): lea 0x39b0(%rip),%rsi
2755(5): mov $0x3,%edx
275a(3): mov %rax,%rdi
275d(5): call 0xffffed63(%rip)
2762(2): test %eax,%eax
2764(2): jnz 0x45(%rip)
2766(7): lea 0x399c(%rip),%rsi
276d(5): mov $0x5,%edx
2772(2): xor %edi,%edi
2774(7): lea 0x3901(%rip),%r12
277b(7): lea 0x391b(%rip),%rbx
2782(5): call 0xffffedae(%rip)
2787(7): lea 0x38ee(%rip),%rcx
278e(7): lea 0x3803(%rip),%rdx
2795(3): mov %rax,%rsi
2798(5): mov $0x1,%edi
279d(2): xor %eax,%eax
279f(5): call 0xffffef31(%rip)
27a4(5): jmp 0xffffff4a(%rip)
27a9(7): lea 0x38cc(%rip),%r12
27b0(7): mov 0x2068f1(%rip),%r13
27b7(7): lea 0x3802(%rip),%rsi
27be(2): xor %edi,%edi
27c0(5): mov $0x5,%edx
27c5(5): call 0xffffed6b(%rip)
27ca(3): mov %r13,%rsi
27cd(3): mov %rax,%rdi
27d0(5): call 0xffffee20(%rip)
27d5(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
27e0(7): mov %rdi,0x206929(%rip)
27e7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
27f0(7): mov %dil,0x206911(%rip)
27f7(1): ret near (%rsp)

"close_stdout" :
2800(1): push %rbp
2801(1): push %rbx
2802(4): sub $0x8,%rsp
2806(7): mov 0x20689b(%rip),%rdi
280d(5): call 0x2f33(%rip)
2812(2): test %eax,%eax
2814(2): jz 0x18(%rip)
2816(5): call 0xffffec9a(%rip)
281b(7): cmp $0x0,0x2068e6(%rip)
2822(3): mov %rax,%rbx
2825(2): jz 0x1e(%rip)
2827(3): cmp $0x20,(%rax)
282a(2): jnz 0x19(%rip)
282c(7): mov 0x2068ad(%rip),%rdi
2833(5): call 0x2f0d(%rip)
2838(2): test %eax,%eax
283a(2): jnz 0x48(%rip)
283c(4): add $0x8,%rsp
2840(1): pop %rbx
2841(1): pop %rbp
2842(1): ret near (%rsp)
2843(7): lea 0x39b5(%rip),%rsi
284a(2): xor %edi,%edi
284c(5): mov $0x5,%edx
2851(5): call 0xffffecdf(%rip)
2856(7): mov 0x2068b3(%rip),%rdi
285d(3): mov %rax,%rbp
2860(3): test %rdi,%rdi
2863(2): jz 0x2a(%rip)
2865(5): call 0x1e6b(%rip)
286a(2): mov (%rbx),%esi
286c(7): lea 0x3998(%rip),%rdx
2873(3): mov %rax,%rcx
2876(3): mov %rbp,%r8
2879(2): xor %edi,%edi
287b(2): xor %eax,%eax
287d(5): call 0xffffee63(%rip)
2882(6): mov 0x2067a0(%rip),%edi
2888(5): call 0xffffec48(%rip)
288d(2): mov (%rbx),%esi
288f(7): lea 0x3979(%rip),%rdx
2896(3): mov %rax,%rcx
2899(2): xor %edi,%edi
289b(2): xor %eax,%eax
289d(5): call 0xffffee43(%rip)
28a2(2): jmp 0xffffffe0(%rip)

"fadvise" :
28c0(3): test %rdi,%rdi
28c3(2): jz 0x1d(%rip)
28c5(1): push %rbx
28c6(2): mov %esi,%ebx
28c8(5): call 0xffffed68(%rip)
28cd(2): mov %ebx,%ecx
28cf(2): xor %edx,%edx
28d1(2): xor %esi,%esi
28d3(1): pop %rbx
28d4(2): mov %eax,%edi
28d6(5): jmp 0xffffecfa(%rip)
28db(5): nop 0x0(%rax,%rax,1)
28e0(2): REP ret near (%rsp)

"fopen_safer" :
28f0(2): push %r12
28f2(1): push %rbp
28f3(3): mov %rsi,%rbp
28f6(1): push %rbx
28f7(5): call 0xffffee09(%rip)
28fc(3): test %rax,%rax
28ff(3): mov %rax,%rbx
2902(2): jz 0xf(%rip)
2904(3): mov %rax,%rdi
2907(5): call 0xffffed29(%rip)
290c(3): cmp $0x2,%eax
290f(2): jbe 0x11(%rip)
2911(3): mov %rbx,%rax
2914(1): pop %rbx
2915(1): pop %rbp
2916(2): pop %r12
2918(1): ret near (%rsp)
2919(7): nop 0x0(%rax)
2920(2): mov %eax,%edi
2922(5): call 0x1fce(%rip)
2927(2): test %eax,%eax
2929(3): mov %eax,%r12d
292c(2): js 0x3c(%rip)
292e(3): mov %rbx,%rdi
2931(5): call 0x29df(%rip)
2936(2): test %eax,%eax
2938(2): jnz 0x15(%rip)
293a(3): mov %rbp,%rsi
293d(3): mov %r12d,%edi
2940(5): call 0xffffed70(%rip)
2945(3): test %rax,%rax
2948(3): mov %rax,%rbx
294b(2): jnz 0xffffffc6(%rip)
294d(5): call 0xffffeb63(%rip)
2952(2): mov (%rax),%ebp
2954(3): mov %rax,%rbx
2957(3): mov %r12d,%edi
295a(5): call 0xffffec66(%rip)
295f(2): mov %ebp,(%rbx)
2961(2): xor %ebx,%ebx
2963(2): jmp 0xffffffae(%rip)
2965(3): nop (%rax)
2968(5): call 0xffffeb48(%rip)
296d(3): mov (%rax),%r12d
2970(3): mov %rax,%rbp
2973(3): mov %rbx,%rdi
2976(5): call 0x299a(%rip)
297b(2): xor %ebx,%ebx
297d(4): mov %r12d,0x0(%rbp)
2981(2): jmp 0xffffff90(%rip)

"hard_locale" :
2990(4): sub $0x8,%rsp
2994(2): xor %esi,%esi
2996(5): call 0xffffed2a(%rip)
299b(3): mov %rax,%rdx
299e(5): mov $0x1,%eax
29a3(3): test %rdx,%rdx
29a6(2): jz 0x1f(%rip)
29a8(7): lea 0x3863(%rip),%rdi
29af(5): mov $0x2,%ecx
29b4(3): mov %rdx,%rsi
29b7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
29b9(3): setnbe %cl
29bc(3): sbb $0x0,%cl
29bf(2): xor %eax,%eax
29c1(2): test %cl,%cl
29c3(2): jnz 0xd(%rip)
29c5(4): add $0x8,%rsp
29c9(1): ret near (%rsp)
29ca(6): nop 0x0(%rax,%rax,1)
29d0(7): lea 0x383d(%rip),%rdi
29d7(5): mov $0x6,%ecx
29dc(3): mov %rdx,%rsi
29df(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
29e1(3): setnbe %al
29e4(2): sbb $0x0,%al
29e6(2): test %al,%al
29e8(3): setnz %al
29eb(4): add $0x8,%rsp
29ef(1): ret near (%rsp)

"umaxtostr" :
29f0(4): lea 0x14(%rsi),%rcx
29f4(4): mov $0x0,0x14(%rsi)
29f8(a): mov $0x-3689348814741910323,%rsi
2a02(6): nop 0x0(%rax,%rax,1)
2a08(3): mov %rdi,%rax
2a0b(4): sub $0x1,%rcx
2a0f(3): mul %rax,%rsi,%rdx
2a12(4): shr $0x3,%rdx
2a16(4): lea 0x0(%rdx,%rdx,4),%rax
2a1a(3): add %rax,%rax
2a1d(3): sub %rax,%rdi
2a20(3): add $0x30,%edi
2a23(3): test %rdx,%rdx
2a26(3): mov %dil,(%rcx)
2a29(3): mov %rdx,%rdi
2a2c(2): jnz 0xffffffdc(%rip)
2a2e(3): mov %rcx,%rax
2a31(1): ret near (%rsp)

"initbuffer" :
2a40(4): pxor %xmm0,%xmm0
2a44(8): mov $0x0,0x10(%rdi)
2a4c(3): movups %xmm0,(%rdi)
2a4f(1): ret near (%rsp)

"readlinebuffer_delim" :
2a50(2): push %r15
2a52(2): push %r14
2a54(2): push %r13
2a56(2): push %r12
2a58(1): push %rbp
2a59(1): push %rbx
2a5a(4): sub $0x18,%rsp
2a5e(4): mov 0x10(%rdi),%r13
2a62(3): mov (%rdi),%r8
2a65(3): add %r13,%r8
2a68(3): test $0x10,(%rsi)
2a6b(6): jnz 0xd5(%rip)
2a71(3): mov %rdi,%r14
2a74(3): mov %rsi,%rbp
2a77(3): mov %r13,%rbx
2a7a(4): movsx %dl,%r15d
2a7e(2): jmp 0xd(%rip)
2a80(3): cmp %r15d,%r12d
2a83(4): lea 0x1(%rsi),%rbx
2a87(2): mov %cl,(%rsi)
2a89(2): jz 0x5d(%rip)
2a8b(4): mov 0x8(%rbp),%rcx
2a8f(4): cmp 0x10(%rbp),%rcx
2a93(2): jnb 0x6d(%rip)
2a95(4): lea 0x1(%rcx),%rax
2a99(4): mov %rax,0x8(%rbp)
2a9d(4): movzx (%rcx),%r12d
2aa1(3): mov %r12d,%ecx
2aa4(3): cmp %r8,%rbx
2aa7(3): mov %rbx,%rsi
2aaa(2): jnz 0xffffffd6(%rip)
2aac(3): mov (%r14),%rbx
2aaf(3): mov %r14,%rsi
2ab2(3): mov %r13,%rdi
2ab5(4): mov %dl,0xf(%rsp)
2ab9(3): mov %cl,(%rsp)
2abc(5): call 0x25c4(%rip)
2ac1(3): mov (%r14),%r8
2ac4(4): movzx (%rsp),%ecx
2ac8(4): lea 0x0(%rax,%rbx,1),%rsi
2acc(4): mov %rax,0x10(%r14)
2ad0(3): mov %rax,%r13
2ad3(5): movzx 0xf(%rsp),%edx
2ad8(4): lea 0x1(%rsi),%rbx
2adc(3): add %rax,%r8
2adf(3): cmp %r15d,%r12d
2ae2(2): mov %cl,(%rsi)
2ae4(2): jnz 0xffffffa7(%rip)
2ae6(3): sub %r13,%rbx
2ae9(3): mov %r14,%rax
2aec(4): mov %rbx,0x8(%r14)
2af0(4): add $0x18,%rsp
2af4(1): pop %rbx
2af5(1): pop %rbp
2af6(2): pop %r12
2af8(2): pop %r13
2afa(2): pop %r14
2afc(2): pop %r15
2afe(1): ret near (%rsp)
2aff(1): nop 
2b00(3): mov %rbp,%rdi
2b03(4): mov %dl,0xf(%rsp)
2b07(4): mov %r8,(%rsp)
2b0b(5): call 0xffffe975(%rip)
2b10(3): cmp $0xff,%eax
2b13(3): mov %eax,%r12d
2b16(4): mov (%rsp),%r8
2b1a(5): movzx 0xf(%rsp),%edx
2b1f(2): jnz 0x32(%rip)
2b21(3): cmp %rbx,%r13
2b24(2): jz 0x1c(%rip)
2b26(4): test $0x20,0x0(%rbp)
2b2a(2): jnz 0x16(%rip)
2b2c(3): cmp %dl,0xffffffff(%rbx)
2b2f(2): jz 0xffffffb7(%rip)
2b31(3): mov %r15d,%r12d
2b34(2): mov %edx,%ecx
2b36(5): jmp 0xffffff6e(%rip)
2b3b(5): nop 0x0(%rax,%rax,1)
2b40(4): add $0x18,%rsp
2b44(2): xor %eax,%eax
2b46(1): pop %rbx
2b47(1): pop %rbp
2b48(2): pop %r12
2b4a(2): pop %r13
2b4c(2): pop %r14
2b4e(2): pop %r15
2b50(1): ret near (%rsp)
2b51(2): mov %eax,%ecx
2b53(5): jmp 0xffffff51(%rip)

"readlinebuffer" :
2b60(5): mov $0xa,%edx
2b65(5): jmp 0xfffffeeb(%rip)

"freebuffer" :
2b70(4): mov 0x10(%rdi),%rdi
2b74(5): jmp 0xffffe91c(%rip)

"memcmp2" :
2b80(1): push %rbp
2b81(1): push %rbx
2b82(3): mov %rsi,%rbp
2b85(3): mov %rdx,%rsi
2b88(3): mov %rcx,%rdx
2b8b(3): mov %rcx,%rbx
2b8e(4): sub $0x8,%rsp
2b92(3): cmp %rcx,%rbp
2b95(4): cmovbe %rbp,%rdx
2b99(5): call 0xffffea47(%rip)
2b9e(2): test %eax,%eax
2ba0(2): jnz 0xd(%rip)
2ba2(3): cmp %rbx,%rbp
2ba5(2): jb 0x13(%rip)
2ba7(3): setnbe %al
2baa(3): movzx %al,%eax
2bad(4): add $0x8,%rsp
2bb1(1): pop %rbx
2bb2(1): pop %rbp
2bb3(1): ret near (%rsp)
2bb4(4): nop 0x0(%rax)
2bb8(5): mov $0xffffffff,%eax
2bbd(2): jmp 0xfffffff0(%rip)

"set_program_name" :
2bc0(3): test %rdi,%rdi
2bc3(1): push %rbx
2bc4(2): jz 0x79(%rip)
2bc6(5): mov $0x2f,%esi
2bcb(3): mov %rdi,%rbx
2bce(5): call 0xffffe9c2(%rip)
2bd3(3): test %rax,%rax
2bd6(2): jz 0x57(%rip)
2bd8(4): lea 0x1(%rax),%r8
2bdc(3): mov %r8,%rdx
2bdf(3): sub %rbx,%rdx
2be2(4): cmp $0x6,%rdx
2be6(2): jle 0x47(%rip)
2be8(4): lea 0xfffffffa(%rax),%rsi
2bec(7): lea 0x3665(%rip),%rdi
2bf3(5): mov $0x7,%ecx
2bf8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2bfa(3): setnbe %dl
2bfd(3): sbb $0x0,%dl
2c00(2): test %dl,%dl
2c02(2): jnz 0x2b(%rip)
2c04(7): lea 0x3655(%rip),%rdi
2c0b(5): mov $0x3,%ecx
2c10(3): mov %r8,%rsi
2c13(3): mov %r8,%rbx
2c16(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2c18(3): setnbe %dl
2c1b(3): sbb $0x0,%dl
2c1e(2): test %dl,%dl
2c20(2): jnz 0xd(%rip)
2c22(4): lea 0x4(%rax),%rbx
2c26(7): mov %rbx,0x206473(%rip)
2c2d(7): mov %rbx,0x2064e4(%rip)
2c34(7): mov %rbx,0x20648d(%rip)
2c3b(1): pop %rbx
2c3c(1): ret near (%rsp)
2c3d(7): mov 0x20649c(%rip),%rcx
2c44(7): lea 0x35d5(%rip),%rdi
2c4b(5): mov $0x37,%edx
2c50(5): mov $0x1,%esi
2c55(5): call 0xffffeadb(%rip)
2c5a(5): call 0xffffe846(%rip)

"gettext_quote.part.1" :
2c60(1): push %rbp
2c61(1): push %rbx
2c62(3): mov %rdi,%rbp
2c65(2): mov %esi,%ebx
2c67(4): sub $0x8,%rsp
2c6b(5): call 0x2b55(%rip)
2c70(3): movzx (%rax),%edx
2c73(3): and $0xdf,%edx
2c76(3): cmp $0x55,%dl
2c79(2): jz 0x77(%rip)
2c7b(3): cmp $0x47,%dl
2c7e(2): jz 0x22(%rip)
2c80(7): lea 0x35ec(%rip),%rax
2c87(7): lea 0x35e7(%rip),%rdx
2c8e(3): cmp $0x9,%ebx
2c91(4): cmovne %rdx,%rax
2c95(4): add $0x8,%rsp
2c99(1): pop %rbx
2c9a(1): pop %rbp
2c9b(1): ret near (%rsp)
2c9c(4): nop 0x0(%rax)
2ca0(4): movzx 0x1(%rax),%edx
2ca4(3): and $0xdf,%edx
2ca7(3): cmp $0x42,%dl
2caa(2): jnz 0xffffffd6(%rip)
2cac(4): cmp $0x31,0x2(%rax)
2cb0(2): jnz 0xffffffd0(%rip)
2cb2(4): cmp $0x38,0x3(%rax)
2cb6(2): jnz 0xffffffca(%rip)
2cb8(4): cmp $0x30,0x4(%rax)
2cbc(2): jnz 0xffffffc4(%rip)
2cbe(4): cmp $0x33,0x5(%rax)
2cc2(2): jnz 0xffffffbe(%rip)
2cc4(4): cmp $0x30,0x6(%rax)
2cc8(2): jnz 0xffffffb8(%rip)
2cca(4): cmp $0x0,0x7(%rax)
2cce(2): jnz 0xffffffb2(%rip)
2cd0(4): cmp $0x60,0x0(%rbp)
2cd4(7): lea 0x3591(%rip),%rax
2cdb(7): lea 0x358e(%rip),%rdx
2ce2(4): cmovne %rdx,%rax
2ce6(4): add $0x8,%rsp
2cea(1): pop %rbx
2ceb(1): pop %rbp
2cec(1): ret near (%rsp)
2ced(3): nop (%rax)
2cf0(4): movzx 0x1(%rax),%edx
2cf4(3): and $0xdf,%edx
2cf7(3): cmp $0x54,%dl
2cfa(2): jnz 0xffffff86(%rip)
2cfc(4): movzx 0x2(%rax),%edx
2d00(3): and $0xdf,%edx
2d03(3): cmp $0x46,%dl
2d06(6): jnz 0xffffff7a(%rip)
2d0c(4): cmp $0x2d,0x3(%rax)
2d10(6): jnz 0xffffff70(%rip)
2d16(4): cmp $0x38,0x4(%rax)
2d1a(6): jnz 0xffffff66(%rip)
2d20(4): cmp $0x0,0x5(%rax)
2d24(6): jnz 0xffffff5c(%rip)
2d2a(4): cmp $0x60,0x0(%rbp)
2d2e(7): lea 0x352f(%rip),%rax
2d35(7): lea 0x352c(%rip),%rdx
2d3c(4): cmovne %rdx,%rax
2d40(4): add $0x8,%rsp
2d44(1): pop %rbx
2d45(1): pop %rbp
2d46(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2d50(2): push %r15
2d52(2): push %r14
2d54(3): mov %r8d,%r15d
2d57(2): push %r13
2d59(2): push %r12
2d5b(3): mov %rdi,%r14
2d5e(1): push %rbp
2d5f(1): push %rbx
2d60(3): mov %r9d,%ebx
2d63(3): mov %rsi,%r13
2d66(3): mov %rcx,%rbp
2d69(3): and $0x2,%ebx
2d6c(7): sub $0xb8,%rsp
2d73(8): mov 0xf0(%rsp),%rax
2d7b(5): mov %rdx,0x10(%rsp)
2d80(5): mov %r8d,0x8(%rsp)
2d85(5): mov %r9d,0x78(%rsp)
2d8a(5): mov %rax,0x20(%rsp)
2d8f(8): mov 0xf8(%rsp),%rax
2d97(5): mov %rax,0x68(%rsp)
2d9c(8): mov 0x100(%rsp),%rax
2da4(5): mov %rax,0x60(%rsp)
2da9(9): mov $0x28,%rax
2db2(8): mov %rax,0xa8(%rsp)
2dba(2): xor %eax,%eax
2dbc(5): call 0xffffe784(%rip)
2dc1(4): cmp $0xa,%r15d
2dc5(5): mov %rax,0x58(%rsp)
2dca(6): jnbe 0x11b5(%rip)
2dd0(7): lea 0x3509(%rip),%rcx
2dd7(3): mov %r15d,%edx
2dda(4): movsxd 0x0(%rcx,%rdx,4),%rax
2dde(3): add %rcx,%rax
2de1(2): jmp %rax
2de3(5): mov $0x1,0xe(%rsp)
2de8(5): mov $0x0,0x7c(%rsp)
2ded(3): xor %r12d,%r12d
2df0(9): mov $0x0,0x50(%rsp)
2df9(5): mov $0x1,0xf(%rsp)
2dfe(5): mov $0x0,0xd(%rsp)
2e03(7): lea 0x346b(%rip),%rax
2e0a(9): mov $0x1,0x18(%rsp)
2e13(3): xor %r15d,%r15d
2e16(8): mov $0x2,0x8(%rsp)
2e1e(5): mov %rax,0x48(%rsp)
2e23(3): xor %r11d,%r11d
2e26(3): mov %rbp,%rax
2e29(3): mov %r12d,%r8d
2e2c(3): mov %r11,%rbp
2e2f(3): mov %rax,%r11
2e32(6): nop 0x0(%rax,%rax,1)
2e38(3): cmp %rbp,%r11
2e3b(4): setnz %r12b
2e3f(4): cmp $0xffffffff,%r11
2e43(2): jnz 0xf(%rip)
2e45(5): mov 0x10(%rsp),%rax
2e4a(4): cmp $0x0,0x0(%rax,%rbp,1)
2e4e(4): setnz %r12b
2e52(3): test %r12b,%r12b
2e55(6): jz 0x65b(%rip)
2e5b(5): cmp $0x2,0x8(%rsp)
2e60(5): mov 0x10(%rsp),%rdi
2e65(4): lea 0x0(%rdi,%rbp,1),%r9
2e69(3): setnz %al
2e6c(4): and 0xd(%rsp),%al
2e70(3): mov %eax,%r10d
2e73(6): jz 0xad(%rip)
2e79(5): mov 0x18(%rsp),%rax
2e7e(3): test %rax,%rax
2e81(6): jz 0x42f(%rip)
2e87(4): cmp $0xffffffff,%r11
2e8b(5): lea 0x0(%rbp,%rax,1),%rbx
2e90(2): jnz 0x30(%rip)
2e92(4): cmp $0x1,%rax
2e96(2): jbe 0x2a(%rip)
2e98(5): mov %r8b,0x38(%rsp)
2e9d(5): mov %r10b,0x30(%rsp)
2ea2(5): mov %r9,0x28(%rsp)
2ea7(5): call 0xffffe6a9(%rip)
2eac(6): movzx 0x38(%rsp),%r8d
2eb2(6): movzx 0x30(%rsp),%r10d
2eb8(3): mov %rax,%r11
2ebb(5): mov 0x28(%rsp),%r9
2ec0(3): cmp %r11,%rbx
2ec3(5): mov %r10b,0x28(%rsp)
2ec8(6): jnbe 0x5b8(%rip)
2ece(5): mov 0x18(%rsp),%rdx
2ed3(5): mov 0x48(%rsp),%rsi
2ed8(3): mov %r9,%rdi
2edb(5): mov %r11,0x40(%rsp)
2ee0(5): mov %r8b,0x38(%rsp)
2ee5(5): mov %r9,0x30(%rsp)
2eea(5): call 0xffffe6f6(%rip)
2eef(2): test %eax,%eax
2ef1(5): mov 0x30(%rsp),%r9
2ef6(6): movzx 0x38(%rsp),%r8d
2efc(5): mov 0x40(%rsp),%r11
2f01(6): jnz 0x57f(%rip)
2f07(5): cmp $0x0,0xf(%rsp)
2f0c(6): movzx 0x28(%rsp),%r10d
2f12(6): jnz 0xf83(%rip)
2f18(8): nop 0x0(%rax,%rax,1)
2f20(4): movzx (%r9),%ebx
2f24(3): cmp $0x7e,%bl
2f27(6): jnbe 0x321(%rip)
2f2d(7): lea 0x33d8(%rip),%rcx
2f34(3): movzx %bl,%edx
2f37(4): movsxd 0x0(%rcx,%rdx,4),%rax
2f3b(3): add %rcx,%rax
2f3e(2): jmp %rax
2f40(3): xor %r10d,%r10d
2f43(4): cmp $0x1,%r11
2f47(3): setnz %al
2f4a(4): cmp $0xffffffff,%r11
2f4e(2): jnz 0xe(%rip)
2f50(5): mov 0x10(%rsp),%rax
2f55(4): cmp $0x0,0x1(%rax)
2f59(3): setnz %al
2f5c(5): cmp $0x2,0x8(%rsp)
2f61(3): setz %dl
2f64(2): test %al,%al
2f66(6): jz 0x252(%rip)
2f6c(3): xor %r12d,%r12d
2f6f(2): xor %eax,%eax
2f71(7): nop 0x0(%rax)
2f78(5): cmp $0x1,0xd(%rsp)
2f7d(6): jnz 0x115(%rip)
2f83(2): test %dl,%dl
2f85(6): jnz 0x10d(%rip)
2f8b(5): mov 0x20(%rsp),%rsi
2f90(3): test %rsi,%rsi
2f93(2): jz 0x16(%rip)
2f95(2): mov %ebx,%edx
2f97(3): shr $0x5,%dl
2f9a(3): movzx %dl,%edx
2f9d(3): mov 0x0(%rsi,%rdx,4),%edx
2fa0(3): bt %ebx,%edx
2fa3(6): jb 0x150(%rip)
2fa9(3): test %r10b,%r10b
2fac(6): jnz 0x147(%rip)
2fb2(3): xor $0x1,%eax
2fb5(4): add $0x1,%rbp
2fb9(3): and %r8d,%eax
2fbc(2): test %al,%al
2fbe(2): jz 0x22(%rip)
2fc0(3): cmp %r15,%r13
2fc3(2): jbe 0x7(%rip)
2fc5(5): mov $0x27,0x0(%r14,%r15,1)
2fca(4): lea 0x1(%r15),%rax
2fce(3): cmp %rax,%r13
2fd1(2): jbe 0x8(%rip)
2fd3(6): mov $0x27,0x1(%r14,%r15,1)
2fd9(4): add $0x2,%r15
2fdd(3): xor %r8d,%r8d
2fe0(3): cmp %r13,%r15
2fe3(2): jnb 0x6(%rip)
2fe5(4): mov %bl,0x0(%r14,%r15,1)
2fe9(5): movzx 0xe(%rsp),%edi
2fee(4): add $0x1,%r15
2ff2(5): mov $0x0,%eax
2ff7(3): test %r12b,%r12b
2ffa(3): cmove %eax,%edi
2ffd(5): mov %dil,0xe(%rsp)
3002(5): jmp 0xfffffe36(%rip)
3007(9): nop 0x0(%rax,%rax,1)
3010(3): xor %r10d,%r10d
3013(4): mov 0x8(%rsp),%eax
3017(3): cmp $0x2,%eax
301a(6): jz 0x5be(%rip)
3020(3): cmp $0x5,%eax
3023(6): jz 0x575(%rip)
3029(3): cmp $0x2,%eax
302c(5): mov $0x3f,%ebx
3031(3): setz %dl
3034(3): xor %r12d,%r12d
3037(2): xor %eax,%eax
3039(5): jmp 0xffffff3f(%rip)
303e(2): nop 
3040(3): xor %r10d,%r10d
3043(5): cmp $0x2,0x8(%rsp)
3048(6): jz 0x508(%rip)
304e(5): mov %r12b,0x7c(%rsp)
3053(2): xor %edx,%edx
3055(2): xor %eax,%eax
3057(5): mov $0x27,%ebx
305c(5): jmp 0xffffff1c(%rip)
3061(7): nop 0x0(%rax)
3068(5): mov $0x9,%edx
306d(5): mov $0x74,%ebx
3072(5): cmp $0x2,0x8(%rsp)
3077(3): setz %al
307a(4): and 0xf(%rsp),%al
307e(6): jnz 0x150(%rip)
3084(5): cmp $0x0,0xd(%rsp)
3089(2): jnz 0x67(%rip)
308b(2): mov %edx,%ebx
308d(3): xor %r12d,%r12d
3090(2): xor %eax,%eax
3092(5): cmp $0x0,0xf(%rsp)
3097(6): jnz 0xfffffef4(%rip)
309d(5): jmp 0xffffff0c(%rip)
30a2(6): nop 0x0(%rax,%rax,1)
30a8(5): mov $0x8,%edx
30ad(5): mov $0x62,%ebx
30b2(2): jmp 0xffffffd2(%rip)
30b4(4): nop 0x0(%rax)
30b8(5): cmp $0x2,0x8(%rsp)
30bd(6): jz 0x3d3(%rip)
30c3(5): cmp $0x0,0xd(%rsp)
30c8(6): jz 0x218(%rip)
30ce(5): cmp $0x0,0xf(%rsp)
30d3(6): jz 0x20d(%rip)
30d9(6): cmp $0x0,0x18(%rsp)
30df(6): jnz 0x3bc(%rip)
30e5(5): mov $0x5c,%ebx
30ea(6): nop 0x0(%rax,%rax,1)
30f0(3): xor %r12d,%r12d
30f3(5): cmp $0x2,0x8(%rsp)
30f8(3): setz %dl
30fb(5): cmp $0x0,0xf(%rsp)
3100(2): mov %edx,%eax
3102(6): jnz 0x856(%rip)
3108(3): mov %r8d,%eax
310b(3): xor $0x1,%eax
310e(2): and %dl,%al
3110(2): jz 0x31(%rip)
3112(3): cmp %r15,%r13
3115(2): jbe 0x7(%rip)
3117(5): mov $0x27,0x0(%r14,%r15,1)
311c(4): lea 0x1(%r15),%rdx
3120(3): cmp %rdx,%r13
3123(2): jbe 0x8(%rip)
3125(6): mov $0x24,0x1(%r14,%r15,1)
312b(4): lea 0x2(%r15),%rdx
312f(3): cmp %rdx,%r13
3132(2): jbe 0x8(%rip)
3134(6): mov $0x27,0x2(%r14,%r15,1)
313a(4): add $0x3,%r15
313e(3): mov %eax,%r8d
3141(3): cmp %r15,%r13
3144(2): jbe 0x7(%rip)
3146(5): mov $0x5c,0x0(%r14,%r15,1)
314b(4): add $0x1,%r15
314f(4): add $0x1,%rbp
3153(5): jmp 0xfffffe8d(%rip)
3158(8): nop 0x0(%rax,%rax,1)
3160(5): cmp $0x0,0xd(%rsp)
3165(6): jnz 0x1ce(%rip)
316b(2): xor %edx,%edx
316d(5): test $0x1,0x78(%rsp)
3172(6): jz 0xffffff19(%rip)
3178(4): add $0x1,%rbp
317c(5): jmp 0xfffffcbc(%rip)
3181(7): nop 0x0(%rax)
3188(5): cmp $0x2,0x8(%rsp)
318d(3): setz %dl
3190(2): xor %eax,%eax
3192(5): jmp 0xfffffde6(%rip)
3197(9): nop 0x0(%rax,%rax,1)
31a0(5): mov $0x7,%edx
31a5(5): mov $0x61,%ebx
31aa(5): jmp 0xfffffeda(%rip)
31af(1): nop 
31b0(5): cmp $0x2,0x8(%rsp)
31b5(3): setz %dl
31b8(3): test %rbp,%rbp
31bb(6): jnz 0xfffffdb1(%rip)
31c1(5): movzx 0xf(%rsp),%eax
31c6(2): and %dl,%al
31c8(6): jz 0xfffffdb0(%rip)
31ce(3): mov %r11,%rbp
31d1(8): mov $0x2,0x8(%rsp)
31d9(5): jmp 0x700(%rip)
31de(2): nop 
31e0(5): cmp $0x2,0x8(%rsp)
31e5(3): setz %dl
31e8(3): xor %r12d,%r12d
31eb(2): jmp 0xffffffd6(%rip)
31ed(3): nop (%rax)
31f0(5): cmp $0x2,0x8(%rsp)
31f5(5): mov $0x20,%ebx
31fa(3): setz %dl
31fd(2): jmp 0xffffffc4(%rip)
31ff(1): nop 
3200(5): mov $0xd,%edx
3205(5): mov $0x72,%ebx
320a(5): jmp 0xfffffe68(%rip)
320f(1): nop 
3210(5): mov $0xc,%edx
3215(5): mov $0x66,%ebx
321a(5): jmp 0xfffffe6a(%rip)
321f(1): nop 
3220(5): mov $0xb,%edx
3225(5): mov $0x76,%ebx
322a(5): jmp 0xfffffe5a(%rip)
322f(1): nop 
3230(5): mov $0xa,%edx
3235(5): mov $0x6e,%ebx
323a(5): jmp 0xfffffe38(%rip)
323f(1): nop 
3240(3): xor %r10d,%r10d
3243(5): nop 0x0(%rax,%rax,1)
3248(6): cmp $0x1,0x58(%rsp)
324e(6): jnz 0x3aa(%rip)
3254(5): mov %r11,0x38(%rsp)
3259(5): mov %r8b,0x30(%rsp)
325e(5): mov %r10b,0x28(%rsp)
3263(5): call 0xffffe50d(%rip)
3268(3): mov (%rax),%rcx
326b(3): movzx %bl,%edx
326e(6): movzx 0x28(%rsp),%r10d
3274(6): movzx 0x30(%rsp),%r8d
327a(5): mov 0x38(%rsp),%r11
327f(5): mov $0x1,%edi
3284(4): movzx 0x0(%rcx,%rdx,2),%eax
3288(4): and $0x4000,%ax
328c(4): setnz %r12b
3290(3): setz %al
3293(4): and 0xd(%rsp),%al
3297(2): test %al,%al
3299(6): jnz 0x998(%rip)
329f(5): cmp $0x2,0x8(%rsp)
32a4(3): setz %dl
32a7(5): jmp 0xfffffcd1(%rip)
32ac(4): nop 0x0(%rax)
32b0(4): movzx (%r9),%ebx
32b4(3): cmp $0x7e,%bl
32b7(2): jnbe 0xffffff89(%rip)
32b9(7): lea 0x3248(%rip),%rcx
32c0(3): movzx %bl,%edx
32c3(4): movsxd 0x0(%rcx,%rdx,4),%rax
32c7(3): add %rcx,%rax
32ca(2): jmp %rax
32cc(4): nop 0x0(%rax)
32d0(3): xor %r10d,%r10d
32d3(5): cmp $0x0,0xd(%rsp)
32d8(6): jnz 0xfffffdf6(%rip)
32de(2): nop 
32e0(5): mov $0x5c,%edx
32e5(5): mov $0x5c,%ebx
32ea(5): jmp 0xfffffd9a(%rip)
32ef(1): nop 
32f0(5): mov $0xc,%edx
32f5(3): xor %r10d,%r10d
32f8(5): mov $0x66,%ebx
32fd(5): jmp 0xfffffd87(%rip)
3302(6): nop 0x0(%rax,%rax,1)
3308(5): mov $0xa,%edx
330d(3): xor %r10d,%r10d
3310(5): mov $0x6e,%ebx
3315(5): jmp 0xfffffd5d(%rip)
331a(6): nop 0x0(%rax,%rax,1)
3320(5): mov $0x61,%ebx
3325(5): jmp 0xfffffdcb(%rip)
332a(6): nop 0x0(%rax,%rax,1)
3330(3): xor %r10d,%r10d
3333(5): cmp $0x2,0x8(%rsp)
3338(3): setz %dl
333b(5): cmp $0x0,0xf(%rsp)
3340(6): jnz 0xb9a(%rip)
3346(3): mov %r8d,%eax
3349(3): mov %r15,%rcx
334c(3): xor $0x1,%eax
334f(2): and %dl,%al
3351(2): jz 0x2f(%rip)
3353(3): cmp %r15,%r13
3356(2): jbe 0x7(%rip)
3358(5): mov $0x27,0x0(%r14,%r15,1)
335d(4): lea 0x1(%r15),%rcx
3361(3): cmp %rcx,%r13
3364(2): jbe 0x8(%rip)
3366(6): mov $0x24,0x1(%r14,%r15,1)
336c(4): lea 0x2(%r15),%rcx
3370(3): cmp %rcx,%r13
3373(6): jnbe 0x636(%rip)
3379(4): lea 0x3(%r15),%rcx
337d(3): mov %eax,%r8d
3380(3): cmp %rcx,%r13
3383(2): jbe 0x7(%rip)
3385(5): mov $0x5c,0x0(%r14,%rcx,1)
338a(5): cmp $0x2,0x8(%rsp)
338f(4): lea 0x1(%rcx),%r15
3393(6): jz 0x606(%rip)
3399(4): lea 0x1(%rbp),%rax
339d(3): cmp %r11,%rax
33a0(2): jnb 0x1b(%rip)
33a2(5): mov 0x10(%rsp),%rax
33a7(5): movzx 0x1(%rax,%rbp,1),%eax
33ac(4): mov %al,0x28(%rsp)
33b0(3): sub $0x30,%eax
33b3(2): cmp $0x9,%al
33b5(6): jbe 0x834(%rip)
33bb(3): mov %r12d,%eax
33be(5): mov $0x30,%ebx
33c3(3): xor %r12d,%r12d
33c6(5): jmp 0xfffffbb2(%rip)
33cb(5): nop 0x0(%rax,%rax,1)
33d0(5): cmp $0x2,0x8(%rsp)
33d5(3): mov %r10d,%r12d
33d8(3): setz %dl
33db(3): xor %r10d,%r10d
33de(2): xor %eax,%eax
33e0(5): jmp 0xfffffb98(%rip)
33e5(3): nop (%rax)
33e8(5): cmp $0x2,0x8(%rsp)
33ed(3): setz %dl
33f0(3): xor %r10d,%r10d
33f3(5): jmp 0xfffffdc5(%rip)
33f8(8): nop 0x0(%rax,%rax,1)
3400(5): cmp $0x2,0x8(%rsp)
3405(3): setz %dl
3408(3): xor %r10d,%r10d
340b(3): xor %r12d,%r12d
340e(5): jmp 0xfffffdb3(%rip)
3413(5): nop 0x0(%rax,%rax,1)
3418(5): cmp $0x2,0x8(%rsp)
341d(3): mov %r10d,%r12d
3420(5): mov $0x20,%ebx
3425(3): setz %dl
3428(3): xor %r10d,%r10d
342b(5): jmp 0xfffffd96(%rip)
3430(5): mov $0xd,%edx
3435(3): xor %r10d,%r10d
3438(5): mov $0x72,%ebx
343d(5): jmp 0xfffffc35(%rip)
3442(6): nop 0x0(%rax,%rax,1)
3448(5): mov $0x76,%ebx
344d(5): jmp 0xfffffca3(%rip)
3452(6): nop 0x0(%rax,%rax,1)
3458(5): mov $0x9,%edx
345d(3): xor %r10d,%r10d
3460(5): mov $0x74,%ebx
3465(5): jmp 0xfffffc0d(%rip)
346a(6): nop 0x0(%rax,%rax,1)
3470(5): mov $0x62,%ebx
3475(5): jmp 0xfffffc7b(%rip)
347a(6): nop 0x0(%rax,%rax,1)
3480(3): xor %r10d,%r10d
3483(5): jmp 0xfffffa9d(%rip)
3488(8): nop 0x0(%rax,%rax,1)
3490(5): cmp $0x0,0xf(%rsp)
3495(6): jnz 0x96b(%rip)
349b(4): add $0x1,%rbp
349f(3): mov %r8d,%eax
34a2(3): xor %r12d,%r12d
34a5(5): mov $0x5c,%ebx
34aa(5): jmp 0xfffffb12(%rip)
34af(1): nop 
34b0(5): cmp $0x2,0x8(%rsp)
34b5(5): movzx 0xf(%rsp),%ebx
34ba(3): mov %r8d,%r12d
34bd(3): mov %r11,%rbp
34c0(3): setz %dl
34c3(2): mov %ebx,%eax
34c5(3): test %r15,%r15
34c8(3): setz %cl
34cb(2): and %edx,%eax
34cd(2): and %cl,%al
34cf(6): jnz 0xa67(%rip)
34d5(2): mov %ebx,%eax
34d7(3): xor $0x1,%eax
34da(2): and %al,%dl
34dc(6): jz 0x970(%rip)
34e2(5): cmp $0x0,0x7c(%rsp)
34e7(6): jz 0x963(%rip)
34ed(5): cmp $0x0,0xe(%rsp)
34f2(6): jnz 0x9fb(%rip)
34f8(3): test %r13,%r13
34fb(3): setz %al
34fe(6): cmp $0x0,0x50(%rsp)
3504(3): setnz %dl
3507(2): and %dl,%al
3509(6): jz 0xa23(%rip)
350f(5): mov 0x50(%rsp),%r13
3514(7): lea 0x2d5a(%rip),%rbx
351b(4): mov $0x27,(%r14)
351f(8): mov $0x2,0x8(%rsp)
3527(6): mov $0x1,%r15d
352d(9): mov $0x1,0x18(%rsp)
3536(5): mov $0x0,0xf(%rsp)
353b(5): mov %rbx,0x48(%rsp)
3540(4): mov %al,0x7c(%rsp)
3544(5): jmp 0xfffff8df(%rip)
3549(7): nop 0x0(%rax)
3550(5): cmp $0x0,0xf(%rsp)
3555(6): jnz 0x8ab(%rip)
355b(3): test %r13,%r13
355e(6): jz 0x402(%rip)
3564(2): xor %edx,%edx
3566(6): cmp $0x0,0x50(%rsp)
356c(6): jnz 0x3f4(%rip)
3572(5): mov %r13,0x50(%rsp)
3577(4): add $0x3,%r15
357b(2): xor %eax,%eax
357d(5): mov %r12b,0x7c(%rsp)
3582(3): xor %r8d,%r8d
3585(3): mov %rdx,%r13
3588(5): mov $0x27,%ebx
358d(5): jmp 0xfffffa1c(%rip)
3592(6): nop 0x0(%rax,%rax,1)
3598(5): test $0x4,0x78(%rsp)
359d(2): jz 0x23(%rip)
359f(4): lea 0x2(%rbp),%rcx
35a3(3): cmp %r11,%rcx
35a6(2): jnb 0x1a(%rip)
35a8(5): mov 0x10(%rsp),%rax
35ad(5): cmp $0x3f,0x1(%rax,%rbp,1)
35b2(6): jz 0x790(%rip)
35b8(8): nop 0x0(%rax,%rax,1)
35c0(2): xor %edx,%edx
35c2(3): xor %r12d,%r12d
35c5(2): xor %eax,%eax
35c7(5): mov $0x3f,%ebx
35cc(5): jmp 0xfffff9ac(%rip)
35d1(7): nop 0x0(%rax)
35d8(5): cmp $0x0,0xf(%rsp)
35dd(6): jnz 0x823(%rip)
35e3(3): xor %r12d,%r12d
35e6(2): xor %eax,%eax
35e8(5): mov $0x3f,%ebx
35ed(5): jmp 0xfffff9bc(%rip)
35f2(6): nop 0x0(%rax,%rax,1)
35f8(8): lea 0xa0(%rsp),%rax
3600(4): cmp $0xffffffff,%r11
3604(c): mov $0x0,0xa0(%rsp)
3610(5): mov %rax,0x28(%rsp)
3615(2): jnz 0x2f(%rip)
3617(5): mov 0x10(%rsp),%rdi
361c(5): mov %r8b,0x40(%rsp)
3621(5): mov %r10b,0x38(%rsp)
3626(5): mov %r9,0x30(%rsp)
362b(5): call 0xffffdf25(%rip)
3630(6): movzx 0x40(%rsp),%r8d
3636(6): movzx 0x38(%rsp),%r10d
363c(3): mov %rax,%r11
363f(5): mov 0x30(%rsp),%r9
3644(8): lea 0x9c(%rsp),%rax
364c(2): xor %ecx,%ecx
364e(4): mov %bl,0x7e(%rsp)
3652(5): mov %r8b,0x7d(%rsp)
3657(3): mov %rcx,%rbx
365a(8): mov %r9,0x88(%rsp)
3662(5): mov %rax,0x38(%rsp)
3667(5): mov %r10b,0x7f(%rsp)
366c(8): mov %r15,0x80(%rsp)
3674(5): mov %r14,0x40(%rsp)
3679(5): mov %r13,0x70(%rsp)
367e(5): mov %r11,0x30(%rsp)
3683(5): mov 0x10(%rsp),%rax
3688(5): lea 0x0(%rbp,%rbx,1),%r14
368d(5): mov 0x30(%rsp),%rdx
3692(5): mov 0x28(%rsp),%rcx
3697(5): mov 0x38(%rsp),%rdi
369c(4): lea 0x0(%rax,%r14,1),%r13
36a0(3): sub %r14,%rdx
36a3(3): mov %r13,%rsi
36a6(5): call 0x200a(%rip)
36ab(3): test %rax,%rax
36ae(3): mov %rax,%r15
36b1(2): jz 0x50(%rip)
36b3(4): cmp $0xffffffff,%rax
36b7(6): jz 0x61e(%rip)
36bd(4): cmp $0xfffffffe,%rax
36c1(6): jz 0x5a0(%rip)
36c7(5): cmp $0x2,0x8(%rsp)
36cc(3): setz %al
36cf(4): and 0xf(%rsp),%al
36d3(6): jnz 0x19d(%rip)
36d9(7): mov 0x9c(%rsp),%edi
36e0(5): call 0xffffe080(%rip)
36e5(5): mov 0x28(%rsp),%rdi
36ea(2): test %eax,%eax
36ec(5): mov $0x0,%eax
36f1(4): cmove %eax,%r12d
36f5(3): add %r15,%rbx
36f8(5): call 0xffffe058(%rip)
36fd(2): test %eax,%eax
36ff(2): jz 0xffffff84(%rip)
3701(3): mov %r12d,%edx
3704(3): mov %rbx,%rdi
3707(6): movzx 0x7d(%rsp),%r8d
370d(3): xor $0x1,%edx
3710(5): movzx 0x7e(%rsp),%ebx
3715(6): movzx 0x7f(%rsp),%r10d
371b(4): and 0xd(%rsp),%dl
371f(8): mov 0x80(%rsp),%r15
3727(5): mov 0x40(%rsp),%r14
372c(5): mov 0x70(%rsp),%r13
3731(5): mov 0x30(%rsp),%r11
3736(4): cmp $0x1,%rdi
373a(6): jbe 0x601(%rip)
3740(3): mov %rdi,%rcx
3743(2): xor %esi,%esi
3745(6): movzx 0xf(%rsp),%r9d
374b(3): add %rbp,%rcx
374e(5): mov 0x10(%rsp),%rdi
3753(5): jmp 0xbb(%rip)
3758(8): nop 0x0(%rax,%rax,1)
3760(5): cmp $0x2,0x8(%rsp)
3765(3): setz %al
3768(3): test %r9b,%r9b
376b(6): jnz 0x4b5(%rip)
3771(3): mov %r8d,%esi
3774(3): xor $0x1,%esi
3777(3): and %sil,%al
377a(2): jz 0x31(%rip)
377c(3): cmp %r15,%r13
377f(2): jbe 0x7(%rip)
3781(5): mov $0x27,0x0(%r14,%r15,1)
3786(4): lea 0x1(%r15),%rsi
378a(3): cmp %rsi,%r13
378d(2): jbe 0x8(%rip)
378f(6): mov $0x24,0x1(%r14,%r15,1)
3795(4): lea 0x2(%r15),%rsi
3799(3): cmp %rsi,%r13
379c(2): jbe 0x8(%rip)
379e(6): mov $0x27,0x2(%r14,%r15,1)
37a4(4): add $0x3,%r15
37a8(3): mov %eax,%r8d
37ab(3): cmp %r15,%r13
37ae(2): jbe 0x7(%rip)
37b0(5): mov $0x5c,0x0(%r14,%r15,1)
37b5(4): lea 0x1(%r15),%rax
37b9(3): cmp %rax,%r13
37bc(2): jbe 0xf(%rip)
37be(2): mov %ebx,%eax
37c0(3): shr $0x6,%al
37c3(3): add $0x30,%eax
37c6(5): mov %al,0x1(%r14,%r15,1)
37cb(4): lea 0x2(%r15),%rax
37cf(3): cmp %rax,%r13
37d2(2): jbe 0x12(%rip)
37d4(2): mov %ebx,%eax
37d6(3): shr $0x3,%al
37d9(3): and $0x7,%eax
37dc(3): add $0x30,%eax
37df(5): mov %al,0x2(%r14,%r15,1)
37e4(3): and $0x7,%ebx
37e7(4): add $0x1,%rbp
37eb(4): add $0x3,%r15
37ef(3): add $0x30,%ebx
37f2(3): cmp %rcx,%rbp
37f5(6): jnb 0xfffff7eb(%rip)
37fb(2): mov %edx,%esi
37fd(3): cmp %r15,%r13
3800(2): jbe 0x6(%rip)
3802(4): mov %bl,0x0(%r14,%r15,1)
3806(4): movzx 0x0(%rdi,%rbp,1),%ebx
380a(4): add $0x1,%r15
380e(2): test %dl,%dl
3810(6): jnz 0xffffff50(%rip)
3816(2): mov %esi,%eax
3818(3): xor $0x1,%eax
381b(3): and %r8d,%eax
381e(3): test %r10b,%r10b
3821(2): jz 0x10(%rip)
3823(3): cmp %r15,%r13
3826(2): jbe 0x7(%rip)
3828(5): mov $0x5c,0x0(%r14,%r15,1)
382d(4): add $0x1,%r15
3831(4): add $0x1,%rbp
3835(3): cmp %rcx,%rbp
3838(6): jnb 0xfffff784(%rip)
383e(2): test %al,%al
3840(6): jz 0x3fe(%rip)
3846(3): cmp %r15,%r13
3849(2): jbe 0x7(%rip)
384b(5): mov $0x27,0x0(%r14,%r15,1)
3850(4): lea 0x1(%r15),%rax
3854(3): cmp %rax,%r13
3857(2): jbe 0x8(%rip)
3859(6): mov $0x27,0x1(%r14,%r15,1)
385f(4): add $0x2,%r15
3863(3): xor %r10d,%r10d
3866(3): xor %r8d,%r8d
3869(2): jmp 0xffffff94(%rip)
386b(5): nop 0x0(%rax,%rax,1)
3870(4): cmp $0x1,%r15
3874(6): jz 0xfffffe65(%rip)
387a(5): mov 0x10(%rsp),%rdi
387f(4): lea 0x0(%rdi,%r15,1),%rcx
3883(5): lea 0x1(%rdi,%r14,1),%rdx
3888(4): lea 0x0(%rcx,%r14,1),%r8
388c(2): jmp 0x11(%rip)
388e(2): nop 
3890(4): add $0x1,%rdx
3894(3): cmp %rdx,%r8
3897(6): jz 0xfffffe42(%rip)
389d(3): movzx (%rdx),%ecx
38a0(3): sub $0x5b,%ecx
38a3(3): cmp $0x21,%cl
38a6(2): jnbe 0xffffffea(%rip)
38a8(5): mov $0x1,%esi
38ad(3): shl/sal %cl,%rsi
38b0(3): mov %rsi,%rcx
38b3(a): mov $0x8589934635,%rsi
38bd(3): test %rsi,%rcx
38c0(2): jz 0xffffffd0(%rip)
38c2(5): mov 0x40(%rsp),%r14
38c7(5): mov 0x70(%rsp),%r13
38cc(5): mov 0x30(%rsp),%rbp
38d1(8): mov $0x2,0x8(%rsp)
38d9(5): cmp $0x0,0xd(%rsp)
38de(2): jz 0x12(%rip)
38e0(2): test %al,%al
38e2(5): mov $0x4,%eax
38e7(5): cmove 0x8(%rsp),%eax
38ec(4): mov %eax,0x8(%rsp)
38f0(4): sub $0x8,%rsp
38f4(3): mov %rbp,%rcx
38f7(3): mov %r13,%rsi
38fa(4): push 0x68(%rsp)
38fe(4): push 0x78(%rsp)
3902(3): mov %r14,%rdi
3905(2): push $0x0
3907(8): mov 0x98(%rsp),%r9d
390f(5): mov 0x28(%rsp),%r8d
3914(5): mov 0x30(%rsp),%rdx
3919(4): and $0xfd,%r9d
391d(5): call 0xfffff433(%rip)
3922(4): add $0x20,%rsp
3926(3): mov %rax,%r15
3929(8): mov 0xa8(%rsp),%rbx
3931(9): xor $0x28,%rbx
393a(3): mov %r15,%rax
393d(6): jnz 0x606(%rip)
3943(7): add $0xb8,%rsp
394a(1): pop %rbx
394b(1): pop %rbp
394c(2): pop %r12
394e(2): pop %r13
3950(2): pop %r14
3952(2): pop %r15
3954(1): ret near (%rsp)
3955(3): nop (%rax)
3958(3): mov %r11,%rbp
395b(5): jmp 0xffffff7e(%rip)
3960(3): cmp %r15,%r13
3963(2): jbe 0x7(%rip)
3965(5): mov $0x27,0x0(%r14,%r15,1)
396a(4): lea 0x1(%r15),%rax
396e(3): cmp %rax,%r13
3971(2): jbe 0x8(%rip)
3973(6): mov $0x5c,0x1(%r14,%r15,1)
3979(4): lea 0x2(%r15),%rax
397d(3): cmp %rax,%r13
3980(6): jbe 0x5f2(%rip)
3986(3): mov %r13,%rdx
3989(6): mov $0x27,0x2(%r14,%r15,1)
398f(5): mov 0x50(%rsp),%r13
3994(5): jmp 0xfffffbde(%rip)
3999(3): mov %r12d,%eax
399c(5): mov $0x30,%ebx
39a1(3): xor %r12d,%r12d
39a4(5): jmp 0xfffff605(%rip)
39a9(6): mov $0x27,0x2(%r14,%r15,1)
39af(5): jmp 0xfffff9ca(%rip)
39b4(2): test %ebx,%ebx
39b6(6): jnz 0xfffff42d(%rip)
39bc(5): mov $0x1,0xd(%rsp)
39c1(3): test %r13,%r13
39c4(6): jnz 0x596(%rip)
39ca(7): lea 0x28a4(%rip),%rax
39d1(9): mov $0x0,0x50(%rsp)
39da(5): mov $0x1,0xe(%rsp)
39df(5): mov $0x0,0x7c(%rsp)
39e4(3): xor %r12d,%r12d
39e7(5): mov $0x0,0xf(%rsp)
39ec(9): mov $0x1,0x18(%rsp)
39f5(5): mov %rax,0x48(%rsp)
39fa(6): mov $0x1,%r15d
3a00(8): mov $0x2,0x8(%rsp)
3a08(5): jmp 0xfffff41b(%rip)
3a0d(3): nop (%rax)
3a10(2): test %ebx,%ebx
3a12(6): jnz 0x3fb(%rip)
3a18(3): test %r13,%r13
3a1b(6): jz 0x22b(%rip)
3a21(4): mov $0x22,(%r14)
3a25(5): mov $0x1,0xe(%rsp)
3a2a(3): xor %r12d,%r12d
3a2d(5): mov $0x0,0x7c(%rsp)
3a32(9): mov $0x0,0x50(%rsp)
3a3b(7): lea 0x2831(%rip),%rax
3a42(5): mov $0x0,0xf(%rsp)
3a47(5): mov $0x1,0xd(%rsp)
3a4c(9): mov $0x1,0x18(%rsp)
3a55(6): mov $0x1,%r15d
3a5b(5): mov %rax,0x48(%rsp)
3a60(5): jmp 0xfffff3c3(%rip)
3a65(7): lea 0x2807(%rip),%rax
3a6c(5): mov $0x1,0xe(%rsp)
3a71(5): mov $0x0,0x7c(%rsp)
3a76(3): xor %r12d,%r12d
3a79(9): mov $0x0,0x50(%rsp)
3a82(5): mov $0x1,0xf(%rsp)
3a87(5): mov $0x1,0xd(%rsp)
3a8c(9): mov $0x1,0x18(%rsp)
3a95(3): xor %r15d,%r15d
3a98(5): mov %rax,0x48(%rsp)
3a9d(8): mov $0x5,0x8(%rsp)
3aa5(5): jmp 0xfffff37e(%rip)
3aaa(5): mov $0x1,0xe(%rsp)
3aaf(5): mov $0x0,0x7c(%rsp)
3ab4(3): xor %r12d,%r12d
3ab7(9): mov $0x0,0x50(%rsp)
3ac0(5): mov $0x0,0xf(%rsp)
3ac5(3): xor %r15d,%r15d
3ac8(5): mov $0x1,0xd(%rsp)
3acd(9): mov $0x0,0x18(%rsp)
3ad6(9): mov $0x0,0x48(%rsp)
3adf(5): jmp 0xfffff344(%rip)
3ae4(5): cmp $0xa,0x8(%rsp)
3ae9(2): jz 0x58(%rip)
3aeb(7): lea 0x2785(%rip),%rsi
3af2(2): xor %edi,%edi
3af4(5): mov $0x5,%edx
3af9(5): call 0xffffda37(%rip)
3afe(3): mov %rax,%rcx
3b01(5): mov %rax,0x68(%rsp)
3b06(7): lea 0x276a(%rip),%rax
3b0d(3): cmp %rax,%rcx
3b10(6): jz 0x39e(%rip)
3b16(7): lea 0x2758(%rip),%rsi
3b1d(2): xor %edi,%edi
3b1f(5): mov $0x5,%edx
3b24(5): call 0xffffda0c(%rip)
3b29(3): mov %rax,%rcx
3b2c(5): mov %rax,0x60(%rsp)
3b31(7): lea 0x273d(%rip),%rax
3b38(3): cmp %rax,%rcx
3b3b(6): jz 0x389(%rip)
3b41(3): xor %r15d,%r15d
3b44(2): test %ebx,%ebx
3b46(6): jz 0x1c7(%rip)
3b4c(2): test %ebx,%ebx
3b4e(5): mov 0x60(%rsp),%rbx
3b53(5): setnz 0xf(%rsp)
3b58(3): xor %r12d,%r12d
3b5b(3): mov %rbx,%rdi
3b5e(5): call 0xffffd9f2(%rip)
3b63(5): mov %rbx,0x48(%rsp)
3b68(5): mov %rax,0x18(%rsp)
3b6d(5): mov $0x1,0xe(%rsp)
3b72(5): mov $0x0,0x7c(%rsp)
3b77(9): mov $0x0,0x50(%rsp)
3b80(5): mov $0x1,0xd(%rsp)
3b85(5): jmp 0xfffff29e(%rip)
3b8a(5): mov $0x1,0xe(%rsp)
3b8f(5): mov $0x0,0x7c(%rsp)
3b94(3): xor %r12d,%r12d
3b97(9): mov $0x0,0x50(%rsp)
3ba0(5): mov $0x0,0xf(%rsp)
3ba5(3): xor %r15d,%r15d
3ba8(5): mov $0x0,0xd(%rsp)
3bad(9): mov $0x0,0x18(%rsp)
3bb6(9): mov $0x0,0x48(%rsp)
3bbf(5): jmp 0xfffff264(%rip)
3bc4(5): mov $0x1,0xe(%rsp)
3bc9(5): mov $0x0,0x7c(%rsp)
3bce(3): xor %r12d,%r12d
3bd1(9): mov $0x0,0x50(%rsp)
3bda(5): mov $0x1,0xf(%rsp)
3bdf(5): mov $0x1,0xd(%rsp)
3be4(5): jmp 0xfffff21f(%rip)
3be9(3): cmp %r15,%r13
3bec(2): jbe 0x7(%rip)
3bee(5): mov $0x30,0x0(%r14,%r15,1)
3bf3(4): lea 0x2(%rcx),%rax
3bf7(3): cmp %rax,%r13
3bfa(2): jbe 0x8(%rip)
3bfc(6): mov $0x30,0x2(%r14,%rcx,1)
3c02(3): mov %r12d,%eax
3c05(4): lea 0x3(%rcx),%r15
3c09(3): xor %r12d,%r12d
3c0c(5): mov $0x30,%ebx
3c11(5): jmp 0xfffff367(%rip)
3c16(a): nop 0x0(%rax,%rax,1)
3c20(5): movzx 0xf(%rsp),%ebx
3c25(3): mov %r11,%rbp
3c28(4): mov %bl,0xd(%rsp)
3c2c(5): jmp 0xfffffcad(%rip)
3c31(5): movzx 0xd(%rsp),%edx
3c36(3): xor %r12d,%r12d
3c39(5): jmp 0xfffffb07(%rip)
3c3e(3): xor %r10d,%r10d
3c41(5): jmp 0xfffffbbc(%rip)
3c46(9): mov $0x0,0x50(%rsp)
3c4f(5): mov $0x1,0xe(%rsp)
3c54(3): xor %r12d,%r12d
3c57(5): mov $0x0,0x7c(%rsp)
3c5c(5): jmp 0xfffffddf(%rip)
3c61(5): mov 0x30(%rsp),%r11
3c66(3): mov %r14,%rsi
3c69(3): mov %r13,%rcx
3c6c(3): mov %rbx,%rax
3c6f(3): mov %rbx,%rdi
3c72(6): movzx 0x7d(%rsp),%r8d
3c78(5): movzx 0x7e(%rsp),%ebx
3c7d(8): mov 0x88(%rsp),%r9
3c85(3): cmp %r11,%rsi
3c88(6): movzx 0x7f(%rsp),%r10d
3c8e(8): mov 0x80(%rsp),%r15
3c96(5): mov 0x40(%rsp),%r14
3c9b(5): mov 0x70(%rsp),%r13
3ca0(2): jnb 0x28(%rip)
3ca2(3): cmp $0x0,(%rcx)
3ca5(2): jnz 0x12(%rip)
3ca7(2): jmp 0x21(%rip)
3ca9(7): nop 0x0(%rax)
3cb0(5): cmp $0x0,0x0(%r9,%rax,1)
3cb5(2): jz 0x10(%rip)
3cb7(4): add $0x1,%rax
3cbb(5): lea 0x0(%rbp,%rax,1),%rdx
3cc0(3): cmp %rdx,%r11
3cc3(2): jnbe 0xffffffed(%rip)
3cc5(3): mov %rax,%rdi
3cc8(5): movzx 0xd(%rsp),%edx
3ccd(3): xor %r12d,%r12d
3cd0(5): jmp 0xfffffa66(%rip)
3cd5(3): mov %rbx,%rdi
3cd8(6): movzx 0x7d(%rsp),%r8d
3cde(5): movzx 0x7e(%rsp),%ebx
3ce3(6): movzx 0x7f(%rsp),%r10d
3ce9(8): mov 0x80(%rsp),%r15
3cf1(3): xor %r12d,%r12d
3cf4(5): mov 0x40(%rsp),%r14
3cf9(5): mov 0x70(%rsp),%r13
3cfe(5): mov 0x30(%rsp),%r11
3d03(5): movzx 0xd(%rsp),%edx
3d08(5): jmp 0xfffffa2e(%rip)
3d0d(5): mov 0x68(%rsp),%rdx
3d12(3): movzx (%rdx),%eax
3d15(2): test %al,%al
3d17(6): jz 0xfffffe35(%rip)
3d1d(3): nop (%rax)
3d20(3): cmp %r15,%r13
3d23(2): jbe 0x6(%rip)
3d25(4): mov %al,0x0(%r14,%r15,1)
3d29(4): add $0x1,%r15
3d2d(5): movzx 0x0(%rdx,%r15,1),%eax
3d32(2): test %al,%al
3d34(2): jnz 0xffffffec(%rip)
3d36(5): jmp 0xfffffe16(%rip)
3d3b(2): mov %edx,%eax
3d3d(5): jmp 0xfffff55a(%rip)
3d42(4): movzx 0x0(%rax,%rcx,1),%ebx
3d46(3): cmp $0x3e,%bl
3d49(6): jnbe 0xfffff877(%rip)
3d4f(a): mov $0x8070630310989004800,%rax
3d59(4): bt %rbx,%rax
3d5d(6): jnb 0xfffff863(%rip)
3d63(5): cmp $0x0,0xf(%rsp)
3d68(6): jnz 0x1ea(%rip)
3d6e(3): cmp %r15,%r13
3d71(2): jbe 0x7(%rip)
3d73(5): mov $0x3f,0x0(%r14,%r15,1)
3d78(4): lea 0x1(%r15),%rax
3d7c(3): cmp %rax,%r13
3d7f(2): jbe 0x8(%rip)
3d81(6): mov $0x22,0x1(%r14,%r15,1)
3d87(4): lea 0x2(%r15),%rax
3d8b(3): cmp %rax,%r13
3d8e(2): jbe 0x8(%rip)
3d90(6): mov $0x22,0x2(%r14,%r15,1)
3d96(4): lea 0x3(%r15),%rax
3d9a(3): cmp %rax,%r13
3d9d(2): jbe 0x8(%rip)
3d9f(6): mov $0x3f,0x3(%r14,%r15,1)
3da5(4): add $0x4,%r15
3da9(2): xor %edx,%edx
3dab(3): xor %r12d,%r12d
3dae(2): xor %eax,%eax
3db0(3): mov %rcx,%rbp
3db3(5): jmp 0xfffff1c5(%rip)
3db8(2): test %ebx,%ebx
3dba(6): jz 0x18e(%rip)
3dc0(7): lea 0x24ae(%rip),%rax
3dc7(5): mov $0x1,0xe(%rsp)
3dcc(5): mov $0x0,0x7c(%rsp)
3dd1(3): xor %r12d,%r12d
3dd4(9): mov $0x0,0x50(%rsp)
3ddd(5): mov $0x1,0xf(%rsp)
3de2(5): mov $0x0,0xd(%rsp)
3de7(9): mov $0x1,0x18(%rsp)
3df0(3): xor %r15d,%r15d
3df3(5): mov %rax,0x48(%rsp)
3df8(5): jmp 0xfffff02b(%rip)
3dfd(3): nop (%rax)
3e00(3): mov %r11,%rbp
3e03(5): movzx 0xf(%rsp),%eax
3e08(5): jmp 0xfffffad1(%rip)
3e0d(7): lea 0x245f(%rip),%rax
3e14(5): mov $0x1,0xe(%rsp)
3e19(5): mov $0x0,0x7c(%rsp)
3e1e(3): xor %r12d,%r12d
3e21(9): mov $0x0,0x50(%rsp)
3e2a(5): mov $0x1,0xf(%rsp)
3e2f(5): mov $0x1,0xd(%rsp)
3e34(9): mov $0x1,0x18(%rsp)
3e3d(3): xor %r15d,%r15d
3e40(5): mov %rax,0x48(%rsp)
3e45(5): jmp 0xffffefde(%rip)
3e4a(2): mov %edx,%eax
3e4c(5): mov 0x48(%rsp),%rbx
3e51(3): test %rbx,%rbx
3e54(2): jz 0x2e(%rip)
3e56(2): test %al,%al
3e58(2): jz 0x2a(%rip)
3e5a(3): movzx (%rbx),%ecx
3e5d(3): mov %rbx,%rax
3e60(2): test %cl,%cl
3e62(2): jz 0x20(%rip)
3e64(3): mov %r15,%rdx
3e67(3): sub %r15,%rax
3e6a(3): cmp %rdx,%r13
3e6d(2): jbe 0x6(%rip)
3e6f(4): mov %cl,0x0(%r14,%rdx,1)
3e73(4): add $0x1,%rdx
3e77(4): movzx 0x0(%rax,%rdx,1),%ecx
3e7b(2): test %cl,%cl
3e7d(2): jnz 0xffffffed(%rip)
3e7f(3): mov %rdx,%r15
3e82(3): cmp %r15,%r13
3e85(6): jbe 0xfffffaa4(%rip)
3e8b(5): mov $0x0,0x0(%r14,%r15,1)
3e90(5): jmp 0xfffffa99(%rip)
3e95(5): cmp $0x2,0x8(%rsp)
3e9a(5): movzx 0xf(%rsp),%ebx
3e9f(3): mov %r11,%rbp
3ea2(3): setz %al
3ea5(4): mov %bl,0xd(%rsp)
3ea9(5): jmp 0xfffffa30(%rip)
3eae(4): mov 0x8(%rsp),%esi
3eb2(3): mov %rcx,%rdi
3eb5(5): call 0xffffedab(%rip)
3eba(5): mov %rax,0x68(%rsp)
3ebf(5): jmp 0xfffffc57(%rip)
3ec4(4): mov 0x8(%rsp),%esi
3ec8(3): mov %rcx,%rdi
3ecb(5): call 0xffffed95(%rip)
3ed0(5): mov %rax,0x60(%rsp)
3ed5(5): jmp 0xfffffc6c(%rip)
3eda(5): movzx 0xf(%rsp),%ebx
3edf(3): mov %r11,%rbp
3ee2(2): mov %edx,%eax
3ee4(4): mov %bl,0xd(%rsp)
3ee8(5): jmp 0xfffff9f1(%rip)
3eed(4): sub $0x8,%rsp
3ef1(6): mov $0x5,%r8d
3ef7(3): mov %r11,%rcx
3efa(4): push 0x68(%rsp)
3efe(4): push 0x78(%rsp)
3f02(3): mov %r14,%rdi
3f05(4): push 0x38(%rsp)
3f09(8): mov 0x98(%rsp),%r9d
3f11(5): mov 0x30(%rsp),%rdx
3f16(5): mov 0x70(%rsp),%rsi
3f1b(5): call 0xffffee35(%rip)
3f20(4): add $0x20,%rsp
3f24(3): mov %rax,%r15
3f27(5): jmp 0xfffffa02(%rip)
3f2c(5): movzx 0x7c(%rsp),%eax
3f31(5): jmp 0xffffff1b(%rip)
3f36(8): mov $0x2,0x8(%rsp)
3f3e(5): jmp 0xfffff99b(%rip)
3f43(5): call 0xffffd61d(%rip)
3f48(5): mov $0x0,0xd(%rsp)
3f4d(5): jmp 0xfffffa74(%rip)
3f52(3): mov %r11,%rbp
3f55(5): jmp 0xfffff99b(%rip)
3f5a(5): mov $0x1,0xe(%rsp)
3f5f(2): xor %eax,%eax
3f61(3): xor %r12d,%r12d
3f64(9): mov $0x0,0x50(%rsp)
3f6d(5): jmp 0xfffff5a7(%rip)
3f72(3): mov %r13,%rdx
3f75(5): mov 0x50(%rsp),%r13
3f7a(5): jmp 0xfffff5f8(%rip)
3f7f(5): call 0xffffd521(%rip)

"quotearg_n_options" :
3f90(2): push %r15
3f92(2): push %r14
3f94(3): movsxd %edi,%r15
3f97(2): push %r13
3f99(2): push %r12
3f9b(3): mov %rdx,%r14
3f9e(1): push %rbp
3f9f(1): push %rbx
3fa0(3): mov %rcx,%rbp
3fa3(4): sub $0x28,%rsp
3fa7(5): mov %rsi,0x8(%rsp)
3fac(5): call 0xffffd504(%rip)
3fb1(3): mov %rax,%r13
3fb4(2): mov (%rax),%eax
3fb6(3): test %r15d,%r15d
3fb9(7): mov 0x2050c0(%rip),%rbx
3fc0(4): mov %eax,0x18(%rsp)
3fc4(6): js 0x16d(%rip)
3fca(7): cmp %r15d,0x2050a7(%rip)
3fd1(2): jnle 0x64(%rip)
3fd3(7): cmp $0x7fffffff,%r15d
3fda(6): jz 0x15c(%rip)
3fe0(4): lea 0x1(%r15),%r12d
3fe4(7): lea 0x2050a5(%rip),%rax
3feb(3): movsxd %r12d,%rsi
3fee(4): shl/sal $0x4,%rsi
3ff2(3): cmp %rax,%rbx
3ff5(6): jz 0x11b(%rip)
3ffb(3): mov %rbx,%rdi
3ffe(5): call 0xf82(%rip)
4003(3): mov %rax,%rbx
4006(7): mov %rax,0x205073(%rip)
400d(7): movsxd 0x205064(%rip),%rdi
4014(3): mov %r12d,%edx
4017(2): xor %esi,%esi
4019(2): sub %edi,%edx
401b(4): shl/sal $0x4,%rdi
401f(3): movsxd %edx,%rdx
4022(3): add %rbx,%rdi
4025(4): shl/sal $0x4,%rdx
4029(5): call 0xffffd587(%rip)
402e(7): mov %r12d,0x205043(%rip)
4035(3): mov 0x4(%rbp),%eax
4038(4): shl/sal $0x4,%r15
403c(4): sub $0x8,%rsp
4040(3): add %r15,%rbx
4043(4): lea 0x8(%rbp),%r15
4047(4): mov 0x0(%rbp),%r8d
404b(3): mov (%rbx),%r11
404e(4): mov 0x8(%rbx),%r12
4052(3): mov %r14,%rcx
4055(3): or $0x1,%eax
4058(4): mov %eax,0x24(%rsp)
405c(3): push 0x30(%rbp)
405f(3): mov %eax,%r9d
4062(3): push 0x28(%rbp)
4065(2): push %r15
4067(3): mov %r11,%rsi
406a(5): mov 0x28(%rsp),%rdx
406f(3): mov %r12,%rdi
4072(5): mov %r11,0x30(%rsp)
4077(5): call 0xffffecd9(%rip)
407c(4): add $0x20,%rsp
4080(5): mov 0x10(%rsp),%r11
4085(3): cmp %rax,%r11
4088(2): jnbe 0x69(%rip)
408a(4): lea 0x1(%rax),%rsi
408e(7): lea 0x20508b(%rip),%rax
4095(3): cmp %rax,%r12
4098(3): mov %rsi,(%rbx)
409b(2): jz 0x14(%rip)
409d(3): mov %r12,%rdi
40a0(5): mov %rsi,0x10(%rsp)
40a5(5): call 0xffffd3eb(%rip)
40aa(5): mov 0x10(%rsp),%rsi
40af(3): mov %rsi,%rdi
40b2(5): mov %rsi,0x10(%rsp)
40b7(5): call 0xe69(%rip)
40bc(4): sub $0x8,%rsp
40c0(4): mov %rax,0x8(%rbx)
40c4(4): mov 0x0(%rbp),%r8d
40c8(3): push 0x30(%rbp)
40cb(3): push 0x28(%rbp)
40ce(3): mov %r14,%rcx
40d1(2): push %r15
40d3(5): mov 0x3c(%rsp),%r9d
40d8(3): mov %rax,%rdi
40db(5): mov 0x28(%rsp),%rdx
40e0(5): mov 0x30(%rsp),%rsi
40e5(3): mov %rax,%r12
40e8(5): call 0xffffec68(%rip)
40ed(4): add $0x20,%rsp
40f1(4): mov 0x18(%rsp),%eax
40f5(4): mov %eax,0x0(%r13)
40f9(4): add $0x28,%rsp
40fd(3): mov %r12,%rax
4100(1): pop %rbx
4101(1): pop %rbp
4102(2): pop %r12
4104(2): pop %r13
4106(2): pop %r14
4108(2): pop %r15
410a(1): ret near (%rsp)
410b(5): nop 0x0(%rax,%rax,1)
4110(2): xor %edi,%edi
4112(5): call 0xe6e(%rip)
4117(8): movdqa 0x204f71(%rip),%xmm0
411f(3): mov %rax,%rbx
4122(7): mov %rax,0x204f57(%rip)
4129(3): movups %xmm0,(%rax)
412c(5): jmp 0xfffffee1(%rip)
4131(5): call 0xffffd36f(%rip)
4136(5): call 0x103a(%rip)

"clone_quoting_options" :
4140(2): push %r12
4142(1): push %rbp
4143(1): push %rbx
4144(3): mov %rdi,%rbx
4147(5): call 0xffffd369(%rip)
414c(3): mov (%rax),%r12d
414f(3): mov %rax,%rbp
4152(7): lea 0x2050c7(%rip),%rax
4159(3): test %rbx,%rbx
415c(5): mov $0x38,%esi
4161(4): cmove %rax,%rbx
4165(3): mov %rbx,%rdi
4168(5): call 0xfb8(%rip)
416d(4): mov %r12d,0x0(%rbp)
4171(1): pop %rbx
4172(1): pop %rbp
4173(2): pop %r12
4175(1): ret near (%rsp)

"get_quoting_style" :
4180(7): lea 0x205099(%rip),%rax
4187(3): test %rdi,%rdi
418a(4): cmove %rax,%rdi
418e(2): mov (%rdi),%eax
4190(1): ret near (%rsp)

"set_quoting_style" :
41a0(7): lea 0x205079(%rip),%rax
41a7(3): test %rdi,%rdi
41aa(4): cmove %rax,%rdi
41ae(2): mov %esi,(%rdi)
41b0(1): ret near (%rsp)

"set_char_quoting" :
41c0(7): lea 0x205059(%rip),%rax
41c7(3): test %rdi,%rdi
41ca(2): mov %esi,%ecx
41cc(4): cmove %rax,%rdi
41d0(2): mov %esi,%eax
41d2(3): and $0x1f,%ecx
41d5(3): shr $0x5,%al
41d8(3): movzx %al,%eax
41db(5): lea 0x8(%rdi,%rax,4),%rdi
41e0(2): mov (%rdi),%esi
41e2(2): mov %esi,%eax
41e4(2): shr %cl,%eax
41e6(2): xor %eax,%edx
41e8(3): and $0x1,%eax
41eb(3): and $0x1,%edx
41ee(2): shl/sal %cl,%edx
41f0(2): xor %esi,%edx
41f2(2): mov %edx,(%rdi)
41f4(1): ret near (%rsp)

"set_quoting_flags" :
4200(7): lea 0x205019(%rip),%rax
4207(3): test %rdi,%rdi
420a(4): cmove %rax,%rdi
420e(3): mov 0x4(%rdi),%eax
4211(3): mov %esi,0x4(%rdi)
4214(1): ret near (%rsp)

"set_custom_quoting" :
4220(7): lea 0x204ff9(%rip),%rax
4227(3): test %rdi,%rdi
422a(4): cmove %rax,%rdi
422e(3): test %rsi,%rsi
4231(6): mov $0xa,(%rdi)
4237(2): jz 0x10(%rip)
4239(3): test %rdx,%rdx
423c(2): jz 0xb(%rip)
423e(4): mov %rsi,0x28(%rdi)
4242(4): mov %rdx,0x30(%rdi)
4246(1): ret near (%rsp)
4247(4): sub $0x8,%rsp
424b(5): call 0xffffd255(%rip)

"quotearg_buffer" :
4250(2): push %r15
4252(2): push %r14
4254(7): lea 0x204fc5(%rip),%rax
425b(2): push %r13
425d(2): push %r12
425f(3): mov %rdi,%r13
4262(1): push %rbp
4263(1): push %rbx
4264(3): mov %r8,%rbx
4267(3): mov %rsi,%r14
426a(3): mov %rdx,%r15
426d(4): sub $0x18,%rsp
4271(3): test %r8,%r8
4274(4): cmove %rax,%rbx
4278(5): mov %rcx,0x8(%rsp)
427d(5): call 0xffffd233(%rip)
4282(3): mov (%rax),%r12d
4285(3): mov %rax,%rbp
4288(4): lea 0x8(%rbx),%rax
428c(4): sub $0x8,%rsp
4290(4): mov 0x4(%rbx),%r9d
4294(3): push 0x30(%rbx)
4297(3): mov (%rbx),%r8d
429a(3): push 0x28(%rbx)
429d(3): mov %r15,%rdx
42a0(1): push %rax
42a1(5): mov 0x28(%rsp),%rcx
42a6(3): mov %r14,%rsi
42a9(3): mov %r13,%rdi
42ac(5): call 0xffffeaa4(%rip)
42b1(4): mov %r12d,0x0(%rbp)
42b5(4): add $0x38,%rsp
42b9(1): pop %rbx
42ba(1): pop %rbp
42bb(2): pop %r12
42bd(2): pop %r13
42bf(2): pop %r14
42c1(2): pop %r15
42c3(1): ret near (%rsp)

"quotearg_alloc_mem" :
42d0(2): push %r15
42d2(2): push %r14
42d4(7): lea 0x204f45(%rip),%rax
42db(2): push %r13
42dd(2): push %r12
42df(3): mov %rdx,%r12
42e2(1): push %rbp
42e3(1): push %rbx
42e4(3): mov %rcx,%rbx
42e7(3): mov %rdi,%r14
42ea(3): mov %rsi,%r15
42ed(4): sub $0x38,%rsp
42f1(3): test %rcx,%rcx
42f4(4): cmove %rax,%rbx
42f8(2): xor %ebp,%ebp
42fa(5): call 0xffffd1b6(%rip)
42ff(3): test %r12,%r12
4302(3): mov %rax,%r13
4305(2): mov (%rax),%eax
4307(4): setz %bpl
430b(3): or 0x4(%rbx),%ebp
430e(4): lea 0x8(%rbx),%r10
4312(4): sub $0x8,%rsp
4316(3): mov (%rbx),%r8d
4319(3): mov %r15,%rcx
431c(4): mov %eax,0x14(%rsp)
4320(3): push 0x30(%rbx)
4323(3): mov %r14,%rdx
4326(3): push 0x28(%rbx)
4329(2): push %r10
432b(2): xor %esi,%esi
432d(3): mov %ebp,%r9d
4330(2): xor %edi,%edi
4332(5): mov %r10,0x40(%rsp)
4337(5): call 0xffffea19(%rip)
433c(4): lea 0x1(%rax),%rsi
4340(5): mov %rax,0x48(%rsp)
4345(4): add $0x20,%rsp
4349(3): mov %rsi,%rdi
434c(5): mov %rsi,0x18(%rsp)
4351(5): call 0xbcf(%rip)
4356(5): mov %rax,0x10(%rsp)
435b(4): sub $0x8,%rsp
435f(3): push 0x30(%rbx)
4362(3): push 0x28(%rbx)
4365(5): mov 0x38(%rsp),%r10
436a(3): mov %ebp,%r9d
436d(3): mov (%rbx),%r8d
4370(3): mov %r15,%rcx
4373(3): mov %r14,%rdx
4376(3): mov %rax,%rdi
4379(2): push %r10
437b(5): mov 0x38(%rsp),%rsi
4380(5): call 0xffffe9d0(%rip)
4385(4): mov 0x2c(%rsp),%eax
4389(4): add $0x20,%rsp
438d(3): test %r12,%r12
4390(4): mov %eax,0x0(%r13)
4394(2): jz 0xb(%rip)
4396(5): mov 0x28(%rsp),%r11
439b(4): mov %r11,(%r12)
439f(5): mov 0x10(%rsp),%rax
43a4(4): add $0x38,%rsp
43a8(1): pop %rbx
43a9(1): pop %rbp
43aa(2): pop %r12
43ac(2): pop %r13
43ae(2): pop %r14
43b0(2): pop %r15
43b2(1): ret near (%rsp)

"quotearg_alloc" :
43c0(3): mov %rdx,%rcx
43c3(2): xor %edx,%edx
43c5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
43d0(6): mov 0x204ca2(%rip),%eax
43d6(2): push %r12
43d8(7): mov 0x204ca1(%rip),%r12
43df(1): push %rbp
43e0(1): push %rbx
43e1(3): cmp $0x1,%eax
43e4(2): jle 0x2d(%rip)
43e6(3): sub $0x2,%eax
43e9(5): lea 0x18(%r12),%rbx
43ee(4): shl/sal $0x4,%rax
43f2(5): lea 0x28(%r12,%rax,1),%rbp
43f7(9): nop 0x0(%rax,%rax,1)
4400(3): mov (%rbx),%rdi
4403(4): add $0x10,%rbx
4407(5): call 0xffffd089(%rip)
440c(3): cmp %rbp,%rbx
440f(2): jnz 0xfffffff1(%rip)
4411(5): mov 0x8(%r12),%rdi
4416(7): lea 0x204d03(%rip),%rbx
441d(3): cmp %rbx,%rdi
4420(2): jz 0x19(%rip)
4422(5): call 0xffffd06e(%rip)
4427(b): mov $0x100,0x204c5e(%rip)
4432(7): mov %rbx,0x204c5f(%rip)
4439(7): lea 0x204c50(%rip),%rbx
4440(3): cmp %rbx,%r12
4443(2): jz 0x11(%rip)
4445(3): mov %r12,%rdi
4448(5): call 0xffffd048(%rip)
444d(7): mov %rbx,0x204c2c(%rip)
4454(1): pop %rbx
4455(a): mov $0x1,0x204c19(%rip)
445f(1): pop %rbp
4460(2): pop %r12
4462(1): ret near (%rsp)

"quotearg_n" :
4470(7): lea 0x204da9(%rip),%rcx
4477(7): mov $0xffffffff,%rdx
447e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4490(7): lea 0x204d89(%rip),%rcx
4497(5): jmp 0xfffffaf9(%rip)

"quotearg" :
44a0(7): lea 0x204d79(%rip),%rcx
44a7(3): mov %rdi,%rsi
44aa(7): mov $0xffffffff,%rdx
44b1(2): xor %edi,%edi
44b3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
44c0(7): lea 0x204d59(%rip),%rcx
44c7(3): mov %rsi,%rdx
44ca(3): mov %rdi,%rsi
44cd(2): xor %edi,%edi
44cf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
44e0(4): sub $0x48,%rsp
44e4(3): mov %rdx,%rax
44e7(9): mov $0x28,%rdx
44f0(5): mov %rdx,0x38(%rsp)
44f5(2): xor %edx,%edx
44f7(3): cmp $0xa,%esi
44fa(2): jz 0x6a(%rip)
44fc(3): mov %esi,(%rsp)
44ff(3): mov %rsp,%rcx
4502(7): mov $0xffffffff,%rdx
4509(3): mov %rax,%rsi
450c(9): mov $0x0,0x4(%rsp)
4515(9): mov $0x0,0xc(%rsp)
451e(9): mov $0x0,0x14(%rsp)
4527(9): mov $0x0,0x1c(%rsp)
4530(9): mov $0x0,0x24(%rsp)
4539(9): mov $0x0,0x2c(%rsp)
4542(8): mov $0x0,0x34(%rsp)
454a(5): call 0xfffffa46(%rip)
454f(5): mov 0x38(%rsp),%rcx
4554(9): xor $0x28,%rcx
455d(2): jnz 0xc(%rip)
455f(4): add $0x48,%rsp
4563(1): ret near (%rsp)
4564(5): call 0xffffcf3c(%rip)
4569(5): call 0xffffcff7(%rip)

"quotearg_n_style_mem" :
4570(4): sub $0x48,%rsp
4574(3): mov %rdx,%rax
4577(3): mov %rcx,%rdx
457a(9): mov $0x28,%rcx
4583(5): mov %rcx,0x38(%rsp)
4588(2): xor %ecx,%ecx
458a(3): cmp $0xa,%esi
458d(2): jz 0x63(%rip)
458f(3): mov %esi,(%rsp)
4592(3): mov %rsp,%rcx
4595(3): mov %rax,%rsi
4598(9): mov $0x0,0x4(%rsp)
45a1(9): mov $0x0,0xc(%rsp)
45aa(9): mov $0x0,0x14(%rsp)
45b3(9): mov $0x0,0x1c(%rsp)
45bc(9): mov $0x0,0x24(%rsp)
45c5(9): mov $0x0,0x2c(%rsp)
45ce(8): mov $0x0,0x34(%rsp)
45d6(5): call 0xfffff9ba(%rip)
45db(5): mov 0x38(%rsp),%rdx
45e0(9): xor $0x28,%rdx
45e9(2): jnz 0xc(%rip)
45eb(4): add $0x48,%rsp
45ef(1): ret near (%rsp)
45f0(5): call 0xffffceb0(%rip)
45f5(5): call 0xffffcf6b(%rip)

"quotearg_style" :
4600(3): mov %rsi,%rdx
4603(2): mov %edi,%esi
4605(2): xor %edi,%edi
4607(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4610(3): mov %rdx,%rcx
4613(3): mov %rsi,%rdx
4616(2): mov %edi,%esi
4618(2): xor %edi,%edi
461a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4620(4): sub $0x48,%rsp
4624(2): mov %edx,%ecx
4626(9): mov $0x28,%rax
462f(5): mov %rax,0x38(%rsp)
4634(2): xor %eax,%eax
4636(7): mov 0x204c13(%rip),%rax
463d(3): mov %rsp,%r8
4640(3): and $0x1f,%ecx
4643(8): movdqa 0x204bd5(%rip),%xmm0
464b(5): mov %rax,0x30(%rsp)
4650(2): mov %edx,%eax
4652(4): movaps %xmm0,(%rsp)
4656(3): shr $0x5,%al
4659(3): movzx %al,%eax
465c(5): lea 0x8(%r8,%rax,4),%r9
4661(8): movdqa 0x204bc7(%rip),%xmm0
4669(5): movaps %xmm0,0x10(%rsp)
466e(8): movdqa 0x204bca(%rip),%xmm0
4676(5): movaps %xmm0,0x20(%rsp)
467b(3): mov (%r9),%edx
467e(2): mov %edx,%eax
4680(2): shr %cl,%eax
4682(2): not %eax
4684(3): and $0x1,%eax
4687(2): shl/sal %cl,%eax
4689(3): mov %r8,%rcx
468c(2): xor %edx,%eax
468e(3): mov %rsi,%rdx
4691(3): mov %rdi,%rsi
4694(3): mov %eax,(%r9)
4697(2): xor %edi,%edi
4699(5): call 0xfffff8f7(%rip)
469e(5): mov 0x38(%rsp),%rsi
46a3(9): xor $0x28,%rsi
46ac(2): jnz 0x7(%rip)
46ae(4): add $0x48,%rsp
46b2(1): ret near (%rsp)
46b3(5): call 0xffffcead(%rip)

"quotearg_char" :
46c0(4): movsx %sil,%edx
46c4(7): mov $0xffffffff,%rsi
46cb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
46d0(5): mov $0x3a,%edx
46d5(7): mov $0xffffffff,%rsi
46dc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
46f0(5): mov $0x3a,%edx
46f5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4700(4): sub $0x48,%rsp
4704(3): mov %rdx,%rax
4707(9): mov $0x28,%rdx
4710(5): mov %rdx,0x38(%rsp)
4715(2): xor %edx,%edx
4717(3): cmp $0xa,%esi
471a(2): jz 0x6a(%rip)
471c(3): mov %esi,(%rsp)
471f(3): mov %rsp,%rcx
4722(7): mov $0xffffffff,%rdx
4729(3): mov %rax,%rsi
472c(9): mov $0x0,0x4(%rsp)
4735(9): mov $0x4000000,0xc(%rsp)
473e(9): mov $0x0,0x14(%rsp)
4747(9): mov $0x0,0x1c(%rsp)
4750(9): mov $0x0,0x24(%rsp)
4759(9): mov $0x0,0x2c(%rsp)
4762(8): mov $0x0,0x34(%rsp)
476a(5): call 0xfffff826(%rip)
476f(5): mov 0x38(%rsp),%rcx
4774(9): xor $0x28,%rcx
477d(2): jnz 0xc(%rip)
477f(4): add $0x48,%rsp
4783(1): ret near (%rsp)
4784(5): call 0xffffcd1c(%rip)
4789(5): call 0xffffcdd7(%rip)

"quotearg_n_custom_mem" :
4790(4): sub $0x48,%rsp
4794(3): mov %rcx,%r9
4797(7): mov 0x204ab2(%rip),%rcx
479e(8): movdqa 0x204a7a(%rip),%xmm0
47a6(9): mov $0x28,%rax
47af(5): mov %rax,0x38(%rsp)
47b4(2): xor %eax,%eax
47b6(4): movaps %xmm0,(%rsp)
47ba(3): test %rsi,%rsi
47bd(5): mov %rcx,0x30(%rsp)
47c2(7): mov $0xa,(%rsp)
47c9(8): movdqa 0x204a5f(%rip),%xmm0
47d1(5): movaps %xmm0,0x10(%rsp)
47d6(8): movdqa 0x204a62(%rip),%xmm0
47de(5): movaps %xmm0,0x20(%rsp)
47e3(2): jz 0x34(%rip)
47e5(3): test %rdx,%rdx
47e8(2): jz 0x2f(%rip)
47ea(5): mov %rsi,0x28(%rsp)
47ef(5): mov %rdx,0x30(%rsp)
47f4(3): mov %rsp,%rcx
47f7(3): mov %r8,%rdx
47fa(3): mov %r9,%rsi
47fd(5): call 0xfffff793(%rip)
4802(5): mov 0x38(%rsp),%rdi
4807(9): xor $0x28,%rdi
4810(2): jnz 0xc(%rip)
4812(4): add $0x48,%rsp
4816(1): ret near (%rsp)
4817(5): call 0xffffcc89(%rip)
481c(5): call 0xffffcd44(%rip)

"quotearg_n_custom" :
4830(7): mov $0xffffffff,%r8
4837(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4840(3): mov %rdx,%rcx
4843(7): mov $0xffffffff,%r8
484a(3): mov %rsi,%rdx
484d(3): mov %rdi,%rsi
4850(2): xor %edi,%edi
4852(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4860(3): mov %rcx,%r8
4863(3): mov %rdx,%rcx
4866(3): mov %rsi,%rdx
4869(3): mov %rdi,%rsi
486c(2): xor %edi,%edi
486e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4880(7): lea 0x2047b9(%rip),%rcx
4887(5): jmp 0xfffff709(%rip)

"quote_mem" :
4890(7): lea 0x2047a9(%rip),%rcx
4897(3): mov %rsi,%rdx
489a(3): mov %rdi,%rsi
489d(2): xor %edi,%edi
489f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
48b0(7): lea 0x204789(%rip),%rcx
48b7(7): mov $0xffffffff,%rdx
48be(5): jmp 0xfffff6d2(%rip)

"quote" :
48d0(7): lea 0x204769(%rip),%rcx
48d7(3): mov %rdi,%rsi
48da(7): mov $0xffffffff,%rdx
48e1(2): xor %edi,%edi
48e3(5): jmp 0xfffff6ad(%rip)

"dup_safer" :
48f0(5): mov $0x3,%edx
48f5(2): xor %esi,%esi
48f7(2): xor %eax,%eax
48f9(5): jmp 0xa97(%rip)

"version_etc_arn" :
4900(2): push %r15
4902(2): push %r14
4904(2): push %r13
4906(2): push %r12
4908(3): mov %r9,%r12
490b(1): push %rbp
490c(1): push %rbx
490d(3): mov %rdi,%rbp
4910(3): mov %r8,%rbx
4913(4): sub $0x28,%rsp
4917(3): test %rsi,%rsi
491a(6): jz 0x11e(%rip)
4920(3): mov %rdx,%r8
4923(7): lea 0x1e1e(%rip),%rdx
492a(3): mov %rcx,%r9
492d(2): xor %eax,%eax
492f(3): mov %rsi,%rcx
4932(5): mov $0x1,%esi
4937(5): call 0xffffce09(%rip)
493c(7): lea 0x1e18(%rip),%rsi
4943(2): xor %edi,%edi
4945(5): mov $0x5,%edx
494a(5): call 0xffffcbe6(%rip)
494f(7): lea 0x212a(%rip),%rdx
4956(3): mov %rax,%rcx
4959(6): mov $0x7e3,%r8d
495f(5): mov $0x1,%esi
4964(3): mov %rbp,%rdi
4967(2): xor %eax,%eax
4969(5): call 0xffffcdd7(%rip)
496e(7): lea 0x1e73(%rip),%rsi
4975(2): xor %edi,%edi
4977(5): mov $0x5,%edx
497c(5): call 0xffffcbb4(%rip)
4981(3): mov %rbp,%rsi
4984(3): mov %rax,%rdi
4987(5): call 0xffffcc69(%rip)
498c(4): cmp $0x9,%r12
4990(6): jnbe 0x340(%rip)
4996(7): lea 0x20a7(%rip),%rdx
499d(4): movsxd 0x0(%rdx,%r12,4),%rax
49a1(3): add %rdx,%rax
49a4(2): jmp %rax
49a6(a): nop 0x0(%rax,%rax,1)
49b0(4): mov 0x38(%rbx),%r9
49b4(4): mov 0x10(%rbx),%rax
49b8(7): lea 0x1f99(%rip),%rsi
49bf(4): mov 0x8(%rbx),%r8
49c3(5): mov $0x5,%edx
49c8(2): xor %edi,%edi
49ca(4): mov 0x30(%rbx),%r13
49ce(4): mov 0x28(%rbx),%r12
49d2(5): mov %r9,0x10(%rsp)
49d7(4): mov 0x20(%rbx),%r15
49db(4): mov 0x18(%rbx),%r14
49df(4): mov %rax,(%rsp)
49e3(5): mov %r8,0x8(%rsp)
49e8(3): mov (%rbx),%rbx
49eb(5): call 0xffffcb45(%rip)
49f0(4): sub $0x8,%rsp
49f4(5): mov 0x18(%rsp),%r9
49f9(3): mov %rax,%rdx
49fc(3): mov %rbx,%rcx
49ff(5): mov $0x1,%esi
4a04(3): mov %rbp,%rdi
4a07(2): xor %eax,%eax
4a09(2): push %r9
4a0b(2): push %r13
4a0d(2): push %r12
4a0f(2): push %r15
4a11(2): push %r14
4a13(5): mov 0x30(%rsp),%r9
4a18(5): mov 0x38(%rsp),%r8
4a1d(5): call 0xffffcd23(%rip)
4a22(4): add $0x30,%rsp
4a26(4): add $0x28,%rsp
4a2a(1): pop %rbx
4a2b(1): pop %rbp
4a2c(2): pop %r12
4a2e(2): pop %r13
4a30(2): pop %r14
4a32(2): pop %r15
4a34(1): ret near (%rsp)
4a35(3): nop (%rax)
4a38(3): mov %rcx,%r8
4a3b(3): mov %rdx,%rcx
4a3e(7): lea 0x1d0f(%rip),%rdx
4a45(5): mov $0x1,%esi
4a4a(2): xor %eax,%eax
4a4c(5): call 0xffffccf4(%rip)
4a51(5): jmp 0xfffffeeb(%rip)
4a56(a): nop 0x0(%rax,%rax,1)
4a60(4): mov 0x40(%rbx),%r10
4a64(4): mov 0x38(%rbx),%r9
4a68(7): lea 0x1f19(%rip),%rsi
4a6f(4): mov 0x10(%rbx),%rax
4a73(4): mov 0x8(%rbx),%r8
4a77(5): mov $0x5,%edx
4a7c(4): mov 0x30(%rbx),%r13
4a80(4): mov 0x28(%rbx),%r12
4a84(4): mov 0x20(%rbx),%r15
4a88(4): mov 0x18(%rbx),%r14
4a8c(3): mov (%rbx),%rbx
4a8f(5): mov %r10,0x18(%rsp)
4a94(5): mov %r9,0x10(%rsp)
4a99(4): mov %rax,(%rsp)
4a9d(5): mov %r8,0x8(%rsp)
4aa2(2): xor %edi,%edi
4aa4(5): call 0xffffca8c(%rip)
4aa9(5): mov 0x18(%rsp),%r10
4aae(2): push %r10
4ab0(5): jmp 0xffffff44(%rip)
4ab5(3): nop (%rax)
4ab8(3): mov (%rbx),%rbx
4abb(7): lea 0x1c9d(%rip),%rsi
4ac2(5): mov $0x5,%edx
4ac7(2): xor %edi,%edi
4ac9(5): call 0xffffca67(%rip)
4ace(4): add $0x28,%rsp
4ad2(3): mov %rbx,%rcx
4ad5(3): mov %rbp,%rdi
4ad8(1): pop %rbx
4ad9(1): pop %rbp
4ada(2): pop %r12
4adc(2): pop %r13
4ade(2): pop %r14
4ae0(2): pop %r15
4ae2(3): mov %rax,%rdx
4ae5(5): mov $0x1,%esi
4aea(2): xor %eax,%eax
4aec(5): jmp 0xffffcc54(%rip)
4af1(7): nop 0x0(%rax)
4af8(4): mov 0x8(%rbx),%r12
4afc(7): lea 0x1c6c(%rip),%rsi
4b03(3): mov (%rbx),%rbx
4b06(5): mov $0x5,%edx
4b0b(2): xor %edi,%edi
4b0d(5): call 0xffffca23(%rip)
4b12(4): add $0x28,%rsp
4b16(3): mov %r12,%r8
4b19(3): mov %rbx,%rcx
4b1c(3): mov %rbp,%rdi
4b1f(3): mov %rax,%rdx
4b22(5): mov $0x1,%esi
4b27(1): pop %rbx
4b28(1): pop %rbp
4b29(2): pop %r12
4b2b(2): pop %r13
4b2d(2): pop %r14
4b2f(2): pop %r15
4b31(2): xor %eax,%eax
4b33(5): jmp 0xffffcc0d(%rip)
4b38(8): nop 0x0(%rax,%rax,1)
4b40(4): mov 0x10(%rbx),%r13
4b44(4): mov 0x8(%rbx),%r12
4b48(7): lea 0x1c37(%rip),%rsi
4b4f(3): mov (%rbx),%rbx
4b52(5): mov $0x5,%edx
4b57(2): xor %edi,%edi
4b59(5): call 0xffffc9d7(%rip)
4b5e(4): add $0x28,%rsp
4b62(3): mov %r13,%r9
4b65(3): mov %r12,%r8
4b68(3): mov %rbx,%rcx
4b6b(3): mov %rbp,%rdi
4b6e(3): mov %rax,%rdx
4b71(1): pop %rbx
4b72(1): pop %rbp
4b73(2): pop %r12
4b75(2): pop %r13
4b77(2): pop %r14
4b79(2): pop %r15
4b7b(5): mov $0x1,%esi
4b80(2): xor %eax,%eax
4b82(5): jmp 0xffffcbbe(%rip)
4b87(9): nop 0x0(%rax,%rax,1)
4b90(7): lea 0x1d21(%rip),%rsi
4b97(5): mov $0x5,%edx
4b9c(2): xor %edi,%edi
4b9e(4): mov 0x18(%rbx),%r14
4ba2(4): mov 0x10(%rbx),%r13
4ba6(4): mov 0x8(%rbx),%r12
4baa(3): mov (%rbx),%rbx
4bad(5): call 0xffffc983(%rip)
4bb2(4): sub $0x8,%rsp
4bb6(2): push %r14
4bb8(3): mov %rax,%rdx
4bbb(3): mov %r13,%r9
4bbe(3): mov %r12,%r8
4bc1(3): mov %rbx,%rcx
4bc4(3): mov %rbp,%rdi
4bc7(5): mov $0x1,%esi
4bcc(2): xor %eax,%eax
4bce(5): call 0xffffcb72(%rip)
4bd3(1): pop %rax
4bd4(1): pop %rdx
4bd5(4): add $0x28,%rsp
4bd9(1): pop %rbx
4bda(1): pop %rbp
4bdb(2): pop %r12
4bdd(2): pop %r13
4bdf(2): pop %r14
4be1(2): pop %r15
4be3(1): ret near (%rsp)
4be4(4): nop 0x0(%rax)
4be8(4): mov 0x20(%rbx),%r15
4bec(7): lea 0x1ce5(%rip),%rsi
4bf3(5): mov $0x5,%edx
4bf8(2): xor %edi,%edi
4bfa(4): mov 0x18(%rbx),%r14
4bfe(4): mov 0x10(%rbx),%r13
4c02(4): mov 0x8(%rbx),%r12
4c06(3): mov (%rbx),%rbx
4c09(5): call 0xffffc927(%rip)
4c0e(2): push %r15
4c10(2): jmp 0xffffffa6(%rip)
4c12(6): nop 0x0(%rax,%rax,1)
4c18(4): mov 0x8(%rbx),%r8
4c1c(4): mov 0x28(%rbx),%r12
4c20(7): lea 0x1cd9(%rip),%rsi
4c27(4): mov 0x20(%rbx),%r15
4c2b(4): mov 0x18(%rbx),%r14
4c2f(5): mov $0x5,%edx
4c34(4): mov 0x10(%rbx),%r13
4c38(2): xor %edi,%edi
4c3a(3): mov (%rbx),%rbx
4c3d(4): mov %r8,(%rsp)
4c41(5): call 0xffffc8ef(%rip)
4c46(4): sub $0x8,%rsp
4c4a(3): mov %r13,%r9
4c4d(2): push %r12
4c4f(2): push %r15
4c51(2): push %r14
4c53(5): mov 0x20(%rsp),%r8
4c58(3): mov %rbx,%rcx
4c5b(3): mov %rax,%rdx
4c5e(3): mov %rbp,%rdi
4c61(5): mov $0x1,%esi
4c66(2): xor %eax,%eax
4c68(5): call 0xffffcad8(%rip)
4c6d(4): add $0x20,%rsp
4c71(4): add $0x28,%rsp
4c75(1): pop %rbx
4c76(1): pop %rbp
4c77(2): pop %r12
4c79(2): pop %r13
4c7b(2): pop %r14
4c7d(2): pop %r15
4c7f(1): ret near (%rsp)
4c80(4): mov 0x10(%rbx),%r9
4c84(4): mov 0x30(%rbx),%r13
4c88(7): lea 0x1c99(%rip),%rsi
4c8f(4): mov 0x28(%rbx),%r12
4c93(4): mov 0x20(%rbx),%r15
4c97(5): mov $0x5,%edx
4c9c(4): mov 0x18(%rbx),%r14
4ca0(4): mov 0x8(%rbx),%r8
4ca4(2): xor %edi,%edi
4ca6(5): mov %r9,0x8(%rsp)
4cab(3): mov (%rbx),%rbx
4cae(4): mov %r8,(%rsp)
4cb2(5): call 0xffffc87e(%rip)
4cb7(2): push %r13
4cb9(2): push %r12
4cbb(2): push %r15
4cbd(2): push %r14
4cbf(5): mov 0x28(%rsp),%r9
4cc4(2): jmp 0xffffff8f(%rip)
4cc6(a): nop 0x0(%rax,%rax,1)
4cd0(4): mov 0x40(%rbx),%r10
4cd4(4): mov 0x38(%rbx),%r9
4cd8(5): mov $0x5,%edx
4cdd(4): mov 0x10(%rbx),%rax
4ce1(4): mov 0x8(%rbx),%r8
4ce5(7): lea 0x1cd4(%rip),%rsi
4cec(4): mov 0x30(%rbx),%r13
4cf0(4): mov 0x28(%rbx),%r12
4cf4(4): mov 0x20(%rbx),%r15
4cf8(4): mov 0x18(%rbx),%r14
4cfc(5): mov %r10,0x18(%rsp)
4d01(5): mov %r9,0x10(%rsp)
4d06(4): mov %rax,(%rsp)
4d0a(5): mov %r8,0x8(%rsp)
4d0f(3): mov (%rbx),%rbx
4d12(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4d20(3): xor %r9d,%r9d
4d23(4): cmp $0x0,(%r8)
4d27(2): jz 0x14(%rip)
4d29(7): nop 0x0(%rax)
4d30(4): add $0x1,%r9
4d34(5): cmp $0x0,0x0(%r8,%r9,8)
4d39(2): jnz 0xfffffff7(%rip)
4d3b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4d40(4): sub $0x68,%rsp
4d44(3): mov %r8,%r10
4d47(3): xor %r9d,%r9d
4d4a(9): mov $0x28,%rax
4d53(5): mov %rax,0x58(%rsp)
4d58(2): xor %eax,%eax
4d5a(3): mov %rsp,%r8
4d5d(3): nop (%rax)
4d60(3): mov (%r10),%eax
4d63(3): cmp $0x2f,%eax
4d66(2): jnbe 0x44(%rip)
4d68(3): mov %eax,%r11d
4d6b(4): add 0x10(%r10),%r11
4d6f(3): add $0x8,%eax
4d72(3): mov %eax,(%r10)
4d75(3): mov (%r11),%rax
4d78(3): test %rax,%rax
4d7b(4): mov %rax,0x0(%r8,%r9,8)
4d7f(2): jz 0xc(%rip)
4d81(4): add $0x1,%r9
4d85(4): cmp $0xa,%r9
4d89(2): jnz 0xffffffd7(%rip)
4d8b(5): call 0xfffffb75(%rip)
4d90(5): mov 0x58(%rsp),%rax
4d95(9): xor $0x28,%rax
4d9e(2): jnz 0x7(%rip)
4da0(4): add $0x68,%rsp
4da4(1): ret near (%rsp)
4da5(5): call 0xffffc7bb(%rip)
4daa(4): mov 0x8(%r10),%r11
4dae(4): lea 0x8(%r11),%rax
4db2(4): mov %rax,0x8(%r10)
4db6(2): jmp 0xffffffbf(%rip)

"version_etc" :
4dc0(1): push %rbp
4dc1(1): push %rbx
4dc2(6): mov $0x20,%r10d
4dc8(3): xor %r11d,%r11d
4dcb(7): sub $0xb8,%rsp
4dd2(9): mov $0x28,%rax
4ddb(5): mov %rax,0x78(%rsp)
4de0(2): xor %eax,%eax
4de2(8): lea 0xd0(%rsp),%rax
4dea(8): mov %r8,0xa0(%rsp)
4df2(8): lea 0xd0(%rsp),%rbx
4dfa(5): lea 0x20(%rsp),%r8
4dff(8): mov %r9,0xa8(%rsp)
4e07(8): mov $0x20,0x8(%rsp)
4e0f(5): mov %rax,0x10(%rsp)
4e14(8): lea 0x80(%rsp),%rax
4e1c(3): xor %r9d,%r9d
4e1f(5): mov %rax,0x18(%rsp)
4e24(3): mov %rax,%rbp
4e27(9): nop 0x0(%rax,%rax,1)
4e30(4): cmp $0x2f,%r10d
4e34(2): jnbe 0x58(%rip)
4e36(3): mov %r10d,%eax
4e39(6): mov $0x1,%r11d
4e3f(4): add $0x8,%r10d
4e43(3): add %rbp,%rax
4e46(3): mov (%rax),%rax
4e49(3): test %rax,%rax
4e4c(4): mov %rax,0x0(%r8,%r9,8)
4e50(2): jz 0xc(%rip)
4e52(4): add $0x1,%r9
4e56(4): cmp $0xa,%r9
4e5a(2): jnz 0xffffffd6(%rip)
4e5c(3): test %r11b,%r11b
4e5f(2): jnz 0x26(%rip)
4e61(5): call 0xfffffa9f(%rip)
4e66(5): mov 0x78(%rsp),%rax
4e6b(9): xor $0x28,%rax
4e74(2): jnz 0xc(%rip)
4e76(7): add $0xb8,%rsp
4e7d(1): pop %rbx
4e7e(1): pop %rbp
4e7f(1): ret near (%rsp)
4e80(5): call 0xffffc6e0(%rip)
4e85(5): mov %r10d,0x8(%rsp)
4e8a(2): jmp 0xffffffd7(%rip)
4e8c(3): mov %rbx,%rax
4e8f(4): add $0x8,%rbx
4e93(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4ea0(1): push %rbx
4ea1(7): lea 0x18fa(%rip),%rsi
4ea8(5): mov $0x5,%edx
4ead(2): xor %edi,%edi
4eaf(5): call 0xffffc681(%rip)
4eb4(7): lea 0x18fc(%rip),%rdx
4ebb(3): mov %rax,%rsi
4ebe(5): mov $0x1,%edi
4ec3(2): xor %eax,%eax
4ec5(5): call 0xffffc80b(%rip)
4eca(7): lea 0x18fc(%rip),%rsi
4ed1(5): mov $0x5,%edx
4ed6(2): xor %edi,%edi
4ed8(5): call 0xffffc658(%rip)
4edd(7): lea 0x10b4(%rip),%rcx
4ee4(7): lea 0x120c(%rip),%rdx
4eeb(3): mov %rax,%rsi
4eee(5): mov $0x1,%edi
4ef3(2): xor %eax,%eax
4ef5(5): call 0xffffc7db(%rip)
4efa(7): mov 0x2041a7(%rip),%rbx
4f01(7): lea 0x1af8(%rip),%rsi
4f08(2): xor %edi,%edi
4f0a(5): mov $0x5,%edx
4f0f(5): call 0xffffc621(%rip)
4f14(3): mov %rbx,%rsi
4f17(3): mov %rax,%rdi
4f1a(1): pop %rbx
4f1b(5): jmp 0xffffc6d5(%rip)

"xmalloc" :
4f20(1): push %rbx
4f21(3): mov %rdi,%rbx
4f24(5): call 0xffffc71c(%rip)
4f29(3): test %rax,%rax
4f2c(2): jnz 0x7(%rip)
4f2e(3): test %rbx,%rbx
4f31(2): jnz 0x4(%rip)
4f33(1): pop %rbx
4f34(1): ret near (%rsp)
4f35(5): call 0x23b(%rip)

"xnmalloc" :
4f40(3): mov %rdi,%rax
4f43(3): mul %rax,%rsi,%rdx
4f46(3): mov %rax,%rdi
4f49(3): seto %al
4f4c(3): test %rdi,%rdi
4f4f(2): js 0xc(%rip)
4f51(3): movzx %al,%eax
4f54(3): test %rax,%rax
4f57(2): jnz 0x4(%rip)
4f59(2): jmp 0xffffffc7(%rip)
4f5b(4): sub $0x8,%rsp
4f5f(5): call 0x211(%rip)

"xrealloc" :
4f80(3): test %rsi,%rsi
4f83(1): push %rbx
4f84(3): mov %rsi,%rbx
4f87(2): jnz 0x7(%rip)
4f89(3): test %rdi,%rdi
4f8c(2): jnz 0x1c(%rip)
4f8e(3): mov %rbx,%rsi
4f91(5): call 0xffffc70f(%rip)
4f96(3): test %rax,%rax
4f99(2): jnz 0x7(%rip)
4f9b(3): test %rbx,%rbx
4f9e(2): jnz 0x13(%rip)
4fa0(1): pop %rbx
4fa1(1): ret near (%rsp)
4fa2(6): nop 0x0(%rax,%rax,1)
4fa8(5): call 0xffffc4e8(%rip)
4fad(2): xor %eax,%eax
4faf(1): pop %rbx
4fb0(1): ret near (%rsp)
4fb1(5): call 0x1bf(%rip)

"xnrealloc" :
4fc0(3): mov %rsi,%rax
4fc3(3): mul %rax,%rdx,%rdx
4fc6(3): mov %rax,%rsi
4fc9(3): seto %al
4fcc(3): test %rsi,%rsi
4fcf(2): js 0xc(%rip)
4fd1(3): movzx %al,%eax
4fd4(3): test %rax,%rax
4fd7(2): jnz 0x4(%rip)
4fd9(2): jmp 0xffffffa7(%rip)
4fdb(4): sub $0x8,%rsp
4fdf(5): call 0x191(%rip)

"x2nrealloc" :
4ff0(3): test %rdi,%rdi
4ff3(3): mov %rdx,%r9
4ff6(3): mov (%rsi),%rcx
4ff9(2): jz 0x37(%rip)
4ffb(2): xor %edx,%edx
4ffd(a): mov $0x6148914691236517204,%rax
5007(3): div %r9,%rax
500a(3): cmp %rcx,%rax
500d(2): jbe 0x3e(%rip)
500f(3): mov %rcx,%rax
5012(3): shr $0x1,%rax
5015(5): lea 0x1(%rax,%rcx,1),%rcx
501a(3): mov %rcx,(%rsi)
501d(4): imul %r9,%rcx
5021(3): mov %rcx,%rsi
5024(5): jmp 0xffffff5c(%rip)
5029(7): nop 0x0(%rax)
5030(3): test %rcx,%rcx
5033(2): jz 0x25(%rip)
5035(3): mov %rcx,%rax
5038(3): mul %rax,%r9,%rdx
503b(3): seto %dl
503e(3): test %rax,%rax
5041(3): movzx %dl,%edx
5044(2): js 0x7(%rip)
5046(3): test %rdx,%rdx
5049(2): jz 0xffffffd1(%rip)
504b(4): sub $0x8,%rsp
504f(5): call 0x121(%rip)
5054(4): nop 0x0(%rax)
5058(2): xor %edx,%edx
505a(5): mov $0x80,%eax
505f(3): xor %r8d,%r8d
5062(3): div %r9,%rax
5065(3): test %rax,%rax
5068(4): setz %r8b
506c(4): lea 0x0(%r8,%rax,1),%rcx
5070(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5080(3): test %rdi,%rdi
5083(3): mov (%rsi),%rax
5086(2): jz 0x2a(%rip)
5088(a): mov $0x6148914691236517203,%rdx
5092(3): cmp %rdx,%rax
5095(2): jnbe 0x2c(%rip)
5097(3): mov %rax,%rdx
509a(3): shr $0x1,%rdx
509d(5): lea 0x1(%rdx,%rax,1),%rax
50a2(3): mov %rax,(%rsi)
50a5(3): mov %rax,%rsi
50a8(5): jmp 0xfffffed8(%rip)
50ad(3): nop (%rax)
50b0(3): test %rax,%rax
50b3(5): mov $0x80,%edx
50b8(4): cmove %rdx,%rax
50bc(3): test %rax,%rax
50bf(2): jns 0xffffffe3(%rip)
50c1(4): sub $0x8,%rsp
50c5(5): call 0xab(%rip)

"xzalloc" :
50d0(1): push %rbx
50d1(3): mov %rdi,%rbx
50d4(5): call 0xfffffe4c(%rip)
50d9(3): mov %rbx,%rdx
50dc(2): xor %esi,%esi
50de(3): mov %rax,%rdi
50e1(1): pop %rbx
50e2(5): jmp 0xffffc4ce(%rip)

"xcalloc" :
50f0(3): mov %rdi,%rax
50f3(4): sub $0x8,%rsp
50f7(3): mul %rax,%rsi,%rdx
50fa(3): seto %dl
50fd(3): test %rax,%rax
5100(2): js 0x19(%rip)
5102(3): movzx %dl,%edx
5105(3): test %rdx,%rdx
5108(2): jnz 0x11(%rip)
510a(5): call 0xffffc4f6(%rip)
510f(3): test %rax,%rax
5112(2): jz 0x7(%rip)
5114(4): add $0x8,%rsp
5118(1): ret near (%rsp)
5119(5): call 0x57(%rip)

"xmemdup" :
5120(1): push %rbp
5121(1): push %rbx
5122(3): mov %rdi,%rbp
5125(3): mov %rsi,%rdi
5128(3): mov %rsi,%rbx
512b(4): sub $0x8,%rsp
512f(5): call 0xfffffdf1(%rip)
5134(4): add $0x8,%rsp
5138(3): mov %rbx,%rdx
513b(3): mov %rbp,%rsi
513e(1): pop %rbx
513f(1): pop %rbp
5140(3): mov %rax,%rdi
5143(5): jmp 0xffffc4dd(%rip)

"xstrdup" :
5150(1): push %rbx
5151(3): mov %rdi,%rbx
5154(5): call 0xffffc3fc(%rip)
5159(3): mov %rbx,%rdi
515c(4): lea 0x1(%rax),%rsi
5160(1): pop %rbx
5161(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5170(7): lea 0x1938(%rip),%rsi
5177(4): sub $0x8,%rsp
517b(5): mov $0x5,%edx
5180(2): xor %edi,%edi
5182(5): call 0xffffc3ae(%rip)
5187(6): mov 0x203e9b(%rip),%edi
518d(7): lea 0x107b(%rip),%rdx
5194(3): mov %rax,%rcx
5197(2): xor %esi,%esi
5199(2): xor %eax,%eax
519b(5): call 0xffffc545(%rip)
51a0(5): call 0xffffc300(%rip)

"collate_error" :
51b0(2): push %r14
51b2(2): push %r13
51b4(3): mov %edi,%r14d
51b7(2): push %r12
51b9(1): push %rbp
51ba(3): mov %rdx,%r12
51bd(1): push %rbx
51be(3): mov %rsi,%rbx
51c1(7): lea 0x18f8(%rip),%rsi
51c8(5): mov $0x5,%edx
51cd(2): xor %edi,%edi
51cf(3): mov %r8,%r13
51d2(3): mov %rcx,%rbp
51d5(5): call 0xffffc35b(%rip)
51da(3): mov %r14d,%esi
51dd(3): mov %rax,%rdx
51e0(2): xor %edi,%edi
51e2(2): xor %eax,%eax
51e4(5): call 0xffffc4fc(%rip)
51e9(7): lea 0x18f0(%rip),%rsi
51f0(5): mov $0x5,%edx
51f5(2): xor %edi,%edi
51f7(5): call 0xffffc339(%rip)
51fc(2): xor %esi,%esi
51fe(3): mov %rax,%rdx
5201(2): xor %edi,%edi
5203(2): xor %eax,%eax
5205(5): call 0xffffc4db(%rip)
520a(3): mov %r13,%rcx
520d(3): mov %rbp,%rdx
5210(5): mov $0x8,%esi
5215(5): mov $0x1,%edi
521a(5): call 0xfffff356(%rip)
521f(3): mov %r12,%rcx
5222(3): mov %rbx,%rdx
5225(5): mov $0x8,%esi
522a(2): xor %edi,%edi
522c(3): mov %rax,%rbp
522f(5): call 0xfffff341(%rip)
5234(7): lea 0x18d5(%rip),%rsi
523b(3): mov %rax,%rbx
523e(5): mov $0x5,%edx
5243(2): xor %edi,%edi
5245(5): call 0xffffc2eb(%rip)
524a(3): mov %rbp,%r8
524d(3): mov %rbx,%rcx
5250(6): mov 0x203dd2(%rip),%edi
5256(1): pop %rbx
5257(1): pop %rbp
5258(2): pop %r12
525a(2): pop %r13
525c(2): pop %r14
525e(3): mov %rax,%rdx
5261(2): xor %esi,%esi
5263(2): xor %eax,%eax
5265(5): jmp 0xffffc47b(%rip)

"xmemcoll" :
5270(2): push %r14
5272(2): push %r13
5274(3): mov %rcx,%r13
5277(2): push %r12
5279(1): push %rbp
527a(3): mov %rdx,%r12
527d(1): push %rbx
527e(3): mov %rsi,%rbp
5281(3): mov %rdi,%rbx
5284(5): call 0x63c(%rip)
5289(3): mov %eax,%r14d
528c(5): call 0xffffc224(%rip)
5291(2): mov (%rax),%edi
5293(2): test %edi,%edi
5295(2): jz 0x13(%rip)
5297(3): mov %r13,%r8
529a(3): mov %r12,%rcx
529d(3): mov %rbp,%rdx
52a0(3): mov %rbx,%rsi
52a3(5): call 0xffffff0d(%rip)
52a8(1): pop %rbx
52a9(3): mov %r14d,%eax
52ac(1): pop %rbp
52ad(2): pop %r12
52af(2): pop %r13
52b1(2): pop %r14
52b3(1): ret near (%rsp)

"xmemcoll0" :
52c0(2): push %r14
52c2(2): push %r13
52c4(3): mov %rcx,%r14
52c7(2): push %r12
52c9(1): push %rbp
52ca(3): mov %rdx,%r12
52cd(1): push %rbx
52ce(3): mov %rdi,%rbp
52d1(3): mov %rsi,%rbx
52d4(5): call 0x69c(%rip)
52d9(3): mov %eax,%r13d
52dc(5): call 0xffffc1d4(%rip)
52e1(2): mov (%rax),%edi
52e3(2): test %edi,%edi
52e5(2): jz 0x15(%rip)
52e7(4): lea 0xffffffff(%rbx),%rdx
52eb(4): lea 0xffffffff(%r14),%r8
52ef(3): mov %r12,%rcx
52f2(3): mov %rbp,%rsi
52f5(5): call 0xfffffebb(%rip)
52fa(1): pop %rbx
52fb(3): mov %r13d,%eax
52fe(1): pop %rbp
52ff(2): pop %r12
5301(2): pop %r13
5303(2): pop %r14
5305(1): ret near (%rsp)

"rpl_fclose" :
5310(2): push %r12
5312(1): push %rbp
5313(1): push %rbx
5314(3): mov %rdi,%rbx
5317(5): call 0xffffc319(%rip)
531c(2): test %eax,%eax
531e(3): mov %rbx,%rdi
5321(2): js 0x56(%rip)
5323(5): call 0xffffc35d(%rip)
5328(2): test %eax,%eax
532a(2): jnz 0x2e(%rip)
532c(3): mov %rbx,%rdi
532f(5): call 0x2e1(%rip)
5334(2): test %eax,%eax
5336(2): jz 0x3e(%rip)
5338(5): call 0xffffc178(%rip)
533d(3): mov (%rax),%r12d
5340(3): mov %rbx,%rdi
5343(3): mov %rax,%rbp
5346(5): call 0xffffc1ca(%rip)
534b(3): test %r12d,%r12d
534e(2): jnz 0x32(%rip)
5350(1): pop %rbx
5351(1): pop %rbp
5352(2): pop %r12
5354(1): ret near (%rsp)
5355(3): nop (%rax)
5358(3): mov %rbx,%rdi
535b(5): call 0xffffc2d5(%rip)
5360(2): xor %esi,%esi
5362(5): mov $0x1,%edx
5367(2): mov %eax,%edi
5369(5): call 0xffffc237(%rip)
536e(4): cmp $0xffffffff,%rax
5372(2): jnz 0xffffffba(%rip)
5374(3): mov %rbx,%rdi
5377(1): pop %rbx
5378(1): pop %rbp
5379(2): pop %r12
537b(5): jmp 0xffffc195(%rip)
5380(4): mov %r12d,0x0(%rbp)
5384(5): mov $0xffffffff,%eax
5389(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
5390(2): push %r12
5392(1): push %rbp
5393(2): mov %edi,%ebp
5395(1): push %rbx
5396(4): sub $0x50,%rsp
539a(9): mov $0x28,%rax
53a3(5): mov %rax,0x18(%rsp)
53a8(2): xor %eax,%eax
53aa(5): lea 0x70(%rsp),%rax
53af(2): test %esi,%esi
53b1(5): mov %rdx,0x30(%rsp)
53b6(5): mov %rcx,0x38(%rsp)
53bb(5): mov %r8,0x40(%rsp)
53c0(5): mov %rax,0x8(%rsp)
53c5(5): lea 0x20(%rsp),%rax
53ca(5): mov %r9,0x48(%rsp)
53cf(7): mov $0x10,(%rsp)
53d6(5): mov %rax,0x10(%rsp)
53db(6): jz 0x207(%rip)
53e1(6): cmp $0x406,%esi
53e7(2): jnz 0x49(%rip)
53e9(5): mov 0x10(%rsp),%rax
53ee(7): cmp $0x0,0x203e63(%rip)
53f5(7): mov $0x18,(%rsp)
53fc(4): mov 0x10(%rax),%r12d
5400(3): mov %r12d,%edx
5403(6): js 0x130(%rip)
5409(2): xor %eax,%eax
540b(5): mov $0x406,%esi
5410(5): call 0xffffc0e0(%rip)
5415(2): test %eax,%eax
5417(2): mov %eax,%ebx
5419(6): js 0x18f(%rip)
541f(a): mov $0x1,0x203e2f(%rip)
5429(2): jmp 0x47(%rip)
542b(5): nop 0x0(%rax,%rax,1)
5430(3): cmp $0xb,%esi
5433(2): jz 0x2d(%rip)
5435(2): jnle 0x5b(%rip)
5437(3): cmp $0x4,%esi
543a(6): jz 0xd6(%rip)
5440(6): jnle 0xc0(%rip)
5446(3): cmp $0x2,%esi
5449(6): jz 0xc7(%rip)
544f(2): jnle 0x11(%rip)
5451(3): cmp $0x1,%esi
5454(2): jnz 0x64(%rip)
5456(a): nop 0x0(%rax,%rax,1)
5460(2): mov %ebp,%edi
5462(2): xor %eax,%eax
5464(5): call 0xffffc08c(%rip)
5469(2): mov %eax,%ebx
546b(5): nop 0x0(%rax,%rax,1)
5470(5): mov 0x18(%rsp),%rcx
5475(9): xor $0x28,%rcx
547e(2): mov %ebx,%eax
5480(6): jnz 0x15d(%rip)
5486(4): add $0x50,%rsp
548a(1): pop %rbx
548b(1): pop %rbp
548c(2): pop %r12
548e(1): ret near (%rsp)
548f(1): nop 
5490(6): cmp $0x407,%esi
5496(2): jnle 0x4a(%rip)
5498(6): cmp $0x406,%esi
549e(2): jnl 0x72(%rip)
54a0(6): cmp $0x401,%esi
54a6(2): jz 0xffffffba(%rip)
54a8(6): cmp $0x402,%esi
54ae(2): jz 0x62(%rip)
54b0(6): cmp $0x400,%esi
54b6(2): jz 0x5a(%rip)
54b8(3): mov (%rsp),%eax
54bb(3): cmp $0x2f,%eax
54be(6): jnbe 0x13c(%rip)
54c4(5): add 0x10(%rsp),%rax
54c9(3): mov (%rax),%rdx
54cc(2): mov %ebp,%edi
54ce(2): xor %eax,%eax
54d0(5): call 0xffffc020(%rip)
54d5(2): mov %eax,%ebx
54d7(2): jmp 0xffffff99(%rip)
54d9(7): nop 0x0(%rax)
54e0(6): cmp $0x409,%esi
54e6(2): jz 0x2a(%rip)
54e8(6): jl 0xffffff78(%rip)
54ee(6): cmp $0x40a,%esi
54f4(2): jnz 0xffffffc4(%rip)
54f6(5): jmp 0xffffff6a(%rip)
54fb(5): nop 0x0(%rax,%rax,1)
5500(3): cmp $0x9,%esi
5503(6): jz 0xffffff5d(%rip)
5509(2): jnle 0x7(%rip)
550b(3): cmp $0x8,%esi
550e(2): jnz 0xffffffaa(%rip)
5510(3): mov (%rsp),%eax
5513(3): cmp $0x2f,%eax
5516(6): jnbe 0xee(%rip)
551c(5): add 0x10(%rsp),%rax
5521(2): mov (%rax),%edx
5523(2): mov %ebp,%edi
5525(2): xor %eax,%eax
5527(5): call 0xffffbfc9(%rip)
552c(2): mov %eax,%ebx
552e(5): jmp 0xffffff42(%rip)
5533(2): xor %esi,%esi
5535(2): xor %eax,%eax
5537(5): call 0xffffbfb9(%rip)
553c(2): test %eax,%eax
553e(2): mov %eax,%ebx
5540(6): js 0xffffff30(%rip)
5546(7): cmp $0xff,0x203d0b(%rip)
554d(6): jnz 0xffffff23(%rip)
5553(2): xor %eax,%eax
5555(5): mov $0x1,%esi
555a(2): mov %ebx,%edi
555c(5): call 0xffffbf94(%rip)
5561(2): test %eax,%eax
5563(2): js 0x1e(%rip)
5565(3): or $0x1,%eax
5568(5): mov $0x2,%esi
556d(2): mov %ebx,%edi
556f(2): mov %eax,%edx
5571(2): xor %eax,%eax
5573(5): call 0xffffbf7d(%rip)
5578(3): cmp $0xff,%eax
557b(6): jnz 0xfffffef5(%rip)
5581(5): call 0xffffbf2f(%rip)
5586(3): mov (%rax),%r12d
5589(3): mov %rax,%rbp
558c(2): mov %ebx,%edi
558e(5): call 0xffffc032(%rip)
5593(5): mov $0xffffffff,%ebx
5598(4): mov %r12d,0x0(%rbp)
559c(5): jmp 0xfffffed4(%rip)
55a1(7): nop 0x0(%rax)
55a8(5): call 0xffffbf08(%rip)
55ad(3): cmp $0x16,(%rax)
55b0(6): jnz 0xfffffe6f(%rip)
55b6(2): xor %esi,%esi
55b8(2): xor %eax,%eax
55ba(3): mov %r12d,%edx
55bd(2): mov %ebp,%edi
55bf(5): call 0xffffbf31(%rip)
55c4(2): test %eax,%eax
55c6(2): mov %eax,%ebx
55c8(6): js 0xfffffea8(%rip)
55ce(a): mov $0xffffffff,0x203c80(%rip)
55d8(5): jmp 0xffffff7b(%rip)
55dd(5): call 0xffffbf83(%rip)
55e2(5): mov 0x10(%rsp),%rax
55e7(2): xor %esi,%esi
55e9(3): mov 0x10(%rax),%edx
55ec(2): xor %eax,%eax
55ee(5): call 0xffffbf02(%rip)
55f3(2): mov %eax,%ebx
55f5(5): jmp 0xfffffe7b(%rip)
55fa(5): mov 0x8(%rsp),%rax
55ff(5): jmp 0xfffffeca(%rip)
5604(5): mov 0x8(%rsp),%rax
5609(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
5610(3): test %rdi,%rdi
5613(1): push %rbx
5614(3): mov %rdi,%rbx
5617(2): jz 0x13(%rip)
5619(5): call 0xffffc067(%rip)
561e(2): test %eax,%eax
5620(2): jz 0xa(%rip)
5622(6): test $0x100,(%rbx)
5628(2): jnz 0x10(%rip)
562a(3): mov %rbx,%rdi
562d(1): pop %rbx
562e(5): jmp 0xffffc022(%rip)
5633(5): nop 0x0(%rax,%rax,1)
5638(3): mov %rbx,%rdi
563b(5): mov $0x1,%edx
5640(2): xor %esi,%esi
5642(5): call 0xe(%rip)
5647(3): mov %rbx,%rdi
564a(1): pop %rbx
564b(5): jmp 0xffffc005(%rip)

"rpl_fseeko" :
5650(4): mov 0x8(%rdi),%rax
5654(4): cmp %rax,0x10(%rdi)
5658(2): jz 0x8(%rip)
565a(5): jmp 0xffffc096(%rip)
565f(1): nop 
5660(4): mov 0x20(%rdi),%rax
5664(4): cmp %rax,0x28(%rdi)
5668(2): jnz 0xfffffff2(%rip)
566a(5): cmp $0x0,0x48(%rdi)
566f(2): jnz 0xffffffeb(%rip)
5671(2): push %r12
5673(1): push %rbp
5674(3): mov %edx,%r12d
5677(1): push %rbx
5678(3): mov %rsi,%rbp
567b(3): mov %rdi,%rbx
567e(5): call 0xffffbfb2(%rip)
5683(3): mov %r12d,%edx
5686(3): mov %rbp,%rsi
5689(2): mov %eax,%edi
568b(5): call 0xffffbf15(%rip)
5690(4): cmp $0xffffffff,%rax
5694(2): jz 0xe(%rip)
5696(3): and $0xef,(%rbx)
5699(7): mov %rax,0x90(%rbx)
56a0(2): xor %eax,%eax
56a2(1): pop %rbx
56a3(1): pop %rbp
56a4(2): pop %r12
56a6(1): ret near (%rsp)

"rpl_mbrtowc" :
56b0(2): push %r13
56b2(2): push %r12
56b4(3): mov %rsi,%r13
56b7(1): push %rbp
56b8(1): push %rbx
56b9(3): mov %rdi,%rbx
56bc(3): mov %rdx,%r12
56bf(4): sub $0x18,%rsp
56c3(9): mov $0x28,%rax
56cc(5): mov %rax,0x8(%rsp)
56d1(2): xor %eax,%eax
56d3(5): lea 0x4(%rsp),%rax
56d8(3): test %rdi,%rdi
56db(4): cmove %rax,%rbx
56df(3): mov %rbx,%rdi
56e2(5): call 0xffffbe9e(%rip)
56e7(4): cmp $0xfffffffd,%rax
56eb(3): mov %rax,%rbp
56ee(2): jbe 0x22(%rip)
56f0(3): test %r12,%r12
56f3(2): jz 0x1d(%rip)
56f5(2): xor %edi,%edi
56f7(5): call 0xffffd299(%rip)
56fc(2): test %al,%al
56fe(2): jnz 0x12(%rip)
5700(5): movzx 0x0(%r13),%eax
5705(5): mov $0x1,%ebp
570a(2): mov %eax,(%rbx)
570c(4): nop 0x0(%rax)
5710(5): mov 0x8(%rsp),%rdx
5715(9): xor $0x28,%rdx
571e(3): mov %rbp,%rax
5721(2): jnz 0xd(%rip)
5723(4): add $0x18,%rsp
5727(1): pop %rbx
5728(1): pop %rbp
5729(2): pop %r12
572b(2): pop %r13
572d(1): ret near (%rsp)
572e(5): call 0xffffbe32(%rip)

"close_stream" :
5740(2): push %r12
5742(1): push %rbp
5743(3): mov %rdi,%rbp
5746(1): push %rbx
5747(5): call 0xffffbd99(%rip)
574c(3): mov 0x0(%rbp),%ebx
574f(3): mov %rbp,%rdi
5752(3): mov %rax,%r12
5755(5): call 0xfffffbbb(%rip)
575a(3): and $0x20,%ebx
575d(2): test %ebx,%ebx
575f(2): jnz 0x19(%rip)
5761(2): test %eax,%eax
5763(2): jz 0xc(%rip)
5765(3): test %r12,%r12
5768(5): mov $0xffffffff,%eax
576d(2): jz 0x3b(%rip)
576f(1): pop %rbx
5770(1): pop %rbp
5771(2): pop %r12
5773(1): ret near (%rsp)
5774(4): nop 0x0(%rax)
5778(2): test %eax,%eax
577a(2): jnz 0x1e(%rip)
577c(5): call 0xffffbd34(%rip)
5781(6): mov $0x0,(%rax)
5787(5): mov $0xffffffff,%eax
578c(1): pop %rbx
578d(1): pop %rbp
578e(2): pop %r12
5790(1): ret near (%rsp)
5791(7): nop 0x0(%rax)
5798(1): pop %rbx
5799(5): mov $0xffffffff,%eax
579e(1): pop %rbp
579f(2): pop %r12
57a1(1): ret near (%rsp)
57a2(6): nop 0x0(%rax,%rax,1)
57a8(5): call 0xffffbd08(%rip)
57ad(3): cmp $0x9,(%rax)
57b0(1): pop %rbx
57b1(1): pop %rbp
57b2(2): pop %r12
57b4(3): setnz %al
57b7(3): movzx %al,%eax
57ba(2): neg %eax
57bc(1): ret near (%rsp)

"locale_charset" :
57c0(4): sub $0x8,%rsp
57c4(5): mov $0xe,%edi
57c9(5): call 0xffffbe97(%rip)
57ce(3): test %rax,%rax
57d1(2): jz 0x1f(%rip)
57d3(3): cmp $0x0,(%rax)
57d6(7): lea 0x135b(%rip),%rdx
57dd(4): cmove %rdx,%rax
57e1(4): add $0x8,%rsp
57e5(1): ret near (%rsp)
57e6(a): nop 0x0(%rax,%rax,1)
57f0(7): lea 0x1341(%rip),%rax
57f7(4): add $0x8,%rsp
57fb(1): ret near (%rsp)

"strcoll_loop" :
5800(2): push %r15
5802(2): push %r14
5804(3): mov %rcx,%r14
5807(2): push %r13
5809(2): push %r12
580b(3): mov %rsi,%r13
580e(1): push %rbp
580f(1): push %rbx
5810(3): mov %rdi,%r12
5813(3): mov %rdx,%rbp
5816(4): sub $0x8,%rsp
581a(5): call 0xffffbc96(%rip)
581f(3): mov %rax,%r15
5822(2): jmp 0x31(%rip)
5824(4): nop 0x0(%rax)
5828(3): mov %r12,%rdi
582b(5): call 0xffffbd25(%rip)
5830(3): mov %rbp,%rdi
5833(4): lea 0x1(%rax),%rbx
5837(5): call 0xffffbd19(%rip)
583c(4): add $0x1,%rax
5840(3): add %rbx,%r12
5843(3): add %rax,%rbp
5846(3): sub %rax,%r14
5849(3): sub %rbx,%r13
584c(2): jz 0x34(%rip)
584e(3): test %r14,%r14
5851(2): jz 0x4f(%rip)
5853(7): mov $0x0,(%r15)
585a(3): mov %rbp,%rsi
585d(3): mov %r12,%rdi
5860(5): call 0xffffbe10(%rip)
5865(2): test %eax,%eax
5867(2): jz 0xffffffc1(%rip)
5869(4): add $0x8,%rsp
586d(1): pop %rbx
586e(1): pop %rbp
586f(2): pop %r12
5871(2): pop %r13
5873(2): pop %r14
5875(2): pop %r15
5877(1): ret near (%rsp)
5878(8): nop 0x0(%rax,%rax,1)
5880(2): xor %eax,%eax
5882(3): test %r14,%r14
5885(3): setnz %al
5888(4): add $0x8,%rsp
588c(1): pop %rbx
588d(2): neg %eax
588f(1): pop %rbp
5890(2): pop %r12
5892(2): pop %r13
5894(2): pop %r14
5896(2): pop %r15
5898(1): ret near (%rsp)
5899(7): nop 0x0(%rax)
58a0(4): add $0x8,%rsp
58a4(5): mov $0x1,%eax
58a9(1): pop %rbx
58aa(1): pop %rbp
58ab(2): pop %r12
58ad(2): pop %r13
58af(2): pop %r14
58b1(2): pop %r15
58b3(1): ret near (%rsp)

"memcoll" :
58c0(2): push %r15
58c2(2): push %r14
58c4(3): mov %rdx,%r15
58c7(2): push %r13
58c9(2): push %r12
58cb(3): mov %rdi,%r14
58ce(1): push %rbp
58cf(1): push %rbx
58d0(3): mov %rcx,%rbp
58d3(3): mov %rsi,%rbx
58d6(4): sub $0x18,%rsp
58da(3): cmp %rcx,%rsi
58dd(2): jnz 0x15(%rip)
58df(3): mov %rsi,%rdx
58e2(3): mov %r15,%rsi
58e5(5): call 0xffffbcfb(%rip)
58ea(2): test %eax,%eax
58ec(4): mov %eax,0x8(%rsp)
58f0(2): jz 0x68(%rip)
58f2(4): lea 0x0(%r14,%rbx,1),%r13
58f6(4): lea 0x0(%r15,%rbp,1),%r12
58fa(4): lea 0x1(%rbp),%rcx
58fe(4): lea 0x1(%rbx),%rsi
5902(3): mov %r15,%rdx
5905(3): mov %r14,%rdi
5908(5): movzx 0x0(%r13),%r9d
590d(5): movzx (%r12),%r8d
5912(5): mov $0x0,0x0(%r13)
5917(5): mov $0x0,(%r12)
591c(5): mov %r9b,0xf(%rsp)
5921(5): mov %r8b,0x8(%rsp)
5926(5): call 0xfffffeda(%rip)
592b(6): movzx 0xf(%rsp),%r9d
5931(6): movzx 0x8(%rsp),%r8d
5937(2): mov %eax,%edx
5939(4): mov %r9b,0x0(%r13)
593d(4): mov %r8b,(%r12)
5941(4): add $0x18,%rsp
5945(2): mov %edx,%eax
5947(1): pop %rbx
5948(1): pop %rbp
5949(2): pop %r12
594b(2): pop %r13
594d(2): pop %r14
594f(2): pop %r15
5951(1): ret near (%rsp)
5952(6): nop 0x0(%rax,%rax,1)
5958(5): call 0xffffbb58(%rip)
595d(4): mov 0x8(%rsp),%edx
5961(6): mov $0x0,(%rax)
5967(2): jmp 0xffffffda(%rip)

"memcoll0" :
5970(2): push %r12
5972(1): push %rbp
5973(3): mov %rdx,%r12
5976(1): push %rbx
5977(3): mov %rdi,%rbp
597a(3): mov %rsi,%rbx
597d(4): sub $0x10,%rsp
5981(3): cmp %rcx,%rsi
5984(2): jnz 0x1b(%rip)
5986(3): mov %rsi,%rdx
5989(3): mov %r12,%rsi
598c(5): mov %rcx,0x8(%rsp)
5991(5): call 0xffffbc4f(%rip)
5996(2): test %eax,%eax
5998(5): mov 0x8(%rsp),%rcx
599d(2): jz 0x1b(%rip)
599f(4): add $0x10,%rsp
59a3(3): mov %r12,%rdx
59a6(3): mov %rbx,%rsi
59a9(3): mov %rbp,%rdi
59ac(1): pop %rbx
59ad(1): pop %rbp
59ae(2): pop %r12
59b0(5): jmp 0xfffffe50(%rip)
59b5(3): nop (%rax)
59b8(5): call 0xffffbaf8(%rip)
59bd(6): mov $0x0,(%rax)
59c3(4): add $0x10,%rsp
59c7(2): xor %eax,%eax
59c9(1): pop %rbx
59ca(1): pop %rbp
59cb(2): pop %r12
59cd(1): ret near (%rsp)

"__libc_csu_init" :
59d0(2): push %r15
59d2(2): push %r14
59d4(3): mov %rdx,%r15
59d7(2): push %r13
59d9(2): push %r12
59db(7): lea 0x2030ee(%rip),%r12
59e2(1): push %rbp
59e3(7): lea 0x2030ee(%rip),%rbp
59ea(1): push %rbx
59eb(3): mov %edi,%r13d
59ee(3): mov %rsi,%r14
59f1(3): sub %r12,%rbp
59f4(4): sub $0x8,%rsp
59f8(4): sar $0x3,%rbp
59fc(5): call 0xffffba5c(%rip)
5a01(3): test %rbp,%rbp
5a04(2): jz 0x22(%rip)
5a06(2): xor %ebx,%ebx
5a08(8): nop 0x0(%rax,%rax,1)
5a10(3): mov %r15,%rdx
5a13(3): mov %r14,%rsi
5a16(3): mov %r13d,%edi
5a19(4): call 0x0(%r12,%rbx,8)
5a1d(4): add $0x1,%rbx
5a21(3): cmp %rbx,%rbp
5a24(2): jnz 0xffffffec(%rip)
5a26(4): add $0x8,%rsp
5a2a(1): pop %rbx
5a2b(1): pop %rbp
5a2c(2): pop %r12
5a2e(2): pop %r13
5a30(2): pop %r14
5a32(2): pop %r15
5a34(1): ret near (%rsp)

"atexit" :
5a50(7): mov 0x2035b1(%rip),%rdx
5a57(2): xor %esi,%esi
5a59(5): jmp 0xffffbcb7(%rip)

"_fini" :
5a60(4): sub $0x8,%rsp
5a64(4): add $0x8,%rsp
5a68(1): ret near (%rsp)

