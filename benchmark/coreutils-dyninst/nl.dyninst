
"__ctype_toupper_loc@plt" :
18b0(6): jmp 0x21752a(%rip)
18b6(5): push $0x0

"__uflow@plt" :
18c0(6): jmp 0x217522(%rip)
18c6(5): push $0x1

"free@plt" :
18d0(6): jmp 0x21751a(%rip)
18d6(5): push $0x2

"abort@plt" :
18e0(6): jmp 0x217512(%rip)
18e6(5): push $0x3

"__errno_location@plt" :
18f0(6): jmp 0x21750a(%rip)
18f6(5): push $0x4

"strncmp@plt" :
1900(6): jmp 0x217502(%rip)
1906(5): push $0x5

"_exit@plt" :
1910(6): jmp 0x2174fa(%rip)
1916(5): push $0x6

"strcpy@plt" :
1920(6): jmp 0x2174f2(%rip)
1926(5): push $0x7

"__fpending@plt" :
1930(6): jmp 0x2174ea(%rip)
1936(5): push $0x8

"clearerr_unlocked@plt" :
1940(6): jmp 0x2174e2(%rip)
1946(5): push $0x9

"textdomain@plt" :
1950(6): jmp 0x2174da(%rip)
1956(5): push $0xa

"__strtol_internal@plt" :
1960(6): jmp 0x2174d2(%rip)
1966(5): push $0xb

"iswctype@plt" :
1970(6): jmp 0x2174ca(%rip)
1976(5): push $0xc

"fclose@plt" :
1980(6): jmp 0x2174c2(%rip)
1986(5): push $0xd

"bindtextdomain@plt" :
1990(6): jmp 0x2174ba(%rip)
1996(5): push $0xe

"stpcpy@plt" :
19a0(6): jmp 0x2174b2(%rip)
19a6(5): push $0xf

"dcgettext@plt" :
19b0(6): jmp 0x2174aa(%rip)
19b6(5): push $0x10

"__ctype_get_mb_cur_max@plt" :
19c0(6): jmp 0x2174a2(%rip)
19c6(5): push $0x11

"strlen@plt" :
19d0(6): jmp 0x21749a(%rip)
19d6(5): push $0x12

"__stack_chk_fail@plt" :
19e0(6): jmp 0x217492(%rip)
19e6(5): push $0x13

"getopt_long@plt" :
19f0(6): jmp 0x21748a(%rip)
19f6(5): push $0x14

"mbrtowc@plt" :
1a00(6): jmp 0x217482(%rip)
1a06(5): push $0x15

"strchr@plt" :
1a10(6): jmp 0x21747a(%rip)
1a16(5): push $0x16

"__overflow@plt" :
1a20(6): jmp 0x217472(%rip)
1a26(5): push $0x17

"strrchr@plt" :
1a30(6): jmp 0x21746a(%rip)
1a36(5): push $0x18

"lseek@plt" :
1a40(6): jmp 0x217462(%rip)
1a46(5): push $0x19

"__assert_fail@plt" :
1a50(6): jmp 0x21745a(%rip)
1a56(5): push $0x1a

"memset@plt" :
1a60(6): jmp 0x217452(%rip)
1a66(5): push $0x1b

"posix_fadvise@plt" :
1a70(6): jmp 0x21744a(%rip)
1a76(5): push $0x1c

"memcmp@plt" :
1a80(6): jmp 0x217442(%rip)
1a86(5): push $0x1d

"wctype@plt" :
1a90(6): jmp 0x21743a(%rip)
1a96(5): push $0x1e

"fputs_unlocked@plt" :
1aa0(6): jmp 0x217432(%rip)
1aa6(5): push $0x1f

"calloc@plt" :
1ab0(6): jmp 0x21742a(%rip)
1ab6(5): push $0x20

"strcmp@plt" :
1ac0(6): jmp 0x217422(%rip)
1ac6(5): push $0x21

"memcpy@plt" :
1ad0(6): jmp 0x21741a(%rip)
1ad6(5): push $0x22

"fileno@plt" :
1ae0(6): jmp 0x217412(%rip)
1ae6(5): push $0x23

"iswalnum@plt" :
1af0(6): jmp 0x21740a(%rip)
1af6(5): push $0x24

"malloc@plt" :
1b00(6): jmp 0x217402(%rip)
1b06(5): push $0x25

"wcrtomb@plt" :
1b10(6): jmp 0x2173fa(%rip)
1b16(5): push $0x26

"fflush@plt" :
1b20(6): jmp 0x2173f2(%rip)
1b26(5): push $0x27

"nl_langinfo@plt" :
1b30(6): jmp 0x2173ea(%rip)
1b36(5): push $0x28

"__freading@plt" :
1b40(6): jmp 0x2173e2(%rip)
1b46(5): push $0x29

"fwrite_unlocked@plt" :
1b50(6): jmp 0x2173da(%rip)
1b56(5): push $0x2a

"realloc@plt" :
1b60(6): jmp 0x2173d2(%rip)
1b66(5): push $0x2b

"setlocale@plt" :
1b70(6): jmp 0x2173ca(%rip)
1b76(5): push $0x2c

"__printf_chk@plt" :
1b80(6): jmp 0x2173c2(%rip)
1b86(5): push $0x2d

"btowc@plt" :
1b90(6): jmp 0x2173ba(%rip)
1b96(5): push $0x2e

"memmove@plt" :
1ba0(6): jmp 0x2173b2(%rip)
1ba6(5): push $0x2f

"error@plt" :
1bb0(6): jmp 0x2173aa(%rip)
1bb6(5): push $0x30

"fseeko@plt" :
1bc0(6): jmp 0x2173a2(%rip)
1bc6(5): push $0x31

"fopen@plt" :
1bd0(6): jmp 0x21739a(%rip)
1bd6(5): push $0x32

"towlower@plt" :
1be0(6): jmp 0x217392(%rip)
1be6(5): push $0x33

"towupper@plt" :
1bf0(6): jmp 0x21738a(%rip)
1bf6(5): push $0x34

"__cxa_atexit@plt" :
1c00(6): jmp 0x217382(%rip)
1c06(5): push $0x35

"exit@plt" :
1c10(6): jmp 0x21737a(%rip)
1c16(5): push $0x36

"fwrite@plt" :
1c20(6): jmp 0x217372(%rip)
1c26(5): push $0x37

"__fprintf_chk@plt" :
1c30(6): jmp 0x21736a(%rip)
1c36(5): push $0x38

"mbsinit@plt" :
1c40(6): jmp 0x217362(%rip)
1c46(5): push $0x39

"iswprint@plt" :
1c50(6): jmp 0x21735a(%rip)
1c56(5): push $0x3a

"__ctype_tolower_loc@plt" :
1c60(6): jmp 0x217352(%rip)
1c66(5): push $0x3b

"__ctype_b_loc@plt" :
1c70(6): jmp 0x21734a(%rip)
1c76(5): push $0x3c

".plt.got" :
1c80(6): jmp 0x217362(%rip)
1c86(2): nop 

"_init" :
1888(4): sub $0x8,%rsp
188c(7): mov 0x217745(%rip),%rax
1893(3): test %rax,%rax
1896(2): jz 0x4(%rip)
1898(2): call %rax
189a(4): add $0x8,%rsp
189e(1): ret near (%rsp)

"main" :
1c90(2): push %r15
1c92(2): push %r14
1c94(7): lea 0x131b5(%rip),%r15
1c9b(2): push %r13
1c9d(2): push %r12
1c9f(7): lea 0x1280c(%rip),%r14
1ca6(1): push %rbp
1ca7(1): push %rbx
1ca8(2): mov %edi,%ebp
1caa(3): mov %rsi,%rbx
1cad(7): lea 0x216d0c(%rip),%r12
1cb4(6): mov $0x1,%r13d
1cba(4): sub $0x18,%rsp
1cbe(3): mov (%rsi),%rdi
1cc1(5): call 0x136f(%rip)
1cc6(7): lea 0x128e0(%rip),%rsi
1ccd(5): mov $0x6,%edi
1cd2(5): call 0xfffffe9e(%rip)
1cd7(7): lea 0x12781(%rip),%rsi
1cde(7): lea 0x12751(%rip),%rdi
1ce5(5): call 0xfffffcab(%rip)
1cea(7): lea 0x12745(%rip),%rdi
1cf1(5): call 0xfffffc5f(%rip)
1cf6(7): lea 0x1103(%rip),%rdi
1cfd(5): call 0x12683(%rip)
1d02(7): mov $0x0,0x21743f(%rip)
1d09(7): nop 0x0(%rax)
1d10(7): lea 0x127c2(%rip),%rdx
1d17(3): xor %r8d,%r8d
1d1a(3): mov %r12,%rcx
1d1d(3): mov %rbx,%rsi
1d20(2): mov %ebp,%edi
1d22(5): call 0xfffffcce(%rip)
1d27(3): cmp $0xff,%eax
1d2a(6): jz 0x3a6(%rip)
1d30(3): cmp $0x69,%eax
1d33(6): jz 0x245(%rip)
1d39(2): jle 0x37(%rip)
1d3b(3): cmp $0x70,%eax
1d3e(6): jz 0x102(%rip)
1d44(2): jle 0x64(%rip)
1d46(3): cmp $0x76,%eax
1d49(6): jz 0x1df(%rip)
1d4f(3): cmp $0x77,%eax
1d52(6): jz 0x18e(%rip)
1d58(3): cmp $0x73,%eax
1d5b(6): jz 0x265(%rip)
1d61(3): xor %r13d,%r13d
1d64(2): jmp 0xffffffac(%rip)
1d66(a): nop 0x0(%rax,%rax,1)
1d70(3): cmp $0x62,%eax
1d73(6): jz 0x265(%rip)
1d79(2): jle 0x77(%rip)
1d7b(3): cmp $0x66,%eax
1d7e(6): jz 0x11a(%rip)
1d84(3): cmp $0x68,%eax
1d87(6): jz 0xc9(%rip)
1d8d(3): cmp $0x64,%eax
1d90(2): jnz 0xffffffd1(%rip)
1d92(7): mov 0x217367(%rip),%rax
1d99(7): mov %rax,0x2172a0(%rip)
1da0(5): jmp 0xffffff70(%rip)
1da5(3): nop (%rax)
1da8(3): cmp $0x6c,%eax
1dab(6): jz 0x28d(%rip)
1db1(3): cmp $0x6e,%eax
1db4(2): jnz 0xffffffad(%rip)
1db6(7): mov 0x217343(%rip),%rdx
1dbd(5): mov $0x3,%ecx
1dc2(3): mov %r14,%rdi
1dc5(3): mov %rdx,%rsi
1dc8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1dca(3): setnbe %al
1dcd(2): sbb $0x0,%al
1dcf(2): test %al,%al
1dd1(6): jnz 0x2ae(%rip)
1dd7(7): lea 0x13062(%rip),%rax
1dde(7): mov %rax,0x217253(%rip)
1de5(5): jmp 0xffffff2b(%rip)
1dea(6): nop 0x0(%rax,%rax,1)
1df0(5): cmp $0xffffff7d,%eax
1df5(6): jnz 0x48c(%rip)
1dfb(4): sub $0x8,%rsp
1dff(7): mov 0x2172e2(%rip),%rdi
1e06(7): mov 0x21725b(%rip),%rcx
1e0d(2): push $0x0
1e0f(7): lea 0x126a5(%rip),%r9
1e16(7): lea 0x126ae(%rip),%r8
1e1d(7): lea 0x1260e(%rip),%rdx
1e24(7): lea 0x1258e(%rip),%rsi
1e2b(2): xor %eax,%eax
1e2d(5): call 0x33f3(%rip)
1e32(2): xor %edi,%edi
1e34(5): call 0xfffffddc(%rip)
1e39(7): nop 0x0(%rax)
1e40(7): mov $0x0,0x2171d9(%rip)
1e47(5): jmp 0xfffffec9(%rip)
1e4c(4): nop 0x0(%rax)
1e50(7): lea 0x217469(%rip),%rdx
1e57(7): lea 0x2176a2(%rip),%rsi
1e5e(7): lea 0x2171f3(%rip),%rdi
1e65(5): call 0x5bb(%rip)
1e6a(2): test %al,%al
1e6c(6): jnz 0xfffffea4(%rip)
1e72(7): mov 0x217287(%rip),%rdi
1e79(5): call 0x2ec7(%rip)
1e7e(5): mov $0x5,%edx
1e83(3): mov %rax,%r13
1e86(7): lea 0x12ec3(%rip),%rsi
1e8d(5): jmp 0x188(%rip)
1e92(6): nop 0x0(%rax,%rax,1)
1e98(7): lea 0x217321(%rip),%rdx
1e9f(7): lea 0x21761a(%rip),%rsi
1ea6(7): lea 0x2171a3(%rip),%rdi
1ead(5): call 0x573(%rip)
1eb2(2): test %al,%al
1eb4(6): jnz 0xfffffe5c(%rip)
1eba(7): mov 0x21723f(%rip),%rdi
1ec1(5): call 0x2e7f(%rip)
1ec6(5): mov $0x5,%edx
1ecb(3): mov %rax,%r13
1ece(7): lea 0x12ecb(%rip),%rsi
1ed5(5): jmp 0x140(%rip)
1eda(6): nop 0x0(%rax,%rax,1)
1ee0(7): lea 0x12f09(%rip),%rsi
1ee7(5): mov $0x5,%edx
1eec(2): xor %edi,%edi
1eee(5): call 0xfffffac2(%rip)
1ef3(7): mov 0x217206(%rip),%rdi
1efa(7): lea 0x126ac(%rip),%rcx
1f01(3): mov %rax,%r8
1f04(3): xor %r9d,%r9d
1f07(5): mov $0x7fffffff,%edx
1f0c(5): mov $0x1,%esi
1f11(5): call 0x381f(%rip)
1f16(6): mov %eax,0x2170f4(%rip)
1f1c(5): jmp 0xfffffdf4(%rip)
1f21(7): nop 0x0(%rax)
1f28(7): lea 0x12548(%rip),%rsi
1f2f(5): mov $0x5,%edx
1f34(2): xor %edi,%edi
1f36(5): call 0xfffffa7a(%rip)
1f3b(7): mov 0x2171be(%rip),%rdi
1f42(7): lea 0x12664(%rip),%rcx
1f49(3): mov %rax,%r8
1f4c(3): xor %r9d,%r9d
1f4f(a): mov $0x9223372036854775807,%rdx
1f59(a): mov $0x-9223372036854775808,%rsi
1f63(5): call 0x37cd(%rip)
1f68(7): mov %rax,0x2170c1(%rip)
1f6f(5): jmp 0xfffffda1(%rip)
1f74(4): nop 0x0(%rax)
1f78(7): lea 0x12515(%rip),%rsi
1f7f(5): mov $0x5,%edx
1f84(2): xor %edi,%edi
1f86(5): call 0xfffffa2a(%rip)
1f8b(7): mov 0x21716e(%rip),%rdi
1f92(7): lea 0x12614(%rip),%rcx
1f99(3): mov %rax,%r8
1f9c(3): xor %r9d,%r9d
1f9f(a): mov $0x9223372036854775807,%rdx
1fa9(5): mov $0x1,%esi
1fae(5): call 0x3782(%rip)
1fb3(7): mov %rax,0x21706e(%rip)
1fba(5): jmp 0xfffffd56(%rip)
1fbf(1): nop 
1fc0(7): mov 0x217139(%rip),%rax
1fc7(7): mov %rax,0x21707a(%rip)
1fce(5): jmp 0xfffffd42(%rip)
1fd3(5): nop 0x0(%rax,%rax,1)
1fd8(7): lea 0x2173e1(%rip),%rdx
1fdf(7): lea 0x21755a(%rip),%rsi
1fe6(7): lea 0x217073(%rip),%rdi
1fed(5): call 0x433(%rip)
1ff2(2): test %al,%al
1ff4(6): jnz 0xfffffd1c(%rip)
1ffa(7): mov 0x2170ff(%rip),%rdi
2001(5): call 0x2d3f(%rip)
2006(7): lea 0x12d6b(%rip),%rsi
200d(3): mov %rax,%r13
2010(5): mov $0x5,%edx
2015(2): xor %edi,%edi
2017(5): call 0xfffff999(%rip)
201c(3): mov %r13,%rcx
201f(3): mov %rax,%rdx
2022(2): xor %esi,%esi
2024(2): xor %edi,%edi
2026(2): xor %eax,%eax
2028(3): xor %r13d,%r13d
202b(5): call 0xfffffb85(%rip)
2030(5): jmp 0xfffffce0(%rip)
2035(3): nop (%rax)
2038(7): lea 0x12d89(%rip),%rsi
203f(5): mov $0x5,%edx
2044(2): xor %edi,%edi
2046(5): call 0xfffff96a(%rip)
204b(7): mov 0x2170ae(%rip),%rdi
2052(7): lea 0x12554(%rip),%rcx
2059(3): mov %rax,%r8
205c(3): xor %r9d,%r9d
205f(a): mov $0x9223372036854775807,%rdx
2069(5): mov $0x1,%esi
206e(5): call 0x36c2(%rip)
2073(7): mov %rax,0x216f9e(%rip)
207a(5): jmp 0xfffffc96(%rip)
207f(7): lea 0x1242f(%rip),%rsi
2086(3): mov %rdx,%rdi
2089(4): mov %rdx,(%rsp)
208d(5): call 0xfffffa33(%rip)
2092(2): test %eax,%eax
2094(4): mov (%rsp),%rdx
2098(6): jz 0x1fb(%rip)
209e(7): lea 0x12413(%rip),%rsi
20a5(3): mov %rdx,%rdi
20a8(4): mov %rdx,(%rsp)
20ac(5): call 0xfffffa14(%rip)
20b1(2): test %eax,%eax
20b3(4): mov (%rsp),%rdx
20b7(6): jnz 0x213(%rip)
20bd(7): lea 0x12d84(%rip),%rax
20c4(7): mov %rax,0x216f6d(%rip)
20cb(5): jmp 0xfffffc45(%rip)
20d0(3): test %r13b,%r13b
20d3(6): jz 0x227(%rip)
20d9(7): mov 0x216f60(%rip),%rdi
20e0(4): or $0xffffffff,%r8
20e4(2): xor %edx,%edx
20e6(3): mov %r8,%rcx
20e9(5): mov %r8,0x8(%rsp)
20ee(2): mov %edx,%eax
20f0(3): mov %dl,(%rsp)
20f3(2): REPNZ scasb rdi(%es,10),%al
20f5(3): not %rcx
20f8(4): lea 0x0(%rcx,%r8,1),%r12
20fc(3): mov %rcx,%r14
20ff(4): lea 0x0(%r12,%r12,2),%rdi
2103(7): mov %rdi,0x21708e(%rip)
210a(4): add $0x1,%rdi
210e(5): call 0x3272(%rip)
2113(7): mov 0x216f26(%rip),%r15
211a(3): mov %rax,%rdi
211d(7): mov %rax,0x21707c(%rip)
2124(3): mov %r15,%rsi
2127(5): call 0xfffff879(%rip)
212c(3): mov %r15,%rsi
212f(3): mov %rax,%rdi
2132(5): call 0xfffff86e(%rip)
2137(3): mov %r15,%rsi
213a(3): mov %rax,%rdi
213d(5): call 0xfffff7e3(%rip)
2142(4): lea 0x0(%r12,%r12,1),%rdi
2146(7): mov %rdi,0x21703b(%rip)
214d(4): add $0x1,%rdi
2151(5): call 0x322f(%rip)
2156(7): mov 0x216ee3(%rip),%r15
215d(3): mov %rax,%rdi
2160(7): mov %rax,0x217029(%rip)
2167(3): mov %r15,%rsi
216a(5): call 0xfffff836(%rip)
216f(3): mov %r15,%rsi
2172(3): mov %rax,%rdi
2175(5): call 0xfffff7ab(%rip)
217a(3): mov %r14,%rdi
217d(7): mov %r12,0x216ff4(%rip)
2184(5): call 0x31fc(%rip)
2189(7): mov 0x216eb0(%rip),%rsi
2190(3): mov %rax,%rdi
2193(7): mov %rax,0x216fe6(%rip)
219a(5): call 0xfffff786(%rip)
219f(7): lea 0x216fba(%rip),%rdi
21a6(5): call 0xd4a(%rip)
21ab(4): movzx (%rsp),%edx
21af(5): mov 0x8(%rsp),%r8
21b4(7): mov 0x216e8d(%rip),%rdi
21bb(3): mov %r8,%rcx
21be(2): mov %edx,%eax
21c0(2): REPNZ scasb rdi(%es,10),%al
21c2(7): movsxd 0x216e47(%rip),%rax
21c9(3): mov %rcx,%r12
21cc(3): not %r12
21cf(4): sub $0x1,%r12
21d3(5): lea 0x1(%r12,%rax,1),%rdi
21d8(5): call 0x31a8(%rip)
21dd(3): mov %rax,%rcx
21e0(7): mov %rax,0x216f71(%rip)
21e7(7): movsxd 0x216e22(%rip),%rax
21ee(5): mov $0x20,%esi
21f3(3): mov %rcx,%rdi
21f6(3): add %rax,%r12
21f9(3): mov %r12,%rdx
21fc(5): call 0xfffff864(%rip)
2201(5): mov $0x0,0x0(%rax,%r12,1)
2206(7): mov 0x216e23(%rip),%rax
220d(7): mov %rax,0x216f3c(%rip)
2214(7): mov 0x216e45(%rip),%rax
221b(7): mov %rax,0x21735e(%rip)
2222(7): lea 0x217317(%rip),%rax
2229(7): mov %rax,0x216f78(%rip)
2230(6): mov 0x216ec2(%rip),%eax
2236(2): cmp %ebp,%eax
2238(6): jz 0xae(%rip)
223e(2): jnl 0x23(%rip)
2240(2): cwde 
2242(4): mov 0x0(%rbx,%rax,8),%rdi
2246(5): call 0x31a(%rip)
224b(3): and %eax,%r13d
224e(6): mov 0x216ea4(%rip),%eax
2254(3): add $0x1,%eax
2257(2): cmp %ebp,%eax
2259(6): mov %eax,0x216e99(%rip)
225f(2): jl 0xffffffe1(%rip)
2261(7): cmp $0x0,0x216ee0(%rip)
2268(2): jnz 0x37(%rip)
226a(4): add $0x18,%rsp
226e(4): xor $0x1,%r13d
2272(1): pop %rbx
2273(4): movzx %r13b,%eax
2277(1): pop %rbp
2278(2): pop %r12
227a(2): pop %r13
227c(2): pop %r14
227e(2): pop %r15
2280(1): ret near (%rsp)
2281(5): cmp $0xffffff7e,%eax
2286(6): jnz 0xfffffadb(%rip)
228c(2): xor %edi,%edi
228e(5): call 0x6e2(%rip)
2293(7): mov %r15,0x216d9e(%rip)
229a(5): jmp 0xfffffa76(%rip)
229f(7): mov 0x216e4a(%rip),%rdi
22a6(5): call 0x3b7a(%rip)
22ab(3): add $0x1,%eax
22ae(2): jnz 0xffffffbc(%rip)
22b0(5): call 0xfffff640(%rip)
22b5(2): mov (%rax),%esi
22b7(7): lea 0x12bf4(%rip),%rdx
22be(5): mov $0x1,%edi
22c3(2): xor %eax,%eax
22c5(5): call 0xfffff8eb(%rip)
22ca(3): mov %rdx,%rdi
22cd(5): call 0x2a73(%rip)
22d2(5): mov $0x5,%edx
22d7(3): mov %rax,%r13
22da(7): lea 0x12b2f(%rip),%rsi
22e1(5): jmp 0xfffffd34(%rip)
22e6(7): lea 0x12bc5(%rip),%rdi
22ed(5): call 0x273(%rip)
22f2(3): mov %eax,%r13d
22f5(5): jmp 0xffffff6c(%rip)
22fa(5): mov $0x1,%edi
22ff(5): call 0x671(%rip)

"_start" :
2310(2): xor %ebp,%ebp
2312(3): mov %rdx,%r9
2315(1): pop %rsi
2316(3): mov %rsp,%rdx
2319(4): and $0xfffffff0,%rsp
231d(1): push %rax
231e(1): push %rsp
231f(7): lea 0x1204a(%rip),%r8
2326(7): lea 0x11fd3(%rip),%rcx
232d(7): lea 0xfffff95c(%rip),%rdi
2334(6): call 0x216c96(%rip)
233a(1): hlt 

"deregister_tm_clones" :
2340(7): lea 0x216d99(%rip),%rdi
2347(1): push %rbp
2348(7): lea 0x216d91(%rip),%rax
234f(3): cmp %rdi,%rax
2352(3): mov %rsp,%rbp
2355(2): jz 0x1b(%rip)
2357(7): mov 0x216c6a(%rip),%rax
235e(3): test %rax,%rax
2361(2): jz 0xf(%rip)
2363(1): pop %rbp
2364(2): jmp %rax
2366(a): nop 0x0(%rax,%rax,1)
2370(1): pop %rbp
2371(1): ret near (%rsp)

"register_tm_clones" :
2380(7): lea 0x216d59(%rip),%rdi
2387(7): lea 0x216d52(%rip),%rsi
238e(1): push %rbp
238f(3): sub %rdi,%rsi
2392(3): mov %rsp,%rbp
2395(4): sar $0x3,%rsi
2399(3): mov %rsi,%rax
239c(4): shr $0x3f,%rax
23a0(3): add %rax,%rsi
23a3(3): sar $0x1,%rsi
23a6(2): jz 0x1a(%rip)
23a8(7): mov 0x216c31(%rip),%rax
23af(3): test %rax,%rax
23b2(2): jz 0xe(%rip)
23b4(1): pop %rbp
23b5(2): jmp %rax
23b7(9): nop 0x0(%rax,%rax,1)
23c0(1): pop %rbp
23c1(1): ret near (%rsp)

"__do_global_dtors_aux" :
23d0(7): cmp $0x0,0x216d51(%rip)
23d7(2): jnz 0x31(%rip)
23d9(8): cmp $0x0,0x216c07(%rip)
23e1(1): push %rbp
23e2(3): mov %rsp,%rbp
23e5(2): jz 0xe(%rip)
23e7(7): mov 0x216c1a(%rip),%rdi
23ee(5): call 0xfffff892(%rip)
23f3(5): call 0xffffff4d(%rip)
23f8(7): mov $0x1,0x216d29(%rip)
23ff(1): pop %rbp
2400(1): ret near (%rsp)
2401(7): nop 0x0(%rax)
2408(2): REP ret near (%rsp)

"frame_dummy" :
2410(1): push %rbp
2411(3): mov %rsp,%rbp
2414(1): pop %rbp
2415(5): jmp 0xffffff6b(%rip)

"build_type_arg" :
2420(7): mov 0x216cd9(%rip),%rcx
2427(3): movzx (%rcx),%eax
242a(2): cmp $0x6e,%al
242c(6): jz 0x88(%rip)
2432(2): jle 0x7e(%rip)
2434(2): cmp $0x70,%al
2436(2): jnz 0x72(%rip)
2438(1): push %rbp
2439(4): lea 0x1(%rcx),%rax
243d(1): push %rbx
243e(3): mov %rsi,%rbx
2441(4): sub $0x8,%rsp
2445(7): mov %rax,0x216cb4(%rip)
244c(3): mov %rcx,(%rdi)
244f(7): mov 0x216caa(%rip),%rbp
2456(7): mov $0x0,(%rsi)
245d(4): mov %rdx,0x20(%rsi)
2461(8): mov $0x0,0x8(%rsi)
2469(8): mov $0x0,0x28(%rsi)
2471(b): mov $0x2c6,0x21725c(%rip)
247c(3): mov %rbp,%rdi
247f(5): call 0xfffff551(%rip)
2484(3): mov %rbx,%rdx
2487(3): mov %rax,%rsi
248a(3): mov %rbp,%rdi
248d(5): call 0x11303(%rip)
2492(3): test %rax,%rax
2495(2): jnz 0x28(%rip)
2497(4): add $0x8,%rsp
249b(5): mov $0x1,%eax
24a0(1): pop %rbx
24a1(1): pop %rbp
24a2(1): ret near (%rsp)
24a3(5): nop 0x0(%rax,%rax,1)
24a8(2): cmp $0x74,%al
24aa(2): jz 0xa(%rip)
24ac(2): xor %eax,%eax
24ae(1): ret near (%rsp)
24af(1): nop 
24b0(2): cmp $0x61,%al
24b2(2): jnz 0xfffffffa(%rip)
24b4(3): mov %rcx,(%rdi)
24b7(5): mov $0x1,%eax
24bc(1): ret near (%rsp)
24bd(7): lea 0x129a8(%rip),%rdx
24c4(3): mov %rax,%rcx
24c7(2): xor %esi,%esi
24c9(5): mov $0x1,%edi
24ce(2): xor %eax,%eax
24d0(5): call 0xfffff6e0(%rip)
24d5(1): nop 
24d6(a): nop 0x0(%rax,%rax,1)
24e0(4): sub $0x8,%rsp
24e4(6): mov 0x216b26(%rip),%edx
24ea(7): mov 0x216b57(%rip),%r8
24f1(7): mov 0x216c58(%rip),%rcx
24f8(7): mov 0x216b39(%rip),%rsi
24ff(2): xor %eax,%eax
2501(5): mov $0x1,%edi
2506(5): call 0xfffff67a(%rip)
250b(7): mov 0x216c3e(%rip),%rax
2512(7): mov 0x216b0f(%rip),%rdx
2519(3): add %rax,%rdx
251c(3): cmp %rdx,%rax
251f(2): jnle 0xe(%rip)
2521(7): mov %rdx,0x216c28(%rip)
2528(4): add $0x8,%rsp
252c(1): ret near (%rsp)
252d(7): lea 0x11e70(%rip),%rsi
2534(5): mov $0x5,%edx
2539(2): xor %edi,%edi
253b(5): call 0xfffff475(%rip)
2540(2): xor %esi,%esi
2542(3): mov %rax,%rdx
2545(5): mov $0x1,%edi
254a(2): xor %eax,%eax
254c(5): call 0xfffff664(%rip)
2551(5): nop 0x0(%rax,%rax,1)
2556(a): nop 0x0(%rax,%rax,1)
2560(2): push %r15
2562(2): push %r14
2564(3): mov %rdi,%rsi
2567(2): push %r13
2569(2): push %r12
256b(5): mov $0x2,%ecx
2570(1): push %rbp
2571(1): push %rbx
2572(4): sub $0x18,%rsp
2576(5): mov %rdi,0x8(%rsp)
257b(7): lea 0x12930(%rip),%rdi
2582(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2584(3): setnbe %al
2587(2): sbb $0x0,%al
2589(2): test %al,%al
258b(6): jnz 0x355(%rip)
2591(7): mov 0x216b58(%rip),%rbx
2598(7): mov $0x1,0x216ba9(%rip)
259f(7): lea 0x216bba(%rip),%rbp
25a6(7): lea 0x216f13(%rip),%r12
25ad(5): mov $0x2,%esi
25b2(3): mov %rbx,%rdi
25b5(5): call 0x90b(%rip)
25ba(6): nop 0x0(%rax,%rax,1)
25c0(3): mov %rbx,%rsi
25c3(3): mov %rbp,%rdi
25c6(5): call 0xa4a(%rip)
25cb(3): test %rax,%rax
25ce(6): jz 0xd8(%rip)
25d4(7): mov 0x216b8d(%rip),%r14
25db(4): lea 0xffffffff(%r14),%r15
25df(4): cmp $0x1,%r15
25e3(6): jbe 0x11d(%rip)
25e9(7): mov 0x216a50(%rip),%rax
25f0(7): mov 0x216b79(%rip),%r13
25f7(3): movzx (%rax),%eax
25fa(5): cmp %ax,0x0(%r13)
25ff(6): jnz 0x101(%rip)
2605(7): cmp 0x216b8c(%rip),%r15
260c(6): jz 0x154(%rip)
2612(7): cmp 0x216b6f(%rip),%r15
2619(6): jz 0x197(%rip)
261f(7): cmp 0x216b52(%rip),%r15
2626(6): jnz 0xda(%rip)
262c(7): mov 0x216b4d(%rip),%rsi
2633(3): mov %r15,%rdx
2636(3): mov %r13,%rdi
2639(5): call 0xfffff447(%rip)
263e(2): test %eax,%eax
2640(6): jnz 0xc0(%rip)
2646(7): cmp $0x0,0x2169d3(%rip)
264d(7): mov 0x2169fc(%rip),%rax
2654(7): mov %r12,0x216b4d(%rip)
265b(7): mov %rax,0x216f1e(%rip)
2662(2): jz 0x10(%rip)
2664(7): mov 0x2169c5(%rip),%rax
266b(7): mov %rax,0x216ade(%rip)
2672(7): mov 0x216a6f(%rip),%rdi
2679(4): mov 0x28(%rdi),%rax
267d(4): cmp 0x30(%rdi),%rax
2681(6): jnb 0x1d7(%rip)
2687(4): lea 0x1(%rax),%rdx
268b(3): mov %rbx,%rsi
268e(4): mov %rdx,0x28(%rdi)
2692(3): mov $0xa,(%rax)
2695(3): mov %rbp,%rdi
2698(5): call 0x978(%rip)
269d(3): test %rax,%rax
26a0(6): jnz 0xffffff34(%rip)
26a6(3): test $0x20,(%rbx)
26a9(6): jnz 0x254(%rip)
26af(5): mov 0x8(%rsp),%rsi
26b4(7): lea 0x127f7(%rip),%rdi
26bb(5): mov $0x2,%ecx
26c0(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
26c2(3): mov %rbx,%rdi
26c5(3): setnbe %al
26c8(2): sbb $0x0,%al
26ca(2): test %al,%al
26cc(6): jz 0x1f6(%rip)
26d2(5): call 0x374e(%rip)
26d7(2): mov %eax,%edx
26d9(5): mov $0x1,%eax
26de(3): cmp $0xff,%edx
26e1(6): jz 0x21c(%rip)
26e7(4): add $0x18,%rsp
26eb(1): pop %rbx
26ec(1): pop %rbp
26ed(2): pop %r12
26ef(2): pop %r13
26f1(2): pop %r14
26f3(2): pop %r15
26f5(1): ret near (%rsp)
26f6(a): nop 0x0(%rax,%rax,1)
2700(7): mov 0x216e79(%rip),%rax
2707(3): movzx (%rax),%eax
270a(2): cmp $0x6e,%al
270c(6): jz 0x126(%rip)
2712(6): jle 0x15e(%rip)
2718(2): cmp $0x70,%al
271a(6): jz 0xe6(%rip)
2720(2): cmp $0x74,%al
2722(2): jnz 0x18(%rip)
2724(4): cmp $0x1,%r14
2728(6): jbe 0x10a(%rip)
272e(5): call 0xfffffdb2(%rip)
2733(7): mov 0x216a2e(%rip),%r14
273a(7): mov 0x2169a7(%rip),%rcx
2741(7): mov 0x216a28(%rip),%rdi
2748(3): mov %r14,%rdx
274b(5): mov $0x1,%esi
2750(5): call 0xfffff400(%rip)
2755(5): jmp 0xfffffe6b(%rip)
275a(6): nop 0x0(%rax,%rax,1)
2760(7): mov 0x216a39(%rip),%rsi
2767(3): mov %r15,%rdx
276a(3): mov %r13,%rdi
276d(5): call 0xfffff313(%rip)
2772(2): test %eax,%eax
2774(6): jnz 0xfffffe9e(%rip)
277a(7): mov 0x2168d7(%rip),%rax
2781(7): cmp $0x0,0x216898(%rip)
2788(7): mov %rax,0x216df1(%rip)
278f(7): lea 0x216d6a(%rip),%rax
2796(7): mov %rax,0x216a0b(%rip)
279d(6): jz 0xfffffed5(%rip)
27a3(5): jmp 0xfffffec1(%rip)
27a8(8): nop 0x0(%rax,%rax,1)
27b0(7): mov 0x2169d9(%rip),%rsi
27b7(3): mov %r15,%rdx
27ba(3): mov %r13,%rdi
27bd(5): call 0xfffff2c3(%rip)
27c2(2): test %eax,%eax
27c4(6): jnz 0xfffffe5b(%rip)
27ca(7): mov 0x21688f(%rip),%rax
27d1(7): cmp $0x0,0x216848(%rip)
27d8(7): mov %rax,0x216da1(%rip)
27df(7): lea 0x216d5a(%rip),%rax
27e6(7): mov %rax,0x2169bb(%rip)
27ed(6): jnz 0xfffffe77(%rip)
27f3(5): jmp 0xfffffe7f(%rip)
27f8(8): nop 0x0(%rax,%rax,1)
2800(7): mov 0x216969(%rip),%rsi
2807(7): mov 0x21699a(%rip),%rdi
280e(3): xor %r9d,%r9d
2811(2): xor %ecx,%ecx
2813(3): mov %r15,%r8
2816(3): mov %r15,%rdx
2819(5): call 0x11917(%rip)
281e(4): cmp $0xfffffffe,%rax
2822(6): jz 0x11a(%rip)
2828(4): cmp $0xffffffff,%rax
282c(6): jnz 0xffffff02(%rip)
2832(7): mov 0x2168af(%rip),%rsi
2839(7): mov 0x216918(%rip),%rdi
2840(5): call 0xfffff260(%rip)
2845(7): mov 0x21691c(%rip),%r14
284c(5): jmp 0xfffffeee(%rip)
2851(7): nop 0x0(%rax)
2858(5): mov $0xa,%esi
285d(5): call 0xfffff1c3(%rip)
2862(5): jmp 0xfffffd5e(%rip)
2867(9): nop 0x0(%rax,%rax,1)
2870(2): cmp $0x61,%al
2872(6): jnz 0xfffffec8(%rip)
2878(7): mov 0x216799(%rip),%rax
287f(4): cmp $0x1,%rax
2883(6): jle 0xfffffeab(%rip)
2889(4): cmp $0x1,%r14
288d(2): jnbe 0x19(%rip)
288f(7): mov 0x2168aa(%rip),%rcx
2896(4): lea 0x1(%rcx),%rdx
289a(3): cmp %rdx,%rax
289d(7): mov %rdx,0x21689c(%rip)
28a4(2): jnz 0xffffff8e(%rip)
28a6(5): call 0xfffffc3a(%rip)
28ab(b): mov $0x0,0x21688a(%rip)
28b6(7): mov 0x2168ab(%rip),%r14
28bd(5): jmp 0xfffffe7d(%rip)
28c2(5): call 0xfffff07e(%rip)
28c7(4): add $0x18,%rsp
28cb(5): mov $0x1,%eax
28d0(1): pop %rbx
28d1(1): pop %rbp
28d2(2): pop %r12
28d4(2): pop %r13
28d6(2): pop %r14
28d8(2): pop %r15
28da(1): ret near (%rsp)
28db(5): nop 0x0(%rax,%rax,1)
28e0(5): mov 0x8(%rsp),%rdi
28e5(7): lea 0x11ba6(%rip),%rsi
28ec(5): call 0xfffff2e4(%rip)
28f1(3): test %rax,%rax
28f4(3): mov %rax,%rbx
28f7(6): jnz 0xfffffca8(%rip)
28fd(5): mov 0x8(%rsp),%rdx
2902(5): mov $0x3,%esi
2907(2): xor %edi,%edi
2909(5): call 0x2267(%rip)
290e(3): mov %rax,%rbx
2911(5): call 0xffffefdf(%rip)
2916(2): mov (%rax),%esi
2918(7): lea 0x1254d(%rip),%rdx
291f(3): mov %rbx,%rcx
2922(2): xor %eax,%eax
2924(2): xor %edi,%edi
2926(5): call 0xfffff28a(%rip)
292b(4): add $0x18,%rsp
292f(2): xor %eax,%eax
2931(1): pop %rbx
2932(1): pop %rbp
2933(2): pop %r12
2935(2): pop %r13
2937(2): pop %r14
2939(2): pop %r15
293b(1): ret near (%rsp)
293c(7): lea 0x11c6d(%rip),%rsi
2943(5): mov $0x5,%edx
2948(2): xor %edi,%edi
294a(5): call 0xfffff066(%rip)
294f(3): mov %rax,%rbx
2952(5): call 0xffffef9e(%rip)
2957(2): mov (%rax),%esi
2959(3): mov %rbx,%rdx
295c(5): mov $0x1,%edi
2961(2): xor %eax,%eax
2963(5): call 0xfffff24d(%rip)
2968(8): nop 0x0(%rax,%rax,1)
2970(2): push %r13
2972(2): push %r12
2974(5): mov $0x5,%edx
2979(1): push %rbp
297a(1): push %rbx
297b(2): mov %edi,%ebp
297d(7): sub $0x88,%rsp
2984(7): mov 0x216c0d(%rip),%rbx
298b(9): mov $0x28,%rax
2994(5): mov %rax,0x78(%rsp)
2999(2): xor %eax,%eax
299b(2): test %edi,%edi
299d(2): jz 0x30(%rip)
299f(7): lea 0x11c32(%rip),%rsi
29a6(2): xor %edi,%edi
29a8(5): call 0xfffff008(%rip)
29ad(7): mov 0x21676c(%rip),%rdi
29b4(3): mov %rax,%rdx
29b7(3): mov %rbx,%rcx
29ba(5): mov $0x1,%esi
29bf(2): xor %eax,%eax
29c1(5): call 0xfffff26f(%rip)
29c6(2): mov %ebp,%edi
29c8(5): call 0xfffff248(%rip)
29cd(7): lea 0x11c2c(%rip),%rsi
29d4(2): xor %edi,%edi
29d6(5): call 0xffffefda(%rip)
29db(3): mov %rbx,%rdx
29de(3): mov %rax,%rsi
29e1(5): mov $0x1,%edi
29e6(2): xor %eax,%eax
29e8(5): call 0xfffff198(%rip)
29ed(7): mov 0x2166f4(%rip),%rbx
29f4(7): lea 0x11c2d(%rip),%rsi
29fb(5): mov $0x5,%edx
2a00(2): xor %edi,%edi
2a02(5): call 0xffffefae(%rip)
2a07(3): mov %rbx,%rsi
2a0a(3): mov %rax,%rdi
2a0d(5): call 0xfffff093(%rip)
2a12(7): mov 0x2166cf(%rip),%rbx
2a19(7): lea 0x11c48(%rip),%rsi
2a20(5): mov $0x5,%edx
2a25(2): xor %edi,%edi
2a27(5): call 0xffffef89(%rip)
2a2c(3): mov %rbx,%rsi
2a2f(3): mov %rax,%rdi
2a32(5): call 0xfffff06e(%rip)
2a37(7): mov 0x2166aa(%rip),%rbx
2a3e(7): lea 0x11c5b(%rip),%rsi
2a45(5): mov $0x5,%edx
2a4a(2): xor %edi,%edi
2a4c(5): call 0xffffef64(%rip)
2a51(3): mov %rbx,%rsi
2a54(3): mov %rax,%rdi
2a57(5): call 0xfffff049(%rip)
2a5c(7): mov 0x216685(%rip),%rbx
2a63(7): lea 0x11c86(%rip),%rsi
2a6a(5): mov $0x5,%edx
2a6f(2): xor %edi,%edi
2a71(5): call 0xffffef3f(%rip)
2a76(3): mov %rbx,%rsi
2a79(3): mov %rax,%rdi
2a7c(5): call 0xfffff024(%rip)
2a81(7): mov 0x216660(%rip),%rbx
2a88(7): lea 0x11d39(%rip),%rsi
2a8f(5): mov $0x5,%edx
2a94(2): xor %edi,%edi
2a96(5): call 0xffffef1a(%rip)
2a9b(3): mov %rbx,%rsi
2a9e(3): mov %rax,%rdi
2aa1(5): call 0xffffefff(%rip)
2aa6(7): mov 0x21663b(%rip),%rbx
2aad(7): lea 0x11ed4(%rip),%rsi
2ab4(5): mov $0x5,%edx
2ab9(2): xor %edi,%edi
2abb(5): call 0xffffeef5(%rip)
2ac0(3): mov %rbx,%rsi
2ac3(3): mov %rax,%rdi
2ac6(5): call 0xffffefda(%rip)
2acb(7): mov 0x216616(%rip),%rbx
2ad2(7): lea 0x11f3f(%rip),%rsi
2ad9(5): mov $0x5,%edx
2ade(2): xor %edi,%edi
2ae0(5): call 0xffffeed0(%rip)
2ae5(3): mov %rbx,%rsi
2ae8(3): mov %rax,%rdi
2aeb(5): call 0xffffefb5(%rip)
2af0(7): mov 0x2165f1(%rip),%rbx
2af7(7): lea 0x11f4a(%rip),%rsi
2afe(5): mov $0x5,%edx
2b03(2): xor %edi,%edi
2b05(5): call 0xffffeeab(%rip)
2b0a(3): mov %rbx,%rsi
2b0d(3): mov %rax,%rdi
2b10(5): call 0xffffef90(%rip)
2b15(7): mov 0x2165cc(%rip),%rbx
2b1c(7): lea 0x11f5d(%rip),%rsi
2b23(5): mov $0x5,%edx
2b28(2): xor %edi,%edi
2b2a(5): call 0xffffee86(%rip)
2b2f(3): mov %rbx,%rsi
2b32(3): mov %rax,%rdi
2b35(5): call 0xffffef6b(%rip)
2b3a(7): mov 0x2165a7(%rip),%rbx
2b41(7): lea 0x11ff8(%rip),%rsi
2b48(5): mov $0x5,%edx
2b4d(2): xor %edi,%edi
2b4f(5): call 0xffffee61(%rip)
2b54(3): mov %rbx,%rsi
2b57(3): mov %rax,%rdi
2b5a(5): call 0xffffef46(%rip)
2b5f(7): mov 0x216582(%rip),%rbx
2b66(7): lea 0x120a3(%rip),%rsi
2b6d(5): mov $0x5,%edx
2b72(2): xor %edi,%edi
2b74(5): call 0xffffee3c(%rip)
2b79(3): mov %rbx,%rsi
2b7c(3): mov %rax,%rdi
2b7f(7): lea 0x11833(%rip),%rbx
2b86(5): call 0xffffef1a(%rip)
2b8b(7): lea 0x1182a(%rip),%rax
2b92(7): lea 0x11864(%rip),%rcx
2b99(9): mov $0x0,0x60(%rsp)
2ba2(9): mov $0x0,0x68(%rsp)
2bab(3): mov %rsp,%rdx
2bae(4): mov %rax,(%rsp)
2bb2(7): lea 0x11805(%rip),%rax
2bb9(5): mov %rcx,0x30(%rsp)
2bbe(7): lea 0x11842(%rip),%rcx
2bc5(5): mov %rax,0x8(%rsp)
2bca(7): lea 0x11865(%rip),%rax
2bd1(5): mov %rcx,0x40(%rsp)
2bd6(7): lea 0x11834(%rip),%rcx
2bdd(5): mov %rax,0x10(%rsp)
2be2(7): lea 0x117e5(%rip),%rax
2be9(5): mov %rcx,0x50(%rsp)
2bee(5): mov %rax,0x18(%rsp)
2bf3(7): lea 0x117ea(%rip),%rax
2bfa(5): mov %rax,0x20(%rsp)
2bff(7): lea 0x117e8(%rip),%rax
2c06(5): mov %rax,0x28(%rsp)
2c0b(5): mov %rax,0x38(%rsp)
2c10(5): mov %rax,0x48(%rsp)
2c15(5): mov %rax,0x58(%rsp)
2c1a(6): nop 0x0(%rax,%rax,1)
2c20(4): add $0x10,%rdx
2c24(3): mov (%rdx),%rdi
2c27(3): test %rdi,%rdi
2c2a(2): jz 0x15(%rip)
2c2c(5): mov $0x3,%ecx
2c31(3): mov %rbx,%rsi
2c34(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2c36(3): setnbe %al
2c39(2): sbb $0x0,%al
2c3b(2): test %al,%al
2c3d(2): jnz 0xffffffe3(%rip)
2c3f(4): mov 0x8(%rdx),%r12
2c43(2): xor %edi,%edi
2c45(5): mov $0x5,%edx
2c4a(7): lea 0x117ca(%rip),%rsi
2c51(3): test %r12,%r12
2c54(6): jz 0xc7(%rip)
2c5a(5): call 0xffffed56(%rip)
2c5f(7): lea 0x12042(%rip),%rcx
2c66(7): lea 0x117c5(%rip),%rdx
2c6d(3): mov %rax,%rsi
2c70(5): mov $0x1,%edi
2c75(2): xor %eax,%eax
2c77(5): call 0xffffef09(%rip)
2c7c(2): xor %esi,%esi
2c7e(5): mov $0x5,%edi
2c83(5): call 0xffffeeed(%rip)
2c88(3): test %rax,%rax
2c8b(2): jz 0x1e(%rip)
2c8d(7): lea 0x117ac(%rip),%rsi
2c94(5): mov $0x3,%edx
2c99(3): mov %rax,%rdi
2c9c(5): call 0xffffec64(%rip)
2ca1(2): test %eax,%eax
2ca3(6): jnz 0x10d(%rip)
2ca9(7): lea 0x11794(%rip),%rsi
2cb0(2): xor %edi,%edi
2cb2(5): mov $0x5,%edx
2cb7(5): call 0xffffecf9(%rip)
2cbc(7): lea 0x116f6(%rip),%rcx
2cc3(7): lea 0x11fde(%rip),%rdx
2cca(3): mov %rax,%rsi
2ccd(5): mov $0x1,%edi
2cd2(2): xor %eax,%eax
2cd4(5): call 0xffffeeac(%rip)
2cd9(3): cmp %rbx,%r12
2cdc(7): lea 0x116f5(%rip),%rcx
2ce3(7): lea 0x118c3(%rip),%rbx
2cea(4): cmove %rcx,%rbx
2cee(7): lea 0x12023(%rip),%rsi
2cf5(2): xor %edi,%edi
2cf7(5): mov $0x5,%edx
2cfc(5): call 0xffffecb4(%rip)
2d01(3): mov %rbx,%rcx
2d04(3): mov %rax,%rsi
2d07(3): mov %r12,%rdx
2d0a(5): mov $0x1,%edi
2d0f(2): xor %eax,%eax
2d11(5): call 0xffffee6f(%rip)
2d16(5): jmp 0xfffffcb0(%rip)
2d1b(5): call 0xffffec95(%rip)
2d20(7): lea 0x11f81(%rip),%rcx
2d27(7): lea 0x11704(%rip),%rdx
2d2e(3): mov %rax,%rsi
2d31(5): mov $0x1,%edi
2d36(2): xor %eax,%eax
2d38(5): call 0xffffee48(%rip)
2d3d(2): xor %esi,%esi
2d3f(5): mov $0x5,%edi
2d44(5): call 0xffffee2c(%rip)
2d49(3): test %rax,%rax
2d4c(2): jz 0x1a(%rip)
2d4e(7): lea 0x116eb(%rip),%rsi
2d55(5): mov $0x3,%edx
2d5a(3): mov %rax,%rdi
2d5d(5): call 0xffffeba3(%rip)
2d62(2): test %eax,%eax
2d64(2): jnz 0x45(%rip)
2d66(7): lea 0x116d7(%rip),%rsi
2d6d(5): mov $0x5,%edx
2d72(2): xor %edi,%edi
2d74(7): lea 0x1163e(%rip),%r12
2d7b(7): lea 0x11656(%rip),%rbx
2d82(5): call 0xffffec2e(%rip)
2d87(7): lea 0x1162b(%rip),%rcx
2d8e(7): lea 0x11f13(%rip),%rdx
2d95(3): mov %rax,%rsi
2d98(5): mov $0x1,%edi
2d9d(2): xor %eax,%eax
2d9f(5): call 0xffffede1(%rip)
2da4(5): jmp 0xffffff4a(%rip)
2da9(7): lea 0x11609(%rip),%r12
2db0(7): mov 0x216331(%rip),%r13
2db7(7): lea 0x11f12(%rip),%rsi
2dbe(2): xor %edi,%edi
2dc0(5): mov $0x5,%edx
2dc5(5): call 0xffffebeb(%rip)
2dca(3): mov %r13,%rsi
2dcd(3): mov %rax,%rdi
2dd0(5): call 0xffffecd0(%rip)
2dd5(5): jmp 0xfffffed4(%rip)

"print_lineno" :
24e0(4): sub $0x8,%rsp
24e4(6): mov 0x216b26(%rip),%edx
24ea(7): mov 0x216b57(%rip),%r8
24f1(7): mov 0x216c58(%rip),%rcx
24f8(7): mov 0x216b39(%rip),%rsi
24ff(2): xor %eax,%eax
2501(5): mov $0x1,%edi
2506(5): call 0xfffff67a(%rip)
250b(7): mov 0x216c3e(%rip),%rax
2512(7): mov 0x216b0f(%rip),%rdx
2519(3): add %rax,%rdx
251c(3): cmp %rdx,%rax
251f(2): jnle 0xe(%rip)
2521(7): mov %rdx,0x216c28(%rip)
2528(4): add $0x8,%rsp
252c(1): ret near (%rsp)
252d(7): lea 0x11e70(%rip),%rsi
2534(5): mov $0x5,%edx
2539(2): xor %edi,%edi
253b(5): call 0xfffff475(%rip)
2540(2): xor %esi,%esi
2542(3): mov %rax,%rdx
2545(5): mov $0x1,%edi
254a(2): xor %eax,%eax
254c(5): call 0xfffff664(%rip)
2551(5): nop 0x0(%rax,%rax,1)
2556(a): nop 0x0(%rax,%rax,1)
2560(2): push %r15
2562(2): push %r14
2564(3): mov %rdi,%rsi
2567(2): push %r13
2569(2): push %r12
256b(5): mov $0x2,%ecx
2570(1): push %rbp
2571(1): push %rbx
2572(4): sub $0x18,%rsp
2576(5): mov %rdi,0x8(%rsp)
257b(7): lea 0x12930(%rip),%rdi
2582(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2584(3): setnbe %al
2587(2): sbb $0x0,%al
2589(2): test %al,%al
258b(6): jnz 0x355(%rip)
2591(7): mov 0x216b58(%rip),%rbx
2598(7): mov $0x1,0x216ba9(%rip)
259f(7): lea 0x216bba(%rip),%rbp
25a6(7): lea 0x216f13(%rip),%r12
25ad(5): mov $0x2,%esi
25b2(3): mov %rbx,%rdi
25b5(5): call 0x90b(%rip)
25ba(6): nop 0x0(%rax,%rax,1)
25c0(3): mov %rbx,%rsi
25c3(3): mov %rbp,%rdi
25c6(5): call 0xa4a(%rip)
25cb(3): test %rax,%rax
25ce(6): jz 0xd8(%rip)
25d4(7): mov 0x216b8d(%rip),%r14
25db(4): lea 0xffffffff(%r14),%r15
25df(4): cmp $0x1,%r15
25e3(6): jbe 0x11d(%rip)
25e9(7): mov 0x216a50(%rip),%rax
25f0(7): mov 0x216b79(%rip),%r13
25f7(3): movzx (%rax),%eax
25fa(5): cmp %ax,0x0(%r13)
25ff(6): jnz 0x101(%rip)
2605(7): cmp 0x216b8c(%rip),%r15
260c(6): jz 0x154(%rip)
2612(7): cmp 0x216b6f(%rip),%r15
2619(6): jz 0x197(%rip)
261f(7): cmp 0x216b52(%rip),%r15
2626(6): jnz 0xda(%rip)
262c(7): mov 0x216b4d(%rip),%rsi
2633(3): mov %r15,%rdx
2636(3): mov %r13,%rdi
2639(5): call 0xfffff447(%rip)
263e(2): test %eax,%eax
2640(6): jnz 0xc0(%rip)
2646(7): cmp $0x0,0x2169d3(%rip)
264d(7): mov 0x2169fc(%rip),%rax
2654(7): mov %r12,0x216b4d(%rip)
265b(7): mov %rax,0x216f1e(%rip)
2662(2): jz 0x10(%rip)
2664(7): mov 0x2169c5(%rip),%rax
266b(7): mov %rax,0x216ade(%rip)
2672(7): mov 0x216a6f(%rip),%rdi
2679(4): mov 0x28(%rdi),%rax
267d(4): cmp 0x30(%rdi),%rax
2681(6): jnb 0x1d7(%rip)
2687(4): lea 0x1(%rax),%rdx
268b(3): mov %rbx,%rsi
268e(4): mov %rdx,0x28(%rdi)
2692(3): mov $0xa,(%rax)
2695(3): mov %rbp,%rdi
2698(5): call 0x978(%rip)
269d(3): test %rax,%rax
26a0(6): jnz 0xffffff34(%rip)
26a6(3): test $0x20,(%rbx)
26a9(6): jnz 0x254(%rip)
26af(5): mov 0x8(%rsp),%rsi
26b4(7): lea 0x127f7(%rip),%rdi
26bb(5): mov $0x2,%ecx
26c0(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
26c2(3): mov %rbx,%rdi
26c5(3): setnbe %al
26c8(2): sbb $0x0,%al
26ca(2): test %al,%al
26cc(6): jz 0x1f6(%rip)
26d2(5): call 0x374e(%rip)
26d7(2): mov %eax,%edx
26d9(5): mov $0x1,%eax
26de(3): cmp $0xff,%edx
26e1(6): jz 0x21c(%rip)
26e7(4): add $0x18,%rsp
26eb(1): pop %rbx
26ec(1): pop %rbp
26ed(2): pop %r12
26ef(2): pop %r13
26f1(2): pop %r14
26f3(2): pop %r15
26f5(1): ret near (%rsp)
26f6(a): nop 0x0(%rax,%rax,1)
2700(7): mov 0x216e79(%rip),%rax
2707(3): movzx (%rax),%eax
270a(2): cmp $0x6e,%al
270c(6): jz 0x126(%rip)
2712(6): jle 0x15e(%rip)
2718(2): cmp $0x70,%al
271a(6): jz 0xe6(%rip)
2720(2): cmp $0x74,%al
2722(2): jnz 0x18(%rip)
2724(4): cmp $0x1,%r14
2728(6): jbe 0x10a(%rip)
272e(5): call 0xfffffdb2(%rip)
2733(7): mov 0x216a2e(%rip),%r14
273a(7): mov 0x2169a7(%rip),%rcx
2741(7): mov 0x216a28(%rip),%rdi
2748(3): mov %r14,%rdx
274b(5): mov $0x1,%esi
2750(5): call 0xfffff400(%rip)
2755(5): jmp 0xfffffe6b(%rip)
275a(6): nop 0x0(%rax,%rax,1)
2760(7): mov 0x216a39(%rip),%rsi
2767(3): mov %r15,%rdx
276a(3): mov %r13,%rdi
276d(5): call 0xfffff313(%rip)
2772(2): test %eax,%eax
2774(6): jnz 0xfffffe9e(%rip)
277a(7): mov 0x2168d7(%rip),%rax
2781(7): cmp $0x0,0x216898(%rip)
2788(7): mov %rax,0x216df1(%rip)
278f(7): lea 0x216d6a(%rip),%rax
2796(7): mov %rax,0x216a0b(%rip)
279d(6): jz 0xfffffed5(%rip)
27a3(5): jmp 0xfffffec1(%rip)
27a8(8): nop 0x0(%rax,%rax,1)
27b0(7): mov 0x2169d9(%rip),%rsi
27b7(3): mov %r15,%rdx
27ba(3): mov %r13,%rdi
27bd(5): call 0xfffff2c3(%rip)
27c2(2): test %eax,%eax
27c4(6): jnz 0xfffffe5b(%rip)
27ca(7): mov 0x21688f(%rip),%rax
27d1(7): cmp $0x0,0x216848(%rip)
27d8(7): mov %rax,0x216da1(%rip)
27df(7): lea 0x216d5a(%rip),%rax
27e6(7): mov %rax,0x2169bb(%rip)
27ed(6): jnz 0xfffffe77(%rip)
27f3(5): jmp 0xfffffe7f(%rip)
27f8(8): nop 0x0(%rax,%rax,1)
2800(7): mov 0x216969(%rip),%rsi
2807(7): mov 0x21699a(%rip),%rdi
280e(3): xor %r9d,%r9d
2811(2): xor %ecx,%ecx
2813(3): mov %r15,%r8
2816(3): mov %r15,%rdx
2819(5): call 0x11917(%rip)
281e(4): cmp $0xfffffffe,%rax
2822(6): jz 0x11a(%rip)
2828(4): cmp $0xffffffff,%rax
282c(6): jnz 0xffffff02(%rip)
2832(7): mov 0x2168af(%rip),%rsi
2839(7): mov 0x216918(%rip),%rdi
2840(5): call 0xfffff260(%rip)
2845(7): mov 0x21691c(%rip),%r14
284c(5): jmp 0xfffffeee(%rip)
2851(7): nop 0x0(%rax)
2858(5): mov $0xa,%esi
285d(5): call 0xfffff1c3(%rip)
2862(5): jmp 0xfffffd5e(%rip)
2867(9): nop 0x0(%rax,%rax,1)
2870(2): cmp $0x61,%al
2872(6): jnz 0xfffffec8(%rip)
2878(7): mov 0x216799(%rip),%rax
287f(4): cmp $0x1,%rax
2883(6): jle 0xfffffeab(%rip)
2889(4): cmp $0x1,%r14
288d(2): jnbe 0x19(%rip)
288f(7): mov 0x2168aa(%rip),%rcx
2896(4): lea 0x1(%rcx),%rdx
289a(3): cmp %rdx,%rax
289d(7): mov %rdx,0x21689c(%rip)
28a4(2): jnz 0xffffff8e(%rip)
28a6(5): call 0xfffffc3a(%rip)
28ab(b): mov $0x0,0x21688a(%rip)
28b6(7): mov 0x2168ab(%rip),%r14
28bd(5): jmp 0xfffffe7d(%rip)
28c2(5): call 0xfffff07e(%rip)
28c7(4): add $0x18,%rsp
28cb(5): mov $0x1,%eax
28d0(1): pop %rbx
28d1(1): pop %rbp
28d2(2): pop %r12
28d4(2): pop %r13
28d6(2): pop %r14
28d8(2): pop %r15
28da(1): ret near (%rsp)
28db(5): nop 0x0(%rax,%rax,1)
28e0(5): mov 0x8(%rsp),%rdi
28e5(7): lea 0x11ba6(%rip),%rsi
28ec(5): call 0xfffff2e4(%rip)
28f1(3): test %rax,%rax
28f4(3): mov %rax,%rbx
28f7(6): jnz 0xfffffca8(%rip)
28fd(5): mov 0x8(%rsp),%rdx
2902(5): mov $0x3,%esi
2907(2): xor %edi,%edi
2909(5): call 0x2267(%rip)
290e(3): mov %rax,%rbx
2911(5): call 0xffffefdf(%rip)
2916(2): mov (%rax),%esi
2918(7): lea 0x1254d(%rip),%rdx
291f(3): mov %rbx,%rcx
2922(2): xor %eax,%eax
2924(2): xor %edi,%edi
2926(5): call 0xfffff28a(%rip)
292b(4): add $0x18,%rsp
292f(2): xor %eax,%eax
2931(1): pop %rbx
2932(1): pop %rbp
2933(2): pop %r12
2935(2): pop %r13
2937(2): pop %r14
2939(2): pop %r15
293b(1): ret near (%rsp)
293c(7): lea 0x11c6d(%rip),%rsi
2943(5): mov $0x5,%edx
2948(2): xor %edi,%edi
294a(5): call 0xfffff066(%rip)
294f(3): mov %rax,%rbx
2952(5): call 0xffffef9e(%rip)
2957(2): mov (%rax),%esi
2959(3): mov %rbx,%rdx
295c(5): mov $0x1,%edi
2961(2): xor %eax,%eax
2963(5): call 0xfffff24d(%rip)
2968(8): nop 0x0(%rax,%rax,1)
2970(2): push %r13
2972(2): push %r12
2974(5): mov $0x5,%edx
2979(1): push %rbp
297a(1): push %rbx
297b(2): mov %edi,%ebp
297d(7): sub $0x88,%rsp
2984(7): mov 0x216c0d(%rip),%rbx
298b(9): mov $0x28,%rax
2994(5): mov %rax,0x78(%rsp)
2999(2): xor %eax,%eax
299b(2): test %edi,%edi
299d(2): jz 0x30(%rip)
299f(7): lea 0x11c32(%rip),%rsi
29a6(2): xor %edi,%edi
29a8(5): call 0xfffff008(%rip)
29ad(7): mov 0x21676c(%rip),%rdi
29b4(3): mov %rax,%rdx
29b7(3): mov %rbx,%rcx
29ba(5): mov $0x1,%esi
29bf(2): xor %eax,%eax
29c1(5): call 0xfffff26f(%rip)
29c6(2): mov %ebp,%edi
29c8(5): call 0xfffff248(%rip)
29cd(7): lea 0x11c2c(%rip),%rsi
29d4(2): xor %edi,%edi
29d6(5): call 0xffffefda(%rip)
29db(3): mov %rbx,%rdx
29de(3): mov %rax,%rsi
29e1(5): mov $0x1,%edi
29e6(2): xor %eax,%eax
29e8(5): call 0xfffff198(%rip)
29ed(7): mov 0x2166f4(%rip),%rbx
29f4(7): lea 0x11c2d(%rip),%rsi
29fb(5): mov $0x5,%edx
2a00(2): xor %edi,%edi
2a02(5): call 0xffffefae(%rip)
2a07(3): mov %rbx,%rsi
2a0a(3): mov %rax,%rdi
2a0d(5): call 0xfffff093(%rip)
2a12(7): mov 0x2166cf(%rip),%rbx
2a19(7): lea 0x11c48(%rip),%rsi
2a20(5): mov $0x5,%edx
2a25(2): xor %edi,%edi
2a27(5): call 0xffffef89(%rip)
2a2c(3): mov %rbx,%rsi
2a2f(3): mov %rax,%rdi
2a32(5): call 0xfffff06e(%rip)
2a37(7): mov 0x2166aa(%rip),%rbx
2a3e(7): lea 0x11c5b(%rip),%rsi
2a45(5): mov $0x5,%edx
2a4a(2): xor %edi,%edi
2a4c(5): call 0xffffef64(%rip)
2a51(3): mov %rbx,%rsi
2a54(3): mov %rax,%rdi
2a57(5): call 0xfffff049(%rip)
2a5c(7): mov 0x216685(%rip),%rbx
2a63(7): lea 0x11c86(%rip),%rsi
2a6a(5): mov $0x5,%edx
2a6f(2): xor %edi,%edi
2a71(5): call 0xffffef3f(%rip)
2a76(3): mov %rbx,%rsi
2a79(3): mov %rax,%rdi
2a7c(5): call 0xfffff024(%rip)
2a81(7): mov 0x216660(%rip),%rbx
2a88(7): lea 0x11d39(%rip),%rsi
2a8f(5): mov $0x5,%edx
2a94(2): xor %edi,%edi
2a96(5): call 0xffffef1a(%rip)
2a9b(3): mov %rbx,%rsi
2a9e(3): mov %rax,%rdi
2aa1(5): call 0xffffefff(%rip)
2aa6(7): mov 0x21663b(%rip),%rbx
2aad(7): lea 0x11ed4(%rip),%rsi
2ab4(5): mov $0x5,%edx
2ab9(2): xor %edi,%edi
2abb(5): call 0xffffeef5(%rip)
2ac0(3): mov %rbx,%rsi
2ac3(3): mov %rax,%rdi
2ac6(5): call 0xffffefda(%rip)
2acb(7): mov 0x216616(%rip),%rbx
2ad2(7): lea 0x11f3f(%rip),%rsi
2ad9(5): mov $0x5,%edx
2ade(2): xor %edi,%edi
2ae0(5): call 0xffffeed0(%rip)
2ae5(3): mov %rbx,%rsi
2ae8(3): mov %rax,%rdi
2aeb(5): call 0xffffefb5(%rip)
2af0(7): mov 0x2165f1(%rip),%rbx
2af7(7): lea 0x11f4a(%rip),%rsi
2afe(5): mov $0x5,%edx
2b03(2): xor %edi,%edi
2b05(5): call 0xffffeeab(%rip)
2b0a(3): mov %rbx,%rsi
2b0d(3): mov %rax,%rdi
2b10(5): call 0xffffef90(%rip)
2b15(7): mov 0x2165cc(%rip),%rbx
2b1c(7): lea 0x11f5d(%rip),%rsi
2b23(5): mov $0x5,%edx
2b28(2): xor %edi,%edi
2b2a(5): call 0xffffee86(%rip)
2b2f(3): mov %rbx,%rsi
2b32(3): mov %rax,%rdi
2b35(5): call 0xffffef6b(%rip)
2b3a(7): mov 0x2165a7(%rip),%rbx
2b41(7): lea 0x11ff8(%rip),%rsi
2b48(5): mov $0x5,%edx
2b4d(2): xor %edi,%edi
2b4f(5): call 0xffffee61(%rip)
2b54(3): mov %rbx,%rsi
2b57(3): mov %rax,%rdi
2b5a(5): call 0xffffef46(%rip)
2b5f(7): mov 0x216582(%rip),%rbx
2b66(7): lea 0x120a3(%rip),%rsi
2b6d(5): mov $0x5,%edx
2b72(2): xor %edi,%edi
2b74(5): call 0xffffee3c(%rip)
2b79(3): mov %rbx,%rsi
2b7c(3): mov %rax,%rdi
2b7f(7): lea 0x11833(%rip),%rbx
2b86(5): call 0xffffef1a(%rip)
2b8b(7): lea 0x1182a(%rip),%rax
2b92(7): lea 0x11864(%rip),%rcx
2b99(9): mov $0x0,0x60(%rsp)
2ba2(9): mov $0x0,0x68(%rsp)
2bab(3): mov %rsp,%rdx
2bae(4): mov %rax,(%rsp)
2bb2(7): lea 0x11805(%rip),%rax
2bb9(5): mov %rcx,0x30(%rsp)
2bbe(7): lea 0x11842(%rip),%rcx
2bc5(5): mov %rax,0x8(%rsp)
2bca(7): lea 0x11865(%rip),%rax
2bd1(5): mov %rcx,0x40(%rsp)
2bd6(7): lea 0x11834(%rip),%rcx
2bdd(5): mov %rax,0x10(%rsp)
2be2(7): lea 0x117e5(%rip),%rax
2be9(5): mov %rcx,0x50(%rsp)
2bee(5): mov %rax,0x18(%rsp)
2bf3(7): lea 0x117ea(%rip),%rax
2bfa(5): mov %rax,0x20(%rsp)
2bff(7): lea 0x117e8(%rip),%rax
2c06(5): mov %rax,0x28(%rsp)
2c0b(5): mov %rax,0x38(%rsp)
2c10(5): mov %rax,0x48(%rsp)
2c15(5): mov %rax,0x58(%rsp)
2c1a(6): nop 0x0(%rax,%rax,1)
2c20(4): add $0x10,%rdx
2c24(3): mov (%rdx),%rdi
2c27(3): test %rdi,%rdi
2c2a(2): jz 0x15(%rip)
2c2c(5): mov $0x3,%ecx
2c31(3): mov %rbx,%rsi
2c34(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2c36(3): setnbe %al
2c39(2): sbb $0x0,%al
2c3b(2): test %al,%al
2c3d(2): jnz 0xffffffe3(%rip)
2c3f(4): mov 0x8(%rdx),%r12
2c43(2): xor %edi,%edi
2c45(5): mov $0x5,%edx
2c4a(7): lea 0x117ca(%rip),%rsi
2c51(3): test %r12,%r12
2c54(6): jz 0xc7(%rip)
2c5a(5): call 0xffffed56(%rip)
2c5f(7): lea 0x12042(%rip),%rcx
2c66(7): lea 0x117c5(%rip),%rdx
2c6d(3): mov %rax,%rsi
2c70(5): mov $0x1,%edi
2c75(2): xor %eax,%eax
2c77(5): call 0xffffef09(%rip)
2c7c(2): xor %esi,%esi
2c7e(5): mov $0x5,%edi
2c83(5): call 0xffffeeed(%rip)
2c88(3): test %rax,%rax
2c8b(2): jz 0x1e(%rip)
2c8d(7): lea 0x117ac(%rip),%rsi
2c94(5): mov $0x3,%edx
2c99(3): mov %rax,%rdi
2c9c(5): call 0xffffec64(%rip)
2ca1(2): test %eax,%eax
2ca3(6): jnz 0x10d(%rip)
2ca9(7): lea 0x11794(%rip),%rsi
2cb0(2): xor %edi,%edi
2cb2(5): mov $0x5,%edx
2cb7(5): call 0xffffecf9(%rip)
2cbc(7): lea 0x116f6(%rip),%rcx
2cc3(7): lea 0x11fde(%rip),%rdx
2cca(3): mov %rax,%rsi
2ccd(5): mov $0x1,%edi
2cd2(2): xor %eax,%eax
2cd4(5): call 0xffffeeac(%rip)
2cd9(3): cmp %rbx,%r12
2cdc(7): lea 0x116f5(%rip),%rcx
2ce3(7): lea 0x118c3(%rip),%rbx
2cea(4): cmove %rcx,%rbx
2cee(7): lea 0x12023(%rip),%rsi
2cf5(2): xor %edi,%edi
2cf7(5): mov $0x5,%edx
2cfc(5): call 0xffffecb4(%rip)
2d01(3): mov %rbx,%rcx
2d04(3): mov %rax,%rsi
2d07(3): mov %r12,%rdx
2d0a(5): mov $0x1,%edi
2d0f(2): xor %eax,%eax
2d11(5): call 0xffffee6f(%rip)
2d16(5): jmp 0xfffffcb0(%rip)
2d1b(5): call 0xffffec95(%rip)
2d20(7): lea 0x11f81(%rip),%rcx
2d27(7): lea 0x11704(%rip),%rdx
2d2e(3): mov %rax,%rsi
2d31(5): mov $0x1,%edi
2d36(2): xor %eax,%eax
2d38(5): call 0xffffee48(%rip)
2d3d(2): xor %esi,%esi
2d3f(5): mov $0x5,%edi
2d44(5): call 0xffffee2c(%rip)
2d49(3): test %rax,%rax
2d4c(2): jz 0x1a(%rip)
2d4e(7): lea 0x116eb(%rip),%rsi
2d55(5): mov $0x3,%edx
2d5a(3): mov %rax,%rdi
2d5d(5): call 0xffffeba3(%rip)
2d62(2): test %eax,%eax
2d64(2): jnz 0x45(%rip)
2d66(7): lea 0x116d7(%rip),%rsi
2d6d(5): mov $0x5,%edx
2d72(2): xor %edi,%edi
2d74(7): lea 0x1163e(%rip),%r12
2d7b(7): lea 0x11656(%rip),%rbx
2d82(5): call 0xffffec2e(%rip)
2d87(7): lea 0x1162b(%rip),%rcx
2d8e(7): lea 0x11f13(%rip),%rdx
2d95(3): mov %rax,%rsi
2d98(5): mov $0x1,%edi
2d9d(2): xor %eax,%eax
2d9f(5): call 0xffffede1(%rip)
2da4(5): jmp 0xffffff4a(%rip)
2da9(7): lea 0x11609(%rip),%r12
2db0(7): mov 0x216331(%rip),%r13
2db7(7): lea 0x11f12(%rip),%rsi
2dbe(2): xor %edi,%edi
2dc0(5): mov $0x5,%edx
2dc5(5): call 0xffffebeb(%rip)
2dca(3): mov %r13,%rsi
2dcd(3): mov %rax,%rdi
2dd0(5): call 0xffffecd0(%rip)
2dd5(5): jmp 0xfffffed4(%rip)

"nl_file" :
2560(2): push %r15
2562(2): push %r14
2564(3): mov %rdi,%rsi
2567(2): push %r13
2569(2): push %r12
256b(5): mov $0x2,%ecx
2570(1): push %rbp
2571(1): push %rbx
2572(4): sub $0x18,%rsp
2576(5): mov %rdi,0x8(%rsp)
257b(7): lea 0x12930(%rip),%rdi
2582(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2584(3): setnbe %al
2587(2): sbb $0x0,%al
2589(2): test %al,%al
258b(6): jnz 0x355(%rip)
2591(7): mov 0x216b58(%rip),%rbx
2598(7): mov $0x1,0x216ba9(%rip)
259f(7): lea 0x216bba(%rip),%rbp
25a6(7): lea 0x216f13(%rip),%r12
25ad(5): mov $0x2,%esi
25b2(3): mov %rbx,%rdi
25b5(5): call 0x90b(%rip)
25ba(6): nop 0x0(%rax,%rax,1)
25c0(3): mov %rbx,%rsi
25c3(3): mov %rbp,%rdi
25c6(5): call 0xa4a(%rip)
25cb(3): test %rax,%rax
25ce(6): jz 0xd8(%rip)
25d4(7): mov 0x216b8d(%rip),%r14
25db(4): lea 0xffffffff(%r14),%r15
25df(4): cmp $0x1,%r15
25e3(6): jbe 0x11d(%rip)
25e9(7): mov 0x216a50(%rip),%rax
25f0(7): mov 0x216b79(%rip),%r13
25f7(3): movzx (%rax),%eax
25fa(5): cmp %ax,0x0(%r13)
25ff(6): jnz 0x101(%rip)
2605(7): cmp 0x216b8c(%rip),%r15
260c(6): jz 0x154(%rip)
2612(7): cmp 0x216b6f(%rip),%r15
2619(6): jz 0x197(%rip)
261f(7): cmp 0x216b52(%rip),%r15
2626(6): jnz 0xda(%rip)
262c(7): mov 0x216b4d(%rip),%rsi
2633(3): mov %r15,%rdx
2636(3): mov %r13,%rdi
2639(5): call 0xfffff447(%rip)
263e(2): test %eax,%eax
2640(6): jnz 0xc0(%rip)
2646(7): cmp $0x0,0x2169d3(%rip)
264d(7): mov 0x2169fc(%rip),%rax
2654(7): mov %r12,0x216b4d(%rip)
265b(7): mov %rax,0x216f1e(%rip)
2662(2): jz 0x10(%rip)
2664(7): mov 0x2169c5(%rip),%rax
266b(7): mov %rax,0x216ade(%rip)
2672(7): mov 0x216a6f(%rip),%rdi
2679(4): mov 0x28(%rdi),%rax
267d(4): cmp 0x30(%rdi),%rax
2681(6): jnb 0x1d7(%rip)
2687(4): lea 0x1(%rax),%rdx
268b(3): mov %rbx,%rsi
268e(4): mov %rdx,0x28(%rdi)
2692(3): mov $0xa,(%rax)
2695(3): mov %rbp,%rdi
2698(5): call 0x978(%rip)
269d(3): test %rax,%rax
26a0(6): jnz 0xffffff34(%rip)
26a6(3): test $0x20,(%rbx)
26a9(6): jnz 0x254(%rip)
26af(5): mov 0x8(%rsp),%rsi
26b4(7): lea 0x127f7(%rip),%rdi
26bb(5): mov $0x2,%ecx
26c0(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
26c2(3): mov %rbx,%rdi
26c5(3): setnbe %al
26c8(2): sbb $0x0,%al
26ca(2): test %al,%al
26cc(6): jz 0x1f6(%rip)
26d2(5): call 0x374e(%rip)
26d7(2): mov %eax,%edx
26d9(5): mov $0x1,%eax
26de(3): cmp $0xff,%edx
26e1(6): jz 0x21c(%rip)
26e7(4): add $0x18,%rsp
26eb(1): pop %rbx
26ec(1): pop %rbp
26ed(2): pop %r12
26ef(2): pop %r13
26f1(2): pop %r14
26f3(2): pop %r15
26f5(1): ret near (%rsp)
26f6(a): nop 0x0(%rax,%rax,1)
2700(7): mov 0x216e79(%rip),%rax
2707(3): movzx (%rax),%eax
270a(2): cmp $0x6e,%al
270c(6): jz 0x126(%rip)
2712(6): jle 0x15e(%rip)
2718(2): cmp $0x70,%al
271a(6): jz 0xe6(%rip)
2720(2): cmp $0x74,%al
2722(2): jnz 0x18(%rip)
2724(4): cmp $0x1,%r14
2728(6): jbe 0x10a(%rip)
272e(5): call 0xfffffdb2(%rip)
2733(7): mov 0x216a2e(%rip),%r14
273a(7): mov 0x2169a7(%rip),%rcx
2741(7): mov 0x216a28(%rip),%rdi
2748(3): mov %r14,%rdx
274b(5): mov $0x1,%esi
2750(5): call 0xfffff400(%rip)
2755(5): jmp 0xfffffe6b(%rip)
275a(6): nop 0x0(%rax,%rax,1)
2760(7): mov 0x216a39(%rip),%rsi
2767(3): mov %r15,%rdx
276a(3): mov %r13,%rdi
276d(5): call 0xfffff313(%rip)
2772(2): test %eax,%eax
2774(6): jnz 0xfffffe9e(%rip)
277a(7): mov 0x2168d7(%rip),%rax
2781(7): cmp $0x0,0x216898(%rip)
2788(7): mov %rax,0x216df1(%rip)
278f(7): lea 0x216d6a(%rip),%rax
2796(7): mov %rax,0x216a0b(%rip)
279d(6): jz 0xfffffed5(%rip)
27a3(5): jmp 0xfffffec1(%rip)
27a8(8): nop 0x0(%rax,%rax,1)
27b0(7): mov 0x2169d9(%rip),%rsi
27b7(3): mov %r15,%rdx
27ba(3): mov %r13,%rdi
27bd(5): call 0xfffff2c3(%rip)
27c2(2): test %eax,%eax
27c4(6): jnz 0xfffffe5b(%rip)
27ca(7): mov 0x21688f(%rip),%rax
27d1(7): cmp $0x0,0x216848(%rip)
27d8(7): mov %rax,0x216da1(%rip)
27df(7): lea 0x216d5a(%rip),%rax
27e6(7): mov %rax,0x2169bb(%rip)
27ed(6): jnz 0xfffffe77(%rip)
27f3(5): jmp 0xfffffe7f(%rip)
27f8(8): nop 0x0(%rax,%rax,1)
2800(7): mov 0x216969(%rip),%rsi
2807(7): mov 0x21699a(%rip),%rdi
280e(3): xor %r9d,%r9d
2811(2): xor %ecx,%ecx
2813(3): mov %r15,%r8
2816(3): mov %r15,%rdx
2819(5): call 0x11917(%rip)
281e(4): cmp $0xfffffffe,%rax
2822(6): jz 0x11a(%rip)
2828(4): cmp $0xffffffff,%rax
282c(6): jnz 0xffffff02(%rip)
2832(7): mov 0x2168af(%rip),%rsi
2839(7): mov 0x216918(%rip),%rdi
2840(5): call 0xfffff260(%rip)
2845(7): mov 0x21691c(%rip),%r14
284c(5): jmp 0xfffffeee(%rip)
2851(7): nop 0x0(%rax)
2858(5): mov $0xa,%esi
285d(5): call 0xfffff1c3(%rip)
2862(5): jmp 0xfffffd5e(%rip)
2867(9): nop 0x0(%rax,%rax,1)
2870(2): cmp $0x61,%al
2872(6): jnz 0xfffffec8(%rip)
2878(7): mov 0x216799(%rip),%rax
287f(4): cmp $0x1,%rax
2883(6): jle 0xfffffeab(%rip)
2889(4): cmp $0x1,%r14
288d(2): jnbe 0x19(%rip)
288f(7): mov 0x2168aa(%rip),%rcx
2896(4): lea 0x1(%rcx),%rdx
289a(3): cmp %rdx,%rax
289d(7): mov %rdx,0x21689c(%rip)
28a4(2): jnz 0xffffff8e(%rip)
28a6(5): call 0xfffffc3a(%rip)
28ab(b): mov $0x0,0x21688a(%rip)
28b6(7): mov 0x2168ab(%rip),%r14
28bd(5): jmp 0xfffffe7d(%rip)
28c2(5): call 0xfffff07e(%rip)
28c7(4): add $0x18,%rsp
28cb(5): mov $0x1,%eax
28d0(1): pop %rbx
28d1(1): pop %rbp
28d2(2): pop %r12
28d4(2): pop %r13
28d6(2): pop %r14
28d8(2): pop %r15
28da(1): ret near (%rsp)
28db(5): nop 0x0(%rax,%rax,1)
28e0(5): mov 0x8(%rsp),%rdi
28e5(7): lea 0x11ba6(%rip),%rsi
28ec(5): call 0xfffff2e4(%rip)
28f1(3): test %rax,%rax
28f4(3): mov %rax,%rbx
28f7(6): jnz 0xfffffca8(%rip)
28fd(5): mov 0x8(%rsp),%rdx
2902(5): mov $0x3,%esi
2907(2): xor %edi,%edi
2909(5): call 0x2267(%rip)
290e(3): mov %rax,%rbx
2911(5): call 0xffffefdf(%rip)
2916(2): mov (%rax),%esi
2918(7): lea 0x1254d(%rip),%rdx
291f(3): mov %rbx,%rcx
2922(2): xor %eax,%eax
2924(2): xor %edi,%edi
2926(5): call 0xfffff28a(%rip)
292b(4): add $0x18,%rsp
292f(2): xor %eax,%eax
2931(1): pop %rbx
2932(1): pop %rbp
2933(2): pop %r12
2935(2): pop %r13
2937(2): pop %r14
2939(2): pop %r15
293b(1): ret near (%rsp)
293c(7): lea 0x11c6d(%rip),%rsi
2943(5): mov $0x5,%edx
2948(2): xor %edi,%edi
294a(5): call 0xfffff066(%rip)
294f(3): mov %rax,%rbx
2952(5): call 0xffffef9e(%rip)
2957(2): mov (%rax),%esi
2959(3): mov %rbx,%rdx
295c(5): mov $0x1,%edi
2961(2): xor %eax,%eax
2963(5): call 0xfffff24d(%rip)
2968(8): nop 0x0(%rax,%rax,1)
2970(2): push %r13
2972(2): push %r12
2974(5): mov $0x5,%edx
2979(1): push %rbp
297a(1): push %rbx
297b(2): mov %edi,%ebp
297d(7): sub $0x88,%rsp
2984(7): mov 0x216c0d(%rip),%rbx
298b(9): mov $0x28,%rax
2994(5): mov %rax,0x78(%rsp)
2999(2): xor %eax,%eax
299b(2): test %edi,%edi
299d(2): jz 0x30(%rip)
299f(7): lea 0x11c32(%rip),%rsi
29a6(2): xor %edi,%edi
29a8(5): call 0xfffff008(%rip)
29ad(7): mov 0x21676c(%rip),%rdi
29b4(3): mov %rax,%rdx
29b7(3): mov %rbx,%rcx
29ba(5): mov $0x1,%esi
29bf(2): xor %eax,%eax
29c1(5): call 0xfffff26f(%rip)
29c6(2): mov %ebp,%edi
29c8(5): call 0xfffff248(%rip)
29cd(7): lea 0x11c2c(%rip),%rsi
29d4(2): xor %edi,%edi
29d6(5): call 0xffffefda(%rip)
29db(3): mov %rbx,%rdx
29de(3): mov %rax,%rsi
29e1(5): mov $0x1,%edi
29e6(2): xor %eax,%eax
29e8(5): call 0xfffff198(%rip)
29ed(7): mov 0x2166f4(%rip),%rbx
29f4(7): lea 0x11c2d(%rip),%rsi
29fb(5): mov $0x5,%edx
2a00(2): xor %edi,%edi
2a02(5): call 0xffffefae(%rip)
2a07(3): mov %rbx,%rsi
2a0a(3): mov %rax,%rdi
2a0d(5): call 0xfffff093(%rip)
2a12(7): mov 0x2166cf(%rip),%rbx
2a19(7): lea 0x11c48(%rip),%rsi
2a20(5): mov $0x5,%edx
2a25(2): xor %edi,%edi
2a27(5): call 0xffffef89(%rip)
2a2c(3): mov %rbx,%rsi
2a2f(3): mov %rax,%rdi
2a32(5): call 0xfffff06e(%rip)
2a37(7): mov 0x2166aa(%rip),%rbx
2a3e(7): lea 0x11c5b(%rip),%rsi
2a45(5): mov $0x5,%edx
2a4a(2): xor %edi,%edi
2a4c(5): call 0xffffef64(%rip)
2a51(3): mov %rbx,%rsi
2a54(3): mov %rax,%rdi
2a57(5): call 0xfffff049(%rip)
2a5c(7): mov 0x216685(%rip),%rbx
2a63(7): lea 0x11c86(%rip),%rsi
2a6a(5): mov $0x5,%edx
2a6f(2): xor %edi,%edi
2a71(5): call 0xffffef3f(%rip)
2a76(3): mov %rbx,%rsi
2a79(3): mov %rax,%rdi
2a7c(5): call 0xfffff024(%rip)
2a81(7): mov 0x216660(%rip),%rbx
2a88(7): lea 0x11d39(%rip),%rsi
2a8f(5): mov $0x5,%edx
2a94(2): xor %edi,%edi
2a96(5): call 0xffffef1a(%rip)
2a9b(3): mov %rbx,%rsi
2a9e(3): mov %rax,%rdi
2aa1(5): call 0xffffefff(%rip)
2aa6(7): mov 0x21663b(%rip),%rbx
2aad(7): lea 0x11ed4(%rip),%rsi
2ab4(5): mov $0x5,%edx
2ab9(2): xor %edi,%edi
2abb(5): call 0xffffeef5(%rip)
2ac0(3): mov %rbx,%rsi
2ac3(3): mov %rax,%rdi
2ac6(5): call 0xffffefda(%rip)
2acb(7): mov 0x216616(%rip),%rbx
2ad2(7): lea 0x11f3f(%rip),%rsi
2ad9(5): mov $0x5,%edx
2ade(2): xor %edi,%edi
2ae0(5): call 0xffffeed0(%rip)
2ae5(3): mov %rbx,%rsi
2ae8(3): mov %rax,%rdi
2aeb(5): call 0xffffefb5(%rip)
2af0(7): mov 0x2165f1(%rip),%rbx
2af7(7): lea 0x11f4a(%rip),%rsi
2afe(5): mov $0x5,%edx
2b03(2): xor %edi,%edi
2b05(5): call 0xffffeeab(%rip)
2b0a(3): mov %rbx,%rsi
2b0d(3): mov %rax,%rdi
2b10(5): call 0xffffef90(%rip)
2b15(7): mov 0x2165cc(%rip),%rbx
2b1c(7): lea 0x11f5d(%rip),%rsi
2b23(5): mov $0x5,%edx
2b28(2): xor %edi,%edi
2b2a(5): call 0xffffee86(%rip)
2b2f(3): mov %rbx,%rsi
2b32(3): mov %rax,%rdi
2b35(5): call 0xffffef6b(%rip)
2b3a(7): mov 0x2165a7(%rip),%rbx
2b41(7): lea 0x11ff8(%rip),%rsi
2b48(5): mov $0x5,%edx
2b4d(2): xor %edi,%edi
2b4f(5): call 0xffffee61(%rip)
2b54(3): mov %rbx,%rsi
2b57(3): mov %rax,%rdi
2b5a(5): call 0xffffef46(%rip)
2b5f(7): mov 0x216582(%rip),%rbx
2b66(7): lea 0x120a3(%rip),%rsi
2b6d(5): mov $0x5,%edx
2b72(2): xor %edi,%edi
2b74(5): call 0xffffee3c(%rip)
2b79(3): mov %rbx,%rsi
2b7c(3): mov %rax,%rdi
2b7f(7): lea 0x11833(%rip),%rbx
2b86(5): call 0xffffef1a(%rip)
2b8b(7): lea 0x1182a(%rip),%rax
2b92(7): lea 0x11864(%rip),%rcx
2b99(9): mov $0x0,0x60(%rsp)
2ba2(9): mov $0x0,0x68(%rsp)
2bab(3): mov %rsp,%rdx
2bae(4): mov %rax,(%rsp)
2bb2(7): lea 0x11805(%rip),%rax
2bb9(5): mov %rcx,0x30(%rsp)
2bbe(7): lea 0x11842(%rip),%rcx
2bc5(5): mov %rax,0x8(%rsp)
2bca(7): lea 0x11865(%rip),%rax
2bd1(5): mov %rcx,0x40(%rsp)
2bd6(7): lea 0x11834(%rip),%rcx
2bdd(5): mov %rax,0x10(%rsp)
2be2(7): lea 0x117e5(%rip),%rax
2be9(5): mov %rcx,0x50(%rsp)
2bee(5): mov %rax,0x18(%rsp)
2bf3(7): lea 0x117ea(%rip),%rax
2bfa(5): mov %rax,0x20(%rsp)
2bff(7): lea 0x117e8(%rip),%rax
2c06(5): mov %rax,0x28(%rsp)
2c0b(5): mov %rax,0x38(%rsp)
2c10(5): mov %rax,0x48(%rsp)
2c15(5): mov %rax,0x58(%rsp)
2c1a(6): nop 0x0(%rax,%rax,1)
2c20(4): add $0x10,%rdx
2c24(3): mov (%rdx),%rdi
2c27(3): test %rdi,%rdi
2c2a(2): jz 0x15(%rip)
2c2c(5): mov $0x3,%ecx
2c31(3): mov %rbx,%rsi
2c34(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2c36(3): setnbe %al
2c39(2): sbb $0x0,%al
2c3b(2): test %al,%al
2c3d(2): jnz 0xffffffe3(%rip)
2c3f(4): mov 0x8(%rdx),%r12
2c43(2): xor %edi,%edi
2c45(5): mov $0x5,%edx
2c4a(7): lea 0x117ca(%rip),%rsi
2c51(3): test %r12,%r12
2c54(6): jz 0xc7(%rip)
2c5a(5): call 0xffffed56(%rip)
2c5f(7): lea 0x12042(%rip),%rcx
2c66(7): lea 0x117c5(%rip),%rdx
2c6d(3): mov %rax,%rsi
2c70(5): mov $0x1,%edi
2c75(2): xor %eax,%eax
2c77(5): call 0xffffef09(%rip)
2c7c(2): xor %esi,%esi
2c7e(5): mov $0x5,%edi
2c83(5): call 0xffffeeed(%rip)
2c88(3): test %rax,%rax
2c8b(2): jz 0x1e(%rip)
2c8d(7): lea 0x117ac(%rip),%rsi
2c94(5): mov $0x3,%edx
2c99(3): mov %rax,%rdi
2c9c(5): call 0xffffec64(%rip)
2ca1(2): test %eax,%eax
2ca3(6): jnz 0x10d(%rip)
2ca9(7): lea 0x11794(%rip),%rsi
2cb0(2): xor %edi,%edi
2cb2(5): mov $0x5,%edx
2cb7(5): call 0xffffecf9(%rip)
2cbc(7): lea 0x116f6(%rip),%rcx
2cc3(7): lea 0x11fde(%rip),%rdx
2cca(3): mov %rax,%rsi
2ccd(5): mov $0x1,%edi
2cd2(2): xor %eax,%eax
2cd4(5): call 0xffffeeac(%rip)
2cd9(3): cmp %rbx,%r12
2cdc(7): lea 0x116f5(%rip),%rcx
2ce3(7): lea 0x118c3(%rip),%rbx
2cea(4): cmove %rcx,%rbx
2cee(7): lea 0x12023(%rip),%rsi
2cf5(2): xor %edi,%edi
2cf7(5): mov $0x5,%edx
2cfc(5): call 0xffffecb4(%rip)
2d01(3): mov %rbx,%rcx
2d04(3): mov %rax,%rsi
2d07(3): mov %r12,%rdx
2d0a(5): mov $0x1,%edi
2d0f(2): xor %eax,%eax
2d11(5): call 0xffffee6f(%rip)
2d16(5): jmp 0xfffffcb0(%rip)
2d1b(5): call 0xffffec95(%rip)
2d20(7): lea 0x11f81(%rip),%rcx
2d27(7): lea 0x11704(%rip),%rdx
2d2e(3): mov %rax,%rsi
2d31(5): mov $0x1,%edi
2d36(2): xor %eax,%eax
2d38(5): call 0xffffee48(%rip)
2d3d(2): xor %esi,%esi
2d3f(5): mov $0x5,%edi
2d44(5): call 0xffffee2c(%rip)
2d49(3): test %rax,%rax
2d4c(2): jz 0x1a(%rip)
2d4e(7): lea 0x116eb(%rip),%rsi
2d55(5): mov $0x3,%edx
2d5a(3): mov %rax,%rdi
2d5d(5): call 0xffffeba3(%rip)
2d62(2): test %eax,%eax
2d64(2): jnz 0x45(%rip)
2d66(7): lea 0x116d7(%rip),%rsi
2d6d(5): mov $0x5,%edx
2d72(2): xor %edi,%edi
2d74(7): lea 0x1163e(%rip),%r12
2d7b(7): lea 0x11656(%rip),%rbx
2d82(5): call 0xffffec2e(%rip)
2d87(7): lea 0x1162b(%rip),%rcx
2d8e(7): lea 0x11f13(%rip),%rdx
2d95(3): mov %rax,%rsi
2d98(5): mov $0x1,%edi
2d9d(2): xor %eax,%eax
2d9f(5): call 0xffffede1(%rip)
2da4(5): jmp 0xffffff4a(%rip)
2da9(7): lea 0x11609(%rip),%r12
2db0(7): mov 0x216331(%rip),%r13
2db7(7): lea 0x11f12(%rip),%rsi
2dbe(2): xor %edi,%edi
2dc0(5): mov $0x5,%edx
2dc5(5): call 0xffffebeb(%rip)
2dca(3): mov %r13,%rsi
2dcd(3): mov %rax,%rdi
2dd0(5): call 0xffffecd0(%rip)
2dd5(5): jmp 0xfffffed4(%rip)

"usage" :
2970(2): push %r13
2972(2): push %r12
2974(5): mov $0x5,%edx
2979(1): push %rbp
297a(1): push %rbx
297b(2): mov %edi,%ebp
297d(7): sub $0x88,%rsp
2984(7): mov 0x216c0d(%rip),%rbx
298b(9): mov $0x28,%rax
2994(5): mov %rax,0x78(%rsp)
2999(2): xor %eax,%eax
299b(2): test %edi,%edi
299d(2): jz 0x30(%rip)
299f(7): lea 0x11c32(%rip),%rsi
29a6(2): xor %edi,%edi
29a8(5): call 0xfffff008(%rip)
29ad(7): mov 0x21676c(%rip),%rdi
29b4(3): mov %rax,%rdx
29b7(3): mov %rbx,%rcx
29ba(5): mov $0x1,%esi
29bf(2): xor %eax,%eax
29c1(5): call 0xfffff26f(%rip)
29c6(2): mov %ebp,%edi
29c8(5): call 0xfffff248(%rip)
29cd(7): lea 0x11c2c(%rip),%rsi
29d4(2): xor %edi,%edi
29d6(5): call 0xffffefda(%rip)
29db(3): mov %rbx,%rdx
29de(3): mov %rax,%rsi
29e1(5): mov $0x1,%edi
29e6(2): xor %eax,%eax
29e8(5): call 0xfffff198(%rip)
29ed(7): mov 0x2166f4(%rip),%rbx
29f4(7): lea 0x11c2d(%rip),%rsi
29fb(5): mov $0x5,%edx
2a00(2): xor %edi,%edi
2a02(5): call 0xffffefae(%rip)
2a07(3): mov %rbx,%rsi
2a0a(3): mov %rax,%rdi
2a0d(5): call 0xfffff093(%rip)
2a12(7): mov 0x2166cf(%rip),%rbx
2a19(7): lea 0x11c48(%rip),%rsi
2a20(5): mov $0x5,%edx
2a25(2): xor %edi,%edi
2a27(5): call 0xffffef89(%rip)
2a2c(3): mov %rbx,%rsi
2a2f(3): mov %rax,%rdi
2a32(5): call 0xfffff06e(%rip)
2a37(7): mov 0x2166aa(%rip),%rbx
2a3e(7): lea 0x11c5b(%rip),%rsi
2a45(5): mov $0x5,%edx
2a4a(2): xor %edi,%edi
2a4c(5): call 0xffffef64(%rip)
2a51(3): mov %rbx,%rsi
2a54(3): mov %rax,%rdi
2a57(5): call 0xfffff049(%rip)
2a5c(7): mov 0x216685(%rip),%rbx
2a63(7): lea 0x11c86(%rip),%rsi
2a6a(5): mov $0x5,%edx
2a6f(2): xor %edi,%edi
2a71(5): call 0xffffef3f(%rip)
2a76(3): mov %rbx,%rsi
2a79(3): mov %rax,%rdi
2a7c(5): call 0xfffff024(%rip)
2a81(7): mov 0x216660(%rip),%rbx
2a88(7): lea 0x11d39(%rip),%rsi
2a8f(5): mov $0x5,%edx
2a94(2): xor %edi,%edi
2a96(5): call 0xffffef1a(%rip)
2a9b(3): mov %rbx,%rsi
2a9e(3): mov %rax,%rdi
2aa1(5): call 0xffffefff(%rip)
2aa6(7): mov 0x21663b(%rip),%rbx
2aad(7): lea 0x11ed4(%rip),%rsi
2ab4(5): mov $0x5,%edx
2ab9(2): xor %edi,%edi
2abb(5): call 0xffffeef5(%rip)
2ac0(3): mov %rbx,%rsi
2ac3(3): mov %rax,%rdi
2ac6(5): call 0xffffefda(%rip)
2acb(7): mov 0x216616(%rip),%rbx
2ad2(7): lea 0x11f3f(%rip),%rsi
2ad9(5): mov $0x5,%edx
2ade(2): xor %edi,%edi
2ae0(5): call 0xffffeed0(%rip)
2ae5(3): mov %rbx,%rsi
2ae8(3): mov %rax,%rdi
2aeb(5): call 0xffffefb5(%rip)
2af0(7): mov 0x2165f1(%rip),%rbx
2af7(7): lea 0x11f4a(%rip),%rsi
2afe(5): mov $0x5,%edx
2b03(2): xor %edi,%edi
2b05(5): call 0xffffeeab(%rip)
2b0a(3): mov %rbx,%rsi
2b0d(3): mov %rax,%rdi
2b10(5): call 0xffffef90(%rip)
2b15(7): mov 0x2165cc(%rip),%rbx
2b1c(7): lea 0x11f5d(%rip),%rsi
2b23(5): mov $0x5,%edx
2b28(2): xor %edi,%edi
2b2a(5): call 0xffffee86(%rip)
2b2f(3): mov %rbx,%rsi
2b32(3): mov %rax,%rdi
2b35(5): call 0xffffef6b(%rip)
2b3a(7): mov 0x2165a7(%rip),%rbx
2b41(7): lea 0x11ff8(%rip),%rsi
2b48(5): mov $0x5,%edx
2b4d(2): xor %edi,%edi
2b4f(5): call 0xffffee61(%rip)
2b54(3): mov %rbx,%rsi
2b57(3): mov %rax,%rdi
2b5a(5): call 0xffffef46(%rip)
2b5f(7): mov 0x216582(%rip),%rbx
2b66(7): lea 0x120a3(%rip),%rsi
2b6d(5): mov $0x5,%edx
2b72(2): xor %edi,%edi
2b74(5): call 0xffffee3c(%rip)
2b79(3): mov %rbx,%rsi
2b7c(3): mov %rax,%rdi
2b7f(7): lea 0x11833(%rip),%rbx
2b86(5): call 0xffffef1a(%rip)
2b8b(7): lea 0x1182a(%rip),%rax
2b92(7): lea 0x11864(%rip),%rcx
2b99(9): mov $0x0,0x60(%rsp)
2ba2(9): mov $0x0,0x68(%rsp)
2bab(3): mov %rsp,%rdx
2bae(4): mov %rax,(%rsp)
2bb2(7): lea 0x11805(%rip),%rax
2bb9(5): mov %rcx,0x30(%rsp)
2bbe(7): lea 0x11842(%rip),%rcx
2bc5(5): mov %rax,0x8(%rsp)
2bca(7): lea 0x11865(%rip),%rax
2bd1(5): mov %rcx,0x40(%rsp)
2bd6(7): lea 0x11834(%rip),%rcx
2bdd(5): mov %rax,0x10(%rsp)
2be2(7): lea 0x117e5(%rip),%rax
2be9(5): mov %rcx,0x50(%rsp)
2bee(5): mov %rax,0x18(%rsp)
2bf3(7): lea 0x117ea(%rip),%rax
2bfa(5): mov %rax,0x20(%rsp)
2bff(7): lea 0x117e8(%rip),%rax
2c06(5): mov %rax,0x28(%rsp)
2c0b(5): mov %rax,0x38(%rsp)
2c10(5): mov %rax,0x48(%rsp)
2c15(5): mov %rax,0x58(%rsp)
2c1a(6): nop 0x0(%rax,%rax,1)
2c20(4): add $0x10,%rdx
2c24(3): mov (%rdx),%rdi
2c27(3): test %rdi,%rdi
2c2a(2): jz 0x15(%rip)
2c2c(5): mov $0x3,%ecx
2c31(3): mov %rbx,%rsi
2c34(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2c36(3): setnbe %al
2c39(2): sbb $0x0,%al
2c3b(2): test %al,%al
2c3d(2): jnz 0xffffffe3(%rip)
2c3f(4): mov 0x8(%rdx),%r12
2c43(2): xor %edi,%edi
2c45(5): mov $0x5,%edx
2c4a(7): lea 0x117ca(%rip),%rsi
2c51(3): test %r12,%r12
2c54(6): jz 0xc7(%rip)
2c5a(5): call 0xffffed56(%rip)
2c5f(7): lea 0x12042(%rip),%rcx
2c66(7): lea 0x117c5(%rip),%rdx
2c6d(3): mov %rax,%rsi
2c70(5): mov $0x1,%edi
2c75(2): xor %eax,%eax
2c77(5): call 0xffffef09(%rip)
2c7c(2): xor %esi,%esi
2c7e(5): mov $0x5,%edi
2c83(5): call 0xffffeeed(%rip)
2c88(3): test %rax,%rax
2c8b(2): jz 0x1e(%rip)
2c8d(7): lea 0x117ac(%rip),%rsi
2c94(5): mov $0x3,%edx
2c99(3): mov %rax,%rdi
2c9c(5): call 0xffffec64(%rip)
2ca1(2): test %eax,%eax
2ca3(6): jnz 0x10d(%rip)
2ca9(7): lea 0x11794(%rip),%rsi
2cb0(2): xor %edi,%edi
2cb2(5): mov $0x5,%edx
2cb7(5): call 0xffffecf9(%rip)
2cbc(7): lea 0x116f6(%rip),%rcx
2cc3(7): lea 0x11fde(%rip),%rdx
2cca(3): mov %rax,%rsi
2ccd(5): mov $0x1,%edi
2cd2(2): xor %eax,%eax
2cd4(5): call 0xffffeeac(%rip)
2cd9(3): cmp %rbx,%r12
2cdc(7): lea 0x116f5(%rip),%rcx
2ce3(7): lea 0x118c3(%rip),%rbx
2cea(4): cmove %rcx,%rbx
2cee(7): lea 0x12023(%rip),%rsi
2cf5(2): xor %edi,%edi
2cf7(5): mov $0x5,%edx
2cfc(5): call 0xffffecb4(%rip)
2d01(3): mov %rbx,%rcx
2d04(3): mov %rax,%rsi
2d07(3): mov %r12,%rdx
2d0a(5): mov $0x1,%edi
2d0f(2): xor %eax,%eax
2d11(5): call 0xffffee6f(%rip)
2d16(5): jmp 0xfffffcb0(%rip)
2d1b(5): call 0xffffec95(%rip)
2d20(7): lea 0x11f81(%rip),%rcx
2d27(7): lea 0x11704(%rip),%rdx
2d2e(3): mov %rax,%rsi
2d31(5): mov $0x1,%edi
2d36(2): xor %eax,%eax
2d38(5): call 0xffffee48(%rip)
2d3d(2): xor %esi,%esi
2d3f(5): mov $0x5,%edi
2d44(5): call 0xffffee2c(%rip)
2d49(3): test %rax,%rax
2d4c(2): jz 0x1a(%rip)
2d4e(7): lea 0x116eb(%rip),%rsi
2d55(5): mov $0x3,%edx
2d5a(3): mov %rax,%rdi
2d5d(5): call 0xffffeba3(%rip)
2d62(2): test %eax,%eax
2d64(2): jnz 0x45(%rip)
2d66(7): lea 0x116d7(%rip),%rsi
2d6d(5): mov $0x5,%edx
2d72(2): xor %edi,%edi
2d74(7): lea 0x1163e(%rip),%r12
2d7b(7): lea 0x11656(%rip),%rbx
2d82(5): call 0xffffec2e(%rip)
2d87(7): lea 0x1162b(%rip),%rcx
2d8e(7): lea 0x11f13(%rip),%rdx
2d95(3): mov %rax,%rsi
2d98(5): mov $0x1,%edi
2d9d(2): xor %eax,%eax
2d9f(5): call 0xffffede1(%rip)
2da4(5): jmp 0xffffff4a(%rip)
2da9(7): lea 0x11609(%rip),%r12
2db0(7): mov 0x216331(%rip),%r13
2db7(7): lea 0x11f12(%rip),%rsi
2dbe(2): xor %edi,%edi
2dc0(5): mov $0x5,%edx
2dc5(5): call 0xffffebeb(%rip)
2dca(3): mov %r13,%rsi
2dcd(3): mov %rax,%rdi
2dd0(5): call 0xffffecd0(%rip)
2dd5(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2de0(7): mov %rdi,0x2167a9(%rip)
2de7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2df0(7): mov %dil,0x216791(%rip)
2df7(1): ret near (%rsp)

"close_stdout" :
2e00(1): push %rbp
2e01(1): push %rbx
2e02(4): sub $0x8,%rsp
2e06(7): mov 0x2162db(%rip),%rdi
2e0d(5): call 0x113d3(%rip)
2e12(2): test %eax,%eax
2e14(2): jz 0x18(%rip)
2e16(5): call 0xffffeada(%rip)
2e1b(7): cmp $0x0,0x216766(%rip)
2e22(3): mov %rax,%rbx
2e25(2): jz 0x1e(%rip)
2e27(3): cmp $0x20,(%rax)
2e2a(2): jnz 0x19(%rip)
2e2c(7): mov 0x2162ed(%rip),%rdi
2e33(5): call 0x113ad(%rip)
2e38(2): test %eax,%eax
2e3a(2): jnz 0x48(%rip)
2e3c(4): add $0x8,%rsp
2e40(1): pop %rbx
2e41(1): pop %rbp
2e42(1): ret near (%rsp)
2e43(7): lea 0x12012(%rip),%rsi
2e4a(2): xor %edi,%edi
2e4c(5): mov $0x5,%edx
2e51(5): call 0xffffeb5f(%rip)
2e56(7): mov 0x216733(%rip),%rdi
2e5d(3): mov %rax,%rbp
2e60(3): test %rdi,%rdi
2e63(2): jz 0x2a(%rip)
2e65(5): call 0x1cdb(%rip)
2e6a(2): mov (%rbx),%esi
2e6c(7): lea 0x11ff5(%rip),%rdx
2e73(3): mov %rax,%rcx
2e76(3): mov %rbp,%r8
2e79(2): xor %edi,%edi
2e7b(2): xor %eax,%eax
2e7d(5): call 0xffffed33(%rip)
2e82(6): mov 0x2161e8(%rip),%edi
2e88(5): call 0xffffea88(%rip)
2e8d(2): mov (%rbx),%esi
2e8f(7): lea 0x11fd6(%rip),%rdx
2e96(3): mov %rax,%rcx
2e99(2): xor %edi,%edi
2e9b(2): xor %eax,%eax
2e9d(5): call 0xffffed13(%rip)
2ea2(2): jmp 0xffffffe0(%rip)

"fadvise" :
2ec0(3): test %rdi,%rdi
2ec3(2): jz 0x1d(%rip)
2ec5(1): push %rbx
2ec6(2): mov %esi,%ebx
2ec8(5): call 0xffffec18(%rip)
2ecd(2): mov %ebx,%ecx
2ecf(2): xor %edx,%edx
2ed1(2): xor %esi,%esi
2ed3(1): pop %rbx
2ed4(2): mov %eax,%edi
2ed6(5): jmp 0xffffeb9a(%rip)
2edb(5): nop 0x0(%rax,%rax,1)
2ee0(2): REP ret near (%rsp)

"initbuffer" :
2ef0(4): pxor %xmm0,%xmm0
2ef4(8): mov $0x0,0x10(%rdi)
2efc(3): movups %xmm0,(%rdi)
2eff(1): ret near (%rsp)

"readlinebuffer_delim" :
2f00(2): push %r15
2f02(2): push %r14
2f04(2): push %r13
2f06(2): push %r12
2f08(1): push %rbp
2f09(1): push %rbx
2f0a(4): sub $0x18,%rsp
2f0e(4): mov 0x10(%rdi),%r13
2f12(3): mov (%rdi),%r8
2f15(3): add %r13,%r8
2f18(3): test $0x10,(%rsi)
2f1b(6): jnz 0xd5(%rip)
2f21(3): mov %rdi,%r14
2f24(3): mov %rsi,%rbp
2f27(3): mov %r13,%rbx
2f2a(4): movsx %dl,%r15d
2f2e(2): jmp 0xd(%rip)
2f30(3): cmp %r15d,%r12d
2f33(4): lea 0x1(%rsi),%rbx
2f37(2): mov %cl,(%rsi)
2f39(2): jz 0x5d(%rip)
2f3b(4): mov 0x8(%rbp),%rcx
2f3f(4): cmp 0x10(%rbp),%rcx
2f43(2): jnb 0x6d(%rip)
2f45(4): lea 0x1(%rcx),%rax
2f49(4): mov %rax,0x8(%rbp)
2f4d(4): movzx (%rcx),%r12d
2f51(3): mov %r12d,%ecx
2f54(3): cmp %r8,%rbx
2f57(3): mov %rbx,%rsi
2f5a(2): jnz 0xffffffd6(%rip)
2f5c(3): mov (%r14),%rbx
2f5f(3): mov %r14,%rsi
2f62(3): mov %r13,%rdi
2f65(4): mov %dl,0xf(%rsp)
2f69(3): mov %cl,(%rsp)
2f6c(5): call 0x2574(%rip)
2f71(3): mov (%r14),%r8
2f74(4): movzx (%rsp),%ecx
2f78(4): lea 0x0(%rax,%rbx,1),%rsi
2f7c(4): mov %rax,0x10(%r14)
2f80(3): mov %rax,%r13
2f83(5): movzx 0xf(%rsp),%edx
2f88(4): lea 0x1(%rsi),%rbx
2f8c(3): add %rax,%r8
2f8f(3): cmp %r15d,%r12d
2f92(2): mov %cl,(%rsi)
2f94(2): jnz 0xffffffa7(%rip)
2f96(3): sub %r13,%rbx
2f99(3): mov %r14,%rax
2f9c(4): mov %rbx,0x8(%r14)
2fa0(4): add $0x18,%rsp
2fa4(1): pop %rbx
2fa5(1): pop %rbp
2fa6(2): pop %r12
2fa8(2): pop %r13
2faa(2): pop %r14
2fac(2): pop %r15
2fae(1): ret near (%rsp)
2faf(1): nop 
2fb0(3): mov %rbp,%rdi
2fb3(4): mov %dl,0xf(%rsp)
2fb7(4): mov %r8,(%rsp)
2fbb(5): call 0xffffe905(%rip)
2fc0(3): cmp $0xff,%eax
2fc3(3): mov %eax,%r12d
2fc6(4): mov (%rsp),%r8
2fca(5): movzx 0xf(%rsp),%edx
2fcf(2): jnz 0x32(%rip)
2fd1(3): cmp %rbx,%r13
2fd4(2): jz 0x1c(%rip)
2fd6(4): test $0x20,0x0(%rbp)
2fda(2): jnz 0x16(%rip)
2fdc(3): cmp %dl,0xffffffff(%rbx)
2fdf(2): jz 0xffffffb7(%rip)
2fe1(3): mov %r15d,%r12d
2fe4(2): mov %edx,%ecx
2fe6(5): jmp 0xffffff6e(%rip)
2feb(5): nop 0x0(%rax,%rax,1)
2ff0(4): add $0x18,%rsp
2ff4(2): xor %eax,%eax
2ff6(1): pop %rbx
2ff7(1): pop %rbp
2ff8(2): pop %r12
2ffa(2): pop %r13
2ffc(2): pop %r14
2ffe(2): pop %r15
3000(1): ret near (%rsp)
3001(2): mov %eax,%ecx
3003(5): jmp 0xffffff51(%rip)

"readlinebuffer" :
3010(5): mov $0xa,%edx
3015(5): jmp 0xfffffeeb(%rip)

"freebuffer" :
3020(4): mov 0x10(%rdi),%rdi
3024(5): jmp 0xffffe8ac(%rip)

"set_program_name" :
3030(3): test %rdi,%rdi
3033(1): push %rbx
3034(2): jz 0x79(%rip)
3036(5): mov $0x2f,%esi
303b(3): mov %rdi,%rbx
303e(5): call 0xffffe9f2(%rip)
3043(3): test %rax,%rax
3046(2): jz 0x57(%rip)
3048(4): lea 0x1(%rax),%r8
304c(3): mov %r8,%rdx
304f(3): sub %rbx,%rdx
3052(4): cmp $0x6,%rdx
3056(2): jle 0x47(%rip)
3058(4): lea 0xfffffffa(%rax),%rsi
305c(7): lea 0x11e45(%rip),%rdi
3063(5): mov $0x7,%ecx
3068(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
306a(3): setnbe %dl
306d(3): sbb $0x0,%dl
3070(2): test %dl,%dl
3072(2): jnz 0x2b(%rip)
3074(7): lea 0x11e35(%rip),%rdi
307b(5): mov $0x3,%ecx
3080(3): mov %r8,%rsi
3083(3): mov %r8,%rbx
3086(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3088(3): setnbe %dl
308b(3): sbb $0x0,%dl
308e(2): test %dl,%dl
3090(2): jnz 0xd(%rip)
3092(4): lea 0x4(%rax),%rbx
3096(7): mov %rbx,0x216043(%rip)
309d(7): mov %rbx,0x2164f4(%rip)
30a4(7): mov %rbx,0x21605d(%rip)
30ab(1): pop %rbx
30ac(1): ret near (%rsp)
30ad(7): mov 0x21606c(%rip),%rcx
30b4(7): lea 0x11db5(%rip),%rdi
30bb(5): mov $0x37,%edx
30c0(5): mov $0x1,%esi
30c5(5): call 0xffffeb5b(%rip)
30ca(5): call 0xffffe816(%rip)

"gettext_quote.part.1" :
30d0(1): push %rbp
30d1(1): push %rbx
30d2(3): mov %rdi,%rbp
30d5(2): mov %esi,%ebx
30d7(4): sub $0x8,%rsp
30db(5): call 0x111e5(%rip)
30e0(3): movzx (%rax),%edx
30e3(3): and $0xdf,%edx
30e6(3): cmp $0x55,%dl
30e9(2): jz 0x77(%rip)
30eb(3): cmp $0x47,%dl
30ee(2): jz 0x22(%rip)
30f0(7): lea 0x11dcc(%rip),%rax
30f7(7): lea 0x11dc7(%rip),%rdx
30fe(3): cmp $0x9,%ebx
3101(4): cmovne %rdx,%rax
3105(4): add $0x8,%rsp
3109(1): pop %rbx
310a(1): pop %rbp
310b(1): ret near (%rsp)
310c(4): nop 0x0(%rax)
3110(4): movzx 0x1(%rax),%edx
3114(3): and $0xdf,%edx
3117(3): cmp $0x42,%dl
311a(2): jnz 0xffffffd6(%rip)
311c(4): cmp $0x31,0x2(%rax)
3120(2): jnz 0xffffffd0(%rip)
3122(4): cmp $0x38,0x3(%rax)
3126(2): jnz 0xffffffca(%rip)
3128(4): cmp $0x30,0x4(%rax)
312c(2): jnz 0xffffffc4(%rip)
312e(4): cmp $0x33,0x5(%rax)
3132(2): jnz 0xffffffbe(%rip)
3134(4): cmp $0x30,0x6(%rax)
3138(2): jnz 0xffffffb8(%rip)
313a(4): cmp $0x0,0x7(%rax)
313e(2): jnz 0xffffffb2(%rip)
3140(4): cmp $0x60,0x0(%rbp)
3144(7): lea 0x11d71(%rip),%rax
314b(7): lea 0x11d6e(%rip),%rdx
3152(4): cmovne %rdx,%rax
3156(4): add $0x8,%rsp
315a(1): pop %rbx
315b(1): pop %rbp
315c(1): ret near (%rsp)
315d(3): nop (%rax)
3160(4): movzx 0x1(%rax),%edx
3164(3): and $0xdf,%edx
3167(3): cmp $0x54,%dl
316a(2): jnz 0xffffff86(%rip)
316c(4): movzx 0x2(%rax),%edx
3170(3): and $0xdf,%edx
3173(3): cmp $0x46,%dl
3176(6): jnz 0xffffff7a(%rip)
317c(4): cmp $0x2d,0x3(%rax)
3180(6): jnz 0xffffff70(%rip)
3186(4): cmp $0x38,0x4(%rax)
318a(6): jnz 0xffffff66(%rip)
3190(4): cmp $0x0,0x5(%rax)
3194(6): jnz 0xffffff5c(%rip)
319a(4): cmp $0x60,0x0(%rbp)
319e(7): lea 0x11d0f(%rip),%rax
31a5(7): lea 0x11d0c(%rip),%rdx
31ac(4): cmovne %rdx,%rax
31b0(4): add $0x8,%rsp
31b4(1): pop %rbx
31b5(1): pop %rbp
31b6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
31c0(2): push %r15
31c2(2): push %r14
31c4(3): mov %r8d,%r15d
31c7(2): push %r13
31c9(2): push %r12
31cb(3): mov %rdi,%r14
31ce(1): push %rbp
31cf(1): push %rbx
31d0(3): mov %r9d,%ebx
31d3(3): mov %rsi,%r13
31d6(3): mov %rcx,%rbp
31d9(3): and $0x2,%ebx
31dc(7): sub $0xb8,%rsp
31e3(8): mov 0xf0(%rsp),%rax
31eb(5): mov %rdx,0x10(%rsp)
31f0(5): mov %r8d,0x8(%rsp)
31f5(5): mov %r9d,0x78(%rsp)
31fa(5): mov %rax,0x20(%rsp)
31ff(8): mov 0xf8(%rsp),%rax
3207(5): mov %rax,0x68(%rsp)
320c(8): mov 0x100(%rsp),%rax
3214(5): mov %rax,0x60(%rsp)
3219(9): mov $0x28,%rax
3222(8): mov %rax,0xa8(%rsp)
322a(2): xor %eax,%eax
322c(5): call 0xffffe794(%rip)
3231(4): cmp $0xa,%r15d
3235(5): mov %rax,0x58(%rsp)
323a(6): jnbe 0x11b5(%rip)
3240(7): lea 0x11cd9(%rip),%rcx
3247(3): mov %r15d,%edx
324a(4): movsxd 0x0(%rcx,%rdx,4),%rax
324e(3): add %rcx,%rax
3251(2): jmp %rax
3253(5): mov $0x1,0xe(%rsp)
3258(5): mov $0x0,0x7c(%rsp)
325d(3): xor %r12d,%r12d
3260(9): mov $0x0,0x50(%rsp)
3269(5): mov $0x1,0xf(%rsp)
326e(5): mov $0x0,0xd(%rsp)
3273(7): lea 0x11c4b(%rip),%rax
327a(9): mov $0x1,0x18(%rsp)
3283(3): xor %r15d,%r15d
3286(8): mov $0x2,0x8(%rsp)
328e(5): mov %rax,0x48(%rsp)
3293(3): xor %r11d,%r11d
3296(3): mov %rbp,%rax
3299(3): mov %r12d,%r8d
329c(3): mov %r11,%rbp
329f(3): mov %rax,%r11
32a2(6): nop 0x0(%rax,%rax,1)
32a8(3): cmp %rbp,%r11
32ab(4): setnz %r12b
32af(4): cmp $0xffffffff,%r11
32b3(2): jnz 0xf(%rip)
32b5(5): mov 0x10(%rsp),%rax
32ba(4): cmp $0x0,0x0(%rax,%rbp,1)
32be(4): setnz %r12b
32c2(3): test %r12b,%r12b
32c5(6): jz 0x65b(%rip)
32cb(5): cmp $0x2,0x8(%rsp)
32d0(5): mov 0x10(%rsp),%rdi
32d5(4): lea 0x0(%rdi,%rbp,1),%r9
32d9(3): setnz %al
32dc(4): and 0xd(%rsp),%al
32e0(3): mov %eax,%r10d
32e3(6): jz 0xad(%rip)
32e9(5): mov 0x18(%rsp),%rax
32ee(3): test %rax,%rax
32f1(6): jz 0x42f(%rip)
32f7(4): cmp $0xffffffff,%r11
32fb(5): lea 0x0(%rbp,%rax,1),%rbx
3300(2): jnz 0x30(%rip)
3302(4): cmp $0x1,%rax
3306(2): jbe 0x2a(%rip)
3308(5): mov %r8b,0x38(%rsp)
330d(5): mov %r10b,0x30(%rsp)
3312(5): mov %r9,0x28(%rsp)
3317(5): call 0xffffe6b9(%rip)
331c(6): movzx 0x38(%rsp),%r8d
3322(6): movzx 0x30(%rsp),%r10d
3328(3): mov %rax,%r11
332b(5): mov 0x28(%rsp),%r9
3330(3): cmp %r11,%rbx
3333(5): mov %r10b,0x28(%rsp)
3338(6): jnbe 0x5b8(%rip)
333e(5): mov 0x18(%rsp),%rdx
3343(5): mov 0x48(%rsp),%rsi
3348(3): mov %r9,%rdi
334b(5): mov %r11,0x40(%rsp)
3350(5): mov %r8b,0x38(%rsp)
3355(5): mov %r9,0x30(%rsp)
335a(5): call 0xffffe726(%rip)
335f(2): test %eax,%eax
3361(5): mov 0x30(%rsp),%r9
3366(6): movzx 0x38(%rsp),%r8d
336c(5): mov 0x40(%rsp),%r11
3371(6): jnz 0x57f(%rip)
3377(5): cmp $0x0,0xf(%rsp)
337c(6): movzx 0x28(%rsp),%r10d
3382(6): jnz 0xf83(%rip)
3388(8): nop 0x0(%rax,%rax,1)
3390(4): movzx (%r9),%ebx
3394(3): cmp $0x7e,%bl
3397(6): jnbe 0x321(%rip)
339d(7): lea 0x11ba8(%rip),%rcx
33a4(3): movzx %bl,%edx
33a7(4): movsxd 0x0(%rcx,%rdx,4),%rax
33ab(3): add %rcx,%rax
33ae(2): jmp %rax
33b0(3): xor %r10d,%r10d
33b3(4): cmp $0x1,%r11
33b7(3): setnz %al
33ba(4): cmp $0xffffffff,%r11
33be(2): jnz 0xe(%rip)
33c0(5): mov 0x10(%rsp),%rax
33c5(4): cmp $0x0,0x1(%rax)
33c9(3): setnz %al
33cc(5): cmp $0x2,0x8(%rsp)
33d1(3): setz %dl
33d4(2): test %al,%al
33d6(6): jz 0x252(%rip)
33dc(3): xor %r12d,%r12d
33df(2): xor %eax,%eax
33e1(7): nop 0x0(%rax)
33e8(5): cmp $0x1,0xd(%rsp)
33ed(6): jnz 0x115(%rip)
33f3(2): test %dl,%dl
33f5(6): jnz 0x10d(%rip)
33fb(5): mov 0x20(%rsp),%rsi
3400(3): test %rsi,%rsi
3403(2): jz 0x16(%rip)
3405(2): mov %ebx,%edx
3407(3): shr $0x5,%dl
340a(3): movzx %dl,%edx
340d(3): mov 0x0(%rsi,%rdx,4),%edx
3410(3): bt %ebx,%edx
3413(6): jb 0x150(%rip)
3419(3): test %r10b,%r10b
341c(6): jnz 0x147(%rip)
3422(3): xor $0x1,%eax
3425(4): add $0x1,%rbp
3429(3): and %r8d,%eax
342c(2): test %al,%al
342e(2): jz 0x22(%rip)
3430(3): cmp %r15,%r13
3433(2): jbe 0x7(%rip)
3435(5): mov $0x27,0x0(%r14,%r15,1)
343a(4): lea 0x1(%r15),%rax
343e(3): cmp %rax,%r13
3441(2): jbe 0x8(%rip)
3443(6): mov $0x27,0x1(%r14,%r15,1)
3449(4): add $0x2,%r15
344d(3): xor %r8d,%r8d
3450(3): cmp %r13,%r15
3453(2): jnb 0x6(%rip)
3455(4): mov %bl,0x0(%r14,%r15,1)
3459(5): movzx 0xe(%rsp),%edi
345e(4): add $0x1,%r15
3462(5): mov $0x0,%eax
3467(3): test %r12b,%r12b
346a(3): cmove %eax,%edi
346d(5): mov %dil,0xe(%rsp)
3472(5): jmp 0xfffffe36(%rip)
3477(9): nop 0x0(%rax,%rax,1)
3480(3): xor %r10d,%r10d
3483(4): mov 0x8(%rsp),%eax
3487(3): cmp $0x2,%eax
348a(6): jz 0x5be(%rip)
3490(3): cmp $0x5,%eax
3493(6): jz 0x575(%rip)
3499(3): cmp $0x2,%eax
349c(5): mov $0x3f,%ebx
34a1(3): setz %dl
34a4(3): xor %r12d,%r12d
34a7(2): xor %eax,%eax
34a9(5): jmp 0xffffff3f(%rip)
34ae(2): nop 
34b0(3): xor %r10d,%r10d
34b3(5): cmp $0x2,0x8(%rsp)
34b8(6): jz 0x508(%rip)
34be(5): mov %r12b,0x7c(%rsp)
34c3(2): xor %edx,%edx
34c5(2): xor %eax,%eax
34c7(5): mov $0x27,%ebx
34cc(5): jmp 0xffffff1c(%rip)
34d1(7): nop 0x0(%rax)
34d8(5): mov $0x9,%edx
34dd(5): mov $0x74,%ebx
34e2(5): cmp $0x2,0x8(%rsp)
34e7(3): setz %al
34ea(4): and 0xf(%rsp),%al
34ee(6): jnz 0x150(%rip)
34f4(5): cmp $0x0,0xd(%rsp)
34f9(2): jnz 0x67(%rip)
34fb(2): mov %edx,%ebx
34fd(3): xor %r12d,%r12d
3500(2): xor %eax,%eax
3502(5): cmp $0x0,0xf(%rsp)
3507(6): jnz 0xfffffef4(%rip)
350d(5): jmp 0xffffff0c(%rip)
3512(6): nop 0x0(%rax,%rax,1)
3518(5): mov $0x8,%edx
351d(5): mov $0x62,%ebx
3522(2): jmp 0xffffffd2(%rip)
3524(4): nop 0x0(%rax)
3528(5): cmp $0x2,0x8(%rsp)
352d(6): jz 0x3d3(%rip)
3533(5): cmp $0x0,0xd(%rsp)
3538(6): jz 0x218(%rip)
353e(5): cmp $0x0,0xf(%rsp)
3543(6): jz 0x20d(%rip)
3549(6): cmp $0x0,0x18(%rsp)
354f(6): jnz 0x3bc(%rip)
3555(5): mov $0x5c,%ebx
355a(6): nop 0x0(%rax,%rax,1)
3560(3): xor %r12d,%r12d
3563(5): cmp $0x2,0x8(%rsp)
3568(3): setz %dl
356b(5): cmp $0x0,0xf(%rsp)
3570(2): mov %edx,%eax
3572(6): jnz 0x856(%rip)
3578(3): mov %r8d,%eax
357b(3): xor $0x1,%eax
357e(2): and %dl,%al
3580(2): jz 0x31(%rip)
3582(3): cmp %r15,%r13
3585(2): jbe 0x7(%rip)
3587(5): mov $0x27,0x0(%r14,%r15,1)
358c(4): lea 0x1(%r15),%rdx
3590(3): cmp %rdx,%r13
3593(2): jbe 0x8(%rip)
3595(6): mov $0x24,0x1(%r14,%r15,1)
359b(4): lea 0x2(%r15),%rdx
359f(3): cmp %rdx,%r13
35a2(2): jbe 0x8(%rip)
35a4(6): mov $0x27,0x2(%r14,%r15,1)
35aa(4): add $0x3,%r15
35ae(3): mov %eax,%r8d
35b1(3): cmp %r15,%r13
35b4(2): jbe 0x7(%rip)
35b6(5): mov $0x5c,0x0(%r14,%r15,1)
35bb(4): add $0x1,%r15
35bf(4): add $0x1,%rbp
35c3(5): jmp 0xfffffe8d(%rip)
35c8(8): nop 0x0(%rax,%rax,1)
35d0(5): cmp $0x0,0xd(%rsp)
35d5(6): jnz 0x1ce(%rip)
35db(2): xor %edx,%edx
35dd(5): test $0x1,0x78(%rsp)
35e2(6): jz 0xffffff19(%rip)
35e8(4): add $0x1,%rbp
35ec(5): jmp 0xfffffcbc(%rip)
35f1(7): nop 0x0(%rax)
35f8(5): cmp $0x2,0x8(%rsp)
35fd(3): setz %dl
3600(2): xor %eax,%eax
3602(5): jmp 0xfffffde6(%rip)
3607(9): nop 0x0(%rax,%rax,1)
3610(5): mov $0x7,%edx
3615(5): mov $0x61,%ebx
361a(5): jmp 0xfffffeda(%rip)
361f(1): nop 
3620(5): cmp $0x2,0x8(%rsp)
3625(3): setz %dl
3628(3): test %rbp,%rbp
362b(6): jnz 0xfffffdb1(%rip)
3631(5): movzx 0xf(%rsp),%eax
3636(2): and %dl,%al
3638(6): jz 0xfffffdb0(%rip)
363e(3): mov %r11,%rbp
3641(8): mov $0x2,0x8(%rsp)
3649(5): jmp 0x700(%rip)
364e(2): nop 
3650(5): cmp $0x2,0x8(%rsp)
3655(3): setz %dl
3658(3): xor %r12d,%r12d
365b(2): jmp 0xffffffd6(%rip)
365d(3): nop (%rax)
3660(5): cmp $0x2,0x8(%rsp)
3665(5): mov $0x20,%ebx
366a(3): setz %dl
366d(2): jmp 0xffffffc4(%rip)
366f(1): nop 
3670(5): mov $0xd,%edx
3675(5): mov $0x72,%ebx
367a(5): jmp 0xfffffe68(%rip)
367f(1): nop 
3680(5): mov $0xc,%edx
3685(5): mov $0x66,%ebx
368a(5): jmp 0xfffffe6a(%rip)
368f(1): nop 
3690(5): mov $0xb,%edx
3695(5): mov $0x76,%ebx
369a(5): jmp 0xfffffe5a(%rip)
369f(1): nop 
36a0(5): mov $0xa,%edx
36a5(5): mov $0x6e,%ebx
36aa(5): jmp 0xfffffe38(%rip)
36af(1): nop 
36b0(3): xor %r10d,%r10d
36b3(5): nop 0x0(%rax,%rax,1)
36b8(6): cmp $0x1,0x58(%rsp)
36be(6): jnz 0x3aa(%rip)
36c4(5): mov %r11,0x38(%rsp)
36c9(5): mov %r8b,0x30(%rsp)
36ce(5): mov %r10b,0x28(%rsp)
36d3(5): call 0xffffe59d(%rip)
36d8(3): mov (%rax),%rcx
36db(3): movzx %bl,%edx
36de(6): movzx 0x28(%rsp),%r10d
36e4(6): movzx 0x30(%rsp),%r8d
36ea(5): mov 0x38(%rsp),%r11
36ef(5): mov $0x1,%edi
36f4(4): movzx 0x0(%rcx,%rdx,2),%eax
36f8(4): and $0x4000,%ax
36fc(4): setnz %r12b
3700(3): setz %al
3703(4): and 0xd(%rsp),%al
3707(2): test %al,%al
3709(6): jnz 0x998(%rip)
370f(5): cmp $0x2,0x8(%rsp)
3714(3): setz %dl
3717(5): jmp 0xfffffcd1(%rip)
371c(4): nop 0x0(%rax)
3720(4): movzx (%r9),%ebx
3724(3): cmp $0x7e,%bl
3727(2): jnbe 0xffffff89(%rip)
3729(7): lea 0x11a18(%rip),%rcx
3730(3): movzx %bl,%edx
3733(4): movsxd 0x0(%rcx,%rdx,4),%rax
3737(3): add %rcx,%rax
373a(2): jmp %rax
373c(4): nop 0x0(%rax)
3740(3): xor %r10d,%r10d
3743(5): cmp $0x0,0xd(%rsp)
3748(6): jnz 0xfffffdf6(%rip)
374e(2): nop 
3750(5): mov $0x5c,%edx
3755(5): mov $0x5c,%ebx
375a(5): jmp 0xfffffd9a(%rip)
375f(1): nop 
3760(5): mov $0xc,%edx
3765(3): xor %r10d,%r10d
3768(5): mov $0x66,%ebx
376d(5): jmp 0xfffffd87(%rip)
3772(6): nop 0x0(%rax,%rax,1)
3778(5): mov $0xa,%edx
377d(3): xor %r10d,%r10d
3780(5): mov $0x6e,%ebx
3785(5): jmp 0xfffffd5d(%rip)
378a(6): nop 0x0(%rax,%rax,1)
3790(5): mov $0x61,%ebx
3795(5): jmp 0xfffffdcb(%rip)
379a(6): nop 0x0(%rax,%rax,1)
37a0(3): xor %r10d,%r10d
37a3(5): cmp $0x2,0x8(%rsp)
37a8(3): setz %dl
37ab(5): cmp $0x0,0xf(%rsp)
37b0(6): jnz 0xb9a(%rip)
37b6(3): mov %r8d,%eax
37b9(3): mov %r15,%rcx
37bc(3): xor $0x1,%eax
37bf(2): and %dl,%al
37c1(2): jz 0x2f(%rip)
37c3(3): cmp %r15,%r13
37c6(2): jbe 0x7(%rip)
37c8(5): mov $0x27,0x0(%r14,%r15,1)
37cd(4): lea 0x1(%r15),%rcx
37d1(3): cmp %rcx,%r13
37d4(2): jbe 0x8(%rip)
37d6(6): mov $0x24,0x1(%r14,%r15,1)
37dc(4): lea 0x2(%r15),%rcx
37e0(3): cmp %rcx,%r13
37e3(6): jnbe 0x636(%rip)
37e9(4): lea 0x3(%r15),%rcx
37ed(3): mov %eax,%r8d
37f0(3): cmp %rcx,%r13
37f3(2): jbe 0x7(%rip)
37f5(5): mov $0x5c,0x0(%r14,%rcx,1)
37fa(5): cmp $0x2,0x8(%rsp)
37ff(4): lea 0x1(%rcx),%r15
3803(6): jz 0x606(%rip)
3809(4): lea 0x1(%rbp),%rax
380d(3): cmp %r11,%rax
3810(2): jnb 0x1b(%rip)
3812(5): mov 0x10(%rsp),%rax
3817(5): movzx 0x1(%rax,%rbp,1),%eax
381c(4): mov %al,0x28(%rsp)
3820(3): sub $0x30,%eax
3823(2): cmp $0x9,%al
3825(6): jbe 0x834(%rip)
382b(3): mov %r12d,%eax
382e(5): mov $0x30,%ebx
3833(3): xor %r12d,%r12d
3836(5): jmp 0xfffffbb2(%rip)
383b(5): nop 0x0(%rax,%rax,1)
3840(5): cmp $0x2,0x8(%rsp)
3845(3): mov %r10d,%r12d
3848(3): setz %dl
384b(3): xor %r10d,%r10d
384e(2): xor %eax,%eax
3850(5): jmp 0xfffffb98(%rip)
3855(3): nop (%rax)
3858(5): cmp $0x2,0x8(%rsp)
385d(3): setz %dl
3860(3): xor %r10d,%r10d
3863(5): jmp 0xfffffdc5(%rip)
3868(8): nop 0x0(%rax,%rax,1)
3870(5): cmp $0x2,0x8(%rsp)
3875(3): setz %dl
3878(3): xor %r10d,%r10d
387b(3): xor %r12d,%r12d
387e(5): jmp 0xfffffdb3(%rip)
3883(5): nop 0x0(%rax,%rax,1)
3888(5): cmp $0x2,0x8(%rsp)
388d(3): mov %r10d,%r12d
3890(5): mov $0x20,%ebx
3895(3): setz %dl
3898(3): xor %r10d,%r10d
389b(5): jmp 0xfffffd96(%rip)
38a0(5): mov $0xd,%edx
38a5(3): xor %r10d,%r10d
38a8(5): mov $0x72,%ebx
38ad(5): jmp 0xfffffc35(%rip)
38b2(6): nop 0x0(%rax,%rax,1)
38b8(5): mov $0x76,%ebx
38bd(5): jmp 0xfffffca3(%rip)
38c2(6): nop 0x0(%rax,%rax,1)
38c8(5): mov $0x9,%edx
38cd(3): xor %r10d,%r10d
38d0(5): mov $0x74,%ebx
38d5(5): jmp 0xfffffc0d(%rip)
38da(6): nop 0x0(%rax,%rax,1)
38e0(5): mov $0x62,%ebx
38e5(5): jmp 0xfffffc7b(%rip)
38ea(6): nop 0x0(%rax,%rax,1)
38f0(3): xor %r10d,%r10d
38f3(5): jmp 0xfffffa9d(%rip)
38f8(8): nop 0x0(%rax,%rax,1)
3900(5): cmp $0x0,0xf(%rsp)
3905(6): jnz 0x96b(%rip)
390b(4): add $0x1,%rbp
390f(3): mov %r8d,%eax
3912(3): xor %r12d,%r12d
3915(5): mov $0x5c,%ebx
391a(5): jmp 0xfffffb12(%rip)
391f(1): nop 
3920(5): cmp $0x2,0x8(%rsp)
3925(5): movzx 0xf(%rsp),%ebx
392a(3): mov %r8d,%r12d
392d(3): mov %r11,%rbp
3930(3): setz %dl
3933(2): mov %ebx,%eax
3935(3): test %r15,%r15
3938(3): setz %cl
393b(2): and %edx,%eax
393d(2): and %cl,%al
393f(6): jnz 0xa67(%rip)
3945(2): mov %ebx,%eax
3947(3): xor $0x1,%eax
394a(2): and %al,%dl
394c(6): jz 0x970(%rip)
3952(5): cmp $0x0,0x7c(%rsp)
3957(6): jz 0x963(%rip)
395d(5): cmp $0x0,0xe(%rsp)
3962(6): jnz 0x9fb(%rip)
3968(3): test %r13,%r13
396b(3): setz %al
396e(6): cmp $0x0,0x50(%rsp)
3974(3): setnz %dl
3977(2): and %dl,%al
3979(6): jz 0xa23(%rip)
397f(5): mov 0x50(%rsp),%r13
3984(7): lea 0x1153a(%rip),%rbx
398b(4): mov $0x27,(%r14)
398f(8): mov $0x2,0x8(%rsp)
3997(6): mov $0x1,%r15d
399d(9): mov $0x1,0x18(%rsp)
39a6(5): mov $0x0,0xf(%rsp)
39ab(5): mov %rbx,0x48(%rsp)
39b0(4): mov %al,0x7c(%rsp)
39b4(5): jmp 0xfffff8df(%rip)
39b9(7): nop 0x0(%rax)
39c0(5): cmp $0x0,0xf(%rsp)
39c5(6): jnz 0x8ab(%rip)
39cb(3): test %r13,%r13
39ce(6): jz 0x402(%rip)
39d4(2): xor %edx,%edx
39d6(6): cmp $0x0,0x50(%rsp)
39dc(6): jnz 0x3f4(%rip)
39e2(5): mov %r13,0x50(%rsp)
39e7(4): add $0x3,%r15
39eb(2): xor %eax,%eax
39ed(5): mov %r12b,0x7c(%rsp)
39f2(3): xor %r8d,%r8d
39f5(3): mov %rdx,%r13
39f8(5): mov $0x27,%ebx
39fd(5): jmp 0xfffffa1c(%rip)
3a02(6): nop 0x0(%rax,%rax,1)
3a08(5): test $0x4,0x78(%rsp)
3a0d(2): jz 0x23(%rip)
3a0f(4): lea 0x2(%rbp),%rcx
3a13(3): cmp %r11,%rcx
3a16(2): jnb 0x1a(%rip)
3a18(5): mov 0x10(%rsp),%rax
3a1d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3a22(6): jz 0x790(%rip)
3a28(8): nop 0x0(%rax,%rax,1)
3a30(2): xor %edx,%edx
3a32(3): xor %r12d,%r12d
3a35(2): xor %eax,%eax
3a37(5): mov $0x3f,%ebx
3a3c(5): jmp 0xfffff9ac(%rip)
3a41(7): nop 0x0(%rax)
3a48(5): cmp $0x0,0xf(%rsp)
3a4d(6): jnz 0x823(%rip)
3a53(3): xor %r12d,%r12d
3a56(2): xor %eax,%eax
3a58(5): mov $0x3f,%ebx
3a5d(5): jmp 0xfffff9bc(%rip)
3a62(6): nop 0x0(%rax,%rax,1)
3a68(8): lea 0xa0(%rsp),%rax
3a70(4): cmp $0xffffffff,%r11
3a74(c): mov $0x0,0xa0(%rsp)
3a80(5): mov %rax,0x28(%rsp)
3a85(2): jnz 0x2f(%rip)
3a87(5): mov 0x10(%rsp),%rdi
3a8c(5): mov %r8b,0x40(%rsp)
3a91(5): mov %r10b,0x38(%rsp)
3a96(5): mov %r9,0x30(%rsp)
3a9b(5): call 0xffffdf35(%rip)
3aa0(6): movzx 0x40(%rsp),%r8d
3aa6(6): movzx 0x38(%rsp),%r10d
3aac(3): mov %rax,%r11
3aaf(5): mov 0x30(%rsp),%r9
3ab4(8): lea 0x9c(%rsp),%rax
3abc(2): xor %ecx,%ecx
3abe(4): mov %bl,0x7e(%rsp)
3ac2(5): mov %r8b,0x7d(%rsp)
3ac7(3): mov %rcx,%rbx
3aca(8): mov %r9,0x88(%rsp)
3ad2(5): mov %rax,0x38(%rsp)
3ad7(5): mov %r10b,0x7f(%rsp)
3adc(8): mov %r15,0x80(%rsp)
3ae4(5): mov %r14,0x40(%rsp)
3ae9(5): mov %r13,0x70(%rsp)
3aee(5): mov %r11,0x30(%rsp)
3af3(5): mov 0x10(%rsp),%rax
3af8(5): lea 0x0(%rbp,%rbx,1),%r14
3afd(5): mov 0x30(%rsp),%rdx
3b02(5): mov 0x28(%rsp),%rcx
3b07(5): mov 0x38(%rsp),%rdi
3b0c(4): lea 0x0(%rax,%r14,1),%r13
3b10(3): sub %r14,%rdx
3b13(3): mov %r13,%rsi
3b16(5): call 0x242a(%rip)
3b1b(3): test %rax,%rax
3b1e(3): mov %rax,%r15
3b21(2): jz 0x50(%rip)
3b23(4): cmp $0xffffffff,%rax
3b27(6): jz 0x61e(%rip)
3b2d(4): cmp $0xfffffffe,%rax
3b31(6): jz 0x5a0(%rip)
3b37(5): cmp $0x2,0x8(%rsp)
3b3c(3): setz %al
3b3f(4): and 0xf(%rsp),%al
3b43(6): jnz 0x19d(%rip)
3b49(7): mov 0x9c(%rsp),%edi
3b50(5): call 0xffffe100(%rip)
3b55(5): mov 0x28(%rsp),%rdi
3b5a(2): test %eax,%eax
3b5c(5): mov $0x0,%eax
3b61(4): cmove %eax,%r12d
3b65(3): add %r15,%rbx
3b68(5): call 0xffffe0d8(%rip)
3b6d(2): test %eax,%eax
3b6f(2): jz 0xffffff84(%rip)
3b71(3): mov %r12d,%edx
3b74(3): mov %rbx,%rdi
3b77(6): movzx 0x7d(%rsp),%r8d
3b7d(3): xor $0x1,%edx
3b80(5): movzx 0x7e(%rsp),%ebx
3b85(6): movzx 0x7f(%rsp),%r10d
3b8b(4): and 0xd(%rsp),%dl
3b8f(8): mov 0x80(%rsp),%r15
3b97(5): mov 0x40(%rsp),%r14
3b9c(5): mov 0x70(%rsp),%r13
3ba1(5): mov 0x30(%rsp),%r11
3ba6(4): cmp $0x1,%rdi
3baa(6): jbe 0x601(%rip)
3bb0(3): mov %rdi,%rcx
3bb3(2): xor %esi,%esi
3bb5(6): movzx 0xf(%rsp),%r9d
3bbb(3): add %rbp,%rcx
3bbe(5): mov 0x10(%rsp),%rdi
3bc3(5): jmp 0xbb(%rip)
3bc8(8): nop 0x0(%rax,%rax,1)
3bd0(5): cmp $0x2,0x8(%rsp)
3bd5(3): setz %al
3bd8(3): test %r9b,%r9b
3bdb(6): jnz 0x4b5(%rip)
3be1(3): mov %r8d,%esi
3be4(3): xor $0x1,%esi
3be7(3): and %sil,%al
3bea(2): jz 0x31(%rip)
3bec(3): cmp %r15,%r13
3bef(2): jbe 0x7(%rip)
3bf1(5): mov $0x27,0x0(%r14,%r15,1)
3bf6(4): lea 0x1(%r15),%rsi
3bfa(3): cmp %rsi,%r13
3bfd(2): jbe 0x8(%rip)
3bff(6): mov $0x24,0x1(%r14,%r15,1)
3c05(4): lea 0x2(%r15),%rsi
3c09(3): cmp %rsi,%r13
3c0c(2): jbe 0x8(%rip)
3c0e(6): mov $0x27,0x2(%r14,%r15,1)
3c14(4): add $0x3,%r15
3c18(3): mov %eax,%r8d
3c1b(3): cmp %r15,%r13
3c1e(2): jbe 0x7(%rip)
3c20(5): mov $0x5c,0x0(%r14,%r15,1)
3c25(4): lea 0x1(%r15),%rax
3c29(3): cmp %rax,%r13
3c2c(2): jbe 0xf(%rip)
3c2e(2): mov %ebx,%eax
3c30(3): shr $0x6,%al
3c33(3): add $0x30,%eax
3c36(5): mov %al,0x1(%r14,%r15,1)
3c3b(4): lea 0x2(%r15),%rax
3c3f(3): cmp %rax,%r13
3c42(2): jbe 0x12(%rip)
3c44(2): mov %ebx,%eax
3c46(3): shr $0x3,%al
3c49(3): and $0x7,%eax
3c4c(3): add $0x30,%eax
3c4f(5): mov %al,0x2(%r14,%r15,1)
3c54(3): and $0x7,%ebx
3c57(4): add $0x1,%rbp
3c5b(4): add $0x3,%r15
3c5f(3): add $0x30,%ebx
3c62(3): cmp %rcx,%rbp
3c65(6): jnb 0xfffff7eb(%rip)
3c6b(2): mov %edx,%esi
3c6d(3): cmp %r15,%r13
3c70(2): jbe 0x6(%rip)
3c72(4): mov %bl,0x0(%r14,%r15,1)
3c76(4): movzx 0x0(%rdi,%rbp,1),%ebx
3c7a(4): add $0x1,%r15
3c7e(2): test %dl,%dl
3c80(6): jnz 0xffffff50(%rip)
3c86(2): mov %esi,%eax
3c88(3): xor $0x1,%eax
3c8b(3): and %r8d,%eax
3c8e(3): test %r10b,%r10b
3c91(2): jz 0x10(%rip)
3c93(3): cmp %r15,%r13
3c96(2): jbe 0x7(%rip)
3c98(5): mov $0x5c,0x0(%r14,%r15,1)
3c9d(4): add $0x1,%r15
3ca1(4): add $0x1,%rbp
3ca5(3): cmp %rcx,%rbp
3ca8(6): jnb 0xfffff784(%rip)
3cae(2): test %al,%al
3cb0(6): jz 0x3fe(%rip)
3cb6(3): cmp %r15,%r13
3cb9(2): jbe 0x7(%rip)
3cbb(5): mov $0x27,0x0(%r14,%r15,1)
3cc0(4): lea 0x1(%r15),%rax
3cc4(3): cmp %rax,%r13
3cc7(2): jbe 0x8(%rip)
3cc9(6): mov $0x27,0x1(%r14,%r15,1)
3ccf(4): add $0x2,%r15
3cd3(3): xor %r10d,%r10d
3cd6(3): xor %r8d,%r8d
3cd9(2): jmp 0xffffff94(%rip)
3cdb(5): nop 0x0(%rax,%rax,1)
3ce0(4): cmp $0x1,%r15
3ce4(6): jz 0xfffffe65(%rip)
3cea(5): mov 0x10(%rsp),%rdi
3cef(4): lea 0x0(%rdi,%r15,1),%rcx
3cf3(5): lea 0x1(%rdi,%r14,1),%rdx
3cf8(4): lea 0x0(%rcx,%r14,1),%r8
3cfc(2): jmp 0x11(%rip)
3cfe(2): nop 
3d00(4): add $0x1,%rdx
3d04(3): cmp %rdx,%r8
3d07(6): jz 0xfffffe42(%rip)
3d0d(3): movzx (%rdx),%ecx
3d10(3): sub $0x5b,%ecx
3d13(3): cmp $0x21,%cl
3d16(2): jnbe 0xffffffea(%rip)
3d18(5): mov $0x1,%esi
3d1d(3): shl/sal %cl,%rsi
3d20(3): mov %rsi,%rcx
3d23(a): mov $0x8589934635,%rsi
3d2d(3): test %rsi,%rcx
3d30(2): jz 0xffffffd0(%rip)
3d32(5): mov 0x40(%rsp),%r14
3d37(5): mov 0x70(%rsp),%r13
3d3c(5): mov 0x30(%rsp),%rbp
3d41(8): mov $0x2,0x8(%rsp)
3d49(5): cmp $0x0,0xd(%rsp)
3d4e(2): jz 0x12(%rip)
3d50(2): test %al,%al
3d52(5): mov $0x4,%eax
3d57(5): cmove 0x8(%rsp),%eax
3d5c(4): mov %eax,0x8(%rsp)
3d60(4): sub $0x8,%rsp
3d64(3): mov %rbp,%rcx
3d67(3): mov %r13,%rsi
3d6a(4): push 0x68(%rsp)
3d6e(4): push 0x78(%rsp)
3d72(3): mov %r14,%rdi
3d75(2): push $0x0
3d77(8): mov 0x98(%rsp),%r9d
3d7f(5): mov 0x28(%rsp),%r8d
3d84(5): mov 0x30(%rsp),%rdx
3d89(4): and $0xfd,%r9d
3d8d(5): call 0xfffff433(%rip)
3d92(4): add $0x20,%rsp
3d96(3): mov %rax,%r15
3d99(8): mov 0xa8(%rsp),%rbx
3da1(9): xor $0x28,%rbx
3daa(3): mov %r15,%rax
3dad(6): jnz 0x606(%rip)
3db3(7): add $0xb8,%rsp
3dba(1): pop %rbx
3dbb(1): pop %rbp
3dbc(2): pop %r12
3dbe(2): pop %r13
3dc0(2): pop %r14
3dc2(2): pop %r15
3dc4(1): ret near (%rsp)
3dc5(3): nop (%rax)
3dc8(3): mov %r11,%rbp
3dcb(5): jmp 0xffffff7e(%rip)
3dd0(3): cmp %r15,%r13
3dd3(2): jbe 0x7(%rip)
3dd5(5): mov $0x27,0x0(%r14,%r15,1)
3dda(4): lea 0x1(%r15),%rax
3dde(3): cmp %rax,%r13
3de1(2): jbe 0x8(%rip)
3de3(6): mov $0x5c,0x1(%r14,%r15,1)
3de9(4): lea 0x2(%r15),%rax
3ded(3): cmp %rax,%r13
3df0(6): jbe 0x5f2(%rip)
3df6(3): mov %r13,%rdx
3df9(6): mov $0x27,0x2(%r14,%r15,1)
3dff(5): mov 0x50(%rsp),%r13
3e04(5): jmp 0xfffffbde(%rip)
3e09(3): mov %r12d,%eax
3e0c(5): mov $0x30,%ebx
3e11(3): xor %r12d,%r12d
3e14(5): jmp 0xfffff605(%rip)
3e19(6): mov $0x27,0x2(%r14,%r15,1)
3e1f(5): jmp 0xfffff9ca(%rip)
3e24(2): test %ebx,%ebx
3e26(6): jnz 0xfffff42d(%rip)
3e2c(5): mov $0x1,0xd(%rsp)
3e31(3): test %r13,%r13
3e34(6): jnz 0x596(%rip)
3e3a(7): lea 0x11084(%rip),%rax
3e41(9): mov $0x0,0x50(%rsp)
3e4a(5): mov $0x1,0xe(%rsp)
3e4f(5): mov $0x0,0x7c(%rsp)
3e54(3): xor %r12d,%r12d
3e57(5): mov $0x0,0xf(%rsp)
3e5c(9): mov $0x1,0x18(%rsp)
3e65(5): mov %rax,0x48(%rsp)
3e6a(6): mov $0x1,%r15d
3e70(8): mov $0x2,0x8(%rsp)
3e78(5): jmp 0xfffff41b(%rip)
3e7d(3): nop (%rax)
3e80(2): test %ebx,%ebx
3e82(6): jnz 0x3fb(%rip)
3e88(3): test %r13,%r13
3e8b(6): jz 0x22b(%rip)
3e91(4): mov $0x22,(%r14)
3e95(5): mov $0x1,0xe(%rsp)
3e9a(3): xor %r12d,%r12d
3e9d(5): mov $0x0,0x7c(%rsp)
3ea2(9): mov $0x0,0x50(%rsp)
3eab(7): lea 0x11011(%rip),%rax
3eb2(5): mov $0x0,0xf(%rsp)
3eb7(5): mov $0x1,0xd(%rsp)
3ebc(9): mov $0x1,0x18(%rsp)
3ec5(6): mov $0x1,%r15d
3ecb(5): mov %rax,0x48(%rsp)
3ed0(5): jmp 0xfffff3c3(%rip)
3ed5(7): lea 0x10fe7(%rip),%rax
3edc(5): mov $0x1,0xe(%rsp)
3ee1(5): mov $0x0,0x7c(%rsp)
3ee6(3): xor %r12d,%r12d
3ee9(9): mov $0x0,0x50(%rsp)
3ef2(5): mov $0x1,0xf(%rsp)
3ef7(5): mov $0x1,0xd(%rsp)
3efc(9): mov $0x1,0x18(%rsp)
3f05(3): xor %r15d,%r15d
3f08(5): mov %rax,0x48(%rsp)
3f0d(8): mov $0x5,0x8(%rsp)
3f15(5): jmp 0xfffff37e(%rip)
3f1a(5): mov $0x1,0xe(%rsp)
3f1f(5): mov $0x0,0x7c(%rsp)
3f24(3): xor %r12d,%r12d
3f27(9): mov $0x0,0x50(%rsp)
3f30(5): mov $0x0,0xf(%rsp)
3f35(3): xor %r15d,%r15d
3f38(5): mov $0x1,0xd(%rsp)
3f3d(9): mov $0x0,0x18(%rsp)
3f46(9): mov $0x0,0x48(%rsp)
3f4f(5): jmp 0xfffff344(%rip)
3f54(5): cmp $0xa,0x8(%rsp)
3f59(2): jz 0x58(%rip)
3f5b(7): lea 0x10f65(%rip),%rsi
3f62(2): xor %edi,%edi
3f64(5): mov $0x5,%edx
3f69(5): call 0xffffda47(%rip)
3f6e(3): mov %rax,%rcx
3f71(5): mov %rax,0x68(%rsp)
3f76(7): lea 0x10f4a(%rip),%rax
3f7d(3): cmp %rax,%rcx
3f80(6): jz 0x39e(%rip)
3f86(7): lea 0x10f38(%rip),%rsi
3f8d(2): xor %edi,%edi
3f8f(5): mov $0x5,%edx
3f94(5): call 0xffffda1c(%rip)
3f99(3): mov %rax,%rcx
3f9c(5): mov %rax,0x60(%rsp)
3fa1(7): lea 0x10f1d(%rip),%rax
3fa8(3): cmp %rax,%rcx
3fab(6): jz 0x389(%rip)
3fb1(3): xor %r15d,%r15d
3fb4(2): test %ebx,%ebx
3fb6(6): jz 0x1c7(%rip)
3fbc(2): test %ebx,%ebx
3fbe(5): mov 0x60(%rsp),%rbx
3fc3(5): setnz 0xf(%rsp)
3fc8(3): xor %r12d,%r12d
3fcb(3): mov %rbx,%rdi
3fce(5): call 0xffffda02(%rip)
3fd3(5): mov %rbx,0x48(%rsp)
3fd8(5): mov %rax,0x18(%rsp)
3fdd(5): mov $0x1,0xe(%rsp)
3fe2(5): mov $0x0,0x7c(%rsp)
3fe7(9): mov $0x0,0x50(%rsp)
3ff0(5): mov $0x1,0xd(%rsp)
3ff5(5): jmp 0xfffff29e(%rip)
3ffa(5): mov $0x1,0xe(%rsp)
3fff(5): mov $0x0,0x7c(%rsp)
4004(3): xor %r12d,%r12d
4007(9): mov $0x0,0x50(%rsp)
4010(5): mov $0x0,0xf(%rsp)
4015(3): xor %r15d,%r15d
4018(5): mov $0x0,0xd(%rsp)
401d(9): mov $0x0,0x18(%rsp)
4026(9): mov $0x0,0x48(%rsp)
402f(5): jmp 0xfffff264(%rip)
4034(5): mov $0x1,0xe(%rsp)
4039(5): mov $0x0,0x7c(%rsp)
403e(3): xor %r12d,%r12d
4041(9): mov $0x0,0x50(%rsp)
404a(5): mov $0x1,0xf(%rsp)
404f(5): mov $0x1,0xd(%rsp)
4054(5): jmp 0xfffff21f(%rip)
4059(3): cmp %r15,%r13
405c(2): jbe 0x7(%rip)
405e(5): mov $0x30,0x0(%r14,%r15,1)
4063(4): lea 0x2(%rcx),%rax
4067(3): cmp %rax,%r13
406a(2): jbe 0x8(%rip)
406c(6): mov $0x30,0x2(%r14,%rcx,1)
4072(3): mov %r12d,%eax
4075(4): lea 0x3(%rcx),%r15
4079(3): xor %r12d,%r12d
407c(5): mov $0x30,%ebx
4081(5): jmp 0xfffff367(%rip)
4086(a): nop 0x0(%rax,%rax,1)
4090(5): movzx 0xf(%rsp),%ebx
4095(3): mov %r11,%rbp
4098(4): mov %bl,0xd(%rsp)
409c(5): jmp 0xfffffcad(%rip)
40a1(5): movzx 0xd(%rsp),%edx
40a6(3): xor %r12d,%r12d
40a9(5): jmp 0xfffffb07(%rip)
40ae(3): xor %r10d,%r10d
40b1(5): jmp 0xfffffbbc(%rip)
40b6(9): mov $0x0,0x50(%rsp)
40bf(5): mov $0x1,0xe(%rsp)
40c4(3): xor %r12d,%r12d
40c7(5): mov $0x0,0x7c(%rsp)
40cc(5): jmp 0xfffffddf(%rip)
40d1(5): mov 0x30(%rsp),%r11
40d6(3): mov %r14,%rsi
40d9(3): mov %r13,%rcx
40dc(3): mov %rbx,%rax
40df(3): mov %rbx,%rdi
40e2(6): movzx 0x7d(%rsp),%r8d
40e8(5): movzx 0x7e(%rsp),%ebx
40ed(8): mov 0x88(%rsp),%r9
40f5(3): cmp %r11,%rsi
40f8(6): movzx 0x7f(%rsp),%r10d
40fe(8): mov 0x80(%rsp),%r15
4106(5): mov 0x40(%rsp),%r14
410b(5): mov 0x70(%rsp),%r13
4110(2): jnb 0x28(%rip)
4112(3): cmp $0x0,(%rcx)
4115(2): jnz 0x12(%rip)
4117(2): jmp 0x21(%rip)
4119(7): nop 0x0(%rax)
4120(5): cmp $0x0,0x0(%r9,%rax,1)
4125(2): jz 0x10(%rip)
4127(4): add $0x1,%rax
412b(5): lea 0x0(%rbp,%rax,1),%rdx
4130(3): cmp %rdx,%r11
4133(2): jnbe 0xffffffed(%rip)
4135(3): mov %rax,%rdi
4138(5): movzx 0xd(%rsp),%edx
413d(3): xor %r12d,%r12d
4140(5): jmp 0xfffffa66(%rip)
4145(3): mov %rbx,%rdi
4148(6): movzx 0x7d(%rsp),%r8d
414e(5): movzx 0x7e(%rsp),%ebx
4153(6): movzx 0x7f(%rsp),%r10d
4159(8): mov 0x80(%rsp),%r15
4161(3): xor %r12d,%r12d
4164(5): mov 0x40(%rsp),%r14
4169(5): mov 0x70(%rsp),%r13
416e(5): mov 0x30(%rsp),%r11
4173(5): movzx 0xd(%rsp),%edx
4178(5): jmp 0xfffffa2e(%rip)
417d(5): mov 0x68(%rsp),%rdx
4182(3): movzx (%rdx),%eax
4185(2): test %al,%al
4187(6): jz 0xfffffe35(%rip)
418d(3): nop (%rax)
4190(3): cmp %r15,%r13
4193(2): jbe 0x6(%rip)
4195(4): mov %al,0x0(%r14,%r15,1)
4199(4): add $0x1,%r15
419d(5): movzx 0x0(%rdx,%r15,1),%eax
41a2(2): test %al,%al
41a4(2): jnz 0xffffffec(%rip)
41a6(5): jmp 0xfffffe16(%rip)
41ab(2): mov %edx,%eax
41ad(5): jmp 0xfffff55a(%rip)
41b2(4): movzx 0x0(%rax,%rcx,1),%ebx
41b6(3): cmp $0x3e,%bl
41b9(6): jnbe 0xfffff877(%rip)
41bf(a): mov $0x8070630310989004800,%rax
41c9(4): bt %rbx,%rax
41cd(6): jnb 0xfffff863(%rip)
41d3(5): cmp $0x0,0xf(%rsp)
41d8(6): jnz 0x1ea(%rip)
41de(3): cmp %r15,%r13
41e1(2): jbe 0x7(%rip)
41e3(5): mov $0x3f,0x0(%r14,%r15,1)
41e8(4): lea 0x1(%r15),%rax
41ec(3): cmp %rax,%r13
41ef(2): jbe 0x8(%rip)
41f1(6): mov $0x22,0x1(%r14,%r15,1)
41f7(4): lea 0x2(%r15),%rax
41fb(3): cmp %rax,%r13
41fe(2): jbe 0x8(%rip)
4200(6): mov $0x22,0x2(%r14,%r15,1)
4206(4): lea 0x3(%r15),%rax
420a(3): cmp %rax,%r13
420d(2): jbe 0x8(%rip)
420f(6): mov $0x3f,0x3(%r14,%r15,1)
4215(4): add $0x4,%r15
4219(2): xor %edx,%edx
421b(3): xor %r12d,%r12d
421e(2): xor %eax,%eax
4220(3): mov %rcx,%rbp
4223(5): jmp 0xfffff1c5(%rip)
4228(2): test %ebx,%ebx
422a(6): jz 0x18e(%rip)
4230(7): lea 0x10c8e(%rip),%rax
4237(5): mov $0x1,0xe(%rsp)
423c(5): mov $0x0,0x7c(%rsp)
4241(3): xor %r12d,%r12d
4244(9): mov $0x0,0x50(%rsp)
424d(5): mov $0x1,0xf(%rsp)
4252(5): mov $0x0,0xd(%rsp)
4257(9): mov $0x1,0x18(%rsp)
4260(3): xor %r15d,%r15d
4263(5): mov %rax,0x48(%rsp)
4268(5): jmp 0xfffff02b(%rip)
426d(3): nop (%rax)
4270(3): mov %r11,%rbp
4273(5): movzx 0xf(%rsp),%eax
4278(5): jmp 0xfffffad1(%rip)
427d(7): lea 0x10c3f(%rip),%rax
4284(5): mov $0x1,0xe(%rsp)
4289(5): mov $0x0,0x7c(%rsp)
428e(3): xor %r12d,%r12d
4291(9): mov $0x0,0x50(%rsp)
429a(5): mov $0x1,0xf(%rsp)
429f(5): mov $0x1,0xd(%rsp)
42a4(9): mov $0x1,0x18(%rsp)
42ad(3): xor %r15d,%r15d
42b0(5): mov %rax,0x48(%rsp)
42b5(5): jmp 0xffffefde(%rip)
42ba(2): mov %edx,%eax
42bc(5): mov 0x48(%rsp),%rbx
42c1(3): test %rbx,%rbx
42c4(2): jz 0x2e(%rip)
42c6(2): test %al,%al
42c8(2): jz 0x2a(%rip)
42ca(3): movzx (%rbx),%ecx
42cd(3): mov %rbx,%rax
42d0(2): test %cl,%cl
42d2(2): jz 0x20(%rip)
42d4(3): mov %r15,%rdx
42d7(3): sub %r15,%rax
42da(3): cmp %rdx,%r13
42dd(2): jbe 0x6(%rip)
42df(4): mov %cl,0x0(%r14,%rdx,1)
42e3(4): add $0x1,%rdx
42e7(4): movzx 0x0(%rax,%rdx,1),%ecx
42eb(2): test %cl,%cl
42ed(2): jnz 0xffffffed(%rip)
42ef(3): mov %rdx,%r15
42f2(3): cmp %r15,%r13
42f5(6): jbe 0xfffffaa4(%rip)
42fb(5): mov $0x0,0x0(%r14,%r15,1)
4300(5): jmp 0xfffffa99(%rip)
4305(5): cmp $0x2,0x8(%rsp)
430a(5): movzx 0xf(%rsp),%ebx
430f(3): mov %r11,%rbp
4312(3): setz %al
4315(4): mov %bl,0xd(%rsp)
4319(5): jmp 0xfffffa30(%rip)
431e(4): mov 0x8(%rsp),%esi
4322(3): mov %rcx,%rdi
4325(5): call 0xffffedab(%rip)
432a(5): mov %rax,0x68(%rsp)
432f(5): jmp 0xfffffc57(%rip)
4334(4): mov 0x8(%rsp),%esi
4338(3): mov %rcx,%rdi
433b(5): call 0xffffed95(%rip)
4340(5): mov %rax,0x60(%rsp)
4345(5): jmp 0xfffffc6c(%rip)
434a(5): movzx 0xf(%rsp),%ebx
434f(3): mov %r11,%rbp
4352(2): mov %edx,%eax
4354(4): mov %bl,0xd(%rsp)
4358(5): jmp 0xfffff9f1(%rip)
435d(4): sub $0x8,%rsp
4361(6): mov $0x5,%r8d
4367(3): mov %r11,%rcx
436a(4): push 0x68(%rsp)
436e(4): push 0x78(%rsp)
4372(3): mov %r14,%rdi
4375(4): push 0x38(%rsp)
4379(8): mov 0x98(%rsp),%r9d
4381(5): mov 0x30(%rsp),%rdx
4386(5): mov 0x70(%rsp),%rsi
438b(5): call 0xffffee35(%rip)
4390(4): add $0x20,%rsp
4394(3): mov %rax,%r15
4397(5): jmp 0xfffffa02(%rip)
439c(5): movzx 0x7c(%rsp),%eax
43a1(5): jmp 0xffffff1b(%rip)
43a6(8): mov $0x2,0x8(%rsp)
43ae(5): jmp 0xfffff99b(%rip)
43b3(5): call 0xffffd62d(%rip)
43b8(5): mov $0x0,0xd(%rsp)
43bd(5): jmp 0xfffffa74(%rip)
43c2(3): mov %r11,%rbp
43c5(5): jmp 0xfffff99b(%rip)
43ca(5): mov $0x1,0xe(%rsp)
43cf(2): xor %eax,%eax
43d1(3): xor %r12d,%r12d
43d4(9): mov $0x0,0x50(%rsp)
43dd(5): jmp 0xfffff5a7(%rip)
43e2(3): mov %r13,%rdx
43e5(5): mov 0x50(%rsp),%r13
43ea(5): jmp 0xfffff5f8(%rip)
43ef(5): call 0xffffd4f1(%rip)

"quotearg_n_options" :
4400(2): push %r15
4402(2): push %r14
4404(3): movsxd %edi,%r15
4407(2): push %r13
4409(2): push %r12
440b(3): mov %rdx,%r14
440e(1): push %rbp
440f(1): push %rbx
4410(3): mov %rcx,%rbp
4413(4): sub $0x28,%rsp
4417(5): mov %rsi,0x8(%rsp)
441c(5): call 0xffffd4d4(%rip)
4421(3): mov %rax,%r13
4424(2): mov (%rax),%eax
4426(3): test %r15d,%r15d
4429(7): mov 0x214c90(%rip),%rbx
4430(4): mov %eax,0x18(%rsp)
4434(6): js 0x16d(%rip)
443a(7): cmp %r15d,0x214c77(%rip)
4441(2): jnle 0x64(%rip)
4443(7): cmp $0x7fffffff,%r15d
444a(6): jz 0x15c(%rip)
4450(4): lea 0x1(%r15),%r12d
4454(7): lea 0x214c75(%rip),%rax
445b(3): movsxd %r12d,%rsi
445e(4): shl/sal $0x4,%rsi
4462(3): cmp %rax,%rbx
4465(6): jz 0x11b(%rip)
446b(3): mov %rbx,%rdi
446e(5): call 0xf72(%rip)
4473(3): mov %rax,%rbx
4476(7): mov %rax,0x214c43(%rip)
447d(7): movsxd 0x214c34(%rip),%rdi
4484(3): mov %r12d,%edx
4487(2): xor %esi,%esi
4489(2): sub %edi,%edx
448b(4): shl/sal $0x4,%rdi
448f(3): movsxd %edx,%rdx
4492(3): add %rbx,%rdi
4495(4): shl/sal $0x4,%rdx
4499(5): call 0xffffd5c7(%rip)
449e(7): mov %r12d,0x214c13(%rip)
44a5(3): mov 0x4(%rbp),%eax
44a8(4): shl/sal $0x4,%r15
44ac(4): sub $0x8,%rsp
44b0(3): add %r15,%rbx
44b3(4): lea 0x8(%rbp),%r15
44b7(4): mov 0x0(%rbp),%r8d
44bb(3): mov (%rbx),%r11
44be(4): mov 0x8(%rbx),%r12
44c2(3): mov %r14,%rcx
44c5(3): or $0x1,%eax
44c8(4): mov %eax,0x24(%rsp)
44cc(3): push 0x30(%rbp)
44cf(3): mov %eax,%r9d
44d2(3): push 0x28(%rbp)
44d5(2): push %r15
44d7(3): mov %r11,%rsi
44da(5): mov 0x28(%rsp),%rdx
44df(3): mov %r12,%rdi
44e2(5): mov %r11,0x30(%rsp)
44e7(5): call 0xffffecd9(%rip)
44ec(4): add $0x20,%rsp
44f0(5): mov 0x10(%rsp),%r11
44f5(3): cmp %rax,%r11
44f8(2): jnbe 0x69(%rip)
44fa(4): lea 0x1(%rax),%rsi
44fe(7): lea 0x21509b(%rip),%rax
4505(3): cmp %rax,%r12
4508(3): mov %rsi,(%rbx)
450b(2): jz 0x14(%rip)
450d(3): mov %r12,%rdi
4510(5): mov %rsi,0x10(%rsp)
4515(5): call 0xffffd3bb(%rip)
451a(5): mov 0x10(%rsp),%rsi
451f(3): mov %rsi,%rdi
4522(5): mov %rsi,0x10(%rsp)
4527(5): call 0xe59(%rip)
452c(4): sub $0x8,%rsp
4530(4): mov %rax,0x8(%rbx)
4534(4): mov 0x0(%rbp),%r8d
4538(3): push 0x30(%rbp)
453b(3): push 0x28(%rbp)
453e(3): mov %r14,%rcx
4541(2): push %r15
4543(5): mov 0x3c(%rsp),%r9d
4548(3): mov %rax,%rdi
454b(5): mov 0x28(%rsp),%rdx
4550(5): mov 0x30(%rsp),%rsi
4555(3): mov %rax,%r12
4558(5): call 0xffffec68(%rip)
455d(4): add $0x20,%rsp
4561(4): mov 0x18(%rsp),%eax
4565(4): mov %eax,0x0(%r13)
4569(4): add $0x28,%rsp
456d(3): mov %r12,%rax
4570(1): pop %rbx
4571(1): pop %rbp
4572(2): pop %r12
4574(2): pop %r13
4576(2): pop %r14
4578(2): pop %r15
457a(1): ret near (%rsp)
457b(5): nop 0x0(%rax,%rax,1)
4580(2): xor %edi,%edi
4582(5): call 0xe5e(%rip)
4587(8): movdqa 0x214b41(%rip),%xmm0
458f(3): mov %rax,%rbx
4592(7): mov %rax,0x214b27(%rip)
4599(3): movups %xmm0,(%rax)
459c(5): jmp 0xfffffee1(%rip)
45a1(5): call 0xffffd33f(%rip)
45a6(5): call 0x102a(%rip)

"clone_quoting_options" :
45b0(2): push %r12
45b2(1): push %rbp
45b3(1): push %rbx
45b4(3): mov %rdi,%rbx
45b7(5): call 0xffffd339(%rip)
45bc(3): mov (%rax),%r12d
45bf(3): mov %rax,%rbp
45c2(7): lea 0x2150d7(%rip),%rax
45c9(3): test %rbx,%rbx
45cc(5): mov $0x38,%esi
45d1(4): cmove %rax,%rbx
45d5(3): mov %rbx,%rdi
45d8(5): call 0xfa8(%rip)
45dd(4): mov %r12d,0x0(%rbp)
45e1(1): pop %rbx
45e2(1): pop %rbp
45e3(2): pop %r12
45e5(1): ret near (%rsp)

"get_quoting_style" :
45f0(7): lea 0x2150a9(%rip),%rax
45f7(3): test %rdi,%rdi
45fa(4): cmove %rax,%rdi
45fe(2): mov (%rdi),%eax
4600(1): ret near (%rsp)

"set_quoting_style" :
4610(7): lea 0x215089(%rip),%rax
4617(3): test %rdi,%rdi
461a(4): cmove %rax,%rdi
461e(2): mov %esi,(%rdi)
4620(1): ret near (%rsp)

"set_char_quoting" :
4630(7): lea 0x215069(%rip),%rax
4637(3): test %rdi,%rdi
463a(2): mov %esi,%ecx
463c(4): cmove %rax,%rdi
4640(2): mov %esi,%eax
4642(3): and $0x1f,%ecx
4645(3): shr $0x5,%al
4648(3): movzx %al,%eax
464b(5): lea 0x8(%rdi,%rax,4),%rdi
4650(2): mov (%rdi),%esi
4652(2): mov %esi,%eax
4654(2): shr %cl,%eax
4656(2): xor %eax,%edx
4658(3): and $0x1,%eax
465b(3): and $0x1,%edx
465e(2): shl/sal %cl,%edx
4660(2): xor %esi,%edx
4662(2): mov %edx,(%rdi)
4664(1): ret near (%rsp)

"set_quoting_flags" :
4670(7): lea 0x215029(%rip),%rax
4677(3): test %rdi,%rdi
467a(4): cmove %rax,%rdi
467e(3): mov 0x4(%rdi),%eax
4681(3): mov %esi,0x4(%rdi)
4684(1): ret near (%rsp)

"set_custom_quoting" :
4690(7): lea 0x215009(%rip),%rax
4697(3): test %rdi,%rdi
469a(4): cmove %rax,%rdi
469e(3): test %rsi,%rsi
46a1(6): mov $0xa,(%rdi)
46a7(2): jz 0x10(%rip)
46a9(3): test %rdx,%rdx
46ac(2): jz 0xb(%rip)
46ae(4): mov %rsi,0x28(%rdi)
46b2(4): mov %rdx,0x30(%rdi)
46b6(1): ret near (%rsp)
46b7(4): sub $0x8,%rsp
46bb(5): call 0xffffd225(%rip)

"quotearg_buffer" :
46c0(2): push %r15
46c2(2): push %r14
46c4(7): lea 0x214fd5(%rip),%rax
46cb(2): push %r13
46cd(2): push %r12
46cf(3): mov %rdi,%r13
46d2(1): push %rbp
46d3(1): push %rbx
46d4(3): mov %r8,%rbx
46d7(3): mov %rsi,%r14
46da(3): mov %rdx,%r15
46dd(4): sub $0x18,%rsp
46e1(3): test %r8,%r8
46e4(4): cmove %rax,%rbx
46e8(5): mov %rcx,0x8(%rsp)
46ed(5): call 0xffffd203(%rip)
46f2(3): mov (%rax),%r12d
46f5(3): mov %rax,%rbp
46f8(4): lea 0x8(%rbx),%rax
46fc(4): sub $0x8,%rsp
4700(4): mov 0x4(%rbx),%r9d
4704(3): push 0x30(%rbx)
4707(3): mov (%rbx),%r8d
470a(3): push 0x28(%rbx)
470d(3): mov %r15,%rdx
4710(1): push %rax
4711(5): mov 0x28(%rsp),%rcx
4716(3): mov %r14,%rsi
4719(3): mov %r13,%rdi
471c(5): call 0xffffeaa4(%rip)
4721(4): mov %r12d,0x0(%rbp)
4725(4): add $0x38,%rsp
4729(1): pop %rbx
472a(1): pop %rbp
472b(2): pop %r12
472d(2): pop %r13
472f(2): pop %r14
4731(2): pop %r15
4733(1): ret near (%rsp)

"quotearg_alloc_mem" :
4740(2): push %r15
4742(2): push %r14
4744(7): lea 0x214f55(%rip),%rax
474b(2): push %r13
474d(2): push %r12
474f(3): mov %rdx,%r12
4752(1): push %rbp
4753(1): push %rbx
4754(3): mov %rcx,%rbx
4757(3): mov %rdi,%r14
475a(3): mov %rsi,%r15
475d(4): sub $0x38,%rsp
4761(3): test %rcx,%rcx
4764(4): cmove %rax,%rbx
4768(2): xor %ebp,%ebp
476a(5): call 0xffffd186(%rip)
476f(3): test %r12,%r12
4772(3): mov %rax,%r13
4775(2): mov (%rax),%eax
4777(4): setz %bpl
477b(3): or 0x4(%rbx),%ebp
477e(4): lea 0x8(%rbx),%r10
4782(4): sub $0x8,%rsp
4786(3): mov (%rbx),%r8d
4789(3): mov %r15,%rcx
478c(4): mov %eax,0x14(%rsp)
4790(3): push 0x30(%rbx)
4793(3): mov %r14,%rdx
4796(3): push 0x28(%rbx)
4799(2): push %r10
479b(2): xor %esi,%esi
479d(3): mov %ebp,%r9d
47a0(2): xor %edi,%edi
47a2(5): mov %r10,0x40(%rsp)
47a7(5): call 0xffffea19(%rip)
47ac(4): lea 0x1(%rax),%rsi
47b0(5): mov %rax,0x48(%rsp)
47b5(4): add $0x20,%rsp
47b9(3): mov %rsi,%rdi
47bc(5): mov %rsi,0x18(%rsp)
47c1(5): call 0xbbf(%rip)
47c6(5): mov %rax,0x10(%rsp)
47cb(4): sub $0x8,%rsp
47cf(3): push 0x30(%rbx)
47d2(3): push 0x28(%rbx)
47d5(5): mov 0x38(%rsp),%r10
47da(3): mov %ebp,%r9d
47dd(3): mov (%rbx),%r8d
47e0(3): mov %r15,%rcx
47e3(3): mov %r14,%rdx
47e6(3): mov %rax,%rdi
47e9(2): push %r10
47eb(5): mov 0x38(%rsp),%rsi
47f0(5): call 0xffffe9d0(%rip)
47f5(4): mov 0x2c(%rsp),%eax
47f9(4): add $0x20,%rsp
47fd(3): test %r12,%r12
4800(4): mov %eax,0x0(%r13)
4804(2): jz 0xb(%rip)
4806(5): mov 0x28(%rsp),%r11
480b(4): mov %r11,(%r12)
480f(5): mov 0x10(%rsp),%rax
4814(4): add $0x38,%rsp
4818(1): pop %rbx
4819(1): pop %rbp
481a(2): pop %r12
481c(2): pop %r13
481e(2): pop %r14
4820(2): pop %r15
4822(1): ret near (%rsp)

"quotearg_alloc" :
4830(3): mov %rdx,%rcx
4833(2): xor %edx,%edx
4835(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4840(6): mov 0x214872(%rip),%eax
4846(2): push %r12
4848(7): mov 0x214871(%rip),%r12
484f(1): push %rbp
4850(1): push %rbx
4851(3): cmp $0x1,%eax
4854(2): jle 0x2d(%rip)
4856(3): sub $0x2,%eax
4859(5): lea 0x18(%r12),%rbx
485e(4): shl/sal $0x4,%rax
4862(5): lea 0x28(%r12,%rax,1),%rbp
4867(9): nop 0x0(%rax,%rax,1)
4870(3): mov (%rbx),%rdi
4873(4): add $0x10,%rbx
4877(5): call 0xffffd059(%rip)
487c(3): cmp %rbp,%rbx
487f(2): jnz 0xfffffff1(%rip)
4881(5): mov 0x8(%r12),%rdi
4886(7): lea 0x214d13(%rip),%rbx
488d(3): cmp %rbx,%rdi
4890(2): jz 0x19(%rip)
4892(5): call 0xffffd03e(%rip)
4897(b): mov $0x100,0x21482e(%rip)
48a2(7): mov %rbx,0x21482f(%rip)
48a9(7): lea 0x214820(%rip),%rbx
48b0(3): cmp %rbx,%r12
48b3(2): jz 0x11(%rip)
48b5(3): mov %r12,%rdi
48b8(5): call 0xffffd018(%rip)
48bd(7): mov %rbx,0x2147fc(%rip)
48c4(1): pop %rbx
48c5(a): mov $0x1,0x2147e9(%rip)
48cf(1): pop %rbp
48d0(2): pop %r12
48d2(1): ret near (%rsp)

"quotearg_n" :
48e0(7): lea 0x214db9(%rip),%rcx
48e7(7): mov $0xffffffff,%rdx
48ee(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4900(7): lea 0x214d99(%rip),%rcx
4907(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4910(7): lea 0x214d89(%rip),%rcx
4917(3): mov %rdi,%rsi
491a(7): mov $0xffffffff,%rdx
4921(2): xor %edi,%edi
4923(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4930(7): lea 0x214d69(%rip),%rcx
4937(3): mov %rsi,%rdx
493a(3): mov %rdi,%rsi
493d(2): xor %edi,%edi
493f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4950(4): sub $0x48,%rsp
4954(3): mov %rdx,%rax
4957(9): mov $0x28,%rdx
4960(5): mov %rdx,0x38(%rsp)
4965(2): xor %edx,%edx
4967(3): cmp $0xa,%esi
496a(2): jz 0x6a(%rip)
496c(3): mov %esi,(%rsp)
496f(3): mov %rsp,%rcx
4972(7): mov $0xffffffff,%rdx
4979(3): mov %rax,%rsi
497c(9): mov $0x0,0x4(%rsp)
4985(9): mov $0x0,0xc(%rsp)
498e(9): mov $0x0,0x14(%rsp)
4997(9): mov $0x0,0x1c(%rsp)
49a0(9): mov $0x0,0x24(%rsp)
49a9(9): mov $0x0,0x2c(%rsp)
49b2(8): mov $0x0,0x34(%rsp)
49ba(5): call 0xfffffa46(%rip)
49bf(5): mov 0x38(%rsp),%rcx
49c4(9): xor $0x28,%rcx
49cd(2): jnz 0xc(%rip)
49cf(4): add $0x48,%rsp
49d3(1): ret near (%rsp)
49d4(5): call 0xffffcf0c(%rip)
49d9(5): call 0xffffd007(%rip)

"quotearg_n_style_mem" :
49e0(4): sub $0x48,%rsp
49e4(3): mov %rdx,%rax
49e7(3): mov %rcx,%rdx
49ea(9): mov $0x28,%rcx
49f3(5): mov %rcx,0x38(%rsp)
49f8(2): xor %ecx,%ecx
49fa(3): cmp $0xa,%esi
49fd(2): jz 0x63(%rip)
49ff(3): mov %esi,(%rsp)
4a02(3): mov %rsp,%rcx
4a05(3): mov %rax,%rsi
4a08(9): mov $0x0,0x4(%rsp)
4a11(9): mov $0x0,0xc(%rsp)
4a1a(9): mov $0x0,0x14(%rsp)
4a23(9): mov $0x0,0x1c(%rsp)
4a2c(9): mov $0x0,0x24(%rsp)
4a35(9): mov $0x0,0x2c(%rsp)
4a3e(8): mov $0x0,0x34(%rsp)
4a46(5): call 0xfffff9ba(%rip)
4a4b(5): mov 0x38(%rsp),%rdx
4a50(9): xor $0x28,%rdx
4a59(2): jnz 0xc(%rip)
4a5b(4): add $0x48,%rsp
4a5f(1): ret near (%rsp)
4a60(5): call 0xffffce80(%rip)
4a65(5): call 0xffffcf7b(%rip)

"quotearg_style" :
4a70(3): mov %rsi,%rdx
4a73(2): mov %edi,%esi
4a75(2): xor %edi,%edi
4a77(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4a80(3): mov %rdx,%rcx
4a83(3): mov %rsi,%rdx
4a86(2): mov %edi,%esi
4a88(2): xor %edi,%edi
4a8a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4a90(4): sub $0x48,%rsp
4a94(2): mov %edx,%ecx
4a96(9): mov $0x28,%rax
4a9f(5): mov %rax,0x38(%rsp)
4aa4(2): xor %eax,%eax
4aa6(7): mov 0x214c23(%rip),%rax
4aad(3): mov %rsp,%r8
4ab0(3): and $0x1f,%ecx
4ab3(8): movdqa 0x214be5(%rip),%xmm0
4abb(5): mov %rax,0x30(%rsp)
4ac0(2): mov %edx,%eax
4ac2(4): movaps %xmm0,(%rsp)
4ac6(3): shr $0x5,%al
4ac9(3): movzx %al,%eax
4acc(5): lea 0x8(%r8,%rax,4),%r9
4ad1(8): movdqa 0x214bd7(%rip),%xmm0
4ad9(5): movaps %xmm0,0x10(%rsp)
4ade(8): movdqa 0x214bda(%rip),%xmm0
4ae6(5): movaps %xmm0,0x20(%rsp)
4aeb(3): mov (%r9),%edx
4aee(2): mov %edx,%eax
4af0(2): shr %cl,%eax
4af2(2): not %eax
4af4(3): and $0x1,%eax
4af7(2): shl/sal %cl,%eax
4af9(3): mov %r8,%rcx
4afc(2): xor %edx,%eax
4afe(3): mov %rsi,%rdx
4b01(3): mov %rdi,%rsi
4b04(3): mov %eax,(%r9)
4b07(2): xor %edi,%edi
4b09(5): call 0xfffff8f7(%rip)
4b0e(5): mov 0x38(%rsp),%rsi
4b13(9): xor $0x28,%rsi
4b1c(2): jnz 0x7(%rip)
4b1e(4): add $0x48,%rsp
4b22(1): ret near (%rsp)
4b23(5): call 0xffffcebd(%rip)

"quotearg_char" :
4b30(4): movsx %sil,%edx
4b34(7): mov $0xffffffff,%rsi
4b3b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4b40(5): mov $0x3a,%edx
4b45(7): mov $0xffffffff,%rsi
4b4c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4b60(5): mov $0x3a,%edx
4b65(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4b70(4): sub $0x48,%rsp
4b74(3): mov %rdx,%rax
4b77(9): mov $0x28,%rdx
4b80(5): mov %rdx,0x38(%rsp)
4b85(2): xor %edx,%edx
4b87(3): cmp $0xa,%esi
4b8a(2): jz 0x6a(%rip)
4b8c(3): mov %esi,(%rsp)
4b8f(3): mov %rsp,%rcx
4b92(7): mov $0xffffffff,%rdx
4b99(3): mov %rax,%rsi
4b9c(9): mov $0x0,0x4(%rsp)
4ba5(9): mov $0x4000000,0xc(%rsp)
4bae(9): mov $0x0,0x14(%rsp)
4bb7(9): mov $0x0,0x1c(%rsp)
4bc0(9): mov $0x0,0x24(%rsp)
4bc9(9): mov $0x0,0x2c(%rsp)
4bd2(8): mov $0x0,0x34(%rsp)
4bda(5): call 0xfffff826(%rip)
4bdf(5): mov 0x38(%rsp),%rcx
4be4(9): xor $0x28,%rcx
4bed(2): jnz 0xc(%rip)
4bef(4): add $0x48,%rsp
4bf3(1): ret near (%rsp)
4bf4(5): call 0xffffccec(%rip)
4bf9(5): call 0xffffcde7(%rip)

"quotearg_n_custom_mem" :
4c00(4): sub $0x48,%rsp
4c04(3): mov %rcx,%r9
4c07(7): mov 0x214ac2(%rip),%rcx
4c0e(8): movdqa 0x214a8a(%rip),%xmm0
4c16(9): mov $0x28,%rax
4c1f(5): mov %rax,0x38(%rsp)
4c24(2): xor %eax,%eax
4c26(4): movaps %xmm0,(%rsp)
4c2a(3): test %rsi,%rsi
4c2d(5): mov %rcx,0x30(%rsp)
4c32(7): mov $0xa,(%rsp)
4c39(8): movdqa 0x214a6f(%rip),%xmm0
4c41(5): movaps %xmm0,0x10(%rsp)
4c46(8): movdqa 0x214a72(%rip),%xmm0
4c4e(5): movaps %xmm0,0x20(%rsp)
4c53(2): jz 0x34(%rip)
4c55(3): test %rdx,%rdx
4c58(2): jz 0x2f(%rip)
4c5a(5): mov %rsi,0x28(%rsp)
4c5f(5): mov %rdx,0x30(%rsp)
4c64(3): mov %rsp,%rcx
4c67(3): mov %r8,%rdx
4c6a(3): mov %r9,%rsi
4c6d(5): call 0xfffff793(%rip)
4c72(5): mov 0x38(%rsp),%rdi
4c77(9): xor $0x28,%rdi
4c80(2): jnz 0xc(%rip)
4c82(4): add $0x48,%rsp
4c86(1): ret near (%rsp)
4c87(5): call 0xffffcc59(%rip)
4c8c(5): call 0xffffcd54(%rip)

"quotearg_n_custom" :
4ca0(7): mov $0xffffffff,%r8
4ca7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4cb0(3): mov %rdx,%rcx
4cb3(7): mov $0xffffffff,%r8
4cba(3): mov %rsi,%rdx
4cbd(3): mov %rdi,%rsi
4cc0(2): xor %edi,%edi
4cc2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4cd0(3): mov %rcx,%r8
4cd3(3): mov %rdx,%rcx
4cd6(3): mov %rsi,%rdx
4cd9(3): mov %rdi,%rsi
4cdc(2): xor %edi,%edi
4cde(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4cf0(7): lea 0x214389(%rip),%rcx
4cf7(5): jmp 0xfffff709(%rip)

"quote_mem" :
4d00(7): lea 0x214379(%rip),%rcx
4d07(3): mov %rsi,%rdx
4d0a(3): mov %rdi,%rsi
4d0d(2): xor %edi,%edi
4d0f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4d20(7): lea 0x214359(%rip),%rcx
4d27(7): mov $0xffffffff,%rdx
4d2e(5): jmp 0xfffff6d2(%rip)

"quote" :
4d40(7): lea 0x214339(%rip),%rcx
4d47(3): mov %rdi,%rsi
4d4a(7): mov $0xffffffff,%rdx
4d51(2): xor %edi,%edi
4d53(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
4d60(2): push %r15
4d62(2): push %r14
4d64(2): push %r13
4d66(2): push %r12
4d68(3): mov %r9,%r12
4d6b(1): push %rbp
4d6c(1): push %rbx
4d6d(3): mov %rdi,%rbp
4d70(3): mov %r8,%rbx
4d73(4): sub $0x28,%rsp
4d77(3): test %rsi,%rsi
4d7a(6): jz 0x11e(%rip)
4d80(3): mov %rdx,%r8
4d83(7): lea 0x105fe(%rip),%rdx
4d8a(3): mov %rcx,%r9
4d8d(2): xor %eax,%eax
4d8f(3): mov %rsi,%rcx
4d92(5): mov $0x1,%esi
4d97(5): call 0xffffce99(%rip)
4d9c(7): lea 0x105f8(%rip),%rsi
4da3(2): xor %edi,%edi
4da5(5): mov $0x5,%edx
4daa(5): call 0xffffcc06(%rip)
4daf(7): lea 0x1090a(%rip),%rdx
4db6(3): mov %rax,%rcx
4db9(6): mov $0x7e3,%r8d
4dbf(5): mov $0x1,%esi
4dc4(3): mov %rbp,%rdi
4dc7(2): xor %eax,%eax
4dc9(5): call 0xffffce67(%rip)
4dce(7): lea 0x10653(%rip),%rsi
4dd5(2): xor %edi,%edi
4dd7(5): mov $0x5,%edx
4ddc(5): call 0xffffcbd4(%rip)
4de1(3): mov %rbp,%rsi
4de4(3): mov %rax,%rdi
4de7(5): call 0xffffccb9(%rip)
4dec(4): cmp $0x9,%r12
4df0(6): jnbe 0x340(%rip)
4df6(7): lea 0x10887(%rip),%rdx
4dfd(4): movsxd 0x0(%rdx,%r12,4),%rax
4e01(3): add %rdx,%rax
4e04(2): jmp %rax
4e06(a): nop 0x0(%rax,%rax,1)
4e10(4): mov 0x38(%rbx),%r9
4e14(4): mov 0x10(%rbx),%rax
4e18(7): lea 0x10779(%rip),%rsi
4e1f(4): mov 0x8(%rbx),%r8
4e23(5): mov $0x5,%edx
4e28(2): xor %edi,%edi
4e2a(4): mov 0x30(%rbx),%r13
4e2e(4): mov 0x28(%rbx),%r12
4e32(5): mov %r9,0x10(%rsp)
4e37(4): mov 0x20(%rbx),%r15
4e3b(4): mov 0x18(%rbx),%r14
4e3f(4): mov %rax,(%rsp)
4e43(5): mov %r8,0x8(%rsp)
4e48(3): mov (%rbx),%rbx
4e4b(5): call 0xffffcb65(%rip)
4e50(4): sub $0x8,%rsp
4e54(5): mov 0x18(%rsp),%r9
4e59(3): mov %rax,%rdx
4e5c(3): mov %rbx,%rcx
4e5f(5): mov $0x1,%esi
4e64(3): mov %rbp,%rdi
4e67(2): xor %eax,%eax
4e69(2): push %r9
4e6b(2): push %r13
4e6d(2): push %r12
4e6f(2): push %r15
4e71(2): push %r14
4e73(5): mov 0x30(%rsp),%r9
4e78(5): mov 0x38(%rsp),%r8
4e7d(5): call 0xffffcdb3(%rip)
4e82(4): add $0x30,%rsp
4e86(4): add $0x28,%rsp
4e8a(1): pop %rbx
4e8b(1): pop %rbp
4e8c(2): pop %r12
4e8e(2): pop %r13
4e90(2): pop %r14
4e92(2): pop %r15
4e94(1): ret near (%rsp)
4e95(3): nop (%rax)
4e98(3): mov %rcx,%r8
4e9b(3): mov %rdx,%rcx
4e9e(7): lea 0x104ef(%rip),%rdx
4ea5(5): mov $0x1,%esi
4eaa(2): xor %eax,%eax
4eac(5): call 0xffffcd84(%rip)
4eb1(5): jmp 0xfffffeeb(%rip)
4eb6(a): nop 0x0(%rax,%rax,1)
4ec0(4): mov 0x40(%rbx),%r10
4ec4(4): mov 0x38(%rbx),%r9
4ec8(7): lea 0x106f9(%rip),%rsi
4ecf(4): mov 0x10(%rbx),%rax
4ed3(4): mov 0x8(%rbx),%r8
4ed7(5): mov $0x5,%edx
4edc(4): mov 0x30(%rbx),%r13
4ee0(4): mov 0x28(%rbx),%r12
4ee4(4): mov 0x20(%rbx),%r15
4ee8(4): mov 0x18(%rbx),%r14
4eec(3): mov (%rbx),%rbx
4eef(5): mov %r10,0x18(%rsp)
4ef4(5): mov %r9,0x10(%rsp)
4ef9(4): mov %rax,(%rsp)
4efd(5): mov %r8,0x8(%rsp)
4f02(2): xor %edi,%edi
4f04(5): call 0xffffcaac(%rip)
4f09(5): mov 0x18(%rsp),%r10
4f0e(2): push %r10
4f10(5): jmp 0xffffff44(%rip)
4f15(3): nop (%rax)
4f18(3): mov (%rbx),%rbx
4f1b(7): lea 0x1047d(%rip),%rsi
4f22(5): mov $0x5,%edx
4f27(2): xor %edi,%edi
4f29(5): call 0xffffca87(%rip)
4f2e(4): add $0x28,%rsp
4f32(3): mov %rbx,%rcx
4f35(3): mov %rbp,%rdi
4f38(1): pop %rbx
4f39(1): pop %rbp
4f3a(2): pop %r12
4f3c(2): pop %r13
4f3e(2): pop %r14
4f40(2): pop %r15
4f42(3): mov %rax,%rdx
4f45(5): mov $0x1,%esi
4f4a(2): xor %eax,%eax
4f4c(5): jmp 0xffffcce4(%rip)
4f51(7): nop 0x0(%rax)
4f58(4): mov 0x8(%rbx),%r12
4f5c(7): lea 0x1044c(%rip),%rsi
4f63(3): mov (%rbx),%rbx
4f66(5): mov $0x5,%edx
4f6b(2): xor %edi,%edi
4f6d(5): call 0xffffca43(%rip)
4f72(4): add $0x28,%rsp
4f76(3): mov %r12,%r8
4f79(3): mov %rbx,%rcx
4f7c(3): mov %rbp,%rdi
4f7f(3): mov %rax,%rdx
4f82(5): mov $0x1,%esi
4f87(1): pop %rbx
4f88(1): pop %rbp
4f89(2): pop %r12
4f8b(2): pop %r13
4f8d(2): pop %r14
4f8f(2): pop %r15
4f91(2): xor %eax,%eax
4f93(5): jmp 0xffffcc9d(%rip)
4f98(8): nop 0x0(%rax,%rax,1)
4fa0(4): mov 0x10(%rbx),%r13
4fa4(4): mov 0x8(%rbx),%r12
4fa8(7): lea 0x10417(%rip),%rsi
4faf(3): mov (%rbx),%rbx
4fb2(5): mov $0x5,%edx
4fb7(2): xor %edi,%edi
4fb9(5): call 0xffffc9f7(%rip)
4fbe(4): add $0x28,%rsp
4fc2(3): mov %r13,%r9
4fc5(3): mov %r12,%r8
4fc8(3): mov %rbx,%rcx
4fcb(3): mov %rbp,%rdi
4fce(3): mov %rax,%rdx
4fd1(1): pop %rbx
4fd2(1): pop %rbp
4fd3(2): pop %r12
4fd5(2): pop %r13
4fd7(2): pop %r14
4fd9(2): pop %r15
4fdb(5): mov $0x1,%esi
4fe0(2): xor %eax,%eax
4fe2(5): jmp 0xffffcc4e(%rip)
4fe7(9): nop 0x0(%rax,%rax,1)
4ff0(7): lea 0x10501(%rip),%rsi
4ff7(5): mov $0x5,%edx
4ffc(2): xor %edi,%edi
4ffe(4): mov 0x18(%rbx),%r14
5002(4): mov 0x10(%rbx),%r13
5006(4): mov 0x8(%rbx),%r12
500a(3): mov (%rbx),%rbx
500d(5): call 0xffffc9a3(%rip)
5012(4): sub $0x8,%rsp
5016(2): push %r14
5018(3): mov %rax,%rdx
501b(3): mov %r13,%r9
501e(3): mov %r12,%r8
5021(3): mov %rbx,%rcx
5024(3): mov %rbp,%rdi
5027(5): mov $0x1,%esi
502c(2): xor %eax,%eax
502e(5): call 0xffffcc02(%rip)
5033(1): pop %rax
5034(1): pop %rdx
5035(4): add $0x28,%rsp
5039(1): pop %rbx
503a(1): pop %rbp
503b(2): pop %r12
503d(2): pop %r13
503f(2): pop %r14
5041(2): pop %r15
5043(1): ret near (%rsp)
5044(4): nop 0x0(%rax)
5048(4): mov 0x20(%rbx),%r15
504c(7): lea 0x104c5(%rip),%rsi
5053(5): mov $0x5,%edx
5058(2): xor %edi,%edi
505a(4): mov 0x18(%rbx),%r14
505e(4): mov 0x10(%rbx),%r13
5062(4): mov 0x8(%rbx),%r12
5066(3): mov (%rbx),%rbx
5069(5): call 0xffffc947(%rip)
506e(2): push %r15
5070(2): jmp 0xffffffa6(%rip)
5072(6): nop 0x0(%rax,%rax,1)
5078(4): mov 0x8(%rbx),%r8
507c(4): mov 0x28(%rbx),%r12
5080(7): lea 0x104b9(%rip),%rsi
5087(4): mov 0x20(%rbx),%r15
508b(4): mov 0x18(%rbx),%r14
508f(5): mov $0x5,%edx
5094(4): mov 0x10(%rbx),%r13
5098(2): xor %edi,%edi
509a(3): mov (%rbx),%rbx
509d(4): mov %r8,(%rsp)
50a1(5): call 0xffffc90f(%rip)
50a6(4): sub $0x8,%rsp
50aa(3): mov %r13,%r9
50ad(2): push %r12
50af(2): push %r15
50b1(2): push %r14
50b3(5): mov 0x20(%rsp),%r8
50b8(3): mov %rbx,%rcx
50bb(3): mov %rax,%rdx
50be(3): mov %rbp,%rdi
50c1(5): mov $0x1,%esi
50c6(2): xor %eax,%eax
50c8(5): call 0xffffcb68(%rip)
50cd(4): add $0x20,%rsp
50d1(4): add $0x28,%rsp
50d5(1): pop %rbx
50d6(1): pop %rbp
50d7(2): pop %r12
50d9(2): pop %r13
50db(2): pop %r14
50dd(2): pop %r15
50df(1): ret near (%rsp)
50e0(4): mov 0x10(%rbx),%r9
50e4(4): mov 0x30(%rbx),%r13
50e8(7): lea 0x10479(%rip),%rsi
50ef(4): mov 0x28(%rbx),%r12
50f3(4): mov 0x20(%rbx),%r15
50f7(5): mov $0x5,%edx
50fc(4): mov 0x18(%rbx),%r14
5100(4): mov 0x8(%rbx),%r8
5104(2): xor %edi,%edi
5106(5): mov %r9,0x8(%rsp)
510b(3): mov (%rbx),%rbx
510e(4): mov %r8,(%rsp)
5112(5): call 0xffffc89e(%rip)
5117(2): push %r13
5119(2): push %r12
511b(2): push %r15
511d(2): push %r14
511f(5): mov 0x28(%rsp),%r9
5124(2): jmp 0xffffff8f(%rip)
5126(a): nop 0x0(%rax,%rax,1)
5130(4): mov 0x40(%rbx),%r10
5134(4): mov 0x38(%rbx),%r9
5138(5): mov $0x5,%edx
513d(4): mov 0x10(%rbx),%rax
5141(4): mov 0x8(%rbx),%r8
5145(7): lea 0x104b4(%rip),%rsi
514c(4): mov 0x30(%rbx),%r13
5150(4): mov 0x28(%rbx),%r12
5154(4): mov 0x20(%rbx),%r15
5158(4): mov 0x18(%rbx),%r14
515c(5): mov %r10,0x18(%rsp)
5161(5): mov %r9,0x10(%rsp)
5166(4): mov %rax,(%rsp)
516a(5): mov %r8,0x8(%rsp)
516f(3): mov (%rbx),%rbx
5172(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5180(3): xor %r9d,%r9d
5183(4): cmp $0x0,(%r8)
5187(2): jz 0x14(%rip)
5189(7): nop 0x0(%rax)
5190(4): add $0x1,%r9
5194(5): cmp $0x0,0x0(%r8,%r9,8)
5199(2): jnz 0xfffffff7(%rip)
519b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
51a0(4): sub $0x68,%rsp
51a4(3): mov %r8,%r10
51a7(3): xor %r9d,%r9d
51aa(9): mov $0x28,%rax
51b3(5): mov %rax,0x58(%rsp)
51b8(2): xor %eax,%eax
51ba(3): mov %rsp,%r8
51bd(3): nop (%rax)
51c0(3): mov (%r10),%eax
51c3(3): cmp $0x2f,%eax
51c6(2): jnbe 0x44(%rip)
51c8(3): mov %eax,%r11d
51cb(4): add 0x10(%r10),%r11
51cf(3): add $0x8,%eax
51d2(3): mov %eax,(%r10)
51d5(3): mov (%r11),%rax
51d8(3): test %rax,%rax
51db(4): mov %rax,0x0(%r8,%r9,8)
51df(2): jz 0xc(%rip)
51e1(4): add $0x1,%r9
51e5(4): cmp $0xa,%r9
51e9(2): jnz 0xffffffd7(%rip)
51eb(5): call 0xfffffb75(%rip)
51f0(5): mov 0x58(%rsp),%rax
51f5(9): xor $0x28,%rax
51fe(2): jnz 0x7(%rip)
5200(4): add $0x68,%rsp
5204(1): ret near (%rsp)
5205(5): call 0xffffc7db(%rip)
520a(4): mov 0x8(%r10),%r11
520e(4): lea 0x8(%r11),%rax
5212(4): mov %rax,0x8(%r10)
5216(2): jmp 0xffffffbf(%rip)

"version_etc" :
5220(1): push %rbp
5221(1): push %rbx
5222(6): mov $0x20,%r10d
5228(3): xor %r11d,%r11d
522b(7): sub $0xb8,%rsp
5232(9): mov $0x28,%rax
523b(5): mov %rax,0x78(%rsp)
5240(2): xor %eax,%eax
5242(8): lea 0xd0(%rsp),%rax
524a(8): mov %r8,0xa0(%rsp)
5252(8): lea 0xd0(%rsp),%rbx
525a(5): lea 0x20(%rsp),%r8
525f(8): mov %r9,0xa8(%rsp)
5267(8): mov $0x20,0x8(%rsp)
526f(5): mov %rax,0x10(%rsp)
5274(8): lea 0x80(%rsp),%rax
527c(3): xor %r9d,%r9d
527f(5): mov %rax,0x18(%rsp)
5284(3): mov %rax,%rbp
5287(9): nop 0x0(%rax,%rax,1)
5290(4): cmp $0x2f,%r10d
5294(2): jnbe 0x58(%rip)
5296(3): mov %r10d,%eax
5299(6): mov $0x1,%r11d
529f(4): add $0x8,%r10d
52a3(3): add %rbp,%rax
52a6(3): mov (%rax),%rax
52a9(3): test %rax,%rax
52ac(4): mov %rax,0x0(%r8,%r9,8)
52b0(2): jz 0xc(%rip)
52b2(4): add $0x1,%r9
52b6(4): cmp $0xa,%r9
52ba(2): jnz 0xffffffd6(%rip)
52bc(3): test %r11b,%r11b
52bf(2): jnz 0x26(%rip)
52c1(5): call 0xfffffa9f(%rip)
52c6(5): mov 0x78(%rsp),%rax
52cb(9): xor $0x28,%rax
52d4(2): jnz 0xc(%rip)
52d6(7): add $0xb8,%rsp
52dd(1): pop %rbx
52de(1): pop %rbp
52df(1): ret near (%rsp)
52e0(5): call 0xffffc700(%rip)
52e5(5): mov %r10d,0x8(%rsp)
52ea(2): jmp 0xffffffd7(%rip)
52ec(3): mov %rbx,%rax
52ef(4): add $0x8,%rbx
52f3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5300(1): push %rbx
5301(7): lea 0x100da(%rip),%rsi
5308(5): mov $0x5,%edx
530d(2): xor %edi,%edi
530f(5): call 0xffffc6a1(%rip)
5314(7): lea 0x100dc(%rip),%rdx
531b(3): mov %rax,%rsi
531e(5): mov $0x1,%edi
5323(2): xor %eax,%eax
5325(5): call 0xffffc85b(%rip)
532a(7): lea 0x100dc(%rip),%rsi
5331(5): mov $0x5,%edx
5336(2): xor %edi,%edi
5338(5): call 0xffffc678(%rip)
533d(7): lea 0xf964(%rip),%rcx
5344(7): lea 0xf0e7(%rip),%rdx
534b(3): mov %rax,%rsi
534e(5): mov $0x1,%edi
5353(2): xor %eax,%eax
5355(5): call 0xffffc82b(%rip)
535a(7): mov 0x213d87(%rip),%rbx
5361(7): lea 0x102d8(%rip),%rsi
5368(2): xor %edi,%edi
536a(5): mov $0x5,%edx
536f(5): call 0xffffc641(%rip)
5374(3): mov %rbx,%rsi
5377(3): mov %rax,%rdi
537a(1): pop %rbx
537b(5): jmp 0xffffc725(%rip)

"xmalloc" :
5380(1): push %rbx
5381(3): mov %rdi,%rbx
5384(5): call 0xffffc77c(%rip)
5389(3): test %rax,%rax
538c(2): jnz 0x7(%rip)
538e(3): test %rbx,%rbx
5391(2): jnz 0x4(%rip)
5393(1): pop %rbx
5394(1): ret near (%rsp)
5395(5): call 0x23b(%rip)

"xnmalloc" :
53a0(3): mov %rdi,%rax
53a3(3): mul %rax,%rsi,%rdx
53a6(3): mov %rax,%rdi
53a9(3): seto %al
53ac(3): test %rdi,%rdi
53af(2): js 0xc(%rip)
53b1(3): movzx %al,%eax
53b4(3): test %rax,%rax
53b7(2): jnz 0x4(%rip)
53b9(2): jmp 0xffffffc7(%rip)
53bb(4): sub $0x8,%rsp
53bf(5): call 0x211(%rip)

"xrealloc" :
53e0(3): test %rsi,%rsi
53e3(1): push %rbx
53e4(3): mov %rsi,%rbx
53e7(2): jnz 0x7(%rip)
53e9(3): test %rdi,%rdi
53ec(2): jnz 0x1c(%rip)
53ee(3): mov %rbx,%rsi
53f1(5): call 0xffffc76f(%rip)
53f6(3): test %rax,%rax
53f9(2): jnz 0x7(%rip)
53fb(3): test %rbx,%rbx
53fe(2): jnz 0x13(%rip)
5400(1): pop %rbx
5401(1): ret near (%rsp)
5402(6): nop 0x0(%rax,%rax,1)
5408(5): call 0xffffc4c8(%rip)
540d(2): xor %eax,%eax
540f(1): pop %rbx
5410(1): ret near (%rsp)
5411(5): call 0x1bf(%rip)

"xnrealloc" :
5420(3): mov %rsi,%rax
5423(3): mul %rax,%rdx,%rdx
5426(3): mov %rax,%rsi
5429(3): seto %al
542c(3): test %rsi,%rsi
542f(2): js 0xc(%rip)
5431(3): movzx %al,%eax
5434(3): test %rax,%rax
5437(2): jnz 0x4(%rip)
5439(2): jmp 0xffffffa7(%rip)
543b(4): sub $0x8,%rsp
543f(5): call 0x191(%rip)

"x2nrealloc" :
5450(3): test %rdi,%rdi
5453(3): mov %rdx,%r9
5456(3): mov (%rsi),%rcx
5459(2): jz 0x37(%rip)
545b(2): xor %edx,%edx
545d(a): mov $0x6148914691236517204,%rax
5467(3): div %r9,%rax
546a(3): cmp %rcx,%rax
546d(2): jbe 0x3e(%rip)
546f(3): mov %rcx,%rax
5472(3): shr $0x1,%rax
5475(5): lea 0x1(%rax,%rcx,1),%rcx
547a(3): mov %rcx,(%rsi)
547d(4): imul %r9,%rcx
5481(3): mov %rcx,%rsi
5484(5): jmp 0xffffff5c(%rip)
5489(7): nop 0x0(%rax)
5490(3): test %rcx,%rcx
5493(2): jz 0x25(%rip)
5495(3): mov %rcx,%rax
5498(3): mul %rax,%r9,%rdx
549b(3): seto %dl
549e(3): test %rax,%rax
54a1(3): movzx %dl,%edx
54a4(2): js 0x7(%rip)
54a6(3): test %rdx,%rdx
54a9(2): jz 0xffffffd1(%rip)
54ab(4): sub $0x8,%rsp
54af(5): call 0x121(%rip)
54b4(4): nop 0x0(%rax)
54b8(2): xor %edx,%edx
54ba(5): mov $0x80,%eax
54bf(3): xor %r8d,%r8d
54c2(3): div %r9,%rax
54c5(3): test %rax,%rax
54c8(4): setz %r8b
54cc(4): lea 0x0(%r8,%rax,1),%rcx
54d0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
54e0(3): test %rdi,%rdi
54e3(3): mov (%rsi),%rax
54e6(2): jz 0x2a(%rip)
54e8(a): mov $0x6148914691236517203,%rdx
54f2(3): cmp %rdx,%rax
54f5(2): jnbe 0x2c(%rip)
54f7(3): mov %rax,%rdx
54fa(3): shr $0x1,%rdx
54fd(5): lea 0x1(%rdx,%rax,1),%rax
5502(3): mov %rax,(%rsi)
5505(3): mov %rax,%rsi
5508(5): jmp 0xfffffed8(%rip)
550d(3): nop (%rax)
5510(3): test %rax,%rax
5513(5): mov $0x80,%edx
5518(4): cmove %rdx,%rax
551c(3): test %rax,%rax
551f(2): jns 0xffffffe3(%rip)
5521(4): sub $0x8,%rsp
5525(5): call 0xab(%rip)

"xzalloc" :
5530(1): push %rbx
5531(3): mov %rdi,%rbx
5534(5): call 0xfffffe4c(%rip)
5539(3): mov %rbx,%rdx
553c(2): xor %esi,%esi
553e(3): mov %rax,%rdi
5541(1): pop %rbx
5542(5): jmp 0xffffc51e(%rip)

"xcalloc" :
5550(3): mov %rdi,%rax
5553(4): sub $0x8,%rsp
5557(3): mul %rax,%rsi,%rdx
555a(3): seto %dl
555d(3): test %rax,%rax
5560(2): js 0x19(%rip)
5562(3): movzx %dl,%edx
5565(3): test %rdx,%rdx
5568(2): jnz 0x11(%rip)
556a(5): call 0xffffc546(%rip)
556f(3): test %rax,%rax
5572(2): jz 0x7(%rip)
5574(4): add $0x8,%rsp
5578(1): ret near (%rsp)
5579(5): call 0x57(%rip)

"xmemdup" :
5580(1): push %rbp
5581(1): push %rbx
5582(3): mov %rdi,%rbp
5585(3): mov %rsi,%rdi
5588(3): mov %rsi,%rbx
558b(4): sub $0x8,%rsp
558f(5): call 0xfffffdf1(%rip)
5594(4): add $0x8,%rsp
5598(3): mov %rbx,%rdx
559b(3): mov %rbp,%rsi
559e(1): pop %rbx
559f(1): pop %rbp
55a0(3): mov %rax,%rdi
55a3(5): jmp 0xffffc52d(%rip)

"xstrdup" :
55b0(1): push %rbx
55b1(3): mov %rdi,%rbx
55b4(5): call 0xffffc41c(%rip)
55b9(3): mov %rbx,%rdi
55bc(4): lea 0x1(%rax),%rsi
55c0(1): pop %rbx
55c1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
55d0(7): lea 0x10118(%rip),%rsi
55d7(4): sub $0x8,%rsp
55db(5): mov $0x5,%edx
55e0(2): xor %edi,%edi
55e2(5): call 0xffffc3ce(%rip)
55e7(6): mov 0x213a83(%rip),%edi
55ed(7): lea 0xf878(%rip),%rdx
55f4(3): mov %rax,%rcx
55f7(2): xor %esi,%esi
55f9(2): xor %eax,%eax
55fb(5): call 0xffffc5b5(%rip)
5600(5): call 0xffffc2e0(%rip)

"xnumtoimax" :
5610(2): push %r15
5612(2): push %r14
5614(3): mov %rcx,%r15
5617(2): push %r13
5619(2): push %r12
561b(3): mov %rdx,%r14
561e(1): push %rbp
561f(1): push %rbx
5620(2): mov %esi,%edx
5622(2): xor %esi,%esi
5624(3): mov %rdi,%r12
5627(3): mov %r9,%r13
562a(4): sub $0x18,%rsp
562e(3): mov %rsp,%rcx
5631(4): mov 0x50(%rsp),%ebx
5635(9): mov $0x28,%rax
563e(5): mov %rax,0x8(%rsp)
5643(2): xor %eax,%eax
5645(5): call 0x11b(%rip)
564a(2): test %eax,%eax
564c(6): jnz 0x94(%rip)
5652(4): mov (%rsp),%rbp
5656(3): cmp %r14,%rbp
5659(2): jl 0x7(%rip)
565b(3): cmp %r15,%rbp
565e(2): jle 0x58(%rip)
5660(5): call 0xffffc290(%rip)
5665(7): cmp $0x3fffffff,%rbp
566c(3): mov %rax,%r14
566f(6): jle 0x91(%rip)
5675(7): mov $0x4b,(%r14)
567c(3): mov %r12,%rdi
567f(5): call 0xfffff6c1(%rip)
5684(3): mov (%r14),%esi
5687(3): mov %rax,%r8
568a(5): mov $0x0,%eax
568f(7): lea 0xf7d2(%rip),%rdx
5696(3): mov %r13,%rcx
5699(3): cmp $0x16,%esi
569c(3): cmove %eax,%esi
569f(2): test %ebx,%ebx
56a1(5): mov $0x1,%eax
56a6(3): cmove %eax,%ebx
56a9(2): xor %eax,%eax
56ab(2): mov %ebx,%edi
56ad(5): call 0xffffc503(%rip)
56b2(4): mov (%rsp),%rbp
56b6(5): mov 0x8(%rsp),%rdx
56bb(9): xor $0x28,%rdx
56c4(3): mov %rbp,%rax
56c7(2): jnz 0x55(%rip)
56c9(4): add $0x18,%rsp
56cd(1): pop %rbx
56ce(1): pop %rbp
56cf(2): pop %r12
56d1(2): pop %r13
56d3(2): pop %r14
56d5(2): pop %r15
56d7(1): ret near (%rsp)
56d8(8): nop 0x0(%rax,%rax,1)
56e0(2): mov %eax,%ebp
56e2(5): call 0xffffc20e(%rip)
56e7(3): cmp $0x1,%ebp
56ea(3): mov %rax,%r14
56ed(2): jz 0xffffff88(%rip)
56ef(3): cmp $0x3,%ebp
56f2(2): jnz 0xffffff8a(%rip)
56f4(6): mov $0x0,(%rax)
56fa(2): jmp 0xffffff82(%rip)
56fc(4): nop 0x0(%rax)
5700(7): cmp $0xbfffffff,%rbp
5707(5): mov $0x22,%eax
570c(5): mov $0x4b,%edx
5711(3): cmovng %edx,%eax
5714(3): mov %eax,(%r14)
5717(5): jmp 0xffffff65(%rip)
571c(5): call 0xffffc2c4(%rip)

"xdectoimax" :
5730(4): sub $0x10,%rsp
5734(2): push %r9
5736(3): mov %r8,%r9
5739(3): mov %rcx,%r8
573c(3): mov %rdx,%rcx
573f(3): mov %rsi,%rdx
5742(5): mov $0xa,%esi
5747(5): call 0xfffffec9(%rip)
574c(4): add $0x18,%rsp
5750(1): ret near (%rsp)

"xstrtoimax" :
5760(2): push %r15
5762(2): push %r14
5764(2): push %r13
5766(2): push %r12
5768(1): push %rbp
5769(1): push %rbx
576a(4): sub $0x28,%rsp
576e(9): mov $0x28,%rax
5777(5): mov %rax,0x18(%rsp)
577c(2): xor %eax,%eax
577e(3): cmp $0x24,%edx
5781(6): jnbe 0x66e(%rip)
5787(5): lea 0x10(%rsp),%rax
578c(3): test %rsi,%rsi
578f(3): mov %rsi,%rbx
5792(3): mov %rdi,%r12
5795(2): mov %edx,%ebp
5797(3): mov %rcx,%r14
579a(4): cmove %rax,%rbx
579e(3): mov %r8,%r15
57a1(5): call 0xffffc14f(%rip)
57a6(2): xor %ecx,%ecx
57a8(2): mov %ebp,%edx
57aa(6): mov $0x0,(%rax)
57b0(3): mov %rbx,%rsi
57b3(3): mov %r12,%rdi
57b6(3): mov %rax,%r13
57b9(5): call 0xffffc1a7(%rip)
57be(3): mov (%rbx),%rcx
57c1(3): mov %rax,%rbp
57c4(3): cmp %r12,%rcx
57c7(2): jz 0x61(%rip)
57c9(4): mov 0x0(%r13),%eax
57cd(2): test %eax,%eax
57cf(2): jnz 0x41(%rip)
57d1(3): xor %r12d,%r12d
57d4(3): test %r15,%r15
57d7(2): jz 0xf(%rip)
57d9(4): movzx (%rcx),%r13d
57dd(3): test %r13b,%r13b
57e0(6): jnz 0x83(%rip)
57e6(3): mov %rbp,(%r14)
57e9(5): mov 0x18(%rsp),%rdi
57ee(9): xor $0x28,%rdi
57f7(3): mov %r12d,%eax
57fa(6): jnz 0x614(%rip)
5800(4): add $0x28,%rsp
5804(1): pop %rbx
5805(1): pop %rbp
5806(2): pop %r12
5808(2): pop %r13
580a(2): pop %r14
580c(2): pop %r15
580e(1): ret near (%rsp)
580f(1): nop 
5810(3): cmp $0x22,%eax
5813(6): mov $0x4,%r12d
5819(2): jnz 0xffffffd0(%rip)
581b(6): mov $0x1,%r12d
5821(2): jmp 0xffffffb3(%rip)
5823(5): nop 0x0(%rax,%rax,1)
5828(3): test %r15,%r15
582b(6): jz 0x495(%rip)
5831(4): movzx (%rcx),%r13d
5835(5): mov %rcx,0x8(%rsp)
583a(6): mov $0x4,%r12d
5840(3): test %r13b,%r13b
5843(2): jz 0xffffffa6(%rip)
5845(4): movsx %r13b,%esi
5849(3): mov %r15,%rdi
584c(5): call 0xffffc1c4(%rip)
5851(3): test %rax,%rax
5854(5): mov 0x8(%rsp),%rcx
5859(2): jz 0xffffff90(%rip)
585b(5): mov $0x1,%ebp
5860(3): xor %r12d,%r12d
5863(4): movsx %r13b,%esi
5867(3): mov %r15,%rdi
586a(5): mov %rcx,0x8(%rsp)
586f(5): call 0xffffc1a1(%rip)
5874(3): test %rax,%rax
5877(5): mov 0x8(%rsp),%rcx
587c(2): jz 0x5c(%rip)
587e(4): lea 0xffffffbb(%r13),%eax
5882(2): cmp $0x2f,%al
5884(2): jnbe 0x64(%rip)
5886(a): mov $0x142129060940101,%rdx
5890(4): bt %rax,%rdx
5894(2): jnb 0x54(%rip)
5896(5): mov $0x30,%esi
589b(3): mov %r15,%rdi
589e(5): mov %rcx,0x8(%rsp)
58a3(5): call 0xffffc16d(%rip)
58a8(3): test %rax,%rax
58ab(5): mov 0x8(%rsp),%rcx
58b0(2): jz 0x38(%rip)
58b2(4): movzx 0x1(%rcx),%eax
58b6(2): cmp $0x44,%al
58b8(2): jz 0xe(%rip)
58ba(2): cmp $0x69,%al
58bc(6): jz 0x4ec(%rip)
58c2(2): cmp $0x42,%al
58c4(2): jnz 0x24(%rip)
58c6(5): mov $0x2,%edi
58cb(5): mov $0x3e8,%eax
58d0(2): jmp 0x22(%rip)
58d2(6): nop 0x0(%rax,%rax,1)
58d8(3): mov %rbp,(%r14)
58db(4): or $0x2,%r12d
58df(5): jmp 0xffffff0a(%rip)
58e4(4): nop 0x0(%rax)
58e8(5): mov $0x1,%edi
58ed(5): mov $0x400,%eax
58f2(4): sub $0x42,%r13d
58f6(4): cmp $0x35,%r13b
58fa(2): jnbe 0xffffffde(%rip)
58fc(7): lea 0xfe45(%rip),%rsi
5903(4): movzx %r13b,%r13d
5907(4): movsxd 0x0(%rsi,%r13,4),%rdx
590b(3): add %rsi,%rdx
590e(2): jmp %rdx
5910(a): mov $0x-9223372036854775808,%r8
591a(3): movsxd %eax,%rsi
591d(3): mov %r8,%rax
5920(2): cdq %rax
5922(3): idiv %rsi,%rax
5925(3): cmp %rax,%rbp
5928(3): mov %rax,%r9
592b(6): jl 0x4aa(%rip)
5931(a): mov $0x9223372036854775807,%r10
593b(3): mov %r10,%rax
593e(2): cdq %rax
5940(3): idiv %rsi,%rax
5943(3): cmp %rax,%rbp
5946(6): jnle 0x49c(%rip)
594c(4): imul %rsi,%rbp
5950(3): cmp %rbp,%r9
5953(6): jnle 0x482(%rip)
5959(3): cmp %rbp,%rax
595c(6): jl 0x486(%rip)
5962(4): imul %rsi,%rbp
5966(2): xor %eax,%eax
5968(3): or %eax,%r12d
596b(5): nop 0x0(%rax,%rax,1)
5970(3): movsxd %edi,%rax
5973(3): add %rax,%rcx
5976(3): mov %r12d,%eax
5979(3): or $0x2,%eax
597c(3): mov %rcx,(%rbx)
597f(3): cmp $0x0,(%rcx)
5982(4): cmovne %eax,%r12d
5986(5): jmp 0xfffffe60(%rip)
598b(5): nop 0x0(%rax,%rax,1)
5990(a): mov $0x-4611686018427387904,%rax
599a(3): cmp %rax,%rbp
599d(6): jl 0x333(%rip)
59a3(a): mov $0x4611686018427387903,%rax
59ad(3): cmp %rax,%rbp
59b0(6): jnle 0x3e0(%rip)
59b6(3): add %rbp,%rbp
59b9(2): jmp 0xffffffb7(%rip)
59bb(5): nop 0x0(%rax,%rax,1)
59c0(a): mov $0x-18014398509481984,%rax
59ca(3): cmp %rax,%rbp
59cd(6): jl 0x303(%rip)
59d3(a): mov $0x18014398509481983,%rax
59dd(3): cmp %rax,%rbp
59e0(6): jnle 0x3b0(%rip)
59e6(4): shl/sal $0x9,%rbp
59ea(2): jmp 0xffffff86(%rip)
59ec(4): nop 0x0(%rax)
59f0(3): movsxd %eax,%rsi
59f3(a): mov $0x-9223372036854775808,%rax
59fd(6): mov $0x7,%r8d
5a03(2): cdq %rax
5a05(3): xor %r11d,%r11d
5a08(a): mov $0x9223372036854775807,%r9
5a12(3): idiv %rsi,%rax
5a15(3): mov %rax,%r10
5a18(2): jmp 0x27(%rip)
5a1a(6): nop 0x0(%rax,%rax,1)
5a20(3): mov %r9,%rax
5a23(2): cdq %rax
5a25(3): idiv %rsi,%rax
5a28(3): cmp %rbp,%rax
5a2b(6): jl 0x2ed(%rip)
5a31(4): imul %rsi,%rbp
5a35(4): sub $0x1,%r8d
5a39(6): jz 0x127(%rip)
5a3f(3): cmp %rbp,%r10
5a42(2): jle 0xffffffde(%rip)
5a44(6): mov $0x1,%r11d
5a4a(a): mov $0x-9223372036854775808,%rbp
5a54(2): jmp 0xffffffe1(%rip)
5a56(a): nop 0x0(%rax,%rax,1)
5a60(3): movsxd %eax,%rsi
5a63(a): mov $0x-9223372036854775808,%rax
5a6d(6): mov $0x8,%r8d
5a73(2): cdq %rax
5a75(3): xor %r11d,%r11d
5a78(a): mov $0x9223372036854775807,%r9
5a82(3): idiv %rsi,%rax
5a85(3): mov %rax,%r10
5a88(2): jmp 0x27(%rip)
5a8a(6): nop 0x0(%rax,%rax,1)
5a90(3): mov %r9,%rax
5a93(2): cdq %rax
5a95(3): idiv %rsi,%rax
5a98(3): cmp %rbp,%rax
5a9b(6): jl 0x24d(%rip)
5aa1(4): imul %rsi,%rbp
5aa5(4): sub $0x1,%r8d
5aa9(6): jz 0xb7(%rip)
5aaf(3): cmp %rbp,%r10
5ab2(2): jle 0xffffffde(%rip)
5ab4(6): mov $0x1,%r11d
5aba(a): mov $0x-9223372036854775808,%rbp
5ac4(2): jmp 0xffffffe1(%rip)
5ac6(a): nop 0x0(%rax,%rax,1)
5ad0(a): mov $0x-9223372036854775808,%r8
5ada(3): movsxd %eax,%rsi
5add(3): mov %r8,%rax
5ae0(2): cdq %rax
5ae2(3): idiv %rsi,%rax
5ae5(3): cmp %rax,%rbp
5ae8(6): jl 0x1e8(%rip)
5aee(4): sub $0x1,%r8
5af2(3): mov %r8,%rax
5af5(2): cdq %rax
5af7(3): idiv %rsi,%rax
5afa(3): cmp %rax,%rbp
5afd(6): jnle 0x293(%rip)
5b03(4): imul %rsi,%rbp
5b07(5): jmp 0xfffffe69(%rip)
5b0c(4): nop 0x0(%rax)
5b10(3): movsxd %eax,%rsi
5b13(a): mov $0x-9223372036854775808,%rax
5b1d(6): mov $0x3,%r8d
5b23(2): cdq %rax
5b25(3): xor %r11d,%r11d
5b28(a): mov $0x9223372036854775807,%r9
5b32(3): idiv %rsi,%rax
5b35(3): mov %rax,%r10
5b38(3): cmp %rbp,%r10
5b3b(6): jnle 0x1f5(%rip)
5b41(3): mov %r9,%rax
5b44(2): cdq %rax
5b46(3): idiv %rsi,%rax
5b49(3): cmp %rbp,%rax
5b4c(6): jl 0x274(%rip)
5b52(4): imul %rsi,%rbp
5b56(4): sub $0x1,%r8d
5b5a(2): jnz 0xffffffde(%rip)
5b5c(4): nop 0x0(%rax)
5b60(3): or %r11d,%r12d
5b63(5): jmp 0xfffffe0d(%rip)
5b68(8): nop 0x0(%rax,%rax,1)
5b70(3): movsxd %eax,%rsi
5b73(a): mov $0x-9223372036854775808,%rax
5b7d(6): mov $0x6,%r8d
5b83(2): cdq %rax
5b85(3): xor %r11d,%r11d
5b88(a): mov $0x9223372036854775807,%r9
5b92(3): idiv %rsi,%rax
5b95(3): mov %rax,%r10
5b98(2): jmp 0x23(%rip)
5b9a(6): nop 0x0(%rax,%rax,1)
5ba0(3): mov %r9,%rax
5ba3(2): cdq %rax
5ba5(3): idiv %rsi,%rax
5ba8(3): cmp %rbp,%rax
5bab(6): jl 0x19d(%rip)
5bb1(4): imul %rsi,%rbp
5bb5(4): sub $0x1,%r8d
5bb9(2): jz 0xffffffa7(%rip)
5bbb(3): cmp %rbp,%r10
5bbe(2): jle 0xffffffe2(%rip)
5bc0(6): mov $0x1,%r11d
5bc6(a): mov $0x-9223372036854775808,%rbp
5bd0(2): jmp 0xffffffe5(%rip)
5bd2(6): nop 0x0(%rax,%rax,1)
5bd8(3): movsxd %eax,%rsi
5bdb(a): mov $0x-9223372036854775808,%rax
5be5(6): mov $0x5,%r8d
5beb(2): cdq %rax
5bed(3): xor %r11d,%r11d
5bf0(a): mov $0x9223372036854775807,%r9
5bfa(3): idiv %rsi,%rax
5bfd(3): mov %rax,%r10
5c00(2): jmp 0x27(%rip)
5c02(6): nop 0x0(%rax,%rax,1)
5c08(3): mov %r9,%rax
5c0b(2): cdq %rax
5c0d(3): idiv %rsi,%rax
5c10(3): cmp %rbp,%rax
5c13(6): jl 0x14d(%rip)
5c19(4): imul %rsi,%rbp
5c1d(4): sub $0x1,%r8d
5c21(6): jz 0xffffff3f(%rip)
5c27(3): cmp %rbp,%r10
5c2a(2): jle 0xffffffde(%rip)
5c2c(6): mov $0x1,%r11d
5c32(a): mov $0x-9223372036854775808,%rbp
5c3c(2): jmp 0xffffffe1(%rip)
5c3e(2): nop 
5c40(a): mov $0x-9007199254740992,%rax
5c4a(3): cmp %rax,%rbp
5c4d(6): jl 0x83(%rip)
5c53(a): mov $0x9007199254740991,%rax
5c5d(3): cmp %rax,%rbp
5c60(6): jnle 0x130(%rip)
5c66(4): shl/sal $0xa,%rbp
5c6a(5): jmp 0xfffffd06(%rip)
5c6f(1): nop 
5c70(3): movsxd %eax,%rsi
5c73(a): mov $0x-9223372036854775808,%rax
5c7d(6): mov $0x4,%r8d
5c83(2): cdq %rax
5c85(3): xor %r11d,%r11d
5c88(a): mov $0x9223372036854775807,%r9
5c92(3): idiv %rsi,%rax
5c95(3): mov %rax,%r10
5c98(3): cmp %rbp,%r10
5c9b(2): jnle 0x65(%rip)
5c9d(3): mov %r9,%rax
5ca0(2): cdq %rax
5ca2(3): idiv %rsi,%rax
5ca5(3): cmp %rbp,%rax
5ca8(6): jl 0xd0(%rip)
5cae(4): imul %rsi,%rbp
5cb2(4): sub $0x1,%r8d
5cb6(2): jnz 0xffffffe2(%rip)
5cb8(5): jmp 0xfffffea8(%rip)
5cbd(3): nop (%rax)
5cc0(6): mov $0x4,%r12d
5cc6(5): jmp 0xfffffb23(%rip)
5ccb(5): nop 0x0(%rax,%rax,1)
5cd0(6): mov $0x1,%r12d
5cd6(a): mov $0x-9223372036854775808,%rbp
5ce0(5): jmp 0xfffffc90(%rip)
5ce5(3): nop (%rax)
5ce8(6): mov $0x1,%r11d
5cee(a): mov $0x9223372036854775807,%rbp
5cf8(5): jmp 0xfffffdad(%rip)
5cfd(3): nop (%rax)
5d00(6): mov $0x1,%r11d
5d06(a): mov $0x-9223372036854775808,%rbp
5d10(2): jmp 0xffffffa2(%rip)
5d12(6): nop 0x0(%rax,%rax,1)
5d18(6): mov $0x1,%r11d
5d1e(a): mov $0x9223372036854775807,%rbp
5d28(5): jmp 0xfffffd0d(%rip)
5d2d(3): nop (%rax)
5d30(6): mov $0x1,%r11d
5d36(a): mov $0x-9223372036854775808,%rbp
5d40(5): jmp 0xfffffe16(%rip)
5d45(3): nop (%rax)
5d48(6): mov $0x1,%r11d
5d4e(a): mov $0x9223372036854775807,%rbp
5d58(5): jmp 0xfffffe5d(%rip)
5d5d(3): nop (%rax)
5d60(6): mov $0x1,%r11d
5d66(a): mov $0x9223372036854775807,%rbp
5d70(5): jmp 0xfffffead(%rip)
5d75(3): nop (%rax)
5d78(6): mov $0x1,%r11d
5d7e(a): mov $0x9223372036854775807,%rbp
5d88(5): jmp 0xffffff2a(%rip)
5d8d(3): nop (%rax)
5d90(6): mov $0x1,%r12d
5d96(a): mov $0x9223372036854775807,%rbp
5da0(5): jmp 0xfffffbd0(%rip)
5da5(3): nop (%rax)
5da8(2): xor %edi,%edi
5daa(4): cmp $0x42,0x2(%rcx)
5dae(5): mov $0x400,%eax
5db3(4): setz %dil
5db7(4): lea 0x1(%rdi,%rdi,1),%edi
5dbb(5): jmp 0xfffffb37(%rip)
5dc0(6): mov $0x1,%r11d
5dc6(a): mov $0x9223372036854775807,%rbp
5dd0(5): jmp 0xfffffd86(%rip)
5dd5(5): mov $0x1,%eax
5dda(3): mov %r8,%rbp
5ddd(5): jmp 0xfffffb8b(%rip)
5de2(5): mov $0x1,%eax
5de7(3): mov %r10,%rbp
5dea(5): jmp 0xfffffb7e(%rip)
5def(7): lea 0xfa2a(%rip),%rcx
5df6(7): lea 0xf903(%rip),%rsi
5dfd(7): lea 0xf91c(%rip),%rdi
5e04(5): mov $0x54,%edx
5e09(5): call 0xffffbc47(%rip)
5e0e(5): call 0xffffbbd2(%rip)

"rpl_fclose" :
5e20(2): push %r12
5e22(1): push %rbp
5e23(1): push %rbx
5e24(3): mov %rdi,%rbx
5e27(5): call 0xffffbcb9(%rip)
5e2c(2): test %eax,%eax
5e2e(3): mov %rbx,%rdi
5e31(2): js 0x56(%rip)
5e33(5): call 0xffffbd0d(%rip)
5e38(2): test %eax,%eax
5e3a(2): jnz 0x2e(%rip)
5e3c(3): mov %rbx,%rdi
5e3f(5): call 0x61(%rip)
5e44(2): test %eax,%eax
5e46(2): jz 0x3e(%rip)
5e48(5): call 0xffffbaa8(%rip)
5e4d(3): mov (%rax),%r12d
5e50(3): mov %rbx,%rdi
5e53(3): mov %rax,%rbp
5e56(5): call 0xffffbb2a(%rip)
5e5b(3): test %r12d,%r12d
5e5e(2): jnz 0x32(%rip)
5e60(1): pop %rbx
5e61(1): pop %rbp
5e62(2): pop %r12
5e64(1): ret near (%rsp)
5e65(3): nop (%rax)
5e68(3): mov %rbx,%rdi
5e6b(5): call 0xffffbc75(%rip)
5e70(2): xor %esi,%esi
5e72(5): mov $0x1,%edx
5e77(2): mov %eax,%edi
5e79(5): call 0xffffbbc7(%rip)
5e7e(4): cmp $0xffffffff,%rax
5e82(2): jnz 0xffffffba(%rip)
5e84(3): mov %rbx,%rdi
5e87(1): pop %rbx
5e88(1): pop %rbp
5e89(2): pop %r12
5e8b(5): jmp 0xffffbaf5(%rip)
5e90(4): mov %r12d,0x0(%rbp)
5e94(5): mov $0xffffffff,%eax
5e99(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5ea0(3): test %rdi,%rdi
5ea3(1): push %rbx
5ea4(3): mov %rdi,%rbx
5ea7(2): jz 0x13(%rip)
5ea9(5): call 0xffffbc97(%rip)
5eae(2): test %eax,%eax
5eb0(2): jz 0xa(%rip)
5eb2(6): test $0x100,(%rbx)
5eb8(2): jnz 0x10(%rip)
5eba(3): mov %rbx,%rdi
5ebd(1): pop %rbx
5ebe(5): jmp 0xffffbc62(%rip)
5ec3(5): nop 0x0(%rax,%rax,1)
5ec8(3): mov %rbx,%rdi
5ecb(5): mov $0x1,%edx
5ed0(2): xor %esi,%esi
5ed2(5): call 0xe(%rip)
5ed7(3): mov %rbx,%rdi
5eda(1): pop %rbx
5edb(5): jmp 0xffffbc45(%rip)

"rpl_fseeko" :
5ee0(4): mov 0x8(%rdi),%rax
5ee4(4): cmp %rax,0x10(%rdi)
5ee8(2): jz 0x8(%rip)
5eea(5): jmp 0xffffbcd6(%rip)
5eef(1): nop 
5ef0(4): mov 0x20(%rdi),%rax
5ef4(4): cmp %rax,0x28(%rdi)
5ef8(2): jnz 0xfffffff2(%rip)
5efa(5): cmp $0x0,0x48(%rdi)
5eff(2): jnz 0xffffffeb(%rip)
5f01(2): push %r12
5f03(1): push %rbp
5f04(3): mov %edx,%r12d
5f07(1): push %rbx
5f08(3): mov %rsi,%rbp
5f0b(3): mov %rdi,%rbx
5f0e(5): call 0xffffbbd2(%rip)
5f13(3): mov %r12d,%edx
5f16(3): mov %rbp,%rsi
5f19(2): mov %eax,%edi
5f1b(5): call 0xffffbb25(%rip)
5f20(4): cmp $0xffffffff,%rax
5f24(2): jz 0xe(%rip)
5f26(3): and $0xef,(%rbx)
5f29(7): mov %rax,0x90(%rbx)
5f30(2): xor %eax,%eax
5f32(1): pop %rbx
5f33(1): pop %rbp
5f34(2): pop %r12
5f36(1): ret near (%rsp)

"rpl_mbrtowc" :
5f40(2): push %r13
5f42(2): push %r12
5f44(3): mov %rsi,%r13
5f47(1): push %rbp
5f48(1): push %rbx
5f49(3): mov %rdi,%rbx
5f4c(3): mov %rdx,%r12
5f4f(4): sub $0x18,%rsp
5f53(9): mov $0x28,%rax
5f5c(5): mov %rax,0x8(%rsp)
5f61(2): xor %eax,%eax
5f63(5): lea 0x4(%rsp),%rax
5f68(3): test %rdi,%rdi
5f6b(4): cmove %rax,%rbx
5f6f(3): mov %rbx,%rdi
5f72(5): call 0xffffba8e(%rip)
5f77(4): cmp $0xfffffffd,%rax
5f7b(3): mov %rax,%rbp
5f7e(2): jbe 0x22(%rip)
5f80(3): test %r12,%r12
5f83(2): jz 0x1d(%rip)
5f85(2): xor %edi,%edi
5f87(5): call 0xe2d9(%rip)
5f8c(2): test %al,%al
5f8e(2): jnz 0x12(%rip)
5f90(5): movzx 0x0(%r13),%eax
5f95(5): mov $0x1,%ebp
5f9a(2): mov %eax,(%rbx)
5f9c(4): nop 0x0(%rax)
5fa0(5): mov 0x8(%rsp),%rdx
5fa5(9): xor $0x28,%rdx
5fae(3): mov %rbp,%rax
5fb1(2): jnz 0xd(%rip)
5fb3(4): add $0x18,%rsp
5fb7(1): pop %rbx
5fb8(1): pop %rbp
5fb9(2): pop %r12
5fbb(2): pop %r13
5fbd(1): ret near (%rsp)
5fbe(5): call 0xffffba22(%rip)

"peek_token_bracket" :
5fd0(4): mov 0x48(%rsi),%rax
5fd4(4): cmp %rax,0x68(%rsi)
5fd8(2): jle 0x58(%rip)
5fda(4): mov 0x8(%rsi),%r8
5fde(7): cmp $0x1,0x90(%rsi)
5fe5(5): movzx 0x0(%r8,%rax,1),%ecx
5fea(2): mov %cl,(%rdi)
5fec(2): jle 0x17(%rip)
5fee(4): cmp 0x30(%rsi),%rax
5ff2(2): jz 0x11(%rip)
5ff4(4): mov 0x10(%rsi),%r9
5ff8(5): cmp $0xff,0x0(%r9,%rax,4)
5ffd(6): jz 0x82(%rip)
6003(3): cmp $0x5c,%cl
6006(2): jz 0x6a(%rip)
6008(3): cmp $0x5b,%cl
600b(2): jz 0x35(%rip)
600d(3): cmp $0x5d,%cl
6010(6): jz 0xa0(%rip)
6016(3): cmp $0x5e,%cl
6019(6): jz 0x87(%rip)
601f(3): cmp $0x2d,%cl
6022(2): jnz 0x5d(%rip)
6024(4): mov $0x16,0x8(%rdi)
6028(5): mov $0x1,%eax
602d(1): ret near (%rsp)
602e(2): nop 
6030(4): mov $0x2,0x8(%rdi)
6034(2): xor %eax,%eax
6036(1): ret near (%rsp)
6037(9): nop 0x0(%rax,%rax,1)
6040(4): lea 0x1(%rax),%rcx
6044(4): cmp 0x58(%rsi),%rcx
6048(2): jnl 0x48(%rip)
604a(6): movzx 0x1(%r8,%rax,1),%eax
6050(2): cmp $0x3a,%al
6052(2): mov %al,(%rdi)
6054(6): jz 0x9c(%rip)
605a(2): cmp $0x3d,%al
605c(6): jz 0x84(%rip)
6062(2): cmp $0x2e,%al
6064(2): jnz 0x2c(%rip)
6066(4): mov $0x1a,0x8(%rdi)
606a(5): mov $0x2,%eax
606f(1): ret near (%rsp)
6070(3): and $0x1,%edx
6073(2): jz 0xc(%rip)
6075(4): lea 0x1(%rax),%rdx
6079(4): cmp 0x58(%rsi),%rdx
607d(2): jl 0x43(%rip)
607f(4): mov $0x1,0x8(%rdi)
6083(5): mov $0x1,%eax
6088(1): ret near (%rsp)
6089(7): nop 0x0(%rax)
6090(4): mov $0x1,0x8(%rdi)
6094(3): mov $0x5b,(%rdi)
6097(5): mov $0x1,%eax
609c(1): ret near (%rsp)
609d(3): nop (%rax)
60a0(4): mov $0x19,0x8(%rdi)
60a4(5): mov $0x1,%eax
60a9(1): ret near (%rsp)
60aa(6): nop 0x0(%rax,%rax,1)
60b0(4): mov $0x15,0x8(%rdi)
60b4(5): mov $0x1,%eax
60b9(1): ret near (%rsp)
60ba(6): nop 0x0(%rax,%rax,1)
60c0(4): mov %rdx,0x48(%rsi)
60c4(6): movzx 0x1(%r8,%rax,1),%eax
60ca(4): mov $0x1,0x8(%rdi)
60ce(2): mov %al,(%rdi)
60d0(5): mov $0x1,%eax
60d5(1): ret near (%rsp)
60d6(a): nop 0x0(%rax,%rax,1)
60e0(4): mov $0x1c,0x8(%rdi)
60e4(5): mov $0x2,%eax
60e9(1): ret near (%rsp)
60ea(6): nop 0x0(%rax,%rax,1)
60f0(3): and $0x4,%edx
60f3(2): jz 0xffffff9d(%rip)
60f5(4): mov $0x1e,0x8(%rdi)
60f9(5): mov $0x2,%eax
60fe(1): ret near (%rsp)

"mark_opt_subexp" :
6100(4): cmp $0x11,0x30(%rsi)
6104(2): jz 0xc(%rip)
6106(2): xor %eax,%eax
6108(1): ret near (%rsp)
6109(7): nop 0x0(%rax)
6110(4): cmp 0x28(%rsi),%rdi
6114(2): jnz 0xfffffff2(%rip)
6116(4): or $0x8,0x32(%rsi)
611a(2): xor %eax,%eax
611c(1): ret near (%rsp)

"check_dst_limits_calc_pos_1" :
6120(2): push %r15
6122(2): push %r14
6124(3): mov %rdx,%r9
6127(2): push %r13
6129(2): push %r12
612b(4): lea 0x0(%rcx,%rcx,2),%rdx
612f(1): push %rbp
6130(1): push %rbx
6131(3): mov %esi,%r15d
6134(4): sub $0x48,%rsp
6138(7): mov 0x98(%rdi),%r14
613f(4): mov %rdi,(%rsp)
6143(4): mov 0x30(%r14),%rax
6147(4): lea 0x0(%rax,%rdx,8),%r12
614b(6): cmp $0x0,0x8(%r12)
6151(6): jle 0x194(%rip)
6157(4): lea 0x0(%r8,%r8,4),%rax
615b(3): mov %rcx,%r11
615e(3): mov %r9d,%ecx
6161(3): mov %r8,%r10
6164(2): xor %ebx,%ebx
6166(4): mov %esi,0x20(%rsp)
616a(4): shl/sal $0x3,%rax
616e(3): mov %r9,%r15
6171(5): mov %r11,0x10(%rsp)
6176(5): mov %rax,0x28(%rsp)
617b(5): mov $0x1,%eax
6180(3): shl/sal %cl,%rax
6183(5): mov %rax,0x18(%rsp)
6188(2): not %eax
618a(5): mov %ax,0x26(%rsp)
618f(2): mov %esi,%eax
6191(3): and $0x1,%eax
6194(4): mov %eax,0xc(%rsp)
6198(2): mov %esi,%eax
619a(3): and $0x2,%eax
619d(4): mov %eax,0x8(%rsp)
61a1(2): jmp 0x24(%rip)
61a3(5): nop 0x0(%rax,%rax,1)
61a8(3): cmp $0x9,%dl
61ab(6): jz 0x155(%rip)
61b1(3): cmp $0x4,%dl
61b4(2): jz 0x54(%rip)
61b6(4): add $0x1,%rbx
61ba(5): cmp %rbx,0x8(%r12)
61bf(6): jle 0x121(%rip)
61c5(5): mov 0x10(%r12),%rax
61ca(4): mov 0x0(%rax,%rbx,8),%rbp
61ce(3): mov %rbp,%rax
61d1(4): shl/sal $0x4,%rax
61d5(3): add (%r14),%rax
61d8(4): movzx 0x8(%rax),%edx
61dc(3): cmp $0x8,%dl
61df(2): jnz 0xffffffc9(%rip)
61e1(4): mov 0xc(%rsp),%ecx
61e5(2): test %ecx,%ecx
61e7(2): jz 0xffffffcf(%rip)
61e9(3): cmp %r15,(%rax)
61ec(2): jnz 0xffffffca(%rip)
61ee(4): add $0x48,%rsp
61f2(5): mov $0xffffffff,%eax
61f7(1): pop %rbx
61f8(1): pop %rbp
61f9(2): pop %r12
61fb(2): pop %r13
61fd(2): pop %r14
61ff(2): pop %r15
6201(1): ret near (%rsp)
6202(6): nop 0x0(%rax,%rax,1)
6208(4): cmp $0xffffffff,%r10
620c(2): jz 0xffffffaa(%rip)
620e(4): mov (%rsp),%rax
6212(5): mov 0x28(%rsp),%r13
6217(3): mov %rbp,%rdi
621a(5): mov %r12,0x30(%rsp)
621f(5): mov %rbx,0x38(%rsp)
6224(3): mov %r10,%r12
6227(7): add 0xd8(%rax),%r13
622e(5): lea 0x0(%rbp,%rbp,2),%rax
6233(3): mov %r14,%rbp
6236(3): mov %rdi,%r14
6239(4): shl/sal $0x3,%rax
623d(3): mov %rax,%rbx
6240(4): cmp %r14,0x0(%r13)
6244(2): jnz 0x6c(%rip)
6246(4): cmp $0x3f,%r15
624a(2): jnle 0xe(%rip)
624c(5): movzx 0x22(%r13),%eax
6251(5): test %rax,0x18(%rsp)
6256(2): jz 0x5a(%rip)
6258(4): mov 0x28(%rbp),%rax
625c(5): mov 0x10(%rax,%rbx,1),%rax
6261(3): mov (%rax),%rcx
6264(5): cmp %rcx,0x10(%rsp)
6269(6): jz 0xc7(%rip)
626f(4): mov 0x20(%rsp),%esi
6273(4): mov (%rsp),%rdi
6277(3): mov %r12,%r8
627a(3): mov %r15,%rdx
627d(5): call 0xfffffea3(%rip)
6282(3): cmp $0xff,%eax
6285(6): jz 0xffffff69(%rip)
628b(2): test %eax,%eax
628d(2): jnz 0xa(%rip)
628f(4): mov 0x8(%rsp),%esi
6293(2): test %esi,%esi
6295(2): jnz 0x80(%rip)
6297(4): cmp $0x3f,%r15
629b(2): jnle 0x15(%rip)
629d(5): movzx 0x26(%rsp),%eax
62a2(5): and %ax,0x22(%r13)
62a7(9): nop 0x0(%rax,%rax,1)
62b0(4): add $0x28,%r13
62b4(5): cmp $0x0,0xfffffff8(%r13)
62b9(2): jnz 0xffffff87(%rip)
62bb(5): mov 0x38(%rsp),%rbx
62c0(3): mov %r12,%r10
62c3(5): mov 0x30(%rsp),%r12
62c8(3): mov %rbp,%r14
62cb(4): add $0x1,%rbx
62cf(5): cmp %rbx,0x8(%r12)
62d4(6): jnle 0xfffffef1(%rip)
62da(6): nop 0x0(%rax,%rax,1)
62e0(5): mov 0x20(%rsp),%r15d
62e5(4): add $0x48,%rsp
62e9(3): mov %r15d,%eax
62ec(1): pop %rbx
62ed(2): sar $0x1,%eax
62ef(1): pop %rbp
62f0(2): pop %r12
62f2(2): pop %r13
62f4(2): pop %r14
62f6(2): pop %r15
62f8(1): ret near (%rsp)
62f9(7): nop 0x0(%rax)
6300(4): mov 0x8(%rsp),%edx
6304(2): test %edx,%edx
6306(6): jz 0xfffffeb0(%rip)
630c(3): cmp %r15,(%rax)
630f(6): jnz 0xfffffea7(%rip)
6315(4): add $0x48,%rsp
6319(2): xor %eax,%eax
631b(1): pop %rbx
631c(1): pop %rbp
631d(2): pop %r12
631f(2): pop %r13
6321(2): pop %r14
6323(2): pop %r15
6325(1): ret near (%rsp)
6326(a): nop 0x0(%rax,%rax,1)
6330(5): mov 0x20(%rsp),%r15d
6335(4): add $0x48,%rsp
6339(1): pop %rbx
633a(1): pop %rbp
633b(3): mov %r15d,%eax
633e(3): and $0x1,%eax
6341(2): pop %r12
6343(2): neg %eax
6345(2): pop %r13
6347(2): pop %r14
6349(2): pop %r15
634b(1): ret near (%rsp)

"check_dst_limits_calc_pos" :
6350(7): mov 0xd8(%rdi),%rax
6357(4): lea 0x0(%rsi,%rsi,4),%rsi
635b(4): lea 0x0(%rax,%rsi,8),%rax
635f(4): mov 0x10(%rax),%r10
6363(3): cmp %r8,%r10
6366(2): jnle 0x4a(%rip)
6368(4): mov 0x18(%rax),%rax
636c(3): cmp %r8,%rax
636f(2): jl 0x21(%rip)
6371(2): xor %esi,%esi
6373(3): cmp %r8,%r10
6376(4): setz %sil
637a(3): or $0x2,%esi
637d(3): cmp %r8,%rax
6380(2): jz 0x25(%rip)
6382(2): xor %eax,%eax
6384(3): cmp %r8,%r10
6387(2): jz 0x19(%rip)
6389(2): REP ret near (%rsp)
638b(5): nop 0x0(%rax,%rax,1)
6390(5): mov $0x1,%eax
6395(1): ret near (%rsp)
6396(a): nop 0x0(%rax,%rax,1)
63a0(5): mov $0x1,%esi
63a5(3): mov %r9,%r8
63a8(5): jmp 0xfffffd78(%rip)
63ad(3): nop (%rax)
63b0(5): mov $0xffffffff,%eax
63b5(1): ret near (%rsp)

"postorder" :
63c0(2): push %r12
63c2(3): mov %rsi,%r12
63c5(1): push %rbp
63c6(3): mov %rdx,%rbp
63c9(1): push %rbx
63ca(3): mov %rdi,%rbx
63cd(2): jmp 0x6(%rip)
63cf(1): nop 
63d0(3): mov %rax,%rbx
63d3(4): mov 0x8(%rbx),%rax
63d7(3): test %rax,%rax
63da(2): jnz 0xfffffff6(%rip)
63dc(4): mov 0x10(%rbx),%rax
63e0(3): test %rax,%rax
63e3(2): jnz 0xffffffed(%rip)
63e5(3): mov %rbx,%rsi
63e8(3): mov %rbp,%rdi
63eb(3): call %r12
63ee(2): test %eax,%eax
63f0(2): jnz 0x36(%rip)
63f2(6): nop 0x0(%rax,%rax,1)
63f8(3): mov (%rbx),%rdx
63fb(3): test %rdx,%rdx
63fe(2): jz 0x28(%rip)
6400(4): mov 0x10(%rdx),%rax
6404(3): cmp %rbx,%rax
6407(3): mov %rdx,%rbx
640a(4): setz %sil
640e(3): test %rax,%rax
6411(3): setz %cl
6414(3): or %cl,%sil
6417(2): jz 0xffffffb9(%rip)
6419(3): mov %rbx,%rsi
641c(3): mov %rbp,%rdi
641f(3): call %r12
6422(2): test %eax,%eax
6424(2): jz 0xffffffd4(%rip)
6426(1): pop %rbx
6427(1): pop %rbp
6428(2): pop %r12
642a(1): ret near (%rsp)

"preorder" :
6430(2): push %r12
6432(3): mov %rsi,%r12
6435(1): push %rbp
6436(3): mov %rdx,%rbp
6439(1): push %rbx
643a(3): mov %rdi,%rbx
643d(2): jmp 0x6(%rip)
643f(1): nop 
6440(3): mov %rdx,%rbx
6443(3): mov %rbx,%rsi
6446(3): mov %rbp,%rdi
6449(3): call %r12
644c(2): test %eax,%eax
644e(2): jnz 0x2e(%rip)
6450(4): mov 0x8(%rbx),%rdx
6454(2): xor %ecx,%ecx
6456(3): test %rdx,%rdx
6459(2): jnz 0xffffffe7(%rip)
645b(2): jmp 0x8(%rip)
645d(3): nop (%rax)
6460(3): mov %rdx,%rbx
6463(4): mov 0x10(%rbx),%rdx
6467(3): cmp %rcx,%rdx
646a(2): jz 0x7(%rip)
646c(3): test %rdx,%rdx
646f(2): jnz 0xffffffd1(%rip)
6471(3): mov (%rbx),%rdx
6474(3): mov %rbx,%rcx
6477(3): test %rdx,%rdx
647a(2): jnz 0xffffffe6(%rip)
647c(1): pop %rbx
647d(1): pop %rbp
647e(2): pop %r12
6480(1): ret near (%rsp)

"re_string_realloc_buffers" :
6490(1): push %rbp
6491(1): push %rbx
6492(3): mov %rsi,%rbp
6495(3): mov %rdi,%rbx
6498(4): sub $0x8,%rsp
649c(7): cmp $0x1,0x90(%rdi)
64a3(2): jle 0x4a(%rip)
64a5(a): mov $0x2305843009213693951,%rax
64af(3): cmp %rax,%rsi
64b2(2): jnbe 0x6e(%rip)
64b4(4): mov 0x10(%rdi),%rdi
64b8(8): lea 0x0(,%rsi,4),%rsi
64c0(5): call 0xffffb6a0(%rip)
64c5(3): test %rax,%rax
64c8(2): jz 0x58(%rip)
64ca(4): mov 0x18(%rbx),%rdi
64ce(4): mov %rax,0x10(%rbx)
64d2(3): test %rdi,%rdi
64d5(2): jz 0x18(%rip)
64d7(8): lea 0x0(,%rbp,8),%rsi
64df(5): call 0xffffb681(%rip)
64e4(3): test %rax,%rax
64e7(2): jz 0x39(%rip)
64e9(4): mov %rax,0x18(%rbx)
64ed(7): cmp $0x0,0x8b(%rbx)
64f4(2): jnz 0x14(%rip)
64f6(4): mov %rbp,0x40(%rbx)
64fa(4): add $0x8,%rsp
64fe(2): xor %eax,%eax
6500(1): pop %rbx
6501(1): pop %rbp
6502(1): ret near (%rsp)
6503(5): nop 0x0(%rax,%rax,1)
6508(4): mov 0x8(%rbx),%rdi
650c(3): mov %rbp,%rsi
650f(5): call 0xffffb651(%rip)
6514(3): test %rax,%rax
6517(2): jz 0x9(%rip)
6519(4): mov %rax,0x8(%rbx)
651d(2): jmp 0xffffffd9(%rip)
651f(1): nop 
6520(4): add $0x8,%rsp
6524(5): mov $0xc,%eax
6529(1): pop %rbx
652a(1): pop %rbp
652b(1): ret near (%rsp)

"re_node_set_insert_last" :
6530(1): push %rbp
6531(1): push %rbx
6532(3): mov %rsi,%rbp
6535(3): mov %rdi,%rbx
6538(4): sub $0x8,%rsp
653c(4): mov 0x8(%rdi),%rsi
6540(3): cmp %rsi,(%rdi)
6543(4): mov 0x10(%rdi),%rax
6547(2): jz 0x21(%rip)
6549(4): lea 0x1(%rsi),%rdx
654d(4): mov %rdx,0x8(%rbx)
6551(4): mov %rbp,0x0(%rax,%rsi,8)
6555(5): mov $0x1,%eax
655a(4): add $0x8,%rsp
655e(1): pop %rbx
655f(1): pop %rbp
6560(1): ret near (%rsp)
6561(7): nop 0x0(%rax)
6568(4): add $0x1,%rsi
656c(4): lea 0x0(%rsi,%rsi,1),%rdx
6570(4): shl/sal $0x4,%rsi
6574(3): mov %rdx,(%rdi)
6577(3): mov %rax,%rdi
657a(5): call 0xffffb5e6(%rip)
657f(3): test %rax,%rax
6582(2): jz 0xe(%rip)
6584(4): mov %rax,0x10(%rbx)
6588(4): mov 0x8(%rbx),%rsi
658c(2): jmp 0xffffffbd(%rip)
658e(2): nop 
6590(2): xor %eax,%eax
6592(2): jmp 0xffffffc8(%rip)

"re_node_set_insert" :
65a0(1): push %rbp
65a1(1): push %rbx
65a2(3): mov %rsi,%rbp
65a5(3): mov %rdi,%rbx
65a8(4): sub $0x8,%rsp
65ac(3): mov (%rdi),%rdx
65af(3): test %rdx,%rdx
65b2(2): jz 0x26(%rip)
65b4(4): mov 0x8(%rdi),%rsi
65b8(4): mov 0x10(%rdi),%rax
65bc(3): test %rsi,%rsi
65bf(2): jnz 0x51(%rip)
65c1(3): mov %rbp,(%rax)
65c4(5): add $0x1,0x8(%rdi)
65c9(5): mov $0x1,%eax
65ce(4): add $0x8,%rsp
65d2(1): pop %rbx
65d3(1): pop %rbp
65d4(1): ret near (%rsp)
65d5(3): nop (%rax)
65d8(7): mov $0x1,(%rdi)
65df(8): mov $0x1,0x8(%rdi)
65e7(5): mov $0x8,%edi
65ec(5): call 0xffffb514(%rip)
65f1(3): test %rax,%rax
65f4(4): mov %rax,0x10(%rbx)
65f8(6): jz 0x90(%rip)
65fe(3): mov %rbp,(%rax)
6601(4): add $0x8,%rsp
6605(5): mov $0x1,%eax
660a(1): pop %rbx
660b(1): pop %rbp
660c(1): ret near (%rsp)
660d(3): nop (%rax)
6610(3): cmp %rsi,%rdx
6613(6): jz 0x8d(%rip)
6619(3): cmp %rbp,(%rax)
661c(8): lea 0x0(,%rsi,8),%rdx
6624(2): jle 0x3c(%rip)
6626(3): test %rsi,%rsi
6629(2): jle 0x1a(%rip)
662b(3): add %rax,%rdx
662e(2): nop 
6630(4): mov 0xfffffff8(%rdx),%rcx
6634(4): sub $0x8,%rdx
6638(4): mov %rcx,0x8(%rdx)
663c(3): cmp %rdx,%rax
663f(2): jnz 0xfffffff1(%rip)
6641(2): xor %edx,%edx
6643(4): mov %rbp,0x0(%rax,%rdx,1)
6647(5): mov $0x1,%eax
664c(5): add $0x1,0x8(%rbx)
6651(5): jmp 0xffffff7d(%rip)
6656(a): nop 0x0(%rax,%rax,1)
6660(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
6665(3): cmp %rcx,%rbp
6668(2): jnl 0xffffffdb(%rip)
666a(6): nop 0x0(%rax,%rax,1)
6670(4): mov %rcx,0x0(%rax,%rdx,1)
6674(4): sub $0x8,%rdx
6678(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
667d(3): cmp %rbp,%rcx
6680(2): jnle 0xfffffff0(%rip)
6682(2): jmp 0xffffffc1(%rip)
6684(4): nop 0x0(%rax)
6688(8): mov $0x0,0x8(%rbx)
6690(7): mov $0x0,(%rbx)
6697(5): jmp 0xffffff37(%rip)
669c(4): nop 0x0(%rax)
66a0(4): lea 0x0(%rsi,%rsi,1),%rdx
66a4(4): shl/sal $0x4,%rsi
66a8(3): mov %rdx,(%rdi)
66ab(3): mov %rax,%rdi
66ae(5): call 0xffffb4b2(%rip)
66b3(3): test %rax,%rax
66b6(2): jz 0xf(%rip)
66b8(4): mov %rax,0x10(%rbx)
66bc(4): mov 0x8(%rbx),%rsi
66c0(5): jmp 0xffffff59(%rip)
66c5(2): xor %eax,%eax
66c7(5): jmp 0xffffff07(%rip)

"register_state" :
66d0(2): push %r14
66d2(2): push %r13
66d4(3): mov %rdi,%r14
66d7(2): push %r12
66d9(1): push %rbp
66da(3): mov %rdx,%r12
66dd(1): push %rbx
66de(4): mov 0x10(%rsi),%rbx
66e2(3): mov %rsi,%rbp
66e5(3): mov %rdx,(%rsi)
66e8(8): mov $0x0,0x28(%rsi)
66f0(4): lea 0x20(%rsi),%r13
66f4(8): lea 0x0(,%rbx,8),%rdi
66fc(4): mov %rbx,0x20(%rsi)
6700(5): call 0xffffb400(%rip)
6705(3): test %rax,%rax
6708(4): mov %rax,0x30(%rbp)
670c(2): jz 0x42(%rip)
670e(3): test %rbx,%rbx
6711(2): jle 0x4f(%rip)
6713(2): xor %ebx,%ebx
6715(2): jmp 0x15(%rip)
6717(9): nop 0x0(%rax,%rax,1)
6720(4): add $0x1,%rbx
6724(4): cmp %rbx,0x10(%rbp)
6728(2): jle 0x38(%rip)
672a(4): mov 0x18(%rbp),%rax
672e(4): mov 0x0(%rax,%rbx,8),%rsi
6732(3): mov %rsi,%rax
6735(4): shl/sal $0x4,%rax
6739(3): add (%r14),%rax
673c(4): test $0x8,0x8(%rax)
6740(2): jnz 0xffffffe0(%rip)
6742(3): mov %r13,%rdi
6745(5): call 0xfffffdeb(%rip)
674a(2): test %al,%al
674c(2): jnz 0xffffffd4(%rip)
674e(1): pop %rbx
674f(5): mov $0xc,%eax
6754(1): pop %rbp
6755(2): pop %r12
6757(2): pop %r13
6759(2): pop %r14
675b(1): ret near (%rsp)
675c(4): nop 0x0(%rax)
6760(7): and 0x88(%r14),%r12
6767(4): mov 0x40(%r14),%rax
676b(4): lea 0x0(%r12,%r12,2),%rdx
676f(4): lea 0x0(%rax,%rdx,8),%rbx
6773(3): mov (%rbx),%rdx
6776(4): cmp %rdx,0x8(%rbx)
677a(4): mov 0x10(%rbx),%rax
677e(4): lea 0x1(%rdx),%rsi
6782(2): jle 0x14(%rip)
6784(3): mov %rsi,(%rbx)
6787(4): mov %rbp,0x0(%rax,%rdx,8)
678b(2): xor %eax,%eax
678d(1): pop %rbx
678e(1): pop %rbp
678f(2): pop %r12
6791(2): pop %r13
6793(2): pop %r14
6795(1): ret near (%rsp)
6796(4): lea 0x0(%rsi,%rsi,1),%r12
679a(3): mov %rax,%rdi
679d(4): shl/sal $0x4,%rsi
67a1(5): call 0xffffb3bf(%rip)
67a6(3): test %rax,%rax
67a9(2): jz 0xffffffa5(%rip)
67ab(3): mov (%rbx),%rdx
67ae(4): mov %rax,0x10(%rbx)
67b2(4): mov %r12,0x8(%rbx)
67b6(4): lea 0x1(%rdx),%rsi
67ba(2): jmp 0xffffffca(%rip)

"build_upper_buffer" :
67c0(2): push %r12
67c2(4): mov 0x58(%rdi),%r12
67c6(4): cmp %r12,0x40(%rdi)
67ca(1): push %rbp
67cb(3): mov %rdi,%rbp
67ce(5): cmovng 0x40(%rdi),%r12
67d3(1): push %rbx
67d4(4): mov 0x30(%rdi),%rbx
67d8(3): cmp %rbx,%r12
67db(2): jle 0x3a(%rip)
67dd(5): call 0xffffb0d3(%rip)
67e2(6): nop 0x0(%rax,%rax,1)
67e8(4): mov 0x0(%rbp),%rdx
67ec(4): mov 0x78(%rbp),%rcx
67f0(3): add %rbx,%rdx
67f3(4): add 0x28(%rbp),%rdx
67f7(3): test %rcx,%rcx
67fa(3): movzx (%rdx),%edx
67fd(2): jnz 0x2b(%rip)
67ff(3): mov (%rax),%rsi
6802(4): mov 0x8(%rbp),%rcx
6806(3): mov 0x0(%rsi,%rdx,4),%edx
6809(3): mov %dl,0x0(%rcx,%rbx,1)
680c(4): add $0x1,%rbx
6810(3): cmp %rbx,%r12
6813(2): jnz 0xffffffd5(%rip)
6815(4): mov %rbx,0x30(%rbp)
6819(4): mov %rbx,0x38(%rbp)
681d(1): pop %rbx
681e(1): pop %rbp
681f(2): pop %r12
6821(1): ret near (%rsp)
6822(6): nop 0x0(%rax,%rax,1)
6828(4): movzx 0x0(%rcx,%rdx,1),%edx
682c(2): jmp 0xffffffd3(%rip)

"build_wcs_buffer" :
6830(2): push %r15
6832(2): push %r14
6834(2): push %r13
6836(2): push %r12
6838(1): push %rbp
6839(1): push %rbx
683a(3): mov %rdi,%rbx
683d(4): sub $0x68,%rsp
6841(4): mov 0x58(%rdi),%r12
6845(4): mov 0x30(%rdi),%rbp
6849(9): mov $0x28,%rax
6852(5): mov %rax,0x58(%rsp)
6857(2): xor %eax,%eax
6859(4): cmp %r12,0x40(%rdi)
685d(5): cmovng 0x40(%rdi),%r12
6862(3): cmp %rbp,%r12
6865(6): jle 0x8f(%rip)
686b(4): lea 0x20(%rdi),%r14
686f(5): lea 0xc(%rsp),%r13
6874(4): nop 0x0(%rax)
6878(4): mov 0x78(%rbx),%rdi
687c(3): mov %r12,%rdx
687f(4): mov 0x20(%rbx),%r15
6883(3): sub %rbp,%rdx
6886(3): test %rdi,%rdi
6889(6): jnz 0xe7(%rip)
688f(4): mov 0x28(%rbx),%rsi
6893(3): add %rbp,%rsi
6896(3): add (%rbx),%rsi
6899(3): mov %r14,%rcx
689c(3): mov %r13,%rdi
689f(5): call 0xfffff6a1(%rip)
68a4(4): lea 0xffffffff(%rax),%rdx
68a8(4): cmp $0xfffffffd,%rdx
68ac(6): jnbe 0x94(%rip)
68b2(4): cmp $0xfffffffe,%rax
68b6(4): mov 0xc(%rsp),%edx
68ba(2): jz 0x76(%rip)
68bc(4): mov 0x10(%rbx),%rcx
68c0(4): lea 0x1(%rbp),%rsi
68c4(8): lea 0x0(,%rbp,4),%rdi
68cc(3): mov %edx,0x0(%rcx,%rbp,4)
68cf(3): add %rax,%rbp
68d2(3): cmp %rbp,%rsi
68d5(2): jnl 0x4b(%rip)
68d7(5): lea 0x4(%rcx,%rdi,1),%rdx
68dc(4): lea 0x0(%rcx,%rbp,4),%rax
68e0(6): mov $0xffffffff,(%rdx)
68e6(4): add $0x4,%rdx
68ea(3): cmp %rdx,%rax
68ed(2): jnz 0xfffffff3(%rip)
68ef(3): cmp %r12,%rbp
68f2(2): jl 0xffffff86(%rip)
68f4(5): mov 0x58(%rsp),%rax
68f9(9): xor $0x28,%rax
6902(4): mov %rbp,0x30(%rbx)
6906(4): mov %rbp,0x38(%rbx)
690a(6): jnz 0xe4(%rip)
6910(4): add $0x68,%rsp
6914(1): pop %rbx
6915(1): pop %rbp
6916(2): pop %r12
6918(2): pop %r13
691a(2): pop %r14
691c(2): pop %r15
691e(1): ret near (%rsp)
691f(1): nop 
6920(3): mov %rsi,%rbp
6923(3): cmp %r12,%rbp
6926(6): jl 0xffffff52(%rip)
692c(2): jmp 0xffffffc8(%rip)
692e(2): nop 
6930(4): mov 0x58(%rbx),%rax
6934(4): cmp %rax,0x40(%rbx)
6938(6): jl 0xa0(%rip)
693e(2): nop 
6940(3): mov (%rbx),%rax
6943(4): mov 0x78(%rbx),%rcx
6947(3): add %rbp,%rax
694a(4): add 0x28(%rbx),%rax
694e(3): test %rcx,%rcx
6951(3): movzx (%rax),%edx
6954(4): mov %edx,0xc(%rsp)
6958(6): jnz 0x89(%rip)
695e(4): mov %r15,0x20(%rbx)
6962(5): mov $0x1,%eax
6967(5): jmp 0xffffff55(%rip)
696c(4): nop 0x0(%rax)
6970(6): mov 0x90(%rbx),%ecx
6976(2): xor %eax,%eax
6978(5): lea 0x10(%rsp),%rsi
697d(2): test %ecx,%ecx
697f(2): jnle 0x22(%rip)
6981(5): jmp 0xffffff18(%rip)
6986(a): nop 0x0(%rax,%rax,1)
6990(4): add $0x1,%rax
6994(3): cmp %rax,%rdx
6997(6): jz 0xffffff02(%rip)
699d(4): mov 0x78(%rbx),%rdi
69a1(3): mov (%rbx),%rcx
69a4(3): add %rbp,%rcx
69a7(3): add %rax,%rcx
69aa(4): add 0x28(%rbx),%rcx
69ae(3): movzx (%rcx),%ecx
69b1(4): movzx 0x0(%rdi,%rcx,1),%ecx
69b5(4): mov 0x8(%rbx),%rdi
69b9(3): add %rbp,%rdi
69bc(3): mov %cl,0x0(%rdi,%rax,1)
69bf(3): mov %cl,0x0(%rsi,%rax,1)
69c2(3): lea 0x1(%rax),%ecx
69c5(6): cmp 0x90(%rbx),%ecx
69cb(2): jl 0xffffffc5(%rip)
69cd(5): jmp 0xfffffecc(%rip)
69d2(6): nop 0x0(%rax,%rax,1)
69d8(4): mov %r15,0x20(%rbx)
69dc(5): jmp 0xffffff18(%rip)
69e1(4): movzx 0x0(%rcx,%rdx,1),%edx
69e5(4): mov %edx,0xc(%rsp)
69e9(5): jmp 0xffffff75(%rip)
69ee(5): call 0xffffaff2(%rip)

"build_wcs_upper_buffer" :
6a00(2): push %r15
6a02(2): push %r14
6a04(3): mov %rdi,%r14
6a07(2): push %r13
6a09(2): push %r12
6a0b(1): push %rbp
6a0c(1): push %rbx
6a0d(7): sub $0xa8,%rsp
6a14(4): mov 0x58(%rdi),%rbx
6a18(4): mov 0x30(%rdi),%r15
6a1c(9): mov $0x28,%rax
6a25(8): mov %rax,0x98(%rsp)
6a2d(2): xor %eax,%eax
6a2f(4): cmp %rbx,0x40(%rdi)
6a33(5): cmovng 0x40(%rdi),%rbx
6a38(7): cmp $0x0,0x8a(%rdi)
6a3f(2): jnz 0xd(%rip)
6a41(5): cmp $0x0,0x78(%rdi)
6a46(6): jz 0x18a(%rip)
6a4c(4): mov 0x38(%r14),%r13
6a50(3): cmp %rbx,%r15
6a53(2): jl 0x3d(%rip)
6a55(4): mov %r15,0x30(%r14)
6a59(4): mov %r13,0x38(%r14)
6a5d(2): xor %eax,%eax
6a5f(8): mov 0x98(%rsp),%rcx
6a67(9): xor $0x28,%rcx
6a70(6): jnz 0x58a(%rip)
6a76(7): add $0xa8,%rsp
6a7d(1): pop %rbx
6a7e(1): pop %rbp
6a7f(2): pop %r12
6a81(2): pop %r13
6a83(2): pop %r14
6a85(2): pop %r15
6a87(1): ret near (%rsp)
6a88(8): nop 0x0(%rax,%rax,1)
6a90(4): lea 0x20(%r14),%rax
6a94(5): mov %rax,0x8(%rsp)
6a99(3): mov %rbx,%rax
6a9c(3): sub %r15,%rax
6a9f(5): mov %rax,0x10(%rsp)
6aa4(5): lea 0x44(%rsp),%rax
6aa9(5): mov %rax,0x20(%rsp)
6aae(4): mov 0x78(%r14),%rdx
6ab2(4): mov 0x20(%r14),%rax
6ab6(3): test %rdx,%rdx
6ab9(5): mov %rax,0x48(%rsp)
6abe(6): jnz 0x30b(%rip)
6ac4(4): mov 0x28(%r14),%rbp
6ac8(3): add %r13,%rbp
6acb(3): add (%r14),%rbp
6ace(5): mov %rbp,0x18(%rsp)
6ad3(5): mov 0x8(%rsp),%rcx
6ad8(5): mov 0x10(%rsp),%rdx
6add(5): mov 0x18(%rsp),%rsi
6ae2(5): mov 0x20(%rsp),%rdi
6ae7(5): call 0xfffff459(%rip)
6aec(3): mov %rax,%rbp
6aef(4): lea 0xffffffff(%rax),%rax
6af3(4): cmp $0xfffffffc,%rax
6af7(5): mov %rax,0x20(%rsp)
6afc(6): jnbe 0x33d(%rip)
6b02(4): mov 0x44(%rsp),%edx
6b06(2): mov %edx,%edi
6b08(4): mov %edx,0x10(%rsp)
6b0c(5): call 0xffffb0e4(%rip)
6b11(4): mov 0x10(%rsp),%edx
6b15(3): mov %eax,%r12d
6b18(5): mov %r15,0x8(%rsp)
6b1d(2): cmp %eax,%edx
6b1f(6): jz 0x301(%rip)
6b25(5): lea 0x50(%rsp),%rcx
6b2a(5): lea 0x48(%rsp),%rdx
6b2f(2): mov %eax,%esi
6b31(3): mov %rcx,%rdi
6b34(5): mov %rcx,0x10(%rsp)
6b39(5): call 0xffffafd7(%rip)
6b3e(3): cmp %rax,%rbp
6b41(3): mov %rax,%r11
6b44(5): mov 0x10(%rsp),%rcx
6b49(6): jnz 0x38d(%rip)
6b4f(4): mov 0x8(%r14),%rdi
6b53(3): mov %rbp,%rdx
6b56(3): mov %rcx,%rsi
6b59(3): add %r15,%rdi
6b5c(5): call 0xffffaf74(%rip)
6b61(8): cmp $0x0,0x8c(%r14)
6b69(5): lea 0x0(%rbp,%r13,1),%rax
6b6e(6): jnz 0x337(%rip)
6b74(4): add $0x1,%r15
6b78(5): mov 0x8(%rsp),%rsi
6b7d(4): mov 0x10(%r14),%rdx
6b81(5): lea 0xffffffff(%r15,%rbp,1),%rcx
6b86(3): mov %rax,%r13
6b89(3): cmp %rcx,%r15
6b8c(8): lea 0x0(,%rsi,4),%rax
6b94(4): mov %r12d,0x0(%rdx,%rsi,4)
6b98(6): jnl 0xfffffeb8(%rip)
6b9e(5): lea 0x4(%rdx,%rax,1),%rax
6ba3(4): lea 0x0(%rdx,%rcx,4),%rdx
6ba7(9): nop 0x0(%rax,%rax,1)
6bb0(6): mov $0xffffffff,(%rax)
6bb6(4): add $0x4,%rax
6bba(3): cmp %rax,%rdx
6bbd(2): jnz 0xfffffff3(%rip)
6bbf(3): mov %rcx,%r15
6bc2(5): jmp 0xfffffe8e(%rip)
6bc7(9): nop 0x0(%rax,%rax,1)
6bd0(7): cmp $0x0,0x8c(%rdi)
6bd7(6): jnz 0xfffffe75(%rip)
6bdd(3): cmp %rbx,%r15
6be0(6): jnl 0x198(%rip)
6be6(4): lea 0x20(%rdi),%rax
6bea(5): mov %rax,0x8(%rsp)
6bef(5): lea 0x44(%rsp),%rax
6bf4(5): mov %rax,0x30(%rsp)
6bf9(5): lea 0x48(%rsp),%rax
6bfe(5): mov %rax,0x38(%rsp)
6c03(5): lea 0x50(%rsp),%rax
6c08(5): mov %rax,0x28(%rsp)
6c0d(3): nop (%rax)
6c10(4): mov 0x28(%r14),%rbp
6c14(3): mov %r15,%r13
6c17(3): add %r15,%rbp
6c1a(3): add (%r14),%rbp
6c1d(5): movzx 0x0(%rbp),%r12d
6c22(4): test $0x80,%r12b
6c26(2): jnz 0x14(%rip)
6c28(5): mov 0x8(%rsp),%rdi
6c2d(5): call 0xffffb013(%rip)
6c32(2): test %eax,%eax
6c34(6): jnz 0xf4(%rip)
6c3a(4): mov 0x20(%r14),%rax
6c3e(5): mov 0x30(%rsp),%rdi
6c43(3): mov %rbx,%rdx
6c46(5): mov 0x8(%rsp),%rcx
6c4b(3): sub %r15,%rdx
6c4e(3): mov %rbp,%rsi
6c51(5): mov %rdx,0x10(%rsp)
6c56(5): mov %rax,0x48(%rsp)
6c5b(5): mov %rdi,0x20(%rsp)
6c60(5): call 0xfffff2e0(%rip)
6c65(3): mov %rax,%rbp
6c68(4): lea 0xffffffff(%rax),%rax
6c6c(4): cmp $0xfffffffc,%rax
6c70(6): jnbe 0xe8(%rip)
6c76(4): mov 0x44(%rsp),%edx
6c7a(2): mov %edx,%edi
6c7c(4): mov %edx,0x18(%rsp)
6c80(5): call 0xffffaf70(%rip)
6c85(4): mov 0x18(%rsp),%edx
6c89(3): mov %eax,%r12d
6c8c(2): cmp %eax,%edx
6c8e(2): jz 0x7a(%rip)
6c90(5): mov 0x38(%rsp),%rdx
6c95(5): mov 0x28(%rsp),%rdi
6c9a(2): mov %eax,%esi
6c9c(5): call 0xffffae74(%rip)
6ca1(3): cmp %rax,%rbp
6ca4(6): jnz 0x174(%rip)
6caa(4): mov 0x8(%r14),%rdi
6cae(5): mov 0x28(%rsp),%rsi
6cb3(3): mov %rbp,%rdx
6cb6(3): add %r15,%rdi
6cb9(5): call 0xffffae17(%rip)
6cbe(4): add $0x1,%r15
6cc2(4): mov 0x10(%r14),%rdx
6cc6(8): lea 0x0(,%r13,4),%rax
6cce(5): lea 0xffffffff(%r15,%rbp,1),%rcx
6cd3(3): cmp %rcx,%r15
6cd6(4): mov %r12d,0x0(%rdx,%r13,4)
6cda(2): jnl 0x20(%rip)
6cdc(5): lea 0x4(%rdx,%rax,1),%rax
6ce1(4): lea 0x0(%rdx,%rcx,4),%rdx
6ce5(3): nop (%rax)
6ce8(6): mov $0xffffffff,(%rax)
6cee(4): add $0x4,%rax
6cf2(3): cmp %rax,%rdx
6cf5(2): jnz 0xfffffff3(%rip)
6cf7(3): mov %rcx,%r15
6cfa(3): cmp %r15,%rbx
6cfd(6): jnle 0xffffff13(%rip)
6d03(2): jmp 0x75(%rip)
6d05(3): nop (%rax)
6d08(4): mov 0x28(%r14),%rsi
6d0c(4): mov 0x8(%r14),%rdi
6d10(3): mov %rbp,%rdx
6d13(3): add %r15,%rsi
6d16(3): add (%r14),%rsi
6d19(3): add %r15,%rdi
6d1c(5): call 0xffffadb4(%rip)
6d21(2): jmp 0xffffff9d(%rip)
6d23(5): nop 0x0(%rax,%rax,1)
6d28(5): call 0xffffab88(%rip)
6d2d(3): mov (%rax),%rax
6d30(4): mov 0x8(%r14),%rdx
6d34(4): mov 0x0(%rax,%r12,4),%eax
6d38(4): mov %al,0x0(%rdx,%r15,1)
6d3c(4): mov 0x8(%r14),%rdx
6d40(4): mov 0x10(%r14),%rax
6d44(5): movzx 0x0(%rdx,%r15,1),%edx
6d49(4): mov %edx,0x0(%rax,%r15,4)
6d4d(4): add $0x1,%r15
6d51(2): jmp 0xffffffa9(%rip)
6d53(5): nop 0x0(%rax,%rax,1)
6d58(4): cmp $0xfffffffd,%rax
6d5c(2): jnz 0x34(%rip)
6d5e(4): mov 0x58(%r14),%rax
6d62(4): cmp %rax,0x40(%r14)
6d66(2): jnl 0x2a(%rip)
6d68(5): mov 0x48(%rsp),%rax
6d6d(4): mov %rax,0x20(%r14)
6d71(7): nop 0x0(%rax)
6d78(4): mov %r15,0x30(%r14)
6d7c(4): mov %r15,0x38(%r14)
6d80(2): xor %eax,%eax
6d82(5): jmp 0xfffffcdd(%rip)
6d87(9): nop 0x0(%rax,%rax,1)
6d90(3): mov (%r14),%rax
6d93(4): mov 0x8(%r14),%rdx
6d97(3): add %r15,%rax
6d9a(4): add 0x28(%r14),%rax
6d9e(3): movzx (%rax),%eax
6da1(4): mov %al,0x0(%rdx,%r15,1)
6da5(4): mov 0x10(%r14),%rdx
6da9(4): add $0x1,%r15
6dad(4): cmp $0xffffffff,%rbp
6db1(4): mov %eax,0x0(%rdx,%r13,4)
6db5(6): jnz 0xffffff45(%rip)
6dbb(5): mov 0x48(%rsp),%rax
6dc0(4): mov %rax,0x20(%r14)
6dc4(5): jmp 0xffffff36(%rip)
6dc9(7): mov 0x90(%r14),%eax
6dd0(2): test %eax,%eax
6dd2(6): jle 0x21e(%rip)
6dd8(4): mov 0x28(%r14),%rdi
6ddc(4): lea 0xffffffff(%rax),%r11d
6de0(5): lea 0x50(%rsp),%rcx
6de5(2): xor %eax,%eax
6de7(3): add %r13,%rdi
6dea(3): add (%r14),%rdi
6ded(2): jmp 0xd(%rip)
6def(4): add $0x1,%rax
6df3(5): cmp %rax,0x10(%rsp)
6df8(2): jz 0x13(%rip)
6dfa(4): movzx 0x0(%rdi,%rax,1),%esi
6dfe(3): cmp %rax,%r11
6e01(4): movzx 0x0(%rdx,%rsi,1),%esi
6e05(4): mov %sil,0x0(%rcx,%rax,1)
6e09(2): jnz 0xffffffe6(%rip)
6e0b(5): mov %rcx,0x18(%rsp)
6e10(5): jmp 0xfffffcc3(%rip)
6e15(3): nop (%rax)
6e18(3): mov %r15,%r13
6e1b(5): jmp 0xfffffc93(%rip)
6e20(4): mov 0x8(%r14),%rdi
6e24(5): mov 0x18(%rsp),%rsi
6e29(3): mov %rbp,%rdx
6e2c(3): add %r15,%rdi
6e2f(5): call 0xffffaca1(%rip)
6e34(5): jmp 0xfffffd2d(%rip)
6e39(6): cmp $0xfffffffd,0x20(%rsp)
6e3f(2): jnz 0xc(%rip)
6e41(4): mov 0x58(%r14),%rax
6e45(4): cmp %rax,0x40(%r14)
6e49(2): jl 0x7f(%rip)
6e4b(3): mov (%r14),%rax
6e4e(4): mov 0x78(%r14),%rdx
6e52(3): add %r13,%rax
6e55(4): add 0x28(%r14),%rax
6e59(3): test %rdx,%rdx
6e5c(3): movzx (%rax),%eax
6e5f(6): jnz 0x1ad(%rip)
6e65(4): mov 0x8(%r14),%rdx
6e69(3): mov %r15,%rcx
6e6c(4): mov %al,0x0(%rdx,%r15,1)
6e70(8): cmp $0x0,0x8c(%r14)
6e78(6): jnz 0x187(%rip)
6e7e(4): mov 0x10(%r14),%rdx
6e82(4): add $0x1,%r13
6e86(4): add $0x1,%r15
6e8a(4): cmp $0xffffffff,%rbp
6e8e(3): mov %eax,0x0(%rdx,%rcx,4)
6e91(6): jnz 0xfffffbbf(%rip)
6e97(5): mov 0x48(%rsp),%rax
6e9c(4): mov %rax,0x20(%r14)
6ea0(5): jmp 0xfffffbb0(%rip)
6ea5(4): mov 0x18(%r14),%rdx
6ea9(3): mov %r15,%rcx
6eac(3): mov %r13,%r10
6eaf(3): sub %r13,%rcx
6eb2(4): lea 0x0(%rdx,%rcx,8),%rdx
6eb6(4): mov %r10,0x0(%rdx,%r10,8)
6eba(4): add $0x1,%r10
6ebe(3): cmp %r10,%rax
6ec1(2): jnz 0xfffffff5(%rip)
6ec3(5): jmp 0xfffffcb1(%rip)
6ec8(5): mov 0x48(%rsp),%rax
6ecd(4): mov %rax,0x20(%r14)
6ed1(5): jmp 0xfffffb84(%rip)
6ed6(4): cmp $0xffffffff,%rax
6eda(6): jz 0xffffff46(%rip)
6ee0(4): lea 0x0(%rax,%r15,1),%rax
6ee4(3): mov %rax,%rsi
6ee7(5): mov %rax,0x8(%rsp)
6eec(4): mov 0x40(%r14),%rax
6ef0(3): cmp %rax,%rsi
6ef3(2): jnbe 0xffffffd5(%rip)
6ef5(5): cmp $0x0,0x18(%r14)
6efa(6): jz 0xbe(%rip)
6f00(8): cmp $0x0,0x8c(%r14)
6f08(2): jnz 0x22(%rip)
6f0a(3): test %r15,%r15
6f0d(2): jz 0x15(%rip)
6f0f(4): mov 0x18(%r14),%rdx
6f13(2): xor %eax,%eax
6f15(4): mov %rax,0x0(%rdx,%rax,8)
6f19(4): add $0x1,%rax
6f1d(3): cmp %r15,%rax
6f20(2): jnz 0xfffffff5(%rip)
6f22(8): mov $0x1,0x8c(%r14)
6f2a(4): mov 0x8(%r14),%rdi
6f2e(3): mov %rcx,%rsi
6f31(3): mov %r11,%rdx
6f34(5): mov %r11,0x10(%rsp)
6f39(3): add %r15,%rdi
6f3c(5): call 0xffffab94(%rip)
6f41(4): mov 0x10(%r14),%rax
6f45(5): mov 0x10(%rsp),%r11
6f4a(4): lea 0x0(%rax,%r15,4),%rcx
6f4e(4): mov 0x18(%r14),%rax
6f52(4): cmp $0x1,%r11
6f56(3): mov %r12d,(%rcx)
6f59(4): lea 0x0(%rax,%r15,8),%rsi
6f5d(3): mov %r13,(%rsi)
6f60(2): jbe 0x2a(%rip)
6f62(5): mov $0x1,%eax
6f67(5): mov 0x20(%rsp),%rdx
6f6c(3): cmp %rbp,%rax
6f6f(4): cmovnae %rax,%rdx
6f73(3): add %r13,%rdx
6f76(4): mov %rdx,0x0(%rsi,%rax,8)
6f7a(7): mov $0xffffffff,0x0(%rcx,%rax,4)
6f81(4): add $0x1,%rax
6f85(3): cmp %r11,%rax
6f88(2): jnz 0xffffffdf(%rip)
6f8a(4): mov 0x58(%r14),%rbx
6f8e(3): sub %rbp,%r11
6f91(3): add %r11,%rbx
6f94(4): cmp 0x60(%r14),%r13
6f98(4): mov %rbx,0x58(%r14)
6f9c(2): jnl 0x6(%rip)
6f9e(4): add %r11,0x68(%r14)
6fa2(4): cmp %rbx,0x40(%r14)
6fa6(5): mov 0x8(%rsp),%r15
6fab(5): cmovng 0x40(%r14),%rbx
6fb0(3): add %rbp,%r13
6fb3(5): jmp 0xfffffa9d(%rip)
6fb8(8): lea 0x0(,%rax,8),%rdi
6fc0(5): mov %rcx,0x18(%rsp)
6fc5(5): mov %r11,0x10(%rsp)
6fca(5): call 0xffffab36(%rip)
6fcf(3): test %rax,%rax
6fd2(4): mov %rax,0x18(%r14)
6fd6(5): mov 0x10(%rsp),%r11
6fdb(5): mov 0x18(%rsp),%rcx
6fe0(6): jnz 0xffffff20(%rip)
6fe6(5): mov $0xc,%eax
6feb(5): jmp 0xfffffa74(%rip)
6ff0(5): lea 0x50(%rsp),%rcx
6ff5(5): jmp 0xfffffe16(%rip)
6ffa(5): call 0xffffa9e6(%rip)
6fff(4): mov 0x18(%r14),%rdx
7003(4): mov %r13,0x0(%rdx,%r15,8)
7007(5): jmp 0xfffffe77(%rip)
700c(4): movzx 0x0(%rdx,%rax,1),%eax
7010(5): jmp 0xfffffe55(%rip)

"extend_buffers" :
7020(1): push %rbp
7021(1): push %rbx
7022(a): mov $0x1152921504606846974,%rdx
702c(4): sub $0x8,%rsp
7030(4): mov 0x40(%rdi),%rax
7034(3): cmp %rdx,%rax
7037(6): jnbe 0x111(%rip)
703d(4): mov 0x58(%rdi),%rdx
7041(3): add %rax,%rax
7044(3): movsxd %esi,%rsi
7047(3): mov %rdi,%rbx
704a(3): cmp %rdx,%rax
704d(4): cmovnl %rdx,%rax
7051(3): cmp %rsi,%rax
7054(4): cmovnl %rax,%rsi
7058(5): call 0xfffff438(%rip)
705d(2): test %eax,%eax
705f(2): mov %eax,%ebp
7061(6): jnz 0xbc(%rip)
7067(7): mov 0xb8(%rbx),%rdi
706e(3): test %rdi,%rdi
7071(2): jz 0x23(%rip)
7073(4): mov 0x40(%rbx),%rax
7077(8): lea 0x8(,%rax,8),%rsi
707f(5): call 0xffffaae1(%rip)
7084(3): test %rax,%rax
7087(6): jz 0xc1(%rip)
708d(7): mov %rax,0xb8(%rbx)
7094(7): cmp $0x0,0x88(%rbx)
709b(6): mov 0x90(%rbx),%eax
70a1(2): jz 0x1f(%rip)
70a3(3): cmp $0x1,%eax
70a6(3): mov %rbx,%rdi
70a9(6): jle 0xb7(%rip)
70af(4): add $0x8,%rsp
70b3(1): pop %rbx
70b4(1): pop %rbp
70b5(5): jmp 0xfffff94b(%rip)
70ba(6): nop 0x0(%rax,%rax,1)
70c0(3): cmp $0x1,%eax
70c3(2): jnle 0x6d(%rip)
70c5(4): mov 0x78(%rbx),%rcx
70c9(3): test %rcx,%rcx
70cc(2): jz 0x51(%rip)
70ce(4): mov 0x58(%rbx),%rsi
70d2(4): cmp %rsi,0x40(%rbx)
70d6(5): cmovng 0x40(%rbx),%rsi
70db(4): mov 0x30(%rbx),%rax
70df(3): cmp %rax,%rsi
70e2(2): jnle 0x12(%rip)
70e4(2): jmp 0x31(%rip)
70e6(a): nop 0x0(%rax,%rax,1)
70f0(4): mov 0x78(%rbx),%rcx
70f4(3): mov (%rbx),%rdx
70f7(3): add %rax,%rdx
70fa(4): add 0x28(%rbx),%rdx
70fe(3): movzx (%rdx),%edx
7101(4): movzx 0x0(%rcx,%rdx,1),%ecx
7105(4): mov 0x8(%rbx),%rdx
7109(3): mov %cl,0x0(%rdx,%rax,1)
710c(4): add $0x1,%rax
7110(3): cmp %rax,%rsi
7113(2): jnz 0xffffffdd(%rip)
7115(4): mov %rax,0x30(%rbx)
7119(4): mov %rax,0x38(%rbx)
711d(4): add $0x8,%rsp
7121(2): mov %ebp,%eax
7123(1): pop %rbx
7124(1): pop %rbp
7125(1): ret near (%rsp)
7126(a): nop 0x0(%rax,%rax,1)
7130(3): mov %rbx,%rdi
7133(5): call 0xfffff6fd(%rip)
7138(4): add $0x8,%rsp
713c(2): mov %ebp,%eax
713e(1): pop %rbx
713f(1): pop %rbp
7140(1): ret near (%rsp)
7141(7): nop 0x0(%rax)
7148(5): mov $0xc,%ebp
714d(4): add $0x8,%rsp
7151(2): mov %ebp,%eax
7153(1): pop %rbx
7154(1): pop %rbp
7155(1): ret near (%rsp)
7156(a): nop 0x0(%rax,%rax,1)
7160(5): call 0xfffff660(%rip)
7165(4): add $0x8,%rsp
7169(2): mov %ebp,%eax
716b(1): pop %rbx
716c(1): pop %rbp
716d(1): ret near (%rsp)

"clean_state_log_if_needed" :
7170(2): push %r12
7172(1): push %rbp
7173(3): mov %rsi,%rbp
7176(1): push %rbx
7177(4): mov 0x40(%rdi),%rax
717b(3): mov %rdi,%rbx
717e(7): mov 0xc0(%rdi),%r12
7185(3): cmp %rsi,%rax
7188(2): jnle 0x28(%rip)
718a(4): cmp 0x58(%rdi),%rax
718e(2): jnl 0x22(%rip)
7190(3): lea 0x1(%rbp),%esi
7193(3): mov %rbx,%rdi
7196(5): call 0xfffffe8a(%rip)
719b(2): test %eax,%eax
719d(2): jnz 0x9(%rip)
719f(3): cmp %rbp,%r12
71a2(2): jl 0x2e(%rip)
71a4(2): xor %eax,%eax
71a6(1): pop %rbx
71a7(1): pop %rbp
71a8(2): pop %r12
71aa(1): ret near (%rsp)
71ab(5): nop 0x0(%rax,%rax,1)
71b0(4): mov 0x30(%rbx),%rax
71b4(3): cmp %rbp,%rax
71b7(2): jnle 0xffffffe8(%rip)
71b9(4): cmp 0x58(%rbx),%rax
71bd(2): jnl 0xffffffe2(%rip)
71bf(3): lea 0x1(%rbp),%esi
71c2(3): mov %rbx,%rdi
71c5(5): call 0xfffffe5b(%rip)
71ca(2): test %eax,%eax
71cc(2): jz 0xffffffd3(%rip)
71ce(2): jmp 0xffffffd8(%rip)
71d0(7): mov 0xb8(%rbx),%rax
71d7(3): mov %rbp,%rdx
71da(2): xor %esi,%esi
71dc(3): sub %r12,%rdx
71df(4): shl/sal $0x3,%rdx
71e3(5): lea 0x8(%rax,%r12,8),%rdi
71e8(5): call 0xffffa878(%rip)
71ed(7): mov %rbp,0xc0(%rbx)
71f4(2): jmp 0xffffffb0(%rip)

"free_charset" :
7200(1): push %rbx
7201(3): mov %rdi,%rbx
7204(3): mov (%rdi),%rdi
7207(5): call 0xffffa6c9(%rip)
720c(4): mov 0x8(%rbx),%rdi
7210(5): call 0xffffa6c0(%rip)
7215(4): mov 0x10(%rbx),%rdi
7219(5): call 0xffffa6b7(%rip)
721e(4): mov 0x18(%rbx),%rdi
7222(5): call 0xffffa6ae(%rip)
7227(3): mov %rbx,%rdi
722a(1): pop %rbx
722b(5): jmp 0xffffa6a5(%rip)

"free_token" :
7230(3): mov 0x8(%rdi),%eax
7233(5): and $0x400ff,%eax
7238(3): cmp $0x6,%eax
723b(2): jz 0x15(%rip)
723d(3): cmp $0x3,%eax
7240(2): jz 0x8(%rip)
7242(2): REP ret near (%rsp)
7244(4): nop 0x0(%rax)
7248(3): mov (%rdi),%rdi
724b(5): jmp 0xffffa685(%rip)
7250(3): mov (%rdi),%rdi
7253(2): jmp 0xffffffad(%rip)

"free_tree" :
7260(4): lea 0x28(%rsi),%rdi
7264(4): sub $0x8,%rsp
7268(5): call 0xffffffc8(%rip)
726d(2): xor %eax,%eax
726f(4): add $0x8,%rsp
7273(1): ret near (%rsp)

"re_dfa_add_node" :
7280(2): push %r15
7282(2): push %r14
7284(3): mov %rsi,%r14
7287(2): push %r13
7289(2): push %r12
728b(1): push %rbp
728c(1): push %rbx
728d(3): mov %rdi,%rbx
7290(4): sub $0x18,%rsp
7294(4): mov 0x10(%rdi),%rsi
7298(4): mov 0x8(%rdi),%rbp
729c(3): cmp %rbp,%rsi
729f(6): jnb 0xb1(%rip)
72a5(4): mov 0x18(%rdi),%r12
72a9(4): mov 0x28(%rdi),%rbp
72ad(3): mov %rsi,%rax
72b0(2): mov %edx,%ecx
72b2(4): shl/sal $0x4,%rax
72b6(3): add (%rbx),%rax
72b9(6): and $0xfffc00ff,%ecx
72bf(4): mov %rdx,0x8(%rax)
72c3(3): mov %ecx,0x8(%rax)
72c6(2): xor %ecx,%ecx
72c8(3): cmp $0x6,%dl
72cb(3): mov %r14,(%rax)
72ce(3): setz %cl
72d1(3): cmp $0x5,%dl
72d4(2): jnz 0xe(%rip)
72d6(2): xor %ecx,%ecx
72d8(7): cmp $0x1,0xb4(%rbx)
72df(3): setnle %cl
72e2(4): movzx 0xa(%rax),%edx
72e6(3): shl/sal $0x4,%ecx
72e9(4): pxor %xmm0,%xmm0
72ed(3): and $0xef,%edx
72f0(2): or %ecx,%edx
72f2(3): mov %dl,0xa(%rax)
72f5(8): mov $0xffffffff,0x0(%r12,%rsi,8)
72fd(4): mov 0x10(%rbx),%rax
7301(4): lea 0x0(%rax,%rax,2),%rax
7305(5): lea 0x0(%rbp,%rax,8),%rax
730a(3): movups %xmm0,(%rax)
730d(8): mov $0x0,0x10(%rax)
7315(4): mov 0x10(%rbx),%rax
7319(4): lea 0x0(%rax,%rax,2),%rdx
731d(4): mov 0x30(%rbx),%rax
7321(4): lea 0x0(%rax,%rdx,8),%rax
7325(3): movups %xmm0,(%rax)
7328(8): mov $0x0,0x10(%rax)
7330(4): mov 0x10(%rbx),%rax
7334(4): lea 0x1(%rax),%rdx
7338(4): mov %rdx,0x10(%rbx)
733c(4): add $0x18,%rsp
7340(1): pop %rbx
7341(1): pop %rbp
7342(2): pop %r12
7344(2): pop %r13
7346(2): pop %r14
7348(2): pop %r15
734a(1): ret near (%rsp)
734b(5): nop 0x0(%rax,%rax,1)
7350(5): lea 0x0(%rbp,%rbp,1),%r13
7355(a): mov $0x768614336404564650,%rax
735f(3): cmp %rax,%r13
7362(6): jnbe 0xe0(%rip)
7368(3): mov (%rdi),%rdi
736b(3): mov %rbp,%rsi
736e(5): mov %rdx,0x8(%rsp)
7373(4): shl/sal $0x5,%rsi
7377(5): call 0xffffa7e9(%rip)
737c(3): test %rax,%rax
737f(6): jz 0xc3(%rip)
7385(3): mov %rbp,%r15
7388(4): mov 0x18(%rbx),%rdi
738c(3): mov %rax,(%rbx)
738f(4): shl/sal $0x4,%r15
7393(3): mov %r15,%rsi
7396(5): call 0xffffa7ca(%rip)
739b(4): mov 0x20(%rbx),%rdi
739f(3): mov %r15,%rsi
73a2(5): lea 0x0(%r13,%rbp,4),%r15
73a7(3): mov %rax,%r12
73aa(4): shl/sal $0x3,%r15
73ae(5): call 0xffffa7b2(%rip)
73b3(4): mov 0x28(%rbx),%rdi
73b7(3): mov %r15,%rsi
73ba(4): mov %rax,(%rsp)
73be(5): call 0xffffa7a2(%rip)
73c3(4): mov 0x30(%rbx),%rdi
73c7(3): mov %r15,%rsi
73ca(3): mov %rax,%rbp
73cd(5): call 0xffffa793(%rip)
73d2(3): test %r12,%r12
73d5(4): mov (%rsp),%rcx
73d9(2): jz 0x37(%rip)
73db(3): test %rcx,%rcx
73de(2): jz 0x32(%rip)
73e0(3): test %rbp,%rbp
73e3(2): jz 0x2d(%rip)
73e5(3): test %rax,%rax
73e8(5): mov 0x8(%rsp),%rdx
73ed(2): jz 0x23(%rip)
73ef(4): mov %r12,0x18(%rbx)
73f3(4): mov %rcx,0x20(%rbx)
73f7(4): mov %rbp,0x28(%rbx)
73fb(4): mov %rax,0x30(%rbx)
73ff(4): mov %r13,0x8(%rbx)
7403(4): mov 0x10(%rbx),%rsi
7407(5): jmp 0xfffffea6(%rip)
740c(4): nop 0x0(%rax)
7410(3): mov %r12,%rdi
7413(5): mov %rax,0x8(%rsp)
7418(4): mov %rcx,(%rsp)
741c(5): call 0xffffa4b4(%rip)
7421(4): mov (%rsp),%rcx
7425(3): mov %rcx,%rdi
7428(5): call 0xffffa4a8(%rip)
742d(3): mov %rbp,%rdi
7430(5): call 0xffffa4a0(%rip)
7435(5): mov 0x8(%rsp),%rax
743a(3): mov %rax,%rdi
743d(5): call 0xffffa493(%rip)
7442(7): mov $0xffffffff,%rax
7449(5): jmp 0xfffffef3(%rip)

"duplicate_node" :
7450(2): push %r13
7452(2): push %r12
7454(3): mov %rsi,%r13
7457(1): push %rbp
7458(1): push %rbx
7459(4): shl/sal $0x4,%r13
745d(3): mov %rsi,%rbp
7460(3): mov %edx,%r12d
7463(3): mov %rdi,%rbx
7466(4): sub $0x8,%rsp
746a(3): mov (%rdi),%rax
746d(4): mov 0x0(%rax,%r13,1),%rsi
7471(5): mov 0x8(%rax,%r13,1),%rdx
7476(5): call 0xfffffe0a(%rip)
747b(4): cmp $0xffffffff,%rax
747f(2): jz 0x65(%rip)
7481(3): mov %r12d,%edi
7484(3): mov (%rbx),%r8
7487(3): mov %rax,%rsi
748a(5): and $0x3ff,%di
748f(4): shl/sal $0x4,%rsi
7493(2): mov %edi,%ecx
7495(6): and $0x3ff,%ecx
749b(3): add %r8,%rsi
749e(3): shl/sal $0x8,%ecx
74a1(2): mov %ecx,%edx
74a3(3): mov 0x8(%rsi),%ecx
74a6(6): and $0xfffc00ff,%ecx
74ac(2): or %edx,%ecx
74ae(3): mov %ecx,0x8(%rsi)
74b1(5): mov 0x8(%r8,%r13,1),%edx
74b6(6): and $0xfffc00ff,%ecx
74bc(3): shr $0x8,%edx
74bf(2): or %edi,%edx
74c1(6): and $0x3ff,%edx
74c7(3): shl/sal $0x8,%edx
74ca(2): or %ecx,%edx
74cc(2): mov %edx,%ecx
74ce(3): mov %edx,0x8(%rsi)
74d1(3): shr $0x10,%ecx
74d4(2): mov %ecx,%edx
74d6(3): or $0x4,%edx
74d9(3): mov %dl,0xa(%rsi)
74dc(4): mov 0x20(%rbx),%rdx
74e0(4): mov %rbp,0x0(%rdx,%rax,8)
74e4(4): add $0x8,%rsp
74e8(1): pop %rbx
74e9(1): pop %rbp
74ea(2): pop %r12
74ec(2): pop %r13
74ee(1): ret near (%rsp)

"duplicate_node_closure" :
74f0(2): push %r15
74f2(2): push %r14
74f4(3): mov %rsi,%r9
74f7(2): push %r13
74f9(2): push %r12
74fb(3): mov %rdi,%r14
74fe(1): push %rbp
74ff(1): push %rbx
7500(3): mov %rdx,%r13
7503(3): mov %r8d,%ebp
7506(4): sub $0x18,%rsp
750a(5): mov %rcx,0x8(%rsp)
750f(3): mov (%r14),%r8
7512(3): mov %r9,%rax
7515(4): mov 0x28(%r14),%rdi
7519(4): shl/sal $0x4,%rax
751d(3): mov %r13,%r12
7520(3): add %r8,%rax
7523(4): cmp $0x4,0x8(%rax)
7527(6): jz 0x1b9(%rip)
752d(4): lea 0x0(%r9,%r9,2),%r12
7531(4): shl/sal $0x3,%r12
7535(4): lea 0x0(%rdi,%r12,1),%rsi
7539(4): mov 0x8(%rsi),%rcx
753d(3): test %rcx,%rcx
7540(6): jz 0x1f9(%rip)
7546(5): lea 0x0(%r13,%r13,2),%rbx
754b(4): mov 0x10(%rsi),%rsi
754f(4): shl/sal $0x3,%rbx
7553(3): add %rbx,%rdi
7556(4): cmp $0x1,%rcx
755a(3): mov (%rsi),%r15
755d(8): mov $0x0,0x8(%rdi)
7565(6): jz 0x11b(%rip)
756b(4): mov 0x10(%r14),%rdx
756f(4): lea 0xffffffff(%rdx),%rsi
7573(3): mov %rsi,%rax
7576(4): shl/sal $0x4,%rax
757a(3): add %r8,%rax
757d(4): test $0x4,0xa(%rax)
7581(6): jz 0xaf(%rip)
7587(3): test %rsi,%rsi
758a(6): jle 0xa6(%rip)
7590(4): shl/sal $0x4,%rdx
7594(3): sub %rax,%r8
7597(4): mov 0x20(%r14),%rcx
759b(5): lea 0xffffffe0(%r8,%rdx,1),%r8
75a0(2): jmp 0x1a(%rip)
75a2(6): nop 0x0(%rax,%rax,1)
75a8(3): add %r8,%rax
75ab(4): sub $0x1,%rsi
75af(4): test $0x4,0xa(%rax)
75b3(2): jz 0x7d(%rip)
75b5(3): test %rsi,%rsi
75b8(2): jle 0x78(%rip)
75ba(4): cmp %r15,0x0(%rcx,%rsi,8)
75be(2): jnz 0xffffffea(%rip)
75c0(3): mov 0x8(%rax),%edx
75c3(3): shr $0x8,%edx
75c6(6): and $0x3ff,%edx
75cc(2): cmp %edx,%ebp
75ce(2): jnz 0xffffffda(%rip)
75d0(5): call 0xffffefd0(%rip)
75d5(2): test %al,%al
75d7(2): jz 0x44(%rip)
75d9(4): mov 0x28(%r14),%rax
75dd(2): mov %ebp,%edx
75df(3): mov %r14,%rdi
75e2(5): mov 0x10(%rax,%r12,1),%rax
75e7(4): mov 0x8(%rax),%r9
75eb(3): mov %r9,%rsi
75ee(4): mov %r9,(%rsp)
75f2(5): call 0xfffffe5e(%rip)
75f7(4): cmp $0xffffffff,%rax
75fb(3): mov %rax,%r13
75fe(2): jz 0x1d(%rip)
7600(4): add 0x28(%r14),%rbx
7604(3): mov %r13,%rsi
7607(3): mov %rbx,%rdi
760a(5): call 0xffffef96(%rip)
760f(2): test %al,%al
7611(4): mov (%rsp),%r9
7615(6): jnz 0xfffffefa(%rip)
761b(5): mov $0xc,%eax
7620(4): add $0x18,%rsp
7624(1): pop %rbx
7625(1): pop %rbp
7626(2): pop %r12
7628(2): pop %r13
762a(2): pop %r14
762c(2): pop %r15
762e(1): ret near (%rsp)
762f(1): nop 
7630(2): mov %ebp,%edx
7632(3): mov %r15,%rsi
7635(3): mov %r14,%rdi
7638(5): call 0xfffffe18(%rip)
763d(4): cmp $0xffffffff,%rax
7641(3): mov %rax,%r13
7644(2): jz 0xffffffd7(%rip)
7646(4): mov 0x28(%r14),%rdi
764a(3): mov %r13,%rsi
764d(3): add %rbx,%rdi
7650(5): call 0xffffef50(%rip)
7655(2): test %al,%al
7657(2): jz 0xffffffc4(%rip)
7659(5): mov 0x8(%rsp),%rcx
765e(3): mov %ebp,%r8d
7661(3): mov %r13,%rdx
7664(3): mov %r15,%rsi
7667(3): mov %r14,%rdi
766a(5): call 0xfffffe86(%rip)
766f(2): test %eax,%eax
7671(6): jz 0xffffff68(%rip)
7677(2): jmp 0xffffffa9(%rip)
7679(7): nop 0x0(%rax)
7680(5): cmp 0x8(%rsp),%r9
7685(2): jnz 0xb(%rip)
7687(3): cmp %r13,%r9
768a(6): jnz 0xc2(%rip)
7690(3): mov 0x8(%rax),%eax
7693(3): mov %r15,%rsi
7696(3): mov %r14,%rdi
7699(3): shr $0x8,%eax
769c(5): and $0x3ff,%eax
76a1(2): or %eax,%ebp
76a3(2): mov %ebp,%edx
76a5(5): call 0xfffffdab(%rip)
76aa(4): cmp $0xffffffff,%rax
76ae(3): mov %rax,%r13
76b1(6): jz 0xffffff6a(%rip)
76b7(4): add 0x28(%r14),%rbx
76bb(3): mov %rax,%rsi
76be(3): mov %rbx,%rdi
76c1(5): call 0xffffeedf(%rip)
76c6(2): test %al,%al
76c8(6): jz 0xffffff53(%rip)
76ce(3): mov %r15,%r9
76d1(5): jmp 0xfffffe3e(%rip)
76d6(a): nop 0x0(%rax,%rax,1)
76e0(4): mov 0x18(%r14),%rax
76e4(5): lea 0x0(%r13,%r13,2),%rbx
76e9(8): lea 0x0(,%r9,8),%r15
76f1(2): mov %ebp,%edx
76f3(4): shl/sal $0x3,%rbx
76f7(4): mov 0x0(%rax,%r9,8),%r9
76fb(9): mov $0x0,0x8(%rdi,%rbx,1)
7704(3): mov %r14,%rdi
7707(3): mov %r9,%rsi
770a(4): mov %r9,(%rsp)
770e(5): call 0xfffffd42(%rip)
7713(4): cmp $0xffffffff,%rax
7717(3): mov %rax,%r13
771a(4): mov (%rsp),%r9
771e(6): jz 0xfffffefd(%rip)
7724(4): mov 0x18(%r14),%rax
7728(4): mov %r9,(%rsp)
772c(4): mov 0x0(%rax,%r15,1),%rcx
7730(4): mov %rcx,0x0(%rax,%r12,8)
7734(5): jmp 0xfffffecc(%rip)
7739(4): mov 0x18(%r14),%rax
773d(4): mov 0x0(%rax,%r9,8),%rcx
7741(4): mov %rcx,0x0(%rax,%r13,8)
7745(2): xor %eax,%eax
7747(5): jmp 0xfffffed9(%rip)
774c(3): mov %r15,%rsi
774f(5): call 0xffffee51(%rip)
7754(2): mov %eax,%edx
7756(2): xor %eax,%eax
7758(2): test %dl,%dl
775a(6): jnz 0xfffffec6(%rip)
7760(5): jmp 0xfffffebb(%rip)

"free_state" :
7770(1): push %rbx
7771(3): mov %rdi,%rbx
7774(4): mov 0x30(%rdi),%rdi
7778(5): call 0xffffa158(%rip)
777d(4): mov 0x48(%rbx),%rdi
7781(5): call 0xffffa14f(%rip)
7786(4): mov 0x50(%rbx),%rax
778a(4): lea 0x8(%rbx),%rdx
778e(3): cmp %rdx,%rax
7791(2): jz 0x14(%rip)
7793(4): mov 0x10(%rax),%rdi
7797(5): call 0xffffa139(%rip)
779c(4): mov 0x50(%rbx),%rdi
77a0(5): call 0xffffa130(%rip)
77a5(4): mov 0x18(%rbx),%rdi
77a9(5): call 0xffffa127(%rip)
77ae(4): mov 0x60(%rbx),%rdi
77b2(5): call 0xffffa11e(%rip)
77b7(4): mov 0x58(%rbx),%rdi
77bb(5): call 0xffffa115(%rip)
77c0(3): mov %rbx,%rdi
77c3(1): pop %rbx
77c4(5): jmp 0xffffa10c(%rip)

"re_string_destruct" :
77d0(1): push %rbx
77d1(3): mov %rdi,%rbx
77d4(4): mov 0x10(%rdi),%rdi
77d8(5): call 0xffffa0f8(%rip)
77dd(4): mov 0x18(%rbx),%rdi
77e1(5): call 0xffffa0ef(%rip)
77e6(7): cmp $0x0,0x8b(%rbx)
77ed(2): jnz 0xb(%rip)
77ef(1): pop %rbx
77f0(1): ret near (%rsp)
77f1(7): nop 0x0(%rax)
77f8(4): mov 0x8(%rbx),%rdi
77fc(1): pop %rbx
77fd(5): jmp 0xffffa0d3(%rip)

"free_dfa_content" :
7810(2): push %r14
7812(2): push %r13
7814(2): push %r12
7816(3): mov %rdi,%r12
7819(1): push %rbp
781a(1): push %rbx
781b(3): mov (%rdi),%rdi
781e(3): test %rdi,%rdi
7821(2): jz 0x2d(%rip)
7823(6): cmp $0x0,0x10(%r12)
7829(2): jz 0x25(%rip)
782b(2): xor %ebx,%ebx
782d(2): jmp 0x7(%rip)
782f(1): nop 
7830(4): mov (%r12),%rdi
7834(3): mov %rbx,%rax
7837(4): add $0x1,%rbx
783b(4): shl/sal $0x4,%rax
783f(3): add %rax,%rdi
7842(5): call 0xfffff9ee(%rip)
7847(5): cmp %rbx,0x10(%r12)
784c(2): jnbe 0xffffffe4(%rip)
784e(5): mov 0x18(%r12),%rdi
7853(5): call 0xffffa07d(%rip)
7858(6): cmp $0x0,0x10(%r12)
785e(2): jz 0x55(%rip)
7860(2): xor %ebx,%ebx
7862(2): xor %ebp,%ebp
7864(4): nop 0x0(%rax)
7868(5): mov 0x30(%r12),%rax
786d(3): test %rax,%rax
7870(2): jz 0xc(%rip)
7872(5): mov 0x10(%rax,%rbx,1),%rdi
7877(5): call 0xffffa059(%rip)
787c(5): mov 0x38(%r12),%rax
7881(3): test %rax,%rax
7884(2): jz 0xc(%rip)
7886(5): mov 0x10(%rax,%rbx,1),%rdi
788b(5): call 0xffffa045(%rip)
7890(5): mov 0x28(%r12),%rax
7895(3): test %rax,%rax
7898(2): jz 0xc(%rip)
789a(5): mov 0x10(%rax,%rbx,1),%rdi
789f(5): call 0xffffa031(%rip)
78a4(4): add $0x1,%rbp
78a8(4): add $0x18,%rbx
78ac(5): cmp %rbp,0x10(%r12)
78b1(2): jnbe 0xffffffb7(%rip)
78b3(5): mov 0x28(%r12),%rdi
78b8(5): call 0xffffa018(%rip)
78bd(5): mov 0x30(%r12),%rdi
78c2(5): call 0xffffa00e(%rip)
78c7(5): mov 0x38(%r12),%rdi
78cc(5): call 0xffffa004(%rip)
78d1(4): mov (%r12),%rdi
78d5(5): call 0xffff9ffb(%rip)
78da(5): mov 0x40(%r12),%rdi
78df(3): test %rdi,%rdi
78e2(2): jz 0x55(%rip)
78e4(3): xor %r14d,%r14d
78e7(3): xor %r13d,%r13d
78ea(6): nop 0x0(%rax,%rax,1)
78f0(4): lea 0x0(%rdi,%r14,1),%rbp
78f4(5): cmp $0x0,0x0(%rbp)
78f9(2): jle 0x1e(%rip)
78fb(2): xor %ebx,%ebx
78fd(3): nop (%rax)
7900(4): mov 0x10(%rbp),%rax
7904(4): mov 0x0(%rax,%rbx,8),%rdi
7908(4): add $0x1,%rbx
790c(5): call 0xfffffe64(%rip)
7911(4): cmp %rbx,0x0(%rbp)
7915(2): jnle 0xffffffeb(%rip)
7917(4): mov 0x10(%rbp),%rdi
791b(4): add $0x1,%r13
791f(4): add $0x18,%r14
7923(5): call 0xffff9fad(%rip)
7928(8): cmp %r13,0x88(%r12)
7930(5): mov 0x40(%r12),%rdi
7935(2): jnb 0xffffffbb(%rip)
7937(5): call 0xffff9f99(%rip)
793c(5): mov 0x78(%r12),%rdi
7941(7): lea 0xe518(%rip),%rax
7948(3): cmp %rax,%rdi
794b(2): jz 0x7(%rip)
794d(5): call 0xffff9f83(%rip)
7952(8): mov 0xe0(%r12),%rdi
795a(5): call 0xffff9f76(%rip)
795f(1): pop %rbx
7960(3): mov %r12,%rdi
7963(1): pop %rbp
7964(2): pop %r12
7966(2): pop %r13
7968(2): pop %r14
796a(5): jmp 0xffff9f66(%rip)

"match_ctx_clean" :
7970(2): push %r14
7972(2): push %r13
7974(3): mov %rdi,%r14
7977(2): push %r12
7979(1): push %rbp
797a(1): push %rbx
797b(8): cmp $0x0,0xe8(%rdi)
7983(6): jle 0x86(%rip)
7989(3): xor %r13d,%r13d
798c(4): nop 0x0(%rax)
7990(7): mov 0xf8(%r14),%rax
7997(4): mov 0x0(%rax,%r13,8),%r12
799b(6): cmp $0x0,0x20(%r12)
79a1(2): jle 0x2c(%rip)
79a3(2): xor %ebx,%ebx
79a5(3): nop (%rax)
79a8(5): mov 0x28(%r12),%rax
79ad(4): mov 0x0(%rax,%rbx,8),%rbp
79b1(4): add $0x1,%rbx
79b5(4): mov 0x20(%rbp),%rdi
79b9(5): call 0xffff9f17(%rip)
79be(3): mov %rbp,%rdi
79c1(5): call 0xffff9f0f(%rip)
79c6(5): cmp %rbx,0x20(%r12)
79cb(2): jnle 0xffffffdd(%rip)
79cd(5): mov 0x28(%r12),%rdi
79d2(5): call 0xffff9efe(%rip)
79d7(5): mov 0x10(%r12),%rax
79dc(3): test %rax,%rax
79df(2): jz 0x15(%rip)
79e1(4): mov 0x10(%rax),%rdi
79e5(5): call 0xffff9eeb(%rip)
79ea(5): mov 0x10(%r12),%rdi
79ef(5): call 0xffff9ee1(%rip)
79f4(3): mov %r12,%rdi
79f7(4): add $0x1,%r13
79fb(5): call 0xffff9ed5(%rip)
7a00(7): cmp %r13,0xe8(%r14)
7a07(2): jnle 0xffffff89(%rip)
7a09(1): pop %rbx
7a0a(b): mov $0x0,0xe8(%r14)
7a15(b): mov $0x0,0xc8(%r14)
7a20(1): pop %rbp
7a21(2): pop %r12
7a23(2): pop %r13
7a25(2): pop %r14
7a27(1): ret near (%rsp)

"re_string_char_size_at.part.0" :
7a30(4): mov 0x30(%rdi),%rcx
7a34(4): lea 0x1(%rsi),%rax
7a38(3): cmp %rcx,%rax
7a3b(2): jnl 0x3d(%rip)
7a3d(4): mov 0x10(%rdi),%rdx
7a41(8): lea 0x0(,%rax,4),%rdi
7a49(4): cmp $0xff,0x0(%rdx,%rax,4)
7a4d(2): jnz 0x2b(%rip)
7a4f(3): sub %rsi,%rcx
7a52(5): lea 0xfffffffc(%rdx,%rdi,1),%rsi
7a57(5): mov $0x2,%edx
7a5c(2): jmp 0xf(%rip)
7a5e(2): nop 
7a60(4): add $0x1,%rdx
7a64(5): cmp $0xff,0xfffffffc(%rsi,%rdx,4)
7a69(2): jnz 0x14(%rip)
7a6b(3): cmp %rcx,%rdx
7a6e(2): mov %edx,%eax
7a70(2): jnz 0xfffffff0(%rip)
7a72(2): REP ret near (%rsp)
7a74(4): nop 0x0(%rax)
7a78(5): mov $0x1,%eax
7a7d(2): REP ret near (%rsp)

"re_node_set_compare.part.2" :
7a80(4): mov 0x8(%rdi),%rdx
7a84(2): xor %eax,%eax
7a86(4): cmp 0x8(%rsi),%rdx
7a8a(2): jz 0x6(%rip)
7a8c(2): REP ret near (%rsp)
7a8e(2): nop 
7a90(4): lea 0xffffffff(%rdx),%rax
7a94(8): lea 0x0(,%rax,8),%rdx
7a9c(2): jmp 0x21(%rip)
7a9e(2): nop 
7aa0(4): mov 0x10(%rdi),%rcx
7aa4(4): mov 0x0(%rcx,%rdx,1),%r8
7aa8(4): mov 0x10(%rsi),%rcx
7aac(4): mov 0x0(%rcx,%rdx,1),%rcx
7ab0(4): sub $0x8,%rdx
7ab4(3): cmp %rcx,%r8
7ab7(2): jnz 0x19(%rip)
7ab9(4): sub $0x1,%rax
7abd(3): test %rax,%rax
7ac0(2): jns 0xffffffe0(%rip)
7ac2(5): mov $0x1,%eax
7ac7(1): ret near (%rsp)
7ac8(8): nop 0x0(%rax,%rax,1)
7ad0(2): xor %eax,%eax
7ad2(1): ret near (%rsp)

"re_node_set_contains.isra.3" :
7ae0(2): xor %eax,%eax
7ae2(3): test %rdi,%rdi
7ae5(2): jle 0x40(%rip)
7ae7(3): mov (%rsi),%r8
7aea(4): sub $0x1,%rdi
7aee(2): xor %esi,%esi
7af0(3): cmp %rdi,%rsi
7af3(2): jnb 0x2a(%rip)
7af5(4): lea 0x0(%rsi,%rdi,1),%rcx
7af9(3): shr $0x1,%rcx
7afc(4): cmp 0x0(%r8,%rcx,8),%rdx
7b00(2): jle 0x18(%rip)
7b02(2): jmp 0x2e(%rip)
7b04(4): nop 0x0(%rax)
7b08(4): lea 0x0(%rsi,%rcx,1),%rax
7b0c(3): shr $0x1,%rax
7b0f(4): cmp %rdx,0x0(%r8,%rax,8)
7b13(2): jl 0x2d(%rip)
7b15(3): mov %rax,%rcx
7b18(3): cmp %rcx,%rsi
7b1b(2): jb 0xffffffed(%rip)
7b1d(2): xor %eax,%eax
7b1f(4): cmp 0x0(%r8,%rsi,8),%rdx
7b23(2): jz 0x2d(%rip)
7b25(2): REP ret near (%rsp)
7b27(9): nop 0x0(%rax,%rax,1)
7b30(3): mov %rcx,%rax
7b33(3): mov %rdi,%rcx
7b36(a): nop 0x0(%rax,%rax,1)
7b40(4): lea 0x1(%rax),%rsi
7b44(3): mov %rcx,%rdi
7b47(2): jmp 0xffffffa9(%rip)
7b49(7): nop 0x0(%rax)
7b50(4): lea 0x1(%rsi),%rax
7b54(1): ret near (%rsp)

"check_arrival_expand_ecl_sub" :
7b60(2): push %r15
7b62(2): push %r14
7b64(4): lea 0x10(%rsi),%r14
7b68(2): push %r13
7b6a(2): push %r12
7b6c(3): mov %rcx,%r15
7b6f(1): push %rbp
7b70(1): push %rbx
7b71(3): mov %rdi,%r12
7b74(3): mov %rsi,%rbp
7b77(3): mov %rdx,%rbx
7b7a(3): mov %r8d,%r13d
7b7d(4): sub $0x8,%rsp
7b81(4): mov 0x8(%rbp),%rdi
7b85(3): mov %rbx,%rdx
7b88(3): mov %r14,%rsi
7b8b(5): call 0xffffff55(%rip)
7b90(3): test %rax,%rax
7b93(2): jnz 0x6d(%rip)
7b95(3): mov %rbx,%rax
7b98(4): shl/sal $0x4,%rax
7b9c(4): add (%r12),%rax
7ba0(4): movzx 0x8(%rax),%edx
7ba4(3): cmp %r13d,%edx
7ba7(2): jnz 0x7(%rip)
7ba9(3): cmp %r15,(%rax)
7bac(2): jz 0x3c(%rip)
7bae(3): mov %rbx,%rsi
7bb1(3): mov %rbp,%rdi
7bb4(5): call 0xffffe9ec(%rip)
7bb9(2): test %al,%al
7bbb(2): jz 0x5d(%rip)
7bbd(4): lea 0x0(%rbx,%rbx,2),%rbx
7bc1(5): mov 0x28(%r12),%rdx
7bc6(4): shl/sal $0x3,%rbx
7bca(3): add %rbx,%rdx
7bcd(4): mov 0x8(%rdx),%rax
7bd1(3): test %rax,%rax
7bd4(2): jz 0x2c(%rip)
7bd6(4): cmp $0x2,%rax
7bda(4): mov 0x10(%rdx),%rdx
7bde(2): jz 0x52(%rip)
7be0(3): mov (%rdx),%rbx
7be3(2): jmp 0xffffff9e(%rip)
7be5(3): nop (%rax)
7be8(4): cmp $0x9,%r13d
7bec(2): jnz 0x14(%rip)
7bee(3): mov %rbx,%rsi
7bf1(3): mov %rbp,%rdi
7bf4(5): call 0xffffe9ac(%rip)
7bf9(2): test %al,%al
7bfb(2): jz 0x1d(%rip)
7bfd(3): nop (%rax)
7c00(2): xor %eax,%eax
7c02(4): add $0x8,%rsp
7c06(1): pop %rbx
7c07(1): pop %rbp
7c08(2): pop %r12
7c0a(2): pop %r13
7c0c(2): pop %r14
7c0e(2): pop %r15
7c10(1): ret near (%rsp)
7c11(7): nop 0x0(%rax)
7c18(4): add $0x8,%rsp
7c1c(5): mov $0xc,%eax
7c21(1): pop %rbx
7c22(1): pop %rbp
7c23(2): pop %r12
7c25(2): pop %r13
7c27(2): pop %r14
7c29(2): pop %r15
7c2b(1): ret near (%rsp)
7c2c(4): nop 0x0(%rax)
7c30(4): mov 0x8(%rdx),%rdx
7c34(3): mov %r13d,%r8d
7c37(3): mov %r15,%rcx
7c3a(3): mov %rbp,%rsi
7c3d(3): mov %r12,%rdi
7c40(5): call 0xffffff20(%rip)
7c45(2): test %eax,%eax
7c47(2): jnz 0xffffffbb(%rip)
7c49(5): mov 0x28(%r12),%rax
7c4e(5): mov 0x10(%rax,%rbx,1),%rdx
7c53(2): jmp 0xffffff8d(%rip)

"re_node_set_remove_at.isra.4.part.5" :
7c60(3): mov (%rdi),%rax
7c63(3): cmp %rdx,%rax
7c66(2): jle 0x2c(%rip)
7c68(4): sub $0x1,%rax
7c6c(3): cmp %rax,%rdx
7c6f(3): mov %rax,(%rdi)
7c72(2): jnl 0x20(%rip)
7c74(3): mov (%rsi),%rax
7c77(9): nop 0x0(%rax,%rax,1)
7c80(5): mov 0x8(%rax,%rdx,8),%rcx
7c85(4): mov %rcx,0x0(%rax,%rdx,8)
7c89(4): add $0x1,%rdx
7c8d(3): cmp (%rdi),%rdx
7c90(2): jl 0xfffffff0(%rip)
7c92(2): REP ret near (%rsp)

"optimize_subexps" :
7ca0(4): movzx 0x30(%rsi),%eax
7ca4(2): cmp $0x4,%al
7ca6(2): jz 0x5a(%rip)
7ca8(2): cmp $0x11,%al
7caa(2): jz 0x6(%rip)
7cac(2): xor %eax,%eax
7cae(1): ret near (%rsp)
7caf(1): nop 
7cb0(4): mov 0x8(%rsi),%rax
7cb4(3): test %rax,%rax
7cb7(2): jz 0xfffffff5(%rip)
7cb9(4): cmp $0x11,0x30(%rax)
7cbd(2): jnz 0xffffffef(%rip)
7cbf(4): mov 0x28(%rax),%rcx
7cc3(4): mov 0x8(%rax),%rax
7cc7(3): test %rax,%rax
7cca(4): mov %rax,0x8(%rsi)
7cce(2): jz 0x5(%rip)
7cd0(3): mov %rsi,(%rax)
7cd3(7): mov 0xe0(%rdi),%rax
7cda(4): mov 0x28(%rsi),%rdx
7cde(4): cmp $0x3f,%rcx
7ce2(4): mov 0x0(%rax,%rdx,8),%rdx
7ce6(4): mov %rdx,0x0(%rax,%rcx,8)
7cea(2): jnle 0xffffffc2(%rip)
7cec(7): mov $0xfffffffe,%rax
7cf3(3): rol %cl,%rax
7cf6(7): and %rax,0xa0(%rdi)
7cfd(2): jmp 0xffffffaf(%rip)
7cff(1): nop 
7d00(7): mov 0xe0(%rdi),%rax
7d07(3): test %rax,%rax
7d0a(2): jz 0xffffffa2(%rip)
7d0c(4): movsxd 0x28(%rsi),%rdx
7d10(4): mov 0x0(%rax,%rdx,8),%rcx
7d14(5): mov $0x1,%eax
7d19(2): shl/sal %cl,%eax
7d1b(4): mov %rcx,0x28(%rsi)
7d1f(2): cwde 
7d21(7): or %rax,0xa0(%rdi)
7d28(2): xor %eax,%eax
7d2a(1): ret near (%rsp)

"calc_next" :
7d30(4): movzx 0x30(%rsi),%eax
7d34(4): mov 0x8(%rsi),%rdx
7d38(2): cmp $0xb,%al
7d3a(2): jz 0x46(%rip)
7d3c(2): cmp $0x10,%al
7d3e(2): jz 0x2a(%rip)
7d40(3): test %rdx,%rdx
7d43(2): jz 0xa(%rip)
7d45(4): mov 0x20(%rsi),%rax
7d49(4): mov %rax,0x20(%rdx)
7d4d(4): mov 0x10(%rsi),%rax
7d51(3): test %rax,%rax
7d54(2): jz 0xa(%rip)
7d56(4): mov 0x20(%rsi),%rdx
7d5a(4): mov %rdx,0x20(%rax)
7d5e(2): xor %eax,%eax
7d60(1): ret near (%rsp)
7d61(7): nop 0x0(%rax)
7d68(4): mov 0x10(%rsi),%rax
7d6c(4): mov 0x18(%rax),%rcx
7d70(4): mov %rcx,0x20(%rdx)
7d74(4): mov 0x20(%rsi),%rdx
7d78(4): mov %rdx,0x20(%rax)
7d7c(2): xor %eax,%eax
7d7e(1): ret near (%rsp)
7d7f(1): nop 
7d80(4): mov %rsi,0x20(%rdx)
7d84(2): xor %eax,%eax
7d86(1): ret near (%rsp)

"check_dst_limits.isra.13" :
7d90(2): push %r15
7d92(2): push %r14
7d94(2): push %r13
7d96(2): push %r12
7d98(1): push %rbp
7d99(1): push %rbx
7d9a(2): xor %ebx,%ebx
7d9c(4): sub $0x48,%rsp
7da0(7): mov 0x98(%rdi),%rax
7da7(7): mov 0xc8(%rdi),%r15
7dae(8): mov 0x80(%rsp),%r12
7db6(5): mov %rax,0x8(%rsp)
7dbb(3): mov %r15,%rbp
7dbe(3): cmp %rbp,%rbx
7dc1(2): jnl 0x5a(%rip)
7dc3(4): lea 0x0(%rbx,%rbp,1),%rax
7dc7(7): mov 0xd8(%rdi),%r13
7dce(3): mov %rax,%r10
7dd1(4): shr $0x3f,%r10
7dd5(3): add %rax,%r10
7dd8(3): sar $0x1,%r10
7ddb(4): lea 0x0(%r10,%r10,4),%rax
7ddf(5): cmp 0x8(%r13,%rax,8),%r8
7de4(2): jle 0x32(%rip)
7de6(5): jmp 0x19a(%rip)
7deb(5): nop 0x0(%rax,%rax,1)
7df0(4): lea 0x0(%rbx,%r10,1),%r11
7df4(3): mov %r11,%rax
7df7(4): shr $0x3f,%rax
7dfb(3): add %r11,%rax
7dfe(3): sar $0x1,%rax
7e01(4): lea 0x0(%rax,%rax,4),%r11
7e05(3): mov %rax,%r14
7e08(5): cmp %r8,0x8(%r13,%r11,8)
7e0d(6): jl 0x183(%rip)
7e13(3): mov %rax,%r10
7e16(3): cmp %r10,%rbx
7e19(2): jl 0xffffffd7(%rip)
7e1b(3): cmp %rbx,%r15
7e1e(6): jle 0x1a2(%rip)
7e24(7): mov 0xd8(%rdi),%r11
7e2b(4): lea 0x0(%rbx,%rbx,4),%rax
7e2f(4): lea 0x0(%r11,%rax,8),%rax
7e33(4): cmp 0x8(%rax),%r8
7e37(7): mov $0xffffffff,%rax
7e3e(4): cmovne %rax,%rbx
7e42(3): mov %r15,%rax
7e45(2): xor %ebp,%ebp
7e47(3): cmp %rax,%rbp
7e4a(2): jnl 0x5a(%rip)
7e4c(5): lea 0x0(%rbp,%rax,1),%r11
7e51(3): mov %r11,%r10
7e54(4): shr $0x3f,%r10
7e58(3): add %r11,%r10
7e5b(7): mov 0xd8(%rdi),%r11
7e62(3): sar $0x1,%r10
7e65(4): lea 0x0(%r10,%r10,4),%r13
7e69(5): cmp 0x8(%r11,%r13,8),%r12
7e6e(2): jle 0x31(%rip)
7e70(5): jmp 0x130(%rip)
7e75(3): nop (%rax)
7e78(5): lea 0x0(%rbp,%r10,1),%r13
7e7d(3): mov %r13,%rax
7e80(4): shr $0x3f,%rax
7e84(3): add %r13,%rax
7e87(3): sar $0x1,%rax
7e8a(4): lea 0x0(%rax,%rax,4),%r13
7e8e(3): mov %rax,%r14
7e91(5): cmp %r12,0x8(%r11,%r13,8)
7e96(6): jl 0x11a(%rip)
7e9c(3): mov %rax,%r10
7e9f(3): cmp %r10,%rbp
7ea2(2): jl 0xffffffd6(%rip)
7ea4(3): cmp %rbp,%r15
7ea7(6): jle 0x129(%rip)
7ead(7): mov 0xd8(%rdi),%r10
7eb4(5): lea 0x0(%rbp,%rbp,4),%rax
7eb9(4): lea 0x0(%r10,%rax,8),%rax
7ebd(4): cmp 0x8(%rax),%r12
7ec1(7): mov $0xffffffff,%rax
7ec8(4): cmovne %rax,%rbp
7ecc(4): cmp $0x0,(%rsi)
7ed0(6): jle 0x122(%rip)
7ed6(5): mov %rbp,0x30(%rsp)
7edb(5): mov %r9,0x20(%rsp)
7ee0(3): mov %rdi,%r13
7ee3(5): mov %r8,0x18(%rsp)
7ee8(5): mov %rcx,0x10(%rsp)
7eed(3): xor %r14d,%r14d
7ef0(5): mov %rsi,0x38(%rsp)
7ef5(5): mov %rbx,0x28(%rsp)
7efa(3): mov %rdx,%rbp
7efd(3): mov %r12,%r15
7f00(4): mov 0x0(%rbp),%rax
7f04(7): mov 0xd8(%r13),%rdx
7f0b(3): mov %r13,%rdi
7f0e(5): mov 0x28(%rsp),%r9
7f13(5): mov 0x18(%rsp),%r8
7f18(5): mov 0x10(%rsp),%rcx
7f1d(4): mov 0x0(%rax,%r14,8),%rsi
7f21(4): lea 0x0(%rsi,%rsi,4),%rax
7f25(4): lea 0x0(%rdx,%rax,8),%rax
7f29(5): mov 0x8(%rsp),%rdx
7f2e(3): mov (%rax),%rax
7f31(4): shl/sal $0x4,%rax
7f35(3): add (%rdx),%rax
7f38(3): mov (%rax),%r12
7f3b(3): mov %r12,%rdx
7f3e(5): call 0xffffe412(%rip)
7f43(2): mov %eax,%ebx
7f45(4): mov 0x0(%rbp),%rax
7f49(5): mov 0x30(%rsp),%r9
7f4e(5): mov 0x20(%rsp),%rcx
7f53(3): mov %r15,%r8
7f56(3): mov %r12,%rdx
7f59(3): mov %r13,%rdi
7f5c(4): mov 0x0(%rax,%r14,8),%rsi
7f60(5): call 0xffffe3f0(%rip)
7f65(2): cmp %eax,%ebx
7f67(2): jz 0x79(%rip)
7f69(5): mov $0x1,%eax
7f6e(4): add $0x48,%rsp
7f72(1): pop %rbx
7f73(1): pop %rbp
7f74(2): pop %r12
7f76(2): pop %r13
7f78(2): pop %r14
7f7a(2): pop %r15
7f7c(1): ret near (%rsp)
7f7d(3): nop (%rax)
7f80(3): mov %r10,%r14
7f83(3): mov %rbp,%r10
7f86(a): nop 0x0(%rax,%rax,1)
7f90(4): lea 0x1(%r14),%rbx
7f94(3): mov %r10,%rbp
7f97(5): jmp 0xfffffe27(%rip)
7f9c(4): nop 0x0(%rax)
7fa0(3): mov %r10,%r14
7fa3(3): mov %rax,%r10
7fa6(a): nop 0x0(%rax,%rax,1)
7fb0(4): lea 0x1(%r14),%rbp
7fb4(3): mov %r10,%rax
7fb7(5): jmp 0xfffffe90(%rip)
7fbc(4): nop 0x0(%rax)
7fc0(7): mov $0xffffffff,%rbx
7fc7(5): jmp 0xfffffe7b(%rip)
7fcc(4): nop 0x0(%rax)
7fd0(7): mov $0xffffffff,%rbp
7fd7(5): jmp 0xfffffef5(%rip)
7fdc(4): nop 0x0(%rax)
7fe0(5): mov 0x38(%rsp),%rax
7fe5(4): add $0x1,%r14
7fe9(3): cmp (%rax),%r14
7fec(6): jl 0xffffff14(%rip)
7ff2(2): xor %eax,%eax
7ff4(5): jmp 0xffffff7a(%rip)

"re_node_set_merge" :
8000(3): test %rsi,%rsi
8003(6): jz 0xf5(%rip)
8009(4): mov 0x8(%rsi),%rdx
800d(3): test %rdx,%rdx
8010(6): jz 0xe8(%rip)
8016(2): push %r12
8018(1): push %rbp
8019(3): mov %rsi,%r12
801c(1): push %rbx
801d(4): mov 0x8(%rdi),%rax
8021(3): mov %rdi,%rbx
8024(3): mov (%rdi),%rsi
8027(4): lea 0x0(%rax,%rdx,2),%rcx
802b(3): cmp %rcx,%rsi
802e(6): jl 0x14a(%rip)
8034(3): test %rax,%rax
8037(6): jz 0x179(%rip)
803d(4): lea 0x0(%rax,%rdx,2),%rbp
8041(4): sub $0x1,%rdx
8045(4): sub $0x1,%rax
8049(3): mov %rdx,%rdi
804c(3): not %rdi
804f(3): test %rdi,%rdi
8052(2): jns 0x3e(%rip)
8054(3): test %rax,%rax
8057(2): js 0x39(%rip)
8059(4): mov 0x10(%rbx),%rcx
805d(5): mov 0x10(%r12),%rsi
8062(4): mov 0x0(%rsi,%rdx,8),%rsi
8066(4): cmp %rsi,0x0(%rcx,%rax,8)
806a(6): jz 0x96(%rip)
8070(6): jnl 0xa8(%rip)
8076(4): sub $0x1,%rdx
807a(4): sub $0x1,%rbp
807e(3): mov %rdx,%rdi
8081(4): mov %rsi,0x0(%rcx,%rbp,8)
8085(3): not %rdi
8088(3): test %rdi,%rdi
808b(2): js 0xffffffc9(%rip)
808d(3): nop (%rax)
8090(3): test %rdx,%rdx
8093(6): jns 0x95(%rip)
8099(4): mov 0x8(%rbx),%rcx
809d(5): mov 0x8(%r12),%rax
80a2(5): lea 0xffffffff(%rcx,%rax,2),%r8
80a7(3): mov %r8,%rdx
80aa(3): sub %rbp,%rdx
80ad(4): add $0x1,%rdx
80b1(2): jz 0x39(%rip)
80b3(4): mov 0x10(%rbx),%rdi
80b7(4): lea 0xffffffff(%rcx),%rax
80bb(3): add %rdx,%rcx
80be(4): mov %rcx,0x8(%rbx)
80c2(6): nop 0x0(%rax,%rax,1)
80c8(4): mov 0x0(%rdi,%r8,8),%rsi
80cc(4): mov 0x0(%rdi,%rax,8),%rcx
80d0(4): lea 0x0(%rax,%rdx,1),%r9
80d4(4): lea 0x0(%rdi,%r9,8),%r9
80d8(3): cmp %rcx,%rsi
80db(2): jle 0x75(%rip)
80dd(4): sub $0x1,%r8
80e1(4): sub $0x1,%rdx
80e5(3): mov %rsi,(%r9)
80e8(2): jnz 0xffffffe0(%rip)
80ea(2): xor %eax,%eax
80ec(1): pop %rbx
80ed(1): pop %rbp
80ee(2): pop %r12
80f0(1): ret near (%rsp)
80f1(7): nop 0x0(%rax)
80f8(2): xor %eax,%eax
80fa(1): ret near (%rsp)
80fb(5): nop 0x0(%rax,%rax,1)
8100(4): sub $0x1,%rdx
8104(4): sub $0x1,%rax
8108(3): mov %rdx,%rdi
810b(3): not %rdi
810e(5): jmp 0xffffff41(%rip)
8113(5): nop 0x0(%rax,%rax,1)
8118(4): sub $0x1,%rax
811c(5): jmp 0xffffff33(%rip)
8121(7): nop 0x0(%rax)
8128(4): mov 0x10(%rbx),%rax
812c(4): add $0x1,%rdx
8130(5): mov 0x10(%r12),%rsi
8135(3): sub %rdx,%rbp
8138(4): shl/sal $0x3,%rdx
813c(4): lea 0x0(%rax,%rbp,8),%rdi
8140(5): call 0xffff9990(%rip)
8145(5): jmp 0xffffff54(%rip)
814a(6): nop 0x0(%rax,%rax,1)
8150(4): sub $0x1,%rax
8154(3): mov %rcx,(%r9)
8157(6): jns 0xffffff71(%rip)
815d(4): lea 0x0(%rdi,%rbp,8),%rsi
8161(4): shl/sal $0x3,%rdx
8165(5): call 0xffff996b(%rip)
816a(2): xor %eax,%eax
816c(5): jmp 0xffffff80(%rip)
8171(7): nop 0x0(%rax)
8178(3): add %rsi,%rdx
817b(4): mov 0x10(%rdi),%rdi
817f(4): lea 0x0(%rdx,%rdx,1),%rbp
8183(4): shl/sal $0x4,%rdx
8187(3): mov %rdx,%rsi
818a(5): call 0xffff99d6(%rip)
818f(3): test %rax,%rax
8192(2): jz 0x42(%rip)
8194(4): mov %rax,0x10(%rbx)
8198(3): mov %rbp,(%rbx)
819b(4): mov 0x8(%rbx),%rax
819f(5): mov 0x8(%r12),%rdx
81a4(5): jmp 0xfffffe90(%rip)
81a9(7): nop 0x0(%rax)
81b0(4): mov %rdx,0x8(%rbx)
81b4(5): mov 0x8(%r12),%rax
81b9(4): mov 0x10(%rbx),%rdi
81bd(5): mov 0x10(%r12),%rsi
81c2(8): lea 0x0(,%rax,8),%rdx
81ca(5): call 0xffff9906(%rip)
81cf(5): jmp 0xffffff1b(%rip)
81d4(5): mov $0xc,%eax
81d9(5): jmp 0xffffff13(%rip)

"calc_eclosure_iter" :
81e0(2): push %r15
81e2(2): push %r14
81e4(3): mov %rsi,%r15
81e7(2): push %r13
81e9(2): push %r12
81eb(1): push %rbp
81ec(1): push %rbx
81ed(4): lea 0x0(%rdx,%rdx,2),%rbx
81f1(3): mov %rdx,%rbp
81f4(4): sub $0x68,%rsp
81f8(4): mov 0x28(%rsi),%r12
81fc(4): shl/sal $0x3,%rbx
8200(9): mov $0x28,%rax
8209(5): mov %rax,0x58(%rsp)
820e(2): xor %eax,%eax
8210(5): mov %rdi,0x10(%rsp)
8215(4): mov %ecx,0x1c(%rsp)
8219(3): add %rbx,%r12
821c(5): mov 0x8(%r12),%rax
8221(9): mov $0x0,0x28(%rsp)
822a(4): lea 0x1(%rax),%rdi
822e(5): mov %rdi,0x20(%rsp)
8233(4): shl/sal $0x3,%rdi
8237(5): call 0xffff98c9(%rip)
823c(3): test %rax,%rax
823f(5): mov %rax,0x30(%rsp)
8244(6): jz 0x23c(%rip)
824a(4): mov 0x30(%r15),%rax
824e(3): mov (%r15),%rdx
8251(3): mov %rbp,%r13
8254(4): shl/sal $0x4,%r13
8258(9): mov $0xffffffff,0x8(%rax,%rbx,1)
8261(4): lea 0x0(%rdx,%r13,1),%rax
8265(4): mov 0x8(%rax),%r8d
8269(7): test $0x3ff00,%r8d
8270(6): jnz 0x1a0(%rip)
8276(4): test $0x8,0x8(%rax)
827a(6): jz 0xc6(%rip)
8280(4): mov 0x28(%r15),%rsi
8284(4): lea 0x0(%rsi,%rbx,1),%rax
8288(5): cmp $0x0,0x8(%rax)
828d(6): jle 0xb3(%rip)
8293(5): lea 0x20(%rsp),%rdx
8298(5): mov $0x0,0x1b(%rsp)
829d(3): xor %r14d,%r14d
82a0(5): lea 0x40(%rsp),%r12
82a5(5): mov %rdx,0x8(%rsp)
82aa(2): jmp 0x1c(%rip)
82ac(4): nop 0x0(%rax)
82b0(4): mov 0x28(%r15),%rsi
82b4(4): add $0x1,%r14
82b8(4): lea 0x0(%rsi,%rbx,1),%rax
82bc(4): cmp %r14,0x8(%rax)
82c0(6): jle 0x107(%rip)
82c6(4): mov 0x10(%rax),%rax
82ca(4): mov 0x0(%rax,%r14,8),%rdx
82ce(4): mov 0x30(%r15),%rax
82d2(4): lea 0x0(%rdx,%rdx,2),%r8
82d6(8): lea 0x0(,%r8,8),%r13
82de(3): add %r13,%rax
82e1(4): mov 0x8(%rax),%rcx
82e5(4): cmp $0xffffffff,%rcx
82e9(6): jz 0xc7(%rip)
82ef(3): test %rcx,%rcx
82f2(6): jz 0x176(%rip)
82f8(4): movdqu (%rax),%xmm0
82fc(5): movaps %xmm0,0x40(%rsp)
8301(4): mov 0x10(%rax),%rax
8305(5): mov %rax,0x50(%rsp)
830a(5): mov 0x8(%rsp),%rdi
830f(3): mov %r12,%rsi
8312(5): call 0xfffffcee(%rip)
8317(2): test %eax,%eax
8319(2): jnz 0x6d(%rip)
831b(4): mov 0x30(%r15),%rax
831f(6): cmp $0x0,0x8(%rax,%r13,1)
8325(2): jnz 0xffffff8b(%rip)
8327(5): mov 0x50(%rsp),%rdi
832c(5): call 0xffff95a4(%rip)
8331(5): mov $0x1,0x1b(%rsp)
8336(5): jmp 0xffffff7a(%rip)
833b(5): nop 0x0(%rax,%rax,1)
8340(5): lea 0x20(%rsp),%rdi
8345(3): mov %rbp,%rsi
8348(5): call 0xffffe258(%rip)
834d(2): test %al,%al
834f(6): jz 0x131(%rip)
8355(4): mov 0x30(%r15),%rax
8359(6): movdqa 0x20(%rsp),%xmm0
835f(4): movups %xmm0,0x0(%rax,%rbx,1)
8363(5): mov 0x30(%rsp),%rdx
8368(5): mov %rdx,0x10(%rax,%rbx,1)
836d(5): mov 0x10(%rsp),%rbx
8372(5): mov 0x30(%rsp),%rax
8377(6): movdqa 0x20(%rsp),%xmm0
837d(3): movaps %xmm0,(%rbx)
8380(4): mov %rax,0x10(%rbx)
8384(2): xor %eax,%eax
8386(5): mov 0x58(%rsp),%rsi
838b(9): xor $0x28,%rsi
8394(6): jnz 0xf6(%rip)
839a(4): add $0x68,%rsp
839e(1): pop %rbx
839f(1): pop %rbp
83a0(2): pop %r12
83a2(2): pop %r13
83a4(2): pop %r14
83a6(2): pop %r15
83a8(1): ret near (%rsp)
83a9(7): nop 0x0(%rax)
83b0(4): lea 0x0(%rsi,%rbx,1),%rax
83b4(4): add $0x1,%r14
83b8(5): mov $0x1,0x1b(%rsp)
83bd(4): cmp %r14,0x8(%rax)
83c1(6): jnle 0xffffff05(%rip)
83c7(5): lea 0x20(%rsp),%rdi
83cc(3): mov %rbp,%rsi
83cf(5): call 0xffffe1d1(%rip)
83d4(2): test %al,%al
83d6(6): jz 0xaa(%rip)
83dc(5): cmp $0x1,0x1c(%rsp)
83e1(4): mov 0x30(%r15),%rax
83e5(4): lea 0x0(%rax,%rbx,1),%rdx
83e9(6): jz 0xffffff70(%rip)
83ef(5): cmp $0x0,0x1b(%rsp)
83f4(6): jz 0xffffff65(%rip)
83fa(8): mov $0x0,0x8(%rdx)
8402(5): jmp 0xffffff6b(%rip)
8407(9): nop 0x0(%rax,%rax,1)
8410(6): cmp $0x0,0x8(%r12)
8416(6): jz 0xffffff2a(%rip)
841c(5): mov 0x10(%r12),%rcx
8421(3): mov (%rcx),%rcx
8424(4): shl/sal $0x4,%rcx
8428(5): test $0x4,0xa(%rdx,%rcx,1)
842d(6): jnz 0xfffffe49(%rip)
8433(4): shr $0x8,%r8d
8437(3): mov %rbp,%rcx
843a(3): mov %rbp,%rdx
843d(7): and $0x3ff,%r8d
8444(3): mov %rbp,%rsi
8447(3): mov %r15,%rdi
844a(5): call 0xfffff0a6(%rip)
844f(2): test %eax,%eax
8451(6): jnz 0xffffff35(%rip)
8457(3): mov (%r15),%rax
845a(3): add %r13,%rax
845d(5): jmp 0xfffffe19(%rip)
8462(6): nop 0x0(%rax,%rax,1)
8468(3): mov %r15,%rsi
846b(3): mov %r12,%rdi
846e(5): call 0xfffffd72(%rip)
8473(2): test %eax,%eax
8475(6): jz 0xfffffe95(%rip)
847b(5): jmp 0xffffff0b(%rip)
8480(5): mov $0xc,%eax
8485(5): jmp 0xffffff01(%rip)
848a(5): call 0xffff9556(%rip)

"check_arrival_expand_ecl" :
8490(2): push %r15
8492(2): push %r14
8494(3): mov %rdi,%r14
8497(2): push %r13
8499(2): push %r12
849b(3): mov %rsi,%r15
849e(1): push %rbp
849f(1): push %rbx
84a0(3): mov %rdx,%rbp
84a3(2): mov %ecx,%ebx
84a5(4): sub $0x38,%rsp
84a9(4): mov 0x8(%rsi),%r12
84ad(9): mov $0x28,%rax
84b6(5): mov %rax,0x28(%rsp)
84bb(2): xor %eax,%eax
84bd(9): mov $0x0,0x18(%rsp)
84c6(8): lea 0x0(,%r12,8),%rdi
84ce(5): mov %r12,0x10(%rsp)
84d3(5): call 0xffff962d(%rip)
84d8(3): test %rax,%rax
84db(5): mov %rax,0x20(%rsp)
84e0(6): jz 0xfd(%rip)
84e6(3): test %r12,%r12
84e9(6): jle 0x92(%rip)
84ef(5): lea 0x10(%rsp),%r12
84f4(3): xor %r13d,%r13d
84f7(9): nop 0x0(%rax,%rax,1)
8500(4): mov 0x10(%r15),%rax
8504(4): mov 0x0(%rax,%r13,8),%rdx
8508(4): mov 0x30(%r14),%rax
850c(4): lea 0x0(%rdx,%rdx,2),%rcx
8510(4): lea 0x0(%rax,%rcx,8),%rsi
8514(4): mov 0x8(%rsi),%r8
8518(3): test %r8,%r8
851b(6): jle 0x85(%rip)
8521(4): mov 0x10(%rsi),%r10
8525(3): mov (%r14),%r9
8528(2): xor %ecx,%ecx
852a(2): jmp 0xf(%rip)
852c(4): nop 0x0(%rax)
8530(4): add $0x1,%rcx
8534(3): cmp %rcx,%r8
8537(2): jz 0x69(%rip)
8539(4): mov 0x0(%r10,%rcx,8),%rdi
853d(3): mov %rdi,%rax
8540(4): shl/sal $0x4,%rax
8544(3): add %r9,%rax
8547(5): movzx 0x8(%rax),%r11d
854c(3): cmp %r11d,%ebx
854f(2): jnz 0xffffffe1(%rip)
8551(3): cmp (%rax),%rbp
8554(2): jnz 0xffffffdc(%rip)
8556(4): cmp $0xffffffff,%rdi
855a(2): jz 0x46(%rip)
855c(3): mov %ebx,%r8d
855f(3): mov %rbp,%rcx
8562(3): mov %r12,%rsi
8565(3): mov %r14,%rdi
8568(5): call 0xfffff5f8(%rip)
856d(2): test %eax,%eax
856f(2): jnz 0x3d(%rip)
8571(4): add $0x1,%r13
8575(4): cmp %r13,0x8(%r15)
8579(2): jnle 0xffffff87(%rip)
857b(4): mov 0x10(%r15),%rdi
857f(5): call 0xffff9351(%rip)
8584(5): mov 0x20(%rsp),%rax
8589(6): movdqa 0x10(%rsp),%xmm0
858f(4): mov %rax,0x10(%r15)
8593(2): xor %eax,%eax
8595(4): movaps %xmm0,(%r15)
8599(2): jmp 0x25(%rip)
859b(5): nop 0x0(%rax,%rax,1)
85a0(3): mov %r12,%rdi
85a3(5): call 0xfffffa5d(%rip)
85a8(2): test %eax,%eax
85aa(2): jz 0xffffffc7(%rip)
85ac(5): mov 0x20(%rsp),%rdi
85b1(4): mov %eax,0xc(%rsp)
85b5(5): call 0xffff931b(%rip)
85ba(4): mov 0xc(%rsp),%eax
85be(5): mov 0x28(%rsp),%rdx
85c3(9): xor $0x28,%rdx
85cc(2): jnz 0x18(%rip)
85ce(4): add $0x38,%rsp
85d2(1): pop %rbx
85d3(1): pop %rbp
85d4(2): pop %r12
85d6(2): pop %r13
85d8(2): pop %r14
85da(2): pop %r15
85dc(1): ret near (%rsp)
85dd(5): mov $0xc,%eax
85e2(2): jmp 0xffffffdc(%rip)
85e4(5): call 0xffff93fc(%rip)

"re_node_set_add_intersect" :
85f0(4): mov 0x8(%rsi),%r9
85f4(2): xor %eax,%eax
85f6(3): test %r9,%r9
85f9(6): jz 0xbf(%rip)
85ff(4): mov 0x8(%rdx),%r11
8603(3): test %r11,%r11
8606(6): jz 0xb2(%rip)
860c(2): push %r13
860e(2): push %r12
8610(4): lea 0x0(%r9,%r11,1),%rax
8614(1): push %rbp
8615(1): push %rbx
8616(3): mov %rdx,%r12
8619(3): mov %rdi,%rbx
861c(3): mov %rsi,%rbp
861f(4): sub $0x8,%rsp
8623(4): mov 0x8(%rdi),%rcx
8627(3): mov (%rdi),%r13
862a(4): mov 0x10(%rdi),%rdi
862e(4): lea 0x0(%rax,%rcx,1),%rdx
8632(3): cmp %r13,%rdx
8635(6): jnle 0x12b(%rip)
863b(4): lea 0x0(%rcx,%r9,1),%rsi
863f(4): mov 0x10(%rbp),%r13
8643(5): mov 0x10(%r12),%rdx
8648(4): sub $0x1,%r9
864c(4): sub $0x1,%rcx
8650(3): add %r11,%rsi
8653(4): sub $0x1,%r11
8657(5): mov 0x0(%r13,%r9,8),%rax
865c(4): mov 0x0(%rdx,%r11,8),%r8
8660(3): cmp %r8,%rax
8663(2): jz 0x13(%rip)
8665(2): jnl 0x5b(%rip)
8667(4): sub $0x1,%r11
866b(2): js 0x65(%rip)
866d(4): mov 0x0(%rdx,%r11,8),%r8
8671(3): cmp %r8,%rax
8674(2): jnz 0xfffffff1(%rip)
8676(3): test %rcx,%rcx
8679(2): jns 0x11(%rip)
867b(2): jmp 0x1d(%rip)
867d(3): nop (%rax)
8680(4): sub $0x1,%rcx
8684(4): cmp $0xffffffff,%rcx
8688(2): jz 0x10(%rip)
868a(4): mov 0x0(%rdi,%rcx,8),%r10
868e(3): cmp %r8,%r10
8691(2): jnle 0xffffffef(%rip)
8693(3): cmp %r8,%r10
8696(2): jz 0xa(%rip)
8698(4): sub $0x1,%rsi
869c(4): mov %r8,0x0(%rdi,%rsi,8)
86a0(4): sub $0x1,%r9
86a4(2): js 0x2c(%rip)
86a6(4): sub $0x1,%r11
86aa(2): js 0x26(%rip)
86ac(5): mov 0x0(%r13,%r9,8),%rax
86b1(2): jmp 0xffffffbc(%rip)
86b3(5): nop 0x0(%rax,%rax,1)
86b8(2): REP ret near (%rsp)
86ba(6): nop 0x0(%rax,%rax,1)
86c0(4): sub $0x1,%r9
86c4(2): js 0xc(%rip)
86c6(5): mov 0x0(%r13,%r9,8),%rax
86cb(2): jmp 0xffffff95(%rip)
86cd(3): nop (%rax)
86d0(4): mov 0x8(%rbx),%rcx
86d4(4): mov 0x8(%rbp),%rdx
86d8(3): add %rcx,%rdx
86db(5): add 0x8(%r12),%rdx
86e0(4): lea 0xffffffff(%rcx),%rax
86e4(4): lea 0xffffffff(%rdx),%r9
86e8(3): sub %rsi,%rdx
86eb(3): add %rdx,%rcx
86ee(3): test %rdx,%rdx
86f1(4): mov %rcx,0x8(%rbx)
86f5(2): jle 0x48(%rip)
86f7(3): test %rax,%rax
86fa(2): js 0x43(%rip)
86fc(4): nop 0x0(%rax)
8700(4): mov 0x0(%rdi,%r9,8),%r8
8704(4): mov 0x0(%rdi,%rax,8),%rcx
8708(4): lea 0x0(%rax,%rdx,1),%r10
870c(4): lea 0x0(%rdi,%r10,8),%r10
8710(3): cmp %rcx,%r8
8713(2): jle 0x1d(%rip)
8715(4): sub $0x1,%r9
8719(4): sub $0x1,%rdx
871d(3): mov %r8,(%r10)
8720(2): jnz 0xffffffe0(%rip)
8722(2): xor %edx,%edx
8724(2): jmp 0x1d(%rip)
8726(a): nop 0x0(%rax,%rax,1)
8730(4): sub $0x1,%rax
8734(3): mov %rcx,(%r10)
8737(4): cmp $0xffffffff,%rax
873b(2): jnz 0xffffffc5(%rip)
873d(4): shl/sal $0x3,%rdx
8741(4): lea 0x0(%rdi,%rsi,8),%rsi
8745(5): call 0xffff938b(%rip)
874a(2): xor %eax,%eax
874c(4): add $0x8,%rsp
8750(1): pop %rbx
8751(1): pop %rbp
8752(2): pop %r12
8754(2): pop %r13
8756(1): ret near (%rsp)
8757(9): nop 0x0(%rax,%rax,1)
8760(3): add %rax,%r13
8763(8): lea 0x0(,%r13,8),%rsi
876b(5): call 0xffff93f5(%rip)
8770(3): test %rax,%rax
8773(3): mov %rax,%rdi
8776(2): jz 0x1b(%rip)
8778(4): mov %rax,0x10(%rbx)
877c(3): mov %r13,(%rbx)
877f(4): mov 0x8(%rbx),%rcx
8783(4): mov 0x8(%rbp),%r9
8787(5): mov 0x8(%r12),%r11
878c(5): jmp 0xfffffeaf(%rip)
8791(5): mov $0xc,%eax
8796(2): jmp 0xffffffb6(%rip)

"create_token_tree.isra.16" :
87a0(1): push %rbx
87a1(3): mov %rdi,%rbx
87a4(4): sub $0x20,%rsp
87a8(2): mov (%rsi),%eax
87aa(3): cmp $0xf,%eax
87ad(2): jz 0x7b(%rip)
87af(3): movsxd %eax,%r9
87b2(4): lea 0x1(%rax),%r10d
87b6(3): mov (%rdi),%rdi
87b9(3): mov %r9,%rax
87bc(4): shl/sal $0x6,%rax
87c0(4): add $0x8,%rax
87c4(4): shl/sal $0x6,%r9
87c8(3): mov %r10d,(%rsi)
87cb(3): add %rdi,%rax
87ce(4): lea 0x0(%rdi,%r9,1),%rsi
87d2(8): mov $0x0,0x8(%rsi)
87da(4): mov %rdx,0x10(%rsi)
87de(4): lea 0x20(%rsi),%rdi
87e2(4): mov %rcx,0x18(%rsi)
87e6(5): movdqu (%r8),%xmm0
87eb(4): movups %xmm0,0x30(%rsi)
87ef(4): and $0xf3,0x1a(%rdi)
87f3(3): test %rdx,%rdx
87f6(8): mov $0x0,0x20(%rsi)
87fe(8): mov $0x0,0x28(%rsi)
8806(8): mov $0xffffffff,0x40(%rsi)
880e(2): jz 0x5(%rip)
8810(3): mov %rax,(%rdx)
8813(3): test %rcx,%rcx
8816(2): jz 0x5(%rip)
8818(3): mov %rax,(%rcx)
881b(4): add $0x20,%rsp
881f(1): pop %rbx
8820(1): ret near (%rsp)
8821(7): nop 0x0(%rax)
8828(5): mov $0x3c8,%edi
882d(5): mov %r8,0x18(%rsp)
8832(5): mov %rcx,0x10(%rsp)
8837(5): mov %rdx,0x8(%rsp)
883c(4): mov %rsi,(%rsp)
8840(5): call 0xffff92c0(%rip)
8845(3): test %rax,%rax
8848(3): mov %rax,%rdi
884b(2): jz 0x31(%rip)
884d(3): mov (%rbx),%rax
8850(6): mov $0x1,%r10d
8856(3): mov %rdi,(%rbx)
8859(3): xor %r9d,%r9d
885c(5): mov 0x18(%rsp),%r8
8861(5): mov 0x10(%rsp),%rcx
8866(5): mov 0x8(%rsp),%rdx
886b(4): mov (%rsp),%rsi
886f(3): mov %rax,(%rdi)
8872(5): mov $0x8,%eax
8877(5): jmp 0xffffff4d(%rip)
887c(2): xor %eax,%eax
887e(2): jmp 0xffffff9d(%rip)

"duplicate_tree" :
8880(2): push %r14
8882(2): push %r13
8884(4): lea 0x70(%rsi),%r13
8888(2): push %r12
888a(1): push %rbp
888b(7): lea 0x80(%rsi),%r12
8892(1): push %rbx
8893(3): mov %rdi,%rbx
8896(4): sub $0x10,%rsp
889a(3): mov (%rdi),%rbp
889d(9): mov $0x28,%rax
88a6(5): mov %rax,0x8(%rsp)
88ab(2): xor %eax,%eax
88ad(3): mov %rsp,%r14
88b0(4): lea 0x28(%rbx),%r8
88b4(2): xor %ecx,%ecx
88b6(2): xor %edx,%edx
88b8(3): mov %r12,%rsi
88bb(3): mov %r13,%rdi
88be(5): call 0xfffffee2(%rip)
88c3(3): test %rax,%rax
88c6(3): mov %rax,(%r14)
88c9(2): jz 0x53(%rip)
88cb(3): mov %rbp,(%rax)
88ce(3): mov (%r14),%rbp
88d1(4): or $0x4,0x32(%rbp)
88d5(4): mov 0x8(%rbx),%rax
88d9(3): test %rax,%rax
88dc(2): jz 0x14(%rip)
88de(4): lea 0x8(%rbp),%r14
88e2(3): mov %rax,%rbx
88e5(2): jmp 0xffffffcb(%rip)
88e7(9): nop 0x0(%rax,%rax,1)
88f0(2): xor %edx,%edx
88f2(2): jmp 0x9(%rip)
88f4(4): nop 0x0(%rax)
88f8(3): mov %rax,%rbx
88fb(4): mov 0x10(%rbx),%rax
88ff(3): test %rax,%rax
8902(2): jz 0x7(%rip)
8904(3): cmp %rdx,%rax
8907(2): jnz 0x39(%rip)
8909(3): mov (%rbx),%rax
890c(4): mov 0x0(%rbp),%rbp
8910(3): mov %rbx,%rdx
8913(3): test %rax,%rax
8916(2): jnz 0xffffffe2(%rip)
8918(4): mov (%rsp),%rax
891c(5): mov 0x8(%rsp),%rcx
8921(9): xor $0x28,%rcx
892a(2): jnz 0x22(%rip)
892c(4): add $0x10,%rsp
8930(1): pop %rbx
8931(1): pop %rbp
8932(2): pop %r12
8934(2): pop %r13
8936(2): pop %r14
8938(1): ret near (%rsp)
8939(7): nop 0x0(%rax)
8940(4): lea 0x10(%rbp),%r14
8944(3): mov %rax,%rbx
8947(5): jmp 0xffffff69(%rip)
894c(5): call 0xffff9094(%rip)

"lower_subexp" :
8960(2): push %r15
8962(2): push %r14
8964(2): push %r13
8966(2): push %r12
8968(3): mov %rdx,%r13
896b(1): push %rbp
896c(1): push %rbx
896d(4): sub $0x48,%rsp
8971(3): mov (%rsi),%rbx
8974(4): mov 0x8(%rdx),%rbp
8978(9): mov $0x28,%rax
8981(5): mov %rax,0x38(%rsp)
8986(2): xor %eax,%eax
8988(4): test $0x10,0x38(%rsi)
898c(5): mov %rdi,0x18(%rsp)
8991(6): jz 0x177(%rip)
8997(3): test %rbp,%rbp
899a(2): jz 0x76(%rip)
899c(4): mov 0x28(%rdx),%rax
89a0(4): cmp $0x3f,%rax
89a4(6): jnle 0x139(%rip)
89aa(7): mov 0xa0(%rbx),%rdx
89b1(4): bt %rax,%rdx
89b5(6): jnb 0x128(%rip)
89bb(4): lea 0x70(%rbx),%rax
89bf(5): lea 0x20(%rsp),%r14
89c4(4): sub $0xffffff80,%rbx
89c8(2): xor %ecx,%ecx
89ca(2): xor %edx,%edx
89cc(3): mov %rbx,%rsi
89cf(3): mov %rax,%r15
89d2(3): mov %r14,%r8
89d5(3): mov %rax,%rdi
89d8(5): mov $0x8,0x28(%rsp)
89dd(5): mov %rax,0x8(%rsp)
89e2(5): call 0xfffffdbe(%rip)
89e7(3): mov %r15,%rdi
89ea(3): mov %r14,%r8
89ed(2): xor %ecx,%ecx
89ef(2): xor %edx,%edx
89f1(3): mov %rbx,%rsi
89f4(3): mov %rax,%r12
89f7(5): mov $0x9,0x28(%rsp)
89fc(5): call 0xfffffda4(%rip)
8a01(3): mov %rax,%r15
8a04(5): jmp 0x159(%rip)
8a09(7): nop 0x0(%rax)
8a10(4): lea 0x70(%rbx),%rax
8a14(5): lea 0x20(%rsp),%r14
8a19(4): sub $0xffffff80,%rbx
8a1d(2): xor %ecx,%ecx
8a1f(2): xor %edx,%edx
8a21(3): mov %rbx,%rsi
8a24(3): mov %rax,%r15
8a27(3): mov %r14,%r8
8a2a(3): mov %rax,%rdi
8a2d(5): mov $0x8,0x28(%rsp)
8a32(5): mov %rax,0x8(%rsp)
8a37(5): call 0xfffffd69(%rip)
8a3c(3): mov %r15,%rdi
8a3f(3): mov %r14,%r8
8a42(2): xor %ecx,%ecx
8a44(2): xor %edx,%edx
8a46(3): mov %rbx,%rsi
8a49(3): mov %rax,%r12
8a4c(5): mov $0x9,0x28(%rsp)
8a51(5): call 0xfffffd4f(%rip)
8a56(3): mov %rax,%r11
8a59(3): mov %rax,%r15
8a5c(5): mov 0x8(%rsp),%rdi
8a61(3): mov %r14,%r8
8a64(3): mov %r11,%rcx
8a67(3): mov %r12,%rdx
8a6a(3): mov %rbx,%rsi
8a6d(5): mov $0x10,0x28(%rsp)
8a72(5): mov %r11,0x10(%rsp)
8a77(5): call 0xfffffd29(%rip)
8a7c(3): test %rax,%rax
8a7f(3): mov %rax,%rbp
8a82(6): jz 0xfe(%rip)
8a88(5): mov 0x10(%rsp),%r11
8a8d(3): test %r11,%r11
8a90(6): jz 0xf0(%rip)
8a96(3): test %r12,%r12
8a99(6): jz 0xe7(%rip)
8a9f(3): test %r15,%r15
8aa2(6): jz 0xde(%rip)
8aa8(4): mov 0x28(%r13),%rax
8aac(4): mov %rax,0x28(%r15)
8ab0(5): mov %rax,0x28(%r12)
8ab5(5): movzx 0x32(%r13),%eax
8aba(5): movzx 0x32(%r15),%edx
8abf(3): and $0x8,%eax
8ac2(3): and $0xf7,%edx
8ac5(2): mov %eax,%ecx
8ac7(2): or %ecx,%edx
8ac9(4): mov %dl,0x32(%r15)
8acd(6): movzx 0x32(%r12),%eax
8ad3(3): and $0xf7,%eax
8ad6(2): or %ecx,%eax
8ad8(5): mov %al,0x32(%r12)
8add(5): mov 0x38(%rsp),%rdi
8ae2(9): xor $0x28,%rdi
8aeb(3): mov %rbp,%rax
8aee(6): jnz 0xa4(%rip)
8af4(4): add $0x48,%rsp
8af8(1): pop %rbx
8af9(1): pop %rbp
8afa(2): pop %r12
8afc(2): pop %r13
8afe(2): pop %r14
8b00(2): pop %r15
8b02(1): ret near (%rsp)
8b03(5): nop 0x0(%rax,%rax,1)
8b08(4): lea 0x70(%rbx),%rax
8b0c(5): lea 0x20(%rsp),%r14
8b11(4): sub $0xffffff80,%rbx
8b15(2): xor %ecx,%ecx
8b17(2): xor %edx,%edx
8b19(3): mov %rbx,%rsi
8b1c(3): mov %rax,%r15
8b1f(3): mov %r14,%r8
8b22(3): mov %rax,%rdi
8b25(5): mov $0x8,0x28(%rsp)
8b2a(5): mov %rax,0x8(%rsp)
8b2f(5): call 0xfffffc71(%rip)
8b34(2): xor %ecx,%ecx
8b36(2): xor %edx,%edx
8b38(3): mov %r15,%rdi
8b3b(3): mov %r14,%r8
8b3e(3): mov %rbx,%rsi
8b41(3): mov %rax,%r12
8b44(5): mov $0x9,0x28(%rsp)
8b49(5): call 0xfffffc57(%rip)
8b4e(3): test %rbp,%rbp
8b51(3): mov %rax,%r15
8b54(3): mov %rax,%r11
8b57(6): jz 0xffffff05(%rip)
8b5d(5): mov 0x8(%rsp),%rdi
8b62(3): mov %r14,%r8
8b65(3): mov %r15,%rcx
8b68(3): mov %rbp,%rdx
8b6b(3): mov %rbx,%rsi
8b6e(5): mov $0x10,0x28(%rsp)
8b73(5): call 0xfffffc2d(%rip)
8b78(3): mov %rax,%r11
8b7b(5): jmp 0xfffffee1(%rip)
8b80(5): mov 0x18(%rsp),%rax
8b85(2): xor %ebp,%ebp
8b87(6): mov $0xc,(%rax)
8b8d(5): jmp 0xffffff50(%rip)
8b92(5): call 0xffff8e4e(%rip)

"lower_subexps" :
8ba0(1): push %rbp
8ba1(1): push %rbx
8ba2(3): mov %rdi,%rbp
8ba5(3): mov %rsi,%rbx
8ba8(4): sub $0x18,%rsp
8bac(4): mov 0x8(%rsi),%rdx
8bb0(9): mov $0x28,%rax
8bb9(5): mov %rax,0x8(%rsp)
8bbe(2): xor %eax,%eax
8bc0(8): mov $0x0,0x4(%rsp)
8bc8(3): test %rdx,%rdx
8bcb(2): jz 0x8(%rip)
8bcd(4): cmp $0x11,0x30(%rdx)
8bd1(2): jz 0x4f(%rip)
8bd3(4): mov 0x10(%rbx),%rdx
8bd7(3): test %rdx,%rdx
8bda(2): jz 0x8(%rip)
8bdc(4): cmp $0x11,0x30(%rdx)
8be0(2): jz 0x20(%rip)
8be2(5): mov 0x8(%rsp),%rcx
8be7(9): xor $0x28,%rcx
8bf0(4): mov 0x4(%rsp),%eax
8bf4(2): jnz 0x47(%rip)
8bf6(4): add $0x18,%rsp
8bfa(1): pop %rbx
8bfb(1): pop %rbp
8bfc(1): ret near (%rsp)
8bfd(3): nop (%rax)
8c00(5): lea 0x4(%rsp),%rdi
8c05(3): mov %rbp,%rsi
8c08(5): call 0xfffffd58(%rip)
8c0d(3): test %rax,%rax
8c10(4): mov %rax,0x10(%rbx)
8c14(2): jz 0xffffffce(%rip)
8c16(3): mov %rbx,(%rax)
8c19(2): jmp 0xffffffc9(%rip)
8c1b(5): nop 0x0(%rax,%rax,1)
8c20(5): lea 0x4(%rsp),%rdi
8c25(3): mov %rbp,%rsi
8c28(5): call 0xfffffd38(%rip)
8c2d(3): test %rax,%rax
8c30(4): mov %rax,0x8(%rbx)
8c34(2): jz 0xffffff9f(%rip)
8c36(3): mov %rbx,(%rax)
8c39(2): jmp 0xffffff9a(%rip)
8c3b(5): call 0xffff8da5(%rip)

"re_node_set_init_copy" :
8c40(2): push %r12
8c42(1): push %rbp
8c43(1): push %rbx
8c44(4): mov 0x8(%rsi),%rax
8c48(4): mov %rax,0x8(%rdi)
8c4c(4): mov 0x8(%rsi),%r12
8c50(3): test %r12,%r12
8c53(2): jle 0x3d(%rip)
8c55(3): mov %rdi,%rbx
8c58(3): mov %rax,(%rdi)
8c5b(8): lea 0x0(,%rax,8),%rdi
8c63(3): mov %rsi,%rbp
8c66(5): call 0xffff8e9a(%rip)
8c6b(3): test %rax,%rax
8c6e(4): mov %rax,0x10(%rbx)
8c72(2): jz 0x3e(%rip)
8c74(4): mov 0x10(%rbp),%rsi
8c78(8): lea 0x0(,%r12,8),%rdx
8c80(3): mov %rax,%rdi
8c83(5): call 0xffff8e4d(%rip)
8c88(2): xor %eax,%eax
8c8a(1): pop %rbx
8c8b(1): pop %rbp
8c8c(2): pop %r12
8c8e(1): ret near (%rsp)
8c8f(1): nop 
8c90(4): pxor %xmm0,%xmm0
8c94(8): mov $0x0,0x10(%rdi)
8c9c(2): xor %eax,%eax
8c9e(3): movups %xmm0,(%rdi)
8ca1(1): pop %rbx
8ca2(1): pop %rbp
8ca3(2): pop %r12
8ca5(1): ret near (%rsp)
8ca6(a): nop 0x0(%rax,%rax,1)
8cb0(8): mov $0x0,0x8(%rbx)
8cb8(7): mov $0x0,(%rbx)
8cbf(5): mov $0xc,%eax
8cc4(2): jmp 0xffffffc6(%rip)

"re_node_set_init_union" :
8cd0(3): test %rsi,%rsi
8cd3(2): push %r14
8cd5(2): push %r13
8cd7(2): push %r12
8cd9(1): push %rbp
8cda(1): push %rbx
8cdb(6): jz 0xaa(%rip)
8ce1(3): test %rdx,%rdx
8ce4(4): mov 0x8(%rsi),%r13
8ce8(6): jz 0x98(%rip)
8cee(3): test %r13,%r13
8cf1(6): jle 0x8f(%rip)
8cf7(4): mov 0x8(%rdx),%r14
8cfb(3): test %r14,%r14
8cfe(6): jle 0xb5(%rip)
8d04(3): mov %rdi,%r12
8d07(5): lea 0x0(%r13,%r14,1),%rdi
8d0c(3): mov %rdx,%rbx
8d0f(3): mov %rsi,%rbp
8d12(4): mov %rdi,(%r12)
8d16(4): shl/sal $0x3,%rdi
8d1a(5): call 0xffff8de6(%rip)
8d1f(3): test %rax,%rax
8d22(5): mov %rax,0x10(%r12)
8d27(6): jz 0xf1(%rip)
8d2d(4): mov 0x10(%rbx),%r9
8d31(4): mov 0x10(%rbp),%r8
8d35(2): xor %ebx,%ebx
8d37(2): xor %ecx,%ecx
8d39(2): xor %esi,%esi
8d3b(2): jmp 0x23(%rip)
8d3d(3): nop (%rax)
8d40(4): setz %dil
8d44(5): mov %rdx,0xfffffff8(%rax,%rbx,8)
8d49(4): add $0x1,%rsi
8d4d(4): movzx %dil,%edi
8d51(3): add %rdi,%rcx
8d54(3): cmp %rsi,%r13
8d57(2): jle 0x69(%rip)
8d59(3): cmp %rcx,%r14
8d5c(2): jle 0x7c(%rip)
8d5e(4): mov 0x0(%r8,%rsi,8),%rdx
8d62(4): mov 0x0(%r9,%rcx,8),%rdi
8d66(4): add $0x1,%rbx
8d6a(3): cmp %rdi,%rdx
8d6d(2): jle 0xffffffd3(%rip)
8d6f(4): add $0x1,%rcx
8d73(5): mov %rdi,0xfffffff8(%rax,%rbx,8)
8d78(2): jmp 0xffffffdc(%rip)
8d7a(6): nop 0x0(%rax,%rax,1)
8d80(3): test %r13,%r13
8d83(2): jnle 0x30(%rip)
8d85(3): test %rdx,%rdx
8d88(2): jz 0x9(%rip)
8d8a(5): cmp $0x0,0x8(%rdx)
8d8f(2): jnle 0x21(%rip)
8d91(4): pxor %xmm0,%xmm0
8d95(8): mov $0x0,0x10(%rdi)
8d9d(2): xor %eax,%eax
8d9f(3): movaps %xmm0,(%rdi)
8da2(1): pop %rbx
8da3(1): pop %rbp
8da4(2): pop %r12
8da6(2): pop %r13
8da8(2): pop %r14
8daa(1): ret near (%rsp)
8dab(5): nop 0x0(%rax,%rax,1)
8db0(3): mov %rdx,%rsi
8db3(1): pop %rbx
8db4(1): pop %rbp
8db5(2): pop %r12
8db7(2): pop %r13
8db9(2): pop %r14
8dbb(5): jmp 0xfffffe85(%rip)
8dc0(3): cmp %rcx,%r14
8dc3(2): jnle 0x35(%rip)
8dc5(5): mov %rbx,0x8(%r12)
8dca(2): xor %eax,%eax
8dcc(1): pop %rbx
8dcd(1): pop %rbp
8dce(2): pop %r12
8dd0(2): pop %r13
8dd2(2): pop %r14
8dd4(1): ret near (%rsp)
8dd5(3): nop (%rax)
8dd8(3): sub %rsi,%r13
8ddb(4): lea 0x0(%rax,%rbx,8),%rdi
8ddf(4): lea 0x0(%r8,%rsi,8),%rsi
8de3(8): lea 0x0(,%r13,8),%rdx
8deb(3): add %r13,%rbx
8dee(5): call 0xffff8ce2(%rip)
8df3(2): jmp 0xffffffd2(%rip)
8df5(3): nop (%rax)
8df8(3): sub %rcx,%r14
8dfb(4): lea 0x0(%rax,%rbx,8),%rdi
8dff(4): lea 0x0(%r9,%rcx,8),%rsi
8e03(8): lea 0x0(,%r14,8),%rdx
8e0b(3): add %r14,%rbx
8e0e(5): call 0xffff8cc2(%rip)
8e13(2): jmp 0xffffffb2(%rip)
8e15(3): nop (%rax)
8e18(5): mov $0xc,%eax
8e1d(5): jmp 0xffffff85(%rip)

"re_acquire_state_context" :
8e30(2): push %r15
8e32(2): push %r14
8e34(2): push %r13
8e36(2): push %r12
8e38(1): push %rbp
8e39(1): push %rbx
8e3a(4): sub $0x28,%rsp
8e3e(4): mov 0x8(%rdx),%r10
8e42(3): test %r10,%r10
8e45(6): jz 0x28a(%rip)
8e4b(3): mov %ecx,%r8d
8e4e(3): test %r10,%r10
8e51(4): lea 0x0(%r8,%r10,1),%r12
8e55(2): jle 0x17(%rip)
8e57(4): mov 0x10(%rdx),%rax
8e5b(4): lea 0x0(%rax,%r10,8),%r10
8e5f(1): nop 
8e60(3): add (%rax),%r12
8e63(4): add $0x8,%rax
8e67(3): cmp %rax,%r10
8e6a(2): jnz 0xfffffff6(%rip)
8e6c(7): mov 0x88(%rsi),%rax
8e73(3): mov %rdx,%rbp
8e76(4): mov %ecx,0x4(%rsp)
8e7a(3): mov %rsi,%r13
8e7d(5): mov %rdi,0x18(%rsp)
8e82(3): and %r12,%rax
8e85(4): lea 0x0(%rax,%rax,2),%rdx
8e89(4): mov 0x40(%rsi),%rax
8e8d(4): lea 0x0(%rax,%rdx,8),%rax
8e91(3): mov (%rax),%r11
8e94(3): test %r11,%r11
8e97(2): jle 0x59(%rip)
8e99(4): mov 0x10(%rax),%rbx
8e9d(3): xor %r10d,%r10d
8ea0(3): mov %ecx,%r9d
8ea3(2): jmp 0xe(%rip)
8ea5(3): nop (%rax)
8ea8(4): add $0x1,%r10
8eac(3): cmp %r11,%r10
8eaf(2): jz 0x41(%rip)
8eb1(4): mov 0x0(%rbx,%r10,8),%r14
8eb5(3): cmp %r12,(%r14)
8eb8(2): jnz 0xfffffff0(%rip)
8eba(5): movzx 0x68(%r14),%eax
8ebf(3): and $0xf,%eax
8ec2(3): cmp %r9d,%eax
8ec5(2): jnz 0xffffffe3(%rip)
8ec7(4): mov 0x50(%r14),%rdi
8ecb(3): test %rdi,%rdi
8ece(2): jz 0xffffffda(%rip)
8ed0(3): mov %rbp,%rsi
8ed3(5): call 0xffffebad(%rip)
8ed8(2): test %al,%al
8eda(2): jz 0xffffffce(%rip)
8edc(4): add $0x28,%rsp
8ee0(3): mov %r14,%rax
8ee3(1): pop %rbx
8ee4(1): pop %rbp
8ee5(2): pop %r12
8ee7(2): pop %r13
8ee9(2): pop %r14
8eeb(2): pop %r15
8eed(1): ret near (%rsp)
8eee(2): nop 
8ef0(5): mov $0x1,%esi
8ef5(5): mov $0x70,%edi
8efa(5): call 0xffff8bb6(%rip)
8eff(3): test %rax,%rax
8f02(3): mov %rax,%r14
8f05(6): jz 0x141(%rip)
8f0b(4): lea 0x8(%rax),%rax
8f0f(3): mov %rbp,%rsi
8f12(3): mov %rax,%rdi
8f15(3): mov %rax,%rbx
8f18(5): call 0xfffffd28(%rip)
8f1d(2): test %eax,%eax
8f1f(6): jnz 0x1be(%rip)
8f25(5): movzx 0x68(%r14),%eax
8f2a(5): movzx 0x4(%rsp),%edx
8f2f(4): mov %rbx,0x50(%r14)
8f33(3): and $0xf,%edx
8f36(3): and $0xf0,%eax
8f39(2): or %edx,%eax
8f3b(5): cmp $0x0,0x8(%rbp)
8f40(4): mov %al,0x68(%r14)
8f44(6): jle 0xe4(%rip)
8f4a(4): lea 0x18(%r14),%rcx
8f4e(3): xor %r15d,%r15d
8f51(5): mov %r12,0x10(%rsp)
8f56(3): xor %r10d,%r10d
8f59(3): mov %r13,%r12
8f5c(3): mov %r15,%r13
8f5f(5): mov %rcx,0x8(%rsp)
8f64(3): mov %rbx,%r15
8f67(9): nop 0x0(%rax,%rax,1)
8f70(4): mov 0x10(%rbp),%rax
8f74(4): mov 0x0(%rax,%r13,8),%rax
8f78(4): shl/sal $0x4,%rax
8f7c(4): add (%r12),%rax
8f80(4): movzx 0x8(%rax),%esi
8f84(3): mov 0x8(%rax),%ebx
8f87(3): shr $0x8,%ebx
8f8a(5): and $0x3ff,%bx
8f8f(3): cmp $0x1,%esi
8f92(3): movzx %bx,%edi
8f95(2): jnz 0x6(%rip)
8f97(2): test %edi,%edi
8f99(2): jz 0x79(%rip)
8f9b(5): movzx 0x68(%r14),%edx
8fa0(4): movzx 0xa(%rax),%eax
8fa4(3): mov %edx,%r9d
8fa7(3): shr $0x4,%al
8faa(3): and $0xdf,%edx
8fad(4): shr $0x5,%r9b
8fb1(3): or %r9d,%eax
8fb4(3): and $0x1,%eax
8fb7(3): shl/sal $0x5,%eax
8fba(2): or %edx,%eax
8fbc(3): cmp $0x2,%esi
8fbf(4): mov %al,0x68(%r14)
8fc3(6): jz 0xcd(%rip)
8fc9(3): cmp $0x4,%esi
8fcc(2): jnz 0x9(%rip)
8fce(3): or $0x40,%eax
8fd1(4): mov %al,0x68(%r14)
8fd5(2): test %edi,%edi
8fd7(2): jz 0x3b(%rip)
8fd9(4): cmp 0x50(%r14),%r15
8fdd(6): jz 0xc3(%rip)
8fe3(3): test $0x1,%bl
8fe6(2): jz 0x7a(%rip)
8fe8(5): test $0x1,0x4(%rsp)
8fed(2): jz 0xb(%rip)
8fef(3): test $0x2,%bl
8ff2(2): jz 0x7a(%rip)
8ff4(4): nop 0x0(%rax)
8ff8(3): mov %r13,%rdx
8ffb(3): sub %r10,%rdx
8ffe(2): js 0x10(%rip)
9000(5): mov 0x8(%rsp),%rsi
9005(4): lea 0x10(%r14),%rdi
9009(5): call 0xffffec57(%rip)
900e(4): add $0x1,%r10
9012(4): add $0x1,%r13
9016(4): cmp 0x8(%rbp),%r13
901a(6): jl 0xffffff56(%rip)
9020(3): mov %r12,%r13
9023(5): mov 0x10(%rsp),%r12
9028(3): mov %r12,%rdx
902b(3): mov %r14,%rsi
902e(3): mov %r13,%rdi
9031(5): call 0xffffd69f(%rip)
9036(2): test %eax,%eax
9038(6): jz 0xfffffea4(%rip)
903e(3): mov %r14,%rdi
9041(5): call 0xffffe72f(%rip)
9046(5): mov 0x18(%rsp),%rax
904b(3): xor %r14d,%r14d
904e(6): mov $0xc,(%rax)
9054(5): jmp 0xfffffe88(%rip)
9059(7): nop 0x0(%rax)
9060(3): test $0x2,%bl
9063(2): jz 0x9(%rip)
9065(5): test $0x1,0x4(%rsp)
906a(2): jnz 0xffffff8e(%rip)
906c(3): test $0x10,%bl
906f(2): jz 0x9(%rip)
9071(5): test $0x2,0x4(%rsp)
9076(2): jz 0xffffff82(%rip)
9078(3): and $0x40,%ebx
907b(2): jz 0xffffff97(%rip)
907d(5): test $0x4,0x4(%rsp)
9082(2): jnz 0xffffff90(%rip)
9084(5): jmp 0xffffff74(%rip)
9089(7): nop 0x0(%rax)
9090(3): or $0x10,%eax
9093(4): mov %al,0x68(%r14)
9097(5): jmp 0xffffff3e(%rip)
909c(4): nop 0x0(%rax)
90a0(5): mov $0x18,%edi
90a5(5): call 0xffff8a5b(%rip)
90aa(3): test %rax,%rax
90ad(4): mov %rax,0x50(%r14)
90b1(2): jz 0xffffff8d(%rip)
90b3(3): mov %rbp,%rsi
90b6(3): mov %rax,%rdi
90b9(5): call 0xfffffb87(%rip)
90be(2): test %eax,%eax
90c0(2): jnz 0xffffff86(%rip)
90c2(5): or $0x80,0x68(%r14)
90c7(3): xor %r10d,%r10d
90ca(5): jmp 0xffffff19(%rip)
90cf(6): mov $0x0,(%rdi)
90d5(3): xor %r14d,%r14d
90d8(5): jmp 0xfffffe04(%rip)
90dd(3): mov %r14,%rdi
90e0(5): call 0xffff87f0(%rip)
90e5(5): jmp 0xffffff61(%rip)

"re_acquire_state" :
90f0(2): push %r15
90f2(2): push %r14
90f4(2): push %r13
90f6(2): push %r12
90f8(1): push %rbp
90f9(1): push %rbx
90fa(4): sub $0x8,%rsp
90fe(4): mov 0x8(%rdx),%rbp
9102(3): test %rbp,%rbp
9105(6): jz 0x1db(%rip)
910b(3): test %rbp,%rbp
910e(2): jle 0x1e(%rip)
9110(4): mov 0x10(%rdx),%rax
9114(4): lea 0x0(%rax,%rbp,8),%rcx
9118(8): nop 0x0(%rax,%rax,1)
9120(3): add (%rax),%rbp
9123(4): add $0x8,%rax
9127(3): cmp %rax,%rcx
912a(2): jnz 0xfffffff6(%rip)
912c(7): mov 0x88(%rsi),%rax
9133(3): mov %rdx,%r14
9136(3): mov %rsi,%r12
9139(3): mov %rdi,%r13
913c(3): and %rbp,%rax
913f(4): lea 0x0(%rax,%rax,2),%rdx
9143(4): mov 0x40(%rsi),%rax
9147(4): lea 0x0(%rax,%rdx,8),%rax
914b(3): mov (%rax),%r10
914e(3): test %r10,%r10
9151(2): jle 0x35(%rip)
9153(4): mov 0x10(%rax),%r11
9157(3): xor %r9d,%r9d
915a(6): nop 0x0(%rax,%rax,1)
9160(4): mov 0x0(%r11,%r9,8),%rbx
9164(3): cmp %rbp,(%rbx)
9167(2): jnz 0x16(%rip)
9169(4): lea 0x8(%rbx),%rdi
916d(3): mov %r14,%rsi
9170(5): call 0xffffe910(%rip)
9175(2): test %al,%al
9177(6): jnz 0x108(%rip)
917d(4): add $0x1,%r9
9181(3): cmp %r9,%r10
9184(2): jnz 0xffffffdc(%rip)
9186(5): mov $0x1,%esi
918b(5): mov $0x70,%edi
9190(5): call 0xffff8920(%rip)
9195(3): test %rax,%rax
9198(3): mov %rax,%rbx
919b(6): jz 0x12d(%rip)
91a1(4): lea 0x8(%rax),%r15
91a5(3): mov %r14,%rsi
91a8(3): mov %r15,%rdi
91ab(5): call 0xfffffa95(%rip)
91b0(2): test %eax,%eax
91b2(6): jnz 0x10e(%rip)
91b8(4): mov 0x8(%r14),%rax
91bc(4): mov %r15,0x50(%rbx)
91c0(3): test %rax,%rax
91c3(6): jle 0xaa(%rip)
91c9(4): mov 0x10(%r14),%rsi
91cd(4): mov (%r12),%r8
91d1(4): lea 0x0(%rsi,%rax,8),%r9
91d5(2): jmp 0x4f(%rip)
91d7(9): nop 0x0(%rax,%rax,1)
91e0(4): movzx 0x68(%rbx),%ecx
91e4(4): movzx 0xa(%rax),%edx
91e8(3): mov %ecx,%r10d
91eb(3): shr $0x4,%dl
91ee(3): and $0xdf,%ecx
91f1(4): shr $0x5,%r10b
91f5(3): or %r10d,%edx
91f8(3): and $0x1,%edx
91fb(3): shl/sal $0x5,%edx
91fe(2): or %ecx,%edx
9200(3): cmp $0x2,%edi
9203(3): mov %dl,0x68(%rbx)
9206(6): jz 0x92(%rip)
920c(3): cmp $0x4,%edi
920f(6): jnz 0x99(%rip)
9215(3): or $0x40,%edx
9218(3): mov %dl,0x68(%rbx)
921b(4): add $0x8,%rsi
921f(3): cmp %rsi,%r9
9222(2): jz 0x4b(%rip)
9224(3): mov (%rsi),%rax
9227(4): shl/sal $0x4,%rax
922b(3): add %r8,%rax
922e(4): movzx 0x8(%rax),%edi
9232(3): cmp $0x1,%edi
9235(2): jnz 0xffffffab(%rip)
9237(7): test $0x3ff00,0x8(%rax)
923e(2): jz 0xffffffdd(%rip)
9240(4): movzx 0x68(%rbx),%edx
9244(4): movzx 0xa(%rax),%eax
9248(2): mov %edx,%ecx
924a(3): shr $0x4,%al
924d(3): and $0xdf,%edx
9250(3): shr $0x5,%cl
9253(2): or %ecx,%eax
9255(3): and $0x1,%eax
9258(3): shl/sal $0x5,%eax
925b(2): or %edx,%eax
925d(3): mov %al,0x68(%rbx)
9260(4): add $0x8,%rsi
9264(4): or $0x80,0x68(%rbx)
9268(3): cmp %rsi,%r9
926b(2): jnz 0xffffffb9(%rip)
926d(3): mov %rbp,%rdx
9270(3): mov %rbx,%rsi
9273(3): mov %r12,%rdi
9276(5): call 0xffffd45a(%rip)
927b(2): test %eax,%eax
927d(2): jnz 0x57(%rip)
927f(4): add $0x8,%rsp
9283(3): mov %rbx,%rax
9286(1): pop %rbx
9287(1): pop %rbp
9288(2): pop %r12
928a(2): pop %r13
928c(2): pop %r14
928e(2): pop %r15
9290(1): ret near (%rsp)
9291(7): nop 0x0(%rax)
9298(3): or $0x10,%edx
929b(3): mov %dl,0x68(%rbx)
929e(5): jmp 0xffffff7d(%rip)
92a3(5): nop 0x0(%rax,%rax,1)
92a8(3): cmp $0xc,%edi
92ab(2): jz 0xffffffb5(%rip)
92ad(7): test $0x3ff00,0x8(%rax)
92b4(6): jz 0xffffff67(%rip)
92ba(2): jmp 0xffffffa6(%rip)
92bc(4): nop 0x0(%rax)
92c0(3): mov %rbx,%rdi
92c3(5): call 0xffff860d(%rip)
92c8(8): mov $0xc,0x0(%r13)
92d0(2): xor %ebx,%ebx
92d2(2): jmp 0xffffffad(%rip)
92d4(3): mov %rbx,%rdi
92d7(5): call 0xffffe499(%rip)
92dc(2): jmp 0xffffffec(%rip)
92de(2): nop 
92e0(6): mov $0x0,(%rdi)
92e6(2): xor %ebx,%ebx
92e8(2): jmp 0xffffff97(%rip)

"merge_state_array" :
92f0(2): push %r15
92f2(2): push %r14
92f4(2): push %r13
92f6(2): push %r12
92f8(1): push %rbp
92f9(1): push %rbx
92fa(4): sub $0x48,%rsp
92fe(9): mov $0x28,%rax
9307(5): mov %rax,0x38(%rsp)
930c(2): xor %eax,%eax
930e(3): test %rcx,%rcx
9311(6): jle 0x95(%rip)
9317(5): lea 0x1c(%rsp),%rax
931c(3): mov %rdi,%r14
931f(3): mov %rsi,%rbx
9322(3): mov %rdx,%r12
9325(3): mov %rcx,%rbp
9328(3): xor %r15d,%r15d
932b(5): lea 0x20(%rsp),%r13
9330(5): mov %rax,0x8(%rsp)
9335(2): jmp 0x57(%rip)
9337(9): nop 0x0(%rax,%rax,1)
9340(3): test %rdx,%rdx
9343(2): jz 0x40(%rip)
9345(4): add $0x8,%rdx
9349(4): add $0x8,%rsi
934d(3): mov %r13,%rdi
9350(5): call 0xfffff980(%rip)
9355(2): test %eax,%eax
9357(4): mov %eax,0x1c(%rsp)
935b(2): jnz 0x4d(%rip)
935d(5): mov 0x8(%rsp),%rdi
9362(3): mov %r13,%rdx
9365(3): mov %r14,%rsi
9368(5): call 0xfffffd88(%rip)
936d(5): mov 0x30(%rsp),%rdi
9372(4): mov %rax,0x0(%rbx,%r15,8)
9376(5): call 0xffff855a(%rip)
937b(4): mov 0x1c(%rsp),%eax
937f(2): test %eax,%eax
9381(2): jnz 0x27(%rip)
9383(4): add $0x1,%r15
9387(3): cmp %r15,%rbp
938a(2): jz 0x1c(%rip)
938c(4): mov 0x0(%rbx,%r15,8),%rsi
9390(4): mov 0x0(%r12,%r15,8),%rdx
9394(3): test %rsi,%rsi
9397(2): jnz 0xffffffa9(%rip)
9399(4): mov %rdx,0x0(%rbx,%r15,8)
939d(4): add $0x1,%r15
93a1(3): cmp %r15,%rbp
93a4(2): jnz 0xffffffe8(%rip)
93a6(2): xor %eax,%eax
93a8(5): mov 0x38(%rsp),%rcx
93ad(9): xor $0x28,%rcx
93b6(2): jnz 0x11(%rip)
93b8(4): add $0x48,%rsp
93bc(1): pop %rbx
93bd(1): pop %rbp
93be(2): pop %r12
93c0(2): pop %r13
93c2(2): pop %r14
93c4(2): pop %r15
93c6(1): ret near (%rsp)
93c7(5): call 0xffff8619(%rip)

"expand_bkref_cache" :
93d0(2): push %r15
93d2(2): push %r14
93d4(2): push %r13
93d6(2): push %r12
93d8(3): mov %rdx,%r12
93db(1): push %rbp
93dc(1): push %rbx
93dd(3): mov %rdi,%rbx
93e0(3): mov %rsi,%rbp
93e3(2): xor %esi,%esi
93e5(4): sub $0x78,%rsp
93e9(7): mov 0xc8(%rdi),%rdi
93f0(9): mov $0x28,%rax
93f9(5): mov %rax,0x68(%rsp)
93fe(2): xor %eax,%eax
9400(5): mov %rcx,0x20(%rsp)
9405(5): mov %r8d,0x2c(%rsp)
940a(3): mov %rdi,%rdx
940d(3): cmp %rdx,%rsi
9410(2): jnl 0x57(%rip)
9412(4): lea 0x0(%rsi,%rdx,1),%rax
9416(7): mov 0xd8(%rbx),%r8
941d(3): mov %rax,%rcx
9420(4): shr $0x3f,%rcx
9424(3): add %rax,%rcx
9427(3): sar $0x1,%rcx
942a(4): lea 0x0(%rcx,%rcx,4),%rax
942e(5): cmp 0x8(%r8,%rax,8),%r12
9433(2): jle 0x2f(%rip)
9435(5): jmp 0x83(%rip)
943a(6): nop 0x0(%rax,%rax,1)
9440(4): lea 0x0(%rsi,%rcx,1),%rdx
9444(3): mov %rdx,%rax
9447(4): shr $0x3f,%rax
944b(3): add %rdx,%rax
944e(3): sar $0x1,%rax
9451(4): lea 0x0(%rax,%rax,4),%rdx
9455(3): mov %rax,%r9
9458(5): cmp 0x8(%r8,%rdx,8),%r12
945d(2): jnle 0x63(%rip)
945f(3): mov %rax,%rcx
9462(3): cmp %rcx,%rsi
9465(2): jl 0xffffffdb(%rip)
9467(3): cmp %rsi,%rdi
946a(2): jle 0x23(%rip)
946c(7): mov 0xd8(%rbx),%rcx
9473(4): lea 0x0(%rsi,%rsi,4),%rax
9477(4): shl/sal $0x3,%rax
947b(5): cmp %r12,0x8(%rcx,%rax,1)
9480(5): mov %rax,0x30(%rsp)
9485(2): jnz 0x8(%rip)
9487(4): cmp $0xffffffff,%rsi
948b(2): jnz 0x45(%rip)
948d(2): xor %eax,%eax
948f(5): mov 0x68(%rsp),%rbx
9494(9): xor $0x28,%rbx
949d(6): jnz 0x2cc(%rip)
94a3(4): add $0x78,%rsp
94a7(1): pop %rbx
94a8(1): pop %rbp
94a9(2): pop %r12
94ab(2): pop %r13
94ad(2): pop %r14
94af(2): pop %r15
94b1(1): ret near (%rsp)
94b2(6): nop 0x0(%rax,%rax,1)
94b8(3): mov %rcx,%r9
94bb(3): mov %rdx,%rcx
94be(2): nop 
94c0(4): lea 0x1(%r9),%rsi
94c4(3): mov %rcx,%rdx
94c7(5): jmp 0xffffff46(%rip)
94cc(4): nop 0x0(%rax)
94d0(4): lea 0x10(%rbp),%rax
94d4(7): mov 0x98(%rbx),%r13
94db(4): mov %rax,(%rsp)
94df(5): lea 0x4c(%rsp),%rax
94e4(5): mov %rax,0x38(%rsp)
94e9(5): lea 0x50(%rsp),%rax
94ee(5): mov %rax,0x10(%rsp)
94f3(5): mov 0x30(%rsp),%rax
94f8(4): lea 0x0(%rcx,%rax,1),%r15
94fc(5): jmp 0xdc(%rip)
9501(7): nop 0x0(%rax)
9508(4): mov 0x18(%r13),%rax
950c(4): mov 0x0(%rax,%r10,8),%rcx
9510(7): mov 0xb8(%rbx),%r10
9517(8): lea 0x0(,%r14,8),%rax
951f(5): mov %rax,0x18(%rsp)
9524(3): add %rax,%r10
9527(5): mov %rcx,0x8(%rsp)
952c(3): mov (%r10),%r9
952f(3): test %r9,%r9
9532(6): jz 0x18e(%rip)
9538(4): mov 0x10(%r9),%rdi
953c(4): lea 0x18(%r9),%rsi
9540(3): mov %rcx,%rdx
9543(5): call 0xffffe59d(%rip)
9548(3): test %rax,%rax
954b(2): jnz 0x7e(%rip)
954d(5): mov 0x10(%rsp),%rdi
9552(4): lea 0x8(%r9),%rsi
9556(5): call 0xfffff6ea(%rip)
955b(5): mov 0x8(%rsp),%rsi
9560(5): mov 0x10(%rsp),%rdi
9565(4): mov %eax,0x4c(%rsp)
9569(5): call 0xffffd037(%rip)
956e(4): mov 0x4c(%rsp),%edx
9572(2): test %edx,%edx
9574(6): jnz 0x1a2(%rip)
957a(2): cmp $0x1,%al
957c(6): jnz 0x19a(%rip)
9582(5): mov 0x18(%rsp),%r10
9587(7): add 0xb8(%rbx),%r10
958e(5): mov 0x10(%rsp),%rdx
9593(5): mov 0x38(%rsp),%rdi
9598(3): mov %r13,%rsi
959b(5): mov %r10,0x8(%rsp)
95a0(5): call 0xfffffb50(%rip)
95a5(5): mov 0x8(%rsp),%r10
95aa(5): mov 0x60(%rsp),%rdi
95af(3): mov %rax,(%r10)
95b2(5): call 0xffff831e(%rip)
95b7(7): mov 0xb8(%rbx),%rax
95be(5): cmp $0x0,0x0(%rax,%r14,8)
95c3(6): jz 0x142(%rip)
95c9(4): add $0x28,%r15
95cd(5): cmp $0x0,0xfffffff8(%r15)
95d2(6): jz 0xfffffebb(%rip)
95d8(3): mov (%r15),%r10
95db(4): mov 0x8(%rbp),%r9
95df(4): mov (%rsp),%rsi
95e3(3): mov %r10,%rdx
95e6(3): mov %r9,%rdi
95e9(5): call 0xffffe4f7(%rip)
95ee(3): test %rax,%rax
95f1(2): jz 0xffffffd8(%rip)
95f3(4): mov 0x18(%r15),%r8
95f7(3): add %r12,%r8
95fa(3): mov %r8,%r14
95fd(4): sub 0x10(%r15),%r14
9601(3): cmp %r14,%r12
9604(6): jnz 0xffffff04(%rip)
960a(4): mov 0x28(%r13),%rcx
960e(4): lea 0x0(%r10,%r10,2),%rax
9612(4): mov (%rsp),%rsi
9616(3): mov %r9,%rdi
9619(4): lea 0x0(%rcx,%rax,8),%rax
961d(4): mov 0x10(%rax),%rax
9621(3): mov (%rax),%r14
9624(3): mov %r14,%rdx
9627(5): call 0xffffe4b9(%rip)
962c(3): test %rax,%rax
962f(2): jnz 0xffffff9a(%rip)
9631(5): mov $0x8,%edi
9636(9): mov $0x1,0x50(%rsp)
963f(9): mov $0x1,0x58(%rsp)
9648(5): call 0xffff84b8(%rip)
964d(3): test %rax,%rax
9650(5): mov %rax,0x60(%rsp)
9655(6): jz 0xf8(%rip)
965b(3): mov %r14,(%rax)
965e(2): xor %eax,%eax
9660(5): mov 0x10(%rsp),%r15
9665(5): mov 0x20(%rsp),%rdx
966a(3): mov %r13,%rdi
966d(4): mov 0x2c(%rsp),%ecx
9671(4): mov %eax,0x4c(%rsp)
9675(3): mov %r15,%rsi
9678(5): call 0xffffee18(%rip)
967d(3): mov %r15,%rsi
9680(3): mov %rbp,%rdi
9683(3): mov %eax,%r14d
9686(5): call 0xffffe97a(%rip)
968b(5): mov 0x60(%rsp),%rdi
9690(3): mov %eax,%r15d
9693(5): call 0xffff823d(%rip)
9698(4): mov 0x4c(%rsp),%eax
969c(3): mov %r14d,%edx
969f(3): or %r15d,%edx
96a2(2): or %eax,%edx
96a4(6): jnz 0x92(%rip)
96aa(7): mov 0xd8(%rbx),%rcx
96b1(5): jmp 0xfffffe42(%rip)
96b6(a): nop 0x0(%rax,%rax,1)
96c0(5): mov $0x8,%edi
96c5(5): mov %r10,0x18(%rsp)
96ca(9): mov $0x1,0x50(%rsp)
96d3(9): mov $0x1,0x58(%rsp)
96dc(5): call 0xffff8424(%rip)
96e1(3): test %rax,%rax
96e4(5): mov %rax,0x60(%rsp)
96e9(2): jz 0x43(%rip)
96eb(5): mov 0x8(%rsp),%rdi
96f0(8): mov $0x0,0x4c(%rsp)
96f8(5): mov 0x18(%rsp),%r10
96fd(3): mov %rdi,(%rax)
9700(5): jmp 0xfffffe8e(%rip)
9705(4): mov 0x4c(%rsp),%eax
9709(2): test %eax,%eax
970b(6): jz 0xfffffebe(%rip)
9711(5): jmp 0xfffffd7e(%rip)
9716(5): mov 0x60(%rsp),%rdi
971b(5): call 0xffff81b5(%rip)
9720(4): mov 0x4c(%rsp),%eax
9724(2): test %eax,%eax
9726(6): jnz 0xfffffd69(%rip)
972c(5): mov $0xc,%eax
9731(5): jmp 0xfffffd5e(%rip)
9736(2): test %eax,%eax
9738(6): jnz 0xfffffd57(%rip)
973e(3): test %r14d,%r14d
9741(3): mov %r14d,%eax
9744(4): cmove %r15d,%eax
9748(5): jmp 0xfffffd47(%rip)
974d(9): mov $0x0,0x58(%rsp)
9756(9): mov $0x0,0x50(%rsp)
975f(5): mov $0xc,%eax
9764(5): jmp 0xfffffefc(%rip)
9769(5): call 0xffff8277(%rip)

"check_subexp_matching_top.isra.18" :
9770(2): push %r15
9772(2): push %r14
9774(2): push %r13
9776(2): push %r12
9778(1): push %rbp
9779(1): push %rbx
977a(4): sub $0x28,%rsp
977e(4): cmp $0x0,(%rsi)
9782(7): mov 0x98(%rdi),%r13
9789(6): jle 0xc7(%rip)
978f(3): mov %rdx,%r14
9792(3): mov %rsi,%r12
9795(3): mov %rdi,%r15
9798(2): xor %ebx,%ebx
979a(2): jmp 0x14(%rip)
979c(4): nop 0x0(%rax)
97a0(4): add $0x1,%rbx
97a4(4): cmp (%r12),%rbx
97a8(6): jnl 0xa8(%rip)
97ae(3): mov (%r14),%rax
97b1(4): mov 0x0(%rax,%rbx,8),%rbp
97b5(3): mov %rbp,%rax
97b8(4): shl/sal $0x4,%rax
97bc(4): add 0x0(%r13),%rax
97c0(4): cmp $0x8,0x8(%rax)
97c4(2): jnz 0xffffffdc(%rip)
97c6(3): mov (%rax),%rax
97c9(4): cmp $0x3f,%rax
97cd(2): jnle 0xffffffd3(%rip)
97cf(7): mov 0xa0(%r13),%rsi
97d6(4): bt %rax,%rsi
97da(2): jnb 0xffffffc6(%rip)
97dc(7): mov 0xe8(%r15),%r8
97e3(7): cmp 0xf0(%r15),%r8
97ea(7): mov 0xf8(%r15),%r9
97f1(2): jz 0x77(%rip)
97f3(5): mov $0x30,%esi
97f8(5): mov $0x1,%edi
97fd(5): mov %r9,0x10(%rsp)
9802(5): mov %r8,0x8(%rsp)
9807(5): mov %rcx,0x18(%rsp)
980c(5): call 0xffff82a4(%rip)
9811(5): mov 0x8(%rsp),%r8
9816(5): mov 0x10(%rsp),%r9
981b(3): test %rax,%rax
981e(4): mov %rax,0x0(%r9,%r8,8)
9822(2): jz 0x3f(%rip)
9824(4): add $0x1,%r8
9828(4): add $0x1,%rbx
982c(5): mov 0x18(%rsp),%rcx
9831(7): mov %r8,0xe8(%r15)
9838(4): cmp (%r12),%rbx
983c(4): mov %rbp,0x8(%rax)
9840(3): mov %rcx,(%rax)
9843(6): jl 0xffffff6b(%rip)
9849(7): nop 0x0(%rax)
9850(2): xor %eax,%eax
9852(4): add $0x28,%rsp
9856(1): pop %rbx
9857(1): pop %rbp
9858(2): pop %r12
985a(2): pop %r13
985c(2): pop %r14
985e(2): pop %r15
9860(1): ret near (%rsp)
9861(5): mov $0xc,%eax
9866(2): jmp 0xffffffec(%rip)
9868(4): lea 0x0(%r8,%r8,1),%rax
986c(3): mov %r8,%rsi
986f(3): mov %r9,%rdi
9872(4): shl/sal $0x4,%rsi
9876(5): mov %rcx,0x8(%rsp)
987b(5): mov %rax,0x10(%rsp)
9880(5): call 0xffff82e0(%rip)
9885(3): test %rax,%rax
9888(3): mov %rax,%r9
988b(5): mov 0x8(%rsp),%rcx
9890(2): jz 0xffffffd1(%rip)
9892(7): mov %rax,0xf8(%r15)
9899(5): mov 0x10(%rsp),%rax
989e(7): mov 0xe8(%r15),%r8
98a5(7): mov %rax,0xf0(%r15)
98ac(5): jmp 0xffffff47(%rip)

"re_string_context_at" :
98c0(1): push %rbp
98c1(1): push %rbx
98c2(3): mov %rdi,%rbp
98c5(4): sub $0x8,%rsp
98c9(3): test %rsi,%rsi
98cc(2): js 0x54(%rip)
98ce(4): cmp %rsi,0x58(%rdi)
98d2(6): jz 0xa6(%rip)
98d8(7): cmp $0x1,0x90(%rdi)
98df(2): jle 0x51(%rip)
98e1(4): mov 0x10(%rdi),%rax
98e5(2): jmp 0x15(%rip)
98e7(9): nop 0x0(%rax,%rax,1)
98f0(4): sub $0x1,%rsi
98f4(4): cmp $0xffffffff,%rsi
98f8(2): jz 0x28(%rip)
98fa(3): mov 0x0(%rax,%rsi,4),%ebx
98fd(3): cmp $0xff,%ebx
9900(2): jz 0xfffffff0(%rip)
9902(7): cmp $0x0,0x8e(%rbp)
9909(2): jnz 0x7f(%rip)
990b(2): xor %eax,%eax
990d(3): cmp $0xa,%ebx
9910(2): jz 0x4c(%rip)
9912(4): add $0x8,%rsp
9916(1): pop %rbx
9917(1): pop %rbp
9918(1): ret near (%rsp)
9919(7): nop 0x0(%rax)
9920(3): mov 0x70(%rbp),%eax
9923(4): add $0x8,%rsp
9927(1): pop %rbx
9928(1): pop %rbp
9929(1): ret near (%rsp)
992a(6): nop 0x0(%rax,%rax,1)
9930(4): mov 0x8(%rdi),%rax
9934(7): mov 0x80(%rdi),%rcx
993b(4): movzx 0x0(%rax,%rsi,1),%eax
993f(3): mov %rax,%rdx
9942(4): sar $0x6,%rax
9946(4): mov 0x0(%rcx,%rax,8),%rcx
994a(5): mov $0x1,%eax
994f(4): bt %rdx,%rcx
9953(2): jb 0xffffffbf(%rip)
9955(2): xor %eax,%eax
9957(3): cmp $0xa,%dl
995a(2): jnz 0xffffffb8(%rip)
995c(2): xor %eax,%eax
995e(7): cmp $0x0,0x8d(%rbp)
9965(3): setnz %al
9968(4): add $0x8,%rsp
996c(2): add %eax,%eax
996e(1): pop %rbx
996f(1): pop %rbp
9970(1): ret near (%rsp)
9971(7): nop 0x0(%rax)
9978(3): and $0x2,%edx
997b(3): cmp $0x1,%edx
997e(2): sbb %eax,%eax
9980(3): and $0x2,%eax
9983(3): add $0x8,%eax
9986(2): jmp 0xffffff8c(%rip)
9988(2): mov %ebx,%edi
998a(5): call 0xffff8166(%rip)
998f(2): test %eax,%eax
9991(2): jnz 0xb(%rip)
9993(3): cmp $0x5f,%ebx
9996(6): jnz 0xffffff75(%rip)
999c(5): mov $0x1,%eax
99a1(5): jmp 0xffffff71(%rip)

"check_node_accept" :
99b0(4): mov 0x8(%rdi),%rax
99b4(4): movzx 0x0(%rax,%rdx,1),%ecx
99b8(4): movzx 0x8(%rsi),%eax
99bc(2): cmp $0x3,%al
99be(6): jz 0xba(%rip)
99c4(6): jbe 0x9c(%rip)
99ca(2): cmp $0x5,%al
99cc(2): jz 0x14(%rip)
99ce(2): cmp $0x7,%al
99d0(6): jnz 0xa0(%rip)
99d6(2): xor %eax,%eax
99d8(2): test %cl,%cl
99da(6): js 0x90(%rip)
99e0(3): cmp $0xa,%cl
99e3(6): jz 0xc5(%rip)
99e9(2): test %cl,%cl
99eb(2): jnz 0x15(%rip)
99ed(7): mov 0x98(%rdi),%rcx
99f4(2): xor %eax,%eax
99f6(7): test $0x80,0xd8(%rcx)
99fd(2): jnz 0x6d(%rip)
99ff(1): nop 
9a00(1): push %rbx
9a01(3): mov 0x8(%rsi),%ebx
9a04(5): mov $0x1,%eax
9a09(6): test $0x3ff00,%ebx
9a0f(2): jz 0x4d(%rip)
9a11(3): mov %rdx,%rsi
9a14(6): mov 0xa0(%rdi),%edx
9a1a(3): shr $0x8,%ebx
9a1d(5): call 0xfffffea3(%rip)
9a22(2): mov %ebx,%ecx
9a24(2): mov %eax,%edx
9a26(5): and $0x3ff,%cx
9a2b(3): test $0x4,%bl
9a2e(2): jz 0x6a(%rip)
9a30(2): xor %eax,%eax
9a32(3): test $0x1,%dl
9a35(2): jz 0x27(%rip)
9a37(3): and $0x8,%ebx
9a3a(2): jnz 0x22(%rip)
9a3c(3): test $0x20,%cl
9a3f(2): jz 0x9(%rip)
9a41(2): xor %eax,%eax
9a43(3): test $0x2,%dl
9a46(2): jz 0x16(%rip)
9a48(3): shr $0x3,%edx
9a4b(5): mov $0x1,%eax
9a50(3): and $0x1,%edx
9a53(6): and $0x80,%ecx
9a59(3): cmovne %edx,%eax
9a5c(1): pop %rbx
9a5d(1): ret near (%rsp)
9a5e(2): nop 
9a60(2): cmp $0x1,%al
9a62(2): jnz 0xe(%rip)
9a64(2): xor %eax,%eax
9a66(2): cmp %cl,(%rsi)
9a68(2): jz 0xffffff98(%rip)
9a6a(2): REP ret near (%rsp)
9a6c(4): nop 0x0(%rax)
9a70(2): xor %eax,%eax
9a72(1): ret near (%rsp)
9a73(5): nop 0x0(%rax,%rax,1)
9a78(3): mov (%rsi),%r8
9a7b(3): movzx %cl,%eax
9a7e(4): sar $0x6,%rax
9a82(4): mov 0x0(%r8,%rax,8),%r8
9a86(2): xor %eax,%eax
9a88(4): bt %rcx,%r8
9a8c(6): jb 0xffffff74(%rip)
9a92(2): REP ret near (%rsp)
9a94(4): nop 0x0(%rax)
9a98(3): and $0x8,%ebx
9a9b(2): jz 0xffffffa1(%rip)
9a9d(2): test $0x1,%al
9a9f(2): jz 0xffffff9d(%rip)
9aa1(2): xor %eax,%eax
9aa3(1): pop %rbx
9aa4(1): ret near (%rsp)
9aa5(3): nop (%rax)
9aa8(7): mov 0x98(%rdi),%rcx
9aaf(2): xor %eax,%eax
9ab1(7): test $0x40,0xd8(%rcx)
9ab8(6): jnz 0xffffff48(%rip)
9abe(2): REP ret near (%rsp)

"check_halt_state_context.isra.20" :
9ac0(2): push %r12
9ac2(3): mov %rdx,%r12
9ac5(1): push %rbp
9ac6(1): push %rbx
9ac7(6): mov 0xa0(%rdi),%edx
9acd(3): mov %rsi,%rbx
9ad0(3): mov %rcx,%rsi
9ad3(3): mov %rdi,%rbp
9ad6(5): call 0xfffffdea(%rip)
9adb(3): test %rbx,%rbx
9ade(6): jle 0xaa(%rip)
9ae4(7): mov 0x98(%rbp),%rdx
9aeb(3): mov %eax,%r11d
9aee(2): mov %eax,%ebp
9af0(3): and $0x1,%eax
9af3(4): mov (%r12),%r9
9af7(2): xor %esi,%esi
9af9(3): and $0x8,%ebp
9afc(4): and $0x2,%r11d
9b00(3): mov %eax,%r10d
9b03(3): mov (%rdx),%r8
9b06(2): jmp 0x13(%rip)
9b08(8): nop 0x0(%rax,%rax,1)
9b10(4): add $0x1,%rsi
9b14(3): cmp %rbx,%rsi
9b17(2): jz 0x71(%rip)
9b19(4): mov 0x0(%r9,%rsi,8),%rax
9b1d(3): mov %rax,%rdx
9b20(4): shl/sal $0x4,%rdx
9b24(3): add %r8,%rdx
9b27(3): mov 0x8(%rdx),%ecx
9b2a(3): shr $0x8,%ecx
9b2d(2): mov %ecx,%edi
9b2f(5): and $0x3ff,%di
9b34(4): cmp $0x2,0x8(%rdx)
9b38(2): jnz 0xffffffd8(%rip)
9b3a(3): test %di,%di
9b3d(2): jz 0x28(%rip)
9b3f(3): test $0x4,%cl
9b42(2): jz 0x2e(%rip)
9b44(3): test %r10d,%r10d
9b47(2): jz 0xffffffc9(%rip)
9b49(3): and $0x8,%ecx
9b4c(2): jnz 0xffffffc4(%rip)
9b4e(4): test $0x20,%dil
9b52(2): jz 0x7(%rip)
9b54(3): test %r11d,%r11d
9b57(2): jz 0xffffffb9(%rip)
9b59(6): and $0x80,%edi
9b5f(2): jz 0x6(%rip)
9b61(2): test %ebp,%ebp
9b63(2): jz 0xffffffad(%rip)
9b65(1): pop %rbx
9b66(1): pop %rbp
9b67(2): pop %r12
9b69(1): ret near (%rsp)
9b6a(6): nop 0x0(%rax,%rax,1)
9b70(3): and $0x8,%ecx
9b73(2): jz 0xffffffdb(%rip)
9b75(3): test %r10d,%r10d
9b78(2): jnz 0xffffff98(%rip)
9b7a(4): test $0x20,%dil
9b7e(2): jz 0xffffffdb(%rip)
9b80(2): jmp 0xffffffd4(%rip)
9b82(6): nop 0x0(%rax,%rax,1)
9b88(1): pop %rbx
9b89(2): xor %eax,%eax
9b8b(1): pop %rbp
9b8c(2): pop %r12
9b8e(1): ret near (%rsp)

"re_string_reconstruct" :
9b90(2): push %r15
9b92(2): push %r14
9b94(3): mov %rsi,%r15
9b97(2): push %r13
9b99(2): push %r12
9b9b(3): mov %edx,%r10d
9b9e(1): push %rbp
9b9f(1): push %rbx
9ba0(3): mov %rsi,%rbp
9ba3(3): mov %rdi,%rbx
9ba6(4): sub $0x48,%rsp
9baa(9): mov $0x28,%rax
9bb3(5): mov %rax,0x38(%rsp)
9bb8(2): xor %eax,%eax
9bba(4): mov 0x28(%rdi),%rax
9bbe(3): sub %rax,%rbp
9bc1(3): cmp %rsi,%rax
9bc4(2): jle 0x62(%rip)
9bc6(7): cmp $0x1,0x90(%rdi)
9bcd(6): jnle 0x133(%rip)
9bd3(4): mov 0x50(%rbx),%rax
9bd7(8): mov $0x0,0x30(%rbx)
9bdf(3): mov %r15,%rbp
9be2(8): mov $0x0,0x28(%rbx)
9bea(8): mov $0x0,0x38(%rbx)
9bf2(7): mov $0x0,0x8c(%rbx)
9bf9(4): mov %rax,0x58(%rbx)
9bfd(4): mov 0x60(%rbx),%rax
9c01(4): mov %rax,0x68(%rbx)
9c05(3): mov %r10d,%eax
9c08(3): and $0x1,%eax
9c0b(3): cmp $0x1,%eax
9c0e(2): sbb %eax,%eax
9c10(3): and $0x2,%eax
9c13(3): add $0x4,%eax
9c16(7): cmp $0x0,0x8b(%rbx)
9c1d(3): mov %eax,0x70(%rbx)
9c20(6): jz 0xd0(%rip)
9c26(3): test %rbp,%rbp
9c29(2): jz 0x65(%rip)
9c2b(4): mov 0x38(%rbx),%rax
9c2f(7): movzx 0x8c(%rbx),%edx
9c36(4): mov 0x30(%rbx),%r8
9c3a(3): cmp %rbp,%rax
9c3d(6): jle 0x123(%rip)
9c43(2): test %dl,%dl
9c45(6): jnz 0x213(%rip)
9c4b(4): lea 0xffffffff(%rbp),%rsi
9c4f(3): mov %r10d,%edx
9c52(3): mov %rbx,%rdi
9c55(4): mov %r8,(%rsp)
9c59(5): call 0xfffffc67(%rip)
9c5e(4): mov (%rsp),%r8
9c62(3): mov %eax,0x70(%rbx)
9c65(3): sub %rbp,%r8
9c68(7): cmp $0x1,0x90(%rbx)
9c6f(6): jnle 0xa1(%rip)
9c75(7): cmp $0x0,0x8b(%rbx)
9c7c(6): jnz 0x3a4(%rip)
9c82(4): sub %rbp,0x38(%rbx)
9c86(4): mov %r8,0x30(%rbx)
9c8a(4): add %rbp,0x8(%rbx)
9c8e(4): mov 0x58(%rbx),%rax
9c92(4): sub %rbp,0x68(%rbx)
9c96(4): mov %r15,0x28(%rbx)
9c9a(3): sub %rbp,%rax
9c9d(7): cmp $0x1,0x90(%rbx)
9ca4(4): mov %rax,0x58(%rbx)
9ca8(6): jle 0xa0(%rip)
9cae(7): cmp $0x0,0x88(%rbx)
9cb5(3): mov %rbx,%rdi
9cb8(2): jz 0x80(%rip)
9cba(5): call 0xffffcd46(%rip)
9cbf(2): test %eax,%eax
9cc1(2): jnz 0xc(%rip)
9cc3(8): mov $0x0,0x48(%rbx)
9ccb(2): xor %eax,%eax
9ccd(5): mov 0x38(%rsp),%rcx
9cd2(9): xor $0x28,%rcx
9cdb(6): jnz 0x64f(%rip)
9ce1(4): add $0x48,%rsp
9ce5(1): pop %rbx
9ce6(1): pop %rbp
9ce7(2): pop %r12
9ce9(2): pop %r13
9ceb(2): pop %r14
9ced(2): pop %r15
9cef(1): ret near (%rsp)
9cf0(3): mov (%rbx),%rax
9cf3(4): mov %rax,0x8(%rbx)
9cf7(5): jmp 0xffffff2f(%rip)
9cfc(4): nop 0x0(%rax)
9d00(8): mov $0x0,0x20(%rdi)
9d08(5): jmp 0xfffffecb(%rip)
9d0d(3): nop (%rax)
9d10(4): mov 0x10(%rbx),%rdi
9d14(8): lea 0x0(,%r8,4),%rdx
9d1c(4): lea 0x0(%rdi,%rbp,4),%rsi
9d20(5): call 0xffff7e80(%rip)
9d25(4): mov 0x30(%rbx),%r8
9d29(3): sub %rbp,%r8
9d2c(5): jmp 0xffffff49(%rip)
9d31(7): nop 0x0(%rax)
9d38(5): call 0xffffcaf8(%rip)
9d3d(5): jmp 0xffffff86(%rip)
9d42(6): nop 0x0(%rax,%rax,1)
9d48(7): cmp $0x0,0x8b(%rbx)
9d4f(6): jnz 0x3b1(%rip)
9d55(4): mov %rax,0x30(%rbx)
9d59(5): jmp 0xffffff6a(%rip)
9d5e(2): nop 
9d60(2): test %dl,%dl
9d62(6): jnz 0x4ab(%rip)
9d68(7): movsxd 0x90(%rbx),%rdx
9d6f(8): mov $0x0,0x30(%rbx)
9d77(4): mov 0x28(%rbx),%r11
9d7b(3): cmp $0x1,%edx
9d7e(6): jle 0x3ea(%rip)
9d84(7): cmp $0x0,0x89(%rbx)
9d8b(6): jnz 0x2bd(%rip)
9d91(4): lea 0x0(%r11,%rax,1),%r14
9d95(3): cmp %r14,%r15
9d98(6): jle 0x447(%rip)
9d9e(4): lea 0x20(%rbx),%rax
9da2(5): lea 0x24(%rsp),%r13
9da7(5): mov %rax,0x10(%rsp)
9dac(4): nop 0x0(%rax)
9db0(4): mov 0x50(%rbx),%r12
9db4(3): mov (%rbx),%rsi
9db7(3): mov %r13,%rdi
9dba(4): mov 0x20(%rbx),%rax
9dbe(5): mov 0x10(%rsp),%rcx
9dc3(5): mov %r10d,0xc(%rsp)
9dc8(4): mov %r8,(%rsp)
9dcc(3): sub %r14,%r12
9dcf(3): add %r14,%rsi
9dd2(3): mov %r12,%rdx
9dd5(5): mov %rax,0x18(%rsp)
9dda(5): call 0xffffc166(%rip)
9ddf(4): lea 0xffffffff(%rax),%rcx
9de3(4): mov 0x24(%rsp),%edx
9de7(4): mov (%rsp),%r8
9deb(5): mov 0xc(%rsp),%r10d
9df0(4): cmp $0xfffffffc,%rcx
9df4(6): jnbe 0x441(%rip)
9dfa(3): add %rax,%r14
9dfd(3): cmp %r14,%r15
9e00(2): jnle 0xffffffb0(%rip)
9e02(3): sub %r15,%r14
9e05(3): cmp $0xff,%edx
9e08(3): mov %r14,%r12
9e0b(4): mov %r14,0x30(%rbx)
9e0f(6): jz 0x3da(%rip)
9e15(7): cmp $0x0,0x8e(%rbx)
9e1c(6): jnz 0x46d(%rip)
9e22(2): xor %eax,%eax
9e24(3): cmp $0xa,%edx
9e27(2): jnz 0x10(%rip)
9e29(2): xor %eax,%eax
9e2b(7): cmp $0x0,0x8d(%rbx)
9e32(3): setnz %al
9e35(2): add %eax,%eax
9e37(3): mov %eax,0x70(%rbx)
9e3a(4): cmp $0x0,%r12
9e3e(6): jnz 0x41c(%rip)
9e44(7): movzx 0x8b(%rbx),%eax
9e4b(4): mov %r12,0x38(%rbx)
9e4f(5): jmp 0x1bd(%rip)
9e54(4): nop 0x0(%rax)
9e58(4): mov 0x18(%rbx),%r14
9e5c(3): mov %r8,%rcx
9e5f(2): xor %esi,%esi
9e61(2): jmp 0x12(%rip)
9e63(5): nop 0x0(%rax,%rax,1)
9e68(2): jnl 0x3b(%rip)
9e6a(4): lea 0x1(%rax),%rsi
9e6e(3): cmp %rcx,%rsi
9e71(2): jnl 0x27(%rip)
9e73(4): lea 0x0(%rsi,%rcx,1),%rdx
9e77(3): mov %rdx,%rax
9e7a(4): shr $0x3f,%rax
9e7e(3): add %rdx,%rax
9e81(3): sar $0x1,%rax
9e84(4): mov 0x0(%r14,%rax,8),%rdx
9e88(3): mov %rax,%r12
9e8b(3): cmp %rbp,%rdx
9e8e(2): jle 0xffffffda(%rip)
9e90(3): mov %rax,%rcx
9e93(2): jmp 0xffffffdb(%rip)
9e95(3): nop (%rax)
9e98(4): lea 0x1(%rax),%r12
9e9c(3): cmp %rbp,%rdx
9e9f(4): cmovnl %rax,%r12
9ea3(5): lea 0xffffffff(%r12),%r13
9ea8(3): mov %r10d,%edx
9eab(3): mov %rbx,%rdi
9eae(4): mov %r8,(%rsp)
9eb2(3): mov %r13,%rsi
9eb5(5): call 0xfffffa0b(%rip)
9eba(3): cmp %r12,%rbp
9ebd(3): mov %eax,0x70(%rbx)
9ec0(4): mov (%rsp),%r8
9ec4(6): jnz 0x84(%rip)
9eca(3): cmp %r8,%rbp
9ecd(2): jnl 0x7b(%rip)
9ecf(4): cmp %rbp,0x0(%r14,%r12,8)
9ed3(2): jnz 0x75(%rip)
9ed5(4): mov 0x10(%rbx),%rdi
9ed9(3): sub %rbp,%r8
9edc(8): lea 0x0(,%r8,4),%rdx
9ee4(4): lea 0x0(%rdi,%rbp,4),%rsi
9ee8(5): call 0xffff7cb8(%rip)
9eed(4): mov 0x8(%rbx),%rdi
9ef1(4): mov 0x30(%rbx),%rdx
9ef5(4): lea 0x0(%rdi,%rbp,1),%rsi
9ef9(3): sub %rbp,%rdx
9efc(5): call 0xffff7ca4(%rip)
9f01(4): mov 0x30(%rbx),%rax
9f05(4): sub %rbp,0x38(%rbx)
9f09(3): sub %rbp,%rax
9f0c(3): test %rax,%rax
9f0f(4): mov %rax,0x30(%rbx)
9f13(2): jle 0x25(%rip)
9f15(4): mov 0x18(%rbx),%rcx
9f19(2): xor %eax,%eax
9f1b(4): lea 0x0(%rcx,%rbp,8),%rsi
9f1f(1): nop 
9f20(4): mov 0x0(%rsi,%rax,8),%rdx
9f24(3): sub %rbp,%rdx
9f27(4): mov %rdx,0x0(%rcx,%rax,8)
9f2b(4): add $0x1,%rax
9f2f(4): cmp %rax,0x30(%rbx)
9f33(2): jnle 0xffffffed(%rip)
9f35(3): nop (%rax)
9f38(7): movzx 0x8b(%rbx),%eax
9f3f(5): jmp 0xcd(%rip)
9f44(4): nop 0x0(%rax)
9f48(4): mov 0x50(%rbx),%rax
9f4c(7): mov $0x0,0x8c(%rbx)
9f53(3): add %rbp,%rax
9f56(3): sub %r15,%rax
9f59(4): mov %rax,0x58(%rbx)
9f5d(4): mov 0x60(%rbx),%rax
9f61(3): add %rbp,%rax
9f64(3): sub %r15,%rax
9f67(3): test %r12,%r12
9f6a(4): mov %rax,0x68(%rbx)
9f6e(2): jle 0x25(%rip)
9f70(5): cmp %rbp,0xfffffff8(%r14,%r12,8)
9f75(2): jz 0x16(%rip)
9f77(2): jmp 0x1c(%rip)
9f79(7): nop 0x0(%rax)
9f80(5): cmp %rbp,0xfffffff8(%r14,%r13,8)
9f85(2): jnz 0xe(%rip)
9f87(4): sub $0x1,%r13
9f8b(3): test %r13,%r13
9f8e(3): mov %r13,%r12
9f91(2): jnz 0xffffffef(%rip)
9f93(3): cmp %r8,%r12
9f96(6): jnl 0x232(%rip)
9f9c(4): mov 0x10(%rbx),%rax
9fa0(2): jmp 0x15(%rip)
9fa2(6): nop 0x0(%rax,%rax,1)
9fa8(4): add $0x1,%r12
9fac(3): cmp %r8,%r12
9faf(6): jz 0x221(%rip)
9fb5(5): cmp $0xff,0x0(%rax,%r12,4)
9fba(2): jz 0xffffffee(%rip)
9fbc(4): mov 0x0(%r14,%r12,8),%rdx
9fc0(3): sub %rbp,%rdx
9fc3(4): cmp $0x0,%rdx
9fc7(4): mov %rdx,0x30(%rbx)
9fcb(2): jz 0x36(%rip)
9fcd(2): jle 0x22(%rip)
9fcf(4): mov 0x10(%rbx),%rax
9fd3(4): lea 0x0(%rax,%rdx,4),%rcx
9fd7(9): nop 0x0(%rax,%rax,1)
9fe0(6): mov $0xffffffff,(%rax)
9fe6(4): add $0x4,%rax
9fea(3): cmp %rax,%rcx
9fed(2): jnz 0xfffffff3(%rip)
9fef(4): mov 0x8(%rbx),%rdi
9ff3(5): mov $0xff,%esi
9ff8(5): call 0xffff7a68(%rip)
9ffd(4): mov 0x30(%rbx),%rdx
a001(7): movzx 0x8b(%rbx),%eax
a008(4): mov %rdx,0x38(%rbx)
a00c(2): test %al,%al
a00e(6): jz 0xfffffc7c(%rip)
a014(5): jmp 0xfffffc7a(%rip)
a019(7): nop 0x0(%rax)
a020(4): mov 0x8(%rbx),%rdi
a024(3): mov %r8,%rdx
a027(4): lea 0x0(%rdi,%rbp,1),%rsi
a02b(5): call 0xffff7b75(%rip)
a030(7): movzx 0x8b(%rbx),%eax
a037(4): sub %rbp,0x30(%rbx)
a03b(4): sub %rbp,0x38(%rbx)
a03f(2): jmp 0xffffffcd(%rip)
a041(7): nop 0x0(%rax)
a048(3): mov (%rbx),%rcx
a04b(3): mov %rbp,%rdi
a04e(3): sub %rdx,%rdi
a051(3): mov %rdi,%rdx
a054(4): lea 0x0(%rcx,%r11,1),%r12
a058(3): add %r12,%rdx
a05b(5): lea 0xffffffff(%r12,%rbp,1),%rsi
a060(3): cmp %rdx,%rcx
a063(4): cmovnae %rdx,%rcx
a067(3): cmp %rsi,%rcx
a06a(2): jbe 0x1b(%rip)
a06c(5): jmp 0xfffffd25(%rip)
a071(7): nop 0x0(%rax)
a078(4): sub $0x1,%rsi
a07c(3): cmp %rsi,%rcx
a07f(6): jnbe 0xfffffd12(%rip)
a085(3): movzx (%rsi),%edx
a088(3): and $0xc0,%edx
a08b(3): cmp $0x80,%dl
a08e(2): jz 0xffffffea(%rip)
a090(4): mov 0x58(%rbx),%rdx
a094(4): mov 0x78(%rbx),%rcx
a098(3): mov %rsi,%r14
a09b(3): add %r12,%rdx
a09e(3): sub %rsi,%rdx
a0a1(3): test %rcx,%rcx
a0a4(6): jnz 0x24e(%rip)
a0aa(5): lea 0x24(%rsp),%r13
a0af(3): add %rbp,%r12
a0b2(5): lea 0x28(%rsp),%rcx
a0b7(3): sub %r14,%r12
a0ba(5): mov %r10d,0xc(%rsp)
a0bf(4): mov %r8,(%rsp)
a0c3(3): mov %r13,%rdi
a0c6(9): mov $0x0,0x28(%rsp)
a0cf(5): call 0xffffbe71(%rip)
a0d4(3): cmp %rax,%r12
a0d7(4): mov (%rsp),%r8
a0db(5): mov 0xc(%rsp),%r10d
a0e0(2): jnbe 0xc(%rip)
a0e2(4): cmp $0xfffffffd,%rax
a0e6(6): jbe 0x1cb(%rip)
a0ec(4): mov 0x28(%rbx),%r11
a0f0(4): mov 0x38(%rbx),%rax
a0f4(5): jmp 0xfffffc9d(%rip)
a0f9(7): nop 0x0(%rax)
a100(7): cmp $0x0,0x88(%rbx)
a107(6): jnz 0xf9(%rip)
a10d(4): mov 0x78(%rbx),%rcx
a111(3): test %rcx,%rcx
a114(6): jz 0xfffffbaf(%rip)
a11a(4): cmp %rax,0x40(%rbx)
a11e(4): mov 0x30(%rbx),%rdx
a122(5): cmovng 0x40(%rbx),%rax
a127(3): cmp %rdx,%rax
a12a(2): jnle 0xe(%rip)
a12c(2): jmp 0x2c(%rip)
a12e(2): nop 
a130(4): mov 0x28(%rbx),%r15
a134(4): mov 0x78(%rbx),%rcx
a138(3): mov (%rbx),%rsi
a13b(3): add %rdx,%rsi
a13e(5): movzx 0x0(%rsi,%r15,1),%esi
a143(4): movzx 0x0(%rcx,%rsi,1),%esi
a147(4): mov 0x8(%rbx),%rcx
a14b(4): mov %sil,0x0(%rcx,%rdx,1)
a14f(4): add $0x1,%rdx
a153(3): cmp %rdx,%rax
a156(2): jnz 0xffffffda(%rip)
a158(4): mov %rdx,0x30(%rbx)
a15c(4): mov %rdx,0x38(%rbx)
a160(5): jmp 0xfffffb63(%rip)
a165(3): nop (%rax)
a168(3): mov (%rbx),%rax
a16b(4): mov 0x78(%rbx),%rdx
a16f(3): add %rbp,%rax
a172(3): test %rdx,%rdx
a175(6): movzx 0xffffffff(%r11,%rax,1),%eax
a17b(8): mov $0x0,0x38(%rbx)
a183(2): jz 0x6(%rip)
a185(4): movzx 0x0(%rdx,%rax,1),%eax
a189(7): mov 0x80(%rbx),%rcx
a190(3): movzx %al,%edx
a193(4): sar $0x6,%rdx
a197(4): mov 0x0(%rcx,%rdx,8),%rcx
a19b(5): mov $0x1,%edx
a1a0(4): bt %rax,%rcx
a1a4(2): jb 0x1c(%rip)
a1a6(2): xor %edx,%edx
a1a8(2): cmp $0xa,%al
a1aa(2): jnz 0x16(%rip)
a1ac(2): xor %edx,%edx
a1ae(7): cmp $0x0,0x8d(%rbx)
a1b5(3): setnz %dl
a1b8(2): add %edx,%edx
a1ba(6): nop 0x0(%rax,%rax,1)
a1c0(3): mov %edx,0x70(%rbx)
a1c3(5): jmp 0xfffffd75(%rip)
a1c8(6): jnz 0xfffffdf4(%rip)
a1ce(2): nop 
a1d0(8): mov $0x0,0x30(%rbx)
a1d8(2): xor %edx,%edx
a1da(5): jmp 0xfffffe27(%rip)
a1df(3): sub %r15,%r14
a1e2(3): mov %r14,%r12
a1e5(4): mov %r14,0x30(%rbx)
a1e9(4): lea 0xffffffff(%r8),%rsi
a1ed(3): mov %r10d,%edx
a1f0(3): mov %rbx,%rdi
a1f3(5): call 0xfffff6cd(%rip)
a1f8(3): mov %eax,0x70(%rbx)
a1fb(5): jmp 0xfffffc3f(%rip)
a200(3): mov %rbx,%rdi
a203(5): call 0xffffc5bd(%rip)
a208(5): jmp 0xfffffabb(%rip)
a20d(4): mov 0x50(%rbx),%rdx
a211(7): mov $0x0,0x8c(%rbx)
a218(3): add %rbp,%rdx
a21b(3): sub %r15,%rdx
a21e(4): mov %rdx,0x58(%rbx)
a222(4): mov 0x60(%rbx),%rdx
a226(3): add %rbp,%rdx
a229(3): sub %r15,%rdx
a22c(4): mov %rdx,0x68(%rbx)
a230(5): jmp 0xfffffb38(%rip)
a235(3): test %rax,%rax
a238(2): jz 0x75(%rip)
a23a(3): test %r12,%r12
a23d(2): jz 0x70(%rip)
a23f(3): mov (%rbx),%rax
a242(5): movzx 0x0(%rax,%r14,1),%edx
a247(5): mov 0x18(%rsp),%rax
a24c(4): mov %rax,0x20(%rbx)
a250(5): mov $0x1,%eax
a255(5): jmp 0xfffffba5(%rip)
a25a(2): jle 0x1d(%rip)
a25c(4): mov 0x10(%rbx),%rax
a260(4): lea 0x0(%rax,%r12,4),%rdx
a264(4): nop 0x0(%rax)
a268(6): mov $0xffffffff,(%rax)
a26e(4): add $0x4,%rax
a272(3): cmp %rax,%rdx
a275(2): jnz 0xfffffff3(%rip)
a277(7): cmp $0x0,0x8b(%rbx)
a27e(2): jnz 0x5a(%rip)
a280(4): mov %r12,0x38(%rbx)
a284(5): jmp 0xfffffa06(%rip)
a289(2): mov %edx,%edi
a28b(3): mov %edx,(%rsp)
a28e(5): call 0xffff7862(%rip)
a293(2): test %eax,%eax
a295(2): jnz 0xe(%rip)
a297(3): mov (%rsp),%edx
a29a(3): cmp $0x5f,%edx
a29d(6): jnz 0xfffffb85(%rip)
a2a3(5): mov $0x1,%eax
a2a8(5): jmp 0xfffffb8f(%rip)
a2ad(2): xor %edx,%edx
a2af(2): jmp 0xffffff98(%rip)
a2b1(4): mov 0x24(%rsp),%edx
a2b5(3): sub %r12,%rax
a2b8(8): mov $0x0,0x20(%rbx)
a2c0(3): mov %rax,%r12
a2c3(4): mov %rax,0x30(%rbx)
a2c7(3): cmp $0xff,%edx
a2ca(6): jnz 0xfffffb4b(%rip)
a2d0(5): jmp 0xfffffe1c(%rip)
a2d5(3): nop (%rax)
a2d8(4): mov 0x8(%rbx),%rdi
a2dc(3): mov %r12,%rdx
a2df(5): mov $0xff,%esi
a2e4(5): call 0xffff777c(%rip)
a2e9(4): mov 0x30(%rbx),%r12
a2ed(5): jmp 0xfffffb57(%rip)
a2f2(4): cmp $0x6,%rdx
a2f6(5): mov $0x6,%edi
a2fb(5): lea 0x32(%rsp),%r11
a300(4): cmovng %rdx,%rdi
a304(3): sub $0x1,%edi
a307(2): test %edi,%edi
a309(3): movsxd %edi,%rax
a30c(2): js 0x16(%rip)
a30e(4): movzx 0x0(%rsi,%rax,1),%edi
a312(4): movzx 0x0(%rcx,%rdi,1),%edi
a316(4): mov %dil,0x0(%r11,%rax,1)
a31a(4): sub $0x1,%rax
a31e(2): test %eax,%eax
a320(2): jns 0xffffffee(%rip)
a322(3): mov %r11,%rsi
a325(5): jmp 0xfffffd85(%rip)
a32a(5): call 0xffff76b6(%rip)

"sub_epsilon_src_nodes" :
a330(2): push %r15
a332(2): push %r14
a334(3): mov %rdx,%r14
a337(2): push %r13
a339(2): push %r12
a33b(4): lea 0x0(%rsi,%rsi,2),%rdx
a33f(1): push %rbp
a340(1): push %rbx
a341(4): pxor %xmm0,%xmm0
a345(4): sub $0x48,%rsp
a349(9): mov $0x28,%rax
a352(5): mov %rax,0x38(%rsp)
a357(2): xor %eax,%eax
a359(4): mov 0x38(%rdi),%rax
a35d(9): mov $0x0,0x30(%rsp)
a366(5): movaps %xmm0,0x20(%rsp)
a36b(5): mov %rcx,0x10(%rsp)
a370(4): lea 0x0(%rax,%rdx,8),%rbp
a374(4): mov 0x8(%rbp),%r10
a378(3): test %r10,%r10
a37b(6): jle 0x1e7(%rip)
a381(5): lea 0x20(%rsp),%rax
a386(3): mov %rdi,%r12
a389(3): mov %rsi,%r13
a38c(2): xor %ebx,%ebx
a38e(5): mov %rax,0x18(%rsp)
a393(2): jmp 0x5a(%rip)
a395(3): nop (%rax)
a398(3): test %rax,%rax
a39b(6): jnz 0xdd(%rip)
a3a1(4): mov 0x8(%r14),%rdi
a3a5(4): lea 0x10(%r14),%rsi
a3a9(3): mov %r8,%rdx
a3ac(5): call 0xffffd734(%rip)
a3b1(3): test %rax,%rax
a3b4(6): jz 0xc4(%rip)
a3ba(5): mov 0x38(%r12),%rdx
a3bf(5): mov 0x10(%rsp),%rsi
a3c4(5): mov 0x18(%rsp),%rdi
a3c9(3): add %r9,%rdx
a3cc(5): call 0xffffe224(%rip)
a3d1(2): test %eax,%eax
a3d3(6): jnz 0x17d(%rip)
a3d9(4): mov 0x8(%rbp),%r10
a3dd(3): nop (%rax)
a3e0(4): add $0x1,%rbx
a3e4(3): cmp %rbx,%r10
a3e7(6): jle 0xd9(%rip)
a3ed(4): mov 0x10(%rbp),%rax
a3f1(4): mov 0x0(%rax,%rbx,8),%rax
a3f5(3): cmp %rax,%r13
a3f8(2): jz 0xffffffe8(%rip)
a3fa(3): mov %rax,%rdx
a3fd(4): shl/sal $0x4,%rdx
a401(4): add (%r12),%rdx
a405(4): test $0x8,0x8(%rdx)
a409(2): jz 0xffffffd7(%rip)
a40b(4): lea 0x0(%rax,%rax,2),%r9
a40f(5): mov 0x28(%r12),%rcx
a414(4): lea 0x10(%rbp),%r11
a418(3): mov %r10,%rdi
a41b(4): shl/sal $0x3,%r9
a41f(3): mov %r11,%rsi
a422(3): add %r9,%rcx
a425(4): mov 0x10(%rcx),%r15
a429(5): mov %rcx,0x8(%rsp)
a42e(3): mov (%r15),%r8
a431(3): mov %r8,%rdx
a434(4): mov %r8,(%rsp)
a438(5): call 0xffffd6a8(%rip)
a43d(5): mov 0x8(%rsp),%rcx
a442(4): mov (%rsp),%r8
a446(5): cmp $0x1,0x8(%rcx)
a44b(6): jnle 0xffffff4d(%rip)
a451(3): test %rax,%rax
a454(2): jnz 0xffffff8c(%rip)
a456(4): mov 0x8(%r14),%rdi
a45a(4): lea 0x10(%r14),%rsi
a45e(3): mov %r8,%rdx
a461(5): call 0xffffd67f(%rip)
a466(3): test %rax,%rax
a469(6): jnz 0xffffff51(%rip)
a46f(5): jmp 0xffffff71(%rip)
a474(4): nop 0x0(%rax)
a478(4): mov 0x8(%r15),%r15
a47c(3): test %r15,%r15
a47f(6): jle 0xffffff61(%rip)
a485(3): mov %r15,%rdx
a488(3): mov %r11,%rsi
a48b(3): mov %r10,%rdi
a48e(5): call 0xffffd652(%rip)
a493(3): test %rax,%rax
a496(6): jnz 0xffffff4a(%rip)
a49c(4): mov 0x8(%r14),%rdi
a4a0(4): lea 0x10(%r14),%rsi
a4a4(5): call 0xffffd63c(%rip)
a4a9(3): test %rax,%rax
a4ac(6): jz 0xffffff34(%rip)
a4b2(5): jmp 0xffffff08(%rip)
a4b7(9): nop 0x0(%rax,%rax,1)
a4c0(3): xor %r9d,%r9d
a4c3(3): test %r10,%r10
a4c6(5): lea 0x30(%rsp),%r11
a4cb(2): jle 0x51(%rip)
a4cd(3): nop (%rax)
a4d0(4): mov 0x10(%rbp),%rax
a4d4(5): mov 0x28(%rsp),%rdi
a4d9(3): mov %r11,%rsi
a4dc(4): mov 0x0(%rax,%r9,8),%r10
a4e0(3): mov %r10,%rdx
a4e3(5): call 0xffffd5fd(%rip)
a4e8(3): test %rax,%rax
a4eb(2): jnz 0x27(%rip)
a4ed(4): lea 0x10(%r14),%rbx
a4f1(4): mov 0x8(%r14),%rdi
a4f5(3): mov %rbx,%rsi
a4f8(5): call 0xffffd5e8(%rip)
a4fd(4): sub $0x1,%rax
a501(3): mov %rax,%rdx
a504(2): js 0xe(%rip)
a506(4): lea 0x8(%r14),%rdi
a50a(3): mov %rbx,%rsi
a50d(5): call 0xffffd753(%rip)
a512(4): add $0x1,%r9
a516(4): cmp %r9,0x8(%rbp)
a51a(2): jnle 0xffffffb6(%rip)
a51c(5): mov 0x30(%rsp),%rdi
a521(5): call 0xffff73af(%rip)
a526(2): xor %eax,%eax
a528(5): mov 0x38(%rsp),%rsi
a52d(9): xor $0x28,%rsi
a536(2): jnz 0x30(%rip)
a538(4): add $0x48,%rsp
a53c(1): pop %rbx
a53d(1): pop %rbp
a53e(2): pop %r12
a540(2): pop %r13
a542(2): pop %r14
a544(2): pop %r15
a546(1): ret near (%rsp)
a547(9): nop 0x0(%rax,%rax,1)
a550(5): mov 0x30(%rsp),%rdi
a555(3): mov %eax,(%rsp)
a558(5): call 0xffff7378(%rip)
a55d(3): mov (%rsp),%eax
a560(2): jmp 0xffffffc8(%rip)
a562(2): xor %edi,%edi
a564(2): jmp 0xffffffbd(%rip)
a566(5): call 0xffff747a(%rip)

"build_trtable" :
a570(2): push %r15
a572(2): push %r14
a574(3): mov %rdi,%r15
a577(2): push %r13
a579(2): push %r12
a57b(5): mov $0x3800,%edi
a580(1): push %rbp
a581(1): push %rbx
a582(7): sub $0x108,%rsp
a589(9): mov $0x28,%rax
a592(8): mov %rax,0xf8(%rsp)
a59a(2): xor %eax,%eax
a59c(5): mov %rsi,0x8(%rsp)
a5a1(5): call 0xffff755f(%rip)
a5a6(3): test %rax,%rax
a5a9(5): mov %rax,0x18(%rsp)
a5ae(6): jz 0x3d2(%rip)
a5b4(5): mov 0x18(%rsp),%rax
a5b9(4): pxor %xmm0,%xmm0
a5bd(7): lea 0x1800(%rax),%rbx
a5c4(5): mov 0x8(%rsp),%rax
a5c9(8): movaps %xmm0,0x90(%rsp)
a5d1(5): mov %rbx,0x40(%rsp)
a5d6(8): movaps %xmm0,0xa0(%rsp)
a5de(5): cmp $0x0,0x10(%rax)
a5e3(8): mov $0x0,0x58(%rax)
a5eb(8): mov $0x0,0x60(%rax)
a5f3(6): jle 0xa77(%rip)
a5f9(5): mov %r15,0x30(%rsp)
a5fe(2): xor %ebp,%ebp
a600(9): mov $0x0,0x10(%rsp)
a609(3): mov %rbx,%r15
a60c(5): mov 0x10(%rsp),%rbx
a611(8): lea 0x0(,%rbx,8),%rax
a619(5): mov %rax,0x20(%rsp)
a61e(5): mov 0x8(%rsp),%rax
a623(4): mov 0x18(%rax),%rax
a627(4): mov 0x0(%rax,%rbx,8),%r13
a62b(5): mov 0x30(%rsp),%rax
a630(4): shl/sal $0x4,%r13
a634(3): add (%rax),%r13
a637(5): movzx 0x8(%r13),%r14d
a63c(4): mov 0x8(%r13),%eax
a640(3): shr $0x8,%eax
a643(4): and $0x3ff,%ax
a647(4): cmp $0x1,%r14d
a64b(6): jz 0x365(%rip)
a651(4): cmp $0x3,%r14d
a655(6): jz 0x7cb(%rip)
a65b(4): cmp $0x5,%r14d
a65f(6): jz 0x681(%rip)
a665(4): cmp $0x7,%r14d
a669(6): jz 0x7e0(%rip)
a66f(5): mov 0x8(%rsp),%rbx
a674(6): add $0x1,0x10(%rsp)
a67a(5): mov 0x10(%rsp),%rax
a67f(4): cmp 0x10(%rbx),%rax
a683(2): jl 0xffffff89(%rip)
a685(3): test %rbp,%rbp
a688(5): mov 0x30(%rsp),%r15
a68d(6): jle 0xa5c(%rip)
a693(4): lea 0x1(%rbp),%rbx
a697(9): mov $0x0,0x78(%rsp)
a6a0(5): mov %rbx,0x70(%rsp)
a6a5(4): shl/sal $0x3,%rbx
a6a9(3): mov %rbx,%rdi
a6ac(5): call 0xffff7454(%rip)
a6b1(3): test %rax,%rax
a6b4(3): mov %rax,%r12
a6b7(8): mov %rax,0x80(%rsp)
a6bf(6): jz 0x800(%rip)
a6c5(a): mov $0x768614336404564053,%rax
a6cf(8): mov $0x0,0x6c(%rsp)
a6d7(3): cmp %rax,%rbp
a6da(6): jnle 0x7e5(%rip)
a6e0(5): lea 0x0(%rbp,%rbp,2),%rax
a6e5(4): shl/sal $0x3,%rax
a6e9(3): mov %rax,%rdi
a6ec(5): mov %rax,0x58(%rsp)
a6f1(5): call 0xffff740f(%rip)
a6f6(3): test %rax,%rax
a6f9(5): mov %rax,0x10(%rsp)
a6fe(6): jz 0x7c1(%rip)
a704(5): mov 0x10(%rsp),%rax
a709(4): sub $0x8,%rbx
a70d(5): mov 0x40(%rsp),%r12
a712(4): pxor %xmm0,%xmm0
a716(5): lea 0x70(%rsp),%r14
a71b(5): mov %rbp,0x20(%rsp)
a720(5): mov $0x0,0x4f(%rsp)
a725(3): mov %r15,%rbp
a728(3): add %rbx,%rax
a72b(5): mov %r12,0x50(%rsp)
a730(3): add %rax,%rbx
a733(5): mov %rax,0x30(%rsp)
a738(5): mov 0x18(%rsp),%rax
a73d(8): movaps %xmm0,0xd0(%rsp)
a745(5): mov %rbx,0x38(%rsp)
a74a(2): xor %ebx,%ebx
a74c(4): lea 0x8(%rax),%r13
a750(5): lea 0x6c(%rsp),%rax
a755(8): movaps %xmm0,0xe0(%rsp)
a75d(5): mov %rax,0x28(%rsp)
a762(9): mov $0x0,0x78(%rsp)
a76b(5): cmp $0x0,0x0(%r13)
a770(2): jle 0x48(%rip)
a772(3): xor %r15d,%r15d
a775(3): nop (%rax)
a778(4): mov 0x8(%r13),%rax
a77c(4): mov 0x0(%rax,%r15,8),%rdx
a780(4): mov 0x18(%rbp),%rax
a784(4): mov 0x0(%rax,%rdx,8),%rax
a788(4): cmp $0xffffffff,%rax
a78c(2): jz 0x22(%rip)
a78e(4): lea 0x0(%rax,%rax,2),%rdx
a792(4): mov 0x30(%rbp),%rax
a796(3): mov %r14,%rdi
a799(4): lea 0x0(%rax,%rdx,8),%rsi
a79d(5): call 0xffffd863(%rip)
a7a2(2): test %eax,%eax
a7a4(4): mov %eax,0x6c(%rsp)
a7a8(6): jnz 0x700(%rip)
a7ae(4): add $0x1,%r15
a7b2(4): cmp %r15,0x0(%r13)
a7b6(2): jnle 0xffffffc2(%rip)
a7b8(5): mov 0x28(%rsp),%rdi
a7bd(2): xor %ecx,%ecx
a7bf(3): mov %rbp,%rsi
a7c2(3): mov %r14,%rdx
a7c5(5): call 0xffffe66b(%rip)
a7ca(5): mov 0x10(%rsp),%rsi
a7cf(3): test %rax,%rax
a7d2(4): mov %rax,0x0(%rsi,%rbx,8)
a7d6(6): jz 0x7b2(%rip)
a7dc(4): cmp $0x0,0x68(%rax)
a7e0(6): js 0x720(%rip)
a7e6(5): mov 0x30(%rsp),%rdi
a7eb(5): mov 0x38(%rsp),%rsi
a7f0(4): mov %rax,0x0(%rdi,%rbx,8)
a7f4(5): mov 0x10(%rsp),%rax
a7f9(4): mov 0x0(%rax,%rbx,8),%rax
a7fd(4): mov %rax,0x0(%rsi,%rbx,8)
a801(8): lea 0xd0(%rsp),%rdx
a809(2): xor %eax,%eax
a80b(4): mov 0x0(%rdx,%rax,1),%rcx
a80f(4): or 0x0(%r12,%rax,1),%rcx
a813(4): mov %rcx,0x0(%rdx,%rax,1)
a817(4): add $0x8,%rax
a81b(4): cmp $0x20,%rax
a81f(2): jnz 0xffffffec(%rip)
a821(4): add $0x1,%rbx
a825(4): add $0x18,%r13
a829(4): add $0x20,%r12
a82d(5): cmp 0x20(%rsp),%rbx
a832(6): jnz 0xffffff30(%rip)
a838(5): cmp $0x0,0x4f(%rsp)
a83d(3): mov %rbp,%r15
a840(5): mov 0x20(%rsp),%rbp
a845(5): mov %rdx,0x20(%rsp)
a84a(6): jnz 0x74f(%rip)
a850(5): mov $0x100,%esi
a855(5): mov $0x8,%edi
a85a(5): call 0xffff7256(%rip)
a85f(3): mov %rax,%r11
a862(5): mov 0x8(%rsp),%rax
a867(3): test %r11,%r11
a86a(4): mov %r11,0x58(%rax)
a86e(6): jz 0x63f(%rip)
a874(5): mov 0x40(%rsp),%rbx
a879(5): mov 0x10(%rsp),%r12
a87e(3): xor %r9d,%r9d
a881(5): mov 0x30(%rsp),%r13
a886(5): mov 0x20(%rsp),%rdx
a88b(4): add $0x20,%rbx
a88f(4): mov 0x0(%rdx,%r9,1),%rax
a893(3): test %rax,%rax
a896(2): jz 0x2e(%rip)
a898(3): mov %r9,%rsi
a89b(5): mov $0x1,%ecx
a8a0(4): shl/sal $0x6,%rsi
a8a4(3): add %r11,%rsi
a8a7(9): nop 0x0(%rax,%rax,1)
a8b0(2): test $0x1,%al
a8b2(6): jnz 0x766(%rip)
a8b8(3): add %rcx,%rcx
a8bb(4): add $0x8,%rsi
a8bf(3): shr $0x1,%rax
a8c2(2): jnz 0xffffffee(%rip)
a8c4(4): add $0x8,%r9
a8c8(4): cmp $0x20,%r9
a8cc(2): jnz 0xffffffc3(%rip)
a8ce(8): test $0x4,0xd1(%rsp)
a8d6(2): jz 0x3c(%rip)
a8d8(2): xor %eax,%eax
a8da(5): mov 0x50(%rsp),%rdx
a8df(2): jmp 0xf(%rip)
a8e1(4): add $0x1,%rax
a8e5(4): add $0x20,%rdx
a8e9(3): cmp %rbp,%rax
a8ec(2): jz 0x26(%rip)
a8ee(7): test $0x400,(%rdx)
a8f5(2): jz 0xffffffec(%rip)
a8f7(5): mov 0x38(%rsp),%rbx
a8fc(5): cmp $0x0,0x4f(%rsp)
a901(4): mov 0x0(%rbx,%rax,8),%rax
a905(4): mov %rax,0x50(%r11)
a909(2): jz 0x9(%rip)
a90b(7): mov %rax,0x850(%r11)
a912(5): mov 0x10(%rsp),%rdi
a917(5): call 0xffff6fb9(%rip)
a91c(8): mov 0x80(%rsp),%rdi
a924(5): call 0xffff6fac(%rip)
a929(5): mov 0x18(%rsp),%rax
a92e(5): mov 0x58(%rsp),%rbx
a933(4): lea 0x10(%rax),%rbp
a937(3): add %rbp,%rbx
a93a(4): mov 0x0(%rbp),%rdi
a93e(4): add $0x18,%rbp
a942(5): call 0xffff6f8e(%rip)
a947(3): cmp %rbp,%rbx
a94a(2): jnz 0xfffffff0(%rip)
a94c(5): mov 0x18(%rsp),%rdi
a951(5): call 0xffff6f7f(%rip)
a956(5): mov $0x1,%eax
a95b(2): jmp 0x27(%rip)
a95d(3): test %rbp,%rbp
a960(8): mov $0x0,0x8(%rbx)
a968(7): mov $0x0,(%rbx)
a96f(6): jnz 0x331(%rip)
a975(5): mov 0x18(%rsp),%rdi
a97a(5): call 0xffff6f56(%rip)
a97f(1): nop 
a980(2): xor %eax,%eax
a982(8): mov 0xf8(%rsp),%rbx
a98a(9): xor $0x28,%rbx
a993(6): jnz 0x751(%rip)
a999(7): add $0x108,%rsp
a9a0(1): pop %rbx
a9a1(1): pop %rbp
a9a2(2): pop %r12
a9a4(2): pop %r13
a9a6(2): pop %r14
a9a8(2): pop %r15
a9aa(1): ret near (%rsp)
a9ab(5): nop 0x0(%rax,%rax,1)
a9b0(5): movzx 0x0(%r13),%ecx
a9b5(8): lea 0x90(%rsp),%r12
a9bd(5): mov $0x1,%edi
a9c2(3): mov %rcx,%rdx
a9c5(3): and $0x3f,%ecx
a9c8(4): shr $0x3,%rdx
a9cc(3): shl/sal %cl,%rdi
a9cf(3): and $0x18,%edx
a9d2(4): or %rdi,0x0(%r12,%rdx,1)
a9d6(3): test %ax,%ax
a9d9(6): jz 0xc7(%rip)
a9df(2): test $0x20,%al
a9e1(6): jnz 0x36f(%rip)
a9e7(2): test $0x80,%al
a9e9(6): jnz 0x29b(%rip)
a9ef(2): test $0x4,%al
a9f1(2): jz 0x54(%rip)
a9f3(4): cmp $0x1,%r14d
a9f7(6): jz 0x3de(%rip)
a9fd(5): mov 0x30(%rsp),%r8
aa02(8): cmp $0x1,0xb4(%r8)
aa0a(6): jle 0x458(%rip)
aa10(4): mov 0x78(%r8),%rdi
aa14(2): xor %esi,%esi
aa16(2): xor %ecx,%ecx
aa18(4): mov 0x0(%rdi,%rcx,8),%rdx
aa1c(3): not %rdx
aa1f(8): or 0xb8(%r8,%rcx,8),%rdx
aa27(4): and 0x0(%r12,%rcx,8),%rdx
aa2b(4): mov %rdx,0x0(%r12,%rcx,8)
aa2f(4): add $0x1,%rcx
aa33(3): or %rdx,%rsi
aa36(4): cmp $0x4,%rcx
aa3a(2): jnz 0xffffffde(%rip)
aa3c(3): test %rsi,%rsi
aa3f(6): jz 0xfffffc30(%rip)
aa45(2): test $0x8,%al
aa47(2): jz 0x59(%rip)
aa49(4): cmp $0x1,%r14d
aa4d(6): jz 0x334(%rip)
aa53(5): mov 0x30(%rsp),%rdi
aa58(7): cmp $0x1,0xb4(%rdi)
aa5f(6): jle 0x33f(%rip)
aa65(4): mov 0x78(%rdi),%rsi
aa69(2): xor %ecx,%ecx
aa6b(2): xor %edx,%edx
aa6d(8): mov 0xb8(%rdi,%rdx,8),%rax
aa75(4): and 0x0(%rsi,%rdx,8),%rax
aa79(3): not %rax
aa7c(4): and 0x0(%r12,%rdx,8),%rax
aa80(4): mov %rax,0x0(%r12,%rdx,8)
aa84(4): add $0x1,%rdx
aa88(3): or %rax,%rcx
aa8b(4): cmp $0x4,%rdx
aa8f(2): jnz 0xffffffde(%rip)
aa91(3): test %rcx,%rcx
aa94(6): jz 0xfffffbdb(%rip)
aa9a(6): nop 0x0(%rax,%rax,1)
aaa0(2): xor %ebx,%ebx
aaa2(3): test %rbp,%rbp
aaa5(6): jle 0x166(%rip)
aaab(5): mov %r13,0x28(%rsp)
aab0(3): mov %r15,%r13
aab3(5): nop 0x0(%rax,%rax,1)
aab8(3): mov %rbx,%r10
aabb(4): shl/sal $0x5,%r10
aabf(4): cmp $0x1,%r14d
aac3(2): jnz 0x25(%rip)
aac5(5): mov 0x28(%rsp),%rax
aaca(3): movzx (%rax),%edx
aacd(3): mov %rdx,%rax
aad0(4): shr $0x3,%rax
aad4(3): and $0x18,%eax
aad7(3): add %r13,%rax
aada(4): mov 0x0(%rax,%r10,1),%rax
aade(4): bt %rdx,%rax
aae2(6): jnb 0x119(%rip)
aae8(5): lea 0x0(%r13,%r10,1),%rdi
aaed(8): lea 0xb0(%rsp),%rsi
aaf5(2): xor %ecx,%ecx
aaf7(2): xor %eax,%eax
aaf9(4): mov 0x0(%r12,%rax,8),%rdx
aafd(4): and 0x0(%rdi,%rax,8),%rdx
ab01(4): mov %rdx,0x0(%rsi,%rax,8)
ab05(4): add $0x1,%rax
ab09(3): or %rdx,%rcx
ab0c(4): cmp $0x4,%rax
ab10(2): jnz 0xffffffe9(%rip)
ab12(3): test %rcx,%rcx
ab15(6): jz 0xe6(%rip)
ab1b(8): lea 0xd0(%rsp),%r11
ab23(3): xor %r15d,%r15d
ab26(3): xor %r9d,%r9d
ab29(2): xor %ecx,%ecx
ab2b(4): mov 0x0(%r12,%rcx,8),%rsi
ab2f(4): mov 0x0(%rdi,%rcx,8),%rax
ab33(3): mov %rsi,%rdx
ab36(3): not %rdx
ab39(3): and %rax,%rdx
ab3c(3): not %rax
ab3f(3): and %rsi,%rax
ab42(4): mov %rdx,0x0(%r11,%rcx,8)
ab46(3): or %rdx,%r9
ab49(4): mov %rax,0x0(%r12,%rcx,8)
ab4d(4): add $0x1,%rcx
ab51(3): or %rax,%r15
ab54(4): cmp $0x4,%rcx
ab58(2): jnz 0xffffffd3(%rip)
ab5a(5): mov 0x18(%rsp),%rdi
ab5f(4): lea 0x0(%rbx,%rbx,2),%rax
ab63(3): test %r9,%r9
ab66(4): lea 0x0(%rdi,%rax,8),%rdx
ab6a(2): jz 0x6a(%rip)
ab6c(3): mov %rbp,%rax
ab6f(9): movdqa 0xd0(%rsp),%xmm0
ab78(4): shl/sal $0x5,%rax
ab7c(3): mov %rdx,%rsi
ab7f(5): mov %rdx,0x38(%rsp)
ab84(3): add %r13,%rax
ab87(3): movups %xmm0,(%rax)
ab8a(9): movdqa 0xe0(%rsp),%xmm0
ab93(4): movups %xmm0,0x10(%rax)
ab97(5): lea 0x0(%rbp,%rbp,2),%rax
ab9c(4): lea 0x0(%rdi,%rax,8),%rdi
aba0(9): movdqa 0xb0(%rsp),%xmm0
aba9(6): movups %xmm0,0x0(%r13,%r10,1)
abaf(9): movdqa 0xc0(%rsp),%xmm0
abb8(6): movups %xmm0,0x10(%r13,%r10,1)
abbe(5): call 0xffffe082(%rip)
abc3(2): test %eax,%eax
abc5(6): jnz 0xdb(%rip)
abcb(5): mov 0x38(%rsp),%rdx
abd0(4): add $0x1,%rbp
abd4(5): mov 0x8(%rsp),%rax
abd9(5): mov 0x20(%rsp),%rsi
abde(3): mov %rdx,%rdi
abe1(4): mov 0x18(%rax),%rax
abe5(4): mov 0x0(%rax,%rsi,1),%rsi
abe9(5): call 0xffffb9b7(%rip)
abee(2): test %al,%al
abf0(6): jz 0xb0(%rip)
abf6(3): test %r15,%r15
abf9(2): jz 0xf(%rip)
abfb(4): add $0x1,%rbx
abff(3): cmp %rbp,%rbx
ac02(6): jl 0xfffffeb6(%rip)
ac08(3): mov %r13,%r15
ac0b(3): cmp %rbx,%rbp
ac0e(6): jnz 0xfffffa61(%rip)
ac14(3): mov %rbp,%rax
ac17(9): movdqa 0x90(%rsp),%xmm0
ac20(4): shl/sal $0x5,%rax
ac24(5): mov 0x20(%rsp),%rbx
ac29(5): mov $0x8,%edi
ac2e(3): add %r15,%rax
ac31(3): movups %xmm0,(%rax)
ac34(9): movdqa 0xa0(%rsp),%xmm0
ac3d(4): movups %xmm0,0x10(%rax)
ac41(5): mov 0x8(%rsp),%rax
ac46(4): mov 0x18(%rax),%rax
ac4a(4): mov 0x0(%rax,%rbx,1),%r13
ac4e(5): mov 0x18(%rsp),%rbx
ac53(5): lea 0x0(%rbp,%rbp,2),%rax
ac58(4): lea 0x0(%rbx,%rax,8),%rbx
ac5c(7): mov $0x1,(%rbx)
ac63(8): mov $0x1,0x8(%rbx)
ac6b(5): call 0xffff6e95(%rip)
ac70(3): test %rax,%rax
ac73(4): mov %rax,0x10(%rbx)
ac77(6): jz 0xfffffce6(%rip)
ac7d(3): mov %r13,(%rax)
ac80(4): add $0x1,%rbp
ac84(4): pxor %xmm0,%xmm0
ac88(5): movaps %xmm0,(%r12)
ac8d(6): movaps %xmm0,0x10(%r12)
ac93(5): jmp 0xfffff9dc(%rip)
ac98(8): nop 0x0(%rax,%rax,1)
aca0(5): mov 0x18(%rsp),%rax
aca5(4): lea 0x10(%rax),%rbx
aca9(5): lea 0x0(%rbp,%rbp,2),%rax
acae(4): lea 0x0(%rbx,%rax,8),%rbp
acb2(6): nop 0x0(%rax,%rax,1)
acb8(3): mov (%rbx),%rdi
acbb(4): add $0x18,%rbx
acbf(5): call 0xffff6c11(%rip)
acc4(3): cmp %rbx,%rbp
acc7(2): jnz 0xfffffff1(%rip)
acc9(5): mov 0x18(%rsp),%rdi
acce(5): call 0xffff6c02(%rip)
acd3(5): jmp 0xfffffcad(%rip)
acd8(8): nop 0x0(%rax,%rax,1)
ace0(5): mov 0x30(%rsp),%rsi
ace5(7): cmp $0x1,0xb4(%rsi)
acec(6): jle 0x109(%rip)
acf2(4): mov 0x78(%rsi),%rsi
acf6(8): lea 0x90(%rsp),%r12
acfe(2): xor %edx,%edx
ad00(4): mov 0x0(%r12,%rdx,1),%rcx
ad04(4): or 0x0(%rsi,%rdx,1),%rcx
ad08(4): mov %rcx,0x0(%r12,%rdx,1)
ad0c(4): add $0x8,%rdx
ad10(4): cmp $0x20,%rdx
ad14(2): jnz 0xffffffec(%rip)
ad16(5): mov 0x30(%rsp),%rbx
ad1b(7): mov 0xd8(%rbx),%rdx
ad22(3): test $0x40,%dl
ad25(2): jnz 0xe(%rip)
ad27(c): and $0xfffffbff,0x90(%rsp)
ad33(6): and $0x80,%edx
ad39(6): jz 0xfffffc9d(%rip)
ad3f(9): and $0xfffffffe,0x90(%rsp)
ad48(5): jmp 0xfffffc8e(%rip)
ad4d(3): nop (%rax)
ad50(8): mov 0x90(%rsp),%rdx
ad58(4): pxor %xmm0,%xmm0
ad5c(3): and $0x4,%dh
ad5f(5): movaps %xmm0,(%r12)
ad64(6): movaps %xmm0,0x10(%r12)
ad6a(6): jz 0xfffff905(%rip)
ad70(c): mov $0x400,0x90(%rsp)
ad7c(5): jmp 0xfffffc6b(%rip)
ad81(5): test $0x40,0xa(%r13)
ad86(6): jnz 0xfffffefe(%rip)
ad8c(5): mov 0x30(%rsp),%rdi
ad91(7): cmp $0x1,0xb4(%rdi)
ad98(6): jnle 0xfffffccd(%rip)
ad9e(5): mov 0x30(%rsp),%rsi
ada3(2): xor %ecx,%ecx
ada5(2): xor %edx,%edx
ada7(8): mov 0xb8(%rsi,%rdx,8),%rax
adaf(3): not %rax
adb2(4): and 0x0(%r12,%rdx,8),%rax
adb6(4): mov %rax,0x0(%r12,%rdx,8)
adba(4): add $0x1,%rdx
adbe(3): or %rax,%rcx
adc1(4): cmp $0x4,%rdx
adc5(2): jnz 0xffffffe2(%rip)
adc7(3): test %rcx,%rcx
adca(6): jnz 0xfffffcd6(%rip)
add0(5): jmp 0xfffff89f(%rip)
add5(5): test $0x40,0xa(%r13)
adda(6): jz 0xfffffeaa(%rip)
ade0(5): mov 0x30(%rsp),%r8
ade5(8): cmp $0x1,0xb4(%r8)
aded(6): jnle 0xfffffc23(%rip)
adf3(2): jmp 0x6f(%rip)
adf5(4): pcmpeqd %xmm0,%xmm0
adf9(8): lea 0x90(%rsp),%r12
ae01(8): movaps %xmm0,0x90(%rsp)
ae09(8): movaps %xmm0,0xa0(%rsp)
ae11(5): jmp 0xffffff05(%rip)
ae16(a): nop 0x0(%rax,%rax,1)
ae20(4): mov 0x0(%r13),%rsi
ae24(8): lea 0x90(%rsp),%r12
ae2c(2): xor %edx,%edx
ae2e(4): mov 0x0(%r12,%rdx,1),%rcx
ae32(4): or 0x0(%rsi,%rdx,1),%rcx
ae36(4): mov %rcx,0x0(%r12,%rdx,1)
ae3a(4): add $0x8,%rdx
ae3e(4): cmp $0x20,%rdx
ae42(2): jnz 0xffffffec(%rip)
ae44(5): jmp 0xfffffb92(%rip)
ae49(4): pcmpeqd %xmm0,%xmm0
ae4d(8): lea 0x90(%rsp),%r12
ae55(8): movaps %xmm0,0x90(%rsp)
ae5d(5): jmp 0xfffffeb9(%rip)
ae62(5): mov 0x30(%rsp),%rdi
ae67(2): xor %esi,%esi
ae69(2): xor %edx,%edx
ae6b(4): mov 0x0(%r12,%rdx,8),%rcx
ae6f(8): and 0xb8(%rdi,%rdx,8),%rcx
ae77(4): mov %rcx,0x0(%r12,%rdx,8)
ae7b(4): add $0x1,%rdx
ae7f(3): or %rcx,%rsi
ae82(4): cmp $0x4,%rdx
ae86(2): jnz 0xffffffe5(%rip)
ae88(3): test %rsi,%rsi
ae8b(6): jnz 0xfffffbba(%rip)
ae91(5): jmp 0xfffff7de(%rip)
ae96(4): mov 0x6c(%rsp),%edx
ae9a(2): test %edx,%edx
ae9c(6): jz 0x8b(%rip)
aea2(6): nop 0x0(%rax,%rax,1)
aea8(5): mov 0x20(%rsp),%rbp
aead(5): mov 0x10(%rsp),%rdi
aeb2(5): call 0xffff6a1e(%rip)
aeb7(8): mov 0x80(%rsp),%r12
aebf(3): mov %r12,%rdi
aec2(5): call 0xffff6a0e(%rip)
aec7(5): mov 0x18(%rsp),%rax
aecc(4): lea 0x10(%rax),%rbx
aed0(5): lea 0x0(%rbp,%rbp,2),%rax
aed5(4): lea 0x0(%rbx,%rax,8),%rbp
aed9(7): nop 0x0(%rax)
aee0(3): mov (%rbx),%rdi
aee3(4): add $0x18,%rbx
aee7(5): call 0xffff69e9(%rip)
aeec(3): cmp %rbx,%rbp
aeef(2): jnz 0xfffffff1(%rip)
aef1(5): mov 0x18(%rsp),%rdi
aef6(5): call 0xffff69da(%rip)
aefb(5): jmp 0xfffffa85(%rip)
af00(5): mov 0x28(%rsp),%rdi
af05(5): mov $0x1,%ecx
af0a(3): mov %r14,%rdx
af0d(3): mov %rbp,%rsi
af10(5): call 0xffffdf20(%rip)
af15(5): mov 0x30(%rsp),%rdi
af1a(3): test %rax,%rax
af1d(4): mov %rax,0x0(%rdi,%rbx,8)
af21(6): jz 0xffffff75(%rip)
af27(5): mov 0x10(%rsp),%rdi
af2c(4): cmp 0x0(%rdi,%rbx,8),%rax
af30(2): jz 0x1b(%rip)
af32(5): movzx 0x4f(%rsp),%edi
af37(7): cmp $0x2,0xb4(%rbp)
af3e(5): mov $0x1,%eax
af43(3): cmovnl %eax,%edi
af46(5): mov %dil,0x4f(%rsp)
af4b(5): mov 0x28(%rsp),%rdi
af50(3): mov %rbp,%rsi
af53(5): mov $0x2,%ecx
af58(3): mov %r14,%rdx
af5b(5): call 0xffffded5(%rip)
af60(5): mov 0x38(%rsp),%rsi
af65(3): test %rax,%rax
af68(4): mov %rax,0x0(%rsi,%rbx,8)
af6c(6): jnz 0xfffff895(%rip)
af72(4): mov 0x6c(%rsp),%eax
af76(2): test %eax,%eax
af78(6): jz 0xfffff889(%rip)
af7e(5): jmp 0xffffff2a(%rip)
af83(5): nop 0x0(%rax,%rax,1)
af88(4): mov 0x6c(%rsp),%ecx
af8c(2): test %ecx,%ecx
af8e(6): jz 0xfffff84e(%rip)
af94(5): jmp 0xffffff14(%rip)
af99(5): mov $0x200,%esi
af9e(5): mov $0x8,%edi
afa3(5): call 0xffff6b0d(%rip)
afa8(3): mov %rax,%r11
afab(5): mov 0x8(%rsp),%rax
afb0(3): test %r11,%r11
afb3(4): mov %r11,0x60(%rax)
afb7(6): jz 0xfffffef6(%rip)
afbd(5): mov 0x40(%rsp),%r13
afc2(5): mov 0x10(%rsp),%r10
afc7(3): mov %r11,%r12
afca(5): mov 0x30(%rsp),%r14
afcf(5): mov 0x20(%rsp),%rdx
afd4(2): xor %ebx,%ebx
afd6(4): add $0x20,%r13
afda(4): mov 0x0(%rdx,%rbx,1),%rax
afde(3): test %rax,%rax
afe1(2): jz 0x1e(%rip)
afe3(3): mov %r12,%rsi
afe6(5): mov $0x1,%ecx
afeb(2): test $0x1,%al
afed(6): jnz 0xaf(%rip)
aff3(3): add %rcx,%rcx
aff6(4): add $0x8,%rsi
affa(3): shr $0x1,%rax
affd(2): jnz 0xffffffee(%rip)
afff(4): add $0x8,%rbx
b003(7): add $0x200,%r12
b00a(4): cmp $0x20,%rbx
b00e(2): jnz 0xffffffcc(%rip)
b010(5): jmp 0xfffff8be(%rip)
b015(3): nop (%rax)
b018(5): mov 0x18(%rsp),%rdi
b01d(8): test %rcx,0x1800(%rdi,%r9,1)
b025(2): jnz 0x72(%rip)
b027(4): lea 0x0(%rbx,%r9,1),%rdi
b02b(3): xor %r8d,%r8d
b02e(2): nop 
b030(3): mov (%rdi),%r10
b033(4): add $0x1,%r8
b037(4): add $0x20,%rdi
b03b(3): and %rcx,%r10
b03e(3): test %r10,%r10
b041(2): jz 0xffffffef(%rip)
b043(4): shl/sal $0x3,%r8
b047(8): test %rcx,0xb8(%r15,%r9,1)
b04f(2): jz 0xf(%rip)
b051(5): mov 0x0(%r13,%r8,1),%rdi
b056(3): mov %rdi,(%rsi)
b059(5): jmp 0xfffff85f(%rip)
b05e(4): mov 0x0(%r12,%r8,1),%rdi
b062(3): mov %rdi,(%rsi)
b065(5): jmp 0xfffff853(%rip)
b06a(5): mov 0x18(%rsp),%rdi
b06f(5): call 0xffff6861(%rip)
b074(5): mov $0x100,%esi
b079(5): mov $0x8,%edi
b07e(5): call 0xffff6a32(%rip)
b083(5): mov 0x8(%rsp),%rbx
b088(3): test %rax,%rax
b08b(4): mov %rax,0x58(%rbx)
b08f(3): setnz %al
b092(5): jmp 0xfffff8f0(%rip)
b097(3): xor %r8d,%r8d
b09a(2): jmp 0xffffffad(%rip)
b09c(5): mov 0x18(%rsp),%rdi
b0a1(8): test %rcx,0x1800(%rdi,%rbx,1)
b0a9(2): jnz 0x37(%rip)
b0ab(5): lea 0x0(%r13,%rbx,1),%r9
b0b0(3): xor %r8d,%r8d
b0b3(3): mov (%r9),%r15
b0b6(4): add $0x1,%r8
b0ba(4): add $0x20,%r9
b0be(3): mov %r8,%rdi
b0c1(3): and %rcx,%r15
b0c4(3): test %r15,%r15
b0c7(2): jz 0xffffffec(%rip)
b0c9(4): mov 0x0(%r10,%rdi,8),%r8
b0cd(3): mov %r8,(%rsi)
b0d0(4): mov 0x0(%r14,%rdi,8),%rdi
b0d4(7): mov %rdi,0x800(%rsi)
b0db(5): jmp 0xffffff18(%rip)
b0e0(2): xor %edi,%edi
b0e2(2): jmp 0xffffffe7(%rip)
b0e4(5): call 0xffff68fc(%rip)
b0e9(5): mov 0x18(%rsp),%rdi
b0ee(5): call 0xffff67e2(%rip)
b0f3(3): test %rbp,%rbp
b0f6(6): jnz 0xfffff88a(%rip)
b0fc(5): jmp 0xffffff78(%rip)

"calc_first" :
b110(4): cmp $0x10,0x30(%rsi)
b114(2): jz 0x64(%rip)
b116(1): push %rbp
b117(1): push %rbx
b118(3): mov %rsi,%rbx
b11b(3): mov %rdi,%rbp
b11e(4): sub $0x8,%rsp
b122(4): mov %rsi,0x18(%rbx)
b126(4): mov 0x30(%rbx),%rdx
b12a(4): mov 0x28(%rsi),%rsi
b12e(5): call 0xffffc152(%rip)
b133(4): cmp $0xffffffff,%rax
b137(3): mov %rax,%rdx
b13a(4): mov %rax,0x38(%rbx)
b13e(2): jz 0x52(%rip)
b140(2): xor %eax,%eax
b142(4): cmp $0xc,0x30(%rbx)
b146(2): jnz 0x26(%rip)
b148(3): mov 0x28(%rbx),%ecx
b14b(4): shl/sal $0x4,%rdx
b14f(4): add 0x0(%rbp),%rdx
b153(6): and $0x3ff,%ecx
b159(3): shl/sal $0x8,%ecx
b15c(2): mov %ecx,%esi
b15e(3): mov 0x8(%rdx),%ecx
b161(6): and $0xfffc00ff,%ecx
b167(2): or %esi,%ecx
b169(3): mov %ecx,0x8(%rdx)
b16c(4): add $0x8,%rsp
b170(1): pop %rbx
b171(1): pop %rbp
b172(1): ret near (%rsp)
b173(5): nop 0x0(%rax,%rax,1)
b178(4): mov 0x8(%rsi),%rax
b17c(4): mov 0x18(%rax),%rdx
b180(4): mov 0x38(%rax),%rax
b184(4): mov %rdx,0x18(%rsi)
b188(4): mov %rax,0x38(%rsi)
b18c(2): xor %eax,%eax
b18e(1): ret near (%rsp)
b18f(1): nop 
b190(5): mov $0xc,%eax
b195(2): jmp 0xffffffd7(%rip)

"free_fail_stack_return.part.24" :
b1a0(2): push %r12
b1a2(1): push %rbp
b1a3(3): mov %rdi,%rbp
b1a6(1): push %rbx
b1a7(4): cmp $0x0,(%rdi)
b1ab(2): jle 0x37(%rip)
b1ad(2): xor %ebx,%ebx
b1af(3): xor %r12d,%r12d
b1b2(6): nop 0x0(%rax,%rax,1)
b1b8(4): mov 0x10(%rbp),%rax
b1bc(4): add $0x1,%r12
b1c0(5): mov 0x28(%rax,%rbx,1),%rdi
b1c5(5): call 0xffff670b(%rip)
b1ca(4): mov 0x10(%rbp),%rax
b1ce(5): mov 0x10(%rax,%rbx,1),%rdi
b1d3(4): add $0x30,%rbx
b1d7(5): call 0xffff66f9(%rip)
b1dc(4): cmp 0x0(%rbp),%r12
b1e0(2): jl 0xffffffd8(%rip)
b1e2(1): pop %rbx
b1e3(4): mov 0x10(%rbp),%rdi
b1e7(1): pop %rbp
b1e8(2): pop %r12
b1ea(5): jmp 0xffff66e6(%rip)

"pop_fail_stack.isra.25" :
b1f0(2): push %r12
b1f2(1): push %rbp
b1f3(1): push %rbx
b1f4(3): mov (%rdi),%rax
b1f7(4): sub $0x1,%rax
b1fb(3): test %rax,%rax
b1fe(3): mov %rax,(%rdi)
b201(2): js 0x64(%rip)
b203(4): lea 0x0(%rax,%rax,2),%rbx
b207(3): mov (%rsi),%rax
b20a(3): mov %rsi,%r12
b20d(4): shl/sal $0x4,%rcx
b211(3): mov %r9,%rbp
b214(3): mov %r8,%rdi
b217(4): shl/sal $0x4,%rbx
b21b(3): add %rbx,%rax
b21e(3): mov (%rax),%rsi
b221(3): mov %rsi,(%rdx)
b224(4): mov 0x10(%rax),%rsi
b228(3): mov %rcx,%rdx
b22b(5): call 0xffff68a5(%rip)
b230(4): mov 0x10(%rbp),%rdi
b234(5): call 0xffff669c(%rip)
b239(4): mov (%r12),%rax
b23d(5): mov 0x10(%rax,%rbx,1),%rdi
b242(5): call 0xffff668e(%rip)
b247(4): add (%r12),%rbx
b24b(5): movdqu 0x18(%rbx),%xmm0
b250(4): movaps %xmm0,0x0(%rbp)
b254(4): mov 0x28(%rbx),%rax
b258(4): mov %rax,0x10(%rbp)
b25c(4): mov 0x8(%rbx),%rax
b260(1): pop %rbx
b261(1): pop %rbp
b262(2): pop %r12
b264(1): ret near (%rsp)
b265(7): lea 0xab94(%rip),%rcx
b26c(7): lea 0xa5bd(%rip),%rsi
b273(7): lea 0xa61e(%rip),%rdi
b27a(5): mov $0x555,%edx
b27f(5): call 0xffff67d1(%rip)

"build_equiv_class.isra.27" :
b290(1): push %rbp
b291(1): push %rbx
b292(3): mov %rdi,%rbp
b295(3): mov %rsi,%rdi
b298(3): mov %rsi,%rbx
b29b(4): sub $0x8,%rsp
b29f(5): call 0xffff6731(%rip)
b2a4(4): cmp $0x1,%rax
b2a8(2): jnz 0x28(%rip)
b2aa(3): movzx (%rbx),%ecx
b2ad(3): mov %rcx,%rdx
b2b0(3): and $0x3f,%ecx
b2b3(4): shr $0x3,%rdx
b2b7(3): shl/sal %cl,%rax
b2ba(3): and $0x18,%edx
b2bd(5): or %rax,0x0(%rbp,%rdx,1)
b2c2(4): add $0x8,%rsp
b2c6(2): xor %eax,%eax
b2c8(1): pop %rbx
b2c9(1): pop %rbp
b2ca(1): ret near (%rsp)
b2cb(5): nop 0x0(%rax,%rax,1)
b2d0(4): add $0x8,%rsp
b2d4(5): mov $0x3,%eax
b2d9(1): pop %rbx
b2da(1): pop %rbp
b2db(1): ret near (%rsp)

"build_charclass.isra.29" :
b2e0(2): push %r14
b2e2(2): push %r13
b2e4(3): mov %rcx,%r13
b2e7(2): push %r12
b2e9(1): push %rbp
b2ea(3): mov %r9,%r12
b2ed(1): push %rbx
b2ee(3): mov %rdi,%rbp
b2f1(3): mov %rsi,%rbx
b2f4(4): sub $0x10,%rsp
b2f8(9): test $0x400000,0x40(%rsp)
b301(2): jz 0x27(%rip)
b303(7): lea 0xa59d(%rip),%rdi
b30a(5): mov $0x6,%ecx
b30f(3): mov %r9,%rsi
b312(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b314(3): setnbe %al
b317(2): sbb $0x0,%al
b319(2): test %al,%al
b31b(6): jnz 0xfb(%rip)
b321(7): lea 0xa579(%rip),%r12
b328(4): mov 0x0(%r13),%rcx
b32c(3): cmp %rcx,(%r8)
b32f(3): mov (%rdx),%rax
b332(6): jz 0x117(%rip)
b338(4): lea 0x1(%rcx),%rdx
b33c(3): mov %r12,%rdi
b33f(4): mov %rdx,0x0(%r13)
b343(4): lea 0x0(%rax,%rcx,8),%r13
b347(5): call 0xffff6749(%rip)
b34c(7): lea 0xa560(%rip),%rdi
b353(4): mov %rax,0x0(%r13)
b357(5): mov $0x6,%ecx
b35c(3): mov %r12,%rsi
b35f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b361(3): setnbe %al
b364(2): sbb $0x0,%al
b366(2): test %al,%al
b368(2): jz 0x70(%rip)
b36a(7): lea 0xa548(%rip),%rdi
b371(5): mov $0x6,%ecx
b376(3): mov %r12,%rsi
b379(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b37b(3): setnbe %al
b37e(2): sbb $0x0,%al
b380(2): test %al,%al
b382(6): jnz 0x106(%rip)
b388(5): call 0xffff68e8(%rip)
b38d(2): xor %ecx,%ecx
b38f(3): test %rbp,%rbp
b392(3): mov (%rax),%rdx
b395(5): mov $0x1,%edi
b39a(6): jnz 0x2c0(%rip)
b3a0(4): test $0x2,0x0(%rdx,%rcx,2)
b3a4(2): jz 0x13(%rip)
b3a6(3): mov %rcx,%rax
b3a9(3): mov %rdi,%rsi
b3ac(4): sar $0x6,%rax
b3b0(3): shl/sal %cl,%rsi
b3b3(4): or %rsi,0x0(%rbx,%rax,8)
b3b7(4): add $0x1,%rcx
b3bb(7): cmp $0x100,%rcx
b3c2(2): jnz 0xffffffde(%rip)
b3c4(2): xor %eax,%eax
b3c6(4): add $0x10,%rsp
b3ca(1): pop %rbx
b3cb(1): pop %rbp
b3cc(2): pop %r12
b3ce(2): pop %r13
b3d0(2): pop %r14
b3d2(1): ret near (%rsp)
b3d3(5): nop 0x0(%rax,%rax,1)
b3d8(5): call 0xffff6898(%rip)
b3dd(2): xor %ecx,%ecx
b3df(3): test %rbp,%rbp
b3e2(3): mov (%rax),%rdx
b3e5(5): mov $0x1,%edi
b3ea(6): jnz 0x1f0(%rip)
b3f0(4): test $0x8,0x0(%rdx,%rcx,2)
b3f4(2): jz 0x13(%rip)
b3f6(3): mov %rcx,%rax
b3f9(3): mov %rdi,%rsi
b3fc(4): sar $0x6,%rax
b400(3): shl/sal %cl,%rsi
b403(4): or %rsi,0x0(%rbx,%rax,8)
b407(4): add $0x1,%rcx
b40b(7): cmp $0x100,%rcx
b412(2): jnz 0xffffffde(%rip)
b414(2): jmp 0xffffffb0(%rip)
b416(7): lea 0xa490(%rip),%rdi
b41d(5): mov $0x6,%ecx
b422(3): mov %r9,%rsi
b425(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b427(4): mov 0x0(%r13),%rcx
b42b(3): setnbe %al
b42e(2): sbb $0x0,%al
b430(2): test %al,%al
b432(7): lea 0xa468(%rip),%rax
b439(4): cmove %rax,%r12
b43d(3): cmp %rcx,(%r8)
b440(3): mov (%rdx),%rax
b443(6): jnz 0xfffffef5(%rip)
b449(5): lea 0x1(%rcx,%rcx,1),%r14
b44e(3): mov %rax,%rdi
b451(5): mov %r8,0x8(%rsp)
b456(4): mov %rdx,(%rsp)
b45a(8): lea 0x0(,%r14,8),%rsi
b462(5): call 0xffff66fe(%rip)
b467(3): test %rax,%rax
b46a(6): jz 0x31e(%rip)
b470(4): mov (%rsp),%rdx
b474(5): mov 0x8(%rsp),%r8
b479(3): mov %rax,(%rdx)
b47c(3): mov %r14,(%r8)
b47f(4): mov 0x0(%r13),%rcx
b483(5): jmp 0xfffffeb5(%rip)
b488(7): lea 0xa41e(%rip),%rdi
b48f(5): mov $0x6,%ecx
b494(3): mov %r12,%rsi
b497(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b499(3): setnbe %al
b49c(2): sbb $0x0,%al
b49e(2): test %al,%al
b4a0(2): jz 0x6a(%rip)
b4a2(7): lea 0xa416(%rip),%rdi
b4a9(5): mov $0x6,%ecx
b4ae(3): mov %r12,%rsi
b4b1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b4b3(3): setnbe %al
b4b6(2): sbb $0x0,%al
b4b8(2): test %al,%al
b4ba(6): jnz 0x98(%rip)
b4c0(5): call 0xffff67b0(%rip)
b4c5(2): xor %ecx,%ecx
b4c7(3): test %rbp,%rbp
b4ca(3): mov (%rax),%rdx
b4cd(5): mov $0x1,%edi
b4d2(6): jnz 0x35c(%rip)
b4d8(8): nop 0x0(%rax,%rax,1)
b4e0(5): test $0x20,0x1(%rdx,%rcx,2)
b4e5(2): jz 0x13(%rip)
b4e7(3): mov %rcx,%rax
b4ea(3): mov %rdi,%rsi
b4ed(4): sar $0x6,%rax
b4f1(3): shl/sal %cl,%rsi
b4f4(4): or %rsi,0x0(%rbx,%rax,8)
b4f8(4): add $0x1,%rcx
b4fc(7): cmp $0x100,%rcx
b503(2): jnz 0xffffffdd(%rip)
b505(5): jmp 0xfffffebf(%rip)
b50a(5): call 0xffff6766(%rip)
b50f(2): xor %ecx,%ecx
b511(3): test %rbp,%rbp
b514(3): mov (%rax),%rdx
b517(5): mov $0x1,%edi
b51c(6): jnz 0x1d6(%rip)
b522(6): nop 0x0(%rax,%rax,1)
b528(5): test $0x2,0x1(%rdx,%rcx,2)
b52d(2): jz 0x13(%rip)
b52f(3): mov %rcx,%rax
b532(3): mov %rdi,%rsi
b535(4): sar $0x6,%rax
b539(3): shl/sal %cl,%rsi
b53c(4): or %rsi,0x0(%rbx,%rax,8)
b540(4): add $0x1,%rcx
b544(7): cmp $0x100,%rcx
b54b(2): jnz 0xffffffdd(%rip)
b54d(5): jmp 0xfffffe77(%rip)
b552(7): lea 0xa348(%rip),%rdi
b559(5): mov $0x6,%ecx
b55e(3): mov %r12,%rsi
b561(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b563(3): setnbe %al
b566(2): sbb $0x0,%al
b568(2): test %al,%al
b56a(6): jz 0xa9(%rip)
b570(7): lea 0xa367(%rip),%rdi
b577(5): mov $0x6,%ecx
b57c(3): mov %r12,%rsi
b57f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b581(3): setnbe %al
b584(2): sbb $0x0,%al
b586(2): test %al,%al
b588(6): jnz 0x10b(%rip)
b58e(5): call 0xffff66e2(%rip)
b593(2): xor %ecx,%ecx
b595(3): test %rbp,%rbp
b598(3): mov (%rax),%rdx
b59b(5): mov $0x1,%edi
b5a0(6): jnz 0x4aa(%rip)
b5a6(a): nop 0x0(%rax,%rax,1)
b5b0(5): test $0x8,0x1(%rdx,%rcx,2)
b5b5(2): jz 0x13(%rip)
b5b7(3): mov %rcx,%rax
b5ba(3): mov %rdi,%rsi
b5bd(4): sar $0x6,%rax
b5c1(3): shl/sal %cl,%rsi
b5c4(4): or %rsi,0x0(%rbx,%rax,8)
b5c8(4): add $0x1,%rcx
b5cc(7): cmp $0x100,%rcx
b5d3(2): jnz 0xffffffdd(%rip)
b5d5(5): jmp 0xfffffdef(%rip)
b5da(2): xor %eax,%eax
b5dc(4): nop 0x0(%rax)
b5e0(4): test $0x8,0x0(%rdx,%rax,2)
b5e4(2): jz 0x1e(%rip)
b5e6(5): movzx 0x0(%rbp,%rax,1),%ecx
b5eb(3): mov %rdi,%r10
b5ee(3): mov %rcx,%rsi
b5f1(3): and $0x3f,%ecx
b5f4(4): shr $0x3,%rsi
b5f8(3): shl/sal %cl,%r10
b5fb(3): and $0x18,%esi
b5fe(4): or %r10,0x0(%rbx,%rsi,1)
b602(4): add $0x1,%rax
b606(6): cmp $0x100,%rax
b60c(2): jnz 0xffffffd4(%rip)
b60e(5): jmp 0xfffffdb6(%rip)
b613(5): call 0xffff665d(%rip)
b618(2): xor %ecx,%ecx
b61a(3): test %rbp,%rbp
b61d(3): mov (%rax),%rdx
b620(5): mov $0x1,%edi
b625(6): jnz 0x1d3(%rip)
b62b(5): nop 0x0(%rax,%rax,1)
b630(5): test $0x4,0x1(%rdx,%rcx,2)
b635(2): jz 0x13(%rip)
b637(3): mov %rcx,%rax
b63a(3): mov %rdi,%rsi
b63d(4): sar $0x6,%rax
b641(3): shl/sal %cl,%rsi
b644(4): or %rsi,0x0(%rbx,%rax,8)
b648(4): add $0x1,%rcx
b64c(7): cmp $0x100,%rcx
b653(2): jnz 0xffffffdd(%rip)
b655(5): jmp 0xfffffd6f(%rip)
b65a(2): xor %eax,%eax
b65c(4): nop 0x0(%rax)
b660(4): test $0x2,0x0(%rdx,%rax,2)
b664(2): jz 0x1e(%rip)
b666(5): movzx 0x0(%rbp,%rax,1),%ecx
b66b(3): mov %rdi,%r11
b66e(3): mov %rcx,%rsi
b671(3): and $0x3f,%ecx
b674(4): shr $0x3,%rsi
b678(3): shl/sal %cl,%r11
b67b(3): and $0x18,%esi
b67e(4): or %r11,0x0(%rbx,%rsi,1)
b682(4): add $0x1,%rax
b686(6): cmp $0x100,%rax
b68c(2): jnz 0xffffffd4(%rip)
b68e(5): jmp 0xfffffd36(%rip)
b693(7): lea 0xa22b(%rip),%rdi
b69a(5): mov $0x6,%ecx
b69f(3): mov %r12,%rsi
b6a2(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b6a4(3): setnbe %al
b6a7(2): sbb $0x0,%al
b6a9(2): test %al,%al
b6ab(2): jnz 0x81(%rip)
b6ad(5): call 0xffff65c3(%rip)
b6b2(2): xor %ecx,%ecx
b6b4(3): test %rbp,%rbp
b6b7(3): mov (%rax),%rdx
b6ba(5): mov $0x1,%edi
b6bf(6): jnz 0x3f8(%rip)
b6c5(3): nop (%rax)
b6c8(5): test $0x40,0x1(%rdx,%rcx,2)
b6cd(2): jz 0x13(%rip)
b6cf(3): mov %rcx,%rax
b6d2(3): mov %rdi,%rsi
b6d5(4): sar $0x6,%rax
b6d9(3): shl/sal %cl,%rsi
b6dc(4): or %rsi,0x0(%rbx,%rax,8)
b6e0(4): add $0x1,%rcx
b6e4(7): cmp $0x100,%rcx
b6eb(2): jnz 0xffffffdd(%rip)
b6ed(5): jmp 0xfffffcd7(%rip)
b6f2(2): xor %eax,%eax
b6f4(4): nop 0x0(%rax)
b6f8(5): test $0x2,0x1(%rdx,%rax,2)
b6fd(2): jz 0x1e(%rip)
b6ff(5): movzx 0x0(%rbp,%rax,1),%ecx
b704(3): mov %rdi,%r14
b707(3): mov %rcx,%rsi
b70a(3): and $0x3f,%ecx
b70d(4): shr $0x3,%rsi
b711(3): shl/sal %cl,%r14
b714(3): and $0x18,%esi
b717(4): or %r14,0x0(%rbx,%rsi,1)
b71b(4): add $0x1,%rax
b71f(6): cmp $0x100,%rax
b725(2): jnz 0xffffffd3(%rip)
b727(5): jmp 0xfffffc9d(%rip)
b72c(7): lea 0xa174(%rip),%rdi
b733(5): mov $0x6,%ecx
b738(3): mov %r12,%rsi
b73b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b73d(3): setnbe %al
b740(2): sbb $0x0,%al
b742(2): test %al,%al
b744(2): jnz 0x4e(%rip)
b746(5): call 0xffff652a(%rip)
b74b(2): xor %ecx,%ecx
b74d(3): test %rbp,%rbp
b750(3): mov (%rax),%rax
b753(5): mov $0x1,%edi
b758(6): jnz 0x328(%rip)
b75e(5): test $0x1,0x1(%rax,%rcx,2)
b763(2): jz 0x13(%rip)
b765(3): mov %rcx,%rdx
b768(3): mov %rdi,%rsi
b76b(4): sar $0x6,%rdx
b76f(3): shl/sal %cl,%rsi
b772(4): or %rsi,0x0(%rbx,%rdx,8)
b776(4): add $0x1,%rcx
b77a(7): cmp $0x100,%rcx
b781(2): jnz 0xffffffdd(%rip)
b783(5): jmp 0xfffffc41(%rip)
b788(5): mov $0xc,%eax
b78d(5): jmp 0xfffffc39(%rip)
b792(7): lea 0xa132(%rip),%rdi
b799(5): mov $0x6,%ecx
b79e(3): mov %r12,%rsi
b7a1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b7a3(3): setnbe %al
b7a6(2): sbb $0x0,%al
b7a8(2): test %al,%al
b7aa(6): jnz 0xf4(%rip)
b7b0(5): call 0xffff64c0(%rip)
b7b5(2): xor %ecx,%ecx
b7b7(3): test %rbp,%rbp
b7ba(3): mov (%rax),%rdx
b7bd(5): mov $0x1,%esi
b7c2(6): jnz 0xa2(%rip)
b7c8(4): test $0x1,0x0(%rdx,%rcx,2)
b7cc(2): jz 0x13(%rip)
b7ce(3): mov %rcx,%rax
b7d1(3): mov %rsi,%rdi
b7d4(4): sar $0x6,%rax
b7d8(3): shl/sal %cl,%rdi
b7db(4): or %rdi,0x0(%rbx,%rax,8)
b7df(4): add $0x1,%rcx
b7e3(7): cmp $0x100,%rcx
b7ea(2): jnz 0xffffffde(%rip)
b7ec(5): jmp 0xfffffbd8(%rip)
b7f1(7): nop 0x0(%rax)
b7f8(2): xor %eax,%eax
b7fa(5): test $0x4,0x1(%rdx,%rax,2)
b7ff(2): jz 0x1e(%rip)
b801(5): movzx 0x0(%rbp,%rax,1),%ecx
b806(3): mov %rdi,%r9
b809(3): mov %rcx,%rsi
b80c(3): and $0x3f,%ecx
b80f(4): shr $0x3,%rsi
b813(3): shl/sal %cl,%r9
b816(3): and $0x18,%esi
b819(4): or %r9,0x0(%rbx,%rsi,1)
b81d(4): add $0x1,%rax
b821(6): cmp $0x100,%rax
b827(2): jnz 0xffffffd3(%rip)
b829(5): jmp 0xfffffb9b(%rip)
b82e(2): xor %eax,%eax
b830(5): test $0x20,0x1(%rdx,%rax,2)
b835(2): jz 0x1e(%rip)
b837(5): movzx 0x0(%rbp,%rax,1),%ecx
b83c(3): mov %rdi,%r9
b83f(3): mov %rcx,%rsi
b842(3): and $0x3f,%ecx
b845(4): shr $0x3,%rsi
b849(3): shl/sal %cl,%r9
b84c(3): and $0x18,%esi
b84f(4): or %r9,0x0(%rbx,%rsi,1)
b853(4): add $0x1,%rax
b857(6): cmp $0x100,%rax
b85d(2): jnz 0xffffffd3(%rip)
b85f(5): jmp 0xfffffb65(%rip)
b864(2): xor %eax,%eax
b866(5): mov $0x1,%edi
b86b(4): test $0x1,0x0(%rdx,%rax,2)
b86f(2): jz 0x1e(%rip)
b871(5): movzx 0x0(%rbp,%rax,1),%ecx
b876(3): mov %rdi,%r14
b879(3): mov %rcx,%rsi
b87c(3): and $0x3f,%ecx
b87f(4): shr $0x3,%rsi
b883(3): shl/sal %cl,%r14
b886(3): and $0x18,%esi
b889(4): or %r14,0x0(%rbx,%rsi,1)
b88d(4): add $0x1,%rax
b891(6): cmp $0x100,%rax
b897(2): jnz 0xffffffd4(%rip)
b899(5): jmp 0xfffffb2b(%rip)
b89e(7): lea 0xa02c(%rip),%rsi
b8a5(3): mov %r12,%rdi
b8a8(5): call 0xffff6218(%rip)
b8ad(2): test %eax,%eax
b8af(2): jnz 0x7b(%rip)
b8b1(5): call 0xffff63bf(%rip)
b8b6(2): xor %ecx,%ecx
b8b8(3): test %rbp,%rbp
b8bb(3): mov (%rax),%rsi
b8be(5): mov $0x1,%edx
b8c3(2): jnz 0x2c(%rip)
b8c5(5): cmp $0x0,0x0(%rsi,%rcx,2)
b8ca(2): jns 0x13(%rip)
b8cc(3): mov %rcx,%rax
b8cf(3): mov %rdx,%rdi
b8d2(4): sar $0x6,%rax
b8d6(3): shl/sal %cl,%rdi
b8d9(4): or %rdi,0x0(%rbx,%rax,8)
b8dd(4): add $0x1,%rcx
b8e1(7): cmp $0x100,%rcx
b8e8(2): jnz 0xffffffdd(%rip)
b8ea(5): jmp 0xfffffada(%rip)
b8ef(2): xor %eax,%eax
b8f1(5): mov $0x1,%edi
b8f6(5): cmp $0x0,0x0(%rsi,%rax,2)
b8fb(2): jns 0x1e(%rip)
b8fd(5): movzx 0x0(%rbp,%rax,1),%ecx
b902(3): mov %rdi,%r9
b905(3): mov %rcx,%rdx
b908(3): and $0x3f,%ecx
b90b(4): shr $0x3,%rdx
b90f(3): shl/sal %cl,%r9
b912(3): and $0x18,%edx
b915(4): or %r9,0x0(%rbx,%rdx,1)
b919(4): add $0x1,%rax
b91d(6): cmp $0x100,%rax
b923(2): jnz 0xffffffd3(%rip)
b925(5): jmp 0xfffffa9f(%rip)
b92a(7): lea 0x9fa6(%rip),%rsi
b931(3): mov %r12,%rdi
b934(5): call 0xffff618c(%rip)
b939(2): test %eax,%eax
b93b(2): jnz 0x79(%rip)
b93d(5): call 0xffff6333(%rip)
b942(2): xor %ecx,%ecx
b944(3): test %rbp,%rbp
b947(3): mov (%rax),%rsi
b94a(5): mov $0x1,%edx
b94f(2): jnz 0x2b(%rip)
b951(4): test $0x4,0x0(%rsi,%rcx,2)
b955(2): jz 0x13(%rip)
b957(3): mov %rcx,%rax
b95a(3): mov %rdx,%rdi
b95d(4): sar $0x6,%rax
b961(3): shl/sal %cl,%rdi
b964(4): or %rdi,0x0(%rbx,%rax,8)
b968(4): add $0x1,%rcx
b96c(7): cmp $0x100,%rcx
b973(2): jnz 0xffffffde(%rip)
b975(5): jmp 0xfffffa4f(%rip)
b97a(2): xor %eax,%eax
b97c(5): mov $0x1,%edi
b981(4): test $0x4,0x0(%rsi,%rax,2)
b985(2): jz 0x1e(%rip)
b987(5): movzx 0x0(%rbp,%rax,1),%ecx
b98c(3): mov %rdi,%r14
b98f(3): mov %rcx,%rdx
b992(3): and $0x3f,%ecx
b995(4): shr $0x3,%rdx
b999(3): shl/sal %cl,%r14
b99c(3): and $0x18,%edx
b99f(4): or %r14,0x0(%rbx,%rdx,1)
b9a3(4): add $0x1,%rax
b9a7(6): cmp $0x100,%rax
b9ad(2): jnz 0xffffffd4(%rip)
b9af(5): jmp 0xfffffa15(%rip)
b9b4(7): lea 0x9f22(%rip),%rsi
b9bb(3): mov %r12,%rdi
b9be(5): call 0xffff6102(%rip)
b9c3(2): test %eax,%eax
b9c5(2): jnz 0x7b(%rip)
b9c7(5): call 0xffff62a9(%rip)
b9cc(2): xor %ecx,%ecx
b9ce(3): test %rbp,%rbp
b9d1(3): mov (%rax),%rsi
b9d4(5): mov $0x1,%edx
b9d9(2): jnz 0x2c(%rip)
b9db(5): test $0x10,0x1(%rsi,%rcx,2)
b9e0(2): jz 0x13(%rip)
b9e2(3): mov %rcx,%rax
b9e5(3): mov %rdx,%rdi
b9e8(4): sar $0x6,%rax
b9ec(3): shl/sal %cl,%rdi
b9ef(4): or %rdi,0x0(%rbx,%rax,8)
b9f3(4): add $0x1,%rcx
b9f7(7): cmp $0x100,%rcx
b9fe(2): jnz 0xffffffdd(%rip)
ba00(5): jmp 0xfffff9c4(%rip)
ba05(2): xor %eax,%eax
ba07(5): mov $0x1,%edi
ba0c(5): test $0x10,0x1(%rsi,%rax,2)
ba11(2): jz 0x1e(%rip)
ba13(5): movzx 0x0(%rbp,%rax,1),%ecx
ba18(3): mov %rdi,%r9
ba1b(3): mov %rcx,%rdx
ba1e(3): and $0x3f,%ecx
ba21(4): shr $0x3,%rdx
ba25(3): shl/sal %cl,%r9
ba28(3): and $0x18,%edx
ba2b(4): or %r9,0x0(%rbx,%rdx,1)
ba2f(4): add $0x1,%rax
ba33(6): cmp $0x100,%rax
ba39(2): jnz 0xffffffd3(%rip)
ba3b(5): jmp 0xfffff989(%rip)
ba40(5): mov $0x4,%eax
ba45(5): jmp 0xfffff981(%rip)
ba4a(2): xor %eax,%eax
ba4c(5): test $0x8,0x1(%rdx,%rax,2)
ba51(2): jz 0x1e(%rip)
ba53(5): movzx 0x0(%rbp,%rax,1),%ecx
ba58(3): mov %rdi,%r14
ba5b(3): mov %rcx,%rsi
ba5e(3): and $0x3f,%ecx
ba61(4): shr $0x3,%rsi
ba65(3): shl/sal %cl,%r14
ba68(3): and $0x18,%esi
ba6b(4): or %r14,0x0(%rbx,%rsi,1)
ba6f(4): add $0x1,%rax
ba73(6): cmp $0x100,%rax
ba79(2): jnz 0xffffffd3(%rip)
ba7b(5): jmp 0xfffff949(%rip)
ba80(2): xor %edx,%edx
ba82(5): test $0x1,0x1(%rax,%rdx,2)
ba87(2): jz 0x1e(%rip)
ba89(5): movzx 0x0(%rbp,%rdx,1),%ecx
ba8e(3): mov %rdi,%r9
ba91(3): mov %rcx,%rsi
ba94(3): and $0x3f,%ecx
ba97(4): shr $0x3,%rsi
ba9b(3): shl/sal %cl,%r9
ba9e(3): and $0x18,%esi
baa1(4): or %r9,0x0(%rbx,%rsi,1)
baa5(4): add $0x1,%rdx
baa9(7): cmp $0x100,%rdx
bab0(2): jnz 0xffffffd2(%rip)
bab2(5): jmp 0xfffff912(%rip)
bab7(2): xor %eax,%eax
bab9(5): test $0x40,0x1(%rdx,%rax,2)
babe(2): jz 0x1e(%rip)
bac0(5): movzx 0x0(%rbp,%rax,1),%ecx
bac5(3): mov %rdi,%r14
bac8(3): mov %rcx,%rsi
bacb(3): and $0x3f,%ecx
bace(4): shr $0x3,%rsi
bad2(3): shl/sal %cl,%r14
bad5(3): and $0x18,%esi
bad8(4): or %r14,0x0(%rbx,%rsi,1)
badc(4): add $0x1,%rax
bae0(6): cmp $0x100,%rax
bae6(2): jnz 0xffffffd3(%rip)
bae8(5): jmp 0xfffff8dc(%rip)

"build_charclass_op" :
baf0(2): push %r15
baf2(2): push %r14
baf4(3): mov %rdx,%r14
baf7(2): push %r13
baf9(2): push %r12
bafb(3): mov %rcx,%r13
bafe(1): push %rbp
baff(1): push %rbx
bb00(3): mov %rdi,%rbp
bb03(5): mov $0x20,%edi
bb08(3): mov %r8d,%r12d
bb0b(4): sub $0x58,%rsp
bb0f(4): mov %rsi,(%rsp)
bb13(5): mov $0x1,%esi
bb18(5): mov %r9,0x8(%rsp)
bb1d(9): mov $0x28,%rax
bb26(5): mov %rax,0x48(%rsp)
bb2b(2): xor %eax,%eax
bb2d(9): mov $0x0,0x18(%rsp)
bb36(5): call 0xffff5f7a(%rip)
bb3b(3): test %rax,%rax
bb3e(6): jz 0x1c2(%rip)
bb44(5): mov $0x1,%esi
bb49(5): mov $0x50,%edi
bb4e(3): mov %rax,%rbx
bb51(5): call 0xffff5f5f(%rip)
bb56(3): test %rax,%rax
bb59(3): mov %rax,%r15
bb5c(6): jz 0x1b4(%rip)
bb62(4): movzx 0x20(%rax),%eax
bb66(4): sub $0x8,%rsp
bb6a(3): mov %r12d,%edx
bb6d(2): push $0x0
bb6f(3): and $0x1,%edx
bb72(5): mov 0x10(%rsp),%rdi
bb77(4): lea 0x48(%r15),%rcx
bb7b(3): mov %r14,%r9
bb7e(3): mov %rbx,%rsi
bb81(5): lea 0x28(%rsp),%r8
bb86(3): and $0xfe,%eax
bb89(2): or %edx,%eax
bb8b(4): lea 0x18(%r15),%rdx
bb8f(4): mov %al,0x20(%r15)
bb93(5): call 0xfffff74d(%rip)
bb98(2): test %eax,%eax
bb9a(1): pop %rdx
bb9b(1): pop %rcx
bb9c(6): jnz 0x194(%rip)
bba2(5): movsx 0x0(%r13),%rcx
bba7(5): mov $0x1,%esi
bbac(2): test %cl,%cl
bbae(2): jz 0x3c(%rip)
bbb0(4): lea 0x3f(%rcx),%rax
bbb4(3): test %rcx,%rcx
bbb7(3): mov %rcx,%rdx
bbba(4): cmovns %rcx,%rax
bbbe(4): sar $0x3f,%rdx
bbc2(4): add $0x1,%r13
bbc6(4): shr $0x3a,%rdx
bbca(4): sar $0x6,%rax
bbce(3): add %rdx,%rcx
bbd1(3): and $0x3f,%ecx
bbd4(3): sub %rdx,%rcx
bbd7(3): mov %rsi,%rdx
bbda(3): shl/sal %cl,%rdx
bbdd(5): movsx 0x0(%r13),%rcx
bbe2(4): or %rdx,0x0(%rbx,%rax,8)
bbe6(2): test %cl,%cl
bbe8(2): jnz 0xffffffc8(%rip)
bbea(3): test %r12b,%r12b
bbed(2): jz 0x15(%rip)
bbef(4): lea 0x20(%rbx),%rdx
bbf3(3): mov %rbx,%rax
bbf6(3): not (%rax)
bbf9(4): add $0x8,%rax
bbfd(3): cmp %rax,%rdx
bc00(2): jnz 0xfffffff6(%rip)
bc02(7): cmp $0x1,0xb4(%rbp)
bc09(2): jle 0x1a(%rip)
bc0b(4): mov 0x78(%rbp),%rcx
bc0f(2): xor %eax,%eax
bc11(4): mov 0x0(%rcx,%rax,1),%rdx
bc15(4): and %rdx,0x0(%rbx,%rax,1)
bc19(4): add $0x8,%rax
bc1d(4): cmp $0x20,%rax
bc21(2): jnz 0xfffffff0(%rip)
bc23(5): lea 0x20(%rsp),%r9
bc28(4): lea 0x70(%rbp),%r12
bc2c(7): lea 0x80(%rbp),%r13
bc33(2): xor %ecx,%ecx
bc35(2): xor %edx,%edx
bc37(5): mov $0x3,0x28(%rsp)
bc3c(3): mov %r9,%r8
bc3f(3): mov %r13,%rsi
bc42(3): mov %r12,%rdi
bc45(5): mov %rbx,0x20(%rsp)
bc4a(4): mov %r9,(%rsp)
bc4e(5): call 0xffffcb52(%rip)
bc53(3): test %rax,%rax
bc56(3): mov %rax,%r14
bc59(6): jz 0x97(%rip)
bc5f(7): cmp $0x1,0xb4(%rbp)
bc66(2): jle 0x7a(%rip)
bc68(7): or $0x2,0xb0(%rbp)
bc6f(4): mov (%rsp),%r9
bc73(2): xor %ecx,%ecx
bc75(2): xor %edx,%edx
bc77(3): mov %r13,%rsi
bc7a(3): mov %r12,%rdi
bc7d(5): mov $0x6,0x28(%rsp)
bc82(5): mov %r15,0x20(%rsp)
bc87(3): mov %r9,%r8
bc8a(5): call 0xffffcb16(%rip)
bc8f(3): test %rax,%rax
bc92(2): jz 0x5e(%rip)
bc94(5): lea 0x30(%rsp),%r8
bc99(3): mov %r14,%rdx
bc9c(3): mov %rax,%rcx
bc9f(3): mov %r13,%rsi
bca2(3): mov %r12,%rdi
bca5(5): mov $0xa,0x38(%rsp)
bcaa(5): call 0xffffcaf6(%rip)
bcaf(3): mov %rax,%r14
bcb2(5): mov 0x48(%rsp),%rdi
bcb7(9): xor $0x28,%rdi
bcc0(3): mov %r14,%rax
bcc3(6): jnz 0x92(%rip)
bcc9(4): add $0x58,%rsp
bccd(1): pop %rbx
bcce(1): pop %rbp
bccf(2): pop %r12
bcd1(2): pop %r13
bcd3(2): pop %r14
bcd5(2): pop %r15
bcd7(1): ret near (%rsp)
bcd8(8): nop 0x0(%rax,%rax,1)
bce0(3): mov %r15,%rdi
bce3(5): call 0xffffb51d(%rip)
bce8(2): jmp 0xffffffca(%rip)
bcea(6): nop 0x0(%rax,%rax,1)
bcf0(3): mov %rbx,%rdi
bcf3(5): call 0xffff5bdd(%rip)
bcf8(3): mov %r15,%rdi
bcfb(5): call 0xffffb505(%rip)
bd00(5): mov 0x8(%rsp),%rax
bd05(3): xor %r14d,%r14d
bd08(6): mov $0xc,(%rax)
bd0e(2): jmp 0xffffffa4(%rip)
bd10(3): mov %rbx,%rdi
bd13(3): xor %r14d,%r14d
bd16(5): call 0xffff5bba(%rip)
bd1b(5): mov 0x8(%rsp),%rax
bd20(6): mov $0xc,(%rax)
bd26(2): jmp 0xffffff8c(%rip)
bd28(8): nop 0x0(%rax,%rax,1)
bd30(3): mov %rbx,%rdi
bd33(3): mov %eax,(%rsp)
bd36(3): xor %r14d,%r14d
bd39(5): call 0xffff5b97(%rip)
bd3e(3): mov %r15,%rdi
bd41(5): call 0xffffb4bf(%rip)
bd46(5): mov 0x8(%rsp),%rdi
bd4b(3): mov (%rsp),%eax
bd4e(2): mov %eax,(%rdi)
bd50(5): jmp 0xffffff62(%rip)
bd55(5): call 0xffff5c8b(%rip)

"re_compile_fastmap_iter.isra.30" :
bd60(2): push %r15
bd62(2): push %r14
bd64(3): mov %rdi,%rax
bd67(2): push %r13
bd69(2): push %r12
bd6b(1): push %rbp
bd6c(1): push %rbx
bd6d(2): xor %ebx,%ebx
bd6f(3): mov %rcx,%rbp
bd72(7): sub $0x178,%rsp
bd79(3): mov (%rax),%rax
bd7c(5): mov %rdi,0x30(%rsp)
bd81(5): mov %rsi,0x20(%rsp)
bd86(9): mov $0x28,%rdi
bd8f(8): mov %rdi,0x168(%rsp)
bd97(2): xor %edi,%edi
bd99(7): cmp $0x1,0xb4(%rax)
bda0(5): mov %rdx,0x28(%rsp)
bda5(5): mov %rax,0x8(%rsp)
bdaa(2): jnz 0x19(%rip)
bdac(5): mov 0x30(%rsp),%rax
bdb1(4): mov 0x18(%rax),%rax
bdb5(3): mov %rax,%rbx
bdb8(4): mov %rax,(%rsp)
bdbc(4): shr $0x16,%rbx
bdc0(3): and $0x1,%ebx
bdc3(5): mov 0x20(%rsp),%rax
bdc8(4): cmp $0x0,(%rax)
bdcc(6): jle 0x411(%rip)
bdd2(5): lea 0x58(%rsp),%rax
bdd7(8): mov $0x0,(%rsp)
bddf(5): mov %rax,0x40(%rsp)
bde4(5): lea 0x54(%rsp),%rax
bde9(5): mov %rax,0x48(%rsp)
bdee(5): lea 0x60(%rsp),%rax
bdf3(5): mov %rax,0x38(%rsp)
bdf8(2): jmp 0x46(%rip)
bdfa(6): nop 0x0(%rax,%rax,1)
be00(3): cmp $0x3,%eax
be03(6): jz 0x2f3(%rip)
be09(3): cmp $0x6,%eax
be0c(6): jz 0x18c(%rip)
be12(3): and $0xfd,%edx
be15(3): cmp $0x5,%dl
be18(6): jz 0x3fc(%rip)
be1e(3): cmp $0x2,%eax
be21(6): jz 0x353(%rip)
be27(5): mov 0x20(%rsp),%rdi
be2c(5): add $0x1,(%rsp)
be31(4): mov (%rsp),%rax
be35(3): cmp (%rdi),%rax
be38(6): jnl 0x3a5(%rip)
be3e(5): mov 0x28(%rsp),%rax
be43(4): mov (%rsp),%rdi
be47(3): mov (%rax),%rax
be4a(4): mov 0x0(%rax,%rdi,8),%r12
be4e(5): mov 0x8(%rsp),%rax
be53(3): mov (%rax),%rcx
be56(3): mov %r12,%rax
be59(4): shl/sal $0x4,%rax
be5d(5): mov %rax,0x10(%rsp)
be62(4): lea 0x0(%rcx,%rax,1),%rsi
be66(4): movzx 0x8(%rsi),%eax
be6a(3): cmp $0x1,%eax
be6d(2): mov %eax,%edx
be6f(2): jnz 0xffffff91(%rip)
be71(4): movzx (%rsi),%r13d
be75(2): test %ebx,%ebx
be77(6): mov $0x1,0x0(%rbp,%r13,1)
be7d(2): jz 0x13(%rip)
be7f(5): call 0xffff5de1(%rip)
be84(3): mov (%rax),%rax
be87(4): movsxd 0x0(%rax,%r13,4),%rax
be8b(5): mov $0x1,0x0(%rbp,%rax,1)
be90(5): mov 0x30(%rsp),%rax
be95(4): test $0x40,0x1a(%rax)
be99(2): jz 0xffffff8e(%rip)
be9b(5): mov 0x8(%rsp),%rsi
bea0(7): cmp $0x1,0xb4(%rsi)
bea7(6): jle 0xffffff80(%rip)
bead(3): mov (%rsi),%rax
beb0(5): mov 0x10(%rsp),%rdi
beb5(4): movzx 0x0(%rax,%rdi,1),%edx
beb9(4): mov %dl,0x60(%rsp)
bebd(5): lea 0x1(%r12),%rdx
bec2(4): cmp %rdx,0x10(%rsi)
bec6(6): jbe 0x340(%rip)
becc(5): lea 0x10(%rax,%rdi,1),%rcx
bed1(3): mov 0x8(%rcx),%eax
bed4(5): and $0x2000ff,%eax
bed9(5): cmp $0x200001,%eax
bede(6): jnz 0x328(%rip)
bee4(4): add $0x20,%rdi
bee8(3): mov %rdi,%r13
beeb(5): mov 0x38(%rsp),%rdi
bef0(4): lea 0x1(%rdi),%rax
bef4(2): jmp 0x27(%rip)
bef6(a): nop 0x0(%rax,%rax,1)
bf00(3): mov (%rsi),%rcx
bf03(3): add %r13,%rcx
bf06(4): add $0x10,%r13
bf0a(3): mov 0x8(%rcx),%edx
bf0d(6): and $0x2000ff,%edx
bf13(6): cmp $0x200001,%edx
bf19(2): jnz 0x1b(%rip)
bf1b(3): movzx (%rcx),%edx
bf1e(4): add $0x1,%rax
bf22(3): mov %dl,0xffffffff(%rax)
bf25(3): mov %rax,%rdx
bf28(3): sub %rdi,%rdx
bf2b(3): add %r12,%rdx
bf2e(4): cmp %rdx,0x10(%rsi)
bf32(2): jnbe 0xffffffce(%rip)
bf34(5): mov 0x38(%rsp),%rsi
bf39(5): mov 0x40(%rsp),%rcx
bf3e(5): mov 0x48(%rsp),%rdi
bf43(3): sub %rsi,%rax
bf46(7): mov $0x0,(%rcx)
bf4d(3): mov %rax,%r12
bf50(3): mov %rax,%rdx
bf53(5): call 0xffff9fed(%rip)
bf58(3): cmp %rax,%r12
bf5b(6): jnz 0xfffffecc(%rip)
bf61(4): mov 0x54(%rsp),%edi
bf65(5): call 0xffff5c7b(%rip)
bf6a(5): mov 0x40(%rsp),%rdx
bf6f(5): mov 0x38(%rsp),%rdi
bf74(2): mov %eax,%esi
bf76(5): call 0xffff5b9a(%rip)
bf7b(4): cmp $0xffffffff,%rax
bf7f(6): jz 0xfffffea8(%rip)
bf85(5): movzx 0x60(%rsp),%eax
bf8a(5): mov $0x1,0x0(%rbp,%rax,1)
bf8f(5): jmp 0xfffffe98(%rip)
bf94(4): nop 0x0(%rax)
bf98(5): mov 0x8(%rsp),%rax
bf9d(3): mov (%rsi),%r12
bfa0(7): cmp $0x1,0xb4(%rax)
bfa7(2): jle 0x26(%rip)
bfa9(6): cmp $0x0,0x48(%r12)
bfaf(6): jnz 0x100(%rip)
bfb5(6): test $0x1,0x20(%r12)
bfbb(6): jnz 0xf4(%rip)
bfc1(6): cmp $0x0,0x40(%r12)
bfc7(6): jnz 0xe8(%rip)
bfcd(3): xor %r13d,%r13d
bfd0(6): cmp $0x0,0x28(%r12)
bfd6(6): jle 0xfffffe51(%rip)
bfdc(3): mov %r12,%r15
bfdf(5): mov 0x40(%rsp),%r14
bfe4(3): mov %rbp,%r12
bfe7(3): mov %r13,%rbp
bfea(3): mov %ebx,%r13d
bfed(2): jmp 0x10(%rip)
bfef(4): add $0x1,%rbp
bff3(4): cmp 0x28(%r15),%rbp
bff7(6): jnl 0xad(%rip)
bffd(7): mov $0x0,(%r14)
c004(3): mov (%r15),%rax
c007(3): mov %r14,%rdx
c00a(5): mov 0x38(%rsp),%rdi
c00f(8): lea 0x0(,%rbp,4),%rbx
c017(3): mov 0x0(%rax,%rbp,4),%esi
c01a(5): call 0xffff5af6(%rip)
c01f(4): cmp $0xffffffff,%rax
c023(2): jz 0x2c(%rip)
c025(5): movzx 0x60(%rsp),%edx
c02a(3): test %r13d,%r13d
c02d(5): mov $0x1,0x0(%r12,%rdx,1)
c032(5): mov %rdx,0x10(%rsp)
c037(2): jz 0x18(%rip)
c039(5): call 0xffff5c27(%rip)
c03e(5): mov 0x10(%rsp),%rdx
c043(3): mov (%rax),%rax
c046(4): movsxd 0x0(%rax,%rdx,4),%rax
c04a(5): mov $0x1,0x0(%r12,%rax,1)
c04f(5): mov 0x30(%rsp),%rax
c054(4): test $0x40,0x1a(%rax)
c058(2): jz 0xffffff97(%rip)
c05a(5): mov 0x8(%rsp),%rax
c05f(7): cmp $0x1,0xb4(%rax)
c066(2): jle 0xffffff89(%rip)
c068(3): mov (%r15),%rax
c06b(3): mov 0x0(%rax,%rbx,1),%edi
c06e(5): call 0xffff5b72(%rip)
c073(5): mov 0x38(%rsp),%rdi
c078(3): mov %r14,%rdx
c07b(2): mov %eax,%esi
c07d(5): call 0xffff5a93(%rip)
c082(4): cmp $0xffffffff,%rax
c086(6): jz 0xffffff69(%rip)
c08c(5): movzx 0x60(%rsp),%eax
c091(4): add $0x1,%rbp
c095(5): mov $0x1,0x0(%r12,%rax,1)
c09a(4): cmp 0x28(%r15),%rbp
c09e(6): jl 0xffffff5f(%rip)
c0a4(3): mov %r13d,%ebx
c0a7(3): mov %r12,%rbp
c0aa(5): jmp 0xfffffd7d(%rip)
c0af(5): mov 0x40(%rsp),%r12
c0b4(5): mov 0x48(%rsp),%r13
c0b9(5): mov $0x0,0x54(%rsp)
c0be(2): nop 
c0c0(2): xor %edi,%edi
c0c2(8): mov $0x0,(%r12)
c0ca(3): mov %r12,%rcx
c0cd(5): mov $0x1,%edx
c0d2(3): mov %r13,%rsi
c0d5(5): call 0xffff9e6b(%rip)
c0da(4): cmp $0xfffffffe,%rax
c0de(2): jnz 0xc(%rip)
c0e0(5): movzx 0x54(%rsp),%eax
c0e5(5): mov $0x1,0x0(%rbp,%rax,1)
c0ea(5): add $0x1,0x54(%rsp)
c0ef(2): jnz 0xffffffd1(%rip)
c0f1(5): jmp 0xfffffd36(%rip)
c0f6(3): mov %rbp,%r13
c0f9(3): xor %r12d,%r12d
c0fc(9): mov $0x0,0x18(%rsp)
c105(5): mov 0x10(%rsp),%rax
c10a(5): mov 0x18(%rsp),%rsi
c10f(3): xor %r14d,%r14d
c112(4): mov 0x0(%rcx,%rax,1),%rax
c116(4): mov 0x0(%rax,%rsi,1),%r15
c11a(6): nop 0x0(%rax,%rax,1)
c120(4): bt %r14,%r15
c124(2): jnb 0x21(%rip)
c126(2): test %ebx,%ebx
c128(6): mov $0x1,0x0(%r13,%r14,1)
c12e(2): jz 0x17(%rip)
c130(5): call 0xffff5b30(%rip)
c135(3): mov (%rax),%rax
c138(4): lea 0x0(%r12,%r14,1),%rdx
c13c(4): movsxd 0x0(%rax,%rdx,4),%rax
c140(5): mov $0x1,0x0(%rbp,%rax,1)
c145(4): add $0x1,%r14
c149(4): cmp $0x40,%r14
c14d(2): jnz 0xffffffd3(%rip)
c14f(4): add $0x40,%r12
c153(6): add $0x8,0x18(%rsp)
c159(4): add $0x40,%r13
c15d(7): cmp $0x100,%r12
c164(6): jz 0xfffffcc3(%rip)
c16a(5): mov 0x8(%rsp),%rax
c16f(3): mov (%rax),%rcx
c172(2): jmp 0xffffff93(%rip)
c174(8): movdqa 0x9f24(%rip),%xmm0
c17c(4): movups %xmm0,0x0(%rbp)
c180(4): movups %xmm0,0x10(%rbp)
c184(4): movups %xmm0,0x20(%rbp)
c188(4): movups %xmm0,0x30(%rbp)
c18c(4): movups %xmm0,0x40(%rbp)
c190(4): movups %xmm0,0x50(%rbp)
c194(4): movups %xmm0,0x60(%rbp)
c198(4): movups %xmm0,0x70(%rbp)
c19c(7): movups %xmm0,0x80(%rbp)
c1a3(7): movups %xmm0,0x90(%rbp)
c1aa(7): movups %xmm0,0xa0(%rbp)
c1b1(7): movups %xmm0,0xb0(%rbp)
c1b8(7): movups %xmm0,0xc0(%rbp)
c1bf(7): movups %xmm0,0xd0(%rbp)
c1c6(7): movups %xmm0,0xe0(%rbp)
c1cd(7): movups %xmm0,0xf0(%rbp)
c1d4(5): mov 0x30(%rsp),%rax
c1d9(4): or $0x1,0x38(%rax)
c1dd(8): mov 0x168(%rsp),%rax
c1e5(9): xor $0x28,%rax
c1ee(6): jnz 0x94(%rip)
c1f4(7): add $0x178,%rsp
c1fb(1): pop %rbx
c1fc(1): pop %rbp
c1fd(2): pop %r12
c1ff(2): pop %r13
c201(2): pop %r14
c203(2): pop %r15
c205(1): ret near (%rsp)
c206(5): mov 0x38(%rsp),%rax
c20b(4): add $0x1,%rax
c20f(5): jmp 0xfffffd25(%rip)
c214(8): movdqa 0x9e84(%rip),%xmm0
c21c(3): cmp $0x2,%eax
c21f(4): movups %xmm0,0x0(%rbp)
c223(4): movups %xmm0,0x10(%rbp)
c227(4): movups %xmm0,0x20(%rbp)
c22b(4): movups %xmm0,0x30(%rbp)
c22f(4): movups %xmm0,0x40(%rbp)
c233(4): movups %xmm0,0x50(%rbp)
c237(4): movups %xmm0,0x60(%rbp)
c23b(4): movups %xmm0,0x70(%rbp)
c23f(7): movups %xmm0,0x80(%rbp)
c246(7): movups %xmm0,0x90(%rbp)
c24d(7): movups %xmm0,0xa0(%rbp)
c254(7): movups %xmm0,0xb0(%rbp)
c25b(7): movups %xmm0,0xc0(%rbp)
c262(7): movups %xmm0,0xd0(%rbp)
c269(7): movups %xmm0,0xe0(%rbp)
c270(7): movups %xmm0,0xf0(%rbp)
c277(6): jnz 0xffffff66(%rip)
c27d(5): jmp 0xffffff57(%rip)
c282(5): call 0xffff575e(%rip)

"check_node_accept_bytes.isra.31" :
c290(4): shl/sal $0x4,%rdx
c294(2): push %r13
c296(2): push %r12
c298(4): lea 0x0(%rdi,%rdx,1),%r9
c29c(1): push %rbp
c29d(1): push %rbx
c29e(4): sub $0x8,%rsp
c2a2(5): movzx 0x8(%r9),%r11d
c2a7(4): cmp $0x7,%r11b
c2ab(6): jz 0x115(%rip)
c2b1(7): cmp $0x1,0x90(%rcx)
c2b8(6): jz 0xc8(%rip)
c2be(3): mov %rsi,%rbx
c2c1(3): mov %rcx,%rdi
c2c4(3): mov %r8,%rsi
c2c7(3): mov %rcx,%r10
c2ca(5): call 0xffffb766(%rip)
c2cf(4): cmp $0x5,%r11b
c2d3(2): mov %eax,%ebp
c2d5(6): jz 0xbb(%rip)
c2db(4): cmp $0x6,%r11b
c2df(6): jnz 0xa1(%rip)
c2e5(3): cmp $0x1,%eax
c2e8(6): jle 0x98(%rip)
c2ee(3): mov (%r9),%r13
c2f1(4): mov 0x40(%r13),%rsi
c2f5(4): mov 0x28(%r13),%rdx
c2f9(3): test %rsi,%rsi
c2fc(2): jnz 0xd(%rip)
c2fe(5): cmp $0x0,0x48(%r13)
c303(6): jz 0xf5(%rip)
c309(4): mov 0x10(%r10),%rax
c30d(3): test %rdx,%rdx
c310(4): mov 0x0(%rax,%r8,4),%r12d
c314(2): jle 0x23(%rip)
c316(4): mov 0x0(%r13),%rcx
c31a(3): cmp (%rcx),%r12d
c31d(2): jz 0x55(%rip)
c31f(2): xor %eax,%eax
c321(2): jmp 0xd(%rip)
c323(5): nop 0x0(%rax,%rax,1)
c328(4): cmp 0x0(%rcx,%rax,4),%r12d
c32c(2): jz 0x46(%rip)
c32e(4): add $0x1,%rax
c332(3): cmp %rdx,%rax
c335(2): jnz 0xfffffff3(%rip)
c337(4): mov 0x48(%r13),%rax
c33b(3): test %rax,%rax
c33e(6): jle 0xde(%rip)
c344(2): xor %ebx,%ebx
c346(2): jmp 0x18(%rip)
c348(8): nop 0x0(%rax,%rax,1)
c350(4): add $0x1,%rbx
c354(4): cmp 0x48(%r13),%rbx
c358(6): jnl 0xc0(%rip)
c35e(4): mov 0x18(%r13),%rax
c362(3): mov %r12d,%edi
c365(4): mov 0x0(%rax,%rbx,8),%rsi
c369(5): call 0xffff5607(%rip)
c36e(2): test %eax,%eax
c370(2): jz 0xffffffe0(%rip)
c372(5): test $0x1,0x20(%r13)
c377(2): jz 0xb(%rip)
c379(7): nop 0x0(%rax)
c380(2): xor %ebp,%ebp
c382(4): add $0x8,%rsp
c386(2): mov %ebp,%eax
c388(1): pop %rbx
c389(1): pop %rbp
c38a(2): pop %r12
c38c(2): pop %r13
c38e(1): ret near (%rsp)
c38f(1): nop 
c390(3): cmp $0x1,%eax
c393(2): jle 0xffffffed(%rip)
c395(3): mov (%rbx),%rax
c398(2): test $0x40,%al
c39a(2): jz 0x16(%rip)
c39c(2): test $0x80,%al
c39e(2): jz 0xffffffe4(%rip)
c3a0(4): mov 0x8(%r10),%rax
c3a4(5): cmp $0x0,0x0(%rax,%r8,1)
c3a9(2): jz 0xffffffd7(%rip)
c3ab(2): jmp 0xffffffd7(%rip)
c3ad(3): nop (%rax)
c3b0(4): mov 0x8(%r10),%rdx
c3b4(5): cmp $0xa,0x0(%rdx,%r8,1)
c3b9(2): jnz 0xffffffe3(%rip)
c3bb(2): jmp 0xffffffc5(%rip)
c3bd(3): nop (%rax)
c3c0(4): mov 0x8(%rcx),%rdx
c3c4(4): lea 0x0(%rdx,%r8,1),%rsi
c3c8(3): movzx (%rsi),%eax
c3cb(2): cmp $0xc1,%al
c3cd(2): jbe 0xffffffb3(%rip)
c3cf(4): mov 0x58(%rcx),%rcx
c3d3(4): lea 0x1(%r8),%rdi
c3d7(3): cmp %rcx,%rdi
c3da(2): jnl 0xffffffa6(%rip)
c3dc(2): cmp $0xdf,%al
c3de(6): movzx 0x1(%rdx,%r8,1),%edx
c3e4(2): jnbe 0x6a(%rip)
c3e6(3): add $0x80,%edx
c3e9(5): mov $0x2,%ebp
c3ee(3): cmp $0x3f,%dl
c3f1(2): jnbe 0xffffff8f(%rip)
c3f3(2): jmp 0xffffff8f(%rip)
c3f5(3): nop (%rax)
c3f8(3): test %rdx,%rdx
c3fb(6): jnz 0xffffff0e(%rip)
c401(5): test $0x1,0x20(%r13)
c406(6): jnz 0xffffff7c(%rip)
c40c(5): jmp 0xffffff74(%rip)
c411(7): nop 0x0(%rax)
c418(4): mov 0x40(%r13),%rsi
c41c(3): test %rsi,%rsi
c41f(2): jle 0xffffffe2(%rip)
c421(4): mov 0x8(%r13),%rdx
c425(2): xor %eax,%eax
c427(2): jmp 0x12(%rip)
c429(7): nop 0x0(%rax)
c430(4): add $0x1,%rax
c434(3): cmp %rsi,%rax
c437(2): jz 0xffffffca(%rip)
c439(4): cmp 0x0(%rdx,%rax,4),%r12d
c43d(2): jl 0xfffffff3(%rip)
c43f(4): mov 0x10(%r13),%rcx
c443(4): cmp 0x0(%rcx,%rax,4),%r12d
c447(2): jnle 0xffffffe9(%rip)
c449(5): jmp 0xffffff29(%rip)
c44e(2): cmp $0xef,%al
c450(2): jnbe 0x48(%rip)
c452(2): cmp $0xe0,%al
c454(2): jnz 0xb(%rip)
c456(3): cmp $0x9f,%dl
c459(6): jbe 0xffffff27(%rip)
c45f(5): mov $0x3,%ebp
c464(3): movsxd %ebp,%rdi
c467(3): add %rdi,%r8
c46a(3): cmp %r8,%rcx
c46d(6): jl 0xffffff13(%rip)
c473(5): mov $0x1,%eax
c478(2): jmp 0xf(%rip)
c47a(4): add $0x1,%rax
c47e(3): cmp %rax,%rdi
c481(6): jle 0xffffff01(%rip)
c487(4): movzx 0x0(%rsi,%rax,1),%ebx
c48b(3): lea 0xffffff80(%rbx),%edx
c48e(3): cmp $0x3f,%dl
c491(2): jbe 0xffffffe9(%rip)
c493(5): jmp 0xfffffeed(%rip)
c498(2): cmp $0xf7,%al
c49a(2): jnbe 0x16(%rip)
c49c(2): cmp $0xf0,%al
c49e(2): jnz 0xb(%rip)
c4a0(3): cmp $0x8f,%dl
c4a3(6): jbe 0xfffffedd(%rip)
c4a9(5): mov $0x4,%ebp
c4ae(2): jmp 0xffffffb6(%rip)
c4b0(2): cmp $0xfb,%al
c4b2(2): jnbe 0x16(%rip)
c4b4(2): cmp $0xf8,%al
c4b6(2): jnz 0xb(%rip)
c4b8(3): cmp $0x87,%dl
c4bb(6): jbe 0xfffffec5(%rip)
c4c1(5): mov $0x5,%ebp
c4c6(2): jmp 0xffffff9e(%rip)
c4c8(2): cmp $0xfd,%al
c4ca(6): jnbe 0xfffffeb6(%rip)
c4d0(2): cmp $0xfc,%al
c4d2(2): jnz 0xb(%rip)
c4d4(3): cmp $0x83,%dl
c4d7(6): jbe 0xfffffea9(%rip)
c4dd(5): mov $0x6,%ebp
c4e2(2): jmp 0xffffff82(%rip)

"check_arrival" :
c4f0(2): push %r15
c4f2(2): push %r14
c4f4(3): mov %rdi,%r15
c4f7(2): push %r13
c4f9(2): push %r12
c4fb(1): push %rbp
c4fc(1): push %rbx
c4fd(3): mov %rcx,%rbp
c500(3): mov %rdx,%rbx
c503(7): sub $0xd8,%rsp
c50a(7): mov 0x98(%rdi),%rcx
c511(4): mov 0x8(%rsi),%r13
c515(9): mov $0x28,%rax
c51e(8): mov %rax,0xc8(%rsp)
c526(2): xor %eax,%eax
c528(3): mov %rdx,%rax
c52b(5): mov %rsi,0x60(%rsp)
c530(5): mov %r8,0x78(%rsp)
c535(4): shl/sal $0x4,%rax
c539(3): add (%rcx),%rax
c53c(5): mov %r9,0x40(%rsp)
c541(5): mov %rcx,0x30(%rsp)
c546(b): mov $0x0,0x88(%rsp)
c551(3): mov (%rax),%rax
c554(5): mov %rax,0x48(%rsp)
c559(7): movsxd 0xe0(%rdi),%rax
c560(3): add %r9,%rax
c563(3): cmp %r13,%rax
c566(6): jnl 0x620(%rip)
c56c(5): mov 0x60(%rsp),%rax
c571(7): mov 0xb8(%r15),%rdx
c578(4): mov 0x48(%r15),%rcx
c57c(3): mov (%rax),%r12
c57f(4): mov 0x10(%rax),%r14
c583(5): mov %rdx,0x68(%rsp)
c588(5): mov %rcx,0x70(%rsp)
c58d(7): mov 0xa0(%r15),%edx
c594(3): test %r12,%r12
c597(7): mov %r14,0xb8(%r15)
c59e(6): jz 0x3e2(%rip)
c5a4(5): lea 0xffffffff(%r12),%rsi
c5a9(4): mov %r12,0x48(%r15)
c5ad(3): mov %r15,%rdi
c5b0(5): call 0xffffd310(%rip)
c5b5(3): cmp %rbp,%r12
c5b8(3): mov %eax,%r13d
c5bb(6): jz 0x3d8(%rip)
c5c1(4): mov 0x0(%r14,%r12,8),%rbp
c5c5(3): test %rbp,%rbp
c5c8(2): jz 0xc(%rip)
c5ca(4): test $0x40,0x68(%rbp)
c5ce(6): jnz 0x522(%rip)
c5d4(4): pxor %xmm0,%xmm0
c5d8(c): mov $0x0,0xa0(%rsp)
c5e4(8): movaps %xmm0,0x90(%rsp)
c5ec(5): cmp 0x40(%rsp),%r12
c5f1(6): jnl 0x327(%rip)
c5f7(7): mov 0xe0(%r15),%ecx
c5fe(2): test %ecx,%ecx
c600(6): js 0x318(%rip)
c606(8): lea 0x90(%rsp),%rbx
c60e(8): lea 0x8(,%r12,8),%rax
c616(4): mov %r12,(%rsp)
c61a(9): mov $0x0,0x20(%rsp)
c623(5): mov %rbx,0x8(%rsp)
c628(8): lea 0xb0(%rsp),%rbx
c630(5): mov %rax,0x10(%rsp)
c635(7): mov 0xb8(%r15),%rax
c63c(5): mov %rbx,0x18(%rsp)
c641(8): lea 0x8c(%rsp),%rbx
c649(5): mov %rbx,0x58(%rsp)
c64e(5): mov 0x10(%rsp),%rcx
c653(c): mov $0x0,0x98(%rsp)
c65f(4): mov 0x0(%rax,%rcx,1),%rsi
c663(3): test %rsi,%rsi
c666(6): jz 0x3c2(%rip)
c66c(5): mov 0x8(%rsp),%rdi
c671(4): add $0x8,%rsi
c675(5): call 0xffffb98b(%rip)
c67a(2): test %eax,%eax
c67c(7): mov %eax,0x88(%rsp)
c683(6): jnz 0x3dd(%rip)
c689(3): test %rbp,%rbp
c68c(6): jz 0x1ac(%rip)
c692(5): cmp $0x0,0x28(%rbp)
c697(5): mov 0x18(%rsp),%rax
c69c(4): pxor %xmm0,%xmm0
c6a0(7): mov 0x98(%r15),%r12
c6a7(b): mov $0x0,0x8c(%rsp)
c6b2(8): mov $0x0,0x10(%rax)
c6ba(3): movaps %xmm0,(%rax)
c6bd(6): jle 0x533(%rip)
c6c3(8): lea 0xd8(%r12),%rax
c6cb(2): xor %ebx,%ebx
c6cd(5): mov %rax,0x28(%rsp)
c6d2(2): jmp 0x47(%rip)
c6d4(4): nop 0x0(%rax)
c6d8(4): mov (%rsp),%rdx
c6dc(3): mov %r15,%rdi
c6df(5): call 0xffffd2d1(%rip)
c6e4(2): test %al,%al
c6e6(2): jz 0x25(%rip)
c6e8(8): lea 0x0(,%r14,8),%r13
c6f0(5): mov 0x18(%r12),%rax
c6f5(5): mov 0x8(%rsp),%rdi
c6fa(4): mov 0x0(%rax,%r13,1),%rsi
c6fe(5): call 0xffff9ea2(%rip)
c703(2): test %al,%al
c705(6): jz 0x343(%rip)
c70b(4): add $0x1,%rbx
c70f(4): cmp 0x28(%rbp),%rbx
c713(6): jnl 0x38d(%rip)
c719(4): mov 0x30(%rbp),%rax
c71d(4): mov (%r12),%rdi
c721(4): mov 0x0(%rax,%rbx,8),%r14
c725(3): mov %r14,%r13
c728(4): shl/sal $0x4,%r13
c72c(4): lea 0x0(%rdi,%r13,1),%rsi
c730(4): test $0x10,0xa(%rsi)
c734(2): jz 0xffffffa4(%rip)
c736(4): mov (%rsp),%r8
c73a(5): mov 0x28(%rsp),%rsi
c73f(3): mov %r15,%rcx
c742(3): mov %r14,%rdx
c745(5): call 0xfffffb4b(%rip)
c74a(3): cmp $0x1,%eax
c74d(6): jle 0x2c3(%rip)
c753(2): cwde 
c755(4): add (%rsp),%rax
c759(5): mov 0x18(%r12),%rdx
c75e(8): lea 0x0(,%r14,8),%r13
c766(4): mov 0x0(%rdx,%r14,8),%rdx
c76a(3): mov %rax,%rcx
c76d(5): mov %rax,0x38(%rsp)
c772(8): lea 0x0(,%rax,8),%r14
c77a(7): mov 0xb8(%r15),%rax
c781(4): mov 0x0(%rax,%rcx,8),%rsi
c785(c): mov $0x0,0xb8(%rsp)
c791(3): test %rsi,%rsi
c794(2): jz 0x25(%rip)
c796(5): mov 0x18(%rsp),%rdi
c79b(4): add $0x8,%rsi
c79f(5): mov %rdx,0x50(%rsp)
c7a4(5): call 0xffffb85c(%rip)
c7a9(2): test %eax,%eax
c7ab(7): mov %eax,0x8c(%rsp)
c7b2(5): mov 0x50(%rsp),%rdx
c7b7(2): jnz 0x59(%rip)
c7b9(5): mov 0x18(%rsp),%rdi
c7be(3): mov %rdx,%rsi
c7c1(5): call 0xffff9ddf(%rip)
c7c6(2): test %al,%al
c7c8(6): jz 0x280(%rip)
c7ce(7): add 0xb8(%r15),%r14
c7d5(5): mov 0x18(%rsp),%rdx
c7da(3): mov %r12,%rsi
c7dd(5): mov 0x58(%rsp),%rdi
c7e2(5): call 0xffffc90e(%rip)
c7e7(5): mov 0x38(%rsp),%rdx
c7ec(3): mov %rax,(%r14)
c7ef(7): mov 0xb8(%r15),%rax
c7f6(5): cmp $0x0,0x0(%rax,%rdx,8)
c7fb(6): jnz 0xfffffef5(%rip)
c801(7): mov 0x8c(%rsp),%edx
c808(2): test %edx,%edx
c80a(6): jz 0xfffffee6(%rip)
c810(8): mov 0xc0(%rsp),%rdi
c818(5): call 0xffff50b8(%rip)
c81d(7): mov 0x8c(%rsp),%eax
c824(2): test %eax,%eax
c826(7): mov %eax,0x88(%rsp)
c82d(6): jnz 0x233(%rip)
c833(5): nop 0x0(%rax,%rax,1)
c838(4): mov (%rsp),%rax
c83c(9): cmp $0x0,0x98(%rsp)
c845(4): lea 0x1(%rax),%rbx
c849(3): mov %rbx,%r12
c84c(2): jz 0x58(%rip)
c84e(7): mov 0x110(%rsp),%ecx
c855(5): mov 0x48(%rsp),%rdx
c85a(5): mov 0x8(%rsp),%rsi
c85f(5): mov 0x30(%rsp),%rdi
c864(5): call 0xffffbc2c(%rip)
c869(2): test %eax,%eax
c86b(7): mov %eax,0x88(%rsp)
c872(6): jnz 0x1ee(%rip)
c878(8): mov 0x110(%rsp),%r8d
c880(5): mov 0x48(%rsp),%rcx
c885(3): mov %rbx,%rdx
c888(5): mov 0x8(%rsp),%rsi
c88d(3): mov %r15,%rdi
c890(5): call 0xffffcb40(%rip)
c895(2): test %eax,%eax
c897(7): mov %eax,0x88(%rsp)
c89e(6): jnz 0x1c2(%rip)
c8a4(7): mov 0xa0(%r15),%edx
c8ab(4): mov (%rsp),%rsi
c8af(3): mov %r15,%rdi
c8b2(5): call 0xffffd00e(%rip)
c8b7(5): mov 0x8(%rsp),%rdx
c8bc(5): mov 0x30(%rsp),%rsi
c8c1(8): lea 0x88(%rsp),%rdi
c8c9(2): mov %eax,%ecx
c8cb(5): call 0xffffc565(%rip)
c8d0(3): test %rax,%rax
c8d3(3): mov %rax,%rbp
c8d6(6): jz 0x1ea(%rip)
c8dc(7): mov 0xb8(%r15),%rax
c8e3(5): mov 0x10(%rsp),%rdx
c8e8(9): mov $0x0,0x20(%rsp)
c8f1(4): mov %rbp,0x0(%rax,%rdx,1)
c8f5(5): cmp %rbx,0x40(%rsp)
c8fa(2): jle 0x1e(%rip)
c8fc(7): movsxd 0xe0(%r15),%rdx
c903(6): add $0x8,0x10(%rsp)
c909(5): cmp 0x20(%rsp),%rdx
c90e(4): mov %rbx,(%rsp)
c912(6): jnl 0xfffffd3c(%rip)
c918(8): mov 0xa0(%rsp),%rdi
c920(5): call 0xffff4fb0(%rip)
c925(7): mov 0xb8(%r15),%rax
c92c(5): mov 0x40(%rsp),%rbx
c931(4): mov 0x0(%rax,%rbx,8),%rax
c935(3): test %rax,%rax
c938(6): jz 0x2dd(%rip)
c93e(5): mov 0x60(%rsp),%rbx
c943(5): mov 0x78(%rsp),%rdx
c948(4): lea 0x18(%rax),%rsi
c94c(3): mov %r12,(%rbx)
c94f(5): mov 0x68(%rsp),%rbx
c954(7): mov %rbx,0xb8(%r15)
c95b(5): mov 0x70(%rsp),%rbx
c960(4): mov %rbx,0x48(%r15)
c964(4): mov 0x10(%rax),%rdi
c968(5): call 0xffffb178(%rip)
c96d(3): test %rax,%rax
c970(3): setz %al
c973(3): movzx %al,%eax
c976(5): jmp 0xfe(%rip)
c97b(5): nop 0x0(%rax,%rax,1)
c980(4): lea 0xffffffff(%rbp),%rsi
c984(4): mov %rbp,0x48(%r15)
c988(3): mov %r15,%rdi
c98b(5): call 0xffffcf35(%rip)
c990(3): mov %eax,%r13d
c993(5): mov $0x8,%edi
c998(c): mov $0x1,0x90(%rsp)
c9a4(c): mov $0x1,0x98(%rsp)
c9b0(5): call 0xffff5150(%rip)
c9b5(3): test %rax,%rax
c9b8(8): mov %rax,0xa0(%rsp)
c9c0(6): jz 0x24b(%rip)
c9c6(3): mov %rbx,(%rax)
c9c9(7): mov 0x110(%rsp),%ecx
c9d0(8): lea 0x90(%rsp),%rbx
c9d8(5): mov 0x48(%rsp),%rdx
c9dd(5): mov 0x30(%rsp),%rdi
c9e2(3): mov %rbp,%r12
c9e5(3): mov %rbx,%rsi
c9e8(b): mov $0x0,0x88(%rsp)
c9f3(5): call 0xffffba9d(%rip)
c9f8(2): test %eax,%eax
c9fa(7): mov %eax,0x88(%rsp)
ca01(6): jz 0x11c(%rip)
ca07(2): jmp 0x59(%rip)
ca09(7): nop 0x0(%rax)
ca10(2): test %eax,%eax
ca12(6): jnz 0xfffffcd6(%rip)
ca18(4): mov (%r12),%rsi
ca1c(3): add %r13,%rsi
ca1f(5): jmp 0xfffffcb9(%rip)
ca24(4): nop 0x0(%rax)
ca28(3): test %rbp,%rbp
ca2b(6): jnz 0xfffffc67(%rip)
ca31(4): mov (%rsp),%rax
ca35(4): lea 0x1(%rax),%rbx
ca39(3): mov %rbx,%r12
ca3c(5): jmp 0xfffffe68(%rip)
ca41(7): nop 0x0(%rax)
ca48(8): mov 0xc0(%rsp),%rdi
ca50(5): call 0xffff4e80(%rip)
ca55(b): mov $0xc,0x88(%rsp)
ca60(8): mov 0xa0(%rsp),%rdi
ca68(5): call 0xffff4e68(%rip)
ca6d(7): mov 0x88(%rsp),%eax
ca74(8): mov 0xc8(%rsp),%rbx
ca7c(9): xor $0x28,%rbx
ca85(6): jnz 0x1b7(%rip)
ca8b(7): add $0xd8,%rsp
ca92(1): pop %rbx
ca93(1): pop %rbp
ca94(2): pop %r12
ca96(2): pop %r13
ca98(2): pop %r14
ca9a(2): pop %r15
ca9c(1): ret near (%rsp)
ca9d(3): nop (%rax)
caa0(8): mov 0xc0(%rsp),%rdi
caa8(5): call 0xffff4e28(%rip)
caad(b): mov $0x0,0x88(%rsp)
cab8(5): jmp 0xfffffd80(%rip)
cabd(3): nop (%rax)
cac0(7): mov 0x88(%rsp),%eax
cac7(2): test %eax,%eax
cac9(2): jnz 0xffffff97(%rip)
cacb(7): mov 0xb8(%r15),%rax
cad2(5): mov 0x10(%rsp),%rdx
cad7(6): add $0x1,0x20(%rsp)
cadd(8): mov $0x0,0x0(%rax,%rdx,1)
cae5(5): jmp 0xfffffe10(%rip)
caea(6): nop 0x0(%rax,%rax,1)
caf0(8): lea 0x90(%rsp),%rbx
caf8(4): lea 0x8(%rbp),%rsi
cafc(3): mov %rbx,%rdi
caff(5): call 0xffffc141(%rip)
cb04(2): test %eax,%eax
cb06(7): mov %eax,0x88(%rsp)
cb0d(6): jnz 0xffffff67(%rip)
cb13(4): test $0x40,0x68(%rbp)
cb17(6): jz 0xfffffad5(%rip)
cb1d(9): cmp $0x0,0x98(%rsp)
cb26(2): jz 0x2c(%rip)
cb28(8): mov 0x110(%rsp),%r8d
cb30(5): mov 0x48(%rsp),%rcx
cb35(3): mov %r12,%rdx
cb38(3): mov %rbx,%rsi
cb3b(3): mov %r15,%rdi
cb3e(5): call 0xffffc892(%rip)
cb43(2): test %eax,%eax
cb45(7): mov %eax,0x88(%rsp)
cb4c(6): jnz 0xffffff14(%rip)
cb52(5): mov 0x30(%rsp),%rsi
cb57(8): lea 0x88(%rsp),%rdi
cb5f(3): mov %r13d,%ecx
cb62(3): mov %rbx,%rdx
cb65(5): call 0xffffc2cb(%rip)
cb6a(3): test %rax,%rax
cb6d(3): mov %rax,%rbp
cb70(6): jz 0x87(%rip)
cb76(7): mov 0xb8(%r15),%rax
cb7d(4): mov %rbp,0x0(%rax,%r12,8)
cb81(5): jmp 0xfffffa6b(%rip)
cb86(4): lea 0x1(%rax),%r12
cb8a(a): mov $0x9223372036854775807,%rax
cb94(3): sub %r13,%rax
cb97(3): cmp %r12,%rax
cb9a(2): jl 0x71(%rip)
cb9c(5): lea 0x0(%r13,%r12,1),%r14
cba1(a): mov $0x2305843009213693951,%rax
cbab(3): cmp %rax,%r14
cbae(2): jnbe 0x5d(%rip)
cbb0(5): mov 0x60(%rsp),%rax
cbb5(8): lea 0x0(,%r14,8),%rsi
cbbd(4): mov 0x10(%rax),%rdi
cbc1(5): call 0xffff4f9f(%rip)
cbc6(3): test %rax,%rax
cbc9(2): jz 0x42(%rip)
cbcb(5): mov 0x60(%rsp),%rcx
cbd0(8): lea 0x0(,%r12,8),%rdx
cbd8(4): lea 0x0(%rax,%r13,8),%rdi
cbdc(2): xor %esi,%esi
cbde(4): mov %rax,0x10(%rcx)
cbe2(4): mov %r14,0x8(%rcx)
cbe6(5): call 0xffff4e7a(%rip)
cbeb(5): jmp 0xfffff981(%rip)
cbf0(2): xor %edi,%edi
cbf2(5): jmp 0xfffffeb6(%rip)
cbf7(7): mov 0x88(%rsp),%esi
cbfe(2): test %esi,%esi
cc00(6): jz 0xffffff76(%rip)
cc06(5): jmp 0xfffffe5a(%rip)
cc0b(5): mov $0xc,%eax
cc10(5): jmp 0xfffffe64(%rip)
cc15(5): mov 0x60(%rsp),%rax
cc1a(3): mov %r12,(%rax)
cc1d(5): mov 0x68(%rsp),%rax
cc22(7): mov %rax,0xb8(%r15)
cc29(5): mov 0x70(%rsp),%rax
cc2e(4): mov %rax,0x48(%r15)
cc32(5): mov $0x1,%eax
cc37(5): jmp 0xfffffe3d(%rip)
cc3c(5): call 0xffff4da4(%rip)

"set_regs" :
cc50(1): push %rbp
cc51(3): mov %rsp,%rbp
cc54(2): push %r15
cc56(2): push %r14
cc58(2): push %r13
cc5a(2): push %r12
cc5c(3): mov %rcx,%r13
cc5f(1): push %rbx
cc60(3): mov %rsi,%r12
cc63(7): sub $0xb8,%rsp
cc6a(7): mov %rdx,0xffffff68(%rbp)
cc71(8): mov $0x0,0xffffffb0(%rbp)
cc79(9): mov $0x28,%rax
cc82(4): mov %rax,0xffffffc8(%rbp)
cc86(2): xor %eax,%eax
cc88(3): mov (%rdi),%rax
cc8b(3): test %r8b,%r8b
cc8e(8): mov $0x2,0xffffffb8(%rbp)
cc96(8): mov $0x0,0xffffffc0(%rbp)
cc9e(7): mov %rax,0xffffff70(%rbp)
cca5(6): jz 0x7a8(%rip)
ccab(5): mov $0x60,%edi
ccb0(5): call 0xffff4e50(%rip)
ccb5(4): lea 0xffffffb0(%rbp),%rcx
ccb9(3): test %rax,%rax
ccbc(4): mov %rax,0xffffffc0(%rbp)
ccc0(7): mov %rcx,0xffffff78(%rbp)
ccc7(6): jz 0x725(%rip)
cccd(7): mov 0xffffff70(%rbp),%rax
ccd4(4): pxor %xmm0,%xmm0
ccd8(8): mov $0x0,0xffffffa0(%rbp)
cce0(7): mov 0x90(%rax),%rbx
cce7(7): mov 0xffffff68(%rbp),%rax
ccee(4): movaps %xmm0,0xffffff90(%rbp)
ccf2(4): shl/sal $0x4,%rax
ccf6(6): cmp $0xfbf,%rax
ccfc(7): mov %rax,0xffffff48(%rbp)
cd03(6): jnbe 0x6f3(%rip)
cd09(4): add $0x10,%rax
cd0d(7): mov $0x0,0xffffff37(%rbp)
cd14(3): sub %rax,%rsp
cd17(5): lea 0xf(%rsp),%rax
cd1c(4): and $0xfffffff0,%rax
cd20(7): mov %rax,0xffffff40(%rbp)
cd27(7): mov 0xffffff48(%rbp),%rdx
cd2e(7): mov 0xffffff40(%rbp),%rdi
cd35(3): mov %r13,%rsi
cd38(5): call 0xffff4d98(%rip)
cd3d(4): lea 0xffffff90(%rbp),%rax
cd41(4): mov 0x0(%r13),%rcx
cd45(7): mov %rax,0xffffff58(%rbp)
cd4c(4): add $0x10,%rax
cd50(4): mov %rcx,0xffffff88(%rbp)
cd54(7): mov %rax,0xffffff38(%rbp)
cd5b(4): lea 0xffffff88(%rbp),%rax
cd5f(7): mov %rax,0xffffff50(%rbp)
cd66(5): jmp 0xe3(%rip)
cd6b(5): nop 0x0(%rax,%rax,1)
cd70(3): cmp $0x9,%esi
cd73(6): jz 0x1ed(%rip)
cd79(3): cmp %rcx,%rax
cd7c(2): jnz 0x10(%rip)
cd7e(8): cmp %rbx,0xb0(%r12)
cd86(6): jz 0x3da(%rip)
cd8c(8): mov 0x98(%r12),%r14
cd94(3): mov (%r14),%rdi
cd97(4): lea 0x0(%rdi,%r9,1),%rsi
cd9b(4): movzx 0x8(%rsi),%eax
cd9f(2): test $0x8,%al
cda1(6): jnz 0x10f(%rip)
cda7(4): test $0x10,0xa(%rsi)
cdab(6): jnz 0x205(%rip)
cdb1(2): cmp $0x4,%al
cdb3(6): jz 0x23d(%rip)
cdb9(4): mov 0xffffff88(%rbp),%rcx
cdbd(3): mov %rcx,%rdx
cdc0(3): mov %r12,%rdi
cdc3(7): mov %rcx,0xffffff60(%rbp)
cdca(5): call 0xffffcbe6(%rip)
cdcf(2): test %al,%al
cdd1(7): mov 0xffffff60(%rbp),%rcx
cdd8(6): jz 0x450(%rip)
cdde(4): mov 0x18(%r14),%rax
cde2(4): lea 0x1(%rcx),%rdx
cde6(4): mov 0x0(%rax,%r15,8),%rbx
cdea(8): cmp $0x0,0xffffff78(%rbp)
cdf2(4): mov %rdx,0xffffff88(%rbp)
cdf6(2): jz 0x3e(%rip)
cdf8(8): cmp 0xa8(%r12),%rdx
ce00(6): jnle 0x436(%rip)
ce06(8): mov 0xb8(%r12),%rax
ce0e(4): mov 0x0(%rax,%rdx,8),%rax
ce12(3): test %rax,%rax
ce15(6): jz 0x421(%rip)
ce1b(4): mov 0x10(%rax),%rdi
ce1f(4): lea 0x18(%rax),%rsi
ce23(3): mov %rbx,%rdx
ce26(5): call 0xffffacba(%rip)
ce2b(3): test %rax,%rax
ce2e(6): jz 0x408(%rip)
ce34(8): mov $0x0,0xffffff98(%rbp)
ce3c(3): test %rbx,%rbx
ce3f(6): js 0x3db(%rip)
ce45(4): mov 0xffffff88(%rbp),%rcx
ce49(4): mov 0x8(%r13),%rax
ce4d(3): cmp %rcx,%rax
ce50(6): jl 0x4f0(%rip)
ce56(7): mov 0xffffff70(%rbp),%rdi
ce5d(3): mov %rbx,%r9
ce60(3): mov %rbx,%r15
ce63(4): shl/sal $0x4,%r9
ce67(3): mov (%rdi),%rdx
ce6a(3): add %r9,%rdx
ce6d(4): movzx 0x8(%rdx),%esi
ce71(3): cmp $0x8,%esi
ce74(6): jnz 0xfffffefc(%rip)
ce7a(3): mov (%rdx),%rdx
ce7d(4): add $0x1,%rdx
ce81(7): cmp %rdx,0xffffff68(%rbp)
ce88(6): jle 0xfffffef1(%rip)
ce8e(4): shl/sal $0x4,%rdx
ce92(3): add %r13,%rdx
ce95(8): mov $0xffffffff,0x8(%rdx)
ce9d(3): mov %rcx,(%rdx)
cea0(4): mov 0x8(%r13),%rax
cea4(5): jmp 0xfffffed5(%rip)
cea9(7): nop 0x0(%rax)
ceb0(8): mov 0xb8(%r12),%rax
ceb8(4): mov 0xffffff88(%rbp),%rdx
cebc(3): mov %rbx,%rsi
cebf(7): mov 0xffffff58(%rbp),%rdi
cec6(4): mov 0x0(%rax,%rdx,8),%r9
ceca(4): mov 0x28(%r14),%rax
cece(4): lea 0x0(%rbx,%rbx,2),%rdx
ced2(7): mov %r9,0xffffff60(%rbp)
ced9(4): lea 0x0(%rax,%rdx,8),%r15
cedd(5): call 0xffff96c3(%rip)
cee2(2): test %al,%al
cee4(7): mov 0xffffff60(%rbp),%r9
ceeb(6): jz 0x4dd(%rip)
cef1(4): mov 0x8(%r15),%r10
cef5(3): test %r10,%r10
cef8(6): jle 0x330(%rip)
cefe(4): mov 0x10(%r15),%r15
cf02(4): mov 0x10(%r9),%r11
cf06(4): lea 0x18(%r9),%r14
cf0a(7): mov $0xffffffff,%rbx
cf11(3): xor %r9d,%r9d
cf14(7): mov %r12,0xffffff60(%rbp)
cf1b(5): nop 0x0(%rax,%rax,1)
cf20(4): mov 0x0(%r15,%r9,8),%r12
cf24(3): mov %r14,%rsi
cf27(3): mov %r11,%rdi
cf2a(3): mov %r12,%rdx
cf2d(5): call 0xffffabb3(%rip)
cf32(3): test %rax,%rax
cf35(2): jz 0xf(%rip)
cf37(4): cmp $0xffffffff,%rbx
cf3b(6): jnz 0x155(%rip)
cf41(3): mov %r12,%rbx
cf44(4): add $0x1,%r9
cf48(3): cmp %r9,%r10
cf4b(2): jnz 0xffffffd5(%rip)
cf4d(7): mov 0xffffff60(%rbp),%r12
cf54(5): jmp 0xfffffee8(%rip)
cf59(7): nop 0x0(%rax)
cf60(3): mov (%rdx),%rdi
cf63(4): lea 0x1(%rdi),%rsi
cf67(7): cmp %rsi,0xffffff68(%rbp)
cf6e(6): jle 0xfffffe0b(%rip)
cf74(4): shl/sal $0x4,%rsi
cf78(5): lea 0x0(%r13,%rsi,1),%rax
cf7d(3): cmp %rcx,(%rax)
cf80(6): jl 0x380(%rip)
cf86(4): test $0x8,0xa(%rdx)
cf8a(2): jz 0x14(%rip)
cf8c(7): mov 0xffffff40(%rbp),%rdi
cf93(5): cmp $0xffffffff,0x0(%rdi,%rsi,1)
cf98(6): jnz 0x3f3(%rip)
cf9e(4): mov %rcx,0x8(%rax)
cfa2(4): mov 0x8(%r13),%rax
cfa6(5): jmp 0xfffffdd3(%rip)
cfab(5): nop 0x0(%rax,%rax,1)
cfb0(4): mov 0xffffff88(%rbp),%r8
cfb4(7): lea 0xd8(%r14),%rsi
cfbb(3): mov %r12,%rcx
cfbe(3): mov %rbx,%rdx
cfc1(7): mov %r9,0xffffff60(%rbp)
cfc8(5): call 0xfffff2c8(%rip)
cfcd(3): movsxd %eax,%rcx
cfd0(3): test %rcx,%rcx
cfd3(6): jnz 0x1fe(%rip)
cfd9(7): mov 0xffffff60(%rbp),%r9
cfe0(3): mov (%r14),%rsi
cfe3(4): mov 0xffffff88(%rbp),%rcx
cfe7(3): add %r9,%rsi
cfea(5): jmp 0xfffffdd3(%rip)
cfef(1): nop 
cff0(3): mov (%rsi),%rax
cff3(4): add $0x1,%rax
cff7(4): shl/sal $0x4,%rax
cffb(3): add %r13,%rax
cffe(4): mov 0x8(%rax),%rdx
d002(3): mov (%rax),%rdi
d005(3): mov %rdx,%rcx
d008(3): sub %rdi,%rcx
d00b(8): cmp $0x0,0xffffff78(%rbp)
d013(6): jz 0x1b5(%rip)
d019(4): cmp $0xffffffff,%rdi
d01d(6): jz 0x219(%rip)
d023(4): cmp $0xffffffff,%rdx
d027(6): jz 0x20f(%rip)
d02d(3): test %rcx,%rcx
d030(6): jz 0x250(%rip)
d036(4): mov 0xffffff88(%rbp),%r15
d03a(5): mov 0x30(%r12),%rdx
d03f(5): mov 0x8(%r12),%rax
d044(3): sub %r15,%rdx
d047(3): cmp %rdx,%rcx
d04a(6): jnle 0x1ec(%rip)
d050(4): lea 0x0(%rax,%r15,1),%rsi
d054(3): add %rax,%rdi
d057(3): mov %rcx,%rdx
d05a(7): mov %rcx,0xffffff60(%rbp)
d061(5): call 0xffff4a1f(%rip)
d066(2): test %eax,%eax
d068(7): mov 0xffffff60(%rbp),%rcx
d06f(6): jnz 0x1c7(%rip)
d075(4): mov 0x18(%r14),%rax
d079(4): lea 0x0(%r15,%rcx,1),%rdx
d07d(4): mov 0x0(%rax,%rbx,8),%rbx
d081(5): jmp 0xfffffd69(%rip)
d086(a): nop 0x0(%rax,%rax,1)
d090(7): mov 0xffffff38(%rbp),%rsi
d097(4): mov 0xffffff98(%rbp),%rdi
d09b(3): mov %rbx,%rdx
d09e(3): mov %r12,%r14
d0a1(7): mov 0xffffff60(%rbp),%r12
d0a8(5): call 0xffffaa38(%rip)
d0ad(3): test %rax,%rax
d0b0(6): jnz 0x1c0(%rip)
d0b6(7): mov 0xffffff78(%rbp),%rcx
d0bd(3): test %rcx,%rcx
d0c0(6): jz 0xfffffd7c(%rip)
d0c6(3): mov (%rcx),%r15
d0c9(4): mov 0xffffff88(%rbp),%rdx
d0cd(4): lea 0x1(%r15),%rax
d0d1(4): cmp 0x8(%rcx),%rax
d0d5(3): mov %rax,(%rcx)
d0d8(6): jz 0x385(%rip)
d0de(4): mov 0x10(%rcx),%rax
d0e2(4): lea 0x0(%r15,%r15,2),%r15
d0e6(4): shl/sal $0x4,%r15
d0ea(3): add %rax,%r15
d0ed(4): mov %r14,0x8(%r15)
d0f1(7): mov 0xffffff48(%rbp),%r14
d0f8(3): mov %rdx,(%r15)
d0fb(3): mov %r14,%rdi
d0fe(5): call 0xffff4a02(%rip)
d103(3): test %rax,%rax
d106(4): mov %rax,0x10(%r15)
d10a(2): jz 0x28(%rip)
d10c(3): mov %r14,%rdx
d10f(3): mov %r13,%rsi
d112(3): mov %rax,%rdi
d115(5): call 0xffff49bb(%rip)
d11a(7): mov 0xffffff58(%rbp),%rsi
d121(4): lea 0x18(%r15),%rdi
d125(5): call 0xffffbb1b(%rip)
d12a(2): test %eax,%eax
d12c(6): jz 0xfffffd10(%rip)
d132(4): mov 0xffffffa0(%rbp),%rdi
d136(5): call 0xffff479a(%rip)
d13b(7): cmp $0x0,0xffffff37(%rbp)
d142(6): jnz 0x399(%rip)
d148(7): mov 0xffffff78(%rbp),%rdi
d14f(5): call 0xffffe051(%rip)
d154(5): mov $0xc,%eax
d159(5): jmp 0x210(%rip)
d15e(2): nop 
d160(8): cmp $0x0,0xffffff78(%rbp)
d168(6): jz 0x334(%rip)
d16e(7): mov 0xffffff68(%rbp),%rcx
d175(3): test %rcx,%rcx
d178(2): jz 0x22(%rip)
d17a(3): mov %r13,%rax
d17d(2): xor %edx,%edx
d17f(1): nop 
d180(4): cmp $0x0,(%rax)
d184(2): js 0x9(%rip)
d186(5): cmp $0xffffffff,0x8(%rax)
d18b(2): jz 0x55(%rip)
d18d(4): add $0x1,%rdx
d191(4): add $0x10,%rax
d195(3): cmp %rdx,%rcx
d198(2): jnz 0xffffffe8(%rip)
d19a(4): mov 0xffffffa0(%rbp),%rdi
d19e(5): call 0xffff4732(%rip)
d1a3(7): cmp $0x0,0xffffff37(%rbp)
d1aa(6): jnz 0x37a(%rip)
d1b0(7): mov 0xffffff78(%rbp),%rdi
d1b7(5): call 0xffffdfe9(%rip)
d1bc(2): xor %eax,%eax
d1be(5): jmp 0x1ab(%rip)
d1c3(5): nop 0x0(%rax,%rax,1)
d1c8(3): test %rcx,%rcx
d1cb(6): jz 0xb5(%rip)
d1d1(4): mov 0xffffff88(%rbp),%r15
d1d5(5): jmp 0xfffffea0(%rip)
d1da(6): nop 0x0(%rax,%rax,1)
d1e0(7): mov 0xffffff78(%rbp),%rdi
d1e7(7): mov 0xffffff58(%rbp),%r9
d1ee(3): mov %r13,%r8
d1f1(7): mov 0xffffff68(%rbp),%rcx
d1f8(7): mov 0xffffff50(%rbp),%rdx
d1ff(4): lea 0x10(%rdi),%rsi
d203(5): call 0xffffdfed(%rip)
d208(3): mov %rax,%r9
d20b(3): mov %rax,%rbx
d20e(3): mov %rax,%r15
d211(4): shl/sal $0x4,%r9
d215(5): jmp 0xfffffb77(%rip)
d21a(4): cmp $0xfffffffe,%rbx
d21e(6): jz 0x1aa(%rip)
d224(4): nop 0x0(%rax)
d228(8): cmp $0x0,0xffffff78(%rbp)
d230(6): jz 0x2bc(%rip)
d236(7): mov 0xffffff78(%rbp),%rdi
d23d(7): mov 0xffffff68(%rbp),%rcx
d244(4): lea 0xffffff88(%rbp),%rdx
d248(7): mov 0xffffff58(%rbp),%r9
d24f(3): mov %r13,%r8
d252(4): lea 0x10(%rdi),%rsi
d256(5): call 0xffffdf9a(%rip)
d25b(4): mov 0xffffff88(%rbp),%rcx
d25f(3): mov %rax,%rbx
d262(5): jmp 0xfffffaf9(%rip)
d267(9): nop 0x0(%rax,%rax,1)
d270(3): mov %r14,%rbx
d273(5): jmp 0xfffffbc9(%rip)
d278(8): nop 0x0(%rax,%rax,1)
d280(7): mov 0xffffff58(%rbp),%rdi
d287(3): mov %rbx,%rsi
d28a(7): mov %r9,0xffffff60(%rbp)
d291(5): call 0xffff930f(%rip)
d296(2): test %al,%al
d298(6): jz 0x130(%rip)
d29e(4): mov 0x28(%r14),%rdx
d2a2(4): lea 0x0(%rbx,%rbx,2),%rax
d2a6(4): mov 0xffffff88(%rbp),%rcx
d2aa(4): lea 0x0(%rdx,%rax,8),%rax
d2ae(7): mov %rcx,0xffffff28(%rbp)
d2b5(4): mov 0x10(%rax),%rax
d2b9(3): mov (%rax),%rbx
d2bc(8): mov 0xb8(%r12),%rax
d2c4(4): mov 0x0(%rax,%rcx,8),%rax
d2c8(3): mov %rbx,%rdx
d2cb(4): mov 0x10(%rax),%rdi
d2cf(4): lea 0x18(%rax),%rsi
d2d3(5): call 0xffffa80d(%rip)
d2d8(3): test %rax,%rax
d2db(6): jnz 0xfffffb61(%rip)
d2e1(7): mov 0xffffff60(%rbp),%r9
d2e8(3): mov (%r14),%rsi
d2eb(7): mov 0xffffff28(%rbp),%rcx
d2f2(3): add %r9,%rsi
d2f5(5): jmp 0xfffffac8(%rip)
d2fa(6): nop 0x0(%rax,%rax,1)
d300(7): mov 0xffffff48(%rbp),%rdx
d307(7): mov 0xffffff40(%rbp),%rdi
d30e(3): mov %r13,%rsi
d311(4): mov %rcx,0x8(%rax)
d315(7): mov %r9,0xffffff28(%rbp)
d31c(7): mov %rcx,0xffffff60(%rbp)
d323(5): call 0xffff47ad(%rip)
d328(4): mov 0x8(%r13),%rax
d32c(7): mov 0xffffff60(%rbp),%rcx
d333(7): mov 0xffffff28(%rbp),%r9
d33a(5): jmp 0xfffffa3f(%rip)
d33f(1): nop 
d340(4): mov 0xffffffa0(%rbp),%rdi
d344(5): call 0xffff458c(%rip)
d349(7): cmp $0x0,0xffffff37(%rbp)
d350(6): jnz 0xdc(%rip)
d356(7): mov 0xffffff78(%rbp),%rdi
d35d(3): test %rdi,%rdi
d360(2): jz 0x7(%rip)
d362(5): call 0xffffde3e(%rip)
d367(2): xor %eax,%eax
d369(4): mov 0xffffffc8(%rbp),%rbx
d36d(9): xor $0x28,%rbx
d376(6): jnz 0x1bf(%rip)
d37c(4): lea 0xffffffd8(%rbp),%rsp
d380(1): pop %rbx
d381(2): pop %r12
d383(2): pop %r13
d385(2): pop %r14
d387(2): pop %r15
d389(1): pop %rbp
d38a(1): ret near (%rsp)
d38b(7): mov 0xffffff48(%rbp),%rdx
d392(3): mov %rdi,%rsi
d395(3): mov %r13,%rdi
d398(7): mov %rcx,0xffffff28(%rbp)
d39f(7): mov %r9,0xffffff60(%rbp)
d3a6(5): call 0xffff472a(%rip)
d3ab(4): mov 0x8(%r13),%rax
d3af(7): mov 0xffffff60(%rbp),%r9
d3b6(7): mov 0xffffff28(%rbp),%rcx
d3bd(5): jmp 0xfffff9bc(%rip)
d3c2(6): nop 0x0(%rax,%rax,1)
d3c8(4): mov 0xffffffa0(%rbp),%rdi
d3cc(5): call 0xffff4504(%rip)
d3d1(7): cmp $0x0,0xffffff37(%rbp)
d3d8(6): jnz 0x103(%rip)
d3de(8): cmp $0x0,0xffffff78(%rbp)
d3e6(6): jnz 0xfffffd62(%rip)
d3ec(5): mov $0xc,%eax
d3f1(5): jmp 0xffffff78(%rip)
d3f6(7): mov 0xffffff48(%rbp),%rdi
d3fd(5): call 0xffff4703(%rip)
d402(3): test %rax,%rax
d405(7): mov %rax,0xffffff40(%rbp)
d40c(7): mov $0x1,0xffffff37(%rbp)
d413(6): jnz 0xfffff914(%rip)
d419(7): mov 0xffffff78(%rbp),%rdi
d420(3): test %rdi,%rdi
d423(2): jz 0xffffffc9(%rip)
d425(5): call 0xffffdd7b(%rip)
d42a(2): jmp 0xffffffc2(%rip)
d42c(7): mov 0xffffff40(%rbp),%rdi
d433(5): call 0xffff449d(%rip)
d438(7): mov 0xffffff78(%rbp),%rdi
d43f(3): test %rdi,%rdi
d442(6): jnz 0xffffff20(%rip)
d448(5): jmp 0xffffff1f(%rip)
d44d(b): mov $0x0,0xffffff78(%rbp)
d458(5): jmp 0xfffff875(%rip)
d45d(4): lea 0x0(%rax,%rax,2),%rsi
d461(7): mov 0xffffff78(%rbp),%rax
d468(7): mov %rdx,0xffffff60(%rbp)
d46f(4): shl/sal $0x5,%rsi
d473(4): mov 0x10(%rax),%rdi
d477(5): call 0xffff46e9(%rip)
d47c(3): test %rax,%rax
d47f(2): jz 0x46(%rip)
d481(7): mov 0xffffff78(%rbp),%rcx
d488(7): mov 0xffffff60(%rbp),%rdx
d48f(4): shl/sal $0x1,0x8(%rcx)
d493(4): mov %rax,0x10(%rcx)
d497(5): jmp 0xfffffc4b(%rip)
d49c(4): mov 0xffffffa0(%rbp),%rdi
d4a0(5): call 0xffff4430(%rip)
d4a5(7): cmp $0x0,0xffffff37(%rbp)
d4ac(6): jz 0xfffffebb(%rip)
d4b2(7): mov 0xffffff40(%rbp),%rdi
d4b9(5): call 0xffff4417(%rip)
d4be(2): xor %eax,%eax
d4c0(5): jmp 0xfffffea9(%rip)
d4c5(4): mov 0xffffffa0(%rbp),%rdi
d4c9(5): call 0xffff4407(%rip)
d4ce(7): cmp $0x0,0xffffff37(%rbp)
d4d5(6): jz 0xfffffc73(%rip)
d4db(7): mov 0xffffff40(%rbp),%rdi
d4e2(5): call 0xffff43ee(%rip)
d4e7(5): jmp 0xfffffef7(%rip)
d4ec(4): mov 0xffffffa0(%rbp),%rdi
d4f0(5): call 0xffff43e0(%rip)
d4f5(7): cmp $0x0,0xffffff37(%rbp)
d4fc(5): mov $0x1,%eax
d501(6): jz 0xfffffe68(%rip)
d507(7): mov 0xffffff40(%rbp),%rdi
d50e(6): mov %eax,0xffffff78(%rbp)
d514(5): call 0xffff43bc(%rip)
d519(6): mov 0xffffff78(%rbp),%eax
d51f(5): jmp 0xfffffe4a(%rip)
d524(7): mov 0xffffff40(%rbp),%rdi
d52b(5): call 0xffff43a5(%rip)
d530(5): jmp 0xfffffc80(%rip)
d535(5): call 0xffff44ab(%rip)

"get_subexp_sub.isra.32" :
d540(2): push %r15
d542(2): push %r14
d544(3): mov %rcx,%r14
d547(2): push %r13
d549(2): push %r12
d54b(3): mov %rsi,%r13
d54e(1): push %rbp
d54f(1): push %rbx
d550(4): lea 0x10(%rdx),%rsi
d554(3): mov %rdx,%rbp
d557(3): mov %r8,%r9
d55a(3): mov %r8,%r12
d55d(4): sub $0x20,%rsp
d561(4): mov 0x8(%rdx),%rcx
d565(3): mov %r14,%r8
d568(2): push $0x8
d56a(3): mov (%rdx),%rdx
d56d(3): mov %rdi,%rbx
d570(5): call 0xffffef80(%rip)
d575(2): test %eax,%eax
d577(1): pop %rdx
d578(1): pop %rcx
d579(2): jz 0x17(%rip)
d57b(4): add $0x18,%rsp
d57f(1): pop %rbx
d580(1): pop %rbp
d581(2): pop %r12
d583(2): pop %r13
d585(2): pop %r14
d587(2): pop %r15
d589(1): ret near (%rsp)
d58a(6): nop 0x0(%rax,%rax,1)
d590(7): mov 0xc8(%rbx),%rax
d597(7): mov 0xd0(%rbx),%rdx
d59e(4): mov 0x8(%rbp),%r15
d5a2(4): mov 0x0(%r13),%rcx
d5a6(7): mov 0xd8(%rbx),%rdi
d5ad(3): cmp %rdx,%rax
d5b0(3): mov %r15,%rsi
d5b3(6): jnl 0x9d(%rip)
d5b9(4): lea 0x0(%rax,%rax,4),%rdx
d5bd(4): shl/sal $0x3,%rdx
d5c1(3): test %rax,%rax
d5c4(2): jle 0xd(%rip)
d5c6(5): lea 0xffffffd8(%rdi,%rdx,1),%r8
d5cb(4): cmp 0x8(%r8),%r12
d5cf(2): jz 0x71(%rip)
d5d1(3): add %rdx,%rdi
d5d4(2): xor %edx,%edx
d5d6(3): cmp %rcx,%r15
d5d9(3): setz %dl
d5dc(4): add $0x1,%rax
d5e0(3): mov %r14,(%rdi)
d5e3(2): neg %edx
d5e5(4): mov %r12,0x8(%rdi)
d5e9(4): mov %rcx,0x10(%rdi)
d5ed(4): mov %dx,0x22(%rdi)
d5f1(4): mov %r15,0x18(%rdi)
d5f5(7): mov %rax,0xc8(%rbx)
d5fc(4): mov $0x0,0x20(%rdi)
d600(3): mov %r15,%rax
d603(7): movsxd 0xe0(%rbx),%rdx
d60a(3): sub %rcx,%rax
d60d(3): cmp %rax,%rdx
d610(2): jnl 0xc(%rip)
d612(3): sub %ecx,%r15d
d615(7): mov %r15d,0xe0(%rbx)
d61c(3): add %r12,%rsi
d61f(4): sub 0x0(%r13),%rsi
d623(4): add $0x18,%rsp
d627(3): mov %rbx,%rdi
d62a(1): pop %rbx
d62b(1): pop %rbp
d62c(2): pop %r12
d62e(2): pop %r13
d630(2): pop %r14
d632(2): pop %r15
d634(5): jmp 0xffff9b3c(%rip)
d639(7): nop 0x0(%rax)
d640(5): mov $0x1,0x20(%r8)
d645(2): jmp 0xffffff8c(%rip)
d647(9): nop 0x0(%rax,%rax,1)
d650(4): lea 0x0(%rdx,%rdx,4),%rsi
d654(5): mov %rcx,0x8(%rsp)
d659(4): shl/sal $0x4,%rsi
d65d(5): call 0xffff4503(%rip)
d662(3): test %rax,%rax
d665(5): mov 0x8(%rsp),%rcx
d66a(2): jz 0x56(%rip)
d66c(7): mov 0xc8(%rbx),%rsi
d673(7): mov 0xd0(%rbx),%rdx
d67a(7): mov %rax,0xd8(%rbx)
d681(5): mov %rcx,0x8(%rsp)
d686(4): lea 0x0(%rsi,%rsi,4),%rsi
d68a(4): lea 0x0(%rdx,%rdx,4),%rdx
d68e(4): lea 0x0(%rax,%rsi,8),%rdi
d692(4): shl/sal $0x3,%rdx
d696(2): xor %esi,%esi
d698(5): call 0xffff43c8(%rip)
d69d(7): shl/sal $0x1,0xd0(%rbx)
d6a4(7): mov 0xc8(%rbx),%rax
d6ab(7): mov 0xd8(%rbx),%rdi
d6b2(4): mov 0x8(%rbp),%rsi
d6b6(5): mov 0x8(%rsp),%rcx
d6bb(5): jmp 0xfffffefe(%rip)
d6c0(7): mov 0xd8(%rbx),%rdi
d6c7(5): call 0xffff4209(%rip)
d6cc(5): mov $0xc,%eax
d6d1(5): jmp 0xfffffeaa(%rip)

"transit_state_bkref.isra.34" :
d6e0(2): push %r15
d6e2(2): push %r14
d6e4(2): push %r13
d6e6(2): push %r12
d6e8(1): push %rbp
d6e9(1): push %rbx
d6ea(7): sub $0xb8,%rsp
d6f1(4): mov 0x48(%rdi),%r15
d6f5(9): mov $0x28,%rax
d6fe(8): mov %rax,0xa8(%rsp)
d706(2): xor %eax,%eax
d708(4): cmp $0x0,(%rsi)
d70c(7): mov 0x98(%rdi),%rax
d713(5): mov %rsi,0x48(%rsp)
d718(5): mov %rdx,0x40(%rsp)
d71d(5): mov %rax,0x38(%rsp)
d722(6): jle 0x32e(%rip)
d728(8): lea 0x0(,%r15,8),%rax
d730(3): mov %rdi,%r14
d733(8): mov $0x0,(%rsp)
d73b(5): mov %r15,0x8(%rsp)
d740(5): mov %rax,0x60(%rsp)
d745(8): lea 0x90(%rsp),%rax
d74d(5): mov %rax,0x68(%rsp)
d752(8): lea 0x8c(%rsp),%rax
d75a(5): mov %rax,0x78(%rsp)
d75f(2): jmp 0x48(%rip)
d761(7): nop 0x0(%rax)
d768(2): test $0x1,%al
d76a(2): jz 0x26(%rip)
d76c(3): and $0x8,%edx
d76f(2): jnz 0x21(%rip)
d771(3): test $0x20,%cl
d774(2): jz 0x6(%rip)
d776(2): test $0x2,%al
d778(2): jz 0x18(%rip)
d77a(6): and $0x80,%ecx
d780(6): jz 0xa0(%rip)
d786(2): test $0x8,%al
d788(6): jnz 0x98(%rip)
d78e(2): nop 
d790(5): mov 0x48(%rsp),%rdi
d795(5): add $0x1,(%rsp)
d79a(4): mov (%rsp),%rax
d79e(3): cmp (%rdi),%rax
d7a1(6): jnl 0x2af(%rip)
d7a7(5): mov 0x40(%rsp),%rax
d7ac(4): mov (%rsp),%rdi
d7b0(3): mov (%rax),%rax
d7b3(4): mov 0x0(%rax,%rdi,8),%r13
d7b7(5): mov 0x38(%rsp),%rdi
d7bc(3): mov (%rdi),%rax
d7bf(3): mov %r13,%rbx
d7c2(4): shl/sal $0x4,%rbx
d7c6(3): add %rbx,%rax
d7c9(4): cmp $0x4,0x8(%rax)
d7cd(2): jnz 0xffffffc3(%rip)
d7cf(3): mov 0x8(%rax),%ebp
d7d2(6): test $0x3ff00,%ebp
d7d8(2): jz 0x48(%rip)
d7da(7): mov 0xa0(%r14),%edx
d7e1(5): mov 0x8(%rsp),%rsi
d7e6(3): mov %r14,%rdi
d7e9(5): call 0xffffc0d7(%rip)
d7ee(2): mov %ebp,%edx
d7f0(3): shr $0x8,%edx
d7f3(2): mov %edx,%ecx
d7f5(5): and $0x3ff,%cx
d7fa(3): test $0x4,%dl
d7fd(6): jnz 0xffffff6b(%rip)
d803(3): and $0x8,%edx
d806(6): jz 0xffffff6b(%rip)
d80c(2): test $0x1,%al
d80e(6): jz 0xffffff63(%rip)
d814(5): jmp 0xffffff7c(%rip)
d819(7): nop 0x0(%rax)
d820(7): mov 0xc8(%r14),%rdi
d827(7): mov 0x98(%r14),%rax
d82e(2): xor %ecx,%ecx
d830(4): mov 0x8(%r14),%r10
d834(5): mov 0x8(%rsp),%r9
d839(5): mov %rdi,0x70(%rsp)
d83e(5): mov %rax,0x50(%rsp)
d843(3): cmp %rdi,%rcx
d846(2): jnl 0x55(%rip)
d848(4): lea 0x0(%rcx,%rdi,1),%rax
d84c(7): mov 0xd8(%r14),%r11
d853(3): mov %rax,%rsi
d856(4): shr $0x3f,%rsi
d85a(3): add %rax,%rsi
d85d(3): sar $0x1,%rsi
d860(4): lea 0x0(%rsi,%rsi,4),%rax
d864(5): cmp 0x8(%r11,%rax,8),%r9
d869(2): jle 0x2d(%rip)
d86b(5): jmp 0x1cd(%rip)
d870(4): lea 0x0(%rsi,%rcx,1),%rdx
d874(3): mov %rdx,%rax
d877(4): shr $0x3f,%rax
d87b(3): add %rdx,%rax
d87e(3): sar $0x1,%rax
d881(4): lea 0x0(%rax,%rax,4),%rdx
d885(3): mov %rax,%r8
d888(5): cmp 0x8(%r11,%rdx,8),%r9
d88d(6): jnle 0x1b3(%rip)
d893(3): mov %rax,%rsi
d896(3): cmp %rcx,%rsi
d899(2): jnle 0xffffffd7(%rip)
d89b(5): cmp %rcx,0x70(%rsp)
d8a0(2): jle 0x26(%rip)
d8a2(7): mov 0xd8(%r14),%rdx
d8a9(4): lea 0x0(%rcx,%rcx,4),%rax
d8ad(5): mov 0x8(%rsp),%rdi
d8b2(4): lea 0x0(%rdx,%rax,8),%rax
d8b6(4): cmp %rdi,0x8(%rax)
d8ba(2): jnz 0xc(%rip)
d8bc(4): cmp $0xffffffff,%rcx
d8c0(6): jnz 0x1d6(%rip)
d8c6(5): mov 0x50(%rsp),%rax
d8cb(8): cmp $0x0,0xe8(%r14)
d8d3(3): mov (%rax),%rdx
d8d6(4): mov 0x0(%rdx,%rbx,1),%rax
d8da(5): mov %rax,0x58(%rsp)
d8df(6): jle 0x1bc(%rip)
d8e5(5): mov %r13,0x30(%rsp)
d8ea(9): mov $0x0,0x28(%rsp)
d8f3(3): mov %r10,%r13
d8f6(7): mov 0xf8(%r14),%rax
d8fd(5): mov 0x28(%rsp),%rbx
d902(5): mov 0x58(%rsp),%rdi
d907(4): mov 0x0(%rax,%rbx,8),%rbx
d90b(4): mov 0x8(%rbx),%rax
d90f(4): shl/sal $0x4,%rax
d913(4): cmp 0x0(%rdx,%rax,1),%rdi
d917(2): jz 0x29(%rip)
d919(6): add $0x1,0x28(%rsp)
d91f(5): mov 0x28(%rsp),%rax
d924(7): cmp 0xe8(%r14),%rax
d92b(6): jnl 0x676(%rip)
d931(5): mov 0x50(%rsp),%rax
d936(3): mov (%rax),%rdx
d939(2): jmp 0xffffffbd(%rip)
d93b(5): nop 0x0(%rax,%rax,1)
d940(5): cmp $0x0,0x20(%rbx)
d945(3): mov (%rbx),%r11
d948(6): jle 0x66a(%rip)
d94e(5): mov 0x8(%rsp),%rcx
d953(3): mov %r13,%r8
d956(2): xor %ebp,%ebp
d958(3): mov %rbx,%r13
d95b(3): mov %rcx,%rbx
d95e(2): jmp 0x6e(%rip)
d960(4): lea 0x0(%r8,%r11,1),%rsi
d964(4): lea 0x0(%r8,%rbx,1),%rdi
d968(5): mov %r9,0x20(%rsp)
d96d(5): mov %r11,0x18(%rsp)
d972(5): mov %r8,0x10(%rsp)
d977(5): call 0xffff4109(%rip)
d97c(2): test %eax,%eax
d97e(5): mov 0x10(%rsp),%r8
d983(5): mov 0x18(%rsp),%r11
d988(5): mov 0x20(%rsp),%r9
d98d(6): jnz 0x4cb(%rip)
d993(5): mov 0x8(%rsp),%r8
d998(5): mov 0x30(%rsp),%rcx
d99d(3): mov %r9,%rdx
d9a0(3): mov %r13,%rsi
d9a3(3): mov %r14,%rdi
d9a6(5): call 0xfffffb9a(%rip)
d9ab(3): cmp $0x1,%eax
d9ae(4): mov 0x8(%r14),%r8
d9b2(6): jnbe 0xa6(%rip)
d9b8(4): add $0x1,%rbp
d9bc(4): cmp 0x20(%r13),%rbp
d9c0(3): mov %r15,%r11
d9c3(3): mov %r12,%rbx
d9c6(6): jnl 0x2b2(%rip)
d9cc(4): mov 0x28(%r13),%rax
d9d0(4): mov 0x0(%rax,%rbp,8),%r9
d9d4(4): mov 0x8(%r9),%r15
d9d8(3): mov %r15,%rdx
d9db(3): sub %r11,%rdx
d9de(3): test %rdx,%rdx
d9e1(4): lea 0x0(%rdx,%rbx,1),%r12
d9e5(2): jle 0xffffffae(%rip)
d9e7(4): cmp %r12,0x30(%r14)
d9eb(6): jnl 0xffffff75(%rip)
d9f1(4): cmp %r12,0x58(%r14)
d9f5(5): mov %rdx,0x18(%rsp)
d9fa(5): mov %r9,0x10(%rsp)
d9ff(6): jl 0x459(%rip)
da05(3): mov %r12,%rsi
da08(3): mov %r14,%rdi
da0b(5): mov %r11,0x20(%rsp)
da10(5): call 0xffff9760(%rip)
da15(2): test %eax,%eax
da17(2): jnz 0x41(%rip)
da19(4): mov 0x8(%r14),%r8
da1d(5): mov 0x18(%rsp),%rdx
da22(5): mov 0x10(%rsp),%r9
da27(5): mov 0x20(%rsp),%r11
da2c(5): jmp 0xffffff34(%rip)
da31(7): nop 0x0(%rax)
da38(3): mov %rsi,%r8
da3b(3): mov %rdi,%rsi
da3e(2): nop 
da40(4): lea 0x1(%r8),%rcx
da44(3): mov %rsi,%rdi
da47(5): jmp 0xfffffdfc(%rip)
da4c(4): nop 0x0(%rax)
da50(2): xor %eax,%eax
da52(6): nop 0x0(%rax,%rax,1)
da58(8): mov 0xa8(%rsp),%rbx
da60(9): xor $0x28,%rbx
da69(6): jnz 0x553(%rip)
da6f(7): add $0xb8,%rsp
da76(1): pop %rbx
da77(1): pop %rbp
da78(2): pop %r12
da7a(2): pop %r13
da7c(2): pop %r14
da7e(2): pop %r15
da80(1): ret near (%rsp)
da81(7): nop 0x0(%rax)
da88(4): add $0x28,%rax
da8c(4): cmp $0x0,0xfffffff8(%rax)
da90(6): jz 0xfffffe36(%rip)
da96(3): cmp (%rax),%r13
da99(2): jnz 0xffffffef(%rip)
da9b(5): mov 0x70(%rsp),%rax
daa0(5): cmp %rax,0x70(%rsp)
daa5(b): mov $0x0,0x8c(%rsp)
dab0(6): jnl 0xfffffce0(%rip)
dab6(8): lea 0x0(,%r13,8),%rax
dabe(5): mov 0x70(%rsp),%r12
dac3(5): mov 0x38(%rsp),%rbp
dac8(5): mov %rax,0x50(%rsp)
dacd(5): lea 0x0(%r13,%r13,2),%rax
dad2(4): lea 0x0(%r12,%r12,4),%r8
dad6(4): shl/sal $0x3,%rax
dada(5): mov %rax,0x58(%rsp)
dadf(8): lea 0x0(,%r8,8),%r15
dae7(5): jmp 0x136(%rip)
daec(4): nop 0x0(%rax)
daf0(4): mov 0x28(%rbp),%rcx
daf4(5): mov 0x58(%rsp),%rdi
daf9(5): mov 0x10(%rcx,%rdi,1),%rcx
dafe(3): mov (%rcx),%rcx
db01(4): lea 0x0(%rcx,%rcx,2),%rcx
db05(4): lea 0x0(%rdx,%rcx,8),%rcx
db09(5): mov %rcx,0x18(%rsp)
db0e(5): add 0x8(%rsp),%rbx
db13(7): mov 0xa0(%r14),%edx
db1a(3): mov %r14,%rdi
db1d(3): sub %rax,%rbx
db20(4): lea 0xffffffff(%rbx),%rsi
db24(5): call 0xffffbd9c(%rip)
db29(5): mov 0x60(%rsp),%rsi
db2e(2): mov %eax,%ecx
db30(7): mov 0xb8(%r14),%rax
db37(8): lea 0x0(,%rbx,8),%r10
db3f(9): mov $0x0,0x10(%rsp)
db48(4): lea 0x0(%rax,%r10,1),%r11
db4c(4): mov 0x0(%rax,%rsi,1),%rax
db50(3): mov (%r11),%rdx
db53(3): test %rax,%rax
db56(2): jz 0xb(%rip)
db58(4): mov 0x10(%rax),%rax
db5c(5): mov %rax,0x10(%rsp)
db61(3): test %rdx,%rdx
db64(6): jz 0x31c(%rip)
db6a(4): mov 0x50(%rdx),%rsi
db6e(5): mov 0x68(%rsp),%rdi
db73(5): mov 0x18(%rsp),%rdx
db78(5): mov %r10,0x30(%rsp)
db7d(4): mov %ecx,0x28(%rsp)
db81(5): call 0xffffb14f(%rip)
db86(2): test %eax,%eax
db88(7): mov %eax,0x8c(%rsp)
db8f(4): mov 0x28(%rsp),%ecx
db93(5): mov 0x30(%rsp),%r10
db98(6): jnz 0x390(%rip)
db9e(7): add 0xb8(%r14),%r10
dba5(5): mov 0x68(%rsp),%rdx
dbaa(3): mov %rbp,%rsi
dbad(5): mov 0x78(%rsp),%rdi
dbb2(5): mov %r10,0x28(%rsp)
dbb7(5): call 0xffffb279(%rip)
dbbc(5): mov 0x28(%rsp),%r10
dbc1(8): mov 0xa0(%rsp),%rdi
dbc9(3): mov %rax,(%r10)
dbcc(5): call 0xffff3d04(%rip)
dbd1(7): mov 0xb8(%r14),%rdx
dbd8(5): cmp $0x0,0x0(%rdx,%rbx,8)
dbdd(6): jz 0x2d4(%rip)
dbe3(6): cmp $0x0,0x20(%rsp)
dbe9(2): jnz 0x1f(%rip)
dbeb(5): mov 0x60(%rsp),%rax
dbf0(5): mov 0x10(%rsp),%rbx
dbf5(4): mov 0x0(%rdx,%rax,1),%rax
dbf9(4): cmp %rbx,0x10(%rax)
dbfd(6): jnle 0x2cb(%rip)
dc03(5): nop 0x0(%rax,%rax,1)
dc08(4): add $0x1,%r12
dc0c(4): add $0x28,%r15
dc10(7): cmp 0xc8(%r14),%r12
dc17(6): jnl 0xfffffb79(%rip)
dc1d(7): mov 0xd8(%r14),%rax
dc24(3): add %r15,%rax
dc27(3): cmp (%rax),%r13
dc2a(2): jnz 0xffffffde(%rip)
dc2c(5): mov 0x8(%rsp),%rdi
dc31(4): cmp 0x8(%rax),%rdi
dc35(2): jnz 0xffffffd3(%rip)
dc37(4): mov 0x18(%rax),%rbx
dc3b(4): mov 0x10(%rax),%rax
dc3f(4): mov 0x30(%rbp),%rdx
dc43(3): mov %rbx,%rcx
dc46(3): sub %rax,%rcx
dc49(5): mov %rcx,0x20(%rsp)
dc4e(6): jz 0xfffffea2(%rip)
dc54(4): mov 0x18(%rbp),%rcx
dc58(5): mov 0x50(%rsp),%rdi
dc5d(4): mov 0x0(%rcx,%rdi,1),%rcx
dc61(4): lea 0x0(%rcx,%rcx,2),%rcx
dc65(4): lea 0x0(%rdx,%rcx,8),%rcx
dc69(5): mov %rcx,0x18(%rsp)
dc6e(5): jmp 0xfffffea0(%rip)
dc73(5): nop 0x0(%rax,%rax,1)
dc78(3): mov %r13,%rbx
dc7b(3): mov %r8,%r13
dc7e(4): lea 0x1(%r15),%r11
dc82(5): cmp %r11,0x8(%rsp)
dc87(6): jl 0xfffffc92(%rip)
dc8d(3): mov %r12,%rax
dc90(8): lea 0x0(,%r11,8),%r15
dc98(3): mov %rbx,%r12
dc9b(3): mov %r11,%rbx
dc9e(3): mov %r13,%r11
dca1(3): mov %rax,%r13
dca4(4): nop 0x0(%rax)
dca8(3): mov %rbx,%rax
dcab(4): sub (%r12),%rax
dcaf(3): test %rax,%rax
dcb2(2): jle 0x23(%rip)
dcb4(4): cmp %r13,0x30(%r14)
dcb8(6): jle 0x289(%rip)
dcbe(6): movzx 0xffffffff(%r11,%rbx,1),%ecx
dcc4(4): lea 0x1(%r13),%rax
dcc8(4): cmp %cl,0x0(%r11,%r13,1)
dccc(6): jnz 0x136(%rip)
dcd2(3): mov %rax,%r13
dcd5(7): mov 0xb8(%r14),%rax
dcdc(4): mov 0x0(%rax,%r15,1),%rax
dce0(3): test %rax,%rax
dce3(6): jz 0x10c(%rip)
dce9(4): mov 0x10(%rax),%rcx
dced(3): test %rcx,%rcx
dcf0(6): jle 0xff(%rip)
dcf6(4): mov 0x18(%rax),%rdi
dcfa(5): mov 0x50(%rsp),%rax
dcff(2): xor %edx,%edx
dd01(5): mov 0x58(%rsp),%r8
dd06(3): mov (%rax),%rsi
dd09(2): jmp 0x14(%rip)
dd0b(5): nop 0x0(%rax,%rax,1)
dd10(4): add $0x1,%rdx
dd14(3): cmp %rdx,%rcx
dd17(6): jz 0xd8(%rip)
dd1d(4): mov 0x0(%rdi,%rdx,8),%rbp
dd21(3): mov %rbp,%rax
dd24(4): shl/sal $0x4,%rax
dd28(3): add %rsi,%rax
dd2b(4): cmp $0x9,0x8(%rax)
dd2f(2): jnz 0xffffffe1(%rip)
dd31(3): cmp (%rax),%r8
dd34(2): jnz 0xffffffdc(%rip)
dd36(4): cmp $0xffffffff,%rbp
dd3a(6): jz 0xb5(%rip)
dd40(5): mov 0x10(%r12),%rsi
dd45(4): mov (%r12),%rcx
dd49(3): test %rsi,%rsi
dd4c(6): jz 0xc4(%rip)
dd52(5): mov %r11,0x10(%rsp)
dd57(5): mov 0x8(%r12),%rdx
dd5c(4): sub $0x8,%rsp
dd60(2): push $0x9
dd62(3): mov %rbx,%r9
dd65(3): mov %rbp,%r8
dd68(3): mov %r14,%rdi
dd6b(5): call 0xffffe785(%rip)
dd70(1): pop %rdx
dd71(3): cmp $0x1,%eax
dd74(1): pop %rcx
dd75(5): mov 0x10(%rsp),%r11
dd7a(2): jz 0x75(%rip)
dd7c(2): test %eax,%eax
dd7e(6): jnz 0xfffffcda(%rip)
dd84(5): mov 0x20(%r12),%rax
dd89(5): cmp 0x18(%r12),%rax
dd8e(6): jz 0x1da(%rip)
dd94(5): mov $0x28,%esi
dd99(5): mov $0x1,%edi
dd9e(5): call 0xffff3d12(%rip)
dda3(3): test %rax,%rax
dda6(6): jz 0xa3(%rip)
ddac(5): mov 0x20(%r12),%rdx
ddb1(5): mov 0x28(%r12),%rcx
ddb6(3): mov %r12,%rsi
ddb9(5): mov 0x8(%rsp),%r8
ddbe(3): mov %r14,%rdi
ddc1(4): mov %rax,0x0(%rcx,%rdx,8)
ddc5(5): mov 0x30(%rsp),%rcx
ddca(4): add $0x1,%rdx
ddce(3): mov %rbp,(%rax)
ddd1(4): mov %rbx,0x8(%rax)
ddd5(5): mov %rdx,0x20(%r12)
ddda(3): mov %rax,%rdx
dddd(5): call 0xfffff763(%rip)
dde2(3): cmp $0x1,%eax
dde5(4): mov 0x8(%r14),%r11
dde9(6): jnbe 0xfffffc6f(%rip)
ddef(4): add $0x1,%rbx
ddf3(4): add $0x8,%r15
ddf7(5): cmp %rbx,0x8(%rsp)
ddfc(6): jnl 0xfffffeac(%rip)
de02(3): mov %r11,%r13
de05(5): jmp 0xfffffb14(%rip)
de0a(6): nop 0x0(%rax,%rax,1)
de10(3): mov %rbx,%rsi
de13(5): mov $0x18,%edi
de18(5): mov %r11,0x18(%rsp)
de1d(3): sub %rcx,%rsi
de20(5): mov %rcx,0x10(%rsp)
de25(4): add $0x1,%rsi
de29(5): call 0xffff3c87(%rip)
de2e(3): test %rax,%rax
de31(3): mov %rax,%rsi
de34(5): mov %rax,0x10(%r12)
de39(5): mov 0x10(%rsp),%rcx
de3e(5): mov 0x18(%rsp),%r11
de43(6): jnz 0xffffff0f(%rip)
de49(5): mov $0xc,%eax
de4e(5): jmp 0xfffffc0a(%rip)
de53(5): nop 0x0(%rax,%rax,1)
de58(3): mov %rbx,%rcx
de5b(3): mov %r13,%rbx
de5e(3): mov %r8,%r13
de61(4): cmp %rbp,0x20(%rbx)
de65(6): jnle 0xfffffab4(%rip)
de6b(3): test %rbp,%rbp
de6e(3): mov %rcx,%r12
de71(6): jz 0xfffffe11(%rip)
de77(3): mov %r11,%r15
de7a(5): jmp 0xfffffe04(%rip)
de7f(1): nop 
de80(5): mov 0x18(%rsp),%rdx
de85(5): mov 0x78(%rsp),%rdi
de8a(3): mov %rbp,%rsi
de8d(5): mov %r11,0x28(%rsp)
de92(5): call 0xffffaf9e(%rip)
de97(5): mov 0x28(%rsp),%r11
de9c(7): mov 0xb8(%r14),%rdx
dea3(3): mov %rax,(%r11)
dea6(5): cmp $0x0,0x0(%rdx,%rbx,8)
deab(6): jnz 0xfffffd38(%rip)
deb1(7): mov 0x8c(%rsp),%eax
deb8(2): test %eax,%eax
deba(6): jz 0xfffffd29(%rip)
dec0(5): jmp 0xfffffb98(%rip)
dec5(3): nop (%rax)
dec8(5): mov 0x18(%rsp),%rax
decd(5): mov 0x8(%rsp),%rcx
ded2(3): mov %r14,%rdi
ded5(4): lea 0x10(%rax),%r8
ded9(4): lea 0x8(%rax),%rbx
dedd(3): mov %r8,%rdx
dee0(3): mov %rbx,%rsi
dee3(5): mov %r8,0x10(%rsp)
dee8(5): call 0xffffb888(%rip)
deed(2): test %eax,%eax
deef(7): mov %eax,0x8c(%rsp)
def6(6): jnz 0xfffffb62(%rip)
defc(5): mov 0x10(%rsp),%r8
df01(3): mov %rbx,%rsi
df04(3): mov %r14,%rdi
df07(3): mov %r8,%rdx
df0a(5): call 0xfffff7d6(%rip)
df0f(2): test %eax,%eax
df11(7): mov %eax,0x8c(%rsp)
df18(6): jz 0xfffffcf0(%rip)
df1e(5): jmp 0xfffffb3a(%rip)
df23(5): nop 0x0(%rax,%rax,1)
df28(8): mov 0xa0(%rsp),%rdi
df30(5): call 0xffff39a0(%rip)
df35(7): mov 0x8c(%rsp),%eax
df3c(5): jmp 0xfffffb1c(%rip)
df41(4): cmp %r13,0x58(%r14)
df45(6): jle 0xfffffebd(%rip)
df4b(4): lea 0x1(%r13),%esi
df4f(3): mov %r14,%rdi
df52(5): call 0xffff90ce(%rip)
df57(2): test %eax,%eax
df59(6): jnz 0xfffffaff(%rip)
df5f(4): mov 0x8(%r14),%r11
df63(5): jmp 0xfffffd5b(%rip)
df68(5): lea 0x1(%rax,%rax,1),%rdx
df6d(5): mov 0x28(%r12),%rdi
df72(8): lea 0x0(,%rdx,8),%rsi
df7a(5): mov %rdx,0x10(%rsp)
df7f(5): call 0xffff3be1(%rip)
df84(3): test %rax,%rax
df87(6): jz 0xfffffec2(%rip)
df8d(5): mov 0x10(%rsp),%rdx
df92(5): mov %rax,0x28(%r12)
df97(5): mov %rdx,0x18(%r12)
df9c(5): jmp 0xfffffdf8(%rip)
dfa1(5): mov 0x30(%rsp),%r13
dfa6(7): mov 0xc8(%r14),%rax
dfad(5): jmp 0xfffffaf3(%rip)
dfb2(5): mov 0x8(%rsp),%r12
dfb7(5): jmp 0xfffffccb(%rip)
dfbc(5): call 0xffff3a24(%rip)

"merge_state_with_log" :
dfd0(2): push %r15
dfd2(2): push %r14
dfd4(2): push %r13
dfd6(2): push %r12
dfd8(3): mov %rdi,%r13
dfdb(1): push %rbp
dfdc(1): push %rbx
dfdd(3): mov %rsi,%rbx
dfe0(4): sub $0x38,%rsp
dfe4(4): mov 0x48(%rsi),%r12
dfe8(7): mov 0xb8(%rsi),%r14
dfef(9): mov $0x28,%rax
dff8(5): mov %rax,0x28(%rsp)
dffd(2): xor %eax,%eax
dfff(7): mov 0x98(%rsi),%r15
e006(8): lea 0x0(,%r12,8),%rbp
e00e(3): add %rbp,%r14
e011(7): cmp %r12,0xc0(%rsi)
e018(2): jnl 0x48(%rip)
e01a(3): mov %rdx,(%r14)
e01d(3): mov %rdx,%rbp
e020(7): mov %r12,0xc0(%rsi)
e027(8): cmp $0x0,0x98(%r15)
e02f(6): jnz 0x129(%rip)
e035(5): mov 0x28(%rsp),%rcx
e03a(9): xor $0x28,%rcx
e043(3): mov %rbp,%rax
e046(6): jnz 0x171(%rip)
e04c(4): add $0x38,%rsp
e050(1): pop %rbx
e051(1): pop %rbp
e052(2): pop %r12
e054(2): pop %r13
e056(2): pop %r14
e058(2): pop %r15
e05a(1): ret near (%rsp)
e05b(5): nop 0x0(%rax,%rax,1)
e060(3): mov (%r14),%rax
e063(3): test %rax,%rax
e066(6): jz 0xe2(%rip)
e06c(3): test %rdx,%rdx
e06f(4): mov 0x50(%rax),%rax
e073(6): jz 0x8d(%rip)
e079(4): mov 0x50(%rdx),%r14
e07d(5): lea 0x10(%rsp),%rdi
e082(3): mov %rax,%rdx
e085(4): mov %rdi,(%rsp)
e089(3): mov %r14,%rsi
e08c(5): call 0xffffac44(%rip)
e091(2): test %eax,%eax
e093(4): mov %eax,0x0(%r13)
e097(6): jnz 0x119(%rip)
e09d(4): mov 0x48(%rbx),%rax
e0a1(6): mov 0xa0(%rbx),%edx
e0a7(3): mov %rbx,%rdi
e0aa(4): lea 0xffffffff(%rax),%rsi
e0ae(5): call 0xffffb812(%rip)
e0b3(7): mov 0xb8(%rbx),%r8
e0ba(4): mov (%rsp),%rdx
e0be(2): mov %eax,%ecx
e0c0(3): mov %r15,%rsi
e0c3(3): mov %r13,%rdi
e0c6(3): add %rbp,%r8
e0c9(5): mov %r8,0x8(%rsp)
e0ce(5): call 0xffffad62(%rip)
e0d3(5): mov 0x8(%rsp),%r8
e0d8(3): test %r14,%r14
e0db(3): mov %rax,%rbp
e0de(3): mov %rax,(%r8)
e0e1(6): jz 0xffffff46(%rip)
e0e7(5): mov 0x20(%rsp),%rdi
e0ec(5): call 0xffff37e4(%rip)
e0f1(5): jmp 0xffffff36(%rip)
e0f6(a): nop 0x0(%rax,%rax,1)
e100(4): movdqu (%rax),%xmm0
e104(3): mov %rbx,%rdi
e107(6): mov 0xa0(%rsi),%edx
e10d(5): lea 0xffffffff(%r12),%rsi
e112(5): movaps %xmm0,0x10(%rsp)
e117(4): mov 0x10(%rax),%rax
e11b(5): mov %rax,0x20(%rsp)
e120(5): call 0xffffb7a0(%rip)
e125(5): lea 0x10(%rsp),%rdx
e12a(2): mov %eax,%ecx
e12c(3): mov %r15,%rsi
e12f(3): mov %r13,%rdi
e132(5): call 0xffffacfe(%rip)
e137(3): mov %rax,%rbp
e13a(3): mov %rax,(%r14)
e13d(5): jmp 0xfffffeea(%rip)
e142(6): nop 0x0(%rax,%rax,1)
e148(3): mov %rdx,(%r14)
e14b(3): mov %rdx,%rbp
e14e(5): jmp 0xfffffed9(%rip)
e153(5): nop 0x0(%rax,%rax,1)
e158(3): test %rbp,%rbp
e15b(2): jz 0x55(%rip)
e15d(4): lea 0x10(%rbp),%r14
e161(4): lea 0x18(%rbp),%r15
e165(3): mov %r12,%rcx
e168(3): mov %rbx,%rdi
e16b(3): mov %r15,%rdx
e16e(3): mov %r14,%rsi
e171(5): call 0xffffb5ff(%rip)
e176(2): test %eax,%eax
e178(4): mov %eax,0x0(%r13)
e17c(2): jnz 0x34(%rip)
e17e(4): test $0x40,0x68(%rbp)
e182(6): jz 0xfffffeb3(%rip)
e188(3): mov %r15,%rdx
e18b(3): mov %r14,%rsi
e18e(3): mov %rbx,%rdi
e191(5): call 0xfffff54f(%rip)
e196(2): test %eax,%eax
e198(4): mov %eax,0x0(%r13)
e19c(2): jnz 0x14(%rip)
e19e(7): mov 0xb8(%rbx),%rax
e1a5(4): mov 0x0(%rax,%r12,8),%rbp
e1a9(5): jmp 0xfffffe8c(%rip)
e1ae(2): nop 
e1b0(2): xor %ebp,%ebp
e1b2(5): jmp 0xfffffe83(%rip)
e1b7(5): call 0xffff3829(%rip)

"sift_states_backward" :
e1c0(2): push %r15
e1c2(2): push %r14
e1c4(3): mov %rdi,%r14
e1c7(2): push %r13
e1c9(2): push %r12
e1cb(3): mov %rsi,%r13
e1ce(1): push %rbp
e1cf(1): push %rbx
e1d0(4): sub $0x68,%rsp
e1d4(4): mov 0x18(%rsi),%r15
e1d8(4): mov 0x10(%rsi),%rbx
e1dc(4): mov %rdi,(%rsp)
e1e0(5): mov $0x8,%edi
e1e5(9): mov $0x1,0x40(%rsp)
e1ee(9): mov $0x28,%rax
e1f7(5): mov %rax,0x58(%rsp)
e1fc(2): xor %eax,%eax
e1fe(9): mov $0x1,0x48(%rsp)
e207(5): call 0xffff38f9(%rip)
e20c(3): test %rax,%rax
e20f(5): mov %rax,0x50(%rsp)
e214(6): jz 0x2e0(%rip)
e21a(5): lea 0x40(%rsp),%rcx
e21f(3): mov %rbx,(%rax)
e222(3): mov %r15,%rdx
e225(3): mov %r13,%rsi
e228(3): mov %r14,%rdi
e22b(5): mov %rcx,0x10(%rsp)
e230(5): call 0x1a00(%rip)
e235(2): test %eax,%eax
e237(6): jnz 0x28e(%rip)
e23d(8): lea 0x0(,%r15,8),%rax
e245(3): test %r15,%r15
e248(8): mov $0x0,0x2c(%rsp)
e250(5): mov %rax,0x8(%rsp)
e255(4): lea 0x30(%r13),%rax
e259(5): mov %rax,0x38(%rsp)
e25e(6): jle 0x209(%rip)
e264(4): mov 0x0(%r13),%rdi
e268(5): mov 0x8(%rsp),%rax
e26d(5): cmp $0x0,0x0(%rdi,%rax,1)
e272(6): jz 0x216(%rip)
e278(4): mov (%rsp),%rax
e27c(8): mov $0x0,0x2c(%rsp)
e284(4): mov 0x2c(%rsp),%ecx
e288(6): cmp %ecx,0xe0(%rax)
e28e(6): jl 0x213(%rip)
e294(4): mov (%rsp),%rbx
e298(5): mov 0x8(%rsp),%rdi
e29d(4): sub $0x1,%r15
e2a1(9): mov $0x0,0x48(%rsp)
e2aa(7): mov 0xb8(%rbx),%rax
e2b1(5): mov 0xfffffff8(%rax,%rdi,1),%r12
e2b6(3): test %r12,%r12
e2b9(6): jz 0x187(%rip)
e2bf(6): cmp $0x0,0x28(%r12)
e2c5(7): mov 0x98(%rbx),%r14
e2cc(6): jle 0x174(%rip)
e2d2(2): xor %ebx,%ebx
e2d4(5): jmp 0xa7(%rip)
e2d9(7): nop 0x0(%rax)
e2e0(4): mov (%rsp),%rdi
e2e4(3): mov %r15,%rdx
e2e7(5): call 0xffffb6c9(%rip)
e2ec(2): test %al,%al
e2ee(2): jz 0x7e(%rip)
e2f0(4): mov 0x0(%r13),%rax
e2f4(5): mov 0x8(%rsp),%rcx
e2f9(4): mov 0x0(%rax,%rcx,1),%rax
e2fd(3): test %rax,%rax
e300(2): jz 0x6c(%rip)
e302(4): mov 0x18(%r14),%rdx
e306(4): mov 0x10(%rax),%rdi
e30a(4): lea 0x18(%rax),%rsi
e30e(4): mov 0x0(%rdx,%rbp,8),%rdx
e312(5): call 0xffff97ce(%rip)
e317(3): test %rax,%rax
e31a(2): jz 0x52(%rip)
e31c(6): mov $0x1,%r10d
e322(5): cmp $0x0,0x28(%r13)
e327(2): jz 0x30(%rip)
e329(4): mov 0x18(%r14),%rax
e32d(4): sub $0x8,%rsp
e331(4): lea 0x28(%r13),%rsi
e335(4): lea 0x0(%r10,%r15,1),%r8
e339(3): mov %rbp,%r9
e33c(4): mov 0x0(%rax,%rbp,8),%rcx
e340(2): push %r15
e342(5): mov 0x48(%rsp),%rdx
e347(5): mov 0x10(%rsp),%rdi
e34c(5): call 0xffff9a44(%rip)
e351(2): test %al,%al
e353(1): pop %rdx
e354(1): pop %rcx
e355(2): jnz 0x17(%rip)
e357(5): mov 0x10(%rsp),%rdi
e35c(3): mov %rbp,%rsi
e35f(5): call 0xffff8241(%rip)
e364(2): test %al,%al
e366(6): jz 0x15a(%rip)
e36c(4): add $0x1,%rbx
e370(5): cmp 0x28(%r12),%rbx
e375(6): jnl 0xcb(%rip)
e37b(5): mov 0x30(%r12),%rax
e380(3): mov (%r14),%rsi
e383(4): mov 0x0(%rax,%rbx,8),%rbp
e387(3): mov %rbp,%r9
e38a(4): shl/sal $0x4,%r9
e38e(3): add %r9,%rsi
e391(4): test $0x10,0xa(%rsi)
e395(6): jz 0xffffff4b(%rip)
e39b(4): mov (%rsp),%rcx
e39f(4): mov 0x18(%r13),%rax
e3a3(3): mov %r15,%r8
e3a6(3): mov %rbp,%rdx
e3a9(5): mov %r9,0x18(%rsp)
e3ae(7): mov 0x98(%rcx),%r11
e3b5(5): mov %rax,0x20(%rsp)
e3ba(3): mov (%r11),%rdi
e3bd(7): lea 0xd8(%r11),%rsi
e3c4(5): mov %r11,0x30(%rsp)
e3c9(5): call 0xffffdec7(%rip)
e3ce(3): movsxd %eax,%r10
e3d1(5): mov 0x18(%rsp),%r9
e3d6(4): cmp $0x0,%r10d
e3da(6): jle 0x96(%rip)
e3e0(3): movsxd %r10d,%rax
e3e3(3): add %r15,%rax
e3e6(5): cmp %rax,0x20(%rsp)
e3eb(6): jl 0xffffff37(%rip)
e3f1(4): mov 0x0(%r13),%rdx
e3f5(5): mov 0x30(%rsp),%r11
e3fa(4): mov 0x0(%rdx,%rax,8),%rax
e3fe(3): test %rax,%rax
e401(2): jz 0x75(%rip)
e403(4): mov 0x18(%r11),%rdx
e407(4): mov 0x10(%rax),%rdi
e40b(4): lea 0x18(%rax),%rsi
e40f(5): mov %r9,0x18(%rsp)
e414(4): mov 0x0(%rdx,%rbp,8),%rdx
e418(5): call 0xffff96c8(%rip)
e41d(3): test %rax,%rax
e420(6): jnz 0xffffff02(%rip)
e426(5): mov 0x18(%rsp),%r9
e42b(3): mov (%r14),%rsi
e42e(3): add %r9,%rsi
e431(5): jmp 0xfffffeaf(%rip)
e436(a): nop 0x0(%rax,%rax,1)
e440(5): mov 0x10(%rsp),%rcx
e445(4): mov (%rsp),%rdi
e449(3): mov %r15,%rdx
e44c(3): mov %r13,%rsi
e44f(5): call 0x17e1(%rip)
e454(2): test %eax,%eax
e456(2): jnz 0x6f(%rip)
e458(6): sub $0x8,0x8(%rsp)
e45e(3): test %r15,%r15
e461(6): jnz 0xfffffe03(%rip)
e467(2): xor %eax,%eax
e469(2): jmp 0x5c(%rip)
e46b(5): nop 0x0(%rax,%rax,1)
e470(6): jnz 0xfffffeb2(%rip)
e476(3): mov (%r14),%rsi
e479(3): add %r9,%rsi
e47c(5): jmp 0xfffffe64(%rip)
e481(7): nop 0x0(%rax)
e488(4): mov (%rsp),%rax
e48c(5): add $0x1,0x2c(%rsp)
e491(4): mov 0x2c(%rsp),%ecx
e495(6): cmp %ecx,0xe0(%rax)
e49b(6): jnl 0xfffffdf9(%rip)
e4a1(5): mov 0x8(%rsp),%rdx
e4a6(2): xor %esi,%esi
e4a8(5): call 0xffff35b8(%rip)
e4ad(5): mov 0x50(%rsp),%rdi
e4b2(5): call 0xffff341e(%rip)
e4b7(2): xor %eax,%eax
e4b9(2): jmp 0x1c(%rip)
e4bb(5): nop 0x0(%rax,%rax,1)
e4c0(5): mov $0xc,%eax
e4c5(5): mov 0x50(%rsp),%rdi
e4ca(3): mov %eax,(%rsp)
e4cd(5): call 0xffff3403(%rip)
e4d2(3): mov (%rsp),%eax
e4d5(5): mov 0x58(%rsp),%rdx
e4da(9): xor $0x28,%rdx
e4e3(2): jnz 0x18(%rip)
e4e5(4): add $0x68,%rsp
e4e9(1): pop %rbx
e4ea(1): pop %rbp
e4eb(2): pop %r12
e4ed(2): pop %r13
e4ef(2): pop %r14
e4f1(2): pop %r15
e4f3(1): ret near (%rsp)
e4f4(5): mov $0xc,%eax
e4f9(2): jmp 0xffffffdc(%rip)
e4fb(5): call 0xffff34e5(%rip)

"re_search_internal" :
e500(2): push %r15
e502(2): push %r14
e504(2): push %r13
e506(2): push %r12
e508(3): mov %r9,%r13
e50b(1): push %rbp
e50c(1): push %rbx
e50d(3): mov %rcx,%rbp
e510(5): mov $0x20,%ecx
e515(3): mov %r8,%r12
e518(7): sub $0x238,%rsp
e51f(3): mov (%rdi),%rbx
e522(8): mov 0x278(%rsp),%rax
e52a(5): mov %rdi,0x48(%rsp)
e52f(5): mov %rsi,0x78(%rsp)
e534(3): mov %rdi,%rsi
e537(8): lea 0x120(%rsp),%rdi
e53f(8): mov %rdx,0x88(%rsp)
e547(5): mov %rbx,0x38(%rsp)
e54c(8): mov %rax,0xb8(%rsp)
e554(4): mov %rdi,(%rsp)
e558(9): mov $0x28,%rax
e561(8): mov %rax,0x228(%rsp)
e569(2): xor %eax,%eax
e56b(3): REP stosd %rax,rdi(%es,10)
e56e(4): mov 0x20(%rsi),%rdi
e572(8): mov %rbx,0x1b8(%rsp)
e57a(3): test %rdi,%rdi
e57d(5): mov %rdi,0x68(%rsp)
e582(2): jz 0x24(%rip)
e584(4): movzx 0x38(%rsi),%edx
e588(3): test $0x8,%dl
e58b(6): jz 0x495(%rip)
e591(3): cmp %r8,%rbp
e594(6): jz 0x48c(%rip)
e59a(3): and $0x1,%edx
e59d(4): cmove %rdi,%rax
e5a1(5): mov %rax,0x68(%rsp)
e5a6(5): mov 0x48(%rsp),%rax
e5ab(c): mov $0x0,0x98(%rsp)
e5b7(4): mov 0x30(%rax),%rax
e5bb(8): cmp 0x270(%rsp),%rax
e5c3(2): jnb 0x21(%rip)
e5c5(8): mov 0x270(%rsp),%rcx
e5cd(4): lea 0xffffffff(%rcx),%rdx
e5d1(3): sub %rax,%rdx
e5d4(8): sub %rdx,0x270(%rsp)
e5dc(8): mov %rdx,0x98(%rsp)
e5e4(5): mov 0x48(%rsp),%rsi
e5e9(5): cmp $0x0,0x10(%rsi)
e5ee(6): jz 0xe92(%rip)
e5f4(5): mov 0x38(%rsp),%rdi
e5f9(4): mov 0x48(%rdi),%rax
e5fd(3): test %rax,%rax
e600(6): jz 0xe80(%rip)
e606(4): mov 0x50(%rdi),%rdx
e60a(3): test %rdx,%rdx
e60d(6): jz 0xe73(%rip)
e613(4): mov 0x58(%rdi),%rcx
e617(3): test %rcx,%rcx
e61a(6): jz 0xe66(%rip)
e620(5): cmp $0x0,0x60(%rdi)
e625(6): jz 0xe5b(%rip)
e62b(5): cmp $0x0,0x10(%rax)
e630(2): jnz 0x38(%rip)
e632(5): cmp $0x0,0x10(%rdx)
e637(2): jnz 0x31(%rip)
e639(5): cmp $0x0,0x10(%rcx)
e63e(2): jz 0x8(%rip)
e640(4): cmp $0x0,0x38(%rsi)
e644(2): js 0x24(%rip)
e646(3): test %rbp,%rbp
e649(2): jz 0x13(%rip)
e64b(3): test %r12,%r12
e64e(8): mov $0x1,0x5c(%rsp)
e656(6): jnz 0xa23(%rip)
e65c(3): xor %r12d,%r12d
e65f(2): xor %ebp,%ebp
e661(7): nop 0x0(%rax)
e668(9): cmp $0x0,0x270(%rsp)
e671(8): mov $0x1,0x58(%rsp)
e679(6): jz 0x387(%rip)
e67f(5): mov 0x38(%rsp),%r11
e684(5): mov 0x48(%rsp),%rax
e689(8): mov 0x88(%rsp),%rdi
e691(4): mov 0x10(%r11),%rsi
e695(4): mov 0x28(%rax),%rbx
e699(7): mov 0xb4(%r11),%edx
e6a0(4): mov 0x18(%rax),%rax
e6a4(8): mov %rdi,0x178(%rsp)
e6ac(8): mov %rdi,0x170(%rsp)
e6b4(5): mov %rsi,0x8(%rsp)
e6b9(4): lea 0x1(%rsi),%rsi
e6bd(8): mov %rbx,0xb0(%rsp)
e6c5(3): movsxd %edx,%rcx
e6c8(4): shr $0x16,%rax
e6cc(8): mov %rbx,0x198(%rsp)
e6d4(3): and $0x1,%eax
e6d7(3): cmp %rcx,%rsi
e6da(7): mov %edx,0x1b0(%rsp)
e6e1(4): cmovnge %rcx,%rsi
e6e5(4): lea 0x1(%rdi),%rcx
e6e9(7): mov %al,0x1a8(%rsp)
e6f0(8): mov %rdi,0x188(%rsp)
e6f8(8): mov %rdi,0x180(%rsp)
e700(3): cmp %rcx,%rsi
e703(4): mov (%rsp),%rdi
e707(4): cmovnl %rcx,%rsi
e70b(3): test %rbx,%rbx
e70e(5): mov 0x78(%rsp),%rcx
e713(3): setnz %bl
e716(2): or %ebx,%eax
e718(7): mov %al,0x1ab(%rsp)
e71f(8): movzx 0xb0(%r11),%eax
e727(8): mov %rcx,0x120(%rsp)
e72f(2): mov %eax,%edx
e731(3): shr $0x3,%al
e734(3): shr $0x2,%dl
e737(3): and $0x1,%eax
e73a(3): and $0x1,%edx
e73d(7): mov %al,0x1aa(%rsp)
e744(7): mov %dl,0x1a9(%rsp)
e74b(5): call 0xffff7d45(%rip)
e750(2): test %eax,%eax
e752(4): mov %eax,0x5c(%rsp)
e756(6): jnz 0x8fa(%rip)
e75c(5): mov 0x38(%rsp),%rdi
e761(7): lea 0xb8(%rdi),%rax
e768(8): mov %rax,0x1a0(%rsp)
e770(7): movzx 0xb0(%rdi),%eax
e777(4): mov %al,0x8(%rsp)
e77b(3): shr $0x4,%al
e77e(3): and $0x1,%eax
e781(8): cmp $0x0,0x1ab(%rsp)
e789(7): mov %al,0x1ae(%rsp)
e790(2): jnz 0x25(%rip)
e792(5): mov 0x38(%rsp),%rsi
e797(5): mov 0x78(%rsp),%rax
e79c(7): cmp $0x1,0xb4(%rsi)
e7a3(8): mov %rax,0x128(%rsp)
e7ab(8): mov 0x88(%rsp),%rax
e7b3(2): jle 0x4(%rip)
e7b5(2): xor %eax,%eax
e7b7(8): mov %rax,0x150(%rsp)
e7bf(8): mov %rax,0x158(%rsp)
e7c7(5): mov 0x48(%rsp),%rax
e7cc(8): mov %r13,0x188(%rsp)
e7d4(8): mov %r13,0x180(%rsp)
e7dc(4): movzx 0x38(%rax),%eax
e7e0(4): mov %al,0x8(%rsp)
e7e4(3): shr $0x7,%al
e7e7(7): mov %al,0x1ad(%rsp)
e7ee(5): mov 0x38(%rsp),%rax
e7f3(7): mov 0x98(%rax),%r14
e7fa(7): mov 0x280(%rsp),%eax
e801(c): mov $0xffffffff,0x1c8(%rsp)
e80d(4): lea 0x0(%r14,%r14,1),%r13
e811(7): mov %eax,0x1c0(%rsp)
e818(3): test %r13,%r13
e81b(2): jle 0x54(%rip)
e81d(a): mov $0x461168601842738790,%rax
e827(3): cmp %rax,%r13
e82a(6): jnle 0xd46(%rip)
e830(5): lea 0x0(%r13,%r14,8),%rdi
e835(4): shl/sal $0x3,%rdi
e839(5): call 0xffff32c7(%rip)
e83e(3): mov %r14,%rdi
e841(3): mov %rax,%r15
e844(8): mov %rax,0x1f8(%rsp)
e84c(4): shl/sal $0x4,%rdi
e850(5): call 0xffff32b0(%rip)
e855(3): test %rax,%rax
e858(8): mov %rax,0x218(%rsp)
e860(6): jz 0xd10(%rip)
e866(3): test %r15,%r15
e869(6): jz 0xd07(%rip)
e86f(9): cmp $0x1,0x270(%rsp)
e878(8): mov %r13,0x1f0(%rsp)
e880(b): mov $0x1,0x200(%rsp)
e88b(8): mov %r13,0x210(%rsp)
e893(6): jbe 0x1125(%rip)
e899(8): mov 0x160(%rsp),%rax
e8a1(a): mov $0x2305843009213693950,%rdx
e8ab(3): cmp %rdx,%rax
e8ae(6): jnbe 0xcc2(%rip)
e8b4(8): lea 0x8(,%rax,8),%rdi
e8bc(5): call 0xffff3244(%rip)
e8c1(3): test %rax,%rax
e8c4(3): mov %rax,%rdi
e8c7(8): mov %rax,0x1d8(%rsp)
e8cf(6): jz 0xcf1(%rip)
e8d5(7): mov 0x280(%rsp),%eax
e8dc(8): mov %rbp,0xd8(%rsp)
e8e4(3): and $0x1,%eax
e8e7(3): cmp $0x1,%eax
e8ea(2): sbb %eax,%eax
e8ec(3): and $0x2,%eax
e8ef(3): add $0x4,%eax
e8f2(7): mov %eax,0x190(%rsp)
e8f9(2): xor %eax,%eax
e8fb(3): cmp %r12,%rbp
e8fe(3): setle %al
e901(4): lea 0xffffffff(%rax,%rax,1),%eax
e905(7): mov %eax,0xac(%rsp)
e90c(3): mov %r12,%rax
e90f(4): cmovng %rbp,%rax
e913(8): mov %rax,0x90(%rsp)
e91b(3): mov %r12,%rax
e91e(4): cmovnl %rbp,%rax
e922(6): cmp $0x0,0x68(%rsp)
e928(5): mov %rax,0x70(%rsp)
e92d(5): mov 0x38(%rsp),%rax
e932(6): mov 0xb4(%rax),%esi
e938(5): mov $0x8,%eax
e93d(7): mov %esi,0xc8(%rsp)
e944(2): jz 0x3b(%rip)
e946(3): cmp $0x1,%esi
e949(5): mov $0x4,%ecx
e94e(2): jz 0x20(%rip)
e950(5): mov 0x48(%rsp),%rax
e955(4): test $0x40,0x1a(%rax)
e959(6): jnz 0xd85(%rip)
e95f(9): cmp $0x0,0xb0(%rsp)
e968(6): jnz 0xd76(%rip)
e96e(2): xor %edx,%edx
e970(3): cmp %r12,%rbp
e973(3): movzx %bl,%eax
e976(3): setle %dl
e979(2): or %ecx,%eax
e97b(2): add %edx,%edx
e97d(2): or %edx,%eax
e97f(5): cmp 0x70(%rsp),%rbp
e984(3): setnle %cl
e987(8): cmp 0x90(%rsp),%rbp
e98f(3): setl %dl
e992(2): or %dl,%cl
e994(6): jnz 0xad5(%rip)
e99a(8): lea 0xd8(%rsp),%rcx
e9a2(3): cmp %r12,%rbp
e9a5(5): mov $0x0,%edx
e9aa(4): cmovng %rcx,%rdx
e9ae(3): test %rdx,%rdx
e9b1(8): mov %rdx,0xc0(%rsp)
e9b9(8): setnz 0xcf(%rsp)
e9c1(3): sub $0x4,%eax
e9c4(7): mov %eax,0xa8(%rsp)
e9cb(8): lea 0xd0(%rsp),%rax
e9d3(5): mov %rax,0x28(%rsp)
e9d8(7): mov 0xa8(%rsp),%eax
e9df(3): cmp $0x4,%eax
e9e2(6): jnbe 0xbeb(%rip)
e9e8(7): lea 0x6f91(%rip),%rcx
e9ef(4): movsxd 0x0(%rcx,%rax,4),%rax
e9f3(3): add %rcx,%rax
e9f6(2): jmp %rax
e9f8(8): nop 0x0(%rax,%rax,1)
ea00(5): mov 0x38(%rsp),%rax
ea05(8): cmp $0x0,0x98(%rax)
ea0d(3): setnz %al
ea10(3): movzx %al,%eax
ea13(4): mov %eax,0x58(%rsp)
ea17(5): jmp 0xfffffc68(%rip)
ea1c(4): nop 0x0(%rax)
ea20(9): mov $0x0,0x68(%rsp)
ea29(5): jmp 0xfffffb7d(%rip)
ea2e(5): cmp %rbp,0x70(%rsp)
ea33(2): jle 0x5c(%rip)
ea35(5): mov 0x78(%rsp),%rax
ea3a(5): mov 0x68(%rsp),%rdi
ea3f(4): movzx 0x0(%rax,%rbp,1),%edx
ea43(4): lea 0x1(%rbp),%rax
ea47(4): cmp $0x0,0x0(%rdi,%rdx,1)
ea4b(6): jnz 0x8d(%rip)
ea51(5): mov 0x68(%rsp),%rsi
ea56(5): mov 0x70(%rsp),%rcx
ea5b(5): mov 0x78(%rsp),%rdi
ea60(2): jmp 0x1a(%rip)
ea62(6): nop 0x0(%rax,%rax,1)
ea68(4): movzx 0x0(%rdi,%rax,1),%edx
ea6c(4): lea 0x1(%rax),%rax
ea70(4): cmp $0x0,0x0(%rsi,%rdx,1)
ea74(6): jnz 0x119d(%rip)
ea7a(3): cmp %rax,%rcx
ea7d(3): mov %rax,%rbp
ea80(2): jnz 0xffffffe8(%rip)
ea82(5): mov 0x70(%rsp),%rax
ea87(8): mov %rax,0xd8(%rsp)
ea8f(5): cmp %rbp,0x70(%rsp)
ea94(2): jnz 0x44(%rip)
ea96(2): xor %eax,%eax
ea98(5): mov 0x70(%rsp),%rsi
ea9d(8): cmp %rsi,0x88(%rsp)
eaa5(2): jle 0xb(%rip)
eaa7(5): mov 0x78(%rsp),%rax
eaac(4): movzx 0x0(%rax,%rsi,1),%eax
eab0(8): mov 0xb0(%rsp),%rsi
eab8(3): test %rsi,%rsi
eabb(2): jz 0x6(%rip)
eabd(4): movzx 0x0(%rsi,%rax,1),%eax
eac1(5): mov 0x68(%rsp),%rdi
eac6(4): cmp $0x0,0x0(%rdi,%rax,1)
eaca(6): jz 0x99f(%rip)
ead0(5): mov 0x70(%rsp),%rbp
ead5(3): nop (%rax)
ead8(7): mov 0x280(%rsp),%edx
eadf(4): mov (%rsp),%rdi
eae3(3): mov %rbp,%rsi
eae6(5): call 0xffffb0aa(%rip)
eaeb(2): test %eax,%eax
eaed(4): mov %eax,0x5c(%rsp)
eaf1(6): jnz 0x55f(%rip)
eaf7(8): cmp $0x1,0xc8(%rsp)
eaff(2): jz 0x1e(%rip)
eb01(9): cmp $0x0,0x150(%rsp)
eb0a(2): jz 0x13(%rip)
eb0c(8): mov 0x130(%rsp),%rax
eb14(3): cmp $0xff,(%rax)
eb17(6): jz 0x92a(%rip)
eb1d(8): mov 0x1b8(%rsp),%rbx
eb25(5): movzx 0x58(%rsp),%eax
eb2a(b): mov $0x0,0x200(%rsp)
eb35(c): mov $0x0,0x1e8(%rsp)
eb41(c): mov $0x0,0x1e0(%rsp)
eb4d(b): mov $0x0,0xd0(%rsp)
eb58(4): mov 0x48(%rbx),%r14
eb5c(3): and $0x1,%eax
eb5f(7): mov %al,0xce(%rsp)
eb66(8): mov 0x168(%rsp),%rax
eb6e(5): cmp $0x0,0x68(%r14)
eb73(5): mov %rax,0x8(%rsp)
eb78(6): js 0x978(%rip)
eb7e(8): mov 0x1d8(%rsp),%rax
eb86(3): test %rax,%rax
eb89(2): jz 0x19(%rip)
eb8b(8): cmp $0x0,0x98(%rbx)
eb93(5): mov 0x8(%rsp),%rdi
eb98(4): mov %r14,0x0(%rax,%rdi,8)
eb9c(6): jnz 0xeef(%rip)
eba2(8): movzx 0xcf(%rsp),%eax
ebaa(4): mov %al,0x18(%rsp)
ebae(5): movzx 0x68(%r14),%eax
ebb3(2): test $0x10,%al
ebb5(9): mov $0xffffffff,0x20(%rsp)
ebbe(9): mov $0x0,0x30(%rsp)
ebc7(6): jnz 0xe89(%rip)
ebcd(8): mov 0xc0(%rsp),%rax
ebd5(8): mov 0x168(%rsp),%r8
ebdd(5): mov %rax,0x50(%rsp)
ebe2(8): lea 0xe0(%rsp),%rax
ebea(5): mov %rax,0x60(%rsp)
ebef(8): lea 0xd4(%rsp),%rax
ebf7(8): mov %rax,0x80(%rsp)
ebff(2): jmp 0x5d(%rip)
ec01(7): nop 0x0(%rax)
ec08(3): cmp %r13,%r14
ec0b(8): mov 0x168(%rsp),%r8
ec13(3): setz %al
ec16(4): and %al,0x18(%rsp)
ec1a(5): movzx 0x68(%r13),%eax
ec1f(6): cmove 0x8(%rsp),%rbx
ec25(2): test $0x10,%al
ec27(5): mov %rbx,0x8(%rsp)
ec2c(2): jz 0x2d(%rip)
ec2e(2): test %al,%al
ec30(6): js 0x4c0(%rip)
ec36(4): mov 0x58(%rsp),%eax
ec3a(5): mov %r8,0x20(%rsp)
ec3f(2): test %eax,%eax
ec41(6): jz 0x125(%rip)
ec47(9): mov $0x1,0x30(%rsp)
ec50(9): mov $0x0,0x50(%rsp)
ec59(3): mov %r13,%r14
ec5c(8): cmp %r8,0x188(%rsp)
ec64(6): jle 0xf0(%rip)
ec6a(8): mov 0x160(%rsp),%rax
ec72(4): lea 0x1(%r8),%rbx
ec76(3): cmp %rax,%rbx
ec79(6): jnl 0x4a7(%rip)
ec7f(8): mov 0x150(%rsp),%rax
ec87(3): cmp %rax,%rbx
ec8a(6): jnl 0x786(%rip)
ec90(5): test $0x20,0x68(%r14)
ec95(6): jnz 0x4cb(%rip)
ec9b(4): lea 0x1(%r8),%rax
ec9f(8): mov %rax,0x168(%rsp)
eca7(8): mov 0x128(%rsp),%rax
ecaf(5): movzx 0x0(%rax,%r8,1),%r13d
ecb4(4): mov 0x58(%r14),%rax
ecb8(3): test %rax,%rax
ecbb(6): jz 0x715(%rip)
ecc1(4): mov 0x0(%rax,%r13,8),%r13
ecc5(9): cmp $0x0,0x1d8(%rsp)
ecce(2): jz 0x16(%rip)
ecd0(4): mov (%rsp),%rsi
ecd4(5): mov 0x28(%rsp),%rdi
ecd9(3): mov %r13,%rdx
ecdc(5): call 0xfffff2f4(%rip)
ece1(3): mov %rax,%r13
ece4(3): test %r13,%r13
ece7(6): jnz 0xffffff21(%rip)
eced(7): mov 0xd0(%rsp),%ecx
ecf4(8): mov 0x1d8(%rsp),%rdi
ecfc(2): test %ecx,%ecx
ecfe(6): jnz 0x8c2(%rip)
ed04(3): test %rdi,%rdi
ed07(2): jz 0x4d(%rip)
ed09(8): movzx 0xce(%rsp),%eax
ed11(3): xor $0x1,%eax
ed14(4): test %al,0x30(%rsp)
ed18(2): jnz 0x3c(%rip)
ed1a(8): mov 0x1e0(%rsp),%rsi
ed22(8): mov 0x168(%rsp),%rax
ed2a(2): xor %ecx,%ecx
ed2c(2): jmp 0x17(%rip)
ed2e(2): nop 
ed30(5): cmp $0x0,0x0(%rdi,%rdx,8)
ed35(3): mov %rdx,%rax
ed38(5): mov $0x1,%ecx
ed3d(6): jnz 0x373(%rip)
ed43(4): lea 0x1(%rax),%rdx
ed47(3): cmp %rdx,%rsi
ed4a(2): jnl 0xffffffe6(%rip)
ed4c(2): test %cl,%cl
ed4e(6): jnz 0xed0(%rip)
ed54(5): mov 0x50(%rsp),%rax
ed59(3): test %rax,%rax
ed5c(2): jz 0xa(%rip)
ed5e(5): mov 0x8(%rsp),%rdi
ed63(3): add %rdi,(%rax)
ed66(5): mov 0x20(%rsp),%rax
ed6b(4): cmp $0xffffffff,%rax
ed6f(6): jz 0x6c1(%rip)
ed75(4): cmp $0xfffffffe,%rax
ed79(6): jz 0x7f7(%rip)
ed7f(5): mov 0x20(%rsp),%rax
ed84(8): mov %rax,0x1c8(%rsp)
ed8c(5): mov 0x48(%rsp),%rax
ed91(4): test $0x10,0x38(%rax)
ed95(6): jnz 0x7bb(%rip)
ed9b(9): cmp $0x1,0x270(%rsp)
eda4(6): jbe 0x8f8(%rip)
edaa(5): mov 0x20(%rsp),%rcx
edaf(8): mov 0x1d8(%rsp),%rbx
edb7(4): mov (%rsp),%rdi
edbb(4): mov 0x0(%rbx,%rcx,8),%rax
edbf(4): mov 0x10(%rax),%rsi
edc3(4): lea 0x18(%rax),%rdx
edc7(5): call 0xffffacf9(%rip)
edcc(3): mov %rax,%r13
edcf(8): mov %rax,0x1d0(%rsp)
edd7(5): mov 0x38(%rsp),%rax
eddc(7): test $0x1,0xb0(%rax)
ede3(2): jnz 0x1d(%rip)
ede5(5): mov 0x38(%rsp),%rax
edea(8): cmp $0x0,0x98(%rax)
edf2(6): jz 0x99a(%rip)
edf8(8): mov 0x1d0(%rsp),%r13
ee00(a): mov $0x2305843009213693950,%rsi
ee0a(5): cmp %rsi,0x20(%rsp)
ee0f(8): mov 0x1b8(%rsp),%r15
ee17(6): jnbe 0xc64(%rip)
ee1d(5): mov 0x20(%rsp),%rax
ee22(4): add $0x1,%rax
ee26(8): lea 0x0(,%rax,8),%rbx
ee2e(5): mov %rax,0x8(%rsp)
ee33(3): mov %rbx,%rdi
ee36(5): call 0xffff2cca(%rip)
ee3b(3): test %rax,%rax
ee3e(3): mov %rax,%r12
ee41(6): jz 0x72f(%rip)
ee47(8): cmp $0x0,0x98(%r15)
ee4f(6): jz 0x896(%rip)
ee55(3): mov %rbx,%rdi
ee58(5): call 0xffff2ca8(%rip)
ee5d(3): test %rax,%rax
ee60(3): mov %rax,%rbp
ee63(6): jz 0x705(%rip)
ee69(5): mov 0x20(%rsp),%r14
ee6e(8): lea 0xe0(%rsp),%rbx
ee76(5): mov %r15,0x10(%rsp)
ee7b(5): mov %rax,0x18(%rsp)
ee80(5): mov 0x8(%rsp),%rax
ee85(2): xor %esi,%esi
ee87(3): mov %rbp,%rdi
ee8a(8): lea 0x0(,%rax,8),%rdx
ee92(5): call 0xffff2bce(%rip)
ee97(4): pxor %xmm0,%xmm0
ee9b(8): mov %r12,0xe0(%rsp)
eea3(8): mov %rbp,0xe8(%rsp)
eeab(8): mov %r13,0xf0(%rsp)
eeb3(3): mov %rbx,%rsi
eeb6(8): mov %r14,0xf8(%rsp)
eebe(4): mov (%rsp),%rdi
eec2(4): movaps %xmm0,0x20(%rbx)
eec6(8): mov $0x0,0x30(%rbx)
eece(5): call 0xfffff2f2(%rip)
eed3(8): mov 0x110(%rsp),%rdi
eedb(3): mov %eax,%r15d
eede(5): call 0xffff29f2(%rip)
eee3(3): test %r15d,%r15d
eee6(6): jnz 0xc1e(%rip)
eeec(5): cmp $0x0,(%r12)
eef1(6): jnz 0xc72(%rip)
eef7(5): cmp $0x0,0x0(%rbp)
eefc(6): jnz 0xc67(%rip)
ef02(8): mov 0x1d8(%rsp),%rdx
ef0a(6): nop 0x0(%rax,%rax,1)
ef10(4): sub $0x1,%r14
ef14(4): cmp $0xffffffff,%r14
ef18(6): jz 0xac3(%rip)
ef1e(4): mov 0x0(%rdx,%r14,8),%rax
ef22(3): test %rax,%rax
ef25(2): jz 0xffffffeb(%rip)
ef27(4): test $0x10,0x68(%rax)
ef2b(2): jz 0xffffffe5(%rip)
ef2d(4): mov 0x10(%rax),%rsi
ef31(4): mov (%rsp),%rdi
ef35(4): lea 0x18(%rax),%rdx
ef39(3): mov %r14,%rcx
ef3c(5): call 0xffffab84(%rip)
ef41(3): mov %rax,%r13
ef44(4): lea 0x1(%r14),%rax
ef48(5): mov %rax,0x8(%rsp)
ef4d(5): jmp 0xffffff33(%rip)
ef52(5): cmp %rbp,0x70(%rsp)
ef57(6): jle 0xfffffb38(%rip)
ef5d(5): mov 0x78(%rsp),%rax
ef62(8): mov 0xb0(%rsp),%rdi
ef6a(5): mov 0x68(%rsp),%rsi
ef6f(4): movzx 0x0(%rax,%rbp,1),%eax
ef73(4): movzx 0x0(%rdi,%rax,1),%edx
ef77(4): lea 0x1(%rbp),%rax
ef7b(4): cmp $0x0,0x0(%rsi,%rdx,1)
ef7f(6): jnz 0xfffffb59(%rip)
ef85(5): mov 0x68(%rsp),%rsi
ef8a(8): mov 0xb0(%rsp),%rdi
ef92(5): mov 0x70(%rsp),%rcx
ef97(5): mov 0x78(%rsp),%r8
ef9c(2): jmp 0x1b(%rip)
ef9e(2): nop 
efa0(5): movzx 0x0(%r8,%rax,1),%eax
efa5(4): movzx 0x0(%rdi,%rax,1),%edx
efa9(4): lea 0x1(%rbp),%rax
efad(4): cmp $0x0,0x0(%rsi,%rdx,1)
efb1(6): jnz 0xc60(%rip)
efb7(3): cmp %rax,%rcx
efba(3): mov %rax,%rbp
efbd(2): jnz 0xffffffe3(%rip)
efbf(5): jmp 0xfffffac3(%rip)
efc4(8): cmp %rbp,0x90(%rsp)
efcc(6): jnle 0x49d(%rip)
efd2(2): xor %ecx,%ecx
efd4(3): mov %rbp,%rax
efd7(5): mov 0x68(%rsp),%rdi
efdc(8): mov 0xb0(%rsp),%rsi
efe4(8): mov 0x90(%rsp),%r9
efec(5): mov 0x78(%rsp),%r10
eff1(8): mov 0x88(%rsp),%r8
eff9(2): jmp 0x19(%rip)
effb(5): nop 0x0(%rax,%rax,1)
f000(4): sub $0x1,%rax
f004(5): mov $0x1,%ecx
f009(3): cmp %r9,%rax
f00c(6): jl 0x9e4(%rip)
f012(2): xor %edx,%edx
f014(3): cmp %rax,%r8
f017(2): jle 0x7(%rip)
f019(5): movzx 0x0(%r10,%rax,1),%edx
f01e(3): test %rsi,%rsi
f021(2): jz 0x6(%rip)
f023(4): movzx 0x0(%rsi,%rdx,1),%edx
f027(4): cmp $0x0,0x0(%rdi,%rdx,1)
f02b(2): jz 0xffffffd5(%rip)
f02d(2): test %cl,%cl
f02f(6): jz 0xfffffaa9(%rip)
f035(8): mov %rax,0xd8(%rsp)
f03d(3): mov %rax,%rbp
f040(5): jmp 0xfffffa98(%rip)
f045(3): nop (%rax)
f048(4): mov %eax,0x5c(%rsp)
f04c(4): nop 0x0(%rax)
f050(8): mov 0x1d8(%rsp),%rdi
f058(5): call 0xffff2878(%rip)
f05d(5): mov 0x38(%rsp),%rax
f062(8): cmp $0x0,0x98(%rax)
f06a(6): jnz 0x926(%rip)
f070(4): mov (%rsp),%rdi
f074(5): call 0xffff875c(%rip)
f079(8): mov 0x228(%rsp),%rsi
f081(9): xor $0x28,%rsi
f08a(4): mov 0x5c(%rsp),%eax
f08e(6): jnz 0xb9d(%rip)
f094(7): add $0x238,%rsp
f09b(1): pop %rbx
f09c(1): pop %rbp
f09d(2): pop %r12
f09f(2): pop %r13
f0a1(2): pop %r14
f0a3(2): pop %r15
f0a5(1): ret near (%rsp)
f0a6(a): nop 0x0(%rax,%rax,1)
f0b0(4): mov (%rsp),%rsi
f0b4(5): mov 0x28(%rsp),%rdi
f0b9(8): mov %rdx,0x168(%rsp)
f0c1(2): xor %edx,%edx
f0c3(5): call 0xffffef0d(%rip)
f0c8(7): mov 0xd0(%rsp),%edx
f0cf(2): test %edx,%edx
f0d1(6): jnz 0x93c(%rip)
f0d7(3): test %rax,%rax
f0da(6): jnz 0x946(%rip)
f0e0(8): mov 0x1d8(%rsp),%rdi
f0e8(5): jmp 0xfffffc32(%rip)
f0ed(3): nop (%rax)
f0f0(4): mov 0x10(%r13),%rsi
f0f4(4): mov (%rsp),%rdi
f0f8(4): lea 0x18(%r13),%rdx
f0fc(3): mov %r8,%rcx
f0ff(5): mov %r8,0x10(%rsp)
f104(5): call 0xffffa9bc(%rip)
f109(3): test %rax,%rax
f10c(5): mov 0x10(%rsp),%r8
f111(6): jz 0xfffffb48(%rip)
f117(5): jmp 0xfffffb1f(%rip)
f11c(4): nop 0x0(%rax)
f120(8): cmp 0x178(%rsp),%rax
f128(6): jnl 0xfffffb57(%rip)
f12e(4): mov (%rsp),%rdi
f132(3): lea 0x1(%rbx),%esi
f135(5): call 0xffff7eeb(%rip)
f13a(2): test %eax,%eax
f13c(7): mov %eax,0xd0(%rsp)
f143(6): jnz 0x8e5(%rip)
f149(5): test $0x20,0x68(%r14)
f14e(8): mov 0x168(%rsp),%r8
f156(6): jz 0xfffffb45(%rip)
f15c(4): nop 0x0(%rax)
f160(5): cmp $0x0,0x10(%r14)
f165(8): mov 0x1b8(%rsp),%r13
f16d(6): jle 0x32e(%rip)
f173(7): lea 0xd8(%r13),%rax
f17a(3): xor %r12d,%r12d
f17d(8): mov %rbx,0xa0(%rsp)
f185(3): mov %r12,%rbx
f188(3): mov %r8,%r12
f18b(5): mov %rax,0x40(%rsp)
f190(5): jmp 0x158(%rip)
f195(3): nop (%rax)
f198(2): test $0x1,%al
f19a(6): jz 0x140(%rip)
f1a0(3): and $0x8,%ecx
f1a3(6): jnz 0x137(%rip)
f1a9(3): test $0x20,%dl
f1ac(2): jz 0xa(%rip)
f1ae(2): test $0x2,%al
f1b0(6): jz 0x12a(%rip)
f1b6(6): and $0x80,%edx
f1bc(2): jz 0x14(%rip)
f1be(2): test $0x8,%al
f1c0(6): jz 0x11a(%rip)
f1c6(a): nop 0x0(%rax,%rax,1)
f1d0(4): mov (%rsp),%rcx
f1d4(5): mov 0x40(%rsp),%rsi
f1d9(3): mov %r12,%r8
f1dc(3): mov %r15,%rdx
f1df(3): mov %rbp,%rdi
f1e2(5): call 0xffffd0ae(%rip)
f1e7(2): test %eax,%eax
f1e9(6): jz 0xe9(%rip)
f1ef(3): movsxd %eax,%rbp
f1f2(8): add 0x168(%rsp),%rbp
f1fa(7): cmp %eax,0x200(%rsp)
f201(8): cmovnl 0x200(%rsp),%eax
f209(4): mov (%rsp),%rdi
f20d(3): mov %rbp,%rsi
f210(7): mov %eax,0x200(%rsp)
f217(5): call 0xffff7f59(%rip)
f21c(2): test %eax,%eax
f21e(7): mov %eax,0xd4(%rsp)
f225(6): jnz 0x29b(%rip)
f22b(4): mov 0x18(%r13),%rax
f22f(8): lea 0x0(,%rbp,8),%r12
f237(4): mov 0x0(%rax,%r15,8),%rax
f23b(8): mov 0x1d8(%rsp),%r15
f243(4): lea 0x0(%rax,%rax,2),%rdx
f247(4): mov 0x30(%r13),%rax
f24b(3): add %r12,%r15
f24e(4): lea 0x0(%rax,%rdx,8),%rdx
f252(3): mov (%r15),%rax
f255(3): test %rax,%rax
f258(6): jz 0x100(%rip)
f25e(4): mov 0x50(%rax),%rsi
f262(5): mov 0x60(%rsp),%rdi
f267(5): call 0xffff9a69(%rip)
f26c(2): test %eax,%eax
f26e(7): mov %eax,0xd4(%rsp)
f275(6): jnz 0x24b(%rip)
f27b(7): mov 0x1c0(%rsp),%edx
f282(4): mov (%rsp),%rdi
f286(4): lea 0xffffffff(%rbp),%rsi
f28a(5): call 0xffffa636(%rip)
f28f(5): mov 0x60(%rsp),%rdx
f294(8): mov 0x80(%rsp),%rdi
f29c(2): mov %eax,%ecx
f29e(8): add 0x1d8(%rsp),%r12
f2a6(3): mov %r13,%rsi
f2a9(5): call 0xffff9b87(%rip)
f2ae(8): mov 0xf0(%rsp),%rdi
f2b6(4): mov %rax,(%r12)
f2ba(5): call 0xffff2616(%rip)
f2bf(8): mov 0x1d8(%rsp),%rdi
f2c7(5): cmp $0x0,0x0(%rdi,%rbp,8)
f2cc(6): jz 0xe5(%rip)
f2d2(8): mov 0x168(%rsp),%r12
f2da(4): add $0x1,%rbx
f2de(4): cmp 0x10(%r14),%rbx
f2e2(6): jnl 0x1ae(%rip)
f2e8(4): mov 0x18(%r14),%rax
f2ec(4): mov 0x0(%r13),%rbp
f2f0(4): mov 0x0(%rax,%rbx,8),%r15
f2f4(3): mov %r15,%rax
f2f7(4): shl/sal $0x4,%rax
f2fb(3): add %rbp,%rax
f2fe(4): test $0x10,0xa(%rax)
f302(2): jz 0xffffffd8(%rip)
f304(3): mov 0x8(%rax),%ecx
f307(6): test $0x3ff00,%ecx
f30d(4): mov %ecx,0x10(%rsp)
f311(6): jz 0xfffffebf(%rip)
f317(7): mov 0x1c0(%rsp),%edx
f31e(4): mov (%rsp),%rdi
f322(3): mov %r12,%rsi
f325(5): call 0xffffa59b(%rip)
f32a(4): mov 0x10(%rsp),%ecx
f32e(3): shr $0x8,%ecx
f331(2): mov %ecx,%edx
f333(5): and $0x3ff,%dx
f338(3): test $0x4,%cl
f33b(6): jnz 0xfffffe5d(%rip)
f341(3): and $0x8,%ecx
f344(6): jz 0xfffffe65(%rip)
f34a(2): test $0x1,%al
f34c(6): jz 0xfffffe5d(%rip)
f352(2): jmp 0xffffff88(%rip)
f354(4): nop 0x0(%rax)
f358(4): movdqu (%rdx),%xmm0
f35c(4): lea 0xffffffff(%rbp),%rsi
f360(4): mov (%rsp),%rdi
f364(8): movaps %xmm0,0xe0(%rsp)
f36c(4): mov 0x10(%rdx),%rax
f370(7): mov 0x1c0(%rsp),%edx
f377(8): mov %rax,0xf0(%rsp)
f37f(5): call 0xffffa541(%rip)
f384(8): mov 0x80(%rsp),%rdi
f38c(5): mov 0x60(%rsp),%rdx
f391(2): mov %eax,%ecx
f393(3): mov %r13,%rsi
f396(5): call 0xffff9a9a(%rip)
f39b(8): mov 0x1d8(%rsp),%rdi
f3a3(3): mov %rax,(%r15)
f3a6(5): cmp $0x0,0x0(%rdi,%rbp,8)
f3ab(6): jnz 0xffffff27(%rip)
f3b1(7): mov 0xd4(%rsp),%eax
f3b8(2): test %eax,%eax
f3ba(6): jz 0xffffff18(%rip)
f3c0(8): mov 0xa0(%rsp),%rbx
f3c8(5): jmp 0x108(%rip)
f3cd(3): nop (%rax)
f3d0(4): mov 0x60(%r14),%rbp
f3d4(3): test %rbp,%rbp
f3d7(6): jz 0x1ae(%rip)
f3dd(8): mov 0x168(%rsp),%rax
f3e5(7): mov 0x1c0(%rsp),%edx
f3ec(4): mov (%rsp),%rdi
f3f0(4): lea 0xffffffff(%rax),%rsi
f3f4(5): call 0xffffa4cc(%rip)
f3f9(2): test $0x1,%al
f3fb(6): jz 0xb5(%rip)
f401(8): mov 0x800(%rbp,%r13,8),%r13
f409(5): jmp 0xfffff8bc(%rip)
f40e(2): nop 
f410(8): cmp 0x178(%rsp),%rax
f418(6): jnl 0xfffff878(%rip)
f41e(5): jmp 0xfffffd10(%rip)
f423(3): mov %r12,%rdi
f426(5): call 0xffff24aa(%rip)
f42b(5): nop 0x0(%rax,%rax,1)
f430(4): mov (%rsp),%rdi
f434(5): call 0xffff853c(%rip)
f439(8): mov 0xd8(%rsp),%rbp
f441(8): movsxd 0xac(%rsp),%rax
f449(3): add %rax,%rbp
f44c(8): cmp 0x90(%rsp),%rbp
f454(8): mov %rbp,0xd8(%rsp)
f45c(2): jl 0xd(%rip)
f45e(5): cmp 0x70(%rsp),%rbp
f463(6): jle 0xfffff575(%rip)
f469(8): mov 0x1d8(%rsp),%rdi
f471(8): mov $0x1,0x5c(%rsp)
f479(5): jmp 0xfffffbdf(%rip)
f47e(2): nop 
f480(8): mov $0x1,0x5c(%rsp)
f488(5): jmp 0xfffffbf1(%rip)
f48d(3): nop (%rax)
f490(8): mov 0xa0(%rsp),%rbx
f498(3): mov %r12,%r8
f49b(b): mov $0x0,0xd0(%rsp)
f4a6(5): jmp 0xfffff7f5(%rip)
f4ab(5): nop 0x0(%rax,%rax,1)
f4b0(5): mov 0x0(%rbp,%r13,8),%r13
f4b5(5): jmp 0xfffff810(%rip)
f4ba(6): nop 0x0(%rax,%rax,1)
f4c0(8): mov 0xa0(%rsp),%rbx
f4c8(8): mov 0x1d8(%rsp),%rdi
f4d0(3): test %rdi,%rdi
f4d3(7): mov %eax,0xd0(%rsp)
f4da(6): jz 0xe6(%rip)
f4e0(3): xor %r13d,%r13d
f4e3(5): jmp 0xfffff7ed(%rip)
f4e8(8): nop 0x0(%rax,%rax,1)
f4f0(7): mov 0x1c0(%rsp),%edx
f4f7(4): mov (%rsp),%rdi
f4fb(4): lea 0xffffffff(%rax),%rsi
f4ff(5): call 0xffffa3c1(%rip)
f504(2): test $0x1,%al
f506(6): jz 0x16f(%rip)
f50c(4): mov 0x50(%rbx),%r14
f510(3): test %r14,%r14
f513(6): jnz 0xfffff66b(%rip)
f519(7): mov 0xd0(%rsp),%eax
f520(3): cmp $0xc,%eax
f523(4): mov %eax,0x5c(%rsp)
f527(6): jz 0xfffffb29(%rip)
f52d(7): lea 0x68dc(%rip),%rcx
f534(7): lea 0x62f5(%rip),%rsi
f53b(7): lea 0x63a2(%rip),%rdi
f542(5): mov $0x435,%edx
f547(5): call 0xffff2509(%rip)
f54c(4): nop 0x0(%rax)
f550(5): mov 0x38(%rsp),%rax
f555(8): cmp $0x0,0x98(%rax)
f55d(6): jz 0x22f(%rip)
f563(5): jmp 0x14c(%rip)
f568(3): mov %r12,%rdi
f56b(5): call 0xffff2365(%rip)
f570(8): mov 0x1d8(%rsp),%rdi
f578(8): mov $0xc,0x5c(%rsp)
f580(5): jmp 0xfffffad8(%rip)
f585(8): mov 0x1b8(%rsp),%rdi
f58d(3): mov %r14,%rsi
f590(5): call 0xffffafe0(%rip)
f595(2): test %al,%al
f597(6): jnz 0xfffff71d(%rip)
f59d(8): mov 0x1d8(%rsp),%rdi
f5a5(b): mov $0xc,0xd0(%rsp)
f5b0(3): test %rdi,%rdi
f5b3(6): jnz 0xffffff2d(%rip)
f5b9(7): nop 0x0(%rax)
f5c0(8): mov $0xc,0x5c(%rsp)
f5c8(5): jmp 0xfffffa90(%rip)
f5cd(5): mov 0x68(%rsp),%rbx
f5d2(8): mov 0xac(%rsp),%r13d
f5da(8): mov 0x90(%rsp),%r14
f5e2(5): mov 0x70(%rsp),%r15
f5e7(8): mov 0x88(%rsp),%r12
f5ef(2): jmp 0x49(%rip)
f5f1(7): nop 0x0(%rax)
f5f8(3): cmp %rbp,%r12
f5fb(3): mov %rbx,%rax
f5fe(2): jle 0x11(%rip)
f600(8): mov 0x128(%rsp),%rax
f608(4): movzx 0x0(%rax,%rdx,1),%eax
f60c(3): add %rbx,%rax
f60f(3): cmp $0x0,(%rax)
f612(6): jnz 0xfffff4c6(%rip)
f618(3): movsxd %r13d,%rax
f61b(3): add %rax,%rbp
f61e(3): cmp %r14,%rbp
f621(8): mov %rbp,0xd8(%rsp)
f629(6): jl 0xfffffe40(%rip)
f62f(3): cmp %r15,%rbp
f632(6): jnle 0xfffffe37(%rip)
f638(3): mov %rbp,%rdx
f63b(8): sub 0x148(%rsp),%rdx
f643(8): cmp %rdx,0x158(%rsp)
f64b(2): jnbe 0xffffffad(%rip)
f64d(7): mov 0x280(%rsp),%edx
f654(4): mov (%rsp),%rdi
f658(3): mov %rbp,%rsi
f65b(5): call 0xffffa535(%rip)
f660(2): test %eax,%eax
f662(6): jnz 0xfffff9e6(%rip)
f668(3): mov %rbp,%rdx
f66b(8): sub 0x148(%rsp),%rdx
f673(2): jmp 0xffffff85(%rip)
f675(2): test %eax,%eax
f677(6): jz 0xfffff507(%rip)
f67d(2): mov %eax,%edx
f67f(3): and $0x6,%edx
f682(3): cmp $0x6,%edx
f685(6): jz 0x46a(%rip)
f68b(2): test $0x2,%al
f68d(6): jz 0x4b3(%rip)
f693(4): mov 0x58(%rbx),%r14
f697(5): jmp 0xfffffe79(%rip)
f69c(5): mov 0x38(%rsp),%rax
f6a1(8): cmp $0x0,0x98(%rax)
f6a9(6): jz 0xe3(%rip)
f6af(5): mov 0x20(%rsp),%rcx
f6b4(8): mov 0x1d8(%rsp),%rbx
f6bc(4): mov (%rsp),%rdi
f6c0(4): mov 0x0(%rbx,%rcx,8),%rax
f6c4(4): mov 0x10(%rax),%rsi
f6c8(4): lea 0x18(%rax),%rdx
f6cc(5): call 0xffffa3f4(%rip)
f6d1(8): mov %rax,0x1d0(%rsp)
f6d9(5): jmp 0xfffff71f(%rip)
f6de(2): xor %ecx,%ecx
f6e0(5): jmp 0xfffff28e(%rip)
f6e5(4): pxor %xmm0,%xmm0
f6e9(8): mov %rax,0xe0(%rsp)
f6f1(4): mov (%rsp),%rdi
f6f5(5): mov 0x20(%rsp),%rax
f6fa(8): lea 0xe0(%rsp),%rbx
f702(c): mov $0x0,0xe8(%rsp)
f70e(8): mov %r13,0xf0(%rsp)
f716(3): mov %rbx,%rsi
f719(c): mov $0x0,0x110(%rsp)
f725(8): movaps %xmm0,0x100(%rsp)
f72d(8): mov %rax,0xf8(%rsp)
f735(5): call 0xffffea8b(%rip)
f73a(8): mov 0x110(%rsp),%rdi
f742(4): mov %eax,0x8(%rsp)
f746(5): call 0xffff218a(%rip)
f74b(4): mov 0x8(%rsp),%eax
f74f(2): test %eax,%eax
f751(6): jnz 0x447(%rip)
f757(5): cmp $0x0,(%r12)
f75c(6): jz 0xfffffcc7(%rip)
f762(8): mov 0x1d8(%rsp),%rdi
f76a(5): call 0xffff2166(%rip)
f76f(5): mov 0x20(%rsp),%rax
f774(8): mov %r12,0x1d8(%rsp)
f77c(8): mov %r13,0x1d0(%rsp)
f784(8): mov %rax,0x1c8(%rsp)
f78c(9): cmp $0x0,0x270(%rsp)
f795(6): jz 0xfffff8bb(%rip)
f79b(9): cmp $0x1,0x270(%rsp)
f7a4(6): jz 0x424(%rip)
f7aa(8): mov 0xb8(%rsp),%rsi
f7b2(8): mov 0x270(%rsp),%rcx
f7ba(7): mov $0xffffffff,%rdx
f7c1(4): shl/sal $0x4,%rcx
f7c5(4): lea 0x10(%rsi),%rax
f7c9(3): add %rsi,%rcx
f7cc(4): mov %rdx,0x8(%rax)
f7d0(3): mov %rdx,(%rax)
f7d3(4): add $0x10,%rax
f7d7(3): cmp %rax,%rcx
f7da(2): jnz 0xfffffff2(%rip)
f7dc(8): mov 0xb8(%rsp),%rdi
f7e4(8): mov 0x1c8(%rsp),%rax
f7ec(4): mov %rax,0x8(%rdi)
f7f0(5): mov 0x48(%rsp),%rax
f7f5(7): mov $0x0,(%rdi)
f7fc(4): test $0x10,0x38(%rax)
f800(6): jnz 0x3e3(%rip)
f806(9): cmp $0x1,0x270(%rsp)
f80f(6): jz 0x3d4(%rip)
f815(5): mov 0x38(%rsp),%rax
f81a(3): xor %r8d,%r8d
f81d(7): test $0x1,0xb0(%rax)
f824(2): jz 0x11(%rip)
f826(3): xor %r8d,%r8d
f829(8): cmp $0x0,0x98(%rax)
f831(4): setnle %r8b
f835(8): mov 0xb8(%rsp),%rbx
f83d(8): mov 0x270(%rsp),%rdx
f845(4): mov (%rsp),%rsi
f849(5): mov 0x48(%rsp),%rdi
f84e(3): mov %rbx,%rcx
f851(5): call 0xffffd3ff(%rip)
f856(2): test %eax,%eax
f858(6): jnz 0x2d5(%rip)
f85e(3): mov (%rbx),%rax
f861(9): movzx 0x1ac(%rsp),%r11d
f86a(8): mov 0x150(%rsp),%r10
f872(2): xor %ecx,%ecx
f874(8): mov 0x138(%rsp),%r9
f87c(8): mov 0x158(%rsp),%r8
f884(8): mov 0xd8(%rsp),%rdi
f88c(8): mov 0xb8(%rsp),%rdx
f894(2): jmp 0x5(%rip)
f896(3): mov (%rdx),%rax
f899(4): cmp $0xffffffff,%rax
f89d(2): jz 0x1c(%rip)
f89f(3): test %r11b,%r11b
f8a2(4): mov 0x8(%rdx),%rsi
f8a6(6): jnz 0x344(%rip)
f8ac(3): add %rdi,%rax
f8af(3): add %rdi,%rsi
f8b2(3): mov %rax,(%rdx)
f8b5(4): mov %rsi,0x8(%rdx)
f8b9(4): add $0x1,%rcx
f8bd(4): add $0x10,%rdx
f8c1(8): cmp 0x270(%rsp),%rcx
f8c9(2): jnz 0xffffffcd(%rip)
f8cb(9): cmp $0x0,0x98(%rsp)
f8d4(2): jle 0x41(%rip)
f8d6(8): mov 0x98(%rsp),%rdx
f8de(8): mov 0xb8(%rsp),%rdi
f8e6(3): mov %rcx,%rax
f8e9(4): shl/sal $0x4,%rax
f8ed(3): add %rcx,%rdx
f8f0(5): lea 0x8(%rdi,%rax,1),%rax
f8f5(4): shl/sal $0x4,%rdx
f8f9(5): lea 0x8(%rdi,%rdx,1),%rsi
f8fe(7): mov $0xffffffff,%rdx
f905(4): mov %rdx,0xfffffff8(%rax)
f909(3): mov %rdx,(%rax)
f90c(4): add $0x10,%rax
f910(3): cmp %rax,%rsi
f913(2): jnz 0xfffffff2(%rip)
f915(5): mov 0x38(%rsp),%rax
f91a(8): mov 0x1d8(%rsp),%rdi
f922(7): mov 0xe0(%rax),%r9
f929(3): test %r9,%r9
f92c(6): jz 0xfffff72c(%rip)
f932(8): mov 0xb8(%rsp),%r10
f93a(3): xor %r8d,%r8d
f93d(4): lea 0x10(%r10),%rdx
f941(2): jmp 0x38(%rip)
f943(5): mov 0xfffffff8(%r9,%rsi,8),%rax
f948(3): cmp %r8,%rax
f94b(2): jz 0x27(%rip)
f94d(4): add $0x1,%rax
f951(4): shl/sal $0x4,%rax
f955(4): mov 0x0(%r10,%rax,1),%rax
f959(3): mov %rax,(%rdx)
f95c(5): mov 0xfffffff8(%r9,%rsi,8),%rax
f961(4): add $0x1,%rax
f965(4): shl/sal $0x4,%rax
f969(5): mov 0x8(%r10,%rax,1),%rax
f96e(4): mov %rax,0x8(%rdx)
f972(4): add $0x10,%rdx
f976(3): mov %rsi,%r8
f979(4): lea 0x1(%r8),%rsi
f97d(3): cmp %rcx,%rsi
f980(2): jnz 0xffffffc3(%rip)
f982(5): jmp 0xfffff6d6(%rip)
f987(9): nop 0x0(%rax,%rax,1)
f990(4): mov (%rsp),%rdi
f994(5): call 0xffff7fdc(%rip)
f999(8): mov 0x218(%rsp),%rdi
f9a1(5): call 0xffff1f2f(%rip)
f9a6(8): mov 0x1f8(%rsp),%rdi
f9ae(5): call 0xffff1f22(%rip)
f9b3(5): jmp 0xfffff6bd(%rip)
f9b8(5): mov 0x38(%rsp),%rax
f9bd(7): test $0x2,0xb0(%rax)
f9c4(6): jnz 0xffffeed5(%rip)
f9ca(c): mov $0x0,0x1d8(%rsp)
f9d6(5): jmp 0xffffeeff(%rip)
f9db(3): mov %r12,%rdi
f9de(5): call 0xffff1ef2(%rip)
f9e3(3): mov %rbp,%rdi
f9e6(5): call 0xffff1eea(%rip)
f9eb(5): jmp 0xfffffa45(%rip)
f9f0(8): mov %rax,0xd8(%rsp)
f9f8(8): mov 0x1d8(%rsp),%rdi
fa00(8): mov $0x1,0x5c(%rsp)
fa08(5): jmp 0xfffff650(%rip)
fa0d(3): test %rax,%rax
fa10(3): mov %rax,%r13
fa13(6): jnz 0xfffff1f5(%rip)
fa19(5): jmp 0xfffff33b(%rip)
fa1e(2): nop 
fa20(3): mov %rax,%r13
fa23(5): jmp 0xfffff1e5(%rip)
fa28(3): cmp $0xc,%eax
fa2b(6): jz 0xfffffb45(%rip)
fa31(7): lea 0x63d8(%rip),%rcx
fa38(7): lea 0x5df1(%rip),%rsi
fa3f(7): lea 0x5e9e(%rip),%rdi
fa46(5): mov $0x46c,%edx
fa4b(5): call 0xffff2005(%rip)
fa50(5): cmp $0x0,0x68(%r14)
fa55(2): js 0x71(%rip)
fa57(4): mov 0x58(%rsp),%esi
fa5b(5): mov 0x8(%rsp),%rax
fa60(2): test %esi,%esi
fa62(5): mov %rax,0x20(%rsp)
fa67(6): jz 0xfffff2ff(%rip)
fa6d(9): mov $0x1,0x30(%rsp)
fa76(5): jmp 0xfffff157(%rip)
fa7b(3): mov %rbx,%rdi
fa7e(8): mov $0xc,0x5c(%rsp)
fa86(5): jmp 0xfffff5d2(%rip)
fa8b(4): lea 0x10(%r14),%rbx
fa8f(4): lea 0x18(%r14),%rbp
fa93(4): mov (%rsp),%rdi
fa97(2): xor %ecx,%ecx
fa99(3): mov %rbp,%rdx
fa9c(3): mov %rbx,%rsi
fa9f(5): call 0xffff9cd1(%rip)
faa4(2): test %eax,%eax
faa6(7): mov %eax,0xd0(%rsp)
faad(2): jnz 0x4b(%rip)
faaf(5): movzx 0x68(%r14),%eax
fab4(2): test $0x40,%al
fab6(6): jnz 0xea(%rip)
fabc(5): mov $0x0,0x18(%rsp)
fac1(5): jmp 0xfffff0f2(%rip)
fac6(4): mov 0x10(%r14),%rsi
faca(5): mov 0x8(%rsp),%rcx
facf(4): lea 0x18(%r14),%rdx
fad3(4): mov (%rsp),%rdi
fad7(5): call 0xffff9fe9(%rip)
fadc(3): test %rax,%rax
fadf(5): mov %rax,0x30(%rsp)
fae4(6): jz 0xfffff0e9(%rip)
faea(5): jmp 0xffffff6d(%rip)
faef(4): mov 0x60(%rbx),%r14
faf3(5): jmp 0xfffffa1d(%rip)
faf8(2): cwde 
fafa(5): mov %rax,0x20(%rsp)
faff(5): jmp 0xfffff267(%rip)
fb04(5): mov 0x18(%rsp),%r14
fb09(3): mov %r15d,%eax
fb0c(3): mov %r12,%rdi
fb0f(4): mov %eax,0x8(%rsp)
fb13(5): call 0xffff1dbd(%rip)
fb18(3): mov %r14,%rdi
fb1b(5): call 0xffff1db5(%rip)
fb20(4): mov 0x8(%rsp),%eax
fb24(3): cmp $0x1,%eax
fb27(6): jz 0xfffff909(%rip)
fb2d(8): mov 0x1d8(%rsp),%rdi
fb35(4): mov %eax,0x5c(%rsp)
fb39(5): jmp 0xfffff51f(%rip)
fb3e(2): nop 
fb40(2): test $0x4,%al
fb42(6): jz 0xfffff03c(%rip)
fb48(4): mov 0x50(%r14),%rdx
fb4c(5): mov 0x28(%rsp),%rdi
fb51(2): mov %eax,%ecx
fb53(3): mov %rbx,%rsi
fb56(5): call 0xffff92da(%rip)
fb5b(3): mov %rax,%r14
fb5e(5): jmp 0xfffff9b2(%rip)
fb63(5): mov 0x10(%rsp),%r15
fb68(5): mov 0x8(%rsp),%rcx
fb6d(3): mov %rbp,%rdx
fb70(3): mov %r12,%rsi
fb73(5): mov %r14,0x20(%rsp)
fb78(3): mov %r15,%rdi
fb7b(5): call 0xffff9775(%rip)
fb80(3): mov %rbp,%rdi
fb83(4): mov %eax,0x8(%rsp)
fb87(5): call 0xffff1d49(%rip)
fb8c(4): mov 0x8(%rsp),%eax
fb90(2): test %eax,%eax
fb92(6): jz 0xfffffbd0(%rip)
fb98(3): xor %r14d,%r14d
fb9b(5): jmp 0xffffff71(%rip)
fba0(4): mov (%rsp),%rdi
fba4(3): mov %rbp,%rdx
fba7(3): mov %rbx,%rsi
fbaa(5): call 0xffffdb36(%rip)
fbaf(2): test %eax,%eax
fbb1(7): mov %eax,0xd0(%rsp)
fbb8(6): jnz 0xffffff40(%rip)
fbbe(5): movzx 0x68(%r14),%eax
fbc3(5): jmp 0xfffffef9(%rip)
fbc8(8): mov 0xb8(%rsp),%rsi
fbd0(8): mov 0x1c8(%rsp),%rax
fbd8(7): mov $0x0,(%rsi)
fbdf(4): mov %rax,0x8(%rsi)
fbe3(2): xor %eax,%eax
fbe5(5): jmp 0xfffffc7c(%rip)
fbea(3): cmp %rax,%r10
fbed(2): jz 0x1f(%rip)
fbef(4): mov 0x0(%r9,%rax,8),%rax
fbf3(3): cmp %rsi,%r10
fbf6(3): mov %rax,(%rdx)
fbf9(2): jz 0xb(%rip)
fbfb(4): mov 0x0(%r9,%rsi,8),%rsi
fbff(5): jmp 0xfffffcad(%rip)
fc04(3): mov %r8,%rsi
fc07(5): jmp 0xfffffca5(%rip)
fc0c(3): mov %r8,%rax
fc0f(2): jmp 0xffffffe4(%rip)
fc11(8): mov %rbp,0xd8(%rsp)
fc19(5): jmp 0xffffeebf(%rip)
fc1e(8): mov %rax,0x168(%rsp)
fc26(5): jmp 0xfffff12e(%rip)
fc2b(5): call 0xffff1db5(%rip)

"update_cur_sifted_state" :
fc30(2): push %r15
fc32(2): push %r14
fc34(3): mov %rdi,%rax
fc37(2): push %r13
fc39(2): push %r12
fc3b(3): mov %rsi,%r13
fc3e(1): push %rbp
fc3f(1): push %rbx
fc40(3): mov %rdx,%rbp
fc43(3): mov %rcx,%rbx
fc46(8): lea 0x0(,%rdx,8),%rcx
fc4e(7): sub $0xa8,%rsp
fc55(7): mov 0x98(%rax),%r12
fc5c(7): mov 0xb8(%rax),%rax
fc63(5): mov %rdi,0x8(%rsp)
fc68(5): mov %rcx,0x18(%rsp)
fc6d(9): mov $0x28,%rdi
fc76(8): mov %rdi,0x98(%rsp)
fc7e(2): xor %edi,%edi
fc80(4): mov 0x0(%rax,%rdx,8),%rdx
fc84(8): mov $0x0,0x5c(%rsp)
fc8c(4): mov 0x8(%rbx),%rcx
fc90(3): test %rdx,%rdx
fc93(6): jz 0x255(%rip)
fc99(4): lea 0x8(%rdx),%rdi
fc9d(3): test %rcx,%rcx
fca0(5): mov %rdi,0x10(%rsp)
fca5(2): jnz 0x53(%rip)
fca7(3): mov (%rsi),%rdx
fcaa(8): mov $0x0,0x0(%rdx,%rbp,8)
fcb2(4): mov 0x0(%rax,%rbp,8),%rdx
fcb6(2): xor %eax,%eax
fcb8(4): test $0x40,0x68(%rdx)
fcbc(6): jnz 0xe3(%rip)
fcc2(6): nop 0x0(%rax,%rax,1)
fcc8(8): mov 0x98(%rsp),%rdi
fcd0(9): xor $0x28,%rdi
fcd9(6): jnz 0x7a2(%rip)
fcdf(7): add $0xa8,%rsp
fce6(1): pop %rbx
fce7(1): pop %rbp
fce8(2): pop %r12
fcea(2): pop %r13
fcec(2): pop %r14
fcee(2): pop %r15
fcf0(1): ret near (%rsp)
fcf1(7): nop 0x0(%rax)
fcf8(5): lea 0x60(%rsp),%rdi
fcfd(3): mov %rbx,%rdx
fd00(3): mov %r12,%rsi
fd03(8): mov $0x0,0x60(%rsp)
fd0b(5): call 0xffff93e5(%rip)
fd10(3): mov %rax,%rdx
fd13(4): mov 0x60(%rsp),%eax
fd17(2): test %eax,%eax
fd19(2): jnz 0xffffffaf(%rip)
fd1b(4): mov 0x38(%rdx),%r15
fd1f(4): lea 0x38(%rdx),%r14
fd23(3): test %r15,%r15
fd26(6): jz 0x20a(%rip)
fd2c(5): mov 0x10(%rsp),%rsi
fd31(3): mov %r14,%rdx
fd34(3): mov %rbx,%rdi
fd37(5): call 0xffff88b9(%rip)
fd3c(2): test %eax,%eax
fd3e(4): mov %eax,0x5c(%rsp)
fd42(2): jnz 0xffffff86(%rip)
fd44(5): cmp $0x0,0x28(%r13)
fd49(6): jnz 0x277(%rip)
fd4f(5): mov 0x18(%rsp),%r14
fd54(4): add 0x0(%r13),%r14
fd58(5): lea 0x5c(%rsp),%rdi
fd5d(3): mov %rbx,%rdx
fd60(3): mov %r12,%rsi
fd63(5): call 0xffff938d(%rip)
fd68(3): mov %rax,(%r14)
fd6b(4): mov 0x5c(%rsp),%eax
fd6f(2): test %eax,%eax
fd71(6): jnz 0xffffff57(%rip)
fd77(6): cmp $0x0,0x10(%rsp)
fd7d(6): jz 0xffffff4b(%rip)
fd83(5): mov 0x8(%rsp),%rax
fd88(7): mov 0xb8(%rax),%rax
fd8f(4): mov 0x0(%rax,%rbp,8),%rdx
fd93(2): xor %eax,%eax
fd95(4): test $0x40,0x68(%rdx)
fd99(6): jz 0xffffff2f(%rip)
fd9f(5): mov 0x8(%rsp),%rax
fda4(2): xor %ebx,%ebx
fda6(7): mov 0xc8(%rax),%rsi
fdad(3): mov %rsi,%rdx
fdb0(3): cmp %rdx,%rbx
fdb3(2): jnl 0x60(%rip)
fdb5(4): lea 0x0(%rbx,%rdx,1),%rax
fdb9(3): mov %rax,%rcx
fdbc(4): shr $0x3f,%rcx
fdc0(3): add %rax,%rcx
fdc3(5): mov 0x8(%rsp),%rax
fdc8(3): sar $0x1,%rcx
fdcb(7): mov 0xd8(%rax),%rdi
fdd2(4): lea 0x0(%rcx,%rcx,4),%rax
fdd6(5): cmp 0x8(%rdi,%rax,8),%rbp
fddb(2): jle 0x33(%rip)
fddd(5): jmp 0x13a(%rip)
fde2(6): nop 0x0(%rax,%rax,1)
fde8(4): lea 0x0(%rbx,%rcx,1),%rdx
fdec(3): mov %rdx,%rax
fdef(4): shr $0x3f,%rax
fdf3(3): add %rdx,%rax
fdf6(3): sar $0x1,%rax
fdf9(4): lea 0x0(%rax,%rax,4),%rdx
fdfd(3): mov %rax,%r8
fe00(5): cmp 0x8(%rdi,%rdx,8),%rbp
fe05(6): jnle 0x11b(%rip)
fe0b(3): mov %rax,%rcx
fe0e(3): cmp %rcx,%rbx
fe11(2): jl 0xffffffd7(%rip)
fe13(3): cmp %rbx,%rsi
fe16(6): jle 0xfa(%rip)
fe1c(4): lea 0x0(%rbx,%rbx,4),%rax
fe20(8): lea 0x0(,%rax,8),%rsi
fe28(5): mov 0x8(%rsp),%rax
fe2d(5): mov %rsi,0x40(%rsp)
fe32(7): mov 0xd8(%rax),%rax
fe39(5): cmp 0x8(%rax,%rsi,1),%rbp
fe3e(6): jnz 0xd2(%rip)
fe44(4): cmp $0xffffffff,%rbx
fe48(6): jz 0xc8(%rip)
fe4e(5): mov 0x8(%rsp),%rax
fe53(9): mov $0x0,0x60(%rsp)
fe5c(7): mov 0x98(%rax),%r12
fe63(5): mov 0x10(%rsp),%rax
fe68(5): cmp $0x0,0x8(%rax)
fe6d(6): jle 0xa3(%rip)
fe73(5): lea 0x60(%rsp),%rax
fe78(9): mov $0x0,0x20(%rsp)
fe81(5): mov %rbx,0x48(%rsp)
fe86(3): mov %r13,%r15
fe89(5): mov %rax,0x38(%rsp)
fe8e(2): jmp 0x24(%rip)
fe90(2): cmp $0x4,%al
fe92(6): jz 0x386(%rip)
fe98(5): mov 0x10(%rsp),%rcx
fe9d(6): add $0x1,0x20(%rsp)
fea3(5): mov 0x20(%rsp),%rax
fea8(4): cmp 0x8(%rcx),%rax
feac(6): jnl 0x5bf(%rip)
feb2(5): mov 0x10(%rsp),%rax
feb7(5): mov 0x20(%rsp),%rdi
febc(4): mov 0x10(%rax),%rax
fec0(4): mov 0x0(%rax,%rdi,8),%r14
fec4(3): mov %r14,%rax
fec7(4): shl/sal $0x4,%rax
fecb(4): add (%r12),%rax
fecf(4): cmp 0x10(%r15),%r14
fed3(4): movzx 0x8(%rax),%eax
fed7(2): jnz 0xffffffb9(%rip)
fed9(4): cmp 0x18(%r15),%rbp
fedd(2): jnz 0xffffffb3(%rip)
fedf(2): jmp 0xffffffb9(%rip)
fee1(7): nop 0x0(%rax)
fee8(8): lea 0x0(,%rbp,8),%r14
fef0(3): add (%rsi),%r14
fef3(3): test %rcx,%rcx
fef6(6): jnz 0xba(%rip)
fefc(7): mov $0x0,(%r14)
ff03(2): xor %eax,%eax
ff05(5): jmp 0xfffffdc3(%rip)
ff0a(6): nop 0x0(%rax,%rax,1)
ff10(2): xor %eax,%eax
ff12(5): jmp 0xfffffdb6(%rip)
ff17(3): mov %rcx,%r8
ff1a(3): mov %rdx,%rcx
ff1d(3): nop (%rax)
ff20(4): lea 0x1(%r8),%rbx
ff24(3): mov %rcx,%rdx
ff27(5): jmp 0xfffffe89(%rip)
ff2c(4): nop 0x0(%rax)
ff30(4): mov 0x8(%rbx),%rdi
ff34(8): mov $0x0,0x40(%rdx)
ff3c(5): mov %rdx,0x20(%rsp)
ff41(4): mov %rdi,0x38(%rdx)
ff45(4): shl/sal $0x3,%rdi
ff49(5): call 0xffff1bb7(%rip)
ff4e(5): mov 0x20(%rsp),%rdx
ff53(3): test %rax,%rax
ff56(4): mov %rax,0x48(%rdx)
ff5a(2): jz 0x49(%rip)
ff5c(5): cmp $0x0,0x8(%rbx)
ff61(8): mov $0x0,0x60(%rsp)
ff69(2): jnle 0x15(%rip)
ff6b(5): jmp 0xfffffdc1(%rip)
ff70(4): add $0x1,%r15
ff74(4): cmp 0x8(%rbx),%r15
ff78(6): jnl 0xfffffdb4(%rip)
ff7e(4): mov 0x10(%rbx),%rax
ff82(3): mov %r14,%rdi
ff85(4): mov 0x0(%rax,%r15,8),%rax
ff89(4): lea 0x0(%rax,%rax,2),%rdx
ff8d(5): mov 0x38(%r12),%rax
ff92(4): lea 0x0(%rax,%rdx,8),%rsi
ff96(5): call 0xffff806a(%rip)
ff9b(2): test %eax,%eax
ff9d(4): mov %eax,0x60(%rsp)
ffa1(2): jz 0xffffffcf(%rip)
ffa3(5): mov $0xc,%eax
ffa8(5): jmp 0xfffffd20(%rip)
ffad(3): nop (%rax)
ffb0(9): mov $0x0,0x10(%rsp)
ffb9(5): jmp 0xfffffd9f(%rip)
ffbe(2): nop 
ffc0(5): mov 0x8(%rsp),%rax
ffc5(7): mov 0xd8(%rax),%rax
ffcc(5): mov %rax,0x20(%rsp)
ffd1(6): jle 0xda(%rip)
ffd7(3): xor %r15d,%r15d
ffda(6): nop 0x0(%rax,%rax,1)
ffe0(4): mov 0x30(%r13),%rax
ffe4(5): mov 0x20(%rsp),%rdi
ffe9(4): mov 0x0(%rax,%r15,8),%rax
ffed(4): lea 0x0(%rax,%rax,4),%rax
fff1(4): lea 0x0(%rdi,%rax,8),%rdx
fff5(4): cmp 0x10(%rdx),%rbp
fff9(6): jle 0xa4(%rip)
ffff(4): cmp 0x8(%rdx),%rbp
10003(6): jnle 0x9a(%rip)
10009(3): mov (%rdx),%rcx
1000c(4): mov (%r12),%rax
10010(4): mov 0x8(%rbx),%rsi
10014(4): shl/sal $0x4,%rcx
10018(4): cmp 0x18(%rdx),%rbp
1001c(4): mov 0x0(%rax,%rcx,1),%r8
10020(6): jz 0xa0(%rip)
10026(3): xor %r14d,%r14d
10029(3): test %rsi,%rsi
1002c(2): jle 0x71(%rip)
1002e(5): mov %rbp,0x28(%rsp)
10033(3): mov %r8,%rbp
10036(2): jmp 0x18(%rip)
10038(8): nop 0x0(%rax,%rax,1)
10040(4): add $0x1,%r14
10044(4): cmp 0x8(%rbx),%r14
10048(2): jnl 0x50(%rip)
1004a(4): mov (%r12),%rax
1004e(4): mov 0x10(%rbx),%rdx
10052(4): mov 0x0(%rdx,%r14,8),%rsi
10056(3): mov %rsi,%rdx
10059(4): shl/sal $0x4,%rdx
1005d(3): add %rdx,%rax
10060(4): movzx 0x8(%rax),%edx
10064(3): sub $0x8,%edx
10067(3): cmp $0x1,%edx
1006a(2): jnbe 0xffffffd6(%rip)
1006c(3): cmp (%rax),%rbp
1006f(2): jnz 0xffffffd1(%rip)
10071(5): mov 0x10(%rsp),%rcx
10076(3): mov %rbx,%rdx
10079(3): mov %r12,%rdi
1007c(5): call 0xffffa2b4(%rip)
10081(2): test %eax,%eax
10083(6): jnz 0xfffffc45(%rip)
10089(4): add $0x1,%r14
1008d(4): cmp 0x8(%rbx),%r14
10091(2): jl 0xffffffb9(%rip)
10093(5): nop 0x0(%rax,%rax,1)
10098(5): mov 0x28(%rsp),%rbp
1009d(4): add $0x1,%r15
100a1(4): cmp 0x28(%r13),%r15
100a5(6): jl 0xffffff3b(%rip)
100ab(8): mov $0x0,0x5c(%rsp)
100b3(5): jmp 0xfffffc9c(%rip)
100b8(8): nop 0x0(%rax,%rax,1)
100c0(3): test %rsi,%rsi
100c3(2): jle 0xffffffda(%rip)
100c5(4): mov 0x10(%rbx),%r10
100c9(7): mov $0xffffffff,%r9
100d0(4): lea 0x0(%r10,%rsi,8),%r11
100d4(3): mov %r10,%rcx
100d7(3): mov %r9,%rsi
100da(2): jmp 0x1c(%rip)
100dc(4): nop 0x0(%rax)
100e0(4): cmp $0x9,%r14d
100e4(2): jnz 0x9(%rip)
100e6(3): cmp (%rdx),%r8
100e9(4): cmove %rdi,%r9
100ed(4): add $0x8,%rcx
100f1(3): cmp %rcx,%r11
100f4(2): jz 0x2a(%rip)
100f6(3): mov (%rcx),%rdi
100f9(3): mov %rdi,%rdx
100fc(4): shl/sal $0x4,%rdx
10100(3): add %rax,%rdx
10103(5): movzx 0x8(%rdx),%r14d
10108(4): cmp $0x8,%r14d
1010c(2): jnz 0xffffffd4(%rip)
1010e(3): cmp (%rdx),%r8
10111(4): cmove %rdi,%rsi
10115(4): add $0x8,%rcx
10119(3): cmp %rcx,%r11
1011c(2): jnz 0xffffffda(%rip)
1011e(3): test %rsi,%rsi
10121(3): mov %r9,%r14
10124(5): mov %r9,0x28(%rsp)
10129(6): js 0xc7(%rip)
1012f(5): mov 0x10(%rsp),%rcx
10134(3): mov %rbx,%rdx
10137(3): mov %r12,%rdi
1013a(5): call 0xffffa1f6(%rip)
1013f(2): test %eax,%eax
10141(6): jnz 0xfffffb87(%rip)
10147(3): test %r14,%r14
1014a(6): js 0xffffff53(%rip)
10150(5): cmp $0x0,0x8(%rbx)
10155(6): jle 0xffffff48(%rip)
1015b(4): mov 0x10(%rbx),%r10
1015f(3): xor %r14d,%r14d
10162(5): mov %rbp,0x30(%rsp)
10167(3): mov %r14,%rbp
1016a(5): mov 0x28(%rsp),%r14
1016f(2): jmp 0x1b(%rip)
10171(7): nop 0x0(%rax)
10178(4): add $0x1,%rbp
1017c(4): cmp 0x8(%rbx),%rbp
10180(6): jnl 0x88(%rip)
10186(4): mov 0x10(%rbx),%r10
1018a(4): mov 0x0(%r10,%rbp,8),%r10
1018e(5): mov 0x38(%r12),%rax
10193(3): mov %r14,%rdx
10196(4): lea 0x0(%r10,%r10,2),%r9
1019a(4): shl/sal $0x3,%r9
1019e(3): add %r9,%rax
101a1(4): mov 0x8(%rax),%rdi
101a5(4): lea 0x10(%rax),%rsi
101a9(5): call 0xffff7937(%rip)
101ae(3): test %rax,%rax
101b1(2): jnz 0xffffffc7(%rip)
101b3(5): add 0x30(%r12),%r9
101b8(4): mov 0x8(%r9),%rdi
101bc(4): lea 0x10(%r9),%rsi
101c0(5): call 0xffff7920(%rip)
101c5(3): test %rax,%rax
101c8(2): jnz 0xffffffb0(%rip)
101ca(5): mov 0x10(%rsp),%rcx
101cf(3): mov %rbx,%rdx
101d2(3): mov %r10,%rsi
101d5(3): mov %r12,%rdi
101d8(5): call 0xffffa158(%rip)
101dd(2): test %eax,%eax
101df(6): jnz 0xfffffae9(%rip)
101e5(4): sub $0x1,%rbp
101e9(2): jmp 0xffffff8f(%rip)
101eb(5): nop 0x0(%rax,%rax,1)
101f0(6): cmp $0x0,0x28(%rsp)
101f6(6): jns 0xffffff69(%rip)
101fc(5): jmp 0xfffffea1(%rip)
10201(7): nop 0x0(%rax)
10208(5): mov 0x30(%rsp),%rbp
1020d(5): jmp 0xfffffe90(%rip)
10212(6): nop 0x0(%rax,%rax,1)
10218(5): mov 0x8(%rsp),%rax
1021d(5): mov 0x40(%rsp),%r13
10222(5): mov 0x48(%rsp),%rbx
10227(7): add 0xd8(%rax),%r13
1022e(4): lea 0x0(%r14,%r14,2),%rax
10232(4): shl/sal $0x3,%rax
10236(5): mov %rax,0x30(%rsp)
1023b(8): lea 0x0(,%r14,8),%rax
10243(5): mov %rax,0x28(%rsp)
10248(3): mov %r15,%rax
1024b(3): mov %r13,%r15
1024e(3): mov %rbx,%r13
10251(3): mov %rax,%rbx
10254(5): jmp 0x16a(%rip)
10259(7): nop 0x0(%rax)
10260(4): mov 0x18(%r15),%rax
10264(4): sub 0x10(%r15),%rax
10268(3): test %rax,%rax
1026b(5): lea 0x0(%rbp,%rax,1),%r9
10270(6): jz 0x160(%rip)
10276(5): mov 0x18(%r12),%rax
1027b(5): mov 0x28(%rsp),%rsi
10280(4): mov 0x0(%rax,%rsi,1),%r10
10284(4): cmp 0x18(%rbx),%r9
10288(6): jnle 0x13f(%rip)
1028e(3): mov (%rbx),%rax
10291(4): mov 0x0(%rax,%r9,8),%rax
10295(3): test %rax,%rax
10298(6): jz 0x12f(%rip)
1029e(4): mov 0x10(%rax),%rdi
102a2(4): lea 0x18(%rax),%rsi
102a6(3): mov %r10,%rdx
102a9(5): call 0xffff7837(%rip)
102ae(3): test %rax,%rax
102b1(6): jz 0x116(%rip)
102b7(4): sub $0x8,%rsp
102bb(4): lea 0x30(%rbx),%rdx
102bf(4): lea 0x28(%rbx),%rsi
102c3(2): push %r9
102c5(5): mov 0x18(%rsp),%rdi
102ca(3): mov %r14,%rcx
102cd(3): mov %r10,%r9
102d0(3): mov %rbp,%r8
102d3(5): call 0xffff7abd(%rip)
102d8(2): test %al,%al
102da(1): pop %rdx
102db(1): pop %rcx
102dc(6): jnz 0xeb(%rip)
102e2(6): cmp $0x0,0x60(%rsp)
102e8(6): jz 0x110(%rip)
102ee(5): mov 0x38(%rsp),%rax
102f3(3): mov %r13,%rsi
102f6(5): mov %r14,0x70(%rsp)
102fb(5): mov %rbp,0x78(%rsp)
10300(4): lea 0x20(%rax),%rdi
10304(5): call 0xffff629c(%rip)
10309(2): test %al,%al
1030b(6): jz 0x159(%rip)
10311(5): mov 0x18(%rsp),%rdi
10316(5): mov 0x60(%rsp),%rax
1031b(5): mov 0x38(%rsp),%rsi
10320(4): mov 0x0(%rax,%rdi,1),%r15
10324(5): mov 0x8(%rsp),%rdi
10329(5): call 0xffffde97(%rip)
1032e(2): test %eax,%eax
10330(6): jnz 0x10e(%rip)
10336(4): mov 0x8(%rbx),%rsi
1033a(5): mov 0x60(%rsp),%rdx
1033f(3): test %rsi,%rsi
10342(2): jz 0x1b(%rip)
10344(4): lea 0x1(%rbp),%rcx
10348(3): mov %r12,%rdi
1034b(5): call 0xffff8fa5(%rip)
10350(2): test %eax,%eax
10352(6): jnz 0xec(%rip)
10358(5): mov 0x60(%rsp),%rdx
1035d(5): mov 0x38(%rsp),%r11
10362(5): mov 0x18(%rsp),%rax
10367(8): mov 0x88(%rsp),%rdi
1036f(4): lea 0x30(%r11),%r9
10373(4): mov %r15,0x0(%rdx,%rax,1)
10377(3): mov %r13,%rdx
1037a(3): mov %r9,%rsi
1037d(5): call 0xffff7763(%rip)
10382(4): sub $0x1,%rax
10386(3): mov %rax,%rdx
10389(2): js 0xe(%rip)
1038b(4): lea 0x28(%r11),%rdi
1038f(3): mov %r9,%rsi
10392(5): call 0xffff78ce(%rip)
10397(5): mov 0x8(%rsp),%rcx
1039c(5): lea 0x0(%r13,%r13,4),%rax
103a1(7): mov 0xd8(%rcx),%rdx
103a8(4): lea 0x0(%rdx,%rax,8),%rax
103ac(4): nop 0x0(%rax)
103b0(4): add $0x1,%r13
103b4(4): cmp $0x0,0x20(%rax)
103b8(4): lea 0x28(%rax),%r15
103bc(2): jz 0x34(%rip)
103be(3): cmp (%r15),%r14
103c1(6): jz 0xfffffe9f(%rip)
103c7(3): mov %r15,%rax
103ca(2): jmp 0xffffffe6(%rip)
103cc(4): nop 0x0(%rax)
103d0(5): mov 0x28(%r12),%rax
103d5(5): mov 0x30(%rsp),%rdi
103da(5): mov 0x10(%rax,%rdi,1),%rax
103df(3): mov (%rax),%r10
103e2(5): jmp 0xfffffea2(%rip)
103e7(9): nop 0x0(%rax,%rax,1)
103f0(3): mov %rbx,%r15
103f3(5): jmp 0xfffffaa5(%rip)
103f8(4): mov 0x30(%rbx),%rax
103fc(4): lea 0x20(%rbx),%rsi
10400(4): movdqa (%rbx),%xmm0
10404(8): mov %rax,0x90(%rsp)
1040c(5): mov 0x38(%rsp),%rax
10411(5): movaps %xmm0,0x60(%rsp)
10416(4): lea 0x20(%rax),%rdi
1041a(5): movdqa 0x10(%rbx),%xmm0
1041f(5): movaps %xmm0,0x70(%rsp)
10424(5): movdqa 0x20(%rbx),%xmm0
10429(8): movaps %xmm0,0x80(%rsp)
10431(5): call 0xffff880f(%rip)
10436(2): test %eax,%eax
10438(6): jz 0xfffffeb6(%rip)
1043e(6): cmp $0x0,0x60(%rsp)
10444(6): jz 0xfffff884(%rip)
1044a(8): mov 0x90(%rsp),%rdi
10452(4): mov %eax,0x8(%rsp)
10456(5): call 0xffff147a(%rip)
1045b(4): mov 0x8(%rsp),%eax
1045f(5): jmp 0xfffff869(%rip)
10464(5): mov $0xc,%eax
10469(2): jmp 0xffffffd5(%rip)
1046b(6): cmp $0x0,0x60(%rsp)
10471(6): jz 0xfffffa9f(%rip)
10477(2): xor %eax,%eax
10479(2): jmp 0xffffffd1(%rip)
1047b(5): call 0xffff1565(%rip)

"parse_bracket_element.constprop.37" :
10480(2): push %r14
10482(2): push %r13
10484(3): mov %rsi,%r10
10487(2): push %r12
10489(1): push %rbp
1048a(3): movsxd %ecx,%r11
1048d(1): push %rbx
1048e(3): mov %rdx,%rbp
10491(3): mov %rdi,%rbx
10494(4): sub $0x20,%rsp
10498(4): mov 0x48(%rsi),%r12
1049c(9): mov $0x28,%rax
104a5(5): mov %rax,0x18(%rsp)
104aa(2): xor %eax,%eax
104ac(7): cmp $0x1,0x90(%rsi)
104b3(2): jz 0x55(%rip)
104b5(3): mov %r12,%rsi
104b8(3): mov %r10,%rdi
104bb(5): call 0xffff7575(%rip)
104c0(3): cmp $0x1,%eax
104c3(2): jle 0x45(%rip)
104c5(4): mov 0x10(%r10),%rdx
104c9(2): cwde 
104cb(6): mov $0x1,(%rbx)
104d1(3): add %r12,%rax
104d4(4): mov 0x0(%rdx,%r12,4),%edx
104d8(3): mov %edx,0x8(%rbx)
104db(4): mov %rax,0x48(%r10)
104df(2): xor %eax,%eax
104e1(5): mov 0x18(%rsp),%rcx
104e6(9): xor $0x28,%rcx
104ef(6): jnz 0x1e9(%rip)
104f5(4): add $0x20,%rsp
104f9(1): pop %rbx
104fa(1): pop %rbp
104fb(2): pop %r12
104fd(2): pop %r13
104ff(2): pop %r14
10501(1): ret near (%rsp)
10502(6): nop 0x0(%rax,%rax,1)
10508(4): movzx 0x8(%rbp),%eax
1050c(3): add %r12,%r11
1050f(4): mov %r11,0x48(%r10)
10513(2): mov %eax,%edx
10515(3): and $0xfb,%edx
10518(3): cmp $0x1a,%dl
1051b(2): jz 0x25(%rip)
1051d(2): cmp $0x1c,%al
1051f(2): jz 0x21(%rip)
10521(2): cmp $0x16,%al
10523(2): jnz 0xb(%rip)
10525(3): test %r9b,%r9b
10528(6): jz 0x14a(%rip)
1052e(4): movzx 0x0(%rbp),%eax
10532(6): mov $0x0,(%rbx)
10538(3): mov %al,0x8(%rbx)
1053b(2): xor %eax,%eax
1053d(2): jmp 0xffffffa4(%rip)
1053f(1): nop 
10540(4): mov 0x68(%r10),%r12
10544(3): cmp %r12,%r11
10547(6): jnl 0x121(%rip)
1054d(5): movzx 0x0(%rbp),%r13d
10552(3): xor %r8d,%r8d
10555(2): jmp 0x2d(%rip)
10557(9): nop 0x0(%rax,%rax,1)
10560(4): mov 0x8(%rbx),%rax
10564(4): mov %r9b,0x0(%rax,%r8,1)
10568(4): add $0x1,%r8
1056c(4): cmp $0x20,%r8
10570(6): jz 0xf8(%rip)
10576(4): movzx 0x8(%rbp),%eax
1057a(4): mov 0x48(%r10),%r11
1057e(4): mov 0x68(%r10),%r12
10582(2): cmp $0x1e,%al
10584(3): movsxd %r8d,%r14
10587(2): jz 0x69(%rip)
10589(4): mov 0x8(%r10),%rdx
1058d(4): lea 0x1(%r11),%rax
10591(4): mov %rax,0x48(%r10)
10595(5): movzx 0x0(%rdx,%r11,1),%r9d
1059a(3): cmp %r12,%rax
1059d(6): jnl 0xcb(%rip)
105a3(3): cmp %r9b,%r13b
105a6(2): jnz 0xffffffba(%rip)
105a8(4): mov 0x8(%r10),%rdx
105ac(4): cmp $0x5d,0x0(%rdx,%rax,1)
105b0(2): jnz 0xffffffb0(%rip)
105b2(4): add $0x1,%rax
105b6(4): mov %rax,0x48(%r10)
105ba(4): mov 0x8(%rbx),%rax
105be(5): mov $0x0,0x0(%rax,%r14,1)
105c3(4): movzx 0x8(%rbp),%eax
105c7(2): cmp $0x1c,%al
105c9(6): jz 0x102(%rip)
105cf(2): cmp $0x1e,%al
105d1(6): jz 0xed(%rip)
105d7(2): cmp $0x1a,%al
105d9(6): jz 0xd8(%rip)
105df(2): xor %eax,%eax
105e1(5): jmp 0xffffff00(%rip)
105e6(a): nop 0x0(%rax,%rax,1)
105f0(8): cmp $0x0,0x8b(%r10)
105f8(2): jz 0xffffff91(%rip)
105fa(8): cmp $0x0,0x8c(%r10)
10602(6): jz 0x96(%rip)
10608(4): cmp 0x30(%r10),%r11
1060c(2): jz 0x11(%rip)
1060e(4): mov 0x10(%r10),%rax
10612(5): cmp $0xff,0x0(%rax,%r11,4)
10617(6): jz 0xffffff72(%rip)
1061d(4): mov 0x18(%r10),%rax
10621(4): mov 0x0(%rax,%r11,8),%rax
10625(3): add (%r10),%rax
10628(4): add 0x28(%r10),%rax
1062c(4): movzx (%rax),%r9d
10630(4): test $0x80,%r9b
10634(6): jnz 0xffffff55(%rip)
1063a(8): cmp $0x1,0x90(%r10)
10642(5): mov $0x1,%eax
10647(2): jz 0xf(%rip)
10649(3): mov %r11,%rsi
1064c(3): mov %r10,%rdi
1064f(5): call 0xffff73e1(%rip)
10654(2): cwde 
10656(3): add %r11,%rax
10659(4): mov %rax,0x48(%r10)
1065d(5): jmp 0xffffff3d(%rip)
10662(6): nop 0x0(%rax,%rax,1)
10668(5): mov $0x7,%eax
1066d(5): jmp 0xfffffe74(%rip)
10672(3): mov %rsp,%rdi
10675(3): mov %r8,%rdx
10678(3): mov %r10,%rsi
1067b(5): call 0xffff5955(%rip)
10680(5): cmp $0x15,0x8(%rsp)
10685(5): mov $0xb,%eax
1068a(6): jz 0xfffffea4(%rip)
10690(5): jmp 0xfffffe51(%rip)
10695(3): nop (%rax)
10698(4): lea 0x1(%r11),%rax
1069c(3): add (%r10),%r11
1069f(4): mov 0x28(%r10),%rdx
106a3(4): mov %rax,0x48(%r10)
106a7(5): movzx 0x0(%r11,%rdx,1),%r9d
106ac(5): jmp 0xfffffeee(%rip)
106b1(6): mov $0x3,(%rbx)
106b7(2): xor %eax,%eax
106b9(5): jmp 0xfffffe28(%rip)
106be(6): mov $0x4,(%rbx)
106c4(2): xor %eax,%eax
106c6(5): jmp 0xfffffe1b(%rip)
106cb(6): mov $0x2,(%rbx)
106d1(2): xor %eax,%eax
106d3(5): jmp 0xfffffe0e(%rip)
106d8(5): call 0xffff1308(%rip)

"peek_token" :
106e0(2): push %r15
106e2(2): push %r14
106e4(2): push %r13
106e6(2): push %r12
106e8(1): push %rbp
106e9(1): push %rbx
106ea(3): mov %rdi,%rbp
106ed(4): sub $0x38,%rsp
106f1(4): mov 0x48(%rsi),%r14
106f5(9): mov $0x28,%rax
106fe(5): mov %rax,0x28(%rsp)
10703(2): xor %eax,%eax
10705(4): cmp %r14,0x68(%rsi)
10709(6): jle 0x97(%rip)
1070f(5): movzx 0xa(%rdi),%r13d
10714(3): mov %rdx,%r15
10717(4): mov 0x8(%rsi),%rdx
1071b(3): mov %rsi,%rbx
1071e(5): movzx 0x0(%rdx,%r14,1),%r12d
10723(4): and $0x9f,%r13d
10727(4): mov %r13b,0xa(%rdi)
1072b(6): mov 0x90(%rsi),%eax
10731(3): mov %r12b,(%rdi)
10734(3): cmp $0x1,%eax
10737(6): jle 0x99(%rip)
1073d(4): cmp 0x30(%rsi),%r14
10741(6): jz 0x19f(%rip)
10747(4): mov 0x10(%rsi),%rcx
1074b(4): mov 0x0(%rcx,%r14,4),%ecx
1074f(3): cmp $0xff,%ecx
10752(6): jz 0xde(%rip)
10758(4): cmp $0x5c,%r12b
1075c(6): jz 0xf4(%rip)
10762(4): mov $0x1,0x8(%rdi)
10766(2): mov %ecx,%edi
10768(5): mov %rdx,0x8(%rsp)
1076d(3): mov %ecx,(%rsp)
10770(5): call 0xffff1380(%rip)
10775(3): mov (%rsp),%ecx
10778(2): test %eax,%eax
1077a(3): setnz %al
1077d(3): cmp $0x5f,%ecx
10780(3): setz %cl
10783(2): or %ecx,%eax
10785(3): shl/sal $0x6,%eax
10788(3): or %eax,%r13d
1078b(4): mov %r13b,0xa(%rbp)
1078f(5): mov 0x8(%rsp),%rdx
10794(2): jmp 0x78(%rip)
10796(a): nop 0x0(%rax,%rax,1)
107a0(4): mov $0x2,0x8(%rdi)
107a4(5): mov 0x28(%rsp),%rdi
107a9(9): xor $0x28,%rdi
107b2(6): jnz 0x626(%rip)
107b8(4): add $0x38,%rsp
107bc(1): pop %rbx
107bd(1): pop %rbp
107be(2): pop %r12
107c0(2): pop %r13
107c2(2): pop %r14
107c4(2): pop %r15
107c6(1): ret near (%rsp)
107c7(9): nop 0x0(%rax,%rax,1)
107d0(4): cmp $0x5c,%r12b
107d4(2): jz 0x7c(%rip)
107d6(4): mov $0x1,0x8(%rbp)
107da(4): mov %rdx,(%rsp)
107de(5): call 0xffff1492(%rip)
107e3(3): mov (%rax),%rsi
107e6(4): movzx %r12b,%ecx
107ea(4): movzx 0x0(%rsi,%rcx,2),%eax
107ee(4): shr $0x3,%ax
107f2(3): and $0x1,%eax
107f5(4): cmp $0x5f,%r12b
107f9(3): setz %cl
107fc(2): or %ecx,%eax
107fe(3): shl/sal $0x6,%eax
10801(3): or %eax,%r13d
10804(4): mov %r13b,0xa(%rbp)
10808(4): mov (%rsp),%rdx
1080c(4): sub $0xa,%r12d
10810(4): cmp $0x73,%r12b
10814(6): jnbe 0x138(%rip)
1081a(7): lea 0x5173(%rip),%rcx
10821(4): movzx %r12b,%r12d
10825(4): movsxd 0x0(%rcx,%r12,4),%rax
10829(3): add %rcx,%rax
1082c(2): jmp %rax
1082e(2): nop 
10830(4): or $0x20,%r13d
10834(4): mov $0x1,0x8(%rdi)
10838(5): mov $0x1,%eax
1083d(4): mov %r13b,0xa(%rdi)
10841(5): jmp 0xffffff63(%rip)
10846(a): nop 0x0(%rax,%rax,1)
10850(4): lea 0x1(%r14),%rsi
10854(4): cmp 0x58(%rbx),%rsi
10858(6): jnl 0xa8(%rip)
1085e(7): cmp $0x0,0x8b(%rbx)
10865(6): jnz 0x48b(%rip)
1086b(6): movzx 0x1(%rdx,%r14,1),%edi
10871(3): mov %edi,%r12d
10874(4): mov %edi,0x8(%rsp)
10878(3): cmp $0x1,%eax
1087b(4): mov %r12b,0x0(%rbp)
1087f(4): mov $0x1,0x8(%rbp)
10883(6): jle 0x44d(%rip)
10889(4): mov 0x10(%rbx),%rax
1088d(4): mov 0x0(%rax,%rsi,4),%r8d
10891(3): mov %r8d,%edi
10894(4): mov %r8d,(%rsp)
10898(5): call 0xffff1258(%rip)
1089d(4): mov (%rsp),%r8d
108a1(2): test %eax,%eax
108a3(3): setnz %al
108a6(4): cmp $0x5f,%r8d
108aa(3): setz %dl
108ad(5): lea 0xffffffd9(%r12),%ecx
108b2(2): or %edx,%eax
108b4(3): shl/sal $0x6,%eax
108b7(3): or %eax,%r13d
108ba(3): cmp $0x56,%cl
108bd(4): mov %r13b,0xa(%rbp)
108c1(6): jnbe 0x404(%rip)
108c7(7): lea 0x5296(%rip),%rdx
108ce(3): movzx %cl,%ecx
108d1(4): movsxd 0x0(%rdx,%rcx,4),%rax
108d5(3): add %rdx,%rax
108d8(2): jmp %rax
108da(6): nop 0x0(%rax,%rax,1)
108e0(4): cmp $0x5c,%r12b
108e4(6): jz 0xffffff6c(%rip)
108ea(4): mov 0x10(%rbx),%rax
108ee(4): mov $0x1,0x8(%rbp)
108f2(4): mov 0x0(%rax,%r14,4),%ecx
108f6(5): jmp 0xfffffe70(%rip)
108fb(5): nop 0x0(%rax,%rax,1)
10900(4): mov $0x24,0x8(%rbp)
10904(5): mov $0x1,%eax
10909(5): jmp 0xfffffe9b(%rip)
1090e(2): nop 
10910(7): and $0x1200,%r15d
10917(5): mov $0x1,%eax
1091c(7): cmp $0x1200,%r15
10923(6): jnz 0xfffffe81(%rip)
10929(4): mov $0x18,0x8(%rbp)
1092d(5): jmp 0xfffffe77(%rip)
10932(6): nop 0x0(%rax,%rax,1)
10938(7): and $0x8400,%r15d
1093f(7): cmp $0x8000,%r15
10946(6): jz 0xdc(%rip)
1094c(5): mov $0x1,%eax
10951(5): jmp 0xfffffe53(%rip)
10956(a): nop 0x0(%rax,%rax,1)
10960(7): and $0x1200,%r15d
10967(5): mov $0x1,%eax
1096c(7): cmp $0x1200,%r15
10973(6): jnz 0xfffffe31(%rip)
10979(4): mov $0x17,0x8(%rbp)
1097d(5): jmp 0xfffffe27(%rip)
10982(6): nop 0x0(%rax,%rax,1)
10988(7): test $0x800008,%r15d
1098f(2): jnz 0xb(%rip)
10991(3): test %r14,%r14
10994(6): jnz 0x3c6(%rip)
1099a(4): mov $0xc,0x8(%rbp)
1099e(7): mov $0x10,0x0(%rbp)
109a5(5): mov $0x1,%eax
109aa(5): jmp 0xfffffdfa(%rip)
109af(1): nop 
109b0(4): mov $0x14,0x8(%rbp)
109b4(5): mov $0x1,%eax
109b9(5): jmp 0xfffffdeb(%rip)
109be(2): nop 
109c0(7): test $0x402,%r15d
109c7(5): mov $0x1,%eax
109cc(6): jnz 0xfffffdd8(%rip)
109d2(4): mov $0x13,0x8(%rbp)
109d6(5): jmp 0xfffffdce(%rip)
109db(5): nop 0x0(%rax,%rax,1)
109e0(4): mov $0x5,0x8(%rbp)
109e4(5): mov $0x1,%eax
109e9(5): jmp 0xfffffdbb(%rip)
109ee(2): nop 
109f0(7): test $0x402,%r15d
109f7(5): mov $0x1,%eax
109fc(6): jnz 0xfffffda8(%rip)
10a02(4): mov $0x12,0x8(%rbp)
10a06(5): jmp 0xfffffd9e(%rip)
10a0b(5): nop 0x0(%rax,%rax,1)
10a10(7): test $0x800,%r15d
10a17(5): mov $0x1,%eax
10a1c(6): jz 0xfffffd88(%rip)
10a22(4): mov $0xa,0x8(%rbp)
10a26(5): mov $0x1,%eax
10a2b(5): jmp 0xfffffd79(%rip)
10a30(4): mov $0xb,0x8(%rbp)
10a34(5): mov $0x1,%eax
10a39(5): jmp 0xfffffd6b(%rip)
10a3e(2): nop 
10a40(7): test $0x2000,%r15d
10a47(5): mov $0x1,%eax
10a4c(6): jz 0xfffffd58(%rip)
10a52(4): mov $0x9,0x8(%rbp)
10a56(5): jmp 0xfffffd4e(%rip)
10a5b(5): nop 0x0(%rax,%rax,1)
10a60(7): test $0x2000,%r15d
10a67(5): mov $0x1,%eax
10a6c(6): jz 0xfffffd38(%rip)
10a72(4): mov $0x8,0x8(%rbp)
10a76(5): jmp 0xfffffd2e(%rip)
10a7b(5): nop 0x0(%rax,%rax,1)
10a80(4): test $0x8,%r15b
10a84(2): jnz 0x10(%rip)
10a86(4): add $0x1,%r14
10a8a(4): cmp 0x58(%rbx),%r14
10a8e(6): jnz 0x2fd(%rip)
10a94(4): mov $0xc,0x8(%rbp)
10a98(7): mov $0x20,0x0(%rbp)
10a9f(5): mov $0x1,%eax
10aa4(5): jmp 0xfffffd00(%rip)
10aa9(7): test $0x8400,%r15d
10ab0(5): mov $0x2,%eax
10ab5(6): jnz 0xfffffcef(%rip)
10abb(4): mov $0xa,0x8(%rbp)
10abf(5): jmp 0xfffffce5(%rip)
10ac4(7): and $0x1200,%r15d
10acb(5): mov $0x2,%eax
10ad0(7): cmp $0x200,%r15
10ad7(6): jnz 0xfffffccd(%rip)
10add(5): jmp 0xfffffe9c(%rip)
10ae2(7): test $0x80000,%r15d
10ae9(5): mov $0x2,%eax
10aee(6): jnz 0xfffffcb6(%rip)
10af4(4): mov $0x20,0x8(%rbp)
10af8(5): jmp 0xfffffcac(%rip)
10afd(7): test $0x80000,%r15d
10b04(5): mov $0x2,%eax
10b09(6): jnz 0xfffffc9b(%rip)
10b0f(4): mov $0x22,0x8(%rbp)
10b13(5): jmp 0xfffffc91(%rip)
10b18(7): and $0x1200,%r15d
10b1f(5): mov $0x2,%eax
10b24(7): cmp $0x200,%r15
10b2b(6): jnz 0xfffffc79(%rip)
10b31(5): jmp 0xfffffdf8(%rip)
10b36(7): test $0x80000,%r15d
10b3d(5): mov $0x2,%eax
10b42(6): jnz 0xfffffc62(%rip)
10b48(4): mov $0xc,0x8(%rbp)
10b4c(7): mov $0x100,0x0(%rbp)
10b53(5): jmp 0xfffffc51(%rip)
10b58(7): test $0x80000,%r15d
10b5f(5): mov $0x2,%eax
10b64(6): jnz 0xfffffc40(%rip)
10b6a(4): mov $0xc,0x8(%rbp)
10b6e(7): mov $0x40,0x0(%rbp)
10b75(5): jmp 0xfffffc2f(%rip)
10b7a(7): test $0x80000,%r15d
10b81(5): mov $0x2,%eax
10b86(6): jnz 0xfffffc1e(%rip)
10b8c(4): mov $0x21,0x8(%rbp)
10b90(5): jmp 0xfffffc14(%rip)
10b95(7): test $0x80000,%r15d
10b9c(5): mov $0x2,%eax
10ba1(6): jnz 0xfffffc03(%rip)
10ba7(4): mov $0x23,0x8(%rbp)
10bab(5): jmp 0xfffffbf9(%rip)
10bb0(7): test $0x80000,%r15d
10bb7(5): mov $0x2,%eax
10bbc(6): jnz 0xfffffbe8(%rip)
10bc2(4): mov $0xc,0x8(%rbp)
10bc6(7): mov $0x200,0x0(%rbp)
10bcd(5): jmp 0xfffffbd7(%rip)
10bd2(7): and $0x402,%r15d
10bd9(5): mov $0x2,%eax
10bde(4): cmp $0x2,%r15
10be2(6): jnz 0xfffffbc2(%rip)
10be8(5): jmp 0xfffffdea(%rip)
10bed(7): test $0x80000,%r15d
10bf4(5): mov $0x2,%eax
10bf9(6): jnz 0xfffffbab(%rip)
10bff(4): mov $0xc,0x8(%rbp)
10c03(7): mov $0x9,0x0(%rbp)
10c0a(5): jmp 0xfffffb9a(%rip)
10c0f(7): test $0x80000,%r15d
10c16(5): mov $0x2,%eax
10c1b(6): jnz 0xfffffb89(%rip)
10c21(4): mov $0xc,0x8(%rbp)
10c25(7): mov $0x6,0x0(%rbp)
10c2c(5): jmp 0xfffffb78(%rip)
10c31(7): test $0x4000,%r15d
10c38(5): mov $0x2,%eax
10c3d(6): jnz 0xfffffb67(%rip)
10c43(4): mov 0x8(%rsp),%edx
10c47(4): mov $0x4,0x8(%rbp)
10c4b(3): sub $0x31,%edx
10c4e(3): movsxd %edx,%rdx
10c51(4): mov %rdx,0x0(%rbp)
10c55(5): jmp 0xfffffb4f(%rip)
10c5a(7): and $0x402,%r15d
10c61(5): mov $0x2,%eax
10c66(4): cmp $0x2,%r15
10c6a(6): jnz 0xfffffb3a(%rip)
10c70(5): jmp 0xfffffd92(%rip)
10c75(7): test $0x2000,%r15d
10c7c(5): mov $0x2,%eax
10c81(6): jnz 0xfffffb23(%rip)
10c87(5): jmp 0xfffffdcb(%rip)
10c8c(7): test $0x2000,%r15d
10c93(5): mov $0x2,%eax
10c98(6): jnz 0xfffffb0c(%rip)
10c9e(5): jmp 0xfffffdd4(%rip)
10ca3(7): test $0x80000,%r15d
10caa(5): mov $0x2,%eax
10caf(6): jnz 0xfffffaf5(%rip)
10cb5(4): mov $0xc,0x8(%rbp)
10cb9(7): mov $0x80,0x0(%rbp)
10cc0(5): jmp 0xfffffae4(%rip)
10cc5(5): mov $0x2,%eax
10cca(5): jmp 0xfffffada(%rip)
10ccf(1): nop 
10cd0(5): call 0xffff0fa0(%rip)
10cd5(3): mov (%rax),%rsi
10cd8(4): movzx %r12b,%edx
10cdc(4): movzx 0x0(%rsi,%rdx,2),%eax
10ce0(4): shr $0x3,%ax
10ce4(3): and $0x1,%eax
10ce7(4): cmp $0x5f,%r12b
10ceb(5): jmp 0xfffffbbf(%rip)
10cf0(3): cmp $0x1,%eax
10cf3(2): jle 0x31(%rip)
10cf5(4): mov 0x10(%rbx),%rcx
10cf9(8): lea 0x0(,%rsi,4),%rdi
10d01(4): mov 0x0(%rcx,%rsi,4),%r8d
10d05(4): cmp $0xff,%r8d
10d09(6): jz 0xb6(%rip)
10d0f(4): lea 0x2(%r14),%r9
10d13(4): cmp %r9,0x30(%rbx)
10d17(2): jz 0xd(%rip)
10d19(5): cmp $0xff,0x4(%rcx,%rdi,1)
10d1e(6): jz 0xa1(%rip)
10d24(7): cmp $0x0,0x8c(%rbx)
10d2b(3): mov (%rbx),%rcx
10d2e(4): mov 0x28(%rbx),%rdi
10d32(2): jz 0x46(%rip)
10d34(4): mov 0x18(%rbx),%r8
10d38(3): add %rdi,%rcx
10d3b(4): add 0x0(%r8,%rsi,8),%rcx
10d3f(3): movzx (%rcx),%edi
10d42(3): mov %edi,%r12d
10d45(4): mov %edi,0x8(%rsp)
10d49(6): and $0x80,%edi
10d4f(6): jnz 0xfffffb1c(%rip)
10d55(5): jmp 0xfffffb23(%rip)
10d5a(6): cmp $0xa,0xffffffff(%rdx,%r14,1)
10d60(6): jnz 0xfffffbec(%rip)
10d66(7): test $0x800,%r15d
10d6d(6): jz 0xfffffbdf(%rip)
10d73(5): jmp 0xfffffc27(%rip)
10d78(3): add %rsi,%rcx
10d7b(4): movzx 0x0(%rcx,%rdi,1),%edi
10d7f(3): mov %edi,%r12d
10d82(4): mov %edi,0x8(%rsp)
10d86(5): jmp 0xfffffaf2(%rip)
10d8b(5): lea 0x10(%rsp),%rdi
10d90(3): mov %r15,%rdx
10d93(4): mov %r14,0x48(%rbx)
10d97(3): mov %rbx,%rsi
10d9a(5): call 0xfffff946(%rip)
10d9f(5): movzx 0x18(%rsp),%eax
10da4(5): sub $0x1,0x48(%rbx)
10da9(3): lea 0xfffffff7(%rax),%edx
10dac(5): mov $0x1,%eax
10db1(3): cmp $0x1,%dl
10db4(6): jnbe 0xfffff9f0(%rip)
10dba(5): jmp 0xfffffcda(%rip)
10dbf(6): movzx 0x1(%rdx,%r14,1),%eax
10dc5(4): mov $0x1,0x8(%rbp)
10dc9(3): mov %eax,%r12d
10dcc(3): mov %al,0x0(%rbp)
10dcf(4): mov %eax,0x8(%rsp)
10dd3(5): jmp 0xfffffabe(%rip)
10dd8(5): call 0xffff0c08(%rip)

"fetch_number" :
10de0(2): push %r14
10de2(3): mov %rdi,%r14
10de5(2): push %r13
10de7(3): mov %rsi,%r13
10dea(2): push %r12
10dec(7): mov $0xfffffffe,%r12
10df3(1): push %rbp
10df4(3): mov %rdx,%rbp
10df7(1): push %rbx
10df8(7): mov $0xffffffff,%rbx
10dff(1): nop 
10e00(3): mov %rbp,%rdx
10e03(3): mov %r14,%rsi
10e06(3): mov %r13,%rdi
10e09(5): call 0xfffff8d7(%rip)
10e0e(2): cwde 
10e10(4): add %rax,0x48(%r14)
10e14(5): movzx 0x8(%r13),%eax
10e19(5): movzx 0x0(%r13),%edx
10e1e(2): cmp $0x2,%al
10e20(2): jz 0x50(%rip)
10e22(2): cmp $0x18,%al
10e24(2): jz 0x53(%rip)
10e26(3): cmp $0x2c,%dl
10e29(2): jz 0x4e(%rip)
10e2b(2): cmp $0x1,%al
10e2d(2): jz 0xb(%rip)
10e2f(3): mov %r12,%rbx
10e32(2): jmp 0xffffffce(%rip)
10e34(4): nop 0x0(%rax)
10e38(3): lea 0xffffffd0(%rdx),%eax
10e3b(2): cmp $0x9,%al
10e3d(2): jnbe 0xfffffff2(%rip)
10e3f(4): cmp $0xfffffffe,%rbx
10e43(2): jz 0xffffffec(%rip)
10e45(4): cmp $0xffffffff,%rbx
10e49(2): jz 0x3f(%rip)
10e4b(4): lea 0x0(%rbx,%rbx,4),%rax
10e4f(4): lea 0x0(%rdx,%rax,2),%rbx
10e53(5): mov $0x8030,%eax
10e58(7): cmp $0x8030,%rbx
10e5f(4): cmovnl %rax,%rbx
10e63(4): sub $0x30,%rbx
10e67(2): jmp 0xffffff99(%rip)
10e69(7): nop 0x0(%rax)
10e70(7): mov $0xfffffffe,%rbx
10e77(3): mov %rbx,%rax
10e7a(1): pop %rbx
10e7b(1): pop %rbp
10e7c(2): pop %r12
10e7e(2): pop %r13
10e80(2): pop %r14
10e82(1): ret near (%rsp)
10e83(5): nop 0x0(%rax,%rax,1)
10e88(3): movzx %dl,%ebx
10e8b(3): sub $0x30,%ebx
10e8e(3): movsxd %ebx,%rbx
10e91(5): jmp 0xffffff6f(%rip)

"parse_expression" :
10ea0(2): push %r15
10ea2(2): push %r14
10ea4(2): push %r13
10ea6(2): push %r12
10ea8(1): push %rbp
10ea9(1): push %rbx
10eaa(7): sub $0x128,%rsp
10eb1(5): mov %rcx,0x20(%rsp)
10eb6(4): movzx 0x8(%rdx),%ecx
10eba(9): mov $0x28,%rax
10ec3(8): mov %rax,0x118(%rsp)
10ecb(2): xor %eax,%eax
10ecd(3): mov (%rsi),%rax
10ed0(5): mov %rdx,0x18(%rsp)
10ed5(5): mov %r9,0x40(%rsp)
10eda(3): cmp $0x24,%cl
10edd(5): mov %rax,0x10(%rsp)
10ee2(6): jnbe 0xbe(%rip)
10ee8(3): mov %rsi,%rbp
10eeb(7): lea 0x4dce(%rip),%rsi
10ef2(3): movzx %cl,%edx
10ef5(3): mov %rdi,%r14
10ef8(4): movsxd 0x0(%rsi,%rdx,4),%rax
10efc(3): add %rsi,%rax
10eff(2): jmp %rax
10f01(4): mov 0x30(%rbp),%rbx
10f05(5): mov 0x20(%rsp),%r15
10f0a(3): mov %rdi,%rsi
10f0d(5): mov 0x18(%rsp),%r13
10f12(4): mov %r8,(%rsp)
10f16(4): lea 0x1(%rbx),%rax
10f1a(3): mov %r15,%rdx
10f1d(7): or $0x800000,%rdx
10f24(3): mov %r13,%rdi
10f27(4): mov %rax,0x30(%rbp)
10f2b(5): call 0xfffff7b5(%rip)
10f30(2): cwde 
10f32(4): add %rax,0x48(%r14)
10f36(2): xor %eax,%eax
10f38(5): cmp $0x9,0x8(%r13)
10f3d(3): mov %r13,%rdx
10f40(6): jz 0xb00(%rip)
10f46(5): mov 0x40(%rsp),%r13
10f4b(4): mov (%rsp),%r8
10f4f(3): mov %r15,%rcx
10f52(3): mov %rbp,%rsi
10f55(3): mov %r14,%rdi
10f58(4): add $0x1,%r8
10f5c(3): mov %r13,%r9
10f5f(5): call 0x15b1(%rip)
10f64(4): mov 0x0(%r13),%r11d
10f68(3): test %r11d,%r11d
10f6b(2): jnz 0x35(%rip)
10f6d(5): mov 0x18(%rsp),%rdx
10f72(4): cmp $0x9,0x8(%rdx)
10f76(6): jz 0xaca(%rip)
10f7c(3): test %rax,%rax
10f7f(2): jz 0x13(%rip)
10f81(7): lea 0xffff62d8(%rip),%rsi
10f88(2): xor %edx,%edx
10f8a(3): mov %rax,%rdi
10f8d(5): call 0xffff5433(%rip)
10f92(5): mov 0x40(%rsp),%rax
10f97(6): mov $0x8,(%rax)
10f9d(3): nop (%rax)
10fa0(9): mov $0x0,0x28(%rsp)
10fa9(7): nop 0x0(%rax)
10fb0(8): mov 0x118(%rsp),%rdi
10fb8(9): xor $0x28,%rdi
10fc1(5): mov 0x28(%rsp),%rax
10fc6(6): jnz 0x1378(%rip)
10fcc(7): add $0x128,%rsp
10fd3(1): pop %rbx
10fd4(1): pop %rbp
10fd5(2): pop %r12
10fd7(2): pop %r13
10fd9(2): pop %r14
10fdb(2): pop %r15
10fdd(1): ret near (%rsp)
10fde(9): test $0x1000000,0x20(%rsp)
10fe7(6): jnz 0x256(%rip)
10fed(5): mov 0x20(%rsp),%rax
10ff2(2): test $0x20,%al
10ff4(6): jnz 0x249(%rip)
10ffa(2): test $0x10,%al
10ffc(6): jnz 0xe69(%rip)
11002(3): cmp $0x9,%cl
11005(6): jz 0xa13(%rip)
1100b(5): mov 0x10(%rsp),%rax
11010(5): mov 0x18(%rsp),%r8
11015(2): xor %ecx,%ecx
11017(2): xor %edx,%edx
11019(7): lea 0x80(%rax),%rsi
11020(4): lea 0x70(%rax),%rdi
11024(5): mov $0x1,0x8(%r8)
11029(5): call 0xffff7777(%rip)
1102e(3): test %rax,%rax
11031(5): mov %rax,0x28(%rsp)
11036(6): jz 0x9d2(%rip)
1103c(5): mov 0x18(%rsp),%rbx
11041(5): mov 0x20(%rsp),%rdx
11046(3): mov %r14,%rsi
11049(8): lea 0xc0(%rsp),%r15
11051(3): mov %rbx,%rdi
11054(5): call 0xfffff68c(%rip)
11059(2): cwde 
1105b(4): add %rax,0x48(%r14)
1105f(4): movzx 0x8(%rbx),%eax
11063(5): nop 0x0(%rax,%rax,1)
11068(2): cmp $0x17,%al
1106a(6): jnbe 0xffffff46(%rip)
11070(2): cmp $0x12,%al
11072(5): mov $0x8c0800,%ecx
11077(3): setz %bl
1107a(4): bt %rax,%rcx
1107e(6): jnb 0xffffff32(%rip)
11084(5): mov 0x18(%rsp),%rcx
11089(2): cmp $0x17,%al
1108b(4): mov 0x48(%r14),%rbp
1108f(4): movdqa (%rcx),%xmm0
11093(6): jz 0x325(%rip)
11099(2): cmp $0x13,%al
1109b(3): movzx %bl,%ebx
1109e(6): jz 0x2b2(%rip)
110a4(5): mov 0x20(%rsp),%rdx
110a9(5): mov 0x18(%rsp),%rdi
110ae(3): mov %r14,%rsi
110b1(5): call 0xfffff62f(%rip)
110b6(2): cwde 
110b8(4): add %rax,0x48(%r14)
110bc(6): cmp $0x0,0x28(%rsp)
110c2(6): jz 0x38e(%rip)
110c8(8): mov $0xffffffff,(%rsp)
110d0(3): test %rbx,%rbx
110d3(5): mov 0x28(%rsp),%rbp
110d8(9): mov $0x0,0x30(%rsp)
110e1(6): jnle 0x17f(%rip)
110e7(4): cmp $0x11,0x30(%rbp)
110eb(6): jz 0x345(%rip)
110f1(5): cmp $0xffffffff,(%rsp)
110f6(3): mov %rbp,%rdx
110f9(3): mov %r15,%r8
110fc(3): setz %al
110ff(2): xor %ecx,%ecx
11101(3): add $0xa,%eax
11104(7): mov %al,0xc8(%rsp)
1110b(5): mov 0x10(%rsp),%rax
11110(4): lea 0x70(%rax),%r12
11114(7): lea 0x80(%rax),%r13
1111b(3): mov %r12,%rdi
1111e(3): mov %r13,%rsi
11121(5): call 0xffff767f(%rip)
11126(3): test %rax,%rax
11129(3): mov %rax,%rdx
1112c(6): jz 0x1f4(%rip)
11132(4): add $0x2,%rbx
11136(4): cmp (%rsp),%rbx
1113a(2): jnle 0x81(%rip)
1113c(5): mov %r14,0x48(%rsp)
11141(3): mov %rax,%r14
11144(5): mov 0x10(%rsp),%rsi
11149(3): mov %rbp,%rdi
1114c(5): call 0xffff7734(%rip)
11151(3): mov %r15,%r8
11154(3): mov %rax,%rbp
11157(3): mov %rax,%rcx
1115a(3): mov %r14,%rdx
1115d(3): mov %r13,%rsi
11160(3): mov %r12,%rdi
11163(8): mov $0x10,0xc8(%rsp)
1116b(5): call 0xffff7635(%rip)
11170(3): test %rbp,%rbp
11173(6): jz 0x1ad(%rip)
11179(3): test %rax,%rax
1117c(6): jz 0x1a4(%rip)
11182(2): xor %ecx,%ecx
11184(3): mov %r15,%r8
11187(3): mov %rax,%rdx
1118a(3): mov %r13,%rsi
1118d(3): mov %r12,%rdi
11190(8): mov $0xa,0xc8(%rsp)
11198(5): call 0xffff7608(%rip)
1119d(3): test %rax,%rax
111a0(3): mov %rax,%r14
111a3(6): jz 0x17d(%rip)
111a9(4): add $0x1,%rbx
111ad(4): cmp (%rsp),%rbx
111b1(2): jle 0xffffff93(%rip)
111b3(5): mov 0x48(%rsp),%r14
111b8(3): mov %rax,%rdx
111bb(5): mov 0x30(%rsp),%rax
111c0(3): test %rax,%rax
111c3(6): jz 0x2ad(%rip)
111c9(3): mov %rdx,%rcx
111cc(3): mov %r15,%r8
111cf(3): mov %rax,%rdx
111d2(3): mov %r13,%rsi
111d5(3): mov %r12,%rdi
111d8(8): mov $0x10,0xc8(%rsp)
111e0(5): call 0xffff75c0(%rip)
111e5(5): mov 0x40(%rsp),%rdi
111ea(2): mov (%rdi),%edx
111ec(2): test %edx,%edx
111ee(2): jz 0xb(%rip)
111f0(3): test %rax,%rax
111f3(6): jz 0x358(%rip)
111f9(5): mov %rax,0x28(%rsp)
111fe(9): test $0x1000000,0x20(%rsp)
11207(5): mov 0x18(%rsp),%rax
1120c(4): movzx 0x8(%rax),%eax
11210(6): jz 0xfffffe58(%rip)
11216(2): cmp $0xb,%al
11218(2): jz 0xa(%rip)
1121a(2): cmp $0x17,%al
1121c(6): jnz 0xfffffe4c(%rip)
11222(5): mov 0x28(%rsp),%rax
11227(3): test %rax,%rax
1122a(2): jz 0x13(%rip)
1122c(7): lea 0xffff602d(%rip),%rsi
11233(2): xor %edx,%edx
11235(3): mov %rax,%rdi
11238(5): call 0xffff5188(%rip)
1123d(5): mov 0x40(%rsp),%rax
11242(9): mov $0x0,0x28(%rsp)
1124b(6): mov $0xd,(%rax)
11251(5): jmp 0xfffffd5f(%rip)
11256(a): nop 0x0(%rax,%rax,1)
11260(4): cmp $0x1,%rbx
11264(6): jz 0x838(%rip)
1126a(5): mov 0x10(%rsp),%rax
1126f(3): mov %rbp,%r13
11272(5): mov %r14,0x48(%rsp)
11277(7): lea 0x80(%rax),%r12
1127e(4): lea 0x70(%rax),%rdi
11282(3): mov %rbp,%rax
11285(3): mov %rax,%r14
11288(5): mov $0x2,%ebp
1128d(3): mov %r12,%rsi
11290(5): mov %rdi,0x30(%rsp)
11295(3): mov %r13,%r12
11298(3): mov %rbx,%r13
1129b(3): mov %rsi,%rbx
1129e(2): nop 
112a0(5): mov 0x10(%rsp),%rsi
112a5(3): mov %r12,%rdi
112a8(5): call 0xffff75d8(%rip)
112ad(5): mov 0x30(%rsp),%rdi
112b2(3): mov %rax,%r12
112b5(3): mov %r14,%rdx
112b8(3): mov %r15,%r8
112bb(3): mov %rax,%rcx
112be(3): mov %rbx,%rsi
112c1(8): mov $0x10,0xc8(%rsp)
112c9(5): call 0xffff74d7(%rip)
112ce(3): test %r12,%r12
112d1(3): mov %rax,%r14
112d4(2): jz 0x4c(%rip)
112d6(3): test %rax,%rax
112d9(2): jz 0x47(%rip)
112db(4): add $0x1,%rbp
112df(3): cmp %r13,%rbp
112e2(2): jle 0xffffffbe(%rip)
112e4(5): mov 0x48(%rsp),%r14
112e9(3): mov %r13,%rbx
112ec(5): mov %rax,0x30(%rsp)
112f1(3): mov %r12,%r13
112f4(4): cmp %rbx,(%rsp)
112f8(6): jz 0x16c(%rip)
112fe(5): mov 0x10(%rsp),%rsi
11303(3): mov %r13,%rdi
11306(5): call 0xffff757a(%rip)
1130b(3): test %rax,%rax
1130e(3): mov %rax,%rbp
11311(6): jnz 0xfffffdd6(%rip)
11317(9): nop 0x0(%rax,%rax,1)
11320(5): mov 0x40(%rsp),%rax
11325(6): mov $0xc,(%rax)
1132b(5): mov 0x28(%rsp),%rdi
11330(7): lea 0xffff5f29(%rip),%rsi
11337(2): xor %edx,%edx
11339(5): call 0xffff5087(%rip)
1133e(9): mov $0x0,0x28(%rsp)
11347(5): jmp 0xfffffc69(%rip)
1134c(4): nop 0x0(%rax)
11350(8): mov $0x1,(%rsp)
11358(5): mov 0x20(%rsp),%rdx
1135d(5): mov 0x18(%rsp),%rdi
11362(3): mov %r14,%rsi
11365(5): call 0xfffff37b(%rip)
1136a(2): cwde 
1136c(4): add %rax,0x48(%r14)
11370(6): cmp $0x0,0x28(%rsp)
11376(6): jz 0xda(%rip)
1137c(4): mov (%rsp),%rax
11380(3): or %rbx,%rax
11383(6): jnz 0xfffffd4d(%rip)
11389(5): mov 0x28(%rsp),%rdi
1138e(7): lea 0xffff5ecb(%rip),%rsi
11395(2): xor %edx,%edx
11397(5): call 0xffff5029(%rip)
1139c(5): mov 0x40(%rsp),%rax
113a1(2): mov (%rax),%esi
113a3(2): test %esi,%esi
113a5(2): jnz 0xffffff86(%rip)
113a7(9): mov $0x0,0x28(%rsp)
113b0(5): jmp 0xfffffe4e(%rip)
113b5(3): nop (%rax)
113b8(5): mov 0x20(%rsp),%rdx
113bd(3): mov %rcx,%rsi
113c0(3): mov %r14,%rdi
113c3(4): movaps %xmm0,(%rsp)
113c7(5): call 0xfffffa19(%rip)
113cc(4): cmp $0xffffffff,%rax
113d0(3): mov %rax,%rbx
113d3(5): movdqa (%rsp),%xmm0
113d8(6): jz 0xa8(%rip)
113de(4): cmp $0xfffffffe,%rax
113e2(2): jz 0x1b(%rip)
113e4(5): mov 0x18(%rsp),%rax
113e9(4): movzx 0x8(%rax),%eax
113ed(2): cmp $0x18,%al
113ef(6): jz 0x121(%rip)
113f5(2): cmp $0x1,%al
113f7(6): jz 0x12c(%rip)
113fd(9): test $0x200000,0x20(%rsp)
11406(6): jz 0xf3d(%rip)
1140c(5): mov 0x18(%rsp),%rax
11411(4): mov %rbp,0x48(%r14)
11415(3): movaps %xmm0,(%rax)
11418(4): mov $0x1,0x8(%rax)
1141c(5): mov 0x28(%rsp),%rax
11421(5): jmp 0xfffffdc4(%rip)
11426(a): nop 0x0(%rax,%rax,1)
11430(4): mov 0x28(%rbp),%rdx
11434(7): lea 0xffff4cc5(%rip),%rsi
1143b(3): mov %rbp,%rdi
1143e(5): call 0xffff4f82(%rip)
11443(5): jmp 0xfffffcae(%rip)
11448(8): nop 0x0(%rax,%rax,1)
11450(5): mov 0x40(%rsp),%rax
11455(2): mov (%rax),%ecx
11457(2): test %ecx,%ecx
11459(6): jz 0xffffff4e(%rip)
1145f(5): jmp 0xfffffb41(%rip)
11464(5): mov 0x30(%rsp),%rdx
11469(7): nop 0x0(%rax)
11470(5): mov %rdx,0x28(%rsp)
11475(5): jmp 0xfffffd89(%rip)
1147a(6): nop 0x0(%rax,%rax,1)
11480(5): mov 0x18(%rsp),%rax
11485(4): cmp $0x1,0x8(%rax)
11489(6): jnz 0xb7(%rip)
1148f(5): mov 0x18(%rsp),%rax
11494(3): cmp $0x2c,(%rax)
11497(6): jnz 0xa9(%rip)
1149d(2): xor %ebx,%ebx
1149f(5): mov 0x20(%rsp),%rdx
114a4(5): mov 0x18(%rsp),%rsi
114a9(3): mov %r14,%rdi
114ac(5): movaps %xmm0,0x30(%rsp)
114b1(5): call 0xfffff92f(%rip)
114b6(4): cmp $0xfffffffe,%rax
114ba(4): mov %rax,(%rsp)
114be(6): movdqa 0x30(%rsp),%xmm0
114c4(6): jz 0xffffff39(%rip)
114ca(4): mov (%rsp),%rax
114ce(4): cmp $0xffffffff,%rax
114d2(2): jz 0x7(%rip)
114d4(3): cmp %rbx,%rax
114d7(2): jl 0x69(%rip)
114d9(5): mov 0x18(%rsp),%rax
114de(4): cmp $0x18,0x8(%rax)
114e2(2): jnz 0x5e(%rip)
114e4(5): cmp $0xffffffff,(%rsp)
114e9(2): jnz 0x2b(%rip)
114eb(2): xor %eax,%eax
114ed(7): cmp $0x7fff,%rbx
114f4(3): setnle %al
114f7(3): test %rax,%rax
114fa(6): jz 0xfffffe5e(%rip)
11500(5): mov 0x40(%rsp),%rax
11505(6): mov $0xf,(%rax)
1150b(2): jmp 0x40(%rip)
1150d(3): nop (%rax)
11510(4): mov %rbx,(%rsp)
11514(2): xor %eax,%eax
11516(8): cmp $0x7fff,(%rsp)
1151e(3): setnle %al
11521(2): jmp 0xffffffd6(%rip)
11523(5): mov 0x18(%rsp),%rax
11528(3): cmp $0x2c,(%rax)
1152b(6): jz 0xffffff74(%rip)
11531(9): test $0x200000,0x20(%rsp)
1153a(6): jnz 0xfffffed2(%rip)
11540(5): mov 0x40(%rsp),%rax
11545(6): mov $0xa,(%rax)
1154b(6): cmp $0x0,0x28(%rsp)
11551(6): jnz 0xfffffdda(%rip)
11557(5): jmp 0xfffffa49(%rip)
1155c(4): nop 0x0(%rax)
11560(5): mov 0x18(%rsp),%rax
11565(2): mov (%rax),%ebp
11567(6): test $0x30f,%ebp
1156d(2): jz 0x64(%rip)
1156f(5): mov 0x10(%rsp),%rax
11574(7): movzx 0xb0(%rax),%eax
1157b(2): test $0x10,%al
1157d(2): jnz 0x54(%rip)
1157f(5): mov 0x10(%rsp),%rdi
11584(3): or $0x10,%eax
11587(2): test $0x8,%al
11589(6): mov %al,0xb0(%rdi)
1158f(6): jnz 0xc04(%rip)
11595(a): mov $0x287948901175001088,%rdx
1159f(2): test $0x4,%al
115a1(7): mov %rdx,0xb8(%rdi)
115a8(a): mov $0x576460745995190270,%rdx
115b2(7): mov %rdx,0xc0(%rdi)
115b9(6): jz 0xb5f(%rip)
115bf(4): pxor %xmm0,%xmm0
115c3(5): mov 0x18(%rsp),%rax
115c8(7): movups %xmm0,0xc8(%rdi)
115cf(2): mov (%rax),%ebp
115d1(5): mov 0x10(%rsp),%rax
115d6(4): lea 0x70(%rax),%rbx
115da(7): lea 0x80(%rax),%r12
115e1(6): lea 0xffffff00(%rbp),%eax
115e7(5): test $0xfffffeff,%eax
115ec(6): jnz 0x66e(%rip)
115f2(6): cmp $0x100,%ebp
115f8(5): mov 0x18(%rsp),%r15
115fd(6): jz 0x635(%rip)
11603(7): mov $0x5,(%r15)
1160a(3): mov %r15,%r8
1160d(2): xor %ecx,%ecx
1160f(2): xor %edx,%edx
11611(3): mov %r12,%rsi
11614(3): mov %rbx,%rdi
11617(5): call 0xffff7189(%rip)
1161c(7): mov $0xa,(%r15)
11623(3): mov %rax,%rbp
11626(5): mov 0x18(%rsp),%r8
1162b(2): xor %ecx,%ecx
1162d(2): xor %edx,%edx
1162f(3): mov %r12,%rsi
11632(3): mov %rbx,%rdi
11635(5): call 0xffff716b(%rip)
1163a(8): lea 0xc0(%rsp),%r8
11642(3): mov %rbp,%rdx
11645(3): mov %rbx,%rdi
11648(3): mov %rax,%rcx
1164b(3): mov %r12,%rsi
1164e(3): mov %rax,%r13
11651(8): mov $0xa,0xc8(%rsp)
11659(5): call 0xffff7147(%rip)
1165e(3): test %rbp,%rbp
11661(3): mov %rax,%rdi
11664(5): mov %rax,0x28(%rsp)
11669(3): setz %dl
1166c(3): test %r13,%r13
1166f(3): setz %al
11672(2): or %al,%dl
11674(6): jnz 0x394(%rip)
1167a(3): test %rdi,%rdi
1167d(6): jz 0x38b(%rip)
11683(5): mov 0x20(%rsp),%rdx
11688(5): mov 0x18(%rsp),%rdi
1168d(3): mov %r14,%rsi
11690(5): call 0xfffff050(%rip)
11695(2): cwde 
11697(4): add %rax,0x48(%r14)
1169b(5): jmp 0xfffff915(%rip)
116a0(5): mov $0x1,%esi
116a5(5): mov $0x20,%edi
116aa(c): mov $0x0,0x98(%rsp)
116b6(5): call 0xffff03fa(%rip)
116bb(5): mov $0x1,%esi
116c0(3): mov %rax,%r12
116c3(5): mov $0x50,%edi
116c8(5): call 0xffff03e8(%rip)
116cd(3): test %r12,%r12
116d0(3): mov %rax,%r13
116d3(3): setz %dl
116d6(3): test %rax,%rax
116d9(3): setz %al
116dc(2): or %al,%dl
116de(6): jnz 0x7db(%rip)
116e4(5): mov 0x18(%rsp),%r10
116e9(5): mov 0x20(%rsp),%rdx
116ee(3): mov %r14,%rsi
116f1(3): mov %r10,%rdi
116f4(5): call 0xffff48dc(%rip)
116f9(3): movsxd %eax,%rbx
116fc(5): movzx 0x8(%r10),%eax
11701(2): cmp $0x2,%al
11703(6): jz 0x7a6(%rip)
11709(2): cmp $0x19,%al
1170b(5): mov $0x0,0x57(%rsp)
11710(6): jz 0x4ca(%rip)
11716(2): cmp $0x15,%al
11718(6): jz 0x50c(%rip)
1171e(8): lea 0xd0(%rsp),%rax
11726(5): mov 0x18(%rsp),%r15
1172b(7): lea 0x4622(%rip),%rbp
11732(9): mov $0x0,0x48(%rsp)
1173b(6): mov $0x1,%r9d
11741(9): mov $0x0,0x30(%rsp)
1174a(5): mov %rax,0x28(%rsp)
1174f(8): lea 0xa0(%rsp),%rax
11757(4): mov %rax,(%rsp)
1175b(8): lea 0x98(%rsp),%rax
11763(5): mov %rax,0x58(%rsp)
11768(8): lea 0xc0(%rsp),%rax
11770(5): mov %rax,0x60(%rsp)
11775(8): lea 0xf0(%rsp),%rax
1177d(5): mov %rax,0x68(%rsp)
11782(5): mov 0x28(%rsp),%rax
11787(5): mov 0x20(%rsp),%r8
1178c(4): and $0x1,%r9d
11790(4): mov (%rsp),%rdi
11794(2): mov %ebx,%ecx
11796(3): mov %r15,%rdx
11799(3): mov %r14,%rsi
1179c(b): mov $0x3,0xa0(%rsp)
117a7(8): mov %rax,0xa8(%rsp)
117af(5): call 0xffffecd1(%rip)
117b4(2): test %eax,%eax
117b6(6): jnz 0x4e5(%rip)
117bc(5): mov 0x20(%rsp),%rdx
117c1(3): mov %r14,%rsi
117c4(3): mov %r15,%rdi
117c7(5): call 0xffff4809(%rip)
117cc(3): movsxd %eax,%rbx
117cf(7): mov 0xa0(%rsp),%eax
117d6(3): lea 0xfffffffe(%rax),%edx
117d9(3): and $0xfd,%edx
117dc(2): jz 0x19(%rip)
117de(5): movzx 0x8(%r15),%edx
117e3(3): cmp $0x2,%dl
117e6(6): jz 0x49b(%rip)
117ec(3): cmp $0x16,%dl
117ef(6): jz 0x4b8(%rip)
117f5(3): cmp $0x4,%eax
117f8(6): jnbe 0x9a2(%rip)
117fe(5): movsxd 0x0(%rbp,%rax,4),%rax
11803(3): add %rbp,%rax
11806(2): jmp %rax
11808(5): mov 0x40(%rsp),%rbx
1180d(3): cmp $0x23,%cl
11810(4): mov 0x78(%rdi),%rsi
11814(4): setz %r8b
11818(7): lea 0x2d8e(%rip),%rcx
1181f(7): lea 0x4099(%rip),%rdx
11826(4): movzx %r8b,%r8d
1182a(3): mov %rbx,%r9
1182d(5): mov 0x10(%rsp),%rdi
11832(5): call 0xffffa2be(%rip)
11837(2): mov (%rbx),%edi
11839(5): mov %rax,0x28(%rsp)
1183e(2): test %edi,%edi
11840(6): jz 0xfffff7fc(%rip)
11846(3): test %rax,%rax
11849(6): jnz 0xfffff7f3(%rip)
1184f(5): jmp 0xfffff751(%rip)
11854(4): nop 0x0(%rax)
11858(5): mov 0x40(%rsp),%rbx
1185d(3): cmp $0x21,%cl
11860(4): mov 0x78(%rdi),%rsi
11864(4): setz %r8b
11868(7): lea 0x2bd3(%rip),%rcx
1186f(7): lea 0x403d(%rip),%rdx
11876(4): movzx %r8b,%r8d
1187a(3): mov %rbx,%r9
1187d(2): jmp 0xffffffb0(%rip)
1187f(5): mov 0x18(%rsp),%rax
11884(5): mov 0x10(%rsp),%rdi
11889(3): mov (%rax),%rcx
1188c(5): mov $0x1,%eax
11891(2): shl/sal %cl,%eax
11893(2): cwde 
11895(7): test %rax,0xa8(%rdi)
1189c(6): jz 0x632(%rip)
118a2(5): mov 0x10(%rsp),%rbx
118a7(5): mov 0x18(%rsp),%r8
118ac(2): xor %ecx,%ecx
118ae(2): xor %edx,%edx
118b0(7): or %rax,0xa0(%rbx)
118b7(7): lea 0x80(%rbx),%rsi
118be(4): lea 0x70(%rbx),%rdi
118c2(5): call 0xffff6ede(%rip)
118c7(3): test %rax,%rax
118ca(5): mov %rax,0x28(%rsp)
118cf(6): jz 0x139(%rip)
118d5(8): add $0x1,0x98(%rbx)
118dd(7): or $0x2,0xb0(%rbx)
118e4(5): jmp 0xfffff758(%rip)
118e9(5): mov 0x10(%rsp),%rbx
118ee(5): mov 0x18(%rsp),%r8
118f3(2): xor %ecx,%ecx
118f5(2): xor %edx,%edx
118f7(7): lea 0x80(%rbx),%rsi
118fe(4): lea 0x70(%rbx),%rdi
11902(5): call 0xffff6e9e(%rip)
11907(3): test %rax,%rax
1190a(5): mov %rax,0x28(%rsp)
1190f(6): jz 0xf9(%rip)
11915(7): cmp $0x1,0xb4(%rbx)
1191c(6): jle 0xfffff720(%rip)
11922(7): or $0x2,0xb0(%rbx)
11929(5): jmp 0xfffff713(%rip)
1192e(5): mov 0x10(%rsp),%rax
11933(5): mov 0x18(%rsp),%r8
11938(2): xor %ecx,%ecx
1193a(2): xor %edx,%edx
1193c(4): lea 0x70(%rax),%rbx
11940(7): lea 0x80(%rax),%rbp
11947(3): mov %rbx,%rdi
1194a(3): mov %rbp,%rsi
1194d(5): call 0xffff6e53(%rip)
11952(3): test %rax,%rax
11955(5): mov %rax,0x28(%rsp)
1195a(6): jz 0xae(%rip)
11960(5): mov 0x10(%rsp),%rax
11965(8): lea 0xc0(%rsp),%r12
1196d(5): mov 0x28(%rsp),%r15
11972(7): cmp $0x1,0xb4(%rax)
11979(6): jle 0xfffff6c3(%rip)
1197f(4): mov 0x48(%r14),%rax
11983(4): cmp %rax,0x68(%r14)
11987(6): jle 0x30a(%rip)
1198d(4): cmp 0x30(%r14),%rax
11991(6): jz 0x300(%rip)
11997(4): mov 0x10(%r14),%rdx
1199b(4): cmp $0xff,0x0(%rdx,%rax,4)
1199f(6): jnz 0x2f2(%rip)
119a5(5): mov 0x18(%rsp),%r13
119aa(5): mov 0x20(%rsp),%rdx
119af(3): mov %r14,%rsi
119b2(3): mov %r13,%rdi
119b5(5): call 0xffffed2b(%rip)
119ba(2): cwde 
119bc(4): add %rax,0x48(%r14)
119c0(3): mov %r13,%r8
119c3(2): xor %ecx,%ecx
119c5(2): xor %edx,%edx
119c7(3): mov %rbp,%rsi
119ca(3): mov %rbx,%rdi
119cd(5): call 0xffff6dd3(%rip)
119d2(3): mov %r15,%rdx
119d5(3): mov %rax,%r13
119d8(3): mov %r12,%r8
119db(3): mov %rax,%rcx
119de(3): mov %rbp,%rsi
119e1(3): mov %rbx,%rdi
119e4(8): mov $0x10,0xc8(%rsp)
119ec(5): call 0xffff6db4(%rip)
119f1(3): test %r13,%r13
119f4(3): mov %rax,%r15
119f7(3): setz %dl
119fa(3): test %rax,%rax
119fd(3): setz %al
11a00(2): or %al,%dl
11a02(6): jz 0xffffff7d(%rip)
11a08(5): mov 0x40(%rsp),%rax
11a0d(6): mov $0xc,(%rax)
11a13(5): jmp 0xfffff58d(%rip)
11a18(9): test $0x20000,0x20(%rsp)
11a21(6): jnz 0xfffff5ea(%rip)
11a27(5): mov 0x40(%rsp),%rax
11a2c(9): mov $0x0,0x28(%rsp)
11a35(6): mov $0x10,(%rax)
11a3b(5): jmp 0xfffff575(%rip)
11a40(4): cmp $0x8,%rbx
11a44(2): jbe 0x67(%rip)
11a46(5): mov 0x10(%rsp),%rdi
11a4b(8): lea 0xc0(%rsp),%r8
11a53(2): xor %ecx,%ecx
11a55(3): mov %rax,%rdx
11a58(8): mov $0x11,0xc8(%rsp)
11a60(7): lea 0x80(%rdi),%rsi
11a67(4): add $0x70,%rdi
11a6b(5): call 0xffff6d35(%rip)
11a70(3): test %rax,%rax
11a73(5): mov %rax,0x28(%rsp)
11a78(2): jz 0xffffff90(%rip)
11a7a(4): mov %rbx,0x28(%rax)
11a7e(5): jmp 0xfffff5be(%rip)
11a83(5): mov 0x40(%rsp),%rax
11a88(9): mov $0x0,0x28(%rsp)
11a91(6): mov $0x5,(%rax)
11a97(5): jmp 0xfffff519(%rip)
11a9c(5): mov 0x28(%rsp),%r13
11aa1(5): mov %r13,0x30(%rsp)
11aa6(5): jmp 0xfffff84e(%rip)
11aab(5): mov 0x10(%rsp),%rsi
11ab0(5): mov $0x1,%edx
11ab5(2): mov %ebx,%ecx
11ab7(2): shl/sal %cl,%edx
11ab9(3): movsxd %edx,%rdx
11abc(7): or %rdx,0xa8(%rsi)
11ac3(2): jmp 0xffffff83(%rip)
11ac5(8): mov 0xa8(%rsp),%rsi
11acd(3): mov %r12,%rdi
11ad0(5): call 0xffff97c0(%rip)
11ad5(5): mov 0x40(%rsp),%rdx
11ada(2): test %eax,%eax
11adc(2): mov %eax,(%rdx)
11ade(2): jnz 0x3a(%rip)
11ae0(5): movzx 0x8(%r15),%eax
11ae5(2): cmp $0x2,%al
11ae7(6): jz 0x19a(%rip)
11aed(2): cmp $0x15,%al
11aef(6): jz 0x413(%rip)
11af5(3): xor %r9d,%r9d
11af8(5): jmp 0xfffffc8a(%rip)
11afd(8): mov 0xa8(%rsp),%rsi
11b05(3): mov %r12,%rdi
11b08(5): call 0xffff9788(%rip)
11b0d(5): mov 0x40(%rsp),%rdx
11b12(2): test %eax,%eax
11b14(2): mov %eax,(%rdx)
11b16(2): jz 0xffffffca(%rip)
11b18(3): mov %r12,%rdi
11b1b(5): call 0xfffefdb5(%rip)
11b20(3): mov %r13,%rdi
11b23(5): call 0xffff56dd(%rip)
11b28(5): mov 0x40(%rsp),%rax
11b2d(3): mov (%rax),%r8d
11b30(3): test %r8d,%r8d
11b33(6): jnz 0xfffff46d(%rip)
11b39(9): mov $0x0,0x28(%rsp)
11b42(5): jmp 0xfffff4fa(%rip)
11b47(4): mov 0x28(%r13),%rdx
11b4b(5): cmp 0x30(%rsp),%rdx
11b50(4): mov 0x0(%r13),%rax
11b54(6): jz 0x4fa(%rip)
11b5a(4): lea 0x1(%rdx),%rcx
11b5e(4): mov %rcx,0x28(%r13)
11b62(7): mov 0xa8(%rsp),%ecx
11b69(3): mov %ecx,0x0(%rax,%rdx,4)
11b6c(5): jmp 0xffffff74(%rip)
11b71(8): movzx 0xa8(%rsp),%edx
11b79(5): mov $0x1,%esi
11b7e(3): mov %rdx,%rax
11b81(3): and $0x3f,%edx
11b84(4): shr $0x3,%rax
11b88(2): mov %edx,%ecx
11b8a(3): and $0x18,%eax
11b8d(3): shl/sal %cl,%rsi
11b90(4): or %rsi,0x0(%r12,%rax,1)
11b94(5): jmp 0xffffff4c(%rip)
11b99(4): sub $0x8,%rsp
11b9d(4): mov 0x78(%r14),%rdi
11ba1(4): lea 0x18(%r13),%rdx
11ba5(4): push 0x28(%rsp)
11ba9(8): mov 0xb8(%rsp),%r9
11bb1(4): lea 0x48(%r13),%rcx
11bb5(5): mov 0x68(%rsp),%r8
11bba(3): mov %r12,%rsi
11bbd(5): call 0xffff9723(%rip)
11bc2(5): mov 0x50(%rsp),%rdx
11bc7(2): test %eax,%eax
11bc9(2): mov %eax,(%rdx)
11bcb(2): pop %r9
11bcd(2): pop %r10
11bcf(6): jz 0xffffff11(%rip)
11bd5(5): jmp 0xffffff43(%rip)
11bda(5): or $0x1,0x20(%r13)
11bdf(9): test $0x100,0x20(%rsp)
11be8(2): jz 0xa(%rip)
11bea(8): or $0x400,(%r12)
11bf2(4): add %rbx,0x48(%r14)
11bf6(5): mov 0x18(%rsp),%r11
11bfb(3): mov %r14,%rsi
11bfe(5): mov 0x20(%rsp),%rdx
11c03(3): mov %r11,%rdi
11c06(5): call 0xffff43ca(%rip)
11c0b(2): mov %eax,%ebx
11c0d(5): movzx 0x8(%r11),%eax
11c12(2): cmp $0x2,%al
11c14(6): jz 0x295(%rip)
11c1a(5): mov $0x1,0x57(%rsp)
11c1f(5): jmp 0xfffffaf7(%rip)
11c24(5): mov 0x18(%rsp),%rax
11c29(4): mov $0x1,0x8(%rax)
11c2d(5): jmp 0xfffffaf1(%rip)
11c32(7): mov $0x6,(%r15)
11c39(3): mov %r15,%r8
11c3c(2): xor %ecx,%ecx
11c3e(2): xor %edx,%edx
11c40(3): mov %r12,%rsi
11c43(3): mov %rbx,%rdi
11c46(5): call 0xffff6b5a(%rip)
11c4b(7): mov $0x9,(%r15)
11c52(3): mov %rax,%rbp
11c55(5): jmp 0xfffff9d1(%rip)
11c5a(5): mov 0x18(%rsp),%r8
11c5f(2): xor %ecx,%ecx
11c61(2): xor %edx,%edx
11c63(3): mov %r12,%rsi
11c66(3): mov %rbx,%rdi
11c69(5): call 0xffff6b37(%rip)
11c6e(3): test %rax,%rax
11c71(5): mov %rax,0x28(%rsp)
11c76(6): jnz 0xfffffa0d(%rip)
11c7c(5): jmp 0xfffffd8c(%rip)
11c81(5): mov 0x40(%rsp),%rax
11c86(6): mov $0x7,(%rax)
11c8c(5): jmp 0xfffffe8c(%rip)
11c91(5): mov %r15,0x28(%rsp)
11c96(5): jmp 0xfffff3a6(%rip)
11c9b(5): mov 0x40(%rsp),%rdx
11ca0(2): mov %eax,(%rdx)
11ca2(5): jmp 0xfffffe76(%rip)
11ca7(3): movsxd %ebx,%rax
11caa(5): mov 0x20(%rsp),%r11
11caf(4): add %rax,0x48(%r14)
11cb3(5): mov 0x60(%rsp),%r10
11cb8(3): mov %r11,%rdx
11cbb(3): mov %r10,%rdi
11cbe(5): call 0xffff4312(%rip)
11cc3(8): movzx 0xc8(%rsp),%edx
11ccb(3): cmp $0x2,%dl
11cce(2): jz 0xffffffb3(%rip)
11cd0(3): cmp $0x15,%dl
11cd3(6): jz 0x214(%rip)
11cd9(5): mov 0x68(%rsp),%rdx
11cde(8): lea 0xb0(%rsp),%rdi
11ce6(6): mov $0x1,%r9d
11cec(3): mov %r11,%r8
11cef(2): mov %eax,%ecx
11cf1(b): mov $0x3,0xb0(%rsp)
11cfc(8): mov %rdx,0xb8(%rsp)
11d04(3): mov %r10,%rdx
11d07(5): call 0xffffe779(%rip)
11d0c(2): test %eax,%eax
11d0e(2): jnz 0xffffff8d(%rip)
11d10(5): mov 0x20(%rsp),%rdx
11d15(3): mov %r14,%rsi
11d18(3): mov %r15,%rdi
11d1b(5): call 0xffff42b5(%rip)
11d20(3): movsxd %eax,%rbx
11d23(5): mov 0x10(%rsp),%rax
11d28(7): mov 0xa0(%rsp),%esi
11d2f(6): mov $0x0,%r9d
11d35(7): cmp $0x1,0xb4(%rax)
11d3c(3): lea 0xfffffffe(%rsi),%eax
11d3f(4): cmovnl %r13,%r9
11d43(3): and $0xfd,%eax
11d46(6): jz 0x473(%rip)
11d4c(8): mov 0xb0(%rsp),%r10d
11d54(4): lea 0xfffffffe(%r10),%eax
11d58(3): and $0xfd,%eax
11d5b(6): jz 0x45e(%rip)
11d61(3): cmp $0x3,%esi
11d64(4): setz %r11b
11d68(6): jz 0x495(%rip)
11d6e(4): cmp $0x3,%r10d
11d72(6): jz 0x457(%rip)
11d78(2): test %esi,%esi
11d7a(6): jnz 0x36f(%rip)
11d80(8): movzx 0xa8(%rsp),%edx
11d88(3): test %r10d,%r10d
11d8b(6): jnz 0x342(%rip)
11d91(9): movzx 0xb8(%rsp),%r8d
11d9a(2): test %esi,%esi
11d9c(6): jz 0x2ea(%rip)
11da2(3): test %r11b,%r11b
11da5(6): jnz 0x2e1(%rip)
11dab(3): test %r9,%r9
11dae(7): mov 0xa8(%rsp),%edx
11db5(2): jz 0x1f(%rip)
11db7(3): mov %r8d,%edi
11dba(4): mov %edx,0x78(%rsp)
11dbe(5): mov %r9,0x70(%rsp)
11dc3(5): call 0xfffefdcd(%rip)
11dc8(5): mov 0x70(%rsp),%r9
11dcd(4): mov 0x78(%rsp),%edx
11dd1(3): mov %eax,%r8d
11dd4(3): cmp $0xff,%edx
11dd7(6): jz 0x416(%rip)
11ddd(4): cmp $0xff,%r8d
11de1(6): jz 0x40c(%rip)
11de7(9): test $0x10000,0x20(%rsp)
11df0(2): jz 0xb(%rip)
11df2(3): cmp %edx,%r8d
11df5(6): jb 0x3c4(%rip)
11dfb(3): test %r9,%r9
11dfe(2): jz 0x28(%rip)
11e00(4): mov 0x40(%r9),%rax
11e04(5): cmp 0x48(%rsp),%rax
11e09(4): mov 0x8(%r9),%rcx
11e0d(6): jz 0x416(%rip)
11e13(3): mov %edx,0x0(%rcx,%rax,4)
11e16(4): mov 0x10(%r9),%rcx
11e1a(4): lea 0x1(%rax),%rsi
11e1e(4): mov %rsi,0x40(%r9)
11e22(4): mov %r8d,0x0(%rcx,%rax,4)
11e26(2): xor %eax,%eax
11e28(5): mov $0x1,%edi
11e2d(2): cmp %eax,%edx
11e2f(2): mov %eax,%ecx
11e31(2): jnbe 0x18(%rip)
11e33(3): cmp %eax,%r8d
11e36(2): jb 0x13(%rip)
11e38(3): mov %rax,%rsi
11e3b(3): mov %rdi,%r11
11e3e(4): sar $0x6,%rsi
11e42(3): shl/sal %cl,%r11
11e45(4): or %r11,0x0(%r12,%rsi,8)
11e49(4): add $0x1,%rax
11e4d(6): cmp $0x100,%rax
11e53(2): jnz 0xffffffda(%rip)
11e55(5): mov 0x40(%rsp),%rax
11e5a(6): mov $0x0,(%rax)
11e60(5): jmp 0xfffffc80(%rip)
11e65(5): mov 0x18(%rsp),%rbx
11e6a(3): mov %rax,%rdx
11e6d(3): mov %r14,%rsi
11e70(4): mov %r8,(%rsp)
11e74(3): mov %rax,%r15
11e77(3): mov %rbx,%rdi
11e7a(5): call 0xffffe866(%rip)
11e7f(2): cwde 
11e81(4): add %rax,0x48(%r14)
11e85(5): mov 0x40(%rsp),%r9
11e8a(4): mov (%rsp),%r8
11e8e(3): mov %r15,%rcx
11e91(3): mov %rbx,%rdx
11e94(3): mov %rbp,%rsi
11e97(3): mov %r14,%rdi
11e9a(5): call 0xfffff006(%rip)
11e9f(5): mov %rax,0x28(%rsp)
11ea4(5): jmp 0xfffff10c(%rip)
11ea9(5): mov 0x40(%rsp),%rax
11eae(6): mov $0x2,(%rax)
11eb4(5): jmp 0xfffffc64(%rip)
11eb9(3): mov %r12,%rdi
11ebc(5): call 0xfffefa14(%rip)
11ec1(3): mov %r13,%rdi
11ec4(5): call 0xfffefa0c(%rip)
11ec9(5): jmp 0xfffffb3f(%rip)
11ece(5): mov 0x40(%rsp),%rax
11ed3(9): mov $0x0,0x28(%rsp)
11edc(6): mov $0x6,(%rax)
11ee2(5): jmp 0xfffff0ce(%rip)
11ee7(2): mov %ebx,%eax
11ee9(2): neg %eax
11eeb(2): cwde 
11eed(4): add %rax,0x48(%r14)
11ef1(5): mov $0x1,0x8(%r15)
11ef6(7): mov 0xa0(%rsp),%eax
11efd(5): jmp 0xfffff8f8(%rip)
11f02(4): add %rbx,0x48(%r14)
11f06(5): cmp $0x0,0x57(%rsp)
11f0b(2): jz 0x16(%rip)
11f0d(5): lea 0x20(%r12),%rdx
11f12(3): mov %r12,%rax
11f15(3): not (%rax)
11f18(4): add $0x8,%rax
11f1c(3): cmp %rax,%rdx
11f1f(2): jnz 0xfffffff6(%rip)
11f21(5): mov 0x10(%rsp),%rax
11f26(6): mov 0xb4(%rax),%edx
11f2c(3): cmp $0x1,%edx
11f2f(2): jle 0x1a(%rip)
11f31(4): mov 0x78(%rax),%rcx
11f35(2): xor %eax,%eax
11f37(4): mov 0x0(%rcx,%rax,1),%rsi
11f3b(4): and %rsi,0x0(%r12,%rax,1)
11f3f(4): add $0x8,%rax
11f43(4): cmp $0x20,%rax
11f47(2): jnz 0xfffffff0(%rip)
11f49(5): cmp $0x0,0x28(%r13)
11f4e(6): jnz 0x8a(%rip)
11f54(5): cmp $0x0,0x30(%r13)
11f59(2): jnz 0x7f(%rip)
11f5b(5): cmp $0x0,0x38(%r13)
11f60(2): jnz 0x78(%rip)
11f62(5): cmp $0x0,0x40(%r13)
11f67(2): jnz 0x71(%rip)
11f69(3): sub $0x1,%edx
11f6c(2): jle 0x10(%rip)
11f6e(5): cmp $0x0,0x48(%r13)
11f73(2): jnz 0x65(%rip)
11f75(5): test $0x1,0x20(%r13)
11f7a(2): jnz 0x5e(%rip)
11f7c(3): mov %r13,%rdi
11f7f(5): call 0xffff5281(%rip)
11f84(5): mov 0x10(%rsp),%rax
11f89(8): lea 0xb0(%rsp),%r8
11f91(2): xor %ecx,%ecx
11f93(2): xor %edx,%edx
11f95(8): mov $0x3,0xb8(%rsp)
11f9d(8): mov %r12,0xb0(%rsp)
11fa5(7): lea 0x80(%rax),%rsi
11fac(4): lea 0x70(%rax),%rdi
11fb0(5): call 0xffff67f0(%rip)
11fb5(3): test %rax,%rax
11fb8(5): mov %rax,0x28(%rsp)
11fbd(6): jnz 0xfffff07f(%rip)
11fc3(5): mov 0x40(%rsp),%rax
11fc8(6): mov $0xc,(%rax)
11fce(5): jmp 0xfffffb4a(%rip)
11fd3(5): nop 0x0(%rax,%rax,1)
11fd8(5): mov 0x10(%rsp),%rax
11fdd(8): lea 0xb0(%rsp),%r15
11fe5(2): xor %edx,%edx
11fe7(2): xor %ecx,%ecx
11fe9(3): mov %r15,%r8
11fec(7): or $0x2,0xb0(%rax)
11ff3(4): lea 0x70(%rax),%rbx
11ff7(7): lea 0x80(%rax),%rbp
11ffe(8): mov $0x6,0xb8(%rsp)
12006(8): mov %r13,0xb0(%rsp)
1200e(3): mov %rbx,%rdi
12011(3): mov %rbp,%rsi
12014(5): call 0xffff678c(%rip)
12019(3): mov %rax,%rdi
1201c(5): mov %rax,0x28(%rsp)
12021(5): lea 0x20(%r12),%rdx
12026(3): test %rdi,%rdi
12029(3): mov %r12,%rax
1202c(2): jz 0xffffff97(%rip)
1202e(4): cmp $0x0,(%rax)
12032(6): jnz 0x2ab(%rip)
12038(4): add $0x8,%rax
1203c(3): cmp %rax,%rdx
1203f(2): jnz 0xffffffef(%rip)
12041(3): mov %r12,%rdi
12044(5): call 0xfffef88c(%rip)
12049(5): jmp 0xffffeff3(%rip)
1204e(5): mov 0x30(%rsp),%rdx
12053(5): lea 0x1(%rdx,%rdx,1),%rdi
12058(8): lea 0x0(,%rdi,4),%rsi
12060(5): mov %rdi,0x30(%rsp)
12065(3): mov %rax,%rdi
12068(5): call 0xfffefaf8(%rip)
1206d(3): test %rax,%rax
12070(6): jz 0xffffff53(%rip)
12076(4): mov %rax,0x0(%r13)
1207a(4): mov 0x28(%r13),%rdx
1207e(5): jmp 0xfffffadc(%rip)
12083(3): xor %r8d,%r8d
12086(3): test %r9,%r9
12089(2): jz 0x7b(%rip)
1208b(2): mov %edx,%edi
1208d(5): mov %r8d,0x78(%rsp)
12092(5): mov %r9,0x70(%rsp)
12097(5): call 0xfffefaf9(%rip)
1209c(2): mov %eax,%edx
1209e(7): mov 0xb0(%rsp),%eax
120a5(5): mov 0x70(%rsp),%r9
120aa(5): mov 0x78(%rsp),%r8d
120af(3): cmp $0x3,%eax
120b2(6): jz 0xfffffd05(%rip)
120b8(2): test %eax,%eax
120ba(6): jz 0xfffffcfd(%rip)
120c0(8): mov 0xb8(%rsp),%r8d
120c8(5): jmp 0xfffffd0c(%rip)
120cd(4): cmp $0x3,%r10d
120d1(6): jz 0x291(%rip)
120d7(2): test %esi,%esi
120d9(2): jz 0xffffffaa(%rip)
120db(3): test %r11b,%r11b
120de(2): jnz 0xffffffa5(%rip)
120e0(7): mov 0xa8(%rsp),%edx
120e7(2): jmp 0xffffffd9(%rip)
120e9(2): xor %edx,%edx
120eb(3): cmp $0x3,%esi
120ee(6): jnz 0xfffffc9a(%rip)
120f4(8): mov 0xa8(%rsp),%rax
120fc(3): movzx (%rax),%edx
120ff(5): jmp 0xfffffc89(%rip)
12104(3): test %r10d,%r10d
12107(6): jz 0xfffffce0(%rip)
1210d(4): cmp $0x3,%r10d
12111(2): jnz 0xffffffaf(%rip)
12113(5): jmp 0xfffffcd4(%rip)
12118(5): mov $0x80,%ebx
1211d(6): mov $0x2,%r12d
12123(5): call 0xfffefb4d(%rip)
12128(3): movsxd %ebx,%rdx
1212b(3): movsxd %r12d,%r9
1212e(6): mov $0x1,%r8d
12134(3): add %rdx,%rdx
12137(3): add (%rax),%rdx
1213a(5): mov 0x10(%rsp),%rax
1213f(4): lea 0x0(%rax,%r9,8),%rdi
12143(2): xor %eax,%eax
12145(2): jmp 0x1d(%rip)
12147(9): nop 0x0(%rax,%rax,1)
12150(3): lea 0x0(%rbx,%rax,1),%esi
12153(3): cmp $0x5f,%esi
12156(2): jz 0x14(%rip)
12158(4): add $0x1,%rax
1215c(4): cmp $0x40,%rax
12160(2): jz 0x19(%rip)
12162(4): test $0x8,0x0(%rdx,%rax,2)
12166(2): mov %eax,%ecx
12168(2): jz 0xffffffe8(%rip)
1216a(3): mov %r8,%rsi
1216d(3): shl/sal %cl,%rsi
12170(7): or %rsi,0xb8(%rdi)
12177(2): jmp 0xffffffe1(%rip)
12179(4): add $0x1,%r9
1217d(3): add $0x40,%ebx
12180(4): sub $0xffffff80,%rdx
12184(4): add $0x8,%rdi
12188(4): cmp $0x3,%r9d
1218c(2): jle 0xffffffb7(%rip)
1218e(5): jmp 0xfffff443(%rip)
12193(2): xor %ebx,%ebx
12195(3): xor %r12d,%r12d
12198(2): jmp 0xffffff8b(%rip)
1219a(7): lea 0x3c8f(%rip),%rcx
121a1(7): lea 0x36a8(%rip),%rsi
121a8(7): lea 0x36f0(%rip),%rdi
121af(5): mov $0xced,%edx
121b4(5): call 0xfffef89c(%rip)
121b9(5): mov 0x40(%rsp),%rax
121be(6): mov $0xb,(%rax)
121c4(5): jmp 0xfffff954(%rip)
121c9(8): mov 0xb8(%rsp),%rdi
121d1(2): xor %eax,%eax
121d3(4): or $0xffffffff,%rcx
121d7(2): REPNZ scasb rdi(%es,10),%al
121d9(3): mov %rcx,%rax
121dc(3): not %rax
121df(4): sub $0x1,%rax
121e3(4): cmp $0x1,%rax
121e7(6): jbe 0xfffffb91(%rip)
121ed(5): mov 0x40(%rsp),%rax
121f2(6): mov $0x3,(%rax)
121f8(5): jmp 0xfffff920(%rip)
121fd(8): mov 0xa8(%rsp),%rdi
12205(2): xor %eax,%eax
12207(4): or $0xffffffff,%rcx
1220b(2): REPNZ scasb rdi(%es,10),%al
1220d(3): mov %rcx,%rax
12210(3): not %rax
12213(4): sub $0x1,%rax
12217(4): cmp $0x1,%rax
1221b(6): jbe 0xfffffb53(%rip)
12221(2): jmp 0xffffffcc(%rip)
12223(5): mov 0x48(%rsp),%rax
12228(3): mov %rcx,%rdi
1222b(8): mov %r8d,0x8c(%rsp)
12233(7): mov %edx,0x88(%rsp)
1223a(5): mov %r9,0x70(%rsp)
1223f(3): add %rax,%rax
12242(4): add $0x1,%rax
12246(8): lea 0x0(,%rax,4),%r10
1224e(5): mov %rax,0x48(%rsp)
12253(3): mov %r10,%rsi
12256(8): mov %r10,0x80(%rsp)
1225e(5): call 0xfffef902(%rip)
12263(5): mov 0x70(%rsp),%r9
12268(8): mov 0x80(%rsp),%r10
12270(5): mov %rax,0x78(%rsp)
12275(4): mov 0x10(%r9),%rdi
12279(3): mov %r10,%rsi
1227c(5): call 0xfffef8e4(%rip)
12281(5): mov 0x78(%rsp),%rcx
12286(3): test %rcx,%rcx
12289(2): jz 0x2c(%rip)
1228b(3): test %rax,%rax
1228e(5): mov 0x70(%rsp),%r9
12293(7): mov 0x88(%rsp),%edx
1229a(8): mov 0x8c(%rsp),%r8d
122a2(2): jz 0x13(%rip)
122a4(4): mov %rax,0x10(%r9)
122a8(4): mov %rcx,0x8(%r9)
122ac(4): mov 0x40(%r9),%rax
122b0(5): jmp 0xfffffb63(%rip)
122b5(3): mov %rcx,%rdi
122b8(4): mov %rax,(%rsp)
122bc(5): call 0xfffef614(%rip)
122c1(4): mov (%rsp),%rax
122c5(3): mov %rax,%rdi
122c8(5): call 0xfffef608(%rip)
122cd(5): mov 0x40(%rsp),%rax
122d2(6): mov $0xc,(%rax)
122d8(5): jmp 0xfffff840(%rip)
122dd(2): xor %ecx,%ecx
122df(2): xor %edx,%edx
122e1(3): mov %r15,%r8
122e4(3): mov %rbp,%rsi
122e7(3): mov %rbx,%rdi
122ea(8): mov $0x3,0xb8(%rsp)
122f2(8): mov %r12,0xb0(%rsp)
122fa(5): call 0xffff64a6(%rip)
122ff(3): test %rax,%rax
12302(6): jz 0xfffffcc1(%rip)
12308(5): mov 0x28(%rsp),%rcx
1230d(8): lea 0xc0(%rsp),%r8
12315(3): mov %rax,%rdx
12318(3): mov %rbp,%rsi
1231b(3): mov %rbx,%rdi
1231e(8): mov $0xa,0xc8(%rsp)
12326(5): call 0xffff647a(%rip)
1232b(3): test %rax,%rax
1232e(5): mov %rax,0x28(%rsp)
12333(6): jnz 0xffffed09(%rip)
12339(5): jmp 0xfffffc8a(%rip)
1233e(5): call 0xfffef6a2(%rip)
12343(5): mov 0x18(%rsp),%rax
12348(4): cmp $0x2,0x8(%rax)
1234c(6): jnz 0xfffff1f4(%rip)
12352(5): mov 0x40(%rsp),%rax
12357(6): mov $0x9,(%rax)
1235d(5): jmp 0xfffff1ee(%rip)
12362(8): mov 0xb8(%rsp),%rax
1236a(4): movzx (%rax),%r8d
1236e(5): jmp 0xfffffa2c(%rip)

"parse_branch" :
12380(2): push %r15
12382(2): push %r14
12384(3): mov %rcx,%r15
12387(2): push %r13
12389(2): push %r12
1238b(3): mov %rsi,%r13
1238e(1): push %rbp
1238f(1): push %rbx
12390(3): mov %r9,%rbx
12393(3): mov %rdx,%rbp
12396(3): mov %r8,%r12
12399(4): sub $0x48,%rsp
1239d(9): mov $0x28,%rax
123a6(5): mov %rax,0x38(%rsp)
123ab(2): xor %eax,%eax
123ad(3): mov (%rsi),%rax
123b0(4): mov %rdi,(%rsp)
123b4(5): mov %rax,0x10(%rsp)
123b9(5): call 0xffffeae7(%rip)
123be(2): mov (%rbx),%edx
123c0(3): mov %rax,%r14
123c3(2): test %edx,%edx
123c5(2): jz 0xb(%rip)
123c7(3): test %rax,%rax
123ca(6): jz 0x100(%rip)
123d0(5): lea 0x20(%rsp),%rax
123d5(5): mov %rax,0x18(%rsp)
123da(6): nop 0x0(%rax,%rax,1)
123e0(4): movzx 0x8(%rbp),%eax
123e4(2): mov %eax,%edx
123e6(3): and $0xf7,%edx
123e9(3): cmp $0x2,%dl
123ec(6): jz 0x94(%rip)
123f2(2): cmp $0x9,%al
123f4(2): jnz 0xb(%rip)
123f6(3): test %r12,%r12
123f9(6): jnz 0x87(%rip)
123ff(4): mov (%rsp),%rdi
12403(3): mov %rbx,%r9
12406(3): mov %r12,%r8
12409(3): mov %r15,%rcx
1240c(3): mov %rbp,%rdx
1240f(3): mov %r13,%rsi
12412(5): call 0xffffea8e(%rip)
12417(3): mov %rax,%r9
1241a(2): mov (%rbx),%eax
1241c(2): test %eax,%eax
1241e(2): jz 0xb(%rip)
12420(3): test %r9,%r9
12423(6): jz 0x91(%rip)
12429(3): test %r14,%r14
1242c(2): jz 0x7c(%rip)
1242e(3): test %r9,%r9
12431(2): jz 0x77(%rip)
12433(5): mov 0x10(%rsp),%rax
12438(5): mov 0x18(%rsp),%r8
1243d(3): mov %r9,%rcx
12440(3): mov %r14,%rdx
12443(5): mov %r9,0x8(%rsp)
12448(5): mov $0x10,0x28(%rsp)
1244d(7): lea 0x80(%rax),%rsi
12454(4): lea 0x70(%rax),%rdi
12458(5): call 0xffff6348(%rip)
1245d(3): test %rax,%rax
12460(5): mov 0x8(%rsp),%r9
12465(2): jz 0x6b(%rip)
12467(3): mov %rax,%r14
1246a(4): movzx 0x8(%rbp),%eax
1246e(2): mov %eax,%edx
12470(3): and $0xf7,%edx
12473(3): cmp $0x2,%dl
12476(6): jnz 0xffffff7c(%rip)
1247c(4): nop 0x0(%rax)
12480(5): mov 0x38(%rsp),%rcx
12485(9): xor $0x28,%rcx
1248e(3): mov %r14,%rax
12491(2): jnz 0x6c(%rip)
12493(4): add $0x48,%rsp
12497(1): pop %rbx
12498(1): pop %rbp
12499(2): pop %r12
1249b(2): pop %r13
1249d(2): pop %r14
1249f(2): pop %r15
124a1(1): ret near (%rsp)
124a2(6): nop 0x0(%rax,%rax,1)
124a8(3): test %r14,%r14
124ab(4): cmove %r9,%r14
124af(5): jmp 0xffffff31(%rip)
124b4(3): test %r14,%r14
124b7(2): jz 0x13(%rip)
124b9(7): lea 0xffff4da0(%rip),%rsi
124c0(2): xor %edx,%edx
124c2(3): mov %r14,%rdi
124c5(5): call 0xffff3efb(%rip)
124ca(3): xor %r14d,%r14d
124cd(2): jmp 0xffffffb3(%rip)
124cf(1): nop 
124d0(7): lea 0xffff4d89(%rip),%rsi
124d7(3): mov %r9,%rdi
124da(2): xor %edx,%edx
124dc(5): call 0xffff3ee4(%rip)
124e1(7): lea 0xffff4d78(%rip),%rsi
124e8(3): mov %r14,%rdi
124eb(2): xor %edx,%edx
124ed(3): xor %r14d,%r14d
124f0(5): call 0xffff3ed0(%rip)
124f5(6): mov $0xc,(%rbx)
124fb(2): jmp 0xffffff85(%rip)
124fd(5): call 0xfffef4e3(%rip)

"parse_reg_exp" :
12510(2): push %r15
12512(2): push %r14
12514(3): mov %rcx,%r14
12517(2): push %r13
12519(2): push %r12
1251b(3): mov %r9,%r13
1251e(1): push %rbp
1251f(1): push %rbx
12520(3): mov %rdx,%rbp
12523(3): mov %rdi,%r12
12526(4): sub $0x58,%rsp
1252a(3): mov (%rsi),%rbx
1252d(9): mov $0x28,%rax
12536(5): mov %rax,0x48(%rsp)
1253b(2): xor %eax,%eax
1253d(5): mov %rsi,0x28(%rsp)
12542(5): mov %r8,0x10(%rsp)
12547(7): mov 0xa8(%rbx),%rax
1254e(5): mov %rax,0x20(%rsp)
12553(5): call 0xfffffe2d(%rip)
12558(4): mov 0x0(%r13),%edx
1255c(3): mov %rax,%r15
1255f(2): test %edx,%edx
12561(2): jz 0xb(%rip)
12563(3): test %rax,%rax
12566(6): jz 0xec(%rip)
1256c(5): lea 0x30(%rsp),%rax
12571(5): mov %rax,0x8(%rsp)
12576(5): jmp 0x8e(%rip)
1257b(5): nop 0x0(%rax,%rax,1)
12580(2): cmp $0x9,%al
12582(2): jnz 0xe(%rip)
12584(6): cmp $0x0,0x10(%rsp)
1258a(6): jnz 0xae(%rip)
12590(7): mov 0xa8(%rbx),%rax
12597(5): mov 0x10(%rsp),%r8
1259c(3): mov %r14,%rcx
1259f(5): mov 0x28(%rsp),%rsi
125a4(3): mov %r13,%r9
125a7(3): mov %rbp,%rdx
125aa(3): mov %r12,%rdi
125ad(5): mov %rax,0x18(%rsp)
125b2(5): mov 0x20(%rsp),%rax
125b7(7): mov %rax,0xa8(%rbx)
125be(5): call 0xfffffdc2(%rip)
125c3(3): mov %rax,%rcx
125c6(4): mov 0x0(%r13),%eax
125ca(2): test %eax,%eax
125cc(2): jz 0x7(%rip)
125ce(3): test %rcx,%rcx
125d1(2): jz 0x6b(%rip)
125d3(5): mov 0x18(%rsp),%rax
125d8(7): or %rax,0xa8(%rbx)
125df(5): mov 0x8(%rsp),%r8
125e4(7): lea 0x80(%rbx),%rsi
125eb(4): lea 0x70(%rbx),%rdi
125ef(3): mov %r15,%rdx
125f2(5): mov $0xa,0x38(%rsp)
125f7(5): call 0xffff61a9(%rip)
125fc(3): test %rax,%rax
125ff(3): mov %rax,%r15
12602(2): jz 0x7e(%rip)
12604(4): cmp $0xa,0x8(%rbp)
12608(2): jnz 0x50(%rip)
1260a(3): mov %r14,%rdx
1260d(3): mov %r12,%rsi
12610(3): mov %rbp,%rdi
12613(7): or $0x800000,%rdx
1261a(5): call 0xffffe0c6(%rip)
1261f(2): cwde 
12621(5): add %rax,0x48(%r12)
12626(4): movzx 0x8(%rbp),%eax
1262a(2): mov %eax,%edx
1262c(3): and $0xf7,%edx
1262f(3): cmp $0x2,%dl
12632(6): jnz 0xffffff4e(%rip)
12638(2): xor %ecx,%ecx
1263a(2): jmp 0xffffffa5(%rip)
1263c(3): test %r15,%r15
1263f(2): jz 0x13(%rip)
12641(7): lea 0xffff4c18(%rip),%rsi
12648(2): xor %edx,%edx
1264a(3): mov %r15,%rdi
1264d(5): call 0xffff3d73(%rip)
12652(3): xor %r15d,%r15d
12655(3): nop (%rax)
12658(5): mov 0x48(%rsp),%rcx
1265d(9): xor $0x28,%rcx
12666(3): mov %r15,%rax
12669(2): jnz 0x21(%rip)
1266b(4): add $0x58,%rsp
1266f(1): pop %rbx
12670(1): pop %rbp
12671(2): pop %r12
12673(2): pop %r13
12675(2): pop %r14
12677(2): pop %r15
12679(1): ret near (%rsp)
1267a(6): nop 0x0(%rax,%rax,1)
12680(8): mov $0xc,0x0(%r13)
12688(2): jmp 0xffffffd0(%rip)
1268a(5): call 0xfffef356(%rip)

"re_compile_internal" :
12690(2): push %r15
12692(2): push %r14
12694(2): push %r13
12696(2): push %r12
12698(1): push %rbp
12699(1): push %rbx
1269a(7): sub $0x128,%rsp
126a1(4): mov %rcx,0x18(%rdi)
126a5(8): mov $0x0,0x10(%rdi)
126ad(9): mov $0x28,%rax
126b6(8): mov %rax,0x118(%rsp)
126be(2): xor %eax,%eax
126c0(4): movzx 0x38(%rdi),%eax
126c4(5): mov %rdi,0x8(%rsp)
126c9(5): mov %rsi,0x10(%rsp)
126ce(4): mov %rdx,(%rsp)
126d2(5): mov %rcx,0x18(%rsp)
126d7(8): mov $0x0,0x4c(%rsp)
126df(8): mov $0x0,0x30(%rdi)
126e7(3): mov (%rdi),%rbx
126ea(4): mov %al,0x20(%rsp)
126ee(3): and $0x90,%eax
126f1(8): cmp $0xe7,0x8(%rdi)
126f9(3): mov %al,0x38(%rdi)
126fc(6): jbe 0xdfa(%rip)
12702(4): lea 0x8(%rbx),%rdi
12706(5): mov 0x8(%rsp),%rax
1270b(3): mov %rbx,%rcx
1270e(4): and $0xfffffff8,%rdi
12712(3): sub %rdi,%rcx
12715(8): mov $0xe8,0x10(%rax)
1271d(2): xor %eax,%eax
1271f(6): add $0xe8,%ecx
12725(7): mov $0x0,(%rbx)
1272c(b): mov $0x0,0xe0(%rbx)
12737(3): shr $0x3,%ecx
1273a(3): REP stosd %rax,rdi(%es,10)
1273d(a): mov $0x384307168202282324,%rax
12747(a): mov $0xf,0x80(%rbx)
12751(4): cmp %rax,(%rsp)
12755(6): jnbe 0x641(%rip)
1275b(4): mov (%rsp),%r14
1275f(4): lea 0x1(%r14),%rax
12763(3): mov %rax,%rdi
12766(4): mov %rax,0x8(%rbx)
1276a(5): mov %rax,0x28(%rsp)
1276f(4): shl/sal $0x4,%rdi
12773(5): call 0xfffef38d(%rip)
12778(3): test %r14,%r14
1277b(3): mov %rax,(%rbx)
1277e(6): jz 0xce7(%rip)
12784(5): mov $0x1,%esi
12789(7): nop 0x0(%rax)
12790(3): add %rsi,%rsi
12793(4): cmp %rsi,(%rsp)
12797(2): jnb 0xfffffff9(%rip)
12799(4): lea 0xffffffff(%rsi),%rbp
1279d(5): mov $0x18,%edi
127a2(5): call 0xfffef30e(%rip)
127a7(7): mov %rbp,0x88(%rbx)
127ae(4): mov %rax,0x40(%rbx)
127b2(5): call 0xfffef20e(%rip)
127b7(5): mov $0xe,%edi
127bc(6): mov %eax,0xb4(%rbx)
127c2(5): call 0xfffef36e(%rip)
127c7(3): movzx (%rax),%edx
127ca(3): and $0xdf,%edx
127cd(3): cmp $0x55,%dl
127d0(2): jnz 0x50(%rip)
127d2(4): movzx 0x1(%rax),%edx
127d6(3): and $0xdf,%edx
127d9(3): cmp $0x54,%dl
127dc(2): jnz 0x44(%rip)
127de(4): movzx 0x2(%rax),%edx
127e2(3): and $0xdf,%edx
127e5(3): cmp $0x46,%dl
127e8(2): jnz 0x38(%rip)
127ea(2): xor %edx,%edx
127ec(4): cmp $0x2d,0x3(%rax)
127f0(7): lea 0x30ff(%rip),%rdi
127f7(5): mov $0x2,%ecx
127fc(3): setz %dl
127ff(5): lea 0x3(%rax,%rdx,1),%rsi
12804(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
12806(3): setnbe %al
12809(2): sbb $0x0,%al
1280b(2): test %al,%al
1280d(2): jnz 0x13(%rip)
1280f(7): or $0x4,0xb0(%rbx)
12816(a): nop 0x0(%rax,%rax,1)
12820(7): movzx 0xb0(%rbx),%eax
12827(2): mov %eax,%edx
12829(3): and $0xf7,%edx
1282c(7): cmp $0x1,0xb4(%rbx)
12833(6): mov %dl,0xb0(%rbx)
12839(2): jle 0x15(%rip)
1283b(2): test $0x4,%al
1283d(6): jz 0x566(%rip)
12843(7): lea 0x3616(%rip),%rax
1284a(4): mov %rax,0x78(%rbx)
1284e(4): cmp $0x0,(%rbx)
12852(6): jz 0x544(%rip)
12858(5): cmp $0x0,0x40(%rbx)
1285d(6): jz 0x539(%rip)
12863(5): mov 0x18(%rsp),%rax
12868(8): lea 0x80(%rsp),%rbp
12870(5): mov $0x12,%ecx
12875(8): mov $0x0,0x4c(%rsp)
1287d(4): lea 0x8(%rbp),%r8
12881(5): and $0x400000,%eax
12886(5): mov %rax,0x20(%rsp)
1288b(5): mov 0x8(%rsp),%rax
12890(3): setnz %dl
12893(3): mov %r8,%rdi
12896(4): mov 0x28(%rax),%rsi
1289a(2): xor %eax,%eax
1289c(3): REP stosd %rax,rdi(%es,10)
1289f(5): mov 0x10(%rsp),%rax
128a4(4): mov (%rsp),%rdi
128a8(3): test %rsi,%rsi
128ab(7): mov %dl,0x108(%rsp)
128b2(6): mov 0xb4(%rbx),%ecx
128b8(4): setnz %r12b
128bc(8): mov %rsi,0xf8(%rsp)
128c4(8): mov %rax,0x80(%rsp)
128cc(7): movzx 0xb0(%rbx),%eax
128d3(3): or %edx,%r12d
128d6(8): mov %rdi,0xd8(%rsp)
128de(8): mov %rdi,0xd0(%rsp)
128e6(3): mov %r12d,%esi
128e9(8): mov %r12b,0x10b(%rsp)
128f1(7): mov %ecx,0x110(%rsp)
128f8(8): mov %rdi,0xe8(%rsp)
12900(8): mov %rdi,0xe0(%rsp)
12908(2): mov %eax,%edx
1290a(3): shr $0x3,%al
1290d(3): shr $0x2,%dl
12910(3): and $0x1,%eax
12913(3): and $0x1,%edx
12916(3): test %rdi,%rdi
12919(7): mov %al,0x10a(%rsp)
12920(7): mov %dl,0x109(%rsp)
12927(6): jnz 0x43e(%rip)
1292d(3): test %sil,%sil
12930(2): jz 0xf(%rip)
12932(8): mov 0x88(%rsp),%rax
1293a(5): mov %rax,0x10(%rsp)
1293f(6): cmp $0x0,0x20(%rsp)
12945(5): mov 0x10(%rsp),%rax
1294a(8): mov %rax,0x88(%rsp)
12952(6): jz 0x103(%rip)
12958(3): cmp $0x1,%ecx
1295b(6): jle 0xbf2(%rip)
12961(3): mov %rbp,%rdi
12964(5): call 0xffff409c(%rip)
12969(2): test %eax,%eax
1296b(2): jnz 0x45(%rip)
1296d(4): mov (%rsp),%rax
12971(8): cmp 0xb8(%rsp),%rax
12979(6): jle 0xbb7(%rip)
1297f(7): movsxd 0xb4(%rbx),%rax
12986(8): mov 0xc0(%rsp),%rsi
1298e(8): add 0xb0(%rsp),%rax
12996(3): cmp %rax,%rsi
12999(6): jnle 0xb97(%rip)
1299f(3): add %rsi,%rsi
129a2(3): mov %rbp,%rdi
129a5(5): call 0xffff3aeb(%rip)
129aa(2): test %eax,%eax
129ac(2): jz 0xffffffb5(%rip)
129ae(2): nop 
129b0(4): mov %eax,0x4c(%rsp)
129b4(5): mov 0x8(%rsp),%rax
129b9(3): mov (%rax),%r13
129bc(4): mov 0x70(%r13),%rdi
129c0(3): test %rdi,%rdi
129c3(2): jz 0x15(%rip)
129c5(3): nop (%rax)
129c8(3): mov (%rdi),%r12
129cb(5): call 0xfffeef05(%rip)
129d0(3): test %r12,%r12
129d3(3): mov %r12,%rdi
129d6(2): jnz 0xfffffff2(%rip)
129d8(4): mov 0x20(%r13),%rdi
129dc(8): mov $0x0,0x70(%r13)
129e4(b): mov $0xf,0x80(%r13)
129ef(8): mov $0x0,0x68(%r13)
129f7(5): call 0xfffeeed9(%rip)
129fc(8): mov $0x0,0x20(%r13)
12a04(3): mov %rbp,%rdi
12a07(5): call 0xffff4dc9(%rip)
12a0c(3): mov %rbx,%rdi
12a0f(5): call 0xffff4e01(%rip)
12a14(5): mov 0x8(%rsp),%rax
12a19(7): mov $0x0,(%rax)
12a20(8): mov $0x0,0x8(%rax)
12a28(4): mov 0x4c(%rsp),%eax
12a2c(8): mov 0x118(%rsp),%rbx
12a34(9): xor $0x28,%rbx
12a3d(6): jnz 0xd43(%rip)
12a43(7): add $0x128,%rsp
12a4a(1): pop %rbx
12a4b(1): pop %rbp
12a4c(2): pop %r12
12a4e(2): pop %r13
12a50(2): pop %r14
12a52(2): pop %r15
12a54(1): ret near (%rsp)
12a55(3): cmp $0x1,%ecx
12a58(6): jnle 0x9b2(%rip)
12a5e(3): test %r12b,%r12b
12a61(8): mov 0xc0(%rsp),%rsi
12a69(6): jz 0x61b(%rip)
12a6f(8): cmp %rsi,0xd8(%rsp)
12a77(8): mov 0xb0(%rsp),%rax
12a7f(9): cmovng 0xd8(%rsp),%rsi
12a88(3): cmp %rax,%rsi
12a8b(2): jnle 0x12(%rip)
12a8d(2): jmp 0x43(%rip)
12a8f(1): nop 
12a90(8): mov 0x88(%rsp),%rdx
12a98(5): mov %rdx,0x10(%rsp)
12a9d(8): mov 0x80(%rsp),%rdx
12aa5(8): mov 0xf8(%rsp),%rcx
12aad(3): add %rax,%rdx
12ab0(8): add 0xa8(%rsp),%rdx
12ab8(3): movzx (%rdx),%edx
12abb(4): movzx 0x0(%rcx,%rdx,1),%edx
12abf(5): mov 0x10(%rsp),%rcx
12ac4(3): mov %dl,0x0(%rcx,%rax,1)
12ac7(4): add $0x1,%rax
12acb(3): cmp %rax,%rsi
12ace(2): jnz 0xffffffc2(%rip)
12ad0(8): mov %rax,0xb0(%rsp)
12ad8(8): mov %rax,0xb8(%rsp)
12ae0(8): mov $0x0,0x4c(%rsp)
12ae8(5): mov 0x8(%rsp),%r12
12aed(5): mov 0x18(%rsp),%r14
12af2(5): lea 0x50(%rsp),%r13
12af7(3): mov %rbp,%rsi
12afa(3): mov %r13,%rdi
12afd(5): mov %r13,0x28(%rsp)
12b02(4): mov (%r12),%r15
12b06(3): mov %r14,%rdx
12b09(9): mov $0x0,0x30(%r12)
12b12(7): or $0x800000,%rdx
12b19(7): mov %r14,0xd8(%r15)
12b20(5): call 0xffffdbc0(%rip)
12b25(5): lea 0x4c(%rsp),%r9
12b2a(3): xor %r8d,%r8d
12b2d(3): mov %r14,%rcx
12b30(3): mov %r13,%rdx
12b33(3): mov %r12,%rsi
12b36(3): mov %rbp,%rdi
12b39(2): cwde 
12b3b(8): add %rax,0xc8(%rsp)
12b43(5): call 0xfffff9cd(%rip)
12b48(4): mov 0x4c(%rsp),%ecx
12b4c(2): test %ecx,%ecx
12b4e(6): jnz 0xa29(%rip)
12b54(4): lea 0x70(%r15),%r13
12b58(5): lea 0x60(%rsp),%r12
12b5d(4): sub $0xffffff80,%r15
12b61(2): xor %edx,%edx
12b63(2): xor %ecx,%ecx
12b65(3): mov %r15,%rsi
12b68(3): mov %r12,%r8
12b6b(3): mov %r13,%rdi
12b6e(4): mov %rax,(%rsp)
12b72(5): mov $0x2,0x68(%rsp)
12b77(5): call 0xffff5c29(%rip)
12b7c(4): mov (%rsp),%r9
12b80(3): mov %rax,%r11
12b83(3): mov %rax,%rdx
12b86(3): test %r9,%r9
12b89(2): jz 0x29(%rip)
12b8b(3): mov %r11,%rcx
12b8e(3): mov %r9,%rdx
12b91(3): mov %r12,%r8
12b94(3): mov %r15,%rsi
12b97(3): mov %r13,%rdi
12b9a(4): mov %r11,(%rsp)
12b9e(5): mov $0x10,0x68(%rsp)
12ba3(5): call 0xffff5bfd(%rip)
12ba8(4): mov (%rsp),%r11
12bac(3): mov %r11,%rdx
12baf(3): mov %rax,%r11
12bb2(3): test %rdx,%rdx
12bb5(5): mov 0x8(%rsp),%rcx
12bba(3): setz %dl
12bbd(3): test %r11,%r11
12bc0(3): setz %al
12bc3(2): or %al,%dl
12bc5(3): mov (%rcx),%r13
12bc8(6): jnz 0x99a(%rip)
12bce(4): mov 0x8(%r13),%r15
12bd2(4): mov %r11,0x68(%rbx)
12bd6(8): lea 0x0(,%r15,8),%rcx
12bde(4): lea 0x0(%r15,%r15,2),%r15
12be2(3): mov %rcx,%rdi
12be5(4): mov %rcx,(%rsp)
12be9(4): shl/sal $0x3,%r15
12bed(5): call 0xfffeef13(%rip)
12bf2(4): mov (%rsp),%rcx
12bf6(4): mov %rax,0x18(%r13)
12bfa(5): mov %rax,0x18(%rsp)
12bff(3): mov %rcx,%rdi
12c02(5): call 0xfffeeefe(%rip)
12c07(3): mov %r15,%rdi
12c0a(4): mov %rax,0x20(%r13)
12c0e(5): mov %rax,0x10(%rsp)
12c13(5): call 0xfffeeeed(%rip)
12c18(3): mov %r15,%rdi
12c1b(4): mov %rax,0x28(%r13)
12c1f(4): mov %rax,(%rsp)
12c23(5): call 0xfffeeedd(%rip)
12c28(5): mov 0x18(%rsp),%rdx
12c2d(4): mov %rax,0x30(%r13)
12c31(4): mov (%rsp),%rsi
12c35(5): mov 0x10(%rsp),%rcx
12c3a(3): test %rdx,%rdx
12c3d(6): jz 0x7c0(%rip)
12c43(3): test %rcx,%rcx
12c46(6): jz 0x7b7(%rip)
12c4c(3): test %rsi,%rsi
12c4f(6): jz 0x7ae(%rip)
12c55(3): test %rax,%rax
12c58(6): jz 0x7a5(%rip)
12c5e(5): mov 0x8(%rsp),%rax
12c63(4): mov 0x30(%rax),%r15
12c67(8): lea 0x0(,%r15,8),%rdi
12c6f(5): call 0xfffeee91(%rip)
12c74(3): test %rax,%rax
12c77(7): mov %rax,0xe0(%r13)
12c7e(2): jz 0x6f(%rip)
12c80(3): test %r15,%r15
12c83(2): jz 0x1a(%rip)
12c85(2): xor %edx,%edx
12c87(9): nop 0x0(%rax,%rax,1)
12c90(4): mov %rdx,0x0(%rax,%rdx,8)
12c94(4): add $0x1,%rdx
12c98(3): cmp %r15,%rdx
12c9b(2): jnz 0xfffffff5(%rip)
12c9d(4): mov 0x68(%r13),%rdi
12ca1(7): lea 0xffff4ff8(%rip),%rsi
12ca8(3): mov %r13,%rdx
12cab(5): call 0xffff3785(%rip)
12cb0(5): mov 0x8(%rsp),%rax
12cb5(7): mov 0xe0(%r13),%rdi
12cbc(4): mov 0x30(%rax),%rdx
12cc0(3): test %rdx,%rdx
12cc3(6): jz 0x8f1(%rip)
12cc9(3): mov (%rdi),%rax
12ccc(3): test %rax,%rax
12ccf(2): jz 0xf(%rip)
12cd1(2): jmp 0x1c(%rip)
12cd3(5): nop 0x0(%rax,%rax,1)
12cd8(4): cmp %rax,0x0(%rdi,%rax,8)
12cdc(2): jnz 0x11(%rip)
12cde(4): add $0x1,%rax
12ce2(3): cmp %rax,%rdx
12ce5(2): jnbe 0xfffffff3(%rip)
12ce7(6): jz 0x8cd(%rip)
12ced(4): mov 0x68(%r13),%rdi
12cf1(5): mov 0x8(%rsp),%rdx
12cf6(7): lea 0xffff5ea3(%rip),%rsi
12cfd(5): call 0xffff36c3(%rip)
12d02(2): test %eax,%eax
12d04(6): jnz 0xfffffcac(%rip)
12d0a(4): mov 0x68(%r13),%rdi
12d0e(7): lea 0xffff83fb(%rip),%rsi
12d15(3): mov %r13,%rdx
12d18(5): call 0xffff36a8(%rip)
12d1d(2): test %eax,%eax
12d1f(6): jnz 0xfffffc91(%rip)
12d25(4): mov 0x68(%r13),%rdi
12d29(7): lea 0xffff5000(%rip),%rsi
12d30(3): mov %r13,%rdx
12d33(5): call 0xffff36fd(%rip)
12d38(4): mov 0x68(%r13),%rdx
12d3c(7): lea 0x3025(%rip),%rsi
12d43(5): nop 0x0(%rax,%rax,1)
12d48(4): movzx 0x30(%rdx),%ecx
12d4c(4): mov 0x38(%rdx),%rdi
12d50(3): cmp $0x10,%cl
12d53(6): jnbe 0xd5(%rip)
12d59(3): movzx %cl,%eax
12d5c(4): movsxd 0x0(%rsi,%rax,4),%rax
12d60(3): add %rsi,%rax
12d63(2): jmp %rax
12d65(5): mov 0x28(%rsp),%rsi
12d6a(3): mov %rbp,%rdi
12d6d(5): call 0xffff3723(%rip)
12d72(2): test %eax,%eax
12d74(6): jnz 0xfffffc3c(%rip)
12d7a(8): movzx 0x10b(%rsp),%esi
12d82(6): mov 0xb4(%rbx),%ecx
12d88(3): test %sil,%sil
12d8b(6): jz 0xfffffbb4(%rip)
12d91(5): jmp 0xfffffba1(%rip)
12d96(8): mov $0xc,0x4c(%rsp)
12d9e(5): jmp 0xfffffc6e(%rip)
12da3(5): mov $0x1,%esi
12da8(5): mov $0x20,%edi
12dad(5): call 0xfffeed03(%rip)
12db2(3): test %rax,%rax
12db5(4): mov %rax,0x78(%rbx)
12db9(2): jz 0xffffffdd(%rip)
12dbb(3): xor %r12d,%r12d
12dbe(2): xor %ebp,%ebp
12dc0(6): mov $0x1,%r13d
12dc6(3): xor %r15d,%r15d
12dc9(7): nop 0x0(%rax)
12dd0(5): lea 0x0(%rbp,%r15,1),%r14d
12dd5(3): mov %r14d,%edi
12dd8(5): call 0xfffeedb8(%rip)
12ddd(3): cmp $0xff,%eax
12de0(2): jz 0x15(%rip)
12de2(4): mov 0x78(%rbx),%rsi
12de6(3): mov %r13,%rdi
12de9(3): mov %r15d,%ecx
12dec(3): shl/sal %cl,%rdi
12def(3): add %r12,%rsi
12df2(3): or %rdi,(%rsi)
12df5(7): test $0xffffff80,%r14d
12dfc(2): jnz 0xe(%rip)
12dfe(3): cmp %r14d,%eax
12e01(2): jz 0x9(%rip)
12e03(7): or $0x8,0xb0(%rbx)
12e0a(4): add $0x1,%r15
12e0e(4): cmp $0x40,%r15
12e12(2): jnz 0xffffffbe(%rip)
12e14(3): add $0x40,%ebp
12e17(4): add $0x8,%r12
12e1b(6): cmp $0x100,%ebp
12e21(2): jnz 0xffffffa5(%rip)
12e23(5): jmp 0xfffffa2b(%rip)
12e28(3): and $0x8,%ecx
12e2b(6): jnz 0x917(%rip)
12e31(4): mov 0x20(%rdx),%rax
12e35(4): mov 0x38(%rax),%rcx
12e39(4): mov 0x18(%r13),%rax
12e3d(4): mov %rcx,0x0(%rax,%rdi,8)
12e41(4): mov 0x8(%rdx),%r15
12e45(2): xor %edi,%edi
12e47(3): test %r15,%r15
12e4a(2): jz 0x11(%rip)
12e4c(3): mov %r15,%rdx
12e4f(5): jmp 0xfffffef9(%rip)
12e54(4): nop 0x0(%rax)
12e58(3): mov %rax,%rdx
12e5b(4): mov 0x10(%rdx),%r15
12e5f(3): test %r15,%r15
12e62(3): setz %cl
12e65(3): cmp %rdi,%r15
12e68(3): setz %al
12e6b(2): or %al,%cl
12e6d(4): mov %cl,0x10(%rsp)
12e71(2): jz 0xffffffdb(%rip)
12e73(3): mov (%rdx),%rax
12e76(3): mov %rdx,%rdi
12e79(3): test %rax,%rax
12e7c(2): jnz 0xffffffdc(%rip)
12e7e(3): xor %r14d,%r14d
12e81(3): xor %r15d,%r15d
12e84(4): nop 0x0(%rax)
12e88(4): mov 0x10(%r13),%rdx
12e8c(3): cmp %r15,%rdx
12e8f(2): jz 0x27(%rip)
12e91(4): lea 0x0(%r15,%r15,2),%r10
12e95(4): mov 0x30(%r13),%rax
12e99(4): shl/sal $0x3,%r10
12e9d(6): cmp $0x0,0x8(%rax,%r10,1)
12ea3(6): jz 0x205(%rip)
12ea9(4): mov 0x10(%r13),%rdx
12ead(4): add $0x1,%r15
12eb1(3): cmp %r15,%rdx
12eb4(2): jnz 0xffffffdd(%rip)
12eb6(3): test %r14b,%r14b
12eb9(6): jz 0x245(%rip)
12ebf(3): xor %r14d,%r14d
12ec2(3): xor %r15d,%r15d
12ec5(2): jmp 0xffffffcc(%rip)
12ec7(8): or $0x1,0xb0(%r13)
12ecf(4): mov 0x8(%rdx),%r15
12ed3(3): test %r15,%r15
12ed6(6): jz 0x613(%rip)
12edc(4): mov 0x18(%r15),%rax
12ee0(4): mov 0x38(%rax),%rcx
12ee4(4): mov 0x10(%rdx),%rax
12ee8(3): test %rax,%rax
12eeb(6): jz 0x5f1(%rip)
12ef1(4): mov 0x18(%rax),%rax
12ef5(4): mov 0x38(%rax),%r9
12ef9(3): test %rcx,%rcx
12efc(6): js 0x865(%rip)
12f02(3): test %r9,%r9
12f05(6): js 0x81e(%rip)
12f0b(4): mov 0x28(%r13),%rax
12f0f(4): lea 0x0(%rdi,%rdi,2),%rdi
12f13(5): mov %rsi,0x38(%rsp)
12f18(5): mov %r9,0x30(%rsp)
12f1d(5): mov %rcx,0x18(%rsp)
12f22(5): mov %rdx,0x10(%rsp)
12f27(4): lea 0x0(%rax,%rdi,8),%r10
12f2b(5): mov $0x10,%edi
12f30(7): mov $0x2,(%r10)
12f37(4): mov %r10,(%rsp)
12f3b(5): call 0xfffeebc5(%rip)
12f40(4): mov (%rsp),%r10
12f44(3): test %rax,%rax
12f47(5): mov 0x10(%rsp),%rdx
12f4c(5): mov 0x18(%rsp),%rcx
12f51(5): mov 0x30(%rsp),%r9
12f56(5): mov 0x38(%rsp),%rsi
12f5b(4): mov %rax,0x10(%r10)
12f5f(6): jz 0x29b(%rip)
12f65(3): cmp %r9,%rcx
12f68(6): jz 0x5d5(%rip)
12f6e(8): mov $0x2,0x8(%r10)
12f76(6): jl 0x5ae(%rip)
12f7c(3): mov %r9,(%rax)
12f7f(4): mov %rcx,0x8(%rax)
12f83(5): jmp 0xfffffec2(%rip)
12f88(4): mov 0x20(%rdx),%rax
12f8c(4): lea 0x0(%rdi,%rdi,2),%rcx
12f90(5): mov $0x8,%edi
12f95(5): mov %rsi,0x10(%rsp)
12f9a(4): mov %rdx,(%rsp)
12f9e(4): mov 0x38(%rax),%r14
12fa2(4): mov 0x28(%r13),%rax
12fa6(4): lea 0x0(%rax,%rcx,8),%r15
12faa(7): mov $0x1,(%r15)
12fb1(8): mov $0x1,0x8(%r15)
12fb9(5): call 0xfffeeb47(%rip)
12fbe(3): test %rax,%rax
12fc1(4): mov %rax,0x10(%r15)
12fc5(4): mov (%rsp),%rdx
12fc9(5): mov 0x10(%rsp),%rsi
12fce(6): jz 0x6aa(%rip)
12fd4(3): mov %r14,(%rax)
12fd7(4): mov 0x8(%rdx),%r15
12fdb(5): jmp 0xfffffe6a(%rip)
12fe0(5): cmp $0x0,0x20(%rdx)
12fe5(6): jz 0xfffffe5c(%rip)
12feb(7): lea 0x2e2e(%rip),%rcx
12ff2(7): lea 0x2857(%rip),%rsi
12ff9(7): lea 0x28f8(%rip),%rdi
13000(5): mov $0x59f,%edx
13005(5): call 0xfffeea4b(%rip)
1300a(6): nop 0x0(%rax,%rax,1)
13010(4): mov 0x20(%rdx),%rax
13014(4): mov 0x38(%rax),%r15
13018(4): mov 0x18(%r13),%rax
1301c(4): mov %r15,0x0(%rax,%rdi,8)
13020(4): cmp $0x4,0x30(%rdx)
13024(6): jnz 0xfffffe1d(%rip)
1302a(4): mov 0x28(%r13),%rax
1302e(4): lea 0x0(%rdi,%rdi,2),%rcx
13032(5): mov $0x8,%edi
13037(5): mov %rsi,0x18(%rsp)
1303c(5): mov %rdx,0x10(%rsp)
13041(4): lea 0x0(%rax,%rcx,8),%rcx
13045(7): mov $0x1,(%rcx)
1304c(8): mov $0x1,0x8(%rcx)
13054(4): mov %rcx,(%rsp)
13058(5): call 0xfffeeaa8(%rip)
1305d(4): mov (%rsp),%rcx
13061(3): test %rax,%rax
13064(5): mov 0x10(%rsp),%rdx
13069(5): mov 0x18(%rsp),%rsi
1306e(4): mov %rax,0x10(%rcx)
13072(6): jz 0x64e(%rip)
13078(3): mov %r15,(%rax)
1307b(4): mov 0x8(%rdx),%r15
1307f(5): jmp 0xfffffdc6(%rip)
13084(8): mov %rsi,0xb0(%rsp)
1308c(8): mov %rsi,0xb8(%rsp)
13094(8): mov $0x0,0x4c(%rsp)
1309c(5): jmp 0xfffffa4c(%rip)
130a1(7): nop 0x0(%rax)
130a8(5): mov $0x1,%ecx
130ad(3): mov %r15,%rdx
130b0(3): mov %r13,%rsi
130b3(3): mov %r12,%rdi
130b6(4): mov %r10,(%rsp)
130ba(5): call 0xffff5126(%rip)
130bf(2): test %eax,%eax
130c1(6): jnz 0xfffff8ef(%rip)
130c7(4): mov 0x30(%r13),%rax
130cb(4): mov (%rsp),%r10
130cf(4): add $0x1,%r15
130d3(6): cmp $0x0,0x8(%rax,%r10,1)
130d9(6): jnz 0xfffffdaf(%rip)
130df(5): mov 0x70(%rsp),%rdi
130e4(5): call 0xfffee7ec(%rip)
130e9(4): cmp %r15,0x10(%r13)
130ed(6): jz 0xfffffdd2(%rip)
130f3(6): movzx 0x10(%rsp),%r14d
130f9(5): jmp 0xfffffd98(%rip)
130fe(5): mov 0x8(%rsp),%rax
13103(4): test $0x10,0x38(%rax)
13107(2): jnz 0x13(%rip)
13109(5): cmp $0x0,0x30(%rax)
1310e(2): jz 0xc(%rip)
13110(8): test $0x1,0xb0(%r13)
13118(2): jnz 0x10(%rip)
1311a(8): cmp $0x0,0x98(%r13)
13122(6): jz 0xf9(%rip)
13128(4): lea 0x0(%rdx,%rdx,2),%rdi
1312c(4): mov %rdx,(%rsp)
13130(4): shl/sal $0x3,%rdi
13134(5): call 0xfffee9cc(%rip)
13139(3): test %rax,%rax
1313c(4): mov %rax,0x38(%r13)
13140(6): jz 0x54c(%rip)
13146(4): mov (%rsp),%rdx
1314a(2): xor %esi,%esi
1314c(2): xor %ecx,%ecx
1314e(3): test %rdx,%rdx
13151(2): jnz 0x13(%rip)
13153(5): jmp 0xc8(%rip)
13158(8): nop 0x0(%rax,%rax,1)
13160(4): mov 0x38(%r13),%rax
13164(4): pxor %xmm0,%xmm0
13168(3): add %rsi,%rax
1316b(4): add $0x1,%rcx
1316f(8): mov $0x0,0x10(%rax)
13177(4): add $0x18,%rsi
1317b(3): movups %xmm0,(%rax)
1317e(4): mov 0x10(%r13),%rax
13182(3): cmp %rax,%rcx
13185(2): jb 0xffffffdb(%rip)
13187(3): test %rax,%rax
1318a(6): jz 0x91(%rip)
13190(4): mov 0x30(%r13),%rax
13194(9): mov $0x0,0x18(%rsp)
1319d(9): mov $0x0,0x10(%rsp)
131a6(5): mov 0x18(%rsp),%rcx
131ab(4): lea 0x0(%rax,%rcx,1),%rdx
131af(5): cmp $0x0,0x8(%rdx)
131b4(4): mov 0x10(%rdx),%rcx
131b8(2): jle 0x4c(%rip)
131ba(3): xor %r15d,%r15d
131bd(2): jmp 0x1b(%rip)
131bf(1): nop 
131c0(4): mov 0x30(%r13),%rax
131c4(5): mov 0x18(%rsp),%rdx
131c9(4): add $0x1,%r15
131cd(4): mov (%rsp),%rcx
131d1(5): cmp 0x8(%rax,%rdx,1),%r15
131d6(2): jnl 0x2e(%rip)
131d8(4): mov 0x0(%rcx,%r15,8),%rax
131dc(4): mov %rcx,(%rsp)
131e0(4): lea 0x0(%rax,%rax,2),%rsi
131e4(4): mov 0x38(%r13),%rax
131e8(4): lea 0x0(%rax,%rsi,8),%rdi
131ec(5): mov 0x10(%rsp),%rsi
131f1(5): call 0xffff333f(%rip)
131f6(2): test %al,%al
131f8(2): jnz 0xffffffc8(%rip)
131fa(5): mov $0xc,%eax
131ff(5): jmp 0xfffff7b1(%rip)
13204(6): add $0x1,0x10(%rsp)
1320a(6): add $0x18,0x18(%rsp)
13210(5): mov 0x10(%rsp),%rdx
13215(4): cmp 0x10(%r13),%rdx
13219(2): jb 0xffffff8d(%rip)
1321b(7): movzx 0xb0(%rbx),%eax
13222(8): mov $0x0,0x4c(%rsp)
1322a(3): shr $0x2,%al
1322d(6): cmp $0x0,0x20(%rsp)
13233(3): setz %dl
13236(2): and %dl,%al
13238(6): jnz 0x1e7(%rip)
1323e(4): mov 0x68(%rbx),%rax
13242(3): mov %r12,%rdi
13245(4): mov 0x18(%rax),%rax
13249(4): mov 0x38(%rax),%rax
1324d(4): lea 0x0(%rax,%rax,2),%rdx
13251(7): mov %rax,0x90(%rbx)
13258(4): mov 0x30(%rbx),%rax
1325c(4): lea 0x0(%rax,%rdx,8),%rsi
13260(5): call 0xffff59e0(%rip)
13265(2): test %eax,%eax
13267(3): mov %eax,%r15d
1326a(4): mov %eax,0x50(%rsp)
1326e(6): jnz 0x121(%rip)
13274(8): cmp $0x0,0x98(%rbx)
1327c(6): jle 0xd4(%rip)
13282(5): mov 0x68(%rsp),%r9
13287(3): test %r9,%r9
1328a(6): jle 0xc6(%rip)
13290(3): xor %r10d,%r10d
13293(5): lea 0x10(%r12),%r13
13298(2): jmp 0x15(%rip)
1329a(6): nop 0x0(%rax,%rax,1)
132a0(4): add $0x1,%r10
132a4(3): cmp %r10,%r9
132a7(6): jle 0xa9(%rip)
132ad(5): mov 0x70(%rsp),%rcx
132b2(3): mov (%rbx),%rsi
132b5(4): mov 0x0(%rcx,%r10,8),%r8
132b9(3): mov %r8,%rdi
132bc(4): shl/sal $0x4,%rdi
132c0(3): add %rsi,%rdi
132c3(4): cmp $0x4,0x8(%rdi)
132c7(2): jnz 0xffffffd9(%rip)
132c9(2): xor %edx,%edx
132cb(2): jmp 0xe(%rip)
132cd(3): nop (%rax)
132d0(4): add $0x1,%rdx
132d4(3): cmp %rdx,%r9
132d7(2): jz 0xffffffc9(%rip)
132d9(4): mov 0x0(%rcx,%rdx,8),%rax
132dd(4): shl/sal $0x4,%rax
132e1(3): add %rsi,%rax
132e4(4): cmp $0x9,0x8(%rax)
132e8(2): jnz 0xffffffe8(%rip)
132ea(3): mov (%rdi),%r11
132ed(3): cmp %r11,(%rax)
132f0(2): jnz 0xffffffe0(%rip)
132f2(4): mov 0x28(%rbx),%rdx
132f6(4): lea 0x0(%r8,%r8,2),%rax
132fa(3): mov %r13,%rsi
132fd(3): mov %r9,%rdi
13300(4): lea 0x0(%rdx,%rax,8),%rax
13304(4): mov 0x10(%rax),%rax
13308(3): mov (%rax),%r11
1330b(3): mov %r11,%rdx
1330e(5): call 0xffff47d2(%rip)
13313(3): test %rax,%rax
13316(2): jnz 0xffffff8a(%rip)
13318(4): mov 0x30(%rbx),%rax
1331c(4): lea 0x0(%r11,%r11,2),%rdx
13320(3): mov %r12,%rdi
13323(4): lea 0x0(%rax,%rdx,8),%rsi
13327(5): call 0xffff4cd9(%rip)
1332c(2): test %eax,%eax
1332e(6): jnz 0x342(%rip)
13334(5): mov 0x68(%rsp),%r9
13339(6): mov $0x1,%r10d
1333f(3): cmp %r10,%r9
13342(6): jnle 0xffffff6b(%rip)
13348(8): nop 0x0(%rax,%rax,1)
13350(5): mov 0x28(%rsp),%rdi
13355(2): xor %ecx,%ecx
13357(3): mov %r12,%rdx
1335a(3): mov %rbx,%rsi
1335d(5): call 0xffff5ad3(%rip)
13362(3): test %rax,%rax
13365(4): mov %rax,0x48(%rbx)
13369(6): jz 0x169(%rip)
1336f(4): cmp $0x0,0x68(%rax)
13373(6): js 0xfe(%rip)
13379(4): mov %rax,0x60(%rbx)
1337d(4): mov %rax,0x58(%rbx)
13381(4): mov %rax,0x50(%rbx)
13385(5): mov 0x70(%rsp),%rdi
1338a(5): call 0xfffee546(%rip)
1338f(5): mov 0x8(%rsp),%rax
13394(5): mov %r15d,0x4c(%rsp)
13399(3): mov (%rax),%r13
1339c(4): mov 0x70(%r13),%rdi
133a0(3): test %rdi,%rdi
133a3(2): jz 0x15(%rip)
133a5(3): nop (%rax)
133a8(3): mov (%rdi),%r12
133ab(5): call 0xfffee525(%rip)
133b0(3): test %r12,%r12
133b3(3): mov %r12,%rdi
133b6(2): jnz 0xfffffff2(%rip)
133b8(4): mov 0x20(%r13),%rdi
133bc(8): mov $0x0,0x70(%r13)
133c4(b): mov $0xf,0x80(%r13)
133cf(8): mov $0x0,0x68(%r13)
133d7(5): call 0xfffee4f9(%rip)
133dc(8): mov $0x0,0x20(%r13)
133e4(3): mov %rbp,%rdi
133e7(5): call 0xffff43e9(%rip)
133ec(4): mov 0x4c(%rsp),%eax
133f0(2): test %eax,%eax
133f2(6): jz 0xfffff63a(%rip)
133f8(5): jmp 0xfffff614(%rip)
133fd(8): mov $0xc,0x4c(%rsp)
13405(5): jmp 0xfffff5b7(%rip)
1340a(3): mov %rbp,%rdi
1340d(5): call 0xffff3423(%rip)
13412(8): mov $0x0,0x4c(%rsp)
1341a(5): jmp 0xfffff6ce(%rip)
1341f(5): mov 0x8(%rsp),%rcx
13424(5): cmp $0x0,0x28(%rcx)
13429(6): jnz 0xfffffe15(%rip)
1342f(4): mov 0x10(%rbx),%r10
13433(3): test %r10,%r10
13436(6): jz 0x2b4(%rip)
1343c(3): mov (%rbx),%rsi
1343f(7): lea 0x2966(%rip),%r9
13446(3): xor %r8d,%r8d
13449(2): xor %edx,%edx
1344b(3): mov %rsi,%rcx
1344e(4): cmp $0xc,0x8(%rcx)
13452(6): jnbe 0x2cc(%rip)
13458(4): movzx 0x8(%rcx),%edi
1345c(4): movsxd 0x0(%r9,%rdi,4),%rdi
13460(3): add %r9,%rdi
13463(2): jmp %rdi
13465(2): xor %ebp,%ebp
13467(5): mov $0x1,%esi
1346c(5): jmp 0xfffff331(%rip)
13471(5): mov 0x28(%rsp),%r14
13476(5): mov $0x1,%ecx
1347b(3): mov %r12,%rdx
1347e(3): mov %rbx,%rsi
13481(3): mov %r14,%rdi
13484(5): call 0xffff59ac(%rip)
13489(5): mov $0x2,%ecx
1348e(3): mov %r12,%rdx
13491(3): mov %rbx,%rsi
13494(3): mov %r14,%rdi
13497(4): mov %rax,0x50(%rbx)
1349b(5): call 0xffff5995(%rip)
134a0(5): mov $0x6,%ecx
134a5(4): mov %rax,0x58(%rbx)
134a9(3): mov %r12,%rdx
134ac(3): mov %rbx,%rsi
134af(3): mov %r14,%rdi
134b2(5): call 0xffff597e(%rip)
134b7(5): cmp $0x0,0x50(%rbx)
134bc(4): mov %rax,0x60(%rbx)
134c0(2): jz 0x12(%rip)
134c2(5): cmp $0x0,0x58(%rbx)
134c7(2): jz 0xb(%rip)
134c9(3): test %rax,%rax
134cc(6): jnz 0xfffffeb9(%rip)
134d2(5): mov 0x50(%rsp),%r15d
134d7(5): jmp 0xfffffeb8(%rip)
134dc(4): mov 0x20(%rdx),%rax
134e0(4): mov 0x38(%rax),%r9
134e4(5): jmp 0xfffffa15(%rip)
134e9(4): mov 0x20(%rdx),%rax
134ed(4): mov 0x38(%rax),%rcx
134f1(5): jmp 0xfffff9f3(%rip)
134f6(3): mov %rbx,%rdi
134f9(5): mov $0xe8,%esi
134fe(5): call 0xfffee662(%rip)
13503(3): test %rax,%rax
13506(3): mov %rax,%rbx
13509(6): jz 0x198(%rip)
1350f(5): mov 0x8(%rsp),%rax
13514(8): mov $0xe8,0x8(%rax)
1351c(3): mov %rbx,(%rax)
1351f(5): jmp 0xfffff1e3(%rip)
13524(3): mov %rcx,(%rax)
13527(4): mov %r9,0x8(%rax)
1352b(5): jmp 0xfffff91a(%rip)
13530(8): mov $0x0,0x4c(%rsp)
13538(5): jmp 0xfffff5b0(%rip)
1353d(8): mov $0x1,0x8(%r10)
13545(3): mov %rcx,(%rax)
13548(5): jmp 0xfffff8fd(%rip)
1354d(3): mov %rbp,%rdi
13550(5): call 0xffff3270(%rip)
13555(8): mov $0x0,0x4c(%rsp)
1355d(5): jmp 0xfffff58b(%rip)
13562(8): mov $0xc,0x4c(%rsp)
1356a(8): mov $0x0,0x68(%rbx)
13572(5): jmp 0xfffff44a(%rip)
13577(3): test %rax,%rax
1357a(6): jz 0x131(%rip)
13580(4): lea 0x70(%r15),%r13
13584(5): lea 0x60(%rsp),%r12
13589(4): sub $0xffffff80,%r15
1358d(2): xor %ecx,%ecx
1358f(2): xor %edx,%edx
13591(3): mov %r15,%rsi
13594(3): mov %r12,%r8
13597(3): mov %r13,%rdi
1359a(4): mov %rax,(%rsp)
1359e(5): mov $0x2,0x68(%rsp)
135a3(5): call 0xffff51fd(%rip)
135a8(4): mov (%rsp),%r9
135ac(3): mov %rax,%r11
135af(5): jmp 0xfffff5dc(%rip)
135b4(5): call 0xfffee31c(%rip)
135b9(b): mov $0x0,0xe0(%r13)
135c4(5): jmp 0xfffff729(%rip)
135c9(3): mov %eax,%r8d
135cc(4): add $0x1,%rdx
135d0(4): add $0x10,%rcx
135d4(3): cmp %r10,%rdx
135d7(6): jnz 0xfffffe77(%rip)
135dd(3): or %r8b,%r14b
135e0(6): jz 0x10a(%rip)
135e6(3): mov %rdx,%rax
135e9(4): shl/sal $0x4,%rax
135ed(3): add %rsi,%rax
135f0(2): jmp 0x18(%rip)
135f2(3): cmp $0x5,%dl
135f5(2): jnz 0x6(%rip)
135f7(4): mov $0x7,0x8(%rsi)
135fb(4): add $0x10,%rsi
135ff(3): cmp %rsi,%rax
13602(6): jz 0xe5(%rip)
13608(4): movzx 0x8(%rsi),%edx
1360c(3): cmp $0x1,%dl
1360f(2): jnz 0xffffffe3(%rip)
13611(3): cmp $0x0,(%rsi)
13614(2): jns 0xffffffe7(%rip)
13616(4): and $0xdf,0xa(%rsi)
1361a(2): jmp 0xffffffe1(%rip)
1361c(4): nop 0x0(%rax)
13620(3): cmp $0x0,(%rcx)
13623(4): cmovs %eax,%r14d
13627(2): jmp 0xffffffa5(%rip)
13629(2): mov (%rcx),%edi
1362b(3): cmp $0x20,%edi
1362e(2): jz 0xffffff9e(%rip)
13630(6): jbe 0xa9(%rip)
13636(3): cmp $0x40,%edi
13639(2): jz 0xffffff93(%rip)
1363b(3): add $0x80,%edi
1363e(2): jz 0xffffff8e(%rip)
13640(5): jmp 0xfffffbfe(%rip)
13645(3): nop (%rax)
13648(3): mov (%rcx),%rdi
1364b(5): cmp $0x0,0x10(%rdi)
13650(6): jnz 0xfffffbee(%rip)
13656(5): cmp $0x0,0x18(%rdi)
1365b(6): jz 0xffffff71(%rip)
13661(5): jmp 0xfffffbdd(%rip)
13666(a): nop 0x0(%rax,%rax,1)
13670(3): mov %eax,%r15d
13673(5): jmp 0xfffffd1c(%rip)
13678(8): mov $0x0,0x8(%r15)
13680(7): mov $0x0,(%r15)
13687(5): jmp 0xfffffb73(%rip)
1368c(5): mov 0x8(%rsp),%rax
13691(8): mov $0xc,0x4c(%rsp)
13699(3): mov (%rax),%r13
1369c(5): jmp 0xfffff320(%rip)
136a1(5): mov $0xc,%eax
136a6(5): jmp 0xfffff386(%rip)
136ab(5): mov 0x8(%rsp),%rax
136b0(8): mov $0x0,0x68(%rbx)
136b8(3): mov (%rax),%r13
136bb(5): jmp 0xfffff301(%rip)
136c0(8): mov $0x0,0x8(%rcx)
136c8(7): mov $0x0,(%rcx)
136cf(5): mov $0xc,%eax
136d4(5): jmp 0xfffff2dc(%rip)
136d9(3): cmp $0x10,%edi
136dc(6): jz 0xfffffef0(%rip)
136e2(5): jmp 0xfffffb5c(%rip)
136e7(3): mov %r8d,%r14d
136ea(8): cmp $0x0,0x98(%rbx)
136f2(7): movzx 0xb0(%rbx),%edx
136f9(a): mov $0x1,0xb4(%rbx)
13703(3): setnle %al
13706(3): and $0xf9,%edx
13709(3): or %r14d,%eax
1370c(3): and $0x1,%eax
1370f(2): add %eax,%eax
13711(2): or %edx,%eax
13713(6): mov %al,0xb0(%rbx)
13719(5): jmp 0xfffffb25(%rip)
1371e(5): call 0xfffee1c2(%rip)
13723(7): lea 0x26f6(%rip),%rcx
1372a(7): lea 0x211f(%rip),%rsi
13731(7): lea 0x21dd(%rip),%rdi
13738(5): mov $0x5b0,%edx
1373d(5): call 0xfffee313(%rip)
13742(7): lea 0x26d7(%rip),%rcx
13749(7): lea 0x2100(%rip),%rsi
13750(7): lea 0x2119(%rip),%rdi
13757(5): mov $0x5c2,%edx
1375c(5): call 0xfffee2f4(%rip)
13761(7): lea 0x26b8(%rip),%rcx
13768(7): lea 0x20e1(%rip),%rsi
1376f(7): lea 0x2195(%rip),%rdi
13776(5): mov $0x5af,%edx
1377b(5): call 0xfffee2d5(%rip)
13780(5): call 0xfffee260(%rip)

"rpl_re_compile_pattern" :
13790(4): sub $0x8,%rsp
13794(7): mov 0x205f3d(%rip),%rcx
1379b(3): mov %rdi,%r8
1379e(3): mov %rdx,%rdi
137a1(3): mov %rcx,%rax
137a4(4): shr $0x19,%rax
137a8(3): and $0x1,%eax
137ab(3): shl/sal $0x4,%eax
137ae(2): mov %eax,%edx
137b0(4): movzx 0x38(%rdi),%eax
137b4(3): and $0xef,%eax
137b7(2): or %edx,%eax
137b9(3): mov %rsi,%rdx
137bc(3): mov %r8,%rsi
137bf(3): or $0x80,%eax
137c2(3): mov %al,0x38(%rdi)
137c5(5): call 0xffffeecb(%rip)
137ca(2): test %eax,%eax
137cc(2): jz 0x2c(%rip)
137ce(7): lea 0x26ab(%rip),%rdx
137d5(2): cwde 
137d7(7): lea 0x2742(%rip),%rsi
137de(2): xor %edi,%edi
137e0(4): add 0x0(%rdx,%rax,8),%rsi
137e4(5): mov $0x5,%edx
137e9(4): add $0x8,%rsp
137ed(5): jmp 0xfffee1c3(%rip)
137f2(6): nop 0x0(%rax,%rax,1)
137f8(2): xor %eax,%eax
137fa(4): add $0x8,%rsp
137fe(1): ret near (%rsp)

"rpl_re_set_syntax" :
13800(7): mov 0x205ed1(%rip),%rax
13807(7): mov %rdi,0x205eca(%rip)
1380e(1): ret near (%rsp)

"rpl_re_compile_fastmap" :
13810(2): push %r12
13812(1): push %rbp
13813(2): xor %eax,%eax
13815(1): push %rbx
13816(4): mov 0x20(%rdi),%rbp
1381a(3): mov %rdi,%rbx
1381d(3): mov (%rdi),%r12
13820(4): lea 0x8(%rbp),%rdi
13824(3): mov %rbp,%rcx
13827(8): mov $0x0,0x0(%rbp)
1382f(b): mov $0x0,0xf8(%rbp)
1383a(4): and $0xfffffff8,%rdi
1383e(3): sub %rdi,%rcx
13841(6): add $0x100,%ecx
13847(3): shr $0x3,%ecx
1384a(3): REP stosd %rax,rdi(%es,10)
1384d(3): mov %rbp,%rcx
13850(3): mov %rbx,%rdi
13853(5): mov 0x48(%r12),%rsi
13858(4): lea 0x18(%rsi),%rdx
1385c(4): add $0x10,%rsi
13860(5): call 0xffff8500(%rip)
13865(5): mov 0x50(%r12),%rax
1386a(5): cmp %rax,0x48(%r12)
1386f(2): jz 0x1a(%rip)
13871(4): lea 0x18(%rax),%rdx
13875(4): lea 0x10(%rax),%rsi
13879(3): mov %rbp,%rcx
1387c(3): mov %rbx,%rdi
1387f(5): call 0xffff84e1(%rip)
13884(5): mov 0x48(%r12),%rax
13889(5): mov 0x58(%r12),%rsi
1388e(3): cmp %rax,%rsi
13891(2): jz 0x1a(%rip)
13893(4): lea 0x18(%rsi),%rdx
13897(3): mov %rbp,%rcx
1389a(4): add $0x10,%rsi
1389e(3): mov %rbx,%rdi
138a1(5): call 0xffff84bf(%rip)
138a6(5): mov 0x48(%r12),%rax
138ab(5): mov 0x60(%r12),%rsi
138b0(3): cmp %rax,%rsi
138b3(2): jz 0x15(%rip)
138b5(4): lea 0x18(%rsi),%rdx
138b9(3): mov %rbp,%rcx
138bc(4): add $0x10,%rsi
138c0(3): mov %rbx,%rdi
138c3(5): call 0xffff849d(%rip)
138c8(4): or $0x8,0x38(%rbx)
138cc(2): xor %eax,%eax
138ce(1): pop %rbx
138cf(1): pop %rbp
138d0(2): pop %r12
138d2(1): ret near (%rsp)

"re_search_stub" :
138e0(2): push %r15
138e2(2): push %r14
138e4(3): mov %r8,%rax
138e7(2): push %r13
138e9(2): push %r12
138eb(3): add %rcx,%r8
138ee(1): push %rbp
138ef(1): push %rbx
138f0(4): sub $0x38,%rsp
138f4(3): test %rcx,%rcx
138f7(4): mov 0x78(%rsp),%ebx
138fb(5): mov 0x70(%rsp),%r12
13900(4): mov %ebx,0x28(%rsp)
13904(6): js 0x33c(%rip)
1390a(3): cmp %rdx,%rcx
1390d(6): jnle 0x333(%rip)
13913(3): cmp %rdx,%r8
13916(3): mov %rcx,%rbx
13919(3): mov %rdi,%r15
1391c(6): jnle 0x284(%rip)
13922(3): test %rax,%rax
13925(2): js 0xb(%rip)
13927(3): cmp %r8,%rcx
1392a(6): jnle 0x276(%rip)
13930(3): test %r8,%r8
13933(6): js 0x2e5(%rip)
13939(3): test %rax,%rax
1393c(2): jns 0xb(%rip)
1393e(3): cmp %r8,%rbx
13941(6): jle 0x2d7(%rip)
13947(5): movzx 0x38(%r15),%eax
1394c(3): mov %eax,%r13d
1394f(4): shr $0x5,%r13b
13953(3): mov %r13d,%edi
13956(3): and $0x3,%edi
13959(3): cmp %rbx,%r8
1395c(4): mov %edi,0x2c(%rsp)
13960(2): jle 0x11(%rip)
13962(5): cmp $0x0,0x20(%r15)
13967(2): jz 0xa(%rip)
13969(2): test $0x8,%al
1396b(6): jz 0x1f5(%rip)
13971(2): test $0x10,%al
13973(6): jnz 0x1cd(%rip)
13979(3): test %r12,%r12
1397c(6): jz 0x1c4(%rip)
13982(3): and $0x6,%eax
13985(4): mov 0x30(%r15),%rcx
13989(2): cmp $0x4,%al
1398b(6): jz 0x195(%rip)
13991(4): lea 0x1(%rcx),%r14
13995(3): mov %r14,%r13
13998(3): mov %r14,%rdi
1399b(4): shl/sal $0x4,%rdi
1399f(5): mov %r9,0x20(%rsp)
139a4(5): mov %rdx,0x18(%rsp)
139a9(5): mov %rsi,0x10(%rsp)
139ae(5): mov %r8,0x8(%rsp)
139b3(5): call 0xfffee14d(%rip)
139b8(3): test %rax,%rax
139bb(3): mov %rax,%rbp
139be(6): jz 0x292(%rip)
139c4(4): sub $0x8,%rsp
139c8(3): mov %rbx,%rcx
139cb(3): mov %r15,%rdi
139ce(4): mov 0x34(%rsp),%eax
139d2(1): push %rax
139d3(1): push %rbp
139d4(2): push %r14
139d6(5): mov 0x40(%rsp),%r9
139db(5): mov 0x28(%rsp),%r8
139e0(5): mov 0x38(%rsp),%rdx
139e5(5): mov 0x30(%rsp),%rsi
139ea(5): call 0xffffab16(%rip)
139ef(4): add $0x20,%rsp
139f3(2): test %eax,%eax
139f5(2): jz 0x33(%rip)
139f7(3): cmp $0x1,%eax
139fa(7): mov $0xffffffff,%r12
13a01(2): jz 0x9(%rip)
13a03(7): mov $0xfffffffe,%r12
13a0a(3): mov %rbp,%rdi
13a0d(5): call 0xfffedec3(%rip)
13a12(4): add $0x38,%rsp
13a16(3): mov %r12,%rax
13a19(1): pop %rbx
13a1a(1): pop %rbp
13a1b(2): pop %r12
13a1d(2): pop %r13
13a1f(2): pop %r14
13a21(2): pop %r15
13a23(1): ret near (%rsp)
13a24(4): nop 0x0(%rax)
13a28(3): test %r12,%r12
13a2b(6): jz 0xcd(%rip)
13a31(5): movzx 0x38(%r15),%eax
13a36(4): lea 0x1(%r13),%rdx
13a3a(2): shr $0x1,%al
13a3c(3): and $0x3,%eax
13a3f(6): jz 0x171(%rip)
13a45(3): cmp $0x1,%eax
13a48(6): jz 0x218(%rip)
13a4e(3): cmp $0x2,%eax
13a51(6): jnz 0x2ef(%rip)
13a57(4): cmp (%r12),%r14
13a5b(6): jnbe 0x2c6(%rip)
13a61(6): mov $0x2,%r9d
13a67(3): test %r13,%r13
13a6a(6): jle 0x26e(%rip)
13a70(5): mov 0x8(%r12),%r8
13a75(5): mov 0x10(%r12),%rdi
13a7a(8): lea 0x0(,%r13,8),%rsi
13a82(3): mov %r13,%rdx
13a85(2): xor %eax,%eax
13a87(9): nop 0x0(%rax,%rax,1)
13a90(5): mov 0x0(%rbp,%rax,2),%rcx
13a95(4): mov %rcx,0x0(%r8,%rax,1)
13a99(5): mov 0x8(%rbp,%rax,2),%rcx
13a9e(4): mov %rcx,0x0(%rdi,%rax,1)
13aa2(4): add $0x8,%rax
13aa6(3): cmp %rax,%rsi
13aa9(2): jnz 0xffffffe7(%rip)
13aab(4): cmp %rdx,(%r12)
13aaf(2): jbe 0x2e(%rip)
13ab1(5): mov 0x10(%r12),%rsi
13ab6(5): mov 0x8(%r12),%rcx
13abb(7): mov $0xffffffff,%rax
13ac2(6): nop 0x0(%rax,%rax,1)
13ac8(4): mov %rax,0x0(%rsi,%rdx,8)
13acc(4): add $0x1,%r13
13ad0(4): mov %rax,0x0(%rcx,%rdx,8)
13ad4(4): cmp (%r12),%r13
13ad8(3): mov %r13,%rdx
13adb(2): jb 0xffffffed(%rip)
13add(5): movzx 0x38(%r15),%eax
13ae2(4): lea 0x0(%r9,%r9,1),%r13d
13ae6(3): and $0xf9,%eax
13ae9(3): or %r13d,%eax
13aec(2): test $0x6,%al
13aee(4): mov %al,0x38(%r15)
13af2(6): jz 0xffffff11(%rip)
13af8(5): cmp $0x0,0x28(%rsp)
13afd(4): mov 0x0(%rbp),%r12
13b01(6): jz 0xffffff09(%rip)
13b07(3): cmp %rbx,%r12
13b0a(6): jnz 0x1f8(%rip)
13b10(4): mov 0x8(%rbp),%r12
13b14(3): sub %rbx,%r12
13b17(5): jmp 0xfffffef3(%rip)
13b1c(4): nop 0x0(%rax)
13b20(4): mov (%r12),%r14
13b24(3): cmp %rcx,%r14
13b27(6): jnbe 0xfffffe6a(%rip)
13b2d(3): test %r14,%r14
13b30(3): mov %r14,%r13
13b33(6): jnle 0xfffffe65(%rip)
13b39(7): nop 0x0(%rax)
13b40(5): mov $0x10,%edi
13b45(6): mov $0x1,%r14d
13b4b(6): mov $0x1,%r13d
13b51(3): xor %r12d,%r12d
13b54(5): jmp 0xfffffe4b(%rip)
13b59(7): nop 0x0(%rax)
13b60(3): mov %r15,%rdi
13b63(5): mov %r9,0x20(%rsp)
13b68(5): mov %rdx,0x18(%rsp)
13b6d(5): mov %rsi,0x10(%rsp)
13b72(5): mov %r8,0x8(%rsp)
13b77(5): call 0xfffffc99(%rip)
13b7c(5): movzx 0x38(%r15),%eax
13b81(5): mov 0x20(%rsp),%r9
13b86(5): mov 0x18(%rsp),%rdx
13b8b(5): mov 0x10(%rsp),%rsi
13b90(5): mov 0x8(%rsp),%r8
13b95(5): jmp 0xfffffddc(%rip)
13b9a(6): nop 0x0(%rax,%rax,1)
13ba0(3): mov %rdx,%r8
13ba3(5): jmp 0xfffffda4(%rip)
13ba8(8): nop 0x0(%rax,%rax,1)
13bb0(8): lea 0x0(,%rdx,8),%r14
13bb8(5): mov %rdx,0x8(%rsp)
13bbd(3): mov %r14,%rdi
13bc0(5): call 0xfffedf40(%rip)
13bc5(3): test %rax,%rax
13bc8(5): mov %rax,0x8(%r12)
13bcd(5): mov 0x8(%rsp),%rdx
13bd2(6): jz 0x118(%rip)
13bd8(3): mov %r14,%rdi
13bdb(5): mov %rdx,0x8(%rsp)
13be0(5): mov %rax,0x10(%rsp)
13be5(5): call 0xfffedf1b(%rip)
13bea(3): test %rax,%rax
13bed(5): mov %rax,0x10(%r12)
13bf2(5): mov 0x8(%rsp),%rdx
13bf7(5): mov 0x10(%rsp),%rcx
13bfc(6): jz 0xe6(%rip)
13c02(4): mov %rdx,(%r12)
13c06(6): mov $0x1,%r9d
13c0c(5): jmp 0xfffffe5b(%rip)
13c11(7): nop 0x0(%rax)
13c18(5): movzx 0x38(%r15),%eax
13c1d(3): xor %r8d,%r8d
13c20(3): mov %eax,%r13d
13c23(4): shr $0x5,%r13b
13c27(3): mov %r13d,%edi
13c2a(3): and $0x3,%edi
13c2d(4): mov %edi,0x2c(%rsp)
13c31(5): jmp 0xfffffd40(%rip)
13c36(a): nop 0x0(%rax,%rax,1)
13c40(7): mov $0xffffffff,%r12
13c47(5): jmp 0xfffffdcb(%rip)
13c4c(4): nop 0x0(%rax)
13c50(7): mov $0xfffffffe,%r12
13c57(5): jmp 0xfffffdbb(%rip)
13c5c(4): nop 0x0(%rax)
13c60(4): cmp %rdx,(%r12)
13c64(6): mov $0x1,%r9d
13c6a(6): jnb 0xfffffdfd(%rip)
13c70(8): lea 0x0(,%rdx,8),%rcx
13c78(5): mov 0x8(%r12),%rdi
13c7d(5): mov %r9b,0x18(%rsp)
13c82(5): mov %rdx,0x10(%rsp)
13c87(3): mov %rcx,%rsi
13c8a(5): mov %rcx,0x8(%rsp)
13c8f(5): call 0xfffeded1(%rip)
13c94(3): test %rax,%rax
13c97(3): mov %rax,%r14
13c9a(2): jz 0x50(%rip)
13c9c(5): mov 0x8(%rsp),%rcx
13ca1(5): mov 0x10(%r12),%rdi
13ca6(3): mov %rcx,%rsi
13ca9(5): call 0xfffedeb7(%rip)
13cae(3): test %rax,%rax
13cb1(5): mov 0x10(%rsp),%rdx
13cb6(6): movzx 0x18(%rsp),%r9d
13cbc(2): jz 0x36(%rip)
13cbe(5): mov %r14,0x8(%r12)
13cc3(5): mov %rax,0x10(%r12)
13cc8(4): mov %rdx,(%r12)
13ccc(5): jmp 0xfffffd9b(%rip)
13cd1(7): nop 0x0(%rax)
13cd8(2): xor %edx,%edx
13cda(3): xor %r13d,%r13d
13cdd(5): jmp 0xfffffdce(%rip)
13ce2(3): mov %rcx,%rdi
13ce5(5): call 0xfffedbeb(%rip)
13cea(3): xor %r9d,%r9d
13ced(5): jmp 0xfffffdf0(%rip)
13cf2(3): mov %r14,%rdi
13cf5(5): call 0xfffedbdb(%rip)
13cfa(3): xor %r9d,%r9d
13cfd(5): jmp 0xfffffde0(%rip)
13d02(7): lea 0x20e7(%rip),%rcx
13d09(7): lea 0x1b20(%rip),%rsi
13d10(7): lea 0x1c3e(%rip),%rdi
13d17(5): mov $0x1be,%edx
13d1c(5): call 0xfffedd34(%rip)
13d21(7): lea 0x20b8(%rip),%rcx
13d28(7): lea 0x1b01(%rip),%rsi
13d2f(7): lea 0x1c07(%rip),%rdi
13d36(5): mov $0x1fb,%edx
13d3b(5): call 0xfffedd15(%rip)
13d40(7): lea 0x2099(%rip),%rcx
13d47(7): lea 0x1ae2(%rip),%rsi
13d4e(7): lea 0x1bcb(%rip),%rdi
13d55(5): mov $0x1f9,%edx
13d5a(5): call 0xfffedcf6(%rip)

"re_search_2_stub" :
13d60(2): push %r15
13d62(2): push %r14
13d64(2): push %r13
13d66(2): push %r12
13d68(3): mov %rdi,%r12
13d6b(1): push %rbp
13d6c(1): push %rbx
13d6d(3): mov %r8,%rbp
13d70(3): mov %rdx,%rbx
13d73(3): mov %rbp,%rdx
13d76(4): sub $0x28,%rsp
13d7a(4): shr $0x3f,%rdx
13d7e(5): mov 0x70(%rsp),%rax
13d83(2): mov %edx,%edi
13d85(5): mov 0x78(%rsp),%r8d
13d8a(4): shr $0x3f,%rax
13d8e(3): or %al,%dil
13d91(6): jnz 0xcf(%rip)
13d97(3): test %rbx,%rbx
13d9a(6): js 0xc6(%rip)
13da0(3): mov %rbx,%r15
13da3(3): add %rbp,%r15
13da6(6): jo 0xba(%rip)
13dac(3): test %rbp,%rbp
13daf(3): mov %rcx,%r14
13db2(3): mov %r9,%rcx
13db5(6): jz 0xbb(%rip)
13dbb(3): xor %r13d,%r13d
13dbe(3): test %rbx,%rbx
13dc1(5): mov %rsi,0x8(%rsp)
13dc6(2): jnz 0x4a(%rip)
13dc8(4): movzx %r8b,%r8d
13dcc(3): mov %r15,%rdx
13dcf(3): mov %r14,%rsi
13dd2(2): push %r8
13dd4(4): push 0x70(%rsp)
13dd8(3): mov %r12,%rdi
13ddb(8): mov 0x80(%rsp),%r9
13de3(5): mov 0x70(%rsp),%r8
13de8(5): call 0xfffffaf8(%rip)
13ded(3): mov %r13,%rdi
13df0(3): mov %rax,%rbx
13df3(5): call 0xfffedadd(%rip)
13df8(1): pop %rax
13df9(1): pop %rdx
13dfa(4): add $0x28,%rsp
13dfe(3): mov %rbx,%rax
13e01(1): pop %rbx
13e02(1): pop %rbp
13e03(2): pop %r12
13e05(2): pop %r13
13e07(2): pop %r14
13e09(2): pop %r15
13e0b(1): ret near (%rsp)
13e0c(4): nop 0x0(%rax)
13e10(3): mov %r15,%rdi
13e13(5): mov %r8d,0x1c(%rsp)
13e18(5): mov %r9,0x10(%rsp)
13e1d(5): call 0xfffedce3(%rip)
13e22(3): test %rax,%rax
13e25(3): mov %rax,%r13
13e28(2): jz 0x38(%rip)
13e2a(5): mov 0x8(%rsp),%rsi
13e2f(3): mov %rbx,%rdx
13e32(3): mov %rax,%rdi
13e35(5): call 0xfffedc9b(%rip)
13e3a(5): lea 0x0(%r13,%rbx,1),%rdi
13e3f(3): mov %r14,%rsi
13e42(3): mov %rbp,%rdx
13e45(3): mov %r13,%r14
13e48(5): call 0xfffedc88(%rip)
13e4d(5): mov 0x10(%rsp),%rcx
13e52(5): mov 0x1c(%rsp),%r8d
13e57(5): jmp 0xffffff71(%rip)
13e5c(4): nop 0x0(%rax)
13e60(7): mov $0xfffffffe,%rbx
13e67(2): jmp 0xffffff93(%rip)
13e69(7): nop 0x0(%rax)
13e70(3): mov %rsi,%r14
13e73(3): xor %r13d,%r13d
13e76(5): jmp 0xffffff52(%rip)

"rpl_regcomp" :
13e80(2): mov %edx,%eax
13e82(2): push %r14
13e84(2): push %r13
13e86(3): and $0x1,%eax
13e89(2): push %r12
13e8b(1): push %rbp
13e8c(3): cmp $0x1,%eax
13e8f(1): push %rbx
13e90(3): mov %rdi,%rbx
13e93(3): sbb %r14,%r14
13e96(7): mov $0x0,(%rdi)
13e9d(8): mov $0x0,0x8(%rdi)
13ea5(7): and $0xfd4fca,%r14d
13eac(8): mov $0x0,0x10(%rdi)
13eb4(5): mov $0x100,%edi
13eb9(3): mov %rsi,%r12
13ebc(2): mov %edx,%ebp
13ebe(7): add $0x3b2fc,%r14
13ec5(5): call 0xfffedc3b(%rip)
13eca(3): test %rax,%rax
13ecd(4): mov %rax,0x20(%rbx)
13ed1(6): jz 0xaf(%rip)
13ed7(3): mov %rbp,%r13
13eda(4): shl/sal $0x15,%r13
13ede(7): and $0x400000,%r13d
13ee5(3): or %r14,%r13
13ee8(4): test $0x4,%bpl
13eec(2): jnz 0x64(%rip)
13eee(4): and $0x7f,0x38(%rbx)
13ef2(4): movzx 0x38(%rbx),%edx
13ef6(3): shr $0x3,%ebp
13ef9(3): mov %r12,%rdi
13efc(3): and $0x1,%ebp
13eff(8): mov $0x0,0x28(%rbx)
13f07(3): shl/sal $0x4,%ebp
13f0a(3): and $0xef,%edx
13f0d(2): or %edx,%ebp
13f0f(4): mov %bpl,0x38(%rbx)
13f13(5): call 0xfffedabd(%rip)
13f18(3): mov %r13,%rcx
13f1b(3): mov %rax,%rdx
13f1e(3): mov %r12,%rsi
13f21(3): mov %rbx,%rdi
13f24(5): call 0xffffe76c(%rip)
13f29(3): cmp $0x10,%eax
13f2c(2): mov %eax,%ebp
13f2e(2): jz 0x3a(%rip)
13f30(2): test %eax,%eax
13f32(2): jnz 0x3b(%rip)
13f34(3): mov %rbx,%rdi
13f37(5): call 0xfffff8d9(%rip)
13f3c(1): pop %rbx
13f3d(2): mov %ebp,%eax
13f3f(1): pop %rbp
13f40(2): pop %r12
13f42(2): pop %r13
13f44(2): pop %r14
13f46(1): ret near (%rsp)
13f47(9): nop 0x0(%rax,%rax,1)
13f50(4): and $0xffffffbf,%r13
13f54(4): or $0x80,0x38(%rbx)
13f58(7): or $0x100,%r13
13f5f(2): jmp 0xffffff93(%rip)
13f61(7): nop 0x0(%rax)
13f68(5): mov $0x8,%ebp
13f6d(4): mov 0x20(%rbx),%rdi
13f71(5): call 0xfffed95f(%rip)
13f76(8): mov $0x0,0x20(%rbx)
13f7e(2): jmp 0xffffffbe(%rip)
13f80(5): mov $0xc,%ebp
13f85(1): pop %rbx
13f86(2): mov %ebp,%eax
13f88(1): pop %rbp
13f89(2): pop %r12
13f8b(2): pop %r13
13f8d(2): pop %r14
13f8f(1): ret near (%rsp)

"rpl_regerror" :
13f90(2): push %r13
13f92(2): push %r12
13f94(1): push %rbp
13f95(1): push %rbx
13f96(4): sub $0x8,%rsp
13f9a(3): cmp $0x10,%edi
13f9d(2): jnbe 0x63(%rip)
13f9f(7): lea 0x1eda(%rip),%rax
13fa6(3): movsxd %edi,%rdi
13fa9(7): lea 0x1f70(%rip),%rsi
13fb0(3): mov %rdx,%rbp
13fb3(5): mov $0x5,%edx
13fb8(3): mov %rcx,%r12
13fbb(4): add 0x0(%rax,%rdi,8),%rsi
13fbf(2): xor %edi,%edi
13fc1(5): call 0xfffed9ef(%rip)
13fc6(3): mov %rax,%rdi
13fc9(3): mov %rax,%r13
13fcc(5): call 0xfffeda04(%rip)
13fd1(3): test %r12,%r12
13fd4(4): lea 0x1(%rax),%rbx
13fd8(2): jz 0x15(%rip)
13fda(3): cmp %r12,%rbx
13fdd(3): mov %rbx,%rdx
13fe0(2): jnbe 0x28(%rip)
13fe2(3): mov %r13,%rsi
13fe5(3): mov %rbp,%rdi
13fe8(5): call 0xfffedae8(%rip)
13fed(4): add $0x8,%rsp
13ff1(3): mov %rbx,%rax
13ff4(1): pop %rbx
13ff5(1): pop %rbp
13ff6(2): pop %r12
13ff8(2): pop %r13
13ffa(1): ret near (%rsp)
13ffb(5): nop 0x0(%rax,%rax,1)
14000(5): call 0xfffed8e0(%rip)
14005(3): nop (%rax)
14008(5): lea 0xffffffff(%r12),%rdx
1400d(6): mov $0x0,0xffffffff(%rbp,%r12,1)
14013(2): jmp 0xffffffcf(%rip)

"rpl_regfree" :
14020(1): push %rbx
14021(3): mov %rdi,%rbx
14024(3): mov (%rdi),%rdi
14027(3): test %rdi,%rdi
1402a(2): jz 0x7(%rip)
1402c(5): call 0xffff37e4(%rip)
14031(4): mov 0x20(%rbx),%rdi
14035(7): mov $0x0,(%rbx)
1403c(8): mov $0x0,0x8(%rbx)
14044(5): call 0xfffed88c(%rip)
14049(4): mov 0x28(%rbx),%rdi
1404d(8): mov $0x0,0x20(%rbx)
14055(5): call 0xfffed87b(%rip)
1405a(8): mov $0x0,0x28(%rbx)
14062(1): pop %rbx
14063(1): ret near (%rsp)

"rpl_regexec" :
14070(7): test $0xfffffff8,%r8d
14077(6): jnz 0x91(%rip)
1407d(2): push %r13
1407f(2): push %r12
14081(3): mov %rdx,%r13
14084(1): push %rbp
14085(1): push %rbx
14086(3): mov %rcx,%r12
14089(3): mov %r8d,%ebx
1408c(3): mov %rdi,%rbp
1408f(4): sub $0x18,%rsp
14093(4): test $0x4,%r8b
14097(2): jnz 0x51(%rip)
14099(3): mov %rsi,%rdi
1409c(5): mov %rsi,0x8(%rsp)
140a1(5): call 0xfffed92f(%rip)
140a6(2): xor %ecx,%ecx
140a8(4): test $0x10,0x38(%rbp)
140ac(3): mov %rax,%rdx
140af(5): mov 0x8(%rsp),%rsi
140b4(2): jz 0x42(%rip)
140b6(4): sub $0x8,%rsp
140ba(1): push %rbx
140bb(2): push $0x0
140bd(2): push $0x0
140bf(3): mov %rbp,%rdi
140c2(3): mov %rdx,%r9
140c5(3): mov %rdx,%r8
140c8(5): call 0xffffa438(%rip)
140cd(4): add $0x20,%rsp
140d1(2): test %eax,%eax
140d3(3): setnz %al
140d6(4): add $0x18,%rsp
140da(1): pop %rbx
140db(3): movzx %al,%eax
140de(1): pop %rbp
140df(2): pop %r12
140e1(2): pop %r13
140e3(1): ret near (%rsp)
140e4(4): nop 0x0(%rax)
140e8(4): test $0x10,0x38(%rbp)
140ec(3): mov (%rcx),%rcx
140ef(5): mov 0x8(%r12),%rdx
140f4(2): jnz 0xffffffc2(%rip)
140f6(4): sub $0x8,%rsp
140fa(1): push %rbx
140fb(2): push %r12
140fd(2): push %r13
140ff(2): jmp 0xffffffc0(%rip)
14101(7): nop 0x0(%rax)
14108(5): mov $0x2,%eax
1410d(1): ret near (%rsp)

"rpl_re_match" :
14110(4): sub $0x8,%rsp
14114(3): mov %rdx,%r9
14117(2): push $0x1
14119(2): push %r8
1411b(3): xor %r8d,%r8d
1411e(5): call 0xfffff7c2(%rip)
14123(4): add $0x18,%rsp
14127(1): ret near (%rsp)

"rpl_re_search" :
14130(4): sub $0x8,%rsp
14134(2): push $0x0
14136(2): push %r9
14138(3): mov %rdx,%r9
1413b(5): call 0xfffff7a5(%rip)
14140(4): add $0x18,%rsp
14144(1): ret near (%rsp)

"rpl_re_match_2" :
14150(4): sub $0x8,%rsp
14154(2): push $0x1
14156(4): push 0x20(%rsp)
1415a(4): push 0x20(%rsp)
1415e(2): push $0x0
14160(5): call 0xfffffc00(%rip)
14165(4): add $0x28,%rsp
14169(1): ret near (%rsp)

"rpl_re_search_2" :
14170(4): sub $0x8,%rsp
14174(2): push $0x0
14176(4): push 0x28(%rsp)
1417a(4): push 0x28(%rsp)
1417e(4): push 0x28(%rsp)
14182(5): call 0xfffffbde(%rip)
14187(4): add $0x28,%rsp
1418b(1): ret near (%rsp)

"rpl_re_set_registers" :
14190(3): test %rdx,%rdx
14193(2): jnz 0x25(%rip)
14195(4): and $0xf9,0x38(%rdi)
14199(7): mov $0x0,(%rsi)
141a0(8): mov $0x0,0x10(%rsi)
141a8(8): mov $0x0,0x8(%rsi)
141b0(1): ret near (%rsp)
141b1(7): nop 0x0(%rax)
141b8(4): movzx 0x38(%rdi),%eax
141bc(3): and $0xf9,%eax
141bf(3): or $0x2,%eax
141c2(3): mov %al,0x38(%rdi)
141c5(3): mov %rdx,(%rsi)
141c8(4): mov %rcx,0x8(%rsi)
141cc(4): mov %r8,0x10(%rsi)
141d0(1): ret near (%rsp)

"close_stream" :
141e0(2): push %r12
141e2(1): push %rbp
141e3(3): mov %rdi,%rbp
141e6(1): push %rbx
141e7(5): call 0xfffed749(%rip)
141ec(3): mov 0x0(%rbp),%ebx
141ef(3): mov %rbp,%rdi
141f2(3): mov %rax,%r12
141f5(5): call 0xffff1c2b(%rip)
141fa(3): and $0x20,%ebx
141fd(2): test %ebx,%ebx
141ff(2): jnz 0x19(%rip)
14201(2): test %eax,%eax
14203(2): jz 0xc(%rip)
14205(3): test %r12,%r12
14208(5): mov $0xffffffff,%eax
1420d(2): jz 0x3b(%rip)
1420f(1): pop %rbx
14210(1): pop %rbp
14211(2): pop %r12
14213(1): ret near (%rsp)
14214(4): nop 0x0(%rax)
14218(2): test %eax,%eax
1421a(2): jnz 0x1e(%rip)
1421c(5): call 0xfffed6d4(%rip)
14221(6): mov $0x0,(%rax)
14227(5): mov $0xffffffff,%eax
1422c(1): pop %rbx
1422d(1): pop %rbp
1422e(2): pop %r12
14230(1): ret near (%rsp)
14231(7): nop 0x0(%rax)
14238(1): pop %rbx
14239(5): mov $0xffffffff,%eax
1423e(1): pop %rbp
1423f(2): pop %r12
14241(1): ret near (%rsp)
14242(6): nop 0x0(%rax,%rax,1)
14248(5): call 0xfffed6a8(%rip)
1424d(3): cmp $0x9,(%rax)
14250(1): pop %rbx
14251(1): pop %rbp
14252(2): pop %r12
14254(3): setnz %al
14257(3): movzx %al,%eax
1425a(2): neg %eax
1425c(1): ret near (%rsp)

"hard_locale" :
14260(4): sub $0x8,%rsp
14264(2): xor %esi,%esi
14266(5): call 0xfffed90a(%rip)
1426b(3): mov %rax,%rdx
1426e(5): mov $0x1,%eax
14273(3): test %rdx,%rdx
14276(2): jz 0x1f(%rip)
14278(7): lea 0x1e31(%rip),%rdi
1427f(5): mov $0x2,%ecx
14284(3): mov %rdx,%rsi
14287(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
14289(3): setnbe %cl
1428c(3): sbb $0x0,%cl
1428f(2): xor %eax,%eax
14291(2): test %cl,%cl
14293(2): jnz 0xd(%rip)
14295(4): add $0x8,%rsp
14299(1): ret near (%rsp)
1429a(6): nop 0x0(%rax,%rax,1)
142a0(7): lea 0x1e0b(%rip),%rdi
142a7(5): mov $0x6,%ecx
142ac(3): mov %rdx,%rsi
142af(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
142b1(3): setnbe %al
142b4(2): sbb $0x0,%al
142b6(2): test %al,%al
142b8(3): setnz %al
142bb(4): add $0x8,%rsp
142bf(1): ret near (%rsp)

"locale_charset" :
142c0(4): sub $0x8,%rsp
142c4(5): mov $0xe,%edi
142c9(5): call 0xfffed867(%rip)
142ce(3): test %rax,%rax
142d1(2): jz 0x1f(%rip)
142d3(3): cmp $0x0,(%rax)
142d6(7): lea 0x1ddb(%rip),%rdx
142dd(4): cmove %rdx,%rax
142e1(4): add $0x8,%rsp
142e5(1): ret near (%rsp)
142e6(a): nop 0x0(%rax,%rax,1)
142f0(7): lea 0x1dc1(%rip),%rax
142f7(4): add $0x8,%rsp
142fb(1): ret near (%rsp)

"__libc_csu_init" :
14300(2): push %r15
14302(2): push %r14
14304(3): mov %rdx,%r15
14307(2): push %r13
14309(2): push %r12
1430b(7): lea 0x20469e(%rip),%r12
14312(1): push %rbp
14313(7): lea 0x20469e(%rip),%rbp
1431a(1): push %rbx
1431b(3): mov %edi,%r13d
1431e(3): mov %rsi,%r14
14321(3): sub %r12,%rbp
14324(4): sub $0x8,%rsp
14328(4): sar $0x3,%rbp
1432c(5): call 0xfffed55c(%rip)
14331(3): test %rbp,%rbp
14334(2): jz 0x22(%rip)
14336(2): xor %ebx,%ebx
14338(8): nop 0x0(%rax,%rax,1)
14340(3): mov %r15,%rdx
14343(3): mov %r14,%rsi
14346(3): mov %r13d,%edi
14349(4): call 0x0(%r12,%rbx,8)
1434d(4): add $0x1,%rbx
14351(3): cmp %rbx,%rbp
14354(2): jnz 0xffffffec(%rip)
14356(4): add $0x8,%rsp
1435a(1): pop %rbx
1435b(1): pop %rbp
1435c(2): pop %r12
1435e(2): pop %r13
14360(2): pop %r14
14362(2): pop %r15
14364(1): ret near (%rsp)

"atexit" :
14380(7): mov 0x204c81(%rip),%rdx
14387(2): xor %esi,%esi
14389(5): jmp 0xfffed877(%rip)

"_fini" :
14390(4): sub $0x8,%rsp
14394(4): add $0x8,%rsp
14398(1): ret near (%rsp)

