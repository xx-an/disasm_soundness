
"__snprintf_chk@plt" :
1300(6): jmp 0x209b3a(%rip)
1306(5): push $0x0

"free@plt" :
1310(6): jmp 0x209b32(%rip)
1316(5): push $0x1

"abort@plt" :
1320(6): jmp 0x209b2a(%rip)
1326(5): push $0x2

"__errno_location@plt" :
1330(6): jmp 0x209b22(%rip)
1336(5): push $0x3

"error_at_line@plt" :
1340(6): jmp 0x209b1a(%rip)
1346(5): push $0x4

"strncmp@plt" :
1350(6): jmp 0x209b12(%rip)
1356(5): push $0x5

"_exit@plt" :
1360(6): jmp 0x209b0a(%rip)
1366(5): push $0x6

"__fpending@plt" :
1370(6): jmp 0x209b02(%rip)
1376(5): push $0x7

"isatty@plt" :
1380(6): jmp 0x209afa(%rip)
1386(5): push $0x8

"textdomain@plt" :
1390(6): jmp 0x209af2(%rip)
1396(5): push $0x9

"fclose@plt" :
13a0(6): jmp 0x209aea(%rip)
13a6(5): push $0xa

"bindtextdomain@plt" :
13b0(6): jmp 0x209ae2(%rip)
13b6(5): push $0xb

"dcgettext@plt" :
13c0(6): jmp 0x209ada(%rip)
13c6(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
13d0(6): jmp 0x209ad2(%rip)
13d6(5): push $0xd

"strlen@plt" :
13e0(6): jmp 0x209aca(%rip)
13e6(5): push $0xe

"__lxstat@plt" :
13f0(6): jmp 0x209ac2(%rip)
13f6(5): push $0xf

"__stack_chk_fail@plt" :
1400(6): jmp 0x209aba(%rip)
1406(5): push $0x10

"mbrtowc@plt" :
1410(6): jmp 0x209ab2(%rip)
1416(5): push $0x11

"strrchr@plt" :
1420(6): jmp 0x209aaa(%rip)
1426(5): push $0x12

"lseek@plt" :
1430(6): jmp 0x209aa2(%rip)
1436(5): push $0x13

"memset@plt" :
1440(6): jmp 0x209a9a(%rip)
1446(5): push $0x14

"geteuid@plt" :
1450(6): jmp 0x209a92(%rip)
1456(5): push $0x15

"memcmp@plt" :
1460(6): jmp 0x209a8a(%rip)
1466(5): push $0x16

"fputs_unlocked@plt" :
1470(6): jmp 0x209a82(%rip)
1476(5): push $0x17

"calloc@plt" :
1480(6): jmp 0x209a7a(%rip)
1486(5): push $0x18

"strcmp@plt" :
1490(6): jmp 0x209a72(%rip)
1496(5): push $0x19

"strtol@plt" :
14a0(6): jmp 0x209a6a(%rip)
14a6(5): push $0x1a

"memcpy@plt" :
14b0(6): jmp 0x209a62(%rip)
14b6(5): push $0x1b

"fileno@plt" :
14c0(6): jmp 0x209a5a(%rip)
14c6(5): push $0x1c

"__xstat@plt" :
14d0(6): jmp 0x209a52(%rip)
14d6(5): push $0x1d

"malloc@plt" :
14e0(6): jmp 0x209a4a(%rip)
14e6(5): push $0x1e

"fflush@plt" :
14f0(6): jmp 0x209a42(%rip)
14f6(5): push $0x1f

"nl_langinfo@plt" :
1500(6): jmp 0x209a3a(%rip)
1506(5): push $0x20

"getegid@plt" :
1510(6): jmp 0x209a32(%rip)
1516(5): push $0x21

"__freading@plt" :
1520(6): jmp 0x209a2a(%rip)
1526(5): push $0x22

"realloc@plt" :
1530(6): jmp 0x209a22(%rip)
1536(5): push $0x23

"setlocale@plt" :
1540(6): jmp 0x209a1a(%rip)
1546(5): push $0x24

"__printf_chk@plt" :
1550(6): jmp 0x209a12(%rip)
1556(5): push $0x25

"error@plt" :
1560(6): jmp 0x209a0a(%rip)
1566(5): push $0x26

"fseeko@plt" :
1570(6): jmp 0x209a02(%rip)
1576(5): push $0x27

"euidaccess@plt" :
1580(6): jmp 0x2099fa(%rip)
1586(5): push $0x28

"__cxa_atexit@plt" :
1590(6): jmp 0x2099f2(%rip)
1596(5): push $0x29

"exit@plt" :
15a0(6): jmp 0x2099ea(%rip)
15a6(5): push $0x2a

"fwrite@plt" :
15b0(6): jmp 0x2099e2(%rip)
15b6(5): push $0x2b

"__fprintf_chk@plt" :
15c0(6): jmp 0x2099da(%rip)
15c6(5): push $0x2c

"mbsinit@plt" :
15d0(6): jmp 0x2099d2(%rip)
15d6(5): push $0x2d

"iswprint@plt" :
15e0(6): jmp 0x2099ca(%rip)
15e6(5): push $0x2e

"__ctype_b_loc@plt" :
15f0(6): jmp 0x2099c2(%rip)
15f6(5): push $0x2f

".plt.got" :
1600(6): jmp 0x2099da(%rip)
1606(2): nop 

"_init" :
12d8(4): sub $0x8,%rsp
12dc(7): mov 0x209ced(%rip),%rax
12e3(3): test %rax,%rax
12e6(2): jz 0x4(%rip)
12e8(2): call %rax
12ea(4): add $0x8,%rsp
12ee(1): ret near (%rsp)

"main" :
1610(1): push %rbp
1611(1): push %rbx
1612(2): mov %edi,%ebx
1614(3): mov %rsi,%rbp
1617(4): sub $0x8,%rsp
161b(3): mov (%rsi),%rdi
161e(5): call 0x1de2(%rip)
1623(7): lea 0x68bd(%rip),%rsi
162a(5): mov $0x6,%edi
162f(5): call 0xffffff11(%rip)
1634(7): lea 0x68da(%rip),%rsi
163b(7): lea 0x68aa(%rip),%rdi
1642(5): call 0xfffffd6e(%rip)
1647(7): lea 0x689e(%rip),%rdi
164e(5): call 0xfffffd42(%rip)
1653(7): lea 0x1ca6(%rip),%rdi
165a(a): mov $0x2,0x2099ac(%rip)
1664(5): call 0x66bc(%rip)
1669(3): cmp $0x1,%ebx
166c(7): mov %rbp,0x209a3d(%rip)
1673(6): mov %ebx,0x209a3f(%rip)
1679(a): mov $0x1,0x209a39(%rip)
1683(2): jle 0x26(%rip)
1685(3): lea 0xffffffff(%rbx),%edi
1688(5): call 0x10a8(%rip)
168d(7): movsxd 0x209a28(%rip),%rdx
1694(6): cmp 0x209a1e(%rip),%edx
169a(2): jnz 0x16(%rip)
169c(3): xor $0x1,%eax
169f(3): movzx %al,%eax
16a2(4): add $0x8,%rsp
16a6(1): pop %rbx
16a7(1): pop %rbp
16a8(1): ret near (%rsp)
16a9(5): mov $0x1,%eax
16ae(2): jmp 0xfffffff4(%rip)
16b0(7): mov 0x2099f9(%rip),%rax
16b7(4): mov 0x0(%rax,%rdx,8),%rdi
16bb(5): call 0x3a55(%rip)
16c0(7): lea 0x6866(%rip),%rsi
16c7(3): mov %rax,%rbx
16ca(2): xor %edi,%edi
16cc(5): mov $0x5,%edx
16d1(5): call 0xfffffcef(%rip)
16d6(3): mov %rbx,%rsi
16d9(3): mov %rax,%rdi
16dc(2): xor %eax,%eax
16de(5): call 0x292(%rip)

"_start" :
16f0(2): xor %ebp,%ebp
16f2(3): mov %rdx,%r9
16f5(1): pop %rsi
16f6(3): mov %rsp,%rdx
16f9(4): and $0xfffffff0,%rsp
16fd(1): push %rax
16fe(1): push %rsp
16ff(7): lea 0x660a(%rip),%r8
1706(7): lea 0x6593(%rip),%rcx
170d(7): lea 0xfffffefc(%rip),%rdi
1714(6): call 0x2098ae(%rip)
171a(1): hlt 

"deregister_tm_clones" :
1720(7): lea 0x209959(%rip),%rdi
1727(1): push %rbp
1728(7): lea 0x209951(%rip),%rax
172f(3): cmp %rdi,%rax
1732(3): mov %rsp,%rbp
1735(2): jz 0x1b(%rip)
1737(7): mov 0x209882(%rip),%rax
173e(3): test %rax,%rax
1741(2): jz 0xf(%rip)
1743(1): pop %rbp
1744(2): jmp %rax
1746(a): nop 0x0(%rax,%rax,1)
1750(1): pop %rbp
1751(1): ret near (%rsp)

"register_tm_clones" :
1760(7): lea 0x209919(%rip),%rdi
1767(7): lea 0x209912(%rip),%rsi
176e(1): push %rbp
176f(3): sub %rdi,%rsi
1772(3): mov %rsp,%rbp
1775(4): sar $0x3,%rsi
1779(3): mov %rsi,%rax
177c(4): shr $0x3f,%rax
1780(3): add %rax,%rsi
1783(3): sar $0x1,%rsi
1786(2): jz 0x1a(%rip)
1788(7): mov 0x209849(%rip),%rax
178f(3): test %rax,%rax
1792(2): jz 0xe(%rip)
1794(1): pop %rbp
1795(2): jmp %rax
1797(9): nop 0x0(%rax,%rax,1)
17a0(1): pop %rbp
17a1(1): ret near (%rsp)

"__do_global_dtors_aux" :
17b0(7): cmp $0x0,0x2098f1(%rip)
17b7(2): jnz 0x31(%rip)
17b9(8): cmp $0x0,0x20981f(%rip)
17c1(1): push %rbp
17c2(3): mov %rsp,%rbp
17c5(2): jz 0xe(%rip)
17c7(7): mov 0x20983a(%rip),%rdi
17ce(5): call 0xfffffe32(%rip)
17d3(5): call 0xffffff4d(%rip)
17d8(7): mov $0x1,0x2098c9(%rip)
17df(1): pop %rbp
17e0(1): ret near (%rsp)
17e1(7): nop 0x0(%rax)
17e8(2): REP ret near (%rsp)

"frame_dummy" :
17f0(1): push %rbp
17f1(3): mov %rsp,%rbp
17f4(1): pop %rbp
17f5(5): jmp 0xffffff6b(%rip)

"binop" :
1800(3): mov %rdi,%r8
1803(7): lea 0x653b(%rip),%rdi
180a(5): mov $0x2,%ecx
180f(3): mov %r8,%rsi
1812(5): mov $0x1,%eax
1817(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1819(3): setnbe %dl
181c(3): sbb $0x0,%dl
181f(2): test %dl,%dl
1821(6): jz 0x147(%rip)
1827(7): lea 0x6516(%rip),%rdi
182e(5): mov $0x3,%ecx
1833(3): mov %r8,%rsi
1836(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1838(3): setnbe %dl
183b(3): sbb $0x0,%dl
183e(2): test %dl,%dl
1840(6): jz 0x128(%rip)
1846(7): lea 0x64fa(%rip),%rdi
184d(5): mov $0x3,%ecx
1852(3): mov %r8,%rsi
1855(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1857(3): setnbe %dl
185a(3): sbb $0x0,%dl
185d(2): test %dl,%dl
185f(6): jz 0x109(%rip)
1865(7): lea 0x64de(%rip),%rdi
186c(5): mov $0x4,%ecx
1871(3): mov %r8,%rsi
1874(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1876(3): setnbe %dl
1879(3): sbb $0x0,%dl
187c(2): test %dl,%dl
187e(6): jz 0xea(%rip)
1884(7): lea 0x64c3(%rip),%rdi
188b(5): mov $0x4,%ecx
1890(3): mov %r8,%rsi
1893(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1895(3): setnbe %dl
1898(3): sbb $0x0,%dl
189b(2): test %dl,%dl
189d(6): jz 0xcb(%rip)
18a3(7): lea 0x64a8(%rip),%rdi
18aa(5): mov $0x4,%ecx
18af(3): mov %r8,%rsi
18b2(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
18b4(3): setnbe %dl
18b7(3): sbb $0x0,%dl
18ba(2): test %dl,%dl
18bc(6): jz 0xac(%rip)
18c2(7): lea 0x648d(%rip),%rdi
18c9(5): mov $0x4,%ecx
18ce(3): mov %r8,%rsi
18d1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
18d3(3): setnbe %dl
18d6(3): sbb $0x0,%dl
18d9(2): test %dl,%dl
18db(6): jz 0x8d(%rip)
18e1(7): lea 0x6472(%rip),%rdi
18e8(5): mov $0x4,%ecx
18ed(3): mov %r8,%rsi
18f0(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
18f2(3): setnbe %dl
18f5(3): sbb $0x0,%dl
18f8(2): test %dl,%dl
18fa(2): jz 0x6e(%rip)
18fc(7): lea 0x645b(%rip),%rdi
1903(5): mov $0x4,%ecx
1908(3): mov %r8,%rsi
190b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
190d(3): setnbe %dl
1910(3): sbb $0x0,%dl
1913(2): test %dl,%dl
1915(2): jz 0x53(%rip)
1917(7): lea 0x6444(%rip),%rdi
191e(5): mov $0x4,%ecx
1923(3): mov %r8,%rsi
1926(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1928(3): setnbe %dl
192b(3): sbb $0x0,%dl
192e(2): test %dl,%dl
1930(2): jz 0x38(%rip)
1932(7): lea 0x642d(%rip),%rdi
1939(5): mov $0x4,%ecx
193e(3): mov %r8,%rsi
1941(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1943(3): setnbe %dl
1946(3): sbb $0x0,%dl
1949(2): test %dl,%dl
194b(2): jz 0x1d(%rip)
194d(7): lea 0x6416(%rip),%rdi
1954(5): mov $0x4,%ecx
1959(3): mov %r8,%rsi
195c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
195e(3): setnbe %al
1961(2): sbb $0x0,%al
1963(2): test %al,%al
1965(3): setz %al
1968(2): REP ret near (%rsp)

"test_syntax_error" :
1970(7): sub $0xd8,%rsp
1977(2): test %al,%al
1979(5): mov %rsi,0x28(%rsp)
197e(5): mov %rdx,0x30(%rsp)
1983(5): mov %rcx,0x38(%rsp)
1988(5): mov %r8,0x40(%rsp)
198d(5): mov %r9,0x48(%rsp)
1992(2): jz 0x39(%rip)
1994(5): movaps %xmm0,0x50(%rsp)
1999(5): movaps %xmm1,0x60(%rsp)
199e(5): movaps %xmm2,0x70(%rsp)
19a3(8): movaps %xmm3,0x80(%rsp)
19ab(8): movaps %xmm4,0x90(%rsp)
19b3(8): movaps %xmm5,0xa0(%rsp)
19bb(8): movaps %xmm6,0xb0(%rsp)
19c3(8): movaps %xmm7,0xc0(%rsp)
19cb(9): mov $0x28,%rax
19d4(5): mov %rax,0x18(%rsp)
19d9(2): xor %eax,%eax
19db(8): lea 0xe0(%rsp),%rax
19e3(3): mov %rdi,%rdx
19e6(3): mov %rsp,%rcx
19e9(2): xor %edi,%edi
19eb(2): xor %esi,%esi
19ed(5): mov %rax,0x8(%rsp)
19f2(5): lea 0x20(%rsp),%rax
19f7(7): mov $0x8,(%rsp)
19fe(8): mov $0x30,0x4(%rsp)
1a06(5): mov %rax,0x10(%rsp)
1a0b(5): call 0x3a95(%rip)
1a10(5): mov $0x2,%edi
1a15(5): call 0xfffffb8b(%rip)

"find_int" :
1a20(1): push %rbx
1a21(3): mov %rdi,%rbx
1a24(5): call 0xfffffbcc(%rip)
1a29(3): mov (%rax),%r8
1a2c(3): mov %rbx,%rax
1a2f(3): movzx (%rax),%ecx
1a32(5): test $0x1,0x0(%r8,%rcx,2)
1a37(3): mov %rcx,%rdx
1a3a(2): jnz 0x76(%rip)
1a3c(3): cmp $0x2b,%cl
1a3f(2): jz 0x81(%rip)
1a41(2): xor %ecx,%ecx
1a43(3): cmp $0x2d,%dl
1a46(3): setz %cl
1a49(3): add %rax,%rcx
1a4c(3): movsx (%rcx),%esi
1a4f(4): lea 0x1(%rcx),%rdx
1a53(3): sub $0x30,%esi
1a56(3): cmp $0x9,%esi
1a59(2): jnbe 0x70(%rip)
1a5b(4): movsx 0x1(%rcx),%esi
1a5f(2): mov %esi,%ecx
1a61(3): sub $0x30,%esi
1a64(3): cmp $0x9,%esi
1a67(2): jnbe 0x1a(%rip)
1a69(7): nop 0x0(%rax)
1a70(4): add $0x1,%rdx
1a74(3): movsx (%rdx),%esi
1a77(2): mov %esi,%ecx
1a79(3): sub $0x30,%esi
1a7c(3): cmp $0x9,%esi
1a7f(2): jbe 0xfffffff1(%rip)
1a81(3): movzx %cl,%esi
1a84(5): test $0x1,0x0(%r8,%rsi,2)
1a89(2): jz 0x18(%rip)
1a8b(5): nop 0x0(%rax,%rax,1)
1a90(4): add $0x1,%rdx
1a94(3): movzx (%rdx),%esi
1a97(5): test $0x1,0x0(%r8,%rsi,2)
1a9c(3): mov %rsi,%rcx
1a9f(2): jnz 0xfffffff1(%rip)
1aa1(2): test %cl,%cl
1aa3(2): jnz 0x26(%rip)
1aa5(1): pop %rbx
1aa6(1): ret near (%rsp)
1aa7(9): nop 0x0(%rax,%rax,1)
1ab0(4): add $0x1,%rax
1ab4(5): jmp 0xffffff7b(%rip)
1ab9(7): nop 0x0(%rax)
1ac0(4): lea 0x1(%rax),%rcx
1ac4(3): mov %rcx,%rax
1ac7(2): jmp 0xffffff85(%rip)
1ac9(3): mov %rbx,%rdi
1acc(5): call 0x3644(%rip)
1ad1(7): lea 0x6296(%rip),%rsi
1ad8(3): mov %rax,%rbx
1adb(2): xor %edi,%edi
1add(5): mov $0x5,%edx
1ae2(5): call 0xfffff8de(%rip)
1ae7(3): mov %rbx,%rsi
1aea(3): mov %rax,%rdi
1aed(2): xor %eax,%eax
1aef(5): call 0xfffffe81(%rip)

"beyond" :
1b00(7): movsxd 0x2095b1(%rip),%rdx
1b07(7): mov 0x2095a2(%rip),%rax
1b0e(1): push %rbx
1b0f(5): mov 0xfffffff8(%rax,%rdx,8),%rdi
1b14(5): call 0x35fc(%rip)
1b19(7): lea 0x6261(%rip),%rsi
1b20(3): mov %rax,%rbx
1b23(2): xor %edi,%edi
1b25(5): mov $0x5,%edx
1b2a(5): call 0xfffff896(%rip)
1b2f(3): mov %rbx,%rsi
1b32(3): mov %rax,%rdi
1b35(2): xor %eax,%eax
1b37(5): call 0xfffffe39(%rip)

"unary_advance" :
1b40(6): mov 0x209576(%rip),%eax
1b46(3): lea 0x1(%rax),%edx
1b49(6): cmp 0x209569(%rip),%edx
1b4f(6): mov %edx,0x209567(%rip)
1b55(2): jnl 0xc(%rip)
1b57(3): add $0x2,%eax
1b5a(6): mov %eax,0x20955c(%rip)
1b60(1): ret near (%rsp)
1b61(4): sub $0x8,%rsp
1b65(5): call 0xffffff9b(%rip)

"binary_operator" :
1b70(2): push %r15
1b72(2): push %r14
1b74(2): mov %edi,%eax
1b76(2): push %r13
1b78(2): push %r12
1b7a(1): push %rbp
1b7b(1): push %rbx
1b7c(7): sub $0x178,%rsp
1b83(6): mov 0x209533(%rip),%ecx
1b89(9): mov $0x28,%rbx
1b92(8): mov %rbx,0x168(%rsp)
1b9a(2): xor %ebx,%ebx
1b9c(3): test %dil,%dil
1b9f(3): lea 0x1(%rcx),%edx
1ba2(2): jz 0xb(%rip)
1ba4(6): mov %edx,0x209512(%rip)
1baa(3): lea 0x2(%rcx),%edx
1bad(6): mov 0x209505(%rip),%edi
1bb3(3): xor %r13d,%r13d
1bb6(7): mov 0x2094f3(%rip),%rbx
1bbd(3): movsxd %edx,%r14
1bc0(3): lea 0xfffffffe(%rdi),%ecx
1bc3(2): cmp %edx,%ecx
1bc5(2): jle 0x23(%rip)
1bc7(5): mov 0x8(%rbx,%r14,8),%rsi
1bcc(7): lea 0x61f3(%rip),%rdi
1bd3(5): mov $0x3,%ecx
1bd8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1bda(3): setnbe %cl
1bdd(3): sbb $0x0,%cl
1be0(2): test %cl,%cl
1be2(6): jz 0x9e(%rip)
1be8(4): mov 0x0(%rbx,%r14,8),%rsi
1bec(8): lea 0x0(,%r14,8),%r15
1bf4(3): movzx (%rsi),%edx
1bf7(3): cmp $0x2d,%dl
1bfa(6): jz 0xf6(%rip)
1c00(3): cmp $0x3d,%dl
1c03(6): jz 0x95(%rip)
1c09(7): lea 0x6134(%rip),%rdi
1c10(5): mov $0x3,%ecx
1c15(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1c17(3): setnbe %al
1c1a(2): sbb $0x0,%al
1c1c(2): test %al,%al
1c1e(6): jnz 0x47f(%rip)
1c24(7): movsxd 0x209491(%rip),%rax
1c2b(3): mov %rax,%rbp
1c2e(4): add $0x2,%rax
1c32(4): mov 0x0(%rbx,%rax,8),%rsi
1c36(5): mov 0xfffffff0(%rbx,%rax,8),%rdi
1c3b(5): call 0xfffff855(%rip)
1c40(2): test %eax,%eax
1c42(4): setnz %r13b
1c46(3): add $0x3,%ebp
1c49(6): mov %ebp,0x20946d(%rip)
1c4f(8): mov 0x168(%rsp),%rbx
1c57(9): xor $0x28,%rbx
1c60(3): mov %r13d,%eax
1c63(6): jnz 0x435(%rip)
1c69(7): add $0x178,%rsp
1c70(1): pop %rbx
1c71(1): pop %rbp
1c72(2): pop %r12
1c74(2): pop %r13
1c76(2): pop %r14
1c78(2): pop %r15
1c7a(1): ret near (%rsp)
1c7b(5): nop 0x0(%rax,%rax,1)
1c80(6): mov %edx,0x209436(%rip)
1c86(6): mov $0x1,%r13d
1c8c(5): jmp 0xffffff5c(%rip)
1c91(7): nop 0x0(%rax)
1c98(4): movzx 0x1(%rsi),%eax
1c9c(2): test %al,%al
1c9e(2): jz 0x1a(%rip)
1ca0(2): cmp $0x3d,%al
1ca2(6): jnz 0xffffff67(%rip)
1ca8(4): cmp $0x0,0x2(%rsi)
1cac(6): jnz 0xffffff5d(%rip)
1cb2(6): nop 0x0(%rax,%rax,1)
1cb8(7): movsxd 0x2093fd(%rip),%rax
1cbf(3): mov %rax,%rbp
1cc2(4): add $0x2,%rax
1cc6(4): mov 0x0(%rbx,%rax,8),%rsi
1cca(5): mov 0xfffffff0(%rbx,%rax,8),%rdi
1ccf(5): call 0xfffff7c1(%rip)
1cd4(2): test %eax,%eax
1cd6(4): setz %r13b
1cda(3): add $0x3,%ebp
1cdd(6): mov %ebp,0x2093d9(%rip)
1ce3(5): jmp 0xffffff6c(%rip)
1ce8(8): nop 0x0(%rax,%rax,1)
1cf0(4): movzx 0x1(%rsi),%edx
1cf4(3): cmp $0x6c,%dl
1cf7(6): jz 0x171(%rip)
1cfd(3): cmp $0x67,%dl
1d00(6): jz 0x168(%rip)
1d06(3): cmp $0x65,%dl
1d09(6): jz 0xc7(%rip)
1d0f(3): cmp $0x6e,%dl
1d12(6): jz 0x1fe(%rip)
1d18(3): cmp $0x6f,%dl
1d1b(6): jnz 0x355(%rip)
1d21(4): cmp $0x74,0x2(%rsi)
1d25(6): jnz 0x275(%rip)
1d2b(4): cmp $0x0,0x3(%rsi)
1d2f(6): jnz 0x26b(%rip)
1d35(7): add $0x3,0x209380(%rip)
1d3c(3): or %al,%r13b
1d3f(6): jnz 0x363(%rip)
1d45(8): lea 0xa0(%rsp),%r14
1d4d(5): mov 0xfffffff8(%rbx,%r15,1),%rsi
1d52(5): mov $0x1,%edi
1d57(3): mov %r14,%rdx
1d5a(5): call 0xfffff776(%rip)
1d5f(2): test %eax,%eax
1d61(2): mov %eax,%ebp
1d63(2): jnz 0x17(%rip)
1d65(8): mov 0x100(%rsp),%rax
1d6d(8): mov 0xf8(%rsp),%r12
1d75(5): mov %rax,0x8(%rsp)
1d7a(5): mov 0x8(%rbx,%r15,1),%rsi
1d7f(3): mov %r14,%rdx
1d82(5): mov $0x1,%edi
1d87(5): call 0xfffff749(%rip)
1d8c(2): test %eax,%eax
1d8e(6): jnz 0xfffffec1(%rip)
1d94(8): mov 0xf8(%rsp),%rdx
1d9c(2): test %ebp,%ebp
1d9e(8): mov 0x100(%rsp),%rsi
1da6(4): setnz %r13b
1daa(3): cmp %rdx,%r12
1dad(3): setl %al
1db0(3): or %al,%r13b
1db3(6): jnz 0xfffffe9c(%rip)
1db9(4): mov 0x8(%rsp),%ebp
1dbd(2): sub %esi,%ebp
1dbf(3): shr $0x1f,%ebp
1dc2(3): cmp %rdx,%r12
1dc5(4): cmovng %ebp,%r13d
1dc9(5): jmp 0xfffffe86(%rip)
1dce(2): nop 
1dd0(4): movzx 0x2(%rsi),%edx
1dd4(3): cmp $0x71,%dl
1dd7(6): jz 0x1b9(%rip)
1ddd(3): cmp $0x66,%dl
1de0(6): jnz 0x1ba(%rip)
1de6(4): cmp $0x0,0x3(%rsi)
1dea(6): jnz 0x1b0(%rip)
1df0(7): add $0x3,0x2092c5(%rip)
1df7(3): or %al,%r13b
1dfa(6): jnz 0x2c7(%rip)
1e00(5): mov 0xfffffff8(%rbx,%r15,1),%rsi
1e05(5): lea 0x10(%rsp),%rdx
1e0a(5): mov $0x1,%edi
1e0f(5): call 0xfffff6c1(%rip)
1e14(2): test %eax,%eax
1e16(6): jnz 0xfffffe39(%rip)
1e1c(5): mov 0x8(%rbx,%r15,1),%rsi
1e21(8): lea 0xa0(%rsp),%rdx
1e29(5): mov $0x1,%edi
1e2e(5): call 0xfffff6a2(%rip)
1e33(2): test %eax,%eax
1e35(6): jnz 0xfffffe1a(%rip)
1e3b(8): mov 0xa0(%rsp),%rax
1e43(5): cmp %rax,0x10(%rsp)
1e48(6): jnz 0xfffffe07(%rip)
1e4e(8): mov 0xa8(%rsp),%rax
1e56(5): cmp %rax,0x18(%rsp)
1e5b(4): setz %r13b
1e5f(5): jmp 0xfffffdf0(%rip)
1e64(4): nop 0x0(%rax)
1e68(4): movzx 0x2(%rsi),%ecx
1e6c(3): cmp $0x65,%cl
1e6f(2): jz 0xb(%rip)
1e71(3): cmp $0x74,%cl
1e74(6): jnz 0xfffffe92(%rip)
1e7a(4): cmp $0x0,0x3(%rsi)
1e7e(6): jnz 0x162(%rip)
1e84(2): test %al,%al
1e86(5): mov 0xfffffff8(%rbx,%r15,1),%rdi
1e8b(6): jnz 0x165(%rip)
1e91(5): call 0xfffffb8f(%rip)
1e96(3): mov %rax,%rbx
1e99(3): test %r13b,%r13b
1e9c(7): mov 0x20920d(%rip),%rax
1ea3(6): jz 0x16d(%rip)
1ea9(5): mov 0x10(%rax,%r15,1),%rdi
1eae(5): call 0xfffff532(%rip)
1eb3(8): lea 0x150(%rsp),%rsi
1ebb(3): mov %rax,%rdi
1ebe(5): call 0x14f2(%rip)
1ec3(3): mov %rax,%rsi
1ec6(3): mov %rbx,%rdi
1ec9(5): call 0x3267(%rip)
1ece(7): mov 0x2091db(%rip),%rdx
1ed5(4): mov 0x0(%rdx,%r14,8),%rcx
1ed9(4): cmp $0x65,0x2(%rcx)
1edd(4): movzx 0x1(%rcx),%ecx
1ee1(3): setz %dl
1ee4(7): add $0x3,0x2091d1(%rip)
1eeb(3): cmp $0x6c,%cl
1eee(6): jz 0x16a(%rip)
1ef4(3): cmp $0x67,%cl
1ef7(6): jz 0x191(%rip)
1efd(2): test %eax,%eax
1eff(3): setnz %al
1f02(2): cmp %dl,%al
1f04(4): setz %r13b
1f08(5): jmp 0xfffffd47(%rip)
1f0d(3): nop (%rax)
1f10(4): movzx 0x2(%rsi),%ecx
1f14(3): cmp $0x65,%cl
1f17(2): jz 0x79(%rip)
1f19(3): cmp $0x74,%cl
1f1c(2): jnz 0x7e(%rip)
1f1e(4): cmp $0x0,0x3(%rsi)
1f22(2): jnz 0x78(%rip)
1f24(7): add $0x3,0x209191(%rip)
1f2b(3): or %al,%r13b
1f2e(6): jnz 0x1a1(%rip)
1f34(8): lea 0xa0(%rsp),%rbp
1f3c(5): mov 0xfffffff8(%rbx,%r15,1),%rsi
1f41(5): mov $0x1,%edi
1f46(3): mov %rbp,%rdx
1f49(5): call 0xfffff587(%rip)
1f4e(2): test %eax,%eax
1f50(5): lea 0x8(%rbx,%r15,1),%rcx
1f55(2): jnz 0x73(%rip)
1f57(3): mov (%rcx),%rsi
1f5a(3): mov %rbp,%rdx
1f5d(5): mov $0x1,%edi
1f62(8): mov 0xf8(%rsp),%rbx
1f6a(8): mov 0x100(%rsp),%r12
1f72(5): call 0xfffff55e(%rip)
1f77(2): test %eax,%eax
1f79(6): jz 0xa7(%rip)
1f7f(6): mov $0x1,%r13d
1f85(5): jmp 0xfffffcca(%rip)
1f8a(6): nop 0x0(%rax,%rax,1)
1f90(4): cmp $0x0,0x3(%rsi)
1f94(6): jz 0xfffffef0(%rip)
1f9a(3): mov %rsi,%rdi
1f9d(5): call 0x3173(%rip)
1fa2(7): lea 0x5e37(%rip),%rsi
1fa9(3): mov %rax,%rbx
1fac(2): xor %edi,%edi
1fae(5): mov $0x5,%edx
1fb3(5): call 0xfffff40d(%rip)
1fb8(3): mov %rbx,%rsi
1fbb(3): mov %rax,%rdi
1fbe(2): xor %eax,%eax
1fc0(5): call 0xfffff9b0(%rip)
1fc5(3): nop (%rax)
1fc8(3): mov (%rcx),%rsi
1fcb(3): mov %rbp,%rdx
1fce(5): mov $0x1,%edi
1fd3(5): call 0xfffff4fd(%rip)
1fd8(5): jmp 0xfffffc77(%rip)
1fdd(3): nop (%rax)
1fe0(3): cmp $0x6e,%dl
1fe3(6): jnz 0xfffffd35(%rip)
1fe9(5): jmp 0xffffff30(%rip)
1fee(2): nop 
1ff0(5): call 0xfffff3f0(%rip)
1ff5(8): lea 0x130(%rsp),%rsi
1ffd(3): mov %rax,%rdi
2000(5): call 0x13b0(%rip)
2005(3): mov %rax,%rbx
2008(5): jmp 0xfffffe91(%rip)
200d(3): nop (%rax)
2010(5): mov 0x8(%rax,%r15,1),%rdi
2015(5): call 0xfffffa0b(%rip)
201a(5): jmp 0xfffffea9(%rip)
201f(1): nop 
2020(8): cmp 0xf8(%rsp),%rbx
2028(8): mov 0x100(%rsp),%rax
2030(6): jl 0xfffffc1f(%rip)
2036(6): mov $0x1,%r13d
203c(6): jnle 0xfffffc13(%rip)
2042(3): sub %eax,%r12d
2045(3): test %r12d,%r12d
2048(4): setnle %r13b
204c(5): jmp 0xfffffc03(%rip)
2051(7): nop 0x0(%rax)
2058(3): movzx %dl,%edx
205b(2): cmp %eax,%edx
205d(4): setnle %r13b
2061(5): jmp 0xfffffbee(%rip)
2066(a): nop 0x0(%rax,%rax,1)
2070(3): cmp $0x65,%dl
2073(6): jnz 0xffffff27(%rip)
2079(4): movzx 0x2(%rsi),%edx
207d(5): jmp 0xfffffd60(%rip)
2082(6): nop 0x0(%rax,%rax,1)
2088(3): movzx %dl,%edx
208b(2): neg %edx
208d(2): cmp %eax,%edx
208f(4): setl %r13b
2093(5): jmp 0xfffffbbc(%rip)
2098(5): call 0xfffff368(%rip)
209d(5): call 0xfffff283(%rip)
20a2(7): lea 0x5d20(%rip),%rsi
20a9(5): mov $0x5,%edx
20ae(2): xor %edi,%edi
20b0(5): call 0xfffff310(%rip)
20b5(2): xor %esi,%esi
20b7(3): mov %rax,%rdi
20ba(2): xor %eax,%eax
20bc(5): call 0xfffff8b4(%rip)
20c1(5): mov $0x5,%edx
20c6(7): lea 0x5ce5(%rip),%rsi
20cd(2): jmp 0xffffffe1(%rip)
20cf(5): mov $0x5,%edx
20d4(7): lea 0x5cc0(%rip),%rsi
20db(2): jmp 0xffffffd3(%rip)

"unary_operator" :
20e0(1): push %rbp
20e1(1): push %rbx
20e2(7): sub $0xa8,%rsp
20e9(7): mov 0x208fc0(%rip),%rbx
20f0(9): mov $0x28,%rax
20f9(8): mov %rax,0x98(%rsp)
2101(2): xor %eax,%eax
2103(7): movsxd 0x208fb2(%rip),%rax
210a(4): mov 0x0(%rbx,%rax,8),%rdi
210e(4): movzx 0x1(%rdi),%eax
2112(3): sub $0x47,%eax
2115(2): cmp $0x33,%al
2117(6): jnbe 0x54f(%rip)
211d(7): lea 0x5e1c(%rip),%rdx
2124(3): movzx %al,%eax
2127(4): movsxd 0x0(%rdx,%rax,4),%rax
212b(3): add %rdx,%rax
212e(2): jmp %rax
2130(5): call 0xfffffa10(%rip)
2135(7): movsxd 0x208f80(%rip),%rax
213c(5): mov 0xfffffff8(%rbx,%rax,8),%rax
2141(3): cmp $0x0,(%rax)
2144(3): setz %al
2147(9): nop 0x0(%rax,%rax,1)
2150(8): mov 0x98(%rsp),%rcx
2158(9): xor $0x28,%rcx
2161(6): jnz 0x54b(%rip)
2167(7): add $0xa8,%rsp
216e(1): pop %rbx
216f(1): pop %rbp
2170(1): ret near (%rsp)
2171(7): nop 0x0(%rax)
2178(5): call 0xfffff9c8(%rip)
217d(7): movsxd 0x208f38(%rip),%rax
2184(5): mov $0x1,%esi
2189(5): mov 0xfffffff8(%rbx,%rax,8),%rdi
218e(5): call 0xfffff3f2(%rip)
2193(2): test %eax,%eax
2195(3): setz %al
2198(2): jmp 0xffffffb8(%rip)
219a(6): nop 0x0(%rax,%rax,1)
21a0(5): call 0xfffff9a0(%rip)
21a5(7): movsxd 0x208f10(%rip),%rax
21ac(3): mov %rsp,%rdx
21af(5): mov $0x1,%edi
21b4(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
21b9(5): call 0xfffff317(%rip)
21be(2): mov %eax,%edx
21c0(2): xor %eax,%eax
21c2(2): test %edx,%edx
21c4(2): jnz 0xffffff8c(%rip)
21c6(4): mov 0x18(%rsp),%eax
21ca(3): shr $0xb,%eax
21cd(3): and $0x1,%eax
21d0(5): jmp 0xffffff80(%rip)
21d5(3): nop (%rax)
21d8(5): call 0xfffff968(%rip)
21dd(7): movsxd 0x208ed8(%rip),%rax
21e4(5): mov 0xfffffff8(%rbx,%rax,8),%rdi
21e9(5): call 0xfffff837(%rip)
21ee(3): mov %rax,%rbp
21f1(5): call 0xfffff13f(%rip)
21f6(2): xor %esi,%esi
21f8(3): mov %rax,%rbx
21fb(3): mov %rbp,%rdi
21fe(6): mov $0x0,(%rax)
2204(5): mov $0xa,%edx
2209(5): call 0xfffff297(%rip)
220e(3): mov %rax,%rdi
2211(2): xor %eax,%eax
2213(3): cmp $0x22,(%rbx)
2216(6): jz 0xffffff3a(%rip)
221c(7): cmp $0x7fffffff,%rdi
2223(6): jnbe 0xffffff2d(%rip)
2229(5): call 0xfffff157(%rip)
222e(2): test %eax,%eax
2230(3): setnz %al
2233(5): jmp 0xffffff1d(%rip)
2238(8): nop 0x0(%rax,%rax,1)
2240(5): call 0xfffff900(%rip)
2245(7): movsxd 0x208e70(%rip),%rax
224c(5): mov $0x2,%esi
2251(5): mov 0xfffffff8(%rbx,%rax,8),%rdi
2256(5): call 0xfffff32a(%rip)
225b(2): test %eax,%eax
225d(3): setz %al
2260(5): jmp 0xfffffef0(%rip)
2265(3): nop (%rax)
2268(5): call 0xfffff8d8(%rip)
226d(7): movsxd 0x208e48(%rip),%rax
2274(3): mov %rsp,%rdx
2277(5): mov $0x1,%edi
227c(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2281(5): call 0xfffff24f(%rip)
2286(2): mov %eax,%edx
2288(2): xor %eax,%eax
228a(2): test %edx,%edx
228c(6): jnz 0xfffffec4(%rip)
2292(6): cmp $0x0,0x30(%rsp)
2298(3): setnle %al
229b(5): jmp 0xfffffeb5(%rip)
22a0(5): call 0xfffff8a0(%rip)
22a5(7): movsxd 0x208e10(%rip),%rax
22ac(5): mov $0x4,%esi
22b1(5): mov 0xfffffff8(%rbx,%rax,8),%rdi
22b6(5): call 0xfffff2ca(%rip)
22bb(2): test %eax,%eax
22bd(3): setz %al
22c0(5): jmp 0xfffffe90(%rip)
22c5(3): nop (%rax)
22c8(5): call 0xfffff878(%rip)
22cd(7): movsxd 0x208de8(%rip),%rax
22d4(3): mov %rsp,%rdx
22d7(5): mov $0x1,%edi
22dc(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
22e1(5): call 0xfffff1ef(%rip)
22e6(2): mov %eax,%edx
22e8(2): xor %eax,%eax
22ea(2): test %edx,%edx
22ec(6): jnz 0xfffffe64(%rip)
22f2(4): mov 0x18(%rsp),%eax
22f6(5): and $0xf000,%eax
22fb(5): cmp $0x1000,%eax
2300(3): setz %al
2303(5): jmp 0xfffffe4d(%rip)
2308(8): nop 0x0(%rax,%rax,1)
2310(5): call 0xfffff830(%rip)
2315(7): movsxd 0x208da0(%rip),%rax
231c(5): mov 0xfffffff8(%rbx,%rax,8),%rax
2321(3): cmp $0x0,(%rax)
2324(3): setnz %al
2327(5): jmp 0xfffffe29(%rip)
232c(4): nop 0x0(%rax)
2330(5): call 0xfffff810(%rip)
2335(7): movsxd 0x208d80(%rip),%rax
233c(3): mov %rsp,%rdx
233f(5): mov $0x1,%edi
2344(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2349(5): call 0xfffff187(%rip)
234e(2): mov %eax,%edx
2350(2): xor %eax,%eax
2352(2): test %edx,%edx
2354(6): jnz 0xfffffdfc(%rip)
235a(4): mov 0x18(%rsp),%eax
235e(3): shr $0x9,%eax
2361(3): and $0x1,%eax
2364(5): jmp 0xfffffdec(%rip)
2369(7): nop 0x0(%rax)
2370(5): call 0xfffff7d0(%rip)
2375(7): movsxd 0x208d40(%rip),%rax
237c(3): mov %rsp,%rdx
237f(5): mov $0x1,%edi
2384(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2389(5): call 0xfffff147(%rip)
238e(2): mov %eax,%edx
2390(2): xor %eax,%eax
2392(2): test %edx,%edx
2394(6): jnz 0xfffffdbc(%rip)
239a(4): mov 0x18(%rsp),%eax
239e(3): shr $0xa,%eax
23a1(3): and $0x1,%eax
23a4(5): jmp 0xfffffdac(%rip)
23a9(7): nop 0x0(%rax)
23b0(5): call 0xfffff790(%rip)
23b5(7): movsxd 0x208d00(%rip),%rax
23bc(3): mov %rsp,%rdx
23bf(5): mov $0x1,%edi
23c4(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
23c9(5): call 0xfffff107(%rip)
23ce(2): mov %eax,%edx
23d0(2): xor %eax,%eax
23d2(2): test %edx,%edx
23d4(6): jnz 0xfffffd7c(%rip)
23da(4): mov 0x18(%rsp),%eax
23de(5): and $0xf000,%eax
23e3(5): cmp $0x8000,%eax
23e8(3): setz %al
23eb(5): jmp 0xfffffd65(%rip)
23f0(5): call 0xfffff750(%rip)
23f5(7): movsxd 0x208cc0(%rip),%rax
23fc(3): mov %rsp,%rdx
23ff(5): mov $0x1,%edi
2404(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2409(5): call 0xfffff0c7(%rip)
240e(2): test %eax,%eax
2410(3): setz %al
2413(5): jmp 0xfffffd3d(%rip)
2418(8): nop 0x0(%rax,%rax,1)
2420(5): call 0xfffff720(%rip)
2425(7): movsxd 0x208c90(%rip),%rax
242c(3): mov %rsp,%rdx
242f(5): mov $0x1,%edi
2434(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2439(5): call 0xfffff097(%rip)
243e(2): mov %eax,%edx
2440(2): xor %eax,%eax
2442(2): test %edx,%edx
2444(6): jnz 0xfffffd0c(%rip)
244a(4): mov 0x18(%rsp),%eax
244e(5): and $0xf000,%eax
2453(5): cmp $0x4000,%eax
2458(3): setz %al
245b(5): jmp 0xfffffcf5(%rip)
2460(5): call 0xfffff6e0(%rip)
2465(7): movsxd 0x208c50(%rip),%rax
246c(3): mov %rsp,%rdx
246f(5): mov $0x1,%edi
2474(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2479(5): call 0xfffff057(%rip)
247e(2): mov %eax,%edx
2480(2): xor %eax,%eax
2482(2): test %edx,%edx
2484(6): jnz 0xfffffccc(%rip)
248a(4): mov 0x18(%rsp),%eax
248e(5): and $0xf000,%eax
2493(5): cmp $0x2000,%eax
2498(3): setz %al
249b(5): jmp 0xfffffcb5(%rip)
24a0(5): call 0xfffff6a0(%rip)
24a5(7): movsxd 0x208c10(%rip),%rax
24ac(3): mov %rsp,%rdx
24af(5): mov $0x1,%edi
24b4(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
24b9(5): call 0xfffff017(%rip)
24be(2): mov %eax,%edx
24c0(2): xor %eax,%eax
24c2(2): test %edx,%edx
24c4(6): jnz 0xfffffc8c(%rip)
24ca(4): mov 0x18(%rsp),%eax
24ce(5): and $0xf000,%eax
24d3(5): cmp $0x6000,%eax
24d8(3): setz %al
24db(5): jmp 0xfffffc75(%rip)
24e0(5): call 0xfffff660(%rip)
24e5(7): movsxd 0x208bd0(%rip),%rax
24ec(3): mov %rsp,%rdx
24ef(5): mov $0x1,%edi
24f4(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
24f9(5): call 0xffffefd7(%rip)
24fe(2): mov %eax,%edx
2500(2): xor %eax,%eax
2502(2): test %edx,%edx
2504(6): jnz 0xfffffc4c(%rip)
250a(4): mov 0x18(%rsp),%eax
250e(5): and $0xf000,%eax
2513(5): cmp $0xc000,%eax
2518(3): setz %al
251b(5): jmp 0xfffffc35(%rip)
2520(5): call 0xfffff620(%rip)
2525(7): movsxd 0x208b90(%rip),%rax
252c(3): mov %rsp,%rdx
252f(5): mov $0x1,%edi
2534(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2539(5): call 0xffffef97(%rip)
253e(2): test %eax,%eax
2540(6): jz 0x100(%rip)
2546(2): xor %eax,%eax
2548(5): jmp 0xfffffc08(%rip)
254d(3): nop (%rax)
2550(5): call 0xfffff5f0(%rip)
2555(7): movsxd 0x208b60(%rip),%rax
255c(3): mov %rsp,%rdx
255f(5): mov $0x1,%edi
2564(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2569(5): call 0xffffef67(%rip)
256e(2): test %eax,%eax
2570(2): jnz 0xffffffd6(%rip)
2572(2): xor %eax,%eax
2574(5): mov 0x58(%rsp),%rsi
2579(5): cmp %rsi,0x48(%rsp)
257e(5): mov 0x50(%rsp),%rcx
2583(5): mov 0x60(%rsp),%rdx
2588(6): jnle 0xfffffbc8(%rip)
258e(5): mov $0x1,%eax
2593(6): jl 0xfffffbbd(%rip)
2599(2): sub %ecx,%edx
259b(2): test %edx,%edx
259d(3): setnle %al
25a0(5): jmp 0xfffffbb0(%rip)
25a5(3): nop (%rax)
25a8(5): call 0xfffff598(%rip)
25ad(7): movsxd 0x208b08(%rip),%rax
25b4(3): mov %rsp,%rdx
25b7(5): mov $0x1,%edi
25bc(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
25c1(5): call 0xffffee2f(%rip)
25c6(2): mov %eax,%edx
25c8(2): xor %eax,%eax
25ca(2): test %edx,%edx
25cc(6): jnz 0xfffffb84(%rip)
25d2(4): mov 0x18(%rsp),%eax
25d6(5): and $0xf000,%eax
25db(5): cmp $0xa000,%eax
25e0(3): setz %al
25e3(5): jmp 0xfffffb6d(%rip)
25e8(8): nop 0x0(%rax,%rax,1)
25f0(5): call 0xfffff550(%rip)
25f5(7): movsxd 0x208ac0(%rip),%rax
25fc(3): mov %rsp,%rdx
25ff(5): mov $0x1,%edi
2604(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2609(5): call 0xffffeec7(%rip)
260e(2): test %eax,%eax
2610(6): jnz 0xffffff36(%rip)
2616(5): call 0xffffed1a(%rip)
261b(6): mov $0x0,(%rax)
2621(3): mov %rax,%rbx
2624(5): call 0xffffeeec(%rip)
2629(3): cmp $0xff,%eax
262c(2): mov %eax,%edx
262e(2): jz 0x70(%rip)
2630(4): cmp %edx,0x20(%rsp)
2634(3): setz %al
2637(5): jmp 0xfffffb19(%rip)
263c(4): nop 0x0(%rax)
2640(5): call 0xffffecf0(%rip)
2645(6): mov $0x0,(%rax)
264b(3): mov %rax,%rbx
264e(5): call 0xffffee02(%rip)
2653(3): cmp $0xff,%eax
2656(2): mov %eax,%edx
2658(2): jz 0x38(%rip)
265a(4): cmp %edx,0x1c(%rsp)
265e(3): setz %al
2661(5): jmp 0xfffffaef(%rip)
2666(5): call 0x2aaa(%rip)
266b(7): lea 0x578a(%rip),%rsi
2672(3): mov %rax,%rbx
2675(2): xor %edi,%edi
2677(5): mov $0x5,%edx
267c(5): call 0xffffed44(%rip)
2681(3): mov %rbx,%rsi
2684(3): mov %rax,%rdi
2687(2): xor %eax,%eax
2689(5): call 0xfffff2e7(%rip)
268e(2): nop 
2690(2): mov (%rbx),%esi
2692(2): xor %eax,%eax
2694(2): test %esi,%esi
2696(6): jnz 0xfffffaba(%rip)
269c(2): jmp 0xffffffbe(%rip)
269e(2): mov (%rbx),%ecx
26a0(2): xor %eax,%eax
26a2(2): test %ecx,%ecx
26a4(6): jnz 0xfffffaac(%rip)
26aa(2): jmp 0xffffff86(%rip)
26ac(5): call 0xffffed54(%rip)

"two_arguments" :
26c0(7): movsxd 0x2089f5(%rip),%rax
26c7(7): mov 0x2089e2(%rip),%r9
26ce(7): lea 0x5743(%rip),%rdi
26d5(5): mov $0x2,%ecx
26da(4): mov 0x0(%r9,%rax,8),%rdx
26de(3): mov %rax,%r8
26e1(8): lea 0x0(,%rax,8),%r10
26e9(3): mov %rdx,%rsi
26ec(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
26ee(3): setnbe %al
26f1(2): sbb $0x0,%al
26f3(2): test %al,%al
26f5(2): jz 0x1b(%rip)
26f7(3): cmp $0x2d,(%rdx)
26fa(2): jnz 0x2d(%rip)
26fc(4): cmp $0x0,0x1(%rdx)
2700(2): jz 0x27(%rip)
2702(4): cmp $0x0,0x2(%rdx)
2706(2): jnz 0x21(%rip)
2708(5): jmp 0xfffff9d8(%rip)
270d(3): nop (%rax)
2710(5): mov 0x8(%r9,%r10,1),%rax
2715(4): add $0x2,%r8d
2719(7): mov %r8d,0x20899c(%rip)
2720(3): cmp $0x0,(%rax)
2723(3): setz %al
2726(1): ret near (%rsp)
2727(4): sub $0x8,%rsp
272b(5): call 0xfffff3d5(%rip)

"posixtest" :
2730(4): sub $0x8,%rsp
2734(3): cmp $0x2,%edi
2737(6): jz 0xd1(%rip)
273d(6): jle 0x83(%rip)
2743(3): cmp $0x3,%edi
2746(2): jz 0x6a(%rip)
2748(3): cmp $0x4,%edi
274b(6): jnz 0xa5(%rip)
2751(7): movsxd 0x208964(%rip),%rdx
2758(7): mov 0x208951(%rip),%r9
275f(7): lea 0x56b2(%rip),%rdi
2766(5): mov $0x2,%ecx
276b(4): mov 0x0(%r9,%rdx,8),%r8
276f(3): mov %rdx,%rax
2772(8): lea 0x0(,%rdx,8),%r10
277a(3): mov %r8,%rsi
277d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
277f(3): setnbe %dl
2782(3): sbb $0x0,%dl
2785(2): test %dl,%dl
2787(6): jnz 0x91(%rip)
278d(3): add $0x1,%eax
2790(6): cmp 0x208922(%rip),%eax
2796(6): mov %eax,0x208920(%rip)
279c(6): jnl 0xce(%rip)
27a2(5): call 0x4ae(%rip)
27a7(4): add $0x8,%rsp
27ab(3): xor $0x1,%eax
27ae(1): ret near (%rsp)
27af(1): nop 
27b0(4): add $0x8,%rsp
27b4(5): jmp 0x49c(%rip)
27b9(7): nop 0x0(%rax)
27c0(3): cmp $0x1,%edi
27c3(2): jnz 0x2d(%rip)
27c5(7): movsxd 0x2088f0(%rip),%rax
27cc(3): lea 0x1(%rax),%edx
27cf(6): mov %edx,0x2088e7(%rip)
27d5(7): mov 0x2088d4(%rip),%rdx
27dc(4): mov 0x0(%rdx,%rax,8),%rax
27e0(3): cmp $0x0,(%rax)
27e3(3): setnz %al
27e6(4): add $0x8,%rsp
27ea(1): ret near (%rsp)
27eb(5): nop 0x0(%rax,%rax,1)
27f0(6): mov 0x2088c6(%rip),%eax
27f6(6): cmp 0x2088bc(%rip),%eax
27fc(2): jnl 0x6e(%rip)
27fe(4): add $0x8,%rsp
2802(2): jmp 0x6e(%rip)
2804(4): nop 0x0(%rax)
2808(4): add $0x8,%rsp
280c(5): jmp 0xfffffeb4(%rip)
2811(7): nop 0x0(%rax)
2818(7): lea 0x55fb(%rip),%rdi
281f(5): mov $0x2,%ecx
2824(3): mov %r8,%rsi
2827(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2829(3): setnbe %dl
282c(3): sbb $0x0,%dl
282f(2): test %dl,%dl
2831(2): jnz 0xffffffc5(%rip)
2833(5): mov 0x18(%r9,%r10,1),%rsi
2838(7): lea 0x6b0a(%rip),%rdi
283f(5): mov $0x2,%ecx
2844(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2846(3): setnbe %dl
2849(3): sbb $0x0,%dl
284c(2): test %dl,%dl
284e(2): jnz 0xffffffa8(%rip)
2850(3): add $0x1,%eax
2853(6): mov %eax,0x208863(%rip)
2859(5): call 0xfffffe67(%rip)
285e(7): add $0x1,0x208857(%rip)
2865(5): jmp 0xffffff81(%rip)
286a(5): call 0xfffff296(%rip)

"or" :
2870(2): push %r15
2872(2): push %r14
2874(2): push %r13
2876(2): push %r12
2878(1): push %rbp
2879(1): push %rbx
287a(4): sub $0x18,%rsp
287e(7): mov 0x208837(%rip),%r11d
2885(7): mov 0x20882c(%rip),%r12d
288c(5): mov $0x0,0xf(%rsp)
2891(7): nop 0x0(%rax)
2898(3): cmp %r12d,%r11d
289b(5): mov $0x1,%ebx
28a0(7): lea 0x5597(%rip),%rbp
28a7(6): jnl 0x1b7(%rip)
28ad(3): nop (%rax)
28b0(7): mov 0x2087f9(%rip),%r15
28b7(3): movsxd %r11d,%r9
28ba(4): mov 0x0(%r15,%r9,8),%r10
28be(4): movzx (%r10),%r13d
28c2(4): cmp $0x21,%r13b
28c6(6): jnz 0x2e1(%rip)
28cc(5): cmp $0x0,0x1(%r10)
28d1(6): jnz 0x2de(%rip)
28d7(4): lea 0x1(%r11),%r9d
28db(3): cmp %r12d,%r9d
28de(7): mov %r9d,0x2087d7(%rip)
28e5(6): jnl 0x179(%rip)
28eb(5): lea 0xfffffffe(%r12),%eax
28f0(3): movsxd %r9d,%r9
28f3(2): xor %ecx,%ecx
28f5(6): mov $0x1,%r14d
28fb(3): sub %r11d,%eax
28fe(5): lea 0x1(%r9,%rax,1),%rsi
2903(2): jmp 0x2a(%rip)
2905(3): nop (%rax)
2908(5): cmp $0x0,0x1(%r10)
290d(6): jnz 0x15b(%rip)
2913(4): lea 0x1(%r9),%eax
2917(4): add $0x1,%r9
291b(3): cmp %rsi,%r9
291e(6): jz 0x2b0(%rip)
2924(4): xor $0x1,%r14d
2928(5): mov $0x1,%ecx
292d(4): mov 0x0(%r15,%r9,8),%r10
2931(3): mov %r9d,%r11d
2934(4): movzx (%r10),%eax
2938(2): cmp $0x21,%al
293a(2): jz 0xffffffce(%rip)
293c(2): test %cl,%cl
293e(6): jnz 0x284(%rip)
2944(3): mov %eax,%r13d
2947(4): cmp $0x28,%r13b
294b(6): jnz 0x12d(%rip)
2951(5): cmp $0x0,0x1(%r10)
2956(6): jnz 0x122(%rip)
295c(4): lea 0x1(%r11),%r9d
2960(3): cmp %r12d,%r9d
2963(7): mov %r9d,0x208752(%rip)
296a(6): jnl 0xf4(%rip)
2970(4): lea 0x2(%r11),%eax
2974(3): cmp %r12d,%eax
2977(6): jnl 0x240(%rip)
297d(2): cwde 
297f(6): mov $0x1,%r8d
2985(4): lea 0x0(%r15,%rax,8),%r10
2989(5): lea 0xffffffff(%r12),%eax
298e(3): sub %r11d,%eax
2991(3): mov %eax,%r11d
2994(3): mov (%r10),%rsi
2997(7): lea 0x69ab(%rip),%rdi
299e(5): mov $0x2,%ecx
29a3(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
29a5(3): setnbe %al
29a8(2): sbb $0x0,%al
29aa(2): test %al,%al
29ac(2): jz 0x1c(%rip)
29ae(4): cmp $0x4,%r8d
29b2(6): jz 0x1ae(%rip)
29b8(4): add $0x1,%r8d
29bc(4): add $0x8,%r10
29c0(3): cmp %r8d,%r11d
29c3(2): jnz 0xffffffd1(%rip)
29c5(3): nop (%rax)
29c8(3): mov %r8d,%edi
29cb(5): call 0xfffffd65(%rip)
29d0(7): movsxd 0x2086e5(%rip),%rcx
29d7(7): mov 0x2086d2(%rip),%rdx
29de(4): mov 0x0(%rdx,%rcx,8),%rsi
29e2(3): mov %rcx,%r11
29e5(3): test %rsi,%rsi
29e8(6): jz 0x232(%rip)
29ee(3): cmp $0x29,(%rsi)
29f1(6): jnz 0x1e8(%rip)
29f7(4): cmp $0x0,0x1(%rsi)
29fb(6): jnz 0x1de(%rip)
2a01(7): mov 0x2086b0(%rip),%r12d
2a08(4): add $0x1,%r11d
2a0c(7): mov %r11d,0x2086a9(%rip)
2a13(3): xor %eax,%r14d
2a16(3): and %r14d,%ebx
2a19(3): cmp %r11d,%r12d
2a1c(6): jle 0xcb(%rip)
2a22(7): mov 0x208687(%rip),%rcx
2a29(3): movsxd %r11d,%rax
2a2c(3): mov %rbp,%rdi
2a2f(4): mov 0x0(%rcx,%rax,8),%r8
2a33(5): mov $0x3,%ecx
2a38(3): mov %r8,%rsi
2a3b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2a3d(3): setnbe %al
2a40(2): sbb $0x0,%al
2a42(2): test %al,%al
2a44(6): jnz 0xea(%rip)
2a4a(4): add $0x1,%r11d
2a4e(3): cmp %r12d,%r11d
2a51(7): mov %r11d,0x208664(%rip)
2a58(6): jl 0xfffffe58(%rip)
2a5e(5): call 0xfffff0a2(%rip)
2a63(5): nop 0x0(%rax,%rax,1)
2a68(2): test %cl,%cl
2a6a(2): jz 0xe(%rip)
2a6c(7): mov %r9d,0x208649(%rip)
2a73(5): nop 0x0(%rax,%rax,1)
2a78(3): mov %r12d,%eax
2a7b(3): sub %r11d,%eax
2a7e(3): cmp $0x3,%eax
2a81(2): jle 0x7f(%rip)
2a83(7): lea 0x533c(%rip),%rdi
2a8a(5): mov $0x3,%ecx
2a8f(3): mov %r10,%rsi
2a92(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2a94(3): setnbe %al
2a97(2): sbb $0x0,%al
2a99(2): test %al,%al
2a9b(2): jnz 0x14(%rip)
2a9d(5): mov 0x10(%r15,%r9,8),%rdi
2aa2(5): call 0xffffed5e(%rip)
2aa7(2): test %al,%al
2aa9(6): jnz 0xe1(%rip)
2aaf(5): mov 0x8(%r15,%r9,8),%rdi
2ab4(5): call 0xffffed4c(%rip)
2ab9(2): test %al,%al
2abb(6): jnz 0xb5(%rip)
2ac1(4): cmp $0x2d,%r13b
2ac5(2): jz 0x43(%rip)
2ac7(3): test %r13b,%r13b
2aca(3): setnz %al
2acd(4): add $0x1,%r11d
2ad1(3): xor %eax,%r14d
2ad4(7): mov %r11d,0x2085e1(%rip)
2adb(3): and %r14d,%ebx
2ade(3): cmp %r11d,%r12d
2ae1(6): jnle 0xffffff41(%rip)
2ae7(4): or %bl,0xf(%rsp)
2aeb(5): movzx 0xf(%rsp),%eax
2af0(4): add $0x18,%rsp
2af4(1): pop %rbx
2af5(1): pop %rbp
2af6(2): pop %r12
2af8(2): pop %r13
2afa(2): pop %r14
2afc(2): pop %r15
2afe(1): ret near (%rsp)
2aff(1): nop 
2b00(2): jz 0xffffffaf(%rip)
2b02(4): cmp $0x2d,%r13b
2b06(2): jnz 0xffffffc1(%rip)
2b08(5): cmp $0x0,0x1(%r10)
2b0d(2): jz 0xffffffba(%rip)
2b0f(5): cmp $0x0,0x2(%r10)
2b14(2): jnz 0xffffffb3(%rip)
2b16(5): call 0xfffff5ca(%rip)
2b1b(7): mov 0x20859a(%rip),%r11d
2b22(7): mov 0x20858f(%rip),%r12d
2b29(5): jmp 0xfffffeea(%rip)
2b2e(7): lea 0x530c(%rip),%rdi
2b35(5): mov $0x3,%ecx
2b3a(3): mov %r8,%rsi
2b3d(4): or %bl,0xf(%rsp)
2b41(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2b43(3): setnbe %al
2b46(2): sbb $0x0,%al
2b48(2): test %al,%al
2b4a(2): jnz 0xffffffa1(%rip)
2b4c(4): add $0x1,%r11d
2b50(7): mov %r11d,0x208565(%rip)
2b57(5): jmp 0xfffffd41(%rip)
2b5c(4): nop 0x0(%rax)
2b60(3): mov %r12d,%r8d
2b63(3): sub %r9d,%r8d
2b66(5): jmp 0xfffffe62(%rip)
2b6b(5): nop 0x0(%rax,%rax,1)
2b70(2): xor %edi,%edi
2b72(5): call 0xffffeffe(%rip)
2b77(7): mov 0x20853e(%rip),%r11d
2b7e(7): mov 0x208533(%rip),%r12d
2b85(5): jmp 0xfffffe8e(%rip)
2b8a(5): mov $0x1,%edi
2b8f(5): call 0xffffefe1(%rip)
2b94(7): mov 0x208521(%rip),%r11d
2b9b(7): mov 0x208516(%rip),%r12d
2ba2(5): jmp 0xfffffe71(%rip)
2ba7(3): xor %r14d,%r14d
2baa(5): jmp 0xfffffd9d(%rip)
2baf(3): xor %r14d,%r14d
2bb2(5): jmp 0xfffffec6(%rip)
2bb7(6): mov $0x1,%r8d
2bbd(5): jmp 0xfffffe0b(%rip)
2bc2(7): mov %r9d,0x2084f3(%rip)
2bc9(5): jmp 0xfffffd7b(%rip)
2bce(6): mov %eax,0x2084e8(%rip)
2bd4(5): jmp 0xfffffe8a(%rip)
2bd9(5): mov $0x1,%edi
2bde(5): call 0x2512(%rip)
2be3(7): lea 0x675f(%rip),%rsi
2bea(2): xor %edi,%edi
2bec(3): mov %rax,%rbp
2bef(5): call 0x2501(%rip)
2bf4(7): lea 0x522d(%rip),%rsi
2bfb(3): mov %rax,%rbx
2bfe(5): mov $0x5,%edx
2c03(2): xor %edi,%edi
2c05(5): call 0xffffe7bb(%rip)
2c0a(3): mov %rbp,%rdx
2c0d(3): mov %rax,%rdi
2c10(3): mov %rbx,%rsi
2c13(2): xor %eax,%eax
2c15(5): call 0xffffed5b(%rip)
2c1a(7): lea 0x6728(%rip),%rdi
2c21(5): call 0x24ef(%rip)
2c26(7): lea 0x51ef(%rip),%rsi
2c2d(3): mov %rax,%rbx
2c30(2): xor %edi,%edi
2c32(5): mov $0x5,%edx
2c37(5): call 0xffffe789(%rip)
2c3c(3): mov %rbx,%rsi
2c3f(3): mov %rax,%rdi
2c42(2): xor %eax,%eax
2c44(5): call 0xffffed2c(%rip)

"three_arguments" :
2c50(7): movsxd 0x208465(%rip),%rax
2c57(7): mov 0x208452(%rip),%r10
2c5e(1): push %rbx
2c5f(3): mov %rax,%r9
2c62(4): add $0x1,%rax
2c66(4): mov 0x0(%r10,%rax,8),%r11
2c6a(8): lea 0x0(,%rax,8),%rbx
2c72(3): mov %r11,%rdi
2c75(5): call 0xffffeb8b(%rip)
2c7a(2): test %al,%al
2c7c(6): jnz 0xe4(%rip)
2c82(5): mov 0xfffffff8(%r10,%rbx,1),%rdx
2c87(7): lea 0x518a(%rip),%rdi
2c8e(5): mov $0x2,%ecx
2c93(3): mov %rdx,%rsi
2c96(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2c98(3): setnbe %al
2c9b(2): sbb $0x0,%al
2c9d(2): test %al,%al
2c9f(2): jnz 0x29(%rip)
2ca1(4): add $0x1,%r9d
2ca5(7): cmp 0x20840c(%rip),%r9d
2cac(7): mov %r9d,0x208409(%rip)
2cb3(6): jnl 0xe0(%rip)
2cb9(5): call 0xfffffa07(%rip)
2cbe(1): pop %rbx
2cbf(3): xor $0x1,%eax
2cc2(1): ret near (%rsp)
2cc3(5): nop 0x0(%rax,%rax,1)
2cc8(7): lea 0x514b(%rip),%rdi
2ccf(5): mov $0x2,%ecx
2cd4(3): mov %rdx,%rsi
2cd7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2cd9(3): setnbe %al
2cdc(2): sbb $0x0,%al
2cde(2): test %al,%al
2ce0(2): jnz 0x38(%rip)
2ce2(5): mov 0x8(%r10,%rbx,1),%rsi
2ce7(7): lea 0x665b(%rip),%rdi
2cee(5): mov $0x2,%ecx
2cf3(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2cf5(3): setnbe %al
2cf8(2): sbb $0x0,%al
2cfa(2): test %al,%al
2cfc(2): jnz 0x1c(%rip)
2cfe(4): cmp $0x0,(%r11)
2d02(1): pop %rbx
2d03(3): setnz %al
2d06(4): add $0x3,%r9d
2d0a(7): mov %r9d,0x2083ab(%rip)
2d11(1): ret near (%rsp)
2d12(6): nop 0x0(%rax,%rax,1)
2d18(7): lea 0x511f(%rip),%rdi
2d1f(5): mov $0x3,%ecx
2d24(3): mov %r11,%rsi
2d27(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d29(3): setnbe %al
2d2c(2): sbb $0x0,%al
2d2e(2): test %al,%al
2d30(2): jz 0x1c(%rip)
2d32(7): lea 0x5108(%rip),%rdi
2d39(5): mov $0x3,%ecx
2d3e(3): mov %r11,%rsi
2d41(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d43(3): setnbe %al
2d46(2): sbb $0x0,%al
2d48(2): test %al,%al
2d4a(2): jnz 0x1e(%rip)
2d4c(7): cmp 0x208365(%rip),%r9d
2d53(2): jnl 0x40(%rip)
2d55(1): pop %rbx
2d56(5): jmp 0xfffffb1a(%rip)
2d5b(5): nop 0x0(%rax,%rax,1)
2d60(1): pop %rbx
2d61(2): xor %edi,%edi
2d63(5): jmp 0xffffee0d(%rip)
2d68(3): mov %r11,%rdi
2d6b(5): call 0x23a5(%rip)
2d70(7): lea 0x50cd(%rip),%rsi
2d77(3): mov %rax,%rbx
2d7a(2): xor %edi,%edi
2d7c(5): mov $0x5,%edx
2d81(5): call 0xffffe63f(%rip)
2d86(3): mov %rbx,%rsi
2d89(3): mov %rax,%rdi
2d8c(2): xor %eax,%eax
2d8e(5): call 0xffffebe2(%rip)
2d93(5): call 0xffffed6d(%rip)

"usage" :
2da0(2): push %r13
2da2(2): push %r12
2da4(1): push %rbp
2da5(1): push %rbx
2da6(2): mov %edi,%ebp
2da8(7): sub $0x88,%rsp
2daf(9): mov $0x28,%rax
2db8(5): mov %rax,0x78(%rsp)
2dbd(2): xor %eax,%eax
2dbf(2): test %edi,%edi
2dc1(2): jz 0x3c(%rip)
2dc3(7): lea 0x5246(%rip),%rsi
2dca(7): mov 0x2082ff(%rip),%rbx
2dd1(5): mov $0x5,%edx
2dd6(2): xor %edi,%edi
2dd8(5): call 0xffffe5e8(%rip)
2ddd(7): mov 0x2082bc(%rip),%rdi
2de4(3): mov %rax,%rdx
2de7(3): mov %rbx,%rcx
2dea(5): mov $0x1,%esi
2def(2): xor %eax,%eax
2df1(5): call 0xffffe7cf(%rip)
2df6(2): mov %ebp,%edi
2df8(5): call 0xffffe7a8(%rip)
2dfd(7): mov 0x208284(%rip),%rbx
2e04(7): lea 0x522d(%rip),%rsi
2e0b(5): mov $0x5,%edx
2e10(2): xor %edi,%edi
2e12(5): call 0xffffe5ae(%rip)
2e17(3): mov %rbx,%rsi
2e1a(3): mov %rax,%rdi
2e1d(5): call 0xffffe653(%rip)
2e22(7): mov 0x20825f(%rip),%rbx
2e29(7): lea 0x5260(%rip),%rsi
2e30(5): mov $0x5,%edx
2e35(2): xor %edi,%edi
2e37(5): call 0xffffe589(%rip)
2e3c(3): mov %rbx,%rsi
2e3f(3): mov %rax,%rdi
2e42(5): call 0xffffe62e(%rip)
2e47(7): mov 0x20823a(%rip),%rbx
2e4e(7): lea 0x5273(%rip),%rsi
2e55(5): mov $0x5,%edx
2e5a(2): xor %edi,%edi
2e5c(5): call 0xffffe564(%rip)
2e61(3): mov %rbx,%rsi
2e64(3): mov %rax,%rdi
2e67(5): call 0xffffe609(%rip)
2e6c(7): mov 0x208215(%rip),%rbx
2e73(7): lea 0x527e(%rip),%rsi
2e7a(5): mov $0x5,%edx
2e7f(2): xor %edi,%edi
2e81(5): call 0xffffe53f(%rip)
2e86(3): mov %rbx,%rsi
2e89(3): mov %rax,%rdi
2e8c(5): call 0xffffe5e4(%rip)
2e91(7): mov 0x2081f0(%rip),%rbx
2e98(7): lea 0x5291(%rip),%rsi
2e9f(5): mov $0x5,%edx
2ea4(2): xor %edi,%edi
2ea6(5): call 0xffffe51a(%rip)
2eab(3): mov %rbx,%rsi
2eae(3): mov %rax,%rdi
2eb1(5): call 0xffffe5bf(%rip)
2eb6(7): mov 0x2081cb(%rip),%rbx
2ebd(7): lea 0x52e4(%rip),%rsi
2ec4(5): mov $0x5,%edx
2ec9(2): xor %edi,%edi
2ecb(5): call 0xffffe4f5(%rip)
2ed0(3): mov %rbx,%rsi
2ed3(3): mov %rax,%rdi
2ed6(5): call 0xffffe59a(%rip)
2edb(7): mov 0x2081a6(%rip),%rbx
2ee2(7): lea 0x53bf(%rip),%rsi
2ee9(5): mov $0x5,%edx
2eee(2): xor %edi,%edi
2ef0(5): call 0xffffe4d0(%rip)
2ef5(3): mov %rbx,%rsi
2ef8(3): mov %rax,%rdi
2efb(5): call 0xffffe575(%rip)
2f00(7): mov 0x208181(%rip),%rbx
2f07(7): lea 0x549a(%rip),%rsi
2f0e(5): mov $0x5,%edx
2f13(2): xor %edi,%edi
2f15(5): call 0xffffe4ab(%rip)
2f1a(3): mov %rbx,%rsi
2f1d(3): mov %rax,%rdi
2f20(5): call 0xffffe550(%rip)
2f25(7): mov 0x20815c(%rip),%rbx
2f2c(7): lea 0x55ed(%rip),%rsi
2f33(5): mov $0x5,%edx
2f38(2): xor %edi,%edi
2f3a(5): call 0xffffe486(%rip)
2f3f(3): mov %rbx,%rsi
2f42(3): mov %rax,%rdi
2f45(5): call 0xffffe52b(%rip)
2f4a(7): mov 0x208137(%rip),%rbx
2f51(7): lea 0x5688(%rip),%rsi
2f58(5): mov $0x5,%edx
2f5d(2): xor %edi,%edi
2f5f(5): call 0xffffe461(%rip)
2f64(3): mov %rbx,%rsi
2f67(3): mov %rax,%rdi
2f6a(5): call 0xffffe506(%rip)
2f6f(7): mov 0x208112(%rip),%rbx
2f76(7): lea 0x5713(%rip),%rsi
2f7d(5): mov $0x5,%edx
2f82(2): xor %edi,%edi
2f84(5): call 0xffffe43c(%rip)
2f89(3): mov %rbx,%rsi
2f8c(3): mov %rax,%rdi
2f8f(5): call 0xffffe4e1(%rip)
2f94(7): mov 0x2080ed(%rip),%rbx
2f9b(7): lea 0x5806(%rip),%rsi
2fa2(5): mov $0x5,%edx
2fa7(2): xor %edi,%edi
2fa9(5): call 0xffffe417(%rip)
2fae(3): mov %rbx,%rsi
2fb1(3): mov %rax,%rdi
2fb4(5): call 0xffffe4bc(%rip)
2fb9(7): mov 0x2080c8(%rip),%rbx
2fc0(7): lea 0x5949(%rip),%rsi
2fc7(5): mov $0x5,%edx
2fcc(2): xor %edi,%edi
2fce(5): call 0xffffe3f2(%rip)
2fd3(3): mov %rbx,%rsi
2fd6(3): mov %rax,%rdi
2fd9(5): call 0xffffe497(%rip)
2fde(7): mov 0x2080a3(%rip),%rbx
2fe5(7): lea 0x5a44(%rip),%rsi
2fec(5): mov $0x5,%edx
2ff1(2): xor %edi,%edi
2ff3(5): call 0xffffe3cd(%rip)
2ff8(3): mov %rbx,%rsi
2ffb(3): mov %rax,%rdi
2ffe(5): call 0xffffe472(%rip)
3003(7): mov 0x20807e(%rip),%rbx
300a(7): lea 0x5b07(%rip),%rsi
3011(5): mov $0x5,%edx
3016(2): xor %edi,%edi
3018(5): call 0xffffe3a8(%rip)
301d(3): mov %rbx,%rsi
3020(3): mov %rax,%rdi
3023(5): call 0xffffe44d(%rip)
3028(7): mov 0x208059(%rip),%rbx
302f(7): lea 0x5b62(%rip),%rsi
3036(5): mov $0x5,%edx
303b(2): xor %edi,%edi
303d(5): call 0xffffe383(%rip)
3042(3): mov %rbx,%rsi
3045(3): mov %rax,%rdi
3048(5): call 0xffffe428(%rip)
304d(7): lea 0x4e12(%rip),%rsi
3054(5): mov $0x5,%edx
3059(2): xor %edi,%edi
305b(5): call 0xffffe365(%rip)
3060(7): lea 0x5bb9(%rip),%rsi
3067(3): mov %rax,%rbx
306a(5): mov $0x5,%edx
306f(2): xor %edi,%edi
3071(5): call 0xffffe34f(%rip)
3076(3): mov %rbx,%rdx
3079(3): mov %rax,%rsi
307c(5): mov $0x1,%edi
3081(2): xor %eax,%eax
3083(7): lea 0x4dd7(%rip),%rbx
308a(5): call 0xffffe4c6(%rip)
308f(7): lea 0x4ddc(%rip),%rax
3096(7): lea 0x4e16(%rip),%rcx
309d(9): mov $0x0,0x60(%rsp)
30a6(9): mov $0x0,0x68(%rsp)
30af(3): mov %rsp,%rdx
30b2(4): mov %rax,(%rsp)
30b6(7): lea 0x4db7(%rip),%rax
30bd(5): mov %rcx,0x30(%rsp)
30c2(7): lea 0x4df4(%rip),%rcx
30c9(5): mov %rax,0x8(%rsp)
30ce(7): lea 0x4e17(%rip),%rax
30d5(5): mov %rcx,0x40(%rsp)
30da(7): lea 0x4de6(%rip),%rcx
30e1(5): mov %rax,0x10(%rsp)
30e6(7): lea 0x4d97(%rip),%rax
30ed(5): mov %rcx,0x50(%rsp)
30f2(5): mov %rax,0x18(%rsp)
30f7(7): lea 0x4d9c(%rip),%rax
30fe(5): mov %rax,0x20(%rsp)
3103(7): lea 0x4d9a(%rip),%rax
310a(5): mov %rax,0x28(%rsp)
310f(5): mov %rax,0x38(%rsp)
3114(5): mov %rax,0x48(%rsp)
3119(5): mov %rax,0x58(%rsp)
311e(2): nop 
3120(4): add $0x10,%rdx
3124(3): mov (%rdx),%rdi
3127(3): test %rdi,%rdi
312a(2): jz 0x15(%rip)
312c(5): mov $0x5,%ecx
3131(3): mov %rbx,%rsi
3134(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3136(3): setnbe %al
3139(2): sbb $0x0,%al
313b(2): test %al,%al
313d(2): jnz 0xffffffe3(%rip)
313f(4): mov 0x8(%rdx),%r12
3143(2): xor %edi,%edi
3145(5): mov $0x5,%edx
314a(7): lea 0x4d80(%rip),%rsi
3151(3): test %r12,%r12
3154(6): jz 0xc7(%rip)
315a(5): call 0xffffe266(%rip)
315f(7): lea 0x5b7a(%rip),%rcx
3166(7): lea 0x4d7b(%rip),%rdx
316d(3): mov %rax,%rsi
3170(5): mov $0x1,%edi
3175(2): xor %eax,%eax
3177(5): call 0xffffe3d9(%rip)
317c(2): xor %esi,%esi
317e(5): mov $0x5,%edi
3183(5): call 0xffffe3bd(%rip)
3188(3): test %rax,%rax
318b(2): jz 0x1e(%rip)
318d(7): lea 0x4d62(%rip),%rsi
3194(5): mov $0x3,%edx
3199(3): mov %rax,%rdi
319c(5): call 0xffffe1b4(%rip)
31a1(2): test %eax,%eax
31a3(6): jnz 0x10d(%rip)
31a9(7): lea 0x4d4a(%rip),%rsi
31b0(2): xor %edi,%edi
31b2(5): mov $0x5,%edx
31b7(5): call 0xffffe209(%rip)
31bc(7): lea 0x4c9e(%rip),%rcx
31c3(7): lea 0x5b16(%rip),%rdx
31ca(3): mov %rax,%rsi
31cd(5): mov $0x1,%edi
31d2(2): xor %eax,%eax
31d4(5): call 0xffffe37c(%rip)
31d9(3): cmp %rbx,%r12
31dc(7): lea 0x4d04(%rip),%rcx
31e3(7): lea 0x4ca4(%rip),%rbx
31ea(4): cmovne %rcx,%rbx
31ee(7): lea 0x5b5b(%rip),%rsi
31f5(2): xor %edi,%edi
31f7(5): mov $0x5,%edx
31fc(5): call 0xffffe1c4(%rip)
3201(3): mov %rbx,%rcx
3204(3): mov %rax,%rsi
3207(3): mov %r12,%rdx
320a(5): mov $0x1,%edi
320f(2): xor %eax,%eax
3211(5): call 0xffffe33f(%rip)
3216(5): jmp 0xfffffbe0(%rip)
321b(5): call 0xffffe1a5(%rip)
3220(7): lea 0x5ab9(%rip),%rcx
3227(7): lea 0x4cba(%rip),%rdx
322e(3): mov %rax,%rsi
3231(5): mov $0x1,%edi
3236(2): xor %eax,%eax
3238(5): call 0xffffe318(%rip)
323d(2): xor %esi,%esi
323f(5): mov $0x5,%edi
3244(5): call 0xffffe2fc(%rip)
3249(3): test %rax,%rax
324c(2): jz 0x1a(%rip)
324e(7): lea 0x4ca1(%rip),%rsi
3255(5): mov $0x3,%edx
325a(3): mov %rax,%rdi
325d(5): call 0xffffe0f3(%rip)
3262(2): test %eax,%eax
3264(2): jnz 0x45(%rip)
3266(7): lea 0x4c8d(%rip),%rsi
326d(5): mov $0x5,%edx
3272(2): xor %edi,%edi
3274(7): lea 0x4be6(%rip),%r12
327b(7): lea 0x4c0c(%rip),%rbx
3282(5): call 0xffffe13e(%rip)
3287(7): lea 0x4bd3(%rip),%rcx
328e(7): lea 0x5a4b(%rip),%rdx
3295(3): mov %rax,%rsi
3298(5): mov $0x1,%edi
329d(2): xor %eax,%eax
329f(5): call 0xffffe2b1(%rip)
32a4(5): jmp 0xffffff4a(%rip)
32a9(7): lea 0x4bb1(%rip),%r12
32b0(7): mov 0x207dd1(%rip),%r13
32b7(7): lea 0x5a4a(%rip),%rsi
32be(2): xor %edi,%edi
32c0(5): mov $0x5,%edx
32c5(5): call 0xffffe0fb(%rip)
32ca(3): mov %r13,%rsi
32cd(3): mov %rax,%rdi
32d0(5): call 0xffffe1a0(%rip)
32d5(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
32e0(7): mov %rdi,0x207de1(%rip)
32e7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
32f0(7): mov %dil,0x207dc9(%rip)
32f7(1): ret near (%rsp)

"close_stdout" :
3300(1): push %rbp
3301(1): push %rbx
3302(4): sub $0x8,%rsp
3306(7): mov 0x207d7b(%rip),%rdi
330d(5): call 0x2743(%rip)
3312(2): test %eax,%eax
3314(2): jz 0x18(%rip)
3316(5): call 0xffffe01a(%rip)
331b(7): cmp $0x0,0x207d9e(%rip)
3322(3): mov %rax,%rbx
3325(2): jz 0x1e(%rip)
3327(3): cmp $0x20,(%rax)
332a(2): jnz 0x19(%rip)
332c(7): mov 0x207d6d(%rip),%rdi
3333(5): call 0x271d(%rip)
3338(2): test %eax,%eax
333a(2): jnz 0x48(%rip)
333c(4): add $0x8,%rsp
3340(1): pop %rbx
3341(1): pop %rbp
3342(1): ret near (%rsp)
3343(7): lea 0x5a39(%rip),%rsi
334a(2): xor %edi,%edi
334c(5): mov $0x5,%edx
3351(5): call 0xffffe06f(%rip)
3356(7): mov 0x207d6b(%rip),%rdi
335d(3): mov %rax,%rbp
3360(3): test %rdi,%rdi
3363(2): jz 0x2a(%rip)
3365(5): call 0x1bab(%rip)
336a(2): mov (%rbx),%esi
336c(7): lea 0x5a1c(%rip),%rdx
3373(3): mov %rax,%rcx
3376(3): mov %rbp,%r8
3379(2): xor %edi,%edi
337b(2): xor %eax,%eax
337d(5): call 0xffffe1e3(%rip)
3382(6): mov 0x207c88(%rip),%edi
3388(5): call 0xffffdfd8(%rip)
338d(2): mov (%rbx),%esi
338f(7): lea 0x59fd(%rip),%rdx
3396(3): mov %rax,%rcx
3399(2): xor %edi,%edi
339b(2): xor %eax,%eax
339d(5): call 0xffffe1c3(%rip)
33a2(2): jmp 0xffffffe0(%rip)

"umaxtostr" :
33b0(4): lea 0x14(%rsi),%rcx
33b4(4): mov $0x0,0x14(%rsi)
33b8(a): mov $0x-3689348814741910323,%rsi
33c2(6): nop 0x0(%rax,%rax,1)
33c8(3): mov %rdi,%rax
33cb(4): sub $0x1,%rcx
33cf(3): mul %rax,%rsi,%rdx
33d2(4): shr $0x3,%rdx
33d6(4): lea 0x0(%rdx,%rdx,4),%rax
33da(3): add %rax,%rax
33dd(3): sub %rax,%rdi
33e0(3): add $0x30,%edi
33e3(3): test %rdx,%rdx
33e6(3): mov %dil,(%rcx)
33e9(3): mov %rdx,%rdi
33ec(2): jnz 0xffffffdc(%rip)
33ee(3): mov %rcx,%rax
33f1(1): ret near (%rsp)

"set_program_name" :
3400(3): test %rdi,%rdi
3403(1): push %rbx
3404(2): jz 0x79(%rip)
3406(5): mov $0x2f,%esi
340b(3): mov %rdi,%rbx
340e(5): call 0xffffe012(%rip)
3413(3): test %rax,%rax
3416(2): jz 0x57(%rip)
3418(4): lea 0x1(%rax),%r8
341c(3): mov %r8,%rdx
341f(3): sub %rbx,%rdx
3422(4): cmp $0x6,%rdx
3426(2): jle 0x47(%rip)
3428(4): lea 0xfffffffa(%rax),%rsi
342c(7): lea 0x599d(%rip),%rdi
3433(5): mov $0x7,%ecx
3438(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
343a(3): setnbe %dl
343d(3): sbb $0x0,%dl
3440(2): test %dl,%dl
3442(2): jnz 0x2b(%rip)
3444(7): lea 0x598d(%rip),%rdi
344b(5): mov $0x3,%ecx
3450(3): mov %r8,%rsi
3453(3): mov %r8,%rbx
3456(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3458(3): setnbe %dl
345b(3): sbb $0x0,%dl
345e(2): test %dl,%dl
3460(2): jnz 0xd(%rip)
3462(4): lea 0x4(%rax),%rbx
3466(7): mov %rbx,0x207c13(%rip)
346d(7): mov %rbx,0x207c5c(%rip)
3474(7): mov %rbx,0x207c15(%rip)
347b(1): pop %rbx
347c(1): ret near (%rsp)
347d(7): mov 0x207c1c(%rip),%rcx
3484(7): lea 0x590d(%rip),%rdi
348b(5): mov $0x37,%edx
3490(5): mov $0x1,%esi
3495(5): call 0xffffe11b(%rip)
349a(5): call 0xffffde86(%rip)

"gettext_quote.part.1" :
34a0(1): push %rbp
34a1(1): push %rbx
34a2(3): mov %rdi,%rbp
34a5(2): mov %esi,%ebx
34a7(4): sub $0x8,%rsp
34ab(5): call 0x2685(%rip)
34b0(3): movzx (%rax),%edx
34b3(3): and $0xdf,%edx
34b6(3): cmp $0x55,%dl
34b9(2): jz 0x77(%rip)
34bb(3): cmp $0x47,%dl
34be(2): jz 0x22(%rip)
34c0(7): lea 0x5924(%rip),%rax
34c7(7): lea 0x591f(%rip),%rdx
34ce(3): cmp $0x9,%ebx
34d1(4): cmovne %rdx,%rax
34d5(4): add $0x8,%rsp
34d9(1): pop %rbx
34da(1): pop %rbp
34db(1): ret near (%rsp)
34dc(4): nop 0x0(%rax)
34e0(4): movzx 0x1(%rax),%edx
34e4(3): and $0xdf,%edx
34e7(3): cmp $0x42,%dl
34ea(2): jnz 0xffffffd6(%rip)
34ec(4): cmp $0x31,0x2(%rax)
34f0(2): jnz 0xffffffd0(%rip)
34f2(4): cmp $0x38,0x3(%rax)
34f6(2): jnz 0xffffffca(%rip)
34f8(4): cmp $0x30,0x4(%rax)
34fc(2): jnz 0xffffffc4(%rip)
34fe(4): cmp $0x33,0x5(%rax)
3502(2): jnz 0xffffffbe(%rip)
3504(4): cmp $0x30,0x6(%rax)
3508(2): jnz 0xffffffb8(%rip)
350a(4): cmp $0x0,0x7(%rax)
350e(2): jnz 0xffffffb2(%rip)
3510(4): cmp $0x60,0x0(%rbp)
3514(7): lea 0x58c9(%rip),%rax
351b(7): lea 0x58c6(%rip),%rdx
3522(4): cmovne %rdx,%rax
3526(4): add $0x8,%rsp
352a(1): pop %rbx
352b(1): pop %rbp
352c(1): ret near (%rsp)
352d(3): nop (%rax)
3530(4): movzx 0x1(%rax),%edx
3534(3): and $0xdf,%edx
3537(3): cmp $0x54,%dl
353a(2): jnz 0xffffff86(%rip)
353c(4): movzx 0x2(%rax),%edx
3540(3): and $0xdf,%edx
3543(3): cmp $0x46,%dl
3546(6): jnz 0xffffff7a(%rip)
354c(4): cmp $0x2d,0x3(%rax)
3550(6): jnz 0xffffff70(%rip)
3556(4): cmp $0x38,0x4(%rax)
355a(6): jnz 0xffffff66(%rip)
3560(4): cmp $0x0,0x5(%rax)
3564(6): jnz 0xffffff5c(%rip)
356a(4): cmp $0x60,0x0(%rbp)
356e(7): lea 0x5867(%rip),%rax
3575(7): lea 0x5864(%rip),%rdx
357c(4): cmovne %rdx,%rax
3580(4): add $0x8,%rsp
3584(1): pop %rbx
3585(1): pop %rbp
3586(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3590(2): push %r15
3592(2): push %r14
3594(3): mov %r8d,%r15d
3597(2): push %r13
3599(2): push %r12
359b(3): mov %rdi,%r14
359e(1): push %rbp
359f(1): push %rbx
35a0(3): mov %r9d,%ebx
35a3(3): mov %rsi,%r13
35a6(3): mov %rcx,%rbp
35a9(3): and $0x2,%ebx
35ac(7): sub $0xb8,%rsp
35b3(8): mov 0xf0(%rsp),%rax
35bb(5): mov %rdx,0x10(%rsp)
35c0(5): mov %r8d,0x8(%rsp)
35c5(5): mov %r9d,0x78(%rsp)
35ca(5): mov %rax,0x20(%rsp)
35cf(8): mov 0xf8(%rsp),%rax
35d7(5): mov %rax,0x68(%rsp)
35dc(8): mov 0x100(%rsp),%rax
35e4(5): mov %rax,0x60(%rsp)
35e9(9): mov $0x28,%rax
35f2(8): mov %rax,0xa8(%rsp)
35fa(2): xor %eax,%eax
35fc(5): call 0xffffddd4(%rip)
3601(4): cmp $0xa,%r15d
3605(5): mov %rax,0x58(%rsp)
360a(6): jnbe 0x11b5(%rip)
3610(7): lea 0x5829(%rip),%rcx
3617(3): mov %r15d,%edx
361a(4): movsxd 0x0(%rcx,%rdx,4),%rax
361e(3): add %rcx,%rax
3621(2): jmp %rax
3623(5): mov $0x1,0xe(%rsp)
3628(5): mov $0x0,0x7c(%rsp)
362d(3): xor %r12d,%r12d
3630(9): mov $0x0,0x50(%rsp)
3639(5): mov $0x1,0xf(%rsp)
363e(5): mov $0x0,0xd(%rsp)
3643(7): lea 0x57a3(%rip),%rax
364a(9): mov $0x1,0x18(%rsp)
3653(3): xor %r15d,%r15d
3656(8): mov $0x2,0x8(%rsp)
365e(5): mov %rax,0x48(%rsp)
3663(3): xor %r11d,%r11d
3666(3): mov %rbp,%rax
3669(3): mov %r12d,%r8d
366c(3): mov %r11,%rbp
366f(3): mov %rax,%r11
3672(6): nop 0x0(%rax,%rax,1)
3678(3): cmp %rbp,%r11
367b(4): setnz %r12b
367f(4): cmp $0xffffffff,%r11
3683(2): jnz 0xf(%rip)
3685(5): mov 0x10(%rsp),%rax
368a(4): cmp $0x0,0x0(%rax,%rbp,1)
368e(4): setnz %r12b
3692(3): test %r12b,%r12b
3695(6): jz 0x65b(%rip)
369b(5): cmp $0x2,0x8(%rsp)
36a0(5): mov 0x10(%rsp),%rdi
36a5(4): lea 0x0(%rdi,%rbp,1),%r9
36a9(3): setnz %al
36ac(4): and 0xd(%rsp),%al
36b0(3): mov %eax,%r10d
36b3(6): jz 0xad(%rip)
36b9(5): mov 0x18(%rsp),%rax
36be(3): test %rax,%rax
36c1(6): jz 0x42f(%rip)
36c7(4): cmp $0xffffffff,%r11
36cb(5): lea 0x0(%rbp,%rax,1),%rbx
36d0(2): jnz 0x30(%rip)
36d2(4): cmp $0x1,%rax
36d6(2): jbe 0x2a(%rip)
36d8(5): mov %r8b,0x38(%rsp)
36dd(5): mov %r10b,0x30(%rsp)
36e2(5): mov %r9,0x28(%rsp)
36e7(5): call 0xffffdcf9(%rip)
36ec(6): movzx 0x38(%rsp),%r8d
36f2(6): movzx 0x30(%rsp),%r10d
36f8(3): mov %rax,%r11
36fb(5): mov 0x28(%rsp),%r9
3700(3): cmp %r11,%rbx
3703(5): mov %r10b,0x28(%rsp)
3708(6): jnbe 0x5b8(%rip)
370e(5): mov 0x18(%rsp),%rdx
3713(5): mov 0x48(%rsp),%rsi
3718(3): mov %r9,%rdi
371b(5): mov %r11,0x40(%rsp)
3720(5): mov %r8b,0x38(%rsp)
3725(5): mov %r9,0x30(%rsp)
372a(5): call 0xffffdd36(%rip)
372f(2): test %eax,%eax
3731(5): mov 0x30(%rsp),%r9
3736(6): movzx 0x38(%rsp),%r8d
373c(5): mov 0x40(%rsp),%r11
3741(6): jnz 0x57f(%rip)
3747(5): cmp $0x0,0xf(%rsp)
374c(6): movzx 0x28(%rsp),%r10d
3752(6): jnz 0xf83(%rip)
3758(8): nop 0x0(%rax,%rax,1)
3760(4): movzx (%r9),%ebx
3764(3): cmp $0x7e,%bl
3767(6): jnbe 0x321(%rip)
376d(7): lea 0x56f8(%rip),%rcx
3774(3): movzx %bl,%edx
3777(4): movsxd 0x0(%rcx,%rdx,4),%rax
377b(3): add %rcx,%rax
377e(2): jmp %rax
3780(3): xor %r10d,%r10d
3783(4): cmp $0x1,%r11
3787(3): setnz %al
378a(4): cmp $0xffffffff,%r11
378e(2): jnz 0xe(%rip)
3790(5): mov 0x10(%rsp),%rax
3795(4): cmp $0x0,0x1(%rax)
3799(3): setnz %al
379c(5): cmp $0x2,0x8(%rsp)
37a1(3): setz %dl
37a4(2): test %al,%al
37a6(6): jz 0x252(%rip)
37ac(3): xor %r12d,%r12d
37af(2): xor %eax,%eax
37b1(7): nop 0x0(%rax)
37b8(5): cmp $0x1,0xd(%rsp)
37bd(6): jnz 0x115(%rip)
37c3(2): test %dl,%dl
37c5(6): jnz 0x10d(%rip)
37cb(5): mov 0x20(%rsp),%rsi
37d0(3): test %rsi,%rsi
37d3(2): jz 0x16(%rip)
37d5(2): mov %ebx,%edx
37d7(3): shr $0x5,%dl
37da(3): movzx %dl,%edx
37dd(3): mov 0x0(%rsi,%rdx,4),%edx
37e0(3): bt %ebx,%edx
37e3(6): jb 0x150(%rip)
37e9(3): test %r10b,%r10b
37ec(6): jnz 0x147(%rip)
37f2(3): xor $0x1,%eax
37f5(4): add $0x1,%rbp
37f9(3): and %r8d,%eax
37fc(2): test %al,%al
37fe(2): jz 0x22(%rip)
3800(3): cmp %r15,%r13
3803(2): jbe 0x7(%rip)
3805(5): mov $0x27,0x0(%r14,%r15,1)
380a(4): lea 0x1(%r15),%rax
380e(3): cmp %rax,%r13
3811(2): jbe 0x8(%rip)
3813(6): mov $0x27,0x1(%r14,%r15,1)
3819(4): add $0x2,%r15
381d(3): xor %r8d,%r8d
3820(3): cmp %r13,%r15
3823(2): jnb 0x6(%rip)
3825(4): mov %bl,0x0(%r14,%r15,1)
3829(5): movzx 0xe(%rsp),%edi
382e(4): add $0x1,%r15
3832(5): mov $0x0,%eax
3837(3): test %r12b,%r12b
383a(3): cmove %eax,%edi
383d(5): mov %dil,0xe(%rsp)
3842(5): jmp 0xfffffe36(%rip)
3847(9): nop 0x0(%rax,%rax,1)
3850(3): xor %r10d,%r10d
3853(4): mov 0x8(%rsp),%eax
3857(3): cmp $0x2,%eax
385a(6): jz 0x5be(%rip)
3860(3): cmp $0x5,%eax
3863(6): jz 0x575(%rip)
3869(3): cmp $0x2,%eax
386c(5): mov $0x3f,%ebx
3871(3): setz %dl
3874(3): xor %r12d,%r12d
3877(2): xor %eax,%eax
3879(5): jmp 0xffffff3f(%rip)
387e(2): nop 
3880(3): xor %r10d,%r10d
3883(5): cmp $0x2,0x8(%rsp)
3888(6): jz 0x508(%rip)
388e(5): mov %r12b,0x7c(%rsp)
3893(2): xor %edx,%edx
3895(2): xor %eax,%eax
3897(5): mov $0x27,%ebx
389c(5): jmp 0xffffff1c(%rip)
38a1(7): nop 0x0(%rax)
38a8(5): mov $0x9,%edx
38ad(5): mov $0x74,%ebx
38b2(5): cmp $0x2,0x8(%rsp)
38b7(3): setz %al
38ba(4): and 0xf(%rsp),%al
38be(6): jnz 0x150(%rip)
38c4(5): cmp $0x0,0xd(%rsp)
38c9(2): jnz 0x67(%rip)
38cb(2): mov %edx,%ebx
38cd(3): xor %r12d,%r12d
38d0(2): xor %eax,%eax
38d2(5): cmp $0x0,0xf(%rsp)
38d7(6): jnz 0xfffffef4(%rip)
38dd(5): jmp 0xffffff0c(%rip)
38e2(6): nop 0x0(%rax,%rax,1)
38e8(5): mov $0x8,%edx
38ed(5): mov $0x62,%ebx
38f2(2): jmp 0xffffffd2(%rip)
38f4(4): nop 0x0(%rax)
38f8(5): cmp $0x2,0x8(%rsp)
38fd(6): jz 0x3d3(%rip)
3903(5): cmp $0x0,0xd(%rsp)
3908(6): jz 0x218(%rip)
390e(5): cmp $0x0,0xf(%rsp)
3913(6): jz 0x20d(%rip)
3919(6): cmp $0x0,0x18(%rsp)
391f(6): jnz 0x3bc(%rip)
3925(5): mov $0x5c,%ebx
392a(6): nop 0x0(%rax,%rax,1)
3930(3): xor %r12d,%r12d
3933(5): cmp $0x2,0x8(%rsp)
3938(3): setz %dl
393b(5): cmp $0x0,0xf(%rsp)
3940(2): mov %edx,%eax
3942(6): jnz 0x856(%rip)
3948(3): mov %r8d,%eax
394b(3): xor $0x1,%eax
394e(2): and %dl,%al
3950(2): jz 0x31(%rip)
3952(3): cmp %r15,%r13
3955(2): jbe 0x7(%rip)
3957(5): mov $0x27,0x0(%r14,%r15,1)
395c(4): lea 0x1(%r15),%rdx
3960(3): cmp %rdx,%r13
3963(2): jbe 0x8(%rip)
3965(6): mov $0x24,0x1(%r14,%r15,1)
396b(4): lea 0x2(%r15),%rdx
396f(3): cmp %rdx,%r13
3972(2): jbe 0x8(%rip)
3974(6): mov $0x27,0x2(%r14,%r15,1)
397a(4): add $0x3,%r15
397e(3): mov %eax,%r8d
3981(3): cmp %r15,%r13
3984(2): jbe 0x7(%rip)
3986(5): mov $0x5c,0x0(%r14,%r15,1)
398b(4): add $0x1,%r15
398f(4): add $0x1,%rbp
3993(5): jmp 0xfffffe8d(%rip)
3998(8): nop 0x0(%rax,%rax,1)
39a0(5): cmp $0x0,0xd(%rsp)
39a5(6): jnz 0x1ce(%rip)
39ab(2): xor %edx,%edx
39ad(5): test $0x1,0x78(%rsp)
39b2(6): jz 0xffffff19(%rip)
39b8(4): add $0x1,%rbp
39bc(5): jmp 0xfffffcbc(%rip)
39c1(7): nop 0x0(%rax)
39c8(5): cmp $0x2,0x8(%rsp)
39cd(3): setz %dl
39d0(2): xor %eax,%eax
39d2(5): jmp 0xfffffde6(%rip)
39d7(9): nop 0x0(%rax,%rax,1)
39e0(5): mov $0x7,%edx
39e5(5): mov $0x61,%ebx
39ea(5): jmp 0xfffffeda(%rip)
39ef(1): nop 
39f0(5): cmp $0x2,0x8(%rsp)
39f5(3): setz %dl
39f8(3): test %rbp,%rbp
39fb(6): jnz 0xfffffdb1(%rip)
3a01(5): movzx 0xf(%rsp),%eax
3a06(2): and %dl,%al
3a08(6): jz 0xfffffdb0(%rip)
3a0e(3): mov %r11,%rbp
3a11(8): mov $0x2,0x8(%rsp)
3a19(5): jmp 0x700(%rip)
3a1e(2): nop 
3a20(5): cmp $0x2,0x8(%rsp)
3a25(3): setz %dl
3a28(3): xor %r12d,%r12d
3a2b(2): jmp 0xffffffd6(%rip)
3a2d(3): nop (%rax)
3a30(5): cmp $0x2,0x8(%rsp)
3a35(5): mov $0x20,%ebx
3a3a(3): setz %dl
3a3d(2): jmp 0xffffffc4(%rip)
3a3f(1): nop 
3a40(5): mov $0xd,%edx
3a45(5): mov $0x72,%ebx
3a4a(5): jmp 0xfffffe68(%rip)
3a4f(1): nop 
3a50(5): mov $0xc,%edx
3a55(5): mov $0x66,%ebx
3a5a(5): jmp 0xfffffe6a(%rip)
3a5f(1): nop 
3a60(5): mov $0xb,%edx
3a65(5): mov $0x76,%ebx
3a6a(5): jmp 0xfffffe5a(%rip)
3a6f(1): nop 
3a70(5): mov $0xa,%edx
3a75(5): mov $0x6e,%ebx
3a7a(5): jmp 0xfffffe38(%rip)
3a7f(1): nop 
3a80(3): xor %r10d,%r10d
3a83(5): nop 0x0(%rax,%rax,1)
3a88(6): cmp $0x1,0x58(%rsp)
3a8e(6): jnz 0x3aa(%rip)
3a94(5): mov %r11,0x38(%rsp)
3a99(5): mov %r8b,0x30(%rsp)
3a9e(5): mov %r10b,0x28(%rsp)
3aa3(5): call 0xffffdb4d(%rip)
3aa8(3): mov (%rax),%rcx
3aab(3): movzx %bl,%edx
3aae(6): movzx 0x28(%rsp),%r10d
3ab4(6): movzx 0x30(%rsp),%r8d
3aba(5): mov 0x38(%rsp),%r11
3abf(5): mov $0x1,%edi
3ac4(4): movzx 0x0(%rcx,%rdx,2),%eax
3ac8(4): and $0x4000,%ax
3acc(4): setnz %r12b
3ad0(3): setz %al
3ad3(4): and 0xd(%rsp),%al
3ad7(2): test %al,%al
3ad9(6): jnz 0x998(%rip)
3adf(5): cmp $0x2,0x8(%rsp)
3ae4(3): setz %dl
3ae7(5): jmp 0xfffffcd1(%rip)
3aec(4): nop 0x0(%rax)
3af0(4): movzx (%r9),%ebx
3af4(3): cmp $0x7e,%bl
3af7(2): jnbe 0xffffff89(%rip)
3af9(7): lea 0x5568(%rip),%rcx
3b00(3): movzx %bl,%edx
3b03(4): movsxd 0x0(%rcx,%rdx,4),%rax
3b07(3): add %rcx,%rax
3b0a(2): jmp %rax
3b0c(4): nop 0x0(%rax)
3b10(3): xor %r10d,%r10d
3b13(5): cmp $0x0,0xd(%rsp)
3b18(6): jnz 0xfffffdf6(%rip)
3b1e(2): nop 
3b20(5): mov $0x5c,%edx
3b25(5): mov $0x5c,%ebx
3b2a(5): jmp 0xfffffd9a(%rip)
3b2f(1): nop 
3b30(5): mov $0xc,%edx
3b35(3): xor %r10d,%r10d
3b38(5): mov $0x66,%ebx
3b3d(5): jmp 0xfffffd87(%rip)
3b42(6): nop 0x0(%rax,%rax,1)
3b48(5): mov $0xa,%edx
3b4d(3): xor %r10d,%r10d
3b50(5): mov $0x6e,%ebx
3b55(5): jmp 0xfffffd5d(%rip)
3b5a(6): nop 0x0(%rax,%rax,1)
3b60(5): mov $0x61,%ebx
3b65(5): jmp 0xfffffdcb(%rip)
3b6a(6): nop 0x0(%rax,%rax,1)
3b70(3): xor %r10d,%r10d
3b73(5): cmp $0x2,0x8(%rsp)
3b78(3): setz %dl
3b7b(5): cmp $0x0,0xf(%rsp)
3b80(6): jnz 0xb9a(%rip)
3b86(3): mov %r8d,%eax
3b89(3): mov %r15,%rcx
3b8c(3): xor $0x1,%eax
3b8f(2): and %dl,%al
3b91(2): jz 0x2f(%rip)
3b93(3): cmp %r15,%r13
3b96(2): jbe 0x7(%rip)
3b98(5): mov $0x27,0x0(%r14,%r15,1)
3b9d(4): lea 0x1(%r15),%rcx
3ba1(3): cmp %rcx,%r13
3ba4(2): jbe 0x8(%rip)
3ba6(6): mov $0x24,0x1(%r14,%r15,1)
3bac(4): lea 0x2(%r15),%rcx
3bb0(3): cmp %rcx,%r13
3bb3(6): jnbe 0x636(%rip)
3bb9(4): lea 0x3(%r15),%rcx
3bbd(3): mov %eax,%r8d
3bc0(3): cmp %rcx,%r13
3bc3(2): jbe 0x7(%rip)
3bc5(5): mov $0x5c,0x0(%r14,%rcx,1)
3bca(5): cmp $0x2,0x8(%rsp)
3bcf(4): lea 0x1(%rcx),%r15
3bd3(6): jz 0x606(%rip)
3bd9(4): lea 0x1(%rbp),%rax
3bdd(3): cmp %r11,%rax
3be0(2): jnb 0x1b(%rip)
3be2(5): mov 0x10(%rsp),%rax
3be7(5): movzx 0x1(%rax,%rbp,1),%eax
3bec(4): mov %al,0x28(%rsp)
3bf0(3): sub $0x30,%eax
3bf3(2): cmp $0x9,%al
3bf5(6): jbe 0x834(%rip)
3bfb(3): mov %r12d,%eax
3bfe(5): mov $0x30,%ebx
3c03(3): xor %r12d,%r12d
3c06(5): jmp 0xfffffbb2(%rip)
3c0b(5): nop 0x0(%rax,%rax,1)
3c10(5): cmp $0x2,0x8(%rsp)
3c15(3): mov %r10d,%r12d
3c18(3): setz %dl
3c1b(3): xor %r10d,%r10d
3c1e(2): xor %eax,%eax
3c20(5): jmp 0xfffffb98(%rip)
3c25(3): nop (%rax)
3c28(5): cmp $0x2,0x8(%rsp)
3c2d(3): setz %dl
3c30(3): xor %r10d,%r10d
3c33(5): jmp 0xfffffdc5(%rip)
3c38(8): nop 0x0(%rax,%rax,1)
3c40(5): cmp $0x2,0x8(%rsp)
3c45(3): setz %dl
3c48(3): xor %r10d,%r10d
3c4b(3): xor %r12d,%r12d
3c4e(5): jmp 0xfffffdb3(%rip)
3c53(5): nop 0x0(%rax,%rax,1)
3c58(5): cmp $0x2,0x8(%rsp)
3c5d(3): mov %r10d,%r12d
3c60(5): mov $0x20,%ebx
3c65(3): setz %dl
3c68(3): xor %r10d,%r10d
3c6b(5): jmp 0xfffffd96(%rip)
3c70(5): mov $0xd,%edx
3c75(3): xor %r10d,%r10d
3c78(5): mov $0x72,%ebx
3c7d(5): jmp 0xfffffc35(%rip)
3c82(6): nop 0x0(%rax,%rax,1)
3c88(5): mov $0x76,%ebx
3c8d(5): jmp 0xfffffca3(%rip)
3c92(6): nop 0x0(%rax,%rax,1)
3c98(5): mov $0x9,%edx
3c9d(3): xor %r10d,%r10d
3ca0(5): mov $0x74,%ebx
3ca5(5): jmp 0xfffffc0d(%rip)
3caa(6): nop 0x0(%rax,%rax,1)
3cb0(5): mov $0x62,%ebx
3cb5(5): jmp 0xfffffc7b(%rip)
3cba(6): nop 0x0(%rax,%rax,1)
3cc0(3): xor %r10d,%r10d
3cc3(5): jmp 0xfffffa9d(%rip)
3cc8(8): nop 0x0(%rax,%rax,1)
3cd0(5): cmp $0x0,0xf(%rsp)
3cd5(6): jnz 0x96b(%rip)
3cdb(4): add $0x1,%rbp
3cdf(3): mov %r8d,%eax
3ce2(3): xor %r12d,%r12d
3ce5(5): mov $0x5c,%ebx
3cea(5): jmp 0xfffffb12(%rip)
3cef(1): nop 
3cf0(5): cmp $0x2,0x8(%rsp)
3cf5(5): movzx 0xf(%rsp),%ebx
3cfa(3): mov %r8d,%r12d
3cfd(3): mov %r11,%rbp
3d00(3): setz %dl
3d03(2): mov %ebx,%eax
3d05(3): test %r15,%r15
3d08(3): setz %cl
3d0b(2): and %edx,%eax
3d0d(2): and %cl,%al
3d0f(6): jnz 0xa67(%rip)
3d15(2): mov %ebx,%eax
3d17(3): xor $0x1,%eax
3d1a(2): and %al,%dl
3d1c(6): jz 0x970(%rip)
3d22(5): cmp $0x0,0x7c(%rsp)
3d27(6): jz 0x963(%rip)
3d2d(5): cmp $0x0,0xe(%rsp)
3d32(6): jnz 0x9fb(%rip)
3d38(3): test %r13,%r13
3d3b(3): setz %al
3d3e(6): cmp $0x0,0x50(%rsp)
3d44(3): setnz %dl
3d47(2): and %dl,%al
3d49(6): jz 0xa23(%rip)
3d4f(5): mov 0x50(%rsp),%r13
3d54(7): lea 0x5092(%rip),%rbx
3d5b(4): mov $0x27,(%r14)
3d5f(8): mov $0x2,0x8(%rsp)
3d67(6): mov $0x1,%r15d
3d6d(9): mov $0x1,0x18(%rsp)
3d76(5): mov $0x0,0xf(%rsp)
3d7b(5): mov %rbx,0x48(%rsp)
3d80(4): mov %al,0x7c(%rsp)
3d84(5): jmp 0xfffff8df(%rip)
3d89(7): nop 0x0(%rax)
3d90(5): cmp $0x0,0xf(%rsp)
3d95(6): jnz 0x8ab(%rip)
3d9b(3): test %r13,%r13
3d9e(6): jz 0x402(%rip)
3da4(2): xor %edx,%edx
3da6(6): cmp $0x0,0x50(%rsp)
3dac(6): jnz 0x3f4(%rip)
3db2(5): mov %r13,0x50(%rsp)
3db7(4): add $0x3,%r15
3dbb(2): xor %eax,%eax
3dbd(5): mov %r12b,0x7c(%rsp)
3dc2(3): xor %r8d,%r8d
3dc5(3): mov %rdx,%r13
3dc8(5): mov $0x27,%ebx
3dcd(5): jmp 0xfffffa1c(%rip)
3dd2(6): nop 0x0(%rax,%rax,1)
3dd8(5): test $0x4,0x78(%rsp)
3ddd(2): jz 0x23(%rip)
3ddf(4): lea 0x2(%rbp),%rcx
3de3(3): cmp %r11,%rcx
3de6(2): jnb 0x1a(%rip)
3de8(5): mov 0x10(%rsp),%rax
3ded(5): cmp $0x3f,0x1(%rax,%rbp,1)
3df2(6): jz 0x790(%rip)
3df8(8): nop 0x0(%rax,%rax,1)
3e00(2): xor %edx,%edx
3e02(3): xor %r12d,%r12d
3e05(2): xor %eax,%eax
3e07(5): mov $0x3f,%ebx
3e0c(5): jmp 0xfffff9ac(%rip)
3e11(7): nop 0x0(%rax)
3e18(5): cmp $0x0,0xf(%rsp)
3e1d(6): jnz 0x823(%rip)
3e23(3): xor %r12d,%r12d
3e26(2): xor %eax,%eax
3e28(5): mov $0x3f,%ebx
3e2d(5): jmp 0xfffff9bc(%rip)
3e32(6): nop 0x0(%rax,%rax,1)
3e38(8): lea 0xa0(%rsp),%rax
3e40(4): cmp $0xffffffff,%r11
3e44(c): mov $0x0,0xa0(%rsp)
3e50(5): mov %rax,0x28(%rsp)
3e55(2): jnz 0x2f(%rip)
3e57(5): mov 0x10(%rsp),%rdi
3e5c(5): mov %r8b,0x40(%rsp)
3e61(5): mov %r10b,0x38(%rsp)
3e66(5): mov %r9,0x30(%rsp)
3e6b(5): call 0xffffd575(%rip)
3e70(6): movzx 0x40(%rsp),%r8d
3e76(6): movzx 0x38(%rsp),%r10d
3e7c(3): mov %rax,%r11
3e7f(5): mov 0x30(%rsp),%r9
3e84(8): lea 0x9c(%rsp),%rax
3e8c(2): xor %ecx,%ecx
3e8e(4): mov %bl,0x7e(%rsp)
3e92(5): mov %r8b,0x7d(%rsp)
3e97(3): mov %rcx,%rbx
3e9a(8): mov %r9,0x88(%rsp)
3ea2(5): mov %rax,0x38(%rsp)
3ea7(5): mov %r10b,0x7f(%rsp)
3eac(8): mov %r15,0x80(%rsp)
3eb4(5): mov %r14,0x40(%rsp)
3eb9(5): mov %r13,0x70(%rsp)
3ebe(5): mov %r11,0x30(%rsp)
3ec3(5): mov 0x10(%rsp),%rax
3ec8(5): lea 0x0(%rbp,%rbx,1),%r14
3ecd(5): mov 0x30(%rsp),%rdx
3ed2(5): mov 0x28(%rsp),%rcx
3ed7(5): mov 0x38(%rsp),%rdi
3edc(4): lea 0x0(%rax,%r14,1),%r13
3ee0(3): sub %r14,%rdx
3ee3(3): mov %r13,%rsi
3ee6(5): call 0x1a5a(%rip)
3eeb(3): test %rax,%rax
3eee(3): mov %rax,%r15
3ef1(2): jz 0x50(%rip)
3ef3(4): cmp $0xffffffff,%rax
3ef7(6): jz 0x61e(%rip)
3efd(4): cmp $0xfffffffe,%rax
3f01(6): jz 0x5a0(%rip)
3f07(5): cmp $0x2,0x8(%rsp)
3f0c(3): setz %al
3f0f(4): and 0xf(%rsp),%al
3f13(6): jnz 0x19d(%rip)
3f19(7): mov 0x9c(%rsp),%edi
3f20(5): call 0xffffd6c0(%rip)
3f25(5): mov 0x28(%rsp),%rdi
3f2a(2): test %eax,%eax
3f2c(5): mov $0x0,%eax
3f31(4): cmove %eax,%r12d
3f35(3): add %r15,%rbx
3f38(5): call 0xffffd698(%rip)
3f3d(2): test %eax,%eax
3f3f(2): jz 0xffffff84(%rip)
3f41(3): mov %r12d,%edx
3f44(3): mov %rbx,%rdi
3f47(6): movzx 0x7d(%rsp),%r8d
3f4d(3): xor $0x1,%edx
3f50(5): movzx 0x7e(%rsp),%ebx
3f55(6): movzx 0x7f(%rsp),%r10d
3f5b(4): and 0xd(%rsp),%dl
3f5f(8): mov 0x80(%rsp),%r15
3f67(5): mov 0x40(%rsp),%r14
3f6c(5): mov 0x70(%rsp),%r13
3f71(5): mov 0x30(%rsp),%r11
3f76(4): cmp $0x1,%rdi
3f7a(6): jbe 0x601(%rip)
3f80(3): mov %rdi,%rcx
3f83(2): xor %esi,%esi
3f85(6): movzx 0xf(%rsp),%r9d
3f8b(3): add %rbp,%rcx
3f8e(5): mov 0x10(%rsp),%rdi
3f93(5): jmp 0xbb(%rip)
3f98(8): nop 0x0(%rax,%rax,1)
3fa0(5): cmp $0x2,0x8(%rsp)
3fa5(3): setz %al
3fa8(3): test %r9b,%r9b
3fab(6): jnz 0x4b5(%rip)
3fb1(3): mov %r8d,%esi
3fb4(3): xor $0x1,%esi
3fb7(3): and %sil,%al
3fba(2): jz 0x31(%rip)
3fbc(3): cmp %r15,%r13
3fbf(2): jbe 0x7(%rip)
3fc1(5): mov $0x27,0x0(%r14,%r15,1)
3fc6(4): lea 0x1(%r15),%rsi
3fca(3): cmp %rsi,%r13
3fcd(2): jbe 0x8(%rip)
3fcf(6): mov $0x24,0x1(%r14,%r15,1)
3fd5(4): lea 0x2(%r15),%rsi
3fd9(3): cmp %rsi,%r13
3fdc(2): jbe 0x8(%rip)
3fde(6): mov $0x27,0x2(%r14,%r15,1)
3fe4(4): add $0x3,%r15
3fe8(3): mov %eax,%r8d
3feb(3): cmp %r15,%r13
3fee(2): jbe 0x7(%rip)
3ff0(5): mov $0x5c,0x0(%r14,%r15,1)
3ff5(4): lea 0x1(%r15),%rax
3ff9(3): cmp %rax,%r13
3ffc(2): jbe 0xf(%rip)
3ffe(2): mov %ebx,%eax
4000(3): shr $0x6,%al
4003(3): add $0x30,%eax
4006(5): mov %al,0x1(%r14,%r15,1)
400b(4): lea 0x2(%r15),%rax
400f(3): cmp %rax,%r13
4012(2): jbe 0x12(%rip)
4014(2): mov %ebx,%eax
4016(3): shr $0x3,%al
4019(3): and $0x7,%eax
401c(3): add $0x30,%eax
401f(5): mov %al,0x2(%r14,%r15,1)
4024(3): and $0x7,%ebx
4027(4): add $0x1,%rbp
402b(4): add $0x3,%r15
402f(3): add $0x30,%ebx
4032(3): cmp %rcx,%rbp
4035(6): jnb 0xfffff7eb(%rip)
403b(2): mov %edx,%esi
403d(3): cmp %r15,%r13
4040(2): jbe 0x6(%rip)
4042(4): mov %bl,0x0(%r14,%r15,1)
4046(4): movzx 0x0(%rdi,%rbp,1),%ebx
404a(4): add $0x1,%r15
404e(2): test %dl,%dl
4050(6): jnz 0xffffff50(%rip)
4056(2): mov %esi,%eax
4058(3): xor $0x1,%eax
405b(3): and %r8d,%eax
405e(3): test %r10b,%r10b
4061(2): jz 0x10(%rip)
4063(3): cmp %r15,%r13
4066(2): jbe 0x7(%rip)
4068(5): mov $0x5c,0x0(%r14,%r15,1)
406d(4): add $0x1,%r15
4071(4): add $0x1,%rbp
4075(3): cmp %rcx,%rbp
4078(6): jnb 0xfffff784(%rip)
407e(2): test %al,%al
4080(6): jz 0x3fe(%rip)
4086(3): cmp %r15,%r13
4089(2): jbe 0x7(%rip)
408b(5): mov $0x27,0x0(%r14,%r15,1)
4090(4): lea 0x1(%r15),%rax
4094(3): cmp %rax,%r13
4097(2): jbe 0x8(%rip)
4099(6): mov $0x27,0x1(%r14,%r15,1)
409f(4): add $0x2,%r15
40a3(3): xor %r10d,%r10d
40a6(3): xor %r8d,%r8d
40a9(2): jmp 0xffffff94(%rip)
40ab(5): nop 0x0(%rax,%rax,1)
40b0(4): cmp $0x1,%r15
40b4(6): jz 0xfffffe65(%rip)
40ba(5): mov 0x10(%rsp),%rdi
40bf(4): lea 0x0(%rdi,%r15,1),%rcx
40c3(5): lea 0x1(%rdi,%r14,1),%rdx
40c8(4): lea 0x0(%rcx,%r14,1),%r8
40cc(2): jmp 0x11(%rip)
40ce(2): nop 
40d0(4): add $0x1,%rdx
40d4(3): cmp %rdx,%r8
40d7(6): jz 0xfffffe42(%rip)
40dd(3): movzx (%rdx),%ecx
40e0(3): sub $0x5b,%ecx
40e3(3): cmp $0x21,%cl
40e6(2): jnbe 0xffffffea(%rip)
40e8(5): mov $0x1,%esi
40ed(3): shl/sal %cl,%rsi
40f0(3): mov %rsi,%rcx
40f3(a): mov $0x8589934635,%rsi
40fd(3): test %rsi,%rcx
4100(2): jz 0xffffffd0(%rip)
4102(5): mov 0x40(%rsp),%r14
4107(5): mov 0x70(%rsp),%r13
410c(5): mov 0x30(%rsp),%rbp
4111(8): mov $0x2,0x8(%rsp)
4119(5): cmp $0x0,0xd(%rsp)
411e(2): jz 0x12(%rip)
4120(2): test %al,%al
4122(5): mov $0x4,%eax
4127(5): cmove 0x8(%rsp),%eax
412c(4): mov %eax,0x8(%rsp)
4130(4): sub $0x8,%rsp
4134(3): mov %rbp,%rcx
4137(3): mov %r13,%rsi
413a(4): push 0x68(%rsp)
413e(4): push 0x78(%rsp)
4142(3): mov %r14,%rdi
4145(2): push $0x0
4147(8): mov 0x98(%rsp),%r9d
414f(5): mov 0x28(%rsp),%r8d
4154(5): mov 0x30(%rsp),%rdx
4159(4): and $0xfd,%r9d
415d(5): call 0xfffff433(%rip)
4162(4): add $0x20,%rsp
4166(3): mov %rax,%r15
4169(8): mov 0xa8(%rsp),%rbx
4171(9): xor $0x28,%rbx
417a(3): mov %r15,%rax
417d(6): jnz 0x606(%rip)
4183(7): add $0xb8,%rsp
418a(1): pop %rbx
418b(1): pop %rbp
418c(2): pop %r12
418e(2): pop %r13
4190(2): pop %r14
4192(2): pop %r15
4194(1): ret near (%rsp)
4195(3): nop (%rax)
4198(3): mov %r11,%rbp
419b(5): jmp 0xffffff7e(%rip)
41a0(3): cmp %r15,%r13
41a3(2): jbe 0x7(%rip)
41a5(5): mov $0x27,0x0(%r14,%r15,1)
41aa(4): lea 0x1(%r15),%rax
41ae(3): cmp %rax,%r13
41b1(2): jbe 0x8(%rip)
41b3(6): mov $0x5c,0x1(%r14,%r15,1)
41b9(4): lea 0x2(%r15),%rax
41bd(3): cmp %rax,%r13
41c0(6): jbe 0x5f2(%rip)
41c6(3): mov %r13,%rdx
41c9(6): mov $0x27,0x2(%r14,%r15,1)
41cf(5): mov 0x50(%rsp),%r13
41d4(5): jmp 0xfffffbde(%rip)
41d9(3): mov %r12d,%eax
41dc(5): mov $0x30,%ebx
41e1(3): xor %r12d,%r12d
41e4(5): jmp 0xfffff605(%rip)
41e9(6): mov $0x27,0x2(%r14,%r15,1)
41ef(5): jmp 0xfffff9ca(%rip)
41f4(2): test %ebx,%ebx
41f6(6): jnz 0xfffff42d(%rip)
41fc(5): mov $0x1,0xd(%rsp)
4201(3): test %r13,%r13
4204(6): jnz 0x596(%rip)
420a(7): lea 0x4bdc(%rip),%rax
4211(9): mov $0x0,0x50(%rsp)
421a(5): mov $0x1,0xe(%rsp)
421f(5): mov $0x0,0x7c(%rsp)
4224(3): xor %r12d,%r12d
4227(5): mov $0x0,0xf(%rsp)
422c(9): mov $0x1,0x18(%rsp)
4235(5): mov %rax,0x48(%rsp)
423a(6): mov $0x1,%r15d
4240(8): mov $0x2,0x8(%rsp)
4248(5): jmp 0xfffff41b(%rip)
424d(3): nop (%rax)
4250(2): test %ebx,%ebx
4252(6): jnz 0x3fb(%rip)
4258(3): test %r13,%r13
425b(6): jz 0x22b(%rip)
4261(4): mov $0x22,(%r14)
4265(5): mov $0x1,0xe(%rsp)
426a(3): xor %r12d,%r12d
426d(5): mov $0x0,0x7c(%rsp)
4272(9): mov $0x0,0x50(%rsp)
427b(7): lea 0x4b69(%rip),%rax
4282(5): mov $0x0,0xf(%rsp)
4287(5): mov $0x1,0xd(%rsp)
428c(9): mov $0x1,0x18(%rsp)
4295(6): mov $0x1,%r15d
429b(5): mov %rax,0x48(%rsp)
42a0(5): jmp 0xfffff3c3(%rip)
42a5(7): lea 0x4b3f(%rip),%rax
42ac(5): mov $0x1,0xe(%rsp)
42b1(5): mov $0x0,0x7c(%rsp)
42b6(3): xor %r12d,%r12d
42b9(9): mov $0x0,0x50(%rsp)
42c2(5): mov $0x1,0xf(%rsp)
42c7(5): mov $0x1,0xd(%rsp)
42cc(9): mov $0x1,0x18(%rsp)
42d5(3): xor %r15d,%r15d
42d8(5): mov %rax,0x48(%rsp)
42dd(8): mov $0x5,0x8(%rsp)
42e5(5): jmp 0xfffff37e(%rip)
42ea(5): mov $0x1,0xe(%rsp)
42ef(5): mov $0x0,0x7c(%rsp)
42f4(3): xor %r12d,%r12d
42f7(9): mov $0x0,0x50(%rsp)
4300(5): mov $0x0,0xf(%rsp)
4305(3): xor %r15d,%r15d
4308(5): mov $0x1,0xd(%rsp)
430d(9): mov $0x0,0x18(%rsp)
4316(9): mov $0x0,0x48(%rsp)
431f(5): jmp 0xfffff344(%rip)
4324(5): cmp $0xa,0x8(%rsp)
4329(2): jz 0x58(%rip)
432b(7): lea 0x4abd(%rip),%rsi
4332(2): xor %edi,%edi
4334(5): mov $0x5,%edx
4339(5): call 0xffffd087(%rip)
433e(3): mov %rax,%rcx
4341(5): mov %rax,0x68(%rsp)
4346(7): lea 0x4aa2(%rip),%rax
434d(3): cmp %rax,%rcx
4350(6): jz 0x39e(%rip)
4356(7): lea 0x4a90(%rip),%rsi
435d(2): xor %edi,%edi
435f(5): mov $0x5,%edx
4364(5): call 0xffffd05c(%rip)
4369(3): mov %rax,%rcx
436c(5): mov %rax,0x60(%rsp)
4371(7): lea 0x4a75(%rip),%rax
4378(3): cmp %rax,%rcx
437b(6): jz 0x389(%rip)
4381(3): xor %r15d,%r15d
4384(2): test %ebx,%ebx
4386(6): jz 0x1c7(%rip)
438c(2): test %ebx,%ebx
438e(5): mov 0x60(%rsp),%rbx
4393(5): setnz 0xf(%rsp)
4398(3): xor %r12d,%r12d
439b(3): mov %rbx,%rdi
439e(5): call 0xffffd042(%rip)
43a3(5): mov %rbx,0x48(%rsp)
43a8(5): mov %rax,0x18(%rsp)
43ad(5): mov $0x1,0xe(%rsp)
43b2(5): mov $0x0,0x7c(%rsp)
43b7(9): mov $0x0,0x50(%rsp)
43c0(5): mov $0x1,0xd(%rsp)
43c5(5): jmp 0xfffff29e(%rip)
43ca(5): mov $0x1,0xe(%rsp)
43cf(5): mov $0x0,0x7c(%rsp)
43d4(3): xor %r12d,%r12d
43d7(9): mov $0x0,0x50(%rsp)
43e0(5): mov $0x0,0xf(%rsp)
43e5(3): xor %r15d,%r15d
43e8(5): mov $0x0,0xd(%rsp)
43ed(9): mov $0x0,0x18(%rsp)
43f6(9): mov $0x0,0x48(%rsp)
43ff(5): jmp 0xfffff264(%rip)
4404(5): mov $0x1,0xe(%rsp)
4409(5): mov $0x0,0x7c(%rsp)
440e(3): xor %r12d,%r12d
4411(9): mov $0x0,0x50(%rsp)
441a(5): mov $0x1,0xf(%rsp)
441f(5): mov $0x1,0xd(%rsp)
4424(5): jmp 0xfffff21f(%rip)
4429(3): cmp %r15,%r13
442c(2): jbe 0x7(%rip)
442e(5): mov $0x30,0x0(%r14,%r15,1)
4433(4): lea 0x2(%rcx),%rax
4437(3): cmp %rax,%r13
443a(2): jbe 0x8(%rip)
443c(6): mov $0x30,0x2(%r14,%rcx,1)
4442(3): mov %r12d,%eax
4445(4): lea 0x3(%rcx),%r15
4449(3): xor %r12d,%r12d
444c(5): mov $0x30,%ebx
4451(5): jmp 0xfffff367(%rip)
4456(a): nop 0x0(%rax,%rax,1)
4460(5): movzx 0xf(%rsp),%ebx
4465(3): mov %r11,%rbp
4468(4): mov %bl,0xd(%rsp)
446c(5): jmp 0xfffffcad(%rip)
4471(5): movzx 0xd(%rsp),%edx
4476(3): xor %r12d,%r12d
4479(5): jmp 0xfffffb07(%rip)
447e(3): xor %r10d,%r10d
4481(5): jmp 0xfffffbbc(%rip)
4486(9): mov $0x0,0x50(%rsp)
448f(5): mov $0x1,0xe(%rsp)
4494(3): xor %r12d,%r12d
4497(5): mov $0x0,0x7c(%rsp)
449c(5): jmp 0xfffffddf(%rip)
44a1(5): mov 0x30(%rsp),%r11
44a6(3): mov %r14,%rsi
44a9(3): mov %r13,%rcx
44ac(3): mov %rbx,%rax
44af(3): mov %rbx,%rdi
44b2(6): movzx 0x7d(%rsp),%r8d
44b8(5): movzx 0x7e(%rsp),%ebx
44bd(8): mov 0x88(%rsp),%r9
44c5(3): cmp %r11,%rsi
44c8(6): movzx 0x7f(%rsp),%r10d
44ce(8): mov 0x80(%rsp),%r15
44d6(5): mov 0x40(%rsp),%r14
44db(5): mov 0x70(%rsp),%r13
44e0(2): jnb 0x28(%rip)
44e2(3): cmp $0x0,(%rcx)
44e5(2): jnz 0x12(%rip)
44e7(2): jmp 0x21(%rip)
44e9(7): nop 0x0(%rax)
44f0(5): cmp $0x0,0x0(%r9,%rax,1)
44f5(2): jz 0x10(%rip)
44f7(4): add $0x1,%rax
44fb(5): lea 0x0(%rbp,%rax,1),%rdx
4500(3): cmp %rdx,%r11
4503(2): jnbe 0xffffffed(%rip)
4505(3): mov %rax,%rdi
4508(5): movzx 0xd(%rsp),%edx
450d(3): xor %r12d,%r12d
4510(5): jmp 0xfffffa66(%rip)
4515(3): mov %rbx,%rdi
4518(6): movzx 0x7d(%rsp),%r8d
451e(5): movzx 0x7e(%rsp),%ebx
4523(6): movzx 0x7f(%rsp),%r10d
4529(8): mov 0x80(%rsp),%r15
4531(3): xor %r12d,%r12d
4534(5): mov 0x40(%rsp),%r14
4539(5): mov 0x70(%rsp),%r13
453e(5): mov 0x30(%rsp),%r11
4543(5): movzx 0xd(%rsp),%edx
4548(5): jmp 0xfffffa2e(%rip)
454d(5): mov 0x68(%rsp),%rdx
4552(3): movzx (%rdx),%eax
4555(2): test %al,%al
4557(6): jz 0xfffffe35(%rip)
455d(3): nop (%rax)
4560(3): cmp %r15,%r13
4563(2): jbe 0x6(%rip)
4565(4): mov %al,0x0(%r14,%r15,1)
4569(4): add $0x1,%r15
456d(5): movzx 0x0(%rdx,%r15,1),%eax
4572(2): test %al,%al
4574(2): jnz 0xffffffec(%rip)
4576(5): jmp 0xfffffe16(%rip)
457b(2): mov %edx,%eax
457d(5): jmp 0xfffff55a(%rip)
4582(4): movzx 0x0(%rax,%rcx,1),%ebx
4586(3): cmp $0x3e,%bl
4589(6): jnbe 0xfffff877(%rip)
458f(a): mov $0x8070630310989004800,%rax
4599(4): bt %rbx,%rax
459d(6): jnb 0xfffff863(%rip)
45a3(5): cmp $0x0,0xf(%rsp)
45a8(6): jnz 0x1ea(%rip)
45ae(3): cmp %r15,%r13
45b1(2): jbe 0x7(%rip)
45b3(5): mov $0x3f,0x0(%r14,%r15,1)
45b8(4): lea 0x1(%r15),%rax
45bc(3): cmp %rax,%r13
45bf(2): jbe 0x8(%rip)
45c1(6): mov $0x22,0x1(%r14,%r15,1)
45c7(4): lea 0x2(%r15),%rax
45cb(3): cmp %rax,%r13
45ce(2): jbe 0x8(%rip)
45d0(6): mov $0x22,0x2(%r14,%r15,1)
45d6(4): lea 0x3(%r15),%rax
45da(3): cmp %rax,%r13
45dd(2): jbe 0x8(%rip)
45df(6): mov $0x3f,0x3(%r14,%r15,1)
45e5(4): add $0x4,%r15
45e9(2): xor %edx,%edx
45eb(3): xor %r12d,%r12d
45ee(2): xor %eax,%eax
45f0(3): mov %rcx,%rbp
45f3(5): jmp 0xfffff1c5(%rip)
45f8(2): test %ebx,%ebx
45fa(6): jz 0x18e(%rip)
4600(7): lea 0x47e6(%rip),%rax
4607(5): mov $0x1,0xe(%rsp)
460c(5): mov $0x0,0x7c(%rsp)
4611(3): xor %r12d,%r12d
4614(9): mov $0x0,0x50(%rsp)
461d(5): mov $0x1,0xf(%rsp)
4622(5): mov $0x0,0xd(%rsp)
4627(9): mov $0x1,0x18(%rsp)
4630(3): xor %r15d,%r15d
4633(5): mov %rax,0x48(%rsp)
4638(5): jmp 0xfffff02b(%rip)
463d(3): nop (%rax)
4640(3): mov %r11,%rbp
4643(5): movzx 0xf(%rsp),%eax
4648(5): jmp 0xfffffad1(%rip)
464d(7): lea 0x4797(%rip),%rax
4654(5): mov $0x1,0xe(%rsp)
4659(5): mov $0x0,0x7c(%rsp)
465e(3): xor %r12d,%r12d
4661(9): mov $0x0,0x50(%rsp)
466a(5): mov $0x1,0xf(%rsp)
466f(5): mov $0x1,0xd(%rsp)
4674(9): mov $0x1,0x18(%rsp)
467d(3): xor %r15d,%r15d
4680(5): mov %rax,0x48(%rsp)
4685(5): jmp 0xffffefde(%rip)
468a(2): mov %edx,%eax
468c(5): mov 0x48(%rsp),%rbx
4691(3): test %rbx,%rbx
4694(2): jz 0x2e(%rip)
4696(2): test %al,%al
4698(2): jz 0x2a(%rip)
469a(3): movzx (%rbx),%ecx
469d(3): mov %rbx,%rax
46a0(2): test %cl,%cl
46a2(2): jz 0x20(%rip)
46a4(3): mov %r15,%rdx
46a7(3): sub %r15,%rax
46aa(3): cmp %rdx,%r13
46ad(2): jbe 0x6(%rip)
46af(4): mov %cl,0x0(%r14,%rdx,1)
46b3(4): add $0x1,%rdx
46b7(4): movzx 0x0(%rax,%rdx,1),%ecx
46bb(2): test %cl,%cl
46bd(2): jnz 0xffffffed(%rip)
46bf(3): mov %rdx,%r15
46c2(3): cmp %r15,%r13
46c5(6): jbe 0xfffffaa4(%rip)
46cb(5): mov $0x0,0x0(%r14,%r15,1)
46d0(5): jmp 0xfffffa99(%rip)
46d5(5): cmp $0x2,0x8(%rsp)
46da(5): movzx 0xf(%rsp),%ebx
46df(3): mov %r11,%rbp
46e2(3): setz %al
46e5(4): mov %bl,0xd(%rsp)
46e9(5): jmp 0xfffffa30(%rip)
46ee(4): mov 0x8(%rsp),%esi
46f2(3): mov %rcx,%rdi
46f5(5): call 0xffffedab(%rip)
46fa(5): mov %rax,0x68(%rsp)
46ff(5): jmp 0xfffffc57(%rip)
4704(4): mov 0x8(%rsp),%esi
4708(3): mov %rcx,%rdi
470b(5): call 0xffffed95(%rip)
4710(5): mov %rax,0x60(%rsp)
4715(5): jmp 0xfffffc6c(%rip)
471a(5): movzx 0xf(%rsp),%ebx
471f(3): mov %r11,%rbp
4722(2): mov %edx,%eax
4724(4): mov %bl,0xd(%rsp)
4728(5): jmp 0xfffff9f1(%rip)
472d(4): sub $0x8,%rsp
4731(6): mov $0x5,%r8d
4737(3): mov %r11,%rcx
473a(4): push 0x68(%rsp)
473e(4): push 0x78(%rsp)
4742(3): mov %r14,%rdi
4745(4): push 0x38(%rsp)
4749(8): mov 0x98(%rsp),%r9d
4751(5): mov 0x30(%rsp),%rdx
4756(5): mov 0x70(%rsp),%rsi
475b(5): call 0xffffee35(%rip)
4760(4): add $0x20,%rsp
4764(3): mov %rax,%r15
4767(5): jmp 0xfffffa02(%rip)
476c(5): movzx 0x7c(%rsp),%eax
4771(5): jmp 0xffffff1b(%rip)
4776(8): mov $0x2,0x8(%rsp)
477e(5): jmp 0xfffff99b(%rip)
4783(5): call 0xffffcc7d(%rip)
4788(5): mov $0x0,0xd(%rsp)
478d(5): jmp 0xfffffa74(%rip)
4792(3): mov %r11,%rbp
4795(5): jmp 0xfffff99b(%rip)
479a(5): mov $0x1,0xe(%rsp)
479f(2): xor %eax,%eax
47a1(3): xor %r12d,%r12d
47a4(9): mov $0x0,0x50(%rsp)
47ad(5): jmp 0xfffff5a7(%rip)
47b2(3): mov %r13,%rdx
47b5(5): mov 0x50(%rsp),%r13
47ba(5): jmp 0xfffff5f8(%rip)
47bf(5): call 0xffffcb61(%rip)

"quotearg_n_options" :
47d0(2): push %r15
47d2(2): push %r14
47d4(3): movsxd %edi,%r15
47d7(2): push %r13
47d9(2): push %r12
47db(3): mov %rdx,%r14
47de(1): push %rbp
47df(1): push %rbx
47e0(3): mov %rcx,%rbp
47e3(4): sub $0x28,%rsp
47e7(5): mov %rsi,0x8(%rsp)
47ec(5): call 0xffffcb44(%rip)
47f1(3): mov %rax,%r13
47f4(2): mov (%rax),%eax
47f6(3): test %r15d,%r15d
47f9(7): mov 0x206860(%rip),%rbx
4800(4): mov %eax,0x18(%rsp)
4804(6): js 0x16d(%rip)
480a(7): cmp %r15d,0x206847(%rip)
4811(2): jnle 0x64(%rip)
4813(7): cmp $0x7fffffff,%r15d
481a(6): jz 0x15c(%rip)
4820(4): lea 0x1(%r15),%r12d
4824(7): lea 0x206845(%rip),%rax
482b(3): movsxd %r12d,%rsi
482e(4): shl/sal $0x4,%rsi
4832(3): cmp %rax,%rbx
4835(6): jz 0x11b(%rip)
483b(3): mov %rbx,%rdi
483e(5): call 0xcd2(%rip)
4843(3): mov %rax,%rbx
4846(7): mov %rax,0x206813(%rip)
484d(7): movsxd 0x206804(%rip),%rdi
4854(3): mov %r12d,%edx
4857(2): xor %esi,%esi
4859(2): sub %edi,%edx
485b(4): shl/sal $0x4,%rdi
485f(3): movsxd %edx,%rdx
4862(3): add %rbx,%rdi
4865(4): shl/sal $0x4,%rdx
4869(5): call 0xffffcbd7(%rip)
486e(7): mov %r12d,0x2067e3(%rip)
4875(3): mov 0x4(%rbp),%eax
4878(4): shl/sal $0x4,%r15
487c(4): sub $0x8,%rsp
4880(3): add %r15,%rbx
4883(4): lea 0x8(%rbp),%r15
4887(4): mov 0x0(%rbp),%r8d
488b(3): mov (%rbx),%r11
488e(4): mov 0x8(%rbx),%r12
4892(3): mov %r14,%rcx
4895(3): or $0x1,%eax
4898(4): mov %eax,0x24(%rsp)
489c(3): push 0x30(%rbp)
489f(3): mov %eax,%r9d
48a2(3): push 0x28(%rbp)
48a5(2): push %r15
48a7(3): mov %r11,%rsi
48aa(5): mov 0x28(%rsp),%rdx
48af(3): mov %r12,%rdi
48b2(5): mov %r11,0x30(%rsp)
48b7(5): call 0xffffecd9(%rip)
48bc(4): add $0x20,%rsp
48c0(5): mov 0x10(%rsp),%r11
48c5(3): cmp %rax,%r11
48c8(2): jnbe 0x69(%rip)
48ca(4): lea 0x1(%rax),%rsi
48ce(7): lea 0x20680b(%rip),%rax
48d5(3): cmp %rax,%r12
48d8(3): mov %rsi,(%rbx)
48db(2): jz 0x14(%rip)
48dd(3): mov %r12,%rdi
48e0(5): mov %rsi,0x10(%rsp)
48e5(5): call 0xffffca2b(%rip)
48ea(5): mov 0x10(%rsp),%rsi
48ef(3): mov %rsi,%rdi
48f2(5): mov %rsi,0x10(%rsp)
48f7(5): call 0xbb9(%rip)
48fc(4): sub $0x8,%rsp
4900(4): mov %rax,0x8(%rbx)
4904(4): mov 0x0(%rbp),%r8d
4908(3): push 0x30(%rbp)
490b(3): push 0x28(%rbp)
490e(3): mov %r14,%rcx
4911(2): push %r15
4913(5): mov 0x3c(%rsp),%r9d
4918(3): mov %rax,%rdi
491b(5): mov 0x28(%rsp),%rdx
4920(5): mov 0x30(%rsp),%rsi
4925(3): mov %rax,%r12
4928(5): call 0xffffec68(%rip)
492d(4): add $0x20,%rsp
4931(4): mov 0x18(%rsp),%eax
4935(4): mov %eax,0x0(%r13)
4939(4): add $0x28,%rsp
493d(3): mov %r12,%rax
4940(1): pop %rbx
4941(1): pop %rbp
4942(2): pop %r12
4944(2): pop %r13
4946(2): pop %r14
4948(2): pop %r15
494a(1): ret near (%rsp)
494b(5): nop 0x0(%rax,%rax,1)
4950(2): xor %edi,%edi
4952(5): call 0xbbe(%rip)
4957(8): movdqa 0x206711(%rip),%xmm0
495f(3): mov %rax,%rbx
4962(7): mov %rax,0x2066f7(%rip)
4969(3): movups %xmm0,(%rax)
496c(5): jmp 0xfffffee1(%rip)
4971(5): call 0xffffc9af(%rip)
4976(5): call 0xd8a(%rip)

"clone_quoting_options" :
4980(2): push %r12
4982(1): push %rbp
4983(1): push %rbx
4984(3): mov %rdi,%rbx
4987(5): call 0xffffc9a9(%rip)
498c(3): mov (%rax),%r12d
498f(3): mov %rax,%rbp
4992(7): lea 0x206847(%rip),%rax
4999(3): test %rbx,%rbx
499c(5): mov $0x38,%esi
49a1(4): cmove %rax,%rbx
49a5(3): mov %rbx,%rdi
49a8(5): call 0xd08(%rip)
49ad(4): mov %r12d,0x0(%rbp)
49b1(1): pop %rbx
49b2(1): pop %rbp
49b3(2): pop %r12
49b5(1): ret near (%rsp)

"get_quoting_style" :
49c0(7): lea 0x206819(%rip),%rax
49c7(3): test %rdi,%rdi
49ca(4): cmove %rax,%rdi
49ce(2): mov (%rdi),%eax
49d0(1): ret near (%rsp)

"set_quoting_style" :
49e0(7): lea 0x2067f9(%rip),%rax
49e7(3): test %rdi,%rdi
49ea(4): cmove %rax,%rdi
49ee(2): mov %esi,(%rdi)
49f0(1): ret near (%rsp)

"set_char_quoting" :
4a00(7): lea 0x2067d9(%rip),%rax
4a07(3): test %rdi,%rdi
4a0a(2): mov %esi,%ecx
4a0c(4): cmove %rax,%rdi
4a10(2): mov %esi,%eax
4a12(3): and $0x1f,%ecx
4a15(3): shr $0x5,%al
4a18(3): movzx %al,%eax
4a1b(5): lea 0x8(%rdi,%rax,4),%rdi
4a20(2): mov (%rdi),%esi
4a22(2): mov %esi,%eax
4a24(2): shr %cl,%eax
4a26(2): xor %eax,%edx
4a28(3): and $0x1,%eax
4a2b(3): and $0x1,%edx
4a2e(2): shl/sal %cl,%edx
4a30(2): xor %esi,%edx
4a32(2): mov %edx,(%rdi)
4a34(1): ret near (%rsp)

"set_quoting_flags" :
4a40(7): lea 0x206799(%rip),%rax
4a47(3): test %rdi,%rdi
4a4a(4): cmove %rax,%rdi
4a4e(3): mov 0x4(%rdi),%eax
4a51(3): mov %esi,0x4(%rdi)
4a54(1): ret near (%rsp)

"set_custom_quoting" :
4a60(7): lea 0x206779(%rip),%rax
4a67(3): test %rdi,%rdi
4a6a(4): cmove %rax,%rdi
4a6e(3): test %rsi,%rsi
4a71(6): mov $0xa,(%rdi)
4a77(2): jz 0x10(%rip)
4a79(3): test %rdx,%rdx
4a7c(2): jz 0xb(%rip)
4a7e(4): mov %rsi,0x28(%rdi)
4a82(4): mov %rdx,0x30(%rdi)
4a86(1): ret near (%rsp)
4a87(4): sub $0x8,%rsp
4a8b(5): call 0xffffc895(%rip)

"quotearg_buffer" :
4a90(2): push %r15
4a92(2): push %r14
4a94(7): lea 0x206745(%rip),%rax
4a9b(2): push %r13
4a9d(2): push %r12
4a9f(3): mov %rdi,%r13
4aa2(1): push %rbp
4aa3(1): push %rbx
4aa4(3): mov %r8,%rbx
4aa7(3): mov %rsi,%r14
4aaa(3): mov %rdx,%r15
4aad(4): sub $0x18,%rsp
4ab1(3): test %r8,%r8
4ab4(4): cmove %rax,%rbx
4ab8(5): mov %rcx,0x8(%rsp)
4abd(5): call 0xffffc873(%rip)
4ac2(3): mov (%rax),%r12d
4ac5(3): mov %rax,%rbp
4ac8(4): lea 0x8(%rbx),%rax
4acc(4): sub $0x8,%rsp
4ad0(4): mov 0x4(%rbx),%r9d
4ad4(3): push 0x30(%rbx)
4ad7(3): mov (%rbx),%r8d
4ada(3): push 0x28(%rbx)
4add(3): mov %r15,%rdx
4ae0(1): push %rax
4ae1(5): mov 0x28(%rsp),%rcx
4ae6(3): mov %r14,%rsi
4ae9(3): mov %r13,%rdi
4aec(5): call 0xffffeaa4(%rip)
4af1(4): mov %r12d,0x0(%rbp)
4af5(4): add $0x38,%rsp
4af9(1): pop %rbx
4afa(1): pop %rbp
4afb(2): pop %r12
4afd(2): pop %r13
4aff(2): pop %r14
4b01(2): pop %r15
4b03(1): ret near (%rsp)

"quotearg_alloc_mem" :
4b10(2): push %r15
4b12(2): push %r14
4b14(7): lea 0x2066c5(%rip),%rax
4b1b(2): push %r13
4b1d(2): push %r12
4b1f(3): mov %rdx,%r12
4b22(1): push %rbp
4b23(1): push %rbx
4b24(3): mov %rcx,%rbx
4b27(3): mov %rdi,%r14
4b2a(3): mov %rsi,%r15
4b2d(4): sub $0x38,%rsp
4b31(3): test %rcx,%rcx
4b34(4): cmove %rax,%rbx
4b38(2): xor %ebp,%ebp
4b3a(5): call 0xffffc7f6(%rip)
4b3f(3): test %r12,%r12
4b42(3): mov %rax,%r13
4b45(2): mov (%rax),%eax
4b47(4): setz %bpl
4b4b(3): or 0x4(%rbx),%ebp
4b4e(4): lea 0x8(%rbx),%r10
4b52(4): sub $0x8,%rsp
4b56(3): mov (%rbx),%r8d
4b59(3): mov %r15,%rcx
4b5c(4): mov %eax,0x14(%rsp)
4b60(3): push 0x30(%rbx)
4b63(3): mov %r14,%rdx
4b66(3): push 0x28(%rbx)
4b69(2): push %r10
4b6b(2): xor %esi,%esi
4b6d(3): mov %ebp,%r9d
4b70(2): xor %edi,%edi
4b72(5): mov %r10,0x40(%rsp)
4b77(5): call 0xffffea19(%rip)
4b7c(4): lea 0x1(%rax),%rsi
4b80(5): mov %rax,0x48(%rsp)
4b85(4): add $0x20,%rsp
4b89(3): mov %rsi,%rdi
4b8c(5): mov %rsi,0x18(%rsp)
4b91(5): call 0x91f(%rip)
4b96(5): mov %rax,0x10(%rsp)
4b9b(4): sub $0x8,%rsp
4b9f(3): push 0x30(%rbx)
4ba2(3): push 0x28(%rbx)
4ba5(5): mov 0x38(%rsp),%r10
4baa(3): mov %ebp,%r9d
4bad(3): mov (%rbx),%r8d
4bb0(3): mov %r15,%rcx
4bb3(3): mov %r14,%rdx
4bb6(3): mov %rax,%rdi
4bb9(2): push %r10
4bbb(5): mov 0x38(%rsp),%rsi
4bc0(5): call 0xffffe9d0(%rip)
4bc5(4): mov 0x2c(%rsp),%eax
4bc9(4): add $0x20,%rsp
4bcd(3): test %r12,%r12
4bd0(4): mov %eax,0x0(%r13)
4bd4(2): jz 0xb(%rip)
4bd6(5): mov 0x28(%rsp),%r11
4bdb(4): mov %r11,(%r12)
4bdf(5): mov 0x10(%rsp),%rax
4be4(4): add $0x38,%rsp
4be8(1): pop %rbx
4be9(1): pop %rbp
4bea(2): pop %r12
4bec(2): pop %r13
4bee(2): pop %r14
4bf0(2): pop %r15
4bf2(1): ret near (%rsp)

"quotearg_alloc" :
4c00(3): mov %rdx,%rcx
4c03(2): xor %edx,%edx
4c05(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4c10(6): mov 0x206442(%rip),%eax
4c16(2): push %r12
4c18(7): mov 0x206441(%rip),%r12
4c1f(1): push %rbp
4c20(1): push %rbx
4c21(3): cmp $0x1,%eax
4c24(2): jle 0x2d(%rip)
4c26(3): sub $0x2,%eax
4c29(5): lea 0x18(%r12),%rbx
4c2e(4): shl/sal $0x4,%rax
4c32(5): lea 0x28(%r12,%rax,1),%rbp
4c37(9): nop 0x0(%rax,%rax,1)
4c40(3): mov (%rbx),%rdi
4c43(4): add $0x10,%rbx
4c47(5): call 0xffffc6c9(%rip)
4c4c(3): cmp %rbp,%rbx
4c4f(2): jnz 0xfffffff1(%rip)
4c51(5): mov 0x8(%r12),%rdi
4c56(7): lea 0x206483(%rip),%rbx
4c5d(3): cmp %rbx,%rdi
4c60(2): jz 0x19(%rip)
4c62(5): call 0xffffc6ae(%rip)
4c67(b): mov $0x100,0x2063fe(%rip)
4c72(7): mov %rbx,0x2063ff(%rip)
4c79(7): lea 0x2063f0(%rip),%rbx
4c80(3): cmp %rbx,%r12
4c83(2): jz 0x11(%rip)
4c85(3): mov %r12,%rdi
4c88(5): call 0xffffc688(%rip)
4c8d(7): mov %rbx,0x2063cc(%rip)
4c94(1): pop %rbx
4c95(a): mov $0x1,0x2063b9(%rip)
4c9f(1): pop %rbp
4ca0(2): pop %r12
4ca2(1): ret near (%rsp)

"quotearg_n" :
4cb0(7): lea 0x206529(%rip),%rcx
4cb7(7): mov $0xffffffff,%rdx
4cbe(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4cd0(7): lea 0x206509(%rip),%rcx
4cd7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4ce0(7): lea 0x2064f9(%rip),%rcx
4ce7(3): mov %rdi,%rsi
4cea(7): mov $0xffffffff,%rdx
4cf1(2): xor %edi,%edi
4cf3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4d00(7): lea 0x2064d9(%rip),%rcx
4d07(3): mov %rsi,%rdx
4d0a(3): mov %rdi,%rsi
4d0d(2): xor %edi,%edi
4d0f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4d20(4): sub $0x48,%rsp
4d24(3): mov %rdx,%rax
4d27(9): mov $0x28,%rdx
4d30(5): mov %rdx,0x38(%rsp)
4d35(2): xor %edx,%edx
4d37(3): cmp $0xa,%esi
4d3a(2): jz 0x6a(%rip)
4d3c(3): mov %esi,(%rsp)
4d3f(3): mov %rsp,%rcx
4d42(7): mov $0xffffffff,%rdx
4d49(3): mov %rax,%rsi
4d4c(9): mov $0x0,0x4(%rsp)
4d55(9): mov $0x0,0xc(%rsp)
4d5e(9): mov $0x0,0x14(%rsp)
4d67(9): mov $0x0,0x1c(%rsp)
4d70(9): mov $0x0,0x24(%rsp)
4d79(9): mov $0x0,0x2c(%rsp)
4d82(8): mov $0x0,0x34(%rsp)
4d8a(5): call 0xfffffa46(%rip)
4d8f(5): mov 0x38(%rsp),%rcx
4d94(9): xor $0x28,%rcx
4d9d(2): jnz 0xc(%rip)
4d9f(4): add $0x48,%rsp
4da3(1): ret near (%rsp)
4da4(5): call 0xffffc57c(%rip)
4da9(5): call 0xffffc657(%rip)

"quotearg_n_style_mem" :
4db0(4): sub $0x48,%rsp
4db4(3): mov %rdx,%rax
4db7(3): mov %rcx,%rdx
4dba(9): mov $0x28,%rcx
4dc3(5): mov %rcx,0x38(%rsp)
4dc8(2): xor %ecx,%ecx
4dca(3): cmp $0xa,%esi
4dcd(2): jz 0x63(%rip)
4dcf(3): mov %esi,(%rsp)
4dd2(3): mov %rsp,%rcx
4dd5(3): mov %rax,%rsi
4dd8(9): mov $0x0,0x4(%rsp)
4de1(9): mov $0x0,0xc(%rsp)
4dea(9): mov $0x0,0x14(%rsp)
4df3(9): mov $0x0,0x1c(%rsp)
4dfc(9): mov $0x0,0x24(%rsp)
4e05(9): mov $0x0,0x2c(%rsp)
4e0e(8): mov $0x0,0x34(%rsp)
4e16(5): call 0xfffff9ba(%rip)
4e1b(5): mov 0x38(%rsp),%rdx
4e20(9): xor $0x28,%rdx
4e29(2): jnz 0xc(%rip)
4e2b(4): add $0x48,%rsp
4e2f(1): ret near (%rsp)
4e30(5): call 0xffffc4f0(%rip)
4e35(5): call 0xffffc5cb(%rip)

"quotearg_style" :
4e40(3): mov %rsi,%rdx
4e43(2): mov %edi,%esi
4e45(2): xor %edi,%edi
4e47(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4e50(3): mov %rdx,%rcx
4e53(3): mov %rsi,%rdx
4e56(2): mov %edi,%esi
4e58(2): xor %edi,%edi
4e5a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4e60(4): sub $0x48,%rsp
4e64(2): mov %edx,%ecx
4e66(9): mov $0x28,%rax
4e6f(5): mov %rax,0x38(%rsp)
4e74(2): xor %eax,%eax
4e76(7): mov 0x206393(%rip),%rax
4e7d(3): mov %rsp,%r8
4e80(3): and $0x1f,%ecx
4e83(8): movdqa 0x206355(%rip),%xmm0
4e8b(5): mov %rax,0x30(%rsp)
4e90(2): mov %edx,%eax
4e92(4): movaps %xmm0,(%rsp)
4e96(3): shr $0x5,%al
4e99(3): movzx %al,%eax
4e9c(5): lea 0x8(%r8,%rax,4),%r9
4ea1(8): movdqa 0x206347(%rip),%xmm0
4ea9(5): movaps %xmm0,0x10(%rsp)
4eae(8): movdqa 0x20634a(%rip),%xmm0
4eb6(5): movaps %xmm0,0x20(%rsp)
4ebb(3): mov (%r9),%edx
4ebe(2): mov %edx,%eax
4ec0(2): shr %cl,%eax
4ec2(2): not %eax
4ec4(3): and $0x1,%eax
4ec7(2): shl/sal %cl,%eax
4ec9(3): mov %r8,%rcx
4ecc(2): xor %edx,%eax
4ece(3): mov %rsi,%rdx
4ed1(3): mov %rdi,%rsi
4ed4(3): mov %eax,(%r9)
4ed7(2): xor %edi,%edi
4ed9(5): call 0xfffff8f7(%rip)
4ede(5): mov 0x38(%rsp),%rsi
4ee3(9): xor $0x28,%rsi
4eec(2): jnz 0x7(%rip)
4eee(4): add $0x48,%rsp
4ef2(1): ret near (%rsp)
4ef3(5): call 0xffffc50d(%rip)

"quotearg_char" :
4f00(4): movsx %sil,%edx
4f04(7): mov $0xffffffff,%rsi
4f0b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4f10(5): mov $0x3a,%edx
4f15(7): mov $0xffffffff,%rsi
4f1c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4f30(5): mov $0x3a,%edx
4f35(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4f40(4): sub $0x48,%rsp
4f44(3): mov %rdx,%rax
4f47(9): mov $0x28,%rdx
4f50(5): mov %rdx,0x38(%rsp)
4f55(2): xor %edx,%edx
4f57(3): cmp $0xa,%esi
4f5a(2): jz 0x6a(%rip)
4f5c(3): mov %esi,(%rsp)
4f5f(3): mov %rsp,%rcx
4f62(7): mov $0xffffffff,%rdx
4f69(3): mov %rax,%rsi
4f6c(9): mov $0x0,0x4(%rsp)
4f75(9): mov $0x4000000,0xc(%rsp)
4f7e(9): mov $0x0,0x14(%rsp)
4f87(9): mov $0x0,0x1c(%rsp)
4f90(9): mov $0x0,0x24(%rsp)
4f99(9): mov $0x0,0x2c(%rsp)
4fa2(8): mov $0x0,0x34(%rsp)
4faa(5): call 0xfffff826(%rip)
4faf(5): mov 0x38(%rsp),%rcx
4fb4(9): xor $0x28,%rcx
4fbd(2): jnz 0xc(%rip)
4fbf(4): add $0x48,%rsp
4fc3(1): ret near (%rsp)
4fc4(5): call 0xffffc35c(%rip)
4fc9(5): call 0xffffc437(%rip)

"quotearg_n_custom_mem" :
4fd0(4): sub $0x48,%rsp
4fd4(3): mov %rcx,%r9
4fd7(7): mov 0x206232(%rip),%rcx
4fde(8): movdqa 0x2061fa(%rip),%xmm0
4fe6(9): mov $0x28,%rax
4fef(5): mov %rax,0x38(%rsp)
4ff4(2): xor %eax,%eax
4ff6(4): movaps %xmm0,(%rsp)
4ffa(3): test %rsi,%rsi
4ffd(5): mov %rcx,0x30(%rsp)
5002(7): mov $0xa,(%rsp)
5009(8): movdqa 0x2061df(%rip),%xmm0
5011(5): movaps %xmm0,0x10(%rsp)
5016(8): movdqa 0x2061e2(%rip),%xmm0
501e(5): movaps %xmm0,0x20(%rsp)
5023(2): jz 0x34(%rip)
5025(3): test %rdx,%rdx
5028(2): jz 0x2f(%rip)
502a(5): mov %rsi,0x28(%rsp)
502f(5): mov %rdx,0x30(%rsp)
5034(3): mov %rsp,%rcx
5037(3): mov %r8,%rdx
503a(3): mov %r9,%rsi
503d(5): call 0xfffff793(%rip)
5042(5): mov 0x38(%rsp),%rdi
5047(9): xor $0x28,%rdi
5050(2): jnz 0xc(%rip)
5052(4): add $0x48,%rsp
5056(1): ret near (%rsp)
5057(5): call 0xffffc2c9(%rip)
505c(5): call 0xffffc3a4(%rip)

"quotearg_n_custom" :
5070(7): mov $0xffffffff,%r8
5077(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5080(3): mov %rdx,%rcx
5083(7): mov $0xffffffff,%r8
508a(3): mov %rsi,%rdx
508d(3): mov %rdi,%rsi
5090(2): xor %edi,%edi
5092(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
50a0(3): mov %rcx,%r8
50a3(3): mov %rdx,%rcx
50a6(3): mov %rsi,%rdx
50a9(3): mov %rdi,%rsi
50ac(2): xor %edi,%edi
50ae(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
50c0(7): lea 0x205f59(%rip),%rcx
50c7(5): jmp 0xfffff709(%rip)

"quote_mem" :
50d0(7): lea 0x205f49(%rip),%rcx
50d7(3): mov %rsi,%rdx
50da(3): mov %rdi,%rsi
50dd(2): xor %edi,%edi
50df(5): jmp 0xfffff6f1(%rip)

"quote_n" :
50f0(7): lea 0x205f29(%rip),%rcx
50f7(7): mov $0xffffffff,%rdx
50fe(5): jmp 0xfffff6d2(%rip)

"quote" :
5110(7): lea 0x205f09(%rip),%rcx
5117(3): mov %rdi,%rsi
511a(7): mov $0xffffffff,%rdx
5121(2): xor %edi,%edi
5123(5): jmp 0xfffff6ad(%rip)

"strintcmp" :
5130(4): movzx (%rdi),%r8d
5134(3): movzx (%rsi),%edx
5137(4): cmp $0x2d,%r8b
513b(6): jz 0xa5(%rip)
5141(3): cmp $0x2d,%dl
5144(6): jz 0xe4(%rip)
514a(6): nop 0x0(%rax,%rax,1)
5150(4): cmp $0x30,%r8b
5154(6): jz 0x194(%rip)
515a(3): cmp $0x30,%dl
515d(6): jz 0x17b(%rip)
5163(3): movzx %dl,%eax
5166(3): cmp %r8b,%dl
5169(3): lea 0xffffffd0(%rax),%ecx
516c(6): jnz 0x19c(%rip)
5172(3): cmp $0x9,%ecx
5175(6): jnbe 0x22b(%rip)
517b(4): add $0x1,%rdi
517f(4): add $0x1,%rsi
5183(3): movzx (%rsi),%eax
5186(4): movzx (%rdi),%r8d
518a(2): mov %eax,%edx
518c(3): lea 0xffffffd0(%rax),%ecx
518f(3): cmp %al,%r8b
5192(6): jnz 0x176(%rip)
5198(3): cmp $0x9,%ecx
519b(2): jbe 0xffffffe0(%rip)
519d(4): movzx %r8b,%edx
51a1(3): xor %r9d,%r9d
51a4(3): cmp $0x9,%ecx
51a7(6): jnbe 0x1f9(%rip)
51ad(3): nop (%rax)
51b0(2): xor %ecx,%ecx
51b2(6): nop 0x0(%rax,%rax,1)
51b8(5): movzx 0x1(%rsi,%rcx,1),%eax
51bd(4): add $0x1,%rcx
51c1(3): sub $0x30,%eax
51c4(3): cmp $0x9,%eax
51c7(2): jbe 0xfffffff1(%rip)
51c9(3): cmp %rcx,%r9
51cc(6): jz 0x1d7(%rip)
51d2(2): sbb %eax,%eax
51d4(3): or $0x1,%eax
51d7(1): ret near (%rsp)
51d8(8): nop 0x0(%rax,%rax,1)
51e0(4): add $0x1,%rdi
51e4(3): movzx (%rdi),%ecx
51e7(3): cmp $0x30,%cl
51ea(2): jz 0xfffffff6(%rip)
51ec(3): movzx %cl,%eax
51ef(3): cmp $0x2d,%dl
51f2(4): lea 0xffffffd0(%rax),%r8d
51f6(2): jz 0x6a(%rip)
51f8(4): cmp $0x9,%r8d
51fc(6): jbe 0x1d2(%rip)
5202(6): nop 0x0(%rax,%rax,1)
5208(3): cmp $0x30,%dl
520b(6): jz 0xed(%rip)
5211(3): sub $0x30,%edx
5214(3): xor %r9d,%r9d
5217(3): cmp $0x9,%edx
521a(4): setbe %r9b
521e(3): mov %r9d,%eax
5221(2): neg %eax
5223(1): ret near (%rsp)
5224(4): nop 0x0(%rax)
5228(4): add $0x1,%rsi
522c(3): movzx (%rsi),%eax
522f(2): cmp $0x30,%al
5231(2): jz 0xfffffff7(%rip)
5233(3): lea 0xffffffd0(%rax),%edx
5236(5): mov $0x1,%eax
523b(3): cmp $0x9,%edx
523e(6): jbe 0x105(%rip)
5244(4): cmp $0x30,%r8b
5248(6): jz 0x100(%rip)
524e(4): sub $0x30,%r8d
5252(2): xor %eax,%eax
5254(4): cmp $0x9,%r8d
5258(3): setbe %al
525b(1): ret near (%rsp)
525c(4): nop 0x0(%rax)
5260(4): add $0x1,%rsi
5264(4): movzx (%rsi),%r9d
5268(4): cmp $0x30,%r9b
526c(2): jz 0xfffffff4(%rip)
526e(3): cmp %r9b,%cl
5271(6): jnz 0x143(%rip)
5277(4): cmp $0x9,%r8d
527b(3): lea 0xffffffd0(%rax),%edx
527e(2): jnbe 0x23(%rip)
5280(4): add $0x1,%rdi
5284(4): add $0x1,%rsi
5288(3): movzx (%rsi),%eax
528b(3): movzx (%rdi),%ecx
528e(3): mov %eax,%r9d
5291(3): lea 0xffffffd0(%rax),%edx
5294(2): cmp %al,%cl
5296(6): jnz 0xc2(%rip)
529c(3): cmp $0x9,%edx
529f(2): jbe 0xffffffe1(%rip)
52a1(3): xor %r10d,%r10d
52a4(3): cmp $0x9,%edx
52a7(6): jnbe 0xf9(%rip)
52ad(2): xor %edx,%edx
52af(1): nop 
52b0(5): movzx 0x1(%rsi,%rdx,1),%eax
52b5(4): add $0x1,%rdx
52b9(3): sub $0x30,%eax
52bc(3): cmp $0x9,%eax
52bf(2): jbe 0xfffffff1(%rip)
52c1(3): cmp %rdx,%r10
52c4(6): jz 0xf9(%rip)
52ca(2): sbb %eax,%eax
52cc(3): and $0x2,%eax
52cf(3): sub $0x1,%eax
52d2(1): ret near (%rsp)
52d3(5): nop 0x0(%rax,%rax,1)
52d8(4): add $0x1,%rsi
52dc(3): movzx (%rsi),%edx
52df(5): jmp 0xfffffe7b(%rip)
52e4(4): nop 0x0(%rax)
52e8(4): add $0x1,%rdi
52ec(4): movzx (%rdi),%r8d
52f0(5): jmp 0xfffffe60(%rip)
52f5(3): nop (%rax)
52f8(4): add $0x1,%rsi
52fc(3): movzx (%rsi),%edx
52ff(5): jmp 0xffffff09(%rip)
5304(4): nop 0x0(%rax)
5308(4): movzx %r8b,%eax
530c(3): sub $0x30,%eax
530f(3): cmp $0x9,%eax
5312(6): jnbe 0xfffffe8f(%rip)
5318(3): xor %r9d,%r9d
531b(5): nop 0x0(%rax,%rax,1)
5320(6): movzx 0x1(%rdi,%r9,1),%eax
5326(4): add $0x1,%r9
532a(3): sub $0x30,%eax
532d(3): cmp $0x9,%eax
5330(2): jbe 0xfffffff0(%rip)
5332(3): cmp $0x9,%ecx
5335(6): jbe 0xfffffe7b(%rip)
533b(2): xor %eax,%eax
533d(3): test %r9,%r9
5340(3): setnz %al
5343(2): REP ret near (%rsp)
5345(3): nop (%rax)
5348(4): add $0x1,%rdi
534c(4): movzx (%rdi),%r8d
5350(5): jmp 0xfffffef4(%rip)
5355(3): nop (%rax)
5358(4): movzx %cl,%r8d
535c(4): sub $0x30,%r8d
5360(4): cmp $0x9,%r8d
5364(6): jnbe 0xffffff3d(%rip)
536a(3): xor %r10d,%r10d
536d(3): nop (%rax)
5370(6): movzx 0x1(%rdi,%r10,1),%eax
5376(4): add $0x1,%r10
537a(3): sub $0x30,%eax
537d(3): cmp $0x9,%eax
5380(2): jbe 0xfffffff0(%rip)
5382(3): cmp $0x9,%edx
5385(6): jbe 0xffffff28(%rip)
538b(2): xor %eax,%eax
538d(3): test %r10,%r10
5390(3): setnz %al
5393(2): neg %eax
5395(1): ret near (%rsp)
5396(a): nop 0x0(%rax,%rax,1)
53a0(2): xor %eax,%eax
53a2(1): ret near (%rsp)
53a3(2): xor %eax,%eax
53a5(3): test %r9,%r9
53a8(2): jz 0xffffff9b(%rip)
53aa(4): movzx %r8b,%r9d
53ae(3): mov %r9d,%eax
53b1(2): sub %edx,%eax
53b3(1): ret near (%rsp)
53b4(4): movzx %r9b,%eax
53b8(3): lea 0xffffffd0(%rax),%edx
53bb(2): jmp 0xffffffa5(%rip)
53bd(2): xor %eax,%eax
53bf(3): test %r10,%r10
53c2(6): jz 0xffffff81(%rip)
53c8(3): mov %r9d,%eax
53cb(2): sub %ecx,%eax
53cd(1): ret near (%rsp)
53ce(5): mov $0xffffffff,%eax
53d3(1): ret near (%rsp)

"verror_at_line" :
53e0(2): push %r14
53e2(2): push %r13
53e4(3): mov %esi,%r13d
53e7(2): push %r12
53e9(1): push %rbp
53ea(3): mov %edi,%r12d
53ed(1): push %rbx
53ee(3): mov %r9,%rsi
53f1(3): mov %r8,%rdi
53f4(3): mov %rdx,%rbp
53f7(3): mov %ecx,%r14d
53fa(5): call 0x496(%rip)
53ff(3): test %rax,%rax
5402(2): jz 0x65(%rip)
5404(3): test %rbp,%rbp
5407(3): mov %rax,%rbx
540a(2): jz 0x36(%rip)
540c(7): lea 0x3980(%rip),%r8
5413(3): mov %r12d,%edi
5416(3): mov %rax,%r9
5419(3): mov %r14d,%ecx
541c(3): mov %rbp,%rdx
541f(3): mov %r13d,%esi
5422(2): xor %eax,%eax
5424(5): call 0xffffbf1c(%rip)
5429(3): mov %rbx,%rdi
542c(1): pop %rbx
542d(1): pop %rbp
542e(2): pop %r12
5430(2): pop %r13
5432(2): pop %r14
5434(5): jmp 0xffffbedc(%rip)
5439(7): nop 0x0(%rax)
5440(7): lea 0x394c(%rip),%rdx
5447(3): mov %r12d,%edi
544a(3): mov %rax,%rcx
544d(3): mov %r13d,%esi
5450(2): xor %eax,%eax
5452(5): call 0xffffc10e(%rip)
5457(3): mov %rbx,%rdi
545a(1): pop %rbx
545b(1): pop %rbp
545c(2): pop %r12
545e(2): pop %r13
5460(2): pop %r14
5462(5): jmp 0xffffbeae(%rip)
5467(7): lea 0x3e3a(%rip),%rsi
546e(5): mov $0x5,%edx
5473(2): xor %edi,%edi
5475(5): call 0xffffbf4b(%rip)
547a(3): mov %rax,%rbx
547d(5): call 0xffffbeb3(%rip)
5482(2): mov (%rax),%esi
5484(3): mov %rbx,%rdx
5487(2): xor %edi,%edi
5489(2): xor %eax,%eax
548b(5): call 0xffffc0d5(%rip)
5490(5): call 0xffffbe90(%rip)

"verror" :
54a0(3): mov %rdx,%r8
54a3(3): mov %rcx,%r9
54a6(2): xor %edx,%edx
54a8(2): xor %ecx,%ecx
54aa(5): jmp 0xffffff36(%rip)

"xmalloc" :
54b0(1): push %rbx
54b1(3): mov %rdi,%rbx
54b4(5): call 0xffffc02c(%rip)
54b9(3): test %rax,%rax
54bc(2): jnz 0x7(%rip)
54be(3): test %rbx,%rbx
54c1(2): jnz 0x4(%rip)
54c3(1): pop %rbx
54c4(1): ret near (%rsp)
54c5(5): call 0x23b(%rip)

"xnmalloc" :
54d0(3): mov %rdi,%rax
54d3(3): mul %rax,%rsi,%rdx
54d6(3): mov %rax,%rdi
54d9(3): seto %al
54dc(3): test %rdi,%rdi
54df(2): js 0xc(%rip)
54e1(3): movzx %al,%eax
54e4(3): test %rax,%rax
54e7(2): jnz 0x4(%rip)
54e9(2): jmp 0xffffffc7(%rip)
54eb(4): sub $0x8,%rsp
54ef(5): call 0x211(%rip)

"xrealloc" :
5510(3): test %rsi,%rsi
5513(1): push %rbx
5514(3): mov %rsi,%rbx
5517(2): jnz 0x7(%rip)
5519(3): test %rdi,%rdi
551c(2): jnz 0x1c(%rip)
551e(3): mov %rbx,%rsi
5521(5): call 0xffffc00f(%rip)
5526(3): test %rax,%rax
5529(2): jnz 0x7(%rip)
552b(3): test %rbx,%rbx
552e(2): jnz 0x13(%rip)
5530(1): pop %rbx
5531(1): ret near (%rsp)
5532(6): nop 0x0(%rax,%rax,1)
5538(5): call 0xffffbdd8(%rip)
553d(2): xor %eax,%eax
553f(1): pop %rbx
5540(1): ret near (%rsp)
5541(5): call 0x1bf(%rip)

"xnrealloc" :
5550(3): mov %rsi,%rax
5553(3): mul %rax,%rdx,%rdx
5556(3): mov %rax,%rsi
5559(3): seto %al
555c(3): test %rsi,%rsi
555f(2): js 0xc(%rip)
5561(3): movzx %al,%eax
5564(3): test %rax,%rax
5567(2): jnz 0x4(%rip)
5569(2): jmp 0xffffffa7(%rip)
556b(4): sub $0x8,%rsp
556f(5): call 0x191(%rip)

"x2nrealloc" :
5580(3): test %rdi,%rdi
5583(3): mov %rdx,%r9
5586(3): mov (%rsi),%rcx
5589(2): jz 0x37(%rip)
558b(2): xor %edx,%edx
558d(a): mov $0x6148914691236517204,%rax
5597(3): div %r9,%rax
559a(3): cmp %rcx,%rax
559d(2): jbe 0x3e(%rip)
559f(3): mov %rcx,%rax
55a2(3): shr $0x1,%rax
55a5(5): lea 0x1(%rax,%rcx,1),%rcx
55aa(3): mov %rcx,(%rsi)
55ad(4): imul %r9,%rcx
55b1(3): mov %rcx,%rsi
55b4(5): jmp 0xffffff5c(%rip)
55b9(7): nop 0x0(%rax)
55c0(3): test %rcx,%rcx
55c3(2): jz 0x25(%rip)
55c5(3): mov %rcx,%rax
55c8(3): mul %rax,%r9,%rdx
55cb(3): seto %dl
55ce(3): test %rax,%rax
55d1(3): movzx %dl,%edx
55d4(2): js 0x7(%rip)
55d6(3): test %rdx,%rdx
55d9(2): jz 0xffffffd1(%rip)
55db(4): sub $0x8,%rsp
55df(5): call 0x121(%rip)
55e4(4): nop 0x0(%rax)
55e8(2): xor %edx,%edx
55ea(5): mov $0x80,%eax
55ef(3): xor %r8d,%r8d
55f2(3): div %r9,%rax
55f5(3): test %rax,%rax
55f8(4): setz %r8b
55fc(4): lea 0x0(%r8,%rax,1),%rcx
5600(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5610(3): test %rdi,%rdi
5613(3): mov (%rsi),%rax
5616(2): jz 0x2a(%rip)
5618(a): mov $0x6148914691236517203,%rdx
5622(3): cmp %rdx,%rax
5625(2): jnbe 0x2c(%rip)
5627(3): mov %rax,%rdx
562a(3): shr $0x1,%rdx
562d(5): lea 0x1(%rdx,%rax,1),%rax
5632(3): mov %rax,(%rsi)
5635(3): mov %rax,%rsi
5638(5): jmp 0xfffffed8(%rip)
563d(3): nop (%rax)
5640(3): test %rax,%rax
5643(5): mov $0x80,%edx
5648(4): cmove %rdx,%rax
564c(3): test %rax,%rax
564f(2): jns 0xffffffe3(%rip)
5651(4): sub $0x8,%rsp
5655(5): call 0xab(%rip)

"xzalloc" :
5660(1): push %rbx
5661(3): mov %rdi,%rbx
5664(5): call 0xfffffe4c(%rip)
5669(3): mov %rbx,%rdx
566c(2): xor %esi,%esi
566e(3): mov %rax,%rdi
5671(1): pop %rbx
5672(5): jmp 0xffffbdce(%rip)

"xcalloc" :
5680(3): mov %rdi,%rax
5683(4): sub $0x8,%rsp
5687(3): mul %rax,%rsi,%rdx
568a(3): seto %dl
568d(3): test %rax,%rax
5690(2): js 0x19(%rip)
5692(3): movzx %dl,%edx
5695(3): test %rdx,%rdx
5698(2): jnz 0x11(%rip)
569a(5): call 0xffffbde6(%rip)
569f(3): test %rax,%rax
56a2(2): jz 0x7(%rip)
56a4(4): add $0x8,%rsp
56a8(1): ret near (%rsp)
56a9(5): call 0x57(%rip)

"xmemdup" :
56b0(1): push %rbp
56b1(1): push %rbx
56b2(3): mov %rdi,%rbp
56b5(3): mov %rsi,%rdi
56b8(3): mov %rsi,%rbx
56bb(4): sub $0x8,%rsp
56bf(5): call 0xfffffdf1(%rip)
56c4(4): add $0x8,%rsp
56c8(3): mov %rbx,%rdx
56cb(3): mov %rbp,%rsi
56ce(1): pop %rbx
56cf(1): pop %rbp
56d0(3): mov %rax,%rdi
56d3(5): jmp 0xffffbddd(%rip)

"xstrdup" :
56e0(1): push %rbx
56e1(3): mov %rdi,%rbx
56e4(5): call 0xffffbcfc(%rip)
56e9(3): mov %rbx,%rdi
56ec(4): lea 0x1(%rax),%rsi
56f0(1): pop %rbx
56f1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5700(7): lea 0x3bc1(%rip),%rsi
5707(4): sub $0x8,%rsp
570b(5): mov $0x5,%edx
5710(2): xor %edi,%edi
5712(5): call 0xffffbcae(%rip)
5717(6): mov 0x2058f3(%rip),%edi
571d(7): lea 0x366f(%rip),%rdx
5724(3): mov %rax,%rcx
5727(2): xor %esi,%esi
5729(2): xor %eax,%eax
572b(5): call 0xffffbe35(%rip)
5730(5): call 0xffffbbf0(%rip)

"xstrcat" :
5740(2): push %r15
5742(2): push %r14
5744(2): push %r13
5746(2): push %r12
5748(1): push %rbp
5749(1): push %rbx
574a(4): sub $0x28,%rsp
574e(9): mov $0x28,%rax
5757(5): mov %rax,0x18(%rsp)
575c(2): xor %eax,%eax
575e(3): test %rdi,%rdi
5761(4): movdqu (%rsi),%xmm0
5765(4): movups %xmm0,(%rsp)
5769(4): mov 0x10(%rsi),%r14
576d(5): mov %r14,0x10(%rsp)
5772(6): jz 0xae(%rip)
5778(3): mov %rdi,%r12
577b(3): mov %rsi,%r15
577e(3): mov %rdi,%rbp
5781(2): xor %ebx,%ebx
5783(7): mov $0xffffffff,%r13
578a(3): mov (%rsp),%edx
578d(3): cmp $0x2f,%edx
5790(6): jnbe 0xe0(%rip)
5796(2): mov %edx,%eax
5798(3): add $0x8,%edx
579b(3): add %r14,%rax
579e(3): mov %edx,(%rsp)
57a1(3): mov (%rax),%rdi
57a4(5): call 0xffffbc3c(%rip)
57a9(3): add %rax,%rbx
57ac(4): cmovnae %r13,%rbx
57b0(4): sub $0x1,%rbp
57b4(2): jnz 0xffffffd6(%rip)
57b6(7): cmp $0x7fffffff,%rbx
57bd(6): jnbe 0xa3(%rip)
57c3(4): lea 0x1(%rbx),%rdi
57c7(5): call 0xfffffce9(%rip)
57cc(3): mov %rax,%r14
57cf(3): mov %rax,%rbx
57d2(2): jmp 0x33(%rip)
57d4(2): mov %edx,%eax
57d6(4): add 0x10(%r15),%rax
57da(3): add $0x8,%edx
57dd(3): mov %edx,(%r15)
57e0(3): mov (%rax),%r13
57e3(3): mov %r13,%rdi
57e6(5): call 0xffffbbfa(%rip)
57eb(3): mov %rbx,%rdi
57ee(3): mov %rax,%rbp
57f1(3): mov %rax,%rdx
57f4(3): mov %r13,%rsi
57f7(3): add %rbp,%rbx
57fa(5): call 0xffffbcb6(%rip)
57ff(4): sub $0x1,%r12
5803(2): jz 0x2d(%rip)
5805(3): mov (%r15),%edx
5808(3): cmp $0x2f,%edx
580b(2): jbe 0xffffffc9(%rip)
580d(4): mov 0x8(%r15),%rax
5811(4): lea 0x8(%rax),%rdx
5815(4): mov %rdx,0x8(%r15)
5819(2): jmp 0xffffffc7(%rip)
581b(5): nop 0x0(%rax,%rax,1)
5820(5): mov $0x1,%edi
5825(5): call 0xfffffc8b(%rip)
582a(3): mov %rax,%rbx
582d(3): mov %rax,%r14
5830(3): mov $0x0,(%rbx)
5833(5): mov 0x18(%rsp),%rcx
5838(9): xor $0x28,%rcx
5841(3): mov %r14,%rax
5844(2): jnz 0x11(%rip)
5846(4): add $0x28,%rsp
584a(1): pop %rbx
584b(1): pop %rbp
584c(2): pop %r12
584e(2): pop %r13
5850(2): pop %r14
5852(2): pop %r15
5854(1): ret near (%rsp)
5855(5): call 0xffffbbab(%rip)
585a(6): nop 0x0(%rax,%rax,1)
5860(5): call 0xffffbad0(%rip)
5865(3): xor %r14d,%r14d
5868(6): mov $0x4b,(%rax)
586e(2): jmp 0xffffffc5(%rip)
5870(5): mov 0x8(%rsp),%rax
5875(4): lea 0x8(%rax),%rdx
5879(5): mov %rdx,0x8(%rsp)
587e(5): jmp 0xffffff23(%rip)

"xvasprintf" :
5890(4): sub $0x18,%rsp
5894(9): mov $0x28,%rax
589d(5): mov %rax,0x8(%rsp)
58a2(2): xor %eax,%eax
58a4(3): movzx (%rdi),%eax
58a7(2): test %al,%al
58a9(2): jz 0x7d(%rip)
58ab(2): cmp $0x25,%al
58ad(3): mov %rdi,%r8
58b0(2): jnz 0x38(%rip)
58b2(4): cmp $0x73,0x1(%rdi)
58b6(2): jnz 0x32(%rip)
58b8(2): xor %edi,%edi
58ba(2): jmp 0x13(%rip)
58bc(4): nop 0x0(%rax)
58c0(3): cmp $0x25,%cl
58c3(2): jnz 0x25(%rip)
58c5(6): cmp $0x73,0x1(%r8,%rdi,2)
58cb(2): jnz 0x1d(%rip)
58cd(4): add $0x1,%rdi
58d1(5): movzx 0x0(%r8,%rdi,2),%ecx
58d6(2): test %cl,%cl
58d8(2): jnz 0xffffffe8(%rip)
58da(5): call 0xfffffe66(%rip)
58df(2): jmp 0x1f(%rip)
58e1(7): nop 0x0(%rax)
58e8(3): mov %rsi,%rdx
58eb(3): mov %rsp,%rdi
58ee(3): mov %r8,%rsi
58f1(5): call 0xdf(%rip)
58f6(2): test %eax,%eax
58f8(2): js 0x20(%rip)
58fa(4): mov (%rsp),%rax
58fe(5): mov 0x8(%rsp),%rdx
5903(9): xor $0x28,%rdx
590c(2): jnz 0x1e(%rip)
590e(4): add $0x18,%rsp
5912(1): ret near (%rsp)
5913(5): nop 0x0(%rax,%rax,1)
5918(5): call 0xffffba18(%rip)
591d(3): cmp $0xc,(%rax)
5920(2): jz 0xf(%rip)
5922(2): xor %eax,%eax
5924(2): jmp 0xffffffda(%rip)
5926(2): xor %edi,%edi
5928(2): jmp 0xffffffb2(%rip)
592a(5): call 0xffffbad6(%rip)
592f(5): call 0xfffffdd1(%rip)

"rpl_mbrtowc" :
5940(2): push %r13
5942(2): push %r12
5944(3): mov %rsi,%r13
5947(1): push %rbp
5948(1): push %rbx
5949(3): mov %rdi,%rbx
594c(3): mov %rdx,%r12
594f(4): sub $0x18,%rsp
5953(9): mov $0x28,%rax
595c(5): mov %rax,0x8(%rsp)
5961(2): xor %eax,%eax
5963(5): lea 0x4(%rsp),%rax
5968(3): test %rdi,%rdi
596b(4): cmove %rax,%rbx
596f(3): mov %rbx,%rdi
5972(5): call 0xffffba9e(%rip)
5977(4): cmp $0xfffffffd,%rax
597b(3): mov %rax,%rbp
597e(2): jbe 0x22(%rip)
5980(3): test %r12,%r12
5983(2): jz 0x1d(%rip)
5985(2): xor %edi,%edi
5987(5): call 0x149(%rip)
598c(2): test %al,%al
598e(2): jnz 0x12(%rip)
5990(5): movzx 0x0(%r13),%eax
5995(5): mov $0x1,%ebp
599a(2): mov %eax,(%rbx)
599c(4): nop 0x0(%rax)
59a0(5): mov 0x8(%rsp),%rdx
59a5(9): xor $0x28,%rdx
59ae(3): mov %rbp,%rax
59b1(2): jnz 0xd(%rip)
59b3(4): add $0x18,%rsp
59b7(1): pop %rbx
59b8(1): pop %rbp
59b9(2): pop %r12
59bb(2): pop %r13
59bd(1): ret near (%rsp)
59be(5): call 0xffffba42(%rip)

"rpl_vasprintf" :
59d0(1): push %rbx
59d1(3): mov %rsi,%rax
59d4(3): mov %rdi,%rbx
59d7(2): xor %edi,%edi
59d9(4): sub $0x10,%rsp
59dd(9): mov $0x28,%rcx
59e6(5): mov %rcx,0x8(%rsp)
59eb(2): xor %ecx,%ecx
59ed(3): mov %rsp,%rsi
59f0(3): mov %rdx,%rcx
59f3(3): mov %rax,%rdx
59f6(5): call 0x29a(%rip)
59fb(3): test %rax,%rax
59fe(2): jz 0x44(%rip)
5a00(4): mov (%rsp),%rdx
5a04(7): cmp $0x7fffffff,%rdx
5a0b(2): jnbe 0x1d(%rip)
5a0d(3): mov %rax,(%rbx)
5a10(2): mov %edx,%eax
5a12(5): mov 0x8(%rsp),%rbx
5a17(9): xor $0x28,%rbx
5a20(2): jnz 0x29(%rip)
5a22(4): add $0x10,%rsp
5a26(1): pop %rbx
5a27(1): ret near (%rsp)
5a28(3): mov %rax,%rdi
5a2b(5): call 0xffffb8e5(%rip)
5a30(5): call 0xffffb900(%rip)
5a35(6): mov $0x4b,(%rax)
5a3b(5): mov $0xffffffff,%eax
5a40(2): jmp 0xffffffd2(%rip)
5a42(5): mov $0xffffffff,%eax
5a47(2): jmp 0xffffffcb(%rip)
5a49(5): call 0xffffb9b7(%rip)

"close_stream" :
5a50(2): push %r12
5a52(1): push %rbp
5a53(3): mov %rdi,%rbp
5a56(1): push %rbx
5a57(5): call 0xffffb919(%rip)
5a5c(3): mov 0x0(%rbp),%ebx
5a5f(3): mov %rbp,%rdi
5a62(3): mov %rax,%r12
5a65(5): call 0x10b(%rip)
5a6a(3): and $0x20,%ebx
5a6d(2): test %ebx,%ebx
5a6f(2): jnz 0x19(%rip)
5a71(2): test %eax,%eax
5a73(2): jz 0xc(%rip)
5a75(3): test %r12,%r12
5a78(5): mov $0xffffffff,%eax
5a7d(2): jz 0x3b(%rip)
5a7f(1): pop %rbx
5a80(1): pop %rbp
5a81(2): pop %r12
5a83(1): ret near (%rsp)
5a84(4): nop 0x0(%rax)
5a88(2): test %eax,%eax
5a8a(2): jnz 0x1e(%rip)
5a8c(5): call 0xffffb8a4(%rip)
5a91(6): mov $0x0,(%rax)
5a97(5): mov $0xffffffff,%eax
5a9c(1): pop %rbx
5a9d(1): pop %rbp
5a9e(2): pop %r12
5aa0(1): ret near (%rsp)
5aa1(7): nop 0x0(%rax)
5aa8(1): pop %rbx
5aa9(5): mov $0xffffffff,%eax
5aae(1): pop %rbp
5aaf(2): pop %r12
5ab1(1): ret near (%rsp)
5ab2(6): nop 0x0(%rax,%rax,1)
5ab8(5): call 0xffffb878(%rip)
5abd(3): cmp $0x9,(%rax)
5ac0(1): pop %rbx
5ac1(1): pop %rbp
5ac2(2): pop %r12
5ac4(3): setnz %al
5ac7(3): movzx %al,%eax
5aca(2): neg %eax
5acc(1): ret near (%rsp)

"hard_locale" :
5ad0(4): sub $0x8,%rsp
5ad4(2): xor %esi,%esi
5ad6(5): call 0xffffba6a(%rip)
5adb(3): mov %rax,%rdx
5ade(5): mov $0x1,%eax
5ae3(3): test %rdx,%rdx
5ae6(2): jz 0x1f(%rip)
5ae8(7): lea 0x37ea(%rip),%rdi
5aef(5): mov $0x2,%ecx
5af4(3): mov %rdx,%rsi
5af7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5af9(3): setnbe %cl
5afc(3): sbb $0x0,%cl
5aff(2): xor %eax,%eax
5b01(2): test %cl,%cl
5b03(2): jnz 0xd(%rip)
5b05(4): add $0x8,%rsp
5b09(1): ret near (%rsp)
5b0a(6): nop 0x0(%rax,%rax,1)
5b10(7): lea 0x37c4(%rip),%rdi
5b17(5): mov $0x6,%ecx
5b1c(3): mov %rdx,%rsi
5b1f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5b21(3): setnbe %al
5b24(2): sbb $0x0,%al
5b26(2): test %al,%al
5b28(3): setnz %al
5b2b(4): add $0x8,%rsp
5b2f(1): ret near (%rsp)

"locale_charset" :
5b30(4): sub $0x8,%rsp
5b34(5): mov $0xe,%edi
5b39(5): call 0xffffb9c7(%rip)
5b3e(3): test %rax,%rax
5b41(2): jz 0x1f(%rip)
5b43(3): cmp $0x0,(%rax)
5b46(7): lea 0x3794(%rip),%rdx
5b4d(4): cmove %rdx,%rax
5b51(4): add $0x8,%rsp
5b55(1): ret near (%rsp)
5b56(a): nop 0x0(%rax,%rax,1)
5b60(7): lea 0x377a(%rip),%rax
5b67(4): add $0x8,%rsp
5b6b(1): ret near (%rsp)

"rpl_fclose" :
5b70(2): push %r12
5b72(1): push %rbp
5b73(1): push %rbx
5b74(3): mov %rdi,%rbx
5b77(5): call 0xffffb949(%rip)
5b7c(2): test %eax,%eax
5b7e(3): mov %rbx,%rdi
5b81(2): js 0x56(%rip)
5b83(5): call 0xffffb99d(%rip)
5b88(2): test %eax,%eax
5b8a(2): jnz 0x2e(%rip)
5b8c(3): mov %rbx,%rdi
5b8f(5): call 0x61(%rip)
5b94(2): test %eax,%eax
5b96(2): jz 0x3e(%rip)
5b98(5): call 0xffffb798(%rip)
5b9d(3): mov (%rax),%r12d
5ba0(3): mov %rbx,%rdi
5ba3(3): mov %rax,%rbp
5ba6(5): call 0xffffb7fa(%rip)
5bab(3): test %r12d,%r12d
5bae(2): jnz 0x32(%rip)
5bb0(1): pop %rbx
5bb1(1): pop %rbp
5bb2(2): pop %r12
5bb4(1): ret near (%rsp)
5bb5(3): nop (%rax)
5bb8(3): mov %rbx,%rdi
5bbb(5): call 0xffffb905(%rip)
5bc0(2): xor %esi,%esi
5bc2(5): mov $0x1,%edx
5bc7(2): mov %eax,%edi
5bc9(5): call 0xffffb867(%rip)
5bce(4): cmp $0xffffffff,%rax
5bd2(2): jnz 0xffffffba(%rip)
5bd4(3): mov %rbx,%rdi
5bd7(1): pop %rbx
5bd8(1): pop %rbp
5bd9(2): pop %r12
5bdb(5): jmp 0xffffb7c5(%rip)
5be0(4): mov %r12d,0x0(%rbp)
5be4(5): mov $0xffffffff,%eax
5be9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5bf0(3): test %rdi,%rdi
5bf3(1): push %rbx
5bf4(3): mov %rdi,%rbx
5bf7(2): jz 0x13(%rip)
5bf9(5): call 0xffffb927(%rip)
5bfe(2): test %eax,%eax
5c00(2): jz 0xa(%rip)
5c02(6): test $0x100,(%rbx)
5c08(2): jnz 0x10(%rip)
5c0a(3): mov %rbx,%rdi
5c0d(1): pop %rbx
5c0e(5): jmp 0xffffb8e2(%rip)
5c13(5): nop 0x0(%rax,%rax,1)
5c18(3): mov %rbx,%rdi
5c1b(5): mov $0x1,%edx
5c20(2): xor %esi,%esi
5c22(5): call 0xe(%rip)
5c27(3): mov %rbx,%rdi
5c2a(1): pop %rbx
5c2b(5): jmp 0xffffb8c5(%rip)

"rpl_fseeko" :
5c30(4): mov 0x8(%rdi),%rax
5c34(4): cmp %rax,0x10(%rdi)
5c38(2): jz 0x8(%rip)
5c3a(5): jmp 0xffffb936(%rip)
5c3f(1): nop 
5c40(4): mov 0x20(%rdi),%rax
5c44(4): cmp %rax,0x28(%rdi)
5c48(2): jnz 0xfffffff2(%rip)
5c4a(5): cmp $0x0,0x48(%rdi)
5c4f(2): jnz 0xffffffeb(%rip)
5c51(2): push %r12
5c53(1): push %rbp
5c54(3): mov %edx,%r12d
5c57(1): push %rbx
5c58(3): mov %rsi,%rbp
5c5b(3): mov %rdi,%rbx
5c5e(5): call 0xffffb862(%rip)
5c63(3): mov %r12d,%edx
5c66(3): mov %rbp,%rsi
5c69(2): mov %eax,%edi
5c6b(5): call 0xffffb7c5(%rip)
5c70(4): cmp $0xffffffff,%rax
5c74(2): jz 0xe(%rip)
5c76(3): and $0xef,(%rbx)
5c79(7): mov %rax,0x90(%rbx)
5c80(2): xor %eax,%eax
5c82(1): pop %rbx
5c83(1): pop %rbp
5c84(2): pop %r12
5c86(1): ret near (%rsp)

"vasnprintf" :
5c90(1): push %rbp
5c91(3): mov %rsp,%rbp
5c94(2): push %r15
5c96(2): push %r14
5c98(2): push %r13
5c9a(2): push %r12
5c9c(7): lea 0xfffffc50(%rbp),%r14
5ca3(1): push %rbx
5ca4(3): mov %rdx,%rbx
5ca7(3): mov %rcx,%r12
5caa(3): mov %r14,%rdx
5cad(7): sub $0x408,%rsp
5cb4(7): mov %rsi,0xfffffbe8(%rbp)
5cbb(7): lea 0xfffffd40(%rbp),%rsi
5cc2(7): mov %rdi,0xfffffc18(%rbp)
5cc9(3): mov %rbx,%rdi
5ccc(7): mov %r14,0xfffffbf0(%rbp)
5cd3(9): mov $0x28,%rax
5cdc(4): mov %rax,0xffffffc8(%rbp)
5ce0(2): xor %eax,%eax
5ce2(7): mov %rsi,0xfffffbf8(%rbp)
5ce9(5): call 0x12c7(%rip)
5cee(2): test %eax,%eax
5cf0(6): js 0xe68(%rip)
5cf6(3): mov %r14,%rsi
5cf9(3): mov %r12,%rdi
5cfc(5): call 0x10b4(%rip)
5d01(2): test %eax,%eax
5d03(6): js 0xebd(%rip)
5d09(7): mov 0xfffffd50(%rbp),%rax
5d10(7): mov $0xffffffff,%rdx
5d17(4): add $0x7,%rax
5d1b(4): cmp $0x6,%rax
5d1f(4): cmovbe %rdx,%rax
5d23(7): add 0xfffffd58(%rbp),%rax
5d2a(6): jb 0xa2e(%rip)
5d30(3): mov %rax,%rdi
5d33(3): xor %r8d,%r8d
5d36(4): add $0x6,%rdi
5d3a(4): setb %r8b
5d3e(6): jb 0xa1a(%rip)
5d44(7): cmp $0xf9f,%rdi
5d4b(6): jbe 0x14d(%rip)
5d51(4): cmp $0xffffffff,%rdi
5d55(7): mov %r8,0xfffffc38(%rbp)
5d5c(6): jz 0x9fc(%rip)
5d62(5): call 0xffffb77e(%rip)
5d67(3): test %rax,%rax
5d6a(7): mov %rax,0xfffffc28(%rbp)
5d71(6): jz 0x9e7(%rip)
5d77(7): mov 0xfffffc38(%rbp),%r8
5d7e(7): mov %rax,0xfffffbe0(%rbp)
5d85(3): xor %r12d,%r12d
5d88(8): cmp $0x0,0xfffffc18(%rbp)
5d90(2): jz 0xc(%rip)
5d92(7): mov 0xfffffbe8(%rbp),%rax
5d99(3): mov (%rax),%r12
5d9c(7): mov 0xfffffd48(%rbp),%r13
5da3(7): lea 0xfffffc44(%rbp),%rax
5daa(7): mov 0xfffffc18(%rbp),%r15
5db1(b): mov $0x0,0xfffffc00(%rbp)
5dbc(7): mov %rax,0xfffffc10(%rbp)
5dc3(3): mov %rbx,%rax
5dc6(3): mov %r8,%rbx
5dc9(4): mov 0x0(%r13),%rcx
5dcd(3): mov %rax,%r8
5dd0(3): cmp %r8,%rcx
5dd3(6): jz 0x96e(%rip)
5dd9(3): sub %r8,%rcx
5ddc(3): mov %rbx,%rax
5ddf(3): add %rcx,%rax
5de2(3): mov %rax,%r14
5de5(6): jnb 0xe3(%rip)
5deb(4): cmp $0xffffffff,%r12
5def(6): jz 0xad1(%rip)
5df5(5): call 0xffffb53b(%rip)
5dfa(7): mov %rax,0xfffffc38(%rbp)
5e01(7): cmp 0xfffffc18(%rbp),%r15
5e08(2): jz 0xb(%rip)
5e0a(3): test %r15,%r15
5e0d(6): jnz 0xae3(%rip)
5e13(7): mov 0xfffffbe0(%rbp),%rax
5e1a(3): test %rax,%rax
5e1d(2): jz 0xa(%rip)
5e1f(3): mov %rax,%rdi
5e22(5): call 0xffffb4ee(%rip)
5e27(7): mov 0xfffffbf8(%rbp),%rax
5e2e(7): mov 0xfffffd48(%rbp),%rdi
5e35(4): add $0x20,%rax
5e39(3): cmp %rax,%rdi
5e3c(2): jz 0x7(%rip)
5e3e(5): call 0xffffb4d2(%rip)
5e43(7): mov 0xfffffbf0(%rbp),%rax
5e4a(7): mov 0xfffffc58(%rbp),%rdi
5e51(4): add $0x10,%rax
5e55(3): cmp %rax,%rdi
5e58(2): jz 0x7(%rip)
5e5a(5): call 0xffffb4b6(%rip)
5e5f(7): mov 0xfffffc38(%rbp),%rax
5e66(3): xor %r15d,%r15d
5e69(6): mov $0xc,(%rax)
5e6f(4): mov 0xffffffc8(%rbp),%rdi
5e73(9): xor $0x28,%rdi
5e7c(3): mov %r15,%rax
5e7f(6): jnz 0xf08(%rip)
5e85(4): lea 0xffffffd8(%rbp),%rsp
5e89(1): pop %rbx
5e8a(2): pop %r12
5e8c(2): pop %r13
5e8e(2): pop %r14
5e90(2): pop %r15
5e92(1): pop %rbp
5e93(1): ret near (%rsp)
5e94(4): nop 0x0(%rax)
5e98(4): add $0x24,%rax
5e9c(b): mov $0x0,0xfffffbe0(%rbp)
5ea7(4): and $0xfffffff0,%rax
5eab(3): sub %rax,%rsp
5eae(5): lea 0xf(%rsp),%rax
5eb3(4): and $0xfffffff0,%rax
5eb7(7): mov %rax,0xfffffc28(%rbp)
5ebe(5): jmp 0xfffffec7(%rip)
5ec3(5): nop 0x0(%rax,%rax,1)
5ec8(3): cmp %rax,%r12
5ecb(2): jnb 0x69(%rip)
5ecd(3): test %r12,%r12
5ed0(6): jnz 0x930(%rip)
5ed6(4): cmp $0xc,%rax
5eda(6): jnbe 0x938(%rip)
5ee0(6): mov $0xc,%r12d
5ee6(7): cmp 0xfffffc18(%rbp),%r15
5eed(3): setz %dl
5ef0(3): test %r15,%r15
5ef3(6): jz 0x945(%rip)
5ef9(2): test %dl,%dl
5efb(6): jnz 0x93d(%rip)
5f01(3): mov %r12,%rsi
5f04(3): mov %r15,%rdi
5f07(7): mov %r8,0xfffffc30(%rbp)
5f0e(7): mov %rcx,0xfffffc38(%rbp)
5f15(5): call 0xffffb61b(%rip)
5f1a(3): test %rax,%rax
5f1d(7): mov 0xfffffc38(%rbp),%rcx
5f24(7): mov 0xfffffc30(%rbp),%r8
5f2b(6): jz 0x9b0(%rip)
5f31(3): mov %rax,%r15
5f34(4): lea 0x0(%r15,%rbx,1),%rdi
5f38(3): mov %rcx,%rdx
5f3b(3): mov %r8,%rsi
5f3e(5): call 0xffffb572(%rip)
5f43(7): mov 0xfffffc00(%rbp),%rax
5f4a(7): cmp %rax,0xfffffd40(%rbp)
5f51(6): jz 0xcba(%rip)
5f57(5): movzx 0x48(%r13),%edx
5f5c(4): mov 0x50(%r13),%rax
5f60(3): cmp $0x25,%dl
5f63(6): jz 0x795(%rip)
5f69(4): cmp $0xffffffff,%rax
5f6d(6): jz 0xc49(%rip)
5f73(7): mov 0xfffffc58(%rbp),%r8
5f7a(4): shl/sal $0x5,%rax
5f7e(3): add %r8,%rax
5f81(3): cmp $0x6e,%dl
5f84(2): mov (%rax),%edi
5f86(6): mov %edi,0xfffffc30(%rbp)
5f8c(6): jz 0x7e4(%rip)
5f92(4): mov 0x10(%r13),%eax
5f96(7): mov 0xfffffc28(%rbp),%rdi
5f9d(2): test $0x1,%al
5f9f(3): mov $0x25,(%rdi)
5fa2(4): lea 0x1(%rdi),%rbx
5fa6(2): jz 0x11(%rip)
5fa8(7): mov 0xfffffc28(%rbp),%rdi
5faf(4): lea 0x2(%rdi),%rbx
5fb3(4): mov $0x27,0x1(%rdi)
5fb7(2): test $0x2,%al
5fb9(2): jz 0x9(%rip)
5fbb(3): mov $0x2d,(%rbx)
5fbe(4): add $0x1,%rbx
5fc2(2): test $0x4,%al
5fc4(2): jz 0x9(%rip)
5fc6(3): mov $0x2b,(%rbx)
5fc9(4): add $0x1,%rbx
5fcd(2): test $0x8,%al
5fcf(2): jz 0x9(%rip)
5fd1(3): mov $0x20,(%rbx)
5fd4(4): add $0x1,%rbx
5fd8(2): test $0x10,%al
5fda(2): jz 0x9(%rip)
5fdc(3): mov $0x23,(%rbx)
5fdf(4): add $0x1,%rbx
5fe3(2): test $0x40,%al
5fe5(2): jz 0x9(%rip)
5fe7(3): mov $0x49,(%rbx)
5fea(4): add $0x1,%rbx
5fee(2): test $0x20,%al
5ff0(2): jz 0x9(%rip)
5ff2(3): mov $0x30,(%rbx)
5ff5(4): add $0x1,%rbx
5ff9(4): mov 0x18(%r13),%rsi
5ffd(4): mov 0x20(%r13),%rdx
6001(3): cmp %rdx,%rsi
6004(2): jz 0x32(%rip)
6006(3): mov %rdx,%rcx
6009(3): mov %rbx,%rdi
600c(7): mov %r8,0xfffffc20(%rbp)
6013(3): sub %rsi,%rcx
6016(3): mov %rcx,%rdx
6019(7): mov %rcx,0xfffffc38(%rbp)
6020(5): call 0xffffb490(%rip)
6025(7): mov 0xfffffc38(%rbp),%rcx
602c(7): mov 0xfffffc20(%rbp),%r8
6033(3): add %rcx,%rbx
6036(4): mov 0x30(%r13),%rsi
603a(4): mov 0x38(%r13),%rdx
603e(3): cmp %rdx,%rsi
6041(2): jz 0x32(%rip)
6043(3): mov %rdx,%rcx
6046(3): mov %rbx,%rdi
6049(7): mov %r8,0xfffffc20(%rbp)
6050(3): sub %rsi,%rcx
6053(3): mov %rcx,%rdx
6056(7): mov %rcx,0xfffffc38(%rbp)
605d(5): call 0xffffb453(%rip)
6062(7): mov 0xfffffc38(%rbp),%rcx
6069(7): mov 0xfffffc20(%rbp),%r8
6070(3): add %rcx,%rbx
6073(6): mov 0xfffffc30(%rbp),%edi
6079(3): cmp $0x10,%edi
607c(2): jnbe 0x2f(%rip)
607e(5): mov $0x1,%eax
6083(2): mov %edi,%ecx
6085(3): shl/sal %cl,%rax
6088(5): test $0x14180,%eax
608d(2): jnz 0x17(%rip)
608f(3): test $0x10,%ah
6092(6): jnz 0x95e(%rip)
6098(3): test $0x6,%ah
609b(2): jz 0x10(%rip)
609d(3): mov $0x6c,(%rbx)
60a0(4): add $0x1,%rbx
60a4(3): mov $0x6c,(%rbx)
60a7(4): add $0x1,%rbx
60ab(5): movzx 0x48(%r13),%eax
60b0(4): mov $0x0,0x1(%rbx)
60b4(2): mov %al,(%rbx)
60b6(4): mov 0x28(%r13),%rax
60ba(4): cmp $0xffffffff,%rax
60be(6): jz 0x732(%rip)
60c4(4): shl/sal $0x5,%rax
60c8(3): add %r8,%rax
60cb(3): cmp $0x5,(%rax)
60ce(6): jnz 0xae8(%rip)
60d4(3): mov 0x10(%rax),%eax
60d7(a): mov $0x1,0xfffffc20(%rbp)
60e1(6): mov %eax,0xfffffc48(%rbp)
60e7(4): mov 0x40(%r13),%rax
60eb(4): cmp $0xffffffff,%rax
60ef(2): jz 0x2d(%rip)
60f1(4): shl/sal $0x5,%rax
60f5(3): add %rax,%r8
60f8(4): cmp $0x5,(%r8)
60fc(6): jnz 0xaba(%rip)
6102(6): mov 0xfffffc20(%rbp),%eax
6108(4): mov 0x10(%r8),%edx
610c(7): mov %edx,0xfffffc48(%rbp,%rax,4)
6113(3): lea 0x1(%rax),%eax
6116(6): mov %eax,0xfffffc20(%rbp)
611c(3): mov %r14,%rax
611f(2): xor %edx,%edx
6121(4): add $0x2,%rax
6125(6): jb 0xc67(%rip)
612b(3): cmp %rax,%r12
612e(2): jnb 0x4d(%rip)
6130(3): test %r12,%r12
6133(6): jnz 0x825(%rip)
6139(4): cmp $0xc,%rax
613d(6): jnbe 0x833(%rip)
6143(6): mov $0xc,%r12d
6149(7): cmp 0xfffffc18(%rbp),%r15
6150(3): setz %dl
6153(3): test %r15,%r15
6156(6): jz 0x84a(%rip)
615c(2): test %dl,%dl
615e(6): jnz 0x842(%rip)
6164(3): mov %r12,%rsi
6167(3): mov %r15,%rdi
616a(5): call 0xffffb3c6(%rip)
616f(3): test %rax,%rax
6172(6): jz 0xfffffc83(%rip)
6178(3): mov %rax,%r15
617b(5): mov $0x0,0x0(%r15,%r14,1)
6180(5): call 0xffffb1b0(%rip)
6185(7): mov %rax,0xfffffc38(%rbp)
618c(2): mov (%rax),%eax
618e(7): mov %rbx,0xfffffc08(%rbp)
6195(6): mov %eax,0xfffffbdc(%rbp)
619b(5): nop 0x0(%rax,%rax,1)
61a0(7): mov 0xfffffc38(%rbp),%rax
61a7(3): mov %r12,%rbx
61aa(6): mov $0x7fffffff,%r10d
61b0(3): sub %r14,%rbx
61b3(a): mov $0xffffffff,0xfffffc44(%rbp)
61bd(7): cmp $0x7fffffff,%rbx
61c4(6): mov $0x0,(%rax)
61ca(6): mov 0xfffffc30(%rbp),%eax
61d0(4): cmovbe %rbx,%r10
61d4(3): cmp $0x11,%eax
61d7(6): jnbe 0x9df(%rip)
61dd(7): lea 0x3104(%rip),%rsi
61e4(4): movsxd 0x0(%rsi,%rax,4),%rax
61e8(3): add %rsi,%rax
61eb(2): jmp %rax
61ed(3): nop (%rax)
61f0(4): mov 0x50(%r13),%rax
61f4(4): lea 0x0(%r15,%r14,1),%rdi
61f8(4): shl/sal $0x5,%rax
61fc(7): add 0xfffffc58(%rbp),%rax
6203(4): mov 0x10(%rax),%r9
6207(6): mov 0xfffffc20(%rbp),%eax
620d(3): cmp $0x1,%eax
6210(6): jz 0x4c8(%rip)
6216(3): cmp $0x2,%eax
6219(6): jz 0x4a7(%rip)
621f(4): sub $0x8,%rsp
6223(6): push 0xfffffc10(%rbp)
6229(7): mov 0xfffffc28(%rbp),%r8
6230(3): mov %r10,%rsi
6233(7): mov $0xffffffff,%rcx
623a(5): mov $0x1,%edx
623f(2): xor %eax,%eax
6241(7): mov %r10,0xfffffbd0(%rbp)
6248(5): call 0xffffb0b8(%rip)
624d(1): pop %rsi
624e(1): pop %rdi
624f(7): mov 0xfffffbd0(%rbp),%r10
6256(6): mov 0xfffffc44(%rbp),%ecx
625c(2): test %ecx,%ecx
625e(6): js 0x13e(%rip)
6264(3): movsxd %ecx,%rdx
6267(3): cmp %r10,%rdx
626a(2): jnb 0x10(%rip)
626c(3): add %r15,%rdx
626f(5): cmp $0x0,0x0(%rdx,%r14,1)
6274(6): jnz 0x942(%rip)
627a(2): cmp %eax,%ecx
627c(2): jnl 0xa(%rip)
627e(6): mov %eax,0xfffffc44(%rbp)
6284(2): mov %eax,%ecx
6286(3): lea 0x1(%rcx),%eax
6289(3): cmp %r10,%rax
628c(6): jb 0x834(%rip)
6292(7): cmp $0x7ffffffe,%rbx
6299(6): jnbe 0x847(%rip)
629f(4): lea 0x0(%r12,%r12,1),%rsi
62a3(3): lea 0x2(%rcx),%edx
62a6(3): test %r12,%r12
62a9(7): mov $0xffffffff,%rax
62b0(4): cmovns %rsi,%rax
62b4(3): add %r14,%rdx
62b7(6): jb 0xac1(%rip)
62bd(3): cmp %rdx,%rax
62c0(4): cmovnae %rdx,%rax
62c4(3): cmp %rax,%r12
62c7(6): jnb 0xfffffed9(%rip)
62cd(3): test %r12,%r12
62d0(6): js 0xfffffb31(%rip)
62d6(3): cmp %rax,%rsi
62d9(3): mov %rsi,%r12
62dc(2): jnb 0xf(%rip)
62de(4): cmp $0xffffffff,%rax
62e2(6): jz 0xfffffb1f(%rip)
62e8(3): mov %rax,%r12
62eb(7): cmp 0xfffffc18(%rbp),%r15
62f2(3): setz %bl
62f5(3): test %r15,%r15
62f8(6): jz 0x388(%rip)
62fe(2): test %bl,%bl
6300(6): jnz 0x380(%rip)
6306(3): mov %r12,%rsi
6309(3): mov %r15,%rdi
630c(5): call 0xffffb224(%rip)
6311(3): test %rax,%rax
6314(6): jz 0xfffffaed(%rip)
631a(3): mov %rax,%r15
631d(5): jmp 0xfffffe83(%rip)
6322(6): nop 0x0(%rax,%rax,1)
6328(4): mov 0x50(%r13),%rax
632c(4): lea 0x0(%r15,%r14,1),%rdi
6330(4): shl/sal $0x5,%rax
6334(7): add 0xfffffc58(%rbp),%rax
633b(4): mov 0x10(%rax),%r9d
633f(6): mov 0xfffffc20(%rbp),%eax
6345(3): cmp $0x1,%eax
6348(6): jz 0x238(%rip)
634e(3): cmp $0x2,%eax
6351(6): jz 0x277(%rip)
6357(4): sub $0x8,%rsp
635b(6): push 0xfffffc10(%rbp)
6361(7): mov 0xfffffc28(%rbp),%r8
6368(7): mov $0xffffffff,%rcx
636f(5): mov $0x1,%edx
6374(3): mov %r10,%rsi
6377(2): xor %eax,%eax
6379(7): mov %r10,0xfffffbd0(%rbp)
6380(5): call 0xffffaf80(%rip)
6385(1): pop %rdx
6386(1): pop %rcx
6387(6): mov 0xfffffc44(%rbp),%ecx
638d(7): mov 0xfffffbd0(%rbp),%r10
6394(2): test %ecx,%ecx
6396(6): jns 0xfffffece(%rip)
639c(7): mov 0xfffffc08(%rbp),%rdi
63a3(4): cmp $0x0,0x1(%rdi)
63a7(6): jnz 0x341(%rip)
63ad(2): test %eax,%eax
63af(6): jns 0xfffffecf(%rip)
63b5(7): mov 0xfffffc38(%rbp),%rax
63bc(2): mov (%rax),%ebx
63be(2): test %ebx,%ebx
63c0(2): jnz 0x20(%rip)
63c2(5): movzx 0x48(%r13),%eax
63c7(5): mov $0x16,%ebx
63cc(3): and $0xef,%eax
63cf(2): cmp $0x63,%al
63d1(5): mov $0x54,%eax
63d6(3): cmove %eax,%ebx
63d9(7): nop 0x0(%rax)
63e0(7): cmp 0xfffffc18(%rbp),%r15
63e7(2): jz 0xb(%rip)
63e9(3): test %r15,%r15
63ec(6): jnz 0x7b0(%rip)
63f2(7): mov 0xfffffbe0(%rbp),%rax
63f9(3): test %rax,%rax
63fc(2): jz 0xa(%rip)
63fe(3): mov %rax,%rdi
6401(5): call 0xffffaf0f(%rip)
6406(7): mov 0xfffffbf8(%rbp),%rax
640d(7): mov 0xfffffd48(%rbp),%rdi
6414(4): add $0x20,%rax
6418(3): cmp %rax,%rdi
641b(2): jz 0x7(%rip)
641d(5): call 0xffffaef3(%rip)
6422(7): mov 0xfffffbf0(%rbp),%rax
6429(7): mov 0xfffffc58(%rbp),%rdi
6430(4): add $0x10,%rax
6434(3): cmp %rax,%rdi
6437(2): jz 0x7(%rip)
6439(5): call 0xffffaed7(%rip)
643e(7): mov 0xfffffc38(%rbp),%rax
6445(3): xor %r15d,%r15d
6448(2): mov %ebx,(%rax)
644a(5): jmp 0xfffffa25(%rip)
644f(1): nop 
6450(4): mov 0x50(%r13),%rax
6454(4): lea 0x0(%r15,%r14,1),%rdi
6458(4): shl/sal $0x5,%rax
645c(7): add 0xfffffc58(%rbp),%rax
6463(3): fld 0x10(%rax),%st0
6466(6): mov 0xfffffc20(%rbp),%eax
646c(3): cmp $0x1,%eax
646f(6): jz 0x631(%rip)
6475(3): cmp $0x2,%eax
6478(6): jnz 0x4c8(%rip)
647e(6): mov 0xfffffc4c(%rbp),%eax
6484(4): sub $0x8,%rsp
6488(6): push 0xfffffc10(%rbp)
648e(7): mov 0xfffffc48(%rbp),%r9d
6495(7): mov 0xfffffc28(%rbp),%r8
649c(3): mov %r10,%rsi
649f(4): sub $0x18,%rsp
64a3(7): mov $0xffffffff,%rcx
64aa(5): mov $0x1,%edx
64af(4): fstp %st0,0x8(%rsp)
64b3(1): push %rax
64b4(2): xor %eax,%eax
64b6(7): mov %r10,0xfffffbd0(%rbp)
64bd(5): call 0xffffae43(%rip)
64c2(4): add $0x30,%rsp
64c6(7): mov 0xfffffbd0(%rbp),%r10
64cd(5): jmp 0xfffffd89(%rip)
64d2(6): nop 0x0(%rax,%rax,1)
64d8(4): mov 0x50(%r13),%rax
64dc(4): lea 0x0(%r15,%r14,1),%rdi
64e0(4): shl/sal $0x5,%rax
64e4(7): add 0xfffffc58(%rbp),%rax
64eb(5): movsd 0x10(%rax),%xmm0
64f0(6): mov 0xfffffc20(%rbp),%eax
64f6(3): cmp $0x1,%eax
64f9(6): jz 0x597(%rip)
64ff(3): cmp $0x2,%eax
6502(6): jnz 0x3fe(%rip)
6508(6): mov 0xfffffc4c(%rbp),%eax
650e(6): push 0xfffffc10(%rbp)
6514(1): push %rax
6515(7): mov 0xfffffc48(%rbp),%r9d
651c(7): mov 0xfffffc28(%rbp),%r8
6523(3): mov %r10,%rsi
6526(7): mov $0xffffffff,%rcx
652d(5): mov $0x1,%edx
6532(5): mov $0x1,%eax
6537(7): mov %r10,0xfffffbd0(%rbp)
653e(5): call 0xffffadc2(%rip)
6543(2): pop %r8
6545(7): mov 0xfffffbd0(%rbp),%r10
654c(2): pop %r9
654e(5): jmp 0xfffffd08(%rip)
6553(5): nop 0x0(%rax,%rax,1)
6558(4): mov 0x50(%r13),%rax
655c(4): lea 0x0(%r15,%r14,1),%rdi
6560(4): shl/sal $0x5,%rax
6564(7): add 0xfffffc58(%rbp),%rax
656b(5): movzx 0x10(%rax),%r9d
6570(6): mov 0xfffffc20(%rbp),%eax
6576(3): cmp $0x1,%eax
6579(6): jnz 0xfffffdd5(%rip)
657f(1): nop 
6580(6): push 0xfffffc10(%rbp)
6586(2): push %r9
6588(7): mov 0xfffffc48(%rbp),%r9d
658f(5): jmp 0xfffffdd2(%rip)
6594(4): nop 0x0(%rax)
6598(4): mov 0x50(%r13),%rax
659c(4): lea 0x0(%r15,%r14,1),%rdi
65a0(4): shl/sal $0x5,%rax
65a4(7): add 0xfffffc58(%rbp),%rax
65ab(5): movsx 0x10(%rax),%r9d
65b0(6): mov 0xfffffc20(%rbp),%eax
65b6(3): cmp $0x1,%eax
65b9(2): jz 0xffffffc7(%rip)
65bb(3): cmp $0x2,%eax
65be(6): jnz 0xfffffd99(%rip)
65c4(4): nop 0x0(%rax)
65c8(4): sub $0x8,%rsp
65cc(6): push 0xfffffc10(%rbp)
65d2(2): push %r9
65d4(6): mov 0xfffffc4c(%rbp),%eax
65da(1): push %rax
65db(7): mov 0xfffffc48(%rbp),%r9d
65e2(7): mov 0xfffffc28(%rbp),%r8
65e9(3): mov %r10,%rsi
65ec(7): mov $0xffffffff,%rcx
65f3(5): mov $0x1,%edx
65f8(2): xor %eax,%eax
65fa(7): mov %r10,0xfffffbd0(%rbp)
6601(5): call 0xffffacff(%rip)
6606(4): add $0x20,%rsp
660a(7): mov 0xfffffbd0(%rbp),%r10
6611(5): jmp 0xfffffc45(%rip)
6616(a): nop 0x0(%rax,%rax,1)
6620(4): mov 0x50(%r13),%rax
6624(4): lea 0x0(%r15,%r14,1),%rdi
6628(4): shl/sal $0x5,%rax
662c(7): add 0xfffffc58(%rbp),%rax
6633(5): movzx 0x10(%rax),%r9d
6638(6): mov 0xfffffc20(%rbp),%eax
663e(3): cmp $0x1,%eax
6641(6): jnz 0xfffffd0d(%rip)
6647(5): jmp 0xffffff39(%rip)
664c(4): nop 0x0(%rax)
6650(4): mov 0x50(%r13),%rax
6654(4): lea 0x0(%r15,%r14,1),%rdi
6658(4): shl/sal $0x5,%rax
665c(7): add 0xfffffc58(%rbp),%rax
6663(5): movsx 0x10(%rax),%r9d
6668(6): mov 0xfffffc20(%rbp),%eax
666e(3): cmp $0x1,%eax
6671(6): jnz 0xfffffcdd(%rip)
6677(5): jmp 0xffffff09(%rip)
667c(4): nop 0x0(%rax)
6680(3): mov %r12,%rdi
6683(5): call 0xffffae5d(%rip)
6688(3): test %rax,%rax
668b(3): mov %rax,%rcx
668e(6): jz 0xfffff773(%rip)
6694(3): test %r14,%r14
6697(6): jz 0xb9(%rip)
669d(2): test %bl,%bl
669f(6): jz 0xb1(%rip)
66a5(3): mov %r15,%rsi
66a8(3): mov %r14,%rdx
66ab(3): mov %rax,%rdi
66ae(5): call 0xffffae02(%rip)
66b3(3): mov %rax,%r15
66b6(5): jmp 0xfffffaea(%rip)
66bb(5): nop 0x0(%rax,%rax,1)
66c0(4): sub $0x8,%rsp
66c4(6): push 0xfffffc10(%rbp)
66ca(2): push %r9
66cc(5): jmp 0xffffff08(%rip)
66d1(7): nop 0x0(%rax)
66d8(6): push 0xfffffc10(%rbp)
66de(2): push %r9
66e0(5): jmp 0xfffffea8(%rip)
66e5(3): nop (%rax)
66e8(4): mov $0x0,0x1(%rdi)
66ec(5): jmp 0xfffffab4(%rip)
66f1(7): nop 0x0(%rax)
66f8(4): cmp $0xffffffff,%rax
66fc(6): jnz 0x4ba(%rip)
6702(3): mov %r14,%rax
6705(4): add $0x1,%rax
6709(3): mov %rax,%rbx
670c(6): jnb 0x8c(%rip)
6712(4): cmp $0xffffffff,%r12
6716(6): jnz 0xfffff6df(%rip)
671c(3): mov %r12,%rbx
671f(5): mov $0x25,0x0(%r15,%r14,1)
6724(4): mov 0x8(%r13),%r8
6728(4): add $0x58,%r13
672c(4): mov 0x0(%r13),%rcx
6730(8): add $0x1,0xfffffc00(%rbp)
6738(3): cmp %r8,%rcx
673b(6): jnz 0xfffff69e(%rip)
6741(3): mov %rbx,%r14
6744(5): jmp 0xfffff7ff(%rip)
6749(7): nop 0x0(%rax)
6750(3): mov %rcx,%r15
6753(5): jmp 0xfffffa4d(%rip)
6758(5): call 0xffffabd8(%rip)
675d(7): mov %rax,0xfffffc38(%rbp)
6764(5): jmp 0xfffff6c3(%rip)
6769(7): nop 0x0(%rax)
6770(2): mov %edi,%edx
6772(3): sub $0x12,%edx
6775(3): cmp $0x4,%edx
6778(6): jnbe 0x43e(%rip)
677e(7): lea 0x2bab(%rip),%rdi
6785(4): mov 0x10(%rax),%rax
6789(4): movsxd 0x0(%rdi,%rdx,4),%rdx
678d(3): add %rdi,%rdx
6790(2): jmp %rdx
6792(6): nop 0x0(%rax,%rax,1)
6798(3): cmp %rax,%r12
679b(2): jnb 0xffffff84(%rip)
679d(3): test %r12,%r12
67a0(6): jnz 0x3d0(%rip)
67a6(4): cmp $0xc,%rax
67aa(6): jnbe 0x3d8(%rip)
67b0(6): mov $0xc,%r12d
67b6(7): cmp 0xfffffc18(%rbp),%r15
67bd(3): setz %dl
67c0(3): test %r15,%r15
67c3(6): jz 0x26d(%rip)
67c9(2): test %dl,%dl
67cb(6): jnz 0x265(%rip)
67d1(3): mov %r12,%rsi
67d4(3): mov %r15,%rdi
67d7(5): call 0xffffad59(%rip)
67dc(3): test %rax,%rax
67df(6): jz 0xfc(%rip)
67e5(3): mov %rax,%r15
67e8(5): jmp 0xffffff37(%rip)
67ed(3): nop (%rax)
67f0(a): mov $0x0,0xfffffc20(%rbp)
67fa(5): jmp 0xfffff8ed(%rip)
67ff(1): nop 
6800(6): js 0xfffff5f5(%rip)
6806(3): add %r12,%r12
6809(3): cmp %rax,%r12
680c(6): jnb 0xfffff6da(%rip)
6812(4): cmp $0xffffffff,%rax
6816(6): jz 0xfffff5df(%rip)
681c(7): cmp 0xfffffc18(%rbp),%r15
6823(3): mov %rax,%r12
6826(3): setz %dl
6829(3): test %r15,%r15
682c(6): jnz 0xfffff6cd(%rip)
6832(6): nop 0x0(%rax,%rax,1)
6838(3): mov %r12,%rdi
683b(7): mov %r8,0xfffffc20(%rbp)
6842(6): mov %dl,0xfffffc30(%rbp)
6848(7): mov %rcx,0xfffffc38(%rbp)
684f(5): call 0xffffac91(%rip)
6854(3): test %rax,%rax
6857(3): mov %rax,%r9
685a(7): mov 0xfffffc38(%rbp),%rcx
6861(7): movzx 0xfffffc30(%rbp),%edx
6868(7): mov 0xfffffc20(%rbp),%r8
686f(6): jz 0xfffff586(%rip)
6875(3): test %rbx,%rbx
6878(6): jz 0x208(%rip)
687e(2): test %dl,%dl
6880(6): jz 0x200(%rip)
6886(3): mov %r15,%rsi
6889(3): mov %rbx,%rdx
688c(3): mov %rax,%rdi
688f(7): mov %r8,0xfffffc30(%rbp)
6896(7): mov %rcx,0xfffffc38(%rbp)
689d(5): call 0xffffac13(%rip)
68a2(7): mov 0xfffffc38(%rbp),%rcx
68a9(3): mov %rax,%r15
68ac(7): mov 0xfffffc30(%rbp),%r8
68b3(5): jmp 0xfffff681(%rip)
68b8(8): nop 0x0(%rax,%rax,1)
68c0(3): mov %r12,%r14
68c3(5): jmp 0xfffff671(%rip)
68c8(8): nop 0x0(%rax,%rax,1)
68d0(3): mov %r14,(%rax)
68d3(3): mov %r14,%rbx
68d6(5): jmp 0xfffffe4e(%rip)
68db(5): call 0xffffaa55(%rip)
68e0(7): mov %rax,0xfffffc38(%rbp)
68e7(9): nop 0x0(%rax,%rax,1)
68f0(3): mov %r15,%rdi
68f3(5): call 0xffffaa1d(%rip)
68f8(5): jmp 0xfffff51b(%rip)
68fd(3): nop (%rax)
6900(7): mov 0xfffffc10(%rbp),%r9
6907(7): mov 0xfffffc28(%rbp),%r8
690e(3): mov %r10,%rsi
6911(7): mov $0xffffffff,%rcx
6918(5): mov $0x1,%edx
691d(5): mov $0x1,%eax
6922(7): mov %r10,0xfffffbd0(%rbp)
6929(5): call 0xffffa9d7(%rip)
692e(7): mov 0xfffffbd0(%rbp),%r10
6935(5): jmp 0xfffff921(%rip)
693a(6): nop 0x0(%rax,%rax,1)
6940(4): sub $0x10,%rsp
6944(7): mov 0xfffffc10(%rbp),%r9
694b(3): fstp %st0,(%rsp)
694e(5): jmp 0xfffff8db(%rip)
6953(5): nop 0x0(%rax,%rax,1)
6958(6): js 0xfffff49d(%rip)
695e(3): add %r12,%r12
6961(3): cmp %rax,%r12
6964(6): jnb 0xfffff7e5(%rip)
696a(6): nop 0x0(%rax,%rax,1)
6970(3): test %rdx,%rdx
6973(6): jnz 0xfffff482(%rip)
6979(4): cmp $0xffffffff,%rax
697d(6): jz 0xfffff478(%rip)
6983(7): cmp 0xfffffc18(%rbp),%r15
698a(3): mov %rax,%r12
698d(3): setz %dl
6990(3): test %r15,%r15
6993(6): jnz 0xfffff7c9(%rip)
6999(7): nop 0x0(%rax)
69a0(3): mov %r12,%rdi
69a3(6): mov %dl,0xfffffc38(%rbp)
69a9(5): call 0xffffab37(%rip)
69ae(3): test %rax,%rax
69b1(3): mov %rax,%rcx
69b4(7): movzx 0xfffffc38(%rbp),%edx
69bb(6): jz 0xfffff43a(%rip)
69c1(3): test %r14,%r14
69c4(6): jz 0x19c(%rip)
69ca(2): test %dl,%dl
69cc(6): jz 0x194(%rip)
69d2(3): mov %r15,%rsi
69d5(3): mov %r14,%rdx
69d8(3): mov %rax,%rdi
69db(5): call 0xffffaad5(%rip)
69e0(3): mov %rax,%r15
69e3(5): jmp 0xfffff798(%rip)
69e8(8): nop 0x0(%rax,%rax,1)
69f0(3): mov $0x4c,(%rbx)
69f3(4): add $0x1,%rbx
69f7(5): jmp 0xfffff6b4(%rip)
69fc(4): nop 0x0(%rax)
6a00(3): mov %r14b,(%rax)
6a03(3): mov %r14,%rbx
6a06(5): jmp 0xfffffd1e(%rip)
6a0b(5): nop 0x0(%rax,%rax,1)
6a10(3): mov %r14d,(%rax)
6a13(3): mov %r14,%rbx
6a16(5): jmp 0xfffffd0e(%rip)
6a1b(5): nop 0x0(%rax,%rax,1)
6a20(4): mov %r14w,(%rax)
6a24(3): mov %r14,%rbx
6a27(5): jmp 0xfffffcfd(%rip)
6a2c(4): nop 0x0(%rax)
6a30(3): mov %r12,%rdi
6a33(6): mov %dl,0xfffffc38(%rbp)
6a39(5): call 0xffffaaa7(%rip)
6a3e(3): test %rax,%rax
6a41(3): mov %rax,%rcx
6a44(7): movzx 0xfffffc38(%rbp),%edx
6a4b(6): jz 0xfffff3aa(%rip)
6a51(3): test %r14,%r14
6a54(6): jz 0x140(%rip)
6a5a(2): test %dl,%dl
6a5c(6): jz 0x138(%rip)
6a62(3): mov %r15,%rsi
6a65(3): mov %r14,%rdx
6a68(3): mov %rax,%rdi
6a6b(5): call 0xffffaa45(%rip)
6a70(3): mov %rax,%r15
6a73(5): jmp 0xfffffcac(%rip)
6a78(8): nop 0x0(%rax,%rax,1)
6a80(3): mov %r9,%r15
6a83(5): jmp 0xfffff4b1(%rip)
6a88(8): nop 0x0(%rax,%rax,1)
6a90(4): sub $0x8,%rsp
6a94(6): push 0xfffffc10(%rbp)
6a9a(5): jmp 0xfffffa7b(%rip)
6a9f(1): nop 
6aa0(4): sub $0x8,%rsp
6aa4(6): push 0xfffffc10(%rbp)
6aaa(4): sub $0x10,%rsp
6aae(3): fstp %st0,(%rsp)
6ab1(5): jmp 0xfffffb2a(%rip)
6ab6(a): nop 0x0(%rax,%rax,1)
6ac0(7): mov 0xfffffc38(%rbp),%rax
6ac7(6): mov 0xfffffbdc(%rbp),%edi
6acd(3): movsxd %ecx,%rbx
6ad0(3): add %r14,%rbx
6ad3(2): mov %edi,(%rax)
6ad5(5): jmp 0xfffffc4f(%rip)
6ada(6): nop 0x0(%rax,%rax,1)
6ae0(7): cmp 0xfffffc18(%rbp),%r15
6ae7(2): jz 0xb(%rip)
6ae9(3): test %r15,%r15
6aec(6): jnz 0xbd(%rip)
6af2(7): mov 0xfffffbe0(%rbp),%rax
6af9(3): test %rax,%rax
6afc(2): jz 0xa(%rip)
6afe(3): mov %rax,%rdi
6b01(5): call 0xffffa80f(%rip)
6b06(7): mov 0xfffffbf8(%rbp),%rax
6b0d(7): mov 0xfffffd48(%rbp),%rdi
6b14(4): add $0x20,%rax
6b18(3): cmp %rax,%rdi
6b1b(2): jz 0x7(%rip)
6b1d(5): call 0xffffa7f3(%rip)
6b22(7): mov 0xfffffbf0(%rbp),%rax
6b29(7): mov 0xfffffc58(%rbp),%rdi
6b30(4): add $0x10,%rax
6b34(3): cmp %rax,%rdi
6b37(2): jz 0x7(%rip)
6b39(5): call 0xffffa7d7(%rip)
6b3e(7): mov 0xfffffc38(%rbp),%rax
6b45(3): xor %r15d,%r15d
6b48(6): mov $0x4b,(%rax)
6b4e(5): jmp 0xfffff321(%rip)
6b53(5): nop 0x0(%rax,%rax,1)
6b58(3): xor %r15d,%r15d
6b5b(5): jmp 0xfffff314(%rip)
6b60(3): mov %rcx,%r15
6b63(5): jmp 0xfffff618(%rip)
6b68(8): nop 0x0(%rax,%rax,1)
6b70(6): js 0xfffff285(%rip)
6b76(3): add %r12,%r12
6b79(3): cmp %rax,%r12
6b7c(6): jnb 0xfffffc3a(%rip)
6b82(4): cmp $0xffffffff,%rax
6b86(6): jz 0xfffff26f(%rip)
6b8c(3): mov %rax,%r12
6b8f(5): jmp 0xfffffc27(%rip)
6b94(3): mov %rcx,%r15
6b97(5): jmp 0xfffffb88(%rip)
6b9c(3): mov %r15,%rdi
6b9f(5): call 0xffffa771(%rip)
6ba4(5): jmp 0xfffff84e(%rip)
6ba9(3): mov %r15,%rdi
6bac(5): call 0xffffa764(%rip)
6bb1(5): jmp 0xffffff41(%rip)
6bb6(5): call 0xffffa76a(%rip)
6bbb(5): nop 0x0(%rax,%rax,1)
6bc0(7): mov 0xfffffbf8(%rbp),%rax
6bc7(7): mov 0xfffffd48(%rbp),%rdi
6bce(4): add $0x20,%rax
6bd2(3): cmp %rax,%rdi
6bd5(2): jz 0x7(%rip)
6bd7(5): call 0xffffa739(%rip)
6bdc(7): mov 0xfffffbf0(%rbp),%rax
6be3(7): mov 0xfffffc58(%rbp),%rdi
6bea(4): add $0x10,%rax
6bee(3): cmp %rax,%rdi
6bf1(2): jz 0x7(%rip)
6bf3(5): call 0xffffa71d(%rip)
6bf8(5): call 0xffffa738(%rip)
6bfd(3): xor %r15d,%r15d
6c00(6): mov $0x16,(%rax)
6c06(5): jmp 0xfffff269(%rip)
6c0b(3): mov %r14,%rbx
6c0e(2): xor %eax,%eax
6c10(4): add $0x1,%rbx
6c14(6): jb 0x10c(%rip)
6c1a(3): cmp %rbx,%r12
6c1d(2): jnb 0x4f(%rip)
6c1f(3): test %r12,%r12
6c22(6): jnz 0x137(%rip)
6c28(4): cmp $0xc,%rbx
6c2c(6): jnbe 0x112(%rip)
6c32(6): mov $0xc,%r12d
6c38(7): cmp 0xfffffc18(%rbp),%r15
6c3f(4): setz %r13b
6c43(3): test %r15,%r15
6c46(6): jz 0xa6(%rip)
6c4c(3): test %r13b,%r13b
6c4f(6): jnz 0x9d(%rip)
6c55(3): mov %r12,%rsi
6c58(3): mov %r15,%rdi
6c5b(5): call 0xffffa8d5(%rip)
6c60(3): test %rax,%rax
6c63(6): jz 0xfffffc78(%rip)
6c69(3): mov %rax,%r15
6c6c(7): cmp 0xfffffc18(%rbp),%r15
6c73(5): mov $0x0,0x0(%r15,%r14,1)
6c78(2): jz 0x19(%rip)
6c7a(3): cmp %rbx,%r12
6c7d(2): jbe 0x14(%rip)
6c7f(3): mov %r15,%rdi
6c82(3): mov %rbx,%rsi
6c85(5): call 0xffffa8ab(%rip)
6c8a(3): test %rax,%rax
6c8d(4): cmovne %rax,%r15
6c91(7): mov 0xfffffbe0(%rbp),%rax
6c98(3): test %rax,%rax
6c9b(2): jz 0xa(%rip)
6c9d(3): mov %rax,%rdi
6ca0(5): call 0xffffa670(%rip)
6ca5(7): mov 0xfffffbf8(%rbp),%rax
6cac(7): mov 0xfffffd48(%rbp),%rdi
6cb3(4): add $0x20,%rax
6cb7(3): cmp %rax,%rdi
6cba(2): jz 0x7(%rip)
6cbc(5): call 0xffffa654(%rip)
6cc1(7): mov 0xfffffbf0(%rbp),%rax
6cc8(7): mov 0xfffffc58(%rbp),%rdi
6ccf(4): add $0x10,%rax
6cd3(3): cmp %rax,%rdi
6cd6(2): jz 0x7(%rip)
6cd8(5): call 0xffffa638(%rip)
6cdd(7): mov 0xfffffbe8(%rbp),%rax
6ce4(3): mov %r14,(%rax)
6ce7(5): jmp 0xfffff188(%rip)
6cec(3): mov %r12,%rdi
6cef(5): call 0xffffa7f1(%rip)
6cf4(3): test %rax,%rax
6cf7(3): mov %rax,%rcx
6cfa(6): jz 0xfffff0fb(%rip)
6d00(3): test %r14,%r14
6d03(2): jz 0x6d(%rip)
6d05(3): test %r13b,%r13b
6d08(2): jz 0x68(%rip)
6d0a(3): mov %r15,%rsi
6d0d(3): mov %r14,%rdx
6d10(3): mov %rax,%rdi
6d13(5): call 0xffffa79d(%rip)
6d18(3): mov %rax,%r15
6d1b(5): jmp 0xffffff51(%rip)
6d20(4): cmp $0xffffffff,%r12
6d24(5): mov $0x1,%eax
6d29(6): jz 0xffffff43(%rip)
6d2f(3): test %r12,%r12
6d32(6): jz 0xfffff0c3(%rip)
6d38(6): js 0xfffff0bd(%rip)
6d3e(3): test %rax,%rax
6d41(6): jnz 0xfffff0b4(%rip)
6d47(4): cmp $0xffffffff,%rbx
6d4b(6): jz 0xfffff0aa(%rip)
6d51(3): mov %rbx,%r12
6d54(5): jmp 0xfffffee4(%rip)
6d59(6): js 0xfffff09c(%rip)
6d5f(3): add %r12,%r12
6d62(3): cmp %rbx,%r12
6d65(6): jnb 0xfffffed3(%rip)
6d6b(2): jmp 0xffffffd3(%rip)
6d6d(3): nop (%rax)
6d70(3): mov %rcx,%r15
6d73(5): jmp 0xfffffef9(%rip)
6d78(4): cmp $0xffffffff,%r12
6d7c(6): jz 0xfffff424(%rip)
6d82(5): jmp 0xfffff07f(%rip)
6d87(5): call 0xffffa679(%rip)
6d8c(4): cmp $0xffffffff,%r12
6d90(5): mov $0x1,%edx
6d95(6): jz 0xfffff3e6(%rip)
6d9b(3): test %r12,%r12
6d9e(6): jz 0xfffff057(%rip)
6da4(6): jns 0xfffffbcc(%rip)
6daa(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
6db0(4): cmp $0x0,(%rsi)
6db4(4): mov 0x8(%rsi),%rax
6db8(2): jz 0x65(%rip)
6dba(7): lea 0x258f(%rip),%r8
6dc1(7): lea 0x25e8(%rip),%r10
6dc8(7): lea 0x2575(%rip),%r9
6dcf(2): xor %ecx,%ecx
6dd1(7): nop 0x0(%rax)
6dd8(3): cmp $0x16,(%rax)
6ddb(2): jnbe 0x45(%rip)
6ddd(2): mov (%rax),%edx
6ddf(4): movsxd 0x0(%r8,%rdx,4),%rdx
6de3(3): add %r8,%rdx
6de6(2): jmp %rdx
6de8(8): nop 0x0(%rax,%rax,1)
6df0(4): mov 0x8(%rdi),%rdx
6df4(4): add $0xf,%rdx
6df8(4): and $0xfffffff0,%rdx
6dfc(4): lea 0x10(%rdx),%r11
6e00(4): mov %r11,0x8(%rdi)
6e04(2): fld (%rdx),%st0
6e06(3): fstp %st0,0x10(%rax)
6e09(7): nop 0x0(%rax)
6e10(4): add $0x1,%rcx
6e14(4): add $0x20,%rax
6e18(3): cmp %rcx,(%rsi)
6e1b(2): jnbe 0xffffffbd(%rip)
6e1d(2): xor %eax,%eax
6e1f(1): ret near (%rsp)
6e20(5): mov $0xffffffff,%eax
6e25(1): ret near (%rsp)
6e26(3): mov (%rdi),%r11d
6e29(4): cmp $0x2f,%r11d
6e2d(6): jnbe 0x13d(%rip)
6e33(3): mov %r11d,%edx
6e36(4): add 0x10(%rdi),%rdx
6e3a(4): add $0x8,%r11d
6e3e(3): mov %r11d,(%rdi)
6e41(3): mov (%rdx),%rdx
6e44(4): mov %rdx,0x10(%rax)
6e48(2): jmp 0xffffffc8(%rip)
6e4a(3): mov (%rdi),%r11d
6e4d(4): cmp $0x2f,%r11d
6e51(6): jnbe 0x13b(%rip)
6e57(3): mov %r11d,%edx
6e5a(4): add 0x10(%rdi),%rdx
6e5e(4): add $0x8,%r11d
6e62(3): mov %r11d,(%rdi)
6e65(2): mov (%rdx),%edx
6e67(3): mov %edx,0x10(%rax)
6e6a(2): jmp 0xffffffa6(%rip)
6e6c(3): mov (%rdi),%r11d
6e6f(4): cmp $0x2f,%r11d
6e73(6): jnbe 0x108(%rip)
6e79(3): mov %r11d,%edx
6e7c(4): add 0x10(%rdi),%rdx
6e80(4): add $0x8,%r11d
6e84(3): mov %r11d,(%rdi)
6e87(2): mov (%rdx),%edx
6e89(3): mov %dl,0x10(%rax)
6e8c(2): jmp 0xffffff84(%rip)
6e8e(3): mov (%rdi),%r11d
6e91(4): cmp $0x2f,%r11d
6e95(6): jnbe 0xa5(%rip)
6e9b(3): mov %r11d,%edx
6e9e(4): add 0x10(%rdi),%rdx
6ea2(4): add $0x8,%r11d
6ea6(3): mov %r11d,(%rdi)
6ea9(2): mov (%rdx),%edx
6eab(4): mov %dx,0x10(%rax)
6eaf(5): jmp 0xffffff61(%rip)
6eb4(3): mov (%rdi),%r11d
6eb7(4): cmp $0x2f,%r11d
6ebb(6): jnbe 0x90(%rip)
6ec1(3): mov %r11d,%edx
6ec4(4): add 0x10(%rdi),%rdx
6ec8(4): add $0x8,%r11d
6ecc(3): mov %r11d,(%rdi)
6ecf(3): mov (%rdx),%rdx
6ed2(3): test %rdx,%rdx
6ed5(4): cmove %r9,%rdx
6ed9(4): mov %rdx,0x10(%rax)
6edd(5): jmp 0xffffff33(%rip)
6ee2(4): mov 0x4(%rdi),%r11d
6ee6(7): cmp $0xaf,%r11d
6eed(6): jnbe 0xb0(%rip)
6ef3(3): mov %r11d,%edx
6ef6(4): add 0x10(%rdi),%rdx
6efa(4): add $0x10,%r11d
6efe(4): mov %r11d,0x4(%rdi)
6f02(4): movsd (%rdx),%xmm0
6f06(5): movsd %xmm0,0x10(%rax)
6f0b(5): jmp 0xffffff05(%rip)
6f10(3): mov (%rdi),%r11d
6f13(4): cmp $0x2f,%r11d
6f17(2): jnbe 0x45(%rip)
6f19(3): mov %r11d,%edx
6f1c(4): add 0x10(%rdi),%rdx
6f20(4): add $0x8,%r11d
6f24(3): mov %r11d,(%rdi)
6f27(3): mov (%rdx),%rdx
6f2a(3): test %rdx,%rdx
6f2d(4): cmove %r10,%rdx
6f31(4): mov %rdx,0x10(%rax)
6f35(5): jmp 0xfffffedb(%rip)
6f3a(4): mov 0x8(%rdi),%rdx
6f3e(4): lea 0x8(%rdx),%r11
6f42(4): mov %r11,0x8(%rdi)
6f46(5): jmp 0xffffff63(%rip)
6f4b(4): mov 0x8(%rdi),%rdx
6f4f(4): lea 0x8(%rdx),%r11
6f53(4): mov %r11,0x8(%rdi)
6f57(5): jmp 0xffffff78(%rip)
6f5c(4): mov 0x8(%rdi),%rdx
6f60(4): lea 0x8(%rdx),%r11
6f64(4): mov %r11,0x8(%rdi)
6f68(2): jmp 0xffffffbf(%rip)
6f6a(4): mov 0x8(%rdi),%rdx
6f6e(4): lea 0x8(%rdx),%r11
6f72(4): mov %r11,0x8(%rdi)
6f76(5): jmp 0xfffffecb(%rip)
6f7b(4): mov 0x8(%rdi),%rdx
6f7f(4): lea 0x8(%rdx),%r11
6f83(4): mov %r11,0x8(%rdi)
6f87(5): jmp 0xffffff00(%rip)
6f8c(4): mov 0x8(%rdi),%rdx
6f90(4): lea 0x8(%rdx),%r11
6f94(4): mov %r11,0x8(%rdi)
6f98(5): jmp 0xfffffecd(%rip)
6f9d(4): mov 0x8(%rdi),%rdx
6fa1(4): lea 0x8(%rdx),%r11
6fa5(4): mov %r11,0x8(%rdi)
6fa9(5): jmp 0xffffff59(%rip)

"printf_parse" :
6fb0(2): push %r15
6fb2(2): push %r14
6fb4(4): lea 0x20(%rsi),%rcx
6fb8(2): push %r13
6fba(2): push %r12
6fbc(4): lea 0x10(%rdx),%rax
6fc0(1): push %rbp
6fc1(1): push %rbx
6fc2(3): mov %rsi,%r14
6fc5(3): mov %rdx,%r15
6fc8(2): xor %ebx,%ebx
6fca(6): mov $0x7,%r9d
6fd0(4): sub $0x58,%rsp
6fd4(6): mov $0x7,%r10d
6fda(7): mov $0x0,(%rsi)
6fe1(4): mov %rcx,0x8(%rsi)
6fe5(5): mov %rcx,0x28(%rsp)
6fea(7): mov $0xffffffff,%r8
6ff1(7): mov $0x0,(%rdx)
6ff8(5): mov %rax,0x8(%rsp)
6ffd(4): mov %rax,0x8(%rdx)
7001(9): mov $0x0,0x18(%rsp)
700a(9): mov $0x0,0x10(%rsp)
7013(9): mov $0x0,0x20(%rsp)
701c(2): jmp 0xf(%rip)
701e(2): nop 
7020(2): cmp $0x25,%al
7022(4): lea 0x1(%rdi),%rbp
7026(2): jz 0x42(%rip)
7028(3): mov %rbp,%rdi
702b(3): movzx (%rdi),%eax
702e(2): test %al,%al
7030(2): jnz 0xfffffff0(%rip)
7032(4): lea 0x0(%rbx,%rbx,4),%rax
7036(4): lea 0x0(%rbx,%rax,2),%rax
703a(4): mov %rdi,0x0(%rcx,%rax,8)
703e(5): mov 0x10(%rsp),%rax
7043(4): mov %rax,0x10(%r14)
7047(5): mov 0x18(%rsp),%rax
704c(4): mov %rax,0x18(%r14)
7050(2): xor %eax,%eax
7052(4): add $0x58,%rsp
7056(1): pop %rbx
7057(1): pop %rbp
7058(2): pop %r12
705a(2): pop %r13
705c(2): pop %r14
705e(2): pop %r15
7060(1): ret near (%rsp)
7061(7): nop 0x0(%rax)
7068(4): lea 0x0(%rbx,%rbx,4),%rax
706c(3): mov %r8,%r13
706f(4): lea 0x0(%rbx,%rax,2),%rax
7073(4): lea 0x0(%rcx,%rax,8),%r12
7077(4): mov %rdi,(%r12)
707b(9): mov $0x0,0x10(%r12)
7084(9): mov $0x0,0x18(%r12)
708d(9): mov $0x0,0x20(%r12)
7096(5): mov %r8,0x28(%r12)
709b(9): mov $0x0,0x30(%r12)
70a4(9): mov $0x0,0x38(%r12)
70ad(5): mov %r8,0x40(%r12)
70b2(5): mov %r8,0x50(%r12)
70b7(4): movzx 0x1(%rdi),%ebx
70bb(3): lea 0xffffffd0(%rbx),%eax
70be(2): cmp $0x9,%al
70c0(2): jnbe 0x3e(%rip)
70c2(5): jmp 0x438(%rip)
70c7(9): nop 0x0(%rax,%rax,1)
70d0(3): cmp $0x2d,%bl
70d3(2): jz 0x45(%rip)
70d5(3): cmp $0x2b,%bl
70d8(2): jz 0x48(%rip)
70da(3): cmp $0x20,%bl
70dd(2): jz 0x53(%rip)
70df(3): cmp $0x23,%bl
70e2(2): jz 0x5e(%rip)
70e4(3): cmp $0x30,%bl
70e7(2): jz 0x69(%rip)
70e9(3): cmp $0x49,%bl
70ec(2): jnz 0x74(%rip)
70ee(6): or $0x40,0x10(%r12)
70f4(4): nop 0x0(%rax)
70f8(3): movzx (%rax),%ebx
70fb(3): mov %rax,%rbp
70fe(4): lea 0x1(%rbp),%rax
7102(3): cmp $0x27,%bl
7105(3): mov %rax,%rdx
7108(2): jnz 0xffffffc8(%rip)
710a(6): or $0x1,0x10(%r12)
7110(2): jmp 0xffffffe8(%rip)
7112(6): nop 0x0(%rax,%rax,1)
7118(6): or $0x2,0x10(%r12)
711e(2): jmp 0xffffffda(%rip)
7120(6): or $0x4,0x10(%r12)
7126(2): jmp 0xffffffd2(%rip)
7128(8): nop 0x0(%rax,%rax,1)
7130(6): or $0x8,0x10(%r12)
7136(2): jmp 0xffffffc2(%rip)
7138(8): nop 0x0(%rax,%rax,1)
7140(6): or $0x10,0x10(%r12)
7146(2): jmp 0xffffffb2(%rip)
7148(8): nop 0x0(%rax,%rax,1)
7150(6): or $0x20,0x10(%r12)
7156(2): jmp 0xffffffa2(%rip)
7158(8): nop 0x0(%rax,%rax,1)
7160(3): cmp $0x2a,%bl
7163(6): jz 0x1b6(%rip)
7169(3): lea 0xffffffd0(%rbx),%ecx
716c(3): cmp $0x9,%cl
716f(6): jbe 0x418(%rip)
7175(3): cmp $0x2e,%bl
7178(6): jz 0x2d7(%rip)
717e(2): xor %eax,%eax
7180(5): mov $0x1,%esi
7185(2): jmp 0x32(%rip)
7187(9): nop 0x0(%rax,%rax,1)
7190(3): cmp $0x4c,%bl
7193(2): jz 0x3d(%rip)
7195(3): cmp $0x6c,%bl
7198(2): jz 0x18(%rip)
719a(3): cmp $0x6a,%bl
719d(2): jz 0x13(%rip)
719f(2): mov %ebx,%edx
71a1(3): and $0xdf,%edx
71a4(3): cmp $0x5a,%dl
71a7(2): jz 0x9(%rip)
71a9(3): cmp $0x74,%bl
71ac(2): jnz 0x2c(%rip)
71ae(2): nop 
71b0(3): add $0x8,%eax
71b3(4): movzx 0x0(%rbp),%ebx
71b7(4): add $0x1,%rbp
71bb(3): cmp $0x68,%bl
71be(2): jnz 0xffffffd2(%rip)
71c0(2): mov %eax,%ecx
71c2(2): mov %esi,%edx
71c4(3): and $0x1,%ecx
71c7(2): shl/sal %cl,%edx
71c9(2): or %edx,%eax
71cb(2): jmp 0xffffffe8(%rip)
71cd(3): nop (%rax)
71d0(3): or $0x4,%eax
71d3(2): jmp 0xffffffe0(%rip)
71d5(3): nop (%rax)
71d8(3): lea 0xffffffdb(%rbx),%edx
71db(3): cmp $0x53,%dl
71de(6): jnbe 0x61d(%rip)
71e4(7): lea 0x21e1(%rip),%rcx
71eb(3): movzx %dl,%edx
71ee(4): movsxd 0x0(%rcx,%rdx,4),%rdx
71f2(3): add %rcx,%rdx
71f5(2): jmp %rdx
71f7(6): mov $0x10,%r11d
71fd(5): mov $0x73,%ebx
7202(6): nop 0x0(%rax,%rax,1)
7208(4): cmp $0xffffffff,%r13
720c(6): jz 0x6bb(%rip)
7212(5): mov %r13,0x50(%r12)
7217(3): cmp %r13,%r9
721a(4): mov 0x8(%r15),%rcx
721e(6): jbe 0x622(%rip)
7224(3): mov (%r15),%rax
7227(3): mov %rax,%rdx
722a(4): shl/sal $0x5,%rdx
722e(3): add %rcx,%rdx
7231(3): cmp %r13,%rax
7234(2): jnbe 0x22(%rip)
7236(a): nop 0x0(%rax,%rax,1)
7240(4): add $0x1,%rax
7244(6): mov $0x0,(%rdx)
724a(4): add $0x20,%rdx
724e(3): cmp %r13,%rax
7251(2): jbe 0xffffffef(%rip)
7253(3): mov %rax,(%r15)
7256(4): shl/sal $0x5,%r13
725a(4): lea 0x0(%rcx,%r13,1),%rax
725e(2): mov (%rax),%edx
7260(2): test %edx,%edx
7262(6): jnz 0x5d1(%rip)
7268(3): mov %r11d,(%rax)
726b(5): mov %bl,0x48(%r12)
7270(3): mov (%r14),%rax
7273(5): mov %rbp,0x8(%r12)
7278(4): lea 0x1(%rax),%rbx
727c(3): cmp %rbx,%r10
727f(3): mov %rbx,(%r14)
7282(6): jnbe 0x8e(%rip)
7288(3): test %r10,%r10
728b(6): js 0x9ac(%rip)
7291(3): add %r10,%r10
7294(a): mov $0x209622091746699450,%rax
729e(3): cmp %rax,%r10
72a1(6): jnbe 0x996(%rip)
72a7(4): lea 0x0(%r10,%r10,4),%rax
72ab(4): mov 0x8(%r14),%rdi
72af(5): cmp %rdi,0x28(%rsp)
72b4(5): mov %r9,0x40(%rsp)
72b9(5): mov %r10,0x38(%rsp)
72be(4): lea 0x0(%r10,%rax,2),%rax
72c2(5): mov %r8,0x30(%rsp)
72c7(8): lea 0x0(,%rax,8),%rsi
72cf(6): jz 0x6be(%rip)
72d5(5): call 0xffffa25b(%rip)
72da(3): test %rax,%rax
72dd(3): mov %rax,%rcx
72e0(5): mov 0x30(%rsp),%r8
72e5(5): mov 0x38(%rsp),%r10
72ea(5): mov 0x40(%rsp),%r9
72ef(6): jz 0x948(%rip)
72f5(5): mov 0x28(%rsp),%rax
72fa(4): cmp 0x8(%r14),%rax
72fe(3): mov (%r14),%rbx
7301(6): jz 0x6af(%rip)
7307(4): mov %rcx,0x8(%r14)
730b(5): jmp 0xfffffd1d(%rip)
7310(4): mov 0x8(%r14),%rcx
7314(5): jmp 0xfffffd14(%rip)
7319(5): mov 0x10(%rsp),%rsi
731e(5): mov $0x1,%ecx
7323(5): mov %rbp,0x18(%r12)
7328(5): mov %rax,0x20(%r12)
732d(3): test %rsi,%rsi
7330(4): cmovne %rsi,%rcx
7334(5): mov %rcx,0x10(%rsp)
7339(4): movzx 0x1(%rbp),%ecx
733d(3): lea 0xffffffd0(%rcx),%esi
7340(4): cmp $0x9,%sil
7344(6): jbe 0x2e1(%rip)
734a(5): mov 0x20(%rsp),%rsi
734f(4): cmp $0xffffffff,%rsi
7353(4): lea 0x1(%rsi),%rdx
7357(5): mov %rsi,0x28(%r12)
735c(6): jz 0x49f(%rip)
7362(5): mov 0x20(%rsp),%rbx
7367(3): mov %rax,%rbp
736a(5): mov %rdx,0x20(%rsp)
736f(3): cmp %rbx,%r9
7372(4): mov 0x8(%r15),%rcx
7376(6): jnbe 0x67c(%rip)
737c(3): add %r9,%r9
737f(4): lea 0x1(%rbx),%rax
7383(3): cmp %rbx,%r9
7386(4): cmovbe %rax,%r9
738a(a): mov $0x576460752303423487,%rax
7394(3): cmp %rax,%r9
7397(6): jnbe 0x8a4(%rip)
739d(3): mov %r9,%rsi
73a0(5): mov %r9,0x40(%rsp)
73a5(5): mov %r10,0x38(%rsp)
73aa(4): shl/sal $0x5,%rsi
73ae(5): cmp %rcx,0x8(%rsp)
73b3(5): mov %r8,0x30(%rsp)
73b8(6): jz 0x719(%rip)
73be(3): mov %rcx,%rdi
73c1(5): call 0xffffa16f(%rip)
73c6(4): mov 0x8(%r15),%rdx
73ca(5): mov 0x30(%rsp),%r8
73cf(3): mov %rax,%rcx
73d2(5): mov 0x38(%rsp),%r10
73d7(5): mov 0x40(%rsp),%r9
73dc(3): test %rcx,%rcx
73df(6): jz 0x8b8(%rip)
73e5(5): cmp %rdx,0x8(%rsp)
73ea(3): mov (%r15),%rax
73ed(6): jz 0x7be(%rip)
73f3(4): mov %rcx,0x8(%r15)
73f7(3): mov %rax,%rdx
73fa(4): shl/sal $0x5,%rdx
73fe(3): add %rcx,%rdx
7401(3): cmp %rbx,%rax
7404(2): jnbe 0x22(%rip)
7406(a): nop 0x0(%rax,%rax,1)
7410(4): add $0x1,%rax
7414(6): mov $0x0,(%rdx)
741a(4): add $0x20,%rdx
741e(3): cmp %rbx,%rax
7421(2): jbe 0xffffffef(%rip)
7423(3): mov %rax,(%r15)
7426(4): shl/sal $0x5,%rbx
742a(4): lea 0x0(%rcx,%rbx,1),%rax
742e(2): mov (%rax),%edx
7430(2): test %edx,%edx
7432(6): jnz 0x4d9(%rip)
7438(6): mov $0x5,(%rax)
743e(4): movzx 0x0(%rbp),%ebx
7442(4): lea 0x1(%rbp),%rdx
7446(3): cmp $0x2e,%bl
7449(6): jnz 0xfffffd35(%rip)
744f(4): cmp $0x2a,0x1(%rbp)
7453(5): mov %rbp,0x30(%r12)
7458(6): jnz 0x186(%rip)
745e(5): mov 0x18(%rsp),%rsi
7463(4): lea 0x2(%rbp),%r11
7467(5): mov $0x2,%eax
746c(5): mov %r11,0x38(%r12)
7471(4): cmp $0x2,%rsi
7475(4): cmovnb %rsi,%rax
7479(5): mov %rax,0x18(%rsp)
747e(4): movsx 0x2(%rbp),%eax
7482(3): lea 0xffffffd0(%rax),%edx
7485(3): cmp $0x9,%dl
7488(6): jbe 0x694(%rip)
748e(5): mov 0x40(%r12),%rbx
7493(4): cmp $0xffffffff,%rbx
7497(6): jz 0x65e(%rip)
749d(3): cmp %rbx,%r9
74a0(4): mov 0x8(%r15),%rcx
74a4(6): jbe 0x56b(%rip)
74aa(3): mov (%r15),%rax
74ad(3): mov %rax,%rdx
74b0(4): shl/sal $0x5,%rdx
74b4(3): add %rcx,%rdx
74b7(3): cmp %rbx,%rax
74ba(2): jnbe 0x1c(%rip)
74bc(4): nop 0x0(%rax)
74c0(4): add $0x1,%rax
74c4(6): mov $0x0,(%rdx)
74ca(4): add $0x20,%rdx
74ce(3): cmp %rbx,%rax
74d1(2): jbe 0xffffffef(%rip)
74d3(3): mov %rax,(%r15)
74d6(4): shl/sal $0x5,%rbx
74da(4): lea 0x0(%rcx,%rbx,1),%rax
74de(2): mov (%rax),%edx
74e0(2): test %edx,%edx
74e2(6): jnz 0x518(%rip)
74e8(6): mov $0x5,(%rax)
74ee(3): mov %r11,%rbp
74f1(4): movzx (%r11),%ebx
74f5(5): jmp 0xfffffc89(%rip)
74fa(3): mov %rbp,%rax
74fd(3): nop (%rax)
7500(4): add $0x1,%rax
7504(3): movzx (%rax),%edx
7507(3): lea 0xffffffd0(%rdx),%ecx
750a(3): cmp $0x9,%cl
750d(2): jbe 0xfffffff3(%rip)
750f(3): cmp $0x24,%dl
7512(3): mov %r8,%r13
7515(6): jnz 0xfffffbe9(%rip)
751b(2): xor %edx,%edx
751d(3): movsx %bl,%eax
7520(a): mov $0x1844674407370955161,%rdi
752a(3): mov %r8,%rsi
752d(3): sub $0x30,%eax
7530(3): cmp %rdi,%rdx
7533(2): cwde 
7535(2): jnbe 0x9(%rip)
7537(4): lea 0x0(%rdx,%rdx,4),%rsi
753b(3): add %rsi,%rsi
753e(3): mov %rbp,%rcx
7541(3): add %rsi,%rax
7544(4): movzx 0x1(%rbp),%ebx
7548(4): setb %sil
754c(4): add $0x1,%rbp
7550(3): mov %rax,%rdx
7553(4): movzx %sil,%esi
7557(3): test %rsi,%rsi
755a(3): lea 0xffffffd0(%rbx),%edi
755d(6): jnz 0x391(%rip)
7563(4): cmp $0x9,%dil
7567(2): jbe 0xffffffb6(%rip)
7569(3): mov %rax,%r13
756c(4): sub $0x1,%r13
7570(4): cmp $0xfffffffd,%r13
7574(6): jnbe 0x287(%rip)
757a(4): lea 0x2(%rcx),%rbp
757e(4): movzx 0x2(%rcx),%ebx
7582(5): jmp 0xfffffb7c(%rip)
7587(5): mov %rbp,0x18(%r12)
758c(4): movzx 0x0(%rbp),%edi
7590(3): mov %rbp,%rsi
7593(3): lea 0xffffffd0(%rdi),%ecx
7596(3): cmp $0x9,%cl
7599(2): jbe 0xe(%rip)
759b(2): jmp 0x35(%rip)
759d(3): nop (%rax)
75a0(3): mov %rax,%rbp
75a3(4): add $0x1,%rax
75a7(3): movzx (%rax),%edi
75aa(3): lea 0xffffffd0(%rdi),%edx
75ad(3): cmp $0x9,%dl
75b0(2): jbe 0xfffffff0(%rip)
75b2(3): mov %rax,%rcx
75b5(4): lea 0x2(%rbp),%rdx
75b9(3): mov %rax,%rbp
75bc(3): sub %rsi,%rcx
75bf(5): mov 0x10(%rsp),%rsi
75c4(3): cmp %rcx,%rsi
75c7(4): cmovnb %rsi,%rcx
75cb(5): mov %rcx,0x10(%rsp)
75d0(5): mov %rbp,0x20(%r12)
75d5(4): movzx 0x0(%rbp),%ebx
75d9(5): jmp 0xfffffb9c(%rip)
75de(4): movzx 0x1(%rbp),%eax
75e2(3): sub $0x30,%eax
75e5(2): cmp $0x9,%al
75e7(2): jnbe 0x17(%rip)
75e9(7): nop 0x0(%rax)
75f0(4): add $0x1,%rdx
75f4(3): movzx (%rdx),%eax
75f7(3): sub $0x30,%eax
75fa(2): cmp $0x9,%al
75fc(2): jbe 0xfffffff4(%rip)
75fe(5): mov 0x18(%rsp),%rsi
7603(3): mov %rdx,%rax
7606(5): mov %rdx,0x38(%r12)
760b(3): sub %rbp,%rax
760e(3): movzx (%rdx),%ebx
7611(3): mov %rdx,%rbp
7614(3): cmp %rax,%rsi
7617(4): cmovnb %rsi,%rax
761b(5): mov %rax,0x18(%rsp)
7620(5): jmp 0xfffffb5e(%rip)
7625(3): mov %rax,%rsi
7628(4): add $0x1,%rsi
762c(3): movzx (%rsi),%edi
762f(4): lea 0xffffffd0(%rdi),%r11d
7633(4): cmp $0x9,%r11b
7637(2): jbe 0xfffffff1(%rip)
7639(4): cmp $0x24,%dil
763d(6): jnz 0xfffffd0d(%rip)
7643(2): xor %esi,%esi
7645(3): movsx %cl,%eax
7648(a): mov $0x1844674407370955161,%rdi
7652(3): mov %r8,%rcx
7655(3): sub $0x30,%eax
7658(3): cmp %rdi,%rsi
765b(2): cwde 
765d(2): jnbe 0x9(%rip)
765f(4): lea 0x0(%rsi,%rsi,4),%rcx
7663(3): add %rcx,%rcx
7666(3): mov %rdx,%rbp
7669(3): xor %r11d,%r11d
766c(3): add %rcx,%rax
766f(4): movzx 0x1(%rdx),%ecx
7673(4): setb %r11b
7677(4): add $0x1,%rdx
767b(3): mov %rax,%rsi
767e(3): test %r11,%r11
7681(3): lea 0xffffffd0(%rcx),%edi
7684(6): jnz 0x50a(%rip)
768a(4): cmp $0x9,%dil
768e(2): jbe 0xffffffb7(%rip)
7690(4): lea 0xffffffff(%rax),%rbx
7694(4): cmp $0xfffffffd,%rbx
7698(6): jnbe 0x163(%rip)
769e(5): mov %rbx,0x28(%r12)
76a3(4): add $0x2,%rbp
76a7(5): jmp 0xfffffcc8(%rip)
76ac(3): cmp $0xf,%eax
76af(6): mov $0x16,%r11d
76b5(6): jnle 0xfffffb53(%rip)
76bb(2): test $0x4,%al
76bd(6): jnz 0xfffffb4b(%rip)
76c3(3): cmp $0x7,%eax
76c6(6): mov $0x15,%r11d
76cc(6): jnle 0xfffffb3c(%rip)
76d2(2): test $0x2,%al
76d4(6): mov $0x12,%r11d
76da(6): jnz 0xfffffb2e(%rip)
76e0(3): xor %r11d,%r11d
76e3(2): test $0x1,%al
76e5(4): setz %r11b
76e9(4): add $0x13,%r11d
76ed(5): jmp 0xfffffb1b(%rip)
76f2(6): nop 0x0(%rax,%rax,1)
76f8(3): xor %r11d,%r11d
76fb(3): cmp $0x7,%eax
76fe(4): setnle %r11b
7702(4): add $0xd,%r11d
7706(5): jmp 0xfffffb02(%rip)
770b(3): cmp $0xf,%eax
770e(6): mov $0x9,%r11d
7714(6): jnle 0xfffffaf4(%rip)
771a(2): test $0x4,%al
771c(6): jnz 0xfffffaec(%rip)
7722(3): cmp $0x7,%eax
7725(6): mov $0x7,%r11d
772b(6): jnle 0xfffffadd(%rip)
7731(2): test $0x2,%al
7733(6): mov $0x1,%r11d
7739(6): jnz 0xfffffacf(%rip)
773f(3): and $0x1,%eax
7742(3): cmp $0x1,%eax
7745(3): sbb %r11d,%r11d
7748(4): and $0x2,%r11d
774c(4): add $0x3,%r11d
7750(5): jmp 0xfffffab8(%rip)
7755(3): nop (%rax)
7758(3): xor %r11d,%r11d
775b(3): cmp $0x7,%eax
775e(4): setnle %r11b
7762(4): add $0xf,%r11d
7766(5): jmp 0xfffffaa2(%rip)
776b(3): cmp $0xf,%eax
776e(6): mov $0xc,%r11d
7774(6): jnle 0xfffffa94(%rip)
777a(3): xor %r11d,%r11d
777d(2): test $0x4,%al
777f(4): setnz %r11b
7783(4): add $0xb,%r11d
7787(5): jmp 0xfffffa81(%rip)
778c(6): mov $0xe,%r11d
7792(5): mov $0x63,%ebx
7797(5): jmp 0xfffffa71(%rip)
779c(3): cmp $0xf,%eax
779f(6): mov $0xa,%r11d
77a5(6): jnle 0xfffffa63(%rip)
77ab(2): test $0x4,%al
77ad(6): jnz 0xfffffa5b(%rip)
77b3(3): cmp $0x7,%eax
77b6(6): mov $0x8,%r11d
77bc(6): jnle 0xfffffa4c(%rip)
77c2(2): test $0x2,%al
77c4(6): mov $0x2,%r11d
77ca(6): jnz 0xfffffa3e(%rip)
77d0(3): and $0x1,%eax
77d3(3): cmp $0x1,%eax
77d6(3): sbb %r11d,%r11d
77d9(4): and $0x2,%r11d
77dd(4): add $0x4,%r11d
77e1(5): jmp 0xfffffa27(%rip)
77e6(a): nop 0x0(%rax,%rax,1)
77f0(6): mov $0x11,%r11d
77f6(5): jmp 0xfffffa12(%rip)
77fb(4): mov 0x8(%r15),%rcx
77ff(5): cmp %rcx,0x8(%rsp)
7804(2): jz 0xa(%rip)
7806(3): mov %rcx,%rdi
7809(5): call 0xffff9b07(%rip)
780e(4): mov 0x8(%r14),%rdi
7812(5): cmp %rdi,0x28(%rsp)
7817(2): jz 0x7(%rip)
7819(5): call 0xffff9af7(%rip)
781e(5): call 0xffff9b12(%rip)
7823(6): mov $0x16,(%rax)
7829(5): mov $0xffffffff,%eax
782e(5): jmp 0xfffff824(%rip)
7833(3): cmp %r11d,%edx
7836(6): jz 0xfffffa35(%rip)
783c(2): jmp 0xffffffc3(%rip)
783e(2): nop 
7840(3): add %r9,%r9
7843(4): lea 0x1(%r13),%rax
7847(3): cmp %r13,%r9
784a(4): cmovbe %rax,%r9
784e(a): mov $0x576460752303423487,%rax
7858(3): cmp %rax,%r9
785b(6): jnbe 0x3e0(%rip)
7861(3): mov %r9,%rsi
7864(5): mov %r9,0x48(%rsp)
7869(5): mov %r10,0x40(%rsp)
786e(4): shl/sal $0x5,%rsi
7872(5): cmp %rcx,0x8(%rsp)
7877(5): mov %r8,0x38(%rsp)
787c(5): mov %r11d,0x30(%rsp)
7881(6): jz 0xa0(%rip)
7887(3): mov %rcx,%rdi
788a(5): call 0xffff9ca6(%rip)
788f(3): test %rax,%rax
7892(3): mov %rax,%rcx
7895(5): mov 0x30(%rsp),%r11d
789a(5): mov 0x38(%rsp),%r8
789f(5): mov 0x40(%rsp),%r10
78a4(5): mov 0x48(%rsp),%r9
78a9(6): jz 0x38e(%rip)
78af(5): mov 0x8(%rsp),%rax
78b4(4): cmp 0x8(%r15),%rax
78b8(6): jz 0x91(%rip)
78be(4): mov %rcx,0x8(%r15)
78c2(5): jmp 0xfffff962(%rip)
78c7(5): mov 0x20(%rsp),%rsi
78cc(4): cmp $0xffffffff,%rsi
78d0(4): lea 0x1(%rsi),%rax
78d4(5): mov %rsi,0x50(%r12)
78d9(6): jz 0xffffff22(%rip)
78df(5): mov 0x20(%rsp),%r13
78e4(5): mov %rax,0x20(%rsp)
78e9(5): jmp 0xfffff92e(%rip)
78ee(4): cmp $0x9,%dil
78f2(6): jnbe 0xffffff09(%rip)
78f8(3): movsx %bl,%eax
78fb(3): mov %r8,%rsi
78fe(3): mov %rbp,%rcx
7901(3): sub $0x30,%eax
7904(2): cwde 
7906(5): jmp 0xfffffc3b(%rip)
790b(3): cmp $0x5,%edx
790e(6): jnz 0xfffffef1(%rip)
7914(4): movzx 0x0(%rbp),%ebx
7918(4): lea 0x1(%rbp),%rdx
791c(5): jmp 0xfffff859(%rip)
7921(3): mov %rsi,%rdi
7924(5): call 0xffff9bbc(%rip)
7929(3): test %rax,%rax
792c(3): mov %rax,%rcx
792f(5): mov 0x30(%rsp),%r11d
7934(5): mov 0x38(%rsp),%r8
7939(5): mov 0x40(%rsp),%r10
793e(5): mov 0x48(%rsp),%r9
7943(6): jz 0x169(%rip)
7949(3): mov (%r15),%rdx
794c(5): mov 0x8(%rsp),%rsi
7951(3): mov %rcx,%rdi
7954(5): mov %r9,0x48(%rsp)
7959(5): mov %r10,0x40(%rsp)
795e(5): mov %r8,0x38(%rsp)
7963(5): mov %r11d,0x30(%rsp)
7968(4): shl/sal $0x5,%rdx
796c(5): call 0xffff9b44(%rip)
7971(5): mov 0x48(%rsp),%r9
7976(5): mov 0x40(%rsp),%r10
797b(3): mov %rax,%rcx
797e(5): mov 0x38(%rsp),%r8
7983(5): mov 0x30(%rsp),%r11d
7988(5): jmp 0xffffff36(%rip)
798d(3): mov %rsi,%rdi
7990(5): call 0xffff9b50(%rip)
7995(3): test %rax,%rax
7998(3): mov %rax,%rcx
799b(5): mov 0x30(%rsp),%r8
79a0(5): mov 0x38(%rsp),%r10
79a5(5): mov 0x40(%rsp),%r9
79aa(6): jz 0xef(%rip)
79b0(4): lea 0x0(%rbx,%rbx,4),%rax
79b4(5): mov 0x28(%rsp),%rsi
79b9(3): mov %rcx,%rdi
79bc(5): mov %r9,0x40(%rsp)
79c1(5): mov %r10,0x38(%rsp)
79c6(4): lea 0x0(%rbx,%rax,2),%rdx
79ca(5): mov %r8,0x30(%rsp)
79cf(4): shl/sal $0x3,%rdx
79d3(5): call 0xffff9add(%rip)
79d8(3): mov (%r14),%rbx
79db(3): mov %rax,%rcx
79de(5): mov 0x40(%rsp),%r9
79e3(5): mov 0x38(%rsp),%r10
79e8(5): mov 0x30(%rsp),%r8
79ed(5): jmp 0xfffff91a(%rip)
79f2(3): mov (%r15),%rax
79f5(5): jmp 0xfffffa02(%rip)
79fa(3): cmp $0x5,%edx
79fd(6): jnz 0xfffffe02(%rip)
7a03(4): movzx (%r11),%ebx
7a07(3): mov %r11,%rbp
7a0a(5): jmp 0xfffff774(%rip)
7a0f(3): add %r9,%r9
7a12(4): lea 0x1(%rbx),%rax
7a16(3): cmp %rbx,%r9
7a19(4): cmovbe %rax,%r9
7a1d(a): mov $0x576460752303423487,%rax
7a27(3): cmp %rax,%r9
7a2a(6): jnbe 0x211(%rip)
7a30(3): mov %r9,%rsi
7a33(5): mov %r9,0x48(%rsp)
7a38(5): mov %r10,0x40(%rsp)
7a3d(4): shl/sal $0x5,%rsi
7a41(5): cmp %rcx,0x8(%rsp)
7a46(5): mov %r8,0x38(%rsp)
7a4b(5): mov %r11,0x30(%rsp)
7a50(6): jz 0x1be(%rip)
7a56(3): mov %rcx,%rdi
7a59(5): call 0xffff9ad7(%rip)
7a5e(4): mov 0x8(%r15),%rdx
7a62(5): mov 0x30(%rsp),%r11
7a67(3): mov %rax,%rcx
7a6a(5): mov 0x38(%rsp),%r8
7a6f(5): mov 0x40(%rsp),%r10
7a74(5): mov 0x48(%rsp),%r9
7a79(3): test %rcx,%rcx
7a7c(6): jz 0x21b(%rip)
7a82(5): cmp %rdx,0x8(%rsp)
7a87(3): mov (%r15),%rax
7a8a(6): jz 0x1c6(%rip)
7a90(4): mov %rcx,0x8(%r15)
7a94(5): jmp 0xfffffa19(%rip)
7a99(4): mov 0x8(%r15),%rcx
7a9d(5): cmp %rcx,0x8(%rsp)
7aa2(2): jz 0x1a(%rip)
7aa4(3): mov %rcx,%rdi
7aa7(5): call 0xffff9869(%rip)
7aac(4): mov 0x8(%r14),%rdi
7ab0(5): cmp %rdi,0x28(%rsp)
7ab5(2): jz 0x7(%rip)
7ab7(5): call 0xffff9859(%rip)
7abc(5): call 0xffff9874(%rip)
7ac1(6): mov $0xc,(%rax)
7ac7(5): mov $0xffffffff,%eax
7acc(5): jmp 0xfffff586(%rip)
7ad1(3): mov %rsi,%rdi
7ad4(5): call 0xffff9a0c(%rip)
7ad9(5): mov 0x8(%rsp),%rdx
7ade(3): mov %rax,%rcx
7ae1(5): mov 0x40(%rsp),%r9
7ae6(5): mov 0x38(%rsp),%r10
7aeb(5): mov 0x30(%rsp),%r8
7af0(5): jmp 0xfffff8ec(%rip)
7af5(5): mov 0x20(%rsp),%rsi
7afa(4): cmp $0xffffffff,%rsi
7afe(4): lea 0x1(%rsi),%rax
7b02(5): mov %rsi,0x40(%r12)
7b07(6): jz 0xfffffcf4(%rip)
7b0d(5): mov 0x20(%rsp),%rbx
7b12(5): mov %rax,0x20(%rsp)
7b17(5): jmp 0xfffff986(%rip)
7b1c(3): mov %r11,%rdx
7b1f(4): add $0x1,%rdx
7b23(3): movzx (%rdx),%ecx
7b26(3): lea 0xffffffd0(%rcx),%esi
7b29(4): cmp $0x9,%sil
7b2d(2): jbe 0xfffffff2(%rip)
7b2f(3): cmp $0x24,%cl
7b32(6): jnz 0xfffff95c(%rip)
7b38(2): xor %ecx,%ecx
7b3a(a): mov $0x1844674407370955161,%rsi
7b44(3): sub $0x30,%eax
7b47(3): mov %r8,%rdx
7b4a(3): cmp %rsi,%rcx
7b4d(2): cwde 
7b4f(2): jnbe 0x9(%rip)
7b51(4): lea 0x0(%rcx,%rcx,4),%rdx
7b55(3): add %rdx,%rdx
7b58(3): mov %r11,%rsi
7b5b(2): xor %ebx,%ebx
7b5d(3): add %rax,%rdx
7b60(5): movsx 0x1(%r11),%eax
7b65(3): setb %bl
7b68(4): add $0x1,%r11
7b6c(3): mov %rdx,%rcx
7b6f(3): test %rbx,%rbx
7b72(3): lea 0xffffffd0(%rax),%edi
7b75(2): jz 0x73(%rip)
7b77(4): cmp $0x9,%dil
7b7b(6): jnbe 0xfffffc80(%rip)
7b81(3): sub $0x30,%eax
7b84(3): mov %r8,%rdx
7b87(3): mov %r11,%rsi
7b8a(2): cwde 
7b8c(2): jmp 0xffffffcf(%rip)
7b8e(4): cmp $0x9,%dil
7b92(6): jnbe 0xfffffc69(%rip)
7b98(3): movsx %cl,%eax
7b9b(3): mov %rdx,%rbp
7b9e(3): mov %r8,%rcx
7ba1(3): sub $0x30,%eax
7ba4(2): cwde 
7ba6(5): jmp 0xfffffac3(%rip)
7bab(5): mov 0x8(%rsp),%rsi
7bb0(4): shl/sal $0x5,%rax
7bb4(3): mov %rcx,%rdi
7bb7(3): mov %rax,%rdx
7bba(5): mov %r9,0x40(%rsp)
7bbf(5): mov %r10,0x38(%rsp)
7bc4(5): mov %r8,0x30(%rsp)
7bc9(5): call 0xffff98e7(%rip)
7bce(5): mov 0x40(%rsp),%r9
7bd3(3): mov %rax,%rcx
7bd6(5): mov 0x38(%rsp),%r10
7bdb(3): mov (%r15),%rax
7bde(5): mov 0x30(%rsp),%r8
7be3(5): jmp 0xfffff810(%rip)
7be8(4): cmp $0x9,%dil
7bec(6): jbe 0xffffff4e(%rip)
7bf2(4): lea 0xffffffff(%rdx),%rbx
7bf6(4): cmp $0xfffffffd,%rbx
7bfa(6): jnbe 0xfffffc01(%rip)
7c00(5): mov %rbx,0x40(%r12)
7c05(4): lea 0x2(%rsi),%r11
7c09(5): jmp 0xfffff894(%rip)
7c0e(3): mov %rsi,%rdi
7c11(5): call 0xffff98cf(%rip)
7c16(5): mov 0x8(%rsp),%rdx
7c1b(3): mov %rax,%rcx
7c1e(5): mov 0x48(%rsp),%r9
7c23(5): mov 0x40(%rsp),%r10
7c28(5): mov 0x38(%rsp),%r8
7c2d(5): mov 0x30(%rsp),%r11
7c32(5): jmp 0xfffffe47(%rip)
7c37(4): mov 0x8(%r15),%rcx
7c3b(5): cmp %rcx,0x8(%rsp)
7c40(6): jnz 0xfffffe64(%rip)
7c46(5): jmp 0xfffffe66(%rip)
7c4b(5): nop 0x0(%rax,%rax,1)
7c50(5): mov 0x8(%rsp),%rsi
7c55(4): shl/sal $0x5,%rax
7c59(3): mov %rcx,%rdi
7c5c(3): mov %rax,%rdx
7c5f(5): mov %r9,0x48(%rsp)
7c64(5): mov %r10,0x40(%rsp)
7c69(5): mov %r8,0x38(%rsp)
7c6e(5): mov %r11,0x30(%rsp)
7c73(5): call 0xffff983d(%rip)
7c78(5): mov 0x48(%rsp),%r9
7c7d(3): mov %rax,%rcx
7c80(5): mov 0x40(%rsp),%r10
7c85(3): mov (%r15),%rax
7c88(5): mov 0x38(%rsp),%r8
7c8d(5): mov 0x30(%rsp),%r11
7c92(5): jmp 0xfffffdfe(%rip)
7c97(3): mov %rdx,%rcx
7c9a(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
7ca0(2): push %r15
7ca2(2): push %r14
7ca4(3): mov %rdx,%r15
7ca7(2): push %r13
7ca9(2): push %r12
7cab(7): lea 0x202f1e(%rip),%r12
7cb2(1): push %rbp
7cb3(7): lea 0x202f1e(%rip),%rbp
7cba(1): push %rbx
7cbb(3): mov %edi,%r13d
7cbe(3): mov %rsi,%r14
7cc1(3): sub %r12,%rbp
7cc4(4): sub $0x8,%rsp
7cc8(4): sar $0x3,%rbp
7ccc(5): call 0xffff960c(%rip)
7cd1(3): test %rbp,%rbp
7cd4(2): jz 0x22(%rip)
7cd6(2): xor %ebx,%ebx
7cd8(8): nop 0x0(%rax,%rax,1)
7ce0(3): mov %r15,%rdx
7ce3(3): mov %r14,%rsi
7ce6(3): mov %r13d,%edi
7ce9(4): call 0x0(%r12,%rbx,8)
7ced(4): add $0x1,%rbx
7cf1(3): cmp %rbx,%rbp
7cf4(2): jnz 0xffffffec(%rip)
7cf6(4): add $0x8,%rsp
7cfa(1): pop %rbx
7cfb(1): pop %rbp
7cfc(2): pop %r12
7cfe(2): pop %r13
7d00(2): pop %r14
7d02(2): pop %r15
7d04(1): ret near (%rsp)

"atexit" :
7d20(7): mov 0x2032e1(%rip),%rdx
7d27(2): xor %esi,%esi
7d29(5): jmp 0xffff9867(%rip)

"_fini" :
7d30(4): sub $0x8,%rsp
7d34(4): add $0x8,%rsp
7d38(1): ret near (%rsp)

