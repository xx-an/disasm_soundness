
"getenv@plt" :
1da0(6): jmp 0x20df9a(%rip)
1da6(5): push $0x0

"free@plt" :
1db0(6): jmp 0x20df92(%rip)
1db6(5): push $0x1

"abort@plt" :
1dc0(6): jmp 0x20df8a(%rip)
1dc6(5): push $0x2

"__errno_location@plt" :
1dd0(6): jmp 0x20df82(%rip)
1dd6(5): push $0x3

"strncmp@plt" :
1de0(6): jmp 0x20df7a(%rip)
1de6(5): push $0x4

"_exit@plt" :
1df0(6): jmp 0x20df72(%rip)
1df6(5): push $0x5

"strcpy@plt" :
1e00(6): jmp 0x20df6a(%rip)
1e06(5): push $0x6

"__fpending@plt" :
1e10(6): jmp 0x20df62(%rip)
1e16(5): push $0x7

"__read_chk@plt" :
1e20(6): jmp 0x20df5a(%rip)
1e26(5): push $0x8

"mkdir@plt" :
1e30(6): jmp 0x20df52(%rip)
1e36(5): push $0x9

"unlinkat@plt" :
1e40(6): jmp 0x20df4a(%rip)
1e46(5): push $0xa

"readlink@plt" :
1e50(6): jmp 0x20df42(%rip)
1e56(5): push $0xb

"fcntl@plt" :
1e60(6): jmp 0x20df3a(%rip)
1e66(5): push $0xc

"getpid@plt" :
1e70(6): jmp 0x20df32(%rip)
1e76(5): push $0xd

"fread_unlocked@plt" :
1e80(6): jmp 0x20df2a(%rip)
1e86(5): push $0xe

"textdomain@plt" :
1e90(6): jmp 0x20df22(%rip)
1e96(5): push $0xf

"pathconf@plt" :
1ea0(6): jmp 0x20df1a(%rip)
1ea6(5): push $0x10

"fclose@plt" :
1eb0(6): jmp 0x20df12(%rip)
1eb6(5): push $0x11

"bindtextdomain@plt" :
1ec0(6): jmp 0x20df0a(%rip)
1ec6(5): push $0x12

"dcgettext@plt" :
1ed0(6): jmp 0x20df02(%rip)
1ed6(5): push $0x13

"__ctype_get_mb_cur_max@plt" :
1ee0(6): jmp 0x20defa(%rip)
1ee6(5): push $0x14

"strlen@plt" :
1ef0(6): jmp 0x20def2(%rip)
1ef6(5): push $0x15

"__lxstat@plt" :
1f00(6): jmp 0x20deea(%rip)
1f06(5): push $0x16

"openat@plt" :
1f10(6): jmp 0x20dee2(%rip)
1f16(5): push $0x17

"__stack_chk_fail@plt" :
1f20(6): jmp 0x20deda(%rip)
1f26(5): push $0x18

"getuid@plt" :
1f30(6): jmp 0x20ded2(%rip)
1f36(5): push $0x19

"getopt_long@plt" :
1f40(6): jmp 0x20deca(%rip)
1f46(5): push $0x1a

"mbrtowc@plt" :
1f50(6): jmp 0x20dec2(%rip)
1f56(5): push $0x1b

"__fxstatat@plt" :
1f60(6): jmp 0x20deba(%rip)
1f66(5): push $0x1c

"__overflow@plt" :
1f70(6): jmp 0x20deb2(%rip)
1f76(5): push $0x1d

"strrchr@plt" :
1f80(6): jmp 0x20deaa(%rip)
1f86(5): push $0x1e

"lseek@plt" :
1f90(6): jmp 0x20dea2(%rip)
1f96(5): push $0x1f

"gettimeofday@plt" :
1fa0(6): jmp 0x20de9a(%rip)
1fa6(5): push $0x20

"__assert_fail@plt" :
1fb0(6): jmp 0x20de92(%rip)
1fb6(5): push $0x21

"memset@plt" :
1fc0(6): jmp 0x20de8a(%rip)
1fc6(5): push $0x22

"getcwd@plt" :
1fd0(6): jmp 0x20de82(%rip)
1fd6(5): push $0x23

"close@plt" :
1fe0(6): jmp 0x20de7a(%rip)
1fe6(5): push $0x24

"rewinddir@plt" :
1ff0(6): jmp 0x20de72(%rip)
1ff6(5): push $0x25

"strspn@plt" :
2000(6): jmp 0x20de6a(%rip)
2006(5): push $0x26

"closedir@plt" :
2010(6): jmp 0x20de62(%rip)
2016(5): push $0x27

"memcmp@plt" :
2020(6): jmp 0x20de5a(%rip)
2026(5): push $0x28

"fputs_unlocked@plt" :
2030(6): jmp 0x20de52(%rip)
2036(5): push $0x29

"calloc@plt" :
2040(6): jmp 0x20de4a(%rip)
2046(5): push $0x2a

"__getdelim@plt" :
2050(6): jmp 0x20de42(%rip)
2056(5): push $0x2b

"strcmp@plt" :
2060(6): jmp 0x20de3a(%rip)
2066(5): push $0x2c

"fpathconf@plt" :
2070(6): jmp 0x20de32(%rip)
2076(5): push $0x2d

"rpmatch@plt" :
2080(6): jmp 0x20de2a(%rip)
2086(5): push $0x2e

"syscall@plt" :
2090(6): jmp 0x20de22(%rip)
2096(5): push $0x2f

"memcpy@plt" :
20a0(6): jmp 0x20de1a(%rip)
20a6(5): push $0x30

"fileno@plt" :
20b0(6): jmp 0x20de12(%rip)
20b6(5): push $0x31

"getgid@plt" :
20c0(6): jmp 0x20de0a(%rip)
20c6(5): push $0x32

"__xstat@plt" :
20d0(6): jmp 0x20de02(%rip)
20d6(5): push $0x33

"readdir@plt" :
20e0(6): jmp 0x20ddfa(%rip)
20e6(5): push $0x34

"malloc@plt" :
20f0(6): jmp 0x20ddf2(%rip)
20f6(5): push $0x35

"fflush@plt" :
2100(6): jmp 0x20ddea(%rip)
2106(5): push $0x36

"nl_langinfo@plt" :
2110(6): jmp 0x20dde2(%rip)
2116(5): push $0x37

"__freading@plt" :
2120(6): jmp 0x20ddda(%rip)
2126(5): push $0x38

"realloc@plt" :
2130(6): jmp 0x20ddd2(%rip)
2136(5): push $0x39

"fdopen@plt" :
2140(6): jmp 0x20ddca(%rip)
2146(5): push $0x3a

"linkat@plt" :
2150(6): jmp 0x20ddc2(%rip)
2156(5): push $0x3b

"setlocale@plt" :
2160(6): jmp 0x20ddba(%rip)
2166(5): push $0x3c

"__printf_chk@plt" :
2170(6): jmp 0x20ddb2(%rip)
2176(5): push $0x3d

"setvbuf@plt" :
2180(6): jmp 0x20ddaa(%rip)
2186(5): push $0x3e

"mempcpy@plt" :
2190(6): jmp 0x20dda2(%rip)
2196(5): push $0x3f

"memmove@plt" :
21a0(6): jmp 0x20dd9a(%rip)
21a6(5): push $0x40

"error@plt" :
21b0(6): jmp 0x20dd92(%rip)
21b6(5): push $0x41

"__explicit_bzero_chk@plt" :
21c0(6): jmp 0x20dd8a(%rip)
21c6(5): push $0x42

"open@plt" :
21d0(6): jmp 0x20dd82(%rip)
21d6(5): push $0x43

"fseeko@plt" :
21e0(6): jmp 0x20dd7a(%rip)
21e6(5): push $0x44

"fopen@plt" :
21f0(6): jmp 0x20dd72(%rip)
21f6(5): push $0x45

"fdopendir@plt" :
2200(6): jmp 0x20dd6a(%rip)
2206(5): push $0x46

"__cxa_atexit@plt" :
2210(6): jmp 0x20dd62(%rip)
2216(5): push $0x47

"renameat@plt" :
2220(6): jmp 0x20dd5a(%rip)
2226(5): push $0x48

"getppid@plt" :
2230(6): jmp 0x20dd52(%rip)
2236(5): push $0x49

"exit@plt" :
2240(6): jmp 0x20dd4a(%rip)
2246(5): push $0x4a

"fwrite@plt" :
2250(6): jmp 0x20dd42(%rip)
2256(5): push $0x4b

"__fprintf_chk@plt" :
2260(6): jmp 0x20dd3a(%rip)
2266(5): push $0x4c

"mbsinit@plt" :
2270(6): jmp 0x20dd32(%rip)
2276(5): push $0x4d

"symlinkat@plt" :
2280(6): jmp 0x20dd2a(%rip)
2286(5): push $0x4e

"iswprint@plt" :
2290(6): jmp 0x20dd22(%rip)
2296(5): push $0x4f

"__ctype_b_loc@plt" :
22a0(6): jmp 0x20dd1a(%rip)
22a6(5): push $0x50

".plt.got" :
22b0(6): jmp 0x20dd32(%rip)
22b6(2): nop 

"_init" :
1d70(4): sub $0x8,%rsp
1d74(7): mov 0x20e25d(%rip),%rax
1d7b(3): test %rax,%rax
1d7e(2): jz 0x4(%rip)
1d80(2): call %rax
1d82(4): add $0x8,%rsp
1d86(1): ret near (%rsp)

"main" :
22c0(2): push %r15
22c2(2): push %r14
22c4(3): xor %r15d,%r15d
22c7(2): push %r13
22c9(2): push %r12
22cb(3): xor %r14d,%r14d
22ce(1): push %rbp
22cf(1): push %rbx
22d0(2): mov %edi,%ebx
22d2(3): mov %rsi,%rbp
22d5(3): xor %r12d,%r12d
22d8(3): xor %r13d,%r13d
22db(7): sub $0xd8,%rsp
22e2(3): mov (%rsi),%rdi
22e5(9): mov $0x28,%rax
22ee(8): mov %rax,0xc8(%rsp)
22f6(2): xor %eax,%eax
22f8(5): call 0x4648(%rip)
22fd(7): lea 0xa414(%rip),%rsi
2304(5): mov $0x6,%edi
2309(5): call 0xfffffe57(%rip)
230e(7): lea 0x8dcf(%rip),%rsi
2315(7): lea 0x8d9f(%rip),%rdi
231c(5): call 0xfffffba4(%rip)
2321(7): lea 0x8d93(%rip),%rdi
2328(5): call 0xfffffb68(%rip)
232d(7): lea 0x2bac(%rip),%rdi
2334(5): call 0x8c3c(%rip)
2339(5): lea 0x30(%rsp),%rax
233e(7): mov $0x0,0x20ddd4(%rip)
2345(7): mov $0x0,0x20ddce(%rip)
234c(7): mov $0x0,0x20ddc9(%rip)
2353(7): mov $0x0,0x20ddc1(%rip)
235a(7): mov $0x0,0x20ddbe(%rip)
2361(9): mov $0x0,0x8(%rsp)
236a(5): mov %rax,0x10(%rsp)
236f(1): nop 
2370(7): lea 0x20d509(%rip),%rcx
2377(7): lea 0x8db7(%rip),%rdx
237e(3): xor %r8d,%r8d
2381(3): mov %rbp,%rsi
2384(2): mov %ebx,%edi
2386(5): call 0xfffffbba(%rip)
238b(3): cmp $0xff,%eax
238e(3): mov %eax,%r8d
2391(6): jz 0x26b(%rip)
2397(4): cmp $0x62,%r8d
239b(6): jz 0x145(%rip)
23a1(2): jle 0x3f(%rip)
23a3(4): cmp $0x6e,%r8d
23a7(6): jz 0x129(%rip)
23ad(2): jle 0x73(%rip)
23af(4): cmp $0x73,%r8d
23b3(6): jz 0x21d(%rip)
23b9(6): jle 0xff(%rip)
23bf(4): cmp $0x74,%r8d
23c3(6): jz 0x13d(%rip)
23c9(4): cmp $0x76,%r8d
23cd(6): jnz 0x225(%rip)
23d3(7): mov $0x1,0x20dd40(%rip)
23da(2): jmp 0xffffff96(%rip)
23dc(4): nop 0x0(%rax)
23e0(4): cmp $0x4c,%r8d
23e4(6): jz 0x19c(%rip)
23ea(2): jle 0x66(%rip)
23ec(4): cmp $0x53,%r8d
23f0(6): jz 0x1c8(%rip)
23f6(4): cmp $0x54,%r8d
23fa(6): jz 0x1ae(%rip)
2400(4): cmp $0x50,%r8d
2404(6): jnz 0x1ee(%rip)
240a(7): mov $0x0,0x20dd0c(%rip)
2411(5): jmp 0xffffff5f(%rip)
2416(a): nop 0x0(%rax,%rax,1)
2420(4): cmp $0x66,%r8d
2424(6): jz 0x16c(%rip)
242a(4): cmp $0x69,%r8d
242e(6): jnz 0x1be(%rip)
2434(7): mov $0x0,0x20dce0(%rip)
243b(7): mov $0x1,0x20dcda(%rip)
2442(5): jmp 0xffffff2e(%rip)
2447(9): nop 0x0(%rax,%rax,1)
2450(7): cmp $0xffffff7e,%r8d
2457(6): jz 0x4f6(%rip)
245d(4): cmp $0x46,%r8d
2461(6): jz 0x17f(%rip)
2467(7): cmp $0xffffff7d,%r8d
246e(6): jnz 0x184(%rip)
2474(4): sub $0x8,%rsp
2478(7): mov 0x20dc49(%rip),%rdi
247f(7): mov 0x20db92(%rip),%rcx
2486(2): push $0x0
2488(7): lea 0x8c8a(%rip),%r9
248f(7): lea 0x8c93(%rip),%r8
2496(7): lea 0x8c1a(%rip),%rdx
249d(7): lea 0x8b97(%rip),%rsi
24a4(2): xor %eax,%eax
24a6(5): call 0x6e0a(%rip)
24ab(2): xor %edi,%edi
24ad(5): call 0xfffffd93(%rip)
24b2(6): nop 0x0(%rax,%rax,1)
24b8(4): cmp $0x72,%r8d
24bc(6): jnz 0x136(%rip)
24c2(7): mov $0x1,0x20dc55(%rip)
24c9(5): jmp 0xfffffea7(%rip)
24ce(2): nop 
24d0(7): mov $0x0,0x20db39(%rip)
24d7(5): jmp 0xfffffe99(%rip)
24dc(4): nop 0x0(%rax)
24e0(7): mov 0x20dbf9(%rip),%rax
24e7(6): mov $0x1,%r13d
24ed(3): test %rax,%rax
24f0(4): cmovne %rax,%r14
24f4(5): jmp 0xfffffe7c(%rip)
24f9(7): nop 0x0(%rax)
2500(3): test %r12,%r12
2503(6): jnz 0x4da(%rip)
2509(5): mov 0x10(%rsp),%rdx
250e(7): mov 0x20dbcb(%rip),%rsi
2515(5): mov $0x1,%edi
251a(5): call 0xfffffbb6(%rip)
251f(2): test %eax,%eax
2521(6): jnz 0x541(%rip)
2527(4): mov 0x48(%rsp),%eax
252b(7): mov 0x20dbae(%rip),%r12
2532(5): and $0xf000,%eax
2537(5): cmp $0x4000,%eax
253c(6): jz 0xfffffe34(%rip)
2542(3): mov %r12,%rsi
2545(5): mov $0x4,%edi
254a(5): call 0x5e36(%rip)
254f(7): lea 0x8ba6(%rip),%rsi
2556(3): mov %rax,%rbx
2559(5): mov $0x5,%edx
255e(2): xor %edi,%edi
2560(5): call 0xfffff970(%rip)
2565(3): mov %rbx,%rcx
2568(3): mov %rax,%rdx
256b(2): xor %esi,%esi
256d(5): mov $0x1,%edi
2572(2): xor %eax,%eax
2574(5): call 0xfffffc3c(%rip)
2579(7): nop 0x0(%rax)
2580(7): mov $0x1,0x20db96(%rip)
2587(5): jmp 0xfffffde9(%rip)
258c(4): nop 0x0(%rax)
2590(7): mov $0x1,0x20db84(%rip)
2597(7): mov $0x0,0x20db7e(%rip)
259e(5): jmp 0xfffffdd2(%rip)
25a3(5): nop 0x0(%rax,%rax,1)
25a8(6): mov $0x1,%r15d
25ae(5): jmp 0xfffffdc2(%rip)
25b3(5): nop 0x0(%rax,%rax,1)
25b8(7): mov 0x20db21(%rip),%rax
25bf(6): mov $0x1,%r13d
25c5(5): mov %rax,0x8(%rsp)
25ca(5): jmp 0xfffffda6(%rip)
25cf(1): nop 
25d0(7): mov $0x1,0x20db48(%rip)
25d7(5): jmp 0xfffffd99(%rip)
25dc(4): nop 0x0(%rax)
25e0(7): mov $0x1,0x20db32(%rip)
25e7(5): jmp 0xfffffd89(%rip)
25ec(4): cmp $0x64,%r8d
25f0(2): jz 0xfffffff0(%rip)
25f2(5): mov $0x1,%edi
25f7(5): call 0x10c9(%rip)
25fc(7): movsxd 0x20dad5(%rip),%rax
2603(2): mov %ebx,%ecx
2605(2): sub %eax,%ecx
2607(5): lea 0x0(%rbp,%rax,8),%rbx
260c(2): test %ecx,%ecx
260e(6): jle 0x346(%rip)
2614(7): cmp $0x0,0x20db03(%rip)
261b(2): jz 0xf(%rip)
261d(7): cmp $0x0,0x20dafb(%rip)
2624(6): jz 0x356(%rip)
262a(7): cmp $0x0,0x20dae8(%rip)
2631(2): jnz 0x9(%rip)
2633(7): mov $0x0,0x20dade(%rip)
263a(3): test %r15b,%r15b
263d(6): jz 0xd3(%rip)
2643(3): test %r12,%r12
2646(6): jnz 0x3d9(%rip)
264c(3): cmp $0x2,%ecx
264f(6): jnz 0x34f(%rip)
2655(3): test %r13b,%r13b
2658(6): jz 0x24f(%rip)
265e(6): mov $0x2,%r12d
2664(2): xor %ebp,%ebp
2666(7): lea 0x8b09(%rip),%rsi
266d(5): mov $0x5,%edx
2672(2): xor %edi,%edi
2674(5): mov %r8d,0x10(%rsp)
2679(5): call 0xfffff857(%rip)
267e(3): mov %r14,%rsi
2681(3): mov %rax,%rdi
2684(5): call 0x21bc(%rip)
2689(5): mov 0x10(%rsp),%r8d
268e(5): mov 0x8(%rsp),%rdi
2693(5): mov %r8d,0x10(%rsp)
2698(6): mov %eax,0x20da82(%rip)
269e(5): call 0x1ab2(%rip)
26a3(3): test %rbp,%rbp
26a6(5): mov 0x10(%rsp),%r8d
26ab(6): jz 0x21a(%rip)
26b1(4): cmp $0x1,%r12d
26b5(6): jle 0x285(%rip)
26bb(7): cmp $0x0,0x20da59(%rip)
26c2(6): jz 0x99(%rip)
26c8(7): cmp $0x0,0x20da50(%rip)
26cf(6): jnz 0x8c(%rip)
26d5(7): cmp $0x3,0x20da44(%rip)
26dc(2): jz 0x7f(%rip)
26de(7): lea 0x414b(%rip),%r8
26e5(7): lea 0x40d4(%rip),%rcx
26ec(2): xor %esi,%esi
26ee(7): lea 0x408b(%rip),%rdx
26f5(5): mov $0x3d,%edi
26fa(5): call 0x3616(%rip)
26ff(3): test %rax,%rax
2702(7): mov %rax,0x20da07(%rip)
2709(2): jnz 0x52(%rip)
270b(5): call 0x6f55(%rip)
2710(3): test %r12,%r12
2713(4): setz %r15b
2717(3): cmp $0x1,%ecx
271a(6): jnle 0xdf(%rip)
2720(3): test %r15b,%r15b
2723(6): jz 0xd6(%rip)
2729(3): test %r13b,%r13b
272c(6): jnz 0x31c(%rip)
2732(5): mov 0x8(%rsp),%rdi
2737(7): lea 0x9816(%rip),%rbp
273e(a): mov $0x0,0x20d9d8(%rip)
2748(6): mov $0x1,%r12d
274e(5): call 0x1a02(%rip)
2753(8): mov $0xffffff9c,0x18(%rsp)
275b(5): lea 0xffffffff(%r12),%eax
2760(5): lea 0x28(%rsp),%r14
2765(3): mov %rbx,%r13
2768(5): lea 0x8(%rbx,%rax,8),%r15
276d(5): mov $0x1,%ebx
2772(6): nop 0x0(%rax,%rax,1)
2778(4): mov 0x0(%r13),%rdi
277c(4): add $0x8,%r13
2780(5): call 0x2a20(%rip)
2785(3): mov %r14,%rdx
2788(3): mov %rax,%rsi
278b(3): mov %rbp,%rdi
278e(5): call 0x2bf2(%rip)
2793(5): mov 0x28(%rsp),%rdi
2798(3): mov %rax,%r12
279b(5): call 0x2ab5(%rip)
27a0(4): mov 0xfffffff8(%r13),%rdi
27a4(5): mov 0x28(%rsp),%rdx
27a9(6): mov $0xffffffff,%r8d
27af(4): mov 0x18(%rsp),%esi
27b3(3): mov %r12,%rcx
27b6(5): call 0x48a(%rip)
27bb(3): mov %r12,%rdi
27be(2): and %eax,%ebx
27c0(5): call 0xfffff5f0(%rip)
27c5(3): cmp %r15,%r13
27c8(2): jnz 0xffffffb0(%rip)
27ca(3): xor $0x1,%ebx
27cd(8): mov 0xc8(%rsp),%rcx
27d5(9): xor $0x28,%rcx
27de(3): movzx %bl,%eax
27e1(6): jnz 0x262(%rip)
27e7(7): add $0xd8,%rsp
27ee(1): pop %rbx
27ef(1): pop %rbp
27f0(2): pop %r12
27f2(2): pop %r13
27f4(2): pop %r14
27f6(2): pop %r15
27f8(1): ret near (%rsp)
27f9(3): cmp $0x2,%ecx
27fc(2): jnz 0x55(%rip)
27fe(3): test %r15b,%r15b
2801(2): jz 0x50(%rip)
2803(4): mov 0x8(%rbx),%rdx
2807(3): mov (%rbx),%rdi
280a(5): mov $0xffffff9c,%esi
280f(4): mov %ecx,0x10(%rsp)
2813(5): call 0x3ad(%rip)
2818(2): test %eax,%eax
281a(3): mov %eax,%r8d
281d(4): mov 0x10(%rsp),%ecx
2821(6): js 0x10c(%rip)
2827(3): cmp $0x11,%eax
282a(6): jz 0x103(%rip)
2830(3): cmp $0x14,%eax
2833(6): jz 0xfa(%rip)
2839(6): mov $0x2,%r12d
283f(2): xor %ebp,%ebp
2841(2): xor %eax,%eax
2843(3): test %r13b,%r13b
2846(6): jz 0xfffffe48(%rip)
284c(5): jmp 0xfffffe1a(%rip)
2851(3): test %r12,%r12
2854(3): mov %r12,%rbp
2857(6): jz 0xd6(%rip)
285d(7): cmp $0x1,0x20d7ac(%rip)
2864(3): mov %rbp,%rsi
2867(5): mov $0xffffff9c,%edi
286c(5): mov %r8d,0x1c(%rsp)
2871(4): mov %ecx,0x10(%rsp)
2875(2): sbb %edx,%edx
2877(2): xor %eax,%eax
2879(6): and $0x20000,%edx
287f(6): add $0x210000,%edx
2885(5): call 0x3fcb(%rip)
288a(2): test %eax,%eax
288c(4): mov %eax,0x18(%rsp)
2890(4): mov 0x10(%rsp),%ecx
2894(5): mov 0x1c(%rsp),%r8d
2899(2): js 0x47(%rip)
289b(4): movzx %r15b,%r15d
289f(3): sub %r15d,%ecx
28a2(3): mov %ecx,%r12d
28a5(2): jmp 0xffffff9c(%rip)
28a7(5): mov 0x8(%rsp),%rdi
28ac(5): mov %r8d,0x10(%rsp)
28b1(a): mov $0x0,0x20d865(%rip)
28bb(5): call 0x1895(%rip)
28c0(5): mov 0x10(%rsp),%r8d
28c5(4): mov 0x8(%rbx),%rdx
28c9(3): mov (%rbx),%rdi
28cc(5): mov $0xffffff9c,%esi
28d1(3): mov %rdx,%rcx
28d4(5): call 0x36c(%rip)
28d9(2): mov %eax,%ebx
28db(5): jmp 0xfffffeef(%rip)
28e0(3): cmp $0x2,%ecx
28e3(2): jnz 0xb(%rip)
28e5(3): test %r12,%r12
28e8(6): jz 0xfffffd6d(%rip)
28ee(3): mov %rbp,%rsi
28f1(5): mov $0x4,%edi
28f6(5): call 0x5a8a(%rip)
28fb(7): lea 0x886a(%rip),%rsi
2902(5): mov $0x5,%edx
2907(2): xor %edi,%edi
2909(3): mov %rax,%rbp
290c(5): call 0xfffff5c4(%rip)
2911(3): mov %rax,%rbx
2914(5): call 0xfffff4bc(%rip)
2919(2): mov (%rax),%esi
291b(3): mov %rbp,%rcx
291e(3): mov %rbx,%rdx
2921(5): mov $0x1,%edi
2926(2): xor %eax,%eax
2928(5): call 0xfffff888(%rip)
292d(3): movsxd %ecx,%rax
2930(5): mov 0xfffffff8(%rbx,%rax,8),%rbp
2935(5): jmp 0xffffff28(%rip)
293a(3): test %r12d,%r12d
293d(6): jnz 0xfffffe1e(%rip)
2943(5): mov $0x1,%ebx
2948(5): jmp 0xfffffe82(%rip)
294d(2): xor %edi,%edi
294f(5): call 0xd71(%rip)
2954(7): lea 0x87eb(%rip),%rsi
295b(2): xor %edi,%edi
295d(5): mov $0x5,%edx
2962(5): call 0xfffff56e(%rip)
2967(2): xor %esi,%esi
2969(3): mov %rax,%rdx
296c(2): xor %edi,%edi
296e(2): xor %eax,%eax
2970(5): call 0xfffff840(%rip)
2975(5): jmp 0xfffffc7d(%rip)
297a(7): lea 0x953f(%rip),%rsi
2981(5): mov $0x5,%edx
2986(2): xor %edi,%edi
2988(5): call 0xfffff548(%rip)
298d(2): xor %esi,%esi
298f(3): mov %rax,%rdx
2992(5): mov $0x1,%edi
2997(2): xor %eax,%eax
2999(5): call 0xfffff817(%rip)
299e(3): sub $0x1,%ecx
29a1(2): jz 0x60(%rip)
29a3(4): mov 0x10(%rbx),%rsi
29a7(5): mov $0x4,%edi
29ac(5): call 0x59d4(%rip)
29b1(7): lea 0x87a3(%rip),%rsi
29b8(3): mov %rax,%rbx
29bb(5): mov $0x5,%edx
29c0(2): xor %edi,%edi
29c2(5): call 0xfffff50e(%rip)
29c7(3): mov %rbx,%rcx
29ca(3): mov %rax,%rdx
29cd(2): xor %esi,%esi
29cf(2): xor %edi,%edi
29d1(2): xor %eax,%eax
29d3(5): call 0xfffff7dd(%rip)
29d8(5): jmp 0xfffffc1a(%rip)
29dd(7): lea 0x94b4(%rip),%rsi
29e4(5): mov $0x5,%edx
29e9(2): xor %edi,%edi
29eb(5): call 0xfffff4e5(%rip)
29f0(2): xor %esi,%esi
29f2(3): mov %rax,%rdx
29f5(5): mov $0x1,%edi
29fa(2): xor %eax,%eax
29fc(5): call 0xfffff7b4(%rip)
2a01(3): mov (%rbx),%rsi
2a04(5): mov $0x4,%edi
2a09(5): call 0x5977(%rip)
2a0e(5): mov $0x5,%edx
2a13(3): mov %rax,%rbx
2a16(7): lea 0x950b(%rip),%rsi
2a1d(2): jmp 0xffffffa3(%rip)
2a1f(7): lea 0x94c2(%rip),%rsi
2a26(5): mov $0x5,%edx
2a2b(2): xor %edi,%edi
2a2d(5): call 0xfffff4a3(%rip)
2a32(2): xor %esi,%esi
2a34(3): mov %rax,%rdx
2a37(5): mov $0x1,%edi
2a3c(2): xor %eax,%eax
2a3e(5): call 0xfffff772(%rip)
2a43(5): call 0xfffff4dd(%rip)
2a48(6): mov $0x1,%r12d
2a4e(8): mov $0xffffff9c,0x18(%rsp)
2a56(7): lea 0x94f7(%rip),%rbp
2a5d(5): jmp 0xfffffc09(%rip)
2a62(7): mov 0x20d677(%rip),%rsi
2a69(5): mov $0x4,%edi
2a6e(5): call 0x5912(%rip)
2a73(7): lea 0x852e(%rip),%rsi
2a7a(5): mov $0x5,%edx
2a7f(2): xor %edi,%edi
2a81(3): mov %rax,%rbp
2a84(5): call 0xfffff44c(%rip)
2a89(3): mov %rax,%rbx
2a8c(5): call 0xfffff344(%rip)
2a91(2): mov (%rax),%esi
2a93(3): mov %rbp,%rcx
2a96(3): mov %rbx,%rdx
2a99(5): mov $0x1,%edi
2a9e(2): xor %eax,%eax
2aa0(5): call 0xfffff710(%rip)
2aa5(a): nop 0x0(%rax,%rax,1)
2aaf(1): nop 
2ab0(2): xor %ebp,%ebp
2ab2(3): mov %rdx,%r9
2ab5(1): pop %rsi
2ab6(3): mov %rsp,%rdx
2ab9(4): and $0xfffffff0,%rsp
2abd(1): push %rax
2abe(1): push %rsp
2abf(7): lea 0x849a(%rip),%r8
2ac6(7): lea 0x8423(%rip),%rcx
2acd(7): lea 0xfffff7ec(%rip),%rdi
2ad4(6): call 0x20d4f6(%rip)
2ada(1): hlt 

"_start" :
2ab0(2): xor %ebp,%ebp
2ab2(3): mov %rdx,%r9
2ab5(1): pop %rsi
2ab6(3): mov %rsp,%rdx
2ab9(4): and $0xfffffff0,%rsp
2abd(1): push %rax
2abe(1): push %rsp
2abf(7): lea 0x849a(%rip),%r8
2ac6(7): lea 0x8423(%rip),%rcx
2acd(7): lea 0xfffff7ec(%rip),%rdi
2ad4(6): call 0x20d4f6(%rip)
2ada(1): hlt 

"deregister_tm_clones" :
2ae0(7): lea 0x20d5c1(%rip),%rdi
2ae7(1): push %rbp
2ae8(7): lea 0x20d5b9(%rip),%rax
2aef(3): cmp %rdi,%rax
2af2(3): mov %rsp,%rbp
2af5(2): jz 0x1b(%rip)
2af7(7): mov 0x20d4ca(%rip),%rax
2afe(3): test %rax,%rax
2b01(2): jz 0xf(%rip)
2b03(1): pop %rbp
2b04(2): jmp %rax
2b06(a): nop 0x0(%rax,%rax,1)
2b10(1): pop %rbp
2b11(1): ret near (%rsp)

"register_tm_clones" :
2b20(7): lea 0x20d581(%rip),%rdi
2b27(7): lea 0x20d57a(%rip),%rsi
2b2e(1): push %rbp
2b2f(3): sub %rdi,%rsi
2b32(3): mov %rsp,%rbp
2b35(4): sar $0x3,%rsi
2b39(3): mov %rsi,%rax
2b3c(4): shr $0x3f,%rax
2b40(3): add %rax,%rsi
2b43(3): sar $0x1,%rsi
2b46(2): jz 0x1a(%rip)
2b48(7): mov 0x20d491(%rip),%rax
2b4f(3): test %rax,%rax
2b52(2): jz 0xe(%rip)
2b54(1): pop %rbp
2b55(2): jmp %rax
2b57(9): nop 0x0(%rax,%rax,1)
2b60(1): pop %rbp
2b61(1): ret near (%rsp)

"__do_global_dtors_aux" :
2b70(7): cmp $0x0,0x20d591(%rip)
2b77(2): jnz 0x31(%rip)
2b79(8): cmp $0x0,0x20d467(%rip)
2b81(1): push %rbp
2b82(3): mov %rsp,%rbp
2b85(2): jz 0xe(%rip)
2b87(7): mov 0x20d47a(%rip),%rdi
2b8e(5): call 0xfffff722(%rip)
2b93(5): call 0xffffff4d(%rip)
2b98(7): mov $0x1,0x20d569(%rip)
2b9f(1): pop %rbp
2ba0(1): ret near (%rsp)
2ba1(7): nop 0x0(%rax)
2ba8(2): REP ret near (%rsp)

"frame_dummy" :
2bb0(1): push %rbp
2bb1(3): mov %rsp,%rbp
2bb4(1): pop %rbp
2bb5(5): jmp 0xffffff6b(%rip)

"atomic_link" :
2bc0(4): sub $0x8,%rsp
2bc4(7): cmp $0x0,0x20d554(%rip)
2bcb(2): jz 0x25(%rip)
2bcd(7): cmp $0x0,0x20d54a(%rip)
2bd4(2): jnz 0x5c(%rip)
2bd6(5): call 0xfffff6aa(%rip)
2bdb(2): test %eax,%eax
2bdd(2): js 0x44(%rip)
2bdf(2): xor %eax,%eax
2be1(4): add $0x8,%rsp
2be5(1): ret near (%rsp)
2be6(a): nop 0x0(%rax,%rax,1)
2bf0(7): cmp $0x0,0x20d521(%rip)
2bf7(2): jnz 0x39(%rip)
2bf9(3): xor %r8d,%r8d
2bfc(7): cmp $0x0,0x20d51a(%rip)
2c03(3): mov %rdx,%rcx
2c06(2): mov %esi,%edx
2c08(3): mov %rdi,%rsi
2c0b(5): mov $0xffffff9c,%edi
2c10(4): setnz %r8b
2c14(4): shl/sal $0xa,%r8d
2c18(5): call 0xfffff538(%rip)
2c1d(2): test %eax,%eax
2c1f(2): jns 0xffffffc0(%rip)
2c21(5): call 0xfffff1af(%rip)
2c26(2): mov (%rax),%eax
2c28(4): add $0x8,%rsp
2c2c(1): ret near (%rsp)
2c2d(3): nop (%rax)
2c30(5): mov $0xffffffff,%eax
2c35(2): jmp 0xffffffac(%rip)

"do_link" :
2c40(2): push %r15
2c42(2): push %r14
2c44(3): mov %r8d,%r10d
2c47(2): push %r13
2c49(2): push %r12
2c4b(3): xor %r13d,%r13d
2c4e(1): push %rbp
2c4f(1): push %rbx
2c50(3): mov %esi,%r12d
2c53(3): mov %rdi,%rbx
2c56(3): mov %rdx,%rbp
2c59(3): mov %rcx,%r14
2c5c(7): sub $0x158,%rsp
2c63(9): mov $0x28,%rax
2c6c(8): mov %rax,0x148(%rsp)
2c74(2): xor %eax,%eax
2c76(7): cmp $0x0,0x20d4a0(%rip)
2c7d(4): setz %r13b
2c81(4): shl/sal $0x8,%r13d
2c85(3): test %r8d,%r8d
2c88(6): js 0x378(%rip)
2c8e(3): test %r10d,%r10d
2c91(8): movzx 0x20d486(%rip),%r15d
2c99(6): jnz 0x157(%rip)
2c9f(8): cmp $0x0,0x20d469(%rip)
2ca7(6): jz 0x409(%rip)
2cad(3): test %r15b,%r15b
2cb0(6): jnz 0x560(%rip)
2cb6(5): lea 0x20(%rsp),%r15
2cbb(3): mov %r13d,%r8d
2cbe(3): mov %rbx,%rdx
2cc1(5): mov $0xffffff9c,%esi
2cc6(5): mov $0x1,%edi
2ccb(3): mov %r15,%rcx
2cce(5): call 0xfffff292(%rip)
2cd3(2): test %eax,%eax
2cd5(6): jnz 0x3fb(%rip)
2cdb(8): mov $0x0,(%rsp)
2ce3(3): xor %r13d,%r13d
2ce6(7): mov 0x20d423(%rip),%rdi
2ced(3): mov %r15,%rdx
2cf0(3): mov %r14,%rsi
2cf3(5): call 0x259d(%rip)
2cf8(7): cmp $0x0,0x20d41b(%rip)
2cff(6): mov $0x1,%r15d
2d05(6): jz 0xa5(%rip)
2d0b(3): test %r13,%r13
2d0e(6): jz 0x52d(%rip)
2d14(3): sub %r14,%rbp
2d17(3): test %rbp,%rbp
2d1a(6): jnle 0x536(%rip)
2d20(3): mov %r13,%r15
2d23(3): xor %r12d,%r12d
2d26(3): mov %r15,%rdx
2d29(5): mov $0x4,%esi
2d2e(5): mov $0x2,%edi
2d33(5): call 0x552d(%rip)
2d38(3): mov %r12,%rdi
2d3b(7): lea 0x8262(%rip),%r12
2d42(3): mov %rax,%rbp
2d45(5): call 0xfffff06b(%rip)
2d4a(3): mov %rbx,%rdx
2d4d(5): mov $0x4,%esi
2d52(5): mov $0x1,%edi
2d57(5): call 0x5509(%rip)
2d5c(7): cmp $0x1,0x20d3bc(%rip)
2d63(3): mov %r14,%rdx
2d66(5): mov $0x4,%esi
2d6b(3): mov %rax,%r15
2d6e(2): sbb %ebx,%ebx
2d70(2): xor %edi,%edi
2d72(5): call 0x54ee(%rip)
2d77(3): and $0x10,%ebx
2d7a(4): sub $0x8,%rsp
2d7e(7): lea 0x8275(%rip),%rsi
2d85(2): push %r15
2d87(3): add $0x2d,%ebx
2d8a(3): mov %rax,%r8
2d8d(3): mov %rbp,%rdx
2d90(3): mov %ebx,%r9d
2d93(3): mov %r12,%rcx
2d96(5): mov $0x1,%edi
2d9b(2): xor %eax,%eax
2d9d(6): mov $0x1,%r15d
2da3(5): call 0xfffff3cd(%rip)
2da8(1): pop %rax
2da9(1): pop %rdx
2daa(3): mov %r13,%rdi
2dad(5): call 0xfffff003(%rip)
2db2(4): mov (%rsp),%rdi
2db6(5): call 0xffffeffa(%rip)
2dbb(8): mov 0x148(%rsp),%rbx
2dc3(9): xor $0x28,%rbx
2dcc(3): mov %r15d,%eax
2dcf(6): jnz 0x8d2(%rip)
2dd5(7): add $0x158,%rsp
2ddc(1): pop %rbx
2ddd(1): pop %rbp
2dde(2): pop %r12
2de0(2): pop %r13
2de2(2): pop %r14
2de4(2): pop %r15
2de6(1): ret near (%rsp)
2de7(9): nop 0x0(%rax,%rax,1)
2df0(3): test %r15b,%r15b
2df3(8): mov $0x1,0x10(%rsp)
2dfb(6): jz 0x52d(%rip)
2e01(7): cmp $0x0,0x20d316(%rip)
2e08(8): mov $0x0,(%rsp)
2e10(6): jnz 0x358(%rip)
2e16(7): cmp $0x0,0x20d2fe(%rip)
2e1d(6): jnz 0x153(%rip)
2e23(7): cmp $0x0,0x20d2f2(%rip)
2e2a(6): jnz 0x146(%rip)
2e30(7): mov 0x20d2e9(%rip),%r9d
2e37(3): test %r9d,%r9d
2e3a(6): jnz 0x136(%rip)
2e40(3): xor %r9d,%r9d
2e43(3): xor %r13d,%r13d
2e46(7): cmp $0x0,0x20d2d2(%rip)
2e4d(6): jnz 0x3a3(%rip)
2e53(3): xor %r8d,%r8d
2e56(7): cmp $0x0,0x20d2c0(%rip)
2e5d(3): mov %rbp,%rcx
2e60(3): mov %rbx,%rsi
2e63(3): mov %r12d,%edx
2e66(5): mov $0xffffff9c,%edi
2e6b(4): setnz %r8b
2e6f(4): sub $0x8,%rsp
2e73(2): push %r10
2e75(4): shl/sal $0xa,%r8d
2e79(5): call 0xd47(%rip)
2e7e(1): pop %rcx
2e7f(1): pop %rsi
2e80(3): mov %eax,%r15d
2e83(3): test %r15d,%r15d
2e86(6): jle 0x820(%rip)
2e8c(3): mov %rbx,%rdx
2e8f(5): mov $0x4,%esi
2e94(5): mov $0x1,%edi
2e99(5): call 0x53c7(%rip)
2e9e(2): xor %edi,%edi
2ea0(3): mov %r14,%rdx
2ea3(5): mov $0x4,%esi
2ea8(5): mov %rax,0x8(%rsp)
2ead(5): call 0x53b3(%rip)
2eb2(7): cmp $0x0,0x20d266(%rip)
2eb9(3): mov %rax,%rcx
2ebc(6): jz 0x25c(%rip)
2ec2(4): cmp $0x24,%r15d
2ec6(2): jz 0xb(%rip)
2ec8(3): cmp $0x0,(%rbx)
2ecb(6): jnz 0x3c5(%rip)
2ed1(7): lea 0x83c8(%rip),%rsi
2ed8(5): mov $0x5,%edx
2edd(2): xor %edi,%edi
2edf(5): mov %rcx,0x10(%rsp)
2ee4(5): call 0xffffefec(%rip)
2ee9(5): mov 0x10(%rsp),%rcx
2eee(3): mov %rax,%rdx
2ef1(5): mov 0x8(%rsp),%r8
2ef6(3): mov %r15d,%esi
2ef9(2): xor %edi,%edi
2efb(2): xor %eax,%eax
2efd(3): xor %r15d,%r15d
2f00(5): call 0xfffff2b0(%rip)
2f05(3): test %r13,%r13
2f08(6): jz 0xfffffea2(%rip)
2f0e(3): mov %rbp,%rcx
2f11(3): mov %r12d,%edx
2f14(3): mov %r13,%rsi
2f17(3): mov %r12d,%edi
2f1a(5): call 0xfffff306(%rip)
2f1f(2): test %eax,%eax
2f21(6): jz 0xfffffe89(%rip)
2f27(3): mov %r14,%rsi
2f2a(5): mov $0x4,%edi
2f2f(5): call 0x5451(%rip)
2f34(7): lea 0x80ec(%rip),%rsi
2f3b(2): xor %edi,%edi
2f3d(5): mov $0x5,%edx
2f42(3): mov %rax,%rbp
2f45(5): call 0xffffef8b(%rip)
2f4a(3): mov %rax,%rbx
2f4d(5): call 0xffffee83(%rip)
2f52(2): mov (%rax),%esi
2f54(3): mov %rbp,%rcx
2f57(3): mov %rbx,%rdx
2f5a(2): xor %edi,%edi
2f5c(2): xor %eax,%eax
2f5e(5): call 0xfffff252(%rip)
2f63(5): jmp 0xfffffe47(%rip)
2f68(8): nop 0x0(%rax,%rax,1)
2f70(8): lea 0xb0(%rsp),%r13
2f78(6): mov $0x100,%r8d
2f7e(3): mov %rbp,%rdx
2f81(3): mov %r12d,%esi
2f84(5): mov $0x1,%edi
2f89(5): mov %r10d,0x8(%rsp)
2f8e(3): mov %r13,%rcx
2f91(5): call 0xffffefcf(%rip)
2f96(2): test %eax,%eax
2f98(5): mov 0x8(%rsp),%r10d
2f9d(2): jz 0x73(%rip)
2f9f(5): mov %r10d,0x8(%rsp)
2fa4(5): call 0xffffee2c(%rip)
2fa9(3): cmp $0x2,(%rax)
2fac(3): mov %rax,%r13
2faf(5): mov 0x8(%rsp),%r10d
2fb4(6): jz 0xfffffe8c(%rip)
2fba(3): mov %r14,%rsi
2fbd(5): mov $0x4,%edi
2fc2(3): xor %r15d,%r15d
2fc5(5): call 0x53bb(%rip)
2fca(7): lea 0x7fd7(%rip),%rsi
2fd1(5): mov $0x5,%edx
2fd6(2): xor %edi,%edi
2fd8(3): mov %rax,%rbx
2fdb(5): call 0xffffeef5(%rip)
2fe0(4): mov 0x0(%r13),%esi
2fe4(3): mov %rax,%rdx
2fe7(3): mov %rbx,%rcx
2fea(2): xor %edi,%edi
2fec(2): xor %eax,%eax
2fee(5): call 0xfffff1c2(%rip)
2ff3(5): jmp 0xfffffdc8(%rip)
2ff8(8): nop 0x0(%rax,%rax,1)
3000(5): call 0xfffffbc0(%rip)
3005(3): mov %eax,%r10d
3008(5): jmp 0xfffffc86(%rip)
300d(3): nop (%rax)
3010(7): mov 0xc8(%rsp),%eax
3017(5): and $0xf000,%eax
301c(5): cmp $0x4000,%eax
3021(6): jz 0x39f(%rip)
3027(7): mov 0x20d0e2(%rip),%rdi
302e(3): mov %r13,%rdx
3031(3): mov %r14,%rsi
3034(5): mov %r10d,0x8(%rsp)
3039(5): call 0x22e7(%rip)
303e(2): test %al,%al
3040(5): mov 0x8(%rsp),%r10d
3045(6): jnz 0x4c3(%rip)
304b(7): mov 0x20d0ce(%rip),%r8d
3052(7): movzx 0x20d0c2(%rip),%eax
3059(3): test %r8d,%r8d
305c(2): jz 0xc(%rip)
305e(7): movzx 0x20d0ba(%rip),%eax
3065(3): xor $0x1,%eax
3068(2): test %al,%al
306a(2): jz 0x21(%rip)
306c(4): mov 0x10(%rsp),%edi
3070(2): test %edi,%edi
3072(6): jnz 0x51b(%rip)
3078(8): mov 0xb8(%rsp),%rax
3080(5): cmp %rax,0x28(%rsp)
3085(6): jz 0x5a4(%rip)
308b(3): test %r10d,%r10d
308e(6): js 0x3c2(%rip)
3094(4): cmp $0x11,%r10d
3098(6): jz 0x3b8(%rip)
309e(6): mov $0x1,%r9d
30a4(3): xor %r13d,%r13d
30a7(5): jmp 0xfffffd9f(%rip)
30ac(4): nop 0x0(%rax)
30b0(8): mov $0x0,(%rsp)
30b8(3): xor %r13d,%r13d
30bb(3): test %r15b,%r15b
30be(6): jnz 0xfffffc3a(%rip)
30c4(5): lea 0x20(%rsp),%r15
30c9(5): jmp 0xfffffc1d(%rip)
30ce(2): nop 
30d0(3): mov %rbx,%rsi
30d3(5): mov $0x4,%edi
30d8(3): xor %r15d,%r15d
30db(5): call 0x52a5(%rip)
30e0(7): lea 0x7ec1(%rip),%rsi
30e7(5): mov $0x5,%edx
30ec(2): xor %edi,%edi
30ee(3): mov %rax,%rbp
30f1(5): call 0xffffeddf(%rip)
30f6(3): mov %rax,%rbx
30f9(5): call 0xffffecd7(%rip)
30fe(2): mov (%rax),%esi
3100(3): mov %rbp,%rcx
3103(3): mov %rbx,%rdx
3106(2): xor %edi,%edi
3108(2): xor %eax,%eax
310a(5): call 0xfffff0a6(%rip)
310f(5): jmp 0xfffffcac(%rip)
3114(4): nop 0x0(%rax)
3118(4): cmp $0x1f,%r15d
311c(6): jz 0x2e4(%rip)
3122(4): cmp $0x7a,%r15d
3126(2): jz 0x17(%rip)
3128(4): cmp $0x11,%r15d
312c(2): jz 0x11(%rip)
312e(3): mov %r15d,%eax
3131(3): and $0xfd,%eax
3134(3): cmp $0x1c,%eax
3137(6): jnz 0x2f1(%rip)
313d(7): lea 0x7ec5(%rip),%rsi
3144(5): mov $0x5,%edx
3149(2): xor %edi,%edi
314b(5): mov %rcx,0x10(%rsp)
3150(5): call 0xffffed80(%rip)
3155(5): mov 0x10(%rsp),%rcx
315a(3): mov %rax,%rdx
315d(5): jmp 0xfffffd94(%rip)
3162(6): nop 0x0(%rax,%rax,1)
3168(3): mov %r14,%rdi
316b(4): mov %r10d,(%rsp)
316f(5): call 0x1f51(%rip)
3174(5): mov $0x2,%esi
3179(3): mov %rax,%rdi
317c(5): mov %rax,0x8(%rsp)
3181(5): call 0x170f(%rip)
3186(5): mov $0x2,%esi
318b(3): mov %rax,%r13
318e(3): mov %rbx,%rdi
3191(5): call 0x16ff(%rip)
3196(3): test %r13,%r13
3199(3): mov %rax,%r15
319c(4): mov (%rsp),%r10d
31a0(2): jz 0xb(%rip)
31a2(3): test %rax,%rax
31a5(6): jnz 0x113(%rip)
31ab(5): mov 0x8(%rsp),%rdi
31b0(4): mov %r10d,(%rsp)
31b4(5): call 0xffffebfc(%rip)
31b9(3): mov %r13,%rdi
31bc(5): call 0xffffebf4(%rip)
31c1(3): mov %r15,%rdi
31c4(5): call 0xffffebec(%rip)
31c9(4): mov (%rsp),%r10d
31cd(3): mov %rbx,%rdi
31d0(5): mov %r10d,0x8(%rsp)
31d5(5): call 0x646b(%rip)
31da(5): mov 0x8(%rsp),%r10d
31df(3): mov %rax,%rbx
31e2(4): mov %rax,(%rsp)
31e6(5): jmp 0xfffffc30(%rip)
31eb(5): nop 0x0(%rax,%rax,1)
31f0(3): mov %r10d,%r8d
31f3(3): mov %r9d,%ecx
31f6(3): mov %rbp,%rdx
31f9(3): mov %r12d,%esi
31fc(3): mov %rbx,%rdi
31ff(5): call 0xb31(%rip)
3204(3): mov %eax,%r15d
3207(5): jmp 0xfffffc7c(%rip)
320c(4): nop 0x0(%rax)
3210(7): cmp $0x0,0x20cf03(%rip)
3217(2): jnz 0x19(%rip)
3219(8): mov $0x0,(%rsp)
3221(3): xor %r13d,%r13d
3224(5): jmp 0xfffffb86(%rip)
3229(7): nop 0x0(%rax)
3230(3): xor %r13d,%r13d
3233(8): mov $0x0,(%rsp)
323b(7): lea 0x94d6(%rip),%r12
3242(3): mov %r12,%rbp
3245(5): jmp 0xfffffb05(%rip)
324a(6): nop 0x0(%rax,%rax,1)
3250(3): mov %r13,%rdi
3253(5): call 0xffffec9d(%rip)
3258(5): lea 0x1(%rbp,%rax,1),%rdi
325d(5): call 0x61b3(%rip)
3262(3): mov %r14,%rsi
3265(3): mov %rax,%r12
3268(3): mov %rbp,%rdx
326b(3): mov %rax,%rdi
326e(3): mov %r12,%r15
3271(5): call 0xffffee2f(%rip)
3276(4): lea 0x0(%r12,%rbp,1),%rdi
327a(3): mov %r13,%rsi
327d(5): call 0xffffeb83(%rip)
3282(5): jmp 0xfffffaa4(%rip)
3287(9): nop 0x0(%rax,%rax,1)
3290(7): lea 0x7fe1(%rip),%rsi
3297(5): mov $0x5,%edx
329c(2): xor %edi,%edi
329e(5): mov %rax,0x10(%rsp)
32a3(5): call 0xffffec2d(%rip)
32a8(5): mov 0x10(%rsp),%rcx
32ad(3): mov %rax,%rdx
32b0(5): jmp 0xfffffc41(%rip)
32b5(3): nop (%rax)
32b8(5): mov $0x1000,%edi
32bd(5): mov %r10d,0x1c(%rsp)
32c2(5): call 0x614e(%rip)
32c7(5): mov $0x1000,%ecx
32cc(3): mov %rax,%rdx
32cf(3): mov %r13,%rsi
32d2(3): mov %r15,%rdi
32d5(4): mov %rax,(%rsp)
32d9(5): call 0xc37(%rip)
32de(2): test %al,%al
32e0(5): mov 0x1c(%rsp),%r10d
32e5(6): jz 0x27b(%rip)
32eb(5): mov 0x8(%rsp),%rdi
32f0(5): mov %r10d,0x1c(%rsp)
32f5(5): call 0xffffeabb(%rip)
32fa(3): mov %r13,%rdi
32fd(5): call 0xffffeab3(%rip)
3302(3): mov %r15,%rdi
3305(5): call 0xffffeaab(%rip)
330a(5): cmp $0x0,(%rsp)
330f(5): mov 0x1c(%rsp),%r10d
3314(6): jz 0xfffffeb9(%rip)
331a(4): mov (%rsp),%rbx
331e(5): jmp 0xfffffaf8(%rip)
3323(5): nop 0x0(%rax,%rax,1)
3328(5): lea 0x20(%rsp),%r15
332d(3): mov %r13d,%r8d
3330(3): mov %rbx,%rdx
3333(5): mov $0xffffff9c,%esi
3338(5): mov $0x1,%edi
333d(4): mov %r10d,(%rsp)
3341(3): mov %r15,%rcx
3344(5): call 0xffffec1c(%rip)
3349(2): test %eax,%eax
334b(4): mov %eax,0x10(%rsp)
334f(4): mov (%rsp),%r10d
3353(6): jnz 0xfffffd7d(%rip)
3359(8): movzx 0x20cdb8(%rip),%r15d
3361(3): test %r15b,%r15b
3364(6): jnz 0xfffffa9d(%rip)
336a(4): mov 0x38(%rsp),%eax
336e(5): and $0xf000,%eax
3373(5): cmp $0x4000,%eax
3378(6): jnz 0xfffffa89(%rip)
337e(3): mov %rbx,%rdx
3381(2): xor %edi,%edi
3383(5): mov $0x3,%esi
3388(5): call 0x50f8(%rip)
338d(7): lea 0x7e6c(%rip),%rsi
3394(3): mov %rax,%rbx
3397(2): xor %edi,%edi
3399(5): mov $0x5,%edx
339e(5): call 0xffffeb32(%rip)
33a3(3): mov %rbx,%rcx
33a6(3): mov %rax,%rdx
33a9(2): xor %esi,%esi
33ab(2): xor %edi,%edi
33ad(2): xor %eax,%eax
33af(5): call 0xffffee01(%rip)
33b4(5): jmp 0xfffffa07(%rip)
33b9(7): nop 0x0(%rax)
33c0(3): mov %r14,%rdx
33c3(5): mov $0x3,%esi
33c8(2): xor %edi,%edi
33ca(5): call 0x50b6(%rip)
33cf(7): lea 0x7e52(%rip),%rsi
33d6(3): mov %rax,%rbx
33d9(5): mov $0x5,%edx
33de(2): xor %edi,%edi
33e0(3): xor %r15d,%r15d
33e3(5): call 0xffffeaed(%rip)
33e8(3): mov %rbx,%rcx
33eb(3): mov %rax,%rdx
33ee(2): xor %esi,%esi
33f0(2): xor %edi,%edi
33f2(2): xor %eax,%eax
33f4(5): call 0xffffedbc(%rip)
33f9(5): jmp 0xfffff9c2(%rip)
33fe(2): nop 
3400(7): lea 0x7ec1(%rip),%rsi
3407(5): mov $0x5,%edx
340c(2): xor %edi,%edi
340e(5): mov %rax,0x10(%rsp)
3413(5): call 0xffffeabd(%rip)
3418(5): mov 0x10(%rsp),%rcx
341d(3): mov %rax,%rdx
3420(5): jmp 0xfffffad1(%rip)
3425(3): nop (%rax)
3428(7): lea 0x7ec1(%rip),%rsi
342f(5): mov $0x5,%edx
3434(2): xor %edi,%edi
3436(5): mov %rcx,0x10(%rsp)
343b(5): call 0xffffea95(%rip)
3440(5): mov 0x10(%rsp),%rcx
3445(3): mov %rax,%rdx
3448(5): jmp 0xfffffaa9(%rip)
344d(3): nop (%rax)
3450(8): movzx 0x20ccc4(%rip),%r15d
3458(3): test %r15b,%r15b
345b(6): jnz 0x165(%rip)
3461(6): mov 0x20ccb9(%rip),%edx
3467(2): test %edx,%edx
3469(6): jz 0xfffffc35(%rip)
346f(3): mov %rbp,%rsi
3472(3): mov %r12d,%edi
3475(5): mov %r10d,0x8(%rsp)
347a(5): call 0x1386(%rip)
347f(3): mov %r12d,%edx
3482(3): mov %rax,%rcx
3485(3): mov %rbp,%rsi
3488(3): mov %r12d,%edi
348b(3): mov %rax,%r13
348e(5): call 0xffffed92(%rip)
3493(2): test %eax,%eax
3495(6): mov $0x1,%r9d
349b(5): mov 0x8(%rsp),%r10d
34a0(6): jz 0xfffff9a6(%rip)
34a6(5): call 0xffffe92a(%rip)
34ab(3): mov (%rax),%r15d
34ae(3): mov %r13,%rdi
34b1(5): call 0xffffe8ff(%rip)
34b6(5): mov 0x8(%rsp),%r10d
34bb(4): cmp $0x2,%r15d
34bf(6): jz 0xfffff981(%rip)
34c5(3): mov %r14,%rsi
34c8(5): mov $0x4,%edi
34cd(5): call 0x4eb3(%rip)
34d2(7): lea 0x7b10(%rip),%rsi
34d9(3): mov %rax,%rbx
34dc(5): mov $0x5,%edx
34e1(2): xor %edi,%edi
34e3(5): call 0xffffe9ed(%rip)
34e8(3): mov %r15d,%esi
34eb(3): mov %rax,%rdx
34ee(3): mov %rbx,%rcx
34f1(2): xor %edi,%edi
34f3(2): xor %eax,%eax
34f5(3): xor %r15d,%r15d
34f8(5): call 0xffffecb8(%rip)
34fd(5): jmp 0xfffff8be(%rip)
3502(6): nop 0x0(%rax,%rax,1)
3508(3): mov %rbx,%rdx
350b(5): mov $0x4,%esi
3510(5): mov $0x1,%edi
3515(5): call 0x4d4b(%rip)
351a(3): mov %r14,%rdx
351d(5): mov $0x4,%esi
3522(2): xor %edi,%edi
3524(3): mov %rax,%rbp
3527(5): call 0x4d39(%rip)
352c(7): lea 0x7d15(%rip),%rsi
3533(3): mov %rax,%rbx
3536(5): mov $0x5,%edx
353b(2): xor %edi,%edi
353d(3): xor %r15d,%r15d
3540(5): call 0xffffe990(%rip)
3545(3): mov %rbp,%r8
3548(3): mov %rax,%rdx
354b(3): mov %rbx,%rcx
354e(2): xor %esi,%esi
3550(2): xor %edi,%edi
3552(2): xor %eax,%eax
3554(5): call 0xffffec5c(%rip)
3559(5): jmp 0xfffff862(%rip)
355e(2): nop 
3560(4): mov (%rsp),%rdi
3564(5): call 0xffffe84c(%rip)
3569(5): mov 0x8(%rsp),%rdi
356e(5): call 0xffffe842(%rip)
3573(3): mov %r13,%rdi
3576(5): call 0xffffe83a(%rip)
357b(3): mov %r15,%rdi
357e(5): call 0xffffe832(%rip)
3583(5): mov 0x1c(%rsp),%r10d
3588(5): jmp 0xfffffc45(%rip)
358d(5): lea 0x20(%rsp),%r15
3592(3): mov %rbx,%rsi
3595(5): mov $0x1,%edi
359a(5): mov %r10d,0x8(%rsp)
359f(3): mov %r15,%rdx
35a2(5): call 0xffffeb2e(%rip)
35a7(2): test %eax,%eax
35a9(5): mov 0x8(%rsp),%r10d
35ae(6): jnz 0xfffffadd(%rip)
35b4(5): jmp 0xfffffac4(%rip)
35b9(7): nop 0x0(%rax)
35c0(3): mov %r14,%rsi
35c3(5): mov $0x4,%edi
35c8(5): mov %r10d,0x10(%rsp)
35cd(5): call 0x4db3(%rip)
35d2(7): mov 0x20cb6f(%rip),%rcx
35d9(7): lea 0x79f8(%rip),%rsi
35e0(2): xor %edi,%edi
35e2(5): mov $0x5,%edx
35e7(3): mov %rax,%r13
35ea(5): mov %rcx,0x8(%rsp)
35ef(5): call 0xffffe8e1(%rip)
35f4(5): mov 0x8(%rsp),%rcx
35f9(7): mov 0x20cb00(%rip),%rdi
3600(3): mov %rax,%rdx
3603(3): mov %r13,%r8
3606(5): mov $0x1,%esi
360b(2): xor %eax,%eax
360d(5): call 0xffffec53(%rip)
3612(5): call 0x60be(%rip)
3617(2): test %al,%al
3619(5): mov 0x10(%rsp),%r10d
361e(6): jnz 0xfffffe43(%rip)
3624(5): jmp 0xfffff797(%rip)
3629(8): mov 0xb0(%rsp),%rax
3631(5): cmp %rax,0x20(%rsp)
3636(6): jnz 0xfffffa55(%rip)
363c(6): cmp $0x1,0x30(%rsp)
3642(2): jz 0x27(%rip)
3644(3): mov %rbp,%rcx
3647(3): mov %r12d,%edx
364a(3): mov %rbx,%rsi
364d(5): mov $0xffffff9c,%edi
3652(5): mov %r10d,0x8(%rsp)
3657(5): call 0x53b9(%rip)
365c(2): test %al,%al
365e(5): mov 0x8(%rsp),%r10d
3663(6): jz 0xfffffa28(%rip)
3669(3): mov %r14,%rdx
366c(5): mov $0x4,%esi
3671(5): mov $0x1,%edi
3676(5): call 0x4bea(%rip)
367b(3): mov %rbx,%rdx
367e(5): mov $0x4,%esi
3683(2): xor %edi,%edi
3685(3): mov %rax,%rbp
3688(5): call 0x4bd8(%rip)
368d(5): mov $0x5,%edx
3692(3): mov %rax,%rbx
3695(7): lea 0x7920(%rip),%rsi
369c(5): jmp 0xfffffe9f(%rip)
36a1(5): call 0xffffe87f(%rip)
36a6(8): movzx 0x20ca71(%rip),%r15d
36ae(5): jmp 0xfffffa0d(%rip)

"usage" :
36c0(2): push %r13
36c2(2): push %r12
36c4(5): mov $0x5,%edx
36c9(1): push %rbp
36ca(1): push %rbx
36cb(2): mov %edi,%ebp
36cd(7): sub $0x88,%rsp
36d4(7): mov 0x20ca6d(%rip),%rbx
36db(9): mov $0x28,%rax
36e4(5): mov %rax,0x78(%rsp)
36e9(2): xor %eax,%eax
36eb(2): test %edi,%edi
36ed(2): jz 0x30(%rip)
36ef(7): lea 0x7c22(%rip),%rsi
36f6(2): xor %edi,%edi
36f8(5): call 0xffffe7d8(%rip)
36fd(7): mov 0x20c9fc(%rip),%rdi
3704(3): mov %rax,%rdx
3707(3): mov %rbx,%rcx
370a(5): mov $0x1,%esi
370f(2): xor %eax,%eax
3711(5): call 0xffffeb4f(%rip)
3716(2): mov %ebp,%edi
3718(5): call 0xffffeb28(%rip)
371d(7): lea 0x7c1c(%rip),%rsi
3724(2): xor %edi,%edi
3726(5): call 0xffffe7aa(%rip)
372b(3): mov %rbx,%rcx
372e(3): mov %rbx,%r9
3731(3): mov %rbx,%r8
3734(3): mov %rbx,%rdx
3737(3): mov %rax,%rsi
373a(5): mov $0x1,%edi
373f(2): xor %eax,%eax
3741(5): call 0xffffea2f(%rip)
3746(7): mov 0x20c97b(%rip),%rbx
374d(7): lea 0x7c94(%rip),%rsi
3754(5): mov $0x5,%edx
3759(2): xor %edi,%edi
375b(5): call 0xffffe775(%rip)
3760(3): mov %rbx,%rsi
3763(3): mov %rax,%rdi
3766(5): call 0xffffe8ca(%rip)
376b(7): mov 0x20c956(%rip),%rbx
3772(7): lea 0x7e77(%rip),%rsi
3779(5): mov $0x5,%edx
377e(2): xor %edi,%edi
3780(5): call 0xffffe750(%rip)
3785(3): mov %rbx,%rsi
3788(3): mov %rax,%rdi
378b(5): call 0xffffe8a5(%rip)
3790(7): mov 0x20c931(%rip),%rbx
3797(7): lea 0x7ea2(%rip),%rsi
379e(5): mov $0x5,%edx
37a3(2): xor %edi,%edi
37a5(5): call 0xffffe72b(%rip)
37aa(3): mov %rbx,%rsi
37ad(3): mov %rax,%rdi
37b0(5): call 0xffffe880(%rip)
37b5(7): mov 0x20c90c(%rip),%rbx
37bc(7): lea 0x803d(%rip),%rsi
37c3(5): mov $0x5,%edx
37c8(2): xor %edi,%edi
37ca(5): call 0xffffe706(%rip)
37cf(3): mov %rbx,%rsi
37d2(3): mov %rax,%rdi
37d5(5): call 0xffffe85b(%rip)
37da(7): mov 0x20c8e7(%rip),%rbx
37e1(7): lea 0x8210(%rip),%rsi
37e8(5): mov $0x5,%edx
37ed(2): xor %edi,%edi
37ef(5): call 0xffffe6e1(%rip)
37f4(3): mov %rbx,%rsi
37f7(3): mov %rax,%rdi
37fa(5): call 0xffffe836(%rip)
37ff(7): mov 0x20c8c2(%rip),%rbx
3806(7): lea 0x832b(%rip),%rsi
380d(5): mov $0x5,%edx
3812(2): xor %edi,%edi
3814(5): call 0xffffe6bc(%rip)
3819(3): mov %rbx,%rsi
381c(3): mov %rax,%rdi
381f(5): call 0xffffe811(%rip)
3824(7): mov 0x20c89d(%rip),%rbx
382b(7): lea 0x8336(%rip),%rsi
3832(5): mov $0x5,%edx
3837(2): xor %edi,%edi
3839(5): call 0xffffe697(%rip)
383e(3): mov %rbx,%rsi
3841(3): mov %rax,%rdi
3844(5): call 0xffffe7ec(%rip)
3849(7): mov 0x20c878(%rip),%rbx
3850(7): lea 0x8349(%rip),%rsi
3857(5): mov $0x5,%edx
385c(2): xor %edi,%edi
385e(5): call 0xffffe672(%rip)
3863(3): mov %rbx,%rsi
3866(3): mov %rax,%rdi
3869(5): call 0xffffe7c7(%rip)
386e(7): mov 0x20c853(%rip),%rbx
3875(7): lea 0x8404(%rip),%rsi
387c(5): mov $0x5,%edx
3881(2): xor %edi,%edi
3883(5): call 0xffffe64d(%rip)
3888(3): mov %rbx,%rsi
388b(3): mov %rax,%rdi
388e(7): lea 0x77a6(%rip),%rbx
3895(5): call 0xffffe79b(%rip)
389a(7): lea 0x84bf(%rip),%rsi
38a1(5): mov $0x5,%edx
38a6(2): xor %edi,%edi
38a8(5): call 0xffffe628(%rip)
38ad(7): lea 0x778a(%rip),%rdx
38b4(3): mov %rax,%rsi
38b7(5): mov $0x1,%edi
38bc(2): xor %eax,%eax
38be(5): call 0xffffe8b2(%rip)
38c3(7): lea 0x7777(%rip),%rax
38ca(7): lea 0x77b1(%rip),%rcx
38d1(9): mov $0x0,0x60(%rsp)
38da(9): mov $0x0,0x68(%rsp)
38e3(3): mov %rsp,%rdx
38e6(4): mov %rax,(%rsp)
38ea(7): lea 0x7752(%rip),%rax
38f1(5): mov %rcx,0x30(%rsp)
38f6(7): lea 0x778f(%rip),%rcx
38fd(5): mov %rax,0x8(%rsp)
3902(7): lea 0x77b2(%rip),%rax
3909(5): mov %rcx,0x40(%rsp)
390e(7): lea 0x7781(%rip),%rcx
3915(5): mov %rax,0x10(%rsp)
391a(7): lea 0x7732(%rip),%rax
3921(5): mov %rcx,0x50(%rsp)
3926(5): mov %rax,0x18(%rsp)
392b(7): lea 0x7737(%rip),%rax
3932(5): mov %rax,0x20(%rsp)
3937(7): lea 0x7735(%rip),%rax
393e(5): mov %rax,0x28(%rsp)
3943(5): mov %rax,0x38(%rsp)
3948(5): mov %rax,0x48(%rsp)
394d(5): mov %rax,0x58(%rsp)
3952(6): nop 0x0(%rax,%rax,1)
3958(4): add $0x10,%rdx
395c(3): mov (%rdx),%rdi
395f(3): test %rdi,%rdi
3962(2): jz 0x15(%rip)
3964(5): mov $0x3,%ecx
3969(3): mov %rbx,%rsi
396c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
396e(3): setnbe %al
3971(2): sbb $0x0,%al
3973(2): test %al,%al
3975(2): jnz 0xffffffe3(%rip)
3977(4): mov 0x8(%rdx),%r12
397b(2): xor %edi,%edi
397d(5): mov $0x5,%edx
3982(7): lea 0x7717(%rip),%rsi
3989(3): test %r12,%r12
398c(6): jz 0xc7(%rip)
3992(5): call 0xffffe53e(%rip)
3997(7): lea 0x8452(%rip),%rcx
399e(7): lea 0x7712(%rip),%rdx
39a5(3): mov %rax,%rsi
39a8(5): mov $0x1,%edi
39ad(2): xor %eax,%eax
39af(5): call 0xffffe7c1(%rip)
39b4(2): xor %esi,%esi
39b6(5): mov $0x5,%edi
39bb(5): call 0xffffe7a5(%rip)
39c0(3): test %rax,%rax
39c3(2): jz 0x1e(%rip)
39c5(7): lea 0x76f9(%rip),%rsi
39cc(5): mov $0x3,%edx
39d1(3): mov %rax,%rdi
39d4(5): call 0xffffe40c(%rip)
39d9(2): test %eax,%eax
39db(6): jnz 0x10d(%rip)
39e1(7): lea 0x76e1(%rip),%rsi
39e8(2): xor %edi,%edi
39ea(5): mov $0x5,%edx
39ef(5): call 0xffffe4e1(%rip)
39f4(7): lea 0x7640(%rip),%rcx
39fb(7): lea 0x83ee(%rip),%rdx
3a02(3): mov %rax,%rsi
3a05(5): mov $0x1,%edi
3a0a(2): xor %eax,%eax
3a0c(5): call 0xffffe764(%rip)
3a11(3): cmp %rbx,%r12
3a14(7): lea 0x7642(%rip),%rcx
3a1b(7): lea 0x8cf6(%rip),%rbx
3a22(4): cmove %rcx,%rbx
3a26(7): lea 0x8433(%rip),%rsi
3a2d(2): xor %edi,%edi
3a2f(5): mov $0x5,%edx
3a34(5): call 0xffffe49c(%rip)
3a39(3): mov %rbx,%rcx
3a3c(3): mov %rax,%rsi
3a3f(3): mov %r12,%rdx
3a42(5): mov $0x1,%edi
3a47(2): xor %eax,%eax
3a49(5): call 0xffffe727(%rip)
3a4e(5): jmp 0xfffffcc8(%rip)
3a53(5): call 0xffffe47d(%rip)
3a58(7): lea 0x8391(%rip),%rcx
3a5f(7): lea 0x7651(%rip),%rdx
3a66(3): mov %rax,%rsi
3a69(5): mov $0x1,%edi
3a6e(2): xor %eax,%eax
3a70(5): call 0xffffe700(%rip)
3a75(2): xor %esi,%esi
3a77(5): mov $0x5,%edi
3a7c(5): call 0xffffe6e4(%rip)
3a81(3): test %rax,%rax
3a84(2): jz 0x1a(%rip)
3a86(7): lea 0x7638(%rip),%rsi
3a8d(5): mov $0x3,%edx
3a92(3): mov %rax,%rdi
3a95(5): call 0xffffe34b(%rip)
3a9a(2): test %eax,%eax
3a9c(2): jnz 0x45(%rip)
3a9e(7): lea 0x7624(%rip),%rsi
3aa5(5): mov $0x5,%edx
3aaa(2): xor %edi,%edi
3aac(7): lea 0x7588(%rip),%r12
3ab3(7): lea 0x75a3(%rip),%rbx
3aba(5): call 0xffffe416(%rip)
3abf(7): lea 0x7575(%rip),%rcx
3ac6(7): lea 0x8323(%rip),%rdx
3acd(3): mov %rax,%rsi
3ad0(5): mov $0x1,%edi
3ad5(2): xor %eax,%eax
3ad7(5): call 0xffffe699(%rip)
3adc(5): jmp 0xffffff4a(%rip)
3ae1(7): lea 0x7553(%rip),%r12
3ae8(7): mov 0x20c5d9(%rip),%r13
3aef(7): lea 0x8322(%rip),%rsi
3af6(2): xor %edi,%edi
3af8(5): mov $0x5,%edx
3afd(5): call 0xffffe3d3(%rip)
3b02(3): mov %r13,%rsi
3b05(3): mov %rax,%rdi
3b08(5): call 0xffffe528(%rip)
3b0d(5): jmp 0xfffffed4(%rip)

"try_link" :
3b20(3): mov %rsi,%rax
3b23(3): mov %rdi,%rcx
3b26(3): mov 0x10(%rsi),%edx
3b29(4): mov 0x14(%rax),%r8d
3b2d(4): mov 0x8(%rsi),%rsi
3b31(2): mov (%rax),%edi
3b33(5): jmp 0xffffe61d(%rip)

"samedir_template" :
3b40(2): push %r12
3b42(1): push %rbp
3b43(3): mov %rdi,%rbp
3b46(1): push %rbx
3b47(3): mov %rsi,%r12
3b4a(5): call 0x1656(%rip)
3b4f(3): sub %rbp,%rax
3b52(4): lea 0x9(%rax),%rdi
3b56(3): mov %rax,%rbx
3b59(7): cmp $0x100,%rdi
3b60(2): jbe 0x11(%rip)
3b62(5): call 0xffffe58e(%rip)
3b67(3): mov %rax,%r12
3b6a(2): xor %eax,%eax
3b6c(3): test %r12,%r12
3b6f(2): jz 0x24(%rip)
3b71(3): mov %rbx,%rdx
3b74(3): mov %rbp,%rsi
3b77(3): mov %r12,%rdi
3b7a(5): call 0xffffe616(%rip)
3b7f(a): mov $0x6365935209750754627,%rcx
3b89(4): mov $0x0,0x8(%rax)
3b8d(3): mov %rcx,(%rax)
3b90(3): mov %r12,%rax
3b93(1): pop %rbx
3b94(1): pop %rbp
3b95(2): pop %r12
3b97(1): ret near (%rsp)

"try_symlink" :
3ba0(3): mov %rsi,%rax
3ba3(3): mov %rdi,%rdx
3ba6(3): mov 0x8(%rsi),%esi
3ba9(3): mov (%rax),%rdi
3bac(5): jmp 0xffffe6d4(%rip)

"force_linkat" :
3bc0(2): push %r15
3bc2(2): push %r14
3bc4(3): mov %edi,%r14d
3bc7(2): push %r13
3bc9(2): push %r12
3bcb(3): mov %rsi,%r13
3bce(1): push %rbp
3bcf(1): push %rbx
3bd0(3): mov %rcx,%rbx
3bd3(2): mov %edx,%ebp
3bd5(3): mov %r8d,%r12d
3bd8(7): sub $0x148,%rsp
3bdf(7): mov 0x180(%rsp),%ecx
3be6(9): mov $0x28,%rax
3bef(8): mov %rax,0x138(%rsp)
3bf7(2): xor %eax,%eax
3bf9(2): test %ecx,%ecx
3bfb(6): js 0xb5(%rip)
3c01(4): cmp $0x1,%r9b
3c05(2): jnz 0x7b(%rip)
3c07(3): cmp $0x11,%ecx
3c0a(2): jnz 0x76(%rip)
3c0c(5): lea 0x30(%rsp),%rax
3c11(3): mov %rbx,%rdi
3c14(3): mov %rax,%rsi
3c17(4): mov %rax,(%rsp)
3c1b(5): call 0xffffff25(%rip)
3c20(3): test %rax,%rax
3c23(3): mov %rax,%r15
3c26(6): jz 0xea(%rip)
3c2c(5): lea 0x10(%rsp),%rdx
3c31(7): lea 0xfffffee8(%rip),%rcx
3c38(2): xor %esi,%esi
3c3a(6): mov $0x6,%r8d
3c40(3): mov %rax,%rdi
3c43(5): mov %r14d,0x10(%rsp)
3c48(5): mov %r13,0x18(%rsp)
3c4d(4): mov %ebp,0x20(%rsp)
3c51(5): mov %r12d,0x24(%rsp)
3c56(5): call 0x4f2a(%rip)
3c5b(2): test %eax,%eax
3c5d(2): jz 0x7b(%rip)
3c5f(5): call 0xffffe171(%rip)
3c64(2): mov (%rax),%ecx
3c66(4): cmp (%rsp),%r15
3c6a(2): jz 0x16(%rip)
3c6c(3): mov %r15,%rdi
3c6f(3): mov %ecx,(%rsp)
3c72(5): call 0xffffe13e(%rip)
3c77(3): mov (%rsp),%ecx
3c7a(6): nop 0x0(%rax,%rax,1)
3c80(8): mov 0x138(%rsp),%rbx
3c88(9): xor $0x28,%rbx
3c91(2): mov %ecx,%eax
3c93(6): jnz 0x89(%rip)
3c99(7): add $0x148,%rsp
3ca0(1): pop %rbx
3ca1(1): pop %rbp
3ca2(2): pop %r12
3ca4(2): pop %r13
3ca6(2): pop %r14
3ca8(2): pop %r15
3caa(1): ret near (%rsp)
3cab(5): nop 0x0(%rax,%rax,1)
3cb0(3): mov %rbx,%rcx
3cb3(4): mov %r9d,(%rsp)
3cb7(5): call 0xffffe499(%rip)
3cbc(2): test %eax,%eax
3cbe(2): mov %eax,%ecx
3cc0(2): jz 0xffffffc0(%rip)
3cc2(5): call 0xffffe10e(%rip)
3cc7(4): mov (%rsp),%r9d
3ccb(2): mov (%rax),%ecx
3ccd(5): jmp 0xffffff34(%rip)
3cd2(6): nop 0x0(%rax,%rax,1)
3cd8(3): mov %rbx,%rcx
3cdb(2): mov %ebp,%edx
3cdd(3): mov %r15,%rsi
3ce0(2): mov %ebp,%edi
3ce2(5): call 0xffffe53e(%rip)
3ce7(2): test %eax,%eax
3ce9(5): mov $0xffffffff,%ecx
3cee(2): jz 0x9(%rip)
3cf0(5): call 0xffffe0e0(%rip)
3cf5(2): mov (%rax),%ecx
3cf7(2): xor %edx,%edx
3cf9(3): mov %r15,%rsi
3cfc(2): mov %ebp,%edi
3cfe(4): mov %ecx,0xc(%rsp)
3d02(5): call 0xffffe13e(%rip)
3d07(4): mov 0xc(%rsp),%ecx
3d0b(5): jmp 0xffffff5b(%rip)
3d10(5): call 0xffffe0c0(%rip)
3d15(2): mov (%rax),%ecx
3d17(5): jmp 0xffffff69(%rip)
3d1c(5): call 0xffffe204(%rip)

"force_symlinkat" :
3d30(2): push %r14
3d32(2): push %r13
3d34(2): push %r12
3d36(1): push %rbp
3d37(3): mov %rdi,%r12
3d3a(1): push %rbx
3d3b(2): mov %esi,%ebp
3d3d(3): mov %rdx,%rbx
3d40(7): sub $0x130,%rsp
3d47(9): mov $0x28,%rax
3d50(8): mov %rax,0x128(%rsp)
3d58(2): xor %eax,%eax
3d5a(3): test %r8d,%r8d
3d5d(6): js 0xab(%rip)
3d63(3): cmp $0x1,%cl
3d66(2): jnz 0x72(%rip)
3d68(4): cmp $0x11,%r8d
3d6c(2): jnz 0x6c(%rip)
3d6e(5): lea 0x20(%rsp),%r14
3d73(3): mov %rbx,%rdi
3d76(3): mov %r14,%rsi
3d79(5): call 0xfffffdc7(%rip)
3d7e(3): test %rax,%rax
3d81(3): mov %rax,%r13
3d84(6): jz 0xec(%rip)
3d8a(5): lea 0x10(%rsp),%rdx
3d8f(7): lea 0xfffffe0a(%rip),%rcx
3d96(2): xor %esi,%esi
3d98(6): mov $0x6,%r8d
3d9e(3): mov %rax,%rdi
3da1(5): mov %r12,0x10(%rsp)
3da6(4): mov %ebp,0x18(%rsp)
3daa(5): call 0x4dd6(%rip)
3daf(2): test %eax,%eax
3db1(2): jz 0x7f(%rip)
3db3(5): call 0xffffe01d(%rip)
3db8(3): mov (%rax),%r8d
3dbb(3): cmp %r14,%r13
3dbe(2): jz 0x1a(%rip)
3dc0(3): mov %r13,%rdi
3dc3(5): mov %r8d,0xc(%rsp)
3dc8(5): call 0xffffdfe8(%rip)
3dcd(5): mov 0xc(%rsp),%r8d
3dd2(6): nop 0x0(%rax,%rax,1)
3dd8(8): mov 0x128(%rsp),%rbx
3de0(9): xor $0x28,%rbx
3de9(3): mov %r8d,%eax
3dec(6): jnz 0x91(%rip)
3df2(7): add $0x130,%rsp
3df9(1): pop %rbx
3dfa(1): pop %rbp
3dfb(2): pop %r12
3dfd(2): pop %r13
3dff(2): pop %r14
3e01(1): ret near (%rsp)
3e02(6): nop 0x0(%rax,%rax,1)
3e08(4): mov %ecx,0xc(%rsp)
3e0c(5): call 0xffffe474(%rip)
3e11(2): test %eax,%eax
3e13(3): mov %eax,%r8d
3e16(2): jz 0xffffffc2(%rip)
3e18(5): call 0xffffdfb8(%rip)
3e1d(4): mov 0xc(%rsp),%ecx
3e21(3): mov (%rax),%r8d
3e24(5): jmp 0xffffff3f(%rip)
3e29(7): nop 0x0(%rax)
3e30(3): mov %rbx,%rcx
3e33(2): mov %ebp,%edx
3e35(3): mov %r13,%rsi
3e38(2): mov %ebp,%edi
3e3a(5): call 0xffffe3e6(%rip)
3e3f(2): test %eax,%eax
3e41(6): mov $0xffffffff,%r8d
3e47(6): jz 0xffffff74(%rip)
3e4d(5): call 0xffffdf83(%rip)
3e52(3): mov (%rax),%r8d
3e55(2): xor %edx,%edx
3e57(3): mov %r13,%rsi
3e5a(2): mov %ebp,%edi
3e5c(5): mov %r8d,0xc(%rsp)
3e61(5): call 0xffffdfdf(%rip)
3e66(5): mov 0xc(%rsp),%r8d
3e6b(5): jmp 0xffffff50(%rip)
3e70(5): call 0xffffdf60(%rip)
3e75(3): mov (%rax),%r8d
3e78(5): jmp 0xffffff60(%rip)
3e7d(5): call 0xffffe0a3(%rip)

"buffer_or_output" :
3e90(2): push %r14
3e92(2): push %r13
3e94(3): mov %rdi,%r14
3e97(2): push %r12
3e99(1): push %rbp
3e9a(1): push %rbx
3e9b(3): mov (%rsi),%r13
3e9e(3): test %r13,%r13
3ea1(2): jz 0x4f(%rip)
3ea3(3): mov %rdx,%r12
3ea6(3): mov %rsi,%rbx
3ea9(5): call 0xffffe047(%rip)
3eae(3): mov %rax,%rbp
3eb1(4): cmp %rbp,(%r12)
3eb5(5): mov $0x1,%eax
3eba(2): jnbe 0xe(%rip)
3ebc(1): pop %rbx
3ebd(1): pop %rbp
3ebe(2): pop %r12
3ec0(2): pop %r13
3ec2(2): pop %r14
3ec4(1): ret near (%rsp)
3ec5(3): nop (%rax)
3ec8(4): lea 0x1(%rbp),%rdx
3ecc(3): mov %r14,%rsi
3ecf(3): mov %r13,%rdi
3ed2(5): call 0xffffe1ce(%rip)
3ed7(3): add %rbp,(%rbx)
3eda(4): sub %rbp,(%r12)
3ede(2): xor %eax,%eax
3ee0(1): pop %rbx
3ee1(1): pop %rbp
3ee2(2): pop %r12
3ee4(2): pop %r13
3ee6(2): pop %r14
3ee8(1): ret near (%rsp)
3ee9(7): nop 0x0(%rax)
3ef0(7): mov 0x20c1d1(%rip),%rsi
3ef7(5): call 0xffffe139(%rip)
3efc(1): pop %rbx
3efd(2): xor %eax,%eax
3eff(1): pop %rbp
3f00(2): pop %r12
3f02(2): pop %r13
3f04(2): pop %r14
3f06(1): ret near (%rsp)

"relpath" :
3f10(2): push %r15
3f12(2): push %r14
3f14(2): push %r13
3f16(2): push %r12
3f18(1): push %rbp
3f19(1): push %rbx
3f1a(4): sub $0x18,%rsp
3f1e(5): movzx 0x1(%rdi),%r8d
3f23(4): mov %rcx,(%rsp)
3f27(4): movzx 0x1(%rsi),%ecx
3f2b(5): mov %rdx,0x8(%rsp)
3f30(3): cmp $0x2f,%cl
3f33(4): setz %r9b
3f37(4): cmp $0x2f,%r8b
3f3b(3): setz %dl
3f3e(2): xor %eax,%eax
3f40(3): cmp %dl,%r9b
3f43(2): jz 0x15(%rip)
3f45(4): add $0x18,%rsp
3f49(1): pop %rbx
3f4a(1): pop %rbp
3f4b(2): pop %r12
3f4d(2): pop %r13
3f4f(2): pop %r14
3f51(2): pop %r15
3f53(1): ret near (%rsp)
3f54(4): nop 0x0(%rax)
3f58(3): movzx (%rdi),%edx
3f5b(4): movzx (%rsi),%r10d
3f5f(2): test %dl,%dl
3f61(4): setz %r9b
3f65(3): test %r10b,%r10b
3f68(2): jz 0xffffffdd(%rip)
3f6a(3): cmp %dl,%r10b
3f6d(3): setnz %al
3f70(3): or %r9b,%al
3f73(6): jnz 0x1cd(%rip)
3f79(2): xor %edx,%edx
3f7b(3): xor %r9d,%r9d
3f7e(2): jmp 0x26(%rip)
3f80(4): add $0x1,%rdx
3f84(3): cmp %cl,%r8b
3f87(6): jnz 0x199(%rip)
3f8d(3): test %r10b,%r10b
3f90(6): jnz 0x190(%rip)
3f96(3): mov %ecx,%r10d
3f99(6): movzx 0x1(%rdi,%rdx,1),%r8d
3f9f(5): movzx 0x1(%rsi,%rdx,1),%ecx
3fa4(4): lea 0x1(%rdx),%r11d
3fa8(4): cmp $0x2f,%r10b
3fac(4): cmove %r11d,%r9d
3fb0(3): test %r8b,%r8b
3fb3(4): setz %r10b
3fb7(2): test %cl,%cl
3fb9(2): jnz 0xffffffc7(%rip)
3fbb(4): cmp $0x2f,%r8b
3fbf(6): jz 0x171(%rip)
3fc5(3): test %r10b,%r10b
3fc8(6): jnz 0x168(%rip)
3fce(3): test %r9d,%r9d
3fd1(6): jz 0xffffff74(%rip)
3fd7(3): movsxd %r9d,%r9
3fda(4): lea 0x0(%rsi,%r9,1),%r12
3fde(4): lea 0x0(%rdi,%r9,1),%rbx
3fe2(5): movzx (%r12),%eax
3fe7(2): cmp $0x2f,%al
3fe9(2): jnz 0xc(%rip)
3feb(6): movzx 0x1(%r12),%eax
3ff1(4): add $0x1,%r12
3ff5(2): xor %edx,%edx
3ff7(3): cmp $0x2f,(%rbx)
3ffa(3): setz %dl
3ffd(3): add %rdx,%rbx
4000(2): test %al,%al
4002(2): jnz 0x46(%rip)
4004(3): cmp $0x0,(%rbx)
4007(7): lea 0x7f46(%rip),%rax
400e(5): lea 0x8(%rsp),%rsi
4013(3): mov %rsp,%rdx
4016(4): cmove %rax,%rbx
401a(3): mov %rbx,%rdi
401d(5): call 0xfffffe73(%rip)
4022(2): mov %eax,%ebp
4024(3): test %bpl,%bpl
4027(6): jnz 0xc9(%rip)
402d(4): add $0x18,%rsp
4031(2): mov %ebp,%eax
4033(1): pop %rbx
4034(3): xor $0x1,%eax
4037(1): pop %rbp
4038(2): pop %r12
403a(2): pop %r13
403c(2): pop %r14
403e(2): pop %r15
4040(1): ret near (%rsp)
4041(7): nop 0x0(%rax)
4048(5): lea 0x8(%rsp),%r13
404d(3): mov %rsp,%r14
4050(7): lea 0x7efc(%rip),%rdi
4057(3): mov %r14,%rdx
405a(3): mov %r13,%rsi
405d(5): call 0xfffffe33(%rip)
4062(2): mov %eax,%ebp
4064(5): movzx (%r12),%eax
4069(2): test %al,%al
406b(2): jz 0x45(%rip)
406d(7): lea 0x7ede(%rip),%r15
4074(2): jmp 0x19(%rip)
4076(a): nop 0x0(%rax,%rax,1)
4080(4): add $0x1,%r12
4084(5): movzx (%r12),%eax
4089(2): test %al,%al
408b(2): jz 0x25(%rip)
408d(2): cmp $0x2f,%al
408f(2): jnz 0xfffffff1(%rip)
4091(4): add $0x1,%r12
4095(3): mov %r14,%rdx
4098(3): mov %r13,%rsi
409b(3): mov %r15,%rdi
409e(5): call 0xfffffdf2(%rip)
40a3(2): or %eax,%ebp
40a5(5): movzx (%r12),%eax
40aa(2): test %al,%al
40ac(2): jnz 0xffffffe1(%rip)
40ae(2): nop 
40b0(3): cmp $0x0,(%rbx)
40b3(6): jz 0xffffff71(%rip)
40b9(7): lea 0x805e(%rip),%rdi
40c0(3): mov %r14,%rdx
40c3(3): mov %r13,%rsi
40c6(5): call 0xfffffdca(%rip)
40cb(3): mov %r14,%rdx
40ce(3): mov %eax,%r12d
40d1(3): mov %r13,%rsi
40d4(3): mov %rbx,%rdi
40d7(5): call 0xfffffdb9(%rip)
40dc(3): or %eax,%r12d
40df(3): or %r12d,%ebp
40e2(5): jmp 0xffffff42(%rip)
40e7(9): nop 0x0(%rax,%rax,1)
40f0(7): lea 0x7e5f(%rip),%rsi
40f7(2): xor %edi,%edi
40f9(5): mov $0x5,%edx
40fe(5): call 0xffffddd2(%rip)
4103(7): lea 0x896d(%rip),%rdx
410a(3): mov %rax,%rcx
410d(5): mov $0x24,%esi
4112(2): xor %edi,%edi
4114(2): xor %eax,%eax
4116(5): call 0xffffe09a(%rip)
411b(5): jmp 0xffffff12(%rip)
4120(3): cmp $0x2f,%cl
4123(6): jz 0xfffffea2(%rip)
4129(5): jmp 0xfffffea5(%rip)
412e(2): nop 
4130(3): mov %r11d,%r9d
4133(5): jmp 0xfffffea4(%rip)
4138(8): nop 0x0(%rax,%rax,1)
4140(2): xor %eax,%eax
4142(5): jmp 0xfffffe03(%rip)

"set_simple_backup_suffix" :
4150(3): test %rdi,%rdi
4153(1): push %rbx
4154(3): mov %rdi,%rbx
4157(2): jz 0x29(%rip)
4159(3): cmp $0x0,(%rbx)
415c(2): jnz 0x14(%rip)
415e(7): lea 0x7e0f(%rip),%rbx
4165(7): mov %rbx,0x20bfbc(%rip)
416c(1): pop %rbx
416d(1): ret near (%rsp)
416e(2): nop 
4170(3): mov %rbx,%rdi
4173(5): call 0x102d(%rip)
4178(3): cmp %rbx,%rax
417b(2): jnz 0xffffffe3(%rip)
417d(2): jmp 0xffffffe8(%rip)
417f(1): nop 
4180(7): lea 0x7def(%rip),%rdi
4187(5): call 0xffffdc19(%rip)
418c(3): test %rax,%rax
418f(3): mov %rax,%rbx
4192(2): jz 0xffffffcc(%rip)
4194(2): jmp 0xffffffc5(%rip)

"backupfile_internal" :
41a0(2): push %r15
41a2(2): push %r14
41a4(2): push %r13
41a6(2): push %r12
41a8(1): push %rbp
41a9(1): push %rbx
41aa(3): mov %rsi,%rbx
41ad(7): sub $0x88,%rsp
41b4(4): mov %edi,0x64(%rsp)
41b8(3): mov %rsi,%rdi
41bb(5): mov %rsi,0x10(%rsp)
41c0(4): mov %edx,0x20(%rsp)
41c4(4): mov %cl,0x63(%rsp)
41c8(9): mov $0x28,%rax
41d1(5): mov %rax,0x78(%rsp)
41d6(2): xor %eax,%eax
41d8(5): call 0xfc8(%rip)
41dd(3): mov %rax,%rdi
41e0(3): mov %rax,%r14
41e3(5): call 0xffffdd0d(%rip)
41e8(7): mov 0x20bf39(%rip),%rdi
41ef(3): sub %rbx,%r14
41f2(3): add %r14,%rax
41f5(5): mov %rax,0x18(%rsp)
41fa(3): test %rdi,%rdi
41fd(6): jz 0x587(%rip)
4203(5): call 0xffffdced(%rip)
4208(5): mov 0x18(%rsp),%rsi
420d(4): add $0x1,%rax
4211(4): cmp $0x9,%rax
4215(5): mov %rax,0x50(%rsp)
421a(4): lea 0x1(%rsi),%rdx
421e(3): mov %rax,%rsi
4221(5): mov $0x9,%eax
4226(4): cmovnb %rsi,%rax
422a(3): add %rdx,%rax
422d(5): mov %rdx,0x38(%rsp)
4232(3): mov %rax,%rdi
4235(5): mov %rax,0x40(%rsp)
423a(5): call 0xffffdeb6(%rip)
423f(3): test %rax,%rax
4242(3): mov %rax,%r15
4245(6): jz 0x2eb(%rip)
424b(5): lea 0x74(%rsp),%rax
4250(8): mov $0xffffffff,0x74(%rsp)
4258(9): mov $0x0,0x48(%rsp)
4261(3): xor %r13d,%r13d
4264(5): mov %rax,0x68(%rsp)
4269(5): mov 0x38(%rsp),%rdx
426e(5): mov 0x10(%rsp),%rsi
4273(3): mov %r15,%rdi
4276(5): call 0xffffde2a(%rip)
427b(5): cmp $0x1,0x20(%rsp)
4280(6): jz 0x2e0(%rip)
4286(4): lea 0x0(%r15,%r14,1),%rbp
428a(3): mov %rbp,%rdi
428d(5): call 0xf73(%rip)
4292(3): test %r13,%r13
4295(3): mov %rax,%r12
4298(6): jz 0x3a8(%rip)
429e(3): mov %r13,%rdi
42a1(5): call 0xffffdd4f(%rip)
42a6(5): mov 0x40(%rsp),%rax
42ab(9): mov $0x1,0x28(%rsp)
42b4(8): mov $0x2,0x24(%rsp)
42bc(5): mov %rax,0x30(%rsp)
42c1(5): lea 0x4(%r12),%rax
42c6(5): mov %rax,0x8(%rsp)
42cb(5): nop 0x0(%rax,%rax,1)
42d0(3): mov %r13,%rdi
42d3(5): call 0xffffde0d(%rip)
42d8(3): test %rax,%rax
42db(6): jz 0x1b5(%rip)
42e1(4): lea 0x13(%rax),%rbx
42e5(3): mov %rbx,%rdi
42e8(5): call 0xffffdc08(%rip)
42ed(5): cmp 0x8(%rsp),%rax
42f2(2): jb 0xffffffde(%rip)
42f4(5): lea 0x2(%r12),%rbp
42f9(4): lea 0x0(%r15,%r14,1),%rdi
42fd(3): mov %rbx,%rsi
4300(3): mov %rbp,%rdx
4303(5): call 0xffffdd1d(%rip)
4308(2): test %eax,%eax
430a(2): jnz 0xffffffc6(%rip)
430c(3): add %rbp,%rbx
430f(3): movzx (%rbx),%eax
4312(3): lea 0xffffffcf(%rax),%edx
4315(3): cmp $0x8,%dl
4318(2): jnbe 0xffffffb8(%rip)
431a(2): cmp $0x39,%al
431c(4): movsx 0x1(%rbx),%eax
4320(5): mov $0x1,%ebp
4325(4): setz %r8b
4329(2): mov %eax,%ecx
432b(3): sub $0x30,%eax
432e(3): cmp $0x9,%eax
4331(2): jnbe 0x22(%rip)
4333(5): nop 0x0(%rax,%rax,1)
4338(3): cmp $0x39,%cl
433b(3): setz %al
433e(4): add $0x1,%rbp
4342(3): and %eax,%r8d
4345(4): movsx 0x0(%rbx,%rbp,1),%eax
4349(2): mov %eax,%ecx
434b(3): sub $0x30,%eax
434e(3): cmp $0x9,%eax
4351(2): jbe 0xffffffe7(%rip)
4353(3): cmp $0x7e,%cl
4356(6): jnz 0xffffff7a(%rip)
435c(5): cmp $0x0,0x1(%rbx,%rbp,1)
4361(6): jnz 0xffffff6f(%rip)
4367(5): mov 0x28(%rsp),%rdx
436c(3): cmp %rbp,%rdx
436f(2): jb 0x2d(%rip)
4371(5): mov %r8b,0x58(%rsp)
4376(6): jnz 0xffffff5a(%rip)
437c(5): mov 0x18(%rsp),%rax
4381(3): mov %rbx,%rsi
4384(5): lea 0x2(%r15,%rax,1),%rdi
4389(5): call 0xffffdc97(%rip)
438e(2): test %eax,%eax
4390(6): movzx 0x58(%rsp),%r8d
4396(6): jnle 0xffffff3a(%rip)
439c(4): movzx %r8b,%esi
43a0(4): movzx %r8b,%r9d
43a4(4): mov %esi,0x24(%rsp)
43a8(5): mov 0x18(%rsp),%rsi
43ad(4): lea 0x0(%r9,%rbp,1),%rax
43b1(5): mov %rax,0x28(%rsp)
43b6(5): lea 0x4(%rsi,%rax,1),%rcx
43bb(5): cmp 0x30(%rsp),%rcx
43c0(6): jbe 0x338(%rip)
43c6(5): mov $0x2,%edx
43cb(2): xor %esi,%esi
43cd(3): mov %rdx,%rax
43d0(3): mul %rax,%rcx,%rdx
43d3(6): jo 0x3d0(%rip)
43d9(3): test %rax,%rax
43dc(6): js 0x2b4(%rip)
43e2(3): test %rsi,%rsi
43e5(6): jnz 0x2ab(%rip)
43eb(4): lea 0x0(%rcx,%rcx,1),%rax
43ef(5): mov %rax,0x30(%rsp)
43f4(5): mov 0x30(%rsp),%rsi
43f9(3): mov %r15,%rdi
43fc(5): mov %r9,0x58(%rsp)
4401(5): call 0xffffdd2f(%rip)
4406(3): test %rax,%rax
4409(3): mov %rax,%r8
440c(5): mov 0x58(%rsp),%r9
4411(6): jz 0x28f(%rip)
4417(5): mov 0x18(%rsp),%rax
441c(4): lea 0x2(%rbp),%rdx
4420(5): mov %r8,0x58(%rsp)
4425(3): mov %rbx,%rsi
4428(3): add %r8,%rax
442b(6): mov $0x7e2e,%r8d
4431(5): lea 0x2(%rax,%r9,1),%rcx
4436(4): mov %r8w,(%rax)
443a(4): mov $0x30,0x2(%rax)
443e(3): mov %rcx,%rdi
4441(5): call 0xffffdc5f(%rip)
4446(3): add %rax,%rbp
4449(5): mov 0x58(%rsp),%r8
444e(4): movzx 0xffffffff(%rbp),%edx
4452(4): lea 0xffffffff(%rbp),%rax
4456(3): cmp $0x39,%dl
4459(2): jnz 0x16(%rip)
445b(5): nop 0x0(%rax,%rax,1)
4460(3): mov $0x30,(%rax)
4463(4): sub $0x1,%rax
4467(3): movzx (%rax),%edx
446a(3): cmp $0x39,%dl
446d(2): jz 0xfffffff3(%rip)
446f(3): add $0x1,%edx
4472(3): mov %r13,%rdi
4475(3): mov %r8,%r15
4478(2): mov %dl,(%rax)
447a(5): call 0xffffdc66(%rip)
447f(3): test %rax,%rax
4482(6): jnz 0xfffffe5f(%rip)
4488(8): nop 0x0(%rax,%rax,1)
4490(4): mov 0x24(%rsp),%eax
4494(3): cmp $0x2,%eax
4497(6): jz 0xe9(%rip)
449d(3): cmp $0x3,%eax
44a0(6): jz 0x200(%rip)
44a6(3): cmp $0x1,%eax
44a9(6): jz 0x107(%rip)
44af(5): cmp $0x0,0x63(%rsp)
44b4(6): jz 0x2ba(%rip)
44ba(4): mov 0x74(%rsp),%edx
44be(4): lea 0x0(%r15,%r14,1),%rcx
44c2(2): test %edx,%edx
44c4(2): jns 0x15(%rip)
44c6(8): mov $0xffffff9c,0x74(%rsp)
44ce(3): mov %r15,%rcx
44d1(5): mov $0xffffff9c,%edx
44d6(3): xor %r14d,%r14d
44d9(3): xor %r8d,%r8d
44dc(5): cmp $0x1,0x20(%rsp)
44e1(5): mov 0x10(%rsp),%rsi
44e6(5): mov $0xffffff9c,%edi
44eb(4): setnz %r8b
44ef(5): call 0x4181(%rip)
44f4(2): test %eax,%eax
44f6(6): jz 0x278(%rip)
44fc(5): call 0xffffd8d4(%rip)
4501(2): mov (%rax),%ebp
4503(3): cmp $0x11,%ebp
4506(6): jz 0xfffffd63(%rip)
450c(3): test %r13,%r13
450f(3): mov %rax,%rbx
4512(2): jz 0xa(%rip)
4514(3): mov %r13,%rdi
4517(5): call 0xffffdaf9(%rip)
451c(3): mov %r15,%rdi
451f(3): xor %r15d,%r15d
4522(5): call 0xffffd88e(%rip)
4527(2): mov %ebp,(%rbx)
4529(7): nop 0x0(%rax)
4530(5): mov 0x78(%rsp),%rsi
4535(9): xor $0x28,%rsi
453e(3): mov %r15,%rax
4541(6): jnz 0x26c(%rip)
4547(7): add $0x88,%rsp
454e(1): pop %rbx
454f(1): pop %rbp
4550(2): pop %r12
4552(2): pop %r13
4554(2): pop %r14
4556(2): pop %r15
4558(1): ret near (%rsp)
4559(7): nop 0x0(%rax)
4560(5): mov 0x18(%rsp),%rax
4565(5): mov 0x50(%rsp),%rdx
456a(7): mov 0x20bbb7(%rip),%rsi
4571(4): lea 0x0(%r15,%rax,1),%rdi
4575(5): call 0xffffdb2b(%rip)
457a(5): jmp 0xffffff35(%rip)
457f(1): nop 
4580(5): cmp $0x2,0x20(%rsp)
4585(2): jnz 0x2b(%rip)
4587(5): mov 0x18(%rsp),%rax
458c(5): mov 0x50(%rsp),%rdx
4591(7): mov 0x20bb90(%rip),%rsi
4598(4): lea 0x0(%r15,%rax,1),%rdi
459c(5): call 0xffffdb04(%rip)
45a1(8): mov $0x1,0x20(%rsp)
45a9(7): nop 0x0(%rax)
45b0(3): mov %r15,%rdi
45b3(5): call 0xbed(%rip)
45b8(3): mov %rax,%rdi
45bb(3): mov %rax,%rbx
45be(5): call 0xc42(%rip)
45c3(4): cmp $0xe,%rax
45c7(3): mov %rax,%rbp
45ca(6): jbe 0xfffffee5(%rip)
45d0(6): cmp $0x0,0x48(%rsp)
45d6(6): jnz 0xea(%rip)
45dc(4): mov 0x74(%rsp),%edi
45e0(4): mov %edi,0x8(%rsp)
45e4(5): call 0xffffd7ec(%rip)
45e9(4): mov 0x8(%rsp),%edi
45ed(3): mov %rax,%r12
45f0(2): test %edi,%edi
45f2(6): js 0x140(%rip)
45f8(6): mov $0x0,(%rax)
45fe(5): mov $0x3,%esi
4603(5): call 0xffffda6d(%rip)
4608(4): mov (%r12),%ecx
460c(2): xor %edx,%edx
460e(2): test %ecx,%ecx
4610(3): setz %dl
4613(3): sub %rdx,%rax
4616(3): test %rax,%rax
4619(5): mov %rax,0x48(%rsp)
461e(6): jns 0xa2(%rip)
4624(4): cmp $0xffffffff,%rax
4628(6): jnz 0x16d(%rip)
462e(9): mov $0xffffffff,0x48(%rsp)
4637(5): jmp 0xfffffe78(%rip)
463c(4): nop 0x0(%rax)
4640(5): mov 0x68(%rsp),%rcx
4645(4): mov 0x64(%rsp),%edi
4649(6): mov $0x2e,%r9d
464f(2): xor %edx,%edx
4651(4): movzx 0x0(%rbp),%ebx
4655(3): mov %r15,%rsi
4658(5): mov %r9w,0x0(%rbp)
465d(5): call 0x2263(%rip)
4662(3): test %rax,%rax
4665(3): mov %rax,%r13
4668(5): lea 0x0(%rbp,%r12,1),%rdx
466d(6): jz 0x93(%rip)
4673(4): mov %bx,0x0(%rbp)
4677(6): mov $0x7e317e2e,(%rdx)
467d(4): mov $0x0,0x4(%rdx)
4681(5): jmp 0xfffffc25(%rip)
4686(a): nop 0x0(%rax,%rax,1)
4690(5): mov %rcx,0x30(%rsp)
4695(5): jmp 0xfffffd5f(%rip)
469a(6): nop 0x0(%rax,%rax,1)
46a0(3): mov %r15,%rdi
46a3(3): xor %r15d,%r15d
46a6(5): call 0xffffd70a(%rip)
46ab(5): call 0xffffd725(%rip)
46b0(6): mov $0xc,(%rax)
46b6(5): jmp 0xfffffe7a(%rip)
46bb(5): nop 0x0(%rax,%rax,1)
46c0(5): cmp 0x48(%rsp),%rbp
46c5(6): jbe 0xfffffdea(%rip)
46cb(5): mov 0x18(%rsp),%rax
46d0(5): mov 0x48(%rsp),%rsi
46d5(3): add %r15,%rax
46d8(4): lea 0xffffffff(%rsi),%rdx
46dc(3): sub %rbx,%rax
46df(3): cmp %rsi,%rax
46e2(4): cmovnb %rdx,%rax
46e6(4): mov $0x7e,0x0(%rbx,%rax,1)
46ea(5): mov $0x0,0x1(%rbx,%rax,1)
46ef(5): jmp 0xfffffdc0(%rip)
46f4(4): nop 0x0(%rax)
46f8(3): mov %r15,%r8
46fb(5): jmp 0xfffffd1c(%rip)
4700(5): mov %rdx,0x8(%rsp)
4705(5): call 0xffffd6cb(%rip)
470a(3): cmp $0xc,(%rax)
470d(5): mov 0x8(%rsp),%rdx
4712(4): mov %bx,0x0(%rbp)
4716(6): mov $0x7e317e2e,(%rdx)
471c(4): mov $0x0,0x4(%rdx)
4720(3): setz %al
4723(3): movzx %al,%eax
4726(3): add $0x2,%eax
4729(4): mov %eax,0x24(%rsp)
472d(5): jmp 0xfffffd63(%rip)
4732(3): movzx (%rbx),%edx
4735(5): mov $0x2e,%esi
473a(3): mov %r15,%rdi
473d(3): mov %si,(%rbx)
4740(6): mov $0x0,(%rax)
4746(5): mov $0x3,%esi
474b(4): mov %edx,0x8(%rsp)
474f(5): call 0xffffd751(%rip)
4754(4): mov (%r12),%edi
4758(4): mov 0x8(%rsp),%edx
475c(2): xor %ecx,%ecx
475e(2): test %edi,%edi
4760(3): mov %dx,(%rbx)
4763(3): setz %cl
4766(3): sub %rcx,%rax
4769(5): jmp 0xfffffead(%rip)
476e(3): test %r13,%r13
4771(6): jz 0xfffffdbf(%rip)
4777(3): mov %r13,%rdi
477a(5): call 0xffffd896(%rip)
477f(5): jmp 0xfffffdb1(%rip)
4784(5): call 0xfffff9cc(%rip)
4789(7): mov 0x20b998(%rip),%rdi
4790(5): jmp 0xfffffa73(%rip)
4795(9): mov $0xe,0x48(%rsp)
479e(5): jmp 0xffffff2d(%rip)
47a3(5): mov $0x1,%esi
47a8(5): jmp 0xfffffc31(%rip)
47ad(5): call 0xffffd773(%rip)

"get_version.part.0" :
47c0(4): sub $0x8,%rsp
47c4(7): mov 0x20b8d5(%rip),%r9
47cb(7): lea 0x20b2ae(%rip),%rdx
47d2(7): lea 0x7807(%rip),%rcx
47d9(6): mov $0x4,%r8d
47df(5): call 0x54b1(%rip)
47e4(7): lea 0x77f5(%rip),%rdx
47eb(3): mov 0x0(%rdx,%rax,4),%eax
47ee(4): add $0x8,%rsp
47f2(1): ret near (%rsp)

"find_backup_file_name" :
4800(4): sub $0x8,%rsp
4804(2): xor %ecx,%ecx
4806(5): call 0xfffff99a(%rip)
480b(3): test %rax,%rax
480e(2): jz 0x7(%rip)
4810(4): add $0x8,%rsp
4814(1): ret near (%rsp)
4815(5): call 0x4e4b(%rip)

"get_version" :
4820(3): test %rsi,%rsi
4823(2): jz 0xd(%rip)
4825(3): cmp $0x0,(%rsi)
4828(2): jz 0x8(%rip)
482a(2): jmp 0xffffff96(%rip)
482c(4): nop 0x0(%rax)
4830(5): mov $0x2,%eax
4835(1): ret near (%rsp)

"xget_version" :
4840(3): test %rsi,%rsi
4843(2): jz 0x7(%rip)
4845(3): cmp $0x0,(%rsi)
4848(2): jnz 0x2a(%rip)
484a(7): lea 0x773b(%rip),%rdi
4851(4): sub $0x8,%rsp
4855(5): call 0xffffd54b(%rip)
485a(3): test %rax,%rax
485d(2): jz 0x23(%rip)
485f(3): cmp $0x0,(%rax)
4862(2): jz 0x1e(%rip)
4864(7): lea 0x7720(%rip),%rdi
486b(3): mov %rax,%rsi
486e(4): add $0x8,%rsp
4872(5): jmp 0xffffff4e(%rip)
4877(9): nop 0x0(%rax,%rax,1)
4880(5): mov $0x2,%eax
4885(4): add $0x8,%rsp
4889(1): ret near (%rsp)

"canonicalize_filename_mode" :
4890(2): push %r15
4892(2): push %r14
4894(2): push %r13
4896(2): push %r12
4898(1): push %rbp
4899(1): push %rbx
489a(7): sub $0xe8,%rsp
48a1(9): mov $0x28,%rax
48aa(8): mov %rax,0xd8(%rsp)
48b2(2): xor %eax,%eax
48b4(2): mov %esi,%eax
48b6(3): and $0x4,%eax
48b9(5): setnz 0x1b(%rsp)
48be(3): and $0x3,%esi
48c1(4): mov %eax,0x1c(%rsp)
48c5(3): lea 0xffffffff(%rsi),%eax
48c8(4): mov %esi,0x4(%rsp)
48cc(2): test %eax,%esi
48ce(6): jnz 0x552(%rip)
48d4(3): test %rdi,%rdi
48d7(3): mov %rdi,%r14
48da(6): jz 0x546(%rip)
48e0(3): movzx (%rdi),%eax
48e3(2): test %al,%al
48e5(6): jz 0x57b(%rip)
48eb(2): cmp $0x2f,%al
48ed(6): jz 0x4c3(%rip)
48f3(5): call 0x4dad(%rip)
48f8(3): test %rax,%rax
48fb(3): mov %rax,%rbp
48fe(6): jz 0x1b2(%rip)
4904(3): mov %rax,%rdi
4907(5): call 0xffffd5e9(%rip)
490c(6): cmp $0xfff,%rax
4912(3): mov %rax,%r15
4915(6): jbe 0x4bb(%rip)
491b(3): add %rbp,%r15
491e(3): mov %r15,%rbx
4921(5): lea 0x40(%rsp),%rax
4926(5): mov %r14,0x20(%rsp)
492b(9): mov $0x0,0x10(%rsp)
4934(9): mov $0x0,0x30(%rsp)
493d(9): mov $0x0,0x28(%rsp)
4946(5): mov %rax,0x8(%rsp)
494b(4): movzx (%r14),%eax
494f(2): test %al,%al
4951(6): jz 0x10e(%rip)
4957(9): nop 0x0(%rax,%rax,1)
4960(2): cmp $0x2f,%al
4962(2): jnz 0x1a(%rip)
4964(4): nop 0x0(%rax)
4968(4): add $0x1,%r14
496c(4): movzx (%r14),%eax
4970(2): cmp $0x2f,%al
4972(2): jz 0xfffffff6(%rip)
4974(2): test %al,%al
4976(6): jz 0x2ca(%rip)
497c(3): mov %r14,%r13
497f(2): jmp 0xe(%rip)
4981(7): nop 0x0(%rax)
4988(3): cmp $0x2f,%dl
498b(2): jz 0xf(%rip)
498d(4): add $0x1,%r13
4991(5): movzx 0x0(%r13),%edx
4996(2): test %dl,%dl
4998(2): jnz 0xfffffff0(%rip)
499a(3): cmp %r14,%r13
499d(6): jz 0xc2(%rip)
49a3(3): mov %r13,%r12
49a6(3): sub %r14,%r12
49a9(4): cmp $0x1,%r12
49ad(6): jz 0x1d3(%rip)
49b3(4): cmp $0x2,%r12
49b7(2): jnz 0xa(%rip)
49b9(2): cmp $0x2e,%al
49bb(6): jz 0x295(%rip)
49c1(5): cmp $0x2f,0xffffffff(%r15)
49c6(2): jz 0xa(%rip)
49c8(4): mov $0x2f,(%r15)
49cc(4): add $0x1,%r15
49d0(4): lea 0x0(%r15,%r12,1),%rax
49d4(3): cmp %rax,%rbx
49d7(2): jnbe 0x33(%rip)
49d9(3): sub %rbp,%rbx
49dc(3): sub %rbp,%r15
49df(3): mov %rbp,%rdi
49e2(5): lea 0x1(%r12,%rbx,1),%rax
49e7(7): add $0x1000,%rbx
49ee(7): cmp $0x1000,%r12
49f5(4): cmovnl %rax,%rbx
49f9(3): mov %rbx,%rsi
49fc(5): call 0x4a74(%rip)
4a01(3): mov %rax,%rbp
4a04(3): add %rax,%rbx
4a07(3): add %rax,%r15
4a0a(3): mov %r15,%rdi
4a0d(3): mov %r12,%rdx
4a10(3): mov %r14,%rsi
4a13(5): call 0xffffd68d(%rip)
4a18(5): cmp $0x2,0x4(%rsp)
4a1d(4): lea 0x0(%r15,%r12,1),%r15
4a21(4): mov $0x0,(%r15)
4a25(6): jnz 0xbb(%rip)
4a2b(5): cmp $0x0,0x1b(%rsp)
4a30(6): jz 0xb0(%rip)
4a36(8): mov $0x0,0x58(%rsp)
4a3e(5): cmp $0x0,0x0(%r13)
4a43(2): jz 0xd(%rip)
4a45(5): cmp $0x2,0x4(%rsp)
4a4a(6): jnz 0x45d(%rip)
4a50(3): mov %r13,%r14
4a53(4): movzx (%r14),%eax
4a57(2): test %al,%al
4a59(6): jnz 0xffffff07(%rip)
4a5f(4): lea 0x1(%rbp),%rax
4a63(3): cmp %rax,%r15
4a66(2): jbe 0xd(%rip)
4a68(5): cmp $0x2f,0xffffffff(%r15)
4a6d(2): jnz 0x6(%rip)
4a6f(4): sub $0x1,%r15
4a73(4): lea 0x1(%r15),%rax
4a77(4): mov $0x0,(%r15)
4a7b(3): cmp %rax,%rbx
4a7e(2): jz 0x14(%rip)
4a80(3): sub %rbp,%r15
4a83(3): mov %rbp,%rdi
4a86(4): lea 0x1(%r15),%rsi
4a8a(5): call 0x49e6(%rip)
4a8f(3): mov %rax,%rbp
4a92(5): mov 0x28(%rsp),%rdi
4a97(5): call 0xffffd319(%rip)
4a9c(5): mov 0x10(%rsp),%rax
4aa1(3): test %rax,%rax
4aa4(2): jz 0xc(%rip)
4aa6(3): mov %rax,%rdi
4aa9(5): call 0x14b7(%rip)
4aae(2): nop 
4ab0(8): mov 0xd8(%rsp),%rcx
4ab8(9): xor $0x28,%rcx
4ac1(3): mov %rbp,%rax
4ac4(6): jnz 0x3fd(%rip)
4aca(7): add $0xe8,%rsp
4ad1(1): pop %rbx
4ad2(1): pop %rbp
4ad3(2): pop %r12
4ad5(2): pop %r13
4ad7(2): pop %r14
4ad9(2): pop %r15
4adb(1): ret near (%rsp)
4adc(4): nop 0x0(%rax)
4ae0(4): mov 0x1c(%rsp),%eax
4ae4(5): mov 0x8(%rsp),%rdx
4ae9(3): mov %rbp,%rsi
4aec(5): mov $0x1,%edi
4af1(2): test %eax,%eax
4af3(6): jz 0xbd(%rip)
4af9(5): call 0xffffd5d7(%rip)
4afe(2): test %eax,%eax
4b00(3): setnz %al
4b03(2): test %al,%al
4b05(6): jz 0x8b(%rip)
4b0b(5): call 0xffffd2c5(%rip)
4b10(3): mov %rax,%r14
4b13(2): mov (%rax),%edx
4b15(4): mov 0x4(%rsp),%eax
4b19(2): test %eax,%eax
4b1b(2): jz 0x33(%rip)
4b1d(3): cmp $0x1,%eax
4b20(6): jnz 0xffffff16(%rip)
4b26(7): lea 0x75f1(%rip),%rsi
4b2d(3): mov %r13,%rdi
4b30(4): mov %edx,0x38(%rsp)
4b34(5): call 0xffffd4cc(%rip)
4b39(6): cmp $0x0,0x0(%r13,%rax,1)
4b3f(4): mov 0x38(%rsp),%edx
4b43(2): jnz 0xb(%rip)
4b45(3): cmp $0x2,%edx
4b48(6): jz 0xffffff08(%rip)
4b4e(3): mov %r14,%r12
4b51(5): mov 0x28(%rsp),%rdi
4b56(4): mov %edx,0x4(%rsp)
4b5a(5): call 0xffffd256(%rip)
4b5f(3): mov %rbp,%rdi
4b62(5): call 0xffffd24e(%rip)
4b67(6): cmp $0x0,0x10(%rsp)
4b6d(4): mov 0x4(%rsp),%edx
4b71(6): jz 0xbb(%rip)
4b77(5): jmp 0xa3(%rip)
4b7c(4): nop 0x0(%rax)
4b80(2): cmp $0x2e,%al
4b82(6): jnz 0xfffffe3f(%rip)
4b88(5): jmp 0xfffffec8(%rip)
4b8d(3): nop (%rax)
4b90(4): mov 0x58(%rsp),%eax
4b94(5): and $0xf000,%eax
4b99(5): cmp $0xa000,%eax
4b9e(2): jz 0x22(%rip)
4ba0(5): cmp $0x4000,%eax
4ba5(6): jz 0xfffffeab(%rip)
4bab(5): jmp 0xfffffe93(%rip)
4bb0(5): call 0xffffd350(%rip)
4bb5(2): test %eax,%eax
4bb7(3): setnz %al
4bba(5): jmp 0xffffff49(%rip)
4bbf(1): nop 
4bc0(6): cmp $0x0,0x10(%rsp)
4bc6(6): jz 0x1b0(%rip)
4bcc(5): mov 0x8(%rsp),%rdx
4bd1(5): mov 0x20(%rsp),%rsi
4bd6(5): mov 0x10(%rsp),%rdi
4bdb(5): call 0x745(%rip)
4be0(2): test %al,%al
4be2(6): jz 0xbe(%rip)
4be8(5): cmp $0x2,0x4(%rsp)
4bed(6): jz 0xfffffe63(%rip)
4bf3(5): call 0xffffd1dd(%rip)
4bf8(5): mov $0x28,%edx
4bfd(3): mov %rax,%r12
4c00(5): mov 0x28(%rsp),%rdi
4c05(4): mov %edx,0x4(%rsp)
4c09(5): call 0xffffd1a7(%rip)
4c0e(3): mov %rbp,%rdi
4c11(5): call 0xffffd19f(%rip)
4c16(4): mov 0x4(%rsp),%edx
4c1a(5): mov 0x10(%rsp),%rdi
4c1f(4): mov %edx,0x4(%rsp)
4c23(5): call 0x133d(%rip)
4c28(4): mov 0x4(%rsp),%edx
4c2c(4): mov %edx,(%r12)
4c30(2): xor %ebp,%ebp
4c32(5): jmp 0xfffffe7e(%rip)
4c37(9): nop 0x0(%rax,%rax,1)
4c40(3): mov %r14,%r13
4c43(5): jmp 0xfffffd57(%rip)
4c48(8): nop 0x0(%rax,%rax,1)
4c50(5): cmp $0x2e,0x1(%r14)
4c55(6): jnz 0xfffffd6c(%rip)
4c5b(4): lea 0x1(%rbp),%rax
4c5f(3): mov %r13,%r14
4c62(3): cmp %rax,%r15
4c65(6): jbe 0xfffffce6(%rip)
4c6b(4): lea 0xffffffff(%r15),%rax
4c6f(3): cmp %rax,%rbp
4c72(6): jnb 0x247(%rip)
4c78(5): cmp $0x2f,0xfffffffe(%r15)
4c7d(3): mov %rax,%r15
4c80(6): jz 0xfffffccb(%rip)
4c86(4): sub $0x1,%r15
4c8a(3): cmp %r15,%rbp
4c8d(6): jz 0xfffffdc3(%rip)
4c93(5): cmp $0x2f,0xffffffff(%r15)
4c98(6): jz 0xfffffdb8(%rip)
4c9e(2): jmp 0xffffffe8(%rip)
4ca0(5): mov 0x8(%rsp),%rdx
4ca5(5): mov 0x20(%rsp),%rsi
4caa(5): mov 0x10(%rsp),%rdi
4caf(5): call 0x5e1(%rip)
4cb4(5): mov 0x70(%rsp),%rsi
4cb9(3): mov %rbp,%rdi
4cbc(5): call 0x4c14(%rip)
4cc1(3): test %rax,%rax
4cc4(3): mov %rax,%r14
4cc7(6): jz 0x16b(%rip)
4ccd(3): mov %rax,%rdi
4cd0(5): call 0xffffd220(%rip)
4cd5(3): mov %r13,%rdi
4cd8(3): mov %rax,%r12
4cdb(5): mov %rax,0x20(%rsp)
4ce0(5): call 0xffffd210(%rip)
4ce5(6): cmp $0x0,0x30(%rsp)
4ceb(3): mov %rax,%rdx
4cee(5): lea 0x1(%r12,%rdx,1),%rcx
4cf3(6): jz 0xfc(%rip)
4cf9(5): cmp %rcx,0x30(%rsp)
4cfe(2): jnb 0x23(%rip)
4d00(5): mov 0x28(%rsp),%rdi
4d05(3): mov %rcx,%rsi
4d08(5): mov %rdx,0x38(%rsp)
4d0d(5): mov %rcx,0x30(%rsp)
4d12(5): call 0x475e(%rip)
4d17(5): mov 0x38(%rsp),%rdx
4d1c(5): mov %rax,0x28(%rsp)
4d21(5): mov 0x28(%rsp),%r12
4d26(5): mov 0x20(%rsp),%rdi
4d2b(4): add $0x1,%rdx
4d2f(3): mov %r13,%rsi
4d32(3): add %r12,%rdi
4d35(3): mov %r12,%r13
4d38(5): call 0xffffd468(%rip)
4d3d(5): mov 0x20(%rsp),%rdx
4d42(3): mov %r14,%rsi
4d45(3): mov %r12,%rdi
4d48(5): call 0xffffd358(%rip)
4d4d(4): cmp $0x2f,(%r14)
4d51(5): mov %r12,0x20(%rsp)
4d56(4): lea 0x1(%rbp),%rax
4d5a(6): jz 0xfa(%rip)
4d60(3): cmp %rax,%r15
4d63(6): jnbe 0x10f(%rip)
4d69(3): mov %r14,%rdi
4d6c(5): call 0xffffd044(%rip)
4d71(5): jmp 0xfffffcdf(%rip)
4d76(7): lea 0x1ab3(%rip),%r8
4d7d(7): lea 0x1a6c(%rip),%rcx
4d84(2): xor %esi,%esi
4d86(7): lea 0x19f3(%rip),%rdx
4d8d(5): mov $0x7,%edi
4d92(5): call 0xf7e(%rip)
4d97(3): test %rax,%rax
4d9a(5): mov %rax,0x10(%rsp)
4d9f(6): jnz 0xfffffe2d(%rip)
4da5(5): call 0x48bb(%rip)
4daa(6): nop 0x0(%rax,%rax,1)
4db0(5): mov $0x1000,%edi
4db5(5): call 0x465b(%rip)
4dba(3): mov %rax,%rbp
4dbd(7): lea 0x1000(%rax),%rbx
4dc4(4): lea 0x1(%rax),%r15
4dc8(3): mov $0x2f,(%rax)
4dcb(5): jmp 0xfffffb56(%rip)
4dd0(3): mov %rbp,%rdi
4dd3(5): mov $0x1000,%esi
4dd8(5): call 0x4698(%rip)
4ddd(3): mov %rax,%rbp
4de0(3): add %rax,%r15
4de3(7): lea 0x1000(%rax),%rbx
4dea(5): jmp 0xfffffb37(%rip)
4def(7): cmp $0x1000,%rcx
4df6(5): mov $0x1000,%eax
4dfb(5): mov %rdx,0x38(%rsp)
4e00(4): cmovnb %rcx,%rax
4e04(3): mov %rax,%rdi
4e07(5): mov %rax,0x30(%rsp)
4e0c(5): call 0x4604(%rip)
4e11(5): mov 0x38(%rsp),%rdx
4e16(5): mov %rax,0x28(%rsp)
4e1b(5): jmp 0xffffff06(%rip)
4e20(5): call 0xffffcfb0(%rip)
4e25(2): xor %ebp,%ebp
4e27(6): mov $0x16,(%rax)
4e2d(5): jmp 0xfffffc83(%rip)
4e32(5): call 0xffffcf9e(%rip)
4e37(5): cmp $0x2,0x4(%rsp)
4e3c(3): mov %rax,%r14
4e3f(2): mov (%rax),%edx
4e41(2): jnz 0xb(%rip)
4e43(3): cmp $0xc,%edx
4e46(6): jnz 0xfffffc0a(%rip)
4e4c(3): mov %r14,%r12
4e4f(5): jmp 0xfffffdb1(%rip)
4e54(4): mov $0x2f,0x0(%rbp)
4e58(3): mov %rax,%r15
4e5b(5): jmp 0xffffff0e(%rip)
4e60(5): call 0xffffcf70(%rip)
4e65(2): xor %ebp,%ebp
4e67(6): mov $0x2,(%rax)
4e6d(5): jmp 0xfffffc43(%rip)
4e72(4): lea 0xffffffff(%r15),%rax
4e76(3): cmp %rax,%rbp
4e79(2): jnb 0x9(%rip)
4e7b(5): cmp $0x2f,0xfffffffe(%r15)
4e80(2): jnz 0xd(%rip)
4e82(3): mov %rax,%r15
4e85(5): jmp 0xfffffee4(%rip)
4e8a(3): mov %r15,%rax
4e8d(4): lea 0xffffffff(%rax),%r15
4e91(3): cmp %r15,%rbp
4e94(6): jz 0xfffffed5(%rip)
4e9a(5): cmp $0x2f,0xffffffff(%r15)
4e9f(6): jz 0xfffffeca(%rip)
4ea5(2): jmp 0xffffffe5(%rip)
4ea7(5): call 0xffffcf29(%rip)
4eac(5): mov $0x14,%edx
4eb1(3): mov %rax,%r12
4eb4(5): jmp 0xfffffc9d(%rip)
4eb9(3): mov %rax,%r15
4ebc(5): jmp 0xfffffa8f(%rip)
4ec1(5): call 0xffffd05f(%rip)

"close_stdin_set_file_name" :
4ed0(7): mov %rdi,0x20b259(%rip)
4ed7(1): ret near (%rsp)

"close_stdin" :
4ee0(2): push %r12
4ee2(1): push %rbp
4ee3(1): push %rbx
4ee4(7): mov 0x20b1e5(%rip),%rbx
4eeb(3): mov %rbx,%rdi
4eee(5): call 0x48c2(%rip)
4ef3(3): test %rax,%rax
4ef6(6): jnz 0xa2(%rip)
4efc(3): mov %rbx,%rdi
4eff(5): call 0x4e51(%rip)
4f04(2): test %eax,%eax
4f06(2): jnz 0x32(%rip)
4f08(1): pop %rbx
4f09(1): pop %rbp
4f0a(2): pop %r12
4f0c(5): jmp 0x104(%rip)
4f11(7): nop 0x0(%rax)
4f18(5): call 0x4858(%rip)
4f1d(2): test %eax,%eax
4f1f(7): mov 0x20b1aa(%rip),%rdi
4f26(6): jz 0x90(%rip)
4f2c(5): call 0x4e24(%rip)
4f31(7): nop 0x0(%rax)
4f38(7): lea 0x70c1(%rip),%rsi
4f3f(2): xor %edi,%edi
4f41(5): mov $0x5,%edx
4f46(5): call 0xffffcf8a(%rip)
4f4b(7): mov 0x20b1de(%rip),%rbx
4f52(3): mov %rax,%r12
4f55(5): call 0xffffce7b(%rip)
4f5a(3): mov %rax,%rbp
4f5d(3): test %rbx,%rbx
4f60(2): jz 0x70(%rip)
4f62(3): mov %rbx,%rdi
4f65(5): call 0x34eb(%rip)
4f6a(3): mov 0x0(%rbp),%esi
4f6d(7): lea 0x709f(%rip),%rdx
4f74(3): mov %rax,%rcx
4f77(3): mov %r12,%r8
4f7a(2): xor %edi,%edi
4f7c(2): xor %eax,%eax
4f7e(5): call 0xffffd232(%rip)
4f83(5): call 0x8d(%rip)
4f88(6): mov 0x20b092(%rip),%edi
4f8e(5): call 0xffffce62(%rip)
4f93(5): nop 0x0(%rax,%rax,1)
4f98(2): xor %esi,%esi
4f9a(3): mov %rbx,%rdi
4f9d(5): mov $0x1,%edx
4fa2(5): call 0x483e(%rip)
4fa7(2): test %eax,%eax
4fa9(7): mov 0x20b120(%rip),%rdi
4fb0(6): jz 0xffffff68(%rip)
4fb6(5): call 0x4d9a(%rip)
4fbb(2): test %eax,%eax
4fbd(6): jnz 0xffffff7b(%rip)
4fc3(1): pop %rbx
4fc4(1): pop %rbp
4fc5(2): pop %r12
4fc7(5): jmp 0x49(%rip)
4fcc(4): nop 0x0(%rax)
4fd0(2): mov (%rax),%esi
4fd2(7): lea 0x7a9e(%rip),%rdx
4fd9(3): mov %r12,%rcx
4fdc(2): xor %edi,%edi
4fde(2): xor %eax,%eax
4fe0(5): call 0xffffd1d0(%rip)
4fe5(2): jmp 0xffffff9e(%rip)

"close_stdout_set_file_name" :
4ff0(7): mov %rdi,0x20b149(%rip)
4ff7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
5000(7): mov %dil,0x20b131(%rip)
5007(1): ret near (%rsp)

"close_stdout" :
5010(1): push %rbp
5011(1): push %rbx
5012(4): sub $0x8,%rsp
5016(7): mov 0x20b0ab(%rip),%rdi
501d(5): call 0x4d33(%rip)
5022(2): test %eax,%eax
5024(2): jz 0x18(%rip)
5026(5): call 0xffffcdaa(%rip)
502b(7): cmp $0x0,0x20b106(%rip)
5032(3): mov %rax,%rbx
5035(2): jz 0x1e(%rip)
5037(3): cmp $0x20,(%rax)
503a(2): jnz 0x19(%rip)
503c(7): mov 0x20b0bd(%rip),%rdi
5043(5): call 0x4d0d(%rip)
5048(2): test %eax,%eax
504a(2): jnz 0x48(%rip)
504c(4): add $0x8,%rsp
5050(1): pop %rbx
5051(1): pop %rbp
5052(1): ret near (%rsp)
5053(7): lea 0x6fc0(%rip),%rsi
505a(2): xor %edi,%edi
505c(5): mov $0x5,%edx
5061(5): call 0xffffce6f(%rip)
5066(7): mov 0x20b0d3(%rip),%rdi
506d(3): mov %rax,%rbp
5070(3): test %rdi,%rdi
5073(2): jz 0x2a(%rip)
5075(5): call 0x33db(%rip)
507a(2): mov (%rbx),%esi
507c(7): lea 0x6f90(%rip),%rdx
5083(3): mov %rax,%rcx
5086(3): mov %rbp,%r8
5089(2): xor %edi,%edi
508b(2): xor %eax,%eax
508d(5): call 0xffffd123(%rip)
5092(6): mov 0x20af88(%rip),%edi
5098(5): call 0xffffcd58(%rip)
509d(2): mov (%rbx),%esi
509f(7): lea 0x79d1(%rip),%rdx
50a6(3): mov %rax,%rcx
50a9(2): xor %edi,%edi
50ab(2): xor %eax,%eax
50ad(5): call 0xffffd103(%rip)
50b2(2): jmp 0xffffffe0(%rip)

"dir_name" :
50c0(4): sub $0x8,%rsp
50c4(5): call 0x7c(%rip)
50c9(3): test %rax,%rax
50cc(2): jz 0x7(%rip)
50ce(4): add $0x8,%rsp
50d2(1): ret near (%rsp)
50d3(5): call 0x458d(%rip)

"dir_len" :
50e0(1): push %rbp
50e1(1): push %rbx
50e2(2): xor %ebp,%ebp
50e4(3): mov %rdi,%rbx
50e7(4): sub $0x8,%rsp
50eb(3): cmp $0x2f,(%rdi)
50ee(4): setz %bpl
50f2(5): call 0xae(%rip)
50f7(3): mov %rax,%rcx
50fa(3): sub %rbx,%rcx
50fd(3): cmp %rbp,%rcx
5100(2): jbe 0x30(%rip)
5102(4): cmp $0x2f,0xffffffff(%rax)
5106(4): lea 0xffffffff(%rcx),%rdx
510a(2): jz 0x14(%rip)
510c(2): jmp 0x24(%rip)
510e(2): nop 
5110(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
5115(4): lea 0xffffffff(%rdx),%rax
5119(2): jnz 0xa(%rip)
511b(3): mov %rax,%rdx
511e(3): cmp %rdx,%rbp
5121(2): jnz 0xffffffef(%rip)
5123(4): add $0x8,%rsp
5127(3): mov %rdx,%rax
512a(1): pop %rbx
512b(1): pop %rbp
512c(1): ret near (%rsp)
512d(3): nop (%rax)
5130(4): add $0x8,%rsp
5134(3): mov %rcx,%rdx
5137(3): mov %rdx,%rax
513a(1): pop %rbx
513b(1): pop %rbp
513c(1): ret near (%rsp)

"mdir_name" :
5140(1): push %rbp
5141(1): push %rbx
5142(3): mov %rdi,%rbp
5145(4): sub $0x8,%rsp
5149(5): call 0xffffff97(%rip)
514e(3): test %rax,%rax
5151(3): mov %rax,%rbx
5154(3): setz %al
5157(3): movzx %al,%eax
515a(5): lea 0x1(%rbx,%rax,1),%rdi
515f(5): call 0xffffcf91(%rip)
5164(3): test %rax,%rax
5167(3): mov %rax,%rcx
516a(2): jz 0x1c(%rip)
516c(3): mov %rbx,%rdx
516f(3): mov %rbp,%rsi
5172(3): mov %rax,%rdi
5175(5): call 0xffffcf2b(%rip)
517a(3): test %rbx,%rbx
517d(3): mov %rax,%rcx
5180(2): jz 0x10(%rip)
5182(4): mov $0x0,0x0(%rcx,%rbx,1)
5186(4): add $0x8,%rsp
518a(3): mov %rcx,%rax
518d(1): pop %rbx
518e(1): pop %rbp
518f(1): ret near (%rsp)
5190(3): mov $0x2e,(%rax)
5193(5): mov $0x1,%ebx
5198(2): jmp 0xffffffea(%rip)

"last_component" :
51a0(3): movzx (%rdi),%edx
51a3(3): mov %rdi,%rax
51a6(3): cmp $0x2f,%dl
51a9(2): jnz 0x13(%rip)
51ab(5): nop 0x0(%rax,%rax,1)
51b0(4): add $0x1,%rax
51b4(3): movzx (%rax),%edx
51b7(3): cmp $0x2f,%dl
51ba(2): jz 0xfffffff6(%rip)
51bc(2): test %dl,%dl
51be(2): jz 0x3c(%rip)
51c0(3): mov %rax,%rcx
51c3(2): xor %esi,%esi
51c5(2): jmp 0x20(%rip)
51c7(9): nop 0x0(%rax,%rax,1)
51d0(3): test %sil,%sil
51d3(2): jz 0x7(%rip)
51d5(3): mov %rcx,%rax
51d8(2): xor %esi,%esi
51da(4): add $0x1,%rcx
51de(3): movzx (%rcx),%edx
51e1(2): test %dl,%dl
51e3(2): jz 0x17(%rip)
51e5(3): cmp $0x2f,%dl
51e8(2): jnz 0xffffffe8(%rip)
51ea(4): add $0x1,%rcx
51ee(3): movzx (%rcx),%edx
51f1(5): mov $0x1,%esi
51f6(2): test %dl,%dl
51f8(2): jnz 0xffffffed(%rip)
51fa(2): REP ret near (%rsp)

"base_len" :
5200(1): push %rbx
5201(3): mov %rdi,%rbx
5204(5): call 0xffffccec(%rip)
5209(4): cmp $0x1,%rax
520d(2): jbe 0xd(%rip)
520f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
5214(4): lea 0xffffffff(%rax),%rdx
5218(2): jz 0x10(%rip)
521a(1): pop %rbx
521b(1): ret near (%rsp)
521c(4): nop 0x0(%rax)
5220(3): mov %rax,%rdx
5223(5): nop 0x0(%rax,%rax,1)
5228(4): cmp $0x1,%rdx
522c(2): jz 0x14(%rip)
522e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
5233(4): lea 0xffffffff(%rdx),%rax
5237(2): jz 0xffffffe9(%rip)
5239(3): mov %rdx,%rax
523c(1): pop %rbx
523d(1): ret near (%rsp)
523e(2): nop 
5240(5): mov $0x1,%eax
5245(1): pop %rbx
5246(1): ret near (%rsp)

"strip_trailing_slashes" :
5250(1): push %rbp
5251(1): push %rbx
5252(3): mov %rdi,%rbp
5255(4): sub $0x8,%rsp
5259(5): call 0xffffff47(%rip)
525e(3): cmp $0x0,(%rax)
5261(3): mov %rax,%rbx
5264(4): cmove %rbp,%rbx
5268(3): mov %rbx,%rdi
526b(5): call 0xffffff95(%rip)
5270(3): add %rax,%rbx
5273(3): cmp $0x0,(%rbx)
5276(3): mov $0x0,(%rbx)
5279(3): setnz %al
527c(4): add $0x8,%rsp
5280(1): pop %rbx
5281(1): pop %rbp
5282(1): ret near (%rsp)

"record_file" :
5290(3): test %rdi,%rdi
5293(2): jz 0x7d(%rip)
5295(2): push %r13
5297(2): push %r12
5299(3): mov %rdi,%r13
529c(1): push %rbp
529d(1): push %rbx
529e(3): mov %rsi,%r12
52a1(5): mov $0x18,%edi
52a6(3): mov %rdx,%rbp
52a9(4): sub $0x8,%rsp
52ad(5): call 0x4163(%rip)
52b2(3): mov %r12,%rdi
52b5(3): mov %rax,%rbx
52b8(5): call 0x4388(%rip)
52bd(3): mov %rax,(%rbx)
52c0(4): mov 0x8(%rbp),%rax
52c4(3): mov %rbx,%rsi
52c7(3): mov %r13,%rdi
52ca(4): mov %rax,0x8(%rbx)
52ce(4): mov 0x0(%rbp),%rax
52d2(4): mov %rax,0x10(%rbx)
52d6(5): call 0x123a(%rip)
52db(3): test %rax,%rax
52de(2): jz 0x34(%rip)
52e0(3): cmp %rax,%rbx
52e3(2): jz 0x1d(%rip)
52e5(4): add $0x8,%rsp
52e9(3): mov %rbx,%rdi
52ec(1): pop %rbx
52ed(1): pop %rbp
52ee(2): pop %r12
52f0(2): pop %r13
52f2(5): jmp 0x153e(%rip)
52f7(9): nop 0x0(%rax,%rax,1)
5300(4): add $0x8,%rsp
5304(1): pop %rbx
5305(1): pop %rbp
5306(2): pop %r12
5308(2): pop %r13
530a(1): ret near (%rsp)
530b(5): nop 0x0(%rax,%rax,1)
5310(2): REP ret near (%rsp)
5312(5): call 0x434e(%rip)

"seen_file" :
5320(4): sub $0x28,%rsp
5324(9): mov $0x28,%rax
532d(5): mov %rax,0x18(%rsp)
5332(2): xor %eax,%eax
5334(3): test %rdi,%rdi
5337(2): jz 0x25(%rip)
5339(4): mov 0x8(%rdx),%rax
533d(4): mov %rsi,(%rsp)
5341(3): mov %rsp,%rsi
5344(5): mov %rax,0x8(%rsp)
5349(3): mov (%rdx),%rax
534c(5): mov %rax,0x10(%rsp)
5351(5): call 0x74f(%rip)
5356(3): test %rax,%rax
5359(3): setnz %al
535c(5): mov 0x18(%rsp),%rcx
5361(9): xor $0x28,%rcx
536a(2): jnz 0x7(%rip)
536c(4): add $0x28,%rsp
5370(1): ret near (%rsp)
5371(5): call 0xffffcbaf(%rip)

"file_name_concat" :
5380(4): sub $0x8,%rsp
5384(5): call 0x1c(%rip)
5389(3): test %rax,%rax
538c(2): jz 0x7(%rip)
538e(4): add $0x8,%rsp
5392(1): ret near (%rsp)
5393(5): call 0x42cd(%rip)

"mfile_name_concat" :
53a0(2): push %r15
53a2(2): push %r14
53a4(3): mov %rdx,%r15
53a7(2): push %r13
53a9(2): push %r12
53ab(3): mov %rdi,%r12
53ae(1): push %rbp
53af(1): push %rbx
53b0(3): mov %rsi,%rbp
53b3(4): sub $0x18,%rsp
53b7(5): call 0xfffffde9(%rip)
53bc(3): mov %rax,%rbx
53bf(3): mov %rax,%rdi
53c2(5): call 0xfffffe3e(%rip)
53c7(3): sub %r12,%rbx
53ca(3): mov %rax,%r13
53cd(3): mov %rbp,%rdi
53d0(3): add %rax,%rbx
53d3(5): call 0xffffcb1d(%rip)
53d8(3): test %r13,%r13
53db(3): mov %rax,%r14
53de(2): jz 0x32(%rip)
53e0(6): cmp $0x2f,0xffffffff(%r12,%rbx,1)
53e6(6): jz 0xaa(%rip)
53ec(2): xor %eax,%eax
53ee(4): cmp $0x2f,0x0(%rbp)
53f2(5): mov $0x0,%edx
53f7(3): setnz %al
53fa(4): mov %rax,(%rsp)
53fe(5): mov $0x2f,%eax
5403(3): cmove %edx,%eax
5406(4): mov %al,0xf(%rsp)
540a(2): jmp 0x24(%rip)
540c(4): nop 0x0(%rax)
5410(2): xor %eax,%eax
5412(4): cmp $0x2f,0x0(%rbp)
5416(5): mov $0x0,%edx
541b(3): setz %al
541e(4): mov %rax,(%rsp)
5422(5): mov $0x2e,%eax
5427(3): cmovne %edx,%eax
542a(4): mov %al,0xf(%rsp)
542e(5): lea 0x1(%rbx,%r14,1),%rdi
5433(4): add (%rsp),%rdi
5437(5): call 0xffffccb9(%rip)
543c(3): test %rax,%rax
543f(3): mov %rax,%r13
5442(2): jz 0x34(%rip)
5444(3): mov %rax,%rdi
5447(3): mov %rbx,%rdx
544a(3): mov %r12,%rsi
544d(5): call 0xffffcd43(%rip)
5452(5): movzx 0xf(%rsp),%ecx
5457(4): mov (%rsp),%rdi
545b(3): add %rax,%rdi
545e(3): test %r15,%r15
5461(2): mov %cl,(%rax)
5463(2): jz 0x5(%rip)
5465(3): mov %rdi,(%r15)
5468(3): mov %r14,%rdx
546b(3): mov %rbp,%rsi
546e(5): call 0xffffcd22(%rip)
5473(3): mov $0x0,(%rax)
5476(4): add $0x18,%rsp
547a(3): mov %r13,%rax
547d(1): pop %rbx
547e(1): pop %rbp
547f(2): pop %r12
5481(2): pop %r13
5483(2): pop %r14
5485(2): pop %r15
5487(1): ret near (%rsp)
5488(8): nop 0x0(%rax,%rax,1)
5490(8): mov $0x0,(%rsp)
5498(5): mov $0x0,0xf(%rsp)
549d(2): jmp 0xffffff91(%rip)

"next_prime" :
54a0(4): cmp $0xa,%rdi
54a4(5): mov $0xa,%eax
54a9(a): mov $0x-6148914691236517205,%r9
54b3(4): cmovnae %rax,%rdi
54b7(4): or $0x1,%rdi
54bb(4): cmp $0xffffffff,%rdi
54bf(2): jz 0x70(%rip)
54c1(7): nop 0x0(%rax)
54c8(3): mov %rdi,%rax
54cb(3): mov %rdi,%rcx
54ce(3): mul %rax,%r9,%rdx
54d1(3): mov %rdx,%rax
54d4(3): shr $0x1,%rax
54d7(4): lea 0x0(%rax,%rax,2),%rax
54db(3): sub %rax,%rcx
54de(4): cmp $0x9,%rdi
54e2(3): mov %rcx,%rax
54e5(2): jbe 0x3b(%rip)
54e7(3): test %rcx,%rcx
54ea(2): jz 0x3b(%rip)
54ec(6): mov $0x10,%r8d
54f2(5): mov $0x9,%esi
54f7(5): mov $0x3,%ecx
54fc(2): jmp 0xd(%rip)
54fe(2): nop 
5500(4): add $0x8,%r8
5504(3): test %rdx,%rdx
5507(2): jz 0x1e(%rip)
5509(4): add $0x2,%rcx
550d(2): xor %edx,%edx
550f(3): mov %rdi,%rax
5512(3): div %rcx,%rax
5515(3): add %r8,%rsi
5518(3): cmp %rdi,%rsi
551b(3): mov %rdx,%rax
551e(2): jb 0xffffffe2(%rip)
5520(3): test %rax,%rax
5523(2): jnz 0xc(%rip)
5525(4): add $0x2,%rdi
5529(4): cmp $0xffffffff,%rdi
552d(2): jnz 0xffffff9b(%rip)
552f(3): mov %rdi,%rax
5532(1): ret near (%rsp)

"raw_hasher" :
5540(3): mov %rdi,%rax
5543(2): xor %edx,%edx
5545(4): ror $0x3,%rax
5549(3): div %rsi,%rax
554c(3): mov %rdx,%rax
554f(1): ret near (%rsp)

"raw_comparator" :
5550(3): cmp %rsi,%rdi
5553(3): setz %al
5556(1): ret near (%rsp)

"safe_hasher" :
5560(1): push %rbx
5561(3): mov %rdi,%rbx
5564(3): mov %rsi,%rdi
5567(4): mov 0x10(%rbx),%rsi
556b(3): call 0x30(%rbx)
556e(4): cmp %rax,0x10(%rbx)
5572(2): jbe 0xb(%rip)
5574(4): shl/sal $0x4,%rax
5578(3): add (%rbx),%rax
557b(1): pop %rbx
557c(1): ret near (%rsp)
557d(5): call 0xffffc843(%rip)

"hash_find_entry" :
5590(2): push %r14
5592(2): push %r13
5594(3): mov %rdx,%r14
5597(2): push %r12
5599(1): push %rbp
559a(3): mov %rdi,%r12
559d(1): push %rbx
559e(3): mov %rsi,%rbp
55a1(3): mov %ecx,%r13d
55a4(5): call 0xffffffbc(%rip)
55a9(3): mov %rax,(%r14)
55ac(3): mov (%rax),%rsi
55af(3): test %rsi,%rsi
55b2(6): jz 0xee(%rip)
55b8(3): cmp %rbp,%rsi
55bb(3): mov %rax,%rbx
55be(6): jz 0x95(%rip)
55c4(3): mov %rbp,%rdi
55c7(5): call 0x38(%r12)
55cc(2): test %al,%al
55ce(6): jnz 0x82(%rip)
55d4(4): mov 0x8(%rbx),%rax
55d8(3): test %rax,%rax
55db(6): jz 0xc5(%rip)
55e1(3): mov (%rax),%rsi
55e4(3): cmp %rsi,%rbp
55e7(2): jnz 0x22(%rip)
55e9(2): jmp 0x33(%rip)
55eb(5): nop 0x0(%rax,%rax,1)
55f0(4): mov 0x8(%rbx),%rbx
55f4(4): mov 0x8(%rbx),%rax
55f8(3): test %rax,%rax
55fb(6): jz 0xa5(%rip)
5601(3): mov (%rax),%rsi
5604(3): cmp %rbp,%rsi
5607(2): jz 0x15(%rip)
5609(3): mov %rbp,%rdi
560c(5): call 0x38(%r12)
5611(2): test %al,%al
5613(2): jz 0xffffffdd(%rip)
5615(4): mov 0x8(%rbx),%rax
5619(3): mov (%rax),%rsi
561c(3): test %r13b,%r13b
561f(2): jz 0x1f(%rip)
5621(4): mov 0x8(%rax),%rdx
5625(4): mov %rdx,0x8(%rbx)
5629(7): mov $0x0,(%rax)
5630(5): mov 0x48(%r12),%rdx
5635(4): mov %rdx,0x8(%rax)
5639(5): mov %rax,0x48(%r12)
563e(1): pop %rbx
563f(3): mov %rsi,%rax
5642(1): pop %rbp
5643(2): pop %r12
5645(2): pop %r13
5647(2): pop %r14
5649(1): ret near (%rsp)
564a(6): nop 0x0(%rax,%rax,1)
5650(3): mov (%rbx),%rsi
5653(3): test %r13b,%r13b
5656(2): jz 0xffffffe8(%rip)
5658(4): mov 0x8(%rbx),%rax
565c(3): test %rax,%rax
565f(2): jz 0x31(%rip)
5661(4): movdqu (%rax),%xmm0
5665(3): movups %xmm0,(%rbx)
5668(7): mov $0x0,(%rax)
566f(5): mov 0x48(%r12),%rdx
5674(4): mov %rdx,0x8(%rax)
5678(5): mov %rax,0x48(%r12)
567d(3): mov %rsi,%rax
5680(1): pop %rbx
5681(1): pop %rbp
5682(2): pop %r12
5684(2): pop %r13
5686(2): pop %r14
5688(1): ret near (%rsp)
5689(7): nop 0x0(%rax)
5690(7): mov $0x0,(%rbx)
5697(2): jmp 0xffffffa7(%rip)
5699(7): nop 0x0(%rax)
56a0(2): xor %esi,%esi
56a2(1): pop %rbx
56a3(3): mov %rsi,%rax
56a6(1): pop %rbp
56a7(2): pop %r12
56a9(2): pop %r13
56ab(2): pop %r14
56ad(1): ret near (%rsp)

"check_tuning.isra.0" :
56b0(3): mov (%rdi),%rdx
56b3(7): lea 0x69e6(%rip),%rcx
56ba(5): mov $0x1,%eax
56bf(3): cmp %rcx,%rdx
56c2(2): jz 0x63(%rip)
56c4(5): movss 0x8(%rdx),%xmm0
56c9(7): ucomiss 0x69e4(%rip),%xmm0
56d0(2): jbe 0x50(%rip)
56d2(8): movss 0x69de(%rip),%xmm1
56da(3): ucomiss %xmm0,%xmm1
56dd(2): jbe 0x43(%rip)
56df(5): movss 0xc(%rdx),%xmm1
56e4(7): ucomiss 0x69d1(%rip),%xmm1
56eb(2): jbe 0x35(%rip)
56ed(4): movss (%rdx),%xmm1
56f1(7): ucomiss 0x69c8(%rip),%xmm1
56f8(2): jb 0x28(%rip)
56fa(8): addss 0x69b2(%rip),%xmm1
5702(5): movss 0x4(%rdx),%xmm2
5707(3): ucomiss %xmm1,%xmm2
570a(2): jbe 0x16(%rip)
570c(8): movss 0x69b0(%rip),%xmm3
5714(3): ucomiss %xmm2,%xmm3
5717(2): jb 0x9(%rip)
5719(3): ucomiss %xmm1,%xmm0
571c(2): jnbe 0x9(%rip)
571e(2): nop 
5720(3): mov %rcx,(%rdi)
5723(2): xor %eax,%eax
5725(2): REP ret near (%rsp)

"transfer_entries" :
5730(2): push %r15
5732(2): push %r14
5734(2): push %r13
5736(2): push %r12
5738(1): push %rbp
5739(1): push %rbx
573a(4): sub $0x8,%rsp
573e(3): mov (%rsi),%r12
5741(4): cmp 0x8(%rsi),%r12
5745(6): jnb 0xe3(%rip)
574b(3): mov %rdi,%rbp
574e(3): mov %rsi,%r13
5751(3): mov %edx,%r14d
5754(4): nop 0x0(%rax)
5758(4): mov (%r12),%r15
575c(3): test %r15,%r15
575f(6): jz 0xbb(%rip)
5765(5): mov 0x8(%r12),%rbx
576a(3): test %rbx,%rbx
576d(2): jnz 0x1f(%rip)
576f(2): jmp 0x5c(%rip)
5771(7): nop 0x0(%rax)
5778(4): mov 0x8(%rax),%rcx
577c(3): test %rdx,%rdx
577f(4): mov %rcx,0x8(%rbx)
5783(4): mov %rbx,0x8(%rax)
5787(3): mov %rdx,%rbx
578a(2): jz 0x3d(%rip)
578c(3): mov (%rbx),%r15
578f(3): mov %rbp,%rdi
5792(3): mov %r15,%rsi
5795(5): call 0xfffffdcb(%rip)
579a(4): cmp $0x0,(%rax)
579e(4): mov 0x8(%rbx),%rdx
57a2(2): jnz 0xffffffd6(%rip)
57a4(3): mov %r15,(%rax)
57a7(5): add $0x1,0x18(%rbp)
57ac(3): test %rdx,%rdx
57af(7): mov $0x0,(%rbx)
57b6(4): mov 0x48(%rbp),%rax
57ba(4): mov %rax,0x8(%rbx)
57be(4): mov %rbx,0x48(%rbp)
57c2(3): mov %rdx,%rbx
57c5(2): jnz 0xffffffc7(%rip)
57c7(4): mov (%r12),%r15
57cb(3): test %r14b,%r14b
57ce(9): mov $0x0,0x8(%r12)
57d7(2): jnz 0x43(%rip)
57d9(3): mov %r15,%rsi
57dc(3): mov %rbp,%rdi
57df(5): call 0xfffffd81(%rip)
57e4(4): cmp $0x0,(%rax)
57e8(3): mov %rax,%rbx
57eb(2): jz 0x55(%rip)
57ed(4): mov 0x48(%rbp),%rax
57f1(3): test %rax,%rax
57f4(2): jz 0x5c(%rip)
57f6(4): mov 0x8(%rax),%rdx
57fa(4): mov %rdx,0x48(%rbp)
57fe(4): mov 0x8(%rbx),%rdx
5802(3): mov %r15,(%rax)
5805(4): mov %rdx,0x8(%rax)
5809(4): mov %rax,0x8(%rbx)
580d(8): mov $0x0,(%r12)
5815(5): sub $0x1,0x18(%r13)
581a(4): add $0x10,%r12
581e(4): cmp %r12,0x8(%r13)
5822(6): jnbe 0xffffff36(%rip)
5828(4): add $0x8,%rsp
582c(5): mov $0x1,%eax
5831(1): pop %rbx
5832(1): pop %rbp
5833(2): pop %r12
5835(2): pop %r13
5837(2): pop %r14
5839(2): pop %r15
583b(1): ret near (%rsp)
583c(4): nop 0x0(%rax)
5840(3): mov %r15,(%rax)
5843(5): add $0x1,0x18(%rbp)
5848(2): jmp 0xffffffc5(%rip)
584a(6): nop 0x0(%rax,%rax,1)
5850(5): mov $0x10,%edi
5855(5): call 0xffffc89b(%rip)
585a(3): test %rax,%rax
585d(2): jnz 0xffffffa1(%rip)
585f(4): add $0x8,%rsp
5863(2): xor %eax,%eax
5865(1): pop %rbx
5866(1): pop %rbp
5867(2): pop %r12
5869(2): pop %r13
586b(2): pop %r14
586d(2): pop %r15
586f(1): ret near (%rsp)

"hash_get_n_buckets" :
5870(4): mov 0x10(%rdi),%rax
5874(1): ret near (%rsp)

"hash_get_n_buckets_used" :
5880(4): mov 0x18(%rdi),%rax
5884(1): ret near (%rsp)

"hash_get_n_entries" :
5890(4): mov 0x20(%rdi),%rax
5894(1): ret near (%rsp)

"hash_get_max_bucket_length" :
58a0(3): mov (%rdi),%rsi
58a3(4): mov 0x8(%rdi),%rdi
58a7(2): xor %eax,%eax
58a9(3): cmp %rdi,%rsi
58ac(2): jnb 0x3b(%rip)
58ae(2): nop 
58b0(4): cmp $0x0,(%rsi)
58b4(2): jz 0x28(%rip)
58b6(4): mov 0x8(%rsi),%rdx
58ba(5): mov $0x1,%ecx
58bf(3): test %rdx,%rdx
58c2(2): jz 0x13(%rip)
58c4(4): nop 0x0(%rax)
58c8(4): mov 0x8(%rdx),%rdx
58cc(4): add $0x1,%rcx
58d0(3): test %rdx,%rdx
58d3(2): jnz 0xfffffff5(%rip)
58d5(3): cmp %rcx,%rax
58d8(4): cmovnae %rcx,%rax
58dc(4): add $0x10,%rsi
58e0(3): cmp %rdi,%rsi
58e3(2): jb 0xffffffcd(%rip)
58e5(2): REP ret near (%rsp)
58e7(2): REP ret near (%rsp)

"hash_table_ok" :
58f0(3): mov (%rdi),%rcx
58f3(4): mov 0x8(%rdi),%r8
58f7(2): xor %edx,%edx
58f9(2): xor %esi,%esi
58fb(3): cmp %r8,%rcx
58fe(2): jnb 0x38(%rip)
5900(4): cmp $0x0,(%rcx)
5904(2): jz 0x29(%rip)
5906(4): mov 0x8(%rcx),%rax
590a(4): add $0x1,%rsi
590e(4): add $0x1,%rdx
5912(3): test %rax,%rax
5915(2): jz 0x18(%rip)
5917(9): nop 0x0(%rax,%rax,1)
5920(4): mov 0x8(%rax),%rax
5924(4): add $0x1,%rdx
5928(3): test %rax,%rax
592b(2): jnz 0xfffffff5(%rip)
592d(4): add $0x10,%rcx
5931(3): cmp %r8,%rcx
5934(2): jb 0xffffffcc(%rip)
5936(2): xor %eax,%eax
5938(4): cmp %rsi,0x18(%rdi)
593c(2): jz 0x4(%rip)
593e(2): REP ret near (%rsp)
5940(4): cmp %rdx,0x20(%rdi)
5944(3): setz %al
5947(1): ret near (%rsp)

"hash_print_statistics" :
5950(2): push %r13
5952(2): push %r12
5954(3): mov %rsi,%r12
5957(1): push %rbp
5958(1): push %rbx
5959(2): xor %ebx,%ebx
595b(4): sub $0x8,%rsp
595f(3): mov (%rdi),%rsi
5962(4): mov 0x20(%rdi),%rcx
5966(4): mov 0x10(%rdi),%rbp
596a(4): mov 0x18(%rdi),%r13
596e(4): mov 0x8(%rdi),%rdi
5972(3): cmp %rdi,%rsi
5975(2): jnb 0x40(%rip)
5977(9): nop 0x0(%rax,%rax,1)
5980(4): cmp $0x0,(%rsi)
5984(2): jz 0x28(%rip)
5986(4): mov 0x8(%rsi),%rax
598a(5): mov $0x1,%edx
598f(3): test %rax,%rax
5992(2): jz 0x13(%rip)
5994(4): nop 0x0(%rax)
5998(4): mov 0x8(%rax),%rax
599c(4): add $0x1,%rdx
59a0(3): test %rax,%rax
59a3(2): jnz 0xfffffff5(%rip)
59a5(3): cmp %rdx,%rbx
59a8(4): cmovnae %rdx,%rbx
59ac(4): add $0x10,%rsi
59b0(3): cmp %rdi,%rsi
59b3(2): jb 0xffffffcd(%rip)
59b5(7): lea 0x666a(%rip),%rdx
59bc(5): mov $0x1,%esi
59c1(3): mov %r12,%rdi
59c4(2): xor %eax,%eax
59c6(5): call 0xffffc89a(%rip)
59cb(7): lea 0x666c(%rip),%rdx
59d2(2): xor %eax,%eax
59d4(3): mov %rbp,%rcx
59d7(5): mov $0x1,%esi
59dc(3): mov %r12,%rdi
59df(5): call 0xffffc881(%rip)
59e4(3): test %r13,%r13
59e7(2): js 0x69(%rip)
59e9(4): pxor %xmm0,%xmm0
59ed(3): test %rbp,%rbp
59f0(5): cvtsi2sd %r13,%xmm0
59f5(8): mulsd 0x66db(%rip),%xmm0
59fd(2): js 0x7c(%rip)
59ff(4): pxor %xmm1,%xmm1
5a03(5): cvtsi2sd %rbp,%xmm1
5a08(4): divsd %xmm1,%xmm0
5a0c(7): lea 0x665d(%rip),%rdx
5a13(3): mov %r13,%rcx
5a16(3): mov %r12,%rdi
5a19(5): mov $0x1,%esi
5a1e(5): mov $0x1,%eax
5a23(5): call 0xffffc83d(%rip)
5a28(4): add $0x8,%rsp
5a2c(3): mov %rbx,%rcx
5a2f(3): mov %r12,%rdi
5a32(1): pop %rbx
5a33(1): pop %rbp
5a34(2): pop %r12
5a36(2): pop %r13
5a38(7): lea 0x6617(%rip),%rdx
5a3f(5): mov $0x1,%esi
5a44(2): xor %eax,%eax
5a46(5): jmp 0xffffc81a(%rip)
5a4b(5): nop 0x0(%rax,%rax,1)
5a50(3): mov %r13,%rax
5a53(3): mov %r13,%rdx
5a56(4): pxor %xmm0,%xmm0
5a5a(3): shr $0x1,%rax
5a5d(3): and $0x1,%edx
5a60(3): or %rdx,%rax
5a63(3): test %rbp,%rbp
5a66(5): cvtsi2sd %rax,%xmm0
5a6b(4): addsd %xmm0,%xmm0
5a6f(8): mulsd 0x6661(%rip),%xmm0
5a77(2): jns 0xffffff88(%rip)
5a79(3): mov %rbp,%rax
5a7c(4): pxor %xmm1,%xmm1
5a80(3): shr $0x1,%rax
5a83(3): and $0x1,%ebp
5a86(3): or %rbp,%rax
5a89(5): cvtsi2sd %rax,%xmm1
5a8e(4): addsd %xmm1,%xmm1
5a92(5): jmp 0xffffff76(%rip)

"hash_lookup" :
5aa0(2): push %r12
5aa2(1): push %rbp
5aa3(3): mov %rdi,%r12
5aa6(1): push %rbx
5aa7(3): mov %rsi,%rbp
5aaa(5): call 0xfffffab6(%rip)
5aaf(3): mov (%rax),%rsi
5ab2(3): test %rsi,%rsi
5ab5(2): jz 0x28(%rip)
5ab7(3): mov %rax,%rbx
5aba(2): jmp 0x9(%rip)
5abc(4): nop 0x0(%rax)
5ac0(3): mov (%rbx),%rsi
5ac3(3): cmp %rbp,%rsi
5ac6(2): jz 0x19(%rip)
5ac8(3): mov %rbp,%rdi
5acb(5): call 0x38(%r12)
5ad0(2): test %al,%al
5ad2(2): jnz 0x1e(%rip)
5ad4(4): mov 0x8(%rbx),%rbx
5ad8(3): test %rbx,%rbx
5adb(2): jnz 0xffffffe5(%rip)
5add(2): xor %esi,%esi
5adf(1): pop %rbx
5ae0(3): mov %rsi,%rax
5ae3(1): pop %rbp
5ae4(2): pop %r12
5ae6(1): ret near (%rsp)
5ae7(9): nop 0x0(%rax,%rax,1)
5af0(3): mov (%rbx),%rsi
5af3(1): pop %rbx
5af4(1): pop %rbp
5af5(3): mov %rsi,%rax
5af8(2): pop %r12
5afa(1): ret near (%rsp)

"hash_get_first" :
5b00(5): cmp $0x0,0x20(%rdi)
5b05(2): jz 0x2e(%rip)
5b07(3): mov (%rdi),%rdx
5b0a(4): mov 0x8(%rdi),%rcx
5b0e(3): cmp %rcx,%rdx
5b11(2): jnb 0x27(%rip)
5b13(3): mov (%rdx),%rax
5b16(3): test %rax,%rax
5b19(2): jnz 0x1d(%rip)
5b1b(5): nop 0x0(%rax,%rax,1)
5b20(4): add $0x10,%rdx
5b24(3): cmp %rcx,%rdx
5b27(2): jnb 0x11(%rip)
5b29(3): mov (%rdx),%rax
5b2c(3): test %rax,%rax
5b2f(2): jz 0xfffffff1(%rip)
5b31(2): REP ret near (%rsp)
5b33(2): xor %eax,%eax
5b35(1): ret near (%rsp)
5b36(2): REP ret near (%rsp)
5b38(4): sub $0x8,%rsp
5b3c(5): call 0xffffc284(%rip)

"hash_get_next" :
5b50(1): push %rbp
5b51(1): push %rbx
5b52(3): mov %rdi,%rbp
5b55(3): mov %rsi,%rbx
5b58(4): sub $0x8,%rsp
5b5c(5): call 0xfffffa04(%rip)
5b61(3): mov %rax,%rdx
5b64(3): mov %rax,%rcx
5b67(3): mov (%rdx),%rax
5b6a(4): mov 0x8(%rdx),%rdx
5b6e(3): cmp %rbx,%rax
5b71(2): jz 0x18(%rip)
5b73(5): nop 0x0(%rax,%rax,1)
5b78(3): test %rdx,%rdx
5b7b(2): jz 0x13(%rip)
5b7d(3): mov (%rdx),%rax
5b80(4): mov 0x8(%rdx),%rdx
5b84(3): cmp %rbx,%rax
5b87(2): jnz 0xfffffff1(%rip)
5b89(3): test %rdx,%rdx
5b8c(2): jnz 0x2c(%rip)
5b8e(4): mov 0x8(%rbp),%rdx
5b92(2): jmp 0xe(%rip)
5b94(4): nop 0x0(%rax)
5b98(3): mov (%rcx),%rax
5b9b(3): test %rax,%rax
5b9e(2): jnz 0xd(%rip)
5ba0(4): add $0x10,%rcx
5ba4(3): cmp %rcx,%rdx
5ba7(2): jnbe 0xfffffff1(%rip)
5ba9(2): xor %eax,%eax
5bab(4): add $0x8,%rsp
5baf(1): pop %rbx
5bb0(1): pop %rbp
5bb1(1): ret near (%rsp)
5bb2(6): nop 0x0(%rax,%rax,1)
5bb8(3): mov (%rdx),%rax
5bbb(4): add $0x8,%rsp
5bbf(1): pop %rbx
5bc0(1): pop %rbp
5bc1(1): ret near (%rsp)

"hash_get_entries" :
5bd0(3): mov (%rdi),%r9
5bd3(4): cmp %r9,0x8(%rdi)
5bd7(2): jbe 0x5b(%rip)
5bd9(3): xor %r8d,%r8d
5bdc(3): mov (%r9),%rcx
5bdf(3): test %rcx,%rcx
5be2(2): jz 0x3b(%rip)
5be4(3): cmp %r8,%rdx
5be7(2): jbe 0x40(%rip)
5be9(4): mov %rcx,0x0(%rsi,%r8,8)
5bed(4): mov 0x8(%r9),%rcx
5bf1(4): lea 0x1(%r8),%rax
5bf5(3): test %rcx,%rcx
5bf8(2): jz 0x22(%rip)
5bfa(6): nop 0x0(%rax,%rax,1)
5c00(3): cmp %rax,%rdx
5c03(2): jz 0x2d(%rip)
5c05(3): mov (%rcx),%r8
5c08(4): add $0x1,%rax
5c0c(5): mov %r8,0xfffffff8(%rsi,%rax,8)
5c11(4): mov 0x8(%rcx),%rcx
5c15(3): test %rcx,%rcx
5c18(2): jnz 0xffffffe8(%rip)
5c1a(3): mov %rax,%r8
5c1d(4): add $0x10,%r9
5c21(4): cmp %r9,0x8(%rdi)
5c25(2): jnbe 0xffffffb7(%rip)
5c27(3): mov %r8,%rax
5c2a(1): ret near (%rsp)
5c2b(5): nop 0x0(%rax,%rax,1)
5c30(2): REP ret near (%rsp)
5c32(2): xor %eax,%eax
5c34(1): ret near (%rsp)

"hash_do_for_each" :
5c40(2): push %r15
5c42(2): push %r14
5c44(2): push %r13
5c46(2): push %r12
5c48(1): push %rbp
5c49(1): push %rbx
5c4a(4): sub $0x8,%rsp
5c4e(3): mov (%rdi),%r14
5c51(4): cmp %r14,0x8(%rdi)
5c55(2): jbe 0x51(%rip)
5c57(3): mov %rdx,%r13
5c5a(3): mov %rsi,%r12
5c5d(3): mov %rdi,%r15
5c60(2): xor %ebp,%ebp
5c62(3): mov (%r14),%rdi
5c65(3): test %rdi,%rdi
5c68(2): jz 0x22(%rip)
5c6a(3): mov %r14,%rbx
5c6d(2): jmp 0x6(%rip)
5c6f(1): nop 
5c70(3): mov (%rbx),%rdi
5c73(3): mov %r13,%rsi
5c76(3): call %r12
5c79(2): test %al,%al
5c7b(2): jz 0x19(%rip)
5c7d(4): mov 0x8(%rbx),%rbx
5c81(4): add $0x1,%rbp
5c85(3): test %rbx,%rbx
5c88(2): jnz 0xffffffe8(%rip)
5c8a(4): add $0x10,%r14
5c8e(4): cmp %r14,0x8(%r15)
5c92(2): jnbe 0xffffffd0(%rip)
5c94(4): add $0x8,%rsp
5c98(3): mov %rbp,%rax
5c9b(1): pop %rbx
5c9c(1): pop %rbp
5c9d(2): pop %r12
5c9f(2): pop %r13
5ca1(2): pop %r14
5ca3(2): pop %r15
5ca5(1): ret near (%rsp)
5ca6(2): xor %ebp,%ebp
5ca8(2): jmp 0xffffffec(%rip)

"hash_string" :
5cb0(3): movzx (%rdi),%ecx
5cb3(2): xor %edx,%edx
5cb5(2): test %cl,%cl
5cb7(2): jz 0x26(%rip)
5cb9(7): nop 0x0(%rax)
5cc0(3): mov %rdx,%rax
5cc3(4): add $0x1,%rdi
5cc7(4): shl/sal $0x5,%rax
5ccb(3): sub %rdx,%rax
5cce(2): xor %edx,%edx
5cd0(3): add %rcx,%rax
5cd3(3): movzx (%rdi),%ecx
5cd6(3): div %rsi,%rax
5cd9(2): test %cl,%cl
5cdb(2): jnz 0xffffffe5(%rip)
5cdd(3): mov %rdx,%rax
5ce0(1): ret near (%rsp)

"hash_reset_tuning" :
5cf0(a): mov $0x4575657221408423936,%rax
5cfa(4): mov $0x0,0x10(%rdi)
5cfe(3): mov %rax,(%rdi)
5d01(a): mov $0x4590573145673223373,%rax
5d0b(4): mov %rax,0x8(%rdi)
5d0f(1): ret near (%rsp)

"hash_initialize" :
5d10(2): push %r15
5d12(2): push %r14
5d14(7): lea 0xfffff825(%rip),%rax
5d1b(2): push %r13
5d1d(2): push %r12
5d1f(3): mov %rdx,%r12
5d22(1): push %rbp
5d23(1): push %rbx
5d24(3): mov %rcx,%r13
5d27(3): mov %rdi,%rbp
5d2a(5): mov $0x50,%edi
5d2f(3): mov %rsi,%r15
5d32(4): sub $0x8,%rsp
5d36(3): test %rdx,%rdx
5d39(3): mov %r8,%r14
5d3c(4): cmove %rax,%r12
5d40(7): lea 0xfffff809(%rip),%rax
5d47(3): test %rcx,%rcx
5d4a(4): cmove %rax,%r13
5d4e(5): call 0xffffc3a2(%rip)
5d53(3): test %rax,%rax
5d56(3): mov %rax,%rbx
5d59(6): jz 0xb1(%rip)
5d5f(3): test %r15,%r15
5d62(4): lea 0x28(%rax),%rdi
5d66(6): jz 0xba(%rip)
5d6c(4): mov %r15,0x28(%rax)
5d70(5): call 0xfffff940(%rip)
5d75(2): test %al,%al
5d77(6): jz 0x89(%rip)
5d7d(5): cmp $0x0,0x10(%r15)
5d82(6): jz 0xfe(%rip)
5d88(3): mov %rbp,%rdi
5d8b(5): call 0xfffff715(%rip)
5d90(5): mov $0x8,%edx
5d95(3): mov %rax,%rbp
5d98(2): xor %ecx,%ecx
5d9a(3): mov %rdx,%rax
5d9d(3): mul %rax,%rbp,%rdx
5da0(6): jo 0x11a(%rip)
5da6(3): test %rax,%rax
5da9(2): js 0x57(%rip)
5dab(3): test %rcx,%rcx
5dae(2): jnz 0x52(%rip)
5db0(3): test %rbp,%rbp
5db3(4): mov %rbp,0x10(%rbx)
5db7(2): jz 0x49(%rip)
5db9(5): mov $0x10,%esi
5dbe(3): mov %rbp,%rdi
5dc1(5): call 0xffffc27f(%rip)
5dc6(3): test %rax,%rax
5dc9(3): mov %rax,(%rbx)
5dcc(2): jz 0x34(%rip)
5dce(4): shl/sal $0x4,%rbp
5dd2(8): mov $0x0,0x18(%rbx)
5dda(8): mov $0x0,0x20(%rbx)
5de2(3): add %rax,%rbp
5de5(4): mov %r12,0x30(%rbx)
5de9(4): mov %r13,0x38(%rbx)
5ded(4): mov %rbp,0x8(%rbx)
5df1(4): mov %r14,0x40(%rbx)
5df5(8): mov $0x0,0x48(%rbx)
5dfd(2): jmp 0xd(%rip)
5dff(1): nop 
5e00(3): mov %rbx,%rdi
5e03(2): xor %ebx,%ebx
5e05(5): call 0xffffbfab(%rip)
5e0a(4): add $0x8,%rsp
5e0e(3): mov %rbx,%rax
5e11(1): pop %rbx
5e12(1): pop %rbp
5e13(2): pop %r12
5e15(2): pop %r13
5e17(2): pop %r14
5e19(2): pop %r15
5e1b(1): ret near (%rsp)
5e1c(4): nop 0x0(%rax)
5e20(7): lea 0x6279(%rip),%rax
5e27(4): mov %rax,0x28(%rbx)
5e2b(5): call 0xfffff885(%rip)
5e30(2): test %al,%al
5e32(8): movss 0x628e(%rip),%xmm1
5e3a(2): jz 0xffffffc6(%rip)
5e3c(3): test %rbp,%rbp
5e3f(2): js 0x4c(%rip)
5e41(4): pxor %xmm0,%xmm0
5e45(5): cvtsi2ss %rbp,%xmm0
5e4a(4): divss %xmm1,%xmm0
5e4e(7): ucomiss 0x6277(%rip),%xmm0
5e55(2): jnb 0xffffffab(%rip)
5e57(7): ucomiss 0x6272(%rip),%xmm0
5e5e(2): jb 0x52(%rip)
5e60(8): subss 0x6268(%rip),%xmm0
5e68(a): mov $0x-9223372036854775808,%rax
5e72(5): cvttss2si %xmm0,%rbp
5e77(3): xor %rax,%rbp
5e7a(5): jmp 0xffffff0e(%rip)
5e7f(1): nop 
5e80(3): test %rbp,%rbp
5e83(6): movss 0x8(%r15),%xmm1
5e89(2): jns 0xffffffb8(%rip)
5e8b(3): mov %rbp,%rax
5e8e(4): pxor %xmm0,%xmm0
5e92(3): shr $0x1,%rax
5e95(3): and $0x1,%ebp
5e98(3): or %rbp,%rax
5e9b(5): cvtsi2ss %rax,%xmm0
5ea0(4): addss %xmm0,%xmm0
5ea4(2): jmp 0xffffffa6(%rip)
5ea6(a): nop 0x0(%rax,%rax,1)
5eb0(5): cvttss2si %xmm0,%rbp
5eb5(5): jmp 0xfffffed3(%rip)
5eba(5): mov $0x1,%ecx
5ebf(5): jmp 0xfffffee7(%rip)

"hash_clear" :
5ed0(2): push %r12
5ed2(1): push %rbp
5ed3(3): mov %rdi,%rbp
5ed6(1): push %rbx
5ed7(3): mov (%rdi),%r12
5eda(4): cmp 0x8(%rdi),%r12
5ede(2): jnb 0x6d(%rip)
5ee0(5): cmp $0x0,(%r12)
5ee5(2): jz 0x5c(%rip)
5ee7(5): mov 0x8(%r12),%rbx
5eec(4): mov 0x40(%rbp),%rax
5ef0(3): test %rbx,%rbx
5ef3(2): jz 0x32(%rip)
5ef5(3): nop (%rax)
5ef8(3): test %rax,%rax
5efb(2): jz 0xb(%rip)
5efd(3): mov (%rbx),%rdi
5f00(2): call %rax
5f02(4): mov 0x40(%rbp),%rax
5f06(4): mov 0x8(%rbx),%rdx
5f0a(4): mov 0x48(%rbp),%rcx
5f0e(7): mov $0x0,(%rbx)
5f15(3): test %rdx,%rdx
5f18(4): mov %rcx,0x8(%rbx)
5f1c(4): mov %rbx,0x48(%rbp)
5f20(3): mov %rdx,%rbx
5f23(2): jnz 0xffffffd5(%rip)
5f25(3): test %rax,%rax
5f28(2): jz 0x8(%rip)
5f2a(4): mov (%r12),%rdi
5f2e(2): call %rax
5f30(8): mov $0x0,(%r12)
5f38(9): mov $0x0,0x8(%r12)
5f41(4): add $0x10,%r12
5f45(4): cmp %r12,0x8(%rbp)
5f49(2): jnbe 0xffffff97(%rip)
5f4b(8): mov $0x0,0x18(%rbp)
5f53(8): mov $0x0,0x20(%rbp)
5f5b(1): pop %rbx
5f5c(1): pop %rbp
5f5d(2): pop %r12
5f5f(1): ret near (%rsp)

"hash_free" :
5f60(2): push %r12
5f62(1): push %rbp
5f63(3): mov %rdi,%r12
5f66(1): push %rbx
5f67(5): cmp $0x0,0x40(%rdi)
5f6c(3): mov (%rdi),%rbp
5f6f(4): mov 0x8(%rdi),%rax
5f73(2): jz 0x50(%rip)
5f75(5): cmp $0x0,0x20(%rdi)
5f7a(2): jz 0x49(%rip)
5f7c(3): cmp %rax,%rbp
5f7f(2): jnb 0x7d(%rip)
5f81(7): nop 0x0(%rax)
5f88(4): mov 0x0(%rbp),%rdi
5f8c(3): test %rdi,%rdi
5f8f(2): jz 0x27(%rip)
5f91(3): mov %rbp,%rbx
5f94(2): jmp 0xf(%rip)
5f96(a): nop 0x0(%rax,%rax,1)
5fa0(3): mov (%rbx),%rdi
5fa3(5): call 0x40(%r12)
5fa8(4): mov 0x8(%rbx),%rbx
5fac(3): test %rbx,%rbx
5faf(2): jnz 0xfffffff1(%rip)
5fb1(5): mov 0x8(%r12),%rax
5fb6(4): add $0x10,%rbp
5fba(3): cmp %rbp,%rax
5fbd(2): jnbe 0xffffffcb(%rip)
5fbf(4): mov (%r12),%rbp
5fc3(3): cmp %rax,%rbp
5fc6(2): jnb 0x36(%rip)
5fc8(8): nop 0x0(%rax,%rax,1)
5fd0(4): mov 0x8(%rbp),%rdi
5fd4(3): test %rdi,%rdi
5fd7(2): jz 0x1a(%rip)
5fd9(7): nop 0x0(%rax)
5fe0(4): mov 0x8(%rdi),%rbx
5fe4(5): call 0xffffbdcc(%rip)
5fe9(3): test %rbx,%rbx
5fec(3): mov %rbx,%rdi
5fef(2): jnz 0xfffffff1(%rip)
5ff1(4): add $0x10,%rbp
5ff5(5): cmp %rbp,0x8(%r12)
5ffa(2): jnbe 0xffffffd6(%rip)
5ffc(5): mov 0x48(%r12),%rdi
6001(3): test %rdi,%rdi
6004(2): jz 0x1d(%rip)
6006(a): nop 0x0(%rax,%rax,1)
6010(4): mov 0x8(%rdi),%rbx
6014(5): call 0xffffbd9c(%rip)
6019(3): test %rbx,%rbx
601c(3): mov %rbx,%rdi
601f(2): jnz 0xfffffff1(%rip)
6021(4): mov (%r12),%rdi
6025(5): call 0xffffbd8b(%rip)
602a(1): pop %rbx
602b(3): mov %r12,%rdi
602e(1): pop %rbp
602f(2): pop %r12
6031(5): jmp 0xffffbd7f(%rip)

"hash_rehash" :
6040(2): push %r12
6042(1): push %rbp
6043(3): mov %rdi,%rbp
6046(1): push %rbx
6047(4): sub $0x60,%rsp
604b(4): mov 0x28(%rdi),%r12
604f(9): mov $0x28,%rax
6058(5): mov %rax,0x58(%rsp)
605d(2): xor %eax,%eax
605f(6): cmp $0x0,0x10(%r12)
6065(2): jnz 0x53(%rip)
6067(3): test %rsi,%rsi
606a(6): js 0x17e(%rip)
6070(4): pxor %xmm0,%xmm0
6074(5): cvtsi2ss %rsi,%xmm0
6079(7): divss 0x8(%r12),%xmm0
6080(7): ucomiss 0x6045(%rip),%xmm0
6087(6): jnb 0x139(%rip)
608d(7): ucomiss 0x603c(%rip),%xmm0
6094(6): jb 0x17c(%rip)
609a(8): subss 0x602e(%rip),%xmm0
60a2(a): mov $0x-9223372036854775808,%rax
60ac(5): cvttss2si %xmm0,%rsi
60b1(3): xor %rax,%rsi
60b4(4): nop 0x0(%rax)
60b8(3): mov %rsi,%rdi
60bb(5): call 0xfffff3e5(%rip)
60c0(5): mov $0x8,%edx
60c5(3): mov %rax,%rbx
60c8(2): xor %ecx,%ecx
60ca(3): mov %rdx,%rax
60cd(3): mul %rax,%rbx,%rdx
60d0(6): jo 0x19f(%rip)
60d6(3): test %rax,%rax
60d9(5): mov $0x1,%eax
60de(4): cmovs %rax,%rcx
60e2(3): test %rbx,%rbx
60e5(6): jz 0xdb(%rip)
60eb(3): and $0x1,%ecx
60ee(6): jnz 0xd2(%rip)
60f4(4): cmp %rbx,0x10(%rbp)
60f8(6): jz 0x128(%rip)
60fe(5): mov $0x10,%esi
6103(3): mov %rbx,%rdi
6106(5): call 0xffffbf3a(%rip)
610b(3): test %rax,%rax
610e(4): mov %rax,(%rsp)
6112(6): jz 0xae(%rip)
6118(5): mov %rbx,0x10(%rsp)
611d(4): shl/sal $0x4,%rbx
6121(5): mov %r12,0x28(%rsp)
6126(3): add %rax,%rbx
6129(4): mov 0x30(%rbp),%rax
612d(3): mov %rsp,%r12
6130(2): xor %edx,%edx
6132(3): mov %rbp,%rsi
6135(3): mov %r12,%rdi
6138(5): mov %rbx,0x8(%rsp)
613d(9): mov $0x0,0x18(%rsp)
6146(5): mov %rax,0x30(%rsp)
614b(4): mov 0x38(%rbp),%rax
614f(9): mov $0x0,0x20(%rsp)
6158(5): mov %rax,0x38(%rsp)
615d(4): mov 0x40(%rbp),%rax
6161(5): mov %rax,0x40(%rsp)
6166(4): mov 0x48(%rbp),%rax
616a(5): mov %rax,0x48(%rsp)
616f(5): call 0xfffff5c1(%rip)
6174(2): test %al,%al
6176(2): mov %eax,%ebx
6178(6): jnz 0xb8(%rip)
617e(5): mov 0x48(%rsp),%rax
6183(5): mov $0x1,%edx
6188(3): mov %r12,%rsi
618b(3): mov %rbp,%rdi
618e(4): mov %rax,0x48(%rbp)
6192(5): call 0xfffff59e(%rip)
6197(2): test %al,%al
6199(6): jz 0xe0(%rip)
619f(2): xor %edx,%edx
61a1(3): mov %r12,%rsi
61a4(3): mov %rbp,%rdi
61a7(5): call 0xfffff589(%rip)
61ac(2): test %al,%al
61ae(6): jz 0xcb(%rip)
61b4(4): mov (%rsp),%rdi
61b8(5): call 0xffffbbf8(%rip)
61bd(2): jmp 0x5(%rip)
61bf(1): nop 
61c0(2): xor %ebx,%ebx
61c2(5): mov 0x58(%rsp),%rcx
61c7(9): xor $0x28,%rcx
61d0(2): mov %ebx,%eax
61d2(6): jnz 0x98(%rip)
61d8(4): add $0x60,%rsp
61dc(1): pop %rbx
61dd(1): pop %rbp
61de(2): pop %r12
61e0(1): ret near (%rsp)
61e1(7): nop 0x0(%rax)
61e8(3): mov %rsi,%rax
61eb(4): pxor %xmm0,%xmm0
61ef(3): shr $0x1,%rax
61f2(3): and $0x1,%esi
61f5(3): or %rsi,%rax
61f8(5): cvtsi2ss %rax,%xmm0
61fd(4): addss %xmm0,%xmm0
6201(5): jmp 0xfffffe78(%rip)
6206(a): nop 0x0(%rax,%rax,1)
6210(5): cvttss2si %xmm0,%rsi
6215(5): jmp 0xfffffea3(%rip)
621a(6): nop 0x0(%rax,%rax,1)
6220(5): mov $0x1,%ebx
6225(2): jmp 0xffffff9d(%rip)
6227(9): nop 0x0(%rax,%rax,1)
6230(4): mov 0x0(%rbp),%rdi
6234(5): call 0xffffbb7c(%rip)
6239(4): mov (%rsp),%rax
623d(4): mov %rax,0x0(%rbp)
6241(5): mov 0x8(%rsp),%rax
6246(4): mov %rax,0x8(%rbp)
624a(5): mov 0x10(%rsp),%rax
624f(4): mov %rax,0x10(%rbp)
6253(5): mov 0x18(%rsp),%rax
6258(4): mov %rax,0x18(%rbp)
625c(5): mov 0x48(%rsp),%rax
6261(4): mov %rax,0x48(%rbp)
6265(5): jmp 0xffffff5d(%rip)
626a(5): call 0xffffbcb6(%rip)
626f(5): mov $0x1,%ecx
6274(5): jmp 0xfffffe62(%rip)
6279(5): call 0xffffbb47(%rip)

"hash_insert_if_absent" :
6280(2): push %r13
6282(2): push %r12
6284(1): push %rbp
6285(1): push %rbx
6286(4): sub $0x18,%rsp
628a(9): mov $0x28,%rax
6293(5): mov %rax,0x8(%rsp)
6298(2): xor %eax,%eax
629a(3): test %rsi,%rsi
629d(6): jz 0x1c0(%rip)
62a3(3): mov %rsp,%r12
62a6(2): xor %ecx,%ecx
62a8(3): mov %rdx,%r13
62ab(3): mov %r12,%rdx
62ae(3): mov %rdi,%rbx
62b1(3): mov %rsi,%rbp
62b4(5): call 0xfffff2dc(%rip)
62b9(3): test %rax,%rax
62bc(3): mov %rax,%rdx
62bf(2): jz 0x31(%rip)
62c1(2): xor %eax,%eax
62c3(3): test %r13,%r13
62c6(2): jz 0x6(%rip)
62c8(4): mov %rdx,0x0(%r13)
62cc(5): mov 0x8(%rsp),%rcx
62d1(9): xor $0x28,%rcx
62da(6): jnz 0x225(%rip)
62e0(4): add $0x18,%rsp
62e4(1): pop %rbx
62e5(1): pop %rbp
62e6(2): pop %r12
62e8(2): pop %r13
62ea(1): ret near (%rsp)
62eb(5): nop 0x0(%rax,%rax,1)
62f0(4): mov 0x18(%rbx),%rax
62f4(3): test %rax,%rax
62f7(2): js 0x79(%rip)
62f9(4): pxor %xmm1,%xmm1
62fd(4): mov 0x28(%rbx),%rdx
6301(5): cvtsi2ss %rax,%xmm1
6306(4): mov 0x10(%rbx),%rax
630a(3): test %rax,%rax
630d(6): js 0x8d(%rip)
6313(4): pxor %xmm0,%xmm0
6317(5): cvtsi2ss %rax,%xmm0
631c(5): mulss 0x8(%rdx),%xmm0
6321(3): ucomiss %xmm0,%xmm1
6324(6): jnbe 0x9c(%rip)
632a(4): mov (%rsp),%r12
632e(5): cmp $0x0,(%r12)
6333(6): jz 0x135(%rip)
6339(4): mov 0x48(%rbx),%rax
633d(3): test %rax,%rax
6340(6): jz 0x140(%rip)
6346(4): mov 0x8(%rax),%rdx
634a(4): mov %rdx,0x48(%rbx)
634e(5): mov 0x8(%r12),%rdx
6353(3): mov %rbp,(%rax)
6356(4): mov %rdx,0x8(%rax)
635a(5): mov %rax,0x8(%r12)
635f(5): mov $0x1,%eax
6364(5): add $0x1,0x20(%rbx)
6369(5): jmp 0xffffff63(%rip)
636e(2): nop 
6370(3): mov %rax,%rdx
6373(4): pxor %xmm1,%xmm1
6377(3): and $0x1,%eax
637a(3): shr $0x1,%rdx
637d(3): or %rax,%rdx
6380(4): mov 0x10(%rbx),%rax
6384(5): cvtsi2ss %rdx,%xmm1
6389(4): mov 0x28(%rbx),%rdx
638d(3): test %rax,%rax
6390(4): addss %xmm1,%xmm1
6394(6): jns 0xffffff7f(%rip)
639a(3): mov %rax,%rcx
639d(4): pxor %xmm0,%xmm0
63a1(3): shr $0x1,%rcx
63a4(3): and $0x1,%eax
63a7(3): or %rax,%rcx
63aa(5): cvtsi2ss %rcx,%xmm0
63af(4): addss %xmm0,%xmm0
63b3(5): jmp 0xffffff69(%rip)
63b8(8): nop 0x0(%rax,%rax,1)
63c0(4): lea 0x28(%rbx),%rdi
63c4(5): call 0xfffff2ec(%rip)
63c9(4): mov 0x10(%rbx),%rax
63cd(4): mov 0x28(%rbx),%rdx
63d1(3): test %rax,%rax
63d4(5): movss 0x8(%rdx),%xmm2
63d9(6): js 0xc7(%rip)
63df(4): pxor %xmm0,%xmm0
63e3(5): cvtsi2ss %rax,%xmm0
63e8(4): mov 0x18(%rbx),%rax
63ec(3): test %rax,%rax
63ef(6): js 0xd1(%rip)
63f5(4): pxor %xmm1,%xmm1
63f9(5): cvtsi2ss %rax,%xmm1
63fe(3): movaps %xmm2,%xmm3
6401(4): mulss %xmm0,%xmm3
6405(3): ucomiss %xmm3,%xmm1
6408(6): jbe 0xffffff22(%rip)
640e(4): cmp $0x0,0x10(%rdx)
6412(5): mulss 0xc(%rdx),%xmm0
6417(2): jnz 0x6(%rip)
6419(4): mulss %xmm2,%xmm0
641d(7): ucomiss 0x5ca8(%rip),%xmm0
6424(2): jnb 0x6f(%rip)
6426(7): ucomiss 0x5ca3(%rip),%xmm0
642d(6): jnb 0xb3(%rip)
6433(5): cvttss2si %xmm0,%rsi
6438(3): mov %rbx,%rdi
643b(5): call 0xfffffc05(%rip)
6440(2): test %al,%al
6442(2): jz 0x51(%rip)
6444(2): xor %ecx,%ecx
6446(3): mov %r12,%rdx
6449(3): mov %rbp,%rsi
644c(3): mov %rbx,%rdi
644f(5): call 0xfffff141(%rip)
6454(3): test %rax,%rax
6457(6): jz 0xfffffed3(%rip)
645d(5): call 0xffffb963(%rip)
6462(6): nop 0x0(%rax,%rax,1)
6468(4): mov %rbp,(%r12)
646c(5): mov $0x1,%eax
6471(5): add $0x1,0x20(%rbx)
6476(5): add $0x1,0x18(%rbx)
647b(5): jmp 0xfffffe51(%rip)
6480(5): mov $0x10,%edi
6485(5): call 0xffffbc6b(%rip)
648a(3): test %rax,%rax
648d(6): jnz 0xfffffec1(%rip)
6493(5): mov $0xffffffff,%eax
6498(5): jmp 0xfffffe34(%rip)
649d(3): nop (%rax)
64a0(3): mov %rax,%rcx
64a3(4): pxor %xmm0,%xmm0
64a7(3): shr $0x1,%rcx
64aa(3): and $0x1,%eax
64ad(3): or %rax,%rcx
64b0(5): cvtsi2ss %rcx,%xmm0
64b5(4): addss %xmm0,%xmm0
64b9(5): jmp 0xffffff2f(%rip)
64be(2): nop 
64c0(3): mov %rax,%rcx
64c3(4): pxor %xmm1,%xmm1
64c7(3): shr $0x1,%rcx
64ca(3): and $0x1,%eax
64cd(3): or %rax,%rcx
64d0(5): cvtsi2ss %rcx,%xmm1
64d5(4): addss %xmm1,%xmm1
64d9(5): jmp 0xffffff25(%rip)
64de(2): nop 
64e0(8): subss 0x5be8(%rip),%xmm0
64e8(a): mov $0x-9223372036854775808,%rax
64f2(5): cvttss2si %xmm0,%rsi
64f7(3): xor %rax,%rsi
64fa(5): jmp 0xffffff3e(%rip)
64ff(5): call 0xffffba21(%rip)

"hash_insert" :
6510(1): push %rbx
6511(3): mov %rsi,%rbx
6514(4): sub $0x10,%rsp
6518(3): mov %rsp,%rdx
651b(9): mov $0x28,%rax
6524(5): mov %rax,0x8(%rsp)
6529(2): xor %eax,%eax
652b(5): call 0xfffffd55(%rip)
6530(3): cmp $0xff,%eax
6533(2): jz 0x2d(%rip)
6535(2): test %eax,%eax
6537(2): jnz 0x6(%rip)
6539(4): mov (%rsp),%rbx
653d(5): mov 0x8(%rsp),%rcx
6542(9): xor $0x28,%rcx
654b(3): mov %rbx,%rax
654e(2): jnz 0x16(%rip)
6550(4): add $0x10,%rsp
6554(1): pop %rbx
6555(1): ret near (%rsp)
6556(a): nop 0x0(%rax,%rax,1)
6560(2): xor %ebx,%ebx
6562(2): jmp 0xffffffdb(%rip)
6564(5): call 0xffffb9bc(%rip)

"hash_delete" :
6570(2): push %r12
6572(1): push %rbp
6573(5): mov $0x1,%ecx
6578(1): push %rbx
6579(3): mov %rdi,%rbx
657c(4): sub $0x10,%rsp
6580(3): mov %rsp,%rdx
6583(9): mov $0x28,%rax
658c(5): mov %rax,0x8(%rsp)
6591(2): xor %eax,%eax
6593(5): call 0xffffeffd(%rip)
6598(3): test %rax,%rax
659b(3): mov %rax,%rbp
659e(2): jz 0x11(%rip)
65a0(4): mov (%rsp),%rax
65a4(5): sub $0x1,0x20(%rbx)
65a9(4): cmp $0x0,(%rax)
65ad(2): jz 0x23(%rip)
65af(5): mov 0x8(%rsp),%rcx
65b4(9): xor $0x28,%rcx
65bd(3): mov %rbp,%rax
65c0(6): jnz 0x1ae(%rip)
65c6(4): add $0x10,%rsp
65ca(1): pop %rbx
65cb(1): pop %rbp
65cc(2): pop %r12
65ce(1): ret near (%rsp)
65cf(1): nop 
65d0(4): mov 0x18(%rbx),%rax
65d4(4): sub $0x1,%rax
65d8(3): test %rax,%rax
65db(4): mov %rax,0x18(%rbx)
65df(6): js 0x101(%rip)
65e5(4): pxor %xmm0,%xmm0
65e9(5): cvtsi2ss %rax,%xmm0
65ee(4): mov 0x10(%rbx),%rax
65f2(4): mov 0x28(%rbx),%rdx
65f6(3): test %rax,%rax
65f9(6): js 0xc7(%rip)
65ff(4): pxor %xmm1,%xmm1
6603(5): cvtsi2ss %rax,%xmm1
6608(4): mulss (%rdx),%xmm1
660c(3): ucomiss %xmm0,%xmm1
660f(2): jbe 0xffffffa0(%rip)
6611(4): lea 0x28(%rbx),%rdi
6615(5): call 0xfffff09b(%rip)
661a(4): mov 0x10(%rbx),%rax
661e(4): mov 0x28(%rbx),%rdx
6622(3): test %rax,%rax
6625(6): js 0x12b(%rip)
662b(4): pxor %xmm0,%xmm0
662f(5): cvtsi2ss %rax,%xmm0
6634(4): mov 0x18(%rbx),%rax
6638(3): test %rax,%rax
663b(6): js 0xf5(%rip)
6641(4): pxor %xmm1,%xmm1
6645(5): cvtsi2ss %rax,%xmm1
664a(4): movss (%rdx),%xmm2
664e(4): mulss %xmm0,%xmm2
6652(3): ucomiss %xmm1,%xmm2
6655(6): jbe 0xffffff5a(%rip)
665b(4): cmp $0x0,0x10(%rdx)
665f(5): mulss 0x4(%rdx),%xmm0
6664(6): jz 0xbc(%rip)
666a(7): ucomiss 0x5a5f(%rip),%xmm0
6671(6): jnb 0x8f(%rip)
6677(5): cvttss2si %xmm0,%rsi
667c(3): mov %rbx,%rdi
667f(5): call 0xfffff9c1(%rip)
6684(2): test %al,%al
6686(6): jnz 0xffffff29(%rip)
668c(4): mov 0x48(%rbx),%rdi
6690(3): test %rdi,%rdi
6693(2): jz 0x16(%rip)
6695(3): nop (%rax)
6698(4): mov 0x8(%rdi),%r12
669c(5): call 0xffffb714(%rip)
66a1(3): test %r12,%r12
66a4(3): mov %r12,%rdi
66a7(2): jnz 0xfffffff1(%rip)
66a9(8): mov $0x0,0x48(%rbx)
66b1(5): jmp 0xfffffefe(%rip)
66b6(a): nop 0x0(%rax,%rax,1)
66c0(3): mov %rax,%rcx
66c3(4): pxor %xmm1,%xmm1
66c7(3): shr $0x1,%rcx
66ca(3): and $0x1,%eax
66cd(3): or %rax,%rcx
66d0(5): cvtsi2ss %rcx,%xmm1
66d5(4): addss %xmm1,%xmm1
66d9(5): jmp 0xffffff2f(%rip)
66de(2): nop 
66e0(3): mov %rax,%rdx
66e3(4): pxor %xmm0,%xmm0
66e7(3): shr $0x1,%rdx
66ea(3): and $0x1,%eax
66ed(3): or %rax,%rdx
66f0(5): cvtsi2ss %rdx,%xmm0
66f5(4): addss %xmm0,%xmm0
66f9(5): jmp 0xfffffef5(%rip)
66fe(2): nop 
6700(8): subss 0x59c8(%rip),%xmm0
6708(a): mov $0x-9223372036854775808,%rax
6712(5): cvttss2si %xmm0,%rsi
6717(3): xor %rax,%rsi
671a(5): jmp 0xffffff62(%rip)
671f(1): nop 
6720(5): mulss 0x8(%rdx),%xmm0
6725(5): jmp 0xffffff45(%rip)
672a(6): nop 0x0(%rax,%rax,1)
6730(3): mov %rax,%rcx
6733(4): pxor %xmm1,%xmm1
6737(3): shr $0x1,%rcx
673a(3): and $0x1,%eax
673d(3): or %rax,%rcx
6740(5): cvtsi2ss %rcx,%xmm1
6745(4): addss %xmm1,%xmm1
6749(5): jmp 0xffffff01(%rip)
674e(2): nop 
6750(3): mov %rax,%rcx
6753(4): pxor %xmm0,%xmm0
6757(3): shr $0x1,%rcx
675a(3): and $0x1,%eax
675d(3): or %rax,%rcx
6760(5): cvtsi2ss %rcx,%xmm0
6765(4): addss %xmm0,%xmm0
6769(5): jmp 0xfffffecb(%rip)
676e(5): call 0xffffb7b2(%rip)

"triple_hash" :
6780(1): push %rbp
6781(1): push %rbx
6782(3): mov %rdi,%rbp
6785(3): mov %rsi,%rbx
6788(4): sub $0x8,%rsp
678c(3): mov (%rdi),%rdi
678f(5): call 0x36a1(%rip)
6794(4): xor 0x8(%rbp),%rax
6798(2): xor %edx,%edx
679a(4): add $0x8,%rsp
679e(3): div %rbx,%rax
67a1(1): pop %rbx
67a2(1): pop %rbp
67a3(3): mov %rdx,%rax
67a6(1): ret near (%rsp)

"triple_hash_no_name" :
67b0(4): mov 0x8(%rdi),%rax
67b4(2): xor %edx,%edx
67b6(3): div %rsi,%rax
67b9(3): mov %rdx,%rax
67bc(1): ret near (%rsp)

"triple_compare" :
67c0(2): xor %eax,%eax
67c2(4): mov 0x8(%rsi),%rdx
67c6(4): cmp %rdx,0x8(%rdi)
67ca(2): jz 0x6(%rip)
67cc(2): REP ret near (%rsp)
67ce(2): nop 
67d0(4): mov 0x10(%rsi),%rcx
67d4(4): cmp %rcx,0x10(%rdi)
67d8(2): jnz 0xfffffff4(%rip)
67da(4): sub $0x8,%rsp
67de(3): mov (%rsi),%rsi
67e1(3): mov (%rdi),%rdi
67e4(5): call 0x22cc(%rip)
67e9(4): add $0x8,%rsp
67ed(1): ret near (%rsp)

"triple_compare_ino_str" :
67f0(2): xor %eax,%eax
67f2(4): mov 0x8(%rsi),%rdx
67f6(4): cmp %rdx,0x8(%rdi)
67fa(2): jz 0x6(%rip)
67fc(2): REP ret near (%rsp)
67fe(2): nop 
6800(4): mov 0x10(%rsi),%rcx
6804(4): cmp %rcx,0x10(%rdi)
6808(2): jnz 0xfffffff4(%rip)
680a(4): sub $0x8,%rsp
680e(3): mov (%rsi),%rsi
6811(3): mov (%rdi),%rdi
6814(5): call 0xffffb84c(%rip)
6819(2): test %eax,%eax
681b(3): setz %al
681e(4): add $0x8,%rsp
6822(1): ret near (%rsp)

"triple_free" :
6830(1): push %rbx
6831(3): mov %rdi,%rbx
6834(3): mov (%rdi),%rdi
6837(5): call 0xffffb579(%rip)
683c(3): mov %rbx,%rdi
683f(1): pop %rbx
6840(5): jmp 0xffffb570(%rip)

"openat_safer" :
6850(4): sub $0x58,%rsp
6854(5): mov %rcx,0x38(%rsp)
6859(2): xor %ecx,%ecx
685b(9): mov $0x28,%rax
6864(5): mov %rax,0x18(%rsp)
6869(2): xor %eax,%eax
686b(3): test $0x40,%dl
686e(2): jnz 0x2a(%rip)
6870(2): xor %eax,%eax
6872(5): call 0xffffb69e(%rip)
6877(2): mov %eax,%edi
6879(5): call 0x2537(%rip)
687e(5): mov 0x18(%rsp),%rsi
6883(9): xor $0x28,%rsi
688c(2): jnz 0x2d(%rip)
688e(4): add $0x58,%rsp
6892(1): ret near (%rsp)
6893(5): nop 0x0(%rax,%rax,1)
6898(5): lea 0x60(%rsp),%rax
689d(7): mov $0x18,(%rsp)
68a4(4): mov 0x38(%rsp),%ecx
68a8(5): mov %rax,0x8(%rsp)
68ad(5): lea 0x20(%rsp),%rax
68b2(5): mov %rax,0x10(%rsp)
68b7(2): jmp 0xffffffb9(%rip)
68b9(5): call 0xffffb667(%rip)

"opendirat" :
68c0(2): push %r13
68c2(2): push %r12
68c4(6): or $0x90900,%edx
68ca(1): push %rbp
68cb(1): push %rbx
68cc(2): xor %eax,%eax
68ce(3): mov %rcx,%r12
68d1(4): sub $0x8,%rsp
68d5(5): call 0xffffff7b(%rip)
68da(2): test %eax,%eax
68dc(2): js 0x54(%rip)
68de(2): mov %eax,%edi
68e0(2): mov %eax,%ebx
68e2(5): call 0xffffb91e(%rip)
68e7(3): test %rax,%rax
68ea(3): mov %rax,%rbp
68ed(2): jz 0x1b(%rip)
68ef(4): mov %ebx,(%r12)
68f3(4): add $0x8,%rsp
68f7(3): mov %rbp,%rax
68fa(1): pop %rbx
68fb(1): pop %rbp
68fc(2): pop %r12
68fe(2): pop %r13
6900(1): ret near (%rsp)
6901(7): nop 0x0(%rax)
6908(5): call 0xffffb4c8(%rip)
690d(3): mov (%rax),%r13d
6910(3): mov %rax,%r12
6913(2): mov %ebx,%edi
6915(5): call 0xffffb6cb(%rip)
691a(3): mov %rbp,%rax
691d(4): mov %r13d,(%r12)
6921(4): add $0x8,%rsp
6925(1): pop %rbx
6926(1): pop %rbp
6927(2): pop %r12
6929(2): pop %r13
692b(1): ret near (%rsp)
692c(4): nop 0x0(%rax)
6930(4): add $0x8,%rsp
6934(2): xor %ebp,%ebp
6936(1): pop %rbx
6937(3): mov %rbp,%rax
693a(1): pop %rbp
693b(2): pop %r12
693d(2): pop %r13
693f(1): ret near (%rsp)

"set_program_name" :
6940(3): test %rdi,%rdi
6943(1): push %rbx
6944(2): jz 0x79(%rip)
6946(5): mov $0x2f,%esi
694b(3): mov %rdi,%rbx
694e(5): call 0xffffb632(%rip)
6953(3): test %rax,%rax
6956(2): jz 0x57(%rip)
6958(4): lea 0x1(%rax),%r8
695c(3): mov %r8,%rdx
695f(3): sub %rbx,%rdx
6962(4): cmp $0x6,%rdx
6966(2): jle 0x47(%rip)
6968(4): lea 0xfffffffa(%rax),%rsi
696c(7): lea 0x57a5(%rip),%rdi
6973(5): mov $0x7,%ecx
6978(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
697a(3): setnbe %dl
697d(3): sbb $0x0,%dl
6980(2): test %dl,%dl
6982(2): jnz 0x2b(%rip)
6984(7): lea 0x5795(%rip),%rdi
698b(5): mov $0x3,%ecx
6990(3): mov %r8,%rsi
6993(3): mov %r8,%rbx
6996(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6998(3): setnbe %dl
699b(3): sbb $0x0,%dl
699e(2): test %dl,%dl
69a0(2): jnz 0xd(%rip)
69a2(4): lea 0x4(%rax),%rbx
69a6(7): mov %rbx,0x209713(%rip)
69ad(7): mov %rbx,0x209794(%rip)
69b4(7): mov %rbx,0x20972d(%rip)
69bb(1): pop %rbx
69bc(1): ret near (%rsp)
69bd(7): mov 0x20973c(%rip),%rcx
69c4(7): lea 0x5715(%rip),%rdi
69cb(5): mov $0x37,%edx
69d0(5): mov $0x1,%esi
69d5(5): call 0xffffb87b(%rip)
69da(5): call 0xffffb3e6(%rip)

"gettext_quote.part.1" :
69e0(1): push %rbp
69e1(1): push %rbx
69e2(3): mov %rdi,%rbp
69e5(2): mov %esi,%ebx
69e7(4): sub $0x8,%rsp
69eb(5): call 0x3485(%rip)
69f0(3): movzx (%rax),%edx
69f3(3): and $0xdf,%edx
69f6(3): cmp $0x55,%dl
69f9(2): jz 0x77(%rip)
69fb(3): cmp $0x47,%dl
69fe(2): jz 0x22(%rip)
6a00(7): lea 0x572c(%rip),%rax
6a07(7): lea 0x5727(%rip),%rdx
6a0e(3): cmp $0x9,%ebx
6a11(4): cmovne %rdx,%rax
6a15(4): add $0x8,%rsp
6a19(1): pop %rbx
6a1a(1): pop %rbp
6a1b(1): ret near (%rsp)
6a1c(4): nop 0x0(%rax)
6a20(4): movzx 0x1(%rax),%edx
6a24(3): and $0xdf,%edx
6a27(3): cmp $0x42,%dl
6a2a(2): jnz 0xffffffd6(%rip)
6a2c(4): cmp $0x31,0x2(%rax)
6a30(2): jnz 0xffffffd0(%rip)
6a32(4): cmp $0x38,0x3(%rax)
6a36(2): jnz 0xffffffca(%rip)
6a38(4): cmp $0x30,0x4(%rax)
6a3c(2): jnz 0xffffffc4(%rip)
6a3e(4): cmp $0x33,0x5(%rax)
6a42(2): jnz 0xffffffbe(%rip)
6a44(4): cmp $0x30,0x6(%rax)
6a48(2): jnz 0xffffffb8(%rip)
6a4a(4): cmp $0x0,0x7(%rax)
6a4e(2): jnz 0xffffffb2(%rip)
6a50(4): cmp $0x60,0x0(%rbp)
6a54(7): lea 0x56d1(%rip),%rax
6a5b(7): lea 0x56ce(%rip),%rdx
6a62(4): cmovne %rdx,%rax
6a66(4): add $0x8,%rsp
6a6a(1): pop %rbx
6a6b(1): pop %rbp
6a6c(1): ret near (%rsp)
6a6d(3): nop (%rax)
6a70(4): movzx 0x1(%rax),%edx
6a74(3): and $0xdf,%edx
6a77(3): cmp $0x54,%dl
6a7a(2): jnz 0xffffff86(%rip)
6a7c(4): movzx 0x2(%rax),%edx
6a80(3): and $0xdf,%edx
6a83(3): cmp $0x46,%dl
6a86(6): jnz 0xffffff7a(%rip)
6a8c(4): cmp $0x2d,0x3(%rax)
6a90(6): jnz 0xffffff70(%rip)
6a96(4): cmp $0x38,0x4(%rax)
6a9a(6): jnz 0xffffff66(%rip)
6aa0(4): cmp $0x0,0x5(%rax)
6aa4(6): jnz 0xffffff5c(%rip)
6aaa(4): cmp $0x60,0x0(%rbp)
6aae(7): lea 0x566f(%rip),%rax
6ab5(7): lea 0x566c(%rip),%rdx
6abc(4): cmovne %rdx,%rax
6ac0(4): add $0x8,%rsp
6ac4(1): pop %rbx
6ac5(1): pop %rbp
6ac6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
6ad0(2): push %r15
6ad2(2): push %r14
6ad4(3): mov %r8d,%r15d
6ad7(2): push %r13
6ad9(2): push %r12
6adb(3): mov %rdi,%r14
6ade(1): push %rbp
6adf(1): push %rbx
6ae0(3): mov %r9d,%ebx
6ae3(3): mov %rsi,%r13
6ae6(3): mov %rcx,%rbp
6ae9(3): and $0x2,%ebx
6aec(7): sub $0xb8,%rsp
6af3(8): mov 0xf0(%rsp),%rax
6afb(5): mov %rdx,0x10(%rsp)
6b00(5): mov %r8d,0x8(%rsp)
6b05(5): mov %r9d,0x78(%rsp)
6b0a(5): mov %rax,0x20(%rsp)
6b0f(8): mov 0xf8(%rsp),%rax
6b17(5): mov %rax,0x68(%rsp)
6b1c(8): mov 0x100(%rsp),%rax
6b24(5): mov %rax,0x60(%rsp)
6b29(9): mov $0x28,%rax
6b32(8): mov %rax,0xa8(%rsp)
6b3a(2): xor %eax,%eax
6b3c(5): call 0xffffb3a4(%rip)
6b41(4): cmp $0xa,%r15d
6b45(5): mov %rax,0x58(%rsp)
6b4a(6): jnbe 0x11b5(%rip)
6b50(7): lea 0x5649(%rip),%rcx
6b57(3): mov %r15d,%edx
6b5a(4): movsxd 0x0(%rcx,%rdx,4),%rax
6b5e(3): add %rcx,%rax
6b61(2): jmp %rax
6b63(5): mov $0x1,0xe(%rsp)
6b68(5): mov $0x0,0x7c(%rsp)
6b6d(3): xor %r12d,%r12d
6b70(9): mov $0x0,0x50(%rsp)
6b79(5): mov $0x1,0xf(%rsp)
6b7e(5): mov $0x0,0xd(%rsp)
6b83(7): lea 0x55ab(%rip),%rax
6b8a(9): mov $0x1,0x18(%rsp)
6b93(3): xor %r15d,%r15d
6b96(8): mov $0x2,0x8(%rsp)
6b9e(5): mov %rax,0x48(%rsp)
6ba3(3): xor %r11d,%r11d
6ba6(3): mov %rbp,%rax
6ba9(3): mov %r12d,%r8d
6bac(3): mov %r11,%rbp
6baf(3): mov %rax,%r11
6bb2(6): nop 0x0(%rax,%rax,1)
6bb8(3): cmp %rbp,%r11
6bbb(4): setnz %r12b
6bbf(4): cmp $0xffffffff,%r11
6bc3(2): jnz 0xf(%rip)
6bc5(5): mov 0x10(%rsp),%rax
6bca(4): cmp $0x0,0x0(%rax,%rbp,1)
6bce(4): setnz %r12b
6bd2(3): test %r12b,%r12b
6bd5(6): jz 0x65b(%rip)
6bdb(5): cmp $0x2,0x8(%rsp)
6be0(5): mov 0x10(%rsp),%rdi
6be5(4): lea 0x0(%rdi,%rbp,1),%r9
6be9(3): setnz %al
6bec(4): and 0xd(%rsp),%al
6bf0(3): mov %eax,%r10d
6bf3(6): jz 0xad(%rip)
6bf9(5): mov 0x18(%rsp),%rax
6bfe(3): test %rax,%rax
6c01(6): jz 0x42f(%rip)
6c07(4): cmp $0xffffffff,%r11
6c0b(5): lea 0x0(%rbp,%rax,1),%rbx
6c10(2): jnz 0x30(%rip)
6c12(4): cmp $0x1,%rax
6c16(2): jbe 0x2a(%rip)
6c18(5): mov %r8b,0x38(%rsp)
6c1d(5): mov %r10b,0x30(%rsp)
6c22(5): mov %r9,0x28(%rsp)
6c27(5): call 0xffffb2c9(%rip)
6c2c(6): movzx 0x38(%rsp),%r8d
6c32(6): movzx 0x30(%rsp),%r10d
6c38(3): mov %rax,%r11
6c3b(5): mov 0x28(%rsp),%r9
6c40(3): cmp %r11,%rbx
6c43(5): mov %r10b,0x28(%rsp)
6c48(6): jnbe 0x5b8(%rip)
6c4e(5): mov 0x18(%rsp),%rdx
6c53(5): mov 0x48(%rsp),%rsi
6c58(3): mov %r9,%rdi
6c5b(5): mov %r11,0x40(%rsp)
6c60(5): mov %r8b,0x38(%rsp)
6c65(5): mov %r9,0x30(%rsp)
6c6a(5): call 0xffffb3b6(%rip)
6c6f(2): test %eax,%eax
6c71(5): mov 0x30(%rsp),%r9
6c76(6): movzx 0x38(%rsp),%r8d
6c7c(5): mov 0x40(%rsp),%r11
6c81(6): jnz 0x57f(%rip)
6c87(5): cmp $0x0,0xf(%rsp)
6c8c(6): movzx 0x28(%rsp),%r10d
6c92(6): jnz 0xf83(%rip)
6c98(8): nop 0x0(%rax,%rax,1)
6ca0(4): movzx (%r9),%ebx
6ca4(3): cmp $0x7e,%bl
6ca7(6): jnbe 0x321(%rip)
6cad(7): lea 0x5518(%rip),%rcx
6cb4(3): movzx %bl,%edx
6cb7(4): movsxd 0x0(%rcx,%rdx,4),%rax
6cbb(3): add %rcx,%rax
6cbe(2): jmp %rax
6cc0(3): xor %r10d,%r10d
6cc3(4): cmp $0x1,%r11
6cc7(3): setnz %al
6cca(4): cmp $0xffffffff,%r11
6cce(2): jnz 0xe(%rip)
6cd0(5): mov 0x10(%rsp),%rax
6cd5(4): cmp $0x0,0x1(%rax)
6cd9(3): setnz %al
6cdc(5): cmp $0x2,0x8(%rsp)
6ce1(3): setz %dl
6ce4(2): test %al,%al
6ce6(6): jz 0x252(%rip)
6cec(3): xor %r12d,%r12d
6cef(2): xor %eax,%eax
6cf1(7): nop 0x0(%rax)
6cf8(5): cmp $0x1,0xd(%rsp)
6cfd(6): jnz 0x115(%rip)
6d03(2): test %dl,%dl
6d05(6): jnz 0x10d(%rip)
6d0b(5): mov 0x20(%rsp),%rsi
6d10(3): test %rsi,%rsi
6d13(2): jz 0x16(%rip)
6d15(2): mov %ebx,%edx
6d17(3): shr $0x5,%dl
6d1a(3): movzx %dl,%edx
6d1d(3): mov 0x0(%rsi,%rdx,4),%edx
6d20(3): bt %ebx,%edx
6d23(6): jb 0x150(%rip)
6d29(3): test %r10b,%r10b
6d2c(6): jnz 0x147(%rip)
6d32(3): xor $0x1,%eax
6d35(4): add $0x1,%rbp
6d39(3): and %r8d,%eax
6d3c(2): test %al,%al
6d3e(2): jz 0x22(%rip)
6d40(3): cmp %r15,%r13
6d43(2): jbe 0x7(%rip)
6d45(5): mov $0x27,0x0(%r14,%r15,1)
6d4a(4): lea 0x1(%r15),%rax
6d4e(3): cmp %rax,%r13
6d51(2): jbe 0x8(%rip)
6d53(6): mov $0x27,0x1(%r14,%r15,1)
6d59(4): add $0x2,%r15
6d5d(3): xor %r8d,%r8d
6d60(3): cmp %r13,%r15
6d63(2): jnb 0x6(%rip)
6d65(4): mov %bl,0x0(%r14,%r15,1)
6d69(5): movzx 0xe(%rsp),%edi
6d6e(4): add $0x1,%r15
6d72(5): mov $0x0,%eax
6d77(3): test %r12b,%r12b
6d7a(3): cmove %eax,%edi
6d7d(5): mov %dil,0xe(%rsp)
6d82(5): jmp 0xfffffe36(%rip)
6d87(9): nop 0x0(%rax,%rax,1)
6d90(3): xor %r10d,%r10d
6d93(4): mov 0x8(%rsp),%eax
6d97(3): cmp $0x2,%eax
6d9a(6): jz 0x5be(%rip)
6da0(3): cmp $0x5,%eax
6da3(6): jz 0x575(%rip)
6da9(3): cmp $0x2,%eax
6dac(5): mov $0x3f,%ebx
6db1(3): setz %dl
6db4(3): xor %r12d,%r12d
6db7(2): xor %eax,%eax
6db9(5): jmp 0xffffff3f(%rip)
6dbe(2): nop 
6dc0(3): xor %r10d,%r10d
6dc3(5): cmp $0x2,0x8(%rsp)
6dc8(6): jz 0x508(%rip)
6dce(5): mov %r12b,0x7c(%rsp)
6dd3(2): xor %edx,%edx
6dd5(2): xor %eax,%eax
6dd7(5): mov $0x27,%ebx
6ddc(5): jmp 0xffffff1c(%rip)
6de1(7): nop 0x0(%rax)
6de8(5): mov $0x9,%edx
6ded(5): mov $0x74,%ebx
6df2(5): cmp $0x2,0x8(%rsp)
6df7(3): setz %al
6dfa(4): and 0xf(%rsp),%al
6dfe(6): jnz 0x150(%rip)
6e04(5): cmp $0x0,0xd(%rsp)
6e09(2): jnz 0x67(%rip)
6e0b(2): mov %edx,%ebx
6e0d(3): xor %r12d,%r12d
6e10(2): xor %eax,%eax
6e12(5): cmp $0x0,0xf(%rsp)
6e17(6): jnz 0xfffffef4(%rip)
6e1d(5): jmp 0xffffff0c(%rip)
6e22(6): nop 0x0(%rax,%rax,1)
6e28(5): mov $0x8,%edx
6e2d(5): mov $0x62,%ebx
6e32(2): jmp 0xffffffd2(%rip)
6e34(4): nop 0x0(%rax)
6e38(5): cmp $0x2,0x8(%rsp)
6e3d(6): jz 0x3d3(%rip)
6e43(5): cmp $0x0,0xd(%rsp)
6e48(6): jz 0x218(%rip)
6e4e(5): cmp $0x0,0xf(%rsp)
6e53(6): jz 0x20d(%rip)
6e59(6): cmp $0x0,0x18(%rsp)
6e5f(6): jnz 0x3bc(%rip)
6e65(5): mov $0x5c,%ebx
6e6a(6): nop 0x0(%rax,%rax,1)
6e70(3): xor %r12d,%r12d
6e73(5): cmp $0x2,0x8(%rsp)
6e78(3): setz %dl
6e7b(5): cmp $0x0,0xf(%rsp)
6e80(2): mov %edx,%eax
6e82(6): jnz 0x856(%rip)
6e88(3): mov %r8d,%eax
6e8b(3): xor $0x1,%eax
6e8e(2): and %dl,%al
6e90(2): jz 0x31(%rip)
6e92(3): cmp %r15,%r13
6e95(2): jbe 0x7(%rip)
6e97(5): mov $0x27,0x0(%r14,%r15,1)
6e9c(4): lea 0x1(%r15),%rdx
6ea0(3): cmp %rdx,%r13
6ea3(2): jbe 0x8(%rip)
6ea5(6): mov $0x24,0x1(%r14,%r15,1)
6eab(4): lea 0x2(%r15),%rdx
6eaf(3): cmp %rdx,%r13
6eb2(2): jbe 0x8(%rip)
6eb4(6): mov $0x27,0x2(%r14,%r15,1)
6eba(4): add $0x3,%r15
6ebe(3): mov %eax,%r8d
6ec1(3): cmp %r15,%r13
6ec4(2): jbe 0x7(%rip)
6ec6(5): mov $0x5c,0x0(%r14,%r15,1)
6ecb(4): add $0x1,%r15
6ecf(4): add $0x1,%rbp
6ed3(5): jmp 0xfffffe8d(%rip)
6ed8(8): nop 0x0(%rax,%rax,1)
6ee0(5): cmp $0x0,0xd(%rsp)
6ee5(6): jnz 0x1ce(%rip)
6eeb(2): xor %edx,%edx
6eed(5): test $0x1,0x78(%rsp)
6ef2(6): jz 0xffffff19(%rip)
6ef8(4): add $0x1,%rbp
6efc(5): jmp 0xfffffcbc(%rip)
6f01(7): nop 0x0(%rax)
6f08(5): cmp $0x2,0x8(%rsp)
6f0d(3): setz %dl
6f10(2): xor %eax,%eax
6f12(5): jmp 0xfffffde6(%rip)
6f17(9): nop 0x0(%rax,%rax,1)
6f20(5): mov $0x7,%edx
6f25(5): mov $0x61,%ebx
6f2a(5): jmp 0xfffffeda(%rip)
6f2f(1): nop 
6f30(5): cmp $0x2,0x8(%rsp)
6f35(3): setz %dl
6f38(3): test %rbp,%rbp
6f3b(6): jnz 0xfffffdb1(%rip)
6f41(5): movzx 0xf(%rsp),%eax
6f46(2): and %dl,%al
6f48(6): jz 0xfffffdb0(%rip)
6f4e(3): mov %r11,%rbp
6f51(8): mov $0x2,0x8(%rsp)
6f59(5): jmp 0x700(%rip)
6f5e(2): nop 
6f60(5): cmp $0x2,0x8(%rsp)
6f65(3): setz %dl
6f68(3): xor %r12d,%r12d
6f6b(2): jmp 0xffffffd6(%rip)
6f6d(3): nop (%rax)
6f70(5): cmp $0x2,0x8(%rsp)
6f75(5): mov $0x20,%ebx
6f7a(3): setz %dl
6f7d(2): jmp 0xffffffc4(%rip)
6f7f(1): nop 
6f80(5): mov $0xd,%edx
6f85(5): mov $0x72,%ebx
6f8a(5): jmp 0xfffffe68(%rip)
6f8f(1): nop 
6f90(5): mov $0xc,%edx
6f95(5): mov $0x66,%ebx
6f9a(5): jmp 0xfffffe6a(%rip)
6f9f(1): nop 
6fa0(5): mov $0xb,%edx
6fa5(5): mov $0x76,%ebx
6faa(5): jmp 0xfffffe5a(%rip)
6faf(1): nop 
6fb0(5): mov $0xa,%edx
6fb5(5): mov $0x6e,%ebx
6fba(5): jmp 0xfffffe38(%rip)
6fbf(1): nop 
6fc0(3): xor %r10d,%r10d
6fc3(5): nop 0x0(%rax,%rax,1)
6fc8(6): cmp $0x1,0x58(%rsp)
6fce(6): jnz 0x3aa(%rip)
6fd4(5): mov %r11,0x38(%rsp)
6fd9(5): mov %r8b,0x30(%rsp)
6fde(5): mov %r10b,0x28(%rsp)
6fe3(5): call 0xffffb2bd(%rip)
6fe8(3): mov (%rax),%rcx
6feb(3): movzx %bl,%edx
6fee(6): movzx 0x28(%rsp),%r10d
6ff4(6): movzx 0x30(%rsp),%r8d
6ffa(5): mov 0x38(%rsp),%r11
6fff(5): mov $0x1,%edi
7004(4): movzx 0x0(%rcx,%rdx,2),%eax
7008(4): and $0x4000,%ax
700c(4): setnz %r12b
7010(3): setz %al
7013(4): and 0xd(%rsp),%al
7017(2): test %al,%al
7019(6): jnz 0x998(%rip)
701f(5): cmp $0x2,0x8(%rsp)
7024(3): setz %dl
7027(5): jmp 0xfffffcd1(%rip)
702c(4): nop 0x0(%rax)
7030(4): movzx (%r9),%ebx
7034(3): cmp $0x7e,%bl
7037(2): jnbe 0xffffff89(%rip)
7039(7): lea 0x5388(%rip),%rcx
7040(3): movzx %bl,%edx
7043(4): movsxd 0x0(%rcx,%rdx,4),%rax
7047(3): add %rcx,%rax
704a(2): jmp %rax
704c(4): nop 0x0(%rax)
7050(3): xor %r10d,%r10d
7053(5): cmp $0x0,0xd(%rsp)
7058(6): jnz 0xfffffdf6(%rip)
705e(2): nop 
7060(5): mov $0x5c,%edx
7065(5): mov $0x5c,%ebx
706a(5): jmp 0xfffffd9a(%rip)
706f(1): nop 
7070(5): mov $0xc,%edx
7075(3): xor %r10d,%r10d
7078(5): mov $0x66,%ebx
707d(5): jmp 0xfffffd87(%rip)
7082(6): nop 0x0(%rax,%rax,1)
7088(5): mov $0xa,%edx
708d(3): xor %r10d,%r10d
7090(5): mov $0x6e,%ebx
7095(5): jmp 0xfffffd5d(%rip)
709a(6): nop 0x0(%rax,%rax,1)
70a0(5): mov $0x61,%ebx
70a5(5): jmp 0xfffffdcb(%rip)
70aa(6): nop 0x0(%rax,%rax,1)
70b0(3): xor %r10d,%r10d
70b3(5): cmp $0x2,0x8(%rsp)
70b8(3): setz %dl
70bb(5): cmp $0x0,0xf(%rsp)
70c0(6): jnz 0xb9a(%rip)
70c6(3): mov %r8d,%eax
70c9(3): mov %r15,%rcx
70cc(3): xor $0x1,%eax
70cf(2): and %dl,%al
70d1(2): jz 0x2f(%rip)
70d3(3): cmp %r15,%r13
70d6(2): jbe 0x7(%rip)
70d8(5): mov $0x27,0x0(%r14,%r15,1)
70dd(4): lea 0x1(%r15),%rcx
70e1(3): cmp %rcx,%r13
70e4(2): jbe 0x8(%rip)
70e6(6): mov $0x24,0x1(%r14,%r15,1)
70ec(4): lea 0x2(%r15),%rcx
70f0(3): cmp %rcx,%r13
70f3(6): jnbe 0x636(%rip)
70f9(4): lea 0x3(%r15),%rcx
70fd(3): mov %eax,%r8d
7100(3): cmp %rcx,%r13
7103(2): jbe 0x7(%rip)
7105(5): mov $0x5c,0x0(%r14,%rcx,1)
710a(5): cmp $0x2,0x8(%rsp)
710f(4): lea 0x1(%rcx),%r15
7113(6): jz 0x606(%rip)
7119(4): lea 0x1(%rbp),%rax
711d(3): cmp %r11,%rax
7120(2): jnb 0x1b(%rip)
7122(5): mov 0x10(%rsp),%rax
7127(5): movzx 0x1(%rax,%rbp,1),%eax
712c(4): mov %al,0x28(%rsp)
7130(3): sub $0x30,%eax
7133(2): cmp $0x9,%al
7135(6): jbe 0x834(%rip)
713b(3): mov %r12d,%eax
713e(5): mov $0x30,%ebx
7143(3): xor %r12d,%r12d
7146(5): jmp 0xfffffbb2(%rip)
714b(5): nop 0x0(%rax,%rax,1)
7150(5): cmp $0x2,0x8(%rsp)
7155(3): mov %r10d,%r12d
7158(3): setz %dl
715b(3): xor %r10d,%r10d
715e(2): xor %eax,%eax
7160(5): jmp 0xfffffb98(%rip)
7165(3): nop (%rax)
7168(5): cmp $0x2,0x8(%rsp)
716d(3): setz %dl
7170(3): xor %r10d,%r10d
7173(5): jmp 0xfffffdc5(%rip)
7178(8): nop 0x0(%rax,%rax,1)
7180(5): cmp $0x2,0x8(%rsp)
7185(3): setz %dl
7188(3): xor %r10d,%r10d
718b(3): xor %r12d,%r12d
718e(5): jmp 0xfffffdb3(%rip)
7193(5): nop 0x0(%rax,%rax,1)
7198(5): cmp $0x2,0x8(%rsp)
719d(3): mov %r10d,%r12d
71a0(5): mov $0x20,%ebx
71a5(3): setz %dl
71a8(3): xor %r10d,%r10d
71ab(5): jmp 0xfffffd96(%rip)
71b0(5): mov $0xd,%edx
71b5(3): xor %r10d,%r10d
71b8(5): mov $0x72,%ebx
71bd(5): jmp 0xfffffc35(%rip)
71c2(6): nop 0x0(%rax,%rax,1)
71c8(5): mov $0x76,%ebx
71cd(5): jmp 0xfffffca3(%rip)
71d2(6): nop 0x0(%rax,%rax,1)
71d8(5): mov $0x9,%edx
71dd(3): xor %r10d,%r10d
71e0(5): mov $0x74,%ebx
71e5(5): jmp 0xfffffc0d(%rip)
71ea(6): nop 0x0(%rax,%rax,1)
71f0(5): mov $0x62,%ebx
71f5(5): jmp 0xfffffc7b(%rip)
71fa(6): nop 0x0(%rax,%rax,1)
7200(3): xor %r10d,%r10d
7203(5): jmp 0xfffffa9d(%rip)
7208(8): nop 0x0(%rax,%rax,1)
7210(5): cmp $0x0,0xf(%rsp)
7215(6): jnz 0x96b(%rip)
721b(4): add $0x1,%rbp
721f(3): mov %r8d,%eax
7222(3): xor %r12d,%r12d
7225(5): mov $0x5c,%ebx
722a(5): jmp 0xfffffb12(%rip)
722f(1): nop 
7230(5): cmp $0x2,0x8(%rsp)
7235(5): movzx 0xf(%rsp),%ebx
723a(3): mov %r8d,%r12d
723d(3): mov %r11,%rbp
7240(3): setz %dl
7243(2): mov %ebx,%eax
7245(3): test %r15,%r15
7248(3): setz %cl
724b(2): and %edx,%eax
724d(2): and %cl,%al
724f(6): jnz 0xa67(%rip)
7255(2): mov %ebx,%eax
7257(3): xor $0x1,%eax
725a(2): and %al,%dl
725c(6): jz 0x970(%rip)
7262(5): cmp $0x0,0x7c(%rsp)
7267(6): jz 0x963(%rip)
726d(5): cmp $0x0,0xe(%rsp)
7272(6): jnz 0x9fb(%rip)
7278(3): test %r13,%r13
727b(3): setz %al
727e(6): cmp $0x0,0x50(%rsp)
7284(3): setnz %dl
7287(2): and %dl,%al
7289(6): jz 0xa23(%rip)
728f(5): mov 0x50(%rsp),%r13
7294(7): lea 0x4e9a(%rip),%rbx
729b(4): mov $0x27,(%r14)
729f(8): mov $0x2,0x8(%rsp)
72a7(6): mov $0x1,%r15d
72ad(9): mov $0x1,0x18(%rsp)
72b6(5): mov $0x0,0xf(%rsp)
72bb(5): mov %rbx,0x48(%rsp)
72c0(4): mov %al,0x7c(%rsp)
72c4(5): jmp 0xfffff8df(%rip)
72c9(7): nop 0x0(%rax)
72d0(5): cmp $0x0,0xf(%rsp)
72d5(6): jnz 0x8ab(%rip)
72db(3): test %r13,%r13
72de(6): jz 0x402(%rip)
72e4(2): xor %edx,%edx
72e6(6): cmp $0x0,0x50(%rsp)
72ec(6): jnz 0x3f4(%rip)
72f2(5): mov %r13,0x50(%rsp)
72f7(4): add $0x3,%r15
72fb(2): xor %eax,%eax
72fd(5): mov %r12b,0x7c(%rsp)
7302(3): xor %r8d,%r8d
7305(3): mov %rdx,%r13
7308(5): mov $0x27,%ebx
730d(5): jmp 0xfffffa1c(%rip)
7312(6): nop 0x0(%rax,%rax,1)
7318(5): test $0x4,0x78(%rsp)
731d(2): jz 0x23(%rip)
731f(4): lea 0x2(%rbp),%rcx
7323(3): cmp %r11,%rcx
7326(2): jnb 0x1a(%rip)
7328(5): mov 0x10(%rsp),%rax
732d(5): cmp $0x3f,0x1(%rax,%rbp,1)
7332(6): jz 0x790(%rip)
7338(8): nop 0x0(%rax,%rax,1)
7340(2): xor %edx,%edx
7342(3): xor %r12d,%r12d
7345(2): xor %eax,%eax
7347(5): mov $0x3f,%ebx
734c(5): jmp 0xfffff9ac(%rip)
7351(7): nop 0x0(%rax)
7358(5): cmp $0x0,0xf(%rsp)
735d(6): jnz 0x823(%rip)
7363(3): xor %r12d,%r12d
7366(2): xor %eax,%eax
7368(5): mov $0x3f,%ebx
736d(5): jmp 0xfffff9bc(%rip)
7372(6): nop 0x0(%rax,%rax,1)
7378(8): lea 0xa0(%rsp),%rax
7380(4): cmp $0xffffffff,%r11
7384(c): mov $0x0,0xa0(%rsp)
7390(5): mov %rax,0x28(%rsp)
7395(2): jnz 0x2f(%rip)
7397(5): mov 0x10(%rsp),%rdi
739c(5): mov %r8b,0x40(%rsp)
73a1(5): mov %r10b,0x38(%rsp)
73a6(5): mov %r9,0x30(%rsp)
73ab(5): call 0xffffab45(%rip)
73b0(6): movzx 0x40(%rsp),%r8d
73b6(6): movzx 0x38(%rsp),%r10d
73bc(3): mov %rax,%r11
73bf(5): mov 0x30(%rsp),%r9
73c4(8): lea 0x9c(%rsp),%rax
73cc(2): xor %ecx,%ecx
73ce(4): mov %bl,0x7e(%rsp)
73d2(5): mov %r8b,0x7d(%rsp)
73d7(3): mov %rcx,%rbx
73da(8): mov %r9,0x88(%rsp)
73e2(5): mov %rax,0x38(%rsp)
73e7(5): mov %r10b,0x7f(%rsp)
73ec(8): mov %r15,0x80(%rsp)
73f4(5): mov %r14,0x40(%rsp)
73f9(5): mov %r13,0x70(%rsp)
73fe(5): mov %r11,0x30(%rsp)
7403(5): mov 0x10(%rsp),%rax
7408(5): lea 0x0(%rbp,%rbx,1),%r14
740d(5): mov 0x30(%rsp),%rdx
7412(5): mov 0x28(%rsp),%rcx
7417(5): mov 0x38(%rsp),%rdi
741c(4): lea 0x0(%rax,%r14,1),%r13
7420(3): sub %r14,%rdx
7423(3): mov %r13,%rsi
7426(5): call 0x241a(%rip)
742b(3): test %rax,%rax
742e(3): mov %rax,%r15
7431(2): jz 0x50(%rip)
7433(4): cmp $0xffffffff,%rax
7437(6): jz 0x61e(%rip)
743d(4): cmp $0xfffffffe,%rax
7441(6): jz 0x5a0(%rip)
7447(5): cmp $0x2,0x8(%rsp)
744c(3): setz %al
744f(4): and 0xf(%rsp),%al
7453(6): jnz 0x19d(%rip)
7459(7): mov 0x9c(%rsp),%edi
7460(5): call 0xffffae30(%rip)
7465(5): mov 0x28(%rsp),%rdi
746a(2): test %eax,%eax
746c(5): mov $0x0,%eax
7471(4): cmove %eax,%r12d
7475(3): add %r15,%rbx
7478(5): call 0xffffadf8(%rip)
747d(2): test %eax,%eax
747f(2): jz 0xffffff84(%rip)
7481(3): mov %r12d,%edx
7484(3): mov %rbx,%rdi
7487(6): movzx 0x7d(%rsp),%r8d
748d(3): xor $0x1,%edx
7490(5): movzx 0x7e(%rsp),%ebx
7495(6): movzx 0x7f(%rsp),%r10d
749b(4): and 0xd(%rsp),%dl
749f(8): mov 0x80(%rsp),%r15
74a7(5): mov 0x40(%rsp),%r14
74ac(5): mov 0x70(%rsp),%r13
74b1(5): mov 0x30(%rsp),%r11
74b6(4): cmp $0x1,%rdi
74ba(6): jbe 0x601(%rip)
74c0(3): mov %rdi,%rcx
74c3(2): xor %esi,%esi
74c5(6): movzx 0xf(%rsp),%r9d
74cb(3): add %rbp,%rcx
74ce(5): mov 0x10(%rsp),%rdi
74d3(5): jmp 0xbb(%rip)
74d8(8): nop 0x0(%rax,%rax,1)
74e0(5): cmp $0x2,0x8(%rsp)
74e5(3): setz %al
74e8(3): test %r9b,%r9b
74eb(6): jnz 0x4b5(%rip)
74f1(3): mov %r8d,%esi
74f4(3): xor $0x1,%esi
74f7(3): and %sil,%al
74fa(2): jz 0x31(%rip)
74fc(3): cmp %r15,%r13
74ff(2): jbe 0x7(%rip)
7501(5): mov $0x27,0x0(%r14,%r15,1)
7506(4): lea 0x1(%r15),%rsi
750a(3): cmp %rsi,%r13
750d(2): jbe 0x8(%rip)
750f(6): mov $0x24,0x1(%r14,%r15,1)
7515(4): lea 0x2(%r15),%rsi
7519(3): cmp %rsi,%r13
751c(2): jbe 0x8(%rip)
751e(6): mov $0x27,0x2(%r14,%r15,1)
7524(4): add $0x3,%r15
7528(3): mov %eax,%r8d
752b(3): cmp %r15,%r13
752e(2): jbe 0x7(%rip)
7530(5): mov $0x5c,0x0(%r14,%r15,1)
7535(4): lea 0x1(%r15),%rax
7539(3): cmp %rax,%r13
753c(2): jbe 0xf(%rip)
753e(2): mov %ebx,%eax
7540(3): shr $0x6,%al
7543(3): add $0x30,%eax
7546(5): mov %al,0x1(%r14,%r15,1)
754b(4): lea 0x2(%r15),%rax
754f(3): cmp %rax,%r13
7552(2): jbe 0x12(%rip)
7554(2): mov %ebx,%eax
7556(3): shr $0x3,%al
7559(3): and $0x7,%eax
755c(3): add $0x30,%eax
755f(5): mov %al,0x2(%r14,%r15,1)
7564(3): and $0x7,%ebx
7567(4): add $0x1,%rbp
756b(4): add $0x3,%r15
756f(3): add $0x30,%ebx
7572(3): cmp %rcx,%rbp
7575(6): jnb 0xfffff7eb(%rip)
757b(2): mov %edx,%esi
757d(3): cmp %r15,%r13
7580(2): jbe 0x6(%rip)
7582(4): mov %bl,0x0(%r14,%r15,1)
7586(4): movzx 0x0(%rdi,%rbp,1),%ebx
758a(4): add $0x1,%r15
758e(2): test %dl,%dl
7590(6): jnz 0xffffff50(%rip)
7596(2): mov %esi,%eax
7598(3): xor $0x1,%eax
759b(3): and %r8d,%eax
759e(3): test %r10b,%r10b
75a1(2): jz 0x10(%rip)
75a3(3): cmp %r15,%r13
75a6(2): jbe 0x7(%rip)
75a8(5): mov $0x5c,0x0(%r14,%r15,1)
75ad(4): add $0x1,%r15
75b1(4): add $0x1,%rbp
75b5(3): cmp %rcx,%rbp
75b8(6): jnb 0xfffff784(%rip)
75be(2): test %al,%al
75c0(6): jz 0x3fe(%rip)
75c6(3): cmp %r15,%r13
75c9(2): jbe 0x7(%rip)
75cb(5): mov $0x27,0x0(%r14,%r15,1)
75d0(4): lea 0x1(%r15),%rax
75d4(3): cmp %rax,%r13
75d7(2): jbe 0x8(%rip)
75d9(6): mov $0x27,0x1(%r14,%r15,1)
75df(4): add $0x2,%r15
75e3(3): xor %r10d,%r10d
75e6(3): xor %r8d,%r8d
75e9(2): jmp 0xffffff94(%rip)
75eb(5): nop 0x0(%rax,%rax,1)
75f0(4): cmp $0x1,%r15
75f4(6): jz 0xfffffe65(%rip)
75fa(5): mov 0x10(%rsp),%rdi
75ff(4): lea 0x0(%rdi,%r15,1),%rcx
7603(5): lea 0x1(%rdi,%r14,1),%rdx
7608(4): lea 0x0(%rcx,%r14,1),%r8
760c(2): jmp 0x11(%rip)
760e(2): nop 
7610(4): add $0x1,%rdx
7614(3): cmp %rdx,%r8
7617(6): jz 0xfffffe42(%rip)
761d(3): movzx (%rdx),%ecx
7620(3): sub $0x5b,%ecx
7623(3): cmp $0x21,%cl
7626(2): jnbe 0xffffffea(%rip)
7628(5): mov $0x1,%esi
762d(3): shl/sal %cl,%rsi
7630(3): mov %rsi,%rcx
7633(a): mov $0x8589934635,%rsi
763d(3): test %rsi,%rcx
7640(2): jz 0xffffffd0(%rip)
7642(5): mov 0x40(%rsp),%r14
7647(5): mov 0x70(%rsp),%r13
764c(5): mov 0x30(%rsp),%rbp
7651(8): mov $0x2,0x8(%rsp)
7659(5): cmp $0x0,0xd(%rsp)
765e(2): jz 0x12(%rip)
7660(2): test %al,%al
7662(5): mov $0x4,%eax
7667(5): cmove 0x8(%rsp),%eax
766c(4): mov %eax,0x8(%rsp)
7670(4): sub $0x8,%rsp
7674(3): mov %rbp,%rcx
7677(3): mov %r13,%rsi
767a(4): push 0x68(%rsp)
767e(4): push 0x78(%rsp)
7682(3): mov %r14,%rdi
7685(2): push $0x0
7687(8): mov 0x98(%rsp),%r9d
768f(5): mov 0x28(%rsp),%r8d
7694(5): mov 0x30(%rsp),%rdx
7699(4): and $0xfd,%r9d
769d(5): call 0xfffff433(%rip)
76a2(4): add $0x20,%rsp
76a6(3): mov %rax,%r15
76a9(8): mov 0xa8(%rsp),%rbx
76b1(9): xor $0x28,%rbx
76ba(3): mov %r15,%rax
76bd(6): jnz 0x606(%rip)
76c3(7): add $0xb8,%rsp
76ca(1): pop %rbx
76cb(1): pop %rbp
76cc(2): pop %r12
76ce(2): pop %r13
76d0(2): pop %r14
76d2(2): pop %r15
76d4(1): ret near (%rsp)
76d5(3): nop (%rax)
76d8(3): mov %r11,%rbp
76db(5): jmp 0xffffff7e(%rip)
76e0(3): cmp %r15,%r13
76e3(2): jbe 0x7(%rip)
76e5(5): mov $0x27,0x0(%r14,%r15,1)
76ea(4): lea 0x1(%r15),%rax
76ee(3): cmp %rax,%r13
76f1(2): jbe 0x8(%rip)
76f3(6): mov $0x5c,0x1(%r14,%r15,1)
76f9(4): lea 0x2(%r15),%rax
76fd(3): cmp %rax,%r13
7700(6): jbe 0x5f2(%rip)
7706(3): mov %r13,%rdx
7709(6): mov $0x27,0x2(%r14,%r15,1)
770f(5): mov 0x50(%rsp),%r13
7714(5): jmp 0xfffffbde(%rip)
7719(3): mov %r12d,%eax
771c(5): mov $0x30,%ebx
7721(3): xor %r12d,%r12d
7724(5): jmp 0xfffff605(%rip)
7729(6): mov $0x27,0x2(%r14,%r15,1)
772f(5): jmp 0xfffff9ca(%rip)
7734(2): test %ebx,%ebx
7736(6): jnz 0xfffff42d(%rip)
773c(5): mov $0x1,0xd(%rsp)
7741(3): test %r13,%r13
7744(6): jnz 0x596(%rip)
774a(7): lea 0x49e4(%rip),%rax
7751(9): mov $0x0,0x50(%rsp)
775a(5): mov $0x1,0xe(%rsp)
775f(5): mov $0x0,0x7c(%rsp)
7764(3): xor %r12d,%r12d
7767(5): mov $0x0,0xf(%rsp)
776c(9): mov $0x1,0x18(%rsp)
7775(5): mov %rax,0x48(%rsp)
777a(6): mov $0x1,%r15d
7780(8): mov $0x2,0x8(%rsp)
7788(5): jmp 0xfffff41b(%rip)
778d(3): nop (%rax)
7790(2): test %ebx,%ebx
7792(6): jnz 0x3fb(%rip)
7798(3): test %r13,%r13
779b(6): jz 0x22b(%rip)
77a1(4): mov $0x22,(%r14)
77a5(5): mov $0x1,0xe(%rsp)
77aa(3): xor %r12d,%r12d
77ad(5): mov $0x0,0x7c(%rsp)
77b2(9): mov $0x0,0x50(%rsp)
77bb(7): lea 0x4971(%rip),%rax
77c2(5): mov $0x0,0xf(%rsp)
77c7(5): mov $0x1,0xd(%rsp)
77cc(9): mov $0x1,0x18(%rsp)
77d5(6): mov $0x1,%r15d
77db(5): mov %rax,0x48(%rsp)
77e0(5): jmp 0xfffff3c3(%rip)
77e5(7): lea 0x4947(%rip),%rax
77ec(5): mov $0x1,0xe(%rsp)
77f1(5): mov $0x0,0x7c(%rsp)
77f6(3): xor %r12d,%r12d
77f9(9): mov $0x0,0x50(%rsp)
7802(5): mov $0x1,0xf(%rsp)
7807(5): mov $0x1,0xd(%rsp)
780c(9): mov $0x1,0x18(%rsp)
7815(3): xor %r15d,%r15d
7818(5): mov %rax,0x48(%rsp)
781d(8): mov $0x5,0x8(%rsp)
7825(5): jmp 0xfffff37e(%rip)
782a(5): mov $0x1,0xe(%rsp)
782f(5): mov $0x0,0x7c(%rsp)
7834(3): xor %r12d,%r12d
7837(9): mov $0x0,0x50(%rsp)
7840(5): mov $0x0,0xf(%rsp)
7845(3): xor %r15d,%r15d
7848(5): mov $0x1,0xd(%rsp)
784d(9): mov $0x0,0x18(%rsp)
7856(9): mov $0x0,0x48(%rsp)
785f(5): jmp 0xfffff344(%rip)
7864(5): cmp $0xa,0x8(%rsp)
7869(2): jz 0x58(%rip)
786b(7): lea 0x48c5(%rip),%rsi
7872(2): xor %edi,%edi
7874(5): mov $0x5,%edx
7879(5): call 0xffffa657(%rip)
787e(3): mov %rax,%rcx
7881(5): mov %rax,0x68(%rsp)
7886(7): lea 0x48aa(%rip),%rax
788d(3): cmp %rax,%rcx
7890(6): jz 0x39e(%rip)
7896(7): lea 0x4898(%rip),%rsi
789d(2): xor %edi,%edi
789f(5): mov $0x5,%edx
78a4(5): call 0xffffa62c(%rip)
78a9(3): mov %rax,%rcx
78ac(5): mov %rax,0x60(%rsp)
78b1(7): lea 0x487d(%rip),%rax
78b8(3): cmp %rax,%rcx
78bb(6): jz 0x389(%rip)
78c1(3): xor %r15d,%r15d
78c4(2): test %ebx,%ebx
78c6(6): jz 0x1c7(%rip)
78cc(2): test %ebx,%ebx
78ce(5): mov 0x60(%rsp),%rbx
78d3(5): setnz 0xf(%rsp)
78d8(3): xor %r12d,%r12d
78db(3): mov %rbx,%rdi
78de(5): call 0xffffa612(%rip)
78e3(5): mov %rbx,0x48(%rsp)
78e8(5): mov %rax,0x18(%rsp)
78ed(5): mov $0x1,0xe(%rsp)
78f2(5): mov $0x0,0x7c(%rsp)
78f7(9): mov $0x0,0x50(%rsp)
7900(5): mov $0x1,0xd(%rsp)
7905(5): jmp 0xfffff29e(%rip)
790a(5): mov $0x1,0xe(%rsp)
790f(5): mov $0x0,0x7c(%rsp)
7914(3): xor %r12d,%r12d
7917(9): mov $0x0,0x50(%rsp)
7920(5): mov $0x0,0xf(%rsp)
7925(3): xor %r15d,%r15d
7928(5): mov $0x0,0xd(%rsp)
792d(9): mov $0x0,0x18(%rsp)
7936(9): mov $0x0,0x48(%rsp)
793f(5): jmp 0xfffff264(%rip)
7944(5): mov $0x1,0xe(%rsp)
7949(5): mov $0x0,0x7c(%rsp)
794e(3): xor %r12d,%r12d
7951(9): mov $0x0,0x50(%rsp)
795a(5): mov $0x1,0xf(%rsp)
795f(5): mov $0x1,0xd(%rsp)
7964(5): jmp 0xfffff21f(%rip)
7969(3): cmp %r15,%r13
796c(2): jbe 0x7(%rip)
796e(5): mov $0x30,0x0(%r14,%r15,1)
7973(4): lea 0x2(%rcx),%rax
7977(3): cmp %rax,%r13
797a(2): jbe 0x8(%rip)
797c(6): mov $0x30,0x2(%r14,%rcx,1)
7982(3): mov %r12d,%eax
7985(4): lea 0x3(%rcx),%r15
7989(3): xor %r12d,%r12d
798c(5): mov $0x30,%ebx
7991(5): jmp 0xfffff367(%rip)
7996(a): nop 0x0(%rax,%rax,1)
79a0(5): movzx 0xf(%rsp),%ebx
79a5(3): mov %r11,%rbp
79a8(4): mov %bl,0xd(%rsp)
79ac(5): jmp 0xfffffcad(%rip)
79b1(5): movzx 0xd(%rsp),%edx
79b6(3): xor %r12d,%r12d
79b9(5): jmp 0xfffffb07(%rip)
79be(3): xor %r10d,%r10d
79c1(5): jmp 0xfffffbbc(%rip)
79c6(9): mov $0x0,0x50(%rsp)
79cf(5): mov $0x1,0xe(%rsp)
79d4(3): xor %r12d,%r12d
79d7(5): mov $0x0,0x7c(%rsp)
79dc(5): jmp 0xfffffddf(%rip)
79e1(5): mov 0x30(%rsp),%r11
79e6(3): mov %r14,%rsi
79e9(3): mov %r13,%rcx
79ec(3): mov %rbx,%rax
79ef(3): mov %rbx,%rdi
79f2(6): movzx 0x7d(%rsp),%r8d
79f8(5): movzx 0x7e(%rsp),%ebx
79fd(8): mov 0x88(%rsp),%r9
7a05(3): cmp %r11,%rsi
7a08(6): movzx 0x7f(%rsp),%r10d
7a0e(8): mov 0x80(%rsp),%r15
7a16(5): mov 0x40(%rsp),%r14
7a1b(5): mov 0x70(%rsp),%r13
7a20(2): jnb 0x28(%rip)
7a22(3): cmp $0x0,(%rcx)
7a25(2): jnz 0x12(%rip)
7a27(2): jmp 0x21(%rip)
7a29(7): nop 0x0(%rax)
7a30(5): cmp $0x0,0x0(%r9,%rax,1)
7a35(2): jz 0x10(%rip)
7a37(4): add $0x1,%rax
7a3b(5): lea 0x0(%rbp,%rax,1),%rdx
7a40(3): cmp %rdx,%r11
7a43(2): jnbe 0xffffffed(%rip)
7a45(3): mov %rax,%rdi
7a48(5): movzx 0xd(%rsp),%edx
7a4d(3): xor %r12d,%r12d
7a50(5): jmp 0xfffffa66(%rip)
7a55(3): mov %rbx,%rdi
7a58(6): movzx 0x7d(%rsp),%r8d
7a5e(5): movzx 0x7e(%rsp),%ebx
7a63(6): movzx 0x7f(%rsp),%r10d
7a69(8): mov 0x80(%rsp),%r15
7a71(3): xor %r12d,%r12d
7a74(5): mov 0x40(%rsp),%r14
7a79(5): mov 0x70(%rsp),%r13
7a7e(5): mov 0x30(%rsp),%r11
7a83(5): movzx 0xd(%rsp),%edx
7a88(5): jmp 0xfffffa2e(%rip)
7a8d(5): mov 0x68(%rsp),%rdx
7a92(3): movzx (%rdx),%eax
7a95(2): test %al,%al
7a97(6): jz 0xfffffe35(%rip)
7a9d(3): nop (%rax)
7aa0(3): cmp %r15,%r13
7aa3(2): jbe 0x6(%rip)
7aa5(4): mov %al,0x0(%r14,%r15,1)
7aa9(4): add $0x1,%r15
7aad(5): movzx 0x0(%rdx,%r15,1),%eax
7ab2(2): test %al,%al
7ab4(2): jnz 0xffffffec(%rip)
7ab6(5): jmp 0xfffffe16(%rip)
7abb(2): mov %edx,%eax
7abd(5): jmp 0xfffff55a(%rip)
7ac2(4): movzx 0x0(%rax,%rcx,1),%ebx
7ac6(3): cmp $0x3e,%bl
7ac9(6): jnbe 0xfffff877(%rip)
7acf(a): mov $0x8070630310989004800,%rax
7ad9(4): bt %rbx,%rax
7add(6): jnb 0xfffff863(%rip)
7ae3(5): cmp $0x0,0xf(%rsp)
7ae8(6): jnz 0x1ea(%rip)
7aee(3): cmp %r15,%r13
7af1(2): jbe 0x7(%rip)
7af3(5): mov $0x3f,0x0(%r14,%r15,1)
7af8(4): lea 0x1(%r15),%rax
7afc(3): cmp %rax,%r13
7aff(2): jbe 0x8(%rip)
7b01(6): mov $0x22,0x1(%r14,%r15,1)
7b07(4): lea 0x2(%r15),%rax
7b0b(3): cmp %rax,%r13
7b0e(2): jbe 0x8(%rip)
7b10(6): mov $0x22,0x2(%r14,%r15,1)
7b16(4): lea 0x3(%r15),%rax
7b1a(3): cmp %rax,%r13
7b1d(2): jbe 0x8(%rip)
7b1f(6): mov $0x3f,0x3(%r14,%r15,1)
7b25(4): add $0x4,%r15
7b29(2): xor %edx,%edx
7b2b(3): xor %r12d,%r12d
7b2e(2): xor %eax,%eax
7b30(3): mov %rcx,%rbp
7b33(5): jmp 0xfffff1c5(%rip)
7b38(2): test %ebx,%ebx
7b3a(6): jz 0x18e(%rip)
7b40(7): lea 0x45ee(%rip),%rax
7b47(5): mov $0x1,0xe(%rsp)
7b4c(5): mov $0x0,0x7c(%rsp)
7b51(3): xor %r12d,%r12d
7b54(9): mov $0x0,0x50(%rsp)
7b5d(5): mov $0x1,0xf(%rsp)
7b62(5): mov $0x0,0xd(%rsp)
7b67(9): mov $0x1,0x18(%rsp)
7b70(3): xor %r15d,%r15d
7b73(5): mov %rax,0x48(%rsp)
7b78(5): jmp 0xfffff02b(%rip)
7b7d(3): nop (%rax)
7b80(3): mov %r11,%rbp
7b83(5): movzx 0xf(%rsp),%eax
7b88(5): jmp 0xfffffad1(%rip)
7b8d(7): lea 0x459f(%rip),%rax
7b94(5): mov $0x1,0xe(%rsp)
7b99(5): mov $0x0,0x7c(%rsp)
7b9e(3): xor %r12d,%r12d
7ba1(9): mov $0x0,0x50(%rsp)
7baa(5): mov $0x1,0xf(%rsp)
7baf(5): mov $0x1,0xd(%rsp)
7bb4(9): mov $0x1,0x18(%rsp)
7bbd(3): xor %r15d,%r15d
7bc0(5): mov %rax,0x48(%rsp)
7bc5(5): jmp 0xffffefde(%rip)
7bca(2): mov %edx,%eax
7bcc(5): mov 0x48(%rsp),%rbx
7bd1(3): test %rbx,%rbx
7bd4(2): jz 0x2e(%rip)
7bd6(2): test %al,%al
7bd8(2): jz 0x2a(%rip)
7bda(3): movzx (%rbx),%ecx
7bdd(3): mov %rbx,%rax
7be0(2): test %cl,%cl
7be2(2): jz 0x20(%rip)
7be4(3): mov %r15,%rdx
7be7(3): sub %r15,%rax
7bea(3): cmp %rdx,%r13
7bed(2): jbe 0x6(%rip)
7bef(4): mov %cl,0x0(%r14,%rdx,1)
7bf3(4): add $0x1,%rdx
7bf7(4): movzx 0x0(%rax,%rdx,1),%ecx
7bfb(2): test %cl,%cl
7bfd(2): jnz 0xffffffed(%rip)
7bff(3): mov %rdx,%r15
7c02(3): cmp %r15,%r13
7c05(6): jbe 0xfffffaa4(%rip)
7c0b(5): mov $0x0,0x0(%r14,%r15,1)
7c10(5): jmp 0xfffffa99(%rip)
7c15(5): cmp $0x2,0x8(%rsp)
7c1a(5): movzx 0xf(%rsp),%ebx
7c1f(3): mov %r11,%rbp
7c22(3): setz %al
7c25(4): mov %bl,0xd(%rsp)
7c29(5): jmp 0xfffffa30(%rip)
7c2e(4): mov 0x8(%rsp),%esi
7c32(3): mov %rcx,%rdi
7c35(5): call 0xffffedab(%rip)
7c3a(5): mov %rax,0x68(%rsp)
7c3f(5): jmp 0xfffffc57(%rip)
7c44(4): mov 0x8(%rsp),%esi
7c48(3): mov %rcx,%rdi
7c4b(5): call 0xffffed95(%rip)
7c50(5): mov %rax,0x60(%rsp)
7c55(5): jmp 0xfffffc6c(%rip)
7c5a(5): movzx 0xf(%rsp),%ebx
7c5f(3): mov %r11,%rbp
7c62(2): mov %edx,%eax
7c64(4): mov %bl,0xd(%rsp)
7c68(5): jmp 0xfffff9f1(%rip)
7c6d(4): sub $0x8,%rsp
7c71(6): mov $0x5,%r8d
7c77(3): mov %r11,%rcx
7c7a(4): push 0x68(%rsp)
7c7e(4): push 0x78(%rsp)
7c82(3): mov %r14,%rdi
7c85(4): push 0x38(%rsp)
7c89(8): mov 0x98(%rsp),%r9d
7c91(5): mov 0x30(%rsp),%rdx
7c96(5): mov 0x70(%rsp),%rsi
7c9b(5): call 0xffffee35(%rip)
7ca0(4): add $0x20,%rsp
7ca4(3): mov %rax,%r15
7ca7(5): jmp 0xfffffa02(%rip)
7cac(5): movzx 0x7c(%rsp),%eax
7cb1(5): jmp 0xffffff1b(%rip)
7cb6(8): mov $0x2,0x8(%rsp)
7cbe(5): jmp 0xfffff99b(%rip)
7cc3(5): call 0xffffa25d(%rip)
7cc8(5): mov $0x0,0xd(%rsp)
7ccd(5): jmp 0xfffffa74(%rip)
7cd2(3): mov %r11,%rbp
7cd5(5): jmp 0xfffff99b(%rip)
7cda(5): mov $0x1,0xe(%rsp)
7cdf(2): xor %eax,%eax
7ce1(3): xor %r12d,%r12d
7ce4(9): mov $0x0,0x50(%rsp)
7ced(5): jmp 0xfffff5a7(%rip)
7cf2(3): mov %r13,%rdx
7cf5(5): mov 0x50(%rsp),%r13
7cfa(5): jmp 0xfffff5f8(%rip)
7cff(5): call 0xffffa0c1(%rip)

"quotearg_n_options" :
7d10(2): push %r15
7d12(2): push %r14
7d14(3): movsxd %edi,%r15
7d17(2): push %r13
7d19(2): push %r12
7d1b(3): mov %rdx,%r14
7d1e(1): push %rbp
7d1f(1): push %rbx
7d20(3): mov %rcx,%rbp
7d23(4): sub $0x28,%rsp
7d27(5): mov %rsi,0x8(%rsp)
7d2c(5): call 0xffffa0a4(%rip)
7d31(3): mov %rax,%r13
7d34(2): mov (%rax),%eax
7d36(3): test %r15d,%r15d
7d39(7): mov 0x208340(%rip),%rbx
7d40(4): mov %eax,0x18(%rsp)
7d44(6): js 0x16d(%rip)
7d4a(7): cmp %r15d,0x208327(%rip)
7d51(2): jnle 0x64(%rip)
7d53(7): cmp $0x7fffffff,%r15d
7d5a(6): jz 0x15c(%rip)
7d60(4): lea 0x1(%r15),%r12d
7d64(7): lea 0x208325(%rip),%rax
7d6b(3): movsxd %r12d,%rsi
7d6e(4): shl/sal $0x4,%rsi
7d72(3): cmp %rax,%rbx
7d75(6): jz 0x11b(%rip)
7d7b(3): mov %rbx,%rdi
7d7e(5): call 0x16f2(%rip)
7d83(3): mov %rax,%rbx
7d86(7): mov %rax,0x2082f3(%rip)
7d8d(7): movsxd 0x2082e4(%rip),%rdi
7d94(3): mov %r12d,%edx
7d97(2): xor %esi,%esi
7d99(2): sub %edi,%edx
7d9b(4): shl/sal $0x4,%rdi
7d9f(3): movsxd %edx,%rdx
7da2(3): add %rbx,%rdi
7da5(4): shl/sal $0x4,%rdx
7da9(5): call 0xffffa217(%rip)
7dae(7): mov %r12d,0x2082c3(%rip)
7db5(3): mov 0x4(%rbp),%eax
7db8(4): shl/sal $0x4,%r15
7dbc(4): sub $0x8,%rsp
7dc0(3): add %r15,%rbx
7dc3(4): lea 0x8(%rbp),%r15
7dc7(4): mov 0x0(%rbp),%r8d
7dcb(3): mov (%rbx),%r11
7dce(4): mov 0x8(%rbx),%r12
7dd2(3): mov %r14,%rcx
7dd5(3): or $0x1,%eax
7dd8(4): mov %eax,0x24(%rsp)
7ddc(3): push 0x30(%rbp)
7ddf(3): mov %eax,%r9d
7de2(3): push 0x28(%rbp)
7de5(2): push %r15
7de7(3): mov %r11,%rsi
7dea(5): mov 0x28(%rsp),%rdx
7def(3): mov %r12,%rdi
7df2(5): mov %r11,0x30(%rsp)
7df7(5): call 0xffffecd9(%rip)
7dfc(4): add $0x20,%rsp
7e00(5): mov 0x10(%rsp),%r11
7e05(3): cmp %rax,%r11
7e08(2): jnbe 0x69(%rip)
7e0a(4): lea 0x1(%rax),%rsi
7e0e(7): lea 0x20834b(%rip),%rax
7e15(3): cmp %rax,%r12
7e18(3): mov %rsi,(%rbx)
7e1b(2): jz 0x14(%rip)
7e1d(3): mov %r12,%rdi
7e20(5): mov %rsi,0x10(%rsp)
7e25(5): call 0xffff9f8b(%rip)
7e2a(5): mov 0x10(%rsp),%rsi
7e2f(3): mov %rsi,%rdi
7e32(5): mov %rsi,0x10(%rsp)
7e37(5): call 0x15d9(%rip)
7e3c(4): sub $0x8,%rsp
7e40(4): mov %rax,0x8(%rbx)
7e44(4): mov 0x0(%rbp),%r8d
7e48(3): push 0x30(%rbp)
7e4b(3): push 0x28(%rbp)
7e4e(3): mov %r14,%rcx
7e51(2): push %r15
7e53(5): mov 0x3c(%rsp),%r9d
7e58(3): mov %rax,%rdi
7e5b(5): mov 0x28(%rsp),%rdx
7e60(5): mov 0x30(%rsp),%rsi
7e65(3): mov %rax,%r12
7e68(5): call 0xffffec68(%rip)
7e6d(4): add $0x20,%rsp
7e71(4): mov 0x18(%rsp),%eax
7e75(4): mov %eax,0x0(%r13)
7e79(4): add $0x28,%rsp
7e7d(3): mov %r12,%rax
7e80(1): pop %rbx
7e81(1): pop %rbp
7e82(2): pop %r12
7e84(2): pop %r13
7e86(2): pop %r14
7e88(2): pop %r15
7e8a(1): ret near (%rsp)
7e8b(5): nop 0x0(%rax,%rax,1)
7e90(2): xor %edi,%edi
7e92(5): call 0x15de(%rip)
7e97(8): movdqa 0x2081f1(%rip),%xmm0
7e9f(3): mov %rax,%rbx
7ea2(7): mov %rax,0x2081d7(%rip)
7ea9(3): movups %xmm0,(%rax)
7eac(5): jmp 0xfffffee1(%rip)
7eb1(5): call 0xffff9f0f(%rip)
7eb6(5): call 0x17aa(%rip)

"clone_quoting_options" :
7ec0(2): push %r12
7ec2(1): push %rbp
7ec3(1): push %rbx
7ec4(3): mov %rdi,%rbx
7ec7(5): call 0xffff9f09(%rip)
7ecc(3): mov (%rax),%r12d
7ecf(3): mov %rax,%rbp
7ed2(7): lea 0x208387(%rip),%rax
7ed9(3): test %rbx,%rbx
7edc(5): mov $0x38,%esi
7ee1(4): cmove %rax,%rbx
7ee5(3): mov %rbx,%rdi
7ee8(5): call 0x1728(%rip)
7eed(4): mov %r12d,0x0(%rbp)
7ef1(1): pop %rbx
7ef2(1): pop %rbp
7ef3(2): pop %r12
7ef5(1): ret near (%rsp)

"get_quoting_style" :
7f00(7): lea 0x208359(%rip),%rax
7f07(3): test %rdi,%rdi
7f0a(4): cmove %rax,%rdi
7f0e(2): mov (%rdi),%eax
7f10(1): ret near (%rsp)

"set_quoting_style" :
7f20(7): lea 0x208339(%rip),%rax
7f27(3): test %rdi,%rdi
7f2a(4): cmove %rax,%rdi
7f2e(2): mov %esi,(%rdi)
7f30(1): ret near (%rsp)

"set_char_quoting" :
7f40(7): lea 0x208319(%rip),%rax
7f47(3): test %rdi,%rdi
7f4a(2): mov %esi,%ecx
7f4c(4): cmove %rax,%rdi
7f50(2): mov %esi,%eax
7f52(3): and $0x1f,%ecx
7f55(3): shr $0x5,%al
7f58(3): movzx %al,%eax
7f5b(5): lea 0x8(%rdi,%rax,4),%rdi
7f60(2): mov (%rdi),%esi
7f62(2): mov %esi,%eax
7f64(2): shr %cl,%eax
7f66(2): xor %eax,%edx
7f68(3): and $0x1,%eax
7f6b(3): and $0x1,%edx
7f6e(2): shl/sal %cl,%edx
7f70(2): xor %esi,%edx
7f72(2): mov %edx,(%rdi)
7f74(1): ret near (%rsp)

"set_quoting_flags" :
7f80(7): lea 0x2082d9(%rip),%rax
7f87(3): test %rdi,%rdi
7f8a(4): cmove %rax,%rdi
7f8e(3): mov 0x4(%rdi),%eax
7f91(3): mov %esi,0x4(%rdi)
7f94(1): ret near (%rsp)

"set_custom_quoting" :
7fa0(7): lea 0x2082b9(%rip),%rax
7fa7(3): test %rdi,%rdi
7faa(4): cmove %rax,%rdi
7fae(3): test %rsi,%rsi
7fb1(6): mov $0xa,(%rdi)
7fb7(2): jz 0x10(%rip)
7fb9(3): test %rdx,%rdx
7fbc(2): jz 0xb(%rip)
7fbe(4): mov %rsi,0x28(%rdi)
7fc2(4): mov %rdx,0x30(%rdi)
7fc6(1): ret near (%rsp)
7fc7(4): sub $0x8,%rsp
7fcb(5): call 0xffff9df5(%rip)

"quotearg_buffer" :
7fd0(2): push %r15
7fd2(2): push %r14
7fd4(7): lea 0x208285(%rip),%rax
7fdb(2): push %r13
7fdd(2): push %r12
7fdf(3): mov %rdi,%r13
7fe2(1): push %rbp
7fe3(1): push %rbx
7fe4(3): mov %r8,%rbx
7fe7(3): mov %rsi,%r14
7fea(3): mov %rdx,%r15
7fed(4): sub $0x18,%rsp
7ff1(3): test %r8,%r8
7ff4(4): cmove %rax,%rbx
7ff8(5): mov %rcx,0x8(%rsp)
7ffd(5): call 0xffff9dd3(%rip)
8002(3): mov (%rax),%r12d
8005(3): mov %rax,%rbp
8008(4): lea 0x8(%rbx),%rax
800c(4): sub $0x8,%rsp
8010(4): mov 0x4(%rbx),%r9d
8014(3): push 0x30(%rbx)
8017(3): mov (%rbx),%r8d
801a(3): push 0x28(%rbx)
801d(3): mov %r15,%rdx
8020(1): push %rax
8021(5): mov 0x28(%rsp),%rcx
8026(3): mov %r14,%rsi
8029(3): mov %r13,%rdi
802c(5): call 0xffffeaa4(%rip)
8031(4): mov %r12d,0x0(%rbp)
8035(4): add $0x38,%rsp
8039(1): pop %rbx
803a(1): pop %rbp
803b(2): pop %r12
803d(2): pop %r13
803f(2): pop %r14
8041(2): pop %r15
8043(1): ret near (%rsp)

"quotearg_alloc_mem" :
8050(2): push %r15
8052(2): push %r14
8054(7): lea 0x208205(%rip),%rax
805b(2): push %r13
805d(2): push %r12
805f(3): mov %rdx,%r12
8062(1): push %rbp
8063(1): push %rbx
8064(3): mov %rcx,%rbx
8067(3): mov %rdi,%r14
806a(3): mov %rsi,%r15
806d(4): sub $0x38,%rsp
8071(3): test %rcx,%rcx
8074(4): cmove %rax,%rbx
8078(2): xor %ebp,%ebp
807a(5): call 0xffff9d56(%rip)
807f(3): test %r12,%r12
8082(3): mov %rax,%r13
8085(2): mov (%rax),%eax
8087(4): setz %bpl
808b(3): or 0x4(%rbx),%ebp
808e(4): lea 0x8(%rbx),%r10
8092(4): sub $0x8,%rsp
8096(3): mov (%rbx),%r8d
8099(3): mov %r15,%rcx
809c(4): mov %eax,0x14(%rsp)
80a0(3): push 0x30(%rbx)
80a3(3): mov %r14,%rdx
80a6(3): push 0x28(%rbx)
80a9(2): push %r10
80ab(2): xor %esi,%esi
80ad(3): mov %ebp,%r9d
80b0(2): xor %edi,%edi
80b2(5): mov %r10,0x40(%rsp)
80b7(5): call 0xffffea19(%rip)
80bc(4): lea 0x1(%rax),%rsi
80c0(5): mov %rax,0x48(%rsp)
80c5(4): add $0x20,%rsp
80c9(3): mov %rsi,%rdi
80cc(5): mov %rsi,0x18(%rsp)
80d1(5): call 0x133f(%rip)
80d6(5): mov %rax,0x10(%rsp)
80db(4): sub $0x8,%rsp
80df(3): push 0x30(%rbx)
80e2(3): push 0x28(%rbx)
80e5(5): mov 0x38(%rsp),%r10
80ea(3): mov %ebp,%r9d
80ed(3): mov (%rbx),%r8d
80f0(3): mov %r15,%rcx
80f3(3): mov %r14,%rdx
80f6(3): mov %rax,%rdi
80f9(2): push %r10
80fb(5): mov 0x38(%rsp),%rsi
8100(5): call 0xffffe9d0(%rip)
8105(4): mov 0x2c(%rsp),%eax
8109(4): add $0x20,%rsp
810d(3): test %r12,%r12
8110(4): mov %eax,0x0(%r13)
8114(2): jz 0xb(%rip)
8116(5): mov 0x28(%rsp),%r11
811b(4): mov %r11,(%r12)
811f(5): mov 0x10(%rsp),%rax
8124(4): add $0x38,%rsp
8128(1): pop %rbx
8129(1): pop %rbp
812a(2): pop %r12
812c(2): pop %r13
812e(2): pop %r14
8130(2): pop %r15
8132(1): ret near (%rsp)

"quotearg_alloc" :
8140(3): mov %rdx,%rcx
8143(2): xor %edx,%edx
8145(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
8150(6): mov 0x207f22(%rip),%eax
8156(2): push %r12
8158(7): mov 0x207f21(%rip),%r12
815f(1): push %rbp
8160(1): push %rbx
8161(3): cmp $0x1,%eax
8164(2): jle 0x2d(%rip)
8166(3): sub $0x2,%eax
8169(5): lea 0x18(%r12),%rbx
816e(4): shl/sal $0x4,%rax
8172(5): lea 0x28(%r12,%rax,1),%rbp
8177(9): nop 0x0(%rax,%rax,1)
8180(3): mov (%rbx),%rdi
8183(4): add $0x10,%rbx
8187(5): call 0xffff9c29(%rip)
818c(3): cmp %rbp,%rbx
818f(2): jnz 0xfffffff1(%rip)
8191(5): mov 0x8(%r12),%rdi
8196(7): lea 0x207fc3(%rip),%rbx
819d(3): cmp %rbx,%rdi
81a0(2): jz 0x19(%rip)
81a2(5): call 0xffff9c0e(%rip)
81a7(b): mov $0x100,0x207ede(%rip)
81b2(7): mov %rbx,0x207edf(%rip)
81b9(7): lea 0x207ed0(%rip),%rbx
81c0(3): cmp %rbx,%r12
81c3(2): jz 0x11(%rip)
81c5(3): mov %r12,%rdi
81c8(5): call 0xffff9be8(%rip)
81cd(7): mov %rbx,0x207eac(%rip)
81d4(1): pop %rbx
81d5(a): mov $0x1,0x207e99(%rip)
81df(1): pop %rbp
81e0(2): pop %r12
81e2(1): ret near (%rsp)

"quotearg_n" :
81f0(7): lea 0x208069(%rip),%rcx
81f7(7): mov $0xffffffff,%rdx
81fe(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
8210(7): lea 0x208049(%rip),%rcx
8217(5): jmp 0xfffffaf9(%rip)

"quotearg" :
8220(7): lea 0x208039(%rip),%rcx
8227(3): mov %rdi,%rsi
822a(7): mov $0xffffffff,%rdx
8231(2): xor %edi,%edi
8233(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
8240(7): lea 0x208019(%rip),%rcx
8247(3): mov %rsi,%rdx
824a(3): mov %rdi,%rsi
824d(2): xor %edi,%edi
824f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
8260(4): sub $0x48,%rsp
8264(3): mov %rdx,%rax
8267(9): mov $0x28,%rdx
8270(5): mov %rdx,0x38(%rsp)
8275(2): xor %edx,%edx
8277(3): cmp $0xa,%esi
827a(2): jz 0x6a(%rip)
827c(3): mov %esi,(%rsp)
827f(3): mov %rsp,%rcx
8282(7): mov $0xffffffff,%rdx
8289(3): mov %rax,%rsi
828c(9): mov $0x0,0x4(%rsp)
8295(9): mov $0x0,0xc(%rsp)
829e(9): mov $0x0,0x14(%rsp)
82a7(9): mov $0x0,0x1c(%rsp)
82b0(9): mov $0x0,0x24(%rsp)
82b9(9): mov $0x0,0x2c(%rsp)
82c2(8): mov $0x0,0x34(%rsp)
82ca(5): call 0xfffffa46(%rip)
82cf(5): mov 0x38(%rsp),%rcx
82d4(9): xor $0x28,%rcx
82dd(2): jnz 0xc(%rip)
82df(4): add $0x48,%rsp
82e3(1): ret near (%rsp)
82e4(5): call 0xffff9adc(%rip)
82e9(5): call 0xffff9c37(%rip)

"quotearg_n_style_mem" :
82f0(4): sub $0x48,%rsp
82f4(3): mov %rdx,%rax
82f7(3): mov %rcx,%rdx
82fa(9): mov $0x28,%rcx
8303(5): mov %rcx,0x38(%rsp)
8308(2): xor %ecx,%ecx
830a(3): cmp $0xa,%esi
830d(2): jz 0x63(%rip)
830f(3): mov %esi,(%rsp)
8312(3): mov %rsp,%rcx
8315(3): mov %rax,%rsi
8318(9): mov $0x0,0x4(%rsp)
8321(9): mov $0x0,0xc(%rsp)
832a(9): mov $0x0,0x14(%rsp)
8333(9): mov $0x0,0x1c(%rsp)
833c(9): mov $0x0,0x24(%rsp)
8345(9): mov $0x0,0x2c(%rsp)
834e(8): mov $0x0,0x34(%rsp)
8356(5): call 0xfffff9ba(%rip)
835b(5): mov 0x38(%rsp),%rdx
8360(9): xor $0x28,%rdx
8369(2): jnz 0xc(%rip)
836b(4): add $0x48,%rsp
836f(1): ret near (%rsp)
8370(5): call 0xffff9a50(%rip)
8375(5): call 0xffff9bab(%rip)

"quotearg_style" :
8380(3): mov %rsi,%rdx
8383(2): mov %edi,%esi
8385(2): xor %edi,%edi
8387(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
8390(3): mov %rdx,%rcx
8393(3): mov %rsi,%rdx
8396(2): mov %edi,%esi
8398(2): xor %edi,%edi
839a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
83a0(4): sub $0x48,%rsp
83a4(2): mov %edx,%ecx
83a6(9): mov $0x28,%rax
83af(5): mov %rax,0x38(%rsp)
83b4(2): xor %eax,%eax
83b6(7): mov 0x207ed3(%rip),%rax
83bd(3): mov %rsp,%r8
83c0(3): and $0x1f,%ecx
83c3(8): movdqa 0x207e95(%rip),%xmm0
83cb(5): mov %rax,0x30(%rsp)
83d0(2): mov %edx,%eax
83d2(4): movaps %xmm0,(%rsp)
83d6(3): shr $0x5,%al
83d9(3): movzx %al,%eax
83dc(5): lea 0x8(%r8,%rax,4),%r9
83e1(8): movdqa 0x207e87(%rip),%xmm0
83e9(5): movaps %xmm0,0x10(%rsp)
83ee(8): movdqa 0x207e8a(%rip),%xmm0
83f6(5): movaps %xmm0,0x20(%rsp)
83fb(3): mov (%r9),%edx
83fe(2): mov %edx,%eax
8400(2): shr %cl,%eax
8402(2): not %eax
8404(3): and $0x1,%eax
8407(2): shl/sal %cl,%eax
8409(3): mov %r8,%rcx
840c(2): xor %edx,%eax
840e(3): mov %rsi,%rdx
8411(3): mov %rdi,%rsi
8414(3): mov %eax,(%r9)
8417(2): xor %edi,%edi
8419(5): call 0xfffff8f7(%rip)
841e(5): mov 0x38(%rsp),%rsi
8423(9): xor $0x28,%rsi
842c(2): jnz 0x7(%rip)
842e(4): add $0x48,%rsp
8432(1): ret near (%rsp)
8433(5): call 0xffff9aed(%rip)

"quotearg_char" :
8440(4): movsx %sil,%edx
8444(7): mov $0xffffffff,%rsi
844b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
8450(5): mov $0x3a,%edx
8455(7): mov $0xffffffff,%rsi
845c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
8470(5): mov $0x3a,%edx
8475(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
8480(4): sub $0x48,%rsp
8484(3): mov %rdx,%rax
8487(9): mov $0x28,%rdx
8490(5): mov %rdx,0x38(%rsp)
8495(2): xor %edx,%edx
8497(3): cmp $0xa,%esi
849a(2): jz 0x6a(%rip)
849c(3): mov %esi,(%rsp)
849f(3): mov %rsp,%rcx
84a2(7): mov $0xffffffff,%rdx
84a9(3): mov %rax,%rsi
84ac(9): mov $0x0,0x4(%rsp)
84b5(9): mov $0x4000000,0xc(%rsp)
84be(9): mov $0x0,0x14(%rsp)
84c7(9): mov $0x0,0x1c(%rsp)
84d0(9): mov $0x0,0x24(%rsp)
84d9(9): mov $0x0,0x2c(%rsp)
84e2(8): mov $0x0,0x34(%rsp)
84ea(5): call 0xfffff826(%rip)
84ef(5): mov 0x38(%rsp),%rcx
84f4(9): xor $0x28,%rcx
84fd(2): jnz 0xc(%rip)
84ff(4): add $0x48,%rsp
8503(1): ret near (%rsp)
8504(5): call 0xffff98bc(%rip)
8509(5): call 0xffff9a17(%rip)

"quotearg_n_custom_mem" :
8510(4): sub $0x48,%rsp
8514(3): mov %rcx,%r9
8517(7): mov 0x207d72(%rip),%rcx
851e(8): movdqa 0x207d3a(%rip),%xmm0
8526(9): mov $0x28,%rax
852f(5): mov %rax,0x38(%rsp)
8534(2): xor %eax,%eax
8536(4): movaps %xmm0,(%rsp)
853a(3): test %rsi,%rsi
853d(5): mov %rcx,0x30(%rsp)
8542(7): mov $0xa,(%rsp)
8549(8): movdqa 0x207d1f(%rip),%xmm0
8551(5): movaps %xmm0,0x10(%rsp)
8556(8): movdqa 0x207d22(%rip),%xmm0
855e(5): movaps %xmm0,0x20(%rsp)
8563(2): jz 0x34(%rip)
8565(3): test %rdx,%rdx
8568(2): jz 0x2f(%rip)
856a(5): mov %rsi,0x28(%rsp)
856f(5): mov %rdx,0x30(%rsp)
8574(3): mov %rsp,%rcx
8577(3): mov %r8,%rdx
857a(3): mov %r9,%rsi
857d(5): call 0xfffff793(%rip)
8582(5): mov 0x38(%rsp),%rdi
8587(9): xor $0x28,%rdi
8590(2): jnz 0xc(%rip)
8592(4): add $0x48,%rsp
8596(1): ret near (%rsp)
8597(5): call 0xffff9829(%rip)
859c(5): call 0xffff9984(%rip)

"quotearg_n_custom" :
85b0(7): mov $0xffffffff,%r8
85b7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
85c0(3): mov %rdx,%rcx
85c3(7): mov $0xffffffff,%r8
85ca(3): mov %rsi,%rdx
85cd(3): mov %rdi,%rsi
85d0(2): xor %edi,%edi
85d2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
85e0(3): mov %rcx,%r8
85e3(3): mov %rdx,%rcx
85e6(3): mov %rsi,%rdx
85e9(3): mov %rdi,%rsi
85ec(2): xor %edi,%edi
85ee(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
8600(7): lea 0x207a39(%rip),%rcx
8607(5): jmp 0xfffff709(%rip)

"quote_mem" :
8610(7): lea 0x207a29(%rip),%rcx
8617(3): mov %rsi,%rdx
861a(3): mov %rdi,%rsi
861d(2): xor %edi,%edi
861f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
8630(7): lea 0x207a09(%rip),%rcx
8637(7): mov $0xffffffff,%rdx
863e(5): jmp 0xfffff6d2(%rip)

"quote" :
8650(7): lea 0x2079e9(%rip),%rcx
8657(3): mov %rdi,%rsi
865a(7): mov $0xffffffff,%rdx
8661(2): xor %edi,%edi
8663(5): jmp 0xfffff6ad(%rip)

"renameatu" :
8670(2): push %r15
8672(2): push %r14
8674(3): mov %r8d,%r9d
8677(2): push %r13
8679(2): push %r12
867b(3): mov %edx,%r14d
867e(1): push %rbp
867f(1): push %rbx
8680(3): mov %rsi,%r12
8683(3): mov %rcx,%r13
8686(3): mov %r8d,%ebp
8689(3): mov %rcx,%r8
868c(7): sub $0x148,%rsp
8693(2): mov %edx,%ecx
8695(3): mov %rsi,%rdx
8698(9): mov $0x28,%rax
86a1(8): mov %rax,0x138(%rsp)
86a9(2): xor %eax,%eax
86ab(2): mov %edi,%esi
86ad(4): mov %edi,0x4(%rsp)
86b1(5): mov $0x13c,%edi
86b6(5): call 0xffff99da(%rip)
86bb(3): mov %rax,%rbx
86be(3): mov %eax,%r15d
86c1(5): call 0xffff970f(%rip)
86c6(2): test %ebx,%ebx
86c8(2): js 0x38(%rip)
86ca(8): mov 0x138(%rsp),%rdx
86d2(9): xor $0x28,%rdx
86db(3): mov %r15d,%eax
86de(6): jnz 0x1f7(%rip)
86e4(7): add $0x148,%rsp
86eb(1): pop %rbx
86ec(1): pop %rbp
86ed(2): pop %r12
86ef(2): pop %r13
86f1(2): pop %r14
86f3(2): pop %r15
86f5(1): ret near (%rsp)
86f6(a): nop 0x0(%rax,%rax,1)
8700(3): mov %rax,%r9
8703(2): mov (%rax),%eax
8705(3): lea 0xffffffea(%rax),%ecx
8708(3): and $0xef,%ecx
870b(3): setnz %bl
870e(3): cmp $0x5f,%eax
8711(3): setnz %al
8714(2): and %al,%bl
8716(2): jnz 0xffffffb4(%rip)
8718(2): test %ebp,%ebp
871a(2): jnz 0x56(%rip)
871c(3): mov %r12,%rdi
871f(5): mov %r9,0x8(%rsp)
8724(5): call 0xffff97cc(%rip)
8729(3): mov %r13,%rdi
872c(3): mov %rax,%rbp
872f(5): call 0xffff97c1(%rip)
8734(3): test %rbp,%rbp
8737(2): jz 0x1c(%rip)
8739(3): test %rax,%rax
873c(5): mov 0x8(%rsp),%r9
8741(2): jz 0x12(%rip)
8743(6): cmp $0x2f,0xffffffff(%r12,%rbp,1)
8749(2): jz 0x47(%rip)
874b(6): cmp $0x2f,0xffffffff(%r13,%rax,1)
8751(2): jz 0x3f(%rip)
8753(4): mov 0x4(%rsp),%edi
8757(3): mov %r13,%rcx
875a(3): mov %r14d,%edx
875d(3): mov %r12,%rsi
8760(5): call 0xffff9ac0(%rip)
8765(3): mov %eax,%r15d
8768(5): jmp 0xffffff62(%rip)
876d(3): nop (%rax)
8770(3): and $0xfe,%ebp
8773(2): jz 0x6d(%rip)
8775(7): mov $0x5f,(%r9)
877c(6): mov $0xffffffff,%r15d
8782(5): jmp 0xffffff48(%rip)
8787(9): nop 0x0(%rax,%rax,1)
8790(4): mov 0x4(%rsp),%esi
8794(5): lea 0x10(%rsp),%rcx
8799(6): mov $0x100,%r8d
879f(3): mov %r12,%rdx
87a2(5): mov $0x1,%edi
87a7(5): mov %r9,0x8(%rsp)
87ac(5): call 0xffff97b4(%rip)
87b1(2): test %eax,%eax
87b3(2): jnz 0x66(%rip)
87b5(2): test %bl,%bl
87b7(5): mov 0x8(%rsp),%r9
87bc(2): jz 0x7e(%rip)
87be(4): mov 0x28(%rsp),%eax
87c2(5): and $0xf000,%eax
87c7(5): cmp $0x4000,%eax
87cc(2): jz 0xffffff87(%rip)
87ce(7): mov $0x2,(%r9)
87d5(6): mov $0xffffffff,%r15d
87db(5): jmp 0xfffffeef(%rip)
87e0(8): lea 0xa0(%rsp),%rcx
87e8(6): mov $0x100,%r8d
87ee(3): mov %r13,%rdx
87f1(3): mov %r14d,%esi
87f4(5): mov $0x1,%edi
87f9(5): mov %r9,0x8(%rsp)
87fe(5): call 0xffff9762(%rip)
8803(2): test %eax,%eax
8805(5): mov 0x8(%rsp),%r9
880a(2): jz 0x1e(%rip)
880c(3): mov (%r9),%eax
880f(3): cmp $0x4b,%eax
8812(2): jz 0x16(%rip)
8814(3): cmp $0x2,%eax
8817(2): jz 0x71(%rip)
8819(6): mov $0xffffffff,%r15d
881f(5): jmp 0xfffffeab(%rip)
8824(4): nop 0x0(%rax)
8828(7): mov $0x11,(%r9)
882f(6): mov $0xffffffff,%r15d
8835(5): jmp 0xfffffe95(%rip)
883a(8): lea 0xa0(%rsp),%rcx
8842(6): mov $0x100,%r8d
8848(3): mov %r13,%rdx
884b(3): mov %r14d,%esi
884e(5): mov $0x1,%edi
8853(5): mov %r9,0x8(%rsp)
8858(5): call 0xffff9708(%rip)
885d(2): test %eax,%eax
885f(5): mov 0x8(%rsp),%r9
8864(2): jz 0x2e(%rip)
8866(4): cmp $0x2,(%r9)
886a(2): jnz 0xffffffaf(%rip)
886c(4): mov 0x28(%rsp),%eax
8870(5): and $0xf000,%eax
8875(5): cmp $0x4000,%eax
887a(2): jnz 0xffffff9f(%rip)
887c(5): jmp 0xfffffed7(%rip)
8881(7): nop 0x0(%rax)
8888(5): mov $0x1,%ebx
888d(5): jmp 0xfffffe8f(%rip)
8892(7): mov 0xb8(%rsp),%eax
8899(5): and $0xf000,%eax
889e(5): cmp $0x4000,%eax
88a3(2): jz 0xe(%rip)
88a5(7): mov $0x14,(%r9)
88ac(5): jmp 0xffffff6d(%rip)
88b1(4): mov 0x28(%rsp),%eax
88b5(5): and $0xf000,%eax
88ba(5): cmp $0x4000,%eax
88bf(6): jz 0xfffffe94(%rip)
88c5(7): mov $0x15,(%r9)
88cc(4): or $0xff,%r15d
88d0(5): jmp 0xfffffdfa(%rip)
88d5(5): call 0xffff964b(%rip)

"same_nameat.part.0" :
88e0(2): push %r13
88e2(2): push %r12
88e4(3): mov %edi,%r13d
88e7(1): push %rbp
88e8(1): push %rbx
88e9(3): mov %rsi,%rdi
88ec(2): mov %edx,%ebp
88ee(3): mov %rcx,%r12
88f1(7): sub $0x138,%rsp
88f8(9): mov $0x28,%rax
8901(8): mov %rax,0x128(%rsp)
8909(2): xor %eax,%eax
890b(5): call 0xffffc7b5(%rip)
8910(3): mov %rsp,%rcx
8913(6): mov $0x100,%r8d
8919(3): mov %rax,%rdx
891c(3): mov %r13d,%esi
891f(5): mov $0x1,%edi
8924(3): mov %rax,%rbx
8927(5): call 0xffff9639(%rip)
892c(2): test %eax,%eax
892e(6): jnz 0xb2(%rip)
8934(3): mov %rbx,%rdi
8937(5): call 0xffff9479(%rip)
893c(3): mov %r12,%rdi
893f(5): call 0xffffc781(%rip)
8944(8): lea 0x90(%rsp),%rcx
894c(6): mov $0x100,%r8d
8952(3): mov %rax,%rdx
8955(2): mov %ebp,%esi
8957(5): mov $0x1,%edi
895c(3): mov %rax,%rbx
895f(5): call 0xffff9601(%rip)
8964(2): test %eax,%eax
8966(2): jnz 0x52(%rip)
8968(2): xor %ebp,%ebp
896a(8): mov 0x98(%rsp),%rax
8972(5): cmp %rax,0x8(%rsp)
8977(2): jnz 0x12(%rip)
8979(8): mov 0x90(%rsp),%rax
8981(4): cmp %rax,(%rsp)
8985(4): setz %bpl
8989(3): mov %rbx,%rdi
898c(5): call 0xffff9424(%rip)
8991(8): mov 0x128(%rsp),%rdx
8999(9): xor $0x28,%rdx
89a2(2): mov %ebp,%eax
89a4(2): jnz 0x5e(%rip)
89a6(7): add $0x138,%rsp
89ad(1): pop %rbx
89ae(1): pop %rbp
89af(2): pop %r12
89b1(2): pop %r13
89b3(1): ret near (%rsp)
89b4(4): nop 0x0(%rax)
89b8(5): call 0xffff9418(%rip)
89bd(2): mov (%rax),%esi
89bf(7): lea 0x40b1(%rip),%rdx
89c6(3): mov %rbx,%rcx
89c9(5): mov $0x1,%edi
89ce(2): xor %eax,%eax
89d0(5): call 0xffff97e0(%rip)
89d5(2): jmp 0xffffff93(%rip)
89d7(9): nop 0x0(%rax,%rax,1)
89e0(5): call 0xffff93f0(%rip)
89e5(2): mov (%rax),%esi
89e7(7): lea 0x4089(%rip),%rdx
89ee(3): mov %rbx,%rcx
89f1(5): mov $0x1,%edi
89f6(2): xor %eax,%eax
89f8(5): call 0xffff97b8(%rip)
89fd(5): jmp 0xffffff37(%rip)
8a02(5): call 0xffff951e(%rip)

"same_nameat" :
8a10(2): push %r15
8a12(2): push %r14
8a14(3): mov %edx,%r15d
8a17(2): push %r13
8a19(2): push %r12
8a1b(1): push %rbp
8a1c(1): push %rbx
8a1d(3): mov %rcx,%rbp
8a20(3): mov %rsi,%rbx
8a23(4): sub $0x18,%rsp
8a27(4): mov %edi,0xc(%rsp)
8a2b(3): mov %rsi,%rdi
8a2e(5): call 0xffffc772(%rip)
8a33(3): mov %rbp,%rdi
8a36(3): mov %rax,%r12
8a39(5): call 0xffffc767(%rip)
8a3e(3): mov %r12,%rdi
8a41(3): mov %rax,%r13
8a44(5): call 0xffffc7bc(%rip)
8a49(3): mov %r13,%rdi
8a4c(3): mov %rax,%r14
8a4f(5): call 0xffffc7b1(%rip)
8a54(3): cmp %rax,%r14
8a57(2): jz 0x19(%rip)
8a59(4): add $0x18,%rsp
8a5d(2): xor %eax,%eax
8a5f(1): pop %rbx
8a60(1): pop %rbp
8a61(2): pop %r12
8a63(2): pop %r13
8a65(2): pop %r14
8a67(2): pop %r15
8a69(1): ret near (%rsp)
8a6a(6): nop 0x0(%rax,%rax,1)
8a70(3): mov %r14,%rdx
8a73(3): mov %r13,%rsi
8a76(3): mov %r12,%rdi
8a79(5): call 0xffff95a7(%rip)
8a7e(2): test %eax,%eax
8a80(2): jnz 0xffffffd9(%rip)
8a82(4): mov 0xc(%rsp),%edi
8a86(4): add $0x18,%rsp
8a8a(3): mov %rbp,%rcx
8a8d(3): mov %r15d,%edx
8a90(3): mov %rbx,%rsi
8a93(1): pop %rbx
8a94(1): pop %rbp
8a95(2): pop %r12
8a97(2): pop %r13
8a99(2): pop %r14
8a9b(2): pop %r15
8a9d(5): jmp 0xfffffe43(%rip)

"same_name" :
8ab0(5): mov $0xffffff9c,%edx
8ab5(3): mov %rsi,%rcx
8ab8(3): mov %rdi,%rsi
8abb(2): mov %edx,%edi
8abd(5): jmp 0xffffff53(%rip)

"try_nocreate" :
8ad0(1): push %rbx
8ad1(3): mov %rdi,%rsi
8ad4(5): mov $0x1,%edi
8ad9(7): sub $0xa0,%rsp
8ae0(3): mov %rsp,%rdx
8ae3(9): mov $0x28,%rax
8aec(8): mov %rax,0x98(%rsp)
8af4(2): xor %eax,%eax
8af6(5): call 0xffff940a(%rip)
8afb(2): mov %eax,%ebx
8afd(5): call 0xffff92d3(%rip)
8b02(2): test %ebx,%ebx
8b04(2): jz 0x1c(%rip)
8b06(2): mov (%rax),%edx
8b08(3): cmp $0x4b,%edx
8b0b(2): jz 0x15(%rip)
8b0d(2): xor %eax,%eax
8b0f(3): cmp $0x2,%edx
8b12(3): setnz %al
8b15(2): neg %eax
8b17(2): jmp 0x14(%rip)
8b19(7): nop 0x0(%rax)
8b20(6): mov $0x11,(%rax)
8b26(5): mov $0xffffffff,%eax
8b2b(8): mov 0x98(%rsp),%rcx
8b33(9): xor $0x28,%rcx
8b3c(2): jnz 0xb(%rip)
8b3e(7): add $0xa0,%rsp
8b45(1): pop %rbx
8b46(1): ret near (%rsp)
8b47(5): call 0xffff93d9(%rip)

"try_dir" :
8b50(5): mov $0x1c0,%esi
8b55(5): jmp 0xffff92db(%rip)

"try_file" :
8b60(2): mov (%rsi),%esi
8b62(5): mov $0x180,%edx
8b67(2): xor %eax,%eax
8b69(4): and $0x3c,%sil
8b6d(4): or $0xc2,%sil
8b71(5): jmp 0xffff965f(%rip)

"try_tempname_len" :
8b80(2): push %r15
8b82(2): push %r14
8b84(3): mov %rdi,%r15
8b87(2): push %r13
8b89(2): push %r12
8b8b(3): mov %r8,%r14
8b8e(1): push %rbp
8b8f(1): push %rbx
8b90(2): mov %esi,%ebp
8b92(4): sub $0x38,%rsp
8b96(5): mov %rdx,0x18(%rsp)
8b9b(4): mov %rdi,(%rsp)
8b9f(5): mov %rcx,0x20(%rsp)
8ba4(5): call 0xffff922c(%rip)
8ba9(5): mov %rax,0x8(%rsp)
8bae(2): mov (%rax),%eax
8bb0(3): mov %r15,%rdi
8bb3(4): mov %eax,0x2c(%rsp)
8bb7(5): call 0xffff9339(%rip)
8bbc(3): movsxd %ebp,%rsi
8bbf(4): lea 0x0(%rsi,%r14,1),%rdx
8bc3(3): cmp %rax,%rdx
8bc6(6): jnbe 0x115(%rip)
8bcc(3): sub %r14,%rax
8bcf(3): mov %rax,%rbx
8bd2(3): sub %rsi,%rbx
8bd5(7): lea 0x33ad(%rip),%rsi
8bdc(4): lea 0x0(%r15,%rbx,1),%rax
8be0(3): mov %rax,%rdi
8be3(5): mov %rax,0x10(%rsp)
8be8(5): call 0xffff9418(%rip)
8bed(3): cmp %rax,%r14
8bf0(6): jnbe 0xeb(%rip)
8bf6(2): xor %edi,%edi
8bf8(3): mov %r14,%rsi
8bfb(5): call 0x12e5(%rip)
8c00(3): test %rax,%rax
8c03(3): mov %rax,%rbp
8c06(6): jz 0xe7(%rip)
8c0c(4): mov (%rsp),%rax
8c10(7): lea 0x3a69(%rip),%r12
8c17(6): mov $0x3a2f8,%r13d
8c1d(3): add %r14,%rax
8c20(3): add %rax,%rbx
8c23(5): nop 0x0(%rax,%rax,1)
8c28(3): test %r14,%r14
8c2b(5): mov 0x10(%rsp),%r15
8c30(2): jz 0x27(%rip)
8c32(6): nop 0x0(%rax,%rax,1)
8c38(5): mov $0x3d,%esi
8c3d(3): mov %rbp,%rdi
8c40(4): add $0x1,%r15
8c44(5): call 0x12ec(%rip)
8c49(5): movzx 0x0(%r12,%rax,1),%eax
8c4e(4): mov %al,0xffffffff(%r15)
8c52(3): cmp %rbx,%r15
8c55(2): jnz 0xffffffe3(%rip)
8c57(5): mov 0x18(%rsp),%rsi
8c5c(4): mov (%rsp),%rdi
8c60(5): mov 0x20(%rsp),%rax
8c65(2): call %rax
8c67(2): test %eax,%eax
8c69(2): mov %eax,%edx
8c6b(2): jns 0x2e(%rip)
8c6d(5): mov 0x8(%rsp),%rax
8c72(2): mov (%rax),%ecx
8c74(3): cmp $0x11,%ecx
8c77(2): jnz 0x5d(%rip)
8c79(4): sub $0x1,%r13d
8c7d(2): jnz 0xffffffab(%rip)
8c7f(3): mov %rbp,%rdi
8c82(5): call 0x13ee(%rip)
8c87(5): mov 0x8(%rsp),%rax
8c8c(5): mov $0xffffffff,%edx
8c91(6): mov $0x11,(%rax)
8c97(2): jmp 0x2c(%rip)
8c99(5): mov 0x8(%rsp),%rcx
8c9e(4): mov 0x2c(%rsp),%eax
8ca2(2): mov %eax,(%rcx)
8ca4(2): mov %eax,%ecx
8ca6(3): mov %rbp,%rdi
8ca9(4): mov %edx,0x10(%rsp)
8cad(3): mov %ecx,(%rsp)
8cb0(5): call 0x13c0(%rip)
8cb5(5): mov 0x8(%rsp),%rax
8cba(3): mov (%rsp),%ecx
8cbd(4): mov 0x10(%rsp),%edx
8cc1(2): mov %ecx,(%rax)
8cc3(4): add $0x38,%rsp
8cc7(2): mov %edx,%eax
8cc9(1): pop %rbx
8cca(1): pop %rbp
8ccb(2): pop %r12
8ccd(2): pop %r13
8ccf(2): pop %r14
8cd1(2): pop %r15
8cd3(1): ret near (%rsp)
8cd4(5): mov $0xffffffff,%edx
8cd9(2): jmp 0xffffffcd(%rip)
8cdb(5): mov 0x8(%rsp),%rax
8ce0(5): mov $0xffffffff,%edx
8ce5(6): mov $0x16,(%rax)
8ceb(2): jmp 0xffffffd8(%rip)
8ced(5): mov $0xffffffff,%edx
8cf2(2): jmp 0xffffffd1(%rip)

"gen_tempname_len" :
8d00(4): sub $0x18,%rsp
8d04(3): cmp $0x1,%ecx
8d07(4): mov %edx,0xc(%rsp)
8d0b(2): jz 0x65(%rip)
8d0d(3): cmp $0x2,%ecx
8d10(2): jz 0x28(%rip)
8d12(2): test %ecx,%ecx
8d14(2): jz 0x3c(%rip)
8d16(7): lea 0x3943(%rip),%rcx
8d1d(7): lea 0x38e4(%rip),%rsi
8d24(7): lea 0x3905(%rip),%rdi
8d2b(5): mov $0x147,%edx
8d30(5): call 0xffff9280(%rip)
8d35(3): nop (%rax)
8d38(5): lea 0xc(%rsp),%rdx
8d3d(7): lea 0xfffffd8c(%rip),%rcx
8d44(5): call 0xfffffe3c(%rip)
8d49(4): add $0x18,%rsp
8d4d(1): ret near (%rsp)
8d4e(2): nop 
8d50(5): lea 0xc(%rsp),%rdx
8d55(7): lea 0xfffffe04(%rip),%rcx
8d5c(5): call 0xfffffe24(%rip)
8d61(4): add $0x18,%rsp
8d65(1): ret near (%rsp)
8d66(a): nop 0x0(%rax,%rax,1)
8d70(5): lea 0xc(%rsp),%rdx
8d75(7): lea 0xfffffdd4(%rip),%rcx
8d7c(5): call 0xfffffe04(%rip)
8d81(4): add $0x18,%rsp
8d85(1): ret near (%rsp)

"gen_tempname" :
8d90(6): mov $0x6,%r8d
8d96(5): jmp 0xffffff6a(%rip)

"try_tempname" :
8da0(6): mov $0x6,%r8d
8da6(5): jmp 0xfffffdda(%rip)

"fd_safer" :
8db0(2): push %r13
8db2(2): push %r12
8db4(1): push %rbp
8db5(1): push %rbx
8db6(2): mov %edi,%ebx
8db8(4): sub $0x8,%rsp
8dbc(3): cmp $0x2,%edi
8dbf(2): jnbe 0x23(%rip)
8dc1(5): call 0x1d7f(%rip)
8dc6(3): mov %eax,%r12d
8dc9(5): call 0xffff9007(%rip)
8dce(3): mov (%rax),%r13d
8dd1(3): mov %rax,%rbp
8dd4(2): mov %ebx,%edi
8dd6(5): call 0xffff920a(%rip)
8ddb(3): mov %r12d,%ebx
8dde(4): mov %r13d,0x0(%rbp)
8de2(4): add $0x8,%rsp
8de6(2): mov %ebx,%eax
8de8(1): pop %rbx
8de9(1): pop %rbp
8dea(2): pop %r12
8dec(2): pop %r13
8dee(1): ret near (%rsp)

"version_etc_arn" :
8df0(2): push %r15
8df2(2): push %r14
8df4(2): push %r13
8df6(2): push %r12
8df8(3): mov %r9,%r12
8dfb(1): push %rbp
8dfc(1): push %rbx
8dfd(3): mov %rdi,%rbp
8e00(3): mov %r8,%rbx
8e03(4): sub $0x28,%rsp
8e07(3): test %rsi,%rsi
8e0a(6): jz 0x11e(%rip)
8e10(3): mov %rdx,%r8
8e13(7): lea 0x38a5(%rip),%rdx
8e1a(3): mov %rcx,%r9
8e1d(2): xor %eax,%eax
8e1f(3): mov %rsi,%rcx
8e22(5): mov $0x1,%esi
8e27(5): call 0xffff9439(%rip)
8e2c(7): lea 0x389f(%rip),%rsi
8e33(2): xor %edi,%edi
8e35(5): mov $0x5,%edx
8e3a(5): call 0xffff9096(%rip)
8e3f(7): lea 0x3b9a(%rip),%rdx
8e46(3): mov %rax,%rcx
8e49(6): mov $0x7e3,%r8d
8e4f(5): mov $0x1,%esi
8e54(3): mov %rbp,%rdi
8e57(2): xor %eax,%eax
8e59(5): call 0xffff9407(%rip)
8e5e(7): lea 0x38f3(%rip),%rsi
8e65(2): xor %edi,%edi
8e67(5): mov $0x5,%edx
8e6c(5): call 0xffff9064(%rip)
8e71(3): mov %rbp,%rsi
8e74(3): mov %rax,%rdi
8e77(5): call 0xffff91b9(%rip)
8e7c(4): cmp $0x9,%r12
8e80(6): jnbe 0x340(%rip)
8e86(7): lea 0x3b2b(%rip),%rdx
8e8d(4): movsxd 0x0(%rdx,%r12,4),%rax
8e91(3): add %rdx,%rax
8e94(2): jmp %rax
8e96(a): nop 0x0(%rax,%rax,1)
8ea0(4): mov 0x38(%rbx),%r9
8ea4(4): mov 0x10(%rbx),%rax
8ea8(7): lea 0x3a19(%rip),%rsi
8eaf(4): mov 0x8(%rbx),%r8
8eb3(5): mov $0x5,%edx
8eb8(2): xor %edi,%edi
8eba(4): mov 0x30(%rbx),%r13
8ebe(4): mov 0x28(%rbx),%r12
8ec2(5): mov %r9,0x10(%rsp)
8ec7(4): mov 0x20(%rbx),%r15
8ecb(4): mov 0x18(%rbx),%r14
8ecf(4): mov %rax,(%rsp)
8ed3(5): mov %r8,0x8(%rsp)
8ed8(3): mov (%rbx),%rbx
8edb(5): call 0xffff8ff5(%rip)
8ee0(4): sub $0x8,%rsp
8ee4(5): mov 0x18(%rsp),%r9
8ee9(3): mov %rax,%rdx
8eec(3): mov %rbx,%rcx
8eef(5): mov $0x1,%esi
8ef4(3): mov %rbp,%rdi
8ef7(2): xor %eax,%eax
8ef9(2): push %r9
8efb(2): push %r13
8efd(2): push %r12
8eff(2): push %r15
8f01(2): push %r14
8f03(5): mov 0x30(%rsp),%r9
8f08(5): mov 0x38(%rsp),%r8
8f0d(5): call 0xffff9353(%rip)
8f12(4): add $0x30,%rsp
8f16(4): add $0x28,%rsp
8f1a(1): pop %rbx
8f1b(1): pop %rbp
8f1c(2): pop %r12
8f1e(2): pop %r13
8f20(2): pop %r14
8f22(2): pop %r15
8f24(1): ret near (%rsp)
8f25(3): nop (%rax)
8f28(3): mov %rcx,%r8
8f2b(3): mov %rdx,%rcx
8f2e(7): lea 0x3796(%rip),%rdx
8f35(5): mov $0x1,%esi
8f3a(2): xor %eax,%eax
8f3c(5): call 0xffff9324(%rip)
8f41(5): jmp 0xfffffeeb(%rip)
8f46(a): nop 0x0(%rax,%rax,1)
8f50(4): mov 0x40(%rbx),%r10
8f54(4): mov 0x38(%rbx),%r9
8f58(7): lea 0x3999(%rip),%rsi
8f5f(4): mov 0x10(%rbx),%rax
8f63(4): mov 0x8(%rbx),%r8
8f67(5): mov $0x5,%edx
8f6c(4): mov 0x30(%rbx),%r13
8f70(4): mov 0x28(%rbx),%r12
8f74(4): mov 0x20(%rbx),%r15
8f78(4): mov 0x18(%rbx),%r14
8f7c(3): mov (%rbx),%rbx
8f7f(5): mov %r10,0x18(%rsp)
8f84(5): mov %r9,0x10(%rsp)
8f89(4): mov %rax,(%rsp)
8f8d(5): mov %r8,0x8(%rsp)
8f92(2): xor %edi,%edi
8f94(5): call 0xffff8f3c(%rip)
8f99(5): mov 0x18(%rsp),%r10
8f9e(2): push %r10
8fa0(5): jmp 0xffffff44(%rip)
8fa5(3): nop (%rax)
8fa8(3): mov (%rbx),%rbx
8fab(7): lea 0x3724(%rip),%rsi
8fb2(5): mov $0x5,%edx
8fb7(2): xor %edi,%edi
8fb9(5): call 0xffff8f17(%rip)
8fbe(4): add $0x28,%rsp
8fc2(3): mov %rbx,%rcx
8fc5(3): mov %rbp,%rdi
8fc8(1): pop %rbx
8fc9(1): pop %rbp
8fca(2): pop %r12
8fcc(2): pop %r13
8fce(2): pop %r14
8fd0(2): pop %r15
8fd2(3): mov %rax,%rdx
8fd5(5): mov $0x1,%esi
8fda(2): xor %eax,%eax
8fdc(5): jmp 0xffff9284(%rip)
8fe1(7): nop 0x0(%rax)
8fe8(4): mov 0x8(%rbx),%r12
8fec(7): lea 0x36f3(%rip),%rsi
8ff3(3): mov (%rbx),%rbx
8ff6(5): mov $0x5,%edx
8ffb(2): xor %edi,%edi
8ffd(5): call 0xffff8ed3(%rip)
9002(4): add $0x28,%rsp
9006(3): mov %r12,%r8
9009(3): mov %rbx,%rcx
900c(3): mov %rbp,%rdi
900f(3): mov %rax,%rdx
9012(5): mov $0x1,%esi
9017(1): pop %rbx
9018(1): pop %rbp
9019(2): pop %r12
901b(2): pop %r13
901d(2): pop %r14
901f(2): pop %r15
9021(2): xor %eax,%eax
9023(5): jmp 0xffff923d(%rip)
9028(8): nop 0x0(%rax,%rax,1)
9030(4): mov 0x10(%rbx),%r13
9034(4): mov 0x8(%rbx),%r12
9038(7): lea 0x36be(%rip),%rsi
903f(3): mov (%rbx),%rbx
9042(5): mov $0x5,%edx
9047(2): xor %edi,%edi
9049(5): call 0xffff8e87(%rip)
904e(4): add $0x28,%rsp
9052(3): mov %r13,%r9
9055(3): mov %r12,%r8
9058(3): mov %rbx,%rcx
905b(3): mov %rbp,%rdi
905e(3): mov %rax,%rdx
9061(1): pop %rbx
9062(1): pop %rbp
9063(2): pop %r12
9065(2): pop %r13
9067(2): pop %r14
9069(2): pop %r15
906b(5): mov $0x1,%esi
9070(2): xor %eax,%eax
9072(5): jmp 0xffff91ee(%rip)
9077(9): nop 0x0(%rax,%rax,1)
9080(7): lea 0x37a1(%rip),%rsi
9087(5): mov $0x5,%edx
908c(2): xor %edi,%edi
908e(4): mov 0x18(%rbx),%r14
9092(4): mov 0x10(%rbx),%r13
9096(4): mov 0x8(%rbx),%r12
909a(3): mov (%rbx),%rbx
909d(5): call 0xffff8e33(%rip)
90a2(4): sub $0x8,%rsp
90a6(2): push %r14
90a8(3): mov %rax,%rdx
90ab(3): mov %r13,%r9
90ae(3): mov %r12,%r8
90b1(3): mov %rbx,%rcx
90b4(3): mov %rbp,%rdi
90b7(5): mov $0x1,%esi
90bc(2): xor %eax,%eax
90be(5): call 0xffff91a2(%rip)
90c3(1): pop %rax
90c4(1): pop %rdx
90c5(4): add $0x28,%rsp
90c9(1): pop %rbx
90ca(1): pop %rbp
90cb(2): pop %r12
90cd(2): pop %r13
90cf(2): pop %r14
90d1(2): pop %r15
90d3(1): ret near (%rsp)
90d4(4): nop 0x0(%rax)
90d8(4): mov 0x20(%rbx),%r15
90dc(7): lea 0x3765(%rip),%rsi
90e3(5): mov $0x5,%edx
90e8(2): xor %edi,%edi
90ea(4): mov 0x18(%rbx),%r14
90ee(4): mov 0x10(%rbx),%r13
90f2(4): mov 0x8(%rbx),%r12
90f6(3): mov (%rbx),%rbx
90f9(5): call 0xffff8dd7(%rip)
90fe(2): push %r15
9100(2): jmp 0xffffffa6(%rip)
9102(6): nop 0x0(%rax,%rax,1)
9108(4): mov 0x8(%rbx),%r8
910c(4): mov 0x28(%rbx),%r12
9110(7): lea 0x3759(%rip),%rsi
9117(4): mov 0x20(%rbx),%r15
911b(4): mov 0x18(%rbx),%r14
911f(5): mov $0x5,%edx
9124(4): mov 0x10(%rbx),%r13
9128(2): xor %edi,%edi
912a(3): mov (%rbx),%rbx
912d(4): mov %r8,(%rsp)
9131(5): call 0xffff8d9f(%rip)
9136(4): sub $0x8,%rsp
913a(3): mov %r13,%r9
913d(2): push %r12
913f(2): push %r15
9141(2): push %r14
9143(5): mov 0x20(%rsp),%r8
9148(3): mov %rbx,%rcx
914b(3): mov %rax,%rdx
914e(3): mov %rbp,%rdi
9151(5): mov $0x1,%esi
9156(2): xor %eax,%eax
9158(5): call 0xffff9108(%rip)
915d(4): add $0x20,%rsp
9161(4): add $0x28,%rsp
9165(1): pop %rbx
9166(1): pop %rbp
9167(2): pop %r12
9169(2): pop %r13
916b(2): pop %r14
916d(2): pop %r15
916f(1): ret near (%rsp)
9170(4): mov 0x10(%rbx),%r9
9174(4): mov 0x30(%rbx),%r13
9178(7): lea 0x3719(%rip),%rsi
917f(4): mov 0x28(%rbx),%r12
9183(4): mov 0x20(%rbx),%r15
9187(5): mov $0x5,%edx
918c(4): mov 0x18(%rbx),%r14
9190(4): mov 0x8(%rbx),%r8
9194(2): xor %edi,%edi
9196(5): mov %r9,0x8(%rsp)
919b(3): mov (%rbx),%rbx
919e(4): mov %r8,(%rsp)
91a2(5): call 0xffff8d2e(%rip)
91a7(2): push %r13
91a9(2): push %r12
91ab(2): push %r15
91ad(2): push %r14
91af(5): mov 0x28(%rsp),%r9
91b4(2): jmp 0xffffff8f(%rip)
91b6(a): nop 0x0(%rax,%rax,1)
91c0(4): mov 0x40(%rbx),%r10
91c4(4): mov 0x38(%rbx),%r9
91c8(5): mov $0x5,%edx
91cd(4): mov 0x10(%rbx),%rax
91d1(4): mov 0x8(%rbx),%r8
91d5(7): lea 0x3754(%rip),%rsi
91dc(4): mov 0x30(%rbx),%r13
91e0(4): mov 0x28(%rbx),%r12
91e4(4): mov 0x20(%rbx),%r15
91e8(4): mov 0x18(%rbx),%r14
91ec(5): mov %r10,0x18(%rsp)
91f1(5): mov %r9,0x10(%rsp)
91f6(4): mov %rax,(%rsp)
91fa(5): mov %r8,0x8(%rsp)
91ff(3): mov (%rbx),%rbx
9202(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
9210(3): xor %r9d,%r9d
9213(4): cmp $0x0,(%r8)
9217(2): jz 0x14(%rip)
9219(7): nop 0x0(%rax)
9220(4): add $0x1,%r9
9224(5): cmp $0x0,0x0(%r8,%r9,8)
9229(2): jnz 0xfffffff7(%rip)
922b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
9230(4): sub $0x68,%rsp
9234(3): mov %r8,%r10
9237(3): xor %r9d,%r9d
923a(9): mov $0x28,%rax
9243(5): mov %rax,0x58(%rsp)
9248(2): xor %eax,%eax
924a(3): mov %rsp,%r8
924d(3): nop (%rax)
9250(3): mov (%r10),%eax
9253(3): cmp $0x2f,%eax
9256(2): jnbe 0x44(%rip)
9258(3): mov %eax,%r11d
925b(4): add 0x10(%r10),%r11
925f(3): add $0x8,%eax
9262(3): mov %eax,(%r10)
9265(3): mov (%r11),%rax
9268(3): test %rax,%rax
926b(4): mov %rax,0x0(%r8,%r9,8)
926f(2): jz 0xc(%rip)
9271(4): add $0x1,%r9
9275(4): cmp $0xa,%r9
9279(2): jnz 0xffffffd7(%rip)
927b(5): call 0xfffffb75(%rip)
9280(5): mov 0x58(%rsp),%rax
9285(9): xor $0x28,%rax
928e(2): jnz 0x7(%rip)
9290(4): add $0x68,%rsp
9294(1): ret near (%rsp)
9295(5): call 0xffff8c8b(%rip)
929a(4): mov 0x8(%r10),%r11
929e(4): lea 0x8(%r11),%rax
92a2(4): mov %rax,0x8(%r10)
92a6(2): jmp 0xffffffbf(%rip)

"version_etc" :
92b0(1): push %rbp
92b1(1): push %rbx
92b2(6): mov $0x20,%r10d
92b8(3): xor %r11d,%r11d
92bb(7): sub $0xb8,%rsp
92c2(9): mov $0x28,%rax
92cb(5): mov %rax,0x78(%rsp)
92d0(2): xor %eax,%eax
92d2(8): lea 0xd0(%rsp),%rax
92da(8): mov %r8,0xa0(%rsp)
92e2(8): lea 0xd0(%rsp),%rbx
92ea(5): lea 0x20(%rsp),%r8
92ef(8): mov %r9,0xa8(%rsp)
92f7(8): mov $0x20,0x8(%rsp)
92ff(5): mov %rax,0x10(%rsp)
9304(8): lea 0x80(%rsp),%rax
930c(3): xor %r9d,%r9d
930f(5): mov %rax,0x18(%rsp)
9314(3): mov %rax,%rbp
9317(9): nop 0x0(%rax,%rax,1)
9320(4): cmp $0x2f,%r10d
9324(2): jnbe 0x58(%rip)
9326(3): mov %r10d,%eax
9329(6): mov $0x1,%r11d
932f(4): add $0x8,%r10d
9333(3): add %rbp,%rax
9336(3): mov (%rax),%rax
9339(3): test %rax,%rax
933c(4): mov %rax,0x0(%r8,%r9,8)
9340(2): jz 0xc(%rip)
9342(4): add $0x1,%r9
9346(4): cmp $0xa,%r9
934a(2): jnz 0xffffffd6(%rip)
934c(3): test %r11b,%r11b
934f(2): jnz 0x26(%rip)
9351(5): call 0xfffffa9f(%rip)
9356(5): mov 0x78(%rsp),%rax
935b(9): xor $0x28,%rax
9364(2): jnz 0xc(%rip)
9366(7): add $0xb8,%rsp
936d(1): pop %rbx
936e(1): pop %rbp
936f(1): ret near (%rsp)
9370(5): call 0xffff8bb0(%rip)
9375(5): mov %r10d,0x8(%rsp)
937a(2): jmp 0xffffffd7(%rip)
937c(3): mov %rbx,%rax
937f(4): add $0x8,%rbx
9383(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
9390(1): push %rbx
9391(7): lea 0x3381(%rip),%rsi
9398(5): mov $0x5,%edx
939d(2): xor %edi,%edi
939f(5): call 0xffff8b31(%rip)
93a4(7): lea 0x3383(%rip),%rdx
93ab(3): mov %rax,%rsi
93ae(5): mov $0x1,%edi
93b3(2): xor %eax,%eax
93b5(5): call 0xffff8dbb(%rip)
93ba(7): lea 0x3383(%rip),%rsi
93c1(5): mov $0x5,%edx
93c6(2): xor %edi,%edi
93c8(5): call 0xffff8b08(%rip)
93cd(7): lea 0x2a1c(%rip),%rcx
93d4(7): lea 0x1cdc(%rip),%rdx
93db(3): mov %rax,%rsi
93de(5): mov $0x1,%edi
93e3(2): xor %eax,%eax
93e5(5): call 0xffff8d8b(%rip)
93ea(7): mov 0x206cd7(%rip),%rbx
93f1(7): lea 0x3578(%rip),%rsi
93f8(2): xor %edi,%edi
93fa(5): mov $0x5,%edx
93ff(5): call 0xffff8ad1(%rip)
9404(3): mov %rbx,%rsi
9407(3): mov %rax,%rdi
940a(1): pop %rbx
940b(5): jmp 0xffff8c25(%rip)

"xmalloc" :
9410(1): push %rbx
9411(3): mov %rdi,%rbx
9414(5): call 0xffff8cdc(%rip)
9419(3): test %rax,%rax
941c(2): jnz 0x7(%rip)
941e(3): test %rbx,%rbx
9421(2): jnz 0x4(%rip)
9423(1): pop %rbx
9424(1): ret near (%rsp)
9425(5): call 0x23b(%rip)

"xnmalloc" :
9430(3): mov %rdi,%rax
9433(3): mul %rax,%rsi,%rdx
9436(3): mov %rax,%rdi
9439(3): seto %al
943c(3): test %rdi,%rdi
943f(2): js 0xc(%rip)
9441(3): movzx %al,%eax
9444(3): test %rax,%rax
9447(2): jnz 0x4(%rip)
9449(2): jmp 0xffffffc7(%rip)
944b(4): sub $0x8,%rsp
944f(5): call 0x211(%rip)

"xrealloc" :
9470(3): test %rsi,%rsi
9473(1): push %rbx
9474(3): mov %rsi,%rbx
9477(2): jnz 0x7(%rip)
9479(3): test %rdi,%rdi
947c(2): jnz 0x1c(%rip)
947e(3): mov %rbx,%rsi
9481(5): call 0xffff8caf(%rip)
9486(3): test %rax,%rax
9489(2): jnz 0x7(%rip)
948b(3): test %rbx,%rbx
948e(2): jnz 0x13(%rip)
9490(1): pop %rbx
9491(1): ret near (%rsp)
9492(6): nop 0x0(%rax,%rax,1)
9498(5): call 0xffff8918(%rip)
949d(2): xor %eax,%eax
949f(1): pop %rbx
94a0(1): ret near (%rsp)
94a1(5): call 0x1bf(%rip)

"xnrealloc" :
94b0(3): mov %rsi,%rax
94b3(3): mul %rax,%rdx,%rdx
94b6(3): mov %rax,%rsi
94b9(3): seto %al
94bc(3): test %rsi,%rsi
94bf(2): js 0xc(%rip)
94c1(3): movzx %al,%eax
94c4(3): test %rax,%rax
94c7(2): jnz 0x4(%rip)
94c9(2): jmp 0xffffffa7(%rip)
94cb(4): sub $0x8,%rsp
94cf(5): call 0x191(%rip)

"x2nrealloc" :
94e0(3): test %rdi,%rdi
94e3(3): mov %rdx,%r9
94e6(3): mov (%rsi),%rcx
94e9(2): jz 0x37(%rip)
94eb(2): xor %edx,%edx
94ed(a): mov $0x6148914691236517204,%rax
94f7(3): div %r9,%rax
94fa(3): cmp %rcx,%rax
94fd(2): jbe 0x3e(%rip)
94ff(3): mov %rcx,%rax
9502(3): shr $0x1,%rax
9505(5): lea 0x1(%rax,%rcx,1),%rcx
950a(3): mov %rcx,(%rsi)
950d(4): imul %r9,%rcx
9511(3): mov %rcx,%rsi
9514(5): jmp 0xffffff5c(%rip)
9519(7): nop 0x0(%rax)
9520(3): test %rcx,%rcx
9523(2): jz 0x25(%rip)
9525(3): mov %rcx,%rax
9528(3): mul %rax,%r9,%rdx
952b(3): seto %dl
952e(3): test %rax,%rax
9531(3): movzx %dl,%edx
9534(2): js 0x7(%rip)
9536(3): test %rdx,%rdx
9539(2): jz 0xffffffd1(%rip)
953b(4): sub $0x8,%rsp
953f(5): call 0x121(%rip)
9544(4): nop 0x0(%rax)
9548(2): xor %edx,%edx
954a(5): mov $0x80,%eax
954f(3): xor %r8d,%r8d
9552(3): div %r9,%rax
9555(3): test %rax,%rax
9558(4): setz %r8b
955c(4): lea 0x0(%r8,%rax,1),%rcx
9560(2): jmp 0xffffffc5(%rip)

"x2realloc" :
9570(3): test %rdi,%rdi
9573(3): mov (%rsi),%rax
9576(2): jz 0x2a(%rip)
9578(a): mov $0x6148914691236517203,%rdx
9582(3): cmp %rdx,%rax
9585(2): jnbe 0x2c(%rip)
9587(3): mov %rax,%rdx
958a(3): shr $0x1,%rdx
958d(5): lea 0x1(%rdx,%rax,1),%rax
9592(3): mov %rax,(%rsi)
9595(3): mov %rax,%rsi
9598(5): jmp 0xfffffed8(%rip)
959d(3): nop (%rax)
95a0(3): test %rax,%rax
95a3(5): mov $0x80,%edx
95a8(4): cmove %rdx,%rax
95ac(3): test %rax,%rax
95af(2): jns 0xffffffe3(%rip)
95b1(4): sub $0x8,%rsp
95b5(5): call 0xab(%rip)

"xzalloc" :
95c0(1): push %rbx
95c1(3): mov %rdi,%rbx
95c4(5): call 0xfffffe4c(%rip)
95c9(3): mov %rbx,%rdx
95cc(2): xor %esi,%esi
95ce(3): mov %rax,%rdi
95d1(1): pop %rbx
95d2(5): jmp 0xffff89ee(%rip)

"xcalloc" :
95e0(3): mov %rdi,%rax
95e3(4): sub $0x8,%rsp
95e7(3): mul %rax,%rsi,%rdx
95ea(3): seto %dl
95ed(3): test %rax,%rax
95f0(2): js 0x19(%rip)
95f2(3): movzx %dl,%edx
95f5(3): test %rdx,%rdx
95f8(2): jnz 0x11(%rip)
95fa(5): call 0xffff8a46(%rip)
95ff(3): test %rax,%rax
9602(2): jz 0x7(%rip)
9604(4): add $0x8,%rsp
9608(1): ret near (%rsp)
9609(5): call 0x57(%rip)

"xmemdup" :
9610(1): push %rbp
9611(1): push %rbx
9612(3): mov %rdi,%rbp
9615(3): mov %rsi,%rdi
9618(3): mov %rsi,%rbx
961b(4): sub $0x8,%rsp
961f(5): call 0xfffffdf1(%rip)
9624(4): add $0x8,%rsp
9628(3): mov %rbx,%rdx
962b(3): mov %rbp,%rsi
962e(1): pop %rbx
962f(1): pop %rbp
9630(3): mov %rax,%rdi
9633(5): jmp 0xffff8a6d(%rip)

"xstrdup" :
9640(1): push %rbx
9641(3): mov %rdi,%rbx
9644(5): call 0xffff88ac(%rip)
9649(3): mov %rbx,%rdi
964c(4): lea 0x1(%rax),%rsi
9650(1): pop %rbx
9651(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
9660(7): lea 0x33a8(%rip),%rsi
9667(4): sub $0x8,%rsp
966b(5): mov $0x5,%edx
9670(2): xor %edi,%edi
9672(5): call 0xffff885e(%rip)
9677(6): mov 0x2069a3(%rip),%edi
967d(7): lea 0x33f3(%rip),%rdx
9684(3): mov %rax,%rcx
9687(2): xor %esi,%esi
9689(2): xor %eax,%eax
968b(5): call 0xffff8b25(%rip)
9690(5): call 0xffff8730(%rip)

"xgetcwd" :
96a0(1): push %rbx
96a1(2): xor %esi,%esi
96a3(2): xor %edi,%edi
96a5(5): call 0xffff892b(%rip)
96aa(3): test %rax,%rax
96ad(3): mov %rax,%rbx
96b0(2): jz 0x10(%rip)
96b2(3): mov %rbx,%rax
96b5(1): pop %rbx
96b6(1): ret near (%rsp)
96b7(9): nop 0x0(%rax,%rax,1)
96c0(5): call 0xffff8710(%rip)
96c5(3): cmp $0xc,(%rax)
96c8(2): jnz 0xffffffea(%rip)
96ca(5): call 0xffffff96(%rip)

"yesno" :
96d0(1): push %rbx
96d1(5): mov $0xa,%edx
96d6(2): xor %ebx,%ebx
96d8(4): sub $0x20,%rsp
96dc(7): mov 0x2069ed(%rip),%rcx
96e3(5): lea 0x10(%rsp),%rsi
96e8(5): lea 0x8(%rsp),%rdi
96ed(9): mov $0x0,0x8(%rsp)
96f6(9): mov $0x28,%rax
96ff(5): mov %rax,0x18(%rsp)
9704(2): xor %eax,%eax
9706(9): mov $0x0,0x10(%rsp)
970f(5): call 0xffff8941(%rip)
9714(3): test %rax,%rax
9717(2): jle 0x1b(%rip)
9719(5): mov 0x8(%rsp),%rdi
971e(5): lea 0xffffffff(%rdi,%rax,1),%rax
9723(3): cmp $0xa,(%rax)
9726(2): jz 0x32(%rip)
9728(5): call 0xffff8958(%rip)
972d(2): test %eax,%eax
972f(3): setnle %bl
9732(5): mov 0x8(%rsp),%rdi
9737(5): call 0xffff8679(%rip)
973c(5): mov 0x18(%rsp),%rdx
9741(9): xor $0x28,%rdx
974a(2): mov %ebx,%eax
974c(2): jnz 0x16(%rip)
974e(4): add $0x20,%rsp
9752(1): pop %rbx
9753(1): ret near (%rsp)
9754(4): nop 0x0(%rax)
9758(3): mov $0x0,(%rax)
975b(5): mov 0x8(%rsp),%rdi
9760(2): jmp 0xffffffc8(%rip)
9762(5): call 0xffff87be(%rip)

"rpl_fflush" :
9770(3): test %rdi,%rdi
9773(1): push %rbx
9774(3): mov %rdi,%rbx
9777(2): jz 0x13(%rip)
9779(5): call 0xffff89a7(%rip)
977e(2): test %eax,%eax
9780(2): jz 0xa(%rip)
9782(6): test $0x100,(%rbx)
9788(2): jnz 0x10(%rip)
978a(3): mov %rbx,%rdi
978d(1): pop %rbx
978e(5): jmp 0xffff8972(%rip)
9793(5): nop 0x0(%rax,%rax,1)
9798(3): mov %rbx,%rdi
979b(5): mov $0x1,%edx
97a0(2): xor %esi,%esi
97a2(5): call 0x3e(%rip)
97a7(3): mov %rbx,%rdi
97aa(1): pop %rbx
97ab(5): jmp 0xffff8955(%rip)

"freadahead" :
97b0(2): xor %eax,%eax
97b2(4): mov 0x20(%rdi),%rcx
97b6(4): cmp %rcx,0x28(%rdi)
97ba(2): jnbe 0x1d(%rip)
97bc(4): mov 0x10(%rdi),%rax
97c0(4): sub 0x8(%rdi),%rax
97c4(6): test $0x100,(%rdi)
97ca(2): jz 0xd(%rip)
97cc(4): mov 0x58(%rdi),%rdx
97d0(4): sub 0x48(%rdi),%rdx
97d4(3): add %rdx,%rax
97d7(2): REP ret near (%rsp)

"rpl_fseeko" :
97e0(4): mov 0x8(%rdi),%rax
97e4(4): cmp %rax,0x10(%rdi)
97e8(2): jz 0x8(%rip)
97ea(5): jmp 0xffff89f6(%rip)
97ef(1): nop 
97f0(4): mov 0x20(%rdi),%rax
97f4(4): cmp %rax,0x28(%rdi)
97f8(2): jnz 0xfffffff2(%rip)
97fa(5): cmp $0x0,0x48(%rdi)
97ff(2): jnz 0xffffffeb(%rip)
9801(2): push %r12
9803(1): push %rbp
9804(3): mov %edx,%r12d
9807(1): push %rbx
9808(3): mov %rsi,%rbp
980b(3): mov %rdi,%rbx
980e(5): call 0xffff88a2(%rip)
9813(3): mov %r12d,%edx
9816(3): mov %rbp,%rsi
9819(2): mov %eax,%edi
981b(5): call 0xffff8775(%rip)
9820(4): cmp $0xffffffff,%rax
9824(2): jz 0xe(%rip)
9826(3): and $0xef,(%rbx)
9829(7): mov %rax,0x90(%rbx)
9830(2): xor %eax,%eax
9832(1): pop %rbx
9833(1): pop %rbp
9834(2): pop %r12
9836(1): ret near (%rsp)

"rpl_mbrtowc" :
9840(2): push %r13
9842(2): push %r12
9844(3): mov %rsi,%r13
9847(1): push %rbp
9848(1): push %rbx
9849(3): mov %rdi,%rbx
984c(3): mov %rdx,%r12
984f(4): sub $0x18,%rsp
9853(9): mov $0x28,%rax
985c(5): mov %rax,0x8(%rsp)
9861(2): xor %eax,%eax
9863(5): lea 0x4(%rsp),%rax
9868(3): test %rdi,%rdi
986b(4): cmove %rax,%rbx
986f(3): mov %rbx,%rdi
9872(5): call 0xffff86de(%rip)
9877(4): cmp $0xfffffffd,%rax
987b(3): mov %rax,%rbp
987e(2): jbe 0x22(%rip)
9880(3): test %r12,%r12
9883(2): jz 0x1d(%rip)
9885(2): xor %edi,%edi
9887(5): call 0x549(%rip)
988c(2): test %al,%al
988e(2): jnz 0x12(%rip)
9890(5): movzx 0x0(%r13),%eax
9895(5): mov $0x1,%ebp
989a(2): mov %eax,(%rbx)
989c(4): nop 0x0(%rax)
98a0(5): mov 0x8(%rsp),%rdx
98a5(9): xor $0x28,%rdx
98ae(3): mov %rbp,%rax
98b1(2): jnz 0xd(%rip)
98b3(4): add $0x18,%rsp
98b7(1): pop %rbx
98b8(1): pop %rbp
98b9(2): pop %r12
98bb(2): pop %r13
98bd(1): ret near (%rsp)
98be(5): call 0xffff8662(%rip)

"areadlink_with_size" :
98d0(2): push %r15
98d2(2): push %r14
98d4(5): mov $0x401,%eax
98d9(2): push %r13
98db(2): push %r12
98dd(3): mov %rdi,%r13
98e0(1): push %rbp
98e1(1): push %rbx
98e2(4): lea 0x1(%rsi),%rbx
98e6(a): mov $0x4611686018427387903,%r14
98f0(a): mov $0x9223372036854775806,%r15
98fa(4): sub $0x8,%rsp
98fe(7): cmp $0x401,%rsi
9905(4): cmovnb %rax,%rbx
9909(7): nop 0x0(%rax)
9910(3): mov %rbx,%rdi
9913(5): call 0xffff87dd(%rip)
9918(3): test %rax,%rax
991b(3): mov %rax,%rbp
991e(2): jz 0x3d(%rip)
9920(3): mov %rbx,%rdx
9923(3): mov %rax,%rsi
9926(3): mov %r13,%rdi
9929(5): call 0xffff8527(%rip)
992e(3): test %rax,%rax
9931(3): mov %rax,%r12
9934(2): js 0x54(%rip)
9936(3): cmp %r12,%rbx
9939(2): jnbe 0x67(%rip)
993b(3): mov %rbp,%rdi
993e(5): call 0xffff8472(%rip)
9943(3): cmp %r14,%rbx
9946(2): jnbe 0x2a(%rip)
9948(3): add %rbx,%rbx
994b(3): mov %rbx,%rdi
994e(5): call 0xffff87a2(%rip)
9953(3): test %rax,%rax
9956(3): mov %rax,%rbp
9959(2): jnz 0xffffffc7(%rip)
995b(4): add $0x8,%rsp
995f(3): mov %rbp,%rax
9962(1): pop %rbx
9963(1): pop %rbp
9964(2): pop %r12
9966(2): pop %r13
9968(2): pop %r14
996a(2): pop %r15
996c(1): ret near (%rsp)
996d(3): nop (%rax)
9970(3): cmp %r15,%rbx
9973(2): jnbe 0x3d(%rip)
9975(a): mov $0x9223372036854775807,%rbx
997f(2): jmp 0xffffff91(%rip)
9981(7): nop 0x0(%rax)
9988(5): call 0xffff8448(%rip)
998d(3): cmp $0x22,(%rax)
9990(2): jz 0xffffffa6(%rip)
9992(3): mov %rbp,%rdi
9995(2): xor %ebp,%ebp
9997(5): call 0xffff8419(%rip)
999c(2): jmp 0xffffffbf(%rip)
999e(2): nop 
99a0(6): mov $0x0,0x0(%rbp,%r12,1)
99a6(2): jmp 0xffffffb5(%rip)
99a8(8): nop 0x0(%rax,%rax,1)
99b0(5): call 0xffff8420(%rip)
99b5(2): xor %ebp,%ebp
99b7(6): mov $0xc,(%rax)
99bd(2): jmp 0xffffff9e(%rip)

"__argmatch_die" :
99c0(5): mov $0x1,%edi
99c5(5): jmp 0xffff9cfb(%rip)

"argmatch" :
99d0(2): push %r15
99d2(2): push %r14
99d4(3): mov %rsi,%r15
99d7(2): push %r13
99d9(2): push %r12
99db(3): mov %rcx,%r13
99de(1): push %rbp
99df(1): push %rbx
99e0(3): mov %rdx,%rbp
99e3(4): sub $0x28,%rsp
99e7(5): mov %rdi,0x8(%rsp)
99ec(5): mov %rdx,0x18(%rsp)
99f1(5): call 0xffff84ff(%rip)
99f6(3): mov (%r15),%r14
99f9(8): mov $0xffffffff,(%rsp)
9a01(3): test %r14,%r14
9a04(6): jz 0xb9(%rip)
9a0a(3): mov %rax,%r12
9a0d(5): mov $0x0,0x17(%rsp)
9a12(2): xor %ebx,%ebx
9a14(2): jmp 0x53(%rip)
9a16(a): nop 0x0(%rax,%rax,1)
9a20(5): mov 0x18(%rsp),%rax
9a25(3): test %rax,%rax
9a28(6): jz 0xa8(%rip)
9a2e(4): mov (%rsp),%rdi
9a32(3): mov %r13,%rdx
9a35(3): mov %rbp,%rsi
9a38(4): imul %r13,%rdi
9a3c(3): add %rax,%rdi
9a3f(5): call 0xffff85e1(%rip)
9a44(2): test %eax,%eax
9a46(5): movzx 0x17(%rsp),%eax
9a4b(5): mov $0x1,%ecx
9a50(3): cmovne %ecx,%eax
9a53(4): mov %al,0x17(%rsp)
9a57(4): add $0x1,%rbx
9a5b(3): add %r13,%rbp
9a5e(4): mov 0x0(%r15,%rbx,8),%r14
9a62(3): test %r14,%r14
9a65(2): jz 0x43(%rip)
9a67(5): mov 0x8(%rsp),%rsi
9a6c(3): mov %r12,%rdx
9a6f(3): mov %r14,%rdi
9a72(5): call 0xffff836e(%rip)
9a77(2): test %eax,%eax
9a79(2): jnz 0xffffffde(%rip)
9a7b(3): mov %r14,%rdi
9a7e(5): call 0xffff8472(%rip)
9a83(3): cmp %r12,%rax
9a86(2): jz 0x5a(%rip)
9a88(5): cmp $0xffffffff,(%rsp)
9a8d(2): jnz 0xffffff93(%rip)
9a8f(4): mov %rbx,(%rsp)
9a93(4): add $0x1,%rbx
9a97(3): add %r13,%rbp
9a9a(4): mov 0x0(%r15,%rbx,8),%r14
9a9e(3): test %r14,%r14
9aa1(2): jnz 0xffffffc6(%rip)
9aa3(5): nop 0x0(%rax,%rax,1)
9aa8(5): cmp $0x0,0x17(%rsp)
9aad(7): mov $0xfffffffe,%rax
9ab4(5): cmove (%rsp),%rax
9ab9(4): mov %rax,(%rsp)
9abd(4): mov (%rsp),%rax
9ac1(4): add $0x28,%rsp
9ac5(1): pop %rbx
9ac6(1): pop %rbp
9ac7(2): pop %r12
9ac9(2): pop %r13
9acb(2): pop %r14
9acd(2): pop %r15
9acf(1): ret near (%rsp)
9ad0(5): mov $0x1,0x17(%rsp)
9ad5(2): jmp 0xffffff82(%rip)
9ad7(9): nop 0x0(%rax,%rax,1)
9ae0(4): mov %rbx,(%rsp)
9ae4(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
9af0(4): cmp $0xffffffff,%rdx
9af4(2): push %r12
9af6(5): mov $0x5,%edx
9afb(1): push %rbp
9afc(3): mov %rsi,%r12
9aff(1): push %rbx
9b00(3): mov %rdi,%rbp
9b03(2): jz 0x4d(%rip)
9b05(7): lea 0x2f2f(%rip),%rsi
9b0c(2): xor %edi,%edi
9b0e(5): call 0xffff83c2(%rip)
9b13(3): mov %rax,%rbx
9b16(3): mov %rbp,%rsi
9b19(5): mov $0x1,%edi
9b1e(5): call 0xffffeb12(%rip)
9b23(3): mov %r12,%rdx
9b26(3): mov %rax,%rbp
9b29(5): mov $0x8,%esi
9b2e(2): xor %edi,%edi
9b30(5): call 0xffffe730(%rip)
9b35(3): mov %rbp,%r8
9b38(3): mov %rbx,%rdx
9b3b(3): mov %rax,%rcx
9b3e(1): pop %rbx
9b3f(1): pop %rbp
9b40(2): pop %r12
9b42(2): xor %esi,%esi
9b44(2): xor %edi,%edi
9b46(2): xor %eax,%eax
9b48(5): jmp 0xffff8668(%rip)
9b4d(3): nop (%rax)
9b50(7): lea 0x2ec9(%rip),%rsi
9b57(2): xor %edi,%edi
9b59(5): call 0xffff8377(%rip)
9b5e(3): mov %rax,%rbx
9b61(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
9b70(2): push %r15
9b72(2): push %r14
9b74(3): mov %rdi,%r14
9b77(2): push %r13
9b79(2): push %r12
9b7b(2): xor %edi,%edi
9b7d(1): push %rbp
9b7e(1): push %rbx
9b7f(3): mov %rsi,%rbp
9b82(7): lea 0x2ecf(%rip),%rsi
9b89(3): mov %rdx,%r12
9b8c(5): mov $0x5,%edx
9b91(4): sub $0x8,%rsp
9b95(7): mov 0x206564(%rip),%rbx
9b9c(5): call 0xffff8334(%rip)
9ba1(3): mov %rax,%rdi
9ba4(3): mov %rbx,%rsi
9ba7(5): call 0xffff8489(%rip)
9bac(3): mov (%r14),%r15
9baf(3): test %r15,%r15
9bb2(6): jz 0x96(%rip)
9bb8(3): xor %r13d,%r13d
9bbb(2): xor %ebx,%ebx
9bbd(2): jmp 0x3b(%rip)
9bbf(1): nop 
9bc0(3): mov %r15,%rdi
9bc3(4): add $0x1,%rbx
9bc7(3): mov %rbp,%r13
9bca(5): call 0xffffea86(%rip)
9bcf(7): mov 0x20652a(%rip),%rdi
9bd6(7): lea 0x2e90(%rip),%rdx
9bdd(3): mov %rax,%rcx
9be0(5): mov $0x1,%esi
9be5(2): xor %eax,%eax
9be7(3): add %r12,%rbp
9bea(5): call 0xffff8676(%rip)
9bef(4): mov 0x0(%r14,%rbx,8),%r15
9bf3(3): test %r15,%r15
9bf6(2): jz 0x52(%rip)
9bf8(3): test %rbx,%rbx
9bfb(2): jz 0xffffffc5(%rip)
9bfd(3): mov %r12,%rdx
9c00(3): mov %rbp,%rsi
9c03(3): mov %r13,%rdi
9c06(5): call 0xffff841a(%rip)
9c0b(2): test %eax,%eax
9c0d(2): jnz 0xffffffb3(%rip)
9c0f(3): mov %r15,%rdi
9c12(4): add $0x1,%rbx
9c16(3): add %r12,%rbp
9c19(5): call 0xffffea37(%rip)
9c1e(7): mov 0x2064db(%rip),%rdi
9c25(7): lea 0x2e49(%rip),%rdx
9c2c(3): mov %rax,%rcx
9c2f(5): mov $0x1,%esi
9c34(2): xor %eax,%eax
9c36(5): call 0xffff862a(%rip)
9c3b(4): mov 0x0(%r14,%rbx,8),%r15
9c3f(3): test %r15,%r15
9c42(2): jnz 0xffffffb6(%rip)
9c44(4): nop 0x0(%rax)
9c48(7): mov 0x2064b1(%rip),%rdi
9c4f(4): mov 0x28(%rdi),%rax
9c53(4): cmp 0x30(%rdi),%rax
9c57(2): jnb 0x21(%rip)
9c59(4): lea 0x1(%rax),%rdx
9c5d(4): mov %rdx,0x28(%rdi)
9c61(3): mov $0xa,(%rax)
9c64(4): add $0x8,%rsp
9c68(1): pop %rbx
9c69(1): pop %rbp
9c6a(2): pop %r12
9c6c(2): pop %r13
9c6e(2): pop %r14
9c70(2): pop %r15
9c72(1): ret near (%rsp)
9c73(5): nop 0x0(%rax,%rax,1)
9c78(4): add $0x8,%rsp
9c7c(5): mov $0xa,%esi
9c81(1): pop %rbx
9c82(1): pop %rbp
9c83(2): pop %r12
9c85(2): pop %r13
9c87(2): pop %r14
9c89(2): pop %r15
9c8b(5): jmp 0xffff82e5(%rip)

"__xargmatch_internal" :
9c90(2): push %r15
9c92(2): push %r14
9c94(3): mov %rdi,%r14
9c97(2): push %r13
9c99(2): push %r12
9c9b(3): mov %rsi,%r12
9c9e(1): push %rbp
9c9f(1): push %rbx
9ca0(3): mov %rcx,%rbp
9ca3(3): mov %rdx,%rbx
9ca6(3): mov %r8,%rcx
9ca9(3): mov %rbp,%rdx
9cac(4): sub $0x8,%rsp
9cb0(3): mov %rbx,%rsi
9cb3(3): mov %r12,%rdi
9cb6(3): mov %r8,%r15
9cb9(3): mov %r9,%r13
9cbc(5): call 0xfffffd14(%rip)
9cc1(3): test %rax,%rax
9cc4(2): js 0x11(%rip)
9cc6(4): add $0x8,%rsp
9cca(1): pop %rbx
9ccb(1): pop %rbp
9ccc(2): pop %r12
9cce(2): pop %r13
9cd0(2): pop %r14
9cd2(2): pop %r15
9cd4(1): ret near (%rsp)
9cd5(3): mov %rax,%rdx
9cd8(3): mov %r12,%rsi
9cdb(3): mov %r14,%rdi
9cde(5): call 0xfffffe12(%rip)
9ce3(3): mov %r15,%rdx
9ce6(3): mov %rbp,%rsi
9ce9(3): mov %rbx,%rdi
9cec(5): call 0xfffffe84(%rip)
9cf1(3): call %r13
9cf4(7): mov $0xffffffff,%rax
9cfb(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
9d00(2): push %r14
9d02(2): push %r13
9d04(2): push %r12
9d06(1): push %rbp
9d07(1): push %rbx
9d08(3): mov (%rsi),%r14
9d0b(3): test %r14,%r14
9d0e(2): jz 0x33(%rip)
9d10(3): mov %rcx,%r12
9d13(3): mov %rdi,%r13
9d16(3): mov %rdx,%rbp
9d19(4): lea 0x8(%rsi),%rbx
9d1d(2): jmp 0x12(%rip)
9d1f(1): nop 
9d20(3): mov (%rbx),%r14
9d23(3): add %r12,%rbp
9d26(4): add $0x8,%rbx
9d2a(3): test %r14,%r14
9d2d(2): jz 0x14(%rip)
9d2f(3): mov %r12,%rdx
9d32(3): mov %rbp,%rsi
9d35(3): mov %r13,%rdi
9d38(5): call 0xffff82e8(%rip)
9d3d(2): test %eax,%eax
9d3f(2): jnz 0xffffffe1(%rip)
9d41(1): pop %rbx
9d42(3): mov %r14,%rax
9d45(1): pop %rbp
9d46(2): pop %r12
9d48(2): pop %r13
9d4a(2): pop %r14
9d4c(1): ret near (%rsp)

"close_stream" :
9d50(2): push %r12
9d52(1): push %rbp
9d53(3): mov %rdi,%rbp
9d56(1): push %rbx
9d57(5): call 0xffff80b9(%rip)
9d5c(3): mov 0x0(%rbp),%ebx
9d5f(3): mov %rbp,%rdi
9d62(3): mov %rax,%r12
9d65(5): call 0xdeb(%rip)
9d6a(3): and $0x20,%ebx
9d6d(2): test %ebx,%ebx
9d6f(2): jnz 0x19(%rip)
9d71(2): test %eax,%eax
9d73(2): jz 0xc(%rip)
9d75(3): test %r12,%r12
9d78(5): mov $0xffffffff,%eax
9d7d(2): jz 0x3b(%rip)
9d7f(1): pop %rbx
9d80(1): pop %rbp
9d81(2): pop %r12
9d83(1): ret near (%rsp)
9d84(4): nop 0x0(%rax)
9d88(2): test %eax,%eax
9d8a(2): jnz 0x1e(%rip)
9d8c(5): call 0xffff8044(%rip)
9d91(6): mov $0x0,(%rax)
9d97(5): mov $0xffffffff,%eax
9d9c(1): pop %rbx
9d9d(1): pop %rbp
9d9e(2): pop %r12
9da0(1): ret near (%rsp)
9da1(7): nop 0x0(%rax)
9da8(1): pop %rbx
9da9(5): mov $0xffffffff,%eax
9dae(1): pop %rbp
9daf(2): pop %r12
9db1(1): ret near (%rsp)
9db2(6): nop 0x0(%rax,%rax,1)
9db8(5): call 0xffff8018(%rip)
9dbd(3): cmp $0x9,(%rax)
9dc0(1): pop %rbx
9dc1(1): pop %rbp
9dc2(2): pop %r12
9dc4(3): setnz %al
9dc7(3): movzx %al,%eax
9dca(2): neg %eax
9dcc(1): ret near (%rsp)

"hard_locale" :
9dd0(4): sub $0x8,%rsp
9dd4(2): xor %esi,%esi
9dd6(5): call 0xffff838a(%rip)
9ddb(3): mov %rax,%rdx
9dde(5): mov $0x1,%eax
9de3(3): test %rdx,%rdx
9de6(2): jz 0x1f(%rip)
9de8(7): lea 0x2c8b(%rip),%rdi
9def(5): mov $0x2,%ecx
9df4(3): mov %rdx,%rsi
9df7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
9df9(3): setnbe %cl
9dfc(3): sbb $0x0,%cl
9dff(2): xor %eax,%eax
9e01(2): test %cl,%cl
9e03(2): jnz 0xd(%rip)
9e05(4): add $0x8,%rsp
9e09(1): ret near (%rsp)
9e0a(6): nop 0x0(%rax,%rax,1)
9e10(7): lea 0x2c65(%rip),%rdi
9e17(5): mov $0x6,%ecx
9e1c(3): mov %rdx,%rsi
9e1f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
9e21(3): setnbe %al
9e24(2): sbb $0x0,%al
9e26(2): test %al,%al
9e28(3): setnz %al
9e2b(4): add $0x8,%rsp
9e2f(1): ret near (%rsp)

"hash_pjw" :
9e30(4): movsx (%rdi),%rcx
9e34(2): test %cl,%cl
9e36(2): jz 0x2a(%rip)
9e38(2): xor %eax,%eax
9e3a(6): nop 0x0(%rax,%rax,1)
9e40(4): rol $0x9,%rax
9e44(4): add $0x1,%rdi
9e48(3): add %rcx,%rax
9e4b(4): movsx (%rdi),%rcx
9e4f(2): test %cl,%cl
9e51(2): jnz 0xffffffef(%rip)
9e53(2): xor %edx,%edx
9e55(3): div %rsi,%rax
9e58(3): mov %rdx,%rax
9e5b(1): ret near (%rsp)
9e5c(4): nop 0x0(%rax)
9e60(2): xor %edx,%edx
9e62(3): mov %rdx,%rax
9e65(1): ret near (%rsp)

"locale_charset" :
9e70(4): sub $0x8,%rsp
9e74(5): mov $0xe,%edi
9e79(5): call 0xffff8297(%rip)
9e7e(3): test %rax,%rax
9e81(2): jz 0x1f(%rip)
9e83(3): cmp $0x0,(%rax)
9e86(7): lea 0x2bf5(%rip),%rdx
9e8d(4): cmove %rdx,%rax
9e91(4): add $0x8,%rsp
9e95(1): ret near (%rsp)
9e96(a): nop 0x0(%rax,%rax,1)
9ea0(7): lea 0x2bdb(%rip),%rax
9ea7(4): add $0x8,%rsp
9eab(1): ret near (%rsp)

"randint_new" :
9eb0(1): push %rbx
9eb1(3): mov %rdi,%rbx
9eb4(5): mov $0x18,%edi
9eb9(5): call 0xfffff557(%rip)
9ebe(3): mov %rbx,(%rax)
9ec1(8): mov $0x0,0x10(%rax)
9ec9(8): mov $0x0,0x8(%rax)
9ed1(1): pop %rbx
9ed2(1): ret near (%rsp)

"randint_all_new" :
9ee0(1): push %rbx
9ee1(5): call 0x24f(%rip)
9ee6(3): test %rax,%rax
9ee9(2): jz 0x27(%rip)
9eeb(3): mov %rax,%rbx
9eee(5): mov $0x18,%edi
9ef3(5): call 0xfffff51d(%rip)
9ef8(3): mov %rbx,(%rax)
9efb(8): mov $0x0,0x10(%rax)
9f03(8): mov $0x0,0x8(%rax)
9f0b(1): pop %rbx
9f0c(1): ret near (%rsp)
9f0d(3): nop (%rax)
9f10(2): xor %eax,%eax
9f12(1): pop %rbx
9f13(1): ret near (%rsp)

"randint_get_source" :
9f20(3): mov (%rdi),%rax
9f23(1): ret near (%rsp)

"randint_genmax" :
9f30(2): push %r15
9f32(2): push %r14
9f34(4): lea 0x1(%rsi),%r15
9f38(2): push %r13
9f3a(2): push %r12
9f3c(3): mov %rdi,%r13
9f3f(1): push %rbp
9f40(1): push %rbx
9f41(3): mov %rsi,%r14
9f44(4): sub $0x28,%rsp
9f48(4): mov 0x8(%rdi),%rbp
9f4c(4): mov 0x10(%rdi),%rbx
9f50(9): mov $0x28,%rax
9f59(5): mov %rax,0x18(%rsp)
9f5e(2): xor %eax,%eax
9f60(3): mov (%rdi),%rax
9f63(5): lea 0x10(%rsp),%r12
9f68(5): mov %rax,0x8(%rsp)
9f6d(2): jmp 0x38(%rip)
9f6f(1): nop 
9f70(3): cmp %r14,%rbx
9f73(6): jz 0x8c(%rip)
9f79(3): mov %rbx,%rax
9f7c(2): xor %edx,%edx
9f7e(3): sub %r14,%rax
9f81(3): div %r15,%rax
9f84(3): sub %rdx,%rbx
9f87(3): mov %rdx,%rdi
9f8a(3): mov %rax,%rsi
9f8d(2): xor %edx,%edx
9f8f(3): mov %rbp,%rax
9f92(3): div %r15,%rax
9f95(3): cmp %rbx,%rbp
9f98(6): jbe 0xa0(%rip)
9f9e(4): lea 0xffffffff(%rdi),%rbx
9fa2(3): mov %rdx,%rbp
9fa5(3): cmp %r14,%rbx
9fa8(2): jnb 0xffffffc8(%rip)
9faa(3): mov %rbx,%rax
9fad(2): xor %edx,%edx
9faf(1): nop 
9fb0(4): shl/sal $0x8,%rax
9fb4(4): add $0x1,%rdx
9fb8(6): add $0xff,%rax
9fbe(3): cmp %rax,%r14
9fc1(2): jnbe 0xffffffef(%rip)
9fc3(5): mov 0x8(%rsp),%rdi
9fc8(3): mov %r12,%rsi
9fcb(5): call 0x4b5(%rip)
9fd0(3): mov %r12,%rax
9fd3(5): nop 0x0(%rax,%rax,1)
9fd8(3): movzx (%rax),%edx
9fdb(4): shl/sal $0x8,%rbx
9fdf(4): shl/sal $0x8,%rbp
9fe3(7): add $0xff,%rbx
9fea(4): add $0x1,%rax
9fee(3): add %rdx,%rbp
9ff1(3): cmp %rbx,%r14
9ff4(2): jnbe 0xffffffe4(%rip)
9ff6(3): cmp %r14,%rbx
9ff9(6): jnz 0xffffff80(%rip)
9fff(8): mov $0x0,0x10(%r13)
a007(8): mov $0x0,0x8(%r13)
a00f(5): mov 0x18(%rsp),%rcx
a014(9): xor $0x28,%rcx
a01d(3): mov %rbp,%rax
a020(2): jnz 0x25(%rip)
a022(4): add $0x28,%rsp
a026(1): pop %rbx
a027(1): pop %rbp
a028(2): pop %r12
a02a(2): pop %r13
a02c(2): pop %r14
a02e(2): pop %r15
a030(1): ret near (%rsp)
a031(7): nop 0x0(%rax)
a038(4): mov %rax,0x8(%r13)
a03c(4): mov %rsi,0x10(%r13)
a040(3): mov %rdx,%rbp
a043(2): jmp 0xffffffcc(%rip)
a045(5): call 0xffff7edb(%rip)

"randint_free" :
a050(1): push %rbx
a051(7): mov $0xffffffff,%rdx
a058(3): mov %rdi,%rbx
a05b(5): mov $0x18,%esi
a060(5): call 0xffff8160(%rip)
a065(3): mov %rbx,%rdi
a068(1): pop %rbx
a069(5): jmp 0xffff7d47(%rip)

"randint_all_free" :
a070(2): push %r13
a072(2): push %r12
a074(1): push %rbp
a075(1): push %rbx
a076(3): mov %rdi,%rbx
a079(4): sub $0x8,%rsp
a07d(3): mov (%rdi),%rdi
a080(5): call 0x5a0(%rip)
a085(3): mov %eax,%r12d
a088(5): call 0xffff7d48(%rip)
a08d(3): mov (%rax),%r13d
a090(3): mov %rbx,%rdi
a093(7): mov $0xffffffff,%rdx
a09a(5): mov $0x18,%esi
a09f(3): mov %rax,%rbp
a0a2(5): call 0xffff811e(%rip)
a0a7(3): mov %rbx,%rdi
a0aa(5): call 0xffff7d06(%rip)
a0af(4): mov %r13d,0x0(%rbp)
a0b3(4): add $0x8,%rsp
a0b7(3): mov %r12d,%eax
a0ba(1): pop %rbx
a0bb(1): pop %rbp
a0bc(2): pop %r12
a0be(2): pop %r13
a0c0(1): ret near (%rsp)

"randread_error" :
a0d0(1): push %rbp
a0d1(1): push %rbx
a0d2(4): sub $0x8,%rsp
a0d6(3): test %rdi,%rdi
a0d9(2): jz 0x3f(%rip)
a0db(5): call 0xffffe575(%rip)
a0e0(3): mov %rax,%rbp
a0e3(5): call 0xffff7ced(%rip)
a0e8(3): cmp $0x0,(%rax)
a0eb(3): mov %rax,%rbx
a0ee(5): mov $0x5,%edx
a0f3(2): jz 0x2a(%rip)
a0f5(7): lea 0x299c(%rip),%rsi
a0fc(2): xor %edi,%edi
a0fe(5): call 0xffff7dd2(%rip)
a103(6): mov 0x205f17(%rip),%edi
a109(2): mov (%rbx),%esi
a10b(3): mov %rax,%rdx
a10e(3): mov %rbp,%rcx
a111(2): xor %eax,%eax
a113(5): call 0xffff809d(%rip)
a118(5): call 0xffff7ca8(%rip)
a11d(7): lea 0x2964(%rip),%rsi
a124(2): xor %edi,%edi
a126(5): call 0xffff7daa(%rip)
a12b(2): jmp 0xffffffd8(%rip)

"randread_new" :
a130(2): push %r15
a132(2): push %r14
a134(2): push %r13
a136(2): push %r12
a138(1): push %rbp
a139(1): push %rbx
a13a(4): sub $0x38,%rsp
a13e(9): mov $0x28,%rax
a147(5): mov %rax,0x28(%rsp)
a14c(2): xor %eax,%eax
a14e(3): test %rsi,%rsi
a151(6): jz 0x127(%rip)
a157(3): test %rdi,%rdi
a15a(3): mov %rdi,%r12
a15d(3): mov %rsi,%rbp
a160(2): jz 0x80(%rip)
a162(7): lea 0x294b(%rip),%rsi
a169(5): call 0xce7(%rip)
a16e(3): test %rax,%rax
a171(3): mov %rax,%r13
a174(6): jz 0x204(%rip)
a17a(5): mov $0x1038,%edi
a17f(5): call 0xfffff291(%rip)
a184(3): mov %rax,%rbx
a187(3): mov %r13,(%rax)
a18a(7): lea 0xffffff3f(%rip),%rax
a191(7): cmp $0x1000,%rbp
a198(5): mov $0x1000,%ecx
a19d(4): lea 0x18(%rbx),%rsi
a1a1(4): cmovbe %rbp,%rcx
a1a5(4): mov %rax,0x8(%rbx)
a1a9(4): mov %r12,0x10(%rbx)
a1ad(2): xor %edx,%edx
a1af(3): mov %r13,%rdi
a1b2(5): call 0xffff7fce(%rip)
a1b7(5): mov 0x28(%rsp),%rdx
a1bc(9): xor $0x28,%rdx
a1c5(3): mov %rbx,%rax
a1c8(6): jnz 0x1b7(%rip)
a1ce(4): add $0x38,%rsp
a1d2(1): pop %rbx
a1d3(1): pop %rbp
a1d4(2): pop %r12
a1d6(2): pop %r13
a1d8(2): pop %r14
a1da(2): pop %r15
a1dc(1): ret near (%rsp)
a1dd(3): nop (%rax)
a1e0(5): mov $0x1038,%edi
a1e5(5): call 0xfffff22b(%rip)
a1ea(3): mov %rax,%rbx
a1ed(7): mov $0x0,(%rax)
a1f4(7): lea 0xfffffed5(%rip),%rax
a1fb(7): lea 0x28a5(%rip),%rdi
a202(2): xor %esi,%esi
a204(8): mov $0x0,0x10(%rbx)
a20c(4): mov %rax,0x8(%rbx)
a210(8): mov $0x0,0x18(%rbx)
a218(2): xor %eax,%eax
a21a(5): call 0xffff7fb6(%rip)
a21f(2): test %eax,%eax
a221(4): lea 0x20(%rbx),%r13
a225(3): mov %eax,%r15d
a228(2): js 0x80(%rip)
a22a(7): cmp $0x800,%rbp
a231(3): mov %rbp,%rdx
a234(6): mov $0x800,%r14d
a23a(4): cmovnbe %r14,%rdx
a23e(5): mov $0x1018,%ecx
a243(3): mov %r13,%rsi
a246(2): mov %eax,%edi
a248(5): call 0xffff7bd8(%rip)
a24d(3): mov %r15d,%edi
a250(3): mov %rax,%rbp
a253(5): call 0xffff7d8d(%rip)
a258(7): cmp $0x7ff,%rbp
a25f(6): jle 0x125(%rip)
a265(3): mov %r13,%rdi
a268(5): call 0x698(%rip)
a26d(5): jmp 0xffffff4a(%rip)
a272(6): nop 0x0(%rax,%rax,1)
a278(5): mov $0x1038,%edi
a27d(5): call 0xfffff193(%rip)
a282(3): mov %rax,%rbx
a285(7): mov $0x0,(%rax)
a28c(7): lea 0xfffffe3d(%rip),%rax
a293(8): mov $0x0,0x10(%rbx)
a29b(4): mov %rax,0x8(%rbx)
a29f(5): jmp 0xffffff18(%rip)
a2a4(4): nop 0x0(%rax)
a2a8(5): lea 0x10(%rsp),%r12
a2ad(2): xor %esi,%esi
a2af(6): mov $0x18,%r14d
a2b5(3): mov %r12,%rdi
a2b8(5): call 0xffff7ce8(%rip)
a2bd(6): movdqa 0x10(%rsp),%xmm0
a2c3(4): movups %xmm0,0x20(%rbx)
a2c7(5): call 0xffff7ba9(%rip)
a2cc(3): mov %eax,0x30(%rbx)
a2cf(4): mov %eax,0x10(%rsp)
a2d3(5): call 0xffff7f5d(%rip)
a2d8(4): mov %eax,0x10(%rsp)
a2dc(3): mov %eax,0x34(%rbx)
a2df(5): mov $0x800,%ebp
a2e4(5): mov $0x4,%eax
a2e9(3): sub %r14,%rbp
a2ec(4): cmp $0x4,%rbp
a2f0(4): cmovnbe %rax,%rbp
a2f4(5): call 0xffff7c3c(%rip)
a2f9(2): test %ebp,%ebp
a2fb(4): mov %eax,0x10(%rsp)
a2ff(5): lea 0x0(%r13,%r14,1),%rcx
a304(2): mov %ebp,%esi
a306(2): jz 0x16(%rip)
a308(2): xor %eax,%eax
a30a(2): mov %eax,%edx
a30c(3): add $0x1,%eax
a30f(5): movzx 0x0(%r12,%rdx,1),%edi
a314(2): cmp %esi,%eax
a316(4): mov %dil,0x0(%rcx,%rdx,1)
a31a(2): jb 0xfffffff0(%rip)
a31c(3): add %r14,%rbp
a31f(7): cmp $0x7ff,%rbp
a326(6): jnbe 0xffffff3f(%rip)
a32c(5): call 0xffff7d94(%rip)
a331(4): mov %eax,0x10(%rsp)
a335(5): mov $0x800,%eax
a33a(5): mov $0x4,%edx
a33f(3): sub %rbp,%rax
a342(5): lea 0x0(%r13,%rbp,1),%rcx
a347(4): cmp $0x4,%rax
a34b(4): cmovnbe %rdx,%rax
a34f(2): test %eax,%eax
a351(2): mov %eax,%esi
a353(6): jz 0xffffff12(%rip)
a359(2): xor %eax,%eax
a35b(2): mov %eax,%edx
a35d(3): add $0x1,%eax
a360(5): movzx 0x0(%r12,%rdx,1),%edi
a365(2): cmp %esi,%eax
a367(4): mov %dil,0x0(%rcx,%rdx,1)
a36b(2): jb 0xfffffff0(%rip)
a36d(5): jmp 0xfffffef8(%rip)
a372(6): nop 0x0(%rax,%rax,1)
a378(2): xor %ebx,%ebx
a37a(5): jmp 0xfffffe3d(%rip)
a37f(5): call 0xffff7ba1(%rip)
a384(3): test %rbp,%rbp
a387(3): mov %r14,%r15
a38a(5): mov $0x10,%eax
a38f(4): cmovs %r12,%rbp
a393(5): lea 0x10(%rsp),%r12
a398(3): sub %rbp,%r15
a39b(4): cmp $0x10,%r15
a39f(3): mov %r12,%rdi
a3a2(4): cmovnbe %rax,%r15
a3a6(2): xor %esi,%esi
a3a8(5): call 0xffff7bf8(%rip)
a3ad(5): lea 0x0(%r13,%rbp,1),%rax
a3b2(3): add %r15,%rbp
a3b5(3): mov %r15d,%ecx
a3b8(7): cmp $0x7ff,%rbp
a3bf(3): mov %r12,%rsi
a3c2(3): mov %rax,%rdi
a3c5(2): REP movsb rsi(%ds,10),rdi(%es,10)
a3c7(6): jnbe 0xfffffe9e(%rip)
a3cd(3): mov %r14,%r15
a3d0(6): mov $0x4,%r8d
a3d6(3): sub %rbp,%r15
a3d9(5): mov %r8,0x8(%rsp)
a3de(4): cmp $0x4,%r15
a3e2(4): cmovnbe %r8,%r15
a3e6(5): lea 0x0(%rbp,%r15,1),%rdx
a3eb(3): add %r13,%rbp
a3ee(4): mov %rdx,(%rsp)
a3f2(5): call 0xffff7a7e(%rip)
a3f7(4): mov (%rsp),%rdx
a3fb(4): mov %eax,0x10(%rsp)
a3ff(3): mov %r15d,%ecx
a402(3): mov %rbp,%rdi
a405(3): mov %r12,%rsi
a408(5): mov 0x8(%rsp),%r8
a40d(2): REP movsb rsi(%ds,10),rdi(%es,10)
a40f(7): cmp $0x7ff,%rdx
a416(6): jnle 0xfffffe4f(%rip)
a41c(3): sub %rdx,%r14
a41f(4): cmp $0x4,%r14
a423(4): cmovnbe %r8,%r14
a427(5): call 0xffff7e09(%rip)
a42c(4): mov (%rsp),%rdx
a430(4): mov %eax,0x10(%rsp)
a434(3): mov %r14d,%ecx
a437(3): mov %r12,%rsi
a43a(5): lea 0x0(%r13,%rdx,1),%rax
a43f(3): add %rdx,%r14
a442(7): cmp $0x7ff,%r14
a449(3): mov %rax,%rdi
a44c(2): REP movsb rsi(%ds,10),rdi(%es,10)
a44e(6): jnbe 0xfffffe17(%rip)
a454(5): jmp 0xfffffe8b(%rip)

"randread_set_handler" :
a460(4): mov %rsi,0x8(%rdi)
a464(1): ret near (%rsp)

"randread_set_handler_arg" :
a470(4): mov %rsi,0x10(%rdi)
a474(1): ret near (%rsp)

"randread" :
a480(2): push %r15
a482(2): push %r14
a484(2): push %r13
a486(2): push %r12
a488(3): mov %rdi,%r12
a48b(1): push %rbp
a48c(1): push %rbx
a48d(3): mov %rdx,%rbp
a490(3): mov %rsi,%rbx
a493(4): sub $0x18,%rsp
a497(3): mov (%rdi),%rcx
a49a(3): test %rcx,%rcx
a49d(5): mov %rcx,0x8(%rsp)
a4a2(2): jz 0x66(%rip)
a4a4(5): call 0xffff792c(%rip)
a4a9(5): mov 0x8(%rsp),%rcx
a4ae(3): mov %rax,%r13
a4b1(2): jmp 0x25(%rip)
a4b3(5): nop 0x0(%rax,%rax,1)
a4b8(4): mov (%r12),%rax
a4bc(5): mov 0x10(%r12),%rdi
a4c1(2): mov (%rax),%eax
a4c3(3): and $0x20,%eax
a4c6(3): cmovne %edx,%eax
a4c9(4): mov %eax,0x0(%r13)
a4cd(5): call 0x8(%r12)
a4d2(4): mov (%r12),%rcx
a4d6(3): mov %rbp,%rdx
a4d9(3): mov %rbx,%rdi
a4dc(5): mov $0x1,%esi
a4e1(5): call 0xffff799f(%rip)
a4e6(3): add %rax,%rbx
a4e9(3): sub %rax,%rbp
a4ec(4): mov 0x0(%r13),%edx
a4f0(2): jnz 0xffffffc8(%rip)
a4f2(4): add $0x18,%rsp
a4f6(1): pop %rbx
a4f7(1): pop %rbp
a4f8(2): pop %r12
a4fa(2): pop %r13
a4fc(2): pop %r14
a4fe(2): pop %r15
a500(1): ret near (%rsp)
a501(7): nop 0x0(%rax)
a508(4): mov 0x18(%rdi),%r14
a50c(7): lea 0x838(%rdi),%rax
a513(4): lea 0x20(%rdi),%r13
a517(5): mov %rax,0x8(%rsp)
a51c(3): cmp %r14,%rdx
a51f(6): jbe 0xe3(%rip)
a525(5): mov $0x800,%esi
a52a(3): mov %rbx,%rdi
a52d(3): mov %r14,%rdx
a530(3): sub %r14,%rsi
a533(5): add 0x8(%rsp),%rsi
a538(3): add %r14,%rbx
a53b(3): sub %r14,%rbp
a53e(5): call 0xffff7b62(%rip)
a543(3): test $0x7,%bl
a546(2): jnz 0x6a(%rip)
a548(7): cmp $0x7ff,%rbp
a54f(6): jbe 0xa4(%rip)
a555(7): lea 0xfffff800(%rbp),%r15
a55c(3): mov %r15,%r14
a55f(7): and $0x7ff,%r14d
a566(2): jmp 0x16(%rip)
a568(8): nop 0x0(%rax,%rax,1)
a570(3): cmp %r14,%r15
a573(2): jz 0x3d(%rip)
a575(7): sub $0x800,%r15
a57c(3): mov %rbx,%rsi
a57f(3): mov %r13,%rdi
a582(7): add $0x800,%rbx
a589(5): call 0xe7(%rip)
a58e(3): test %r15,%r15
a591(3): mov %r15,%rbp
a594(2): jnz 0xffffffdc(%rip)
a596(9): mov $0x0,0x18(%r12)
a59f(4): add $0x18,%rsp
a5a3(1): pop %rbx
a5a4(1): pop %rbp
a5a5(2): pop %r12
a5a7(2): pop %r13
a5a9(2): pop %r14
a5ab(2): pop %r15
a5ad(1): ret near (%rsp)
a5ae(2): nop 
a5b0(5): mov 0x8(%rsp),%rsi
a5b5(3): mov %r13,%rdi
a5b8(6): mov $0x800,%r14d
a5be(5): call 0xb2(%rip)
a5c3(7): cmp $0x800,%rbp
a5ca(6): jnbe 0xffffff5b(%rip)
a5d0(6): mov $0x800,%r14d
a5d6(5): mov 0x8(%rsp),%rsi
a5db(3): mov %rbp,%rdx
a5de(3): mov %rbx,%rdi
a5e1(3): sub %rbp,%r14
a5e4(5): call 0xffff7abc(%rip)
a5e9(5): mov %r14,0x18(%r12)
a5ee(5): jmp 0xffffff04(%rip)
a5f3(5): mov 0x8(%rsp),%rsi
a5f8(3): mov %r13,%rdi
a5fb(5): call 0x75(%rip)
a600(2): jmp 0xffffffd0(%rip)
a602(3): mov %rax,%r15
a605(3): sub %r14,%r15
a608(7): lea 0x800(%r15),%rax
a60f(5): mov %rax,0x8(%rsp)
a614(2): jmp 0xffffffc2(%rip)

"randread_free" :
a620(1): push %rbp
a621(1): push %rbx
a622(7): mov $0xffffffff,%rdx
a629(3): mov %rdi,%rbx
a62c(5): mov $0x1038,%esi
a631(4): sub $0x8,%rsp
a635(3): mov (%rdi),%rbp
a638(5): call 0xffff7b88(%rip)
a63d(3): mov %rbx,%rdi
a640(5): call 0xffff7770(%rip)
a645(3): test %rbp,%rbp
a648(2): jz 0x18(%rip)
a64a(4): add $0x8,%rsp
a64e(3): mov %rbp,%rdi
a651(1): pop %rbx
a652(1): pop %rbp
a653(5): jmp 0x4fd(%rip)
a658(8): nop 0x0(%rax,%rax,1)
a660(4): add $0x8,%rsp
a664(2): xor %eax,%eax
a666(1): pop %rbx
a667(1): pop %rbp
a668(1): ret near (%rsp)

"isaac_refill" :
a670(7): mov 0x810(%rdi),%rax
a677(7): mov 0x800(%rdi),%rdx
a67e(7): lea 0x400(%rdi),%r9
a685(4): lea 0x1(%rax),%rcx
a689(3): mov %rdi,%rax
a68c(7): mov %rcx,0x810(%rdi)
a693(7): add 0x808(%rdi),%rcx
a69a(6): nop 0x0(%rax,%rax,1)
a6a0(3): mov %rdx,%r8
a6a3(4): shl/sal $0x15,%r8
a6a7(3): xor %r8,%rdx
a6aa(3): mov (%rax),%r8
a6ad(3): not %rdx
a6b0(7): add 0x400(%rax),%rdx
a6b7(3): mov %r8,%r10
a6ba(7): and $0x7f8,%r10d
a6c1(4): mov 0x0(%rdi,%r10,1),%r11
a6c5(3): mov %rdx,%r10
a6c8(4): shr $0x5,%r10
a6cc(3): add %rdx,%r11
a6cf(3): xor %r10,%rdx
a6d2(3): add %r11,%rcx
a6d5(3): mov %rcx,(%rax)
a6d8(4): shr $0x8,%rcx
a6dc(6): and $0x7f8,%ecx
a6e2(4): mov 0x0(%rdi,%rcx,1),%r11
a6e6(3): add %r8,%r11
a6e9(3): mov %r11,(%rsi)
a6ec(7): add 0x408(%rax),%rdx
a6f3(4): mov 0x8(%rax),%rcx
a6f7(3): mov %rdx,%r10
a6fa(3): mov %rcx,%rdx
a6fd(6): and $0x7f8,%edx
a703(4): mov 0x0(%rdi,%rdx,1),%r8
a707(3): mov %r10,%rdx
a70a(4): shl/sal $0xc,%rdx
a70e(3): xor %r10,%rdx
a711(3): add %r10,%r8
a714(3): add %r11,%r8
a717(4): mov %r8,0x8(%rax)
a71b(4): shr $0x8,%r8
a71f(7): and $0x7f8,%r8d
a726(4): add 0x0(%rdi,%r8,1),%rcx
a72a(4): mov %rcx,0x8(%rsi)
a72e(4): mov 0x10(%rax),%r8
a732(3): mov %rcx,%r11
a735(7): add 0x410(%rax),%rdx
a73c(3): mov %r8,%rcx
a73f(6): and $0x7f8,%ecx
a745(4): mov 0x0(%rdi,%rcx,1),%r10
a749(3): add %rdx,%r10
a74c(3): mov %r10,%rcx
a74f(3): add %r11,%rcx
a752(4): mov %rcx,0x10(%rax)
a756(4): shr $0x8,%rcx
a75a(6): and $0x7f8,%ecx
a760(4): mov 0x0(%rdi,%rcx,1),%r10
a764(3): mov %rdx,%rcx
a767(4): shr $0x21,%rcx
a76b(3): xor %rcx,%rdx
a76e(3): add %r8,%r10
a771(4): mov %r10,0x10(%rsi)
a775(4): mov 0x18(%rax),%rcx
a779(7): add 0x418(%rax),%rdx
a780(3): mov %rcx,%r8
a783(7): and $0x7f8,%r8d
a78a(4): mov 0x0(%rdi,%r8,1),%r11
a78e(3): add %rdx,%r11
a791(3): mov %r11,%r8
a794(3): add %r10,%r8
a797(4): add $0x20,%rax
a79b(4): add $0x20,%rsi
a79f(4): mov %r8,0xfffffff8(%rax)
a7a3(4): shr $0x8,%r8
a7a7(7): and $0x7f8,%r8d
a7ae(4): add 0x0(%rdi,%r8,1),%rcx
a7b2(4): mov %rcx,0xfffffff8(%rsi)
a7b6(3): cmp %r9,%rax
a7b9(6): jb 0xfffffee7(%rip)
a7bf(7): lea 0x800(%rdi),%r9
a7c6(a): nop 0x0(%rax,%rax,1)
a7d0(3): mov %rdx,%r8
a7d3(4): shl/sal $0x15,%r8
a7d7(3): xor %r8,%rdx
a7da(3): mov (%rax),%r8
a7dd(3): not %rdx
a7e0(7): add 0xfffffc00(%rax),%rdx
a7e7(3): mov %r8,%r10
a7ea(7): and $0x7f8,%r10d
a7f1(4): mov 0x0(%rdi,%r10,1),%r11
a7f5(3): mov %rdx,%r10
a7f8(4): shr $0x5,%r10
a7fc(3): add %rdx,%r11
a7ff(3): xor %r10,%rdx
a802(3): add %r11,%rcx
a805(3): mov %rcx,(%rax)
a808(4): shr $0x8,%rcx
a80c(6): and $0x7f8,%ecx
a812(4): mov 0x0(%rdi,%rcx,1),%r11
a816(3): add %r8,%r11
a819(3): mov %r11,(%rsi)
a81c(7): add 0xfffffc08(%rax),%rdx
a823(4): mov 0x8(%rax),%rcx
a827(3): mov %rdx,%r10
a82a(3): mov %rcx,%rdx
a82d(6): and $0x7f8,%edx
a833(4): mov 0x0(%rdi,%rdx,1),%r8
a837(3): mov %r10,%rdx
a83a(4): shl/sal $0xc,%rdx
a83e(3): xor %r10,%rdx
a841(3): add %r10,%r8
a844(3): add %r11,%r8
a847(4): mov %r8,0x8(%rax)
a84b(4): shr $0x8,%r8
a84f(7): and $0x7f8,%r8d
a856(4): add 0x0(%rdi,%r8,1),%rcx
a85a(4): mov %rcx,0x8(%rsi)
a85e(4): mov 0x10(%rax),%r8
a862(3): mov %rcx,%r11
a865(7): add 0xfffffc10(%rax),%rdx
a86c(3): mov %r8,%rcx
a86f(6): and $0x7f8,%ecx
a875(4): mov 0x0(%rdi,%rcx,1),%r10
a879(3): add %rdx,%r10
a87c(3): mov %r10,%rcx
a87f(3): add %r11,%rcx
a882(4): mov %rcx,0x10(%rax)
a886(4): shr $0x8,%rcx
a88a(6): and $0x7f8,%ecx
a890(4): mov 0x0(%rdi,%rcx,1),%r10
a894(3): mov %rdx,%rcx
a897(4): shr $0x21,%rcx
a89b(3): xor %rcx,%rdx
a89e(3): add %r8,%r10
a8a1(4): mov %r10,0x10(%rsi)
a8a5(4): mov 0x18(%rax),%rcx
a8a9(7): add 0xfffffc18(%rax),%rdx
a8b0(3): mov %rcx,%r8
a8b3(7): and $0x7f8,%r8d
a8ba(4): mov 0x0(%rdi,%r8,1),%r11
a8be(3): add %rdx,%r11
a8c1(3): mov %r11,%r8
a8c4(3): add %r10,%r8
a8c7(4): add $0x20,%rax
a8cb(4): add $0x20,%rsi
a8cf(4): mov %r8,0xfffffff8(%rax)
a8d3(4): shr $0x8,%r8
a8d7(7): and $0x7f8,%r8d
a8de(4): add 0x0(%rdi,%r8,1),%rcx
a8e2(4): mov %rcx,0xfffffff8(%rsi)
a8e6(3): cmp %r9,%rax
a8e9(6): jb 0xfffffee7(%rip)
a8ef(7): mov %rdx,0x800(%rdi)
a8f6(7): mov %rcx,0x808(%rdi)
a8fd(1): ret near (%rsp)

"isaac_seed" :
a900(2): push %r13
a902(2): push %r12
a904(7): lea 0x800(%rdi),%r12
a90b(1): push %rbp
a90c(3): mov %rdi,%rdx
a90f(1): push %rbx
a910(3): mov %rdi,%rax
a913(a): mov $0x-7424904924229222229,%rcx
a91d(a): mov $0x-5865837416287532563,%r10
a927(a): mov $0x5259722845879046933,%rbp
a931(a): mov $0x-9011610652101975858,%rsi
a93b(a): mov $0x-5576812576440232668,%r8
a945(a): mov $0x-8354558816804203872,%rbx
a94f(a): mov $0x-5046086420515862430,%r11
a959(a): mov $0x7240739780546808700,%r9
a963(5): nop 0x0(%rax,%rax,1)
a968(4): add 0x20(%rax),%rsi
a96c(4): add 0x38(%rax),%rcx
a970(3): mov (%rax),%r13
a973(4): add 0x28(%rax),%rbp
a977(4): add 0x30(%rax),%r10
a97b(3): sub %rsi,%r13
a97e(3): add %r13,%r9
a981(3): mov %rcx,%r13
a984(4): shr $0x9,%r13
a988(3): add %r9,%rcx
a98b(3): xor %r13,%rbp
a98e(4): mov 0x8(%rax),%r13
a992(3): sub %rbp,%r13
a995(3): add %r13,%r11
a998(3): mov %r9,%r13
a99b(4): shl/sal $0x9,%r13
a99f(3): add %r11,%r9
a9a2(3): xor %r13,%r10
a9a5(4): mov 0x10(%rax),%r13
a9a9(3): sub %r10,%r13
a9ac(3): add %r13,%rbx
a9af(3): mov %r11,%r13
a9b2(4): shr $0x17,%r13
a9b6(3): add %rbx,%r11
a9b9(3): xor %r13,%rcx
a9bc(4): mov 0x18(%rax),%r13
a9c0(3): sub %rcx,%r13
a9c3(3): add %r13,%r8
a9c6(3): mov %rbx,%r13
a9c9(4): shl/sal $0xf,%r13
a9cd(3): add %r8,%rbx
a9d0(3): xor %r13,%r9
a9d3(3): mov %r8,%r13
a9d6(3): sub %r9,%rsi
a9d9(4): shr $0xe,%r13
a9dd(3): mov %r9,(%rax)
a9e0(3): xor %r13,%r11
a9e3(3): mov %rsi,%r13
a9e6(3): add %rsi,%r8
a9e9(3): sub %r11,%rbp
a9ec(4): shl/sal $0x14,%r13
a9f0(4): mov %r11,0x8(%rax)
a9f4(3): xor %r13,%rbx
a9f7(4): lea 0x0(%rsi,%rbp,1),%r13
a9fb(3): mov %rbp,%rsi
a9fe(3): sub %rbx,%r10
aa01(4): shr $0x11,%rsi
aa05(4): mov %rbx,0x10(%rax)
aa09(3): xor %rsi,%r8
aa0c(3): mov %r10,%rsi
aa0f(3): add %r10,%rbp
aa12(3): sub %r8,%rcx
aa15(4): shl/sal $0xe,%rsi
aa19(4): mov %r8,0x18(%rax)
aa1d(3): xor %r13,%rsi
aa20(3): add %rcx,%r10
aa23(4): mov %rbp,0x28(%rax)
aa27(4): mov %rsi,0x20(%rax)
aa2b(4): mov %r10,0x30(%rax)
aa2f(4): add $0x40,%rax
aa33(4): mov %rcx,0xfffffff8(%rax)
aa37(3): cmp %rax,%r12
aa3a(6): jnz 0xffffff2e(%rip)
aa40(4): add 0x20(%rdx),%rsi
aa44(4): add 0x38(%rdx),%rcx
aa48(3): mov (%rdx),%r12
aa4b(4): add 0x28(%rdx),%rbp
aa4f(4): add 0x30(%rdx),%r10
aa53(3): sub %rsi,%r12
aa56(3): add %r12,%r9
aa59(3): mov %rcx,%r12
aa5c(4): shr $0x9,%r12
aa60(3): add %r9,%rcx
aa63(3): xor %r12,%rbp
aa66(4): mov 0x8(%rdx),%r12
aa6a(3): sub %rbp,%r12
aa6d(3): add %r12,%r11
aa70(3): mov %r9,%r12
aa73(4): shl/sal $0x9,%r12
aa77(3): add %r11,%r9
aa7a(3): xor %r12,%r10
aa7d(4): mov 0x10(%rdx),%r12
aa81(3): sub %r10,%r12
aa84(3): add %r12,%rbx
aa87(3): mov %r11,%r12
aa8a(4): shr $0x17,%r12
aa8e(3): add %rbx,%r11
aa91(3): xor %r12,%rcx
aa94(4): mov 0x18(%rdx),%r12
aa98(3): sub %rcx,%r12
aa9b(3): add %r12,%r8
aa9e(3): mov %rbx,%r12
aaa1(4): shl/sal $0xf,%r12
aaa5(3): add %r8,%rbx
aaa8(3): xor %r12,%r9
aaab(3): mov %r8,%r12
aaae(3): sub %r9,%rsi
aab1(4): shr $0xe,%r12
aab5(3): mov %r9,(%rdx)
aab8(3): xor %r12,%r11
aabb(3): mov %rsi,%r12
aabe(3): add %rsi,%r8
aac1(3): sub %r11,%rbp
aac4(4): shl/sal $0x14,%r12
aac8(4): mov %r11,0x8(%rdx)
aacc(3): xor %r12,%rbx
aacf(4): lea 0x0(%rsi,%rbp,1),%r12
aad3(3): mov %rbp,%rsi
aad6(3): sub %rbx,%r10
aad9(4): shr $0x11,%rsi
aadd(4): mov %rbx,0x10(%rdx)
aae1(3): xor %rsi,%r8
aae4(3): mov %r10,%rsi
aae7(3): add %r10,%rbp
aaea(3): sub %r8,%rcx
aaed(4): shl/sal $0xe,%rsi
aaf1(4): mov %r8,0x18(%rdx)
aaf5(3): xor %r12,%rsi
aaf8(3): add %rcx,%r10
aafb(4): mov %rbp,0x28(%rdx)
aaff(4): mov %rsi,0x20(%rdx)
ab03(4): mov %r10,0x30(%rdx)
ab07(4): add $0x40,%rdx
ab0b(4): mov %rcx,0xfffffff8(%rdx)
ab0f(3): cmp %rdx,%rax
ab12(6): jnz 0xffffff2e(%rip)
ab18(1): pop %rbx
ab19(b): mov $0x0,0x810(%rdi)
ab24(b): mov $0x0,0x808(%rdi)
ab2f(1): pop %rbp
ab30(b): mov $0x0,0x800(%rdi)
ab3b(2): pop %r12
ab3d(2): pop %r13
ab3f(1): ret near (%rsp)

"dup_safer" :
ab40(5): mov $0x3,%edx
ab45(2): xor %esi,%esi
ab47(2): xor %eax,%eax
ab49(5): jmp 0x87(%rip)

"rpl_fclose" :
ab50(2): push %r12
ab52(1): push %rbp
ab53(1): push %rbx
ab54(3): mov %rdi,%rbx
ab57(5): call 0xffff7559(%rip)
ab5c(2): test %eax,%eax
ab5e(3): mov %rbx,%rdi
ab61(2): js 0x56(%rip)
ab63(5): call 0xffff75bd(%rip)
ab68(2): test %eax,%eax
ab6a(2): jnz 0x2e(%rip)
ab6c(3): mov %rbx,%rdi
ab6f(5): call 0xffffec01(%rip)
ab74(2): test %eax,%eax
ab76(2): jz 0x3e(%rip)
ab78(5): call 0xffff7258(%rip)
ab7d(3): mov (%rax),%r12d
ab80(3): mov %rbx,%rdi
ab83(3): mov %rax,%rbp
ab86(5): call 0xffff732a(%rip)
ab8b(3): test %r12d,%r12d
ab8e(2): jnz 0x32(%rip)
ab90(1): pop %rbx
ab91(1): pop %rbp
ab92(2): pop %r12
ab94(1): ret near (%rsp)
ab95(3): nop (%rax)
ab98(3): mov %rbx,%rdi
ab9b(5): call 0xffff7515(%rip)
aba0(2): xor %esi,%esi
aba2(5): mov $0x1,%edx
aba7(2): mov %eax,%edi
aba9(5): call 0xffff73e7(%rip)
abae(4): cmp $0xffffffff,%rax
abb2(2): jnz 0xffffffba(%rip)
abb4(3): mov %rbx,%rdi
abb7(1): pop %rbx
abb8(1): pop %rbp
abb9(2): pop %r12
abbb(5): jmp 0xffff72f5(%rip)
abc0(4): mov %r12d,0x0(%rbp)
abc4(5): mov $0xffffffff,%eax
abc9(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
abd0(2): push %r12
abd2(1): push %rbp
abd3(2): mov %edi,%ebp
abd5(1): push %rbx
abd6(4): sub $0x50,%rsp
abda(9): mov $0x28,%rax
abe3(5): mov %rax,0x18(%rsp)
abe8(2): xor %eax,%eax
abea(5): lea 0x70(%rsp),%rax
abef(2): test %esi,%esi
abf1(5): mov %rdx,0x30(%rsp)
abf6(5): mov %rcx,0x38(%rsp)
abfb(5): mov %r8,0x40(%rsp)
ac00(5): mov %rax,0x8(%rsp)
ac05(5): lea 0x20(%rsp),%rax
ac0a(5): mov %r9,0x48(%rsp)
ac0f(7): mov $0x10,(%rsp)
ac16(5): mov %rax,0x10(%rsp)
ac1b(6): jz 0x207(%rip)
ac21(6): cmp $0x406,%esi
ac27(2): jnz 0x49(%rip)
ac29(5): mov 0x10(%rsp),%rax
ac2e(7): cmp $0x0,0x205663(%rip)
ac35(7): mov $0x18,(%rsp)
ac3c(4): mov 0x10(%rax),%r12d
ac40(3): mov %r12d,%edx
ac43(6): js 0x130(%rip)
ac49(2): xor %eax,%eax
ac4b(5): mov $0x406,%esi
ac50(5): call 0xffff7210(%rip)
ac55(2): test %eax,%eax
ac57(2): mov %eax,%ebx
ac59(6): js 0x18f(%rip)
ac5f(a): mov $0x1,0x20562f(%rip)
ac69(2): jmp 0x47(%rip)
ac6b(5): nop 0x0(%rax,%rax,1)
ac70(3): cmp $0xb,%esi
ac73(2): jz 0x2d(%rip)
ac75(2): jnle 0x5b(%rip)
ac77(3): cmp $0x4,%esi
ac7a(6): jz 0xd6(%rip)
ac80(6): jnle 0xc0(%rip)
ac86(3): cmp $0x2,%esi
ac89(6): jz 0xc7(%rip)
ac8f(2): jnle 0x11(%rip)
ac91(3): cmp $0x1,%esi
ac94(2): jnz 0x64(%rip)
ac96(a): nop 0x0(%rax,%rax,1)
aca0(2): mov %ebp,%edi
aca2(2): xor %eax,%eax
aca4(5): call 0xffff71bc(%rip)
aca9(2): mov %eax,%ebx
acab(5): nop 0x0(%rax,%rax,1)
acb0(5): mov 0x18(%rsp),%rcx
acb5(9): xor $0x28,%rcx
acbe(2): mov %ebx,%eax
acc0(6): jnz 0x15d(%rip)
acc6(4): add $0x50,%rsp
acca(1): pop %rbx
accb(1): pop %rbp
accc(2): pop %r12
acce(1): ret near (%rsp)
accf(1): nop 
acd0(6): cmp $0x407,%esi
acd6(2): jnle 0x4a(%rip)
acd8(6): cmp $0x406,%esi
acde(2): jnl 0x72(%rip)
ace0(6): cmp $0x401,%esi
ace6(2): jz 0xffffffba(%rip)
ace8(6): cmp $0x402,%esi
acee(2): jz 0x62(%rip)
acf0(6): cmp $0x400,%esi
acf6(2): jz 0x5a(%rip)
acf8(3): mov (%rsp),%eax
acfb(3): cmp $0x2f,%eax
acfe(6): jnbe 0x13c(%rip)
ad04(5): add 0x10(%rsp),%rax
ad09(3): mov (%rax),%rdx
ad0c(2): mov %ebp,%edi
ad0e(2): xor %eax,%eax
ad10(5): call 0xffff7150(%rip)
ad15(2): mov %eax,%ebx
ad17(2): jmp 0xffffff99(%rip)
ad19(7): nop 0x0(%rax)
ad20(6): cmp $0x409,%esi
ad26(2): jz 0x2a(%rip)
ad28(6): jl 0xffffff78(%rip)
ad2e(6): cmp $0x40a,%esi
ad34(2): jnz 0xffffffc4(%rip)
ad36(5): jmp 0xffffff6a(%rip)
ad3b(5): nop 0x0(%rax,%rax,1)
ad40(3): cmp $0x9,%esi
ad43(6): jz 0xffffff5d(%rip)
ad49(2): jnle 0x7(%rip)
ad4b(3): cmp $0x8,%esi
ad4e(2): jnz 0xffffffaa(%rip)
ad50(3): mov (%rsp),%eax
ad53(3): cmp $0x2f,%eax
ad56(6): jnbe 0xee(%rip)
ad5c(5): add 0x10(%rsp),%rax
ad61(2): mov (%rax),%edx
ad63(2): mov %ebp,%edi
ad65(2): xor %eax,%eax
ad67(5): call 0xffff70f9(%rip)
ad6c(2): mov %eax,%ebx
ad6e(5): jmp 0xffffff42(%rip)
ad73(2): xor %esi,%esi
ad75(2): xor %eax,%eax
ad77(5): call 0xffff70e9(%rip)
ad7c(2): test %eax,%eax
ad7e(2): mov %eax,%ebx
ad80(6): js 0xffffff30(%rip)
ad86(7): cmp $0xff,0x20550b(%rip)
ad8d(6): jnz 0xffffff23(%rip)
ad93(2): xor %eax,%eax
ad95(5): mov $0x1,%esi
ad9a(2): mov %ebx,%edi
ad9c(5): call 0xffff70c4(%rip)
ada1(2): test %eax,%eax
ada3(2): js 0x1e(%rip)
ada5(3): or $0x1,%eax
ada8(5): mov $0x2,%esi
adad(2): mov %ebx,%edi
adaf(2): mov %eax,%edx
adb1(2): xor %eax,%eax
adb3(5): call 0xffff70ad(%rip)
adb8(3): cmp $0xff,%eax
adbb(6): jnz 0xfffffef5(%rip)
adc1(5): call 0xffff700f(%rip)
adc6(3): mov (%rax),%r12d
adc9(3): mov %rax,%rbp
adcc(2): mov %ebx,%edi
adce(5): call 0xffff7212(%rip)
add3(5): mov $0xffffffff,%ebx
add8(4): mov %r12d,0x0(%rbp)
addc(5): jmp 0xfffffed4(%rip)
ade1(7): nop 0x0(%rax)
ade8(5): call 0xffff6fe8(%rip)
aded(3): cmp $0x16,(%rax)
adf0(6): jnz 0xfffffe6f(%rip)
adf6(2): xor %esi,%esi
adf8(2): xor %eax,%eax
adfa(3): mov %r12d,%edx
adfd(2): mov %ebp,%edi
adff(5): call 0xffff7061(%rip)
ae04(2): test %eax,%eax
ae06(2): mov %eax,%ebx
ae08(6): js 0xfffffea8(%rip)
ae0e(a): mov $0xffffffff,0x205480(%rip)
ae18(5): jmp 0xffffff7b(%rip)
ae1d(5): call 0xffff7103(%rip)
ae22(5): mov 0x10(%rsp),%rax
ae27(2): xor %esi,%esi
ae29(3): mov 0x10(%rax),%edx
ae2c(2): xor %eax,%eax
ae2e(5): call 0xffff7032(%rip)
ae33(2): mov %eax,%ebx
ae35(5): jmp 0xfffffe7b(%rip)
ae3a(5): mov 0x8(%rsp),%rax
ae3f(5): jmp 0xfffffeca(%rip)
ae44(5): mov 0x8(%rsp),%rax
ae49(5): jmp 0xffffff18(%rip)

"fopen_safer" :
ae50(2): push %r12
ae52(1): push %rbp
ae53(3): mov %rsi,%rbp
ae56(1): push %rbx
ae57(5): call 0xffff7399(%rip)
ae5c(3): test %rax,%rax
ae5f(3): mov %rax,%rbx
ae62(2): jz 0xf(%rip)
ae64(3): mov %rax,%rdi
ae67(5): call 0xffff7249(%rip)
ae6c(3): cmp $0x2,%eax
ae6f(2): jbe 0x11(%rip)
ae71(3): mov %rbx,%rax
ae74(1): pop %rbx
ae75(1): pop %rbp
ae76(2): pop %r12
ae78(1): ret near (%rsp)
ae79(7): nop 0x0(%rax)
ae80(2): mov %eax,%edi
ae82(5): call 0xfffffcbe(%rip)
ae87(2): test %eax,%eax
ae89(3): mov %eax,%r12d
ae8c(2): js 0x3c(%rip)
ae8e(3): mov %rbx,%rdi
ae91(5): call 0xfffffcbf(%rip)
ae96(2): test %eax,%eax
ae98(2): jnz 0x15(%rip)
ae9a(3): mov %rbp,%rsi
ae9d(3): mov %r12d,%edi
aea0(5): call 0xffff72a0(%rip)
aea5(3): test %rax,%rax
aea8(3): mov %rax,%rbx
aeab(2): jnz 0xffffffc6(%rip)
aead(5): call 0xffff6f23(%rip)
aeb2(2): mov (%rax),%ebp
aeb4(3): mov %rax,%rbx
aeb7(3): mov %r12d,%edi
aeba(5): call 0xffff7126(%rip)
aebf(2): mov %ebp,(%rbx)
aec1(2): xor %ebx,%ebx
aec3(2): jmp 0xffffffae(%rip)
aec5(3): nop (%rax)
aec8(5): call 0xffff6f08(%rip)
aecd(3): mov (%rax),%r12d
aed0(3): mov %rax,%rbp
aed3(3): mov %rbx,%rdi
aed6(5): call 0xfffffc7a(%rip)
aedb(2): xor %ebx,%ebx
aedd(4): mov %r12d,0x0(%rbp)
aee1(2): jmp 0xffffff90(%rip)

"__libc_csu_init" :
aef0(2): push %r15
aef2(2): push %r14
aef4(3): mov %rdx,%r15
aef7(2): push %r13
aef9(2): push %r12
aefb(7): lea 0x20496e(%rip),%r12
af02(1): push %rbp
af03(7): lea 0x20496e(%rip),%rbp
af0a(1): push %rbx
af0b(3): mov %edi,%r13d
af0e(3): mov %rsi,%r14
af11(3): sub %r12,%rbp
af14(4): sub $0x8,%rsp
af18(4): sar $0x3,%rbp
af1c(5): call 0xffff6e54(%rip)
af21(3): test %rbp,%rbp
af24(2): jz 0x22(%rip)
af26(2): xor %ebx,%ebx
af28(8): nop 0x0(%rax,%rax,1)
af30(3): mov %r15,%rdx
af33(3): mov %r14,%rsi
af36(3): mov %r13d,%edi
af39(4): call 0x0(%r12,%rbx,8)
af3d(4): add $0x1,%rbx
af41(3): cmp %rbx,%rbp
af44(2): jnz 0xffffffec(%rip)
af46(4): add $0x8,%rsp
af4a(1): pop %rbx
af4b(1): pop %rbp
af4c(2): pop %r12
af4e(2): pop %r13
af50(2): pop %r14
af52(2): pop %r15
af54(1): ret near (%rsp)

"atexit" :
af70(7): mov 0x205091(%rip),%rdx
af77(2): xor %esi,%esi
af79(5): jmp 0xffff7297(%rip)

"_fini" :
af80(4): sub $0x8,%rsp
af84(4): add $0x8,%rsp
af88(1): ret near (%rsp)

