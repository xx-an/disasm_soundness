
"getenv@plt" :
2570(6): jmp 0x2196ca(%rip)
2576(5): push $0x0

"utimensat@plt" :
2580(6): jmp 0x2196c2(%rip)
2586(5): push $0x1

"abort@plt" :
2590(6): jmp 0x2196ba(%rip)
2596(5): push $0x2

"__errno_location@plt" :
25a0(6): jmp 0x2196b2(%rip)
25a6(5): push $0x3

"unlink@plt" :
25b0(6): jmp 0x2196aa(%rip)
25b6(5): push $0x4

"strncmp@plt" :
25c0(6): jmp 0x2196a2(%rip)
25c6(5): push $0x5

"_exit@plt" :
25d0(6): jmp 0x21969a(%rip)
25d6(5): push $0x6

"strcpy@plt" :
25e0(6): jmp 0x219692(%rip)
25e6(5): push $0x7

"__fpending@plt" :
25f0(6): jmp 0x21968a(%rip)
25f6(5): push $0x8

"__read_chk@plt" :
2600(6): jmp 0x219682(%rip)
2606(5): push $0x9

"mkdir@plt" :
2610(6): jmp 0x21967a(%rip)
2616(5): push $0xa

"unlinkat@plt" :
2620(6): jmp 0x219672(%rip)
2626(5): push $0xb

"qsort@plt" :
2630(6): jmp 0x21966a(%rip)
2636(5): push $0xc

"isatty@plt" :
2640(6): jmp 0x219662(%rip)
2646(5): push $0xd

"faccessat@plt" :
2650(6): jmp 0x21965a(%rip)
2656(5): push $0xe

"readlink@plt" :
2660(6): jmp 0x219652(%rip)
2666(5): push $0xf

"fcntl@plt" :
2670(6): jmp 0x21964a(%rip)
2676(5): push $0x10

"clock_gettime@plt" :
2680(6): jmp 0x219642(%rip)
2686(5): push $0x11

"write@plt" :
2690(6): jmp 0x21963a(%rip)
2696(5): push $0x12

"getpid@plt" :
26a0(6): jmp 0x219632(%rip)
26a6(5): push $0x13

"fread_unlocked@plt" :
26b0(6): jmp 0x21962a(%rip)
26b6(5): push $0x14

"textdomain@plt" :
26c0(6): jmp 0x219622(%rip)
26c6(5): push $0x15

"pathconf@plt" :
26d0(6): jmp 0x21961a(%rip)
26d6(5): push $0x16

"fclose@plt" :
26e0(6): jmp 0x219612(%rip)
26e6(5): push $0x17

"opendir@plt" :
26f0(6): jmp 0x21960a(%rip)
26f6(5): push $0x18

"bindtextdomain@plt" :
2700(6): jmp 0x219602(%rip)
2706(5): push $0x19

"stpcpy@plt" :
2710(6): jmp 0x2195fa(%rip)
2716(5): push $0x1a

"rmdir@plt" :
2720(6): jmp 0x2195f2(%rip)
2726(5): push $0x1b

"dcgettext@plt" :
2730(6): jmp 0x2195ea(%rip)
2736(5): push $0x1c

"__ctype_get_mb_cur_max@plt" :
2740(6): jmp 0x2195e2(%rip)
2746(5): push $0x1d

"strlen@plt" :
2750(6): jmp 0x2195da(%rip)
2756(5): push $0x1e

"__lxstat@plt" :
2760(6): jmp 0x2195d2(%rip)
2766(5): push $0x1f

"openat@plt" :
2770(6): jmp 0x2195ca(%rip)
2776(5): push $0x20

"__stack_chk_fail@plt" :
2780(6): jmp 0x2195c2(%rip)
2786(5): push $0x21

"getuid@plt" :
2790(6): jmp 0x2195ba(%rip)
2796(5): push $0x22

"getopt_long@plt" :
27a0(6): jmp 0x2195b2(%rip)
27a6(5): push $0x23

"mbrtowc@plt" :
27b0(6): jmp 0x2195aa(%rip)
27b6(5): push $0x24

"__fxstatat@plt" :
27c0(6): jmp 0x2195a2(%rip)
27c6(5): push $0x25

"__overflow@plt" :
27d0(6): jmp 0x21959a(%rip)
27d6(5): push $0x26

"strrchr@plt" :
27e0(6): jmp 0x219592(%rip)
27e6(5): push $0x27

"ftruncate@plt" :
27f0(6): jmp 0x21958a(%rip)
27f6(5): push $0x28

"lseek@plt" :
2800(6): jmp 0x219582(%rip)
2806(5): push $0x29

"gettimeofday@plt" :
2810(6): jmp 0x21957a(%rip)
2816(5): push $0x2a

"__assert_fail@plt" :
2820(6): jmp 0x219572(%rip)
2826(5): push $0x2b

"memset@plt" :
2830(6): jmp 0x21956a(%rip)
2836(5): push $0x2c

"geteuid@plt" :
2840(6): jmp 0x219562(%rip)
2846(5): push $0x2d

"ioctl@plt" :
2850(6): jmp 0x21955a(%rip)
2856(5): push $0x2e

"canonicalize_file_name@plt" :
2860(6): jmp 0x219552(%rip)
2866(5): push $0x2f

"close@plt" :
2870(6): jmp 0x21954a(%rip)
2876(5): push $0x30

"rewinddir@plt" :
2880(6): jmp 0x219542(%rip)
2886(5): push $0x31

"strspn@plt" :
2890(6): jmp 0x21953a(%rip)
2896(5): push $0x32

"closedir@plt" :
28a0(6): jmp 0x219532(%rip)
28a6(5): push $0x33

"posix_fadvise@plt" :
28b0(6): jmp 0x21952a(%rip)
28b6(5): push $0x34

"read@plt" :
28c0(6): jmp 0x219522(%rip)
28c6(5): push $0x35

"memcmp@plt" :
28d0(6): jmp 0x21951a(%rip)
28d6(5): push $0x36

"fallocate@plt" :
28e0(6): jmp 0x219512(%rip)
28e6(5): push $0x37

"fputs_unlocked@plt" :
28f0(6): jmp 0x21950a(%rip)
28f6(5): push $0x38

"utimes@plt" :
2900(6): jmp 0x219502(%rip)
2906(5): push $0x39

"calloc@plt" :
2910(6): jmp 0x2194fa(%rip)
2916(5): push $0x3a

"__getdelim@plt" :
2920(6): jmp 0x2194f2(%rip)
2926(5): push $0x3b

"strcmp@plt" :
2930(6): jmp 0x2194ea(%rip)
2936(5): push $0x3c

"dirfd@plt" :
2940(6): jmp 0x2194e2(%rip)
2946(5): push $0x3d

"fpathconf@plt" :
2950(6): jmp 0x2194da(%rip)
2956(5): push $0x3e

"rpmatch@plt" :
2960(6): jmp 0x2194d2(%rip)
2966(5): push $0x3f

"syscall@plt" :
2970(6): jmp 0x2194ca(%rip)
2976(5): push $0x40

"mkfifo@plt" :
2980(6): jmp 0x2194c2(%rip)
2986(5): push $0x41

"umask@plt" :
2990(6): jmp 0x2194ba(%rip)
2996(5): push $0x42

"memcpy@plt" :
29a0(6): jmp 0x2194b2(%rip)
29a6(5): push $0x43

"__xmknod@plt" :
29b0(6): jmp 0x2194aa(%rip)
29b6(5): push $0x44

"fileno@plt" :
29c0(6): jmp 0x2194a2(%rip)
29c6(5): push $0x45

"getgid@plt" :
29d0(6): jmp 0x21949a(%rip)
29d6(5): push $0x46

"__xstat@plt" :
29e0(6): jmp 0x219492(%rip)
29e6(5): push $0x47

"readdir@plt" :
29f0(6): jmp 0x21948a(%rip)
29f6(5): push $0x48

"malloc@plt" :
2a00(6): jmp 0x219482(%rip)
2a06(5): push $0x49

"fflush@plt" :
2a10(6): jmp 0x21947a(%rip)
2a16(5): push $0x4a

"nl_langinfo@plt" :
2a20(6): jmp 0x219472(%rip)
2a26(5): push $0x4b

"__fxstat@plt" :
2a30(6): jmp 0x21946a(%rip)
2a36(5): push $0x4c

"lchown@plt" :
2a40(6): jmp 0x219462(%rip)
2a46(5): push $0x4d

"__freading@plt" :
2a50(6): jmp 0x21945a(%rip)
2a56(5): push $0x4e

"fchdir@plt" :
2a60(6): jmp 0x219452(%rip)
2a66(5): push $0x4f

"realloc@plt" :
2a70(6): jmp 0x21944a(%rip)
2a76(5): push $0x50

"fdopen@plt" :
2a80(6): jmp 0x219442(%rip)
2a86(5): push $0x51

"linkat@plt" :
2a90(6): jmp 0x21943a(%rip)
2a96(5): push $0x52

"setlocale@plt" :
2aa0(6): jmp 0x219432(%rip)
2aa6(5): push $0x53

"__printf_chk@plt" :
2ab0(6): jmp 0x21942a(%rip)
2ab6(5): push $0x54

"fchmod@plt" :
2ac0(6): jmp 0x219422(%rip)
2ac6(5): push $0x55

"setvbuf@plt" :
2ad0(6): jmp 0x21941a(%rip)
2ad6(5): push $0x56

"chmod@plt" :
2ae0(6): jmp 0x219412(%rip)
2ae6(5): push $0x57

"mempcpy@plt" :
2af0(6): jmp 0x21940a(%rip)
2af6(5): push $0x58

"memmove@plt" :
2b00(6): jmp 0x219402(%rip)
2b06(5): push $0x59

"error@plt" :
2b10(6): jmp 0x2193fa(%rip)
2b16(5): push $0x5a

"__explicit_bzero_chk@plt" :
2b20(6): jmp 0x2193f2(%rip)
2b26(5): push $0x5b

"open@plt" :
2b30(6): jmp 0x2193ea(%rip)
2b36(5): push $0x5c

"fseeko@plt" :
2b40(6): jmp 0x2193e2(%rip)
2b46(5): push $0x5d

"fchown@plt" :
2b50(6): jmp 0x2193da(%rip)
2b56(5): push $0x5e

"fopen@plt" :
2b60(6): jmp 0x2193d2(%rip)
2b66(5): push $0x5f

"rename@plt" :
2b70(6): jmp 0x2193ca(%rip)
2b76(5): push $0x60

"fdopendir@plt" :
2b80(6): jmp 0x2193c2(%rip)
2b86(5): push $0x61

"futimens@plt" :
2b90(6): jmp 0x2193ba(%rip)
2b96(5): push $0x62

"euidaccess@plt" :
2ba0(6): jmp 0x2193b2(%rip)
2ba6(5): push $0x63

"fstatfs@plt" :
2bb0(6): jmp 0x2193aa(%rip)
2bb6(5): push $0x64

"__cxa_atexit@plt" :
2bc0(6): jmp 0x2193a2(%rip)
2bc6(5): push $0x65

"renameat@plt" :
2bd0(6): jmp 0x21939a(%rip)
2bd6(5): push $0x66

"getpagesize@plt" :
2be0(6): jmp 0x219392(%rip)
2be6(5): push $0x67

"getppid@plt" :
2bf0(6): jmp 0x21938a(%rip)
2bf6(5): push $0x68

"exit@plt" :
2c00(6): jmp 0x219382(%rip)
2c06(5): push $0x69

"fwrite@plt" :
2c10(6): jmp 0x21937a(%rip)
2c16(5): push $0x6a

"__fprintf_chk@plt" :
2c20(6): jmp 0x219372(%rip)
2c26(5): push $0x6b

"mbsinit@plt" :
2c30(6): jmp 0x21936a(%rip)
2c36(5): push $0x6c

"symlinkat@plt" :
2c40(6): jmp 0x219362(%rip)
2c46(5): push $0x6d

"iswprint@plt" :
2c50(6): jmp 0x21935a(%rip)
2c56(5): push $0x6e

"futimesat@plt" :
2c60(6): jmp 0x219352(%rip)
2c66(5): push $0x6f

"__ctype_b_loc@plt" :
2c70(6): jmp 0x21934a(%rip)
2c76(5): push $0x70

".plt.got" :
2c80(6): jmp 0x219342(%rip)
2c86(2): nop 
2c88(6): jmp 0x219362(%rip)
2c8e(2): nop 

"_init" :
2540(4): sub $0x8,%rsp
2544(7): mov 0x219a95(%rip),%rax
254b(3): test %rax,%rax
254e(2): jz 0x4(%rip)
2550(2): call %rax
2552(4): add $0x8,%rsp
2556(1): ret near (%rsp)

"fchmod_or_lchmod" :
2c90(2): test %edi,%edi
2c92(3): mov %rsi,%rax
2c95(2): mov %edx,%esi
2c97(2): js 0x7(%rip)
2c99(5): jmp 0xfffffe27(%rip)
2c9e(3): mov %rax,%rdi
2ca1(5): jmp 0xfffffe3f(%rip)

"restore_default_fscreatecon_or_die" :
2ca6(1): push %rbx
2ca7(5): call 0xfffff8f9(%rip)
2cac(7): lea 0x131b5(%rip),%rsi
2cb3(3): mov %rax,%rbx
2cb6(5): mov $0x5,%edx
2cbb(2): xor %edi,%edi
2cbd(6): mov $0x5f,(%rax)
2cc3(5): call 0xfffffa6d(%rip)
2cc8(2): mov (%rbx),%esi
2cca(3): mov %rax,%rdx
2ccd(5): mov $0x1,%edi
2cd2(2): xor %eax,%eax
2cd4(5): call 0xfffffe3c(%rip)
2cd9(7): nop 0x0(%rax)
2ce0(2): push %r15
2ce2(2): push %r14
2ce4(2): push %r13
2ce6(2): push %r12
2ce8(1): push %rbp
2ce9(1): push %rbx
2cea(2): mov %edi,%ebp
2cec(3): mov %rsi,%rbx
2cef(7): sub $0x118,%rsp
2cf6(3): mov (%rsi),%rdi
2cf9(9): mov $0x28,%rax
2d02(8): mov %rax,0x108(%rsp)
2d0a(2): xor %eax,%eax
2d0c(5): lea 0x20(%rsp),%r13
2d11(5): call 0x9e9f(%rip)
2d16(7): lea 0x13a6f(%rip),%rsi
2d1d(5): mov $0x6,%edi
2d22(5): call 0xfffffd7e(%rip)
2d27(7): lea 0x122ad(%rip),%rsi
2d2e(7): lea 0x1227d(%rip),%rdi
2d35(5): call 0xfffff9cb(%rip)
2d3a(7): lea 0x12271(%rip),%rdi
2d41(5): call 0xfffff97f(%rip)
2d46(7): lea 0x80b3(%rip),%rdi
2d4d(5): call 0x12183(%rip)
2d52(3): mov %r13,%rdi
2d55(5): call 0x293b(%rip)
2d5a(2): xor %edi,%edi
2d5c(5): mov $0x0,0x34(%rsp)
2d61(8): mov $0x1,0x58(%rsp)
2d69(8): mov $0x2,0x24(%rsp)
2d71(5): mov $0x0,0x35(%rsp)
2d76(5): mov $0x0,0x36(%rsp)
2d7b(5): mov $0x0,0x37(%rsp)
2d80(8): mov $0x4,0x28(%rsp)
2d88(5): mov $0x1,0x38(%rsp)
2d8d(5): mov $0x0,0x39(%rsp)
2d92(5): mov $0x0,0x3c(%rsp)
2d97(5): mov $0x1,0x3d(%rsp)
2d9c(5): mov $0x1,0x42(%rsp)
2da1(5): mov $0x1,0x3e(%rsp)
2da6(5): mov $0x1,0x3f(%rsp)
2dab(5): mov $0x0,0x40(%rsp)
2db0(5): mov $0x0,0x45(%rsp)
2db5(5): mov $0x0,0x41(%rsp)
2dba(5): mov $0x0,0x49(%rsp)
2dbf(5): mov $0x1,0x43(%rsp)
2dc4(5): mov $0x0,0x44(%rsp)
2dc9(5): mov $0x0,0x46(%rsp)
2dce(5): mov $0x1,0x47(%rsp)
2dd3(5): mov $0x0,0x48(%rsp)
2dd8(5): mov $0x1,0x4a(%rsp)
2ddd(8): mov $0x2,0x2c(%rsp)
2de5(5): mov $0x0,0x4c(%rsp)
2dea(5): mov $0x0,0x4b(%rsp)
2def(8): mov $0x0,0x30(%rsp)
2df7(5): call 0xfffff849(%rip)
2dfc(2): test %eax,%eax
2dfe(5): lea 0x70(%rsp),%rax
2e03(5): mov $0x0,0x50(%rsp)
2e08(5): setnz 0x4f(%rsp)
2e0d(5): mov $0x0,0x4d(%rsp)
2e12(3): xor %r12d,%r12d
2e15(5): mov $0x0,0x4e(%rsp)
2e1a(9): mov $0x0,0x60(%rsp)
2e23(3): xor %r15d,%r15d
2e26(9): mov $0x0,0x68(%rsp)
2e2f(5): mov $0x0,0x10(%rsp)
2e34(3): xor %r14d,%r14d
2e37(9): mov $0x0,0x8(%rsp)
2e40(5): mov %rax,0x18(%rsp)
2e45(3): nop (%rax)
2e48(7): lea 0x218951(%rip),%rcx
2e4f(7): lea 0x121f7(%rip),%rdx
2e56(3): xor %r8d,%r8d
2e59(3): mov %rbx,%rsi
2e5c(2): mov %ebp,%edi
2e5e(5): call 0xfffff942(%rip)
2e63(3): cmp $0xff,%eax
2e66(6): jz 0x1e7(%rip)
2e6c(3): cmp $0x66,%eax
2e6f(6): jz 0x1a1(%rip)
2e75(2): jle 0x2b(%rip)
2e77(3): cmp $0x74,%eax
2e7a(6): jz 0xd6(%rip)
2e80(2): jle 0x60(%rip)
2e82(3): cmp $0x76,%eax
2e85(6): jz 0x15b(%rip)
2e8b(6): jl 0x145(%rip)
2e91(3): add $0x80,%eax
2e94(2): jnz 0x2a(%rip)
2e96(7): mov $0x1,0x219283(%rip)
2e9d(2): jmp 0xffffffab(%rip)
2e9f(1): nop 
2ea0(3): cmp $0x53,%eax
2ea3(6): jz 0x14d(%rip)
2ea9(2): jle 0x57(%rip)
2eab(3): cmp $0x5a,%eax
2eae(2): jz 0xffffff9a(%rip)
2eb0(3): cmp $0x62,%eax
2eb3(6): jz 0x16d(%rip)
2eb9(3): cmp $0x54,%eax
2ebc(2): jz 0x14(%rip)
2ebe(5): mov $0x1,%edi
2ec3(5): call 0x8bd(%rip)
2ec8(8): nop 0x0(%rax,%rax,1)
2ed0(5): mov $0x1,0x10(%rsp)
2ed5(5): jmp 0xffffff73(%rip)
2eda(6): nop 0x0(%rax,%rax,1)
2ee0(3): cmp $0x69,%eax
2ee3(6): jz 0x15d(%rip)
2ee9(3): cmp $0x6e,%eax
2eec(2): jnz 0xffffffd2(%rip)
2eee(8): mov $0x2,0x28(%rsp)
2ef6(5): jmp 0xffffff52(%rip)
2efb(5): nop 0x0(%rax,%rax,1)
2f00(5): cmp $0xffffff7d,%eax
2f05(6): jnz 0x3a6(%rip)
2f0b(7): lea 0x1212e(%rip),%rax
2f12(7): mov 0x2191af(%rip),%rdi
2f19(7): mov 0x219100(%rip),%rcx
2f20(2): push $0x0
2f22(7): lea 0x120fb(%rip),%r9
2f29(7): lea 0x12104(%rip),%r8
2f30(1): push %rax
2f31(7): lea 0x12076(%rip),%rdx
2f38(7): lea 0x11ff6(%rip),%rsi
2f3f(2): xor %eax,%eax
2f41(5): call 0xdbdf(%rip)
2f46(2): xor %edi,%edi
2f48(5): call 0xfffffcb8(%rip)
2f4d(3): nop (%rax)
2f50(3): test %r12,%r12
2f53(6): jnz 0x44c(%rip)
2f59(5): mov 0x18(%rsp),%rdx
2f5e(7): mov 0x21917b(%rip),%rsi
2f65(5): mov $0x1,%edi
2f6a(5): call 0xfffffa76(%rip)
2f6f(2): test %eax,%eax
2f71(6): jnz 0x496(%rip)
2f77(7): mov 0x88(%rsp),%eax
2f7e(7): mov 0x21915b(%rip),%r12
2f85(5): and $0xf000,%eax
2f8a(5): cmp $0x4000,%eax
2f8f(6): jz 0xfffffeb9(%rip)
2f95(3): mov %r12,%rsi
2f98(5): mov $0x4,%edi
2f9d(5): call 0xb733(%rip)
2fa2(7): lea 0x1205e(%rip),%rsi
2fa9(3): mov %rax,%rbx
2fac(5): mov $0x5,%edx
2fb1(2): xor %edi,%edi
2fb3(5): call 0xfffff77d(%rip)
2fb8(3): mov %rbx,%rcx
2fbb(3): mov %rax,%rdx
2fbe(2): xor %esi,%esi
2fc0(5): mov $0x1,%edi
2fc5(2): xor %eax,%eax
2fc7(5): call 0xfffffb49(%rip)
2fcc(4): nop 0x0(%rax)
2fd0(5): mov $0x1,0x4d(%rsp)
2fd5(5): jmp 0xfffffe73(%rip)
2fda(6): nop 0x0(%rax,%rax,1)
2fe0(5): mov $0x1,0x4e(%rsp)
2fe5(5): jmp 0xfffffe63(%rip)
2fea(6): nop 0x0(%rax,%rax,1)
2ff0(7): mov 0x2190e9(%rip),%rax
2ff7(6): mov $0x1,%r14d
2ffd(5): mov %rax,0x8(%rsp)
3002(5): jmp 0xfffffe46(%rip)
3007(9): nop 0x0(%rax,%rax,1)
3010(8): mov $0x1,0x28(%rsp)
3018(5): jmp 0xfffffe30(%rip)
301d(3): nop (%rax)
3020(7): mov 0x2190b9(%rip),%rax
3027(6): mov $0x1,%r14d
302d(3): test %rax,%rax
3030(4): cmovne %rax,%r15
3034(5): jmp 0xfffffe14(%rip)
3039(7): nop 0x0(%rax)
3040(8): mov $0x3,0x28(%rsp)
3048(5): jmp 0xfffffe00(%rip)
304d(7): movsxd 0x219084(%rip),%rax
3054(2): sub %eax,%ebp
3056(4): lea 0x0(%rbx,%rax,8),%rbx
305a(2): xor %eax,%eax
305c(3): test %r12,%r12
305f(3): setz %al
3062(2): cmp %ebp,%eax
3064(6): jnl 0x271(%rip)
306a(5): cmp $0x0,0x10(%rsp)
306f(6): jnz 0xb2(%rip)
3075(3): test %r12,%r12
3078(6): jz 0x166(%rip)
307e(5): cmp $0x2,0x28(%rsp)
3083(6): jz 0xd2(%rip)
3089(3): test %r14b,%r14b
308c(6): jz 0xd7(%rip)
3092(7): lea 0x11ff4(%rip),%rsi
3099(2): xor %edi,%edi
309b(5): mov $0x5,%edx
30a0(5): call 0xfffff690(%rip)
30a5(3): mov %r15,%rsi
30a8(3): mov %rax,%rdi
30ab(5): call 0x7c85(%rip)
30b0(5): mov 0x8(%rsp),%rdi
30b5(4): mov %eax,0x20(%rsp)
30b9(5): call 0x7577(%rip)
30be(5): call 0x6ca2(%rip)
30c3(3): test %r12,%r12
30c6(6): jz 0xfa(%rip)
30cc(3): cmp $0x1,%ebp
30cf(6): jnz 0x9b(%rip)
30d5(3): mov (%rbx),%rdi
30d8(3): mov %r13,%rcx
30db(5): mov $0x1,%edx
30e0(3): mov %r12,%rsi
30e3(5): mov $0x1,0x51(%rsp)
30e8(5): call 0x608(%rip)
30ed(3): mov %eax,%r14d
30f0(4): xor $0x1,%r14d
30f4(8): mov 0x108(%rsp),%rcx
30fc(9): xor $0x28,%rcx
3105(4): movzx %r14b,%eax
3109(6): jnz 0x365(%rip)
310f(7): add $0x118,%rsp
3116(1): pop %rbx
3117(1): pop %rbp
3118(2): pop %r12
311a(2): pop %r13
311c(2): pop %r14
311e(2): pop %r15
3120(1): ret near (%rsp)
3121(3): test %r12,%r12
3124(6): jnz 0x326(%rip)
312a(3): cmp $0x2,%ebp
312d(6): jle 0xffffff51(%rip)
3133(4): mov 0x10(%rbx),%rsi
3137(5): mov $0x4,%edi
313c(5): call 0xb594(%rip)
3141(5): mov $0x5,%edx
3146(3): mov %rax,%rbx
3149(7): lea 0x11f1f(%rip),%rsi
3150(5): jmp 0x1a6(%rip)
3155(3): test %r14b,%r14b
3158(5): mov $0x0,0x4d(%rsp)
315d(6): jnz 0x1b6(%rip)
3163(2): xor %eax,%eax
3165(5): jmp 0xffffff4b(%rip)
316a(4): lea 0xffffffff(%rbp),%r15d
316e(3): mov %r13,%rdi
3171(6): mov $0x1,%r14d
3177(5): call 0x24b9(%rip)
317c(4): lea 0x2(%r15),%rax
3180(6): mov $0x1,%r15d
3186(5): mov %rax,0x8(%rsp)
318b(5): nop 0x0(%rax,%rax,1)
3190(5): mov 0xfffffff8(%rbx,%r15,8),%rdi
3195(3): cmp %r15d,%ebp
3198(3): mov %r13,%rcx
319b(5): mov $0x1,%edx
31a0(3): mov %r12,%rsi
31a3(5): setz 0x51(%rsp)
31a8(4): add $0x1,%r15
31ac(5): call 0x544(%rip)
31b1(3): and %eax,%r14d
31b4(5): cmp 0x8(%rsp),%r15
31b9(2): jnz 0xffffffd7(%rip)
31bb(5): jmp 0xffffff35(%rip)
31c0(4): mov 0x8(%rbx),%rsi
31c4(3): mov (%rbx),%rdi
31c7(3): mov %r13,%rcx
31ca(2): xor %edx,%edx
31cc(5): mov $0x1,0x51(%rsp)
31d1(5): call 0x51f(%rip)
31d6(3): mov %eax,%r14d
31d9(5): jmp 0xffffff17(%rip)
31de(3): cmp $0x1,%ebp
31e1(6): jz 0x19f(%rip)
31e7(3): cmp $0x2,%ebp
31ea(6): jz 0x9a(%rip)
31f0(5): cmp $0x0,0x54(%rsp)
31f5(3): movsxd %ebp,%rcx
31f8(6): jz 0x14f(%rip)
31fe(3): movsxd %ebp,%rcx
3201(5): lea 0x70(%rsp),%rdx
3206(5): mov $0x1,%edi
320b(5): mov 0xfffffff8(%rbx,%rcx,8),%rax
3210(5): mov %rcx,0x10(%rsp)
3215(3): mov %rax,%rsi
3218(5): mov %rax,0x18(%rsp)
321d(5): call 0xfffff7c3(%rip)
3222(2): test %eax,%eax
3224(5): mov 0x10(%rsp),%rcx
3229(2): jz 0x31(%rip)
322b(5): call 0xfffff375(%rip)
3230(3): mov (%rax),%r8d
3233(5): mov 0x10(%rsp),%rcx
3238(3): test %r8d,%r8d
323b(2): jz 0x1f(%rip)
323d(4): cmp $0x2,%r8d
3241(6): jnz 0x182(%rip)
3247(3): cmp $0x2,%ebp
324a(6): jnz 0xfd(%rip)
3250(5): mov $0x2,%ebp
3255(5): jmp 0xfffffe29(%rip)
325a(7): mov 0x88(%rsp),%eax
3261(5): and $0xf000,%eax
3266(5): cmp $0x4000,%eax
326b(2): jnz 0xffffffdc(%rip)
326d(3): sub $0x1,%ebp
3270(8): mov $0xffffffff,0x54(%rsp)
3278(3): movsxd %ebp,%rax
327b(4): mov 0x0(%rbx,%rax,8),%r12
327f(5): jmp 0xfffffdff(%rip)
3284(4): mov 0x8(%rbx),%rcx
3288(3): mov (%rbx),%rsi
328b(5): mov $0xffffff9c,%edx
3290(6): mov $0x1,%r8d
3296(2): mov %edx,%edi
3298(5): call 0xb728(%rip)
329d(2): test %eax,%eax
329f(2): jnz 0x1e(%rip)
32a1(8): mov $0x0,0x54(%rsp)
32a9(2): jmp 0xffffffa7(%rip)
32ab(5): cmp $0xffffff7e,%eax
32b0(6): jnz 0xfffffc0e(%rip)
32b6(2): xor %edi,%edi
32b8(5): call 0x4c8(%rip)
32bd(5): call 0xfffff2e3(%rip)
32c2(2): mov (%rax),%eax
32c4(2): test %eax,%eax
32c6(4): mov %eax,0x54(%rsp)
32ca(6): jnz 0xffffff34(%rip)
32d0(5): jmp 0xffffff80(%rip)
32d5(3): sub $0x1,%ebp
32d8(2): jnz 0x61(%rip)
32da(3): mov (%rbx),%rsi
32dd(5): mov $0x4,%edi
32e2(5): call 0xb3ee(%rip)
32e7(7): lea 0x126e2(%rip),%rsi
32ee(3): mov %rax,%rbx
32f1(5): mov $0x5,%edx
32f6(2): xor %edi,%edi
32f8(5): call 0xfffff438(%rip)
32fd(3): mov %rbx,%rcx
3300(3): mov %rax,%rdx
3303(2): xor %esi,%esi
3305(2): xor %edi,%edi
3307(2): xor %eax,%eax
3309(5): call 0xfffff807(%rip)
330e(5): jmp 0xfffffbb0(%rip)
3313(7): lea 0x1272e(%rip),%rsi
331a(5): mov $0x5,%edx
331f(2): xor %edi,%edi
3321(5): call 0xfffff40f(%rip)
3326(2): xor %esi,%esi
3328(3): mov %rax,%rdx
332b(2): xor %edi,%edi
332d(2): xor %eax,%eax
332f(5): call 0xfffff7e1(%rip)
3334(5): jmp 0xfffffb8a(%rip)
3339(5): mov $0x5,%edx
333e(7): lea 0x11d15(%rip),%rsi
3345(2): jmp 0xffffffda(%rip)
3347(5): mov 0xfffffff8(%rbx,%rcx,8),%rsi
334c(5): mov $0x4,%edi
3351(5): call 0xb37f(%rip)
3356(7): lea 0x11caa(%rip),%rsi
335d(3): mov %rax,%rbx
3360(5): mov $0x5,%edx
3365(2): xor %edi,%edi
3367(5): call 0xfffff3c9(%rip)
336c(3): mov %rbx,%rcx
336f(3): mov %rax,%rdx
3372(2): xor %esi,%esi
3374(5): mov $0x1,%edi
3379(2): xor %eax,%eax
337b(5): call 0xfffff795(%rip)
3380(7): lea 0x12709(%rip),%rcx
3387(7): lea 0x11b76(%rip),%rsi
338e(7): lea 0x11ceb(%rip),%rdi
3395(5): mov $0x1c9,%edx
339a(5): call 0xfffff486(%rip)
339f(7): lea 0x12602(%rip),%rsi
33a6(5): mov $0x5,%edx
33ab(2): xor %edi,%edi
33ad(5): call 0xfffff383(%rip)
33b2(2): xor %esi,%esi
33b4(3): mov %rax,%rdx
33b7(5): mov $0x1,%edi
33bc(2): xor %eax,%eax
33be(5): call 0xfffff752(%rip)
33c3(5): mov 0x18(%rsp),%rsi
33c8(5): mov $0x4,%edi
33cd(5): mov %r8d,0x8(%rsp)
33d2(5): call 0xb2fe(%rip)
33d7(7): lea 0x11c15(%rip),%rsi
33de(5): mov $0x5,%edx
33e3(2): xor %edi,%edi
33e5(3): mov %rax,%rbx
33e8(5): call 0xfffff348(%rip)
33ed(5): mov 0x8(%rsp),%r8d
33f2(3): mov %rax,%rdx
33f5(3): mov %rbx,%rcx
33f8(5): mov $0x1,%edi
33fd(2): xor %eax,%eax
33ff(3): mov %r8d,%esi
3402(5): call 0xfffff70e(%rip)
3407(7): mov 0x218cd2(%rip),%rsi
340e(5): mov $0x4,%edi
3413(5): call 0xb2bd(%rip)
3418(7): lea 0x11bd4(%rip),%rsi
341f(5): mov $0x5,%edx
3424(2): xor %edi,%edi
3426(3): mov %rax,%rbp
3429(5): call 0xfffff307(%rip)
342e(3): mov %rax,%rbx
3431(5): call 0xfffff16f(%rip)
3436(2): mov (%rax),%esi
3438(3): mov %rbp,%rcx
343b(3): mov %rbx,%rdx
343e(5): mov $0x1,%edi
3443(2): xor %eax,%eax
3445(5): call 0xfffff6cb(%rip)
344a(7): lea 0x125af(%rip),%rsi
3451(5): mov $0x5,%edx
3456(2): xor %edi,%edi
3458(5): call 0xfffff2d8(%rip)
345d(2): xor %esi,%esi
345f(3): mov %rax,%rdx
3462(5): mov $0x1,%edi
3467(2): xor %eax,%eax
3469(5): call 0xfffff6a7(%rip)
346e(5): call 0xfffff312(%rip)

"main" :
2ce0(2): push %r15
2ce2(2): push %r14
2ce4(2): push %r13
2ce6(2): push %r12
2ce8(1): push %rbp
2ce9(1): push %rbx
2cea(2): mov %edi,%ebp
2cec(3): mov %rsi,%rbx
2cef(7): sub $0x118,%rsp
2cf6(3): mov (%rsi),%rdi
2cf9(9): mov $0x28,%rax
2d02(8): mov %rax,0x108(%rsp)
2d0a(2): xor %eax,%eax
2d0c(5): lea 0x20(%rsp),%r13
2d11(5): call 0x9e9f(%rip)
2d16(7): lea 0x13a6f(%rip),%rsi
2d1d(5): mov $0x6,%edi
2d22(5): call 0xfffffd7e(%rip)
2d27(7): lea 0x122ad(%rip),%rsi
2d2e(7): lea 0x1227d(%rip),%rdi
2d35(5): call 0xfffff9cb(%rip)
2d3a(7): lea 0x12271(%rip),%rdi
2d41(5): call 0xfffff97f(%rip)
2d46(7): lea 0x80b3(%rip),%rdi
2d4d(5): call 0x12183(%rip)
2d52(3): mov %r13,%rdi
2d55(5): call 0x293b(%rip)
2d5a(2): xor %edi,%edi
2d5c(5): mov $0x0,0x34(%rsp)
2d61(8): mov $0x1,0x58(%rsp)
2d69(8): mov $0x2,0x24(%rsp)
2d71(5): mov $0x0,0x35(%rsp)
2d76(5): mov $0x0,0x36(%rsp)
2d7b(5): mov $0x0,0x37(%rsp)
2d80(8): mov $0x4,0x28(%rsp)
2d88(5): mov $0x1,0x38(%rsp)
2d8d(5): mov $0x0,0x39(%rsp)
2d92(5): mov $0x0,0x3c(%rsp)
2d97(5): mov $0x1,0x3d(%rsp)
2d9c(5): mov $0x1,0x42(%rsp)
2da1(5): mov $0x1,0x3e(%rsp)
2da6(5): mov $0x1,0x3f(%rsp)
2dab(5): mov $0x0,0x40(%rsp)
2db0(5): mov $0x0,0x45(%rsp)
2db5(5): mov $0x0,0x41(%rsp)
2dba(5): mov $0x0,0x49(%rsp)
2dbf(5): mov $0x1,0x43(%rsp)
2dc4(5): mov $0x0,0x44(%rsp)
2dc9(5): mov $0x0,0x46(%rsp)
2dce(5): mov $0x1,0x47(%rsp)
2dd3(5): mov $0x0,0x48(%rsp)
2dd8(5): mov $0x1,0x4a(%rsp)
2ddd(8): mov $0x2,0x2c(%rsp)
2de5(5): mov $0x0,0x4c(%rsp)
2dea(5): mov $0x0,0x4b(%rsp)
2def(8): mov $0x0,0x30(%rsp)
2df7(5): call 0xfffff849(%rip)
2dfc(2): test %eax,%eax
2dfe(5): lea 0x70(%rsp),%rax
2e03(5): mov $0x0,0x50(%rsp)
2e08(5): setnz 0x4f(%rsp)
2e0d(5): mov $0x0,0x4d(%rsp)
2e12(3): xor %r12d,%r12d
2e15(5): mov $0x0,0x4e(%rsp)
2e1a(9): mov $0x0,0x60(%rsp)
2e23(3): xor %r15d,%r15d
2e26(9): mov $0x0,0x68(%rsp)
2e2f(5): mov $0x0,0x10(%rsp)
2e34(3): xor %r14d,%r14d
2e37(9): mov $0x0,0x8(%rsp)
2e40(5): mov %rax,0x18(%rsp)
2e45(3): nop (%rax)
2e48(7): lea 0x218951(%rip),%rcx
2e4f(7): lea 0x121f7(%rip),%rdx
2e56(3): xor %r8d,%r8d
2e59(3): mov %rbx,%rsi
2e5c(2): mov %ebp,%edi
2e5e(5): call 0xfffff942(%rip)
2e63(3): cmp $0xff,%eax
2e66(6): jz 0x1e7(%rip)
2e6c(3): cmp $0x66,%eax
2e6f(6): jz 0x1a1(%rip)
2e75(2): jle 0x2b(%rip)
2e77(3): cmp $0x74,%eax
2e7a(6): jz 0xd6(%rip)
2e80(2): jle 0x60(%rip)
2e82(3): cmp $0x76,%eax
2e85(6): jz 0x15b(%rip)
2e8b(6): jl 0x145(%rip)
2e91(3): add $0x80,%eax
2e94(2): jnz 0x2a(%rip)
2e96(7): mov $0x1,0x219283(%rip)
2e9d(2): jmp 0xffffffab(%rip)
2e9f(1): nop 
2ea0(3): cmp $0x53,%eax
2ea3(6): jz 0x14d(%rip)
2ea9(2): jle 0x57(%rip)
2eab(3): cmp $0x5a,%eax
2eae(2): jz 0xffffff9a(%rip)
2eb0(3): cmp $0x62,%eax
2eb3(6): jz 0x16d(%rip)
2eb9(3): cmp $0x54,%eax
2ebc(2): jz 0x14(%rip)
2ebe(5): mov $0x1,%edi
2ec3(5): call 0x8bd(%rip)
2ec8(8): nop 0x0(%rax,%rax,1)
2ed0(5): mov $0x1,0x10(%rsp)
2ed5(5): jmp 0xffffff73(%rip)
2eda(6): nop 0x0(%rax,%rax,1)
2ee0(3): cmp $0x69,%eax
2ee3(6): jz 0x15d(%rip)
2ee9(3): cmp $0x6e,%eax
2eec(2): jnz 0xffffffd2(%rip)
2eee(8): mov $0x2,0x28(%rsp)
2ef6(5): jmp 0xffffff52(%rip)
2efb(5): nop 0x0(%rax,%rax,1)
2f00(5): cmp $0xffffff7d,%eax
2f05(6): jnz 0x3a6(%rip)
2f0b(7): lea 0x1212e(%rip),%rax
2f12(7): mov 0x2191af(%rip),%rdi
2f19(7): mov 0x219100(%rip),%rcx
2f20(2): push $0x0
2f22(7): lea 0x120fb(%rip),%r9
2f29(7): lea 0x12104(%rip),%r8
2f30(1): push %rax
2f31(7): lea 0x12076(%rip),%rdx
2f38(7): lea 0x11ff6(%rip),%rsi
2f3f(2): xor %eax,%eax
2f41(5): call 0xdbdf(%rip)
2f46(2): xor %edi,%edi
2f48(5): call 0xfffffcb8(%rip)
2f4d(3): nop (%rax)
2f50(3): test %r12,%r12
2f53(6): jnz 0x44c(%rip)
2f59(5): mov 0x18(%rsp),%rdx
2f5e(7): mov 0x21917b(%rip),%rsi
2f65(5): mov $0x1,%edi
2f6a(5): call 0xfffffa76(%rip)
2f6f(2): test %eax,%eax
2f71(6): jnz 0x496(%rip)
2f77(7): mov 0x88(%rsp),%eax
2f7e(7): mov 0x21915b(%rip),%r12
2f85(5): and $0xf000,%eax
2f8a(5): cmp $0x4000,%eax
2f8f(6): jz 0xfffffeb9(%rip)
2f95(3): mov %r12,%rsi
2f98(5): mov $0x4,%edi
2f9d(5): call 0xb733(%rip)
2fa2(7): lea 0x1205e(%rip),%rsi
2fa9(3): mov %rax,%rbx
2fac(5): mov $0x5,%edx
2fb1(2): xor %edi,%edi
2fb3(5): call 0xfffff77d(%rip)
2fb8(3): mov %rbx,%rcx
2fbb(3): mov %rax,%rdx
2fbe(2): xor %esi,%esi
2fc0(5): mov $0x1,%edi
2fc5(2): xor %eax,%eax
2fc7(5): call 0xfffffb49(%rip)
2fcc(4): nop 0x0(%rax)
2fd0(5): mov $0x1,0x4d(%rsp)
2fd5(5): jmp 0xfffffe73(%rip)
2fda(6): nop 0x0(%rax,%rax,1)
2fe0(5): mov $0x1,0x4e(%rsp)
2fe5(5): jmp 0xfffffe63(%rip)
2fea(6): nop 0x0(%rax,%rax,1)
2ff0(7): mov 0x2190e9(%rip),%rax
2ff7(6): mov $0x1,%r14d
2ffd(5): mov %rax,0x8(%rsp)
3002(5): jmp 0xfffffe46(%rip)
3007(9): nop 0x0(%rax,%rax,1)
3010(8): mov $0x1,0x28(%rsp)
3018(5): jmp 0xfffffe30(%rip)
301d(3): nop (%rax)
3020(7): mov 0x2190b9(%rip),%rax
3027(6): mov $0x1,%r14d
302d(3): test %rax,%rax
3030(4): cmovne %rax,%r15
3034(5): jmp 0xfffffe14(%rip)
3039(7): nop 0x0(%rax)
3040(8): mov $0x3,0x28(%rsp)
3048(5): jmp 0xfffffe00(%rip)
304d(7): movsxd 0x219084(%rip),%rax
3054(2): sub %eax,%ebp
3056(4): lea 0x0(%rbx,%rax,8),%rbx
305a(2): xor %eax,%eax
305c(3): test %r12,%r12
305f(3): setz %al
3062(2): cmp %ebp,%eax
3064(6): jnl 0x271(%rip)
306a(5): cmp $0x0,0x10(%rsp)
306f(6): jnz 0xb2(%rip)
3075(3): test %r12,%r12
3078(6): jz 0x166(%rip)
307e(5): cmp $0x2,0x28(%rsp)
3083(6): jz 0xd2(%rip)
3089(3): test %r14b,%r14b
308c(6): jz 0xd7(%rip)
3092(7): lea 0x11ff4(%rip),%rsi
3099(2): xor %edi,%edi
309b(5): mov $0x5,%edx
30a0(5): call 0xfffff690(%rip)
30a5(3): mov %r15,%rsi
30a8(3): mov %rax,%rdi
30ab(5): call 0x7c85(%rip)
30b0(5): mov 0x8(%rsp),%rdi
30b5(4): mov %eax,0x20(%rsp)
30b9(5): call 0x7577(%rip)
30be(5): call 0x6ca2(%rip)
30c3(3): test %r12,%r12
30c6(6): jz 0xfa(%rip)
30cc(3): cmp $0x1,%ebp
30cf(6): jnz 0x9b(%rip)
30d5(3): mov (%rbx),%rdi
30d8(3): mov %r13,%rcx
30db(5): mov $0x1,%edx
30e0(3): mov %r12,%rsi
30e3(5): mov $0x1,0x51(%rsp)
30e8(5): call 0x608(%rip)
30ed(3): mov %eax,%r14d
30f0(4): xor $0x1,%r14d
30f4(8): mov 0x108(%rsp),%rcx
30fc(9): xor $0x28,%rcx
3105(4): movzx %r14b,%eax
3109(6): jnz 0x365(%rip)
310f(7): add $0x118,%rsp
3116(1): pop %rbx
3117(1): pop %rbp
3118(2): pop %r12
311a(2): pop %r13
311c(2): pop %r14
311e(2): pop %r15
3120(1): ret near (%rsp)
3121(3): test %r12,%r12
3124(6): jnz 0x326(%rip)
312a(3): cmp $0x2,%ebp
312d(6): jle 0xffffff51(%rip)
3133(4): mov 0x10(%rbx),%rsi
3137(5): mov $0x4,%edi
313c(5): call 0xb594(%rip)
3141(5): mov $0x5,%edx
3146(3): mov %rax,%rbx
3149(7): lea 0x11f1f(%rip),%rsi
3150(5): jmp 0x1a6(%rip)
3155(3): test %r14b,%r14b
3158(5): mov $0x0,0x4d(%rsp)
315d(6): jnz 0x1b6(%rip)
3163(2): xor %eax,%eax
3165(5): jmp 0xffffff4b(%rip)
316a(4): lea 0xffffffff(%rbp),%r15d
316e(3): mov %r13,%rdi
3171(6): mov $0x1,%r14d
3177(5): call 0x24b9(%rip)
317c(4): lea 0x2(%r15),%rax
3180(6): mov $0x1,%r15d
3186(5): mov %rax,0x8(%rsp)
318b(5): nop 0x0(%rax,%rax,1)
3190(5): mov 0xfffffff8(%rbx,%r15,8),%rdi
3195(3): cmp %r15d,%ebp
3198(3): mov %r13,%rcx
319b(5): mov $0x1,%edx
31a0(3): mov %r12,%rsi
31a3(5): setz 0x51(%rsp)
31a8(4): add $0x1,%r15
31ac(5): call 0x544(%rip)
31b1(3): and %eax,%r14d
31b4(5): cmp 0x8(%rsp),%r15
31b9(2): jnz 0xffffffd7(%rip)
31bb(5): jmp 0xffffff35(%rip)
31c0(4): mov 0x8(%rbx),%rsi
31c4(3): mov (%rbx),%rdi
31c7(3): mov %r13,%rcx
31ca(2): xor %edx,%edx
31cc(5): mov $0x1,0x51(%rsp)
31d1(5): call 0x51f(%rip)
31d6(3): mov %eax,%r14d
31d9(5): jmp 0xffffff17(%rip)
31de(3): cmp $0x1,%ebp
31e1(6): jz 0x19f(%rip)
31e7(3): cmp $0x2,%ebp
31ea(6): jz 0x9a(%rip)
31f0(5): cmp $0x0,0x54(%rsp)
31f5(3): movsxd %ebp,%rcx
31f8(6): jz 0x14f(%rip)
31fe(3): movsxd %ebp,%rcx
3201(5): lea 0x70(%rsp),%rdx
3206(5): mov $0x1,%edi
320b(5): mov 0xfffffff8(%rbx,%rcx,8),%rax
3210(5): mov %rcx,0x10(%rsp)
3215(3): mov %rax,%rsi
3218(5): mov %rax,0x18(%rsp)
321d(5): call 0xfffff7c3(%rip)
3222(2): test %eax,%eax
3224(5): mov 0x10(%rsp),%rcx
3229(2): jz 0x31(%rip)
322b(5): call 0xfffff375(%rip)
3230(3): mov (%rax),%r8d
3233(5): mov 0x10(%rsp),%rcx
3238(3): test %r8d,%r8d
323b(2): jz 0x1f(%rip)
323d(4): cmp $0x2,%r8d
3241(6): jnz 0x182(%rip)
3247(3): cmp $0x2,%ebp
324a(6): jnz 0xfd(%rip)
3250(5): mov $0x2,%ebp
3255(5): jmp 0xfffffe29(%rip)
325a(7): mov 0x88(%rsp),%eax
3261(5): and $0xf000,%eax
3266(5): cmp $0x4000,%eax
326b(2): jnz 0xffffffdc(%rip)
326d(3): sub $0x1,%ebp
3270(8): mov $0xffffffff,0x54(%rsp)
3278(3): movsxd %ebp,%rax
327b(4): mov 0x0(%rbx,%rax,8),%r12
327f(5): jmp 0xfffffdff(%rip)
3284(4): mov 0x8(%rbx),%rcx
3288(3): mov (%rbx),%rsi
328b(5): mov $0xffffff9c,%edx
3290(6): mov $0x1,%r8d
3296(2): mov %edx,%edi
3298(5): call 0xb728(%rip)
329d(2): test %eax,%eax
329f(2): jnz 0x1e(%rip)
32a1(8): mov $0x0,0x54(%rsp)
32a9(2): jmp 0xffffffa7(%rip)
32ab(5): cmp $0xffffff7e,%eax
32b0(6): jnz 0xfffffc0e(%rip)
32b6(2): xor %edi,%edi
32b8(5): call 0x4c8(%rip)
32bd(5): call 0xfffff2e3(%rip)
32c2(2): mov (%rax),%eax
32c4(2): test %eax,%eax
32c6(4): mov %eax,0x54(%rsp)
32ca(6): jnz 0xffffff34(%rip)
32d0(5): jmp 0xffffff80(%rip)
32d5(3): sub $0x1,%ebp
32d8(2): jnz 0x61(%rip)
32da(3): mov (%rbx),%rsi
32dd(5): mov $0x4,%edi
32e2(5): call 0xb3ee(%rip)
32e7(7): lea 0x126e2(%rip),%rsi
32ee(3): mov %rax,%rbx
32f1(5): mov $0x5,%edx
32f6(2): xor %edi,%edi
32f8(5): call 0xfffff438(%rip)
32fd(3): mov %rbx,%rcx
3300(3): mov %rax,%rdx
3303(2): xor %esi,%esi
3305(2): xor %edi,%edi
3307(2): xor %eax,%eax
3309(5): call 0xfffff807(%rip)
330e(5): jmp 0xfffffbb0(%rip)
3313(7): lea 0x1272e(%rip),%rsi
331a(5): mov $0x5,%edx
331f(2): xor %edi,%edi
3321(5): call 0xfffff40f(%rip)
3326(2): xor %esi,%esi
3328(3): mov %rax,%rdx
332b(2): xor %edi,%edi
332d(2): xor %eax,%eax
332f(5): call 0xfffff7e1(%rip)
3334(5): jmp 0xfffffb8a(%rip)
3339(5): mov $0x5,%edx
333e(7): lea 0x11d15(%rip),%rsi
3345(2): jmp 0xffffffda(%rip)
3347(5): mov 0xfffffff8(%rbx,%rcx,8),%rsi
334c(5): mov $0x4,%edi
3351(5): call 0xb37f(%rip)
3356(7): lea 0x11caa(%rip),%rsi
335d(3): mov %rax,%rbx
3360(5): mov $0x5,%edx
3365(2): xor %edi,%edi
3367(5): call 0xfffff3c9(%rip)
336c(3): mov %rbx,%rcx
336f(3): mov %rax,%rdx
3372(2): xor %esi,%esi
3374(5): mov $0x1,%edi
3379(2): xor %eax,%eax
337b(5): call 0xfffff795(%rip)
3380(7): lea 0x12709(%rip),%rcx
3387(7): lea 0x11b76(%rip),%rsi
338e(7): lea 0x11ceb(%rip),%rdi
3395(5): mov $0x1c9,%edx
339a(5): call 0xfffff486(%rip)
339f(7): lea 0x12602(%rip),%rsi
33a6(5): mov $0x5,%edx
33ab(2): xor %edi,%edi
33ad(5): call 0xfffff383(%rip)
33b2(2): xor %esi,%esi
33b4(3): mov %rax,%rdx
33b7(5): mov $0x1,%edi
33bc(2): xor %eax,%eax
33be(5): call 0xfffff752(%rip)
33c3(5): mov 0x18(%rsp),%rsi
33c8(5): mov $0x4,%edi
33cd(5): mov %r8d,0x8(%rsp)
33d2(5): call 0xb2fe(%rip)
33d7(7): lea 0x11c15(%rip),%rsi
33de(5): mov $0x5,%edx
33e3(2): xor %edi,%edi
33e5(3): mov %rax,%rbx
33e8(5): call 0xfffff348(%rip)
33ed(5): mov 0x8(%rsp),%r8d
33f2(3): mov %rax,%rdx
33f5(3): mov %rbx,%rcx
33f8(5): mov $0x1,%edi
33fd(2): xor %eax,%eax
33ff(3): mov %r8d,%esi
3402(5): call 0xfffff70e(%rip)
3407(7): mov 0x218cd2(%rip),%rsi
340e(5): mov $0x4,%edi
3413(5): call 0xb2bd(%rip)
3418(7): lea 0x11bd4(%rip),%rsi
341f(5): mov $0x5,%edx
3424(2): xor %edi,%edi
3426(3): mov %rax,%rbp
3429(5): call 0xfffff307(%rip)
342e(3): mov %rax,%rbx
3431(5): call 0xfffff16f(%rip)
3436(2): mov (%rax),%esi
3438(3): mov %rbp,%rcx
343b(3): mov %rbx,%rdx
343e(5): mov $0x1,%edi
3443(2): xor %eax,%eax
3445(5): call 0xfffff6cb(%rip)
344a(7): lea 0x125af(%rip),%rsi
3451(5): mov $0x5,%edx
3456(2): xor %edi,%edi
3458(5): call 0xfffff2d8(%rip)
345d(2): xor %esi,%esi
345f(3): mov %rax,%rdx
3462(5): mov $0x1,%edi
3467(2): xor %eax,%eax
3469(5): call 0xfffff6a7(%rip)
346e(5): call 0xfffff312(%rip)

"_start" :
3480(2): xor %ebp,%ebp
3482(3): mov %rdx,%r9
3485(1): pop %rsi
3486(3): mov %rsp,%rdx
3489(4): and $0xfffffff0,%rsp
348d(1): push %rax
348e(1): push %rsp
348f(7): lea 0x11a2a(%rip),%r8
3496(7): lea 0x119b3(%rip),%rcx
349d(7): lea 0xfffff83c(%rip),%rdi
34a4(6): call 0x218b2e(%rip)
34aa(1): hlt 

"deregister_tm_clones" :
34b0(7): lea 0x218bf1(%rip),%rdi
34b7(1): push %rbp
34b8(7): lea 0x218be9(%rip),%rax
34bf(3): cmp %rdi,%rax
34c2(3): mov %rsp,%rbp
34c5(2): jz 0x1b(%rip)
34c7(7): mov 0x218b02(%rip),%rax
34ce(3): test %rax,%rax
34d1(2): jz 0xf(%rip)
34d3(1): pop %rbp
34d4(2): jmp %rax
34d6(a): nop 0x0(%rax,%rax,1)
34e0(1): pop %rbp
34e1(1): ret near (%rsp)

"register_tm_clones" :
34f0(7): lea 0x218bb1(%rip),%rdi
34f7(7): lea 0x218baa(%rip),%rsi
34fe(1): push %rbp
34ff(3): sub %rdi,%rsi
3502(3): mov %rsp,%rbp
3505(4): sar $0x3,%rsi
3509(3): mov %rsi,%rax
350c(4): shr $0x3f,%rax
3510(3): add %rax,%rsi
3513(3): sar $0x1,%rsi
3516(2): jz 0x1a(%rip)
3518(7): mov 0x218ac9(%rip),%rax
351f(3): test %rax,%rax
3522(2): jz 0xe(%rip)
3524(1): pop %rbp
3525(2): jmp %rax
3527(9): nop 0x0(%rax,%rax,1)
3530(1): pop %rbp
3531(1): ret near (%rsp)

"__do_global_dtors_aux" :
3540(7): cmp $0x0,0x218bc1(%rip)
3547(2): jnz 0x31(%rip)
3549(8): cmp $0x0,0x218a9f(%rip)
3551(1): push %rbp
3552(3): mov %rsp,%rbp
3555(2): jz 0xe(%rip)
3557(7): mov 0x218aaa(%rip),%rdi
355e(5): call 0xfffff72a(%rip)
3563(5): call 0xffffff4d(%rip)
3568(7): mov $0x1,0x218b99(%rip)
356f(1): pop %rbp
3570(1): ret near (%rsp)
3571(7): nop 0x0(%rax)
3578(2): REP ret near (%rsp)

"frame_dummy" :
3580(1): push %rbp
3581(3): mov %rsp,%rbp
3584(1): pop %rbp
3585(5): jmp 0xffffff6b(%rip)

"do_move" :
3590(1): push %rbp
3591(1): push %rbx
3592(3): mov %rdx,%rcx
3595(3): mov %rdx,%rbp
3598(2): xor %edx,%edx
359a(3): mov %rdi,%rbx
359d(4): sub $0x58,%rsp
35a1(5): lea 0xf(%rsp),%r9
35a6(5): lea 0xe(%rsp),%r8
35ab(9): mov $0x28,%rax
35b4(5): mov %rax,0x48(%rsp)
35b9(2): xor %eax,%eax
35bb(5): call 0x6495(%rip)
35c0(2): test %al,%al
35c2(6): jz 0x9e(%rip)
35c8(5): cmp $0x0,0xe(%rsp)
35cd(6): jnz 0xb3(%rip)
35d3(5): cmp $0x1,0xf(%rsp)
35d8(6): jz 0x88(%rip)
35de(3): test %rbx,%rbx
35e1(2): jz 0x7f(%rip)
35e3(7): lea 0x218b26(%rip),%rdi
35ea(5): mov $0x0,0x10(%rsp)
35ef(5): mov $0x1,0x1a(%rsp)
35f4(5): mov $0x1,0x19(%rsp)
35f9(5): mov $0x0,0x18(%rsp)
35fe(8): mov $0x5,0x14(%rsp)
3606(5): mov $0x0,0x29(%rsp)
360b(5): mov $0x0,0x2a(%rsp)
3610(5): mov $0x1,0x2b(%rsp)
3615(5): call 0xb61b(%rip)
361a(3): test %rax,%rax
361d(5): mov %rax,0x20(%rsp)
3622(6): jz 0x86(%rip)
3628(4): movzx 0x2e(%rbp),%eax
362c(5): lea 0x10(%rsp),%rsi
3631(5): lea 0x30(%rsp),%rdi
3636(5): mov $0x0,0x28(%rsp)
363b(5): mov %rbx,0x30(%rsp)
3640(9): mov $0x0,0x38(%rsp)
3649(4): mov %al,0x2a(%rsp)
364d(5): call 0xd03(%rip)
3652(3): lea 0xfffffffe(%rax),%edx
3655(3): cmp $0x2,%edx
3658(2): jnbe 0x31(%rip)
365a(3): cmp $0x4,%eax
365d(3): setnz %al
3660(5): mov 0x48(%rsp),%rcx
3665(9): xor $0x28,%rcx
366e(2): jnz 0x16(%rip)
3670(4): add $0x58,%rsp
3674(1): pop %rbx
3675(1): pop %rbp
3676(1): ret near (%rsp)
3677(9): nop 0x0(%rax,%rax,1)
3680(2): xor %eax,%eax
3682(2): jmp 0xffffffde(%rip)
3684(5): call 0xfffff0fc(%rip)
3689(7): lea 0x123f8(%rip),%rcx
3690(7): lea 0x1186d(%rip),%rsi
3697(7): lea 0x11881(%rip),%rdi
369e(5): mov $0xef,%edx
36a3(5): call 0xfffff17d(%rip)
36a8(7): lea 0x133df(%rip),%rsi
36af(5): mov $0x4,%edi
36b4(5): call 0xb01c(%rip)
36b9(7): lea 0x11a58(%rip),%rsi
36c0(5): mov $0x5,%edx
36c5(2): xor %edi,%edi
36c7(3): mov %rax,%rbp
36ca(5): call 0xfffff066(%rip)
36cf(3): mov %rax,%rbx
36d2(5): call 0xffffeece(%rip)
36d7(2): mov (%rax),%esi
36d9(3): mov %rbp,%rcx
36dc(3): mov %rbx,%rdx
36df(5): mov $0x1,%edi
36e4(2): xor %eax,%eax
36e6(5): call 0xfffff42a(%rip)
36eb(5): nop 0x0(%rax,%rax,1)
36f0(2): push %r12
36f2(1): push %rbp
36f3(3): mov %rcx,%r12
36f6(1): push %rbx
36f7(3): mov %rsi,%rbp
36fa(3): mov %rdi,%rbx
36fd(4): sub $0x10,%rsp
3701(7): cmp $0x0,0x218a18(%rip)
3708(2): jnz 0x68(%rip)
370a(2): test %dl,%dl
370c(2): jnz 0x1c(%rip)
370e(4): add $0x10,%rsp
3712(3): mov %r12,%rdx
3715(3): mov %rbp,%rsi
3718(3): mov %rbx,%rdi
371b(1): pop %rbx
371c(1): pop %rbp
371d(2): pop %r12
371f(5): jmp 0xfffffe71(%rip)
3724(4): nop 0x0(%rax)
3728(3): mov %rbx,%rdi
372b(5): call 0x7995(%rip)
3730(2): xor %edx,%edx
3732(3): mov %rax,%rsi
3735(3): mov %rbp,%rdi
3738(5): call 0x7ea8(%rip)
373d(3): mov %rax,%rbp
3740(3): mov %rax,%rdi
3743(5): call 0x7a2d(%rip)
3748(3): mov %r12,%rdx
374b(3): mov %rbp,%rsi
374e(3): mov %rbx,%rdi
3751(5): call 0xfffffe3f(%rip)
3756(3): mov %rbp,%rdi
3759(2): mov %eax,%ebx
375b(5): call 0xfffff525(%rip)
3760(4): add $0x10,%rsp
3764(2): mov %ebx,%eax
3766(1): pop %rbx
3767(1): pop %rbp
3768(2): pop %r12
376a(1): ret near (%rsp)
376b(5): nop 0x0(%rax,%rax,1)
3770(4): mov %edx,0xc(%rsp)
3774(5): call 0x79fc(%rip)
3779(4): mov 0xc(%rsp),%edx
377d(2): jmp 0xffffff8d(%rip)

"movefile" :
36f0(2): push %r12
36f2(1): push %rbp
36f3(3): mov %rcx,%r12
36f6(1): push %rbx
36f7(3): mov %rsi,%rbp
36fa(3): mov %rdi,%rbx
36fd(4): sub $0x10,%rsp
3701(7): cmp $0x0,0x218a18(%rip)
3708(2): jnz 0x68(%rip)
370a(2): test %dl,%dl
370c(2): jnz 0x1c(%rip)
370e(4): add $0x10,%rsp
3712(3): mov %r12,%rdx
3715(3): mov %rbp,%rsi
3718(3): mov %rbx,%rdi
371b(1): pop %rbx
371c(1): pop %rbp
371d(2): pop %r12
371f(5): jmp 0xfffffe71(%rip)
3724(4): nop 0x0(%rax)
3728(3): mov %rbx,%rdi
372b(5): call 0x7995(%rip)
3730(2): xor %edx,%edx
3732(3): mov %rax,%rsi
3735(3): mov %rbp,%rdi
3738(5): call 0x7ea8(%rip)
373d(3): mov %rax,%rbp
3740(3): mov %rax,%rdi
3743(5): call 0x7a2d(%rip)
3748(3): mov %r12,%rdx
374b(3): mov %rbp,%rsi
374e(3): mov %rbx,%rdi
3751(5): call 0xfffffe3f(%rip)
3756(3): mov %rbp,%rdi
3759(2): mov %eax,%ebx
375b(5): call 0xfffff525(%rip)
3760(4): add $0x10,%rsp
3764(2): mov %ebx,%eax
3766(1): pop %rbx
3767(1): pop %rbp
3768(2): pop %r12
376a(1): ret near (%rsp)
376b(5): nop 0x0(%rax,%rax,1)
3770(4): mov %edx,0xc(%rsp)
3774(5): call 0x79fc(%rip)
3779(4): mov 0xc(%rsp),%edx
377d(2): jmp 0xffffff8d(%rip)

"usage" :
3780(2): push %r13
3782(2): push %r12
3784(5): mov $0x5,%edx
3789(1): push %rbp
378a(1): push %rbx
378b(2): mov %edi,%ebp
378d(7): sub $0x88,%rsp
3794(7): mov 0x218de5(%rip),%rbx
379b(9): mov $0x28,%rax
37a4(5): mov %rax,0x78(%rsp)
37a9(2): xor %eax,%eax
37ab(2): test %edi,%edi
37ad(2): jz 0x30(%rip)
37af(7): lea 0x11982(%rip),%rsi
37b6(2): xor %edi,%edi
37b8(5): call 0xffffef78(%rip)
37bd(7): mov 0x21893c(%rip),%rdi
37c4(3): mov %rax,%rdx
37c7(3): mov %rbx,%rcx
37ca(5): mov $0x1,%esi
37cf(2): xor %eax,%eax
37d1(5): call 0xfffff44f(%rip)
37d6(2): mov %ebp,%edi
37d8(5): call 0xfffff428(%rip)
37dd(7): lea 0x1197c(%rip),%rsi
37e4(2): xor %edi,%edi
37e6(5): call 0xffffef4a(%rip)
37eb(3): mov %rbx,%rcx
37ee(3): mov %rbx,%r8
37f1(3): mov %rbx,%rdx
37f4(3): mov %rax,%rsi
37f7(5): mov $0x1,%edi
37fc(2): xor %eax,%eax
37fe(5): call 0xfffff2b2(%rip)
3803(7): mov 0x2188be(%rip),%rbx
380a(7): lea 0x119cf(%rip),%rsi
3811(5): mov $0x5,%edx
3816(2): xor %edi,%edi
3818(5): call 0xffffef18(%rip)
381d(3): mov %rbx,%rsi
3820(3): mov %rax,%rdi
3823(5): call 0xfffff0cd(%rip)
3828(7): mov 0x218899(%rip),%rbx
382f(7): lea 0x119e2(%rip),%rsi
3836(5): mov $0x5,%edx
383b(2): xor %edi,%edi
383d(5): call 0xffffeef3(%rip)
3842(3): mov %rbx,%rsi
3845(3): mov %rax,%rdi
3848(5): call 0xfffff0a8(%rip)
384d(7): mov 0x218874(%rip),%rbx
3854(7): lea 0x11a0d(%rip),%rsi
385b(5): mov $0x5,%edx
3860(2): xor %edi,%edi
3862(5): call 0xffffeece(%rip)
3867(3): mov %rbx,%rsi
386a(3): mov %rax,%rdi
386d(5): call 0xfffff083(%rip)
3872(7): mov 0x21884f(%rip),%rbx
3879(7): lea 0x11b90(%rip),%rsi
3880(5): mov $0x5,%edx
3885(2): xor %edi,%edi
3887(5): call 0xffffeea9(%rip)
388c(3): mov %rbx,%rsi
388f(3): mov %rax,%rdi
3892(5): call 0xfffff05e(%rip)
3897(7): mov 0x21882a(%rip),%rbx
389e(7): lea 0x11c23(%rip),%rsi
38a5(5): mov $0x5,%edx
38aa(2): xor %edi,%edi
38ac(5): call 0xffffee84(%rip)
38b1(3): mov %rbx,%rsi
38b4(3): mov %rax,%rdi
38b7(5): call 0xfffff039(%rip)
38bc(7): mov 0x218805(%rip),%rbx
38c3(7): lea 0x11e0e(%rip),%rsi
38ca(5): mov $0x5,%edx
38cf(2): xor %edi,%edi
38d1(5): call 0xffffee5f(%rip)
38d6(3): mov %rbx,%rsi
38d9(3): mov %rax,%rdi
38dc(5): call 0xfffff014(%rip)
38e1(7): mov 0x2187e0(%rip),%rbx
38e8(7): lea 0x11e19(%rip),%rsi
38ef(5): mov $0x5,%edx
38f4(2): xor %edi,%edi
38f6(5): call 0xffffee3a(%rip)
38fb(3): mov %rbx,%rsi
38fe(3): mov %rax,%rdi
3901(5): call 0xffffefef(%rip)
3906(7): mov 0x2187bb(%rip),%rbx
390d(7): lea 0x11e2c(%rip),%rsi
3914(5): mov $0x5,%edx
3919(2): xor %edi,%edi
391b(5): call 0xffffee15(%rip)
3920(3): mov %rbx,%rsi
3923(3): mov %rax,%rdi
3926(5): call 0xffffefca(%rip)
392b(7): mov 0x218796(%rip),%rbx
3932(7): lea 0x11ee7(%rip),%rsi
3939(5): mov $0x5,%edx
393e(2): xor %edi,%edi
3940(5): call 0xffffedf0(%rip)
3945(3): mov %rbx,%rsi
3948(3): mov %rax,%rdi
394b(7): lea 0x115e3(%rip),%rbx
3952(5): call 0xffffef9e(%rip)
3957(7): lea 0x115da(%rip),%rax
395e(7): lea 0x11614(%rip),%rcx
3965(9): mov $0x0,0x60(%rsp)
396e(9): mov $0x0,0x68(%rsp)
3977(3): mov %rsp,%rdx
397a(4): mov %rax,(%rsp)
397e(7): lea 0x115b5(%rip),%rax
3985(5): mov %rcx,0x30(%rsp)
398a(7): lea 0x115f2(%rip),%rcx
3991(5): mov %rax,0x8(%rsp)
3996(7): lea 0x11615(%rip),%rax
399d(5): mov %rcx,0x40(%rsp)
39a2(7): lea 0x115e4(%rip),%rcx
39a9(5): mov %rax,0x10(%rsp)
39ae(7): lea 0x11595(%rip),%rax
39b5(5): mov %rcx,0x50(%rsp)
39ba(5): mov %rax,0x18(%rsp)
39bf(7): lea 0x1159a(%rip),%rax
39c6(5): mov %rax,0x20(%rsp)
39cb(7): lea 0x11598(%rip),%rax
39d2(5): mov %rax,0x28(%rsp)
39d7(5): mov %rax,0x38(%rsp)
39dc(5): mov %rax,0x48(%rsp)
39e1(5): mov %rax,0x58(%rsp)
39e6(a): nop 0x0(%rax,%rax,1)
39f0(4): add $0x10,%rdx
39f4(3): mov (%rdx),%rdi
39f7(3): test %rdi,%rdi
39fa(2): jz 0x15(%rip)
39fc(5): mov $0x3,%ecx
3a01(3): mov %rbx,%rsi
3a04(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3a06(3): setnbe %al
3a09(2): sbb $0x0,%al
3a0b(2): test %al,%al
3a0d(2): jnz 0xffffffe3(%rip)
3a0f(4): mov 0x8(%rdx),%r12
3a13(2): xor %edi,%edi
3a15(5): mov $0x5,%edx
3a1a(7): lea 0x11576(%rip),%rsi
3a21(3): test %r12,%r12
3a24(6): jz 0xc7(%rip)
3a2a(5): call 0xffffed06(%rip)
3a2f(7): lea 0x11eca(%rip),%rcx
3a36(7): lea 0x11571(%rip),%rdx
3a3d(3): mov %rax,%rsi
3a40(5): mov $0x1,%edi
3a45(2): xor %eax,%eax
3a47(5): call 0xfffff069(%rip)
3a4c(2): xor %esi,%esi
3a4e(5): mov $0x5,%edi
3a53(5): call 0xfffff04d(%rip)
3a58(3): test %rax,%rax
3a5b(2): jz 0x1e(%rip)
3a5d(7): lea 0x11558(%rip),%rsi
3a64(5): mov $0x3,%edx
3a69(3): mov %rax,%rdi
3a6c(5): call 0xffffeb54(%rip)
3a71(2): test %eax,%eax
3a73(6): jnz 0x10d(%rip)
3a79(7): lea 0x11540(%rip),%rsi
3a80(2): xor %edi,%edi
3a82(5): mov $0x5,%edx
3a87(5): call 0xffffeca9(%rip)
3a8c(7): lea 0x114a2(%rip),%rcx
3a93(7): lea 0x11e66(%rip),%rdx
3a9a(3): mov %rax,%rsi
3a9d(5): mov $0x1,%edi
3aa2(2): xor %eax,%eax
3aa4(5): call 0xfffff00c(%rip)
3aa9(3): cmp %rbx,%r12
3aac(7): lea 0x114a1(%rip),%rcx
3ab3(7): lea 0x12cd2(%rip),%rbx
3aba(4): cmove %rcx,%rbx
3abe(7): lea 0x11eab(%rip),%rsi
3ac5(2): xor %edi,%edi
3ac7(5): mov $0x5,%edx
3acc(5): call 0xffffec64(%rip)
3ad1(3): mov %rbx,%rcx
3ad4(3): mov %rax,%rsi
3ad7(3): mov %r12,%rdx
3ada(5): mov $0x1,%edi
3adf(2): xor %eax,%eax
3ae1(5): call 0xffffefcf(%rip)
3ae6(5): jmp 0xfffffcf0(%rip)
3aeb(5): call 0xffffec45(%rip)
3af0(7): lea 0x11e09(%rip),%rcx
3af7(7): lea 0x114b0(%rip),%rdx
3afe(3): mov %rax,%rsi
3b01(5): mov $0x1,%edi
3b06(2): xor %eax,%eax
3b08(5): call 0xffffefa8(%rip)
3b0d(2): xor %esi,%esi
3b0f(5): mov $0x5,%edi
3b14(5): call 0xffffef8c(%rip)
3b19(3): test %rax,%rax
3b1c(2): jz 0x1a(%rip)
3b1e(7): lea 0x11497(%rip),%rsi
3b25(5): mov $0x3,%edx
3b2a(3): mov %rax,%rdi
3b2d(5): call 0xffffea93(%rip)
3b32(2): test %eax,%eax
3b34(2): jnz 0x45(%rip)
3b36(7): lea 0x11483(%rip),%rsi
3b3d(5): mov $0x5,%edx
3b42(2): xor %edi,%edi
3b44(7): lea 0x113ea(%rip),%r12
3b4b(7): lea 0x11402(%rip),%rbx
3b52(5): call 0xffffebde(%rip)
3b57(7): lea 0x113d7(%rip),%rcx
3b5e(7): lea 0x11d9b(%rip),%rdx
3b65(3): mov %rax,%rsi
3b68(5): mov $0x1,%edi
3b6d(2): xor %eax,%eax
3b6f(5): call 0xffffef41(%rip)
3b74(5): jmp 0xffffff4a(%rip)
3b79(7): lea 0x113b5(%rip),%r12
3b80(7): mov 0x218541(%rip),%r13
3b87(7): lea 0x11d9a(%rip),%rsi
3b8e(2): xor %edi,%edi
3b90(5): mov $0x5,%edx
3b95(5): call 0xffffeb9b(%rip)
3b9a(3): mov %r13,%rsi
3b9d(3): mov %rax,%rdi
3ba0(5): call 0xffffed50(%rip)
3ba5(5): jmp 0xfffffed4(%rip)

"excise" :
3bb0(2): push %r13
3bb2(2): push %r12
3bb4(3): mov %rdx,%r13
3bb7(1): push %rbp
3bb8(1): push %rbx
3bb9(2): xor %edx,%edx
3bbb(3): mov %rdi,%r12
3bbe(3): mov %rsi,%rbx
3bc1(2): mov %ecx,%ebp
3bc3(7): sub $0xa8,%rsp
3bca(4): mov 0x30(%rsi),%rsi
3bce(3): mov 0x2c(%rdi),%edi
3bd1(9): mov $0x28,%rax
3bda(8): mov %rax,0x98(%rsp)
3be2(2): xor %eax,%eax
3be4(2): test %cl,%cl
3be6(3): setnz %dl
3be9(3): shl/sal $0x9,%edx
3bec(5): call 0xffffea34(%rip)
3bf1(2): test %eax,%eax
3bf3(2): jnz 0x3d(%rip)
3bf5(5): cmp $0x0,0x1a(%r13)
3bfa(5): mov $0x2,%eax
3bff(6): jnz 0xe9(%rip)
3c05(8): mov 0x98(%rsp),%rcx
3c0d(9): xor $0x28,%rcx
3c16(6): jnz 0x1e2(%rip)
3c1c(7): add $0xa8,%rsp
3c23(1): pop %rbx
3c24(1): pop %rbp
3c25(2): pop %r12
3c27(2): pop %r13
3c29(1): ret near (%rsp)
3c2a(6): nop 0x0(%rax,%rax,1)
3c30(5): call 0xffffe970(%rip)
3c35(2): mov (%rax),%edx
3c37(3): mov %rax,%rbp
3c3a(3): cmp $0x1e,%edx
3c3d(6): jz 0xfb(%rip)
3c43(5): cmp $0x0,0x0(%r13)
3c48(2): jz 0x28(%rip)
3c4a(3): cmp $0x14,%edx
3c4d(6): jz 0x16c(%rip)
3c53(6): jle 0x15d(%rip)
3c59(3): cmp $0x16,%edx
3c5c(6): jz 0x15d(%rip)
3c62(3): cmp $0x54,%edx
3c65(6): jz 0x154(%rip)
3c6b(5): nop 0x0(%rax,%rax,1)
3c70(5): cmp $0x4,0x70(%rbx)
3c75(6): jz 0xfb(%rip)
3c7b(4): mov 0x38(%rbx),%rsi
3c7f(5): mov $0x4,%edi
3c84(5): call 0xaa4c(%rip)
3c89(7): lea 0x11e27(%rip),%rsi
3c90(2): xor %edi,%edi
3c92(5): mov $0x5,%edx
3c97(3): mov %rax,%r12
3c9a(5): call 0xffffea96(%rip)
3c9f(3): mov 0x0(%rbp),%esi
3ca2(3): mov %rax,%rdx
3ca5(2): xor %edi,%edi
3ca7(2): xor %eax,%eax
3ca9(3): mov %r12,%rcx
3cac(5): call 0xffffee64(%rip)
3cb1(4): mov 0x8(%rbx),%rax
3cb5(5): cmp $0x0,0x58(%rax)
3cba(2): jns 0x19(%rip)
3cbc(2): jmp 0x1e(%rip)
3cbe(2): nop 
3cc0(8): mov $0x1,0x20(%rax)
3cc8(4): mov 0x8(%rax),%rax
3ccc(5): cmp $0x0,0x58(%rax)
3cd1(2): js 0x9(%rip)
3cd3(5): cmp $0x0,0x20(%rax)
3cd8(2): jz 0xffffffe8(%rip)
3cda(5): mov $0x4,%eax
3cdf(5): jmp 0xffffff26(%rip)
3ce4(4): nop 0x0(%rax)
3ce8(4): mov 0x38(%rbx),%rsi
3cec(5): mov $0x4,%edi
3cf1(5): call 0xa9df(%rip)
3cf6(3): test %bpl,%bpl
3cf9(3): mov %rax,%rbx
3cfc(5): mov $0x5,%edx
3d01(6): jz 0xc7(%rip)
3d07(7): lea 0x11d87(%rip),%rsi
3d0e(2): xor %edi,%edi
3d10(5): call 0xffffea20(%rip)
3d15(3): mov %rax,%rsi
3d18(3): mov %rbx,%rdx
3d1b(5): mov $0x1,%edi
3d20(2): xor %eax,%eax
3d22(5): call 0xffffed8e(%rip)
3d27(5): mov $0x2,%eax
3d2c(5): jmp 0xfffffed9(%rip)
3d31(7): nop 0x0(%rax)
3d38(4): mov 0x30(%rbx),%rdx
3d3c(5): mov 0x2c(%r12),%esi
3d41(3): mov %rsp,%rcx
3d44(6): mov $0x100,%r8d
3d4a(5): mov $0x1,%edi
3d4f(5): call 0xffffea71(%rip)
3d54(2): test %eax,%eax
3d56(2): jz 0xa(%rip)
3d58(3): mov 0x0(%rbp),%edx
3d5b(3): cmp $0x2,%edx
3d5e(2): jz 0x7d(%rip)
3d60(7): mov $0x1e,0x0(%rbp)
3d67(5): jmp 0xffffff14(%rip)
3d6c(4): nop 0x0(%rax)
3d70(3): cmp $0x27,%edx
3d73(6): jnbe 0xffffff08(%rip)
3d79(a): mov $0x549759090688,%rax
3d83(4): bt %rdx,%rax
3d87(6): jnb 0xfffffef4(%rip)
3d8d(3): mov 0x40(%rbx),%eax
3d90(3): cmp $0x1,%eax
3d93(2): jz 0xb(%rip)
3d95(3): cmp $0xd,%eax
3d98(6): jnz 0xfffffee3(%rip)
3d9e(3): mov %eax,0x0(%rbp)
3da1(5): jmp 0xfffffeda(%rip)
3da6(a): nop 0x0(%rax,%rax,1)
3db0(3): cmp $0x2,%edx
3db3(6): jnz 0xfffffebd(%rip)
3db9(5): mov $0x2,%eax
3dbe(5): jmp 0xfffffe47(%rip)
3dc3(5): nop 0x0(%rax,%rax,1)
3dc8(7): lea 0x11cdc(%rip),%rsi
3dcf(2): xor %edi,%edi
3dd1(5): call 0xffffe95f(%rip)
3dd6(5): jmp 0xffffff3f(%rip)
3ddb(5): cmp $0x0,0x0(%r13)
3de0(5): mov $0x2,%eax
3de5(6): jnz 0xfffffe20(%rip)
3deb(5): cmp $0x4,0x70(%rbx)
3df0(6): jnz 0xfffffe8b(%rip)
3df6(2): jmp 0xffffff83(%rip)
3df8(5): call 0xffffe988(%rip)

"cache_fstatat.constprop.3" :
3e00(1): push %rbx
3e01(4): mov 0x30(%rdx),%rax
3e05(3): mov %rdx,%rbx
3e08(4): cmp $0xffffffff,%rax
3e0c(2): jz 0x14(%rip)
3e0e(3): test %rax,%rax
3e11(2): js 0x55(%rip)
3e13(2): xor %eax,%eax
3e15(1): pop %rbx
3e16(1): ret near (%rsp)
3e17(9): nop 0x0(%rax,%rax,1)
3e20(3): mov %rdx,%rcx
3e23(6): mov $0x100,%r8d
3e29(3): mov %rsi,%rdx
3e2c(2): mov %edi,%esi
3e2e(5): mov $0x1,%edi
3e33(5): call 0xffffe98d(%rip)
3e38(2): test %eax,%eax
3e3a(2): jz 0x26(%rip)
3e3c(8): mov $0xfffffffe,0x30(%rbx)
3e44(5): call 0xffffe75c(%rip)
3e49(3): movsxd (%rax),%rdx
3e4c(4): mov %rdx,0x8(%rbx)
3e50(2): mov %edx,(%rax)
3e52(5): mov $0xffffffff,%eax
3e57(1): pop %rbx
3e58(1): ret near (%rsp)
3e59(7): nop 0x0(%rax)
3e60(4): mov 0x30(%rbx),%rax
3e64(2): jmp 0xffffffaa(%rip)
3e66(5): call 0xffffe73a(%rip)
3e6b(4): mov 0x8(%rbx),%rdx
3e6f(2): jmp 0xffffffe1(%rip)

"prompt" :
3e80(2): push %r15
3e82(2): push %r14
3e84(2): push %r13
3e86(2): push %r12
3e88(3): mov %rcx,%r13
3e8b(1): push %rbp
3e8c(1): push %rbx
3e8d(3): mov %rsi,%rbx
3e90(7): sub $0xc8,%rsp
3e97(3): mov 0x2c(%rdi),%edi
3e9a(4): mov 0x30(%rsi),%r15
3e9e(9): mov $0x28,%rax
3ea7(8): mov %rax,0xb8(%rsp)
3eaf(2): xor %eax,%eax
3eb1(4): mov 0x38(%rsi),%rax
3eb5(3): test %r9,%r9
3eb8(5): mov %r8d,0x14(%rsp)
3ebd(4): mov %edi,0x10(%rsp)
3ec1(5): mov %rax,0x8(%rsp)
3ec6(6): jz 0x1ea(%rip)
3ecc(2): xor %ebp,%ebp
3ece(2): test %dl,%dl
3ed0(7): mov $0x2,(%r9)
3ed7(4): setnz %bpl
3edb(5): mov $0x30900,%edx
3ee0(2): xor %eax,%eax
3ee2(3): mov %r15,%rsi
3ee5(3): mov %r9,%r12
3ee8(9): mov $0xffffffff,0x50(%rsp)
3ef1(3): shl/sal $0x2,%ebp
3ef4(5): call 0xffffe87c(%rip)
3ef9(2): test %eax,%eax
3efb(2): js 0x6a(%rip)
3efd(2): mov %eax,%edi
3eff(4): mov %eax,0x18(%rsp)
3f03(5): call 0xffffec7d(%rip)
3f08(3): test %rax,%rax
3f0b(3): mov %rax,%r14
3f0e(4): mov 0x18(%rsp),%edx
3f12(6): jz 0x25e(%rip)
3f18(5): call 0xffffe688(%rip)
3f1d(5): mov %rax,0x18(%rsp)
3f22(6): mov $0x0,(%rax)
3f28(8): nop 0x0(%rax,%rax,1)
3f30(3): mov %r14,%rdi
3f33(5): call 0xffffeabd(%rip)
3f38(3): test %rax,%rax
3f3b(6): jz 0x24d(%rip)
3f41(4): cmp $0x2e,0x13(%rax)
3f45(2): jnz 0x18(%rip)
3f47(2): xor %edx,%edx
3f49(4): cmp $0x2e,0x14(%rax)
3f4d(3): setz %dl
3f50(5): movzx 0x14(%rax,%rdx,1),%eax
3f55(2): test %al,%al
3f57(2): jz 0xffffffd9(%rip)
3f59(2): cmp $0x2f,%al
3f5b(2): jz 0xffffffd5(%rip)
3f5d(3): mov %r14,%rdi
3f60(5): call 0xffffe940(%rip)
3f65(3): xor %r14d,%r14d
3f68(5): mov $0x3,%eax
3f6d(4): mov %eax,(%r12)
3f71(5): cmp $0x0,0x20(%rbx)
3f76(6): jnz 0x12a(%rip)
3f7c(4): mov 0x4(%r13),%eax
3f80(3): cmp $0x5,%eax
3f83(2): jz 0x2f(%rip)
3f85(5): cmp $0x0,0x0(%r13)
3f8a(2): jnz 0x1f(%rip)
3f8c(3): cmp $0x3,%eax
3f8f(2): jz 0x9(%rip)
3f91(5): cmp $0x0,0x19(%r13)
3f96(2): jz 0x1c(%rip)
3f98(5): call 0xcce8(%rip)
3f9d(2): test %al,%al
3f9f(6): jz 0x2c9(%rip)
3fa5(4): mov 0x4(%r13),%eax
3fa9(3): cmp $0x3,%eax
3fac(6): jz 0x134(%rip)
3fb2(5): mov $0x2,%eax
3fb7(8): mov 0xb8(%rsp),%rcx
3fbf(9): xor $0x28,%rcx
3fc8(6): jnz 0x37b(%rip)
3fce(7): add $0xc8,%rsp
3fd5(1): pop %rbx
3fd6(1): pop %rbp
3fd7(2): pop %r12
3fd9(2): pop %r13
3fdb(2): pop %r14
3fdd(2): pop %r15
3fdf(1): ret near (%rsp)
3fe0(5): lea 0x20(%rsp),%rbx
3fe5(4): mov 0x10(%rsp),%edi
3fe9(3): mov %r15,%rsi
3fec(3): mov %rbx,%rdx
3fef(5): call 0xfffffe11(%rip)
3ff4(2): test %eax,%eax
3ff6(6): jnz 0x1ca(%rip)
3ffc(4): mov 0x38(%rsp),%eax
4000(5): and $0xf000,%eax
4005(5): cmp $0xa000,%eax
400a(6): jz 0x24a(%rip)
4010(5): cmp $0x4000,%eax
4015(6): jz 0xdf(%rip)
401b(5): mov 0x8(%rsp),%rsi
4020(5): mov $0x4,%edi
4025(5): call 0xa6ab(%rip)
402a(3): mov %rax,%rbp
402d(4): mov 0x10(%rsp),%edi
4031(3): mov %rbx,%rdx
4034(3): mov %r15,%rsi
4037(5): call 0xfffffdc9(%rip)
403c(2): test %eax,%eax
403e(6): jnz 0x2b2(%rip)
4044(3): mov %rbx,%rdi
4047(5): call 0x7309(%rip)
404c(3): test %r12d,%r12d
404f(3): mov %rax,%r13
4052(7): mov 0x218527(%rip),%rbx
4059(5): mov $0x5,%edx
405e(6): jz 0x27a(%rip)
4064(7): lea 0x11b25(%rip),%rsi
406b(2): xor %edi,%edi
406d(5): call 0xffffe6c3(%rip)
4072(7): mov 0x218087(%rip),%rdi
4079(3): mov %rax,%rdx
407c(3): mov %rbp,%r9
407f(3): mov %r13,%r8
4082(3): mov %rbx,%rcx
4085(5): mov $0x1,%esi
408a(2): xor %eax,%eax
408c(5): call 0xffffeb94(%rip)
4091(5): call 0xcf3f(%rip)
4096(2): test %al,%al
4098(6): jnz 0xffffff1a(%rip)
409e(2): nop 
40a0(5): mov $0x3,%eax
40a5(5): jmp 0xffffff12(%rip)
40aa(6): nop 0x0(%rax,%rax,1)
40b0(3): cmp $0x1,%dl
40b3(3): mov %edx,%r14d
40b6(5): mov $0x0,%eax
40bb(2): sbb %ebp,%ebp
40bd(9): mov $0xffffffff,0x50(%rsp)
40c6(2): not %ebp
40c8(3): and $0x4,%ebp
40cb(2): test %dl,%dl
40cd(4): cmovne %eax,%r14d
40d1(5): jmp 0xfffffea0(%rip)
40d6(a): nop 0x0(%rax,%rax,1)
40e0(3): xor %r12d,%r12d
40e3(2): test %ebp,%ebp
40e5(6): jz 0xfffffefb(%rip)
40eb(3): cmp $0x4,%ebp
40ee(6): jnz 0x14a(%rip)
40f4(5): cmp $0x0,0x9(%r13)
40f9(6): jz 0x117(%rip)
40ff(5): mov 0x8(%rsp),%rsi
4104(5): mov $0x4,%edi
4109(5): call 0xa5c7(%rip)
410e(5): cmp $0x2,0x14(%rsp)
4113(3): mov %rax,%rbp
4116(6): jnz 0x134(%rip)
411c(3): test %r14b,%r14b
411f(6): jnz 0x12b(%rip)
4125(3): test %r12d,%r12d
4128(7): mov 0x218451(%rip),%rbx
412f(5): mov $0x5,%edx
4134(6): jz 0x1fc(%rip)
413a(7): lea 0x119ff(%rip),%rsi
4141(2): xor %edi,%edi
4143(5): call 0xffffe5ed(%rip)
4148(7): mov 0x217fb1(%rip),%rdi
414f(3): mov %rax,%rdx
4152(3): mov %rbp,%r8
4155(3): mov %rbx,%rcx
4158(5): mov $0x1,%esi
415d(2): xor %eax,%eax
415f(5): call 0xffffeac1(%rip)
4164(5): jmp 0xffffff2d(%rip)
4169(7): nop 0x0(%rax)
4170(2): mov %edx,%edi
4172(5): call 0xffffe6fe(%rip)
4177(5): mov $0x3,%eax
417c(5): jmp 0xfffffdf1(%rip)
4181(7): nop 0x0(%rax)
4188(5): mov 0x18(%rsp),%rax
418d(3): mov %r14,%rdi
4190(2): mov (%rax),%edx
4192(4): mov %edx,0x18(%rsp)
4196(5): call 0xffffe70a(%rip)
419b(4): mov 0x18(%rsp),%edx
419f(2): test %edx,%edx
41a1(6): jnz 0xfffffdc4(%rip)
41a7(6): mov $0x1,%r14d
41ad(5): mov $0x4,%eax
41b2(5): jmp 0xfffffdbb(%rip)
41b7(9): nop 0x0(%rax,%rax,1)
41c0(5): call 0xffffe3e0(%rip)
41c5(2): mov (%rax),%ebx
41c7(5): mov 0x8(%rsp),%rsi
41cc(5): mov $0x4,%edi
41d1(5): call 0xa4ff(%rip)
41d6(3): mov %rax,%rbp
41d9(7): lea 0x118d7(%rip),%rsi
41e0(5): mov $0x5,%edx
41e5(2): xor %edi,%edi
41e7(5): call 0xffffe549(%rip)
41ec(3): mov %rbp,%rcx
41ef(3): mov %rax,%rdx
41f2(2): mov %ebx,%esi
41f4(2): xor %eax,%eax
41f6(2): xor %edi,%edi
41f8(5): call 0xffffe918(%rip)
41fd(5): mov $0x4,%eax
4202(5): jmp 0xfffffdb5(%rip)
4207(9): nop 0x0(%rax,%rax,1)
4210(5): cmp $0x0,0xa(%r13)
4215(2): jz 0x7(%rip)
4217(3): test %r14b,%r14b
421a(2): jnz 0x1e(%rip)
421c(5): mov 0x8(%rsp),%rsi
4221(5): mov $0x4,%edi
4226(5): mov $0x15,%ebx
422b(5): call 0xa4a5(%rip)
4230(3): mov %rax,%rbp
4233(2): jmp 0xffffffa6(%rip)
4235(3): nop (%rax)
4238(5): mov 0x8(%rsp),%rsi
423d(5): mov $0x4,%edi
4242(5): call 0xa48e(%rip)
4247(3): mov %rax,%rbp
424a(5): lea 0x20(%rsp),%rbx
424f(5): jmp 0xfffffdde(%rip)
4254(5): cmp $0x3,0x4(%r13)
4259(6): jnz 0xfffffd59(%rip)
425f(5): jmp 0xfffffdbc(%rip)
4264(4): nop 0x0(%rax)
4268(5): lea 0x20(%rsp),%rbx
426d(4): mov 0x10(%rsp),%edi
4271(3): mov %r15,%rsi
4274(3): mov %rbx,%rdx
4277(5): call 0xfffffb89(%rip)
427c(2): test %eax,%eax
427e(6): jnz 0xffffff42(%rip)
4284(4): mov 0x38(%rsp),%eax
4288(5): and $0xf000,%eax
428d(5): cmp $0xa000,%eax
4292(6): jz 0xfffffd13(%rip)
4298(4): mov 0x10(%rsp),%edi
429c(5): mov $0x200,%ecx
42a1(5): mov $0x2,%edx
42a6(3): mov %r15,%rsi
42a9(5): call 0xffffe3a7(%rip)
42ae(2): test %eax,%eax
42b0(6): jz 0xfffffcf5(%rip)
42b6(5): call 0xffffe2ea(%rip)
42bb(2): mov (%rax),%ebx
42bd(6): mov $0x1,%r12d
42c3(3): cmp $0xd,%ebx
42c6(6): jz 0xfffffe1d(%rip)
42cc(5): jmp 0xfffffefb(%rip)
42d1(7): nop 0x0(%rax)
42d8(7): lea 0x117e9(%rip),%rsi
42df(2): xor %edi,%edi
42e1(5): call 0xffffe44f(%rip)
42e6(5): jmp 0xfffffd8c(%rip)
42eb(5): nop 0x0(%rax,%rax,1)
42f0(7): lea 0x117c0(%rip),%rsi
42f7(5): mov $0x5,%edx
42fc(2): xor %edi,%edi
42fe(5): call 0xffffe432(%rip)
4303(3): mov %rax,%rbx
4306(5): call 0xffffe29a(%rip)
430b(2): mov (%rax),%esi
430d(3): mov %rbp,%rcx
4310(2): xor %eax,%eax
4312(3): mov %rbx,%rdx
4315(2): xor %edi,%edi
4317(5): call 0xffffe7f9(%rip)
431c(5): mov $0x4,%eax
4321(5): jmp 0xfffffc96(%rip)
4326(a): nop 0x0(%rax,%rax,1)
4330(7): lea 0x11839(%rip),%rsi
4337(2): xor %edi,%edi
4339(5): call 0xffffe3f7(%rip)
433e(5): jmp 0xfffffe0a(%rip)
4343(5): call 0xffffe43d(%rip)

"rm" :
4350(2): push %r15
4352(2): push %r14
4354(2): push %r13
4356(2): push %r12
4358(1): push %rbp
4359(1): push %rbx
435a(7): sub $0xd8,%rsp
4361(9): mov $0x28,%rax
436a(8): mov %rax,0xc8(%rsp)
4372(2): xor %eax,%eax
4374(4): cmp $0x0,(%rdi)
4378(6): jz 0x770(%rip)
437e(4): cmp $0x1,0x8(%rsi)
4382(3): mov %rsi,%r13
4385(7): lea 0x11a9c(%rip),%r12
438c(5): mov $0x2,%ebp
4391(2): sbb %esi,%esi
4393(2): xor %edx,%edx
4395(3): and $0xc0,%esi
4398(6): add $0x258,%esi
439e(5): call 0xcbb2(%rip)
43a3(3): mov %rax,%rbx
43a6(5): lea 0x2c(%rsp),%rax
43ab(5): mov %rax,0x10(%rsp)
43b0(5): lea 0x30(%rsp),%rax
43b5(5): mov %rax,0x18(%rsp)
43ba(6): nop 0x0(%rax,%rax,1)
43c0(3): mov %rbx,%rdi
43c3(5): call 0xe89d(%rip)
43c8(3): test %rax,%rax
43cb(3): mov %rax,%r15
43ce(6): jz 0x8c(%rip)
43d4(4): movzx 0x70(%rax),%edx
43d8(4): cmp $0xd,%dx
43dc(6): jnbe 0x75b(%rip)
43e2(3): movzx %dx,%eax
43e5(4): movsxd 0x0(%r12,%rax,4),%rax
43e9(3): add %r12,%rax
43ec(2): jmp %rax
43ee(2): nop 
43f0(4): mov 0x38(%r15),%rdx
43f4(5): mov $0x3,%esi
43f9(2): xor %edi,%edi
43fb(5): call 0xa3d5(%rip)
4400(7): lea 0x116e7(%rip),%rsi
4407(5): mov $0x5,%edx
440c(2): xor %edi,%edi
440e(3): mov %rax,%rbp
4411(5): call 0xffffe31f(%rip)
4416(4): mov 0x40(%r15),%esi
441a(3): mov %rbp,%rcx
441d(3): mov %rax,%rdx
4420(2): xor %edi,%edi
4422(2): xor %eax,%eax
4424(5): call 0xffffe6ec(%rip)
4429(3): mov %r15,%rsi
442c(5): mov $0x4,%edx
4431(3): mov %rbx,%rdi
4434(5): call 0xefac(%rip)
4439(3): mov %rbx,%rdi
443c(5): mov $0x4,%ebp
4441(5): call 0xe81f(%rip)
4446(3): mov %rbx,%rdi
4449(5): call 0xe817(%rip)
444e(3): test %rax,%rax
4451(3): mov %rax,%r15
4454(6): jnz 0xffffff80(%rip)
445a(5): call 0xffffe146(%rip)
445f(3): mov %rax,%r12
4462(2): mov (%rax),%eax
4464(2): test %eax,%eax
4466(6): jnz 0x512(%rip)
446c(3): mov %rbx,%rdi
446f(5): call 0xe661(%rip)
4474(2): test %eax,%eax
4476(6): jnz 0x53a(%rip)
447c(8): mov 0xc8(%rsp),%rbx
4484(9): xor $0x28,%rbx
448d(2): mov %ebp,%eax
448f(6): jnz 0x711(%rip)
4495(7): add $0xd8,%rsp
449c(1): pop %rbx
449d(1): pop %rbp
449e(2): pop %r12
44a0(2): pop %r13
44a2(2): pop %r14
44a4(2): pop %r15
44a6(1): ret near (%rsp)
44a7(9): nop 0x0(%rax,%rax,1)
44b0(4): cmp $0x6,%dx
44b4(2): jnz 0x24(%rip)
44b6(5): cmp $0x0,0x8(%r13)
44bb(2): jz 0x1d(%rip)
44bd(5): cmp $0x0,0x58(%r15)
44c2(2): jle 0x16(%rip)
44c4(4): mov 0x18(%rbx),%rax
44c8(4): cmp %rax,0x78(%r15)
44cc(6): jnz 0x5ac(%rip)
44d2(6): nop 0x0(%rax,%rax,1)
44d8(3): and $0xfd,%edx
44db(3): xor %r14d,%r14d
44de(3): mov %r13,%rcx
44e1(4): cmp $0x4,%dx
44e5(6): mov $0x3,%r8d
44eb(3): mov %r15,%rsi
44ee(4): setz %r14b
44f2(3): mov %rbx,%rdi
44f5(3): xor %r9d,%r9d
44f8(3): mov %r14d,%edx
44fb(5): call 0xfffff985(%rip)
4500(3): cmp $0x2,%eax
4503(2): mov %eax,%ecx
4505(6): jz 0x263(%rip)
450b(3): lea 0xfffffffe(%rcx),%eax
450e(3): cmp $0x2,%eax
4511(6): jnbe 0x670(%rip)
4517(3): cmp $0x4,%ecx
451a(6): jz 0x68b(%rip)
4520(3): cmp $0x3,%ecx
4523(6): jnz 0xfffffe9d(%rip)
4529(3): cmp $0x2,%ebp
452c(5): mov $0x3,%eax
4531(3): cmove %eax,%ebp
4534(5): jmp 0xfffffe8c(%rip)
4539(7): nop 0x0(%rax)
4540(4): mov 0x38(%r15),%rdx
4544(5): mov $0x3,%esi
4549(2): xor %edi,%edi
454b(5): call 0xa285(%rip)
4550(7): lea 0x11791(%rip),%rsi
4557(3): mov %rax,%rbp
455a(5): mov $0x5,%edx
455f(2): xor %edi,%edi
4561(5): call 0xffffe1cf(%rip)
4566(3): mov %rbp,%rcx
4569(3): mov %rax,%rdx
456c(2): xor %esi,%esi
456e(5): jmp 0xfffffeb2(%rip)
4573(5): nop 0x0(%rax,%rax,1)
4578(5): cmp $0x0,0x9(%r13)
457d(6): jnz 0xbb(%rip)
4583(5): cmp $0x0,0xa(%r13)
4588(6): jz 0x168(%rip)
458e(4): mov 0x30(%r15),%rsi
4592(3): mov 0x2c(%rbx),%edi
4595(2): xor %eax,%eax
4597(5): mov $0x30900,%edx
459c(5): call 0xffffe1d4(%rip)
45a1(2): test %eax,%eax
45a3(2): js 0x5e(%rip)
45a5(2): mov %eax,%edi
45a7(4): mov %eax,0x8(%rsp)
45ab(5): call 0xffffe5d5(%rip)
45b0(3): test %rax,%rax
45b3(3): mov %rax,%r14
45b6(4): mov 0x8(%rsp),%edx
45ba(6): jz 0x538(%rip)
45c0(5): call 0xffffdfe0(%rip)
45c5(5): mov %rax,0x8(%rsp)
45ca(6): mov $0x0,(%rax)
45d0(3): mov %r14,%rdi
45d3(5): call 0xffffe41d(%rip)
45d8(3): test %rax,%rax
45db(2): jz 0x3b(%rip)
45dd(4): cmp $0x2e,0x13(%rax)
45e1(2): jnz 0x18(%rip)
45e3(2): xor %edx,%edx
45e5(4): cmp $0x2e,0x14(%rax)
45e9(3): setz %dl
45ec(5): movzx 0x14(%rax,%rdx,1),%eax
45f1(2): test %al,%al
45f3(2): jz 0xffffffdd(%rip)
45f5(2): cmp $0x2f,%al
45f7(2): jz 0xffffffd9(%rip)
45f9(3): mov %r14,%rdi
45fc(5): call 0xffffe2a4(%rip)
4601(5): cmp $0x0,0xa(%r13)
4606(6): jz 0xea(%rip)
460c(5): mov $0x27,%ebp
4611(5): jmp 0xe4(%rip)
4616(5): mov 0x8(%rsp),%rax
461b(3): mov %r14,%rdi
461e(2): mov (%rax),%edx
4620(4): mov %edx,0x8(%rsp)
4624(5): call 0xffffe27c(%rip)
4629(4): mov 0x8(%rsp),%edx
462d(2): test %edx,%edx
462f(2): jnz 0xffffffd2(%rip)
4631(7): nop 0x0(%rax)
4638(5): cmp $0x0,0x58(%r15)
463d(2): jnz 0x3b(%rip)
463f(4): mov 0x30(%r15),%r14
4643(3): mov %r14,%rdi
4646(5): call 0x6a7a(%rip)
464b(3): cmp $0x2e,(%rax)
464e(6): jz 0x182(%rip)
4654(4): mov 0x10(%r13),%rax
4658(3): test %rax,%rax
465b(2): jz 0x12(%rip)
465d(3): mov (%rax),%rcx
4660(7): cmp %rcx,0x80(%r15)
4667(6): jz 0x379(%rip)
466d(5): cmp $0x0,0x18(%r13)
4672(6): jnz 0x1f6(%rip)
4678(5): mov 0x10(%rsp),%r9
467d(3): mov %r13,%rcx
4680(6): mov $0x2,%r8d
4686(5): mov $0x1,%edx
468b(3): mov %r15,%rsi
468e(3): mov %rbx,%rdi
4691(5): call 0xfffff7ef(%rip)
4696(3): cmp $0x2,%eax
4699(2): mov %eax,%ecx
469b(6): jz 0xe5(%rip)
46a1(4): mov 0x8(%r15),%rax
46a5(5): cmp $0x0,0x58(%rax)
46aa(2): jns 0x19(%rip)
46ac(2): jmp 0x1e(%rip)
46ae(2): nop 
46b0(8): mov $0x1,0x20(%rax)
46b8(4): mov 0x8(%rax),%rax
46bc(5): cmp $0x0,0x58(%rax)
46c1(2): js 0x9(%rip)
46c3(5): cmp $0x0,0x20(%rax)
46c8(2): jz 0xffffffe8(%rip)
46ca(5): mov $0x4,%edx
46cf(3): mov %r15,%rsi
46d2(3): mov %rbx,%rdi
46d5(4): mov %ecx,0x8(%rsp)
46d9(5): call 0xed07(%rip)
46de(3): mov %rbx,%rdi
46e1(5): call 0xe57f(%rip)
46e6(4): mov 0x8(%rsp),%ecx
46ea(5): jmp 0xfffffe21(%rip)
46ef(1): nop 
46f0(5): mov $0x15,%ebp
46f5(4): mov 0x38(%r15),%rsi
46f9(5): mov $0x4,%edi
46fe(5): call 0x9fd2(%rip)
4703(7): lea 0x113ad(%rip),%rsi
470a(2): xor %edi,%edi
470c(3): mov %rax,%r14
470f(5): mov $0x5,%edx
4714(5): call 0xffffe01c(%rip)
4719(2): xor %edi,%edi
471b(3): mov %rax,%rdx
471e(3): mov %r14,%rcx
4721(2): xor %eax,%eax
4723(2): mov %ebp,%esi
4725(5): call 0xffffe3eb(%rip)
472a(4): mov 0x8(%r15),%rax
472e(5): cmp $0x0,0x58(%rax)
4733(2): jns 0x24(%rip)
4735(5): jmp 0xfffffcf4(%rip)
473a(6): nop 0x0(%rax,%rax,1)
4740(8): mov $0x1,0x20(%rax)
4748(4): mov 0x8(%rax),%rax
474c(5): cmp $0x0,0x58(%rax)
4751(6): js 0xfffffcd8(%rip)
4757(5): cmp $0x0,0x20(%rax)
475c(2): jz 0xffffffe4(%rip)
475e(5): jmp 0xfffffccb(%rip)
4763(5): nop 0x0(%rax,%rax,1)
4768(3): mov %r14d,%ecx
476b(3): mov %r13,%rdx
476e(3): mov %r15,%rsi
4771(3): mov %rbx,%rdi
4774(5): call 0xfffff43c(%rip)
4779(2): mov %eax,%ecx
477b(5): jmp 0xfffffd90(%rip)
4780(5): cmp $0x4,0x2c(%rsp)
4785(6): jnz 0xfffffc3b(%rip)
478b(5): mov $0x1,%ecx
4790(3): mov %r13,%rdx
4793(3): mov %r15,%rsi
4796(3): mov %rbx,%rdi
4799(5): call 0xfffff417(%rip)
479e(5): mov $0x4,%edx
47a3(3): mov %r15,%rsi
47a6(3): mov %rbx,%rdi
47a9(4): mov %eax,0x8(%rsp)
47ad(5): call 0xec33(%rip)
47b2(3): mov %rbx,%rdi
47b5(5): call 0xe4ab(%rip)
47ba(4): mov 0x8(%rsp),%ecx
47be(3): cmp $0x2,%ecx
47c1(6): jz 0xfffffbff(%rip)
47c7(5): jmp 0xfffffeda(%rip)
47cc(4): nop 0x0(%rax)
47d0(2): xor %edx,%edx
47d2(4): cmp $0x2e,0x1(%rax)
47d6(3): setz %dl
47d9(5): movzx 0x1(%rax,%rdx,1),%eax
47de(2): test %al,%al
47e0(2): jz 0xa(%rip)
47e2(2): cmp $0x2f,%al
47e4(6): jnz 0xfffffe70(%rip)
47ea(4): mov 0x38(%r15),%rdx
47ee(5): mov $0x4,%esi
47f3(5): mov $0x2,%edi
47f8(5): call 0x9db8(%rip)
47fd(7): lea 0x112e7(%rip),%rdx
4804(5): mov $0x4,%esi
4809(5): mov $0x1,%edi
480e(3): mov %rax,%rbp
4811(5): call 0x9d9f(%rip)
4816(7): lea 0x112cf(%rip),%rdx
481d(2): xor %edi,%edi
481f(5): mov $0x4,%esi
4824(3): mov %rax,%r14
4827(5): call 0x9d89(%rip)
482c(7): lea 0x11385(%rip),%rsi
4833(2): xor %edi,%edi
4835(5): mov $0x5,%edx
483a(5): mov %rax,0x8(%rsp)
483f(5): call 0xffffdef1(%rip)
4844(5): mov 0x8(%rsp),%rcx
4849(3): mov %rax,%rdx
484c(3): mov %rbp,%r9
484f(3): mov %r14,%r8
4852(2): xor %esi,%esi
4854(2): xor %edi,%edi
4856(2): xor %eax,%eax
4858(5): call 0xffffe2b8(%rip)
485d(5): jmp 0xfffffbcc(%rip)
4862(6): nop 0x0(%rax,%rax,1)
4868(7): lea 0x1127c(%rip),%rsi
486f(2): xor %edx,%edx
4871(3): mov %r14,%rdi
4874(5): call 0x6d6c(%rip)
4879(3): test %rax,%rax
487c(3): mov %rax,%r14
487f(2): jz 0x18(%rip)
4881(5): mov 0x18(%rsp),%rdx
4886(3): mov %rax,%rsi
4889(5): mov $0x1,%edi
488e(5): call 0xffffded2(%rip)
4893(2): test %eax,%eax
4895(2): jz 0x6b(%rip)
4897(4): mov 0x30(%r15),%rdx
489b(5): mov $0x4,%esi
48a0(5): mov $0x1,%edi
48a5(5): call 0x9d0b(%rip)
48aa(3): mov %r14,%rdx
48ad(2): xor %edi,%edi
48af(5): mov $0x4,%esi
48b4(3): mov %rax,%rbp
48b7(5): call 0x9cf9(%rip)
48bc(7): lea 0x113d5(%rip),%rsi
48c3(2): xor %edi,%edi
48c5(5): mov $0x5,%edx
48ca(5): mov %rax,0x8(%rsp)
48cf(5): call 0xffffde61(%rip)
48d4(5): mov 0x8(%rsp),%rcx
48d9(3): mov %rax,%rdx
48dc(2): xor %edi,%edi
48de(3): mov %rbp,%r8
48e1(2): xor %esi,%esi
48e3(2): xor %eax,%eax
48e5(5): call 0xffffe22b(%rip)
48ea(3): mov %r14,%rdi
48ed(5): call 0xffffe393(%rip)
48f2(5): jmp 0xfffffb37(%rip)
48f7(9): nop 0x0(%rax,%rax,1)
4900(3): mov %r14,%rdi
4903(5): call 0xffffe37d(%rip)
4908(5): mov 0x30(%rsp),%rax
490d(4): cmp %rax,0x18(%rbx)
4911(6): jz 0xfffffd67(%rip)
4917(4): mov 0x38(%r15),%rsi
491b(5): mov $0x4,%edi
4920(5): call 0x9db0(%rip)
4925(7): lea 0x1138c(%rip),%rsi
492c(3): mov %rax,%rbp
492f(5): mov $0x5,%edx
4934(2): xor %edi,%edi
4936(5): call 0xffffddfa(%rip)
493b(2): xor %esi,%esi
493d(3): mov %rax,%rdx
4940(3): mov %rbp,%rcx
4943(2): xor %edi,%edi
4945(2): xor %eax,%eax
4947(5): call 0xffffe1c9(%rip)
494c(7): lea 0x114ad(%rip),%rsi
4953(5): mov $0x5,%edx
4958(2): xor %edi,%edi
495a(5): call 0xffffddd6(%rip)
495f(2): xor %esi,%esi
4961(3): mov %rax,%rdx
4964(2): xor %edi,%edi
4966(2): xor %eax,%eax
4968(5): call 0xffffe1a8(%rip)
496d(5): jmp 0xfffffabc(%rip)
4972(6): nop 0x0(%rax,%rax,1)
4978(7): lea 0x1115c(%rip),%rsi
497f(2): xor %edi,%edi
4981(5): mov $0x5,%edx
4986(5): mov $0x4,%ebp
498b(5): call 0xffffdda5(%rip)
4990(4): mov (%r12),%esi
4994(3): mov %rax,%rdx
4997(2): xor %edi,%edi
4999(2): xor %eax,%eax
499b(5): call 0xffffe175(%rip)
49a0(3): mov %rbx,%rdi
49a3(5): call 0xe12d(%rip)
49a8(2): test %eax,%eax
49aa(6): jz 0xfffffad2(%rip)
49b0(7): lea 0x11173(%rip),%rsi
49b7(5): mov $0x5,%edx
49bc(2): xor %edi,%edi
49be(5): mov $0x4,%ebp
49c3(5): call 0xffffdd6d(%rip)
49c8(4): mov (%r12),%esi
49cc(3): mov %rax,%rdx
49cf(2): xor %edi,%edi
49d1(2): xor %eax,%eax
49d3(5): call 0xffffe13d(%rip)
49d8(5): jmp 0xfffffaa4(%rip)
49dd(3): nop (%rax)
49e0(4): mov 0x8(%rax),%rax
49e4(4): cmp %rax,0x78(%r15)
49e8(6): jnz 0xfffffc85(%rip)
49ee(4): mov 0x38(%r15),%rdx
49f2(7): lea 0x12095(%rip),%rdi
49f9(5): mov $0x2,%ecx
49fe(3): mov %rdx,%rsi
4a01(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4a03(3): setnbe %al
4a06(2): sbb $0x0,%al
4a08(2): test %al,%al
4a0a(6): jz 0xf4(%rip)
4a10(7): lea 0x12077(%rip),%rdx
4a17(5): mov $0x4,%esi
4a1c(5): mov $0x1,%edi
4a21(5): call 0x9b8f(%rip)
4a26(4): mov 0x38(%r15),%rdx
4a2a(5): mov $0x4,%esi
4a2f(2): xor %edi,%edi
4a31(3): mov %rax,%rbp
4a34(5): call 0x9b7c(%rip)
4a39(7): lea 0x111e0(%rip),%rsi
4a40(3): mov %rax,%r14
4a43(5): mov $0x5,%edx
4a48(2): xor %edi,%edi
4a4a(5): call 0xffffdce6(%rip)
4a4f(3): mov %rbp,%r8
4a52(3): mov %rax,%rdx
4a55(3): mov %r14,%rcx
4a58(2): xor %esi,%esi
4a5a(2): xor %edi,%edi
4a5c(2): xor %eax,%eax
4a5e(5): call 0xffffe0b2(%rip)
4a63(5): mov $0x5,%edx
4a68(7): lea 0x111f1(%rip),%rsi
4a6f(5): jmp 0xfffffee9(%rip)
4a74(4): nop 0x0(%rax)
4a78(4): mov 0x8(%r15),%rax
4a7c(5): cmp $0x0,0x58(%rax)
4a81(2): jns 0x1a(%rip)
4a83(2): jmp 0x1f(%rip)
4a85(3): nop (%rax)
4a88(8): mov $0x1,0x20(%rax)
4a90(4): mov 0x8(%rax),%rax
4a94(5): cmp $0x0,0x58(%rax)
4a99(2): js 0x9(%rip)
4a9b(5): cmp $0x0,0x20(%rax)
4aa0(2): jz 0xffffffe8(%rip)
4aa2(4): mov 0x38(%r15),%rsi
4aa6(5): mov $0x4,%edi
4aab(5): call 0x9c25(%rip)
4ab0(7): lea 0x11201(%rip),%rsi
4ab7(3): mov %rax,%rbp
4aba(5): mov $0x5,%edx
4abf(2): xor %edi,%edi
4ac1(5): call 0xffffdc6f(%rip)
4ac6(3): mov %rbp,%rcx
4ac9(3): mov %rax,%rdx
4acc(2): xor %esi,%esi
4ace(2): xor %edi,%edi
4ad0(2): xor %eax,%eax
4ad2(5): mov $0x4,%ebp
4ad7(5): call 0xffffe039(%rip)
4adc(5): jmp 0xfffff8e4(%rip)
4ae1(7): nop 0x0(%rax)
4ae8(5): mov $0x2,%ebp
4aed(5): jmp 0xfffff98f(%rip)
4af2(2): mov %edx,%edi
4af4(5): call 0xffffdd7c(%rip)
4af9(5): jmp 0xfffffb08(%rip)
4afe(3): mov %rdx,%rsi
4b01(5): mov $0x4,%edi
4b06(5): call 0x9bca(%rip)
4b0b(7): lea 0x110de(%rip),%rsi
4b12(3): mov %rax,%rbp
4b15(2): xor %edi,%edi
4b17(5): mov $0x5,%edx
4b1c(5): call 0xffffdc14(%rip)
4b21(3): mov %rbp,%rcx
4b24(3): mov %rax,%rdx
4b27(2): xor %esi,%esi
4b29(2): xor %edi,%edi
4b2b(2): xor %eax,%eax
4b2d(5): call 0xffffdfe3(%rip)
4b32(5): jmp 0xffffff31(%rip)
4b37(4): mov 0x38(%r15),%rdx
4b3b(5): mov $0x3,%esi
4b40(2): xor %edi,%edi
4b42(5): call 0x9c8e(%rip)
4b47(5): movzx 0x70(%r15),%ebx
4b4c(7): lea 0x11255(%rip),%rsi
4b53(5): mov $0x5,%edx
4b58(2): xor %edi,%edi
4b5a(3): mov %rax,%rbp
4b5d(5): call 0xffffdbd3(%rip)
4b62(7): lea 0x10f9a(%rip),%r9
4b69(3): mov %rax,%rdx
4b6c(3): mov %rbp,%r8
4b6f(2): mov %ebx,%ecx
4b71(2): xor %esi,%esi
4b73(2): xor %edi,%edi
4b75(2): xor %eax,%eax
4b77(5): call 0xffffdf99(%rip)
4b7c(5): call 0xffffda14(%rip)
4b81(7): lea 0x112d8(%rip),%rcx
4b88(7): lea 0x11251(%rip),%rsi
4b8f(7): lea 0x10f83(%rip),%rdi
4b96(5): mov $0x261,%edx
4b9b(5): call 0xffffdc85(%rip)
4ba0(5): call 0xffffdbe0(%rip)
4ba5(5): mov $0x4,%ebp
4baa(5): jmp 0xfffff816(%rip)

"writable_destination" :
4bb0(6): and $0xf000,%esi
4bb6(6): cmp $0xa000,%esi
4bbc(2): jz 0x1c(%rip)
4bbe(1): push %rbx
4bbf(3): mov %rdi,%rbx
4bc2(5): call 0xc0be(%rip)
4bc7(2): test %al,%al
4bc9(2): jz 0x17(%rip)
4bcb(5): mov $0x1,%eax
4bd0(1): pop %rbx
4bd1(1): ret near (%rsp)
4bd2(6): nop 0x0(%rax,%rax,1)
4bd8(5): mov $0x1,%eax
4bdd(1): ret near (%rsp)
4bde(2): nop 
4be0(3): mov %rbx,%rdi
4be3(5): mov $0x2,%esi
4be8(5): call 0xffffdfb8(%rip)
4bed(2): test %eax,%eax
4bef(3): setz %al
4bf2(1): pop %rbx
4bf3(1): ret near (%rsp)

"write_zeros" :
4c00(8): cmp $0x0,0x217938(%rip)
4c08(2): push %r12
4c0a(3): mov %edi,%r12d
4c0d(1): push %rbp
4c0e(1): push %rbx
4c0f(3): mov %rsi,%rbx
4c12(2): jz 0x56(%rip)
4c14(3): test %rbx,%rbx
4c17(2): jnz 0xe(%rip)
4c19(2): jmp 0x3f(%rip)
4c1b(5): nop 0x0(%rax,%rax,1)
4c20(3): sub %rax,%rbx
4c23(2): jz 0x35(%rip)
4c25(7): cmp %rbx,0x2173ec(%rip)
4c2c(3): mov %rbx,%rbp
4c2f(7): mov 0x21790a(%rip),%rsi
4c36(8): cmovbe 0x2173da(%rip),%rbp
4c3e(3): mov %r12d,%edi
4c41(3): mov %rbp,%rdx
4c44(5): call 0x6abc(%rip)
4c49(3): cmp %rbp,%rax
4c4c(2): jz 0xffffffd4(%rip)
4c4e(1): pop %rbx
4c4f(2): xor %eax,%eax
4c51(1): pop %rbp
4c52(2): pop %r12
4c54(1): ret near (%rsp)
4c55(3): nop (%rax)
4c58(1): pop %rbx
4c59(5): mov $0x1,%eax
4c5e(1): pop %rbp
4c5f(2): pop %r12
4c61(1): ret near (%rsp)
4c62(6): nop 0x0(%rax,%rax,1)
4c68(7): mov 0x2173a9(%rip),%rdi
4c6f(5): mov $0x1,%esi
4c74(5): call 0xffffdc9c(%rip)
4c79(3): test %rax,%rax
4c7c(2): jz 0xb(%rip)
4c7e(7): mov %rax,0x2178bb(%rip)
4c85(2): jmp 0xffffff8f(%rip)
4c87(7): lea 0x2174b2(%rip),%rax
4c8e(b): mov $0x400,0x21737f(%rip)
4c99(7): mov %rax,0x2178a0(%rip)
4ca0(5): jmp 0xffffff74(%rip)

"punch_hole" :
4cb0(1): push %rbx
4cb1(3): mov %rdx,%rcx
4cb4(3): mov %rsi,%rdx
4cb7(5): mov $0x3,%esi
4cbc(5): call 0xffffdc24(%rip)
4cc1(2): test %eax,%eax
4cc3(2): mov %eax,%ebx
4cc5(2): js 0xb(%rip)
4cc7(2): mov %ebx,%eax
4cc9(1): pop %rbx
4cca(1): ret near (%rsp)
4ccb(5): nop 0x0(%rax,%rax,1)
4cd0(5): call 0xffffd8d0(%rip)
4cd5(2): mov (%rax),%eax
4cd7(3): cmp $0x26,%eax
4cda(2): jz 0x7(%rip)
4cdc(3): cmp $0x5f,%eax
4cdf(2): jnz 0xffffffe8(%rip)
4ce1(2): xor %ebx,%ebx
4ce3(2): mov %ebx,%eax
4ce5(1): pop %rbx
4ce6(1): ret near (%rsp)

"emit_verbose" :
4cf0(2): push %r12
4cf2(1): push %rbp
4cf3(3): mov %rdi,%r12
4cf6(1): push %rbx
4cf7(5): mov $0x1,%edi
4cfc(3): mov %rdx,%rbx
4cff(3): mov %rsi,%rdx
4d02(5): mov $0x4,%esi
4d07(5): call 0x98a9(%rip)
4d0c(2): xor %edi,%edi
4d0e(3): mov %r12,%rdx
4d11(5): mov $0x4,%esi
4d16(3): mov %rax,%rbp
4d19(5): call 0x9897(%rip)
4d1e(7): lea 0x1178c(%rip),%rsi
4d25(3): mov %rax,%rdx
4d28(3): mov %rbp,%rcx
4d2b(2): xor %eax,%eax
4d2d(5): mov $0x1,%edi
4d32(5): call 0xffffdd7e(%rip)
4d37(3): test %rbx,%rbx
4d3a(2): jz 0x37(%rip)
4d3c(3): mov %rbx,%rsi
4d3f(5): mov $0x4,%edi
4d44(5): call 0x998c(%rip)
4d49(7): lea 0x1176a(%rip),%rsi
4d50(3): mov %rax,%rbx
4d53(5): mov $0x5,%edx
4d58(2): xor %edi,%edi
4d5a(5): call 0xffffd9d6(%rip)
4d5f(3): mov %rbx,%rdx
4d62(3): mov %rax,%rsi
4d65(5): mov $0x1,%edi
4d6a(2): xor %eax,%eax
4d6c(5): call 0xffffdd44(%rip)
4d71(7): mov 0x217350(%rip),%rdi
4d78(4): mov 0x28(%rdi),%rax
4d7c(4): cmp 0x30(%rdi),%rax
4d80(2): jnb 0x18(%rip)
4d82(4): lea 0x1(%rax),%rdx
4d86(4): mov %rdx,0x28(%rdi)
4d8a(3): mov $0xa,(%rax)
4d8d(1): pop %rbx
4d8e(1): pop %rbp
4d8f(2): pop %r12
4d91(1): ret near (%rsp)
4d92(6): nop 0x0(%rax,%rax,1)
4d98(1): pop %rbx
4d99(1): pop %rbp
4d9a(2): pop %r12
4d9c(5): mov $0xa,%esi
4da1(5): jmp 0xffffda2f(%rip)

"create_hard_link" :
4db0(2): push %r13
4db2(2): push %r12
4db4(4): movzx %dl,%r9d
4db8(1): push %rbp
4db9(1): push %rbx
4dba(5): mov $0xffffff9c,%edx
4dbf(3): mov %rdi,%r13
4dc2(3): mov %rsi,%r12
4dc5(2): mov %ecx,%ebp
4dc7(4): sub $0x10,%rsp
4dcb(3): test %r8b,%r8b
4dce(3): mov %rsi,%rcx
4dd1(4): setnz %r8b
4dd5(2): push $0xff
4dd7(3): mov %rdi,%rsi
4dda(4): movzx %r8b,%r8d
4dde(2): mov %edx,%edi
4de0(4): shl/sal $0xa,%r8d
4de4(5): call 0x53ac(%rip)
4de9(2): test %eax,%eax
4deb(2): mov %eax,%ebx
4ded(1): pop %rdx
4dee(1): pop %rcx
4def(2): jnle 0x69(%rip)
4df1(3): shr $0x1f,%ebx
4df4(3): and %bpl,%bl
4df7(2): jnz 0x19(%rip)
4df9(4): add $0x8,%rsp
4dfd(5): mov $0x1,%ebx
4e02(2): mov %ebx,%eax
4e04(1): pop %rbx
4e05(1): pop %rbp
4e06(2): pop %r12
4e08(2): pop %r13
4e0a(1): ret near (%rsp)
4e0b(5): nop 0x0(%rax,%rax,1)
4e10(3): mov %r12,%rsi
4e13(5): mov $0x4,%edi
4e18(5): call 0x98b8(%rip)
4e1d(7): lea 0x10c87(%rip),%rsi
4e24(3): mov %rax,%rbp
4e27(5): mov $0x5,%edx
4e2c(2): xor %edi,%edi
4e2e(5): call 0xffffd902(%rip)
4e33(3): mov %rbp,%rdx
4e36(3): mov %rax,%rsi
4e39(5): mov $0x1,%edi
4e3e(2): xor %eax,%eax
4e40(5): call 0xffffdc70(%rip)
4e45(4): add $0x8,%rsp
4e49(2): mov %ebx,%eax
4e4b(1): pop %rbx
4e4c(1): pop %rbp
4e4d(2): pop %r12
4e4f(2): pop %r13
4e51(1): ret near (%rsp)
4e52(6): nop 0x0(%rax,%rax,1)
4e58(3): mov %r13,%rdx
4e5b(5): mov $0x4,%esi
4e60(5): mov $0x1,%edi
4e65(5): call 0x974b(%rip)
4e6a(3): mov %r12,%rdx
4e6d(5): mov $0x4,%esi
4e72(2): xor %edi,%edi
4e74(3): mov %rax,%r13
4e77(5): call 0x9739(%rip)
4e7c(7): lea 0x1101d(%rip),%rsi
4e83(3): mov %rax,%rbp
4e86(5): mov $0x5,%edx
4e8b(2): xor %edi,%edi
4e8d(5): call 0xffffd8a3(%rip)
4e92(3): mov %r13,%r8
4e95(3): mov %rbp,%rcx
4e98(3): mov %rax,%rdx
4e9b(2): mov %ebx,%esi
4e9d(2): xor %eax,%eax
4e9f(2): xor %edi,%edi
4ea1(5): call 0xffffdc6f(%rip)
4ea6(2): xor %ebx,%ebx
4ea8(4): add $0x8,%rsp
4eac(2): mov %ebx,%eax
4eae(1): pop %rbx
4eaf(1): pop %rbp
4eb0(2): pop %r12
4eb2(2): pop %r13
4eb4(1): ret near (%rsp)

"overwrite_ok.isra.12" :
4ec0(2): push %r14
4ec2(2): push %r13
4ec4(3): mov %rdi,%r13
4ec7(2): push %r12
4ec9(1): push %rbp
4eca(3): mov %rdx,%rbp
4ecd(1): push %rbx
4ece(3): mov %rsi,%rbx
4ed1(3): mov %rbx,%rdi
4ed4(4): sub $0x20,%rsp
4ed8(2): mov (%rdx),%esi
4eda(9): mov $0x28,%rax
4ee3(5): mov %rax,0x18(%rsp)
4ee8(2): xor %eax,%eax
4eea(5): call 0xfffffcc6(%rip)
4eef(2): test %al,%al
4ef1(6): jnz 0x97(%rip)
4ef7(3): mov 0x0(%rbp),%edi
4efa(5): lea 0xc(%rsp),%r12
4eff(3): mov %r12,%rsi
4f02(5): call 0x653e(%rip)
4f07(3): mov 0x0(%rbp),%ebp
4f0a(3): mov %rbx,%rsi
4f0d(5): mov $0x4,%edi
4f12(5): mov $0x0,0x16(%rsp)
4f17(5): call 0x97b9(%rip)
4f1c(6): and $0xfff,%ebp
4f22(5): cmp $0x0,0x18(%r13)
4f27(3): mov %rax,%r14
4f2a(7): mov 0x21764f(%rip),%rbx
4f31(5): mov $0x5,%edx
4f36(2): jnz 0x10(%rip)
4f38(8): test $0xffff00,0x14(%r13)
4f40(6): jz 0xb0(%rip)
4f46(7): lea 0x10f7b(%rip),%rsi
4f4d(2): xor %edi,%edi
4f4f(5): call 0xffffd7e1(%rip)
4f54(3): mov %rax,%rdx
4f57(4): sub $0x8,%rsp
4f5b(4): add $0x1,%r12
4f5f(7): mov 0x21719a(%rip),%rdi
4f66(2): push %r12
4f68(3): mov %rbp,%r9
4f6b(3): mov %r14,%r8
4f6e(3): mov %rbx,%rcx
4f71(5): mov $0x1,%esi
4f76(2): xor %eax,%eax
4f78(5): call 0xffffdca8(%rip)
4f7d(1): pop %rax
4f7e(1): pop %rdx
4f7f(2): jmp 0x4f(%rip)
4f81(7): nop 0x0(%rax)
4f88(3): mov %rbx,%rsi
4f8b(5): mov $0x4,%edi
4f90(5): call 0x9740(%rip)
4f95(7): lea 0x1152c(%rip),%rsi
4f9c(7): mov 0x2175dd(%rip),%rbx
4fa3(5): mov $0x5,%edx
4fa8(2): xor %edi,%edi
4faa(3): mov %rax,%rbp
4fad(5): call 0xffffd783(%rip)
4fb2(7): mov 0x217147(%rip),%rdi
4fb9(3): mov %rax,%rdx
4fbc(3): mov %rbp,%r8
4fbf(3): mov %rbx,%rcx
4fc2(5): mov $0x1,%esi
4fc7(2): xor %eax,%eax
4fc9(5): call 0xffffdc57(%rip)
4fce(5): call 0xc002(%rip)
4fd3(5): mov 0x18(%rsp),%rcx
4fd8(9): xor $0x28,%rcx
4fe1(2): jnz 0x25(%rip)
4fe3(4): add $0x20,%rsp
4fe7(1): pop %rbx
4fe8(1): pop %rbp
4fe9(2): pop %r12
4feb(2): pop %r13
4fed(2): pop %r14
4fef(1): ret near (%rsp)
4ff0(7): lea 0x10f01(%rip),%rsi
4ff7(2): xor %edi,%edi
4ff9(5): call 0xffffd737(%rip)
4ffe(3): mov %rax,%rdx
5001(5): jmp 0xffffff56(%rip)
5006(5): call 0xffffd77a(%rip)

"create_hole" :
5010(2): push %r13
5012(2): push %r12
5014(3): mov %rsi,%r13
5017(1): push %rbp
5018(1): push %rbx
5019(3): mov %edx,%r12d
501c(3): mov %rcx,%rsi
501f(5): mov $0x1,%edx
5024(2): mov %edi,%ebp
5026(4): sub $0x8,%rsp
502a(3): mov %rcx,%rbx
502d(5): call 0xffffd7d3(%rip)
5032(3): test %rax,%rax
5035(2): js 0x7b(%rip)
5037(3): test %r12b,%r12b
503a(2): jnz 0x16(%rip)
503c(4): add $0x8,%rsp
5040(5): mov $0x1,%eax
5045(1): pop %rbx
5046(1): pop %rbp
5047(2): pop %r12
5049(2): pop %r13
504b(1): ret near (%rsp)
504c(4): nop 0x0(%rax)
5050(3): sub %rbx,%rax
5053(3): mov %rbx,%rdx
5056(2): mov %ebp,%edi
5058(3): mov %rax,%rsi
505b(5): call 0xfffffc55(%rip)
5060(2): test %eax,%eax
5062(2): jns 0xffffffda(%rip)
5064(3): mov %r13,%rsi
5067(5): mov $0x4,%edi
506c(5): call 0x9664(%rip)
5071(7): lea 0x11473(%rip),%rsi
5078(3): mov %rax,%rbp
507b(5): mov $0x5,%edx
5080(2): xor %edi,%edi
5082(5): call 0xffffd6ae(%rip)
5087(3): mov %rax,%rbx
508a(5): call 0xffffd516(%rip)
508f(2): mov (%rax),%esi
5091(3): mov %rbp,%rcx
5094(3): mov %rbx,%rdx
5097(2): xor %eax,%eax
5099(2): xor %edi,%edi
509b(5): call 0xffffda75(%rip)
50a0(4): add $0x8,%rsp
50a4(2): xor %eax,%eax
50a6(1): pop %rbx
50a7(1): pop %rbp
50a8(2): pop %r12
50aa(2): pop %r13
50ac(1): ret near (%rsp)
50ad(3): nop (%rax)
50b0(3): mov %r13,%rsi
50b3(5): mov $0x4,%edi
50b8(5): call 0x9618(%rip)
50bd(5): mov $0x5,%edx
50c2(3): mov %rax,%rbp
50c5(7): lea 0x1140f(%rip),%rsi
50cc(2): jmp 0xffffffb4(%rip)

"sparse_copy" :
50d0(2): push %r15
50d2(2): push %r14
50d4(2): push %r13
50d6(2): push %r12
50d8(1): push %rbp
50d9(1): push %rbx
50da(4): sub $0x78,%rsp
50de(8): mov 0xb0(%rsp),%rax
50e6(8): mov 0xc8(%rsp),%rbx
50ee(8): mov 0xd0(%rsp),%r10
50f6(5): mov %r9b,0x1f(%rsp)
50fb(5): mov %rax,0x58(%rsp)
5100(8): mov 0xb8(%rsp),%rax
5108(4): mov $0x0,(%r10)
510c(5): mov %rbx,0x40(%rsp)
5111(5): mov %r10,0x60(%rsp)
5116(7): mov $0x0,(%rbx)
511d(5): mov %rax,0x10(%rsp)
5122(8): mov 0xc0(%rsp),%rax
512a(3): test %rax,%rax
512d(5): mov %rax,0x28(%rsp)
5132(6): jz 0x3a1(%rip)
5138(3): test %r8,%r8
513b(5): mov %r8,0x50(%rsp)
5140(5): mov %r9d,0x6c(%rsp)
5145(4): cmove %rcx,%r8
5149(5): mov %rcx,0x38(%rsp)
514e(5): mov %rdx,0x20(%rsp)
5153(4): mov %esi,0x18(%rsp)
5157(4): mov %edi,0x68(%rsp)
515b(3): xor %r13d,%r13d
515e(5): mov %r8,0x48(%rsp)
5163(3): xor %r15d,%r15d
5166(5): mov 0x38(%rsp),%rax
516b(5): mov 0x28(%rsp),%rdx
5170(5): mov 0x20(%rsp),%rsi
5175(4): mov 0x68(%rsp),%edi
5179(3): cmp %rdx,%rax
517c(4): cmovbe %rax,%rdx
5180(5): call 0xffffd740(%rip)
5185(3): test %rax,%rax
5188(5): mov %rax,0x30(%rsp)
518d(2): jns 0x63(%rip)
518f(5): call 0xffffd411(%rip)
5194(3): cmp $0x4,(%rax)
5197(2): jz 0xffffffcf(%rip)
5199(5): mov 0x58(%rsp),%rsi
519e(5): mov $0x4,%edi
51a3(3): mov %rax,%rbx
51a6(3): xor %r15d,%r15d
51a9(5): call 0x9527(%rip)
51ae(7): lea 0x1134c(%rip),%rsi
51b5(5): mov $0x5,%edx
51ba(2): xor %edi,%edi
51bc(3): mov %rax,%rbp
51bf(5): call 0xffffd571(%rip)
51c4(2): mov (%rbx),%esi
51c6(3): mov %rax,%rdx
51c9(3): mov %rbp,%rcx
51cc(2): xor %edi,%edi
51ce(2): xor %eax,%eax
51d0(5): call 0xffffd940(%rip)
51d5(4): add $0x78,%rsp
51d9(3): mov %r15d,%eax
51dc(1): pop %rbx
51dd(1): pop %rbp
51de(2): pop %r12
51e0(2): pop %r13
51e2(2): pop %r14
51e4(2): pop %r15
51e6(1): ret near (%rsp)
51e7(9): nop 0x0(%rax,%rax,1)
51f0(6): jz 0x12f(%rip)
51f6(5): mov 0x40(%rsp),%rax
51fb(5): mov 0x30(%rsp),%rbp
5200(3): mov %r15d,%ecx
5203(5): mov 0x20(%rsp),%r14
5208(5): mov 0x48(%rsp),%r10
520d(3): add %rbp,(%rax)
5210(6): cmp $0x0,0x50(%rsp)
5216(3): mov %r14,%r11
5219(3): mov %r10,%r15
521c(5): setnz 0x1d(%rsp)
5221(7): nop 0x0(%rax)
5228(3): cmp %r15,%rbp
522b(3): mov %r15,%rbx
522e(4): cmovbe %rbp,%rbx
5232(3): test %rbx,%rbx
5235(4): setnz %r12b
5239(5): and 0x1d(%rsp),%r12b
523e(6): jz 0x112(%rip)
5244(3): mov %r14,%rsi
5247(3): mov %rbx,%rdx
524a(3): cmp $0x0,(%rsi)
524d(6): jnz 0x233(%rip)
5253(4): add $0x1,%rsi
5257(4): sub $0x1,%rdx
525b(6): jz 0x18d(%rip)
5261(3): test $0xf,%dl
5264(2): jnz 0xffffffe6(%rip)
5266(3): mov %r14,%rdi
5269(5): mov %r11,0x8(%rsp)
526e(4): mov %cl,0x1e(%rsp)
5272(5): call 0xffffd65e(%rip)
5277(5): movzx 0x1e(%rsp),%ecx
527c(2): test %eax,%eax
527e(5): mov 0x8(%rsp),%r11
5283(4): setz %r12b
5287(3): mov %r12d,%edx
528a(2): xor %ecx,%edx
528c(2): test %eax,%eax
528e(3): setnz %al
5291(3): test %r13,%r13
5294(4): setnz %r9b
5298(3): and %edx,%r9d
529b(3): cmp %r15,%rbp
529e(6): jnbe 0x15a(%rip)
52a4(2): test %al,%al
52a6(6): jz 0x152(%rip)
52ac(3): test %r9b,%r9b
52af(6): jz 0xab(%rip)
52b5(6): mov $0x1,%r15d
52bb(2): test %cl,%cl
52bd(4): mov %cl,0x1e(%rsp)
52c1(6): jnz 0xb1(%rip)
52c7(4): mov 0x18(%rsp),%edi
52cb(3): mov %r13,%rdx
52ce(3): mov %r11,%rsi
52d1(5): mov %r9b,0x8(%rsp)
52d6(5): call 0x642a(%rip)
52db(3): cmp %rax,%r13
52de(6): movzx 0x8(%rsp),%r9d
52e4(5): movzx 0x1e(%rsp),%ecx
52e9(6): jnz 0x1a4(%rip)
52ef(3): test %r15d,%r15d
52f2(3): mov %rbx,%r13
52f5(6): jz 0x113(%rip)
52fb(3): test %rbx,%rbx
52fe(6): jnz 0x122(%rip)
5304(5): mov 0x30(%rsp),%rdi
5309(5): sub %rdi,0x28(%rsp)
530e(3): mov %r12d,%r15d
5311(5): mov 0x60(%rsp),%rax
5316(3): mov %r12b,(%rax)
5319(6): jnz 0xfffffe4d(%rip)
531f(3): test %r15b,%r15b
5322(6): jz 0x1b1(%rip)
5328(5): movzx 0x6c(%rsp),%edx
532d(5): mov 0x10(%rsp),%rsi
5332(3): mov %r13,%rcx
5335(4): mov 0x18(%rsp),%edi
5339(4): add $0x78,%rsp
533d(1): pop %rbx
533e(1): pop %rbp
533f(2): pop %r12
5341(2): pop %r13
5343(2): pop %r14
5345(2): pop %r15
5347(5): jmp 0xfffffcc9(%rip)
534c(4): nop 0x0(%rax)
5350(3): cmp $0x1,%cl
5353(2): jz 0x55(%rip)
5355(3): cmp %r15,%rbp
5358(2): jnbe 0x50(%rip)
535a(3): add %rbx,%r13
535d(3): xor %r9d,%r9d
5360(2): test %cl,%cl
5362(6): mov $0x1,%r15d
5368(4): mov %cl,0x1e(%rsp)
536c(6): jz 0xffffff5b(%rip)
5372(5): movzx 0x1f(%rsp),%edx
5377(5): mov 0x10(%rsp),%rsi
537c(3): mov %r13,%rcx
537f(4): mov 0x18(%rsp),%edi
5383(5): mov %r9b,0x1e(%rsp)
5388(5): call 0xfffffc88(%rip)
538d(2): test %al,%al
538f(6): movzx 0x1e(%rsp),%r9d
5395(6): jnz 0xffffff5a(%rip)
539b(3): mov %eax,%r15d
539e(5): jmp 0xfffffe37(%rip)
53a3(5): nop 0x0(%rax,%rax,1)
53a8(3): test %rbx,%rbx
53ab(2): jnz 0xd(%rip)
53ad(3): mov %ecx,%r12d
53b0(2): jmp 0xffffffaa(%rip)
53b2(3): mov %r12d,%ecx
53b5(3): nop (%rax)
53b8(a): mov $0x9223372036854775807,%rax
53c2(3): sub %rbx,%rax
53c5(3): cmp %r13,%rax
53c8(2): jb 0x78(%rip)
53ca(3): add %rbx,%r13
53cd(3): add %rbx,%r14
53d0(3): mov %rbx,%r15
53d3(3): sub %r15,%rbp
53d6(6): jnz 0xfffffe52(%rip)
53dc(3): mov %ecx,%r12d
53df(5): jmp 0xffffff25(%rip)
53e4(4): nop 0x0(%rax)
53e8(3): mov %ecx,%r9d
53eb(4): xor $0x1,%r9d
53ef(3): test %r13,%r13
53f2(3): setnz %al
53f5(3): and %eax,%r9d
53f8(3): test %r9b,%r9b
53fb(2): jz 0xffffffb7(%rip)
53fd(3): xor %r15d,%r15d
5400(5): jmp 0xfffffebb(%rip)
5405(3): nop (%rax)
5408(3): mov %r14,%r11
540b(3): mov %r12d,%ecx
540e(3): add %rbx,%r14
5411(3): mov %rbx,%r15
5414(2): jmp 0xffffffbf(%rip)
5416(a): nop 0x0(%rax,%rax,1)
5420(3): xor %r15d,%r15d
5423(3): test %r9b,%r9b
5426(3): mov %r12d,%ecx
5429(3): mov %r14,%r11
542c(2): jnz 0xffffffa7(%rip)
542e(3): add %rbx,%r14
5431(3): mov %rbx,%r15
5434(3): xor %r13d,%r13d
5437(2): jmp 0xffffff9c(%rip)
5439(7): nop 0x0(%rax)
5440(5): mov 0x58(%rsp),%rsi
5445(5): mov $0x4,%edi
544a(3): xor %r15d,%r15d
544d(5): call 0x9283(%rip)
5452(7): lea 0x110ca(%rip),%rsi
5459(3): mov %rax,%rbx
545c(5): mov $0x5,%edx
5461(2): xor %edi,%edi
5463(5): call 0xffffd2cd(%rip)
5468(3): mov %rbx,%rcx
546b(3): mov %rax,%rdx
546e(2): xor %esi,%esi
5470(2): xor %edi,%edi
5472(2): xor %eax,%eax
5474(5): call 0xffffd69c(%rip)
5479(5): jmp 0xfffffd5c(%rip)
547e(2): nop 
5480(3): mov %r12d,%eax
5483(2): mov %ecx,%edx
5485(3): xor %r12d,%r12d
5488(5): jmp 0xfffffe09(%rip)
548d(5): mov 0x10(%rsp),%rsi
5492(5): mov $0x4,%edi
5497(3): mov %ecx,%r15d
549a(5): call 0x9236(%rip)
549f(7): lea 0x1106c(%rip),%rsi
54a6(2): xor %edi,%edi
54a8(5): mov $0x5,%edx
54ad(3): mov %rax,%rbp
54b0(5): call 0xffffd280(%rip)
54b5(3): mov %rax,%rbx
54b8(5): call 0xffffd0e8(%rip)
54bd(2): mov (%rax),%esi
54bf(3): mov %rbp,%rcx
54c2(3): mov %rbx,%rdx
54c5(2): xor %edi,%edi
54c7(2): xor %eax,%eax
54c9(5): call 0xffffd647(%rip)
54ce(5): jmp 0xfffffd07(%rip)
54d3(6): mov $0x1,%r15d
54d9(5): jmp 0xfffffcfc(%rip)

"set_process_security_ctx" :
54e0(2): push %r13
54e2(2): push %r12
54e4(1): push %rbp
54e5(1): push %rbx
54e6(3): mov %r8,%rbp
54e9(4): sub $0x8,%rsp
54ed(5): cmp $0x0,0x25(%r8)
54f2(2): jz 0x6e(%rip)
54f4(3): mov %rdi,%r13
54f7(5): call 0xffffd0a9(%rip)
54fc(4): cmp $0x0,0x23(%rbp)
5500(3): mov %rax,%r12
5503(2): jnz 0x7d(%rip)
5505(3): mov %r13,%rsi
5508(5): mov $0x4,%edi
550d(8): mov $0x5f,(%r12)
5515(5): call 0x91bb(%rip)
551a(7): lea 0x10a0f(%rip),%rsi
5521(5): mov $0x5,%edx
5526(2): xor %edi,%edi
5528(3): mov %rax,%rbx
552b(5): call 0xffffd205(%rip)
5530(4): mov (%r12),%esi
5534(3): mov %rbx,%rcx
5537(3): mov %rax,%rdx
553a(2): xor %edi,%edi
553c(2): xor %eax,%eax
553e(5): call 0xffffd5d2(%rip)
5543(4): movzx 0x26(%rbp),%ebx
5547(4): add $0x8,%rsp
554b(3): xor $0x1,%ebx
554e(2): mov %ebx,%eax
5550(1): pop %rbx
5551(1): pop %rbp
5552(2): pop %r12
5554(2): pop %r13
5556(1): ret near (%rsp)
5557(9): nop 0x0(%rax,%rax,1)
5560(2): mov %ecx,%ebx
5562(4): and 0x21(%r8),%bl
5566(2): jnz 0x32(%rip)
5568(4): add $0x8,%rsp
556c(5): mov $0x1,%ebx
5571(2): mov %ebx,%eax
5573(1): pop %rbx
5574(1): pop %rbp
5575(2): pop %r12
5577(2): pop %r13
5579(1): ret near (%rsp)
557a(6): nop 0x0(%rax,%rax,1)
5580(4): movzx 0x26(%rbp),%ebx
5584(2): test %bl,%bl
5586(6): jnz 0xffffff7f(%rip)
558c(6): mov $0x5f,(%rax)
5592(2): jmp 0xffffffb5(%rip)
5594(4): nop 0x0(%rax)
5598(5): call 0xffffd008(%rip)
559d(6): mov $0x5f,(%rax)
55a3(4): add $0x8,%rsp
55a7(2): mov %ebx,%eax
55a9(1): pop %rbx
55aa(1): pop %rbp
55ab(2): pop %r12
55ad(2): pop %r13
55af(1): ret near (%rsp)

"set_file_security_ctx" :
55b0(2): push %r12
55b2(1): push %rbp
55b3(3): mov %rcx,%rbp
55b6(1): push %rbx
55b7(3): mov %rdi,%r12
55ba(5): call 0xffffcfe6(%rip)
55bf(4): cmp $0x0,0x23(%rbp)
55c3(3): mov %rax,%rbx
55c6(2): jz 0x8(%rip)
55c8(4): cmp $0x0,0x26(%rbp)
55cc(2): jz 0x4c(%rip)
55ce(3): mov %r12,%rdx
55d1(6): mov $0x5f,(%rbx)
55d7(5): mov $0x4,%esi
55dc(2): xor %edi,%edi
55de(5): call 0x8fd2(%rip)
55e3(7): lea 0x1096e(%rip),%rsi
55ea(5): mov $0x5,%edx
55ef(2): xor %edi,%edi
55f1(3): mov %rax,%rbp
55f4(5): call 0xffffd13c(%rip)
55f9(2): mov (%rbx),%esi
55fb(3): mov %rbp,%rcx
55fe(3): mov %rax,%rdx
5601(2): xor %edi,%edi
5603(2): xor %eax,%eax
5605(5): call 0xffffd50b(%rip)
560a(1): pop %rbx
560b(2): xor %eax,%eax
560d(1): pop %rbp
560e(2): pop %r12
5610(1): ret near (%rsp)
5611(7): nop 0x0(%rax)
5618(6): mov $0x5f,(%rax)
561e(2): xor %eax,%eax
5620(1): pop %rbx
5621(1): pop %rbp
5622(2): pop %r12
5624(1): ret near (%rsp)

"dest_info_init" :
5630(7): lea 0x74d9(%rip),%r8
5637(7): lea 0x7462(%rip),%rcx
563e(2): xor %esi,%esi
5640(7): lea 0x7419(%rip),%rdx
5647(1): push %rbx
5648(3): mov %rdi,%rbx
564b(5): mov $0x3d,%edi
5650(5): call 0x69a0(%rip)
5655(4): mov %rax,0x40(%rbx)
5659(1): pop %rbx
565a(1): ret near (%rsp)

"src_info_init" :
5660(7): lea 0x74a9(%rip),%r8
5667(7): lea 0x7432(%rip),%rcx
566e(2): xor %esi,%esi
5670(7): lea 0x7419(%rip),%rdx
5677(1): push %rbx
5678(3): mov %rdi,%rbx
567b(5): mov $0x3d,%edi
5680(5): call 0x6970(%rip)
5685(4): mov %rax,0x48(%rbx)
5689(1): pop %rbx
568a(1): ret near (%rsp)

"cp_options_default" :
5690(4): pxor %xmm0,%xmm0
5694(1): push %rbx
5695(3): mov %rdi,%rbx
5698(3): movups %xmm0,(%rdi)
569b(4): movups %xmm0,0x10(%rdi)
569f(4): movups %xmm0,0x20(%rdi)
56a3(4): movups %xmm0,0x30(%rdi)
56a7(4): movups %xmm0,0x40(%rdi)
56ab(5): call 0xffffd195(%rip)
56b0(2): test %eax,%eax
56b2(7): mov $0xffffffff,0x34(%rbx)
56b9(3): setz %al
56bc(3): mov %al,0x1b(%rbx)
56bf(3): mov %al,0x1a(%rbx)
56c2(1): pop %rbx
56c3(1): ret near (%rsp)

"chown_failure_ok" :
56d0(1): push %rbx
56d1(3): mov %rdi,%rbx
56d4(5): call 0xffffcecc(%rip)
56d9(2): mov (%rax),%edx
56db(3): cmp $0x1,%edx
56de(3): setz %al
56e1(3): cmp $0x16,%edx
56e4(3): setz %dl
56e7(2): or %dl,%al
56e9(2): jz 0x9(%rip)
56eb(4): movzx 0x1a(%rbx),%eax
56ef(3): xor $0x1,%eax
56f2(1): pop %rbx
56f3(1): ret near (%rsp)

"set_owner" :
5700(2): push %r15
5702(2): push %r14
5704(2): push %r13
5706(2): push %r12
5708(3): mov %rsi,%r13
570b(1): push %rbp
570c(1): push %rbx
570d(3): mov %rdi,%rbp
5710(2): mov %edx,%ebx
5712(4): sub $0x8,%rsp
5716(3): test %r8b,%r8b
5719(4): mov 0x1c(%rcx),%r14d
571d(4): mov 0x20(%rcx),%r12d
5721(2): jnz 0x34(%rip)
5723(a): mov $0x71776119061217535,%rax
572d(4): test %rax,0x18(%rdi)
5731(6): jz 0x9f(%rip)
5737(4): mov 0x18(%r9),%esi
573b(3): mov 0x18(%rcx),%edx
573e(2): mov %edx,%eax
5740(2): mov %esi,%ecx
5742(2): not %eax
5744(6): and $0xfff,%ecx
574a(3): or $0xe,%ah
574d(2): test %ecx,%eax
574f(6): jnz 0xd1(%rip)
5755(3): cmp $0xff,%ebx
5758(3): mov %r12d,%edx
575b(3): mov %r14d,%esi
575e(2): jz 0x52(%rip)
5760(2): mov %ebx,%edi
5762(5): call 0xffffd3ee(%rip)
5767(2): test %eax,%eax
5769(2): jz 0x53(%rip)
576b(5): call 0xffffce35(%rip)
5770(3): mov (%rax),%r14d
5773(3): mov %rax,%r15
5776(4): cmp $0x1,%r14d
577a(6): jz 0x16e(%rip)
5780(4): cmp $0x16,%r14d
5784(6): jz 0x164(%rip)
578a(3): mov %rbp,%rdi
578d(5): call 0xffffff43(%rip)
5792(2): mov %eax,%edx
5794(2): xor %eax,%eax
5796(2): test %dl,%dl
5798(6): jz 0xf8(%rip)
579e(4): add $0x8,%rsp
57a2(1): pop %rbx
57a3(1): pop %rbp
57a4(2): pop %r12
57a6(2): pop %r13
57a8(2): pop %r14
57aa(2): pop %r15
57ac(1): ret near (%rsp)
57ad(3): nop (%rax)
57b0(3): mov %r13,%rdi
57b3(5): call 0xffffd28d(%rip)
57b8(2): test %eax,%eax
57ba(2): jnz 0x36(%rip)
57bc(4): add $0x8,%rsp
57c0(5): mov $0x1,%eax
57c5(1): pop %rbx
57c6(1): pop %rbp
57c7(2): pop %r12
57c9(2): pop %r13
57cb(2): pop %r14
57cd(2): pop %r15
57cf(1): ret near (%rsp)
57d0(4): cmp $0x0,0x2b(%rdi)
57d4(6): jz 0xffffff81(%rip)
57da(4): mov 0x18(%r9),%esi
57de(3): mov 0x10(%rdi),%edx
57e1(5): jmp 0xffffff5d(%rip)
57e6(a): nop 0x0(%rax,%rax,1)
57f0(5): call 0xffffcdb0(%rip)
57f5(2): mov (%rax),%ebx
57f7(3): mov %rax,%r14
57fa(3): cmp $0x1,%ebx
57fd(2): jz 0xb(%rip)
57ff(3): cmp $0x16,%ebx
5802(6): jnz 0xffffff88(%rip)
5808(3): mov %r12d,%edx
580b(5): mov $0xffffffff,%esi
5810(3): mov %r13,%rdi
5813(5): call 0xffffd22d(%rip)
5818(3): mov %ebx,(%r14)
581b(5): jmp 0xffffff6f(%rip)
5820(2): and %esi,%edx
5822(3): mov %r13,%rdi
5825(2): mov %ebx,%esi
5827(6): and $0x1c0,%edx
582d(5): call 0x74a3(%rip)
5832(2): test %eax,%eax
5834(6): jz 0xffffff21(%rip)
583a(5): call 0xffffcd66(%rip)
583f(3): mov %rax,%rbx
5842(2): mov (%rax),%eax
5844(3): cmp $0x1,%eax
5847(6): jz 0xb9(%rip)
584d(3): cmp $0x16,%eax
5850(6): jz 0xb0(%rip)
5856(3): mov %r13,%rsi
5859(5): mov $0x4,%edi
585e(5): call 0x8e72(%rip)
5863(7): lea 0x10ccd(%rip),%rsi
586a(2): xor %edi,%edi
586c(5): mov $0x5,%edx
5871(3): mov %rax,%r12
5874(5): call 0xffffcebc(%rip)
5879(2): mov (%rbx),%esi
587b(3): mov %rax,%rdx
587e(3): mov %r12,%rcx
5881(2): xor %edi,%edi
5883(2): xor %eax,%eax
5885(5): call 0xffffd28b(%rip)
588a(2): jmp 0x42(%rip)
588c(4): nop 0x0(%rax)
5890(3): mov %r13,%rsi
5893(5): mov $0x4,%edi
5898(5): call 0x8e38(%rip)
589d(7): lea 0x106e4(%rip),%rsi
58a4(5): mov $0x5,%edx
58a9(2): xor %edi,%edi
58ab(3): mov %rax,%r12
58ae(5): call 0xffffce82(%rip)
58b3(3): mov %rax,%rbx
58b6(5): call 0xffffccea(%rip)
58bb(2): mov (%rax),%esi
58bd(3): mov %r12,%rcx
58c0(3): mov %rbx,%rdx
58c3(2): xor %edi,%edi
58c5(2): xor %eax,%eax
58c7(5): call 0xffffd249(%rip)
58cc(4): movzx 0x24(%rbp),%eax
58d0(4): add $0x8,%rsp
58d4(1): pop %rbx
58d5(1): pop %rbp
58d6(2): pop %r12
58d8(2): neg %eax
58da(2): pop %r13
58dc(2): pop %r14
58de(2): pop %r15
58e0(1): ret near (%rsp)
58e1(7): nop 0x0(%rax)
58e8(3): mov %r12d,%edx
58eb(5): mov $0xffffffff,%esi
58f0(2): mov %ebx,%edi
58f2(5): call 0xffffd25e(%rip)
58f7(3): mov %r14d,(%r15)
58fa(5): jmp 0xfffffe90(%rip)
58ff(1): nop 
5900(4): cmp $0x0,0x1b(%rbp)
5904(6): jnz 0xffffff52(%rip)
590a(2): jmp 0xffffffc2(%rip)

"cached_umask" :
5910(1): push %rbx
5911(6): mov 0x2166f9(%rip),%ebx
5917(3): cmp $0xff,%ebx
591a(2): jz 0x6(%rip)
591c(2): mov %ebx,%eax
591e(1): pop %rbx
591f(1): ret near (%rsp)
5920(2): xor %edi,%edi
5922(5): call 0xffffd06e(%rip)
5927(2): mov %eax,%ebx
5929(2): mov %eax,%edi
592b(6): mov %eax,0x2166df(%rip)
5931(5): call 0xffffd05f(%rip)
5936(2): mov %ebx,%eax
5938(1): pop %rbx
5939(1): ret near (%rsp)

"copy_internal" :
5940(1): push %rbp
5941(3): mov %rsp,%rbp
5944(2): push %r15
5946(2): push %r14
5948(2): push %r13
594a(2): push %r12
594c(3): mov %edx,%r14d
594f(1): push %rbx
5950(3): mov %r9,%rbx
5953(7): sub $0x398,%rsp
595a(4): mov 0x18(%rbp),%rax
595e(4): mov 0x10(%rbp),%r13d
5962(7): mov %rcx,0xfffffcb8(%rbp)
5969(4): mov 0x28(%rbp),%rcx
596d(7): mov %rdi,0xfffffcf0(%rbp)
5974(7): mov %rsi,0xfffffcf8(%rbp)
597b(7): mov %rax,0xfffffcc8(%rbp)
5982(4): mov 0x20(%rbp),%rax
5986(7): mov %rcx,0xfffffce0(%rbp)
598d(7): mov %r8,0xfffffcd0(%rbp)
5994(9): mov $0x28,%rcx
599d(4): mov %rcx,0xffffffc8(%rbp)
59a1(2): xor %ecx,%ecx
59a3(3): mov $0x0,(%rax)
59a6(5): movzx 0x18(%r9),%r12d
59ab(7): mov %rax,0xfffffcc0(%rbp)
59b2(7): mov %r13b,0xfffffceb(%rbp)
59b9(4): mov 0x34(%r9),%r15d
59bd(3): test %r12b,%r12b
59c0(2): jz 0x21(%rip)
59c2(3): test %r15d,%r15d
59c5(6): js 0x29b(%rip)
59cb(7): mov 0xfffffce0(%rbp),%rax
59d2(3): test %r15d,%r15d
59d5(4): setz %r14b
59d9(3): test %rax,%rax
59dc(2): jz 0x5(%rip)
59de(3): mov %r14b,(%rax)
59e1(3): test %r15d,%r15d
59e4(6): jz 0x2b4(%rip)
59ea(4): cmp $0x11,%r15d
59ee(7): mov 0xfffffcf0(%rbp),%r12
59f5(6): jz 0x803(%rip)
59fb(4): cmp $0x2,0x4(%rbx)
59ff(7): lea 0xfffffd80(%rbp),%r10
5a06(3): mov %r12,%rsi
5a09(5): mov $0x1,%edi
5a0e(3): mov %r10,%rdx
5a11(6): jz 0x7ff(%rip)
5a17(5): call 0xffffcfc9(%rip)
5a1c(2): test %eax,%eax
5a1e(3): mov %r12,%rsi
5a21(3): setnz %al
5a24(2): test %al,%al
5a26(6): jnz 0x7ff(%rip)
5a2c(6): mov 0xfffffd98(%rbp),%eax
5a32(6): mov %eax,0xfffffcec(%rbp)
5a38(5): and $0xf000,%eax
5a3d(5): cmp $0x4000,%eax
5a42(6): jz 0xac6(%rip)
5a48(3): test %r13b,%r13b
5a4b(2): jz 0x3f(%rip)
5a4d(4): mov 0x48(%rbx),%rdi
5a51(3): test %rdi,%rdi
5a54(2): jz 0x36(%rip)
5a56(6): mov 0xfffffcec(%rbp),%eax
5a5c(7): lea 0xfffffd80(%rbp),%r10
5a63(5): and $0xf000,%eax
5a68(5): cmp $0x4000,%eax
5a6d(2): jz 0xe(%rip)
5a6f(3): mov (%rbx),%r11d
5a72(3): test %r11d,%r11d
5a75(6): jz 0x913(%rip)
5a7b(7): mov 0xfffffcf0(%rbp),%rsi
5a82(3): mov %r10,%rdx
5a85(5): call 0x57db(%rip)
5a8a(3): mov 0x4(%rbx),%eax
5a8d(a): mov $0x1,0xfffffcd8(%rbp)
5a97(3): cmp $0x4,%eax
5a9a(2): jz 0x14(%rip)
5a9c(3): cmp $0x3,%eax
5a9f(3): setz %al
5aa2(3): movzx %al,%eax
5aa5(3): and %r13d,%eax
5aa8(6): mov %eax,0xfffffcd8(%rbp)
5aae(3): test %r14b,%r14b
5ab1(6): jnz 0x20f(%rip)
5ab7(4): cmp $0x11,%r15d
5abb(6): jz 0x965(%rip)
5ac1(6): mov 0xfffffcec(%rbp),%eax
5ac7(5): and $0xf000,%eax
5acc(5): cmp $0x8000,%eax
5ad1(6): jz 0x8ef(%rip)
5ad7(5): cmp $0xa000,%eax
5adc(6): mov $0x100,%r8d
5ae2(4): setz %r9b
5ae6(5): cmp $0x4000,%eax
5aeb(3): setz %al
5aee(3): or %eax,%r9d
5af1(4): movzx 0x14(%rbx),%eax
5af5(3): xor $0x1,%eax
5af8(3): or %al,%r9b
5afb(6): jz 0x8c5(%rip)
5b01(7): lea 0xfffffe10(%rbp),%r12
5b08(7): mov 0xfffffcf8(%rbp),%rdx
5b0f(5): mov $0xffffff9c,%esi
5b14(5): mov $0x1,%edi
5b19(7): mov %r9b,0xfffffcb0(%rbp)
5b20(3): mov %r12,%rcx
5b23(5): call 0xffffcc9d(%rip)
5b28(2): test %eax,%eax
5b2a(8): movzx 0xfffffcb0(%rbp),%r9d
5b32(6): jnz 0x67e(%rip)
5b38(3): xor %r8d,%r8d
5b3b(4): cmp $0x2,0x8(%rbx)
5b3f(2): jz 0x20(%rip)
5b41(7): mov 0xfffffe18(%rbp),%rax
5b48(7): cmp %rax,0xfffffd88(%rbp)
5b4f(6): jz 0x11c9(%rip)
5b55(4): cmp $0x2,0x4(%rbx)
5b59(6): jz 0x1377(%rip)
5b5f(4): cmp $0x0,0x2d(%rbx)
5b63(6): jz 0x9fd(%rip)
5b69(6): mov 0xfffffcec(%rbp),%eax
5b6f(5): and $0xf000,%eax
5b74(5): cmp $0x4000,%eax
5b79(6): jz 0x1427(%rip)
5b7f(2): xor %ecx,%ecx
5b81(4): cmp $0x0,0x1f(%rbx)
5b85(2): jz 0x20(%rip)
5b87(4): cmp $0x0,0x18(%rbx)
5b8b(5): mov $0x1,%ecx
5b90(2): jz 0x15(%rip)
5b92(2): xor %ecx,%ecx
5b94(7): mov 0xfffffd80(%rbp),%rax
5b9b(7): cmp %rax,0xfffffe10(%rbp)
5ba2(3): setnz %cl
5ba5(7): lea 0xfffffd80(%rbp),%r10
5bac(7): mov 0xfffffcf8(%rbp),%rdi
5bb3(7): lea 0xfffffe10(%rbp),%rsi
5bba(7): mov %r9b,0xfffffca8(%rbp)
5bc1(7): mov %r8b,0xfffffcb0(%rbp)
5bc8(3): mov %r10,%rdx
5bcb(5): call 0xa205(%rip)
5bd0(2): test %eax,%eax
5bd2(8): movzx 0xfffffcb0(%rbp),%r8d
5bda(8): movzx 0xfffffca8(%rbp),%r9d
5be2(6): js 0xf4e(%rip)
5be8(7): mov 0xfffffce0(%rbp),%rax
5bef(3): test %rax,%rax
5bf2(2): jz 0x5(%rip)
5bf4(3): mov $0x1,(%rax)
5bf7(7): mov 0xfffffd80(%rbp),%rdx
5bfe(7): mov 0xfffffd88(%rbp),%rsi
5c05(7): mov 0xfffffcf8(%rbp),%rdi
5c0c(5): call 0x40d4(%rip)
5c11(3): test %rax,%rax
5c14(6): jz 0x56c(%rip)
5c1a(4): movzx 0x2e(%rbx),%ecx
5c1e(7): mov 0xfffffcd8(%rbp),%r8d
5c25(5): mov $0x1,%edx
5c2a(7): mov 0xfffffcf8(%rbp),%rsi
5c31(3): mov %rax,%rdi
5c34(5): call 0xfffff17c(%rip)
5c39(2): test %al,%al
5c3b(6): jnz 0x545(%rip)
5c41(4): cmp $0x0,0x25(%rbx)
5c45(6): jnz 0xe0b(%rip)
5c4b(5): nop 0x0(%rax,%rax,1)
5c50(3): xor %r12d,%r12d
5c53(5): jmp 0x533(%rip)
5c58(8): nop 0x0(%rax,%rax,1)
5c60(5): mov $0xffffff9c,%edx
5c65(3): mov %rsi,%rcx
5c68(6): mov $0x1,%r8d
5c6e(3): mov %rdi,%rsi
5c71(2): mov %edx,%edi
5c73(5): call 0x8d4d(%rip)
5c78(2): test %eax,%eax
5c7a(6): jnz 0xb76(%rip)
5c80(7): mov 0xfffffce0(%rbp),%rax
5c87(3): mov %r12d,%r14d
5c8a(3): test %rax,%rax
5c8d(2): jz 0xb(%rip)
5c8f(3): mov $0x1,(%rax)
5c92(6): nop 0x0(%rax,%rax,1)
5c98(4): cmp $0x0,0x31(%rbx)
5c9c(2): jnz 0x14(%rip)
5c9e(7): mov 0xfffffcf8(%rbp),%r12
5ca5(3): xor %r15d,%r15d
5ca8(5): jmp 0xfffffd53(%rip)
5cad(3): nop (%rax)
5cb0(3): xor %r15d,%r15d
5cb3(5): jmp 0xfffffd95(%rip)
5cb8(8): nop 0x0(%rax,%rax,1)
5cc0(3): xor %r9d,%r9d
5cc3(b): mov $0x0,0xfffffcb0(%rbp)
5cce(3): test %r13b,%r13b
5cd1(6): jz 0xbf(%rip)
5cd7(5): cmp $0x0,0x40(%rbx)
5cdc(6): jz 0xb4(%rip)
5ce2(5): movzx 0x18(%rbx),%r12d
5ce7(3): test %r12b,%r12b
5cea(6): jnz 0xa6(%rip)
5cf0(2): mov (%rbx),%edx
5cf2(2): test %edx,%edx
5cf4(6): jnz 0xc84(%rip)
5cfa(3): test %r9b,%r9b
5cfd(7): lea 0xfffffe10(%rbp),%rdx
5d04(6): jz 0x187c(%rip)
5d0a(3): mov 0x18(%rdx),%eax
5d0d(5): and $0xf000,%eax
5d12(5): cmp $0xa000,%eax
5d17(2): jnz 0x79(%rip)
5d19(4): mov 0x40(%rbx),%rdi
5d1d(7): mov 0xfffffcf8(%rbp),%rsi
5d24(5): call 0x55cc(%rip)
5d29(2): test %al,%al
5d2b(2): jz 0x65(%rip)
5d2d(7): mov 0xfffffcf8(%rbp),%rdx
5d34(5): mov $0x4,%esi
5d39(5): mov $0x1,%edi
5d3e(5): call 0x8872(%rip)
5d43(7): mov 0xfffffcf0(%rbp),%rdx
5d4a(2): xor %edi,%edi
5d4c(5): mov $0x4,%esi
5d51(3): mov %rax,%r13
5d54(5): call 0x885c(%rip)
5d59(7): lea 0x103f8(%rip),%rsi
5d60(3): mov %rax,%rbx
5d63(2): xor %edi,%edi
5d65(5): mov $0x5,%edx
5d6a(5): call 0xffffc9c6(%rip)
5d6f(3): mov %r13,%r8
5d72(3): mov %rax,%rdx
5d75(3): mov %rbx,%rcx
5d78(2): xor %esi,%esi
5d7a(2): xor %edi,%edi
5d7c(2): xor %eax,%eax
5d7e(5): call 0xffffcd92(%rip)
5d83(5): jmp 0x403(%rip)
5d88(8): nop 0x0(%rax,%rax,1)
5d90(4): cmp $0x0,0x2e(%rbx)
5d94(2): jz 0xc(%rip)
5d96(4): cmp $0x0,0x18(%rbx)
5d9a(6): jz 0x5b6(%rip)
5da0(3): test %r15d,%r15d
5da3(6): jz 0x39d(%rip)
5da9(4): cmp $0x0,0x2a(%rbx)
5dad(2): jz 0x18(%rip)
5daf(6): mov 0xfffffcec(%rbp),%eax
5db5(5): and $0xf000,%eax
5dba(5): cmp $0x4000,%eax
5dbf(6): jz 0xbd1(%rip)
5dc5(4): movzx 0x18(%rbx),%eax
5dc9(2): test %al,%al
5dcb(6): jnz 0x4a5(%rip)
5dd1(4): cmp $0x0,0x22(%rbx)
5dd5(6): jnz 0x1bdb(%rip)
5ddb(4): movzx %r14b,%eax
5ddf(b): mov $0x0,0xfffffca8(%rbp)
5dea(6): mov %eax,0xfffffce0(%rbp)
5df0(7): mov 0xfffffcec(%rbp),%r12d
5df7(7): and $0xfff,%r12d
5dfe(4): cmp $0x0,0x2b(%rbx)
5e02(2): jz 0xd(%rip)
5e04(4): mov 0x10(%rbx),%r12d
5e08(7): and $0xfff,%r12d
5e0f(4): cmp $0x0,0x1d(%rbx)
5e13(6): jnz 0x625(%rip)
5e19(7): mov 0xfffffcec(%rbp),%r15d
5e20(7): and $0xf000,%r15d
5e27(7): cmp $0x4000,%r15d
5e2e(6): jz 0xe42(%rip)
5e34(6): mov 0xfffffce0(%rbp),%ecx
5e3a(6): mov 0xfffffcec(%rbp),%edx
5e40(3): mov %rbx,%r8
5e43(7): mov 0xfffffcf8(%rbp),%rsi
5e4a(7): mov 0xfffffcf0(%rbp),%rdi
5e51(5): call 0xfffff68f(%rip)
5e56(2): test %al,%al
5e58(a): mov $0x0,0xfffffca4(%rbp)
5e62(6): jz 0xfffffdee(%rip)
5e68(4): movzx 0x2c(%rbx),%eax
5e6c(2): test %al,%al
5e6e(6): mov %al,0xfffffce0(%rbp)
5e74(6): jnz 0x98c(%rip)
5e7a(4): cmp $0x0,0x17(%rbx)
5e7e(6): jz 0x134a(%rip)
5e84(4): cmp $0x0,0x16(%rbx)
5e88(5): mov $0x1,%edx
5e8d(2): jnz 0xb(%rip)
5e8f(2): xor %edx,%edx
5e91(4): cmp $0x3,0x8(%rbx)
5e95(3): setz %dl
5e98(7): mov 0xfffffcd8(%rbp),%r8d
5e9f(7): mov 0xfffffcf8(%rbp),%rsi
5ea6(2): xor %ecx,%ecx
5ea8(7): mov 0xfffffcf0(%rbp),%rdi
5eaf(5): call 0xffffef01(%rip)
5eb4(2): test %al,%al
5eb6(6): jz 0xa1a(%rip)
5ebc(3): xor %r8d,%r8d
5ebf(7): cmp $0x4000,%r15d
5ec6(4): setnz %r15b
5eca(3): test %r14b,%r14b
5ecd(2): jnz 0x15(%rip)
5ecf(4): movzx 0x14(%rbx),%eax
5ed3(3): xor $0x1,%eax
5ed6(3): and %r15b,%al
5ed9(3): mov %eax,%r12d
5edc(6): jnz 0x1d34(%rip)
5ee2(3): test %r13b,%r13b
5ee5(6): mov $0x1,%r12d
5eeb(2): jz 0x57(%rip)
5eed(7): mov $0x0,0xfffffcd0(%rbp)
5ef4(5): cmp $0x0,0x40(%rbx)
5ef9(2): jz 0x34(%rip)
5efb(7): lea 0xffffff30(%rbp),%r12
5f02(7): mov 0xfffffcf8(%rbp),%rsi
5f09(5): mov $0x1,%edi
5f0e(7): mov %r8b,0xfffffcd8(%rbp)
5f15(3): mov %r12,%rdx
5f18(5): call 0xffffc848(%rip)
5f1d(2): test %eax,%eax
5f1f(8): movzx 0xfffffcd8(%rbp),%r8d
5f27(6): jz 0x204b(%rip)
5f2d(7): movzx 0xfffffcd0(%rbp),%eax
5f34(8): movzx 0xfffffceb(%rbp),%r12d
5f3c(6): mov %al,0xfffffceb(%rbp)
5f42(4): cmp $0x0,0x17(%rbx)
5f46(2): jz 0xb(%rip)
5f48(3): test %r15b,%r15b
5f4b(6): jnz 0x23b(%rip)
5f51(3): test %r8b,%r8b
5f54(6): jnz 0x232(%rip)
5f5a(4): cmp $0x0,0x1f(%rbx)
5f5e(6): jz 0xba(%rip)
5f64(7): mov 0xfffffdc8(%rbp),%rax
5f6b(7): cmp $0x0,0xfffffce0(%rbp)
5f72(7): lea 0xffffff30(%rbp),%rsi
5f79(7): mov 0xfffffcf8(%rbp),%rdi
5f80(7): mov %rax,0xffffff30(%rbp)
5f87(7): mov 0xfffffdd0(%rbp),%rax
5f8e(7): mov %rax,0xffffff38(%rbp)
5f95(7): mov 0xfffffdd8(%rbp),%rax
5f9c(7): mov %rax,0xffffff40(%rbp)
5fa3(7): mov 0xfffffde0(%rbp),%rax
5faa(7): mov %rax,0xffffff48(%rbp)
5fb1(6): jz 0x1faf(%rip)
5fb7(5): call 0xa449(%rip)
5fbc(2): test %eax,%eax
5fbe(2): jz 0x5a(%rip)
5fc0(5): call 0xffffc5e0(%rip)
5fc5(3): cmp $0x26,(%rax)
5fc8(2): jz 0x50(%rip)
5fca(7): mov 0xfffffcf8(%rbp),%rsi
5fd1(5): mov $0x4,%edi
5fd6(5): call 0x86fa(%rip)
5fdb(7): lea 0x106cf(%rip),%rsi
5fe2(2): xor %edi,%edi
5fe4(5): mov $0x5,%edx
5fe9(3): mov %rax,%r13
5fec(5): call 0xffffc744(%rip)
5ff1(3): mov %rax,%r15
5ff4(5): call 0xffffc5ac(%rip)
5ff9(2): mov (%rax),%esi
5ffb(2): xor %edi,%edi
5ffd(2): xor %eax,%eax
5fff(3): mov %r13,%rcx
6002(3): mov %r15,%rdx
6005(5): call 0xffffcb0b(%rip)
600a(4): cmp $0x0,0x24(%rbx)
600e(6): jnz 0xfffffc42(%rip)
6014(4): nop 0x0(%rax)
6018(7): cmp $0x0,0xfffffce0(%rbp)
601f(6): jnz 0x167(%rip)
6025(4): cmp $0x0,0x1d(%rbx)
6029(2): jz 0x5e(%rip)
602b(3): test %r14b,%r14b
602e(2): jnz 0x14(%rip)
6030(6): mov 0xfffffe2c(%rbp),%eax
6036(6): cmp %eax,0xfffffd9c(%rbp)
603c(6): jz 0x26ae(%rip)
6042(7): mov 0xfffffcf8(%rbp),%rsi
6049(7): lea 0xfffffd80(%rbp),%rcx
6050(7): lea 0xfffffe10(%rbp),%r9
6057(4): movzx %r14b,%r8d
605b(5): mov $0xffffffff,%edx
6060(3): mov %rbx,%rdi
6063(5): call 0xfffff69d(%rip)
6068(3): cmp $0xff,%eax
606b(6): jz 0xfffffbe5(%rip)
6071(6): mov 0xfffffcec(%rbp),%ecx
6077(2): mov %ecx,%edx
6079(3): and $0xf1,%dh
607c(2): test %eax,%eax
607e(3): cmovne %ecx,%edx
6081(6): mov %edx,0xfffffcec(%rbp)
6087(a): mov $0x71776119061217535,%rax
6091(4): test %rax,0x18(%rbx)
6095(6): jnz 0x209b(%rip)
609b(4): cmp $0x0,0x2b(%rbx)
609f(6): jnz 0x23f6(%rip)
60a5(4): test %r14b,0x20(%rbx)
60a9(6): jnz 0x26a0(%rip)
60af(6): mov 0xfffffca4(%rbp),%eax
60b5(2): test %eax,%eax
60b7(6): jnz 0x264a(%rip)
60bd(7): cmp $0x0,0xfffffceb(%rbp)
60c4(6): jz 0xc2(%rip)
60ca(6): mov 0xfffffc74(%rbp),%esi
60d0(6): or 0xfffffca4(%rbp),%esi
60d6(7): mov 0xfffffcf8(%rbp),%rdi
60dd(5): call 0xffffca03(%rip)
60e2(2): test %eax,%eax
60e4(6): jz 0xa2(%rip)
60ea(7): mov 0xfffffcf8(%rbp),%rsi
60f1(5): mov $0x4,%edi
60f6(5): call 0x85da(%rip)
60fb(7): lea 0x105c7(%rip),%rsi
6102(5): mov $0x5,%edx
6107(2): xor %edi,%edi
6109(3): mov %rax,%r14
610c(5): call 0xffffc624(%rip)
6111(3): mov %rax,%r13
6114(5): call 0xffffc48c(%rip)
6119(2): mov (%rax),%esi
611b(3): mov %r14,%rcx
611e(3): mov %r13,%rdx
6121(2): xor %edi,%edi
6123(2): xor %eax,%eax
6125(5): call 0xffffc9eb(%rip)
612a(4): cmp $0x0,0x24(%rbx)
612e(6): jnz 0xfffffb22(%rip)
6134(2): jmp 0x52(%rip)
6136(a): nop 0x0(%rax,%rax,1)
6140(4): cmp $0x0,0x18(%rbx)
6144(6): jz 0xfffffc97(%rip)
614a(4): cmp $0x0,0x2e(%rbx)
614e(6): jnz 0xb82(%rip)
6154(4): cmp $0x0,0x21(%rbx)
6158(6): jnz 0xb58(%rip)
615e(7): mov 0xfffffce0(%rbp),%rax
6165(3): test %rax,%rax
6168(2): jz 0x5(%rip)
616a(3): mov $0x1,(%rax)
616d(3): test %r13b,%r13b
6170(2): jz 0x10(%rip)
6172(4): cmp $0x0,0x31(%rbx)
6176(6): jz 0xa72(%rip)
617c(4): nop 0x0(%rax)
6180(6): mov $0x1,%r12d
6186(4): mov 0xffffffc8(%rbp),%rsi
618a(9): xor $0x28,%rsi
6193(3): mov %r12d,%eax
6196(6): jnz 0x2cce(%rip)
619c(4): lea 0xffffffd8(%rbp),%rsp
61a0(1): pop %rbx
61a1(2): pop %r12
61a3(2): pop %r13
61a5(2): pop %r14
61a7(2): pop %r15
61a9(1): pop %rbp
61aa(1): ret near (%rsp)
61ab(5): nop 0x0(%rax,%rax,1)
61b0(5): call 0xffffc3f0(%rip)
61b5(3): mov %rax,%r9
61b8(2): mov (%rax),%eax
61ba(3): cmp $0x28,%eax
61bd(6): jz 0x5d3(%rip)
61c3(3): cmp $0x2,%eax
61c6(6): mov $0x1,%r8d
61cc(6): jnz 0x5ce(%rip)
61d2(3): xor %r9d,%r9d
61d5(4): cmp $0x11,%r15d
61d9(6): jz 0xfffff962(%rip)
61df(3): mov %r8d,%r14d
61e2(b): mov $0x0,0xfffffcb0(%rbp)
61ed(5): jmp 0xfffffae1(%rip)
61f2(6): nop 0x0(%rax,%rax,1)
61f8(4): cmp $0x2,0x8(%rbx)
61fc(6): jz 0xfffff84c(%rip)
6202(5): jmp 0xfffff7f9(%rip)
6207(9): nop 0x0(%rax,%rax,1)
6210(5): call 0xffffc550(%rip)
6215(2): test %eax,%eax
6217(3): mov %r12,%rsi
621a(3): setnz %al
621d(2): test %al,%al
621f(6): jz 0xfffff80d(%rip)
6225(5): mov $0x4,%edi
622a(5): call 0x84a6(%rip)
622f(7): lea 0x1031d(%rip),%rsi
6236(3): mov %rax,%r12
6239(5): mov $0x5,%edx
623e(2): xor %edi,%edi
6240(5): call 0xffffc4f0(%rip)
6245(3): mov %rax,%rbx
6248(5): call 0xffffc358(%rip)
624d(2): mov (%rax),%esi
624f(3): mov %r12,%rcx
6252(3): mov %rbx,%rdx
6255(2): xor %edi,%edi
6257(2): xor %eax,%eax
6259(3): xor %r12d,%r12d
625c(5): call 0xffffc8b4(%rip)
6261(5): jmp 0xffffff25(%rip)
6266(a): nop 0x0(%rax,%rax,1)
6270(8): cmp $0x1,0xfffffd90(%rbp)
6278(6): jz 0x1030(%rip)
627e(4): cmp $0x0,0x22(%rbx)
6282(b): mov $0x0,0xfffffca8(%rbp)
628d(2): jz 0xc(%rip)
628f(4): cmp $0x0,0x17(%rbx)
6293(6): jz 0x7c5(%rip)
6299(4): cmp $0x11,%r15d
629d(2): jnz 0x2e(%rip)
629f(7): mov 0xfffffcf8(%rbp),%rsi
62a6(7): mov 0xfffffcf0(%rbp),%rdi
62ad(5): call 0xffffc8c3(%rip)
62b2(2): test %eax,%eax
62b4(6): jz 0xfffffe96(%rip)
62ba(5): call 0xffffc2e6(%rip)
62bf(3): mov (%rax),%r15d
62c2(3): test %r15d,%r15d
62c5(6): jz 0xfffffe85(%rip)
62cb(4): cmp $0x16,%r15d
62cf(6): jz 0x1021(%rip)
62d5(4): cmp $0x12,%r15d
62d9(6): jnz 0x7cf(%rip)
62df(7): mov 0xfffffcec(%rbp),%r12d
62e6(7): mov 0xfffffcf8(%rbp),%rdi
62ed(7): and $0xf000,%r12d
62f4(7): cmp $0x4000,%r12d
62fb(6): jz 0x1065(%rip)
6301(5): call 0xffffc2af(%rip)
6306(2): test %eax,%eax
6308(2): jz 0x13(%rip)
630a(5): call 0xffffc296(%rip)
630f(3): cmp $0x2,(%rax)
6312(3): mov %rax,%r14
6315(6): jnz 0x1069(%rip)
631b(7): cmp $0x4000,%r12d
6322(3): setnz %dl
6325(3): and 0x2e(%rbx),%dl
6328(3): mov %edx,%r14d
632b(6): jnz 0x1945(%rip)
6331(a): mov $0x1,0xfffffce0(%rbp)
633b(6): mov $0x1,%r14d
6341(5): jmp 0xfffffaaf(%rip)
6346(a): nop 0x0(%rax,%rax,1)
6350(6): mov 0xfffffcec(%rbp),%eax
6356(5): and $0xf000,%eax
635b(5): cmp $0x4000,%eax
6360(6): jz 0xfffffa40(%rip)
6366(7): mov 0xfffffcb0(%rbp),%rdx
636d(7): mov 0xfffffcf8(%rbp),%rsi
6374(7): mov 0xfffffcf0(%rbp),%rdi
637b(5): call 0xffffe975(%rip)
6380(5): jmp 0xfffffa20(%rip)
6385(3): nop (%rax)
6388(7): mov 0xfffffcf0(%rbp),%rsi
638f(3): mov %r10,%rdx
6392(7): mov %r10,0xfffffcd8(%rbp)
6399(5): call 0x4f57(%rip)
639e(2): test %al,%al
63a0(3): mov %eax,%r12d
63a3(6): jnz 0xec5(%rip)
63a9(4): mov 0x48(%rbx),%rdi
63ad(7): mov 0xfffffcd8(%rbp),%r10
63b4(5): jmp 0xfffff6c7(%rip)
63b9(7): nop 0x0(%rax)
63c0(5): movzx 0x18(%rbx),%r9d
63c5(6): mov $0x100,%r8d
63cb(3): test %r9b,%r9b
63ce(6): jnz 0xfffff733(%rip)
63d4(5): movzx 0x2c(%rbx),%r9d
63d9(3): test %r9b,%r9b
63dc(6): jnz 0xfffff725(%rip)
63e2(5): movzx 0x17(%rbx),%r9d
63e7(3): test %r9b,%r9b
63ea(6): jnz 0xfffff717(%rip)
63f0(3): mov (%rbx),%r10d
63f3(6): mov $0x1,%r9d
63f9(3): test %r10d,%r10d
63fc(6): jnz 0xfffff705(%rip)
6402(5): movzx 0x15(%rbx),%r9d
6407(3): xor %r8d,%r8d
640a(3): test %r9b,%r9b
640d(4): setnz %r8b
6411(4): shl/sal $0x8,%r8d
6415(5): jmp 0xfffff6ec(%rip)
641a(6): nop 0x0(%rax,%rax,1)
6420(4): cmp $0x2,0x8(%rbx)
6424(6): jnz 0xfffff69d(%rip)
642a(3): xor %r8d,%r8d
642d(3): xor %r9d,%r9d
6430(5): jmp 0xfffff72f(%rip)
6435(3): nop (%rax)
6438(6): mov 0xfffffce0(%rbp),%ecx
643e(6): mov 0xfffffcec(%rbp),%edx
6444(3): mov %rbx,%r8
6447(7): mov 0xfffffcf8(%rbp),%rsi
644e(7): mov 0xfffffcf0(%rbp),%rdi
6455(5): call 0xfffff08b(%rip)
645a(2): test %al,%al
645c(6): jz 0xfffff7f4(%rip)
6462(7): mov 0xfffffcec(%rbp),%r15d
6469(3): mov %r12d,%eax
646c(3): and $0x3f,%eax
646f(6): mov %eax,0xfffffca4(%rbp)
6475(7): and $0xf000,%r15d
647c(7): cmp $0x4000,%r15d
6483(6): jnz 0xfffff9e5(%rip)
6489(7): mov 0xfffffcd0(%rbp),%rax
6490(7): mov 0xfffffd88(%rbp),%rdx
6497(7): mov 0xfffffd80(%rbp),%rcx
649e(3): test %rax,%rax
64a1(2): jnz 0x1b(%rip)
64a3(5): jmp 0x8fd(%rip)
64a8(8): nop 0x0(%rax,%rax,1)
64b0(3): mov (%rax),%rax
64b3(3): test %rax,%rax
64b6(6): jz 0x8ea(%rip)
64bc(4): cmp %rdx,0x8(%rax)
64c0(2): jnz 0xfffffff0(%rip)
64c2(4): cmp %rcx,0x10(%rax)
64c6(2): jnz 0xffffffea(%rip)
64c8(7): mov 0xfffffcf0(%rbp),%rsi
64cf(5): mov $0x4,%edi
64d4(5): call 0x81fc(%rip)
64d9(7): lea 0xfe60(%rip),%rsi
64e0(3): mov %rax,%r12
64e3(5): mov $0x5,%edx
64e8(2): xor %edi,%edi
64ea(5): call 0xffffc246(%rip)
64ef(3): mov %r12,%rcx
64f2(3): mov %rax,%rdx
64f5(2): xor %esi,%esi
64f7(2): xor %edi,%edi
64f9(2): xor %eax,%eax
64fb(5): call 0xffffc615(%rip)
6500(5): jmp 0x3d0(%rip)
6505(3): nop (%rax)
6508(5): movzx 0x2a(%rbx),%r12d
650d(3): test %r12b,%r12b
6510(6): jnz 0xfffff538(%rip)
6516(7): mov 0xfffffcf0(%rbp),%rsi
651d(5): mov $0x4,%edi
6522(5): call 0x81ae(%rip)
6527(4): cmp $0x0,0x19(%rbx)
652b(3): mov %rax,%r13
652e(5): mov $0x5,%edx
6533(6): jnz 0xd9d(%rip)
6539(7): lea 0xfa70(%rip),%rsi
6540(2): xor %edi,%edi
6542(5): call 0xffffc1ee(%rip)
6547(3): mov %rax,%rdx
654a(3): mov %r13,%rcx
654d(2): xor %esi,%esi
654f(2): xor %edi,%edi
6551(2): xor %eax,%eax
6553(5): call 0xffffc5bd(%rip)
6558(5): jmp 0xfffffc2e(%rip)
655d(3): nop (%rax)
6560(4): cmp $0x0,0x18(%rbx)
6564(6): jnz 0x5dc(%rip)
656a(6): mov 0xfffffcec(%rbp),%eax
6570(5): and $0xf000,%eax
6575(5): cmp $0x4000,%eax
657a(2): jz 0x56(%rip)
657c(3): mov 0x8(%rbx),%eax
657f(3): cmp $0x2,%eax
6582(6): jz 0xfffffbfe(%rip)
6588(3): cmp $0x3,%eax
658b(2): jnz 0x45(%rip)
658d(7): mov 0xfffffcf8(%rbp),%rsi
6594(7): lea 0xfffffe28(%rbp),%rdx
659b(3): mov %rbx,%rdi
659e(7): mov %r9b,0xfffffca8(%rbp)
65a5(7): mov %r8b,0xfffffcb0(%rbp)
65ac(5): call 0xffffe914(%rip)
65b1(2): test %al,%al
65b3(8): movzx 0xfffffcb0(%rbp),%r8d
65bb(8): movzx 0xfffffca8(%rbp),%r9d
65c3(6): jz 0xfffffbbd(%rip)
65c9(7): nop 0x0(%rax)
65d0(3): test %r14b,%r14b
65d3(6): jnz 0xfffffbad(%rip)
65d9(6): mov 0xfffffe28(%rbp),%eax
65df(7): mov 0xfffffcec(%rbp),%r12d
65e6(2): mov %eax,%edx
65e8(7): and $0xf000,%r12d
65ef(6): and $0xf000,%edx
65f5(6): cmp $0x4000,%edx
65fb(6): jz 0x615(%rip)
6601(7): cmp $0x4000,%r12d
6608(6): jz 0x12a0(%rip)
660e(3): test %r13b,%r13b
6611(3): mov (%rbx),%r15d
6614(6): jz 0xb1f(%rip)
661a(4): cmp $0x3,%r15d
661e(6): jnz 0xab2(%rip)
6624(4): cmp $0x0,0x18(%rbx)
6628(6): jnz 0x129f(%rip)
662e(7): mov 0xfffffcf0(%rbp),%rdi
6635(7): mov %r9b,0xfffffca8(%rbp)
663c(7): mov %r8b,0xfffffcb0(%rbp)
6643(5): call 0x4a7d(%rip)
6648(3): cmp $0x2e,(%rax)
664b(3): mov %rax,%r14
664e(8): movzx 0xfffffcb0(%rbp),%r8d
6656(8): movzx 0xfffffca8(%rbp),%r9d
665e(2): jnz 0x29(%rip)
6660(2): xor %eax,%eax
6662(2): xor %edx,%edx
6664(5): cmp $0x2e,0x1(%r14)
6669(3): setz %dl
666c(6): movzx 0x1(%r14,%rdx,1),%edx
6672(2): test %dl,%dl
6674(6): jz 0xad4(%rip)
667a(3): cmp $0x2f,%dl
667d(6): jz 0xacb(%rip)
6683(2): test %al,%al
6685(2): jnz 0x18(%rip)
6687(6): mov 0xfffffe28(%rbp),%eax
668d(5): and $0xf000,%eax
6692(5): cmp $0x4000,%eax
6697(6): jz 0xad0(%rip)
669d(4): cmp $0x3,%r15d
66a1(2): jz 0x68(%rip)
66a3(3): mov %r14,%rdi
66a6(7): mov %r9b,0xfffffca4(%rbp)
66ad(5): call 0xffffc0a3(%rip)
66b2(7): mov 0xfffffcf8(%rbp),%rdi
66b9(7): mov %rax,0xfffffcb0(%rbp)
66c0(5): call 0x4a00(%rip)
66c5(3): mov %rax,%rdi
66c8(7): mov %rax,0xfffffca8(%rbp)
66cf(5): call 0xffffc081(%rip)
66d4(7): mov 0x215e85(%rip),%r15
66db(3): mov %rax,%r12
66de(3): mov %r15,%rdi
66e1(5): call 0xffffc06f(%rip)
66e6(3): mov %rax,%r8
66e9(4): lea 0x0(%r12,%rax,1),%rax
66ed(7): cmp %rax,0xfffffcb0(%rbp)
66f4(7): mov 0xfffffca8(%rbp),%rsi
66fb(8): movzx 0xfffffca4(%rbp),%r9d
6703(6): jz 0x1a5b(%rip)
6709(2): mov (%rbx),%edx
670b(7): mov 0xfffffcf8(%rbp),%rsi
6712(5): mov $0xffffff9c,%edi
6717(7): mov %r9b,0xfffffcb0(%rbp)
671e(5): call 0x4582(%rip)
6723(3): test %rax,%rax
6726(3): mov %rax,%r12
6729(8): movzx 0xfffffcb0(%rbp),%r9d
6731(6): jz 0x1920(%rip)
6737(3): mov %rax,%rdi
673a(7): mov %r9b,0xfffffca8(%rbp)
6741(6): mov $0x1,%r14d
6747(5): call 0xffffc009(%rip)
674c(4): lea 0x1(%rax),%rdx
6750(4): add $0x1f,%rax
6754(3): mov %r12,%rsi
6757(4): and $0xfffffff0,%rax
675b(6): mov $0x11,%r15d
6761(3): sub %rax,%rsp
6764(5): lea 0xf(%rsp),%rdi
6769(4): and $0xfffffff0,%rdi
676d(5): call 0xffffc233(%rip)
6772(3): mov %r12,%rdi
6775(7): mov %rax,0xfffffcb0(%rbp)
677c(5): call 0xffffc504(%rip)
6781(8): movzx 0xfffffca8(%rbp),%r9d
6789(5): jmp 0xfffff545(%rip)
678e(2): nop 
6790(4): cmp $0x0,0x16(%rbx)
6794(6): jnz 0x38c(%rip)
679a(7): mov 0xfffffcf8(%rbp),%rsi
67a1(5): mov $0x4,%edi
67a6(7): mov %r9,0xfffffcf0(%rbp)
67ad(3): xor %r12d,%r12d
67b0(5): call 0x7f20(%rip)
67b5(7): lea 0xfd97(%rip),%rsi
67bc(5): mov $0x5,%edx
67c1(2): xor %edi,%edi
67c3(3): mov %rax,%rbx
67c6(5): call 0xffffbf6a(%rip)
67cb(7): mov 0xfffffcf0(%rbp),%r9
67d2(3): mov %rax,%rdx
67d5(3): mov %rbx,%rcx
67d8(2): xor %edi,%edi
67da(2): xor %eax,%eax
67dc(3): mov (%r9),%esi
67df(5): call 0xffffc331(%rip)
67e4(5): jmp 0xfffff9a2(%rip)
67e9(7): nop 0x0(%rax)
67f0(5): call 0xffffbdb0(%rip)
67f5(3): mov (%rax),%r15d
67f8(5): jmp 0xfffff1d3(%rip)
67fd(3): nop (%rax)
6800(7): mov 0xfffffcf0(%rbp),%rax
6807(3): cmp $0x2f,(%rax)
680a(2): jz 0x3a(%rip)
680c(7): mov 0xfffffcf8(%rbp),%rdi
6813(5): call 0x47cd(%rip)
6818(7): lea 0xf2cd(%rip),%r8
681f(3): mov %rax,%rdi
6822(5): mov $0x2,%ecx
6827(3): mov %rax,%r12
682a(3): mov %r8,%rsi
682d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
682f(3): setnbe %al
6832(2): sbb $0x0,%al
6834(2): test %al,%al
6836(6): jnz 0x12e2(%rip)
683c(3): mov %r12,%rdi
683f(5): call 0xffffc441(%rip)
6844(4): movzx 0x16(%rbx),%ecx
6848(7): mov 0xfffffcf8(%rbp),%rdx
684f(6): mov $0xffffffff,%r8d
6855(7): mov 0xfffffcf0(%rbp),%rdi
685c(5): mov $0xffffff9c,%esi
6861(5): call 0x3a9f(%rip)
6866(3): xor %r8d,%r8d
6869(2): test %eax,%eax
686b(3): mov %eax,%r12d
686e(6): jle 0xfffff651(%rip)
6874(7): mov 0xfffffcf0(%rbp),%rdx
687b(5): mov $0x4,%esi
6880(5): mov $0x1,%edi
6885(5): call 0x7d2b(%rip)
688a(7): mov 0xfffffcf8(%rbp),%rdx
6891(5): mov $0x4,%esi
6896(2): xor %edi,%edi
6898(3): mov %rax,%r13
689b(5): call 0x7d15(%rip)
68a0(7): lea 0xf9f1(%rip),%rsi
68a7(3): mov %rax,%r14
68aa(5): mov $0x5,%edx
68af(2): xor %edi,%edi
68b1(5): call 0xffffbe7f(%rip)
68b6(3): mov %r13,%r8
68b9(3): mov %rax,%rdx
68bc(3): mov %r14,%rcx
68bf(3): mov %r12d,%esi
68c2(2): xor %edi,%edi
68c4(2): xor %eax,%eax
68c6(5): call 0xffffc24a(%rip)
68cb(5): nop 0x0(%rax,%rax,1)
68d0(4): cmp $0x0,0x25(%rbx)
68d4(6): jnz 0x17c(%rip)
68da(8): cmp $0x0,0xfffffca8(%rbp)
68e2(6): jz 0x89e(%rip)
68e8(7): mov 0xfffffcb0(%rbp),%rax
68ef(3): test %rax,%rax
68f2(6): jz 0xfffff35e(%rip)
68f8(7): mov 0xfffffcf8(%rbp),%rsi
68ff(3): mov %rax,%rdi
6902(5): call 0xffffc26e(%rip)
6907(2): test %eax,%eax
6909(6): jnz 0x897(%rip)
690f(4): cmp $0x0,0x2e(%rbx)
6913(6): jz 0xfffff33d(%rip)
6919(7): mov 0xfffffcf8(%rbp),%rdx
6920(5): mov $0x4,%esi
6925(5): mov $0x1,%edi
692a(5): call 0x7c86(%rip)
692f(7): mov 0xfffffcb0(%rbp),%rdx
6936(2): xor %edi,%edi
6938(5): mov $0x4,%esi
693d(3): mov %rax,%r12
6940(5): call 0x7c70(%rip)
6945(7): lea 0xfe2c(%rip),%rsi
694c(3): mov %rax,%rbx
694f(2): xor %edi,%edi
6951(5): mov $0x5,%edx
6956(5): call 0xffffbdda(%rip)
695b(3): mov %r12,%rcx
695e(3): mov %rax,%rsi
6961(3): mov %rbx,%rdx
6964(5): mov $0x1,%edi
6969(2): xor %eax,%eax
696b(5): call 0xffffc145(%rip)
6970(5): jmp 0xfffff2e0(%rip)
6975(3): nop (%rax)
6978(4): cmp $0x0,0x2e(%rbx)
697c(6): jnz 0xfffff9d4(%rip)
6982(3): test %r15d,%r15d
6985(6): jz 0xfffff456(%rip)
698b(5): jmp 0xfffff41e(%rip)
6990(3): test %r13b,%r13b
6993(7): mov 0xfffffd80(%rbp),%rdx
699a(7): mov 0xfffffd88(%rbp),%rdi
69a1(6): jz 0x8af(%rip)
69a7(3): mov %rdi,%rsi
69aa(7): mov 0xfffffcf8(%rbp),%rdi
69b1(5): call 0x332f(%rip)
69b6(7): mov %rax,0xfffffca8(%rbp)
69bd(8): cmp $0x0,0xfffffca8(%rbp)
69c5(6): jz 0x4fb(%rip)
69cb(7): mov 0xfffffca8(%rbp),%rsi
69d2(7): mov 0xfffffcf0(%rbp),%rdi
69d9(5): call 0x8507(%rip)
69de(2): test %al,%al
69e0(6): jz 0xf40(%rip)
69e6(7): mov 0x215b5b(%rip),%rdx
69ed(5): mov $0x4,%esi
69f2(5): mov $0x1,%edi
69f7(5): call 0x7bb9(%rip)
69fc(7): mov 0x215b4d(%rip),%rdx
6a03(5): mov $0x4,%esi
6a08(2): xor %edi,%edi
6a0a(3): mov %rax,%r13
6a0d(5): call 0x7ba3(%rip)
6a12(7): lea 0xf777(%rip),%rsi
6a19(3): mov %rax,%r12
6a1c(5): mov $0x5,%edx
6a21(2): xor %edi,%edi
6a23(5): call 0xffffbd0d(%rip)
6a28(3): mov %r13,%r8
6a2b(3): mov %rax,%rdx
6a2e(3): mov %r12,%rcx
6a31(2): xor %eax,%eax
6a33(2): xor %esi,%esi
6a35(2): xor %edi,%edi
6a37(5): call 0xffffc0d9(%rip)
6a3c(7): mov 0xfffffcc0(%rbp),%rax
6a43(3): mov $0x1,(%rax)
6a46(4): cmp $0x0,0x25(%rbx)
6a4a(6): jz 0xfffffe9e(%rip)
6a50(5): call 0xffffc256(%rip)
6a55(3): nop (%rax)
6a58(8): cmp $0x1,0xfffffd90(%rbp)
6a60(6): jnbe 0x3e8(%rip)
6a66(3): test %r13b,%r13b
6a69(3): mov 0x4(%rbx),%edx
6a6c(2): jz 0xb(%rip)
6a6e(3): cmp $0x3,%edx
6a71(6): jz 0x3d7(%rip)
6a77(3): cmp $0x4,%edx
6a7a(b): mov $0x0,0xfffffca8(%rbp)
6a85(6): jz 0x3c3(%rip)
6a8b(2): test %al,%al
6a8d(6): jnz 0xfffff80c(%rip)
6a93(4): movzx %r14b,%eax
6a97(6): mov %eax,0xfffffce0(%rbp)
6a9d(5): jmp 0xfffff353(%rip)
6aa2(6): nop 0x0(%rax,%rax,1)
6aa8(7): mov 0xfffffcf8(%rbp),%rdx
6aaf(5): mov $0x4,%esi
6ab4(5): mov $0x1,%edi
6ab9(5): call 0x7af7(%rip)
6abe(7): mov 0xfffffcf0(%rbp),%rdx
6ac5(5): mov $0x4,%esi
6aca(2): xor %edi,%edi
6acc(3): mov %rax,%r12
6acf(5): call 0x7ae1(%rip)
6ad4(7): lea 0xfad3(%rip),%rsi
6adb(3): mov %rax,%rbx
6ade(5): mov $0x5,%edx
6ae3(2): xor %edi,%edi
6ae5(5): call 0xffffbc4b(%rip)
6aea(3): mov %r12,%r8
6aed(3): mov %rbx,%rcx
6af0(3): mov %rax,%rdx
6af3(3): mov %r15d,%esi
6af6(2): xor %edi,%edi
6af8(2): xor %eax,%eax
6afa(5): call 0xffffc016(%rip)
6aff(7): mov 0xfffffd80(%rbp),%rsi
6b06(7): mov 0xfffffd88(%rbp),%rdi
6b0d(5): call 0x3103(%rip)
6b12(5): jmp 0xfffff13e(%rip)
6b17(9): nop 0x0(%rax,%rax,1)
6b20(3): xor %r8d,%r8d
6b23(5): jmp 0xfffff6af(%rip)
6b28(8): nop 0x0(%rax,%rax,1)
6b30(4): cmp $0x0,0x18(%rbx)
6b34(6): jz 0xfffffa48(%rip)
6b3a(6): nop 0x0(%rax,%rax,1)
6b40(3): mov 0x8(%rbx),%eax
6b43(3): cmp $0x2,%eax
6b46(2): jz 0x7e(%rip)
6b48(3): cmp $0x3,%eax
6b4b(2): jz 0x4d(%rip)
6b4d(3): cmp $0x4,%eax
6b50(6): jnz 0xfffffa80(%rip)
6b56(4): cmp $0x0,0x2f(%rbx)
6b5a(6): jz 0xfffffa76(%rip)
6b60(6): mov 0xfffffe28(%rbp),%esi
6b66(7): mov 0xfffffcf8(%rbp),%rdi
6b6d(7): mov %r9b,0xfffffca8(%rbp)
6b74(7): mov %r8b,0xfffffcb0(%rbp)
6b7b(5): call 0xffffe035(%rip)
6b80(2): test %al,%al
6b82(8): movzx 0xfffffcb0(%rbp),%r8d
6b8a(8): movzx 0xfffffca8(%rbp),%r9d
6b92(6): jnz 0xfffffa3e(%rip)
6b98(7): mov 0xfffffcf8(%rbp),%rsi
6b9f(7): lea 0xfffffe28(%rbp),%rdx
6ba6(3): mov %rbx,%rdi
6ba9(7): mov %r9b,0xfffffca8(%rbp)
6bb0(7): mov %r8b,0xfffffcb0(%rbp)
6bb7(5): call 0xffffe309(%rip)
6bbc(2): test %al,%al
6bbe(6): jnz 0x1412(%rip)
6bc4(8): cmp $0x0,0xfffffce0(%rbp)
6bcc(6): jz 0xfffff5b4(%rip)
6bd2(7): mov 0xfffffce0(%rbp),%rax
6bd9(3): mov $0x1,(%rax)
6bdc(5): jmp 0xfffff5a4(%rip)
6be1(7): nop 0x0(%rax)
6be8(4): mov 0x40(%rbx),%rdi
6bec(7): mov 0xfffffcf8(%rbp),%rsi
6bf3(7): lea 0xfffffd80(%rbp),%rdx
6bfa(3): mov %r13d,%r12d
6bfd(5): call 0x4663(%rip)
6c02(5): jmp 0xfffff584(%rip)
6c07(9): nop 0x0(%rax,%rax,1)
6c10(7): cmp $0x4000,%r12d
6c17(6): jz 0x519(%rip)
6c1d(4): cmp $0x0,0x18(%rbx)
6c21(2): jz 0xe(%rip)
6c23(3): mov (%rbx),%r15d
6c26(3): test %r15d,%r15d
6c29(6): jnz 0xc9e(%rip)
6c2f(7): mov 0xfffffcf8(%rbp),%rsi
6c36(5): mov $0x4,%edi
6c3b(3): xor %r12d,%r12d
6c3e(5): call 0x7a92(%rip)
6c43(7): lea 0xf42e(%rip),%rsi
6c4a(3): mov %rax,%rbx
6c4d(5): mov $0x5,%edx
6c52(2): xor %edi,%edi
6c54(5): call 0xffffbadc(%rip)
6c59(3): mov %rbx,%rcx
6c5c(3): mov %rax,%rdx
6c5f(2): xor %esi,%esi
6c61(2): xor %edi,%edi
6c63(2): xor %eax,%eax
6c65(5): call 0xffffbeab(%rip)
6c6a(5): jmp 0xfffff51c(%rip)
6c6f(1): nop 
6c70(6): mov 0xfffffce0(%rbp),%ecx
6c76(6): mov 0xfffffcec(%rbp),%edx
6c7c(3): mov %rbx,%r8
6c7f(7): mov 0xfffffcf8(%rbp),%rsi
6c86(7): mov 0xfffffcf0(%rbp),%rdi
6c8d(5): call 0xffffe853(%rip)
6c92(2): test %al,%al
6c94(6): jz 0xffffefbc(%rip)
6c9a(3): mov %r12d,%eax
6c9d(3): and $0x12,%eax
6ca0(6): mov %eax,0xfffffca4(%rbp)
6ca6(5): jmp 0xfffff7e3(%rip)
6cab(5): nop 0x0(%rax,%rax,1)
6cb0(7): mov 0xfffffcf8(%rbp),%rdi
6cb7(3): mov %rbx,%rcx
6cba(5): mov $0x1,%edx
6cbf(2): xor %esi,%esi
6cc1(5): call 0xffffe8ef(%rip)
6cc6(5): jmp 0xfffff498(%rip)
6ccb(5): nop 0x0(%rax,%rax,1)
6cd0(7): lea 0xf8ce(%rip),%rsi
6cd7(5): mov $0x5,%edx
6cdc(2): xor %edi,%edi
6cde(5): call 0xffffba52(%rip)
6ce3(5): mov $0x1,%edi
6ce8(3): mov %rax,%rsi
6ceb(2): xor %eax,%eax
6ced(5): call 0xffffbdc3(%rip)
6cf2(7): mov 0xfffffcb0(%rbp),%rdx
6cf9(7): mov 0xfffffcf8(%rbp),%rsi
6d00(7): mov 0xfffffcf0(%rbp),%rdi
6d07(5): call 0xffffdfe9(%rip)
6d0c(5): jmp 0xfffff448(%rip)
6d11(7): nop 0x0(%rax)
6d18(7): mov 0xfffffe10(%rbp),%rax
6d1f(7): cmp %rax,0xfffffd80(%rbp)
6d26(6): jnz 0xffffee2f(%rip)
6d2c(4): movzx 0x17(%rbx),%eax
6d30(2): test %al,%al
6d32(6): jnz 0x396(%rip)
6d38(4): cmp $0x2,0x4(%rbx)
6d3c(5): mov $0x1,%ecx
6d41(6): mov $0x1,%r15d
6d47(6): jz 0x18e(%rip)
6d4d(7): lea 0xfffffea0(%rbp),%r12
6d54(7): mov 0xfffffcf8(%rbp),%rsi
6d5b(5): mov $0x1,%edi
6d60(7): mov %r9b,0xfffffca8(%rbp)
6d67(7): mov %r8b,0xfffffcb0(%rbp)
6d6e(3): mov %r12,%rdx
6d71(5): call 0xffffb9ef(%rip)
6d76(2): test %eax,%eax
6d78(8): movzx 0xfffffcb0(%rbp),%r8d
6d80(8): movzx 0xfffffca8(%rbp),%r9d
6d88(6): jz 0x100a(%rip)
6d8e(3): xor %r14d,%r14d
6d91(5): jmp 0xffffedce(%rip)
6d96(a): nop 0x0(%rax,%rax,1)
6da0(4): sub $0x30,%rsp
6da4(7): mov 0xfffffcd0(%rbp),%rsi
6dab(5): lea 0xf(%rsp),%rax
6db0(4): and $0xfffffff0,%rax
6db4(3): test %r14b,%r14b
6db7(7): mov %rax,0xfffffcd8(%rbp)
6dbe(3): mov %rsi,(%rax)
6dc1(4): mov %rdx,0x8(%rax)
6dc5(4): mov %rcx,0x10(%rax)
6dc9(2): jnz 0x18(%rip)
6dcb(6): mov 0xfffffe28(%rbp),%eax
6dd1(5): and $0xf000,%eax
6dd6(5): cmp $0x4000,%eax
6ddb(6): jz 0x105d(%rip)
6de1(6): mov 0xfffffca4(%rbp),%esi
6de7(7): mov 0xfffffcf8(%rbp),%r15
6dee(2): not %esi
6df0(3): mov %r15,%rdi
6df3(3): and %r12d,%esi
6df6(5): call 0xffffb81a(%rip)
6dfb(2): test %eax,%eax
6dfd(6): jz 0x7c3(%rip)
6e03(3): mov %r15,%rsi
6e06(5): mov $0x4,%edi
6e0b(5): call 0x78c5(%rip)
6e10(7): lea 0xf7b4(%rip),%rsi
6e17(3): mov %rax,%r13
6e1a(5): mov $0x5,%edx
6e1f(2): xor %edi,%edi
6e21(5): call 0xffffb90f(%rip)
6e26(3): mov %rax,%r12
6e29(5): call 0xffffb777(%rip)
6e2e(2): mov (%rax),%esi
6e30(3): mov %r13,%rcx
6e33(3): mov %r12,%rdx
6e36(2): xor %edi,%edi
6e38(2): xor %eax,%eax
6e3a(5): call 0xffffbcd6(%rip)
6e3f(5): jmp 0xfffffa91(%rip)
6e44(4): nop 0x0(%rax)
6e48(7): mov 0xfffffd80(%rbp),%rdx
6e4f(7): mov 0xfffffd88(%rbp),%rsi
6e56(7): mov 0xfffffcf8(%rbp),%rdi
6e5d(5): call 0x2e83(%rip)
6e62(7): mov %rax,0xfffffca8(%rbp)
6e69(8): cmp $0x0,0xfffffca8(%rbp)
6e71(2): jz 0x4f(%rip)
6e73(6): mov 0xfffffcec(%rbp),%eax
6e79(5): and $0xf000,%eax
6e7e(5): cmp $0x4000,%eax
6e83(6): jz 0xfffffb48(%rip)
6e89(4): movzx 0x2e(%rbx),%ecx
6e8d(7): mov 0xfffffcd8(%rbp),%r8d
6e94(5): mov $0x1,%edx
6e99(7): mov 0xfffffcf8(%rbp),%rsi
6ea0(7): mov 0xfffffca8(%rbp),%rdi
6ea7(5): call 0xffffdf09(%rip)
6eac(2): test %al,%al
6eae(6): jz 0xfffffb98(%rip)
6eb4(5): jmp 0xfffff2cc(%rip)
6eb9(7): nop 0x0(%rax)
6ec0(4): movzx 0x18(%rbx),%eax
6ec4(5): jmp 0xfffffbc7(%rip)
6ec9(7): nop 0x0(%rax)
6ed0(2): xor %ecx,%ecx
6ed2(3): xor %r15d,%r15d
6ed5(6): mov 0xfffffd98(%rbp),%eax
6edb(7): lea 0xfffffd80(%rbp),%rdx
6ee2(5): and $0xf000,%eax
6ee7(5): cmp $0xa000,%eax
6eec(6): jz 0xca7(%rip)
6ef2(2): mov (%rbx),%esi
6ef4(2): test %esi,%esi
6ef6(6): jz 0x4e2(%rip)
6efc(2): test %cl,%cl
6efe(6): jnz 0x1094(%rip)
6f04(4): cmp $0x0,0x18(%rbx)
6f08(6): jnz 0xfffffe86(%rip)
6f0e(4): cmp $0x2,0x4(%rbx)
6f12(6): jz 0xfffffe7c(%rip)
6f18(3): mov 0x18(%rdx),%eax
6f1b(5): and $0xf000,%eax
6f20(5): cmp $0xa000,%eax
6f25(6): jnz 0xfffffe69(%rip)
6f2b(5): mov 0x18(%r12),%eax
6f30(5): and $0xf000,%eax
6f35(5): cmp $0xa000,%eax
6f3a(6): jz 0xfffffe54(%rip)
6f40(7): mov 0xfffffcf8(%rbp),%rdx
6f47(5): mov $0x4,%esi
6f4c(5): mov $0x1,%edi
6f51(5): call 0x765f(%rip)
6f56(7): mov 0xfffffcf0(%rbp),%rdx
6f5d(5): mov $0x4,%esi
6f62(2): xor %edi,%edi
6f64(3): mov %rax,%r12
6f67(5): call 0x7649(%rip)
6f6c(7): lea 0xf605(%rip),%rsi
6f73(3): mov %rax,%rbx
6f76(5): mov $0x5,%edx
6f7b(2): xor %edi,%edi
6f7d(5): call 0xffffb7b3(%rip)
6f82(3): mov %r12,%r8
6f85(3): mov %rax,%rdx
6f88(3): mov %rbx,%rcx
6f8b(2): xor %esi,%esi
6f8d(2): xor %edi,%edi
6f8f(2): xor %eax,%eax
6f91(5): call 0xffffbb7f(%rip)
6f96(5): jmp 0xffffecba(%rip)
6f9b(5): nop 0x0(%rax,%rax,1)
6fa0(4): cmp $0x0,0x18(%rbx)
6fa4(6): jz 0xfffff62c(%rip)
6faa(5): jmp 0xfffffb96(%rip)
6faf(1): nop 
6fb0(5): mov 0x18(%r12),%eax
6fb5(5): and $0xf000,%eax
6fba(5): cmp $0xa000,%eax
6fbf(6): jz 0xffffeba0(%rip)
6fc5(2): test %cl,%cl
6fc7(2): jz 0xe(%rip)
6fc9(6): cmp $0x1,0x10(%r12)
6fcf(6): jnbe 0x13bc(%rip)
6fd5(3): mov 0x18(%rdx),%eax
6fd8(5): and $0xf000,%eax
6fdd(5): cmp $0xa000,%eax
6fe2(2): jz 0x2e(%rip)
6fe4(5): mov 0x8(%r12),%rax
6fe9(4): cmp %rax,0x8(%rdx)
6fed(6): jnz 0xffffeb72(%rip)
6ff3(4): mov (%r12),%rax
6ff7(3): cmp %rax,(%rdx)
6ffa(6): jnz 0xffffeb65(%rip)
7000(4): movzx 0x17(%rbx),%eax
7004(2): test %al,%al
7006(6): jnz 0xc2(%rip)
700c(4): movzx 0x18(%rbx),%esi
7010(3): test %sil,%sil
7013(6): jz 0x3ef(%rip)
7019(6): mov 0xfffffd98(%rbp),%eax
701f(5): and $0xf000,%eax
7024(5): cmp $0xa000,%eax
7029(6): jnz 0x3d9(%rip)
702f(6): cmp $0x1,0x10(%r12)
7035(6): jbe 0x3cd(%rip)
703b(7): mov 0xfffffcf0(%rbp),%rdi
7042(7): mov %r9b,0xfffffca4(%rbp)
7049(7): mov %r8b,0xfffffca8(%rbp)
7050(7): mov %rdx,0xfffffcb0(%rbp)
7057(5): call 0xffffb809(%rip)
705c(3): test %rax,%rax
705f(3): mov %rax,%r15
7062(7): mov 0xfffffcb0(%rbp),%rdx
7069(8): movzx 0xfffffca8(%rbp),%r8d
7071(8): movzx 0xfffffca4(%rbp),%r9d
7079(6): jz 0x389(%rip)
707f(7): mov 0xfffffcf8(%rbp),%rsi
7086(3): mov %rax,%rdi
7089(7): mov %r9b,0xfffffca8(%rbp)
7090(7): mov %r8b,0xfffffcb0(%rbp)
7097(5): call 0x7e49(%rip)
709c(3): mov %r15,%rdi
709f(3): xor $0x1,%eax
70a2(3): mov %eax,%r12d
70a5(5): call 0xffffbbdb(%rip)
70aa(8): movzx 0xfffffcb0(%rbp),%r8d
70b2(8): movzx 0xfffffca8(%rbp),%r9d
70ba(2): xor %eax,%eax
70bc(3): test %r12b,%r12b
70bf(6): jz 0xfffffe81(%rip)
70c5(3): nop (%rax)
70c8(3): mov %eax,%r14d
70cb(5): jmp 0xffffea94(%rip)
70d0(4): mov 0x40(%rbx),%rdi
70d4(7): mov 0xfffffcf8(%rbp),%rsi
70db(7): lea 0xfffffe10(%rbp),%rdx
70e2(7): mov %r9b,0xfffffca8(%rbp)
70e9(7): mov %r8b,0xfffffcb0(%rbp)
70f0(5): call 0x4200(%rip)
70f5(2): test %al,%al
70f7(8): movzx 0xfffffcb0(%rbp),%r8d
70ff(8): movzx 0xfffffca8(%rbp),%r9d
7107(6): jnz 0x134e(%rip)
710d(7): cmp $0x4000,%r12d
7114(2): jz 0x1c(%rip)
7116(6): mov 0xfffffe28(%rbp),%eax
711c(2): mov %eax,%edx
711e(6): and $0xf000,%edx
7124(6): cmp $0x4000,%edx
712a(6): jz 0xfffffaf3(%rip)
7130(3): mov (%rbx),%r15d
7133(4): movzx 0x18(%rbx),%eax
7137(2): test %al,%al
7139(6): jnz 0x9b7(%rip)
713f(3): test %r15d,%r15d
7142(6): jnz 0xfffff4ec(%rip)
7148(6): mov 0xfffffe28(%rbp),%edx
714e(6): and $0xf000,%edx
7154(6): cmp $0x4000,%edx
715a(4): setz %r12b
715e(3): or %al,%r12b
7161(6): jz 0xb9a(%rip)
7167(3): mov %r8d,%r14d
716a(6): mov $0x11,%r15d
7170(b): mov $0x0,0xfffffcb0(%rbp)
717b(5): jmp 0xffffeb53(%rip)
7180(7): mov 0xfffffd80(%rbp),%rsi
7187(7): mov 0xfffffd88(%rbp),%rdi
718e(5): call 0x2a82(%rip)
7193(5): jmp 0xfffff755(%rip)
7198(8): nop 0x0(%rax,%rax,1)
71a0(7): mov 0xfffffcf8(%rbp),%rsi
71a7(5): mov $0x4,%edi
71ac(5): call 0x7524(%rip)
71b1(5): mov $0x5,%edx
71b6(3): mov %rax,%r12
71b9(7): lea 0xf5a4(%rip),%rsi
71c0(5): jmp 0xfffff07e(%rip)
71c5(3): nop (%rax)
71c8(7): cmp $0x8000,%r15d
71cf(6): jz 0x801(%rip)
71d5(7): cmp $0xa000,%r15d
71dc(4): setnz %r8b
71e0(4): and 0x14(%rbx),%r8b
71e4(6): jnz 0x7ec(%rip)
71ea(7): cmp $0x1000,%r15d
71f1(6): jz 0x10c1(%rip)
71f7(3): mov %r15d,%eax
71fa(3): and $0xbf,%ah
71fd(5): cmp $0x2000,%eax
7202(6): jz 0xcea(%rip)
7208(7): cmp $0xc000,%r15d
720f(6): jz 0xcdd(%rip)
7215(7): cmp $0xa000,%r15d
721c(6): jz 0x1384(%rip)
7222(7): mov 0xfffffcf0(%rbp),%rsi
7229(5): mov $0x4,%edi
722e(5): call 0x74a2(%rip)
7233(5): mov $0x5,%edx
7238(3): mov %rax,%r12
723b(7): lea 0xf509(%rip),%rsi
7242(5): jmp 0xfffff2a6(%rip)
7247(9): nop 0x0(%rax,%rax,1)
7250(3): mov %rdx,%rsi
7253(5): call 0x2a2d(%rip)
7258(7): mov %rax,0xfffffca8(%rbp)
725f(5): jmp 0xfffff75e(%rip)
7264(4): nop 0x0(%rax)
7268(7): mov 0xfffffcf0(%rbp),%rsi
726f(5): mov $0x4,%edi
7274(5): call 0x745c(%rip)
7279(7): lea 0xed58(%rip),%rsi
7280(3): mov %rax,%rbx
7283(2): xor %edi,%edi
7285(5): mov $0x5,%edx
728a(5): call 0xffffb4a6(%rip)
728f(3): mov %rbx,%rcx
7292(3): mov %rax,%rdx
7295(2): xor %esi,%esi
7297(2): xor %edi,%edi
7299(2): xor %eax,%eax
729b(5): call 0xffffb875(%rip)
72a0(5): jmp 0xffffeee6(%rip)
72a5(3): nop (%rax)
72a8(7): mov 0xfffffd80(%rbp),%rsi
72af(7): mov 0xfffffd88(%rbp),%rdi
72b6(5): call 0x29ca(%rip)
72bb(7): mov %rax,0xfffffca8(%rbp)
72c2(5): jmp 0xfffffba7(%rip)
72c7(9): nop 0x0(%rax,%rax,1)
72d0(7): lea 0xf28b(%rip),%rsi
72d7(2): xor %edi,%edi
72d9(5): call 0xffffb457(%rip)
72de(3): mov %rax,%rdx
72e1(5): jmp 0xfffff269(%rip)
72e6(a): nop 0x0(%rax,%rax,1)
72f0(7): mov 0x215251(%rip),%rdx
72f7(5): mov $0x4,%esi
72fc(5): mov $0x1,%edi
7301(5): call 0x72af(%rip)
7306(7): mov 0x215243(%rip),%rdx
730d(5): mov $0x4,%esi
7312(2): xor %edi,%edi
7314(3): mov %rax,%r12
7317(5): call 0x7299(%rip)
731c(7): lea 0xef05(%rip),%rsi
7323(3): mov %rax,%rbx
7326(5): mov $0x5,%edx
732b(2): xor %edi,%edi
732d(5): call 0xffffb403(%rip)
7332(3): mov %r12,%r8
7335(3): mov %rax,%rdx
7338(3): mov %rbx,%rcx
733b(2): xor %eax,%eax
733d(2): xor %esi,%esi
733f(2): xor %edi,%edi
7341(5): call 0xffffb7cf(%rip)
7346(7): mov 0xfffffcc0(%rbp),%rax
734d(6): mov $0x1,%r12d
7353(3): mov $0x1,(%rax)
7356(5): jmp 0xffffee30(%rip)
735b(5): nop 0x0(%rax,%rax,1)
7360(5): call 0xffffb3c0(%rip)
7365(2): test %eax,%eax
7367(6): jz 0xffffefca(%rip)
736d(5): call 0xffffb233(%rip)
7372(3): cmp $0x2,(%rax)
7375(3): mov %rax,%r14
7378(6): jz 0xffffefb9(%rip)
737e(7): mov 0xfffffcf8(%rbp),%rdx
7385(5): mov $0x4,%esi
738a(5): mov $0x1,%edi
738f(5): call 0x7221(%rip)
7394(7): mov 0xfffffcf0(%rbp),%rdx
739b(5): mov $0x4,%esi
73a0(2): xor %edi,%edi
73a2(3): mov %rax,%r12
73a5(5): call 0x720b(%rip)
73aa(7): lea 0xeea7(%rip),%rsi
73b1(3): mov %rax,%rbx
73b4(5): mov $0x5,%edx
73b9(2): xor %edi,%edi
73bb(5): call 0xffffb375(%rip)
73c0(3): mov %r12,%r8
73c3(3): mov %rbx,%rcx
73c6(3): mov %rax,%rdx
73c9(3): mov (%r14),%esi
73cc(5): jmp 0xfffff72a(%rip)
73d1(7): nop 0x0(%rax)
73d8(4): movzx 0x18(%rbx),%esi
73dc(3): test %sil,%sil
73df(6): jnz 0xfffffbd1(%rip)
73e5(4): cmp $0x0,0x15(%rbx)
73e9(6): jnz 0xfffffbc7(%rip)
73ef(3): mov 0x18(%rdx),%eax
73f2(5): and $0xf000,%eax
73f7(5): cmp $0xa000,%eax
73fc(6): jnz 0xfe9(%rip)
7402(4): cmp $0x0,0x2c(%rbx)
7406(2): jz 0x17(%rip)
7408(5): mov 0x18(%r12),%eax
740d(5): and $0xf000,%eax
7412(5): cmp $0xa000,%eax
7417(6): jz 0xffffe748(%rip)
741d(4): cmp $0x2,0x4(%rbx)
7421(6): jnz 0xfffffb1f(%rip)
7427(3): mov 0x18(%rdx),%eax
742a(5): and $0xf000,%eax
742f(5): cmp $0xa000,%eax
7434(6): jz 0x1a78(%rip)
743a(4): movdqa (%rdx),%xmm0
743e(7): movaps %xmm0,0xffffff30(%rbp)
7445(5): movdqa 0x10(%rdx),%xmm0
744a(7): movaps %xmm0,0xffffff40(%rbp)
7451(5): movdqa 0x20(%rdx),%xmm0
7456(7): movaps %xmm0,0xffffff50(%rbp)
745d(5): movdqa 0x30(%rdx),%xmm0
7462(7): movaps %xmm0,0xffffff60(%rbp)
7469(5): movdqa 0x40(%rdx),%xmm0
746e(7): movaps %xmm0,0xffffff70(%rbp)
7475(5): movdqa 0x50(%rdx),%xmm0
747a(4): movaps %xmm0,0xffffff80(%rbp)
747e(5): movdqa 0x60(%rdx),%xmm0
7483(4): movaps %xmm0,0xffffff90(%rbp)
7487(5): movdqa 0x70(%rdx),%xmm0
748c(4): movaps %xmm0,0xffffffa0(%rbp)
7490(8): movdqa 0x80(%rdx),%xmm0
7498(4): movaps %xmm0,0xffffffb0(%rbp)
749c(5): mov 0x18(%r12),%eax
74a1(5): and $0xf000,%eax
74a6(5): cmp $0xa000,%eax
74ab(6): jz 0x19be(%rip)
74b1(6): movdqa (%r12),%xmm0
74b7(7): movaps %xmm0,0xfffffea0(%rbp)
74be(7): movdqa 0x10(%r12),%xmm0
74c5(7): movaps %xmm0,0xfffffeb0(%rbp)
74cc(7): movdqa 0x20(%r12),%xmm0
74d3(7): movaps %xmm0,0xfffffec0(%rbp)
74da(7): movdqa 0x30(%r12),%xmm0
74e1(7): movaps %xmm0,0xfffffed0(%rbp)
74e8(7): movdqa 0x40(%r12),%xmm0
74ef(7): movaps %xmm0,0xfffffee0(%rbp)
74f6(7): movdqa 0x50(%r12),%xmm0
74fd(7): movaps %xmm0,0xfffffef0(%rbp)
7504(7): movdqa 0x60(%r12),%xmm0
750b(7): movaps %xmm0,0xffffff00(%rbp)
7512(7): movdqa 0x70(%r12),%xmm0
7519(7): movaps %xmm0,0xffffff10(%rbp)
7520(a): movdqa 0x80(%r12),%xmm0
752a(7): movaps %xmm0,0xffffff20(%rbp)
7531(7): mov 0xfffffea8(%rbp),%rax
7538(7): cmp %rax,0xffffff38(%rbp)
753f(6): jnz 0xffffe620(%rip)
7545(7): mov 0xfffffea0(%rbp),%rax
754c(7): cmp %rax,0xffffff30(%rbp)
7553(6): jnz 0xffffe60c(%rip)
7559(4): cmp $0x0,0x17(%rbx)
755d(6): jz 0xfffff9e3(%rip)
7563(5): mov 0x18(%r12),%eax
7568(5): and $0xf000,%eax
756d(5): cmp $0xa000,%eax
7572(4): setnz %r14b
7576(5): jmp 0xffffe5e9(%rip)
757b(5): nop 0x0(%rax,%rax,1)
7580(7): lea 0xffffff30(%rbp),%rcx
7587(7): mov 0xfffffcf8(%rbp),%rsi
758e(5): mov $0x1,%edi
7593(3): mov %rcx,%rdx
7596(7): mov %rcx,0xfffffca8(%rbp)
759d(5): call 0xffffb1c3(%rip)
75a2(2): test %eax,%eax
75a4(6): jnz 0xffffe7ec(%rip)
75aa(7): mov 0xfffffca8(%rbp),%rcx
75b1(3): mov %rcx,%rdx
75b4(5): jmp 0xffffe756(%rip)
75b9(7): nop 0x0(%rax)
75c0(7): mov 0xfffffcf8(%rbp),%rsi
75c7(7): lea 0xfffffe10(%rbp),%rdx
75ce(5): mov $0x1,%edi
75d3(5): call 0xffffb18d(%rip)
75d8(2): test %eax,%eax
75da(6): jnz 0xa0b(%rip)
75e0(7): mov 0xfffffe28(%rbp),%r12d
75e7(7): mov $0x0,0xfffffcd0(%rbp)
75ee(3): mov %r12d,%eax
75f1(5): and $0x1c0,%eax
75f6(5): cmp $0x1c0,%eax
75fb(2): jz 0x2d(%rip)
75fd(7): mov 0xfffffcf8(%rbp),%rdi
7604(3): mov %r12d,%esi
7607(6): or $0x1c0,%esi
760d(5): call 0xffffb4d3(%rip)
7612(2): test %eax,%eax
7614(7): mov %r12d,0xfffffc74(%rbp)
761b(7): mov $0x1,0xfffffcd0(%rbp)
7622(6): jnz 0x1021(%rip)
7628(7): mov 0xfffffcc8(%rbp),%rax
762f(3): cmp $0x0,(%rax)
7632(6): jz 0xdfa(%rip)
7638(4): cmp $0x0,0x2e(%rbx)
763c(2): jz 0x4c(%rip)
763e(4): cmp $0x0,0x18(%rbx)
7642(6): jz 0xeab(%rip)
7648(7): mov 0xfffffcf8(%rbp),%rsi
764f(5): mov $0x4,%edi
7654(5): call 0x707c(%rip)
7659(7): lea 0xefa1(%rip),%rsi
7660(3): mov %rax,%r12
7663(5): mov $0x5,%edx
7668(2): xor %edi,%edi
766a(5): call 0xffffb0c6(%rip)
766f(3): mov %r12,%rdx
7672(3): mov %rax,%rsi
7675(5): mov $0x1,%edi
767a(2): xor %eax,%eax
767c(5): call 0xffffb434(%rip)
7681(7): nop 0x0(%rax)
7688(7): mov 0xfffffcb8(%rbp),%rax
768f(3): test %rax,%rax
7692(4): setnz %r12b
7696(4): and 0x1c(%rbx),%r12b
769a(6): jnz 0x7e1(%rip)
76a0(4): movdqu (%rbx),%xmm0
76a4(5): mov $0x2,%esi
76a9(7): mov 0xfffffcf0(%rbp),%rdi
76b0(7): movaps %xmm0,0xfffffd10(%rbp)
76b7(5): movdqu 0x10(%rbx),%xmm0
76bc(7): movaps %xmm0,0xfffffd20(%rbp)
76c3(5): movdqu 0x20(%rbx),%xmm0
76c8(7): movaps %xmm0,0xfffffd30(%rbp)
76cf(5): movdqu 0x30(%rbx),%xmm0
76d4(7): movaps %xmm0,0xfffffd40(%rbp)
76db(5): movdqu 0x40(%rbx),%xmm0
76e0(7): movaps %xmm0,0xfffffd50(%rbp)
76e7(5): call 0x7bc9(%rip)
76ec(3): test %rax,%rax
76ef(7): mov %rax,0xfffffc98(%rbp)
76f6(6): jz 0xe62(%rip)
76fc(4): cmp $0x3,0x4(%rbx)
7700(2): jnz 0xc(%rip)
7702(a): mov $0x2,0xfffffd14(%rbp)
770c(7): mov 0xfffffc98(%rbp),%rax
7713(3): cmp $0x0,(%rax)
7716(6): jz 0x153f(%rip)
771c(7): lea 0xfffffd10(%rbp),%rax
7723(7): lea 0xfffffd80(%rbp),%r10
772a(7): mov %r13d,0xfffffc80(%rbp)
7731(7): mov 0xfffffc98(%rbp),%r15
7738(7): mov 0xfffffcc0(%rbp),%r13
773f(6): mov $0x1,%r12d
7745(7): mov %rax,0xfffffcb8(%rbp)
774c(7): lea 0xfffffd07(%rbp),%rax
7753(7): mov $0x0,0xfffffceb(%rbp)
775a(7): mov %r14b,0xfffffc90(%rbp)
7761(7): mov %rbx,0xfffffc88(%rbp)
7768(7): mov %rax,0xfffffcb0(%rbp)
776f(7): lea 0xfffffd08(%rbp),%rax
7776(7): mov %r10,0xfffffcc0(%rbp)
777d(7): mov %rax,0xfffffca8(%rbp)
7784(2): jmp 0x30(%rip)
7786(a): nop 0x0(%rax,%rax,1)
7790(7): movzx 0xfffffd08(%rbp),%eax
7797(3): mov %r15,%rdi
779a(6): or %al,0xfffffceb(%rbp)
77a0(5): call 0xffffafb0(%rip)
77a5(5): lea 0x1(%r15,%rax,1),%r15
77aa(4): cmp $0x0,(%r15)
77ae(6): jz 0xa3(%rip)
77b4(7): mov 0xfffffcf0(%rbp),%rdi
77bb(2): xor %edx,%edx
77bd(3): mov %r15,%rsi
77c0(5): call 0x3e20(%rip)
77c5(7): mov 0xfffffcf8(%rbp),%rdi
77cc(2): xor %edx,%edx
77ce(3): mov %r15,%rsi
77d1(3): mov %rax,%rbx
77d4(5): call 0x3e0c(%rip)
77d9(3): mov %rax,%r14
77dc(7): mov 0xfffffcc8(%rbp),%rax
77e3(7): mov 0xfffffcb8(%rbp),%r9
77ea(7): mov 0xfffffcd8(%rbp),%r8
77f1(7): mov 0xfffffcc0(%rbp),%rcx
77f8(3): mov %r14,%rsi
77fb(6): mov 0xfffffce0(%rbp),%edx
7801(3): mov %rbx,%rdi
7804(3): movzx (%rax),%eax
7807(2): push $0x0
7809(6): push 0xfffffcb0(%rbp)
780f(6): push 0xfffffca8(%rbp)
7815(2): push $0x0
7817(6): mov %al,0xfffffd08(%rbp)
781d(5): call 0xffffe123(%rip)
7822(3): and %eax,%r12d
7825(7): movzx 0xfffffd07(%rbp),%eax
782c(4): add $0x20,%rsp
7830(4): or %al,0x0(%r13)
7834(3): mov %r14,%rdi
7837(5): call 0xffffb449(%rip)
783c(3): mov %rbx,%rdi
783f(5): call 0xffffb441(%rip)
7844(7): cmp $0x0,0xfffffd07(%rbp)
784b(6): jz 0xffffff45(%rip)
7851(8): movzx 0xfffffc90(%rbp),%r14d
7859(7): mov 0xfffffc88(%rbp),%rbx
7860(7): mov 0xfffffc80(%rbp),%r13d
7867(7): mov 0xfffffc98(%rbp),%rdi
786e(5): call 0xffffb412(%rip)
7873(7): movzx 0xfffffceb(%rbp),%ecx
787a(7): mov 0xfffffcc8(%rbp),%rax
7881(2): mov %cl,(%rax)
7883(3): test %r13b,%r13b
7886(6): jnz 0x5dc(%rip)
788c(7): movzx 0xfffffcd0(%rbp),%eax
7893(7): mov $0x0,0xfffffce0(%rbp)
789a(6): mov %al,0xfffffceb(%rbp)
78a0(5): jmp 0xffffe6ba(%rip)
78a5(3): nop (%rax)
78a8(4): cmp $0x0,0x18(%rbx)
78ac(6): jz 0x40f(%rip)
78b2(3): mov (%rbx),%r15d
78b5(3): test %r15d,%r15d
78b8(6): jz 0x403(%rip)
78be(3): test %r13b,%r13b
78c1(6): jnz 0xffffed59(%rip)
78c7(6): mov 0xfffffd98(%rbp),%edx
78cd(6): and $0xf000,%edx
78d3(6): cmp $0x4000,%edx
78d9(6): jz 0x5bd(%rip)
78df(7): mov 0xfffffcf0(%rbp),%rdi
78e6(7): mov %r9b,0xfffffca8(%rbp)
78ed(7): mov %r8b,0xfffffcb0(%rbp)
78f4(5): call 0x37cc(%rip)
78f9(3): cmp $0x2e,(%rax)
78fc(3): mov %rax,%r14
78ff(8): movzx 0xfffffcb0(%rbp),%r8d
7907(8): movzx 0xfffffca8(%rbp),%r9d
790f(6): jnz 0xffffed8e(%rip)
7915(5): mov $0x1,%eax
791a(5): jmp 0xffffed48(%rip)
791f(1): nop 
7920(7): mov 0xfffffca8(%rbp),%rsi
7927(7): mov 0xfffffcf8(%rbp),%rdi
792e(5): call 0x75b2(%rip)
7933(2): test %al,%al
7935(6): jnz 0x6d5(%rip)
793b(3): mov 0x4(%rbx),%eax
793e(3): cmp $0x4,%eax
7941(6): jz 0xfffff57f(%rip)
7947(3): cmp $0x3,%eax
794a(2): jnz 0xb(%rip)
794c(3): test %r13b,%r13b
794f(6): jnz 0xfffff571(%rip)
7955(7): mov 0xfffffca8(%rbp),%rdx
795c(5): mov $0x4,%esi
7961(5): mov $0x1,%edi
7966(5): call 0x6c4a(%rip)
796b(7): mov 0xfffffcf8(%rbp),%rdx
7972(2): xor %edi,%edi
7974(5): mov $0x4,%esi
7979(3): mov %rax,%r13
797c(5): call 0x6c34(%rip)
7981(7): lea 0xe870(%rip),%rsi
7988(3): mov %rax,%r12
798b(2): xor %edi,%edi
798d(5): mov $0x5,%edx
7992(5): call 0xffffad9e(%rip)
7997(3): mov %r13,%r8
799a(3): mov %rax,%rdx
799d(3): mov %r12,%rcx
79a0(2): xor %esi,%esi
79a2(2): xor %edi,%edi
79a4(2): xor %eax,%eax
79a6(5): call 0xffffb16a(%rip)
79ab(5): jmp 0xfffff09b(%rip)
79b0(4): cmp $0x0,0x17(%rbx)
79b4(6): jz 0xfffff0a4(%rip)
79ba(b): mov $0x0,0xfffffca8(%rbp)
79c5(5): jmp 0xfffff0ce(%rip)
79ca(6): nop 0x0(%rax,%rax,1)
79d0(6): mov 0xfffffd98(%rbp),%eax
79d6(2): xor %esi,%esi
79d8(4): cmp $0x2,0x4(%rbx)
79dc(7): mov 0xfffffcf0(%rbp),%rdi
79e3(6): mov %eax,0xfffffcc0(%rbp)
79e9(4): movzx 0x23(%rbx),%eax
79ed(4): setz %sil
79f1(3): shl/sal $0x11,%esi
79f4(6): mov %al,0xfffffcc8(%rbp)
79fa(2): xor %eax,%eax
79fc(5): call 0x37f4(%rip)
7a01(2): test %eax,%eax
7a03(6): mov %eax,0xfffffce0(%rbp)
7a09(6): js 0x702(%rip)
7a0f(6): mov 0xfffffce0(%rbp),%esi
7a15(7): lea 0xfffffea0(%rbp),%rdx
7a1c(5): mov $0x1,%edi
7a21(5): call 0xffffb00f(%rip)
7a26(2): test %eax,%eax
7a28(6): jnz 0x91f(%rip)
7a2e(7): mov 0xfffffea8(%rbp),%rax
7a35(7): cmp %rax,0xfffffd88(%rbp)
7a3c(2): jnz 0x16(%rip)
7a3e(7): mov 0xfffffea0(%rbp),%rax
7a45(7): cmp %rax,0xfffffd80(%rbp)
7a4c(6): jz 0xd2a(%rip)
7a52(7): mov 0xfffffcf0(%rbp),%rsi
7a59(5): mov $0x4,%edi
7a5e(5): call 0x6c72(%rip)
7a63(7): lea 0xe856(%rip),%rsi
7a6a(3): mov %rax,%r12
7a6d(5): mov $0x5,%edx
7a72(2): xor %edi,%edi
7a74(5): call 0xffffacbc(%rip)
7a79(3): mov %r12,%rcx
7a7c(3): mov %rax,%rdx
7a7f(2): xor %esi,%esi
7a81(2): xor %edi,%edi
7a83(2): xor %eax,%eax
7a85(5): call 0xffffb08b(%rip)
7a8a(3): xor %r8d,%r8d
7a8d(b): mov $0x0,0xfffffcd0(%rbp)
7a98(6): mov 0xfffffce0(%rbp),%edi
7a9e(7): mov %r8b,0xfffffcd8(%rbp)
7aa5(5): call 0xffffadcb(%rip)
7aaa(2): test %eax,%eax
7aac(8): movzx 0xfffffcd8(%rbp),%r8d
7ab4(6): js 0xa53(%rip)
7aba(7): mov 0xfffffcd0(%rbp),%rdi
7ac1(7): mov %r8b,0xfffffcd8(%rbp)
7ac8(5): call 0xffffb1b8(%rip)
7acd(8): movzx 0xfffffcd8(%rbp),%r8d
7ad5(7): mov $0x0,0xfffffce0(%rbp)
7adc(3): test %r8b,%r8b
7adf(6): jnz 0xffffe3e0(%rip)
7ae5(5): jmp 0xffffedeb(%rip)
7aea(6): nop 0x0(%rax,%rax,1)
7af0(6): mov 0xfffffd98(%rbp),%eax
7af6(5): and $0xf000,%eax
7afb(5): cmp $0x4000,%eax
7b00(6): jz 0x390(%rip)
7b06(3): test %r15d,%r15d
7b09(6): jz 0xfffff65e(%rip)
7b0f(5): jmp 0xfffffdd0(%rip)
7b14(4): nop 0x0(%rax)
7b18(7): lea 0xfffffea0(%rbp),%rdx
7b1f(3): mov %r8,%rsi
7b22(5): mov $0x1,%edi
7b27(5): call 0xffffaeb9(%rip)
7b2c(2): test %eax,%eax
7b2e(6): jnz 0xffffed0e(%rip)
7b34(7): lea 0xffffff30(%rbp),%rdx
7b3b(3): mov %r12,%rsi
7b3e(5): mov $0x1,%edi
7b43(5): call 0xffffae9d(%rip)
7b48(2): test %eax,%eax
7b4a(6): jnz 0xffffecf2(%rip)
7b50(7): mov 0xffffff38(%rbp),%rax
7b57(7): cmp %rax,0xfffffea8(%rbp)
7b5e(6): jz 0x1109(%rip)
7b64(3): mov %r12,%rdi
7b67(5): call 0xffffb119(%rip)
7b6c(7): mov 0xfffffcf8(%rbp),%rdx
7b73(5): mov $0x3,%esi
7b78(2): xor %edi,%edi
7b7a(5): call 0x6c56(%rip)
7b7f(5): mov $0x5,%edx
7b84(3): mov %rax,%r12
7b87(7): lea 0xe7da(%rip),%rsi
7b8e(5): jmp 0xffffe95a(%rip)
7b93(6): mov 0xfffffe28(%rbp),%eax
7b99(7): lea 0xfffffd80(%rbp),%rdx
7ba0(5): and $0xf000,%eax
7ba5(5): cmp $0xa000,%eax
7baa(6): jnz 0xfffff348(%rip)
7bb0(7): mov 0xfffffcf8(%rbp),%rsi
7bb7(7): mov 0xfffffcf0(%rbp),%rdi
7bbe(7): mov %r9b,0xfffffca8(%rbp)
7bc5(7): mov %r8b,0xfffffcb0(%rbp)
7bcc(5): call 0x7314(%rip)
7bd1(2): test %al,%al
7bd3(6): jnz 0xfffff36d(%rip)
7bd9(2): mov (%rbx),%edi
7bdb(8): movzx 0xfffffcb0(%rbp),%r8d
7be3(8): movzx 0xfffffca8(%rbp),%r9d
7beb(2): test %edi,%edi
7bed(6): jnz 0xfffff1a1(%rip)
7bf3(3): test %r15d,%r15d
7bf6(6): jz 0xfffff198(%rip)
7bfc(5): movzx 0x18(%rbx),%r12d
7c01(5): mov $0x1,%eax
7c06(4): xor $0x1,%r12d
7c0a(5): jmp 0xfffff4b2(%rip)
7c0f(1): nop 
7c10(3): mov %eax,%r15d
7c13(a): mov $0x280375465148160,%rax
7c1d(4): test %rax,0x20(%rbx)
7c21(6): jz 0xffffe2c1(%rip)
7c27(4): movzx 0x25(%rbx),%esi
7c2b(7): mov 0xfffffcf8(%rbp),%rdi
7c32(2): xor %edx,%edx
7c34(3): mov %rbx,%rcx
7c37(7): mov %r8b,0xfffffcd8(%rbp)
7c3e(5): call 0xffffd972(%rip)
7c43(2): test %al,%al
7c45(3): mov %eax,%r15d
7c48(8): movzx 0xfffffcd8(%rbp),%r8d
7c50(6): jnz 0xffffe292(%rip)
7c56(5): movzx 0x26(%rbx),%r14d
7c5b(3): test %r14b,%r14b
7c5e(6): jnz 0xffffec72(%rip)
7c64(3): mov %r12d,%r15d
7c67(5): jmp 0xffffe27b(%rip)
7c6c(4): nop 0x0(%rax)
7c70(7): lea 0xe94c(%rip),%rsi
7c77(5): mov $0x5,%edx
7c7c(2): xor %edi,%edi
7c7e(5): call 0xffffaab2(%rip)
7c83(5): mov $0x1,%edi
7c88(3): mov %rax,%rsi
7c8b(2): xor %eax,%eax
7c8d(5): call 0xffffae23(%rip)
7c92(7): mov 0xfffffcb0(%rbp),%rdx
7c99(7): mov 0xfffffcf8(%rbp),%rsi
7ca0(7): mov 0xfffffcf0(%rbp),%rdi
7ca7(5): call 0xffffd049(%rip)
7cac(a): mov $0x1,0xfffffce0(%rbp)
7cb6(5): jmp 0xffffe13a(%rip)
7cbb(7): mov 0xfffffcf0(%rbp),%rdx
7cc2(5): mov $0x4,%esi
7cc7(5): mov $0x1,%edi
7ccc(5): call 0x68e4(%rip)
7cd1(7): mov 0xfffffcf8(%rbp),%rdx
7cd8(5): mov $0x4,%esi
7cdd(2): xor %edi,%edi
7cdf(3): mov %rax,%r12
7ce2(5): call 0x68ce(%rip)
7ce7(5): mov $0x5,%edx
7cec(3): mov %rax,%rbx
7cef(7): lea 0xe31a(%rip),%rsi
7cf6(5): jmp 0xfffff285(%rip)
7cfb(4): cmp $0x0,0x15(%rbx)
7cff(2): jnz 0x1a(%rip)
7d01(4): cmp $0x0,0x22(%rbx)
7d05(6): jz 0x3e1(%rip)
7d0b(8): cmp $0x1,0xfffffe20(%rbp)
7d13(6): jbe 0x3d3(%rip)
7d19(7): mov 0xfffffcf8(%rbp),%r14
7d20(7): mov %r9b,0xfffffcb0(%rbp)
7d27(3): mov %r14,%rdi
7d2a(5): call 0xffffa886(%rip)
7d2f(2): test %eax,%eax
7d31(8): movzx 0xfffffcb0(%rbp),%r9d
7d39(6): jz 0x37a(%rip)
7d3f(5): call 0xffffa861(%rip)
7d44(3): cmp $0x2,(%rax)
7d47(3): mov %rax,%r15
7d4a(8): movzx 0xfffffcb0(%rbp),%r9d
7d52(6): jz 0x361(%rip)
7d58(3): mov %r14,%rsi
7d5b(5): mov $0x4,%edi
7d60(5): call 0x6970(%rip)
7d65(7): lea 0xdd4b(%rip),%rsi
7d6c(2): xor %edi,%edi
7d6e(5): mov $0x5,%edx
7d73(3): mov %rax,%rbx
7d76(5): call 0xffffa9ba(%rip)
7d7b(3): mov (%r15),%esi
7d7e(3): mov %rax,%rdx
7d81(3): mov %rbx,%rcx
7d84(2): xor %edi,%edi
7d86(2): xor %eax,%eax
7d88(5): call 0xffffad88(%rip)
7d8d(5): jmp 0xffffe3f9(%rip)
7d92(7): lea 0xffffff30(%rbp),%rax
7d99(7): mov 0xfffffcf0(%rbp),%rsi
7da0(5): mov $0x1,%edi
7da5(3): mov %rax,%rdx
7da8(7): mov %rax,0xfffffc98(%rbp)
7daf(5): call 0xffffa9b1(%rip)
7db4(2): test %eax,%eax
7db6(8): movzx 0xfffffcb0(%rbp),%r8d
7dbe(8): movzx 0xfffffca8(%rbp),%r9d
7dc6(6): jnz 0xffffefc8(%rip)
7dcc(2): xor %ecx,%ecx
7dce(7): mov 0xfffffea8(%rbp),%rax
7dd5(7): cmp %rax,0xffffff38(%rbp)
7ddc(2): jnz 0x13(%rip)
7dde(7): mov 0xfffffea0(%rbp),%rax
7de5(7): cmp %rax,0xffffff30(%rbp)
7dec(3): setz %cl
7def(6): mov 0xffffff48(%rbp),%eax
7df5(7): mov 0xfffffc98(%rbp),%rdx
7dfc(5): and $0xf000,%eax
7e01(5): cmp $0xa000,%eax
7e06(6): jnz 0xfffff0ec(%rip)
7e0c(6): mov 0xfffffeb8(%rbp),%eax
7e12(5): and $0xf000,%eax
7e17(5): cmp $0xa000,%eax
7e1c(6): jnz 0xfffff0d6(%rip)
7e22(4): cmp $0x0,0x15(%rbx)
7e26(6): jz 0xfffff0cc(%rip)
7e2c(5): jmp 0xffffef62(%rip)
7e31(7): nop 0x0(%rax)
7e38(a): mov $0x280375465148160,%rax
7e42(4): test %rax,0x20(%rbx)
7e46(6): jnz 0x5ba(%rip)
7e4c(7): mov $0x0,0xfffffcd0(%rbp)
7e53(a): mov $0x0,0xfffffca4(%rbp)
7e5d(5): jmp 0xfffff82b(%rip)
7e62(7): mov %r12b,0xfffffceb(%rbp)
7e69(3): xor %r15d,%r15d
7e6c(3): xor %r8d,%r8d
7e6f(7): mov $0x0,0xfffffce0(%rbp)
7e76(5): jmp 0xffffe07e(%rip)
7e7b(7): mov 0xfffffd80(%rbp),%rcx
7e82(3): cmp %rcx,(%rax)
7e85(6): jnz 0xfffff9fe(%rip)
7e8b(5): jmp 0xfffff815(%rip)
7e90(6): mov 0xfffffe28(%rbp),%eax
7e96(5): and $0xf000,%eax
7e9b(5): cmp $0x4000,%eax
7ea0(6): jz 0xfffffc66(%rip)
7ea6(3): test %r15d,%r15d
7ea9(6): jnz 0xfffffa36(%rip)
7eaf(7): mov 0xfffffcf8(%rbp),%rdx
7eb6(5): mov $0x3,%esi
7ebb(2): xor %edi,%edi
7ebd(5): call 0x6913(%rip)
7ec2(7): mov 0xfffffcf0(%rbp),%rdx
7ec9(5): mov $0x3,%esi
7ece(2): xor %edi,%edi
7ed0(3): mov %rax,%r12
7ed3(5): call 0x68fd(%rip)
7ed8(5): mov $0x5,%edx
7edd(3): mov %rax,%rbx
7ee0(7): lea 0xe1c9(%rip),%rsi
7ee7(5): jmp 0xfffff094(%rip)
7eec(6): mov 0xfffffca4(%rbp),%edx
7ef2(7): mov 0xfffffda8(%rbp),%rax
7ef9(7): lea 0xfffffd10(%rbp),%rcx
7f00(7): mov 0xfffffcf8(%rbp),%rsi
7f07(2): xor %edi,%edi
7f09(7): mov %r8b,0xfffffcd8(%rbp)
7f10(2): not %edx
7f12(6): and 0xfffffcec(%rbp),%edx
7f18(7): mov %rax,0xfffffd10(%rbp)
7f1f(5): call 0xffffaa91(%rip)
7f24(2): test %eax,%eax
7f26(7): mov $0x0,0xfffffce0(%rbp)
7f2d(8): movzx 0xfffffcd8(%rbp),%r8d
7f35(6): jz 0xffffdf8a(%rip)
7f3b(7): mov 0xfffffcf8(%rbp),%rsi
7f42(5): mov $0x4,%edi
7f47(5): call 0x6789(%rip)
7f4c(5): mov $0x5,%edx
7f51(3): mov %rax,%r13
7f54(7): lea 0xe7b5(%rip),%rsi
7f5b(5): jmp 0xffffeec4(%rip)
7f60(5): call 0x8490(%rip)
7f65(2): test %eax,%eax
7f67(6): jz 0xffffe0be(%rip)
7f6d(5): jmp 0xffffe05d(%rip)
7f72(4): mov 0x40(%rbx),%rdi
7f76(7): mov 0xfffffcf8(%rbp),%rsi
7f7d(3): mov %r12,%rdx
7f80(5): call 0x32e0(%rip)
7f85(8): movzx 0xfffffcd8(%rbp),%r8d
7f8d(5): jmp 0xffffdfa0(%rip)
7f92(7): mov 0xfffffcf8(%rbp),%rsi
7f99(7): mov 0xfffffcf0(%rbp),%rdi
7fa0(7): mov %r9b,0xfffffca8(%rbp)
7fa7(7): mov %r8b,0xfffffcb0(%rbp)
7fae(5): call 0x6f32(%rip)
7fb3(3): xor $0x1,%eax
7fb6(8): movzx 0xfffffcb0(%rbp),%r8d
7fbe(8): movzx 0xfffffca8(%rbp),%r9d
7fc6(3): mov %eax,%r12d
7fc9(2): xor %eax,%eax
7fcb(5): jmp 0xfffff0f1(%rip)
7fd0(8): movzx 0xfffffcb0(%rbp),%r8d
7fd8(8): movzx 0xfffffca8(%rbp),%r9d
7fe0(5): jmp 0xffffe5f0(%rip)
7fe5(7): mov 0xfffffcf8(%rbp),%rsi
7fec(5): mov $0x4,%edi
7ff1(5): call 0x66df(%rip)
7ff6(5): mov $0x5,%edx
7ffb(3): mov %rax,%r13
7ffe(7): lea 0xe54e(%rip),%rsi
8005(5): jmp 0xffffee1a(%rip)
800a(7): mov 0x21453f(%rip),%rsi
8011(5): mov $0x4,%edi
8016(5): call 0x66ba(%rip)
801b(7): lea 0xe19e(%rip),%rsi
8022(2): xor %edi,%edi
8024(3): mov %rax,%r12
8027(5): mov $0x5,%edx
802c(5): call 0xffffa704(%rip)
8031(2): xor %esi,%esi
8033(3): mov %rax,%rdx
8036(2): xor %edi,%edi
8038(2): xor %eax,%eax
803a(3): mov %r12,%rcx
803d(5): call 0xffffaad3(%rip)
8042(4): cmp $0x0,0x18(%rbx)
8046(6): jnz 0xffffeb7e(%rip)
804c(5): jmp 0xffffe134(%rip)
8051(7): mov %r9b,0xfffffcb0(%rbp)
8058(5): call 0xffffa548(%rip)
805d(3): cmp $0x2,(%rax)
8060(3): mov %rax,%r12
8063(8): movzx 0xfffffcb0(%rbp),%r9d
806b(6): jz 0x466(%rip)
8071(7): mov 0xfffffcf8(%rbp),%rsi
8078(5): mov $0x4,%edi
807d(5): call 0x6653(%rip)
8082(7): lea 0xe50b(%rip),%rsi
8089(5): mov $0x5,%edx
808e(2): xor %edi,%edi
8090(3): mov %rax,%rbx
8093(5): call 0xffffa69d(%rip)
8098(4): mov (%r12),%esi
809c(3): mov %rax,%rdx
809f(3): mov %rbx,%rcx
80a2(2): xor %edi,%edi
80a4(2): xor %eax,%eax
80a6(3): xor %r12d,%r12d
80a9(5): call 0xffffaa67(%rip)
80ae(5): jmp 0xffffe0d8(%rip)
80b3(5): movzx 0x2e(%rbx),%r14d
80b8(3): test %r14b,%r14b
80bb(6): jnz 0x5d1(%rip)
80c1(3): test %r13b,%r13b
80c4(6): jnz 0x5a4(%rip)
80ca(b): mov $0x0,0xfffffcb0(%rbp)
80d5(6): mov $0x1,%r14d
80db(6): mov $0x11,%r15d
80e1(5): jmp 0xffffdcc8(%rip)
80e6(4): cmp $0x2,0x4(%rbx)
80ea(6): jnz 0xfffff07d(%rip)
80f0(6): mov 0xfffffd98(%rbp),%eax
80f6(5): and $0xf000,%eax
80fb(5): cmp $0x8000,%eax
8100(6): jnz 0xfffffc19(%rip)
8106(5): jmp 0xfffff061(%rip)
810b(7): mov 0xfffffcf0(%rbp),%rsi
8112(5): mov $0x4,%edi
8117(5): call 0x65b9(%rip)
811c(5): mov $0x5,%edx
8121(3): mov %rax,%r13
8124(7): lea 0xe4fd(%rip),%rsi
812b(5): jmp 0xffffecf4(%rip)
8130(7): mov 0xfffffcec(%rbp),%r8d
8137(7): mov 0xfffffcf8(%rbp),%rdx
813e(5): mov $0xffffffff,%ecx
8143(7): mov 0xfffffcf0(%rbp),%rdi
814a(2): mov %ecx,%esi
814c(5): call 0x2314(%rip)
8151(2): test %eax,%eax
8153(6): jnz 0xffffdfd7(%rip)
8159(5): jmp 0xffffe02d(%rip)
815e(3): mov %r12,%rdx
8161(3): mov %r14,%rdi
8164(7): mov %r9b,0xfffffcb0(%rbp)
816b(7): mov %r8,0xfffffca8(%rbp)
8172(5): call 0xffffa75e(%rip)
8177(2): test %eax,%eax
8179(8): movzx 0xfffffcb0(%rbp),%r9d
8181(6): jnz 0xffffe588(%rip)
8187(4): lea 0x0(%r14,%r12,1),%rdi
818b(3): mov %r15,%rsi
818e(5): call 0xffffa7a2(%rip)
8193(2): test %eax,%eax
8195(8): movzx 0xfffffcb0(%rbp),%r9d
819d(7): mov 0xfffffca8(%rbp),%r8
81a4(6): jnz 0xffffe565(%rip)
81aa(7): mov 0xfffffcf8(%rbp),%rdi
81b1(4): or $0xffffffff,%rcx
81b5(2): REPNZ scasb rdi(%es,10),%al
81b7(3): mov %rcx,%rax
81ba(3): not %rax
81bd(4): lea 0xffffffff(%rax),%r14
81c1(5): lea 0x1(%r14,%r8,1),%rdi
81c6(5): call 0x8afa(%rip)
81cb(7): mov 0x21438e(%rip),%r15
81d2(7): mov 0xfffffcf8(%rbp),%rsi
81d9(3): mov %r14,%rdx
81dc(3): mov %rax,%rdi
81df(3): mov %rax,%r12
81e2(5): call 0xffffa90e(%rip)
81e7(3): mov %r15,%rsi
81ea(3): mov %rax,%rdi
81ed(5): call 0xffffa3f3(%rip)
81f2(7): lea 0xffffff30(%rbp),%rdx
81f9(3): mov %r12,%rsi
81fc(5): mov $0x1,%edi
8201(5): call 0xffffa7df(%rip)
8206(3): mov %r12,%rdi
8209(3): mov %eax,%r15d
820c(5): call 0xffffaa74(%rip)
8211(3): test %r15d,%r15d
8214(8): movzx 0xfffffcb0(%rbp),%r9d
821c(6): jnz 0xffffe4ed(%rip)
8222(7): mov 0xffffff38(%rbp),%rax
8229(7): cmp %rax,0xfffffd88(%rbp)
8230(6): jnz 0xffffe4d9(%rip)
8236(7): mov 0xffffff30(%rbp),%rax
823d(7): cmp %rax,0xfffffd80(%rbp)
8244(6): jnz 0xffffe4c5(%rip)
824a(4): cmp $0x0,0x18(%rbx)
824e(6): jz 0x268(%rip)
8254(7): lea 0xde8d(%rip),%rsi
825b(5): mov $0x5,%edx
8260(2): xor %edi,%edi
8262(5): call 0xffffa4ce(%rip)
8267(3): mov %rax,%rbx
826a(7): mov 0xfffffcf0(%rbp),%rdx
8271(5): mov $0x4,%esi
8276(5): mov $0x1,%edi
827b(5): call 0x6335(%rip)
8280(7): mov 0xfffffcf8(%rbp),%rdx
8287(3): mov %rax,%r12
828a(5): mov $0x4,%esi
828f(2): xor %edi,%edi
8291(5): call 0x631f(%rip)
8296(3): mov %r12,%r8
8299(3): mov %rax,%rcx
829c(3): mov %rbx,%rdx
829f(2): xor %esi,%esi
82a1(2): xor %edi,%edi
82a3(2): xor %eax,%eax
82a5(5): call 0xffffa86b(%rip)
82aa(3): xor %r12d,%r12d
82ad(5): jmp 0xffffded9(%rip)
82b2(7): mov 0xfffffca4(%rbp),%r12d
82b9(7): mov 0xfffffcf8(%rbp),%rsi
82c0(7): lea 0xfffffd08(%rbp),%rcx
82c7(2): xor %edi,%edi
82c9(7): mov %r8b,0xfffffce0(%rbp)
82d0(b): mov $0x0,0xfffffd08(%rbp)
82db(3): not %r12d
82de(7): and 0xfffffcec(%rbp),%r12d
82e5(3): mov %r12d,%edx
82e8(5): call 0xffffa6c8(%rip)
82ed(2): test %eax,%eax
82ef(8): movzx 0xfffffce0(%rbp),%r8d
82f7(6): jz 0xffffdbc8(%rip)
82fd(7): mov 0xfffffcf8(%rbp),%rdi
8304(3): mov %r12d,%esi
8307(6): and $0xffffefff,%esi
830d(5): call 0xffffa673(%rip)
8312(2): test %eax,%eax
8314(8): movzx 0xfffffce0(%rbp),%r8d
831c(6): jz 0xffffdba3(%rip)
8322(7): mov 0xfffffcf8(%rbp),%rsi
8329(5): mov $0x4,%edi
832e(5): call 0x63a2(%rip)
8333(5): mov $0x5,%edx
8338(3): mov %rax,%r13
833b(7): lea 0xe3b8(%rip),%rsi
8342(5): jmp 0xffffeadd(%rip)
8347(7): mov 0xfffffcf0(%rbp),%rsi
834e(5): mov $0x4,%edi
8353(5): call 0x637d(%rip)
8358(7): lea 0xe2e4(%rip),%rsi
835f(5): mov $0x5,%edx
8364(3): mov %rax,%r12
8367(2): xor %edi,%edi
8369(5): call 0xffffa3c7(%rip)
836e(7): mov %rax,0xfffffcd8(%rbp)
8375(5): call 0xffffa22b(%rip)
837a(3): mov %r12,%rcx
837d(7): mov 0xfffffcd8(%rbp),%rdx
8384(2): mov (%rax),%esi
8386(5): jmp 0xfffff6fb(%rip)
838b(7): mov 0xfffffcf8(%rbp),%rsi
8392(7): mov 0xfffffcf0(%rbp),%rdi
8399(7): mov %r9b,0xfffffca4(%rbp)
83a0(7): mov %r8b,0xfffffca8(%rbp)
83a7(7): mov %rdx,0xfffffcb0(%rbp)
83ae(5): call 0x6b32(%rip)
83b3(2): test %al,%al
83b5(7): mov 0xfffffcb0(%rbp),%rdx
83bc(8): movzx 0xfffffca8(%rbp),%r8d
83c4(8): movzx 0xfffffca4(%rbp),%r9d
83cc(6): jz 0x87b(%rip)
83d2(3): mov 0x18(%rdx),%eax
83d5(5): and $0xf000,%eax
83da(5): cmp $0xa000,%eax
83df(6): jz 0xffffec2d(%rip)
83e5(5): mov 0x18(%r12),%eax
83ea(5): and $0xf000,%eax
83ef(5): cmp $0xa000,%eax
83f4(6): jz 0xffffec18(%rip)
83fa(5): jmp 0xffffebea(%rip)
83ff(1): nop 
8400(4): movzx 0x25(%rbx),%esi
8404(7): mov 0xfffffcf8(%rbp),%rdi
840b(2): xor %edx,%edx
840d(3): mov %rbx,%rcx
8410(5): call 0xffffd1a0(%rip)
8415(2): test %al,%al
8417(6): jnz 0xfffffa35(%rip)
841d(4): cmp $0x0,0x26(%rbx)
8421(6): jnz 0xffffe4af(%rip)
8427(5): jmp 0xfffffa25(%rip)
842c(7): mov 0xfffffe10(%rbp),%rdx
8433(7): mov 0xfffffe18(%rbp),%rsi
843a(7): mov 0xfffffcf8(%rbp),%rdi
8441(5): call 0x189f(%rip)
8446(7): mov 0xfffffcc8(%rbp),%rax
844d(3): mov $0x1,(%rax)
8450(5): jmp 0xfffff1e8(%rip)
8455(7): mov 0xfffffcf0(%rbp),%rdx
845c(5): mov $0x4,%esi
8461(5): mov $0x1,%edi
8466(5): call 0x614a(%rip)
846b(7): mov 0xfffffcf8(%rbp),%rdx
8472(5): mov $0x4,%esi
8477(2): xor %edi,%edi
8479(3): mov %rax,%r12
847c(5): call 0x6134(%rip)
8481(5): mov $0x5,%edx
8486(3): mov %rax,%rbx
8489(7): lea 0xdbb8(%rip),%rsi
8490(5): jmp 0xffffeaeb(%rip)
8495(3): mov 0x10(%rbx),%edx
8498(7): mov 0xfffffcf8(%rbp),%rdi
849f(5): mov $0xffffffff,%esi
84a4(5): call 0x204c(%rip)
84a9(2): test %eax,%eax
84ab(6): jnz 0xffffd7a5(%rip)
84b1(5): jmp 0xffffdcd5(%rip)
84b6(7): lea 0xdc63(%rip),%rsi
84bd(5): mov $0x5,%edx
84c2(2): xor %edi,%edi
84c4(5): call 0xffffa26c(%rip)
84c9(3): mov %rax,%rbx
84cc(5): jmp 0xfffffd9e(%rip)
84d1(b): mov $0x0,0xfffffcb0(%rbp)
84dc(6): mov $0x1,%r14d
84e2(6): mov $0x11,%r15d
84e8(5): jmp 0xffffd7e6(%rip)
84ed(7): mov 0xfffffcf8(%rbp),%rsi
84f4(7): mov 0xfffffcf0(%rbp),%rdi
84fb(2): xor %edx,%edx
84fd(5): call 0xffffc7f3(%rip)
8502(5): jmp 0xfffff186(%rip)
8507(7): mov 0xfffffcf0(%rbp),%rsi
850e(5): mov $0x4,%edi
8513(5): call 0x61bd(%rip)
8518(7): lea 0xe1c8(%rip),%rsi
851f(2): xor %edi,%edi
8521(5): mov $0x5,%edx
8526(3): mov %rax,%r12
8529(5): call 0xffffa207(%rip)
852e(3): mov %rax,%r13
8531(5): call 0xffffa06f(%rip)
8536(2): mov (%rax),%esi
8538(2): xor %edi,%edi
853a(3): mov %r12,%rcx
853d(3): mov %r13,%rdx
8540(2): xor %eax,%eax
8542(5): call 0xffffa5ce(%rip)
8547(7): mov 0xfffffcd0(%rbp),%rdi
854e(5): call 0xffffa732(%rip)
8553(5): jmp 0xffffe37d(%rip)
8558(7): mov 0xfffffcf0(%rbp),%rsi
855f(5): mov $0x4,%edi
8564(5): call 0x616c(%rip)
8569(7): lea 0xe0a7(%rip),%rsi
8570(5): mov $0x5,%edx
8575(2): xor %edi,%edi
8577(3): mov %rax,%r12
857a(5): call 0xffffa1b6(%rip)
857f(3): mov %rax,%r15
8582(5): call 0xffffa01e(%rip)
8587(2): mov (%rax),%esi
8589(3): mov %r12,%rcx
858c(3): mov %r15,%rdx
858f(2): xor %edi,%edi
8591(2): xor %eax,%eax
8593(3): xor %r12d,%r12d
8596(5): call 0xffffa57a(%rip)
859b(5): jmp 0xfffff2e8(%rip)
85a0(7): mov 0xfffffdb0(%rbp),%rsi
85a7(7): mov 0xfffffcf0(%rbp),%rdi
85ae(5): call 0x1f92(%rip)
85b3(3): test %rax,%rax
85b6(3): mov %rax,%r12
85b9(6): jz 0x84a(%rip)
85bf(4): movzx 0x16(%rbx),%ecx
85c3(7): mov 0xfffffcf8(%rbp),%rdx
85ca(6): mov $0xffffffff,%r8d
85d0(5): mov $0xffffff9c,%esi
85d5(3): mov %rax,%rdi
85d8(5): call 0x1d28(%rip)
85dd(2): test %eax,%eax
85df(6): mov %eax,0xfffffce0(%rbp)
85e5(6): jle 0x843(%rip)
85eb(4): cmp $0x1,0x2d(%rbx)
85ef(2): jnz 0xb(%rip)
85f1(3): test %r14b,%r14b
85f4(6): jz 0xbe5(%rip)
85fa(3): mov %r12,%rdi
85fd(5): call 0xffffa683(%rip)
8602(7): mov 0xfffffcf8(%rbp),%rsi
8609(5): mov $0x4,%edi
860e(5): call 0x60c2(%rip)
8613(7): lea 0xdd8e(%rip),%rsi
861a(2): xor %edi,%edi
861c(5): mov $0x5,%edx
8621(3): mov %rax,%r12
8624(5): call 0xffffa10c(%rip)
8629(6): mov 0xfffffce0(%rbp),%esi
862f(3): mov %rax,%rdx
8632(3): mov %r12,%rcx
8635(2): xor %edi,%edi
8637(2): xor %eax,%eax
8639(5): call 0xffffa4d7(%rip)
863e(5): jmp 0xffffe292(%rip)
8643(7): mov 0xfffffcf8(%rbp),%rsi
864a(5): mov $0x4,%edi
864f(5): call 0x6081(%rip)
8654(5): mov $0x5,%edx
8659(3): mov %rax,%r13
865c(7): lea 0xdf83(%rip),%rsi
8663(5): jmp 0xffffe7bc(%rip)
8668(5): cmp $0x0,0x40(%rbx)
866d(3): mov %r13d,%r14d
8670(b): mov $0x0,0xfffffcb0(%rbp)
867b(6): mov $0x11,%r15d
8681(6): jnz 0xffffd661(%rip)
8687(5): jmp 0xffffd722(%rip)
868c(7): mov 0xfffffcf8(%rbp),%rsi
8693(5): mov $0x4,%edi
8698(7): mov %r9b,0xfffffca8(%rbp)
869f(6): mov $0x11,%r15d
86a5(5): call 0x602b(%rip)
86aa(7): lea 0xd3fa(%rip),%rsi
86b1(3): mov %rax,%r12
86b4(5): mov $0x5,%edx
86b9(2): xor %edi,%edi
86bb(5): call 0xffffa075(%rip)
86c0(3): mov %r12,%rdx
86c3(3): mov %rax,%rsi
86c6(5): mov $0x1,%edi
86cb(2): xor %eax,%eax
86cd(5): call 0xffffa3e3(%rip)
86d2(b): mov $0x0,0xfffffcb0(%rbp)
86dd(8): movzx 0xfffffca8(%rbp),%r9d
86e5(5): jmp 0xffffd5e9(%rip)
86ea(6): mov 0xfffffe30(%rbp),%eax
86f0(6): cmp %eax,0xfffffda0(%rbp)
86f6(6): jnz 0xffffd94c(%rip)
86fc(5): jmp 0xffffd98b(%rip)
8701(5): call 0xffffd20f(%rip)
8706(2): not %eax
8708(6): and %eax,0xfffffca4(%rbp)
870e(6): jz 0xffffd9af(%rip)
8714(7): cmp $0x1,0xfffffceb(%rbp)
871b(6): jz 0xffffd9af(%rip)
8721(3): test %r14b,%r14b
8724(6): jnz 0x973(%rip)
872a(6): mov 0xfffffe28(%rbp),%eax
8730(6): mov %eax,0xfffffc74(%rbp)
8736(2): not %eax
8738(6): test %eax,0xfffffca4(%rbp)
873e(6): jnz 0xffffd98c(%rip)
8744(5): jmp 0xffffda42(%rip)
8749(6): mov 0xfffffcec(%rbp),%eax
874f(5): mov $0x1b6,%edx
8754(5): mov $0x1ff,%ebx
8759(5): and $0x7000,%eax
875e(5): cmp $0x4000,%eax
8763(3): cmovne %edx,%ebx
8766(5): call 0xffffd1aa(%rip)
876b(2): not %eax
876d(2): mov %eax,%edx
876f(2): and %ebx,%edx
8771(5): jmp 0xfffffd27(%rip)
8776(7): and $0x1ff,%r12d
877d(3): test %r14b,%r14b
8780(7): mov %r12d,0xfffffc5c(%rbp)
8787(6): jnz 0x599(%rip)
878d(4): cmp $0x1,0x23(%rbx)
8791(7): mov 0xfffffcf8(%rbp),%rdi
8798(2): sbb %esi,%esi
879a(2): xor %eax,%eax
879c(6): and $0xfffffe00,%esi
87a2(6): add $0x201,%esi
87a8(5): call 0x2a48(%rip)
87ad(6): mov %eax,0xfffffcd8(%rbp)
87b3(5): call 0xffff9ded(%rip)
87b8(3): mov %rax,%r12
87bb(a): mov $0x280375465148160,%rax
87c5(4): test %rax,0x20(%rbx)
87c9(6): jnz 0x88c(%rip)
87cf(7): cmp $0x0,0xfffffcd8(%rbp)
87d6(6): js 0x88c(%rip)
87dc(a): mov $0x0,0xfffffc88(%rbp)
87e6(7): lea 0xffffff30(%rbp),%rax
87ed(6): mov 0xfffffcd8(%rbp),%esi
87f3(5): mov $0x1,%edi
87f8(3): mov %rax,%rdx
87fb(7): mov %rax,0xfffffc98(%rbp)
8802(5): call 0xffffa22e(%rip)
8807(2): test %eax,%eax
8809(6): mov %eax,0xfffffcb8(%rbp)
880f(6): jnz 0xba7(%rip)
8815(7): cmp $0x0,0xfffffcc8(%rbp)
881c(6): jz 0x6d3(%rip)
8822(4): cmp $0x0,0x38(%rbx)
8826(6): jnz 0xe5e(%rip)
882c(5): call 0xffffa3b4(%rip)
8831(7): mov 0xffffff68(%rbp),%rcx
8838(3): movsxd %eax,%r12
883b(a): mov $0x2305843009213562880,%rax
8845(6): mov $0x200,%r8d
884b(6): mov 0xfffffce0(%rbp),%edi
8851(7): mov %r8,0xfffffcd0(%rbp)
8858(7): lea 0xfffe0000(%rcx),%rdx
885f(3): cmp %rax,%rdx
8862(5): mov $0x20000,%eax
8867(4): lea 0xffffffff(%rcx),%rdx
886b(4): cmovbe %rcx,%rax
886f(7): mov %rax,0xfffffc90(%rbp)
8876(a): mov $0x2305843009213693951,%rax
8880(3): cmp %rax,%rdx
8883(4): cmovnbe %r8,%rcx
8887(2): xor %edx,%edx
8889(2): xor %esi,%esi
888b(7): mov %rcx,0xfffffc68(%rbp)
8892(5): mov $0x2,%ecx
8897(5): call 0x2919(%rip)
889c(7): mov 0xfffffeb8(%rbp),%r9d
88a3(7): mov 0xfffffcd0(%rbp),%r8
88aa(7): and $0xf000,%r9d
88b1(7): cmp $0x8000,%r9d
88b8(6): jz 0xee2(%rip)
88be(6): mov 0xffffff48(%rbp),%eax
88c4(5): and $0xf000,%eax
88c9(5): cmp $0x8000,%eax
88ce(6): jz 0xe61(%rip)
88d4(7): mov 0xfffffed8(%rbp),%rdi
88db(a): mov $0x9223372036854775807,%rax
88e5(7): mov 0xfffffc90(%rbp),%rsi
88ec(3): sub %r12,%rax
88ef(7): mov %r9d,0xfffffc80(%rbp)
88f6(3): mov %rax,%r8
88f9(a): mov $0x2305843009213562880,%rax
8903(7): lea 0xfffe0000(%rdi),%rdx
890a(7): mov %r8,0xfffffcd0(%rbp)
8911(3): cmp %rax,%rdx
8914(5): mov $0x20000,%eax
8919(3): mov %r8,%rdx
891c(4): cmovnbe %rax,%rdi
8920(5): call 0x2460(%rip)
8925(7): mov 0xfffffc80(%rbp),%r9d
892c(3): mov %rax,%rcx
892f(7): mov 0xfffffcd0(%rbp),%r8
8936(7): cmp $0x8000,%r9d
893d(6): jz 0xcd0(%rip)
8943(7): mov 0xfffffc90(%rbp),%rax
894a(2): xor %edx,%edx
894c(5): lea 0xffffffff(%rcx,%rax,1),%rsi
8951(3): mov %rsi,%rax
8954(3): div %rcx,%rax
8957(3): sub %rdx,%rsi
895a(7): mov %rsi,0xfffffc90(%rbp)
8961(6): jz 0xab0(%rip)
8967(3): cmp %r8,%rsi
896a(6): jnbe 0xaa7(%rip)
8970(7): mov 0xfffffc90(%rbp),%rax
8977(4): lea 0x0(%r12,%rax,1),%rdi
897b(5): call 0x8345(%rip)
8980(5): lea 0xffffffff(%rax,%r12,1),%rcx
8985(2): xor %edx,%edx
8987(7): mov %rax,0xfffffcd0(%rbp)
898e(3): mov %rcx,%rax
8991(3): div %r12,%rax
8994(3): sub %rdx,%rcx
8997(7): cmp $0x0,0xfffffcb8(%rbp)
899e(7): mov %rcx,0xfffffc50(%rbp)
89a5(6): jz 0xa78(%rip)
89ab(7): mov $0x0,0xfffffc5b(%rbp)
89b2(a): mov $0x1,0xfffffc70(%rbp)
89bc(7): mov 0xfffffed0(%rbp),%rax
89c3(6): mov 0xfffffce0(%rbp),%edi
89c9(3): xor %r12d,%r12d
89cc(7): mov %rax,0xfffffc80(%rbp)
89d3(7): lea 0xfffffd10(%rbp),%rax
89da(3): mov %rax,%rsi
89dd(7): mov %rax,0xfffffcb8(%rbp)
89e4(5): call 0x13cc(%rip)
89e9(7): lea 0xfffffd07(%rbp),%rax
89f0(2): xor %ecx,%ecx
89f2(7): mov %rbx,0xfffffc78(%rbp)
89f9(b): mov $0x0,0xfffffc60(%rbp)
8a04(3): mov %rcx,%rbx
8a07(7): mov %r13d,0xfffffca0(%rbp)
8a0e(7): mov %rax,0xfffffc48(%rbp)
8a15(7): lea 0xfffffd08(%rbp),%rax
8a1c(7): mov %rax,0xfffffc40(%rbp)
8a23(7): mov 0xfffffcb8(%rbp),%rdi
8a2a(5): call 0x13b6(%rip)
8a2f(2): test %al,%al
8a31(6): jz 0xc00(%rip)
8a37(8): cmp $0x0,0xfffffd28(%rbp)
8a3f(6): jz 0xacf(%rip)
8a45(3): mov %rbx,%rdx
8a48(3): mov %r12,%rcx
8a4b(3): xor %r13d,%r13d
8a4e(2): xor %eax,%eax
8a50(5): jmp 0xbd(%rip)
8a55(3): nop (%rax)
8a58(7): cmp $0x3,0xfffffc70(%rbp)
8a5f(6): mov $0x0,%r8d
8a65(8): cmove 0xfffffc68(%rbp),%r8
8a6d(4): sub $0x8,%rsp
8a71(7): mov 0xfffffc90(%rbp),%rcx
8a78(7): mov 0xfffffc50(%rbp),%rdx
8a7f(6): mov 0xfffffcd8(%rbp),%esi
8a85(6): mov 0xfffffce0(%rbp),%edi
8a8b(6): mov $0x1,%r9d
8a91(6): push 0xfffffc48(%rbp)
8a97(6): push 0xfffffc40(%rbp)
8a9d(1): push %rbx
8a9e(6): push 0xfffffcf8(%rbp)
8aa4(6): push 0xfffffcf0(%rbp)
8aaa(5): call 0xffffc626(%rip)
8aaf(4): add $0x30,%rsp
8ab3(2): test %al,%al
8ab5(6): jz 0x103(%rip)
8abb(7): mov 0xfffffd08(%rbp),%rax
8ac2(4): lea 0x0(%r12,%rax,1),%rcx
8ac6(3): test %rax,%rax
8ac9(7): mov %rcx,0xfffffc60(%rbp)
8ad0(2): jz 0xf(%rip)
8ad2(7): movzx 0xfffffd07(%rbp),%eax
8ad9(6): mov %al,0xfffffcc8(%rbp)
8adf(7): mov 0xfffffc60(%rbp),%rcx
8ae6(7): cmp %rcx,0xfffffc80(%rbp)
8aed(6): jz 0xa1a(%rip)
8af3(4): lea 0x1(%r13),%eax
8af7(7): cmp 0xfffffd28(%rbp),%rax
8afe(3): mov %r12,%rcx
8b01(3): mov %rbx,%rdx
8b04(3): mov %rax,%r13
8b07(6): jnb 0xa07(%rip)
8b0d(4): lea 0x0(%rax,%rax,2),%rsi
8b11(7): mov 0xfffffd38(%rbp),%rax
8b18(4): lea 0x0(%rax,%rsi,8),%rax
8b1c(7): mov 0xfffffc80(%rbp),%rsi
8b23(3): mov (%rax),%r12
8b26(4): mov 0x8(%rax),%rbx
8b2a(4): lea 0x0(%r12,%rbx,1),%rax
8b2e(3): cmp %rax,%rsi
8b31(2): jnl 0xf(%rip)
8b33(3): cmp %rsi,%r12
8b36(4): cmovnl %rsi,%r12
8b3a(3): sub %r12,%rsi
8b3d(3): mov %rsi,%rbx
8b40(3): mov %r12,%rax
8b43(7): mov $0x0,0xfffffcc8(%rbp)
8b4a(3): sub %rcx,%rax
8b4d(3): mov %rax,%rcx
8b50(3): sub %rdx,%rcx
8b53(6): jz 0xffffff05(%rip)
8b59(6): mov 0xfffffce0(%rbp),%edi
8b5f(2): xor %edx,%edx
8b61(3): mov %r12,%rsi
8b64(7): mov %rcx,0xfffffc60(%rbp)
8b6b(5): call 0xffff9c95(%rip)
8b70(3): test %rax,%rax
8b73(7): mov 0xfffffc60(%rbp),%rcx
8b7a(6): js 0xe75(%rip)
8b80(6): mov 0xfffffc70(%rbp),%eax
8b86(3): cmp $0x3,%eax
8b89(3): setz %dl
8b8c(3): sub $0x1,%eax
8b8f(6): jz 0x759(%rip)
8b95(7): mov 0xfffffcf8(%rbp),%rsi
8b9c(6): mov 0xfffffcd8(%rbp),%edi
8ba2(3): movzx %dl,%edx
8ba5(5): call 0xffffc46b(%rip)
8baa(2): test %al,%al
8bac(6): mov %al,0xfffffcc8(%rbp)
8bb2(6): jnz 0xfffffea6(%rip)
8bb8(7): mov 0xfffffc78(%rbp),%rbx
8bbf(7): mov 0xfffffca0(%rbp),%r13d
8bc6(7): mov 0xfffffd38(%rbp),%rdi
8bcd(5): call 0xffffa0b3(%rip)
8bd2(3): xor %r8d,%r8d
8bd5(6): mov 0xfffffcd8(%rbp),%edi
8bdb(7): mov %r8b,0xfffffcc8(%rbp)
8be2(5): call 0xffff9c8e(%rip)
8be7(2): test %eax,%eax
8be9(8): movzx 0xfffffcc8(%rbp),%r8d
8bf1(6): jns 0xffffeea7(%rip)
8bf7(7): mov 0xfffffcf8(%rbp),%rsi
8bfe(5): mov $0x4,%edi
8c03(5): call 0x5acd(%rip)
8c08(7): lea 0xdad8(%rip),%rsi
8c0f(5): mov $0x5,%edx
8c14(2): xor %edi,%edi
8c16(3): mov %rax,%r12
8c19(5): call 0xffff9b17(%rip)
8c1e(7): mov %rax,0xfffffcd8(%rbp)
8c25(5): call 0xffff997b(%rip)
8c2a(7): mov 0xfffffcd8(%rbp),%rdx
8c31(2): mov (%rax),%esi
8c33(3): mov %r12,%rcx
8c36(2): xor %edi,%edi
8c38(2): xor %eax,%eax
8c3a(5): call 0xffff9ed6(%rip)
8c3f(3): xor %r8d,%r8d
8c42(5): jmp 0xffffee56(%rip)
8c47(5): movzx 0x18(%rbx),%r12d
8c4c(4): xor $0x1,%r12d
8c50(5): jmp 0xffffe46c(%rip)
8c55(7): mov $0x0,0xfffffceb(%rbp)
8c5c(6): mov $0x1,%r12d
8c62(5): jmp 0xffffec05(%rip)
8c67(7): mov 0xffffff30(%rbp),%rax
8c6e(7): cmp %rax,0xfffffea0(%rbp)
8c75(6): jnz 0xffffeeef(%rip)
8c7b(5): jmp 0xffffdbc1(%rip)
8c80(7): mov 0xfffffcf8(%rbp),%rdi
8c87(5): call 0xffff9929(%rip)
8c8c(2): test %eax,%eax
8c8e(6): jnz 0xc38(%rip)
8c94(4): cmp $0x0,0x2e(%rbx)
8c98(2): jz 0x3b(%rip)
8c9a(7): mov 0xfffffcf8(%rbp),%rsi
8ca1(5): mov $0x4,%edi
8ca6(5): call 0x5a2a(%rip)
8cab(7): lea 0xcdf9(%rip),%rsi
8cb2(3): mov %rax,%r12
8cb5(5): mov $0x5,%edx
8cba(2): xor %edi,%edi
8cbc(5): call 0xffff9a74(%rip)
8cc1(3): mov %r12,%rdx
8cc4(3): mov %rax,%rsi
8cc7(5): mov $0x1,%edi
8ccc(2): xor %eax,%eax
8cce(5): call 0xffff9de2(%rip)
8cd3(5): movzx 0x21(%rbx),%r14d
8cd8(6): mov 0xfffffca4(%rbp),%eax
8cde(6): mov %eax,0xfffffc88(%rbp)
8ce4(3): test %r14b,%r14b
8ce7(2): jz 0x45(%rip)
8ce9(6): mov 0xfffffc5c(%rbp),%edx
8cef(7): mov 0xfffffcf8(%rbp),%rsi
8cf6(3): mov %rbx,%r8
8cf9(7): mov 0xfffffcf0(%rbp),%rdi
8d00(5): mov $0x1,%ecx
8d05(5): call 0xffffc7db(%rip)
8d0a(2): test %al,%al
8d0c(3): mov %eax,%r8d
8d0f(b): mov $0x0,0xfffffcd0(%rbp)
8d1a(6): jz 0xffffed7e(%rip)
8d20(6): mov 0xfffffca4(%rbp),%eax
8d26(6): mov %eax,0xfffffc88(%rbp)
8d2c(6): mov 0xfffffc88(%rbp),%eax
8d32(7): mov 0xfffffcf8(%rbp),%rdi
8d39(5): mov $0xc1,%esi
8d3e(2): not %eax
8d40(6): and 0xfffffc5c(%rbp),%eax
8d46(2): mov %eax,%edx
8d48(6): mov %eax,0xfffffcd0(%rbp)
8d4e(2): xor %eax,%eax
8d50(5): call 0x24a0(%rip)
8d55(3): mov %eax,%r14d
8d58(6): mov %eax,0xfffffcd8(%rbp)
8d5e(5): call 0xffff9842(%rip)
8d63(3): mov (%rax),%r8d
8d66(3): mov %rax,%r12
8d69(3): mov %r14d,%eax
8d6c(3): shr $0x1f,%eax
8d6f(4): cmp $0x11,%r8d
8d73(3): setz %dl
8d76(2): and %al,%dl
8d78(3): mov %edx,%r14d
8d7b(6): jz 0x407(%rip)
8d81(4): cmp $0x0,0x18(%rbx)
8d85(6): mov $0x11,%r8d
8d8b(6): jz 0x38a(%rip)
8d91(6): mov $0x1,%r9d
8d97(7): mov 0xfffffcf8(%rbp),%rsi
8d9e(5): mov $0x4,%edi
8da3(7): mov %r9b,0xfffffcd0(%rbp)
8daa(7): mov %r8d,0xfffffcd8(%rbp)
8db1(5): call 0x591f(%rip)
8db6(7): lea 0xd896(%rip),%rsi
8dbd(5): mov $0x5,%edx
8dc2(2): xor %edi,%edi
8dc4(3): mov %rax,%r12
8dc7(5): call 0xffff9969(%rip)
8dcc(7): mov 0xfffffcd8(%rbp),%r8d
8dd3(3): mov %rax,%rdx
8dd6(3): mov %r12,%rcx
8dd9(2): xor %edi,%edi
8ddb(2): xor %eax,%eax
8ddd(3): mov %r8d,%esi
8de0(5): call 0xffff9d30(%rip)
8de5(8): movzx 0xfffffcd0(%rbp),%r9d
8ded(3): xor %r8d,%r8d
8df0(b): mov $0x0,0xfffffcd0(%rbp)
8dfb(3): mov %r9d,%r14d
8dfe(5): jmp 0xffffec9a(%rip)
8e03(7): mov 0xfffffcf0(%rbp),%rsi
8e0a(5): mov $0x4,%edi
8e0f(5): call 0x58c1(%rip)
8e14(5): mov $0x5,%edx
8e19(3): mov %rax,%r13
8e1c(7): lea 0xd90b(%rip),%rsi
8e23(5): jmp 0xffffdffc(%rip)
8e28(3): mov %r12,%rdi
8e2b(5): call 0xffff9e55(%rip)
8e30(5): movzx 0x25(%rbx),%r8d
8e35(3): test %r8b,%r8b
8e38(6): jnz 0xffffdc18(%rip)
8e3e(4): movzx 0x1d(%rbx),%eax
8e42(2): test %al,%al
8e44(6): mov %al,0xfffffce0(%rbp)
8e4a(6): jnz 0x279(%rip)
8e50(8): movzx 0xfffffce0(%rbp),%r8d
8e58(7): mov $0x1,0xfffffce0(%rbp)
8e5f(5): jmp 0xffffd060(%rip)
8e64(5): call 0xffff991c(%rip)
8e69(7): mov 0xfffffcf8(%rbp),%rsi
8e70(7): lea 0xfffffea0(%rbp),%rdx
8e77(5): mov $0x1,%edi
8e7c(7): mov %r9b,0xfffffca8(%rbp)
8e83(7): mov %r8b,0xfffffcb0(%rbp)
8e8a(5): call 0xffff9b56(%rip)
8e8f(2): test %eax,%eax
8e91(8): movzx 0xfffffcb0(%rbp),%r8d
8e99(8): movzx 0xfffffca8(%rbp),%r9d
8ea1(6): jz 0xffffe690(%rip)
8ea7(5): jmp 0xffffccb8(%rip)
8eac(7): mov 0xfffffcf0(%rbp),%rsi
8eb3(7): lea 0xffffff30(%rbp),%rdx
8eba(5): mov $0x1,%edi
8ebf(7): mov %r9b,0xfffffca8(%rbp)
8ec6(7): mov %r8b,0xfffffcb0(%rbp)
8ecd(5): call 0xffff9b13(%rip)
8ed2(2): test %eax,%eax
8ed4(8): movzx 0xfffffcb0(%rbp),%r8d
8edc(8): movzx 0xfffffca8(%rbp),%r9d
8ee4(6): jz 0xffffe5b8(%rip)
8eea(5): jmp 0xffffcc75(%rip)
8eef(b): mov $0x0,0xfffffcd0(%rbp)
8efa(4): cmp $0x0,0x1f(%rbx)
8efe(6): jnz 0x408(%rip)
8f04(4): cmp $0x0,0x1d(%rbx)
8f08(2): jz 0x5c(%rip)
8f0a(6): mov 0xffffff4c(%rbp),%eax
8f10(6): cmp %eax,0xfffffd9c(%rbp)
8f16(2): jnz 0x10(%rip)
8f18(6): mov 0xffffff50(%rbp),%eax
8f1e(6): cmp %eax,0xfffffda0(%rbp)
8f24(2): jz 0x40(%rip)
8f26(7): mov 0xfffffc98(%rbp),%r9
8f2d(6): mov 0xfffffcd8(%rbp),%edx
8f33(7): lea 0xfffffd80(%rbp),%rcx
8f3a(7): mov 0xfffffcf8(%rbp),%rsi
8f41(4): movzx %r14b,%r8d
8f45(3): mov %rbx,%rdi
8f48(5): call 0xffffc7b8(%rip)
8f4d(3): cmp $0xff,%eax
8f50(6): jz 0xfffffc82(%rip)
8f56(2): test %eax,%eax
8f58(2): jnz 0xc(%rip)
8f5a(a): and $0xfffff1ff,0xfffffcc0(%rbp)
8f64(4): cmp $0x0,0x27(%rbx)
8f68(2): jz 0xf(%rip)
8f6a(7): test $0x80,0xffffff48(%rbp)
8f71(6): jz 0xa2d(%rip)
8f77(a): mov $0x71776119061217535,%rax
8f81(4): test %rax,0x18(%rbx)
8f85(6): jnz 0x2d8(%rip)
8f8b(4): cmp $0x0,0x2b(%rbx)
8f8f(6): jnz 0xa93(%rip)
8f95(3): mov %r14d,%r12d
8f98(4): and 0x20(%rbx),%r12b
8f9c(6): jnz 0x8fb(%rip)
8fa2(7): cmp $0x0,0xfffffc88(%rbp)
8fa9(6): mov $0x1,%r8d
8faf(6): jz 0xfffffc26(%rip)
8fb5(7): mov %r8b,0xfffffcc8(%rbp)
8fbc(5): call 0xffffc954(%rip)
8fc1(2): not %eax
8fc3(6): test %eax,0xfffffc88(%rbp)
8fc9(8): movzx 0xfffffcc8(%rbp),%r8d
8fd1(6): jz 0xfffffc04(%rip)
8fd7(6): mov 0xfffffc5c(%rbp),%edx
8fdd(7): mov 0xfffffcf8(%rbp),%rsi
8fe4(6): mov 0xfffffcd8(%rbp),%edi
8fea(5): call 0xffff9ca6(%rip)
8fef(2): test %eax,%eax
8ff1(8): movzx 0xfffffcc8(%rbp),%r8d
8ff9(6): jz 0xfffffbdc(%rip)
8fff(7): mov 0xfffffcf8(%rbp),%rsi
9006(5): mov $0x4,%edi
900b(5): call 0x56c5(%rip)
9010(7): lea 0xd6b2(%rip),%rsi
9017(5): mov $0x5,%edx
901c(2): xor %edi,%edi
901e(3): mov %rax,%r12
9021(5): call 0xffff970f(%rip)
9026(7): mov %rax,0xfffffcc8(%rbp)
902d(5): call 0xffff9573(%rip)
9032(7): mov 0xfffffcc8(%rbp),%rdx
9039(2): mov (%rax),%esi
903b(3): mov %r12,%rcx
903e(2): xor %edi,%edi
9040(2): xor %eax,%eax
9042(5): call 0xffff9ace(%rip)
9047(5): movzx 0x24(%rbx),%r8d
904c(4): xor $0x1,%r8d
9050(5): jmp 0xfffffb85(%rip)
9055(7): cmp $0x0,0xfffffcd8(%rbp)
905c(6): jns 0x252(%rip)
9062(5): movzx 0x16(%rbx),%r9d
9067(3): test %r9b,%r9b
906a(6): jnz 0xfffffc16(%rip)
9070(4): mov (%r12),%r8d
9074(4): cmp $0x2,%r8d
9078(6): jnz 0xfffffd1f(%rip)
907e(4): cmp $0x0,0x18(%rbx)
9082(6): jnz 0xfffffd15(%rip)
9088(a): mov $0x0,0xfffffc88(%rbp)
9092(5): jmp 0xfffffc9a(%rip)
9097(7): mov 0xfffffcf8(%rbp),%rsi
909e(7): lea 0xfffffe10(%rbp),%rdx
90a5(5): mov $0x1,%edi
90aa(5): call 0xffff96b6(%rip)
90af(2): test %eax,%eax
90b1(6): jz 0xfffff679(%rip)
90b7(7): mov 0xfffffcf8(%rbp),%rsi
90be(5): jmp 0xffffd167(%rip)
90c3(6): mov 0xfffffda0(%rbp),%edx
90c9(6): mov 0xfffffd9c(%rbp),%esi
90cf(7): mov 0xfffffcf8(%rbp),%rdi
90d6(7): mov %r8b,0xfffffcd8(%rbp)
90dd(5): call 0xffff9963(%rip)
90e2(2): test %eax,%eax
90e4(8): movzx 0xfffffcd8(%rbp),%r8d
90ec(6): jz 0xffffcdd3(%rip)
90f2(3): mov %rbx,%rdi
90f5(5): call 0xffffc5db(%rip)
90fa(2): test %al,%al
90fc(8): movzx 0xfffffcd8(%rbp),%r8d
9104(6): jz 0x800(%rip)
910a(6): mov %al,0xfffffce0(%rbp)
9110(5): jmp 0xffffcdaf(%rip)
9115(7): mov 0xfffffcf8(%rbp),%rsi
911c(7): lea 0xffffff30(%rbp),%rdx
9123(5): mov $0x1,%edi
9128(7): mov %r8d,0xfffffcb8(%rbp)
912f(5): call 0xffff9631(%rip)
9134(2): test %eax,%eax
9136(7): mov 0xfffffcb8(%rbp),%r8d
913d(2): jnz 0x45(%rip)
913f(6): mov 0xffffff48(%rbp),%eax
9145(5): and $0xf000,%eax
914a(5): cmp $0xa000,%eax
914f(2): jnz 0x33(%rip)
9151(5): movzx 0x30(%rbx),%r8d
9156(3): test %r8b,%r8b
9159(6): jz 0x7ee(%rip)
915f(6): mov 0xfffffcd0(%rbp),%edx
9165(7): mov 0xfffffcf8(%rbp),%rdi
916c(5): mov $0x41,%esi
9171(2): xor %eax,%eax
9173(5): call 0x207d(%rip)
9178(4): mov (%r12),%r8d
917c(6): mov %eax,0xfffffcd8(%rbp)
9182(6): mov 0xfffffcd8(%rbp),%eax
9188(3): shr $0x1f,%eax
918b(4): cmp $0x15,%r8d
918f(3): setz %dl
9192(2): and %al,%dl
9194(3): mov %edx,%r9d
9197(6): jz 0xff(%rip)
919d(7): mov 0xfffffcf8(%rbp),%rsi
91a4(6): mov $0x15,%r8d
91aa(3): cmp $0x0,(%rsi)
91ad(3): mov %rsi,%rdi
91b0(6): jz 0xfffffbe7(%rip)
91b6(2): xor %eax,%eax
91b8(4): or $0xffffffff,%rcx
91bc(3): xor %r8d,%r8d
91bf(2): REPNZ scasb rdi(%es,10),%al
91c1(3): mov %rcx,%rax
91c4(3): not %rax
91c7(5): cmp $0x2f,0xfffffffe(%rsi,%rax,1)
91cc(4): setnz %r8b
91d0(4): add $0x14,%r8d
91d4(5): jmp 0xfffffbc3(%rip)
91d9(6): mov 0xfffffe28(%rbp),%eax
91df(5): and $0xf000,%eax
91e4(5): cmp $0xa000,%eax
91e9(6): jnz 0xfffff411(%rip)
91ef(4): or $0xffffffff,%rcx
91f3(3): mov %r14d,%eax
91f6(3): mov %r12,%rdi
91f9(2): REPNZ scasb rdi(%es,10),%al
91fb(7): mov 0xfffffe40(%rbp),%rsi
9202(3): not %rcx
9205(4): lea 0xffffffff(%rcx),%rax
9209(3): cmp %rax,%rsi
920c(6): jnz 0xfffff3ee(%rip)
9212(7): mov 0xfffffcf8(%rbp),%rdi
9219(5): call 0x1327(%rip)
921e(3): test %rax,%rax
9221(6): jz 0xfffff3d9(%rip)
9227(3): mov %rax,%rdi
922a(3): mov %r12,%rsi
922d(7): mov %rax,0xfffffcd8(%rbp)
9234(5): call 0xffff96fc(%rip)
9239(7): mov 0xfffffcd8(%rbp),%rdx
9240(2): test %eax,%eax
9242(3): mov %rdx,%rdi
9245(6): jnz 0x7fd(%rip)
924b(5): call 0xffff9a35(%rip)
9250(3): mov %r12,%rdi
9253(5): call 0xffff9a2d(%rip)
9258(5): jmp 0xfffffbd8(%rip)
925d(7): mov 0xfffffcc0(%rbp),%r8d
9264(6): mov 0xfffffcd8(%rbp),%ecx
926a(7): mov 0xfffffcf8(%rbp),%rdx
9271(6): mov 0xfffffce0(%rbp),%esi
9277(7): mov 0xfffffcf0(%rbp),%rdi
927e(5): call 0x11e2(%rip)
9283(2): test %eax,%eax
9285(6): mov $0x1,%r8d
928b(6): jz 0xfffff94a(%rip)
9291(5): jmp 0xfffffdb6(%rip)
9296(7): cmp $0x0,0xfffffcd8(%rbp)
929d(6): mov $0x1,%r14d
92a3(6): jns 0xfffff543(%rip)
92a9(5): jmp 0xfffffae8(%rip)
92ae(4): movzx 0x25(%rbx),%esi
92b2(7): mov 0xfffffcf8(%rbp),%rdi
92b9(2): xor %edx,%edx
92bb(3): mov %rbx,%rcx
92be(5): call 0xffffc2f2(%rip)
92c3(2): test %al,%al
92c5(3): mov %eax,%r8d
92c8(6): jnz 0xfffff514(%rip)
92ce(4): cmp $0x0,0x26(%rbx)
92d2(b): mov $0x0,0xfffffcd0(%rbp)
92dd(6): jnz 0xfffff8f8(%rip)
92e3(5): jmp 0xfffff4f9(%rip)
92e8(6): mov 0xfffffcd8(%rbp),%edi
92ee(3): mov %rcx,%rsi
92f1(5): call 0xffffb90f(%rip)
92f6(2): test %al,%al
92f8(6): jz 0x51b(%rip)
92fe(3): xor %r8d,%r8d
9301(5): jmp 0xfffff76c(%rip)
9306(7): mov 0xfffffdc8(%rbp),%rax
930d(7): mov 0xfffffcf8(%rbp),%rsi
9314(7): lea 0xfffffd60(%rbp),%rdx
931b(6): mov 0xfffffcd8(%rbp),%edi
9321(7): mov %rax,0xfffffd60(%rbp)
9328(7): mov 0xfffffdd0(%rbp),%rax
932f(7): mov %rax,0xfffffd68(%rbp)
9336(7): mov 0xfffffdd8(%rbp),%rax
933d(7): mov %rax,0xfffffd70(%rbp)
9344(7): mov 0xfffffde0(%rbp),%rax
934b(7): mov %rax,0xfffffd78(%rbp)
9352(5): call 0x6c3e(%rip)
9357(2): test %eax,%eax
9359(6): jz 0xfffffbab(%rip)
935f(7): mov 0xfffffcf8(%rbp),%rsi
9366(5): mov $0x4,%edi
936b(5): call 0x5365(%rip)
9370(7): lea 0xd33a(%rip),%rsi
9377(2): xor %edi,%edi
9379(5): mov $0x5,%edx
937e(3): mov %rax,%r12
9381(5): call 0xffff93af(%rip)
9386(7): mov %rax,0xfffffcc8(%rbp)
938d(5): call 0xffff9213(%rip)
9392(7): mov 0xfffffcc8(%rbp),%rdx
9399(2): mov (%rax),%esi
939b(2): xor %edi,%edi
939d(2): xor %eax,%eax
939f(3): mov %r12,%rcx
93a2(5): call 0xffff976e(%rip)
93a7(4): cmp $0x0,0x24(%rbx)
93ab(6): jz 0xfffffb59(%rip)
93b1(5): jmp 0xfffff821(%rip)
93b6(7): mov 0xfffffcf8(%rbp),%rsi
93bd(5): mov $0x4,%edi
93c2(5): call 0x530e(%rip)
93c7(7): lea 0xd275(%rip),%rsi
93ce(5): mov $0x5,%edx
93d3(2): xor %edi,%edi
93d5(3): mov %rax,%r12
93d8(5): call 0xffff9358(%rip)
93dd(7): mov %rax,0xfffffcd0(%rbp)
93e4(5): call 0xffff91bc(%rip)
93e9(7): mov 0xfffffcd0(%rbp),%rdx
93f0(2): mov (%rax),%esi
93f2(3): mov %r12,%rcx
93f5(2): xor %edi,%edi
93f7(2): xor %eax,%eax
93f9(5): call 0xffff9717(%rip)
93fe(3): xor %r8d,%r8d
9401(b): mov $0x0,0xfffffcd0(%rbp)
940c(5): jmp 0xfffff7c9(%rip)
9411(7): mov %rcx,0xfffffc90(%rbp)
9418(5): jmp 0xfffff558(%rip)
941d(3): xor %r9d,%r9d
9420(4): cmp $0x3,0xc(%rbx)
9424(7): lea 0xfffffd10(%rbp),%rax
942b(b): mov $0x0,0xfffffc68(%rbp)
9436(7): mov %rax,0xfffffcb8(%rbp)
943d(4): setz %r9b
9441(7): lea 0xfffffd08(%rbp),%rax
9448(4): sub $0x8,%rsp
944c(7): mov 0xfffffc68(%rbp),%r8
9453(7): mov 0xfffffc90(%rbp),%rcx
945a(7): mov 0xfffffc50(%rbp),%rdx
9461(6): mov 0xfffffcd8(%rbp),%esi
9467(6): mov 0xfffffce0(%rbp),%edi
946d(1): push %rax
946e(6): push 0xfffffcb8(%rbp)
9474(2): push $0xff
9476(6): push 0xfffffcf8(%rbp)
947c(6): push 0xfffffcf0(%rbp)
9482(5): call 0xffffbc4e(%rip)
9487(4): add $0x30,%rsp
948b(2): test %al,%al
948d(6): jz 0xfffff745(%rip)
9493(7): cmp $0x0,0xfffffd08(%rbp)
949a(6): jz 0xfffffa60(%rip)
94a0(7): mov 0xfffffd10(%rbp),%rsi
94a7(6): mov 0xfffffcd8(%rbp),%edi
94ad(5): call 0xffff9343(%rip)
94b2(2): test %eax,%eax
94b4(6): jns 0xfffffa46(%rip)
94ba(7): mov 0xfffffcf8(%rbp),%rsi
94c1(5): mov $0x4,%edi
94c6(5): call 0x520a(%rip)
94cb(7): lea 0xd1cb(%rip),%rsi
94d2(3): mov %rax,%r12
94d5(5): mov $0x5,%edx
94da(2): xor %edi,%edi
94dc(5): call 0xffff9254(%rip)
94e1(7): mov %rax,0xfffffcc8(%rbp)
94e8(5): call 0xffff90b8(%rip)
94ed(7): mov 0xfffffcc8(%rbp),%rdx
94f4(2): mov (%rax),%esi
94f6(3): mov %r12,%rcx
94f9(2): xor %edi,%edi
94fb(2): xor %eax,%eax
94fd(5): call 0xffff9613(%rip)
9502(5): jmp 0xfffff6d0(%rip)
9507(7): mov $0x1,0xfffffd31(%rbp)
950e(7): mov 0xfffffd38(%rbp),%rdi
9515(5): call 0xffff976b(%rip)
951a(7): cmp $0x0,0xfffffd31(%rbp)
9521(b): mov $0x0,0xfffffd38(%rbp)
952c(b): mov $0x0,0xfffffd28(%rbp)
9537(6): jz 0xfffff4ec(%rip)
953d(7): mov 0xfffffc78(%rbp),%rbx
9544(7): mov 0xfffffca0(%rbp),%r13d
954b(7): mov 0xfffffc60(%rbp),%rcx
9552(7): cmp %rcx,0xfffffc80(%rbp)
9559(4): setnle %r12b
955d(2): jnle 0xf(%rip)
955f(7): cmp $0x0,0xfffffcc8(%rbp)
9566(6): jz 0xfffff994(%rip)
956c(7): cmp $0x1,0xfffffc70(%rbp)
9573(7): mov 0xfffffc80(%rbp),%rsi
957a(2): jz 0x74(%rip)
957c(6): mov 0xfffffcd8(%rbp),%edi
9582(5): call 0xffff926e(%rip)
9587(2): test %eax,%eax
9589(6): jnz 0xffffff31(%rip)
958f(7): cmp $0x3,0xfffffc70(%rbp)
9596(6): jnz 0xfffff964(%rip)
959c(3): test %r12b,%r12b
959f(6): jz 0xfffff95b(%rip)
95a5(7): mov 0xfffffc80(%rbp),%rdx
95ac(7): mov 0xfffffc60(%rbp),%rsi
95b3(6): mov 0xfffffcd8(%rbp),%edi
95b9(3): sub %rsi,%rdx
95bc(5): call 0xffffb6f4(%rip)
95c1(2): test %eax,%eax
95c3(6): jns 0xfffff937(%rip)
95c9(7): mov 0xfffffcf8(%rbp),%rsi
95d0(5): mov $0x4,%edi
95d5(5): call 0x50fb(%rip)
95da(5): mov $0x5,%edx
95df(3): mov %rax,%r12
95e2(7): lea 0xcf02(%rip),%rsi
95e9(5): jmp 0xfffffef1(%rip)
95ee(7): sub 0xfffffc60(%rbp),%rsi
95f5(6): mov 0xfffffcd8(%rbp),%edi
95fb(5): call 0xffffb605(%rip)
9600(2): test %al,%al
9602(6): jnz 0xfffff8f8(%rip)
9608(5): jmp 0xfffffeb2(%rip)
960d(7): mov 0xfffffed0(%rbp),%rax
9614(7): cmp %rax,0xfffffc90(%rbp)
961b(6): jbe 0xfffff328(%rip)
9621(4): add $0x1,%rax
9625(7): mov %rax,0xfffffc90(%rbp)
962c(5): jmp 0xfffff317(%rip)
9631(7): cmp $0x0,0xfffffd31(%rbp)
9638(7): mov 0xfffffc78(%rbp),%rbx
963f(7): mov 0xfffffca0(%rbp),%r13d
9646(6): jnz 0xffffff05(%rip)
964c(7): cmp $0x0,0xfffffd30(%rbp)
9653(6): jz 0x21d(%rip)
9659(3): xor %r9d,%r9d
965c(4): cmp $0x3,0xc(%rbx)
9660(5): mov $0x0,%eax
9665(4): setz %r9b
9669(7): cmp $0x0,0xfffffc5b(%rbp)
9670(8): cmovne 0xfffffc68(%rbp),%rax
9678(7): mov %rax,0xfffffc68(%rbp)
967f(5): jmp 0xfffffdc2(%rip)
9684(6): mov 0xfffffce0(%rbp),%edx
968a(6): mov 0xfffffcd8(%rbp),%edi
9690(2): xor %eax,%eax
9692(5): mov $0x40049409,%esi
9697(5): call 0xffff91b9(%rip)
969c(2): test %eax,%eax
969e(6): jz 0xfffff851(%rip)
96a4(4): cmp $0x2,0x38(%rbx)
96a8(6): jnz 0xfffff184(%rip)
96ae(7): mov 0xfffffcf0(%rbp),%rdx
96b5(5): mov $0x4,%esi
96ba(5): mov $0x1,%edi
96bf(5): call 0x4ef1(%rip)
96c4(7): mov 0xfffffcf8(%rbp),%rdx
96cb(5): mov $0x4,%esi
96d0(2): xor %edi,%edi
96d2(3): mov %rax,%r12
96d5(5): call 0x4edb(%rip)
96da(7): lea 0xcf90(%rip),%rsi
96e1(5): mov $0x5,%edx
96e6(2): xor %edi,%edi
96e8(7): mov %rax,0xfffffcc8(%rbp)
96ef(5): call 0xffff9041(%rip)
96f4(7): mov %rax,0xfffffcd0(%rbp)
96fb(5): call 0xffff8ea5(%rip)
9700(7): mov 0xfffffcc8(%rbp),%rcx
9707(2): mov (%rax),%esi
9709(3): mov %r12,%r8
970c(7): mov 0xfffffcd0(%rbp),%rdx
9713(2): xor %edi,%edi
9715(2): xor %eax,%eax
9717(5): call 0xffff93f9(%rip)
971c(3): xor %r8d,%r8d
971f(b): mov $0x0,0xfffffcd0(%rbp)
972a(5): jmp 0xfffff4ab(%rip)
972f(3): mov 0xc(%rbx),%eax
9732(3): cmp $0x3,%eax
9735(6): jz 0x89(%rip)
973b(3): cmp $0x2,%eax
973e(6): jnz 0xfffff196(%rip)
9744(7): test $0x1,0xfffffcb8(%rbp)
974b(6): jz 0xfffff189(%rip)
9751(7): mov 0xfffffc90(%rbp),%rax
9758(4): lea 0x0(%r12,%rax,1),%rdi
975c(5): call 0x7564(%rip)
9761(5): lea 0xffffffff(%rax,%r12,1),%rcx
9766(7): mov %rax,0xfffffcd0(%rbp)
976d(2): xor %edx,%edx
976f(3): mov %rcx,%rax
9772(3): div %r12,%rax
9775(3): sub %rdx,%rcx
9778(7): mov %rcx,0xfffffc50(%rbp)
977f(3): mov 0xc(%rbx),%eax
9782(6): mov %eax,0xfffffc70(%rbp)
9788(7): movzx 0xfffffcc8(%rbp),%eax
978f(6): mov %al,0xfffffc5b(%rbp)
9795(5): jmp 0xfffff227(%rip)
979a(7): mov 0xfffffed0(%rbp),%rax
97a1(2): cdq %rax
97a3(3): idiv %r8,%rax
97a6(7): cmp %rax,0xfffffee0(%rbp)
97ad(3): setl %al
97b0(3): movzx %al,%eax
97b3(6): mov %eax,0xfffffcb8(%rbp)
97b9(5): jmp 0xfffff105(%rip)
97be(7): mov 0xfffffc90(%rbp),%rax
97c5(4): lea 0x0(%r12,%rax,1),%rdi
97c9(5): call 0x74f7(%rip)
97ce(5): lea 0xffffffff(%rax,%r12,1),%rcx
97d3(2): xor %edx,%edx
97d5(7): mov %rax,0xfffffcd0(%rbp)
97dc(3): mov %rcx,%rax
97df(3): div %r12,%rax
97e2(3): sub %rdx,%rcx
97e5(7): cmp $0x0,0xfffffcb8(%rbp)
97ec(7): mov %rcx,0xfffffc50(%rbp)
97f3(2): jnz 0xffffff8c(%rip)
97f5(3): xor %r9d,%r9d
97f8(4): cmp $0x3,0xc(%rbx)
97fc(7): lea 0xfffffd10(%rbp),%rax
9803(7): mov %rax,0xfffffcb8(%rbp)
980a(4): setz %r9b
980e(5): jmp 0xfffffc33(%rip)
9813(7): mov 0xfffffcf8(%rbp),%rdx
981a(5): mov $0x3,%esi
981f(2): xor %edi,%edi
9821(7): mov 0xfffffc78(%rbp),%rbx
9828(7): mov 0xfffffca0(%rbp),%r13d
982f(5): call 0x4fa1(%rip)
9834(7): lea 0xce51(%rip),%rsi
983b(3): mov %rax,%r12
983e(5): mov $0x5,%edx
9843(2): xor %edi,%edi
9845(5): call 0xffff8eeb(%rip)
984a(7): mov %rax,0xfffffcc8(%rbp)
9851(5): call 0xffff8d4f(%rip)
9856(7): mov 0xfffffcc8(%rbp),%rdx
985d(2): mov (%rax),%esi
985f(3): mov %r12,%rcx
9862(2): xor %edi,%edi
9864(2): xor %eax,%eax
9866(5): call 0xffff92aa(%rip)
986b(5): jmp 0xfffff35b(%rip)
9870(7): mov 0xfffffcf0(%rbp),%rdx
9877(5): mov $0x3,%esi
987c(2): xor %edi,%edi
987e(5): call 0x4f52(%rip)
9883(5): mov $0x5,%edx
9888(3): mov %rax,%r12
988b(7): lea 0xca8e(%rip),%rsi
9892(5): jmp 0xfffffc48(%rip)
9897(5): call 0xffffc079(%rip)
989c(6): mov 0xfffffcd8(%rbp),%esi
98a2(2): not %eax
98a4(7): mov 0xfffffcf8(%rbp),%rdi
98ab(2): mov %eax,%edx
98ad(3): mov %r12d,%r14d
98b0(6): and $0x1b6,%edx
98b6(5): call 0xc3a(%rip)
98bb(2): test %eax,%eax
98bd(4): setz %r8b
98c1(5): jmp 0xfffff314(%rip)
98c6(7): mov 0xfffffcf8(%rbp),%rsi
98cd(5): mov $0x4,%edi
98d2(5): call 0x4dfe(%rip)
98d7(7): lea 0xc1d9(%rip),%rsi
98de(5): mov $0x5,%edx
98e3(2): xor %edi,%edi
98e5(7): mov %rax,0xfffffcd8(%rbp)
98ec(5): call 0xffff8e44(%rip)
98f1(7): mov 0xfffffcd8(%rbp),%rcx
98f8(3): mov %rax,%rdx
98fb(4): mov (%r12),%esi
98ff(5): jmp 0xffffe182(%rip)
9904(7): lea 0xc67d(%rip),%rsi
990b(2): xor %edi,%edi
990d(5): mov $0x5,%edx
9912(5): call 0xffff8e1e(%rip)
9917(3): mov %rax,%r12
991a(5): call 0xffff8c86(%rip)
991f(7): mov 0xfffffcf8(%rbp),%rcx
9926(2): mov (%rax),%esi
9928(2): xor %edi,%edi
992a(2): xor %eax,%eax
992c(3): mov %r12,%rdx
992f(5): call 0xffff91e1(%rip)
9934(5): movzx 0x24(%rbx),%r8d
9939(3): test %r8b,%r8b
993c(6): jnz 0xffffcf94(%rip)
9942(5): jmp 0xffffc57d(%rip)
9947(7): mov 0xfffffcf8(%rbp),%rsi
994e(5): mov $0x4,%edi
9953(7): mov %r8b,0xfffffcd8(%rbp)
995a(5): call 0x4d76(%rip)
995f(7): lea 0xc992(%rip),%rsi
9966(3): mov %rax,%r12
9969(5): mov $0x5,%edx
996e(2): xor %edi,%edi
9970(5): call 0xffff8dc0(%rip)
9975(3): mov %r12,%rcx
9978(3): mov %rax,%rdx
997b(2): xor %esi,%esi
997d(2): xor %edi,%edi
997f(2): xor %eax,%eax
9981(5): call 0xffff918f(%rip)
9986(b): mov $0x0,0xfffffcd0(%rbp)
9991(8): movzx 0xfffffcd8(%rbp),%r8d
9999(5): jmp 0xffffe0ff(%rip)
999e(5): call 0xffff8ea2(%rip)
99a3(2): test %eax,%eax
99a5(6): jz 0xfffff5d2(%rip)
99ab(7): mov 0xfffffcf8(%rbp),%rsi
99b2(6): mov 0xfffffcd8(%rbp),%edi
99b8(5): mov $0x180,%edx
99bd(5): call 0xffff92d3(%rip)
99c2(2): test %eax,%eax
99c4(6): jnz 0xfffff5b3(%rip)
99ca(6): mov 0xfffffc88(%rbp),%edx
99d0(7): mov 0xfffffcf8(%rbp),%rsi
99d7(6): mov 0xfffffcd8(%rbp),%edi
99dd(2): not %edx
99df(6): and 0xfffffc5c(%rbp),%edx
99e5(5): call 0xffff92ab(%rip)
99ea(5): jmp 0xfffff58d(%rip)
99ef(7): mov 0xfffffcf0(%rbp),%rsi
99f6(5): mov $0x4,%edi
99fb(7): mov 0xfffffc78(%rbp),%rbx
9a02(7): mov 0xfffffca0(%rbp),%r13d
9a09(5): call 0x4cc7(%rip)
9a0e(5): mov $0x5,%edx
9a13(3): mov %rax,%r12
9a16(7): lea 0xcabe(%rip),%rsi
9a1d(5): jmp 0xfffffe26(%rip)
9a22(3): mov 0x10(%rbx),%edx
9a25(6): mov 0xfffffcd8(%rbp),%esi
9a2b(7): mov 0xfffffcf8(%rbp),%rdi
9a32(5): call 0xabe(%rip)
9a37(2): test %eax,%eax
9a39(4): setz %r8b
9a3d(5): jmp 0xfffff198(%rip)
9a42(5): call 0xffff923e(%rip)
9a47(5): jmp 0xffffebb3(%rip)

"copy" :
9a50(4): sub $0x18,%rsp
9a54(9): mov $0x28,%rax
9a5d(5): mov %rax,0x8(%rsp)
9a62(2): xor %eax,%eax
9a64(3): test %rcx,%rcx
9a67(6): jz 0x12f(%rip)
9a6d(3): cmp $0x3,(%rcx)
9a70(6): jnbe 0x107(%rip)
9a76(3): mov 0xc(%rcx),%eax
9a79(4): lea 0xffffffff(%rax),%r10d
9a7d(4): cmp $0x2,%r10d
9a81(6): jnbe 0xd7(%rip)
9a87(4): mov 0x38(%rcx),%r10d
9a8b(4): cmp $0x2,%r10d
9a8f(6): jnbe 0xaa(%rip)
9a95(4): cmp $0x0,0x17(%rcx)
9a99(2): jnz 0x57(%rip)
9a9b(3): cmp $0x2,%eax
9a9e(2): jz 0x8(%rip)
9aa0(4): cmp $0x2,%r10d
9aa4(2): jz 0x71(%rip)
9aa6(5): mov $0x0,0x7(%rsp)
9aab(2): push %r9
9aad(3): movzx %dl,%edx
9ab0(2): push %r8
9ab2(3): mov %rcx,%r9
9ab5(3): xor %r8d,%r8d
9ab8(2): xor %ecx,%ecx
9aba(7): mov %rsi,0x212a87(%rip)
9ac1(7): mov %rdi,0x212a88(%rip)
9ac8(5): lea 0x17(%rsp),%rax
9acd(1): push %rax
9ace(2): push $0x1
9ad0(5): call 0xffffbe70(%rip)
9ad5(4): add $0x20,%rsp
9ad9(5): mov 0x8(%rsp),%rsi
9ade(9): xor $0x28,%rsi
9ae7(2): jnz 0x4d(%rip)
9ae9(4): add $0x18,%rsp
9aed(1): ret near (%rsp)
9aee(2): nop 
9af0(4): cmp $0x0,0x2c(%rcx)
9af4(2): jz 0xffffffa7(%rip)
9af6(7): lea 0xccbb(%rip),%rcx
9afd(7): lea 0xcc89(%rip),%rsi
9b04(7): lea 0xc935(%rip),%rdi
9b0b(5): mov $0xb8a,%edx
9b10(5): call 0xffff8d10(%rip)
9b15(7): lea 0xcc9c(%rip),%rcx
9b1c(7): lea 0xcc6a(%rip),%rsi
9b23(7): lea 0xc93e(%rip),%rdi
9b2a(5): mov $0xb8d,%edx
9b2f(5): call 0xffff8cf1(%rip)
9b34(5): call 0xffff8c4c(%rip)
9b39(7): lea 0xcc78(%rip),%rcx
9b40(7): lea 0xcc46(%rip),%rsi
9b47(7): lea 0xc8ca(%rip),%rdi
9b4e(5): mov $0xb89,%edx
9b53(5): call 0xffff8ccd(%rip)
9b58(7): lea 0xcc59(%rip),%rcx
9b5f(7): lea 0xcc27(%rip),%rsi
9b66(7): lea 0xc883(%rip),%rdi
9b6d(5): mov $0xb88,%edx
9b72(5): call 0xffff8cae(%rip)
9b77(7): lea 0xcc3a(%rip),%rcx
9b7e(7): lea 0xcc08(%rip),%rsi
9b85(7): lea 0xc83c(%rip),%rdi
9b8c(5): mov $0xb87,%edx
9b91(5): call 0xffff8c8f(%rip)
9b96(7): lea 0xcc1b(%rip),%rcx
9b9d(7): lea 0xcbe9(%rip),%rsi
9ba4(7): lea 0xcbff(%rip),%rdi
9bab(5): mov $0xb86,%edx
9bb0(5): call 0xffff8c70(%rip)

"src_to_dest_hash" :
9bc0(3): mov (%rdi),%rax
9bc3(2): xor %edx,%edx
9bc5(3): div %rsi,%rax
9bc8(3): mov %rdx,%rax
9bcb(1): ret near (%rsp)

"src_to_dest_compare" :
9bd0(2): xor %eax,%eax
9bd2(3): mov (%rsi),%rdx
9bd5(3): cmp %rdx,(%rdi)
9bd8(2): jz 0x8(%rip)
9bda(2): REP ret near (%rsp)
9bdc(4): nop 0x0(%rax)
9be0(4): mov 0x8(%rsi),%rax
9be4(4): cmp %rax,0x8(%rdi)
9be8(3): setz %al
9beb(1): ret near (%rsp)

"src_to_dest_free" :
9bf0(1): push %rbx
9bf1(3): mov %rdi,%rbx
9bf4(4): mov 0x10(%rdi),%rdi
9bf8(5): call 0xffff9088(%rip)
9bfd(3): mov %rbx,%rdi
9c00(1): pop %rbx
9c01(5): jmp 0xffff907f(%rip)

"forget_created" :
9c10(1): push %rbx
9c11(4): sub $0x20,%rsp
9c15(4): mov %rdi,(%rsp)
9c19(7): mov 0x212938(%rip),%rdi
9c20(5): mov %rsi,0x8(%rsp)
9c25(3): mov %rsp,%rsi
9c28(9): mov $0x0,0x10(%rsp)
9c31(9): mov $0x28,%rax
9c3a(5): mov %rax,0x18(%rsp)
9c3f(2): xor %eax,%eax
9c41(5): call 0x2c0f(%rip)
9c46(3): test %rax,%rax
9c49(2): jz 0x16(%rip)
9c4b(4): mov 0x10(%rax),%rdi
9c4f(3): mov %rax,%rbx
9c52(5): call 0xffff902e(%rip)
9c57(3): mov %rbx,%rdi
9c5a(5): call 0xffff9026(%rip)
9c5f(5): mov 0x18(%rsp),%rax
9c64(9): xor $0x28,%rax
9c6d(2): jnz 0x8(%rip)
9c6f(4): add $0x20,%rsp
9c73(1): pop %rbx
9c74(1): ret near (%rsp)
9c75(5): call 0xffff8b0b(%rip)

"src_to_dest_lookup" :
9c80(4): sub $0x28,%rsp
9c84(4): mov %rdi,(%rsp)
9c88(7): mov 0x2128c9(%rip),%rdi
9c8f(5): mov %rsi,0x8(%rsp)
9c94(3): mov %rsp,%rsi
9c97(9): mov $0x28,%rax
9ca0(5): mov %rax,0x18(%rsp)
9ca5(2): xor %eax,%eax
9ca7(5): call 0x20d9(%rip)
9cac(3): test %rax,%rax
9caf(2): jz 0x21(%rip)
9cb1(4): mov 0x10(%rax),%rax
9cb5(5): mov 0x18(%rsp),%rdx
9cba(9): xor $0x28,%rdx
9cc3(2): jnz 0x11(%rip)
9cc5(4): add $0x28,%rsp
9cc9(1): ret near (%rsp)
9cca(6): nop 0x0(%rax,%rax,1)
9cd0(2): xor %eax,%eax
9cd2(2): jmp 0xffffffe3(%rip)
9cd4(5): call 0xffff8aac(%rip)

"remember_copied" :
9ce0(2): push %r13
9ce2(2): push %r12
9ce4(3): mov %rdi,%r13
9ce7(1): push %rbp
9ce8(1): push %rbx
9ce9(5): mov $0x18,%edi
9cee(3): mov %rsi,%r12
9cf1(3): mov %rdx,%rbp
9cf4(4): sub $0x8,%rsp
9cf8(5): call 0x6fc8(%rip)
9cfd(3): mov %r13,%rdi
9d00(3): mov %rax,%rbx
9d03(5): call 0x71ed(%rip)
9d08(7): mov 0x212849(%rip),%rdi
9d0f(3): mov %rbx,%rsi
9d12(4): mov %rax,0x10(%rbx)
9d16(3): mov %r12,(%rbx)
9d19(4): mov %rbp,0x8(%rbx)
9d1d(5): call 0x2ad3(%rip)
9d22(3): test %rax,%rax
9d25(2): jz 0x2f(%rip)
9d27(3): cmp %rax,%rbx
9d2a(3): mov %rax,%rbp
9d2d(2): jz 0x23(%rip)
9d2f(4): mov 0x10(%rbx),%rdi
9d33(5): call 0xffff8f4d(%rip)
9d38(3): mov %rbx,%rdi
9d3b(5): call 0xffff8f45(%rip)
9d40(4): mov 0x10(%rbp),%rax
9d44(4): add $0x8,%rsp
9d48(1): pop %rbx
9d49(1): pop %rbp
9d4a(2): pop %r12
9d4c(2): pop %r13
9d4e(1): ret near (%rsp)
9d4f(1): nop 
9d50(2): xor %eax,%eax
9d52(2): jmp 0xfffffff2(%rip)
9d54(5): call 0x71bc(%rip)

"hash_init" :
9d60(7): lea 0xfffffe89(%rip),%r8
9d67(7): lea 0xfffffe62(%rip),%rcx
9d6e(7): lea 0xfffffe4b(%rip),%rdx
9d75(4): sub $0x8,%rsp
9d79(2): xor %esi,%esi
9d7b(5): mov $0x67,%edi
9d80(5): call 0x2270(%rip)
9d85(3): test %rax,%rax
9d88(7): mov %rax,0x2127c9(%rip)
9d8f(2): jz 0x7(%rip)
9d91(4): add $0x8,%rsp
9d95(1): ret near (%rsp)
9d96(5): call 0x717a(%rip)

"forget_all" :
9da0(7): mov 0x2127b1(%rip),%rdi
9da7(5): jmp 0x2499(%rip)

"extent_scan_init" :
9db0(2): mov %edi,(%rsi)
9db2(8): mov $0x0,0x18(%rsi)
9dba(8): mov $0x0,0x28(%rsi)
9dc2(8): mov $0x0,0x8(%rsi)
9dca(4): mov $0x0,0x20(%rsi)
9dce(4): mov $0x0,0x21(%rsi)
9dd2(7): mov $0x1,0x10(%rsi)
9dd9(1): ret near (%rsp)

"extent_scan_read" :
9de0(2): push %r15
9de2(2): push %r14
9de4(3): xor %r15d,%r15d
9de7(2): push %r13
9de9(2): push %r12
9deb(3): mov %rdi,%r14
9dee(1): push %rbp
9def(1): push %rbx
9df0(a): mov $0x9223372036854775807,%r13
9dfa(7): sub $0x1018,%rsp
9e01(4): mov 0x28(%rdi),%rbx
9e05(4): mov 0x8(%rdi),%rdx
9e09(3): mov %rsp,%rbp
9e0c(9): mov $0x28,%rax
9e15(8): mov %rax,0x1008(%rsp)
9e1d(2): xor %eax,%eax
9e1f(4): lea 0x20(%rbp),%r12
9e23(2): xor %eax,%eax
9e25(5): mov $0x200,%ecx
9e2a(3): mov %rbp,%rdi
9e2d(3): REP stosd %rax,rdi(%es,10)
9e30(4): mov 0x10(%r14),%eax
9e34(3): mov (%r14),%edi
9e37(5): mov $0xc020660b,%esi
9e3c(4): mov %rdx,(%rsp)
9e40(3): not %rdx
9e43(8): mov $0x48,0x18(%rsp)
9e4b(5): mov %rdx,0x8(%rsp)
9e50(3): mov %rbp,%rdx
9e53(4): mov %eax,0x10(%rsp)
9e57(2): xor %eax,%eax
9e59(5): call 0xffff89f7(%rip)
9e5e(2): test %eax,%eax
9e60(6): js 0xd0(%rip)
9e66(4): mov 0x14(%rsp),%eax
9e6a(2): test %eax,%eax
9e6c(6): jz 0x23c(%rip)
9e72(4): mov 0x18(%r14),%rcx
9e76(3): mov %rax,%rdx
9e79(3): not %rdx
9e7c(3): cmp %rdx,%rcx
9e7f(6): jnbe 0x23b(%rip)
9e85(4): mov 0x28(%r14),%rdi
9e89(5): mov $0x18,%edx
9e8e(3): add %rax,%rcx
9e91(3): mov %rdx,%rax
9e94(2): xor %esi,%esi
9e96(4): mov %rcx,0x18(%r14)
9e9a(3): sub %rdi,%rbx
9e9d(3): mul %rax,%rcx,%rdx
9ea0(6): jo 0x239(%rip)
9ea6(3): test %rax,%rax
9ea9(6): js 0x23a(%rip)
9eaf(3): test %rsi,%rsi
9eb2(6): jnz 0x231(%rip)
9eb8(4): lea 0x0(%rcx,%rcx,2),%rsi
9ebc(4): shl/sal $0x3,%rsi
9ec0(5): call 0x6e60(%rip)
9ec5(5): mov 0x14(%rsp),%r8d
9eca(3): add %rax,%rbx
9ecd(4): mov %rax,0x28(%r14)
9ed1(3): test %r8d,%r8d
9ed4(6): jz 0x13c(%rip)
9eda(5): mov 0x30(%rsp),%rax
9edf(5): mov 0x20(%rsp),%rdx
9ee4(3): mov %r13,%rcx
9ee7(3): sub %rax,%rcx
9eea(3): cmp %rcx,%rdx
9eed(6): jnbe 0xdd(%rip)
9ef3(2): xor %ecx,%ecx
9ef5(3): mov %r12,%rsi
9ef8(3): test %r15d,%r15d
9efb(2): jz 0x75(%rip)
9efd(4): mov 0x28(%rsi),%r9d
9f01(4): mov 0x8(%rbx),%r10
9f05(3): mov (%rbx),%rdi
9f08(3): mov %r9d,%r11d
9f0b(3): add %r10,%rdi
9f0e(4): and $0xfe,%r11d
9f12(4): cmp %r11d,0x10(%rbx)
9f16(6): jz 0xda(%rip)
9f1c(3): cmp %rdx,%rdi
9f1f(2): jbe 0x5e(%rip)
9f21(3): mov %rdi,%r10
9f24(3): sub %rdx,%r10
9f27(3): cmp %rax,%r10
9f2a(6): jnb 0x11e(%rip)
9f30(2): xor %eax,%eax
9f32(5): cmp $0x0,0x8(%r14)
9f37(2): jnz 0x9(%rip)
9f39(5): mov $0x1,0x20(%r14)
9f3e(2): xor %eax,%eax
9f40(8): mov 0x1008(%rsp),%rbx
9f48(9): xor $0x28,%rbx
9f51(6): jnz 0x197(%rip)
9f57(7): add $0x1018,%rsp
9f5e(1): pop %rbx
9f5f(1): pop %rbp
9f60(2): pop %r12
9f62(2): pop %r13
9f64(2): pop %r14
9f66(2): pop %r15
9f68(1): ret near (%rsp)
9f69(7): nop 0x0(%rax)
9f70(4): mov 0x8(%r14),%rdi
9f74(3): cmp %rdx,%rdi
9f77(2): jnbe 0xffffffaa(%rip)
9f79(4): mov 0x28(%rsi),%r9d
9f7d(3): mov %r15d,%esi
9f80(4): add $0x1,%r15d
9f84(4): lea 0x0(%rsi,%rsi,2),%rdi
9f88(4): mov 0x28(%r14),%rsi
9f8c(4): lea 0x0(%rsi,%rdi,8),%rbx
9f90(3): mov %rdx,(%rbx)
9f93(4): mov %rax,0x8(%rbx)
9f97(4): mov %r9d,0x10(%rbx)
9f9b(3): add $0x1,%ecx
9f9e(3): cmp %r8d,%ecx
9fa1(2): jnb 0x6f(%rip)
9fa3(2): mov %ecx,%edx
9fa5(3): mov %r13,%rdi
9fa8(8): lea 0x0(,%rdx,8),%rax
9fb0(3): sub %rdx,%rax
9fb3(4): lea 0x0(%r12,%rax,8),%rsi
9fb7(4): mov 0x10(%rsi),%rax
9fbb(3): mov (%rsi),%rdx
9fbe(3): sub %rax,%rdi
9fc1(3): cmp %rdi,%rdx
9fc4(6): jbe 0xffffff34(%rip)
9fca(7): lea 0xc89f(%rip),%rcx
9fd1(7): lea 0xc7f0(%rip),%rsi
9fd8(7): lea 0xc849(%rip),%rdi
9fdf(5): mov $0x8d,%edx
9fe4(5): call 0xffff883c(%rip)
9fe9(7): nop 0x0(%rax)
9ff0(3): cmp %rdx,%rdi
9ff3(6): jnz 0xffffff29(%rip)
9ff9(3): add $0x1,%ecx
9ffc(3): add %r10,%rax
9fff(4): mov %r9d,0x10(%rbx)
a003(3): cmp %r8d,%ecx
a006(4): mov %rax,0x8(%rbx)
a00a(2): jb 0xffffff99(%rip)
a00c(4): nop 0x0(%rax)
a010(4): test $0x1,0x10(%rbx)
a014(2): jnz 0x4c(%rip)
a016(4): cmp $0x48,%r15d
a01a(5): movzx 0x21(%r14),%eax
a01f(2): jbe 0x61(%rip)
a021(2): test %al,%al
a023(2): jnz 0x42(%rip)
a025(4): lea 0xffffffff(%r15),%eax
a029(4): mov 0x28(%r14),%rdx
a02d(4): lea 0x0(%rax,%rax,2),%rcx
a031(4): mov %rax,0x18(%r14)
a035(5): mov 0xffffffe8(%rdx,%rcx,8),%rax
a03a(5): add 0xfffffff0(%rdx,%rcx,8),%rax
a03f(4): mov %rax,0x8(%r14)
a043(2): jmp 0x29(%rip)
a045(3): nop (%rax)
a048(3): sub %r10,%rax
a04b(3): mov %rdi,(%rsi)
a04e(3): sub $0x1,%ecx
a051(4): mov %rax,0x10(%rsi)
a055(5): jmp 0xffffff46(%rip)
a05a(6): nop 0x0(%rax,%rax,1)
a060(5): mov $0x1,0x21(%r14)
a065(3): mov %r15d,%eax
a068(4): mov %rax,0x18(%r14)
a06c(5): mov $0x1,%eax
a071(5): jmp 0xfffffecf(%rip)
a076(a): nop 0x0(%rax,%rax,1)
a080(3): mov %r15d,%ecx
a083(2): test %al,%al
a085(4): mov %rcx,0x18(%r14)
a089(2): jnz 0xffffffe3(%rip)
a08b(4): mov 0x8(%rbx),%rdx
a08f(3): add (%rbx),%rdx
a092(4): cmp $0x47,%r15d
a096(4): mov %rdx,0x8(%r14)
a09a(6): jbe 0xfffffd89(%rip)
a0a0(2): jmp 0xffffffcc(%rip)
a0a2(6): nop 0x0(%rax,%rax,1)
a0a8(5): cmp $0x0,0x8(%r14)
a0ad(5): mov $0x1,0x21(%r14)
a0b2(3): setnz %al
a0b5(5): jmp 0xfffffe8b(%rip)
a0ba(7): lea 0xc7af(%rip),%rcx
a0c1(7): lea 0xc700(%rip),%rsi
a0c8(7): lea 0xc721(%rip),%rdi
a0cf(5): mov $0x7e,%edx
a0d4(5): call 0xffff874c(%rip)
a0d9(5): mov $0x1,%esi
a0de(5): jmp 0xfffffdc8(%rip)
a0e3(5): call 0x6e2d(%rip)
a0e8(5): call 0xffff8698(%rip)

"try_link" :
a0f0(3): mov %rsi,%rax
a0f3(3): mov %rdi,%rcx
a0f6(3): mov 0x10(%rsi),%edx
a0f9(4): mov 0x14(%rax),%r8d
a0fd(4): mov 0x8(%rsi),%rsi
a101(2): mov (%rax),%edi
a103(5): jmp 0xffff898d(%rip)

"samedir_template" :
a110(2): push %r12
a112(1): push %rbp
a113(3): mov %rdi,%rbp
a116(1): push %rbx
a117(3): mov %rsi,%r12
a11a(5): call 0xfa6(%rip)
a11f(3): sub %rbp,%rax
a122(4): lea 0x9(%rax),%rdi
a126(3): mov %rax,%rbx
a129(7): cmp $0x100,%rdi
a130(2): jbe 0x11(%rip)
a132(5): call 0xffff88ce(%rip)
a137(3): mov %rax,%r12
a13a(2): xor %eax,%eax
a13c(3): test %r12,%r12
a13f(2): jz 0x24(%rip)
a141(3): mov %rbx,%rdx
a144(3): mov %rbp,%rsi
a147(3): mov %r12,%rdi
a14a(5): call 0xffff89a6(%rip)
a14f(a): mov $0x6365935209750754627,%rcx
a159(4): mov $0x0,0x8(%rax)
a15d(3): mov %rcx,(%rax)
a160(3): mov %r12,%rax
a163(1): pop %rbx
a164(1): pop %rbp
a165(2): pop %r12
a167(1): ret near (%rsp)

"try_symlink" :
a170(3): mov %rsi,%rax
a173(3): mov %rdi,%rdx
a176(3): mov 0x8(%rsi),%esi
a179(3): mov (%rax),%rdi
a17c(5): jmp 0xffff8ac4(%rip)

"force_linkat" :
a190(2): push %r15
a192(2): push %r14
a194(3): mov %edi,%r14d
a197(2): push %r13
a199(2): push %r12
a19b(3): mov %rsi,%r13
a19e(1): push %rbp
a19f(1): push %rbx
a1a0(3): mov %rcx,%rbx
a1a3(2): mov %edx,%ebp
a1a5(3): mov %r8d,%r12d
a1a8(7): sub $0x148,%rsp
a1af(7): mov 0x180(%rsp),%ecx
a1b6(9): mov $0x28,%rax
a1bf(8): mov %rax,0x138(%rsp)
a1c7(2): xor %eax,%eax
a1c9(2): test %ecx,%ecx
a1cb(6): js 0xb5(%rip)
a1d1(4): cmp $0x1,%r9b
a1d5(2): jnz 0x7b(%rip)
a1d7(3): cmp $0x11,%ecx
a1da(2): jnz 0x76(%rip)
a1dc(5): lea 0x30(%rsp),%rax
a1e1(3): mov %rbx,%rdi
a1e4(3): mov %rax,%rsi
a1e7(4): mov %rax,(%rsp)
a1eb(5): call 0xffffff25(%rip)
a1f0(3): test %rax,%rax
a1f3(3): mov %rax,%r15
a1f6(6): jz 0xea(%rip)
a1fc(5): lea 0x10(%rsp),%rdx
a201(7): lea 0xfffffee8(%rip),%rcx
a208(2): xor %esi,%esi
a20a(6): mov $0x6,%r8d
a210(3): mov %rax,%rdi
a213(5): mov %r14d,0x10(%rsp)
a218(5): mov %r13,0x18(%rsp)
a21d(4): mov %ebp,0x20(%rsp)
a221(5): mov %r12d,0x24(%rsp)
a226(5): call 0x519a(%rip)
a22b(2): test %eax,%eax
a22d(2): jz 0x7b(%rip)
a22f(5): call 0xffff8371(%rip)
a234(2): mov (%rax),%ecx
a236(4): cmp (%rsp),%r15
a23a(2): jz 0x16(%rip)
a23c(3): mov %r15,%rdi
a23f(3): mov %ecx,(%rsp)
a242(5): call 0xffff8a3e(%rip)
a247(3): mov (%rsp),%ecx
a24a(6): nop 0x0(%rax,%rax,1)
a250(8): mov 0x138(%rsp),%rbx
a258(9): xor $0x28,%rbx
a261(2): mov %ecx,%eax
a263(6): jnz 0x89(%rip)
a269(7): add $0x148,%rsp
a270(1): pop %rbx
a271(1): pop %rbp
a272(2): pop %r12
a274(2): pop %r13
a276(2): pop %r14
a278(2): pop %r15
a27a(1): ret near (%rsp)
a27b(5): nop 0x0(%rax,%rax,1)
a280(3): mov %rbx,%rcx
a283(4): mov %r9d,(%rsp)
a287(5): call 0xffff8809(%rip)
a28c(2): test %eax,%eax
a28e(2): mov %eax,%ecx
a290(2): jz 0xffffffc0(%rip)
a292(5): call 0xffff830e(%rip)
a297(4): mov (%rsp),%r9d
a29b(2): mov (%rax),%ecx
a29d(5): jmp 0xffffff34(%rip)
a2a2(6): nop 0x0(%rax,%rax,1)
a2a8(3): mov %rbx,%rcx
a2ab(2): mov %ebp,%edx
a2ad(3): mov %r15,%rsi
a2b0(2): mov %ebp,%edi
a2b2(5): call 0xffff891e(%rip)
a2b7(2): test %eax,%eax
a2b9(5): mov $0xffffffff,%ecx
a2be(2): jz 0x9(%rip)
a2c0(5): call 0xffff82e0(%rip)
a2c5(2): mov (%rax),%ecx
a2c7(2): xor %edx,%edx
a2c9(3): mov %r15,%rsi
a2cc(2): mov %ebp,%edi
a2ce(4): mov %ecx,0xc(%rsp)
a2d2(5): call 0xffff834e(%rip)
a2d7(4): mov 0xc(%rsp),%ecx
a2db(5): jmp 0xffffff5b(%rip)
a2e0(5): call 0xffff82c0(%rip)
a2e5(2): mov (%rax),%ecx
a2e7(5): jmp 0xffffff69(%rip)
a2ec(5): call 0xffff8494(%rip)

"force_symlinkat" :
a300(2): push %r14
a302(2): push %r13
a304(2): push %r12
a306(1): push %rbp
a307(3): mov %rdi,%r12
a30a(1): push %rbx
a30b(2): mov %esi,%ebp
a30d(3): mov %rdx,%rbx
a310(7): sub $0x130,%rsp
a317(9): mov $0x28,%rax
a320(8): mov %rax,0x128(%rsp)
a328(2): xor %eax,%eax
a32a(3): test %r8d,%r8d
a32d(6): js 0xab(%rip)
a333(3): cmp $0x1,%cl
a336(2): jnz 0x72(%rip)
a338(4): cmp $0x11,%r8d
a33c(2): jnz 0x6c(%rip)
a33e(5): lea 0x20(%rsp),%r14
a343(3): mov %rbx,%rdi
a346(3): mov %r14,%rsi
a349(5): call 0xfffffdc7(%rip)
a34e(3): test %rax,%rax
a351(3): mov %rax,%r13
a354(6): jz 0xec(%rip)
a35a(5): lea 0x10(%rsp),%rdx
a35f(7): lea 0xfffffe0a(%rip),%rcx
a366(2): xor %esi,%esi
a368(6): mov $0x6,%r8d
a36e(3): mov %rax,%rdi
a371(5): mov %r12,0x10(%rsp)
a376(4): mov %ebp,0x18(%rsp)
a37a(5): call 0x5046(%rip)
a37f(2): test %eax,%eax
a381(2): jz 0x7f(%rip)
a383(5): call 0xffff821d(%rip)
a388(3): mov (%rax),%r8d
a38b(3): cmp %r14,%r13
a38e(2): jz 0x1a(%rip)
a390(3): mov %r13,%rdi
a393(5): mov %r8d,0xc(%rsp)
a398(5): call 0xffff88e8(%rip)
a39d(5): mov 0xc(%rsp),%r8d
a3a2(6): nop 0x0(%rax,%rax,1)
a3a8(8): mov 0x128(%rsp),%rbx
a3b0(9): xor $0x28,%rbx
a3b9(3): mov %r8d,%eax
a3bc(6): jnz 0x91(%rip)
a3c2(7): add $0x130,%rsp
a3c9(1): pop %rbx
a3ca(1): pop %rbp
a3cb(2): pop %r12
a3cd(2): pop %r13
a3cf(2): pop %r14
a3d1(1): ret near (%rsp)
a3d2(6): nop 0x0(%rax,%rax,1)
a3d8(4): mov %ecx,0xc(%rsp)
a3dc(5): call 0xffff8864(%rip)
a3e1(2): test %eax,%eax
a3e3(3): mov %eax,%r8d
a3e6(2): jz 0xffffffc2(%rip)
a3e8(5): call 0xffff81b8(%rip)
a3ed(4): mov 0xc(%rsp),%ecx
a3f1(3): mov (%rax),%r8d
a3f4(5): jmp 0xffffff3f(%rip)
a3f9(7): nop 0x0(%rax)
a400(3): mov %rbx,%rcx
a403(2): mov %ebp,%edx
a405(3): mov %r13,%rsi
a408(2): mov %ebp,%edi
a40a(5): call 0xffff87c6(%rip)
a40f(2): test %eax,%eax
a411(6): mov $0xffffffff,%r8d
a417(6): jz 0xffffff74(%rip)
a41d(5): call 0xffff8183(%rip)
a422(3): mov (%rax),%r8d
a425(2): xor %edx,%edx
a427(3): mov %r13,%rsi
a42a(2): mov %ebp,%edi
a42c(5): mov %r8d,0xc(%rsp)
a431(5): call 0xffff81ef(%rip)
a436(5): mov 0xc(%rsp),%r8d
a43b(5): jmp 0xffffff50(%rip)
a440(5): call 0xffff8160(%rip)
a445(3): mov (%rax),%r8d
a448(5): jmp 0xffffff60(%rip)
a44d(5): call 0xffff8333(%rip)

"copy_acl" :
a460(2): push %r12
a462(1): push %rbp
a463(3): mov %rdi,%r12
a466(1): push %rbx
a467(3): mov %rdx,%rbp
a46a(5): call 0x27e6(%rip)
a46f(3): cmp $0xfe,%eax
a472(2): mov %eax,%ebx
a474(2): jz 0x4c(%rip)
a476(3): cmp $0xff,%eax
a479(2): jnz 0x39(%rip)
a47b(3): mov %rbp,%rdi
a47e(5): call 0x4522(%rip)
a483(7): lea 0xc23f(%rip),%rsi
a48a(5): mov $0x5,%edx
a48f(2): xor %edi,%edi
a491(3): mov %rax,%r12
a494(5): call 0xffff829c(%rip)
a499(3): mov %rax,%rbp
a49c(5): call 0xffff8104(%rip)
a4a1(2): mov (%rax),%esi
a4a3(3): mov %r12,%rcx
a4a6(3): mov %rbp,%rdx
a4a9(2): xor %edi,%edi
a4ab(2): xor %eax,%eax
a4ad(5): call 0xffff8663(%rip)
a4b2(2): mov %ebx,%eax
a4b4(1): pop %rbx
a4b5(1): pop %rbp
a4b6(2): pop %r12
a4b8(1): ret near (%rsp)
a4b9(7): nop 0x0(%rax)
a4c0(3): mov %r12,%rdi
a4c3(5): call 0x44dd(%rip)
a4c8(3): mov %rax,%rbp
a4cb(5): call 0xffff80d5(%rip)
a4d0(2): mov (%rax),%esi
a4d2(7): lea 0xcf6e(%rip),%rdx
a4d9(3): mov %rbp,%rcx
a4dc(2): xor %eax,%eax
a4de(2): xor %edi,%edi
a4e0(5): call 0xffff8630(%rip)
a4e5(2): mov %ebx,%eax
a4e7(1): pop %rbx
a4e8(1): pop %rbp
a4e9(2): pop %r12
a4eb(1): ret near (%rsp)

"set_acl" :
a4f0(2): push %r12
a4f2(1): push %rbp
a4f3(3): mov %rdi,%rbp
a4f6(1): push %rbx
a4f7(5): call 0x27d9(%rip)
a4fc(2): test %eax,%eax
a4fe(2): mov %eax,%ebx
a500(2): jz 0x39(%rip)
a502(3): mov %rbp,%rdi
a505(5): call 0x449b(%rip)
a50a(7): lea 0xc0d5(%rip),%rsi
a511(5): mov $0x5,%edx
a516(2): xor %edi,%edi
a518(3): mov %rax,%r12
a51b(5): call 0xffff8215(%rip)
a520(3): mov %rax,%rbp
a523(5): call 0xffff807d(%rip)
a528(2): mov (%rax),%esi
a52a(3): mov %r12,%rcx
a52d(3): mov %rbp,%rdx
a530(2): xor %edi,%edi
a532(2): xor %eax,%eax
a534(5): call 0xffff85dc(%rip)
a539(2): mov %ebx,%eax
a53b(1): pop %rbx
a53c(1): pop %rbp
a53d(2): pop %r12
a53f(1): ret near (%rsp)

"areadlink_with_size" :
a540(2): push %r15
a542(2): push %r14
a544(5): mov $0x401,%eax
a549(2): push %r13
a54b(2): push %r12
a54d(3): mov %rdi,%r13
a550(1): push %rbp
a551(1): push %rbx
a552(4): lea 0x1(%rsi),%rbx
a556(a): mov $0x4611686018427387903,%r14
a560(a): mov $0x9223372036854775806,%r15
a56a(4): sub $0x8,%rsp
a56e(7): cmp $0x401,%rsi
a575(4): cmovnb %rax,%rbx
a579(7): nop 0x0(%rax)
a580(3): mov %rbx,%rdi
a583(5): call 0xffff847d(%rip)
a588(3): test %rax,%rax
a58b(3): mov %rax,%rbp
a58e(2): jz 0x3d(%rip)
a590(3): mov %rbx,%rdx
a593(3): mov %rax,%rsi
a596(3): mov %r13,%rdi
a599(5): call 0xffff80c7(%rip)
a59e(3): test %rax,%rax
a5a1(3): mov %rax,%r12
a5a4(2): js 0x54(%rip)
a5a6(3): cmp %r12,%rbx
a5a9(2): jnbe 0x67(%rip)
a5ab(3): mov %rbp,%rdi
a5ae(5): call 0xffff86d2(%rip)
a5b3(3): cmp %r14,%rbx
a5b6(2): jnbe 0x2a(%rip)
a5b8(3): add %rbx,%rbx
a5bb(3): mov %rbx,%rdi
a5be(5): call 0xffff8442(%rip)
a5c3(3): test %rax,%rax
a5c6(3): mov %rax,%rbp
a5c9(2): jnz 0xffffffc7(%rip)
a5cb(4): add $0x8,%rsp
a5cf(3): mov %rbp,%rax
a5d2(1): pop %rbx
a5d3(1): pop %rbp
a5d4(2): pop %r12
a5d6(2): pop %r13
a5d8(2): pop %r14
a5da(2): pop %r15
a5dc(1): ret near (%rsp)
a5dd(3): nop (%rax)
a5e0(3): cmp %r15,%rbx
a5e3(2): jnbe 0x3d(%rip)
a5e5(a): mov $0x9223372036854775807,%rbx
a5ef(2): jmp 0xffffff91(%rip)
a5f1(7): nop 0x0(%rax)
a5f8(5): call 0xffff7fa8(%rip)
a5fd(3): cmp $0x22,(%rax)
a600(2): jz 0xffffffa6(%rip)
a602(3): mov %rbp,%rdi
a605(2): xor %ebp,%ebp
a607(5): call 0xffff8679(%rip)
a60c(2): jmp 0xffffffbf(%rip)
a60e(2): nop 
a610(6): mov $0x0,0x0(%rbp,%r12,1)
a616(2): jmp 0xffffffb5(%rip)
a618(8): nop 0x0(%rax,%rax,1)
a620(5): call 0xffff7f80(%rip)
a625(2): xor %ebp,%ebp
a627(6): mov $0xc,(%rax)
a62d(2): jmp 0xffffff9e(%rip)

"set_simple_backup_suffix" :
a630(3): test %rdi,%rdi
a633(1): push %rbx
a634(3): mov %rdi,%rbx
a637(2): jz 0x29(%rip)
a639(3): cmp $0x0,(%rbx)
a63c(2): jnz 0x14(%rip)
a63e(7): lea 0xc241(%rip),%rbx
a645(7): mov %rbx,0x211f14(%rip)
a64c(1): pop %rbx
a64d(1): ret near (%rsp)
a64e(2): nop 
a650(3): mov %rbx,%rdi
a653(5): call 0xa6d(%rip)
a658(3): cmp %rbx,%rax
a65b(2): jnz 0xffffffe3(%rip)
a65d(2): jmp 0xffffffe8(%rip)
a65f(1): nop 
a660(7): lea 0xc221(%rip),%rdi
a667(5): call 0xffff7f09(%rip)
a66c(3): test %rax,%rax
a66f(3): mov %rax,%rbx
a672(2): jz 0xffffffcc(%rip)
a674(2): jmp 0xffffffc5(%rip)

"backupfile_internal" :
a680(2): push %r15
a682(2): push %r14
a684(2): push %r13
a686(2): push %r12
a688(1): push %rbp
a689(1): push %rbx
a68a(3): mov %rsi,%rbx
a68d(7): sub $0x88,%rsp
a694(4): mov %edi,0x64(%rsp)
a698(3): mov %rsi,%rdi
a69b(5): mov %rsi,0x10(%rsp)
a6a0(4): mov %edx,0x20(%rsp)
a6a4(4): mov %cl,0x63(%rsp)
a6a8(9): mov $0x28,%rax
a6b1(5): mov %rax,0x78(%rsp)
a6b6(2): xor %eax,%eax
a6b8(5): call 0xa08(%rip)
a6bd(3): mov %rax,%rdi
a6c0(3): mov %rax,%r14
a6c3(5): call 0xffff808d(%rip)
a6c8(7): mov 0x211e91(%rip),%rdi
a6cf(3): sub %rbx,%r14
a6d2(3): add %r14,%rax
a6d5(5): mov %rax,0x18(%rsp)
a6da(3): test %rdi,%rdi
a6dd(6): jz 0x587(%rip)
a6e3(5): call 0xffff806d(%rip)
a6e8(5): mov 0x18(%rsp),%rsi
a6ed(4): add $0x1,%rax
a6f1(4): cmp $0x9,%rax
a6f5(5): mov %rax,0x50(%rsp)
a6fa(4): lea 0x1(%rsi),%rdx
a6fe(3): mov %rax,%rsi
a701(5): mov $0x9,%eax
a706(4): cmovnb %rsi,%rax
a70a(3): add %rdx,%rax
a70d(5): mov %rdx,0x38(%rsp)
a712(3): mov %rax,%rdi
a715(5): mov %rax,0x40(%rsp)
a71a(5): call 0xffff82e6(%rip)
a71f(3): test %rax,%rax
a722(3): mov %rax,%r15
a725(6): jz 0x2eb(%rip)
a72b(5): lea 0x74(%rsp),%rax
a730(8): mov $0xffffffff,0x74(%rsp)
a738(9): mov $0x0,0x48(%rsp)
a741(3): xor %r13d,%r13d
a744(5): mov %rax,0x68(%rsp)
a749(5): mov 0x38(%rsp),%rdx
a74e(5): mov 0x10(%rsp),%rsi
a753(3): mov %r15,%rdi
a756(5): call 0xffff824a(%rip)
a75b(5): cmp $0x1,0x20(%rsp)
a760(6): jz 0x2e0(%rip)
a766(4): lea 0x0(%r15,%r14,1),%rbp
a76a(3): mov %rbp,%rdi
a76d(5): call 0x9b3(%rip)
a772(3): test %r13,%r13
a775(3): mov %rax,%r12
a778(6): jz 0x3a8(%rip)
a77e(3): mov %r13,%rdi
a781(5): call 0xffff80ff(%rip)
a786(5): mov 0x40(%rsp),%rax
a78b(9): mov $0x1,0x28(%rsp)
a794(8): mov $0x2,0x24(%rsp)
a79c(5): mov %rax,0x30(%rsp)
a7a1(5): lea 0x4(%r12),%rax
a7a6(5): mov %rax,0x8(%rsp)
a7ab(5): nop 0x0(%rax,%rax,1)
a7b0(3): mov %r13,%rdi
a7b3(5): call 0xffff823d(%rip)
a7b8(3): test %rax,%rax
a7bb(6): jz 0x1b5(%rip)
a7c1(4): lea 0x13(%rax),%rbx
a7c5(3): mov %rbx,%rdi
a7c8(5): call 0xffff7f88(%rip)
a7cd(5): cmp 0x8(%rsp),%rax
a7d2(2): jb 0xffffffde(%rip)
a7d4(5): lea 0x2(%r12),%rbp
a7d9(4): lea 0x0(%r15,%r14,1),%rdi
a7dd(3): mov %rbx,%rsi
a7e0(3): mov %rbp,%rdx
a7e3(5): call 0xffff80ed(%rip)
a7e8(2): test %eax,%eax
a7ea(2): jnz 0xffffffc6(%rip)
a7ec(3): add %rbp,%rbx
a7ef(3): movzx (%rbx),%eax
a7f2(3): lea 0xffffffcf(%rax),%edx
a7f5(3): cmp $0x8,%dl
a7f8(2): jnbe 0xffffffb8(%rip)
a7fa(2): cmp $0x39,%al
a7fc(4): movsx 0x1(%rbx),%eax
a800(5): mov $0x1,%ebp
a805(4): setz %r8b
a809(2): mov %eax,%ecx
a80b(3): sub $0x30,%eax
a80e(3): cmp $0x9,%eax
a811(2): jnbe 0x22(%rip)
a813(5): nop 0x0(%rax,%rax,1)
a818(3): cmp $0x39,%cl
a81b(3): setz %al
a81e(4): add $0x1,%rbp
a822(3): and %eax,%r8d
a825(4): movsx 0x0(%rbx,%rbp,1),%eax
a829(2): mov %eax,%ecx
a82b(3): sub $0x30,%eax
a82e(3): cmp $0x9,%eax
a831(2): jbe 0xffffffe7(%rip)
a833(3): cmp $0x7e,%cl
a836(6): jnz 0xffffff7a(%rip)
a83c(5): cmp $0x0,0x1(%rbx,%rbp,1)
a841(6): jnz 0xffffff6f(%rip)
a847(5): mov 0x28(%rsp),%rdx
a84c(3): cmp %rbp,%rdx
a84f(2): jb 0x2d(%rip)
a851(5): mov %r8b,0x58(%rsp)
a856(6): jnz 0xffffff5a(%rip)
a85c(5): mov 0x18(%rsp),%rax
a861(3): mov %rbx,%rsi
a864(5): lea 0x2(%r15,%rax,1),%rdi
a869(5): call 0xffff8067(%rip)
a86e(2): test %eax,%eax
a870(6): movzx 0x58(%rsp),%r8d
a876(6): jnle 0xffffff3a(%rip)
a87c(4): movzx %r8b,%esi
a880(4): movzx %r8b,%r9d
a884(4): mov %esi,0x24(%rsp)
a888(5): mov 0x18(%rsp),%rsi
a88d(4): lea 0x0(%r9,%rbp,1),%rax
a891(5): mov %rax,0x28(%rsp)
a896(5): lea 0x4(%rsi,%rax,1),%rcx
a89b(5): cmp 0x30(%rsp),%rcx
a8a0(6): jbe 0x338(%rip)
a8a6(5): mov $0x2,%edx
a8ab(2): xor %esi,%esi
a8ad(3): mov %rdx,%rax
a8b0(3): mul %rax,%rcx,%rdx
a8b3(6): jo 0x3d0(%rip)
a8b9(3): test %rax,%rax
a8bc(6): js 0x2b4(%rip)
a8c2(3): test %rsi,%rsi
a8c5(6): jnz 0x2ab(%rip)
a8cb(4): lea 0x0(%rcx,%rcx,1),%rax
a8cf(5): mov %rax,0x30(%rsp)
a8d4(5): mov 0x30(%rsp),%rsi
a8d9(3): mov %r15,%rdi
a8dc(5): mov %r9,0x58(%rsp)
a8e1(5): call 0xffff818f(%rip)
a8e6(3): test %rax,%rax
a8e9(3): mov %rax,%r8
a8ec(5): mov 0x58(%rsp),%r9
a8f1(6): jz 0x28f(%rip)
a8f7(5): mov 0x18(%rsp),%rax
a8fc(4): lea 0x2(%rbp),%rdx
a900(5): mov %r8,0x58(%rsp)
a905(3): mov %rbx,%rsi
a908(3): add %r8,%rax
a90b(6): mov $0x7e2e,%r8d
a911(5): lea 0x2(%rax,%r9,1),%rcx
a916(4): mov %r8w,(%rax)
a91a(4): mov $0x30,0x2(%rax)
a91e(3): mov %rcx,%rdi
a921(5): call 0xffff807f(%rip)
a926(3): add %rax,%rbp
a929(5): mov 0x58(%rsp),%r8
a92e(4): movzx 0xffffffff(%rbp),%edx
a932(4): lea 0xffffffff(%rbp),%rax
a936(3): cmp $0x39,%dl
a939(2): jnz 0x16(%rip)
a93b(5): nop 0x0(%rax,%rax,1)
a940(3): mov $0x30,(%rax)
a943(4): sub $0x1,%rax
a947(3): movzx (%rax),%edx
a94a(3): cmp $0x39,%dl
a94d(2): jz 0xfffffff3(%rip)
a94f(3): add $0x1,%edx
a952(3): mov %r13,%rdi
a955(3): mov %r8,%r15
a958(2): mov %dl,(%rax)
a95a(5): call 0xffff8096(%rip)
a95f(3): test %rax,%rax
a962(6): jnz 0xfffffe5f(%rip)
a968(8): nop 0x0(%rax,%rax,1)
a970(4): mov 0x24(%rsp),%eax
a974(3): cmp $0x2,%eax
a977(6): jz 0xe9(%rip)
a97d(3): cmp $0x3,%eax
a980(6): jz 0x200(%rip)
a986(3): cmp $0x1,%eax
a989(6): jz 0x107(%rip)
a98f(5): cmp $0x0,0x63(%rsp)
a994(6): jz 0x2ba(%rip)
a99a(4): mov 0x74(%rsp),%edx
a99e(4): lea 0x0(%r15,%r14,1),%rcx
a9a2(2): test %edx,%edx
a9a4(2): jns 0x15(%rip)
a9a6(8): mov $0xffffff9c,0x74(%rsp)
a9ae(3): mov %r15,%rcx
a9b1(5): mov $0xffffff9c,%edx
a9b6(3): xor %r14d,%r14d
a9b9(3): xor %r8d,%r8d
a9bc(5): cmp $0x1,0x20(%rsp)
a9c1(5): mov 0x10(%rsp),%rsi
a9c6(5): mov $0xffffff9c,%edi
a9cb(4): setnz %r8b
a9cf(5): call 0x3ff1(%rip)
a9d4(2): test %eax,%eax
a9d6(6): jz 0x278(%rip)
a9dc(5): call 0xffff7bc4(%rip)
a9e1(2): mov (%rax),%ebp
a9e3(3): cmp $0x11,%ebp
a9e6(6): jz 0xfffffd63(%rip)
a9ec(3): test %r13,%r13
a9ef(3): mov %rax,%rbx
a9f2(2): jz 0xa(%rip)
a9f4(3): mov %r13,%rdi
a9f7(5): call 0xffff7ea9(%rip)
a9fc(3): mov %r15,%rdi
a9ff(3): xor %r15d,%r15d
aa02(5): call 0xffff827e(%rip)
aa07(2): mov %ebp,(%rbx)
aa09(7): nop 0x0(%rax)
aa10(5): mov 0x78(%rsp),%rsi
aa15(9): xor $0x28,%rsi
aa1e(3): mov %r15,%rax
aa21(6): jnz 0x26c(%rip)
aa27(7): add $0x88,%rsp
aa2e(1): pop %rbx
aa2f(1): pop %rbp
aa30(2): pop %r12
aa32(2): pop %r13
aa34(2): pop %r14
aa36(2): pop %r15
aa38(1): ret near (%rsp)
aa39(7): nop 0x0(%rax)
aa40(5): mov 0x18(%rsp),%rax
aa45(5): mov 0x50(%rsp),%rdx
aa4a(7): mov 0x211b0f(%rip),%rsi
aa51(4): lea 0x0(%r15,%rax,1),%rdi
aa55(5): call 0xffff7f4b(%rip)
aa5a(5): jmp 0xffffff35(%rip)
aa5f(1): nop 
aa60(5): cmp $0x2,0x20(%rsp)
aa65(2): jnz 0x2b(%rip)
aa67(5): mov 0x18(%rsp),%rax
aa6c(5): mov 0x50(%rsp),%rdx
aa71(7): mov 0x211ae8(%rip),%rsi
aa78(4): lea 0x0(%r15,%rax,1),%rdi
aa7c(5): call 0xffff7f24(%rip)
aa81(8): mov $0x1,0x20(%rsp)
aa89(7): nop 0x0(%rax)
aa90(3): mov %r15,%rdi
aa93(5): call 0x62d(%rip)
aa98(3): mov %rax,%rdi
aa9b(3): mov %rax,%rbx
aa9e(5): call 0x682(%rip)
aaa3(4): cmp $0xe,%rax
aaa7(3): mov %rax,%rbp
aaaa(6): jbe 0xfffffee5(%rip)
aab0(6): cmp $0x0,0x48(%rsp)
aab6(6): jnz 0xea(%rip)
aabc(4): mov 0x74(%rsp),%edi
aac0(4): mov %edi,0x8(%rsp)
aac4(5): call 0xffff7adc(%rip)
aac9(4): mov 0x8(%rsp),%edi
aacd(3): mov %rax,%r12
aad0(2): test %edi,%edi
aad2(6): js 0x140(%rip)
aad8(6): mov $0x0,(%rax)
aade(5): mov $0x3,%esi
aae3(5): call 0xffff7e6d(%rip)
aae8(4): mov (%r12),%ecx
aaec(2): xor %edx,%edx
aaee(2): test %ecx,%ecx
aaf0(3): setz %dl
aaf3(3): sub %rdx,%rax
aaf6(3): test %rax,%rax
aaf9(5): mov %rax,0x48(%rsp)
aafe(6): jns 0xa2(%rip)
ab04(4): cmp $0xffffffff,%rax
ab08(6): jnz 0x16d(%rip)
ab0e(9): mov $0xffffffff,0x48(%rsp)
ab17(5): jmp 0xfffffe78(%rip)
ab1c(4): nop 0x0(%rax)
ab20(5): mov 0x68(%rsp),%rcx
ab25(4): mov 0x64(%rsp),%edi
ab29(6): mov $0x2e,%r9d
ab2f(2): xor %edx,%edx
ab31(4): movzx 0x0(%rbp),%ebx
ab35(3): mov %r15,%rsi
ab38(5): mov %r9w,0x0(%rbp)
ab3d(5): call 0x1ff3(%rip)
ab42(3): test %rax,%rax
ab45(3): mov %rax,%r13
ab48(5): lea 0x0(%rbp,%r12,1),%rdx
ab4d(6): jz 0x93(%rip)
ab53(4): mov %bx,0x0(%rbp)
ab57(6): mov $0x7e317e2e,(%rdx)
ab5d(4): mov $0x0,0x4(%rdx)
ab61(5): jmp 0xfffffc25(%rip)
ab66(a): nop 0x0(%rax,%rax,1)
ab70(5): mov %rcx,0x30(%rsp)
ab75(5): jmp 0xfffffd5f(%rip)
ab7a(6): nop 0x0(%rax,%rax,1)
ab80(3): mov %r15,%rdi
ab83(3): xor %r15d,%r15d
ab86(5): call 0xffff80fa(%rip)
ab8b(5): call 0xffff7a15(%rip)
ab90(6): mov $0xc,(%rax)
ab96(5): jmp 0xfffffe7a(%rip)
ab9b(5): nop 0x0(%rax,%rax,1)
aba0(5): cmp 0x48(%rsp),%rbp
aba5(6): jbe 0xfffffdea(%rip)
abab(5): mov 0x18(%rsp),%rax
abb0(5): mov 0x48(%rsp),%rsi
abb5(3): add %r15,%rax
abb8(4): lea 0xffffffff(%rsi),%rdx
abbc(3): sub %rbx,%rax
abbf(3): cmp %rsi,%rax
abc2(4): cmovnb %rdx,%rax
abc6(4): mov $0x7e,0x0(%rbx,%rax,1)
abca(5): mov $0x0,0x1(%rbx,%rax,1)
abcf(5): jmp 0xfffffdc0(%rip)
abd4(4): nop 0x0(%rax)
abd8(3): mov %r15,%r8
abdb(5): jmp 0xfffffd1c(%rip)
abe0(5): mov %rdx,0x8(%rsp)
abe5(5): call 0xffff79bb(%rip)
abea(3): cmp $0xc,(%rax)
abed(5): mov 0x8(%rsp),%rdx
abf2(4): mov %bx,0x0(%rbp)
abf6(6): mov $0x7e317e2e,(%rdx)
abfc(4): mov $0x0,0x4(%rdx)
ac00(3): setz %al
ac03(3): movzx %al,%eax
ac06(3): add $0x2,%eax
ac09(4): mov %eax,0x24(%rsp)
ac0d(5): jmp 0xfffffd63(%rip)
ac12(3): movzx (%rbx),%edx
ac15(5): mov $0x2e,%esi
ac1a(3): mov %r15,%rdi
ac1d(3): mov %si,(%rbx)
ac20(6): mov $0x0,(%rax)
ac26(5): mov $0x3,%esi
ac2b(4): mov %edx,0x8(%rsp)
ac2f(5): call 0xffff7aa1(%rip)
ac34(4): mov (%r12),%edi
ac38(4): mov 0x8(%rsp),%edx
ac3c(2): xor %ecx,%ecx
ac3e(2): test %edi,%edi
ac40(3): mov %dx,(%rbx)
ac43(3): setz %cl
ac46(3): sub %rcx,%rax
ac49(5): jmp 0xfffffead(%rip)
ac4e(3): test %r13,%r13
ac51(6): jz 0xfffffdbf(%rip)
ac57(3): mov %r13,%rdi
ac5a(5): call 0xffff7c46(%rip)
ac5f(5): jmp 0xfffffdb1(%rip)
ac64(5): call 0xfffff9cc(%rip)
ac69(7): mov 0x2118f0(%rip),%rdi
ac70(5): jmp 0xfffffa73(%rip)
ac75(9): mov $0xe,0x48(%rsp)
ac7e(5): jmp 0xffffff2d(%rip)
ac83(5): mov $0x1,%esi
ac88(5): jmp 0xfffffc31(%rip)
ac8d(5): call 0xffff7af3(%rip)

"backup_file_rename" :
aca0(5): mov $0x1,%ecx
aca5(5): jmp 0xfffff9db(%rip)

"get_version.part.0" :
acb0(4): sub $0x8,%rsp
acb4(7): mov 0x2113e5(%rip),%r9
acbb(7): lea 0x210c9e(%rip),%rdx
acc2(7): lea 0xbc17(%rip),%rcx
acc9(6): mov $0x4,%r8d
accf(5): call 0x8c61(%rip)
acd4(7): lea 0xbc05(%rip),%rdx
acdb(3): mov 0x0(%rdx,%rax,4),%eax
acde(4): add $0x8,%rsp
ace2(1): ret near (%rsp)

"find_backup_file_name" :
acf0(4): sub $0x8,%rsp
acf4(2): xor %ecx,%ecx
acf6(5): call 0xfffff98a(%rip)
acfb(3): test %rax,%rax
acfe(2): jz 0x7(%rip)
ad00(4): add $0x8,%rsp
ad04(1): ret near (%rsp)
ad05(5): call 0x620b(%rip)

"get_version" :
ad10(3): test %rsi,%rsi
ad13(2): jz 0xd(%rip)
ad15(3): cmp $0x0,(%rsi)
ad18(2): jz 0x8(%rip)
ad1a(2): jmp 0xffffff96(%rip)
ad1c(4): nop 0x0(%rax)
ad20(5): mov $0x2,%eax
ad25(1): ret near (%rsp)

"xget_version" :
ad30(3): test %rsi,%rsi
ad33(2): jz 0x7(%rip)
ad35(3): cmp $0x0,(%rsi)
ad38(2): jnz 0x2a(%rip)
ad3a(7): lea 0xbb5d(%rip),%rdi
ad41(4): sub $0x8,%rsp
ad45(5): call 0xffff782b(%rip)
ad4a(3): test %rax,%rax
ad4d(2): jz 0x23(%rip)
ad4f(3): cmp $0x0,(%rax)
ad52(2): jz 0x1e(%rip)
ad54(7): lea 0xbb42(%rip),%rdi
ad5b(3): mov %rax,%rsi
ad5e(4): add $0x8,%rsp
ad62(5): jmp 0xffffff4e(%rip)
ad67(9): nop 0x0(%rax,%rax,1)
ad70(5): mov $0x2,%eax
ad75(4): add $0x8,%rsp
ad79(1): ret near (%rsp)

"buffer_lcm" :
ad80(3): test %rdi,%rdi
ad83(3): mov %rdx,%rcx
ad86(2): jnz 0x22(%rip)
ad88(3): test %rsi,%rsi
ad8b(5): mov $0x2000,%edi
ad90(4): cmovne %rsi,%rdi
ad94(3): cmp %rcx,%rdi
ad97(4): cmovbe %rdi,%rcx
ad9b(3): mov %rcx,%r8
ad9e(3): mov %r8,%rax
ada1(1): ret near (%rsp)
ada2(6): nop 0x0(%rax,%rax,1)
ada8(3): test %rsi,%rsi
adab(2): jz 0xffffffe9(%rip)
adad(3): mov %rsi,%r8
adb0(3): mov %rdi,%rax
adb3(2): xor %edx,%edx
adb5(3): div %r8,%rax
adb8(3): test %rdx,%rdx
adbb(2): jnz 0x2d(%rip)
adbd(2): xor %edx,%edx
adbf(3): mov %rdi,%rax
adc2(3): div %r8,%rax
adc5(3): mov %rsi,%r8
adc8(4): imul %rax,%r8
adcc(3): mov %rax,%r9
adcf(3): cmp %rcx,%r8
add2(2): jnbe 0xffffffc2(%rip)
add4(2): xor %edx,%edx
add6(3): mov %r8,%rax
add9(3): div %rsi,%rax
addc(3): cmp %r9,%rax
addf(2): jnz 0xffffffb5(%rip)
ade1(2): jmp 0xffffffbd(%rip)
ade3(5): nop 0x0(%rax,%rax,1)
ade8(3): mov %r8,%rax
adeb(3): mov %rdx,%r8
adee(2): jmp 0xffffffc5(%rip)

"close_stdin_set_file_name" :
adf0(7): mov %rdi,0x211771(%rip)
adf7(1): ret near (%rsp)

"close_stdin" :
ae00(2): push %r12
ae02(1): push %rbp
ae03(1): push %rbx
ae04(7): mov 0x2112c5(%rip),%rbx
ae0b(3): mov %rbx,%rdi
ae0e(5): call 0x62a2(%rip)
ae13(3): test %rax,%rax
ae16(6): jnz 0xa2(%rip)
ae1c(3): mov %rbx,%rdi
ae1f(5): call 0x8bd1(%rip)
ae24(2): test %eax,%eax
ae26(2): jnz 0x32(%rip)
ae28(1): pop %rbx
ae29(1): pop %rbp
ae2a(2): pop %r12
ae2c(5): jmp 0x104(%rip)
ae31(7): nop 0x0(%rax)
ae38(5): call 0x6238(%rip)
ae3d(2): test %eax,%eax
ae3f(7): mov 0x21128a(%rip),%rdi
ae46(6): jz 0x90(%rip)
ae4c(5): call 0x8ba4(%rip)
ae51(7): nop 0x0(%rax)
ae58(7): lea 0xbaa1(%rip),%rsi
ae5f(2): xor %edi,%edi
ae61(5): mov $0x5,%edx
ae66(5): call 0xffff78ca(%rip)
ae6b(7): mov 0x2116f6(%rip),%rbx
ae72(3): mov %rax,%r12
ae75(5): call 0xffff772b(%rip)
ae7a(3): mov %rax,%rbp
ae7d(3): test %rbx,%rbx
ae80(2): jz 0x70(%rip)
ae82(3): mov %rbx,%rdi
ae85(5): call 0x391b(%rip)
ae8a(3): mov 0x0(%rbp),%esi
ae8d(7): lea 0xba7f(%rip),%rdx
ae94(3): mov %rax,%rcx
ae97(3): mov %r12,%r8
ae9a(2): xor %edi,%edi
ae9c(2): xor %eax,%eax
ae9e(5): call 0xffff7c72(%rip)
aea3(5): call 0x8d(%rip)
aea8(6): mov 0x21117a(%rip),%edi
aeae(5): call 0xffff7722(%rip)
aeb3(5): nop 0x0(%rax,%rax,1)
aeb8(2): xor %esi,%esi
aeba(3): mov %rbx,%rdi
aebd(5): mov $0x1,%edx
aec2(5): call 0x621e(%rip)
aec7(2): test %eax,%eax
aec9(7): mov 0x211200(%rip),%rdi
aed0(6): jz 0xffffff68(%rip)
aed6(5): call 0x8b1a(%rip)
aedb(2): test %eax,%eax
aedd(6): jnz 0xffffff7b(%rip)
aee3(1): pop %rbx
aee4(1): pop %rbp
aee5(2): pop %r12
aee7(5): jmp 0x49(%rip)
aeec(4): nop 0x0(%rax)
aef0(2): mov (%rax),%esi
aef2(7): lea 0xc54e(%rip),%rdx
aef9(3): mov %r12,%rcx
aefc(2): xor %edi,%edi
aefe(2): xor %eax,%eax
af00(5): call 0xffff7c10(%rip)
af05(2): jmp 0xffffff9e(%rip)

"close_stdout_set_file_name" :
af10(7): mov %rdi,0x211661(%rip)
af17(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
af20(7): mov %dil,0x211649(%rip)
af27(1): ret near (%rsp)

"close_stdout" :
af30(1): push %rbp
af31(1): push %rbx
af32(4): sub $0x8,%rsp
af36(7): mov 0x21118b(%rip),%rdi
af3d(5): call 0x8ab3(%rip)
af42(2): test %eax,%eax
af44(2): jz 0x18(%rip)
af46(5): call 0xffff765a(%rip)
af4b(7): cmp $0x0,0x21161e(%rip)
af52(3): mov %rax,%rbx
af55(2): jz 0x1e(%rip)
af57(3): cmp $0x20,(%rax)
af5a(2): jnz 0x19(%rip)
af5c(7): mov 0x21119d(%rip),%rdi
af63(5): call 0x8a8d(%rip)
af68(2): test %eax,%eax
af6a(2): jnz 0x48(%rip)
af6c(4): add $0x8,%rsp
af70(1): pop %rbx
af71(1): pop %rbp
af72(1): ret near (%rsp)
af73(7): lea 0xb9a0(%rip),%rsi
af7a(2): xor %edi,%edi
af7c(5): mov $0x5,%edx
af81(5): call 0xffff77af(%rip)
af86(7): mov 0x2115eb(%rip),%rdi
af8d(3): mov %rax,%rbp
af90(3): test %rdi,%rdi
af93(2): jz 0x2a(%rip)
af95(5): call 0x380b(%rip)
af9a(2): mov (%rbx),%esi
af9c(7): lea 0xb970(%rip),%rdx
afa3(3): mov %rax,%rcx
afa6(3): mov %rbp,%r8
afa9(2): xor %edi,%edi
afab(2): xor %eax,%eax
afad(5): call 0xffff7b63(%rip)
afb2(6): mov 0x211070(%rip),%edi
afb8(5): call 0xffff7618(%rip)
afbd(2): mov (%rbx),%esi
afbf(7): lea 0xc481(%rip),%rdx
afc6(3): mov %rax,%rcx
afc9(2): xor %edi,%edi
afcb(2): xor %eax,%eax
afcd(5): call 0xffff7b43(%rip)
afd2(2): jmp 0xffffffe0(%rip)

"dir_name" :
afe0(4): sub $0x8,%rsp
afe4(5): call 0x7c(%rip)
afe9(3): test %rax,%rax
afec(2): jz 0x7(%rip)
afee(4): add $0x8,%rsp
aff2(1): ret near (%rsp)
aff3(5): call 0x5f1d(%rip)

"dir_len" :
b000(1): push %rbp
b001(1): push %rbx
b002(2): xor %ebp,%ebp
b004(3): mov %rdi,%rbx
b007(4): sub $0x8,%rsp
b00b(3): cmp $0x2f,(%rdi)
b00e(4): setz %bpl
b012(5): call 0xae(%rip)
b017(3): mov %rax,%rcx
b01a(3): sub %rbx,%rcx
b01d(3): cmp %rbp,%rcx
b020(2): jbe 0x30(%rip)
b022(4): cmp $0x2f,0xffffffff(%rax)
b026(4): lea 0xffffffff(%rcx),%rdx
b02a(2): jz 0x14(%rip)
b02c(2): jmp 0x24(%rip)
b02e(2): nop 
b030(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
b035(4): lea 0xffffffff(%rdx),%rax
b039(2): jnz 0xa(%rip)
b03b(3): mov %rax,%rdx
b03e(3): cmp %rdx,%rbp
b041(2): jnz 0xffffffef(%rip)
b043(4): add $0x8,%rsp
b047(3): mov %rdx,%rax
b04a(1): pop %rbx
b04b(1): pop %rbp
b04c(1): ret near (%rsp)
b04d(3): nop (%rax)
b050(4): add $0x8,%rsp
b054(3): mov %rcx,%rdx
b057(3): mov %rdx,%rax
b05a(1): pop %rbx
b05b(1): pop %rbp
b05c(1): ret near (%rsp)

"mdir_name" :
b060(1): push %rbp
b061(1): push %rbx
b062(3): mov %rdi,%rbp
b065(4): sub $0x8,%rsp
b069(5): call 0xffffff97(%rip)
b06e(3): test %rax,%rax
b071(3): mov %rax,%rbx
b074(3): setz %al
b077(3): movzx %al,%eax
b07a(5): lea 0x1(%rbx,%rax,1),%rdi
b07f(5): call 0xffff7981(%rip)
b084(3): test %rax,%rax
b087(3): mov %rax,%rcx
b08a(2): jz 0x1c(%rip)
b08c(3): mov %rbx,%rdx
b08f(3): mov %rbp,%rsi
b092(3): mov %rax,%rdi
b095(5): call 0xffff790b(%rip)
b09a(3): test %rbx,%rbx
b09d(3): mov %rax,%rcx
b0a0(2): jz 0x10(%rip)
b0a2(4): mov $0x0,0x0(%rcx,%rbx,1)
b0a6(4): add $0x8,%rsp
b0aa(3): mov %rcx,%rax
b0ad(1): pop %rbx
b0ae(1): pop %rbp
b0af(1): ret near (%rsp)
b0b0(3): mov $0x2e,(%rax)
b0b3(5): mov $0x1,%ebx
b0b8(2): jmp 0xffffffea(%rip)

"last_component" :
b0c0(3): movzx (%rdi),%edx
b0c3(3): mov %rdi,%rax
b0c6(3): cmp $0x2f,%dl
b0c9(2): jnz 0x13(%rip)
b0cb(5): nop 0x0(%rax,%rax,1)
b0d0(4): add $0x1,%rax
b0d4(3): movzx (%rax),%edx
b0d7(3): cmp $0x2f,%dl
b0da(2): jz 0xfffffff6(%rip)
b0dc(2): test %dl,%dl
b0de(2): jz 0x3c(%rip)
b0e0(3): mov %rax,%rcx
b0e3(2): xor %esi,%esi
b0e5(2): jmp 0x20(%rip)
b0e7(9): nop 0x0(%rax,%rax,1)
b0f0(3): test %sil,%sil
b0f3(2): jz 0x7(%rip)
b0f5(3): mov %rcx,%rax
b0f8(2): xor %esi,%esi
b0fa(4): add $0x1,%rcx
b0fe(3): movzx (%rcx),%edx
b101(2): test %dl,%dl
b103(2): jz 0x17(%rip)
b105(3): cmp $0x2f,%dl
b108(2): jnz 0xffffffe8(%rip)
b10a(4): add $0x1,%rcx
b10e(3): movzx (%rcx),%edx
b111(5): mov $0x1,%esi
b116(2): test %dl,%dl
b118(2): jnz 0xffffffed(%rip)
b11a(2): REP ret near (%rsp)

"base_len" :
b120(1): push %rbx
b121(3): mov %rdi,%rbx
b124(5): call 0xffff762c(%rip)
b129(4): cmp $0x1,%rax
b12d(2): jbe 0xd(%rip)
b12f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
b134(4): lea 0xffffffff(%rax),%rdx
b138(2): jz 0x10(%rip)
b13a(1): pop %rbx
b13b(1): ret near (%rsp)
b13c(4): nop 0x0(%rax)
b140(3): mov %rax,%rdx
b143(5): nop 0x0(%rax,%rax,1)
b148(4): cmp $0x1,%rdx
b14c(2): jz 0x14(%rip)
b14e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
b153(4): lea 0xffffffff(%rdx),%rax
b157(2): jz 0xffffffe9(%rip)
b159(3): mov %rdx,%rax
b15c(1): pop %rbx
b15d(1): ret near (%rsp)
b15e(2): nop 
b160(5): mov $0x1,%eax
b165(1): pop %rbx
b166(1): ret near (%rsp)

"strip_trailing_slashes" :
b170(1): push %rbp
b171(1): push %rbx
b172(3): mov %rdi,%rbp
b175(4): sub $0x8,%rsp
b179(5): call 0xffffff47(%rip)
b17e(3): cmp $0x0,(%rax)
b181(3): mov %rax,%rbx
b184(4): cmove %rbp,%rbx
b188(3): mov %rbx,%rdi
b18b(5): call 0xffffff95(%rip)
b190(3): add %rax,%rbx
b193(3): cmp $0x0,(%rbx)
b196(3): mov $0x0,(%rbx)
b199(3): setnz %al
b19c(4): add $0x8,%rsp
b1a0(1): pop %rbx
b1a1(1): pop %rbp
b1a2(1): ret near (%rsp)

"fadvise" :
b1c0(3): test %rdi,%rdi
b1c3(2): jz 0x1d(%rip)
b1c5(1): push %rbx
b1c6(2): mov %esi,%ebx
b1c8(5): call 0xffff77f8(%rip)
b1cd(2): mov %ebx,%ecx
b1cf(2): xor %edx,%edx
b1d1(2): xor %esi,%esi
b1d3(1): pop %rbx
b1d4(2): mov %eax,%edi
b1d6(5): jmp 0xffff76da(%rip)
b1db(5): nop 0x0(%rax,%rax,1)
b1e0(2): REP ret near (%rsp)

"open_safer" :
b1f0(4): sub $0x58,%rsp
b1f4(5): mov %rdx,0x30(%rsp)
b1f9(2): xor %edx,%edx
b1fb(9): mov $0x28,%rax
b204(5): mov %rax,0x18(%rsp)
b209(2): xor %eax,%eax
b20b(4): test $0x40,%sil
b20f(2): jnz 0x29(%rip)
b211(2): xor %eax,%eax
b213(5): call 0xffff791d(%rip)
b218(2): mov %eax,%edi
b21a(5): call 0x43d6(%rip)
b21f(5): mov 0x18(%rsp),%rcx
b224(9): xor $0x28,%rcx
b22d(2): jnz 0x2c(%rip)
b22f(4): add $0x58,%rsp
b233(1): ret near (%rsp)
b234(4): nop 0x0(%rax)
b238(5): lea 0x60(%rsp),%rax
b23d(7): mov $0x10,(%rsp)
b244(4): mov 0x30(%rsp),%edx
b248(5): mov %rax,0x8(%rsp)
b24d(5): lea 0x20(%rsp),%rax
b252(5): mov %rax,0x10(%rsp)
b257(2): jmp 0xffffffba(%rip)
b259(5): call 0xffff7527(%rip)

"record_file" :
b260(3): test %rdi,%rdi
b263(2): jz 0x7d(%rip)
b265(2): push %r13
b267(2): push %r12
b269(3): mov %rdi,%r13
b26c(1): push %rbp
b26d(1): push %rbx
b26e(3): mov %rsi,%r12
b271(5): mov $0x18,%edi
b276(3): mov %rdx,%rbp
b279(4): sub $0x8,%rsp
b27d(5): call 0x5a43(%rip)
b282(3): mov %r12,%rdi
b285(3): mov %rax,%rbx
b288(5): call 0x5c68(%rip)
b28d(3): mov %rax,(%rbx)
b290(4): mov 0x8(%rbp),%rax
b294(3): mov %rbx,%rsi
b297(3): mov %r13,%rdi
b29a(4): mov %rax,0x8(%rbx)
b29e(4): mov 0x0(%rbp),%rax
b2a2(4): mov %rax,0x10(%rbx)
b2a6(5): call 0x154a(%rip)
b2ab(3): test %rax,%rax
b2ae(2): jz 0x34(%rip)
b2b0(3): cmp %rax,%rbx
b2b3(2): jz 0x1d(%rip)
b2b5(4): add $0x8,%rsp
b2b9(3): mov %rbx,%rdi
b2bc(1): pop %rbx
b2bd(1): pop %rbp
b2be(2): pop %r12
b2c0(2): pop %r13
b2c2(5): jmp 0x184e(%rip)
b2c7(9): nop 0x0(%rax,%rax,1)
b2d0(4): add $0x8,%rsp
b2d4(1): pop %rbx
b2d5(1): pop %rbp
b2d6(2): pop %r12
b2d8(2): pop %r13
b2da(1): ret near (%rsp)
b2db(5): nop 0x0(%rax,%rax,1)
b2e0(2): REP ret near (%rsp)
b2e2(5): call 0x5c2e(%rip)

"seen_file" :
b2f0(4): sub $0x28,%rsp
b2f4(9): mov $0x28,%rax
b2fd(5): mov %rax,0x18(%rsp)
b302(2): xor %eax,%eax
b304(3): test %rdi,%rdi
b307(2): jz 0x25(%rip)
b309(4): mov 0x8(%rdx),%rax
b30d(4): mov %rsi,(%rsp)
b311(3): mov %rsp,%rsi
b314(5): mov %rax,0x8(%rsp)
b319(3): mov (%rdx),%rax
b31c(5): mov %rax,0x10(%rsp)
b321(5): call 0xa5f(%rip)
b326(3): test %rax,%rax
b329(3): setnz %al
b32c(5): mov 0x18(%rsp),%rcx
b331(9): xor $0x28,%rcx
b33a(2): jnz 0x7(%rip)
b33c(4): add $0x28,%rsp
b340(1): ret near (%rsp)
b341(5): call 0xffff743f(%rip)

"file_type" :
b350(3): mov 0x18(%rdi),%eax
b353(5): mov $0x5,%edx
b358(5): and $0xf000,%eax
b35d(5): cmp $0x8000,%eax
b362(2): jz 0x4e(%rip)
b364(5): cmp $0x4000,%eax
b369(6): jz 0x97(%rip)
b36f(5): cmp $0xa000,%eax
b374(2): jz 0x6c(%rip)
b376(5): cmp $0x6000,%eax
b37b(6): jz 0x95(%rip)
b381(5): cmp $0x2000,%eax
b386(6): jz 0x9a(%rip)
b38c(5): cmp $0x1000,%eax
b391(6): jz 0x9f(%rip)
b397(5): cmp $0xc000,%eax
b39c(2): jz 0x54(%rip)
b39e(7): lea 0xb5e5(%rip),%rsi
b3a5(2): xor %edi,%edi
b3a7(5): jmp 0xffff7389(%rip)
b3ac(4): nop 0x0(%rax)
b3b0(5): cmp $0x0,0x30(%rdi)
b3b5(2): jnz 0x13(%rip)
b3b7(7): lea 0xb568(%rip),%rsi
b3be(2): xor %edi,%edi
b3c0(5): jmp 0xffff7370(%rip)
b3c5(3): nop (%rax)
b3c8(7): lea 0xb56a(%rip),%rsi
b3cf(2): xor %edi,%edi
b3d1(5): jmp 0xffff735f(%rip)
b3d6(a): nop 0x0(%rax,%rax,1)
b3e0(7): lea 0xb55f(%rip),%rsi
b3e7(2): xor %edi,%edi
b3e9(5): jmp 0xffff7347(%rip)
b3ee(2): nop 
b3f0(7): lea 0xb58c(%rip),%rsi
b3f7(2): xor %edi,%edi
b3f9(5): jmp 0xffff7337(%rip)
b3fe(2): nop 
b400(7): lea 0x9c13(%rip),%rsi
b407(2): xor %edi,%edi
b409(5): jmp 0xffff7327(%rip)
b40e(2): nop 
b410(7): lea 0xb53d(%rip),%rsi
b417(2): xor %edi,%edi
b419(5): jmp 0xffff7317(%rip)
b41e(2): nop 
b420(7): lea 0xb540(%rip),%rsi
b427(2): xor %edi,%edi
b429(5): jmp 0xffff7307(%rip)
b42e(2): nop 
b430(7): lea 0xb547(%rip),%rsi
b437(2): xor %edi,%edi
b439(5): jmp 0xffff72f7(%rip)

"strmode" :
b440(2): mov %edi,%edx
b442(5): mov $0x2d,%eax
b447(6): and $0xf000,%edx
b44d(6): cmp $0x8000,%edx
b453(2): jz 0x5d(%rip)
b455(6): cmp $0x4000,%edx
b45b(5): mov $0x64,%eax
b460(2): jz 0x50(%rip)
b462(6): cmp $0x6000,%edx
b468(5): mov $0x62,%eax
b46d(2): jz 0x43(%rip)
b46f(6): cmp $0x2000,%edx
b475(5): mov $0x63,%eax
b47a(2): jz 0x36(%rip)
b47c(6): cmp $0xa000,%edx
b482(5): mov $0x6c,%eax
b487(2): jz 0x29(%rip)
b489(6): cmp $0x1000,%edx
b48f(5): mov $0x70,%eax
b494(2): jz 0x1c(%rip)
b496(6): cmp $0xc000,%edx
b49c(5): mov $0x73,%eax
b4a1(5): mov $0x3f,%edx
b4a6(3): cmovne %edx,%eax
b4a9(7): nop 0x0(%rax)
b4b0(2): mov %al,(%rsi)
b4b2(2): mov %edi,%eax
b4b4(5): and $0x100,%eax
b4b9(3): cmp $0x1,%eax
b4bc(2): sbb %eax,%eax
b4be(3): and $0xbb,%eax
b4c1(3): add $0x72,%eax
b4c4(3): mov %al,0x1(%rsi)
b4c7(2): mov %edi,%eax
b4c9(5): and $0x80,%eax
b4ce(3): cmp $0x1,%eax
b4d1(2): sbb %eax,%eax
b4d3(3): and $0xb6,%eax
b4d6(3): add $0x77,%eax
b4d9(3): mov %al,0x2(%rsi)
b4dc(2): mov %edi,%eax
b4de(3): and $0x40,%eax
b4e1(3): cmp $0x1,%eax
b4e4(2): sbb %eax,%eax
b4e6(6): test $0x800,%edi
b4ec(6): jz 0xa4(%rip)
b4f2(3): and $0xe0,%eax
b4f5(3): add $0x73,%eax
b4f8(3): mov %al,0x3(%rsi)
b4fb(2): mov %edi,%eax
b4fd(3): and $0x20,%eax
b500(3): cmp $0x1,%eax
b503(2): sbb %eax,%eax
b505(3): and $0xbb,%eax
b508(3): add $0x72,%eax
b50b(3): mov %al,0x4(%rsi)
b50e(2): mov %edi,%eax
b510(3): and $0x10,%eax
b513(3): cmp $0x1,%eax
b516(2): sbb %eax,%eax
b518(3): and $0xb6,%eax
b51b(3): add $0x77,%eax
b51e(3): mov %al,0x5(%rsi)
b521(2): mov %edi,%eax
b523(3): and $0x8,%eax
b526(3): cmp $0x1,%eax
b529(2): sbb %eax,%eax
b52b(6): test $0x400,%edi
b531(6): jz 0x87(%rip)
b537(3): and $0xe0,%eax
b53a(3): add $0x73,%eax
b53d(3): mov %al,0x6(%rsi)
b540(2): mov %edi,%eax
b542(3): and $0x4,%eax
b545(3): cmp $0x1,%eax
b548(2): sbb %eax,%eax
b54a(3): and $0xbb,%eax
b54d(3): add $0x72,%eax
b550(3): mov %al,0x7(%rsi)
b553(2): mov %edi,%eax
b555(3): and $0x2,%eax
b558(3): cmp $0x1,%eax
b55b(2): sbb %eax,%eax
b55d(3): and $0xb6,%eax
b560(3): add $0x77,%eax
b563(3): mov %al,0x8(%rsi)
b566(2): mov %edi,%eax
b568(3): and $0x1,%eax
b56b(3): cmp $0x1,%eax
b56e(2): sbb %eax,%eax
b570(6): and $0x200,%edi
b576(2): jz 0x2a(%rip)
b578(3): and $0xe0,%eax
b57b(3): add $0x74,%eax
b57e(3): mov %al,0x9(%rsi)
b581(5): mov $0x20,%eax
b586(4): mov %ax,0xa(%rsi)
b58a(1): ret near (%rsp)
b58b(5): nop 0x0(%rax,%rax,1)
b590(3): and $0xb5,%eax
b593(3): add $0x78,%eax
b596(5): jmp 0xffffff62(%rip)
b59b(5): nop 0x0(%rax,%rax,1)
b5a0(3): and $0xb5,%eax
b5a3(3): add $0x78,%eax
b5a6(3): mov %al,0x9(%rsi)
b5a9(5): mov $0x20,%eax
b5ae(4): mov %ax,0xa(%rsi)
b5b2(1): ret near (%rsp)
b5b3(5): nop 0x0(%rax,%rax,1)
b5b8(3): and $0xb5,%eax
b5bb(3): add $0x78,%eax
b5be(5): jmp 0xffffff7f(%rip)

"filemodestring" :
b5d0(3): mov 0x18(%rdi),%edi
b5d3(5): jmp 0xfffffe6d(%rip)

"file_name_concat" :
b5e0(4): sub $0x8,%rsp
b5e4(5): call 0x1c(%rip)
b5e9(3): test %rax,%rax
b5ec(2): jz 0x7(%rip)
b5ee(4): add $0x8,%rsp
b5f2(1): ret near (%rsp)
b5f3(5): call 0x591d(%rip)

"mfile_name_concat" :
b600(2): push %r15
b602(2): push %r14
b604(3): mov %rdx,%r15
b607(2): push %r13
b609(2): push %r12
b60b(3): mov %rdi,%r12
b60e(1): push %rbp
b60f(1): push %rbx
b610(3): mov %rsi,%rbp
b613(4): sub $0x18,%rsp
b617(5): call 0xfffffaa9(%rip)
b61c(3): mov %rax,%rbx
b61f(3): mov %rax,%rdi
b622(5): call 0xfffffafe(%rip)
b627(3): sub %r12,%rbx
b62a(3): mov %rax,%r13
b62d(3): mov %rbp,%rdi
b630(3): add %rax,%rbx
b633(5): call 0xffff711d(%rip)
b638(3): test %r13,%r13
b63b(3): mov %rax,%r14
b63e(2): jz 0x32(%rip)
b640(6): cmp $0x2f,0xffffffff(%r12,%rbx,1)
b646(6): jz 0xaa(%rip)
b64c(2): xor %eax,%eax
b64e(4): cmp $0x2f,0x0(%rbp)
b652(5): mov $0x0,%edx
b657(3): setnz %al
b65a(4): mov %rax,(%rsp)
b65e(5): mov $0x2f,%eax
b663(3): cmove %edx,%eax
b666(4): mov %al,0xf(%rsp)
b66a(2): jmp 0x24(%rip)
b66c(4): nop 0x0(%rax)
b670(2): xor %eax,%eax
b672(4): cmp $0x2f,0x0(%rbp)
b676(5): mov $0x0,%edx
b67b(3): setz %al
b67e(4): mov %rax,(%rsp)
b682(5): mov $0x2e,%eax
b687(3): cmovne %edx,%eax
b68a(4): mov %al,0xf(%rsp)
b68e(5): lea 0x1(%rbx,%r14,1),%rdi
b693(4): add (%rsp),%rdi
b697(5): call 0xffff7369(%rip)
b69c(3): test %rax,%rax
b69f(3): mov %rax,%r13
b6a2(2): jz 0x34(%rip)
b6a4(3): mov %rax,%rdi
b6a7(3): mov %rbx,%rdx
b6aa(3): mov %r12,%rsi
b6ad(5): call 0xffff7443(%rip)
b6b2(5): movzx 0xf(%rsp),%ecx
b6b7(4): mov (%rsp),%rdi
b6bb(3): add %rax,%rdi
b6be(3): test %r15,%r15
b6c1(2): mov %cl,(%rax)
b6c3(2): jz 0x5(%rip)
b6c5(3): mov %rdi,(%r15)
b6c8(3): mov %r14,%rdx
b6cb(3): mov %rbp,%rsi
b6ce(5): call 0xffff7422(%rip)
b6d3(3): mov $0x0,(%rax)
b6d6(4): add $0x18,%rsp
b6da(3): mov %r13,%rax
b6dd(1): pop %rbx
b6de(1): pop %rbp
b6df(2): pop %r12
b6e1(2): pop %r13
b6e3(2): pop %r14
b6e5(2): pop %r15
b6e7(1): ret near (%rsp)
b6e8(8): nop 0x0(%rax,%rax,1)
b6f0(8): mov $0x0,(%rsp)
b6f8(5): mov $0x0,0xf(%rsp)
b6fd(2): jmp 0xffffff91(%rip)

"full_write" :
b700(2): push %r13
b702(2): push %r12
b704(1): push %rbp
b705(1): push %rbx
b706(4): sub $0x8,%rsp
b70a(3): test %rdx,%rdx
b70d(2): jz 0x64(%rip)
b70f(3): mov %edi,%r13d
b712(3): mov %rsi,%rbp
b715(3): mov %rdx,%rbx
b718(3): xor %r12d,%r12d
b71b(2): jmp 0x15(%rip)
b71d(3): nop (%rax)
b720(3): test %rax,%rax
b723(2): jz 0x35(%rip)
b725(3): add %rax,%r12
b728(3): add %rax,%rbp
b72b(3): sub %rax,%rbx
b72e(2): jz 0x16(%rip)
b730(3): mov %rbx,%rdx
b733(3): mov %rbp,%rsi
b736(3): mov %r13d,%edi
b739(5): call 0x3577(%rip)
b73e(4): cmp $0xffffffff,%rax
b742(2): jnz 0xffffffde(%rip)
b744(4): add $0x8,%rsp
b748(3): mov %r12,%rax
b74b(1): pop %rbx
b74c(1): pop %rbp
b74d(2): pop %r12
b74f(2): pop %r13
b751(1): ret near (%rsp)
b752(6): nop 0x0(%rax,%rax,1)
b758(5): call 0xffff6e48(%rip)
b75d(6): mov $0x1c,(%rax)
b763(4): add $0x8,%rsp
b767(3): mov %r12,%rax
b76a(1): pop %rbx
b76b(1): pop %rbp
b76c(2): pop %r12
b76e(2): pop %r13
b770(1): ret near (%rsp)
b771(3): xor %r12d,%r12d
b774(2): jmp 0xffffffd0(%rip)

"next_prime" :
b780(4): cmp $0xa,%rdi
b784(5): mov $0xa,%eax
b789(a): mov $0x-6148914691236517205,%r9
b793(4): cmovnae %rax,%rdi
b797(4): or $0x1,%rdi
b79b(4): cmp $0xffffffff,%rdi
b79f(2): jz 0x70(%rip)
b7a1(7): nop 0x0(%rax)
b7a8(3): mov %rdi,%rax
b7ab(3): mov %rdi,%rcx
b7ae(3): mul %rax,%r9,%rdx
b7b1(3): mov %rdx,%rax
b7b4(3): shr $0x1,%rax
b7b7(4): lea 0x0(%rax,%rax,2),%rax
b7bb(3): sub %rax,%rcx
b7be(4): cmp $0x9,%rdi
b7c2(3): mov %rcx,%rax
b7c5(2): jbe 0x3b(%rip)
b7c7(3): test %rcx,%rcx
b7ca(2): jz 0x3b(%rip)
b7cc(6): mov $0x10,%r8d
b7d2(5): mov $0x9,%esi
b7d7(5): mov $0x3,%ecx
b7dc(2): jmp 0xd(%rip)
b7de(2): nop 
b7e0(4): add $0x8,%r8
b7e4(3): test %rdx,%rdx
b7e7(2): jz 0x1e(%rip)
b7e9(4): add $0x2,%rcx
b7ed(2): xor %edx,%edx
b7ef(3): mov %rdi,%rax
b7f2(3): div %rcx,%rax
b7f5(3): add %r8,%rsi
b7f8(3): cmp %rdi,%rsi
b7fb(3): mov %rdx,%rax
b7fe(2): jb 0xffffffe2(%rip)
b800(3): test %rax,%rax
b803(2): jnz 0xc(%rip)
b805(4): add $0x2,%rdi
b809(4): cmp $0xffffffff,%rdi
b80d(2): jnz 0xffffff9b(%rip)
b80f(3): mov %rdi,%rax
b812(1): ret near (%rsp)

"raw_hasher" :
b820(3): mov %rdi,%rax
b823(2): xor %edx,%edx
b825(4): ror $0x3,%rax
b829(3): div %rsi,%rax
b82c(3): mov %rdx,%rax
b82f(1): ret near (%rsp)

"raw_comparator" :
b830(3): cmp %rsi,%rdi
b833(3): setz %al
b836(1): ret near (%rsp)

"safe_hasher" :
b840(1): push %rbx
b841(3): mov %rdi,%rbx
b844(3): mov %rsi,%rdi
b847(4): mov 0x10(%rbx),%rsi
b84b(3): call 0x30(%rbx)
b84e(4): cmp %rax,0x10(%rbx)
b852(2): jbe 0xb(%rip)
b854(4): shl/sal $0x4,%rax
b858(3): add (%rbx),%rax
b85b(1): pop %rbx
b85c(1): ret near (%rsp)
b85d(5): call 0xffff6d33(%rip)

"hash_find_entry" :
b870(2): push %r14
b872(2): push %r13
b874(3): mov %rdx,%r14
b877(2): push %r12
b879(1): push %rbp
b87a(3): mov %rdi,%r12
b87d(1): push %rbx
b87e(3): mov %rsi,%rbp
b881(3): mov %ecx,%r13d
b884(5): call 0xffffffbc(%rip)
b889(3): mov %rax,(%r14)
b88c(3): mov (%rax),%rsi
b88f(3): test %rsi,%rsi
b892(6): jz 0xee(%rip)
b898(3): cmp %rbp,%rsi
b89b(3): mov %rax,%rbx
b89e(6): jz 0x95(%rip)
b8a4(3): mov %rbp,%rdi
b8a7(5): call 0x38(%r12)
b8ac(2): test %al,%al
b8ae(6): jnz 0x82(%rip)
b8b4(4): mov 0x8(%rbx),%rax
b8b8(3): test %rax,%rax
b8bb(6): jz 0xc5(%rip)
b8c1(3): mov (%rax),%rsi
b8c4(3): cmp %rsi,%rbp
b8c7(2): jnz 0x22(%rip)
b8c9(2): jmp 0x33(%rip)
b8cb(5): nop 0x0(%rax,%rax,1)
b8d0(4): mov 0x8(%rbx),%rbx
b8d4(4): mov 0x8(%rbx),%rax
b8d8(3): test %rax,%rax
b8db(6): jz 0xa5(%rip)
b8e1(3): mov (%rax),%rsi
b8e4(3): cmp %rbp,%rsi
b8e7(2): jz 0x15(%rip)
b8e9(3): mov %rbp,%rdi
b8ec(5): call 0x38(%r12)
b8f1(2): test %al,%al
b8f3(2): jz 0xffffffdd(%rip)
b8f5(4): mov 0x8(%rbx),%rax
b8f9(3): mov (%rax),%rsi
b8fc(3): test %r13b,%r13b
b8ff(2): jz 0x1f(%rip)
b901(4): mov 0x8(%rax),%rdx
b905(4): mov %rdx,0x8(%rbx)
b909(7): mov $0x0,(%rax)
b910(5): mov 0x48(%r12),%rdx
b915(4): mov %rdx,0x8(%rax)
b919(5): mov %rax,0x48(%r12)
b91e(1): pop %rbx
b91f(3): mov %rsi,%rax
b922(1): pop %rbp
b923(2): pop %r12
b925(2): pop %r13
b927(2): pop %r14
b929(1): ret near (%rsp)
b92a(6): nop 0x0(%rax,%rax,1)
b930(3): mov (%rbx),%rsi
b933(3): test %r13b,%r13b
b936(2): jz 0xffffffe8(%rip)
b938(4): mov 0x8(%rbx),%rax
b93c(3): test %rax,%rax
b93f(2): jz 0x31(%rip)
b941(4): movdqu (%rax),%xmm0
b945(3): movups %xmm0,(%rbx)
b948(7): mov $0x0,(%rax)
b94f(5): mov 0x48(%r12),%rdx
b954(4): mov %rdx,0x8(%rax)
b958(5): mov %rax,0x48(%r12)
b95d(3): mov %rsi,%rax
b960(1): pop %rbx
b961(1): pop %rbp
b962(2): pop %r12
b964(2): pop %r13
b966(2): pop %r14
b968(1): ret near (%rsp)
b969(7): nop 0x0(%rax)
b970(7): mov $0x0,(%rbx)
b977(2): jmp 0xffffffa7(%rip)
b979(7): nop 0x0(%rax)
b980(2): xor %esi,%esi
b982(1): pop %rbx
b983(3): mov %rsi,%rax
b986(1): pop %rbp
b987(2): pop %r12
b989(2): pop %r13
b98b(2): pop %r14
b98d(1): ret near (%rsp)

"check_tuning.isra.0" :
b990(3): mov (%rdi),%rdx
b993(7): lea 0xb076(%rip),%rcx
b99a(5): mov $0x1,%eax
b99f(3): cmp %rcx,%rdx
b9a2(2): jz 0x63(%rip)
b9a4(5): movss 0x8(%rdx),%xmm0
b9a9(7): ucomiss 0xb074(%rip),%xmm0
b9b0(2): jbe 0x50(%rip)
b9b2(8): movss 0xb06e(%rip),%xmm1
b9ba(3): ucomiss %xmm0,%xmm1
b9bd(2): jbe 0x43(%rip)
b9bf(5): movss 0xc(%rdx),%xmm1
b9c4(7): ucomiss 0xb061(%rip),%xmm1
b9cb(2): jbe 0x35(%rip)
b9cd(4): movss (%rdx),%xmm1
b9d1(7): ucomiss 0xb058(%rip),%xmm1
b9d8(2): jb 0x28(%rip)
b9da(8): addss 0xb042(%rip),%xmm1
b9e2(5): movss 0x4(%rdx),%xmm2
b9e7(3): ucomiss %xmm1,%xmm2
b9ea(2): jbe 0x16(%rip)
b9ec(8): movss 0xb040(%rip),%xmm3
b9f4(3): ucomiss %xmm2,%xmm3
b9f7(2): jb 0x9(%rip)
b9f9(3): ucomiss %xmm1,%xmm0
b9fc(2): jnbe 0x9(%rip)
b9fe(2): nop 
ba00(3): mov %rcx,(%rdi)
ba03(2): xor %eax,%eax
ba05(2): REP ret near (%rsp)

"transfer_entries" :
ba10(2): push %r15
ba12(2): push %r14
ba14(2): push %r13
ba16(2): push %r12
ba18(1): push %rbp
ba19(1): push %rbx
ba1a(4): sub $0x8,%rsp
ba1e(3): mov (%rsi),%r12
ba21(4): cmp 0x8(%rsi),%r12
ba25(6): jnb 0xe3(%rip)
ba2b(3): mov %rdi,%rbp
ba2e(3): mov %rsi,%r13
ba31(3): mov %edx,%r14d
ba34(4): nop 0x0(%rax)
ba38(4): mov (%r12),%r15
ba3c(3): test %r15,%r15
ba3f(6): jz 0xbb(%rip)
ba45(5): mov 0x8(%r12),%rbx
ba4a(3): test %rbx,%rbx
ba4d(2): jnz 0x1f(%rip)
ba4f(2): jmp 0x5c(%rip)
ba51(7): nop 0x0(%rax)
ba58(4): mov 0x8(%rax),%rcx
ba5c(3): test %rdx,%rdx
ba5f(4): mov %rcx,0x8(%rbx)
ba63(4): mov %rbx,0x8(%rax)
ba67(3): mov %rdx,%rbx
ba6a(2): jz 0x3d(%rip)
ba6c(3): mov (%rbx),%r15
ba6f(3): mov %rbp,%rdi
ba72(3): mov %r15,%rsi
ba75(5): call 0xfffffdcb(%rip)
ba7a(4): cmp $0x0,(%rax)
ba7e(4): mov 0x8(%rbx),%rdx
ba82(2): jnz 0xffffffd6(%rip)
ba84(3): mov %r15,(%rax)
ba87(5): add $0x1,0x18(%rbp)
ba8c(3): test %rdx,%rdx
ba8f(7): mov $0x0,(%rbx)
ba96(4): mov 0x48(%rbp),%rax
ba9a(4): mov %rax,0x8(%rbx)
ba9e(4): mov %rbx,0x48(%rbp)
baa2(3): mov %rdx,%rbx
baa5(2): jnz 0xffffffc7(%rip)
baa7(4): mov (%r12),%r15
baab(3): test %r14b,%r14b
baae(9): mov $0x0,0x8(%r12)
bab7(2): jnz 0x43(%rip)
bab9(3): mov %r15,%rsi
babc(3): mov %rbp,%rdi
babf(5): call 0xfffffd81(%rip)
bac4(4): cmp $0x0,(%rax)
bac8(3): mov %rax,%rbx
bacb(2): jz 0x55(%rip)
bacd(4): mov 0x48(%rbp),%rax
bad1(3): test %rax,%rax
bad4(2): jz 0x5c(%rip)
bad6(4): mov 0x8(%rax),%rdx
bada(4): mov %rdx,0x48(%rbp)
bade(4): mov 0x8(%rbx),%rdx
bae2(3): mov %r15,(%rax)
bae5(4): mov %rdx,0x8(%rax)
bae9(4): mov %rax,0x8(%rbx)
baed(8): mov $0x0,(%r12)
baf5(5): sub $0x1,0x18(%r13)
bafa(4): add $0x10,%r12
bafe(4): cmp %r12,0x8(%r13)
bb02(6): jnbe 0xffffff36(%rip)
bb08(4): add $0x8,%rsp
bb0c(5): mov $0x1,%eax
bb11(1): pop %rbx
bb12(1): pop %rbp
bb13(2): pop %r12
bb15(2): pop %r13
bb17(2): pop %r14
bb19(2): pop %r15
bb1b(1): ret near (%rsp)
bb1c(4): nop 0x0(%rax)
bb20(3): mov %r15,(%rax)
bb23(5): add $0x1,0x18(%rbp)
bb28(2): jmp 0xffffffc5(%rip)
bb2a(6): nop 0x0(%rax,%rax,1)
bb30(5): mov $0x10,%edi
bb35(5): call 0xffff6ecb(%rip)
bb3a(3): test %rax,%rax
bb3d(2): jnz 0xffffffa1(%rip)
bb3f(4): add $0x8,%rsp
bb43(2): xor %eax,%eax
bb45(1): pop %rbx
bb46(1): pop %rbp
bb47(2): pop %r12
bb49(2): pop %r13
bb4b(2): pop %r14
bb4d(2): pop %r15
bb4f(1): ret near (%rsp)

"hash_get_n_buckets" :
bb50(4): mov 0x10(%rdi),%rax
bb54(1): ret near (%rsp)

"hash_get_n_buckets_used" :
bb60(4): mov 0x18(%rdi),%rax
bb64(1): ret near (%rsp)

"hash_get_n_entries" :
bb70(4): mov 0x20(%rdi),%rax
bb74(1): ret near (%rsp)

"hash_get_max_bucket_length" :
bb80(3): mov (%rdi),%rsi
bb83(4): mov 0x8(%rdi),%rdi
bb87(2): xor %eax,%eax
bb89(3): cmp %rdi,%rsi
bb8c(2): jnb 0x3b(%rip)
bb8e(2): nop 
bb90(4): cmp $0x0,(%rsi)
bb94(2): jz 0x28(%rip)
bb96(4): mov 0x8(%rsi),%rdx
bb9a(5): mov $0x1,%ecx
bb9f(3): test %rdx,%rdx
bba2(2): jz 0x13(%rip)
bba4(4): nop 0x0(%rax)
bba8(4): mov 0x8(%rdx),%rdx
bbac(4): add $0x1,%rcx
bbb0(3): test %rdx,%rdx
bbb3(2): jnz 0xfffffff5(%rip)
bbb5(3): cmp %rcx,%rax
bbb8(4): cmovnae %rcx,%rax
bbbc(4): add $0x10,%rsi
bbc0(3): cmp %rdi,%rsi
bbc3(2): jb 0xffffffcd(%rip)
bbc5(2): REP ret near (%rsp)
bbc7(2): REP ret near (%rsp)

"hash_table_ok" :
bbd0(3): mov (%rdi),%rcx
bbd3(4): mov 0x8(%rdi),%r8
bbd7(2): xor %edx,%edx
bbd9(2): xor %esi,%esi
bbdb(3): cmp %r8,%rcx
bbde(2): jnb 0x38(%rip)
bbe0(4): cmp $0x0,(%rcx)
bbe4(2): jz 0x29(%rip)
bbe6(4): mov 0x8(%rcx),%rax
bbea(4): add $0x1,%rsi
bbee(4): add $0x1,%rdx
bbf2(3): test %rax,%rax
bbf5(2): jz 0x18(%rip)
bbf7(9): nop 0x0(%rax,%rax,1)
bc00(4): mov 0x8(%rax),%rax
bc04(4): add $0x1,%rdx
bc08(3): test %rax,%rax
bc0b(2): jnz 0xfffffff5(%rip)
bc0d(4): add $0x10,%rcx
bc11(3): cmp %r8,%rcx
bc14(2): jb 0xffffffcc(%rip)
bc16(2): xor %eax,%eax
bc18(4): cmp %rsi,0x18(%rdi)
bc1c(2): jz 0x4(%rip)
bc1e(2): REP ret near (%rsp)
bc20(4): cmp %rdx,0x20(%rdi)
bc24(3): setz %al
bc27(1): ret near (%rsp)

"hash_print_statistics" :
bc30(2): push %r13
bc32(2): push %r12
bc34(3): mov %rsi,%r12
bc37(1): push %rbp
bc38(1): push %rbx
bc39(2): xor %ebx,%ebx
bc3b(4): sub $0x8,%rsp
bc3f(3): mov (%rdi),%rsi
bc42(4): mov 0x20(%rdi),%rcx
bc46(4): mov 0x10(%rdi),%rbp
bc4a(4): mov 0x18(%rdi),%r13
bc4e(4): mov 0x8(%rdi),%rdi
bc52(3): cmp %rdi,%rsi
bc55(2): jnb 0x40(%rip)
bc57(9): nop 0x0(%rax,%rax,1)
bc60(4): cmp $0x0,(%rsi)
bc64(2): jz 0x28(%rip)
bc66(4): mov 0x8(%rsi),%rax
bc6a(5): mov $0x1,%edx
bc6f(3): test %rax,%rax
bc72(2): jz 0x13(%rip)
bc74(4): nop 0x0(%rax)
bc78(4): mov 0x8(%rax),%rax
bc7c(4): add $0x1,%rdx
bc80(3): test %rax,%rax
bc83(2): jnz 0xfffffff5(%rip)
bc85(3): cmp %rdx,%rbx
bc88(4): cmovnae %rdx,%rbx
bc8c(4): add $0x10,%rsi
bc90(3): cmp %rdi,%rsi
bc93(2): jb 0xffffffcd(%rip)
bc95(7): lea 0xacf9(%rip),%rdx
bc9c(5): mov $0x1,%esi
bca1(3): mov %r12,%rdi
bca4(2): xor %eax,%eax
bca6(5): call 0xffff6f7a(%rip)
bcab(7): lea 0xacfb(%rip),%rdx
bcb2(2): xor %eax,%eax
bcb4(3): mov %rbp,%rcx
bcb7(5): mov $0x1,%esi
bcbc(3): mov %r12,%rdi
bcbf(5): call 0xffff6f61(%rip)
bcc4(3): test %r13,%r13
bcc7(2): js 0x69(%rip)
bcc9(4): pxor %xmm0,%xmm0
bccd(3): test %rbp,%rbp
bcd0(5): cvtsi2sd %r13,%xmm0
bcd5(8): mulsd 0xad6b(%rip),%xmm0
bcdd(2): js 0x7c(%rip)
bcdf(4): pxor %xmm1,%xmm1
bce3(5): cvtsi2sd %rbp,%xmm1
bce8(4): divsd %xmm1,%xmm0
bcec(7): lea 0xaced(%rip),%rdx
bcf3(3): mov %r13,%rcx
bcf6(3): mov %r12,%rdi
bcf9(5): mov $0x1,%esi
bcfe(5): mov $0x1,%eax
bd03(5): call 0xffff6f1d(%rip)
bd08(4): add $0x8,%rsp
bd0c(3): mov %rbx,%rcx
bd0f(3): mov %r12,%rdi
bd12(1): pop %rbx
bd13(1): pop %rbp
bd14(2): pop %r12
bd16(2): pop %r13
bd18(7): lea 0xaca6(%rip),%rdx
bd1f(5): mov $0x1,%esi
bd24(2): xor %eax,%eax
bd26(5): jmp 0xffff6efa(%rip)
bd2b(5): nop 0x0(%rax,%rax,1)
bd30(3): mov %r13,%rax
bd33(3): mov %r13,%rdx
bd36(4): pxor %xmm0,%xmm0
bd3a(3): shr $0x1,%rax
bd3d(3): and $0x1,%edx
bd40(3): or %rdx,%rax
bd43(3): test %rbp,%rbp
bd46(5): cvtsi2sd %rax,%xmm0
bd4b(4): addsd %xmm0,%xmm0
bd4f(8): mulsd 0xacf1(%rip),%xmm0
bd57(2): jns 0xffffff88(%rip)
bd59(3): mov %rbp,%rax
bd5c(4): pxor %xmm1,%xmm1
bd60(3): shr $0x1,%rax
bd63(3): and $0x1,%ebp
bd66(3): or %rbp,%rax
bd69(5): cvtsi2sd %rax,%xmm1
bd6e(4): addsd %xmm1,%xmm1
bd72(5): jmp 0xffffff76(%rip)

"hash_lookup" :
bd80(2): push %r12
bd82(1): push %rbp
bd83(3): mov %rdi,%r12
bd86(1): push %rbx
bd87(3): mov %rsi,%rbp
bd8a(5): call 0xfffffab6(%rip)
bd8f(3): mov (%rax),%rsi
bd92(3): test %rsi,%rsi
bd95(2): jz 0x28(%rip)
bd97(3): mov %rax,%rbx
bd9a(2): jmp 0x9(%rip)
bd9c(4): nop 0x0(%rax)
bda0(3): mov (%rbx),%rsi
bda3(3): cmp %rbp,%rsi
bda6(2): jz 0x19(%rip)
bda8(3): mov %rbp,%rdi
bdab(5): call 0x38(%r12)
bdb0(2): test %al,%al
bdb2(2): jnz 0x1e(%rip)
bdb4(4): mov 0x8(%rbx),%rbx
bdb8(3): test %rbx,%rbx
bdbb(2): jnz 0xffffffe5(%rip)
bdbd(2): xor %esi,%esi
bdbf(1): pop %rbx
bdc0(3): mov %rsi,%rax
bdc3(1): pop %rbp
bdc4(2): pop %r12
bdc6(1): ret near (%rsp)
bdc7(9): nop 0x0(%rax,%rax,1)
bdd0(3): mov (%rbx),%rsi
bdd3(1): pop %rbx
bdd4(1): pop %rbp
bdd5(3): mov %rsi,%rax
bdd8(2): pop %r12
bdda(1): ret near (%rsp)

"hash_get_first" :
bde0(5): cmp $0x0,0x20(%rdi)
bde5(2): jz 0x2e(%rip)
bde7(3): mov (%rdi),%rdx
bdea(4): mov 0x8(%rdi),%rcx
bdee(3): cmp %rcx,%rdx
bdf1(2): jnb 0x27(%rip)
bdf3(3): mov (%rdx),%rax
bdf6(3): test %rax,%rax
bdf9(2): jnz 0x1d(%rip)
bdfb(5): nop 0x0(%rax,%rax,1)
be00(4): add $0x10,%rdx
be04(3): cmp %rcx,%rdx
be07(2): jnb 0x11(%rip)
be09(3): mov (%rdx),%rax
be0c(3): test %rax,%rax
be0f(2): jz 0xfffffff1(%rip)
be11(2): REP ret near (%rsp)
be13(2): xor %eax,%eax
be15(1): ret near (%rsp)
be16(2): REP ret near (%rsp)
be18(4): sub $0x8,%rsp
be1c(5): call 0xffff6774(%rip)

"hash_get_next" :
be30(1): push %rbp
be31(1): push %rbx
be32(3): mov %rdi,%rbp
be35(3): mov %rsi,%rbx
be38(4): sub $0x8,%rsp
be3c(5): call 0xfffffa04(%rip)
be41(3): mov %rax,%rdx
be44(3): mov %rax,%rcx
be47(3): mov (%rdx),%rax
be4a(4): mov 0x8(%rdx),%rdx
be4e(3): cmp %rbx,%rax
be51(2): jz 0x18(%rip)
be53(5): nop 0x0(%rax,%rax,1)
be58(3): test %rdx,%rdx
be5b(2): jz 0x13(%rip)
be5d(3): mov (%rdx),%rax
be60(4): mov 0x8(%rdx),%rdx
be64(3): cmp %rbx,%rax
be67(2): jnz 0xfffffff1(%rip)
be69(3): test %rdx,%rdx
be6c(2): jnz 0x2c(%rip)
be6e(4): mov 0x8(%rbp),%rdx
be72(2): jmp 0xe(%rip)
be74(4): nop 0x0(%rax)
be78(3): mov (%rcx),%rax
be7b(3): test %rax,%rax
be7e(2): jnz 0xd(%rip)
be80(4): add $0x10,%rcx
be84(3): cmp %rcx,%rdx
be87(2): jnbe 0xfffffff1(%rip)
be89(2): xor %eax,%eax
be8b(4): add $0x8,%rsp
be8f(1): pop %rbx
be90(1): pop %rbp
be91(1): ret near (%rsp)
be92(6): nop 0x0(%rax,%rax,1)
be98(3): mov (%rdx),%rax
be9b(4): add $0x8,%rsp
be9f(1): pop %rbx
bea0(1): pop %rbp
bea1(1): ret near (%rsp)

"hash_get_entries" :
beb0(3): mov (%rdi),%r9
beb3(4): cmp %r9,0x8(%rdi)
beb7(2): jbe 0x5b(%rip)
beb9(3): xor %r8d,%r8d
bebc(3): mov (%r9),%rcx
bebf(3): test %rcx,%rcx
bec2(2): jz 0x3b(%rip)
bec4(3): cmp %r8,%rdx
bec7(2): jbe 0x40(%rip)
bec9(4): mov %rcx,0x0(%rsi,%r8,8)
becd(4): mov 0x8(%r9),%rcx
bed1(4): lea 0x1(%r8),%rax
bed5(3): test %rcx,%rcx
bed8(2): jz 0x22(%rip)
beda(6): nop 0x0(%rax,%rax,1)
bee0(3): cmp %rax,%rdx
bee3(2): jz 0x2d(%rip)
bee5(3): mov (%rcx),%r8
bee8(4): add $0x1,%rax
beec(5): mov %r8,0xfffffff8(%rsi,%rax,8)
bef1(4): mov 0x8(%rcx),%rcx
bef5(3): test %rcx,%rcx
bef8(2): jnz 0xffffffe8(%rip)
befa(3): mov %rax,%r8
befd(4): add $0x10,%r9
bf01(4): cmp %r9,0x8(%rdi)
bf05(2): jnbe 0xffffffb7(%rip)
bf07(3): mov %r8,%rax
bf0a(1): ret near (%rsp)
bf0b(5): nop 0x0(%rax,%rax,1)
bf10(2): REP ret near (%rsp)
bf12(2): xor %eax,%eax
bf14(1): ret near (%rsp)

"hash_do_for_each" :
bf20(2): push %r15
bf22(2): push %r14
bf24(2): push %r13
bf26(2): push %r12
bf28(1): push %rbp
bf29(1): push %rbx
bf2a(4): sub $0x8,%rsp
bf2e(3): mov (%rdi),%r14
bf31(4): cmp %r14,0x8(%rdi)
bf35(2): jbe 0x51(%rip)
bf37(3): mov %rdx,%r13
bf3a(3): mov %rsi,%r12
bf3d(3): mov %rdi,%r15
bf40(2): xor %ebp,%ebp
bf42(3): mov (%r14),%rdi
bf45(3): test %rdi,%rdi
bf48(2): jz 0x22(%rip)
bf4a(3): mov %r14,%rbx
bf4d(2): jmp 0x6(%rip)
bf4f(1): nop 
bf50(3): mov (%rbx),%rdi
bf53(3): mov %r13,%rsi
bf56(3): call %r12
bf59(2): test %al,%al
bf5b(2): jz 0x19(%rip)
bf5d(4): mov 0x8(%rbx),%rbx
bf61(4): add $0x1,%rbp
bf65(3): test %rbx,%rbx
bf68(2): jnz 0xffffffe8(%rip)
bf6a(4): add $0x10,%r14
bf6e(4): cmp %r14,0x8(%r15)
bf72(2): jnbe 0xffffffd0(%rip)
bf74(4): add $0x8,%rsp
bf78(3): mov %rbp,%rax
bf7b(1): pop %rbx
bf7c(1): pop %rbp
bf7d(2): pop %r12
bf7f(2): pop %r13
bf81(2): pop %r14
bf83(2): pop %r15
bf85(1): ret near (%rsp)
bf86(2): xor %ebp,%ebp
bf88(2): jmp 0xffffffec(%rip)

"hash_string" :
bf90(3): movzx (%rdi),%ecx
bf93(2): xor %edx,%edx
bf95(2): test %cl,%cl
bf97(2): jz 0x26(%rip)
bf99(7): nop 0x0(%rax)
bfa0(3): mov %rdx,%rax
bfa3(4): add $0x1,%rdi
bfa7(4): shl/sal $0x5,%rax
bfab(3): sub %rdx,%rax
bfae(2): xor %edx,%edx
bfb0(3): add %rcx,%rax
bfb3(3): movzx (%rdi),%ecx
bfb6(3): div %rsi,%rax
bfb9(2): test %cl,%cl
bfbb(2): jnz 0xffffffe5(%rip)
bfbd(3): mov %rdx,%rax
bfc0(1): ret near (%rsp)

"hash_reset_tuning" :
bfd0(a): mov $0x4575657221408423936,%rax
bfda(4): mov $0x0,0x10(%rdi)
bfde(3): mov %rax,(%rdi)
bfe1(a): mov $0x4590573145673223373,%rax
bfeb(4): mov %rax,0x8(%rdi)
bfef(1): ret near (%rsp)

"hash_initialize" :
bff0(2): push %r15
bff2(2): push %r14
bff4(7): lea 0xfffff825(%rip),%rax
bffb(2): push %r13
bffd(2): push %r12
bfff(3): mov %rdx,%r12
c002(1): push %rbp
c003(1): push %rbx
c004(3): mov %rcx,%r13
c007(3): mov %rdi,%rbp
c00a(5): mov $0x50,%edi
c00f(3): mov %rsi,%r15
c012(4): sub $0x8,%rsp
c016(3): test %rdx,%rdx
c019(3): mov %r8,%r14
c01c(4): cmove %rax,%r12
c020(7): lea 0xfffff809(%rip),%rax
c027(3): test %rcx,%rcx
c02a(4): cmove %rax,%r13
c02e(5): call 0xffff69d2(%rip)
c033(3): test %rax,%rax
c036(3): mov %rax,%rbx
c039(6): jz 0xb1(%rip)
c03f(3): test %r15,%r15
c042(4): lea 0x28(%rax),%rdi
c046(6): jz 0xba(%rip)
c04c(4): mov %r15,0x28(%rax)
c050(5): call 0xfffff940(%rip)
c055(2): test %al,%al
c057(6): jz 0x89(%rip)
c05d(5): cmp $0x0,0x10(%r15)
c062(6): jz 0xfe(%rip)
c068(3): mov %rbp,%rdi
c06b(5): call 0xfffff715(%rip)
c070(5): mov $0x8,%edx
c075(3): mov %rax,%rbp
c078(2): xor %ecx,%ecx
c07a(3): mov %rdx,%rax
c07d(3): mul %rax,%rbp,%rdx
c080(6): jo 0x11a(%rip)
c086(3): test %rax,%rax
c089(2): js 0x57(%rip)
c08b(3): test %rcx,%rcx
c08e(2): jnz 0x52(%rip)
c090(3): test %rbp,%rbp
c093(4): mov %rbp,0x10(%rbx)
c097(2): jz 0x49(%rip)
c099(5): mov $0x10,%esi
c09e(3): mov %rbp,%rdi
c0a1(5): call 0xffff686f(%rip)
c0a6(3): test %rax,%rax
c0a9(3): mov %rax,(%rbx)
c0ac(2): jz 0x34(%rip)
c0ae(4): shl/sal $0x4,%rbp
c0b2(8): mov $0x0,0x18(%rbx)
c0ba(8): mov $0x0,0x20(%rbx)
c0c2(3): add %rax,%rbp
c0c5(4): mov %r12,0x30(%rbx)
c0c9(4): mov %r13,0x38(%rbx)
c0cd(4): mov %rbp,0x8(%rbx)
c0d1(4): mov %r14,0x40(%rbx)
c0d5(8): mov $0x0,0x48(%rbx)
c0dd(2): jmp 0xd(%rip)
c0df(1): nop 
c0e0(3): mov %rbx,%rdi
c0e3(2): xor %ebx,%ebx
c0e5(5): call 0xffff6b9b(%rip)
c0ea(4): add $0x8,%rsp
c0ee(3): mov %rbx,%rax
c0f1(1): pop %rbx
c0f2(1): pop %rbp
c0f3(2): pop %r12
c0f5(2): pop %r13
c0f7(2): pop %r14
c0f9(2): pop %r15
c0fb(1): ret near (%rsp)
c0fc(4): nop 0x0(%rax)
c100(7): lea 0xa909(%rip),%rax
c107(4): mov %rax,0x28(%rbx)
c10b(5): call 0xfffff885(%rip)
c110(2): test %al,%al
c112(8): movss 0xa91e(%rip),%xmm1
c11a(2): jz 0xffffffc6(%rip)
c11c(3): test %rbp,%rbp
c11f(2): js 0x4c(%rip)
c121(4): pxor %xmm0,%xmm0
c125(5): cvtsi2ss %rbp,%xmm0
c12a(4): divss %xmm1,%xmm0
c12e(7): ucomiss 0xa907(%rip),%xmm0
c135(2): jnb 0xffffffab(%rip)
c137(7): ucomiss 0xa902(%rip),%xmm0
c13e(2): jb 0x52(%rip)
c140(8): subss 0xa8f8(%rip),%xmm0
c148(a): mov $0x-9223372036854775808,%rax
c152(5): cvttss2si %xmm0,%rbp
c157(3): xor %rax,%rbp
c15a(5): jmp 0xffffff0e(%rip)
c15f(1): nop 
c160(3): test %rbp,%rbp
c163(6): movss 0x8(%r15),%xmm1
c169(2): jns 0xffffffb8(%rip)
c16b(3): mov %rbp,%rax
c16e(4): pxor %xmm0,%xmm0
c172(3): shr $0x1,%rax
c175(3): and $0x1,%ebp
c178(3): or %rbp,%rax
c17b(5): cvtsi2ss %rax,%xmm0
c180(4): addss %xmm0,%xmm0
c184(2): jmp 0xffffffa6(%rip)
c186(a): nop 0x0(%rax,%rax,1)
c190(5): cvttss2si %xmm0,%rbp
c195(5): jmp 0xfffffed3(%rip)
c19a(5): mov $0x1,%ecx
c19f(5): jmp 0xfffffee7(%rip)

"hash_clear" :
c1b0(2): push %r12
c1b2(1): push %rbp
c1b3(3): mov %rdi,%rbp
c1b6(1): push %rbx
c1b7(3): mov (%rdi),%r12
c1ba(4): cmp 0x8(%rdi),%r12
c1be(2): jnb 0x6d(%rip)
c1c0(5): cmp $0x0,(%r12)
c1c5(2): jz 0x5c(%rip)
c1c7(5): mov 0x8(%r12),%rbx
c1cc(4): mov 0x40(%rbp),%rax
c1d0(3): test %rbx,%rbx
c1d3(2): jz 0x32(%rip)
c1d5(3): nop (%rax)
c1d8(3): test %rax,%rax
c1db(2): jz 0xb(%rip)
c1dd(3): mov (%rbx),%rdi
c1e0(2): call %rax
c1e2(4): mov 0x40(%rbp),%rax
c1e6(4): mov 0x8(%rbx),%rdx
c1ea(4): mov 0x48(%rbp),%rcx
c1ee(7): mov $0x0,(%rbx)
c1f5(3): test %rdx,%rdx
c1f8(4): mov %rcx,0x8(%rbx)
c1fc(4): mov %rbx,0x48(%rbp)
c200(3): mov %rdx,%rbx
c203(2): jnz 0xffffffd5(%rip)
c205(3): test %rax,%rax
c208(2): jz 0x8(%rip)
c20a(4): mov (%r12),%rdi
c20e(2): call %rax
c210(8): mov $0x0,(%r12)
c218(9): mov $0x0,0x8(%r12)
c221(4): add $0x10,%r12
c225(4): cmp %r12,0x8(%rbp)
c229(2): jnbe 0xffffff97(%rip)
c22b(8): mov $0x0,0x18(%rbp)
c233(8): mov $0x0,0x20(%rbp)
c23b(1): pop %rbx
c23c(1): pop %rbp
c23d(2): pop %r12
c23f(1): ret near (%rsp)

"hash_free" :
c240(2): push %r12
c242(1): push %rbp
c243(3): mov %rdi,%r12
c246(1): push %rbx
c247(5): cmp $0x0,0x40(%rdi)
c24c(3): mov (%rdi),%rbp
c24f(4): mov 0x8(%rdi),%rax
c253(2): jz 0x50(%rip)
c255(5): cmp $0x0,0x20(%rdi)
c25a(2): jz 0x49(%rip)
c25c(3): cmp %rax,%rbp
c25f(2): jnb 0x7d(%rip)
c261(7): nop 0x0(%rax)
c268(4): mov 0x0(%rbp),%rdi
c26c(3): test %rdi,%rdi
c26f(2): jz 0x27(%rip)
c271(3): mov %rbp,%rbx
c274(2): jmp 0xf(%rip)
c276(a): nop 0x0(%rax,%rax,1)
c280(3): mov (%rbx),%rdi
c283(5): call 0x40(%r12)
c288(4): mov 0x8(%rbx),%rbx
c28c(3): test %rbx,%rbx
c28f(2): jnz 0xfffffff1(%rip)
c291(5): mov 0x8(%r12),%rax
c296(4): add $0x10,%rbp
c29a(3): cmp %rbp,%rax
c29d(2): jnbe 0xffffffcb(%rip)
c29f(4): mov (%r12),%rbp
c2a3(3): cmp %rax,%rbp
c2a6(2): jnb 0x36(%rip)
c2a8(8): nop 0x0(%rax,%rax,1)
c2b0(4): mov 0x8(%rbp),%rdi
c2b4(3): test %rdi,%rdi
c2b7(2): jz 0x1a(%rip)
c2b9(7): nop 0x0(%rax)
c2c0(4): mov 0x8(%rdi),%rbx
c2c4(5): call 0xffff69bc(%rip)
c2c9(3): test %rbx,%rbx
c2cc(3): mov %rbx,%rdi
c2cf(2): jnz 0xfffffff1(%rip)
c2d1(4): add $0x10,%rbp
c2d5(5): cmp %rbp,0x8(%r12)
c2da(2): jnbe 0xffffffd6(%rip)
c2dc(5): mov 0x48(%r12),%rdi
c2e1(3): test %rdi,%rdi
c2e4(2): jz 0x1d(%rip)
c2e6(a): nop 0x0(%rax,%rax,1)
c2f0(4): mov 0x8(%rdi),%rbx
c2f4(5): call 0xffff698c(%rip)
c2f9(3): test %rbx,%rbx
c2fc(3): mov %rbx,%rdi
c2ff(2): jnz 0xfffffff1(%rip)
c301(4): mov (%r12),%rdi
c305(5): call 0xffff697b(%rip)
c30a(1): pop %rbx
c30b(3): mov %r12,%rdi
c30e(1): pop %rbp
c30f(2): pop %r12
c311(5): jmp 0xffff696f(%rip)

"hash_rehash" :
c320(2): push %r12
c322(1): push %rbp
c323(3): mov %rdi,%rbp
c326(1): push %rbx
c327(4): sub $0x60,%rsp
c32b(4): mov 0x28(%rdi),%r12
c32f(9): mov $0x28,%rax
c338(5): mov %rax,0x58(%rsp)
c33d(2): xor %eax,%eax
c33f(6): cmp $0x0,0x10(%r12)
c345(2): jnz 0x53(%rip)
c347(3): test %rsi,%rsi
c34a(6): js 0x17e(%rip)
c350(4): pxor %xmm0,%xmm0
c354(5): cvtsi2ss %rsi,%xmm0
c359(7): divss 0x8(%r12),%xmm0
c360(7): ucomiss 0xa6d5(%rip),%xmm0
c367(6): jnb 0x139(%rip)
c36d(7): ucomiss 0xa6cc(%rip),%xmm0
c374(6): jb 0x17c(%rip)
c37a(8): subss 0xa6be(%rip),%xmm0
c382(a): mov $0x-9223372036854775808,%rax
c38c(5): cvttss2si %xmm0,%rsi
c391(3): xor %rax,%rsi
c394(4): nop 0x0(%rax)
c398(3): mov %rsi,%rdi
c39b(5): call 0xfffff3e5(%rip)
c3a0(5): mov $0x8,%edx
c3a5(3): mov %rax,%rbx
c3a8(2): xor %ecx,%ecx
c3aa(3): mov %rdx,%rax
c3ad(3): mul %rax,%rbx,%rdx
c3b0(6): jo 0x19f(%rip)
c3b6(3): test %rax,%rax
c3b9(5): mov $0x1,%eax
c3be(4): cmovs %rax,%rcx
c3c2(3): test %rbx,%rbx
c3c5(6): jz 0xdb(%rip)
c3cb(3): and $0x1,%ecx
c3ce(6): jnz 0xd2(%rip)
c3d4(4): cmp %rbx,0x10(%rbp)
c3d8(6): jz 0x128(%rip)
c3de(5): mov $0x10,%esi
c3e3(3): mov %rbx,%rdi
c3e6(5): call 0xffff652a(%rip)
c3eb(3): test %rax,%rax
c3ee(4): mov %rax,(%rsp)
c3f2(6): jz 0xae(%rip)
c3f8(5): mov %rbx,0x10(%rsp)
c3fd(4): shl/sal $0x4,%rbx
c401(5): mov %r12,0x28(%rsp)
c406(3): add %rax,%rbx
c409(4): mov 0x30(%rbp),%rax
c40d(3): mov %rsp,%r12
c410(2): xor %edx,%edx
c412(3): mov %rbp,%rsi
c415(3): mov %r12,%rdi
c418(5): mov %rbx,0x8(%rsp)
c41d(9): mov $0x0,0x18(%rsp)
c426(5): mov %rax,0x30(%rsp)
c42b(4): mov 0x38(%rbp),%rax
c42f(9): mov $0x0,0x20(%rsp)
c438(5): mov %rax,0x38(%rsp)
c43d(4): mov 0x40(%rbp),%rax
c441(5): mov %rax,0x40(%rsp)
c446(4): mov 0x48(%rbp),%rax
c44a(5): mov %rax,0x48(%rsp)
c44f(5): call 0xfffff5c1(%rip)
c454(2): test %al,%al
c456(2): mov %eax,%ebx
c458(6): jnz 0xb8(%rip)
c45e(5): mov 0x48(%rsp),%rax
c463(5): mov $0x1,%edx
c468(3): mov %r12,%rsi
c46b(3): mov %rbp,%rdi
c46e(4): mov %rax,0x48(%rbp)
c472(5): call 0xfffff59e(%rip)
c477(2): test %al,%al
c479(6): jz 0xe0(%rip)
c47f(2): xor %edx,%edx
c481(3): mov %r12,%rsi
c484(3): mov %rbp,%rdi
c487(5): call 0xfffff589(%rip)
c48c(2): test %al,%al
c48e(6): jz 0xcb(%rip)
c494(4): mov (%rsp),%rdi
c498(5): call 0xffff67e8(%rip)
c49d(2): jmp 0x5(%rip)
c49f(1): nop 
c4a0(2): xor %ebx,%ebx
c4a2(5): mov 0x58(%rsp),%rcx
c4a7(9): xor $0x28,%rcx
c4b0(2): mov %ebx,%eax
c4b2(6): jnz 0x98(%rip)
c4b8(4): add $0x60,%rsp
c4bc(1): pop %rbx
c4bd(1): pop %rbp
c4be(2): pop %r12
c4c0(1): ret near (%rsp)
c4c1(7): nop 0x0(%rax)
c4c8(3): mov %rsi,%rax
c4cb(4): pxor %xmm0,%xmm0
c4cf(3): shr $0x1,%rax
c4d2(3): and $0x1,%esi
c4d5(3): or %rsi,%rax
c4d8(5): cvtsi2ss %rax,%xmm0
c4dd(4): addss %xmm0,%xmm0
c4e1(5): jmp 0xfffffe78(%rip)
c4e6(a): nop 0x0(%rax,%rax,1)
c4f0(5): cvttss2si %xmm0,%rsi
c4f5(5): jmp 0xfffffea3(%rip)
c4fa(6): nop 0x0(%rax,%rax,1)
c500(5): mov $0x1,%ebx
c505(2): jmp 0xffffff9d(%rip)
c507(9): nop 0x0(%rax,%rax,1)
c510(4): mov 0x0(%rbp),%rdi
c514(5): call 0xffff676c(%rip)
c519(4): mov (%rsp),%rax
c51d(4): mov %rax,0x0(%rbp)
c521(5): mov 0x8(%rsp),%rax
c526(4): mov %rax,0x8(%rbp)
c52a(5): mov 0x10(%rsp),%rax
c52f(4): mov %rax,0x10(%rbp)
c533(5): mov 0x18(%rsp),%rax
c538(4): mov %rax,0x18(%rbp)
c53c(5): mov 0x48(%rsp),%rax
c541(4): mov %rax,0x48(%rbp)
c545(5): jmp 0xffffff5d(%rip)
c54a(5): call 0xffff6236(%rip)
c54f(5): mov $0x1,%ecx
c554(5): jmp 0xfffffe62(%rip)
c559(5): call 0xffff6037(%rip)

"hash_insert_if_absent" :
c560(2): push %r13
c562(2): push %r12
c564(1): push %rbp
c565(1): push %rbx
c566(4): sub $0x18,%rsp
c56a(9): mov $0x28,%rax
c573(5): mov %rax,0x8(%rsp)
c578(2): xor %eax,%eax
c57a(3): test %rsi,%rsi
c57d(6): jz 0x1c0(%rip)
c583(3): mov %rsp,%r12
c586(2): xor %ecx,%ecx
c588(3): mov %rdx,%r13
c58b(3): mov %r12,%rdx
c58e(3): mov %rdi,%rbx
c591(3): mov %rsi,%rbp
c594(5): call 0xfffff2dc(%rip)
c599(3): test %rax,%rax
c59c(3): mov %rax,%rdx
c59f(2): jz 0x31(%rip)
c5a1(2): xor %eax,%eax
c5a3(3): test %r13,%r13
c5a6(2): jz 0x6(%rip)
c5a8(4): mov %rdx,0x0(%r13)
c5ac(5): mov 0x8(%rsp),%rcx
c5b1(9): xor $0x28,%rcx
c5ba(6): jnz 0x225(%rip)
c5c0(4): add $0x18,%rsp
c5c4(1): pop %rbx
c5c5(1): pop %rbp
c5c6(2): pop %r12
c5c8(2): pop %r13
c5ca(1): ret near (%rsp)
c5cb(5): nop 0x0(%rax,%rax,1)
c5d0(4): mov 0x18(%rbx),%rax
c5d4(3): test %rax,%rax
c5d7(2): js 0x79(%rip)
c5d9(4): pxor %xmm1,%xmm1
c5dd(4): mov 0x28(%rbx),%rdx
c5e1(5): cvtsi2ss %rax,%xmm1
c5e6(4): mov 0x10(%rbx),%rax
c5ea(3): test %rax,%rax
c5ed(6): js 0x8d(%rip)
c5f3(4): pxor %xmm0,%xmm0
c5f7(5): cvtsi2ss %rax,%xmm0
c5fc(5): mulss 0x8(%rdx),%xmm0
c601(3): ucomiss %xmm0,%xmm1
c604(6): jnbe 0x9c(%rip)
c60a(4): mov (%rsp),%r12
c60e(5): cmp $0x0,(%r12)
c613(6): jz 0x135(%rip)
c619(4): mov 0x48(%rbx),%rax
c61d(3): test %rax,%rax
c620(6): jz 0x140(%rip)
c626(4): mov 0x8(%rax),%rdx
c62a(4): mov %rdx,0x48(%rbx)
c62e(5): mov 0x8(%r12),%rdx
c633(3): mov %rbp,(%rax)
c636(4): mov %rdx,0x8(%rax)
c63a(5): mov %rax,0x8(%r12)
c63f(5): mov $0x1,%eax
c644(5): add $0x1,0x20(%rbx)
c649(5): jmp 0xffffff63(%rip)
c64e(2): nop 
c650(3): mov %rax,%rdx
c653(4): pxor %xmm1,%xmm1
c657(3): and $0x1,%eax
c65a(3): shr $0x1,%rdx
c65d(3): or %rax,%rdx
c660(4): mov 0x10(%rbx),%rax
c664(5): cvtsi2ss %rdx,%xmm1
c669(4): mov 0x28(%rbx),%rdx
c66d(3): test %rax,%rax
c670(4): addss %xmm1,%xmm1
c674(6): jns 0xffffff7f(%rip)
c67a(3): mov %rax,%rcx
c67d(4): pxor %xmm0,%xmm0
c681(3): shr $0x1,%rcx
c684(3): and $0x1,%eax
c687(3): or %rax,%rcx
c68a(5): cvtsi2ss %rcx,%xmm0
c68f(4): addss %xmm0,%xmm0
c693(5): jmp 0xffffff69(%rip)
c698(8): nop 0x0(%rax,%rax,1)
c6a0(4): lea 0x28(%rbx),%rdi
c6a4(5): call 0xfffff2ec(%rip)
c6a9(4): mov 0x10(%rbx),%rax
c6ad(4): mov 0x28(%rbx),%rdx
c6b1(3): test %rax,%rax
c6b4(5): movss 0x8(%rdx),%xmm2
c6b9(6): js 0xc7(%rip)
c6bf(4): pxor %xmm0,%xmm0
c6c3(5): cvtsi2ss %rax,%xmm0
c6c8(4): mov 0x18(%rbx),%rax
c6cc(3): test %rax,%rax
c6cf(6): js 0xd1(%rip)
c6d5(4): pxor %xmm1,%xmm1
c6d9(5): cvtsi2ss %rax,%xmm1
c6de(3): movaps %xmm2,%xmm3
c6e1(4): mulss %xmm0,%xmm3
c6e5(3): ucomiss %xmm3,%xmm1
c6e8(6): jbe 0xffffff22(%rip)
c6ee(4): cmp $0x0,0x10(%rdx)
c6f2(5): mulss 0xc(%rdx),%xmm0
c6f7(2): jnz 0x6(%rip)
c6f9(4): mulss %xmm2,%xmm0
c6fd(7): ucomiss 0xa338(%rip),%xmm0
c704(2): jnb 0x6f(%rip)
c706(7): ucomiss 0xa333(%rip),%xmm0
c70d(6): jnb 0xb3(%rip)
c713(5): cvttss2si %xmm0,%rsi
c718(3): mov %rbx,%rdi
c71b(5): call 0xfffffc05(%rip)
c720(2): test %al,%al
c722(2): jz 0x51(%rip)
c724(2): xor %ecx,%ecx
c726(3): mov %r12,%rdx
c729(3): mov %rbp,%rsi
c72c(3): mov %rbx,%rdi
c72f(5): call 0xfffff141(%rip)
c734(3): test %rax,%rax
c737(6): jz 0xfffffed3(%rip)
c73d(5): call 0xffff5e53(%rip)
c742(6): nop 0x0(%rax,%rax,1)
c748(4): mov %rbp,(%r12)
c74c(5): mov $0x1,%eax
c751(5): add $0x1,0x20(%rbx)
c756(5): add $0x1,0x18(%rbx)
c75b(5): jmp 0xfffffe51(%rip)
c760(5): mov $0x10,%edi
c765(5): call 0xffff629b(%rip)
c76a(3): test %rax,%rax
c76d(6): jnz 0xfffffec1(%rip)
c773(5): mov $0xffffffff,%eax
c778(5): jmp 0xfffffe34(%rip)
c77d(3): nop (%rax)
c780(3): mov %rax,%rcx
c783(4): pxor %xmm0,%xmm0
c787(3): shr $0x1,%rcx
c78a(3): and $0x1,%eax
c78d(3): or %rax,%rcx
c790(5): cvtsi2ss %rcx,%xmm0
c795(4): addss %xmm0,%xmm0
c799(5): jmp 0xffffff2f(%rip)
c79e(2): nop 
c7a0(3): mov %rax,%rcx
c7a3(4): pxor %xmm1,%xmm1
c7a7(3): shr $0x1,%rcx
c7aa(3): and $0x1,%eax
c7ad(3): or %rax,%rcx
c7b0(5): cvtsi2ss %rcx,%xmm1
c7b5(4): addss %xmm1,%xmm1
c7b9(5): jmp 0xffffff25(%rip)
c7be(2): nop 
c7c0(8): subss 0xa278(%rip),%xmm0
c7c8(a): mov $0x-9223372036854775808,%rax
c7d2(5): cvttss2si %xmm0,%rsi
c7d7(3): xor %rax,%rsi
c7da(5): jmp 0xffffff3e(%rip)
c7df(5): call 0xffff5fa1(%rip)

"hash_insert" :
c7f0(1): push %rbx
c7f1(3): mov %rsi,%rbx
c7f4(4): sub $0x10,%rsp
c7f8(3): mov %rsp,%rdx
c7fb(9): mov $0x28,%rax
c804(5): mov %rax,0x8(%rsp)
c809(2): xor %eax,%eax
c80b(5): call 0xfffffd55(%rip)
c810(3): cmp $0xff,%eax
c813(2): jz 0x2d(%rip)
c815(2): test %eax,%eax
c817(2): jnz 0x6(%rip)
c819(4): mov (%rsp),%rbx
c81d(5): mov 0x8(%rsp),%rcx
c822(9): xor $0x28,%rcx
c82b(3): mov %rbx,%rax
c82e(2): jnz 0x16(%rip)
c830(4): add $0x10,%rsp
c834(1): pop %rbx
c835(1): ret near (%rsp)
c836(a): nop 0x0(%rax,%rax,1)
c840(2): xor %ebx,%ebx
c842(2): jmp 0xffffffdb(%rip)
c844(5): call 0xffff5f3c(%rip)

"hash_delete" :
c850(2): push %r12
c852(1): push %rbp
c853(5): mov $0x1,%ecx
c858(1): push %rbx
c859(3): mov %rdi,%rbx
c85c(4): sub $0x10,%rsp
c860(3): mov %rsp,%rdx
c863(9): mov $0x28,%rax
c86c(5): mov %rax,0x8(%rsp)
c871(2): xor %eax,%eax
c873(5): call 0xffffeffd(%rip)
c878(3): test %rax,%rax
c87b(3): mov %rax,%rbp
c87e(2): jz 0x11(%rip)
c880(4): mov (%rsp),%rax
c884(5): sub $0x1,0x20(%rbx)
c889(4): cmp $0x0,(%rax)
c88d(2): jz 0x23(%rip)
c88f(5): mov 0x8(%rsp),%rcx
c894(9): xor $0x28,%rcx
c89d(3): mov %rbp,%rax
c8a0(6): jnz 0x1ae(%rip)
c8a6(4): add $0x10,%rsp
c8aa(1): pop %rbx
c8ab(1): pop %rbp
c8ac(2): pop %r12
c8ae(1): ret near (%rsp)
c8af(1): nop 
c8b0(4): mov 0x18(%rbx),%rax
c8b4(4): sub $0x1,%rax
c8b8(3): test %rax,%rax
c8bb(4): mov %rax,0x18(%rbx)
c8bf(6): js 0x101(%rip)
c8c5(4): pxor %xmm0,%xmm0
c8c9(5): cvtsi2ss %rax,%xmm0
c8ce(4): mov 0x10(%rbx),%rax
c8d2(4): mov 0x28(%rbx),%rdx
c8d6(3): test %rax,%rax
c8d9(6): js 0xc7(%rip)
c8df(4): pxor %xmm1,%xmm1
c8e3(5): cvtsi2ss %rax,%xmm1
c8e8(4): mulss (%rdx),%xmm1
c8ec(3): ucomiss %xmm0,%xmm1
c8ef(2): jbe 0xffffffa0(%rip)
c8f1(4): lea 0x28(%rbx),%rdi
c8f5(5): call 0xfffff09b(%rip)
c8fa(4): mov 0x10(%rbx),%rax
c8fe(4): mov 0x28(%rbx),%rdx
c902(3): test %rax,%rax
c905(6): js 0x12b(%rip)
c90b(4): pxor %xmm0,%xmm0
c90f(5): cvtsi2ss %rax,%xmm0
c914(4): mov 0x18(%rbx),%rax
c918(3): test %rax,%rax
c91b(6): js 0xf5(%rip)
c921(4): pxor %xmm1,%xmm1
c925(5): cvtsi2ss %rax,%xmm1
c92a(4): movss (%rdx),%xmm2
c92e(4): mulss %xmm0,%xmm2
c932(3): ucomiss %xmm1,%xmm2
c935(6): jbe 0xffffff5a(%rip)
c93b(4): cmp $0x0,0x10(%rdx)
c93f(5): mulss 0x4(%rdx),%xmm0
c944(6): jz 0xbc(%rip)
c94a(7): ucomiss 0xa0ef(%rip),%xmm0
c951(6): jnb 0x8f(%rip)
c957(5): cvttss2si %xmm0,%rsi
c95c(3): mov %rbx,%rdi
c95f(5): call 0xfffff9c1(%rip)
c964(2): test %al,%al
c966(6): jnz 0xffffff29(%rip)
c96c(4): mov 0x48(%rbx),%rdi
c970(3): test %rdi,%rdi
c973(2): jz 0x16(%rip)
c975(3): nop (%rax)
c978(4): mov 0x8(%rdi),%r12
c97c(5): call 0xffff6304(%rip)
c981(3): test %r12,%r12
c984(3): mov %r12,%rdi
c987(2): jnz 0xfffffff1(%rip)
c989(8): mov $0x0,0x48(%rbx)
c991(5): jmp 0xfffffefe(%rip)
c996(a): nop 0x0(%rax,%rax,1)
c9a0(3): mov %rax,%rcx
c9a3(4): pxor %xmm1,%xmm1
c9a7(3): shr $0x1,%rcx
c9aa(3): and $0x1,%eax
c9ad(3): or %rax,%rcx
c9b0(5): cvtsi2ss %rcx,%xmm1
c9b5(4): addss %xmm1,%xmm1
c9b9(5): jmp 0xffffff2f(%rip)
c9be(2): nop 
c9c0(3): mov %rax,%rdx
c9c3(4): pxor %xmm0,%xmm0
c9c7(3): shr $0x1,%rdx
c9ca(3): and $0x1,%eax
c9cd(3): or %rax,%rdx
c9d0(5): cvtsi2ss %rdx,%xmm0
c9d5(4): addss %xmm0,%xmm0
c9d9(5): jmp 0xfffffef5(%rip)
c9de(2): nop 
c9e0(8): subss 0xa058(%rip),%xmm0
c9e8(a): mov $0x-9223372036854775808,%rax
c9f2(5): cvttss2si %xmm0,%rsi
c9f7(3): xor %rax,%rsi
c9fa(5): jmp 0xffffff62(%rip)
c9ff(1): nop 
ca00(5): mulss 0x8(%rdx),%xmm0
ca05(5): jmp 0xffffff45(%rip)
ca0a(6): nop 0x0(%rax,%rax,1)
ca10(3): mov %rax,%rcx
ca13(4): pxor %xmm1,%xmm1
ca17(3): shr $0x1,%rcx
ca1a(3): and $0x1,%eax
ca1d(3): or %rax,%rcx
ca20(5): cvtsi2ss %rcx,%xmm1
ca25(4): addss %xmm1,%xmm1
ca29(5): jmp 0xffffff01(%rip)
ca2e(2): nop 
ca30(3): mov %rax,%rcx
ca33(4): pxor %xmm0,%xmm0
ca37(3): shr $0x1,%rcx
ca3a(3): and $0x1,%eax
ca3d(3): or %rax,%rcx
ca40(5): cvtsi2ss %rcx,%xmm0
ca45(4): addss %xmm0,%xmm0
ca49(5): jmp 0xfffffecb(%rip)
ca4e(5): call 0xffff5d32(%rip)

"triple_hash" :
ca60(1): push %rbp
ca61(1): push %rbx
ca62(3): mov %rdi,%rbp
ca65(3): mov %rsi,%rbx
ca68(4): sub $0x8,%rsp
ca6c(3): mov (%rdi),%rdi
ca6f(5): call 0x7201(%rip)
ca74(4): xor 0x8(%rbp),%rax
ca78(2): xor %edx,%edx
ca7a(4): add $0x8,%rsp
ca7e(3): div %rbx,%rax
ca81(1): pop %rbx
ca82(1): pop %rbp
ca83(3): mov %rdx,%rax
ca86(1): ret near (%rsp)

"triple_hash_no_name" :
ca90(4): mov 0x8(%rdi),%rax
ca94(2): xor %edx,%edx
ca96(3): div %rsi,%rax
ca99(3): mov %rdx,%rax
ca9c(1): ret near (%rsp)

"triple_compare" :
caa0(2): xor %eax,%eax
caa2(4): mov 0x8(%rsi),%rdx
caa6(4): cmp %rdx,0x8(%rdi)
caaa(2): jz 0x6(%rip)
caac(2): REP ret near (%rsp)
caae(2): nop 
cab0(4): mov 0x10(%rsi),%rcx
cab4(4): cmp %rcx,0x10(%rdi)
cab8(2): jnz 0xfffffff4(%rip)
caba(4): sub $0x8,%rsp
cabe(3): mov (%rsi),%rsi
cac1(3): mov (%rdi),%rdi
cac4(5): call 0x241c(%rip)
cac9(4): add $0x8,%rsp
cacd(1): ret near (%rsp)

"triple_compare_ino_str" :
cad0(2): xor %eax,%eax
cad2(4): mov 0x8(%rsi),%rdx
cad6(4): cmp %rdx,0x8(%rdi)
cada(2): jz 0x6(%rip)
cadc(2): REP ret near (%rsp)
cade(2): nop 
cae0(4): mov 0x10(%rsi),%rcx
cae4(4): cmp %rcx,0x10(%rdi)
cae8(2): jnz 0xfffffff4(%rip)
caea(4): sub $0x8,%rsp
caee(3): mov (%rsi),%rsi
caf1(3): mov (%rdi),%rdi
caf4(5): call 0xffff5e3c(%rip)
caf9(2): test %eax,%eax
cafb(3): setz %al
cafe(4): add $0x8,%rsp
cb02(1): ret near (%rsp)

"triple_free" :
cb10(1): push %rbx
cb11(3): mov %rdi,%rbx
cb14(3): mov (%rdi),%rdi
cb17(5): call 0xffff6169(%rip)
cb1c(3): mov %rbx,%rdi
cb1f(1): pop %rbx
cb20(5): jmp 0xffff6160(%rip)

"opendirat" :
cb30(2): push %r13
cb32(2): push %r12
cb34(6): or $0x90900,%edx
cb3a(1): push %rbp
cb3b(1): push %rbx
cb3c(2): xor %eax,%eax
cb3e(3): mov %rcx,%r12
cb41(4): sub $0x8,%rsp
cb45(5): call 0x725b(%rip)
cb4a(2): test %eax,%eax
cb4c(2): js 0x54(%rip)
cb4e(2): mov %eax,%edi
cb50(2): mov %eax,%ebx
cb52(5): call 0xffff602e(%rip)
cb57(3): test %rax,%rax
cb5a(3): mov %rax,%rbp
cb5d(2): jz 0x1b(%rip)
cb5f(4): mov %ebx,(%r12)
cb63(4): add $0x8,%rsp
cb67(3): mov %rbp,%rax
cb6a(1): pop %rbx
cb6b(1): pop %rbp
cb6c(2): pop %r12
cb6e(2): pop %r13
cb70(1): ret near (%rsp)
cb71(7): nop 0x0(%rax)
cb78(5): call 0xffff5a28(%rip)
cb7d(3): mov (%rax),%r13d
cb80(3): mov %rax,%r12
cb83(2): mov %ebx,%edi
cb85(5): call 0xffff5ceb(%rip)
cb8a(3): mov %rbp,%rax
cb8d(4): mov %r13d,(%r12)
cb91(4): add $0x8,%rsp
cb95(1): pop %rbx
cb96(1): pop %rbp
cb97(2): pop %r12
cb99(2): pop %r13
cb9b(1): ret near (%rsp)
cb9c(4): nop 0x0(%rax)
cba0(4): add $0x8,%rsp
cba4(2): xor %ebp,%ebp
cba6(1): pop %rbx
cba7(3): mov %rbp,%rax
cbaa(1): pop %rbp
cbab(2): pop %r12
cbad(2): pop %r13
cbaf(1): ret near (%rsp)

"set_program_name" :
cbb0(3): test %rdi,%rdi
cbb3(1): push %rbx
cbb4(2): jz 0x79(%rip)
cbb6(5): mov $0x2f,%esi
cbbb(3): mov %rdi,%rbx
cbbe(5): call 0xffff5c22(%rip)
cbc3(3): test %rax,%rax
cbc6(2): jz 0x57(%rip)
cbc8(4): lea 0x1(%rax),%r8
cbcc(3): mov %r8,%rdx
cbcf(3): sub %rbx,%rdx
cbd2(4): cmp $0x6,%rdx
cbd6(2): jle 0x47(%rip)
cbd8(4): lea 0xfffffffa(%rax),%rsi
cbdc(7): lea 0x9ea5(%rip),%rdi
cbe3(5): mov $0x7,%ecx
cbe8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
cbea(3): setnbe %dl
cbed(3): sbb $0x0,%dl
cbf0(2): test %dl,%dl
cbf2(2): jnz 0x2b(%rip)
cbf4(7): lea 0x9e95(%rip),%rdi
cbfb(5): mov $0x3,%ecx
cc00(3): mov %r8,%rsi
cc03(3): mov %r8,%rbx
cc06(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
cc08(3): setnbe %dl
cc0b(3): sbb $0x0,%dl
cc0e(2): test %dl,%dl
cc10(2): jnz 0xd(%rip)
cc12(4): lea 0x4(%rax),%rbx
cc16(7): mov %rbx,0x20f4a3(%rip)
cc1d(7): mov %rbx,0x20f95c(%rip)
cc24(7): mov %rbx,0x20f4bd(%rip)
cc2b(1): pop %rbx
cc2c(1): ret near (%rsp)
cc2d(7): mov 0x20f4cc(%rip),%rcx
cc34(7): lea 0x9e15(%rip),%rdi
cc3b(5): mov $0x37,%edx
cc40(5): mov $0x1,%esi
cc45(5): call 0xffff5fcb(%rip)
cc4a(5): call 0xffff5946(%rip)

"qcopy_acl" :
cc50(2): push %r12
cc52(1): push %rbp
cc53(3): mov %ecx,%r12d
cc56(1): push %rbx
cc57(3): mov %rdx,%rbp
cc5a(3): mov %r8d,%edx
cc5d(4): sub $0x10,%rsp
cc61(5): lea 0x4(%rsp),%rbx
cc66(9): mov $0x28,%rax
cc6f(5): mov %rax,0x8(%rsp)
cc74(2): xor %eax,%eax
cc76(3): mov %rbx,%rcx
cc79(5): call 0x6987(%rip)
cc7e(2): test %eax,%eax
cc80(2): jnz 0x38(%rip)
cc82(3): mov %rbp,%rsi
cc85(3): mov %rbx,%rdi
cc88(3): mov %r12d,%edx
cc8b(5): call 0x69a5(%rip)
cc90(3): mov %rbx,%rdi
cc93(2): mov %eax,%ebp
cc95(5): call 0x695b(%rip)
cc9a(5): mov 0x8(%rsp),%rcx
cc9f(9): xor $0x28,%rcx
cca8(2): mov %ebp,%eax
ccaa(2): jnz 0x15(%rip)
ccac(4): add $0x10,%rsp
ccb0(1): pop %rbx
ccb1(1): pop %rbp
ccb2(2): pop %r12
ccb4(1): ret near (%rsp)
ccb5(3): nop (%rax)
ccb8(5): mov $0xfffffffe,%ebp
ccbd(2): jmp 0xffffffdd(%rip)
ccbf(5): call 0xffff5ac1(%rip)

"qset_acl" :
ccd0(1): push %rbp
ccd1(1): push %rbx
ccd2(4): sub $0x18,%rsp
ccd6(5): lea 0x4(%rsp),%rbx
ccdb(4): mov %edx,0x4(%rsp)
ccdf(2): mov %esi,%edx
cce1(3): mov %rdi,%rsi
cce4(3): mov %rbx,%rdi
cce7(9): mov $0x28,%rax
ccf0(5): mov %rax,0x8(%rsp)
ccf5(2): xor %eax,%eax
ccf7(5): call 0x6939(%rip)
ccfc(3): mov %rbx,%rdi
ccff(2): mov %eax,%ebp
cd01(5): call 0x68ef(%rip)
cd06(5): mov 0x8(%rsp),%rcx
cd0b(9): xor $0x28,%rcx
cd14(2): jnz 0xb(%rip)
cd16(4): add $0x18,%rsp
cd1a(2): mov %ebp,%eax
cd1c(1): pop %rbx
cd1d(1): pop %rbp
cd1e(1): ret near (%rsp)
cd1f(5): call 0xffff5a61(%rip)

"gettext_quote.part.1" :
cd30(1): push %rbp
cd31(1): push %rbx
cd32(3): mov %rdi,%rbp
cd35(2): mov %esi,%ebx
cd37(4): sub $0x8,%rsp
cd3b(5): call 0x7025(%rip)
cd40(3): movzx (%rax),%edx
cd43(3): and $0xdf,%edx
cd46(3): cmp $0x55,%dl
cd49(2): jz 0x77(%rip)
cd4b(3): cmp $0x47,%dl
cd4e(2): jz 0x22(%rip)
cd50(7): lea 0x9d4c(%rip),%rax
cd57(7): lea 0x9d47(%rip),%rdx
cd5e(3): cmp $0x9,%ebx
cd61(4): cmovne %rdx,%rax
cd65(4): add $0x8,%rsp
cd69(1): pop %rbx
cd6a(1): pop %rbp
cd6b(1): ret near (%rsp)
cd6c(4): nop 0x0(%rax)
cd70(4): movzx 0x1(%rax),%edx
cd74(3): and $0xdf,%edx
cd77(3): cmp $0x42,%dl
cd7a(2): jnz 0xffffffd6(%rip)
cd7c(4): cmp $0x31,0x2(%rax)
cd80(2): jnz 0xffffffd0(%rip)
cd82(4): cmp $0x38,0x3(%rax)
cd86(2): jnz 0xffffffca(%rip)
cd88(4): cmp $0x30,0x4(%rax)
cd8c(2): jnz 0xffffffc4(%rip)
cd8e(4): cmp $0x33,0x5(%rax)
cd92(2): jnz 0xffffffbe(%rip)
cd94(4): cmp $0x30,0x6(%rax)
cd98(2): jnz 0xffffffb8(%rip)
cd9a(4): cmp $0x0,0x7(%rax)
cd9e(2): jnz 0xffffffb2(%rip)
cda0(4): cmp $0x60,0x0(%rbp)
cda4(7): lea 0x9cf1(%rip),%rax
cdab(7): lea 0x9cee(%rip),%rdx
cdb2(4): cmovne %rdx,%rax
cdb6(4): add $0x8,%rsp
cdba(1): pop %rbx
cdbb(1): pop %rbp
cdbc(1): ret near (%rsp)
cdbd(3): nop (%rax)
cdc0(4): movzx 0x1(%rax),%edx
cdc4(3): and $0xdf,%edx
cdc7(3): cmp $0x54,%dl
cdca(2): jnz 0xffffff86(%rip)
cdcc(4): movzx 0x2(%rax),%edx
cdd0(3): and $0xdf,%edx
cdd3(3): cmp $0x46,%dl
cdd6(6): jnz 0xffffff7a(%rip)
cddc(4): cmp $0x2d,0x3(%rax)
cde0(6): jnz 0xffffff70(%rip)
cde6(4): cmp $0x38,0x4(%rax)
cdea(6): jnz 0xffffff66(%rip)
cdf0(4): cmp $0x0,0x5(%rax)
cdf4(6): jnz 0xffffff5c(%rip)
cdfa(4): cmp $0x60,0x0(%rbp)
cdfe(7): lea 0x9c8f(%rip),%rax
ce05(7): lea 0x9c8c(%rip),%rdx
ce0c(4): cmovne %rdx,%rax
ce10(4): add $0x8,%rsp
ce14(1): pop %rbx
ce15(1): pop %rbp
ce16(1): ret near (%rsp)

"quotearg_buffer_restyled" :
ce20(2): push %r15
ce22(2): push %r14
ce24(3): mov %r8d,%r15d
ce27(2): push %r13
ce29(2): push %r12
ce2b(3): mov %rdi,%r14
ce2e(1): push %rbp
ce2f(1): push %rbx
ce30(3): mov %r9d,%ebx
ce33(3): mov %rsi,%r13
ce36(3): mov %rcx,%rbp
ce39(3): and $0x2,%ebx
ce3c(7): sub $0xb8,%rsp
ce43(8): mov 0xf0(%rsp),%rax
ce4b(5): mov %rdx,0x10(%rsp)
ce50(5): mov %r8d,0x8(%rsp)
ce55(5): mov %r9d,0x78(%rsp)
ce5a(5): mov %rax,0x20(%rsp)
ce5f(8): mov 0xf8(%rsp),%rax
ce67(5): mov %rax,0x68(%rsp)
ce6c(8): mov 0x100(%rsp),%rax
ce74(5): mov %rax,0x60(%rsp)
ce79(9): mov $0x28,%rax
ce82(8): mov %rax,0xa8(%rsp)
ce8a(2): xor %eax,%eax
ce8c(5): call 0xffff58b4(%rip)
ce91(4): cmp $0xa,%r15d
ce95(5): mov %rax,0x58(%rsp)
ce9a(6): jnbe 0x11b5(%rip)
cea0(7): lea 0x9c59(%rip),%rcx
cea7(3): mov %r15d,%edx
ceaa(4): movsxd 0x0(%rcx,%rdx,4),%rax
ceae(3): add %rcx,%rax
ceb1(2): jmp %rax
ceb3(5): mov $0x1,0xe(%rsp)
ceb8(5): mov $0x0,0x7c(%rsp)
cebd(3): xor %r12d,%r12d
cec0(9): mov $0x0,0x50(%rsp)
cec9(5): mov $0x1,0xf(%rsp)
cece(5): mov $0x0,0xd(%rsp)
ced3(7): lea 0x9bcb(%rip),%rax
ceda(9): mov $0x1,0x18(%rsp)
cee3(3): xor %r15d,%r15d
cee6(8): mov $0x2,0x8(%rsp)
ceee(5): mov %rax,0x48(%rsp)
cef3(3): xor %r11d,%r11d
cef6(3): mov %rbp,%rax
cef9(3): mov %r12d,%r8d
cefc(3): mov %r11,%rbp
ceff(3): mov %rax,%r11
cf02(6): nop 0x0(%rax,%rax,1)
cf08(3): cmp %rbp,%r11
cf0b(4): setnz %r12b
cf0f(4): cmp $0xffffffff,%r11
cf13(2): jnz 0xf(%rip)
cf15(5): mov 0x10(%rsp),%rax
cf1a(4): cmp $0x0,0x0(%rax,%rbp,1)
cf1e(4): setnz %r12b
cf22(3): test %r12b,%r12b
cf25(6): jz 0x65b(%rip)
cf2b(5): cmp $0x2,0x8(%rsp)
cf30(5): mov 0x10(%rsp),%rdi
cf35(4): lea 0x0(%rdi,%rbp,1),%r9
cf39(3): setnz %al
cf3c(4): and 0xd(%rsp),%al
cf40(3): mov %eax,%r10d
cf43(6): jz 0xad(%rip)
cf49(5): mov 0x18(%rsp),%rax
cf4e(3): test %rax,%rax
cf51(6): jz 0x42f(%rip)
cf57(4): cmp $0xffffffff,%r11
cf5b(5): lea 0x0(%rbp,%rax,1),%rbx
cf60(2): jnz 0x30(%rip)
cf62(4): cmp $0x1,%rax
cf66(2): jbe 0x2a(%rip)
cf68(5): mov %r8b,0x38(%rsp)
cf6d(5): mov %r10b,0x30(%rsp)
cf72(5): mov %r9,0x28(%rsp)
cf77(5): call 0xffff57d9(%rip)
cf7c(6): movzx 0x38(%rsp),%r8d
cf82(6): movzx 0x30(%rsp),%r10d
cf88(3): mov %rax,%r11
cf8b(5): mov 0x28(%rsp),%r9
cf90(3): cmp %r11,%rbx
cf93(5): mov %r10b,0x28(%rsp)
cf98(6): jnbe 0x5b8(%rip)
cf9e(5): mov 0x18(%rsp),%rdx
cfa3(5): mov 0x48(%rsp),%rsi
cfa8(3): mov %r9,%rdi
cfab(5): mov %r11,0x40(%rsp)
cfb0(5): mov %r8b,0x38(%rsp)
cfb5(5): mov %r9,0x30(%rsp)
cfba(5): call 0xffff5916(%rip)
cfbf(2): test %eax,%eax
cfc1(5): mov 0x30(%rsp),%r9
cfc6(6): movzx 0x38(%rsp),%r8d
cfcc(5): mov 0x40(%rsp),%r11
cfd1(6): jnz 0x57f(%rip)
cfd7(5): cmp $0x0,0xf(%rsp)
cfdc(6): movzx 0x28(%rsp),%r10d
cfe2(6): jnz 0xf83(%rip)
cfe8(8): nop 0x0(%rax,%rax,1)
cff0(4): movzx (%r9),%ebx
cff4(3): cmp $0x7e,%bl
cff7(6): jnbe 0x321(%rip)
cffd(7): lea 0x9b28(%rip),%rcx
d004(3): movzx %bl,%edx
d007(4): movsxd 0x0(%rcx,%rdx,4),%rax
d00b(3): add %rcx,%rax
d00e(2): jmp %rax
d010(3): xor %r10d,%r10d
d013(4): cmp $0x1,%r11
d017(3): setnz %al
d01a(4): cmp $0xffffffff,%r11
d01e(2): jnz 0xe(%rip)
d020(5): mov 0x10(%rsp),%rax
d025(4): cmp $0x0,0x1(%rax)
d029(3): setnz %al
d02c(5): cmp $0x2,0x8(%rsp)
d031(3): setz %dl
d034(2): test %al,%al
d036(6): jz 0x252(%rip)
d03c(3): xor %r12d,%r12d
d03f(2): xor %eax,%eax
d041(7): nop 0x0(%rax)
d048(5): cmp $0x1,0xd(%rsp)
d04d(6): jnz 0x115(%rip)
d053(2): test %dl,%dl
d055(6): jnz 0x10d(%rip)
d05b(5): mov 0x20(%rsp),%rsi
d060(3): test %rsi,%rsi
d063(2): jz 0x16(%rip)
d065(2): mov %ebx,%edx
d067(3): shr $0x5,%dl
d06a(3): movzx %dl,%edx
d06d(3): mov 0x0(%rsi,%rdx,4),%edx
d070(3): bt %ebx,%edx
d073(6): jb 0x150(%rip)
d079(3): test %r10b,%r10b
d07c(6): jnz 0x147(%rip)
d082(3): xor $0x1,%eax
d085(4): add $0x1,%rbp
d089(3): and %r8d,%eax
d08c(2): test %al,%al
d08e(2): jz 0x22(%rip)
d090(3): cmp %r15,%r13
d093(2): jbe 0x7(%rip)
d095(5): mov $0x27,0x0(%r14,%r15,1)
d09a(4): lea 0x1(%r15),%rax
d09e(3): cmp %rax,%r13
d0a1(2): jbe 0x8(%rip)
d0a3(6): mov $0x27,0x1(%r14,%r15,1)
d0a9(4): add $0x2,%r15
d0ad(3): xor %r8d,%r8d
d0b0(3): cmp %r13,%r15
d0b3(2): jnb 0x6(%rip)
d0b5(4): mov %bl,0x0(%r14,%r15,1)
d0b9(5): movzx 0xe(%rsp),%edi
d0be(4): add $0x1,%r15
d0c2(5): mov $0x0,%eax
d0c7(3): test %r12b,%r12b
d0ca(3): cmove %eax,%edi
d0cd(5): mov %dil,0xe(%rsp)
d0d2(5): jmp 0xfffffe36(%rip)
d0d7(9): nop 0x0(%rax,%rax,1)
d0e0(3): xor %r10d,%r10d
d0e3(4): mov 0x8(%rsp),%eax
d0e7(3): cmp $0x2,%eax
d0ea(6): jz 0x5be(%rip)
d0f0(3): cmp $0x5,%eax
d0f3(6): jz 0x575(%rip)
d0f9(3): cmp $0x2,%eax
d0fc(5): mov $0x3f,%ebx
d101(3): setz %dl
d104(3): xor %r12d,%r12d
d107(2): xor %eax,%eax
d109(5): jmp 0xffffff3f(%rip)
d10e(2): nop 
d110(3): xor %r10d,%r10d
d113(5): cmp $0x2,0x8(%rsp)
d118(6): jz 0x508(%rip)
d11e(5): mov %r12b,0x7c(%rsp)
d123(2): xor %edx,%edx
d125(2): xor %eax,%eax
d127(5): mov $0x27,%ebx
d12c(5): jmp 0xffffff1c(%rip)
d131(7): nop 0x0(%rax)
d138(5): mov $0x9,%edx
d13d(5): mov $0x74,%ebx
d142(5): cmp $0x2,0x8(%rsp)
d147(3): setz %al
d14a(4): and 0xf(%rsp),%al
d14e(6): jnz 0x150(%rip)
d154(5): cmp $0x0,0xd(%rsp)
d159(2): jnz 0x67(%rip)
d15b(2): mov %edx,%ebx
d15d(3): xor %r12d,%r12d
d160(2): xor %eax,%eax
d162(5): cmp $0x0,0xf(%rsp)
d167(6): jnz 0xfffffef4(%rip)
d16d(5): jmp 0xffffff0c(%rip)
d172(6): nop 0x0(%rax,%rax,1)
d178(5): mov $0x8,%edx
d17d(5): mov $0x62,%ebx
d182(2): jmp 0xffffffd2(%rip)
d184(4): nop 0x0(%rax)
d188(5): cmp $0x2,0x8(%rsp)
d18d(6): jz 0x3d3(%rip)
d193(5): cmp $0x0,0xd(%rsp)
d198(6): jz 0x218(%rip)
d19e(5): cmp $0x0,0xf(%rsp)
d1a3(6): jz 0x20d(%rip)
d1a9(6): cmp $0x0,0x18(%rsp)
d1af(6): jnz 0x3bc(%rip)
d1b5(5): mov $0x5c,%ebx
d1ba(6): nop 0x0(%rax,%rax,1)
d1c0(3): xor %r12d,%r12d
d1c3(5): cmp $0x2,0x8(%rsp)
d1c8(3): setz %dl
d1cb(5): cmp $0x0,0xf(%rsp)
d1d0(2): mov %edx,%eax
d1d2(6): jnz 0x856(%rip)
d1d8(3): mov %r8d,%eax
d1db(3): xor $0x1,%eax
d1de(2): and %dl,%al
d1e0(2): jz 0x31(%rip)
d1e2(3): cmp %r15,%r13
d1e5(2): jbe 0x7(%rip)
d1e7(5): mov $0x27,0x0(%r14,%r15,1)
d1ec(4): lea 0x1(%r15),%rdx
d1f0(3): cmp %rdx,%r13
d1f3(2): jbe 0x8(%rip)
d1f5(6): mov $0x24,0x1(%r14,%r15,1)
d1fb(4): lea 0x2(%r15),%rdx
d1ff(3): cmp %rdx,%r13
d202(2): jbe 0x8(%rip)
d204(6): mov $0x27,0x2(%r14,%r15,1)
d20a(4): add $0x3,%r15
d20e(3): mov %eax,%r8d
d211(3): cmp %r15,%r13
d214(2): jbe 0x7(%rip)
d216(5): mov $0x5c,0x0(%r14,%r15,1)
d21b(4): add $0x1,%r15
d21f(4): add $0x1,%rbp
d223(5): jmp 0xfffffe8d(%rip)
d228(8): nop 0x0(%rax,%rax,1)
d230(5): cmp $0x0,0xd(%rsp)
d235(6): jnz 0x1ce(%rip)
d23b(2): xor %edx,%edx
d23d(5): test $0x1,0x78(%rsp)
d242(6): jz 0xffffff19(%rip)
d248(4): add $0x1,%rbp
d24c(5): jmp 0xfffffcbc(%rip)
d251(7): nop 0x0(%rax)
d258(5): cmp $0x2,0x8(%rsp)
d25d(3): setz %dl
d260(2): xor %eax,%eax
d262(5): jmp 0xfffffde6(%rip)
d267(9): nop 0x0(%rax,%rax,1)
d270(5): mov $0x7,%edx
d275(5): mov $0x61,%ebx
d27a(5): jmp 0xfffffeda(%rip)
d27f(1): nop 
d280(5): cmp $0x2,0x8(%rsp)
d285(3): setz %dl
d288(3): test %rbp,%rbp
d28b(6): jnz 0xfffffdb1(%rip)
d291(5): movzx 0xf(%rsp),%eax
d296(2): and %dl,%al
d298(6): jz 0xfffffdb0(%rip)
d29e(3): mov %r11,%rbp
d2a1(8): mov $0x2,0x8(%rsp)
d2a9(5): jmp 0x700(%rip)
d2ae(2): nop 
d2b0(5): cmp $0x2,0x8(%rsp)
d2b5(3): setz %dl
d2b8(3): xor %r12d,%r12d
d2bb(2): jmp 0xffffffd6(%rip)
d2bd(3): nop (%rax)
d2c0(5): cmp $0x2,0x8(%rsp)
d2c5(5): mov $0x20,%ebx
d2ca(3): setz %dl
d2cd(2): jmp 0xffffffc4(%rip)
d2cf(1): nop 
d2d0(5): mov $0xd,%edx
d2d5(5): mov $0x72,%ebx
d2da(5): jmp 0xfffffe68(%rip)
d2df(1): nop 
d2e0(5): mov $0xc,%edx
d2e5(5): mov $0x66,%ebx
d2ea(5): jmp 0xfffffe6a(%rip)
d2ef(1): nop 
d2f0(5): mov $0xb,%edx
d2f5(5): mov $0x76,%ebx
d2fa(5): jmp 0xfffffe5a(%rip)
d2ff(1): nop 
d300(5): mov $0xa,%edx
d305(5): mov $0x6e,%ebx
d30a(5): jmp 0xfffffe38(%rip)
d30f(1): nop 
d310(3): xor %r10d,%r10d
d313(5): nop 0x0(%rax,%rax,1)
d318(6): cmp $0x1,0x58(%rsp)
d31e(6): jnz 0x3aa(%rip)
d324(5): mov %r11,0x38(%rsp)
d329(5): mov %r8b,0x30(%rsp)
d32e(5): mov %r10b,0x28(%rsp)
d333(5): call 0xffff593d(%rip)
d338(3): mov (%rax),%rcx
d33b(3): movzx %bl,%edx
d33e(6): movzx 0x28(%rsp),%r10d
d344(6): movzx 0x30(%rsp),%r8d
d34a(5): mov 0x38(%rsp),%r11
d34f(5): mov $0x1,%edi
d354(4): movzx 0x0(%rcx,%rdx,2),%eax
d358(4): and $0x4000,%ax
d35c(4): setnz %r12b
d360(3): setz %al
d363(4): and 0xd(%rsp),%al
d367(2): test %al,%al
d369(6): jnz 0x998(%rip)
d36f(5): cmp $0x2,0x8(%rsp)
d374(3): setz %dl
d377(5): jmp 0xfffffcd1(%rip)
d37c(4): nop 0x0(%rax)
d380(4): movzx (%r9),%ebx
d384(3): cmp $0x7e,%bl
d387(2): jnbe 0xffffff89(%rip)
d389(7): lea 0x9998(%rip),%rcx
d390(3): movzx %bl,%edx
d393(4): movsxd 0x0(%rcx,%rdx,4),%rax
d397(3): add %rcx,%rax
d39a(2): jmp %rax
d39c(4): nop 0x0(%rax)
d3a0(3): xor %r10d,%r10d
d3a3(5): cmp $0x0,0xd(%rsp)
d3a8(6): jnz 0xfffffdf6(%rip)
d3ae(2): nop 
d3b0(5): mov $0x5c,%edx
d3b5(5): mov $0x5c,%ebx
d3ba(5): jmp 0xfffffd9a(%rip)
d3bf(1): nop 
d3c0(5): mov $0xc,%edx
d3c5(3): xor %r10d,%r10d
d3c8(5): mov $0x66,%ebx
d3cd(5): jmp 0xfffffd87(%rip)
d3d2(6): nop 0x0(%rax,%rax,1)
d3d8(5): mov $0xa,%edx
d3dd(3): xor %r10d,%r10d
d3e0(5): mov $0x6e,%ebx
d3e5(5): jmp 0xfffffd5d(%rip)
d3ea(6): nop 0x0(%rax,%rax,1)
d3f0(5): mov $0x61,%ebx
d3f5(5): jmp 0xfffffdcb(%rip)
d3fa(6): nop 0x0(%rax,%rax,1)
d400(3): xor %r10d,%r10d
d403(5): cmp $0x2,0x8(%rsp)
d408(3): setz %dl
d40b(5): cmp $0x0,0xf(%rsp)
d410(6): jnz 0xb9a(%rip)
d416(3): mov %r8d,%eax
d419(3): mov %r15,%rcx
d41c(3): xor $0x1,%eax
d41f(2): and %dl,%al
d421(2): jz 0x2f(%rip)
d423(3): cmp %r15,%r13
d426(2): jbe 0x7(%rip)
d428(5): mov $0x27,0x0(%r14,%r15,1)
d42d(4): lea 0x1(%r15),%rcx
d431(3): cmp %rcx,%r13
d434(2): jbe 0x8(%rip)
d436(6): mov $0x24,0x1(%r14,%r15,1)
d43c(4): lea 0x2(%r15),%rcx
d440(3): cmp %rcx,%r13
d443(6): jnbe 0x636(%rip)
d449(4): lea 0x3(%r15),%rcx
d44d(3): mov %eax,%r8d
d450(3): cmp %rcx,%r13
d453(2): jbe 0x7(%rip)
d455(5): mov $0x5c,0x0(%r14,%rcx,1)
d45a(5): cmp $0x2,0x8(%rsp)
d45f(4): lea 0x1(%rcx),%r15
d463(6): jz 0x606(%rip)
d469(4): lea 0x1(%rbp),%rax
d46d(3): cmp %r11,%rax
d470(2): jnb 0x1b(%rip)
d472(5): mov 0x10(%rsp),%rax
d477(5): movzx 0x1(%rax,%rbp,1),%eax
d47c(4): mov %al,0x28(%rsp)
d480(3): sub $0x30,%eax
d483(2): cmp $0x9,%al
d485(6): jbe 0x834(%rip)
d48b(3): mov %r12d,%eax
d48e(5): mov $0x30,%ebx
d493(3): xor %r12d,%r12d
d496(5): jmp 0xfffffbb2(%rip)
d49b(5): nop 0x0(%rax,%rax,1)
d4a0(5): cmp $0x2,0x8(%rsp)
d4a5(3): mov %r10d,%r12d
d4a8(3): setz %dl
d4ab(3): xor %r10d,%r10d
d4ae(2): xor %eax,%eax
d4b0(5): jmp 0xfffffb98(%rip)
d4b5(3): nop (%rax)
d4b8(5): cmp $0x2,0x8(%rsp)
d4bd(3): setz %dl
d4c0(3): xor %r10d,%r10d
d4c3(5): jmp 0xfffffdc5(%rip)
d4c8(8): nop 0x0(%rax,%rax,1)
d4d0(5): cmp $0x2,0x8(%rsp)
d4d5(3): setz %dl
d4d8(3): xor %r10d,%r10d
d4db(3): xor %r12d,%r12d
d4de(5): jmp 0xfffffdb3(%rip)
d4e3(5): nop 0x0(%rax,%rax,1)
d4e8(5): cmp $0x2,0x8(%rsp)
d4ed(3): mov %r10d,%r12d
d4f0(5): mov $0x20,%ebx
d4f5(3): setz %dl
d4f8(3): xor %r10d,%r10d
d4fb(5): jmp 0xfffffd96(%rip)
d500(5): mov $0xd,%edx
d505(3): xor %r10d,%r10d
d508(5): mov $0x72,%ebx
d50d(5): jmp 0xfffffc35(%rip)
d512(6): nop 0x0(%rax,%rax,1)
d518(5): mov $0x76,%ebx
d51d(5): jmp 0xfffffca3(%rip)
d522(6): nop 0x0(%rax,%rax,1)
d528(5): mov $0x9,%edx
d52d(3): xor %r10d,%r10d
d530(5): mov $0x74,%ebx
d535(5): jmp 0xfffffc0d(%rip)
d53a(6): nop 0x0(%rax,%rax,1)
d540(5): mov $0x62,%ebx
d545(5): jmp 0xfffffc7b(%rip)
d54a(6): nop 0x0(%rax,%rax,1)
d550(3): xor %r10d,%r10d
d553(5): jmp 0xfffffa9d(%rip)
d558(8): nop 0x0(%rax,%rax,1)
d560(5): cmp $0x0,0xf(%rsp)
d565(6): jnz 0x96b(%rip)
d56b(4): add $0x1,%rbp
d56f(3): mov %r8d,%eax
d572(3): xor %r12d,%r12d
d575(5): mov $0x5c,%ebx
d57a(5): jmp 0xfffffb12(%rip)
d57f(1): nop 
d580(5): cmp $0x2,0x8(%rsp)
d585(5): movzx 0xf(%rsp),%ebx
d58a(3): mov %r8d,%r12d
d58d(3): mov %r11,%rbp
d590(3): setz %dl
d593(2): mov %ebx,%eax
d595(3): test %r15,%r15
d598(3): setz %cl
d59b(2): and %edx,%eax
d59d(2): and %cl,%al
d59f(6): jnz 0xa67(%rip)
d5a5(2): mov %ebx,%eax
d5a7(3): xor $0x1,%eax
d5aa(2): and %al,%dl
d5ac(6): jz 0x970(%rip)
d5b2(5): cmp $0x0,0x7c(%rsp)
d5b7(6): jz 0x963(%rip)
d5bd(5): cmp $0x0,0xe(%rsp)
d5c2(6): jnz 0x9fb(%rip)
d5c8(3): test %r13,%r13
d5cb(3): setz %al
d5ce(6): cmp $0x0,0x50(%rsp)
d5d4(3): setnz %dl
d5d7(2): and %dl,%al
d5d9(6): jz 0xa23(%rip)
d5df(5): mov 0x50(%rsp),%r13
d5e4(7): lea 0x94ba(%rip),%rbx
d5eb(4): mov $0x27,(%r14)
d5ef(8): mov $0x2,0x8(%rsp)
d5f7(6): mov $0x1,%r15d
d5fd(9): mov $0x1,0x18(%rsp)
d606(5): mov $0x0,0xf(%rsp)
d60b(5): mov %rbx,0x48(%rsp)
d610(4): mov %al,0x7c(%rsp)
d614(5): jmp 0xfffff8df(%rip)
d619(7): nop 0x0(%rax)
d620(5): cmp $0x0,0xf(%rsp)
d625(6): jnz 0x8ab(%rip)
d62b(3): test %r13,%r13
d62e(6): jz 0x402(%rip)
d634(2): xor %edx,%edx
d636(6): cmp $0x0,0x50(%rsp)
d63c(6): jnz 0x3f4(%rip)
d642(5): mov %r13,0x50(%rsp)
d647(4): add $0x3,%r15
d64b(2): xor %eax,%eax
d64d(5): mov %r12b,0x7c(%rsp)
d652(3): xor %r8d,%r8d
d655(3): mov %rdx,%r13
d658(5): mov $0x27,%ebx
d65d(5): jmp 0xfffffa1c(%rip)
d662(6): nop 0x0(%rax,%rax,1)
d668(5): test $0x4,0x78(%rsp)
d66d(2): jz 0x23(%rip)
d66f(4): lea 0x2(%rbp),%rcx
d673(3): cmp %r11,%rcx
d676(2): jnb 0x1a(%rip)
d678(5): mov 0x10(%rsp),%rax
d67d(5): cmp $0x3f,0x1(%rax,%rbp,1)
d682(6): jz 0x790(%rip)
d688(8): nop 0x0(%rax,%rax,1)
d690(2): xor %edx,%edx
d692(3): xor %r12d,%r12d
d695(2): xor %eax,%eax
d697(5): mov $0x3f,%ebx
d69c(5): jmp 0xfffff9ac(%rip)
d6a1(7): nop 0x0(%rax)
d6a8(5): cmp $0x0,0xf(%rsp)
d6ad(6): jnz 0x823(%rip)
d6b3(3): xor %r12d,%r12d
d6b6(2): xor %eax,%eax
d6b8(5): mov $0x3f,%ebx
d6bd(5): jmp 0xfffff9bc(%rip)
d6c2(6): nop 0x0(%rax,%rax,1)
d6c8(8): lea 0xa0(%rsp),%rax
d6d0(4): cmp $0xffffffff,%r11
d6d4(c): mov $0x0,0xa0(%rsp)
d6e0(5): mov %rax,0x28(%rsp)
d6e5(2): jnz 0x2f(%rip)
d6e7(5): mov 0x10(%rsp),%rdi
d6ec(5): mov %r8b,0x40(%rsp)
d6f1(5): mov %r10b,0x38(%rsp)
d6f6(5): mov %r9,0x30(%rsp)
d6fb(5): call 0xffff5055(%rip)
d700(6): movzx 0x40(%rsp),%r8d
d706(6): movzx 0x38(%rsp),%r10d
d70c(3): mov %rax,%r11
d70f(5): mov 0x30(%rsp),%r9
d714(8): lea 0x9c(%rsp),%rax
d71c(2): xor %ecx,%ecx
d71e(4): mov %bl,0x7e(%rsp)
d722(5): mov %r8b,0x7d(%rsp)
d727(3): mov %rcx,%rbx
d72a(8): mov %r9,0x88(%rsp)
d732(5): mov %rax,0x38(%rsp)
d737(5): mov %r10b,0x7f(%rsp)
d73c(8): mov %r15,0x80(%rsp)
d744(5): mov %r14,0x40(%rsp)
d749(5): mov %r13,0x70(%rsp)
d74e(5): mov %r11,0x30(%rsp)
d753(5): mov 0x10(%rsp),%rax
d758(5): lea 0x0(%rbp,%rbx,1),%r14
d75d(5): mov 0x30(%rsp),%rdx
d762(5): mov 0x28(%rsp),%rcx
d767(5): mov 0x38(%rsp),%rdi
d76c(4): lea 0x0(%rax,%r14,1),%r13
d770(3): sub %r14,%rdx
d773(3): mov %r13,%rsi
d776(5): call 0x5dea(%rip)
d77b(3): test %rax,%rax
d77e(3): mov %rax,%r15
d781(2): jz 0x50(%rip)
d783(4): cmp $0xffffffff,%rax
d787(6): jz 0x61e(%rip)
d78d(4): cmp $0xfffffffe,%rax
d791(6): jz 0x5a0(%rip)
d797(5): cmp $0x2,0x8(%rsp)
d79c(3): setz %al
d79f(4): and 0xf(%rsp),%al
d7a3(6): jnz 0x19d(%rip)
d7a9(7): mov 0x9c(%rsp),%edi
d7b0(5): call 0xffff54a0(%rip)
d7b5(5): mov 0x28(%rsp),%rdi
d7ba(2): test %eax,%eax
d7bc(5): mov $0x0,%eax
d7c1(4): cmove %eax,%r12d
d7c5(3): add %r15,%rbx
d7c8(5): call 0xffff5468(%rip)
d7cd(2): test %eax,%eax
d7cf(2): jz 0xffffff84(%rip)
d7d1(3): mov %r12d,%edx
d7d4(3): mov %rbx,%rdi
d7d7(6): movzx 0x7d(%rsp),%r8d
d7dd(3): xor $0x1,%edx
d7e0(5): movzx 0x7e(%rsp),%ebx
d7e5(6): movzx 0x7f(%rsp),%r10d
d7eb(4): and 0xd(%rsp),%dl
d7ef(8): mov 0x80(%rsp),%r15
d7f7(5): mov 0x40(%rsp),%r14
d7fc(5): mov 0x70(%rsp),%r13
d801(5): mov 0x30(%rsp),%r11
d806(4): cmp $0x1,%rdi
d80a(6): jbe 0x601(%rip)
d810(3): mov %rdi,%rcx
d813(2): xor %esi,%esi
d815(6): movzx 0xf(%rsp),%r9d
d81b(3): add %rbp,%rcx
d81e(5): mov 0x10(%rsp),%rdi
d823(5): jmp 0xbb(%rip)
d828(8): nop 0x0(%rax,%rax,1)
d830(5): cmp $0x2,0x8(%rsp)
d835(3): setz %al
d838(3): test %r9b,%r9b
d83b(6): jnz 0x4b5(%rip)
d841(3): mov %r8d,%esi
d844(3): xor $0x1,%esi
d847(3): and %sil,%al
d84a(2): jz 0x31(%rip)
d84c(3): cmp %r15,%r13
d84f(2): jbe 0x7(%rip)
d851(5): mov $0x27,0x0(%r14,%r15,1)
d856(4): lea 0x1(%r15),%rsi
d85a(3): cmp %rsi,%r13
d85d(2): jbe 0x8(%rip)
d85f(6): mov $0x24,0x1(%r14,%r15,1)
d865(4): lea 0x2(%r15),%rsi
d869(3): cmp %rsi,%r13
d86c(2): jbe 0x8(%rip)
d86e(6): mov $0x27,0x2(%r14,%r15,1)
d874(4): add $0x3,%r15
d878(3): mov %eax,%r8d
d87b(3): cmp %r15,%r13
d87e(2): jbe 0x7(%rip)
d880(5): mov $0x5c,0x0(%r14,%r15,1)
d885(4): lea 0x1(%r15),%rax
d889(3): cmp %rax,%r13
d88c(2): jbe 0xf(%rip)
d88e(2): mov %ebx,%eax
d890(3): shr $0x6,%al
d893(3): add $0x30,%eax
d896(5): mov %al,0x1(%r14,%r15,1)
d89b(4): lea 0x2(%r15),%rax
d89f(3): cmp %rax,%r13
d8a2(2): jbe 0x12(%rip)
d8a4(2): mov %ebx,%eax
d8a6(3): shr $0x3,%al
d8a9(3): and $0x7,%eax
d8ac(3): add $0x30,%eax
d8af(5): mov %al,0x2(%r14,%r15,1)
d8b4(3): and $0x7,%ebx
d8b7(4): add $0x1,%rbp
d8bb(4): add $0x3,%r15
d8bf(3): add $0x30,%ebx
d8c2(3): cmp %rcx,%rbp
d8c5(6): jnb 0xfffff7eb(%rip)
d8cb(2): mov %edx,%esi
d8cd(3): cmp %r15,%r13
d8d0(2): jbe 0x6(%rip)
d8d2(4): mov %bl,0x0(%r14,%r15,1)
d8d6(4): movzx 0x0(%rdi,%rbp,1),%ebx
d8da(4): add $0x1,%r15
d8de(2): test %dl,%dl
d8e0(6): jnz 0xffffff50(%rip)
d8e6(2): mov %esi,%eax
d8e8(3): xor $0x1,%eax
d8eb(3): and %r8d,%eax
d8ee(3): test %r10b,%r10b
d8f1(2): jz 0x10(%rip)
d8f3(3): cmp %r15,%r13
d8f6(2): jbe 0x7(%rip)
d8f8(5): mov $0x5c,0x0(%r14,%r15,1)
d8fd(4): add $0x1,%r15
d901(4): add $0x1,%rbp
d905(3): cmp %rcx,%rbp
d908(6): jnb 0xfffff784(%rip)
d90e(2): test %al,%al
d910(6): jz 0x3fe(%rip)
d916(3): cmp %r15,%r13
d919(2): jbe 0x7(%rip)
d91b(5): mov $0x27,0x0(%r14,%r15,1)
d920(4): lea 0x1(%r15),%rax
d924(3): cmp %rax,%r13
d927(2): jbe 0x8(%rip)
d929(6): mov $0x27,0x1(%r14,%r15,1)
d92f(4): add $0x2,%r15
d933(3): xor %r10d,%r10d
d936(3): xor %r8d,%r8d
d939(2): jmp 0xffffff94(%rip)
d93b(5): nop 0x0(%rax,%rax,1)
d940(4): cmp $0x1,%r15
d944(6): jz 0xfffffe65(%rip)
d94a(5): mov 0x10(%rsp),%rdi
d94f(4): lea 0x0(%rdi,%r15,1),%rcx
d953(5): lea 0x1(%rdi,%r14,1),%rdx
d958(4): lea 0x0(%rcx,%r14,1),%r8
d95c(2): jmp 0x11(%rip)
d95e(2): nop 
d960(4): add $0x1,%rdx
d964(3): cmp %rdx,%r8
d967(6): jz 0xfffffe42(%rip)
d96d(3): movzx (%rdx),%ecx
d970(3): sub $0x5b,%ecx
d973(3): cmp $0x21,%cl
d976(2): jnbe 0xffffffea(%rip)
d978(5): mov $0x1,%esi
d97d(3): shl/sal %cl,%rsi
d980(3): mov %rsi,%rcx
d983(a): mov $0x8589934635,%rsi
d98d(3): test %rsi,%rcx
d990(2): jz 0xffffffd0(%rip)
d992(5): mov 0x40(%rsp),%r14
d997(5): mov 0x70(%rsp),%r13
d99c(5): mov 0x30(%rsp),%rbp
d9a1(8): mov $0x2,0x8(%rsp)
d9a9(5): cmp $0x0,0xd(%rsp)
d9ae(2): jz 0x12(%rip)
d9b0(2): test %al,%al
d9b2(5): mov $0x4,%eax
d9b7(5): cmove 0x8(%rsp),%eax
d9bc(4): mov %eax,0x8(%rsp)
d9c0(4): sub $0x8,%rsp
d9c4(3): mov %rbp,%rcx
d9c7(3): mov %r13,%rsi
d9ca(4): push 0x68(%rsp)
d9ce(4): push 0x78(%rsp)
d9d2(3): mov %r14,%rdi
d9d5(2): push $0x0
d9d7(8): mov 0x98(%rsp),%r9d
d9df(5): mov 0x28(%rsp),%r8d
d9e4(5): mov 0x30(%rsp),%rdx
d9e9(4): and $0xfd,%r9d
d9ed(5): call 0xfffff433(%rip)
d9f2(4): add $0x20,%rsp
d9f6(3): mov %rax,%r15
d9f9(8): mov 0xa8(%rsp),%rbx
da01(9): xor $0x28,%rbx
da0a(3): mov %r15,%rax
da0d(6): jnz 0x606(%rip)
da13(7): add $0xb8,%rsp
da1a(1): pop %rbx
da1b(1): pop %rbp
da1c(2): pop %r12
da1e(2): pop %r13
da20(2): pop %r14
da22(2): pop %r15
da24(1): ret near (%rsp)
da25(3): nop (%rax)
da28(3): mov %r11,%rbp
da2b(5): jmp 0xffffff7e(%rip)
da30(3): cmp %r15,%r13
da33(2): jbe 0x7(%rip)
da35(5): mov $0x27,0x0(%r14,%r15,1)
da3a(4): lea 0x1(%r15),%rax
da3e(3): cmp %rax,%r13
da41(2): jbe 0x8(%rip)
da43(6): mov $0x5c,0x1(%r14,%r15,1)
da49(4): lea 0x2(%r15),%rax
da4d(3): cmp %rax,%r13
da50(6): jbe 0x5f2(%rip)
da56(3): mov %r13,%rdx
da59(6): mov $0x27,0x2(%r14,%r15,1)
da5f(5): mov 0x50(%rsp),%r13
da64(5): jmp 0xfffffbde(%rip)
da69(3): mov %r12d,%eax
da6c(5): mov $0x30,%ebx
da71(3): xor %r12d,%r12d
da74(5): jmp 0xfffff605(%rip)
da79(6): mov $0x27,0x2(%r14,%r15,1)
da7f(5): jmp 0xfffff9ca(%rip)
da84(2): test %ebx,%ebx
da86(6): jnz 0xfffff42d(%rip)
da8c(5): mov $0x1,0xd(%rsp)
da91(3): test %r13,%r13
da94(6): jnz 0x596(%rip)
da9a(7): lea 0x9004(%rip),%rax
daa1(9): mov $0x0,0x50(%rsp)
daaa(5): mov $0x1,0xe(%rsp)
daaf(5): mov $0x0,0x7c(%rsp)
dab4(3): xor %r12d,%r12d
dab7(5): mov $0x0,0xf(%rsp)
dabc(9): mov $0x1,0x18(%rsp)
dac5(5): mov %rax,0x48(%rsp)
daca(6): mov $0x1,%r15d
dad0(8): mov $0x2,0x8(%rsp)
dad8(5): jmp 0xfffff41b(%rip)
dadd(3): nop (%rax)
dae0(2): test %ebx,%ebx
dae2(6): jnz 0x3fb(%rip)
dae8(3): test %r13,%r13
daeb(6): jz 0x22b(%rip)
daf1(4): mov $0x22,(%r14)
daf5(5): mov $0x1,0xe(%rsp)
dafa(3): xor %r12d,%r12d
dafd(5): mov $0x0,0x7c(%rsp)
db02(9): mov $0x0,0x50(%rsp)
db0b(7): lea 0x8f91(%rip),%rax
db12(5): mov $0x0,0xf(%rsp)
db17(5): mov $0x1,0xd(%rsp)
db1c(9): mov $0x1,0x18(%rsp)
db25(6): mov $0x1,%r15d
db2b(5): mov %rax,0x48(%rsp)
db30(5): jmp 0xfffff3c3(%rip)
db35(7): lea 0x8f67(%rip),%rax
db3c(5): mov $0x1,0xe(%rsp)
db41(5): mov $0x0,0x7c(%rsp)
db46(3): xor %r12d,%r12d
db49(9): mov $0x0,0x50(%rsp)
db52(5): mov $0x1,0xf(%rsp)
db57(5): mov $0x1,0xd(%rsp)
db5c(9): mov $0x1,0x18(%rsp)
db65(3): xor %r15d,%r15d
db68(5): mov %rax,0x48(%rsp)
db6d(8): mov $0x5,0x8(%rsp)
db75(5): jmp 0xfffff37e(%rip)
db7a(5): mov $0x1,0xe(%rsp)
db7f(5): mov $0x0,0x7c(%rsp)
db84(3): xor %r12d,%r12d
db87(9): mov $0x0,0x50(%rsp)
db90(5): mov $0x0,0xf(%rsp)
db95(3): xor %r15d,%r15d
db98(5): mov $0x1,0xd(%rsp)
db9d(9): mov $0x0,0x18(%rsp)
dba6(9): mov $0x0,0x48(%rsp)
dbaf(5): jmp 0xfffff344(%rip)
dbb4(5): cmp $0xa,0x8(%rsp)
dbb9(2): jz 0x58(%rip)
dbbb(7): lea 0x8ee5(%rip),%rsi
dbc2(2): xor %edi,%edi
dbc4(5): mov $0x5,%edx
dbc9(5): call 0xffff4b67(%rip)
dbce(3): mov %rax,%rcx
dbd1(5): mov %rax,0x68(%rsp)
dbd6(7): lea 0x8eca(%rip),%rax
dbdd(3): cmp %rax,%rcx
dbe0(6): jz 0x39e(%rip)
dbe6(7): lea 0x8eb8(%rip),%rsi
dbed(2): xor %edi,%edi
dbef(5): mov $0x5,%edx
dbf4(5): call 0xffff4b3c(%rip)
dbf9(3): mov %rax,%rcx
dbfc(5): mov %rax,0x60(%rsp)
dc01(7): lea 0x8e9d(%rip),%rax
dc08(3): cmp %rax,%rcx
dc0b(6): jz 0x389(%rip)
dc11(3): xor %r15d,%r15d
dc14(2): test %ebx,%ebx
dc16(6): jz 0x1c7(%rip)
dc1c(2): test %ebx,%ebx
dc1e(5): mov 0x60(%rsp),%rbx
dc23(5): setnz 0xf(%rsp)
dc28(3): xor %r12d,%r12d
dc2b(3): mov %rbx,%rdi
dc2e(5): call 0xffff4b22(%rip)
dc33(5): mov %rbx,0x48(%rsp)
dc38(5): mov %rax,0x18(%rsp)
dc3d(5): mov $0x1,0xe(%rsp)
dc42(5): mov $0x0,0x7c(%rsp)
dc47(9): mov $0x0,0x50(%rsp)
dc50(5): mov $0x1,0xd(%rsp)
dc55(5): jmp 0xfffff29e(%rip)
dc5a(5): mov $0x1,0xe(%rsp)
dc5f(5): mov $0x0,0x7c(%rsp)
dc64(3): xor %r12d,%r12d
dc67(9): mov $0x0,0x50(%rsp)
dc70(5): mov $0x0,0xf(%rsp)
dc75(3): xor %r15d,%r15d
dc78(5): mov $0x0,0xd(%rsp)
dc7d(9): mov $0x0,0x18(%rsp)
dc86(9): mov $0x0,0x48(%rsp)
dc8f(5): jmp 0xfffff264(%rip)
dc94(5): mov $0x1,0xe(%rsp)
dc99(5): mov $0x0,0x7c(%rsp)
dc9e(3): xor %r12d,%r12d
dca1(9): mov $0x0,0x50(%rsp)
dcaa(5): mov $0x1,0xf(%rsp)
dcaf(5): mov $0x1,0xd(%rsp)
dcb4(5): jmp 0xfffff21f(%rip)
dcb9(3): cmp %r15,%r13
dcbc(2): jbe 0x7(%rip)
dcbe(5): mov $0x30,0x0(%r14,%r15,1)
dcc3(4): lea 0x2(%rcx),%rax
dcc7(3): cmp %rax,%r13
dcca(2): jbe 0x8(%rip)
dccc(6): mov $0x30,0x2(%r14,%rcx,1)
dcd2(3): mov %r12d,%eax
dcd5(4): lea 0x3(%rcx),%r15
dcd9(3): xor %r12d,%r12d
dcdc(5): mov $0x30,%ebx
dce1(5): jmp 0xfffff367(%rip)
dce6(a): nop 0x0(%rax,%rax,1)
dcf0(5): movzx 0xf(%rsp),%ebx
dcf5(3): mov %r11,%rbp
dcf8(4): mov %bl,0xd(%rsp)
dcfc(5): jmp 0xfffffcad(%rip)
dd01(5): movzx 0xd(%rsp),%edx
dd06(3): xor %r12d,%r12d
dd09(5): jmp 0xfffffb07(%rip)
dd0e(3): xor %r10d,%r10d
dd11(5): jmp 0xfffffbbc(%rip)
dd16(9): mov $0x0,0x50(%rsp)
dd1f(5): mov $0x1,0xe(%rsp)
dd24(3): xor %r12d,%r12d
dd27(5): mov $0x0,0x7c(%rsp)
dd2c(5): jmp 0xfffffddf(%rip)
dd31(5): mov 0x30(%rsp),%r11
dd36(3): mov %r14,%rsi
dd39(3): mov %r13,%rcx
dd3c(3): mov %rbx,%rax
dd3f(3): mov %rbx,%rdi
dd42(6): movzx 0x7d(%rsp),%r8d
dd48(5): movzx 0x7e(%rsp),%ebx
dd4d(8): mov 0x88(%rsp),%r9
dd55(3): cmp %r11,%rsi
dd58(6): movzx 0x7f(%rsp),%r10d
dd5e(8): mov 0x80(%rsp),%r15
dd66(5): mov 0x40(%rsp),%r14
dd6b(5): mov 0x70(%rsp),%r13
dd70(2): jnb 0x28(%rip)
dd72(3): cmp $0x0,(%rcx)
dd75(2): jnz 0x12(%rip)
dd77(2): jmp 0x21(%rip)
dd79(7): nop 0x0(%rax)
dd80(5): cmp $0x0,0x0(%r9,%rax,1)
dd85(2): jz 0x10(%rip)
dd87(4): add $0x1,%rax
dd8b(5): lea 0x0(%rbp,%rax,1),%rdx
dd90(3): cmp %rdx,%r11
dd93(2): jnbe 0xffffffed(%rip)
dd95(3): mov %rax,%rdi
dd98(5): movzx 0xd(%rsp),%edx
dd9d(3): xor %r12d,%r12d
dda0(5): jmp 0xfffffa66(%rip)
dda5(3): mov %rbx,%rdi
dda8(6): movzx 0x7d(%rsp),%r8d
ddae(5): movzx 0x7e(%rsp),%ebx
ddb3(6): movzx 0x7f(%rsp),%r10d
ddb9(8): mov 0x80(%rsp),%r15
ddc1(3): xor %r12d,%r12d
ddc4(5): mov 0x40(%rsp),%r14
ddc9(5): mov 0x70(%rsp),%r13
ddce(5): mov 0x30(%rsp),%r11
ddd3(5): movzx 0xd(%rsp),%edx
ddd8(5): jmp 0xfffffa2e(%rip)
dddd(5): mov 0x68(%rsp),%rdx
dde2(3): movzx (%rdx),%eax
dde5(2): test %al,%al
dde7(6): jz 0xfffffe35(%rip)
dded(3): nop (%rax)
ddf0(3): cmp %r15,%r13
ddf3(2): jbe 0x6(%rip)
ddf5(4): mov %al,0x0(%r14,%r15,1)
ddf9(4): add $0x1,%r15
ddfd(5): movzx 0x0(%rdx,%r15,1),%eax
de02(2): test %al,%al
de04(2): jnz 0xffffffec(%rip)
de06(5): jmp 0xfffffe16(%rip)
de0b(2): mov %edx,%eax
de0d(5): jmp 0xfffff55a(%rip)
de12(4): movzx 0x0(%rax,%rcx,1),%ebx
de16(3): cmp $0x3e,%bl
de19(6): jnbe 0xfffff877(%rip)
de1f(a): mov $0x8070630310989004800,%rax
de29(4): bt %rbx,%rax
de2d(6): jnb 0xfffff863(%rip)
de33(5): cmp $0x0,0xf(%rsp)
de38(6): jnz 0x1ea(%rip)
de3e(3): cmp %r15,%r13
de41(2): jbe 0x7(%rip)
de43(5): mov $0x3f,0x0(%r14,%r15,1)
de48(4): lea 0x1(%r15),%rax
de4c(3): cmp %rax,%r13
de4f(2): jbe 0x8(%rip)
de51(6): mov $0x22,0x1(%r14,%r15,1)
de57(4): lea 0x2(%r15),%rax
de5b(3): cmp %rax,%r13
de5e(2): jbe 0x8(%rip)
de60(6): mov $0x22,0x2(%r14,%r15,1)
de66(4): lea 0x3(%r15),%rax
de6a(3): cmp %rax,%r13
de6d(2): jbe 0x8(%rip)
de6f(6): mov $0x3f,0x3(%r14,%r15,1)
de75(4): add $0x4,%r15
de79(2): xor %edx,%edx
de7b(3): xor %r12d,%r12d
de7e(2): xor %eax,%eax
de80(3): mov %rcx,%rbp
de83(5): jmp 0xfffff1c5(%rip)
de88(2): test %ebx,%ebx
de8a(6): jz 0x18e(%rip)
de90(7): lea 0x8c0e(%rip),%rax
de97(5): mov $0x1,0xe(%rsp)
de9c(5): mov $0x0,0x7c(%rsp)
dea1(3): xor %r12d,%r12d
dea4(9): mov $0x0,0x50(%rsp)
dead(5): mov $0x1,0xf(%rsp)
deb2(5): mov $0x0,0xd(%rsp)
deb7(9): mov $0x1,0x18(%rsp)
dec0(3): xor %r15d,%r15d
dec3(5): mov %rax,0x48(%rsp)
dec8(5): jmp 0xfffff02b(%rip)
decd(3): nop (%rax)
ded0(3): mov %r11,%rbp
ded3(5): movzx 0xf(%rsp),%eax
ded8(5): jmp 0xfffffad1(%rip)
dedd(7): lea 0x8bbf(%rip),%rax
dee4(5): mov $0x1,0xe(%rsp)
dee9(5): mov $0x0,0x7c(%rsp)
deee(3): xor %r12d,%r12d
def1(9): mov $0x0,0x50(%rsp)
defa(5): mov $0x1,0xf(%rsp)
deff(5): mov $0x1,0xd(%rsp)
df04(9): mov $0x1,0x18(%rsp)
df0d(3): xor %r15d,%r15d
df10(5): mov %rax,0x48(%rsp)
df15(5): jmp 0xffffefde(%rip)
df1a(2): mov %edx,%eax
df1c(5): mov 0x48(%rsp),%rbx
df21(3): test %rbx,%rbx
df24(2): jz 0x2e(%rip)
df26(2): test %al,%al
df28(2): jz 0x2a(%rip)
df2a(3): movzx (%rbx),%ecx
df2d(3): mov %rbx,%rax
df30(2): test %cl,%cl
df32(2): jz 0x20(%rip)
df34(3): mov %r15,%rdx
df37(3): sub %r15,%rax
df3a(3): cmp %rdx,%r13
df3d(2): jbe 0x6(%rip)
df3f(4): mov %cl,0x0(%r14,%rdx,1)
df43(4): add $0x1,%rdx
df47(4): movzx 0x0(%rax,%rdx,1),%ecx
df4b(2): test %cl,%cl
df4d(2): jnz 0xffffffed(%rip)
df4f(3): mov %rdx,%r15
df52(3): cmp %r15,%r13
df55(6): jbe 0xfffffaa4(%rip)
df5b(5): mov $0x0,0x0(%r14,%r15,1)
df60(5): jmp 0xfffffa99(%rip)
df65(5): cmp $0x2,0x8(%rsp)
df6a(5): movzx 0xf(%rsp),%ebx
df6f(3): mov %r11,%rbp
df72(3): setz %al
df75(4): mov %bl,0xd(%rsp)
df79(5): jmp 0xfffffa30(%rip)
df7e(4): mov 0x8(%rsp),%esi
df82(3): mov %rcx,%rdi
df85(5): call 0xffffedab(%rip)
df8a(5): mov %rax,0x68(%rsp)
df8f(5): jmp 0xfffffc57(%rip)
df94(4): mov 0x8(%rsp),%esi
df98(3): mov %rcx,%rdi
df9b(5): call 0xffffed95(%rip)
dfa0(5): mov %rax,0x60(%rsp)
dfa5(5): jmp 0xfffffc6c(%rip)
dfaa(5): movzx 0xf(%rsp),%ebx
dfaf(3): mov %r11,%rbp
dfb2(2): mov %edx,%eax
dfb4(4): mov %bl,0xd(%rsp)
dfb8(5): jmp 0xfffff9f1(%rip)
dfbd(4): sub $0x8,%rsp
dfc1(6): mov $0x5,%r8d
dfc7(3): mov %r11,%rcx
dfca(4): push 0x68(%rsp)
dfce(4): push 0x78(%rsp)
dfd2(3): mov %r14,%rdi
dfd5(4): push 0x38(%rsp)
dfd9(8): mov 0x98(%rsp),%r9d
dfe1(5): mov 0x30(%rsp),%rdx
dfe6(5): mov 0x70(%rsp),%rsi
dfeb(5): call 0xffffee35(%rip)
dff0(4): add $0x20,%rsp
dff4(3): mov %rax,%r15
dff7(5): jmp 0xfffffa02(%rip)
dffc(5): movzx 0x7c(%rsp),%eax
e001(5): jmp 0xffffff1b(%rip)
e006(8): mov $0x2,0x8(%rsp)
e00e(5): jmp 0xfffff99b(%rip)
e013(5): call 0xffff476d(%rip)
e018(5): mov $0x0,0xd(%rsp)
e01d(5): jmp 0xfffffa74(%rip)
e022(3): mov %r11,%rbp
e025(5): jmp 0xfffff99b(%rip)
e02a(5): mov $0x1,0xe(%rsp)
e02f(2): xor %eax,%eax
e031(3): xor %r12d,%r12d
e034(9): mov $0x0,0x50(%rsp)
e03d(5): jmp 0xfffff5a7(%rip)
e042(3): mov %r13,%rdx
e045(5): mov 0x50(%rsp),%r13
e04a(5): jmp 0xfffff5f8(%rip)
e04f(5): call 0xffff4541(%rip)

"quotearg_n_options" :
e060(2): push %r15
e062(2): push %r14
e064(3): movsxd %edi,%r15
e067(2): push %r13
e069(2): push %r12
e06b(3): mov %rdx,%r14
e06e(1): push %rbp
e06f(1): push %rbx
e070(3): mov %rcx,%rbp
e073(4): sub $0x28,%rsp
e077(5): mov %rsi,0x8(%rsp)
e07c(5): call 0xffff4524(%rip)
e081(3): mov %rax,%r13
e084(2): mov (%rax),%eax
e086(3): test %r15d,%r15d
e089(7): mov 0x20dff0(%rip),%rbx
e090(4): mov %eax,0x18(%rsp)
e094(6): js 0x16d(%rip)
e09a(7): cmp %r15d,0x20dfd7(%rip)
e0a1(2): jnle 0x64(%rip)
e0a3(7): cmp $0x7fffffff,%r15d
e0aa(6): jz 0x15c(%rip)
e0b0(4): lea 0x1(%r15),%r12d
e0b4(7): lea 0x20dfd5(%rip),%rax
e0bb(3): movsxd %r12d,%rsi
e0be(4): shl/sal $0x4,%rsi
e0c2(3): cmp %rax,%rbx
e0c5(6): jz 0x11b(%rip)
e0cb(3): mov %rbx,%rdi
e0ce(5): call 0x2c52(%rip)
e0d3(3): mov %rax,%rbx
e0d6(7): mov %rax,0x20dfa3(%rip)
e0dd(7): movsxd 0x20df94(%rip),%rdi
e0e4(3): mov %r12d,%edx
e0e7(2): xor %esi,%esi
e0e9(2): sub %edi,%edx
e0eb(4): shl/sal $0x4,%rdi
e0ef(3): movsxd %edx,%rdx
e0f2(3): add %rbx,%rdi
e0f5(4): shl/sal $0x4,%rdx
e0f9(5): call 0xffff4737(%rip)
e0fe(7): mov %r12d,0x20df73(%rip)
e105(3): mov 0x4(%rbp),%eax
e108(4): shl/sal $0x4,%r15
e10c(4): sub $0x8,%rsp
e110(3): add %r15,%rbx
e113(4): lea 0x8(%rbp),%r15
e117(4): mov 0x0(%rbp),%r8d
e11b(3): mov (%rbx),%r11
e11e(4): mov 0x8(%rbx),%r12
e122(3): mov %r14,%rcx
e125(3): or $0x1,%eax
e128(4): mov %eax,0x24(%rsp)
e12c(3): push 0x30(%rbp)
e12f(3): mov %eax,%r9d
e132(3): push 0x28(%rbp)
e135(2): push %r15
e137(3): mov %r11,%rsi
e13a(5): mov 0x28(%rsp),%rdx
e13f(3): mov %r12,%rdi
e142(5): mov %r11,0x30(%rsp)
e147(5): call 0xffffecd9(%rip)
e14c(4): add $0x20,%rsp
e150(5): mov 0x10(%rsp),%r11
e155(3): cmp %rax,%r11
e158(2): jnbe 0x69(%rip)
e15a(4): lea 0x1(%rax),%rsi
e15e(7): lea 0x20e43b(%rip),%rax
e165(3): cmp %rax,%r12
e168(3): mov %rsi,(%rbx)
e16b(2): jz 0x14(%rip)
e16d(3): mov %r12,%rdi
e170(5): mov %rsi,0x10(%rsp)
e175(5): call 0xffff4b0b(%rip)
e17a(5): mov 0x10(%rsp),%rsi
e17f(3): mov %rsi,%rdi
e182(5): mov %rsi,0x10(%rsp)
e187(5): call 0x2b39(%rip)
e18c(4): sub $0x8,%rsp
e190(4): mov %rax,0x8(%rbx)
e194(4): mov 0x0(%rbp),%r8d
e198(3): push 0x30(%rbp)
e19b(3): push 0x28(%rbp)
e19e(3): mov %r14,%rcx
e1a1(2): push %r15
e1a3(5): mov 0x3c(%rsp),%r9d
e1a8(3): mov %rax,%rdi
e1ab(5): mov 0x28(%rsp),%rdx
e1b0(5): mov 0x30(%rsp),%rsi
e1b5(3): mov %rax,%r12
e1b8(5): call 0xffffec68(%rip)
e1bd(4): add $0x20,%rsp
e1c1(4): mov 0x18(%rsp),%eax
e1c5(4): mov %eax,0x0(%r13)
e1c9(4): add $0x28,%rsp
e1cd(3): mov %r12,%rax
e1d0(1): pop %rbx
e1d1(1): pop %rbp
e1d2(2): pop %r12
e1d4(2): pop %r13
e1d6(2): pop %r14
e1d8(2): pop %r15
e1da(1): ret near (%rsp)
e1db(5): nop 0x0(%rax,%rax,1)
e1e0(2): xor %edi,%edi
e1e2(5): call 0x2b3e(%rip)
e1e7(8): movdqa 0x20dea1(%rip),%xmm0
e1ef(3): mov %rax,%rbx
e1f2(7): mov %rax,0x20de87(%rip)
e1f9(3): movups %xmm0,(%rax)
e1fc(5): jmp 0xfffffee1(%rip)
e201(5): call 0xffff438f(%rip)
e206(5): call 0x2d0a(%rip)

"clone_quoting_options" :
e210(2): push %r12
e212(1): push %rbp
e213(1): push %rbx
e214(3): mov %rdi,%rbx
e217(5): call 0xffff4389(%rip)
e21c(3): mov (%rax),%r12d
e21f(3): mov %rax,%rbp
e222(7): lea 0x20e477(%rip),%rax
e229(3): test %rbx,%rbx
e22c(5): mov $0x38,%esi
e231(4): cmove %rax,%rbx
e235(3): mov %rbx,%rdi
e238(5): call 0x2c88(%rip)
e23d(4): mov %r12d,0x0(%rbp)
e241(1): pop %rbx
e242(1): pop %rbp
e243(2): pop %r12
e245(1): ret near (%rsp)

"get_quoting_style" :
e250(7): lea 0x20e449(%rip),%rax
e257(3): test %rdi,%rdi
e25a(4): cmove %rax,%rdi
e25e(2): mov (%rdi),%eax
e260(1): ret near (%rsp)

"set_quoting_style" :
e270(7): lea 0x20e429(%rip),%rax
e277(3): test %rdi,%rdi
e27a(4): cmove %rax,%rdi
e27e(2): mov %esi,(%rdi)
e280(1): ret near (%rsp)

"set_char_quoting" :
e290(7): lea 0x20e409(%rip),%rax
e297(3): test %rdi,%rdi
e29a(2): mov %esi,%ecx
e29c(4): cmove %rax,%rdi
e2a0(2): mov %esi,%eax
e2a2(3): and $0x1f,%ecx
e2a5(3): shr $0x5,%al
e2a8(3): movzx %al,%eax
e2ab(5): lea 0x8(%rdi,%rax,4),%rdi
e2b0(2): mov (%rdi),%esi
e2b2(2): mov %esi,%eax
e2b4(2): shr %cl,%eax
e2b6(2): xor %eax,%edx
e2b8(3): and $0x1,%eax
e2bb(3): and $0x1,%edx
e2be(2): shl/sal %cl,%edx
e2c0(2): xor %esi,%edx
e2c2(2): mov %edx,(%rdi)
e2c4(1): ret near (%rsp)

"set_quoting_flags" :
e2d0(7): lea 0x20e3c9(%rip),%rax
e2d7(3): test %rdi,%rdi
e2da(4): cmove %rax,%rdi
e2de(3): mov 0x4(%rdi),%eax
e2e1(3): mov %esi,0x4(%rdi)
e2e4(1): ret near (%rsp)

"set_custom_quoting" :
e2f0(7): lea 0x20e3a9(%rip),%rax
e2f7(3): test %rdi,%rdi
e2fa(4): cmove %rax,%rdi
e2fe(3): test %rsi,%rsi
e301(6): mov $0xa,(%rdi)
e307(2): jz 0x10(%rip)
e309(3): test %rdx,%rdx
e30c(2): jz 0xb(%rip)
e30e(4): mov %rsi,0x28(%rdi)
e312(4): mov %rdx,0x30(%rdi)
e316(1): ret near (%rsp)
e317(4): sub $0x8,%rsp
e31b(5): call 0xffff4275(%rip)

"quotearg_buffer" :
e320(2): push %r15
e322(2): push %r14
e324(7): lea 0x20e375(%rip),%rax
e32b(2): push %r13
e32d(2): push %r12
e32f(3): mov %rdi,%r13
e332(1): push %rbp
e333(1): push %rbx
e334(3): mov %r8,%rbx
e337(3): mov %rsi,%r14
e33a(3): mov %rdx,%r15
e33d(4): sub $0x18,%rsp
e341(3): test %r8,%r8
e344(4): cmove %rax,%rbx
e348(5): mov %rcx,0x8(%rsp)
e34d(5): call 0xffff4253(%rip)
e352(3): mov (%rax),%r12d
e355(3): mov %rax,%rbp
e358(4): lea 0x8(%rbx),%rax
e35c(4): sub $0x8,%rsp
e360(4): mov 0x4(%rbx),%r9d
e364(3): push 0x30(%rbx)
e367(3): mov (%rbx),%r8d
e36a(3): push 0x28(%rbx)
e36d(3): mov %r15,%rdx
e370(1): push %rax
e371(5): mov 0x28(%rsp),%rcx
e376(3): mov %r14,%rsi
e379(3): mov %r13,%rdi
e37c(5): call 0xffffeaa4(%rip)
e381(4): mov %r12d,0x0(%rbp)
e385(4): add $0x38,%rsp
e389(1): pop %rbx
e38a(1): pop %rbp
e38b(2): pop %r12
e38d(2): pop %r13
e38f(2): pop %r14
e391(2): pop %r15
e393(1): ret near (%rsp)

"quotearg_alloc_mem" :
e3a0(2): push %r15
e3a2(2): push %r14
e3a4(7): lea 0x20e2f5(%rip),%rax
e3ab(2): push %r13
e3ad(2): push %r12
e3af(3): mov %rdx,%r12
e3b2(1): push %rbp
e3b3(1): push %rbx
e3b4(3): mov %rcx,%rbx
e3b7(3): mov %rdi,%r14
e3ba(3): mov %rsi,%r15
e3bd(4): sub $0x38,%rsp
e3c1(3): test %rcx,%rcx
e3c4(4): cmove %rax,%rbx
e3c8(2): xor %ebp,%ebp
e3ca(5): call 0xffff41d6(%rip)
e3cf(3): test %r12,%r12
e3d2(3): mov %rax,%r13
e3d5(2): mov (%rax),%eax
e3d7(4): setz %bpl
e3db(3): or 0x4(%rbx),%ebp
e3de(4): lea 0x8(%rbx),%r10
e3e2(4): sub $0x8,%rsp
e3e6(3): mov (%rbx),%r8d
e3e9(3): mov %r15,%rcx
e3ec(4): mov %eax,0x14(%rsp)
e3f0(3): push 0x30(%rbx)
e3f3(3): mov %r14,%rdx
e3f6(3): push 0x28(%rbx)
e3f9(2): push %r10
e3fb(2): xor %esi,%esi
e3fd(3): mov %ebp,%r9d
e400(2): xor %edi,%edi
e402(5): mov %r10,0x40(%rsp)
e407(5): call 0xffffea19(%rip)
e40c(4): lea 0x1(%rax),%rsi
e410(5): mov %rax,0x48(%rsp)
e415(4): add $0x20,%rsp
e419(3): mov %rsi,%rdi
e41c(5): mov %rsi,0x18(%rsp)
e421(5): call 0x289f(%rip)
e426(5): mov %rax,0x10(%rsp)
e42b(4): sub $0x8,%rsp
e42f(3): push 0x30(%rbx)
e432(3): push 0x28(%rbx)
e435(5): mov 0x38(%rsp),%r10
e43a(3): mov %ebp,%r9d
e43d(3): mov (%rbx),%r8d
e440(3): mov %r15,%rcx
e443(3): mov %r14,%rdx
e446(3): mov %rax,%rdi
e449(2): push %r10
e44b(5): mov 0x38(%rsp),%rsi
e450(5): call 0xffffe9d0(%rip)
e455(4): mov 0x2c(%rsp),%eax
e459(4): add $0x20,%rsp
e45d(3): test %r12,%r12
e460(4): mov %eax,0x0(%r13)
e464(2): jz 0xb(%rip)
e466(5): mov 0x28(%rsp),%r11
e46b(4): mov %r11,(%r12)
e46f(5): mov 0x10(%rsp),%rax
e474(4): add $0x38,%rsp
e478(1): pop %rbx
e479(1): pop %rbp
e47a(2): pop %r12
e47c(2): pop %r13
e47e(2): pop %r14
e480(2): pop %r15
e482(1): ret near (%rsp)

"quotearg_alloc" :
e490(3): mov %rdx,%rcx
e493(2): xor %edx,%edx
e495(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
e4a0(6): mov 0x20dbd2(%rip),%eax
e4a6(2): push %r12
e4a8(7): mov 0x20dbd1(%rip),%r12
e4af(1): push %rbp
e4b0(1): push %rbx
e4b1(3): cmp $0x1,%eax
e4b4(2): jle 0x2d(%rip)
e4b6(3): sub $0x2,%eax
e4b9(5): lea 0x18(%r12),%rbx
e4be(4): shl/sal $0x4,%rax
e4c2(5): lea 0x28(%r12,%rax,1),%rbp
e4c7(9): nop 0x0(%rax,%rax,1)
e4d0(3): mov (%rbx),%rdi
e4d3(4): add $0x10,%rbx
e4d7(5): call 0xffff47a9(%rip)
e4dc(3): cmp %rbp,%rbx
e4df(2): jnz 0xfffffff1(%rip)
e4e1(5): mov 0x8(%r12),%rdi
e4e6(7): lea 0x20e0b3(%rip),%rbx
e4ed(3): cmp %rbx,%rdi
e4f0(2): jz 0x19(%rip)
e4f2(5): call 0xffff478e(%rip)
e4f7(b): mov $0x100,0x20db8e(%rip)
e502(7): mov %rbx,0x20db8f(%rip)
e509(7): lea 0x20db80(%rip),%rbx
e510(3): cmp %rbx,%r12
e513(2): jz 0x11(%rip)
e515(3): mov %r12,%rdi
e518(5): call 0xffff4768(%rip)
e51d(7): mov %rbx,0x20db5c(%rip)
e524(1): pop %rbx
e525(a): mov $0x1,0x20db49(%rip)
e52f(1): pop %rbp
e530(2): pop %r12
e532(1): ret near (%rsp)

"quotearg_n" :
e540(7): lea 0x20e159(%rip),%rcx
e547(7): mov $0xffffffff,%rdx
e54e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
e560(7): lea 0x20e139(%rip),%rcx
e567(5): jmp 0xfffffaf9(%rip)

"quotearg" :
e570(7): lea 0x20e129(%rip),%rcx
e577(3): mov %rdi,%rsi
e57a(7): mov $0xffffffff,%rdx
e581(2): xor %edi,%edi
e583(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
e590(7): lea 0x20e109(%rip),%rcx
e597(3): mov %rsi,%rdx
e59a(3): mov %rdi,%rsi
e59d(2): xor %edi,%edi
e59f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
e5b0(4): sub $0x48,%rsp
e5b4(3): mov %rdx,%rax
e5b7(9): mov $0x28,%rdx
e5c0(5): mov %rdx,0x38(%rsp)
e5c5(2): xor %edx,%edx
e5c7(3): cmp $0xa,%esi
e5ca(2): jz 0x6a(%rip)
e5cc(3): mov %esi,(%rsp)
e5cf(3): mov %rsp,%rcx
e5d2(7): mov $0xffffffff,%rdx
e5d9(3): mov %rax,%rsi
e5dc(9): mov $0x0,0x4(%rsp)
e5e5(9): mov $0x0,0xc(%rsp)
e5ee(9): mov $0x0,0x14(%rsp)
e5f7(9): mov $0x0,0x1c(%rsp)
e600(9): mov $0x0,0x24(%rsp)
e609(9): mov $0x0,0x2c(%rsp)
e612(8): mov $0x0,0x34(%rsp)
e61a(5): call 0xfffffa46(%rip)
e61f(5): mov 0x38(%rsp),%rcx
e624(9): xor $0x28,%rcx
e62d(2): jnz 0xc(%rip)
e62f(4): add $0x48,%rsp
e633(1): ret near (%rsp)
e634(5): call 0xffff3f5c(%rip)
e639(5): call 0xffff4147(%rip)

"quotearg_n_style_mem" :
e640(4): sub $0x48,%rsp
e644(3): mov %rdx,%rax
e647(3): mov %rcx,%rdx
e64a(9): mov $0x28,%rcx
e653(5): mov %rcx,0x38(%rsp)
e658(2): xor %ecx,%ecx
e65a(3): cmp $0xa,%esi
e65d(2): jz 0x63(%rip)
e65f(3): mov %esi,(%rsp)
e662(3): mov %rsp,%rcx
e665(3): mov %rax,%rsi
e668(9): mov $0x0,0x4(%rsp)
e671(9): mov $0x0,0xc(%rsp)
e67a(9): mov $0x0,0x14(%rsp)
e683(9): mov $0x0,0x1c(%rsp)
e68c(9): mov $0x0,0x24(%rsp)
e695(9): mov $0x0,0x2c(%rsp)
e69e(8): mov $0x0,0x34(%rsp)
e6a6(5): call 0xfffff9ba(%rip)
e6ab(5): mov 0x38(%rsp),%rdx
e6b0(9): xor $0x28,%rdx
e6b9(2): jnz 0xc(%rip)
e6bb(4): add $0x48,%rsp
e6bf(1): ret near (%rsp)
e6c0(5): call 0xffff3ed0(%rip)
e6c5(5): call 0xffff40bb(%rip)

"quotearg_style" :
e6d0(3): mov %rsi,%rdx
e6d3(2): mov %edi,%esi
e6d5(2): xor %edi,%edi
e6d7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
e6e0(3): mov %rdx,%rcx
e6e3(3): mov %rsi,%rdx
e6e6(2): mov %edi,%esi
e6e8(2): xor %edi,%edi
e6ea(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
e6f0(4): sub $0x48,%rsp
e6f4(2): mov %edx,%ecx
e6f6(9): mov $0x28,%rax
e6ff(5): mov %rax,0x38(%rsp)
e704(2): xor %eax,%eax
e706(7): mov 0x20dfc3(%rip),%rax
e70d(3): mov %rsp,%r8
e710(3): and $0x1f,%ecx
e713(8): movdqa 0x20df85(%rip),%xmm0
e71b(5): mov %rax,0x30(%rsp)
e720(2): mov %edx,%eax
e722(4): movaps %xmm0,(%rsp)
e726(3): shr $0x5,%al
e729(3): movzx %al,%eax
e72c(5): lea 0x8(%r8,%rax,4),%r9
e731(8): movdqa 0x20df77(%rip),%xmm0
e739(5): movaps %xmm0,0x10(%rsp)
e73e(8): movdqa 0x20df7a(%rip),%xmm0
e746(5): movaps %xmm0,0x20(%rsp)
e74b(3): mov (%r9),%edx
e74e(2): mov %edx,%eax
e750(2): shr %cl,%eax
e752(2): not %eax
e754(3): and $0x1,%eax
e757(2): shl/sal %cl,%eax
e759(3): mov %r8,%rcx
e75c(2): xor %edx,%eax
e75e(3): mov %rsi,%rdx
e761(3): mov %rdi,%rsi
e764(3): mov %eax,(%r9)
e767(2): xor %edi,%edi
e769(5): call 0xfffff8f7(%rip)
e76e(5): mov 0x38(%rsp),%rsi
e773(9): xor $0x28,%rsi
e77c(2): jnz 0x7(%rip)
e77e(4): add $0x48,%rsp
e782(1): ret near (%rsp)
e783(5): call 0xffff3ffd(%rip)

"quotearg_char" :
e790(4): movsx %sil,%edx
e794(7): mov $0xffffffff,%rsi
e79b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
e7a0(5): mov $0x3a,%edx
e7a5(7): mov $0xffffffff,%rsi
e7ac(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
e7c0(5): mov $0x3a,%edx
e7c5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
e7d0(4): sub $0x48,%rsp
e7d4(3): mov %rdx,%rax
e7d7(9): mov $0x28,%rdx
e7e0(5): mov %rdx,0x38(%rsp)
e7e5(2): xor %edx,%edx
e7e7(3): cmp $0xa,%esi
e7ea(2): jz 0x6a(%rip)
e7ec(3): mov %esi,(%rsp)
e7ef(3): mov %rsp,%rcx
e7f2(7): mov $0xffffffff,%rdx
e7f9(3): mov %rax,%rsi
e7fc(9): mov $0x0,0x4(%rsp)
e805(9): mov $0x4000000,0xc(%rsp)
e80e(9): mov $0x0,0x14(%rsp)
e817(9): mov $0x0,0x1c(%rsp)
e820(9): mov $0x0,0x24(%rsp)
e829(9): mov $0x0,0x2c(%rsp)
e832(8): mov $0x0,0x34(%rsp)
e83a(5): call 0xfffff826(%rip)
e83f(5): mov 0x38(%rsp),%rcx
e844(9): xor $0x28,%rcx
e84d(2): jnz 0xc(%rip)
e84f(4): add $0x48,%rsp
e853(1): ret near (%rsp)
e854(5): call 0xffff3d3c(%rip)
e859(5): call 0xffff3f27(%rip)

"quotearg_n_custom_mem" :
e860(4): sub $0x48,%rsp
e864(3): mov %rcx,%r9
e867(7): mov 0x20de62(%rip),%rcx
e86e(8): movdqa 0x20de2a(%rip),%xmm0
e876(9): mov $0x28,%rax
e87f(5): mov %rax,0x38(%rsp)
e884(2): xor %eax,%eax
e886(4): movaps %xmm0,(%rsp)
e88a(3): test %rsi,%rsi
e88d(5): mov %rcx,0x30(%rsp)
e892(7): mov $0xa,(%rsp)
e899(8): movdqa 0x20de0f(%rip),%xmm0
e8a1(5): movaps %xmm0,0x10(%rsp)
e8a6(8): movdqa 0x20de12(%rip),%xmm0
e8ae(5): movaps %xmm0,0x20(%rsp)
e8b3(2): jz 0x34(%rip)
e8b5(3): test %rdx,%rdx
e8b8(2): jz 0x2f(%rip)
e8ba(5): mov %rsi,0x28(%rsp)
e8bf(5): mov %rdx,0x30(%rsp)
e8c4(3): mov %rsp,%rcx
e8c7(3): mov %r8,%rdx
e8ca(3): mov %r9,%rsi
e8cd(5): call 0xfffff793(%rip)
e8d2(5): mov 0x38(%rsp),%rdi
e8d7(9): xor $0x28,%rdi
e8e0(2): jnz 0xc(%rip)
e8e2(4): add $0x48,%rsp
e8e6(1): ret near (%rsp)
e8e7(5): call 0xffff3ca9(%rip)
e8ec(5): call 0xffff3e94(%rip)

"quotearg_n_custom" :
e900(7): mov $0xffffffff,%r8
e907(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
e910(3): mov %rdx,%rcx
e913(7): mov $0xffffffff,%r8
e91a(3): mov %rsi,%rdx
e91d(3): mov %rdi,%rsi
e920(2): xor %edi,%edi
e922(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
e930(3): mov %rcx,%r8
e933(3): mov %rdx,%rcx
e936(3): mov %rsi,%rdx
e939(3): mov %rdi,%rsi
e93c(2): xor %edi,%edi
e93e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
e950(7): lea 0x20d6e9(%rip),%rcx
e957(5): jmp 0xfffff709(%rip)

"quote_mem" :
e960(7): lea 0x20d6d9(%rip),%rcx
e967(3): mov %rsi,%rdx
e96a(3): mov %rdi,%rsi
e96d(2): xor %edi,%edi
e96f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
e980(7): lea 0x20d6b9(%rip),%rcx
e987(7): mov $0xffffffff,%rdx
e98e(5): jmp 0xfffff6d2(%rip)

"quote" :
e9a0(7): lea 0x20d699(%rip),%rcx
e9a7(3): mov %rdi,%rsi
e9aa(7): mov $0xffffffff,%rdx
e9b1(2): xor %edi,%edi
e9b3(5): jmp 0xfffff6ad(%rip)

"renameatu" :
e9c0(2): push %r15
e9c2(2): push %r14
e9c4(3): mov %r8d,%r9d
e9c7(2): push %r13
e9c9(2): push %r12
e9cb(3): mov %edx,%r14d
e9ce(1): push %rbp
e9cf(1): push %rbx
e9d0(3): mov %rsi,%r12
e9d3(3): mov %rcx,%r13
e9d6(3): mov %r8d,%ebp
e9d9(3): mov %rcx,%r8
e9dc(7): sub $0x148,%rsp
e9e3(2): mov %edx,%ecx
e9e5(3): mov %rsi,%rdx
e9e8(9): mov $0x28,%rax
e9f1(8): mov %rax,0x138(%rsp)
e9f9(2): xor %eax,%eax
e9fb(2): mov %edi,%esi
e9fd(4): mov %edi,0x4(%rsp)
ea01(5): mov $0x13c,%edi
ea06(5): call 0xffff3f6a(%rip)
ea0b(3): mov %rax,%rbx
ea0e(3): mov %eax,%r15d
ea11(5): call 0xffff3b8f(%rip)
ea16(2): test %ebx,%ebx
ea18(2): js 0x38(%rip)
ea1a(8): mov 0x138(%rsp),%rdx
ea22(9): xor $0x28,%rdx
ea2b(3): mov %r15d,%eax
ea2e(6): jnz 0x1f7(%rip)
ea34(7): add $0x148,%rsp
ea3b(1): pop %rbx
ea3c(1): pop %rbp
ea3d(2): pop %r12
ea3f(2): pop %r13
ea41(2): pop %r14
ea43(2): pop %r15
ea45(1): ret near (%rsp)
ea46(a): nop 0x0(%rax,%rax,1)
ea50(3): mov %rax,%r9
ea53(2): mov (%rax),%eax
ea55(3): lea 0xffffffea(%rax),%ecx
ea58(3): and $0xef,%ecx
ea5b(3): setnz %bl
ea5e(3): cmp $0x5f,%eax
ea61(3): setnz %al
ea64(2): and %al,%bl
ea66(2): jnz 0xffffffb4(%rip)
ea68(2): test %ebp,%ebp
ea6a(2): jnz 0x56(%rip)
ea6c(3): mov %r12,%rdi
ea6f(5): mov %r9,0x8(%rsp)
ea74(5): call 0xffff3cdc(%rip)
ea79(3): mov %r13,%rdi
ea7c(3): mov %rax,%rbp
ea7f(5): call 0xffff3cd1(%rip)
ea84(3): test %rbp,%rbp
ea87(2): jz 0x1c(%rip)
ea89(3): test %rax,%rax
ea8c(5): mov 0x8(%rsp),%r9
ea91(2): jz 0x12(%rip)
ea93(6): cmp $0x2f,0xffffffff(%r12,%rbp,1)
ea99(2): jz 0x47(%rip)
ea9b(6): cmp $0x2f,0xffffffff(%r13,%rax,1)
eaa1(2): jz 0x3f(%rip)
eaa3(4): mov 0x4(%rsp),%edi
eaa7(3): mov %r13,%rcx
eaaa(3): mov %r14d,%edx
eaad(3): mov %r12,%rsi
eab0(5): call 0xffff4120(%rip)
eab5(3): mov %eax,%r15d
eab8(5): jmp 0xffffff62(%rip)
eabd(3): nop (%rax)
eac0(3): and $0xfe,%ebp
eac3(2): jz 0x6d(%rip)
eac5(7): mov $0x5f,(%r9)
eacc(6): mov $0xffffffff,%r15d
ead2(5): jmp 0xffffff48(%rip)
ead7(9): nop 0x0(%rax,%rax,1)
eae0(4): mov 0x4(%rsp),%esi
eae4(5): lea 0x10(%rsp),%rcx
eae9(6): mov $0x100,%r8d
eaef(3): mov %r12,%rdx
eaf2(5): mov $0x1,%edi
eaf7(5): mov %r9,0x8(%rsp)
eafc(5): call 0xffff3cc4(%rip)
eb01(2): test %eax,%eax
eb03(2): jnz 0x66(%rip)
eb05(2): test %bl,%bl
eb07(5): mov 0x8(%rsp),%r9
eb0c(2): jz 0x7e(%rip)
eb0e(4): mov 0x28(%rsp),%eax
eb12(5): and $0xf000,%eax
eb17(5): cmp $0x4000,%eax
eb1c(2): jz 0xffffff87(%rip)
eb1e(7): mov $0x2,(%r9)
eb25(6): mov $0xffffffff,%r15d
eb2b(5): jmp 0xfffffeef(%rip)
eb30(8): lea 0xa0(%rsp),%rcx
eb38(6): mov $0x100,%r8d
eb3e(3): mov %r13,%rdx
eb41(3): mov %r14d,%esi
eb44(5): mov $0x1,%edi
eb49(5): mov %r9,0x8(%rsp)
eb4e(5): call 0xffff3c72(%rip)
eb53(2): test %eax,%eax
eb55(5): mov 0x8(%rsp),%r9
eb5a(2): jz 0x1e(%rip)
eb5c(3): mov (%r9),%eax
eb5f(3): cmp $0x4b,%eax
eb62(2): jz 0x16(%rip)
eb64(3): cmp $0x2,%eax
eb67(2): jz 0x71(%rip)
eb69(6): mov $0xffffffff,%r15d
eb6f(5): jmp 0xfffffeab(%rip)
eb74(4): nop 0x0(%rax)
eb78(7): mov $0x11,(%r9)
eb7f(6): mov $0xffffffff,%r15d
eb85(5): jmp 0xfffffe95(%rip)
eb8a(8): lea 0xa0(%rsp),%rcx
eb92(6): mov $0x100,%r8d
eb98(3): mov %r13,%rdx
eb9b(3): mov %r14d,%esi
eb9e(5): mov $0x1,%edi
eba3(5): mov %r9,0x8(%rsp)
eba8(5): call 0xffff3c18(%rip)
ebad(2): test %eax,%eax
ebaf(5): mov 0x8(%rsp),%r9
ebb4(2): jz 0x2e(%rip)
ebb6(4): cmp $0x2,(%r9)
ebba(2): jnz 0xffffffaf(%rip)
ebbc(4): mov 0x28(%rsp),%eax
ebc0(5): and $0xf000,%eax
ebc5(5): cmp $0x4000,%eax
ebca(2): jnz 0xffffff9f(%rip)
ebcc(5): jmp 0xfffffed7(%rip)
ebd1(7): nop 0x0(%rax)
ebd8(5): mov $0x1,%ebx
ebdd(5): jmp 0xfffffe8f(%rip)
ebe2(7): mov 0xb8(%rsp),%eax
ebe9(5): and $0xf000,%eax
ebee(5): cmp $0x4000,%eax
ebf3(2): jz 0xe(%rip)
ebf5(7): mov $0x14,(%r9)
ebfc(5): jmp 0xffffff6d(%rip)
ec01(4): mov 0x28(%rsp),%eax
ec05(5): and $0xf000,%eax
ec0a(5): cmp $0x4000,%eax
ec0f(6): jz 0xfffffe94(%rip)
ec15(7): mov $0x15,(%r9)
ec1c(4): or $0xff,%r15d
ec20(5): jmp 0xfffffdfa(%rip)
ec25(5): call 0xffff3b5b(%rip)

"get_root_dev_ino" :
ec30(1): push %rbx
ec31(7): lea 0x7e56(%rip),%rsi
ec38(3): mov %rdi,%rbx
ec3b(5): mov $0x1,%edi
ec40(7): sub $0xa0,%rsp
ec47(3): mov %rsp,%rdx
ec4a(9): mov $0x28,%rax
ec53(8): mov %rax,0x98(%rsp)
ec5b(2): xor %eax,%eax
ec5d(5): call 0xffff3b03(%rip)
ec62(2): test %eax,%eax
ec64(2): jnz 0x34(%rip)
ec66(5): mov 0x8(%rsp),%rax
ec6b(3): mov %rax,(%rbx)
ec6e(4): mov (%rsp),%rax
ec72(4): mov %rax,0x8(%rbx)
ec76(3): mov %rbx,%rax
ec79(8): mov 0x98(%rsp),%rcx
ec81(9): xor $0x28,%rcx
ec8a(2): jnz 0x12(%rip)
ec8c(7): add $0xa0,%rsp
ec93(1): pop %rbx
ec94(1): ret near (%rsp)
ec95(3): nop (%rax)
ec98(2): xor %eax,%eax
ec9a(2): jmp 0xffffffdf(%rip)
ec9c(5): call 0xffff3ae4(%rip)

"safe_write" :
ecb0(2): push %r13
ecb2(2): push %r12
ecb4(3): mov %edi,%r13d
ecb7(1): push %rbp
ecb8(1): push %rbx
ecb9(3): mov %rsi,%r12
ecbc(3): mov %rdx,%rbx
ecbf(4): sub $0x8,%rsp
ecc3(5): nop 0x0(%rax,%rax,1)
ecc8(3): mov %rbx,%rdx
eccb(3): mov %r12,%rsi
ecce(3): mov %r13d,%edi
ecd1(5): call 0xffff39bf(%rip)
ecd6(3): test %rax,%rax
ecd9(3): mov %rax,%rbp
ecdc(2): jns 0x24(%rip)
ecde(5): call 0xffff38c2(%rip)
ece3(2): mov (%rax),%eax
ece5(3): cmp $0x4,%eax
ece8(2): jz 0xffffffe0(%rip)
ecea(3): cmp $0x16,%eax
eced(2): jnz 0x13(%rip)
ecef(7): cmp $0x7ff00000,%rbx
ecf6(2): jbe 0xa(%rip)
ecf8(5): mov $0x7ff00000,%ebx
ecfd(2): jmp 0xffffffcb(%rip)
ecff(1): nop 
ed00(4): add $0x8,%rsp
ed04(3): mov %rbp,%rax
ed07(1): pop %rbx
ed08(1): pop %rbp
ed09(2): pop %r12
ed0b(2): pop %r13
ed0d(1): ret near (%rsp)

"same_nameat.part.0" :
ed10(2): push %r13
ed12(2): push %r12
ed14(3): mov %edi,%r13d
ed17(1): push %rbp
ed18(1): push %rbx
ed19(3): mov %rsi,%rdi
ed1c(2): mov %edx,%ebp
ed1e(3): mov %rcx,%r12
ed21(7): sub $0x138,%rsp
ed28(9): mov $0x28,%rax
ed31(8): mov %rax,0x128(%rsp)
ed39(2): xor %eax,%eax
ed3b(5): call 0xffffc2a5(%rip)
ed40(3): mov %rsp,%rcx
ed43(6): mov $0x100,%r8d
ed49(3): mov %rax,%rdx
ed4c(3): mov %r13d,%esi
ed4f(5): mov $0x1,%edi
ed54(3): mov %rax,%rbx
ed57(5): call 0xffff3a69(%rip)
ed5c(2): test %eax,%eax
ed5e(6): jnz 0xb2(%rip)
ed64(3): mov %rbx,%rdi
ed67(5): call 0xffff3f19(%rip)
ed6c(3): mov %r12,%rdi
ed6f(5): call 0xffffc271(%rip)
ed74(8): lea 0x90(%rsp),%rcx
ed7c(6): mov $0x100,%r8d
ed82(3): mov %rax,%rdx
ed85(2): mov %ebp,%esi
ed87(5): mov $0x1,%edi
ed8c(3): mov %rax,%rbx
ed8f(5): call 0xffff3a31(%rip)
ed94(2): test %eax,%eax
ed96(2): jnz 0x52(%rip)
ed98(2): xor %ebp,%ebp
ed9a(8): mov 0x98(%rsp),%rax
eda2(5): cmp %rax,0x8(%rsp)
eda7(2): jnz 0x12(%rip)
eda9(8): mov 0x90(%rsp),%rax
edb1(4): cmp %rax,(%rsp)
edb5(4): setz %bpl
edb9(3): mov %rbx,%rdi
edbc(5): call 0xffff3ec4(%rip)
edc1(8): mov 0x128(%rsp),%rdx
edc9(9): xor $0x28,%rdx
edd2(2): mov %ebp,%eax
edd4(2): jnz 0x5e(%rip)
edd6(7): add $0x138,%rsp
eddd(1): pop %rbx
edde(1): pop %rbp
eddf(2): pop %r12
ede1(2): pop %r13
ede3(1): ret near (%rsp)
ede4(4): nop 0x0(%rax)
ede8(5): call 0xffff37b8(%rip)
eded(2): mov (%rax),%esi
edef(7): lea 0x8651(%rip),%rdx
edf6(3): mov %rbx,%rcx
edf9(5): mov $0x1,%edi
edfe(2): xor %eax,%eax
ee00(5): call 0xffff3d10(%rip)
ee05(2): jmp 0xffffff93(%rip)
ee07(9): nop 0x0(%rax,%rax,1)
ee10(5): call 0xffff3790(%rip)
ee15(2): mov (%rax),%esi
ee17(7): lea 0x8629(%rip),%rdx
ee1e(3): mov %rbx,%rcx
ee21(5): mov $0x1,%edi
ee26(2): xor %eax,%eax
ee28(5): call 0xffff3ce8(%rip)
ee2d(5): jmp 0xffffff37(%rip)
ee32(5): call 0xffff394e(%rip)

"same_nameat" :
ee40(2): push %r15
ee42(2): push %r14
ee44(3): mov %edx,%r15d
ee47(2): push %r13
ee49(2): push %r12
ee4b(1): push %rbp
ee4c(1): push %rbx
ee4d(3): mov %rcx,%rbp
ee50(3): mov %rsi,%rbx
ee53(4): sub $0x18,%rsp
ee57(4): mov %edi,0xc(%rsp)
ee5b(3): mov %rsi,%rdi
ee5e(5): call 0xffffc262(%rip)
ee63(3): mov %rbp,%rdi
ee66(3): mov %rax,%r12
ee69(5): call 0xffffc257(%rip)
ee6e(3): mov %r12,%rdi
ee71(3): mov %rax,%r13
ee74(5): call 0xffffc2ac(%rip)
ee79(3): mov %r13,%rdi
ee7c(3): mov %rax,%r14
ee7f(5): call 0xffffc2a1(%rip)
ee84(3): cmp %rax,%r14
ee87(2): jz 0x19(%rip)
ee89(4): add $0x18,%rsp
ee8d(2): xor %eax,%eax
ee8f(1): pop %rbx
ee90(1): pop %rbp
ee91(2): pop %r12
ee93(2): pop %r13
ee95(2): pop %r14
ee97(2): pop %r15
ee99(1): ret near (%rsp)
ee9a(6): nop 0x0(%rax,%rax,1)
eea0(3): mov %r14,%rdx
eea3(3): mov %r13,%rsi
eea6(3): mov %r12,%rdi
eea9(5): call 0xffff3a27(%rip)
eeae(2): test %eax,%eax
eeb0(2): jnz 0xffffffd9(%rip)
eeb2(4): mov 0xc(%rsp),%edi
eeb6(4): add $0x18,%rsp
eeba(3): mov %rbp,%rcx
eebd(3): mov %r15d,%edx
eec0(3): mov %rbx,%rsi
eec3(1): pop %rbx
eec4(1): pop %rbp
eec5(2): pop %r12
eec7(2): pop %r13
eec9(2): pop %r14
eecb(2): pop %r15
eecd(5): jmp 0xfffffe43(%rip)

"same_name" :
eee0(5): mov $0xffffff9c,%edx
eee5(3): mov %rsi,%rcx
eee8(3): mov %rdi,%rsi
eeeb(2): mov %edx,%edi
eeed(5): jmp 0xffffff53(%rip)

"direntry_cmp_inode" :
ef00(4): mov 0x8(%rsi),%rax
ef04(4): cmp %rax,0x8(%rdi)
ef08(2): jb 0x10(%rip)
ef0a(3): setnbe %al
ef0d(3): movzx %al,%eax
ef10(1): ret near (%rsp)
ef11(7): nop 0x0(%rax)
ef18(5): mov $0xffffffff,%eax
ef1d(1): ret near (%rsp)

"direntry_cmp_name" :
ef20(3): mov (%rsi),%rsi
ef23(3): mov (%rdi),%rdi
ef26(5): jmp 0xffff3a0a(%rip)

"streamsavedir" :
ef30(2): push %r15
ef32(7): lea 0x20cae7(%rip),%rax
ef39(2): push %r14
ef3b(2): push %r13
ef3d(2): push %r12
ef3f(2): mov %esi,%esi
ef41(1): push %rbp
ef42(1): push %rbx
ef43(4): sub $0x48,%rsp
ef47(4): mov 0x0(%rax,%rsi,8),%rax
ef4b(3): test %rdi,%rdi
ef4e(5): mov %rax,0x8(%rsp)
ef53(6): jz 0x30a(%rip)
ef59(3): mov %rdi,%rbx
ef5c(3): xor %r14d,%r14d
ef5f(3): xor %r12d,%r12d
ef62(5): call 0xffff363e(%rip)
ef67(3): xor %r13d,%r13d
ef6a(3): mov %rax,%rbp
ef6d(9): mov $0x0,0x28(%rsp)
ef76(9): mov $0x0,0x10(%rsp)
ef7f(9): mov $0x0,0x20(%rsp)
ef88(2): jmp 0xc(%rip)
ef8a(6): nop 0x0(%rax,%rax,1)
ef90(2): test %al,%al
ef92(2): jnz 0x37(%rip)
ef94(7): mov $0x0,0x0(%rbp)
ef9b(3): mov %rbx,%rdi
ef9e(5): call 0xffff3a52(%rip)
efa3(3): test %rax,%rax
efa6(3): mov %rax,%rcx
efa9(6): jz 0xa7(%rip)
efaf(4): lea 0x13(%rax),%r15
efb3(4): movzx 0x13(%rax),%eax
efb7(2): cmp $0x2e,%al
efb9(2): jnz 0xffffffd7(%rip)
efbb(4): cmp $0x2e,0x14(%rcx)
efbf(2): jz 0x81(%rip)
efc1(4): movzx 0x14(%rcx),%eax
efc5(2): test %al,%al
efc7(2): jz 0xffffffcd(%rip)
efc9(3): mov %r15,%rdi
efcc(5): mov %rcx,0x30(%rsp)
efd1(5): call 0xffff377f(%rip)
efd6(4): add $0x1,%rax
efda(6): cmp $0x0,0x8(%rsp)
efe0(5): mov %rax,0x18(%rsp)
efe5(6): jz 0x143(%rip)
efeb(5): cmp 0x28(%rsp),%r12
eff0(5): lea 0x1(%r12),%rax
eff5(5): mov 0x30(%rsp),%rcx
effa(5): mov %rax,0x38(%rsp)
efff(6): jz 0x1b2(%rip)
f005(4): shl/sal $0x4,%r12
f009(3): mov %r15,%rdi
f00c(5): add 0x10(%rsp),%r12
f011(5): mov %rcx,0x30(%rsp)
f016(5): call 0x1eda(%rip)
f01b(5): mov 0x30(%rsp),%rcx
f020(5): add 0x18(%rsp),%r14
f025(4): mov %rax,(%r12)
f029(3): mov (%rcx),%rax
f02c(5): mov %rax,0x8(%r12)
f031(5): mov 0x38(%rsp),%r12
f036(5): jmp 0xffffff5e(%rip)
f03b(5): nop 0x0(%rax,%rax,1)
f040(4): movzx 0x15(%rcx),%eax
f044(5): jmp 0xffffff4c(%rip)
f049(7): nop 0x0(%rax)
f050(3): mov 0x0(%rbp),%ebx
f053(2): test %ebx,%ebx
f055(6): jnz 0x1eb(%rip)
f05b(6): cmp $0x0,0x8(%rsp)
f061(6): jz 0xaf(%rip)
f067(3): test %r12,%r12
f06a(4): lea 0x1(%r14),%rbx
f06e(2): jnz 0x32(%rip)
f070(3): mov %rbx,%rdi
f073(5): call 0x1c4d(%rip)
f078(3): mov %rax,%r13
f07b(3): mov %rax,%rbx
f07e(5): mov 0x10(%rsp),%rdi
f083(5): call 0xffff3bfd(%rip)
f088(3): mov $0x0,(%rbx)
f08b(4): add $0x48,%rsp
f08f(3): mov %r13,%rax
f092(1): pop %rbx
f093(1): pop %rbp
f094(2): pop %r12
f096(2): pop %r13
f098(2): pop %r14
f09a(2): pop %r15
f09c(1): ret near (%rsp)
f09d(3): nop (%rax)
f0a0(5): mov 0x10(%rsp),%r15
f0a5(5): mov 0x8(%rsp),%rcx
f0aa(3): mov %r12,%rsi
f0ad(5): mov $0x10,%edx
f0b2(4): shl/sal $0x4,%r12
f0b6(3): mov %r15,%rdi
f0b9(3): mov %r15,%rbp
f0bc(3): add %r15,%r12
f0bf(5): call 0xffff3571(%rip)
f0c4(3): mov %rbx,%rdi
f0c7(2): xor %ebx,%ebx
f0c9(5): call 0x1bf7(%rip)
f0ce(3): mov %rax,%r13
f0d1(7): nop 0x0(%rax)
f0d8(4): mov 0x0(%rbp),%rsi
f0dc(5): lea 0x0(%r13,%rbx,1),%r14
f0e1(4): add $0x10,%rbp
f0e5(3): mov %r14,%rdi
f0e8(5): call 0xffff3628(%rip)
f0ed(4): mov 0xfffffff0(%rbp),%rdi
f0f1(3): sub %r14,%rax
f0f4(5): lea 0x1(%rbx,%rax,1),%rbx
f0f9(5): call 0xffff3b87(%rip)
f0fe(3): cmp %rbp,%r12
f101(2): jnz 0xffffffd7(%rip)
f103(3): add %r13,%rbx
f106(5): jmp 0xffffff78(%rip)
f10b(5): nop 0x0(%rax,%rax,1)
f110(5): cmp %r14,0x20(%rsp)
f115(6): jz 0xee(%rip)
f11b(5): lea 0x0(%r13,%r14,1),%rbx
f120(5): jmp 0xffffff68(%rip)
f125(3): nop (%rax)
f128(5): mov 0x18(%rsp),%rsi
f12d(5): mov 0x20(%rsp),%rax
f132(3): mov %rsi,%rdx
f135(3): sub %r14,%rax
f138(3): add %r14,%rdx
f13b(5): mov %rdx,0x30(%rsp)
f140(3): setb %dl
f143(3): cmp %rsi,%rax
f146(3): movzx %dl,%edx
f149(2): jnbe 0x4c(%rip)
f14b(3): test %rdx,%rdx
f14e(6): jnz 0xeb(%rip)
f154(3): test %r13,%r13
f157(5): mov 0x30(%rsp),%rdx
f15c(6): jz 0xc3(%rip)
f162(a): mov $0x6148914691236517203,%rax
f16c(3): cmp %rax,%rdx
f16f(6): jnbe 0xca(%rip)
f175(3): mov %rdx,%rax
f178(3): shr $0x1,%rax
f17b(5): lea 0x1(%rdx,%rax,1),%rax
f180(5): mov %rax,0x20(%rsp)
f185(5): mov 0x20(%rsp),%rsi
f18a(3): mov %r13,%rdi
f18d(5): call 0x1b93(%rip)
f192(3): mov %rax,%r13
f195(5): mov 0x18(%rsp),%rdx
f19a(5): lea 0x0(%r13,%r14,1),%rdi
f19f(3): mov %r15,%rsi
f1a2(5): call 0xffff37fe(%rip)
f1a7(5): mov 0x30(%rsp),%r14
f1ac(5): jmp 0xfffffde8(%rip)
f1b1(6): cmp $0x0,0x10(%rsp)
f1b7(6): jz 0xae(%rip)
f1bd(a): mov $0x384307168202282324,%rax
f1c7(3): cmp %rax,%r12
f1ca(2): jnbe 0x6f(%rip)
f1cc(3): mov %r12,%rax
f1cf(3): shr $0x1,%rax
f1d2(5): add 0x38(%rsp),%rax
f1d7(5): mov %rax,0x28(%rsp)
f1dc(5): mov 0x28(%rsp),%rsi
f1e1(5): mov 0x10(%rsp),%rdi
f1e6(5): mov %rcx,0x30(%rsp)
f1eb(4): shl/sal $0x4,%rsi
f1ef(5): call 0x1b31(%rip)
f1f4(5): mov 0x30(%rsp),%rcx
f1f9(5): mov %rax,0x10(%rsp)
f1fe(5): jmp 0xfffffe07(%rip)
f203(5): mov 0x20(%rsp),%rbx
f208(3): mov %r13,%rdi
f20b(4): lea 0x1(%rbx),%rsi
f20f(5): call 0x1b11(%rip)
f214(3): mov %rax,%r13
f217(3): add %rax,%rbx
f21a(5): jmp 0xfffffe6e(%rip)
f21f(3): test %rdx,%rdx
f222(5): mov $0x80,%eax
f227(4): cmovne %rdx,%rax
f22b(3): test %rax,%rax
f22e(5): mov %rax,0x20(%rsp)
f233(6): jns 0xffffff52(%rip)
f239(5): call 0x1cd7(%rip)
f23e(2): nop 
f240(5): mov 0x10(%rsp),%rdi
f245(5): call 0xffff3a3b(%rip)
f24a(3): mov %r13,%rdi
f24d(3): xor %r13d,%r13d
f250(5): call 0xffff3a30(%rip)
f255(3): mov %ebx,0x0(%rbp)
f258(5): jmp 0xfffffe33(%rip)
f25d(3): xor %r13d,%r13d
f260(5): jmp 0xfffffe2b(%rip)
f265(3): test %r12,%r12
f268(5): mov $0x8,%eax
f26d(5): mov $0x10,%edx
f272(4): cmovne %r12,%rax
f276(2): xor %esi,%esi
f278(3): mov %rax,%rdi
f27b(5): mov %rax,0x28(%rsp)
f280(3): mov %rdx,%rax
f283(3): mul %rax,%rdi,%rdx
f286(2): jo 0x1b(%rip)
f288(3): test %rax,%rax
f28b(2): js 0xffffffae(%rip)
f28d(3): test %rsi,%rsi
f290(2): jnz 0xffffffa9(%rip)
f292(5): lea 0x1(%r12),%rax
f297(5): mov %rax,0x38(%rsp)
f29c(5): jmp 0xffffff40(%rip)
f2a1(5): mov $0x1,%esi
f2a6(2): jmp 0xffffffe2(%rip)

"savedir" :
f2b0(2): push %r12
f2b2(1): push %rbp
f2b3(2): mov %esi,%ebp
f2b5(1): push %rbx
f2b6(5): call 0x485a(%rip)
f2bb(3): test %rax,%rax
f2be(2): jz 0x2a(%rip)
f2c0(2): mov %ebp,%esi
f2c2(3): mov %rax,%rbx
f2c5(3): mov %rax,%rdi
f2c8(5): call 0xfffffc68(%rip)
f2cd(3): mov %rbx,%rdi
f2d0(3): mov %rax,%rbp
f2d3(5): call 0xffff35cd(%rip)
f2d8(2): test %eax,%eax
f2da(2): jnz 0x16(%rip)
f2dc(3): mov %rbp,%rax
f2df(1): pop %rbx
f2e0(1): pop %rbp
f2e1(2): pop %r12
f2e3(1): ret near (%rsp)
f2e4(4): nop 0x0(%rax)
f2e8(2): xor %ebp,%ebp
f2ea(2): jmp 0xfffffff2(%rip)
f2ec(4): nop 0x0(%rax)
f2f0(5): call 0xffff32b0(%rip)
f2f5(3): mov (%rax),%r12d
f2f8(3): mov %rax,%rbx
f2fb(3): mov %rbp,%rdi
f2fe(5): call 0xffff3982(%rip)
f303(2): xor %ebp,%ebp
f305(3): mov %r12d,(%rbx)
f308(2): jmp 0xffffffd4(%rip)

"try_nocreate" :
f310(1): push %rbx
f311(3): mov %rdi,%rsi
f314(5): mov $0x1,%edi
f319(7): sub $0xa0,%rsp
f320(3): mov %rsp,%rdx
f323(9): mov $0x28,%rax
f32c(8): mov %rax,0x98(%rsp)
f334(2): xor %eax,%eax
f336(5): call 0xffff342a(%rip)
f33b(2): mov %eax,%ebx
f33d(5): call 0xffff3263(%rip)
f342(2): test %ebx,%ebx
f344(2): jz 0x1c(%rip)
f346(2): mov (%rax),%edx
f348(3): cmp $0x4b,%edx
f34b(2): jz 0x15(%rip)
f34d(2): xor %eax,%eax
f34f(3): cmp $0x2,%edx
f352(3): setnz %al
f355(2): neg %eax
f357(2): jmp 0x14(%rip)
f359(7): nop 0x0(%rax)
f360(6): mov $0x11,(%rax)
f366(5): mov $0xffffffff,%eax
f36b(8): mov 0x98(%rsp),%rcx
f373(9): xor $0x28,%rcx
f37c(2): jnz 0xb(%rip)
f37e(7): add $0xa0,%rsp
f385(1): pop %rbx
f386(1): ret near (%rsp)
f387(5): call 0xffff33f9(%rip)

"try_dir" :
f390(5): mov $0x1c0,%esi
f395(5): jmp 0xffff327b(%rip)

"try_file" :
f3a0(2): mov (%rsi),%esi
f3a2(5): mov $0x180,%edx
f3a7(2): xor %eax,%eax
f3a9(4): and $0x3c,%sil
f3ad(4): or $0xc2,%sil
f3b1(5): jmp 0xffff377f(%rip)

"try_tempname_len" :
f3c0(2): push %r15
f3c2(2): push %r14
f3c4(3): mov %rdi,%r15
f3c7(2): push %r13
f3c9(2): push %r12
f3cb(3): mov %r8,%r14
f3ce(1): push %rbp
f3cf(1): push %rbx
f3d0(2): mov %esi,%ebp
f3d2(4): sub $0x38,%rsp
f3d6(5): mov %rdx,0x18(%rsp)
f3db(4): mov %rdi,(%rsp)
f3df(5): mov %rcx,0x20(%rsp)
f3e4(5): call 0xffff31bc(%rip)
f3e9(5): mov %rax,0x8(%rsp)
f3ee(2): mov (%rax),%eax
f3f0(3): mov %r15,%rdi
f3f3(4): mov %eax,0x2c(%rsp)
f3f7(5): call 0xffff3359(%rip)
f3fc(3): movsxd %ebp,%rsi
f3ff(4): lea 0x0(%rsi,%r14,1),%rdx
f403(3): cmp %rax,%rdx
f406(6): jnbe 0x115(%rip)
f40c(3): sub %r14,%rax
f40f(3): mov %rax,%rbx
f412(3): sub %rsi,%rbx
f415(7): lea 0x747f(%rip),%rsi
f41c(4): lea 0x0(%r15,%rbx,1),%rax
f420(3): mov %rax,%rdi
f423(5): mov %rax,0x10(%rsp)
f428(5): call 0xffff3468(%rip)
f42d(3): cmp %rax,%r14
f430(6): jnbe 0xeb(%rip)
f436(2): xor %edi,%edi
f438(3): mov %r14,%rsi
f43b(5): call 0x4a05(%rip)
f440(3): test %rax,%rax
f443(3): mov %rax,%rbp
f446(6): jz 0xe7(%rip)
f44c(4): mov (%rsp),%rax
f450(7): lea 0x7b89(%rip),%r12
f457(6): mov $0x3a2f8,%r13d
f45d(3): add %r14,%rax
f460(3): add %rax,%rbx
f463(5): nop 0x0(%rax,%rax,1)
f468(3): test %r14,%r14
f46b(5): mov 0x10(%rsp),%r15
f470(2): jz 0x27(%rip)
f472(6): nop 0x0(%rax,%rax,1)
f478(5): mov $0x3d,%esi
f47d(3): mov %rbp,%rdi
f480(4): add $0x1,%r15
f484(5): call 0x4a0c(%rip)
f489(5): movzx 0x0(%r12,%rax,1),%eax
f48e(4): mov %al,0xffffffff(%r15)
f492(3): cmp %rbx,%r15
f495(2): jnz 0xffffffe3(%rip)
f497(5): mov 0x18(%rsp),%rsi
f49c(4): mov (%rsp),%rdi
f4a0(5): mov 0x20(%rsp),%rax
f4a5(2): call %rax
f4a7(2): test %eax,%eax
f4a9(2): mov %eax,%edx
f4ab(2): jns 0x2e(%rip)
f4ad(5): mov 0x8(%rsp),%rax
f4b2(2): mov (%rax),%ecx
f4b4(3): cmp $0x11,%ecx
f4b7(2): jnz 0x5d(%rip)
f4b9(4): sub $0x1,%r13d
f4bd(2): jnz 0xffffffab(%rip)
f4bf(3): mov %rbp,%rdi
f4c2(5): call 0x4b0e(%rip)
f4c7(5): mov 0x8(%rsp),%rax
f4cc(5): mov $0xffffffff,%edx
f4d1(6): mov $0x11,(%rax)
f4d7(2): jmp 0x2c(%rip)
f4d9(5): mov 0x8(%rsp),%rcx
f4de(4): mov 0x2c(%rsp),%eax
f4e2(2): mov %eax,(%rcx)
f4e4(2): mov %eax,%ecx
f4e6(3): mov %rbp,%rdi
f4e9(4): mov %edx,0x10(%rsp)
f4ed(3): mov %ecx,(%rsp)
f4f0(5): call 0x4ae0(%rip)
f4f5(5): mov 0x8(%rsp),%rax
f4fa(3): mov (%rsp),%ecx
f4fd(4): mov 0x10(%rsp),%edx
f501(2): mov %ecx,(%rax)
f503(4): add $0x38,%rsp
f507(2): mov %edx,%eax
f509(1): pop %rbx
f50a(1): pop %rbp
f50b(2): pop %r12
f50d(2): pop %r13
f50f(2): pop %r14
f511(2): pop %r15
f513(1): ret near (%rsp)
f514(5): mov $0xffffffff,%edx
f519(2): jmp 0xffffffcd(%rip)
f51b(5): mov 0x8(%rsp),%rax
f520(5): mov $0xffffffff,%edx
f525(6): mov $0x16,(%rax)
f52b(2): jmp 0xffffffd8(%rip)
f52d(5): mov $0xffffffff,%edx
f532(2): jmp 0xffffffd1(%rip)

"gen_tempname_len" :
f540(4): sub $0x18,%rsp
f544(3): cmp $0x1,%ecx
f547(4): mov %edx,0xc(%rsp)
f54b(2): jz 0x65(%rip)
f54d(3): cmp $0x2,%ecx
f550(2): jz 0x28(%rip)
f552(2): test %ecx,%ecx
f554(2): jz 0x3c(%rip)
f556(7): lea 0x7a63(%rip),%rcx
f55d(7): lea 0x7a04(%rip),%rsi
f564(7): lea 0x7a25(%rip),%rdi
f56b(5): mov $0x147,%edx
f570(5): call 0xffff32b0(%rip)
f575(3): nop (%rax)
f578(5): lea 0xc(%rsp),%rdx
f57d(7): lea 0xfffffd8c(%rip),%rcx
f584(5): call 0xfffffe3c(%rip)
f589(4): add $0x18,%rsp
f58d(1): ret near (%rsp)
f58e(2): nop 
f590(5): lea 0xc(%rsp),%rdx
f595(7): lea 0xfffffe04(%rip),%rcx
f59c(5): call 0xfffffe24(%rip)
f5a1(4): add $0x18,%rsp
f5a5(1): ret near (%rsp)
f5a6(a): nop 0x0(%rax,%rax,1)
f5b0(5): lea 0xc(%rsp),%rdx
f5b5(7): lea 0xfffffdd4(%rip),%rcx
f5bc(5): call 0xfffffe04(%rip)
f5c1(4): add $0x18,%rsp
f5c5(1): ret near (%rsp)

"gen_tempname" :
f5d0(6): mov $0x6,%r8d
f5d6(5): jmp 0xffffff6a(%rip)

"try_tempname" :
f5e0(6): mov $0x6,%r8d
f5e6(5): jmp 0xfffffdda(%rip)

"fd_safer" :
f5f0(2): push %r13
f5f2(2): push %r12
f5f4(1): push %rbp
f5f5(1): push %rbx
f5f6(2): mov %edi,%ebx
f5f8(4): sub $0x8,%rsp
f5fc(3): cmp $0x2,%edi
f5ff(2): jnbe 0x23(%rip)
f601(5): call 0x549f(%rip)
f606(3): mov %eax,%r12d
f609(5): call 0xffff2f97(%rip)
f60e(3): mov (%rax),%r13d
f611(3): mov %rax,%rbp
f614(2): mov %ebx,%edi
f616(5): call 0xffff325a(%rip)
f61b(3): mov %r12d,%ebx
f61e(4): mov %r13d,0x0(%rbp)
f622(4): add $0x8,%rsp
f626(2): mov %ebx,%eax
f628(1): pop %rbx
f629(1): pop %rbp
f62a(2): pop %r12
f62c(2): pop %r13
f62e(1): ret near (%rsp)

"dev_info_hash" :
f630(3): mov (%rdi),%rax
f633(2): xor %edx,%edx
f635(3): div %rsi,%rax
f638(3): mov %rdx,%rax
f63b(1): ret near (%rsp)

"dev_info_compare" :
f640(3): mov (%rsi),%rax
f643(3): cmp %rax,(%rdi)
f646(3): setz %al
f649(1): ret near (%rsp)

"utimecmpat" :
f650(2): push %r15
f652(2): push %r14
f654(2): push %r13
f656(2): push %r12
f658(1): push %rbp
f659(1): push %rbx
f65a(3): mov %r8d,%ebx
f65d(3): and $0x1,%ebx
f660(7): sub $0x128,%rsp
f667(4): mov 0x60(%rcx),%r13
f66b(4): mov 0x58(%rdx),%r14
f66f(9): mov $0x28,%rax
f678(8): mov %rax,0x118(%rsp)
f680(2): xor %eax,%eax
f682(2): test %ebx,%ebx
f684(4): mov 0x58(%rcx),%r12
f688(4): mov 0x60(%rdx),%r15
f68c(3): mov %r13d,%r9d
f68f(6): jz 0xe9(%rip)
f695(3): cmp %r12,%r14
f698(3): mov %edi,%r10d
f69b(5): setz 0x38(%rsp)
f6a0(5): movzx 0x38(%rsp),%edi
f6a5(3): cmp %r13d,%r15d
f6a8(3): setz %al
f6ab(3): and %dil,%al
f6ae(4): mov %al,0x8(%rsp)
f6b2(6): jnz 0x10e(%rip)
f6b8(5): lea 0xffffffff(%r12),%rax
f6bd(3): cmp %r14,%rax
f6c0(6): jnle 0x108(%rip)
f6c6(4): lea 0xffffffff(%r14),%rax
f6ca(3): cmp %r12,%rax
f6cd(6): jnle 0xc2(%rip)
f6d3(3): mov %rdx,%rbp
f6d6(7): mov 0x20d003(%rip),%rdx
f6dd(3): mov %rsi,%r11
f6e0(3): test %rdx,%rdx
f6e3(6): jz 0x59d(%rip)
f6e9(7): mov 0x20cfe8(%rip),%rsi
f6f0(3): test %rsi,%rsi
f6f3(6): jz 0xdd(%rip)
f6f9(4): mov 0x0(%rbp),%rax
f6fd(3): mov %rdx,%rdi
f700(5): mov %r11,0x28(%rsp)
f705(5): mov %r10d,0x20(%rsp)
f70a(5): mov %r9d,0x18(%rsp)
f70f(3): mov %rax,(%rsi)
f712(5): call 0xffffd0de(%rip)
f717(3): test %rax,%rax
f71a(5): mov %rax,0x10(%rsp)
f71f(5): mov 0x18(%rsp),%r9d
f724(5): mov 0x20(%rsp),%r10d
f729(5): mov 0x28(%rsp),%r11
f72e(6): jz 0xfa(%rip)
f734(7): cmp %rax,0x20cf9d(%rip)
f73b(6): jz 0x5a5(%rip)
f741(5): mov 0x10(%rsp),%rax
f746(4): cmp $0x0,0xc(%rax)
f74a(3): mov 0x8(%rax),%esi
f74d(4): mov %esi,0x18(%rsp)
f751(6): jz 0x159(%rip)
f757(2): xor %eax,%eax
f759(6): cmp $0x77359400,%esi
f75f(3): setz %al
f762(2): not %eax
f764(2): cwde 
f766(3): and %rax,%r12
f769(3): mov %r9d,%eax
f76c(3): mov %r13d,%r9d
f76f(1): cdq %eax
f770(2): idiv %esi,%eax
f772(3): sub %edx,%r9d
f775(3): nop (%rax)
f778(3): cmp %r14,%r12
f77b(2): jnle 0x4d(%rip)
f77d(5): mov $0x1,%ebx
f782(2): jl 0xd(%rip)
f784(3): cmp %r15d,%r9d
f787(2): jnle 0x41(%rip)
f789(3): setl %bl
f78c(3): movzx %bl,%ebx
f78f(8): mov 0x118(%rsp),%rsi
f797(9): xor $0x28,%rsi
f7a0(2): mov %ebx,%eax
f7a2(6): jnz 0x5d6(%rip)
f7a8(7): add $0x128,%rsp
f7af(1): pop %rbx
f7b0(1): pop %rbp
f7b1(2): pop %r12
f7b3(2): pop %r13
f7b5(2): pop %r14
f7b7(2): pop %r15
f7b9(1): ret near (%rsp)
f7ba(6): nop 0x0(%rax,%rax,1)
f7c0(2): xor %ebx,%ebx
f7c2(2): jmp 0xffffffcd(%rip)
f7c4(4): nop 0x0(%rax)
f7c8(5): mov $0xffffffff,%ebx
f7cd(2): jmp 0xffffffc2(%rip)
f7cf(1): nop 
f7d0(5): mov $0x10,%edi
f7d5(5): mov %r11,0x28(%rsp)
f7da(5): mov %r10d,0x20(%rsp)
f7df(5): mov %r9d,0x18(%rsp)
f7e4(5): mov %rdx,0x10(%rsp)
f7e9(5): call 0xffff3217(%rip)
f7ee(3): test %rax,%rax
f7f1(3): mov %rax,%rsi
f7f4(7): mov %rax,0x20cedd(%rip)
f7fb(5): mov 0x10(%rsp),%rdx
f800(5): mov 0x18(%rsp),%r9d
f805(5): mov 0x20(%rsp),%r10d
f80a(5): mov 0x28(%rsp),%r11
f80f(2): jz 0x29(%rip)
f811(7): mov $0x77359400,0x8(%rax)
f818(4): mov $0x0,0xc(%rax)
f81c(5): jmp 0xfffffedd(%rip)
f821(7): nop 0x0(%rax)
f828(7): mov 0x20ceb1(%rip),%rdx
f82f(3): test %rdx,%rdx
f832(6): jz 0x4a0(%rip)
f838(5): lea 0x50(%rsp),%rcx
f83d(4): mov 0x0(%rbp),%rax
f841(3): mov %rdx,%rdi
f844(5): mov %r11,0x30(%rsp)
f849(5): mov %r10d,0x28(%rsp)
f84e(3): mov %rcx,%rsi
f851(5): mov %r9d,0x20(%rsp)
f856(5): mov %rcx,0x18(%rsp)
f85b(5): mov %rax,0x50(%rsp)
f860(5): call 0xffffc520(%rip)
f865(3): test %rax,%rax
f868(5): mov %rax,0x10(%rsp)
f86d(5): mov 0x18(%rsp),%rcx
f872(5): mov 0x20(%rsp),%r9d
f877(5): mov 0x28(%rsp),%r10d
f87c(5): mov 0x30(%rsp),%r11
f881(6): jnz 0xfffffec0(%rip)
f887(9): nop 0x0(%rax,%rax,1)
f890(8): mov $0x77359400,0x58(%rsp)
f898(5): mov $0x0,0x5c(%rsp)
f89d(8): mov $0x77359400,0x18(%rsp)
f8a5(5): mov %rcx,0x10(%rsp)
f8aa(4): mov 0x50(%rbp),%rcx
f8ae(5): mov $0x66666667,%eax
f8b3(4): mov 0x70(%rbp),%rsi
f8b7(2): imul %eax,%ecx,%edx
f8b9(2): mov %ecx,%eax
f8bb(5): mov %rcx,0x28(%rsp)
f8c0(3): sar $0x1f,%eax
f8c3(3): sar $0x2,%edx
f8c6(2): sub %eax,%edx
f8c8(3): lea 0x0(%rdx,%rdx,4),%eax
f8cb(4): mov %edx,0x20(%rsp)
f8cf(2): add %eax,%eax
f8d1(2): sub %eax,%ecx
f8d3(5): mov $0x66666667,%eax
f8d8(2): imul %eax,%esi,%edx
f8da(2): mov %esi,%eax
f8dc(3): sar $0x1f,%eax
f8df(3): sar $0x2,%edx
f8e2(2): mov %edx,%edi
f8e4(2): sub %eax,%edi
f8e6(3): lea 0x0(%rdi,%rdi,4),%eax
f8e9(2): add %eax,%eax
f8eb(2): sub %eax,%esi
f8ed(5): mov $0x66666667,%eax
f8f2(3): imul %eax,%r15d,%edx
f8f5(3): mov %r15d,%eax
f8f8(2): or %esi,%ecx
f8fa(3): sar $0x1f,%eax
f8fd(3): mov %r15d,%esi
f900(3): sar $0x2,%edx
f903(3): mov %edx,%r8d
f906(3): sub %eax,%r8d
f909(4): lea 0x0(%r8,%r8,4),%eax
f90d(2): add %eax,%eax
f90f(2): sub %eax,%esi
f911(2): or %esi,%ecx
f913(6): jnz 0x355(%rip)
f919(5): cmp $0xa,0x18(%rsp)
f91e(4): mov 0x48(%rbp),%rax
f922(2): mov %edi,%ecx
f924(4): mov 0x20(%rsp),%edx
f928(3): mov %r8d,%esi
f92b(5): mov %rax,0x48(%rsp)
f930(4): mov %edx,0x30(%rsp)
f934(6): jle 0x414(%rip)
f93a(5): mov $0x66666667,%eax
f93f(2): imul %eax,%edi,%edx
f941(2): mov %edi,%eax
f943(3): sar $0x1f,%eax
f946(3): sar $0x2,%edx
f949(2): sub %eax,%edx
f94b(3): lea 0x0(%rdx,%rdx,4),%eax
f94e(2): add %eax,%eax
f950(2): sub %eax,%edi
f952(5): mov $0x66666667,%eax
f957(4): imul %eax,0x20(%rsp),%edx
f95b(4): mov 0x20(%rsp),%eax
f95f(3): sar $0x1f,%eax
f962(3): sar $0x2,%edx
f965(2): sub %eax,%edx
f967(3): lea 0x0(%rdx,%rdx,4),%eax
f96a(4): mov 0x20(%rsp),%edx
f96e(8): mov $0xa,0x20(%rsp)
f976(2): add %eax,%eax
f978(2): sub %eax,%edx
f97a(5): mov $0x66666667,%eax
f97f(2): or %edx,%edi
f981(3): imul %eax,%r8d,%edx
f984(3): mov %r8d,%eax
f987(4): mov %edi,0x3c(%rsp)
f98b(3): sar $0x1f,%eax
f98e(5): mov $0x66666667,%edi
f993(3): sar $0x2,%edx
f996(2): sub %eax,%edx
f998(3): lea 0x0(%rdx,%rdx,4),%eax
f99b(5): mov $0x8,%edx
f9a0(2): add %eax,%eax
f9a2(3): sub %eax,%r8d
f9a5(4): mov 0x3c(%rsp),%eax
f9a9(3): or %r8d,%eax
f9ac(6): jnz 0x3b8(%rip)
f9b2(5): mov %r9d,0x3c(%rsp)
f9b7(5): mov %r14,0x40(%rsp)
f9bc(6): mov $0xa,%r9d
f9c2(5): mov 0x30(%rsp),%r8d
f9c7(5): mov %r12,0x20(%rsp)
f9cc(3): mov %edx,%r14d
f9cf(5): mov %rbp,0x30(%rsp)
f9d4(3): mov %r8d,%eax
f9d7(4): sar $0x1f,%r8d
f9db(4): lea 0x0(%r9,%r9,4),%ebp
f9df(2): imul %eax,%edi,%edx
f9e1(2): mov %ecx,%eax
f9e3(3): sar $0x1f,%ecx
f9e6(2): add %ebp,%ebp
f9e8(3): mov %ebp,%r9d
f9eb(3): sar $0x2,%edx
f9ee(3): sub %r8d,%edx
f9f1(3): mov %edx,%r8d
f9f4(2): imul %eax,%edi,%edx
f9f6(2): mov %esi,%eax
f9f8(3): sar $0x1f,%esi
f9fb(3): sar $0x2,%edx
f9fe(2): sub %ecx,%edx
fa00(2): mov %edx,%ecx
fa02(2): imul %eax,%edi,%edx
fa04(3): sar $0x2,%edx
fa07(2): sub %esi,%edx
fa09(4): cmp 0x18(%rsp),%ebp
fa0d(2): mov %edx,%esi
fa0f(6): jnl 0x2e1(%rip)
fa15(3): mov %r8d,%eax
fa18(3): mov %r8d,%r12d
fa1b(2): imul %eax,%edi,%edx
fa1d(3): mov %r8d,%eax
fa20(3): sar $0x1f,%eax
fa23(3): sar $0x2,%edx
fa26(2): sub %eax,%edx
fa28(3): lea 0x0(%rdx,%rdx,4),%eax
fa2b(2): add %eax,%eax
fa2d(3): sub %eax,%r12d
fa30(2): mov %ecx,%eax
fa32(2): imul %eax,%edi,%edx
fa34(2): mov %ecx,%eax
fa36(3): sar $0x1f,%eax
fa39(3): sar $0x2,%edx
fa3c(2): sub %eax,%edx
fa3e(3): lea 0x0(%rdx,%rdx,4),%eax
fa41(2): mov %ecx,%edx
fa43(2): add %eax,%eax
fa45(2): sub %eax,%edx
fa47(2): mov %esi,%eax
fa49(3): or %edx,%r12d
fa4c(2): imul %eax,%edi,%edx
fa4e(2): mov %esi,%eax
fa50(3): sar $0x1f,%eax
fa53(3): sar $0x2,%edx
fa56(2): sub %eax,%edx
fa58(3): lea 0x0(%rdx,%rdx,4),%eax
fa5b(2): mov %esi,%edx
fa5d(2): add %eax,%eax
fa5f(2): sub %eax,%edx
fa61(3): or %edx,%r12d
fa64(6): jnz 0x28c(%rip)
fa6a(4): sub $0x1,%r14d
fa6e(6): jnz 0xffffff66(%rip)
fa74(5): mov 0x40(%rsp),%r14
fa79(5): mov 0x30(%rsp),%rbp
fa7e(5): mov 0x48(%rsp),%rax
fa83(5): mov 0x20(%rsp),%r12
fa88(5): mov 0x3c(%rsp),%r9d
fa8d(3): or %r14,%rax
fa90(4): or 0x68(%rbp),%rax
fa94(2): test $0x1,%al
fa96(5): mov 0x10(%rsp),%rax
fa9b(6): jz 0x28d(%rip)
faa1(7): mov $0x3b9aca00,0x8(%rax)
faa8(8): mov $0x3b9aca00,0x20(%rsp)
fab0(3): mov %r12,%rax
fab3(3): cmp %r12,%r14
fab6(6): jnle 0xfffffcd9(%rip)
fabc(3): cmp %r13d,%r15d
fabf(2): jl 0xd(%rip)
fac1(5): cmp $0x0,0x38(%rsp)
fac6(6): jnz 0xfffffcc9(%rip)
facc(3): cmp %rax,%r14
facf(6): jl 0xfffffcf9(%rip)
fad5(2): jnz 0x18(%rip)
fad7(3): mov %r9d,%eax
fada(1): cdq %eax
fadb(4): idiv 0x20(%rsp),%eax
fadf(3): mov %r13d,%eax
fae2(2): sub %edx,%eax
fae4(3): cmp %r15d,%eax
fae7(6): jnle 0xfffffce1(%rip)
faed(5): mov 0x48(%rsp),%rax
faf2(5): mov $0x38e38e39,%edx
faf7(5): lea 0x60(%rsp),%rbp
fafc(3): mov %r11,%rsi
faff(3): mov %r10d,%edi
fb02(5): mov $0x100,%ecx
fb07(5): mov %r9d,0x18(%rsp)
fb0c(5): mov %r10d,0x38(%rsp)
fb11(5): mov %rax,0x60(%rsp)
fb16(5): movsxd 0x28(%rsp),%rax
fb1b(5): mov %rax,0x68(%rsp)
fb20(5): movzx 0x8(%rsp),%eax
fb25(5): mov %r11,0x8(%rsp)
fb2a(3): or %r14,%rax
fb2d(5): mov %rax,0x70(%rsp)
fb32(4): mov 0x20(%rsp),%eax
fb36(2): mul %eax,%edx,%edx
fb38(2): mov %edx,%eax
fb3a(3): mov %rbp,%rdx
fb3d(2): shr $0x1,%eax
fb3f(3): add %r15d,%eax
fb42(2): cwde 
fb44(5): mov %rax,0x78(%rsp)
fb49(5): call 0xffff2a37(%rip)
fb4e(2): test %eax,%eax
fb50(5): mov 0x38(%rsp),%r10d
fb55(5): mov 0x8(%rsp),%r11
fb5a(5): mov 0x18(%rsp),%r9d
fb5f(2): jz 0xc(%rip)
fb61(5): mov $0xfffffffe,%ebx
fb66(5): jmp 0xfffffc29(%rip)
fb6b(8): lea 0x80(%rsp),%rcx
fb73(3): mov %r11,%rdx
fb76(6): mov $0x100,%r8d
fb7c(3): mov %r10d,%esi
fb7f(5): mov $0x1,%edi
fb84(5): mov %r9d,0x18(%rsp)
fb89(5): mov %r11,0x8(%rsp)
fb8e(5): mov %r10d,0x38(%rsp)
fb93(5): call 0xffff2c2d(%rip)
fb98(8): mov 0xe0(%rsp),%rcx
fba0(3): mov %eax,%r8d
fba3(8): mov 0xd8(%rsp),%rax
fbab(3): movsxd %r15d,%rdx
fbae(5): mov 0x38(%rsp),%r10d
fbb3(5): mov 0x8(%rsp),%r11
fbb8(5): mov 0x18(%rsp),%r9d
fbbd(3): xor %rdx,%rcx
fbc0(3): xor %r14,%rax
fbc3(3): or %rcx,%rax
fbc6(3): movsxd %r8d,%rcx
fbc9(3): or %rcx,%rax
fbcc(6): jnz 0x1b1(%rip)
fbd2(7): mov 0xd8(%rsp),%ecx
fbd9(5): mov $0xa,%esi
fbde(3): and $0x1,%ecx
fbe1(6): imul %ecx,$0x3b9aca00,%ecx
fbe7(7): add 0xe0(%rsp),%ecx
fbee(2): mov %ecx,%eax
fbf0(1): cdq %eax
fbf1(2): idiv %esi,%eax
fbf3(2): test %edx,%edx
fbf5(6): jnz 0x1d0(%rip)
fbfb(5): cmp $0xa,0x20(%rsp)
fc00(2): jz 0x3d(%rip)
fc02(6): mov $0x9,%r8d
fc08(5): mov $0xa,%esi
fc0d(5): mov $0xa,%edi
fc12(2): jmp 0xb(%rip)
fc14(3): imul %esi,$0xa,%esi
fc17(4): cmp 0x20(%rsp),%esi
fc1b(2): jz 0x22(%rip)
fc1d(2): mov %ecx,%eax
fc1f(1): cdq %eax
fc20(2): idiv %edi,%eax
fc22(1): cdq %eax
fc23(2): mov %eax,%ecx
fc25(2): idiv %edi,%eax
fc27(2): test %edx,%edx
fc29(6): jnz 0x193(%rip)
fc2f(4): sub $0x1,%r8d
fc33(2): jnz 0xffffffe1(%rip)
fc35(8): mov $0x77359400,0x20(%rsp)
fc3d(4): mov 0x20(%rsp),%esi
fc41(2): xor %eax,%eax
fc43(6): cmp $0x77359400,%esi
fc49(2): mov %esi,%ebx
fc4b(3): setz %al
fc4e(2): not %eax
fc50(2): cwde 
fc52(3): and %rax,%r12
fc55(3): mov %r9d,%eax
fc58(3): mov %r13d,%r9d
fc5b(1): cdq %eax
fc5c(2): idiv %esi,%eax
fc5e(3): sub %edx,%r9d
fc61(7): nop 0x0(%rax)
fc68(5): mov 0x10(%rsp),%rax
fc6d(3): mov %ebx,0x8(%rax)
fc70(4): mov $0x1,0xc(%rax)
fc74(5): jmp 0xfffffb04(%rip)
fc79(7): nop 0x0(%rax)
fc80(7): mov 0x20c341(%rip),%r8
fc87(7): lea 0xfffff9a2(%rip),%rdx
fc8e(7): lea 0xfffff9ab(%rip),%rcx
fc95(5): mov %rsi,0x20(%rsp)
fc9a(5): mov $0x10,%edi
fc9f(2): xor %esi,%esi
fca1(5): mov %r10d,0x18(%rsp)
fca6(5): mov %r13d,0x10(%rsp)
fcab(5): call 0xffffc345(%rip)
fcb0(3): test %rax,%rax
fcb3(3): mov %rax,%rdx
fcb6(7): mov %rax,0x20ca23(%rip)
fcbd(5): mov 0x10(%rsp),%r9d
fcc2(5): mov 0x18(%rsp),%r10d
fcc7(5): mov 0x20(%rsp),%r11
fccc(6): jnz 0xfffffa1d(%rip)
fcd2(5): lea 0x50(%rsp),%rcx
fcd7(5): jmp 0xfffffbb9(%rip)
fcdc(4): nop 0x0(%rax)
fce0(b): mov $0x0,0x20c9ed(%rip)
fceb(5): jmp 0xfffffa56(%rip)
fcf0(6): cmp $0x77359400,%ebp
fcf6(5): mov 0x20(%rsp),%r12
fcfb(5): mov 0x10(%rsp),%rsi
fd00(5): setz 0x8(%rsp)
fd05(5): movzx 0x8(%rsp),%eax
fd0a(5): mov %r9d,0x20(%rsp)
fd0f(5): mov 0x40(%rsp),%r14
fd14(5): mov 0x3c(%rsp),%r9d
fd19(3): mov %ebp,0x8(%rsi)
fd1c(2): not %eax
fd1e(2): cwde 
fd20(3): and %r12,%rax
fd23(5): jmp 0xfffffd90(%rip)
fd28(7): mov $0x77359400,0x8(%rax)
fd2f(3): mov %r12,%rax
fd32(5): mov $0x1,0x8(%rsp)
fd37(4): and $0xfffffffe,%rax
fd3b(8): mov $0x77359400,0x20(%rsp)
fd43(5): jmp 0xfffffd70(%rip)
fd48(5): mov 0x10(%rsp),%rax
fd4d(8): mov $0xa,0x20(%rsp)
fd55(7): mov $0xa,0x8(%rax)
fd5c(3): mov %r12,%rax
fd5f(5): jmp 0xfffffd54(%rip)
fd64(5): mov 0x10(%rsp),%rax
fd69(7): mov $0xa,0x8(%rax)
fd70(3): mov %r12,%rax
fd73(5): jmp 0xfffffd40(%rip)
fd78(5): call 0xffff2a08(%rip)
fd7d(5): mov %rdx,0x78(%rsp)
fd82(5): mov $0x100,%ecx
fd87(3): mov %rbp,%rdx
fd8a(3): mov %r11,%rsi
fd8d(3): mov %r10d,%edi
fd90(5): mov %r8d,0x8(%rsp)
fd95(5): mov %r9d,0x38(%rsp)
fd9a(5): mov %r14,0x70(%rsp)
fd9f(5): call 0xffff27e1(%rip)
fda4(5): mov 0x8(%rsp),%r8d
fda9(5): mov 0x38(%rsp),%r9d
fdae(3): test %r8d,%r8d
fdb1(6): jnz 0xfffffdb0(%rip)
fdb7(5): jmp 0xfffffe1b(%rip)
fdbc(4): mov %esi,0x20(%rsp)
fdc0(5): jmp 0xfffffe7d(%rip)
fdc5(4): mov %ebx,0x20(%rsp)
fdc9(5): jmp 0xfffffe74(%rip)

"utimecmp" :
fdd0(3): mov %ecx,%r8d
fdd3(3): mov %rdx,%rcx
fdd6(3): mov %rsi,%rdx
fdd9(3): mov %rdi,%rsi
fddc(5): mov $0xffffff9c,%edi
fde1(5): jmp 0xfffff86f(%rip)

"update_timespec" :
fdf0(1): push %rbp
fdf1(1): push %rbx
fdf2(3): mov %rdi,%rbp
fdf5(4): sub $0x18,%rsp
fdf9(3): mov (%rsi),%rbx
fdfc(4): mov 0x8(%rbx),%rax
fe00(4): mov 0x18(%rbx),%rdx
fe04(6): cmp $0x3ffffffe,%rax
fe0a(2): jz 0x66(%rip)
fe0c(6): cmp $0x3fffffff,%rax
fe12(2): jz 0x1e(%rip)
fe14(7): cmp $0x3ffffffe,%rdx
fe1b(2): jz 0x33(%rip)
fe1d(2): xor %eax,%eax
fe1f(7): cmp $0x3fffffff,%rdx
fe26(2): jz 0x72(%rip)
fe28(4): add $0x18,%rsp
fe2c(1): pop %rbx
fe2d(1): pop %rbp
fe2e(1): ret near (%rsp)
fe2f(1): nop 
fe30(7): cmp $0x3fffffff,%rdx
fe37(2): jz 0x81(%rip)
fe39(3): mov %rbx,%rdi
fe3c(5): call 0x3d74(%rip)
fe41(4): mov 0x18(%rbx),%rdx
fe45(7): cmp $0x3ffffffe,%rdx
fe4c(2): jnz 0xffffffd1(%rip)
fe4e(4): mov 0x60(%rbp),%rax
fe52(4): mov 0x58(%rbp),%rdx
fe56(4): mov %rax,0x18(%rbx)
fe5a(4): mov %rdx,0x10(%rbx)
fe5e(4): add $0x18,%rsp
fe62(2): xor %eax,%eax
fe64(1): pop %rbx
fe65(1): pop %rbp
fe66(1): ret near (%rsp)
fe67(9): nop 0x0(%rax,%rax,1)
fe70(7): cmp $0x3ffffffe,%rdx
fe77(5): mov $0x1,%eax
fe7c(2): jz 0xffffffac(%rip)
fe7e(4): mov 0x50(%rdi),%rax
fe82(4): mov 0x48(%rdi),%rcx
fe86(4): mov %rax,0x8(%rbx)
fe8a(2): xor %eax,%eax
fe8c(7): cmp $0x3fffffff,%rdx
fe93(3): mov %rcx,(%rbx)
fe96(2): jnz 0xffffff92(%rip)
fe98(4): lea 0x10(%rbx),%rdi
fe9c(4): mov %al,0xf(%rsp)
fea0(5): call 0x3d10(%rip)
fea5(5): movzx 0xf(%rsp),%eax
feaa(4): add $0x18,%rsp
feae(1): pop %rbx
feaf(1): pop %rbp
feb0(1): ret near (%rsp)
feb1(7): nop 0x0(%rax)
feb8(7): mov $0x0,(%rsi)
febf(2): xor %eax,%eax
fec1(5): jmp 0xffffff67(%rip)

"validate_timespec" :
fed0(4): mov 0x8(%rdi),%r9
fed4(7): lea 0xc0000002(%r9),%rcx
fedb(4): cmp $0x1,%rcx
fedf(2): jbe 0xb(%rip)
fee1(7): cmp $0x3b9ac9ff,%r9
fee8(2): jnbe 0x78(%rip)
feea(4): mov 0x18(%rdi),%rdx
feee(7): lea 0xc0000002(%rdx),%r8
fef5(4): cmp $0x1,%r8
fef9(2): jbe 0xb(%rip)
fefb(7): cmp $0x3b9ac9ff,%rdx
ff02(2): jnbe 0x5e(%rip)
ff04(2): xor %esi,%esi
ff06(3): xor %r10d,%r10d
ff09(4): cmp $0x1,%rcx
ff0d(2): jnbe 0x1c(%rip)
ff0f(2): xor %esi,%esi
ff11(7): cmp $0x3ffffffe,%r9
ff18(7): mov $0x0,(%rdi)
ff1f(4): setz %sil
ff23(6): mov $0x1,%r10d
ff29(4): cmp $0x1,%r8
ff2d(2): jnbe 0x1e(%rip)
ff2f(2): xor %eax,%eax
ff31(7): cmp $0x3ffffffe,%rdx
ff38(8): mov $0x0,0x10(%rdi)
ff40(3): setz %al
ff43(6): mov $0x1,%r10d
ff49(2): add %eax,%esi
ff4b(2): xor %eax,%eax
ff4d(3): cmp $0x1,%esi
ff50(3): setz %al
ff53(3): add %r10d,%eax
ff56(1): ret near (%rsp)
ff57(9): nop 0x0(%rax,%rax,1)
ff60(4): sub $0x8,%rsp
ff64(5): call 0xffff263c(%rip)
ff69(6): mov $0x16,(%rax)
ff6f(5): mov $0xffffffff,%eax
ff74(4): add $0x8,%rsp
ff78(1): ret near (%rsp)

"lutimensat" :
ff80(5): mov $0x100,%ecx
ff85(5): jmp 0xffff25fb(%rip)

"fdutimens" :
ff90(2): push %r14
ff92(2): push %r13
ff94(2): push %r12
ff96(1): push %rbp
ff97(3): mov %rsi,%r12
ff9a(1): push %rbx
ff9b(2): mov %edi,%ebx
ff9d(7): sub $0x110,%rsp
ffa4(9): mov $0x28,%rax
ffad(8): mov %rax,0x108(%rsp)
ffb5(2): xor %eax,%eax
ffb7(3): test %rdx,%rdx
ffba(6): jz 0x2c6(%rip)
ffc0(4): movdqu (%rdx),%xmm0
ffc4(5): lea 0x10(%rsp),%rdi
ffc9(5): movaps %xmm0,0x10(%rsp)
ffce(5): mov %rdi,0x8(%rsp)
ffd3(5): movdqu 0x10(%rdx),%xmm0
ffd8(5): movaps %xmm0,0x20(%rsp)
ffdd(5): call 0xfffffef3(%rip)
ffe2(2): test %eax,%eax
ffe4(3): mov %eax,%r13d
ffe7(6): js 0x3bc(%rip)
ffed(2): test %ebx,%ebx
ffef(2): jns 0xb(%rip)
fff1(3): test %r12,%r12
fff4(6): jz 0x3a4(%rip)
fffa(6): mov 0x20c6ec(%rip),%eax
10000(2): test %eax,%eax
10002(2): js 0x36(%rip)
10004(4): cmp $0x2,%r13d
10008(6): jz 0x208(%rip)
1000e(5): mov 0x8(%rsp),%rsi
10013(2): test %ebx,%ebx
10015(6): js 0x32b(%rip)
1001b(2): mov %ebx,%edi
1001d(5): call 0xffff2b73(%rip)
10022(3): cmp $0x0,%eax
10025(2): mov %eax,%ebp
10027(6): jle 0x336(%rip)
1002d(5): call 0xffff2573(%rip)
10032(6): mov $0x26,(%rax)
10038(3): test %r13d,%r13d
1003b(a): mov $0xffffffff,0x20c6a7(%rip)
10045(a): mov $0xffffffff,0x20c699(%rip)
1004f(6): jnz 0x161(%rip)
10055(5): mov 0x8(%rsp),%rsi
1005a(3): test %rsi,%rsi
1005d(6): jz 0x293(%rip)
10063(3): mov (%rsi),%rax
10066(4): mov 0x8(%rsi),%rdi
1006a(a): mov $0x2361183241434822607,%rcx
10074(5): lea 0x30(%rsp),%r13
10079(5): mov %rax,0x30(%rsp)
1007e(3): mov %rdi,%rax
10081(4): sar $0x3f,%rdi
10085(3): imul %rax,%rcx,%rdx
10088(4): mov 0x10(%rsi),%rax
1008c(4): mov 0x18(%rsi),%rsi
10090(5): mov %rax,0x40(%rsp)
10095(3): mov %rsi,%rax
10098(4): sar $0x3f,%rsi
1009c(4): sar $0x7,%rdx
100a0(3): sub %rdi,%rdx
100a3(5): mov %rdx,0x38(%rsp)
100a8(3): imul %rax,%rcx,%rdx
100ab(3): mov %rdx,%rcx
100ae(4): sar $0x7,%rcx
100b2(3): sub %rsi,%rcx
100b5(5): mov %rcx,0x48(%rsp)
100ba(2): test %ebx,%ebx
100bc(3): mov %r13,%rdx
100bf(6): js 0x1d9(%rip)
100c5(2): xor %esi,%esi
100c7(2): mov %ebx,%edi
100c9(5): call 0xffff2b97(%rip)
100ce(2): test %eax,%eax
100d0(2): mov %eax,%ebp
100d2(6): jnz 0x1fe(%rip)
100d8(3): test %r13,%r13
100db(6): jz 0x1cc(%rip)
100e1(8): cmp $0x7a11f,0x8(%r13)
100e9(4): setnle %r12b
100ed(8): cmp $0x7a11f,0x18(%r13)
100f5(4): setnle %r14b
100f9(3): test %r12b,%r12b
100fc(2): jnz 0xb(%rip)
100fe(3): test %r14b,%r14b
10101(6): jz 0x1a6(%rip)
10107(5): lea 0x70(%rsp),%rdx
1010c(2): mov %ebx,%esi
1010e(5): mov $0x1,%edi
10113(5): call 0xffff291d(%rip)
10118(2): test %eax,%eax
1011a(6): jnz 0x18d(%rip)
10120(8): mov 0xc8(%rsp),%rdx
10128(4): sub 0x10(%r13),%rdx
1012c(8): mov 0xb8(%rsp),%rax
10134(4): sub 0x0(%r13),%rax
10138(6): movdqa 0x0(%r13),%xmm0
1013e(4): cmp $0x1,%rdx
10142(3): setz %dl
10145(5): movaps %xmm0,0x50(%rsp)
1014a(3): and %edx,%r14d
1014d(4): cmp $0x1,%rax
10151(6): movdqa 0x10(%r13),%xmm0
10157(5): movaps %xmm0,0x60(%rsp)
1015c(6): jnz 0x254(%rip)
10162(3): test %r12b,%r12b
10165(6): jz 0x24b(%rip)
1016b(9): cmp $0x0,0xc0(%rsp)
10174(6): jnz 0x23c(%rip)
1017a(3): test %r14b,%r14b
1017d(9): mov $0x0,0x58(%rsp)
10186(2): jz 0x11(%rip)
10188(9): cmp $0x0,0xd0(%rsp)
10191(6): jz 0x237(%rip)
10197(5): lea 0x50(%rsp),%rdx
1019c(2): xor %esi,%esi
1019e(2): mov %ebx,%edi
101a0(5): call 0xffff2ac0(%rip)
101a5(2): xor %ebp,%ebp
101a7(5): jmp 0x100(%rip)
101ac(4): nop 0x0(%rax)
101b0(4): cmp $0x3,%r13d
101b4(2): jz 0x28(%rip)
101b6(2): test %ebx,%ebx
101b8(5): lea 0x70(%rsp),%rdx
101bd(6): js 0x143(%rip)
101c3(2): mov %ebx,%esi
101c5(5): mov $0x1,%edi
101ca(5): call 0xffff2866(%rip)
101cf(2): test %eax,%eax
101d1(3): setnz %al
101d4(2): test %al,%al
101d6(6): jnz 0x1cd(%rip)
101dc(6): cmp $0x0,0x8(%rsp)
101e2(6): jz 0x10e(%rip)
101e8(5): lea 0x8(%rsp),%rsi
101ed(5): lea 0x70(%rsp),%rdi
101f2(2): xor %ebp,%ebp
101f4(5): call 0xfffffbfc(%rip)
101f9(2): test %al,%al
101fb(6): jz 0xfffffe5a(%rip)
10201(5): jmp 0xa6(%rip)
10206(a): nop 0x0(%rax,%rax,1)
10210(2): test %ebx,%ebx
10212(5): lea 0x70(%rsp),%rdx
10217(6): js 0x109(%rip)
1021d(2): mov %ebx,%esi
1021f(5): mov $0x1,%edi
10224(5): call 0xffff280c(%rip)
10229(2): test %eax,%eax
1022b(3): setnz %al
1022e(2): test %al,%al
10230(6): jnz 0x173(%rip)
10236(5): mov 0x8(%rsp),%rsi
1023b(8): cmp $0x3ffffffe,0x8(%rsi)
10243(6): jz 0x12d(%rip)
10249(8): cmp $0x3ffffffe,0x18(%rsi)
10251(6): mov $0x3,%r13d
10257(6): jnz 0xfffffdbc(%rip)
1025d(8): mov 0xd0(%rsp),%rax
10265(8): mov 0xc8(%rsp),%rdx
1026d(4): mov %rax,0x18(%rsi)
10271(4): mov %rdx,0x10(%rsi)
10275(5): jmp 0xfffffd9e(%rip)
1027a(6): nop 0x0(%rax,%rax,1)
10280(9): mov $0x0,0x8(%rsp)
10289(3): xor %r13d,%r13d
1028c(5): jmp 0xfffffd61(%rip)
10291(7): nop 0x0(%rax)
10298(3): mov %r12,%rsi
1029b(5): mov $0xffffff9c,%edi
102a0(5): call 0xffff29c0(%rip)
102a5(2): mov %eax,%ebp
102a7(8): mov 0x108(%rsp),%rcx
102af(9): xor $0x28,%rcx
102b8(2): mov %ebp,%eax
102ba(6): jnz 0x11c(%rip)
102c0(7): add $0x110,%rsp
102c7(1): pop %rbx
102c8(1): pop %rbp
102c9(2): pop %r12
102cb(2): pop %r13
102cd(2): pop %r14
102cf(1): ret near (%rsp)
102d0(3): test %r12,%r12
102d3(5): mov $0xffffffff,%ebp
102d8(2): jz 0xffffffcf(%rip)
102da(3): mov %r13,%rsi
102dd(3): mov %r12,%rdi
102e0(5): call 0xffff2620(%rip)
102e5(2): mov %eax,%ebp
102e7(2): jmp 0xffffffc0(%rip)
102e9(7): nop 0x0(%rax)
102f0(3): xor %r13d,%r13d
102f3(5): jmp 0xfffffdc7(%rip)
102f8(8): nop 0x0(%rax,%rax,1)
10300(3): mov %r12,%rsi
10303(5): mov $0x1,%edi
10308(5): call 0xffff26d8(%rip)
1030d(2): test %eax,%eax
1030f(3): setnz %al
10312(5): jmp 0xfffffec2(%rip)
10317(9): nop 0x0(%rax,%rax,1)
10320(3): mov %r12,%rsi
10323(5): mov $0x1,%edi
10328(5): call 0xffff26b8(%rip)
1032d(2): test %eax,%eax
1032f(3): setnz %al
10332(5): jmp 0xfffffefc(%rip)
10337(9): nop 0x0(%rax,%rax,1)
10340(2): xor %ecx,%ecx
10342(3): mov %rsi,%rdx
10345(5): mov $0xffffff9c,%edi
1034a(3): mov %r12,%rsi
1034d(5): call 0xffff2233(%rip)
10352(3): cmp $0x0,%eax
10355(2): mov %eax,%ebp
10357(6): jnle 0xfffffcd6(%rip)
1035d(2): jnz 0x7e(%rip)
1035f(a): mov $0x1,0x20c383(%rip)
10369(5): jmp 0xffffff3e(%rip)
1036e(2): nop 
10370(8): mov 0xc0(%rsp),%rax
10378(8): mov 0xb8(%rsp),%rdx
10380(6): mov $0x3,%r13d
10386(3): mov %rdx,(%rsi)
10389(4): mov %rax,0x8(%rsi)
1038d(5): jmp 0xfffffc86(%rip)
10392(6): nop 0x0(%rax,%rax,1)
10398(5): call 0xffff2208(%rip)
1039d(6): mov $0x9,(%rax)
103a3(5): mov $0xffffffff,%ebp
103a8(5): jmp 0xfffffeff(%rip)
103ad(3): nop (%rax)
103b0(3): test %r14b,%r14b
103b3(6): jz 0xfffffdf2(%rip)
103b9(9): cmp $0x0,0xd0(%rsp)
103c2(6): jnz 0xfffffde3(%rip)
103c8(9): mov $0x0,0x68(%rsp)
103d1(5): jmp 0xfffffdc6(%rip)
103d6(5): call 0xffff23aa(%rip)
103db(5): call 0xffff21c5(%rip)
103e0(3): cmp $0x26,(%rax)
103e3(6): jnz 0xffffff7c(%rip)
103e9(5): jmp 0xfffffc4f(%rip)

"utimens" :
103f0(3): mov %rsi,%rdx
103f3(3): mov %rdi,%rsi
103f6(5): mov $0xffffffff,%edi
103fb(5): jmp 0xfffffb95(%rip)

"lutimens" :
10400(2): push %r12
10402(1): push %rbp
10403(3): mov %rdi,%r12
10406(1): push %rbx
10407(7): sub $0xd0,%rsp
1040e(9): mov $0x28,%rax
10417(8): mov %rax,0xc8(%rsp)
1041f(2): xor %eax,%eax
10421(3): test %rsi,%rsi
10424(6): jz 0xfc(%rip)
1042a(4): movdqu (%rsi),%xmm0
1042e(5): lea 0x10(%rsp),%rdi
10433(5): movaps %xmm0,0x10(%rsp)
10438(5): mov %rdi,0x8(%rsp)
1043d(5): movdqu 0x10(%rsi),%xmm0
10442(5): movaps %xmm0,0x20(%rsp)
10447(5): call 0xfffffa89(%rip)
1044c(2): test %eax,%eax
1044e(2): mov %eax,%ebx
10450(6): js 0x110(%rip)
10456(6): mov 0x20c28c(%rip),%eax
1045c(2): test %eax,%eax
1045e(2): js 0x38(%rip)
10460(3): cmp $0x2,%ebx
10463(6): jz 0x12d(%rip)
10469(5): mov 0x8(%rsp),%rdx
1046e(5): mov $0x100,%ecx
10473(3): mov %r12,%rsi
10476(5): mov $0xffffff9c,%edi
1047b(5): call 0xffff2105(%rip)
10480(3): cmp $0x0,%eax
10483(2): mov %eax,%ebp
10485(6): jle 0xeb(%rip)
1048b(5): call 0xffff2115(%rip)
10490(6): mov $0x26,(%rax)
10496(2): test %ebx,%ebx
10498(a): mov $0xffffffff,0x20c246(%rip)
104a2(6): jz 0xa3(%rip)
104a8(3): cmp $0x3,%ebx
104ab(6): jnz 0x13d(%rip)
104b1(6): cmp $0x0,0x8(%rsp)
104b7(2): jz 0x19(%rip)
104b9(5): lea 0x8(%rsp),%rsi
104be(5): lea 0x30(%rsp),%rdi
104c3(2): xor %ebp,%ebp
104c5(5): call 0xfffff92b(%rip)
104ca(2): test %al,%al
104cc(2): jnz 0x2c(%rip)
104ce(2): nop 
104d0(4): mov 0x48(%rsp),%eax
104d4(5): and $0xf000,%eax
104d9(5): cmp $0xa000,%eax
104de(6): jz 0x158(%rip)
104e4(5): mov 0x8(%rsp),%rdx
104e9(3): mov %r12,%rsi
104ec(5): mov $0xffffffff,%edi
104f1(5): call 0xfffffa9f(%rip)
104f6(2): mov %eax,%ebp
104f8(8): mov 0xc8(%rsp),%rcx
10500(9): xor $0x28,%rcx
10509(2): mov %ebp,%eax
1050b(6): jnz 0x13b(%rip)
10511(7): add $0xd0,%rsp
10518(1): pop %rbx
10519(1): pop %rbp
1051a(2): pop %r12
1051c(1): ret near (%rsp)
1051d(3): nop (%rax)
10520(6): mov 0x20c1c2(%rip),%ecx
10526(2): xor %edx,%edx
10528(2): xor %ebx,%ebx
1052a(9): mov $0x0,0x8(%rsp)
10533(2): test %ecx,%ecx
10535(6): jns 0xffffff39(%rip)
1053b(a): mov $0xffffffff,0x20c1a3(%rip)
10545(5): lea 0x30(%rsp),%rdx
1054a(3): mov %r12,%rsi
1054d(5): mov $0x1,%edi
10552(5): call 0xffff220e(%rip)
10557(2): test %eax,%eax
10559(6): jz 0xffffff77(%rip)
1055f(1): nop 
10560(5): mov $0xffffffff,%ebp
10565(2): jmp 0xffffff93(%rip)
10567(9): nop 0x0(%rax,%rax,1)
10570(6): jnz 0xdb(%rip)
10576(a): mov $0x1,0x20c16c(%rip)
10580(a): mov $0x1,0x20c15e(%rip)
1058a(5): jmp 0xffffff6e(%rip)
1058f(1): nop 
10590(5): lea 0x30(%rsp),%rdx
10595(3): mov %r12,%rsi
10598(5): mov $0x1,%edi
1059d(5): call 0xffff21c3(%rip)
105a2(2): test %eax,%eax
105a4(2): jnz 0xffffffbc(%rip)
105a6(5): mov 0x8(%rsp),%rdx
105ab(8): cmp $0x3ffffffe,0x8(%rdx)
105b3(2): jz 0x65(%rip)
105b5(8): cmp $0x3ffffffe,0x18(%rdx)
105bd(5): mov $0x3,%ebx
105c2(6): jnz 0xfffffeac(%rip)
105c8(8): mov 0x90(%rsp),%rax
105d0(8): mov 0x88(%rsp),%rcx
105d8(4): mov %rax,0x18(%rdx)
105dc(4): mov %rcx,0x10(%rdx)
105e0(5): jmp 0xfffffe8e(%rip)
105e5(3): nop (%rax)
105e8(5): lea 0x30(%rsp),%rdx
105ed(3): mov %r12,%rsi
105f0(5): mov $0x1,%edi
105f5(5): call 0xffff216b(%rip)
105fa(2): test %eax,%eax
105fc(6): jnz 0xffffff64(%rip)
10602(6): cmp $0x0,0x8(%rsp)
10608(6): jnz 0xfffffeb1(%rip)
1060e(5): jmp 0xfffffec2(%rip)
10613(5): nop 0x0(%rax,%rax,1)
10618(8): mov 0x80(%rsp),%rax
10620(5): mov 0x78(%rsp),%rcx
10625(5): mov $0x3,%ebx
1062a(3): mov %rcx,(%rdx)
1062d(4): mov %rax,0x8(%rdx)
10631(5): jmp 0xfffffe3d(%rip)
10636(5): call 0xffff1f6a(%rip)
1063b(6): mov $0x26,(%rax)
10641(5): jmp 0xffffff1f(%rip)
10646(5): call 0xffff213a(%rip)
1064b(5): call 0xffff1f55(%rip)
10650(3): cmp $0x26,(%rax)
10653(6): jnz 0xffffff23(%rip)
10659(5): jmp 0xfffffe3d(%rip)

"version_etc_arn" :
10660(2): push %r15
10662(2): push %r14
10664(2): push %r13
10666(2): push %r12
10668(3): mov %r9,%r12
1066b(1): push %rbp
1066c(1): push %rbx
1066d(3): mov %rdi,%rbp
10670(3): mov %r8,%rbx
10673(4): sub $0x28,%rsp
10677(3): test %rsi,%rsi
1067a(6): jz 0x11e(%rip)
10680(3): mov %rdx,%r8
10683(7): lea 0x6995(%rip),%rdx
1068a(3): mov %rcx,%r9
1068d(2): xor %eax,%eax
1068f(3): mov %rsi,%rcx
10692(5): mov $0x1,%esi
10697(5): call 0xffff2589(%rip)
1069c(7): lea 0x698f(%rip),%rsi
106a3(2): xor %edi,%edi
106a5(5): mov $0x5,%edx
106aa(5): call 0xffff2086(%rip)
106af(7): lea 0x6c8a(%rip),%rdx
106b6(3): mov %rax,%rcx
106b9(6): mov $0x7e3,%r8d
106bf(5): mov $0x1,%esi
106c4(3): mov %rbp,%rdi
106c7(2): xor %eax,%eax
106c9(5): call 0xffff2557(%rip)
106ce(7): lea 0x69d3(%rip),%rsi
106d5(2): xor %edi,%edi
106d7(5): mov $0x5,%edx
106dc(5): call 0xffff2054(%rip)
106e1(3): mov %rbp,%rsi
106e4(3): mov %rax,%rdi
106e7(5): call 0xffff2209(%rip)
106ec(4): cmp $0x9,%r12
106f0(6): jnbe 0x340(%rip)
106f6(7): lea 0x6c07(%rip),%rdx
106fd(4): movsxd 0x0(%rdx,%r12,4),%rax
10701(3): add %rdx,%rax
10704(2): jmp %rax
10706(a): nop 0x0(%rax,%rax,1)
10710(4): mov 0x38(%rbx),%r9
10714(4): mov 0x10(%rbx),%rax
10718(7): lea 0x6af9(%rip),%rsi
1071f(4): mov 0x8(%rbx),%r8
10723(5): mov $0x5,%edx
10728(2): xor %edi,%edi
1072a(4): mov 0x30(%rbx),%r13
1072e(4): mov 0x28(%rbx),%r12
10732(5): mov %r9,0x10(%rsp)
10737(4): mov 0x20(%rbx),%r15
1073b(4): mov 0x18(%rbx),%r14
1073f(4): mov %rax,(%rsp)
10743(5): mov %r8,0x8(%rsp)
10748(3): mov (%rbx),%rbx
1074b(5): call 0xffff1fe5(%rip)
10750(4): sub $0x8,%rsp
10754(5): mov 0x18(%rsp),%r9
10759(3): mov %rax,%rdx
1075c(3): mov %rbx,%rcx
1075f(5): mov $0x1,%esi
10764(3): mov %rbp,%rdi
10767(2): xor %eax,%eax
10769(2): push %r9
1076b(2): push %r13
1076d(2): push %r12
1076f(2): push %r15
10771(2): push %r14
10773(5): mov 0x30(%rsp),%r9
10778(5): mov 0x38(%rsp),%r8
1077d(5): call 0xffff24a3(%rip)
10782(4): add $0x30,%rsp
10786(4): add $0x28,%rsp
1078a(1): pop %rbx
1078b(1): pop %rbp
1078c(2): pop %r12
1078e(2): pop %r13
10790(2): pop %r14
10792(2): pop %r15
10794(1): ret near (%rsp)
10795(3): nop (%rax)
10798(3): mov %rcx,%r8
1079b(3): mov %rdx,%rcx
1079e(7): lea 0x6886(%rip),%rdx
107a5(5): mov $0x1,%esi
107aa(2): xor %eax,%eax
107ac(5): call 0xffff2474(%rip)
107b1(5): jmp 0xfffffeeb(%rip)
107b6(a): nop 0x0(%rax,%rax,1)
107c0(4): mov 0x40(%rbx),%r10
107c4(4): mov 0x38(%rbx),%r9
107c8(7): lea 0x6a79(%rip),%rsi
107cf(4): mov 0x10(%rbx),%rax
107d3(4): mov 0x8(%rbx),%r8
107d7(5): mov $0x5,%edx
107dc(4): mov 0x30(%rbx),%r13
107e0(4): mov 0x28(%rbx),%r12
107e4(4): mov 0x20(%rbx),%r15
107e8(4): mov 0x18(%rbx),%r14
107ec(3): mov (%rbx),%rbx
107ef(5): mov %r10,0x18(%rsp)
107f4(5): mov %r9,0x10(%rsp)
107f9(4): mov %rax,(%rsp)
107fd(5): mov %r8,0x8(%rsp)
10802(2): xor %edi,%edi
10804(5): call 0xffff1f2c(%rip)
10809(5): mov 0x18(%rsp),%r10
1080e(2): push %r10
10810(5): jmp 0xffffff44(%rip)
10815(3): nop (%rax)
10818(3): mov (%rbx),%rbx
1081b(7): lea 0x6814(%rip),%rsi
10822(5): mov $0x5,%edx
10827(2): xor %edi,%edi
10829(5): call 0xffff1f07(%rip)
1082e(4): add $0x28,%rsp
10832(3): mov %rbx,%rcx
10835(3): mov %rbp,%rdi
10838(1): pop %rbx
10839(1): pop %rbp
1083a(2): pop %r12
1083c(2): pop %r13
1083e(2): pop %r14
10840(2): pop %r15
10842(3): mov %rax,%rdx
10845(5): mov $0x1,%esi
1084a(2): xor %eax,%eax
1084c(5): jmp 0xffff23d4(%rip)
10851(7): nop 0x0(%rax)
10858(4): mov 0x8(%rbx),%r12
1085c(7): lea 0x67e3(%rip),%rsi
10863(3): mov (%rbx),%rbx
10866(5): mov $0x5,%edx
1086b(2): xor %edi,%edi
1086d(5): call 0xffff1ec3(%rip)
10872(4): add $0x28,%rsp
10876(3): mov %r12,%r8
10879(3): mov %rbx,%rcx
1087c(3): mov %rbp,%rdi
1087f(3): mov %rax,%rdx
10882(5): mov $0x1,%esi
10887(1): pop %rbx
10888(1): pop %rbp
10889(2): pop %r12
1088b(2): pop %r13
1088d(2): pop %r14
1088f(2): pop %r15
10891(2): xor %eax,%eax
10893(5): jmp 0xffff238d(%rip)
10898(8): nop 0x0(%rax,%rax,1)
108a0(4): mov 0x10(%rbx),%r13
108a4(4): mov 0x8(%rbx),%r12
108a8(7): lea 0x67ae(%rip),%rsi
108af(3): mov (%rbx),%rbx
108b2(5): mov $0x5,%edx
108b7(2): xor %edi,%edi
108b9(5): call 0xffff1e77(%rip)
108be(4): add $0x28,%rsp
108c2(3): mov %r13,%r9
108c5(3): mov %r12,%r8
108c8(3): mov %rbx,%rcx
108cb(3): mov %rbp,%rdi
108ce(3): mov %rax,%rdx
108d1(1): pop %rbx
108d2(1): pop %rbp
108d3(2): pop %r12
108d5(2): pop %r13
108d7(2): pop %r14
108d9(2): pop %r15
108db(5): mov $0x1,%esi
108e0(2): xor %eax,%eax
108e2(5): jmp 0xffff233e(%rip)
108e7(9): nop 0x0(%rax,%rax,1)
108f0(7): lea 0x6881(%rip),%rsi
108f7(5): mov $0x5,%edx
108fc(2): xor %edi,%edi
108fe(4): mov 0x18(%rbx),%r14
10902(4): mov 0x10(%rbx),%r13
10906(4): mov 0x8(%rbx),%r12
1090a(3): mov (%rbx),%rbx
1090d(5): call 0xffff1e23(%rip)
10912(4): sub $0x8,%rsp
10916(2): push %r14
10918(3): mov %rax,%rdx
1091b(3): mov %r13,%r9
1091e(3): mov %r12,%r8
10921(3): mov %rbx,%rcx
10924(3): mov %rbp,%rdi
10927(5): mov $0x1,%esi
1092c(2): xor %eax,%eax
1092e(5): call 0xffff22f2(%rip)
10933(1): pop %rax
10934(1): pop %rdx
10935(4): add $0x28,%rsp
10939(1): pop %rbx
1093a(1): pop %rbp
1093b(2): pop %r12
1093d(2): pop %r13
1093f(2): pop %r14
10941(2): pop %r15
10943(1): ret near (%rsp)
10944(4): nop 0x0(%rax)
10948(4): mov 0x20(%rbx),%r15
1094c(7): lea 0x6845(%rip),%rsi
10953(5): mov $0x5,%edx
10958(2): xor %edi,%edi
1095a(4): mov 0x18(%rbx),%r14
1095e(4): mov 0x10(%rbx),%r13
10962(4): mov 0x8(%rbx),%r12
10966(3): mov (%rbx),%rbx
10969(5): call 0xffff1dc7(%rip)
1096e(2): push %r15
10970(2): jmp 0xffffffa6(%rip)
10972(6): nop 0x0(%rax,%rax,1)
10978(4): mov 0x8(%rbx),%r8
1097c(4): mov 0x28(%rbx),%r12
10980(7): lea 0x6839(%rip),%rsi
10987(4): mov 0x20(%rbx),%r15
1098b(4): mov 0x18(%rbx),%r14
1098f(5): mov $0x5,%edx
10994(4): mov 0x10(%rbx),%r13
10998(2): xor %edi,%edi
1099a(3): mov (%rbx),%rbx
1099d(4): mov %r8,(%rsp)
109a1(5): call 0xffff1d8f(%rip)
109a6(4): sub $0x8,%rsp
109aa(3): mov %r13,%r9
109ad(2): push %r12
109af(2): push %r15
109b1(2): push %r14
109b3(5): mov 0x20(%rsp),%r8
109b8(3): mov %rbx,%rcx
109bb(3): mov %rax,%rdx
109be(3): mov %rbp,%rdi
109c1(5): mov $0x1,%esi
109c6(2): xor %eax,%eax
109c8(5): call 0xffff2258(%rip)
109cd(4): add $0x20,%rsp
109d1(4): add $0x28,%rsp
109d5(1): pop %rbx
109d6(1): pop %rbp
109d7(2): pop %r12
109d9(2): pop %r13
109db(2): pop %r14
109dd(2): pop %r15
109df(1): ret near (%rsp)
109e0(4): mov 0x10(%rbx),%r9
109e4(4): mov 0x30(%rbx),%r13
109e8(7): lea 0x67f9(%rip),%rsi
109ef(4): mov 0x28(%rbx),%r12
109f3(4): mov 0x20(%rbx),%r15
109f7(5): mov $0x5,%edx
109fc(4): mov 0x18(%rbx),%r14
10a00(4): mov 0x8(%rbx),%r8
10a04(2): xor %edi,%edi
10a06(5): mov %r9,0x8(%rsp)
10a0b(3): mov (%rbx),%rbx
10a0e(4): mov %r8,(%rsp)
10a12(5): call 0xffff1d1e(%rip)
10a17(2): push %r13
10a19(2): push %r12
10a1b(2): push %r15
10a1d(2): push %r14
10a1f(5): mov 0x28(%rsp),%r9
10a24(2): jmp 0xffffff8f(%rip)
10a26(a): nop 0x0(%rax,%rax,1)
10a30(4): mov 0x40(%rbx),%r10
10a34(4): mov 0x38(%rbx),%r9
10a38(5): mov $0x5,%edx
10a3d(4): mov 0x10(%rbx),%rax
10a41(4): mov 0x8(%rbx),%r8
10a45(7): lea 0x6834(%rip),%rsi
10a4c(4): mov 0x30(%rbx),%r13
10a50(4): mov 0x28(%rbx),%r12
10a54(4): mov 0x20(%rbx),%r15
10a58(4): mov 0x18(%rbx),%r14
10a5c(5): mov %r10,0x18(%rsp)
10a61(5): mov %r9,0x10(%rsp)
10a66(4): mov %rax,(%rsp)
10a6a(5): mov %r8,0x8(%rsp)
10a6f(3): mov (%rbx),%rbx
10a72(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
10a80(3): xor %r9d,%r9d
10a83(4): cmp $0x0,(%r8)
10a87(2): jz 0x14(%rip)
10a89(7): nop 0x0(%rax)
10a90(4): add $0x1,%r9
10a94(5): cmp $0x0,0x0(%r8,%r9,8)
10a99(2): jnz 0xfffffff7(%rip)
10a9b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
10aa0(4): sub $0x68,%rsp
10aa4(3): mov %r8,%r10
10aa7(3): xor %r9d,%r9d
10aaa(9): mov $0x28,%rax
10ab3(5): mov %rax,0x58(%rsp)
10ab8(2): xor %eax,%eax
10aba(3): mov %rsp,%r8
10abd(3): nop (%rax)
10ac0(3): mov (%r10),%eax
10ac3(3): cmp $0x2f,%eax
10ac6(2): jnbe 0x44(%rip)
10ac8(3): mov %eax,%r11d
10acb(4): add 0x10(%r10),%r11
10acf(3): add $0x8,%eax
10ad2(3): mov %eax,(%r10)
10ad5(3): mov (%r11),%rax
10ad8(3): test %rax,%rax
10adb(4): mov %rax,0x0(%r8,%r9,8)
10adf(2): jz 0xc(%rip)
10ae1(4): add $0x1,%r9
10ae5(4): cmp $0xa,%r9
10ae9(2): jnz 0xffffffd7(%rip)
10aeb(5): call 0xfffffb75(%rip)
10af0(5): mov 0x58(%rsp),%rax
10af5(9): xor $0x28,%rax
10afe(2): jnz 0x7(%rip)
10b00(4): add $0x68,%rsp
10b04(1): ret near (%rsp)
10b05(5): call 0xffff1c7b(%rip)
10b0a(4): mov 0x8(%r10),%r11
10b0e(4): lea 0x8(%r11),%rax
10b12(4): mov %rax,0x8(%r10)
10b16(2): jmp 0xffffffbf(%rip)

"version_etc" :
10b20(1): push %rbp
10b21(1): push %rbx
10b22(6): mov $0x20,%r10d
10b28(3): xor %r11d,%r11d
10b2b(7): sub $0xb8,%rsp
10b32(9): mov $0x28,%rax
10b3b(5): mov %rax,0x78(%rsp)
10b40(2): xor %eax,%eax
10b42(8): lea 0xd0(%rsp),%rax
10b4a(8): mov %r8,0xa0(%rsp)
10b52(8): lea 0xd0(%rsp),%rbx
10b5a(5): lea 0x20(%rsp),%r8
10b5f(8): mov %r9,0xa8(%rsp)
10b67(8): mov $0x20,0x8(%rsp)
10b6f(5): mov %rax,0x10(%rsp)
10b74(8): lea 0x80(%rsp),%rax
10b7c(3): xor %r9d,%r9d
10b7f(5): mov %rax,0x18(%rsp)
10b84(3): mov %rax,%rbp
10b87(9): nop 0x0(%rax,%rax,1)
10b90(4): cmp $0x2f,%r10d
10b94(2): jnbe 0x58(%rip)
10b96(3): mov %r10d,%eax
10b99(6): mov $0x1,%r11d
10b9f(4): add $0x8,%r10d
10ba3(3): add %rbp,%rax
10ba6(3): mov (%rax),%rax
10ba9(3): test %rax,%rax
10bac(4): mov %rax,0x0(%r8,%r9,8)
10bb0(2): jz 0xc(%rip)
10bb2(4): add $0x1,%r9
10bb6(4): cmp $0xa,%r9
10bba(2): jnz 0xffffffd6(%rip)
10bbc(3): test %r11b,%r11b
10bbf(2): jnz 0x26(%rip)
10bc1(5): call 0xfffffa9f(%rip)
10bc6(5): mov 0x78(%rsp),%rax
10bcb(9): xor $0x28,%rax
10bd4(2): jnz 0xc(%rip)
10bd6(7): add $0xb8,%rsp
10bdd(1): pop %rbx
10bde(1): pop %rbp
10bdf(1): ret near (%rsp)
10be0(5): call 0xffff1ba0(%rip)
10be5(5): mov %r10d,0x8(%rsp)
10bea(2): jmp 0xffffffd7(%rip)
10bec(3): mov %rbx,%rax
10bef(4): add $0x8,%rbx
10bf3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
10c00(1): push %rbx
10c01(7): lea 0x6471(%rip),%rsi
10c08(5): mov $0x5,%edx
10c0d(2): xor %edi,%edi
10c0f(5): call 0xffff1b21(%rip)
10c14(7): lea 0x4ee8(%rip),%rdx
10c1b(3): mov %rax,%rsi
10c1e(5): mov $0x1,%edi
10c23(2): xor %eax,%eax
10c25(5): call 0xffff1e8b(%rip)
10c2a(7): lea 0x645d(%rip),%rsi
10c31(5): mov $0x5,%edx
10c36(2): xor %edi,%edi
10c38(5): call 0xffff1af8(%rip)
10c3d(7): lea 0x4cbc(%rip),%rcx
10c44(7): lea 0x4363(%rip),%rdx
10c4b(3): mov %rax,%rsi
10c4e(5): mov $0x1,%edi
10c53(2): xor %eax,%eax
10c55(5): call 0xffff1e5b(%rip)
10c5a(7): mov 0x20b467(%rip),%rbx
10c61(7): lea 0x6658(%rip),%rsi
10c68(2): xor %edi,%edi
10c6a(5): mov $0x5,%edx
10c6f(5): call 0xffff1ac1(%rip)
10c74(3): mov %rbx,%rsi
10c77(3): mov %rax,%rdi
10c7a(1): pop %rbx
10c7b(5): jmp 0xffff1c75(%rip)

"can_write_any_file" :
10c80(7): cmp $0x0,0x20ba6a(%rip)
10c87(2): jz 0x11(%rip)
10c89(7): movzx 0x20ba60(%rip),%eax
10c90(1): ret near (%rsp)
10c91(7): nop 0x0(%rax)
10c98(4): sub $0x8,%rsp
10c9c(5): call 0xffff1ba4(%rip)
10ca1(2): test %eax,%eax
10ca3(7): mov $0x1,0x20ba47(%rip)
10caa(3): setz %al
10cad(6): mov %al,0x20ba3d(%rip)
10cb3(4): add $0x8,%rsp
10cb7(1): ret near (%rsp)

"xmalloc" :
10cc0(1): push %rbx
10cc1(3): mov %rdi,%rbx
10cc4(5): call 0xffff1d3c(%rip)
10cc9(3): test %rax,%rax
10ccc(2): jnz 0x7(%rip)
10cce(3): test %rbx,%rbx
10cd1(2): jnz 0x4(%rip)
10cd3(1): pop %rbx
10cd4(1): ret near (%rsp)
10cd5(5): call 0x23b(%rip)

"xnmalloc" :
10ce0(3): mov %rdi,%rax
10ce3(3): mul %rax,%rsi,%rdx
10ce6(3): mov %rax,%rdi
10ce9(3): seto %al
10cec(3): test %rdi,%rdi
10cef(2): js 0xc(%rip)
10cf1(3): movzx %al,%eax
10cf4(3): test %rax,%rax
10cf7(2): jnz 0x4(%rip)
10cf9(2): jmp 0xffffffc7(%rip)
10cfb(4): sub $0x8,%rsp
10cff(5): call 0x211(%rip)

"xrealloc" :
10d20(3): test %rsi,%rsi
10d23(1): push %rbx
10d24(3): mov %rsi,%rbx
10d27(2): jnz 0x7(%rip)
10d29(3): test %rdi,%rdi
10d2c(2): jnz 0x1c(%rip)
10d2e(3): mov %rbx,%rsi
10d31(5): call 0xffff1d3f(%rip)
10d36(3): test %rax,%rax
10d39(2): jnz 0x7(%rip)
10d3b(3): test %rbx,%rbx
10d3e(2): jnz 0x13(%rip)
10d40(1): pop %rbx
10d41(1): ret near (%rsp)
10d42(6): nop 0x0(%rax,%rax,1)
10d48(5): call 0xffff1f38(%rip)
10d4d(2): xor %eax,%eax
10d4f(1): pop %rbx
10d50(1): ret near (%rsp)
10d51(5): call 0x1bf(%rip)

"xnrealloc" :
10d60(3): mov %rsi,%rax
10d63(3): mul %rax,%rdx,%rdx
10d66(3): mov %rax,%rsi
10d69(3): seto %al
10d6c(3): test %rsi,%rsi
10d6f(2): js 0xc(%rip)
10d71(3): movzx %al,%eax
10d74(3): test %rax,%rax
10d77(2): jnz 0x4(%rip)
10d79(2): jmp 0xffffffa7(%rip)
10d7b(4): sub $0x8,%rsp
10d7f(5): call 0x191(%rip)

"x2nrealloc" :
10d90(3): test %rdi,%rdi
10d93(3): mov %rdx,%r9
10d96(3): mov (%rsi),%rcx
10d99(2): jz 0x37(%rip)
10d9b(2): xor %edx,%edx
10d9d(a): mov $0x6148914691236517204,%rax
10da7(3): div %r9,%rax
10daa(3): cmp %rcx,%rax
10dad(2): jbe 0x3e(%rip)
10daf(3): mov %rcx,%rax
10db2(3): shr $0x1,%rax
10db5(5): lea 0x1(%rax,%rcx,1),%rcx
10dba(3): mov %rcx,(%rsi)
10dbd(4): imul %r9,%rcx
10dc1(3): mov %rcx,%rsi
10dc4(5): jmp 0xffffff5c(%rip)
10dc9(7): nop 0x0(%rax)
10dd0(3): test %rcx,%rcx
10dd3(2): jz 0x25(%rip)
10dd5(3): mov %rcx,%rax
10dd8(3): mul %rax,%r9,%rdx
10ddb(3): seto %dl
10dde(3): test %rax,%rax
10de1(3): movzx %dl,%edx
10de4(2): js 0x7(%rip)
10de6(3): test %rdx,%rdx
10de9(2): jz 0xffffffd1(%rip)
10deb(4): sub $0x8,%rsp
10def(5): call 0x121(%rip)
10df4(4): nop 0x0(%rax)
10df8(2): xor %edx,%edx
10dfa(5): mov $0x80,%eax
10dff(3): xor %r8d,%r8d
10e02(3): div %r9,%rax
10e05(3): test %rax,%rax
10e08(4): setz %r8b
10e0c(4): lea 0x0(%r8,%rax,1),%rcx
10e10(2): jmp 0xffffffc5(%rip)

"x2realloc" :
10e20(3): test %rdi,%rdi
10e23(3): mov (%rsi),%rax
10e26(2): jz 0x2a(%rip)
10e28(a): mov $0x6148914691236517203,%rdx
10e32(3): cmp %rdx,%rax
10e35(2): jnbe 0x2c(%rip)
10e37(3): mov %rax,%rdx
10e3a(3): shr $0x1,%rdx
10e3d(5): lea 0x1(%rdx,%rax,1),%rax
10e42(3): mov %rax,(%rsi)
10e45(3): mov %rax,%rsi
10e48(5): jmp 0xfffffed8(%rip)
10e4d(3): nop (%rax)
10e50(3): test %rax,%rax
10e53(5): mov $0x80,%edx
10e58(4): cmove %rdx,%rax
10e5c(3): test %rax,%rax
10e5f(2): jns 0xffffffe3(%rip)
10e61(4): sub $0x8,%rsp
10e65(5): call 0xab(%rip)

"xzalloc" :
10e70(1): push %rbx
10e71(3): mov %rdi,%rbx
10e74(5): call 0xfffffe4c(%rip)
10e79(3): mov %rbx,%rdx
10e7c(2): xor %esi,%esi
10e7e(3): mov %rax,%rdi
10e81(1): pop %rbx
10e82(5): jmp 0xffff19ae(%rip)

"xcalloc" :
10e90(3): mov %rdi,%rax
10e93(4): sub $0x8,%rsp
10e97(3): mul %rax,%rsi,%rdx
10e9a(3): seto %dl
10e9d(3): test %rax,%rax
10ea0(2): js 0x19(%rip)
10ea2(3): movzx %dl,%edx
10ea5(3): test %rdx,%rdx
10ea8(2): jnz 0x11(%rip)
10eaa(5): call 0xffff1a66(%rip)
10eaf(3): test %rax,%rax
10eb2(2): jz 0x7(%rip)
10eb4(4): add $0x8,%rsp
10eb8(1): ret near (%rsp)
10eb9(5): call 0x57(%rip)

"xmemdup" :
10ec0(1): push %rbp
10ec1(1): push %rbx
10ec2(3): mov %rdi,%rbp
10ec5(3): mov %rsi,%rdi
10ec8(3): mov %rsi,%rbx
10ecb(4): sub $0x8,%rsp
10ecf(5): call 0xfffffdf1(%rip)
10ed4(4): add $0x8,%rsp
10ed8(3): mov %rbx,%rdx
10edb(3): mov %rbp,%rsi
10ede(1): pop %rbx
10edf(1): pop %rbp
10ee0(3): mov %rax,%rdi
10ee3(5): jmp 0xffff1abd(%rip)

"xstrdup" :
10ef0(1): push %rbx
10ef1(3): mov %rdi,%rbx
10ef4(5): call 0xffff185c(%rip)
10ef9(3): mov %rbx,%rdi
10efc(4): lea 0x1(%rax),%rsi
10f00(1): pop %rbx
10f01(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
10f10(7): lea 0x6458(%rip),%rsi
10f17(4): sub $0x8,%rsp
10f1b(5): mov $0x5,%edx
10f20(2): xor %edi,%edi
10f22(5): call 0xffff180e(%rip)
10f27(6): mov 0x20b0fb(%rip),%edi
10f2d(7): lea 0x6513(%rip),%rdx
10f34(3): mov %rax,%rcx
10f37(2): xor %esi,%esi
10f39(2): xor %eax,%eax
10f3b(5): call 0xffff1bd5(%rip)
10f40(5): call 0xffff1650(%rip)

"xfts_open" :
10f50(4): sub $0x8,%rsp
10f54(6): or $0x200,%esi
10f5a(5): call 0x17c6(%rip)
10f5f(3): test %rax,%rax
10f62(2): jz 0xe(%rip)
10f64(4): add $0x8,%rsp
10f68(1): ret near (%rsp)
10f69(7): nop 0x0(%rax)
10f70(5): call 0xffff1630(%rip)
10f75(3): cmp $0x16,(%rax)
10f78(2): jz 0x8(%rip)
10f7a(5): call 0xffffff96(%rip)
10f7f(1): nop 
10f80(7): lea 0x6429(%rip),%rcx
10f87(7): lea 0x63f2(%rip),%rsi
10f8e(7): lea 0x6408(%rip),%rdi
10f95(5): mov $0x29,%edx
10f9a(5): call 0xffff1886(%rip)

"cycle_warning_required" :
10fa0(3): mov 0x48(%rdi),%edx
10fa3(5): mov $0x1,%eax
10fa8(3): and $0x11,%edx
10fab(3): cmp $0x10,%edx
10fae(2): jz 0x9(%rip)
10fb0(2): xor %eax,%eax
10fb2(3): cmp $0x11,%edx
10fb5(2): jz 0xb(%rip)
10fb7(2): REP ret near (%rsp)
10fb9(7): nop 0x0(%rax)
10fc0(5): cmp $0x0,0x58(%rsi)
10fc5(3): setnz %al
10fc8(1): ret near (%rsp)

"yesno" :
10fd0(1): push %rbx
10fd1(5): mov $0xa,%edx
10fd6(2): xor %ebx,%ebx
10fd8(4): sub $0x20,%rsp
10fdc(7): mov 0x20b0ed(%rip),%rcx
10fe3(5): lea 0x10(%rsp),%rsi
10fe8(5): lea 0x8(%rsp),%rdi
10fed(9): mov $0x0,0x8(%rsp)
10ff6(9): mov $0x28,%rax
10fff(5): mov %rax,0x18(%rsp)
11004(2): xor %eax,%eax
11006(9): mov $0x0,0x10(%rsp)
1100f(5): call 0xffff1911(%rip)
11014(3): test %rax,%rax
11017(2): jle 0x1b(%rip)
11019(5): mov 0x8(%rsp),%rdi
1101e(5): lea 0xffffffff(%rdi,%rax,1),%rax
11023(3): cmp $0xa,(%rax)
11026(2): jz 0x32(%rip)
11028(5): call 0xffff1938(%rip)
1102d(2): test %eax,%eax
1102f(3): setnle %bl
11032(5): mov 0x8(%rsp),%rdi
11037(5): call 0xffff1c49(%rip)
1103c(5): mov 0x18(%rsp),%rdx
11041(9): xor $0x28,%rdx
1104a(2): mov %ebx,%eax
1104c(2): jnz 0x16(%rip)
1104e(4): add $0x20,%rsp
11052(1): pop %rbx
11053(1): ret near (%rsp)
11054(4): nop 0x0(%rax)
11058(3): mov $0x0,(%rax)
1105b(5): mov 0x8(%rsp),%rdi
11060(2): jmp 0xffffffc8(%rip)
11062(5): call 0xffff171e(%rip)

"rpl_fflush" :
11070(3): test %rdi,%rdi
11073(1): push %rbx
11074(3): mov %rdi,%rbx
11077(2): jz 0x13(%rip)
11079(5): call 0xffff19d7(%rip)
1107e(2): test %eax,%eax
11080(2): jz 0xa(%rip)
11082(6): test $0x100,(%rbx)
11088(2): jnz 0x10(%rip)
1108a(3): mov %rbx,%rdi
1108d(1): pop %rbx
1108e(5): jmp 0xffff1982(%rip)
11093(5): nop 0x0(%rax,%rax,1)
11098(3): mov %rbx,%rdi
1109b(5): mov $0x1,%edx
110a0(2): xor %esi,%esi
110a2(5): call 0x3e(%rip)
110a7(3): mov %rbx,%rdi
110aa(1): pop %rbx
110ab(5): jmp 0xffff1965(%rip)

"freadahead" :
110b0(2): xor %eax,%eax
110b2(4): mov 0x20(%rdi),%rcx
110b6(4): cmp %rcx,0x28(%rdi)
110ba(2): jnbe 0x1d(%rip)
110bc(4): mov 0x10(%rdi),%rax
110c0(4): sub 0x8(%rdi),%rax
110c4(6): test $0x100,(%rdi)
110ca(2): jz 0xd(%rip)
110cc(4): mov 0x58(%rdi),%rdx
110d0(4): sub 0x48(%rdi),%rdx
110d4(3): add %rdx,%rax
110d7(2): REP ret near (%rsp)

"rpl_fseeko" :
110e0(4): mov 0x8(%rdi),%rax
110e4(4): cmp %rax,0x10(%rdi)
110e8(2): jz 0x8(%rip)
110ea(5): jmp 0xffff1a56(%rip)
110ef(1): nop 
110f0(4): mov 0x20(%rdi),%rax
110f4(4): cmp %rax,0x28(%rdi)
110f8(2): jnz 0xfffffff2(%rip)
110fa(5): cmp $0x0,0x48(%rdi)
110ff(2): jnz 0xffffffeb(%rip)
11101(2): push %r12
11103(1): push %rbp
11104(3): mov %edx,%r12d
11107(1): push %rbx
11108(3): mov %rsi,%rbp
1110b(3): mov %rdi,%rbx
1110e(5): call 0xffff18b2(%rip)
11113(3): mov %r12d,%edx
11116(3): mov %rbp,%rsi
11119(2): mov %eax,%edi
1111b(5): call 0xffff16e5(%rip)
11120(4): cmp $0xffffffff,%rax
11124(2): jz 0xe(%rip)
11126(3): and $0xef,(%rbx)
11129(7): mov %rax,0x90(%rbx)
11130(2): xor %eax,%eax
11132(1): pop %rbx
11133(1): pop %rbp
11134(2): pop %r12
11136(1): ret near (%rsp)

"AD_compare" :
11140(2): xor %eax,%eax
11142(4): mov 0x8(%rsi),%rdx
11146(4): cmp %rdx,0x8(%rdi)
1114a(2): jz 0x6(%rip)
1114c(2): REP ret near (%rsp)
1114e(2): nop 
11150(3): mov (%rsi),%rax
11153(3): cmp %rax,(%rdi)
11156(3): setz %al
11159(1): ret near (%rsp)

"AD_hash" :
11160(4): mov 0x8(%rdi),%rax
11164(2): xor %edx,%edx
11166(3): div %rsi,%rax
11169(3): mov %rdx,%rax
1116c(1): ret near (%rsp)

"dev_type_hash" :
11170(3): mov (%rdi),%rax
11173(2): xor %edx,%edx
11175(3): div %rsi,%rax
11178(3): mov %rdx,%rax
1117b(1): ret near (%rsp)

"dev_type_compare" :
11180(3): mov (%rsi),%rax
11183(3): cmp %rax,(%rdi)
11186(3): setz %al
11189(1): ret near (%rsp)

"fts_compare_ino" :
11190(3): mov (%rdi),%rdx
11193(3): mov (%rsi),%rax
11196(7): mov 0x80(%rax),%rax
1119d(7): cmp %rax,0x80(%rdx)
111a4(2): jb 0xc(%rip)
111a6(3): setnbe %al
111a9(3): movzx %al,%eax
111ac(1): ret near (%rsp)
111ad(3): nop (%rax)
111b0(5): mov $0xffffffff,%eax
111b5(1): ret near (%rsp)

"fts_stat" :
111c0(2): push %r12
111c2(1): push %rbp
111c3(3): mov %rsi,%rbp
111c6(1): push %rbx
111c7(5): cmp $0x0,0x58(%rbp)
111cc(4): lea 0x78(%rsi),%rbx
111d0(3): mov %rdi,%r12
111d3(3): mov 0x48(%rdi),%eax
111d6(4): mov 0x30(%rsi),%rsi
111da(2): jnz 0x66(%rip)
111dc(2): test $0x1,%al
111de(2): jz 0x62(%rip)
111e0(3): mov %rbx,%rdx
111e3(5): mov $0x1,%edi
111e8(5): call 0xffff17f8(%rip)
111ed(2): test %eax,%eax
111ef(2): jz 0x7c(%rip)
111f1(5): call 0xffff13af(%rip)
111f6(3): mov %rax,%r12
111f9(2): mov (%rax),%eax
111fb(3): cmp $0x2,%eax
111fe(6): jz 0x112(%rip)
11204(4): lea 0x8(%rbx),%rdi
11208(3): mov %eax,0x40(%rbp)
1120b(8): mov $0x0,0x78(%rbp)
11213(b): mov $0x0,0x88(%rbx)
1121e(2): xor %eax,%eax
11220(4): and $0xfffffff8,%rdi
11224(3): sub %rdi,%rbx
11227(6): lea 0x90(%rbx),%ecx
1122d(3): shr $0x3,%ecx
11230(3): REP stosd %rax,rdi(%es,10)
11233(5): mov $0xa,%eax
11238(1): pop %rbx
11239(1): pop %rbp
1123a(2): pop %r12
1123c(1): ret near (%rsp)
1123d(3): nop (%rax)
11240(2): test $0x2,%al
11242(2): jnz 0xffffff9e(%rip)
11244(2): test %dl,%dl
11246(2): jnz 0xffffff9a(%rip)
11248(3): mov %rsi,%rdx
1124b(5): mov 0x2c(%r12),%esi
11250(6): mov $0x100,%r8d
11256(3): mov %rbx,%rcx
11259(5): mov $0x1,%edi
1125e(5): call 0xffff1562(%rip)
11263(2): test %eax,%eax
11265(6): jnz 0x9b(%rip)
1126b(6): mov 0x90(%rbp),%eax
11271(5): and $0xf000,%eax
11276(5): cmp $0x4000,%eax
1127b(2): jz 0x25(%rip)
1127d(5): cmp $0xa000,%eax
11282(6): jz 0xd6(%rip)
11288(5): cmp $0x8000,%eax
1128d(3): setz %al
11290(3): movzx %al,%eax
11293(1): pop %rbx
11294(4): lea 0x3(%rax,%rax,4),%eax
11298(1): pop %rbp
11299(2): pop %r12
1129b(1): ret near (%rsp)
1129c(4): nop 0x0(%rax)
112a0(7): mov 0x88(%rbp),%rax
112a7(4): cmp $0x1,%rax
112ab(6): jbe 0x85(%rip)
112b1(5): cmp $0x0,0x58(%rbp)
112b6(2): jle 0x7a(%rip)
112b8(6): test $0x20,0x48(%r12)
112be(4): lea 0xfffffffe(%rax),%rdx
112c2(4): cmove %rdx,%rax
112c6(7): cmp $0x2e,0x108(%rbp)
112cd(4): mov %rax,0x68(%rbp)
112d1(5): mov $0x1,%eax
112d6(6): jnz 0xffffff62(%rip)
112dc(7): cmp $0x0,0x109(%rbp)
112e3(6): jnz 0x85(%rip)
112e9(5): cmp $0x1,0x58(%rbp)
112ee(2): sbb %eax,%eax
112f0(3): and $0xfc,%eax
112f3(3): add $0x5,%eax
112f6(5): jmp 0xffffff42(%rip)
112fb(5): nop 0x0(%rax,%rax,1)
11300(5): call 0xffff12a0(%rip)
11305(2): mov (%rax),%eax
11307(5): jmp 0xfffffefd(%rip)
1130c(4): nop 0x0(%rax)
11310(4): mov 0x30(%rbp),%rsi
11314(3): mov %rbx,%rdx
11317(5): mov $0x1,%edi
1131c(5): call 0xffff1444(%rip)
11321(2): test %eax,%eax
11323(2): jz 0x1d(%rip)
11325(4): mov (%r12),%eax
11329(5): jmp 0xfffffedb(%rip)
1132e(2): nop 
11330(7): mov $0xffffffff,%rax
11337(2): jmp 0xffffff8f(%rip)
11339(7): nop 0x0(%rax)
11340(8): mov $0x0,(%r12)
11348(5): mov $0xd,%eax
1134d(5): jmp 0xfffffeeb(%rip)
11352(6): nop 0x0(%rax,%rax,1)
11358(5): mov $0xc,%eax
1135d(5): jmp 0xfffffedb(%rip)
11362(6): nop 0x0(%rax,%rax,1)
11368(6): mov 0x108(%rbp),%edx
1136e(6): and $0xffff00,%edx
11374(6): cmp $0x2e00,%edx
1137a(6): jnz 0xfffffebe(%rip)
11380(5): jmp 0xffffff69(%rip)

"fts_sort" :
11390(2): push %r13
11392(2): push %r12
11394(3): mov %rdx,%r12
11397(1): push %rbp
11398(1): push %rbx
11399(3): mov %rdi,%rbp
1139c(3): mov %rsi,%rbx
1139f(4): sub $0x8,%rsp
113a3(4): cmp %rdx,0x38(%rbp)
113a7(4): mov 0x40(%rdi),%r13
113ab(4): mov 0x10(%rdi),%rdi
113af(2): jnb 0x36(%rip)
113b1(4): lea 0x28(%rdx),%rsi
113b5(a): mov $0x2305843009213693951,%rax
113bf(3): cmp %rax,%rsi
113c2(4): mov %rsi,0x38(%rbp)
113c6(6): jnbe 0x9e(%rip)
113cc(4): shl/sal $0x3,%rsi
113d0(5): call 0xffff16a0(%rip)
113d5(3): test %rax,%rax
113d8(3): mov %rax,%rdi
113db(6): jz 0x85(%rip)
113e1(4): mov %rax,0x10(%rbp)
113e5(3): test %rbx,%rbx
113e8(2): jz 0x19(%rip)
113ea(3): mov %rdi,%rdx
113ed(3): nop (%rax)
113f0(4): add $0x8,%rdx
113f4(4): mov %rbx,0xfffffff8(%rdx)
113f8(4): mov 0x10(%rbx),%rbx
113fc(3): test %rbx,%rbx
113ff(2): jnz 0xfffffff1(%rip)
11401(3): mov %r13,%rcx
11404(5): mov $0x8,%edx
11409(3): mov %r12,%rsi
1140c(5): call 0xffff1224(%rip)
11411(4): mov 0x10(%rbp),%r8
11415(3): mov %r12,%rcx
11418(4): sub $0x1,%rcx
1141c(3): mov (%r8),%rax
1141f(2): jz 0x71(%rip)
11421(3): mov %rax,%rdi
11424(3): mov %r8,%rdx
11427(2): jmp 0xc(%rip)
11429(7): nop 0x0(%rax)
11430(3): mov (%rdx),%rdi
11433(4): mov 0x8(%rdx),%rsi
11437(4): add $0x8,%rdx
1143b(4): sub $0x1,%rcx
1143f(4): mov %rsi,0x10(%rdi)
11443(2): jnz 0xffffffed(%rip)
11445(5): mov 0xfffffff8(%r8,%r12,8),%rdx
1144a(8): mov $0x0,0x10(%rdx)
11452(4): add $0x8,%rsp
11456(1): pop %rbx
11457(1): pop %rbp
11458(2): pop %r12
1145a(2): pop %r13
1145c(1): ret near (%rsp)
1145d(3): nop (%rax)
11460(4): mov 0x10(%rbp),%rdi
11464(5): call 0xffff181c(%rip)
11469(8): mov $0x0,0x10(%rbp)
11471(8): mov $0x0,0x38(%rbp)
11479(4): add $0x8,%rsp
1147d(3): mov %rbx,%rax
11480(1): pop %rbx
11481(1): pop %rbp
11482(2): pop %r12
11484(2): pop %r13
11486(1): ret near (%rsp)
11487(9): nop 0x0(%rax,%rax,1)
11490(3): mov %rax,%rdx
11493(2): jmp 0xffffffb7(%rip)

"fts_alloc" :
114a0(2): push %r13
114a2(2): push %r12
114a4(3): mov %rdi,%r12
114a7(1): push %rbp
114a8(7): lea 0x110(%rdx),%rdi
114af(1): push %rbx
114b0(3): mov %rsi,%r13
114b3(3): mov %rdx,%rbp
114b6(4): sub $0x8,%rsp
114ba(4): and $0xfffffff8,%rdi
114be(5): call 0xffff1542(%rip)
114c3(3): test %rax,%rax
114c6(3): mov %rax,%rbx
114c9(2): jz 0x53(%rip)
114cb(7): lea 0x108(%rax),%rdi
114d2(3): mov %rbp,%rdx
114d5(3): mov %r13,%rsi
114d8(5): call 0xffff14c8(%rip)
114dd(5): mov 0x20(%r12),%rax
114e2(8): mov $0x0,0x108(%rbx,%rbp,1)
114ea(4): mov %rbp,0x60(%rbx)
114ee(4): mov %r12,0x50(%rbx)
114f2(7): mov $0x0,0x40(%rbx)
114f9(8): mov $0x0,0x18(%rbx)
11501(4): mov %rax,0x38(%rbx)
11505(7): mov $0x30000,0x72(%rbx)
1150c(8): mov $0x0,0x20(%rbx)
11514(8): mov $0x0,0x28(%rbx)
1151c(4): add $0x8,%rsp
11520(3): mov %rbx,%rax
11523(1): pop %rbx
11524(1): pop %rbp
11525(2): pop %r12
11527(2): pop %r13
11529(1): ret near (%rsp)

"fts_lfree" :
11530(3): test %rdi,%rdi
11533(2): jz 0x3d(%rip)
11535(1): push %rbp
11536(1): push %rbx
11537(3): mov %rdi,%rbx
1153a(4): sub $0x8,%rsp
1153e(2): nop 
11540(4): mov 0x18(%rbx),%rdi
11544(4): mov 0x10(%rbx),%rbp
11548(3): test %rdi,%rdi
1154b(2): jz 0x7(%rip)
1154d(5): call 0xffff1353(%rip)
11552(3): mov %rbx,%rdi
11555(3): mov %rbp,%rbx
11558(5): call 0xffff1728(%rip)
1155d(3): test %rbp,%rbp
11560(2): jnz 0xffffffe0(%rip)
11562(4): add $0x8,%rsp
11566(1): pop %rbx
11567(1): pop %rbp
11568(1): ret near (%rsp)
11569(7): nop 0x0(%rax)
11570(2): REP ret near (%rsp)

"fd_ring_clear" :
11580(1): push %rbx
11581(3): mov %rdi,%rbx
11584(2): jmp 0x18(%rip)
11586(a): nop 0x0(%rax,%rax,1)
11590(3): mov %rbx,%rdi
11593(5): call 0x278d(%rip)
11598(2): test %eax,%eax
1159a(2): jns 0x16(%rip)
1159c(3): mov %rbx,%rdi
1159f(5): call 0x2731(%rip)
115a4(2): test %al,%al
115a6(2): jz 0xffffffea(%rip)
115a8(1): pop %rbx
115a9(1): ret near (%rsp)
115aa(6): nop 0x0(%rax,%rax,1)
115b0(2): mov %eax,%edi
115b2(5): call 0xffff12be(%rip)
115b7(2): jmp 0xffffffe5(%rip)

"filesystem_type" :
115c0(2): push %r13
115c2(2): push %r12
115c4(1): push %rbp
115c5(1): push %rbx
115c6(7): sub $0x98,%rsp
115cd(4): mov 0x50(%rdi),%rbx
115d1(9): mov $0x28,%rax
115da(8): mov %rax,0x88(%rsp)
115e2(2): xor %eax,%eax
115e4(4): test $0x2,0x49(%rbx)
115e8(2): jz 0x6a(%rip)
115ea(4): mov 0x50(%rbx),%r12
115ee(3): mov %rdi,%rbp
115f1(3): mov %esi,%r13d
115f4(3): test %r12,%r12
115f7(2): jz 0x29(%rip)
115f9(4): mov 0x78(%rbp),%rax
115fd(3): mov %rsp,%rsi
11600(3): mov %r12,%rdi
11603(4): mov %rax,(%rsp)
11607(5): call 0xffffa779(%rip)
1160c(3): test %rax,%rax
1160f(2): jz 0x3e(%rip)
11611(4): mov 0x8(%rax),%rbx
11615(2): jmp 0x3f(%rip)
11617(9): nop 0x0(%rax,%rax,1)
11620(7): mov 0x20a9a1(%rip),%r8
11627(7): lea 0xfffffb52(%rip),%rcx
1162e(7): lea 0xfffffb3b(%rip),%rdx
11635(2): xor %esi,%esi
11637(5): mov $0xd,%edi
1163c(5): call 0xffffa9b4(%rip)
11641(3): test %rax,%rax
11644(3): mov %rax,%r12
11647(4): mov %rax,0x50(%rbx)
1164b(2): jnz 0xffffffae(%rip)
1164d(3): test %r13d,%r13d
11650(2): jns 0x30(%rip)
11652(2): xor %ebx,%ebx
11654(8): mov 0x88(%rsp),%rdx
1165c(9): xor $0x28,%rdx
11665(3): mov %rbx,%rax
11668(2): jnz 0x7a(%rip)
1166a(7): add $0x98,%rsp
11671(1): pop %rbx
11672(1): pop %rbp
11673(2): pop %r12
11675(2): pop %r13
11677(1): ret near (%rsp)
11678(8): nop 0x0(%rax,%rax,1)
11680(5): lea 0x10(%rsp),%rsi
11685(3): mov %r13d,%edi
11688(5): call 0xffff1528(%rip)
1168d(2): test %eax,%eax
1168f(2): jnz 0xffffffc3(%rip)
11691(3): test %r12,%r12
11694(5): mov 0x10(%rsp),%rbx
11699(2): jz 0xffffffbb(%rip)
1169b(5): mov $0x10,%edi
116a0(5): call 0xffff1360(%rip)
116a5(3): test %rax,%rax
116a8(3): mov %rax,%r13
116ab(2): jz 0xffffffa9(%rip)
116ad(4): mov 0x78(%rbp),%rax
116b1(4): mov %rbx,0x8(%r13)
116b5(3): mov %r13,%rsi
116b8(3): mov %r12,%rdi
116bb(4): mov %rax,0x0(%r13)
116bf(5): call 0xffffb131(%rip)
116c4(3): test %rax,%rax
116c7(2): jz 0x11(%rip)
116c9(3): cmp %rax,%r13
116cc(2): jnz 0x1b(%rip)
116ce(5): mov 0x10(%rsp),%rbx
116d3(5): jmp 0xffffff81(%rip)
116d8(3): mov %r13,%rdi
116db(5): call 0xffff15a5(%rip)
116e0(2): jmp 0xffffffee(%rip)
116e2(5): call 0xffff109e(%rip)
116e7(5): call 0xffff0ea9(%rip)

"leaf_optimization" :
116f0(4): sub $0x8,%rsp
116f4(5): call 0xfffffecc(%rip)
116f9(6): cmp $0x52654973,%rax
116ff(2): jz 0x51(%rip)
11701(2): jle 0x2f(%rip)
11703(6): cmp $0x58465342,%rax
11709(2): jz 0x47(%rip)
1170b(5): mov $0xff534d42,%edx
11710(3): cmp %rdx,%rax
11713(2): jz 0x32(%rip)
11715(6): cmp $0x5346414f,%rax
1171b(2): jz 0x2a(%rip)
1171d(5): mov $0x1,%eax
11722(4): add $0x8,%rsp
11726(1): ret near (%rsp)
11727(9): nop 0x0(%rax,%rax,1)
11730(6): cmp $0x6969,%rax
11736(2): jz 0xf(%rip)
11738(6): cmp $0x9fa0,%rax
1173e(2): jz 0x7(%rip)
11740(3): test %rax,%rax
11743(2): jnz 0xffffffda(%rip)
11745(2): xor %eax,%eax
11747(4): add $0x8,%rsp
1174b(1): ret near (%rsp)
1174c(4): nop 0x0(%rax)
11750(5): mov $0x2,%eax
11755(4): add $0x8,%rsp
11759(1): ret near (%rsp)

"cwd_advance_fd" :
11760(1): push %rbp
11761(1): push %rbx
11762(2): mov %esi,%ebp
11764(3): mov %rdi,%rbx
11767(4): sub $0x8,%rsp
1176b(3): mov 0x2c(%rdi),%esi
1176e(2): cmp %ebp,%esi
11770(2): jnz 0x7(%rip)
11772(3): cmp $0x9c,%esi
11775(2): jnz 0x4c(%rip)
11777(2): test %dl,%dl
11779(2): jnz 0x17(%rip)
1177b(4): test $0x4,0x48(%rbx)
1177f(2): jnz 0x6(%rip)
11781(2): test %esi,%esi
11783(2): jns 0x2d(%rip)
11785(3): mov %ebp,0x2c(%rbx)
11788(4): add $0x8,%rsp
1178c(1): pop %rbx
1178d(1): pop %rbp
1178e(1): ret near (%rsp)
1178f(1): nop 
11790(4): lea 0x60(%rbx),%rdi
11794(5): call 0x254c(%rip)
11799(2): test %eax,%eax
1179b(2): js 0xffffffea(%rip)
1179d(2): mov %eax,%edi
1179f(5): call 0xffff10d1(%rip)
117a4(3): mov %ebp,0x2c(%rbx)
117a7(4): add $0x8,%rsp
117ab(1): pop %rbx
117ac(1): pop %rbp
117ad(1): ret near (%rsp)
117ae(2): nop 
117b0(2): mov %esi,%edi
117b2(5): call 0xffff10be(%rip)
117b7(3): mov %ebp,0x2c(%rbx)
117ba(4): add $0x8,%rsp
117be(1): pop %rbx
117bf(1): pop %rbp
117c0(1): ret near (%rsp)
117c1(5): call 0xffff0dcf(%rip)

"restore_initial_cwd" :
117d0(1): push %rbp
117d1(1): push %rbx
117d2(3): mov %rdi,%rbx
117d5(4): sub $0x8,%rsp
117d9(3): mov 0x48(%rdi),%edx
117dc(2): mov %edx,%ebp
117de(3): and $0x4,%ebp
117e1(2): jnz 0x47(%rip)
117e3(3): and $0x2,%dh
117e6(2): jnz 0x2a(%rip)
117e8(3): mov 0x28(%rdi),%edi
117eb(2): xor %ebp,%ebp
117ed(5): call 0xffff1273(%rip)
117f2(2): test %eax,%eax
117f4(4): setnz %bpl
117f8(4): lea 0x60(%rbx),%rdi
117fc(5): call 0xfffffd84(%rip)
11801(4): add $0x8,%rsp
11805(2): mov %ebp,%eax
11807(1): pop %rbx
11808(1): pop %rbp
11809(1): ret near (%rsp)
1180a(6): nop 0x0(%rax,%rax,1)
11810(5): mov $0x1,%edx
11815(5): mov $0xffffff9c,%esi
1181a(5): call 0xffffff46(%rip)
1181f(2): jmp 0xffffffd9(%rip)
11821(7): nop 0x0(%rax)
11828(2): xor %ebp,%ebp
1182a(2): jmp 0xffffffce(%rip)

"fts_palloc.isra.2" :
11830(1): push %rbx
11831(3): mov (%rsi),%rcx
11834(3): mov %rdi,%rbx
11837(3): mov (%rdi),%rdi
1183a(8): lea 0x100(%rcx,%rdx,1),%rax
11842(3): cmp %rax,%rcx
11845(2): jnbe 0x23(%rip)
11847(3): mov %rax,(%rsi)
1184a(3): mov %rax,%rsi
1184d(5): call 0xffff1223(%rip)
11852(3): test %rax,%rax
11855(2): jz 0x33(%rip)
11857(3): mov %rax,(%rbx)
1185a(5): mov $0x1,%eax
1185f(1): pop %rbx
11860(1): ret near (%rsp)
11861(7): nop 0x0(%rax)
11868(5): call 0xffff1418(%rip)
1186d(7): mov $0x0,(%rbx)
11874(5): call 0xffff0d2c(%rip)
11879(6): mov $0x24,(%rax)
1187f(2): xor %eax,%eax
11881(1): pop %rbx
11882(1): ret near (%rsp)
11883(5): nop 0x0(%rax,%rax,1)
11888(3): mov (%rbx),%rdi
1188b(5): call 0xffff13f5(%rip)
11890(7): mov $0x0,(%rbx)
11897(2): xor %eax,%eax
11899(1): pop %rbx
1189a(1): ret near (%rsp)

"setup_dir.isra.4" :
118a0(6): and $0x102,%edi
118a6(1): push %rbx
118a7(3): mov %rsi,%rbx
118aa(2): jz 0x36(%rip)
118ac(7): mov 0x20a715(%rip),%r8
118b3(7): lea 0xfffff886(%rip),%rcx
118ba(7): lea 0xfffff89f(%rip),%rdx
118c1(2): xor %esi,%esi
118c3(5): mov $0x1f,%edi
118c8(5): call 0xffffa728(%rip)
118cd(3): test %rax,%rax
118d0(3): mov %rax,(%rbx)
118d3(3): setnz %al
118d6(1): pop %rbx
118d7(1): ret near (%rsp)
118d8(8): nop 0x0(%rax,%rax,1)
118e0(5): mov $0x20,%edi
118e5(5): call 0xffff111b(%rip)
118ea(3): mov %rax,%rdi
118ed(3): mov %rax,(%rbx)
118f0(2): xor %eax,%eax
118f2(3): test %rdi,%rdi
118f5(2): jz 0xffffffe1(%rip)
118f7(5): call 0x2179(%rip)
118fc(5): mov $0x1,%eax
11901(1): pop %rbx
11902(1): ret near (%rsp)

"diropen.isra.6" :
11910(3): mov %rdx,%rax
11913(2): mov %esi,%edx
11915(3): shl/sal $0xd,%edx
11918(6): and $0x20000,%edx
1191e(6): or $0x90900,%edx
11924(6): and $0x200,%esi
1192a(2): jnz 0x16(%rip)
1192c(3): mov %rax,%rdi
1192f(2): mov %edx,%esi
11931(2): xor %eax,%eax
11933(5): jmp 0xffff98bd(%rip)
11938(8): nop 0x0(%rax,%rax,1)
11940(3): mov %rax,%rsi
11943(2): xor %eax,%eax
11945(5): jmp 0x245b(%rip)

"fts_safe_changedir" :
11950(2): push %r15
11952(2): push %r14
11954(3): mov %rsi,%r14
11957(2): push %r13
11959(2): push %r12
1195b(3): mov %rdi,%r13
1195e(1): push %rbp
1195f(1): push %rbx
11960(3): mov %edx,%r12d
11963(3): mov %rcx,%rbp
11966(7): sub $0xb8,%rsp
1196d(3): mov 0x48(%rdi),%ebx
11970(9): mov $0x28,%rax
11979(8): mov %rax,0xa8(%rsp)
11981(2): xor %eax,%eax
11983(3): mov %ebx,%r9d
11986(4): and $0x4,%r9d
1198a(3): test %rcx,%rcx
1198d(6): jz 0xb3(%rip)
11993(7): lea 0x4151(%rip),%rdx
1199a(5): mov $0x3,%ecx
1199f(3): mov %rbp,%rsi
119a2(3): mov %rdx,%rdi
119a5(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
119a7(3): setnbe %al
119aa(2): sbb $0x0,%al
119ac(2): test %al,%al
119ae(6): jnz 0x92(%rip)
119b4(3): test %r9d,%r9d
119b7(6): jnz 0x8e(%rip)
119bd(3): test %r12d,%r12d
119c0(6): jns 0x1ea(%rip)
119c6(3): test $0x2,%bh
119c9(6): jnz 0x147(%rip)
119cf(5): mov $0x1,0xf(%rsp)
119d4(4): mov 0x2c(%r13),%edi
119d8(3): mov %rbp,%rdx
119db(2): mov %ebx,%esi
119dd(5): call 0xffffff33(%rip)
119e2(2): test %eax,%eax
119e4(3): mov %eax,%r15d
119e7(6): js 0x1b4(%rip)
119ed(4): mov 0x48(%r13),%ebx
119f1(3): test $0x2,%bl
119f4(6): jz 0xa6(%rip)
119fa(6): nop 0x0(%rax,%rax,1)
11a00(5): lea 0x10(%rsp),%rdx
11a05(3): mov %r15d,%esi
11a08(5): mov $0x1,%edi
11a0d(5): call 0xffff1023(%rip)
11a12(2): test %eax,%eax
11a14(6): jz 0xcc(%rip)
11a1a(5): mov $0xffffffff,%ebx
11a1f(3): test %r12d,%r12d
11a22(2): jns 0x33(%rip)
11a24(5): call 0xffff0b7c(%rip)
11a29(3): mov (%rax),%r12d
11a2c(3): mov %rax,%rbp
11a2f(3): mov %r15d,%edi
11a32(5): call 0xffff0e3e(%rip)
11a37(4): mov %r12d,0x0(%rbp)
11a3b(2): jmp 0x1a(%rip)
11a3d(3): nop (%rax)
11a40(3): test %r9d,%r9d
11a43(2): jz 0x3d(%rip)
11a45(3): and $0x2,%bh
11a48(2): jz 0xb(%rip)
11a4a(3): test %r12d,%r12d
11a4d(6): jns 0xb3(%rip)
11a53(2): xor %ebx,%ebx
11a55(8): mov 0xa8(%rsp),%rcx
11a5d(9): xor $0x28,%rcx
11a66(2): mov %ebx,%eax
11a68(6): jnz 0x13d(%rip)
11a6e(7): add $0xb8,%rsp
11a75(1): pop %rbx
11a76(1): pop %rbp
11a77(2): pop %r12
11a79(2): pop %r13
11a7b(2): pop %r14
11a7d(2): pop %r15
11a7f(1): ret near (%rsp)
11a80(3): test %r12d,%r12d
11a83(6): js 0x13d(%rip)
11a89(3): test $0x2,%bl
11a8c(3): mov %r12d,%r15d
11a8f(5): mov $0x0,0xf(%rsp)
11a94(6): jnz 0xffffff6c(%rip)
11a9a(3): test %rbp,%rbp
11a9d(2): jz 0x23(%rip)
11a9f(7): lea 0x4045(%rip),%rdx
11aa6(5): mov $0x3,%ecx
11aab(3): mov %rbp,%rsi
11aae(3): mov %rdx,%rdi
11ab1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
11ab3(3): setnbe %al
11ab6(2): sbb $0x0,%al
11ab8(2): test %al,%al
11aba(6): jz 0xffffff46(%rip)
11ac0(3): and $0x2,%bh
11ac3(6): jnz 0x95(%rip)
11ac9(3): mov %r15d,%edi
11acc(5): call 0xffff0f94(%rip)
11ad1(2): mov %eax,%ebx
11ad3(5): jmp 0xffffff4c(%rip)
11ad8(8): nop 0x0(%rax,%rax,1)
11ae0(5): mov 0x10(%rsp),%rax
11ae5(4): cmp %rax,0x78(%r14)
11ae9(6): jz 0x97(%rip)
11aef(5): call 0xffff0ab1(%rip)
11af4(6): mov $0x2,(%rax)
11afa(5): jmp 0xffffff20(%rip)
11aff(1): nop 
11b00(3): mov %r12d,%edi
11b03(2): xor %ebx,%ebx
11b05(5): call 0xffff0d6b(%rip)
11b0a(5): jmp 0xffffff4b(%rip)
11b0f(1): nop 
11b10(4): lea 0x60(%r13),%r15
11b14(3): mov %r15,%rdi
11b17(5): call 0x21b9(%rip)
11b1c(2): test %al,%al
11b1e(4): mov %al,0xf(%rsp)
11b22(6): jnz 0xfffffeb2(%rip)
11b28(3): mov %r15,%rdi
11b2b(5): call 0x21f5(%rip)
11b30(2): test %eax,%eax
11b32(3): mov %eax,%r15d
11b35(4): mov 0x48(%r13),%ebx
11b39(6): js 0xfffffe96(%rip)
11b3f(3): test $0x2,%bl
11b42(3): mov %eax,%r12d
11b45(5): mov $0x1,0xf(%rsp)
11b4a(6): jz 0xffffff76(%rip)
11b50(5): jmp 0xfffffeb0(%rip)
11b55(3): nop (%rax)
11b58(6): movzx 0xf(%rsp),%r14d
11b5e(3): mov %r15d,%esi
11b61(3): mov %r13,%rdi
11b64(2): xor %ebx,%ebx
11b66(4): xor $0x1,%r14d
11b6a(4): movzx %r14b,%edx
11b6e(5): call 0xfffffbf2(%rip)
11b73(5): jmp 0xfffffee2(%rip)
11b78(8): nop 0x0(%rax,%rax,1)
11b80(5): mov 0x18(%rsp),%rax
11b85(7): cmp %rax,0x80(%r14)
11b8c(6): jnz 0xffffff63(%rip)
11b92(4): mov 0x48(%r13),%ebx
11b96(5): jmp 0xffffff2a(%rip)
11b9b(5): mov $0xffffffff,%ebx
11ba0(5): jmp 0xfffffeb5(%rip)
11ba5(5): call 0xffff0bdb(%rip)
11baa(3): test $0x2,%bl
11bad(3): mov %r12d,%r15d
11bb0(5): mov $0x1,0xf(%rsp)
11bb5(6): jz 0xfffffef1(%rip)
11bbb(5): jmp 0xfffffe45(%rip)
11bc0(5): mov $0x0,0xf(%rsp)
11bc5(5): jmp 0xfffffe0f(%rip)

"enter_dir.isra.10" :
11bd0(6): and $0x102,%edi
11bd6(2): push %r12
11bd8(3): mov %rsi,%r12
11bdb(1): push %rbp
11bdc(1): push %rbx
11bdd(3): mov %rdx,%rbx
11be0(2): jz 0x70(%rip)
11be2(5): mov $0x18,%edi
11be7(5): call 0xffff0e19(%rip)
11bec(3): test %rax,%rax
11bef(3): mov %rax,%rbp
11bf2(6): jz 0x86(%rip)
11bf8(4): mov 0x78(%rbx),%rax
11bfc(4): mov (%r12),%rdi
11c00(3): mov %rbp,%rsi
11c03(4): mov %rbx,0x10(%rbp)
11c07(4): mov %rax,0x0(%rbp)
11c0b(7): mov 0x80(%rbx),%rax
11c12(4): mov %rax,0x8(%rbp)
11c16(5): call 0xffffabda(%rip)
11c1b(3): cmp %rax,%rbp
11c1e(3): mov %rax,%r12
11c21(2): jz 0x20(%rip)
11c23(3): mov %rbp,%rdi
11c26(5): call 0xffff105a(%rip)
11c2b(3): test %r12,%r12
11c2e(2): jz 0x4a(%rip)
11c30(5): mov 0x10(%r12),%rax
11c35(5): mov $0x2,%ecx
11c3a(4): mov %cx,0x70(%rbx)
11c3e(3): mov %rax,(%rbx)
11c41(1): pop %rbx
11c42(5): mov $0x1,%eax
11c47(1): pop %rbp
11c48(2): pop %r12
11c4a(1): ret near (%rsp)
11c4b(5): nop 0x0(%rax,%rax,1)
11c50(4): mov (%r12),%rdi
11c54(4): lea 0x78(%rdx),%rsi
11c58(5): call 0x1e28(%rip)
11c5d(2): test %al,%al
11c5f(2): jz 0xffffffe2(%rip)
11c61(5): mov $0x2,%edx
11c66(3): mov %rbx,(%rbx)
11c69(4): mov %dx,0x70(%rbx)
11c6d(1): pop %rbx
11c6e(1): pop %rbp
11c6f(2): pop %r12
11c71(1): ret near (%rsp)
11c72(6): nop 0x0(%rax,%rax,1)
11c78(1): pop %rbx
11c79(2): xor %eax,%eax
11c7b(1): pop %rbp
11c7c(2): pop %r12
11c7e(1): ret near (%rsp)

"leave_dir.isra.12" :
11c80(4): sub $0x28,%rsp
11c84(3): mov %rsi,%rcx
11c87(9): mov $0x28,%rax
11c90(5): mov %rax,0x18(%rsp)
11c95(2): xor %eax,%eax
11c97(6): and $0x102,%edi
11c9d(2): jnz 0x43(%rip)
11c9f(4): mov 0x8(%rdx),%rax
11ca3(3): test %rax,%rax
11ca6(2): jz 0x1f(%rip)
11ca8(5): cmp $0x0,0x58(%rax)
11cad(2): js 0x18(%rip)
11caf(3): mov (%rsi),%rcx
11cb2(5): cmp $0x0,0x10(%rcx)
11cb7(2): jz 0x7c(%rip)
11cb9(7): mov 0x80(%rdx),%rsi
11cc0(3): cmp %rsi,(%rcx)
11cc3(2): jz 0x4d(%rip)
11cc5(5): mov 0x18(%rsp),%rax
11cca(9): xor $0x28,%rax
11cd3(2): jnz 0x5b(%rip)
11cd5(4): add $0x28,%rsp
11cd9(1): ret near (%rsp)
11cda(6): nop 0x0(%rax,%rax,1)
11ce0(4): mov 0x78(%rdx),%rax
11ce4(3): mov (%rcx),%rdi
11ce7(3): mov %rsp,%rsi
11cea(4): mov %rax,(%rsp)
11cee(7): mov 0x80(%rdx),%rax
11cf5(5): mov %rax,0x8(%rsp)
11cfa(5): call 0xffffab56(%rip)
11cff(3): test %rax,%rax
11d02(2): jz 0x31(%rip)
11d04(3): mov %rax,%rdi
11d07(5): call 0xffff0f79(%rip)
11d0c(2): jmp 0xffffffb9(%rip)
11d0e(2): nop 
11d10(4): mov 0x78(%rdx),%rsi
11d14(4): cmp %rsi,0x8(%rcx)
11d18(2): jnz 0xffffffad(%rip)
11d1a(4): mov 0x78(%rax),%rdx
11d1e(7): mov 0x80(%rax),%rax
11d25(4): mov %rdx,0x8(%rcx)
11d29(3): mov %rax,(%rcx)
11d2c(2): jmp 0xffffff99(%rip)
11d2e(5): call 0xffff0a52(%rip)
11d33(5): call 0xffff085d(%rip)

"fts_build" :
11d40(2): push %r15
11d42(2): push %r14
11d44(3): mov %rdi,%r15
11d47(2): push %r13
11d49(2): push %r12
11d4b(1): push %rbp
11d4c(1): push %rbx
11d4d(4): sub $0x78,%rsp
11d51(3): mov (%rdi),%rbp
11d54(9): mov $0x28,%rax
11d5d(5): mov %rax,0x68(%rsp)
11d62(2): xor %eax,%eax
11d64(4): mov %esi,0x58(%rsp)
11d68(4): mov 0x18(%rbp),%rax
11d6c(3): test %rax,%rax
11d6f(5): mov %rax,0x50(%rsp)
11d74(6): jz 0x43c(%rip)
11d7a(3): mov %rax,%rdi
11d7d(5): call 0xffff0bc3(%rip)
11d82(2): test %eax,%eax
11d84(4): mov %eax,0x64(%rsp)
11d88(6): js 0x558(%rip)
11d8e(5): cmp $0x0,0x40(%r15)
11d93(6): jz 0x7d5(%rip)
11d99(9): mov $0xffffffff,0x38(%rsp)
11da2(4): mov 0x48(%r15),%edi
11da6(5): mov $0x1,0x5f(%rsp)
11dab(4): mov 0x48(%rbp),%rcx
11daf(4): mov 0x38(%rbp),%rdx
11db3(9): mov $0x0,0x40(%rsp)
11dbc(5): cmp $0x2f,0xffffffff(%rdx,%rcx,1)
11dc1(4): lea 0xffffffff(%rcx),%rax
11dc5(4): cmovne %rcx,%rax
11dc9(3): and $0x4,%edi
11dcc(5): mov %rax,0x48(%rsp)
11dd1(2): jz 0x12(%rip)
11dd3(4): add 0x20(%r15),%rax
11dd7(4): lea 0x1(%rax),%rbx
11ddb(3): mov $0x2f,(%rax)
11dde(5): mov %rbx,0x40(%rsp)
11de3(5): mov 0x48(%rsp),%rax
11de8(4): mov 0x30(%r15),%rbx
11dec(5): mov $0x0,0x5e(%rsp)
11df1(5): mov $0x0,0x5d(%rsp)
11df6(9): mov $0x0,0x8(%rsp)
11dff(9): mov $0x0,0x10(%rsp)
11e08(4): add $0x1,%rax
11e0c(5): mov %rbp,0x20(%rsp)
11e11(3): sub %rax,%rbx
11e14(5): mov %rax,0x18(%rsp)
11e19(4): mov 0x58(%rbp),%rax
11e1d(5): mov %rbx,0x28(%rsp)
11e22(2): xor %ebx,%ebx
11e24(4): add $0x1,%rax
11e28(5): mov %rax,0x30(%rsp)
11e2d(5): jmp 0xe2(%rip)
11e32(6): nop 0x0(%rax,%rax,1)
11e38(3): mov %r14,%r9
11e3b(5): add 0x18(%rsp),%r9
11e40(6): jb 0x860(%rip)
11e46(5): mov 0x30(%rsp),%rax
11e4b(7): lea 0x108(%r13),%rsi
11e52(4): mov %rax,0x58(%r13)
11e56(3): mov (%r15),%rax
11e59(4): mov %r9,0x48(%r13)
11e5d(4): mov %rax,0x8(%r13)
11e61(4): mov 0x0(%rbp),%rax
11e65(7): mov %rax,0x80(%r13)
11e6c(4): mov 0x48(%r15),%eax
11e70(2): test $0x4,%al
11e72(6): jnz 0x26e(%rip)
11e78(4): mov %rsi,0x30(%r13)
11e7c(5): cmp $0x0,0x40(%r15)
11e81(2): jz 0xb(%rip)
11e83(3): test $0x4,%ah
11e86(6): jz 0x302(%rip)
11e8c(4): movzx 0x12(%rbp),%edx
11e90(3): and $0x18,%eax
11e93(2): mov %edx,%esi
11e95(3): sub $0x1,%edx
11e98(3): cmp $0x18,%eax
11e9b(6): jz 0x2b5(%rip)
11ea1(5): mov $0xb,%ecx
11ea6(3): cmp $0xb,%edx
11ea9(5): mov %cx,0x70(%r13)
11eae(6): jnbe 0x26a(%rip)
11eb4(7): lea 0x5505(%rip),%rax
11ebb(3): mov 0x0(%rax,%rdx,4),%eax
11ebe(7): mov %eax,0x90(%r13)
11ec5(5): mov $0x2,%eax
11eca(7): mov %rax,0xa8(%r13)
11ed1(6): cmp $0x0,0x10(%rsp)
11ed7(8): mov $0x0,0x10(%r13)
11edf(6): jz 0x229(%rip)
11ee5(5): mov 0x8(%rsp),%rax
11eea(4): mov %r13,0x10(%rax)
11eee(7): cmp $0x2710,%rbx
11ef5(6): jz 0xfb(%rip)
11efb(4): add $0x1,%rbx
11eff(5): cmp 0x38(%rsp),%rbx
11f04(6): jnb 0x144(%rip)
11f0a(5): mov %r13,0x8(%rsp)
11f0f(5): mov 0x20(%rsp),%rax
11f14(4): mov 0x18(%rax),%r13
11f18(3): test %r13,%r13
11f1b(6): jz 0x4cd(%rip)
11f21(5): call 0xffff067f(%rip)
11f26(3): mov %r13,%rdi
11f29(6): mov $0x0,(%rax)
11f2f(3): mov %rax,%r12
11f32(5): call 0xffff0abe(%rip)
11f37(3): test %rax,%rax
11f3a(3): mov %rax,%rbp
11f3d(6): jz 0x583(%rip)
11f43(5): test $0x20,0x48(%r15)
11f48(2): jnz 0xc(%rip)
11f4a(4): cmp $0x2e,0x13(%rax)
11f4e(6): jz 0x1e2(%rip)
11f54(4): lea 0x13(%rbp),%r13
11f58(3): mov %r13,%rdi
11f5b(5): call 0xffff07f5(%rip)
11f60(3): mov %r13,%rsi
11f63(3): mov %rax,%rdx
11f66(3): mov %r15,%rdi
11f69(3): mov %rax,%r14
11f6c(5): call 0xfffff534(%rip)
11f71(3): test %rax,%rax
11f74(3): mov %rax,%r13
11f77(6): jz 0x419(%rip)
11f7d(5): cmp %r14,0x28(%rsp)
11f82(6): jnbe 0xfffffeb6(%rip)
11f88(4): mov 0x20(%r15),%rax
11f8c(4): lea 0x30(%r15),%rsi
11f90(4): lea 0x20(%r15),%rdi
11f94(5): mov %rax,0x28(%rsp)
11f99(5): mov 0x48(%rsp),%rax
11f9e(5): lea 0x2(%rax,%r14,1),%rdx
11fa3(5): call 0xfffff88d(%rip)
11fa8(2): test %al,%al
11faa(6): jz 0x3e6(%rip)
11fb0(4): mov 0x20(%r15),%rdx
11fb4(5): cmp 0x28(%rsp),%rdx
11fb9(6): jz 0x1e7(%rip)
11fbf(5): add 0x18(%rsp),%rdx
11fc4(5): test $0x4,0x48(%r15)
11fc9(6): cmove 0x40(%rsp),%rdx
11fcf(5): mov %rdx,0x40(%rsp)
11fd4(4): mov 0x30(%r15),%rcx
11fd8(5): sub 0x18(%rsp),%rcx
11fdd(4): mov %al,0x5d(%rsp)
11fe1(5): mov %rcx,0x28(%rsp)
11fe6(5): jmp 0xfffffe52(%rip)
11feb(5): nop 0x0(%rax,%rax,1)
11ff0(5): cmp $0x0,0x40(%r15)
11ff5(6): jnz 0xffffff06(%rip)
11ffb(4): mov 0x64(%rsp),%esi
11fff(5): mov 0x20(%rsp),%rdi
12004(5): call 0xfffff5bc(%rip)
12009(6): cmp $0x1021994,%rax
1200f(6): jz 0x371(%rip)
12015(5): mov $0xff534d42,%ecx
1201a(3): cmp %rcx,%rax
1201d(6): jz 0x363(%rip)
12023(6): cmp $0x6969,%rax
12029(6): jz 0x357(%rip)
1202f(4): add $0x1,%rbx
12033(5): cmp 0x38(%rsp),%rbx
12038(5): mov $0x1,0x5e(%rsp)
1203d(6): jb 0xfffffecd(%rip)
12043(5): nop 0x0(%rax,%rax,1)
12048(5): cmp $0x0,0x5d(%rsp)
1204d(5): mov 0x20(%rsp),%rbp
12052(6): jz 0x3a4(%rip)
12058(4): mov 0x8(%r15),%rax
1205c(4): mov 0x20(%r15),%rcx
12060(3): test %rax,%rax
12063(2): jz 0x2d(%rip)
12065(3): nop (%rax)
12068(4): mov 0x30(%rax),%rdx
1206c(7): lea 0x108(%rax),%rsi
12073(3): cmp %rsi,%rdx
12076(2): jz 0xd(%rip)
12078(4): sub 0x38(%rax),%rdx
1207c(3): add %rcx,%rdx
1207f(4): mov %rdx,0x30(%rax)
12083(4): mov %rcx,0x38(%rax)
12087(4): mov 0x10(%rax),%rax
1208b(3): test %rax,%rax
1208e(2): jnz 0xffffffda(%rip)
12090(5): mov 0x10(%rsp),%rax
12095(2): jmp 0xe(%rip)
12097(9): nop 0x0(%rax,%rax,1)
120a0(3): mov %rdx,%rax
120a3(5): cmp $0x0,0x58(%rax)
120a8(6): js 0x34e(%rip)
120ae(4): mov 0x30(%rax),%rdx
120b2(7): lea 0x108(%rax),%rsi
120b9(3): cmp %rsi,%rdx
120bc(2): jz 0xd(%rip)
120be(4): sub 0x38(%rax),%rdx
120c2(3): add %rcx,%rdx
120c5(4): mov %rdx,0x30(%rax)
120c9(4): mov 0x10(%rax),%rdx
120cd(4): mov %rcx,0x38(%rax)
120d1(3): test %rdx,%rdx
120d4(2): jnz 0xffffffcc(%rip)
120d6(4): mov 0x8(%rax),%rdx
120da(2): jmp 0xffffffc6(%rip)
120dc(4): nop 0x0(%rax)
120e0(4): mov 0x38(%r13),%rax
120e4(5): mov 0x40(%rsp),%rdi
120e9(4): mov %rax,0x30(%r13)
120ed(4): mov 0x60(%r13),%rax
120f1(4): lea 0x1(%rax),%rdx
120f5(5): call 0xffff0a0b(%rip)
120fa(4): mov 0x48(%r15),%eax
120fe(5): jmp 0xfffffd7e(%rip)
12103(5): nop 0x0(%rax,%rax,1)
12108(5): mov %r13,0x10(%rsp)
1210d(5): jmp 0xfffffde1(%rip)
12112(6): nop 0x0(%rax,%rax,1)
12118(b): mov $0x0,0x90(%r13)
12123(5): mov $0x2,%eax
12128(5): jmp 0xfffffda2(%rip)
1212d(3): nop (%rax)
12130(4): cmp $0x0,0x14(%rax)
12134(2): jz 0xd(%rip)
12136(5): cmp $0x2e,0x14(%rax)
1213b(6): jnz 0xfffffe19(%rip)
12141(5): mov 0x8(%rsp),%r13
12146(5): jmp 0xfffffdc4(%rip)
1214b(5): nop 0x0(%rax,%rax,1)
12150(6): and $0xfb,%esi
12156(6): jz 0xfffffd4b(%rip)
1215c(5): mov $0xb,%eax
12161(3): cmp $0xb,%edx
12164(5): mov %ax,0x70(%r13)
12169(6): jbe 0x58d(%rip)
1216f(b): mov $0x0,0x90(%r13)
1217a(5): mov $0x1,%eax
1217f(5): jmp 0xfffffd4b(%rip)
12184(4): nop 0x0(%rax)
12188(2): xor %edx,%edx
1218a(3): mov %r13,%rsi
1218d(3): mov %r15,%rdi
12190(5): call 0xfffff030(%rip)
12195(5): mov %ax,0x70(%r13)
1219a(5): jmp 0xfffffd37(%rip)
1219f(1): nop 
121a0(5): movzx 0x5d(%rsp),%eax
121a5(5): jmp 0xfffffe2f(%rip)
121aa(6): nop 0x0(%rax,%rax,1)
121b0(3): mov 0x48(%rdi),%eax
121b3(2): mov %eax,%edx
121b5(3): and $0x10,%edx
121b8(2): jz 0xf(%rip)
121ba(2): test $0x1,%al
121bc(5): mov $0x20000,%edx
121c1(6): jnz 0x107(%rip)
121c7(5): and $0x204,%eax
121cc(4): mov 0x30(%rbp),%rsi
121d0(5): mov $0xffffff9c,%edi
121d5(5): cmp $0x200,%eax
121da(2): jnz 0x6(%rip)
121dc(4): mov 0x2c(%r15),%edi
121e0(5): lea 0x64(%rsp),%rcx
121e5(5): call 0xffffa94b(%rip)
121ea(3): test %rax,%rax
121ed(4): mov %rax,0x18(%rbp)
121f1(6): jz 0x31f(%rip)
121f7(5): cmp $0xb,0x70(%rbp)
121fc(6): jz 0x394(%rip)
12202(4): mov 0x48(%r15),%edi
12206(6): test $0x100,%edi
1220c(6): jnz 0x124(%rip)
12212(5): cmp $0x1,0x40(%r15)
12217(3): sbb %rax,%rax
1221a(5): and $0x186a1,%eax
1221f(4): sub $0x1,%rax
12223(5): cmp $0x2,0x58(%rsp)
12228(5): mov %rax,0x38(%rsp)
1222d(6): jz 0x353(%rip)
12233(4): mov 0x48(%r15),%edx
12237(4): mov 0x64(%rsp),%eax
1223b(3): and $0x38,%edx
1223e(3): cmp $0x18,%edx
12241(6): jz 0x3a3(%rip)
12247(5): cmp $0x3,0x58(%rsp)
1224c(6): mov $0x1,%r12d
12252(3): setz %bl
12255(5): test $0x2,0x49(%r15)
1225a(6): jnz 0x3e2(%rip)
12260(2): test %eax,%eax
12262(6): jns 0x366(%rip)
12268(2): test %bl,%bl
1226a(2): jz 0x11(%rip)
1226c(3): test %r12b,%r12b
1226f(2): jz 0xc(%rip)
12271(5): call 0xffff032f(%rip)
12276(2): mov (%rax),%eax
12278(3): mov %eax,0x40(%rbp)
1227b(5): or $0x1,0x72(%rbp)
12280(4): mov 0x18(%rbp),%rdi
12284(5): call 0xffff061c(%rip)
12289(4): mov 0x48(%r15),%edi
1228d(8): mov $0x0,0x18(%rbp)
12295(6): test $0x200,%edi
1229b(2): jz 0x15(%rip)
1229d(4): mov 0x64(%rsp),%eax
122a1(2): test %eax,%eax
122a3(2): js 0xd(%rip)
122a5(2): mov %eax,%edi
122a7(5): call 0xffff05c9(%rip)
122ac(4): mov 0x48(%r15),%edi
122b0(8): mov $0x0,0x18(%rbp)
122b8(5): mov $0x0,0x5f(%rsp)
122bd(5): jmp 0xfffffaee(%rip)
122c2(6): nop 0x0(%rax,%rax,1)
122c8(2): xor %edx,%edx
122ca(5): cmp $0x0,0x58(%rbp)
122cf(3): setnz %dl
122d2(3): shl/sal $0x11,%edx
122d5(5): jmp 0xfffffef2(%rip)
122da(6): nop 0x0(%rax,%rax,1)
122e0(4): mov 0x18(%rbp),%rdi
122e4(5): call 0xffff05bc(%rip)
122e9(5): cmp $0x3,0x58(%rsp)
122ee(8): mov $0x0,0x18(%rbp)
122f6(6): jz 0x225(%rip)
122fc(9): mov $0x0,0x10(%rsp)
12305(5): mov 0x68(%rsp),%rbx
1230a(9): xor $0x28,%rbx
12313(5): mov 0x10(%rsp),%rax
12318(6): jnz 0x3d9(%rip)
1231e(4): add $0x78,%rsp
12322(1): pop %rbx
12323(1): pop %rbp
12324(2): pop %r12
12326(2): pop %r13
12328(2): pop %r14
1232a(2): pop %r15
1232c(1): ret near (%rsp)
1232d(3): nop (%rax)
12330(4): lea 0x58(%r15),%rbx
12334(3): mov %rbp,%rdx
12337(3): mov %rbx,%rsi
1233a(5): call 0xfffff946(%rip)
1233f(2): xor %edx,%edx
12341(3): mov %rbp,%rsi
12344(3): mov %r15,%rdi
12347(5): call 0xffffee79(%rip)
1234c(4): mov 0x48(%r15),%edi
12350(3): mov %rbp,%rdx
12353(3): mov %rbx,%rsi
12356(5): call 0xfffff87a(%rip)
1235b(2): test %al,%al
1235d(6): jnz 0xfffffeb5(%rip)
12363(5): call 0xffff023d(%rip)
12368(9): mov $0x0,0x10(%rsp)
12371(6): mov $0xc,(%rax)
12377(2): jmp 0xffffff8e(%rip)
12379(7): nop 0x0(%rax)
12380(5): mov $0x0,0x5e(%rsp)
12385(5): jmp 0xfffffb76(%rip)
1238a(6): nop 0x0(%rax,%rax,1)
12390(3): mov %r13,%rdi
12393(5): mov 0x20(%rsp),%rbp
12398(4): mov (%r12),%ebx
1239c(5): call 0xffff08e4(%rip)
123a1(5): mov 0x10(%rsp),%rdi
123a6(5): call 0xfffff18a(%rip)
123ab(4): mov 0x18(%rbp),%rdi
123af(5): call 0xffff04f1(%rip)
123b4(6): mov $0x7,%r9d
123ba(8): mov $0x0,0x18(%rbp)
123c2(9): mov $0x0,0x10(%rsp)
123cb(5): mov %r9w,0x70(%rbp)
123d0(8): or $0x2000,0x48(%r15)
123d8(4): mov %ebx,(%r12)
123dc(5): jmp 0xffffff29(%rip)
123e1(7): nop 0x0(%rax)
123e8(3): mov %rax,%rbp
123eb(5): cmp $0x0,0x5d(%rsp)
123f0(6): jnz 0xfffffc68(%rip)
123f6(5): test $0x4,0x48(%r15)
123fb(2): jz 0x20(%rip)
123fd(5): mov 0x18(%rsp),%rax
12402(4): cmp %rax,0x30(%r15)
12406(2): jz 0x7(%rip)
12408(3): test %rbx,%rbx
1240b(2): jnz 0x8(%rip)
1240d(6): sub $0x1,0x40(%rsp)
12413(5): mov 0x40(%rsp),%rax
12418(3): mov $0x0,(%rax)
1241b(6): cmp $0x0,0x50(%rsp)
12421(2): jnz 0x6f(%rip)
12423(5): cmp $0x0,0x5f(%rsp)
12428(2): jz 0x68(%rip)
1242a(5): cmp $0x1,0x58(%rsp)
1242f(2): jz 0x41(%rip)
12431(3): test %rbx,%rbx
12434(2): jz 0x3c(%rip)
12436(5): cmp $0x0,0x5e(%rsp)
1243b(6): jnz 0xfd(%rip)
12441(5): cmp $0x0,0x40(%r15)
12446(6): jz 0xfffffebf(%rip)
1244c(4): cmp $0x1,%rbx
12450(6): jz 0xfffffeb5(%rip)
12456(5): mov 0x10(%rsp),%rsi
1245b(3): mov %rbx,%rdx
1245e(3): mov %r15,%rdi
12461(5): call 0xffffef2f(%rip)
12466(5): mov %rax,0x10(%rsp)
1246b(5): jmp 0xfffffe9a(%rip)
12470(5): cmp $0x0,0x58(%rbp)
12475(6): jnz 0x131(%rip)
1247b(3): mov %r15,%rdi
1247e(5): call 0xfffff352(%rip)
12483(2): test %eax,%eax
12485(3): setnz %al
12488(2): test %al,%al
1248a(6): jnz 0x189(%rip)
12490(3): test %rbx,%rbx
12493(2): jnz 0xffffffa3(%rip)
12495(5): cmp $0x3,0x58(%rsp)
1249a(6): jz 0x1be(%rip)
124a0(5): mov 0x10(%rsp),%rdi
124a5(5): call 0xfffff08b(%rip)
124aa(9): mov $0x0,0x10(%rsp)
124b3(5): jmp 0xfffffe52(%rip)
124b8(8): nop 0x0(%rax,%rax,1)
124c0(4): mov (%r12),%eax
124c4(5): mov 0x20(%rsp),%rbp
124c9(2): test %eax,%eax
124cb(2): jz 0x23(%rip)
124cd(3): test %rbx,%rbx
124d0(3): mov %eax,0x40(%rbp)
124d3(6): jnz 0x136(%rip)
124d9(6): cmp $0x0,0x50(%rsp)
124df(5): mov $0x4,%eax
124e4(6): jnz 0x125(%rip)
124ea(4): mov %ax,0x70(%rbp)
124ee(4): mov 0x18(%rbp),%rdi
124f2(3): test %rdi,%rdi
124f5(6): jz 0xfffffef6(%rip)
124fb(5): call 0xffff03a5(%rip)
12500(8): mov $0x0,0x18(%rbp)
12508(5): jmp 0xfffffee3(%rip)
1250d(3): nop (%rax)
12510(5): cmp $0x3,0x58(%rsp)
12515(6): jnz 0xfffffde7(%rip)
1251b(6): mov $0x4,%r10d
12521(5): mov %r10w,0x70(%rbp)
12526(5): call 0xffff007a(%rip)
1252b(2): mov (%rax),%eax
1252d(3): mov %eax,0x40(%rbp)
12530(5): jmp 0xfffffdcc(%rip)
12535(3): nop (%rax)
12538(7): lea 0xffffec51(%rip),%rax
1253f(5): mov 0x10(%rsp),%rsi
12544(3): mov %rbx,%rdx
12547(3): mov %r15,%rdi
1254a(4): mov %rax,0x40(%r15)
1254e(5): call 0xffffee42(%rip)
12553(8): mov $0x0,0x40(%r15)
1255b(5): mov %rax,0x10(%rsp)
12560(5): jmp 0xfffffda5(%rip)
12565(3): nop (%rax)
12568(9): mov $0x186a0,0x38(%rsp)
12571(5): mov $0x1,0x5f(%rsp)
12576(4): mov 0x48(%r15),%edi
1257a(5): jmp 0xfffff831(%rip)
1257f(1): nop 
12580(5): mov $0x0,0x5f(%rsp)
12585(4): mov 0x48(%r15),%edi
12589(5): jmp 0xfffff822(%rip)
1258e(2): nop 
12590(2): xor %edx,%edx
12592(3): mov %rbp,%rsi
12595(3): mov %r15,%rdi
12598(5): call 0xffffec28(%rip)
1259d(4): mov %ax,0x70(%rbp)
125a1(5): jmp 0xfffffc71(%rip)
125a6(4): mov 0x8(%rbp),%rsi
125aa(7): lea 0x353a(%rip),%rcx
125b1(5): mov $0xffffffff,%edx
125b6(3): mov %r15,%rdi
125b9(5): call 0xfffff397(%rip)
125be(2): test %eax,%eax
125c0(3): setnz %al
125c3(5): jmp 0xfffffec5(%rip)
125c8(2): xor %ecx,%ecx
125ca(2): mov %eax,%edx
125cc(3): mov %rbp,%rsi
125cf(3): mov %r15,%rdi
125d2(5): call 0xfffff37e(%rip)
125d7(2): test %eax,%eax
125d9(6): jnz 0xfffffc8f(%rip)
125df(5): jmp 0xfffff7c3(%rip)
125e4(8): cmp $0x2,0x88(%rbp)
125ec(6): jnz 0xfffffc5b(%rip)
125f2(2): mov %eax,%esi
125f4(3): mov %rbp,%rdi
125f7(5): call 0xfffff0f9(%rip)
125fc(2): test %eax,%eax
125fe(2): jnz 0x80(%rip)
12600(4): mov 0x64(%rsp),%eax
12604(5): jmp 0xfffffc43(%rip)
12609(5): mov $0x7,%eax
1260e(5): jmp 0xfffffedc(%rip)
12613(5): mov $0x7,%edi
12618(4): mov %di,0x70(%rbp)
1261c(8): or $0x2000,0x48(%r15)
12624(5): mov 0x10(%rsp),%rdi
12629(5): call 0xffffef07(%rip)
1262e(9): mov $0x0,0x10(%rsp)
12637(5): jmp 0xfffffcce(%rip)
1263c(2): mov %eax,%edi
1263e(5): mov $0x3,%edx
12643(5): mov $0x406,%esi
12648(2): xor %eax,%eax
1264a(5): call 0x24e6(%rip)
1264f(4): mov %eax,0x64(%rsp)
12653(5): jmp 0xfffffc0d(%rip)
12658(4): movzx 0x70(%rbp),%eax
1265c(4): cmp $0x7,%ax
12660(6): jz 0xfffffe40(%rip)
12666(4): cmp $0x4,%ax
1266a(6): jz 0xfffffe36(%rip)
12670(5): mov $0x6,%esi
12675(4): mov %si,0x70(%rbp)
12679(5): jmp 0xfffffe27(%rip)
1267e(5): cmp $0x3,0x58(%rsp)
12683(6): jnz 0xfffffefd(%rip)
12689(4): mov 0x64(%rsp),%eax
1268d(3): xor %r12d,%r12d
12690(5): mov $0x1,%ebx
12695(5): jmp 0xfffffbc0(%rip)
1269a(6): nop 0x0(%rax,%rax,1)
126a0(3): mov %r13,%rdi
126a3(5): mov 0x20(%rsp),%rbp
126a8(5): call 0xffff05d8(%rip)
126ad(5): mov 0x10(%rsp),%rdi
126b2(5): call 0xffffee7e(%rip)
126b7(4): mov 0x18(%rbp),%rdi
126bb(5): call 0xffff01e5(%rip)
126c0(6): mov $0x7,%r8d
126c6(8): mov $0x0,0x18(%rbp)
126ce(9): mov $0x0,0x10(%rsp)
126d7(5): mov %r8w,0x70(%rbp)
126dc(8): or $0x2000,0x48(%r15)
126e4(8): mov $0x24,(%r12)
126ec(5): jmp 0xfffffc19(%rip)
126f1(5): call 0xffff008f(%rip)
126f6(7): lea 0x4cc3(%rip),%rax
126fd(3): mov 0x0(%rax,%rdx,4),%eax
12700(7): mov %eax,0x90(%r13)
12707(5): mov $0x1,%eax
1270c(5): jmp 0xfffff7be(%rip)

"rpl_fts_open" :
12720(2): push %r15
12722(2): push %r14
12724(2): push %r13
12726(2): push %r12
12728(1): push %rbp
12729(1): push %rbx
1272a(4): sub $0x28,%rsp
1272e(6): test $0xfffff000,%esi
12734(6): jnz 0x384(%rip)
1273a(2): mov %esi,%eax
1273c(2): mov %esi,%ebp
1273e(5): and $0x204,%eax
12743(5): cmp $0x204,%eax
12748(6): jz 0x370(%rip)
1274e(4): test $0x12,%sil
12752(6): jz 0x366(%rip)
12758(3): mov %rdi,%r13
1275b(5): mov $0x1,%esi
12760(5): mov $0x80,%edi
12765(3): mov %rdx,%r14
12768(5): call 0xffff01a8(%rip)
1276d(3): test %rax,%rax
12770(3): mov %rax,%rbx
12773(6): jz 0x25b(%rip)
12779(4): test $0x2,%bpl
1277d(4): mov %r14,0x40(%rax)
12781(6): jnz 0x25f(%rip)
12787(4): mov 0x0(%r13),%rdi
1278b(3): mov %ebp,0x48(%rax)
1278e(7): mov $0xffffff9c,0x2c(%rbx)
12795(3): test %rdi,%rdi
12798(6): jz 0x267(%rip)
1279e(3): mov %r13,%r15
127a1(3): xor %r12d,%r12d
127a4(4): nop 0x0(%rax)
127a8(5): call 0xfffeffa8(%rip)
127ad(3): cmp %rax,%r12
127b0(4): cmovnae %rax,%r12
127b4(4): add $0x8,%r15
127b8(3): mov (%r15),%rdi
127bb(3): test %rdi,%rdi
127be(2): jnz 0xffffffea(%rip)
127c0(5): lea 0x1(%r12),%rdx
127c5(5): mov $0x1000,%eax
127ca(7): cmp $0x1000,%rdx
127d1(4): cmovnae %rax,%rdx
127d5(4): lea 0x30(%rbx),%rsi
127d9(4): lea 0x20(%rbx),%rdi
127dd(5): call 0xfffff053(%rip)
127e2(2): test %al,%al
127e4(4): mov %al,0x16(%rsp)
127e8(6): jz 0x2a1(%rip)
127ee(4): mov 0x0(%r13),%rsi
127f2(3): test %rsi,%rsi
127f5(6): jz 0x2ab(%rip)
127fb(7): lea 0x3f8a(%rip),%rsi
12802(2): xor %edx,%edx
12804(3): mov %rbx,%rdi
12807(5): call 0xffffec99(%rip)
1280c(3): test %rax,%rax
1280f(3): mov %rax,%r15
12812(6): jz 0x26e(%rip)
12818(7): mov $0xffffffff,%rax
1281f(3): test %r14,%r14
12822(4): mov 0x0(%r13),%rsi
12826(4): mov %rax,0x58(%r15)
1282a(4): mov %rax,0x68(%r15)
1282e(2): jz 0xf(%rip)
12830(3): mov 0x48(%rbx),%eax
12833(3): shr $0xa,%eax
12836(3): and $0x1,%eax
12839(4): mov %al,0x16(%rsp)
1283d(3): test %rsi,%rsi
12840(6): jz 0x26c(%rip)
12846(3): shr $0xb,%ebp
12849(9): mov $0x0,0x18(%rsp)
12852(3): xor %r12d,%r12d
12855(3): xor $0x1,%ebp
12858(2): mov %ebp,%eax
1285a(2): xor %ebp,%ebp
1285c(3): and $0x1,%eax
1285f(4): mov %al,0x17(%rsp)
12863(2): jmp 0x79(%rip)
12865(3): nop (%rax)
12868(3): mov %rax,%rdx
1286b(3): mov %rbx,%rdi
1286e(5): call 0xffffec32(%rip)
12873(3): test %rax,%rax
12876(3): mov %rax,%rcx
12879(6): jz 0x1f7(%rip)
1287f(8): mov $0x0,0x58(%rax)
12887(4): mov %r15,0x8(%rax)
1288b(7): lea 0x108(%rax),%rax
12892(3): test %r12,%r12
12895(4): mov %rax,0x30(%rcx)
12899(6): jz 0x177(%rip)
1289f(5): cmp $0x0,0x16(%rsp)
128a4(6): jz 0x16c(%rip)
128aa(5): mov $0xb,%esi
128af(3): test %r14,%r14
128b2(b): mov $0x2,0xa8(%rcx)
128bd(4): mov %si,0x70(%rcx)
128c1(6): jz 0x18f(%rip)
128c7(4): mov %r12,0x10(%rcx)
128cb(3): mov %rcx,%r12
128ce(4): add $0x1,%rbp
128d2(5): mov 0x0(%r13,%rbp,8),%rsi
128d7(3): test %rsi,%rsi
128da(2): jz 0x56(%rip)
128dc(3): mov %rsi,%rdi
128df(5): mov %rsi,0x8(%rsp)
128e4(5): call 0xfffefe6c(%rip)
128e9(4): cmp $0x2,%rax
128ed(5): mov 0x8(%rsp),%rsi
128f2(6): jbe 0xffffff76(%rip)
128f8(5): cmp $0x0,0x17(%rsp)
128fd(6): jz 0xffffff6b(%rip)
12903(5): cmp $0x2f,0xffffffff(%rsi,%rax,1)
12908(6): jnz 0xffffff60(%rip)
1290e(2): nop 
12910(5): cmp $0x2f,0xfffffffe(%rsi,%rax,1)
12915(6): jnz 0xffffff53(%rip)
1291b(4): sub $0x1,%rax
1291f(4): cmp $0x1,%rax
12923(2): jnz 0xffffffed(%rip)
12925(5): jmp 0xffffff43(%rip)
1292a(6): nop 0x0(%rax,%rax,1)
12930(3): test %r14,%r14
12933(2): jz 0x19(%rip)
12935(4): cmp $0x1,%rbp
12939(2): jbe 0x13(%rip)
1293b(3): mov %r12,%rsi
1293e(3): mov %rbp,%rdx
12941(3): mov %rbx,%rdi
12944(5): call 0xffffea4c(%rip)
12949(3): mov %rax,%r12
1294c(7): lea 0x3e39(%rip),%rsi
12953(2): xor %edx,%edx
12955(3): mov %rbx,%rdi
12958(5): call 0xffffeb48(%rip)
1295d(3): test %rax,%rax
12960(3): mov %rax,(%rbx)
12963(6): jz 0x10d(%rip)
12969(3): mov 0x48(%rbx),%edi
1296c(5): mov $0x9,%edx
12971(4): lea 0x58(%rbx),%rsi
12975(4): mov %r12,0x10(%rax)
12979(4): mov %dx,0x70(%rax)
1297d(8): mov $0x1,0x58(%rax)
12985(5): call 0xffffef1b(%rip)
1298a(2): test %al,%al
1298c(6): jz 0xe4(%rip)
12992(3): mov 0x48(%rbx),%esi
12995(6): test $0x204,%esi
1299b(2): jnz 0x25(%rip)
1299d(3): mov 0x2c(%rbx),%edi
129a0(7): lea 0x3145(%rip),%rdx
129a7(5): call 0xffffef69(%rip)
129ac(2): test %eax,%eax
129ae(3): mov %eax,0x28(%rbx)
129b1(2): jns 0xf(%rip)
129b3(4): or $0x4,0x48(%rbx)
129b7(9): nop 0x0(%rax,%rax,1)
129c0(4): lea 0x60(%rbx),%rdi
129c4(5): mov $0xffffffff,%esi
129c9(5): call 0x12e7(%rip)
129ce(4): add $0x28,%rsp
129d2(3): mov %rbx,%rax
129d5(1): pop %rbx
129d6(1): pop %rbp
129d7(2): pop %r12
129d9(2): pop %r13
129db(2): pop %r14
129dd(2): pop %r15
129df(1): ret near (%rsp)
129e0(4): mov 0x0(%r13),%rdi
129e4(2): mov %ebp,%eax
129e6(7): mov $0xffffff9c,0x2c(%rbx)
129ed(3): and $0xfd,%ah
129f0(3): or $0x4,%eax
129f3(3): test %rdi,%rdi
129f6(3): mov %eax,0x48(%rbx)
129f9(6): jnz 0xfffffda5(%rip)
129ff(5): mov $0x1000,%edx
12a04(5): jmp 0xfffffdd1(%rip)
12a09(7): nop 0x0(%rax)
12a10(2): xor %edx,%edx
12a12(3): mov %rcx,%rsi
12a15(3): mov %rbx,%rdi
12a18(5): mov %rcx,0x8(%rsp)
12a1d(5): call 0xffffe7a3(%rip)
12a22(5): mov 0x8(%rsp),%rcx
12a27(3): test %r14,%r14
12a2a(4): mov %ax,0x70(%rcx)
12a2e(6): jnz 0xfffffe99(%rip)
12a34(3): test %r12,%r12
12a37(8): mov $0x0,0x10(%rcx)
12a3f(2): jnz 0x19(%rip)
12a41(5): mov %rcx,0x18(%rsp)
12a46(3): mov %rcx,%r12
12a49(5): jmp 0xfffffe85(%rip)
12a4e(2): nop 
12a50(8): mov $0x0,0x10(%rcx)
12a58(5): mov 0x18(%rsp),%rax
12a5d(5): mov %rcx,0x18(%rsp)
12a62(4): mov %rcx,0x10(%rax)
12a66(5): jmp 0xfffffe68(%rip)
12a6b(5): nop 0x0(%rax,%rax,1)
12a70(3): mov %r12,%rdi
12a73(5): call 0xffffeabd(%rip)
12a78(3): mov %r15,%rdi
12a7b(5): call 0xffff0205(%rip)
12a80(4): mov 0x20(%rbx),%rdi
12a84(5): call 0xffff01fc(%rip)
12a89(3): mov %rbx,%rdi
12a8c(2): xor %ebx,%ebx
12a8e(5): call 0xffff01f2(%rip)
12a93(5): jmp 0xffffff3b(%rip)
12a98(8): nop 0x0(%rax,%rax,1)
12aa0(3): xor %r15d,%r15d
12aa3(3): test %r14,%r14
12aa6(6): jnz 0xfffffd8a(%rip)
12aac(3): xor %r12d,%r12d
12aaf(5): jmp 0xfffffe9d(%rip)
12ab4(4): nop 0x0(%rax)
12ab8(5): call 0xfffefae8(%rip)
12abd(2): xor %ebx,%ebx
12abf(6): mov $0x16,(%rax)
12ac5(5): jmp 0xffffff09(%rip)

"rpl_fts_close" :
12ad0(2): push %r12
12ad2(1): push %rbp
12ad3(3): mov %rdi,%rbp
12ad6(1): push %rbx
12ad7(3): mov (%rdi),%rdi
12ada(3): test %rdi,%rdi
12add(2): jz 0x46(%rip)
12adf(5): cmp $0x0,0x58(%rdi)
12ae4(2): jns 0x1b(%rip)
12ae6(5): jmp 0x11a(%rip)
12aeb(5): nop 0x0(%rax,%rax,1)
12af0(5): call 0xffff0190(%rip)
12af5(5): cmp $0x0,0x58(%rbx)
12afa(3): mov %rbx,%rdi
12afd(2): js 0x1e(%rip)
12aff(4): mov 0x10(%rdi),%rbx
12b03(3): test %rbx,%rbx
12b06(2): jnz 0xffffffea(%rip)
12b08(4): mov 0x8(%rdi),%rbx
12b0c(5): call 0xffff0174(%rip)
12b11(5): cmp $0x0,0x58(%rbx)
12b16(3): mov %rbx,%rdi
12b19(2): jns 0xffffffe6(%rip)
12b1b(3): mov %rbx,%rdi
12b1e(5): call 0xffff0162(%rip)
12b23(4): mov 0x8(%rbp),%rdi
12b27(3): test %rdi,%rdi
12b2a(2): jz 0x7(%rip)
12b2c(5): call 0xffffea04(%rip)
12b31(4): mov 0x10(%rbp),%rdi
12b35(5): call 0xffff014b(%rip)
12b3a(4): mov 0x20(%rbp),%rdi
12b3e(5): call 0xffff0142(%rip)
12b43(3): mov 0x48(%rbp),%eax
12b46(3): test $0x2,%ah
12b49(2): jz 0x67(%rip)
12b4b(3): mov 0x2c(%rbp),%edi
12b4e(2): test %edi,%edi
12b50(6): jns 0x90(%rip)
12b56(2): xor %ebx,%ebx
12b58(4): lea 0x60(%rbp),%rdi
12b5c(5): call 0xffffea24(%rip)
12b61(4): mov 0x50(%rbp),%rdi
12b65(3): test %rdi,%rdi
12b68(2): jz 0x7(%rip)
12b6a(5): call 0xffff96d6(%rip)
12b6f(7): test $0x102,0x48(%rbp)
12b76(4): mov 0x58(%rbp),%rdi
12b7a(2): jz 0x26(%rip)
12b7c(3): test %rdi,%rdi
12b7f(2): jz 0x7(%rip)
12b81(5): call 0xffff96bf(%rip)
12b86(3): mov %rbp,%rdi
12b89(5): call 0xffff00f7(%rip)
12b8e(2): test %ebx,%ebx
12b90(6): jnz 0xb1(%rip)
12b96(2): mov %ebx,%eax
12b98(1): pop %rbx
12b99(1): pop %rbp
12b9a(2): pop %r12
12b9c(1): ret near (%rsp)
12b9d(3): nop (%rax)
12ba0(5): call 0xffff00e0(%rip)
12ba5(2): jmp 0xffffffe1(%rip)
12ba7(9): nop 0x0(%rax,%rax,1)
12bb0(2): test $0x4,%al
12bb2(2): jnz 0xffffffa4(%rip)
12bb4(3): mov 0x28(%rbp),%edi
12bb7(5): call 0xfffefea9(%rip)
12bbc(2): test %eax,%eax
12bbe(2): jnz 0x52(%rip)
12bc0(3): mov 0x28(%rbp),%edi
12bc3(5): call 0xfffefcad(%rip)
12bc8(2): test %eax,%eax
12bca(2): jz 0xffffff8c(%rip)
12bcc(5): call 0xfffef9d4(%rip)
12bd1(3): mov %rax,%r12
12bd4(2): jmp 0x64(%rip)
12bd6(a): nop 0x0(%rax,%rax,1)
12be0(5): call 0xfffefc90(%rip)
12be5(2): test %eax,%eax
12be7(6): jz 0xffffff6f(%rip)
12bed(5): call 0xfffef9b3(%rip)
12bf2(2): mov (%rax),%ebx
12bf4(5): jmp 0xffffff64(%rip)
12bf9(7): nop 0x0(%rax)
12c00(3): mov %rdi,%rbx
12c03(3): mov %rbx,%rdi
12c06(5): call 0xffff007a(%rip)
12c0b(5): jmp 0xffffff18(%rip)
12c10(5): call 0xfffef990(%rip)
12c15(3): mov 0x28(%rbp),%edi
12c18(3): mov %rax,%r12
12c1b(2): mov (%rax),%ebx
12c1d(5): call 0xfffefc53(%rip)
12c22(2): test %eax,%eax
12c24(6): jz 0xffffff34(%rip)
12c2a(2): test %ebx,%ebx
12c2c(6): jnz 0xffffff2c(%rip)
12c32(6): nop 0x0(%rax,%rax,1)
12c38(4): mov (%r12),%ebx
12c3c(5): jmp 0xffffff1c(%rip)
12c41(5): call 0xfffef95f(%rip)
12c46(2): mov %ebx,(%rax)
12c48(5): mov $0xffffffff,%ebx
12c4d(5): jmp 0xffffff49(%rip)

"rpl_fts_read" :
12c60(2): push %r14
12c62(2): push %r13
12c64(2): push %r12
12c66(1): push %rbp
12c67(1): push %rbx
12c68(3): mov (%rdi),%rbp
12c6b(3): test %rbp,%rbp
12c6e(6): jz 0x110(%rip)
12c74(3): mov 0x48(%rdi),%edx
12c77(3): test $0x20,%dh
12c7a(6): jnz 0x104(%rip)
12c80(4): movzx 0x74(%rbp),%eax
12c84(5): mov $0x3,%ebx
12c89(3): mov %rdi,%r12
12c8c(4): mov %bx,0x74(%rbp)
12c90(4): cmp $0x1,%ax
12c94(6): jz 0x24c(%rip)
12c9a(4): cmp $0x2,%ax
12c9e(4): movzx 0x70(%rbp),%ecx
12ca2(6): jz 0xee(%rip)
12ca8(4): cmp $0x1,%cx
12cac(2): jnz 0x34(%rip)
12cae(5): jmp 0x222(%rip)
12cb3(5): nop 0x0(%rax,%rax,1)
12cb8(4): mov %rbx,(%r12)
12cbc(3): mov %rbp,%rdi
12cbf(5): call 0xfffeffc1(%rip)
12cc4(5): cmp $0x0,0x58(%rbx)
12cc9(6): jz 0x237(%rip)
12ccf(4): movzx 0x74(%rbx),%eax
12cd3(3): mov %rbx,%rbp
12cd6(4): cmp $0x4,%ax
12cda(6): jnz 0x32e(%rip)
12ce0(4): mov 0x10(%rbp),%rbx
12ce4(3): test %rbx,%rbx
12ce7(2): jnz 0xffffffd1(%rip)
12ce9(4): mov 0x8(%rbp),%rbx
12ced(5): cmp $0x0,0x18(%rbx)
12cf2(6): jnz 0x56e(%rip)
12cf8(4): mov %rbx,(%r12)
12cfc(3): mov %rbp,%rdi
12cff(5): call 0xfffeff81(%rip)
12d04(5): cmp $0xffffffff,0x58(%rbx)
12d09(6): jz 0x4b9(%rip)
12d0f(5): cmp $0xb,0x70(%rbx)
12d14(6): jz 0x13b(%rip)
12d1a(5): mov 0x20(%r12),%rdx
12d1f(4): mov 0x48(%rbx),%rax
12d23(4): mov $0x0,0x0(%rdx,%rax,1)
12d27(5): cmp $0x0,0x58(%rbx)
12d2c(6): jz 0x3c4(%rip)
12d32(4): movzx 0x72(%rbx),%eax
12d36(2): test $0x2,%al
12d38(6): jz 0x370(%rip)
12d3e(5): mov 0x48(%r12),%eax
12d43(3): mov 0x44(%rbx),%edi
12d46(2): test $0x4,%al
12d48(6): jz 0x404(%rip)
12d4e(5): call 0xfffefb22(%rip)
12d53(5): mov 0x48(%r12),%edi
12d58(5): cmp $0x2,0x70(%rbx)
12d5d(2): jz 0x16(%rip)
12d5f(3): mov 0x40(%rbx),%ecx
12d62(2): test %ecx,%ecx
12d64(6): jz 0x3a4(%rip)
12d6a(5): mov $0x7,%edx
12d6f(4): mov %dx,0x70(%rbx)
12d73(6): and $0x2000,%edi
12d79(3): mov %rbx,%rbp
12d7c(2): jz 0x7e(%rip)
12d7e(2): xor %ebp,%ebp
12d80(1): pop %rbx
12d81(3): mov %rbp,%rax
12d84(1): pop %rbp
12d85(2): pop %r12
12d87(2): pop %r13
12d89(2): pop %r14
12d8b(1): ret near (%rsp)
12d8c(4): nop 0x0(%rax)
12d90(3): lea 0xfffffff4(%rcx),%eax
12d93(4): cmp $0x1,%ax
12d97(2): jbe 0x79(%rip)
12d99(4): cmp $0x1,%cx
12d9d(6): jnz 0xffffff43(%rip)
12da3(3): test $0x40,%dl
12da6(6): jz 0xb2(%rip)
12dac(5): mov 0x18(%r12),%rax
12db1(4): cmp %rax,0x78(%rbp)
12db5(6): jz 0xa3(%rip)
12dbb(4): test $0x2,0x72(%rbp)
12dbf(6): jnz 0x4e1(%rip)
12dc5(5): mov 0x8(%r12),%rdi
12dca(3): test %rdi,%rdi
12dcd(2): jz 0x10(%rip)
12dcf(5): call 0xffffe761(%rip)
12dd4(9): mov $0x0,0x8(%r12)
12ddd(5): mov 0x48(%r12),%edi
12de2(6): mov $0x6,%r10d
12de8(5): lea 0x58(%r12),%rsi
12ded(5): mov %r10w,0x70(%rbp)
12df2(3): mov %rbp,%rdx
12df5(5): call 0xffffee8b(%rip)
12dfa(1): pop %rbx
12dfb(3): mov %rbp,%rax
12dfe(1): pop %rbp
12dff(2): pop %r12
12e01(2): pop %r13
12e03(2): pop %r14
12e05(1): ret near (%rsp)
12e06(a): nop 0x0(%rax,%rax,1)
12e10(5): mov $0x1,%edx
12e15(3): mov %rbp,%rsi
12e18(5): call 0xffffe3a8(%rip)
12e1d(4): cmp $0x1,%ax
12e21(4): mov %ax,0x70(%rbp)
12e25(6): jz 0x347(%rip)
12e2b(4): cmp $0xb,%ax
12e2f(4): mov %rbp,(%r12)
12e33(2): jnz 0xffffffc7(%rip)
12e35(3): nop (%rax)
12e38(7): mov 0xa8(%rbp),%rax
12e3f(4): cmp $0x2,%rax
12e43(6): jz 0x3a5(%rip)
12e49(4): cmp $0x1,%rax
12e4d(2): jz 0xffffffad(%rip)
12e4f(5): call 0xfffef741(%rip)
12e54(4): nop 0x0(%rax)
12e58(5): mov 0x8(%r12),%rdi
12e5d(3): test %rdi,%rdi
12e60(6): jz 0x218(%rip)
12e66(3): test $0x10,%dh
12e69(6): jnz 0x1f9(%rip)
12e6f(4): mov 0x30(%rbp),%rcx
12e73(5): mov $0xffffffff,%edx
12e78(3): mov %rbp,%rsi
12e7b(3): mov %r12,%rdi
12e7e(5): call 0xffffead2(%rip)
12e83(2): test %eax,%eax
12e85(6): jz 0x2bd(%rip)
12e8b(5): call 0xfffef715(%rip)
12e90(2): mov (%rax),%eax
12e92(5): or $0x1,0x72(%rbp)
12e97(3): mov %eax,0x40(%rbp)
12e9a(5): mov 0x8(%r12),%rbp
12e9f(3): test %rbp,%rbp
12ea2(6): jz 0x1f4(%rip)
12ea8(3): mov %rbp,%rax
12eab(5): nop 0x0(%rax,%rax,1)
12eb0(4): mov 0x8(%rax),%rdx
12eb4(4): mov 0x30(%rdx),%rdx
12eb8(4): mov %rdx,0x30(%rax)
12ebc(4): mov 0x10(%rax),%rax
12ec0(3): test %rax,%rax
12ec3(2): jnz 0xffffffed(%rip)
12ec5(5): jmp 0x1d1(%rip)
12eca(6): nop 0x0(%rax,%rax,1)
12ed0(4): cmp $0x4,%ax
12ed4(6): jnz 0xfffffecf(%rip)
12eda(5): jmp 0xfffffee1(%rip)
12edf(1): nop 
12ee0(3): mov %rbp,%rsi
12ee3(2): xor %edx,%edx
12ee5(5): call 0xffffe2db(%rip)
12eea(4): mov %ax,0x70(%rbp)
12eee(3): mov %rbp,%rax
12ef1(1): pop %rbx
12ef2(1): pop %rbp
12ef3(2): pop %r12
12ef5(2): pop %r13
12ef7(2): pop %r14
12ef9(1): ret near (%rsp)
12efa(6): nop 0x0(%rax,%rax,1)
12f00(3): mov %r12,%rdi
12f03(5): call 0xffffe8cd(%rip)
12f08(2): test %eax,%eax
12f0a(6): jnz 0x407(%rip)
12f10(9): test $0x102,0x48(%r12)
12f19(5): mov 0x58(%r12),%rdi
12f1e(6): jz 0x13a(%rip)
12f24(3): test %rdi,%rdi
12f27(2): jz 0x7(%rip)
12f29(5): call 0xffff9317(%rip)
12f2e(4): mov 0x60(%rbx),%rdx
12f32(7): lea 0x108(%rbx),%rbp
12f39(5): mov 0x20(%r12),%rdi
12f3e(3): mov %rbp,%rsi
12f41(4): mov %rdx,0x48(%rbx)
12f45(4): add $0x1,%rdx
12f49(5): call 0xfffefbb7(%rip)
12f4e(5): mov $0x2f,%esi
12f53(3): mov %rbp,%rdi
12f56(5): call 0xfffef88a(%rip)
12f5b(3): test %rax,%rax
12f5e(2): jz 0x2d(%rip)
12f60(3): cmp %rax,%rbp
12f63(6): jz 0x1cd(%rip)
12f69(4): lea 0x1(%rax),%r13
12f6d(3): mov %r13,%rdi
12f70(5): call 0xfffef7e0(%rip)
12f75(4): lea 0x1(%rax),%rdx
12f79(3): mov %rax,%r14
12f7c(3): mov %r13,%rsi
12f7f(3): mov %rbp,%rdi
12f82(5): call 0xfffefb7e(%rip)
12f87(4): mov %r14,0x60(%rbx)
12f8b(5): mov 0x20(%r12),%rax
12f90(5): mov 0x48(%r12),%edi
12f95(5): lea 0x58(%r12),%rsi
12f9a(3): mov %rbx,%rbp
12f9d(4): mov %rax,0x38(%rbx)
12fa1(4): mov %rax,0x30(%rbx)
12fa5(5): call 0xffffe8fb(%rip)
12faa(4): movzx 0x70(%rbx),%eax
12fae(4): cmp $0xb,%ax
12fb2(4): mov %rbp,(%r12)
12fb6(6): jz 0xfffffe82(%rip)
12fbc(4): cmp $0x1,%ax
12fc0(6): jnz 0xfffffe3a(%rip)
12fc6(5): cmp $0x0,0x58(%rbp)
12fcb(2): jnz 0xb(%rip)
12fcd(4): mov 0x78(%rbp),%rax
12fd1(5): mov %rax,0x18(%r12)
12fd6(5): mov 0x48(%r12),%edi
12fdb(5): lea 0x58(%r12),%rsi
12fe0(3): mov %rbp,%rdx
12fe3(5): call 0xffffebed(%rip)
12fe8(2): test %al,%al
12fea(6): jnz 0xfffffe10(%rip)
12ff0(5): call 0xfffef5b0(%rip)
12ff5(2): xor %ebp,%ebp
12ff7(6): mov $0xc,(%rax)
12ffd(5): jmp 0xfffffdfd(%rip)
13002(6): nop 0x0(%rax,%rax,1)
13008(4): cmp $0x2,%ax
1300c(6): jz 0x2a1(%rip)
13012(4): mov 0x8(%rbp),%rax
13016(7): lea 0x108(%rbp),%rsi
1301d(4): mov 0x48(%rax),%rdi
13021(4): mov 0x38(%rax),%rax
13025(5): cmp $0x2f,0xffffffff(%rax,%rdi,1)
1302a(4): lea 0xffffffff(%rdi),%rdx
1302e(4): cmove %rdx,%rdi
13032(5): add 0x20(%r12),%rdi
13037(3): mov $0x2f,(%rdi)
1303a(4): mov 0x60(%rbp),%rax
1303e(4): add $0x1,%rdi
13042(4): lea 0x1(%rax),%rdx
13046(5): call 0xfffefaba(%rip)
1304b(4): movzx 0x70(%rbp),%eax
1304f(5): jmp 0xffffff5f(%rip)
13054(4): nop 0x0(%rax)
13058(5): call 0xfffefc28(%rip)
1305d(5): jmp 0xfffffed1(%rip)
13062(3): and $0xef,%dh
13065(5): mov %edx,0x48(%r12)
1306a(5): call 0xffffe4c6(%rip)
1306f(9): mov $0x0,0x8(%r12)
13078(5): mov $0x3,%esi
1307d(3): mov %r12,%rdi
13080(5): call 0xffffecc0(%rip)
13085(3): test %rax,%rax
13088(5): mov %rax,0x8(%r12)
1308d(6): jz 0xf7(%rip)
13093(3): mov %rax,%rbp
13096(9): mov $0x0,0x8(%r12)
1309f(5): jmp 0xffffff73(%rip)
130a4(4): nop 0x0(%rax)
130a8(2): test $0x1,%al
130aa(6): jnz 0xfffffca9(%rip)
130b0(4): mov 0x8(%rbx),%rsi
130b4(7): lea 0x2a30(%rip),%rcx
130bb(5): mov $0xffffffff,%edx
130c0(3): mov %r12,%rdi
130c3(5): call 0xffffe88d(%rip)
130c8(2): test %eax,%eax
130ca(6): jz 0xfffffc89(%rip)
130d0(5): call 0xfffef4d0(%rip)
130d5(5): mov 0x48(%r12),%edi
130da(2): mov (%rax),%eax
130dc(6): or $0x2000,%edi
130e2(3): mov %eax,0x40(%rbx)
130e5(5): mov %edi,0x48(%r12)
130ea(5): jmp 0xfffffc6e(%rip)
130ef(1): nop 
130f0(3): mov %r12,%rdi
130f3(5): call 0xffffe6dd(%rip)
130f8(2): test %eax,%eax
130fa(2): jnz 0xffffffd6(%rip)
130fc(5): jmp 0xfffffc57(%rip)
13101(7): nop 0x0(%rax)
13108(5): mov $0x6,%eax
1310d(5): lea 0x58(%r12),%rsi
13112(3): mov %rbx,%rdx
13115(4): mov %ax,0x70(%rbx)
13119(5): call 0xffffeb67(%rip)
1311e(5): mov 0x48(%r12),%edi
13123(5): jmp 0xfffffc50(%rip)
13128(8): nop 0x0(%rax,%rax,1)
13130(7): cmp $0x0,0x109(%rbx)
13137(6): jnz 0xfffffe32(%rip)
1313d(5): jmp 0xfffffe4e(%rip)
13142(5): mov 0x8(%r12),%rbp
13147(5): jmp 0xffffff4f(%rip)
1314c(3): test $0x2,%ah
1314f(6): jz 0x19e(%rip)
13155(2): mov %edi,%esi
13157(5): mov $0x1,%edx
1315c(3): mov %r12,%rdi
1315f(5): call 0xffffe601(%rip)
13164(3): mov 0x44(%rbx),%edi
13167(5): jmp 0xfffffbe7(%rip)
1316c(5): mov 0x48(%r12),%esi
13171(4): test $0x4,%sil
13175(6): jz 0x207(%rip)
1317b(4): mov %rbp,(%r12)
1317f(5): jmp 0xfffffe47(%rip)
13184(5): mov 0x48(%r12),%edi
13189(6): test $0x2000,%edi
1318f(6): jnz 0xfffffbef(%rip)
13195(4): mov 0x40(%rbp),%r9d
13199(3): test %r9d,%r9d
1319c(2): jz 0x14(%rip)
1319e(5): cmp $0x4,0x70(%rbp)
131a3(2): jz 0xd(%rip)
131a5(6): mov $0x7,%r8d
131ab(5): mov %r8w,0x70(%rbp)
131b0(5): lea 0x58(%r12),%rsi
131b5(3): mov %rbp,%rdx
131b8(5): call 0xffffeac8(%rip)
131bd(5): jmp 0xfffffc3d(%rip)
131c2(3): mov %rbx,%rdi
131c5(2): xor %ebp,%ebp
131c7(5): call 0xfffefab9(%rip)
131cc(5): call 0xfffef3d4(%rip)
131d1(6): mov $0x0,(%rax)
131d7(8): mov $0x0,(%r12)
131df(5): jmp 0xfffffc1b(%rip)
131e4(4): nop 0x0(%rax)
131e8(4): mov 0x8(%rbp),%rbx
131ec(5): cmp $0x0,0x68(%rbx)
131f1(2): jnz 0x13(%rip)
131f3(5): mov 0x48(%r12),%eax
131f8(3): and $0x18,%eax
131fb(3): cmp $0x18,%eax
131fe(6): jz 0x15f(%rip)
13204(2): xor %edx,%edx
13206(3): mov %rbp,%rsi
13209(3): mov %r12,%rdi
1320c(5): call 0xffffdfb4(%rip)
13211(6): mov 0x90(%rbp),%edx
13217(4): mov %ax,0x70(%rbp)
1321b(6): and $0xf000,%edx
13221(6): cmp $0x4000,%edx
13227(6): jnz 0xfffffd95(%rip)
1322d(5): cmp $0x0,0x58(%rbp)
13232(6): jz 0x11c(%rip)
13238(4): mov 0x68(%rbx),%rcx
1323c(4): lea 0xffffffff(%rcx),%rdx
13240(4): cmp $0xfffffffd,%rdx
13244(2): jnbe 0x6(%rip)
13246(4): mov %rdx,0x68(%rbx)
1324a(4): cmp $0x1,%ax
1324e(6): jnz 0xfffffbac(%rip)
13254(5): jmp 0xfffffd82(%rip)
13259(7): nop 0x0(%rax)
13260(4): mov 0x48(%rbx),%rax
13264(5): mov 0x20(%r12),%rdx
13269(5): mov $0x3,%esi
1326e(4): mov %rbx,(%r12)
13272(3): mov %r12,%rdi
13275(4): mov $0x0,0x0(%rdx,%rax,1)
13279(5): call 0xffffeac7(%rip)
1327e(3): test %rax,%rax
13281(3): mov %rax,%rbx
13284(2): jz 0x54(%rip)
13286(3): mov %rbp,%rdi
13289(3): mov %rbx,%rbp
1328c(5): call 0xfffef9f4(%rip)
13291(5): jmp 0xfffffd81(%rip)
13296(a): nop 0x0(%rax,%rax,1)
132a0(3): mov 0x44(%rbp),%edi
132a3(5): call 0xfffef5cd(%rip)
132a8(5): jmp 0xfffffb1d(%rip)
132ad(5): mov $0x1,%edx
132b2(3): mov %rbx,%rsi
132b5(3): mov %r12,%rdi
132b8(5): call 0xffffdf08(%rip)
132bd(4): cmp $0x1,%ax
132c1(4): mov %ax,0x70(%rbx)
132c5(2): jz 0x5c(%rip)
132c7(5): mov $0x3,%esi
132cc(3): mov %rbx,%rbp
132cf(4): mov %si,0x74(%rbx)
132d3(5): jmp 0xfffffd3f(%rip)
132d8(6): test $0x20,0x49(%r12)
132de(6): jnz 0xfffffaa0(%rip)
132e4(4): mov 0x8(%rbp),%rbx
132e8(5): jmp 0xfffffa10(%rip)
132ed(5): call 0xfffef773(%rip)
132f2(2): test %eax,%eax
132f4(2): jz 0x15(%rip)
132f6(5): call 0xfffef2aa(%rip)
132fb(2): mov (%rax),%eax
132fd(3): mov %eax,0x40(%rbx)
13300(9): or $0x2000,0x48(%r12)
13309(3): mov 0x44(%rbx),%edi
1330c(5): jmp 0xfffffa42(%rip)
13311(9): or $0x2000,0x48(%r12)
1331a(2): xor %ebp,%ebp
1331c(5): jmp 0xfffffade(%rip)
13321(5): mov 0x48(%r12),%esi
13326(4): test $0x4,%sil
1332a(2): jnz 0xffffff9d(%rip)
1332c(5): mov 0x2c(%r12),%edi
13331(7): lea 0x27b4(%rip),%rdx
13338(5): call 0xffffe5d8(%rip)
1333d(2): test %eax,%eax
1333f(3): mov %eax,0x44(%rbx)
13342(2): js 0x7e(%rip)
13344(5): or $0x2,0x72(%rbx)
13349(5): jmp 0xffffff7e(%rip)
1334e(4): cmp $0x1,%ax
13352(6): jnz 0xfffffaa8(%rip)
13358(5): jmp 0xfffffc75(%rip)
1335d(5): mov 0x2c(%r12),%esi
13362(3): mov %rbx,%rdi
13365(5): call 0xffffe38b(%rip)
1336a(3): cmp $0x2,%eax
1336d(6): jnz 0xfffffe97(%rip)
13373(4): movzx 0x70(%rbp),%eax
13377(5): jmp 0xfffffc45(%rip)
1337c(5): mov 0x2c(%r12),%edi
13381(7): lea 0x2764(%rip),%rdx
13388(5): call 0xffffe588(%rip)
1338d(2): test %eax,%eax
1338f(3): mov %eax,0x44(%rbp)
13392(2): js 0x10(%rip)
13394(5): or $0x2,0x72(%rbp)
13399(4): movzx 0x70(%rbp),%eax
1339d(5): jmp 0xfffffc11(%rip)
133a2(5): call 0xfffef1fe(%rip)
133a7(2): mov (%rax),%eax
133a9(6): mov $0x7,%r11d
133af(5): mov %r11w,0x70(%rbp)
133b4(3): mov %eax,0x40(%rbp)
133b7(4): mov %rbp,(%r12)
133bb(5): jmp 0xfffffa3f(%rip)
133c0(5): call 0xfffef1e0(%rip)
133c5(2): mov (%rax),%eax
133c7(5): mov $0x7,%edi
133cc(4): mov %di,0x70(%rbx)
133d0(3): mov %eax,0x40(%rbx)
133d3(5): jmp 0xfffffef4(%rip)

"rpl_fts_set" :
133e0(3): cmp $0x4,%edx
133e3(2): jnbe 0xd(%rip)
133e5(4): mov %dx,0x74(%rsi)
133e9(2): xor %eax,%eax
133eb(1): ret near (%rsp)
133ec(4): nop 0x0(%rax)
133f0(4): sub $0x8,%rsp
133f4(5): call 0xfffef1ac(%rip)
133f9(6): mov $0x16,(%rax)
133ff(5): mov $0x1,%eax
13404(4): add $0x8,%rsp
13408(1): ret near (%rsp)

"rpl_fts_children" :
13410(2): push %r14
13412(2): push %r13
13414(2): push %r12
13416(1): push %rbp
13417(3): mov %esi,%r12d
1341a(1): push %rbx
1341b(3): mov %rdi,%rbx
1341e(5): call 0xfffef182(%rip)
13423(7): test $0xffffefff,%r12d
1342a(3): mov %rax,%r13
1342d(6): jnz 0xeb(%rip)
13433(3): mov (%rbx),%rbp
13436(6): mov $0x0,(%rax)
1343c(4): test $0x20,0x49(%rbx)
13440(2): jnz 0x80(%rip)
13442(4): movzx 0x70(%rbp),%eax
13446(4): cmp $0x9,%ax
1344a(2): jz 0x66(%rip)
1344c(4): cmp $0x1,%ax
13450(2): jnz 0x70(%rip)
13452(4): mov 0x8(%rbx),%rdi
13456(3): test %rdi,%rdi
13459(2): jz 0x7(%rip)
1345b(5): call 0xffffe0d5(%rip)
13460(7): cmp $0x1000,%r12d
13467(6): mov $0x1,%r14d
1346d(2): jnz 0xf(%rip)
1346f(7): or $0x1000,0x48(%rbx)
13476(6): mov $0x2,%r14d
1347c(5): cmp $0x0,0x58(%rbp)
13481(2): jnz 0x14(%rip)
13483(4): mov 0x30(%rbp),%rax
13487(3): cmp $0x2f,(%rax)
1348a(2): jz 0xb(%rip)
1348c(3): mov 0x48(%rbx),%esi
1348f(4): test $0x4,%sil
13493(2): jz 0x3d(%rip)
13495(3): mov %r14d,%esi
13498(3): mov %rbx,%rdi
1349b(5): call 0xffffe8a5(%rip)
134a0(4): mov %rax,0x8(%rbx)
134a4(1): pop %rbx
134a5(1): pop %rbp
134a6(2): pop %r12
134a8(2): pop %r13
134aa(2): pop %r14
134ac(1): ret near (%rsp)
134ad(3): nop (%rax)
134b0(1): pop %rbx
134b1(4): mov 0x10(%rbp),%rax
134b5(1): pop %rbp
134b6(2): pop %r12
134b8(2): pop %r13
134ba(2): pop %r14
134bc(1): ret near (%rsp)
134bd(3): nop (%rax)
134c0(1): pop %rbx
134c1(2): xor %eax,%eax
134c3(1): pop %rbp
134c4(2): pop %r12
134c6(2): pop %r13
134c8(2): pop %r14
134ca(1): ret near (%rsp)
134cb(5): nop 0x0(%rax,%rax,1)
134d0(3): mov 0x2c(%rbx),%edi
134d3(7): lea 0x2612(%rip),%rdx
134da(5): call 0xffffe436(%rip)
134df(2): test %eax,%eax
134e1(2): mov %eax,%ebp
134e3(2): js 0x56(%rip)
134e5(3): mov %r14d,%esi
134e8(3): mov %rbx,%rdi
134eb(5): call 0xffffe855(%rip)
134f0(4): test $0x2,0x49(%rbx)
134f4(4): mov %rax,0x8(%rbx)
134f8(2): jnz 0x30(%rip)
134fa(2): mov %ebp,%edi
134fc(5): call 0xfffef564(%rip)
13501(2): test %eax,%eax
13503(2): jnz 0x45(%rip)
13505(2): mov %ebp,%edi
13507(5): call 0xfffef369(%rip)
1350c(4): mov 0x8(%rbx),%rax
13510(2): jmp 0xffffff94(%rip)
13512(6): nop 0x0(%rax,%rax,1)
13518(6): mov $0x16,(%rax)
1351e(2): xor %eax,%eax
13520(5): jmp 0xffffff84(%rip)
13525(3): nop (%rax)
13528(5): mov $0x1,%edx
1352d(2): mov %ebp,%esi
1352f(3): mov %rbx,%rdi
13532(5): call 0xffffe22e(%rip)
13537(2): jmp 0xffffffd5(%rip)
13539(8): mov $0x0,0x8(%rbx)
13541(2): xor %eax,%eax
13543(5): jmp 0xffffff61(%rip)
13548(4): mov 0x0(%r13),%ebx
1354c(2): mov %ebp,%edi
1354e(5): call 0xfffef322(%rip)
13553(2): xor %eax,%eax
13555(4): mov %ebx,0x0(%r13)
13559(5): jmp 0xffffff4b(%rip)

"rpl_mbrtowc" :
13560(2): push %r13
13562(2): push %r12
13564(3): mov %rsi,%r13
13567(1): push %rbp
13568(1): push %rbx
13569(3): mov %rdi,%rbx
1356c(3): mov %rdx,%r12
1356f(4): sub $0x18,%rsp
13573(9): mov $0x28,%rax
1357c(5): mov %rax,0x8(%rsp)
13581(2): xor %eax,%eax
13583(5): lea 0x4(%rsp),%rax
13588(3): test %rdi,%rdi
1358b(4): cmove %rax,%rbx
1358f(3): mov %rbx,%rdi
13592(5): call 0xfffef21e(%rip)
13597(4): cmp $0xfffffffd,%rax
1359b(3): mov %rax,%rbp
1359e(2): jbe 0x22(%rip)
135a0(3): test %r12,%r12
135a3(2): jz 0x1d(%rip)
135a5(2): xor %edi,%edi
135a7(5): call 0x669(%rip)
135ac(2): test %al,%al
135ae(2): jnz 0x12(%rip)
135b0(5): movzx 0x0(%r13),%eax
135b5(5): mov $0x1,%ebp
135ba(2): mov %eax,(%rbx)
135bc(4): nop 0x0(%rax)
135c0(5): mov 0x8(%rsp),%rdx
135c5(9): xor $0x28,%rdx
135ce(3): mov %rbp,%rax
135d1(2): jnz 0xd(%rip)
135d3(4): add $0x18,%rsp
135d7(1): pop %rbx
135d8(1): pop %rbp
135d9(2): pop %r12
135db(2): pop %r13
135dd(1): ret near (%rsp)
135de(5): call 0xfffef1a2(%rip)

"get_permissions" :
13600(2): mov %edx,(%rcx)
13602(2): xor %eax,%eax
13604(1): ret near (%rsp)

"chmod_or_fchmod" :
13610(2): mov %esi,%eax
13612(2): mov %edx,%esi
13614(3): cmp $0xff,%eax
13617(2): jz 0x9(%rip)
13619(2): mov %eax,%edi
1361b(5): jmp 0xfffef4a5(%rip)
13620(5): jmp 0xfffef4c0(%rip)

"set_permissions" :
13630(4): sub $0x8,%rsp
13634(3): mov %rsi,%rax
13637(2): mov %edx,%esi
13639(2): mov (%rdi),%edx
1363b(3): mov %rax,%rdi
1363e(5): call 0xffffffd2(%rip)
13643(2): test %eax,%eax
13645(3): setnz %al
13648(4): add $0x8,%rsp
1364c(3): movzx %al,%eax
1364f(2): neg %eax
13651(1): ret near (%rsp)

"__argmatch_die" :
13660(5): mov $0x1,%edi
13665(5): jmp 0xffff011b(%rip)

"argmatch" :
13670(2): push %r15
13672(2): push %r14
13674(3): mov %rsi,%r15
13677(2): push %r13
13679(2): push %r12
1367b(3): mov %rcx,%r13
1367e(1): push %rbp
1367f(1): push %rbx
13680(3): mov %rdx,%rbp
13683(4): sub $0x28,%rsp
13687(5): mov %rdi,0x8(%rsp)
1368c(5): mov %rdx,0x18(%rsp)
13691(5): call 0xfffef0bf(%rip)
13696(3): mov (%r15),%r14
13699(8): mov $0xffffffff,(%rsp)
136a1(3): test %r14,%r14
136a4(6): jz 0xb9(%rip)
136aa(3): mov %rax,%r12
136ad(5): mov $0x0,0x17(%rsp)
136b2(2): xor %ebx,%ebx
136b4(2): jmp 0x53(%rip)
136b6(a): nop 0x0(%rax,%rax,1)
136c0(5): mov 0x18(%rsp),%rax
136c5(3): test %rax,%rax
136c8(6): jz 0xa8(%rip)
136ce(4): mov (%rsp),%rdi
136d2(3): mov %r13,%rdx
136d5(3): mov %rbp,%rsi
136d8(4): imul %r13,%rdi
136dc(3): add %rax,%rdi
136df(5): call 0xfffef1f1(%rip)
136e4(2): test %eax,%eax
136e6(5): movzx 0x17(%rsp),%eax
136eb(5): mov $0x1,%ecx
136f0(3): cmovne %ecx,%eax
136f3(4): mov %al,0x17(%rsp)
136f7(4): add $0x1,%rbx
136fb(3): add %r13,%rbp
136fe(4): mov 0x0(%r15,%rbx,8),%r14
13702(3): test %r14,%r14
13705(2): jz 0x43(%rip)
13707(5): mov 0x8(%rsp),%rsi
1370c(3): mov %r12,%rdx
1370f(3): mov %r14,%rdi
13712(5): call 0xfffeeeae(%rip)
13717(2): test %eax,%eax
13719(2): jnz 0xffffffde(%rip)
1371b(3): mov %r14,%rdi
1371e(5): call 0xfffef032(%rip)
13723(3): cmp %r12,%rax
13726(2): jz 0x5a(%rip)
13728(5): cmp $0xffffffff,(%rsp)
1372d(2): jnz 0xffffff93(%rip)
1372f(4): mov %rbx,(%rsp)
13733(4): add $0x1,%rbx
13737(3): add %r13,%rbp
1373a(4): mov 0x0(%r15,%rbx,8),%r14
1373e(3): test %r14,%r14
13741(2): jnz 0xffffffc6(%rip)
13743(5): nop 0x0(%rax,%rax,1)
13748(5): cmp $0x0,0x17(%rsp)
1374d(7): mov $0xfffffffe,%rax
13754(5): cmove (%rsp),%rax
13759(4): mov %rax,(%rsp)
1375d(4): mov (%rsp),%rax
13761(4): add $0x28,%rsp
13765(1): pop %rbx
13766(1): pop %rbp
13767(2): pop %r12
13769(2): pop %r13
1376b(2): pop %r14
1376d(2): pop %r15
1376f(1): ret near (%rsp)
13770(5): mov $0x1,0x17(%rsp)
13775(2): jmp 0xffffff82(%rip)
13777(9): nop 0x0(%rax,%rax,1)
13780(4): mov %rbx,(%rsp)
13784(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
13790(4): cmp $0xffffffff,%rdx
13794(2): push %r12
13796(5): mov $0x5,%edx
1379b(1): push %rbp
1379c(3): mov %rsi,%r12
1379f(1): push %rbx
137a0(3): mov %rdi,%rbp
137a3(2): jz 0x4d(%rip)
137a5(7): lea 0x3c5f(%rip),%rsi
137ac(2): xor %edi,%edi
137ae(5): call 0xfffeef82(%rip)
137b3(3): mov %rax,%rbx
137b6(3): mov %rbp,%rsi
137b9(5): mov $0x1,%edi
137be(5): call 0xffffb1c2(%rip)
137c3(3): mov %r12,%rdx
137c6(3): mov %rax,%rbp
137c9(5): mov $0x8,%esi
137ce(2): xor %edi,%edi
137d0(5): call 0xffffade0(%rip)
137d5(3): mov %rbp,%r8
137d8(3): mov %rbx,%rdx
137db(3): mov %rax,%rcx
137de(1): pop %rbx
137df(1): pop %rbp
137e0(2): pop %r12
137e2(2): xor %esi,%esi
137e4(2): xor %edi,%edi
137e6(2): xor %eax,%eax
137e8(5): jmp 0xfffef328(%rip)
137ed(3): nop (%rax)
137f0(7): lea 0x3bf9(%rip),%rsi
137f7(2): xor %edi,%edi
137f9(5): call 0xfffeef37(%rip)
137fe(3): mov %rax,%rbx
13801(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
13810(2): push %r15
13812(2): push %r14
13814(3): mov %rdi,%r14
13817(2): push %r13
13819(2): push %r12
1381b(2): xor %edi,%edi
1381d(1): push %rbp
1381e(1): push %rbx
1381f(3): mov %rsi,%rbp
13822(7): lea 0x3bff(%rip),%rsi
13829(3): mov %rdx,%r12
1382c(5): mov $0x5,%edx
13831(4): sub $0x8,%rsp
13835(7): mov 0x2088c4(%rip),%rbx
1383c(5): call 0xfffeeef4(%rip)
13841(3): mov %rax,%rdi
13844(3): mov %rbx,%rsi
13847(5): call 0xfffef0a9(%rip)
1384c(3): mov (%r14),%r15
1384f(3): test %r15,%r15
13852(6): jz 0x96(%rip)
13858(3): xor %r13d,%r13d
1385b(2): xor %ebx,%ebx
1385d(2): jmp 0x3b(%rip)
1385f(1): nop 
13860(3): mov %r15,%rdi
13863(4): add $0x1,%rbx
13867(3): mov %rbp,%r13
1386a(5): call 0xffffb136(%rip)
1386f(7): mov 0x20888a(%rip),%rdi
13876(7): lea 0x3bc0(%rip),%rdx
1387d(3): mov %rax,%rcx
13880(5): mov $0x1,%esi
13885(2): xor %eax,%eax
13887(3): add %r12,%rbp
1388a(5): call 0xfffef396(%rip)
1388f(4): mov 0x0(%r14,%rbx,8),%r15
13893(3): test %r15,%r15
13896(2): jz 0x52(%rip)
13898(3): test %rbx,%rbx
1389b(2): jz 0xffffffc5(%rip)
1389d(3): mov %r12,%rdx
138a0(3): mov %rbp,%rsi
138a3(3): mov %r13,%rdi
138a6(5): call 0xfffef02a(%rip)
138ab(2): test %eax,%eax
138ad(2): jnz 0xffffffb3(%rip)
138af(3): mov %r15,%rdi
138b2(4): add $0x1,%rbx
138b6(3): add %r12,%rbp
138b9(5): call 0xffffb0e7(%rip)
138be(7): mov 0x20883b(%rip),%rdi
138c5(7): lea 0x3b79(%rip),%rdx
138cc(3): mov %rax,%rcx
138cf(5): mov $0x1,%esi
138d4(2): xor %eax,%eax
138d6(5): call 0xfffef34a(%rip)
138db(4): mov 0x0(%r14,%rbx,8),%r15
138df(3): test %r15,%r15
138e2(2): jnz 0xffffffb6(%rip)
138e4(4): nop 0x0(%rax)
138e8(7): mov 0x208811(%rip),%rdi
138ef(4): mov 0x28(%rdi),%rax
138f3(4): cmp 0x30(%rdi),%rax
138f7(2): jnb 0x21(%rip)
138f9(4): lea 0x1(%rax),%rdx
138fd(4): mov %rdx,0x28(%rdi)
13901(3): mov $0xa,(%rax)
13904(4): add $0x8,%rsp
13908(1): pop %rbx
13909(1): pop %rbp
1390a(2): pop %r12
1390c(2): pop %r13
1390e(2): pop %r14
13910(2): pop %r15
13912(1): ret near (%rsp)
13913(5): nop 0x0(%rax,%rax,1)
13918(4): add $0x8,%rsp
1391c(5): mov $0xa,%esi
13921(1): pop %rbx
13922(1): pop %rbp
13923(2): pop %r12
13925(2): pop %r13
13927(2): pop %r14
13929(2): pop %r15
1392b(5): jmp 0xfffeeea5(%rip)

"__xargmatch_internal" :
13930(2): push %r15
13932(2): push %r14
13934(3): mov %rdi,%r14
13937(2): push %r13
13939(2): push %r12
1393b(3): mov %rsi,%r12
1393e(1): push %rbp
1393f(1): push %rbx
13940(3): mov %rcx,%rbp
13943(3): mov %rdx,%rbx
13946(3): mov %r8,%rcx
13949(3): mov %rbp,%rdx
1394c(4): sub $0x8,%rsp
13950(3): mov %rbx,%rsi
13953(3): mov %r12,%rdi
13956(3): mov %r8,%r15
13959(3): mov %r9,%r13
1395c(5): call 0xfffffd14(%rip)
13961(3): test %rax,%rax
13964(2): js 0x11(%rip)
13966(4): add $0x8,%rsp
1396a(1): pop %rbx
1396b(1): pop %rbp
1396c(2): pop %r12
1396e(2): pop %r13
13970(2): pop %r14
13972(2): pop %r15
13974(1): ret near (%rsp)
13975(3): mov %rax,%rdx
13978(3): mov %r12,%rsi
1397b(3): mov %r14,%rdi
1397e(5): call 0xfffffe12(%rip)
13983(3): mov %r15,%rdx
13986(3): mov %rbp,%rsi
13989(3): mov %rbx,%rdi
1398c(5): call 0xfffffe84(%rip)
13991(3): call %r13
13994(7): mov $0xffffffff,%rax
1399b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
139a0(2): push %r14
139a2(2): push %r13
139a4(2): push %r12
139a6(1): push %rbp
139a7(1): push %rbx
139a8(3): mov (%rsi),%r14
139ab(3): test %r14,%r14
139ae(2): jz 0x33(%rip)
139b0(3): mov %rcx,%r12
139b3(3): mov %rdi,%r13
139b6(3): mov %rdx,%rbp
139b9(4): lea 0x8(%rsi),%rbx
139bd(2): jmp 0x12(%rip)
139bf(1): nop 
139c0(3): mov (%rbx),%r14
139c3(3): add %r12,%rbp
139c6(4): add $0x8,%rbx
139ca(3): test %r14,%r14
139cd(2): jz 0x14(%rip)
139cf(3): mov %r12,%rdx
139d2(3): mov %rbp,%rsi
139d5(3): mov %r13,%rdi
139d8(5): call 0xfffeeef8(%rip)
139dd(2): test %eax,%eax
139df(2): jnz 0xffffffe1(%rip)
139e1(1): pop %rbx
139e2(3): mov %r14,%rax
139e5(1): pop %rbp
139e6(2): pop %r12
139e8(2): pop %r13
139ea(2): pop %r14
139ec(1): ret near (%rsp)

"close_stream" :
139f0(2): push %r12
139f2(1): push %rbp
139f3(3): mov %rdi,%rbp
139f6(1): push %rbx
139f7(5): call 0xfffeebf9(%rip)
139fc(3): mov 0x0(%rbp),%ebx
139ff(3): mov %rbp,%rdi
13a02(3): mov %rax,%r12
13a05(5): call 0x10ab(%rip)
13a0a(3): and $0x20,%ebx
13a0d(2): test %ebx,%ebx
13a0f(2): jnz 0x19(%rip)
13a11(2): test %eax,%eax
13a13(2): jz 0xc(%rip)
13a15(3): test %r12,%r12
13a18(5): mov $0xffffffff,%eax
13a1d(2): jz 0x3b(%rip)
13a1f(1): pop %rbx
13a20(1): pop %rbp
13a21(2): pop %r12
13a23(1): ret near (%rsp)
13a24(4): nop 0x0(%rax)
13a28(2): test %eax,%eax
13a2a(2): jnz 0x1e(%rip)
13a2c(5): call 0xfffeeb74(%rip)
13a31(6): mov $0x0,(%rax)
13a37(5): mov $0xffffffff,%eax
13a3c(1): pop %rbx
13a3d(1): pop %rbp
13a3e(2): pop %r12
13a40(1): ret near (%rsp)
13a41(7): nop 0x0(%rax)
13a48(1): pop %rbx
13a49(5): mov $0xffffffff,%eax
13a4e(1): pop %rbp
13a4f(2): pop %r12
13a51(1): ret near (%rsp)
13a52(6): nop 0x0(%rax,%rax,1)
13a58(5): call 0xfffeeb48(%rip)
13a5d(3): cmp $0x9,(%rax)
13a60(1): pop %rbx
13a61(1): pop %rbp
13a62(2): pop %r12
13a64(3): setnz %al
13a67(3): movzx %al,%eax
13a6a(2): neg %eax
13a6c(1): ret near (%rsp)

"cycle_check_init" :
13a70(8): mov $0x0,0x10(%rdi)
13a78(7): mov $0x95f616,0x18(%rdi)
13a7f(1): ret near (%rsp)

"cycle_check" :
13a80(7): cmp $0x95f616,0x18(%rdi)
13a87(2): jnz 0x60(%rip)
13a89(4): mov 0x10(%rdi),%rdx
13a8d(4): mov 0x8(%rsi),%rcx
13a91(3): test %rdx,%rdx
13a94(2): jz 0x1c(%rip)
13a96(3): cmp %rcx,(%rdi)
13a99(2): jz 0x2f(%rip)
13a9b(4): lea 0x1(%rdx),%r8
13a9f(2): xor %eax,%eax
13aa1(3): test %r8,%rdx
13aa4(4): mov %r8,0x10(%rdi)
13aa8(2): jz 0x38(%rip)
13aaa(2): REP ret near (%rsp)
13aac(4): nop 0x0(%rax)
13ab0(8): mov $0x1,0x10(%rdi)
13ab8(3): mov (%rsi),%rax
13abb(3): mov %rcx,(%rdi)
13abe(4): mov %rax,0x8(%rdi)
13ac2(2): xor %eax,%eax
13ac4(1): ret near (%rsp)
13ac5(3): nop (%rax)
13ac8(4): mov 0x8(%rdi),%rax
13acc(3): cmp %rax,(%rsi)
13acf(2): jnz 0xffffffcc(%rip)
13ad1(5): mov $0x1,%eax
13ad6(1): ret near (%rsp)
13ad7(9): nop 0x0(%rax,%rax,1)
13ae0(3): test %r8,%r8
13ae3(2): jz 0xffffffee(%rip)
13ae5(2): jmp 0xffffffd3(%rip)
13ae7(7): lea 0x39a2(%rip),%rcx
13aee(7): lea 0x395b(%rip),%rsi
13af5(7): lea 0x397c(%rip),%rdi
13afc(4): sub $0x8,%rsp
13b00(5): mov $0x3c,%edx
13b05(5): call 0xfffeed1b(%rip)

"opendir_safer" :
13b10(2): push %r14
13b12(2): push %r13
13b14(2): push %r12
13b16(1): push %rbp
13b17(1): push %rbx
13b18(5): call 0xfffeebd8(%rip)
13b1d(3): test %rax,%rax
13b20(3): mov %rax,%rbx
13b23(2): jz 0xf(%rip)
13b25(3): mov %rax,%rdi
13b28(5): call 0xfffeee18(%rip)
13b2d(3): cmp $0x2,%eax
13b30(2): jbe 0x10(%rip)
13b32(3): mov %rbx,%rax
13b35(1): pop %rbx
13b36(1): pop %rbp
13b37(2): pop %r12
13b39(2): pop %r13
13b3b(2): pop %r14
13b3d(1): ret near (%rsp)
13b3e(2): nop 
13b40(2): mov %eax,%edi
13b42(5): mov $0x3,%edx
13b47(5): mov $0x406,%esi
13b4c(2): xor %eax,%eax
13b4e(5): call 0xfe2(%rip)
13b53(3): mov %eax,%r12d
13b56(5): call 0xfffeea4a(%rip)
13b5b(3): test %r12d,%r12d
13b5e(3): mov %rax,%rbp
13b61(2): jns 0x27(%rip)
13b63(3): mov (%rax),%r14d
13b66(3): xor %r13d,%r13d
13b69(3): mov %rbx,%rdi
13b6c(3): mov %r13,%rbx
13b6f(5): call 0xfffeed31(%rip)
13b74(4): mov %r14d,0x0(%rbp)
13b78(3): mov %rbx,%rax
13b7b(1): pop %rbx
13b7c(1): pop %rbp
13b7d(2): pop %r12
13b7f(2): pop %r13
13b81(2): pop %r14
13b83(1): ret near (%rsp)
13b84(4): nop 0x0(%rax)
13b88(3): mov %r12d,%edi
13b8b(5): call 0xfffeeff5(%rip)
13b90(3): test %rax,%rax
13b93(3): mov %rax,%r13
13b96(4): mov 0x0(%rbp),%r14d
13b9a(2): jnz 0xffffffcf(%rip)
13b9c(3): mov %r12d,%edi
13b9f(5): call 0xfffeecd1(%rip)
13ba4(2): jmp 0xffffffc5(%rip)

"gettime" :
13bb0(3): mov %rdi,%rsi
13bb3(2): xor %edi,%edi
13bb5(5): jmp 0xfffeeacb(%rip)

"current_timespec" :
13bc0(4): sub $0x28,%rsp
13bc4(2): xor %edi,%edi
13bc6(3): mov %rsp,%rsi
13bc9(9): mov $0x28,%rax
13bd2(5): mov %rax,0x18(%rsp)
13bd7(2): xor %eax,%eax
13bd9(5): call 0xfffeeaa7(%rip)
13bde(5): mov 0x18(%rsp),%rcx
13be3(9): xor $0x28,%rcx
13bec(4): mov (%rsp),%rax
13bf0(5): mov 0x8(%rsp),%rdx
13bf5(2): jnz 0x7(%rip)
13bf7(4): add $0x28,%rsp
13bfb(1): ret near (%rsp)
13bfc(5): call 0xfffeeb84(%rip)

"hard_locale" :
13c10(4): sub $0x8,%rsp
13c14(2): xor %esi,%esi
13c16(5): call 0xfffeee8a(%rip)
13c1b(3): mov %rax,%rdx
13c1e(5): mov $0x1,%eax
13c23(3): test %rdx,%rdx
13c26(2): jz 0x1f(%rip)
13c28(7): lea 0x386d(%rip),%rdi
13c2f(5): mov $0x2,%ecx
13c34(3): mov %rdx,%rsi
13c37(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
13c39(3): setnbe %cl
13c3c(3): sbb $0x0,%cl
13c3f(2): xor %eax,%eax
13c41(2): test %cl,%cl
13c43(2): jnz 0xd(%rip)
13c45(4): add $0x8,%rsp
13c49(1): ret near (%rsp)
13c4a(6): nop 0x0(%rax,%rax,1)
13c50(7): lea 0x3847(%rip),%rdi
13c57(5): mov $0x6,%ecx
13c5c(3): mov %rdx,%rsi
13c5f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
13c61(3): setnbe %al
13c64(2): sbb $0x0,%al
13c66(2): test %al,%al
13c68(3): setnz %al
13c6b(4): add $0x8,%rsp
13c6f(1): ret near (%rsp)

"hash_pjw" :
13c70(4): movsx (%rdi),%rcx
13c74(2): test %cl,%cl
13c76(2): jz 0x2a(%rip)
13c78(2): xor %eax,%eax
13c7a(6): nop 0x0(%rax,%rax,1)
13c80(4): rol $0x9,%rax
13c84(4): add $0x1,%rdi
13c88(3): add %rcx,%rax
13c8b(4): movsx (%rdi),%rcx
13c8f(2): test %cl,%cl
13c91(2): jnz 0xffffffef(%rip)
13c93(2): xor %edx,%edx
13c95(3): div %rsi,%rax
13c98(3): mov %rdx,%rax
13c9b(1): ret near (%rsp)
13c9c(4): nop 0x0(%rax)
13ca0(2): xor %edx,%edx
13ca2(3): mov %rdx,%rax
13ca5(1): ret near (%rsp)

"i_ring_init" :
13cb0(4): mov $0x1,0x1c(%rdi)
13cb4(8): mov $0x0,0x14(%rdi)
13cbc(2): mov %esi,(%rdi)
13cbe(3): mov %esi,0x4(%rdi)
13cc1(3): mov %esi,0x8(%rdi)
13cc4(3): mov %esi,0xc(%rdi)
13cc7(3): mov %esi,0x10(%rdi)
13cca(1): ret near (%rsp)

"i_ring_empty" :
13cd0(4): movzx 0x1c(%rdi),%eax
13cd4(1): ret near (%rsp)

"i_ring_push" :
13ce0(4): movzx 0x1c(%rdi),%edx
13ce4(3): mov 0x14(%rdi),%ecx
13ce7(3): xor $0x1,%edx
13cea(3): movzx %dl,%edx
13ced(2): add %edx,%ecx
13cef(3): and $0x3,%ecx
13cf2(2): mov %ecx,%eax
13cf4(4): lea 0x0(%rdi,%rax,4),%r8
13cf8(3): mov (%r8),%eax
13cfb(3): mov %esi,(%r8)
13cfe(3): mov 0x18(%rdi),%esi
13d01(3): mov %ecx,0x14(%rdi)
13d04(2): cmp %ecx,%esi
13d06(2): jnz 0xa(%rip)
13d08(2): add %esi,%edx
13d0a(3): and $0x3,%edx
13d0d(3): mov %edx,0x18(%rdi)
13d10(4): mov $0x0,0x1c(%rdi)
13d14(1): ret near (%rsp)

"i_ring_pop" :
13d20(4): cmp $0x0,0x1c(%rdi)
13d24(2): jnz 0x31(%rip)
13d26(3): mov 0x14(%rdi),%eax
13d29(3): mov 0x10(%rdi),%esi
13d2c(4): lea 0x0(%rdi,%rax,4),%rcx
13d30(3): mov %rax,%rdx
13d33(2): mov (%rcx),%eax
13d35(2): mov %esi,(%rcx)
13d37(3): cmp 0x18(%rdi),%edx
13d3a(2): jz 0x16(%rip)
13d3c(3): add $0x3,%edx
13d3f(3): and $0x3,%edx
13d42(3): mov %edx,0x14(%rdi)
13d45(1): ret near (%rsp)
13d46(a): nop 0x0(%rax,%rax,1)
13d50(4): mov $0x1,0x1c(%rdi)
13d54(1): ret near (%rsp)
13d55(4): sub $0x8,%rsp
13d59(5): call 0xfffee837(%rip)

"locale_charset" :
13d60(4): sub $0x8,%rsp
13d64(5): mov $0xe,%edi
13d69(5): call 0xfffeecb7(%rip)
13d6e(3): test %rax,%rax
13d71(2): jz 0x1f(%rip)
13d73(3): cmp $0x0,(%rax)
13d76(7): lea 0x3727(%rip),%rdx
13d7d(4): cmove %rdx,%rax
13d81(4): add $0x8,%rsp
13d85(1): ret near (%rsp)
13d86(a): nop 0x0(%rax,%rax,1)
13d90(7): lea 0x370d(%rip),%rax
13d97(4): add $0x8,%rsp
13d9b(1): ret near (%rsp)

"openat_safer" :
13da0(4): sub $0x58,%rsp
13da4(5): mov %rcx,0x38(%rsp)
13da9(2): xor %ecx,%ecx
13dab(9): mov $0x28,%rax
13db4(5): mov %rax,0x18(%rsp)
13db9(2): xor %eax,%eax
13dbb(3): test $0x40,%dl
13dbe(2): jnz 0x2a(%rip)
13dc0(2): xor %eax,%eax
13dc2(5): call 0xfffee9ae(%rip)
13dc7(2): mov %eax,%edi
13dc9(5): call 0xffffb827(%rip)
13dce(5): mov 0x18(%rsp),%rsi
13dd3(9): xor $0x28,%rsi
13ddc(2): jnz 0x2d(%rip)
13dde(4): add $0x58,%rsp
13de2(1): ret near (%rsp)
13de3(5): nop 0x0(%rax,%rax,1)
13de8(5): lea 0x60(%rsp),%rax
13ded(7): mov $0x18,(%rsp)
13df4(4): mov 0x38(%rsp),%ecx
13df8(5): mov %rax,0x8(%rsp)
13dfd(5): lea 0x20(%rsp),%rax
13e02(5): mov %rax,0x10(%rsp)
13e07(2): jmp 0xffffffb9(%rip)
13e09(5): call 0xfffee977(%rip)

"randint_new" :
13e10(1): push %rbx
13e11(3): mov %rdi,%rbx
13e14(5): mov $0x18,%edi
13e19(5): call 0xffffcea7(%rip)
13e1e(3): mov %rbx,(%rax)
13e21(8): mov $0x0,0x10(%rax)
13e29(8): mov $0x0,0x8(%rax)
13e31(1): pop %rbx
13e32(1): ret near (%rsp)

"randint_all_new" :
13e40(1): push %rbx
13e41(5): call 0x24f(%rip)
13e46(3): test %rax,%rax
13e49(2): jz 0x27(%rip)
13e4b(3): mov %rax,%rbx
13e4e(5): mov $0x18,%edi
13e53(5): call 0xffffce6d(%rip)
13e58(3): mov %rbx,(%rax)
13e5b(8): mov $0x0,0x10(%rax)
13e63(8): mov $0x0,0x8(%rax)
13e6b(1): pop %rbx
13e6c(1): ret near (%rsp)
13e6d(3): nop (%rax)
13e70(2): xor %eax,%eax
13e72(1): pop %rbx
13e73(1): ret near (%rsp)

"randint_get_source" :
13e80(3): mov (%rdi),%rax
13e83(1): ret near (%rsp)

"randint_genmax" :
13e90(2): push %r15
13e92(2): push %r14
13e94(4): lea 0x1(%rsi),%r15
13e98(2): push %r13
13e9a(2): push %r12
13e9c(3): mov %rdi,%r13
13e9f(1): push %rbp
13ea0(1): push %rbx
13ea1(3): mov %rsi,%r14
13ea4(4): sub $0x28,%rsp
13ea8(4): mov 0x8(%rdi),%rbp
13eac(4): mov 0x10(%rdi),%rbx
13eb0(9): mov $0x28,%rax
13eb9(5): mov %rax,0x18(%rsp)
13ebe(2): xor %eax,%eax
13ec0(3): mov (%rdi),%rax
13ec3(5): lea 0x10(%rsp),%r12
13ec8(5): mov %rax,0x8(%rsp)
13ecd(2): jmp 0x38(%rip)
13ecf(1): nop 
13ed0(3): cmp %r14,%rbx
13ed3(6): jz 0x8c(%rip)
13ed9(3): mov %rbx,%rax
13edc(2): xor %edx,%edx
13ede(3): sub %r14,%rax
13ee1(3): div %r15,%rax
13ee4(3): sub %rdx,%rbx
13ee7(3): mov %rdx,%rdi
13eea(3): mov %rax,%rsi
13eed(2): xor %edx,%edx
13eef(3): mov %rbp,%rax
13ef2(3): div %r15,%rax
13ef5(3): cmp %rbx,%rbp
13ef8(6): jbe 0xa0(%rip)
13efe(4): lea 0xffffffff(%rdi),%rbx
13f02(3): mov %rdx,%rbp
13f05(3): cmp %r14,%rbx
13f08(2): jnb 0xffffffc8(%rip)
13f0a(3): mov %rbx,%rax
13f0d(2): xor %edx,%edx
13f0f(1): nop 
13f10(4): shl/sal $0x8,%rax
13f14(4): add $0x1,%rdx
13f18(6): add $0xff,%rax
13f1e(3): cmp %rax,%r14
13f21(2): jnbe 0xffffffef(%rip)
13f23(5): mov 0x8(%rsp),%rdi
13f28(3): mov %r12,%rsi
13f2b(5): call 0x4b5(%rip)
13f30(3): mov %r12,%rax
13f33(5): nop 0x0(%rax,%rax,1)
13f38(3): movzx (%rax),%edx
13f3b(4): shl/sal $0x8,%rbx
13f3f(4): shl/sal $0x8,%rbp
13f43(7): add $0xff,%rbx
13f4a(4): add $0x1,%rax
13f4e(3): add %rdx,%rbp
13f51(3): cmp %rbx,%r14
13f54(2): jnbe 0xffffffe4(%rip)
13f56(3): cmp %r14,%rbx
13f59(6): jnz 0xffffff80(%rip)
13f5f(8): mov $0x0,0x10(%r13)
13f67(8): mov $0x0,0x8(%r13)
13f6f(5): mov 0x18(%rsp),%rcx
13f74(9): xor $0x28,%rcx
13f7d(3): mov %rbp,%rax
13f80(2): jnz 0x25(%rip)
13f82(4): add $0x28,%rsp
13f86(1): pop %rbx
13f87(1): pop %rbp
13f88(2): pop %r12
13f8a(2): pop %r13
13f8c(2): pop %r14
13f8e(2): pop %r15
13f90(1): ret near (%rsp)
13f91(7): nop 0x0(%rax)
13f98(4): mov %rax,0x8(%r13)
13f9c(4): mov %rsi,0x10(%r13)
13fa0(3): mov %rdx,%rbp
13fa3(2): jmp 0xffffffcc(%rip)
13fa5(5): call 0xfffee7db(%rip)

"randint_free" :
13fb0(1): push %rbx
13fb1(7): mov $0xffffffff,%rdx
13fb8(3): mov %rdi,%rbx
13fbb(5): mov $0x18,%esi
13fc0(5): call 0xfffeeb60(%rip)
13fc5(3): mov %rbx,%rdi
13fc8(1): pop %rbx
13fc9(5): jmp 0xfffeecb7(%rip)

"randint_all_free" :
13fd0(2): push %r13
13fd2(2): push %r12
13fd4(1): push %rbp
13fd5(1): push %rbx
13fd6(3): mov %rdi,%rbx
13fd9(4): sub $0x8,%rsp
13fdd(3): mov (%rdi),%rdi
13fe0(5): call 0x5a0(%rip)
13fe5(3): mov %eax,%r12d
13fe8(5): call 0xfffee5b8(%rip)
13fed(3): mov (%rax),%r13d
13ff0(3): mov %rbx,%rdi
13ff3(7): mov $0xffffffff,%rdx
13ffa(5): mov $0x18,%esi
13fff(3): mov %rax,%rbp
14002(5): call 0xfffeeb1e(%rip)
14007(3): mov %rbx,%rdi
1400a(5): call 0xfffeec76(%rip)
1400f(4): mov %r13d,0x0(%rbp)
14013(4): add $0x8,%rsp
14017(3): mov %r12d,%eax
1401a(1): pop %rbx
1401b(1): pop %rbp
1401c(2): pop %r12
1401e(2): pop %r13
14020(1): ret near (%rsp)

"randread_error" :
14030(1): push %rbp
14031(1): push %rbx
14032(4): sub $0x8,%rsp
14036(3): test %rdi,%rdi
14039(2): jz 0x3f(%rip)
1403b(5): call 0xffffa965(%rip)
14040(3): mov %rax,%rbp
14043(5): call 0xfffee55d(%rip)
14048(3): cmp $0x0,(%rax)
1404b(3): mov %rax,%rbx
1404e(5): mov $0x5,%edx
14053(2): jz 0x2a(%rip)
14055(7): lea 0x345e(%rip),%rsi
1405c(2): xor %edi,%edi
1405e(5): call 0xfffee6d2(%rip)
14063(6): mov 0x207fbf(%rip),%edi
14069(2): mov (%rbx),%esi
1406b(3): mov %rax,%rdx
1406e(3): mov %rbp,%rcx
14071(2): xor %eax,%eax
14073(5): call 0xfffeea9d(%rip)
14078(5): call 0xfffee518(%rip)
1407d(7): lea 0x3426(%rip),%rsi
14084(2): xor %edi,%edi
14086(5): call 0xfffee6aa(%rip)
1408b(2): jmp 0xffffffd8(%rip)

"randread_new" :
14090(2): push %r15
14092(2): push %r14
14094(2): push %r13
14096(2): push %r12
14098(1): push %rbp
14099(1): push %rbx
1409a(4): sub $0x38,%rsp
1409e(9): mov $0x28,%rax
140a7(5): mov %rax,0x28(%rsp)
140ac(2): xor %eax,%eax
140ae(3): test %rsi,%rsi
140b1(6): jz 0x127(%rip)
140b7(3): test %rdi,%rdi
140ba(3): mov %rdi,%r12
140bd(3): mov %rsi,%rbp
140c0(2): jz 0x80(%rip)
140c2(7): lea 0x340d(%rip),%rsi
140c9(5): call 0xce7(%rip)
140ce(3): test %rax,%rax
140d1(3): mov %rax,%r13
140d4(6): jz 0x204(%rip)
140da(5): mov $0x1038,%edi
140df(5): call 0xffffcbe1(%rip)
140e4(3): mov %rax,%rbx
140e7(3): mov %r13,(%rax)
140ea(7): lea 0xffffff3f(%rip),%rax
140f1(7): cmp $0x1000,%rbp
140f8(5): mov $0x1000,%ecx
140fd(4): lea 0x18(%rbx),%rsi
14101(4): cmovbe %rbp,%rcx
14105(4): mov %rax,0x8(%rbx)
14109(4): mov %r12,0x10(%rbx)
1410d(2): xor %edx,%edx
1410f(3): mov %r13,%rdi
14112(5): call 0xfffee9be(%rip)
14117(5): mov 0x28(%rsp),%rdx
1411c(9): xor $0x28,%rdx
14125(3): mov %rbx,%rax
14128(6): jnz 0x1b7(%rip)
1412e(4): add $0x38,%rsp
14132(1): pop %rbx
14133(1): pop %rbp
14134(2): pop %r12
14136(2): pop %r13
14138(2): pop %r14
1413a(2): pop %r15
1413c(1): ret near (%rsp)
1413d(3): nop (%rax)
14140(5): mov $0x1038,%edi
14145(5): call 0xffffcb7b(%rip)
1414a(3): mov %rax,%rbx
1414d(7): mov $0x0,(%rax)
14154(7): lea 0xfffffed5(%rip),%rax
1415b(7): lea 0x3367(%rip),%rdi
14162(2): xor %esi,%esi
14164(8): mov $0x0,0x10(%rbx)
1416c(4): mov %rax,0x8(%rbx)
14170(8): mov $0x0,0x18(%rbx)
14178(2): xor %eax,%eax
1417a(5): call 0xfffee9b6(%rip)
1417f(2): test %eax,%eax
14181(4): lea 0x20(%rbx),%r13
14185(3): mov %eax,%r15d
14188(2): js 0x80(%rip)
1418a(7): cmp $0x800,%rbp
14191(3): mov %rbp,%rdx
14194(6): mov $0x800,%r14d
1419a(4): cmovnbe %r14,%rdx
1419e(5): mov $0x1018,%ecx
141a3(3): mov %r13,%rsi
141a6(2): mov %eax,%edi
141a8(5): call 0xfffee458(%rip)
141ad(3): mov %r15d,%edi
141b0(3): mov %rax,%rbp
141b3(5): call 0xfffee6bd(%rip)
141b8(7): cmp $0x7ff,%rbp
141bf(6): jle 0x125(%rip)
141c5(3): mov %r13,%rdi
141c8(5): call 0x698(%rip)
141cd(5): jmp 0xffffff4a(%rip)
141d2(6): nop 0x0(%rax,%rax,1)
141d8(5): mov $0x1038,%edi
141dd(5): call 0xffffcae3(%rip)
141e2(3): mov %rax,%rbx
141e5(7): mov $0x0,(%rax)
141ec(7): lea 0xfffffe3d(%rip),%rax
141f3(8): mov $0x0,0x10(%rbx)
141fb(4): mov %rax,0x8(%rbx)
141ff(5): jmp 0xffffff18(%rip)
14204(4): nop 0x0(%rax)
14208(5): lea 0x10(%rsp),%r12
1420d(2): xor %esi,%esi
1420f(6): mov $0x18,%r14d
14215(3): mov %r12,%rdi
14218(5): call 0xfffee5f8(%rip)
1421d(6): movdqa 0x10(%rsp),%xmm0
14223(4): movups %xmm0,0x20(%rbx)
14227(5): call 0xfffee479(%rip)
1422c(3): mov %eax,0x30(%rbx)
1422f(4): mov %eax,0x10(%rsp)
14233(5): call 0xfffee9bd(%rip)
14238(4): mov %eax,0x10(%rsp)
1423c(3): mov %eax,0x34(%rbx)
1423f(5): mov $0x800,%ebp
14244(5): mov $0x4,%eax
14249(3): sub %r14,%rbp
1424c(4): cmp $0x4,%rbp
14250(4): cmovnbe %rax,%rbp
14254(5): call 0xfffee53c(%rip)
14259(2): test %ebp,%ebp
1425b(4): mov %eax,0x10(%rsp)
1425f(5): lea 0x0(%r13,%r14,1),%rcx
14264(2): mov %ebp,%esi
14266(2): jz 0x16(%rip)
14268(2): xor %eax,%eax
1426a(2): mov %eax,%edx
1426c(3): add $0x1,%eax
1426f(5): movzx 0x0(%r12,%rdx,1),%edi
14274(2): cmp %esi,%eax
14276(4): mov %dil,0x0(%rcx,%rdx,1)
1427a(2): jb 0xfffffff0(%rip)
1427c(3): add %r14,%rbp
1427f(7): cmp $0x7ff,%rbp
14286(6): jnbe 0xffffff3f(%rip)
1428c(5): call 0xfffee744(%rip)
14291(4): mov %eax,0x10(%rsp)
14295(5): mov $0x800,%eax
1429a(5): mov $0x4,%edx
1429f(3): sub %rbp,%rax
142a2(5): lea 0x0(%r13,%rbp,1),%rcx
142a7(4): cmp $0x4,%rax
142ab(4): cmovnbe %rdx,%rax
142af(2): test %eax,%eax
142b1(2): mov %eax,%esi
142b3(6): jz 0xffffff12(%rip)
142b9(2): xor %eax,%eax
142bb(2): mov %eax,%edx
142bd(3): add $0x1,%eax
142c0(5): movzx 0x0(%r12,%rdx,1),%edi
142c5(2): cmp %esi,%eax
142c7(4): mov %dil,0x0(%rcx,%rdx,1)
142cb(2): jb 0xfffffff0(%rip)
142cd(5): jmp 0xfffffef8(%rip)
142d2(6): nop 0x0(%rax,%rax,1)
142d8(2): xor %ebx,%ebx
142da(5): jmp 0xfffffe3d(%rip)
142df(5): call 0xfffee4a1(%rip)
142e4(3): test %rbp,%rbp
142e7(3): mov %r14,%r15
142ea(5): mov $0x10,%eax
142ef(4): cmovs %r12,%rbp
142f3(5): lea 0x10(%rsp),%r12
142f8(3): sub %rbp,%r15
142fb(4): cmp $0x10,%r15
142ff(3): mov %r12,%rdi
14302(4): cmovnbe %rax,%r15
14306(2): xor %esi,%esi
14308(5): call 0xfffee508(%rip)
1430d(5): lea 0x0(%r13,%rbp,1),%rax
14312(3): add %r15,%rbp
14315(3): mov %r15d,%ecx
14318(7): cmp $0x7ff,%rbp
1431f(3): mov %r12,%rsi
14322(3): mov %rax,%rdi
14325(2): REP movsb rsi(%ds,10),rdi(%es,10)
14327(6): jnbe 0xfffffe9e(%rip)
1432d(3): mov %r14,%r15
14330(6): mov $0x4,%r8d
14336(3): sub %rbp,%r15
14339(5): mov %r8,0x8(%rsp)
1433e(4): cmp $0x4,%r15
14342(4): cmovnbe %r8,%r15
14346(5): lea 0x0(%rbp,%r15,1),%rdx
1434b(3): add %r13,%rbp
1434e(4): mov %rdx,(%rsp)
14352(5): call 0xfffee34e(%rip)
14357(4): mov (%rsp),%rdx
1435b(4): mov %eax,0x10(%rsp)
1435f(3): mov %r15d,%ecx
14362(3): mov %rbp,%rdi
14365(3): mov %r12,%rsi
14368(5): mov 0x8(%rsp),%r8
1436d(2): REP movsb rsi(%ds,10),rdi(%es,10)
1436f(7): cmp $0x7ff,%rdx
14376(6): jnle 0xfffffe4f(%rip)
1437c(3): sub %rdx,%r14
1437f(4): cmp $0x4,%r14
14383(4): cmovnbe %r8,%r14
14387(5): call 0xfffee869(%rip)
1438c(4): mov (%rsp),%rdx
14390(4): mov %eax,0x10(%rsp)
14394(3): mov %r14d,%ecx
14397(3): mov %r12,%rsi
1439a(5): lea 0x0(%r13,%rdx,1),%rax
1439f(3): add %rdx,%r14
143a2(7): cmp $0x7ff,%r14
143a9(3): mov %rax,%rdi
143ac(2): REP movsb rsi(%ds,10),rdi(%es,10)
143ae(6): jnbe 0xfffffe17(%rip)
143b4(5): jmp 0xfffffe8b(%rip)

"randread_set_handler" :
143c0(4): mov %rsi,0x8(%rdi)
143c4(1): ret near (%rsp)

"randread_set_handler_arg" :
143d0(4): mov %rsi,0x10(%rdi)
143d4(1): ret near (%rsp)

"randread" :
143e0(2): push %r15
143e2(2): push %r14
143e4(2): push %r13
143e6(2): push %r12
143e8(3): mov %rdi,%r12
143eb(1): push %rbp
143ec(1): push %rbx
143ed(3): mov %rdx,%rbp
143f0(3): mov %rsi,%rbx
143f3(4): sub $0x18,%rsp
143f7(3): mov (%rdi),%rcx
143fa(3): test %rcx,%rcx
143fd(5): mov %rcx,0x8(%rsp)
14402(2): jz 0x66(%rip)
14404(5): call 0xfffee19c(%rip)
14409(5): mov 0x8(%rsp),%rcx
1440e(3): mov %rax,%r13
14411(2): jmp 0x25(%rip)
14413(5): nop 0x0(%rax,%rax,1)
14418(4): mov (%r12),%rax
1441c(5): mov 0x10(%r12),%rdi
14421(2): mov (%rax),%eax
14423(3): and $0x20,%eax
14426(3): cmovne %edx,%eax
14429(4): mov %eax,0x0(%r13)
1442d(5): call 0x8(%r12)
14432(4): mov (%r12),%rcx
14436(3): mov %rbp,%rdx
14439(3): mov %rbx,%rdi
1443c(5): mov $0x1,%esi
14441(5): call 0xfffee26f(%rip)
14446(3): add %rax,%rbx
14449(3): sub %rax,%rbp
1444c(4): mov 0x0(%r13),%edx
14450(2): jnz 0xffffffc8(%rip)
14452(4): add $0x18,%rsp
14456(1): pop %rbx
14457(1): pop %rbp
14458(2): pop %r12
1445a(2): pop %r13
1445c(2): pop %r14
1445e(2): pop %r15
14460(1): ret near (%rsp)
14461(7): nop 0x0(%rax)
14468(4): mov 0x18(%rdi),%r14
1446c(7): lea 0x838(%rdi),%rax
14473(4): lea 0x20(%rdi),%r13
14477(5): mov %rax,0x8(%rsp)
1447c(3): cmp %r14,%rdx
1447f(6): jbe 0xe3(%rip)
14485(5): mov $0x800,%esi
1448a(3): mov %rbx,%rdi
1448d(3): mov %r14,%rdx
14490(3): sub %r14,%rsi
14493(5): add 0x8(%rsp),%rsi
14498(3): add %r14,%rbx
1449b(3): sub %r14,%rbp
1449e(5): call 0xfffee502(%rip)
144a3(3): test $0x7,%bl
144a6(2): jnz 0x6a(%rip)
144a8(7): cmp $0x7ff,%rbp
144af(6): jbe 0xa4(%rip)
144b5(7): lea 0xfffff800(%rbp),%r15
144bc(3): mov %r15,%r14
144bf(7): and $0x7ff,%r14d
144c6(2): jmp 0x16(%rip)
144c8(8): nop 0x0(%rax,%rax,1)
144d0(3): cmp %r14,%r15
144d3(2): jz 0x3d(%rip)
144d5(7): sub $0x800,%r15
144dc(3): mov %rbx,%rsi
144df(3): mov %r13,%rdi
144e2(7): add $0x800,%rbx
144e9(5): call 0xe7(%rip)
144ee(3): test %r15,%r15
144f1(3): mov %r15,%rbp
144f4(2): jnz 0xffffffdc(%rip)
144f6(9): mov $0x0,0x18(%r12)
144ff(4): add $0x18,%rsp
14503(1): pop %rbx
14504(1): pop %rbp
14505(2): pop %r12
14507(2): pop %r13
14509(2): pop %r14
1450b(2): pop %r15
1450d(1): ret near (%rsp)
1450e(2): nop 
14510(5): mov 0x8(%rsp),%rsi
14515(3): mov %r13,%rdi
14518(6): mov $0x800,%r14d
1451e(5): call 0xb2(%rip)
14523(7): cmp $0x800,%rbp
1452a(6): jnbe 0xffffff5b(%rip)
14530(6): mov $0x800,%r14d
14536(5): mov 0x8(%rsp),%rsi
1453b(3): mov %rbp,%rdx
1453e(3): mov %rbx,%rdi
14541(3): sub %rbp,%r14
14544(5): call 0xfffee45c(%rip)
14549(5): mov %r14,0x18(%r12)
1454e(5): jmp 0xffffff04(%rip)
14553(5): mov 0x8(%rsp),%rsi
14558(3): mov %r13,%rdi
1455b(5): call 0x75(%rip)
14560(2): jmp 0xffffffd0(%rip)
14562(3): mov %rax,%r15
14565(3): sub %r14,%r15
14568(7): lea 0x800(%r15),%rax
1456f(5): mov %rax,0x8(%rsp)
14574(2): jmp 0xffffffc2(%rip)

"randread_free" :
14580(1): push %rbp
14581(1): push %rbx
14582(7): mov $0xffffffff,%rdx
14589(3): mov %rdi,%rbx
1458c(5): mov $0x1038,%esi
14591(4): sub $0x8,%rsp
14595(3): mov (%rdi),%rbp
14598(5): call 0xfffee588(%rip)
1459d(3): mov %rbx,%rdi
145a0(5): call 0xfffee6e0(%rip)
145a5(3): test %rbp,%rbp
145a8(2): jz 0x18(%rip)
145aa(4): add $0x8,%rsp
145ae(3): mov %rbp,%rdi
145b1(1): pop %rbx
145b2(1): pop %rbp
145b3(5): jmp 0x4fd(%rip)
145b8(8): nop 0x0(%rax,%rax,1)
145c0(4): add $0x8,%rsp
145c4(2): xor %eax,%eax
145c6(1): pop %rbx
145c7(1): pop %rbp
145c8(1): ret near (%rsp)

"isaac_refill" :
145d0(7): mov 0x810(%rdi),%rax
145d7(7): mov 0x800(%rdi),%rdx
145de(7): lea 0x400(%rdi),%r9
145e5(4): lea 0x1(%rax),%rcx
145e9(3): mov %rdi,%rax
145ec(7): mov %rcx,0x810(%rdi)
145f3(7): add 0x808(%rdi),%rcx
145fa(6): nop 0x0(%rax,%rax,1)
14600(3): mov %rdx,%r8
14603(4): shl/sal $0x15,%r8
14607(3): xor %r8,%rdx
1460a(3): mov (%rax),%r8
1460d(3): not %rdx
14610(7): add 0x400(%rax),%rdx
14617(3): mov %r8,%r10
1461a(7): and $0x7f8,%r10d
14621(4): mov 0x0(%rdi,%r10,1),%r11
14625(3): mov %rdx,%r10
14628(4): shr $0x5,%r10
1462c(3): add %rdx,%r11
1462f(3): xor %r10,%rdx
14632(3): add %r11,%rcx
14635(3): mov %rcx,(%rax)
14638(4): shr $0x8,%rcx
1463c(6): and $0x7f8,%ecx
14642(4): mov 0x0(%rdi,%rcx,1),%r11
14646(3): add %r8,%r11
14649(3): mov %r11,(%rsi)
1464c(7): add 0x408(%rax),%rdx
14653(4): mov 0x8(%rax),%rcx
14657(3): mov %rdx,%r10
1465a(3): mov %rcx,%rdx
1465d(6): and $0x7f8,%edx
14663(4): mov 0x0(%rdi,%rdx,1),%r8
14667(3): mov %r10,%rdx
1466a(4): shl/sal $0xc,%rdx
1466e(3): xor %r10,%rdx
14671(3): add %r10,%r8
14674(3): add %r11,%r8
14677(4): mov %r8,0x8(%rax)
1467b(4): shr $0x8,%r8
1467f(7): and $0x7f8,%r8d
14686(4): add 0x0(%rdi,%r8,1),%rcx
1468a(4): mov %rcx,0x8(%rsi)
1468e(4): mov 0x10(%rax),%r8
14692(3): mov %rcx,%r11
14695(7): add 0x410(%rax),%rdx
1469c(3): mov %r8,%rcx
1469f(6): and $0x7f8,%ecx
146a5(4): mov 0x0(%rdi,%rcx,1),%r10
146a9(3): add %rdx,%r10
146ac(3): mov %r10,%rcx
146af(3): add %r11,%rcx
146b2(4): mov %rcx,0x10(%rax)
146b6(4): shr $0x8,%rcx
146ba(6): and $0x7f8,%ecx
146c0(4): mov 0x0(%rdi,%rcx,1),%r10
146c4(3): mov %rdx,%rcx
146c7(4): shr $0x21,%rcx
146cb(3): xor %rcx,%rdx
146ce(3): add %r8,%r10
146d1(4): mov %r10,0x10(%rsi)
146d5(4): mov 0x18(%rax),%rcx
146d9(7): add 0x418(%rax),%rdx
146e0(3): mov %rcx,%r8
146e3(7): and $0x7f8,%r8d
146ea(4): mov 0x0(%rdi,%r8,1),%r11
146ee(3): add %rdx,%r11
146f1(3): mov %r11,%r8
146f4(3): add %r10,%r8
146f7(4): add $0x20,%rax
146fb(4): add $0x20,%rsi
146ff(4): mov %r8,0xfffffff8(%rax)
14703(4): shr $0x8,%r8
14707(7): and $0x7f8,%r8d
1470e(4): add 0x0(%rdi,%r8,1),%rcx
14712(4): mov %rcx,0xfffffff8(%rsi)
14716(3): cmp %r9,%rax
14719(6): jb 0xfffffee7(%rip)
1471f(7): lea 0x800(%rdi),%r9
14726(a): nop 0x0(%rax,%rax,1)
14730(3): mov %rdx,%r8
14733(4): shl/sal $0x15,%r8
14737(3): xor %r8,%rdx
1473a(3): mov (%rax),%r8
1473d(3): not %rdx
14740(7): add 0xfffffc00(%rax),%rdx
14747(3): mov %r8,%r10
1474a(7): and $0x7f8,%r10d
14751(4): mov 0x0(%rdi,%r10,1),%r11
14755(3): mov %rdx,%r10
14758(4): shr $0x5,%r10
1475c(3): add %rdx,%r11
1475f(3): xor %r10,%rdx
14762(3): add %r11,%rcx
14765(3): mov %rcx,(%rax)
14768(4): shr $0x8,%rcx
1476c(6): and $0x7f8,%ecx
14772(4): mov 0x0(%rdi,%rcx,1),%r11
14776(3): add %r8,%r11
14779(3): mov %r11,(%rsi)
1477c(7): add 0xfffffc08(%rax),%rdx
14783(4): mov 0x8(%rax),%rcx
14787(3): mov %rdx,%r10
1478a(3): mov %rcx,%rdx
1478d(6): and $0x7f8,%edx
14793(4): mov 0x0(%rdi,%rdx,1),%r8
14797(3): mov %r10,%rdx
1479a(4): shl/sal $0xc,%rdx
1479e(3): xor %r10,%rdx
147a1(3): add %r10,%r8
147a4(3): add %r11,%r8
147a7(4): mov %r8,0x8(%rax)
147ab(4): shr $0x8,%r8
147af(7): and $0x7f8,%r8d
147b6(4): add 0x0(%rdi,%r8,1),%rcx
147ba(4): mov %rcx,0x8(%rsi)
147be(4): mov 0x10(%rax),%r8
147c2(3): mov %rcx,%r11
147c5(7): add 0xfffffc10(%rax),%rdx
147cc(3): mov %r8,%rcx
147cf(6): and $0x7f8,%ecx
147d5(4): mov 0x0(%rdi,%rcx,1),%r10
147d9(3): add %rdx,%r10
147dc(3): mov %r10,%rcx
147df(3): add %r11,%rcx
147e2(4): mov %rcx,0x10(%rax)
147e6(4): shr $0x8,%rcx
147ea(6): and $0x7f8,%ecx
147f0(4): mov 0x0(%rdi,%rcx,1),%r10
147f4(3): mov %rdx,%rcx
147f7(4): shr $0x21,%rcx
147fb(3): xor %rcx,%rdx
147fe(3): add %r8,%r10
14801(4): mov %r10,0x10(%rsi)
14805(4): mov 0x18(%rax),%rcx
14809(7): add 0xfffffc18(%rax),%rdx
14810(3): mov %rcx,%r8
14813(7): and $0x7f8,%r8d
1481a(4): mov 0x0(%rdi,%r8,1),%r11
1481e(3): add %rdx,%r11
14821(3): mov %r11,%r8
14824(3): add %r10,%r8
14827(4): add $0x20,%rax
1482b(4): add $0x20,%rsi
1482f(4): mov %r8,0xfffffff8(%rax)
14833(4): shr $0x8,%r8
14837(7): and $0x7f8,%r8d
1483e(4): add 0x0(%rdi,%r8,1),%rcx
14842(4): mov %rcx,0xfffffff8(%rsi)
14846(3): cmp %r9,%rax
14849(6): jb 0xfffffee7(%rip)
1484f(7): mov %rdx,0x800(%rdi)
14856(7): mov %rcx,0x808(%rdi)
1485d(1): ret near (%rsp)

"isaac_seed" :
14860(2): push %r13
14862(2): push %r12
14864(7): lea 0x800(%rdi),%r12
1486b(1): push %rbp
1486c(3): mov %rdi,%rdx
1486f(1): push %rbx
14870(3): mov %rdi,%rax
14873(a): mov $0x-7424904924229222229,%rcx
1487d(a): mov $0x-5865837416287532563,%r10
14887(a): mov $0x5259722845879046933,%rbp
14891(a): mov $0x-9011610652101975858,%rsi
1489b(a): mov $0x-5576812576440232668,%r8
148a5(a): mov $0x-8354558816804203872,%rbx
148af(a): mov $0x-5046086420515862430,%r11
148b9(a): mov $0x7240739780546808700,%r9
148c3(5): nop 0x0(%rax,%rax,1)
148c8(4): add 0x20(%rax),%rsi
148cc(4): add 0x38(%rax),%rcx
148d0(3): mov (%rax),%r13
148d3(4): add 0x28(%rax),%rbp
148d7(4): add 0x30(%rax),%r10
148db(3): sub %rsi,%r13
148de(3): add %r13,%r9
148e1(3): mov %rcx,%r13
148e4(4): shr $0x9,%r13
148e8(3): add %r9,%rcx
148eb(3): xor %r13,%rbp
148ee(4): mov 0x8(%rax),%r13
148f2(3): sub %rbp,%r13
148f5(3): add %r13,%r11
148f8(3): mov %r9,%r13
148fb(4): shl/sal $0x9,%r13
148ff(3): add %r11,%r9
14902(3): xor %r13,%r10
14905(4): mov 0x10(%rax),%r13
14909(3): sub %r10,%r13
1490c(3): add %r13,%rbx
1490f(3): mov %r11,%r13
14912(4): shr $0x17,%r13
14916(3): add %rbx,%r11
14919(3): xor %r13,%rcx
1491c(4): mov 0x18(%rax),%r13
14920(3): sub %rcx,%r13
14923(3): add %r13,%r8
14926(3): mov %rbx,%r13
14929(4): shl/sal $0xf,%r13
1492d(3): add %r8,%rbx
14930(3): xor %r13,%r9
14933(3): mov %r8,%r13
14936(3): sub %r9,%rsi
14939(4): shr $0xe,%r13
1493d(3): mov %r9,(%rax)
14940(3): xor %r13,%r11
14943(3): mov %rsi,%r13
14946(3): add %rsi,%r8
14949(3): sub %r11,%rbp
1494c(4): shl/sal $0x14,%r13
14950(4): mov %r11,0x8(%rax)
14954(3): xor %r13,%rbx
14957(4): lea 0x0(%rsi,%rbp,1),%r13
1495b(3): mov %rbp,%rsi
1495e(3): sub %rbx,%r10
14961(4): shr $0x11,%rsi
14965(4): mov %rbx,0x10(%rax)
14969(3): xor %rsi,%r8
1496c(3): mov %r10,%rsi
1496f(3): add %r10,%rbp
14972(3): sub %r8,%rcx
14975(4): shl/sal $0xe,%rsi
14979(4): mov %r8,0x18(%rax)
1497d(3): xor %r13,%rsi
14980(3): add %rcx,%r10
14983(4): mov %rbp,0x28(%rax)
14987(4): mov %rsi,0x20(%rax)
1498b(4): mov %r10,0x30(%rax)
1498f(4): add $0x40,%rax
14993(4): mov %rcx,0xfffffff8(%rax)
14997(3): cmp %rax,%r12
1499a(6): jnz 0xffffff2e(%rip)
149a0(4): add 0x20(%rdx),%rsi
149a4(4): add 0x38(%rdx),%rcx
149a8(3): mov (%rdx),%r12
149ab(4): add 0x28(%rdx),%rbp
149af(4): add 0x30(%rdx),%r10
149b3(3): sub %rsi,%r12
149b6(3): add %r12,%r9
149b9(3): mov %rcx,%r12
149bc(4): shr $0x9,%r12
149c0(3): add %r9,%rcx
149c3(3): xor %r12,%rbp
149c6(4): mov 0x8(%rdx),%r12
149ca(3): sub %rbp,%r12
149cd(3): add %r12,%r11
149d0(3): mov %r9,%r12
149d3(4): shl/sal $0x9,%r12
149d7(3): add %r11,%r9
149da(3): xor %r12,%r10
149dd(4): mov 0x10(%rdx),%r12
149e1(3): sub %r10,%r12
149e4(3): add %r12,%rbx
149e7(3): mov %r11,%r12
149ea(4): shr $0x17,%r12
149ee(3): add %rbx,%r11
149f1(3): xor %r12,%rcx
149f4(4): mov 0x18(%rdx),%r12
149f8(3): sub %rcx,%r12
149fb(3): add %r12,%r8
149fe(3): mov %rbx,%r12
14a01(4): shl/sal $0xf,%r12
14a05(3): add %r8,%rbx
14a08(3): xor %r12,%r9
14a0b(3): mov %r8,%r12
14a0e(3): sub %r9,%rsi
14a11(4): shr $0xe,%r12
14a15(3): mov %r9,(%rdx)
14a18(3): xor %r12,%r11
14a1b(3): mov %rsi,%r12
14a1e(3): add %rsi,%r8
14a21(3): sub %r11,%rbp
14a24(4): shl/sal $0x14,%r12
14a28(4): mov %r11,0x8(%rdx)
14a2c(3): xor %r12,%rbx
14a2f(4): lea 0x0(%rsi,%rbp,1),%r12
14a33(3): mov %rbp,%rsi
14a36(3): sub %rbx,%r10
14a39(4): shr $0x11,%rsi
14a3d(4): mov %rbx,0x10(%rdx)
14a41(3): xor %rsi,%r8
14a44(3): mov %r10,%rsi
14a47(3): add %r10,%rbp
14a4a(3): sub %r8,%rcx
14a4d(4): shl/sal $0xe,%rsi
14a51(4): mov %r8,0x18(%rdx)
14a55(3): xor %r12,%rsi
14a58(3): add %rcx,%r10
14a5b(4): mov %rbp,0x28(%rdx)
14a5f(4): mov %rsi,0x20(%rdx)
14a63(4): mov %r10,0x30(%rdx)
14a67(4): add $0x40,%rdx
14a6b(4): mov %rcx,0xfffffff8(%rdx)
14a6f(3): cmp %rdx,%rax
14a72(6): jnz 0xffffff2e(%rip)
14a78(1): pop %rbx
14a79(b): mov $0x0,0x810(%rdi)
14a84(b): mov $0x0,0x808(%rdi)
14a8f(1): pop %rbp
14a90(b): mov $0x0,0x800(%rdi)
14a9b(2): pop %r12
14a9d(2): pop %r13
14a9f(1): ret near (%rsp)

"dup_safer" :
14aa0(5): mov $0x3,%edx
14aa5(2): xor %esi,%esi
14aa7(2): xor %eax,%eax
14aa9(5): jmp 0x87(%rip)

"rpl_fclose" :
14ab0(2): push %r12
14ab2(1): push %rbp
14ab3(1): push %rbx
14ab4(3): mov %rdi,%rbx
14ab7(5): call 0xfffedf09(%rip)
14abc(2): test %eax,%eax
14abe(3): mov %rbx,%rdi
14ac1(2): js 0x56(%rip)
14ac3(5): call 0xfffedf8d(%rip)
14ac8(2): test %eax,%eax
14aca(2): jnz 0x2e(%rip)
14acc(3): mov %rbx,%rdi
14acf(5): call 0xffffc5a1(%rip)
14ad4(2): test %eax,%eax
14ad6(2): jz 0x3e(%rip)
14ad8(5): call 0xfffedac8(%rip)
14add(3): mov (%rax),%r12d
14ae0(3): mov %rbx,%rdi
14ae3(3): mov %rax,%rbp
14ae6(5): call 0xfffedbfa(%rip)
14aeb(3): test %r12d,%r12d
14aee(2): jnz 0x32(%rip)
14af0(1): pop %rbx
14af1(1): pop %rbp
14af2(2): pop %r12
14af4(1): ret near (%rsp)
14af5(3): nop (%rax)
14af8(3): mov %rbx,%rdi
14afb(5): call 0xfffedec5(%rip)
14b00(2): xor %esi,%esi
14b02(5): mov $0x1,%edx
14b07(2): mov %eax,%edi
14b09(5): call 0xfffedcf7(%rip)
14b0e(4): cmp $0xffffffff,%rax
14b12(2): jnz 0xffffffba(%rip)
14b14(3): mov %rbx,%rdi
14b17(1): pop %rbx
14b18(1): pop %rbp
14b19(2): pop %r12
14b1b(5): jmp 0xfffedbc5(%rip)
14b20(4): mov %r12d,0x0(%rbp)
14b24(5): mov $0xffffffff,%eax
14b29(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
14b30(2): push %r12
14b32(1): push %rbp
14b33(2): mov %edi,%ebp
14b35(1): push %rbx
14b36(4): sub $0x50,%rsp
14b3a(9): mov $0x28,%rax
14b43(5): mov %rax,0x18(%rsp)
14b48(2): xor %eax,%eax
14b4a(5): lea 0x70(%rsp),%rax
14b4f(2): test %esi,%esi
14b51(5): mov %rdx,0x30(%rsp)
14b56(5): mov %rcx,0x38(%rsp)
14b5b(5): mov %r8,0x40(%rsp)
14b60(5): mov %rax,0x8(%rsp)
14b65(5): lea 0x20(%rsp),%rax
14b6a(5): mov %r9,0x48(%rsp)
14b6f(7): mov $0x10,(%rsp)
14b76(5): mov %rax,0x10(%rsp)
14b7b(6): jz 0x207(%rip)
14b81(6): cmp $0x406,%esi
14b87(2): jnz 0x49(%rip)
14b89(5): mov 0x10(%rsp),%rax
14b8e(7): cmp $0x0,0x207b5f(%rip)
14b95(7): mov $0x18,(%rsp)
14b9c(4): mov 0x10(%rax),%r12d
14ba0(3): mov %r12d,%edx
14ba3(6): js 0x130(%rip)
14ba9(2): xor %eax,%eax
14bab(5): mov $0x406,%esi
14bb0(5): call 0xfffedac0(%rip)
14bb5(2): test %eax,%eax
14bb7(2): mov %eax,%ebx
14bb9(6): js 0x18f(%rip)
14bbf(a): mov $0x1,0x207b2b(%rip)
14bc9(2): jmp 0x47(%rip)
14bcb(5): nop 0x0(%rax,%rax,1)
14bd0(3): cmp $0xb,%esi
14bd3(2): jz 0x2d(%rip)
14bd5(2): jnle 0x5b(%rip)
14bd7(3): cmp $0x4,%esi
14bda(6): jz 0xd6(%rip)
14be0(6): jnle 0xc0(%rip)
14be6(3): cmp $0x2,%esi
14be9(6): jz 0xc7(%rip)
14bef(2): jnle 0x11(%rip)
14bf1(3): cmp $0x1,%esi
14bf4(2): jnz 0x64(%rip)
14bf6(a): nop 0x0(%rax,%rax,1)
14c00(2): mov %ebp,%edi
14c02(2): xor %eax,%eax
14c04(5): call 0xfffeda6c(%rip)
14c09(2): mov %eax,%ebx
14c0b(5): nop 0x0(%rax,%rax,1)
14c10(5): mov 0x18(%rsp),%rcx
14c15(9): xor $0x28,%rcx
14c1e(2): mov %ebx,%eax
14c20(6): jnz 0x15d(%rip)
14c26(4): add $0x50,%rsp
14c2a(1): pop %rbx
14c2b(1): pop %rbp
14c2c(2): pop %r12
14c2e(1): ret near (%rsp)
14c2f(1): nop 
14c30(6): cmp $0x407,%esi
14c36(2): jnle 0x4a(%rip)
14c38(6): cmp $0x406,%esi
14c3e(2): jnl 0x72(%rip)
14c40(6): cmp $0x401,%esi
14c46(2): jz 0xffffffba(%rip)
14c48(6): cmp $0x402,%esi
14c4e(2): jz 0x62(%rip)
14c50(6): cmp $0x400,%esi
14c56(2): jz 0x5a(%rip)
14c58(3): mov (%rsp),%eax
14c5b(3): cmp $0x2f,%eax
14c5e(6): jnbe 0x13c(%rip)
14c64(5): add 0x10(%rsp),%rax
14c69(3): mov (%rax),%rdx
14c6c(2): mov %ebp,%edi
14c6e(2): xor %eax,%eax
14c70(5): call 0xfffeda00(%rip)
14c75(2): mov %eax,%ebx
14c77(2): jmp 0xffffff99(%rip)
14c79(7): nop 0x0(%rax)
14c80(6): cmp $0x409,%esi
14c86(2): jz 0x2a(%rip)
14c88(6): jl 0xffffff78(%rip)
14c8e(6): cmp $0x40a,%esi
14c94(2): jnz 0xffffffc4(%rip)
14c96(5): jmp 0xffffff6a(%rip)
14c9b(5): nop 0x0(%rax,%rax,1)
14ca0(3): cmp $0x9,%esi
14ca3(6): jz 0xffffff5d(%rip)
14ca9(2): jnle 0x7(%rip)
14cab(3): cmp $0x8,%esi
14cae(2): jnz 0xffffffaa(%rip)
14cb0(3): mov (%rsp),%eax
14cb3(3): cmp $0x2f,%eax
14cb6(6): jnbe 0xee(%rip)
14cbc(5): add 0x10(%rsp),%rax
14cc1(2): mov (%rax),%edx
14cc3(2): mov %ebp,%edi
14cc5(2): xor %eax,%eax
14cc7(5): call 0xfffed9a9(%rip)
14ccc(2): mov %eax,%ebx
14cce(5): jmp 0xffffff42(%rip)
14cd3(2): xor %esi,%esi
14cd5(2): xor %eax,%eax
14cd7(5): call 0xfffed999(%rip)
14cdc(2): test %eax,%eax
14cde(2): mov %eax,%ebx
14ce0(6): js 0xffffff30(%rip)
14ce6(7): cmp $0xff,0x207a07(%rip)
14ced(6): jnz 0xffffff23(%rip)
14cf3(2): xor %eax,%eax
14cf5(5): mov $0x1,%esi
14cfa(2): mov %ebx,%edi
14cfc(5): call 0xfffed974(%rip)
14d01(2): test %eax,%eax
14d03(2): js 0x1e(%rip)
14d05(3): or $0x1,%eax
14d08(5): mov $0x2,%esi
14d0d(2): mov %ebx,%edi
14d0f(2): mov %eax,%edx
14d11(2): xor %eax,%eax
14d13(5): call 0xfffed95d(%rip)
14d18(3): cmp $0xff,%eax
14d1b(6): jnz 0xfffffef5(%rip)
14d21(5): call 0xfffed87f(%rip)
14d26(3): mov (%rax),%r12d
14d29(3): mov %rax,%rbp
14d2c(2): mov %ebx,%edi
14d2e(5): call 0xfffedb42(%rip)
14d33(5): mov $0xffffffff,%ebx
14d38(4): mov %r12d,0x0(%rbp)
14d3c(5): jmp 0xfffffed4(%rip)
14d41(7): nop 0x0(%rax)
14d48(5): call 0xfffed858(%rip)
14d4d(3): cmp $0x16,(%rax)
14d50(6): jnz 0xfffffe6f(%rip)
14d56(2): xor %esi,%esi
14d58(2): xor %eax,%eax
14d5a(3): mov %r12d,%edx
14d5d(2): mov %ebp,%edi
14d5f(5): call 0xfffed911(%rip)
14d64(2): test %eax,%eax
14d66(2): mov %eax,%ebx
14d68(6): js 0xfffffea8(%rip)
14d6e(a): mov $0xffffffff,0x20797c(%rip)
14d78(5): jmp 0xffffff7b(%rip)
14d7d(5): call 0xfffeda03(%rip)
14d82(5): mov 0x10(%rsp),%rax
14d87(2): xor %esi,%esi
14d89(3): mov 0x10(%rax),%edx
14d8c(2): xor %eax,%eax
14d8e(5): call 0xfffed8e2(%rip)
14d93(2): mov %eax,%ebx
14d95(5): jmp 0xfffffe7b(%rip)
14d9a(5): mov 0x8(%rsp),%rax
14d9f(5): jmp 0xfffffeca(%rip)
14da4(5): mov 0x8(%rsp),%rax
14da9(5): jmp 0xffffff18(%rip)

"fopen_safer" :
14db0(2): push %r12
14db2(1): push %rbp
14db3(3): mov %rsi,%rbp
14db6(1): push %rbx
14db7(5): call 0xfffedda9(%rip)
14dbc(3): test %rax,%rax
14dbf(3): mov %rax,%rbx
14dc2(2): jz 0xf(%rip)
14dc4(3): mov %rax,%rdi
14dc7(5): call 0xfffedbf9(%rip)
14dcc(3): cmp $0x2,%eax
14dcf(2): jbe 0x11(%rip)
14dd1(3): mov %rbx,%rax
14dd4(1): pop %rbx
14dd5(1): pop %rbp
14dd6(2): pop %r12
14dd8(1): ret near (%rsp)
14dd9(7): nop 0x0(%rax)
14de0(2): mov %eax,%edi
14de2(5): call 0xfffffcbe(%rip)
14de7(2): test %eax,%eax
14de9(3): mov %eax,%r12d
14dec(2): js 0x3c(%rip)
14dee(3): mov %rbx,%rdi
14df1(5): call 0xfffffcbf(%rip)
14df6(2): test %eax,%eax
14df8(2): jnz 0x15(%rip)
14dfa(3): mov %rbp,%rsi
14dfd(3): mov %r12d,%edi
14e00(5): call 0xfffedc80(%rip)
14e05(3): test %rax,%rax
14e08(3): mov %rax,%rbx
14e0b(2): jnz 0xffffffc6(%rip)
14e0d(5): call 0xfffed793(%rip)
14e12(2): mov (%rax),%ebp
14e14(3): mov %rax,%rbx
14e17(3): mov %r12d,%edi
14e1a(5): call 0xfffeda56(%rip)
14e1f(2): mov %ebp,(%rbx)
14e21(2): xor %ebx,%ebx
14e23(2): jmp 0xffffffae(%rip)
14e25(3): nop (%rax)
14e28(5): call 0xfffed778(%rip)
14e2d(3): mov (%rax),%r12d
14e30(3): mov %rax,%rbp
14e33(3): mov %rbx,%rdi
14e36(5): call 0xfffffc7a(%rip)
14e3b(2): xor %ebx,%ebx
14e3d(4): mov %r12d,0x0(%rbp)
14e41(2): jmp 0xffffff90(%rip)

"__libc_csu_init" :
14e50(2): push %r15
14e52(2): push %r14
14e54(3): mov %rdx,%r15
14e57(2): push %r13
14e59(2): push %r12
14e5b(7): lea 0x20692e(%rip),%r12
14e62(1): push %rbp
14e63(7): lea 0x20692e(%rip),%rbp
14e6a(1): push %rbx
14e6b(3): mov %edi,%r13d
14e6e(3): mov %rsi,%r14
14e71(3): sub %r12,%rbp
14e74(4): sub $0x8,%rsp
14e78(4): sar $0x3,%rbp
14e7c(5): call 0xfffed6c4(%rip)
14e81(3): test %rbp,%rbp
14e84(2): jz 0x22(%rip)
14e86(2): xor %ebx,%ebx
14e88(8): nop 0x0(%rax,%rax,1)
14e90(3): mov %r15,%rdx
14e93(3): mov %r14,%rsi
14e96(3): mov %r13d,%edi
14e99(4): call 0x0(%r12,%rbx,8)
14e9d(4): add $0x1,%rbx
14ea1(3): cmp %rbx,%rbp
14ea4(2): jnz 0xffffffec(%rip)
14ea6(4): add $0x8,%rsp
14eaa(1): pop %rbx
14eab(1): pop %rbp
14eac(2): pop %r12
14eae(2): pop %r13
14eb0(2): pop %r14
14eb2(2): pop %r15
14eb4(1): ret near (%rsp)

"atexit" :
14ed0(7): mov 0x207131(%rip),%rdx
14ed7(2): xor %esi,%esi
14ed9(5): jmp 0xfffedce7(%rip)

"_fini" :
14ee0(4): sub $0x8,%rsp
14ee4(4): add $0x8,%rsp
14ee8(1): ret near (%rsp)

