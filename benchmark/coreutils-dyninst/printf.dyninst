
"getenv@plt" :
1410(6): jmp 0x20aa0a(%rip)
1416(5): push $0x0

"__snprintf_chk@plt" :
1420(6): jmp 0x20aa02(%rip)
1426(5): push $0x1

"free@plt" :
1430(6): jmp 0x20a9fa(%rip)
1436(5): push $0x2

"abort@plt" :
1440(6): jmp 0x20a9f2(%rip)
1446(5): push $0x3

"__errno_location@plt" :
1450(6): jmp 0x20a9ea(%rip)
1456(5): push $0x4

"strncmp@plt" :
1460(6): jmp 0x20a9e2(%rip)
1466(5): push $0x5

"_exit@plt" :
1470(6): jmp 0x20a9da(%rip)
1476(5): push $0x6

"__fpending@plt" :
1480(6): jmp 0x20a9d2(%rip)
1486(5): push $0x7

"iconv@plt" :
1490(6): jmp 0x20a9ca(%rip)
1496(5): push $0x8

"ferror@plt" :
14a0(6): jmp 0x20a9c2(%rip)
14a6(5): push $0x9

"textdomain@plt" :
14b0(6): jmp 0x20a9ba(%rip)
14b6(5): push $0xa

"__strtol_internal@plt" :
14c0(6): jmp 0x20a9b2(%rip)
14c6(5): push $0xb

"fclose@plt" :
14d0(6): jmp 0x20a9aa(%rip)
14d6(5): push $0xc

"bindtextdomain@plt" :
14e0(6): jmp 0x20a9a2(%rip)
14e6(5): push $0xd

"dcgettext@plt" :
14f0(6): jmp 0x20a99a(%rip)
14f6(5): push $0xe

"__ctype_get_mb_cur_max@plt" :
1500(6): jmp 0x20a992(%rip)
1506(5): push $0xf

"strlen@plt" :
1510(6): jmp 0x20a98a(%rip)
1516(5): push $0x10

"__stack_chk_fail@plt" :
1520(6): jmp 0x20a982(%rip)
1526(5): push $0x11

"mbrtowc@plt" :
1530(6): jmp 0x20a97a(%rip)
1536(5): push $0x12

"strchr@plt" :
1540(6): jmp 0x20a972(%rip)
1546(5): push $0x13

"newlocale@plt" :
1550(6): jmp 0x20a96a(%rip)
1556(5): push $0x14

"__overflow@plt" :
1560(6): jmp 0x20a962(%rip)
1566(5): push $0x15

"strrchr@plt" :
1570(6): jmp 0x20a95a(%rip)
1576(5): push $0x16

"lseek@plt" :
1580(6): jmp 0x20a952(%rip)
1586(5): push $0x17

"__strtoul_internal@plt" :
1590(6): jmp 0x20a94a(%rip)
1596(5): push $0x18

"memset@plt" :
15a0(6): jmp 0x20a942(%rip)
15a6(5): push $0x19

"memcmp@plt" :
15b0(6): jmp 0x20a93a(%rip)
15b6(5): push $0x1a

"fputs_unlocked@plt" :
15c0(6): jmp 0x20a932(%rip)
15c6(5): push $0x1b

"calloc@plt" :
15d0(6): jmp 0x20a92a(%rip)
15d6(5): push $0x1c

"strcmp@plt" :
15e0(6): jmp 0x20a922(%rip)
15e6(5): push $0x1d

"memcpy@plt" :
15f0(6): jmp 0x20a91a(%rip)
15f6(5): push $0x1e

"fileno@plt" :
1600(6): jmp 0x20a912(%rip)
1606(5): push $0x1f

"uselocale@plt" :
1610(6): jmp 0x20a90a(%rip)
1616(5): push $0x20

"malloc@plt" :
1620(6): jmp 0x20a902(%rip)
1626(5): push $0x21

"fflush@plt" :
1630(6): jmp 0x20a8fa(%rip)
1636(5): push $0x22

"nl_langinfo@plt" :
1640(6): jmp 0x20a8f2(%rip)
1646(5): push $0x23

"__freading@plt" :
1650(6): jmp 0x20a8ea(%rip)
1656(5): push $0x24

"realloc@plt" :
1660(6): jmp 0x20a8e2(%rip)
1666(5): push $0x25

"setlocale@plt" :
1670(6): jmp 0x20a8da(%rip)
1676(5): push $0x26

"__printf_chk@plt" :
1680(6): jmp 0x20a8d2(%rip)
1686(5): push $0x27

"mempcpy@plt" :
1690(6): jmp 0x20a8ca(%rip)
1696(5): push $0x28

"strtold@plt" :
16a0(6): jmp 0x20a8c2(%rip)
16a6(5): push $0x29

"error@plt" :
16b0(6): jmp 0x20a8ba(%rip)
16b6(5): push $0x2a

"fseeko@plt" :
16c0(6): jmp 0x20a8b2(%rip)
16c6(5): push $0x2b

"__cxa_atexit@plt" :
16d0(6): jmp 0x20a8aa(%rip)
16d6(5): push $0x2c

"exit@plt" :
16e0(6): jmp 0x20a8a2(%rip)
16e6(5): push $0x2d

"fwrite@plt" :
16f0(6): jmp 0x20a89a(%rip)
16f6(5): push $0x2e

"__fprintf_chk@plt" :
1700(6): jmp 0x20a892(%rip)
1706(5): push $0x2f

"mbsinit@plt" :
1710(6): jmp 0x20a88a(%rip)
1716(5): push $0x30

"iswprint@plt" :
1720(6): jmp 0x20a882(%rip)
1726(5): push $0x31

"__ctype_b_loc@plt" :
1730(6): jmp 0x20a87a(%rip)
1736(5): push $0x32

"iconv_open@plt" :
1740(6): jmp 0x20a872(%rip)
1746(5): push $0x33

".plt.got" :
1750(6): jmp 0x20a88a(%rip)
1756(2): nop 

"_init" :
13e0(4): sub $0x8,%rsp
13e4(7): mov 0x20abe5(%rip),%rax
13eb(3): test %rax,%rax
13ee(2): jz 0x4(%rip)
13f0(2): call %rax
13f2(4): add $0x8,%rsp
13f6(1): ret near (%rsp)

"main" :
1760(2): push %r15
1762(2): push %r14
1764(2): push %r13
1766(2): push %r12
1768(1): push %rbp
1769(1): push %rbx
176a(2): mov %edi,%ebp
176c(3): mov %rsi,%rbx
176f(7): sub $0x188,%rsp
1776(3): mov (%rsi),%rdi
1779(9): mov $0x28,%rax
1782(8): mov %rax,0x178(%rsp)
178a(2): xor %eax,%eax
178c(5): call 0x1aa4(%rip)
1791(7): lea 0x7d7a(%rip),%rsi
1798(5): mov $0x6,%edi
179d(5): call 0xfffffed3(%rip)
17a2(7): lea 0x74b4(%rip),%rsi
17a9(7): lea 0x747f(%rip),%rdi
17b0(5): call 0xfffffd30(%rip)
17b5(7): lea 0x7473(%rip),%rdi
17bc(5): call 0xfffffcf4(%rip)
17c1(7): lea 0x19b8(%rip),%rdi
17c8(5): call 0x6bc8(%rip)
17cd(7): lea 0x74a1(%rip),%rdi
17d4(a): mov $0x0,0x20a8d2(%rip)
17de(5): call 0xfffffc32(%rip)
17e3(3): test %rax,%rax
17e6(7): setnz 0x20a8bf(%rip)
17ed(3): cmp $0x2,%ebp
17f0(6): jz 0x665(%rip)
17f6(3): cmp $0x1,%ebp
17f9(6): jle 0x6a4(%rip)
17ff(4): mov 0x8(%rbx),%rdi
1803(7): lea 0x749c(%rip),%rsi
180a(5): call 0xfffffdd6(%rip)
180f(2): test %eax,%eax
1811(2): jnz 0x9(%rip)
1813(3): sub $0x1,%ebp
1816(4): add $0x8,%rbx
181a(4): mov 0x8(%rbx),%rax
181e(a): mov $0x71473892950017,%r13
1828(5): mov %rax,0x58(%rsp)
182d(3): lea 0xfffffffe(%rbp),%eax
1830(4): mov %eax,0x48(%rsp)
1834(4): lea 0x10(%rbx),%rax
1838(5): mov %rax,0x30(%rsp)
183d(3): nop (%rax)
1840(5): mov 0x58(%rsp),%r14
1845(4): movzx (%r14),%eax
1849(2): test %al,%al
184b(6): jz 0x67d(%rip)
1851(5): mov 0x30(%rsp),%rsi
1856(5): mov 0x48(%rsp),%r15d
185b(8): mov $0x0,0x50(%rsp)
1863(8): mov $0x0,0x4c(%rsp)
186b(4): mov %rsi,(%rsp)
186f(2): jmp 0x25(%rip)
1871(7): nop 0x0(%rax)
1878(3): mov %r14,%rdi
187b(2): xor %esi,%esi
187d(5): call 0xda3(%rip)
1882(3): movsxd %eax,%rbx
1885(3): add %r14,%rbx
1888(4): lea 0x1(%rbx),%r14
188c(4): movzx 0x1(%rbx),%eax
1890(2): test %al,%al
1892(2): jz 0x3f(%rip)
1894(2): cmp $0x25,%al
1896(6): jz 0xda(%rip)
189c(2): cmp $0x5c,%al
189e(2): jz 0xffffffda(%rip)
18a0(7): mov 0x20a7e1(%rip),%rdi
18a7(4): lea 0x1(%r14),%rbp
18ab(4): mov 0x28(%rdi),%rdx
18af(4): cmp 0x30(%rdi),%rdx
18b3(6): jnb 0x56d(%rip)
18b9(4): lea 0x1(%rdx),%rcx
18bd(3): mov %r14,%rbx
18c0(3): mov %rbp,%r14
18c3(4): mov %rcx,0x28(%rdi)
18c7(2): mov %al,(%rdx)
18c9(4): movzx 0x1(%rbx),%eax
18cd(2): test %al,%al
18cf(2): jnz 0xffffffc5(%rip)
18d1(4): mov 0x48(%rsp),%eax
18d5(5): mov 0x30(%rsp),%rsi
18da(5): mov %r15d,0x48(%rsp)
18df(3): sub %r15d,%eax
18e2(3): movsxd %eax,%rdx
18e5(2): test %eax,%eax
18e7(4): lea 0x0(%rsi,%rdx,8),%rsi
18eb(5): mov %rsi,0x30(%rsp)
18f0(2): jle 0xb(%rip)
18f2(3): test %r15d,%r15d
18f5(6): jnle 0xffffff4b(%rip)
18fb(3): mov %r15d,%r14d
18fe(3): test %r14d,%r14d
1901(2): jz 0x36(%rip)
1903(5): mov 0x30(%rsp),%rax
1908(3): mov (%rax),%rdi
190b(5): call 0x3635(%rip)
1910(7): lea 0x7239(%rip),%rsi
1917(3): mov %rax,%rbx
191a(5): mov $0x5,%edx
191f(2): xor %edi,%edi
1921(5): call 0xfffffbcf(%rip)
1926(3): mov %rbx,%rcx
1929(3): mov %rax,%rdx
192c(2): xor %esi,%esi
192e(2): xor %edi,%edi
1930(2): xor %eax,%eax
1932(5): call 0xfffffd7e(%rip)
1937(7): mov 0x20a772(%rip),%r12d
193e(8): mov 0x178(%rsp),%rsi
1946(9): xor $0x28,%rsi
194f(3): mov %r12d,%eax
1952(6): jnz 0xba3(%rip)
1958(7): add $0x188,%rsp
195f(1): pop %rbx
1960(1): pop %rbp
1961(2): pop %r12
1963(2): pop %r13
1965(2): pop %r14
1967(2): pop %r15
1969(1): ret near (%rsp)
196a(6): nop 0x0(%rax,%rax,1)
1970(5): movzx 0x1(%r14),%r12d
1975(4): lea 0x1(%r14),%rbx
1979(4): lea 0x2(%r14),%rbp
197d(4): cmp $0x25,%r12b
1981(2): jz 0x57(%rip)
1983(4): cmp $0x62,%r12b
1987(2): jz 0x79(%rip)
1989(4): cmp $0x71,%r12b
198d(6): jnz 0xfb(%rip)
1993(3): test %r15d,%r15d
1996(3): mov %rbp,%r14
1999(6): jz 0xfffffef3(%rip)
199f(4): mov (%rsp),%r12
19a3(7): mov 0x20a6de(%rip),%rbp
19aa(5): mov $0x3,%edi
19af(4): sub $0x1,%r15d
19b3(4): mov (%r12),%rsi
19b7(4): add $0x8,%r12
19bb(5): call 0x32b5(%rip)
19c0(3): mov %rbp,%rsi
19c3(3): mov %rax,%rdi
19c6(5): call 0xfffffbfa(%rip)
19cb(4): mov %r12,(%rsp)
19cf(5): jmp 0xfffffebd(%rip)
19d4(4): nop 0x0(%rax)
19d8(7): mov 0x20a6a9(%rip),%rdi
19df(4): mov 0x28(%rdi),%rax
19e3(4): cmp 0x30(%rdi),%rax
19e7(6): jnb 0x45c(%rip)
19ed(4): lea 0x1(%rax),%rdx
19f1(3): mov %rbp,%r14
19f4(4): mov %rdx,0x28(%rdi)
19f8(3): mov $0x25,(%rax)
19fb(5): jmp 0xfffffe91(%rip)
1a00(3): test %r15d,%r15d
1a03(3): mov %rbp,%r14
1a06(6): jz 0xfffffe86(%rip)
1a0c(4): mov (%rsp),%rax
1a10(3): mov (%rax),%r12
1a13(5): movzx (%r12),%eax
1a18(2): test %al,%al
1a1a(2): jnz 0x34(%rip)
1a1c(2): jmp 0x54(%rip)
1a1e(2): nop 
1a20(7): mov 0x20a661(%rip),%rdi
1a27(4): mov 0x28(%rdi),%rdx
1a2b(4): cmp 0x30(%rdi),%rdx
1a2f(6): jnb 0x404(%rip)
1a35(4): lea 0x1(%rdx),%rcx
1a39(4): mov %rcx,0x28(%rdi)
1a3d(2): mov %al,(%rdx)
1a3f(3): mov %r12,%rax
1a42(4): lea 0x1(%rax),%r12
1a46(4): movzx 0x1(%rax),%eax
1a4a(2): test %al,%al
1a4c(2): jz 0x24(%rip)
1a4e(2): cmp $0x5c,%al
1a50(2): jnz 0xffffffd0(%rip)
1a52(3): mov %r12,%rdi
1a55(5): mov $0x1,%esi
1a5a(5): call 0xbc6(%rip)
1a5f(2): cwde 
1a61(3): add %r12,%rax
1a64(4): lea 0x1(%rax),%r12
1a68(4): movzx 0x1(%rax),%eax
1a6c(2): test %al,%al
1a6e(2): jnz 0xffffffe0(%rip)
1a70(5): add $0x8,(%rsp)
1a75(4): sub $0x1,%r15d
1a79(3): mov %rbp,%r14
1a7c(5): jmp 0xfffffe10(%rip)
1a81(7): nop 0x0(%rax)
1a88(5): lea 0x70(%rsp),%rdx
1a8d(6): mov $0x101,%r11d
1a93(5): mov $0x20,%ecx
1a98(2): xor %eax,%eax
1a9a(3): xor %r8d,%r8d
1a9d(5): mov $0x0,0x8(%rsp)
1aa2(3): mov %rdx,%rdi
1aa5(5): mov $0x0,0x10(%rsp)
1aaa(5): mov $0x1,%ebp
1aaf(3): REP stosd %rax,rdi(%es,10)
1ab2(3): xor %r9d,%r9d
1ab5(9): mov %r11w,0xb5(%rsp)
1abe(8): mov $0x1,0xc8(%rsp)
1ac6(8): mov $0x1,0xe8(%rsp)
1ace(8): mov $0x1,0xe5(%rsp)
1ad6(2): xor %edx,%edx
1ad8(8): mov $0x1,0xe3(%rsp)
1ae0(8): mov $0x1,0xdf(%rsp)
1ae8(5): mov $0x1,%edi
1aed(8): mov $0x1,0xd9(%rsp)
1af5(8): mov $0x1,0xb7(%rsp)
1afd(3): xor %r10d,%r10d
1b00(b): mov $0x1010101,0xd3(%rsp)
1b0b(8): mov $0x1,0xd7(%rsp)
1b13(6): mov $0x1,%r11d
1b19(8): mov $0x1,0xb1(%rsp)
1b21(8): mov $0x1,0xd1(%rsp)
1b29(5): mov %r15d,0x20(%rsp)
1b2e(5): lea 0xffffffe0(%r12),%eax
1b33(3): mov %rbx,%rcx
1b36(3): mov %rbx,%rsi
1b39(3): sub %r14,%rcx
1b3c(2): cmp $0x29,%al
1b3e(6): jnbe 0x92(%rip)
1b44(7): lea 0x71f5(%rip),%r15
1b4b(3): movzx %al,%eax
1b4e(4): movsxd 0x0(%r15,%rax,4),%rax
1b52(3): add %r15,%rax
1b55(2): jmp %rax
1b57(9): nop 0x0(%rax,%rax,1)
1b60(6): mov $0x1,%r9d
1b66(5): mov $0x1,%edx
1b6b(2): xor %edi,%edi
1b6d(6): mov $0x1,%r10d
1b73(3): xor %r11d,%r11d
1b76(4): add $0x1,%rbx
1b7a(4): movzx (%rbx),%r12d
1b7e(2): jmp 0xffffffb0(%rip)
1b80(4): add $0x1,%rbx
1b84(6): mov $0x1,%r8d
1b8a(5): mov $0x1,0x8(%rsp)
1b8f(5): mov $0x1,0x10(%rsp)
1b94(2): xor %ebp,%ebp
1b96(6): mov $0x1,%r9d
1b9c(5): mov $0x1,%edx
1ba1(2): xor %edi,%edi
1ba3(4): movzx (%rbx),%r12d
1ba7(2): jmp 0xffffff87(%rip)
1ba9(7): nop 0x0(%rax)
1bb0(4): add $0x1,%rbx
1bb4(6): mov $0x1,%r9d
1bba(5): mov $0x1,%edx
1bbf(2): xor %edi,%edi
1bc1(4): movzx (%rbx),%r12d
1bc5(5): jmp 0xffffff69(%rip)
1bca(6): nop 0x0(%rax,%rax,1)
1bd0(3): test %r10b,%r10b
1bd3(5): mov 0x20(%rsp),%r15d
1bd8(6): jnz 0x32c(%rip)
1bde(2): test %dl,%dl
1be0(6): jnz 0x355(%rip)
1be6(3): test %r9b,%r9b
1be9(6): jnz 0x893(%rip)
1bef(3): test %r10b,%r10b
1bf2(2): jz 0x12(%rip)
1bf4(8): mov %r11b,0xb1(%rsp)
1bfc(8): mov %r11b,0xd1(%rsp)
1c04(5): cmp $0x0,0x10(%rsp)
1c09(2): jz 0xa(%rip)
1c0b(8): mov %bpl,0xe5(%rsp)
1c13(5): cmp $0x0,0x8(%rsp)
1c18(2): jz 0xa(%rip)
1c1a(8): mov %bpl,0xd9(%rsp)
1c22(3): test %r8b,%r8b
1c25(2): jz 0xa(%rip)
1c27(8): mov %bpl,0xd4(%rsp)
1c2f(4): cmp $0x2a,%r12b
1c33(4): lea 0x1(%rbx),%rbp
1c37(6): jz 0x4f9(%rip)
1c3d(4): movsx %r12b,%eax
1c41(3): sub $0x30,%eax
1c44(3): cmp $0x9,%eax
1c47(2): jbe 0x10(%rip)
1c49(5): jmp 0x71e(%rip)
1c4e(2): nop 
1c50(3): mov %rbp,%rbx
1c53(4): add $0x1,%rbp
1c57(4): movsx 0x0(%rbp),%eax
1c5b(5): lea 0x0(%rbp,%rcx,1),%rdx
1c60(3): sub %rsi,%rdx
1c63(3): mov %eax,%r12d
1c66(3): sub $0x30,%eax
1c69(3): cmp $0x9,%eax
1c6c(2): jbe 0xffffffe4(%rip)
1c6e(4): lea 0x2(%rbx),%rax
1c72(5): mov $0x0,0x56(%rsp)
1c77(3): mov %rbp,%rbx
1c7a(5): mov %rax,0x8(%rsp)
1c7f(4): cmp $0x2e,%r12b
1c83(6): jnz 0x49d(%rip)
1c89(5): movzx 0x1(%rbx),%r12d
1c8e(8): mov $0x0,0xd3(%rsp)
1c96(4): cmp $0x2a,%r12b
1c9a(6): jz 0x4d2(%rip)
1ca0(4): movsx %r12b,%eax
1ca4(4): add $0x1,%rdx
1ca8(5): mov 0x8(%rsp),%r9
1cad(3): sub $0x30,%eax
1cb0(3): cmp $0x9,%eax
1cb3(2): jbe 0x10(%rip)
1cb5(5): jmp 0x77a(%rip)
1cba(6): nop 0x0(%rax,%rax,1)
1cc0(3): mov %rbx,%r9
1cc3(5): movsx 0x1(%r9),%eax
1cc8(4): add $0x1,%rdx
1ccc(4): lea 0x1(%r9),%rbx
1cd0(3): mov %eax,%r12d
1cd3(3): sub $0x30,%eax
1cd6(3): cmp $0x9,%eax
1cd9(2): jbe 0xffffffe7(%rip)
1cdb(3): mov %r9,%rax
1cde(5): mov $0x0,0x57(%rsp)
1ce3(4): add $0x2,%rax
1ce7(5): mov %rax,0x8(%rsp)
1cec(5): lea 0xffffffb4(%r12),%eax
1cf1(2): cmp $0x2e,%al
1cf3(2): jnbe 0x2f(%rip)
1cf5(4): bt %rax,%r13
1cf9(2): jnb 0x29(%rip)
1cfb(5): nop 0x0(%rax,%rax,1)
1d00(5): movzx 0x1(%rbx),%r12d
1d05(4): lea 0x1(%rbx),%rcx
1d09(5): lea 0xffffffb4(%r12),%eax
1d0e(2): cmp $0x2e,%al
1d10(6): jbe 0x3f8(%rip)
1d16(4): lea 0x2(%rbx),%rax
1d1a(3): mov %rcx,%rbx
1d1d(5): mov %rax,0x8(%rsp)
1d22(4): movzx %r12b,%eax
1d26(5): cmp $0x0,0x70(%rsp,%rax,1)
1d2b(6): jz 0x71f(%rip)
1d31(7): lea 0x77da(%rip),%rax
1d38(3): test %r15d,%r15d
1d3b(5): mov %rax,0x10(%rsp)
1d40(2): jz 0x1a(%rip)
1d42(4): mov (%rsp),%rax
1d46(4): sub $0x1,%r15d
1d4a(3): mov (%rax),%rsi
1d4d(4): add $0x8,%rax
1d51(4): mov %rax,(%rsp)
1d55(5): mov %rsi,0x10(%rsp)
1d5a(5): lea 0xffffffbf(%r12),%ecx
1d5f(3): cmp $0x37,%cl
1d62(6): jnbe 0x3fe(%rip)
1d68(7): lea 0x6ee9(%rip),%rsi
1d6f(5): mov $0x1,%eax
1d74(3): shl/sal %cl,%rax
1d77(5): mov $0x1,%ecx
1d7c(5): mov %rsi,0x20(%rsp)
1d81(a): mov $0x40603899270266880,%rsi
1d8b(3): test %rsi,%rax
1d8e(2): jnz 0x2d(%rip)
1d90(a): mov $0x485331304561,%rcx
1d9a(3): and %rcx,%rax
1d9d(4): cmp $0x1,%rax
1da1(3): sbb %rcx,%rcx
1da4(4): add $0x1,%rcx
1da8(3): test %rax,%rax
1dab(7): lea 0x6ea9(%rip),%rax
1db2(4): cmove %r14,%rax
1db6(5): mov %rax,0x20(%rsp)
1dbb(5): lea 0x2(%rdx,%rcx,1),%rdi
1dc0(5): mov %rcx,0x40(%rsp)
1dc5(5): mov %rdx,0x38(%rsp)
1dca(5): call 0x3ba6(%rip)
1dcf(5): mov 0x38(%rsp),%rdx
1dd4(3): mov %r14,%rsi
1dd7(3): mov %rax,%rdi
1dda(3): mov %rax,%rbp
1ddd(5): call 0xfffff8b3(%rip)
1de2(5): mov 0x40(%rsp),%rcx
1de7(5): mov 0x20(%rsp),%rsi
1dec(3): mov %rax,%rdi
1def(3): mov %rcx,%rdx
1df2(5): call 0xfffff89e(%rip)
1df7(3): mov %r12b,(%rax)
1dfa(4): sub $0x41,%r12d
1dfe(4): mov $0x0,0x1(%rax)
1e02(4): cmp $0x37,%r12b
1e06(6): jnbe 0x172(%rip)
1e0c(7): lea 0x6fd5(%rip),%rdx
1e13(4): movzx %r12b,%r12d
1e17(4): movsxd 0x0(%rdx,%r12,4),%rax
1e1b(3): add %rdx,%rax
1e1e(2): jmp %rax
1e20(3): movzx %al,%esi
1e23(3): mov %r14,%rbx
1e26(3): mov %rbp,%r14
1e29(5): call 0xfffff737(%rip)
1e2e(5): jmp 0xfffffa5e(%rip)
1e33(3): movzx %al,%esi
1e36(5): call 0xfffff72a(%rip)
1e3b(3): mov %r12,%rax
1e3e(5): jmp 0xfffffc04(%rip)
1e43(5): mov $0x25,%esi
1e48(3): mov %rbp,%r14
1e4b(5): call 0xfffff715(%rip)
1e50(5): jmp 0xfffffa3c(%rip)
1e55(4): mov 0x8(%rbx),%r13
1e59(7): lea 0x6e25(%rip),%rsi
1e60(3): mov %r13,%rdi
1e63(5): call 0xfffff77d(%rip)
1e68(2): test %eax,%eax
1e6a(6): jz 0x690(%rip)
1e70(7): lea 0x6e15(%rip),%rsi
1e77(3): mov %r13,%rdi
1e7a(5): call 0xfffff766(%rip)
1e7f(2): test %eax,%eax
1e81(3): mov %eax,%r12d
1e84(2): jz 0x4e(%rip)
1e86(7): lea 0x6e19(%rip),%rsi
1e8d(3): mov %r13,%rdi
1e90(5): call 0xfffff750(%rip)
1e95(2): test %eax,%eax
1e97(6): jnz 0xfffff983(%rip)
1e9d(7): lea 0x6e05(%rip),%rsi
1ea4(5): mov $0x5,%edx
1ea9(2): xor %edi,%edi
1eab(5): call 0xfffff645(%rip)
1eb0(2): xor %edi,%edi
1eb2(3): mov %rax,%rdx
1eb5(2): xor %esi,%esi
1eb7(2): xor %eax,%eax
1eb9(5): call 0xfffff7f7(%rip)
1ebe(5): mov $0x1,%edi
1ec3(5): call 0xddd(%rip)
1ec8(5): mov 0x48(%rsp),%r14d
1ecd(5): jmp 0xfffffa31(%rip)
1ed2(7): mov 0x20a137(%rip),%rcx
1ed9(7): mov 0x20a1a8(%rip),%rdi
1ee0(7): lea 0x6daf(%rip),%r8
1ee7(7): lea 0x6d3d(%rip),%rdx
1eee(7): lea 0x6cb9(%rip),%rsi
1ef5(3): xor %r9d,%r9d
1ef8(2): xor %eax,%eax
1efa(5): call 0x3916(%rip)
1eff(5): jmp 0xfffffa3f(%rip)
1f04(2): test %dl,%dl
1f06(8): mov %r11b,0xc8(%rsp)
1f0e(8): mov %r11b,0xe8(%rsp)
1f16(2): jnz 0x1f(%rip)
1f18(8): mov %r11b,0xdf(%rsp)
1f20(8): mov %r11b,0xb5(%rsp)
1f28(8): mov %r11b,0xd5(%rsp)
1f30(5): jmp 0xfffffcb6(%rip)
1f35(3): test %r10b,%r10b
1f38(8): mov %dil,0xe3(%rsp)
1f40(6): jz 0xfffffca6(%rip)
1f46(2): jmp 0xffffffd2(%rip)
1f48(8): nop 0x0(%rax,%rax,1)
1f50(5): cmp $0x0,0x56(%rsp)
1f55(6): jnz 0x3ca(%rip)
1f5b(5): cmp $0x0,0x57(%rsp)
1f60(6): jnz 0x426(%rip)
1f66(5): mov 0x10(%rsp),%rsi
1f6b(3): mov %rbp,%rdi
1f6e(2): xor %eax,%eax
1f70(5): call 0x3cf0(%rip)
1f75(3): nop (%rax)
1f78(3): mov %rbp,%rdi
1f7b(5): call 0xfffff4b5(%rip)
1f80(5): mov 0x8(%rsp),%r14
1f85(5): jmp 0xfffff907(%rip)
1f8a(5): mov 0x10(%rsp),%rdi
1f8f(5): call 0xc61(%rip)
1f94(5): cmp $0x0,0x56(%rsp)
1f99(6): jnz 0x3ad(%rip)
1f9f(5): cmp $0x0,0x57(%rsp)
1fa4(6): jnz 0x3fa(%rip)
1faa(3): mov %rax,%rsi
1fad(3): mov %rbp,%rdi
1fb0(2): xor %eax,%eax
1fb2(5): call 0x3cae(%rip)
1fb7(2): jmp 0xffffffc1(%rip)
1fb9(5): cmp $0x0,0x56(%rsp)
1fbe(5): mov 0x10(%rsp),%rax
1fc3(3): movsx (%rax),%edx
1fc6(6): jnz 0x346(%rip)
1fcc(2): mov %edx,%esi
1fce(3): mov %rbp,%rdi
1fd1(2): xor %eax,%eax
1fd3(5): call 0x3c8d(%rip)
1fd8(2): jmp 0xffffffa0(%rip)
1fda(5): mov 0x10(%rsp),%rax
1fdf(3): movzx (%rax),%eax
1fe2(2): cmp $0x22,%al
1fe4(2): jz 0xa(%rip)
1fe6(2): cmp $0x27,%al
1fe8(6): jnz 0x240(%rip)
1fee(5): mov 0x10(%rsp),%rax
1ff3(5): movzx 0x1(%rax),%r12d
1ff8(3): test %r12b,%r12b
1ffb(6): jz 0x22d(%rip)
2001(4): cmp $0x0,0x2(%rax)
2005(2): jz 0x35(%rip)
2007(7): cmp $0x0,0x20a09e(%rip)
200e(2): jnz 0x2c(%rip)
2010(7): lea 0x6431(%rip),%rsi
2017(5): mov $0x5,%edx
201c(2): xor %edi,%edi
201e(5): call 0xfffff4d2(%rip)
2023(5): mov 0x10(%rsp),%rcx
2028(3): mov %rax,%rdx
202b(2): xor %esi,%esi
202d(2): xor %edi,%edi
202f(2): xor %eax,%eax
2031(4): add $0x2,%rcx
2035(5): call 0xfffff67b(%rip)
203a(5): cmp $0x0,0x56(%rsp)
203f(6): jnz 0x225(%rip)
2045(5): cmp $0x0,0x57(%rsp)
204a(6): jnz 0x36a(%rip)
2050(3): mov %r12,%rsi
2053(3): mov %rbp,%rdi
2056(2): xor %eax,%eax
2058(5): call 0x3c08(%rip)
205d(5): jmp 0xffffff1b(%rip)
2062(5): mov 0x10(%rsp),%rax
2067(3): movzx (%rax),%eax
206a(2): cmp $0x22,%al
206c(2): jz 0xa(%rip)
206e(2): cmp $0x27,%al
2070(6): jnz 0x215(%rip)
2076(5): mov 0x10(%rsp),%rsi
207b(4): movzx 0x1(%rsi),%eax
207f(2): test %al,%al
2081(6): jz 0x204(%rip)
2087(4): cmp $0x0,0x2(%rsi)
208b(5): mov %ax,0x20(%rsp)
2090(4): fild 0x20(%rsp),%st0
2094(2): jz 0x3d(%rip)
2096(7): cmp $0x0,0x20a00f(%rip)
209d(2): jnz 0x34(%rip)
209f(4): fstp %st0,0x20(%rsp)
20a3(7): lea 0x639e(%rip),%rsi
20aa(5): mov $0x5,%edx
20af(2): xor %edi,%edi
20b1(5): call 0xfffff43f(%rip)
20b6(5): mov 0x10(%rsp),%rcx
20bb(3): mov %rax,%rdx
20be(2): xor %esi,%esi
20c0(2): xor %edi,%edi
20c2(2): xor %eax,%eax
20c4(4): add $0x2,%rcx
20c8(5): call 0xfffff5e8(%rip)
20cd(4): fld 0x20(%rsp),%st0
20d1(5): cmp $0x0,0x56(%rsp)
20d6(6): jnz 0x1ec(%rip)
20dc(5): cmp $0x0,0x57(%rsp)
20e1(6): jnz 0x309(%rip)
20e7(4): sub $0x10,%rsp
20eb(3): mov %rbp,%rdi
20ee(2): xor %eax,%eax
20f0(3): fstp %st0,(%rsp)
20f3(5): call 0x3b6d(%rip)
20f8(2): pop %r9
20fa(2): pop %r10
20fc(5): jmp 0xfffffe7c(%rip)
2101(7): nop 0x0(%rax)
2108(4): bt %rax,%r13
210c(6): jnb 0xfffffc0a(%rip)
2112(3): mov %rcx,%rbx
2115(5): jmp 0xfffffbeb(%rip)
211a(6): nop 0x0(%rax,%rax,1)
2120(5): mov $0x0,0x57(%rsp)
2125(5): jmp 0xfffffbc7(%rip)
212a(6): nop 0x0(%rax,%rax,1)
2130(3): test %r15d,%r15d
2133(4): lea 0x1(%rcx),%rdx
2137(6): jnz 0x99(%rip)
213d(4): lea 0x2(%rbx),%rax
2141(5): movzx 0x1(%rbx),%r12d
2146(8): mov $0x0,0x4c(%rsp)
214e(3): mov %rbp,%rbx
2151(5): mov $0x1,0x56(%rsp)
2156(5): mov %rax,0x8(%rsp)
215b(5): jmp 0xfffffb24(%rip)
2160(5): mov %r14,0x20(%rsp)
2165(2): xor %ecx,%ecx
2167(5): jmp 0xfffffc54(%rip)
216c(4): add $0x2,%rdx
2170(3): test %r15d,%r15d
2173(4): lea 0x2(%rbx),%rbp
2177(6): jz 0x172(%rip)
217d(4): mov (%rsp),%rax
2181(5): mov %rdx,0x8(%rsp)
2186(3): mov (%rax),%rdi
2189(5): call 0xa67(%rip)
218e(3): test %rax,%rax
2191(5): mov 0x8(%rsp),%rdx
2196(6): js 0x1e3(%rip)
219c(6): cmp $0x7fffffff,%rax
21a2(6): jnle 0x2e7(%rip)
21a8(4): mov %eax,0x50(%rsp)
21ac(4): lea 0x3(%rbx),%rax
21b0(5): movzx 0x2(%rbx),%r12d
21b5(5): add $0x8,(%rsp)
21ba(4): sub $0x1,%r15d
21be(3): mov %rbp,%rbx
21c1(5): mov $0x1,0x57(%rsp)
21c6(5): mov %rax,0x8(%rsp)
21cb(5): jmp 0xfffffb21(%rip)
21d0(4): mov (%rsp),%r12
21d4(5): mov %rdx,0x10(%rsp)
21d9(4): mov (%r12),%rdi
21dd(5): call 0xa13(%rip)
21e2(5): mov $0x80000000,%ecx
21e7(5): mov $0xffffffff,%esi
21ec(3): add %rax,%rcx
21ef(3): cmp %rsi,%rcx
21f2(6): jnbe 0x2cd(%rip)
21f8(4): mov %eax,0x4c(%rsp)
21fc(4): lea 0x2(%rbx),%rax
2200(4): add $0x8,%r12
2204(4): mov %r12,(%rsp)
2208(4): sub $0x1,%r15d
220c(5): movzx 0x1(%rbx),%r12d
2211(5): mov %rax,0x8(%rsp)
2216(3): mov %rbp,%rbx
2219(5): mov $0x1,0x56(%rsp)
221e(5): mov 0x10(%rsp),%rdx
2223(5): jmp 0xfffffa5c(%rip)
2228(5): call 0xfffff228(%rip)
222d(5): mov 0x10(%rsp),%r14
2232(5): lea 0x68(%rsp),%rsi
2237(2): xor %ecx,%ecx
2239(2): xor %edx,%edx
223b(6): mov $0x0,(%rax)
2241(3): mov %r14,%rdi
2244(5): call 0xfffff34c(%rip)
2249(5): mov 0x68(%rsp),%rsi
224e(3): mov %r14,%rdi
2251(3): mov %rax,%r12
2254(5): call 0x8ec(%rip)
2259(5): cmp $0x0,0x56(%rsp)
225e(6): jz 0xfffffde7(%rip)
2264(5): cmp $0x0,0x57(%rsp)
2269(6): jnz 0x1a6(%rip)
226f(4): mov 0x4c(%rsp),%esi
2273(3): mov %r12,%rdx
2276(3): mov %rbp,%rdi
2279(2): xor %eax,%eax
227b(5): call 0x39e5(%rip)
2280(5): jmp 0xfffffcf8(%rip)
2285(5): call 0xfffff1cb(%rip)
228a(5): mov 0x10(%rsp),%r14
228f(5): lea 0x68(%rsp),%rsi
2294(6): mov $0x0,(%rax)
229a(3): mov %r14,%rdi
229d(5): call 0xe13(%rip)
22a2(4): fstp %st0,0x10(%rsp)
22a6(5): mov 0x68(%rsp),%rsi
22ab(3): mov %r14,%rdi
22ae(5): call 0x892(%rip)
22b3(5): cmp $0x0,0x56(%rsp)
22b8(4): fld 0x10(%rsp),%st0
22bc(6): jz 0xfffffe20(%rip)
22c2(5): cmp $0x0,0x57(%rsp)
22c7(6): jnz 0x103(%rip)
22cd(4): sub $0x10,%rsp
22d1(3): mov %rbp,%rdi
22d4(2): xor %eax,%eax
22d6(4): mov 0x5c(%rsp),%esi
22da(3): fstp %st0,(%rsp)
22dd(5): call 0x3983(%rip)
22e2(1): pop %rcx
22e3(1): pop %rsi
22e4(5): jmp 0xfffffc94(%rip)
22e9(4): lea 0x3(%rbx),%rax
22ed(5): movzx 0x2(%rbx),%r12d
22f2(8): mov $0x0,0x50(%rsp)
22fa(3): mov %rbp,%rbx
22fd(5): mov $0x1,0x57(%rsp)
2302(5): mov %rax,0x8(%rsp)
2307(5): jmp 0xfffff9e5(%rip)
230c(4): mov 0x4c(%rsp),%esi
2310(3): mov %rbp,%rdi
2313(2): xor %eax,%eax
2315(5): call 0x394b(%rip)
231a(5): jmp 0xfffffc5e(%rip)
231f(5): cmp $0x0,0x57(%rsp)
2324(6): jz 0xf3(%rip)
232a(5): mov 0x10(%rsp),%rcx
232f(4): mov 0x50(%rsp),%edx
2333(4): mov 0x4c(%rsp),%esi
2337(3): mov %rbp,%rdi
233a(2): xor %eax,%eax
233c(5): call 0x3924(%rip)
2341(5): jmp 0xfffffc37(%rip)
2346(5): cmp $0x0,0x57(%rsp)
234b(6): jnz 0xbc(%rip)
2351(4): mov 0x4c(%rsp),%esi
2355(3): mov %rax,%rdx
2358(3): mov %rbp,%rdi
235b(2): xor %eax,%eax
235d(5): call 0x3903(%rip)
2362(5): jmp 0xfffffc16(%rip)
2367(5): mov %rbp,0x8(%rsp)
236c(3): mov %rcx,%rdx
236f(5): mov $0x0,0x56(%rsp)
2374(5): jmp 0xfffff90b(%rip)
2379(8): mov $0xffffffff,0x50(%rsp)
2381(5): jmp 0xfffffe2b(%rip)
2386(5): mov 0x10(%rsp),%rdx
238b(4): mov 0x50(%rsp),%esi
238f(3): mov %rbp,%rdi
2392(2): xor %eax,%eax
2394(5): call 0x38cc(%rip)
2399(5): jmp 0xfffffbdf(%rip)
239e(4): mov 0x50(%rsp),%esi
23a2(3): mov %rax,%rdx
23a5(3): mov %rbp,%rdi
23a8(2): xor %eax,%eax
23aa(5): call 0x38b6(%rip)
23af(5): jmp 0xfffffbc9(%rip)
23b4(4): mov 0x50(%rsp),%esi
23b8(3): mov %r12,%rdx
23bb(3): mov %rbp,%rdi
23be(2): xor %eax,%eax
23c0(5): call 0x38a0(%rip)
23c5(5): jmp 0xfffffbb3(%rip)
23ca(4): sub $0x10,%rsp
23ce(3): mov %rbp,%rdi
23d1(2): xor %eax,%eax
23d3(4): mov 0x60(%rsp),%edx
23d7(4): mov 0x5c(%rsp),%esi
23db(3): fstp %st0,(%rsp)
23de(5): call 0x3882(%rip)
23e3(1): pop %rax
23e4(1): pop %rdx
23e5(5): jmp 0xfffffb93(%rip)
23ea(4): sub $0x10,%rsp
23ee(3): mov %rbp,%rdi
23f1(2): xor %eax,%eax
23f3(4): mov 0x60(%rsp),%esi
23f7(3): fstp %st0,(%rsp)
23fa(5): call 0x3866(%rip)
23ff(1): pop %rdi
2400(2): pop %r8
2402(5): jmp 0xfffffb76(%rip)
2407(3): mov %rax,%rcx
240a(5): jmp 0xffffff25(%rip)
240f(3): mov %r12,%rcx
2412(5): jmp 0xffffff1d(%rip)
2417(5): mov 0x10(%rsp),%rdx
241c(4): mov 0x4c(%rsp),%esi
2420(3): mov %rbp,%rdi
2423(2): xor %eax,%eax
2425(5): call 0x383b(%rip)
242a(5): jmp 0xfffffb4e(%rip)
242f(5): mov 0x8(%rsp),%rax
2434(5): mov $0x0,0x57(%rsp)
2439(3): mov %rax,%rbx
243c(4): add $0x1,%rax
2440(5): mov %rax,0x8(%rsp)
2445(5): jmp 0xfffff8a7(%rip)
244a(5): mov 0x8(%rsp),%r12
244f(7): lea 0x66d2(%rip),%rsi
2456(5): mov $0x5,%edx
245b(2): xor %edi,%edi
245d(5): call 0xfffff093(%rip)
2462(3): mov %r12,%rcx
2465(3): mov %rax,%rdx
2468(3): mov %r14,%r8
246b(3): sub %r14,%rcx
246e(2): xor %esi,%esi
2470(5): mov $0x1,%edi
2475(2): xor %eax,%eax
2477(5): call 0xfffff239(%rip)
247c(8): mov %dil,0xd3(%rsp)
2484(5): jmp 0xfffff76b(%rip)
2489(4): mov (%rsp),%rax
248d(3): mov (%rax),%rdi
2490(5): call 0x2ab0(%rip)
2495(7): lea 0x6835(%rip),%rsi
249c(3): mov %rax,%rbx
249f(5): mov $0x5,%edx
24a4(2): xor %edi,%edi
24a6(5): call 0xfffff04a(%rip)
24ab(3): mov %rbx,%rcx
24ae(3): mov %rax,%rdx
24b1(2): xor %esi,%esi
24b3(5): mov $0x1,%edi
24b8(2): xor %eax,%eax
24ba(5): call 0xfffff1f6(%rip)
24bf(4): mov (%rsp),%rax
24c3(3): mov (%rax),%rdi
24c6(5): call 0x2a7a(%rip)
24cb(7): lea 0x67e7(%rip),%rsi
24d2(3): mov %rax,%rbx
24d5(5): mov $0x5,%edx
24da(2): xor %edi,%edi
24dc(5): call 0xfffff014(%rip)
24e1(3): mov %rbx,%rcx
24e4(3): mov %rax,%rdx
24e7(2): xor %esi,%esi
24e9(5): mov $0x1,%edi
24ee(2): xor %eax,%eax
24f0(5): call 0xfffff1c0(%rip)
24f5(5): call 0xfffff02b(%rip)
24fa(2): xor %edi,%edi
24fc(5): call 0x7a4(%rip)

"_start" :
2510(2): xor %ebp,%ebp
2512(3): mov %rdx,%r9
2515(1): pop %rsi
2516(3): mov %rsp,%rdx
2519(4): and $0xfffffff0,%rsp
251d(1): push %rax
251e(1): push %rsp
251f(7): lea 0x5e5a(%rip),%r8
2526(7): lea 0x5de3(%rip),%rcx
252d(7): lea 0xfffff22c(%rip),%rdi
2534(6): call 0x209a8e(%rip)
253a(1): hlt 

"deregister_tm_clones" :
2540(7): lea 0x209b39(%rip),%rdi
2547(1): push %rbp
2548(7): lea 0x209b31(%rip),%rax
254f(3): cmp %rdi,%rax
2552(3): mov %rsp,%rbp
2555(2): jz 0x1b(%rip)
2557(7): mov 0x209a62(%rip),%rax
255e(3): test %rax,%rax
2561(2): jz 0xf(%rip)
2563(1): pop %rbp
2564(2): jmp %rax
2566(a): nop 0x0(%rax,%rax,1)
2570(1): pop %rbp
2571(1): ret near (%rsp)

"register_tm_clones" :
2580(7): lea 0x209af9(%rip),%rdi
2587(7): lea 0x209af2(%rip),%rsi
258e(1): push %rbp
258f(3): sub %rdi,%rsi
2592(3): mov %rsp,%rbp
2595(4): sar $0x3,%rsi
2599(3): mov %rsi,%rax
259c(4): shr $0x3f,%rax
25a0(3): add %rax,%rsi
25a3(3): sar $0x1,%rsi
25a6(2): jz 0x1a(%rip)
25a8(7): mov 0x209a29(%rip),%rax
25af(3): test %rax,%rax
25b2(2): jz 0xe(%rip)
25b4(1): pop %rbp
25b5(2): jmp %rax
25b7(9): nop 0x0(%rax,%rax,1)
25c0(1): pop %rbp
25c1(1): ret near (%rsp)

"__do_global_dtors_aux" :
25d0(7): cmp $0x0,0x209ad1(%rip)
25d7(2): jnz 0x31(%rip)
25d9(8): cmp $0x0,0x2099ff(%rip)
25e1(1): push %rbp
25e2(3): mov %rsp,%rbp
25e5(2): jz 0xe(%rip)
25e7(7): mov 0x209a1a(%rip),%rdi
25ee(5): call 0xfffff162(%rip)
25f3(5): call 0xffffff4d(%rip)
25f8(7): mov $0x1,0x209aa9(%rip)
25ff(1): pop %rbp
2600(1): ret near (%rsp)
2601(7): nop 0x0(%rax)
2608(2): REP ret near (%rsp)

"frame_dummy" :
2610(1): push %rbp
2611(3): mov %rsp,%rbp
2614(1): pop %rbp
2615(5): jmp 0xffffff6b(%rip)

"print_esc" :
2620(2): push %r13
2622(2): push %r12
2624(3): mov %rdi,%r12
2627(1): push %rbp
2628(1): push %rbx
2629(4): sub $0x18,%rsp
262d(5): movzx 0x1(%rdi),%r13d
2632(4): cmp $0x78,%r13b
2636(6): jz 0xda(%rip)
263c(4): lea 0xffffffd0(%r13),%eax
2640(4): lea 0x1(%rdi),%rbx
2644(2): cmp $0x7,%al
2646(2): jnbe 0x6a(%rip)
2648(2): xor %eax,%eax
264a(4): cmp $0x30,%r13b
264e(3): setz %al
2651(2): xor %edx,%edx
2653(3): and %rax,%rsi
2656(3): add %rbx,%rsi
2659(4): lea 0x3(%rsi),%rbx
265d(3): movsx (%rsi),%eax
2660(3): lea 0xffffffd0(%rax),%ecx
2663(3): cmp $0x7,%cl
2666(6): jnbe 0x24a(%rip)
266c(4): add $0x1,%rsi
2670(4): lea 0xffffffd0(%rax,%rdx,8),%edx
2674(3): cmp %rbx,%rsi
2677(2): jnz 0xffffffe6(%rip)
2679(7): mov 0x209a08(%rip),%rdi
2680(4): mov 0x28(%rdi),%rax
2684(4): cmp 0x30(%rdi),%rax
2688(6): jnb 0x3a8(%rip)
268e(4): lea 0x1(%rax),%rcx
2692(4): mov %rcx,0x28(%rdi)
2696(2): mov %dl,(%rax)
2698(4): add $0x18,%rsp
269c(3): sub %r12,%rbx
269f(3): lea 0xffffffff(%rbx),%eax
26a2(1): pop %rbx
26a3(1): pop %rbp
26a4(2): pop %r12
26a6(2): pop %r13
26a8(1): ret near (%rsp)
26a9(7): nop 0x0(%rax)
26b0(3): test %r13b,%r13b
26b3(6): jnz 0xe5(%rip)
26b9(7): mov 0x2099c8(%rip),%rdi
26c0(4): mov 0x28(%rdi),%rax
26c4(4): cmp 0x30(%rdi),%rax
26c8(6): jnb 0x375(%rip)
26ce(4): lea 0x1(%rax),%rdx
26d2(4): mov %rdx,0x28(%rdi)
26d6(3): mov $0x5c,(%rax)
26d9(6): movzx 0x1(%r12),%eax
26df(2): test %al,%al
26e1(2): jz 0xffffffb7(%rip)
26e3(7): mov 0x20999e(%rip),%rdi
26ea(4): mov 0x28(%rdi),%rdx
26ee(4): cmp 0x30(%rdi),%rdx
26f2(6): jnb 0x35a(%rip)
26f8(4): lea 0x1(%rdx),%rcx
26fc(4): mov %rcx,0x28(%rdi)
2700(2): mov %al,(%rdx)
2702(5): lea 0x2(%r12),%rbx
2707(2): jmp 0xffffff91(%rip)
2709(7): nop 0x0(%rax)
2710(4): lea 0x2(%rdi),%rbp
2714(5): lea 0x4(%r12),%rbx
2719(5): call 0xfffff017(%rip)
271e(3): mov (%rax),%r8
2721(3): mov %rbp,%rdi
2724(2): xor %esi,%esi
2726(3): mov %ebp,%r10d
2729(3): movsx (%rdi),%edx
272c(3): movzx %dl,%ecx
272f(2): mov %edx,%eax
2731(6): test $0x10,0x1(%r8,%rcx,2)
2737(6): jz 0x2d9(%rip)
273d(3): lea 0xffffff9f(%rax),%ecx
2740(3): shl/sal $0x4,%esi
2743(3): cmp $0x5,%cl
2746(2): jnbe 0x3a(%rip)
2748(3): sub $0x57,%edx
274b(4): add $0x1,%rdi
274f(2): add %edx,%esi
2751(3): cmp %rbx,%rdi
2754(2): jnz 0xffffffd5(%rip)
2756(7): mov 0x20992b(%rip),%rdi
275d(4): mov 0x28(%rdi),%rax
2761(4): cmp 0x30(%rdi),%rax
2765(6): jnb 0x2bb(%rip)
276b(4): lea 0x1(%rax),%rdx
276f(4): mov %rdx,0x28(%rdi)
2773(3): mov %sil,(%rax)
2776(5): jmp 0xffffff22(%rip)
277b(5): nop 0x0(%rax,%rax,1)
2780(4): lea 0xffffffc9(%rdx),%r9d
2784(3): lea 0xffffffd0(%rdx),%ecx
2787(3): sub $0x41,%eax
278a(2): cmp $0x5,%al
278c(3): mov %r9d,%edx
278f(3): cmovnbe %ecx,%edx
2792(2): jmp 0xffffffb9(%rip)
2794(4): nop 0x0(%rax)
2798(4): movsx %r13b,%ebp
279c(7): lea 0x63e2(%rip),%rdi
27a3(2): mov %ebp,%esi
27a5(5): call 0xffffed9b(%rip)
27aa(3): test %rax,%rax
27ad(2): jz 0x2b(%rip)
27af(4): lea 0xffffff9f(%r13),%eax
27b3(5): lea 0x2(%r12),%rbx
27b8(2): cmp $0x15,%al
27ba(6): jnbe 0x22d(%rip)
27c0(7): lea 0x6521(%rip),%rdx
27c7(3): movzx %al,%eax
27ca(4): movsxd 0x0(%rdx,%rax,4),%rax
27ce(3): add %rdx,%rax
27d1(2): jmp %rax
27d3(5): nop 0x0(%rax,%rax,1)
27d8(3): mov %r13d,%eax
27db(3): and $0xdf,%eax
27de(2): cmp $0x55,%al
27e0(6): jnz 0xfffffed9(%rip)
27e6(4): cmp $0x75,%r13b
27ea(5): lea 0x2(%r12),%rbx
27ef(4): setnz %r13b
27f3(4): movzx %r13b,%r13d
27f7(8): lea 0x4(,%r13,4),%r13d
27ff(5): call 0xffffef31(%rip)
2804(3): mov (%rax),%rsi
2807(4): lea 0xffffffff(%r13),%eax
280b(3): xor %r9d,%r9d
280e(5): lea 0x1(%rbx,%rax,1),%rdi
2813(2): jmp 0x14(%rip)
2815(3): nop (%rax)
2818(3): sub $0x57,%edx
281b(4): add $0x1,%rbx
281f(3): add %edx,%r9d
2822(3): cmp %rdi,%rbx
2825(2): jz 0x3f(%rip)
2827(3): movsx (%rbx),%edx
282a(3): movzx %dl,%ecx
282d(2): mov %edx,%eax
282f(5): test $0x10,0x1(%rsi,%rcx,2)
2834(6): jz 0x234(%rip)
283a(3): lea 0xffffff9f(%rdx),%ecx
283d(4): shl/sal $0x4,%r9d
2841(3): cmp $0x5,%cl
2844(2): jbe 0xffffffd4(%rip)
2846(4): lea 0xffffffc9(%rdx),%r8d
284a(3): lea 0xffffffd0(%rdx),%ecx
284d(3): sub $0x41,%eax
2850(2): cmp $0x5,%al
2852(3): mov %r8d,%edx
2855(3): cmovnbe %ecx,%edx
2858(4): add $0x1,%rbx
285c(3): add %edx,%r9d
285f(3): cmp %rdi,%rbx
2862(2): jnz 0xffffffc5(%rip)
2864(7): cmp $0x9f,%r9d
286b(2): jnbe 0x17(%rip)
286d(4): cmp $0x24,%r9d
2871(2): jz 0x11(%rip)
2873(3): mov %r9d,%eax
2876(3): and $0xdf,%eax
2879(3): cmp $0x40,%eax
287c(6): jnz 0x287(%rip)
2882(7): lea 0xffff2800(%r9),%eax
2889(5): cmp $0x7ff,%eax
288e(6): jbe 0x275(%rip)
2894(7): mov 0x2097ed(%rip),%rdi
289b(2): xor %edx,%edx
289d(3): mov %r9d,%esi
28a0(5): call 0x29d0(%rip)
28a5(5): jmp 0xfffffdf3(%rip)
28aa(6): nop 0x0(%rax,%rax,1)
28b0(3): mov %rsi,%rbx
28b3(5): jmp 0xfffffdc6(%rip)
28b8(7): mov 0x2097c9(%rip),%rdi
28bf(4): mov 0x28(%rdi),%rax
28c3(4): cmp 0x30(%rdi),%rax
28c7(6): jnb 0x201(%rip)
28cd(4): lea 0x1(%rax),%rdx
28d1(4): mov %rdx,0x28(%rdi)
28d5(3): mov $0xb,(%rax)
28d8(5): jmp 0xfffffdc0(%rip)
28dd(7): mov 0x2097a4(%rip),%rdi
28e4(4): mov 0x28(%rdi),%rax
28e8(4): cmp 0x30(%rdi),%rax
28ec(6): jnb 0x1a0(%rip)
28f2(4): lea 0x1(%rax),%rdx
28f6(4): mov %rdx,0x28(%rdi)
28fa(3): mov $0x9,(%rax)
28fd(5): jmp 0xfffffd9b(%rip)
2902(7): mov 0x20977f(%rip),%rdi
2909(4): mov 0x28(%rdi),%rax
290d(4): cmp 0x30(%rdi),%rax
2911(6): jnb 0x1d5(%rip)
2917(4): lea 0x1(%rax),%rdx
291b(4): mov %rdx,0x28(%rdi)
291f(3): mov $0x1b,(%rax)
2922(5): jmp 0xfffffd76(%rip)
2927(7): mov 0x20975a(%rip),%rdi
292e(4): mov 0x28(%rdi),%rax
2932(4): cmp 0x30(%rdi),%rax
2936(6): jnb 0x174(%rip)
293c(4): lea 0x1(%rax),%rdx
2940(4): mov %rdx,0x28(%rdi)
2944(3): mov $0xa,(%rax)
2947(5): jmp 0xfffffd51(%rip)
294c(7): mov 0x209735(%rip),%rdi
2953(4): mov 0x28(%rdi),%rax
2957(4): cmp 0x30(%rdi),%rax
295b(6): jnb 0x17c(%rip)
2961(4): lea 0x1(%rax),%rdx
2965(4): mov %rdx,0x28(%rdi)
2969(3): mov $0x8,(%rax)
296c(5): jmp 0xfffffd2c(%rip)
2971(7): mov 0x209710(%rip),%rdi
2978(4): mov 0x28(%rdi),%rax
297c(4): cmp 0x30(%rdi),%rax
2980(6): jnb 0x11b(%rip)
2986(4): lea 0x1(%rax),%rdx
298a(4): mov %rdx,0x28(%rdi)
298e(3): mov $0xd,(%rax)
2991(5): jmp 0xfffffd07(%rip)
2996(2): xor %edi,%edi
2998(5): call 0xffffed48(%rip)
299d(7): mov 0x2096e4(%rip),%rdi
29a4(4): mov 0x28(%rdi),%rax
29a8(4): cmp 0x30(%rdi),%rax
29ac(6): jnb 0x10d(%rip)
29b2(4): lea 0x1(%rax),%rdx
29b6(4): mov %rdx,0x28(%rdi)
29ba(3): mov $0xc,(%rax)
29bd(5): jmp 0xfffffcdb(%rip)
29c2(7): mov 0x2096bf(%rip),%rdi
29c9(4): mov 0x28(%rdi),%rax
29cd(4): cmp 0x30(%rdi),%rax
29d1(6): jnb 0x88(%rip)
29d7(4): lea 0x1(%rax),%rdx
29db(4): mov %rdx,0x28(%rdi)
29df(3): mov $0x7,(%rax)
29e2(5): jmp 0xfffffcb6(%rip)
29e7(7): mov 0x20969a(%rip),%rdi
29ee(4): mov 0x28(%rdi),%rax
29f2(4): cmp 0x30(%rdi),%rax
29f6(6): jnb 0xff(%rip)
29fc(4): lea 0x1(%rax),%rdx
2a00(4): mov %rdx,0x28(%rdi)
2a04(3): mov %r13b,(%rax)
2a07(5): jmp 0xfffffc91(%rip)
2a0c(4): nop 0x0(%rax)
2a10(3): cmp %edi,%r10d
2a13(2): jz 0x55(%rip)
2a15(3): mov %rdi,%rbx
2a18(5): jmp 0xfffffd3e(%rip)
2a1d(3): nop (%rax)
2a20(4): movzx %sil,%esi
2a24(5): call 0xffffeb3c(%rip)
2a29(5): jmp 0xfffffc6f(%rip)
2a2e(2): nop 
2a30(3): movzx %dl,%esi
2a33(5): call 0xffffeb2d(%rip)
2a38(5): jmp 0xfffffc60(%rip)
2a3d(5): mov $0x5c,%esi
2a42(5): call 0xffffeb1e(%rip)
2a47(5): jmp 0xfffffc92(%rip)
2a4c(3): movzx %al,%esi
2a4f(5): call 0xffffeb11(%rip)
2a54(5): jmp 0xfffffcae(%rip)
2a59(5): mov $0x7,%esi
2a5e(5): call 0xffffeb02(%rip)
2a63(5): jmp 0xfffffc35(%rip)
2a68(7): lea 0x5959(%rip),%rsi
2a6f(5): mov $0x5,%edx
2a74(2): xor %edi,%edi
2a76(5): call 0xffffea7a(%rip)
2a7b(2): xor %esi,%esi
2a7d(3): mov %rax,%rdx
2a80(5): mov $0x1,%edi
2a85(2): xor %eax,%eax
2a87(5): call 0xffffec29(%rip)
2a8c(5): mov $0x9,%esi
2a91(5): call 0xffffeacf(%rip)
2a96(5): jmp 0xfffffc02(%rip)
2a9b(5): mov $0xd,%esi
2aa0(5): call 0xffffeac0(%rip)
2aa5(5): jmp 0xfffffbf3(%rip)
2aaa(5): mov $0xa,%esi
2aaf(5): call 0xffffeab1(%rip)
2ab4(5): jmp 0xfffffbe4(%rip)
2ab9(5): mov $0xc,%esi
2abe(5): call 0xffffeaa2(%rip)
2ac3(5): jmp 0xfffffbd5(%rip)
2ac8(5): mov $0xb,%esi
2acd(5): call 0xffffea93(%rip)
2ad2(5): jmp 0xfffffbc6(%rip)
2ad7(5): mov $0x8,%esi
2adc(5): call 0xffffea84(%rip)
2ae1(5): jmp 0xfffffbb7(%rip)
2ae6(5): mov $0x1b,%esi
2aeb(5): call 0xffffea75(%rip)
2af0(5): jmp 0xfffffba8(%rip)
2af5(4): movzx %r13b,%esi
2af9(5): call 0xffffea67(%rip)
2afe(5): jmp 0xfffffb9a(%rip)
2b03(7): lea 0x58e6(%rip),%rsi
2b0a(5): mov $0x5,%edx
2b0f(2): xor %edi,%edi
2b11(5): mov %r9d,0xc(%rsp)
2b16(5): call 0xffffe9da(%rip)
2b1b(5): mov 0xc(%rsp),%r9d
2b20(3): mov %rax,%rdx
2b23(3): mov %r13d,%r8d
2b26(2): mov %ebp,%ecx
2b28(2): xor %esi,%esi
2b2a(5): mov $0x1,%edi
2b2f(2): xor %eax,%eax
2b31(5): call 0xffffeb7f(%rip)
2b36(a): nop 0x0(%rax,%rax,1)
2b40(2): push %r12
2b42(1): push %rbp
2b43(3): mov %rdi,%r12
2b46(1): push %rbx
2b47(3): mov %rsi,%rbp
2b4a(5): call 0xffffe906(%rip)
2b4f(2): mov (%rax),%edx
2b51(2): test %edx,%edx
2b53(2): jnz 0x4d(%rip)
2b55(4): cmp $0x0,0x0(%rbp)
2b59(2): jz 0x40(%rip)
2b5b(3): cmp %r12,%rbp
2b5e(2): jz 0x72(%rip)
2b60(3): mov %r12,%rdi
2b63(5): call 0x23dd(%rip)
2b68(7): lea 0x58b1(%rip),%rsi
2b6f(3): mov %rax,%rbx
2b72(5): mov $0x5,%edx
2b77(2): xor %edi,%edi
2b79(5): call 0xffffe977(%rip)
2b7e(3): mov %rbx,%rcx
2b81(3): mov %rax,%rdx
2b84(2): xor %esi,%esi
2b86(2): xor %edi,%edi
2b88(2): xor %eax,%eax
2b8a(5): call 0xffffeb26(%rip)
2b8f(a): mov $0x1,0x209517(%rip)
2b99(1): pop %rbx
2b9a(1): pop %rbp
2b9b(2): pop %r12
2b9d(1): ret near (%rsp)
2b9e(2): nop 
2ba0(3): mov %rax,%rbx
2ba3(3): mov %r12,%rdi
2ba6(5): call 0x239a(%rip)
2bab(2): mov (%rbx),%esi
2bad(7): lea 0x611a(%rip),%rdx
2bb4(3): mov %rax,%rcx
2bb7(2): xor %edi,%edi
2bb9(2): xor %eax,%eax
2bbb(5): call 0xffffeaf5(%rip)
2bc0(1): pop %rbx
2bc1(a): mov $0x1,0x2094e5(%rip)
2bcb(1): pop %rbp
2bcc(2): pop %r12
2bce(1): ret near (%rsp)
2bcf(1): nop 
2bd0(3): mov %rbp,%rdi
2bd3(5): call 0x236d(%rip)
2bd8(5): mov $0x5,%edx
2bdd(3): mov %rax,%rbx
2be0(7): lea 0x5faa(%rip),%rsi
2be7(2): jmp 0xffffff90(%rip)

"verify_numeric" :
2b40(2): push %r12
2b42(1): push %rbp
2b43(3): mov %rdi,%r12
2b46(1): push %rbx
2b47(3): mov %rsi,%rbp
2b4a(5): call 0xffffe906(%rip)
2b4f(2): mov (%rax),%edx
2b51(2): test %edx,%edx
2b53(2): jnz 0x4d(%rip)
2b55(4): cmp $0x0,0x0(%rbp)
2b59(2): jz 0x40(%rip)
2b5b(3): cmp %r12,%rbp
2b5e(2): jz 0x72(%rip)
2b60(3): mov %r12,%rdi
2b63(5): call 0x23dd(%rip)
2b68(7): lea 0x58b1(%rip),%rsi
2b6f(3): mov %rax,%rbx
2b72(5): mov $0x5,%edx
2b77(2): xor %edi,%edi
2b79(5): call 0xffffe977(%rip)
2b7e(3): mov %rbx,%rcx
2b81(3): mov %rax,%rdx
2b84(2): xor %esi,%esi
2b86(2): xor %edi,%edi
2b88(2): xor %eax,%eax
2b8a(5): call 0xffffeb26(%rip)
2b8f(a): mov $0x1,0x209517(%rip)
2b99(1): pop %rbx
2b9a(1): pop %rbp
2b9b(2): pop %r12
2b9d(1): ret near (%rsp)
2b9e(2): nop 
2ba0(3): mov %rax,%rbx
2ba3(3): mov %r12,%rdi
2ba6(5): call 0x239a(%rip)
2bab(2): mov (%rbx),%esi
2bad(7): lea 0x611a(%rip),%rdx
2bb4(3): mov %rax,%rcx
2bb7(2): xor %edi,%edi
2bb9(2): xor %eax,%eax
2bbb(5): call 0xffffeaf5(%rip)
2bc0(1): pop %rbx
2bc1(a): mov $0x1,0x2094e5(%rip)
2bcb(1): pop %rbp
2bcc(2): pop %r12
2bce(1): ret near (%rsp)
2bcf(1): nop 
2bd0(3): mov %rbp,%rdi
2bd3(5): call 0x236d(%rip)
2bd8(5): mov $0x5,%edx
2bdd(3): mov %rax,%rbx
2be0(7): lea 0x5faa(%rip),%rsi
2be7(2): jmp 0xffffff90(%rip)

"vstrtoimax" :
2bf0(1): push %rbp
2bf1(1): push %rbx
2bf2(3): mov %rdi,%rbx
2bf5(4): sub $0x18,%rsp
2bf9(9): mov $0x28,%rax
2c02(5): mov %rax,0x8(%rsp)
2c07(2): xor %eax,%eax
2c09(3): movzx (%rdi),%eax
2c0c(2): cmp $0x22,%al
2c0e(2): jz 0x6(%rip)
2c10(2): cmp $0x27,%al
2c12(2): jnz 0xb(%rip)
2c14(4): movzx 0x1(%rbx),%ebp
2c18(3): test %bpl,%bpl
2c1b(2): jnz 0x45(%rip)
2c1d(5): call 0xffffe833(%rip)
2c22(3): mov %rsp,%rsi
2c25(3): mov %rbx,%rdi
2c28(6): mov $0x0,(%rax)
2c2e(2): xor %ecx,%ecx
2c30(2): xor %edx,%edx
2c32(5): call 0xffffe88e(%rip)
2c37(4): mov (%rsp),%rsi
2c3b(3): mov %rbx,%rdi
2c3e(3): mov %rax,%rbp
2c41(5): call 0xfffffeff(%rip)
2c46(5): mov 0x8(%rsp),%rdx
2c4b(9): xor $0x28,%rdx
2c54(3): mov %rbp,%rax
2c57(2): jnz 0x3f(%rip)
2c59(4): add $0x18,%rsp
2c5d(1): pop %rbx
2c5e(1): pop %rbp
2c5f(1): ret near (%rsp)
2c60(4): cmp $0x0,0x2(%rbx)
2c64(2): jz 0xffffffe2(%rip)
2c66(7): cmp $0x0,0x20943f(%rip)
2c6d(2): jnz 0xffffffd9(%rip)
2c6f(7): lea 0x57d2(%rip),%rsi
2c76(2): xor %edi,%edi
2c78(5): mov $0x5,%edx
2c7d(5): call 0xffffe873(%rip)
2c82(4): lea 0x2(%rbx),%rcx
2c86(3): mov %rax,%rdx
2c89(2): xor %esi,%esi
2c8b(2): xor %edi,%edi
2c8d(2): xor %eax,%eax
2c8f(5): call 0xffffea21(%rip)
2c94(2): jmp 0xffffffb2(%rip)
2c96(5): call 0xffffe88a(%rip)

"usage" :
2ca0(2): push %r13
2ca2(2): push %r12
2ca4(5): mov $0x5,%edx
2ca9(1): push %rbp
2caa(1): push %rbx
2cab(2): mov %edi,%ebp
2cad(7): sub $0x88,%rsp
2cb4(7): mov 0x20940d(%rip),%rbx
2cbb(9): mov $0x28,%rax
2cc4(5): mov %rax,0x78(%rsp)
2cc9(2): xor %eax,%eax
2ccb(2): test %edi,%edi
2ccd(2): jz 0x30(%rip)
2ccf(7): lea 0x57c2(%rip),%rsi
2cd6(2): xor %edi,%edi
2cd8(5): call 0xffffe818(%rip)
2cdd(7): mov 0x2093bc(%rip),%rdi
2ce4(3): mov %rax,%rdx
2ce7(3): mov %rbx,%rcx
2cea(5): mov $0x1,%esi
2cef(2): xor %eax,%eax
2cf1(5): call 0xffffea0f(%rip)
2cf6(2): mov %ebp,%edi
2cf8(5): call 0xffffe9e8(%rip)
2cfd(7): lea 0x57bc(%rip),%rsi
2d04(2): xor %edi,%edi
2d06(5): call 0xffffe7ea(%rip)
2d0b(3): mov %rbx,%rcx
2d0e(3): mov %rbx,%rdx
2d11(3): mov %rax,%rsi
2d14(5): mov $0x1,%edi
2d19(2): xor %eax,%eax
2d1b(5): call 0xffffe965(%rip)
2d20(7): mov 0x209361(%rip),%rbx
2d27(7): lea 0x57ca(%rip),%rsi
2d2e(5): mov $0x5,%edx
2d33(2): xor %edi,%edi
2d35(5): call 0xffffe7bb(%rip)
2d3a(3): mov %rbx,%rsi
2d3d(3): mov %rax,%rdi
2d40(5): call 0xffffe880(%rip)
2d45(7): mov 0x20933c(%rip),%rbx
2d4c(7): lea 0x57f5(%rip),%rsi
2d53(5): mov $0x5,%edx
2d58(2): xor %edi,%edi
2d5a(5): call 0xffffe796(%rip)
2d5f(3): mov %rbx,%rsi
2d62(3): mov %rax,%rdi
2d65(5): call 0xffffe85b(%rip)
2d6a(7): mov 0x209317(%rip),%rbx
2d71(7): lea 0x5800(%rip),%rsi
2d78(5): mov $0x5,%edx
2d7d(2): xor %edi,%edi
2d7f(5): call 0xffffe771(%rip)
2d84(3): mov %rbx,%rsi
2d87(3): mov %rax,%rdi
2d8a(5): call 0xffffe836(%rip)
2d8f(7): mov 0x2092f2(%rip),%rbx
2d96(7): lea 0x5813(%rip),%rsi
2d9d(5): mov $0x5,%edx
2da2(2): xor %edi,%edi
2da4(5): call 0xffffe74c(%rip)
2da9(3): mov %rbx,%rsi
2dac(3): mov %rax,%rdi
2daf(5): call 0xffffe811(%rip)
2db4(7): mov 0x2092cd(%rip),%rbx
2dbb(7): lea 0x5856(%rip),%rsi
2dc2(5): mov $0x5,%edx
2dc7(2): xor %edi,%edi
2dc9(5): call 0xffffe727(%rip)
2dce(3): mov %rbx,%rsi
2dd1(3): mov %rax,%rdi
2dd4(5): call 0xffffe7ec(%rip)
2dd9(7): mov 0x2092a8(%rip),%rbx
2de0(7): lea 0x5919(%rip),%rsi
2de7(5): mov $0x5,%edx
2dec(2): xor %edi,%edi
2dee(5): call 0xffffe702(%rip)
2df3(3): mov %rbx,%rsi
2df6(3): mov %rax,%rdi
2df9(5): call 0xffffe7c7(%rip)
2dfe(7): mov 0x209283(%rip),%rbx
2e05(7): lea 0x59f4(%rip),%rsi
2e0c(5): mov $0x5,%edx
2e11(2): xor %edi,%edi
2e13(5): call 0xffffe6dd(%rip)
2e18(3): mov %rbx,%rsi
2e1b(3): mov %rax,%rdi
2e1e(7): lea 0x5d89(%rip),%rbx
2e25(5): call 0xffffe79b(%rip)
2e2a(7): lea 0x5b8f(%rip),%rsi
2e31(5): mov $0x5,%edx
2e36(2): xor %edi,%edi
2e38(5): call 0xffffe6b8(%rip)
2e3d(7): lea 0x5d6a(%rip),%rdx
2e44(3): mov %rax,%rsi
2e47(5): mov $0x1,%edi
2e4c(2): xor %eax,%eax
2e4e(5): call 0xffffe832(%rip)
2e53(7): lea 0x5d5b(%rip),%rax
2e5a(7): lea 0x5d95(%rip),%rcx
2e61(9): mov $0x0,0x60(%rsp)
2e6a(9): mov $0x0,0x68(%rsp)
2e73(3): mov %rsp,%rdx
2e76(4): mov %rax,(%rsp)
2e7a(7): lea 0x5d36(%rip),%rax
2e81(5): mov %rcx,0x30(%rsp)
2e86(7): lea 0x5d73(%rip),%rcx
2e8d(5): mov %rax,0x8(%rsp)
2e92(7): lea 0x5d96(%rip),%rax
2e99(5): mov %rcx,0x40(%rsp)
2e9e(7): lea 0x5d65(%rip),%rcx
2ea5(5): mov %rax,0x10(%rsp)
2eaa(7): lea 0x5d16(%rip),%rax
2eb1(5): mov %rcx,0x50(%rsp)
2eb6(5): mov %rax,0x18(%rsp)
2ebb(7): lea 0x5d1b(%rip),%rax
2ec2(5): mov %rax,0x20(%rsp)
2ec7(7): lea 0x5d19(%rip),%rax
2ece(5): mov %rax,0x28(%rsp)
2ed3(5): mov %rax,0x38(%rsp)
2ed8(5): mov %rax,0x48(%rsp)
2edd(5): mov %rax,0x58(%rsp)
2ee2(6): nop 0x0(%rax,%rax,1)
2ee8(4): add $0x10,%rdx
2eec(3): mov (%rdx),%rdi
2eef(3): test %rdi,%rdi
2ef2(2): jz 0x15(%rip)
2ef4(5): mov $0x7,%ecx
2ef9(3): mov %rbx,%rsi
2efc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2efe(3): setnbe %al
2f01(2): sbb $0x0,%al
2f03(2): test %al,%al
2f05(2): jnz 0xffffffe3(%rip)
2f07(4): mov 0x8(%rdx),%r12
2f0b(2): xor %edi,%edi
2f0d(5): mov $0x5,%edx
2f12(7): lea 0x5cfb(%rip),%rsi
2f19(3): test %r12,%r12
2f1c(6): jz 0xc7(%rip)
2f22(5): call 0xffffe5ce(%rip)
2f27(7): lea 0x5b52(%rip),%rcx
2f2e(7): lea 0x5cf6(%rip),%rdx
2f35(3): mov %rax,%rsi
2f38(5): mov $0x1,%edi
2f3d(2): xor %eax,%eax
2f3f(5): call 0xffffe741(%rip)
2f44(2): xor %esi,%esi
2f46(5): mov $0x5,%edi
2f4b(5): call 0xffffe725(%rip)
2f50(3): test %rax,%rax
2f53(2): jz 0x1e(%rip)
2f55(7): lea 0x5cdd(%rip),%rsi
2f5c(5): mov $0x3,%edx
2f61(3): mov %rax,%rdi
2f64(5): call 0xffffe4fc(%rip)
2f69(2): test %eax,%eax
2f6b(6): jnz 0x10d(%rip)
2f71(7): lea 0x5cc5(%rip),%rsi
2f78(2): xor %edi,%edi
2f7a(5): mov $0x5,%edx
2f7f(5): call 0xffffe571(%rip)
2f84(7): lea 0x5c23(%rip),%rcx
2f8b(7): lea 0x5aee(%rip),%rdx
2f92(3): mov %rax,%rsi
2f95(5): mov $0x1,%edi
2f9a(2): xor %eax,%eax
2f9c(5): call 0xffffe6e4(%rip)
2fa1(3): cmp %rbx,%r12
2fa4(7): lea 0x5c26(%rip),%rcx
2fab(7): lea 0x6560(%rip),%rbx
2fb2(4): cmove %rcx,%rbx
2fb6(7): lea 0x5b33(%rip),%rsi
2fbd(2): xor %edi,%edi
2fbf(5): mov $0x5,%edx
2fc4(5): call 0xffffe52c(%rip)
2fc9(3): mov %rbx,%rcx
2fcc(3): mov %rax,%rsi
2fcf(3): mov %r12,%rdx
2fd2(5): mov $0x1,%edi
2fd7(2): xor %eax,%eax
2fd9(5): call 0xffffe6a7(%rip)
2fde(5): jmp 0xfffffd18(%rip)
2fe3(5): call 0xffffe50d(%rip)
2fe8(7): lea 0x5a91(%rip),%rcx
2fef(7): lea 0x5c35(%rip),%rdx
2ff6(3): mov %rax,%rsi
2ff9(5): mov $0x1,%edi
2ffe(2): xor %eax,%eax
3000(5): call 0xffffe680(%rip)
3005(2): xor %esi,%esi
3007(5): mov $0x5,%edi
300c(5): call 0xffffe664(%rip)
3011(3): test %rax,%rax
3014(2): jz 0x1a(%rip)
3016(7): lea 0x5c1c(%rip),%rsi
301d(5): mov $0x3,%edx
3022(3): mov %rax,%rdi
3025(5): call 0xffffe43b(%rip)
302a(2): test %eax,%eax
302c(2): jnz 0x45(%rip)
302e(7): lea 0x5c08(%rip),%rsi
3035(5): mov $0x5,%edx
303a(2): xor %edi,%edi
303c(7): lea 0x5b6b(%rip),%r12
3043(7): lea 0x5b87(%rip),%rbx
304a(5): call 0xffffe4a6(%rip)
304f(7): lea 0x5b58(%rip),%rcx
3056(7): lea 0x5a23(%rip),%rdx
305d(3): mov %rax,%rsi
3060(5): mov $0x1,%edi
3065(2): xor %eax,%eax
3067(5): call 0xffffe619(%rip)
306c(5): jmp 0xffffff4a(%rip)
3071(7): lea 0x5b36(%rip),%r12
3078(7): mov 0x209009(%rip),%r13
307f(7): lea 0x5a22(%rip),%rsi
3086(2): xor %edi,%edi
3088(5): mov $0x5,%edx
308d(5): call 0xffffe463(%rip)
3092(3): mov %r13,%rsi
3095(3): mov %rax,%rdi
3098(5): call 0xffffe528(%rip)
309d(5): jmp 0xfffffed4(%rip)

"cl_strtold" :
30b0(2): push %r13
30b2(2): push %r12
30b4(1): push %rbp
30b5(1): push %rbx
30b6(3): mov %rsi,%rbx
30b9(3): mov %rdi,%rbp
30bc(4): sub $0x38,%rsp
30c0(5): lea 0x18(%rsp),%rsi
30c5(9): mov $0x28,%rax
30ce(5): mov %rax,0x28(%rsp)
30d3(2): xor %eax,%eax
30d5(5): call 0xffffe5cb(%rip)
30da(5): mov 0x18(%rsp),%rax
30df(2): fld %st0,%st0
30e1(3): cmp $0x0,(%rax)
30e4(2): jnz 0x2c(%rip)
30e6(2): fstp %st0,%st1
30e8(3): test %rbx,%rbx
30eb(2): jz 0xa(%rip)
30ed(5): mov 0x18(%rsp),%rax
30f2(3): mov %rax,(%rbx)
30f5(5): mov 0x28(%rsp),%rax
30fa(9): xor $0x28,%rax
3103(2): jnz 0x4d(%rip)
3105(4): add $0x38,%rsp
3109(1): pop %rbx
310a(1): pop %rbp
310b(2): pop %r12
310d(2): pop %r13
310f(1): ret near (%rsp)
3110(2): fstp %st0,%st0
3112(3): fstp %st0,(%rsp)
3115(5): call 0xffffe33b(%rip)
311a(5): lea 0x20(%rsp),%rsi
311f(3): mov %rbp,%rdi
3122(3): mov %rax,%r12
3125(3): mov (%rax),%r13d
3128(5): call 0x2ec8(%rip)
312d(5): mov 0x20(%rsp),%rax
3132(5): cmp %rax,0x18(%rsp)
3137(3): fld (%rsp),%st0
313a(2): jnb 0xe(%rip)
313c(2): fstp %st0,%st0
313e(5): mov %rax,0x18(%rsp)
3143(2): jmp 0xffffffa5(%rip)
3145(3): nop (%rax)
3148(2): fstp %st0,%st1
314a(4): mov %r13d,(%r12)
314e(2): jmp 0xffffff9a(%rip)
3150(2): fstp %st0,%st0
3152(5): call 0xffffe3ce(%rip)

"close_stdout_set_file_name" :
3160(7): mov %rdi,0x208f59(%rip)
3167(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3170(7): mov %dil,0x208f41(%rip)
3177(1): ret near (%rsp)

"close_stdout" :
3180(1): push %rbp
3181(1): push %rbx
3182(4): sub $0x8,%rsp
3186(7): mov 0x208efb(%rip),%rdi
318d(5): call 0x2f23(%rip)
3192(2): test %eax,%eax
3194(2): jz 0x18(%rip)
3196(5): call 0xffffe2ba(%rip)
319b(7): cmp $0x0,0x208f16(%rip)
31a2(3): mov %rax,%rbx
31a5(2): jz 0x1e(%rip)
31a7(3): cmp $0x20,(%rax)
31aa(2): jnz 0x19(%rip)
31ac(7): mov 0x208eed(%rip),%rdi
31b3(5): call 0x2efd(%rip)
31b8(2): test %eax,%eax
31ba(2): jnz 0x48(%rip)
31bc(4): add $0x8,%rsp
31c0(1): pop %rbx
31c1(1): pop %rbp
31c2(1): ret near (%rsp)
31c3(7): lea 0x5d03(%rip),%rsi
31ca(2): xor %edi,%edi
31cc(5): mov $0x5,%edx
31d1(5): call 0xffffe31f(%rip)
31d6(7): mov 0x208ee3(%rip),%rdi
31dd(3): mov %rax,%rbp
31e0(3): test %rdi,%rdi
31e3(2): jz 0x2a(%rip)
31e5(5): call 0x1b5b(%rip)
31ea(2): mov (%rbx),%esi
31ec(7): lea 0x5ce6(%rip),%rdx
31f3(3): mov %rax,%rcx
31f6(3): mov %rbp,%r8
31f9(2): xor %edi,%edi
31fb(2): xor %eax,%eax
31fd(5): call 0xffffe4b3(%rip)
3202(6): mov 0x208e10(%rip),%edi
3208(5): call 0xffffe268(%rip)
320d(2): mov (%rbx),%esi
320f(7): lea 0x5ab8(%rip),%rdx
3216(3): mov %rax,%rcx
3219(2): xor %edi,%edi
321b(2): xor %eax,%eax
321d(5): call 0xffffe493(%rip)
3222(2): jmp 0xffffffe0(%rip)

"set_program_name" :
3230(3): test %rdi,%rdi
3233(1): push %rbx
3234(2): jz 0x79(%rip)
3236(5): mov $0x2f,%esi
323b(3): mov %rdi,%rbx
323e(5): call 0xffffe332(%rip)
3243(3): test %rax,%rax
3246(2): jz 0x57(%rip)
3248(4): lea 0x1(%rax),%r8
324c(3): mov %r8,%rdx
324f(3): sub %rbx,%rdx
3252(4): cmp $0x6,%rdx
3256(2): jle 0x47(%rip)
3258(4): lea 0xfffffffa(%rax),%rsi
325c(7): lea 0x5cb5(%rip),%rdi
3263(5): mov $0x7,%ecx
3268(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
326a(3): setnbe %dl
326d(3): sbb $0x0,%dl
3270(2): test %dl,%dl
3272(2): jnz 0x2b(%rip)
3274(7): lea 0x5ca5(%rip),%rdi
327b(5): mov $0x3,%ecx
3280(3): mov %r8,%rsi
3283(3): mov %r8,%rbx
3286(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3288(3): setnbe %dl
328b(3): sbb $0x0,%dl
328e(2): test %dl,%dl
3290(2): jnz 0xd(%rip)
3292(4): lea 0x4(%rax),%rbx
3296(7): mov %rbx,0x208de3(%rip)
329d(7): mov %rbx,0x208e24(%rip)
32a4(7): mov %rbx,0x208de5(%rip)
32ab(1): pop %rbx
32ac(1): ret near (%rsp)
32ad(7): mov 0x208dec(%rip),%rcx
32b4(7): lea 0x5c25(%rip),%rdi
32bb(5): mov $0x37,%edx
32c0(5): mov $0x1,%esi
32c5(5): call 0xffffe42b(%rip)
32ca(5): call 0xffffe176(%rip)

"gettext_quote.part.1" :
32d0(1): push %rbp
32d1(1): push %rbx
32d2(3): mov %rdi,%rbp
32d5(2): mov %esi,%ebx
32d7(4): sub $0x8,%rsp
32db(5): call 0x2eb5(%rip)
32e0(3): movzx (%rax),%edx
32e3(3): and $0xdf,%edx
32e6(3): cmp $0x55,%dl
32e9(2): jz 0x77(%rip)
32eb(3): cmp $0x47,%dl
32ee(2): jz 0x22(%rip)
32f0(7): lea 0x5c3c(%rip),%rax
32f7(7): lea 0x5c37(%rip),%rdx
32fe(3): cmp $0x9,%ebx
3301(4): cmovne %rdx,%rax
3305(4): add $0x8,%rsp
3309(1): pop %rbx
330a(1): pop %rbp
330b(1): ret near (%rsp)
330c(4): nop 0x0(%rax)
3310(4): movzx 0x1(%rax),%edx
3314(3): and $0xdf,%edx
3317(3): cmp $0x42,%dl
331a(2): jnz 0xffffffd6(%rip)
331c(4): cmp $0x31,0x2(%rax)
3320(2): jnz 0xffffffd0(%rip)
3322(4): cmp $0x38,0x3(%rax)
3326(2): jnz 0xffffffca(%rip)
3328(4): cmp $0x30,0x4(%rax)
332c(2): jnz 0xffffffc4(%rip)
332e(4): cmp $0x33,0x5(%rax)
3332(2): jnz 0xffffffbe(%rip)
3334(4): cmp $0x30,0x6(%rax)
3338(2): jnz 0xffffffb8(%rip)
333a(4): cmp $0x0,0x7(%rax)
333e(2): jnz 0xffffffb2(%rip)
3340(4): cmp $0x60,0x0(%rbp)
3344(7): lea 0x5be1(%rip),%rax
334b(7): lea 0x5bde(%rip),%rdx
3352(4): cmovne %rdx,%rax
3356(4): add $0x8,%rsp
335a(1): pop %rbx
335b(1): pop %rbp
335c(1): ret near (%rsp)
335d(3): nop (%rax)
3360(4): movzx 0x1(%rax),%edx
3364(3): and $0xdf,%edx
3367(3): cmp $0x54,%dl
336a(2): jnz 0xffffff86(%rip)
336c(4): movzx 0x2(%rax),%edx
3370(3): and $0xdf,%edx
3373(3): cmp $0x46,%dl
3376(6): jnz 0xffffff7a(%rip)
337c(4): cmp $0x2d,0x3(%rax)
3380(6): jnz 0xffffff70(%rip)
3386(4): cmp $0x38,0x4(%rax)
338a(6): jnz 0xffffff66(%rip)
3390(4): cmp $0x0,0x5(%rax)
3394(6): jnz 0xffffff5c(%rip)
339a(4): cmp $0x60,0x0(%rbp)
339e(7): lea 0x5b7f(%rip),%rax
33a5(7): lea 0x5b7c(%rip),%rdx
33ac(4): cmovne %rdx,%rax
33b0(4): add $0x8,%rsp
33b4(1): pop %rbx
33b5(1): pop %rbp
33b6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
33c0(2): push %r15
33c2(2): push %r14
33c4(3): mov %r8d,%r15d
33c7(2): push %r13
33c9(2): push %r12
33cb(3): mov %rdi,%r14
33ce(1): push %rbp
33cf(1): push %rbx
33d0(3): mov %r9d,%ebx
33d3(3): mov %rsi,%r13
33d6(3): mov %rcx,%rbp
33d9(3): and $0x2,%ebx
33dc(7): sub $0xb8,%rsp
33e3(8): mov 0xf0(%rsp),%rax
33eb(5): mov %rdx,0x10(%rsp)
33f0(5): mov %r8d,0x8(%rsp)
33f5(5): mov %r9d,0x78(%rsp)
33fa(5): mov %rax,0x20(%rsp)
33ff(8): mov 0xf8(%rsp),%rax
3407(5): mov %rax,0x68(%rsp)
340c(8): mov 0x100(%rsp),%rax
3414(5): mov %rax,0x60(%rsp)
3419(9): mov $0x28,%rax
3422(8): mov %rax,0xa8(%rsp)
342a(2): xor %eax,%eax
342c(5): call 0xffffe0d4(%rip)
3431(4): cmp $0xa,%r15d
3435(5): mov %rax,0x58(%rsp)
343a(6): jnbe 0x11b5(%rip)
3440(7): lea 0x5b59(%rip),%rcx
3447(3): mov %r15d,%edx
344a(4): movsxd 0x0(%rcx,%rdx,4),%rax
344e(3): add %rcx,%rax
3451(2): jmp %rax
3453(5): mov $0x1,0xe(%rsp)
3458(5): mov $0x0,0x7c(%rsp)
345d(3): xor %r12d,%r12d
3460(9): mov $0x0,0x50(%rsp)
3469(5): mov $0x1,0xf(%rsp)
346e(5): mov $0x0,0xd(%rsp)
3473(7): lea 0x5abb(%rip),%rax
347a(9): mov $0x1,0x18(%rsp)
3483(3): xor %r15d,%r15d
3486(8): mov $0x2,0x8(%rsp)
348e(5): mov %rax,0x48(%rsp)
3493(3): xor %r11d,%r11d
3496(3): mov %rbp,%rax
3499(3): mov %r12d,%r8d
349c(3): mov %r11,%rbp
349f(3): mov %rax,%r11
34a2(6): nop 0x0(%rax,%rax,1)
34a8(3): cmp %rbp,%r11
34ab(4): setnz %r12b
34af(4): cmp $0xffffffff,%r11
34b3(2): jnz 0xf(%rip)
34b5(5): mov 0x10(%rsp),%rax
34ba(4): cmp $0x0,0x0(%rax,%rbp,1)
34be(4): setnz %r12b
34c2(3): test %r12b,%r12b
34c5(6): jz 0x65b(%rip)
34cb(5): cmp $0x2,0x8(%rsp)
34d0(5): mov 0x10(%rsp),%rdi
34d5(4): lea 0x0(%rdi,%rbp,1),%r9
34d9(3): setnz %al
34dc(4): and 0xd(%rsp),%al
34e0(3): mov %eax,%r10d
34e3(6): jz 0xad(%rip)
34e9(5): mov 0x18(%rsp),%rax
34ee(3): test %rax,%rax
34f1(6): jz 0x42f(%rip)
34f7(4): cmp $0xffffffff,%r11
34fb(5): lea 0x0(%rbp,%rax,1),%rbx
3500(2): jnz 0x30(%rip)
3502(4): cmp $0x1,%rax
3506(2): jbe 0x2a(%rip)
3508(5): mov %r8b,0x38(%rsp)
350d(5): mov %r10b,0x30(%rsp)
3512(5): mov %r9,0x28(%rsp)
3517(5): call 0xffffdff9(%rip)
351c(6): movzx 0x38(%rsp),%r8d
3522(6): movzx 0x30(%rsp),%r10d
3528(3): mov %rax,%r11
352b(5): mov 0x28(%rsp),%r9
3530(3): cmp %r11,%rbx
3533(5): mov %r10b,0x28(%rsp)
3538(6): jnbe 0x5b8(%rip)
353e(5): mov 0x18(%rsp),%rdx
3543(5): mov 0x48(%rsp),%rsi
3548(3): mov %r9,%rdi
354b(5): mov %r11,0x40(%rsp)
3550(5): mov %r8b,0x38(%rsp)
3555(5): mov %r9,0x30(%rsp)
355a(5): call 0xffffe056(%rip)
355f(2): test %eax,%eax
3561(5): mov 0x30(%rsp),%r9
3566(6): movzx 0x38(%rsp),%r8d
356c(5): mov 0x40(%rsp),%r11
3571(6): jnz 0x57f(%rip)
3577(5): cmp $0x0,0xf(%rsp)
357c(6): movzx 0x28(%rsp),%r10d
3582(6): jnz 0xf83(%rip)
3588(8): nop 0x0(%rax,%rax,1)
3590(4): movzx (%r9),%ebx
3594(3): cmp $0x7e,%bl
3597(6): jnbe 0x321(%rip)
359d(7): lea 0x5a28(%rip),%rcx
35a4(3): movzx %bl,%edx
35a7(4): movsxd 0x0(%rcx,%rdx,4),%rax
35ab(3): add %rcx,%rax
35ae(2): jmp %rax
35b0(3): xor %r10d,%r10d
35b3(4): cmp $0x1,%r11
35b7(3): setnz %al
35ba(4): cmp $0xffffffff,%r11
35be(2): jnz 0xe(%rip)
35c0(5): mov 0x10(%rsp),%rax
35c5(4): cmp $0x0,0x1(%rax)
35c9(3): setnz %al
35cc(5): cmp $0x2,0x8(%rsp)
35d1(3): setz %dl
35d4(2): test %al,%al
35d6(6): jz 0x252(%rip)
35dc(3): xor %r12d,%r12d
35df(2): xor %eax,%eax
35e1(7): nop 0x0(%rax)
35e8(5): cmp $0x1,0xd(%rsp)
35ed(6): jnz 0x115(%rip)
35f3(2): test %dl,%dl
35f5(6): jnz 0x10d(%rip)
35fb(5): mov 0x20(%rsp),%rsi
3600(3): test %rsi,%rsi
3603(2): jz 0x16(%rip)
3605(2): mov %ebx,%edx
3607(3): shr $0x5,%dl
360a(3): movzx %dl,%edx
360d(3): mov 0x0(%rsi,%rdx,4),%edx
3610(3): bt %ebx,%edx
3613(6): jb 0x150(%rip)
3619(3): test %r10b,%r10b
361c(6): jnz 0x147(%rip)
3622(3): xor $0x1,%eax
3625(4): add $0x1,%rbp
3629(3): and %r8d,%eax
362c(2): test %al,%al
362e(2): jz 0x22(%rip)
3630(3): cmp %r15,%r13
3633(2): jbe 0x7(%rip)
3635(5): mov $0x27,0x0(%r14,%r15,1)
363a(4): lea 0x1(%r15),%rax
363e(3): cmp %rax,%r13
3641(2): jbe 0x8(%rip)
3643(6): mov $0x27,0x1(%r14,%r15,1)
3649(4): add $0x2,%r15
364d(3): xor %r8d,%r8d
3650(3): cmp %r13,%r15
3653(2): jnb 0x6(%rip)
3655(4): mov %bl,0x0(%r14,%r15,1)
3659(5): movzx 0xe(%rsp),%edi
365e(4): add $0x1,%r15
3662(5): mov $0x0,%eax
3667(3): test %r12b,%r12b
366a(3): cmove %eax,%edi
366d(5): mov %dil,0xe(%rsp)
3672(5): jmp 0xfffffe36(%rip)
3677(9): nop 0x0(%rax,%rax,1)
3680(3): xor %r10d,%r10d
3683(4): mov 0x8(%rsp),%eax
3687(3): cmp $0x2,%eax
368a(6): jz 0x5be(%rip)
3690(3): cmp $0x5,%eax
3693(6): jz 0x575(%rip)
3699(3): cmp $0x2,%eax
369c(5): mov $0x3f,%ebx
36a1(3): setz %dl
36a4(3): xor %r12d,%r12d
36a7(2): xor %eax,%eax
36a9(5): jmp 0xffffff3f(%rip)
36ae(2): nop 
36b0(3): xor %r10d,%r10d
36b3(5): cmp $0x2,0x8(%rsp)
36b8(6): jz 0x508(%rip)
36be(5): mov %r12b,0x7c(%rsp)
36c3(2): xor %edx,%edx
36c5(2): xor %eax,%eax
36c7(5): mov $0x27,%ebx
36cc(5): jmp 0xffffff1c(%rip)
36d1(7): nop 0x0(%rax)
36d8(5): mov $0x9,%edx
36dd(5): mov $0x74,%ebx
36e2(5): cmp $0x2,0x8(%rsp)
36e7(3): setz %al
36ea(4): and 0xf(%rsp),%al
36ee(6): jnz 0x150(%rip)
36f4(5): cmp $0x0,0xd(%rsp)
36f9(2): jnz 0x67(%rip)
36fb(2): mov %edx,%ebx
36fd(3): xor %r12d,%r12d
3700(2): xor %eax,%eax
3702(5): cmp $0x0,0xf(%rsp)
3707(6): jnz 0xfffffef4(%rip)
370d(5): jmp 0xffffff0c(%rip)
3712(6): nop 0x0(%rax,%rax,1)
3718(5): mov $0x8,%edx
371d(5): mov $0x62,%ebx
3722(2): jmp 0xffffffd2(%rip)
3724(4): nop 0x0(%rax)
3728(5): cmp $0x2,0x8(%rsp)
372d(6): jz 0x3d3(%rip)
3733(5): cmp $0x0,0xd(%rsp)
3738(6): jz 0x218(%rip)
373e(5): cmp $0x0,0xf(%rsp)
3743(6): jz 0x20d(%rip)
3749(6): cmp $0x0,0x18(%rsp)
374f(6): jnz 0x3bc(%rip)
3755(5): mov $0x5c,%ebx
375a(6): nop 0x0(%rax,%rax,1)
3760(3): xor %r12d,%r12d
3763(5): cmp $0x2,0x8(%rsp)
3768(3): setz %dl
376b(5): cmp $0x0,0xf(%rsp)
3770(2): mov %edx,%eax
3772(6): jnz 0x856(%rip)
3778(3): mov %r8d,%eax
377b(3): xor $0x1,%eax
377e(2): and %dl,%al
3780(2): jz 0x31(%rip)
3782(3): cmp %r15,%r13
3785(2): jbe 0x7(%rip)
3787(5): mov $0x27,0x0(%r14,%r15,1)
378c(4): lea 0x1(%r15),%rdx
3790(3): cmp %rdx,%r13
3793(2): jbe 0x8(%rip)
3795(6): mov $0x24,0x1(%r14,%r15,1)
379b(4): lea 0x2(%r15),%rdx
379f(3): cmp %rdx,%r13
37a2(2): jbe 0x8(%rip)
37a4(6): mov $0x27,0x2(%r14,%r15,1)
37aa(4): add $0x3,%r15
37ae(3): mov %eax,%r8d
37b1(3): cmp %r15,%r13
37b4(2): jbe 0x7(%rip)
37b6(5): mov $0x5c,0x0(%r14,%r15,1)
37bb(4): add $0x1,%r15
37bf(4): add $0x1,%rbp
37c3(5): jmp 0xfffffe8d(%rip)
37c8(8): nop 0x0(%rax,%rax,1)
37d0(5): cmp $0x0,0xd(%rsp)
37d5(6): jnz 0x1ce(%rip)
37db(2): xor %edx,%edx
37dd(5): test $0x1,0x78(%rsp)
37e2(6): jz 0xffffff19(%rip)
37e8(4): add $0x1,%rbp
37ec(5): jmp 0xfffffcbc(%rip)
37f1(7): nop 0x0(%rax)
37f8(5): cmp $0x2,0x8(%rsp)
37fd(3): setz %dl
3800(2): xor %eax,%eax
3802(5): jmp 0xfffffde6(%rip)
3807(9): nop 0x0(%rax,%rax,1)
3810(5): mov $0x7,%edx
3815(5): mov $0x61,%ebx
381a(5): jmp 0xfffffeda(%rip)
381f(1): nop 
3820(5): cmp $0x2,0x8(%rsp)
3825(3): setz %dl
3828(3): test %rbp,%rbp
382b(6): jnz 0xfffffdb1(%rip)
3831(5): movzx 0xf(%rsp),%eax
3836(2): and %dl,%al
3838(6): jz 0xfffffdb0(%rip)
383e(3): mov %r11,%rbp
3841(8): mov $0x2,0x8(%rsp)
3849(5): jmp 0x700(%rip)
384e(2): nop 
3850(5): cmp $0x2,0x8(%rsp)
3855(3): setz %dl
3858(3): xor %r12d,%r12d
385b(2): jmp 0xffffffd6(%rip)
385d(3): nop (%rax)
3860(5): cmp $0x2,0x8(%rsp)
3865(5): mov $0x20,%ebx
386a(3): setz %dl
386d(2): jmp 0xffffffc4(%rip)
386f(1): nop 
3870(5): mov $0xd,%edx
3875(5): mov $0x72,%ebx
387a(5): jmp 0xfffffe68(%rip)
387f(1): nop 
3880(5): mov $0xc,%edx
3885(5): mov $0x66,%ebx
388a(5): jmp 0xfffffe6a(%rip)
388f(1): nop 
3890(5): mov $0xb,%edx
3895(5): mov $0x76,%ebx
389a(5): jmp 0xfffffe5a(%rip)
389f(1): nop 
38a0(5): mov $0xa,%edx
38a5(5): mov $0x6e,%ebx
38aa(5): jmp 0xfffffe38(%rip)
38af(1): nop 
38b0(3): xor %r10d,%r10d
38b3(5): nop 0x0(%rax,%rax,1)
38b8(6): cmp $0x1,0x58(%rsp)
38be(6): jnz 0x3aa(%rip)
38c4(5): mov %r11,0x38(%rsp)
38c9(5): mov %r8b,0x30(%rsp)
38ce(5): mov %r10b,0x28(%rsp)
38d3(5): call 0xffffde5d(%rip)
38d8(3): mov (%rax),%rcx
38db(3): movzx %bl,%edx
38de(6): movzx 0x28(%rsp),%r10d
38e4(6): movzx 0x30(%rsp),%r8d
38ea(5): mov 0x38(%rsp),%r11
38ef(5): mov $0x1,%edi
38f4(4): movzx 0x0(%rcx,%rdx,2),%eax
38f8(4): and $0x4000,%ax
38fc(4): setnz %r12b
3900(3): setz %al
3903(4): and 0xd(%rsp),%al
3907(2): test %al,%al
3909(6): jnz 0x998(%rip)
390f(5): cmp $0x2,0x8(%rsp)
3914(3): setz %dl
3917(5): jmp 0xfffffcd1(%rip)
391c(4): nop 0x0(%rax)
3920(4): movzx (%r9),%ebx
3924(3): cmp $0x7e,%bl
3927(2): jnbe 0xffffff89(%rip)
3929(7): lea 0x5898(%rip),%rcx
3930(3): movzx %bl,%edx
3933(4): movsxd 0x0(%rcx,%rdx,4),%rax
3937(3): add %rcx,%rax
393a(2): jmp %rax
393c(4): nop 0x0(%rax)
3940(3): xor %r10d,%r10d
3943(5): cmp $0x0,0xd(%rsp)
3948(6): jnz 0xfffffdf6(%rip)
394e(2): nop 
3950(5): mov $0x5c,%edx
3955(5): mov $0x5c,%ebx
395a(5): jmp 0xfffffd9a(%rip)
395f(1): nop 
3960(5): mov $0xc,%edx
3965(3): xor %r10d,%r10d
3968(5): mov $0x66,%ebx
396d(5): jmp 0xfffffd87(%rip)
3972(6): nop 0x0(%rax,%rax,1)
3978(5): mov $0xa,%edx
397d(3): xor %r10d,%r10d
3980(5): mov $0x6e,%ebx
3985(5): jmp 0xfffffd5d(%rip)
398a(6): nop 0x0(%rax,%rax,1)
3990(5): mov $0x61,%ebx
3995(5): jmp 0xfffffdcb(%rip)
399a(6): nop 0x0(%rax,%rax,1)
39a0(3): xor %r10d,%r10d
39a3(5): cmp $0x2,0x8(%rsp)
39a8(3): setz %dl
39ab(5): cmp $0x0,0xf(%rsp)
39b0(6): jnz 0xb9a(%rip)
39b6(3): mov %r8d,%eax
39b9(3): mov %r15,%rcx
39bc(3): xor $0x1,%eax
39bf(2): and %dl,%al
39c1(2): jz 0x2f(%rip)
39c3(3): cmp %r15,%r13
39c6(2): jbe 0x7(%rip)
39c8(5): mov $0x27,0x0(%r14,%r15,1)
39cd(4): lea 0x1(%r15),%rcx
39d1(3): cmp %rcx,%r13
39d4(2): jbe 0x8(%rip)
39d6(6): mov $0x24,0x1(%r14,%r15,1)
39dc(4): lea 0x2(%r15),%rcx
39e0(3): cmp %rcx,%r13
39e3(6): jnbe 0x636(%rip)
39e9(4): lea 0x3(%r15),%rcx
39ed(3): mov %eax,%r8d
39f0(3): cmp %rcx,%r13
39f3(2): jbe 0x7(%rip)
39f5(5): mov $0x5c,0x0(%r14,%rcx,1)
39fa(5): cmp $0x2,0x8(%rsp)
39ff(4): lea 0x1(%rcx),%r15
3a03(6): jz 0x606(%rip)
3a09(4): lea 0x1(%rbp),%rax
3a0d(3): cmp %r11,%rax
3a10(2): jnb 0x1b(%rip)
3a12(5): mov 0x10(%rsp),%rax
3a17(5): movzx 0x1(%rax,%rbp,1),%eax
3a1c(4): mov %al,0x28(%rsp)
3a20(3): sub $0x30,%eax
3a23(2): cmp $0x9,%al
3a25(6): jbe 0x834(%rip)
3a2b(3): mov %r12d,%eax
3a2e(5): mov $0x30,%ebx
3a33(3): xor %r12d,%r12d
3a36(5): jmp 0xfffffbb2(%rip)
3a3b(5): nop 0x0(%rax,%rax,1)
3a40(5): cmp $0x2,0x8(%rsp)
3a45(3): mov %r10d,%r12d
3a48(3): setz %dl
3a4b(3): xor %r10d,%r10d
3a4e(2): xor %eax,%eax
3a50(5): jmp 0xfffffb98(%rip)
3a55(3): nop (%rax)
3a58(5): cmp $0x2,0x8(%rsp)
3a5d(3): setz %dl
3a60(3): xor %r10d,%r10d
3a63(5): jmp 0xfffffdc5(%rip)
3a68(8): nop 0x0(%rax,%rax,1)
3a70(5): cmp $0x2,0x8(%rsp)
3a75(3): setz %dl
3a78(3): xor %r10d,%r10d
3a7b(3): xor %r12d,%r12d
3a7e(5): jmp 0xfffffdb3(%rip)
3a83(5): nop 0x0(%rax,%rax,1)
3a88(5): cmp $0x2,0x8(%rsp)
3a8d(3): mov %r10d,%r12d
3a90(5): mov $0x20,%ebx
3a95(3): setz %dl
3a98(3): xor %r10d,%r10d
3a9b(5): jmp 0xfffffd96(%rip)
3aa0(5): mov $0xd,%edx
3aa5(3): xor %r10d,%r10d
3aa8(5): mov $0x72,%ebx
3aad(5): jmp 0xfffffc35(%rip)
3ab2(6): nop 0x0(%rax,%rax,1)
3ab8(5): mov $0x76,%ebx
3abd(5): jmp 0xfffffca3(%rip)
3ac2(6): nop 0x0(%rax,%rax,1)
3ac8(5): mov $0x9,%edx
3acd(3): xor %r10d,%r10d
3ad0(5): mov $0x74,%ebx
3ad5(5): jmp 0xfffffc0d(%rip)
3ada(6): nop 0x0(%rax,%rax,1)
3ae0(5): mov $0x62,%ebx
3ae5(5): jmp 0xfffffc7b(%rip)
3aea(6): nop 0x0(%rax,%rax,1)
3af0(3): xor %r10d,%r10d
3af3(5): jmp 0xfffffa9d(%rip)
3af8(8): nop 0x0(%rax,%rax,1)
3b00(5): cmp $0x0,0xf(%rsp)
3b05(6): jnz 0x96b(%rip)
3b0b(4): add $0x1,%rbp
3b0f(3): mov %r8d,%eax
3b12(3): xor %r12d,%r12d
3b15(5): mov $0x5c,%ebx
3b1a(5): jmp 0xfffffb12(%rip)
3b1f(1): nop 
3b20(5): cmp $0x2,0x8(%rsp)
3b25(5): movzx 0xf(%rsp),%ebx
3b2a(3): mov %r8d,%r12d
3b2d(3): mov %r11,%rbp
3b30(3): setz %dl
3b33(2): mov %ebx,%eax
3b35(3): test %r15,%r15
3b38(3): setz %cl
3b3b(2): and %edx,%eax
3b3d(2): and %cl,%al
3b3f(6): jnz 0xa67(%rip)
3b45(2): mov %ebx,%eax
3b47(3): xor $0x1,%eax
3b4a(2): and %al,%dl
3b4c(6): jz 0x970(%rip)
3b52(5): cmp $0x0,0x7c(%rsp)
3b57(6): jz 0x963(%rip)
3b5d(5): cmp $0x0,0xe(%rsp)
3b62(6): jnz 0x9fb(%rip)
3b68(3): test %r13,%r13
3b6b(3): setz %al
3b6e(6): cmp $0x0,0x50(%rsp)
3b74(3): setnz %dl
3b77(2): and %dl,%al
3b79(6): jz 0xa23(%rip)
3b7f(5): mov 0x50(%rsp),%r13
3b84(7): lea 0x53aa(%rip),%rbx
3b8b(4): mov $0x27,(%r14)
3b8f(8): mov $0x2,0x8(%rsp)
3b97(6): mov $0x1,%r15d
3b9d(9): mov $0x1,0x18(%rsp)
3ba6(5): mov $0x0,0xf(%rsp)
3bab(5): mov %rbx,0x48(%rsp)
3bb0(4): mov %al,0x7c(%rsp)
3bb4(5): jmp 0xfffff8df(%rip)
3bb9(7): nop 0x0(%rax)
3bc0(5): cmp $0x0,0xf(%rsp)
3bc5(6): jnz 0x8ab(%rip)
3bcb(3): test %r13,%r13
3bce(6): jz 0x402(%rip)
3bd4(2): xor %edx,%edx
3bd6(6): cmp $0x0,0x50(%rsp)
3bdc(6): jnz 0x3f4(%rip)
3be2(5): mov %r13,0x50(%rsp)
3be7(4): add $0x3,%r15
3beb(2): xor %eax,%eax
3bed(5): mov %r12b,0x7c(%rsp)
3bf2(3): xor %r8d,%r8d
3bf5(3): mov %rdx,%r13
3bf8(5): mov $0x27,%ebx
3bfd(5): jmp 0xfffffa1c(%rip)
3c02(6): nop 0x0(%rax,%rax,1)
3c08(5): test $0x4,0x78(%rsp)
3c0d(2): jz 0x23(%rip)
3c0f(4): lea 0x2(%rbp),%rcx
3c13(3): cmp %r11,%rcx
3c16(2): jnb 0x1a(%rip)
3c18(5): mov 0x10(%rsp),%rax
3c1d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3c22(6): jz 0x790(%rip)
3c28(8): nop 0x0(%rax,%rax,1)
3c30(2): xor %edx,%edx
3c32(3): xor %r12d,%r12d
3c35(2): xor %eax,%eax
3c37(5): mov $0x3f,%ebx
3c3c(5): jmp 0xfffff9ac(%rip)
3c41(7): nop 0x0(%rax)
3c48(5): cmp $0x0,0xf(%rsp)
3c4d(6): jnz 0x823(%rip)
3c53(3): xor %r12d,%r12d
3c56(2): xor %eax,%eax
3c58(5): mov $0x3f,%ebx
3c5d(5): jmp 0xfffff9bc(%rip)
3c62(6): nop 0x0(%rax,%rax,1)
3c68(8): lea 0xa0(%rsp),%rax
3c70(4): cmp $0xffffffff,%r11
3c74(c): mov $0x0,0xa0(%rsp)
3c80(5): mov %rax,0x28(%rsp)
3c85(2): jnz 0x2f(%rip)
3c87(5): mov 0x10(%rsp),%rdi
3c8c(5): mov %r8b,0x40(%rsp)
3c91(5): mov %r10b,0x38(%rsp)
3c96(5): mov %r9,0x30(%rsp)
3c9b(5): call 0xffffd875(%rip)
3ca0(6): movzx 0x40(%rsp),%r8d
3ca6(6): movzx 0x38(%rsp),%r10d
3cac(3): mov %rax,%r11
3caf(5): mov 0x30(%rsp),%r9
3cb4(8): lea 0x9c(%rsp),%rax
3cbc(2): xor %ecx,%ecx
3cbe(4): mov %bl,0x7e(%rsp)
3cc2(5): mov %r8b,0x7d(%rsp)
3cc7(3): mov %rcx,%rbx
3cca(8): mov %r9,0x88(%rsp)
3cd2(5): mov %rax,0x38(%rsp)
3cd7(5): mov %r10b,0x7f(%rsp)
3cdc(8): mov %r15,0x80(%rsp)
3ce4(5): mov %r14,0x40(%rsp)
3ce9(5): mov %r13,0x70(%rsp)
3cee(5): mov %r11,0x30(%rsp)
3cf3(5): mov 0x10(%rsp),%rax
3cf8(5): lea 0x0(%rbp,%rbx,1),%r14
3cfd(5): mov 0x30(%rsp),%rdx
3d02(5): mov 0x28(%rsp),%rcx
3d07(5): mov 0x38(%rsp),%rdi
3d0c(4): lea 0x0(%rax,%r14,1),%r13
3d10(3): sub %r14,%rdx
3d13(3): mov %r13,%rsi
3d16(5): call 0x212a(%rip)
3d1b(3): test %rax,%rax
3d1e(3): mov %rax,%r15
3d21(2): jz 0x50(%rip)
3d23(4): cmp $0xffffffff,%rax
3d27(6): jz 0x61e(%rip)
3d2d(4): cmp $0xfffffffe,%rax
3d31(6): jz 0x5a0(%rip)
3d37(5): cmp $0x2,0x8(%rsp)
3d3c(3): setz %al
3d3f(4): and 0xf(%rsp),%al
3d43(6): jnz 0x19d(%rip)
3d49(7): mov 0x9c(%rsp),%edi
3d50(5): call 0xffffd9d0(%rip)
3d55(5): mov 0x28(%rsp),%rdi
3d5a(2): test %eax,%eax
3d5c(5): mov $0x0,%eax
3d61(4): cmove %eax,%r12d
3d65(3): add %r15,%rbx
3d68(5): call 0xffffd9a8(%rip)
3d6d(2): test %eax,%eax
3d6f(2): jz 0xffffff84(%rip)
3d71(3): mov %r12d,%edx
3d74(3): mov %rbx,%rdi
3d77(6): movzx 0x7d(%rsp),%r8d
3d7d(3): xor $0x1,%edx
3d80(5): movzx 0x7e(%rsp),%ebx
3d85(6): movzx 0x7f(%rsp),%r10d
3d8b(4): and 0xd(%rsp),%dl
3d8f(8): mov 0x80(%rsp),%r15
3d97(5): mov 0x40(%rsp),%r14
3d9c(5): mov 0x70(%rsp),%r13
3da1(5): mov 0x30(%rsp),%r11
3da6(4): cmp $0x1,%rdi
3daa(6): jbe 0x601(%rip)
3db0(3): mov %rdi,%rcx
3db3(2): xor %esi,%esi
3db5(6): movzx 0xf(%rsp),%r9d
3dbb(3): add %rbp,%rcx
3dbe(5): mov 0x10(%rsp),%rdi
3dc3(5): jmp 0xbb(%rip)
3dc8(8): nop 0x0(%rax,%rax,1)
3dd0(5): cmp $0x2,0x8(%rsp)
3dd5(3): setz %al
3dd8(3): test %r9b,%r9b
3ddb(6): jnz 0x4b5(%rip)
3de1(3): mov %r8d,%esi
3de4(3): xor $0x1,%esi
3de7(3): and %sil,%al
3dea(2): jz 0x31(%rip)
3dec(3): cmp %r15,%r13
3def(2): jbe 0x7(%rip)
3df1(5): mov $0x27,0x0(%r14,%r15,1)
3df6(4): lea 0x1(%r15),%rsi
3dfa(3): cmp %rsi,%r13
3dfd(2): jbe 0x8(%rip)
3dff(6): mov $0x24,0x1(%r14,%r15,1)
3e05(4): lea 0x2(%r15),%rsi
3e09(3): cmp %rsi,%r13
3e0c(2): jbe 0x8(%rip)
3e0e(6): mov $0x27,0x2(%r14,%r15,1)
3e14(4): add $0x3,%r15
3e18(3): mov %eax,%r8d
3e1b(3): cmp %r15,%r13
3e1e(2): jbe 0x7(%rip)
3e20(5): mov $0x5c,0x0(%r14,%r15,1)
3e25(4): lea 0x1(%r15),%rax
3e29(3): cmp %rax,%r13
3e2c(2): jbe 0xf(%rip)
3e2e(2): mov %ebx,%eax
3e30(3): shr $0x6,%al
3e33(3): add $0x30,%eax
3e36(5): mov %al,0x1(%r14,%r15,1)
3e3b(4): lea 0x2(%r15),%rax
3e3f(3): cmp %rax,%r13
3e42(2): jbe 0x12(%rip)
3e44(2): mov %ebx,%eax
3e46(3): shr $0x3,%al
3e49(3): and $0x7,%eax
3e4c(3): add $0x30,%eax
3e4f(5): mov %al,0x2(%r14,%r15,1)
3e54(3): and $0x7,%ebx
3e57(4): add $0x1,%rbp
3e5b(4): add $0x3,%r15
3e5f(3): add $0x30,%ebx
3e62(3): cmp %rcx,%rbp
3e65(6): jnb 0xfffff7eb(%rip)
3e6b(2): mov %edx,%esi
3e6d(3): cmp %r15,%r13
3e70(2): jbe 0x6(%rip)
3e72(4): mov %bl,0x0(%r14,%r15,1)
3e76(4): movzx 0x0(%rdi,%rbp,1),%ebx
3e7a(4): add $0x1,%r15
3e7e(2): test %dl,%dl
3e80(6): jnz 0xffffff50(%rip)
3e86(2): mov %esi,%eax
3e88(3): xor $0x1,%eax
3e8b(3): and %r8d,%eax
3e8e(3): test %r10b,%r10b
3e91(2): jz 0x10(%rip)
3e93(3): cmp %r15,%r13
3e96(2): jbe 0x7(%rip)
3e98(5): mov $0x5c,0x0(%r14,%r15,1)
3e9d(4): add $0x1,%r15
3ea1(4): add $0x1,%rbp
3ea5(3): cmp %rcx,%rbp
3ea8(6): jnb 0xfffff784(%rip)
3eae(2): test %al,%al
3eb0(6): jz 0x3fe(%rip)
3eb6(3): cmp %r15,%r13
3eb9(2): jbe 0x7(%rip)
3ebb(5): mov $0x27,0x0(%r14,%r15,1)
3ec0(4): lea 0x1(%r15),%rax
3ec4(3): cmp %rax,%r13
3ec7(2): jbe 0x8(%rip)
3ec9(6): mov $0x27,0x1(%r14,%r15,1)
3ecf(4): add $0x2,%r15
3ed3(3): xor %r10d,%r10d
3ed6(3): xor %r8d,%r8d
3ed9(2): jmp 0xffffff94(%rip)
3edb(5): nop 0x0(%rax,%rax,1)
3ee0(4): cmp $0x1,%r15
3ee4(6): jz 0xfffffe65(%rip)
3eea(5): mov 0x10(%rsp),%rdi
3eef(4): lea 0x0(%rdi,%r15,1),%rcx
3ef3(5): lea 0x1(%rdi,%r14,1),%rdx
3ef8(4): lea 0x0(%rcx,%r14,1),%r8
3efc(2): jmp 0x11(%rip)
3efe(2): nop 
3f00(4): add $0x1,%rdx
3f04(3): cmp %rdx,%r8
3f07(6): jz 0xfffffe42(%rip)
3f0d(3): movzx (%rdx),%ecx
3f10(3): sub $0x5b,%ecx
3f13(3): cmp $0x21,%cl
3f16(2): jnbe 0xffffffea(%rip)
3f18(5): mov $0x1,%esi
3f1d(3): shl/sal %cl,%rsi
3f20(3): mov %rsi,%rcx
3f23(a): mov $0x8589934635,%rsi
3f2d(3): test %rsi,%rcx
3f30(2): jz 0xffffffd0(%rip)
3f32(5): mov 0x40(%rsp),%r14
3f37(5): mov 0x70(%rsp),%r13
3f3c(5): mov 0x30(%rsp),%rbp
3f41(8): mov $0x2,0x8(%rsp)
3f49(5): cmp $0x0,0xd(%rsp)
3f4e(2): jz 0x12(%rip)
3f50(2): test %al,%al
3f52(5): mov $0x4,%eax
3f57(5): cmove 0x8(%rsp),%eax
3f5c(4): mov %eax,0x8(%rsp)
3f60(4): sub $0x8,%rsp
3f64(3): mov %rbp,%rcx
3f67(3): mov %r13,%rsi
3f6a(4): push 0x68(%rsp)
3f6e(4): push 0x78(%rsp)
3f72(3): mov %r14,%rdi
3f75(2): push $0x0
3f77(8): mov 0x98(%rsp),%r9d
3f7f(5): mov 0x28(%rsp),%r8d
3f84(5): mov 0x30(%rsp),%rdx
3f89(4): and $0xfd,%r9d
3f8d(5): call 0xfffff433(%rip)
3f92(4): add $0x20,%rsp
3f96(3): mov %rax,%r15
3f99(8): mov 0xa8(%rsp),%rbx
3fa1(9): xor $0x28,%rbx
3faa(3): mov %r15,%rax
3fad(6): jnz 0x606(%rip)
3fb3(7): add $0xb8,%rsp
3fba(1): pop %rbx
3fbb(1): pop %rbp
3fbc(2): pop %r12
3fbe(2): pop %r13
3fc0(2): pop %r14
3fc2(2): pop %r15
3fc4(1): ret near (%rsp)
3fc5(3): nop (%rax)
3fc8(3): mov %r11,%rbp
3fcb(5): jmp 0xffffff7e(%rip)
3fd0(3): cmp %r15,%r13
3fd3(2): jbe 0x7(%rip)
3fd5(5): mov $0x27,0x0(%r14,%r15,1)
3fda(4): lea 0x1(%r15),%rax
3fde(3): cmp %rax,%r13
3fe1(2): jbe 0x8(%rip)
3fe3(6): mov $0x5c,0x1(%r14,%r15,1)
3fe9(4): lea 0x2(%r15),%rax
3fed(3): cmp %rax,%r13
3ff0(6): jbe 0x5f2(%rip)
3ff6(3): mov %r13,%rdx
3ff9(6): mov $0x27,0x2(%r14,%r15,1)
3fff(5): mov 0x50(%rsp),%r13
4004(5): jmp 0xfffffbde(%rip)
4009(3): mov %r12d,%eax
400c(5): mov $0x30,%ebx
4011(3): xor %r12d,%r12d
4014(5): jmp 0xfffff605(%rip)
4019(6): mov $0x27,0x2(%r14,%r15,1)
401f(5): jmp 0xfffff9ca(%rip)
4024(2): test %ebx,%ebx
4026(6): jnz 0xfffff42d(%rip)
402c(5): mov $0x1,0xd(%rsp)
4031(3): test %r13,%r13
4034(6): jnz 0x596(%rip)
403a(7): lea 0x4ef4(%rip),%rax
4041(9): mov $0x0,0x50(%rsp)
404a(5): mov $0x1,0xe(%rsp)
404f(5): mov $0x0,0x7c(%rsp)
4054(3): xor %r12d,%r12d
4057(5): mov $0x0,0xf(%rsp)
405c(9): mov $0x1,0x18(%rsp)
4065(5): mov %rax,0x48(%rsp)
406a(6): mov $0x1,%r15d
4070(8): mov $0x2,0x8(%rsp)
4078(5): jmp 0xfffff41b(%rip)
407d(3): nop (%rax)
4080(2): test %ebx,%ebx
4082(6): jnz 0x3fb(%rip)
4088(3): test %r13,%r13
408b(6): jz 0x22b(%rip)
4091(4): mov $0x22,(%r14)
4095(5): mov $0x1,0xe(%rsp)
409a(3): xor %r12d,%r12d
409d(5): mov $0x0,0x7c(%rsp)
40a2(9): mov $0x0,0x50(%rsp)
40ab(7): lea 0x4e81(%rip),%rax
40b2(5): mov $0x0,0xf(%rsp)
40b7(5): mov $0x1,0xd(%rsp)
40bc(9): mov $0x1,0x18(%rsp)
40c5(6): mov $0x1,%r15d
40cb(5): mov %rax,0x48(%rsp)
40d0(5): jmp 0xfffff3c3(%rip)
40d5(7): lea 0x4e57(%rip),%rax
40dc(5): mov $0x1,0xe(%rsp)
40e1(5): mov $0x0,0x7c(%rsp)
40e6(3): xor %r12d,%r12d
40e9(9): mov $0x0,0x50(%rsp)
40f2(5): mov $0x1,0xf(%rsp)
40f7(5): mov $0x1,0xd(%rsp)
40fc(9): mov $0x1,0x18(%rsp)
4105(3): xor %r15d,%r15d
4108(5): mov %rax,0x48(%rsp)
410d(8): mov $0x5,0x8(%rsp)
4115(5): jmp 0xfffff37e(%rip)
411a(5): mov $0x1,0xe(%rsp)
411f(5): mov $0x0,0x7c(%rsp)
4124(3): xor %r12d,%r12d
4127(9): mov $0x0,0x50(%rsp)
4130(5): mov $0x0,0xf(%rsp)
4135(3): xor %r15d,%r15d
4138(5): mov $0x1,0xd(%rsp)
413d(9): mov $0x0,0x18(%rsp)
4146(9): mov $0x0,0x48(%rsp)
414f(5): jmp 0xfffff344(%rip)
4154(5): cmp $0xa,0x8(%rsp)
4159(2): jz 0x58(%rip)
415b(7): lea 0x4dd5(%rip),%rsi
4162(2): xor %edi,%edi
4164(5): mov $0x5,%edx
4169(5): call 0xffffd387(%rip)
416e(3): mov %rax,%rcx
4171(5): mov %rax,0x68(%rsp)
4176(7): lea 0x4dba(%rip),%rax
417d(3): cmp %rax,%rcx
4180(6): jz 0x39e(%rip)
4186(7): lea 0x4da8(%rip),%rsi
418d(2): xor %edi,%edi
418f(5): mov $0x5,%edx
4194(5): call 0xffffd35c(%rip)
4199(3): mov %rax,%rcx
419c(5): mov %rax,0x60(%rsp)
41a1(7): lea 0x4d8d(%rip),%rax
41a8(3): cmp %rax,%rcx
41ab(6): jz 0x389(%rip)
41b1(3): xor %r15d,%r15d
41b4(2): test %ebx,%ebx
41b6(6): jz 0x1c7(%rip)
41bc(2): test %ebx,%ebx
41be(5): mov 0x60(%rsp),%rbx
41c3(5): setnz 0xf(%rsp)
41c8(3): xor %r12d,%r12d
41cb(3): mov %rbx,%rdi
41ce(5): call 0xffffd342(%rip)
41d3(5): mov %rbx,0x48(%rsp)
41d8(5): mov %rax,0x18(%rsp)
41dd(5): mov $0x1,0xe(%rsp)
41e2(5): mov $0x0,0x7c(%rsp)
41e7(9): mov $0x0,0x50(%rsp)
41f0(5): mov $0x1,0xd(%rsp)
41f5(5): jmp 0xfffff29e(%rip)
41fa(5): mov $0x1,0xe(%rsp)
41ff(5): mov $0x0,0x7c(%rsp)
4204(3): xor %r12d,%r12d
4207(9): mov $0x0,0x50(%rsp)
4210(5): mov $0x0,0xf(%rsp)
4215(3): xor %r15d,%r15d
4218(5): mov $0x0,0xd(%rsp)
421d(9): mov $0x0,0x18(%rsp)
4226(9): mov $0x0,0x48(%rsp)
422f(5): jmp 0xfffff264(%rip)
4234(5): mov $0x1,0xe(%rsp)
4239(5): mov $0x0,0x7c(%rsp)
423e(3): xor %r12d,%r12d
4241(9): mov $0x0,0x50(%rsp)
424a(5): mov $0x1,0xf(%rsp)
424f(5): mov $0x1,0xd(%rsp)
4254(5): jmp 0xfffff21f(%rip)
4259(3): cmp %r15,%r13
425c(2): jbe 0x7(%rip)
425e(5): mov $0x30,0x0(%r14,%r15,1)
4263(4): lea 0x2(%rcx),%rax
4267(3): cmp %rax,%r13
426a(2): jbe 0x8(%rip)
426c(6): mov $0x30,0x2(%r14,%rcx,1)
4272(3): mov %r12d,%eax
4275(4): lea 0x3(%rcx),%r15
4279(3): xor %r12d,%r12d
427c(5): mov $0x30,%ebx
4281(5): jmp 0xfffff367(%rip)
4286(a): nop 0x0(%rax,%rax,1)
4290(5): movzx 0xf(%rsp),%ebx
4295(3): mov %r11,%rbp
4298(4): mov %bl,0xd(%rsp)
429c(5): jmp 0xfffffcad(%rip)
42a1(5): movzx 0xd(%rsp),%edx
42a6(3): xor %r12d,%r12d
42a9(5): jmp 0xfffffb07(%rip)
42ae(3): xor %r10d,%r10d
42b1(5): jmp 0xfffffbbc(%rip)
42b6(9): mov $0x0,0x50(%rsp)
42bf(5): mov $0x1,0xe(%rsp)
42c4(3): xor %r12d,%r12d
42c7(5): mov $0x0,0x7c(%rsp)
42cc(5): jmp 0xfffffddf(%rip)
42d1(5): mov 0x30(%rsp),%r11
42d6(3): mov %r14,%rsi
42d9(3): mov %r13,%rcx
42dc(3): mov %rbx,%rax
42df(3): mov %rbx,%rdi
42e2(6): movzx 0x7d(%rsp),%r8d
42e8(5): movzx 0x7e(%rsp),%ebx
42ed(8): mov 0x88(%rsp),%r9
42f5(3): cmp %r11,%rsi
42f8(6): movzx 0x7f(%rsp),%r10d
42fe(8): mov 0x80(%rsp),%r15
4306(5): mov 0x40(%rsp),%r14
430b(5): mov 0x70(%rsp),%r13
4310(2): jnb 0x28(%rip)
4312(3): cmp $0x0,(%rcx)
4315(2): jnz 0x12(%rip)
4317(2): jmp 0x21(%rip)
4319(7): nop 0x0(%rax)
4320(5): cmp $0x0,0x0(%r9,%rax,1)
4325(2): jz 0x10(%rip)
4327(4): add $0x1,%rax
432b(5): lea 0x0(%rbp,%rax,1),%rdx
4330(3): cmp %rdx,%r11
4333(2): jnbe 0xffffffed(%rip)
4335(3): mov %rax,%rdi
4338(5): movzx 0xd(%rsp),%edx
433d(3): xor %r12d,%r12d
4340(5): jmp 0xfffffa66(%rip)
4345(3): mov %rbx,%rdi
4348(6): movzx 0x7d(%rsp),%r8d
434e(5): movzx 0x7e(%rsp),%ebx
4353(6): movzx 0x7f(%rsp),%r10d
4359(8): mov 0x80(%rsp),%r15
4361(3): xor %r12d,%r12d
4364(5): mov 0x40(%rsp),%r14
4369(5): mov 0x70(%rsp),%r13
436e(5): mov 0x30(%rsp),%r11
4373(5): movzx 0xd(%rsp),%edx
4378(5): jmp 0xfffffa2e(%rip)
437d(5): mov 0x68(%rsp),%rdx
4382(3): movzx (%rdx),%eax
4385(2): test %al,%al
4387(6): jz 0xfffffe35(%rip)
438d(3): nop (%rax)
4390(3): cmp %r15,%r13
4393(2): jbe 0x6(%rip)
4395(4): mov %al,0x0(%r14,%r15,1)
4399(4): add $0x1,%r15
439d(5): movzx 0x0(%rdx,%r15,1),%eax
43a2(2): test %al,%al
43a4(2): jnz 0xffffffec(%rip)
43a6(5): jmp 0xfffffe16(%rip)
43ab(2): mov %edx,%eax
43ad(5): jmp 0xfffff55a(%rip)
43b2(4): movzx 0x0(%rax,%rcx,1),%ebx
43b6(3): cmp $0x3e,%bl
43b9(6): jnbe 0xfffff877(%rip)
43bf(a): mov $0x8070630310989004800,%rax
43c9(4): bt %rbx,%rax
43cd(6): jnb 0xfffff863(%rip)
43d3(5): cmp $0x0,0xf(%rsp)
43d8(6): jnz 0x1ea(%rip)
43de(3): cmp %r15,%r13
43e1(2): jbe 0x7(%rip)
43e3(5): mov $0x3f,0x0(%r14,%r15,1)
43e8(4): lea 0x1(%r15),%rax
43ec(3): cmp %rax,%r13
43ef(2): jbe 0x8(%rip)
43f1(6): mov $0x22,0x1(%r14,%r15,1)
43f7(4): lea 0x2(%r15),%rax
43fb(3): cmp %rax,%r13
43fe(2): jbe 0x8(%rip)
4400(6): mov $0x22,0x2(%r14,%r15,1)
4406(4): lea 0x3(%r15),%rax
440a(3): cmp %rax,%r13
440d(2): jbe 0x8(%rip)
440f(6): mov $0x3f,0x3(%r14,%r15,1)
4415(4): add $0x4,%r15
4419(2): xor %edx,%edx
441b(3): xor %r12d,%r12d
441e(2): xor %eax,%eax
4420(3): mov %rcx,%rbp
4423(5): jmp 0xfffff1c5(%rip)
4428(2): test %ebx,%ebx
442a(6): jz 0x18e(%rip)
4430(7): lea 0x4afe(%rip),%rax
4437(5): mov $0x1,0xe(%rsp)
443c(5): mov $0x0,0x7c(%rsp)
4441(3): xor %r12d,%r12d
4444(9): mov $0x0,0x50(%rsp)
444d(5): mov $0x1,0xf(%rsp)
4452(5): mov $0x0,0xd(%rsp)
4457(9): mov $0x1,0x18(%rsp)
4460(3): xor %r15d,%r15d
4463(5): mov %rax,0x48(%rsp)
4468(5): jmp 0xfffff02b(%rip)
446d(3): nop (%rax)
4470(3): mov %r11,%rbp
4473(5): movzx 0xf(%rsp),%eax
4478(5): jmp 0xfffffad1(%rip)
447d(7): lea 0x4aaf(%rip),%rax
4484(5): mov $0x1,0xe(%rsp)
4489(5): mov $0x0,0x7c(%rsp)
448e(3): xor %r12d,%r12d
4491(9): mov $0x0,0x50(%rsp)
449a(5): mov $0x1,0xf(%rsp)
449f(5): mov $0x1,0xd(%rsp)
44a4(9): mov $0x1,0x18(%rsp)
44ad(3): xor %r15d,%r15d
44b0(5): mov %rax,0x48(%rsp)
44b5(5): jmp 0xffffefde(%rip)
44ba(2): mov %edx,%eax
44bc(5): mov 0x48(%rsp),%rbx
44c1(3): test %rbx,%rbx
44c4(2): jz 0x2e(%rip)
44c6(2): test %al,%al
44c8(2): jz 0x2a(%rip)
44ca(3): movzx (%rbx),%ecx
44cd(3): mov %rbx,%rax
44d0(2): test %cl,%cl
44d2(2): jz 0x20(%rip)
44d4(3): mov %r15,%rdx
44d7(3): sub %r15,%rax
44da(3): cmp %rdx,%r13
44dd(2): jbe 0x6(%rip)
44df(4): mov %cl,0x0(%r14,%rdx,1)
44e3(4): add $0x1,%rdx
44e7(4): movzx 0x0(%rax,%rdx,1),%ecx
44eb(2): test %cl,%cl
44ed(2): jnz 0xffffffed(%rip)
44ef(3): mov %rdx,%r15
44f2(3): cmp %r15,%r13
44f5(6): jbe 0xfffffaa4(%rip)
44fb(5): mov $0x0,0x0(%r14,%r15,1)
4500(5): jmp 0xfffffa99(%rip)
4505(5): cmp $0x2,0x8(%rsp)
450a(5): movzx 0xf(%rsp),%ebx
450f(3): mov %r11,%rbp
4512(3): setz %al
4515(4): mov %bl,0xd(%rsp)
4519(5): jmp 0xfffffa30(%rip)
451e(4): mov 0x8(%rsp),%esi
4522(3): mov %rcx,%rdi
4525(5): call 0xffffedab(%rip)
452a(5): mov %rax,0x68(%rsp)
452f(5): jmp 0xfffffc57(%rip)
4534(4): mov 0x8(%rsp),%esi
4538(3): mov %rcx,%rdi
453b(5): call 0xffffed95(%rip)
4540(5): mov %rax,0x60(%rsp)
4545(5): jmp 0xfffffc6c(%rip)
454a(5): movzx 0xf(%rsp),%ebx
454f(3): mov %r11,%rbp
4552(2): mov %edx,%eax
4554(4): mov %bl,0xd(%rsp)
4558(5): jmp 0xfffff9f1(%rip)
455d(4): sub $0x8,%rsp
4561(6): mov $0x5,%r8d
4567(3): mov %r11,%rcx
456a(4): push 0x68(%rsp)
456e(4): push 0x78(%rsp)
4572(3): mov %r14,%rdi
4575(4): push 0x38(%rsp)
4579(8): mov 0x98(%rsp),%r9d
4581(5): mov 0x30(%rsp),%rdx
4586(5): mov 0x70(%rsp),%rsi
458b(5): call 0xffffee35(%rip)
4590(4): add $0x20,%rsp
4594(3): mov %rax,%r15
4597(5): jmp 0xfffffa02(%rip)
459c(5): movzx 0x7c(%rsp),%eax
45a1(5): jmp 0xffffff1b(%rip)
45a6(8): mov $0x2,0x8(%rsp)
45ae(5): jmp 0xfffff99b(%rip)
45b3(5): call 0xffffcf6d(%rip)
45b8(5): mov $0x0,0xd(%rsp)
45bd(5): jmp 0xfffffa74(%rip)
45c2(3): mov %r11,%rbp
45c5(5): jmp 0xfffff99b(%rip)
45ca(5): mov $0x1,0xe(%rsp)
45cf(2): xor %eax,%eax
45d1(3): xor %r12d,%r12d
45d4(9): mov $0x0,0x50(%rsp)
45dd(5): jmp 0xfffff5a7(%rip)
45e2(3): mov %r13,%rdx
45e5(5): mov 0x50(%rsp),%r13
45ea(5): jmp 0xfffff5f8(%rip)
45ef(5): call 0xffffce51(%rip)

"quotearg_n_options" :
4600(2): push %r15
4602(2): push %r14
4604(3): movsxd %edi,%r15
4607(2): push %r13
4609(2): push %r12
460b(3): mov %rdx,%r14
460e(1): push %rbp
460f(1): push %rbx
4610(3): mov %rcx,%rbp
4613(4): sub $0x28,%rsp
4617(5): mov %rsi,0x8(%rsp)
461c(5): call 0xffffce34(%rip)
4621(3): mov %rax,%r13
4624(2): mov (%rax),%eax
4626(3): test %r15d,%r15d
4629(7): mov 0x207a30(%rip),%rbx
4630(4): mov %eax,0x18(%rsp)
4634(6): js 0x16d(%rip)
463a(7): cmp %r15d,0x207a17(%rip)
4641(2): jnle 0x64(%rip)
4643(7): cmp $0x7fffffff,%r15d
464a(6): jz 0x15c(%rip)
4650(4): lea 0x1(%r15),%r12d
4654(7): lea 0x207a15(%rip),%rax
465b(3): movsxd %r12d,%rsi
465e(4): shl/sal $0x4,%rsi
4662(3): cmp %rax,%rbx
4665(6): jz 0x11b(%rip)
466b(3): mov %rbx,%rdi
466e(5): call 0x1362(%rip)
4673(3): mov %rax,%rbx
4676(7): mov %rax,0x2079e3(%rip)
467d(7): movsxd 0x2079d4(%rip),%rdi
4684(3): mov %r12d,%edx
4687(2): xor %esi,%esi
4689(2): sub %edi,%edx
468b(4): shl/sal $0x4,%rdi
468f(3): movsxd %edx,%rdx
4692(3): add %rbx,%rdi
4695(4): shl/sal $0x4,%rdx
4699(5): call 0xffffcf07(%rip)
469e(7): mov %r12d,0x2079b3(%rip)
46a5(3): mov 0x4(%rbp),%eax
46a8(4): shl/sal $0x4,%r15
46ac(4): sub $0x8,%rsp
46b0(3): add %r15,%rbx
46b3(4): lea 0x8(%rbp),%r15
46b7(4): mov 0x0(%rbp),%r8d
46bb(3): mov (%rbx),%r11
46be(4): mov 0x8(%rbx),%r12
46c2(3): mov %r14,%rcx
46c5(3): or $0x1,%eax
46c8(4): mov %eax,0x24(%rsp)
46cc(3): push 0x30(%rbp)
46cf(3): mov %eax,%r9d
46d2(3): push 0x28(%rbp)
46d5(2): push %r15
46d7(3): mov %r11,%rsi
46da(5): mov 0x28(%rsp),%rdx
46df(3): mov %r12,%rdi
46e2(5): mov %r11,0x30(%rsp)
46e7(5): call 0xffffecd9(%rip)
46ec(4): add $0x20,%rsp
46f0(5): mov 0x10(%rsp),%r11
46f5(3): cmp %rax,%r11
46f8(2): jnbe 0x69(%rip)
46fa(4): lea 0x1(%rax),%rsi
46fe(7): lea 0x2079db(%rip),%rax
4705(3): cmp %rax,%r12
4708(3): mov %rsi,(%rbx)
470b(2): jz 0x14(%rip)
470d(3): mov %r12,%rdi
4710(5): mov %rsi,0x10(%rsp)
4715(5): call 0xffffcd1b(%rip)
471a(5): mov 0x10(%rsp),%rsi
471f(3): mov %rsi,%rdi
4722(5): mov %rsi,0x10(%rsp)
4727(5): call 0x1249(%rip)
472c(4): sub $0x8,%rsp
4730(4): mov %rax,0x8(%rbx)
4734(4): mov 0x0(%rbp),%r8d
4738(3): push 0x30(%rbp)
473b(3): push 0x28(%rbp)
473e(3): mov %r14,%rcx
4741(2): push %r15
4743(5): mov 0x3c(%rsp),%r9d
4748(3): mov %rax,%rdi
474b(5): mov 0x28(%rsp),%rdx
4750(5): mov 0x30(%rsp),%rsi
4755(3): mov %rax,%r12
4758(5): call 0xffffec68(%rip)
475d(4): add $0x20,%rsp
4761(4): mov 0x18(%rsp),%eax
4765(4): mov %eax,0x0(%r13)
4769(4): add $0x28,%rsp
476d(3): mov %r12,%rax
4770(1): pop %rbx
4771(1): pop %rbp
4772(2): pop %r12
4774(2): pop %r13
4776(2): pop %r14
4778(2): pop %r15
477a(1): ret near (%rsp)
477b(5): nop 0x0(%rax,%rax,1)
4780(2): xor %edi,%edi
4782(5): call 0x124e(%rip)
4787(8): movdqa 0x2078e1(%rip),%xmm0
478f(3): mov %rax,%rbx
4792(7): mov %rax,0x2078c7(%rip)
4799(3): movups %xmm0,(%rax)
479c(5): jmp 0xfffffee1(%rip)
47a1(5): call 0xffffcc9f(%rip)
47a6(5): call 0x141a(%rip)

"clone_quoting_options" :
47b0(2): push %r12
47b2(1): push %rbp
47b3(1): push %rbx
47b4(3): mov %rdi,%rbx
47b7(5): call 0xffffcc99(%rip)
47bc(3): mov (%rax),%r12d
47bf(3): mov %rax,%rbp
47c2(7): lea 0x207a17(%rip),%rax
47c9(3): test %rbx,%rbx
47cc(5): mov $0x38,%esi
47d1(4): cmove %rax,%rbx
47d5(3): mov %rbx,%rdi
47d8(5): call 0x1398(%rip)
47dd(4): mov %r12d,0x0(%rbp)
47e1(1): pop %rbx
47e2(1): pop %rbp
47e3(2): pop %r12
47e5(1): ret near (%rsp)

"get_quoting_style" :
47f0(7): lea 0x2079e9(%rip),%rax
47f7(3): test %rdi,%rdi
47fa(4): cmove %rax,%rdi
47fe(2): mov (%rdi),%eax
4800(1): ret near (%rsp)

"set_quoting_style" :
4810(7): lea 0x2079c9(%rip),%rax
4817(3): test %rdi,%rdi
481a(4): cmove %rax,%rdi
481e(2): mov %esi,(%rdi)
4820(1): ret near (%rsp)

"set_char_quoting" :
4830(7): lea 0x2079a9(%rip),%rax
4837(3): test %rdi,%rdi
483a(2): mov %esi,%ecx
483c(4): cmove %rax,%rdi
4840(2): mov %esi,%eax
4842(3): and $0x1f,%ecx
4845(3): shr $0x5,%al
4848(3): movzx %al,%eax
484b(5): lea 0x8(%rdi,%rax,4),%rdi
4850(2): mov (%rdi),%esi
4852(2): mov %esi,%eax
4854(2): shr %cl,%eax
4856(2): xor %eax,%edx
4858(3): and $0x1,%eax
485b(3): and $0x1,%edx
485e(2): shl/sal %cl,%edx
4860(2): xor %esi,%edx
4862(2): mov %edx,(%rdi)
4864(1): ret near (%rsp)

"set_quoting_flags" :
4870(7): lea 0x207969(%rip),%rax
4877(3): test %rdi,%rdi
487a(4): cmove %rax,%rdi
487e(3): mov 0x4(%rdi),%eax
4881(3): mov %esi,0x4(%rdi)
4884(1): ret near (%rsp)

"set_custom_quoting" :
4890(7): lea 0x207949(%rip),%rax
4897(3): test %rdi,%rdi
489a(4): cmove %rax,%rdi
489e(3): test %rsi,%rsi
48a1(6): mov $0xa,(%rdi)
48a7(2): jz 0x10(%rip)
48a9(3): test %rdx,%rdx
48ac(2): jz 0xb(%rip)
48ae(4): mov %rsi,0x28(%rdi)
48b2(4): mov %rdx,0x30(%rdi)
48b6(1): ret near (%rsp)
48b7(4): sub $0x8,%rsp
48bb(5): call 0xffffcb85(%rip)

"quotearg_buffer" :
48c0(2): push %r15
48c2(2): push %r14
48c4(7): lea 0x207915(%rip),%rax
48cb(2): push %r13
48cd(2): push %r12
48cf(3): mov %rdi,%r13
48d2(1): push %rbp
48d3(1): push %rbx
48d4(3): mov %r8,%rbx
48d7(3): mov %rsi,%r14
48da(3): mov %rdx,%r15
48dd(4): sub $0x18,%rsp
48e1(3): test %r8,%r8
48e4(4): cmove %rax,%rbx
48e8(5): mov %rcx,0x8(%rsp)
48ed(5): call 0xffffcb63(%rip)
48f2(3): mov (%rax),%r12d
48f5(3): mov %rax,%rbp
48f8(4): lea 0x8(%rbx),%rax
48fc(4): sub $0x8,%rsp
4900(4): mov 0x4(%rbx),%r9d
4904(3): push 0x30(%rbx)
4907(3): mov (%rbx),%r8d
490a(3): push 0x28(%rbx)
490d(3): mov %r15,%rdx
4910(1): push %rax
4911(5): mov 0x28(%rsp),%rcx
4916(3): mov %r14,%rsi
4919(3): mov %r13,%rdi
491c(5): call 0xffffeaa4(%rip)
4921(4): mov %r12d,0x0(%rbp)
4925(4): add $0x38,%rsp
4929(1): pop %rbx
492a(1): pop %rbp
492b(2): pop %r12
492d(2): pop %r13
492f(2): pop %r14
4931(2): pop %r15
4933(1): ret near (%rsp)

"quotearg_alloc_mem" :
4940(2): push %r15
4942(2): push %r14
4944(7): lea 0x207895(%rip),%rax
494b(2): push %r13
494d(2): push %r12
494f(3): mov %rdx,%r12
4952(1): push %rbp
4953(1): push %rbx
4954(3): mov %rcx,%rbx
4957(3): mov %rdi,%r14
495a(3): mov %rsi,%r15
495d(4): sub $0x38,%rsp
4961(3): test %rcx,%rcx
4964(4): cmove %rax,%rbx
4968(2): xor %ebp,%ebp
496a(5): call 0xffffcae6(%rip)
496f(3): test %r12,%r12
4972(3): mov %rax,%r13
4975(2): mov (%rax),%eax
4977(4): setz %bpl
497b(3): or 0x4(%rbx),%ebp
497e(4): lea 0x8(%rbx),%r10
4982(4): sub $0x8,%rsp
4986(3): mov (%rbx),%r8d
4989(3): mov %r15,%rcx
498c(4): mov %eax,0x14(%rsp)
4990(3): push 0x30(%rbx)
4993(3): mov %r14,%rdx
4996(3): push 0x28(%rbx)
4999(2): push %r10
499b(2): xor %esi,%esi
499d(3): mov %ebp,%r9d
49a0(2): xor %edi,%edi
49a2(5): mov %r10,0x40(%rsp)
49a7(5): call 0xffffea19(%rip)
49ac(4): lea 0x1(%rax),%rsi
49b0(5): mov %rax,0x48(%rsp)
49b5(4): add $0x20,%rsp
49b9(3): mov %rsi,%rdi
49bc(5): mov %rsi,0x18(%rsp)
49c1(5): call 0xfaf(%rip)
49c6(5): mov %rax,0x10(%rsp)
49cb(4): sub $0x8,%rsp
49cf(3): push 0x30(%rbx)
49d2(3): push 0x28(%rbx)
49d5(5): mov 0x38(%rsp),%r10
49da(3): mov %ebp,%r9d
49dd(3): mov (%rbx),%r8d
49e0(3): mov %r15,%rcx
49e3(3): mov %r14,%rdx
49e6(3): mov %rax,%rdi
49e9(2): push %r10
49eb(5): mov 0x38(%rsp),%rsi
49f0(5): call 0xffffe9d0(%rip)
49f5(4): mov 0x2c(%rsp),%eax
49f9(4): add $0x20,%rsp
49fd(3): test %r12,%r12
4a00(4): mov %eax,0x0(%r13)
4a04(2): jz 0xb(%rip)
4a06(5): mov 0x28(%rsp),%r11
4a0b(4): mov %r11,(%r12)
4a0f(5): mov 0x10(%rsp),%rax
4a14(4): add $0x38,%rsp
4a18(1): pop %rbx
4a19(1): pop %rbp
4a1a(2): pop %r12
4a1c(2): pop %r13
4a1e(2): pop %r14
4a20(2): pop %r15
4a22(1): ret near (%rsp)

"quotearg_alloc" :
4a30(3): mov %rdx,%rcx
4a33(2): xor %edx,%edx
4a35(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4a40(6): mov 0x207612(%rip),%eax
4a46(2): push %r12
4a48(7): mov 0x207611(%rip),%r12
4a4f(1): push %rbp
4a50(1): push %rbx
4a51(3): cmp $0x1,%eax
4a54(2): jle 0x2d(%rip)
4a56(3): sub $0x2,%eax
4a59(5): lea 0x18(%r12),%rbx
4a5e(4): shl/sal $0x4,%rax
4a62(5): lea 0x28(%r12,%rax,1),%rbp
4a67(9): nop 0x0(%rax,%rax,1)
4a70(3): mov (%rbx),%rdi
4a73(4): add $0x10,%rbx
4a77(5): call 0xffffc9b9(%rip)
4a7c(3): cmp %rbp,%rbx
4a7f(2): jnz 0xfffffff1(%rip)
4a81(5): mov 0x8(%r12),%rdi
4a86(7): lea 0x207653(%rip),%rbx
4a8d(3): cmp %rbx,%rdi
4a90(2): jz 0x19(%rip)
4a92(5): call 0xffffc99e(%rip)
4a97(b): mov $0x100,0x2075ce(%rip)
4aa2(7): mov %rbx,0x2075cf(%rip)
4aa9(7): lea 0x2075c0(%rip),%rbx
4ab0(3): cmp %rbx,%r12
4ab3(2): jz 0x11(%rip)
4ab5(3): mov %r12,%rdi
4ab8(5): call 0xffffc978(%rip)
4abd(7): mov %rbx,0x20759c(%rip)
4ac4(1): pop %rbx
4ac5(a): mov $0x1,0x207589(%rip)
4acf(1): pop %rbp
4ad0(2): pop %r12
4ad2(1): ret near (%rsp)

"quotearg_n" :
4ae0(7): lea 0x2076f9(%rip),%rcx
4ae7(7): mov $0xffffffff,%rdx
4aee(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4b00(7): lea 0x2076d9(%rip),%rcx
4b07(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4b10(7): lea 0x2076c9(%rip),%rcx
4b17(3): mov %rdi,%rsi
4b1a(7): mov $0xffffffff,%rdx
4b21(2): xor %edi,%edi
4b23(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4b30(7): lea 0x2076a9(%rip),%rcx
4b37(3): mov %rsi,%rdx
4b3a(3): mov %rdi,%rsi
4b3d(2): xor %edi,%edi
4b3f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4b50(4): sub $0x48,%rsp
4b54(3): mov %rdx,%rax
4b57(9): mov $0x28,%rdx
4b60(5): mov %rdx,0x38(%rsp)
4b65(2): xor %edx,%edx
4b67(3): cmp $0xa,%esi
4b6a(2): jz 0x6a(%rip)
4b6c(3): mov %esi,(%rsp)
4b6f(3): mov %rsp,%rcx
4b72(7): mov $0xffffffff,%rdx
4b79(3): mov %rax,%rsi
4b7c(9): mov $0x0,0x4(%rsp)
4b85(9): mov $0x0,0xc(%rsp)
4b8e(9): mov $0x0,0x14(%rsp)
4b97(9): mov $0x0,0x1c(%rsp)
4ba0(9): mov $0x0,0x24(%rsp)
4ba9(9): mov $0x0,0x2c(%rsp)
4bb2(8): mov $0x0,0x34(%rsp)
4bba(5): call 0xfffffa46(%rip)
4bbf(5): mov 0x38(%rsp),%rcx
4bc4(9): xor $0x28,%rcx
4bcd(2): jnz 0xc(%rip)
4bcf(4): add $0x48,%rsp
4bd3(1): ret near (%rsp)
4bd4(5): call 0xffffc86c(%rip)
4bd9(5): call 0xffffc947(%rip)

"quotearg_n_style_mem" :
4be0(4): sub $0x48,%rsp
4be4(3): mov %rdx,%rax
4be7(3): mov %rcx,%rdx
4bea(9): mov $0x28,%rcx
4bf3(5): mov %rcx,0x38(%rsp)
4bf8(2): xor %ecx,%ecx
4bfa(3): cmp $0xa,%esi
4bfd(2): jz 0x63(%rip)
4bff(3): mov %esi,(%rsp)
4c02(3): mov %rsp,%rcx
4c05(3): mov %rax,%rsi
4c08(9): mov $0x0,0x4(%rsp)
4c11(9): mov $0x0,0xc(%rsp)
4c1a(9): mov $0x0,0x14(%rsp)
4c23(9): mov $0x0,0x1c(%rsp)
4c2c(9): mov $0x0,0x24(%rsp)
4c35(9): mov $0x0,0x2c(%rsp)
4c3e(8): mov $0x0,0x34(%rsp)
4c46(5): call 0xfffff9ba(%rip)
4c4b(5): mov 0x38(%rsp),%rdx
4c50(9): xor $0x28,%rdx
4c59(2): jnz 0xc(%rip)
4c5b(4): add $0x48,%rsp
4c5f(1): ret near (%rsp)
4c60(5): call 0xffffc7e0(%rip)
4c65(5): call 0xffffc8bb(%rip)

"quotearg_style" :
4c70(3): mov %rsi,%rdx
4c73(2): mov %edi,%esi
4c75(2): xor %edi,%edi
4c77(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4c80(3): mov %rdx,%rcx
4c83(3): mov %rsi,%rdx
4c86(2): mov %edi,%esi
4c88(2): xor %edi,%edi
4c8a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4c90(4): sub $0x48,%rsp
4c94(2): mov %edx,%ecx
4c96(9): mov $0x28,%rax
4c9f(5): mov %rax,0x38(%rsp)
4ca4(2): xor %eax,%eax
4ca6(7): mov 0x207563(%rip),%rax
4cad(3): mov %rsp,%r8
4cb0(3): and $0x1f,%ecx
4cb3(8): movdqa 0x207525(%rip),%xmm0
4cbb(5): mov %rax,0x30(%rsp)
4cc0(2): mov %edx,%eax
4cc2(4): movaps %xmm0,(%rsp)
4cc6(3): shr $0x5,%al
4cc9(3): movzx %al,%eax
4ccc(5): lea 0x8(%r8,%rax,4),%r9
4cd1(8): movdqa 0x207517(%rip),%xmm0
4cd9(5): movaps %xmm0,0x10(%rsp)
4cde(8): movdqa 0x20751a(%rip),%xmm0
4ce6(5): movaps %xmm0,0x20(%rsp)
4ceb(3): mov (%r9),%edx
4cee(2): mov %edx,%eax
4cf0(2): shr %cl,%eax
4cf2(2): not %eax
4cf4(3): and $0x1,%eax
4cf7(2): shl/sal %cl,%eax
4cf9(3): mov %r8,%rcx
4cfc(2): xor %edx,%eax
4cfe(3): mov %rsi,%rdx
4d01(3): mov %rdi,%rsi
4d04(3): mov %eax,(%r9)
4d07(2): xor %edi,%edi
4d09(5): call 0xfffff8f7(%rip)
4d0e(5): mov 0x38(%rsp),%rsi
4d13(9): xor $0x28,%rsi
4d1c(2): jnz 0x7(%rip)
4d1e(4): add $0x48,%rsp
4d22(1): ret near (%rsp)
4d23(5): call 0xffffc7fd(%rip)

"quotearg_char" :
4d30(4): movsx %sil,%edx
4d34(7): mov $0xffffffff,%rsi
4d3b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4d40(5): mov $0x3a,%edx
4d45(7): mov $0xffffffff,%rsi
4d4c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4d60(5): mov $0x3a,%edx
4d65(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4d70(4): sub $0x48,%rsp
4d74(3): mov %rdx,%rax
4d77(9): mov $0x28,%rdx
4d80(5): mov %rdx,0x38(%rsp)
4d85(2): xor %edx,%edx
4d87(3): cmp $0xa,%esi
4d8a(2): jz 0x6a(%rip)
4d8c(3): mov %esi,(%rsp)
4d8f(3): mov %rsp,%rcx
4d92(7): mov $0xffffffff,%rdx
4d99(3): mov %rax,%rsi
4d9c(9): mov $0x0,0x4(%rsp)
4da5(9): mov $0x4000000,0xc(%rsp)
4dae(9): mov $0x0,0x14(%rsp)
4db7(9): mov $0x0,0x1c(%rsp)
4dc0(9): mov $0x0,0x24(%rsp)
4dc9(9): mov $0x0,0x2c(%rsp)
4dd2(8): mov $0x0,0x34(%rsp)
4dda(5): call 0xfffff826(%rip)
4ddf(5): mov 0x38(%rsp),%rcx
4de4(9): xor $0x28,%rcx
4ded(2): jnz 0xc(%rip)
4def(4): add $0x48,%rsp
4df3(1): ret near (%rsp)
4df4(5): call 0xffffc64c(%rip)
4df9(5): call 0xffffc727(%rip)

"quotearg_n_custom_mem" :
4e00(4): sub $0x48,%rsp
4e04(3): mov %rcx,%r9
4e07(7): mov 0x207402(%rip),%rcx
4e0e(8): movdqa 0x2073ca(%rip),%xmm0
4e16(9): mov $0x28,%rax
4e1f(5): mov %rax,0x38(%rsp)
4e24(2): xor %eax,%eax
4e26(4): movaps %xmm0,(%rsp)
4e2a(3): test %rsi,%rsi
4e2d(5): mov %rcx,0x30(%rsp)
4e32(7): mov $0xa,(%rsp)
4e39(8): movdqa 0x2073af(%rip),%xmm0
4e41(5): movaps %xmm0,0x10(%rsp)
4e46(8): movdqa 0x2073b2(%rip),%xmm0
4e4e(5): movaps %xmm0,0x20(%rsp)
4e53(2): jz 0x34(%rip)
4e55(3): test %rdx,%rdx
4e58(2): jz 0x2f(%rip)
4e5a(5): mov %rsi,0x28(%rsp)
4e5f(5): mov %rdx,0x30(%rsp)
4e64(3): mov %rsp,%rcx
4e67(3): mov %r8,%rdx
4e6a(3): mov %r9,%rsi
4e6d(5): call 0xfffff793(%rip)
4e72(5): mov 0x38(%rsp),%rdi
4e77(9): xor $0x28,%rdi
4e80(2): jnz 0xc(%rip)
4e82(4): add $0x48,%rsp
4e86(1): ret near (%rsp)
4e87(5): call 0xffffc5b9(%rip)
4e8c(5): call 0xffffc694(%rip)

"quotearg_n_custom" :
4ea0(7): mov $0xffffffff,%r8
4ea7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4eb0(3): mov %rdx,%rcx
4eb3(7): mov $0xffffffff,%r8
4eba(3): mov %rsi,%rdx
4ebd(3): mov %rdi,%rsi
4ec0(2): xor %edi,%edi
4ec2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4ed0(3): mov %rcx,%r8
4ed3(3): mov %rdx,%rcx
4ed6(3): mov %rsi,%rdx
4ed9(3): mov %rdi,%rsi
4edc(2): xor %edi,%edi
4ede(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4ef0(7): lea 0x207129(%rip),%rcx
4ef7(5): jmp 0xfffff709(%rip)

"quote_mem" :
4f00(7): lea 0x207119(%rip),%rcx
4f07(3): mov %rsi,%rdx
4f0a(3): mov %rdi,%rsi
4f0d(2): xor %edi,%edi
4f0f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4f20(7): lea 0x2070f9(%rip),%rcx
4f27(7): mov $0xffffffff,%rdx
4f2e(5): jmp 0xfffff6d2(%rip)

"quote" :
4f40(7): lea 0x2070d9(%rip),%rcx
4f47(3): mov %rdi,%rsi
4f4a(7): mov $0xffffffff,%rdx
4f51(2): xor %edi,%edi
4f53(5): jmp 0xfffff6ad(%rip)

"fwrite_success_callback" :
4f60(4): sub $0x8,%rsp
4f64(3): mov %rdx,%rcx
4f67(3): mov %rsi,%rdx
4f6a(5): mov $0x1,%esi
4f6f(5): call 0xffffc781(%rip)
4f74(2): xor %eax,%eax
4f76(4): add $0x8,%rsp
4f7a(1): ret near (%rsp)

"fallback_failure_callback" :
4f80(2): mov %edi,%ecx
4f82(4): sub $0x8,%rsp
4f86(3): mov %rdx,%rdi
4f89(6): cmp $0xffff,%ecx
4f8f(2): jbe 0x21(%rip)
4f91(7): lea 0x4477(%rip),%rdx
4f98(5): mov $0x1,%esi
4f9d(2): xor %eax,%eax
4f9f(5): call 0xffffc761(%rip)
4fa4(7): mov $0xffffffff,%rax
4fab(4): add $0x8,%rsp
4faf(1): ret near (%rsp)
4fb0(7): lea 0x4451(%rip),%rdx
4fb7(5): mov $0x1,%esi
4fbc(2): xor %eax,%eax
4fbe(5): call 0xffffc742(%rip)
4fc3(7): mov $0xffffffff,%rax
4fca(4): add $0x8,%rsp
4fce(1): ret near (%rsp)

"exit_failure_callback" :
4fd0(1): push %rbp
4fd1(1): push %rbx
4fd2(5): mov $0x5,%edx
4fd7(2): mov %edi,%ebx
4fd9(4): sub $0x8,%rsp
4fdd(3): test %rsi,%rsi
4fe0(2): jz 0x48(%rip)
4fe2(2): xor %edi,%edi
4fe4(5): call 0xffffc50c(%rip)
4fe9(7): lea 0x4498(%rip),%rsi
4ff0(3): mov %rax,%rbp
4ff3(5): mov $0x5,%edx
4ff8(2): xor %edi,%edi
4ffa(5): call 0xffffc4f6(%rip)
4fff(3): mov %rbp,%r8
5002(2): mov %ebx,%ecx
5004(3): mov %rax,%rdx
5007(2): xor %esi,%esi
5009(2): xor %eax,%eax
500b(5): mov $0x1,%edi
5010(5): call 0xffffc6a0(%rip)
5015(4): add $0x8,%rsp
5019(7): mov $0xffffffff,%rax
5020(1): pop %rbx
5021(1): pop %rbp
5022(1): ret near (%rsp)
5023(5): nop 0x0(%rax,%rax,1)
5028(7): lea 0x4429(%rip),%rsi
502f(2): xor %edi,%edi
5031(5): call 0xffffc4bf(%rip)
5036(2): mov %ebx,%ecx
5038(3): mov %rax,%rdx
503b(2): xor %esi,%esi
503d(2): xor %eax,%eax
503f(5): mov $0x1,%edi
5044(5): call 0xffffc66c(%rip)
5049(4): add $0x8,%rsp
504d(7): mov $0xffffffff,%rax
5054(1): pop %rbx
5055(1): pop %rbp
5056(1): ret near (%rsp)

"unicode_to_mb" :
5060(2): push %r15
5062(2): push %r14
5064(3): mov %rsi,%r14
5067(2): push %r13
5069(2): push %r12
506b(3): mov %rdx,%r12
506e(1): push %rbp
506f(1): push %rbx
5070(3): mov %rcx,%rbp
5073(2): mov %edi,%ebx
5075(4): sub $0x78,%rsp
5079(9): mov $0x28,%rax
5082(5): mov %rax,0x68(%rsp)
5087(2): xor %eax,%eax
5089(6): mov 0x207195(%rip),%eax
508f(2): test %eax,%eax
5091(6): jz 0xaf(%rip)
5097(6): mov 0x207183(%rip),%edx
509d(2): test %edx,%edx
509f(2): jnz 0x21(%rip)
50a1(8): cmp $0xffffffff,0x20716f(%rip)
50a9(2): jnz 0x17(%rip)
50ab(3): mov %rbp,%rdx
50ae(7): lea 0x436d(%rip),%rsi
50b5(2): mov %ebx,%edi
50b7(3): call %r12
50ba(2): jmp 0x2a(%rip)
50bc(4): nop 0x0(%rax)
50c0(3): cmp $0x7f,%ebx
50c3(2): jnbe 0x4d(%rip)
50c5(5): lea 0x3a(%rsp),%r13
50ca(4): mov %bl,0x3a(%rsp)
50ce(5): mov $0x1,%esi
50d3(2): test %edx,%edx
50d5(6): jz 0xdb(%rip)
50db(3): mov %rbp,%rdx
50de(3): mov %r13,%rdi
50e1(3): call %r14
50e4(5): mov 0x68(%rsp),%rbx
50e9(9): xor $0x28,%rbx
50f2(6): jnz 0x175(%rip)
50f8(4): add $0x78,%rsp
50fc(1): pop %rbx
50fd(1): pop %rbp
50fe(2): pop %r12
5100(2): pop %r13
5102(2): pop %r14
5104(2): pop %r15
5106(1): ret near (%rsp)
5107(9): nop 0x0(%rax,%rax,1)
5110(5): lea 0x3a(%rsp),%r13
5115(5): mov $0x6,%edx
511a(2): mov %ebx,%esi
511c(3): mov %r13,%rdi
511f(5): call 0x181(%rip)
5124(2): test %eax,%eax
5126(2): jns 0x5a(%rip)
5128(3): mov %rbp,%rdx
512b(7): lea 0x430a(%rip),%rsi
5132(2): mov %ebx,%edi
5134(3): call %r12
5137(2): jmp 0xffffffad(%rip)
5139(7): nop 0x0(%rax)
5140(7): lea 0x42cf(%rip),%r13
5147(5): call 0x1049(%rip)
514c(5): mov $0x6,%ecx
5151(3): mov %rax,%rsi
5154(3): mov %r13,%rdi
5157(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5159(3): setnbe %cl
515c(3): sbb $0x0,%cl
515f(2): xor %edx,%edx
5161(3): movsx %cl,%ecx
5164(2): test %ecx,%ecx
5166(3): setz %dl
5169(6): mov %edx,0x2070b1(%rip)
516f(2): jnz 0x21(%rip)
5171(a): mov $0x1,0x2070a9(%rip)
517b(5): jmp 0xffffff22(%rip)
5180(6): mov 0x20709a(%rip),%edx
5186(3): movsxd %eax,%rsi
5189(5): jmp 0xffffff4a(%rip)
518e(2): nop 
5190(3): mov %r13,%rsi
5193(3): mov %rax,%rdi
5196(5): call 0xffffc5aa(%rip)
519b(4): cmp $0xffffffff,%rax
519f(7): mov %rax,0x207072(%rip)
51a6(2): jz 0x72(%rip)
51a8(6): mov 0x207072(%rip),%edx
51ae(2): jmp 0xffffffc3(%rip)
51b0(5): lea 0x28(%rsp),%rax
51b5(5): lea 0x30(%rsp),%r15
51ba(7): mov 0x207057(%rip),%rdi
51c1(5): mov %r13,0x18(%rsp)
51c6(5): mov %rsi,0x20(%rsp)
51cb(5): lea 0x40(%rsp),%r13
51d0(5): lea 0x20(%rsp),%rdx
51d5(5): lea 0x18(%rsp),%rsi
51da(3): mov %r15,%r8
51dd(3): mov %rax,%rcx
51e0(5): mov %r13,0x28(%rsp)
51e5(9): mov $0x19,0x30(%rsp)
51ee(5): mov %rax,0x8(%rsp)
51f3(5): call 0xffffc29d(%rip)
51f8(6): cmp $0x0,0x20(%rsp)
51fe(2): jnz 0x8(%rip)
5200(4): cmp $0xffffffff,%rax
5204(2): jnz 0x2f(%rip)
5206(3): mov %rbp,%rdx
5209(2): xor %esi,%esi
520b(2): mov %ebx,%edi
520d(3): call %r12
5210(5): jmp 0xfffffed4(%rip)
5215(3): nop (%rax)
5218(7): lea 0x41fd(%rip),%rdi
521f(3): mov %r13,%rsi
5222(5): call 0xffffc51e(%rip)
5227(7): mov %rax,0x206fea(%rip)
522e(5): jmp 0xffffff7a(%rip)
5233(5): mov 0x8(%rsp),%rcx
5238(7): mov 0x206fd9(%rip),%rdi
523f(2): xor %edx,%edx
5241(2): xor %esi,%esi
5243(3): mov %r15,%r8
5246(5): call 0xffffc24a(%rip)
524b(4): cmp $0xffffffff,%rax
524f(2): jz 0xffffffb7(%rip)
5251(5): mov 0x28(%rsp),%rsi
5256(3): mov %rbp,%rdx
5259(3): mov %r13,%rdi
525c(3): sub %r13,%rsi
525f(3): call %r14
5262(5): jmp 0xfffffe82(%rip)
5267(5): call 0xffffc2b9(%rip)

"print_unicode_char" :
5270(2): test %edx,%edx
5272(7): lea 0xfffffd07(%rip),%rax
5279(7): lea 0xfffffd50(%rip),%rdx
5280(3): mov %rdi,%rcx
5283(2): mov %esi,%edi
5285(7): lea 0xfffffcd4(%rip),%rsi
528c(4): cmove %rax,%rdx
5290(5): jmp 0xfffffdd0(%rip)

"u8_uctomb_aux" :
52a0(3): cmp $0x7f,%esi
52a3(6): jbe 0x9d(%rip)
52a9(6): cmp $0x7ff,%esi
52af(2): jbe 0x51(%rip)
52b1(6): cmp $0xffff,%esi
52b7(2): jnbe 0x59(%rip)
52b9(6): lea 0xffff2800(%rsi),%eax
52bf(5): cmp $0x7ff,%eax
52c4(6): jbe 0x82(%rip)
52ca(3): cmp $0x2,%edx
52cd(2): jle 0x73(%rip)
52cf(5): mov $0x3,%eax
52d4(2): mov %esi,%edx
52d6(3): shr $0x6,%esi
52d9(3): and $0x3f,%edx
52dc(6): or $0x800,%esi
52e2(3): or $0x80,%edx
52e5(3): mov %dl,0x2(%rdi)
52e8(2): mov %esi,%edx
52ea(3): shr $0x6,%esi
52ed(3): and $0x3f,%edx
52f0(4): or $0xc0,%sil
52f4(3): or $0x80,%edx
52f7(3): mov %sil,(%rdi)
52fa(3): mov %dl,0x1(%rdi)
52fd(1): ret near (%rsp)
52fe(2): nop 
5300(3): cmp $0x1,%edx
5303(2): jle 0x3d(%rip)
5305(5): mov $0x2,%eax
530a(2): jmp 0xffffffde(%rip)
530c(4): nop 0x0(%rax)
5310(6): cmp $0x10ffff,%esi
5316(2): jnbe 0x30(%rip)
5318(3): cmp $0x3,%edx
531b(2): jle 0x25(%rip)
531d(2): mov %esi,%eax
531f(3): shr $0x6,%esi
5322(3): and $0x3f,%eax
5325(6): or $0x10000,%esi
532b(3): or $0x80,%eax
532e(3): mov %al,0x3(%rdi)
5331(5): mov $0x4,%eax
5336(2): jmp 0xffffff9e(%rip)
5338(8): nop 0x0(%rax,%rax,1)
5340(5): mov $0xfffffffe,%eax
5345(1): ret near (%rsp)
5346(5): mov $0xffffffff,%eax
534b(1): ret near (%rsp)

"version_etc_arn" :
5350(2): push %r15
5352(2): push %r14
5354(2): push %r13
5356(2): push %r12
5358(3): mov %r9,%r12
535b(1): push %rbp
535c(1): push %rbx
535d(3): mov %rdi,%rbp
5360(3): mov %r8,%rbx
5363(4): sub $0x28,%rsp
5367(3): test %rsi,%rsi
536a(6): jz 0x11e(%rip)
5370(3): mov %rdx,%r8
5373(7): lea 0x413f(%rip),%rdx
537a(3): mov %rcx,%r9
537d(2): xor %eax,%eax
537f(3): mov %rsi,%rcx
5382(5): mov $0x1,%esi
5387(5): call 0xffffc379(%rip)
538c(7): lea 0x4139(%rip),%rsi
5393(2): xor %edi,%edi
5395(5): mov $0x5,%edx
539a(5): call 0xffffc156(%rip)
539f(7): lea 0x443a(%rip),%rdx
53a6(3): mov %rax,%rcx
53a9(6): mov $0x7e3,%r8d
53af(5): mov $0x1,%esi
53b4(3): mov %rbp,%rdi
53b7(2): xor %eax,%eax
53b9(5): call 0xffffc347(%rip)
53be(7): lea 0x4193(%rip),%rsi
53c5(2): xor %edi,%edi
53c7(5): mov $0x5,%edx
53cc(5): call 0xffffc124(%rip)
53d1(3): mov %rbp,%rsi
53d4(3): mov %rax,%rdi
53d7(5): call 0xffffc1e9(%rip)
53dc(4): cmp $0x9,%r12
53e0(6): jnbe 0x340(%rip)
53e6(7): lea 0x43c7(%rip),%rdx
53ed(4): movsxd 0x0(%rdx,%r12,4),%rax
53f1(3): add %rdx,%rax
53f4(2): jmp %rax
53f6(a): nop 0x0(%rax,%rax,1)
5400(4): mov 0x38(%rbx),%r9
5404(4): mov 0x10(%rbx),%rax
5408(7): lea 0x42b9(%rip),%rsi
540f(4): mov 0x8(%rbx),%r8
5413(5): mov $0x5,%edx
5418(2): xor %edi,%edi
541a(4): mov 0x30(%rbx),%r13
541e(4): mov 0x28(%rbx),%r12
5422(5): mov %r9,0x10(%rsp)
5427(4): mov 0x20(%rbx),%r15
542b(4): mov 0x18(%rbx),%r14
542f(4): mov %rax,(%rsp)
5433(5): mov %r8,0x8(%rsp)
5438(3): mov (%rbx),%rbx
543b(5): call 0xffffc0b5(%rip)
5440(4): sub $0x8,%rsp
5444(5): mov 0x18(%rsp),%r9
5449(3): mov %rax,%rdx
544c(3): mov %rbx,%rcx
544f(5): mov $0x1,%esi
5454(3): mov %rbp,%rdi
5457(2): xor %eax,%eax
5459(2): push %r9
545b(2): push %r13
545d(2): push %r12
545f(2): push %r15
5461(2): push %r14
5463(5): mov 0x30(%rsp),%r9
5468(5): mov 0x38(%rsp),%r8
546d(5): call 0xffffc293(%rip)
5472(4): add $0x30,%rsp
5476(4): add $0x28,%rsp
547a(1): pop %rbx
547b(1): pop %rbp
547c(2): pop %r12
547e(2): pop %r13
5480(2): pop %r14
5482(2): pop %r15
5484(1): ret near (%rsp)
5485(3): nop (%rax)
5488(3): mov %rcx,%r8
548b(3): mov %rdx,%rcx
548e(7): lea 0x4030(%rip),%rdx
5495(5): mov $0x1,%esi
549a(2): xor %eax,%eax
549c(5): call 0xffffc264(%rip)
54a1(5): jmp 0xfffffeeb(%rip)
54a6(a): nop 0x0(%rax,%rax,1)
54b0(4): mov 0x40(%rbx),%r10
54b4(4): mov 0x38(%rbx),%r9
54b8(7): lea 0x4239(%rip),%rsi
54bf(4): mov 0x10(%rbx),%rax
54c3(4): mov 0x8(%rbx),%r8
54c7(5): mov $0x5,%edx
54cc(4): mov 0x30(%rbx),%r13
54d0(4): mov 0x28(%rbx),%r12
54d4(4): mov 0x20(%rbx),%r15
54d8(4): mov 0x18(%rbx),%r14
54dc(3): mov (%rbx),%rbx
54df(5): mov %r10,0x18(%rsp)
54e4(5): mov %r9,0x10(%rsp)
54e9(4): mov %rax,(%rsp)
54ed(5): mov %r8,0x8(%rsp)
54f2(2): xor %edi,%edi
54f4(5): call 0xffffbffc(%rip)
54f9(5): mov 0x18(%rsp),%r10
54fe(2): push %r10
5500(5): jmp 0xffffff44(%rip)
5505(3): nop (%rax)
5508(3): mov (%rbx),%rbx
550b(7): lea 0x3fbe(%rip),%rsi
5512(5): mov $0x5,%edx
5517(2): xor %edi,%edi
5519(5): call 0xffffbfd7(%rip)
551e(4): add $0x28,%rsp
5522(3): mov %rbx,%rcx
5525(3): mov %rbp,%rdi
5528(1): pop %rbx
5529(1): pop %rbp
552a(2): pop %r12
552c(2): pop %r13
552e(2): pop %r14
5530(2): pop %r15
5532(3): mov %rax,%rdx
5535(5): mov $0x1,%esi
553a(2): xor %eax,%eax
553c(5): jmp 0xffffc1c4(%rip)
5541(7): nop 0x0(%rax)
5548(4): mov 0x8(%rbx),%r12
554c(7): lea 0x3f8d(%rip),%rsi
5553(3): mov (%rbx),%rbx
5556(5): mov $0x5,%edx
555b(2): xor %edi,%edi
555d(5): call 0xffffbf93(%rip)
5562(4): add $0x28,%rsp
5566(3): mov %r12,%r8
5569(3): mov %rbx,%rcx
556c(3): mov %rbp,%rdi
556f(3): mov %rax,%rdx
5572(5): mov $0x1,%esi
5577(1): pop %rbx
5578(1): pop %rbp
5579(2): pop %r12
557b(2): pop %r13
557d(2): pop %r14
557f(2): pop %r15
5581(2): xor %eax,%eax
5583(5): jmp 0xffffc17d(%rip)
5588(8): nop 0x0(%rax,%rax,1)
5590(4): mov 0x10(%rbx),%r13
5594(4): mov 0x8(%rbx),%r12
5598(7): lea 0x3f58(%rip),%rsi
559f(3): mov (%rbx),%rbx
55a2(5): mov $0x5,%edx
55a7(2): xor %edi,%edi
55a9(5): call 0xffffbf47(%rip)
55ae(4): add $0x28,%rsp
55b2(3): mov %r13,%r9
55b5(3): mov %r12,%r8
55b8(3): mov %rbx,%rcx
55bb(3): mov %rbp,%rdi
55be(3): mov %rax,%rdx
55c1(1): pop %rbx
55c2(1): pop %rbp
55c3(2): pop %r12
55c5(2): pop %r13
55c7(2): pop %r14
55c9(2): pop %r15
55cb(5): mov $0x1,%esi
55d0(2): xor %eax,%eax
55d2(5): jmp 0xffffc12e(%rip)
55d7(9): nop 0x0(%rax,%rax,1)
55e0(7): lea 0x4041(%rip),%rsi
55e7(5): mov $0x5,%edx
55ec(2): xor %edi,%edi
55ee(4): mov 0x18(%rbx),%r14
55f2(4): mov 0x10(%rbx),%r13
55f6(4): mov 0x8(%rbx),%r12
55fa(3): mov (%rbx),%rbx
55fd(5): call 0xffffbef3(%rip)
5602(4): sub $0x8,%rsp
5606(2): push %r14
5608(3): mov %rax,%rdx
560b(3): mov %r13,%r9
560e(3): mov %r12,%r8
5611(3): mov %rbx,%rcx
5614(3): mov %rbp,%rdi
5617(5): mov $0x1,%esi
561c(2): xor %eax,%eax
561e(5): call 0xffffc0e2(%rip)
5623(1): pop %rax
5624(1): pop %rdx
5625(4): add $0x28,%rsp
5629(1): pop %rbx
562a(1): pop %rbp
562b(2): pop %r12
562d(2): pop %r13
562f(2): pop %r14
5631(2): pop %r15
5633(1): ret near (%rsp)
5634(4): nop 0x0(%rax)
5638(4): mov 0x20(%rbx),%r15
563c(7): lea 0x4005(%rip),%rsi
5643(5): mov $0x5,%edx
5648(2): xor %edi,%edi
564a(4): mov 0x18(%rbx),%r14
564e(4): mov 0x10(%rbx),%r13
5652(4): mov 0x8(%rbx),%r12
5656(3): mov (%rbx),%rbx
5659(5): call 0xffffbe97(%rip)
565e(2): push %r15
5660(2): jmp 0xffffffa6(%rip)
5662(6): nop 0x0(%rax,%rax,1)
5668(4): mov 0x8(%rbx),%r8
566c(4): mov 0x28(%rbx),%r12
5670(7): lea 0x3ff9(%rip),%rsi
5677(4): mov 0x20(%rbx),%r15
567b(4): mov 0x18(%rbx),%r14
567f(5): mov $0x5,%edx
5684(4): mov 0x10(%rbx),%r13
5688(2): xor %edi,%edi
568a(3): mov (%rbx),%rbx
568d(4): mov %r8,(%rsp)
5691(5): call 0xffffbe5f(%rip)
5696(4): sub $0x8,%rsp
569a(3): mov %r13,%r9
569d(2): push %r12
569f(2): push %r15
56a1(2): push %r14
56a3(5): mov 0x20(%rsp),%r8
56a8(3): mov %rbx,%rcx
56ab(3): mov %rax,%rdx
56ae(3): mov %rbp,%rdi
56b1(5): mov $0x1,%esi
56b6(2): xor %eax,%eax
56b8(5): call 0xffffc048(%rip)
56bd(4): add $0x20,%rsp
56c1(4): add $0x28,%rsp
56c5(1): pop %rbx
56c6(1): pop %rbp
56c7(2): pop %r12
56c9(2): pop %r13
56cb(2): pop %r14
56cd(2): pop %r15
56cf(1): ret near (%rsp)
56d0(4): mov 0x10(%rbx),%r9
56d4(4): mov 0x30(%rbx),%r13
56d8(7): lea 0x3fb9(%rip),%rsi
56df(4): mov 0x28(%rbx),%r12
56e3(4): mov 0x20(%rbx),%r15
56e7(5): mov $0x5,%edx
56ec(4): mov 0x18(%rbx),%r14
56f0(4): mov 0x8(%rbx),%r8
56f4(2): xor %edi,%edi
56f6(5): mov %r9,0x8(%rsp)
56fb(3): mov (%rbx),%rbx
56fe(4): mov %r8,(%rsp)
5702(5): call 0xffffbdee(%rip)
5707(2): push %r13
5709(2): push %r12
570b(2): push %r15
570d(2): push %r14
570f(5): mov 0x28(%rsp),%r9
5714(2): jmp 0xffffff8f(%rip)
5716(a): nop 0x0(%rax,%rax,1)
5720(4): mov 0x40(%rbx),%r10
5724(4): mov 0x38(%rbx),%r9
5728(5): mov $0x5,%edx
572d(4): mov 0x10(%rbx),%rax
5731(4): mov 0x8(%rbx),%r8
5735(7): lea 0x3ff4(%rip),%rsi
573c(4): mov 0x30(%rbx),%r13
5740(4): mov 0x28(%rbx),%r12
5744(4): mov 0x20(%rbx),%r15
5748(4): mov 0x18(%rbx),%r14
574c(5): mov %r10,0x18(%rsp)
5751(5): mov %r9,0x10(%rsp)
5756(4): mov %rax,(%rsp)
575a(5): mov %r8,0x8(%rsp)
575f(3): mov (%rbx),%rbx
5762(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5770(3): xor %r9d,%r9d
5773(4): cmp $0x0,(%r8)
5777(2): jz 0x14(%rip)
5779(7): nop 0x0(%rax)
5780(4): add $0x1,%r9
5784(5): cmp $0x0,0x0(%r8,%r9,8)
5789(2): jnz 0xfffffff7(%rip)
578b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5790(4): sub $0x68,%rsp
5794(3): mov %r8,%r10
5797(3): xor %r9d,%r9d
579a(9): mov $0x28,%rax
57a3(5): mov %rax,0x58(%rsp)
57a8(2): xor %eax,%eax
57aa(3): mov %rsp,%r8
57ad(3): nop (%rax)
57b0(3): mov (%r10),%eax
57b3(3): cmp $0x2f,%eax
57b6(2): jnbe 0x44(%rip)
57b8(3): mov %eax,%r11d
57bb(4): add 0x10(%r10),%r11
57bf(3): add $0x8,%eax
57c2(3): mov %eax,(%r10)
57c5(3): mov (%r11),%rax
57c8(3): test %rax,%rax
57cb(4): mov %rax,0x0(%r8,%r9,8)
57cf(2): jz 0xc(%rip)
57d1(4): add $0x1,%r9
57d5(4): cmp $0xa,%r9
57d9(2): jnz 0xffffffd7(%rip)
57db(5): call 0xfffffb75(%rip)
57e0(5): mov 0x58(%rsp),%rax
57e5(9): xor $0x28,%rax
57ee(2): jnz 0x7(%rip)
57f0(4): add $0x68,%rsp
57f4(1): ret near (%rsp)
57f5(5): call 0xffffbd2b(%rip)
57fa(4): mov 0x8(%r10),%r11
57fe(4): lea 0x8(%r11),%rax
5802(4): mov %rax,0x8(%r10)
5806(2): jmp 0xffffffbf(%rip)

"version_etc" :
5810(1): push %rbp
5811(1): push %rbx
5812(6): mov $0x20,%r10d
5818(3): xor %r11d,%r11d
581b(7): sub $0xb8,%rsp
5822(9): mov $0x28,%rax
582b(5): mov %rax,0x78(%rsp)
5830(2): xor %eax,%eax
5832(8): lea 0xd0(%rsp),%rax
583a(8): mov %r8,0xa0(%rsp)
5842(8): lea 0xd0(%rsp),%rbx
584a(5): lea 0x20(%rsp),%r8
584f(8): mov %r9,0xa8(%rsp)
5857(8): mov $0x20,0x8(%rsp)
585f(5): mov %rax,0x10(%rsp)
5864(8): lea 0x80(%rsp),%rax
586c(3): xor %r9d,%r9d
586f(5): mov %rax,0x18(%rsp)
5874(3): mov %rax,%rbp
5877(9): nop 0x0(%rax,%rax,1)
5880(4): cmp $0x2f,%r10d
5884(2): jnbe 0x58(%rip)
5886(3): mov %r10d,%eax
5889(6): mov $0x1,%r11d
588f(4): add $0x8,%r10d
5893(3): add %rbp,%rax
5896(3): mov (%rax),%rax
5899(3): test %rax,%rax
589c(4): mov %rax,0x0(%r8,%r9,8)
58a0(2): jz 0xc(%rip)
58a2(4): add $0x1,%r9
58a6(4): cmp $0xa,%r9
58aa(2): jnz 0xffffffd6(%rip)
58ac(3): test %r11b,%r11b
58af(2): jnz 0x26(%rip)
58b1(5): call 0xfffffa9f(%rip)
58b6(5): mov 0x78(%rsp),%rax
58bb(9): xor $0x28,%rax
58c4(2): jnz 0xc(%rip)
58c6(7): add $0xb8,%rsp
58cd(1): pop %rbx
58ce(1): pop %rbp
58cf(1): ret near (%rsp)
58d0(5): call 0xffffbc50(%rip)
58d5(5): mov %r10d,0x8(%rsp)
58da(2): jmp 0xffffffd7(%rip)
58dc(3): mov %rbx,%rax
58df(4): add $0x8,%rbx
58e3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
58f0(1): push %rbx
58f1(7): lea 0x3c1b(%rip),%rsi
58f8(5): mov $0x5,%edx
58fd(2): xor %edi,%edi
58ff(5): call 0xffffbbf1(%rip)
5904(7): lea 0x3c1d(%rip),%rdx
590b(3): mov %rax,%rsi
590e(5): mov $0x1,%edi
5913(2): xor %eax,%eax
5915(5): call 0xffffbd6b(%rip)
591a(7): lea 0x3c1d(%rip),%rsi
5921(5): mov $0x5,%edx
5926(2): xor %edi,%edi
5928(5): call 0xffffbbc8(%rip)
592d(7): lea 0x314c(%rip),%rcx
5934(7): lea 0x32f0(%rip),%rdx
593b(3): mov %rax,%rsi
593e(5): mov $0x1,%edi
5943(2): xor %eax,%eax
5945(5): call 0xffffbd3b(%rip)
594a(7): mov 0x206737(%rip),%rbx
5951(7): lea 0x3e18(%rip),%rsi
5958(2): xor %edi,%edi
595a(5): mov $0x5,%edx
595f(5): call 0xffffbb91(%rip)
5964(3): mov %rbx,%rsi
5967(3): mov %rax,%rdi
596a(1): pop %rbx
596b(5): jmp 0xffffbc55(%rip)

"xmalloc" :
5970(1): push %rbx
5971(3): mov %rdi,%rbx
5974(5): call 0xffffbcac(%rip)
5979(3): test %rax,%rax
597c(2): jnz 0x7(%rip)
597e(3): test %rbx,%rbx
5981(2): jnz 0x4(%rip)
5983(1): pop %rbx
5984(1): ret near (%rsp)
5985(5): call 0x23b(%rip)

"xnmalloc" :
5990(3): mov %rdi,%rax
5993(3): mul %rax,%rsi,%rdx
5996(3): mov %rax,%rdi
5999(3): seto %al
599c(3): test %rdi,%rdi
599f(2): js 0xc(%rip)
59a1(3): movzx %al,%eax
59a4(3): test %rax,%rax
59a7(2): jnz 0x4(%rip)
59a9(2): jmp 0xffffffc7(%rip)
59ab(4): sub $0x8,%rsp
59af(5): call 0x211(%rip)

"xrealloc" :
59d0(3): test %rsi,%rsi
59d3(1): push %rbx
59d4(3): mov %rsi,%rbx
59d7(2): jnz 0x7(%rip)
59d9(3): test %rdi,%rdi
59dc(2): jnz 0x1c(%rip)
59de(3): mov %rbx,%rsi
59e1(5): call 0xffffbc7f(%rip)
59e6(3): test %rax,%rax
59e9(2): jnz 0x7(%rip)
59eb(3): test %rbx,%rbx
59ee(2): jnz 0x13(%rip)
59f0(1): pop %rbx
59f1(1): ret near (%rsp)
59f2(6): nop 0x0(%rax,%rax,1)
59f8(5): call 0xffffba38(%rip)
59fd(2): xor %eax,%eax
59ff(1): pop %rbx
5a00(1): ret near (%rsp)
5a01(5): call 0x1bf(%rip)

"xnrealloc" :
5a10(3): mov %rsi,%rax
5a13(3): mul %rax,%rdx,%rdx
5a16(3): mov %rax,%rsi
5a19(3): seto %al
5a1c(3): test %rsi,%rsi
5a1f(2): js 0xc(%rip)
5a21(3): movzx %al,%eax
5a24(3): test %rax,%rax
5a27(2): jnz 0x4(%rip)
5a29(2): jmp 0xffffffa7(%rip)
5a2b(4): sub $0x8,%rsp
5a2f(5): call 0x191(%rip)

"x2nrealloc" :
5a40(3): test %rdi,%rdi
5a43(3): mov %rdx,%r9
5a46(3): mov (%rsi),%rcx
5a49(2): jz 0x37(%rip)
5a4b(2): xor %edx,%edx
5a4d(a): mov $0x6148914691236517204,%rax
5a57(3): div %r9,%rax
5a5a(3): cmp %rcx,%rax
5a5d(2): jbe 0x3e(%rip)
5a5f(3): mov %rcx,%rax
5a62(3): shr $0x1,%rax
5a65(5): lea 0x1(%rax,%rcx,1),%rcx
5a6a(3): mov %rcx,(%rsi)
5a6d(4): imul %r9,%rcx
5a71(3): mov %rcx,%rsi
5a74(5): jmp 0xffffff5c(%rip)
5a79(7): nop 0x0(%rax)
5a80(3): test %rcx,%rcx
5a83(2): jz 0x25(%rip)
5a85(3): mov %rcx,%rax
5a88(3): mul %rax,%r9,%rdx
5a8b(3): seto %dl
5a8e(3): test %rax,%rax
5a91(3): movzx %dl,%edx
5a94(2): js 0x7(%rip)
5a96(3): test %rdx,%rdx
5a99(2): jz 0xffffffd1(%rip)
5a9b(4): sub $0x8,%rsp
5a9f(5): call 0x121(%rip)
5aa4(4): nop 0x0(%rax)
5aa8(2): xor %edx,%edx
5aaa(5): mov $0x80,%eax
5aaf(3): xor %r8d,%r8d
5ab2(3): div %r9,%rax
5ab5(3): test %rax,%rax
5ab8(4): setz %r8b
5abc(4): lea 0x0(%r8,%rax,1),%rcx
5ac0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5ad0(3): test %rdi,%rdi
5ad3(3): mov (%rsi),%rax
5ad6(2): jz 0x2a(%rip)
5ad8(a): mov $0x6148914691236517203,%rdx
5ae2(3): cmp %rdx,%rax
5ae5(2): jnbe 0x2c(%rip)
5ae7(3): mov %rax,%rdx
5aea(3): shr $0x1,%rdx
5aed(5): lea 0x1(%rdx,%rax,1),%rax
5af2(3): mov %rax,(%rsi)
5af5(3): mov %rax,%rsi
5af8(5): jmp 0xfffffed8(%rip)
5afd(3): nop (%rax)
5b00(3): test %rax,%rax
5b03(5): mov $0x80,%edx
5b08(4): cmove %rdx,%rax
5b0c(3): test %rax,%rax
5b0f(2): jns 0xffffffe3(%rip)
5b11(4): sub $0x8,%rsp
5b15(5): call 0xab(%rip)

"xzalloc" :
5b20(1): push %rbx
5b21(3): mov %rdi,%rbx
5b24(5): call 0xfffffe4c(%rip)
5b29(3): mov %rbx,%rdx
5b2c(2): xor %esi,%esi
5b2e(3): mov %rax,%rdi
5b31(1): pop %rbx
5b32(5): jmp 0xffffba6e(%rip)

"xcalloc" :
5b40(3): mov %rdi,%rax
5b43(4): sub $0x8,%rsp
5b47(3): mul %rax,%rsi,%rdx
5b4a(3): seto %dl
5b4d(3): test %rax,%rax
5b50(2): js 0x19(%rip)
5b52(3): movzx %dl,%edx
5b55(3): test %rdx,%rdx
5b58(2): jnz 0x11(%rip)
5b5a(5): call 0xffffba76(%rip)
5b5f(3): test %rax,%rax
5b62(2): jz 0x7(%rip)
5b64(4): add $0x8,%rsp
5b68(1): ret near (%rsp)
5b69(5): call 0x57(%rip)

"xmemdup" :
5b70(1): push %rbp
5b71(1): push %rbx
5b72(3): mov %rdi,%rbp
5b75(3): mov %rsi,%rdi
5b78(3): mov %rsi,%rbx
5b7b(4): sub $0x8,%rsp
5b7f(5): call 0xfffffdf1(%rip)
5b84(4): add $0x8,%rsp
5b88(3): mov %rbx,%rdx
5b8b(3): mov %rbp,%rsi
5b8e(1): pop %rbx
5b8f(1): pop %rbp
5b90(3): mov %rax,%rdi
5b93(5): jmp 0xffffba5d(%rip)

"xstrdup" :
5ba0(1): push %rbx
5ba1(3): mov %rdi,%rbx
5ba4(5): call 0xffffb96c(%rip)
5ba9(3): mov %rbx,%rdi
5bac(4): lea 0x1(%rax),%rsi
5bb0(1): pop %rbx
5bb1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5bc0(7): lea 0x3c48(%rip),%rsi
5bc7(4): sub $0x8,%rsp
5bcb(5): mov $0x5,%edx
5bd0(2): xor %edi,%edi
5bd2(5): call 0xffffb91e(%rip)
5bd7(6): mov 0x20643b(%rip),%edi
5bdd(7): lea 0x30ea(%rip),%rdx
5be4(3): mov %rax,%rcx
5be7(2): xor %esi,%esi
5be9(2): xor %eax,%eax
5beb(5): call 0xffffbac5(%rip)
5bf0(5): call 0xffffb850(%rip)

"xvprintf" :
5c00(1): push %rbp
5c01(1): push %rbx
5c02(4): sub $0x8,%rsp
5c06(5): call 0x3ca(%rip)
5c0b(2): test %eax,%eax
5c0d(2): mov %eax,%ebx
5c0f(2): js 0x11(%rip)
5c11(4): add $0x8,%rsp
5c15(2): mov %ebx,%eax
5c17(1): pop %rbx
5c18(1): pop %rbp
5c19(1): ret near (%rsp)
5c1a(6): nop 0x0(%rax,%rax,1)
5c20(7): mov 0x206461(%rip),%rdi
5c27(5): call 0xffffb879(%rip)
5c2c(2): test %eax,%eax
5c2e(2): jnz 0xffffffe3(%rip)
5c30(7): lea 0x3be9(%rip),%rsi
5c37(2): xor %edi,%edi
5c39(5): mov $0x5,%edx
5c3e(5): call 0xffffb8b2(%rip)
5c43(3): mov %rax,%rbp
5c46(5): call 0xffffb80a(%rip)
5c4b(6): mov 0x2063c7(%rip),%edi
5c51(2): mov (%rax),%esi
5c53(3): mov %rbp,%rdx
5c56(2): xor %eax,%eax
5c58(5): call 0xffffba58(%rip)
5c5d(2): jmp 0xffffffb4(%rip)

"xprintf" :
5c60(7): sub $0xd8,%rsp
5c67(2): test %al,%al
5c69(5): mov %rsi,0x28(%rsp)
5c6e(5): mov %rdx,0x30(%rsp)
5c73(5): mov %rcx,0x38(%rsp)
5c78(5): mov %r8,0x40(%rsp)
5c7d(5): mov %r9,0x48(%rsp)
5c82(2): jz 0x39(%rip)
5c84(5): movaps %xmm0,0x50(%rsp)
5c89(5): movaps %xmm1,0x60(%rsp)
5c8e(5): movaps %xmm2,0x70(%rsp)
5c93(8): movaps %xmm3,0x80(%rsp)
5c9b(8): movaps %xmm4,0x90(%rsp)
5ca3(8): movaps %xmm5,0xa0(%rsp)
5cab(8): movaps %xmm6,0xb0(%rsp)
5cb3(8): movaps %xmm7,0xc0(%rsp)
5cbb(9): mov $0x28,%rax
5cc4(5): mov %rax,0x18(%rsp)
5cc9(2): xor %eax,%eax
5ccb(8): lea 0xe0(%rsp),%rax
5cd3(3): mov %rsp,%rsi
5cd6(5): mov %rax,0x8(%rsp)
5cdb(5): lea 0x20(%rsp),%rax
5ce0(7): mov $0x8,(%rsp)
5ce7(8): mov $0x30,0x4(%rsp)
5cef(5): mov %rax,0x10(%rsp)
5cf4(5): call 0xffffff0c(%rip)
5cf9(5): mov 0x18(%rsp),%rdx
5cfe(9): xor $0x28,%rdx
5d07(2): jnz 0xa(%rip)
5d09(7): add $0xd8,%rsp
5d10(1): ret near (%rsp)
5d11(5): call 0xffffb80f(%rip)

"xvfprintf" :
5d20(1): push %rbp
5d21(1): push %rbx
5d22(3): mov %rdi,%rbp
5d25(4): sub $0x8,%rsp
5d29(5): call 0x1a7(%rip)
5d2e(2): test %eax,%eax
5d30(2): mov %eax,%ebx
5d32(2): js 0xe(%rip)
5d34(4): add $0x8,%rsp
5d38(2): mov %ebx,%eax
5d3a(1): pop %rbx
5d3b(1): pop %rbp
5d3c(1): ret near (%rsp)
5d3d(3): nop (%rax)
5d40(3): mov %rbp,%rdi
5d43(5): call 0xffffb75d(%rip)
5d48(2): test %eax,%eax
5d4a(2): jnz 0xffffffea(%rip)
5d4c(7): lea 0x3acd(%rip),%rsi
5d53(2): xor %edi,%edi
5d55(5): mov $0x5,%edx
5d5a(5): call 0xffffb796(%rip)
5d5f(3): mov %rax,%rbp
5d62(5): call 0xffffb6ee(%rip)
5d67(6): mov 0x2062ab(%rip),%edi
5d6d(2): mov (%rax),%esi
5d6f(3): mov %rbp,%rdx
5d72(2): xor %eax,%eax
5d74(5): call 0xffffb93c(%rip)
5d79(2): jmp 0xffffffbb(%rip)

"xfprintf" :
5d80(7): sub $0xd8,%rsp
5d87(2): test %al,%al
5d89(5): mov %rdx,0x30(%rsp)
5d8e(5): mov %rcx,0x38(%rsp)
5d93(5): mov %r8,0x40(%rsp)
5d98(5): mov %r9,0x48(%rsp)
5d9d(2): jz 0x39(%rip)
5d9f(5): movaps %xmm0,0x50(%rsp)
5da4(5): movaps %xmm1,0x60(%rsp)
5da9(5): movaps %xmm2,0x70(%rsp)
5dae(8): movaps %xmm3,0x80(%rsp)
5db6(8): movaps %xmm4,0x90(%rsp)
5dbe(8): movaps %xmm5,0xa0(%rsp)
5dc6(8): movaps %xmm6,0xb0(%rsp)
5dce(8): movaps %xmm7,0xc0(%rsp)
5dd6(9): mov $0x28,%rax
5ddf(5): mov %rax,0x18(%rsp)
5de4(2): xor %eax,%eax
5de6(8): lea 0xe0(%rsp),%rax
5dee(3): mov %rsp,%rdx
5df1(5): mov %rax,0x8(%rsp)
5df6(5): lea 0x20(%rsp),%rax
5dfb(7): mov $0x10,(%rsp)
5e02(8): mov $0x30,0x4(%rsp)
5e0a(5): mov %rax,0x10(%rsp)
5e0f(5): call 0xffffff11(%rip)
5e14(5): mov 0x18(%rsp),%rcx
5e19(9): xor $0x28,%rcx
5e22(2): jnz 0xa(%rip)
5e24(7): add $0xd8,%rsp
5e2b(1): ret near (%rsp)
5e2c(5): call 0xffffb6f4(%rip)

"rpl_mbrtowc" :
5e40(2): push %r13
5e42(2): push %r12
5e44(3): mov %rsi,%r13
5e47(1): push %rbp
5e48(1): push %rbx
5e49(3): mov %rdi,%rbx
5e4c(3): mov %rdx,%r12
5e4f(4): sub $0x18,%rsp
5e53(9): mov $0x28,%rax
5e5c(5): mov %rax,0x8(%rsp)
5e61(2): xor %eax,%eax
5e63(5): lea 0x4(%rsp),%rax
5e68(3): test %rdi,%rdi
5e6b(4): cmove %rax,%rbx
5e6f(3): mov %rbx,%rdi
5e72(5): call 0xffffb6be(%rip)
5e77(4): cmp $0xfffffffd,%rax
5e7b(3): mov %rax,%rbp
5e7e(2): jbe 0x22(%rip)
5e80(3): test %r12,%r12
5e83(2): jz 0x1d(%rip)
5e85(2): xor %edi,%edi
5e87(5): call 0x2a9(%rip)
5e8c(2): test %al,%al
5e8e(2): jnz 0x12(%rip)
5e90(5): movzx 0x0(%r13),%eax
5e95(5): mov $0x1,%ebp
5e9a(2): mov %eax,(%rbx)
5e9c(4): nop 0x0(%rax)
5ea0(5): mov 0x8(%rsp),%rdx
5ea5(9): xor $0x28,%rdx
5eae(3): mov %rbp,%rax
5eb1(2): jnz 0xd(%rip)
5eb3(4): add $0x18,%rsp
5eb7(1): pop %rbx
5eb8(1): pop %rbp
5eb9(2): pop %r12
5ebb(2): pop %r13
5ebd(1): ret near (%rsp)
5ebe(5): call 0xffffb662(%rip)

"rpl_vfprintf" :
5ed0(2): push %r13
5ed2(2): push %r12
5ed4(3): mov %rsi,%rax
5ed7(1): push %rbp
5ed8(1): push %rbx
5ed9(3): mov %rdi,%r13
5edc(7): sub $0x7f8,%rsp
5ee3(5): lea 0x10(%rsp),%r12
5ee8(5): lea 0x8(%rsp),%rsi
5eed(9): mov $0x7d0,0x8(%rsp)
5ef6(9): mov $0x28,%rcx
5eff(8): mov %rcx,0x7e8(%rsp)
5f07(2): xor %ecx,%ecx
5f09(3): mov %r12,%rdi
5f0c(3): mov %rdx,%rcx
5f0f(3): mov %rax,%rdx
5f12(5): call 0x3ee(%rip)
5f17(3): test %rax,%rax
5f1a(5): mov 0x8(%rsp),%rbx
5f1f(6): jz 0x8f(%rip)
5f25(3): mov %r13,%rcx
5f28(3): mov %rbx,%rdx
5f2b(5): mov $0x1,%esi
5f30(3): mov %rax,%rdi
5f33(3): mov %rax,%rbp
5f36(5): call 0xffffb7ba(%rip)
5f3b(3): cmp %rbx,%rax
5f3e(2): jb 0x42(%rip)
5f40(3): cmp %r12,%rbp
5f43(2): jz 0xa(%rip)
5f45(3): mov %rbp,%rdi
5f48(5): call 0xffffb4e8(%rip)
5f4d(7): cmp $0x7fffffff,%rbx
5f54(2): jnbe 0x4f(%rip)
5f56(8): mov 0x7e8(%rsp),%rcx
5f5e(9): xor $0x28,%rcx
5f67(2): mov %ebx,%eax
5f69(2): jnz 0x54(%rip)
5f6b(7): add $0x7f8,%rsp
5f72(1): pop %rbx
5f73(1): pop %rbp
5f74(2): pop %r12
5f76(2): pop %r13
5f78(1): ret near (%rsp)
5f79(7): nop 0x0(%rax)
5f80(3): cmp %r12,%rbp
5f83(5): mov $0xffffffff,%ebx
5f88(2): jz 0xffffffce(%rip)
5f8a(5): call 0xffffb4c6(%rip)
5f8f(3): mov (%rax),%r13d
5f92(3): mov %rax,%r12
5f95(3): mov %rbp,%rdi
5f98(5): call 0xffffb498(%rip)
5f9d(4): mov %r13d,(%r12)
5fa1(2): jmp 0xffffffb5(%rip)
5fa3(5): call 0xffffb4ad(%rip)
5fa8(6): mov $0x4b,(%rax)
5fae(3): mov %r13,%rdi
5fb1(5): mov $0xffffffff,%ebx
5fb6(5): call 0x33a(%rip)
5fbb(2): jmp 0xffffff9b(%rip)
5fbd(5): call 0xffffb563(%rip)

"rpl_vprintf" :
5fd0(3): mov %rsi,%rdx
5fd3(3): mov %rdi,%rsi
5fd6(7): mov 0x2060ab(%rip),%rdi
5fdd(5): jmp 0xfffffef3(%rip)

"c_strtold" :
5ff0(2): push %r12
5ff2(1): push %rbp
5ff3(3): mov %rdi,%rbp
5ff6(1): push %rbx
5ff7(3): mov %rsi,%rbx
5ffa(4): sub $0x10,%rsp
5ffe(7): mov 0x206223(%rip),%rax
6005(3): test %rax,%rax
6008(2): jz 0x78(%rip)
600a(7): mov 0x206217(%rip),%rdi
6011(3): test %rdi,%rdi
6014(2): jz 0x4c(%rip)
6016(5): call 0xffffb5fa(%rip)
601b(3): test %rax,%rax
601e(3): mov %rax,%r12
6021(2): jz 0x3f(%rip)
6023(3): mov %rbx,%rsi
6026(3): mov %rbp,%rdi
6029(5): call 0xffffb677(%rip)
602e(3): fstp %st0,(%rsp)
6031(5): call 0xffffb41f(%rip)
6036(3): mov %r12,%rdi
6039(3): mov %rax,%rbx
603c(2): mov (%rax),%ebp
603e(5): call 0xffffb5d2(%rip)
6043(3): test %rax,%rax
6046(3): fld (%rsp),%st0
6049(2): jz 0x56(%rip)
604b(2): mov %ebp,(%rbx)
604d(4): add $0x10,%rsp
6051(1): pop %rbx
6052(1): pop %rbp
6053(2): pop %r12
6055(1): ret near (%rsp)
6056(a): nop 0x0(%rax,%rax,1)
6060(3): test %rbx,%rbx
6063(2): jnz 0xd(%rip)
6065(4): add $0x10,%rsp
6069(2): fld1 %st0
606b(1): pop %rbx
606c(1): pop %rbp
606d(2): pop %r12
606f(1): ret near (%rsp)
6070(3): mov %rbp,(%rbx)
6073(4): add $0x10,%rsp
6077(2): fld1 %st0
6079(1): pop %rbx
607a(1): pop %rbp
607b(2): pop %r12
607d(1): ret near (%rsp)
607e(2): nop 
6080(7): lea 0x37b9(%rip),%rsi
6087(2): xor %edx,%edx
6089(5): mov $0x1fbf,%edi
608e(5): call 0xffffb4c2(%rip)
6093(7): mov %rax,0x20618e(%rip)
609a(5): jmp 0xffffff70(%rip)
609f(2): fstp %st0,%st0
60a1(5): call 0xffffb39f(%rip)

"close_stream" :
60b0(2): push %r12
60b2(1): push %rbp
60b3(3): mov %rdi,%rbp
60b6(1): push %rbx
60b7(5): call 0xffffb3c9(%rip)
60bc(3): mov 0x0(%rbp),%ebx
60bf(3): mov %rbp,%rdi
60c2(3): mov %rax,%r12
60c5(5): call 0x10b(%rip)
60ca(3): and $0x20,%ebx
60cd(2): test %ebx,%ebx
60cf(2): jnz 0x19(%rip)
60d1(2): test %eax,%eax
60d3(2): jz 0xc(%rip)
60d5(3): test %r12,%r12
60d8(5): mov $0xffffffff,%eax
60dd(2): jz 0x3b(%rip)
60df(1): pop %rbx
60e0(1): pop %rbp
60e1(2): pop %r12
60e3(1): ret near (%rsp)
60e4(4): nop 0x0(%rax)
60e8(2): test %eax,%eax
60ea(2): jnz 0x1e(%rip)
60ec(5): call 0xffffb364(%rip)
60f1(6): mov $0x0,(%rax)
60f7(5): mov $0xffffffff,%eax
60fc(1): pop %rbx
60fd(1): pop %rbp
60fe(2): pop %r12
6100(1): ret near (%rsp)
6101(7): nop 0x0(%rax)
6108(1): pop %rbx
6109(5): mov $0xffffffff,%eax
610e(1): pop %rbp
610f(2): pop %r12
6111(1): ret near (%rsp)
6112(6): nop 0x0(%rax,%rax,1)
6118(5): call 0xffffb338(%rip)
611d(3): cmp $0x9,(%rax)
6120(1): pop %rbx
6121(1): pop %rbp
6122(2): pop %r12
6124(3): setnz %al
6127(3): movzx %al,%eax
612a(2): neg %eax
612c(1): ret near (%rsp)

"hard_locale" :
6130(4): sub $0x8,%rsp
6134(2): xor %esi,%esi
6136(5): call 0xffffb53a(%rip)
613b(3): mov %rax,%rdx
613e(5): mov $0x1,%eax
6143(3): test %rdx,%rdx
6146(2): jz 0x1f(%rip)
6148(7): lea 0x36f1(%rip),%rdi
614f(5): mov $0x2,%ecx
6154(3): mov %rdx,%rsi
6157(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6159(3): setnbe %cl
615c(3): sbb $0x0,%cl
615f(2): xor %eax,%eax
6161(2): test %cl,%cl
6163(2): jnz 0xd(%rip)
6165(4): add $0x8,%rsp
6169(1): ret near (%rsp)
616a(6): nop 0x0(%rax,%rax,1)
6170(7): lea 0x36cb(%rip),%rdi
6177(5): mov $0x6,%ecx
617c(3): mov %rdx,%rsi
617f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6181(3): setnbe %al
6184(2): sbb $0x0,%al
6186(2): test %al,%al
6188(3): setnz %al
618b(4): add $0x8,%rsp
618f(1): ret near (%rsp)

"locale_charset" :
6190(4): sub $0x8,%rsp
6194(5): mov $0xe,%edi
6199(5): call 0xffffb4a7(%rip)
619e(3): test %rax,%rax
61a1(2): jz 0x1f(%rip)
61a3(3): cmp $0x0,(%rax)
61a6(7): lea 0x326f(%rip),%rdx
61ad(4): cmove %rdx,%rax
61b1(4): add $0x8,%rsp
61b5(1): ret near (%rsp)
61b6(a): nop 0x0(%rax,%rax,1)
61c0(7): lea 0x3255(%rip),%rax
61c7(4): add $0x8,%rsp
61cb(1): ret near (%rsp)

"rpl_fclose" :
61d0(2): push %r12
61d2(1): push %rbp
61d3(1): push %rbx
61d4(3): mov %rdi,%rbx
61d7(5): call 0xffffb429(%rip)
61dc(2): test %eax,%eax
61de(3): mov %rbx,%rdi
61e1(2): js 0x56(%rip)
61e3(5): call 0xffffb46d(%rip)
61e8(2): test %eax,%eax
61ea(2): jnz 0x2e(%rip)
61ec(3): mov %rbx,%rdi
61ef(5): call 0x61(%rip)
61f4(2): test %eax,%eax
61f6(2): jz 0x3e(%rip)
61f8(5): call 0xffffb258(%rip)
61fd(3): mov (%rax),%r12d
6200(3): mov %rbx,%rdi
6203(3): mov %rax,%rbp
6206(5): call 0xffffb2ca(%rip)
620b(3): test %r12d,%r12d
620e(2): jnz 0x32(%rip)
6210(1): pop %rbx
6211(1): pop %rbp
6212(2): pop %r12
6214(1): ret near (%rsp)
6215(3): nop (%rax)
6218(3): mov %rbx,%rdi
621b(5): call 0xffffb3e5(%rip)
6220(2): xor %esi,%esi
6222(5): mov $0x1,%edx
6227(2): mov %eax,%edi
6229(5): call 0xffffb357(%rip)
622e(4): cmp $0xffffffff,%rax
6232(2): jnz 0xffffffba(%rip)
6234(3): mov %rbx,%rdi
6237(1): pop %rbx
6238(1): pop %rbp
6239(2): pop %r12
623b(5): jmp 0xffffb295(%rip)
6240(4): mov %r12d,0x0(%rbp)
6244(5): mov $0xffffffff,%eax
6249(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
6250(3): test %rdi,%rdi
6253(1): push %rbx
6254(3): mov %rdi,%rbx
6257(2): jz 0x13(%rip)
6259(5): call 0xffffb3f7(%rip)
625e(2): test %eax,%eax
6260(2): jz 0xa(%rip)
6262(6): test $0x100,(%rbx)
6268(2): jnz 0x10(%rip)
626a(3): mov %rbx,%rdi
626d(1): pop %rbx
626e(5): jmp 0xffffb3c2(%rip)
6273(5): nop 0x0(%rax,%rax,1)
6278(3): mov %rbx,%rdi
627b(5): mov $0x1,%edx
6280(2): xor %esi,%esi
6282(5): call 0xe(%rip)
6287(3): mov %rbx,%rdi
628a(1): pop %rbx
628b(5): jmp 0xffffb3a5(%rip)

"rpl_fseeko" :
6290(4): mov 0x8(%rdi),%rax
6294(4): cmp %rax,0x10(%rdi)
6298(2): jz 0x8(%rip)
629a(5): jmp 0xffffb426(%rip)
629f(1): nop 
62a0(4): mov 0x20(%rdi),%rax
62a4(4): cmp %rax,0x28(%rdi)
62a8(2): jnz 0xfffffff2(%rip)
62aa(5): cmp $0x0,0x48(%rdi)
62af(2): jnz 0xffffffeb(%rip)
62b1(2): push %r12
62b3(1): push %rbp
62b4(3): mov %edx,%r12d
62b7(1): push %rbx
62b8(3): mov %rsi,%rbp
62bb(3): mov %rdi,%rbx
62be(5): call 0xffffb342(%rip)
62c3(3): mov %r12d,%edx
62c6(3): mov %rbp,%rsi
62c9(2): mov %eax,%edi
62cb(5): call 0xffffb2b5(%rip)
62d0(4): cmp $0xffffffff,%rax
62d4(2): jz 0xe(%rip)
62d6(3): and $0xef,(%rbx)
62d9(7): mov %rax,0x90(%rbx)
62e0(2): xor %eax,%eax
62e2(1): pop %rbx
62e3(1): pop %rbp
62e4(2): pop %r12
62e6(1): ret near (%rsp)

"fseterr" :
62f0(3): or $0x20,(%rdi)
62f3(1): ret near (%rsp)

"vasnprintf" :
6300(1): push %rbp
6301(3): mov %rsp,%rbp
6304(2): push %r15
6306(2): push %r14
6308(2): push %r13
630a(2): push %r12
630c(7): lea 0xfffffc50(%rbp),%r14
6313(1): push %rbx
6314(3): mov %rdx,%rbx
6317(3): mov %rcx,%r12
631a(3): mov %r14,%rdx
631d(7): sub $0x408,%rsp
6324(7): mov %rsi,0xfffffbe8(%rbp)
632b(7): lea 0xfffffd40(%rbp),%rsi
6332(7): mov %rdi,0xfffffc18(%rbp)
6339(3): mov %rbx,%rdi
633c(7): mov %r14,0xfffffbf0(%rbp)
6343(9): mov $0x28,%rax
634c(4): mov %rax,0xffffffc8(%rbp)
6350(2): xor %eax,%eax
6352(7): mov %rsi,0xfffffbf8(%rbp)
6359(5): call 0x12c7(%rip)
635e(2): test %eax,%eax
6360(6): js 0xe68(%rip)
6366(3): mov %r14,%rsi
6369(3): mov %r12,%rdi
636c(5): call 0x10b4(%rip)
6371(2): test %eax,%eax
6373(6): js 0xebd(%rip)
6379(7): mov 0xfffffd50(%rbp),%rax
6380(7): mov $0xffffffff,%rdx
6387(4): add $0x7,%rax
638b(4): cmp $0x6,%rax
638f(4): cmovbe %rdx,%rax
6393(7): add 0xfffffd58(%rbp),%rax
639a(6): jb 0xa2e(%rip)
63a0(3): mov %rax,%rdi
63a3(3): xor %r8d,%r8d
63a6(4): add $0x6,%rdi
63aa(4): setb %r8b
63ae(6): jb 0xa1a(%rip)
63b4(7): cmp $0xf9f,%rdi
63bb(6): jbe 0x14d(%rip)
63c1(4): cmp $0xffffffff,%rdi
63c5(7): mov %r8,0xfffffc38(%rbp)
63cc(6): jz 0x9fc(%rip)
63d2(5): call 0xffffb24e(%rip)
63d7(3): test %rax,%rax
63da(7): mov %rax,0xfffffc28(%rbp)
63e1(6): jz 0x9e7(%rip)
63e7(7): mov 0xfffffc38(%rbp),%r8
63ee(7): mov %rax,0xfffffbe0(%rbp)
63f5(3): xor %r12d,%r12d
63f8(8): cmp $0x0,0xfffffc18(%rbp)
6400(2): jz 0xc(%rip)
6402(7): mov 0xfffffbe8(%rbp),%rax
6409(3): mov (%rax),%r12
640c(7): mov 0xfffffd48(%rbp),%r13
6413(7): lea 0xfffffc44(%rbp),%rax
641a(7): mov 0xfffffc18(%rbp),%r15
6421(b): mov $0x0,0xfffffc00(%rbp)
642c(7): mov %rax,0xfffffc10(%rbp)
6433(3): mov %rbx,%rax
6436(3): mov %r8,%rbx
6439(4): mov 0x0(%r13),%rcx
643d(3): mov %rax,%r8
6440(3): cmp %r8,%rcx
6443(6): jz 0x96e(%rip)
6449(3): sub %r8,%rcx
644c(3): mov %rbx,%rax
644f(3): add %rcx,%rax
6452(3): mov %rax,%r14
6455(6): jnb 0xe3(%rip)
645b(4): cmp $0xffffffff,%r12
645f(6): jz 0xad1(%rip)
6465(5): call 0xffffafeb(%rip)
646a(7): mov %rax,0xfffffc38(%rbp)
6471(7): cmp 0xfffffc18(%rbp),%r15
6478(2): jz 0xb(%rip)
647a(3): test %r15,%r15
647d(6): jnz 0xae3(%rip)
6483(7): mov 0xfffffbe0(%rbp),%rax
648a(3): test %rax,%rax
648d(2): jz 0xa(%rip)
648f(3): mov %rax,%rdi
6492(5): call 0xffffaf9e(%rip)
6497(7): mov 0xfffffbf8(%rbp),%rax
649e(7): mov 0xfffffd48(%rbp),%rdi
64a5(4): add $0x20,%rax
64a9(3): cmp %rax,%rdi
64ac(2): jz 0x7(%rip)
64ae(5): call 0xffffaf82(%rip)
64b3(7): mov 0xfffffbf0(%rbp),%rax
64ba(7): mov 0xfffffc58(%rbp),%rdi
64c1(4): add $0x10,%rax
64c5(3): cmp %rax,%rdi
64c8(2): jz 0x7(%rip)
64ca(5): call 0xffffaf66(%rip)
64cf(7): mov 0xfffffc38(%rbp),%rax
64d6(3): xor %r15d,%r15d
64d9(6): mov $0xc,(%rax)
64df(4): mov 0xffffffc8(%rbp),%rdi
64e3(9): xor $0x28,%rdi
64ec(3): mov %r15,%rax
64ef(6): jnz 0xf08(%rip)
64f5(4): lea 0xffffffd8(%rbp),%rsp
64f9(1): pop %rbx
64fa(2): pop %r12
64fc(2): pop %r13
64fe(2): pop %r14
6500(2): pop %r15
6502(1): pop %rbp
6503(1): ret near (%rsp)
6504(4): nop 0x0(%rax)
6508(4): add $0x24,%rax
650c(b): mov $0x0,0xfffffbe0(%rbp)
6517(4): and $0xfffffff0,%rax
651b(3): sub %rax,%rsp
651e(5): lea 0xf(%rsp),%rax
6523(4): and $0xfffffff0,%rax
6527(7): mov %rax,0xfffffc28(%rbp)
652e(5): jmp 0xfffffec7(%rip)
6533(5): nop 0x0(%rax,%rax,1)
6538(3): cmp %rax,%r12
653b(2): jnb 0x69(%rip)
653d(3): test %r12,%r12
6540(6): jnz 0x930(%rip)
6546(4): cmp $0xc,%rax
654a(6): jnbe 0x938(%rip)
6550(6): mov $0xc,%r12d
6556(7): cmp 0xfffffc18(%rbp),%r15
655d(3): setz %dl
6560(3): test %r15,%r15
6563(6): jz 0x945(%rip)
6569(2): test %dl,%dl
656b(6): jnz 0x93d(%rip)
6571(3): mov %r12,%rsi
6574(3): mov %r15,%rdi
6577(7): mov %r8,0xfffffc30(%rbp)
657e(7): mov %rcx,0xfffffc38(%rbp)
6585(5): call 0xffffb0db(%rip)
658a(3): test %rax,%rax
658d(7): mov 0xfffffc38(%rbp),%rcx
6594(7): mov 0xfffffc30(%rbp),%r8
659b(6): jz 0x9b0(%rip)
65a1(3): mov %rax,%r15
65a4(4): lea 0x0(%r15,%rbx,1),%rdi
65a8(3): mov %rcx,%rdx
65ab(3): mov %r8,%rsi
65ae(5): call 0xffffb042(%rip)
65b3(7): mov 0xfffffc00(%rbp),%rax
65ba(7): cmp %rax,0xfffffd40(%rbp)
65c1(6): jz 0xcba(%rip)
65c7(5): movzx 0x48(%r13),%edx
65cc(4): mov 0x50(%r13),%rax
65d0(3): cmp $0x25,%dl
65d3(6): jz 0x795(%rip)
65d9(4): cmp $0xffffffff,%rax
65dd(6): jz 0xc49(%rip)
65e3(7): mov 0xfffffc58(%rbp),%r8
65ea(4): shl/sal $0x5,%rax
65ee(3): add %r8,%rax
65f1(3): cmp $0x6e,%dl
65f4(2): mov (%rax),%edi
65f6(6): mov %edi,0xfffffc30(%rbp)
65fc(6): jz 0x7e4(%rip)
6602(4): mov 0x10(%r13),%eax
6606(7): mov 0xfffffc28(%rbp),%rdi
660d(2): test $0x1,%al
660f(3): mov $0x25,(%rdi)
6612(4): lea 0x1(%rdi),%rbx
6616(2): jz 0x11(%rip)
6618(7): mov 0xfffffc28(%rbp),%rdi
661f(4): lea 0x2(%rdi),%rbx
6623(4): mov $0x27,0x1(%rdi)
6627(2): test $0x2,%al
6629(2): jz 0x9(%rip)
662b(3): mov $0x2d,(%rbx)
662e(4): add $0x1,%rbx
6632(2): test $0x4,%al
6634(2): jz 0x9(%rip)
6636(3): mov $0x2b,(%rbx)
6639(4): add $0x1,%rbx
663d(2): test $0x8,%al
663f(2): jz 0x9(%rip)
6641(3): mov $0x20,(%rbx)
6644(4): add $0x1,%rbx
6648(2): test $0x10,%al
664a(2): jz 0x9(%rip)
664c(3): mov $0x23,(%rbx)
664f(4): add $0x1,%rbx
6653(2): test $0x40,%al
6655(2): jz 0x9(%rip)
6657(3): mov $0x49,(%rbx)
665a(4): add $0x1,%rbx
665e(2): test $0x20,%al
6660(2): jz 0x9(%rip)
6662(3): mov $0x30,(%rbx)
6665(4): add $0x1,%rbx
6669(4): mov 0x18(%r13),%rsi
666d(4): mov 0x20(%r13),%rdx
6671(3): cmp %rdx,%rsi
6674(2): jz 0x32(%rip)
6676(3): mov %rdx,%rcx
6679(3): mov %rbx,%rdi
667c(7): mov %r8,0xfffffc20(%rbp)
6683(3): sub %rsi,%rcx
6686(3): mov %rcx,%rdx
6689(7): mov %rcx,0xfffffc38(%rbp)
6690(5): call 0xffffaf60(%rip)
6695(7): mov 0xfffffc38(%rbp),%rcx
669c(7): mov 0xfffffc20(%rbp),%r8
66a3(3): add %rcx,%rbx
66a6(4): mov 0x30(%r13),%rsi
66aa(4): mov 0x38(%r13),%rdx
66ae(3): cmp %rdx,%rsi
66b1(2): jz 0x32(%rip)
66b3(3): mov %rdx,%rcx
66b6(3): mov %rbx,%rdi
66b9(7): mov %r8,0xfffffc20(%rbp)
66c0(3): sub %rsi,%rcx
66c3(3): mov %rcx,%rdx
66c6(7): mov %rcx,0xfffffc38(%rbp)
66cd(5): call 0xffffaf23(%rip)
66d2(7): mov 0xfffffc38(%rbp),%rcx
66d9(7): mov 0xfffffc20(%rbp),%r8
66e0(3): add %rcx,%rbx
66e3(6): mov 0xfffffc30(%rbp),%edi
66e9(3): cmp $0x10,%edi
66ec(2): jnbe 0x2f(%rip)
66ee(5): mov $0x1,%eax
66f3(2): mov %edi,%ecx
66f5(3): shl/sal %cl,%rax
66f8(5): test $0x14180,%eax
66fd(2): jnz 0x17(%rip)
66ff(3): test $0x10,%ah
6702(6): jnz 0x95e(%rip)
6708(3): test $0x6,%ah
670b(2): jz 0x10(%rip)
670d(3): mov $0x6c,(%rbx)
6710(4): add $0x1,%rbx
6714(3): mov $0x6c,(%rbx)
6717(4): add $0x1,%rbx
671b(5): movzx 0x48(%r13),%eax
6720(4): mov $0x0,0x1(%rbx)
6724(2): mov %al,(%rbx)
6726(4): mov 0x28(%r13),%rax
672a(4): cmp $0xffffffff,%rax
672e(6): jz 0x732(%rip)
6734(4): shl/sal $0x5,%rax
6738(3): add %r8,%rax
673b(3): cmp $0x5,(%rax)
673e(6): jnz 0xae8(%rip)
6744(3): mov 0x10(%rax),%eax
6747(a): mov $0x1,0xfffffc20(%rbp)
6751(6): mov %eax,0xfffffc48(%rbp)
6757(4): mov 0x40(%r13),%rax
675b(4): cmp $0xffffffff,%rax
675f(2): jz 0x2d(%rip)
6761(4): shl/sal $0x5,%rax
6765(3): add %rax,%r8
6768(4): cmp $0x5,(%r8)
676c(6): jnz 0xaba(%rip)
6772(6): mov 0xfffffc20(%rbp),%eax
6778(4): mov 0x10(%r8),%edx
677c(7): mov %edx,0xfffffc48(%rbp,%rax,4)
6783(3): lea 0x1(%rax),%eax
6786(6): mov %eax,0xfffffc20(%rbp)
678c(3): mov %r14,%rax
678f(2): xor %edx,%edx
6791(4): add $0x2,%rax
6795(6): jb 0xc67(%rip)
679b(3): cmp %rax,%r12
679e(2): jnb 0x4d(%rip)
67a0(3): test %r12,%r12
67a3(6): jnz 0x825(%rip)
67a9(4): cmp $0xc,%rax
67ad(6): jnbe 0x833(%rip)
67b3(6): mov $0xc,%r12d
67b9(7): cmp 0xfffffc18(%rbp),%r15
67c0(3): setz %dl
67c3(3): test %r15,%r15
67c6(6): jz 0x84a(%rip)
67cc(2): test %dl,%dl
67ce(6): jnz 0x842(%rip)
67d4(3): mov %r12,%rsi
67d7(3): mov %r15,%rdi
67da(5): call 0xffffae86(%rip)
67df(3): test %rax,%rax
67e2(6): jz 0xfffffc83(%rip)
67e8(3): mov %rax,%r15
67eb(5): mov $0x0,0x0(%r15,%r14,1)
67f0(5): call 0xffffac60(%rip)
67f5(7): mov %rax,0xfffffc38(%rbp)
67fc(2): mov (%rax),%eax
67fe(7): mov %rbx,0xfffffc08(%rbp)
6805(6): mov %eax,0xfffffbdc(%rbp)
680b(5): nop 0x0(%rax,%rax,1)
6810(7): mov 0xfffffc38(%rbp),%rax
6817(3): mov %r12,%rbx
681a(6): mov $0x7fffffff,%r10d
6820(3): sub %r14,%rbx
6823(a): mov $0xffffffff,0xfffffc44(%rbp)
682d(7): cmp $0x7fffffff,%rbx
6834(6): mov $0x0,(%rax)
683a(6): mov 0xfffffc30(%rbp),%eax
6840(4): cmovbe %rbx,%r10
6844(3): cmp $0x11,%eax
6847(6): jnbe 0x9df(%rip)
684d(7): lea 0x2ff4(%rip),%rsi
6854(4): movsxd 0x0(%rsi,%rax,4),%rax
6858(3): add %rsi,%rax
685b(2): jmp %rax
685d(3): nop (%rax)
6860(4): mov 0x50(%r13),%rax
6864(4): lea 0x0(%r15,%r14,1),%rdi
6868(4): shl/sal $0x5,%rax
686c(7): add 0xfffffc58(%rbp),%rax
6873(4): mov 0x10(%rax),%r9
6877(6): mov 0xfffffc20(%rbp),%eax
687d(3): cmp $0x1,%eax
6880(6): jz 0x4c8(%rip)
6886(3): cmp $0x2,%eax
6889(6): jz 0x4a7(%rip)
688f(4): sub $0x8,%rsp
6893(6): push 0xfffffc10(%rbp)
6899(7): mov 0xfffffc28(%rbp),%r8
68a0(3): mov %r10,%rsi
68a3(7): mov $0xffffffff,%rcx
68aa(5): mov $0x1,%edx
68af(2): xor %eax,%eax
68b1(7): mov %r10,0xfffffbd0(%rbp)
68b8(5): call 0xffffab68(%rip)
68bd(1): pop %rsi
68be(1): pop %rdi
68bf(7): mov 0xfffffbd0(%rbp),%r10
68c6(6): mov 0xfffffc44(%rbp),%ecx
68cc(2): test %ecx,%ecx
68ce(6): js 0x13e(%rip)
68d4(3): movsxd %ecx,%rdx
68d7(3): cmp %r10,%rdx
68da(2): jnb 0x10(%rip)
68dc(3): add %r15,%rdx
68df(5): cmp $0x0,0x0(%rdx,%r14,1)
68e4(6): jnz 0x942(%rip)
68ea(2): cmp %eax,%ecx
68ec(2): jnl 0xa(%rip)
68ee(6): mov %eax,0xfffffc44(%rbp)
68f4(2): mov %eax,%ecx
68f6(3): lea 0x1(%rcx),%eax
68f9(3): cmp %r10,%rax
68fc(6): jb 0x834(%rip)
6902(7): cmp $0x7ffffffe,%rbx
6909(6): jnbe 0x847(%rip)
690f(4): lea 0x0(%r12,%r12,1),%rsi
6913(3): lea 0x2(%rcx),%edx
6916(3): test %r12,%r12
6919(7): mov $0xffffffff,%rax
6920(4): cmovns %rsi,%rax
6924(3): add %r14,%rdx
6927(6): jb 0xac1(%rip)
692d(3): cmp %rdx,%rax
6930(4): cmovnae %rdx,%rax
6934(3): cmp %rax,%r12
6937(6): jnb 0xfffffed9(%rip)
693d(3): test %r12,%r12
6940(6): js 0xfffffb31(%rip)
6946(3): cmp %rax,%rsi
6949(3): mov %rsi,%r12
694c(2): jnb 0xf(%rip)
694e(4): cmp $0xffffffff,%rax
6952(6): jz 0xfffffb1f(%rip)
6958(3): mov %rax,%r12
695b(7): cmp 0xfffffc18(%rbp),%r15
6962(3): setz %bl
6965(3): test %r15,%r15
6968(6): jz 0x388(%rip)
696e(2): test %bl,%bl
6970(6): jnz 0x380(%rip)
6976(3): mov %r12,%rsi
6979(3): mov %r15,%rdi
697c(5): call 0xfffface4(%rip)
6981(3): test %rax,%rax
6984(6): jz 0xfffffaed(%rip)
698a(3): mov %rax,%r15
698d(5): jmp 0xfffffe83(%rip)
6992(6): nop 0x0(%rax,%rax,1)
6998(4): mov 0x50(%r13),%rax
699c(4): lea 0x0(%r15,%r14,1),%rdi
69a0(4): shl/sal $0x5,%rax
69a4(7): add 0xfffffc58(%rbp),%rax
69ab(4): mov 0x10(%rax),%r9d
69af(6): mov 0xfffffc20(%rbp),%eax
69b5(3): cmp $0x1,%eax
69b8(6): jz 0x238(%rip)
69be(3): cmp $0x2,%eax
69c1(6): jz 0x277(%rip)
69c7(4): sub $0x8,%rsp
69cb(6): push 0xfffffc10(%rbp)
69d1(7): mov 0xfffffc28(%rbp),%r8
69d8(7): mov $0xffffffff,%rcx
69df(5): mov $0x1,%edx
69e4(3): mov %r10,%rsi
69e7(2): xor %eax,%eax
69e9(7): mov %r10,0xfffffbd0(%rbp)
69f0(5): call 0xffffaa30(%rip)
69f5(1): pop %rdx
69f6(1): pop %rcx
69f7(6): mov 0xfffffc44(%rbp),%ecx
69fd(7): mov 0xfffffbd0(%rbp),%r10
6a04(2): test %ecx,%ecx
6a06(6): jns 0xfffffece(%rip)
6a0c(7): mov 0xfffffc08(%rbp),%rdi
6a13(4): cmp $0x0,0x1(%rdi)
6a17(6): jnz 0x341(%rip)
6a1d(2): test %eax,%eax
6a1f(6): jns 0xfffffecf(%rip)
6a25(7): mov 0xfffffc38(%rbp),%rax
6a2c(2): mov (%rax),%ebx
6a2e(2): test %ebx,%ebx
6a30(2): jnz 0x20(%rip)
6a32(5): movzx 0x48(%r13),%eax
6a37(5): mov $0x16,%ebx
6a3c(3): and $0xef,%eax
6a3f(2): cmp $0x63,%al
6a41(5): mov $0x54,%eax
6a46(3): cmove %eax,%ebx
6a49(7): nop 0x0(%rax)
6a50(7): cmp 0xfffffc18(%rbp),%r15
6a57(2): jz 0xb(%rip)
6a59(3): test %r15,%r15
6a5c(6): jnz 0x7b0(%rip)
6a62(7): mov 0xfffffbe0(%rbp),%rax
6a69(3): test %rax,%rax
6a6c(2): jz 0xa(%rip)
6a6e(3): mov %rax,%rdi
6a71(5): call 0xffffa9bf(%rip)
6a76(7): mov 0xfffffbf8(%rbp),%rax
6a7d(7): mov 0xfffffd48(%rbp),%rdi
6a84(4): add $0x20,%rax
6a88(3): cmp %rax,%rdi
6a8b(2): jz 0x7(%rip)
6a8d(5): call 0xffffa9a3(%rip)
6a92(7): mov 0xfffffbf0(%rbp),%rax
6a99(7): mov 0xfffffc58(%rbp),%rdi
6aa0(4): add $0x10,%rax
6aa4(3): cmp %rax,%rdi
6aa7(2): jz 0x7(%rip)
6aa9(5): call 0xffffa987(%rip)
6aae(7): mov 0xfffffc38(%rbp),%rax
6ab5(3): xor %r15d,%r15d
6ab8(2): mov %ebx,(%rax)
6aba(5): jmp 0xfffffa25(%rip)
6abf(1): nop 
6ac0(4): mov 0x50(%r13),%rax
6ac4(4): lea 0x0(%r15,%r14,1),%rdi
6ac8(4): shl/sal $0x5,%rax
6acc(7): add 0xfffffc58(%rbp),%rax
6ad3(3): fld 0x10(%rax),%st0
6ad6(6): mov 0xfffffc20(%rbp),%eax
6adc(3): cmp $0x1,%eax
6adf(6): jz 0x631(%rip)
6ae5(3): cmp $0x2,%eax
6ae8(6): jnz 0x4c8(%rip)
6aee(6): mov 0xfffffc4c(%rbp),%eax
6af4(4): sub $0x8,%rsp
6af8(6): push 0xfffffc10(%rbp)
6afe(7): mov 0xfffffc48(%rbp),%r9d
6b05(7): mov 0xfffffc28(%rbp),%r8
6b0c(3): mov %r10,%rsi
6b0f(4): sub $0x18,%rsp
6b13(7): mov $0xffffffff,%rcx
6b1a(5): mov $0x1,%edx
6b1f(4): fstp %st0,0x8(%rsp)
6b23(1): push %rax
6b24(2): xor %eax,%eax
6b26(7): mov %r10,0xfffffbd0(%rbp)
6b2d(5): call 0xffffa8f3(%rip)
6b32(4): add $0x30,%rsp
6b36(7): mov 0xfffffbd0(%rbp),%r10
6b3d(5): jmp 0xfffffd89(%rip)
6b42(6): nop 0x0(%rax,%rax,1)
6b48(4): mov 0x50(%r13),%rax
6b4c(4): lea 0x0(%r15,%r14,1),%rdi
6b50(4): shl/sal $0x5,%rax
6b54(7): add 0xfffffc58(%rbp),%rax
6b5b(5): movsd 0x10(%rax),%xmm0
6b60(6): mov 0xfffffc20(%rbp),%eax
6b66(3): cmp $0x1,%eax
6b69(6): jz 0x597(%rip)
6b6f(3): cmp $0x2,%eax
6b72(6): jnz 0x3fe(%rip)
6b78(6): mov 0xfffffc4c(%rbp),%eax
6b7e(6): push 0xfffffc10(%rbp)
6b84(1): push %rax
6b85(7): mov 0xfffffc48(%rbp),%r9d
6b8c(7): mov 0xfffffc28(%rbp),%r8
6b93(3): mov %r10,%rsi
6b96(7): mov $0xffffffff,%rcx
6b9d(5): mov $0x1,%edx
6ba2(5): mov $0x1,%eax
6ba7(7): mov %r10,0xfffffbd0(%rbp)
6bae(5): call 0xffffa872(%rip)
6bb3(2): pop %r8
6bb5(7): mov 0xfffffbd0(%rbp),%r10
6bbc(2): pop %r9
6bbe(5): jmp 0xfffffd08(%rip)
6bc3(5): nop 0x0(%rax,%rax,1)
6bc8(4): mov 0x50(%r13),%rax
6bcc(4): lea 0x0(%r15,%r14,1),%rdi
6bd0(4): shl/sal $0x5,%rax
6bd4(7): add 0xfffffc58(%rbp),%rax
6bdb(5): movzx 0x10(%rax),%r9d
6be0(6): mov 0xfffffc20(%rbp),%eax
6be6(3): cmp $0x1,%eax
6be9(6): jnz 0xfffffdd5(%rip)
6bef(1): nop 
6bf0(6): push 0xfffffc10(%rbp)
6bf6(2): push %r9
6bf8(7): mov 0xfffffc48(%rbp),%r9d
6bff(5): jmp 0xfffffdd2(%rip)
6c04(4): nop 0x0(%rax)
6c08(4): mov 0x50(%r13),%rax
6c0c(4): lea 0x0(%r15,%r14,1),%rdi
6c10(4): shl/sal $0x5,%rax
6c14(7): add 0xfffffc58(%rbp),%rax
6c1b(5): movsx 0x10(%rax),%r9d
6c20(6): mov 0xfffffc20(%rbp),%eax
6c26(3): cmp $0x1,%eax
6c29(2): jz 0xffffffc7(%rip)
6c2b(3): cmp $0x2,%eax
6c2e(6): jnz 0xfffffd99(%rip)
6c34(4): nop 0x0(%rax)
6c38(4): sub $0x8,%rsp
6c3c(6): push 0xfffffc10(%rbp)
6c42(2): push %r9
6c44(6): mov 0xfffffc4c(%rbp),%eax
6c4a(1): push %rax
6c4b(7): mov 0xfffffc48(%rbp),%r9d
6c52(7): mov 0xfffffc28(%rbp),%r8
6c59(3): mov %r10,%rsi
6c5c(7): mov $0xffffffff,%rcx
6c63(5): mov $0x1,%edx
6c68(2): xor %eax,%eax
6c6a(7): mov %r10,0xfffffbd0(%rbp)
6c71(5): call 0xffffa7af(%rip)
6c76(4): add $0x20,%rsp
6c7a(7): mov 0xfffffbd0(%rbp),%r10
6c81(5): jmp 0xfffffc45(%rip)
6c86(a): nop 0x0(%rax,%rax,1)
6c90(4): mov 0x50(%r13),%rax
6c94(4): lea 0x0(%r15,%r14,1),%rdi
6c98(4): shl/sal $0x5,%rax
6c9c(7): add 0xfffffc58(%rbp),%rax
6ca3(5): movzx 0x10(%rax),%r9d
6ca8(6): mov 0xfffffc20(%rbp),%eax
6cae(3): cmp $0x1,%eax
6cb1(6): jnz 0xfffffd0d(%rip)
6cb7(5): jmp 0xffffff39(%rip)
6cbc(4): nop 0x0(%rax)
6cc0(4): mov 0x50(%r13),%rax
6cc4(4): lea 0x0(%r15,%r14,1),%rdi
6cc8(4): shl/sal $0x5,%rax
6ccc(7): add 0xfffffc58(%rbp),%rax
6cd3(5): movsx 0x10(%rax),%r9d
6cd8(6): mov 0xfffffc20(%rbp),%eax
6cde(3): cmp $0x1,%eax
6ce1(6): jnz 0xfffffcdd(%rip)
6ce7(5): jmp 0xffffff09(%rip)
6cec(4): nop 0x0(%rax)
6cf0(3): mov %r12,%rdi
6cf3(5): call 0xffffa92d(%rip)
6cf8(3): test %rax,%rax
6cfb(3): mov %rax,%rcx
6cfe(6): jz 0xfffff773(%rip)
6d04(3): test %r14,%r14
6d07(6): jz 0xb9(%rip)
6d0d(2): test %bl,%bl
6d0f(6): jz 0xb1(%rip)
6d15(3): mov %r15,%rsi
6d18(3): mov %r14,%rdx
6d1b(3): mov %rax,%rdi
6d1e(5): call 0xffffa8d2(%rip)
6d23(3): mov %rax,%r15
6d26(5): jmp 0xfffffaea(%rip)
6d2b(5): nop 0x0(%rax,%rax,1)
6d30(4): sub $0x8,%rsp
6d34(6): push 0xfffffc10(%rbp)
6d3a(2): push %r9
6d3c(5): jmp 0xffffff08(%rip)
6d41(7): nop 0x0(%rax)
6d48(6): push 0xfffffc10(%rbp)
6d4e(2): push %r9
6d50(5): jmp 0xfffffea8(%rip)
6d55(3): nop (%rax)
6d58(4): mov $0x0,0x1(%rdi)
6d5c(5): jmp 0xfffffab4(%rip)
6d61(7): nop 0x0(%rax)
6d68(4): cmp $0xffffffff,%rax
6d6c(6): jnz 0x4ba(%rip)
6d72(3): mov %r14,%rax
6d75(4): add $0x1,%rax
6d79(3): mov %rax,%rbx
6d7c(6): jnb 0x8c(%rip)
6d82(4): cmp $0xffffffff,%r12
6d86(6): jnz 0xfffff6df(%rip)
6d8c(3): mov %r12,%rbx
6d8f(5): mov $0x25,0x0(%r15,%r14,1)
6d94(4): mov 0x8(%r13),%r8
6d98(4): add $0x58,%r13
6d9c(4): mov 0x0(%r13),%rcx
6da0(8): add $0x1,0xfffffc00(%rbp)
6da8(3): cmp %r8,%rcx
6dab(6): jnz 0xfffff69e(%rip)
6db1(3): mov %rbx,%r14
6db4(5): jmp 0xfffff7ff(%rip)
6db9(7): nop 0x0(%rax)
6dc0(3): mov %rcx,%r15
6dc3(5): jmp 0xfffffa4d(%rip)
6dc8(5): call 0xffffa688(%rip)
6dcd(7): mov %rax,0xfffffc38(%rbp)
6dd4(5): jmp 0xfffff6c3(%rip)
6dd9(7): nop 0x0(%rax)
6de0(2): mov %edi,%edx
6de2(3): sub $0x12,%edx
6de5(3): cmp $0x4,%edx
6de8(6): jnbe 0x43e(%rip)
6dee(7): lea 0x2a9b(%rip),%rdi
6df5(4): mov 0x10(%rax),%rax
6df9(4): movsxd 0x0(%rdi,%rdx,4),%rdx
6dfd(3): add %rdi,%rdx
6e00(2): jmp %rdx
6e02(6): nop 0x0(%rax,%rax,1)
6e08(3): cmp %rax,%r12
6e0b(2): jnb 0xffffff84(%rip)
6e0d(3): test %r12,%r12
6e10(6): jnz 0x3d0(%rip)
6e16(4): cmp $0xc,%rax
6e1a(6): jnbe 0x3d8(%rip)
6e20(6): mov $0xc,%r12d
6e26(7): cmp 0xfffffc18(%rbp),%r15
6e2d(3): setz %dl
6e30(3): test %r15,%r15
6e33(6): jz 0x26d(%rip)
6e39(2): test %dl,%dl
6e3b(6): jnz 0x265(%rip)
6e41(3): mov %r12,%rsi
6e44(3): mov %r15,%rdi
6e47(5): call 0xffffa819(%rip)
6e4c(3): test %rax,%rax
6e4f(6): jz 0xfc(%rip)
6e55(3): mov %rax,%r15
6e58(5): jmp 0xffffff37(%rip)
6e5d(3): nop (%rax)
6e60(a): mov $0x0,0xfffffc20(%rbp)
6e6a(5): jmp 0xfffff8ed(%rip)
6e6f(1): nop 
6e70(6): js 0xfffff5f5(%rip)
6e76(3): add %r12,%r12
6e79(3): cmp %rax,%r12
6e7c(6): jnb 0xfffff6da(%rip)
6e82(4): cmp $0xffffffff,%rax
6e86(6): jz 0xfffff5df(%rip)
6e8c(7): cmp 0xfffffc18(%rbp),%r15
6e93(3): mov %rax,%r12
6e96(3): setz %dl
6e99(3): test %r15,%r15
6e9c(6): jnz 0xfffff6cd(%rip)
6ea2(6): nop 0x0(%rax,%rax,1)
6ea8(3): mov %r12,%rdi
6eab(7): mov %r8,0xfffffc20(%rbp)
6eb2(6): mov %dl,0xfffffc30(%rbp)
6eb8(7): mov %rcx,0xfffffc38(%rbp)
6ebf(5): call 0xffffa761(%rip)
6ec4(3): test %rax,%rax
6ec7(3): mov %rax,%r9
6eca(7): mov 0xfffffc38(%rbp),%rcx
6ed1(7): movzx 0xfffffc30(%rbp),%edx
6ed8(7): mov 0xfffffc20(%rbp),%r8
6edf(6): jz 0xfffff586(%rip)
6ee5(3): test %rbx,%rbx
6ee8(6): jz 0x208(%rip)
6eee(2): test %dl,%dl
6ef0(6): jz 0x200(%rip)
6ef6(3): mov %r15,%rsi
6ef9(3): mov %rbx,%rdx
6efc(3): mov %rax,%rdi
6eff(7): mov %r8,0xfffffc30(%rbp)
6f06(7): mov %rcx,0xfffffc38(%rbp)
6f0d(5): call 0xffffa6e3(%rip)
6f12(7): mov 0xfffffc38(%rbp),%rcx
6f19(3): mov %rax,%r15
6f1c(7): mov 0xfffffc30(%rbp),%r8
6f23(5): jmp 0xfffff681(%rip)
6f28(8): nop 0x0(%rax,%rax,1)
6f30(3): mov %r12,%r14
6f33(5): jmp 0xfffff671(%rip)
6f38(8): nop 0x0(%rax,%rax,1)
6f40(3): mov %r14,(%rax)
6f43(3): mov %r14,%rbx
6f46(5): jmp 0xfffffe4e(%rip)
6f4b(5): call 0xffffa505(%rip)
6f50(7): mov %rax,0xfffffc38(%rbp)
6f57(9): nop 0x0(%rax,%rax,1)
6f60(3): mov %r15,%rdi
6f63(5): call 0xffffa4cd(%rip)
6f68(5): jmp 0xfffff51b(%rip)
6f6d(3): nop (%rax)
6f70(7): mov 0xfffffc10(%rbp),%r9
6f77(7): mov 0xfffffc28(%rbp),%r8
6f7e(3): mov %r10,%rsi
6f81(7): mov $0xffffffff,%rcx
6f88(5): mov $0x1,%edx
6f8d(5): mov $0x1,%eax
6f92(7): mov %r10,0xfffffbd0(%rbp)
6f99(5): call 0xffffa487(%rip)
6f9e(7): mov 0xfffffbd0(%rbp),%r10
6fa5(5): jmp 0xfffff921(%rip)
6faa(6): nop 0x0(%rax,%rax,1)
6fb0(4): sub $0x10,%rsp
6fb4(7): mov 0xfffffc10(%rbp),%r9
6fbb(3): fstp %st0,(%rsp)
6fbe(5): jmp 0xfffff8db(%rip)
6fc3(5): nop 0x0(%rax,%rax,1)
6fc8(6): js 0xfffff49d(%rip)
6fce(3): add %r12,%r12
6fd1(3): cmp %rax,%r12
6fd4(6): jnb 0xfffff7e5(%rip)
6fda(6): nop 0x0(%rax,%rax,1)
6fe0(3): test %rdx,%rdx
6fe3(6): jnz 0xfffff482(%rip)
6fe9(4): cmp $0xffffffff,%rax
6fed(6): jz 0xfffff478(%rip)
6ff3(7): cmp 0xfffffc18(%rbp),%r15
6ffa(3): mov %rax,%r12
6ffd(3): setz %dl
7000(3): test %r15,%r15
7003(6): jnz 0xfffff7c9(%rip)
7009(7): nop 0x0(%rax)
7010(3): mov %r12,%rdi
7013(6): mov %dl,0xfffffc38(%rbp)
7019(5): call 0xffffa607(%rip)
701e(3): test %rax,%rax
7021(3): mov %rax,%rcx
7024(7): movzx 0xfffffc38(%rbp),%edx
702b(6): jz 0xfffff43a(%rip)
7031(3): test %r14,%r14
7034(6): jz 0x19c(%rip)
703a(2): test %dl,%dl
703c(6): jz 0x194(%rip)
7042(3): mov %r15,%rsi
7045(3): mov %r14,%rdx
7048(3): mov %rax,%rdi
704b(5): call 0xffffa5a5(%rip)
7050(3): mov %rax,%r15
7053(5): jmp 0xfffff798(%rip)
7058(8): nop 0x0(%rax,%rax,1)
7060(3): mov $0x4c,(%rbx)
7063(4): add $0x1,%rbx
7067(5): jmp 0xfffff6b4(%rip)
706c(4): nop 0x0(%rax)
7070(3): mov %r14b,(%rax)
7073(3): mov %r14,%rbx
7076(5): jmp 0xfffffd1e(%rip)
707b(5): nop 0x0(%rax,%rax,1)
7080(3): mov %r14d,(%rax)
7083(3): mov %r14,%rbx
7086(5): jmp 0xfffffd0e(%rip)
708b(5): nop 0x0(%rax,%rax,1)
7090(4): mov %r14w,(%rax)
7094(3): mov %r14,%rbx
7097(5): jmp 0xfffffcfd(%rip)
709c(4): nop 0x0(%rax)
70a0(3): mov %r12,%rdi
70a3(6): mov %dl,0xfffffc38(%rbp)
70a9(5): call 0xffffa577(%rip)
70ae(3): test %rax,%rax
70b1(3): mov %rax,%rcx
70b4(7): movzx 0xfffffc38(%rbp),%edx
70bb(6): jz 0xfffff3aa(%rip)
70c1(3): test %r14,%r14
70c4(6): jz 0x140(%rip)
70ca(2): test %dl,%dl
70cc(6): jz 0x138(%rip)
70d2(3): mov %r15,%rsi
70d5(3): mov %r14,%rdx
70d8(3): mov %rax,%rdi
70db(5): call 0xffffa515(%rip)
70e0(3): mov %rax,%r15
70e3(5): jmp 0xfffffcac(%rip)
70e8(8): nop 0x0(%rax,%rax,1)
70f0(3): mov %r9,%r15
70f3(5): jmp 0xfffff4b1(%rip)
70f8(8): nop 0x0(%rax,%rax,1)
7100(4): sub $0x8,%rsp
7104(6): push 0xfffffc10(%rbp)
710a(5): jmp 0xfffffa7b(%rip)
710f(1): nop 
7110(4): sub $0x8,%rsp
7114(6): push 0xfffffc10(%rbp)
711a(4): sub $0x10,%rsp
711e(3): fstp %st0,(%rsp)
7121(5): jmp 0xfffffb2a(%rip)
7126(a): nop 0x0(%rax,%rax,1)
7130(7): mov 0xfffffc38(%rbp),%rax
7137(6): mov 0xfffffbdc(%rbp),%edi
713d(3): movsxd %ecx,%rbx
7140(3): add %r14,%rbx
7143(2): mov %edi,(%rax)
7145(5): jmp 0xfffffc4f(%rip)
714a(6): nop 0x0(%rax,%rax,1)
7150(7): cmp 0xfffffc18(%rbp),%r15
7157(2): jz 0xb(%rip)
7159(3): test %r15,%r15
715c(6): jnz 0xbd(%rip)
7162(7): mov 0xfffffbe0(%rbp),%rax
7169(3): test %rax,%rax
716c(2): jz 0xa(%rip)
716e(3): mov %rax,%rdi
7171(5): call 0xffffa2bf(%rip)
7176(7): mov 0xfffffbf8(%rbp),%rax
717d(7): mov 0xfffffd48(%rbp),%rdi
7184(4): add $0x20,%rax
7188(3): cmp %rax,%rdi
718b(2): jz 0x7(%rip)
718d(5): call 0xffffa2a3(%rip)
7192(7): mov 0xfffffbf0(%rbp),%rax
7199(7): mov 0xfffffc58(%rbp),%rdi
71a0(4): add $0x10,%rax
71a4(3): cmp %rax,%rdi
71a7(2): jz 0x7(%rip)
71a9(5): call 0xffffa287(%rip)
71ae(7): mov 0xfffffc38(%rbp),%rax
71b5(3): xor %r15d,%r15d
71b8(6): mov $0x4b,(%rax)
71be(5): jmp 0xfffff321(%rip)
71c3(5): nop 0x0(%rax,%rax,1)
71c8(3): xor %r15d,%r15d
71cb(5): jmp 0xfffff314(%rip)
71d0(3): mov %rcx,%r15
71d3(5): jmp 0xfffff618(%rip)
71d8(8): nop 0x0(%rax,%rax,1)
71e0(6): js 0xfffff285(%rip)
71e6(3): add %r12,%r12
71e9(3): cmp %rax,%r12
71ec(6): jnb 0xfffffc3a(%rip)
71f2(4): cmp $0xffffffff,%rax
71f6(6): jz 0xfffff26f(%rip)
71fc(3): mov %rax,%r12
71ff(5): jmp 0xfffffc27(%rip)
7204(3): mov %rcx,%r15
7207(5): jmp 0xfffffb88(%rip)
720c(3): mov %r15,%rdi
720f(5): call 0xffffa221(%rip)
7214(5): jmp 0xfffff84e(%rip)
7219(3): mov %r15,%rdi
721c(5): call 0xffffa214(%rip)
7221(5): jmp 0xffffff41(%rip)
7226(5): call 0xffffa21a(%rip)
722b(5): nop 0x0(%rax,%rax,1)
7230(7): mov 0xfffffbf8(%rbp),%rax
7237(7): mov 0xfffffd48(%rbp),%rdi
723e(4): add $0x20,%rax
7242(3): cmp %rax,%rdi
7245(2): jz 0x7(%rip)
7247(5): call 0xffffa1e9(%rip)
724c(7): mov 0xfffffbf0(%rbp),%rax
7253(7): mov 0xfffffc58(%rbp),%rdi
725a(4): add $0x10,%rax
725e(3): cmp %rax,%rdi
7261(2): jz 0x7(%rip)
7263(5): call 0xffffa1cd(%rip)
7268(5): call 0xffffa1e8(%rip)
726d(3): xor %r15d,%r15d
7270(6): mov $0x16,(%rax)
7276(5): jmp 0xfffff269(%rip)
727b(3): mov %r14,%rbx
727e(2): xor %eax,%eax
7280(4): add $0x1,%rbx
7284(6): jb 0x10c(%rip)
728a(3): cmp %rbx,%r12
728d(2): jnb 0x4f(%rip)
728f(3): test %r12,%r12
7292(6): jnz 0x137(%rip)
7298(4): cmp $0xc,%rbx
729c(6): jnbe 0x112(%rip)
72a2(6): mov $0xc,%r12d
72a8(7): cmp 0xfffffc18(%rbp),%r15
72af(4): setz %r13b
72b3(3): test %r15,%r15
72b6(6): jz 0xa6(%rip)
72bc(3): test %r13b,%r13b
72bf(6): jnz 0x9d(%rip)
72c5(3): mov %r12,%rsi
72c8(3): mov %r15,%rdi
72cb(5): call 0xffffa395(%rip)
72d0(3): test %rax,%rax
72d3(6): jz 0xfffffc78(%rip)
72d9(3): mov %rax,%r15
72dc(7): cmp 0xfffffc18(%rbp),%r15
72e3(5): mov $0x0,0x0(%r15,%r14,1)
72e8(2): jz 0x19(%rip)
72ea(3): cmp %rbx,%r12
72ed(2): jbe 0x14(%rip)
72ef(3): mov %r15,%rdi
72f2(3): mov %rbx,%rsi
72f5(5): call 0xffffa36b(%rip)
72fa(3): test %rax,%rax
72fd(4): cmovne %rax,%r15
7301(7): mov 0xfffffbe0(%rbp),%rax
7308(3): test %rax,%rax
730b(2): jz 0xa(%rip)
730d(3): mov %rax,%rdi
7310(5): call 0xffffa120(%rip)
7315(7): mov 0xfffffbf8(%rbp),%rax
731c(7): mov 0xfffffd48(%rbp),%rdi
7323(4): add $0x20,%rax
7327(3): cmp %rax,%rdi
732a(2): jz 0x7(%rip)
732c(5): call 0xffffa104(%rip)
7331(7): mov 0xfffffbf0(%rbp),%rax
7338(7): mov 0xfffffc58(%rbp),%rdi
733f(4): add $0x10,%rax
7343(3): cmp %rax,%rdi
7346(2): jz 0x7(%rip)
7348(5): call 0xffffa0e8(%rip)
734d(7): mov 0xfffffbe8(%rbp),%rax
7354(3): mov %r14,(%rax)
7357(5): jmp 0xfffff188(%rip)
735c(3): mov %r12,%rdi
735f(5): call 0xffffa2c1(%rip)
7364(3): test %rax,%rax
7367(3): mov %rax,%rcx
736a(6): jz 0xfffff0fb(%rip)
7370(3): test %r14,%r14
7373(2): jz 0x6d(%rip)
7375(3): test %r13b,%r13b
7378(2): jz 0x68(%rip)
737a(3): mov %r15,%rsi
737d(3): mov %r14,%rdx
7380(3): mov %rax,%rdi
7383(5): call 0xffffa26d(%rip)
7388(3): mov %rax,%r15
738b(5): jmp 0xffffff51(%rip)
7390(4): cmp $0xffffffff,%r12
7394(5): mov $0x1,%eax
7399(6): jz 0xffffff43(%rip)
739f(3): test %r12,%r12
73a2(6): jz 0xfffff0c3(%rip)
73a8(6): js 0xfffff0bd(%rip)
73ae(3): test %rax,%rax
73b1(6): jnz 0xfffff0b4(%rip)
73b7(4): cmp $0xffffffff,%rbx
73bb(6): jz 0xfffff0aa(%rip)
73c1(3): mov %rbx,%r12
73c4(5): jmp 0xfffffee4(%rip)
73c9(6): js 0xfffff09c(%rip)
73cf(3): add %r12,%r12
73d2(3): cmp %rbx,%r12
73d5(6): jnb 0xfffffed3(%rip)
73db(2): jmp 0xffffffd3(%rip)
73dd(3): nop (%rax)
73e0(3): mov %rcx,%r15
73e3(5): jmp 0xfffffef9(%rip)
73e8(4): cmp $0xffffffff,%r12
73ec(6): jz 0xfffff424(%rip)
73f2(5): jmp 0xfffff07f(%rip)
73f7(5): call 0xffffa129(%rip)
73fc(4): cmp $0xffffffff,%r12
7400(5): mov $0x1,%edx
7405(6): jz 0xfffff3e6(%rip)
740b(3): test %r12,%r12
740e(6): jz 0xfffff057(%rip)
7414(6): jns 0xfffffbcc(%rip)
741a(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
7420(4): cmp $0x0,(%rsi)
7424(4): mov 0x8(%rsi),%rax
7428(2): jz 0x65(%rip)
742a(7): lea 0x247f(%rip),%r8
7431(7): lea 0x24d8(%rip),%r10
7438(7): lea 0x2465(%rip),%r9
743f(2): xor %ecx,%ecx
7441(7): nop 0x0(%rax)
7448(3): cmp $0x16,(%rax)
744b(2): jnbe 0x45(%rip)
744d(2): mov (%rax),%edx
744f(4): movsxd 0x0(%r8,%rdx,4),%rdx
7453(3): add %r8,%rdx
7456(2): jmp %rdx
7458(8): nop 0x0(%rax,%rax,1)
7460(4): mov 0x8(%rdi),%rdx
7464(4): add $0xf,%rdx
7468(4): and $0xfffffff0,%rdx
746c(4): lea 0x10(%rdx),%r11
7470(4): mov %r11,0x8(%rdi)
7474(2): fld (%rdx),%st0
7476(3): fstp %st0,0x10(%rax)
7479(7): nop 0x0(%rax)
7480(4): add $0x1,%rcx
7484(4): add $0x20,%rax
7488(3): cmp %rcx,(%rsi)
748b(2): jnbe 0xffffffbd(%rip)
748d(2): xor %eax,%eax
748f(1): ret near (%rsp)
7490(5): mov $0xffffffff,%eax
7495(1): ret near (%rsp)
7496(3): mov (%rdi),%r11d
7499(4): cmp $0x2f,%r11d
749d(6): jnbe 0x13d(%rip)
74a3(3): mov %r11d,%edx
74a6(4): add 0x10(%rdi),%rdx
74aa(4): add $0x8,%r11d
74ae(3): mov %r11d,(%rdi)
74b1(3): mov (%rdx),%rdx
74b4(4): mov %rdx,0x10(%rax)
74b8(2): jmp 0xffffffc8(%rip)
74ba(3): mov (%rdi),%r11d
74bd(4): cmp $0x2f,%r11d
74c1(6): jnbe 0x13b(%rip)
74c7(3): mov %r11d,%edx
74ca(4): add 0x10(%rdi),%rdx
74ce(4): add $0x8,%r11d
74d2(3): mov %r11d,(%rdi)
74d5(2): mov (%rdx),%edx
74d7(3): mov %edx,0x10(%rax)
74da(2): jmp 0xffffffa6(%rip)
74dc(3): mov (%rdi),%r11d
74df(4): cmp $0x2f,%r11d
74e3(6): jnbe 0x108(%rip)
74e9(3): mov %r11d,%edx
74ec(4): add 0x10(%rdi),%rdx
74f0(4): add $0x8,%r11d
74f4(3): mov %r11d,(%rdi)
74f7(2): mov (%rdx),%edx
74f9(3): mov %dl,0x10(%rax)
74fc(2): jmp 0xffffff84(%rip)
74fe(3): mov (%rdi),%r11d
7501(4): cmp $0x2f,%r11d
7505(6): jnbe 0xa5(%rip)
750b(3): mov %r11d,%edx
750e(4): add 0x10(%rdi),%rdx
7512(4): add $0x8,%r11d
7516(3): mov %r11d,(%rdi)
7519(2): mov (%rdx),%edx
751b(4): mov %dx,0x10(%rax)
751f(5): jmp 0xffffff61(%rip)
7524(3): mov (%rdi),%r11d
7527(4): cmp $0x2f,%r11d
752b(6): jnbe 0x90(%rip)
7531(3): mov %r11d,%edx
7534(4): add 0x10(%rdi),%rdx
7538(4): add $0x8,%r11d
753c(3): mov %r11d,(%rdi)
753f(3): mov (%rdx),%rdx
7542(3): test %rdx,%rdx
7545(4): cmove %r9,%rdx
7549(4): mov %rdx,0x10(%rax)
754d(5): jmp 0xffffff33(%rip)
7552(4): mov 0x4(%rdi),%r11d
7556(7): cmp $0xaf,%r11d
755d(6): jnbe 0xb0(%rip)
7563(3): mov %r11d,%edx
7566(4): add 0x10(%rdi),%rdx
756a(4): add $0x10,%r11d
756e(4): mov %r11d,0x4(%rdi)
7572(4): movsd (%rdx),%xmm0
7576(5): movsd %xmm0,0x10(%rax)
757b(5): jmp 0xffffff05(%rip)
7580(3): mov (%rdi),%r11d
7583(4): cmp $0x2f,%r11d
7587(2): jnbe 0x45(%rip)
7589(3): mov %r11d,%edx
758c(4): add 0x10(%rdi),%rdx
7590(4): add $0x8,%r11d
7594(3): mov %r11d,(%rdi)
7597(3): mov (%rdx),%rdx
759a(3): test %rdx,%rdx
759d(4): cmove %r10,%rdx
75a1(4): mov %rdx,0x10(%rax)
75a5(5): jmp 0xfffffedb(%rip)
75aa(4): mov 0x8(%rdi),%rdx
75ae(4): lea 0x8(%rdx),%r11
75b2(4): mov %r11,0x8(%rdi)
75b6(5): jmp 0xffffff63(%rip)
75bb(4): mov 0x8(%rdi),%rdx
75bf(4): lea 0x8(%rdx),%r11
75c3(4): mov %r11,0x8(%rdi)
75c7(5): jmp 0xffffff78(%rip)
75cc(4): mov 0x8(%rdi),%rdx
75d0(4): lea 0x8(%rdx),%r11
75d4(4): mov %r11,0x8(%rdi)
75d8(2): jmp 0xffffffbf(%rip)
75da(4): mov 0x8(%rdi),%rdx
75de(4): lea 0x8(%rdx),%r11
75e2(4): mov %r11,0x8(%rdi)
75e6(5): jmp 0xfffffecb(%rip)
75eb(4): mov 0x8(%rdi),%rdx
75ef(4): lea 0x8(%rdx),%r11
75f3(4): mov %r11,0x8(%rdi)
75f7(5): jmp 0xffffff00(%rip)
75fc(4): mov 0x8(%rdi),%rdx
7600(4): lea 0x8(%rdx),%r11
7604(4): mov %r11,0x8(%rdi)
7608(5): jmp 0xfffffecd(%rip)
760d(4): mov 0x8(%rdi),%rdx
7611(4): lea 0x8(%rdx),%r11
7615(4): mov %r11,0x8(%rdi)
7619(5): jmp 0xffffff59(%rip)

"printf_parse" :
7620(2): push %r15
7622(2): push %r14
7624(4): lea 0x20(%rsi),%rcx
7628(2): push %r13
762a(2): push %r12
762c(4): lea 0x10(%rdx),%rax
7630(1): push %rbp
7631(1): push %rbx
7632(3): mov %rsi,%r14
7635(3): mov %rdx,%r15
7638(2): xor %ebx,%ebx
763a(6): mov $0x7,%r9d
7640(4): sub $0x58,%rsp
7644(6): mov $0x7,%r10d
764a(7): mov $0x0,(%rsi)
7651(4): mov %rcx,0x8(%rsi)
7655(5): mov %rcx,0x28(%rsp)
765a(7): mov $0xffffffff,%r8
7661(7): mov $0x0,(%rdx)
7668(5): mov %rax,0x8(%rsp)
766d(4): mov %rax,0x8(%rdx)
7671(9): mov $0x0,0x18(%rsp)
767a(9): mov $0x0,0x10(%rsp)
7683(9): mov $0x0,0x20(%rsp)
768c(2): jmp 0xf(%rip)
768e(2): nop 
7690(2): cmp $0x25,%al
7692(4): lea 0x1(%rdi),%rbp
7696(2): jz 0x42(%rip)
7698(3): mov %rbp,%rdi
769b(3): movzx (%rdi),%eax
769e(2): test %al,%al
76a0(2): jnz 0xfffffff0(%rip)
76a2(4): lea 0x0(%rbx,%rbx,4),%rax
76a6(4): lea 0x0(%rbx,%rax,2),%rax
76aa(4): mov %rdi,0x0(%rcx,%rax,8)
76ae(5): mov 0x10(%rsp),%rax
76b3(4): mov %rax,0x10(%r14)
76b7(5): mov 0x18(%rsp),%rax
76bc(4): mov %rax,0x18(%r14)
76c0(2): xor %eax,%eax
76c2(4): add $0x58,%rsp
76c6(1): pop %rbx
76c7(1): pop %rbp
76c8(2): pop %r12
76ca(2): pop %r13
76cc(2): pop %r14
76ce(2): pop %r15
76d0(1): ret near (%rsp)
76d1(7): nop 0x0(%rax)
76d8(4): lea 0x0(%rbx,%rbx,4),%rax
76dc(3): mov %r8,%r13
76df(4): lea 0x0(%rbx,%rax,2),%rax
76e3(4): lea 0x0(%rcx,%rax,8),%r12
76e7(4): mov %rdi,(%r12)
76eb(9): mov $0x0,0x10(%r12)
76f4(9): mov $0x0,0x18(%r12)
76fd(9): mov $0x0,0x20(%r12)
7706(5): mov %r8,0x28(%r12)
770b(9): mov $0x0,0x30(%r12)
7714(9): mov $0x0,0x38(%r12)
771d(5): mov %r8,0x40(%r12)
7722(5): mov %r8,0x50(%r12)
7727(4): movzx 0x1(%rdi),%ebx
772b(3): lea 0xffffffd0(%rbx),%eax
772e(2): cmp $0x9,%al
7730(2): jnbe 0x3e(%rip)
7732(5): jmp 0x438(%rip)
7737(9): nop 0x0(%rax,%rax,1)
7740(3): cmp $0x2d,%bl
7743(2): jz 0x45(%rip)
7745(3): cmp $0x2b,%bl
7748(2): jz 0x48(%rip)
774a(3): cmp $0x20,%bl
774d(2): jz 0x53(%rip)
774f(3): cmp $0x23,%bl
7752(2): jz 0x5e(%rip)
7754(3): cmp $0x30,%bl
7757(2): jz 0x69(%rip)
7759(3): cmp $0x49,%bl
775c(2): jnz 0x74(%rip)
775e(6): or $0x40,0x10(%r12)
7764(4): nop 0x0(%rax)
7768(3): movzx (%rax),%ebx
776b(3): mov %rax,%rbp
776e(4): lea 0x1(%rbp),%rax
7772(3): cmp $0x27,%bl
7775(3): mov %rax,%rdx
7778(2): jnz 0xffffffc8(%rip)
777a(6): or $0x1,0x10(%r12)
7780(2): jmp 0xffffffe8(%rip)
7782(6): nop 0x0(%rax,%rax,1)
7788(6): or $0x2,0x10(%r12)
778e(2): jmp 0xffffffda(%rip)
7790(6): or $0x4,0x10(%r12)
7796(2): jmp 0xffffffd2(%rip)
7798(8): nop 0x0(%rax,%rax,1)
77a0(6): or $0x8,0x10(%r12)
77a6(2): jmp 0xffffffc2(%rip)
77a8(8): nop 0x0(%rax,%rax,1)
77b0(6): or $0x10,0x10(%r12)
77b6(2): jmp 0xffffffb2(%rip)
77b8(8): nop 0x0(%rax,%rax,1)
77c0(6): or $0x20,0x10(%r12)
77c6(2): jmp 0xffffffa2(%rip)
77c8(8): nop 0x0(%rax,%rax,1)
77d0(3): cmp $0x2a,%bl
77d3(6): jz 0x1b6(%rip)
77d9(3): lea 0xffffffd0(%rbx),%ecx
77dc(3): cmp $0x9,%cl
77df(6): jbe 0x418(%rip)
77e5(3): cmp $0x2e,%bl
77e8(6): jz 0x2d7(%rip)
77ee(2): xor %eax,%eax
77f0(5): mov $0x1,%esi
77f5(2): jmp 0x32(%rip)
77f7(9): nop 0x0(%rax,%rax,1)
7800(3): cmp $0x4c,%bl
7803(2): jz 0x3d(%rip)
7805(3): cmp $0x6c,%bl
7808(2): jz 0x18(%rip)
780a(3): cmp $0x6a,%bl
780d(2): jz 0x13(%rip)
780f(2): mov %ebx,%edx
7811(3): and $0xdf,%edx
7814(3): cmp $0x5a,%dl
7817(2): jz 0x9(%rip)
7819(3): cmp $0x74,%bl
781c(2): jnz 0x2c(%rip)
781e(2): nop 
7820(3): add $0x8,%eax
7823(4): movzx 0x0(%rbp),%ebx
7827(4): add $0x1,%rbp
782b(3): cmp $0x68,%bl
782e(2): jnz 0xffffffd2(%rip)
7830(2): mov %eax,%ecx
7832(2): mov %esi,%edx
7834(3): and $0x1,%ecx
7837(2): shl/sal %cl,%edx
7839(2): or %edx,%eax
783b(2): jmp 0xffffffe8(%rip)
783d(3): nop (%rax)
7840(3): or $0x4,%eax
7843(2): jmp 0xffffffe0(%rip)
7845(3): nop (%rax)
7848(3): lea 0xffffffdb(%rbx),%edx
784b(3): cmp $0x53,%dl
784e(6): jnbe 0x61d(%rip)
7854(7): lea 0x20d1(%rip),%rcx
785b(3): movzx %dl,%edx
785e(4): movsxd 0x0(%rcx,%rdx,4),%rdx
7862(3): add %rcx,%rdx
7865(2): jmp %rdx
7867(6): mov $0x10,%r11d
786d(5): mov $0x73,%ebx
7872(6): nop 0x0(%rax,%rax,1)
7878(4): cmp $0xffffffff,%r13
787c(6): jz 0x6bb(%rip)
7882(5): mov %r13,0x50(%r12)
7887(3): cmp %r13,%r9
788a(4): mov 0x8(%r15),%rcx
788e(6): jbe 0x622(%rip)
7894(3): mov (%r15),%rax
7897(3): mov %rax,%rdx
789a(4): shl/sal $0x5,%rdx
789e(3): add %rcx,%rdx
78a1(3): cmp %r13,%rax
78a4(2): jnbe 0x22(%rip)
78a6(a): nop 0x0(%rax,%rax,1)
78b0(4): add $0x1,%rax
78b4(6): mov $0x0,(%rdx)
78ba(4): add $0x20,%rdx
78be(3): cmp %r13,%rax
78c1(2): jbe 0xffffffef(%rip)
78c3(3): mov %rax,(%r15)
78c6(4): shl/sal $0x5,%r13
78ca(4): lea 0x0(%rcx,%r13,1),%rax
78ce(2): mov (%rax),%edx
78d0(2): test %edx,%edx
78d2(6): jnz 0x5d1(%rip)
78d8(3): mov %r11d,(%rax)
78db(5): mov %bl,0x48(%r12)
78e0(3): mov (%r14),%rax
78e3(5): mov %rbp,0x8(%r12)
78e8(4): lea 0x1(%rax),%rbx
78ec(3): cmp %rbx,%r10
78ef(3): mov %rbx,(%r14)
78f2(6): jnbe 0x8e(%rip)
78f8(3): test %r10,%r10
78fb(6): js 0x9ac(%rip)
7901(3): add %r10,%r10
7904(a): mov $0x209622091746699450,%rax
790e(3): cmp %rax,%r10
7911(6): jnbe 0x996(%rip)
7917(4): lea 0x0(%r10,%r10,4),%rax
791b(4): mov 0x8(%r14),%rdi
791f(5): cmp %rdi,0x28(%rsp)
7924(5): mov %r9,0x40(%rsp)
7929(5): mov %r10,0x38(%rsp)
792e(4): lea 0x0(%r10,%rax,2),%rax
7932(5): mov %r8,0x30(%rsp)
7937(8): lea 0x0(,%rax,8),%rsi
793f(6): jz 0x6be(%rip)
7945(5): call 0xffff9d1b(%rip)
794a(3): test %rax,%rax
794d(3): mov %rax,%rcx
7950(5): mov 0x30(%rsp),%r8
7955(5): mov 0x38(%rsp),%r10
795a(5): mov 0x40(%rsp),%r9
795f(6): jz 0x948(%rip)
7965(5): mov 0x28(%rsp),%rax
796a(4): cmp 0x8(%r14),%rax
796e(3): mov (%r14),%rbx
7971(6): jz 0x6af(%rip)
7977(4): mov %rcx,0x8(%r14)
797b(5): jmp 0xfffffd1d(%rip)
7980(4): mov 0x8(%r14),%rcx
7984(5): jmp 0xfffffd14(%rip)
7989(5): mov 0x10(%rsp),%rsi
798e(5): mov $0x1,%ecx
7993(5): mov %rbp,0x18(%r12)
7998(5): mov %rax,0x20(%r12)
799d(3): test %rsi,%rsi
79a0(4): cmovne %rsi,%rcx
79a4(5): mov %rcx,0x10(%rsp)
79a9(4): movzx 0x1(%rbp),%ecx
79ad(3): lea 0xffffffd0(%rcx),%esi
79b0(4): cmp $0x9,%sil
79b4(6): jbe 0x2e1(%rip)
79ba(5): mov 0x20(%rsp),%rsi
79bf(4): cmp $0xffffffff,%rsi
79c3(4): lea 0x1(%rsi),%rdx
79c7(5): mov %rsi,0x28(%r12)
79cc(6): jz 0x49f(%rip)
79d2(5): mov 0x20(%rsp),%rbx
79d7(3): mov %rax,%rbp
79da(5): mov %rdx,0x20(%rsp)
79df(3): cmp %rbx,%r9
79e2(4): mov 0x8(%r15),%rcx
79e6(6): jnbe 0x67c(%rip)
79ec(3): add %r9,%r9
79ef(4): lea 0x1(%rbx),%rax
79f3(3): cmp %rbx,%r9
79f6(4): cmovbe %rax,%r9
79fa(a): mov $0x576460752303423487,%rax
7a04(3): cmp %rax,%r9
7a07(6): jnbe 0x8a4(%rip)
7a0d(3): mov %r9,%rsi
7a10(5): mov %r9,0x40(%rsp)
7a15(5): mov %r10,0x38(%rsp)
7a1a(4): shl/sal $0x5,%rsi
7a1e(5): cmp %rcx,0x8(%rsp)
7a23(5): mov %r8,0x30(%rsp)
7a28(6): jz 0x719(%rip)
7a2e(3): mov %rcx,%rdi
7a31(5): call 0xffff9c2f(%rip)
7a36(4): mov 0x8(%r15),%rdx
7a3a(5): mov 0x30(%rsp),%r8
7a3f(3): mov %rax,%rcx
7a42(5): mov 0x38(%rsp),%r10
7a47(5): mov 0x40(%rsp),%r9
7a4c(3): test %rcx,%rcx
7a4f(6): jz 0x8b8(%rip)
7a55(5): cmp %rdx,0x8(%rsp)
7a5a(3): mov (%r15),%rax
7a5d(6): jz 0x7be(%rip)
7a63(4): mov %rcx,0x8(%r15)
7a67(3): mov %rax,%rdx
7a6a(4): shl/sal $0x5,%rdx
7a6e(3): add %rcx,%rdx
7a71(3): cmp %rbx,%rax
7a74(2): jnbe 0x22(%rip)
7a76(a): nop 0x0(%rax,%rax,1)
7a80(4): add $0x1,%rax
7a84(6): mov $0x0,(%rdx)
7a8a(4): add $0x20,%rdx
7a8e(3): cmp %rbx,%rax
7a91(2): jbe 0xffffffef(%rip)
7a93(3): mov %rax,(%r15)
7a96(4): shl/sal $0x5,%rbx
7a9a(4): lea 0x0(%rcx,%rbx,1),%rax
7a9e(2): mov (%rax),%edx
7aa0(2): test %edx,%edx
7aa2(6): jnz 0x4d9(%rip)
7aa8(6): mov $0x5,(%rax)
7aae(4): movzx 0x0(%rbp),%ebx
7ab2(4): lea 0x1(%rbp),%rdx
7ab6(3): cmp $0x2e,%bl
7ab9(6): jnz 0xfffffd35(%rip)
7abf(4): cmp $0x2a,0x1(%rbp)
7ac3(5): mov %rbp,0x30(%r12)
7ac8(6): jnz 0x186(%rip)
7ace(5): mov 0x18(%rsp),%rsi
7ad3(4): lea 0x2(%rbp),%r11
7ad7(5): mov $0x2,%eax
7adc(5): mov %r11,0x38(%r12)
7ae1(4): cmp $0x2,%rsi
7ae5(4): cmovnb %rsi,%rax
7ae9(5): mov %rax,0x18(%rsp)
7aee(4): movsx 0x2(%rbp),%eax
7af2(3): lea 0xffffffd0(%rax),%edx
7af5(3): cmp $0x9,%dl
7af8(6): jbe 0x694(%rip)
7afe(5): mov 0x40(%r12),%rbx
7b03(4): cmp $0xffffffff,%rbx
7b07(6): jz 0x65e(%rip)
7b0d(3): cmp %rbx,%r9
7b10(4): mov 0x8(%r15),%rcx
7b14(6): jbe 0x56b(%rip)
7b1a(3): mov (%r15),%rax
7b1d(3): mov %rax,%rdx
7b20(4): shl/sal $0x5,%rdx
7b24(3): add %rcx,%rdx
7b27(3): cmp %rbx,%rax
7b2a(2): jnbe 0x1c(%rip)
7b2c(4): nop 0x0(%rax)
7b30(4): add $0x1,%rax
7b34(6): mov $0x0,(%rdx)
7b3a(4): add $0x20,%rdx
7b3e(3): cmp %rbx,%rax
7b41(2): jbe 0xffffffef(%rip)
7b43(3): mov %rax,(%r15)
7b46(4): shl/sal $0x5,%rbx
7b4a(4): lea 0x0(%rcx,%rbx,1),%rax
7b4e(2): mov (%rax),%edx
7b50(2): test %edx,%edx
7b52(6): jnz 0x518(%rip)
7b58(6): mov $0x5,(%rax)
7b5e(3): mov %r11,%rbp
7b61(4): movzx (%r11),%ebx
7b65(5): jmp 0xfffffc89(%rip)
7b6a(3): mov %rbp,%rax
7b6d(3): nop (%rax)
7b70(4): add $0x1,%rax
7b74(3): movzx (%rax),%edx
7b77(3): lea 0xffffffd0(%rdx),%ecx
7b7a(3): cmp $0x9,%cl
7b7d(2): jbe 0xfffffff3(%rip)
7b7f(3): cmp $0x24,%dl
7b82(3): mov %r8,%r13
7b85(6): jnz 0xfffffbe9(%rip)
7b8b(2): xor %edx,%edx
7b8d(3): movsx %bl,%eax
7b90(a): mov $0x1844674407370955161,%rdi
7b9a(3): mov %r8,%rsi
7b9d(3): sub $0x30,%eax
7ba0(3): cmp %rdi,%rdx
7ba3(2): cwde 
7ba5(2): jnbe 0x9(%rip)
7ba7(4): lea 0x0(%rdx,%rdx,4),%rsi
7bab(3): add %rsi,%rsi
7bae(3): mov %rbp,%rcx
7bb1(3): add %rsi,%rax
7bb4(4): movzx 0x1(%rbp),%ebx
7bb8(4): setb %sil
7bbc(4): add $0x1,%rbp
7bc0(3): mov %rax,%rdx
7bc3(4): movzx %sil,%esi
7bc7(3): test %rsi,%rsi
7bca(3): lea 0xffffffd0(%rbx),%edi
7bcd(6): jnz 0x391(%rip)
7bd3(4): cmp $0x9,%dil
7bd7(2): jbe 0xffffffb6(%rip)
7bd9(3): mov %rax,%r13
7bdc(4): sub $0x1,%r13
7be0(4): cmp $0xfffffffd,%r13
7be4(6): jnbe 0x287(%rip)
7bea(4): lea 0x2(%rcx),%rbp
7bee(4): movzx 0x2(%rcx),%ebx
7bf2(5): jmp 0xfffffb7c(%rip)
7bf7(5): mov %rbp,0x18(%r12)
7bfc(4): movzx 0x0(%rbp),%edi
7c00(3): mov %rbp,%rsi
7c03(3): lea 0xffffffd0(%rdi),%ecx
7c06(3): cmp $0x9,%cl
7c09(2): jbe 0xe(%rip)
7c0b(2): jmp 0x35(%rip)
7c0d(3): nop (%rax)
7c10(3): mov %rax,%rbp
7c13(4): add $0x1,%rax
7c17(3): movzx (%rax),%edi
7c1a(3): lea 0xffffffd0(%rdi),%edx
7c1d(3): cmp $0x9,%dl
7c20(2): jbe 0xfffffff0(%rip)
7c22(3): mov %rax,%rcx
7c25(4): lea 0x2(%rbp),%rdx
7c29(3): mov %rax,%rbp
7c2c(3): sub %rsi,%rcx
7c2f(5): mov 0x10(%rsp),%rsi
7c34(3): cmp %rcx,%rsi
7c37(4): cmovnb %rsi,%rcx
7c3b(5): mov %rcx,0x10(%rsp)
7c40(5): mov %rbp,0x20(%r12)
7c45(4): movzx 0x0(%rbp),%ebx
7c49(5): jmp 0xfffffb9c(%rip)
7c4e(4): movzx 0x1(%rbp),%eax
7c52(3): sub $0x30,%eax
7c55(2): cmp $0x9,%al
7c57(2): jnbe 0x17(%rip)
7c59(7): nop 0x0(%rax)
7c60(4): add $0x1,%rdx
7c64(3): movzx (%rdx),%eax
7c67(3): sub $0x30,%eax
7c6a(2): cmp $0x9,%al
7c6c(2): jbe 0xfffffff4(%rip)
7c6e(5): mov 0x18(%rsp),%rsi
7c73(3): mov %rdx,%rax
7c76(5): mov %rdx,0x38(%r12)
7c7b(3): sub %rbp,%rax
7c7e(3): movzx (%rdx),%ebx
7c81(3): mov %rdx,%rbp
7c84(3): cmp %rax,%rsi
7c87(4): cmovnb %rsi,%rax
7c8b(5): mov %rax,0x18(%rsp)
7c90(5): jmp 0xfffffb5e(%rip)
7c95(3): mov %rax,%rsi
7c98(4): add $0x1,%rsi
7c9c(3): movzx (%rsi),%edi
7c9f(4): lea 0xffffffd0(%rdi),%r11d
7ca3(4): cmp $0x9,%r11b
7ca7(2): jbe 0xfffffff1(%rip)
7ca9(4): cmp $0x24,%dil
7cad(6): jnz 0xfffffd0d(%rip)
7cb3(2): xor %esi,%esi
7cb5(3): movsx %cl,%eax
7cb8(a): mov $0x1844674407370955161,%rdi
7cc2(3): mov %r8,%rcx
7cc5(3): sub $0x30,%eax
7cc8(3): cmp %rdi,%rsi
7ccb(2): cwde 
7ccd(2): jnbe 0x9(%rip)
7ccf(4): lea 0x0(%rsi,%rsi,4),%rcx
7cd3(3): add %rcx,%rcx
7cd6(3): mov %rdx,%rbp
7cd9(3): xor %r11d,%r11d
7cdc(3): add %rcx,%rax
7cdf(4): movzx 0x1(%rdx),%ecx
7ce3(4): setb %r11b
7ce7(4): add $0x1,%rdx
7ceb(3): mov %rax,%rsi
7cee(3): test %r11,%r11
7cf1(3): lea 0xffffffd0(%rcx),%edi
7cf4(6): jnz 0x50a(%rip)
7cfa(4): cmp $0x9,%dil
7cfe(2): jbe 0xffffffb7(%rip)
7d00(4): lea 0xffffffff(%rax),%rbx
7d04(4): cmp $0xfffffffd,%rbx
7d08(6): jnbe 0x163(%rip)
7d0e(5): mov %rbx,0x28(%r12)
7d13(4): add $0x2,%rbp
7d17(5): jmp 0xfffffcc8(%rip)
7d1c(3): cmp $0xf,%eax
7d1f(6): mov $0x16,%r11d
7d25(6): jnle 0xfffffb53(%rip)
7d2b(2): test $0x4,%al
7d2d(6): jnz 0xfffffb4b(%rip)
7d33(3): cmp $0x7,%eax
7d36(6): mov $0x15,%r11d
7d3c(6): jnle 0xfffffb3c(%rip)
7d42(2): test $0x2,%al
7d44(6): mov $0x12,%r11d
7d4a(6): jnz 0xfffffb2e(%rip)
7d50(3): xor %r11d,%r11d
7d53(2): test $0x1,%al
7d55(4): setz %r11b
7d59(4): add $0x13,%r11d
7d5d(5): jmp 0xfffffb1b(%rip)
7d62(6): nop 0x0(%rax,%rax,1)
7d68(3): xor %r11d,%r11d
7d6b(3): cmp $0x7,%eax
7d6e(4): setnle %r11b
7d72(4): add $0xd,%r11d
7d76(5): jmp 0xfffffb02(%rip)
7d7b(3): cmp $0xf,%eax
7d7e(6): mov $0x9,%r11d
7d84(6): jnle 0xfffffaf4(%rip)
7d8a(2): test $0x4,%al
7d8c(6): jnz 0xfffffaec(%rip)
7d92(3): cmp $0x7,%eax
7d95(6): mov $0x7,%r11d
7d9b(6): jnle 0xfffffadd(%rip)
7da1(2): test $0x2,%al
7da3(6): mov $0x1,%r11d
7da9(6): jnz 0xfffffacf(%rip)
7daf(3): and $0x1,%eax
7db2(3): cmp $0x1,%eax
7db5(3): sbb %r11d,%r11d
7db8(4): and $0x2,%r11d
7dbc(4): add $0x3,%r11d
7dc0(5): jmp 0xfffffab8(%rip)
7dc5(3): nop (%rax)
7dc8(3): xor %r11d,%r11d
7dcb(3): cmp $0x7,%eax
7dce(4): setnle %r11b
7dd2(4): add $0xf,%r11d
7dd6(5): jmp 0xfffffaa2(%rip)
7ddb(3): cmp $0xf,%eax
7dde(6): mov $0xc,%r11d
7de4(6): jnle 0xfffffa94(%rip)
7dea(3): xor %r11d,%r11d
7ded(2): test $0x4,%al
7def(4): setnz %r11b
7df3(4): add $0xb,%r11d
7df7(5): jmp 0xfffffa81(%rip)
7dfc(6): mov $0xe,%r11d
7e02(5): mov $0x63,%ebx
7e07(5): jmp 0xfffffa71(%rip)
7e0c(3): cmp $0xf,%eax
7e0f(6): mov $0xa,%r11d
7e15(6): jnle 0xfffffa63(%rip)
7e1b(2): test $0x4,%al
7e1d(6): jnz 0xfffffa5b(%rip)
7e23(3): cmp $0x7,%eax
7e26(6): mov $0x8,%r11d
7e2c(6): jnle 0xfffffa4c(%rip)
7e32(2): test $0x2,%al
7e34(6): mov $0x2,%r11d
7e3a(6): jnz 0xfffffa3e(%rip)
7e40(3): and $0x1,%eax
7e43(3): cmp $0x1,%eax
7e46(3): sbb %r11d,%r11d
7e49(4): and $0x2,%r11d
7e4d(4): add $0x4,%r11d
7e51(5): jmp 0xfffffa27(%rip)
7e56(a): nop 0x0(%rax,%rax,1)
7e60(6): mov $0x11,%r11d
7e66(5): jmp 0xfffffa12(%rip)
7e6b(4): mov 0x8(%r15),%rcx
7e6f(5): cmp %rcx,0x8(%rsp)
7e74(2): jz 0xa(%rip)
7e76(3): mov %rcx,%rdi
7e79(5): call 0xffff95b7(%rip)
7e7e(4): mov 0x8(%r14),%rdi
7e82(5): cmp %rdi,0x28(%rsp)
7e87(2): jz 0x7(%rip)
7e89(5): call 0xffff95a7(%rip)
7e8e(5): call 0xffff95c2(%rip)
7e93(6): mov $0x16,(%rax)
7e99(5): mov $0xffffffff,%eax
7e9e(5): jmp 0xfffff824(%rip)
7ea3(3): cmp %r11d,%edx
7ea6(6): jz 0xfffffa35(%rip)
7eac(2): jmp 0xffffffc3(%rip)
7eae(2): nop 
7eb0(3): add %r9,%r9
7eb3(4): lea 0x1(%r13),%rax
7eb7(3): cmp %r13,%r9
7eba(4): cmovbe %rax,%r9
7ebe(a): mov $0x576460752303423487,%rax
7ec8(3): cmp %rax,%r9
7ecb(6): jnbe 0x3e0(%rip)
7ed1(3): mov %r9,%rsi
7ed4(5): mov %r9,0x48(%rsp)
7ed9(5): mov %r10,0x40(%rsp)
7ede(4): shl/sal $0x5,%rsi
7ee2(5): cmp %rcx,0x8(%rsp)
7ee7(5): mov %r8,0x38(%rsp)
7eec(5): mov %r11d,0x30(%rsp)
7ef1(6): jz 0xa0(%rip)
7ef7(3): mov %rcx,%rdi
7efa(5): call 0xffff9766(%rip)
7eff(3): test %rax,%rax
7f02(3): mov %rax,%rcx
7f05(5): mov 0x30(%rsp),%r11d
7f0a(5): mov 0x38(%rsp),%r8
7f0f(5): mov 0x40(%rsp),%r10
7f14(5): mov 0x48(%rsp),%r9
7f19(6): jz 0x38e(%rip)
7f1f(5): mov 0x8(%rsp),%rax
7f24(4): cmp 0x8(%r15),%rax
7f28(6): jz 0x91(%rip)
7f2e(4): mov %rcx,0x8(%r15)
7f32(5): jmp 0xfffff962(%rip)
7f37(5): mov 0x20(%rsp),%rsi
7f3c(4): cmp $0xffffffff,%rsi
7f40(4): lea 0x1(%rsi),%rax
7f44(5): mov %rsi,0x50(%r12)
7f49(6): jz 0xffffff22(%rip)
7f4f(5): mov 0x20(%rsp),%r13
7f54(5): mov %rax,0x20(%rsp)
7f59(5): jmp 0xfffff92e(%rip)
7f5e(4): cmp $0x9,%dil
7f62(6): jnbe 0xffffff09(%rip)
7f68(3): movsx %bl,%eax
7f6b(3): mov %r8,%rsi
7f6e(3): mov %rbp,%rcx
7f71(3): sub $0x30,%eax
7f74(2): cwde 
7f76(5): jmp 0xfffffc3b(%rip)
7f7b(3): cmp $0x5,%edx
7f7e(6): jnz 0xfffffef1(%rip)
7f84(4): movzx 0x0(%rbp),%ebx
7f88(4): lea 0x1(%rbp),%rdx
7f8c(5): jmp 0xfffff859(%rip)
7f91(3): mov %rsi,%rdi
7f94(5): call 0xffff968c(%rip)
7f99(3): test %rax,%rax
7f9c(3): mov %rax,%rcx
7f9f(5): mov 0x30(%rsp),%r11d
7fa4(5): mov 0x38(%rsp),%r8
7fa9(5): mov 0x40(%rsp),%r10
7fae(5): mov 0x48(%rsp),%r9
7fb3(6): jz 0x169(%rip)
7fb9(3): mov (%r15),%rdx
7fbc(5): mov 0x8(%rsp),%rsi
7fc1(3): mov %rcx,%rdi
7fc4(5): mov %r9,0x48(%rsp)
7fc9(5): mov %r10,0x40(%rsp)
7fce(5): mov %r8,0x38(%rsp)
7fd3(5): mov %r11d,0x30(%rsp)
7fd8(4): shl/sal $0x5,%rdx
7fdc(5): call 0xffff9614(%rip)
7fe1(5): mov 0x48(%rsp),%r9
7fe6(5): mov 0x40(%rsp),%r10
7feb(3): mov %rax,%rcx
7fee(5): mov 0x38(%rsp),%r8
7ff3(5): mov 0x30(%rsp),%r11d
7ff8(5): jmp 0xffffff36(%rip)
7ffd(3): mov %rsi,%rdi
8000(5): call 0xffff9620(%rip)
8005(3): test %rax,%rax
8008(3): mov %rax,%rcx
800b(5): mov 0x30(%rsp),%r8
8010(5): mov 0x38(%rsp),%r10
8015(5): mov 0x40(%rsp),%r9
801a(6): jz 0xef(%rip)
8020(4): lea 0x0(%rbx,%rbx,4),%rax
8024(5): mov 0x28(%rsp),%rsi
8029(3): mov %rcx,%rdi
802c(5): mov %r9,0x40(%rsp)
8031(5): mov %r10,0x38(%rsp)
8036(4): lea 0x0(%rbx,%rax,2),%rdx
803a(5): mov %r8,0x30(%rsp)
803f(4): shl/sal $0x3,%rdx
8043(5): call 0xffff95ad(%rip)
8048(3): mov (%r14),%rbx
804b(3): mov %rax,%rcx
804e(5): mov 0x40(%rsp),%r9
8053(5): mov 0x38(%rsp),%r10
8058(5): mov 0x30(%rsp),%r8
805d(5): jmp 0xfffff91a(%rip)
8062(3): mov (%r15),%rax
8065(5): jmp 0xfffffa02(%rip)
806a(3): cmp $0x5,%edx
806d(6): jnz 0xfffffe02(%rip)
8073(4): movzx (%r11),%ebx
8077(3): mov %r11,%rbp
807a(5): jmp 0xfffff774(%rip)
807f(3): add %r9,%r9
8082(4): lea 0x1(%rbx),%rax
8086(3): cmp %rbx,%r9
8089(4): cmovbe %rax,%r9
808d(a): mov $0x576460752303423487,%rax
8097(3): cmp %rax,%r9
809a(6): jnbe 0x211(%rip)
80a0(3): mov %r9,%rsi
80a3(5): mov %r9,0x48(%rsp)
80a8(5): mov %r10,0x40(%rsp)
80ad(4): shl/sal $0x5,%rsi
80b1(5): cmp %rcx,0x8(%rsp)
80b6(5): mov %r8,0x38(%rsp)
80bb(5): mov %r11,0x30(%rsp)
80c0(6): jz 0x1be(%rip)
80c6(3): mov %rcx,%rdi
80c9(5): call 0xffff9597(%rip)
80ce(4): mov 0x8(%r15),%rdx
80d2(5): mov 0x30(%rsp),%r11
80d7(3): mov %rax,%rcx
80da(5): mov 0x38(%rsp),%r8
80df(5): mov 0x40(%rsp),%r10
80e4(5): mov 0x48(%rsp),%r9
80e9(3): test %rcx,%rcx
80ec(6): jz 0x21b(%rip)
80f2(5): cmp %rdx,0x8(%rsp)
80f7(3): mov (%r15),%rax
80fa(6): jz 0x1c6(%rip)
8100(4): mov %rcx,0x8(%r15)
8104(5): jmp 0xfffffa19(%rip)
8109(4): mov 0x8(%r15),%rcx
810d(5): cmp %rcx,0x8(%rsp)
8112(2): jz 0x1a(%rip)
8114(3): mov %rcx,%rdi
8117(5): call 0xffff9319(%rip)
811c(4): mov 0x8(%r14),%rdi
8120(5): cmp %rdi,0x28(%rsp)
8125(2): jz 0x7(%rip)
8127(5): call 0xffff9309(%rip)
812c(5): call 0xffff9324(%rip)
8131(6): mov $0xc,(%rax)
8137(5): mov $0xffffffff,%eax
813c(5): jmp 0xfffff586(%rip)
8141(3): mov %rsi,%rdi
8144(5): call 0xffff94dc(%rip)
8149(5): mov 0x8(%rsp),%rdx
814e(3): mov %rax,%rcx
8151(5): mov 0x40(%rsp),%r9
8156(5): mov 0x38(%rsp),%r10
815b(5): mov 0x30(%rsp),%r8
8160(5): jmp 0xfffff8ec(%rip)
8165(5): mov 0x20(%rsp),%rsi
816a(4): cmp $0xffffffff,%rsi
816e(4): lea 0x1(%rsi),%rax
8172(5): mov %rsi,0x40(%r12)
8177(6): jz 0xfffffcf4(%rip)
817d(5): mov 0x20(%rsp),%rbx
8182(5): mov %rax,0x20(%rsp)
8187(5): jmp 0xfffff986(%rip)
818c(3): mov %r11,%rdx
818f(4): add $0x1,%rdx
8193(3): movzx (%rdx),%ecx
8196(3): lea 0xffffffd0(%rcx),%esi
8199(4): cmp $0x9,%sil
819d(2): jbe 0xfffffff2(%rip)
819f(3): cmp $0x24,%cl
81a2(6): jnz 0xfffff95c(%rip)
81a8(2): xor %ecx,%ecx
81aa(a): mov $0x1844674407370955161,%rsi
81b4(3): sub $0x30,%eax
81b7(3): mov %r8,%rdx
81ba(3): cmp %rsi,%rcx
81bd(2): cwde 
81bf(2): jnbe 0x9(%rip)
81c1(4): lea 0x0(%rcx,%rcx,4),%rdx
81c5(3): add %rdx,%rdx
81c8(3): mov %r11,%rsi
81cb(2): xor %ebx,%ebx
81cd(3): add %rax,%rdx
81d0(5): movsx 0x1(%r11),%eax
81d5(3): setb %bl
81d8(4): add $0x1,%r11
81dc(3): mov %rdx,%rcx
81df(3): test %rbx,%rbx
81e2(3): lea 0xffffffd0(%rax),%edi
81e5(2): jz 0x73(%rip)
81e7(4): cmp $0x9,%dil
81eb(6): jnbe 0xfffffc80(%rip)
81f1(3): sub $0x30,%eax
81f4(3): mov %r8,%rdx
81f7(3): mov %r11,%rsi
81fa(2): cwde 
81fc(2): jmp 0xffffffcf(%rip)
81fe(4): cmp $0x9,%dil
8202(6): jnbe 0xfffffc69(%rip)
8208(3): movsx %cl,%eax
820b(3): mov %rdx,%rbp
820e(3): mov %r8,%rcx
8211(3): sub $0x30,%eax
8214(2): cwde 
8216(5): jmp 0xfffffac3(%rip)
821b(5): mov 0x8(%rsp),%rsi
8220(4): shl/sal $0x5,%rax
8224(3): mov %rcx,%rdi
8227(3): mov %rax,%rdx
822a(5): mov %r9,0x40(%rsp)
822f(5): mov %r10,0x38(%rsp)
8234(5): mov %r8,0x30(%rsp)
8239(5): call 0xffff93b7(%rip)
823e(5): mov 0x40(%rsp),%r9
8243(3): mov %rax,%rcx
8246(5): mov 0x38(%rsp),%r10
824b(3): mov (%r15),%rax
824e(5): mov 0x30(%rsp),%r8
8253(5): jmp 0xfffff810(%rip)
8258(4): cmp $0x9,%dil
825c(6): jbe 0xffffff4e(%rip)
8262(4): lea 0xffffffff(%rdx),%rbx
8266(4): cmp $0xfffffffd,%rbx
826a(6): jnbe 0xfffffc01(%rip)
8270(5): mov %rbx,0x40(%r12)
8275(4): lea 0x2(%rsi),%r11
8279(5): jmp 0xfffff894(%rip)
827e(3): mov %rsi,%rdi
8281(5): call 0xffff939f(%rip)
8286(5): mov 0x8(%rsp),%rdx
828b(3): mov %rax,%rcx
828e(5): mov 0x48(%rsp),%r9
8293(5): mov 0x40(%rsp),%r10
8298(5): mov 0x38(%rsp),%r8
829d(5): mov 0x30(%rsp),%r11
82a2(5): jmp 0xfffffe47(%rip)
82a7(4): mov 0x8(%r15),%rcx
82ab(5): cmp %rcx,0x8(%rsp)
82b0(6): jnz 0xfffffe64(%rip)
82b6(5): jmp 0xfffffe66(%rip)
82bb(5): nop 0x0(%rax,%rax,1)
82c0(5): mov 0x8(%rsp),%rsi
82c5(4): shl/sal $0x5,%rax
82c9(3): mov %rcx,%rdi
82cc(3): mov %rax,%rdx
82cf(5): mov %r9,0x48(%rsp)
82d4(5): mov %r10,0x40(%rsp)
82d9(5): mov %r8,0x38(%rsp)
82de(5): mov %r11,0x30(%rsp)
82e3(5): call 0xffff930d(%rip)
82e8(5): mov 0x48(%rsp),%r9
82ed(3): mov %rax,%rcx
82f0(5): mov 0x40(%rsp),%r10
82f5(3): mov (%r15),%rax
82f8(5): mov 0x38(%rsp),%r8
82fd(5): mov 0x30(%rsp),%r11
8302(5): jmp 0xfffffdfe(%rip)
8307(3): mov %rdx,%rcx
830a(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
8310(2): push %r15
8312(2): push %r14
8314(3): mov %rdx,%r15
8317(2): push %r13
8319(2): push %r12
831b(7): lea 0x20388e(%rip),%r12
8322(1): push %rbp
8323(7): lea 0x20388e(%rip),%rbp
832a(1): push %rbx
832b(3): mov %edi,%r13d
832e(3): mov %rsi,%r14
8331(3): sub %r12,%rbp
8334(4): sub $0x8,%rsp
8338(4): sar $0x3,%rbp
833c(5): call 0xffff90a4(%rip)
8341(3): test %rbp,%rbp
8344(2): jz 0x22(%rip)
8346(2): xor %ebx,%ebx
8348(8): nop 0x0(%rax,%rax,1)
8350(3): mov %r15,%rdx
8353(3): mov %r14,%rsi
8356(3): mov %r13d,%edi
8359(4): call 0x0(%r12,%rbx,8)
835d(4): add $0x1,%rbx
8361(3): cmp %rbx,%rbp
8364(2): jnz 0xffffffec(%rip)
8366(4): add $0x8,%rsp
836a(1): pop %rbx
836b(1): pop %rbp
836c(2): pop %r12
836e(2): pop %r13
8370(2): pop %r14
8372(2): pop %r15
8374(1): ret near (%rsp)

"atexit" :
8390(7): mov 0x203c71(%rip),%rdx
8397(2): xor %esi,%esi
8399(5): jmp 0xffff9337(%rip)

"_fini" :
83a0(4): sub $0x8,%rsp
83a4(4): add $0x8,%rsp
83a8(1): ret near (%rsp)

