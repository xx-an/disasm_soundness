
"free@plt" :
14d0(6): jmp 0x20796a(%rip)
14d6(5): push $0x0

"abort@plt" :
14e0(6): jmp 0x207962(%rip)
14e6(5): push $0x1

"__errno_location@plt" :
14f0(6): jmp 0x20795a(%rip)
14f6(5): push $0x2

"strncmp@plt" :
1500(6): jmp 0x207952(%rip)
1506(5): push $0x3

"_exit@plt" :
1510(6): jmp 0x20794a(%rip)
1516(5): push $0x4

"__fpending@plt" :
1520(6): jmp 0x207942(%rip)
1526(5): push $0x5

"fread_unlocked@plt" :
1530(6): jmp 0x20793a(%rip)
1536(5): push $0x6

"textdomain@plt" :
1540(6): jmp 0x207932(%rip)
1546(5): push $0x7

"fclose@plt" :
1550(6): jmp 0x20792a(%rip)
1556(5): push $0x8

"bindtextdomain@plt" :
1560(6): jmp 0x207922(%rip)
1566(5): push $0x9

"dcgettext@plt" :
1570(6): jmp 0x20791a(%rip)
1576(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1580(6): jmp 0x207912(%rip)
1586(5): push $0xb

"strlen@plt" :
1590(6): jmp 0x20790a(%rip)
1596(5): push $0xc

"__stack_chk_fail@plt" :
15a0(6): jmp 0x207902(%rip)
15a6(5): push $0xd

"getopt_long@plt" :
15b0(6): jmp 0x2078fa(%rip)
15b6(5): push $0xe

"mbrtowc@plt" :
15c0(6): jmp 0x2078f2(%rip)
15c6(5): push $0xf

"strchr@plt" :
15d0(6): jmp 0x2078ea(%rip)
15d6(5): push $0x10

"__overflow@plt" :
15e0(6): jmp 0x2078e2(%rip)
15e6(5): push $0x11

"strrchr@plt" :
15f0(6): jmp 0x2078da(%rip)
15f6(5): push $0x12

"lseek@plt" :
1600(6): jmp 0x2078d2(%rip)
1606(5): push $0x13

"__assert_fail@plt" :
1610(6): jmp 0x2078ca(%rip)
1616(5): push $0x14

"__strtoul_internal@plt" :
1620(6): jmp 0x2078c2(%rip)
1626(5): push $0x15

"memset@plt" :
1630(6): jmp 0x2078ba(%rip)
1636(5): push $0x16

"posix_fadvise@plt" :
1640(6): jmp 0x2078b2(%rip)
1646(5): push $0x17

"memchr@plt" :
1650(6): jmp 0x2078aa(%rip)
1656(5): push $0x18

"memcmp@plt" :
1660(6): jmp 0x2078a2(%rip)
1666(5): push $0x19

"fputs_unlocked@plt" :
1670(6): jmp 0x20789a(%rip)
1676(5): push $0x1a

"calloc@plt" :
1680(6): jmp 0x207892(%rip)
1686(5): push $0x1b

"strcmp@plt" :
1690(6): jmp 0x20788a(%rip)
1696(5): push $0x1c

"memcpy@plt" :
16a0(6): jmp 0x207882(%rip)
16a6(5): push $0x1d

"fileno@plt" :
16b0(6): jmp 0x20787a(%rip)
16b6(5): push $0x1e

"malloc@plt" :
16c0(6): jmp 0x207872(%rip)
16c6(5): push $0x1f

"fflush@plt" :
16d0(6): jmp 0x20786a(%rip)
16d6(5): push $0x20

"nl_langinfo@plt" :
16e0(6): jmp 0x207862(%rip)
16e6(5): push $0x21

"__freading@plt" :
16f0(6): jmp 0x20785a(%rip)
16f6(5): push $0x22

"fwrite_unlocked@plt" :
1700(6): jmp 0x207852(%rip)
1706(5): push $0x23

"realloc@plt" :
1710(6): jmp 0x20784a(%rip)
1716(5): push $0x24

"setlocale@plt" :
1720(6): jmp 0x207842(%rip)
1726(5): push $0x25

"__printf_chk@plt" :
1730(6): jmp 0x20783a(%rip)
1736(5): push $0x26

"memmove@plt" :
1740(6): jmp 0x207832(%rip)
1746(5): push $0x27

"error@plt" :
1750(6): jmp 0x20782a(%rip)
1756(5): push $0x28

"fseeko@plt" :
1760(6): jmp 0x207822(%rip)
1766(5): push $0x29

"fopen@plt" :
1770(6): jmp 0x20781a(%rip)
1776(5): push $0x2a

"__cxa_atexit@plt" :
1780(6): jmp 0x207812(%rip)
1786(5): push $0x2b

"exit@plt" :
1790(6): jmp 0x20780a(%rip)
1796(5): push $0x2c

"fwrite@plt" :
17a0(6): jmp 0x207802(%rip)
17a6(5): push $0x2d

"__fprintf_chk@plt" :
17b0(6): jmp 0x2077fa(%rip)
17b6(5): push $0x2e

"mbsinit@plt" :
17c0(6): jmp 0x2077f2(%rip)
17c6(5): push $0x2f

"iswprint@plt" :
17d0(6): jmp 0x2077ea(%rip)
17d6(5): push $0x30

"__ctype_b_loc@plt" :
17e0(6): jmp 0x2077e2(%rip)
17e6(5): push $0x31

".plt.got" :
17f0(6): jmp 0x2077fa(%rip)
17f6(2): nop 

"_init" :
14a8(4): sub $0x8,%rsp
14ac(7): mov 0x207b2d(%rip),%rax
14b3(3): test %rax,%rax
14b6(2): jz 0x4(%rip)
14b8(2): call %rax
14ba(4): add $0x8,%rsp
14be(1): ret near (%rsp)

"main" :
1800(2): push %r15
1802(2): push %r14
1804(2): push %r13
1806(2): push %r12
1808(3): mov %edi,%r13d
180b(1): push %rbp
180c(1): push %rbx
180d(3): mov %rsi,%r12
1810(5): mov $0x4c,%ebp
1815(2): xor %ebx,%ebx
1817(4): sub $0x78,%rsp
181b(3): mov (%rsi),%rdi
181e(9): mov $0x28,%rax
1827(5): mov %rax,0x68(%rsp)
182c(2): xor %eax,%eax
182e(5): call 0x15d2(%rip)
1833(7): lea 0x50a7(%rip),%rsi
183a(5): mov $0x6,%edi
183f(5): call 0xfffffee1(%rip)
1844(7): lea 0x4521(%rip),%rsi
184b(7): lea 0x44f1(%rip),%rdi
1852(5): call 0xfffffd0e(%rip)
1857(7): lea 0x44e5(%rip),%rdi
185e(5): call 0xfffffce2(%rip)
1863(7): lea 0x14a6(%rip),%rdi
186a(5): call 0x4416(%rip)
186f(5): mov $0x0,0x30(%rsp)
1874(7): lea 0x2072a5(%rip),%rcx
187b(7): lea 0x4524(%rip),%rdx
1882(3): xor %r8d,%r8d
1885(3): mov %r12,%rsi
1888(3): mov %r13d,%edi
188b(5): call 0xfffffd25(%rip)
1890(3): cmp $0xff,%eax
1893(6): jz 0xbc(%rip)
1899(3): cmp $0x64,%eax
189c(2): jz 0x54(%rip)
189e(2): jle 0x72(%rip)
18a0(3): cmp $0x69,%eax
18a3(2): jz 0x5d(%rip)
18a5(3): cmp $0x77,%eax
18a8(6): jnz 0x705(%rip)
18ae(7): lea 0x44cf(%rip),%rsi
18b5(5): mov $0x5,%edx
18ba(2): xor %edi,%edi
18bc(5): call 0xfffffcb4(%rip)
18c1(7): mov 0x2077d8(%rip),%rdi
18c8(7): lea 0x5012(%rip),%rcx
18cf(3): mov %rax,%r8
18d2(3): xor %r9d,%r9d
18d5(7): mov $0xffffffff,%rdx
18dc(2): xor %esi,%esi
18de(5): call 0x3c02(%rip)
18e3(3): mov %rax,%rbp
18e6(2): jmp 0xffffff8e(%rip)
18e8(8): nop 0x0(%rax,%rax,1)
18f0(5): mov $0x1,%ebx
18f5(5): jmp 0xffffff7f(%rip)
18fa(6): nop 0x0(%rax,%rax,1)
1900(5): mov $0x1,0x30(%rsp)
1905(5): jmp 0xffffff6f(%rip)
190a(6): nop 0x0(%rax,%rax,1)
1910(5): cmp $0xffffff7d,%eax
1915(6): jnz 0x659(%rip)
191b(7): mov 0x207766(%rip),%rdi
1922(7): mov 0x2076e7(%rip),%rcx
1929(7): lea 0x4466(%rip),%r8
1930(7): lea 0x4408(%rip),%rdx
1937(7): lea 0x4366(%rip),%rsi
193e(3): xor %r9d,%r9d
1941(2): xor %eax,%eax
1943(5): call 0x36ad(%rip)
1948(2): xor %edi,%edi
194a(5): call 0xfffffe46(%rip)
194f(7): movsxd 0x207742(%rip),%rax
1956(3): mov %r13d,%edx
1959(2): sub %eax,%edx
195b(3): sub $0x1,%edx
195e(6): jnle 0x61e(%rip)
1964(3): cmp %r13d,%eax
1967(2): jnl 0x68(%rip)
1969(4): mov 0x0(%r12,%rax,8),%rax
196d(7): lea 0x4a36(%rip),%rsi
1974(3): mov %rax,%rdi
1977(5): mov %rax,0x48(%rsp)
197c(5): call 0xfffffd14(%rip)
1981(2): test %eax,%eax
1983(2): jz 0x58(%rip)
1985(5): mov 0x48(%rsp),%rdi
198a(7): lea 0x442b(%rip),%rsi
1991(5): call 0xfffffddf(%rip)
1996(3): test %rax,%rax
1999(3): mov %rax,%r12
199c(2): jnz 0x46(%rip)
199e(5): mov 0x48(%rsp),%rdx
19a3(5): mov $0x3,%esi
19a8(2): xor %edi,%edi
19aa(5): call 0x2f96(%rip)
19af(3): mov %rax,%rbx
19b2(5): call 0xfffffb3e(%rip)
19b7(2): mov (%rax),%esi
19b9(7): lea 0x49a4(%rip),%rdx
19c0(3): mov %rbx,%rcx
19c3(5): mov $0x1,%edi
19c8(2): xor %eax,%eax
19ca(5): call 0xfffffd86(%rip)
19cf(7): lea 0x49d4(%rip),%rax
19d6(5): mov %rax,0x48(%rsp)
19db(7): mov 0x2076ae(%rip),%r12
19e2(5): mov $0x2,%esi
19e7(3): mov %r12,%rdi
19ea(5): call 0x13e6(%rip)
19ef(2): test %bl,%bl
19f1(7): mov 0x207690(%rip),%rax
19f8(6): jz 0x200(%rip)
19fe(5): mov $0x2000,%edi
1a03(5): mov %rax,0x38(%rsp)
1a08(5): call 0x3748(%rip)
1a0d(5): mov $0x1400,%edi
1a12(3): mov %rax,%rbp
1a15(5): call 0x373b(%rip)
1a1a(5): mov %rax,0x40(%rsp)
1a1f(5): lea 0x5c(%rsp),%rax
1a24(3): mov %rax,%rdi
1a27(5): mov %rax,0x18(%rsp)
1a2c(5): call 0xf44(%rip)
1a31(5): lea 0x50(%rsp),%rax
1a36(5): mov %r12,0x10(%rsp)
1a3b(5): mov %rbp,0x8(%rsp)
1a40(5): mov %rax,0x20(%rsp)
1a45(3): nop (%rax)
1a48(2): xor %ebx,%ebx
1a4a(2): jmp 0x32(%rip)
1a4c(4): nop 0x0(%rax)
1a50(5): mov 0x10(%rsp),%rax
1a55(3): add %r12,%rbx
1a58(2): mov (%rax),%eax
1a5a(2): test $0x20,%al
1a5c(6): jnz 0x4b5(%rip)
1a62(2): mov %eax,%edx
1a64(3): and $0x10,%edx
1a67(7): cmp $0x1fff,%rbx
1a6e(6): jnbe 0xaa(%rip)
1a74(2): test %edx,%edx
1a76(6): jnz 0xa2(%rip)
1a7c(5): mov 0x8(%rsp),%rax
1a81(5): mov 0x10(%rsp),%rcx
1a86(5): mov $0x2000,%edx
1a8b(3): sub %rbx,%rdx
1a8e(5): mov $0x1,%esi
1a93(4): lea 0x0(%rax,%rbx,1),%rdi
1a97(5): call 0xfffffa99(%rip)
1a9c(5): cmp $0x0,0x30(%rsp)
1aa1(3): mov %rax,%r12
1aa4(5): mov %rax,0x50(%rsp)
1aa9(2): jz 0xffffffa7(%rip)
1aab(3): xor %r13d,%r13d
1aae(3): test %r12,%r12
1ab1(2): jz 0xffffff9f(%rip)
1ab3(3): cmp %r12,%r13
1ab6(2): jnb 0xffffff9a(%rip)
1ab8(5): mov 0x8(%rsp),%rax
1abd(4): lea 0x0(%rbx,%r13,1),%r15
1ac1(4): lea 0x0(%rax,%r15,1),%r14
1ac5(4): movsx (%r14),%edi
1ac9(2): mov %edi,%ebp
1acb(5): call 0xe85(%rip)
1ad0(4): cmp $0x3d,%bpl
1ad4(2): jz 0x6(%rip)
1ad6(2): test %al,%al
1ad8(2): jz 0x18(%rip)
1ada(4): add $0x1,%r13
1ade(3): test %r12,%r12
1ae1(2): jnz 0xffffffd2(%rip)
1ae3(5): jmp 0xffffff6d(%rip)
1ae8(8): nop 0x0(%rax,%rax,1)
1af0(5): mov 0x8(%rsp),%rax
1af5(4): sub $0x1,%r12
1af9(3): mov %r14,%rdi
1afc(3): mov %r12,%rdx
1aff(5): mov %r12,0x50(%rsp)
1b04(3): sub %r13,%rdx
1b07(5): lea 0x1(%rax,%r15,1),%rsi
1b0c(5): call 0xfffffc34(%rip)
1b11(2): jmp 0xffffff9d(%rip)
1b13(5): nop 0x0(%rax,%rax,1)
1b18(3): xor %r15d,%r15d
1b1b(5): mov %rbx,0x28(%rsp)
1b20(5): mov 0x8(%rsp),%rbp
1b25(3): mov %r15d,%r14d
1b28(5): mov 0x40(%rsp),%r12
1b2d(5): mov 0x10(%rsp),%rbx
1b32(5): mov 0x38(%rsp),%r15
1b37(2): jmp 0x67(%rip)
1b39(7): nop 0x0(%rax)
1b40(3): test %r14d,%r14d
1b43(6): jnz 0xffffff05(%rip)
1b49(5): mov 0x28(%rsp),%rdx
1b4e(9): mov $0x1400,0x50(%rsp)
1b57(5): mov 0x20(%rsp),%r8
1b5c(5): mov 0x18(%rsp),%rdi
1b61(3): mov %r12,%rcx
1b64(3): mov %rbp,%rsi
1b67(5): call 0xe19(%rip)
1b6c(5): mov 0x50(%rsp),%rdx
1b71(3): mov %r15,%rcx
1b74(5): mov $0x1,%esi
1b79(3): mov %r12,%rdi
1b7c(3): mov %eax,%r13d
1b7f(5): call 0xfffffb81(%rip)
1b84(5): cmp 0x50(%rsp),%rax
1b89(6): jb 0x35c(%rip)
1b8f(3): test %r13b,%r13b
1b92(6): jz 0x32f(%rip)
1b98(2): mov (%rbx),%eax
1b9a(4): add $0x1,%r14d
1b9e(2): test $0x10,%al
1ba0(2): jz 0xffffffa0(%rip)
1ba2(4): cmp $0x1,%r14d
1ba6(2): jnbe 0x19(%rip)
1ba8(2): jnz 0xffffffa1(%rip)
1baa(4): mov 0x5c(%rsp),%eax
1bae(2): test %eax,%eax
1bb0(2): jz 0xf(%rip)
1bb2(9): mov $0x1400,0x50(%rsp)
1bbb(2): xor %edx,%edx
1bbd(2): jmp 0xffffff9a(%rip)
1bbf(3): mov %rbx,%r12
1bc2(3): mov %r12,%rdi
1bc5(5): call 0x3d6b(%rip)
1bca(3): add $0x1,%eax
1bcd(6): jz 0x288(%rip)
1bd3(2): xor %eax,%eax
1bd5(5): mov 0x68(%rsp),%rcx
1bda(9): xor $0x28,%rcx
1be3(6): jnz 0x35a(%rip)
1be9(4): add $0x78,%rsp
1bed(1): pop %rbx
1bee(1): pop %rbp
1bef(2): pop %r12
1bf1(2): pop %r13
1bf3(2): pop %r14
1bf5(2): pop %r15
1bf7(1): ret near (%rsp)
1bf8(5): mov $0x7800,%edi
1bfd(5): mov %rax,0x18(%rsp)
1c02(2): xor %ebx,%ebx
1c04(5): call 0x354c(%rip)
1c09(5): mov $0xc000,%edi
1c0e(3): mov %rax,%r13
1c11(6): mov $0x7800,%r14d
1c17(5): call 0x3539(%rip)
1c1c(5): mov %rbp,0x8(%rsp)
1c21(5): mov %rax,0x10(%rsp)
1c26(2): xor %ebp,%ebp
1c28(2): jmp 0x15(%rip)
1c2a(6): nop 0x0(%rax,%rax,1)
1c30(7): cmp $0x77ff,%rbp
1c37(6): jnbe 0x98(%rip)
1c3d(5): lea 0x0(%r13,%rbp,1),%rdi
1c42(3): mov %r14,%rdx
1c45(3): mov %r12,%rcx
1c48(3): sub %rbp,%rdx
1c4b(5): mov $0x1,%esi
1c50(5): call 0xfffff8e0(%rip)
1c55(3): add %rax,%rbp
1c58(4): mov (%r12),%eax
1c5c(2): test $0x30,%al
1c5e(2): jz 0xffffffd2(%rip)
1c60(3): test %rbp,%rbp
1c63(2): jnz 0x6c(%rip)
1c65(3): test %rbx,%rbx
1c68(5): mov 0x8(%rsp),%rbp
1c6d(2): jz 0x2e(%rip)
1c6f(3): test %rbp,%rbp
1c72(2): jz 0x29(%rip)
1c74(5): mov 0x18(%rsp),%rcx
1c79(4): mov 0x28(%rcx),%rax
1c7d(4): cmp 0x30(%rcx),%rax
1c81(6): jnb 0x336(%rip)
1c87(5): mov 0x18(%rsp),%rcx
1c8c(4): lea 0x1(%rax),%rdx
1c90(4): mov %rdx,0x28(%rcx)
1c94(3): mov $0xa,(%rax)
1c97(4): mov (%r12),%eax
1c9b(2): test $0x20,%al
1c9d(6): jz 0xffffff25(%rip)
1ca3(7): lea 0x4115(%rip),%rsi
1caa(5): mov $0x5,%edx
1caf(2): xor %edi,%edi
1cb1(5): call 0xfffff8bf(%rip)
1cb6(3): mov %rax,%rbx
1cb9(5): call 0xfffff837(%rip)
1cbe(2): mov (%rax),%esi
1cc0(3): mov %rbx,%rdx
1cc3(5): mov $0x1,%edi
1cc8(2): xor %eax,%eax
1cca(5): call 0xfffffa86(%rip)
1ccf(4): lea 0x4(%rbp),%rax
1cd3(5): mov $0x5,%ecx
1cd8(2): xor %edx,%edx
1cda(3): mov %rbp,%rsi
1cdd(3): mov %r13,%rdi
1ce0(3): div %rcx,%rax
1ce3(5): mov 0x10(%rsp),%rdx
1ce8(8): lea 0x0(,%rax,8),%r15
1cf0(3): mov %r15,%rcx
1cf3(5): call 0x9ad(%rip)
1cf8(6): cmp $0x0,0x8(%rsp)
1cfe(6): jz 0xcb(%rip)
1d04(3): xor %r10d,%r10d
1d07(3): test %r15,%r15
1d0a(6): jz 0xa1(%rip)
1d10(5): mov %r13,0x28(%rsp)
1d15(5): mov %rbp,0x30(%rsp)
1d1a(3): mov %rbx,%r13
1d1d(3): mov %r15,%rbp
1d20(5): mov %r12,0x20(%rsp)
1d25(5): mov 0x18(%rsp),%r15
1d2a(3): mov %r10,%rbx
1d2d(2): jmp 0x24(%rip)
1d2f(1): nop 
1d30(4): mov 0x28(%r15),%rax
1d34(4): cmp 0x30(%r15),%rax
1d38(6): jnb 0xdb(%rip)
1d3e(4): lea 0x1(%rax),%rdx
1d42(4): mov %rdx,0x28(%r15)
1d46(3): mov $0xa,(%rax)
1d49(3): xor %r13d,%r13d
1d4c(3): cmp %rbx,%rbp
1d4f(2): jbe 0x4a(%rip)
1d51(5): mov 0x8(%rsp),%r12
1d56(3): mov %rbp,%rax
1d59(3): sub %rbx,%rax
1d5c(3): sub %r13,%r12
1d5f(3): cmp %rax,%r12
1d62(4): cmovnbe %rax,%r12
1d66(3): test %r12,%r12
1d69(2): jz 0xffffffc7(%rip)
1d6b(5): mov 0x10(%rsp),%rax
1d70(7): mov 0x207311(%rip),%rcx
1d77(3): mov %r12,%rdx
1d7a(5): mov $0x1,%esi
1d7f(4): lea 0x0(%rax,%rbx,1),%rdi
1d83(5): call 0xfffff97d(%rip)
1d88(3): cmp %rax,%r12
1d8b(6): jnbe 0x1b7(%rip)
1d91(3): add %r12,%r13
1d94(3): add %r12,%rbx
1d97(2): jmp 0xffffffb5(%rip)
1d99(3): mov %r13,%rbx
1d9c(5): mov 0x20(%rsp),%r12
1da1(5): mov 0x28(%rsp),%r13
1da6(5): mov 0x30(%rsp),%rbp
1dab(4): mov (%r12),%eax
1daf(2): test $0x30,%al
1db1(6): jnz 0xfffffeb4(%rip)
1db7(7): cmp $0x7800,%rbp
1dbe(6): jz 0xfffffe68(%rip)
1dc4(5): jmp 0xfffffea1(%rip)
1dc9(7): mov 0x2072b8(%rip),%rcx
1dd0(5): mov 0x10(%rsp),%rdi
1dd5(3): mov %r15,%rdx
1dd8(5): mov $0x1,%esi
1ddd(5): call 0xfffff923(%rip)
1de2(3): cmp %rax,%r15
1de5(2): jbe 0xffffffc6(%rip)
1de7(7): lea 0x3fdc(%rip),%rsi
1dee(5): mov $0x5,%edx
1df3(2): xor %edi,%edi
1df5(5): call 0xfffff77b(%rip)
1dfa(3): mov %rax,%rbx
1dfd(5): call 0xfffff6f3(%rip)
1e02(2): mov (%rax),%esi
1e04(3): mov %rbx,%rdx
1e07(5): mov $0x1,%edi
1e0c(2): xor %eax,%eax
1e0e(5): call 0xfffff942(%rip)
1e13(5): mov $0xa,%esi
1e18(3): mov %r15,%rdi
1e1b(5): call 0xfffff7c5(%rip)
1e20(3): add $0x1,%eax
1e23(6): jnz 0xffffff26(%rip)
1e29(7): lea 0x3f9a(%rip),%rsi
1e30(5): mov $0x5,%edx
1e35(2): xor %edi,%edi
1e37(5): call 0xfffff739(%rip)
1e3c(3): mov %rax,%rbx
1e3f(5): call 0xfffff6b1(%rip)
1e44(2): mov (%rax),%esi
1e46(3): mov %rbx,%rdx
1e49(5): mov $0x1,%edi
1e4e(2): xor %eax,%eax
1e50(5): call 0xfffff900(%rip)
1e55(5): mov 0x48(%rsp),%rdi
1e5a(7): lea 0x4549(%rip),%rsi
1e61(5): call 0xfffff82f(%rip)
1e66(2): mov %eax,%ebp
1e68(5): call 0xfffff688(%rip)
1e6d(2): test %ebp,%ebp
1e6f(3): mov %rax,%rbx
1e72(2): jnz 0x26(%rip)
1e74(7): lea 0x3f69(%rip),%rsi
1e7b(5): mov $0x5,%edx
1e80(2): xor %edi,%edi
1e82(5): call 0xfffff6ee(%rip)
1e87(2): mov (%rbx),%esi
1e89(3): mov %rax,%rdx
1e8c(5): mov $0x1,%edi
1e91(2): xor %eax,%eax
1e93(5): call 0xfffff8bd(%rip)
1e98(5): mov 0x48(%rsp),%rdx
1e9d(5): mov $0x3,%esi
1ea2(2): xor %edi,%edi
1ea4(5): call 0x2a9c(%rip)
1ea9(2): mov (%rbx),%esi
1eab(7): lea 0x44b2(%rip),%rdx
1eb2(3): mov %rax,%rcx
1eb5(5): mov $0x1,%edi
1eba(2): xor %eax,%eax
1ebc(5): call 0xfffff894(%rip)
1ec1(7): lea 0x3f0e(%rip),%rsi
1ec8(5): mov $0x5,%edx
1ecd(2): xor %edi,%edi
1ecf(5): call 0xfffff6a1(%rip)
1ed4(2): xor %esi,%esi
1ed6(3): mov %rax,%rdx
1ed9(5): mov $0x1,%edi
1ede(2): xor %eax,%eax
1ee0(5): call 0xfffff870(%rip)
1ee5(7): lea 0x3ede(%rip),%rsi
1eec(5): mov $0x5,%edx
1ef1(2): xor %edi,%edi
1ef3(5): call 0xfffff67d(%rip)
1ef8(3): mov %rax,%rbx
1efb(5): call 0xfffff5f5(%rip)
1f00(2): mov (%rax),%esi
1f02(3): mov %rbx,%rdx
1f05(5): mov $0x1,%edi
1f0a(2): xor %eax,%eax
1f0c(5): call 0xfffff844(%rip)
1f11(7): lea 0x3ea7(%rip),%rsi
1f18(5): mov $0x5,%edx
1f1d(2): xor %edi,%edi
1f1f(5): call 0xfffff651(%rip)
1f24(3): mov %rax,%rbx
1f27(5): call 0xfffff5c9(%rip)
1f2c(2): mov (%rax),%esi
1f2e(3): mov %rbx,%rdx
1f31(5): mov $0x1,%edi
1f36(2): xor %eax,%eax
1f38(5): call 0xfffff818(%rip)
1f3d(5): call 0xfffff663(%rip)
1f42(7): lea 0x3e81(%rip),%rsi
1f49(5): mov $0x5,%edx
1f4e(2): xor %edi,%edi
1f50(5): call 0xfffff620(%rip)
1f55(3): mov %rax,%rbx
1f58(5): call 0xfffff598(%rip)
1f5d(2): mov (%rax),%esi
1f5f(3): mov %rbx,%rdx
1f62(5): mov $0x1,%edi
1f67(2): xor %eax,%eax
1f69(5): call 0xfffff7e7(%rip)
1f6e(5): cmp $0xffffff7e,%eax
1f73(2): jnz 0x3a(%rip)
1f75(2): xor %edi,%edi
1f77(5): call 0x199(%rip)
1f7c(5): mov 0x8(%r12,%rax,8),%rdi
1f81(5): call 0x2b8f(%rip)
1f86(7): lea 0x3e1e(%rip),%rsi
1f8d(3): mov %rax,%rbx
1f90(5): mov $0x5,%edx
1f95(2): xor %edi,%edi
1f97(5): call 0xfffff5d9(%rip)
1f9c(3): mov %rbx,%rcx
1f9f(3): mov %rax,%rdx
1fa2(2): xor %esi,%esi
1fa4(2): xor %edi,%edi
1fa6(2): xor %eax,%eax
1fa8(5): call 0xfffff7a8(%rip)
1fad(5): mov $0x1,%edi
1fb2(5): call 0x15e(%rip)
1fb7(5): mov $0xa,%esi
1fbc(3): mov %rcx,%rdi
1fbf(5): call 0xfffff621(%rip)
1fc4(3): add $0x1,%eax
1fc7(6): jnz 0xfffffcd0(%rip)
1fcd(7): lea 0x3df6(%rip),%rsi
1fd4(5): mov $0x5,%edx
1fd9(2): xor %edi,%edi
1fdb(5): call 0xfffff595(%rip)
1fe0(3): mov %rax,%rbx
1fe3(5): call 0xfffff50d(%rip)
1fe8(2): mov (%rax),%esi
1fea(3): mov %rbx,%rdx
1fed(5): mov $0x1,%edi
1ff2(2): xor %eax,%eax
1ff4(5): call 0xfffff75c(%rip)
1ff9(7): nop 0x0(%rax)
2000(2): xor %ebp,%ebp
2002(3): mov %rdx,%r9
2005(1): pop %rsi
2006(3): mov %rsp,%rdx
2009(4): and $0xfffffff0,%rsp
200d(1): push %rax
200e(1): push %rsp
200f(7): lea 0x3c5a(%rip),%r8
2016(7): lea 0x3be3(%rip),%rcx
201d(7): lea 0xfffff7dc(%rip),%rdi
2024(6): call 0x206fae(%rip)
202a(1): hlt 

"_start" :
2000(2): xor %ebp,%ebp
2002(3): mov %rdx,%r9
2005(1): pop %rsi
2006(3): mov %rsp,%rdx
2009(4): and $0xfffffff0,%rsp
200d(1): push %rax
200e(1): push %rsp
200f(7): lea 0x3c5a(%rip),%r8
2016(7): lea 0x3be3(%rip),%rcx
201d(7): lea 0xfffff7dc(%rip),%rdi
2024(6): call 0x206fae(%rip)
202a(1): hlt 

"deregister_tm_clones" :
2030(7): lea 0x207049(%rip),%rdi
2037(1): push %rbp
2038(7): lea 0x207041(%rip),%rax
203f(3): cmp %rdi,%rax
2042(3): mov %rsp,%rbp
2045(2): jz 0x1b(%rip)
2047(7): mov 0x206f82(%rip),%rax
204e(3): test %rax,%rax
2051(2): jz 0xf(%rip)
2053(1): pop %rbp
2054(2): jmp %rax
2056(a): nop 0x0(%rax,%rax,1)
2060(1): pop %rbp
2061(1): ret near (%rsp)

"register_tm_clones" :
2070(7): lea 0x207009(%rip),%rdi
2077(7): lea 0x207002(%rip),%rsi
207e(1): push %rbp
207f(3): sub %rdi,%rsi
2082(3): mov %rsp,%rbp
2085(4): sar $0x3,%rsi
2089(3): mov %rsi,%rax
208c(4): shr $0x3f,%rax
2090(3): add %rax,%rsi
2093(3): sar $0x1,%rsi
2096(2): jz 0x1a(%rip)
2098(7): mov 0x206f49(%rip),%rax
209f(3): test %rax,%rax
20a2(2): jz 0xe(%rip)
20a4(1): pop %rbp
20a5(2): jmp %rax
20a7(9): nop 0x0(%rax,%rax,1)
20b0(1): pop %rbp
20b1(1): ret near (%rsp)

"__do_global_dtors_aux" :
20c0(7): cmp $0x0,0x207001(%rip)
20c7(2): jnz 0x31(%rip)
20c9(8): cmp $0x0,0x206f1f(%rip)
20d1(1): push %rbp
20d2(3): mov %rsp,%rbp
20d5(2): jz 0xe(%rip)
20d7(7): mov 0x206f2a(%rip),%rdi
20de(5): call 0xfffff712(%rip)
20e3(5): call 0xffffff4d(%rip)
20e8(7): mov $0x1,0x206fd9(%rip)
20ef(1): pop %rbp
20f0(1): ret near (%rsp)
20f1(7): nop 0x0(%rax)
20f8(2): REP ret near (%rsp)

"frame_dummy" :
2100(1): push %rbp
2101(3): mov %rsp,%rbp
2104(1): pop %rbp
2105(5): jmp 0xffffff6b(%rip)

"usage" :
2110(2): push %r13
2112(2): push %r12
2114(5): mov $0x5,%edx
2119(1): push %rbp
211a(1): push %rbx
211b(2): mov %edi,%ebp
211d(7): sub $0x88,%rsp
2124(7): mov 0x206fb5(%rip),%rbx
212b(9): mov $0x28,%rax
2134(5): mov %rax,0x78(%rsp)
2139(2): xor %eax,%eax
213b(2): test %edi,%edi
213d(2): jz 0x30(%rip)
213f(7): lea 0x3ce2(%rip),%rsi
2146(2): xor %edi,%edi
2148(5): call 0xfffff428(%rip)
214d(7): mov 0x206f6c(%rip),%rdi
2154(3): mov %rax,%rdx
2157(3): mov %rbx,%rcx
215a(5): mov $0x1,%esi
215f(2): xor %eax,%eax
2161(5): call 0xfffff64f(%rip)
2166(2): mov %ebp,%edi
2168(5): call 0xfffff628(%rip)
216d(7): lea 0x3b37(%rip),%rsi
2174(2): xor %edi,%edi
2176(5): call 0xfffff3fa(%rip)
217b(3): mov %rbx,%rdx
217e(3): mov %rax,%rsi
2181(5): mov $0x1,%edi
2186(2): xor %eax,%eax
2188(5): call 0xfffff5a8(%rip)
218d(7): lea 0x3cbc(%rip),%rsi
2194(5): mov $0x5,%edx
2199(2): xor %edi,%edi
219b(5): call 0xfffff3d5(%rip)
21a0(5): mov $0x20,%edx
21a5(3): mov %rax,%rsi
21a8(5): mov $0x1,%edi
21ad(2): xor %eax,%eax
21af(5): call 0xfffff581(%rip)
21b4(7): mov 0x206ecd(%rip),%rbx
21bb(7): lea 0x3cd6(%rip),%rsi
21c2(5): mov $0x5,%edx
21c7(2): xor %edi,%edi
21c9(5): call 0xfffff3a7(%rip)
21ce(3): mov %rbx,%rsi
21d1(3): mov %rax,%rdi
21d4(5): call 0xfffff49c(%rip)
21d9(7): mov 0x206ea8(%rip),%rbx
21e0(7): lea 0x3ce9(%rip),%rsi
21e7(5): mov $0x5,%edx
21ec(2): xor %edi,%edi
21ee(5): call 0xfffff382(%rip)
21f3(3): mov %rbx,%rsi
21f6(3): mov %rax,%rdi
21f9(5): call 0xfffff477(%rip)
21fe(7): mov 0x206e83(%rip),%rbx
2205(7): lea 0x3d14(%rip),%rsi
220c(5): mov $0x5,%edx
2211(2): xor %edi,%edi
2213(5): call 0xfffff35d(%rip)
2218(3): mov %rbx,%rsi
221b(3): mov %rax,%rdi
221e(5): call 0xfffff452(%rip)
2223(7): mov 0x206e5e(%rip),%rbx
222a(7): lea 0x3de7(%rip),%rsi
2231(5): mov $0x5,%edx
2236(2): xor %edi,%edi
2238(5): call 0xfffff338(%rip)
223d(3): mov %rbx,%rsi
2240(3): mov %rax,%rdi
2243(5): call 0xfffff42d(%rip)
2248(7): mov 0x206e39(%rip),%rbx
224f(7): lea 0x3df2(%rip),%rsi
2256(5): mov $0x5,%edx
225b(2): xor %edi,%edi
225d(5): call 0xfffff313(%rip)
2262(3): mov %rbx,%rsi
2265(3): mov %rax,%rdi
2268(7): lea 0x3a35(%rip),%rbx
226f(5): call 0xfffff401(%rip)
2274(7): lea 0x3e05(%rip),%rsi
227b(5): mov $0x5,%edx
2280(2): xor %edi,%edi
2282(5): call 0xfffff2ee(%rip)
2287(7): lea 0x3a16(%rip),%rcx
228e(3): mov %rax,%rsi
2291(5): mov $0x1,%edi
2296(2): xor %eax,%eax
2298(3): mov %rcx,%rdx
229b(5): call 0xfffff495(%rip)
22a0(7): lea 0x3a22(%rip),%rax
22a7(7): lea 0x3a5c(%rip),%rcx
22ae(9): mov $0x0,0x60(%rsp)
22b7(9): mov $0x0,0x68(%rsp)
22c0(3): mov %rsp,%rdx
22c3(4): mov %rax,(%rsp)
22c7(7): lea 0x39fd(%rip),%rax
22ce(5): mov %rcx,0x30(%rsp)
22d3(7): lea 0x3a3a(%rip),%rcx
22da(5): mov %rax,0x8(%rsp)
22df(7): lea 0x3a5d(%rip),%rax
22e6(5): mov %rcx,0x40(%rsp)
22eb(7): lea 0x3a2c(%rip),%rcx
22f2(5): mov %rax,0x10(%rsp)
22f7(7): lea 0x39dd(%rip),%rax
22fe(5): mov %rcx,0x50(%rsp)
2303(5): mov %rax,0x18(%rsp)
2308(7): lea 0x39e2(%rip),%rax
230f(5): mov %rax,0x20(%rsp)
2314(7): lea 0x39e0(%rip),%rax
231b(5): mov %rax,0x28(%rsp)
2320(5): mov %rax,0x38(%rsp)
2325(5): mov %rax,0x48(%rsp)
232a(5): mov %rax,0x58(%rsp)
232f(1): nop 
2330(4): add $0x10,%rdx
2334(3): mov (%rdx),%rdi
2337(3): test %rdi,%rdi
233a(2): jz 0x15(%rip)
233c(5): mov $0x7,%ecx
2341(3): mov %rbx,%rsi
2344(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2346(3): setnbe %al
2349(2): sbb $0x0,%al
234b(2): test %al,%al
234d(2): jnz 0xffffffe3(%rip)
234f(4): mov 0x8(%rdx),%r12
2353(2): xor %edi,%edi
2355(5): mov $0x5,%edx
235a(7): lea 0x39c7(%rip),%rsi
2361(3): test %r12,%r12
2364(6): jz 0xc7(%rip)
236a(5): call 0xfffff206(%rip)
236f(7): lea 0x3e1a(%rip),%rcx
2376(7): lea 0x39c2(%rip),%rdx
237d(3): mov %rax,%rsi
2380(5): mov $0x1,%edi
2385(2): xor %eax,%eax
2387(5): call 0xfffff3a9(%rip)
238c(2): xor %esi,%esi
238e(5): mov $0x5,%edi
2393(5): call 0xfffff38d(%rip)
2398(3): test %rax,%rax
239b(2): jz 0x1e(%rip)
239d(7): lea 0x39a9(%rip),%rsi
23a4(5): mov $0x3,%edx
23a9(3): mov %rax,%rdi
23ac(5): call 0xfffff154(%rip)
23b1(2): test %eax,%eax
23b3(6): jnz 0x10d(%rip)
23b9(7): lea 0x3991(%rip),%rsi
23c0(2): xor %edi,%edi
23c2(5): mov $0x5,%edx
23c7(5): call 0xfffff1a9(%rip)
23cc(7): lea 0x38d1(%rip),%rcx
23d3(7): lea 0x3db6(%rip),%rdx
23da(3): mov %rax,%rsi
23dd(5): mov $0x1,%edi
23e2(2): xor %eax,%eax
23e4(5): call 0xfffff34c(%rip)
23e9(3): cmp %rbx,%r12
23ec(7): lea 0x38f2(%rip),%rcx
23f3(7): lea 0x44e7(%rip),%rbx
23fa(4): cmove %rcx,%rbx
23fe(7): lea 0x3dfb(%rip),%rsi
2405(2): xor %edi,%edi
2407(5): mov $0x5,%edx
240c(5): call 0xfffff164(%rip)
2411(3): mov %rbx,%rcx
2414(3): mov %rax,%rsi
2417(3): mov %r12,%rdx
241a(5): mov $0x1,%edi
241f(2): xor %eax,%eax
2421(5): call 0xfffff30f(%rip)
2426(5): jmp 0xfffffd40(%rip)
242b(5): call 0xfffff145(%rip)
2430(7): lea 0x3d59(%rip),%rcx
2437(7): lea 0x3901(%rip),%rdx
243e(3): mov %rax,%rsi
2441(5): mov $0x1,%edi
2446(2): xor %eax,%eax
2448(5): call 0xfffff2e8(%rip)
244d(2): xor %esi,%esi
244f(5): mov $0x5,%edi
2454(5): call 0xfffff2cc(%rip)
2459(3): test %rax,%rax
245c(2): jz 0x1a(%rip)
245e(7): lea 0x38e8(%rip),%rsi
2465(5): mov $0x3,%edx
246a(3): mov %rax,%rdi
246d(5): call 0xfffff093(%rip)
2472(2): test %eax,%eax
2474(2): jnz 0x45(%rip)
2476(7): lea 0x38d4(%rip),%rsi
247d(5): mov $0x5,%edx
2482(2): xor %edi,%edi
2484(7): lea 0x3819(%rip),%r12
248b(7): lea 0x3853(%rip),%rbx
2492(5): call 0xfffff0de(%rip)
2497(7): lea 0x3806(%rip),%rcx
249e(7): lea 0x3ceb(%rip),%rdx
24a5(3): mov %rax,%rsi
24a8(5): mov $0x1,%edi
24ad(2): xor %eax,%eax
24af(5): call 0xfffff281(%rip)
24b4(5): jmp 0xffffff4a(%rip)
24b9(7): lea 0x37e4(%rip),%r12
24c0(7): mov 0x206bc1(%rip),%r13
24c7(7): lea 0x3cea(%rip),%rsi
24ce(2): xor %edi,%edi
24d0(5): mov $0x5,%edx
24d5(5): call 0xfffff09b(%rip)
24da(3): mov %r13,%rsi
24dd(3): mov %rax,%rdi
24e0(5): call 0xfffff190(%rip)
24e5(5): jmp 0xfffffed4(%rip)

"decode_8" :
24f0(2): xor %eax,%eax
24f2(4): cmp $0x7,%rsi
24f6(6): jbe 0x172(%rip)
24fc(4): movzx (%rdi),%r8d
2500(7): lea 0x3d59(%rip),%rsi
2507(5): movzx 0x0(%rsi,%r8,1),%r8d
250c(3): test %r8b,%r8b
250f(6): js 0x159(%rip)
2515(5): movzx 0x1(%rdi),%r9d
251a(5): movzx 0x0(%rsi,%r9,1),%r9d
251f(3): test %r9b,%r9b
2522(6): js 0x146(%rip)
2528(4): cmp $0x0,(%rcx)
252c(3): mov (%rdx),%rax
252f(2): jz 0x1c(%rip)
2531(3): mov %r9d,%r10d
2534(4): shl/sal $0x3,%r8d
2538(4): add $0x1,%rax
253c(4): sar $0x2,%r10b
2540(3): or %r10d,%r8d
2543(4): mov %r8b,0xffffffff(%rax)
2547(4): sub $0x1,(%rcx)
254b(5): movzx 0x2(%rdi),%r8d
2550(4): cmp $0x3d,%r8b
2554(6): jz 0x11c(%rip)
255a(5): movzx 0x0(%rsi,%r8,1),%r8d
255f(3): test %r8b,%r8b
2562(6): js 0x114(%rip)
2568(5): movzx 0x3(%rdi),%r10d
256d(5): movzx 0x0(%rsi,%r10,1),%r10d
2572(3): test %r10b,%r10b
2575(6): js 0x101(%rip)
257b(4): cmp $0x0,(%rcx)
257f(2): jz 0x22(%rip)
2581(3): add %r8d,%r8d
2584(4): shl/sal $0x6,%r9d
2588(4): add $0x1,%rax
258c(3): or %r8d,%r9d
258f(3): mov %r10d,%r8d
2592(4): sar $0x4,%r8b
2596(3): or %r8d,%r9d
2599(4): mov %r9b,0xffffffff(%rax)
259d(4): sub $0x1,(%rcx)
25a1(5): movzx 0x4(%rdi),%r8d
25a6(4): cmp $0x3d,%r8b
25aa(6): jz 0xdc(%rip)
25b0(5): movzx 0x0(%rsi,%r8,1),%r8d
25b5(3): test %r8b,%r8b
25b8(6): js 0xbe(%rip)
25be(4): cmp $0x0,(%rcx)
25c2(2): jz 0x1b(%rip)
25c4(3): mov %r8d,%r9d
25c7(4): shl/sal $0x4,%r10d
25cb(4): add $0x1,%rax
25cf(3): sar $0x1,%r9b
25d2(3): or %r9d,%r10d
25d5(4): mov %r10b,0xffffffff(%rax)
25d9(4): sub $0x1,(%rcx)
25dd(5): movzx 0x5(%rdi),%r9d
25e2(4): cmp $0x3d,%r9b
25e6(6): jz 0xa6(%rip)
25ec(5): movzx 0x0(%rsi,%r9,1),%r9d
25f1(3): test %r9b,%r9b
25f4(6): js 0x82(%rip)
25fa(5): movzx 0x6(%rdi),%r10d
25ff(5): movzx 0x0(%rsi,%r10,1),%r10d
2604(3): test %r10b,%r10b
2607(2): js 0x6f(%rip)
2609(4): cmp $0x0,(%rcx)
260d(2): jz 0x23(%rip)
260f(4): shl/sal $0x2,%r9d
2613(4): shl/sal $0x7,%r8d
2617(4): add $0x1,%rax
261b(3): or %r9d,%r8d
261e(3): mov %r10d,%r9d
2621(4): sar $0x3,%r9b
2625(3): or %r9d,%r8d
2628(4): mov %r8b,0xffffffff(%rax)
262c(4): sub $0x1,(%rcx)
2630(4): movzx 0x7(%rdi),%edi
2634(4): cmp $0x3d,%dil
2638(2): jz 0x28(%rip)
263a(4): movzx 0x0(%rsi,%rdi,1),%esi
263e(3): test %sil,%sil
2641(2): js 0x35(%rip)
2643(4): cmp $0x0,(%rcx)
2647(2): jz 0x19(%rip)
2649(4): shl/sal $0x5,%r10d
264d(4): add $0x1,%rax
2651(3): or %esi,%r10d
2654(4): mov %r10b,0xffffffff(%rax)
2658(4): sub $0x1,(%rcx)
265c(4): nop 0x0(%rax)
2660(3): mov %rax,(%rdx)
2663(5): mov $0x1,%eax
2668(2): REP ret near (%rsp)
266a(6): nop 0x0(%rax,%rax,1)
2670(4): cmp $0x3d,0x3(%rdi)
2674(2): jz 0xc(%rip)
2676(3): mov %rax,(%rdx)
2679(2): xor %eax,%eax
267b(1): ret near (%rsp)
267c(4): nop 0x0(%rax)
2680(4): cmp $0x3d,0x4(%rdi)
2684(2): jnz 0xfffffff2(%rip)
2686(4): cmp $0x3d,0x5(%rdi)
268a(2): jnz 0xffffffec(%rip)
268c(4): cmp $0x3d,0x6(%rdi)
2690(2): jnz 0xffffffe6(%rip)
2692(4): cmp $0x3d,0x7(%rdi)
2696(2): jnz 0xffffffe0(%rip)
2698(2): jmp 0xffffffc8(%rip)

"base32_encode" :
26a0(7): lea 0x3b99(%rip),%r8
26a7(5): jmp 0x124(%rip)
26ac(4): nop 0x0(%rax)
26b0(5): movzx 0x1(%rdi),%r9d
26b5(3): mov %r9d,%r10d
26b8(4): shr $0x6,%r10b
26bc(3): add %r10d,%eax
26bf(3): and $0x1f,%eax
26c2(4): cmp $0x2,%rcx
26c6(5): movzx 0x0(%r8,%rax,1),%eax
26cb(3): mov %al,0x1(%rdx)
26ce(6): jz 0x1a7(%rip)
26d4(3): mov %r9d,%eax
26d7(2): shr $0x1,%al
26d9(3): and $0x1f,%eax
26dc(4): cmp $0x3,%rcx
26e0(5): movzx 0x0(%r8,%rax,1),%eax
26e5(3): mov %al,0x2(%rdx)
26e8(6): jz 0x18d(%rip)
26ee(4): shl/sal $0x4,%r9d
26f2(4): cmp $0x2,%rsi
26f6(6): jz 0x16a(%rip)
26fc(4): movzx 0x2(%rdi),%eax
2700(3): mov %eax,%r10d
2703(4): shr $0x4,%r10b
2707(3): add %r10d,%r9d
270a(4): and $0x1f,%r9d
270e(4): cmp $0x4,%rcx
2712(5): movzx 0x0(%r8,%r9,1),%r9d
2717(4): mov %r9b,0x3(%rdx)
271b(6): jz 0x15a(%rip)
2721(4): cmp $0x3,%rsi
2725(4): lea 0x0(%rax,%rax,1),%r9d
2729(6): jz 0x157(%rip)
272f(4): movzx 0x3(%rdi),%eax
2733(3): mov %eax,%r10d
2736(4): shr $0x7,%r10b
273a(3): add %r10d,%r9d
273d(4): and $0x1f,%r9d
2741(4): cmp $0x5,%rcx
2745(5): movzx 0x0(%r8,%r9,1),%r9d
274a(4): mov %r9b,0x4(%rdx)
274e(6): jz 0x127(%rip)
2754(3): mov %eax,%r9d
2757(4): shr $0x2,%r9b
275b(4): and $0x1f,%r9d
275f(4): cmp $0x6,%rcx
2763(5): movzx 0x0(%r8,%r9,1),%r9d
2768(4): mov %r9b,0x5(%rdx)
276c(6): jz 0x109(%rip)
2772(3): shl/sal $0x3,%eax
2775(4): cmp $0x4,%rsi
2779(6): jz 0x11f(%rip)
277f(5): movzx 0x4(%rdi),%r9d
2784(3): mov %r9d,%r10d
2787(4): shr $0x5,%r10b
278b(3): add %r10d,%eax
278e(3): and $0x1f,%eax
2791(4): cmp $0x7,%rcx
2795(5): movzx 0x0(%r8,%rax,1),%eax
279a(3): mov %al,0x6(%rdx)
279d(6): jz 0xd8(%rip)
27a3(4): and $0x1f,%r9d
27a7(4): cmp $0x8,%rcx
27ab(5): movzx 0x0(%r8,%r9,1),%eax
27b0(3): mov %al,0x7(%rdx)
27b3(6): jz 0xc2(%rip)
27b9(4): sub $0x5,%rsi
27bd(2): jz 0x6(%rip)
27bf(4): add $0x5,%rdi
27c3(4): add $0x8,%rdx
27c7(4): sub $0x8,%rcx
27cb(3): test %rsi,%rsi
27ce(6): jz 0xe2(%rip)
27d4(3): test %rcx,%rcx
27d7(6): jz 0xd9(%rip)
27dd(3): movzx (%rdi),%eax
27e0(3): mov %eax,%r9d
27e3(4): shr $0x3,%r9b
27e7(4): and $0x1f,%r9d
27eb(4): cmp $0x1,%rcx
27ef(5): movzx 0x0(%r8,%r9,1),%r9d
27f4(3): mov %r9b,(%rdx)
27f7(2): jz 0x7e(%rip)
27f9(3): shl/sal $0x2,%eax
27fc(4): cmp $0x1,%rsi
2800(6): jnz 0xfffffeb0(%rip)
2806(3): and $0x1c,%eax
2809(4): cmp $0x2,%rcx
280d(5): movzx 0x0(%r8,%rax,1),%eax
2812(3): mov %al,0x1(%rdx)
2815(2): jz 0x60(%rip)
2817(4): cmp $0x3,%rcx
281b(4): mov $0x3d,0x2(%rdx)
281f(2): jz 0x56(%rip)
2821(4): cmp $0x4,%rcx
2825(4): mov $0x3d,0x3(%rdx)
2829(2): jz 0x4c(%rip)
282b(4): cmp $0x5,%rcx
282f(4): mov $0x3d,0x4(%rdx)
2833(2): jz 0x42(%rip)
2835(4): cmp $0x6,%rcx
2839(4): mov $0x3d,0x5(%rdx)
283d(2): jz 0x38(%rip)
283f(4): cmp $0x7,%rcx
2843(4): mov $0x3d,0x6(%rdx)
2847(2): jz 0x2e(%rip)
2849(4): cmp $0x8,%rcx
284d(4): mov $0x3d,0x7(%rdx)
2851(2): jz 0x24(%rip)
2853(2): xor %esi,%esi
2855(5): jmp 0xffffff6e(%rip)
285a(6): nop 0x0(%rax,%rax,1)
2860(4): and $0x1f,%r9d
2864(4): cmp $0x4,%rcx
2868(3): movsxd %r9d,%r9
286b(5): movzx 0x0(%r8,%r9,1),%eax
2870(3): mov %al,0x3(%rdx)
2873(2): jnz 0xffffffb8(%rip)
2875(1): ret near (%rsp)
2876(a): nop 0x0(%rax,%rax,1)
2880(4): and $0x1e,%r9d
2884(4): cmp $0x5,%rcx
2888(5): movzx 0x0(%r8,%r9,1),%eax
288d(3): mov %al,0x4(%rdx)
2890(2): jnz 0xffffffa5(%rip)
2892(2): REP ret near (%rsp)
2894(4): nop 0x0(%rax)
2898(3): and $0x18,%eax
289b(4): cmp $0x7,%rcx
289f(5): movzx 0x0(%r8,%rax,1),%eax
28a4(3): mov %al,0x6(%rdx)
28a7(2): jz 0xffffffce(%rip)
28a9(2): jmp 0xffffffa0(%rip)
28ab(5): nop 0x0(%rax,%rax,1)
28b0(3): test %rcx,%rcx
28b3(2): jz 0xffffffc2(%rip)
28b5(3): mov $0x0,(%rdx)
28b8(1): ret near (%rsp)

"base32_encode_alloc" :
28c0(2): push %r14
28c2(2): push %r13
28c4(3): mov %rdx,%r13
28c7(4): lea 0x4(%rsi),%rdx
28cb(2): push %r12
28cd(1): push %rbp
28ce(1): push %rbx
28cf(a): mov $0x-3689348814741910323,%rbx
28d9(3): mov %rdx,%rax
28dc(3): mul %rax,%rbx,%rdx
28df(4): shr $0x2,%rdx
28e3(8): lea 0x0(,%rdx,8),%rbx
28eb(4): lea 0x1(%rbx),%rbp
28ef(3): cmp %rbp,%rsi
28f2(2): jbe 0x1e(%rip)
28f4(8): mov $0x0,0x0(%r13)
28fc(2): xor %ebp,%ebp
28fe(1): pop %rbx
28ff(3): mov %rbp,%rax
2902(1): pop %rbp
2903(2): pop %r12
2905(2): pop %r13
2907(2): pop %r14
2909(1): ret near (%rsp)
290a(6): nop 0x0(%rax,%rax,1)
2910(3): mov %rdi,%r14
2913(3): mov %rbp,%rdi
2916(3): mov %rsi,%r12
2919(5): call 0xffffeda7(%rip)
291e(3): test %rax,%rax
2921(4): mov %rax,0x0(%r13)
2925(2): jz 0xffffffd9(%rip)
2927(3): mov %rbp,%rcx
292a(3): mov %rax,%rdx
292d(3): mov %rbx,%rbp
2930(3): mov %r12,%rsi
2933(3): mov %r14,%rdi
2936(5): call 0xfffffd6a(%rip)
293b(1): pop %rbx
293c(3): mov %rbp,%rax
293f(1): pop %rbp
2940(2): pop %r12
2942(2): pop %r13
2944(2): pop %r14
2946(1): ret near (%rsp)

"isbase32" :
2950(7): lea 0x3909(%rip),%rax
2957(4): movzx %dil,%edi
295b(4): movzx 0x0(%rax,%rdi,1),%eax
295f(2): not %eax
2961(3): shr $0x7,%al
2964(1): ret near (%rsp)

"base32_decode_ctx_init" :
2970(6): mov $0x0,(%rdi)
2976(1): ret near (%rsp)

"base32_decode_ctx" :
2980(2): push %r15
2982(2): push %r14
2984(3): mov %rdx,%r11
2987(2): push %r13
2989(2): push %r12
298b(3): mov %rdi,%r14
298e(1): push %rbp
298f(1): push %rbx
2990(3): mov %rsi,%r12
2993(4): sub $0x38,%rsp
2997(3): mov (%r8),%r15
299a(9): mov $0x28,%rbx
29a3(5): mov %rbx,0x28(%rsp)
29a8(2): xor %ebx,%ebx
29aa(3): test %rdi,%rdi
29ad(5): mov %rcx,0x18(%rsp)
29b2(5): mov %r8,0x10(%rsp)
29b7(5): mov %r15,0x20(%rsp)
29bc(5): setnz 0x7(%rsp)
29c1(6): jz 0x22f(%rip)
29c7(3): test %rdx,%rdx
29ca(2): mov (%rdi),%edx
29cc(5): setnz 0x6(%rsp)
29d1(5): movzx 0x6(%rsp),%eax
29d6(2): test %edx,%edx
29d8(4): setz %r13b
29dc(3): and %eax,%r13d
29df(4): lea 0x4(%r14),%rax
29e3(5): lea 0x20(%rsp),%rbp
29e8(5): lea 0x18(%rsp),%rbx
29ed(5): mov %rax,0x8(%rsp)
29f2(3): test %r13b,%r13b
29f5(3): mov %r15,%rdx
29f8(6): jnz 0xd5(%rip)
29fe(3): test %r11,%r11
2a01(3): setz %al
2a04(4): and 0x6(%rsp),%al
2a08(6): jnz 0x88(%rip)
2a0e(3): test %r11,%r11
2a11(6): jz 0xdf(%rip)
2a17(5): cmp $0xa,(%r12)
2a1c(6): jz 0x1a4(%rip)
2a22(3): sub %r15,%rdx
2a25(5): add %rdx,0x18(%rsp)
2a2a(3): test %r14,%r14
2a2d(5): mov %r15,0x20(%rsp)
2a32(4): lea 0x0(%r12,%r11,1),%r15
2a36(6): jnz 0xd3(%rip)
2a3c(3): mov %r12,%rdi
2a3f(4): cmp $0x7,%r11
2a43(2): jnbe 0x14(%rip)
2a45(5): cmp $0x0,0x7(%rsp)
2a4a(2): jz 0xd(%rip)
2a4c(5): cmp $0x0,0x6(%rsp)
2a51(6): jnz 0x106(%rip)
2a57(3): mov %rbp,%rcx
2a5a(3): mov %rbx,%rdx
2a5d(3): mov %r11,%rsi
2a60(5): call 0xfffffa90(%rip)
2a65(2): test %al,%al
2a67(6): jz 0x1b8(%rip)
2a6d(3): mov %r15,%r11
2a70(5): mov 0x20(%rsp),%r15
2a75(3): sub %r12,%r11
2a78(3): test %r13b,%r13b
2a7b(3): mov %r15,%rdx
2a7e(2): jnz 0x4f(%rip)
2a80(3): test %r11,%r11
2a83(3): setz %al
2a86(4): and 0x6(%rsp),%al
2a8a(2): jz 0xffffff84(%rip)
2a8c(4): nop 0x0(%rax)
2a90(5): mov 0x10(%rsp),%rbx
2a95(3): sub %rdx,(%rbx)
2a98(5): mov 0x28(%rsp),%rbx
2a9d(9): xor $0x28,%rbx
2aa6(6): jnz 0x183(%rip)
2aac(4): add $0x38,%rsp
2ab0(1): pop %rbx
2ab1(1): pop %rbp
2ab2(2): pop %r12
2ab4(2): pop %r13
2ab6(2): pop %r14
2ab8(2): pop %r15
2aba(1): ret near (%rsp)
2abb(5): nop 0x0(%rax,%rax,1)
2ac0(5): mov 0x20(%rsp),%r15
2ac5(4): add $0x8,%r12
2ac9(4): sub $0x8,%r11
2acd(3): mov %rbp,%rcx
2ad0(3): mov %rbx,%rdx
2ad3(3): mov %r11,%rsi
2ad6(3): mov %r12,%rdi
2ad9(5): call 0xfffffa17(%rip)
2ade(2): test %al,%al
2ae0(2): jnz 0xffffffe0(%rip)
2ae2(5): mov 0x20(%rsp),%rdx
2ae7(5): jmp 0xffffff17(%rip)
2aec(4): nop 0x0(%rax)
2af0(3): sub %r15,%rdx
2af3(5): add %rdx,0x18(%rsp)
2af8(3): test %r14,%r14
2afb(5): mov %r15,0x20(%rsp)
2b00(6): jz 0x100(%rip)
2b06(3): mov %r12,%r15
2b09(3): mov (%r14),%eax
2b0c(3): cmp $0x8,%eax
2b0f(2): jz 0x61(%rip)
2b11(2): test %eax,%eax
2b13(2): jz 0x64(%rip)
2b15(3): cmp %r15,%r12
2b18(2): jnb 0x2e(%rip)
2b1a(6): nop 0x0(%rax,%rax,1)
2b20(4): add $0x1,%r12
2b24(6): movzx 0xffffffff(%r12),%edx
2b2a(3): cmp $0xa,%dl
2b2d(2): jz 0x14(%rip)
2b2f(3): lea 0x1(%rax),%ecx
2b32(3): cmp $0x8,%ecx
2b35(3): mov %ecx,(%r14)
2b38(5): mov %dl,0x4(%r14,%rax,1)
2b3d(2): jz 0x63(%rip)
2b3f(2): mov %ecx,%eax
2b41(3): cmp %r15,%r12
2b44(2): jnz 0xffffffdc(%rip)
2b46(3): mov %eax,%r11d
2b49(5): mov 0x8(%rsp),%rdi
2b4e(3): test %r11,%r11
2b51(6): jnz 0xfffffeee(%rip)
2b57(5): mov 0x20(%rsp),%rdx
2b5c(5): mov $0x1,%eax
2b61(5): jmp 0xffffff2f(%rip)
2b66(a): nop 0x0(%rax,%rax,1)
2b70(7): mov $0x0,(%r14)
2b77(4): cmp $0x7,%r11
2b7b(2): jle 0x19(%rip)
2b7d(5): mov $0x8,%edx
2b82(5): mov $0xa,%esi
2b87(3): mov %r12,%rdi
2b8a(5): call 0xffffeac6(%rip)
2b8f(3): test %rax,%rax
2b92(2): jz 0x7b(%rip)
2b94(3): mov (%r14),%eax
2b97(5): jmp 0xffffff7e(%rip)
2b9c(4): nop 0x0(%rax)
2ba0(5): mov $0x8,%eax
2ba5(5): mov 0x8(%rsp),%rdi
2baa(3): mov %eax,%r11d
2bad(3): test %r11,%r11
2bb0(6): jnz 0xfffffe8f(%rip)
2bb6(2): jmp 0xffffffa1(%rip)
2bb8(8): nop 0x0(%rax,%rax,1)
2bc0(3): test %r14,%r14
2bc3(2): jz 0x15(%rip)
2bc5(4): add $0x1,%r12
2bc9(4): sub $0x1,%r11
2bcd(3): mov %rdx,%r15
2bd0(5): jmp 0xfffffe22(%rip)
2bd5(3): nop (%rax)
2bd8(3): sub %r15,%rdx
2bdb(5): mov %r15,0x20(%rsp)
2be0(5): add %rdx,0x18(%rsp)
2be5(4): lea 0x0(%r12,%r11,1),%r15
2be9(5): jmp 0xfffffe53(%rip)
2bee(2): nop 
2bf0(6): mov $0x1,%r13d
2bf6(5): mov $0x1,0x6(%rsp)
2bfb(5): jmp 0xfffffde4(%rip)
2c00(3): mov %r15,%rdx
2c03(5): mov $0x1,%eax
2c08(5): jmp 0xfffffe88(%rip)
2c0d(3): mov %r12,%rdi
2c10(6): mov $0x8,%r11d
2c16(4): add $0x8,%r12
2c1a(5): jmp 0xfffffe3d(%rip)
2c1f(5): mov 0x20(%rsp),%rdx
2c24(5): jmp 0xfffffe6c(%rip)
2c29(5): call 0xffffe977(%rip)

"base32_decode_alloc_ctx" :
2c30(2): push %r14
2c32(2): push %r13
2c34(3): mov %rdx,%r14
2c37(2): push %r12
2c39(1): push %rbp
2c3a(3): mov %rdi,%r12
2c3d(1): push %rbx
2c3e(3): mov %rsi,%r13
2c41(3): mov %rcx,%rbx
2c44(3): mov %r8,%rbp
2c47(4): sub $0x20,%rsp
2c4b(9): mov $0x28,%rax
2c54(5): mov %rax,0x18(%rsp)
2c59(2): xor %eax,%eax
2c5b(3): mov %rdx,%rax
2c5e(4): shr $0x3,%rax
2c62(5): lea 0x5(%rax,%rax,4),%rdi
2c67(5): mov %rdi,0x10(%rsp)
2c6c(5): call 0xffffea54(%rip)
2c71(3): test %rax,%rax
2c74(3): mov %rax,(%rbx)
2c77(2): jz 0x31(%rip)
2c79(5): lea 0x10(%rsp),%r8
2c7e(3): mov %rax,%rcx
2c81(3): mov %r14,%rdx
2c84(3): mov %r13,%rsi
2c87(3): mov %r12,%rdi
2c8a(5): call 0xfffffcf6(%rip)
2c8f(2): test %al,%al
2c91(2): jz 0x3f(%rip)
2c93(3): test %rbp,%rbp
2c96(2): jz 0x12(%rip)
2c98(5): mov 0x10(%rsp),%rdx
2c9d(4): mov %rdx,0x0(%rbp)
2ca1(2): jmp 0xc(%rip)
2ca3(5): nop 0x0(%rax,%rax,1)
2ca8(5): mov $0x1,%eax
2cad(5): mov 0x18(%rsp),%rcx
2cb2(9): xor $0x28,%rcx
2cbb(2): jnz 0x2f(%rip)
2cbd(4): add $0x20,%rsp
2cc1(1): pop %rbx
2cc2(1): pop %rbp
2cc3(2): pop %r12
2cc5(2): pop %r13
2cc7(2): pop %r14
2cc9(1): ret near (%rsp)
2cca(6): nop 0x0(%rax,%rax,1)
2cd0(3): mov (%rbx),%rdi
2cd3(4): mov %al,0xf(%rsp)
2cd7(5): call 0xffffe7f9(%rip)
2cdc(7): mov $0x0,(%rbx)
2ce3(5): movzx 0xf(%rsp),%eax
2ce8(2): jmp 0xffffffc5(%rip)
2cea(5): call 0xffffe8b6(%rip)

"close_stdout_set_file_name" :
2cf0(7): mov %rdi,0x2063e1(%rip)
2cf7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2d00(7): mov %dil,0x2063c9(%rip)
2d07(1): ret near (%rsp)

"close_stdout" :
2d10(1): push %rbp
2d11(1): push %rbx
2d12(4): sub $0x8,%rsp
2d16(7): mov 0x20636b(%rip),%rdi
2d1d(5): call 0x2dc3(%rip)
2d22(2): test %eax,%eax
2d24(2): jz 0x18(%rip)
2d26(5): call 0xffffe7ca(%rip)
2d2b(7): cmp $0x0,0x20639e(%rip)
2d32(3): mov %rax,%rbx
2d35(2): jz 0x1e(%rip)
2d37(3): cmp $0x20,(%rax)
2d3a(2): jnz 0x19(%rip)
2d3c(7): mov 0x20637d(%rip),%rdi
2d43(5): call 0x2d9d(%rip)
2d48(2): test %eax,%eax
2d4a(2): jnz 0x48(%rip)
2d4c(4): add $0x8,%rsp
2d50(1): pop %rbx
2d51(1): pop %rbp
2d52(1): ret near (%rsp)
2d53(7): lea 0x3070(%rip),%rsi
2d5a(2): xor %edi,%edi
2d5c(5): mov $0x5,%edx
2d61(5): call 0xffffe80f(%rip)
2d66(7): mov 0x20636b(%rip),%rdi
2d6d(3): mov %rax,%rbp
2d70(3): test %rdi,%rdi
2d73(2): jz 0x2a(%rip)
2d75(5): call 0x1b9b(%rip)
2d7a(2): mov (%rbx),%esi
2d7c(7): lea 0x35dd(%rip),%rdx
2d83(3): mov %rax,%rcx
2d86(3): mov %rbp,%r8
2d89(2): xor %edi,%edi
2d8b(2): xor %eax,%eax
2d8d(5): call 0xffffe9c3(%rip)
2d92(6): mov 0x206280(%rip),%edi
2d98(5): call 0xffffe778(%rip)
2d9d(2): mov (%rbx),%esi
2d9f(7): lea 0x35be(%rip),%rdx
2da6(3): mov %rax,%rcx
2da9(2): xor %edi,%edi
2dab(2): xor %eax,%eax
2dad(5): call 0xffffe9a3(%rip)
2db2(2): jmp 0xffffffe0(%rip)

"fadvise" :
2dd0(3): test %rdi,%rdi
2dd3(2): jz 0x1d(%rip)
2dd5(1): push %rbx
2dd6(2): mov %esi,%ebx
2dd8(5): call 0xffffe8d8(%rip)
2ddd(2): mov %ebx,%ecx
2ddf(2): xor %edx,%edx
2de1(2): xor %esi,%esi
2de3(1): pop %rbx
2de4(2): mov %eax,%edi
2de6(5): jmp 0xffffe85a(%rip)
2deb(5): nop 0x0(%rax,%rax,1)
2df0(2): REP ret near (%rsp)

"set_program_name" :
2e00(3): test %rdi,%rdi
2e03(1): push %rbx
2e04(2): jz 0x79(%rip)
2e06(5): mov $0x2f,%esi
2e0b(3): mov %rdi,%rbx
2e0e(5): call 0xffffe7e2(%rip)
2e13(3): test %rax,%rax
2e16(2): jz 0x57(%rip)
2e18(4): lea 0x1(%rax),%r8
2e1c(3): mov %r8,%rdx
2e1f(3): sub %rbx,%rdx
2e22(4): cmp $0x6,%rdx
2e26(2): jle 0x47(%rip)
2e28(4): lea 0xfffffffa(%rax),%rsi
2e2c(7): lea 0x356d(%rip),%rdi
2e33(5): mov $0x7,%ecx
2e38(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2e3a(3): setnbe %dl
2e3d(3): sbb $0x0,%dl
2e40(2): test %dl,%dl
2e42(2): jnz 0x2b(%rip)
2e44(7): lea 0x355d(%rip),%rdi
2e4b(5): mov $0x3,%ecx
2e50(3): mov %r8,%rsi
2e53(3): mov %r8,%rbx
2e56(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2e58(3): setnbe %dl
2e5b(3): sbb $0x0,%dl
2e5e(2): test %dl,%dl
2e60(2): jnz 0xd(%rip)
2e62(4): lea 0x4(%rax),%rbx
2e66(7): mov %rbx,0x206213(%rip)
2e6d(7): mov %rbx,0x20626c(%rip)
2e74(7): mov %rbx,0x20622d(%rip)
2e7b(1): pop %rbx
2e7c(1): ret near (%rsp)
2e7d(7): mov 0x20623c(%rip),%rcx
2e84(7): lea 0x34dd(%rip),%rdi
2e8b(5): mov $0x37,%edx
2e90(5): mov $0x1,%esi
2e95(5): call 0xffffe90b(%rip)
2e9a(5): call 0xffffe646(%rip)

"gettext_quote.part.1" :
2ea0(1): push %rbp
2ea1(1): push %rbx
2ea2(3): mov %rdi,%rbp
2ea5(2): mov %esi,%ebx
2ea7(4): sub $0x8,%rsp
2eab(5): call 0x2d15(%rip)
2eb0(3): movzx (%rax),%edx
2eb3(3): and $0xdf,%edx
2eb6(3): cmp $0x55,%dl
2eb9(2): jz 0x77(%rip)
2ebb(3): cmp $0x47,%dl
2ebe(2): jz 0x22(%rip)
2ec0(7): lea 0x34f4(%rip),%rax
2ec7(7): lea 0x34ef(%rip),%rdx
2ece(3): cmp $0x9,%ebx
2ed1(4): cmovne %rdx,%rax
2ed5(4): add $0x8,%rsp
2ed9(1): pop %rbx
2eda(1): pop %rbp
2edb(1): ret near (%rsp)
2edc(4): nop 0x0(%rax)
2ee0(4): movzx 0x1(%rax),%edx
2ee4(3): and $0xdf,%edx
2ee7(3): cmp $0x42,%dl
2eea(2): jnz 0xffffffd6(%rip)
2eec(4): cmp $0x31,0x2(%rax)
2ef0(2): jnz 0xffffffd0(%rip)
2ef2(4): cmp $0x38,0x3(%rax)
2ef6(2): jnz 0xffffffca(%rip)
2ef8(4): cmp $0x30,0x4(%rax)
2efc(2): jnz 0xffffffc4(%rip)
2efe(4): cmp $0x33,0x5(%rax)
2f02(2): jnz 0xffffffbe(%rip)
2f04(4): cmp $0x30,0x6(%rax)
2f08(2): jnz 0xffffffb8(%rip)
2f0a(4): cmp $0x0,0x7(%rax)
2f0e(2): jnz 0xffffffb2(%rip)
2f10(4): cmp $0x60,0x0(%rbp)
2f14(7): lea 0x3499(%rip),%rax
2f1b(7): lea 0x3496(%rip),%rdx
2f22(4): cmovne %rdx,%rax
2f26(4): add $0x8,%rsp
2f2a(1): pop %rbx
2f2b(1): pop %rbp
2f2c(1): ret near (%rsp)
2f2d(3): nop (%rax)
2f30(4): movzx 0x1(%rax),%edx
2f34(3): and $0xdf,%edx
2f37(3): cmp $0x54,%dl
2f3a(2): jnz 0xffffff86(%rip)
2f3c(4): movzx 0x2(%rax),%edx
2f40(3): and $0xdf,%edx
2f43(3): cmp $0x46,%dl
2f46(6): jnz 0xffffff7a(%rip)
2f4c(4): cmp $0x2d,0x3(%rax)
2f50(6): jnz 0xffffff70(%rip)
2f56(4): cmp $0x38,0x4(%rax)
2f5a(6): jnz 0xffffff66(%rip)
2f60(4): cmp $0x0,0x5(%rax)
2f64(6): jnz 0xffffff5c(%rip)
2f6a(4): cmp $0x60,0x0(%rbp)
2f6e(7): lea 0x3437(%rip),%rax
2f75(7): lea 0x3434(%rip),%rdx
2f7c(4): cmovne %rdx,%rax
2f80(4): add $0x8,%rsp
2f84(1): pop %rbx
2f85(1): pop %rbp
2f86(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2f90(2): push %r15
2f92(2): push %r14
2f94(3): mov %r8d,%r15d
2f97(2): push %r13
2f99(2): push %r12
2f9b(3): mov %rdi,%r14
2f9e(1): push %rbp
2f9f(1): push %rbx
2fa0(3): mov %r9d,%ebx
2fa3(3): mov %rsi,%r13
2fa6(3): mov %rcx,%rbp
2fa9(3): and $0x2,%ebx
2fac(7): sub $0xb8,%rsp
2fb3(8): mov 0xf0(%rsp),%rax
2fbb(5): mov %rdx,0x10(%rsp)
2fc0(5): mov %r8d,0x8(%rsp)
2fc5(5): mov %r9d,0x78(%rsp)
2fca(5): mov %rax,0x20(%rsp)
2fcf(8): mov 0xf8(%rsp),%rax
2fd7(5): mov %rax,0x68(%rsp)
2fdc(8): mov 0x100(%rsp),%rax
2fe4(5): mov %rax,0x60(%rsp)
2fe9(9): mov $0x28,%rax
2ff2(8): mov %rax,0xa8(%rsp)
2ffa(2): xor %eax,%eax
2ffc(5): call 0xffffe584(%rip)
3001(4): cmp $0xa,%r15d
3005(5): mov %rax,0x58(%rsp)
300a(6): jnbe 0x11b5(%rip)
3010(7): lea 0x3409(%rip),%rcx
3017(3): mov %r15d,%edx
301a(4): movsxd 0x0(%rcx,%rdx,4),%rax
301e(3): add %rcx,%rax
3021(2): jmp %rax
3023(5): mov $0x1,0xe(%rsp)
3028(5): mov $0x0,0x7c(%rsp)
302d(3): xor %r12d,%r12d
3030(9): mov $0x0,0x50(%rsp)
3039(5): mov $0x1,0xf(%rsp)
303e(5): mov $0x0,0xd(%rsp)
3043(7): lea 0x3373(%rip),%rax
304a(9): mov $0x1,0x18(%rsp)
3053(3): xor %r15d,%r15d
3056(8): mov $0x2,0x8(%rsp)
305e(5): mov %rax,0x48(%rsp)
3063(3): xor %r11d,%r11d
3066(3): mov %rbp,%rax
3069(3): mov %r12d,%r8d
306c(3): mov %r11,%rbp
306f(3): mov %rax,%r11
3072(6): nop 0x0(%rax,%rax,1)
3078(3): cmp %rbp,%r11
307b(4): setnz %r12b
307f(4): cmp $0xffffffff,%r11
3083(2): jnz 0xf(%rip)
3085(5): mov 0x10(%rsp),%rax
308a(4): cmp $0x0,0x0(%rax,%rbp,1)
308e(4): setnz %r12b
3092(3): test %r12b,%r12b
3095(6): jz 0x65b(%rip)
309b(5): cmp $0x2,0x8(%rsp)
30a0(5): mov 0x10(%rsp),%rdi
30a5(4): lea 0x0(%rdi,%rbp,1),%r9
30a9(3): setnz %al
30ac(4): and 0xd(%rsp),%al
30b0(3): mov %eax,%r10d
30b3(6): jz 0xad(%rip)
30b9(5): mov 0x18(%rsp),%rax
30be(3): test %rax,%rax
30c1(6): jz 0x42f(%rip)
30c7(4): cmp $0xffffffff,%r11
30cb(5): lea 0x0(%rbp,%rax,1),%rbx
30d0(2): jnz 0x30(%rip)
30d2(4): cmp $0x1,%rax
30d6(2): jbe 0x2a(%rip)
30d8(5): mov %r8b,0x38(%rsp)
30dd(5): mov %r10b,0x30(%rsp)
30e2(5): mov %r9,0x28(%rsp)
30e7(5): call 0xffffe4a9(%rip)
30ec(6): movzx 0x38(%rsp),%r8d
30f2(6): movzx 0x30(%rsp),%r10d
30f8(3): mov %rax,%r11
30fb(5): mov 0x28(%rsp),%r9
3100(3): cmp %r11,%rbx
3103(5): mov %r10b,0x28(%rsp)
3108(6): jnbe 0x5b8(%rip)
310e(5): mov 0x18(%rsp),%rdx
3113(5): mov 0x48(%rsp),%rsi
3118(3): mov %r9,%rdi
311b(5): mov %r11,0x40(%rsp)
3120(5): mov %r8b,0x38(%rsp)
3125(5): mov %r9,0x30(%rsp)
312a(5): call 0xffffe536(%rip)
312f(2): test %eax,%eax
3131(5): mov 0x30(%rsp),%r9
3136(6): movzx 0x38(%rsp),%r8d
313c(5): mov 0x40(%rsp),%r11
3141(6): jnz 0x57f(%rip)
3147(5): cmp $0x0,0xf(%rsp)
314c(6): movzx 0x28(%rsp),%r10d
3152(6): jnz 0xf83(%rip)
3158(8): nop 0x0(%rax,%rax,1)
3160(4): movzx (%r9),%ebx
3164(3): cmp $0x7e,%bl
3167(6): jnbe 0x321(%rip)
316d(7): lea 0x32d8(%rip),%rcx
3174(3): movzx %bl,%edx
3177(4): movsxd 0x0(%rcx,%rdx,4),%rax
317b(3): add %rcx,%rax
317e(2): jmp %rax
3180(3): xor %r10d,%r10d
3183(4): cmp $0x1,%r11
3187(3): setnz %al
318a(4): cmp $0xffffffff,%r11
318e(2): jnz 0xe(%rip)
3190(5): mov 0x10(%rsp),%rax
3195(4): cmp $0x0,0x1(%rax)
3199(3): setnz %al
319c(5): cmp $0x2,0x8(%rsp)
31a1(3): setz %dl
31a4(2): test %al,%al
31a6(6): jz 0x252(%rip)
31ac(3): xor %r12d,%r12d
31af(2): xor %eax,%eax
31b1(7): nop 0x0(%rax)
31b8(5): cmp $0x1,0xd(%rsp)
31bd(6): jnz 0x115(%rip)
31c3(2): test %dl,%dl
31c5(6): jnz 0x10d(%rip)
31cb(5): mov 0x20(%rsp),%rsi
31d0(3): test %rsi,%rsi
31d3(2): jz 0x16(%rip)
31d5(2): mov %ebx,%edx
31d7(3): shr $0x5,%dl
31da(3): movzx %dl,%edx
31dd(3): mov 0x0(%rsi,%rdx,4),%edx
31e0(3): bt %ebx,%edx
31e3(6): jb 0x150(%rip)
31e9(3): test %r10b,%r10b
31ec(6): jnz 0x147(%rip)
31f2(3): xor $0x1,%eax
31f5(4): add $0x1,%rbp
31f9(3): and %r8d,%eax
31fc(2): test %al,%al
31fe(2): jz 0x22(%rip)
3200(3): cmp %r15,%r13
3203(2): jbe 0x7(%rip)
3205(5): mov $0x27,0x0(%r14,%r15,1)
320a(4): lea 0x1(%r15),%rax
320e(3): cmp %rax,%r13
3211(2): jbe 0x8(%rip)
3213(6): mov $0x27,0x1(%r14,%r15,1)
3219(4): add $0x2,%r15
321d(3): xor %r8d,%r8d
3220(3): cmp %r13,%r15
3223(2): jnb 0x6(%rip)
3225(4): mov %bl,0x0(%r14,%r15,1)
3229(5): movzx 0xe(%rsp),%edi
322e(4): add $0x1,%r15
3232(5): mov $0x0,%eax
3237(3): test %r12b,%r12b
323a(3): cmove %eax,%edi
323d(5): mov %dil,0xe(%rsp)
3242(5): jmp 0xfffffe36(%rip)
3247(9): nop 0x0(%rax,%rax,1)
3250(3): xor %r10d,%r10d
3253(4): mov 0x8(%rsp),%eax
3257(3): cmp $0x2,%eax
325a(6): jz 0x5be(%rip)
3260(3): cmp $0x5,%eax
3263(6): jz 0x575(%rip)
3269(3): cmp $0x2,%eax
326c(5): mov $0x3f,%ebx
3271(3): setz %dl
3274(3): xor %r12d,%r12d
3277(2): xor %eax,%eax
3279(5): jmp 0xffffff3f(%rip)
327e(2): nop 
3280(3): xor %r10d,%r10d
3283(5): cmp $0x2,0x8(%rsp)
3288(6): jz 0x508(%rip)
328e(5): mov %r12b,0x7c(%rsp)
3293(2): xor %edx,%edx
3295(2): xor %eax,%eax
3297(5): mov $0x27,%ebx
329c(5): jmp 0xffffff1c(%rip)
32a1(7): nop 0x0(%rax)
32a8(5): mov $0x9,%edx
32ad(5): mov $0x74,%ebx
32b2(5): cmp $0x2,0x8(%rsp)
32b7(3): setz %al
32ba(4): and 0xf(%rsp),%al
32be(6): jnz 0x150(%rip)
32c4(5): cmp $0x0,0xd(%rsp)
32c9(2): jnz 0x67(%rip)
32cb(2): mov %edx,%ebx
32cd(3): xor %r12d,%r12d
32d0(2): xor %eax,%eax
32d2(5): cmp $0x0,0xf(%rsp)
32d7(6): jnz 0xfffffef4(%rip)
32dd(5): jmp 0xffffff0c(%rip)
32e2(6): nop 0x0(%rax,%rax,1)
32e8(5): mov $0x8,%edx
32ed(5): mov $0x62,%ebx
32f2(2): jmp 0xffffffd2(%rip)
32f4(4): nop 0x0(%rax)
32f8(5): cmp $0x2,0x8(%rsp)
32fd(6): jz 0x3d3(%rip)
3303(5): cmp $0x0,0xd(%rsp)
3308(6): jz 0x218(%rip)
330e(5): cmp $0x0,0xf(%rsp)
3313(6): jz 0x20d(%rip)
3319(6): cmp $0x0,0x18(%rsp)
331f(6): jnz 0x3bc(%rip)
3325(5): mov $0x5c,%ebx
332a(6): nop 0x0(%rax,%rax,1)
3330(3): xor %r12d,%r12d
3333(5): cmp $0x2,0x8(%rsp)
3338(3): setz %dl
333b(5): cmp $0x0,0xf(%rsp)
3340(2): mov %edx,%eax
3342(6): jnz 0x856(%rip)
3348(3): mov %r8d,%eax
334b(3): xor $0x1,%eax
334e(2): and %dl,%al
3350(2): jz 0x31(%rip)
3352(3): cmp %r15,%r13
3355(2): jbe 0x7(%rip)
3357(5): mov $0x27,0x0(%r14,%r15,1)
335c(4): lea 0x1(%r15),%rdx
3360(3): cmp %rdx,%r13
3363(2): jbe 0x8(%rip)
3365(6): mov $0x24,0x1(%r14,%r15,1)
336b(4): lea 0x2(%r15),%rdx
336f(3): cmp %rdx,%r13
3372(2): jbe 0x8(%rip)
3374(6): mov $0x27,0x2(%r14,%r15,1)
337a(4): add $0x3,%r15
337e(3): mov %eax,%r8d
3381(3): cmp %r15,%r13
3384(2): jbe 0x7(%rip)
3386(5): mov $0x5c,0x0(%r14,%r15,1)
338b(4): add $0x1,%r15
338f(4): add $0x1,%rbp
3393(5): jmp 0xfffffe8d(%rip)
3398(8): nop 0x0(%rax,%rax,1)
33a0(5): cmp $0x0,0xd(%rsp)
33a5(6): jnz 0x1ce(%rip)
33ab(2): xor %edx,%edx
33ad(5): test $0x1,0x78(%rsp)
33b2(6): jz 0xffffff19(%rip)
33b8(4): add $0x1,%rbp
33bc(5): jmp 0xfffffcbc(%rip)
33c1(7): nop 0x0(%rax)
33c8(5): cmp $0x2,0x8(%rsp)
33cd(3): setz %dl
33d0(2): xor %eax,%eax
33d2(5): jmp 0xfffffde6(%rip)
33d7(9): nop 0x0(%rax,%rax,1)
33e0(5): mov $0x7,%edx
33e5(5): mov $0x61,%ebx
33ea(5): jmp 0xfffffeda(%rip)
33ef(1): nop 
33f0(5): cmp $0x2,0x8(%rsp)
33f5(3): setz %dl
33f8(3): test %rbp,%rbp
33fb(6): jnz 0xfffffdb1(%rip)
3401(5): movzx 0xf(%rsp),%eax
3406(2): and %dl,%al
3408(6): jz 0xfffffdb0(%rip)
340e(3): mov %r11,%rbp
3411(8): mov $0x2,0x8(%rsp)
3419(5): jmp 0x700(%rip)
341e(2): nop 
3420(5): cmp $0x2,0x8(%rsp)
3425(3): setz %dl
3428(3): xor %r12d,%r12d
342b(2): jmp 0xffffffd6(%rip)
342d(3): nop (%rax)
3430(5): cmp $0x2,0x8(%rsp)
3435(5): mov $0x20,%ebx
343a(3): setz %dl
343d(2): jmp 0xffffffc4(%rip)
343f(1): nop 
3440(5): mov $0xd,%edx
3445(5): mov $0x72,%ebx
344a(5): jmp 0xfffffe68(%rip)
344f(1): nop 
3450(5): mov $0xc,%edx
3455(5): mov $0x66,%ebx
345a(5): jmp 0xfffffe6a(%rip)
345f(1): nop 
3460(5): mov $0xb,%edx
3465(5): mov $0x76,%ebx
346a(5): jmp 0xfffffe5a(%rip)
346f(1): nop 
3470(5): mov $0xa,%edx
3475(5): mov $0x6e,%ebx
347a(5): jmp 0xfffffe38(%rip)
347f(1): nop 
3480(3): xor %r10d,%r10d
3483(5): nop 0x0(%rax,%rax,1)
3488(6): cmp $0x1,0x58(%rsp)
348e(6): jnz 0x3aa(%rip)
3494(5): mov %r11,0x38(%rsp)
3499(5): mov %r8b,0x30(%rsp)
349e(5): mov %r10b,0x28(%rsp)
34a3(5): call 0xffffe33d(%rip)
34a8(3): mov (%rax),%rcx
34ab(3): movzx %bl,%edx
34ae(6): movzx 0x28(%rsp),%r10d
34b4(6): movzx 0x30(%rsp),%r8d
34ba(5): mov 0x38(%rsp),%r11
34bf(5): mov $0x1,%edi
34c4(4): movzx 0x0(%rcx,%rdx,2),%eax
34c8(4): and $0x4000,%ax
34cc(4): setnz %r12b
34d0(3): setz %al
34d3(4): and 0xd(%rsp),%al
34d7(2): test %al,%al
34d9(6): jnz 0x998(%rip)
34df(5): cmp $0x2,0x8(%rsp)
34e4(3): setz %dl
34e7(5): jmp 0xfffffcd1(%rip)
34ec(4): nop 0x0(%rax)
34f0(4): movzx (%r9),%ebx
34f4(3): cmp $0x7e,%bl
34f7(2): jnbe 0xffffff89(%rip)
34f9(7): lea 0x3148(%rip),%rcx
3500(3): movzx %bl,%edx
3503(4): movsxd 0x0(%rcx,%rdx,4),%rax
3507(3): add %rcx,%rax
350a(2): jmp %rax
350c(4): nop 0x0(%rax)
3510(3): xor %r10d,%r10d
3513(5): cmp $0x0,0xd(%rsp)
3518(6): jnz 0xfffffdf6(%rip)
351e(2): nop 
3520(5): mov $0x5c,%edx
3525(5): mov $0x5c,%ebx
352a(5): jmp 0xfffffd9a(%rip)
352f(1): nop 
3530(5): mov $0xc,%edx
3535(3): xor %r10d,%r10d
3538(5): mov $0x66,%ebx
353d(5): jmp 0xfffffd87(%rip)
3542(6): nop 0x0(%rax,%rax,1)
3548(5): mov $0xa,%edx
354d(3): xor %r10d,%r10d
3550(5): mov $0x6e,%ebx
3555(5): jmp 0xfffffd5d(%rip)
355a(6): nop 0x0(%rax,%rax,1)
3560(5): mov $0x61,%ebx
3565(5): jmp 0xfffffdcb(%rip)
356a(6): nop 0x0(%rax,%rax,1)
3570(3): xor %r10d,%r10d
3573(5): cmp $0x2,0x8(%rsp)
3578(3): setz %dl
357b(5): cmp $0x0,0xf(%rsp)
3580(6): jnz 0xb9a(%rip)
3586(3): mov %r8d,%eax
3589(3): mov %r15,%rcx
358c(3): xor $0x1,%eax
358f(2): and %dl,%al
3591(2): jz 0x2f(%rip)
3593(3): cmp %r15,%r13
3596(2): jbe 0x7(%rip)
3598(5): mov $0x27,0x0(%r14,%r15,1)
359d(4): lea 0x1(%r15),%rcx
35a1(3): cmp %rcx,%r13
35a4(2): jbe 0x8(%rip)
35a6(6): mov $0x24,0x1(%r14,%r15,1)
35ac(4): lea 0x2(%r15),%rcx
35b0(3): cmp %rcx,%r13
35b3(6): jnbe 0x636(%rip)
35b9(4): lea 0x3(%r15),%rcx
35bd(3): mov %eax,%r8d
35c0(3): cmp %rcx,%r13
35c3(2): jbe 0x7(%rip)
35c5(5): mov $0x5c,0x0(%r14,%rcx,1)
35ca(5): cmp $0x2,0x8(%rsp)
35cf(4): lea 0x1(%rcx),%r15
35d3(6): jz 0x606(%rip)
35d9(4): lea 0x1(%rbp),%rax
35dd(3): cmp %r11,%rax
35e0(2): jnb 0x1b(%rip)
35e2(5): mov 0x10(%rsp),%rax
35e7(5): movzx 0x1(%rax,%rbp,1),%eax
35ec(4): mov %al,0x28(%rsp)
35f0(3): sub $0x30,%eax
35f3(2): cmp $0x9,%al
35f5(6): jbe 0x834(%rip)
35fb(3): mov %r12d,%eax
35fe(5): mov $0x30,%ebx
3603(3): xor %r12d,%r12d
3606(5): jmp 0xfffffbb2(%rip)
360b(5): nop 0x0(%rax,%rax,1)
3610(5): cmp $0x2,0x8(%rsp)
3615(3): mov %r10d,%r12d
3618(3): setz %dl
361b(3): xor %r10d,%r10d
361e(2): xor %eax,%eax
3620(5): jmp 0xfffffb98(%rip)
3625(3): nop (%rax)
3628(5): cmp $0x2,0x8(%rsp)
362d(3): setz %dl
3630(3): xor %r10d,%r10d
3633(5): jmp 0xfffffdc5(%rip)
3638(8): nop 0x0(%rax,%rax,1)
3640(5): cmp $0x2,0x8(%rsp)
3645(3): setz %dl
3648(3): xor %r10d,%r10d
364b(3): xor %r12d,%r12d
364e(5): jmp 0xfffffdb3(%rip)
3653(5): nop 0x0(%rax,%rax,1)
3658(5): cmp $0x2,0x8(%rsp)
365d(3): mov %r10d,%r12d
3660(5): mov $0x20,%ebx
3665(3): setz %dl
3668(3): xor %r10d,%r10d
366b(5): jmp 0xfffffd96(%rip)
3670(5): mov $0xd,%edx
3675(3): xor %r10d,%r10d
3678(5): mov $0x72,%ebx
367d(5): jmp 0xfffffc35(%rip)
3682(6): nop 0x0(%rax,%rax,1)
3688(5): mov $0x76,%ebx
368d(5): jmp 0xfffffca3(%rip)
3692(6): nop 0x0(%rax,%rax,1)
3698(5): mov $0x9,%edx
369d(3): xor %r10d,%r10d
36a0(5): mov $0x74,%ebx
36a5(5): jmp 0xfffffc0d(%rip)
36aa(6): nop 0x0(%rax,%rax,1)
36b0(5): mov $0x62,%ebx
36b5(5): jmp 0xfffffc7b(%rip)
36ba(6): nop 0x0(%rax,%rax,1)
36c0(3): xor %r10d,%r10d
36c3(5): jmp 0xfffffa9d(%rip)
36c8(8): nop 0x0(%rax,%rax,1)
36d0(5): cmp $0x0,0xf(%rsp)
36d5(6): jnz 0x96b(%rip)
36db(4): add $0x1,%rbp
36df(3): mov %r8d,%eax
36e2(3): xor %r12d,%r12d
36e5(5): mov $0x5c,%ebx
36ea(5): jmp 0xfffffb12(%rip)
36ef(1): nop 
36f0(5): cmp $0x2,0x8(%rsp)
36f5(5): movzx 0xf(%rsp),%ebx
36fa(3): mov %r8d,%r12d
36fd(3): mov %r11,%rbp
3700(3): setz %dl
3703(2): mov %ebx,%eax
3705(3): test %r15,%r15
3708(3): setz %cl
370b(2): and %edx,%eax
370d(2): and %cl,%al
370f(6): jnz 0xa67(%rip)
3715(2): mov %ebx,%eax
3717(3): xor $0x1,%eax
371a(2): and %al,%dl
371c(6): jz 0x970(%rip)
3722(5): cmp $0x0,0x7c(%rsp)
3727(6): jz 0x963(%rip)
372d(5): cmp $0x0,0xe(%rsp)
3732(6): jnz 0x9fb(%rip)
3738(3): test %r13,%r13
373b(3): setz %al
373e(6): cmp $0x0,0x50(%rsp)
3744(3): setnz %dl
3747(2): and %dl,%al
3749(6): jz 0xa23(%rip)
374f(5): mov 0x50(%rsp),%r13
3754(7): lea 0x2c62(%rip),%rbx
375b(4): mov $0x27,(%r14)
375f(8): mov $0x2,0x8(%rsp)
3767(6): mov $0x1,%r15d
376d(9): mov $0x1,0x18(%rsp)
3776(5): mov $0x0,0xf(%rsp)
377b(5): mov %rbx,0x48(%rsp)
3780(4): mov %al,0x7c(%rsp)
3784(5): jmp 0xfffff8df(%rip)
3789(7): nop 0x0(%rax)
3790(5): cmp $0x0,0xf(%rsp)
3795(6): jnz 0x8ab(%rip)
379b(3): test %r13,%r13
379e(6): jz 0x402(%rip)
37a4(2): xor %edx,%edx
37a6(6): cmp $0x0,0x50(%rsp)
37ac(6): jnz 0x3f4(%rip)
37b2(5): mov %r13,0x50(%rsp)
37b7(4): add $0x3,%r15
37bb(2): xor %eax,%eax
37bd(5): mov %r12b,0x7c(%rsp)
37c2(3): xor %r8d,%r8d
37c5(3): mov %rdx,%r13
37c8(5): mov $0x27,%ebx
37cd(5): jmp 0xfffffa1c(%rip)
37d2(6): nop 0x0(%rax,%rax,1)
37d8(5): test $0x4,0x78(%rsp)
37dd(2): jz 0x23(%rip)
37df(4): lea 0x2(%rbp),%rcx
37e3(3): cmp %r11,%rcx
37e6(2): jnb 0x1a(%rip)
37e8(5): mov 0x10(%rsp),%rax
37ed(5): cmp $0x3f,0x1(%rax,%rbp,1)
37f2(6): jz 0x790(%rip)
37f8(8): nop 0x0(%rax,%rax,1)
3800(2): xor %edx,%edx
3802(3): xor %r12d,%r12d
3805(2): xor %eax,%eax
3807(5): mov $0x3f,%ebx
380c(5): jmp 0xfffff9ac(%rip)
3811(7): nop 0x0(%rax)
3818(5): cmp $0x0,0xf(%rsp)
381d(6): jnz 0x823(%rip)
3823(3): xor %r12d,%r12d
3826(2): xor %eax,%eax
3828(5): mov $0x3f,%ebx
382d(5): jmp 0xfffff9bc(%rip)
3832(6): nop 0x0(%rax,%rax,1)
3838(8): lea 0xa0(%rsp),%rax
3840(4): cmp $0xffffffff,%r11
3844(c): mov $0x0,0xa0(%rsp)
3850(5): mov %rax,0x28(%rsp)
3855(2): jnz 0x2f(%rip)
3857(5): mov 0x10(%rsp),%rdi
385c(5): mov %r8b,0x40(%rsp)
3861(5): mov %r10b,0x38(%rsp)
3866(5): mov %r9,0x30(%rsp)
386b(5): call 0xffffdd25(%rip)
3870(6): movzx 0x40(%rsp),%r8d
3876(6): movzx 0x38(%rsp),%r10d
387c(3): mov %rax,%r11
387f(5): mov 0x30(%rsp),%r9
3884(8): lea 0x9c(%rsp),%rax
388c(2): xor %ecx,%ecx
388e(4): mov %bl,0x7e(%rsp)
3892(5): mov %r8b,0x7d(%rsp)
3897(3): mov %rcx,%rbx
389a(8): mov %r9,0x88(%rsp)
38a2(5): mov %rax,0x38(%rsp)
38a7(5): mov %r10b,0x7f(%rsp)
38ac(8): mov %r15,0x80(%rsp)
38b4(5): mov %r14,0x40(%rsp)
38b9(5): mov %r13,0x70(%rsp)
38be(5): mov %r11,0x30(%rsp)
38c3(5): mov 0x10(%rsp),%rax
38c8(5): lea 0x0(%rbp,%rbx,1),%r14
38cd(5): mov 0x30(%rsp),%rdx
38d2(5): mov 0x28(%rsp),%rcx
38d7(5): mov 0x38(%rsp),%rdi
38dc(4): lea 0x0(%rax,%r14,1),%r13
38e0(3): sub %r14,%rdx
38e3(3): mov %r13,%rsi
38e6(5): call 0x216a(%rip)
38eb(3): test %rax,%rax
38ee(3): mov %rax,%r15
38f1(2): jz 0x50(%rip)
38f3(4): cmp $0xffffffff,%rax
38f7(6): jz 0x61e(%rip)
38fd(4): cmp $0xfffffffe,%rax
3901(6): jz 0x5a0(%rip)
3907(5): cmp $0x2,0x8(%rsp)
390c(3): setz %al
390f(4): and 0xf(%rsp),%al
3913(6): jnz 0x19d(%rip)
3919(7): mov 0x9c(%rsp),%edi
3920(5): call 0xffffdeb0(%rip)
3925(5): mov 0x28(%rsp),%rdi
392a(2): test %eax,%eax
392c(5): mov $0x0,%eax
3931(4): cmove %eax,%r12d
3935(3): add %r15,%rbx
3938(5): call 0xffffde88(%rip)
393d(2): test %eax,%eax
393f(2): jz 0xffffff84(%rip)
3941(3): mov %r12d,%edx
3944(3): mov %rbx,%rdi
3947(6): movzx 0x7d(%rsp),%r8d
394d(3): xor $0x1,%edx
3950(5): movzx 0x7e(%rsp),%ebx
3955(6): movzx 0x7f(%rsp),%r10d
395b(4): and 0xd(%rsp),%dl
395f(8): mov 0x80(%rsp),%r15
3967(5): mov 0x40(%rsp),%r14
396c(5): mov 0x70(%rsp),%r13
3971(5): mov 0x30(%rsp),%r11
3976(4): cmp $0x1,%rdi
397a(6): jbe 0x601(%rip)
3980(3): mov %rdi,%rcx
3983(2): xor %esi,%esi
3985(6): movzx 0xf(%rsp),%r9d
398b(3): add %rbp,%rcx
398e(5): mov 0x10(%rsp),%rdi
3993(5): jmp 0xbb(%rip)
3998(8): nop 0x0(%rax,%rax,1)
39a0(5): cmp $0x2,0x8(%rsp)
39a5(3): setz %al
39a8(3): test %r9b,%r9b
39ab(6): jnz 0x4b5(%rip)
39b1(3): mov %r8d,%esi
39b4(3): xor $0x1,%esi
39b7(3): and %sil,%al
39ba(2): jz 0x31(%rip)
39bc(3): cmp %r15,%r13
39bf(2): jbe 0x7(%rip)
39c1(5): mov $0x27,0x0(%r14,%r15,1)
39c6(4): lea 0x1(%r15),%rsi
39ca(3): cmp %rsi,%r13
39cd(2): jbe 0x8(%rip)
39cf(6): mov $0x24,0x1(%r14,%r15,1)
39d5(4): lea 0x2(%r15),%rsi
39d9(3): cmp %rsi,%r13
39dc(2): jbe 0x8(%rip)
39de(6): mov $0x27,0x2(%r14,%r15,1)
39e4(4): add $0x3,%r15
39e8(3): mov %eax,%r8d
39eb(3): cmp %r15,%r13
39ee(2): jbe 0x7(%rip)
39f0(5): mov $0x5c,0x0(%r14,%r15,1)
39f5(4): lea 0x1(%r15),%rax
39f9(3): cmp %rax,%r13
39fc(2): jbe 0xf(%rip)
39fe(2): mov %ebx,%eax
3a00(3): shr $0x6,%al
3a03(3): add $0x30,%eax
3a06(5): mov %al,0x1(%r14,%r15,1)
3a0b(4): lea 0x2(%r15),%rax
3a0f(3): cmp %rax,%r13
3a12(2): jbe 0x12(%rip)
3a14(2): mov %ebx,%eax
3a16(3): shr $0x3,%al
3a19(3): and $0x7,%eax
3a1c(3): add $0x30,%eax
3a1f(5): mov %al,0x2(%r14,%r15,1)
3a24(3): and $0x7,%ebx
3a27(4): add $0x1,%rbp
3a2b(4): add $0x3,%r15
3a2f(3): add $0x30,%ebx
3a32(3): cmp %rcx,%rbp
3a35(6): jnb 0xfffff7eb(%rip)
3a3b(2): mov %edx,%esi
3a3d(3): cmp %r15,%r13
3a40(2): jbe 0x6(%rip)
3a42(4): mov %bl,0x0(%r14,%r15,1)
3a46(4): movzx 0x0(%rdi,%rbp,1),%ebx
3a4a(4): add $0x1,%r15
3a4e(2): test %dl,%dl
3a50(6): jnz 0xffffff50(%rip)
3a56(2): mov %esi,%eax
3a58(3): xor $0x1,%eax
3a5b(3): and %r8d,%eax
3a5e(3): test %r10b,%r10b
3a61(2): jz 0x10(%rip)
3a63(3): cmp %r15,%r13
3a66(2): jbe 0x7(%rip)
3a68(5): mov $0x5c,0x0(%r14,%r15,1)
3a6d(4): add $0x1,%r15
3a71(4): add $0x1,%rbp
3a75(3): cmp %rcx,%rbp
3a78(6): jnb 0xfffff784(%rip)
3a7e(2): test %al,%al
3a80(6): jz 0x3fe(%rip)
3a86(3): cmp %r15,%r13
3a89(2): jbe 0x7(%rip)
3a8b(5): mov $0x27,0x0(%r14,%r15,1)
3a90(4): lea 0x1(%r15),%rax
3a94(3): cmp %rax,%r13
3a97(2): jbe 0x8(%rip)
3a99(6): mov $0x27,0x1(%r14,%r15,1)
3a9f(4): add $0x2,%r15
3aa3(3): xor %r10d,%r10d
3aa6(3): xor %r8d,%r8d
3aa9(2): jmp 0xffffff94(%rip)
3aab(5): nop 0x0(%rax,%rax,1)
3ab0(4): cmp $0x1,%r15
3ab4(6): jz 0xfffffe65(%rip)
3aba(5): mov 0x10(%rsp),%rdi
3abf(4): lea 0x0(%rdi,%r15,1),%rcx
3ac3(5): lea 0x1(%rdi,%r14,1),%rdx
3ac8(4): lea 0x0(%rcx,%r14,1),%r8
3acc(2): jmp 0x11(%rip)
3ace(2): nop 
3ad0(4): add $0x1,%rdx
3ad4(3): cmp %rdx,%r8
3ad7(6): jz 0xfffffe42(%rip)
3add(3): movzx (%rdx),%ecx
3ae0(3): sub $0x5b,%ecx
3ae3(3): cmp $0x21,%cl
3ae6(2): jnbe 0xffffffea(%rip)
3ae8(5): mov $0x1,%esi
3aed(3): shl/sal %cl,%rsi
3af0(3): mov %rsi,%rcx
3af3(a): mov $0x8589934635,%rsi
3afd(3): test %rsi,%rcx
3b00(2): jz 0xffffffd0(%rip)
3b02(5): mov 0x40(%rsp),%r14
3b07(5): mov 0x70(%rsp),%r13
3b0c(5): mov 0x30(%rsp),%rbp
3b11(8): mov $0x2,0x8(%rsp)
3b19(5): cmp $0x0,0xd(%rsp)
3b1e(2): jz 0x12(%rip)
3b20(2): test %al,%al
3b22(5): mov $0x4,%eax
3b27(5): cmove 0x8(%rsp),%eax
3b2c(4): mov %eax,0x8(%rsp)
3b30(4): sub $0x8,%rsp
3b34(3): mov %rbp,%rcx
3b37(3): mov %r13,%rsi
3b3a(4): push 0x68(%rsp)
3b3e(4): push 0x78(%rsp)
3b42(3): mov %r14,%rdi
3b45(2): push $0x0
3b47(8): mov 0x98(%rsp),%r9d
3b4f(5): mov 0x28(%rsp),%r8d
3b54(5): mov 0x30(%rsp),%rdx
3b59(4): and $0xfd,%r9d
3b5d(5): call 0xfffff433(%rip)
3b62(4): add $0x20,%rsp
3b66(3): mov %rax,%r15
3b69(8): mov 0xa8(%rsp),%rbx
3b71(9): xor $0x28,%rbx
3b7a(3): mov %r15,%rax
3b7d(6): jnz 0x606(%rip)
3b83(7): add $0xb8,%rsp
3b8a(1): pop %rbx
3b8b(1): pop %rbp
3b8c(2): pop %r12
3b8e(2): pop %r13
3b90(2): pop %r14
3b92(2): pop %r15
3b94(1): ret near (%rsp)
3b95(3): nop (%rax)
3b98(3): mov %r11,%rbp
3b9b(5): jmp 0xffffff7e(%rip)
3ba0(3): cmp %r15,%r13
3ba3(2): jbe 0x7(%rip)
3ba5(5): mov $0x27,0x0(%r14,%r15,1)
3baa(4): lea 0x1(%r15),%rax
3bae(3): cmp %rax,%r13
3bb1(2): jbe 0x8(%rip)
3bb3(6): mov $0x5c,0x1(%r14,%r15,1)
3bb9(4): lea 0x2(%r15),%rax
3bbd(3): cmp %rax,%r13
3bc0(6): jbe 0x5f2(%rip)
3bc6(3): mov %r13,%rdx
3bc9(6): mov $0x27,0x2(%r14,%r15,1)
3bcf(5): mov 0x50(%rsp),%r13
3bd4(5): jmp 0xfffffbde(%rip)
3bd9(3): mov %r12d,%eax
3bdc(5): mov $0x30,%ebx
3be1(3): xor %r12d,%r12d
3be4(5): jmp 0xfffff605(%rip)
3be9(6): mov $0x27,0x2(%r14,%r15,1)
3bef(5): jmp 0xfffff9ca(%rip)
3bf4(2): test %ebx,%ebx
3bf6(6): jnz 0xfffff42d(%rip)
3bfc(5): mov $0x1,0xd(%rsp)
3c01(3): test %r13,%r13
3c04(6): jnz 0x596(%rip)
3c0a(7): lea 0x27ac(%rip),%rax
3c11(9): mov $0x0,0x50(%rsp)
3c1a(5): mov $0x1,0xe(%rsp)
3c1f(5): mov $0x0,0x7c(%rsp)
3c24(3): xor %r12d,%r12d
3c27(5): mov $0x0,0xf(%rsp)
3c2c(9): mov $0x1,0x18(%rsp)
3c35(5): mov %rax,0x48(%rsp)
3c3a(6): mov $0x1,%r15d
3c40(8): mov $0x2,0x8(%rsp)
3c48(5): jmp 0xfffff41b(%rip)
3c4d(3): nop (%rax)
3c50(2): test %ebx,%ebx
3c52(6): jnz 0x3fb(%rip)
3c58(3): test %r13,%r13
3c5b(6): jz 0x22b(%rip)
3c61(4): mov $0x22,(%r14)
3c65(5): mov $0x1,0xe(%rsp)
3c6a(3): xor %r12d,%r12d
3c6d(5): mov $0x0,0x7c(%rsp)
3c72(9): mov $0x0,0x50(%rsp)
3c7b(7): lea 0x2739(%rip),%rax
3c82(5): mov $0x0,0xf(%rsp)
3c87(5): mov $0x1,0xd(%rsp)
3c8c(9): mov $0x1,0x18(%rsp)
3c95(6): mov $0x1,%r15d
3c9b(5): mov %rax,0x48(%rsp)
3ca0(5): jmp 0xfffff3c3(%rip)
3ca5(7): lea 0x270f(%rip),%rax
3cac(5): mov $0x1,0xe(%rsp)
3cb1(5): mov $0x0,0x7c(%rsp)
3cb6(3): xor %r12d,%r12d
3cb9(9): mov $0x0,0x50(%rsp)
3cc2(5): mov $0x1,0xf(%rsp)
3cc7(5): mov $0x1,0xd(%rsp)
3ccc(9): mov $0x1,0x18(%rsp)
3cd5(3): xor %r15d,%r15d
3cd8(5): mov %rax,0x48(%rsp)
3cdd(8): mov $0x5,0x8(%rsp)
3ce5(5): jmp 0xfffff37e(%rip)
3cea(5): mov $0x1,0xe(%rsp)
3cef(5): mov $0x0,0x7c(%rsp)
3cf4(3): xor %r12d,%r12d
3cf7(9): mov $0x0,0x50(%rsp)
3d00(5): mov $0x0,0xf(%rsp)
3d05(3): xor %r15d,%r15d
3d08(5): mov $0x1,0xd(%rsp)
3d0d(9): mov $0x0,0x18(%rsp)
3d16(9): mov $0x0,0x48(%rsp)
3d1f(5): jmp 0xfffff344(%rip)
3d24(5): cmp $0xa,0x8(%rsp)
3d29(2): jz 0x58(%rip)
3d2b(7): lea 0x268d(%rip),%rsi
3d32(2): xor %edi,%edi
3d34(5): mov $0x5,%edx
3d39(5): call 0xffffd837(%rip)
3d3e(3): mov %rax,%rcx
3d41(5): mov %rax,0x68(%rsp)
3d46(7): lea 0x2672(%rip),%rax
3d4d(3): cmp %rax,%rcx
3d50(6): jz 0x39e(%rip)
3d56(7): lea 0x2660(%rip),%rsi
3d5d(2): xor %edi,%edi
3d5f(5): mov $0x5,%edx
3d64(5): call 0xffffd80c(%rip)
3d69(3): mov %rax,%rcx
3d6c(5): mov %rax,0x60(%rsp)
3d71(7): lea 0x2645(%rip),%rax
3d78(3): cmp %rax,%rcx
3d7b(6): jz 0x389(%rip)
3d81(3): xor %r15d,%r15d
3d84(2): test %ebx,%ebx
3d86(6): jz 0x1c7(%rip)
3d8c(2): test %ebx,%ebx
3d8e(5): mov 0x60(%rsp),%rbx
3d93(5): setnz 0xf(%rsp)
3d98(3): xor %r12d,%r12d
3d9b(3): mov %rbx,%rdi
3d9e(5): call 0xffffd7f2(%rip)
3da3(5): mov %rbx,0x48(%rsp)
3da8(5): mov %rax,0x18(%rsp)
3dad(5): mov $0x1,0xe(%rsp)
3db2(5): mov $0x0,0x7c(%rsp)
3db7(9): mov $0x0,0x50(%rsp)
3dc0(5): mov $0x1,0xd(%rsp)
3dc5(5): jmp 0xfffff29e(%rip)
3dca(5): mov $0x1,0xe(%rsp)
3dcf(5): mov $0x0,0x7c(%rsp)
3dd4(3): xor %r12d,%r12d
3dd7(9): mov $0x0,0x50(%rsp)
3de0(5): mov $0x0,0xf(%rsp)
3de5(3): xor %r15d,%r15d
3de8(5): mov $0x0,0xd(%rsp)
3ded(9): mov $0x0,0x18(%rsp)
3df6(9): mov $0x0,0x48(%rsp)
3dff(5): jmp 0xfffff264(%rip)
3e04(5): mov $0x1,0xe(%rsp)
3e09(5): mov $0x0,0x7c(%rsp)
3e0e(3): xor %r12d,%r12d
3e11(9): mov $0x0,0x50(%rsp)
3e1a(5): mov $0x1,0xf(%rsp)
3e1f(5): mov $0x1,0xd(%rsp)
3e24(5): jmp 0xfffff21f(%rip)
3e29(3): cmp %r15,%r13
3e2c(2): jbe 0x7(%rip)
3e2e(5): mov $0x30,0x0(%r14,%r15,1)
3e33(4): lea 0x2(%rcx),%rax
3e37(3): cmp %rax,%r13
3e3a(2): jbe 0x8(%rip)
3e3c(6): mov $0x30,0x2(%r14,%rcx,1)
3e42(3): mov %r12d,%eax
3e45(4): lea 0x3(%rcx),%r15
3e49(3): xor %r12d,%r12d
3e4c(5): mov $0x30,%ebx
3e51(5): jmp 0xfffff367(%rip)
3e56(a): nop 0x0(%rax,%rax,1)
3e60(5): movzx 0xf(%rsp),%ebx
3e65(3): mov %r11,%rbp
3e68(4): mov %bl,0xd(%rsp)
3e6c(5): jmp 0xfffffcad(%rip)
3e71(5): movzx 0xd(%rsp),%edx
3e76(3): xor %r12d,%r12d
3e79(5): jmp 0xfffffb07(%rip)
3e7e(3): xor %r10d,%r10d
3e81(5): jmp 0xfffffbbc(%rip)
3e86(9): mov $0x0,0x50(%rsp)
3e8f(5): mov $0x1,0xe(%rsp)
3e94(3): xor %r12d,%r12d
3e97(5): mov $0x0,0x7c(%rsp)
3e9c(5): jmp 0xfffffddf(%rip)
3ea1(5): mov 0x30(%rsp),%r11
3ea6(3): mov %r14,%rsi
3ea9(3): mov %r13,%rcx
3eac(3): mov %rbx,%rax
3eaf(3): mov %rbx,%rdi
3eb2(6): movzx 0x7d(%rsp),%r8d
3eb8(5): movzx 0x7e(%rsp),%ebx
3ebd(8): mov 0x88(%rsp),%r9
3ec5(3): cmp %r11,%rsi
3ec8(6): movzx 0x7f(%rsp),%r10d
3ece(8): mov 0x80(%rsp),%r15
3ed6(5): mov 0x40(%rsp),%r14
3edb(5): mov 0x70(%rsp),%r13
3ee0(2): jnb 0x28(%rip)
3ee2(3): cmp $0x0,(%rcx)
3ee5(2): jnz 0x12(%rip)
3ee7(2): jmp 0x21(%rip)
3ee9(7): nop 0x0(%rax)
3ef0(5): cmp $0x0,0x0(%r9,%rax,1)
3ef5(2): jz 0x10(%rip)
3ef7(4): add $0x1,%rax
3efb(5): lea 0x0(%rbp,%rax,1),%rdx
3f00(3): cmp %rdx,%r11
3f03(2): jnbe 0xffffffed(%rip)
3f05(3): mov %rax,%rdi
3f08(5): movzx 0xd(%rsp),%edx
3f0d(3): xor %r12d,%r12d
3f10(5): jmp 0xfffffa66(%rip)
3f15(3): mov %rbx,%rdi
3f18(6): movzx 0x7d(%rsp),%r8d
3f1e(5): movzx 0x7e(%rsp),%ebx
3f23(6): movzx 0x7f(%rsp),%r10d
3f29(8): mov 0x80(%rsp),%r15
3f31(3): xor %r12d,%r12d
3f34(5): mov 0x40(%rsp),%r14
3f39(5): mov 0x70(%rsp),%r13
3f3e(5): mov 0x30(%rsp),%r11
3f43(5): movzx 0xd(%rsp),%edx
3f48(5): jmp 0xfffffa2e(%rip)
3f4d(5): mov 0x68(%rsp),%rdx
3f52(3): movzx (%rdx),%eax
3f55(2): test %al,%al
3f57(6): jz 0xfffffe35(%rip)
3f5d(3): nop (%rax)
3f60(3): cmp %r15,%r13
3f63(2): jbe 0x6(%rip)
3f65(4): mov %al,0x0(%r14,%r15,1)
3f69(4): add $0x1,%r15
3f6d(5): movzx 0x0(%rdx,%r15,1),%eax
3f72(2): test %al,%al
3f74(2): jnz 0xffffffec(%rip)
3f76(5): jmp 0xfffffe16(%rip)
3f7b(2): mov %edx,%eax
3f7d(5): jmp 0xfffff55a(%rip)
3f82(4): movzx 0x0(%rax,%rcx,1),%ebx
3f86(3): cmp $0x3e,%bl
3f89(6): jnbe 0xfffff877(%rip)
3f8f(a): mov $0x8070630310989004800,%rax
3f99(4): bt %rbx,%rax
3f9d(6): jnb 0xfffff863(%rip)
3fa3(5): cmp $0x0,0xf(%rsp)
3fa8(6): jnz 0x1ea(%rip)
3fae(3): cmp %r15,%r13
3fb1(2): jbe 0x7(%rip)
3fb3(5): mov $0x3f,0x0(%r14,%r15,1)
3fb8(4): lea 0x1(%r15),%rax
3fbc(3): cmp %rax,%r13
3fbf(2): jbe 0x8(%rip)
3fc1(6): mov $0x22,0x1(%r14,%r15,1)
3fc7(4): lea 0x2(%r15),%rax
3fcb(3): cmp %rax,%r13
3fce(2): jbe 0x8(%rip)
3fd0(6): mov $0x22,0x2(%r14,%r15,1)
3fd6(4): lea 0x3(%r15),%rax
3fda(3): cmp %rax,%r13
3fdd(2): jbe 0x8(%rip)
3fdf(6): mov $0x3f,0x3(%r14,%r15,1)
3fe5(4): add $0x4,%r15
3fe9(2): xor %edx,%edx
3feb(3): xor %r12d,%r12d
3fee(2): xor %eax,%eax
3ff0(3): mov %rcx,%rbp
3ff3(5): jmp 0xfffff1c5(%rip)
3ff8(2): test %ebx,%ebx
3ffa(6): jz 0x18e(%rip)
4000(7): lea 0x23b6(%rip),%rax
4007(5): mov $0x1,0xe(%rsp)
400c(5): mov $0x0,0x7c(%rsp)
4011(3): xor %r12d,%r12d
4014(9): mov $0x0,0x50(%rsp)
401d(5): mov $0x1,0xf(%rsp)
4022(5): mov $0x0,0xd(%rsp)
4027(9): mov $0x1,0x18(%rsp)
4030(3): xor %r15d,%r15d
4033(5): mov %rax,0x48(%rsp)
4038(5): jmp 0xfffff02b(%rip)
403d(3): nop (%rax)
4040(3): mov %r11,%rbp
4043(5): movzx 0xf(%rsp),%eax
4048(5): jmp 0xfffffad1(%rip)
404d(7): lea 0x2367(%rip),%rax
4054(5): mov $0x1,0xe(%rsp)
4059(5): mov $0x0,0x7c(%rsp)
405e(3): xor %r12d,%r12d
4061(9): mov $0x0,0x50(%rsp)
406a(5): mov $0x1,0xf(%rsp)
406f(5): mov $0x1,0xd(%rsp)
4074(9): mov $0x1,0x18(%rsp)
407d(3): xor %r15d,%r15d
4080(5): mov %rax,0x48(%rsp)
4085(5): jmp 0xffffefde(%rip)
408a(2): mov %edx,%eax
408c(5): mov 0x48(%rsp),%rbx
4091(3): test %rbx,%rbx
4094(2): jz 0x2e(%rip)
4096(2): test %al,%al
4098(2): jz 0x2a(%rip)
409a(3): movzx (%rbx),%ecx
409d(3): mov %rbx,%rax
40a0(2): test %cl,%cl
40a2(2): jz 0x20(%rip)
40a4(3): mov %r15,%rdx
40a7(3): sub %r15,%rax
40aa(3): cmp %rdx,%r13
40ad(2): jbe 0x6(%rip)
40af(4): mov %cl,0x0(%r14,%rdx,1)
40b3(4): add $0x1,%rdx
40b7(4): movzx 0x0(%rax,%rdx,1),%ecx
40bb(2): test %cl,%cl
40bd(2): jnz 0xffffffed(%rip)
40bf(3): mov %rdx,%r15
40c2(3): cmp %r15,%r13
40c5(6): jbe 0xfffffaa4(%rip)
40cb(5): mov $0x0,0x0(%r14,%r15,1)
40d0(5): jmp 0xfffffa99(%rip)
40d5(5): cmp $0x2,0x8(%rsp)
40da(5): movzx 0xf(%rsp),%ebx
40df(3): mov %r11,%rbp
40e2(3): setz %al
40e5(4): mov %bl,0xd(%rsp)
40e9(5): jmp 0xfffffa30(%rip)
40ee(4): mov 0x8(%rsp),%esi
40f2(3): mov %rcx,%rdi
40f5(5): call 0xffffedab(%rip)
40fa(5): mov %rax,0x68(%rsp)
40ff(5): jmp 0xfffffc57(%rip)
4104(4): mov 0x8(%rsp),%esi
4108(3): mov %rcx,%rdi
410b(5): call 0xffffed95(%rip)
4110(5): mov %rax,0x60(%rsp)
4115(5): jmp 0xfffffc6c(%rip)
411a(5): movzx 0xf(%rsp),%ebx
411f(3): mov %r11,%rbp
4122(2): mov %edx,%eax
4124(4): mov %bl,0xd(%rsp)
4128(5): jmp 0xfffff9f1(%rip)
412d(4): sub $0x8,%rsp
4131(6): mov $0x5,%r8d
4137(3): mov %r11,%rcx
413a(4): push 0x68(%rsp)
413e(4): push 0x78(%rsp)
4142(3): mov %r14,%rdi
4145(4): push 0x38(%rsp)
4149(8): mov 0x98(%rsp),%r9d
4151(5): mov 0x30(%rsp),%rdx
4156(5): mov 0x70(%rsp),%rsi
415b(5): call 0xffffee35(%rip)
4160(4): add $0x20,%rsp
4164(3): mov %rax,%r15
4167(5): jmp 0xfffffa02(%rip)
416c(5): movzx 0x7c(%rsp),%eax
4171(5): jmp 0xffffff1b(%rip)
4176(8): mov $0x2,0x8(%rsp)
417e(5): jmp 0xfffff99b(%rip)
4183(5): call 0xffffd41d(%rip)
4188(5): mov $0x0,0xd(%rsp)
418d(5): jmp 0xfffffa74(%rip)
4192(3): mov %r11,%rbp
4195(5): jmp 0xfffff99b(%rip)
419a(5): mov $0x1,0xe(%rsp)
419f(2): xor %eax,%eax
41a1(3): xor %r12d,%r12d
41a4(9): mov $0x0,0x50(%rsp)
41ad(5): jmp 0xfffff5a7(%rip)
41b2(3): mov %r13,%rdx
41b5(5): mov 0x50(%rsp),%r13
41ba(5): jmp 0xfffff5f8(%rip)
41bf(5): call 0xffffd321(%rip)

"quotearg_n_options" :
41d0(2): push %r15
41d2(2): push %r14
41d4(3): movsxd %edi,%r15
41d7(2): push %r13
41d9(2): push %r12
41db(3): mov %rdx,%r14
41de(1): push %rbp
41df(1): push %rbx
41e0(3): mov %rcx,%rbp
41e3(4): sub $0x28,%rsp
41e7(5): mov %rsi,0x8(%rsp)
41ec(5): call 0xffffd304(%rip)
41f1(3): mov %rax,%r13
41f4(2): mov (%rax),%eax
41f6(3): test %r15d,%r15d
41f9(7): mov 0x204e60(%rip),%rbx
4200(4): mov %eax,0x18(%rsp)
4204(6): js 0x16d(%rip)
420a(7): cmp %r15d,0x204e47(%rip)
4211(2): jnle 0x64(%rip)
4213(7): cmp $0x7fffffff,%r15d
421a(6): jz 0x15c(%rip)
4220(4): lea 0x1(%r15),%r12d
4224(7): lea 0x204e45(%rip),%rax
422b(3): movsxd %r12d,%rsi
422e(4): shl/sal $0x4,%rsi
4232(3): cmp %rax,%rbx
4235(6): jz 0x11b(%rip)
423b(3): mov %rbx,%rdi
423e(5): call 0xf72(%rip)
4243(3): mov %rax,%rbx
4246(7): mov %rax,0x204e13(%rip)
424d(7): movsxd 0x204e04(%rip),%rdi
4254(3): mov %r12d,%edx
4257(2): xor %esi,%esi
4259(2): sub %edi,%edx
425b(4): shl/sal $0x4,%rdi
425f(3): movsxd %edx,%rdx
4262(3): add %rbx,%rdi
4265(4): shl/sal $0x4,%rdx
4269(5): call 0xffffd3c7(%rip)
426e(7): mov %r12d,0x204de3(%rip)
4275(3): mov 0x4(%rbp),%eax
4278(4): shl/sal $0x4,%r15
427c(4): sub $0x8,%rsp
4280(3): add %r15,%rbx
4283(4): lea 0x8(%rbp),%r15
4287(4): mov 0x0(%rbp),%r8d
428b(3): mov (%rbx),%r11
428e(4): mov 0x8(%rbx),%r12
4292(3): mov %r14,%rcx
4295(3): or $0x1,%eax
4298(4): mov %eax,0x24(%rsp)
429c(3): push 0x30(%rbp)
429f(3): mov %eax,%r9d
42a2(3): push 0x28(%rbp)
42a5(2): push %r15
42a7(3): mov %r11,%rsi
42aa(5): mov 0x28(%rsp),%rdx
42af(3): mov %r12,%rdi
42b2(5): mov %r11,0x30(%rsp)
42b7(5): call 0xffffecd9(%rip)
42bc(4): add $0x20,%rsp
42c0(5): mov 0x10(%rsp),%r11
42c5(3): cmp %rax,%r11
42c8(2): jnbe 0x69(%rip)
42ca(4): lea 0x1(%rax),%rsi
42ce(7): lea 0x204e2b(%rip),%rax
42d5(3): cmp %rax,%r12
42d8(3): mov %rsi,(%rbx)
42db(2): jz 0x14(%rip)
42dd(3): mov %r12,%rdi
42e0(5): mov %rsi,0x10(%rsp)
42e5(5): call 0xffffd1eb(%rip)
42ea(5): mov 0x10(%rsp),%rsi
42ef(3): mov %rsi,%rdi
42f2(5): mov %rsi,0x10(%rsp)
42f7(5): call 0xe59(%rip)
42fc(4): sub $0x8,%rsp
4300(4): mov %rax,0x8(%rbx)
4304(4): mov 0x0(%rbp),%r8d
4308(3): push 0x30(%rbp)
430b(3): push 0x28(%rbp)
430e(3): mov %r14,%rcx
4311(2): push %r15
4313(5): mov 0x3c(%rsp),%r9d
4318(3): mov %rax,%rdi
431b(5): mov 0x28(%rsp),%rdx
4320(5): mov 0x30(%rsp),%rsi
4325(3): mov %rax,%r12
4328(5): call 0xffffec68(%rip)
432d(4): add $0x20,%rsp
4331(4): mov 0x18(%rsp),%eax
4335(4): mov %eax,0x0(%r13)
4339(4): add $0x28,%rsp
433d(3): mov %r12,%rax
4340(1): pop %rbx
4341(1): pop %rbp
4342(2): pop %r12
4344(2): pop %r13
4346(2): pop %r14
4348(2): pop %r15
434a(1): ret near (%rsp)
434b(5): nop 0x0(%rax,%rax,1)
4350(2): xor %edi,%edi
4352(5): call 0xe5e(%rip)
4357(8): movdqa 0x204d11(%rip),%xmm0
435f(3): mov %rax,%rbx
4362(7): mov %rax,0x204cf7(%rip)
4369(3): movups %xmm0,(%rax)
436c(5): jmp 0xfffffee1(%rip)
4371(5): call 0xffffd16f(%rip)
4376(5): call 0x102a(%rip)

"clone_quoting_options" :
4380(2): push %r12
4382(1): push %rbp
4383(1): push %rbx
4384(3): mov %rdi,%rbx
4387(5): call 0xffffd169(%rip)
438c(3): mov (%rax),%r12d
438f(3): mov %rax,%rbp
4392(7): lea 0x204e67(%rip),%rax
4399(3): test %rbx,%rbx
439c(5): mov $0x38,%esi
43a1(4): cmove %rax,%rbx
43a5(3): mov %rbx,%rdi
43a8(5): call 0xfa8(%rip)
43ad(4): mov %r12d,0x0(%rbp)
43b1(1): pop %rbx
43b2(1): pop %rbp
43b3(2): pop %r12
43b5(1): ret near (%rsp)

"get_quoting_style" :
43c0(7): lea 0x204e39(%rip),%rax
43c7(3): test %rdi,%rdi
43ca(4): cmove %rax,%rdi
43ce(2): mov (%rdi),%eax
43d0(1): ret near (%rsp)

"set_quoting_style" :
43e0(7): lea 0x204e19(%rip),%rax
43e7(3): test %rdi,%rdi
43ea(4): cmove %rax,%rdi
43ee(2): mov %esi,(%rdi)
43f0(1): ret near (%rsp)

"set_char_quoting" :
4400(7): lea 0x204df9(%rip),%rax
4407(3): test %rdi,%rdi
440a(2): mov %esi,%ecx
440c(4): cmove %rax,%rdi
4410(2): mov %esi,%eax
4412(3): and $0x1f,%ecx
4415(3): shr $0x5,%al
4418(3): movzx %al,%eax
441b(5): lea 0x8(%rdi,%rax,4),%rdi
4420(2): mov (%rdi),%esi
4422(2): mov %esi,%eax
4424(2): shr %cl,%eax
4426(2): xor %eax,%edx
4428(3): and $0x1,%eax
442b(3): and $0x1,%edx
442e(2): shl/sal %cl,%edx
4430(2): xor %esi,%edx
4432(2): mov %edx,(%rdi)
4434(1): ret near (%rsp)

"set_quoting_flags" :
4440(7): lea 0x204db9(%rip),%rax
4447(3): test %rdi,%rdi
444a(4): cmove %rax,%rdi
444e(3): mov 0x4(%rdi),%eax
4451(3): mov %esi,0x4(%rdi)
4454(1): ret near (%rsp)

"set_custom_quoting" :
4460(7): lea 0x204d99(%rip),%rax
4467(3): test %rdi,%rdi
446a(4): cmove %rax,%rdi
446e(3): test %rsi,%rsi
4471(6): mov $0xa,(%rdi)
4477(2): jz 0x10(%rip)
4479(3): test %rdx,%rdx
447c(2): jz 0xb(%rip)
447e(4): mov %rsi,0x28(%rdi)
4482(4): mov %rdx,0x30(%rdi)
4486(1): ret near (%rsp)
4487(4): sub $0x8,%rsp
448b(5): call 0xffffd055(%rip)

"quotearg_buffer" :
4490(2): push %r15
4492(2): push %r14
4494(7): lea 0x204d65(%rip),%rax
449b(2): push %r13
449d(2): push %r12
449f(3): mov %rdi,%r13
44a2(1): push %rbp
44a3(1): push %rbx
44a4(3): mov %r8,%rbx
44a7(3): mov %rsi,%r14
44aa(3): mov %rdx,%r15
44ad(4): sub $0x18,%rsp
44b1(3): test %r8,%r8
44b4(4): cmove %rax,%rbx
44b8(5): mov %rcx,0x8(%rsp)
44bd(5): call 0xffffd033(%rip)
44c2(3): mov (%rax),%r12d
44c5(3): mov %rax,%rbp
44c8(4): lea 0x8(%rbx),%rax
44cc(4): sub $0x8,%rsp
44d0(4): mov 0x4(%rbx),%r9d
44d4(3): push 0x30(%rbx)
44d7(3): mov (%rbx),%r8d
44da(3): push 0x28(%rbx)
44dd(3): mov %r15,%rdx
44e0(1): push %rax
44e1(5): mov 0x28(%rsp),%rcx
44e6(3): mov %r14,%rsi
44e9(3): mov %r13,%rdi
44ec(5): call 0xffffeaa4(%rip)
44f1(4): mov %r12d,0x0(%rbp)
44f5(4): add $0x38,%rsp
44f9(1): pop %rbx
44fa(1): pop %rbp
44fb(2): pop %r12
44fd(2): pop %r13
44ff(2): pop %r14
4501(2): pop %r15
4503(1): ret near (%rsp)

"quotearg_alloc_mem" :
4510(2): push %r15
4512(2): push %r14
4514(7): lea 0x204ce5(%rip),%rax
451b(2): push %r13
451d(2): push %r12
451f(3): mov %rdx,%r12
4522(1): push %rbp
4523(1): push %rbx
4524(3): mov %rcx,%rbx
4527(3): mov %rdi,%r14
452a(3): mov %rsi,%r15
452d(4): sub $0x38,%rsp
4531(3): test %rcx,%rcx
4534(4): cmove %rax,%rbx
4538(2): xor %ebp,%ebp
453a(5): call 0xffffcfb6(%rip)
453f(3): test %r12,%r12
4542(3): mov %rax,%r13
4545(2): mov (%rax),%eax
4547(4): setz %bpl
454b(3): or 0x4(%rbx),%ebp
454e(4): lea 0x8(%rbx),%r10
4552(4): sub $0x8,%rsp
4556(3): mov (%rbx),%r8d
4559(3): mov %r15,%rcx
455c(4): mov %eax,0x14(%rsp)
4560(3): push 0x30(%rbx)
4563(3): mov %r14,%rdx
4566(3): push 0x28(%rbx)
4569(2): push %r10
456b(2): xor %esi,%esi
456d(3): mov %ebp,%r9d
4570(2): xor %edi,%edi
4572(5): mov %r10,0x40(%rsp)
4577(5): call 0xffffea19(%rip)
457c(4): lea 0x1(%rax),%rsi
4580(5): mov %rax,0x48(%rsp)
4585(4): add $0x20,%rsp
4589(3): mov %rsi,%rdi
458c(5): mov %rsi,0x18(%rsp)
4591(5): call 0xbbf(%rip)
4596(5): mov %rax,0x10(%rsp)
459b(4): sub $0x8,%rsp
459f(3): push 0x30(%rbx)
45a2(3): push 0x28(%rbx)
45a5(5): mov 0x38(%rsp),%r10
45aa(3): mov %ebp,%r9d
45ad(3): mov (%rbx),%r8d
45b0(3): mov %r15,%rcx
45b3(3): mov %r14,%rdx
45b6(3): mov %rax,%rdi
45b9(2): push %r10
45bb(5): mov 0x38(%rsp),%rsi
45c0(5): call 0xffffe9d0(%rip)
45c5(4): mov 0x2c(%rsp),%eax
45c9(4): add $0x20,%rsp
45cd(3): test %r12,%r12
45d0(4): mov %eax,0x0(%r13)
45d4(2): jz 0xb(%rip)
45d6(5): mov 0x28(%rsp),%r11
45db(4): mov %r11,(%r12)
45df(5): mov 0x10(%rsp),%rax
45e4(4): add $0x38,%rsp
45e8(1): pop %rbx
45e9(1): pop %rbp
45ea(2): pop %r12
45ec(2): pop %r13
45ee(2): pop %r14
45f0(2): pop %r15
45f2(1): ret near (%rsp)

"quotearg_alloc" :
4600(3): mov %rdx,%rcx
4603(2): xor %edx,%edx
4605(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4610(6): mov 0x204a42(%rip),%eax
4616(2): push %r12
4618(7): mov 0x204a41(%rip),%r12
461f(1): push %rbp
4620(1): push %rbx
4621(3): cmp $0x1,%eax
4624(2): jle 0x2d(%rip)
4626(3): sub $0x2,%eax
4629(5): lea 0x18(%r12),%rbx
462e(4): shl/sal $0x4,%rax
4632(5): lea 0x28(%r12,%rax,1),%rbp
4637(9): nop 0x0(%rax,%rax,1)
4640(3): mov (%rbx),%rdi
4643(4): add $0x10,%rbx
4647(5): call 0xffffce89(%rip)
464c(3): cmp %rbp,%rbx
464f(2): jnz 0xfffffff1(%rip)
4651(5): mov 0x8(%r12),%rdi
4656(7): lea 0x204aa3(%rip),%rbx
465d(3): cmp %rbx,%rdi
4660(2): jz 0x19(%rip)
4662(5): call 0xffffce6e(%rip)
4667(b): mov $0x100,0x2049fe(%rip)
4672(7): mov %rbx,0x2049ff(%rip)
4679(7): lea 0x2049f0(%rip),%rbx
4680(3): cmp %rbx,%r12
4683(2): jz 0x11(%rip)
4685(3): mov %r12,%rdi
4688(5): call 0xffffce48(%rip)
468d(7): mov %rbx,0x2049cc(%rip)
4694(1): pop %rbx
4695(a): mov $0x1,0x2049b9(%rip)
469f(1): pop %rbp
46a0(2): pop %r12
46a2(1): ret near (%rsp)

"quotearg_n" :
46b0(7): lea 0x204b49(%rip),%rcx
46b7(7): mov $0xffffffff,%rdx
46be(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
46d0(7): lea 0x204b29(%rip),%rcx
46d7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
46e0(7): lea 0x204b19(%rip),%rcx
46e7(3): mov %rdi,%rsi
46ea(7): mov $0xffffffff,%rdx
46f1(2): xor %edi,%edi
46f3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4700(7): lea 0x204af9(%rip),%rcx
4707(3): mov %rsi,%rdx
470a(3): mov %rdi,%rsi
470d(2): xor %edi,%edi
470f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4720(4): sub $0x48,%rsp
4724(3): mov %rdx,%rax
4727(9): mov $0x28,%rdx
4730(5): mov %rdx,0x38(%rsp)
4735(2): xor %edx,%edx
4737(3): cmp $0xa,%esi
473a(2): jz 0x6a(%rip)
473c(3): mov %esi,(%rsp)
473f(3): mov %rsp,%rcx
4742(7): mov $0xffffffff,%rdx
4749(3): mov %rax,%rsi
474c(9): mov $0x0,0x4(%rsp)
4755(9): mov $0x0,0xc(%rsp)
475e(9): mov $0x0,0x14(%rsp)
4767(9): mov $0x0,0x1c(%rsp)
4770(9): mov $0x0,0x24(%rsp)
4779(9): mov $0x0,0x2c(%rsp)
4782(8): mov $0x0,0x34(%rsp)
478a(5): call 0xfffffa46(%rip)
478f(5): mov 0x38(%rsp),%rcx
4794(9): xor $0x28,%rcx
479d(2): jnz 0xc(%rip)
479f(4): add $0x48,%rsp
47a3(1): ret near (%rsp)
47a4(5): call 0xffffcd3c(%rip)
47a9(5): call 0xffffcdf7(%rip)

"quotearg_n_style_mem" :
47b0(4): sub $0x48,%rsp
47b4(3): mov %rdx,%rax
47b7(3): mov %rcx,%rdx
47ba(9): mov $0x28,%rcx
47c3(5): mov %rcx,0x38(%rsp)
47c8(2): xor %ecx,%ecx
47ca(3): cmp $0xa,%esi
47cd(2): jz 0x63(%rip)
47cf(3): mov %esi,(%rsp)
47d2(3): mov %rsp,%rcx
47d5(3): mov %rax,%rsi
47d8(9): mov $0x0,0x4(%rsp)
47e1(9): mov $0x0,0xc(%rsp)
47ea(9): mov $0x0,0x14(%rsp)
47f3(9): mov $0x0,0x1c(%rsp)
47fc(9): mov $0x0,0x24(%rsp)
4805(9): mov $0x0,0x2c(%rsp)
480e(8): mov $0x0,0x34(%rsp)
4816(5): call 0xfffff9ba(%rip)
481b(5): mov 0x38(%rsp),%rdx
4820(9): xor $0x28,%rdx
4829(2): jnz 0xc(%rip)
482b(4): add $0x48,%rsp
482f(1): ret near (%rsp)
4830(5): call 0xffffccb0(%rip)
4835(5): call 0xffffcd6b(%rip)

"quotearg_style" :
4840(3): mov %rsi,%rdx
4843(2): mov %edi,%esi
4845(2): xor %edi,%edi
4847(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4850(3): mov %rdx,%rcx
4853(3): mov %rsi,%rdx
4856(2): mov %edi,%esi
4858(2): xor %edi,%edi
485a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4860(4): sub $0x48,%rsp
4864(2): mov %edx,%ecx
4866(9): mov $0x28,%rax
486f(5): mov %rax,0x38(%rsp)
4874(2): xor %eax,%eax
4876(7): mov 0x2049b3(%rip),%rax
487d(3): mov %rsp,%r8
4880(3): and $0x1f,%ecx
4883(8): movdqa 0x204975(%rip),%xmm0
488b(5): mov %rax,0x30(%rsp)
4890(2): mov %edx,%eax
4892(4): movaps %xmm0,(%rsp)
4896(3): shr $0x5,%al
4899(3): movzx %al,%eax
489c(5): lea 0x8(%r8,%rax,4),%r9
48a1(8): movdqa 0x204967(%rip),%xmm0
48a9(5): movaps %xmm0,0x10(%rsp)
48ae(8): movdqa 0x20496a(%rip),%xmm0
48b6(5): movaps %xmm0,0x20(%rsp)
48bb(3): mov (%r9),%edx
48be(2): mov %edx,%eax
48c0(2): shr %cl,%eax
48c2(2): not %eax
48c4(3): and $0x1,%eax
48c7(2): shl/sal %cl,%eax
48c9(3): mov %r8,%rcx
48cc(2): xor %edx,%eax
48ce(3): mov %rsi,%rdx
48d1(3): mov %rdi,%rsi
48d4(3): mov %eax,(%r9)
48d7(2): xor %edi,%edi
48d9(5): call 0xfffff8f7(%rip)
48de(5): mov 0x38(%rsp),%rsi
48e3(9): xor $0x28,%rsi
48ec(2): jnz 0x7(%rip)
48ee(4): add $0x48,%rsp
48f2(1): ret near (%rsp)
48f3(5): call 0xffffccad(%rip)

"quotearg_char" :
4900(4): movsx %sil,%edx
4904(7): mov $0xffffffff,%rsi
490b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4910(5): mov $0x3a,%edx
4915(7): mov $0xffffffff,%rsi
491c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4930(5): mov $0x3a,%edx
4935(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4940(4): sub $0x48,%rsp
4944(3): mov %rdx,%rax
4947(9): mov $0x28,%rdx
4950(5): mov %rdx,0x38(%rsp)
4955(2): xor %edx,%edx
4957(3): cmp $0xa,%esi
495a(2): jz 0x6a(%rip)
495c(3): mov %esi,(%rsp)
495f(3): mov %rsp,%rcx
4962(7): mov $0xffffffff,%rdx
4969(3): mov %rax,%rsi
496c(9): mov $0x0,0x4(%rsp)
4975(9): mov $0x4000000,0xc(%rsp)
497e(9): mov $0x0,0x14(%rsp)
4987(9): mov $0x0,0x1c(%rsp)
4990(9): mov $0x0,0x24(%rsp)
4999(9): mov $0x0,0x2c(%rsp)
49a2(8): mov $0x0,0x34(%rsp)
49aa(5): call 0xfffff826(%rip)
49af(5): mov 0x38(%rsp),%rcx
49b4(9): xor $0x28,%rcx
49bd(2): jnz 0xc(%rip)
49bf(4): add $0x48,%rsp
49c3(1): ret near (%rsp)
49c4(5): call 0xffffcb1c(%rip)
49c9(5): call 0xffffcbd7(%rip)

"quotearg_n_custom_mem" :
49d0(4): sub $0x48,%rsp
49d4(3): mov %rcx,%r9
49d7(7): mov 0x204852(%rip),%rcx
49de(8): movdqa 0x20481a(%rip),%xmm0
49e6(9): mov $0x28,%rax
49ef(5): mov %rax,0x38(%rsp)
49f4(2): xor %eax,%eax
49f6(4): movaps %xmm0,(%rsp)
49fa(3): test %rsi,%rsi
49fd(5): mov %rcx,0x30(%rsp)
4a02(7): mov $0xa,(%rsp)
4a09(8): movdqa 0x2047ff(%rip),%xmm0
4a11(5): movaps %xmm0,0x10(%rsp)
4a16(8): movdqa 0x204802(%rip),%xmm0
4a1e(5): movaps %xmm0,0x20(%rsp)
4a23(2): jz 0x34(%rip)
4a25(3): test %rdx,%rdx
4a28(2): jz 0x2f(%rip)
4a2a(5): mov %rsi,0x28(%rsp)
4a2f(5): mov %rdx,0x30(%rsp)
4a34(3): mov %rsp,%rcx
4a37(3): mov %r8,%rdx
4a3a(3): mov %r9,%rsi
4a3d(5): call 0xfffff793(%rip)
4a42(5): mov 0x38(%rsp),%rdi
4a47(9): xor $0x28,%rdi
4a50(2): jnz 0xc(%rip)
4a52(4): add $0x48,%rsp
4a56(1): ret near (%rsp)
4a57(5): call 0xffffca89(%rip)
4a5c(5): call 0xffffcb44(%rip)

"quotearg_n_custom" :
4a70(7): mov $0xffffffff,%r8
4a77(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4a80(3): mov %rdx,%rcx
4a83(7): mov $0xffffffff,%r8
4a8a(3): mov %rsi,%rdx
4a8d(3): mov %rdi,%rsi
4a90(2): xor %edi,%edi
4a92(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4aa0(3): mov %rcx,%r8
4aa3(3): mov %rdx,%rcx
4aa6(3): mov %rsi,%rdx
4aa9(3): mov %rdi,%rsi
4aac(2): xor %edi,%edi
4aae(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4ac0(7): lea 0x204559(%rip),%rcx
4ac7(5): jmp 0xfffff709(%rip)

"quote_mem" :
4ad0(7): lea 0x204549(%rip),%rcx
4ad7(3): mov %rsi,%rdx
4ada(3): mov %rdi,%rsi
4add(2): xor %edi,%edi
4adf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4af0(7): lea 0x204529(%rip),%rcx
4af7(7): mov $0xffffffff,%rdx
4afe(5): jmp 0xfffff6d2(%rip)

"quote" :
4b10(7): lea 0x204509(%rip),%rcx
4b17(3): mov %rdi,%rsi
4b1a(7): mov $0xffffffff,%rdx
4b21(2): xor %edi,%edi
4b23(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
4b30(2): push %r15
4b32(2): push %r14
4b34(2): push %r13
4b36(2): push %r12
4b38(3): mov %r9,%r12
4b3b(1): push %rbp
4b3c(1): push %rbx
4b3d(3): mov %rdi,%rbp
4b40(3): mov %r8,%rbx
4b43(4): sub $0x28,%rsp
4b47(3): test %rsi,%rsi
4b4a(6): jz 0x11e(%rip)
4b50(3): mov %rdx,%r8
4b53(7): lea 0x1d2e(%rip),%rdx
4b5a(3): mov %rcx,%r9
4b5d(2): xor %eax,%eax
4b5f(3): mov %rsi,%rcx
4b62(5): mov $0x1,%esi
4b67(5): call 0xffffcc49(%rip)
4b6c(7): lea 0x1d28(%rip),%rsi
4b73(2): xor %edi,%edi
4b75(5): mov $0x5,%edx
4b7a(5): call 0xffffc9f6(%rip)
4b7f(7): lea 0x203a(%rip),%rdx
4b86(3): mov %rax,%rcx
4b89(6): mov $0x7e3,%r8d
4b8f(5): mov $0x1,%esi
4b94(3): mov %rbp,%rdi
4b97(2): xor %eax,%eax
4b99(5): call 0xffffcc17(%rip)
4b9e(7): lea 0x1d83(%rip),%rsi
4ba5(2): xor %edi,%edi
4ba7(5): mov $0x5,%edx
4bac(5): call 0xffffc9c4(%rip)
4bb1(3): mov %rbp,%rsi
4bb4(3): mov %rax,%rdi
4bb7(5): call 0xffffcab9(%rip)
4bbc(4): cmp $0x9,%r12
4bc0(6): jnbe 0x340(%rip)
4bc6(7): lea 0x1fb7(%rip),%rdx
4bcd(4): movsxd 0x0(%rdx,%r12,4),%rax
4bd1(3): add %rdx,%rax
4bd4(2): jmp %rax
4bd6(a): nop 0x0(%rax,%rax,1)
4be0(4): mov 0x38(%rbx),%r9
4be4(4): mov 0x10(%rbx),%rax
4be8(7): lea 0x1ea9(%rip),%rsi
4bef(4): mov 0x8(%rbx),%r8
4bf3(5): mov $0x5,%edx
4bf8(2): xor %edi,%edi
4bfa(4): mov 0x30(%rbx),%r13
4bfe(4): mov 0x28(%rbx),%r12
4c02(5): mov %r9,0x10(%rsp)
4c07(4): mov 0x20(%rbx),%r15
4c0b(4): mov 0x18(%rbx),%r14
4c0f(4): mov %rax,(%rsp)
4c13(5): mov %r8,0x8(%rsp)
4c18(3): mov (%rbx),%rbx
4c1b(5): call 0xffffc955(%rip)
4c20(4): sub $0x8,%rsp
4c24(5): mov 0x18(%rsp),%r9
4c29(3): mov %rax,%rdx
4c2c(3): mov %rbx,%rcx
4c2f(5): mov $0x1,%esi
4c34(3): mov %rbp,%rdi
4c37(2): xor %eax,%eax
4c39(2): push %r9
4c3b(2): push %r13
4c3d(2): push %r12
4c3f(2): push %r15
4c41(2): push %r14
4c43(5): mov 0x30(%rsp),%r9
4c48(5): mov 0x38(%rsp),%r8
4c4d(5): call 0xffffcb63(%rip)
4c52(4): add $0x30,%rsp
4c56(4): add $0x28,%rsp
4c5a(1): pop %rbx
4c5b(1): pop %rbp
4c5c(2): pop %r12
4c5e(2): pop %r13
4c60(2): pop %r14
4c62(2): pop %r15
4c64(1): ret near (%rsp)
4c65(3): nop (%rax)
4c68(3): mov %rcx,%r8
4c6b(3): mov %rdx,%rcx
4c6e(7): lea 0x1c1f(%rip),%rdx
4c75(5): mov $0x1,%esi
4c7a(2): xor %eax,%eax
4c7c(5): call 0xffffcb34(%rip)
4c81(5): jmp 0xfffffeeb(%rip)
4c86(a): nop 0x0(%rax,%rax,1)
4c90(4): mov 0x40(%rbx),%r10
4c94(4): mov 0x38(%rbx),%r9
4c98(7): lea 0x1e29(%rip),%rsi
4c9f(4): mov 0x10(%rbx),%rax
4ca3(4): mov 0x8(%rbx),%r8
4ca7(5): mov $0x5,%edx
4cac(4): mov 0x30(%rbx),%r13
4cb0(4): mov 0x28(%rbx),%r12
4cb4(4): mov 0x20(%rbx),%r15
4cb8(4): mov 0x18(%rbx),%r14
4cbc(3): mov (%rbx),%rbx
4cbf(5): mov %r10,0x18(%rsp)
4cc4(5): mov %r9,0x10(%rsp)
4cc9(4): mov %rax,(%rsp)
4ccd(5): mov %r8,0x8(%rsp)
4cd2(2): xor %edi,%edi
4cd4(5): call 0xffffc89c(%rip)
4cd9(5): mov 0x18(%rsp),%r10
4cde(2): push %r10
4ce0(5): jmp 0xffffff44(%rip)
4ce5(3): nop (%rax)
4ce8(3): mov (%rbx),%rbx
4ceb(7): lea 0x1bad(%rip),%rsi
4cf2(5): mov $0x5,%edx
4cf7(2): xor %edi,%edi
4cf9(5): call 0xffffc877(%rip)
4cfe(4): add $0x28,%rsp
4d02(3): mov %rbx,%rcx
4d05(3): mov %rbp,%rdi
4d08(1): pop %rbx
4d09(1): pop %rbp
4d0a(2): pop %r12
4d0c(2): pop %r13
4d0e(2): pop %r14
4d10(2): pop %r15
4d12(3): mov %rax,%rdx
4d15(5): mov $0x1,%esi
4d1a(2): xor %eax,%eax
4d1c(5): jmp 0xffffca94(%rip)
4d21(7): nop 0x0(%rax)
4d28(4): mov 0x8(%rbx),%r12
4d2c(7): lea 0x1b7c(%rip),%rsi
4d33(3): mov (%rbx),%rbx
4d36(5): mov $0x5,%edx
4d3b(2): xor %edi,%edi
4d3d(5): call 0xffffc833(%rip)
4d42(4): add $0x28,%rsp
4d46(3): mov %r12,%r8
4d49(3): mov %rbx,%rcx
4d4c(3): mov %rbp,%rdi
4d4f(3): mov %rax,%rdx
4d52(5): mov $0x1,%esi
4d57(1): pop %rbx
4d58(1): pop %rbp
4d59(2): pop %r12
4d5b(2): pop %r13
4d5d(2): pop %r14
4d5f(2): pop %r15
4d61(2): xor %eax,%eax
4d63(5): jmp 0xffffca4d(%rip)
4d68(8): nop 0x0(%rax,%rax,1)
4d70(4): mov 0x10(%rbx),%r13
4d74(4): mov 0x8(%rbx),%r12
4d78(7): lea 0x1b47(%rip),%rsi
4d7f(3): mov (%rbx),%rbx
4d82(5): mov $0x5,%edx
4d87(2): xor %edi,%edi
4d89(5): call 0xffffc7e7(%rip)
4d8e(4): add $0x28,%rsp
4d92(3): mov %r13,%r9
4d95(3): mov %r12,%r8
4d98(3): mov %rbx,%rcx
4d9b(3): mov %rbp,%rdi
4d9e(3): mov %rax,%rdx
4da1(1): pop %rbx
4da2(1): pop %rbp
4da3(2): pop %r12
4da5(2): pop %r13
4da7(2): pop %r14
4da9(2): pop %r15
4dab(5): mov $0x1,%esi
4db0(2): xor %eax,%eax
4db2(5): jmp 0xffffc9fe(%rip)
4db7(9): nop 0x0(%rax,%rax,1)
4dc0(7): lea 0x1c31(%rip),%rsi
4dc7(5): mov $0x5,%edx
4dcc(2): xor %edi,%edi
4dce(4): mov 0x18(%rbx),%r14
4dd2(4): mov 0x10(%rbx),%r13
4dd6(4): mov 0x8(%rbx),%r12
4dda(3): mov (%rbx),%rbx
4ddd(5): call 0xffffc793(%rip)
4de2(4): sub $0x8,%rsp
4de6(2): push %r14
4de8(3): mov %rax,%rdx
4deb(3): mov %r13,%r9
4dee(3): mov %r12,%r8
4df1(3): mov %rbx,%rcx
4df4(3): mov %rbp,%rdi
4df7(5): mov $0x1,%esi
4dfc(2): xor %eax,%eax
4dfe(5): call 0xffffc9b2(%rip)
4e03(1): pop %rax
4e04(1): pop %rdx
4e05(4): add $0x28,%rsp
4e09(1): pop %rbx
4e0a(1): pop %rbp
4e0b(2): pop %r12
4e0d(2): pop %r13
4e0f(2): pop %r14
4e11(2): pop %r15
4e13(1): ret near (%rsp)
4e14(4): nop 0x0(%rax)
4e18(4): mov 0x20(%rbx),%r15
4e1c(7): lea 0x1bf5(%rip),%rsi
4e23(5): mov $0x5,%edx
4e28(2): xor %edi,%edi
4e2a(4): mov 0x18(%rbx),%r14
4e2e(4): mov 0x10(%rbx),%r13
4e32(4): mov 0x8(%rbx),%r12
4e36(3): mov (%rbx),%rbx
4e39(5): call 0xffffc737(%rip)
4e3e(2): push %r15
4e40(2): jmp 0xffffffa6(%rip)
4e42(6): nop 0x0(%rax,%rax,1)
4e48(4): mov 0x8(%rbx),%r8
4e4c(4): mov 0x28(%rbx),%r12
4e50(7): lea 0x1be9(%rip),%rsi
4e57(4): mov 0x20(%rbx),%r15
4e5b(4): mov 0x18(%rbx),%r14
4e5f(5): mov $0x5,%edx
4e64(4): mov 0x10(%rbx),%r13
4e68(2): xor %edi,%edi
4e6a(3): mov (%rbx),%rbx
4e6d(4): mov %r8,(%rsp)
4e71(5): call 0xffffc6ff(%rip)
4e76(4): sub $0x8,%rsp
4e7a(3): mov %r13,%r9
4e7d(2): push %r12
4e7f(2): push %r15
4e81(2): push %r14
4e83(5): mov 0x20(%rsp),%r8
4e88(3): mov %rbx,%rcx
4e8b(3): mov %rax,%rdx
4e8e(3): mov %rbp,%rdi
4e91(5): mov $0x1,%esi
4e96(2): xor %eax,%eax
4e98(5): call 0xffffc918(%rip)
4e9d(4): add $0x20,%rsp
4ea1(4): add $0x28,%rsp
4ea5(1): pop %rbx
4ea6(1): pop %rbp
4ea7(2): pop %r12
4ea9(2): pop %r13
4eab(2): pop %r14
4ead(2): pop %r15
4eaf(1): ret near (%rsp)
4eb0(4): mov 0x10(%rbx),%r9
4eb4(4): mov 0x30(%rbx),%r13
4eb8(7): lea 0x1ba9(%rip),%rsi
4ebf(4): mov 0x28(%rbx),%r12
4ec3(4): mov 0x20(%rbx),%r15
4ec7(5): mov $0x5,%edx
4ecc(4): mov 0x18(%rbx),%r14
4ed0(4): mov 0x8(%rbx),%r8
4ed4(2): xor %edi,%edi
4ed6(5): mov %r9,0x8(%rsp)
4edb(3): mov (%rbx),%rbx
4ede(4): mov %r8,(%rsp)
4ee2(5): call 0xffffc68e(%rip)
4ee7(2): push %r13
4ee9(2): push %r12
4eeb(2): push %r15
4eed(2): push %r14
4eef(5): mov 0x28(%rsp),%r9
4ef4(2): jmp 0xffffff8f(%rip)
4ef6(a): nop 0x0(%rax,%rax,1)
4f00(4): mov 0x40(%rbx),%r10
4f04(4): mov 0x38(%rbx),%r9
4f08(5): mov $0x5,%edx
4f0d(4): mov 0x10(%rbx),%rax
4f11(4): mov 0x8(%rbx),%r8
4f15(7): lea 0x1be4(%rip),%rsi
4f1c(4): mov 0x30(%rbx),%r13
4f20(4): mov 0x28(%rbx),%r12
4f24(4): mov 0x20(%rbx),%r15
4f28(4): mov 0x18(%rbx),%r14
4f2c(5): mov %r10,0x18(%rsp)
4f31(5): mov %r9,0x10(%rsp)
4f36(4): mov %rax,(%rsp)
4f3a(5): mov %r8,0x8(%rsp)
4f3f(3): mov (%rbx),%rbx
4f42(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4f50(3): xor %r9d,%r9d
4f53(4): cmp $0x0,(%r8)
4f57(2): jz 0x14(%rip)
4f59(7): nop 0x0(%rax)
4f60(4): add $0x1,%r9
4f64(5): cmp $0x0,0x0(%r8,%r9,8)
4f69(2): jnz 0xfffffff7(%rip)
4f6b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4f70(4): sub $0x68,%rsp
4f74(3): mov %r8,%r10
4f77(3): xor %r9d,%r9d
4f7a(9): mov $0x28,%rax
4f83(5): mov %rax,0x58(%rsp)
4f88(2): xor %eax,%eax
4f8a(3): mov %rsp,%r8
4f8d(3): nop (%rax)
4f90(3): mov (%r10),%eax
4f93(3): cmp $0x2f,%eax
4f96(2): jnbe 0x44(%rip)
4f98(3): mov %eax,%r11d
4f9b(4): add 0x10(%r10),%r11
4f9f(3): add $0x8,%eax
4fa2(3): mov %eax,(%r10)
4fa5(3): mov (%r11),%rax
4fa8(3): test %rax,%rax
4fab(4): mov %rax,0x0(%r8,%r9,8)
4faf(2): jz 0xc(%rip)
4fb1(4): add $0x1,%r9
4fb5(4): cmp $0xa,%r9
4fb9(2): jnz 0xffffffd7(%rip)
4fbb(5): call 0xfffffb75(%rip)
4fc0(5): mov 0x58(%rsp),%rax
4fc5(9): xor $0x28,%rax
4fce(2): jnz 0x7(%rip)
4fd0(4): add $0x68,%rsp
4fd4(1): ret near (%rsp)
4fd5(5): call 0xffffc5cb(%rip)
4fda(4): mov 0x8(%r10),%r11
4fde(4): lea 0x8(%r11),%rax
4fe2(4): mov %rax,0x8(%r10)
4fe6(2): jmp 0xffffffbf(%rip)

"version_etc" :
4ff0(1): push %rbp
4ff1(1): push %rbx
4ff2(6): mov $0x20,%r10d
4ff8(3): xor %r11d,%r11d
4ffb(7): sub $0xb8,%rsp
5002(9): mov $0x28,%rax
500b(5): mov %rax,0x78(%rsp)
5010(2): xor %eax,%eax
5012(8): lea 0xd0(%rsp),%rax
501a(8): mov %r8,0xa0(%rsp)
5022(8): lea 0xd0(%rsp),%rbx
502a(5): lea 0x20(%rsp),%r8
502f(8): mov %r9,0xa8(%rsp)
5037(8): mov $0x20,0x8(%rsp)
503f(5): mov %rax,0x10(%rsp)
5044(8): lea 0x80(%rsp),%rax
504c(3): xor %r9d,%r9d
504f(5): mov %rax,0x18(%rsp)
5054(3): mov %rax,%rbp
5057(9): nop 0x0(%rax,%rax,1)
5060(4): cmp $0x2f,%r10d
5064(2): jnbe 0x58(%rip)
5066(3): mov %r10d,%eax
5069(6): mov $0x1,%r11d
506f(4): add $0x8,%r10d
5073(3): add %rbp,%rax
5076(3): mov (%rax),%rax
5079(3): test %rax,%rax
507c(4): mov %rax,0x0(%r8,%r9,8)
5080(2): jz 0xc(%rip)
5082(4): add $0x1,%r9
5086(4): cmp $0xa,%r9
508a(2): jnz 0xffffffd6(%rip)
508c(3): test %r11b,%r11b
508f(2): jnz 0x26(%rip)
5091(5): call 0xfffffa9f(%rip)
5096(5): mov 0x78(%rsp),%rax
509b(9): xor $0x28,%rax
50a4(2): jnz 0xc(%rip)
50a6(7): add $0xb8,%rsp
50ad(1): pop %rbx
50ae(1): pop %rbp
50af(1): ret near (%rsp)
50b0(5): call 0xffffc4f0(%rip)
50b5(5): mov %r10d,0x8(%rsp)
50ba(2): jmp 0xffffffd7(%rip)
50bc(3): mov %rbx,%rax
50bf(4): add $0x8,%rbx
50c3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
50d0(1): push %rbx
50d1(7): lea 0x180a(%rip),%rsi
50d8(5): mov $0x5,%edx
50dd(2): xor %edi,%edi
50df(5): call 0xffffc491(%rip)
50e4(7): lea 0x180c(%rip),%rdx
50eb(3): mov %rax,%rsi
50ee(5): mov $0x1,%edi
50f3(2): xor %eax,%eax
50f5(5): call 0xffffc63b(%rip)
50fa(7): lea 0x180c(%rip),%rsi
5101(5): mov $0x5,%edx
5106(2): xor %edi,%edi
5108(5): call 0xffffc468(%rip)
510d(7): lea 0x107c(%rip),%rcx
5114(7): lea 0xc24(%rip),%rdx
511b(3): mov %rax,%rsi
511e(5): mov $0x1,%edi
5123(2): xor %eax,%eax
5125(5): call 0xffffc60b(%rip)
512a(7): mov 0x203f57(%rip),%rbx
5131(7): lea 0x1a08(%rip),%rsi
5138(2): xor %edi,%edi
513a(5): mov $0x5,%edx
513f(5): call 0xffffc431(%rip)
5144(3): mov %rbx,%rsi
5147(3): mov %rax,%rdi
514a(1): pop %rbx
514b(5): jmp 0xffffc525(%rip)

"xmalloc" :
5150(1): push %rbx
5151(3): mov %rdi,%rbx
5154(5): call 0xffffc56c(%rip)
5159(3): test %rax,%rax
515c(2): jnz 0x7(%rip)
515e(3): test %rbx,%rbx
5161(2): jnz 0x4(%rip)
5163(1): pop %rbx
5164(1): ret near (%rsp)
5165(5): call 0x23b(%rip)

"xnmalloc" :
5170(3): mov %rdi,%rax
5173(3): mul %rax,%rsi,%rdx
5176(3): mov %rax,%rdi
5179(3): seto %al
517c(3): test %rdi,%rdi
517f(2): js 0xc(%rip)
5181(3): movzx %al,%eax
5184(3): test %rax,%rax
5187(2): jnz 0x4(%rip)
5189(2): jmp 0xffffffc7(%rip)
518b(4): sub $0x8,%rsp
518f(5): call 0x211(%rip)

"xrealloc" :
51b0(3): test %rsi,%rsi
51b3(1): push %rbx
51b4(3): mov %rsi,%rbx
51b7(2): jnz 0x7(%rip)
51b9(3): test %rdi,%rdi
51bc(2): jnz 0x1c(%rip)
51be(3): mov %rbx,%rsi
51c1(5): call 0xffffc54f(%rip)
51c6(3): test %rax,%rax
51c9(2): jnz 0x7(%rip)
51cb(3): test %rbx,%rbx
51ce(2): jnz 0x13(%rip)
51d0(1): pop %rbx
51d1(1): ret near (%rsp)
51d2(6): nop 0x0(%rax,%rax,1)
51d8(5): call 0xffffc2f8(%rip)
51dd(2): xor %eax,%eax
51df(1): pop %rbx
51e0(1): ret near (%rsp)
51e1(5): call 0x1bf(%rip)

"xnrealloc" :
51f0(3): mov %rsi,%rax
51f3(3): mul %rax,%rdx,%rdx
51f6(3): mov %rax,%rsi
51f9(3): seto %al
51fc(3): test %rsi,%rsi
51ff(2): js 0xc(%rip)
5201(3): movzx %al,%eax
5204(3): test %rax,%rax
5207(2): jnz 0x4(%rip)
5209(2): jmp 0xffffffa7(%rip)
520b(4): sub $0x8,%rsp
520f(5): call 0x191(%rip)

"x2nrealloc" :
5220(3): test %rdi,%rdi
5223(3): mov %rdx,%r9
5226(3): mov (%rsi),%rcx
5229(2): jz 0x37(%rip)
522b(2): xor %edx,%edx
522d(a): mov $0x6148914691236517204,%rax
5237(3): div %r9,%rax
523a(3): cmp %rcx,%rax
523d(2): jbe 0x3e(%rip)
523f(3): mov %rcx,%rax
5242(3): shr $0x1,%rax
5245(5): lea 0x1(%rax,%rcx,1),%rcx
524a(3): mov %rcx,(%rsi)
524d(4): imul %r9,%rcx
5251(3): mov %rcx,%rsi
5254(5): jmp 0xffffff5c(%rip)
5259(7): nop 0x0(%rax)
5260(3): test %rcx,%rcx
5263(2): jz 0x25(%rip)
5265(3): mov %rcx,%rax
5268(3): mul %rax,%r9,%rdx
526b(3): seto %dl
526e(3): test %rax,%rax
5271(3): movzx %dl,%edx
5274(2): js 0x7(%rip)
5276(3): test %rdx,%rdx
5279(2): jz 0xffffffd1(%rip)
527b(4): sub $0x8,%rsp
527f(5): call 0x121(%rip)
5284(4): nop 0x0(%rax)
5288(2): xor %edx,%edx
528a(5): mov $0x80,%eax
528f(3): xor %r8d,%r8d
5292(3): div %r9,%rax
5295(3): test %rax,%rax
5298(4): setz %r8b
529c(4): lea 0x0(%r8,%rax,1),%rcx
52a0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
52b0(3): test %rdi,%rdi
52b3(3): mov (%rsi),%rax
52b6(2): jz 0x2a(%rip)
52b8(a): mov $0x6148914691236517203,%rdx
52c2(3): cmp %rdx,%rax
52c5(2): jnbe 0x2c(%rip)
52c7(3): mov %rax,%rdx
52ca(3): shr $0x1,%rdx
52cd(5): lea 0x1(%rdx,%rax,1),%rax
52d2(3): mov %rax,(%rsi)
52d5(3): mov %rax,%rsi
52d8(5): jmp 0xfffffed8(%rip)
52dd(3): nop (%rax)
52e0(3): test %rax,%rax
52e3(5): mov $0x80,%edx
52e8(4): cmove %rdx,%rax
52ec(3): test %rax,%rax
52ef(2): jns 0xffffffe3(%rip)
52f1(4): sub $0x8,%rsp
52f5(5): call 0xab(%rip)

"xzalloc" :
5300(1): push %rbx
5301(3): mov %rdi,%rbx
5304(5): call 0xfffffe4c(%rip)
5309(3): mov %rbx,%rdx
530c(2): xor %esi,%esi
530e(3): mov %rax,%rdi
5311(1): pop %rbx
5312(5): jmp 0xffffc31e(%rip)

"xcalloc" :
5320(3): mov %rdi,%rax
5323(4): sub $0x8,%rsp
5327(3): mul %rax,%rsi,%rdx
532a(3): seto %dl
532d(3): test %rax,%rax
5330(2): js 0x19(%rip)
5332(3): movzx %dl,%edx
5335(3): test %rdx,%rdx
5338(2): jnz 0x11(%rip)
533a(5): call 0xffffc346(%rip)
533f(3): test %rax,%rax
5342(2): jz 0x7(%rip)
5344(4): add $0x8,%rsp
5348(1): ret near (%rsp)
5349(5): call 0x57(%rip)

"xmemdup" :
5350(1): push %rbp
5351(1): push %rbx
5352(3): mov %rdi,%rbp
5355(3): mov %rsi,%rdi
5358(3): mov %rsi,%rbx
535b(4): sub $0x8,%rsp
535f(5): call 0xfffffdf1(%rip)
5364(4): add $0x8,%rsp
5368(3): mov %rbx,%rdx
536b(3): mov %rbp,%rsi
536e(1): pop %rbx
536f(1): pop %rbp
5370(3): mov %rax,%rdi
5373(5): jmp 0xffffc32d(%rip)

"xstrdup" :
5380(1): push %rbx
5381(3): mov %rdi,%rbx
5384(5): call 0xffffc20c(%rip)
5389(3): mov %rbx,%rdi
538c(4): lea 0x1(%rax),%rsi
5390(1): pop %rbx
5391(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
53a0(7): lea 0x1848(%rip),%rsi
53a7(4): sub $0x8,%rsp
53ab(5): mov $0x5,%edx
53b0(2): xor %edi,%edi
53b2(5): call 0xffffc1be(%rip)
53b7(6): mov 0x203c5b(%rip),%edi
53bd(7): lea 0xfa0(%rip),%rdx
53c4(3): mov %rax,%rcx
53c7(2): xor %esi,%esi
53c9(2): xor %eax,%eax
53cb(5): call 0xffffc385(%rip)
53d0(5): call 0xffffc110(%rip)

"xnumtoumax" :
53e0(2): push %r15
53e2(2): push %r14
53e4(3): mov %rcx,%r15
53e7(2): push %r13
53e9(2): push %r12
53eb(3): mov %rdx,%r14
53ee(1): push %rbp
53ef(1): push %rbx
53f0(2): mov %esi,%edx
53f2(2): xor %esi,%esi
53f4(3): mov %rdi,%r12
53f7(3): mov %r9,%r13
53fa(4): sub $0x18,%rsp
53fe(3): mov %rsp,%rcx
5401(4): mov 0x50(%rsp),%ebx
5405(9): mov $0x28,%rax
540e(5): mov %rax,0x8(%rsp)
5413(2): xor %eax,%eax
5415(5): call 0xfb(%rip)
541a(2): test %eax,%eax
541c(6): jnz 0x94(%rip)
5422(4): mov (%rsp),%rbp
5426(3): cmp %r14,%rbp
5429(2): jb 0x7(%rip)
542b(3): cmp %r15,%rbp
542e(2): jbe 0x56(%rip)
5430(5): call 0xffffc0c0(%rip)
5435(7): cmp $0x40000000,%rbp
543c(3): mov %rax,%r14
543f(2): sbb %eax,%eax
5441(3): and $0xd7,%eax
5444(3): add $0x4b,%eax
5447(3): mov %eax,(%r14)
544a(3): mov %r12,%rdi
544d(5): call 0xfffff6c3(%rip)
5452(3): mov (%r14),%esi
5455(3): mov %rax,%r8
5458(5): mov $0x0,%eax
545d(7): lea 0xefc(%rip),%rdx
5464(3): mov %r13,%rcx
5467(3): cmp $0x16,%esi
546a(3): cmove %eax,%esi
546d(2): test %ebx,%ebx
546f(5): mov $0x1,%eax
5474(3): cmove %eax,%ebx
5477(2): xor %eax,%eax
5479(2): mov %ebx,%edi
547b(5): call 0xffffc2d5(%rip)
5480(4): mov (%rsp),%rbp
5484(5): mov 0x8(%rsp),%rdx
5489(9): xor $0x28,%rdx
5492(3): mov %rbp,%rax
5495(2): jnz 0x46(%rip)
5497(4): add $0x18,%rsp
549b(1): pop %rbx
549c(1): pop %rbp
549d(2): pop %r12
549f(2): pop %r13
54a1(2): pop %r14
54a3(2): pop %r15
54a5(1): ret near (%rsp)
54a6(a): nop 0x0(%rax,%rax,1)
54b0(2): mov %eax,%ebp
54b2(5): call 0xffffc03e(%rip)
54b7(3): cmp $0x1,%ebp
54ba(3): mov %rax,%r14
54bd(2): jz 0x13(%rip)
54bf(3): cmp $0x3,%ebp
54c2(2): jnz 0xffffff88(%rip)
54c4(6): mov $0x0,(%rax)
54ca(5): jmp 0xffffff80(%rip)
54cf(1): nop 
54d0(6): mov $0x4b,(%rax)
54d6(5): jmp 0xffffff74(%rip)
54db(5): call 0xffffc0c5(%rip)

"xdectoumax" :
54e0(4): sub $0x10,%rsp
54e4(2): push %r9
54e6(3): mov %r8,%r9
54e9(3): mov %rcx,%r8
54ec(3): mov %rdx,%rcx
54ef(3): mov %rsi,%rdx
54f2(5): mov $0xa,%esi
54f7(5): call 0xfffffee9(%rip)
54fc(4): add $0x18,%rsp
5500(1): ret near (%rsp)

"xstrtoumax" :
5510(2): push %r15
5512(2): push %r14
5514(2): push %r13
5516(2): push %r12
5518(1): push %rbp
5519(1): push %rbx
551a(4): sub $0x28,%rsp
551e(9): mov $0x28,%rax
5527(5): mov %rax,0x18(%rsp)
552c(2): xor %eax,%eax
552e(3): cmp $0x24,%edx
5531(6): jnbe 0x364(%rip)
5537(5): lea 0x10(%rsp),%rax
553c(3): mov %rsi,%r15
553f(3): test %rsi,%rsi
5542(3): mov %rdi,%rbp
5545(4): mov %edx,0x8(%rsp)
5549(3): mov %rcx,%r14
554c(3): mov %r8,%r13
554f(4): cmove %rax,%r15
5553(5): call 0xffffbf9d(%rip)
5558(6): mov $0x0,(%rax)
555e(3): mov %rax,%r12
5561(4): movzx 0x0(%rbp),%ebx
5565(5): call 0xffffc27b(%rip)
556a(4): mov 0x8(%rsp),%edx
556e(3): mov (%rax),%rsi
5571(3): mov %rbp,%rax
5574(2): jmp 0x13(%rip)
5576(a): nop 0x0(%rax,%rax,1)
5580(4): add $0x1,%rax
5584(3): movzx (%rax),%ebx
5587(3): movzx %bl,%ecx
558a(5): test $0x20,0x1(%rsi,%rcx,2)
558f(2): jnz 0xfffffff1(%rip)
5591(3): cmp $0x2d,%bl
5594(2): jz 0x54(%rip)
5596(2): xor %ecx,%ecx
5598(3): mov %r15,%rsi
559b(3): mov %rbp,%rdi
559e(5): call 0xffffc082(%rip)
55a3(3): mov (%r15),%rcx
55a6(3): mov %rax,%rbx
55a9(3): cmp %rbp,%rcx
55ac(2): jz 0x2c(%rip)
55ae(4): mov (%r12),%eax
55b2(2): test %eax,%eax
55b4(2): jz 0x64(%rip)
55b6(3): cmp $0x22,%eax
55b9(5): mov $0x1,%ebp
55be(2): jnz 0x2a(%rip)
55c0(3): test %r13,%r13
55c3(2): jz 0xb(%rip)
55c5(4): movzx (%rcx),%r12d
55c9(3): test %r12b,%r12b
55cc(2): jnz 0x7b(%rip)
55ce(3): mov %rbx,(%r14)
55d1(2): jmp 0x1c(%rip)
55d3(5): nop 0x0(%rax,%rax,1)
55d8(3): test %r13,%r13
55db(5): mov %rcx,0x8(%rsp)
55e0(2): jnz 0x40(%rip)
55e2(6): nop 0x0(%rax,%rax,1)
55e8(5): mov $0x4,%ebp
55ed(5): mov 0x18(%rsp),%rdi
55f2(9): xor $0x28,%rdi
55fb(2): mov %ebp,%eax
55fd(6): jnz 0x293(%rip)
5603(4): add $0x28,%rsp
5607(1): pop %rbx
5608(1): pop %rbp
5609(2): pop %r12
560b(2): pop %r13
560d(2): pop %r14
560f(2): pop %r15
5611(1): ret near (%rsp)
5612(6): nop 0x0(%rax,%rax,1)
5618(2): xor %ebp,%ebp
561a(2): jmp 0xffffffa6(%rip)
561c(4): nop 0x0(%rax)
5620(5): movzx 0x0(%rbp),%r12d
5625(3): test %r12b,%r12b
5628(2): jz 0xffffffc0(%rip)
562a(4): movsx %r12b,%esi
562e(3): mov %r13,%rdi
5631(2): xor %ebp,%ebp
5633(5): call 0xffffbf9d(%rip)
5638(3): test %rax,%rax
563b(5): mov $0x1,%ebx
5640(5): mov 0x8(%rsp),%rcx
5645(2): jz 0xffffffa3(%rip)
5647(4): movsx %r12b,%esi
564b(3): mov %r13,%rdi
564e(5): mov %rcx,0x8(%rsp)
5653(5): call 0xffffbf7d(%rip)
5658(3): test %rax,%rax
565b(5): mov 0x8(%rsp),%rcx
5660(6): jz 0xcc(%rip)
5666(5): lea 0xffffffbb(%r12),%eax
566b(2): cmp $0x2f,%al
566d(2): jnbe 0x53(%rip)
566f(a): mov $0x142129060940101,%rdx
5679(4): bt %rax,%rdx
567d(2): jnb 0x43(%rip)
567f(5): mov $0x30,%esi
5684(3): mov %r13,%rdi
5687(5): mov %rcx,0x8(%rsp)
568c(5): call 0xffffbf44(%rip)
5691(3): test %rax,%rax
5694(5): mov 0x8(%rsp),%rcx
5699(2): jz 0x27(%rip)
569b(4): movzx 0x1(%rcx),%eax
569f(2): cmp $0x44,%al
56a1(2): jz 0xe(%rip)
56a3(2): cmp $0x69,%al
56a5(6): jz 0x1d3(%rip)
56ab(2): cmp $0x42,%al
56ad(2): jnz 0x13(%rip)
56af(5): mov $0x2,%edi
56b4(5): mov $0x3e8,%esi
56b9(2): jmp 0x11(%rip)
56bb(5): nop 0x0(%rax,%rax,1)
56c0(5): mov $0x1,%edi
56c5(5): mov $0x400,%esi
56ca(4): sub $0x42,%r12d
56ce(4): cmp $0x35,%r12b
56d2(2): jnbe 0x5a(%rip)
56d4(7): lea 0x156d(%rip),%rdx
56db(4): movzx %r12b,%r12d
56df(4): movsxd 0x0(%rdx,%r12,4),%rax
56e3(3): add %rdx,%rax
56e6(2): jmp %rax
56e8(3): mov %rbx,%rax
56eb(3): mul %rax,%rsi,%rdx
56ee(6): jo 0x1f3(%rip)
56f4(3): xor %r8d,%r8d
56f7(3): mul %rax,%rsi,%rdx
56fa(6): jo 0x1d8(%rip)
5700(3): mov %rax,%rbx
5703(3): or %r8d,%ebp
5706(a): nop 0x0(%rax,%rax,1)
5710(3): movsxd %edi,%rdi
5713(2): mov %ebp,%eax
5715(3): add %rdi,%rcx
5718(3): or $0x2,%eax
571b(3): mov %rcx,(%r15)
571e(3): cmp $0x0,(%rcx)
5721(3): mov %rbx,(%r14)
5724(3): cmovne %eax,%ebp
5727(5): jmp 0xfffffec6(%rip)
572c(3): mov %rbx,(%r14)
572f(3): or $0x2,%ebp
5732(5): jmp 0xfffffebb(%rip)
5737(5): mov $0x2,%edx
573c(3): mov %rdx,%rax
573f(3): mul %rax,%rbx,%rdx
5742(6): jo 0x9c(%rip)
5748(3): add %rbx,%rbx
574b(2): jmp 0xffffffc5(%rip)
574d(5): mov $0x200,%edx
5752(3): mov %rdx,%rax
5755(3): mul %rax,%rbx,%rdx
5758(6): jo 0x86(%rip)
575e(4): shl/sal $0x9,%rbx
5762(2): jmp 0xffffffae(%rip)
5764(6): mov $0x7,%r8d
576a(3): xor %r9d,%r9d
576d(3): nop (%rax)
5770(3): mov %rbx,%rax
5773(3): mul %rax,%rsi,%rdx
5776(3): mov %rax,%rbx
5779(6): jo 0x195(%rip)
577f(4): sub $0x1,%r8d
5783(2): jnz 0xffffffed(%rip)
5785(3): or %r9d,%ebp
5788(2): jmp 0xffffff88(%rip)
578a(6): mov $0x8,%r8d
5790(3): xor %r9d,%r9d
5793(5): nop 0x0(%rax,%rax,1)
5798(3): mov %rbx,%rax
579b(3): mul %rax,%rsi,%rdx
579e(3): mov %rax,%rbx
57a1(6): jo 0x14f(%rip)
57a7(4): sub $0x1,%r8d
57ab(2): jnz 0xffffffed(%rip)
57ad(2): jmp 0xffffffd8(%rip)
57af(6): mov $0x4,%r8d
57b5(3): xor %r9d,%r9d
57b8(3): mov %rbx,%rax
57bb(3): mul %rax,%rsi,%rdx
57be(3): mov %rax,%rbx
57c1(6): jo 0x102(%rip)
57c7(4): sub $0x1,%r8d
57cb(2): jnz 0xffffffed(%rip)
57cd(2): jmp 0xffffffb8(%rip)
57cf(3): mov %rbx,%rax
57d2(3): mul %rax,%rsi,%rdx
57d5(3): mov %rax,%rbx
57d8(6): jno 0xffffff38(%rip)
57de(5): mov $0x1,%ebp
57e3(4): or $0xffffffff,%rbx
57e7(5): jmp 0xffffff29(%rip)
57ec(4): nop 0x0(%rax)
57f0(6): mov $0x5,%r8d
57f6(3): xor %r9d,%r9d
57f9(3): mov %rbx,%rax
57fc(3): mul %rax,%rsi,%rdx
57ff(3): mov %rax,%rbx
5802(6): jo 0xfd(%rip)
5808(4): sub $0x1,%r8d
580c(2): jnz 0xffffffed(%rip)
580e(5): jmp 0xffffff77(%rip)
5813(6): mov $0x6,%r8d
5819(3): xor %r9d,%r9d
581c(3): mov %rbx,%rax
581f(3): mul %rax,%rsi,%rdx
5822(3): mov %rax,%rbx
5825(6): jo 0x8f(%rip)
582b(4): sub $0x1,%r8d
582f(2): jnz 0xffffffed(%rip)
5831(5): jmp 0xffffff54(%rip)
5836(5): mov $0x400,%edx
583b(3): mov %rdx,%rax
583e(3): mul %rax,%rbx,%rdx
5841(2): jo 0xffffff9d(%rip)
5843(4): shl/sal $0xa,%rbx
5847(5): jmp 0xfffffec9(%rip)
584c(3): mov %rbx,%rax
584f(3): mul %rax,%rsi,%rdx
5852(6): jo 0xcb(%rip)
5858(3): xor %r8d,%r8d
585b(3): mul %rax,%rsi,%rdx
585e(6): jno 0xfffffe99(%rip)
5864(6): mov $0x1,%r8d
586a(4): or $0xffffffff,%rax
586e(5): jmp 0xfffffe89(%rip)
5873(5): nop 0x0(%rax,%rax,1)
5878(2): xor %edi,%edi
587a(4): cmp $0x42,0x2(%rcx)
587e(5): mov $0x400,%esi
5883(4): setz %dil
5887(4): lea 0x1(%rdi,%rdi,1),%edi
588b(5): jmp 0xfffffe3f(%rip)
5890(5): call 0xffffbd10(%rip)
5895(7): lea 0x1484(%rip),%rcx
589c(7): lea 0x135d(%rip),%rsi
58a3(7): lea 0x1376(%rip),%rdi
58aa(5): mov $0x54,%edx
58af(5): call 0xffffbd61(%rip)
58b4(6): mov $0x1,%r9d
58ba(4): or $0xffffffff,%rbx
58be(5): jmp 0xffffff6d(%rip)
58c3(6): mov $0x1,%r9d
58c9(4): or $0xffffffff,%rbx
58cd(5): jmp 0xfffffefa(%rip)
58d2(6): mov $0x1,%r8d
58d8(4): or $0xffffffff,%rbx
58dc(5): jmp 0xfffffe27(%rip)
58e1(4): or $0xffffffff,%rax
58e5(6): mov $0x1,%r8d
58eb(5): jmp 0xfffffe0c(%rip)
58f0(6): mov $0x1,%r9d
58f6(4): or $0xffffffff,%rbx
58fa(5): jmp 0xfffffead(%rip)
58ff(6): mov $0x1,%r9d
5905(4): or $0xffffffff,%rbx
5909(5): jmp 0xfffffeff(%rip)
590e(6): mov $0x1,%r9d
5914(4): or $0xffffffff,%rbx
5918(5): jmp 0xfffffe67(%rip)
591d(6): mov $0x1,%r8d
5923(4): or $0xffffffff,%rax
5927(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
5930(2): push %r12
5932(1): push %rbp
5933(1): push %rbx
5934(3): mov %rdi,%rbx
5937(5): call 0xffffbd79(%rip)
593c(2): test %eax,%eax
593e(3): mov %rbx,%rdi
5941(2): js 0x56(%rip)
5943(5): call 0xffffbdad(%rip)
5948(2): test %eax,%eax
594a(2): jnz 0x2e(%rip)
594c(3): mov %rbx,%rdi
594f(5): call 0x61(%rip)
5954(2): test %eax,%eax
5956(2): jz 0x3e(%rip)
5958(5): call 0xffffbb98(%rip)
595d(3): mov (%rax),%r12d
5960(3): mov %rbx,%rdi
5963(3): mov %rax,%rbp
5966(5): call 0xffffbbea(%rip)
596b(3): test %r12d,%r12d
596e(2): jnz 0x32(%rip)
5970(1): pop %rbx
5971(1): pop %rbp
5972(2): pop %r12
5974(1): ret near (%rsp)
5975(3): nop (%rax)
5978(3): mov %rbx,%rdi
597b(5): call 0xffffbd35(%rip)
5980(2): xor %esi,%esi
5982(5): mov $0x1,%edx
5987(2): mov %eax,%edi
5989(5): call 0xffffbc77(%rip)
598e(4): cmp $0xffffffff,%rax
5992(2): jnz 0xffffffba(%rip)
5994(3): mov %rbx,%rdi
5997(1): pop %rbx
5998(1): pop %rbp
5999(2): pop %r12
599b(5): jmp 0xffffbbb5(%rip)
59a0(4): mov %r12d,0x0(%rbp)
59a4(5): mov $0xffffffff,%eax
59a9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
59b0(3): test %rdi,%rdi
59b3(1): push %rbx
59b4(3): mov %rdi,%rbx
59b7(2): jz 0x13(%rip)
59b9(5): call 0xffffbd37(%rip)
59be(2): test %eax,%eax
59c0(2): jz 0xa(%rip)
59c2(6): test $0x100,(%rbx)
59c8(2): jnz 0x10(%rip)
59ca(3): mov %rbx,%rdi
59cd(1): pop %rbx
59ce(5): jmp 0xffffbd02(%rip)
59d3(5): nop 0x0(%rax,%rax,1)
59d8(3): mov %rbx,%rdi
59db(5): mov $0x1,%edx
59e0(2): xor %esi,%esi
59e2(5): call 0xe(%rip)
59e7(3): mov %rbx,%rdi
59ea(1): pop %rbx
59eb(5): jmp 0xffffbce5(%rip)

"rpl_fseeko" :
59f0(4): mov 0x8(%rdi),%rax
59f4(4): cmp %rax,0x10(%rdi)
59f8(2): jz 0x8(%rip)
59fa(5): jmp 0xffffbd66(%rip)
59ff(1): nop 
5a00(4): mov 0x20(%rdi),%rax
5a04(4): cmp %rax,0x28(%rdi)
5a08(2): jnz 0xfffffff2(%rip)
5a0a(5): cmp $0x0,0x48(%rdi)
5a0f(2): jnz 0xffffffeb(%rip)
5a11(2): push %r12
5a13(1): push %rbp
5a14(3): mov %edx,%r12d
5a17(1): push %rbx
5a18(3): mov %rsi,%rbp
5a1b(3): mov %rdi,%rbx
5a1e(5): call 0xffffbc92(%rip)
5a23(3): mov %r12d,%edx
5a26(3): mov %rbp,%rsi
5a29(2): mov %eax,%edi
5a2b(5): call 0xffffbbd5(%rip)
5a30(4): cmp $0xffffffff,%rax
5a34(2): jz 0xe(%rip)
5a36(3): and $0xef,(%rbx)
5a39(7): mov %rax,0x90(%rbx)
5a40(2): xor %eax,%eax
5a42(1): pop %rbx
5a43(1): pop %rbp
5a44(2): pop %r12
5a46(1): ret near (%rsp)

"rpl_mbrtowc" :
5a50(2): push %r13
5a52(2): push %r12
5a54(3): mov %rsi,%r13
5a57(1): push %rbp
5a58(1): push %rbx
5a59(3): mov %rdi,%rbx
5a5c(3): mov %rdx,%r12
5a5f(4): sub $0x18,%rsp
5a63(9): mov $0x28,%rax
5a6c(5): mov %rax,0x8(%rsp)
5a71(2): xor %eax,%eax
5a73(5): lea 0x4(%rsp),%rax
5a78(3): test %rdi,%rdi
5a7b(4): cmove %rax,%rbx
5a7f(3): mov %rbx,%rdi
5a82(5): call 0xffffbb3e(%rip)
5a87(4): cmp $0xfffffffd,%rax
5a8b(3): mov %rax,%rbp
5a8e(2): jbe 0x22(%rip)
5a90(3): test %r12,%r12
5a93(2): jz 0x1d(%rip)
5a95(2): xor %edi,%edi
5a97(5): call 0xc9(%rip)
5a9c(2): test %al,%al
5a9e(2): jnz 0x12(%rip)
5aa0(5): movzx 0x0(%r13),%eax
5aa5(5): mov $0x1,%ebp
5aaa(2): mov %eax,(%rbx)
5aac(4): nop 0x0(%rax)
5ab0(5): mov 0x8(%rsp),%rdx
5ab5(9): xor $0x28,%rdx
5abe(3): mov %rbp,%rax
5ac1(2): jnz 0xd(%rip)
5ac3(4): add $0x18,%rsp
5ac7(1): pop %rbx
5ac8(1): pop %rbp
5ac9(2): pop %r12
5acb(2): pop %r13
5acd(1): ret near (%rsp)
5ace(5): call 0xffffbad2(%rip)

"close_stream" :
5ae0(2): push %r12
5ae2(1): push %rbp
5ae3(3): mov %rdi,%rbp
5ae6(1): push %rbx
5ae7(5): call 0xffffba39(%rip)
5aec(3): mov 0x0(%rbp),%ebx
5aef(3): mov %rbp,%rdi
5af2(3): mov %rax,%r12
5af5(5): call 0xfffffe3b(%rip)
5afa(3): and $0x20,%ebx
5afd(2): test %ebx,%ebx
5aff(2): jnz 0x19(%rip)
5b01(2): test %eax,%eax
5b03(2): jz 0xc(%rip)
5b05(3): test %r12,%r12
5b08(5): mov $0xffffffff,%eax
5b0d(2): jz 0x3b(%rip)
5b0f(1): pop %rbx
5b10(1): pop %rbp
5b11(2): pop %r12
5b13(1): ret near (%rsp)
5b14(4): nop 0x0(%rax)
5b18(2): test %eax,%eax
5b1a(2): jnz 0x1e(%rip)
5b1c(5): call 0xffffb9d4(%rip)
5b21(6): mov $0x0,(%rax)
5b27(5): mov $0xffffffff,%eax
5b2c(1): pop %rbx
5b2d(1): pop %rbp
5b2e(2): pop %r12
5b30(1): ret near (%rsp)
5b31(7): nop 0x0(%rax)
5b38(1): pop %rbx
5b39(5): mov $0xffffffff,%eax
5b3e(1): pop %rbp
5b3f(2): pop %r12
5b41(1): ret near (%rsp)
5b42(6): nop 0x0(%rax,%rax,1)
5b48(5): call 0xffffb9a8(%rip)
5b4d(3): cmp $0x9,(%rax)
5b50(1): pop %rbx
5b51(1): pop %rbp
5b52(2): pop %r12
5b54(3): setnz %al
5b57(3): movzx %al,%eax
5b5a(2): neg %eax
5b5c(1): ret near (%rsp)

"hard_locale" :
5b60(4): sub $0x8,%rsp
5b64(2): xor %esi,%esi
5b66(5): call 0xffffbbba(%rip)
5b6b(3): mov %rax,%rdx
5b6e(5): mov $0x1,%eax
5b73(3): test %rdx,%rdx
5b76(2): jz 0x1f(%rip)
5b78(7): lea 0x11ac(%rip),%rdi
5b7f(5): mov $0x2,%ecx
5b84(3): mov %rdx,%rsi
5b87(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5b89(3): setnbe %cl
5b8c(3): sbb $0x0,%cl
5b8f(2): xor %eax,%eax
5b91(2): test %cl,%cl
5b93(2): jnz 0xd(%rip)
5b95(4): add $0x8,%rsp
5b99(1): ret near (%rsp)
5b9a(6): nop 0x0(%rax,%rax,1)
5ba0(7): lea 0x1186(%rip),%rdi
5ba7(5): mov $0x6,%ecx
5bac(3): mov %rdx,%rsi
5baf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5bb1(3): setnbe %al
5bb4(2): sbb $0x0,%al
5bb6(2): test %al,%al
5bb8(3): setnz %al
5bbb(4): add $0x8,%rsp
5bbf(1): ret near (%rsp)

"locale_charset" :
5bc0(4): sub $0x8,%rsp
5bc4(5): mov $0xe,%edi
5bc9(5): call 0xffffbb17(%rip)
5bce(3): test %rax,%rax
5bd1(2): jz 0x1f(%rip)
5bd3(3): cmp $0x0,(%rax)
5bd6(7): lea 0x1156(%rip),%rdx
5bdd(4): cmove %rdx,%rax
5be1(4): add $0x8,%rsp
5be5(1): ret near (%rsp)
5be6(a): nop 0x0(%rax,%rax,1)
5bf0(7): lea 0x113c(%rip),%rax
5bf7(4): add $0x8,%rsp
5bfb(1): ret near (%rsp)

"__libc_csu_init" :
5c00(2): push %r15
5c02(2): push %r14
5c04(3): mov %rdx,%r15
5c07(2): push %r13
5c09(2): push %r12
5c0b(7): lea 0x202efe(%rip),%r12
5c12(1): push %rbp
5c13(7): lea 0x202efe(%rip),%rbp
5c1a(1): push %rbx
5c1b(3): mov %edi,%r13d
5c1e(3): mov %rsi,%r14
5c21(3): sub %r12,%rbp
5c24(4): sub $0x8,%rsp
5c28(4): sar $0x3,%rbp
5c2c(5): call 0xffffb87c(%rip)
5c31(3): test %rbp,%rbp
5c34(2): jz 0x22(%rip)
5c36(2): xor %ebx,%ebx
5c38(8): nop 0x0(%rax,%rax,1)
5c40(3): mov %r15,%rdx
5c43(3): mov %r14,%rsi
5c46(3): mov %r13d,%edi
5c49(4): call 0x0(%r12,%rbx,8)
5c4d(4): add $0x1,%rbx
5c51(3): cmp %rbx,%rbp
5c54(2): jnz 0xffffffec(%rip)
5c56(4): add $0x8,%rsp
5c5a(1): pop %rbx
5c5b(1): pop %rbp
5c5c(2): pop %r12
5c5e(2): pop %r13
5c60(2): pop %r14
5c62(2): pop %r15
5c64(1): ret near (%rsp)

"atexit" :
5c80(7): mov 0x203381(%rip),%rdx
5c87(2): xor %esi,%esi
5c89(5): jmp 0xffffbaf7(%rip)

"_fini" :
5c90(4): sub $0x8,%rsp
5c94(4): add $0x8,%rsp
5c98(1): ret near (%rsp)

