
"__uflow@plt" :
1670(6): jmp 0x2077aa(%rip)
1676(5): push $0x0

"free@plt" :
1680(6): jmp 0x2077a2(%rip)
1686(5): push $0x1

"abort@plt" :
1690(6): jmp 0x20779a(%rip)
1696(5): push $0x2

"__errno_location@plt" :
16a0(6): jmp 0x207792(%rip)
16a6(5): push $0x3

"strncmp@plt" :
16b0(6): jmp 0x20778a(%rip)
16b6(5): push $0x4

"_exit@plt" :
16c0(6): jmp 0x207782(%rip)
16c6(5): push $0x5

"__fpending@plt" :
16d0(6): jmp 0x20777a(%rip)
16d6(5): push $0x6

"ferror@plt" :
16e0(6): jmp 0x207772(%rip)
16e6(5): push $0x7

"qsort@plt" :
16f0(6): jmp 0x20776a(%rip)
16f6(5): push $0x8

"clearerr_unlocked@plt" :
1700(6): jmp 0x207762(%rip)
1706(5): push $0x9

"textdomain@plt" :
1710(6): jmp 0x20775a(%rip)
1716(5): push $0xa

"fclose@plt" :
1720(6): jmp 0x207752(%rip)
1726(5): push $0xb

"bindtextdomain@plt" :
1730(6): jmp 0x20774a(%rip)
1736(5): push $0xc

"dcgettext@plt" :
1740(6): jmp 0x207742(%rip)
1746(5): push $0xd

"__ctype_get_mb_cur_max@plt" :
1750(6): jmp 0x20773a(%rip)
1756(5): push $0xe

"strlen@plt" :
1760(6): jmp 0x207732(%rip)
1766(5): push $0xf

"__stack_chk_fail@plt" :
1770(6): jmp 0x20772a(%rip)
1776(5): push $0x10

"getopt_long@plt" :
1780(6): jmp 0x207722(%rip)
1786(5): push $0x11

"mbrtowc@plt" :
1790(6): jmp 0x20771a(%rip)
1796(5): push $0x12

"__overflow@plt" :
17a0(6): jmp 0x207712(%rip)
17a6(5): push $0x13

"strrchr@plt" :
17b0(6): jmp 0x20770a(%rip)
17b6(5): push $0x14

"lseek@plt" :
17c0(6): jmp 0x207702(%rip)
17c6(5): push $0x15

"__assert_fail@plt" :
17d0(6): jmp 0x2076fa(%rip)
17d6(5): push $0x16

"memset@plt" :
17e0(6): jmp 0x2076f2(%rip)
17e6(5): push $0x17

"fgetc@plt" :
17f0(6): jmp 0x2076ea(%rip)
17f6(5): push $0x18

"strspn@plt" :
1800(6): jmp 0x2076e2(%rip)
1806(5): push $0x19

"posix_fadvise@plt" :
1810(6): jmp 0x2076da(%rip)
1816(5): push $0x1a

"memchr@plt" :
1820(6): jmp 0x2076d2(%rip)
1826(5): push $0x1b

"strndup@plt" :
1830(6): jmp 0x2076ca(%rip)
1836(5): push $0x1c

"memcmp@plt" :
1840(6): jmp 0x2076c2(%rip)
1846(5): push $0x1d

"fputs_unlocked@plt" :
1850(6): jmp 0x2076ba(%rip)
1856(5): push $0x1e

"calloc@plt" :
1860(6): jmp 0x2076b2(%rip)
1866(5): push $0x1f

"memcpy@plt" :
1870(6): jmp 0x2076aa(%rip)
1876(5): push $0x20

"fileno@plt" :
1880(6): jmp 0x2076a2(%rip)
1886(5): push $0x21

"malloc@plt" :
1890(6): jmp 0x20769a(%rip)
1896(5): push $0x22

"fflush@plt" :
18a0(6): jmp 0x207692(%rip)
18a6(5): push $0x23

"nl_langinfo@plt" :
18b0(6): jmp 0x20768a(%rip)
18b6(5): push $0x24

"ungetc@plt" :
18c0(6): jmp 0x207682(%rip)
18c6(5): push $0x25

"__freading@plt" :
18d0(6): jmp 0x20767a(%rip)
18d6(5): push $0x26

"fwrite_unlocked@plt" :
18e0(6): jmp 0x207672(%rip)
18e6(5): push $0x27

"realloc@plt" :
18f0(6): jmp 0x20766a(%rip)
18f6(5): push $0x28

"setlocale@plt" :
1900(6): jmp 0x207662(%rip)
1906(5): push $0x29

"__printf_chk@plt" :
1910(6): jmp 0x20765a(%rip)
1916(5): push $0x2a

"__fread_chk@plt" :
1920(6): jmp 0x207652(%rip)
1926(5): push $0x2b

"memmove@plt" :
1930(6): jmp 0x20764a(%rip)
1936(5): push $0x2c

"error@plt" :
1940(6): jmp 0x207642(%rip)
1946(5): push $0x2d

"fseeko@plt" :
1950(6): jmp 0x20763a(%rip)
1956(5): push $0x2e

"fopen@plt" :
1960(6): jmp 0x207632(%rip)
1966(5): push $0x2f

"__cxa_atexit@plt" :
1970(6): jmp 0x20762a(%rip)
1976(5): push $0x30

"exit@plt" :
1980(6): jmp 0x207622(%rip)
1986(5): push $0x31

"fwrite@plt" :
1990(6): jmp 0x20761a(%rip)
1996(5): push $0x32

"__fprintf_chk@plt" :
19a0(6): jmp 0x207612(%rip)
19a6(5): push $0x33

"mbsinit@plt" :
19b0(6): jmp 0x20760a(%rip)
19b6(5): push $0x34

"iswprint@plt" :
19c0(6): jmp 0x207602(%rip)
19c6(5): push $0x35

"__ctype_b_loc@plt" :
19d0(6): jmp 0x2075fa(%rip)
19d6(5): push $0x36

".plt.got" :
19e0(6): jmp 0x207612(%rip)
19e6(2): nop 

"_init" :
1648(4): sub $0x8,%rsp
164c(7): mov 0x207995(%rip),%rax
1653(3): test %rax,%rax
1656(2): jz 0x4(%rip)
1658(2): call %rax
165a(4): add $0x8,%rsp
165e(1): ret near (%rsp)

"main" :
19f0(2): push %r15
19f2(2): push %r14
19f4(3): xor %r14d,%r14d
19f7(2): push %r13
19f9(2): push %r12
19fb(7): lea 0x20705e(%rip),%r13
1a02(1): push %rbp
1a03(1): push %rbx
1a04(2): mov %edi,%ebp
1a06(3): mov %rsi,%rbx
1a09(7): lea 0x4b88(%rip),%r12
1a10(4): sub $0x8,%rsp
1a14(3): mov (%rsi),%rdi
1a17(5): call 0x1f19(%rip)
1a1c(7): lea 0x5b7e(%rip),%rsi
1a23(5): mov $0x6,%edi
1a28(5): call 0xfffffed8(%rip)
1a2d(7): lea 0x4b20(%rip),%rsi
1a34(7): lea 0x4af0(%rip),%rdi
1a3b(5): call 0xfffffcf5(%rip)
1a40(7): lea 0x4ae4(%rip),%rdi
1a47(5): call 0xfffffcc9(%rip)
1a4c(7): lea 0x18ad(%rip),%rdi
1a53(5): call 0x49fd(%rip)
1a58(a): mov $0x0,0x2076aa(%rip)
1a62(7): mov $0x0,0x2076a2(%rip)
1a69(7): mov $0x0,0x207699(%rip)
1a70(7): mov $0x0,0x20767b(%rip)
1a77(9): nop 0x0(%rax,%rax,1)
1a80(3): xor %r8d,%r8d
1a83(3): mov %r13,%rcx
1a86(3): mov %r12,%rdx
1a89(3): mov %rbx,%rsi
1a8c(2): mov %ebp,%edi
1a8e(5): call 0xfffffcf2(%rip)
1a93(3): cmp $0xff,%eax
1a96(6): jz 0x1a2(%rip)
1a9c(3): cmp $0x66,%eax
1a9f(6): jz 0xb9(%rip)
1aa5(2): jle 0x2b(%rip)
1aa7(3): cmp $0x7a,%eax
1aaa(6): jz 0x136(%rip)
1ab0(2): jnle 0x80(%rip)
1ab2(3): cmp $0x6e,%eax
1ab5(2): jz 0xffffffcb(%rip)
1ab7(3): cmp $0x73,%eax
1aba(6): jnz 0x37d(%rip)
1ac0(7): mov $0x1,0x207644(%rip)
1ac7(2): jmp 0xffffffb9(%rip)
1ac9(7): nop 0x0(%rax)
1ad0(3): cmp $0x63,%eax
1ad3(6): jnle 0xd5(%rip)
1ad9(3): cmp $0x62,%eax
1adc(6): jnl 0xa4(%rip)
1ae2(5): cmp $0xffffff7d,%eax
1ae7(6): jnz 0x321(%rip)
1aed(7): lea 0x4a97(%rip),%rax
1af4(7): mov 0x2075ad(%rip),%rdi
1afb(7): mov 0x207516(%rip),%rcx
1b02(2): push $0x0
1b04(7): lea 0x4a61(%rip),%r9
1b0b(7): lea 0x4a6a(%rip),%r8
1b12(1): push %rax
1b13(7): lea 0x4a0d(%rip),%rdx
1b1a(7): lea 0x498c(%rip),%rsi
1b21(2): xor %eax,%eax
1b23(5): call 0x3ffd(%rip)
1b28(2): xor %edi,%edi
1b2a(5): call 0xfffffe56(%rip)
1b2f(1): nop 
1b30(5): cmp $0x80,%eax
1b35(6): jz 0xbb(%rip)
1b3b(5): cmp $0x81,%eax
1b40(6): jnz 0x2f7(%rip)
1b46(7): mov $0x1,0x2075bd(%rip)
1b4d(5): jmp 0xffffff33(%rip)
1b52(6): nop 0x0(%rax,%rax,1)
1b58(6): mov 0x2075ae(%rip),%ecx
1b5e(2): test %ecx,%ecx
1b60(6): jnz 0x2f1(%rip)
1b66(a): mov $0x2,0x20759c(%rip)
1b70(7): mov 0x207549(%rip),%r15
1b77(5): jmp 0xffffff09(%rip)
1b7c(4): nop 0x0(%rax)
1b80(6): mov 0x207586(%rip),%esi
1b86(2): test %esi,%esi
1b88(6): jnz 0x2c9(%rip)
1b8e(a): mov $0x1,0x207574(%rip)
1b98(7): mov 0x207521(%rip),%r15
1b9f(5): jmp 0xfffffee1(%rip)
1ba4(4): nop 0x0(%rax)
1ba8(3): cmp $0x64,%eax
1bab(6): jnz 0x28c(%rip)
1bb1(7): mov 0x207508(%rip),%rdx
1bb8(3): movzx (%rdx),%eax
1bbb(2): test %al,%al
1bbd(2): jz 0xc(%rip)
1bbf(4): cmp $0x0,0x1(%rdx)
1bc3(6): jnz 0x253(%rip)
1bc9(6): mov %al,0x20753a(%rip)
1bcf(6): mov $0x1,%r14d
1bd5(5): jmp 0xfffffeab(%rip)
1bda(6): nop 0x0(%rax,%rax,1)
1be0(7): mov $0x0,0x207429(%rip)
1be7(5): jmp 0xfffffe99(%rip)
1bec(4): nop 0x0(%rax)
1bf0(7): mov 0x2074c9(%rip),%rdx
1bf7(7): mov $0x1,0x20750a(%rip)
1bfe(5): mov $0x1,%eax
1c03(3): cmp $0x0,(%rdx)
1c06(2): jz 0x17(%rip)
1c08(2): xor %eax,%eax
1c0a(4): or $0xffffffff,%rcx
1c0e(3): mov %rdx,%rdi
1c11(2): REPNZ scasb rdi(%es,10),%al
1c13(3): mov %rcx,%rax
1c16(3): not %rax
1c19(4): sub $0x1,%rax
1c1d(3): mov %rdx,%rdi
1c20(7): mov %rax,0x2074d9(%rip)
1c27(5): call 0x4289(%rip)
1c2c(7): mov %rax,0x2074c5(%rip)
1c33(5): jmp 0xfffffe4d(%rip)
1c38(6): mov 0x2074ce(%rip),%eax
1c3e(5): mov $0x5,%edx
1c43(7): lea 0x5146(%rip),%rsi
1c4a(2): test %eax,%eax
1c4c(6): jz 0x1d6(%rip)
1c52(3): test %r14b,%r14b
1c55(2): jz 0x3d(%rip)
1c57(3): cmp $0x2,%eax
1c5a(5): mov $0x5,%edx
1c5f(7): lea 0x5162(%rip),%rsi
1c66(6): jnz 0x1bc(%rip)
1c6c(7): cmp $0x0,0x207498(%rip)
1c73(6): jz 0xef(%rip)
1c79(7): cmp $0x0,0x20748a(%rip)
1c80(6): jnz 0xf1(%rip)
1c86(2): xor %esi,%esi
1c88(3): mov %r15,%rdi
1c8b(5): call 0x1055(%rip)
1c90(2): jmp 0x3c(%rip)
1c92(7): cmp $0x0,0x207472(%rip)
1c99(6): jnz 0x95(%rip)
1c9f(2): xor %esi,%esi
1ca1(3): cmp $0x2,%eax
1ca4(4): setnz %sil
1ca8(3): shl/sal $0x2,%esi
1cab(7): cmp $0x0,0x207458(%rip)
1cb2(6): jnz 0x18f(%rip)
1cb8(3): mov %r15,%rdi
1cbb(5): call 0x1025(%rip)
1cc0(3): test %r14b,%r14b
1cc3(2): jnz 0x9(%rip)
1cc5(7): mov $0x9,0x20743d(%rip)
1ccc(8): cmp $0x0,0x207424(%rip)
1cd4(6): jz 0xdf(%rip)
1cda(6): mov 0x2073d8(%rip),%eax
1ce0(2): cmp %ebp,%eax
1ce2(6): jz 0x103(%rip)
1ce8(6): mov $0x1,%r12d
1cee(2): jnl 0x23(%rip)
1cf0(2): cwde 
1cf2(4): mov 0x0(%rbx,%rax,8),%rdi
1cf6(5): call 0x27a(%rip)
1cfb(3): and %eax,%r12d
1cfe(6): mov 0x2073b4(%rip),%eax
1d04(3): add $0x1,%eax
1d07(2): cmp %ebp,%eax
1d09(6): mov %eax,0x2073a9(%rip)
1d0f(2): jl 0xffffffe1(%rip)
1d11(7): cmp $0x0,0x2073da(%rip)
1d18(2): jnz 0x6b(%rip)
1d1a(4): xor $0x1,%r12d
1d1e(1): pop %rdx
1d1f(4): movzx %r12b,%eax
1d23(1): pop %rbx
1d24(1): pop %rbp
1d25(2): pop %r12
1d27(2): pop %r13
1d29(2): pop %r14
1d2b(2): pop %r15
1d2d(1): ret near (%rsp)
1d2e(3): cmp $0x2,%eax
1d31(5): mov $0x5,%edx
1d36(7): lea 0x50d3(%rip),%rsi
1d3d(6): jnz 0xe5(%rip)
1d43(7): cmp $0x0,0x2073c0(%rip)
1d4a(6): jz 0xaf(%rip)
1d50(5): mov $0x2,%esi
1d55(3): mov %r15,%rdi
1d58(5): call 0xf88(%rip)
1d5d(5): jmp 0xffffff68(%rip)
1d62(2): xor %esi,%esi
1d64(7): cmp $0x0,0x20739f(%rip)
1d6b(6): jz 0xffffff4d(%rip)
1d71(5): mov $0x2,%esi
1d76(3): mov %r15,%rdi
1d79(5): call 0xf67(%rip)
1d7e(5): jmp 0xffffff4e(%rip)
1d83(7): mov 0x207326(%rip),%rdi
1d8a(5): call 0x41a6(%rip)
1d8f(3): add $0x1,%eax
1d92(2): jnz 0xffffff88(%rip)
1d94(5): call 0xfffff90c(%rip)
1d99(2): mov (%rax),%esi
1d9b(7): lea 0x52c0(%rip),%rdx
1da2(2): xor %edi,%edi
1da4(2): xor %eax,%eax
1da6(3): xor %r12d,%r12d
1da9(5): call 0xfffffb97(%rip)
1dae(5): jmp 0xffffff6c(%rip)
1db3(7): movzx 0x20734f(%rip),%eax
1dba(7): mov $0x0,0x207330(%rip)
1dc1(b): mov $0x1,0x207334(%rip)
1dcc(6): mov %al,0x20731e(%rip)
1dd2(7): lea 0x207317(%rip),%rax
1dd9(7): mov %rax,0x207318(%rip)
1de0(5): jmp 0xfffffefa(%rip)
1de5(7): lea 0x5276(%rip),%rdi
1dec(5): call 0x184(%rip)
1df1(3): mov %eax,%r12d
1df4(5): jmp 0xffffff1d(%rip)
1df9(2): xor %esi,%esi
1dfb(3): mov %r15,%rdi
1dfe(5): call 0xee2(%rip)
1e03(5): jmp 0xfffffec2(%rip)
1e08(5): cmp $0xffffff7e,%eax
1e0d(2): jnz 0x2a(%rip)
1e0f(2): xor %edi,%edi
1e11(5): call 0x94f(%rip)
1e16(7): lea 0x4f43(%rip),%rsi
1e1d(5): mov $0x5,%edx
1e22(2): xor %edi,%edi
1e24(5): call 0xfffff91c(%rip)
1e29(2): xor %esi,%esi
1e2b(3): mov %rax,%rdx
1e2e(2): xor %edi,%edi
1e30(2): xor %eax,%eax
1e32(5): call 0xfffffb0e(%rip)
1e37(5): mov $0x1,%edi
1e3c(5): call 0x924(%rip)
1e41(3): or $0x2,%esi
1e44(3): mov %r15,%rdi
1e47(5): call 0xe99(%rip)
1e4c(5): jmp 0xfffffe79(%rip)
1e51(5): mov $0x5,%edx
1e56(7): lea 0x4edb(%rip),%rsi
1e5d(2): jmp 0xffffffc5(%rip)

"_start" :
1e60(2): xor %ebp,%ebp
1e62(3): mov %rdx,%r9
1e65(1): pop %rsi
1e66(3): mov %rsp,%rdx
1e69(4): and $0xfffffff0,%rsp
1e6d(1): push %rax
1e6e(1): push %rsp
1e6f(7): lea 0x45ca(%rip),%r8
1e76(7): lea 0x4553(%rip),%rcx
1e7d(7): lea 0xfffffb6c(%rip),%rdi
1e84(6): call 0x207156(%rip)
1e8a(1): hlt 

"deregister_tm_clones" :
1e90(7): lea 0x207209(%rip),%rdi
1e97(1): push %rbp
1e98(7): lea 0x207201(%rip),%rax
1e9f(3): cmp %rdi,%rax
1ea2(3): mov %rsp,%rbp
1ea5(2): jz 0x1b(%rip)
1ea7(7): mov 0x20712a(%rip),%rax
1eae(3): test %rax,%rax
1eb1(2): jz 0xf(%rip)
1eb3(1): pop %rbp
1eb4(2): jmp %rax
1eb6(a): nop 0x0(%rax,%rax,1)
1ec0(1): pop %rbp
1ec1(1): ret near (%rsp)

"register_tm_clones" :
1ed0(7): lea 0x2071c9(%rip),%rdi
1ed7(7): lea 0x2071c2(%rip),%rsi
1ede(1): push %rbp
1edf(3): sub %rdi,%rsi
1ee2(3): mov %rsp,%rbp
1ee5(4): sar $0x3,%rsi
1ee9(3): mov %rsi,%rax
1eec(4): shr $0x3f,%rax
1ef0(3): add %rax,%rsi
1ef3(3): sar $0x1,%rsi
1ef6(2): jz 0x1a(%rip)
1ef8(7): mov 0x2070f1(%rip),%rax
1eff(3): test %rax,%rax
1f02(2): jz 0xe(%rip)
1f04(1): pop %rbp
1f05(2): jmp %rax
1f07(9): nop 0x0(%rax,%rax,1)
1f10(1): pop %rbp
1f11(1): ret near (%rsp)

"__do_global_dtors_aux" :
1f20(7): cmp $0x0,0x2071c1(%rip)
1f27(2): jnz 0x31(%rip)
1f29(8): cmp $0x0,0x2070c7(%rip)
1f31(1): push %rbp
1f32(3): mov %rsp,%rbp
1f35(2): jz 0xe(%rip)
1f37(7): mov 0x2070ca(%rip),%rdi
1f3e(5): call 0xfffffaa2(%rip)
1f43(5): call 0xffffff4d(%rip)
1f48(7): mov $0x1,0x207199(%rip)
1f4f(1): pop %rbp
1f50(1): ret near (%rsp)
1f51(7): nop 0x0(%rax)
1f58(2): REP ret near (%rsp)

"frame_dummy" :
1f60(1): push %rbp
1f61(3): mov %rsp,%rbp
1f64(1): pop %rbp
1f65(5): jmp 0xffffff6b(%rip)

"cut_file" :
1f70(2): push %r15
1f72(2): push %r14
1f74(3): mov %rdi,%rsi
1f77(2): push %r13
1f79(2): push %r12
1f7b(5): mov $0x2,%ecx
1f80(1): push %rbp
1f81(1): push %rbx
1f82(4): sub $0x18,%rsp
1f86(4): mov %rdi,(%rsp)
1f8a(7): lea 0x50d1(%rip),%rdi
1f91(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1f93(3): setnbe %al
1f96(2): sbb $0x0,%al
1f98(2): test %al,%al
1f9a(6): jnz 0x506(%rip)
1fa0(7): mov 0x207109(%rip),%r15
1fa7(7): mov $0x1,0x207144(%rip)
1fae(5): mov $0x2,%esi
1fb3(3): mov %r15,%rdi
1fb6(5): call 0x140a(%rip)
1fbb(7): cmp $0x1,0x20714a(%rip)
1fc2(7): mov 0x2072cf(%rip),%rax
1fc9(7): mov %rax,0x207150(%rip)
1fd0(6): jz 0x543(%rip)
1fd6(4): mov 0x8(%r15),%rax
1fda(4): cmp 0x10(%r15),%rax
1fde(6): jnb 0x461(%rip)
1fe4(4): lea 0x1(%rax),%rdx
1fe8(4): mov %rdx,0x8(%r15)
1fec(3): movzx (%rax),%edi
1fef(3): mov %r15,%rsi
1ff2(6): mov $0x1,%r13d
1ff8(5): call 0xfffff8c8(%rip)
1ffd(7): mov 0x20711c(%rip),%rax
2004(4): cmp $0x1,(%rax)
2008(4): setnbe %bpl
200c(7): xor 0x2070f8(%rip),%bpl
2013(3): xor %r12d,%r12d
2016(3): xor %r14d,%r14d
2019(7): nop 0x0(%rax)
2020(4): cmp $0x1,%r13
2024(3): setz %bl
2027(3): and %bpl,%bl
202a(6): jnz 0x106(%rip)
2030(7): mov 0x2070e9(%rip),%rax
2037(3): cmp %r13,(%rax)
203a(6): jnbe 0xe0(%rip)
2040(3): test %r12b,%r12b
2043(6): jz 0x86(%rip)
2049(7): mov 0x207058(%rip),%rcx
2050(7): mov 0x2070a9(%rip),%rdx
2057(5): mov $0x1,%esi
205c(7): mov 0x207095(%rip),%rdi
2063(5): call 0xfffff87d(%rip)
2068(2): jmp 0x61(%rip)
206a(6): nop 0x0(%rax,%rax,1)
2070(4): lea 0x1(%rax),%rdx
2074(4): mov %rdx,0x8(%r15)
2078(3): movzx (%rax),%ebx
207b(7): movzx 0x207087(%rip),%eax
2082(7): movzx 0x206f87(%rip),%edx
2089(2): cmp %eax,%ebx
208b(2): mov %eax,%esi
208d(6): jz 0x1e3(%rip)
2093(3): movzx %dl,%eax
2096(2): cmp %eax,%ebx
2098(6): jz 0x2d8(%rip)
209e(3): cmp $0xff,%ebx
20a1(6): jz 0x2ff(%rip)
20a7(7): mov 0x206ffa(%rip),%rdi
20ae(4): mov 0x28(%rdi),%rax
20b2(4): cmp 0x30(%rdi),%rax
20b6(6): jnb 0x142(%rip)
20bc(4): lea 0x1(%rax),%rdx
20c0(4): mov %rdx,0x28(%rdi)
20c4(2): mov %bl,(%rax)
20c6(3): mov %ebx,%r14d
20c9(4): mov 0x8(%r15),%rax
20cd(4): cmp 0x10(%r15),%rax
20d1(2): jb 0xffffff9f(%rip)
20d3(3): mov %r15,%rdi
20d6(5): call 0xfffff59a(%rip)
20db(2): mov %eax,%ebx
20dd(2): jmp 0xffffff9e(%rip)
20df(1): nop 
20e0(4): lea 0x1(%rax),%rdx
20e4(4): mov %rdx,0x8(%r15)
20e8(3): movzx (%rax),%eax
20eb(7): movzx 0x207017(%rip),%ecx
20f2(7): movzx 0x206f17(%rip),%edx
20f9(2): cmp %eax,%ecx
20fb(2): mov %ecx,%esi
20fd(6): jz 0x143(%rip)
2103(3): movzx %dl,%ecx
2106(2): cmp %ecx,%eax
2108(6): jz 0x1b0(%rip)
210e(3): cmp $0xff,%eax
2111(6): jz 0x2a7(%rip)
2117(3): mov %eax,%r14d
211a(4): mov 0x8(%r15),%rax
211e(4): cmp 0x10(%r15),%rax
2122(2): jb 0xffffffbe(%rip)
2124(3): mov %r15,%rdi
2127(5): call 0xfffff549(%rip)
212c(2): jmp 0xffffffbf(%rip)
212e(2): nop 
2130(8): movzx 0x206ed8(%rip),%r9d
2138(8): movzx 0x206fc9(%rip),%r8d
2140(4): sub $0x8,%rsp
2144(2): push %r15
2146(7): lea 0x206fc3(%rip),%rsi
214d(7): lea 0x206fc4(%rip),%rdi
2154(2): xor %edx,%edx
2156(7): mov $0xffffffff,%rcx
215d(5): call 0x1293(%rip)
2162(3): mov %rax,%r13
2165(3): test %r13,%r13
2168(1): pop %rax
2169(1): pop %rdx
216a(6): js 0x4ff(%rip)
2170(6): jz 0x5c8(%rip)
2176(7): mov 0x206f9b(%rip),%rdi
217d(7): movzx 0x206f85(%rip),%eax
2184(4): lea 0xffffffff(%r13),%rdx
2188(5): cmp %al,0xffffffff(%rdi,%r13,1)
218d(2): jz 0x7b(%rip)
218f(7): cmp $0x0,0x206f75(%rip)
2196(6): jnz 0x23a(%rip)
219c(7): mov 0x206f05(%rip),%rcx
21a3(3): mov %r13,%rdx
21a6(5): mov $0x1,%esi
21ab(5): call 0xfffff735(%rip)
21b0(7): mov 0x206f61(%rip),%rdx
21b7(8): movzx 0x206e51(%rip),%r14d
21bf(6): movsx 0xffffffff(%rdx,%r13,1),%edx
21c5(3): cmp %r14d,%edx
21c8(2): jz 0x22(%rip)
21ca(7): mov 0x206ed7(%rip),%rdi
21d1(4): mov 0x28(%rdi),%rdx
21d5(4): cmp 0x30(%rdi),%rdx
21d9(6): jnb 0x47b(%rip)
21df(4): lea 0x1(%rdx),%rcx
21e3(4): mov %rcx,0x28(%rdi)
21e7(3): mov %r14b,(%rdx)
21ea(6): mov $0x1,%r13d
21f0(5): jmp 0xfffffe30(%rip)
21f5(3): nop (%rax)
21f8(3): movzx %bl,%esi
21fb(5): call 0xfffff5a5(%rip)
2200(5): jmp 0xfffffec6(%rip)
2205(3): nop (%rax)
2208(7): mov 0x206f11(%rip),%rax
220f(4): cmp $0x1,(%rax)
2213(6): jbe 0x1cd(%rip)
2219(5): cmp $0x1,0x8(%rax)
221e(6): jnbe 0x1a2(%rip)
2224(4): add $0x10,%rax
2228(6): mov $0x2,%r13d
222e(3): xor %r14d,%r14d
2231(7): mov %rax,0x206ee8(%rip)
2238(5): jmp 0xfffffdff(%rip)
223d(3): nop (%rax)
2240(3): cmp %dl,%sil
2243(3): mov %r14d,%ecx
2246(3): mov %eax,%r14d
2249(2): jz 0x38(%rip)
224b(7): mov 0x206ece(%rip),%rax
2252(4): add $0x1,%r13
2256(4): cmp 0x8(%rax),%r13
225a(6): jbe 0xfffffdc6(%rip)
2260(4): add $0x10,%rax
2264(7): mov %rax,0x206eb5(%rip)
226b(5): jmp 0xfffffdb5(%rip)
2270(3): cmp %dl,%sil
2273(3): mov %r14d,%ecx
2276(6): mov $0x1,%r12d
227c(3): mov %ebx,%r14d
227f(2): jnz 0xffffffcc(%rip)
2281(4): mov 0x8(%r15),%rax
2285(4): cmp 0x10(%r15),%rax
2289(6): jnb 0x407(%rip)
228f(4): lea 0x1(%rax),%rdx
2293(4): mov %rdx,0x8(%r15)
2297(3): movzx (%rax),%edi
229a(3): mov %r15,%rsi
229d(4): mov %ecx,0xc(%rsp)
22a1(5): call 0xfffff61f(%rip)
22a6(7): movzx 0x206e5c(%rip),%eax
22ad(4): mov 0xc(%rsp),%ecx
22b1(2): mov %eax,%esi
22b3(2): jmp 0x18(%rip)
22b5(3): nop (%rax)
22b8(3): cmp %dl,%sil
22bb(3): mov %r14d,%ecx
22be(3): mov %eax,%r14d
22c1(4): movzx %sil,%eax
22c5(6): jz 0xc4(%rip)
22cb(3): cmp %r14d,%eax
22ce(7): movzx 0x206d3b(%rip),%edx
22d5(6): jz 0xffffff76(%rip)
22db(4): cmp $0xff,%r14d
22df(3): movzx %dl,%eax
22e2(3): setz %bl
22e5(3): cmp %r14d,%eax
22e8(4): setz %dil
22ec(2): test %bl,%bl
22ee(2): jnz 0xb(%rip)
22f0(3): test %dil,%dil
22f3(6): jz 0xfffffd2d(%rip)
22f9(3): test %r12b,%r12b
22fc(2): jnz 0x11(%rip)
22fe(7): cmp $0x1,0x206e06(%rip)
2305(2): jnz 0x8(%rip)
2307(4): cmp $0x1,%r13
230b(2): jz 0x37(%rip)
230d(2): cmp %ecx,%eax
230f(4): setnz %r9b
2313(3): cmp %dl,%sil
2316(3): setz %cl
2319(3): or %cl,%r9b
231c(2): jnz 0x7(%rip)
231e(3): test %dil,%dil
2321(2): jz 0x21(%rip)
2323(7): mov 0x206d7e(%rip),%rdi
232a(4): mov 0x28(%rdi),%rcx
232e(4): cmp 0x30(%rdi),%rcx
2332(6): jnb 0x316(%rip)
2338(4): lea 0x1(%rcx),%rax
233c(4): mov %rax,0x28(%rdi)
2340(2): mov %dl,(%rcx)
2342(2): test %bl,%bl
2344(6): jnz 0x114(%rip)
234a(7): mov 0x206f47(%rip),%rax
2351(3): xor %r12d,%r12d
2354(6): mov $0x1,%r13d
235a(7): mov %rax,0x206dbf(%rip)
2361(5): jmp 0xfffffcbf(%rip)
2366(a): nop 0x0(%rax,%rax,1)
2370(3): cmp %dl,%sil
2373(3): mov %r14d,%ecx
2376(6): mov $0x1,%r12d
237c(3): mov %ebx,%r14d
237f(4): movzx %sil,%eax
2383(6): jnz 0xffffff48(%rip)
2389(3): cmp %r14d,%eax
238c(6): jnz 0xffffff4f(%rip)
2392(5): jmp 0xfffffeef(%rip)
2397(9): nop 0x0(%rax,%rax,1)
23a0(3): mov %r14d,%ecx
23a3(6): mov $0x1,%r12d
23a9(6): mov $0xffffffff,%r14d
23af(5): jmp 0xffffff2c(%rip)
23b4(4): nop 0x0(%rax)
23b8(3): mov %r14d,%ecx
23bb(2): jmp 0xffffffee(%rip)
23bd(3): nop (%rax)
23c0(6): mov $0x2,%r13d
23c6(3): xor %r14d,%r14d
23c9(5): jmp 0xfffffc6e(%rip)
23ce(2): nop 
23d0(6): mov $0x1,%r13d
23d6(3): xor %r14d,%r14d
23d9(5): jmp 0xfffffc47(%rip)
23de(2): nop 
23e0(7): mov 0x206cc1(%rip),%rcx
23e7(5): mov $0x1,%esi
23ec(5): call 0xfffff4f4(%rip)
23f1(7): movzx 0x206c18(%rip),%eax
23f8(6): cmp %al,0x206d0b(%rip)
23fe(2): jz 0x11(%rip)
2400(7): mov 0x206d19(%rip),%rax
2407(3): mov %ebx,%r12d
240a(5): jmp 0xfffffe0f(%rip)
240f(4): mov 0x8(%r15),%rax
2413(4): cmp 0x10(%r15),%rax
2417(6): jnb 0x2f5(%rip)
241d(4): lea 0x1(%rax),%rdx
2421(4): mov %rdx,0x8(%r15)
2425(3): movzx (%rax),%edi
2428(3): mov %r15,%rsi
242b(3): mov %ebx,%r12d
242e(5): call 0xfffff492(%rip)
2433(7): mov 0x206ce6(%rip),%rax
243a(5): jmp 0xfffffddf(%rip)
243f(3): mov %r15,%rdi
2442(5): call 0xfffff22e(%rip)
2447(3): cmp $0xff,%eax
244a(2): mov %eax,%edi
244c(6): jnz 0xfffffba3(%rip)
2452(6): nop 0x0(%rax,%rax,1)
2458(3): mov (%r15),%eax
245b(2): test $0x20,%al
245d(2): jnz 0x5f(%rip)
245f(4): mov (%rsp),%rsi
2463(7): lea 0x4bf8(%rip),%rdi
246a(5): mov $0x2,%ecx
246f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2471(3): mov %r15,%rdi
2474(3): setnbe %al
2477(2): sbb $0x0,%al
2479(2): test %al,%al
247b(2): jz 0x7f(%rip)
247d(5): call 0x3ab3(%rip)
2482(2): mov %eax,%edx
2484(5): mov $0x1,%eax
2489(3): cmp $0xff,%edx
248c(2): jz 0x30(%rip)
248e(4): add $0x18,%rsp
2492(1): pop %rbx
2493(1): pop %rbp
2494(2): pop %r12
2496(2): pop %r13
2498(2): pop %r14
249a(2): pop %r15
249c(1): ret near (%rsp)
249d(3): nop (%rax)
24a0(4): mov (%rsp),%rdi
24a4(7): lea 0x4128(%rip),%rsi
24ab(5): call 0xfffff4b5(%rip)
24b0(3): test %rax,%rax
24b3(3): mov %rax,%r15
24b6(6): jnz 0xfffffaf8(%rip)
24bc(4): mov (%rsp),%rdx
24c0(5): mov $0x3,%esi
24c5(2): xor %edi,%edi
24c7(5): call 0x2fa9(%rip)
24cc(3): mov %rax,%rbx
24cf(5): call 0xfffff1d1(%rip)
24d4(2): mov (%rax),%esi
24d6(7): lea 0x4b39(%rip),%rdx
24dd(3): mov %rbx,%rcx
24e0(2): xor %eax,%eax
24e2(2): xor %edi,%edi
24e4(5): call 0xfffff45c(%rip)
24e9(4): add $0x18,%rsp
24ed(2): xor %eax,%eax
24ef(1): pop %rbx
24f0(1): pop %rbp
24f1(2): pop %r12
24f3(2): pop %r13
24f5(2): pop %r14
24f7(2): pop %r15
24f9(1): ret near (%rsp)
24fa(5): call 0xfffff206(%rip)
24ff(4): add $0x18,%rsp
2503(5): mov $0x1,%eax
2508(1): pop %rbx
2509(1): pop %rbp
250a(2): pop %r12
250c(2): pop %r13
250e(2): pop %r14
2510(2): pop %r15
2512(1): ret near (%rsp)
2513(2): xor %ebx,%ebx
2515(3): xor %r12d,%r12d
2518(8): nop 0x0(%rax,%rax,1)
2520(4): mov 0x8(%r15),%rax
2524(4): cmp 0x10(%r15),%rax
2528(6): jnb 0x8f(%rip)
252e(4): lea 0x1(%rax),%rdx
2532(7): movzx 0x206ad7(%rip),%esi
2539(4): mov %rdx,0x8(%r15)
253d(3): movzx (%rax),%ebp
2540(2): cmp %esi,%ebp
2542(6): jz 0xce(%rip)
2548(7): mov 0x206bd1(%rip),%rax
254f(4): add $0x1,%rbx
2553(4): cmp 0x8(%rax),%rbx
2557(2): jbe 0xd(%rip)
2559(4): add $0x10,%rax
255d(7): mov %rax,0x206bbc(%rip)
2564(3): mov (%rax),%rax
2567(3): cmp %rax,%rbx
256a(2): jb 0xffffffb6(%rip)
256c(7): movzx 0x206b95(%rip),%edx
2573(7): mov 0x206b2e(%rip),%rcx
257a(2): test %dl,%dl
257c(2): jz 0x14(%rip)
257e(3): cmp %rax,%rbx
2581(3): setz %al
2584(3): and %al,%r12b
2587(6): jnz 0x161(%rip)
258d(3): mov %edx,%r12d
2590(4): mov 0x28(%rcx),%rax
2594(4): cmp 0x30(%rcx),%rax
2598(6): jnb 0x13f(%rip)
259e(4): lea 0x1(%rax),%rdx
25a2(4): mov %rdx,0x28(%rcx)
25a6(3): mov %bpl,(%rax)
25a9(4): mov 0x8(%r15),%rax
25ad(4): cmp 0x10(%r15),%rax
25b1(6): jb 0xffffff7d(%rip)
25b7(3): mov %r15,%rdi
25ba(5): call 0xfffff0b6(%rip)
25bf(7): movzx 0x206a4a(%rip),%esi
25c6(2): mov %eax,%ebp
25c8(2): cmp %esi,%ebp
25ca(2): jz 0x46(%rip)
25cc(3): cmp $0xff,%ebp
25cf(6): jnz 0xffffff79(%rip)
25d5(3): test %rbx,%rbx
25d8(6): jz 0xfffffe80(%rip)
25de(7): mov 0x206ac3(%rip),%rdi
25e5(4): mov 0x28(%rdi),%rdx
25e9(4): cmp 0x30(%rdi),%rdx
25ed(6): jnb 0x13e(%rip)
25f3(4): lea 0x1(%rdx),%rcx
25f7(4): mov %rcx,0x28(%rdi)
25fb(3): mov %sil,(%rdx)
25fe(3): mov (%r15),%eax
2601(5): jmp 0xfffffe5a(%rip)
2606(a): nop 0x0(%rax,%rax,1)
2610(7): mov 0x206a91(%rip),%rdi
2617(4): mov 0x28(%rdi),%rax
261b(4): cmp 0x30(%rdi),%rax
261f(6): jnb 0xae(%rip)
2625(4): lea 0x1(%rax),%rdx
2629(4): mov %rdx,0x28(%rdi)
262d(3): mov %sil,(%rax)
2630(7): mov 0x206c61(%rip),%rax
2637(2): xor %ebx,%ebx
2639(3): xor %r12d,%r12d
263c(7): mov %rax,0x206add(%rip)
2643(5): jmp 0xfffffedd(%rip)
2648(2): mov %eax,%esi
264a(5): call 0xfffff156(%rip)
264f(5): jmp 0xfffffcf3(%rip)
2654(3): mov %r14d,%esi
2657(5): call 0xfffff149(%rip)
265c(8): movzx 0x2069ac(%rip),%r14d
2664(5): jmp 0xfffffb86(%rip)
2669(7): mov 0x206aa8(%rip),%rdi
2670(5): call 0xfffff010(%rip)
2675(3): mov (%r15),%eax
2678(b): mov $0x0,0x206a95(%rip)
2683(2): test $0x30,%al
2685(6): jnz 0xfffffdd6(%rip)
268b(5): call 0x3845(%rip)
2690(3): mov %r15,%rdi
2693(4): mov %ecx,0xc(%rsp)
2697(5): call 0xffffefd9(%rip)
269c(3): cmp $0xff,%eax
269f(2): mov %eax,%edi
26a1(4): mov 0xc(%rsp),%ecx
26a5(6): jnz 0xfffffbf5(%rip)
26ab(7): movzx 0x20695e(%rip),%eax
26b2(7): movzx 0x206a50(%rip),%esi
26b9(6): mov $0xffffffff,%r14d
26bf(2): xor %edi,%edi
26c1(5): mov $0x1,%ebx
26c6(2): mov %eax,%edx
26c8(5): jmp 0xfffffc31(%rip)
26cd(5): call 0xfffff0d3(%rip)
26d2(5): jmp 0xffffff5e(%rip)
26d7(4): movzx %bpl,%esi
26db(3): mov %rcx,%rdi
26de(5): call 0xfffff0c2(%rip)
26e3(5): jmp 0xfffffe3d(%rip)
26e8(7): mov 0x206a11(%rip),%rdx
26ef(7): mov 0x206a02(%rip),%rdi
26f6(5): mov $0x1,%esi
26fb(5): call 0xfffff1e5(%rip)
2700(7): mov 0x2069a1(%rip),%rcx
2707(5): jmp 0xfffffe89(%rip)
270c(3): mov %r15,%rdi
270f(5): call 0xffffef61(%rip)
2714(3): cmp $0xff,%eax
2717(2): mov %eax,%edi
2719(6): jnz 0xfffffd0f(%rip)
271f(7): mov 0x2069fa(%rip),%rax
2726(5): jmp 0xfffffaf3(%rip)
272b(5): call 0xfffff075(%rip)
2730(3): mov (%r15),%eax
2733(5): jmp 0xfffffd28(%rip)
2738(7): lea 0x4721(%rip),%rcx
273f(7): lea 0x3d3e(%rip),%rsi
2746(7): lea 0x3d53(%rip),%rdi
274d(5): mov $0x149,%edx
2752(5): call 0xfffff07e(%rip)

"usage" :
2760(2): push %r13
2762(2): push %r12
2764(5): mov $0x5,%edx
2769(1): push %rbp
276a(1): push %rbx
276b(2): mov %edi,%ebp
276d(7): sub $0x88,%rsp
2774(7): mov 0x2069cd(%rip),%rbx
277b(9): mov $0x28,%rax
2784(5): mov %rax,0x78(%rsp)
2789(2): xor %eax,%eax
278b(2): test %edi,%edi
278d(2): jz 0x30(%rip)
278f(7): lea 0x3e6a(%rip),%rsi
2796(2): xor %edi,%edi
2798(5): call 0xffffefa8(%rip)
279d(7): mov 0x20693c(%rip),%rdi
27a4(3): mov %rax,%rdx
27a7(3): mov %rbx,%rcx
27aa(5): mov $0x1,%esi
27af(2): xor %eax,%eax
27b1(5): call 0xfffff1ef(%rip)
27b6(2): mov %ebp,%edi
27b8(5): call 0xfffff1c8(%rip)
27bd(7): lea 0x3e64(%rip),%rsi
27c4(2): xor %edi,%edi
27c6(5): call 0xffffef7a(%rip)
27cb(3): mov %rbx,%rdx
27ce(3): mov %rax,%rsi
27d1(5): mov $0x1,%edi
27d6(2): xor %eax,%eax
27d8(5): call 0xfffff138(%rip)
27dd(7): mov 0x2068c4(%rip),%rbx
27e4(7): lea 0x3e5d(%rip),%rsi
27eb(5): mov $0x5,%edx
27f0(2): xor %edi,%edi
27f2(5): call 0xffffef4e(%rip)
27f7(3): mov %rbx,%rsi
27fa(3): mov %rax,%rdi
27fd(5): call 0xfffff053(%rip)
2802(7): mov 0x20689f(%rip),%rbx
2809(7): lea 0x3e80(%rip),%rsi
2810(5): mov $0x5,%edx
2815(2): xor %edi,%edi
2817(5): call 0xffffef29(%rip)
281c(3): mov %rbx,%rsi
281f(3): mov %rax,%rdi
2822(5): call 0xfffff02e(%rip)
2827(7): mov 0x20687a(%rip),%rbx
282e(7): lea 0x3e93(%rip),%rsi
2835(5): mov $0x5,%edx
283a(2): xor %edi,%edi
283c(5): call 0xffffef04(%rip)
2841(3): mov %rbx,%rsi
2844(3): mov %rax,%rdi
2847(5): call 0xfffff009(%rip)
284c(7): mov 0x206855(%rip),%rbx
2853(7): lea 0x3ebe(%rip),%rsi
285a(5): mov $0x5,%edx
285f(2): xor %edi,%edi
2861(5): call 0xffffeedf(%rip)
2866(3): mov %rbx,%rsi
2869(3): mov %rax,%rdi
286c(5): call 0xffffefe4(%rip)
2871(7): mov 0x206830(%rip),%rbx
2878(7): lea 0x3f51(%rip),%rsi
287f(5): mov $0x5,%edx
2884(2): xor %edi,%edi
2886(5): call 0xffffeeba(%rip)
288b(3): mov %rbx,%rsi
288e(3): mov %rax,%rdi
2891(5): call 0xffffefbf(%rip)
2896(7): mov 0x20680b(%rip),%rbx
289d(7): lea 0x401c(%rip),%rsi
28a4(5): mov $0x5,%edx
28a9(2): xor %edi,%edi
28ab(5): call 0xffffee95(%rip)
28b0(3): mov %rbx,%rsi
28b3(3): mov %rax,%rdi
28b6(5): call 0xffffef9a(%rip)
28bb(7): mov 0x2067e6(%rip),%rbx
28c2(7): lea 0x406f(%rip),%rsi
28c9(5): mov $0x5,%edx
28ce(2): xor %edi,%edi
28d0(5): call 0xffffee70(%rip)
28d5(3): mov %rbx,%rsi
28d8(3): mov %rax,%rdi
28db(5): call 0xffffef75(%rip)
28e0(7): mov 0x2067c1(%rip),%rbx
28e7(7): lea 0x4122(%rip),%rsi
28ee(5): mov $0x5,%edx
28f3(2): xor %edi,%edi
28f5(5): call 0xffffee4b(%rip)
28fa(3): mov %rbx,%rsi
28fd(3): mov %rax,%rdi
2900(5): call 0xffffef50(%rip)
2905(7): mov 0x20679c(%rip),%rbx
290c(7): lea 0x413d(%rip),%rsi
2913(5): mov $0x5,%edx
2918(2): xor %edi,%edi
291a(5): call 0xffffee26(%rip)
291f(3): mov %rbx,%rsi
2922(3): mov %rax,%rdi
2925(5): call 0xffffef2b(%rip)
292a(7): mov 0x206777(%rip),%rbx
2931(7): lea 0x4148(%rip),%rsi
2938(5): mov $0x5,%edx
293d(2): xor %edi,%edi
293f(5): call 0xffffee01(%rip)
2944(3): mov %rbx,%rsi
2947(3): mov %rax,%rdi
294a(5): call 0xffffef06(%rip)
294f(7): mov 0x206752(%rip),%rbx
2956(7): lea 0x415b(%rip),%rsi
295d(5): mov $0x5,%edx
2962(2): xor %edi,%edi
2964(5): call 0xffffeddc(%rip)
2969(3): mov %rbx,%rsi
296c(3): mov %rax,%rdi
296f(5): call 0xffffeee1(%rip)
2974(7): mov 0x20672d(%rip),%rbx
297b(7): lea 0x4206(%rip),%rsi
2982(5): mov $0x5,%edx
2987(2): xor %edi,%edi
2989(5): call 0xffffedb7(%rip)
298e(3): mov %rbx,%rsi
2991(3): mov %rax,%rdi
2994(7): lea 0x3b12(%rip),%rbx
299b(5): call 0xffffeeb5(%rip)
29a0(7): lea 0x3b0a(%rip),%rax
29a7(7): lea 0x3b44(%rip),%rcx
29ae(9): mov $0x0,0x60(%rsp)
29b7(9): mov $0x0,0x68(%rsp)
29c0(3): mov %rsp,%rdx
29c3(4): mov %rax,(%rsp)
29c7(7): lea 0x3ae5(%rip),%rax
29ce(5): mov %rcx,0x30(%rsp)
29d3(7): lea 0x3b22(%rip),%rcx
29da(5): mov %rax,0x8(%rsp)
29df(7): lea 0x3b45(%rip),%rax
29e6(5): mov %rcx,0x40(%rsp)
29eb(7): lea 0x3b14(%rip),%rcx
29f2(5): mov %rax,0x10(%rsp)
29f7(7): lea 0x3ac5(%rip),%rax
29fe(5): mov %rcx,0x50(%rsp)
2a03(5): mov %rax,0x18(%rsp)
2a08(7): lea 0x3aca(%rip),%rax
2a0f(5): mov %rax,0x20(%rsp)
2a14(7): lea 0x3ac8(%rip),%rax
2a1b(5): mov %rax,0x28(%rsp)
2a20(5): mov %rax,0x38(%rsp)
2a25(5): mov %rax,0x48(%rsp)
2a2a(5): mov %rax,0x58(%rsp)
2a2f(1): nop 
2a30(4): add $0x10,%rdx
2a34(3): mov (%rdx),%rdi
2a37(3): test %rdi,%rdi
2a3a(2): jz 0x15(%rip)
2a3c(5): mov $0x4,%ecx
2a41(3): mov %rbx,%rsi
2a44(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2a46(3): setnbe %al
2a49(2): sbb $0x0,%al
2a4b(2): test %al,%al
2a4d(2): jnz 0xffffffe3(%rip)
2a4f(4): mov 0x8(%rdx),%r12
2a53(2): xor %edi,%edi
2a55(5): mov $0x5,%edx
2a5a(7): lea 0x3aaf(%rip),%rsi
2a61(3): test %r12,%r12
2a64(6): jz 0xc7(%rip)
2a6a(5): call 0xffffecd6(%rip)
2a6f(7): lea 0x421a(%rip),%rcx
2a76(7): lea 0x3aaa(%rip),%rdx
2a7d(3): mov %rax,%rsi
2a80(5): mov $0x1,%edi
2a85(2): xor %eax,%eax
2a87(5): call 0xffffee89(%rip)
2a8c(2): xor %esi,%esi
2a8e(5): mov $0x5,%edi
2a93(5): call 0xffffee6d(%rip)
2a98(3): test %rax,%rax
2a9b(2): jz 0x1e(%rip)
2a9d(7): lea 0x3a91(%rip),%rsi
2aa4(5): mov $0x3,%edx
2aa9(3): mov %rax,%rdi
2aac(5): call 0xffffec04(%rip)
2ab1(2): test %eax,%eax
2ab3(6): jnz 0x10d(%rip)
2ab9(7): lea 0x3a79(%rip),%rsi
2ac0(2): xor %edi,%edi
2ac2(5): mov $0x5,%edx
2ac7(5): call 0xffffec79(%rip)
2acc(7): lea 0x39da(%rip),%rcx
2ad3(7): lea 0x41b6(%rip),%rdx
2ada(3): mov %rax,%rsi
2add(5): mov $0x1,%edi
2ae2(2): xor %eax,%eax
2ae4(5): call 0xffffee2c(%rip)
2ae9(3): cmp %rbx,%r12
2aec(7): lea 0x39da(%rip),%rcx
2af3(7): lea 0x4aa7(%rip),%rbx
2afa(4): cmove %rcx,%rbx
2afe(7): lea 0x41fb(%rip),%rsi
2b05(2): xor %edi,%edi
2b07(5): mov $0x5,%edx
2b0c(5): call 0xffffec34(%rip)
2b11(3): mov %rbx,%rcx
2b14(3): mov %rax,%rsi
2b17(3): mov %r12,%rdx
2b1a(5): mov $0x1,%edi
2b1f(2): xor %eax,%eax
2b21(5): call 0xffffedef(%rip)
2b26(5): jmp 0xfffffc90(%rip)
2b2b(5): call 0xffffec15(%rip)
2b30(7): lea 0x4159(%rip),%rcx
2b37(7): lea 0x39e9(%rip),%rdx
2b3e(3): mov %rax,%rsi
2b41(5): mov $0x1,%edi
2b46(2): xor %eax,%eax
2b48(5): call 0xffffedc8(%rip)
2b4d(2): xor %esi,%esi
2b4f(5): mov $0x5,%edi
2b54(5): call 0xffffedac(%rip)
2b59(3): test %rax,%rax
2b5c(2): jz 0x1a(%rip)
2b5e(7): lea 0x39d0(%rip),%rsi
2b65(5): mov $0x3,%edx
2b6a(3): mov %rax,%rdi
2b6d(5): call 0xffffeb43(%rip)
2b72(2): test %eax,%eax
2b74(2): jnz 0x45(%rip)
2b76(7): lea 0x39bc(%rip),%rsi
2b7d(5): mov $0x5,%edx
2b82(2): xor %edi,%edi
2b84(7): lea 0x3922(%rip),%r12
2b8b(7): lea 0x393b(%rip),%rbx
2b92(5): call 0xffffebae(%rip)
2b97(7): lea 0x390f(%rip),%rcx
2b9e(7): lea 0x40eb(%rip),%rdx
2ba5(3): mov %rax,%rsi
2ba8(5): mov $0x1,%edi
2bad(2): xor %eax,%eax
2baf(5): call 0xffffed61(%rip)
2bb4(5): jmp 0xffffff4a(%rip)
2bb9(7): lea 0x38ed(%rip),%r12
2bc0(7): mov 0x2064e1(%rip),%r13
2bc7(7): lea 0x40ea(%rip),%rsi
2bce(2): xor %edi,%edi
2bd0(5): mov $0x5,%edx
2bd5(5): call 0xffffeb6b(%rip)
2bda(3): mov %r13,%rsi
2bdd(3): mov %rax,%rdi
2be0(5): call 0xffffec70(%rip)
2be5(5): jmp 0xfffffed4(%rip)

"compare_ranges" :
2bf0(2): mov (%rsi),%eax
2bf2(2): cmp %eax,(%rdi)
2bf4(2): jl 0xc(%rip)
2bf6(3): setnle %al
2bf9(3): movzx %al,%eax
2bfc(1): ret near (%rsp)
2bfd(3): nop (%rax)
2c00(5): mov $0xffffffff,%eax
2c05(1): ret near (%rsp)

"add_range_pair" :
2c10(1): push %rbp
2c11(1): push %rbx
2c12(3): mov %rsi,%rbx
2c15(3): mov %rdi,%rbp
2c18(4): sub $0x8,%rsp
2c1c(7): mov 0x20667d(%rip),%rsi
2c23(7): cmp 0x206506(%rip),%rsi
2c2a(7): mov 0x206667(%rip),%rdi
2c31(2): jz 0x2f(%rip)
2c33(3): mov %rsi,%rax
2c36(4): add $0x1,%rsi
2c3a(4): shl/sal $0x4,%rax
2c3e(3): add %rax,%rdi
2c41(3): mov %rbp,(%rdi)
2c44(4): mov %rbx,0x8(%rdi)
2c48(7): mov %rsi,0x206651(%rip)
2c4f(4): add $0x8,%rsp
2c53(1): pop %rbx
2c54(1): pop %rbp
2c55(1): ret near (%rsp)
2c56(a): nop 0x0(%rax,%rax,1)
2c60(3): test %rdi,%rdi
2c63(2): jz 0x45(%rip)
2c65(a): mov $0x384307168202282324,%rax
2c6f(3): cmp %rax,%rsi
2c72(2): jnbe 0x5b(%rip)
2c74(3): mov %rsi,%rax
2c77(3): shr $0x1,%rax
2c7a(5): lea 0x1(%rsi,%rax,1),%rsi
2c7f(7): mov %rsi,0x2064aa(%rip)
2c86(4): shl/sal $0x4,%rsi
2c8a(5): call 0x3056(%rip)
2c8f(7): mov 0x20660a(%rip),%rsi
2c96(3): mov %rax,%rdi
2c99(7): mov %rax,0x2065f8(%rip)
2ca0(2): jmp 0xffffff93(%rip)
2ca2(6): nop 0x0(%rax,%rax,1)
2ca8(3): test %rsi,%rsi
2cab(5): mov $0x8,%eax
2cb0(5): mov $0x10,%edx
2cb5(4): cmove %rax,%rsi
2cb9(3): mov %rdx,%rax
2cbc(2): xor %ecx,%ecx
2cbe(3): mul %rax,%rsi,%rdx
2cc1(2): jo 0x11(%rip)
2cc3(3): test %rax,%rax
2cc6(2): js 0x7(%rip)
2cc8(3): test %rcx,%rcx
2ccb(2): jz 0xffffffb4(%rip)
2ccd(5): call 0x3203(%rip)
2cd2(5): mov $0x1,%ecx
2cd7(2): jmp 0xffffffec(%rip)

"set_fields" :
2ce0(2): push %r15
2ce2(2): push %r14
2ce4(2): mov %esi,%eax
2ce6(2): push %r13
2ce8(2): push %r12
2cea(3): mov %rdi,%r14
2ced(1): push %rbp
2cee(1): push %rbx
2cef(4): sub $0x28,%rsp
2cf3(3): and $0x1,%eax
2cf6(4): mov %esi,0x1c(%rsp)
2cfa(4): mov %eax,0x18(%rsp)
2cfe(2): jz 0x20(%rip)
2d00(7): lea 0x435b(%rip),%rdi
2d07(5): mov $0x2,%ecx
2d0c(3): mov %r14,%rsi
2d0f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d11(3): setnbe %al
2d14(2): sbb $0x0,%al
2d16(2): test %al,%al
2d18(6): jz 0x301(%rip)
2d1e(3): xor %r15d,%r15d
2d21(2): xor %ebx,%ebx
2d23(2): mov %ebx,%ebp
2d25(3): xor %r13d,%r13d
2d28(3): xor %r12d,%r12d
2d2b(9): mov $0x1,0x10(%rsp)
2d34(5): jmp 0x8a(%rip)
2d39(7): nop 0x0(%rax)
2d40(4): cmp $0x2c,%r8b
2d44(5): mov %r8b,0x8(%rsp)
2d49(2): jz 0x1e(%rip)
2d4b(5): call 0xffffec85(%rip)
2d50(5): movzx 0x8(%rsp),%edx
2d55(3): mov (%rax),%r10
2d58(5): test $0x1,0x0(%r10,%rdx,2)
2d5d(2): jnz 0xa(%rip)
2d5f(2): test %dl,%dl
2d61(6): jnz 0x23f(%rip)
2d67(3): test %bpl,%bpl
2d6a(6): jz 0xa6(%rip)
2d70(2): test %bl,%bl
2d72(6): jnz 0x1ee(%rip)
2d78(3): test %r12b,%r12b
2d7b(6): jnz 0x1f5(%rip)
2d81(4): mov 0x18(%rsp),%eax
2d85(2): test %eax,%eax
2d87(6): jz 0x462(%rip)
2d8d(9): mov $0x1,0x10(%rsp)
2d96(5): mov 0x10(%rsp),%rdi
2d9b(7): mov $0xffffffff,%rsi
2da2(5): call 0xfffffe6e(%rip)
2da7(4): cmp $0x0,(%r14)
2dab(2): jz 0x7f(%rip)
2dad(3): xor %r15d,%r15d
2db0(3): xor %r13d,%r13d
2db3(2): xor %ebp,%ebp
2db5(3): xor %r12d,%r12d
2db8(2): xor %ebx,%ebx
2dba(4): add $0x1,%r14
2dbe(4): movzx (%r14),%r8d
2dc2(4): cmp $0x2d,%r8b
2dc6(6): jnz 0xffffff7a(%rip)
2dcc(3): test %bpl,%bpl
2dcf(6): jnz 0x38e(%rip)
2dd5(3): test %r15,%r15
2dd8(4): setz %r9b
2ddc(3): and %bl,%r9b
2ddf(3): mov %r9d,%r13d
2de2(6): jnz 0x324(%rip)
2de8(2): test %bl,%bl
2dea(6): jnz 0x1a6(%rip)
2df0(3): mov %ebx,%r13d
2df3(3): xor %r15d,%r15d
2df6(5): mov $0x1,%ebp
2dfb(9): mov $0x1,0x10(%rsp)
2e04(2): jmp 0xffffffb6(%rip)
2e06(a): nop 0x0(%rax,%rax,1)
2e10(3): test %r15,%r15
2e13(6): jz 0x2f3(%rip)
2e19(3): mov %r15,%rsi
2e1c(3): mov %r15,%rdi
2e1f(5): call 0xfffffdf1(%rip)
2e24(4): cmp $0x0,(%r14)
2e28(2): jnz 0xffffff85(%rip)
2e2a(7): mov 0x20646f(%rip),%rsi
2e31(3): test %rsi,%rsi
2e34(6): jz 0x3e9(%rip)
2e3a(7): mov 0x206457(%rip),%rdi
2e41(7): lea 0xfffffda8(%rip),%rcx
2e48(5): mov $0x10,%edx
2e4d(3): xor %r15d,%r15d
2e50(2): xor %ebp,%ebp
2e52(5): call 0xffffe89e(%rip)
2e57(7): mov 0x206442(%rip),%rbx
2e5e(7): mov 0x206433(%rip),%rcx
2e65(3): cmp %rbx,%r15
2e68(6): jnb 0x95(%rip)
2e6e(2): nop 
2e70(4): add $0x1,%r15
2e74(3): cmp %rbx,%r15
2e77(2): jnb 0x79(%rip)
2e79(3): mov %r15,%r13
2e7c(4): lea 0x0(%rcx,%rbp,1),%rdx
2e80(4): shl/sal $0x4,%r13
2e84(4): lea 0x0(%rcx,%r13,1),%rdi
2e88(4): mov 0x8(%rdx),%rax
2e8c(3): cmp (%rdi),%rax
2e8f(2): jb 0x61(%rip)
2e91(4): lea 0x20(%rbp),%r14
2e95(2): jmp 0x1c(%rip)
2e97(9): nop 0x0(%rax,%rax,1)
2ea0(4): lea 0x0(%rcx,%r13,1),%rdi
2ea4(4): lea 0x0(%rcx,%rbp,1),%rdx
2ea8(4): mov 0x8(%rdx),%rax
2eac(3): cmp %rax,(%rdi)
2eaf(2): jnbe 0x41(%rip)
2eb1(4): cmp %rax,0x8(%rdi)
2eb5(4): lea 0x0(%rcx,%r14,1),%rsi
2eb9(5): cmovnb 0x8(%rdi),%rax
2ebe(3): sub %r15,%rbx
2ec1(4): shl/sal $0x4,%rbx
2ec5(4): mov %rax,0x8(%rdx)
2ec9(4): lea 0xfffffff0(%rbx),%rdx
2ecd(5): call 0xffffea63(%rip)
2ed2(7): mov 0x2063c7(%rip),%rax
2ed9(7): mov 0x2063b8(%rip),%rcx
2ee0(4): lea 0xffffffff(%rax),%rbx
2ee4(3): cmp %r15,%rbx
2ee7(7): mov %rbx,0x2063b2(%rip)
2eee(2): jnbe 0xffffffb2(%rip)
2ef0(4): add $0x10,%rbp
2ef4(3): cmp %rbx,%r15
2ef7(6): jb 0xffffff79(%rip)
2efd(5): test $0x2,0x1c(%rsp)
2f02(6): jnz 0x12b(%rip)
2f08(4): add $0x1,%rbx
2f0c(3): mov %rcx,%rdi
2f0f(3): mov %rbx,%rsi
2f12(7): mov %rbx,0x206387(%rip)
2f19(4): shl/sal $0x4,%rsi
2f1d(5): call 0x2dc3(%rip)
2f22(7): mov 0x206377(%rip),%rdx
2f29(7): mov %rax,0x206368(%rip)
2f30(4): shl/sal $0x4,%rdx
2f34(5): lea 0xfffffff0(%rax,%rdx,1),%rax
2f39(7): mov $0xffffffff,%rdx
2f40(4): mov %rdx,0x8(%rax)
2f44(3): mov %rdx,(%rax)
2f47(4): add $0x28,%rsp
2f4b(1): pop %rbx
2f4c(1): pop %rbp
2f4d(2): pop %r12
2f4f(2): pop %r13
2f51(2): pop %r14
2f53(2): pop %r15
2f55(1): ret near (%rsp)
2f56(a): nop 0x0(%rax,%rax,1)
2f60(3): test %r12b,%r12b
2f63(6): jz 0xfffffe33(%rip)
2f69(7): nop 0x0(%rax)
2f70(5): cmp %r15,0x10(%rsp)
2f75(6): jnbe 0x1d3(%rip)
2f7b(5): mov 0x10(%rsp),%rdi
2f80(3): mov %r15,%rsi
2f83(5): call 0xfffffc8d(%rip)
2f88(5): jmp 0xfffffe1f(%rip)
2f8d(3): nop (%rax)
2f90(5): mov %r15,0x10(%rsp)
2f95(2): mov %ebx,%ebp
2f97(3): xor %r15d,%r15d
2f9a(5): jmp 0xfffffe20(%rip)
2f9f(1): nop 
2fa0(3): movsx %dl,%eax
2fa3(3): lea 0xffffffd0(%rax),%edx
2fa6(3): cmp $0x9,%edx
2fa9(6): jnbe 0x293(%rip)
2faf(3): test %r13b,%r13b
2fb2(2): jz 0x5e(%rip)
2fb4(8): cmp $0x0,0x20616c(%rip)
2fbc(2): jz 0x54(%rip)
2fbe(3): test %bpl,%bpl
2fc1(5): mov $0x1,%edx
2fc6(a): mov $0x1844674407370955161,%rcx
2fd0(4): cmovne %ebp,%r12d
2fd4(3): cmove %edx,%ebx
2fd7(3): cmp %rcx,%r15
2fda(6): jnbe 0x1a3(%rip)
2fe0(3): sub $0x30,%eax
2fe3(4): lea 0x0(%r15,%r15,4),%rdx
2fe7(2): cwde 
2fe9(4): lea 0x0(%rax,%rdx,2),%rax
2fed(3): cmp %r15,%rax
2ff0(6): jb 0x18d(%rip)
2ff6(4): cmp $0xffffffff,%rax
2ffa(6): jz 0x183(%rip)
3000(3): mov %rax,%r15
3003(6): mov $0x1,%r13d
3009(5): jmp 0xfffffdb1(%rip)
300e(2): nop 
3010(7): mov %r14,0x206111(%rip)
3017(2): jmp 0xffffffa7(%rip)
3019(4): add $0x1,%r14
301d(6): mov $0x1,%r15d
3023(5): mov $0x1,%ebx
3028(5): jmp 0xfffffcfb(%rip)
302d(3): mov (%rcx),%rax
3030(b): mov $0x0,0x20625d(%rip)
303b(b): mov $0x0,0x20625a(%rip)
3046(b): mov $0x0,0x2060df(%rip)
3051(4): cmp $0x1,%rax
3055(6): jnbe 0x94(%rip)
305b(4): cmp $0x1,%rbx
305f(2): jbe 0x46(%rip)
3061(3): mov %rbx,%rax
3064(4): lea 0x8(%rcx),%rbp
3068(4): shl/sal $0x4,%rax
306c(5): lea 0xfffffff8(%rcx,%rax,1),%r12
3071(7): nop 0x0(%rax)
3078(4): mov 0x0(%rbp),%rax
307c(4): lea 0x1(%rax),%rdi
3080(4): mov 0x8(%rbp),%rax
3084(3): cmp %rax,%rdi
3087(2): jz 0x15(%rip)
3089(4): lea 0xffffffff(%rax),%rsi
308d(5): mov %rcx,0x8(%rsp)
3092(5): call 0xfffffb7e(%rip)
3097(5): mov 0x8(%rsp),%rcx
309c(4): add $0x10,%rbp
30a0(3): cmp %rbp,%r12
30a3(2): jnz 0xffffffd5(%rip)
30a5(4): shl/sal $0x4,%rbx
30a9(5): mov 0xfffffff8(%rcx,%rbx,1),%rax
30ae(4): cmp $0xffffffff,%rax
30b2(2): jz 0x1c(%rip)
30b4(4): lea 0x1(%rax),%rdi
30b8(7): mov $0xffffffff,%rsi
30bf(5): mov %rcx,0x8(%rsp)
30c4(5): call 0xfffffb4c(%rip)
30c9(5): mov 0x8(%rsp),%rcx
30ce(3): mov %rcx,%rdi
30d1(5): call 0xffffe5af(%rip)
30d6(7): mov 0x2061c3(%rip),%rbx
30dd(7): mov 0x2061b4(%rip),%rcx
30e4(5): jmp 0xfffffe24(%rip)
30e9(4): lea 0xffffffff(%rax),%rsi
30ed(5): mov $0x1,%edi
30f2(5): mov %rcx,0x8(%rsp)
30f7(5): call 0xfffffb19(%rip)
30fc(5): mov 0x8(%rsp),%rcx
3101(5): jmp 0xffffff5a(%rip)
3106(5): test $0x4,0x1c(%rsp)
310b(5): mov $0x5,%edx
3110(2): jz 0x28(%rip)
3112(7): lea 0x3e17(%rip),%rsi
3119(2): xor %edi,%edi
311b(5): call 0xffffe625(%rip)
3120(3): mov %rax,%rdx
3123(2): xor %edi,%edi
3125(2): xor %esi,%esi
3127(2): xor %eax,%eax
3129(5): call 0xffffe817(%rip)
312e(5): mov $0x1,%edi
3133(5): call 0xfffff62d(%rip)
3138(7): lea 0x3d40(%rip),%rsi
313f(2): xor %edi,%edi
3141(5): call 0xffffe5ff(%rip)
3146(2): jmp 0xffffffda(%rip)
3148(7): lea 0x3d4b(%rip),%rsi
314f(5): mov $0x5,%edx
3154(2): xor %edi,%edi
3156(5): call 0xffffe5ea(%rip)
315b(2): jmp 0xffffffc5(%rip)
315d(5): test $0x4,0x1c(%rsp)
3162(5): mov $0x5,%edx
3167(6): jz 0x93(%rip)
316d(7): lea 0x3d9c(%rip),%rsi
3174(2): xor %edi,%edi
3176(5): call 0xffffe5ca(%rip)
317b(2): jmp 0xffffffa5(%rip)
317d(7): mov 0x205fa4(%rip),%rbx
3184(7): lea 0x3d28(%rip),%rsi
318b(3): mov %rbx,%rdi
318e(5): call 0xffffe672(%rip)
3193(3): mov %rbx,%rdi
3196(3): mov %rax,%rsi
3199(5): call 0x2d77(%rip)
319e(3): mov %rax,%rdi
31a1(3): mov %rax,%rbx
31a4(5): call 0x249c(%rip)
31a9(5): test $0x4,0x1c(%rsp)
31ae(3): mov %rax,%rbp
31b1(5): mov $0x5,%edx
31b6(2): jz 0x57(%rip)
31b8(7): lea 0x3dc9(%rip),%rsi
31bf(2): xor %edi,%edi
31c1(5): call 0xffffe57f(%rip)
31c6(3): mov %rax,%rdx
31c9(3): mov %rbp,%rcx
31cc(2): xor %esi,%esi
31ce(2): xor %edi,%edi
31d0(2): xor %eax,%eax
31d2(5): call 0xffffe76e(%rip)
31d7(3): mov %rbx,%rdi
31da(5): call 0xffffe4a6(%rip)
31df(5): mov $0x1,%edi
31e4(5): call 0xfffff57c(%rip)
31e9(5): mov $0x5,%edx
31ee(7): lea 0x3d6b(%rip),%rsi
31f5(5): jmp 0xffffff5f(%rip)
31fa(7): lea 0x3c6a(%rip),%rsi
3201(2): xor %edi,%edi
3203(5): call 0xffffe53d(%rip)
3208(5): jmp 0xffffff18(%rip)
320d(7): lea 0x3caa(%rip),%rsi
3214(2): xor %edi,%edi
3216(5): call 0xffffe52a(%rip)
321b(2): jmp 0xffffffab(%rip)
321d(5): test $0x4,0x1c(%rsp)
3222(5): mov $0x5,%edx
3227(2): jz 0x55(%rip)
3229(7): lea 0x3da8(%rip),%rsi
3230(2): xor %edi,%edi
3232(5): call 0xffffe50e(%rip)
3237(5): jmp 0xfffffee9(%rip)
323c(3): mov %r14,%rdi
323f(5): call 0x2401(%rip)
3244(5): test $0x4,0x1c(%rsp)
3249(3): mov %rax,%rbx
324c(5): mov $0x5,%edx
3251(2): jz 0x37(%rip)
3253(7): lea 0x3d56(%rip),%rsi
325a(2): xor %edi,%edi
325c(5): call 0xffffe4e4(%rip)
3261(3): mov %rax,%rdx
3264(2): xor %edi,%edi
3266(3): mov %rbx,%rcx
3269(2): xor %esi,%esi
326b(2): xor %eax,%eax
326d(5): call 0xffffe6d3(%rip)
3272(5): mov $0x1,%edi
3277(5): call 0xfffff4e9(%rip)
327c(7): lea 0x3c6f(%rip),%rsi
3283(5): jmp 0xfffffed1(%rip)
3288(7): lea 0x3c4c(%rip),%rsi
328f(2): xor %edi,%edi
3291(5): call 0xffffe4af(%rip)
3296(2): jmp 0xffffffcb(%rip)

"reset_fields" :
32a0(4): sub $0x8,%rsp
32a4(7): mov 0x205fed(%rip),%rdi
32ab(b): mov $0x0,0x205fea(%rip)
32b6(b): mov $0x0,0x205e6f(%rip)
32c1(5): call 0xffffe3bf(%rip)
32c6(b): mov $0x0,0x205fc7(%rip)
32d1(4): add $0x8,%rsp
32d5(1): ret near (%rsp)

"close_stdout_set_file_name" :
32e0(7): mov %rdi,0x205e59(%rip)
32e7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
32f0(7): mov %dil,0x205e41(%rip)
32f7(1): ret near (%rsp)

"close_stdout" :
3300(1): push %rbp
3301(1): push %rbx
3302(4): sub $0x8,%rsp
3306(7): mov 0x205d9b(%rip),%rdi
330d(5): call 0x2e03(%rip)
3312(2): test %eax,%eax
3314(2): jz 0x18(%rip)
3316(5): call 0xffffe38a(%rip)
331b(7): cmp $0x0,0x205e16(%rip)
3322(3): mov %rax,%rbx
3325(2): jz 0x1e(%rip)
3327(3): cmp $0x20,(%rax)
332a(2): jnz 0x19(%rip)
332c(7): mov 0x205dad(%rip),%rdi
3333(5): call 0x2ddd(%rip)
3338(2): test %eax,%eax
333a(2): jnz 0x48(%rip)
333c(4): add $0x8,%rsp
3340(1): pop %rbx
3341(1): pop %rbp
3342(1): ret near (%rsp)
3343(7): lea 0x3cbc(%rip),%rsi
334a(2): xor %edi,%edi
334c(5): mov $0x5,%edx
3351(5): call 0xffffe3ef(%rip)
3356(7): mov 0x205de3(%rip),%rdi
335d(3): mov %rax,%rbp
3360(3): test %rdi,%rdi
3363(2): jz 0x2a(%rip)
3365(5): call 0x20db(%rip)
336a(2): mov (%rbx),%esi
336c(7): lea 0x3c9f(%rip),%rdx
3373(3): mov %rax,%rcx
3376(3): mov %rbp,%r8
3379(2): xor %edi,%edi
337b(2): xor %eax,%eax
337d(5): call 0xffffe5c3(%rip)
3382(6): mov 0x205c98(%rip),%edi
3388(5): call 0xffffe338(%rip)
338d(2): mov (%rbx),%esi
338f(7): lea 0x3c80(%rip),%rdx
3396(3): mov %rax,%rcx
3399(2): xor %edi,%edi
339b(2): xor %eax,%eax
339d(5): call 0xffffe5a3(%rip)
33a2(2): jmp 0xffffffe0(%rip)

"fadvise" :
33c0(3): test %rdi,%rdi
33c3(2): jz 0x1d(%rip)
33c5(1): push %rbx
33c6(2): mov %esi,%ebx
33c8(5): call 0xffffe4b8(%rip)
33cd(2): mov %ebx,%ecx
33cf(2): xor %edx,%edx
33d1(2): xor %esi,%esi
33d3(1): pop %rbx
33d4(2): mov %eax,%edi
33d6(5): jmp 0xffffe43a(%rip)
33db(5): nop 0x0(%rax,%rax,1)
33e0(2): REP ret near (%rsp)

"getndelim2" :
33f0(2): push %r15
33f2(2): push %r14
33f4(2): push %r13
33f6(2): push %r12
33f8(1): push %rbp
33f9(1): push %rbx
33fa(4): sub $0x68,%rsp
33fe(3): mov (%rdi),%r15
3401(3): mov (%rsi),%r12
3404(9): mov $0x28,%rbx
340d(5): mov %rbx,0x58(%rsp)
3412(2): xor %ebx,%ebx
3414(5): mov %rdi,0x40(%rsp)
3419(5): mov %rsi,0x48(%rsp)
341e(3): test %r15,%r15
3421(5): mov %rdx,0x20(%rsp)
3426(5): mov %rcx,0x8(%rsp)
342b(5): mov %r8d,0x14(%rsp)
3430(5): mov %r9d,0x34(%rsp)
3435(8): mov 0xa0(%rsp),%r14
343d(6): jz 0x293(%rip)
3443(5): cmp 0x20(%rsp),%r12
3448(2): jnb 0x40(%rip)
344a(5): mov 0x40(%rsp),%rax
344f(3): mov %r15,(%rax)
3452(5): mov 0x48(%rsp),%rax
3457(3): mov %r12,(%rax)
345a(7): mov $0xffffffff,%rax
3461(5): mov 0x58(%rsp),%rbx
3466(9): xor $0x28,%rbx
346f(6): jnz 0x2fb(%rip)
3475(4): add $0x68,%rsp
3479(1): pop %rbx
347a(1): pop %rbp
347b(2): pop %r12
347d(2): pop %r13
347f(2): pop %r14
3481(2): pop %r15
3483(1): ret near (%rsp)
3484(4): nop 0x0(%rax)
3488(3): mov %r12,%rbp
348b(5): sub 0x20(%rsp),%rbp
3490(3): setz %dl
3493(5): cmp 0x8(%rsp),%r12
3498(3): setnb %al
349b(2): test %al,%dl
349d(2): jnz 0xffffffad(%rip)
349f(4): mov 0x14(%rsp),%eax
34a3(3): cmp $0xff,%eax
34a6(6): jz 0x12a(%rip)
34ac(4): mov 0x34(%rsp),%ebx
34b0(3): cmp $0xff,%ebx
34b3(3): cmove %eax,%ebx
34b6(4): mov %ebx,0x34(%rsp)
34ba(5): mov 0x20(%rsp),%rax
34bf(5): mov %r15,0x28(%rsp)
34c4(4): lea 0x0(%r15,%rax,1),%rbx
34c8(5): lea 0x50(%rsp),%rax
34cd(5): mov %rax,0x18(%rsp)
34d2(5): jmp 0x97(%rip)
34d7(9): nop 0x0(%rax,%rax,1)
34e0(5): cmp $0xff,0x14(%rsp)
34e5(5): mov 0x50(%rsp),%r13
34ea(6): jnz 0x1a6(%rip)
34f0(4): lea 0x1(%r13),%rcx
34f4(3): xor %r13d,%r13d
34f7(5): mov 0x8(%rsp),%rdi
34fc(3): cmp %rdi,%r12
34ff(2): jnb 0xb(%rip)
3501(3): cmp %rcx,%rbp
3504(6): jb 0xec(%rip)
350a(4): cmp $0x1,%rbp
350e(2): jbe 0x38(%rip)
3510(4): lea 0xffffffff(%rbp),%rcx
3514(5): cmp %rcx,0x50(%rsp)
3519(6): cmovbe 0x50(%rsp),%rcx
351f(3): test %r15,%r15
3522(6): jz 0xbe(%rip)
3528(3): mov %rcx,%rdx
352b(3): mov %r15,%rsi
352e(3): mov %rbx,%rdi
3531(5): mov %rcx,0x38(%rsp)
3536(5): call 0xffffe33a(%rip)
353b(5): mov 0x38(%rsp),%rcx
3540(3): add %rcx,%rbx
3543(3): sub %rcx,%rbp
3546(3): test %r15,%r15
3549(2): jz 0x17(%rip)
354b(5): mov 0x50(%rsp),%rsi
3550(3): mov %r14,%rdi
3553(5): call 0x2c3d(%rip)
3558(2): test %eax,%eax
355a(6): jnz 0x206(%rip)
3560(3): test %r13b,%r13b
3563(6): jnz 0x1c5(%rip)
3569(5): mov 0x18(%rsp),%rsi
356e(3): mov %r14,%rdi
3571(5): call 0x2a7f(%rip)
3576(3): test %rax,%rax
3579(3): mov %rax,%r15
357c(6): jnz 0xffffff64(%rip)
3582(4): mov 0x8(%r14),%rax
3586(4): cmp 0x10(%r14),%rax
358a(6): jnb 0x176(%rip)
3590(4): lea 0x1(%rax),%rdx
3594(4): mov %rdx,0x8(%r14)
3598(3): movzx (%rax),%eax
359b(4): mov %eax,0x30(%rsp)
359f(4): mov 0x30(%rsp),%eax
35a3(4): cmp %eax,0x14(%rsp)
35a7(5): mov $0x2,%ecx
35ac(9): mov $0x1,0x50(%rsp)
35b5(4): setz %r13b
35b9(4): cmp %eax,0x34(%rsp)
35bd(3): setz %al
35c0(3): or %eax,%r13d
35c3(5): jmp 0xffffff34(%rip)
35c8(8): nop 0x0(%rax,%rax,1)
35d0(4): mov 0x34(%rsp),%eax
35d4(4): mov %eax,0x14(%rsp)
35d8(5): jmp 0xfffffee2(%rip)
35dd(3): nop (%rax)
35e0(5): movzx 0x30(%rsp),%eax
35e5(2): mov %al,(%rbx)
35e7(5): jmp 0xffffff59(%rip)
35ec(4): nop 0x0(%rax)
35f0(5): lea 0x40(%r12),%rax
35f5(4): lea 0x0(%r12,%r12,1),%rdx
35f9(4): cmp $0x3f,%r12
35fd(4): cmovbe %rax,%rdx
3601(5): sub 0x28(%rsp),%rbx
3606(3): mov %rdx,%rsi
3609(3): sub %rbx,%rsi
360c(4): lea 0x0(%rbx,%rcx,1),%rax
3610(3): cmp %rcx,%rsi
3613(4): cmovnae %rax,%rdx
3617(3): cmp %rdx,%r12
361a(2): jnb 0x66(%rip)
361c(3): cmp %rdi,%rdx
361f(2): jnbe 0x61(%rip)
3621(5): mov 0x20(%rsp),%rax
3626(3): cmp %rax,%rdx
3629(2): jns 0x18(%rip)
362b(a): mov $0x-9223372036854775808,%rdx
3635(3): add %rax,%rdx
3638(3): cmp %rdx,%r12
363b(6): jz 0x125(%rip)
3641(5): mov 0x28(%rsp),%rdi
3646(3): mov %rdx,%rbp
3649(3): mov %rdx,%rsi
364c(3): sub %rbx,%rbp
364f(5): mov %rdx,0x38(%rsp)
3654(5): call 0xffffe29c(%rip)
3659(3): test %rax,%rax
365c(6): jz 0x104(%rip)
3662(5): mov 0x38(%rsp),%rdx
3667(3): add %rax,%rbx
366a(5): mov %rax,0x28(%rsp)
366f(3): mov %rdx,%r12
3672(5): jmp 0xfffffe98(%rip)
3677(9): nop 0x0(%rax,%rax,1)
3680(5): mov 0x8(%rsp),%rdx
3685(2): jmp 0xffffff9c(%rip)
3687(9): nop 0x0(%rax,%rax,1)
3690(4): mov 0x34(%rsp),%edx
3694(4): mov 0x14(%rsp),%esi
3698(3): mov %r13,%rcx
369b(3): mov %rax,%rdi
369e(5): call 0xd2(%rip)
36a3(3): test %rax,%rax
36a6(6): jz 0xfffffe4a(%rip)
36ac(3): sub %r15,%rax
36af(6): mov $0x1,%r13d
36b5(4): lea 0x1(%rax),%rdx
36b9(4): lea 0x2(%rax),%rcx
36bd(5): mov %rdx,0x50(%rsp)
36c2(5): jmp 0xfffffe35(%rip)
36c7(9): nop 0x0(%rax,%rax,1)
36d0(4): cmp $0x40,%rcx
36d4(6): mov $0x40,%r12d
36da(4): cmovbe %rcx,%r12
36de(3): mov %r12,%rdi
36e1(5): call 0xffffe1af(%rip)
36e6(3): test %rax,%rax
36e9(3): mov %rax,%r15
36ec(6): jnz 0xfffffd57(%rip)
36f2(5): jmp 0xfffffd68(%rip)
36f7(9): nop 0x0(%rax,%rax,1)
3700(3): mov %r14,%rdi
3703(5): call 0xffffdf6d(%rip)
3708(3): cmp $0xff,%eax
370b(4): mov %eax,0x30(%rsp)
370f(6): jnz 0xfffffe90(%rip)
3715(5): mov 0x28(%rsp),%r15
371a(3): cmp %r15,%rbx
371d(2): jnz 0x10(%rip)
371f(5): jmp 0xfffffd2b(%rip)
3724(4): nop 0x0(%rax)
3728(5): mov 0x28(%rsp),%r15
372d(5): mov 0x40(%rsp),%rsi
3732(5): mov 0x20(%rsp),%rax
3737(3): mov $0x0,(%rbx)
373a(3): mov %r15,(%rsi)
373d(5): mov 0x48(%rsp),%rsi
3742(3): add %r15,%rax
3745(3): sub %rax,%rbx
3748(3): mov %rbx,%rax
374b(3): mov %r12,(%rsi)
374e(6): jnz 0xfffffd13(%rip)
3754(5): jmp 0xfffffd06(%rip)
3759(7): nop 0x0(%rax)
3760(5): mov 0x28(%rsp),%r15
3765(5): jmp 0xfffffce5(%rip)
376a(5): call 0xffffe006(%rip)

"memchr2" :
3770(3): cmp %dl,%sil
3773(6): jz 0x19d(%rip)
3779(3): test %rcx,%rcx
377c(2): push %r15
377e(3): mov %edx,%r11d
3781(2): push %r14
3783(2): push %r13
3785(2): push %r12
3787(1): push %rbp
3788(1): push %rbx
3789(2): mov %esi,%ebx
378b(2): jz 0x49(%rip)
378d(4): test $0x7,%dil
3791(2): jz 0x43(%rip)
3793(3): movzx (%rdi),%eax
3796(2): cmp %dl,%al
3798(6): jz 0x160(%rip)
379e(3): cmp %sil,%al
37a1(2): jnz 0x29(%rip)
37a3(5): jmp 0x155(%rip)
37a8(8): nop 0x0(%rax,%rax,1)
37b0(4): test $0x7,%dil
37b4(2): jz 0x20(%rip)
37b6(3): movzx (%rdi),%eax
37b9(3): cmp %r11b,%al
37bc(6): jz 0x13c(%rip)
37c2(2): cmp %bl,%al
37c4(6): jz 0x134(%rip)
37ca(4): add $0x1,%rdi
37ce(4): sub $0x1,%rcx
37d2(2): jnz 0xffffffde(%rip)
37d4(3): mov %esi,%r12d
37d7(4): movzx %sil,%eax
37db(3): mov %edx,%r13d
37de(4): shl/sal $0x8,%r12d
37e2(4): shl/sal $0x8,%r13d
37e6(4): movzx %r12w,%r12d
37ea(4): movzx %r13w,%r13d
37ee(3): or %eax,%r12d
37f1(3): movzx %dl,%eax
37f4(3): movsxd %r12d,%r12
37f7(3): or %eax,%r13d
37fa(3): mov %r12,%rax
37fd(3): movsxd %r13d,%r13
3800(4): shl/sal $0x10,%rax
3804(3): or %rax,%r12
3807(3): mov %r13,%rax
380a(4): shl/sal $0x10,%rax
380e(3): or %rax,%r13
3811(3): mov %r12,%rax
3814(4): shl/sal $0x20,%rax
3818(3): or %rax,%r12
381b(3): mov %r13,%rax
381e(4): shl/sal $0x20,%rax
3822(3): or %rax,%r13
3825(4): cmp $0x7,%rcx
3829(6): jbe 0xf3(%rip)
382f(3): mov (%rdi),%rax
3832(3): mov %r12,%r9
3835(a): mov $0x-72340172838076673,%rbp
383f(a): mov $0x-9187201950435737472,%r15
3849(3): xor %rax,%r9
384c(3): xor %r13,%rax
384f(4): lea 0x0(%r9,%rbp,1),%r8
3853(3): not %r9
3856(3): and %r9,%r8
3859(4): lea 0x0(%rax,%rbp,1),%r9
385d(3): not %rax
3860(3): and %r9,%rax
3863(3): or %r8,%rax
3866(3): test %r15,%rax
3869(6): jnz 0xb8(%rip)
386f(4): lea 0xfffffff8(%rcx),%r9
3873(3): mov %rdi,%rax
3876(3): mov %r9,%r14
3879(4): and $0x7,%r14d
387d(2): jmp 0x2f(%rip)
387f(1): nop 
3880(3): mov (%rax),%rdi
3883(3): mov %rdi,%r10
3886(3): xor %r13,%rdi
3889(3): xor %r12,%r10
388c(4): lea 0x0(%r10,%rbp,1),%r8
3890(3): not %r10
3893(3): and %r10,%r8
3896(4): lea 0x0(%rdi,%rbp,1),%r10
389a(3): not %rdi
389d(3): and %r10,%rdi
38a0(3): or %rdi,%r8
38a3(3): test %r15,%r8
38a6(2): jnz 0x12(%rip)
38a8(4): sub $0x8,%r9
38ac(4): add $0x8,%rax
38b0(3): cmp %r14,%r9
38b3(3): mov %r9,%rcx
38b6(2): jnz 0xffffffca(%rip)
38b8(3): test %rcx,%rcx
38bb(2): jz 0x2a(%rip)
38bd(3): movzx (%rax),%edi
38c0(3): cmp %dl,%dil
38c3(2): jz 0x24(%rip)
38c5(3): cmp %sil,%dil
38c8(2): jz 0x1f(%rip)
38ca(4): lea 0x0(%rax,%rcx,1),%rdx
38ce(2): jmp 0xe(%rip)
38d0(3): movzx (%rax),%ecx
38d3(2): cmp %bl,%cl
38d5(2): jz 0x12(%rip)
38d7(3): cmp %r11b,%cl
38da(2): jz 0xd(%rip)
38dc(4): add $0x1,%rax
38e0(3): cmp %rdx,%rax
38e3(2): jnz 0xffffffed(%rip)
38e5(2): xor %eax,%eax
38e7(1): pop %rbx
38e8(1): pop %rbp
38e9(2): pop %r12
38eb(2): pop %r13
38ed(2): pop %r14
38ef(2): pop %r15
38f1(1): ret near (%rsp)
38f2(6): nop 0x0(%rax,%rax,1)
38f8(1): pop %rbx
38f9(3): mov %rdi,%rax
38fc(1): pop %rbp
38fd(2): pop %r12
38ff(2): pop %r13
3901(2): pop %r14
3903(2): pop %r15
3905(1): ret near (%rsp)
3906(a): nop 0x0(%rax,%rax,1)
3910(4): movzx %sil,%esi
3914(3): mov %rcx,%rdx
3917(5): jmp 0xffffdf09(%rip)
391c(3): mov %rdi,%rax
391f(2): jmp 0xffffff99(%rip)
3921(3): mov %rdi,%rax
3924(2): jmp 0xffffff99(%rip)

"set_program_name" :
3930(3): test %rdi,%rdi
3933(1): push %rbx
3934(2): jz 0x79(%rip)
3936(5): mov $0x2f,%esi
393b(3): mov %rdi,%rbx
393e(5): call 0xffffde72(%rip)
3943(3): test %rax,%rax
3946(2): jz 0x57(%rip)
3948(4): lea 0x1(%rax),%r8
394c(3): mov %r8,%rdx
394f(3): sub %rbx,%rdx
3952(4): cmp $0x6,%rdx
3956(2): jle 0x47(%rip)
3958(4): lea 0xfffffffa(%rax),%rsi
395c(7): lea 0x36f5(%rip),%rdi
3963(5): mov $0x7,%ecx
3968(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
396a(3): setnbe %dl
396d(3): sbb $0x0,%dl
3970(2): test %dl,%dl
3972(2): jnz 0x2b(%rip)
3974(7): lea 0x36e5(%rip),%rdi
397b(5): mov $0x3,%ecx
3980(3): mov %r8,%rsi
3983(3): mov %r8,%rbx
3986(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3988(3): setnbe %dl
398b(3): sbb $0x0,%dl
398e(2): test %dl,%dl
3990(2): jnz 0xd(%rip)
3992(4): lea 0x4(%rax),%rbx
3996(7): mov %rbx,0x205703(%rip)
399d(7): mov %rbx,0x2057a4(%rip)
39a4(7): mov %rbx,0x20571d(%rip)
39ab(1): pop %rbx
39ac(1): ret near (%rsp)
39ad(7): mov 0x20572c(%rip),%rcx
39b4(7): lea 0x3665(%rip),%rdi
39bb(5): mov $0x37,%edx
39c0(5): mov $0x1,%esi
39c5(5): call 0xffffdfcb(%rip)
39ca(5): call 0xffffdcc6(%rip)

"gettext_quote.part.1" :
39d0(1): push %rbp
39d1(1): push %rbx
39d2(3): mov %rdi,%rbp
39d5(2): mov %esi,%ebx
39d7(4): sub $0x8,%rsp
39db(5): call 0x2985(%rip)
39e0(3): movzx (%rax),%edx
39e3(3): and $0xdf,%edx
39e6(3): cmp $0x55,%dl
39e9(2): jz 0x77(%rip)
39eb(3): cmp $0x47,%dl
39ee(2): jz 0x22(%rip)
39f0(7): lea 0x367c(%rip),%rax
39f7(7): lea 0x3677(%rip),%rdx
39fe(3): cmp $0x9,%ebx
3a01(4): cmovne %rdx,%rax
3a05(4): add $0x8,%rsp
3a09(1): pop %rbx
3a0a(1): pop %rbp
3a0b(1): ret near (%rsp)
3a0c(4): nop 0x0(%rax)
3a10(4): movzx 0x1(%rax),%edx
3a14(3): and $0xdf,%edx
3a17(3): cmp $0x42,%dl
3a1a(2): jnz 0xffffffd6(%rip)
3a1c(4): cmp $0x31,0x2(%rax)
3a20(2): jnz 0xffffffd0(%rip)
3a22(4): cmp $0x38,0x3(%rax)
3a26(2): jnz 0xffffffca(%rip)
3a28(4): cmp $0x30,0x4(%rax)
3a2c(2): jnz 0xffffffc4(%rip)
3a2e(4): cmp $0x33,0x5(%rax)
3a32(2): jnz 0xffffffbe(%rip)
3a34(4): cmp $0x30,0x6(%rax)
3a38(2): jnz 0xffffffb8(%rip)
3a3a(4): cmp $0x0,0x7(%rax)
3a3e(2): jnz 0xffffffb2(%rip)
3a40(4): cmp $0x60,0x0(%rbp)
3a44(7): lea 0x3621(%rip),%rax
3a4b(7): lea 0x361e(%rip),%rdx
3a52(4): cmovne %rdx,%rax
3a56(4): add $0x8,%rsp
3a5a(1): pop %rbx
3a5b(1): pop %rbp
3a5c(1): ret near (%rsp)
3a5d(3): nop (%rax)
3a60(4): movzx 0x1(%rax),%edx
3a64(3): and $0xdf,%edx
3a67(3): cmp $0x54,%dl
3a6a(2): jnz 0xffffff86(%rip)
3a6c(4): movzx 0x2(%rax),%edx
3a70(3): and $0xdf,%edx
3a73(3): cmp $0x46,%dl
3a76(6): jnz 0xffffff7a(%rip)
3a7c(4): cmp $0x2d,0x3(%rax)
3a80(6): jnz 0xffffff70(%rip)
3a86(4): cmp $0x38,0x4(%rax)
3a8a(6): jnz 0xffffff66(%rip)
3a90(4): cmp $0x0,0x5(%rax)
3a94(6): jnz 0xffffff5c(%rip)
3a9a(4): cmp $0x60,0x0(%rbp)
3a9e(7): lea 0x35bf(%rip),%rax
3aa5(7): lea 0x35bc(%rip),%rdx
3aac(4): cmovne %rdx,%rax
3ab0(4): add $0x8,%rsp
3ab4(1): pop %rbx
3ab5(1): pop %rbp
3ab6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3ac0(2): push %r15
3ac2(2): push %r14
3ac4(3): mov %r8d,%r15d
3ac7(2): push %r13
3ac9(2): push %r12
3acb(3): mov %rdi,%r14
3ace(1): push %rbp
3acf(1): push %rbx
3ad0(3): mov %r9d,%ebx
3ad3(3): mov %rsi,%r13
3ad6(3): mov %rcx,%rbp
3ad9(3): and $0x2,%ebx
3adc(7): sub $0xb8,%rsp
3ae3(8): mov 0xf0(%rsp),%rax
3aeb(5): mov %rdx,0x10(%rsp)
3af0(5): mov %r8d,0x8(%rsp)
3af5(5): mov %r9d,0x78(%rsp)
3afa(5): mov %rax,0x20(%rsp)
3aff(8): mov 0xf8(%rsp),%rax
3b07(5): mov %rax,0x68(%rsp)
3b0c(8): mov 0x100(%rsp),%rax
3b14(5): mov %rax,0x60(%rsp)
3b19(9): mov $0x28,%rax
3b22(8): mov %rax,0xa8(%rsp)
3b2a(2): xor %eax,%eax
3b2c(5): call 0xffffdc24(%rip)
3b31(4): cmp $0xa,%r15d
3b35(5): mov %rax,0x58(%rsp)
3b3a(6): jnbe 0x11b5(%rip)
3b40(7): lea 0x3599(%rip),%rcx
3b47(3): mov %r15d,%edx
3b4a(4): movsxd 0x0(%rcx,%rdx,4),%rax
3b4e(3): add %rcx,%rax
3b51(2): jmp %rax
3b53(5): mov $0x1,0xe(%rsp)
3b58(5): mov $0x0,0x7c(%rsp)
3b5d(3): xor %r12d,%r12d
3b60(9): mov $0x0,0x50(%rsp)
3b69(5): mov $0x1,0xf(%rsp)
3b6e(5): mov $0x0,0xd(%rsp)
3b73(7): lea 0x34fb(%rip),%rax
3b7a(9): mov $0x1,0x18(%rsp)
3b83(3): xor %r15d,%r15d
3b86(8): mov $0x2,0x8(%rsp)
3b8e(5): mov %rax,0x48(%rsp)
3b93(3): xor %r11d,%r11d
3b96(3): mov %rbp,%rax
3b99(3): mov %r12d,%r8d
3b9c(3): mov %r11,%rbp
3b9f(3): mov %rax,%r11
3ba2(6): nop 0x0(%rax,%rax,1)
3ba8(3): cmp %rbp,%r11
3bab(4): setnz %r12b
3baf(4): cmp $0xffffffff,%r11
3bb3(2): jnz 0xf(%rip)
3bb5(5): mov 0x10(%rsp),%rax
3bba(4): cmp $0x0,0x0(%rax,%rbp,1)
3bbe(4): setnz %r12b
3bc2(3): test %r12b,%r12b
3bc5(6): jz 0x65b(%rip)
3bcb(5): cmp $0x2,0x8(%rsp)
3bd0(5): mov 0x10(%rsp),%rdi
3bd5(4): lea 0x0(%rdi,%rbp,1),%r9
3bd9(3): setnz %al
3bdc(4): and 0xd(%rsp),%al
3be0(3): mov %eax,%r10d
3be3(6): jz 0xad(%rip)
3be9(5): mov 0x18(%rsp),%rax
3bee(3): test %rax,%rax
3bf1(6): jz 0x42f(%rip)
3bf7(4): cmp $0xffffffff,%r11
3bfb(5): lea 0x0(%rbp,%rax,1),%rbx
3c00(2): jnz 0x30(%rip)
3c02(4): cmp $0x1,%rax
3c06(2): jbe 0x2a(%rip)
3c08(5): mov %r8b,0x38(%rsp)
3c0d(5): mov %r10b,0x30(%rsp)
3c12(5): mov %r9,0x28(%rsp)
3c17(5): call 0xffffdb49(%rip)
3c1c(6): movzx 0x38(%rsp),%r8d
3c22(6): movzx 0x30(%rsp),%r10d
3c28(3): mov %rax,%r11
3c2b(5): mov 0x28(%rsp),%r9
3c30(3): cmp %r11,%rbx
3c33(5): mov %r10b,0x28(%rsp)
3c38(6): jnbe 0x5b8(%rip)
3c3e(5): mov 0x18(%rsp),%rdx
3c43(5): mov 0x48(%rsp),%rsi
3c48(3): mov %r9,%rdi
3c4b(5): mov %r11,0x40(%rsp)
3c50(5): mov %r8b,0x38(%rsp)
3c55(5): mov %r9,0x30(%rsp)
3c5a(5): call 0xffffdbe6(%rip)
3c5f(2): test %eax,%eax
3c61(5): mov 0x30(%rsp),%r9
3c66(6): movzx 0x38(%rsp),%r8d
3c6c(5): mov 0x40(%rsp),%r11
3c71(6): jnz 0x57f(%rip)
3c77(5): cmp $0x0,0xf(%rsp)
3c7c(6): movzx 0x28(%rsp),%r10d
3c82(6): jnz 0xf83(%rip)
3c88(8): nop 0x0(%rax,%rax,1)
3c90(4): movzx (%r9),%ebx
3c94(3): cmp $0x7e,%bl
3c97(6): jnbe 0x321(%rip)
3c9d(7): lea 0x3468(%rip),%rcx
3ca4(3): movzx %bl,%edx
3ca7(4): movsxd 0x0(%rcx,%rdx,4),%rax
3cab(3): add %rcx,%rax
3cae(2): jmp %rax
3cb0(3): xor %r10d,%r10d
3cb3(4): cmp $0x1,%r11
3cb7(3): setnz %al
3cba(4): cmp $0xffffffff,%r11
3cbe(2): jnz 0xe(%rip)
3cc0(5): mov 0x10(%rsp),%rax
3cc5(4): cmp $0x0,0x1(%rax)
3cc9(3): setnz %al
3ccc(5): cmp $0x2,0x8(%rsp)
3cd1(3): setz %dl
3cd4(2): test %al,%al
3cd6(6): jz 0x252(%rip)
3cdc(3): xor %r12d,%r12d
3cdf(2): xor %eax,%eax
3ce1(7): nop 0x0(%rax)
3ce8(5): cmp $0x1,0xd(%rsp)
3ced(6): jnz 0x115(%rip)
3cf3(2): test %dl,%dl
3cf5(6): jnz 0x10d(%rip)
3cfb(5): mov 0x20(%rsp),%rsi
3d00(3): test %rsi,%rsi
3d03(2): jz 0x16(%rip)
3d05(2): mov %ebx,%edx
3d07(3): shr $0x5,%dl
3d0a(3): movzx %dl,%edx
3d0d(3): mov 0x0(%rsi,%rdx,4),%edx
3d10(3): bt %ebx,%edx
3d13(6): jb 0x150(%rip)
3d19(3): test %r10b,%r10b
3d1c(6): jnz 0x147(%rip)
3d22(3): xor $0x1,%eax
3d25(4): add $0x1,%rbp
3d29(3): and %r8d,%eax
3d2c(2): test %al,%al
3d2e(2): jz 0x22(%rip)
3d30(3): cmp %r15,%r13
3d33(2): jbe 0x7(%rip)
3d35(5): mov $0x27,0x0(%r14,%r15,1)
3d3a(4): lea 0x1(%r15),%rax
3d3e(3): cmp %rax,%r13
3d41(2): jbe 0x8(%rip)
3d43(6): mov $0x27,0x1(%r14,%r15,1)
3d49(4): add $0x2,%r15
3d4d(3): xor %r8d,%r8d
3d50(3): cmp %r13,%r15
3d53(2): jnb 0x6(%rip)
3d55(4): mov %bl,0x0(%r14,%r15,1)
3d59(5): movzx 0xe(%rsp),%edi
3d5e(4): add $0x1,%r15
3d62(5): mov $0x0,%eax
3d67(3): test %r12b,%r12b
3d6a(3): cmove %eax,%edi
3d6d(5): mov %dil,0xe(%rsp)
3d72(5): jmp 0xfffffe36(%rip)
3d77(9): nop 0x0(%rax,%rax,1)
3d80(3): xor %r10d,%r10d
3d83(4): mov 0x8(%rsp),%eax
3d87(3): cmp $0x2,%eax
3d8a(6): jz 0x5be(%rip)
3d90(3): cmp $0x5,%eax
3d93(6): jz 0x575(%rip)
3d99(3): cmp $0x2,%eax
3d9c(5): mov $0x3f,%ebx
3da1(3): setz %dl
3da4(3): xor %r12d,%r12d
3da7(2): xor %eax,%eax
3da9(5): jmp 0xffffff3f(%rip)
3dae(2): nop 
3db0(3): xor %r10d,%r10d
3db3(5): cmp $0x2,0x8(%rsp)
3db8(6): jz 0x508(%rip)
3dbe(5): mov %r12b,0x7c(%rsp)
3dc3(2): xor %edx,%edx
3dc5(2): xor %eax,%eax
3dc7(5): mov $0x27,%ebx
3dcc(5): jmp 0xffffff1c(%rip)
3dd1(7): nop 0x0(%rax)
3dd8(5): mov $0x9,%edx
3ddd(5): mov $0x74,%ebx
3de2(5): cmp $0x2,0x8(%rsp)
3de7(3): setz %al
3dea(4): and 0xf(%rsp),%al
3dee(6): jnz 0x150(%rip)
3df4(5): cmp $0x0,0xd(%rsp)
3df9(2): jnz 0x67(%rip)
3dfb(2): mov %edx,%ebx
3dfd(3): xor %r12d,%r12d
3e00(2): xor %eax,%eax
3e02(5): cmp $0x0,0xf(%rsp)
3e07(6): jnz 0xfffffef4(%rip)
3e0d(5): jmp 0xffffff0c(%rip)
3e12(6): nop 0x0(%rax,%rax,1)
3e18(5): mov $0x8,%edx
3e1d(5): mov $0x62,%ebx
3e22(2): jmp 0xffffffd2(%rip)
3e24(4): nop 0x0(%rax)
3e28(5): cmp $0x2,0x8(%rsp)
3e2d(6): jz 0x3d3(%rip)
3e33(5): cmp $0x0,0xd(%rsp)
3e38(6): jz 0x218(%rip)
3e3e(5): cmp $0x0,0xf(%rsp)
3e43(6): jz 0x20d(%rip)
3e49(6): cmp $0x0,0x18(%rsp)
3e4f(6): jnz 0x3bc(%rip)
3e55(5): mov $0x5c,%ebx
3e5a(6): nop 0x0(%rax,%rax,1)
3e60(3): xor %r12d,%r12d
3e63(5): cmp $0x2,0x8(%rsp)
3e68(3): setz %dl
3e6b(5): cmp $0x0,0xf(%rsp)
3e70(2): mov %edx,%eax
3e72(6): jnz 0x856(%rip)
3e78(3): mov %r8d,%eax
3e7b(3): xor $0x1,%eax
3e7e(2): and %dl,%al
3e80(2): jz 0x31(%rip)
3e82(3): cmp %r15,%r13
3e85(2): jbe 0x7(%rip)
3e87(5): mov $0x27,0x0(%r14,%r15,1)
3e8c(4): lea 0x1(%r15),%rdx
3e90(3): cmp %rdx,%r13
3e93(2): jbe 0x8(%rip)
3e95(6): mov $0x24,0x1(%r14,%r15,1)
3e9b(4): lea 0x2(%r15),%rdx
3e9f(3): cmp %rdx,%r13
3ea2(2): jbe 0x8(%rip)
3ea4(6): mov $0x27,0x2(%r14,%r15,1)
3eaa(4): add $0x3,%r15
3eae(3): mov %eax,%r8d
3eb1(3): cmp %r15,%r13
3eb4(2): jbe 0x7(%rip)
3eb6(5): mov $0x5c,0x0(%r14,%r15,1)
3ebb(4): add $0x1,%r15
3ebf(4): add $0x1,%rbp
3ec3(5): jmp 0xfffffe8d(%rip)
3ec8(8): nop 0x0(%rax,%rax,1)
3ed0(5): cmp $0x0,0xd(%rsp)
3ed5(6): jnz 0x1ce(%rip)
3edb(2): xor %edx,%edx
3edd(5): test $0x1,0x78(%rsp)
3ee2(6): jz 0xffffff19(%rip)
3ee8(4): add $0x1,%rbp
3eec(5): jmp 0xfffffcbc(%rip)
3ef1(7): nop 0x0(%rax)
3ef8(5): cmp $0x2,0x8(%rsp)
3efd(3): setz %dl
3f00(2): xor %eax,%eax
3f02(5): jmp 0xfffffde6(%rip)
3f07(9): nop 0x0(%rax,%rax,1)
3f10(5): mov $0x7,%edx
3f15(5): mov $0x61,%ebx
3f1a(5): jmp 0xfffffeda(%rip)
3f1f(1): nop 
3f20(5): cmp $0x2,0x8(%rsp)
3f25(3): setz %dl
3f28(3): test %rbp,%rbp
3f2b(6): jnz 0xfffffdb1(%rip)
3f31(5): movzx 0xf(%rsp),%eax
3f36(2): and %dl,%al
3f38(6): jz 0xfffffdb0(%rip)
3f3e(3): mov %r11,%rbp
3f41(8): mov $0x2,0x8(%rsp)
3f49(5): jmp 0x700(%rip)
3f4e(2): nop 
3f50(5): cmp $0x2,0x8(%rsp)
3f55(3): setz %dl
3f58(3): xor %r12d,%r12d
3f5b(2): jmp 0xffffffd6(%rip)
3f5d(3): nop (%rax)
3f60(5): cmp $0x2,0x8(%rsp)
3f65(5): mov $0x20,%ebx
3f6a(3): setz %dl
3f6d(2): jmp 0xffffffc4(%rip)
3f6f(1): nop 
3f70(5): mov $0xd,%edx
3f75(5): mov $0x72,%ebx
3f7a(5): jmp 0xfffffe68(%rip)
3f7f(1): nop 
3f80(5): mov $0xc,%edx
3f85(5): mov $0x66,%ebx
3f8a(5): jmp 0xfffffe6a(%rip)
3f8f(1): nop 
3f90(5): mov $0xb,%edx
3f95(5): mov $0x76,%ebx
3f9a(5): jmp 0xfffffe5a(%rip)
3f9f(1): nop 
3fa0(5): mov $0xa,%edx
3fa5(5): mov $0x6e,%ebx
3faa(5): jmp 0xfffffe38(%rip)
3faf(1): nop 
3fb0(3): xor %r10d,%r10d
3fb3(5): nop 0x0(%rax,%rax,1)
3fb8(6): cmp $0x1,0x58(%rsp)
3fbe(6): jnz 0x3aa(%rip)
3fc4(5): mov %r11,0x38(%rsp)
3fc9(5): mov %r8b,0x30(%rsp)
3fce(5): mov %r10b,0x28(%rsp)
3fd3(5): call 0xffffd9fd(%rip)
3fd8(3): mov (%rax),%rcx
3fdb(3): movzx %bl,%edx
3fde(6): movzx 0x28(%rsp),%r10d
3fe4(6): movzx 0x30(%rsp),%r8d
3fea(5): mov 0x38(%rsp),%r11
3fef(5): mov $0x1,%edi
3ff4(4): movzx 0x0(%rcx,%rdx,2),%eax
3ff8(4): and $0x4000,%ax
3ffc(4): setnz %r12b
4000(3): setz %al
4003(4): and 0xd(%rsp),%al
4007(2): test %al,%al
4009(6): jnz 0x998(%rip)
400f(5): cmp $0x2,0x8(%rsp)
4014(3): setz %dl
4017(5): jmp 0xfffffcd1(%rip)
401c(4): nop 0x0(%rax)
4020(4): movzx (%r9),%ebx
4024(3): cmp $0x7e,%bl
4027(2): jnbe 0xffffff89(%rip)
4029(7): lea 0x32d8(%rip),%rcx
4030(3): movzx %bl,%edx
4033(4): movsxd 0x0(%rcx,%rdx,4),%rax
4037(3): add %rcx,%rax
403a(2): jmp %rax
403c(4): nop 0x0(%rax)
4040(3): xor %r10d,%r10d
4043(5): cmp $0x0,0xd(%rsp)
4048(6): jnz 0xfffffdf6(%rip)
404e(2): nop 
4050(5): mov $0x5c,%edx
4055(5): mov $0x5c,%ebx
405a(5): jmp 0xfffffd9a(%rip)
405f(1): nop 
4060(5): mov $0xc,%edx
4065(3): xor %r10d,%r10d
4068(5): mov $0x66,%ebx
406d(5): jmp 0xfffffd87(%rip)
4072(6): nop 0x0(%rax,%rax,1)
4078(5): mov $0xa,%edx
407d(3): xor %r10d,%r10d
4080(5): mov $0x6e,%ebx
4085(5): jmp 0xfffffd5d(%rip)
408a(6): nop 0x0(%rax,%rax,1)
4090(5): mov $0x61,%ebx
4095(5): jmp 0xfffffdcb(%rip)
409a(6): nop 0x0(%rax,%rax,1)
40a0(3): xor %r10d,%r10d
40a3(5): cmp $0x2,0x8(%rsp)
40a8(3): setz %dl
40ab(5): cmp $0x0,0xf(%rsp)
40b0(6): jnz 0xb9a(%rip)
40b6(3): mov %r8d,%eax
40b9(3): mov %r15,%rcx
40bc(3): xor $0x1,%eax
40bf(2): and %dl,%al
40c1(2): jz 0x2f(%rip)
40c3(3): cmp %r15,%r13
40c6(2): jbe 0x7(%rip)
40c8(5): mov $0x27,0x0(%r14,%r15,1)
40cd(4): lea 0x1(%r15),%rcx
40d1(3): cmp %rcx,%r13
40d4(2): jbe 0x8(%rip)
40d6(6): mov $0x24,0x1(%r14,%r15,1)
40dc(4): lea 0x2(%r15),%rcx
40e0(3): cmp %rcx,%r13
40e3(6): jnbe 0x636(%rip)
40e9(4): lea 0x3(%r15),%rcx
40ed(3): mov %eax,%r8d
40f0(3): cmp %rcx,%r13
40f3(2): jbe 0x7(%rip)
40f5(5): mov $0x5c,0x0(%r14,%rcx,1)
40fa(5): cmp $0x2,0x8(%rsp)
40ff(4): lea 0x1(%rcx),%r15
4103(6): jz 0x606(%rip)
4109(4): lea 0x1(%rbp),%rax
410d(3): cmp %r11,%rax
4110(2): jnb 0x1b(%rip)
4112(5): mov 0x10(%rsp),%rax
4117(5): movzx 0x1(%rax,%rbp,1),%eax
411c(4): mov %al,0x28(%rsp)
4120(3): sub $0x30,%eax
4123(2): cmp $0x9,%al
4125(6): jbe 0x834(%rip)
412b(3): mov %r12d,%eax
412e(5): mov $0x30,%ebx
4133(3): xor %r12d,%r12d
4136(5): jmp 0xfffffbb2(%rip)
413b(5): nop 0x0(%rax,%rax,1)
4140(5): cmp $0x2,0x8(%rsp)
4145(3): mov %r10d,%r12d
4148(3): setz %dl
414b(3): xor %r10d,%r10d
414e(2): xor %eax,%eax
4150(5): jmp 0xfffffb98(%rip)
4155(3): nop (%rax)
4158(5): cmp $0x2,0x8(%rsp)
415d(3): setz %dl
4160(3): xor %r10d,%r10d
4163(5): jmp 0xfffffdc5(%rip)
4168(8): nop 0x0(%rax,%rax,1)
4170(5): cmp $0x2,0x8(%rsp)
4175(3): setz %dl
4178(3): xor %r10d,%r10d
417b(3): xor %r12d,%r12d
417e(5): jmp 0xfffffdb3(%rip)
4183(5): nop 0x0(%rax,%rax,1)
4188(5): cmp $0x2,0x8(%rsp)
418d(3): mov %r10d,%r12d
4190(5): mov $0x20,%ebx
4195(3): setz %dl
4198(3): xor %r10d,%r10d
419b(5): jmp 0xfffffd96(%rip)
41a0(5): mov $0xd,%edx
41a5(3): xor %r10d,%r10d
41a8(5): mov $0x72,%ebx
41ad(5): jmp 0xfffffc35(%rip)
41b2(6): nop 0x0(%rax,%rax,1)
41b8(5): mov $0x76,%ebx
41bd(5): jmp 0xfffffca3(%rip)
41c2(6): nop 0x0(%rax,%rax,1)
41c8(5): mov $0x9,%edx
41cd(3): xor %r10d,%r10d
41d0(5): mov $0x74,%ebx
41d5(5): jmp 0xfffffc0d(%rip)
41da(6): nop 0x0(%rax,%rax,1)
41e0(5): mov $0x62,%ebx
41e5(5): jmp 0xfffffc7b(%rip)
41ea(6): nop 0x0(%rax,%rax,1)
41f0(3): xor %r10d,%r10d
41f3(5): jmp 0xfffffa9d(%rip)
41f8(8): nop 0x0(%rax,%rax,1)
4200(5): cmp $0x0,0xf(%rsp)
4205(6): jnz 0x96b(%rip)
420b(4): add $0x1,%rbp
420f(3): mov %r8d,%eax
4212(3): xor %r12d,%r12d
4215(5): mov $0x5c,%ebx
421a(5): jmp 0xfffffb12(%rip)
421f(1): nop 
4220(5): cmp $0x2,0x8(%rsp)
4225(5): movzx 0xf(%rsp),%ebx
422a(3): mov %r8d,%r12d
422d(3): mov %r11,%rbp
4230(3): setz %dl
4233(2): mov %ebx,%eax
4235(3): test %r15,%r15
4238(3): setz %cl
423b(2): and %edx,%eax
423d(2): and %cl,%al
423f(6): jnz 0xa67(%rip)
4245(2): mov %ebx,%eax
4247(3): xor $0x1,%eax
424a(2): and %al,%dl
424c(6): jz 0x970(%rip)
4252(5): cmp $0x0,0x7c(%rsp)
4257(6): jz 0x963(%rip)
425d(5): cmp $0x0,0xe(%rsp)
4262(6): jnz 0x9fb(%rip)
4268(3): test %r13,%r13
426b(3): setz %al
426e(6): cmp $0x0,0x50(%rsp)
4274(3): setnz %dl
4277(2): and %dl,%al
4279(6): jz 0xa23(%rip)
427f(5): mov 0x50(%rsp),%r13
4284(7): lea 0x2dea(%rip),%rbx
428b(4): mov $0x27,(%r14)
428f(8): mov $0x2,0x8(%rsp)
4297(6): mov $0x1,%r15d
429d(9): mov $0x1,0x18(%rsp)
42a6(5): mov $0x0,0xf(%rsp)
42ab(5): mov %rbx,0x48(%rsp)
42b0(4): mov %al,0x7c(%rsp)
42b4(5): jmp 0xfffff8df(%rip)
42b9(7): nop 0x0(%rax)
42c0(5): cmp $0x0,0xf(%rsp)
42c5(6): jnz 0x8ab(%rip)
42cb(3): test %r13,%r13
42ce(6): jz 0x402(%rip)
42d4(2): xor %edx,%edx
42d6(6): cmp $0x0,0x50(%rsp)
42dc(6): jnz 0x3f4(%rip)
42e2(5): mov %r13,0x50(%rsp)
42e7(4): add $0x3,%r15
42eb(2): xor %eax,%eax
42ed(5): mov %r12b,0x7c(%rsp)
42f2(3): xor %r8d,%r8d
42f5(3): mov %rdx,%r13
42f8(5): mov $0x27,%ebx
42fd(5): jmp 0xfffffa1c(%rip)
4302(6): nop 0x0(%rax,%rax,1)
4308(5): test $0x4,0x78(%rsp)
430d(2): jz 0x23(%rip)
430f(4): lea 0x2(%rbp),%rcx
4313(3): cmp %r11,%rcx
4316(2): jnb 0x1a(%rip)
4318(5): mov 0x10(%rsp),%rax
431d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4322(6): jz 0x790(%rip)
4328(8): nop 0x0(%rax,%rax,1)
4330(2): xor %edx,%edx
4332(3): xor %r12d,%r12d
4335(2): xor %eax,%eax
4337(5): mov $0x3f,%ebx
433c(5): jmp 0xfffff9ac(%rip)
4341(7): nop 0x0(%rax)
4348(5): cmp $0x0,0xf(%rsp)
434d(6): jnz 0x823(%rip)
4353(3): xor %r12d,%r12d
4356(2): xor %eax,%eax
4358(5): mov $0x3f,%ebx
435d(5): jmp 0xfffff9bc(%rip)
4362(6): nop 0x0(%rax,%rax,1)
4368(8): lea 0xa0(%rsp),%rax
4370(4): cmp $0xffffffff,%r11
4374(c): mov $0x0,0xa0(%rsp)
4380(5): mov %rax,0x28(%rsp)
4385(2): jnz 0x2f(%rip)
4387(5): mov 0x10(%rsp),%rdi
438c(5): mov %r8b,0x40(%rsp)
4391(5): mov %r10b,0x38(%rsp)
4396(5): mov %r9,0x30(%rsp)
439b(5): call 0xffffd3c5(%rip)
43a0(6): movzx 0x40(%rsp),%r8d
43a6(6): movzx 0x38(%rsp),%r10d
43ac(3): mov %rax,%r11
43af(5): mov 0x30(%rsp),%r9
43b4(8): lea 0x9c(%rsp),%rax
43bc(2): xor %ecx,%ecx
43be(4): mov %bl,0x7e(%rsp)
43c2(5): mov %r8b,0x7d(%rsp)
43c7(3): mov %rcx,%rbx
43ca(8): mov %r9,0x88(%rsp)
43d2(5): mov %rax,0x38(%rsp)
43d7(5): mov %r10b,0x7f(%rsp)
43dc(8): mov %r15,0x80(%rsp)
43e4(5): mov %r14,0x40(%rsp)
43e9(5): mov %r13,0x70(%rsp)
43ee(5): mov %r11,0x30(%rsp)
43f3(5): mov 0x10(%rsp),%rax
43f8(5): lea 0x0(%rbp,%rbx,1),%r14
43fd(5): mov 0x30(%rsp),%rdx
4402(5): mov 0x28(%rsp),%rcx
4407(5): mov 0x38(%rsp),%rdi
440c(4): lea 0x0(%rax,%r14,1),%r13
4410(3): sub %r14,%rdx
4413(3): mov %r13,%rsi
4416(5): call 0x1c6a(%rip)
441b(3): test %rax,%rax
441e(3): mov %rax,%r15
4421(2): jz 0x50(%rip)
4423(4): cmp $0xffffffff,%rax
4427(6): jz 0x61e(%rip)
442d(4): cmp $0xfffffffe,%rax
4431(6): jz 0x5a0(%rip)
4437(5): cmp $0x2,0x8(%rsp)
443c(3): setz %al
443f(4): and 0xf(%rsp),%al
4443(6): jnz 0x19d(%rip)
4449(7): mov 0x9c(%rsp),%edi
4450(5): call 0xffffd570(%rip)
4455(5): mov 0x28(%rsp),%rdi
445a(2): test %eax,%eax
445c(5): mov $0x0,%eax
4461(4): cmove %eax,%r12d
4465(3): add %r15,%rbx
4468(5): call 0xffffd548(%rip)
446d(2): test %eax,%eax
446f(2): jz 0xffffff84(%rip)
4471(3): mov %r12d,%edx
4474(3): mov %rbx,%rdi
4477(6): movzx 0x7d(%rsp),%r8d
447d(3): xor $0x1,%edx
4480(5): movzx 0x7e(%rsp),%ebx
4485(6): movzx 0x7f(%rsp),%r10d
448b(4): and 0xd(%rsp),%dl
448f(8): mov 0x80(%rsp),%r15
4497(5): mov 0x40(%rsp),%r14
449c(5): mov 0x70(%rsp),%r13
44a1(5): mov 0x30(%rsp),%r11
44a6(4): cmp $0x1,%rdi
44aa(6): jbe 0x601(%rip)
44b0(3): mov %rdi,%rcx
44b3(2): xor %esi,%esi
44b5(6): movzx 0xf(%rsp),%r9d
44bb(3): add %rbp,%rcx
44be(5): mov 0x10(%rsp),%rdi
44c3(5): jmp 0xbb(%rip)
44c8(8): nop 0x0(%rax,%rax,1)
44d0(5): cmp $0x2,0x8(%rsp)
44d5(3): setz %al
44d8(3): test %r9b,%r9b
44db(6): jnz 0x4b5(%rip)
44e1(3): mov %r8d,%esi
44e4(3): xor $0x1,%esi
44e7(3): and %sil,%al
44ea(2): jz 0x31(%rip)
44ec(3): cmp %r15,%r13
44ef(2): jbe 0x7(%rip)
44f1(5): mov $0x27,0x0(%r14,%r15,1)
44f6(4): lea 0x1(%r15),%rsi
44fa(3): cmp %rsi,%r13
44fd(2): jbe 0x8(%rip)
44ff(6): mov $0x24,0x1(%r14,%r15,1)
4505(4): lea 0x2(%r15),%rsi
4509(3): cmp %rsi,%r13
450c(2): jbe 0x8(%rip)
450e(6): mov $0x27,0x2(%r14,%r15,1)
4514(4): add $0x3,%r15
4518(3): mov %eax,%r8d
451b(3): cmp %r15,%r13
451e(2): jbe 0x7(%rip)
4520(5): mov $0x5c,0x0(%r14,%r15,1)
4525(4): lea 0x1(%r15),%rax
4529(3): cmp %rax,%r13
452c(2): jbe 0xf(%rip)
452e(2): mov %ebx,%eax
4530(3): shr $0x6,%al
4533(3): add $0x30,%eax
4536(5): mov %al,0x1(%r14,%r15,1)
453b(4): lea 0x2(%r15),%rax
453f(3): cmp %rax,%r13
4542(2): jbe 0x12(%rip)
4544(2): mov %ebx,%eax
4546(3): shr $0x3,%al
4549(3): and $0x7,%eax
454c(3): add $0x30,%eax
454f(5): mov %al,0x2(%r14,%r15,1)
4554(3): and $0x7,%ebx
4557(4): add $0x1,%rbp
455b(4): add $0x3,%r15
455f(3): add $0x30,%ebx
4562(3): cmp %rcx,%rbp
4565(6): jnb 0xfffff7eb(%rip)
456b(2): mov %edx,%esi
456d(3): cmp %r15,%r13
4570(2): jbe 0x6(%rip)
4572(4): mov %bl,0x0(%r14,%r15,1)
4576(4): movzx 0x0(%rdi,%rbp,1),%ebx
457a(4): add $0x1,%r15
457e(2): test %dl,%dl
4580(6): jnz 0xffffff50(%rip)
4586(2): mov %esi,%eax
4588(3): xor $0x1,%eax
458b(3): and %r8d,%eax
458e(3): test %r10b,%r10b
4591(2): jz 0x10(%rip)
4593(3): cmp %r15,%r13
4596(2): jbe 0x7(%rip)
4598(5): mov $0x5c,0x0(%r14,%r15,1)
459d(4): add $0x1,%r15
45a1(4): add $0x1,%rbp
45a5(3): cmp %rcx,%rbp
45a8(6): jnb 0xfffff784(%rip)
45ae(2): test %al,%al
45b0(6): jz 0x3fe(%rip)
45b6(3): cmp %r15,%r13
45b9(2): jbe 0x7(%rip)
45bb(5): mov $0x27,0x0(%r14,%r15,1)
45c0(4): lea 0x1(%r15),%rax
45c4(3): cmp %rax,%r13
45c7(2): jbe 0x8(%rip)
45c9(6): mov $0x27,0x1(%r14,%r15,1)
45cf(4): add $0x2,%r15
45d3(3): xor %r10d,%r10d
45d6(3): xor %r8d,%r8d
45d9(2): jmp 0xffffff94(%rip)
45db(5): nop 0x0(%rax,%rax,1)
45e0(4): cmp $0x1,%r15
45e4(6): jz 0xfffffe65(%rip)
45ea(5): mov 0x10(%rsp),%rdi
45ef(4): lea 0x0(%rdi,%r15,1),%rcx
45f3(5): lea 0x1(%rdi,%r14,1),%rdx
45f8(4): lea 0x0(%rcx,%r14,1),%r8
45fc(2): jmp 0x11(%rip)
45fe(2): nop 
4600(4): add $0x1,%rdx
4604(3): cmp %rdx,%r8
4607(6): jz 0xfffffe42(%rip)
460d(3): movzx (%rdx),%ecx
4610(3): sub $0x5b,%ecx
4613(3): cmp $0x21,%cl
4616(2): jnbe 0xffffffea(%rip)
4618(5): mov $0x1,%esi
461d(3): shl/sal %cl,%rsi
4620(3): mov %rsi,%rcx
4623(a): mov $0x8589934635,%rsi
462d(3): test %rsi,%rcx
4630(2): jz 0xffffffd0(%rip)
4632(5): mov 0x40(%rsp),%r14
4637(5): mov 0x70(%rsp),%r13
463c(5): mov 0x30(%rsp),%rbp
4641(8): mov $0x2,0x8(%rsp)
4649(5): cmp $0x0,0xd(%rsp)
464e(2): jz 0x12(%rip)
4650(2): test %al,%al
4652(5): mov $0x4,%eax
4657(5): cmove 0x8(%rsp),%eax
465c(4): mov %eax,0x8(%rsp)
4660(4): sub $0x8,%rsp
4664(3): mov %rbp,%rcx
4667(3): mov %r13,%rsi
466a(4): push 0x68(%rsp)
466e(4): push 0x78(%rsp)
4672(3): mov %r14,%rdi
4675(2): push $0x0
4677(8): mov 0x98(%rsp),%r9d
467f(5): mov 0x28(%rsp),%r8d
4684(5): mov 0x30(%rsp),%rdx
4689(4): and $0xfd,%r9d
468d(5): call 0xfffff433(%rip)
4692(4): add $0x20,%rsp
4696(3): mov %rax,%r15
4699(8): mov 0xa8(%rsp),%rbx
46a1(9): xor $0x28,%rbx
46aa(3): mov %r15,%rax
46ad(6): jnz 0x606(%rip)
46b3(7): add $0xb8,%rsp
46ba(1): pop %rbx
46bb(1): pop %rbp
46bc(2): pop %r12
46be(2): pop %r13
46c0(2): pop %r14
46c2(2): pop %r15
46c4(1): ret near (%rsp)
46c5(3): nop (%rax)
46c8(3): mov %r11,%rbp
46cb(5): jmp 0xffffff7e(%rip)
46d0(3): cmp %r15,%r13
46d3(2): jbe 0x7(%rip)
46d5(5): mov $0x27,0x0(%r14,%r15,1)
46da(4): lea 0x1(%r15),%rax
46de(3): cmp %rax,%r13
46e1(2): jbe 0x8(%rip)
46e3(6): mov $0x5c,0x1(%r14,%r15,1)
46e9(4): lea 0x2(%r15),%rax
46ed(3): cmp %rax,%r13
46f0(6): jbe 0x5f2(%rip)
46f6(3): mov %r13,%rdx
46f9(6): mov $0x27,0x2(%r14,%r15,1)
46ff(5): mov 0x50(%rsp),%r13
4704(5): jmp 0xfffffbde(%rip)
4709(3): mov %r12d,%eax
470c(5): mov $0x30,%ebx
4711(3): xor %r12d,%r12d
4714(5): jmp 0xfffff605(%rip)
4719(6): mov $0x27,0x2(%r14,%r15,1)
471f(5): jmp 0xfffff9ca(%rip)
4724(2): test %ebx,%ebx
4726(6): jnz 0xfffff42d(%rip)
472c(5): mov $0x1,0xd(%rsp)
4731(3): test %r13,%r13
4734(6): jnz 0x596(%rip)
473a(7): lea 0x2934(%rip),%rax
4741(9): mov $0x0,0x50(%rsp)
474a(5): mov $0x1,0xe(%rsp)
474f(5): mov $0x0,0x7c(%rsp)
4754(3): xor %r12d,%r12d
4757(5): mov $0x0,0xf(%rsp)
475c(9): mov $0x1,0x18(%rsp)
4765(5): mov %rax,0x48(%rsp)
476a(6): mov $0x1,%r15d
4770(8): mov $0x2,0x8(%rsp)
4778(5): jmp 0xfffff41b(%rip)
477d(3): nop (%rax)
4780(2): test %ebx,%ebx
4782(6): jnz 0x3fb(%rip)
4788(3): test %r13,%r13
478b(6): jz 0x22b(%rip)
4791(4): mov $0x22,(%r14)
4795(5): mov $0x1,0xe(%rsp)
479a(3): xor %r12d,%r12d
479d(5): mov $0x0,0x7c(%rsp)
47a2(9): mov $0x0,0x50(%rsp)
47ab(7): lea 0x28c1(%rip),%rax
47b2(5): mov $0x0,0xf(%rsp)
47b7(5): mov $0x1,0xd(%rsp)
47bc(9): mov $0x1,0x18(%rsp)
47c5(6): mov $0x1,%r15d
47cb(5): mov %rax,0x48(%rsp)
47d0(5): jmp 0xfffff3c3(%rip)
47d5(7): lea 0x2897(%rip),%rax
47dc(5): mov $0x1,0xe(%rsp)
47e1(5): mov $0x0,0x7c(%rsp)
47e6(3): xor %r12d,%r12d
47e9(9): mov $0x0,0x50(%rsp)
47f2(5): mov $0x1,0xf(%rsp)
47f7(5): mov $0x1,0xd(%rsp)
47fc(9): mov $0x1,0x18(%rsp)
4805(3): xor %r15d,%r15d
4808(5): mov %rax,0x48(%rsp)
480d(8): mov $0x5,0x8(%rsp)
4815(5): jmp 0xfffff37e(%rip)
481a(5): mov $0x1,0xe(%rsp)
481f(5): mov $0x0,0x7c(%rsp)
4824(3): xor %r12d,%r12d
4827(9): mov $0x0,0x50(%rsp)
4830(5): mov $0x0,0xf(%rsp)
4835(3): xor %r15d,%r15d
4838(5): mov $0x1,0xd(%rsp)
483d(9): mov $0x0,0x18(%rsp)
4846(9): mov $0x0,0x48(%rsp)
484f(5): jmp 0xfffff344(%rip)
4854(5): cmp $0xa,0x8(%rsp)
4859(2): jz 0x58(%rip)
485b(7): lea 0x2815(%rip),%rsi
4862(2): xor %edi,%edi
4864(5): mov $0x5,%edx
4869(5): call 0xffffced7(%rip)
486e(3): mov %rax,%rcx
4871(5): mov %rax,0x68(%rsp)
4876(7): lea 0x27fa(%rip),%rax
487d(3): cmp %rax,%rcx
4880(6): jz 0x39e(%rip)
4886(7): lea 0x27e8(%rip),%rsi
488d(2): xor %edi,%edi
488f(5): mov $0x5,%edx
4894(5): call 0xffffceac(%rip)
4899(3): mov %rax,%rcx
489c(5): mov %rax,0x60(%rsp)
48a1(7): lea 0x27cd(%rip),%rax
48a8(3): cmp %rax,%rcx
48ab(6): jz 0x389(%rip)
48b1(3): xor %r15d,%r15d
48b4(2): test %ebx,%ebx
48b6(6): jz 0x1c7(%rip)
48bc(2): test %ebx,%ebx
48be(5): mov 0x60(%rsp),%rbx
48c3(5): setnz 0xf(%rsp)
48c8(3): xor %r12d,%r12d
48cb(3): mov %rbx,%rdi
48ce(5): call 0xffffce92(%rip)
48d3(5): mov %rbx,0x48(%rsp)
48d8(5): mov %rax,0x18(%rsp)
48dd(5): mov $0x1,0xe(%rsp)
48e2(5): mov $0x0,0x7c(%rsp)
48e7(9): mov $0x0,0x50(%rsp)
48f0(5): mov $0x1,0xd(%rsp)
48f5(5): jmp 0xfffff29e(%rip)
48fa(5): mov $0x1,0xe(%rsp)
48ff(5): mov $0x0,0x7c(%rsp)
4904(3): xor %r12d,%r12d
4907(9): mov $0x0,0x50(%rsp)
4910(5): mov $0x0,0xf(%rsp)
4915(3): xor %r15d,%r15d
4918(5): mov $0x0,0xd(%rsp)
491d(9): mov $0x0,0x18(%rsp)
4926(9): mov $0x0,0x48(%rsp)
492f(5): jmp 0xfffff264(%rip)
4934(5): mov $0x1,0xe(%rsp)
4939(5): mov $0x0,0x7c(%rsp)
493e(3): xor %r12d,%r12d
4941(9): mov $0x0,0x50(%rsp)
494a(5): mov $0x1,0xf(%rsp)
494f(5): mov $0x1,0xd(%rsp)
4954(5): jmp 0xfffff21f(%rip)
4959(3): cmp %r15,%r13
495c(2): jbe 0x7(%rip)
495e(5): mov $0x30,0x0(%r14,%r15,1)
4963(4): lea 0x2(%rcx),%rax
4967(3): cmp %rax,%r13
496a(2): jbe 0x8(%rip)
496c(6): mov $0x30,0x2(%r14,%rcx,1)
4972(3): mov %r12d,%eax
4975(4): lea 0x3(%rcx),%r15
4979(3): xor %r12d,%r12d
497c(5): mov $0x30,%ebx
4981(5): jmp 0xfffff367(%rip)
4986(a): nop 0x0(%rax,%rax,1)
4990(5): movzx 0xf(%rsp),%ebx
4995(3): mov %r11,%rbp
4998(4): mov %bl,0xd(%rsp)
499c(5): jmp 0xfffffcad(%rip)
49a1(5): movzx 0xd(%rsp),%edx
49a6(3): xor %r12d,%r12d
49a9(5): jmp 0xfffffb07(%rip)
49ae(3): xor %r10d,%r10d
49b1(5): jmp 0xfffffbbc(%rip)
49b6(9): mov $0x0,0x50(%rsp)
49bf(5): mov $0x1,0xe(%rsp)
49c4(3): xor %r12d,%r12d
49c7(5): mov $0x0,0x7c(%rsp)
49cc(5): jmp 0xfffffddf(%rip)
49d1(5): mov 0x30(%rsp),%r11
49d6(3): mov %r14,%rsi
49d9(3): mov %r13,%rcx
49dc(3): mov %rbx,%rax
49df(3): mov %rbx,%rdi
49e2(6): movzx 0x7d(%rsp),%r8d
49e8(5): movzx 0x7e(%rsp),%ebx
49ed(8): mov 0x88(%rsp),%r9
49f5(3): cmp %r11,%rsi
49f8(6): movzx 0x7f(%rsp),%r10d
49fe(8): mov 0x80(%rsp),%r15
4a06(5): mov 0x40(%rsp),%r14
4a0b(5): mov 0x70(%rsp),%r13
4a10(2): jnb 0x28(%rip)
4a12(3): cmp $0x0,(%rcx)
4a15(2): jnz 0x12(%rip)
4a17(2): jmp 0x21(%rip)
4a19(7): nop 0x0(%rax)
4a20(5): cmp $0x0,0x0(%r9,%rax,1)
4a25(2): jz 0x10(%rip)
4a27(4): add $0x1,%rax
4a2b(5): lea 0x0(%rbp,%rax,1),%rdx
4a30(3): cmp %rdx,%r11
4a33(2): jnbe 0xffffffed(%rip)
4a35(3): mov %rax,%rdi
4a38(5): movzx 0xd(%rsp),%edx
4a3d(3): xor %r12d,%r12d
4a40(5): jmp 0xfffffa66(%rip)
4a45(3): mov %rbx,%rdi
4a48(6): movzx 0x7d(%rsp),%r8d
4a4e(5): movzx 0x7e(%rsp),%ebx
4a53(6): movzx 0x7f(%rsp),%r10d
4a59(8): mov 0x80(%rsp),%r15
4a61(3): xor %r12d,%r12d
4a64(5): mov 0x40(%rsp),%r14
4a69(5): mov 0x70(%rsp),%r13
4a6e(5): mov 0x30(%rsp),%r11
4a73(5): movzx 0xd(%rsp),%edx
4a78(5): jmp 0xfffffa2e(%rip)
4a7d(5): mov 0x68(%rsp),%rdx
4a82(3): movzx (%rdx),%eax
4a85(2): test %al,%al
4a87(6): jz 0xfffffe35(%rip)
4a8d(3): nop (%rax)
4a90(3): cmp %r15,%r13
4a93(2): jbe 0x6(%rip)
4a95(4): mov %al,0x0(%r14,%r15,1)
4a99(4): add $0x1,%r15
4a9d(5): movzx 0x0(%rdx,%r15,1),%eax
4aa2(2): test %al,%al
4aa4(2): jnz 0xffffffec(%rip)
4aa6(5): jmp 0xfffffe16(%rip)
4aab(2): mov %edx,%eax
4aad(5): jmp 0xfffff55a(%rip)
4ab2(4): movzx 0x0(%rax,%rcx,1),%ebx
4ab6(3): cmp $0x3e,%bl
4ab9(6): jnbe 0xfffff877(%rip)
4abf(a): mov $0x8070630310989004800,%rax
4ac9(4): bt %rbx,%rax
4acd(6): jnb 0xfffff863(%rip)
4ad3(5): cmp $0x0,0xf(%rsp)
4ad8(6): jnz 0x1ea(%rip)
4ade(3): cmp %r15,%r13
4ae1(2): jbe 0x7(%rip)
4ae3(5): mov $0x3f,0x0(%r14,%r15,1)
4ae8(4): lea 0x1(%r15),%rax
4aec(3): cmp %rax,%r13
4aef(2): jbe 0x8(%rip)
4af1(6): mov $0x22,0x1(%r14,%r15,1)
4af7(4): lea 0x2(%r15),%rax
4afb(3): cmp %rax,%r13
4afe(2): jbe 0x8(%rip)
4b00(6): mov $0x22,0x2(%r14,%r15,1)
4b06(4): lea 0x3(%r15),%rax
4b0a(3): cmp %rax,%r13
4b0d(2): jbe 0x8(%rip)
4b0f(6): mov $0x3f,0x3(%r14,%r15,1)
4b15(4): add $0x4,%r15
4b19(2): xor %edx,%edx
4b1b(3): xor %r12d,%r12d
4b1e(2): xor %eax,%eax
4b20(3): mov %rcx,%rbp
4b23(5): jmp 0xfffff1c5(%rip)
4b28(2): test %ebx,%ebx
4b2a(6): jz 0x18e(%rip)
4b30(7): lea 0x253e(%rip),%rax
4b37(5): mov $0x1,0xe(%rsp)
4b3c(5): mov $0x0,0x7c(%rsp)
4b41(3): xor %r12d,%r12d
4b44(9): mov $0x0,0x50(%rsp)
4b4d(5): mov $0x1,0xf(%rsp)
4b52(5): mov $0x0,0xd(%rsp)
4b57(9): mov $0x1,0x18(%rsp)
4b60(3): xor %r15d,%r15d
4b63(5): mov %rax,0x48(%rsp)
4b68(5): jmp 0xfffff02b(%rip)
4b6d(3): nop (%rax)
4b70(3): mov %r11,%rbp
4b73(5): movzx 0xf(%rsp),%eax
4b78(5): jmp 0xfffffad1(%rip)
4b7d(7): lea 0x24ef(%rip),%rax
4b84(5): mov $0x1,0xe(%rsp)
4b89(5): mov $0x0,0x7c(%rsp)
4b8e(3): xor %r12d,%r12d
4b91(9): mov $0x0,0x50(%rsp)
4b9a(5): mov $0x1,0xf(%rsp)
4b9f(5): mov $0x1,0xd(%rsp)
4ba4(9): mov $0x1,0x18(%rsp)
4bad(3): xor %r15d,%r15d
4bb0(5): mov %rax,0x48(%rsp)
4bb5(5): jmp 0xffffefde(%rip)
4bba(2): mov %edx,%eax
4bbc(5): mov 0x48(%rsp),%rbx
4bc1(3): test %rbx,%rbx
4bc4(2): jz 0x2e(%rip)
4bc6(2): test %al,%al
4bc8(2): jz 0x2a(%rip)
4bca(3): movzx (%rbx),%ecx
4bcd(3): mov %rbx,%rax
4bd0(2): test %cl,%cl
4bd2(2): jz 0x20(%rip)
4bd4(3): mov %r15,%rdx
4bd7(3): sub %r15,%rax
4bda(3): cmp %rdx,%r13
4bdd(2): jbe 0x6(%rip)
4bdf(4): mov %cl,0x0(%r14,%rdx,1)
4be3(4): add $0x1,%rdx
4be7(4): movzx 0x0(%rax,%rdx,1),%ecx
4beb(2): test %cl,%cl
4bed(2): jnz 0xffffffed(%rip)
4bef(3): mov %rdx,%r15
4bf2(3): cmp %r15,%r13
4bf5(6): jbe 0xfffffaa4(%rip)
4bfb(5): mov $0x0,0x0(%r14,%r15,1)
4c00(5): jmp 0xfffffa99(%rip)
4c05(5): cmp $0x2,0x8(%rsp)
4c0a(5): movzx 0xf(%rsp),%ebx
4c0f(3): mov %r11,%rbp
4c12(3): setz %al
4c15(4): mov %bl,0xd(%rsp)
4c19(5): jmp 0xfffffa30(%rip)
4c1e(4): mov 0x8(%rsp),%esi
4c22(3): mov %rcx,%rdi
4c25(5): call 0xffffedab(%rip)
4c2a(5): mov %rax,0x68(%rsp)
4c2f(5): jmp 0xfffffc57(%rip)
4c34(4): mov 0x8(%rsp),%esi
4c38(3): mov %rcx,%rdi
4c3b(5): call 0xffffed95(%rip)
4c40(5): mov %rax,0x60(%rsp)
4c45(5): jmp 0xfffffc6c(%rip)
4c4a(5): movzx 0xf(%rsp),%ebx
4c4f(3): mov %r11,%rbp
4c52(2): mov %edx,%eax
4c54(4): mov %bl,0xd(%rsp)
4c58(5): jmp 0xfffff9f1(%rip)
4c5d(4): sub $0x8,%rsp
4c61(6): mov $0x5,%r8d
4c67(3): mov %r11,%rcx
4c6a(4): push 0x68(%rsp)
4c6e(4): push 0x78(%rsp)
4c72(3): mov %r14,%rdi
4c75(4): push 0x38(%rsp)
4c79(8): mov 0x98(%rsp),%r9d
4c81(5): mov 0x30(%rsp),%rdx
4c86(5): mov 0x70(%rsp),%rsi
4c8b(5): call 0xffffee35(%rip)
4c90(4): add $0x20,%rsp
4c94(3): mov %rax,%r15
4c97(5): jmp 0xfffffa02(%rip)
4c9c(5): movzx 0x7c(%rsp),%eax
4ca1(5): jmp 0xffffff1b(%rip)
4ca6(8): mov $0x2,0x8(%rsp)
4cae(5): jmp 0xfffff99b(%rip)
4cb3(5): call 0xffffcabd(%rip)
4cb8(5): mov $0x0,0xd(%rsp)
4cbd(5): jmp 0xfffffa74(%rip)
4cc2(3): mov %r11,%rbp
4cc5(5): jmp 0xfffff99b(%rip)
4cca(5): mov $0x1,0xe(%rsp)
4ccf(2): xor %eax,%eax
4cd1(3): xor %r12d,%r12d
4cd4(9): mov $0x0,0x50(%rsp)
4cdd(5): jmp 0xfffff5a7(%rip)
4ce2(3): mov %r13,%rdx
4ce5(5): mov 0x50(%rsp),%r13
4cea(5): jmp 0xfffff5f8(%rip)
4cef(5): call 0xffffc9a1(%rip)

"quotearg_n_options" :
4d00(2): push %r15
4d02(2): push %r14
4d04(3): movsxd %edi,%r15
4d07(2): push %r13
4d09(2): push %r12
4d0b(3): mov %rdx,%r14
4d0e(1): push %rbp
4d0f(1): push %rbx
4d10(3): mov %rcx,%rbp
4d13(4): sub $0x28,%rsp
4d17(5): mov %rsi,0x8(%rsp)
4d1c(5): call 0xffffc984(%rip)
4d21(3): mov %rax,%r13
4d24(2): mov (%rax),%eax
4d26(3): test %r15d,%r15d
4d29(7): mov 0x204350(%rip),%rbx
4d30(4): mov %eax,0x18(%rsp)
4d34(6): js 0x16d(%rip)
4d3a(7): cmp %r15d,0x204337(%rip)
4d41(2): jnle 0x64(%rip)
4d43(7): cmp $0x7fffffff,%r15d
4d4a(6): jz 0x15c(%rip)
4d50(4): lea 0x1(%r15),%r12d
4d54(7): lea 0x204335(%rip),%rax
4d5b(3): movsxd %r12d,%rsi
4d5e(4): shl/sal $0x4,%rsi
4d62(3): cmp %rax,%rbx
4d65(6): jz 0x11b(%rip)
4d6b(3): mov %rbx,%rdi
4d6e(5): call 0xf72(%rip)
4d73(3): mov %rax,%rbx
4d76(7): mov %rax,0x204303(%rip)
4d7d(7): movsxd 0x2042f4(%rip),%rdi
4d84(3): mov %r12d,%edx
4d87(2): xor %esi,%esi
4d89(2): sub %edi,%edx
4d8b(4): shl/sal $0x4,%rdi
4d8f(3): movsxd %edx,%rdx
4d92(3): add %rbx,%rdi
4d95(4): shl/sal $0x4,%rdx
4d99(5): call 0xffffca47(%rip)
4d9e(7): mov %r12d,0x2042d3(%rip)
4da5(3): mov 0x4(%rbp),%eax
4da8(4): shl/sal $0x4,%r15
4dac(4): sub $0x8,%rsp
4db0(3): add %r15,%rbx
4db3(4): lea 0x8(%rbp),%r15
4db7(4): mov 0x0(%rbp),%r8d
4dbb(3): mov (%rbx),%r11
4dbe(4): mov 0x8(%rbx),%r12
4dc2(3): mov %r14,%rcx
4dc5(3): or $0x1,%eax
4dc8(4): mov %eax,0x24(%rsp)
4dcc(3): push 0x30(%rbp)
4dcf(3): mov %eax,%r9d
4dd2(3): push 0x28(%rbp)
4dd5(2): push %r15
4dd7(3): mov %r11,%rsi
4dda(5): mov 0x28(%rsp),%rdx
4ddf(3): mov %r12,%rdi
4de2(5): mov %r11,0x30(%rsp)
4de7(5): call 0xffffecd9(%rip)
4dec(4): add $0x20,%rsp
4df0(5): mov 0x10(%rsp),%r11
4df5(3): cmp %rax,%r11
4df8(2): jnbe 0x69(%rip)
4dfa(4): lea 0x1(%rax),%rsi
4dfe(7): lea 0x20435b(%rip),%rax
4e05(3): cmp %rax,%r12
4e08(3): mov %rsi,(%rbx)
4e0b(2): jz 0x14(%rip)
4e0d(3): mov %r12,%rdi
4e10(5): mov %rsi,0x10(%rsp)
4e15(5): call 0xffffc86b(%rip)
4e1a(5): mov 0x10(%rsp),%rsi
4e1f(3): mov %rsi,%rdi
4e22(5): mov %rsi,0x10(%rsp)
4e27(5): call 0xe59(%rip)
4e2c(4): sub $0x8,%rsp
4e30(4): mov %rax,0x8(%rbx)
4e34(4): mov 0x0(%rbp),%r8d
4e38(3): push 0x30(%rbp)
4e3b(3): push 0x28(%rbp)
4e3e(3): mov %r14,%rcx
4e41(2): push %r15
4e43(5): mov 0x3c(%rsp),%r9d
4e48(3): mov %rax,%rdi
4e4b(5): mov 0x28(%rsp),%rdx
4e50(5): mov 0x30(%rsp),%rsi
4e55(3): mov %rax,%r12
4e58(5): call 0xffffec68(%rip)
4e5d(4): add $0x20,%rsp
4e61(4): mov 0x18(%rsp),%eax
4e65(4): mov %eax,0x0(%r13)
4e69(4): add $0x28,%rsp
4e6d(3): mov %r12,%rax
4e70(1): pop %rbx
4e71(1): pop %rbp
4e72(2): pop %r12
4e74(2): pop %r13
4e76(2): pop %r14
4e78(2): pop %r15
4e7a(1): ret near (%rsp)
4e7b(5): nop 0x0(%rax,%rax,1)
4e80(2): xor %edi,%edi
4e82(5): call 0xe5e(%rip)
4e87(8): movdqa 0x204201(%rip),%xmm0
4e8f(3): mov %rax,%rbx
4e92(7): mov %rax,0x2041e7(%rip)
4e99(3): movups %xmm0,(%rax)
4e9c(5): jmp 0xfffffee1(%rip)
4ea1(5): call 0xffffc7ef(%rip)
4ea6(5): call 0x102a(%rip)

"clone_quoting_options" :
4eb0(2): push %r12
4eb2(1): push %rbp
4eb3(1): push %rbx
4eb4(3): mov %rdi,%rbx
4eb7(5): call 0xffffc7e9(%rip)
4ebc(3): mov (%rax),%r12d
4ebf(3): mov %rax,%rbp
4ec2(7): lea 0x204397(%rip),%rax
4ec9(3): test %rbx,%rbx
4ecc(5): mov $0x38,%esi
4ed1(4): cmove %rax,%rbx
4ed5(3): mov %rbx,%rdi
4ed8(5): call 0xfa8(%rip)
4edd(4): mov %r12d,0x0(%rbp)
4ee1(1): pop %rbx
4ee2(1): pop %rbp
4ee3(2): pop %r12
4ee5(1): ret near (%rsp)

"get_quoting_style" :
4ef0(7): lea 0x204369(%rip),%rax
4ef7(3): test %rdi,%rdi
4efa(4): cmove %rax,%rdi
4efe(2): mov (%rdi),%eax
4f00(1): ret near (%rsp)

"set_quoting_style" :
4f10(7): lea 0x204349(%rip),%rax
4f17(3): test %rdi,%rdi
4f1a(4): cmove %rax,%rdi
4f1e(2): mov %esi,(%rdi)
4f20(1): ret near (%rsp)

"set_char_quoting" :
4f30(7): lea 0x204329(%rip),%rax
4f37(3): test %rdi,%rdi
4f3a(2): mov %esi,%ecx
4f3c(4): cmove %rax,%rdi
4f40(2): mov %esi,%eax
4f42(3): and $0x1f,%ecx
4f45(3): shr $0x5,%al
4f48(3): movzx %al,%eax
4f4b(5): lea 0x8(%rdi,%rax,4),%rdi
4f50(2): mov (%rdi),%esi
4f52(2): mov %esi,%eax
4f54(2): shr %cl,%eax
4f56(2): xor %eax,%edx
4f58(3): and $0x1,%eax
4f5b(3): and $0x1,%edx
4f5e(2): shl/sal %cl,%edx
4f60(2): xor %esi,%edx
4f62(2): mov %edx,(%rdi)
4f64(1): ret near (%rsp)

"set_quoting_flags" :
4f70(7): lea 0x2042e9(%rip),%rax
4f77(3): test %rdi,%rdi
4f7a(4): cmove %rax,%rdi
4f7e(3): mov 0x4(%rdi),%eax
4f81(3): mov %esi,0x4(%rdi)
4f84(1): ret near (%rsp)

"set_custom_quoting" :
4f90(7): lea 0x2042c9(%rip),%rax
4f97(3): test %rdi,%rdi
4f9a(4): cmove %rax,%rdi
4f9e(3): test %rsi,%rsi
4fa1(6): mov $0xa,(%rdi)
4fa7(2): jz 0x10(%rip)
4fa9(3): test %rdx,%rdx
4fac(2): jz 0xb(%rip)
4fae(4): mov %rsi,0x28(%rdi)
4fb2(4): mov %rdx,0x30(%rdi)
4fb6(1): ret near (%rsp)
4fb7(4): sub $0x8,%rsp
4fbb(5): call 0xffffc6d5(%rip)

"quotearg_buffer" :
4fc0(2): push %r15
4fc2(2): push %r14
4fc4(7): lea 0x204295(%rip),%rax
4fcb(2): push %r13
4fcd(2): push %r12
4fcf(3): mov %rdi,%r13
4fd2(1): push %rbp
4fd3(1): push %rbx
4fd4(3): mov %r8,%rbx
4fd7(3): mov %rsi,%r14
4fda(3): mov %rdx,%r15
4fdd(4): sub $0x18,%rsp
4fe1(3): test %r8,%r8
4fe4(4): cmove %rax,%rbx
4fe8(5): mov %rcx,0x8(%rsp)
4fed(5): call 0xffffc6b3(%rip)
4ff2(3): mov (%rax),%r12d
4ff5(3): mov %rax,%rbp
4ff8(4): lea 0x8(%rbx),%rax
4ffc(4): sub $0x8,%rsp
5000(4): mov 0x4(%rbx),%r9d
5004(3): push 0x30(%rbx)
5007(3): mov (%rbx),%r8d
500a(3): push 0x28(%rbx)
500d(3): mov %r15,%rdx
5010(1): push %rax
5011(5): mov 0x28(%rsp),%rcx
5016(3): mov %r14,%rsi
5019(3): mov %r13,%rdi
501c(5): call 0xffffeaa4(%rip)
5021(4): mov %r12d,0x0(%rbp)
5025(4): add $0x38,%rsp
5029(1): pop %rbx
502a(1): pop %rbp
502b(2): pop %r12
502d(2): pop %r13
502f(2): pop %r14
5031(2): pop %r15
5033(1): ret near (%rsp)

"quotearg_alloc_mem" :
5040(2): push %r15
5042(2): push %r14
5044(7): lea 0x204215(%rip),%rax
504b(2): push %r13
504d(2): push %r12
504f(3): mov %rdx,%r12
5052(1): push %rbp
5053(1): push %rbx
5054(3): mov %rcx,%rbx
5057(3): mov %rdi,%r14
505a(3): mov %rsi,%r15
505d(4): sub $0x38,%rsp
5061(3): test %rcx,%rcx
5064(4): cmove %rax,%rbx
5068(2): xor %ebp,%ebp
506a(5): call 0xffffc636(%rip)
506f(3): test %r12,%r12
5072(3): mov %rax,%r13
5075(2): mov (%rax),%eax
5077(4): setz %bpl
507b(3): or 0x4(%rbx),%ebp
507e(4): lea 0x8(%rbx),%r10
5082(4): sub $0x8,%rsp
5086(3): mov (%rbx),%r8d
5089(3): mov %r15,%rcx
508c(4): mov %eax,0x14(%rsp)
5090(3): push 0x30(%rbx)
5093(3): mov %r14,%rdx
5096(3): push 0x28(%rbx)
5099(2): push %r10
509b(2): xor %esi,%esi
509d(3): mov %ebp,%r9d
50a0(2): xor %edi,%edi
50a2(5): mov %r10,0x40(%rsp)
50a7(5): call 0xffffea19(%rip)
50ac(4): lea 0x1(%rax),%rsi
50b0(5): mov %rax,0x48(%rsp)
50b5(4): add $0x20,%rsp
50b9(3): mov %rsi,%rdi
50bc(5): mov %rsi,0x18(%rsp)
50c1(5): call 0xbbf(%rip)
50c6(5): mov %rax,0x10(%rsp)
50cb(4): sub $0x8,%rsp
50cf(3): push 0x30(%rbx)
50d2(3): push 0x28(%rbx)
50d5(5): mov 0x38(%rsp),%r10
50da(3): mov %ebp,%r9d
50dd(3): mov (%rbx),%r8d
50e0(3): mov %r15,%rcx
50e3(3): mov %r14,%rdx
50e6(3): mov %rax,%rdi
50e9(2): push %r10
50eb(5): mov 0x38(%rsp),%rsi
50f0(5): call 0xffffe9d0(%rip)
50f5(4): mov 0x2c(%rsp),%eax
50f9(4): add $0x20,%rsp
50fd(3): test %r12,%r12
5100(4): mov %eax,0x0(%r13)
5104(2): jz 0xb(%rip)
5106(5): mov 0x28(%rsp),%r11
510b(4): mov %r11,(%r12)
510f(5): mov 0x10(%rsp),%rax
5114(4): add $0x38,%rsp
5118(1): pop %rbx
5119(1): pop %rbp
511a(2): pop %r12
511c(2): pop %r13
511e(2): pop %r14
5120(2): pop %r15
5122(1): ret near (%rsp)

"quotearg_alloc" :
5130(3): mov %rdx,%rcx
5133(2): xor %edx,%edx
5135(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5140(6): mov 0x203f32(%rip),%eax
5146(2): push %r12
5148(7): mov 0x203f31(%rip),%r12
514f(1): push %rbp
5150(1): push %rbx
5151(3): cmp $0x1,%eax
5154(2): jle 0x2d(%rip)
5156(3): sub $0x2,%eax
5159(5): lea 0x18(%r12),%rbx
515e(4): shl/sal $0x4,%rax
5162(5): lea 0x28(%r12,%rax,1),%rbp
5167(9): nop 0x0(%rax,%rax,1)
5170(3): mov (%rbx),%rdi
5173(4): add $0x10,%rbx
5177(5): call 0xffffc509(%rip)
517c(3): cmp %rbp,%rbx
517f(2): jnz 0xfffffff1(%rip)
5181(5): mov 0x8(%r12),%rdi
5186(7): lea 0x203fd3(%rip),%rbx
518d(3): cmp %rbx,%rdi
5190(2): jz 0x19(%rip)
5192(5): call 0xffffc4ee(%rip)
5197(b): mov $0x100,0x203eee(%rip)
51a2(7): mov %rbx,0x203eef(%rip)
51a9(7): lea 0x203ee0(%rip),%rbx
51b0(3): cmp %rbx,%r12
51b3(2): jz 0x11(%rip)
51b5(3): mov %r12,%rdi
51b8(5): call 0xffffc4c8(%rip)
51bd(7): mov %rbx,0x203ebc(%rip)
51c4(1): pop %rbx
51c5(a): mov $0x1,0x203ea9(%rip)
51cf(1): pop %rbp
51d0(2): pop %r12
51d2(1): ret near (%rsp)

"quotearg_n" :
51e0(7): lea 0x204079(%rip),%rcx
51e7(7): mov $0xffffffff,%rdx
51ee(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5200(7): lea 0x204059(%rip),%rcx
5207(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5210(7): lea 0x204049(%rip),%rcx
5217(3): mov %rdi,%rsi
521a(7): mov $0xffffffff,%rdx
5221(2): xor %edi,%edi
5223(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5230(7): lea 0x204029(%rip),%rcx
5237(3): mov %rsi,%rdx
523a(3): mov %rdi,%rsi
523d(2): xor %edi,%edi
523f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5250(4): sub $0x48,%rsp
5254(3): mov %rdx,%rax
5257(9): mov $0x28,%rdx
5260(5): mov %rdx,0x38(%rsp)
5265(2): xor %edx,%edx
5267(3): cmp $0xa,%esi
526a(2): jz 0x6a(%rip)
526c(3): mov %esi,(%rsp)
526f(3): mov %rsp,%rcx
5272(7): mov $0xffffffff,%rdx
5279(3): mov %rax,%rsi
527c(9): mov $0x0,0x4(%rsp)
5285(9): mov $0x0,0xc(%rsp)
528e(9): mov $0x0,0x14(%rsp)
5297(9): mov $0x0,0x1c(%rsp)
52a0(9): mov $0x0,0x24(%rsp)
52a9(9): mov $0x0,0x2c(%rsp)
52b2(8): mov $0x0,0x34(%rsp)
52ba(5): call 0xfffffa46(%rip)
52bf(5): mov 0x38(%rsp),%rcx
52c4(9): xor $0x28,%rcx
52cd(2): jnz 0xc(%rip)
52cf(4): add $0x48,%rsp
52d3(1): ret near (%rsp)
52d4(5): call 0xffffc3bc(%rip)
52d9(5): call 0xffffc497(%rip)

"quotearg_n_style_mem" :
52e0(4): sub $0x48,%rsp
52e4(3): mov %rdx,%rax
52e7(3): mov %rcx,%rdx
52ea(9): mov $0x28,%rcx
52f3(5): mov %rcx,0x38(%rsp)
52f8(2): xor %ecx,%ecx
52fa(3): cmp $0xa,%esi
52fd(2): jz 0x63(%rip)
52ff(3): mov %esi,(%rsp)
5302(3): mov %rsp,%rcx
5305(3): mov %rax,%rsi
5308(9): mov $0x0,0x4(%rsp)
5311(9): mov $0x0,0xc(%rsp)
531a(9): mov $0x0,0x14(%rsp)
5323(9): mov $0x0,0x1c(%rsp)
532c(9): mov $0x0,0x24(%rsp)
5335(9): mov $0x0,0x2c(%rsp)
533e(8): mov $0x0,0x34(%rsp)
5346(5): call 0xfffff9ba(%rip)
534b(5): mov 0x38(%rsp),%rdx
5350(9): xor $0x28,%rdx
5359(2): jnz 0xc(%rip)
535b(4): add $0x48,%rsp
535f(1): ret near (%rsp)
5360(5): call 0xffffc330(%rip)
5365(5): call 0xffffc40b(%rip)

"quotearg_style" :
5370(3): mov %rsi,%rdx
5373(2): mov %edi,%esi
5375(2): xor %edi,%edi
5377(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5380(3): mov %rdx,%rcx
5383(3): mov %rsi,%rdx
5386(2): mov %edi,%esi
5388(2): xor %edi,%edi
538a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5390(4): sub $0x48,%rsp
5394(2): mov %edx,%ecx
5396(9): mov $0x28,%rax
539f(5): mov %rax,0x38(%rsp)
53a4(2): xor %eax,%eax
53a6(7): mov 0x203ee3(%rip),%rax
53ad(3): mov %rsp,%r8
53b0(3): and $0x1f,%ecx
53b3(8): movdqa 0x203ea5(%rip),%xmm0
53bb(5): mov %rax,0x30(%rsp)
53c0(2): mov %edx,%eax
53c2(4): movaps %xmm0,(%rsp)
53c6(3): shr $0x5,%al
53c9(3): movzx %al,%eax
53cc(5): lea 0x8(%r8,%rax,4),%r9
53d1(8): movdqa 0x203e97(%rip),%xmm0
53d9(5): movaps %xmm0,0x10(%rsp)
53de(8): movdqa 0x203e9a(%rip),%xmm0
53e6(5): movaps %xmm0,0x20(%rsp)
53eb(3): mov (%r9),%edx
53ee(2): mov %edx,%eax
53f0(2): shr %cl,%eax
53f2(2): not %eax
53f4(3): and $0x1,%eax
53f7(2): shl/sal %cl,%eax
53f9(3): mov %r8,%rcx
53fc(2): xor %edx,%eax
53fe(3): mov %rsi,%rdx
5401(3): mov %rdi,%rsi
5404(3): mov %eax,(%r9)
5407(2): xor %edi,%edi
5409(5): call 0xfffff8f7(%rip)
540e(5): mov 0x38(%rsp),%rsi
5413(9): xor $0x28,%rsi
541c(2): jnz 0x7(%rip)
541e(4): add $0x48,%rsp
5422(1): ret near (%rsp)
5423(5): call 0xffffc34d(%rip)

"quotearg_char" :
5430(4): movsx %sil,%edx
5434(7): mov $0xffffffff,%rsi
543b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5440(5): mov $0x3a,%edx
5445(7): mov $0xffffffff,%rsi
544c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5460(5): mov $0x3a,%edx
5465(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5470(4): sub $0x48,%rsp
5474(3): mov %rdx,%rax
5477(9): mov $0x28,%rdx
5480(5): mov %rdx,0x38(%rsp)
5485(2): xor %edx,%edx
5487(3): cmp $0xa,%esi
548a(2): jz 0x6a(%rip)
548c(3): mov %esi,(%rsp)
548f(3): mov %rsp,%rcx
5492(7): mov $0xffffffff,%rdx
5499(3): mov %rax,%rsi
549c(9): mov $0x0,0x4(%rsp)
54a5(9): mov $0x4000000,0xc(%rsp)
54ae(9): mov $0x0,0x14(%rsp)
54b7(9): mov $0x0,0x1c(%rsp)
54c0(9): mov $0x0,0x24(%rsp)
54c9(9): mov $0x0,0x2c(%rsp)
54d2(8): mov $0x0,0x34(%rsp)
54da(5): call 0xfffff826(%rip)
54df(5): mov 0x38(%rsp),%rcx
54e4(9): xor $0x28,%rcx
54ed(2): jnz 0xc(%rip)
54ef(4): add $0x48,%rsp
54f3(1): ret near (%rsp)
54f4(5): call 0xffffc19c(%rip)
54f9(5): call 0xffffc277(%rip)

"quotearg_n_custom_mem" :
5500(4): sub $0x48,%rsp
5504(3): mov %rcx,%r9
5507(7): mov 0x203d82(%rip),%rcx
550e(8): movdqa 0x203d4a(%rip),%xmm0
5516(9): mov $0x28,%rax
551f(5): mov %rax,0x38(%rsp)
5524(2): xor %eax,%eax
5526(4): movaps %xmm0,(%rsp)
552a(3): test %rsi,%rsi
552d(5): mov %rcx,0x30(%rsp)
5532(7): mov $0xa,(%rsp)
5539(8): movdqa 0x203d2f(%rip),%xmm0
5541(5): movaps %xmm0,0x10(%rsp)
5546(8): movdqa 0x203d32(%rip),%xmm0
554e(5): movaps %xmm0,0x20(%rsp)
5553(2): jz 0x34(%rip)
5555(3): test %rdx,%rdx
5558(2): jz 0x2f(%rip)
555a(5): mov %rsi,0x28(%rsp)
555f(5): mov %rdx,0x30(%rsp)
5564(3): mov %rsp,%rcx
5567(3): mov %r8,%rdx
556a(3): mov %r9,%rsi
556d(5): call 0xfffff793(%rip)
5572(5): mov 0x38(%rsp),%rdi
5577(9): xor $0x28,%rdi
5580(2): jnz 0xc(%rip)
5582(4): add $0x48,%rsp
5586(1): ret near (%rsp)
5587(5): call 0xffffc109(%rip)
558c(5): call 0xffffc1e4(%rip)

"quotearg_n_custom" :
55a0(7): mov $0xffffffff,%r8
55a7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
55b0(3): mov %rdx,%rcx
55b3(7): mov $0xffffffff,%r8
55ba(3): mov %rsi,%rdx
55bd(3): mov %rdi,%rsi
55c0(2): xor %edi,%edi
55c2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
55d0(3): mov %rcx,%r8
55d3(3): mov %rdx,%rcx
55d6(3): mov %rsi,%rdx
55d9(3): mov %rdi,%rsi
55dc(2): xor %edi,%edi
55de(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
55f0(7): lea 0x203a49(%rip),%rcx
55f7(5): jmp 0xfffff709(%rip)

"quote_mem" :
5600(7): lea 0x203a39(%rip),%rcx
5607(3): mov %rsi,%rdx
560a(3): mov %rdi,%rsi
560d(2): xor %edi,%edi
560f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5620(7): lea 0x203a19(%rip),%rcx
5627(7): mov $0xffffffff,%rdx
562e(5): jmp 0xfffff6d2(%rip)

"quote" :
5640(7): lea 0x2039f9(%rip),%rcx
5647(3): mov %rdi,%rsi
564a(7): mov $0xffffffff,%rdx
5651(2): xor %edi,%edi
5653(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
5660(2): push %r15
5662(2): push %r14
5664(2): push %r13
5666(2): push %r12
5668(3): mov %r9,%r12
566b(1): push %rbp
566c(1): push %rbx
566d(3): mov %rdi,%rbp
5670(3): mov %r8,%rbx
5673(4): sub $0x28,%rsp
5677(3): test %rsi,%rsi
567a(6): jz 0x11e(%rip)
5680(3): mov %rdx,%r8
5683(7): lea 0x1ebe(%rip),%rdx
568a(3): mov %rcx,%r9
568d(2): xor %eax,%eax
568f(3): mov %rsi,%rcx
5692(5): mov $0x1,%esi
5697(5): call 0xffffc309(%rip)
569c(7): lea 0x1eb8(%rip),%rsi
56a3(2): xor %edi,%edi
56a5(5): mov $0x5,%edx
56aa(5): call 0xffffc096(%rip)
56af(7): lea 0x21ca(%rip),%rdx
56b6(3): mov %rax,%rcx
56b9(6): mov $0x7e3,%r8d
56bf(5): mov $0x1,%esi
56c4(3): mov %rbp,%rdi
56c7(2): xor %eax,%eax
56c9(5): call 0xffffc2d7(%rip)
56ce(7): lea 0x1f13(%rip),%rsi
56d5(2): xor %edi,%edi
56d7(5): mov $0x5,%edx
56dc(5): call 0xffffc064(%rip)
56e1(3): mov %rbp,%rsi
56e4(3): mov %rax,%rdi
56e7(5): call 0xffffc169(%rip)
56ec(4): cmp $0x9,%r12
56f0(6): jnbe 0x340(%rip)
56f6(7): lea 0x214b(%rip),%rdx
56fd(4): movsxd 0x0(%rdx,%r12,4),%rax
5701(3): add %rdx,%rax
5704(2): jmp %rax
5706(a): nop 0x0(%rax,%rax,1)
5710(4): mov 0x38(%rbx),%r9
5714(4): mov 0x10(%rbx),%rax
5718(7): lea 0x2039(%rip),%rsi
571f(4): mov 0x8(%rbx),%r8
5723(5): mov $0x5,%edx
5728(2): xor %edi,%edi
572a(4): mov 0x30(%rbx),%r13
572e(4): mov 0x28(%rbx),%r12
5732(5): mov %r9,0x10(%rsp)
5737(4): mov 0x20(%rbx),%r15
573b(4): mov 0x18(%rbx),%r14
573f(4): mov %rax,(%rsp)
5743(5): mov %r8,0x8(%rsp)
5748(3): mov (%rbx),%rbx
574b(5): call 0xffffbff5(%rip)
5750(4): sub $0x8,%rsp
5754(5): mov 0x18(%rsp),%r9
5759(3): mov %rax,%rdx
575c(3): mov %rbx,%rcx
575f(5): mov $0x1,%esi
5764(3): mov %rbp,%rdi
5767(2): xor %eax,%eax
5769(2): push %r9
576b(2): push %r13
576d(2): push %r12
576f(2): push %r15
5771(2): push %r14
5773(5): mov 0x30(%rsp),%r9
5778(5): mov 0x38(%rsp),%r8
577d(5): call 0xffffc223(%rip)
5782(4): add $0x30,%rsp
5786(4): add $0x28,%rsp
578a(1): pop %rbx
578b(1): pop %rbp
578c(2): pop %r12
578e(2): pop %r13
5790(2): pop %r14
5792(2): pop %r15
5794(1): ret near (%rsp)
5795(3): nop (%rax)
5798(3): mov %rcx,%r8
579b(3): mov %rdx,%rcx
579e(7): lea 0x1daf(%rip),%rdx
57a5(5): mov $0x1,%esi
57aa(2): xor %eax,%eax
57ac(5): call 0xffffc1f4(%rip)
57b1(5): jmp 0xfffffeeb(%rip)
57b6(a): nop 0x0(%rax,%rax,1)
57c0(4): mov 0x40(%rbx),%r10
57c4(4): mov 0x38(%rbx),%r9
57c8(7): lea 0x1fb9(%rip),%rsi
57cf(4): mov 0x10(%rbx),%rax
57d3(4): mov 0x8(%rbx),%r8
57d7(5): mov $0x5,%edx
57dc(4): mov 0x30(%rbx),%r13
57e0(4): mov 0x28(%rbx),%r12
57e4(4): mov 0x20(%rbx),%r15
57e8(4): mov 0x18(%rbx),%r14
57ec(3): mov (%rbx),%rbx
57ef(5): mov %r10,0x18(%rsp)
57f4(5): mov %r9,0x10(%rsp)
57f9(4): mov %rax,(%rsp)
57fd(5): mov %r8,0x8(%rsp)
5802(2): xor %edi,%edi
5804(5): call 0xffffbf3c(%rip)
5809(5): mov 0x18(%rsp),%r10
580e(2): push %r10
5810(5): jmp 0xffffff44(%rip)
5815(3): nop (%rax)
5818(3): mov (%rbx),%rbx
581b(7): lea 0x1d3d(%rip),%rsi
5822(5): mov $0x5,%edx
5827(2): xor %edi,%edi
5829(5): call 0xffffbf17(%rip)
582e(4): add $0x28,%rsp
5832(3): mov %rbx,%rcx
5835(3): mov %rbp,%rdi
5838(1): pop %rbx
5839(1): pop %rbp
583a(2): pop %r12
583c(2): pop %r13
583e(2): pop %r14
5840(2): pop %r15
5842(3): mov %rax,%rdx
5845(5): mov $0x1,%esi
584a(2): xor %eax,%eax
584c(5): jmp 0xffffc154(%rip)
5851(7): nop 0x0(%rax)
5858(4): mov 0x8(%rbx),%r12
585c(7): lea 0x1d0c(%rip),%rsi
5863(3): mov (%rbx),%rbx
5866(5): mov $0x5,%edx
586b(2): xor %edi,%edi
586d(5): call 0xffffbed3(%rip)
5872(4): add $0x28,%rsp
5876(3): mov %r12,%r8
5879(3): mov %rbx,%rcx
587c(3): mov %rbp,%rdi
587f(3): mov %rax,%rdx
5882(5): mov $0x1,%esi
5887(1): pop %rbx
5888(1): pop %rbp
5889(2): pop %r12
588b(2): pop %r13
588d(2): pop %r14
588f(2): pop %r15
5891(2): xor %eax,%eax
5893(5): jmp 0xffffc10d(%rip)
5898(8): nop 0x0(%rax,%rax,1)
58a0(4): mov 0x10(%rbx),%r13
58a4(4): mov 0x8(%rbx),%r12
58a8(7): lea 0x1cd7(%rip),%rsi
58af(3): mov (%rbx),%rbx
58b2(5): mov $0x5,%edx
58b7(2): xor %edi,%edi
58b9(5): call 0xffffbe87(%rip)
58be(4): add $0x28,%rsp
58c2(3): mov %r13,%r9
58c5(3): mov %r12,%r8
58c8(3): mov %rbx,%rcx
58cb(3): mov %rbp,%rdi
58ce(3): mov %rax,%rdx
58d1(1): pop %rbx
58d2(1): pop %rbp
58d3(2): pop %r12
58d5(2): pop %r13
58d7(2): pop %r14
58d9(2): pop %r15
58db(5): mov $0x1,%esi
58e0(2): xor %eax,%eax
58e2(5): jmp 0xffffc0be(%rip)
58e7(9): nop 0x0(%rax,%rax,1)
58f0(7): lea 0x1dc1(%rip),%rsi
58f7(5): mov $0x5,%edx
58fc(2): xor %edi,%edi
58fe(4): mov 0x18(%rbx),%r14
5902(4): mov 0x10(%rbx),%r13
5906(4): mov 0x8(%rbx),%r12
590a(3): mov (%rbx),%rbx
590d(5): call 0xffffbe33(%rip)
5912(4): sub $0x8,%rsp
5916(2): push %r14
5918(3): mov %rax,%rdx
591b(3): mov %r13,%r9
591e(3): mov %r12,%r8
5921(3): mov %rbx,%rcx
5924(3): mov %rbp,%rdi
5927(5): mov $0x1,%esi
592c(2): xor %eax,%eax
592e(5): call 0xffffc072(%rip)
5933(1): pop %rax
5934(1): pop %rdx
5935(4): add $0x28,%rsp
5939(1): pop %rbx
593a(1): pop %rbp
593b(2): pop %r12
593d(2): pop %r13
593f(2): pop %r14
5941(2): pop %r15
5943(1): ret near (%rsp)
5944(4): nop 0x0(%rax)
5948(4): mov 0x20(%rbx),%r15
594c(7): lea 0x1d85(%rip),%rsi
5953(5): mov $0x5,%edx
5958(2): xor %edi,%edi
595a(4): mov 0x18(%rbx),%r14
595e(4): mov 0x10(%rbx),%r13
5962(4): mov 0x8(%rbx),%r12
5966(3): mov (%rbx),%rbx
5969(5): call 0xffffbdd7(%rip)
596e(2): push %r15
5970(2): jmp 0xffffffa6(%rip)
5972(6): nop 0x0(%rax,%rax,1)
5978(4): mov 0x8(%rbx),%r8
597c(4): mov 0x28(%rbx),%r12
5980(7): lea 0x1d79(%rip),%rsi
5987(4): mov 0x20(%rbx),%r15
598b(4): mov 0x18(%rbx),%r14
598f(5): mov $0x5,%edx
5994(4): mov 0x10(%rbx),%r13
5998(2): xor %edi,%edi
599a(3): mov (%rbx),%rbx
599d(4): mov %r8,(%rsp)
59a1(5): call 0xffffbd9f(%rip)
59a6(4): sub $0x8,%rsp
59aa(3): mov %r13,%r9
59ad(2): push %r12
59af(2): push %r15
59b1(2): push %r14
59b3(5): mov 0x20(%rsp),%r8
59b8(3): mov %rbx,%rcx
59bb(3): mov %rax,%rdx
59be(3): mov %rbp,%rdi
59c1(5): mov $0x1,%esi
59c6(2): xor %eax,%eax
59c8(5): call 0xffffbfd8(%rip)
59cd(4): add $0x20,%rsp
59d1(4): add $0x28,%rsp
59d5(1): pop %rbx
59d6(1): pop %rbp
59d7(2): pop %r12
59d9(2): pop %r13
59db(2): pop %r14
59dd(2): pop %r15
59df(1): ret near (%rsp)
59e0(4): mov 0x10(%rbx),%r9
59e4(4): mov 0x30(%rbx),%r13
59e8(7): lea 0x1d39(%rip),%rsi
59ef(4): mov 0x28(%rbx),%r12
59f3(4): mov 0x20(%rbx),%r15
59f7(5): mov $0x5,%edx
59fc(4): mov 0x18(%rbx),%r14
5a00(4): mov 0x8(%rbx),%r8
5a04(2): xor %edi,%edi
5a06(5): mov %r9,0x8(%rsp)
5a0b(3): mov (%rbx),%rbx
5a0e(4): mov %r8,(%rsp)
5a12(5): call 0xffffbd2e(%rip)
5a17(2): push %r13
5a19(2): push %r12
5a1b(2): push %r15
5a1d(2): push %r14
5a1f(5): mov 0x28(%rsp),%r9
5a24(2): jmp 0xffffff8f(%rip)
5a26(a): nop 0x0(%rax,%rax,1)
5a30(4): mov 0x40(%rbx),%r10
5a34(4): mov 0x38(%rbx),%r9
5a38(5): mov $0x5,%edx
5a3d(4): mov 0x10(%rbx),%rax
5a41(4): mov 0x8(%rbx),%r8
5a45(7): lea 0x1d74(%rip),%rsi
5a4c(4): mov 0x30(%rbx),%r13
5a50(4): mov 0x28(%rbx),%r12
5a54(4): mov 0x20(%rbx),%r15
5a58(4): mov 0x18(%rbx),%r14
5a5c(5): mov %r10,0x18(%rsp)
5a61(5): mov %r9,0x10(%rsp)
5a66(4): mov %rax,(%rsp)
5a6a(5): mov %r8,0x8(%rsp)
5a6f(3): mov (%rbx),%rbx
5a72(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5a80(3): xor %r9d,%r9d
5a83(4): cmp $0x0,(%r8)
5a87(2): jz 0x14(%rip)
5a89(7): nop 0x0(%rax)
5a90(4): add $0x1,%r9
5a94(5): cmp $0x0,0x0(%r8,%r9,8)
5a99(2): jnz 0xfffffff7(%rip)
5a9b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5aa0(4): sub $0x68,%rsp
5aa4(3): mov %r8,%r10
5aa7(3): xor %r9d,%r9d
5aaa(9): mov $0x28,%rax
5ab3(5): mov %rax,0x58(%rsp)
5ab8(2): xor %eax,%eax
5aba(3): mov %rsp,%r8
5abd(3): nop (%rax)
5ac0(3): mov (%r10),%eax
5ac3(3): cmp $0x2f,%eax
5ac6(2): jnbe 0x44(%rip)
5ac8(3): mov %eax,%r11d
5acb(4): add 0x10(%r10),%r11
5acf(3): add $0x8,%eax
5ad2(3): mov %eax,(%r10)
5ad5(3): mov (%r11),%rax
5ad8(3): test %rax,%rax
5adb(4): mov %rax,0x0(%r8,%r9,8)
5adf(2): jz 0xc(%rip)
5ae1(4): add $0x1,%r9
5ae5(4): cmp $0xa,%r9
5ae9(2): jnz 0xffffffd7(%rip)
5aeb(5): call 0xfffffb75(%rip)
5af0(5): mov 0x58(%rsp),%rax
5af5(9): xor $0x28,%rax
5afe(2): jnz 0x7(%rip)
5b00(4): add $0x68,%rsp
5b04(1): ret near (%rsp)
5b05(5): call 0xffffbc6b(%rip)
5b0a(4): mov 0x8(%r10),%r11
5b0e(4): lea 0x8(%r11),%rax
5b12(4): mov %rax,0x8(%r10)
5b16(2): jmp 0xffffffbf(%rip)

"version_etc" :
5b20(1): push %rbp
5b21(1): push %rbx
5b22(6): mov $0x20,%r10d
5b28(3): xor %r11d,%r11d
5b2b(7): sub $0xb8,%rsp
5b32(9): mov $0x28,%rax
5b3b(5): mov %rax,0x78(%rsp)
5b40(2): xor %eax,%eax
5b42(8): lea 0xd0(%rsp),%rax
5b4a(8): mov %r8,0xa0(%rsp)
5b52(8): lea 0xd0(%rsp),%rbx
5b5a(5): lea 0x20(%rsp),%r8
5b5f(8): mov %r9,0xa8(%rsp)
5b67(8): mov $0x20,0x8(%rsp)
5b6f(5): mov %rax,0x10(%rsp)
5b74(8): lea 0x80(%rsp),%rax
5b7c(3): xor %r9d,%r9d
5b7f(5): mov %rax,0x18(%rsp)
5b84(3): mov %rax,%rbp
5b87(9): nop 0x0(%rax,%rax,1)
5b90(4): cmp $0x2f,%r10d
5b94(2): jnbe 0x58(%rip)
5b96(3): mov %r10d,%eax
5b99(6): mov $0x1,%r11d
5b9f(4): add $0x8,%r10d
5ba3(3): add %rbp,%rax
5ba6(3): mov (%rax),%rax
5ba9(3): test %rax,%rax
5bac(4): mov %rax,0x0(%r8,%r9,8)
5bb0(2): jz 0xc(%rip)
5bb2(4): add $0x1,%r9
5bb6(4): cmp $0xa,%r9
5bba(2): jnz 0xffffffd6(%rip)
5bbc(3): test %r11b,%r11b
5bbf(2): jnz 0x26(%rip)
5bc1(5): call 0xfffffa9f(%rip)
5bc6(5): mov 0x78(%rsp),%rax
5bcb(9): xor $0x28,%rax
5bd4(2): jnz 0xc(%rip)
5bd6(7): add $0xb8,%rsp
5bdd(1): pop %rbx
5bde(1): pop %rbp
5bdf(1): ret near (%rsp)
5be0(5): call 0xffffbb90(%rip)
5be5(5): mov %r10d,0x8(%rsp)
5bea(2): jmp 0xffffffd7(%rip)
5bec(3): mov %rbx,%rax
5bef(4): add $0x8,%rbx
5bf3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5c00(1): push %rbx
5c01(7): lea 0x199a(%rip),%rsi
5c08(5): mov $0x5,%edx
5c0d(2): xor %edi,%edi
5c0f(5): call 0xffffbb31(%rip)
5c14(7): lea 0x199c(%rip),%rdx
5c1b(3): mov %rax,%rsi
5c1e(5): mov $0x1,%edi
5c23(2): xor %eax,%eax
5c25(5): call 0xffffbceb(%rip)
5c2a(7): lea 0x199c(%rip),%rsi
5c31(5): mov $0x5,%edx
5c36(2): xor %edi,%edi
5c38(5): call 0xffffbb08(%rip)
5c3d(7): lea 0x104c(%rip),%rcx
5c44(7): lea 0x8dc(%rip),%rdx
5c4b(3): mov %rax,%rsi
5c4e(5): mov $0x1,%edi
5c53(2): xor %eax,%eax
5c55(5): call 0xffffbcbb(%rip)
5c5a(7): mov 0x203447(%rip),%rbx
5c61(7): lea 0x1b98(%rip),%rsi
5c68(2): xor %edi,%edi
5c6a(5): mov $0x5,%edx
5c6f(5): call 0xffffbad1(%rip)
5c74(3): mov %rbx,%rsi
5c77(3): mov %rax,%rdi
5c7a(1): pop %rbx
5c7b(5): jmp 0xffffbbd5(%rip)

"xmalloc" :
5c80(1): push %rbx
5c81(3): mov %rdi,%rbx
5c84(5): call 0xffffbc0c(%rip)
5c89(3): test %rax,%rax
5c8c(2): jnz 0x7(%rip)
5c8e(3): test %rbx,%rbx
5c91(2): jnz 0x4(%rip)
5c93(1): pop %rbx
5c94(1): ret near (%rsp)
5c95(5): call 0x23b(%rip)

"xnmalloc" :
5ca0(3): mov %rdi,%rax
5ca3(3): mul %rax,%rsi,%rdx
5ca6(3): mov %rax,%rdi
5ca9(3): seto %al
5cac(3): test %rdi,%rdi
5caf(2): js 0xc(%rip)
5cb1(3): movzx %al,%eax
5cb4(3): test %rax,%rax
5cb7(2): jnz 0x4(%rip)
5cb9(2): jmp 0xffffffc7(%rip)
5cbb(4): sub $0x8,%rsp
5cbf(5): call 0x211(%rip)

"xrealloc" :
5ce0(3): test %rsi,%rsi
5ce3(1): push %rbx
5ce4(3): mov %rsi,%rbx
5ce7(2): jnz 0x7(%rip)
5ce9(3): test %rdi,%rdi
5cec(2): jnz 0x1c(%rip)
5cee(3): mov %rbx,%rsi
5cf1(5): call 0xffffbbff(%rip)
5cf6(3): test %rax,%rax
5cf9(2): jnz 0x7(%rip)
5cfb(3): test %rbx,%rbx
5cfe(2): jnz 0x13(%rip)
5d00(1): pop %rbx
5d01(1): ret near (%rsp)
5d02(6): nop 0x0(%rax,%rax,1)
5d08(5): call 0xffffb978(%rip)
5d0d(2): xor %eax,%eax
5d0f(1): pop %rbx
5d10(1): ret near (%rsp)
5d11(5): call 0x1bf(%rip)

"xnrealloc" :
5d20(3): mov %rsi,%rax
5d23(3): mul %rax,%rdx,%rdx
5d26(3): mov %rax,%rsi
5d29(3): seto %al
5d2c(3): test %rsi,%rsi
5d2f(2): js 0xc(%rip)
5d31(3): movzx %al,%eax
5d34(3): test %rax,%rax
5d37(2): jnz 0x4(%rip)
5d39(2): jmp 0xffffffa7(%rip)
5d3b(4): sub $0x8,%rsp
5d3f(5): call 0x191(%rip)

"x2nrealloc" :
5d50(3): test %rdi,%rdi
5d53(3): mov %rdx,%r9
5d56(3): mov (%rsi),%rcx
5d59(2): jz 0x37(%rip)
5d5b(2): xor %edx,%edx
5d5d(a): mov $0x6148914691236517204,%rax
5d67(3): div %r9,%rax
5d6a(3): cmp %rcx,%rax
5d6d(2): jbe 0x3e(%rip)
5d6f(3): mov %rcx,%rax
5d72(3): shr $0x1,%rax
5d75(5): lea 0x1(%rax,%rcx,1),%rcx
5d7a(3): mov %rcx,(%rsi)
5d7d(4): imul %r9,%rcx
5d81(3): mov %rcx,%rsi
5d84(5): jmp 0xffffff5c(%rip)
5d89(7): nop 0x0(%rax)
5d90(3): test %rcx,%rcx
5d93(2): jz 0x25(%rip)
5d95(3): mov %rcx,%rax
5d98(3): mul %rax,%r9,%rdx
5d9b(3): seto %dl
5d9e(3): test %rax,%rax
5da1(3): movzx %dl,%edx
5da4(2): js 0x7(%rip)
5da6(3): test %rdx,%rdx
5da9(2): jz 0xffffffd1(%rip)
5dab(4): sub $0x8,%rsp
5daf(5): call 0x121(%rip)
5db4(4): nop 0x0(%rax)
5db8(2): xor %edx,%edx
5dba(5): mov $0x80,%eax
5dbf(3): xor %r8d,%r8d
5dc2(3): div %r9,%rax
5dc5(3): test %rax,%rax
5dc8(4): setz %r8b
5dcc(4): lea 0x0(%r8,%rax,1),%rcx
5dd0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5de0(3): test %rdi,%rdi
5de3(3): mov (%rsi),%rax
5de6(2): jz 0x2a(%rip)
5de8(a): mov $0x6148914691236517203,%rdx
5df2(3): cmp %rdx,%rax
5df5(2): jnbe 0x2c(%rip)
5df7(3): mov %rax,%rdx
5dfa(3): shr $0x1,%rdx
5dfd(5): lea 0x1(%rdx,%rax,1),%rax
5e02(3): mov %rax,(%rsi)
5e05(3): mov %rax,%rsi
5e08(5): jmp 0xfffffed8(%rip)
5e0d(3): nop (%rax)
5e10(3): test %rax,%rax
5e13(5): mov $0x80,%edx
5e18(4): cmove %rdx,%rax
5e1c(3): test %rax,%rax
5e1f(2): jns 0xffffffe3(%rip)
5e21(4): sub $0x8,%rsp
5e25(5): call 0xab(%rip)

"xzalloc" :
5e30(1): push %rbx
5e31(3): mov %rdi,%rbx
5e34(5): call 0xfffffe4c(%rip)
5e39(3): mov %rbx,%rdx
5e3c(2): xor %esi,%esi
5e3e(3): mov %rax,%rdi
5e41(1): pop %rbx
5e42(5): jmp 0xffffb99e(%rip)

"xcalloc" :
5e50(3): mov %rdi,%rax
5e53(4): sub $0x8,%rsp
5e57(3): mul %rax,%rsi,%rdx
5e5a(3): seto %dl
5e5d(3): test %rax,%rax
5e60(2): js 0x19(%rip)
5e62(3): movzx %dl,%edx
5e65(3): test %rdx,%rdx
5e68(2): jnz 0x11(%rip)
5e6a(5): call 0xffffb9f6(%rip)
5e6f(3): test %rax,%rax
5e72(2): jz 0x7(%rip)
5e74(4): add $0x8,%rsp
5e78(1): ret near (%rsp)
5e79(5): call 0x57(%rip)

"xmemdup" :
5e80(1): push %rbp
5e81(1): push %rbx
5e82(3): mov %rdi,%rbp
5e85(3): mov %rsi,%rdi
5e88(3): mov %rsi,%rbx
5e8b(4): sub $0x8,%rsp
5e8f(5): call 0xfffffdf1(%rip)
5e94(4): add $0x8,%rsp
5e98(3): mov %rbx,%rdx
5e9b(3): mov %rbp,%rsi
5e9e(1): pop %rbx
5e9f(1): pop %rbp
5ea0(3): mov %rax,%rdi
5ea3(5): jmp 0xffffb9cd(%rip)

"xstrdup" :
5eb0(1): push %rbx
5eb1(3): mov %rdi,%rbx
5eb4(5): call 0xffffb8ac(%rip)
5eb9(3): mov %rbx,%rdi
5ebc(4): lea 0x1(%rax),%rsi
5ec0(1): pop %rbx
5ec1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5ed0(7): lea 0x19d8(%rip),%rsi
5ed7(4): sub $0x8,%rsp
5edb(5): mov $0x5,%edx
5ee0(2): xor %edi,%edi
5ee2(5): call 0xffffb85e(%rip)
5ee7(6): mov 0x203133(%rip),%edi
5eed(7): lea 0x1122(%rip),%rdx
5ef4(3): mov %rax,%rcx
5ef7(2): xor %esi,%esi
5ef9(2): xor %eax,%eax
5efb(5): call 0xffffba45(%rip)
5f00(5): call 0xffffb790(%rip)

"xstrndup" :
5f10(4): sub $0x8,%rsp
5f14(5): call 0xffffb91c(%rip)
5f19(3): test %rax,%rax
5f1c(2): jz 0x7(%rip)
5f1e(4): add $0x8,%rsp
5f22(1): ret near (%rsp)
5f23(5): call 0xffffffad(%rip)

"rpl_fclose" :
5f30(2): push %r12
5f32(1): push %rbp
5f33(1): push %rbx
5f34(3): mov %rdi,%rbx
5f37(5): call 0xffffb949(%rip)
5f3c(2): test %eax,%eax
5f3e(3): mov %rbx,%rdi
5f41(2): js 0x56(%rip)
5f43(5): call 0xffffb98d(%rip)
5f48(2): test %eax,%eax
5f4a(2): jnz 0x2e(%rip)
5f4c(3): mov %rbx,%rdi
5f4f(5): call 0x61(%rip)
5f54(2): test %eax,%eax
5f56(2): jz 0x3e(%rip)
5f58(5): call 0xffffb748(%rip)
5f5d(3): mov (%rax),%r12d
5f60(3): mov %rbx,%rdi
5f63(3): mov %rax,%rbp
5f66(5): call 0xffffb7ba(%rip)
5f6b(3): test %r12d,%r12d
5f6e(2): jnz 0x32(%rip)
5f70(1): pop %rbx
5f71(1): pop %rbp
5f72(2): pop %r12
5f74(1): ret near (%rsp)
5f75(3): nop (%rax)
5f78(3): mov %rbx,%rdi
5f7b(5): call 0xffffb905(%rip)
5f80(2): xor %esi,%esi
5f82(5): mov $0x1,%edx
5f87(2): mov %eax,%edi
5f89(5): call 0xffffb837(%rip)
5f8e(4): cmp $0xffffffff,%rax
5f92(2): jnz 0xffffffba(%rip)
5f94(3): mov %rbx,%rdi
5f97(1): pop %rbx
5f98(1): pop %rbp
5f99(2): pop %r12
5f9b(5): jmp 0xffffb785(%rip)
5fa0(4): mov %r12d,0x0(%rbp)
5fa4(5): mov $0xffffffff,%eax
5fa9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5fb0(3): test %rdi,%rdi
5fb3(1): push %rbx
5fb4(3): mov %rdi,%rbx
5fb7(2): jz 0x13(%rip)
5fb9(5): call 0xffffb917(%rip)
5fbe(2): test %eax,%eax
5fc0(2): jz 0xa(%rip)
5fc2(6): test $0x100,(%rbx)
5fc8(2): jnz 0x10(%rip)
5fca(3): mov %rbx,%rdi
5fcd(1): pop %rbx
5fce(5): jmp 0xffffb8d2(%rip)
5fd3(5): nop 0x0(%rax,%rax,1)
5fd8(3): mov %rbx,%rdi
5fdb(5): mov $0x1,%edx
5fe0(2): xor %esi,%esi
5fe2(5): call 0x3e(%rip)
5fe7(3): mov %rbx,%rdi
5fea(1): pop %rbx
5feb(5): jmp 0xffffb8b5(%rip)

"freadptr" :
5ff0(4): mov 0x20(%rdi),%rax
5ff4(4): cmp %rax,0x28(%rdi)
5ff8(2): jnbe 0x18(%rip)
5ffa(4): mov 0x8(%rdi),%rax
5ffe(4): mov 0x10(%rdi),%rdx
6002(3): sub %rax,%rdx
6005(2): jz 0xb(%rip)
6007(3): mov %rdx,(%rsi)
600a(1): ret near (%rsp)
600b(5): nop 0x0(%rax,%rax,1)
6010(2): xor %eax,%eax
6012(1): ret near (%rsp)

"rpl_fseeko" :
6020(4): mov 0x8(%rdi),%rax
6024(4): cmp %rax,0x10(%rdi)
6028(2): jz 0x8(%rip)
602a(5): jmp 0xffffb926(%rip)
602f(1): nop 
6030(4): mov 0x20(%rdi),%rax
6034(4): cmp %rax,0x28(%rdi)
6038(2): jnz 0xfffffff2(%rip)
603a(5): cmp $0x0,0x48(%rdi)
603f(2): jnz 0xffffffeb(%rip)
6041(2): push %r12
6043(1): push %rbp
6044(3): mov %edx,%r12d
6047(1): push %rbx
6048(3): mov %rsi,%rbp
604b(3): mov %rdi,%rbx
604e(5): call 0xffffb832(%rip)
6053(3): mov %r12d,%edx
6056(3): mov %rbp,%rsi
6059(2): mov %eax,%edi
605b(5): call 0xffffb765(%rip)
6060(4): cmp $0xffffffff,%rax
6064(2): jz 0xe(%rip)
6066(3): and $0xef,(%rbx)
6069(7): mov %rax,0x90(%rbx)
6070(2): xor %eax,%eax
6072(1): pop %rbx
6073(1): pop %rbp
6074(2): pop %r12
6076(1): ret near (%rsp)

"rpl_mbrtowc" :
6080(2): push %r13
6082(2): push %r12
6084(3): mov %rsi,%r13
6087(1): push %rbp
6088(1): push %rbx
6089(3): mov %rdi,%rbx
608c(3): mov %rdx,%r12
608f(4): sub $0x18,%rsp
6093(9): mov $0x28,%rax
609c(5): mov %rax,0x8(%rsp)
60a1(2): xor %eax,%eax
60a3(5): lea 0x4(%rsp),%rax
60a8(3): test %rdi,%rdi
60ab(4): cmove %rax,%rbx
60af(3): mov %rbx,%rdi
60b2(5): call 0xffffb6de(%rip)
60b7(4): cmp $0xfffffffd,%rax
60bb(3): mov %rax,%rbp
60be(2): jbe 0x22(%rip)
60c0(3): test %r12,%r12
60c3(2): jz 0x1d(%rip)
60c5(2): xor %edi,%edi
60c7(5): call 0x239(%rip)
60cc(2): test %al,%al
60ce(2): jnz 0x12(%rip)
60d0(5): movzx 0x0(%r13),%eax
60d5(5): mov $0x1,%ebp
60da(2): mov %eax,(%rbx)
60dc(4): nop 0x0(%rax)
60e0(5): mov 0x8(%rsp),%rdx
60e5(9): xor $0x28,%rdx
60ee(3): mov %rbp,%rax
60f1(2): jnz 0xd(%rip)
60f3(4): add $0x18,%rsp
60f7(1): pop %rbx
60f8(1): pop %rbp
60f9(2): pop %r12
60fb(2): pop %r13
60fd(1): ret near (%rsp)
60fe(5): call 0xffffb672(%rip)

"close_stream" :
6110(2): push %r12
6112(1): push %rbp
6113(3): mov %rdi,%rbp
6116(1): push %rbx
6117(5): call 0xffffb5b9(%rip)
611c(3): mov 0x0(%rbp),%ebx
611f(3): mov %rbp,%rdi
6122(3): mov %rax,%r12
6125(5): call 0xfffffe0b(%rip)
612a(3): and $0x20,%ebx
612d(2): test %ebx,%ebx
612f(2): jnz 0x19(%rip)
6131(2): test %eax,%eax
6133(2): jz 0xc(%rip)
6135(3): test %r12,%r12
6138(5): mov $0xffffffff,%eax
613d(2): jz 0x3b(%rip)
613f(1): pop %rbx
6140(1): pop %rbp
6141(2): pop %r12
6143(1): ret near (%rsp)
6144(4): nop 0x0(%rax)
6148(2): test %eax,%eax
614a(2): jnz 0x1e(%rip)
614c(5): call 0xffffb554(%rip)
6151(6): mov $0x0,(%rax)
6157(5): mov $0xffffffff,%eax
615c(1): pop %rbx
615d(1): pop %rbp
615e(2): pop %r12
6160(1): ret near (%rsp)
6161(7): nop 0x0(%rax)
6168(1): pop %rbx
6169(5): mov $0xffffffff,%eax
616e(1): pop %rbp
616f(2): pop %r12
6171(1): ret near (%rsp)
6172(6): nop 0x0(%rax,%rax,1)
6178(5): call 0xffffb528(%rip)
617d(3): cmp $0x9,(%rax)
6180(1): pop %rbx
6181(1): pop %rbp
6182(2): pop %r12
6184(3): setnz %al
6187(3): movzx %al,%eax
618a(2): neg %eax
618c(1): ret near (%rsp)

"freadseek" :
6190(2): push %r14
6192(2): push %r13
6194(2): push %r12
6196(1): push %rbp
6197(1): push %rbx
6198(7): sub $0x1020,%rsp
619f(9): mov $0x28,%rax
61a8(8): mov %rax,0x1018(%rsp)
61b0(2): xor %eax,%eax
61b2(3): test %rsi,%rsi
61b5(6): jz 0x8e(%rip)
61bb(3): mov %rdi,%r12
61be(3): mov %rsi,%rbx
61c1(5): call 0x1df(%rip)
61c6(3): test %rax,%rax
61c9(3): mov %rax,%rbp
61cc(6): jz 0xac(%rip)
61d2(5): lea 0x8(%rsp),%r13
61d7(2): jmp 0x1d(%rip)
61d9(7): nop 0x0(%rax)
61e0(4): sub $0x1,%rbx
61e4(6): jz 0x8c(%rip)
61ea(4): sub $0x1,%rbp
61ee(6): jz 0x8a(%rip)
61f4(3): mov %r13,%rsi
61f7(3): mov %r12,%rdi
61fa(5): call 0xfffffdf6(%rip)
61ff(3): test %rax,%rax
6202(2): jz 0x22(%rip)
6204(5): mov 0x8(%rsp),%rax
6209(3): test %rax,%rax
620c(2): jz 0x18(%rip)
620e(3): cmp %rbx,%rax
6211(4): cmovnbe %rbx,%rax
6215(5): add %rax,0x8(%r12)
621a(3): sub %rax,%rbx
621d(2): jz 0x53(%rip)
621f(3): sub %rax,%rbp
6222(2): jz 0x56(%rip)
6224(3): mov %r12,%rdi
6227(5): call 0xffffb5c9(%rip)
622c(3): cmp $0xff,%eax
622f(2): jnz 0xffffffb1(%rip)
6231(3): mov %r12,%rdi
6234(5): call 0xffffb4ac(%rip)
6239(2): test %eax,%eax
623b(3): setnz %al
623e(3): movzx %al,%eax
6241(2): neg %eax
6243(8): mov 0x1018(%rsp),%rcx
624b(9): xor $0x28,%rcx
6254(6): jnz 0xa4(%rip)
625a(7): add $0x1020,%rsp
6261(1): pop %rbx
6262(1): pop %rbp
6263(2): pop %r12
6265(2): pop %r13
6267(2): pop %r14
6269(1): ret near (%rsp)
626a(6): nop 0x0(%rax,%rax,1)
6270(2): xor %eax,%eax
6272(2): jmp 0xffffffd1(%rip)
6274(4): nop 0x0(%rax)
6278(3): mov %r12,%rdi
627b(5): call 0xffffb605(%rip)
6280(2): test %eax,%eax
6282(2): jns 0x4e(%rip)
6284(5): lea 0x10(%rsp),%r14
6289(6): mov $0x1000,%r13d
628f(2): jmp 0xe(%rip)
6291(7): nop 0x0(%rax)
6298(3): sub %rbp,%rbx
629b(2): jz 0xffffffd5(%rip)
629d(7): cmp $0x1000,%rbx
62a4(3): mov %r13,%rbp
62a7(3): mov %r12,%r8
62aa(4): cmovbe %rbx,%rbp
62ae(5): mov $0x1,%edx
62b3(5): mov $0x1000,%esi
62b8(3): mov %rbp,%rcx
62bb(3): mov %r14,%rdi
62be(5): call 0xffffb662(%rip)
62c3(3): cmp %rax,%rbp
62c6(2): jbe 0xffffffd2(%rip)
62c8(5): jmp 0xffffff69(%rip)
62cd(3): nop (%rax)
62d0(2): xor %esi,%esi
62d2(5): mov $0x1,%edx
62d7(2): mov %eax,%edi
62d9(5): call 0xffffb4e7(%rip)
62de(3): test %rax,%rax
62e1(2): js 0xffffffa3(%rip)
62e3(5): mov $0x1,%edx
62e8(3): mov %rbx,%rsi
62eb(3): mov %r12,%rdi
62ee(5): call 0xfffffd32(%rip)
62f3(5): jmp 0xffffff50(%rip)
62f8(5): call 0xffffb478(%rip)

"hard_locale" :
6300(4): sub $0x8,%rsp
6304(2): xor %esi,%esi
6306(5): call 0xffffb5fa(%rip)
630b(3): mov %rax,%rdx
630e(5): mov $0x1,%eax
6313(3): test %rdx,%rdx
6316(2): jz 0x1f(%rip)
6318(7): lea 0x15a1(%rip),%rdi
631f(5): mov $0x2,%ecx
6324(3): mov %rdx,%rsi
6327(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6329(3): setnbe %cl
632c(3): sbb $0x0,%cl
632f(2): xor %eax,%eax
6331(2): test %cl,%cl
6333(2): jnz 0xd(%rip)
6335(4): add $0x8,%rsp
6339(1): ret near (%rsp)
633a(6): nop 0x0(%rax,%rax,1)
6340(7): lea 0x157b(%rip),%rdi
6347(5): mov $0x6,%ecx
634c(3): mov %rdx,%rsi
634f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6351(3): setnbe %al
6354(2): sbb $0x0,%al
6356(2): test %al,%al
6358(3): setnz %al
635b(4): add $0x8,%rsp
635f(1): ret near (%rsp)

"locale_charset" :
6360(4): sub $0x8,%rsp
6364(5): mov $0xe,%edi
6369(5): call 0xffffb547(%rip)
636e(3): test %rax,%rax
6371(2): jz 0x1f(%rip)
6373(3): cmp $0x0,(%rax)
6376(7): lea 0x154b(%rip),%rdx
637d(4): cmove %rdx,%rax
6381(4): add $0x8,%rsp
6385(1): ret near (%rsp)
6386(a): nop 0x0(%rax,%rax,1)
6390(7): lea 0x1531(%rip),%rax
6397(4): add $0x8,%rsp
639b(1): ret near (%rsp)

"freadahead" :
63a0(2): xor %eax,%eax
63a2(4): mov 0x20(%rdi),%rcx
63a6(4): cmp %rcx,0x28(%rdi)
63aa(2): jnbe 0x1d(%rip)
63ac(4): mov 0x10(%rdi),%rax
63b0(4): sub 0x8(%rdi),%rax
63b4(6): test $0x100,(%rdi)
63ba(2): jz 0xd(%rip)
63bc(4): mov 0x58(%rdi),%rdx
63c0(4): sub 0x48(%rdi),%rdx
63c4(3): add %rdx,%rax
63c7(2): REP ret near (%rsp)

"__libc_csu_init" :
63d0(2): push %r15
63d2(2): push %r14
63d4(3): mov %rdx,%r15
63d7(2): push %r13
63d9(2): push %r12
63db(7): lea 0x20266e(%rip),%r12
63e2(1): push %rbp
63e3(7): lea 0x20266e(%rip),%rbp
63ea(1): push %rbx
63eb(3): mov %edi,%r13d
63ee(3): mov %rsi,%r14
63f1(3): sub %r12,%rbp
63f4(4): sub $0x8,%rsp
63f8(4): sar $0x3,%rbp
63fc(5): call 0xffffb24c(%rip)
6401(3): test %rbp,%rbp
6404(2): jz 0x22(%rip)
6406(2): xor %ebx,%ebx
6408(8): nop 0x0(%rax,%rax,1)
6410(3): mov %r15,%rdx
6413(3): mov %r14,%rsi
6416(3): mov %r13d,%edi
6419(4): call 0x0(%r12,%rbx,8)
641d(4): add $0x1,%rbx
6421(3): cmp %rbx,%rbp
6424(2): jnz 0xffffffec(%rip)
6426(4): add $0x8,%rsp
642a(1): pop %rbx
642b(1): pop %rbp
642c(2): pop %r12
642e(2): pop %r13
6430(2): pop %r14
6432(2): pop %r15
6434(1): ret near (%rsp)

"atexit" :
6450(7): mov 0x202bb1(%rip),%rdx
6457(2): xor %esi,%esi
6459(5): jmp 0xffffb517(%rip)

"_fini" :
6460(4): sub $0x8,%rsp
6464(4): add $0x8,%rsp
6468(1): ret near (%rsp)

