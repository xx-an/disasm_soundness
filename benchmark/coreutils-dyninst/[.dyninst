
"__snprintf_chk@plt" :
1320(6): jmp 0x20ab1a(%rip)
1326(5): push $0x0

"free@plt" :
1330(6): jmp 0x20ab12(%rip)
1336(5): push $0x1

"abort@plt" :
1340(6): jmp 0x20ab0a(%rip)
1346(5): push $0x2

"__errno_location@plt" :
1350(6): jmp 0x20ab02(%rip)
1356(5): push $0x3

"error_at_line@plt" :
1360(6): jmp 0x20aafa(%rip)
1366(5): push $0x4

"strncmp@plt" :
1370(6): jmp 0x20aaf2(%rip)
1376(5): push $0x5

"_exit@plt" :
1380(6): jmp 0x20aaea(%rip)
1386(5): push $0x6

"__fpending@plt" :
1390(6): jmp 0x20aae2(%rip)
1396(5): push $0x7

"isatty@plt" :
13a0(6): jmp 0x20aada(%rip)
13a6(5): push $0x8

"textdomain@plt" :
13b0(6): jmp 0x20aad2(%rip)
13b6(5): push $0x9

"fclose@plt" :
13c0(6): jmp 0x20aaca(%rip)
13c6(5): push $0xa

"bindtextdomain@plt" :
13d0(6): jmp 0x20aac2(%rip)
13d6(5): push $0xb

"dcgettext@plt" :
13e0(6): jmp 0x20aaba(%rip)
13e6(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
13f0(6): jmp 0x20aab2(%rip)
13f6(5): push $0xd

"strlen@plt" :
1400(6): jmp 0x20aaaa(%rip)
1406(5): push $0xe

"__lxstat@plt" :
1410(6): jmp 0x20aaa2(%rip)
1416(5): push $0xf

"__stack_chk_fail@plt" :
1420(6): jmp 0x20aa9a(%rip)
1426(5): push $0x10

"mbrtowc@plt" :
1430(6): jmp 0x20aa92(%rip)
1436(5): push $0x11

"strrchr@plt" :
1440(6): jmp 0x20aa8a(%rip)
1446(5): push $0x12

"lseek@plt" :
1450(6): jmp 0x20aa82(%rip)
1456(5): push $0x13

"memset@plt" :
1460(6): jmp 0x20aa7a(%rip)
1466(5): push $0x14

"geteuid@plt" :
1470(6): jmp 0x20aa72(%rip)
1476(5): push $0x15

"memcmp@plt" :
1480(6): jmp 0x20aa6a(%rip)
1486(5): push $0x16

"fputs_unlocked@plt" :
1490(6): jmp 0x20aa62(%rip)
1496(5): push $0x17

"calloc@plt" :
14a0(6): jmp 0x20aa5a(%rip)
14a6(5): push $0x18

"strcmp@plt" :
14b0(6): jmp 0x20aa52(%rip)
14b6(5): push $0x19

"strtol@plt" :
14c0(6): jmp 0x20aa4a(%rip)
14c6(5): push $0x1a

"memcpy@plt" :
14d0(6): jmp 0x20aa42(%rip)
14d6(5): push $0x1b

"fileno@plt" :
14e0(6): jmp 0x20aa3a(%rip)
14e6(5): push $0x1c

"__xstat@plt" :
14f0(6): jmp 0x20aa32(%rip)
14f6(5): push $0x1d

"malloc@plt" :
1500(6): jmp 0x20aa2a(%rip)
1506(5): push $0x1e

"fflush@plt" :
1510(6): jmp 0x20aa22(%rip)
1516(5): push $0x1f

"nl_langinfo@plt" :
1520(6): jmp 0x20aa1a(%rip)
1526(5): push $0x20

"getegid@plt" :
1530(6): jmp 0x20aa12(%rip)
1536(5): push $0x21

"__freading@plt" :
1540(6): jmp 0x20aa0a(%rip)
1546(5): push $0x22

"realloc@plt" :
1550(6): jmp 0x20aa02(%rip)
1556(5): push $0x23

"setlocale@plt" :
1560(6): jmp 0x20a9fa(%rip)
1566(5): push $0x24

"__printf_chk@plt" :
1570(6): jmp 0x20a9f2(%rip)
1576(5): push $0x25

"error@plt" :
1580(6): jmp 0x20a9ea(%rip)
1586(5): push $0x26

"fseeko@plt" :
1590(6): jmp 0x20a9e2(%rip)
1596(5): push $0x27

"euidaccess@plt" :
15a0(6): jmp 0x20a9da(%rip)
15a6(5): push $0x28

"__cxa_atexit@plt" :
15b0(6): jmp 0x20a9d2(%rip)
15b6(5): push $0x29

"exit@plt" :
15c0(6): jmp 0x20a9ca(%rip)
15c6(5): push $0x2a

"fwrite@plt" :
15d0(6): jmp 0x20a9c2(%rip)
15d6(5): push $0x2b

"__fprintf_chk@plt" :
15e0(6): jmp 0x20a9ba(%rip)
15e6(5): push $0x2c

"mbsinit@plt" :
15f0(6): jmp 0x20a9b2(%rip)
15f6(5): push $0x2d

"iswprint@plt" :
1600(6): jmp 0x20a9aa(%rip)
1606(5): push $0x2e

"__ctype_b_loc@plt" :
1610(6): jmp 0x20a9a2(%rip)
1616(5): push $0x2f

".plt.got" :
1620(6): jmp 0x20a9ba(%rip)
1626(2): nop 

"_init" :
12f0(4): sub $0x8,%rsp
12f4(7): mov 0x20acd5(%rip),%rax
12fb(3): test %rax,%rax
12fe(2): jz 0x4(%rip)
1300(2): call %rax
1302(4): add $0x8,%rsp
1306(1): ret near (%rsp)

"main" :
1630(1): push %rbp
1631(1): push %rbx
1632(2): mov %edi,%ebx
1634(3): mov %rsi,%rbp
1637(4): sub $0x8,%rsp
163b(3): mov (%rsi),%rdi
163e(5): call 0x1d62(%rip)
1643(7): lea 0x8297(%rip),%rsi
164a(5): mov $0x6,%edi
164f(5): call 0xffffff11(%rip)
1654(7): lea 0x6e28(%rip),%rsi
165b(7): lea 0x6de8(%rip),%rdi
1662(5): call 0xfffffd6e(%rip)
1667(7): lea 0x6ddc(%rip),%rdi
166e(5): call 0xfffffd42(%rip)
1673(7): lea 0x1c26(%rip),%rdi
167a(a): mov $0x2,0x20a994(%rip)
1684(5): call 0x6c5c(%rip)
1689(3): cmp $0x2,%ebx
168c(7): mov %rbp,0x20aa1d(%rip)
1693(2): jz 0x64(%rip)
1695(3): cmp $0x1,%ebx
1698(6): jle 0xfb(%rip)
169e(3): movsxd %ebx,%rax
16a1(7): lea 0x6e26(%rip),%rsi
16a8(5): mov 0xfffffff8(%rbp,%rax,8),%rdi
16ad(5): call 0xfffffe03(%rip)
16b2(2): test %eax,%eax
16b4(6): jnz 0xdf(%rip)
16ba(3): lea 0xffffffff(%rbx),%eax
16bd(3): lea 0xfffffffe(%rbx),%edi
16c0(a): mov $0x1,0x20a9f2(%rip)
16ca(6): mov %eax,0x20a9e8(%rip)
16d0(5): call 0x1160(%rip)
16d5(7): movsxd 0x20a9e0(%rip),%rdx
16dc(6): cmp 0x20a9d6(%rip),%edx
16e2(6): jnz 0xe0(%rip)
16e8(3): xor $0x1,%eax
16eb(3): movzx %al,%ebx
16ee(4): add $0x8,%rsp
16f2(2): mov %ebx,%eax
16f4(1): pop %rbx
16f5(1): pop %rbp
16f6(1): ret near (%rsp)
16f7(4): mov 0x8(%rbp),%rbp
16fb(7): lea 0x6d99(%rip),%rsi
1702(3): mov %rbp,%rdi
1705(5): call 0xfffffdab(%rip)
170a(2): test %eax,%eax
170c(6): jz 0xd7(%rip)
1712(7): lea 0x6d89(%rip),%rsi
1719(3): mov %rbp,%rdi
171c(5): call 0xfffffd94(%rip)
1721(2): test %eax,%eax
1723(2): mov %eax,%ebx
1725(2): jz 0x30(%rip)
1727(7): lea 0x6da0(%rip),%rsi
172e(3): mov %rbp,%rdi
1731(5): call 0xfffffd7f(%rip)
1736(2): test %eax,%eax
1738(2): jnz 0x5b(%rip)
173a(a): mov $0x1,0x20a974(%rip)
1744(a): mov $0x1,0x20a96e(%rip)
174e(5): mov $0x1,%ebx
1753(2): jmp 0xffffff9b(%rip)
1755(4): sub $0x8,%rsp
1759(7): mov 0x20a8b0(%rip),%rcx
1760(7): mov 0x20a921(%rip),%rdi
1767(2): push $0x0
1769(7): lea 0x6cd6(%rip),%rdx
1770(7): lea 0x6d35(%rip),%r9
1777(7): lea 0x6d3f(%rip),%r8
177e(7): lea 0x6ca8(%rip),%rsi
1785(2): xor %eax,%eax
1787(5): call 0x4189(%rip)
178c(1): pop %rax
178d(1): pop %rdx
178e(5): jmp 0xffffff60(%rip)
1793(7): lea 0x6d34(%rip),%rdi
179a(5): call 0x3916(%rip)
179f(7): lea 0x6d2a(%rip),%rsi
17a6(3): mov %rax,%rbx
17a9(5): mov $0x5,%edx
17ae(2): xor %edi,%edi
17b0(5): call 0xfffffc30(%rip)
17b5(3): mov %rbx,%rsi
17b8(3): mov %rax,%rdi
17bb(2): xor %eax,%eax
17bd(5): call 0x2b3(%rip)
17c2(7): mov 0x20a8e7(%rip),%rax
17c9(4): mov 0x0(%rax,%rdx,8),%rdi
17cd(5): call 0x38e3(%rip)
17d2(5): mov $0x5,%edx
17d7(3): mov %rax,%rbx
17da(7): lea 0x6cfa(%rip),%rsi
17e1(2): jmp 0xffffffcd(%rip)
17e3(2): xor %edi,%edi
17e5(5): call 0x16bb(%rip)

"_start" :
17f0(2): xor %ebp,%ebp
17f2(3): mov %rdx,%r9
17f5(1): pop %rsi
17f6(3): mov %rsp,%rdx
17f9(4): and $0xfffffff0,%rsp
17fd(1): push %rax
17fe(1): push %rsp
17ff(7): lea 0x6aca(%rip),%r8
1806(7): lea 0x6a53(%rip),%rcx
180d(7): lea 0xfffffe1c(%rip),%rdi
1814(6): call 0x20a7ae(%rip)
181a(1): hlt 

"deregister_tm_clones" :
1820(7): lea 0x20a859(%rip),%rdi
1827(1): push %rbp
1828(7): lea 0x20a851(%rip),%rax
182f(3): cmp %rdi,%rax
1832(3): mov %rsp,%rbp
1835(2): jz 0x1b(%rip)
1837(7): mov 0x20a782(%rip),%rax
183e(3): test %rax,%rax
1841(2): jz 0xf(%rip)
1843(1): pop %rbp
1844(2): jmp %rax
1846(a): nop 0x0(%rax,%rax,1)
1850(1): pop %rbp
1851(1): ret near (%rsp)

"register_tm_clones" :
1860(7): lea 0x20a819(%rip),%rdi
1867(7): lea 0x20a812(%rip),%rsi
186e(1): push %rbp
186f(3): sub %rdi,%rsi
1872(3): mov %rsp,%rbp
1875(4): sar $0x3,%rsi
1879(3): mov %rsi,%rax
187c(4): shr $0x3f,%rax
1880(3): add %rax,%rsi
1883(3): sar $0x1,%rsi
1886(2): jz 0x1a(%rip)
1888(7): mov 0x20a749(%rip),%rax
188f(3): test %rax,%rax
1892(2): jz 0xe(%rip)
1894(1): pop %rbp
1895(2): jmp %rax
1897(9): nop 0x0(%rax,%rax,1)
18a0(1): pop %rbp
18a1(1): ret near (%rsp)

"__do_global_dtors_aux" :
18b0(7): cmp $0x0,0x20a7f1(%rip)
18b7(2): jnz 0x31(%rip)
18b9(8): cmp $0x0,0x20a71f(%rip)
18c1(1): push %rbp
18c2(3): mov %rsp,%rbp
18c5(2): jz 0xe(%rip)
18c7(7): mov 0x20a73a(%rip),%rdi
18ce(5): call 0xfffffd52(%rip)
18d3(5): call 0xffffff4d(%rip)
18d8(7): mov $0x1,0x20a7c9(%rip)
18df(1): pop %rbp
18e0(1): ret near (%rsp)
18e1(7): nop 0x0(%rax)
18e8(2): REP ret near (%rsp)

"frame_dummy" :
18f0(1): push %rbp
18f1(3): mov %rsp,%rbp
18f4(1): pop %rbp
18f5(5): jmp 0xffffff6b(%rip)

"binop" :
1900(3): mov %rdi,%r8
1903(7): lea 0x69fb(%rip),%rdi
190a(5): mov $0x2,%ecx
190f(3): mov %r8,%rsi
1912(5): mov $0x1,%eax
1917(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1919(3): setnbe %dl
191c(3): sbb $0x0,%dl
191f(2): test %dl,%dl
1921(6): jz 0x147(%rip)
1927(7): lea 0x69d6(%rip),%rdi
192e(5): mov $0x3,%ecx
1933(3): mov %r8,%rsi
1936(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1938(3): setnbe %dl
193b(3): sbb $0x0,%dl
193e(2): test %dl,%dl
1940(6): jz 0x128(%rip)
1946(7): lea 0x69ba(%rip),%rdi
194d(5): mov $0x3,%ecx
1952(3): mov %r8,%rsi
1955(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1957(3): setnbe %dl
195a(3): sbb $0x0,%dl
195d(2): test %dl,%dl
195f(6): jz 0x109(%rip)
1965(7): lea 0x699e(%rip),%rdi
196c(5): mov $0x4,%ecx
1971(3): mov %r8,%rsi
1974(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1976(3): setnbe %dl
1979(3): sbb $0x0,%dl
197c(2): test %dl,%dl
197e(6): jz 0xea(%rip)
1984(7): lea 0x6983(%rip),%rdi
198b(5): mov $0x4,%ecx
1990(3): mov %r8,%rsi
1993(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1995(3): setnbe %dl
1998(3): sbb $0x0,%dl
199b(2): test %dl,%dl
199d(6): jz 0xcb(%rip)
19a3(7): lea 0x6968(%rip),%rdi
19aa(5): mov $0x4,%ecx
19af(3): mov %r8,%rsi
19b2(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
19b4(3): setnbe %dl
19b7(3): sbb $0x0,%dl
19ba(2): test %dl,%dl
19bc(6): jz 0xac(%rip)
19c2(7): lea 0x694d(%rip),%rdi
19c9(5): mov $0x4,%ecx
19ce(3): mov %r8,%rsi
19d1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
19d3(3): setnbe %dl
19d6(3): sbb $0x0,%dl
19d9(2): test %dl,%dl
19db(6): jz 0x8d(%rip)
19e1(7): lea 0x6932(%rip),%rdi
19e8(5): mov $0x4,%ecx
19ed(3): mov %r8,%rsi
19f0(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
19f2(3): setnbe %dl
19f5(3): sbb $0x0,%dl
19f8(2): test %dl,%dl
19fa(2): jz 0x6e(%rip)
19fc(7): lea 0x691b(%rip),%rdi
1a03(5): mov $0x4,%ecx
1a08(3): mov %r8,%rsi
1a0b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1a0d(3): setnbe %dl
1a10(3): sbb $0x0,%dl
1a13(2): test %dl,%dl
1a15(2): jz 0x53(%rip)
1a17(7): lea 0x6904(%rip),%rdi
1a1e(5): mov $0x4,%ecx
1a23(3): mov %r8,%rsi
1a26(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1a28(3): setnbe %dl
1a2b(3): sbb $0x0,%dl
1a2e(2): test %dl,%dl
1a30(2): jz 0x38(%rip)
1a32(7): lea 0x68ed(%rip),%rdi
1a39(5): mov $0x4,%ecx
1a3e(3): mov %r8,%rsi
1a41(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1a43(3): setnbe %dl
1a46(3): sbb $0x0,%dl
1a49(2): test %dl,%dl
1a4b(2): jz 0x1d(%rip)
1a4d(7): lea 0x68d6(%rip),%rdi
1a54(5): mov $0x4,%ecx
1a59(3): mov %r8,%rsi
1a5c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1a5e(3): setnbe %al
1a61(2): sbb $0x0,%al
1a63(2): test %al,%al
1a65(3): setz %al
1a68(2): REP ret near (%rsp)

"test_syntax_error" :
1a70(7): sub $0xd8,%rsp
1a77(2): test %al,%al
1a79(5): mov %rsi,0x28(%rsp)
1a7e(5): mov %rdx,0x30(%rsp)
1a83(5): mov %rcx,0x38(%rsp)
1a88(5): mov %r8,0x40(%rsp)
1a8d(5): mov %r9,0x48(%rsp)
1a92(2): jz 0x39(%rip)
1a94(5): movaps %xmm0,0x50(%rsp)
1a99(5): movaps %xmm1,0x60(%rsp)
1a9e(5): movaps %xmm2,0x70(%rsp)
1aa3(8): movaps %xmm3,0x80(%rsp)
1aab(8): movaps %xmm4,0x90(%rsp)
1ab3(8): movaps %xmm5,0xa0(%rsp)
1abb(8): movaps %xmm6,0xb0(%rsp)
1ac3(8): movaps %xmm7,0xc0(%rsp)
1acb(9): mov $0x28,%rax
1ad4(5): mov %rax,0x18(%rsp)
1ad9(2): xor %eax,%eax
1adb(8): lea 0xe0(%rsp),%rax
1ae3(3): mov %rdi,%rdx
1ae6(3): mov %rsp,%rcx
1ae9(2): xor %edi,%edi
1aeb(2): xor %esi,%esi
1aed(5): mov %rax,0x8(%rsp)
1af2(5): lea 0x20(%rsp),%rax
1af7(7): mov $0x8,(%rsp)
1afe(8): mov $0x30,0x4(%rsp)
1b06(5): mov %rax,0x10(%rsp)
1b0b(5): call 0x3935(%rip)
1b10(5): mov $0x2,%edi
1b15(5): call 0xfffffaab(%rip)

"find_int" :
1b20(1): push %rbx
1b21(3): mov %rdi,%rbx
1b24(5): call 0xfffffaec(%rip)
1b29(3): mov (%rax),%r8
1b2c(3): mov %rbx,%rax
1b2f(3): movzx (%rax),%ecx
1b32(5): test $0x1,0x0(%r8,%rcx,2)
1b37(3): mov %rcx,%rdx
1b3a(2): jnz 0x76(%rip)
1b3c(3): cmp $0x2b,%cl
1b3f(2): jz 0x81(%rip)
1b41(2): xor %ecx,%ecx
1b43(3): cmp $0x2d,%dl
1b46(3): setz %cl
1b49(3): add %rax,%rcx
1b4c(3): movsx (%rcx),%esi
1b4f(4): lea 0x1(%rcx),%rdx
1b53(3): sub $0x30,%esi
1b56(3): cmp $0x9,%esi
1b59(2): jnbe 0x70(%rip)
1b5b(4): movsx 0x1(%rcx),%esi
1b5f(2): mov %esi,%ecx
1b61(3): sub $0x30,%esi
1b64(3): cmp $0x9,%esi
1b67(2): jnbe 0x1a(%rip)
1b69(7): nop 0x0(%rax)
1b70(4): add $0x1,%rdx
1b74(3): movsx (%rdx),%esi
1b77(2): mov %esi,%ecx
1b79(3): sub $0x30,%esi
1b7c(3): cmp $0x9,%esi
1b7f(2): jbe 0xfffffff1(%rip)
1b81(3): movzx %cl,%esi
1b84(5): test $0x1,0x0(%r8,%rsi,2)
1b89(2): jz 0x18(%rip)
1b8b(5): nop 0x0(%rax,%rax,1)
1b90(4): add $0x1,%rdx
1b94(3): movzx (%rdx),%esi
1b97(5): test $0x1,0x0(%r8,%rsi,2)
1b9c(3): mov %rsi,%rcx
1b9f(2): jnz 0xfffffff1(%rip)
1ba1(2): test %cl,%cl
1ba3(2): jnz 0x26(%rip)
1ba5(1): pop %rbx
1ba6(1): ret near (%rsp)
1ba7(9): nop 0x0(%rax,%rax,1)
1bb0(4): add $0x1,%rax
1bb4(5): jmp 0xffffff7b(%rip)
1bb9(7): nop 0x0(%rax)
1bc0(4): lea 0x1(%rax),%rcx
1bc4(3): mov %rcx,%rax
1bc7(2): jmp 0xffffff85(%rip)
1bc9(3): mov %rbx,%rdi
1bcc(5): call 0x34e4(%rip)
1bd1(7): lea 0x6756(%rip),%rsi
1bd8(3): mov %rax,%rbx
1bdb(2): xor %edi,%edi
1bdd(5): mov $0x5,%edx
1be2(5): call 0xfffff7fe(%rip)
1be7(3): mov %rbx,%rsi
1bea(3): mov %rax,%rdi
1bed(2): xor %eax,%eax
1bef(5): call 0xfffffe81(%rip)

"beyond" :
1c00(7): movsxd 0x20a4b1(%rip),%rdx
1c07(7): mov 0x20a4a2(%rip),%rax
1c0e(1): push %rbx
1c0f(5): mov 0xfffffff8(%rax,%rdx,8),%rdi
1c14(5): call 0x349c(%rip)
1c19(7): lea 0x6721(%rip),%rsi
1c20(3): mov %rax,%rbx
1c23(2): xor %edi,%edi
1c25(5): mov $0x5,%edx
1c2a(5): call 0xfffff7b6(%rip)
1c2f(3): mov %rbx,%rsi
1c32(3): mov %rax,%rdi
1c35(2): xor %eax,%eax
1c37(5): call 0xfffffe39(%rip)

"unary_advance" :
1c40(6): mov 0x20a476(%rip),%eax
1c46(3): lea 0x1(%rax),%edx
1c49(6): cmp 0x20a469(%rip),%edx
1c4f(6): mov %edx,0x20a467(%rip)
1c55(2): jnl 0xc(%rip)
1c57(3): add $0x2,%eax
1c5a(6): mov %eax,0x20a45c(%rip)
1c60(1): ret near (%rsp)
1c61(4): sub $0x8,%rsp
1c65(5): call 0xffffff9b(%rip)

"binary_operator" :
1c70(2): push %r15
1c72(2): push %r14
1c74(2): mov %edi,%eax
1c76(2): push %r13
1c78(2): push %r12
1c7a(1): push %rbp
1c7b(1): push %rbx
1c7c(7): sub $0x178,%rsp
1c83(6): mov 0x20a433(%rip),%ecx
1c89(9): mov $0x28,%rbx
1c92(8): mov %rbx,0x168(%rsp)
1c9a(2): xor %ebx,%ebx
1c9c(3): test %dil,%dil
1c9f(3): lea 0x1(%rcx),%edx
1ca2(2): jz 0xb(%rip)
1ca4(6): mov %edx,0x20a412(%rip)
1caa(3): lea 0x2(%rcx),%edx
1cad(6): mov 0x20a405(%rip),%edi
1cb3(3): xor %r13d,%r13d
1cb6(7): mov 0x20a3f3(%rip),%rbx
1cbd(3): movsxd %edx,%r14
1cc0(3): lea 0xfffffffe(%rdi),%ecx
1cc3(2): cmp %edx,%ecx
1cc5(2): jle 0x23(%rip)
1cc7(5): mov 0x8(%rbx,%r14,8),%rsi
1ccc(7): lea 0x66b3(%rip),%rdi
1cd3(5): mov $0x3,%ecx
1cd8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1cda(3): setnbe %cl
1cdd(3): sbb $0x0,%cl
1ce0(2): test %cl,%cl
1ce2(6): jz 0x9e(%rip)
1ce8(4): mov 0x0(%rbx,%r14,8),%rsi
1cec(8): lea 0x0(,%r14,8),%r15
1cf4(3): movzx (%rsi),%edx
1cf7(3): cmp $0x2d,%dl
1cfa(6): jz 0xf6(%rip)
1d00(3): cmp $0x3d,%dl
1d03(6): jz 0x95(%rip)
1d09(7): lea 0x65f4(%rip),%rdi
1d10(5): mov $0x3,%ecx
1d15(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1d17(3): setnbe %al
1d1a(2): sbb $0x0,%al
1d1c(2): test %al,%al
1d1e(6): jnz 0x47f(%rip)
1d24(7): movsxd 0x20a391(%rip),%rax
1d2b(3): mov %rax,%rbp
1d2e(4): add $0x2,%rax
1d32(4): mov 0x0(%rbx,%rax,8),%rsi
1d36(5): mov 0xfffffff0(%rbx,%rax,8),%rdi
1d3b(5): call 0xfffff775(%rip)
1d40(2): test %eax,%eax
1d42(4): setnz %r13b
1d46(3): add $0x3,%ebp
1d49(6): mov %ebp,0x20a36d(%rip)
1d4f(8): mov 0x168(%rsp),%rbx
1d57(9): xor $0x28,%rbx
1d60(3): mov %r13d,%eax
1d63(6): jnz 0x435(%rip)
1d69(7): add $0x178,%rsp
1d70(1): pop %rbx
1d71(1): pop %rbp
1d72(2): pop %r12
1d74(2): pop %r13
1d76(2): pop %r14
1d78(2): pop %r15
1d7a(1): ret near (%rsp)
1d7b(5): nop 0x0(%rax,%rax,1)
1d80(6): mov %edx,0x20a336(%rip)
1d86(6): mov $0x1,%r13d
1d8c(5): jmp 0xffffff5c(%rip)
1d91(7): nop 0x0(%rax)
1d98(4): movzx 0x1(%rsi),%eax
1d9c(2): test %al,%al
1d9e(2): jz 0x1a(%rip)
1da0(2): cmp $0x3d,%al
1da2(6): jnz 0xffffff67(%rip)
1da8(4): cmp $0x0,0x2(%rsi)
1dac(6): jnz 0xffffff5d(%rip)
1db2(6): nop 0x0(%rax,%rax,1)
1db8(7): movsxd 0x20a2fd(%rip),%rax
1dbf(3): mov %rax,%rbp
1dc2(4): add $0x2,%rax
1dc6(4): mov 0x0(%rbx,%rax,8),%rsi
1dca(5): mov 0xfffffff0(%rbx,%rax,8),%rdi
1dcf(5): call 0xfffff6e1(%rip)
1dd4(2): test %eax,%eax
1dd6(4): setz %r13b
1dda(3): add $0x3,%ebp
1ddd(6): mov %ebp,0x20a2d9(%rip)
1de3(5): jmp 0xffffff6c(%rip)
1de8(8): nop 0x0(%rax,%rax,1)
1df0(4): movzx 0x1(%rsi),%edx
1df4(3): cmp $0x6c,%dl
1df7(6): jz 0x171(%rip)
1dfd(3): cmp $0x67,%dl
1e00(6): jz 0x168(%rip)
1e06(3): cmp $0x65,%dl
1e09(6): jz 0xc7(%rip)
1e0f(3): cmp $0x6e,%dl
1e12(6): jz 0x1fe(%rip)
1e18(3): cmp $0x6f,%dl
1e1b(6): jnz 0x355(%rip)
1e21(4): cmp $0x74,0x2(%rsi)
1e25(6): jnz 0x275(%rip)
1e2b(4): cmp $0x0,0x3(%rsi)
1e2f(6): jnz 0x26b(%rip)
1e35(7): add $0x3,0x20a280(%rip)
1e3c(3): or %al,%r13b
1e3f(6): jnz 0x363(%rip)
1e45(8): lea 0xa0(%rsp),%r14
1e4d(5): mov 0xfffffff8(%rbx,%r15,1),%rsi
1e52(5): mov $0x1,%edi
1e57(3): mov %r14,%rdx
1e5a(5): call 0xfffff696(%rip)
1e5f(2): test %eax,%eax
1e61(2): mov %eax,%ebp
1e63(2): jnz 0x17(%rip)
1e65(8): mov 0x100(%rsp),%rax
1e6d(8): mov 0xf8(%rsp),%r12
1e75(5): mov %rax,0x8(%rsp)
1e7a(5): mov 0x8(%rbx,%r15,1),%rsi
1e7f(3): mov %r14,%rdx
1e82(5): mov $0x1,%edi
1e87(5): call 0xfffff669(%rip)
1e8c(2): test %eax,%eax
1e8e(6): jnz 0xfffffec1(%rip)
1e94(8): mov 0xf8(%rsp),%rdx
1e9c(2): test %ebp,%ebp
1e9e(8): mov 0x100(%rsp),%rsi
1ea6(4): setnz %r13b
1eaa(3): cmp %rdx,%r12
1ead(3): setl %al
1eb0(3): or %al,%r13b
1eb3(6): jnz 0xfffffe9c(%rip)
1eb9(4): mov 0x8(%rsp),%ebp
1ebd(2): sub %esi,%ebp
1ebf(3): shr $0x1f,%ebp
1ec2(3): cmp %rdx,%r12
1ec5(4): cmovng %ebp,%r13d
1ec9(5): jmp 0xfffffe86(%rip)
1ece(2): nop 
1ed0(4): movzx 0x2(%rsi),%edx
1ed4(3): cmp $0x71,%dl
1ed7(6): jz 0x1b9(%rip)
1edd(3): cmp $0x66,%dl
1ee0(6): jnz 0x1ba(%rip)
1ee6(4): cmp $0x0,0x3(%rsi)
1eea(6): jnz 0x1b0(%rip)
1ef0(7): add $0x3,0x20a1c5(%rip)
1ef7(3): or %al,%r13b
1efa(6): jnz 0x2c7(%rip)
1f00(5): mov 0xfffffff8(%rbx,%r15,1),%rsi
1f05(5): lea 0x10(%rsp),%rdx
1f0a(5): mov $0x1,%edi
1f0f(5): call 0xfffff5e1(%rip)
1f14(2): test %eax,%eax
1f16(6): jnz 0xfffffe39(%rip)
1f1c(5): mov 0x8(%rbx,%r15,1),%rsi
1f21(8): lea 0xa0(%rsp),%rdx
1f29(5): mov $0x1,%edi
1f2e(5): call 0xfffff5c2(%rip)
1f33(2): test %eax,%eax
1f35(6): jnz 0xfffffe1a(%rip)
1f3b(8): mov 0xa0(%rsp),%rax
1f43(5): cmp %rax,0x10(%rsp)
1f48(6): jnz 0xfffffe07(%rip)
1f4e(8): mov 0xa8(%rsp),%rax
1f56(5): cmp %rax,0x18(%rsp)
1f5b(4): setz %r13b
1f5f(5): jmp 0xfffffdf0(%rip)
1f64(4): nop 0x0(%rax)
1f68(4): movzx 0x2(%rsi),%ecx
1f6c(3): cmp $0x65,%cl
1f6f(2): jz 0xb(%rip)
1f71(3): cmp $0x74,%cl
1f74(6): jnz 0xfffffe92(%rip)
1f7a(4): cmp $0x0,0x3(%rsi)
1f7e(6): jnz 0x162(%rip)
1f84(2): test %al,%al
1f86(5): mov 0xfffffff8(%rbx,%r15,1),%rdi
1f8b(6): jnz 0x165(%rip)
1f91(5): call 0xfffffb8f(%rip)
1f96(3): mov %rax,%rbx
1f99(3): test %r13b,%r13b
1f9c(7): mov 0x20a10d(%rip),%rax
1fa3(6): jz 0x16d(%rip)
1fa9(5): mov 0x10(%rax,%r15,1),%rdi
1fae(5): call 0xfffff452(%rip)
1fb3(8): lea 0x150(%rsp),%rsi
1fbb(3): mov %rax,%rdi
1fbe(5): call 0x1392(%rip)
1fc3(3): mov %rax,%rsi
1fc6(3): mov %rbx,%rdi
1fc9(5): call 0x3107(%rip)
1fce(7): mov 0x20a0db(%rip),%rdx
1fd5(4): mov 0x0(%rdx,%r14,8),%rcx
1fd9(4): cmp $0x65,0x2(%rcx)
1fdd(4): movzx 0x1(%rcx),%ecx
1fe1(3): setz %dl
1fe4(7): add $0x3,0x20a0d1(%rip)
1feb(3): cmp $0x6c,%cl
1fee(6): jz 0x16a(%rip)
1ff4(3): cmp $0x67,%cl
1ff7(6): jz 0x191(%rip)
1ffd(2): test %eax,%eax
1fff(3): setnz %al
2002(2): cmp %dl,%al
2004(4): setz %r13b
2008(5): jmp 0xfffffd47(%rip)
200d(3): nop (%rax)
2010(4): movzx 0x2(%rsi),%ecx
2014(3): cmp $0x65,%cl
2017(2): jz 0x79(%rip)
2019(3): cmp $0x74,%cl
201c(2): jnz 0x7e(%rip)
201e(4): cmp $0x0,0x3(%rsi)
2022(2): jnz 0x78(%rip)
2024(7): add $0x3,0x20a091(%rip)
202b(3): or %al,%r13b
202e(6): jnz 0x1a1(%rip)
2034(8): lea 0xa0(%rsp),%rbp
203c(5): mov 0xfffffff8(%rbx,%r15,1),%rsi
2041(5): mov $0x1,%edi
2046(3): mov %rbp,%rdx
2049(5): call 0xfffff4a7(%rip)
204e(2): test %eax,%eax
2050(5): lea 0x8(%rbx,%r15,1),%rcx
2055(2): jnz 0x73(%rip)
2057(3): mov (%rcx),%rsi
205a(3): mov %rbp,%rdx
205d(5): mov $0x1,%edi
2062(8): mov 0xf8(%rsp),%rbx
206a(8): mov 0x100(%rsp),%r12
2072(5): call 0xfffff47e(%rip)
2077(2): test %eax,%eax
2079(6): jz 0xa7(%rip)
207f(6): mov $0x1,%r13d
2085(5): jmp 0xfffffcca(%rip)
208a(6): nop 0x0(%rax,%rax,1)
2090(4): cmp $0x0,0x3(%rsi)
2094(6): jz 0xfffffef0(%rip)
209a(3): mov %rsi,%rdi
209d(5): call 0x3013(%rip)
20a2(7): lea 0x62f7(%rip),%rsi
20a9(3): mov %rax,%rbx
20ac(2): xor %edi,%edi
20ae(5): mov $0x5,%edx
20b3(5): call 0xfffff32d(%rip)
20b8(3): mov %rbx,%rsi
20bb(3): mov %rax,%rdi
20be(2): xor %eax,%eax
20c0(5): call 0xfffff9b0(%rip)
20c5(3): nop (%rax)
20c8(3): mov (%rcx),%rsi
20cb(3): mov %rbp,%rdx
20ce(5): mov $0x1,%edi
20d3(5): call 0xfffff41d(%rip)
20d8(5): jmp 0xfffffc77(%rip)
20dd(3): nop (%rax)
20e0(3): cmp $0x6e,%dl
20e3(6): jnz 0xfffffd35(%rip)
20e9(5): jmp 0xffffff30(%rip)
20ee(2): nop 
20f0(5): call 0xfffff310(%rip)
20f5(8): lea 0x130(%rsp),%rsi
20fd(3): mov %rax,%rdi
2100(5): call 0x1250(%rip)
2105(3): mov %rax,%rbx
2108(5): jmp 0xfffffe91(%rip)
210d(3): nop (%rax)
2110(5): mov 0x8(%rax,%r15,1),%rdi
2115(5): call 0xfffffa0b(%rip)
211a(5): jmp 0xfffffea9(%rip)
211f(1): nop 
2120(8): cmp 0xf8(%rsp),%rbx
2128(8): mov 0x100(%rsp),%rax
2130(6): jl 0xfffffc1f(%rip)
2136(6): mov $0x1,%r13d
213c(6): jnle 0xfffffc13(%rip)
2142(3): sub %eax,%r12d
2145(3): test %r12d,%r12d
2148(4): setnle %r13b
214c(5): jmp 0xfffffc03(%rip)
2151(7): nop 0x0(%rax)
2158(3): movzx %dl,%edx
215b(2): cmp %eax,%edx
215d(4): setnle %r13b
2161(5): jmp 0xfffffbee(%rip)
2166(a): nop 0x0(%rax,%rax,1)
2170(3): cmp $0x65,%dl
2173(6): jnz 0xffffff27(%rip)
2179(4): movzx 0x2(%rsi),%edx
217d(5): jmp 0xfffffd60(%rip)
2182(6): nop 0x0(%rax,%rax,1)
2188(3): movzx %dl,%edx
218b(2): neg %edx
218d(2): cmp %eax,%edx
218f(4): setl %r13b
2193(5): jmp 0xfffffbbc(%rip)
2198(5): call 0xfffff288(%rip)
219d(5): call 0xfffff1a3(%rip)
21a2(7): lea 0x61e0(%rip),%rsi
21a9(5): mov $0x5,%edx
21ae(2): xor %edi,%edi
21b0(5): call 0xfffff230(%rip)
21b5(2): xor %esi,%esi
21b7(3): mov %rax,%rdi
21ba(2): xor %eax,%eax
21bc(5): call 0xfffff8b4(%rip)
21c1(5): mov $0x5,%edx
21c6(7): lea 0x61a5(%rip),%rsi
21cd(2): jmp 0xffffffe1(%rip)
21cf(5): mov $0x5,%edx
21d4(7): lea 0x6180(%rip),%rsi
21db(2): jmp 0xffffffd3(%rip)

"unary_operator" :
21e0(1): push %rbp
21e1(1): push %rbx
21e2(7): sub $0xa8,%rsp
21e9(7): mov 0x209ec0(%rip),%rbx
21f0(9): mov $0x28,%rax
21f9(8): mov %rax,0x98(%rsp)
2201(2): xor %eax,%eax
2203(7): movsxd 0x209eb2(%rip),%rax
220a(4): mov 0x0(%rbx,%rax,8),%rdi
220e(4): movzx 0x1(%rdi),%eax
2212(3): sub $0x47,%eax
2215(2): cmp $0x33,%al
2217(6): jnbe 0x54f(%rip)
221d(7): lea 0x62cc(%rip),%rdx
2224(3): movzx %al,%eax
2227(4): movsxd 0x0(%rdx,%rax,4),%rax
222b(3): add %rdx,%rax
222e(2): jmp %rax
2230(5): call 0xfffffa10(%rip)
2235(7): movsxd 0x209e80(%rip),%rax
223c(5): mov 0xfffffff8(%rbx,%rax,8),%rax
2241(3): cmp $0x0,(%rax)
2244(3): setz %al
2247(9): nop 0x0(%rax,%rax,1)
2250(8): mov 0x98(%rsp),%rcx
2258(9): xor $0x28,%rcx
2261(6): jnz 0x54b(%rip)
2267(7): add $0xa8,%rsp
226e(1): pop %rbx
226f(1): pop %rbp
2270(1): ret near (%rsp)
2271(7): nop 0x0(%rax)
2278(5): call 0xfffff9c8(%rip)
227d(7): movsxd 0x209e38(%rip),%rax
2284(5): mov $0x1,%esi
2289(5): mov 0xfffffff8(%rbx,%rax,8),%rdi
228e(5): call 0xfffff312(%rip)
2293(2): test %eax,%eax
2295(3): setz %al
2298(2): jmp 0xffffffb8(%rip)
229a(6): nop 0x0(%rax,%rax,1)
22a0(5): call 0xfffff9a0(%rip)
22a5(7): movsxd 0x209e10(%rip),%rax
22ac(3): mov %rsp,%rdx
22af(5): mov $0x1,%edi
22b4(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
22b9(5): call 0xfffff237(%rip)
22be(2): mov %eax,%edx
22c0(2): xor %eax,%eax
22c2(2): test %edx,%edx
22c4(2): jnz 0xffffff8c(%rip)
22c6(4): mov 0x18(%rsp),%eax
22ca(3): shr $0xb,%eax
22cd(3): and $0x1,%eax
22d0(5): jmp 0xffffff80(%rip)
22d5(3): nop (%rax)
22d8(5): call 0xfffff968(%rip)
22dd(7): movsxd 0x209dd8(%rip),%rax
22e4(5): mov 0xfffffff8(%rbx,%rax,8),%rdi
22e9(5): call 0xfffff837(%rip)
22ee(3): mov %rax,%rbp
22f1(5): call 0xfffff05f(%rip)
22f6(2): xor %esi,%esi
22f8(3): mov %rax,%rbx
22fb(3): mov %rbp,%rdi
22fe(6): mov $0x0,(%rax)
2304(5): mov $0xa,%edx
2309(5): call 0xfffff1b7(%rip)
230e(3): mov %rax,%rdi
2311(2): xor %eax,%eax
2313(3): cmp $0x22,(%rbx)
2316(6): jz 0xffffff3a(%rip)
231c(7): cmp $0x7fffffff,%rdi
2323(6): jnbe 0xffffff2d(%rip)
2329(5): call 0xfffff077(%rip)
232e(2): test %eax,%eax
2330(3): setnz %al
2333(5): jmp 0xffffff1d(%rip)
2338(8): nop 0x0(%rax,%rax,1)
2340(5): call 0xfffff900(%rip)
2345(7): movsxd 0x209d70(%rip),%rax
234c(5): mov $0x2,%esi
2351(5): mov 0xfffffff8(%rbx,%rax,8),%rdi
2356(5): call 0xfffff24a(%rip)
235b(2): test %eax,%eax
235d(3): setz %al
2360(5): jmp 0xfffffef0(%rip)
2365(3): nop (%rax)
2368(5): call 0xfffff8d8(%rip)
236d(7): movsxd 0x209d48(%rip),%rax
2374(3): mov %rsp,%rdx
2377(5): mov $0x1,%edi
237c(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2381(5): call 0xfffff16f(%rip)
2386(2): mov %eax,%edx
2388(2): xor %eax,%eax
238a(2): test %edx,%edx
238c(6): jnz 0xfffffec4(%rip)
2392(6): cmp $0x0,0x30(%rsp)
2398(3): setnle %al
239b(5): jmp 0xfffffeb5(%rip)
23a0(5): call 0xfffff8a0(%rip)
23a5(7): movsxd 0x209d10(%rip),%rax
23ac(5): mov $0x4,%esi
23b1(5): mov 0xfffffff8(%rbx,%rax,8),%rdi
23b6(5): call 0xfffff1ea(%rip)
23bb(2): test %eax,%eax
23bd(3): setz %al
23c0(5): jmp 0xfffffe90(%rip)
23c5(3): nop (%rax)
23c8(5): call 0xfffff878(%rip)
23cd(7): movsxd 0x209ce8(%rip),%rax
23d4(3): mov %rsp,%rdx
23d7(5): mov $0x1,%edi
23dc(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
23e1(5): call 0xfffff10f(%rip)
23e6(2): mov %eax,%edx
23e8(2): xor %eax,%eax
23ea(2): test %edx,%edx
23ec(6): jnz 0xfffffe64(%rip)
23f2(4): mov 0x18(%rsp),%eax
23f6(5): and $0xf000,%eax
23fb(5): cmp $0x1000,%eax
2400(3): setz %al
2403(5): jmp 0xfffffe4d(%rip)
2408(8): nop 0x0(%rax,%rax,1)
2410(5): call 0xfffff830(%rip)
2415(7): movsxd 0x209ca0(%rip),%rax
241c(5): mov 0xfffffff8(%rbx,%rax,8),%rax
2421(3): cmp $0x0,(%rax)
2424(3): setnz %al
2427(5): jmp 0xfffffe29(%rip)
242c(4): nop 0x0(%rax)
2430(5): call 0xfffff810(%rip)
2435(7): movsxd 0x209c80(%rip),%rax
243c(3): mov %rsp,%rdx
243f(5): mov $0x1,%edi
2444(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2449(5): call 0xfffff0a7(%rip)
244e(2): mov %eax,%edx
2450(2): xor %eax,%eax
2452(2): test %edx,%edx
2454(6): jnz 0xfffffdfc(%rip)
245a(4): mov 0x18(%rsp),%eax
245e(3): shr $0x9,%eax
2461(3): and $0x1,%eax
2464(5): jmp 0xfffffdec(%rip)
2469(7): nop 0x0(%rax)
2470(5): call 0xfffff7d0(%rip)
2475(7): movsxd 0x209c40(%rip),%rax
247c(3): mov %rsp,%rdx
247f(5): mov $0x1,%edi
2484(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2489(5): call 0xfffff067(%rip)
248e(2): mov %eax,%edx
2490(2): xor %eax,%eax
2492(2): test %edx,%edx
2494(6): jnz 0xfffffdbc(%rip)
249a(4): mov 0x18(%rsp),%eax
249e(3): shr $0xa,%eax
24a1(3): and $0x1,%eax
24a4(5): jmp 0xfffffdac(%rip)
24a9(7): nop 0x0(%rax)
24b0(5): call 0xfffff790(%rip)
24b5(7): movsxd 0x209c00(%rip),%rax
24bc(3): mov %rsp,%rdx
24bf(5): mov $0x1,%edi
24c4(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
24c9(5): call 0xfffff027(%rip)
24ce(2): mov %eax,%edx
24d0(2): xor %eax,%eax
24d2(2): test %edx,%edx
24d4(6): jnz 0xfffffd7c(%rip)
24da(4): mov 0x18(%rsp),%eax
24de(5): and $0xf000,%eax
24e3(5): cmp $0x8000,%eax
24e8(3): setz %al
24eb(5): jmp 0xfffffd65(%rip)
24f0(5): call 0xfffff750(%rip)
24f5(7): movsxd 0x209bc0(%rip),%rax
24fc(3): mov %rsp,%rdx
24ff(5): mov $0x1,%edi
2504(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2509(5): call 0xffffefe7(%rip)
250e(2): test %eax,%eax
2510(3): setz %al
2513(5): jmp 0xfffffd3d(%rip)
2518(8): nop 0x0(%rax,%rax,1)
2520(5): call 0xfffff720(%rip)
2525(7): movsxd 0x209b90(%rip),%rax
252c(3): mov %rsp,%rdx
252f(5): mov $0x1,%edi
2534(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2539(5): call 0xffffefb7(%rip)
253e(2): mov %eax,%edx
2540(2): xor %eax,%eax
2542(2): test %edx,%edx
2544(6): jnz 0xfffffd0c(%rip)
254a(4): mov 0x18(%rsp),%eax
254e(5): and $0xf000,%eax
2553(5): cmp $0x4000,%eax
2558(3): setz %al
255b(5): jmp 0xfffffcf5(%rip)
2560(5): call 0xfffff6e0(%rip)
2565(7): movsxd 0x209b50(%rip),%rax
256c(3): mov %rsp,%rdx
256f(5): mov $0x1,%edi
2574(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2579(5): call 0xffffef77(%rip)
257e(2): mov %eax,%edx
2580(2): xor %eax,%eax
2582(2): test %edx,%edx
2584(6): jnz 0xfffffccc(%rip)
258a(4): mov 0x18(%rsp),%eax
258e(5): and $0xf000,%eax
2593(5): cmp $0x2000,%eax
2598(3): setz %al
259b(5): jmp 0xfffffcb5(%rip)
25a0(5): call 0xfffff6a0(%rip)
25a5(7): movsxd 0x209b10(%rip),%rax
25ac(3): mov %rsp,%rdx
25af(5): mov $0x1,%edi
25b4(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
25b9(5): call 0xffffef37(%rip)
25be(2): mov %eax,%edx
25c0(2): xor %eax,%eax
25c2(2): test %edx,%edx
25c4(6): jnz 0xfffffc8c(%rip)
25ca(4): mov 0x18(%rsp),%eax
25ce(5): and $0xf000,%eax
25d3(5): cmp $0x6000,%eax
25d8(3): setz %al
25db(5): jmp 0xfffffc75(%rip)
25e0(5): call 0xfffff660(%rip)
25e5(7): movsxd 0x209ad0(%rip),%rax
25ec(3): mov %rsp,%rdx
25ef(5): mov $0x1,%edi
25f4(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
25f9(5): call 0xffffeef7(%rip)
25fe(2): mov %eax,%edx
2600(2): xor %eax,%eax
2602(2): test %edx,%edx
2604(6): jnz 0xfffffc4c(%rip)
260a(4): mov 0x18(%rsp),%eax
260e(5): and $0xf000,%eax
2613(5): cmp $0xc000,%eax
2618(3): setz %al
261b(5): jmp 0xfffffc35(%rip)
2620(5): call 0xfffff620(%rip)
2625(7): movsxd 0x209a90(%rip),%rax
262c(3): mov %rsp,%rdx
262f(5): mov $0x1,%edi
2634(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2639(5): call 0xffffeeb7(%rip)
263e(2): test %eax,%eax
2640(6): jz 0x100(%rip)
2646(2): xor %eax,%eax
2648(5): jmp 0xfffffc08(%rip)
264d(3): nop (%rax)
2650(5): call 0xfffff5f0(%rip)
2655(7): movsxd 0x209a60(%rip),%rax
265c(3): mov %rsp,%rdx
265f(5): mov $0x1,%edi
2664(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2669(5): call 0xffffee87(%rip)
266e(2): test %eax,%eax
2670(2): jnz 0xffffffd6(%rip)
2672(2): xor %eax,%eax
2674(5): mov 0x58(%rsp),%rsi
2679(5): cmp %rsi,0x48(%rsp)
267e(5): mov 0x50(%rsp),%rcx
2683(5): mov 0x60(%rsp),%rdx
2688(6): jnle 0xfffffbc8(%rip)
268e(5): mov $0x1,%eax
2693(6): jl 0xfffffbbd(%rip)
2699(2): sub %ecx,%edx
269b(2): test %edx,%edx
269d(3): setnle %al
26a0(5): jmp 0xfffffbb0(%rip)
26a5(3): nop (%rax)
26a8(5): call 0xfffff598(%rip)
26ad(7): movsxd 0x209a08(%rip),%rax
26b4(3): mov %rsp,%rdx
26b7(5): mov $0x1,%edi
26bc(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
26c1(5): call 0xffffed4f(%rip)
26c6(2): mov %eax,%edx
26c8(2): xor %eax,%eax
26ca(2): test %edx,%edx
26cc(6): jnz 0xfffffb84(%rip)
26d2(4): mov 0x18(%rsp),%eax
26d6(5): and $0xf000,%eax
26db(5): cmp $0xa000,%eax
26e0(3): setz %al
26e3(5): jmp 0xfffffb6d(%rip)
26e8(8): nop 0x0(%rax,%rax,1)
26f0(5): call 0xfffff550(%rip)
26f5(7): movsxd 0x2099c0(%rip),%rax
26fc(3): mov %rsp,%rdx
26ff(5): mov $0x1,%edi
2704(5): mov 0xfffffff8(%rbx,%rax,8),%rsi
2709(5): call 0xffffede7(%rip)
270e(2): test %eax,%eax
2710(6): jnz 0xffffff36(%rip)
2716(5): call 0xffffec3a(%rip)
271b(6): mov $0x0,(%rax)
2721(3): mov %rax,%rbx
2724(5): call 0xffffee0c(%rip)
2729(3): cmp $0xff,%eax
272c(2): mov %eax,%edx
272e(2): jz 0x70(%rip)
2730(4): cmp %edx,0x20(%rsp)
2734(3): setz %al
2737(5): jmp 0xfffffb19(%rip)
273c(4): nop 0x0(%rax)
2740(5): call 0xffffec10(%rip)
2745(6): mov $0x0,(%rax)
274b(3): mov %rax,%rbx
274e(5): call 0xffffed22(%rip)
2753(3): cmp $0xff,%eax
2756(2): mov %eax,%edx
2758(2): jz 0x38(%rip)
275a(4): cmp %edx,0x1c(%rsp)
275e(3): setz %al
2761(5): jmp 0xfffffaef(%rip)
2766(5): call 0x294a(%rip)
276b(7): lea 0x5c4a(%rip),%rsi
2772(3): mov %rax,%rbx
2775(2): xor %edi,%edi
2777(5): mov $0x5,%edx
277c(5): call 0xffffec64(%rip)
2781(3): mov %rbx,%rsi
2784(3): mov %rax,%rdi
2787(2): xor %eax,%eax
2789(5): call 0xfffff2e7(%rip)
278e(2): nop 
2790(2): mov (%rbx),%esi
2792(2): xor %eax,%eax
2794(2): test %esi,%esi
2796(6): jnz 0xfffffaba(%rip)
279c(2): jmp 0xffffffbe(%rip)
279e(2): mov (%rbx),%ecx
27a0(2): xor %eax,%eax
27a2(2): test %ecx,%ecx
27a4(6): jnz 0xfffffaac(%rip)
27aa(2): jmp 0xffffff86(%rip)
27ac(5): call 0xffffec74(%rip)

"two_arguments" :
27c0(7): movsxd 0x2098f5(%rip),%rax
27c7(7): mov 0x2098e2(%rip),%r9
27ce(7): lea 0x5c03(%rip),%rdi
27d5(5): mov $0x2,%ecx
27da(4): mov 0x0(%r9,%rax,8),%rdx
27de(3): mov %rax,%r8
27e1(8): lea 0x0(,%rax,8),%r10
27e9(3): mov %rdx,%rsi
27ec(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
27ee(3): setnbe %al
27f1(2): sbb $0x0,%al
27f3(2): test %al,%al
27f5(2): jz 0x1b(%rip)
27f7(3): cmp $0x2d,(%rdx)
27fa(2): jnz 0x2d(%rip)
27fc(4): cmp $0x0,0x1(%rdx)
2800(2): jz 0x27(%rip)
2802(4): cmp $0x0,0x2(%rdx)
2806(2): jnz 0x21(%rip)
2808(5): jmp 0xfffff9d8(%rip)
280d(3): nop (%rax)
2810(5): mov 0x8(%r9,%r10,1),%rax
2815(4): add $0x2,%r8d
2819(7): mov %r8d,0x20989c(%rip)
2820(3): cmp $0x0,(%rax)
2823(3): setz %al
2826(1): ret near (%rsp)
2827(4): sub $0x8,%rsp
282b(5): call 0xfffff3d5(%rip)

"posixtest" :
2830(4): sub $0x8,%rsp
2834(3): cmp $0x2,%edi
2837(6): jz 0xd1(%rip)
283d(6): jle 0x83(%rip)
2843(3): cmp $0x3,%edi
2846(2): jz 0x6a(%rip)
2848(3): cmp $0x4,%edi
284b(6): jnz 0xa5(%rip)
2851(7): movsxd 0x209864(%rip),%rdx
2858(7): mov 0x209851(%rip),%r9
285f(7): lea 0x5b72(%rip),%rdi
2866(5): mov $0x2,%ecx
286b(4): mov 0x0(%r9,%rdx,8),%r8
286f(3): mov %rdx,%rax
2872(8): lea 0x0(,%rdx,8),%r10
287a(3): mov %r8,%rsi
287d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
287f(3): setnbe %dl
2882(3): sbb $0x0,%dl
2885(2): test %dl,%dl
2887(6): jnz 0x91(%rip)
288d(3): add $0x1,%eax
2890(6): cmp 0x209822(%rip),%eax
2896(6): mov %eax,0x209820(%rip)
289c(6): jnl 0xce(%rip)
28a2(5): call 0x4ae(%rip)
28a7(4): add $0x8,%rsp
28ab(3): xor $0x1,%eax
28ae(1): ret near (%rsp)
28af(1): nop 
28b0(4): add $0x8,%rsp
28b4(5): jmp 0x49c(%rip)
28b9(7): nop 0x0(%rax)
28c0(3): cmp $0x1,%edi
28c3(2): jnz 0x2d(%rip)
28c5(7): movsxd 0x2097f0(%rip),%rax
28cc(3): lea 0x1(%rax),%edx
28cf(6): mov %edx,0x2097e7(%rip)
28d5(7): mov 0x2097d4(%rip),%rdx
28dc(4): mov 0x0(%rdx,%rax,8),%rax
28e0(3): cmp $0x0,(%rax)
28e3(3): setnz %al
28e6(4): add $0x8,%rsp
28ea(1): ret near (%rsp)
28eb(5): nop 0x0(%rax,%rax,1)
28f0(6): mov 0x2097c6(%rip),%eax
28f6(6): cmp 0x2097bc(%rip),%eax
28fc(2): jnl 0x6e(%rip)
28fe(4): add $0x8,%rsp
2902(2): jmp 0x6e(%rip)
2904(4): nop 0x0(%rax)
2908(4): add $0x8,%rsp
290c(5): jmp 0xfffffeb4(%rip)
2911(7): nop 0x0(%rax)
2918(7): lea 0x5abb(%rip),%rdi
291f(5): mov $0x2,%ecx
2924(3): mov %r8,%rsi
2927(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2929(3): setnbe %dl
292c(3): sbb $0x0,%dl
292f(2): test %dl,%dl
2931(2): jnz 0xffffffc5(%rip)
2933(5): mov 0x18(%r9,%r10,1),%rsi
2938(7): lea 0x6f5e(%rip),%rdi
293f(5): mov $0x2,%ecx
2944(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2946(3): setnbe %dl
2949(3): sbb $0x0,%dl
294c(2): test %dl,%dl
294e(2): jnz 0xffffffa8(%rip)
2950(3): add $0x1,%eax
2953(6): mov %eax,0x209763(%rip)
2959(5): call 0xfffffe67(%rip)
295e(7): add $0x1,0x209757(%rip)
2965(5): jmp 0xffffff81(%rip)
296a(5): call 0xfffff296(%rip)

"or" :
2970(2): push %r15
2972(2): push %r14
2974(2): push %r13
2976(2): push %r12
2978(1): push %rbp
2979(1): push %rbx
297a(4): sub $0x18,%rsp
297e(7): mov 0x209737(%rip),%r11d
2985(7): mov 0x20972c(%rip),%r12d
298c(5): mov $0x0,0xf(%rsp)
2991(7): nop 0x0(%rax)
2998(3): cmp %r12d,%r11d
299b(5): mov $0x1,%ebx
29a0(7): lea 0x5a57(%rip),%rbp
29a7(6): jnl 0x1b7(%rip)
29ad(3): nop (%rax)
29b0(7): mov 0x2096f9(%rip),%r15
29b7(3): movsxd %r11d,%r9
29ba(4): mov 0x0(%r15,%r9,8),%r10
29be(4): movzx (%r10),%r13d
29c2(4): cmp $0x21,%r13b
29c6(6): jnz 0x2e1(%rip)
29cc(5): cmp $0x0,0x1(%r10)
29d1(6): jnz 0x2de(%rip)
29d7(4): lea 0x1(%r11),%r9d
29db(3): cmp %r12d,%r9d
29de(7): mov %r9d,0x2096d7(%rip)
29e5(6): jnl 0x179(%rip)
29eb(5): lea 0xfffffffe(%r12),%eax
29f0(3): movsxd %r9d,%r9
29f3(2): xor %ecx,%ecx
29f5(6): mov $0x1,%r14d
29fb(3): sub %r11d,%eax
29fe(5): lea 0x1(%r9,%rax,1),%rsi
2a03(2): jmp 0x2a(%rip)
2a05(3): nop (%rax)
2a08(5): cmp $0x0,0x1(%r10)
2a0d(6): jnz 0x15b(%rip)
2a13(4): lea 0x1(%r9),%eax
2a17(4): add $0x1,%r9
2a1b(3): cmp %rsi,%r9
2a1e(6): jz 0x2b0(%rip)
2a24(4): xor $0x1,%r14d
2a28(5): mov $0x1,%ecx
2a2d(4): mov 0x0(%r15,%r9,8),%r10
2a31(3): mov %r9d,%r11d
2a34(4): movzx (%r10),%eax
2a38(2): cmp $0x21,%al
2a3a(2): jz 0xffffffce(%rip)
2a3c(2): test %cl,%cl
2a3e(6): jnz 0x284(%rip)
2a44(3): mov %eax,%r13d
2a47(4): cmp $0x28,%r13b
2a4b(6): jnz 0x12d(%rip)
2a51(5): cmp $0x0,0x1(%r10)
2a56(6): jnz 0x122(%rip)
2a5c(4): lea 0x1(%r11),%r9d
2a60(3): cmp %r12d,%r9d
2a63(7): mov %r9d,0x209652(%rip)
2a6a(6): jnl 0xf4(%rip)
2a70(4): lea 0x2(%r11),%eax
2a74(3): cmp %r12d,%eax
2a77(6): jnl 0x240(%rip)
2a7d(2): cwde 
2a7f(6): mov $0x1,%r8d
2a85(4): lea 0x0(%r15,%rax,8),%r10
2a89(5): lea 0xffffffff(%r12),%eax
2a8e(3): sub %r11d,%eax
2a91(3): mov %eax,%r11d
2a94(3): mov (%r10),%rsi
2a97(7): lea 0x6dff(%rip),%rdi
2a9e(5): mov $0x2,%ecx
2aa3(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2aa5(3): setnbe %al
2aa8(2): sbb $0x0,%al
2aaa(2): test %al,%al
2aac(2): jz 0x1c(%rip)
2aae(4): cmp $0x4,%r8d
2ab2(6): jz 0x1ae(%rip)
2ab8(4): add $0x1,%r8d
2abc(4): add $0x8,%r10
2ac0(3): cmp %r8d,%r11d
2ac3(2): jnz 0xffffffd1(%rip)
2ac5(3): nop (%rax)
2ac8(3): mov %r8d,%edi
2acb(5): call 0xfffffd65(%rip)
2ad0(7): movsxd 0x2095e5(%rip),%rcx
2ad7(7): mov 0x2095d2(%rip),%rdx
2ade(4): mov 0x0(%rdx,%rcx,8),%rsi
2ae2(3): mov %rcx,%r11
2ae5(3): test %rsi,%rsi
2ae8(6): jz 0x232(%rip)
2aee(3): cmp $0x29,(%rsi)
2af1(6): jnz 0x1e8(%rip)
2af7(4): cmp $0x0,0x1(%rsi)
2afb(6): jnz 0x1de(%rip)
2b01(7): mov 0x2095b0(%rip),%r12d
2b08(4): add $0x1,%r11d
2b0c(7): mov %r11d,0x2095a9(%rip)
2b13(3): xor %eax,%r14d
2b16(3): and %r14d,%ebx
2b19(3): cmp %r11d,%r12d
2b1c(6): jle 0xcb(%rip)
2b22(7): mov 0x209587(%rip),%rcx
2b29(3): movsxd %r11d,%rax
2b2c(3): mov %rbp,%rdi
2b2f(4): mov 0x0(%rcx,%rax,8),%r8
2b33(5): mov $0x3,%ecx
2b38(3): mov %r8,%rsi
2b3b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2b3d(3): setnbe %al
2b40(2): sbb $0x0,%al
2b42(2): test %al,%al
2b44(6): jnz 0xea(%rip)
2b4a(4): add $0x1,%r11d
2b4e(3): cmp %r12d,%r11d
2b51(7): mov %r11d,0x209564(%rip)
2b58(6): jl 0xfffffe58(%rip)
2b5e(5): call 0xfffff0a2(%rip)
2b63(5): nop 0x0(%rax,%rax,1)
2b68(2): test %cl,%cl
2b6a(2): jz 0xe(%rip)
2b6c(7): mov %r9d,0x209549(%rip)
2b73(5): nop 0x0(%rax,%rax,1)
2b78(3): mov %r12d,%eax
2b7b(3): sub %r11d,%eax
2b7e(3): cmp $0x3,%eax
2b81(2): jle 0x7f(%rip)
2b83(7): lea 0x57fc(%rip),%rdi
2b8a(5): mov $0x3,%ecx
2b8f(3): mov %r10,%rsi
2b92(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2b94(3): setnbe %al
2b97(2): sbb $0x0,%al
2b99(2): test %al,%al
2b9b(2): jnz 0x14(%rip)
2b9d(5): mov 0x10(%r15,%r9,8),%rdi
2ba2(5): call 0xffffed5e(%rip)
2ba7(2): test %al,%al
2ba9(6): jnz 0xe1(%rip)
2baf(5): mov 0x8(%r15,%r9,8),%rdi
2bb4(5): call 0xffffed4c(%rip)
2bb9(2): test %al,%al
2bbb(6): jnz 0xb5(%rip)
2bc1(4): cmp $0x2d,%r13b
2bc5(2): jz 0x43(%rip)
2bc7(3): test %r13b,%r13b
2bca(3): setnz %al
2bcd(4): add $0x1,%r11d
2bd1(3): xor %eax,%r14d
2bd4(7): mov %r11d,0x2094e1(%rip)
2bdb(3): and %r14d,%ebx
2bde(3): cmp %r11d,%r12d
2be1(6): jnle 0xffffff41(%rip)
2be7(4): or %bl,0xf(%rsp)
2beb(5): movzx 0xf(%rsp),%eax
2bf0(4): add $0x18,%rsp
2bf4(1): pop %rbx
2bf5(1): pop %rbp
2bf6(2): pop %r12
2bf8(2): pop %r13
2bfa(2): pop %r14
2bfc(2): pop %r15
2bfe(1): ret near (%rsp)
2bff(1): nop 
2c00(2): jz 0xffffffaf(%rip)
2c02(4): cmp $0x2d,%r13b
2c06(2): jnz 0xffffffc1(%rip)
2c08(5): cmp $0x0,0x1(%r10)
2c0d(2): jz 0xffffffba(%rip)
2c0f(5): cmp $0x0,0x2(%r10)
2c14(2): jnz 0xffffffb3(%rip)
2c16(5): call 0xfffff5ca(%rip)
2c1b(7): mov 0x20949a(%rip),%r11d
2c22(7): mov 0x20948f(%rip),%r12d
2c29(5): jmp 0xfffffeea(%rip)
2c2e(7): lea 0x57cc(%rip),%rdi
2c35(5): mov $0x3,%ecx
2c3a(3): mov %r8,%rsi
2c3d(4): or %bl,0xf(%rsp)
2c41(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2c43(3): setnbe %al
2c46(2): sbb $0x0,%al
2c48(2): test %al,%al
2c4a(2): jnz 0xffffffa1(%rip)
2c4c(4): add $0x1,%r11d
2c50(7): mov %r11d,0x209465(%rip)
2c57(5): jmp 0xfffffd41(%rip)
2c5c(4): nop 0x0(%rax)
2c60(3): mov %r12d,%r8d
2c63(3): sub %r9d,%r8d
2c66(5): jmp 0xfffffe62(%rip)
2c6b(5): nop 0x0(%rax,%rax,1)
2c70(2): xor %edi,%edi
2c72(5): call 0xffffeffe(%rip)
2c77(7): mov 0x20943e(%rip),%r11d
2c7e(7): mov 0x209433(%rip),%r12d
2c85(5): jmp 0xfffffe8e(%rip)
2c8a(5): mov $0x1,%edi
2c8f(5): call 0xffffefe1(%rip)
2c94(7): mov 0x209421(%rip),%r11d
2c9b(7): mov 0x209416(%rip),%r12d
2ca2(5): jmp 0xfffffe71(%rip)
2ca7(3): xor %r14d,%r14d
2caa(5): jmp 0xfffffd9d(%rip)
2caf(3): xor %r14d,%r14d
2cb2(5): jmp 0xfffffec6(%rip)
2cb7(6): mov $0x1,%r8d
2cbd(5): jmp 0xfffffe0b(%rip)
2cc2(7): mov %r9d,0x2093f3(%rip)
2cc9(5): jmp 0xfffffd7b(%rip)
2cce(6): mov %eax,0x2093e8(%rip)
2cd4(5): jmp 0xfffffe8a(%rip)
2cd9(5): mov $0x1,%edi
2cde(5): call 0x23b2(%rip)
2ce3(7): lea 0x6bb3(%rip),%rsi
2cea(2): xor %edi,%edi
2cec(3): mov %rax,%rbp
2cef(5): call 0x23a1(%rip)
2cf4(7): lea 0x56ed(%rip),%rsi
2cfb(3): mov %rax,%rbx
2cfe(5): mov $0x5,%edx
2d03(2): xor %edi,%edi
2d05(5): call 0xffffe6db(%rip)
2d0a(3): mov %rbp,%rdx
2d0d(3): mov %rax,%rdi
2d10(3): mov %rbx,%rsi
2d13(2): xor %eax,%eax
2d15(5): call 0xffffed5b(%rip)
2d1a(7): lea 0x6b7c(%rip),%rdi
2d21(5): call 0x238f(%rip)
2d26(7): lea 0x56af(%rip),%rsi
2d2d(3): mov %rax,%rbx
2d30(2): xor %edi,%edi
2d32(5): mov $0x5,%edx
2d37(5): call 0xffffe6a9(%rip)
2d3c(3): mov %rbx,%rsi
2d3f(3): mov %rax,%rdi
2d42(2): xor %eax,%eax
2d44(5): call 0xffffed2c(%rip)

"three_arguments" :
2d50(7): movsxd 0x209365(%rip),%rax
2d57(7): mov 0x209352(%rip),%r10
2d5e(1): push %rbx
2d5f(3): mov %rax,%r9
2d62(4): add $0x1,%rax
2d66(4): mov 0x0(%r10,%rax,8),%r11
2d6a(8): lea 0x0(,%rax,8),%rbx
2d72(3): mov %r11,%rdi
2d75(5): call 0xffffeb8b(%rip)
2d7a(2): test %al,%al
2d7c(6): jnz 0xe4(%rip)
2d82(5): mov 0xfffffff8(%r10,%rbx,1),%rdx
2d87(7): lea 0x564a(%rip),%rdi
2d8e(5): mov $0x2,%ecx
2d93(3): mov %rdx,%rsi
2d96(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d98(3): setnbe %al
2d9b(2): sbb $0x0,%al
2d9d(2): test %al,%al
2d9f(2): jnz 0x29(%rip)
2da1(4): add $0x1,%r9d
2da5(7): cmp 0x20930c(%rip),%r9d
2dac(7): mov %r9d,0x209309(%rip)
2db3(6): jnl 0xe0(%rip)
2db9(5): call 0xfffffa07(%rip)
2dbe(1): pop %rbx
2dbf(3): xor $0x1,%eax
2dc2(1): ret near (%rsp)
2dc3(5): nop 0x0(%rax,%rax,1)
2dc8(7): lea 0x560b(%rip),%rdi
2dcf(5): mov $0x2,%ecx
2dd4(3): mov %rdx,%rsi
2dd7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2dd9(3): setnbe %al
2ddc(2): sbb $0x0,%al
2dde(2): test %al,%al
2de0(2): jnz 0x38(%rip)
2de2(5): mov 0x8(%r10,%rbx,1),%rsi
2de7(7): lea 0x6aaf(%rip),%rdi
2dee(5): mov $0x2,%ecx
2df3(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2df5(3): setnbe %al
2df8(2): sbb $0x0,%al
2dfa(2): test %al,%al
2dfc(2): jnz 0x1c(%rip)
2dfe(4): cmp $0x0,(%r11)
2e02(1): pop %rbx
2e03(3): setnz %al
2e06(4): add $0x3,%r9d
2e0a(7): mov %r9d,0x2092ab(%rip)
2e11(1): ret near (%rsp)
2e12(6): nop 0x0(%rax,%rax,1)
2e18(7): lea 0x55df(%rip),%rdi
2e1f(5): mov $0x3,%ecx
2e24(3): mov %r11,%rsi
2e27(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2e29(3): setnbe %al
2e2c(2): sbb $0x0,%al
2e2e(2): test %al,%al
2e30(2): jz 0x1c(%rip)
2e32(7): lea 0x55c8(%rip),%rdi
2e39(5): mov $0x3,%ecx
2e3e(3): mov %r11,%rsi
2e41(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2e43(3): setnbe %al
2e46(2): sbb $0x0,%al
2e48(2): test %al,%al
2e4a(2): jnz 0x1e(%rip)
2e4c(7): cmp 0x209265(%rip),%r9d
2e53(2): jnl 0x40(%rip)
2e55(1): pop %rbx
2e56(5): jmp 0xfffffb1a(%rip)
2e5b(5): nop 0x0(%rax,%rax,1)
2e60(1): pop %rbx
2e61(2): xor %edi,%edi
2e63(5): jmp 0xffffee0d(%rip)
2e68(3): mov %r11,%rdi
2e6b(5): call 0x2245(%rip)
2e70(7): lea 0x558d(%rip),%rsi
2e77(3): mov %rax,%rbx
2e7a(2): xor %edi,%edi
2e7c(5): mov $0x5,%edx
2e81(5): call 0xffffe55f(%rip)
2e86(3): mov %rbx,%rsi
2e89(3): mov %rax,%rdi
2e8c(2): xor %eax,%eax
2e8e(5): call 0xffffebe2(%rip)
2e93(5): call 0xffffed6d(%rip)

"usage" :
2ea0(2): test %edi,%edi
2ea2(2): push %r12
2ea4(1): push %rbp
2ea5(1): push %rbx
2ea6(2): mov %edi,%ebx
2ea8(2): jz 0x3c(%rip)
2eaa(7): lea 0x570f(%rip),%rsi
2eb1(7): mov 0x209218(%rip),%rbp
2eb8(5): mov $0x5,%edx
2ebd(2): xor %edi,%edi
2ebf(5): call 0xffffe521(%rip)
2ec4(7): mov 0x2091d5(%rip),%rdi
2ecb(3): mov %rax,%rdx
2ece(3): mov %rbp,%rcx
2ed1(5): mov $0x1,%esi
2ed6(2): xor %eax,%eax
2ed8(5): call 0xffffe708(%rip)
2edd(2): mov %ebx,%edi
2edf(5): call 0xffffe6e1(%rip)
2ee4(7): mov 0x20919d(%rip),%rbp
2eeb(7): lea 0x56f6(%rip),%rsi
2ef2(5): mov $0x5,%edx
2ef7(2): xor %edi,%edi
2ef9(5): call 0xffffe4e7(%rip)
2efe(3): mov %rbp,%rsi
2f01(3): mov %rax,%rdi
2f04(5): call 0xffffe58c(%rip)
2f09(7): mov 0x209178(%rip),%rbp
2f10(7): lea 0x5729(%rip),%rsi
2f17(5): mov $0x5,%edx
2f1c(2): xor %edi,%edi
2f1e(5): call 0xffffe4c2(%rip)
2f23(3): mov %rbp,%rsi
2f26(3): mov %rax,%rdi
2f29(5): call 0xffffe567(%rip)
2f2e(7): mov 0x209153(%rip),%rbp
2f35(7): lea 0x573c(%rip),%rsi
2f3c(5): mov $0x5,%edx
2f41(2): xor %edi,%edi
2f43(5): call 0xffffe49d(%rip)
2f48(3): mov %rbp,%rsi
2f4b(3): mov %rax,%rdi
2f4e(5): call 0xffffe542(%rip)
2f53(7): mov 0x20912e(%rip),%rbp
2f5a(7): lea 0x5747(%rip),%rsi
2f61(5): mov $0x5,%edx
2f66(2): xor %edi,%edi
2f68(5): call 0xffffe478(%rip)
2f6d(3): mov %rbp,%rsi
2f70(3): mov %rax,%rdi
2f73(5): call 0xffffe51d(%rip)
2f78(7): mov 0x209109(%rip),%rbp
2f7f(7): lea 0x575a(%rip),%rsi
2f86(5): mov $0x5,%edx
2f8b(2): xor %edi,%edi
2f8d(5): call 0xffffe453(%rip)
2f92(3): mov %rbp,%rsi
2f95(3): mov %rax,%rdi
2f98(5): call 0xffffe4f8(%rip)
2f9d(7): mov 0x2090e4(%rip),%rbp
2fa4(7): lea 0x57ad(%rip),%rsi
2fab(5): mov $0x5,%edx
2fb0(2): xor %edi,%edi
2fb2(5): call 0xffffe42e(%rip)
2fb7(3): mov %rbp,%rsi
2fba(3): mov %rax,%rdi
2fbd(5): call 0xffffe4d3(%rip)
2fc2(7): mov 0x2090bf(%rip),%rbp
2fc9(7): lea 0x5888(%rip),%rsi
2fd0(5): mov $0x5,%edx
2fd5(2): xor %edi,%edi
2fd7(5): call 0xffffe409(%rip)
2fdc(3): mov %rbp,%rsi
2fdf(3): mov %rax,%rdi
2fe2(5): call 0xffffe4ae(%rip)
2fe7(7): mov 0x20909a(%rip),%rbp
2fee(7): lea 0x5963(%rip),%rsi
2ff5(5): mov $0x5,%edx
2ffa(2): xor %edi,%edi
2ffc(5): call 0xffffe3e4(%rip)
3001(3): mov %rbp,%rsi
3004(3): mov %rax,%rdi
3007(5): call 0xffffe489(%rip)
300c(7): mov 0x209075(%rip),%rbp
3013(7): lea 0x5ab6(%rip),%rsi
301a(5): mov $0x5,%edx
301f(2): xor %edi,%edi
3021(5): call 0xffffe3bf(%rip)
3026(3): mov %rbp,%rsi
3029(3): mov %rax,%rdi
302c(5): call 0xffffe464(%rip)
3031(7): mov 0x209050(%rip),%rbp
3038(7): lea 0x5b51(%rip),%rsi
303f(5): mov $0x5,%edx
3044(2): xor %edi,%edi
3046(5): call 0xffffe39a(%rip)
304b(3): mov %rbp,%rsi
304e(3): mov %rax,%rdi
3051(5): call 0xffffe43f(%rip)
3056(7): mov 0x20902b(%rip),%rbp
305d(7): lea 0x5bdc(%rip),%rsi
3064(5): mov $0x5,%edx
3069(2): xor %edi,%edi
306b(5): call 0xffffe375(%rip)
3070(3): mov %rbp,%rsi
3073(3): mov %rax,%rdi
3076(5): call 0xffffe41a(%rip)
307b(7): mov 0x209006(%rip),%rbp
3082(7): lea 0x5ccf(%rip),%rsi
3089(5): mov $0x5,%edx
308e(2): xor %edi,%edi
3090(5): call 0xffffe350(%rip)
3095(3): mov %rbp,%rsi
3098(3): mov %rax,%rdi
309b(5): call 0xffffe3f5(%rip)
30a0(7): mov 0x208fe1(%rip),%rbp
30a7(7): lea 0x5e12(%rip),%rsi
30ae(5): mov $0x5,%edx
30b3(2): xor %edi,%edi
30b5(5): call 0xffffe32b(%rip)
30ba(3): mov %rbp,%rsi
30bd(3): mov %rax,%rdi
30c0(5): call 0xffffe3d0(%rip)
30c5(7): mov 0x208fbc(%rip),%rbp
30cc(7): lea 0x5f0d(%rip),%rsi
30d3(5): mov $0x5,%edx
30d8(2): xor %edi,%edi
30da(5): call 0xffffe306(%rip)
30df(3): mov %rbp,%rsi
30e2(3): mov %rax,%rdi
30e5(5): call 0xffffe3ab(%rip)
30ea(7): mov 0x208f97(%rip),%rbp
30f1(7): lea 0x5fd0(%rip),%rsi
30f8(5): mov $0x5,%edx
30fd(2): xor %edi,%edi
30ff(5): call 0xffffe2e1(%rip)
3104(3): mov %rbp,%rsi
3107(3): mov %rax,%rdi
310a(5): call 0xffffe386(%rip)
310f(7): mov 0x208f72(%rip),%rbp
3116(7): lea 0x602b(%rip),%rsi
311d(5): mov $0x5,%edx
3122(2): xor %edi,%edi
3124(5): call 0xffffe2bc(%rip)
3129(3): mov %rbp,%rsi
312c(3): mov %rax,%rdi
312f(5): call 0xffffe361(%rip)
3134(7): lea 0x52e6(%rip),%rsi
313b(2): xor %edi,%edi
313d(5): mov $0x5,%edx
3142(5): call 0xffffe29e(%rip)
3147(7): lea 0x6082(%rip),%rsi
314e(2): xor %edi,%edi
3150(3): mov %rax,%rbp
3153(5): mov $0x5,%edx
3158(5): call 0xffffe288(%rip)
315d(3): mov %rbp,%rdx
3160(3): mov %rax,%rsi
3163(5): mov $0x1,%edi
3168(2): xor %eax,%eax
316a(5): call 0xffffe406(%rip)
316f(7): lea 0x52b9(%rip),%rsi
3176(2): xor %edi,%edi
3178(5): mov $0x5,%edx
317d(5): call 0xffffe263(%rip)
3182(7): lea 0x6107(%rip),%rcx
3189(7): lea 0x52b6(%rip),%rdx
3190(3): mov %rax,%rsi
3193(5): mov $0x1,%edi
3198(2): xor %eax,%eax
319a(5): call 0xffffe3d6(%rip)
319f(2): xor %esi,%esi
31a1(5): mov $0x5,%edi
31a6(5): call 0xffffe3ba(%rip)
31ab(3): test %rax,%rax
31ae(2): jz 0x1e(%rip)
31b0(7): lea 0x529d(%rip),%rsi
31b7(5): mov $0x3,%edx
31bc(3): mov %rax,%rdi
31bf(5): call 0xffffe1b1(%rip)
31c4(2): test %eax,%eax
31c6(6): jnz 0x86(%rip)
31cc(7): lea 0x5285(%rip),%rsi
31d3(2): xor %edi,%edi
31d5(5): mov $0x5,%edx
31da(7): lea 0x5292(%rip),%r12
31e1(7): lea 0x528f(%rip),%rbp
31e8(5): call 0xffffe1f8(%rip)
31ed(7): lea 0x5239(%rip),%rcx
31f4(7): lea 0x6095(%rip),%rdx
31fb(3): mov %rax,%rsi
31fe(5): mov $0x1,%edi
3203(2): xor %eax,%eax
3205(5): call 0xffffe36b(%rip)
320a(7): lea 0x521c(%rip),%rax
3211(7): lea 0x66c9(%rip),%rcx
3218(7): lea 0x60e1(%rip),%rsi
321f(5): mov $0x5,%edx
3224(3): cmp %rax,%r12
3227(4): cmovne %rcx,%rbp
322b(2): xor %edi,%edi
322d(5): call 0xffffe1b3(%rip)
3232(3): mov %rbp,%rcx
3235(3): mov %rax,%rsi
3238(3): mov %r12,%rdx
323b(5): mov $0x1,%edi
3240(2): xor %eax,%eax
3242(5): call 0xffffe32e(%rip)
3247(5): jmp 0xfffffc96(%rip)
324c(7): mov 0x208e35(%rip),%rbp
3253(7): lea 0x605e(%rip),%rsi
325a(2): xor %edi,%edi
325c(5): mov $0x5,%edx
3261(5): call 0xffffe17f(%rip)
3266(3): mov %rbp,%rsi
3269(3): mov %rax,%rdi
326c(5): call 0xffffe224(%rip)
3271(5): jmp 0xffffff5b(%rip)

"close_stdout_set_file_name" :
3280(7): mov %rdi,0x208e41(%rip)
3287(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3290(7): mov %dil,0x208e29(%rip)
3297(1): ret near (%rsp)

"close_stdout" :
32a0(1): push %rbp
32a1(1): push %rbx
32a2(4): sub $0x8,%rsp
32a6(7): mov 0x208ddb(%rip),%rdi
32ad(5): call 0x2d63(%rip)
32b2(2): test %eax,%eax
32b4(2): jz 0x18(%rip)
32b6(5): call 0xffffe09a(%rip)
32bb(7): cmp $0x0,0x208dfe(%rip)
32c2(3): mov %rax,%rbx
32c5(2): jz 0x1e(%rip)
32c7(3): cmp $0x20,(%rax)
32ca(2): jnz 0x19(%rip)
32cc(7): mov 0x208dcd(%rip),%rdi
32d3(5): call 0x2d3d(%rip)
32d8(2): test %eax,%eax
32da(2): jnz 0x48(%rip)
32dc(4): add $0x8,%rsp
32e0(1): pop %rbx
32e1(1): pop %rbp
32e2(1): ret near (%rsp)
32e3(7): lea 0x604e(%rip),%rsi
32ea(2): xor %edi,%edi
32ec(5): mov $0x5,%edx
32f1(5): call 0xffffe0ef(%rip)
32f6(7): mov 0x208dcb(%rip),%rdi
32fd(3): mov %rax,%rbp
3300(3): test %rdi,%rdi
3303(2): jz 0x2a(%rip)
3305(5): call 0x1bab(%rip)
330a(2): mov (%rbx),%esi
330c(7): lea 0x6031(%rip),%rdx
3313(3): mov %rax,%rcx
3316(3): mov %rbp,%r8
3319(2): xor %edi,%edi
331b(2): xor %eax,%eax
331d(5): call 0xffffe263(%rip)
3322(6): mov 0x208cf0(%rip),%edi
3328(5): call 0xffffe058(%rip)
332d(2): mov (%rbx),%esi
332f(7): lea 0x6012(%rip),%rdx
3336(3): mov %rax,%rcx
3339(2): xor %edi,%edi
333b(2): xor %eax,%eax
333d(5): call 0xffffe243(%rip)
3342(2): jmp 0xffffffe0(%rip)

"umaxtostr" :
3350(4): lea 0x14(%rsi),%rcx
3354(4): mov $0x0,0x14(%rsi)
3358(a): mov $0x-3689348814741910323,%rsi
3362(6): nop 0x0(%rax,%rax,1)
3368(3): mov %rdi,%rax
336b(4): sub $0x1,%rcx
336f(3): mul %rax,%rsi,%rdx
3372(4): shr $0x3,%rdx
3376(4): lea 0x0(%rdx,%rdx,4),%rax
337a(3): add %rax,%rax
337d(3): sub %rax,%rdi
3380(3): add $0x30,%edi
3383(3): test %rdx,%rdx
3386(3): mov %dil,(%rcx)
3389(3): mov %rdx,%rdi
338c(2): jnz 0xffffffdc(%rip)
338e(3): mov %rcx,%rax
3391(1): ret near (%rsp)

"set_program_name" :
33a0(3): test %rdi,%rdi
33a3(1): push %rbx
33a4(2): jz 0x79(%rip)
33a6(5): mov $0x2f,%esi
33ab(3): mov %rdi,%rbx
33ae(5): call 0xffffe092(%rip)
33b3(3): test %rax,%rax
33b6(2): jz 0x57(%rip)
33b8(4): lea 0x1(%rax),%r8
33bc(3): mov %r8,%rdx
33bf(3): sub %rbx,%rdx
33c2(4): cmp $0x6,%rdx
33c6(2): jle 0x47(%rip)
33c8(4): lea 0xfffffffa(%rax),%rsi
33cc(7): lea 0x5fb5(%rip),%rdi
33d3(5): mov $0x7,%ecx
33d8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
33da(3): setnbe %dl
33dd(3): sbb $0x0,%dl
33e0(2): test %dl,%dl
33e2(2): jnz 0x2b(%rip)
33e4(7): lea 0x5fa5(%rip),%rdi
33eb(5): mov $0x3,%ecx
33f0(3): mov %r8,%rsi
33f3(3): mov %r8,%rbx
33f6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
33f8(3): setnbe %dl
33fb(3): sbb $0x0,%dl
33fe(2): test %dl,%dl
3400(2): jnz 0xd(%rip)
3402(4): lea 0x4(%rax),%rbx
3406(7): mov %rbx,0x208c73(%rip)
340d(7): mov %rbx,0x208cbc(%rip)
3414(7): mov %rbx,0x208c75(%rip)
341b(1): pop %rbx
341c(1): ret near (%rsp)
341d(7): mov 0x208c7c(%rip),%rcx
3424(7): lea 0x5f25(%rip),%rdi
342b(5): mov $0x37,%edx
3430(5): mov $0x1,%esi
3435(5): call 0xffffe19b(%rip)
343a(5): call 0xffffdf06(%rip)

"gettext_quote.part.1" :
3440(1): push %rbp
3441(1): push %rbx
3442(3): mov %rdi,%rbp
3445(2): mov %esi,%ebx
3447(4): sub $0x8,%rsp
344b(5): call 0x2ca5(%rip)
3450(3): movzx (%rax),%edx
3453(3): and $0xdf,%edx
3456(3): cmp $0x55,%dl
3459(2): jz 0x77(%rip)
345b(3): cmp $0x47,%dl
345e(2): jz 0x22(%rip)
3460(7): lea 0x5f3c(%rip),%rax
3467(7): lea 0x5f37(%rip),%rdx
346e(3): cmp $0x9,%ebx
3471(4): cmovne %rdx,%rax
3475(4): add $0x8,%rsp
3479(1): pop %rbx
347a(1): pop %rbp
347b(1): ret near (%rsp)
347c(4): nop 0x0(%rax)
3480(4): movzx 0x1(%rax),%edx
3484(3): and $0xdf,%edx
3487(3): cmp $0x42,%dl
348a(2): jnz 0xffffffd6(%rip)
348c(4): cmp $0x31,0x2(%rax)
3490(2): jnz 0xffffffd0(%rip)
3492(4): cmp $0x38,0x3(%rax)
3496(2): jnz 0xffffffca(%rip)
3498(4): cmp $0x30,0x4(%rax)
349c(2): jnz 0xffffffc4(%rip)
349e(4): cmp $0x33,0x5(%rax)
34a2(2): jnz 0xffffffbe(%rip)
34a4(4): cmp $0x30,0x6(%rax)
34a8(2): jnz 0xffffffb8(%rip)
34aa(4): cmp $0x0,0x7(%rax)
34ae(2): jnz 0xffffffb2(%rip)
34b0(4): cmp $0x60,0x0(%rbp)
34b4(7): lea 0x5ee1(%rip),%rax
34bb(7): lea 0x5ede(%rip),%rdx
34c2(4): cmovne %rdx,%rax
34c6(4): add $0x8,%rsp
34ca(1): pop %rbx
34cb(1): pop %rbp
34cc(1): ret near (%rsp)
34cd(3): nop (%rax)
34d0(4): movzx 0x1(%rax),%edx
34d4(3): and $0xdf,%edx
34d7(3): cmp $0x54,%dl
34da(2): jnz 0xffffff86(%rip)
34dc(4): movzx 0x2(%rax),%edx
34e0(3): and $0xdf,%edx
34e3(3): cmp $0x46,%dl
34e6(6): jnz 0xffffff7a(%rip)
34ec(4): cmp $0x2d,0x3(%rax)
34f0(6): jnz 0xffffff70(%rip)
34f6(4): cmp $0x38,0x4(%rax)
34fa(6): jnz 0xffffff66(%rip)
3500(4): cmp $0x0,0x5(%rax)
3504(6): jnz 0xffffff5c(%rip)
350a(4): cmp $0x60,0x0(%rbp)
350e(7): lea 0x5e7f(%rip),%rax
3515(7): lea 0x5e7c(%rip),%rdx
351c(4): cmovne %rdx,%rax
3520(4): add $0x8,%rsp
3524(1): pop %rbx
3525(1): pop %rbp
3526(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3530(2): push %r15
3532(2): push %r14
3534(3): mov %r8d,%r15d
3537(2): push %r13
3539(2): push %r12
353b(3): mov %rdi,%r14
353e(1): push %rbp
353f(1): push %rbx
3540(3): mov %r9d,%ebx
3543(3): mov %rsi,%r13
3546(3): mov %rcx,%rbp
3549(3): and $0x2,%ebx
354c(7): sub $0xb8,%rsp
3553(8): mov 0xf0(%rsp),%rax
355b(5): mov %rdx,0x10(%rsp)
3560(5): mov %r8d,0x8(%rsp)
3565(5): mov %r9d,0x78(%rsp)
356a(5): mov %rax,0x20(%rsp)
356f(8): mov 0xf8(%rsp),%rax
3577(5): mov %rax,0x68(%rsp)
357c(8): mov 0x100(%rsp),%rax
3584(5): mov %rax,0x60(%rsp)
3589(9): mov $0x28,%rax
3592(8): mov %rax,0xa8(%rsp)
359a(2): xor %eax,%eax
359c(5): call 0xffffde54(%rip)
35a1(4): cmp $0xa,%r15d
35a5(5): mov %rax,0x58(%rsp)
35aa(6): jnbe 0x11b5(%rip)
35b0(7): lea 0x5e49(%rip),%rcx
35b7(3): mov %r15d,%edx
35ba(4): movsxd 0x0(%rcx,%rdx,4),%rax
35be(3): add %rcx,%rax
35c1(2): jmp %rax
35c3(5): mov $0x1,0xe(%rsp)
35c8(5): mov $0x0,0x7c(%rsp)
35cd(3): xor %r12d,%r12d
35d0(9): mov $0x0,0x50(%rsp)
35d9(5): mov $0x1,0xf(%rsp)
35de(5): mov $0x0,0xd(%rsp)
35e3(7): lea 0x5dbb(%rip),%rax
35ea(9): mov $0x1,0x18(%rsp)
35f3(3): xor %r15d,%r15d
35f6(8): mov $0x2,0x8(%rsp)
35fe(5): mov %rax,0x48(%rsp)
3603(3): xor %r11d,%r11d
3606(3): mov %rbp,%rax
3609(3): mov %r12d,%r8d
360c(3): mov %r11,%rbp
360f(3): mov %rax,%r11
3612(6): nop 0x0(%rax,%rax,1)
3618(3): cmp %rbp,%r11
361b(4): setnz %r12b
361f(4): cmp $0xffffffff,%r11
3623(2): jnz 0xf(%rip)
3625(5): mov 0x10(%rsp),%rax
362a(4): cmp $0x0,0x0(%rax,%rbp,1)
362e(4): setnz %r12b
3632(3): test %r12b,%r12b
3635(6): jz 0x65b(%rip)
363b(5): cmp $0x2,0x8(%rsp)
3640(5): mov 0x10(%rsp),%rdi
3645(4): lea 0x0(%rdi,%rbp,1),%r9
3649(3): setnz %al
364c(4): and 0xd(%rsp),%al
3650(3): mov %eax,%r10d
3653(6): jz 0xad(%rip)
3659(5): mov 0x18(%rsp),%rax
365e(3): test %rax,%rax
3661(6): jz 0x42f(%rip)
3667(4): cmp $0xffffffff,%r11
366b(5): lea 0x0(%rbp,%rax,1),%rbx
3670(2): jnz 0x30(%rip)
3672(4): cmp $0x1,%rax
3676(2): jbe 0x2a(%rip)
3678(5): mov %r8b,0x38(%rsp)
367d(5): mov %r10b,0x30(%rsp)
3682(5): mov %r9,0x28(%rsp)
3687(5): call 0xffffdd79(%rip)
368c(6): movzx 0x38(%rsp),%r8d
3692(6): movzx 0x30(%rsp),%r10d
3698(3): mov %rax,%r11
369b(5): mov 0x28(%rsp),%r9
36a0(3): cmp %r11,%rbx
36a3(5): mov %r10b,0x28(%rsp)
36a8(6): jnbe 0x5b8(%rip)
36ae(5): mov 0x18(%rsp),%rdx
36b3(5): mov 0x48(%rsp),%rsi
36b8(3): mov %r9,%rdi
36bb(5): mov %r11,0x40(%rsp)
36c0(5): mov %r8b,0x38(%rsp)
36c5(5): mov %r9,0x30(%rsp)
36ca(5): call 0xffffddb6(%rip)
36cf(2): test %eax,%eax
36d1(5): mov 0x30(%rsp),%r9
36d6(6): movzx 0x38(%rsp),%r8d
36dc(5): mov 0x40(%rsp),%r11
36e1(6): jnz 0x57f(%rip)
36e7(5): cmp $0x0,0xf(%rsp)
36ec(6): movzx 0x28(%rsp),%r10d
36f2(6): jnz 0xf83(%rip)
36f8(8): nop 0x0(%rax,%rax,1)
3700(4): movzx (%r9),%ebx
3704(3): cmp $0x7e,%bl
3707(6): jnbe 0x321(%rip)
370d(7): lea 0x5d18(%rip),%rcx
3714(3): movzx %bl,%edx
3717(4): movsxd 0x0(%rcx,%rdx,4),%rax
371b(3): add %rcx,%rax
371e(2): jmp %rax
3720(3): xor %r10d,%r10d
3723(4): cmp $0x1,%r11
3727(3): setnz %al
372a(4): cmp $0xffffffff,%r11
372e(2): jnz 0xe(%rip)
3730(5): mov 0x10(%rsp),%rax
3735(4): cmp $0x0,0x1(%rax)
3739(3): setnz %al
373c(5): cmp $0x2,0x8(%rsp)
3741(3): setz %dl
3744(2): test %al,%al
3746(6): jz 0x252(%rip)
374c(3): xor %r12d,%r12d
374f(2): xor %eax,%eax
3751(7): nop 0x0(%rax)
3758(5): cmp $0x1,0xd(%rsp)
375d(6): jnz 0x115(%rip)
3763(2): test %dl,%dl
3765(6): jnz 0x10d(%rip)
376b(5): mov 0x20(%rsp),%rsi
3770(3): test %rsi,%rsi
3773(2): jz 0x16(%rip)
3775(2): mov %ebx,%edx
3777(3): shr $0x5,%dl
377a(3): movzx %dl,%edx
377d(3): mov 0x0(%rsi,%rdx,4),%edx
3780(3): bt %ebx,%edx
3783(6): jb 0x150(%rip)
3789(3): test %r10b,%r10b
378c(6): jnz 0x147(%rip)
3792(3): xor $0x1,%eax
3795(4): add $0x1,%rbp
3799(3): and %r8d,%eax
379c(2): test %al,%al
379e(2): jz 0x22(%rip)
37a0(3): cmp %r15,%r13
37a3(2): jbe 0x7(%rip)
37a5(5): mov $0x27,0x0(%r14,%r15,1)
37aa(4): lea 0x1(%r15),%rax
37ae(3): cmp %rax,%r13
37b1(2): jbe 0x8(%rip)
37b3(6): mov $0x27,0x1(%r14,%r15,1)
37b9(4): add $0x2,%r15
37bd(3): xor %r8d,%r8d
37c0(3): cmp %r13,%r15
37c3(2): jnb 0x6(%rip)
37c5(4): mov %bl,0x0(%r14,%r15,1)
37c9(5): movzx 0xe(%rsp),%edi
37ce(4): add $0x1,%r15
37d2(5): mov $0x0,%eax
37d7(3): test %r12b,%r12b
37da(3): cmove %eax,%edi
37dd(5): mov %dil,0xe(%rsp)
37e2(5): jmp 0xfffffe36(%rip)
37e7(9): nop 0x0(%rax,%rax,1)
37f0(3): xor %r10d,%r10d
37f3(4): mov 0x8(%rsp),%eax
37f7(3): cmp $0x2,%eax
37fa(6): jz 0x5be(%rip)
3800(3): cmp $0x5,%eax
3803(6): jz 0x575(%rip)
3809(3): cmp $0x2,%eax
380c(5): mov $0x3f,%ebx
3811(3): setz %dl
3814(3): xor %r12d,%r12d
3817(2): xor %eax,%eax
3819(5): jmp 0xffffff3f(%rip)
381e(2): nop 
3820(3): xor %r10d,%r10d
3823(5): cmp $0x2,0x8(%rsp)
3828(6): jz 0x508(%rip)
382e(5): mov %r12b,0x7c(%rsp)
3833(2): xor %edx,%edx
3835(2): xor %eax,%eax
3837(5): mov $0x27,%ebx
383c(5): jmp 0xffffff1c(%rip)
3841(7): nop 0x0(%rax)
3848(5): mov $0x9,%edx
384d(5): mov $0x74,%ebx
3852(5): cmp $0x2,0x8(%rsp)
3857(3): setz %al
385a(4): and 0xf(%rsp),%al
385e(6): jnz 0x150(%rip)
3864(5): cmp $0x0,0xd(%rsp)
3869(2): jnz 0x67(%rip)
386b(2): mov %edx,%ebx
386d(3): xor %r12d,%r12d
3870(2): xor %eax,%eax
3872(5): cmp $0x0,0xf(%rsp)
3877(6): jnz 0xfffffef4(%rip)
387d(5): jmp 0xffffff0c(%rip)
3882(6): nop 0x0(%rax,%rax,1)
3888(5): mov $0x8,%edx
388d(5): mov $0x62,%ebx
3892(2): jmp 0xffffffd2(%rip)
3894(4): nop 0x0(%rax)
3898(5): cmp $0x2,0x8(%rsp)
389d(6): jz 0x3d3(%rip)
38a3(5): cmp $0x0,0xd(%rsp)
38a8(6): jz 0x218(%rip)
38ae(5): cmp $0x0,0xf(%rsp)
38b3(6): jz 0x20d(%rip)
38b9(6): cmp $0x0,0x18(%rsp)
38bf(6): jnz 0x3bc(%rip)
38c5(5): mov $0x5c,%ebx
38ca(6): nop 0x0(%rax,%rax,1)
38d0(3): xor %r12d,%r12d
38d3(5): cmp $0x2,0x8(%rsp)
38d8(3): setz %dl
38db(5): cmp $0x0,0xf(%rsp)
38e0(2): mov %edx,%eax
38e2(6): jnz 0x856(%rip)
38e8(3): mov %r8d,%eax
38eb(3): xor $0x1,%eax
38ee(2): and %dl,%al
38f0(2): jz 0x31(%rip)
38f2(3): cmp %r15,%r13
38f5(2): jbe 0x7(%rip)
38f7(5): mov $0x27,0x0(%r14,%r15,1)
38fc(4): lea 0x1(%r15),%rdx
3900(3): cmp %rdx,%r13
3903(2): jbe 0x8(%rip)
3905(6): mov $0x24,0x1(%r14,%r15,1)
390b(4): lea 0x2(%r15),%rdx
390f(3): cmp %rdx,%r13
3912(2): jbe 0x8(%rip)
3914(6): mov $0x27,0x2(%r14,%r15,1)
391a(4): add $0x3,%r15
391e(3): mov %eax,%r8d
3921(3): cmp %r15,%r13
3924(2): jbe 0x7(%rip)
3926(5): mov $0x5c,0x0(%r14,%r15,1)
392b(4): add $0x1,%r15
392f(4): add $0x1,%rbp
3933(5): jmp 0xfffffe8d(%rip)
3938(8): nop 0x0(%rax,%rax,1)
3940(5): cmp $0x0,0xd(%rsp)
3945(6): jnz 0x1ce(%rip)
394b(2): xor %edx,%edx
394d(5): test $0x1,0x78(%rsp)
3952(6): jz 0xffffff19(%rip)
3958(4): add $0x1,%rbp
395c(5): jmp 0xfffffcbc(%rip)
3961(7): nop 0x0(%rax)
3968(5): cmp $0x2,0x8(%rsp)
396d(3): setz %dl
3970(2): xor %eax,%eax
3972(5): jmp 0xfffffde6(%rip)
3977(9): nop 0x0(%rax,%rax,1)
3980(5): mov $0x7,%edx
3985(5): mov $0x61,%ebx
398a(5): jmp 0xfffffeda(%rip)
398f(1): nop 
3990(5): cmp $0x2,0x8(%rsp)
3995(3): setz %dl
3998(3): test %rbp,%rbp
399b(6): jnz 0xfffffdb1(%rip)
39a1(5): movzx 0xf(%rsp),%eax
39a6(2): and %dl,%al
39a8(6): jz 0xfffffdb0(%rip)
39ae(3): mov %r11,%rbp
39b1(8): mov $0x2,0x8(%rsp)
39b9(5): jmp 0x700(%rip)
39be(2): nop 
39c0(5): cmp $0x2,0x8(%rsp)
39c5(3): setz %dl
39c8(3): xor %r12d,%r12d
39cb(2): jmp 0xffffffd6(%rip)
39cd(3): nop (%rax)
39d0(5): cmp $0x2,0x8(%rsp)
39d5(5): mov $0x20,%ebx
39da(3): setz %dl
39dd(2): jmp 0xffffffc4(%rip)
39df(1): nop 
39e0(5): mov $0xd,%edx
39e5(5): mov $0x72,%ebx
39ea(5): jmp 0xfffffe68(%rip)
39ef(1): nop 
39f0(5): mov $0xc,%edx
39f5(5): mov $0x66,%ebx
39fa(5): jmp 0xfffffe6a(%rip)
39ff(1): nop 
3a00(5): mov $0xb,%edx
3a05(5): mov $0x76,%ebx
3a0a(5): jmp 0xfffffe5a(%rip)
3a0f(1): nop 
3a10(5): mov $0xa,%edx
3a15(5): mov $0x6e,%ebx
3a1a(5): jmp 0xfffffe38(%rip)
3a1f(1): nop 
3a20(3): xor %r10d,%r10d
3a23(5): nop 0x0(%rax,%rax,1)
3a28(6): cmp $0x1,0x58(%rsp)
3a2e(6): jnz 0x3aa(%rip)
3a34(5): mov %r11,0x38(%rsp)
3a39(5): mov %r8b,0x30(%rsp)
3a3e(5): mov %r10b,0x28(%rsp)
3a43(5): call 0xffffdbcd(%rip)
3a48(3): mov (%rax),%rcx
3a4b(3): movzx %bl,%edx
3a4e(6): movzx 0x28(%rsp),%r10d
3a54(6): movzx 0x30(%rsp),%r8d
3a5a(5): mov 0x38(%rsp),%r11
3a5f(5): mov $0x1,%edi
3a64(4): movzx 0x0(%rcx,%rdx,2),%eax
3a68(4): and $0x4000,%ax
3a6c(4): setnz %r12b
3a70(3): setz %al
3a73(4): and 0xd(%rsp),%al
3a77(2): test %al,%al
3a79(6): jnz 0x998(%rip)
3a7f(5): cmp $0x2,0x8(%rsp)
3a84(3): setz %dl
3a87(5): jmp 0xfffffcd1(%rip)
3a8c(4): nop 0x0(%rax)
3a90(4): movzx (%r9),%ebx
3a94(3): cmp $0x7e,%bl
3a97(2): jnbe 0xffffff89(%rip)
3a99(7): lea 0x5b88(%rip),%rcx
3aa0(3): movzx %bl,%edx
3aa3(4): movsxd 0x0(%rcx,%rdx,4),%rax
3aa7(3): add %rcx,%rax
3aaa(2): jmp %rax
3aac(4): nop 0x0(%rax)
3ab0(3): xor %r10d,%r10d
3ab3(5): cmp $0x0,0xd(%rsp)
3ab8(6): jnz 0xfffffdf6(%rip)
3abe(2): nop 
3ac0(5): mov $0x5c,%edx
3ac5(5): mov $0x5c,%ebx
3aca(5): jmp 0xfffffd9a(%rip)
3acf(1): nop 
3ad0(5): mov $0xc,%edx
3ad5(3): xor %r10d,%r10d
3ad8(5): mov $0x66,%ebx
3add(5): jmp 0xfffffd87(%rip)
3ae2(6): nop 0x0(%rax,%rax,1)
3ae8(5): mov $0xa,%edx
3aed(3): xor %r10d,%r10d
3af0(5): mov $0x6e,%ebx
3af5(5): jmp 0xfffffd5d(%rip)
3afa(6): nop 0x0(%rax,%rax,1)
3b00(5): mov $0x61,%ebx
3b05(5): jmp 0xfffffdcb(%rip)
3b0a(6): nop 0x0(%rax,%rax,1)
3b10(3): xor %r10d,%r10d
3b13(5): cmp $0x2,0x8(%rsp)
3b18(3): setz %dl
3b1b(5): cmp $0x0,0xf(%rsp)
3b20(6): jnz 0xb9a(%rip)
3b26(3): mov %r8d,%eax
3b29(3): mov %r15,%rcx
3b2c(3): xor $0x1,%eax
3b2f(2): and %dl,%al
3b31(2): jz 0x2f(%rip)
3b33(3): cmp %r15,%r13
3b36(2): jbe 0x7(%rip)
3b38(5): mov $0x27,0x0(%r14,%r15,1)
3b3d(4): lea 0x1(%r15),%rcx
3b41(3): cmp %rcx,%r13
3b44(2): jbe 0x8(%rip)
3b46(6): mov $0x24,0x1(%r14,%r15,1)
3b4c(4): lea 0x2(%r15),%rcx
3b50(3): cmp %rcx,%r13
3b53(6): jnbe 0x636(%rip)
3b59(4): lea 0x3(%r15),%rcx
3b5d(3): mov %eax,%r8d
3b60(3): cmp %rcx,%r13
3b63(2): jbe 0x7(%rip)
3b65(5): mov $0x5c,0x0(%r14,%rcx,1)
3b6a(5): cmp $0x2,0x8(%rsp)
3b6f(4): lea 0x1(%rcx),%r15
3b73(6): jz 0x606(%rip)
3b79(4): lea 0x1(%rbp),%rax
3b7d(3): cmp %r11,%rax
3b80(2): jnb 0x1b(%rip)
3b82(5): mov 0x10(%rsp),%rax
3b87(5): movzx 0x1(%rax,%rbp,1),%eax
3b8c(4): mov %al,0x28(%rsp)
3b90(3): sub $0x30,%eax
3b93(2): cmp $0x9,%al
3b95(6): jbe 0x834(%rip)
3b9b(3): mov %r12d,%eax
3b9e(5): mov $0x30,%ebx
3ba3(3): xor %r12d,%r12d
3ba6(5): jmp 0xfffffbb2(%rip)
3bab(5): nop 0x0(%rax,%rax,1)
3bb0(5): cmp $0x2,0x8(%rsp)
3bb5(3): mov %r10d,%r12d
3bb8(3): setz %dl
3bbb(3): xor %r10d,%r10d
3bbe(2): xor %eax,%eax
3bc0(5): jmp 0xfffffb98(%rip)
3bc5(3): nop (%rax)
3bc8(5): cmp $0x2,0x8(%rsp)
3bcd(3): setz %dl
3bd0(3): xor %r10d,%r10d
3bd3(5): jmp 0xfffffdc5(%rip)
3bd8(8): nop 0x0(%rax,%rax,1)
3be0(5): cmp $0x2,0x8(%rsp)
3be5(3): setz %dl
3be8(3): xor %r10d,%r10d
3beb(3): xor %r12d,%r12d
3bee(5): jmp 0xfffffdb3(%rip)
3bf3(5): nop 0x0(%rax,%rax,1)
3bf8(5): cmp $0x2,0x8(%rsp)
3bfd(3): mov %r10d,%r12d
3c00(5): mov $0x20,%ebx
3c05(3): setz %dl
3c08(3): xor %r10d,%r10d
3c0b(5): jmp 0xfffffd96(%rip)
3c10(5): mov $0xd,%edx
3c15(3): xor %r10d,%r10d
3c18(5): mov $0x72,%ebx
3c1d(5): jmp 0xfffffc35(%rip)
3c22(6): nop 0x0(%rax,%rax,1)
3c28(5): mov $0x76,%ebx
3c2d(5): jmp 0xfffffca3(%rip)
3c32(6): nop 0x0(%rax,%rax,1)
3c38(5): mov $0x9,%edx
3c3d(3): xor %r10d,%r10d
3c40(5): mov $0x74,%ebx
3c45(5): jmp 0xfffffc0d(%rip)
3c4a(6): nop 0x0(%rax,%rax,1)
3c50(5): mov $0x62,%ebx
3c55(5): jmp 0xfffffc7b(%rip)
3c5a(6): nop 0x0(%rax,%rax,1)
3c60(3): xor %r10d,%r10d
3c63(5): jmp 0xfffffa9d(%rip)
3c68(8): nop 0x0(%rax,%rax,1)
3c70(5): cmp $0x0,0xf(%rsp)
3c75(6): jnz 0x96b(%rip)
3c7b(4): add $0x1,%rbp
3c7f(3): mov %r8d,%eax
3c82(3): xor %r12d,%r12d
3c85(5): mov $0x5c,%ebx
3c8a(5): jmp 0xfffffb12(%rip)
3c8f(1): nop 
3c90(5): cmp $0x2,0x8(%rsp)
3c95(5): movzx 0xf(%rsp),%ebx
3c9a(3): mov %r8d,%r12d
3c9d(3): mov %r11,%rbp
3ca0(3): setz %dl
3ca3(2): mov %ebx,%eax
3ca5(3): test %r15,%r15
3ca8(3): setz %cl
3cab(2): and %edx,%eax
3cad(2): and %cl,%al
3caf(6): jnz 0xa67(%rip)
3cb5(2): mov %ebx,%eax
3cb7(3): xor $0x1,%eax
3cba(2): and %al,%dl
3cbc(6): jz 0x970(%rip)
3cc2(5): cmp $0x0,0x7c(%rsp)
3cc7(6): jz 0x963(%rip)
3ccd(5): cmp $0x0,0xe(%rsp)
3cd2(6): jnz 0x9fb(%rip)
3cd8(3): test %r13,%r13
3cdb(3): setz %al
3cde(6): cmp $0x0,0x50(%rsp)
3ce4(3): setnz %dl
3ce7(2): and %dl,%al
3ce9(6): jz 0xa23(%rip)
3cef(5): mov 0x50(%rsp),%r13
3cf4(7): lea 0x56aa(%rip),%rbx
3cfb(4): mov $0x27,(%r14)
3cff(8): mov $0x2,0x8(%rsp)
3d07(6): mov $0x1,%r15d
3d0d(9): mov $0x1,0x18(%rsp)
3d16(5): mov $0x0,0xf(%rsp)
3d1b(5): mov %rbx,0x48(%rsp)
3d20(4): mov %al,0x7c(%rsp)
3d24(5): jmp 0xfffff8df(%rip)
3d29(7): nop 0x0(%rax)
3d30(5): cmp $0x0,0xf(%rsp)
3d35(6): jnz 0x8ab(%rip)
3d3b(3): test %r13,%r13
3d3e(6): jz 0x402(%rip)
3d44(2): xor %edx,%edx
3d46(6): cmp $0x0,0x50(%rsp)
3d4c(6): jnz 0x3f4(%rip)
3d52(5): mov %r13,0x50(%rsp)
3d57(4): add $0x3,%r15
3d5b(2): xor %eax,%eax
3d5d(5): mov %r12b,0x7c(%rsp)
3d62(3): xor %r8d,%r8d
3d65(3): mov %rdx,%r13
3d68(5): mov $0x27,%ebx
3d6d(5): jmp 0xfffffa1c(%rip)
3d72(6): nop 0x0(%rax,%rax,1)
3d78(5): test $0x4,0x78(%rsp)
3d7d(2): jz 0x23(%rip)
3d7f(4): lea 0x2(%rbp),%rcx
3d83(3): cmp %r11,%rcx
3d86(2): jnb 0x1a(%rip)
3d88(5): mov 0x10(%rsp),%rax
3d8d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3d92(6): jz 0x790(%rip)
3d98(8): nop 0x0(%rax,%rax,1)
3da0(2): xor %edx,%edx
3da2(3): xor %r12d,%r12d
3da5(2): xor %eax,%eax
3da7(5): mov $0x3f,%ebx
3dac(5): jmp 0xfffff9ac(%rip)
3db1(7): nop 0x0(%rax)
3db8(5): cmp $0x0,0xf(%rsp)
3dbd(6): jnz 0x823(%rip)
3dc3(3): xor %r12d,%r12d
3dc6(2): xor %eax,%eax
3dc8(5): mov $0x3f,%ebx
3dcd(5): jmp 0xfffff9bc(%rip)
3dd2(6): nop 0x0(%rax,%rax,1)
3dd8(8): lea 0xa0(%rsp),%rax
3de0(4): cmp $0xffffffff,%r11
3de4(c): mov $0x0,0xa0(%rsp)
3df0(5): mov %rax,0x28(%rsp)
3df5(2): jnz 0x2f(%rip)
3df7(5): mov 0x10(%rsp),%rdi
3dfc(5): mov %r8b,0x40(%rsp)
3e01(5): mov %r10b,0x38(%rsp)
3e06(5): mov %r9,0x30(%rsp)
3e0b(5): call 0xffffd5f5(%rip)
3e10(6): movzx 0x40(%rsp),%r8d
3e16(6): movzx 0x38(%rsp),%r10d
3e1c(3): mov %rax,%r11
3e1f(5): mov 0x30(%rsp),%r9
3e24(8): lea 0x9c(%rsp),%rax
3e2c(2): xor %ecx,%ecx
3e2e(4): mov %bl,0x7e(%rsp)
3e32(5): mov %r8b,0x7d(%rsp)
3e37(3): mov %rcx,%rbx
3e3a(8): mov %r9,0x88(%rsp)
3e42(5): mov %rax,0x38(%rsp)
3e47(5): mov %r10b,0x7f(%rsp)
3e4c(8): mov %r15,0x80(%rsp)
3e54(5): mov %r14,0x40(%rsp)
3e59(5): mov %r13,0x70(%rsp)
3e5e(5): mov %r11,0x30(%rsp)
3e63(5): mov 0x10(%rsp),%rax
3e68(5): lea 0x0(%rbp,%rbx,1),%r14
3e6d(5): mov 0x30(%rsp),%rdx
3e72(5): mov 0x28(%rsp),%rcx
3e77(5): mov 0x38(%rsp),%rdi
3e7c(4): lea 0x0(%rax,%r14,1),%r13
3e80(3): sub %r14,%rdx
3e83(3): mov %r13,%rsi
3e86(5): call 0x207a(%rip)
3e8b(3): test %rax,%rax
3e8e(3): mov %rax,%r15
3e91(2): jz 0x50(%rip)
3e93(4): cmp $0xffffffff,%rax
3e97(6): jz 0x61e(%rip)
3e9d(4): cmp $0xfffffffe,%rax
3ea1(6): jz 0x5a0(%rip)
3ea7(5): cmp $0x2,0x8(%rsp)
3eac(3): setz %al
3eaf(4): and 0xf(%rsp),%al
3eb3(6): jnz 0x19d(%rip)
3eb9(7): mov 0x9c(%rsp),%edi
3ec0(5): call 0xffffd740(%rip)
3ec5(5): mov 0x28(%rsp),%rdi
3eca(2): test %eax,%eax
3ecc(5): mov $0x0,%eax
3ed1(4): cmove %eax,%r12d
3ed5(3): add %r15,%rbx
3ed8(5): call 0xffffd718(%rip)
3edd(2): test %eax,%eax
3edf(2): jz 0xffffff84(%rip)
3ee1(3): mov %r12d,%edx
3ee4(3): mov %rbx,%rdi
3ee7(6): movzx 0x7d(%rsp),%r8d
3eed(3): xor $0x1,%edx
3ef0(5): movzx 0x7e(%rsp),%ebx
3ef5(6): movzx 0x7f(%rsp),%r10d
3efb(4): and 0xd(%rsp),%dl
3eff(8): mov 0x80(%rsp),%r15
3f07(5): mov 0x40(%rsp),%r14
3f0c(5): mov 0x70(%rsp),%r13
3f11(5): mov 0x30(%rsp),%r11
3f16(4): cmp $0x1,%rdi
3f1a(6): jbe 0x601(%rip)
3f20(3): mov %rdi,%rcx
3f23(2): xor %esi,%esi
3f25(6): movzx 0xf(%rsp),%r9d
3f2b(3): add %rbp,%rcx
3f2e(5): mov 0x10(%rsp),%rdi
3f33(5): jmp 0xbb(%rip)
3f38(8): nop 0x0(%rax,%rax,1)
3f40(5): cmp $0x2,0x8(%rsp)
3f45(3): setz %al
3f48(3): test %r9b,%r9b
3f4b(6): jnz 0x4b5(%rip)
3f51(3): mov %r8d,%esi
3f54(3): xor $0x1,%esi
3f57(3): and %sil,%al
3f5a(2): jz 0x31(%rip)
3f5c(3): cmp %r15,%r13
3f5f(2): jbe 0x7(%rip)
3f61(5): mov $0x27,0x0(%r14,%r15,1)
3f66(4): lea 0x1(%r15),%rsi
3f6a(3): cmp %rsi,%r13
3f6d(2): jbe 0x8(%rip)
3f6f(6): mov $0x24,0x1(%r14,%r15,1)
3f75(4): lea 0x2(%r15),%rsi
3f79(3): cmp %rsi,%r13
3f7c(2): jbe 0x8(%rip)
3f7e(6): mov $0x27,0x2(%r14,%r15,1)
3f84(4): add $0x3,%r15
3f88(3): mov %eax,%r8d
3f8b(3): cmp %r15,%r13
3f8e(2): jbe 0x7(%rip)
3f90(5): mov $0x5c,0x0(%r14,%r15,1)
3f95(4): lea 0x1(%r15),%rax
3f99(3): cmp %rax,%r13
3f9c(2): jbe 0xf(%rip)
3f9e(2): mov %ebx,%eax
3fa0(3): shr $0x6,%al
3fa3(3): add $0x30,%eax
3fa6(5): mov %al,0x1(%r14,%r15,1)
3fab(4): lea 0x2(%r15),%rax
3faf(3): cmp %rax,%r13
3fb2(2): jbe 0x12(%rip)
3fb4(2): mov %ebx,%eax
3fb6(3): shr $0x3,%al
3fb9(3): and $0x7,%eax
3fbc(3): add $0x30,%eax
3fbf(5): mov %al,0x2(%r14,%r15,1)
3fc4(3): and $0x7,%ebx
3fc7(4): add $0x1,%rbp
3fcb(4): add $0x3,%r15
3fcf(3): add $0x30,%ebx
3fd2(3): cmp %rcx,%rbp
3fd5(6): jnb 0xfffff7eb(%rip)
3fdb(2): mov %edx,%esi
3fdd(3): cmp %r15,%r13
3fe0(2): jbe 0x6(%rip)
3fe2(4): mov %bl,0x0(%r14,%r15,1)
3fe6(4): movzx 0x0(%rdi,%rbp,1),%ebx
3fea(4): add $0x1,%r15
3fee(2): test %dl,%dl
3ff0(6): jnz 0xffffff50(%rip)
3ff6(2): mov %esi,%eax
3ff8(3): xor $0x1,%eax
3ffb(3): and %r8d,%eax
3ffe(3): test %r10b,%r10b
4001(2): jz 0x10(%rip)
4003(3): cmp %r15,%r13
4006(2): jbe 0x7(%rip)
4008(5): mov $0x5c,0x0(%r14,%r15,1)
400d(4): add $0x1,%r15
4011(4): add $0x1,%rbp
4015(3): cmp %rcx,%rbp
4018(6): jnb 0xfffff784(%rip)
401e(2): test %al,%al
4020(6): jz 0x3fe(%rip)
4026(3): cmp %r15,%r13
4029(2): jbe 0x7(%rip)
402b(5): mov $0x27,0x0(%r14,%r15,1)
4030(4): lea 0x1(%r15),%rax
4034(3): cmp %rax,%r13
4037(2): jbe 0x8(%rip)
4039(6): mov $0x27,0x1(%r14,%r15,1)
403f(4): add $0x2,%r15
4043(3): xor %r10d,%r10d
4046(3): xor %r8d,%r8d
4049(2): jmp 0xffffff94(%rip)
404b(5): nop 0x0(%rax,%rax,1)
4050(4): cmp $0x1,%r15
4054(6): jz 0xfffffe65(%rip)
405a(5): mov 0x10(%rsp),%rdi
405f(4): lea 0x0(%rdi,%r15,1),%rcx
4063(5): lea 0x1(%rdi,%r14,1),%rdx
4068(4): lea 0x0(%rcx,%r14,1),%r8
406c(2): jmp 0x11(%rip)
406e(2): nop 
4070(4): add $0x1,%rdx
4074(3): cmp %rdx,%r8
4077(6): jz 0xfffffe42(%rip)
407d(3): movzx (%rdx),%ecx
4080(3): sub $0x5b,%ecx
4083(3): cmp $0x21,%cl
4086(2): jnbe 0xffffffea(%rip)
4088(5): mov $0x1,%esi
408d(3): shl/sal %cl,%rsi
4090(3): mov %rsi,%rcx
4093(a): mov $0x8589934635,%rsi
409d(3): test %rsi,%rcx
40a0(2): jz 0xffffffd0(%rip)
40a2(5): mov 0x40(%rsp),%r14
40a7(5): mov 0x70(%rsp),%r13
40ac(5): mov 0x30(%rsp),%rbp
40b1(8): mov $0x2,0x8(%rsp)
40b9(5): cmp $0x0,0xd(%rsp)
40be(2): jz 0x12(%rip)
40c0(2): test %al,%al
40c2(5): mov $0x4,%eax
40c7(5): cmove 0x8(%rsp),%eax
40cc(4): mov %eax,0x8(%rsp)
40d0(4): sub $0x8,%rsp
40d4(3): mov %rbp,%rcx
40d7(3): mov %r13,%rsi
40da(4): push 0x68(%rsp)
40de(4): push 0x78(%rsp)
40e2(3): mov %r14,%rdi
40e5(2): push $0x0
40e7(8): mov 0x98(%rsp),%r9d
40ef(5): mov 0x28(%rsp),%r8d
40f4(5): mov 0x30(%rsp),%rdx
40f9(4): and $0xfd,%r9d
40fd(5): call 0xfffff433(%rip)
4102(4): add $0x20,%rsp
4106(3): mov %rax,%r15
4109(8): mov 0xa8(%rsp),%rbx
4111(9): xor $0x28,%rbx
411a(3): mov %r15,%rax
411d(6): jnz 0x606(%rip)
4123(7): add $0xb8,%rsp
412a(1): pop %rbx
412b(1): pop %rbp
412c(2): pop %r12
412e(2): pop %r13
4130(2): pop %r14
4132(2): pop %r15
4134(1): ret near (%rsp)
4135(3): nop (%rax)
4138(3): mov %r11,%rbp
413b(5): jmp 0xffffff7e(%rip)
4140(3): cmp %r15,%r13
4143(2): jbe 0x7(%rip)
4145(5): mov $0x27,0x0(%r14,%r15,1)
414a(4): lea 0x1(%r15),%rax
414e(3): cmp %rax,%r13
4151(2): jbe 0x8(%rip)
4153(6): mov $0x5c,0x1(%r14,%r15,1)
4159(4): lea 0x2(%r15),%rax
415d(3): cmp %rax,%r13
4160(6): jbe 0x5f2(%rip)
4166(3): mov %r13,%rdx
4169(6): mov $0x27,0x2(%r14,%r15,1)
416f(5): mov 0x50(%rsp),%r13
4174(5): jmp 0xfffffbde(%rip)
4179(3): mov %r12d,%eax
417c(5): mov $0x30,%ebx
4181(3): xor %r12d,%r12d
4184(5): jmp 0xfffff605(%rip)
4189(6): mov $0x27,0x2(%r14,%r15,1)
418f(5): jmp 0xfffff9ca(%rip)
4194(2): test %ebx,%ebx
4196(6): jnz 0xfffff42d(%rip)
419c(5): mov $0x1,0xd(%rsp)
41a1(3): test %r13,%r13
41a4(6): jnz 0x596(%rip)
41aa(7): lea 0x51f4(%rip),%rax
41b1(9): mov $0x0,0x50(%rsp)
41ba(5): mov $0x1,0xe(%rsp)
41bf(5): mov $0x0,0x7c(%rsp)
41c4(3): xor %r12d,%r12d
41c7(5): mov $0x0,0xf(%rsp)
41cc(9): mov $0x1,0x18(%rsp)
41d5(5): mov %rax,0x48(%rsp)
41da(6): mov $0x1,%r15d
41e0(8): mov $0x2,0x8(%rsp)
41e8(5): jmp 0xfffff41b(%rip)
41ed(3): nop (%rax)
41f0(2): test %ebx,%ebx
41f2(6): jnz 0x3fb(%rip)
41f8(3): test %r13,%r13
41fb(6): jz 0x22b(%rip)
4201(4): mov $0x22,(%r14)
4205(5): mov $0x1,0xe(%rsp)
420a(3): xor %r12d,%r12d
420d(5): mov $0x0,0x7c(%rsp)
4212(9): mov $0x0,0x50(%rsp)
421b(7): lea 0x5181(%rip),%rax
4222(5): mov $0x0,0xf(%rsp)
4227(5): mov $0x1,0xd(%rsp)
422c(9): mov $0x1,0x18(%rsp)
4235(6): mov $0x1,%r15d
423b(5): mov %rax,0x48(%rsp)
4240(5): jmp 0xfffff3c3(%rip)
4245(7): lea 0x5157(%rip),%rax
424c(5): mov $0x1,0xe(%rsp)
4251(5): mov $0x0,0x7c(%rsp)
4256(3): xor %r12d,%r12d
4259(9): mov $0x0,0x50(%rsp)
4262(5): mov $0x1,0xf(%rsp)
4267(5): mov $0x1,0xd(%rsp)
426c(9): mov $0x1,0x18(%rsp)
4275(3): xor %r15d,%r15d
4278(5): mov %rax,0x48(%rsp)
427d(8): mov $0x5,0x8(%rsp)
4285(5): jmp 0xfffff37e(%rip)
428a(5): mov $0x1,0xe(%rsp)
428f(5): mov $0x0,0x7c(%rsp)
4294(3): xor %r12d,%r12d
4297(9): mov $0x0,0x50(%rsp)
42a0(5): mov $0x0,0xf(%rsp)
42a5(3): xor %r15d,%r15d
42a8(5): mov $0x1,0xd(%rsp)
42ad(9): mov $0x0,0x18(%rsp)
42b6(9): mov $0x0,0x48(%rsp)
42bf(5): jmp 0xfffff344(%rip)
42c4(5): cmp $0xa,0x8(%rsp)
42c9(2): jz 0x58(%rip)
42cb(7): lea 0x50d5(%rip),%rsi
42d2(2): xor %edi,%edi
42d4(5): mov $0x5,%edx
42d9(5): call 0xffffd107(%rip)
42de(3): mov %rax,%rcx
42e1(5): mov %rax,0x68(%rsp)
42e6(7): lea 0x50ba(%rip),%rax
42ed(3): cmp %rax,%rcx
42f0(6): jz 0x39e(%rip)
42f6(7): lea 0x50a8(%rip),%rsi
42fd(2): xor %edi,%edi
42ff(5): mov $0x5,%edx
4304(5): call 0xffffd0dc(%rip)
4309(3): mov %rax,%rcx
430c(5): mov %rax,0x60(%rsp)
4311(7): lea 0x508d(%rip),%rax
4318(3): cmp %rax,%rcx
431b(6): jz 0x389(%rip)
4321(3): xor %r15d,%r15d
4324(2): test %ebx,%ebx
4326(6): jz 0x1c7(%rip)
432c(2): test %ebx,%ebx
432e(5): mov 0x60(%rsp),%rbx
4333(5): setnz 0xf(%rsp)
4338(3): xor %r12d,%r12d
433b(3): mov %rbx,%rdi
433e(5): call 0xffffd0c2(%rip)
4343(5): mov %rbx,0x48(%rsp)
4348(5): mov %rax,0x18(%rsp)
434d(5): mov $0x1,0xe(%rsp)
4352(5): mov $0x0,0x7c(%rsp)
4357(9): mov $0x0,0x50(%rsp)
4360(5): mov $0x1,0xd(%rsp)
4365(5): jmp 0xfffff29e(%rip)
436a(5): mov $0x1,0xe(%rsp)
436f(5): mov $0x0,0x7c(%rsp)
4374(3): xor %r12d,%r12d
4377(9): mov $0x0,0x50(%rsp)
4380(5): mov $0x0,0xf(%rsp)
4385(3): xor %r15d,%r15d
4388(5): mov $0x0,0xd(%rsp)
438d(9): mov $0x0,0x18(%rsp)
4396(9): mov $0x0,0x48(%rsp)
439f(5): jmp 0xfffff264(%rip)
43a4(5): mov $0x1,0xe(%rsp)
43a9(5): mov $0x0,0x7c(%rsp)
43ae(3): xor %r12d,%r12d
43b1(9): mov $0x0,0x50(%rsp)
43ba(5): mov $0x1,0xf(%rsp)
43bf(5): mov $0x1,0xd(%rsp)
43c4(5): jmp 0xfffff21f(%rip)
43c9(3): cmp %r15,%r13
43cc(2): jbe 0x7(%rip)
43ce(5): mov $0x30,0x0(%r14,%r15,1)
43d3(4): lea 0x2(%rcx),%rax
43d7(3): cmp %rax,%r13
43da(2): jbe 0x8(%rip)
43dc(6): mov $0x30,0x2(%r14,%rcx,1)
43e2(3): mov %r12d,%eax
43e5(4): lea 0x3(%rcx),%r15
43e9(3): xor %r12d,%r12d
43ec(5): mov $0x30,%ebx
43f1(5): jmp 0xfffff367(%rip)
43f6(a): nop 0x0(%rax,%rax,1)
4400(5): movzx 0xf(%rsp),%ebx
4405(3): mov %r11,%rbp
4408(4): mov %bl,0xd(%rsp)
440c(5): jmp 0xfffffcad(%rip)
4411(5): movzx 0xd(%rsp),%edx
4416(3): xor %r12d,%r12d
4419(5): jmp 0xfffffb07(%rip)
441e(3): xor %r10d,%r10d
4421(5): jmp 0xfffffbbc(%rip)
4426(9): mov $0x0,0x50(%rsp)
442f(5): mov $0x1,0xe(%rsp)
4434(3): xor %r12d,%r12d
4437(5): mov $0x0,0x7c(%rsp)
443c(5): jmp 0xfffffddf(%rip)
4441(5): mov 0x30(%rsp),%r11
4446(3): mov %r14,%rsi
4449(3): mov %r13,%rcx
444c(3): mov %rbx,%rax
444f(3): mov %rbx,%rdi
4452(6): movzx 0x7d(%rsp),%r8d
4458(5): movzx 0x7e(%rsp),%ebx
445d(8): mov 0x88(%rsp),%r9
4465(3): cmp %r11,%rsi
4468(6): movzx 0x7f(%rsp),%r10d
446e(8): mov 0x80(%rsp),%r15
4476(5): mov 0x40(%rsp),%r14
447b(5): mov 0x70(%rsp),%r13
4480(2): jnb 0x28(%rip)
4482(3): cmp $0x0,(%rcx)
4485(2): jnz 0x12(%rip)
4487(2): jmp 0x21(%rip)
4489(7): nop 0x0(%rax)
4490(5): cmp $0x0,0x0(%r9,%rax,1)
4495(2): jz 0x10(%rip)
4497(4): add $0x1,%rax
449b(5): lea 0x0(%rbp,%rax,1),%rdx
44a0(3): cmp %rdx,%r11
44a3(2): jnbe 0xffffffed(%rip)
44a5(3): mov %rax,%rdi
44a8(5): movzx 0xd(%rsp),%edx
44ad(3): xor %r12d,%r12d
44b0(5): jmp 0xfffffa66(%rip)
44b5(3): mov %rbx,%rdi
44b8(6): movzx 0x7d(%rsp),%r8d
44be(5): movzx 0x7e(%rsp),%ebx
44c3(6): movzx 0x7f(%rsp),%r10d
44c9(8): mov 0x80(%rsp),%r15
44d1(3): xor %r12d,%r12d
44d4(5): mov 0x40(%rsp),%r14
44d9(5): mov 0x70(%rsp),%r13
44de(5): mov 0x30(%rsp),%r11
44e3(5): movzx 0xd(%rsp),%edx
44e8(5): jmp 0xfffffa2e(%rip)
44ed(5): mov 0x68(%rsp),%rdx
44f2(3): movzx (%rdx),%eax
44f5(2): test %al,%al
44f7(6): jz 0xfffffe35(%rip)
44fd(3): nop (%rax)
4500(3): cmp %r15,%r13
4503(2): jbe 0x6(%rip)
4505(4): mov %al,0x0(%r14,%r15,1)
4509(4): add $0x1,%r15
450d(5): movzx 0x0(%rdx,%r15,1),%eax
4512(2): test %al,%al
4514(2): jnz 0xffffffec(%rip)
4516(5): jmp 0xfffffe16(%rip)
451b(2): mov %edx,%eax
451d(5): jmp 0xfffff55a(%rip)
4522(4): movzx 0x0(%rax,%rcx,1),%ebx
4526(3): cmp $0x3e,%bl
4529(6): jnbe 0xfffff877(%rip)
452f(a): mov $0x8070630310989004800,%rax
4539(4): bt %rbx,%rax
453d(6): jnb 0xfffff863(%rip)
4543(5): cmp $0x0,0xf(%rsp)
4548(6): jnz 0x1ea(%rip)
454e(3): cmp %r15,%r13
4551(2): jbe 0x7(%rip)
4553(5): mov $0x3f,0x0(%r14,%r15,1)
4558(4): lea 0x1(%r15),%rax
455c(3): cmp %rax,%r13
455f(2): jbe 0x8(%rip)
4561(6): mov $0x22,0x1(%r14,%r15,1)
4567(4): lea 0x2(%r15),%rax
456b(3): cmp %rax,%r13
456e(2): jbe 0x8(%rip)
4570(6): mov $0x22,0x2(%r14,%r15,1)
4576(4): lea 0x3(%r15),%rax
457a(3): cmp %rax,%r13
457d(2): jbe 0x8(%rip)
457f(6): mov $0x3f,0x3(%r14,%r15,1)
4585(4): add $0x4,%r15
4589(2): xor %edx,%edx
458b(3): xor %r12d,%r12d
458e(2): xor %eax,%eax
4590(3): mov %rcx,%rbp
4593(5): jmp 0xfffff1c5(%rip)
4598(2): test %ebx,%ebx
459a(6): jz 0x18e(%rip)
45a0(7): lea 0x4dfe(%rip),%rax
45a7(5): mov $0x1,0xe(%rsp)
45ac(5): mov $0x0,0x7c(%rsp)
45b1(3): xor %r12d,%r12d
45b4(9): mov $0x0,0x50(%rsp)
45bd(5): mov $0x1,0xf(%rsp)
45c2(5): mov $0x0,0xd(%rsp)
45c7(9): mov $0x1,0x18(%rsp)
45d0(3): xor %r15d,%r15d
45d3(5): mov %rax,0x48(%rsp)
45d8(5): jmp 0xfffff02b(%rip)
45dd(3): nop (%rax)
45e0(3): mov %r11,%rbp
45e3(5): movzx 0xf(%rsp),%eax
45e8(5): jmp 0xfffffad1(%rip)
45ed(7): lea 0x4daf(%rip),%rax
45f4(5): mov $0x1,0xe(%rsp)
45f9(5): mov $0x0,0x7c(%rsp)
45fe(3): xor %r12d,%r12d
4601(9): mov $0x0,0x50(%rsp)
460a(5): mov $0x1,0xf(%rsp)
460f(5): mov $0x1,0xd(%rsp)
4614(9): mov $0x1,0x18(%rsp)
461d(3): xor %r15d,%r15d
4620(5): mov %rax,0x48(%rsp)
4625(5): jmp 0xffffefde(%rip)
462a(2): mov %edx,%eax
462c(5): mov 0x48(%rsp),%rbx
4631(3): test %rbx,%rbx
4634(2): jz 0x2e(%rip)
4636(2): test %al,%al
4638(2): jz 0x2a(%rip)
463a(3): movzx (%rbx),%ecx
463d(3): mov %rbx,%rax
4640(2): test %cl,%cl
4642(2): jz 0x20(%rip)
4644(3): mov %r15,%rdx
4647(3): sub %r15,%rax
464a(3): cmp %rdx,%r13
464d(2): jbe 0x6(%rip)
464f(4): mov %cl,0x0(%r14,%rdx,1)
4653(4): add $0x1,%rdx
4657(4): movzx 0x0(%rax,%rdx,1),%ecx
465b(2): test %cl,%cl
465d(2): jnz 0xffffffed(%rip)
465f(3): mov %rdx,%r15
4662(3): cmp %r15,%r13
4665(6): jbe 0xfffffaa4(%rip)
466b(5): mov $0x0,0x0(%r14,%r15,1)
4670(5): jmp 0xfffffa99(%rip)
4675(5): cmp $0x2,0x8(%rsp)
467a(5): movzx 0xf(%rsp),%ebx
467f(3): mov %r11,%rbp
4682(3): setz %al
4685(4): mov %bl,0xd(%rsp)
4689(5): jmp 0xfffffa30(%rip)
468e(4): mov 0x8(%rsp),%esi
4692(3): mov %rcx,%rdi
4695(5): call 0xffffedab(%rip)
469a(5): mov %rax,0x68(%rsp)
469f(5): jmp 0xfffffc57(%rip)
46a4(4): mov 0x8(%rsp),%esi
46a8(3): mov %rcx,%rdi
46ab(5): call 0xffffed95(%rip)
46b0(5): mov %rax,0x60(%rsp)
46b5(5): jmp 0xfffffc6c(%rip)
46ba(5): movzx 0xf(%rsp),%ebx
46bf(3): mov %r11,%rbp
46c2(2): mov %edx,%eax
46c4(4): mov %bl,0xd(%rsp)
46c8(5): jmp 0xfffff9f1(%rip)
46cd(4): sub $0x8,%rsp
46d1(6): mov $0x5,%r8d
46d7(3): mov %r11,%rcx
46da(4): push 0x68(%rsp)
46de(4): push 0x78(%rsp)
46e2(3): mov %r14,%rdi
46e5(4): push 0x38(%rsp)
46e9(8): mov 0x98(%rsp),%r9d
46f1(5): mov 0x30(%rsp),%rdx
46f6(5): mov 0x70(%rsp),%rsi
46fb(5): call 0xffffee35(%rip)
4700(4): add $0x20,%rsp
4704(3): mov %rax,%r15
4707(5): jmp 0xfffffa02(%rip)
470c(5): movzx 0x7c(%rsp),%eax
4711(5): jmp 0xffffff1b(%rip)
4716(8): mov $0x2,0x8(%rsp)
471e(5): jmp 0xfffff99b(%rip)
4723(5): call 0xffffccfd(%rip)
4728(5): mov $0x0,0xd(%rsp)
472d(5): jmp 0xfffffa74(%rip)
4732(3): mov %r11,%rbp
4735(5): jmp 0xfffff99b(%rip)
473a(5): mov $0x1,0xe(%rsp)
473f(2): xor %eax,%eax
4741(3): xor %r12d,%r12d
4744(9): mov $0x0,0x50(%rsp)
474d(5): jmp 0xfffff5a7(%rip)
4752(3): mov %r13,%rdx
4755(5): mov 0x50(%rsp),%r13
475a(5): jmp 0xfffff5f8(%rip)
475f(5): call 0xffffcbe1(%rip)

"quotearg_n_options" :
4770(2): push %r15
4772(2): push %r14
4774(3): movsxd %edi,%r15
4777(2): push %r13
4779(2): push %r12
477b(3): mov %rdx,%r14
477e(1): push %rbp
477f(1): push %rbx
4780(3): mov %rcx,%rbp
4783(4): sub $0x28,%rsp
4787(5): mov %rsi,0x8(%rsp)
478c(5): call 0xffffcbc4(%rip)
4791(3): mov %rax,%r13
4794(2): mov (%rax),%eax
4796(3): test %r15d,%r15d
4799(7): mov 0x2078c0(%rip),%rbx
47a0(4): mov %eax,0x18(%rsp)
47a4(6): js 0x16d(%rip)
47aa(7): cmp %r15d,0x2078a7(%rip)
47b1(2): jnle 0x64(%rip)
47b3(7): cmp $0x7fffffff,%r15d
47ba(6): jz 0x15c(%rip)
47c0(4): lea 0x1(%r15),%r12d
47c4(7): lea 0x2078a5(%rip),%rax
47cb(3): movsxd %r12d,%rsi
47ce(4): shl/sal $0x4,%rsi
47d2(3): cmp %rax,%rbx
47d5(6): jz 0x11b(%rip)
47db(3): mov %rbx,%rdi
47de(5): call 0x12f2(%rip)
47e3(3): mov %rax,%rbx
47e6(7): mov %rax,0x207873(%rip)
47ed(7): movsxd 0x207864(%rip),%rdi
47f4(3): mov %r12d,%edx
47f7(2): xor %esi,%esi
47f9(2): sub %edi,%edx
47fb(4): shl/sal $0x4,%rdi
47ff(3): movsxd %edx,%rdx
4802(3): add %rbx,%rdi
4805(4): shl/sal $0x4,%rdx
4809(5): call 0xffffcc57(%rip)
480e(7): mov %r12d,0x207843(%rip)
4815(3): mov 0x4(%rbp),%eax
4818(4): shl/sal $0x4,%r15
481c(4): sub $0x8,%rsp
4820(3): add %r15,%rbx
4823(4): lea 0x8(%rbp),%r15
4827(4): mov 0x0(%rbp),%r8d
482b(3): mov (%rbx),%r11
482e(4): mov 0x8(%rbx),%r12
4832(3): mov %r14,%rcx
4835(3): or $0x1,%eax
4838(4): mov %eax,0x24(%rsp)
483c(3): push 0x30(%rbp)
483f(3): mov %eax,%r9d
4842(3): push 0x28(%rbp)
4845(2): push %r15
4847(3): mov %r11,%rsi
484a(5): mov 0x28(%rsp),%rdx
484f(3): mov %r12,%rdi
4852(5): mov %r11,0x30(%rsp)
4857(5): call 0xffffecd9(%rip)
485c(4): add $0x20,%rsp
4860(5): mov 0x10(%rsp),%r11
4865(3): cmp %rax,%r11
4868(2): jnbe 0x69(%rip)
486a(4): lea 0x1(%rax),%rsi
486e(7): lea 0x20786b(%rip),%rax
4875(3): cmp %rax,%r12
4878(3): mov %rsi,(%rbx)
487b(2): jz 0x14(%rip)
487d(3): mov %r12,%rdi
4880(5): mov %rsi,0x10(%rsp)
4885(5): call 0xffffcaab(%rip)
488a(5): mov 0x10(%rsp),%rsi
488f(3): mov %rsi,%rdi
4892(5): mov %rsi,0x10(%rsp)
4897(5): call 0x11d9(%rip)
489c(4): sub $0x8,%rsp
48a0(4): mov %rax,0x8(%rbx)
48a4(4): mov 0x0(%rbp),%r8d
48a8(3): push 0x30(%rbp)
48ab(3): push 0x28(%rbp)
48ae(3): mov %r14,%rcx
48b1(2): push %r15
48b3(5): mov 0x3c(%rsp),%r9d
48b8(3): mov %rax,%rdi
48bb(5): mov 0x28(%rsp),%rdx
48c0(5): mov 0x30(%rsp),%rsi
48c5(3): mov %rax,%r12
48c8(5): call 0xffffec68(%rip)
48cd(4): add $0x20,%rsp
48d1(4): mov 0x18(%rsp),%eax
48d5(4): mov %eax,0x0(%r13)
48d9(4): add $0x28,%rsp
48dd(3): mov %r12,%rax
48e0(1): pop %rbx
48e1(1): pop %rbp
48e2(2): pop %r12
48e4(2): pop %r13
48e6(2): pop %r14
48e8(2): pop %r15
48ea(1): ret near (%rsp)
48eb(5): nop 0x0(%rax,%rax,1)
48f0(2): xor %edi,%edi
48f2(5): call 0x11de(%rip)
48f7(8): movdqa 0x207771(%rip),%xmm0
48ff(3): mov %rax,%rbx
4902(7): mov %rax,0x207757(%rip)
4909(3): movups %xmm0,(%rax)
490c(5): jmp 0xfffffee1(%rip)
4911(5): call 0xffffca2f(%rip)
4916(5): call 0x13aa(%rip)

"clone_quoting_options" :
4920(2): push %r12
4922(1): push %rbp
4923(1): push %rbx
4924(3): mov %rdi,%rbx
4927(5): call 0xffffca29(%rip)
492c(3): mov (%rax),%r12d
492f(3): mov %rax,%rbp
4932(7): lea 0x2078a7(%rip),%rax
4939(3): test %rbx,%rbx
493c(5): mov $0x38,%esi
4941(4): cmove %rax,%rbx
4945(3): mov %rbx,%rdi
4948(5): call 0x1328(%rip)
494d(4): mov %r12d,0x0(%rbp)
4951(1): pop %rbx
4952(1): pop %rbp
4953(2): pop %r12
4955(1): ret near (%rsp)

"get_quoting_style" :
4960(7): lea 0x207879(%rip),%rax
4967(3): test %rdi,%rdi
496a(4): cmove %rax,%rdi
496e(2): mov (%rdi),%eax
4970(1): ret near (%rsp)

"set_quoting_style" :
4980(7): lea 0x207859(%rip),%rax
4987(3): test %rdi,%rdi
498a(4): cmove %rax,%rdi
498e(2): mov %esi,(%rdi)
4990(1): ret near (%rsp)

"set_char_quoting" :
49a0(7): lea 0x207839(%rip),%rax
49a7(3): test %rdi,%rdi
49aa(2): mov %esi,%ecx
49ac(4): cmove %rax,%rdi
49b0(2): mov %esi,%eax
49b2(3): and $0x1f,%ecx
49b5(3): shr $0x5,%al
49b8(3): movzx %al,%eax
49bb(5): lea 0x8(%rdi,%rax,4),%rdi
49c0(2): mov (%rdi),%esi
49c2(2): mov %esi,%eax
49c4(2): shr %cl,%eax
49c6(2): xor %eax,%edx
49c8(3): and $0x1,%eax
49cb(3): and $0x1,%edx
49ce(2): shl/sal %cl,%edx
49d0(2): xor %esi,%edx
49d2(2): mov %edx,(%rdi)
49d4(1): ret near (%rsp)

"set_quoting_flags" :
49e0(7): lea 0x2077f9(%rip),%rax
49e7(3): test %rdi,%rdi
49ea(4): cmove %rax,%rdi
49ee(3): mov 0x4(%rdi),%eax
49f1(3): mov %esi,0x4(%rdi)
49f4(1): ret near (%rsp)

"set_custom_quoting" :
4a00(7): lea 0x2077d9(%rip),%rax
4a07(3): test %rdi,%rdi
4a0a(4): cmove %rax,%rdi
4a0e(3): test %rsi,%rsi
4a11(6): mov $0xa,(%rdi)
4a17(2): jz 0x10(%rip)
4a19(3): test %rdx,%rdx
4a1c(2): jz 0xb(%rip)
4a1e(4): mov %rsi,0x28(%rdi)
4a22(4): mov %rdx,0x30(%rdi)
4a26(1): ret near (%rsp)
4a27(4): sub $0x8,%rsp
4a2b(5): call 0xffffc915(%rip)

"quotearg_buffer" :
4a30(2): push %r15
4a32(2): push %r14
4a34(7): lea 0x2077a5(%rip),%rax
4a3b(2): push %r13
4a3d(2): push %r12
4a3f(3): mov %rdi,%r13
4a42(1): push %rbp
4a43(1): push %rbx
4a44(3): mov %r8,%rbx
4a47(3): mov %rsi,%r14
4a4a(3): mov %rdx,%r15
4a4d(4): sub $0x18,%rsp
4a51(3): test %r8,%r8
4a54(4): cmove %rax,%rbx
4a58(5): mov %rcx,0x8(%rsp)
4a5d(5): call 0xffffc8f3(%rip)
4a62(3): mov (%rax),%r12d
4a65(3): mov %rax,%rbp
4a68(4): lea 0x8(%rbx),%rax
4a6c(4): sub $0x8,%rsp
4a70(4): mov 0x4(%rbx),%r9d
4a74(3): push 0x30(%rbx)
4a77(3): mov (%rbx),%r8d
4a7a(3): push 0x28(%rbx)
4a7d(3): mov %r15,%rdx
4a80(1): push %rax
4a81(5): mov 0x28(%rsp),%rcx
4a86(3): mov %r14,%rsi
4a89(3): mov %r13,%rdi
4a8c(5): call 0xffffeaa4(%rip)
4a91(4): mov %r12d,0x0(%rbp)
4a95(4): add $0x38,%rsp
4a99(1): pop %rbx
4a9a(1): pop %rbp
4a9b(2): pop %r12
4a9d(2): pop %r13
4a9f(2): pop %r14
4aa1(2): pop %r15
4aa3(1): ret near (%rsp)

"quotearg_alloc_mem" :
4ab0(2): push %r15
4ab2(2): push %r14
4ab4(7): lea 0x207725(%rip),%rax
4abb(2): push %r13
4abd(2): push %r12
4abf(3): mov %rdx,%r12
4ac2(1): push %rbp
4ac3(1): push %rbx
4ac4(3): mov %rcx,%rbx
4ac7(3): mov %rdi,%r14
4aca(3): mov %rsi,%r15
4acd(4): sub $0x38,%rsp
4ad1(3): test %rcx,%rcx
4ad4(4): cmove %rax,%rbx
4ad8(2): xor %ebp,%ebp
4ada(5): call 0xffffc876(%rip)
4adf(3): test %r12,%r12
4ae2(3): mov %rax,%r13
4ae5(2): mov (%rax),%eax
4ae7(4): setz %bpl
4aeb(3): or 0x4(%rbx),%ebp
4aee(4): lea 0x8(%rbx),%r10
4af2(4): sub $0x8,%rsp
4af6(3): mov (%rbx),%r8d
4af9(3): mov %r15,%rcx
4afc(4): mov %eax,0x14(%rsp)
4b00(3): push 0x30(%rbx)
4b03(3): mov %r14,%rdx
4b06(3): push 0x28(%rbx)
4b09(2): push %r10
4b0b(2): xor %esi,%esi
4b0d(3): mov %ebp,%r9d
4b10(2): xor %edi,%edi
4b12(5): mov %r10,0x40(%rsp)
4b17(5): call 0xffffea19(%rip)
4b1c(4): lea 0x1(%rax),%rsi
4b20(5): mov %rax,0x48(%rsp)
4b25(4): add $0x20,%rsp
4b29(3): mov %rsi,%rdi
4b2c(5): mov %rsi,0x18(%rsp)
4b31(5): call 0xf3f(%rip)
4b36(5): mov %rax,0x10(%rsp)
4b3b(4): sub $0x8,%rsp
4b3f(3): push 0x30(%rbx)
4b42(3): push 0x28(%rbx)
4b45(5): mov 0x38(%rsp),%r10
4b4a(3): mov %ebp,%r9d
4b4d(3): mov (%rbx),%r8d
4b50(3): mov %r15,%rcx
4b53(3): mov %r14,%rdx
4b56(3): mov %rax,%rdi
4b59(2): push %r10
4b5b(5): mov 0x38(%rsp),%rsi
4b60(5): call 0xffffe9d0(%rip)
4b65(4): mov 0x2c(%rsp),%eax
4b69(4): add $0x20,%rsp
4b6d(3): test %r12,%r12
4b70(4): mov %eax,0x0(%r13)
4b74(2): jz 0xb(%rip)
4b76(5): mov 0x28(%rsp),%r11
4b7b(4): mov %r11,(%r12)
4b7f(5): mov 0x10(%rsp),%rax
4b84(4): add $0x38,%rsp
4b88(1): pop %rbx
4b89(1): pop %rbp
4b8a(2): pop %r12
4b8c(2): pop %r13
4b8e(2): pop %r14
4b90(2): pop %r15
4b92(1): ret near (%rsp)

"quotearg_alloc" :
4ba0(3): mov %rdx,%rcx
4ba3(2): xor %edx,%edx
4ba5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4bb0(6): mov 0x2074a2(%rip),%eax
4bb6(2): push %r12
4bb8(7): mov 0x2074a1(%rip),%r12
4bbf(1): push %rbp
4bc0(1): push %rbx
4bc1(3): cmp $0x1,%eax
4bc4(2): jle 0x2d(%rip)
4bc6(3): sub $0x2,%eax
4bc9(5): lea 0x18(%r12),%rbx
4bce(4): shl/sal $0x4,%rax
4bd2(5): lea 0x28(%r12,%rax,1),%rbp
4bd7(9): nop 0x0(%rax,%rax,1)
4be0(3): mov (%rbx),%rdi
4be3(4): add $0x10,%rbx
4be7(5): call 0xffffc749(%rip)
4bec(3): cmp %rbp,%rbx
4bef(2): jnz 0xfffffff1(%rip)
4bf1(5): mov 0x8(%r12),%rdi
4bf6(7): lea 0x2074e3(%rip),%rbx
4bfd(3): cmp %rbx,%rdi
4c00(2): jz 0x19(%rip)
4c02(5): call 0xffffc72e(%rip)
4c07(b): mov $0x100,0x20745e(%rip)
4c12(7): mov %rbx,0x20745f(%rip)
4c19(7): lea 0x207450(%rip),%rbx
4c20(3): cmp %rbx,%r12
4c23(2): jz 0x11(%rip)
4c25(3): mov %r12,%rdi
4c28(5): call 0xffffc708(%rip)
4c2d(7): mov %rbx,0x20742c(%rip)
4c34(1): pop %rbx
4c35(a): mov $0x1,0x207419(%rip)
4c3f(1): pop %rbp
4c40(2): pop %r12
4c42(1): ret near (%rsp)

"quotearg_n" :
4c50(7): lea 0x207589(%rip),%rcx
4c57(7): mov $0xffffffff,%rdx
4c5e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4c70(7): lea 0x207569(%rip),%rcx
4c77(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4c80(7): lea 0x207559(%rip),%rcx
4c87(3): mov %rdi,%rsi
4c8a(7): mov $0xffffffff,%rdx
4c91(2): xor %edi,%edi
4c93(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4ca0(7): lea 0x207539(%rip),%rcx
4ca7(3): mov %rsi,%rdx
4caa(3): mov %rdi,%rsi
4cad(2): xor %edi,%edi
4caf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4cc0(4): sub $0x48,%rsp
4cc4(3): mov %rdx,%rax
4cc7(9): mov $0x28,%rdx
4cd0(5): mov %rdx,0x38(%rsp)
4cd5(2): xor %edx,%edx
4cd7(3): cmp $0xa,%esi
4cda(2): jz 0x6a(%rip)
4cdc(3): mov %esi,(%rsp)
4cdf(3): mov %rsp,%rcx
4ce2(7): mov $0xffffffff,%rdx
4ce9(3): mov %rax,%rsi
4cec(9): mov $0x0,0x4(%rsp)
4cf5(9): mov $0x0,0xc(%rsp)
4cfe(9): mov $0x0,0x14(%rsp)
4d07(9): mov $0x0,0x1c(%rsp)
4d10(9): mov $0x0,0x24(%rsp)
4d19(9): mov $0x0,0x2c(%rsp)
4d22(8): mov $0x0,0x34(%rsp)
4d2a(5): call 0xfffffa46(%rip)
4d2f(5): mov 0x38(%rsp),%rcx
4d34(9): xor $0x28,%rcx
4d3d(2): jnz 0xc(%rip)
4d3f(4): add $0x48,%rsp
4d43(1): ret near (%rsp)
4d44(5): call 0xffffc5fc(%rip)
4d49(5): call 0xffffc6d7(%rip)

"quotearg_n_style_mem" :
4d50(4): sub $0x48,%rsp
4d54(3): mov %rdx,%rax
4d57(3): mov %rcx,%rdx
4d5a(9): mov $0x28,%rcx
4d63(5): mov %rcx,0x38(%rsp)
4d68(2): xor %ecx,%ecx
4d6a(3): cmp $0xa,%esi
4d6d(2): jz 0x63(%rip)
4d6f(3): mov %esi,(%rsp)
4d72(3): mov %rsp,%rcx
4d75(3): mov %rax,%rsi
4d78(9): mov $0x0,0x4(%rsp)
4d81(9): mov $0x0,0xc(%rsp)
4d8a(9): mov $0x0,0x14(%rsp)
4d93(9): mov $0x0,0x1c(%rsp)
4d9c(9): mov $0x0,0x24(%rsp)
4da5(9): mov $0x0,0x2c(%rsp)
4dae(8): mov $0x0,0x34(%rsp)
4db6(5): call 0xfffff9ba(%rip)
4dbb(5): mov 0x38(%rsp),%rdx
4dc0(9): xor $0x28,%rdx
4dc9(2): jnz 0xc(%rip)
4dcb(4): add $0x48,%rsp
4dcf(1): ret near (%rsp)
4dd0(5): call 0xffffc570(%rip)
4dd5(5): call 0xffffc64b(%rip)

"quotearg_style" :
4de0(3): mov %rsi,%rdx
4de3(2): mov %edi,%esi
4de5(2): xor %edi,%edi
4de7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4df0(3): mov %rdx,%rcx
4df3(3): mov %rsi,%rdx
4df6(2): mov %edi,%esi
4df8(2): xor %edi,%edi
4dfa(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4e00(4): sub $0x48,%rsp
4e04(2): mov %edx,%ecx
4e06(9): mov $0x28,%rax
4e0f(5): mov %rax,0x38(%rsp)
4e14(2): xor %eax,%eax
4e16(7): mov 0x2073f3(%rip),%rax
4e1d(3): mov %rsp,%r8
4e20(3): and $0x1f,%ecx
4e23(8): movdqa 0x2073b5(%rip),%xmm0
4e2b(5): mov %rax,0x30(%rsp)
4e30(2): mov %edx,%eax
4e32(4): movaps %xmm0,(%rsp)
4e36(3): shr $0x5,%al
4e39(3): movzx %al,%eax
4e3c(5): lea 0x8(%r8,%rax,4),%r9
4e41(8): movdqa 0x2073a7(%rip),%xmm0
4e49(5): movaps %xmm0,0x10(%rsp)
4e4e(8): movdqa 0x2073aa(%rip),%xmm0
4e56(5): movaps %xmm0,0x20(%rsp)
4e5b(3): mov (%r9),%edx
4e5e(2): mov %edx,%eax
4e60(2): shr %cl,%eax
4e62(2): not %eax
4e64(3): and $0x1,%eax
4e67(2): shl/sal %cl,%eax
4e69(3): mov %r8,%rcx
4e6c(2): xor %edx,%eax
4e6e(3): mov %rsi,%rdx
4e71(3): mov %rdi,%rsi
4e74(3): mov %eax,(%r9)
4e77(2): xor %edi,%edi
4e79(5): call 0xfffff8f7(%rip)
4e7e(5): mov 0x38(%rsp),%rsi
4e83(9): xor $0x28,%rsi
4e8c(2): jnz 0x7(%rip)
4e8e(4): add $0x48,%rsp
4e92(1): ret near (%rsp)
4e93(5): call 0xffffc58d(%rip)

"quotearg_char" :
4ea0(4): movsx %sil,%edx
4ea4(7): mov $0xffffffff,%rsi
4eab(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4eb0(5): mov $0x3a,%edx
4eb5(7): mov $0xffffffff,%rsi
4ebc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4ed0(5): mov $0x3a,%edx
4ed5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4ee0(4): sub $0x48,%rsp
4ee4(3): mov %rdx,%rax
4ee7(9): mov $0x28,%rdx
4ef0(5): mov %rdx,0x38(%rsp)
4ef5(2): xor %edx,%edx
4ef7(3): cmp $0xa,%esi
4efa(2): jz 0x6a(%rip)
4efc(3): mov %esi,(%rsp)
4eff(3): mov %rsp,%rcx
4f02(7): mov $0xffffffff,%rdx
4f09(3): mov %rax,%rsi
4f0c(9): mov $0x0,0x4(%rsp)
4f15(9): mov $0x4000000,0xc(%rsp)
4f1e(9): mov $0x0,0x14(%rsp)
4f27(9): mov $0x0,0x1c(%rsp)
4f30(9): mov $0x0,0x24(%rsp)
4f39(9): mov $0x0,0x2c(%rsp)
4f42(8): mov $0x0,0x34(%rsp)
4f4a(5): call 0xfffff826(%rip)
4f4f(5): mov 0x38(%rsp),%rcx
4f54(9): xor $0x28,%rcx
4f5d(2): jnz 0xc(%rip)
4f5f(4): add $0x48,%rsp
4f63(1): ret near (%rsp)
4f64(5): call 0xffffc3dc(%rip)
4f69(5): call 0xffffc4b7(%rip)

"quotearg_n_custom_mem" :
4f70(4): sub $0x48,%rsp
4f74(3): mov %rcx,%r9
4f77(7): mov 0x207292(%rip),%rcx
4f7e(8): movdqa 0x20725a(%rip),%xmm0
4f86(9): mov $0x28,%rax
4f8f(5): mov %rax,0x38(%rsp)
4f94(2): xor %eax,%eax
4f96(4): movaps %xmm0,(%rsp)
4f9a(3): test %rsi,%rsi
4f9d(5): mov %rcx,0x30(%rsp)
4fa2(7): mov $0xa,(%rsp)
4fa9(8): movdqa 0x20723f(%rip),%xmm0
4fb1(5): movaps %xmm0,0x10(%rsp)
4fb6(8): movdqa 0x207242(%rip),%xmm0
4fbe(5): movaps %xmm0,0x20(%rsp)
4fc3(2): jz 0x34(%rip)
4fc5(3): test %rdx,%rdx
4fc8(2): jz 0x2f(%rip)
4fca(5): mov %rsi,0x28(%rsp)
4fcf(5): mov %rdx,0x30(%rsp)
4fd4(3): mov %rsp,%rcx
4fd7(3): mov %r8,%rdx
4fda(3): mov %r9,%rsi
4fdd(5): call 0xfffff793(%rip)
4fe2(5): mov 0x38(%rsp),%rdi
4fe7(9): xor $0x28,%rdi
4ff0(2): jnz 0xc(%rip)
4ff2(4): add $0x48,%rsp
4ff6(1): ret near (%rsp)
4ff7(5): call 0xffffc349(%rip)
4ffc(5): call 0xffffc424(%rip)

"quotearg_n_custom" :
5010(7): mov $0xffffffff,%r8
5017(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5020(3): mov %rdx,%rcx
5023(7): mov $0xffffffff,%r8
502a(3): mov %rsi,%rdx
502d(3): mov %rdi,%rsi
5030(2): xor %edi,%edi
5032(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5040(3): mov %rcx,%r8
5043(3): mov %rdx,%rcx
5046(3): mov %rsi,%rdx
5049(3): mov %rdi,%rsi
504c(2): xor %edi,%edi
504e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5060(7): lea 0x206fb9(%rip),%rcx
5067(5): jmp 0xfffff709(%rip)

"quote_mem" :
5070(7): lea 0x206fa9(%rip),%rcx
5077(3): mov %rsi,%rdx
507a(3): mov %rdi,%rsi
507d(2): xor %edi,%edi
507f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5090(7): lea 0x206f89(%rip),%rcx
5097(7): mov $0xffffffff,%rdx
509e(5): jmp 0xfffff6d2(%rip)

"quote" :
50b0(7): lea 0x206f69(%rip),%rcx
50b7(3): mov %rdi,%rsi
50ba(7): mov $0xffffffff,%rdx
50c1(2): xor %edi,%edi
50c3(5): jmp 0xfffff6ad(%rip)

"strintcmp" :
50d0(4): movzx (%rdi),%r8d
50d4(3): movzx (%rsi),%edx
50d7(4): cmp $0x2d,%r8b
50db(6): jz 0xa5(%rip)
50e1(3): cmp $0x2d,%dl
50e4(6): jz 0xe4(%rip)
50ea(6): nop 0x0(%rax,%rax,1)
50f0(4): cmp $0x30,%r8b
50f4(6): jz 0x194(%rip)
50fa(3): cmp $0x30,%dl
50fd(6): jz 0x17b(%rip)
5103(3): movzx %dl,%eax
5106(3): cmp %r8b,%dl
5109(3): lea 0xffffffd0(%rax),%ecx
510c(6): jnz 0x19c(%rip)
5112(3): cmp $0x9,%ecx
5115(6): jnbe 0x22b(%rip)
511b(4): add $0x1,%rdi
511f(4): add $0x1,%rsi
5123(3): movzx (%rsi),%eax
5126(4): movzx (%rdi),%r8d
512a(2): mov %eax,%edx
512c(3): lea 0xffffffd0(%rax),%ecx
512f(3): cmp %al,%r8b
5132(6): jnz 0x176(%rip)
5138(3): cmp $0x9,%ecx
513b(2): jbe 0xffffffe0(%rip)
513d(4): movzx %r8b,%edx
5141(3): xor %r9d,%r9d
5144(3): cmp $0x9,%ecx
5147(6): jnbe 0x1f9(%rip)
514d(3): nop (%rax)
5150(2): xor %ecx,%ecx
5152(6): nop 0x0(%rax,%rax,1)
5158(5): movzx 0x1(%rsi,%rcx,1),%eax
515d(4): add $0x1,%rcx
5161(3): sub $0x30,%eax
5164(3): cmp $0x9,%eax
5167(2): jbe 0xfffffff1(%rip)
5169(3): cmp %rcx,%r9
516c(6): jz 0x1d7(%rip)
5172(2): sbb %eax,%eax
5174(3): or $0x1,%eax
5177(1): ret near (%rsp)
5178(8): nop 0x0(%rax,%rax,1)
5180(4): add $0x1,%rdi
5184(3): movzx (%rdi),%ecx
5187(3): cmp $0x30,%cl
518a(2): jz 0xfffffff6(%rip)
518c(3): movzx %cl,%eax
518f(3): cmp $0x2d,%dl
5192(4): lea 0xffffffd0(%rax),%r8d
5196(2): jz 0x6a(%rip)
5198(4): cmp $0x9,%r8d
519c(6): jbe 0x1d2(%rip)
51a2(6): nop 0x0(%rax,%rax,1)
51a8(3): cmp $0x30,%dl
51ab(6): jz 0xed(%rip)
51b1(3): sub $0x30,%edx
51b4(3): xor %r9d,%r9d
51b7(3): cmp $0x9,%edx
51ba(4): setbe %r9b
51be(3): mov %r9d,%eax
51c1(2): neg %eax
51c3(1): ret near (%rsp)
51c4(4): nop 0x0(%rax)
51c8(4): add $0x1,%rsi
51cc(3): movzx (%rsi),%eax
51cf(2): cmp $0x30,%al
51d1(2): jz 0xfffffff7(%rip)
51d3(3): lea 0xffffffd0(%rax),%edx
51d6(5): mov $0x1,%eax
51db(3): cmp $0x9,%edx
51de(6): jbe 0x105(%rip)
51e4(4): cmp $0x30,%r8b
51e8(6): jz 0x100(%rip)
51ee(4): sub $0x30,%r8d
51f2(2): xor %eax,%eax
51f4(4): cmp $0x9,%r8d
51f8(3): setbe %al
51fb(1): ret near (%rsp)
51fc(4): nop 0x0(%rax)
5200(4): add $0x1,%rsi
5204(4): movzx (%rsi),%r9d
5208(4): cmp $0x30,%r9b
520c(2): jz 0xfffffff4(%rip)
520e(3): cmp %r9b,%cl
5211(6): jnz 0x143(%rip)
5217(4): cmp $0x9,%r8d
521b(3): lea 0xffffffd0(%rax),%edx
521e(2): jnbe 0x23(%rip)
5220(4): add $0x1,%rdi
5224(4): add $0x1,%rsi
5228(3): movzx (%rsi),%eax
522b(3): movzx (%rdi),%ecx
522e(3): mov %eax,%r9d
5231(3): lea 0xffffffd0(%rax),%edx
5234(2): cmp %al,%cl
5236(6): jnz 0xc2(%rip)
523c(3): cmp $0x9,%edx
523f(2): jbe 0xffffffe1(%rip)
5241(3): xor %r10d,%r10d
5244(3): cmp $0x9,%edx
5247(6): jnbe 0xf9(%rip)
524d(2): xor %edx,%edx
524f(1): nop 
5250(5): movzx 0x1(%rsi,%rdx,1),%eax
5255(4): add $0x1,%rdx
5259(3): sub $0x30,%eax
525c(3): cmp $0x9,%eax
525f(2): jbe 0xfffffff1(%rip)
5261(3): cmp %rdx,%r10
5264(6): jz 0xf9(%rip)
526a(2): sbb %eax,%eax
526c(3): and $0x2,%eax
526f(3): sub $0x1,%eax
5272(1): ret near (%rsp)
5273(5): nop 0x0(%rax,%rax,1)
5278(4): add $0x1,%rsi
527c(3): movzx (%rsi),%edx
527f(5): jmp 0xfffffe7b(%rip)
5284(4): nop 0x0(%rax)
5288(4): add $0x1,%rdi
528c(4): movzx (%rdi),%r8d
5290(5): jmp 0xfffffe60(%rip)
5295(3): nop (%rax)
5298(4): add $0x1,%rsi
529c(3): movzx (%rsi),%edx
529f(5): jmp 0xffffff09(%rip)
52a4(4): nop 0x0(%rax)
52a8(4): movzx %r8b,%eax
52ac(3): sub $0x30,%eax
52af(3): cmp $0x9,%eax
52b2(6): jnbe 0xfffffe8f(%rip)
52b8(3): xor %r9d,%r9d
52bb(5): nop 0x0(%rax,%rax,1)
52c0(6): movzx 0x1(%rdi,%r9,1),%eax
52c6(4): add $0x1,%r9
52ca(3): sub $0x30,%eax
52cd(3): cmp $0x9,%eax
52d0(2): jbe 0xfffffff0(%rip)
52d2(3): cmp $0x9,%ecx
52d5(6): jbe 0xfffffe7b(%rip)
52db(2): xor %eax,%eax
52dd(3): test %r9,%r9
52e0(3): setnz %al
52e3(2): REP ret near (%rsp)
52e5(3): nop (%rax)
52e8(4): add $0x1,%rdi
52ec(4): movzx (%rdi),%r8d
52f0(5): jmp 0xfffffef4(%rip)
52f5(3): nop (%rax)
52f8(4): movzx %cl,%r8d
52fc(4): sub $0x30,%r8d
5300(4): cmp $0x9,%r8d
5304(6): jnbe 0xffffff3d(%rip)
530a(3): xor %r10d,%r10d
530d(3): nop (%rax)
5310(6): movzx 0x1(%rdi,%r10,1),%eax
5316(4): add $0x1,%r10
531a(3): sub $0x30,%eax
531d(3): cmp $0x9,%eax
5320(2): jbe 0xfffffff0(%rip)
5322(3): cmp $0x9,%edx
5325(6): jbe 0xffffff28(%rip)
532b(2): xor %eax,%eax
532d(3): test %r10,%r10
5330(3): setnz %al
5333(2): neg %eax
5335(1): ret near (%rsp)
5336(a): nop 0x0(%rax,%rax,1)
5340(2): xor %eax,%eax
5342(1): ret near (%rsp)
5343(2): xor %eax,%eax
5345(3): test %r9,%r9
5348(2): jz 0xffffff9b(%rip)
534a(4): movzx %r8b,%r9d
534e(3): mov %r9d,%eax
5351(2): sub %edx,%eax
5353(1): ret near (%rsp)
5354(4): movzx %r9b,%eax
5358(3): lea 0xffffffd0(%rax),%edx
535b(2): jmp 0xffffffa5(%rip)
535d(2): xor %eax,%eax
535f(3): test %r10,%r10
5362(6): jz 0xffffff81(%rip)
5368(3): mov %r9d,%eax
536b(2): sub %ecx,%eax
536d(1): ret near (%rsp)
536e(5): mov $0xffffffff,%eax
5373(1): ret near (%rsp)

"verror_at_line" :
5380(2): push %r14
5382(2): push %r13
5384(3): mov %esi,%r13d
5387(2): push %r12
5389(1): push %rbp
538a(3): mov %edi,%r12d
538d(1): push %rbx
538e(3): mov %r9,%rsi
5391(3): mov %r8,%rdi
5394(3): mov %rdx,%rbp
5397(3): mov %ecx,%r14d
539a(5): call 0xab6(%rip)
539f(3): test %rax,%rax
53a2(2): jz 0x65(%rip)
53a4(3): test %rbp,%rbp
53a7(3): mov %rax,%rbx
53aa(2): jz 0x36(%rip)
53ac(7): lea 0x3f95(%rip),%r8
53b3(3): mov %r12d,%edi
53b6(3): mov %rax,%r9
53b9(3): mov %r14d,%ecx
53bc(3): mov %rbp,%rdx
53bf(3): mov %r13d,%esi
53c2(2): xor %eax,%eax
53c4(5): call 0xffffbf9c(%rip)
53c9(3): mov %rbx,%rdi
53cc(1): pop %rbx
53cd(1): pop %rbp
53ce(2): pop %r12
53d0(2): pop %r13
53d2(2): pop %r14
53d4(5): jmp 0xffffbf5c(%rip)
53d9(7): nop 0x0(%rax)
53e0(7): lea 0x3f61(%rip),%rdx
53e7(3): mov %r12d,%edi
53ea(3): mov %rax,%rcx
53ed(3): mov %r13d,%esi
53f0(2): xor %eax,%eax
53f2(5): call 0xffffc18e(%rip)
53f7(3): mov %rbx,%rdi
53fa(1): pop %rbx
53fb(1): pop %rbp
53fc(2): pop %r12
53fe(2): pop %r13
5400(2): pop %r14
5402(5): jmp 0xffffbf2e(%rip)
5407(7): lea 0x445a(%rip),%rsi
540e(5): mov $0x5,%edx
5413(2): xor %edi,%edi
5415(5): call 0xffffbfcb(%rip)
541a(3): mov %rax,%rbx
541d(5): call 0xffffbf33(%rip)
5422(2): mov (%rax),%esi
5424(3): mov %rbx,%rdx
5427(2): xor %edi,%edi
5429(2): xor %eax,%eax
542b(5): call 0xffffc155(%rip)
5430(5): call 0xffffbf10(%rip)

"verror" :
5440(3): mov %rdx,%r8
5443(3): mov %rcx,%r9
5446(2): xor %edx,%edx
5448(2): xor %ecx,%ecx
544a(5): jmp 0xffffff36(%rip)

"version_etc_arn" :
5450(2): push %r15
5452(2): push %r14
5454(2): push %r13
5456(2): push %r12
5458(3): mov %r9,%r12
545b(1): push %rbp
545c(1): push %rbx
545d(3): mov %rdi,%rbp
5460(3): mov %r8,%rbx
5463(4): sub $0x28,%rsp
5467(3): test %rsi,%rsi
546a(6): jz 0x11e(%rip)
5470(3): mov %rdx,%r8
5473(7): lea 0x440e(%rip),%rdx
547a(3): mov %rcx,%r9
547d(2): xor %eax,%eax
547f(3): mov %rsi,%rcx
5482(5): mov $0x1,%esi
5487(5): call 0xffffc159(%rip)
548c(7): lea 0x4408(%rip),%rsi
5493(2): xor %edi,%edi
5495(5): mov $0x5,%edx
549a(5): call 0xffffbf46(%rip)
549f(7): lea 0x471a(%rip),%rdx
54a6(3): mov %rax,%rcx
54a9(6): mov $0x7e3,%r8d
54af(5): mov $0x1,%esi
54b4(3): mov %rbp,%rdi
54b7(2): xor %eax,%eax
54b9(5): call 0xffffc127(%rip)
54be(7): lea 0x4463(%rip),%rsi
54c5(2): xor %edi,%edi
54c7(5): mov $0x5,%edx
54cc(5): call 0xffffbf14(%rip)
54d1(3): mov %rbp,%rsi
54d4(3): mov %rax,%rdi
54d7(5): call 0xffffbfb9(%rip)
54dc(4): cmp $0x9,%r12
54e0(6): jnbe 0x340(%rip)
54e6(7): lea 0x469b(%rip),%rdx
54ed(4): movsxd 0x0(%rdx,%r12,4),%rax
54f1(3): add %rdx,%rax
54f4(2): jmp %rax
54f6(a): nop 0x0(%rax,%rax,1)
5500(4): mov 0x38(%rbx),%r9
5504(4): mov 0x10(%rbx),%rax
5508(7): lea 0x4589(%rip),%rsi
550f(4): mov 0x8(%rbx),%r8
5513(5): mov $0x5,%edx
5518(2): xor %edi,%edi
551a(4): mov 0x30(%rbx),%r13
551e(4): mov 0x28(%rbx),%r12
5522(5): mov %r9,0x10(%rsp)
5527(4): mov 0x20(%rbx),%r15
552b(4): mov 0x18(%rbx),%r14
552f(4): mov %rax,(%rsp)
5533(5): mov %r8,0x8(%rsp)
5538(3): mov (%rbx),%rbx
553b(5): call 0xffffbea5(%rip)
5540(4): sub $0x8,%rsp
5544(5): mov 0x18(%rsp),%r9
5549(3): mov %rax,%rdx
554c(3): mov %rbx,%rcx
554f(5): mov $0x1,%esi
5554(3): mov %rbp,%rdi
5557(2): xor %eax,%eax
5559(2): push %r9
555b(2): push %r13
555d(2): push %r12
555f(2): push %r15
5561(2): push %r14
5563(5): mov 0x30(%rsp),%r9
5568(5): mov 0x38(%rsp),%r8
556d(5): call 0xffffc073(%rip)
5572(4): add $0x30,%rsp
5576(4): add $0x28,%rsp
557a(1): pop %rbx
557b(1): pop %rbp
557c(2): pop %r12
557e(2): pop %r13
5580(2): pop %r14
5582(2): pop %r15
5584(1): ret near (%rsp)
5585(3): nop (%rax)
5588(3): mov %rcx,%r8
558b(3): mov %rdx,%rcx
558e(7): lea 0x42ff(%rip),%rdx
5595(5): mov $0x1,%esi
559a(2): xor %eax,%eax
559c(5): call 0xffffc044(%rip)
55a1(5): jmp 0xfffffeeb(%rip)
55a6(a): nop 0x0(%rax,%rax,1)
55b0(4): mov 0x40(%rbx),%r10
55b4(4): mov 0x38(%rbx),%r9
55b8(7): lea 0x4509(%rip),%rsi
55bf(4): mov 0x10(%rbx),%rax
55c3(4): mov 0x8(%rbx),%r8
55c7(5): mov $0x5,%edx
55cc(4): mov 0x30(%rbx),%r13
55d0(4): mov 0x28(%rbx),%r12
55d4(4): mov 0x20(%rbx),%r15
55d8(4): mov 0x18(%rbx),%r14
55dc(3): mov (%rbx),%rbx
55df(5): mov %r10,0x18(%rsp)
55e4(5): mov %r9,0x10(%rsp)
55e9(4): mov %rax,(%rsp)
55ed(5): mov %r8,0x8(%rsp)
55f2(2): xor %edi,%edi
55f4(5): call 0xffffbdec(%rip)
55f9(5): mov 0x18(%rsp),%r10
55fe(2): push %r10
5600(5): jmp 0xffffff44(%rip)
5605(3): nop (%rax)
5608(3): mov (%rbx),%rbx
560b(7): lea 0x428d(%rip),%rsi
5612(5): mov $0x5,%edx
5617(2): xor %edi,%edi
5619(5): call 0xffffbdc7(%rip)
561e(4): add $0x28,%rsp
5622(3): mov %rbx,%rcx
5625(3): mov %rbp,%rdi
5628(1): pop %rbx
5629(1): pop %rbp
562a(2): pop %r12
562c(2): pop %r13
562e(2): pop %r14
5630(2): pop %r15
5632(3): mov %rax,%rdx
5635(5): mov $0x1,%esi
563a(2): xor %eax,%eax
563c(5): jmp 0xffffbfa4(%rip)
5641(7): nop 0x0(%rax)
5648(4): mov 0x8(%rbx),%r12
564c(7): lea 0x425c(%rip),%rsi
5653(3): mov (%rbx),%rbx
5656(5): mov $0x5,%edx
565b(2): xor %edi,%edi
565d(5): call 0xffffbd83(%rip)
5662(4): add $0x28,%rsp
5666(3): mov %r12,%r8
5669(3): mov %rbx,%rcx
566c(3): mov %rbp,%rdi
566f(3): mov %rax,%rdx
5672(5): mov $0x1,%esi
5677(1): pop %rbx
5678(1): pop %rbp
5679(2): pop %r12
567b(2): pop %r13
567d(2): pop %r14
567f(2): pop %r15
5681(2): xor %eax,%eax
5683(5): jmp 0xffffbf5d(%rip)
5688(8): nop 0x0(%rax,%rax,1)
5690(4): mov 0x10(%rbx),%r13
5694(4): mov 0x8(%rbx),%r12
5698(7): lea 0x4227(%rip),%rsi
569f(3): mov (%rbx),%rbx
56a2(5): mov $0x5,%edx
56a7(2): xor %edi,%edi
56a9(5): call 0xffffbd37(%rip)
56ae(4): add $0x28,%rsp
56b2(3): mov %r13,%r9
56b5(3): mov %r12,%r8
56b8(3): mov %rbx,%rcx
56bb(3): mov %rbp,%rdi
56be(3): mov %rax,%rdx
56c1(1): pop %rbx
56c2(1): pop %rbp
56c3(2): pop %r12
56c5(2): pop %r13
56c7(2): pop %r14
56c9(2): pop %r15
56cb(5): mov $0x1,%esi
56d0(2): xor %eax,%eax
56d2(5): jmp 0xffffbf0e(%rip)
56d7(9): nop 0x0(%rax,%rax,1)
56e0(7): lea 0x4311(%rip),%rsi
56e7(5): mov $0x5,%edx
56ec(2): xor %edi,%edi
56ee(4): mov 0x18(%rbx),%r14
56f2(4): mov 0x10(%rbx),%r13
56f6(4): mov 0x8(%rbx),%r12
56fa(3): mov (%rbx),%rbx
56fd(5): call 0xffffbce3(%rip)
5702(4): sub $0x8,%rsp
5706(2): push %r14
5708(3): mov %rax,%rdx
570b(3): mov %r13,%r9
570e(3): mov %r12,%r8
5711(3): mov %rbx,%rcx
5714(3): mov %rbp,%rdi
5717(5): mov $0x1,%esi
571c(2): xor %eax,%eax
571e(5): call 0xffffbec2(%rip)
5723(1): pop %rax
5724(1): pop %rdx
5725(4): add $0x28,%rsp
5729(1): pop %rbx
572a(1): pop %rbp
572b(2): pop %r12
572d(2): pop %r13
572f(2): pop %r14
5731(2): pop %r15
5733(1): ret near (%rsp)
5734(4): nop 0x0(%rax)
5738(4): mov 0x20(%rbx),%r15
573c(7): lea 0x42d5(%rip),%rsi
5743(5): mov $0x5,%edx
5748(2): xor %edi,%edi
574a(4): mov 0x18(%rbx),%r14
574e(4): mov 0x10(%rbx),%r13
5752(4): mov 0x8(%rbx),%r12
5756(3): mov (%rbx),%rbx
5759(5): call 0xffffbc87(%rip)
575e(2): push %r15
5760(2): jmp 0xffffffa6(%rip)
5762(6): nop 0x0(%rax,%rax,1)
5768(4): mov 0x8(%rbx),%r8
576c(4): mov 0x28(%rbx),%r12
5770(7): lea 0x42c9(%rip),%rsi
5777(4): mov 0x20(%rbx),%r15
577b(4): mov 0x18(%rbx),%r14
577f(5): mov $0x5,%edx
5784(4): mov 0x10(%rbx),%r13
5788(2): xor %edi,%edi
578a(3): mov (%rbx),%rbx
578d(4): mov %r8,(%rsp)
5791(5): call 0xffffbc4f(%rip)
5796(4): sub $0x8,%rsp
579a(3): mov %r13,%r9
579d(2): push %r12
579f(2): push %r15
57a1(2): push %r14
57a3(5): mov 0x20(%rsp),%r8
57a8(3): mov %rbx,%rcx
57ab(3): mov %rax,%rdx
57ae(3): mov %rbp,%rdi
57b1(5): mov $0x1,%esi
57b6(2): xor %eax,%eax
57b8(5): call 0xffffbe28(%rip)
57bd(4): add $0x20,%rsp
57c1(4): add $0x28,%rsp
57c5(1): pop %rbx
57c6(1): pop %rbp
57c7(2): pop %r12
57c9(2): pop %r13
57cb(2): pop %r14
57cd(2): pop %r15
57cf(1): ret near (%rsp)
57d0(4): mov 0x10(%rbx),%r9
57d4(4): mov 0x30(%rbx),%r13
57d8(7): lea 0x4289(%rip),%rsi
57df(4): mov 0x28(%rbx),%r12
57e3(4): mov 0x20(%rbx),%r15
57e7(5): mov $0x5,%edx
57ec(4): mov 0x18(%rbx),%r14
57f0(4): mov 0x8(%rbx),%r8
57f4(2): xor %edi,%edi
57f6(5): mov %r9,0x8(%rsp)
57fb(3): mov (%rbx),%rbx
57fe(4): mov %r8,(%rsp)
5802(5): call 0xffffbbde(%rip)
5807(2): push %r13
5809(2): push %r12
580b(2): push %r15
580d(2): push %r14
580f(5): mov 0x28(%rsp),%r9
5814(2): jmp 0xffffff8f(%rip)
5816(a): nop 0x0(%rax,%rax,1)
5820(4): mov 0x40(%rbx),%r10
5824(4): mov 0x38(%rbx),%r9
5828(5): mov $0x5,%edx
582d(4): mov 0x10(%rbx),%rax
5831(4): mov 0x8(%rbx),%r8
5835(7): lea 0x42c4(%rip),%rsi
583c(4): mov 0x30(%rbx),%r13
5840(4): mov 0x28(%rbx),%r12
5844(4): mov 0x20(%rbx),%r15
5848(4): mov 0x18(%rbx),%r14
584c(5): mov %r10,0x18(%rsp)
5851(5): mov %r9,0x10(%rsp)
5856(4): mov %rax,(%rsp)
585a(5): mov %r8,0x8(%rsp)
585f(3): mov (%rbx),%rbx
5862(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5870(3): xor %r9d,%r9d
5873(4): cmp $0x0,(%r8)
5877(2): jz 0x14(%rip)
5879(7): nop 0x0(%rax)
5880(4): add $0x1,%r9
5884(5): cmp $0x0,0x0(%r8,%r9,8)
5889(2): jnz 0xfffffff7(%rip)
588b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5890(4): sub $0x68,%rsp
5894(3): mov %r8,%r10
5897(3): xor %r9d,%r9d
589a(9): mov $0x28,%rax
58a3(5): mov %rax,0x58(%rsp)
58a8(2): xor %eax,%eax
58aa(3): mov %rsp,%r8
58ad(3): nop (%rax)
58b0(3): mov (%r10),%eax
58b3(3): cmp $0x2f,%eax
58b6(2): jnbe 0x44(%rip)
58b8(3): mov %eax,%r11d
58bb(4): add 0x10(%r10),%r11
58bf(3): add $0x8,%eax
58c2(3): mov %eax,(%r10)
58c5(3): mov (%r11),%rax
58c8(3): test %rax,%rax
58cb(4): mov %rax,0x0(%r8,%r9,8)
58cf(2): jz 0xc(%rip)
58d1(4): add $0x1,%r9
58d5(4): cmp $0xa,%r9
58d9(2): jnz 0xffffffd7(%rip)
58db(5): call 0xfffffb75(%rip)
58e0(5): mov 0x58(%rsp),%rax
58e5(9): xor $0x28,%rax
58ee(2): jnz 0x7(%rip)
58f0(4): add $0x68,%rsp
58f4(1): ret near (%rsp)
58f5(5): call 0xffffbb2b(%rip)
58fa(4): mov 0x8(%r10),%r11
58fe(4): lea 0x8(%r11),%rax
5902(4): mov %rax,0x8(%r10)
5906(2): jmp 0xffffffbf(%rip)

"version_etc" :
5910(1): push %rbp
5911(1): push %rbx
5912(6): mov $0x20,%r10d
5918(3): xor %r11d,%r11d
591b(7): sub $0xb8,%rsp
5922(9): mov $0x28,%rax
592b(5): mov %rax,0x78(%rsp)
5930(2): xor %eax,%eax
5932(8): lea 0xd0(%rsp),%rax
593a(8): mov %r8,0xa0(%rsp)
5942(8): lea 0xd0(%rsp),%rbx
594a(5): lea 0x20(%rsp),%r8
594f(8): mov %r9,0xa8(%rsp)
5957(8): mov $0x20,0x8(%rsp)
595f(5): mov %rax,0x10(%rsp)
5964(8): lea 0x80(%rsp),%rax
596c(3): xor %r9d,%r9d
596f(5): mov %rax,0x18(%rsp)
5974(3): mov %rax,%rbp
5977(9): nop 0x0(%rax,%rax,1)
5980(4): cmp $0x2f,%r10d
5984(2): jnbe 0x58(%rip)
5986(3): mov %r10d,%eax
5989(6): mov $0x1,%r11d
598f(4): add $0x8,%r10d
5993(3): add %rbp,%rax
5996(3): mov (%rax),%rax
5999(3): test %rax,%rax
599c(4): mov %rax,0x0(%r8,%r9,8)
59a0(2): jz 0xc(%rip)
59a2(4): add $0x1,%r9
59a6(4): cmp $0xa,%r9
59aa(2): jnz 0xffffffd6(%rip)
59ac(3): test %r11b,%r11b
59af(2): jnz 0x26(%rip)
59b1(5): call 0xfffffa9f(%rip)
59b6(5): mov 0x78(%rsp),%rax
59bb(9): xor $0x28,%rax
59c4(2): jnz 0xc(%rip)
59c6(7): add $0xb8,%rsp
59cd(1): pop %rbx
59ce(1): pop %rbp
59cf(1): ret near (%rsp)
59d0(5): call 0xffffba50(%rip)
59d5(5): mov %r10d,0x8(%rsp)
59da(2): jmp 0xffffffd7(%rip)
59dc(3): mov %rbx,%rax
59df(4): add $0x8,%rbx
59e3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
59f0(1): push %rbx
59f1(7): lea 0x3eea(%rip),%rsi
59f8(5): mov $0x5,%edx
59fd(2): xor %edi,%edi
59ff(5): call 0xffffb9e1(%rip)
5a04(7): lea 0x3eec(%rip),%rdx
5a0b(3): mov %rax,%rsi
5a0e(5): mov $0x1,%edi
5a13(2): xor %eax,%eax
5a15(5): call 0xffffbb5b(%rip)
5a1a(7): lea 0x3eec(%rip),%rsi
5a21(5): mov $0x5,%edx
5a26(2): xor %edi,%edi
5a28(5): call 0xffffb9b8(%rip)
5a2d(7): lea 0x385c(%rip),%rcx
5a34(7): lea 0x2a0b(%rip),%rdx
5a3b(3): mov %rax,%rsi
5a3e(5): mov $0x1,%edi
5a43(2): xor %eax,%eax
5a45(5): call 0xffffbb2b(%rip)
5a4a(7): mov 0x206637(%rip),%rbx
5a51(7): lea 0x40e8(%rip),%rsi
5a58(2): xor %edi,%edi
5a5a(5): mov $0x5,%edx
5a5f(5): call 0xffffb981(%rip)
5a64(3): mov %rbx,%rsi
5a67(3): mov %rax,%rdi
5a6a(1): pop %rbx
5a6b(5): jmp 0xffffba25(%rip)

"xmalloc" :
5a70(1): push %rbx
5a71(3): mov %rdi,%rbx
5a74(5): call 0xffffba8c(%rip)
5a79(3): test %rax,%rax
5a7c(2): jnz 0x7(%rip)
5a7e(3): test %rbx,%rbx
5a81(2): jnz 0x4(%rip)
5a83(1): pop %rbx
5a84(1): ret near (%rsp)
5a85(5): call 0x23b(%rip)

"xnmalloc" :
5a90(3): mov %rdi,%rax
5a93(3): mul %rax,%rsi,%rdx
5a96(3): mov %rax,%rdi
5a99(3): seto %al
5a9c(3): test %rdi,%rdi
5a9f(2): js 0xc(%rip)
5aa1(3): movzx %al,%eax
5aa4(3): test %rax,%rax
5aa7(2): jnz 0x4(%rip)
5aa9(2): jmp 0xffffffc7(%rip)
5aab(4): sub $0x8,%rsp
5aaf(5): call 0x211(%rip)

"xrealloc" :
5ad0(3): test %rsi,%rsi
5ad3(1): push %rbx
5ad4(3): mov %rsi,%rbx
5ad7(2): jnz 0x7(%rip)
5ad9(3): test %rdi,%rdi
5adc(2): jnz 0x1c(%rip)
5ade(3): mov %rbx,%rsi
5ae1(5): call 0xffffba6f(%rip)
5ae6(3): test %rax,%rax
5ae9(2): jnz 0x7(%rip)
5aeb(3): test %rbx,%rbx
5aee(2): jnz 0x13(%rip)
5af0(1): pop %rbx
5af1(1): ret near (%rsp)
5af2(6): nop 0x0(%rax,%rax,1)
5af8(5): call 0xffffb838(%rip)
5afd(2): xor %eax,%eax
5aff(1): pop %rbx
5b00(1): ret near (%rsp)
5b01(5): call 0x1bf(%rip)

"xnrealloc" :
5b10(3): mov %rsi,%rax
5b13(3): mul %rax,%rdx,%rdx
5b16(3): mov %rax,%rsi
5b19(3): seto %al
5b1c(3): test %rsi,%rsi
5b1f(2): js 0xc(%rip)
5b21(3): movzx %al,%eax
5b24(3): test %rax,%rax
5b27(2): jnz 0x4(%rip)
5b29(2): jmp 0xffffffa7(%rip)
5b2b(4): sub $0x8,%rsp
5b2f(5): call 0x191(%rip)

"x2nrealloc" :
5b40(3): test %rdi,%rdi
5b43(3): mov %rdx,%r9
5b46(3): mov (%rsi),%rcx
5b49(2): jz 0x37(%rip)
5b4b(2): xor %edx,%edx
5b4d(a): mov $0x6148914691236517204,%rax
5b57(3): div %r9,%rax
5b5a(3): cmp %rcx,%rax
5b5d(2): jbe 0x3e(%rip)
5b5f(3): mov %rcx,%rax
5b62(3): shr $0x1,%rax
5b65(5): lea 0x1(%rax,%rcx,1),%rcx
5b6a(3): mov %rcx,(%rsi)
5b6d(4): imul %r9,%rcx
5b71(3): mov %rcx,%rsi
5b74(5): jmp 0xffffff5c(%rip)
5b79(7): nop 0x0(%rax)
5b80(3): test %rcx,%rcx
5b83(2): jz 0x25(%rip)
5b85(3): mov %rcx,%rax
5b88(3): mul %rax,%r9,%rdx
5b8b(3): seto %dl
5b8e(3): test %rax,%rax
5b91(3): movzx %dl,%edx
5b94(2): js 0x7(%rip)
5b96(3): test %rdx,%rdx
5b99(2): jz 0xffffffd1(%rip)
5b9b(4): sub $0x8,%rsp
5b9f(5): call 0x121(%rip)
5ba4(4): nop 0x0(%rax)
5ba8(2): xor %edx,%edx
5baa(5): mov $0x80,%eax
5baf(3): xor %r8d,%r8d
5bb2(3): div %r9,%rax
5bb5(3): test %rax,%rax
5bb8(4): setz %r8b
5bbc(4): lea 0x0(%r8,%rax,1),%rcx
5bc0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5bd0(3): test %rdi,%rdi
5bd3(3): mov (%rsi),%rax
5bd6(2): jz 0x2a(%rip)
5bd8(a): mov $0x6148914691236517203,%rdx
5be2(3): cmp %rdx,%rax
5be5(2): jnbe 0x2c(%rip)
5be7(3): mov %rax,%rdx
5bea(3): shr $0x1,%rdx
5bed(5): lea 0x1(%rdx,%rax,1),%rax
5bf2(3): mov %rax,(%rsi)
5bf5(3): mov %rax,%rsi
5bf8(5): jmp 0xfffffed8(%rip)
5bfd(3): nop (%rax)
5c00(3): test %rax,%rax
5c03(5): mov $0x80,%edx
5c08(4): cmove %rdx,%rax
5c0c(3): test %rax,%rax
5c0f(2): jns 0xffffffe3(%rip)
5c11(4): sub $0x8,%rsp
5c15(5): call 0xab(%rip)

"xzalloc" :
5c20(1): push %rbx
5c21(3): mov %rdi,%rbx
5c24(5): call 0xfffffe4c(%rip)
5c29(3): mov %rbx,%rdx
5c2c(2): xor %esi,%esi
5c2e(3): mov %rax,%rdi
5c31(1): pop %rbx
5c32(5): jmp 0xffffb82e(%rip)

"xcalloc" :
5c40(3): mov %rdi,%rax
5c43(4): sub $0x8,%rsp
5c47(3): mul %rax,%rsi,%rdx
5c4a(3): seto %dl
5c4d(3): test %rax,%rax
5c50(2): js 0x19(%rip)
5c52(3): movzx %dl,%edx
5c55(3): test %rdx,%rdx
5c58(2): jnz 0x11(%rip)
5c5a(5): call 0xffffb846(%rip)
5c5f(3): test %rax,%rax
5c62(2): jz 0x7(%rip)
5c64(4): add $0x8,%rsp
5c68(1): ret near (%rsp)
5c69(5): call 0x57(%rip)

"xmemdup" :
5c70(1): push %rbp
5c71(1): push %rbx
5c72(3): mov %rdi,%rbp
5c75(3): mov %rsi,%rdi
5c78(3): mov %rsi,%rbx
5c7b(4): sub $0x8,%rsp
5c7f(5): call 0xfffffdf1(%rip)
5c84(4): add $0x8,%rsp
5c88(3): mov %rbx,%rdx
5c8b(3): mov %rbp,%rsi
5c8e(1): pop %rbx
5c8f(1): pop %rbp
5c90(3): mov %rax,%rdi
5c93(5): jmp 0xffffb83d(%rip)

"xstrdup" :
5ca0(1): push %rbx
5ca1(3): mov %rdi,%rbx
5ca4(5): call 0xffffb75c(%rip)
5ca9(3): mov %rbx,%rdi
5cac(4): lea 0x1(%rax),%rsi
5cb0(1): pop %rbx
5cb1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5cc0(7): lea 0x3f28(%rip),%rsi
5cc7(4): sub $0x8,%rsp
5ccb(5): mov $0x5,%edx
5cd0(2): xor %edi,%edi
5cd2(5): call 0xffffb70e(%rip)
5cd7(6): mov 0x20633b(%rip),%edi
5cdd(7): lea 0x3664(%rip),%rdx
5ce4(3): mov %rax,%rcx
5ce7(2): xor %esi,%esi
5ce9(2): xor %eax,%eax
5ceb(5): call 0xffffb895(%rip)
5cf0(5): call 0xffffb650(%rip)

"xstrcat" :
5d00(2): push %r15
5d02(2): push %r14
5d04(2): push %r13
5d06(2): push %r12
5d08(1): push %rbp
5d09(1): push %rbx
5d0a(4): sub $0x28,%rsp
5d0e(9): mov $0x28,%rax
5d17(5): mov %rax,0x18(%rsp)
5d1c(2): xor %eax,%eax
5d1e(3): test %rdi,%rdi
5d21(4): movdqu (%rsi),%xmm0
5d25(4): movups %xmm0,(%rsp)
5d29(4): mov 0x10(%rsi),%r14
5d2d(5): mov %r14,0x10(%rsp)
5d32(6): jz 0xae(%rip)
5d38(3): mov %rdi,%r12
5d3b(3): mov %rsi,%r15
5d3e(3): mov %rdi,%rbp
5d41(2): xor %ebx,%ebx
5d43(7): mov $0xffffffff,%r13
5d4a(3): mov (%rsp),%edx
5d4d(3): cmp $0x2f,%edx
5d50(6): jnbe 0xe0(%rip)
5d56(2): mov %edx,%eax
5d58(3): add $0x8,%edx
5d5b(3): add %r14,%rax
5d5e(3): mov %edx,(%rsp)
5d61(3): mov (%rax),%rdi
5d64(5): call 0xffffb69c(%rip)
5d69(3): add %rax,%rbx
5d6c(4): cmovnae %r13,%rbx
5d70(4): sub $0x1,%rbp
5d74(2): jnz 0xffffffd6(%rip)
5d76(7): cmp $0x7fffffff,%rbx
5d7d(6): jnbe 0xa3(%rip)
5d83(4): lea 0x1(%rbx),%rdi
5d87(5): call 0xfffffce9(%rip)
5d8c(3): mov %rax,%r14
5d8f(3): mov %rax,%rbx
5d92(2): jmp 0x33(%rip)
5d94(2): mov %edx,%eax
5d96(4): add 0x10(%r15),%rax
5d9a(3): add $0x8,%edx
5d9d(3): mov %edx,(%r15)
5da0(3): mov (%rax),%r13
5da3(3): mov %r13,%rdi
5da6(5): call 0xffffb65a(%rip)
5dab(3): mov %rbx,%rdi
5dae(3): mov %rax,%rbp
5db1(3): mov %rax,%rdx
5db4(3): mov %r13,%rsi
5db7(3): add %rbp,%rbx
5dba(5): call 0xffffb716(%rip)
5dbf(4): sub $0x1,%r12
5dc3(2): jz 0x2d(%rip)
5dc5(3): mov (%r15),%edx
5dc8(3): cmp $0x2f,%edx
5dcb(2): jbe 0xffffffc9(%rip)
5dcd(4): mov 0x8(%r15),%rax
5dd1(4): lea 0x8(%rax),%rdx
5dd5(4): mov %rdx,0x8(%r15)
5dd9(2): jmp 0xffffffc7(%rip)
5ddb(5): nop 0x0(%rax,%rax,1)
5de0(5): mov $0x1,%edi
5de5(5): call 0xfffffc8b(%rip)
5dea(3): mov %rax,%rbx
5ded(3): mov %rax,%r14
5df0(3): mov $0x0,(%rbx)
5df3(5): mov 0x18(%rsp),%rcx
5df8(9): xor $0x28,%rcx
5e01(3): mov %r14,%rax
5e04(2): jnz 0x11(%rip)
5e06(4): add $0x28,%rsp
5e0a(1): pop %rbx
5e0b(1): pop %rbp
5e0c(2): pop %r12
5e0e(2): pop %r13
5e10(2): pop %r14
5e12(2): pop %r15
5e14(1): ret near (%rsp)
5e15(5): call 0xffffb60b(%rip)
5e1a(6): nop 0x0(%rax,%rax,1)
5e20(5): call 0xffffb530(%rip)
5e25(3): xor %r14d,%r14d
5e28(6): mov $0x4b,(%rax)
5e2e(2): jmp 0xffffffc5(%rip)
5e30(5): mov 0x8(%rsp),%rax
5e35(4): lea 0x8(%rax),%rdx
5e39(5): mov %rdx,0x8(%rsp)
5e3e(5): jmp 0xffffff23(%rip)

"xvasprintf" :
5e50(4): sub $0x18,%rsp
5e54(9): mov $0x28,%rax
5e5d(5): mov %rax,0x8(%rsp)
5e62(2): xor %eax,%eax
5e64(3): movzx (%rdi),%eax
5e67(2): test %al,%al
5e69(2): jz 0x7d(%rip)
5e6b(2): cmp $0x25,%al
5e6d(3): mov %rdi,%r8
5e70(2): jnz 0x38(%rip)
5e72(4): cmp $0x73,0x1(%rdi)
5e76(2): jnz 0x32(%rip)
5e78(2): xor %edi,%edi
5e7a(2): jmp 0x13(%rip)
5e7c(4): nop 0x0(%rax)
5e80(3): cmp $0x25,%cl
5e83(2): jnz 0x25(%rip)
5e85(6): cmp $0x73,0x1(%r8,%rdi,2)
5e8b(2): jnz 0x1d(%rip)
5e8d(4): add $0x1,%rdi
5e91(5): movzx 0x0(%r8,%rdi,2),%ecx
5e96(2): test %cl,%cl
5e98(2): jnz 0xffffffe8(%rip)
5e9a(5): call 0xfffffe66(%rip)
5e9f(2): jmp 0x1f(%rip)
5ea1(7): nop 0x0(%rax)
5ea8(3): mov %rsi,%rdx
5eab(3): mov %rsp,%rdi
5eae(3): mov %r8,%rsi
5eb1(5): call 0xdf(%rip)
5eb6(2): test %eax,%eax
5eb8(2): js 0x20(%rip)
5eba(4): mov (%rsp),%rax
5ebe(5): mov 0x8(%rsp),%rdx
5ec3(9): xor $0x28,%rdx
5ecc(2): jnz 0x1e(%rip)
5ece(4): add $0x18,%rsp
5ed2(1): ret near (%rsp)
5ed3(5): nop 0x0(%rax,%rax,1)
5ed8(5): call 0xffffb478(%rip)
5edd(3): cmp $0xc,(%rax)
5ee0(2): jz 0xf(%rip)
5ee2(2): xor %eax,%eax
5ee4(2): jmp 0xffffffda(%rip)
5ee6(2): xor %edi,%edi
5ee8(2): jmp 0xffffffb2(%rip)
5eea(5): call 0xffffb536(%rip)
5eef(5): call 0xfffffdd1(%rip)

"rpl_mbrtowc" :
5f00(2): push %r13
5f02(2): push %r12
5f04(3): mov %rsi,%r13
5f07(1): push %rbp
5f08(1): push %rbx
5f09(3): mov %rdi,%rbx
5f0c(3): mov %rdx,%r12
5f0f(4): sub $0x18,%rsp
5f13(9): mov $0x28,%rax
5f1c(5): mov %rax,0x8(%rsp)
5f21(2): xor %eax,%eax
5f23(5): lea 0x4(%rsp),%rax
5f28(3): test %rdi,%rdi
5f2b(4): cmove %rax,%rbx
5f2f(3): mov %rbx,%rdi
5f32(5): call 0xffffb4fe(%rip)
5f37(4): cmp $0xfffffffd,%rax
5f3b(3): mov %rax,%rbp
5f3e(2): jbe 0x22(%rip)
5f40(3): test %r12,%r12
5f43(2): jz 0x1d(%rip)
5f45(2): xor %edi,%edi
5f47(5): call 0x149(%rip)
5f4c(2): test %al,%al
5f4e(2): jnz 0x12(%rip)
5f50(5): movzx 0x0(%r13),%eax
5f55(5): mov $0x1,%ebp
5f5a(2): mov %eax,(%rbx)
5f5c(4): nop 0x0(%rax)
5f60(5): mov 0x8(%rsp),%rdx
5f65(9): xor $0x28,%rdx
5f6e(3): mov %rbp,%rax
5f71(2): jnz 0xd(%rip)
5f73(4): add $0x18,%rsp
5f77(1): pop %rbx
5f78(1): pop %rbp
5f79(2): pop %r12
5f7b(2): pop %r13
5f7d(1): ret near (%rsp)
5f7e(5): call 0xffffb4a2(%rip)

"rpl_vasprintf" :
5f90(1): push %rbx
5f91(3): mov %rsi,%rax
5f94(3): mov %rdi,%rbx
5f97(2): xor %edi,%edi
5f99(4): sub $0x10,%rsp
5f9d(9): mov $0x28,%rcx
5fa6(5): mov %rcx,0x8(%rsp)
5fab(2): xor %ecx,%ecx
5fad(3): mov %rsp,%rsi
5fb0(3): mov %rdx,%rcx
5fb3(3): mov %rax,%rdx
5fb6(5): call 0x29a(%rip)
5fbb(3): test %rax,%rax
5fbe(2): jz 0x44(%rip)
5fc0(4): mov (%rsp),%rdx
5fc4(7): cmp $0x7fffffff,%rdx
5fcb(2): jnbe 0x1d(%rip)
5fcd(3): mov %rax,(%rbx)
5fd0(2): mov %edx,%eax
5fd2(5): mov 0x8(%rsp),%rbx
5fd7(9): xor $0x28,%rbx
5fe0(2): jnz 0x29(%rip)
5fe2(4): add $0x10,%rsp
5fe6(1): pop %rbx
5fe7(1): ret near (%rsp)
5fe8(3): mov %rax,%rdi
5feb(5): call 0xffffb345(%rip)
5ff0(5): call 0xffffb360(%rip)
5ff5(6): mov $0x4b,(%rax)
5ffb(5): mov $0xffffffff,%eax
6000(2): jmp 0xffffffd2(%rip)
6002(5): mov $0xffffffff,%eax
6007(2): jmp 0xffffffcb(%rip)
6009(5): call 0xffffb417(%rip)

"close_stream" :
6010(2): push %r12
6012(1): push %rbp
6013(3): mov %rdi,%rbp
6016(1): push %rbx
6017(5): call 0xffffb379(%rip)
601c(3): mov 0x0(%rbp),%ebx
601f(3): mov %rbp,%rdi
6022(3): mov %rax,%r12
6025(5): call 0x10b(%rip)
602a(3): and $0x20,%ebx
602d(2): test %ebx,%ebx
602f(2): jnz 0x19(%rip)
6031(2): test %eax,%eax
6033(2): jz 0xc(%rip)
6035(3): test %r12,%r12
6038(5): mov $0xffffffff,%eax
603d(2): jz 0x3b(%rip)
603f(1): pop %rbx
6040(1): pop %rbp
6041(2): pop %r12
6043(1): ret near (%rsp)
6044(4): nop 0x0(%rax)
6048(2): test %eax,%eax
604a(2): jnz 0x1e(%rip)
604c(5): call 0xffffb304(%rip)
6051(6): mov $0x0,(%rax)
6057(5): mov $0xffffffff,%eax
605c(1): pop %rbx
605d(1): pop %rbp
605e(2): pop %r12
6060(1): ret near (%rsp)
6061(7): nop 0x0(%rax)
6068(1): pop %rbx
6069(5): mov $0xffffffff,%eax
606e(1): pop %rbp
606f(2): pop %r12
6071(1): ret near (%rsp)
6072(6): nop 0x0(%rax,%rax,1)
6078(5): call 0xffffb2d8(%rip)
607d(3): cmp $0x9,(%rax)
6080(1): pop %rbx
6081(1): pop %rbp
6082(2): pop %r12
6084(3): setnz %al
6087(3): movzx %al,%eax
608a(2): neg %eax
608c(1): ret near (%rsp)

"hard_locale" :
6090(4): sub $0x8,%rsp
6094(2): xor %esi,%esi
6096(5): call 0xffffb4ca(%rip)
609b(3): mov %rax,%rdx
609e(5): mov $0x1,%eax
60a3(3): test %rdx,%rdx
60a6(2): jz 0x1f(%rip)
60a8(7): lea 0x3b51(%rip),%rdi
60af(5): mov $0x2,%ecx
60b4(3): mov %rdx,%rsi
60b7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
60b9(3): setnbe %cl
60bc(3): sbb $0x0,%cl
60bf(2): xor %eax,%eax
60c1(2): test %cl,%cl
60c3(2): jnz 0xd(%rip)
60c5(4): add $0x8,%rsp
60c9(1): ret near (%rsp)
60ca(6): nop 0x0(%rax,%rax,1)
60d0(7): lea 0x3b2b(%rip),%rdi
60d7(5): mov $0x6,%ecx
60dc(3): mov %rdx,%rsi
60df(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
60e1(3): setnbe %al
60e4(2): sbb $0x0,%al
60e6(2): test %al,%al
60e8(3): setnz %al
60eb(4): add $0x8,%rsp
60ef(1): ret near (%rsp)

"locale_charset" :
60f0(4): sub $0x8,%rsp
60f4(5): mov $0xe,%edi
60f9(5): call 0xffffb427(%rip)
60fe(3): test %rax,%rax
6101(2): jz 0x1f(%rip)
6103(3): cmp $0x0,(%rax)
6106(7): lea 0x3afb(%rip),%rdx
610d(4): cmove %rdx,%rax
6111(4): add $0x8,%rsp
6115(1): ret near (%rsp)
6116(a): nop 0x0(%rax,%rax,1)
6120(7): lea 0x3ae1(%rip),%rax
6127(4): add $0x8,%rsp
612b(1): ret near (%rsp)

"rpl_fclose" :
6130(2): push %r12
6132(1): push %rbp
6133(1): push %rbx
6134(3): mov %rdi,%rbx
6137(5): call 0xffffb3a9(%rip)
613c(2): test %eax,%eax
613e(3): mov %rbx,%rdi
6141(2): js 0x56(%rip)
6143(5): call 0xffffb3fd(%rip)
6148(2): test %eax,%eax
614a(2): jnz 0x2e(%rip)
614c(3): mov %rbx,%rdi
614f(5): call 0x61(%rip)
6154(2): test %eax,%eax
6156(2): jz 0x3e(%rip)
6158(5): call 0xffffb1f8(%rip)
615d(3): mov (%rax),%r12d
6160(3): mov %rbx,%rdi
6163(3): mov %rax,%rbp
6166(5): call 0xffffb25a(%rip)
616b(3): test %r12d,%r12d
616e(2): jnz 0x32(%rip)
6170(1): pop %rbx
6171(1): pop %rbp
6172(2): pop %r12
6174(1): ret near (%rsp)
6175(3): nop (%rax)
6178(3): mov %rbx,%rdi
617b(5): call 0xffffb365(%rip)
6180(2): xor %esi,%esi
6182(5): mov $0x1,%edx
6187(2): mov %eax,%edi
6189(5): call 0xffffb2c7(%rip)
618e(4): cmp $0xffffffff,%rax
6192(2): jnz 0xffffffba(%rip)
6194(3): mov %rbx,%rdi
6197(1): pop %rbx
6198(1): pop %rbp
6199(2): pop %r12
619b(5): jmp 0xffffb225(%rip)
61a0(4): mov %r12d,0x0(%rbp)
61a4(5): mov $0xffffffff,%eax
61a9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
61b0(3): test %rdi,%rdi
61b3(1): push %rbx
61b4(3): mov %rdi,%rbx
61b7(2): jz 0x13(%rip)
61b9(5): call 0xffffb387(%rip)
61be(2): test %eax,%eax
61c0(2): jz 0xa(%rip)
61c2(6): test $0x100,(%rbx)
61c8(2): jnz 0x10(%rip)
61ca(3): mov %rbx,%rdi
61cd(1): pop %rbx
61ce(5): jmp 0xffffb342(%rip)
61d3(5): nop 0x0(%rax,%rax,1)
61d8(3): mov %rbx,%rdi
61db(5): mov $0x1,%edx
61e0(2): xor %esi,%esi
61e2(5): call 0xe(%rip)
61e7(3): mov %rbx,%rdi
61ea(1): pop %rbx
61eb(5): jmp 0xffffb325(%rip)

"rpl_fseeko" :
61f0(4): mov 0x8(%rdi),%rax
61f4(4): cmp %rax,0x10(%rdi)
61f8(2): jz 0x8(%rip)
61fa(5): jmp 0xffffb396(%rip)
61ff(1): nop 
6200(4): mov 0x20(%rdi),%rax
6204(4): cmp %rax,0x28(%rdi)
6208(2): jnz 0xfffffff2(%rip)
620a(5): cmp $0x0,0x48(%rdi)
620f(2): jnz 0xffffffeb(%rip)
6211(2): push %r12
6213(1): push %rbp
6214(3): mov %edx,%r12d
6217(1): push %rbx
6218(3): mov %rsi,%rbp
621b(3): mov %rdi,%rbx
621e(5): call 0xffffb2c2(%rip)
6223(3): mov %r12d,%edx
6226(3): mov %rbp,%rsi
6229(2): mov %eax,%edi
622b(5): call 0xffffb225(%rip)
6230(4): cmp $0xffffffff,%rax
6234(2): jz 0xe(%rip)
6236(3): and $0xef,(%rbx)
6239(7): mov %rax,0x90(%rbx)
6240(2): xor %eax,%eax
6242(1): pop %rbx
6243(1): pop %rbp
6244(2): pop %r12
6246(1): ret near (%rsp)

"vasnprintf" :
6250(1): push %rbp
6251(3): mov %rsp,%rbp
6254(2): push %r15
6256(2): push %r14
6258(2): push %r13
625a(2): push %r12
625c(7): lea 0xfffffc50(%rbp),%r14
6263(1): push %rbx
6264(3): mov %rdx,%rbx
6267(3): mov %rcx,%r12
626a(3): mov %r14,%rdx
626d(7): sub $0x408,%rsp
6274(7): mov %rsi,0xfffffbe8(%rbp)
627b(7): lea 0xfffffd40(%rbp),%rsi
6282(7): mov %rdi,0xfffffc18(%rbp)
6289(3): mov %rbx,%rdi
628c(7): mov %r14,0xfffffbf0(%rbp)
6293(9): mov $0x28,%rax
629c(4): mov %rax,0xffffffc8(%rbp)
62a0(2): xor %eax,%eax
62a2(7): mov %rsi,0xfffffbf8(%rbp)
62a9(5): call 0x12c7(%rip)
62ae(2): test %eax,%eax
62b0(6): js 0xe68(%rip)
62b6(3): mov %r14,%rsi
62b9(3): mov %r12,%rdi
62bc(5): call 0x10b4(%rip)
62c1(2): test %eax,%eax
62c3(6): js 0xebd(%rip)
62c9(7): mov 0xfffffd50(%rbp),%rax
62d0(7): mov $0xffffffff,%rdx
62d7(4): add $0x7,%rax
62db(4): cmp $0x6,%rax
62df(4): cmovbe %rdx,%rax
62e3(7): add 0xfffffd58(%rbp),%rax
62ea(6): jb 0xa2e(%rip)
62f0(3): mov %rax,%rdi
62f3(3): xor %r8d,%r8d
62f6(4): add $0x6,%rdi
62fa(4): setb %r8b
62fe(6): jb 0xa1a(%rip)
6304(7): cmp $0xf9f,%rdi
630b(6): jbe 0x14d(%rip)
6311(4): cmp $0xffffffff,%rdi
6315(7): mov %r8,0xfffffc38(%rbp)
631c(6): jz 0x9fc(%rip)
6322(5): call 0xffffb1de(%rip)
6327(3): test %rax,%rax
632a(7): mov %rax,0xfffffc28(%rbp)
6331(6): jz 0x9e7(%rip)
6337(7): mov 0xfffffc38(%rbp),%r8
633e(7): mov %rax,0xfffffbe0(%rbp)
6345(3): xor %r12d,%r12d
6348(8): cmp $0x0,0xfffffc18(%rbp)
6350(2): jz 0xc(%rip)
6352(7): mov 0xfffffbe8(%rbp),%rax
6359(3): mov (%rax),%r12
635c(7): mov 0xfffffd48(%rbp),%r13
6363(7): lea 0xfffffc44(%rbp),%rax
636a(7): mov 0xfffffc18(%rbp),%r15
6371(b): mov $0x0,0xfffffc00(%rbp)
637c(7): mov %rax,0xfffffc10(%rbp)
6383(3): mov %rbx,%rax
6386(3): mov %r8,%rbx
6389(4): mov 0x0(%r13),%rcx
638d(3): mov %rax,%r8
6390(3): cmp %r8,%rcx
6393(6): jz 0x96e(%rip)
6399(3): sub %r8,%rcx
639c(3): mov %rbx,%rax
639f(3): add %rcx,%rax
63a2(3): mov %rax,%r14
63a5(6): jnb 0xe3(%rip)
63ab(4): cmp $0xffffffff,%r12
63af(6): jz 0xad1(%rip)
63b5(5): call 0xffffaf9b(%rip)
63ba(7): mov %rax,0xfffffc38(%rbp)
63c1(7): cmp 0xfffffc18(%rbp),%r15
63c8(2): jz 0xb(%rip)
63ca(3): test %r15,%r15
63cd(6): jnz 0xae3(%rip)
63d3(7): mov 0xfffffbe0(%rbp),%rax
63da(3): test %rax,%rax
63dd(2): jz 0xa(%rip)
63df(3): mov %rax,%rdi
63e2(5): call 0xffffaf4e(%rip)
63e7(7): mov 0xfffffbf8(%rbp),%rax
63ee(7): mov 0xfffffd48(%rbp),%rdi
63f5(4): add $0x20,%rax
63f9(3): cmp %rax,%rdi
63fc(2): jz 0x7(%rip)
63fe(5): call 0xffffaf32(%rip)
6403(7): mov 0xfffffbf0(%rbp),%rax
640a(7): mov 0xfffffc58(%rbp),%rdi
6411(4): add $0x10,%rax
6415(3): cmp %rax,%rdi
6418(2): jz 0x7(%rip)
641a(5): call 0xffffaf16(%rip)
641f(7): mov 0xfffffc38(%rbp),%rax
6426(3): xor %r15d,%r15d
6429(6): mov $0xc,(%rax)
642f(4): mov 0xffffffc8(%rbp),%rdi
6433(9): xor $0x28,%rdi
643c(3): mov %r15,%rax
643f(6): jnz 0xf08(%rip)
6445(4): lea 0xffffffd8(%rbp),%rsp
6449(1): pop %rbx
644a(2): pop %r12
644c(2): pop %r13
644e(2): pop %r14
6450(2): pop %r15
6452(1): pop %rbp
6453(1): ret near (%rsp)
6454(4): nop 0x0(%rax)
6458(4): add $0x24,%rax
645c(b): mov $0x0,0xfffffbe0(%rbp)
6467(4): and $0xfffffff0,%rax
646b(3): sub %rax,%rsp
646e(5): lea 0xf(%rsp),%rax
6473(4): and $0xfffffff0,%rax
6477(7): mov %rax,0xfffffc28(%rbp)
647e(5): jmp 0xfffffec7(%rip)
6483(5): nop 0x0(%rax,%rax,1)
6488(3): cmp %rax,%r12
648b(2): jnb 0x69(%rip)
648d(3): test %r12,%r12
6490(6): jnz 0x930(%rip)
6496(4): cmp $0xc,%rax
649a(6): jnbe 0x938(%rip)
64a0(6): mov $0xc,%r12d
64a6(7): cmp 0xfffffc18(%rbp),%r15
64ad(3): setz %dl
64b0(3): test %r15,%r15
64b3(6): jz 0x945(%rip)
64b9(2): test %dl,%dl
64bb(6): jnz 0x93d(%rip)
64c1(3): mov %r12,%rsi
64c4(3): mov %r15,%rdi
64c7(7): mov %r8,0xfffffc30(%rbp)
64ce(7): mov %rcx,0xfffffc38(%rbp)
64d5(5): call 0xffffb07b(%rip)
64da(3): test %rax,%rax
64dd(7): mov 0xfffffc38(%rbp),%rcx
64e4(7): mov 0xfffffc30(%rbp),%r8
64eb(6): jz 0x9b0(%rip)
64f1(3): mov %rax,%r15
64f4(4): lea 0x0(%r15,%rbx,1),%rdi
64f8(3): mov %rcx,%rdx
64fb(3): mov %r8,%rsi
64fe(5): call 0xffffafd2(%rip)
6503(7): mov 0xfffffc00(%rbp),%rax
650a(7): cmp %rax,0xfffffd40(%rbp)
6511(6): jz 0xcba(%rip)
6517(5): movzx 0x48(%r13),%edx
651c(4): mov 0x50(%r13),%rax
6520(3): cmp $0x25,%dl
6523(6): jz 0x795(%rip)
6529(4): cmp $0xffffffff,%rax
652d(6): jz 0xc49(%rip)
6533(7): mov 0xfffffc58(%rbp),%r8
653a(4): shl/sal $0x5,%rax
653e(3): add %r8,%rax
6541(3): cmp $0x6e,%dl
6544(2): mov (%rax),%edi
6546(6): mov %edi,0xfffffc30(%rbp)
654c(6): jz 0x7e4(%rip)
6552(4): mov 0x10(%r13),%eax
6556(7): mov 0xfffffc28(%rbp),%rdi
655d(2): test $0x1,%al
655f(3): mov $0x25,(%rdi)
6562(4): lea 0x1(%rdi),%rbx
6566(2): jz 0x11(%rip)
6568(7): mov 0xfffffc28(%rbp),%rdi
656f(4): lea 0x2(%rdi),%rbx
6573(4): mov $0x27,0x1(%rdi)
6577(2): test $0x2,%al
6579(2): jz 0x9(%rip)
657b(3): mov $0x2d,(%rbx)
657e(4): add $0x1,%rbx
6582(2): test $0x4,%al
6584(2): jz 0x9(%rip)
6586(3): mov $0x2b,(%rbx)
6589(4): add $0x1,%rbx
658d(2): test $0x8,%al
658f(2): jz 0x9(%rip)
6591(3): mov $0x20,(%rbx)
6594(4): add $0x1,%rbx
6598(2): test $0x10,%al
659a(2): jz 0x9(%rip)
659c(3): mov $0x23,(%rbx)
659f(4): add $0x1,%rbx
65a3(2): test $0x40,%al
65a5(2): jz 0x9(%rip)
65a7(3): mov $0x49,(%rbx)
65aa(4): add $0x1,%rbx
65ae(2): test $0x20,%al
65b0(2): jz 0x9(%rip)
65b2(3): mov $0x30,(%rbx)
65b5(4): add $0x1,%rbx
65b9(4): mov 0x18(%r13),%rsi
65bd(4): mov 0x20(%r13),%rdx
65c1(3): cmp %rdx,%rsi
65c4(2): jz 0x32(%rip)
65c6(3): mov %rdx,%rcx
65c9(3): mov %rbx,%rdi
65cc(7): mov %r8,0xfffffc20(%rbp)
65d3(3): sub %rsi,%rcx
65d6(3): mov %rcx,%rdx
65d9(7): mov %rcx,0xfffffc38(%rbp)
65e0(5): call 0xffffaef0(%rip)
65e5(7): mov 0xfffffc38(%rbp),%rcx
65ec(7): mov 0xfffffc20(%rbp),%r8
65f3(3): add %rcx,%rbx
65f6(4): mov 0x30(%r13),%rsi
65fa(4): mov 0x38(%r13),%rdx
65fe(3): cmp %rdx,%rsi
6601(2): jz 0x32(%rip)
6603(3): mov %rdx,%rcx
6606(3): mov %rbx,%rdi
6609(7): mov %r8,0xfffffc20(%rbp)
6610(3): sub %rsi,%rcx
6613(3): mov %rcx,%rdx
6616(7): mov %rcx,0xfffffc38(%rbp)
661d(5): call 0xffffaeb3(%rip)
6622(7): mov 0xfffffc38(%rbp),%rcx
6629(7): mov 0xfffffc20(%rbp),%r8
6630(3): add %rcx,%rbx
6633(6): mov 0xfffffc30(%rbp),%edi
6639(3): cmp $0x10,%edi
663c(2): jnbe 0x2f(%rip)
663e(5): mov $0x1,%eax
6643(2): mov %edi,%ecx
6645(3): shl/sal %cl,%rax
6648(5): test $0x14180,%eax
664d(2): jnz 0x17(%rip)
664f(3): test $0x10,%ah
6652(6): jnz 0x95e(%rip)
6658(3): test $0x6,%ah
665b(2): jz 0x10(%rip)
665d(3): mov $0x6c,(%rbx)
6660(4): add $0x1,%rbx
6664(3): mov $0x6c,(%rbx)
6667(4): add $0x1,%rbx
666b(5): movzx 0x48(%r13),%eax
6670(4): mov $0x0,0x1(%rbx)
6674(2): mov %al,(%rbx)
6676(4): mov 0x28(%r13),%rax
667a(4): cmp $0xffffffff,%rax
667e(6): jz 0x732(%rip)
6684(4): shl/sal $0x5,%rax
6688(3): add %r8,%rax
668b(3): cmp $0x5,(%rax)
668e(6): jnz 0xae8(%rip)
6694(3): mov 0x10(%rax),%eax
6697(a): mov $0x1,0xfffffc20(%rbp)
66a1(6): mov %eax,0xfffffc48(%rbp)
66a7(4): mov 0x40(%r13),%rax
66ab(4): cmp $0xffffffff,%rax
66af(2): jz 0x2d(%rip)
66b1(4): shl/sal $0x5,%rax
66b5(3): add %rax,%r8
66b8(4): cmp $0x5,(%r8)
66bc(6): jnz 0xaba(%rip)
66c2(6): mov 0xfffffc20(%rbp),%eax
66c8(4): mov 0x10(%r8),%edx
66cc(7): mov %edx,0xfffffc48(%rbp,%rax,4)
66d3(3): lea 0x1(%rax),%eax
66d6(6): mov %eax,0xfffffc20(%rbp)
66dc(3): mov %r14,%rax
66df(2): xor %edx,%edx
66e1(4): add $0x2,%rax
66e5(6): jb 0xc67(%rip)
66eb(3): cmp %rax,%r12
66ee(2): jnb 0x4d(%rip)
66f0(3): test %r12,%r12
66f3(6): jnz 0x825(%rip)
66f9(4): cmp $0xc,%rax
66fd(6): jnbe 0x833(%rip)
6703(6): mov $0xc,%r12d
6709(7): cmp 0xfffffc18(%rbp),%r15
6710(3): setz %dl
6713(3): test %r15,%r15
6716(6): jz 0x84a(%rip)
671c(2): test %dl,%dl
671e(6): jnz 0x842(%rip)
6724(3): mov %r12,%rsi
6727(3): mov %r15,%rdi
672a(5): call 0xffffae26(%rip)
672f(3): test %rax,%rax
6732(6): jz 0xfffffc83(%rip)
6738(3): mov %rax,%r15
673b(5): mov $0x0,0x0(%r15,%r14,1)
6740(5): call 0xffffac10(%rip)
6745(7): mov %rax,0xfffffc38(%rbp)
674c(2): mov (%rax),%eax
674e(7): mov %rbx,0xfffffc08(%rbp)
6755(6): mov %eax,0xfffffbdc(%rbp)
675b(5): nop 0x0(%rax,%rax,1)
6760(7): mov 0xfffffc38(%rbp),%rax
6767(3): mov %r12,%rbx
676a(6): mov $0x7fffffff,%r10d
6770(3): sub %r14,%rbx
6773(a): mov $0xffffffff,0xfffffc44(%rbp)
677d(7): cmp $0x7fffffff,%rbx
6784(6): mov $0x0,(%rax)
678a(6): mov 0xfffffc30(%rbp),%eax
6790(4): cmovbe %rbx,%r10
6794(3): cmp $0x11,%eax
6797(6): jnbe 0x9df(%rip)
679d(7): lea 0x346c(%rip),%rsi
67a4(4): movsxd 0x0(%rsi,%rax,4),%rax
67a8(3): add %rsi,%rax
67ab(2): jmp %rax
67ad(3): nop (%rax)
67b0(4): mov 0x50(%r13),%rax
67b4(4): lea 0x0(%r15,%r14,1),%rdi
67b8(4): shl/sal $0x5,%rax
67bc(7): add 0xfffffc58(%rbp),%rax
67c3(4): mov 0x10(%rax),%r9
67c7(6): mov 0xfffffc20(%rbp),%eax
67cd(3): cmp $0x1,%eax
67d0(6): jz 0x4c8(%rip)
67d6(3): cmp $0x2,%eax
67d9(6): jz 0x4a7(%rip)
67df(4): sub $0x8,%rsp
67e3(6): push 0xfffffc10(%rbp)
67e9(7): mov 0xfffffc28(%rbp),%r8
67f0(3): mov %r10,%rsi
67f3(7): mov $0xffffffff,%rcx
67fa(5): mov $0x1,%edx
67ff(2): xor %eax,%eax
6801(7): mov %r10,0xfffffbd0(%rbp)
6808(5): call 0xffffab18(%rip)
680d(1): pop %rsi
680e(1): pop %rdi
680f(7): mov 0xfffffbd0(%rbp),%r10
6816(6): mov 0xfffffc44(%rbp),%ecx
681c(2): test %ecx,%ecx
681e(6): js 0x13e(%rip)
6824(3): movsxd %ecx,%rdx
6827(3): cmp %r10,%rdx
682a(2): jnb 0x10(%rip)
682c(3): add %r15,%rdx
682f(5): cmp $0x0,0x0(%rdx,%r14,1)
6834(6): jnz 0x942(%rip)
683a(2): cmp %eax,%ecx
683c(2): jnl 0xa(%rip)
683e(6): mov %eax,0xfffffc44(%rbp)
6844(2): mov %eax,%ecx
6846(3): lea 0x1(%rcx),%eax
6849(3): cmp %r10,%rax
684c(6): jb 0x834(%rip)
6852(7): cmp $0x7ffffffe,%rbx
6859(6): jnbe 0x847(%rip)
685f(4): lea 0x0(%r12,%r12,1),%rsi
6863(3): lea 0x2(%rcx),%edx
6866(3): test %r12,%r12
6869(7): mov $0xffffffff,%rax
6870(4): cmovns %rsi,%rax
6874(3): add %r14,%rdx
6877(6): jb 0xac1(%rip)
687d(3): cmp %rdx,%rax
6880(4): cmovnae %rdx,%rax
6884(3): cmp %rax,%r12
6887(6): jnb 0xfffffed9(%rip)
688d(3): test %r12,%r12
6890(6): js 0xfffffb31(%rip)
6896(3): cmp %rax,%rsi
6899(3): mov %rsi,%r12
689c(2): jnb 0xf(%rip)
689e(4): cmp $0xffffffff,%rax
68a2(6): jz 0xfffffb1f(%rip)
68a8(3): mov %rax,%r12
68ab(7): cmp 0xfffffc18(%rbp),%r15
68b2(3): setz %bl
68b5(3): test %r15,%r15
68b8(6): jz 0x388(%rip)
68be(2): test %bl,%bl
68c0(6): jnz 0x380(%rip)
68c6(3): mov %r12,%rsi
68c9(3): mov %r15,%rdi
68cc(5): call 0xffffac84(%rip)
68d1(3): test %rax,%rax
68d4(6): jz 0xfffffaed(%rip)
68da(3): mov %rax,%r15
68dd(5): jmp 0xfffffe83(%rip)
68e2(6): nop 0x0(%rax,%rax,1)
68e8(4): mov 0x50(%r13),%rax
68ec(4): lea 0x0(%r15,%r14,1),%rdi
68f0(4): shl/sal $0x5,%rax
68f4(7): add 0xfffffc58(%rbp),%rax
68fb(4): mov 0x10(%rax),%r9d
68ff(6): mov 0xfffffc20(%rbp),%eax
6905(3): cmp $0x1,%eax
6908(6): jz 0x238(%rip)
690e(3): cmp $0x2,%eax
6911(6): jz 0x277(%rip)
6917(4): sub $0x8,%rsp
691b(6): push 0xfffffc10(%rbp)
6921(7): mov 0xfffffc28(%rbp),%r8
6928(7): mov $0xffffffff,%rcx
692f(5): mov $0x1,%edx
6934(3): mov %r10,%rsi
6937(2): xor %eax,%eax
6939(7): mov %r10,0xfffffbd0(%rbp)
6940(5): call 0xffffa9e0(%rip)
6945(1): pop %rdx
6946(1): pop %rcx
6947(6): mov 0xfffffc44(%rbp),%ecx
694d(7): mov 0xfffffbd0(%rbp),%r10
6954(2): test %ecx,%ecx
6956(6): jns 0xfffffece(%rip)
695c(7): mov 0xfffffc08(%rbp),%rdi
6963(4): cmp $0x0,0x1(%rdi)
6967(6): jnz 0x341(%rip)
696d(2): test %eax,%eax
696f(6): jns 0xfffffecf(%rip)
6975(7): mov 0xfffffc38(%rbp),%rax
697c(2): mov (%rax),%ebx
697e(2): test %ebx,%ebx
6980(2): jnz 0x20(%rip)
6982(5): movzx 0x48(%r13),%eax
6987(5): mov $0x16,%ebx
698c(3): and $0xef,%eax
698f(2): cmp $0x63,%al
6991(5): mov $0x54,%eax
6996(3): cmove %eax,%ebx
6999(7): nop 0x0(%rax)
69a0(7): cmp 0xfffffc18(%rbp),%r15
69a7(2): jz 0xb(%rip)
69a9(3): test %r15,%r15
69ac(6): jnz 0x7b0(%rip)
69b2(7): mov 0xfffffbe0(%rbp),%rax
69b9(3): test %rax,%rax
69bc(2): jz 0xa(%rip)
69be(3): mov %rax,%rdi
69c1(5): call 0xffffa96f(%rip)
69c6(7): mov 0xfffffbf8(%rbp),%rax
69cd(7): mov 0xfffffd48(%rbp),%rdi
69d4(4): add $0x20,%rax
69d8(3): cmp %rax,%rdi
69db(2): jz 0x7(%rip)
69dd(5): call 0xffffa953(%rip)
69e2(7): mov 0xfffffbf0(%rbp),%rax
69e9(7): mov 0xfffffc58(%rbp),%rdi
69f0(4): add $0x10,%rax
69f4(3): cmp %rax,%rdi
69f7(2): jz 0x7(%rip)
69f9(5): call 0xffffa937(%rip)
69fe(7): mov 0xfffffc38(%rbp),%rax
6a05(3): xor %r15d,%r15d
6a08(2): mov %ebx,(%rax)
6a0a(5): jmp 0xfffffa25(%rip)
6a0f(1): nop 
6a10(4): mov 0x50(%r13),%rax
6a14(4): lea 0x0(%r15,%r14,1),%rdi
6a18(4): shl/sal $0x5,%rax
6a1c(7): add 0xfffffc58(%rbp),%rax
6a23(3): fld 0x10(%rax),%st0
6a26(6): mov 0xfffffc20(%rbp),%eax
6a2c(3): cmp $0x1,%eax
6a2f(6): jz 0x631(%rip)
6a35(3): cmp $0x2,%eax
6a38(6): jnz 0x4c8(%rip)
6a3e(6): mov 0xfffffc4c(%rbp),%eax
6a44(4): sub $0x8,%rsp
6a48(6): push 0xfffffc10(%rbp)
6a4e(7): mov 0xfffffc48(%rbp),%r9d
6a55(7): mov 0xfffffc28(%rbp),%r8
6a5c(3): mov %r10,%rsi
6a5f(4): sub $0x18,%rsp
6a63(7): mov $0xffffffff,%rcx
6a6a(5): mov $0x1,%edx
6a6f(4): fstp %st0,0x8(%rsp)
6a73(1): push %rax
6a74(2): xor %eax,%eax
6a76(7): mov %r10,0xfffffbd0(%rbp)
6a7d(5): call 0xffffa8a3(%rip)
6a82(4): add $0x30,%rsp
6a86(7): mov 0xfffffbd0(%rbp),%r10
6a8d(5): jmp 0xfffffd89(%rip)
6a92(6): nop 0x0(%rax,%rax,1)
6a98(4): mov 0x50(%r13),%rax
6a9c(4): lea 0x0(%r15,%r14,1),%rdi
6aa0(4): shl/sal $0x5,%rax
6aa4(7): add 0xfffffc58(%rbp),%rax
6aab(5): movsd 0x10(%rax),%xmm0
6ab0(6): mov 0xfffffc20(%rbp),%eax
6ab6(3): cmp $0x1,%eax
6ab9(6): jz 0x597(%rip)
6abf(3): cmp $0x2,%eax
6ac2(6): jnz 0x3fe(%rip)
6ac8(6): mov 0xfffffc4c(%rbp),%eax
6ace(6): push 0xfffffc10(%rbp)
6ad4(1): push %rax
6ad5(7): mov 0xfffffc48(%rbp),%r9d
6adc(7): mov 0xfffffc28(%rbp),%r8
6ae3(3): mov %r10,%rsi
6ae6(7): mov $0xffffffff,%rcx
6aed(5): mov $0x1,%edx
6af2(5): mov $0x1,%eax
6af7(7): mov %r10,0xfffffbd0(%rbp)
6afe(5): call 0xffffa822(%rip)
6b03(2): pop %r8
6b05(7): mov 0xfffffbd0(%rbp),%r10
6b0c(2): pop %r9
6b0e(5): jmp 0xfffffd08(%rip)
6b13(5): nop 0x0(%rax,%rax,1)
6b18(4): mov 0x50(%r13),%rax
6b1c(4): lea 0x0(%r15,%r14,1),%rdi
6b20(4): shl/sal $0x5,%rax
6b24(7): add 0xfffffc58(%rbp),%rax
6b2b(5): movzx 0x10(%rax),%r9d
6b30(6): mov 0xfffffc20(%rbp),%eax
6b36(3): cmp $0x1,%eax
6b39(6): jnz 0xfffffdd5(%rip)
6b3f(1): nop 
6b40(6): push 0xfffffc10(%rbp)
6b46(2): push %r9
6b48(7): mov 0xfffffc48(%rbp),%r9d
6b4f(5): jmp 0xfffffdd2(%rip)
6b54(4): nop 0x0(%rax)
6b58(4): mov 0x50(%r13),%rax
6b5c(4): lea 0x0(%r15,%r14,1),%rdi
6b60(4): shl/sal $0x5,%rax
6b64(7): add 0xfffffc58(%rbp),%rax
6b6b(5): movsx 0x10(%rax),%r9d
6b70(6): mov 0xfffffc20(%rbp),%eax
6b76(3): cmp $0x1,%eax
6b79(2): jz 0xffffffc7(%rip)
6b7b(3): cmp $0x2,%eax
6b7e(6): jnz 0xfffffd99(%rip)
6b84(4): nop 0x0(%rax)
6b88(4): sub $0x8,%rsp
6b8c(6): push 0xfffffc10(%rbp)
6b92(2): push %r9
6b94(6): mov 0xfffffc4c(%rbp),%eax
6b9a(1): push %rax
6b9b(7): mov 0xfffffc48(%rbp),%r9d
6ba2(7): mov 0xfffffc28(%rbp),%r8
6ba9(3): mov %r10,%rsi
6bac(7): mov $0xffffffff,%rcx
6bb3(5): mov $0x1,%edx
6bb8(2): xor %eax,%eax
6bba(7): mov %r10,0xfffffbd0(%rbp)
6bc1(5): call 0xffffa75f(%rip)
6bc6(4): add $0x20,%rsp
6bca(7): mov 0xfffffbd0(%rbp),%r10
6bd1(5): jmp 0xfffffc45(%rip)
6bd6(a): nop 0x0(%rax,%rax,1)
6be0(4): mov 0x50(%r13),%rax
6be4(4): lea 0x0(%r15,%r14,1),%rdi
6be8(4): shl/sal $0x5,%rax
6bec(7): add 0xfffffc58(%rbp),%rax
6bf3(5): movzx 0x10(%rax),%r9d
6bf8(6): mov 0xfffffc20(%rbp),%eax
6bfe(3): cmp $0x1,%eax
6c01(6): jnz 0xfffffd0d(%rip)
6c07(5): jmp 0xffffff39(%rip)
6c0c(4): nop 0x0(%rax)
6c10(4): mov 0x50(%r13),%rax
6c14(4): lea 0x0(%r15,%r14,1),%rdi
6c18(4): shl/sal $0x5,%rax
6c1c(7): add 0xfffffc58(%rbp),%rax
6c23(5): movsx 0x10(%rax),%r9d
6c28(6): mov 0xfffffc20(%rbp),%eax
6c2e(3): cmp $0x1,%eax
6c31(6): jnz 0xfffffcdd(%rip)
6c37(5): jmp 0xffffff09(%rip)
6c3c(4): nop 0x0(%rax)
6c40(3): mov %r12,%rdi
6c43(5): call 0xffffa8bd(%rip)
6c48(3): test %rax,%rax
6c4b(3): mov %rax,%rcx
6c4e(6): jz 0xfffff773(%rip)
6c54(3): test %r14,%r14
6c57(6): jz 0xb9(%rip)
6c5d(2): test %bl,%bl
6c5f(6): jz 0xb1(%rip)
6c65(3): mov %r15,%rsi
6c68(3): mov %r14,%rdx
6c6b(3): mov %rax,%rdi
6c6e(5): call 0xffffa862(%rip)
6c73(3): mov %rax,%r15
6c76(5): jmp 0xfffffaea(%rip)
6c7b(5): nop 0x0(%rax,%rax,1)
6c80(4): sub $0x8,%rsp
6c84(6): push 0xfffffc10(%rbp)
6c8a(2): push %r9
6c8c(5): jmp 0xffffff08(%rip)
6c91(7): nop 0x0(%rax)
6c98(6): push 0xfffffc10(%rbp)
6c9e(2): push %r9
6ca0(5): jmp 0xfffffea8(%rip)
6ca5(3): nop (%rax)
6ca8(4): mov $0x0,0x1(%rdi)
6cac(5): jmp 0xfffffab4(%rip)
6cb1(7): nop 0x0(%rax)
6cb8(4): cmp $0xffffffff,%rax
6cbc(6): jnz 0x4ba(%rip)
6cc2(3): mov %r14,%rax
6cc5(4): add $0x1,%rax
6cc9(3): mov %rax,%rbx
6ccc(6): jnb 0x8c(%rip)
6cd2(4): cmp $0xffffffff,%r12
6cd6(6): jnz 0xfffff6df(%rip)
6cdc(3): mov %r12,%rbx
6cdf(5): mov $0x25,0x0(%r15,%r14,1)
6ce4(4): mov 0x8(%r13),%r8
6ce8(4): add $0x58,%r13
6cec(4): mov 0x0(%r13),%rcx
6cf0(8): add $0x1,0xfffffc00(%rbp)
6cf8(3): cmp %r8,%rcx
6cfb(6): jnz 0xfffff69e(%rip)
6d01(3): mov %rbx,%r14
6d04(5): jmp 0xfffff7ff(%rip)
6d09(7): nop 0x0(%rax)
6d10(3): mov %rcx,%r15
6d13(5): jmp 0xfffffa4d(%rip)
6d18(5): call 0xffffa638(%rip)
6d1d(7): mov %rax,0xfffffc38(%rbp)
6d24(5): jmp 0xfffff6c3(%rip)
6d29(7): nop 0x0(%rax)
6d30(2): mov %edi,%edx
6d32(3): sub $0x12,%edx
6d35(3): cmp $0x4,%edx
6d38(6): jnbe 0x43e(%rip)
6d3e(7): lea 0x2f13(%rip),%rdi
6d45(4): mov 0x10(%rax),%rax
6d49(4): movsxd 0x0(%rdi,%rdx,4),%rdx
6d4d(3): add %rdi,%rdx
6d50(2): jmp %rdx
6d52(6): nop 0x0(%rax,%rax,1)
6d58(3): cmp %rax,%r12
6d5b(2): jnb 0xffffff84(%rip)
6d5d(3): test %r12,%r12
6d60(6): jnz 0x3d0(%rip)
6d66(4): cmp $0xc,%rax
6d6a(6): jnbe 0x3d8(%rip)
6d70(6): mov $0xc,%r12d
6d76(7): cmp 0xfffffc18(%rbp),%r15
6d7d(3): setz %dl
6d80(3): test %r15,%r15
6d83(6): jz 0x26d(%rip)
6d89(2): test %dl,%dl
6d8b(6): jnz 0x265(%rip)
6d91(3): mov %r12,%rsi
6d94(3): mov %r15,%rdi
6d97(5): call 0xffffa7b9(%rip)
6d9c(3): test %rax,%rax
6d9f(6): jz 0xfc(%rip)
6da5(3): mov %rax,%r15
6da8(5): jmp 0xffffff37(%rip)
6dad(3): nop (%rax)
6db0(a): mov $0x0,0xfffffc20(%rbp)
6dba(5): jmp 0xfffff8ed(%rip)
6dbf(1): nop 
6dc0(6): js 0xfffff5f5(%rip)
6dc6(3): add %r12,%r12
6dc9(3): cmp %rax,%r12
6dcc(6): jnb 0xfffff6da(%rip)
6dd2(4): cmp $0xffffffff,%rax
6dd6(6): jz 0xfffff5df(%rip)
6ddc(7): cmp 0xfffffc18(%rbp),%r15
6de3(3): mov %rax,%r12
6de6(3): setz %dl
6de9(3): test %r15,%r15
6dec(6): jnz 0xfffff6cd(%rip)
6df2(6): nop 0x0(%rax,%rax,1)
6df8(3): mov %r12,%rdi
6dfb(7): mov %r8,0xfffffc20(%rbp)
6e02(6): mov %dl,0xfffffc30(%rbp)
6e08(7): mov %rcx,0xfffffc38(%rbp)
6e0f(5): call 0xffffa6f1(%rip)
6e14(3): test %rax,%rax
6e17(3): mov %rax,%r9
6e1a(7): mov 0xfffffc38(%rbp),%rcx
6e21(7): movzx 0xfffffc30(%rbp),%edx
6e28(7): mov 0xfffffc20(%rbp),%r8
6e2f(6): jz 0xfffff586(%rip)
6e35(3): test %rbx,%rbx
6e38(6): jz 0x208(%rip)
6e3e(2): test %dl,%dl
6e40(6): jz 0x200(%rip)
6e46(3): mov %r15,%rsi
6e49(3): mov %rbx,%rdx
6e4c(3): mov %rax,%rdi
6e4f(7): mov %r8,0xfffffc30(%rbp)
6e56(7): mov %rcx,0xfffffc38(%rbp)
6e5d(5): call 0xffffa673(%rip)
6e62(7): mov 0xfffffc38(%rbp),%rcx
6e69(3): mov %rax,%r15
6e6c(7): mov 0xfffffc30(%rbp),%r8
6e73(5): jmp 0xfffff681(%rip)
6e78(8): nop 0x0(%rax,%rax,1)
6e80(3): mov %r12,%r14
6e83(5): jmp 0xfffff671(%rip)
6e88(8): nop 0x0(%rax,%rax,1)
6e90(3): mov %r14,(%rax)
6e93(3): mov %r14,%rbx
6e96(5): jmp 0xfffffe4e(%rip)
6e9b(5): call 0xffffa4b5(%rip)
6ea0(7): mov %rax,0xfffffc38(%rbp)
6ea7(9): nop 0x0(%rax,%rax,1)
6eb0(3): mov %r15,%rdi
6eb3(5): call 0xffffa47d(%rip)
6eb8(5): jmp 0xfffff51b(%rip)
6ebd(3): nop (%rax)
6ec0(7): mov 0xfffffc10(%rbp),%r9
6ec7(7): mov 0xfffffc28(%rbp),%r8
6ece(3): mov %r10,%rsi
6ed1(7): mov $0xffffffff,%rcx
6ed8(5): mov $0x1,%edx
6edd(5): mov $0x1,%eax
6ee2(7): mov %r10,0xfffffbd0(%rbp)
6ee9(5): call 0xffffa437(%rip)
6eee(7): mov 0xfffffbd0(%rbp),%r10
6ef5(5): jmp 0xfffff921(%rip)
6efa(6): nop 0x0(%rax,%rax,1)
6f00(4): sub $0x10,%rsp
6f04(7): mov 0xfffffc10(%rbp),%r9
6f0b(3): fstp %st0,(%rsp)
6f0e(5): jmp 0xfffff8db(%rip)
6f13(5): nop 0x0(%rax,%rax,1)
6f18(6): js 0xfffff49d(%rip)
6f1e(3): add %r12,%r12
6f21(3): cmp %rax,%r12
6f24(6): jnb 0xfffff7e5(%rip)
6f2a(6): nop 0x0(%rax,%rax,1)
6f30(3): test %rdx,%rdx
6f33(6): jnz 0xfffff482(%rip)
6f39(4): cmp $0xffffffff,%rax
6f3d(6): jz 0xfffff478(%rip)
6f43(7): cmp 0xfffffc18(%rbp),%r15
6f4a(3): mov %rax,%r12
6f4d(3): setz %dl
6f50(3): test %r15,%r15
6f53(6): jnz 0xfffff7c9(%rip)
6f59(7): nop 0x0(%rax)
6f60(3): mov %r12,%rdi
6f63(6): mov %dl,0xfffffc38(%rbp)
6f69(5): call 0xffffa597(%rip)
6f6e(3): test %rax,%rax
6f71(3): mov %rax,%rcx
6f74(7): movzx 0xfffffc38(%rbp),%edx
6f7b(6): jz 0xfffff43a(%rip)
6f81(3): test %r14,%r14
6f84(6): jz 0x19c(%rip)
6f8a(2): test %dl,%dl
6f8c(6): jz 0x194(%rip)
6f92(3): mov %r15,%rsi
6f95(3): mov %r14,%rdx
6f98(3): mov %rax,%rdi
6f9b(5): call 0xffffa535(%rip)
6fa0(3): mov %rax,%r15
6fa3(5): jmp 0xfffff798(%rip)
6fa8(8): nop 0x0(%rax,%rax,1)
6fb0(3): mov $0x4c,(%rbx)
6fb3(4): add $0x1,%rbx
6fb7(5): jmp 0xfffff6b4(%rip)
6fbc(4): nop 0x0(%rax)
6fc0(3): mov %r14b,(%rax)
6fc3(3): mov %r14,%rbx
6fc6(5): jmp 0xfffffd1e(%rip)
6fcb(5): nop 0x0(%rax,%rax,1)
6fd0(3): mov %r14d,(%rax)
6fd3(3): mov %r14,%rbx
6fd6(5): jmp 0xfffffd0e(%rip)
6fdb(5): nop 0x0(%rax,%rax,1)
6fe0(4): mov %r14w,(%rax)
6fe4(3): mov %r14,%rbx
6fe7(5): jmp 0xfffffcfd(%rip)
6fec(4): nop 0x0(%rax)
6ff0(3): mov %r12,%rdi
6ff3(6): mov %dl,0xfffffc38(%rbp)
6ff9(5): call 0xffffa507(%rip)
6ffe(3): test %rax,%rax
7001(3): mov %rax,%rcx
7004(7): movzx 0xfffffc38(%rbp),%edx
700b(6): jz 0xfffff3aa(%rip)
7011(3): test %r14,%r14
7014(6): jz 0x140(%rip)
701a(2): test %dl,%dl
701c(6): jz 0x138(%rip)
7022(3): mov %r15,%rsi
7025(3): mov %r14,%rdx
7028(3): mov %rax,%rdi
702b(5): call 0xffffa4a5(%rip)
7030(3): mov %rax,%r15
7033(5): jmp 0xfffffcac(%rip)
7038(8): nop 0x0(%rax,%rax,1)
7040(3): mov %r9,%r15
7043(5): jmp 0xfffff4b1(%rip)
7048(8): nop 0x0(%rax,%rax,1)
7050(4): sub $0x8,%rsp
7054(6): push 0xfffffc10(%rbp)
705a(5): jmp 0xfffffa7b(%rip)
705f(1): nop 
7060(4): sub $0x8,%rsp
7064(6): push 0xfffffc10(%rbp)
706a(4): sub $0x10,%rsp
706e(3): fstp %st0,(%rsp)
7071(5): jmp 0xfffffb2a(%rip)
7076(a): nop 0x0(%rax,%rax,1)
7080(7): mov 0xfffffc38(%rbp),%rax
7087(6): mov 0xfffffbdc(%rbp),%edi
708d(3): movsxd %ecx,%rbx
7090(3): add %r14,%rbx
7093(2): mov %edi,(%rax)
7095(5): jmp 0xfffffc4f(%rip)
709a(6): nop 0x0(%rax,%rax,1)
70a0(7): cmp 0xfffffc18(%rbp),%r15
70a7(2): jz 0xb(%rip)
70a9(3): test %r15,%r15
70ac(6): jnz 0xbd(%rip)
70b2(7): mov 0xfffffbe0(%rbp),%rax
70b9(3): test %rax,%rax
70bc(2): jz 0xa(%rip)
70be(3): mov %rax,%rdi
70c1(5): call 0xffffa26f(%rip)
70c6(7): mov 0xfffffbf8(%rbp),%rax
70cd(7): mov 0xfffffd48(%rbp),%rdi
70d4(4): add $0x20,%rax
70d8(3): cmp %rax,%rdi
70db(2): jz 0x7(%rip)
70dd(5): call 0xffffa253(%rip)
70e2(7): mov 0xfffffbf0(%rbp),%rax
70e9(7): mov 0xfffffc58(%rbp),%rdi
70f0(4): add $0x10,%rax
70f4(3): cmp %rax,%rdi
70f7(2): jz 0x7(%rip)
70f9(5): call 0xffffa237(%rip)
70fe(7): mov 0xfffffc38(%rbp),%rax
7105(3): xor %r15d,%r15d
7108(6): mov $0x4b,(%rax)
710e(5): jmp 0xfffff321(%rip)
7113(5): nop 0x0(%rax,%rax,1)
7118(3): xor %r15d,%r15d
711b(5): jmp 0xfffff314(%rip)
7120(3): mov %rcx,%r15
7123(5): jmp 0xfffff618(%rip)
7128(8): nop 0x0(%rax,%rax,1)
7130(6): js 0xfffff285(%rip)
7136(3): add %r12,%r12
7139(3): cmp %rax,%r12
713c(6): jnb 0xfffffc3a(%rip)
7142(4): cmp $0xffffffff,%rax
7146(6): jz 0xfffff26f(%rip)
714c(3): mov %rax,%r12
714f(5): jmp 0xfffffc27(%rip)
7154(3): mov %rcx,%r15
7157(5): jmp 0xfffffb88(%rip)
715c(3): mov %r15,%rdi
715f(5): call 0xffffa1d1(%rip)
7164(5): jmp 0xfffff84e(%rip)
7169(3): mov %r15,%rdi
716c(5): call 0xffffa1c4(%rip)
7171(5): jmp 0xffffff41(%rip)
7176(5): call 0xffffa1ca(%rip)
717b(5): nop 0x0(%rax,%rax,1)
7180(7): mov 0xfffffbf8(%rbp),%rax
7187(7): mov 0xfffffd48(%rbp),%rdi
718e(4): add $0x20,%rax
7192(3): cmp %rax,%rdi
7195(2): jz 0x7(%rip)
7197(5): call 0xffffa199(%rip)
719c(7): mov 0xfffffbf0(%rbp),%rax
71a3(7): mov 0xfffffc58(%rbp),%rdi
71aa(4): add $0x10,%rax
71ae(3): cmp %rax,%rdi
71b1(2): jz 0x7(%rip)
71b3(5): call 0xffffa17d(%rip)
71b8(5): call 0xffffa198(%rip)
71bd(3): xor %r15d,%r15d
71c0(6): mov $0x16,(%rax)
71c6(5): jmp 0xfffff269(%rip)
71cb(3): mov %r14,%rbx
71ce(2): xor %eax,%eax
71d0(4): add $0x1,%rbx
71d4(6): jb 0x10c(%rip)
71da(3): cmp %rbx,%r12
71dd(2): jnb 0x4f(%rip)
71df(3): test %r12,%r12
71e2(6): jnz 0x137(%rip)
71e8(4): cmp $0xc,%rbx
71ec(6): jnbe 0x112(%rip)
71f2(6): mov $0xc,%r12d
71f8(7): cmp 0xfffffc18(%rbp),%r15
71ff(4): setz %r13b
7203(3): test %r15,%r15
7206(6): jz 0xa6(%rip)
720c(3): test %r13b,%r13b
720f(6): jnz 0x9d(%rip)
7215(3): mov %r12,%rsi
7218(3): mov %r15,%rdi
721b(5): call 0xffffa335(%rip)
7220(3): test %rax,%rax
7223(6): jz 0xfffffc78(%rip)
7229(3): mov %rax,%r15
722c(7): cmp 0xfffffc18(%rbp),%r15
7233(5): mov $0x0,0x0(%r15,%r14,1)
7238(2): jz 0x19(%rip)
723a(3): cmp %rbx,%r12
723d(2): jbe 0x14(%rip)
723f(3): mov %r15,%rdi
7242(3): mov %rbx,%rsi
7245(5): call 0xffffa30b(%rip)
724a(3): test %rax,%rax
724d(4): cmovne %rax,%r15
7251(7): mov 0xfffffbe0(%rbp),%rax
7258(3): test %rax,%rax
725b(2): jz 0xa(%rip)
725d(3): mov %rax,%rdi
7260(5): call 0xffffa0d0(%rip)
7265(7): mov 0xfffffbf8(%rbp),%rax
726c(7): mov 0xfffffd48(%rbp),%rdi
7273(4): add $0x20,%rax
7277(3): cmp %rax,%rdi
727a(2): jz 0x7(%rip)
727c(5): call 0xffffa0b4(%rip)
7281(7): mov 0xfffffbf0(%rbp),%rax
7288(7): mov 0xfffffc58(%rbp),%rdi
728f(4): add $0x10,%rax
7293(3): cmp %rax,%rdi
7296(2): jz 0x7(%rip)
7298(5): call 0xffffa098(%rip)
729d(7): mov 0xfffffbe8(%rbp),%rax
72a4(3): mov %r14,(%rax)
72a7(5): jmp 0xfffff188(%rip)
72ac(3): mov %r12,%rdi
72af(5): call 0xffffa251(%rip)
72b4(3): test %rax,%rax
72b7(3): mov %rax,%rcx
72ba(6): jz 0xfffff0fb(%rip)
72c0(3): test %r14,%r14
72c3(2): jz 0x6d(%rip)
72c5(3): test %r13b,%r13b
72c8(2): jz 0x68(%rip)
72ca(3): mov %r15,%rsi
72cd(3): mov %r14,%rdx
72d0(3): mov %rax,%rdi
72d3(5): call 0xffffa1fd(%rip)
72d8(3): mov %rax,%r15
72db(5): jmp 0xffffff51(%rip)
72e0(4): cmp $0xffffffff,%r12
72e4(5): mov $0x1,%eax
72e9(6): jz 0xffffff43(%rip)
72ef(3): test %r12,%r12
72f2(6): jz 0xfffff0c3(%rip)
72f8(6): js 0xfffff0bd(%rip)
72fe(3): test %rax,%rax
7301(6): jnz 0xfffff0b4(%rip)
7307(4): cmp $0xffffffff,%rbx
730b(6): jz 0xfffff0aa(%rip)
7311(3): mov %rbx,%r12
7314(5): jmp 0xfffffee4(%rip)
7319(6): js 0xfffff09c(%rip)
731f(3): add %r12,%r12
7322(3): cmp %rbx,%r12
7325(6): jnb 0xfffffed3(%rip)
732b(2): jmp 0xffffffd3(%rip)
732d(3): nop (%rax)
7330(3): mov %rcx,%r15
7333(5): jmp 0xfffffef9(%rip)
7338(4): cmp $0xffffffff,%r12
733c(6): jz 0xfffff424(%rip)
7342(5): jmp 0xfffff07f(%rip)
7347(5): call 0xffffa0d9(%rip)
734c(4): cmp $0xffffffff,%r12
7350(5): mov $0x1,%edx
7355(6): jz 0xfffff3e6(%rip)
735b(3): test %r12,%r12
735e(6): jz 0xfffff057(%rip)
7364(6): jns 0xfffffbcc(%rip)
736a(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
7370(4): cmp $0x0,(%rsi)
7374(4): mov 0x8(%rsi),%rax
7378(2): jz 0x65(%rip)
737a(7): lea 0x28ff(%rip),%r8
7381(7): lea 0x2958(%rip),%r10
7388(7): lea 0x28dd(%rip),%r9
738f(2): xor %ecx,%ecx
7391(7): nop 0x0(%rax)
7398(3): cmp $0x16,(%rax)
739b(2): jnbe 0x45(%rip)
739d(2): mov (%rax),%edx
739f(4): movsxd 0x0(%r8,%rdx,4),%rdx
73a3(3): add %r8,%rdx
73a6(2): jmp %rdx
73a8(8): nop 0x0(%rax,%rax,1)
73b0(4): mov 0x8(%rdi),%rdx
73b4(4): add $0xf,%rdx
73b8(4): and $0xfffffff0,%rdx
73bc(4): lea 0x10(%rdx),%r11
73c0(4): mov %r11,0x8(%rdi)
73c4(2): fld (%rdx),%st0
73c6(3): fstp %st0,0x10(%rax)
73c9(7): nop 0x0(%rax)
73d0(4): add $0x1,%rcx
73d4(4): add $0x20,%rax
73d8(3): cmp %rcx,(%rsi)
73db(2): jnbe 0xffffffbd(%rip)
73dd(2): xor %eax,%eax
73df(1): ret near (%rsp)
73e0(5): mov $0xffffffff,%eax
73e5(1): ret near (%rsp)
73e6(3): mov (%rdi),%r11d
73e9(4): cmp $0x2f,%r11d
73ed(6): jnbe 0x13d(%rip)
73f3(3): mov %r11d,%edx
73f6(4): add 0x10(%rdi),%rdx
73fa(4): add $0x8,%r11d
73fe(3): mov %r11d,(%rdi)
7401(3): mov (%rdx),%rdx
7404(4): mov %rdx,0x10(%rax)
7408(2): jmp 0xffffffc8(%rip)
740a(3): mov (%rdi),%r11d
740d(4): cmp $0x2f,%r11d
7411(6): jnbe 0x13b(%rip)
7417(3): mov %r11d,%edx
741a(4): add 0x10(%rdi),%rdx
741e(4): add $0x8,%r11d
7422(3): mov %r11d,(%rdi)
7425(2): mov (%rdx),%edx
7427(3): mov %edx,0x10(%rax)
742a(2): jmp 0xffffffa6(%rip)
742c(3): mov (%rdi),%r11d
742f(4): cmp $0x2f,%r11d
7433(6): jnbe 0x108(%rip)
7439(3): mov %r11d,%edx
743c(4): add 0x10(%rdi),%rdx
7440(4): add $0x8,%r11d
7444(3): mov %r11d,(%rdi)
7447(2): mov (%rdx),%edx
7449(3): mov %dl,0x10(%rax)
744c(2): jmp 0xffffff84(%rip)
744e(3): mov (%rdi),%r11d
7451(4): cmp $0x2f,%r11d
7455(6): jnbe 0xa5(%rip)
745b(3): mov %r11d,%edx
745e(4): add 0x10(%rdi),%rdx
7462(4): add $0x8,%r11d
7466(3): mov %r11d,(%rdi)
7469(2): mov (%rdx),%edx
746b(4): mov %dx,0x10(%rax)
746f(5): jmp 0xffffff61(%rip)
7474(3): mov (%rdi),%r11d
7477(4): cmp $0x2f,%r11d
747b(6): jnbe 0x90(%rip)
7481(3): mov %r11d,%edx
7484(4): add 0x10(%rdi),%rdx
7488(4): add $0x8,%r11d
748c(3): mov %r11d,(%rdi)
748f(3): mov (%rdx),%rdx
7492(3): test %rdx,%rdx
7495(4): cmove %r9,%rdx
7499(4): mov %rdx,0x10(%rax)
749d(5): jmp 0xffffff33(%rip)
74a2(4): mov 0x4(%rdi),%r11d
74a6(7): cmp $0xaf,%r11d
74ad(6): jnbe 0xb0(%rip)
74b3(3): mov %r11d,%edx
74b6(4): add 0x10(%rdi),%rdx
74ba(4): add $0x10,%r11d
74be(4): mov %r11d,0x4(%rdi)
74c2(4): movsd (%rdx),%xmm0
74c6(5): movsd %xmm0,0x10(%rax)
74cb(5): jmp 0xffffff05(%rip)
74d0(3): mov (%rdi),%r11d
74d3(4): cmp $0x2f,%r11d
74d7(2): jnbe 0x45(%rip)
74d9(3): mov %r11d,%edx
74dc(4): add 0x10(%rdi),%rdx
74e0(4): add $0x8,%r11d
74e4(3): mov %r11d,(%rdi)
74e7(3): mov (%rdx),%rdx
74ea(3): test %rdx,%rdx
74ed(4): cmove %r10,%rdx
74f1(4): mov %rdx,0x10(%rax)
74f5(5): jmp 0xfffffedb(%rip)
74fa(4): mov 0x8(%rdi),%rdx
74fe(4): lea 0x8(%rdx),%r11
7502(4): mov %r11,0x8(%rdi)
7506(5): jmp 0xffffff63(%rip)
750b(4): mov 0x8(%rdi),%rdx
750f(4): lea 0x8(%rdx),%r11
7513(4): mov %r11,0x8(%rdi)
7517(5): jmp 0xffffff78(%rip)
751c(4): mov 0x8(%rdi),%rdx
7520(4): lea 0x8(%rdx),%r11
7524(4): mov %r11,0x8(%rdi)
7528(2): jmp 0xffffffbf(%rip)
752a(4): mov 0x8(%rdi),%rdx
752e(4): lea 0x8(%rdx),%r11
7532(4): mov %r11,0x8(%rdi)
7536(5): jmp 0xfffffecb(%rip)
753b(4): mov 0x8(%rdi),%rdx
753f(4): lea 0x8(%rdx),%r11
7543(4): mov %r11,0x8(%rdi)
7547(5): jmp 0xffffff00(%rip)
754c(4): mov 0x8(%rdi),%rdx
7550(4): lea 0x8(%rdx),%r11
7554(4): mov %r11,0x8(%rdi)
7558(5): jmp 0xfffffecd(%rip)
755d(4): mov 0x8(%rdi),%rdx
7561(4): lea 0x8(%rdx),%r11
7565(4): mov %r11,0x8(%rdi)
7569(5): jmp 0xffffff59(%rip)

"printf_parse" :
7570(2): push %r15
7572(2): push %r14
7574(4): lea 0x20(%rsi),%rcx
7578(2): push %r13
757a(2): push %r12
757c(4): lea 0x10(%rdx),%rax
7580(1): push %rbp
7581(1): push %rbx
7582(3): mov %rsi,%r14
7585(3): mov %rdx,%r15
7588(2): xor %ebx,%ebx
758a(6): mov $0x7,%r9d
7590(4): sub $0x58,%rsp
7594(6): mov $0x7,%r10d
759a(7): mov $0x0,(%rsi)
75a1(4): mov %rcx,0x8(%rsi)
75a5(5): mov %rcx,0x28(%rsp)
75aa(7): mov $0xffffffff,%r8
75b1(7): mov $0x0,(%rdx)
75b8(5): mov %rax,0x8(%rsp)
75bd(4): mov %rax,0x8(%rdx)
75c1(9): mov $0x0,0x18(%rsp)
75ca(9): mov $0x0,0x10(%rsp)
75d3(9): mov $0x0,0x20(%rsp)
75dc(2): jmp 0xf(%rip)
75de(2): nop 
75e0(2): cmp $0x25,%al
75e2(4): lea 0x1(%rdi),%rbp
75e6(2): jz 0x42(%rip)
75e8(3): mov %rbp,%rdi
75eb(3): movzx (%rdi),%eax
75ee(2): test %al,%al
75f0(2): jnz 0xfffffff0(%rip)
75f2(4): lea 0x0(%rbx,%rbx,4),%rax
75f6(4): lea 0x0(%rbx,%rax,2),%rax
75fa(4): mov %rdi,0x0(%rcx,%rax,8)
75fe(5): mov 0x10(%rsp),%rax
7603(4): mov %rax,0x10(%r14)
7607(5): mov 0x18(%rsp),%rax
760c(4): mov %rax,0x18(%r14)
7610(2): xor %eax,%eax
7612(4): add $0x58,%rsp
7616(1): pop %rbx
7617(1): pop %rbp
7618(2): pop %r12
761a(2): pop %r13
761c(2): pop %r14
761e(2): pop %r15
7620(1): ret near (%rsp)
7621(7): nop 0x0(%rax)
7628(4): lea 0x0(%rbx,%rbx,4),%rax
762c(3): mov %r8,%r13
762f(4): lea 0x0(%rbx,%rax,2),%rax
7633(4): lea 0x0(%rcx,%rax,8),%r12
7637(4): mov %rdi,(%r12)
763b(9): mov $0x0,0x10(%r12)
7644(9): mov $0x0,0x18(%r12)
764d(9): mov $0x0,0x20(%r12)
7656(5): mov %r8,0x28(%r12)
765b(9): mov $0x0,0x30(%r12)
7664(9): mov $0x0,0x38(%r12)
766d(5): mov %r8,0x40(%r12)
7672(5): mov %r8,0x50(%r12)
7677(4): movzx 0x1(%rdi),%ebx
767b(3): lea 0xffffffd0(%rbx),%eax
767e(2): cmp $0x9,%al
7680(2): jnbe 0x3e(%rip)
7682(5): jmp 0x438(%rip)
7687(9): nop 0x0(%rax,%rax,1)
7690(3): cmp $0x2d,%bl
7693(2): jz 0x45(%rip)
7695(3): cmp $0x2b,%bl
7698(2): jz 0x48(%rip)
769a(3): cmp $0x20,%bl
769d(2): jz 0x53(%rip)
769f(3): cmp $0x23,%bl
76a2(2): jz 0x5e(%rip)
76a4(3): cmp $0x30,%bl
76a7(2): jz 0x69(%rip)
76a9(3): cmp $0x49,%bl
76ac(2): jnz 0x74(%rip)
76ae(6): or $0x40,0x10(%r12)
76b4(4): nop 0x0(%rax)
76b8(3): movzx (%rax),%ebx
76bb(3): mov %rax,%rbp
76be(4): lea 0x1(%rbp),%rax
76c2(3): cmp $0x27,%bl
76c5(3): mov %rax,%rdx
76c8(2): jnz 0xffffffc8(%rip)
76ca(6): or $0x1,0x10(%r12)
76d0(2): jmp 0xffffffe8(%rip)
76d2(6): nop 0x0(%rax,%rax,1)
76d8(6): or $0x2,0x10(%r12)
76de(2): jmp 0xffffffda(%rip)
76e0(6): or $0x4,0x10(%r12)
76e6(2): jmp 0xffffffd2(%rip)
76e8(8): nop 0x0(%rax,%rax,1)
76f0(6): or $0x8,0x10(%r12)
76f6(2): jmp 0xffffffc2(%rip)
76f8(8): nop 0x0(%rax,%rax,1)
7700(6): or $0x10,0x10(%r12)
7706(2): jmp 0xffffffb2(%rip)
7708(8): nop 0x0(%rax,%rax,1)
7710(6): or $0x20,0x10(%r12)
7716(2): jmp 0xffffffa2(%rip)
7718(8): nop 0x0(%rax,%rax,1)
7720(3): cmp $0x2a,%bl
7723(6): jz 0x1b6(%rip)
7729(3): lea 0xffffffd0(%rbx),%ecx
772c(3): cmp $0x9,%cl
772f(6): jbe 0x418(%rip)
7735(3): cmp $0x2e,%bl
7738(6): jz 0x2d7(%rip)
773e(2): xor %eax,%eax
7740(5): mov $0x1,%esi
7745(2): jmp 0x32(%rip)
7747(9): nop 0x0(%rax,%rax,1)
7750(3): cmp $0x4c,%bl
7753(2): jz 0x3d(%rip)
7755(3): cmp $0x6c,%bl
7758(2): jz 0x18(%rip)
775a(3): cmp $0x6a,%bl
775d(2): jz 0x13(%rip)
775f(2): mov %ebx,%edx
7761(3): and $0xdf,%edx
7764(3): cmp $0x5a,%dl
7767(2): jz 0x9(%rip)
7769(3): cmp $0x74,%bl
776c(2): jnz 0x2c(%rip)
776e(2): nop 
7770(3): add $0x8,%eax
7773(4): movzx 0x0(%rbp),%ebx
7777(4): add $0x1,%rbp
777b(3): cmp $0x68,%bl
777e(2): jnz 0xffffffd2(%rip)
7780(2): mov %eax,%ecx
7782(2): mov %esi,%edx
7784(3): and $0x1,%ecx
7787(2): shl/sal %cl,%edx
7789(2): or %edx,%eax
778b(2): jmp 0xffffffe8(%rip)
778d(3): nop (%rax)
7790(3): or $0x4,%eax
7793(2): jmp 0xffffffe0(%rip)
7795(3): nop (%rax)
7798(3): lea 0xffffffdb(%rbx),%edx
779b(3): cmp $0x53,%dl
779e(6): jnbe 0x61d(%rip)
77a4(7): lea 0x2551(%rip),%rcx
77ab(3): movzx %dl,%edx
77ae(4): movsxd 0x0(%rcx,%rdx,4),%rdx
77b2(3): add %rcx,%rdx
77b5(2): jmp %rdx
77b7(6): mov $0x10,%r11d
77bd(5): mov $0x73,%ebx
77c2(6): nop 0x0(%rax,%rax,1)
77c8(4): cmp $0xffffffff,%r13
77cc(6): jz 0x6bb(%rip)
77d2(5): mov %r13,0x50(%r12)
77d7(3): cmp %r13,%r9
77da(4): mov 0x8(%r15),%rcx
77de(6): jbe 0x622(%rip)
77e4(3): mov (%r15),%rax
77e7(3): mov %rax,%rdx
77ea(4): shl/sal $0x5,%rdx
77ee(3): add %rcx,%rdx
77f1(3): cmp %r13,%rax
77f4(2): jnbe 0x22(%rip)
77f6(a): nop 0x0(%rax,%rax,1)
7800(4): add $0x1,%rax
7804(6): mov $0x0,(%rdx)
780a(4): add $0x20,%rdx
780e(3): cmp %r13,%rax
7811(2): jbe 0xffffffef(%rip)
7813(3): mov %rax,(%r15)
7816(4): shl/sal $0x5,%r13
781a(4): lea 0x0(%rcx,%r13,1),%rax
781e(2): mov (%rax),%edx
7820(2): test %edx,%edx
7822(6): jnz 0x5d1(%rip)
7828(3): mov %r11d,(%rax)
782b(5): mov %bl,0x48(%r12)
7830(3): mov (%r14),%rax
7833(5): mov %rbp,0x8(%r12)
7838(4): lea 0x1(%rax),%rbx
783c(3): cmp %rbx,%r10
783f(3): mov %rbx,(%r14)
7842(6): jnbe 0x8e(%rip)
7848(3): test %r10,%r10
784b(6): js 0x9ac(%rip)
7851(3): add %r10,%r10
7854(a): mov $0x209622091746699450,%rax
785e(3): cmp %rax,%r10
7861(6): jnbe 0x996(%rip)
7867(4): lea 0x0(%r10,%r10,4),%rax
786b(4): mov 0x8(%r14),%rdi
786f(5): cmp %rdi,0x28(%rsp)
7874(5): mov %r9,0x40(%rsp)
7879(5): mov %r10,0x38(%rsp)
787e(4): lea 0x0(%r10,%rax,2),%rax
7882(5): mov %r8,0x30(%rsp)
7887(8): lea 0x0(,%rax,8),%rsi
788f(6): jz 0x6be(%rip)
7895(5): call 0xffff9cbb(%rip)
789a(3): test %rax,%rax
789d(3): mov %rax,%rcx
78a0(5): mov 0x30(%rsp),%r8
78a5(5): mov 0x38(%rsp),%r10
78aa(5): mov 0x40(%rsp),%r9
78af(6): jz 0x948(%rip)
78b5(5): mov 0x28(%rsp),%rax
78ba(4): cmp 0x8(%r14),%rax
78be(3): mov (%r14),%rbx
78c1(6): jz 0x6af(%rip)
78c7(4): mov %rcx,0x8(%r14)
78cb(5): jmp 0xfffffd1d(%rip)
78d0(4): mov 0x8(%r14),%rcx
78d4(5): jmp 0xfffffd14(%rip)
78d9(5): mov 0x10(%rsp),%rsi
78de(5): mov $0x1,%ecx
78e3(5): mov %rbp,0x18(%r12)
78e8(5): mov %rax,0x20(%r12)
78ed(3): test %rsi,%rsi
78f0(4): cmovne %rsi,%rcx
78f4(5): mov %rcx,0x10(%rsp)
78f9(4): movzx 0x1(%rbp),%ecx
78fd(3): lea 0xffffffd0(%rcx),%esi
7900(4): cmp $0x9,%sil
7904(6): jbe 0x2e1(%rip)
790a(5): mov 0x20(%rsp),%rsi
790f(4): cmp $0xffffffff,%rsi
7913(4): lea 0x1(%rsi),%rdx
7917(5): mov %rsi,0x28(%r12)
791c(6): jz 0x49f(%rip)
7922(5): mov 0x20(%rsp),%rbx
7927(3): mov %rax,%rbp
792a(5): mov %rdx,0x20(%rsp)
792f(3): cmp %rbx,%r9
7932(4): mov 0x8(%r15),%rcx
7936(6): jnbe 0x67c(%rip)
793c(3): add %r9,%r9
793f(4): lea 0x1(%rbx),%rax
7943(3): cmp %rbx,%r9
7946(4): cmovbe %rax,%r9
794a(a): mov $0x576460752303423487,%rax
7954(3): cmp %rax,%r9
7957(6): jnbe 0x8a4(%rip)
795d(3): mov %r9,%rsi
7960(5): mov %r9,0x40(%rsp)
7965(5): mov %r10,0x38(%rsp)
796a(4): shl/sal $0x5,%rsi
796e(5): cmp %rcx,0x8(%rsp)
7973(5): mov %r8,0x30(%rsp)
7978(6): jz 0x719(%rip)
797e(3): mov %rcx,%rdi
7981(5): call 0xffff9bcf(%rip)
7986(4): mov 0x8(%r15),%rdx
798a(5): mov 0x30(%rsp),%r8
798f(3): mov %rax,%rcx
7992(5): mov 0x38(%rsp),%r10
7997(5): mov 0x40(%rsp),%r9
799c(3): test %rcx,%rcx
799f(6): jz 0x8b8(%rip)
79a5(5): cmp %rdx,0x8(%rsp)
79aa(3): mov (%r15),%rax
79ad(6): jz 0x7be(%rip)
79b3(4): mov %rcx,0x8(%r15)
79b7(3): mov %rax,%rdx
79ba(4): shl/sal $0x5,%rdx
79be(3): add %rcx,%rdx
79c1(3): cmp %rbx,%rax
79c4(2): jnbe 0x22(%rip)
79c6(a): nop 0x0(%rax,%rax,1)
79d0(4): add $0x1,%rax
79d4(6): mov $0x0,(%rdx)
79da(4): add $0x20,%rdx
79de(3): cmp %rbx,%rax
79e1(2): jbe 0xffffffef(%rip)
79e3(3): mov %rax,(%r15)
79e6(4): shl/sal $0x5,%rbx
79ea(4): lea 0x0(%rcx,%rbx,1),%rax
79ee(2): mov (%rax),%edx
79f0(2): test %edx,%edx
79f2(6): jnz 0x4d9(%rip)
79f8(6): mov $0x5,(%rax)
79fe(4): movzx 0x0(%rbp),%ebx
7a02(4): lea 0x1(%rbp),%rdx
7a06(3): cmp $0x2e,%bl
7a09(6): jnz 0xfffffd35(%rip)
7a0f(4): cmp $0x2a,0x1(%rbp)
7a13(5): mov %rbp,0x30(%r12)
7a18(6): jnz 0x186(%rip)
7a1e(5): mov 0x18(%rsp),%rsi
7a23(4): lea 0x2(%rbp),%r11
7a27(5): mov $0x2,%eax
7a2c(5): mov %r11,0x38(%r12)
7a31(4): cmp $0x2,%rsi
7a35(4): cmovnb %rsi,%rax
7a39(5): mov %rax,0x18(%rsp)
7a3e(4): movsx 0x2(%rbp),%eax
7a42(3): lea 0xffffffd0(%rax),%edx
7a45(3): cmp $0x9,%dl
7a48(6): jbe 0x694(%rip)
7a4e(5): mov 0x40(%r12),%rbx
7a53(4): cmp $0xffffffff,%rbx
7a57(6): jz 0x65e(%rip)
7a5d(3): cmp %rbx,%r9
7a60(4): mov 0x8(%r15),%rcx
7a64(6): jbe 0x56b(%rip)
7a6a(3): mov (%r15),%rax
7a6d(3): mov %rax,%rdx
7a70(4): shl/sal $0x5,%rdx
7a74(3): add %rcx,%rdx
7a77(3): cmp %rbx,%rax
7a7a(2): jnbe 0x1c(%rip)
7a7c(4): nop 0x0(%rax)
7a80(4): add $0x1,%rax
7a84(6): mov $0x0,(%rdx)
7a8a(4): add $0x20,%rdx
7a8e(3): cmp %rbx,%rax
7a91(2): jbe 0xffffffef(%rip)
7a93(3): mov %rax,(%r15)
7a96(4): shl/sal $0x5,%rbx
7a9a(4): lea 0x0(%rcx,%rbx,1),%rax
7a9e(2): mov (%rax),%edx
7aa0(2): test %edx,%edx
7aa2(6): jnz 0x518(%rip)
7aa8(6): mov $0x5,(%rax)
7aae(3): mov %r11,%rbp
7ab1(4): movzx (%r11),%ebx
7ab5(5): jmp 0xfffffc89(%rip)
7aba(3): mov %rbp,%rax
7abd(3): nop (%rax)
7ac0(4): add $0x1,%rax
7ac4(3): movzx (%rax),%edx
7ac7(3): lea 0xffffffd0(%rdx),%ecx
7aca(3): cmp $0x9,%cl
7acd(2): jbe 0xfffffff3(%rip)
7acf(3): cmp $0x24,%dl
7ad2(3): mov %r8,%r13
7ad5(6): jnz 0xfffffbe9(%rip)
7adb(2): xor %edx,%edx
7add(3): movsx %bl,%eax
7ae0(a): mov $0x1844674407370955161,%rdi
7aea(3): mov %r8,%rsi
7aed(3): sub $0x30,%eax
7af0(3): cmp %rdi,%rdx
7af3(2): cwde 
7af5(2): jnbe 0x9(%rip)
7af7(4): lea 0x0(%rdx,%rdx,4),%rsi
7afb(3): add %rsi,%rsi
7afe(3): mov %rbp,%rcx
7b01(3): add %rsi,%rax
7b04(4): movzx 0x1(%rbp),%ebx
7b08(4): setb %sil
7b0c(4): add $0x1,%rbp
7b10(3): mov %rax,%rdx
7b13(4): movzx %sil,%esi
7b17(3): test %rsi,%rsi
7b1a(3): lea 0xffffffd0(%rbx),%edi
7b1d(6): jnz 0x391(%rip)
7b23(4): cmp $0x9,%dil
7b27(2): jbe 0xffffffb6(%rip)
7b29(3): mov %rax,%r13
7b2c(4): sub $0x1,%r13
7b30(4): cmp $0xfffffffd,%r13
7b34(6): jnbe 0x287(%rip)
7b3a(4): lea 0x2(%rcx),%rbp
7b3e(4): movzx 0x2(%rcx),%ebx
7b42(5): jmp 0xfffffb7c(%rip)
7b47(5): mov %rbp,0x18(%r12)
7b4c(4): movzx 0x0(%rbp),%edi
7b50(3): mov %rbp,%rsi
7b53(3): lea 0xffffffd0(%rdi),%ecx
7b56(3): cmp $0x9,%cl
7b59(2): jbe 0xe(%rip)
7b5b(2): jmp 0x35(%rip)
7b5d(3): nop (%rax)
7b60(3): mov %rax,%rbp
7b63(4): add $0x1,%rax
7b67(3): movzx (%rax),%edi
7b6a(3): lea 0xffffffd0(%rdi),%edx
7b6d(3): cmp $0x9,%dl
7b70(2): jbe 0xfffffff0(%rip)
7b72(3): mov %rax,%rcx
7b75(4): lea 0x2(%rbp),%rdx
7b79(3): mov %rax,%rbp
7b7c(3): sub %rsi,%rcx
7b7f(5): mov 0x10(%rsp),%rsi
7b84(3): cmp %rcx,%rsi
7b87(4): cmovnb %rsi,%rcx
7b8b(5): mov %rcx,0x10(%rsp)
7b90(5): mov %rbp,0x20(%r12)
7b95(4): movzx 0x0(%rbp),%ebx
7b99(5): jmp 0xfffffb9c(%rip)
7b9e(4): movzx 0x1(%rbp),%eax
7ba2(3): sub $0x30,%eax
7ba5(2): cmp $0x9,%al
7ba7(2): jnbe 0x17(%rip)
7ba9(7): nop 0x0(%rax)
7bb0(4): add $0x1,%rdx
7bb4(3): movzx (%rdx),%eax
7bb7(3): sub $0x30,%eax
7bba(2): cmp $0x9,%al
7bbc(2): jbe 0xfffffff4(%rip)
7bbe(5): mov 0x18(%rsp),%rsi
7bc3(3): mov %rdx,%rax
7bc6(5): mov %rdx,0x38(%r12)
7bcb(3): sub %rbp,%rax
7bce(3): movzx (%rdx),%ebx
7bd1(3): mov %rdx,%rbp
7bd4(3): cmp %rax,%rsi
7bd7(4): cmovnb %rsi,%rax
7bdb(5): mov %rax,0x18(%rsp)
7be0(5): jmp 0xfffffb5e(%rip)
7be5(3): mov %rax,%rsi
7be8(4): add $0x1,%rsi
7bec(3): movzx (%rsi),%edi
7bef(4): lea 0xffffffd0(%rdi),%r11d
7bf3(4): cmp $0x9,%r11b
7bf7(2): jbe 0xfffffff1(%rip)
7bf9(4): cmp $0x24,%dil
7bfd(6): jnz 0xfffffd0d(%rip)
7c03(2): xor %esi,%esi
7c05(3): movsx %cl,%eax
7c08(a): mov $0x1844674407370955161,%rdi
7c12(3): mov %r8,%rcx
7c15(3): sub $0x30,%eax
7c18(3): cmp %rdi,%rsi
7c1b(2): cwde 
7c1d(2): jnbe 0x9(%rip)
7c1f(4): lea 0x0(%rsi,%rsi,4),%rcx
7c23(3): add %rcx,%rcx
7c26(3): mov %rdx,%rbp
7c29(3): xor %r11d,%r11d
7c2c(3): add %rcx,%rax
7c2f(4): movzx 0x1(%rdx),%ecx
7c33(4): setb %r11b
7c37(4): add $0x1,%rdx
7c3b(3): mov %rax,%rsi
7c3e(3): test %r11,%r11
7c41(3): lea 0xffffffd0(%rcx),%edi
7c44(6): jnz 0x50a(%rip)
7c4a(4): cmp $0x9,%dil
7c4e(2): jbe 0xffffffb7(%rip)
7c50(4): lea 0xffffffff(%rax),%rbx
7c54(4): cmp $0xfffffffd,%rbx
7c58(6): jnbe 0x163(%rip)
7c5e(5): mov %rbx,0x28(%r12)
7c63(4): add $0x2,%rbp
7c67(5): jmp 0xfffffcc8(%rip)
7c6c(3): cmp $0xf,%eax
7c6f(6): mov $0x16,%r11d
7c75(6): jnle 0xfffffb53(%rip)
7c7b(2): test $0x4,%al
7c7d(6): jnz 0xfffffb4b(%rip)
7c83(3): cmp $0x7,%eax
7c86(6): mov $0x15,%r11d
7c8c(6): jnle 0xfffffb3c(%rip)
7c92(2): test $0x2,%al
7c94(6): mov $0x12,%r11d
7c9a(6): jnz 0xfffffb2e(%rip)
7ca0(3): xor %r11d,%r11d
7ca3(2): test $0x1,%al
7ca5(4): setz %r11b
7ca9(4): add $0x13,%r11d
7cad(5): jmp 0xfffffb1b(%rip)
7cb2(6): nop 0x0(%rax,%rax,1)
7cb8(3): xor %r11d,%r11d
7cbb(3): cmp $0x7,%eax
7cbe(4): setnle %r11b
7cc2(4): add $0xd,%r11d
7cc6(5): jmp 0xfffffb02(%rip)
7ccb(3): cmp $0xf,%eax
7cce(6): mov $0x9,%r11d
7cd4(6): jnle 0xfffffaf4(%rip)
7cda(2): test $0x4,%al
7cdc(6): jnz 0xfffffaec(%rip)
7ce2(3): cmp $0x7,%eax
7ce5(6): mov $0x7,%r11d
7ceb(6): jnle 0xfffffadd(%rip)
7cf1(2): test $0x2,%al
7cf3(6): mov $0x1,%r11d
7cf9(6): jnz 0xfffffacf(%rip)
7cff(3): and $0x1,%eax
7d02(3): cmp $0x1,%eax
7d05(3): sbb %r11d,%r11d
7d08(4): and $0x2,%r11d
7d0c(4): add $0x3,%r11d
7d10(5): jmp 0xfffffab8(%rip)
7d15(3): nop (%rax)
7d18(3): xor %r11d,%r11d
7d1b(3): cmp $0x7,%eax
7d1e(4): setnle %r11b
7d22(4): add $0xf,%r11d
7d26(5): jmp 0xfffffaa2(%rip)
7d2b(3): cmp $0xf,%eax
7d2e(6): mov $0xc,%r11d
7d34(6): jnle 0xfffffa94(%rip)
7d3a(3): xor %r11d,%r11d
7d3d(2): test $0x4,%al
7d3f(4): setnz %r11b
7d43(4): add $0xb,%r11d
7d47(5): jmp 0xfffffa81(%rip)
7d4c(6): mov $0xe,%r11d
7d52(5): mov $0x63,%ebx
7d57(5): jmp 0xfffffa71(%rip)
7d5c(3): cmp $0xf,%eax
7d5f(6): mov $0xa,%r11d
7d65(6): jnle 0xfffffa63(%rip)
7d6b(2): test $0x4,%al
7d6d(6): jnz 0xfffffa5b(%rip)
7d73(3): cmp $0x7,%eax
7d76(6): mov $0x8,%r11d
7d7c(6): jnle 0xfffffa4c(%rip)
7d82(2): test $0x2,%al
7d84(6): mov $0x2,%r11d
7d8a(6): jnz 0xfffffa3e(%rip)
7d90(3): and $0x1,%eax
7d93(3): cmp $0x1,%eax
7d96(3): sbb %r11d,%r11d
7d99(4): and $0x2,%r11d
7d9d(4): add $0x4,%r11d
7da1(5): jmp 0xfffffa27(%rip)
7da6(a): nop 0x0(%rax,%rax,1)
7db0(6): mov $0x11,%r11d
7db6(5): jmp 0xfffffa12(%rip)
7dbb(4): mov 0x8(%r15),%rcx
7dbf(5): cmp %rcx,0x8(%rsp)
7dc4(2): jz 0xa(%rip)
7dc6(3): mov %rcx,%rdi
7dc9(5): call 0xffff9567(%rip)
7dce(4): mov 0x8(%r14),%rdi
7dd2(5): cmp %rdi,0x28(%rsp)
7dd7(2): jz 0x7(%rip)
7dd9(5): call 0xffff9557(%rip)
7dde(5): call 0xffff9572(%rip)
7de3(6): mov $0x16,(%rax)
7de9(5): mov $0xffffffff,%eax
7dee(5): jmp 0xfffff824(%rip)
7df3(3): cmp %r11d,%edx
7df6(6): jz 0xfffffa35(%rip)
7dfc(2): jmp 0xffffffc3(%rip)
7dfe(2): nop 
7e00(3): add %r9,%r9
7e03(4): lea 0x1(%r13),%rax
7e07(3): cmp %r13,%r9
7e0a(4): cmovbe %rax,%r9
7e0e(a): mov $0x576460752303423487,%rax
7e18(3): cmp %rax,%r9
7e1b(6): jnbe 0x3e0(%rip)
7e21(3): mov %r9,%rsi
7e24(5): mov %r9,0x48(%rsp)
7e29(5): mov %r10,0x40(%rsp)
7e2e(4): shl/sal $0x5,%rsi
7e32(5): cmp %rcx,0x8(%rsp)
7e37(5): mov %r8,0x38(%rsp)
7e3c(5): mov %r11d,0x30(%rsp)
7e41(6): jz 0xa0(%rip)
7e47(3): mov %rcx,%rdi
7e4a(5): call 0xffff9706(%rip)
7e4f(3): test %rax,%rax
7e52(3): mov %rax,%rcx
7e55(5): mov 0x30(%rsp),%r11d
7e5a(5): mov 0x38(%rsp),%r8
7e5f(5): mov 0x40(%rsp),%r10
7e64(5): mov 0x48(%rsp),%r9
7e69(6): jz 0x38e(%rip)
7e6f(5): mov 0x8(%rsp),%rax
7e74(4): cmp 0x8(%r15),%rax
7e78(6): jz 0x91(%rip)
7e7e(4): mov %rcx,0x8(%r15)
7e82(5): jmp 0xfffff962(%rip)
7e87(5): mov 0x20(%rsp),%rsi
7e8c(4): cmp $0xffffffff,%rsi
7e90(4): lea 0x1(%rsi),%rax
7e94(5): mov %rsi,0x50(%r12)
7e99(6): jz 0xffffff22(%rip)
7e9f(5): mov 0x20(%rsp),%r13
7ea4(5): mov %rax,0x20(%rsp)
7ea9(5): jmp 0xfffff92e(%rip)
7eae(4): cmp $0x9,%dil
7eb2(6): jnbe 0xffffff09(%rip)
7eb8(3): movsx %bl,%eax
7ebb(3): mov %r8,%rsi
7ebe(3): mov %rbp,%rcx
7ec1(3): sub $0x30,%eax
7ec4(2): cwde 
7ec6(5): jmp 0xfffffc3b(%rip)
7ecb(3): cmp $0x5,%edx
7ece(6): jnz 0xfffffef1(%rip)
7ed4(4): movzx 0x0(%rbp),%ebx
7ed8(4): lea 0x1(%rbp),%rdx
7edc(5): jmp 0xfffff859(%rip)
7ee1(3): mov %rsi,%rdi
7ee4(5): call 0xffff961c(%rip)
7ee9(3): test %rax,%rax
7eec(3): mov %rax,%rcx
7eef(5): mov 0x30(%rsp),%r11d
7ef4(5): mov 0x38(%rsp),%r8
7ef9(5): mov 0x40(%rsp),%r10
7efe(5): mov 0x48(%rsp),%r9
7f03(6): jz 0x169(%rip)
7f09(3): mov (%r15),%rdx
7f0c(5): mov 0x8(%rsp),%rsi
7f11(3): mov %rcx,%rdi
7f14(5): mov %r9,0x48(%rsp)
7f19(5): mov %r10,0x40(%rsp)
7f1e(5): mov %r8,0x38(%rsp)
7f23(5): mov %r11d,0x30(%rsp)
7f28(4): shl/sal $0x5,%rdx
7f2c(5): call 0xffff95a4(%rip)
7f31(5): mov 0x48(%rsp),%r9
7f36(5): mov 0x40(%rsp),%r10
7f3b(3): mov %rax,%rcx
7f3e(5): mov 0x38(%rsp),%r8
7f43(5): mov 0x30(%rsp),%r11d
7f48(5): jmp 0xffffff36(%rip)
7f4d(3): mov %rsi,%rdi
7f50(5): call 0xffff95b0(%rip)
7f55(3): test %rax,%rax
7f58(3): mov %rax,%rcx
7f5b(5): mov 0x30(%rsp),%r8
7f60(5): mov 0x38(%rsp),%r10
7f65(5): mov 0x40(%rsp),%r9
7f6a(6): jz 0xef(%rip)
7f70(4): lea 0x0(%rbx,%rbx,4),%rax
7f74(5): mov 0x28(%rsp),%rsi
7f79(3): mov %rcx,%rdi
7f7c(5): mov %r9,0x40(%rsp)
7f81(5): mov %r10,0x38(%rsp)
7f86(4): lea 0x0(%rbx,%rax,2),%rdx
7f8a(5): mov %r8,0x30(%rsp)
7f8f(4): shl/sal $0x3,%rdx
7f93(5): call 0xffff953d(%rip)
7f98(3): mov (%r14),%rbx
7f9b(3): mov %rax,%rcx
7f9e(5): mov 0x40(%rsp),%r9
7fa3(5): mov 0x38(%rsp),%r10
7fa8(5): mov 0x30(%rsp),%r8
7fad(5): jmp 0xfffff91a(%rip)
7fb2(3): mov (%r15),%rax
7fb5(5): jmp 0xfffffa02(%rip)
7fba(3): cmp $0x5,%edx
7fbd(6): jnz 0xfffffe02(%rip)
7fc3(4): movzx (%r11),%ebx
7fc7(3): mov %r11,%rbp
7fca(5): jmp 0xfffff774(%rip)
7fcf(3): add %r9,%r9
7fd2(4): lea 0x1(%rbx),%rax
7fd6(3): cmp %rbx,%r9
7fd9(4): cmovbe %rax,%r9
7fdd(a): mov $0x576460752303423487,%rax
7fe7(3): cmp %rax,%r9
7fea(6): jnbe 0x211(%rip)
7ff0(3): mov %r9,%rsi
7ff3(5): mov %r9,0x48(%rsp)
7ff8(5): mov %r10,0x40(%rsp)
7ffd(4): shl/sal $0x5,%rsi
8001(5): cmp %rcx,0x8(%rsp)
8006(5): mov %r8,0x38(%rsp)
800b(5): mov %r11,0x30(%rsp)
8010(6): jz 0x1be(%rip)
8016(3): mov %rcx,%rdi
8019(5): call 0xffff9537(%rip)
801e(4): mov 0x8(%r15),%rdx
8022(5): mov 0x30(%rsp),%r11
8027(3): mov %rax,%rcx
802a(5): mov 0x38(%rsp),%r8
802f(5): mov 0x40(%rsp),%r10
8034(5): mov 0x48(%rsp),%r9
8039(3): test %rcx,%rcx
803c(6): jz 0x21b(%rip)
8042(5): cmp %rdx,0x8(%rsp)
8047(3): mov (%r15),%rax
804a(6): jz 0x1c6(%rip)
8050(4): mov %rcx,0x8(%r15)
8054(5): jmp 0xfffffa19(%rip)
8059(4): mov 0x8(%r15),%rcx
805d(5): cmp %rcx,0x8(%rsp)
8062(2): jz 0x1a(%rip)
8064(3): mov %rcx,%rdi
8067(5): call 0xffff92c9(%rip)
806c(4): mov 0x8(%r14),%rdi
8070(5): cmp %rdi,0x28(%rsp)
8075(2): jz 0x7(%rip)
8077(5): call 0xffff92b9(%rip)
807c(5): call 0xffff92d4(%rip)
8081(6): mov $0xc,(%rax)
8087(5): mov $0xffffffff,%eax
808c(5): jmp 0xfffff586(%rip)
8091(3): mov %rsi,%rdi
8094(5): call 0xffff946c(%rip)
8099(5): mov 0x8(%rsp),%rdx
809e(3): mov %rax,%rcx
80a1(5): mov 0x40(%rsp),%r9
80a6(5): mov 0x38(%rsp),%r10
80ab(5): mov 0x30(%rsp),%r8
80b0(5): jmp 0xfffff8ec(%rip)
80b5(5): mov 0x20(%rsp),%rsi
80ba(4): cmp $0xffffffff,%rsi
80be(4): lea 0x1(%rsi),%rax
80c2(5): mov %rsi,0x40(%r12)
80c7(6): jz 0xfffffcf4(%rip)
80cd(5): mov 0x20(%rsp),%rbx
80d2(5): mov %rax,0x20(%rsp)
80d7(5): jmp 0xfffff986(%rip)
80dc(3): mov %r11,%rdx
80df(4): add $0x1,%rdx
80e3(3): movzx (%rdx),%ecx
80e6(3): lea 0xffffffd0(%rcx),%esi
80e9(4): cmp $0x9,%sil
80ed(2): jbe 0xfffffff2(%rip)
80ef(3): cmp $0x24,%cl
80f2(6): jnz 0xfffff95c(%rip)
80f8(2): xor %ecx,%ecx
80fa(a): mov $0x1844674407370955161,%rsi
8104(3): sub $0x30,%eax
8107(3): mov %r8,%rdx
810a(3): cmp %rsi,%rcx
810d(2): cwde 
810f(2): jnbe 0x9(%rip)
8111(4): lea 0x0(%rcx,%rcx,4),%rdx
8115(3): add %rdx,%rdx
8118(3): mov %r11,%rsi
811b(2): xor %ebx,%ebx
811d(3): add %rax,%rdx
8120(5): movsx 0x1(%r11),%eax
8125(3): setb %bl
8128(4): add $0x1,%r11
812c(3): mov %rdx,%rcx
812f(3): test %rbx,%rbx
8132(3): lea 0xffffffd0(%rax),%edi
8135(2): jz 0x73(%rip)
8137(4): cmp $0x9,%dil
813b(6): jnbe 0xfffffc80(%rip)
8141(3): sub $0x30,%eax
8144(3): mov %r8,%rdx
8147(3): mov %r11,%rsi
814a(2): cwde 
814c(2): jmp 0xffffffcf(%rip)
814e(4): cmp $0x9,%dil
8152(6): jnbe 0xfffffc69(%rip)
8158(3): movsx %cl,%eax
815b(3): mov %rdx,%rbp
815e(3): mov %r8,%rcx
8161(3): sub $0x30,%eax
8164(2): cwde 
8166(5): jmp 0xfffffac3(%rip)
816b(5): mov 0x8(%rsp),%rsi
8170(4): shl/sal $0x5,%rax
8174(3): mov %rcx,%rdi
8177(3): mov %rax,%rdx
817a(5): mov %r9,0x40(%rsp)
817f(5): mov %r10,0x38(%rsp)
8184(5): mov %r8,0x30(%rsp)
8189(5): call 0xffff9347(%rip)
818e(5): mov 0x40(%rsp),%r9
8193(3): mov %rax,%rcx
8196(5): mov 0x38(%rsp),%r10
819b(3): mov (%r15),%rax
819e(5): mov 0x30(%rsp),%r8
81a3(5): jmp 0xfffff810(%rip)
81a8(4): cmp $0x9,%dil
81ac(6): jbe 0xffffff4e(%rip)
81b2(4): lea 0xffffffff(%rdx),%rbx
81b6(4): cmp $0xfffffffd,%rbx
81ba(6): jnbe 0xfffffc01(%rip)
81c0(5): mov %rbx,0x40(%r12)
81c5(4): lea 0x2(%rsi),%r11
81c9(5): jmp 0xfffff894(%rip)
81ce(3): mov %rsi,%rdi
81d1(5): call 0xffff932f(%rip)
81d6(5): mov 0x8(%rsp),%rdx
81db(3): mov %rax,%rcx
81de(5): mov 0x48(%rsp),%r9
81e3(5): mov 0x40(%rsp),%r10
81e8(5): mov 0x38(%rsp),%r8
81ed(5): mov 0x30(%rsp),%r11
81f2(5): jmp 0xfffffe47(%rip)
81f7(4): mov 0x8(%r15),%rcx
81fb(5): cmp %rcx,0x8(%rsp)
8200(6): jnz 0xfffffe64(%rip)
8206(5): jmp 0xfffffe66(%rip)
820b(5): nop 0x0(%rax,%rax,1)
8210(5): mov 0x8(%rsp),%rsi
8215(4): shl/sal $0x5,%rax
8219(3): mov %rcx,%rdi
821c(3): mov %rax,%rdx
821f(5): mov %r9,0x48(%rsp)
8224(5): mov %r10,0x40(%rsp)
8229(5): mov %r8,0x38(%rsp)
822e(5): mov %r11,0x30(%rsp)
8233(5): call 0xffff929d(%rip)
8238(5): mov 0x48(%rsp),%r9
823d(3): mov %rax,%rcx
8240(5): mov 0x40(%rsp),%r10
8245(3): mov (%r15),%rax
8248(5): mov 0x38(%rsp),%r8
824d(5): mov 0x30(%rsp),%r11
8252(5): jmp 0xfffffdfe(%rip)
8257(3): mov %rdx,%rcx
825a(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
8260(2): push %r15
8262(2): push %r14
8264(3): mov %rdx,%r15
8267(2): push %r13
8269(2): push %r12
826b(7): lea 0x20395e(%rip),%r12
8272(1): push %rbp
8273(7): lea 0x20395e(%rip),%rbp
827a(1): push %rbx
827b(3): mov %edi,%r13d
827e(3): mov %rsi,%r14
8281(3): sub %r12,%rbp
8284(4): sub $0x8,%rsp
8288(4): sar $0x3,%rbp
828c(5): call 0xffff9064(%rip)
8291(3): test %rbp,%rbp
8294(2): jz 0x22(%rip)
8296(2): xor %ebx,%ebx
8298(8): nop 0x0(%rax,%rax,1)
82a0(3): mov %r15,%rdx
82a3(3): mov %r14,%rsi
82a6(3): mov %r13d,%edi
82a9(4): call 0x0(%r12,%rbx,8)
82ad(4): add $0x1,%rbx
82b1(3): cmp %rbx,%rbp
82b4(2): jnz 0xffffffec(%rip)
82b6(4): add $0x8,%rsp
82ba(1): pop %rbx
82bb(1): pop %rbp
82bc(2): pop %r12
82be(2): pop %r13
82c0(2): pop %r14
82c2(2): pop %r15
82c4(1): ret near (%rsp)

"atexit" :
82e0(7): mov 0x203d21(%rip),%rdx
82e7(2): xor %esi,%esi
82e9(5): jmp 0xffff92c7(%rip)

"_fini" :
82f0(4): sub $0x8,%rsp
82f4(4): add $0x8,%rsp
82f8(1): ret near (%rsp)

