
"__ctype_toupper_loc@plt" :
19c0(6): jmp 0x2193ca(%rip)
19c6(5): push $0x0

"free@plt" :
19d0(6): jmp 0x2193c2(%rip)
19d6(5): push $0x1

"abort@plt" :
19e0(6): jmp 0x2193ba(%rip)
19e6(5): push $0x2

"__errno_location@plt" :
19f0(6): jmp 0x2193b2(%rip)
19f6(5): push $0x3

"strncmp@plt" :
1a00(6): jmp 0x2193aa(%rip)
1a06(5): push $0x4

"_exit@plt" :
1a10(6): jmp 0x2193a2(%rip)
1a16(5): push $0x5

"__fpending@plt" :
1a20(6): jmp 0x21939a(%rip)
1a26(5): push $0x6

"puts@plt" :
1a30(6): jmp 0x219392(%rip)
1a36(5): push $0x7

"iswcntrl@plt" :
1a40(6): jmp 0x21938a(%rip)
1a46(5): push $0x8

"textdomain@plt" :
1a50(6): jmp 0x219382(%rip)
1a56(5): push $0x9

"iswctype@plt" :
1a60(6): jmp 0x21937a(%rip)
1a66(5): push $0xa

"fclose@plt" :
1a70(6): jmp 0x219372(%rip)
1a76(5): push $0xb

"bindtextdomain@plt" :
1a80(6): jmp 0x21936a(%rip)
1a86(5): push $0xc

"dcgettext@plt" :
1a90(6): jmp 0x219362(%rip)
1a96(5): push $0xd

"__ctype_get_mb_cur_max@plt" :
1aa0(6): jmp 0x21935a(%rip)
1aa6(5): push $0xe

"strlen@plt" :
1ab0(6): jmp 0x219352(%rip)
1ab6(5): push $0xf

"__gmpz_get_str@plt" :
1ac0(6): jmp 0x21934a(%rip)
1ac6(5): push $0x10

"__stack_chk_fail@plt" :
1ad0(6): jmp 0x219342(%rip)
1ad6(5): push $0x11

"getopt_long@plt" :
1ae0(6): jmp 0x21933a(%rip)
1ae6(5): push $0x12

"mbrtowc@plt" :
1af0(6): jmp 0x219332(%rip)
1af6(5): push $0x13

"strchr@plt" :
1b00(6): jmp 0x21932a(%rip)
1b06(5): push $0x14

"__overflow@plt" :
1b10(6): jmp 0x219322(%rip)
1b16(5): push $0x15

"strrchr@plt" :
1b20(6): jmp 0x21931a(%rip)
1b26(5): push $0x16

"lseek@plt" :
1b30(6): jmp 0x219312(%rip)
1b36(5): push $0x17

"__gmpz_out_str@plt" :
1b40(6): jmp 0x21930a(%rip)
1b46(5): push $0x18

"__assert_fail@plt" :
1b50(6): jmp 0x219302(%rip)
1b56(5): push $0x19

"memset@plt" :
1b60(6): jmp 0x2192fa(%rip)
1b66(5): push $0x1a

"strcspn@plt" :
1b70(6): jmp 0x2192f2(%rip)
1b76(5): push $0x1b

"memchr@plt" :
1b80(6): jmp 0x2192ea(%rip)
1b86(5): push $0x1c

"memcmp@plt" :
1b90(6): jmp 0x2192e2(%rip)
1b96(5): push $0x1d

"wctype@plt" :
1ba0(6): jmp 0x2192da(%rip)
1ba6(5): push $0x1e

"fputs_unlocked@plt" :
1bb0(6): jmp 0x2192d2(%rip)
1bb6(5): push $0x1f

"calloc@plt" :
1bc0(6): jmp 0x2192ca(%rip)
1bc6(5): push $0x20

"strcmp@plt" :
1bd0(6): jmp 0x2192c2(%rip)
1bd6(5): push $0x21

"memcpy@plt" :
1be0(6): jmp 0x2192ba(%rip)
1be6(5): push $0x22

"fileno@plt" :
1bf0(6): jmp 0x2192b2(%rip)
1bf6(5): push $0x23

"wcwidth@plt" :
1c00(6): jmp 0x2192aa(%rip)
1c06(5): push $0x24

"iswalnum@plt" :
1c10(6): jmp 0x2192a2(%rip)
1c16(5): push $0x25

"malloc@plt" :
1c20(6): jmp 0x21929a(%rip)
1c26(5): push $0x26

"wcrtomb@plt" :
1c30(6): jmp 0x219292(%rip)
1c36(5): push $0x27

"fflush@plt" :
1c40(6): jmp 0x21928a(%rip)
1c46(5): push $0x28

"__gmpz_clear@plt" :
1c50(6): jmp 0x219282(%rip)
1c56(5): push $0x29

"nl_langinfo@plt" :
1c60(6): jmp 0x21927a(%rip)
1c66(5): push $0x2a

"strcoll@plt" :
1c70(6): jmp 0x219272(%rip)
1c76(5): push $0x2b

"__freading@plt" :
1c80(6): jmp 0x21926a(%rip)
1c86(5): push $0x2c

"realloc@plt" :
1c90(6): jmp 0x219262(%rip)
1c96(5): push $0x2d

"setlocale@plt" :
1ca0(6): jmp 0x21925a(%rip)
1ca6(5): push $0x2e

"__printf_chk@plt" :
1cb0(6): jmp 0x219252(%rip)
1cb6(5): push $0x2f

"__gmpz_init_set_ui@plt" :
1cc0(6): jmp 0x21924a(%rip)
1cc6(5): push $0x30

"btowc@plt" :
1cd0(6): jmp 0x219242(%rip)
1cd6(5): push $0x31

"mempcpy@plt" :
1ce0(6): jmp 0x21923a(%rip)
1ce6(5): push $0x32

"memmove@plt" :
1cf0(6): jmp 0x219232(%rip)
1cf6(5): push $0x33

"error@plt" :
1d00(6): jmp 0x21922a(%rip)
1d06(5): push $0x34

"fseeko@plt" :
1d10(6): jmp 0x219222(%rip)
1d16(5): push $0x35

"towlower@plt" :
1d20(6): jmp 0x21921a(%rip)
1d26(5): push $0x36

"towupper@plt" :
1d30(6): jmp 0x219212(%rip)
1d36(5): push $0x37

"__gmpz_init_set_str@plt" :
1d40(6): jmp 0x21920a(%rip)
1d46(5): push $0x38

"__cxa_atexit@plt" :
1d50(6): jmp 0x219202(%rip)
1d56(5): push $0x39

"exit@plt" :
1d60(6): jmp 0x2191fa(%rip)
1d66(5): push $0x3a

"fwrite@plt" :
1d70(6): jmp 0x2191f2(%rip)
1d76(5): push $0x3b

"__fprintf_chk@plt" :
1d80(6): jmp 0x2191ea(%rip)
1d86(5): push $0x3c

"mbsinit@plt" :
1d90(6): jmp 0x2191e2(%rip)
1d96(5): push $0x3d

"iswprint@plt" :
1da0(6): jmp 0x2191da(%rip)
1da6(5): push $0x3e

"__ctype_tolower_loc@plt" :
1db0(6): jmp 0x2191d2(%rip)
1db6(5): push $0x3f

"__ctype_b_loc@plt" :
1dc0(6): jmp 0x2191ca(%rip)
1dc6(5): push $0x40

".plt.got" :
1dd0(6): jmp 0x21920a(%rip)
1dd6(2): nop 

"_init" :
1990(4): sub $0x8,%rsp
1994(7): mov 0x219625(%rip),%rax
199b(3): test %rax,%rax
199e(2): jz 0x4(%rip)
19a0(2): call %rax
19a2(4): add $0x8,%rsp
19a6(1): ret near (%rsp)

"mbuiter_multi_next.part.2" :
1de0(7): lea 0x14379(%rip),%rcx
1de7(7): lea 0x13822(%rip),%rsi
1dee(7): lea 0x14188(%rip),%rdi
1df5(4): sub $0x8,%rsp
1df9(5): mov $0xb3,%edx
1dfe(5): call 0xfffffd52(%rip)

"main" :
1e10(1): push %rbp
1e11(1): push %rbx
1e12(2): mov %edi,%ebp
1e14(3): mov %rsi,%rbx
1e17(4): sub $0x8,%rsp
1e1b(3): mov (%rsi),%rdi
1e1e(5): call 0x2962(%rip)
1e23(7): lea 0x14937(%rip),%rsi
1e2a(5): mov $0x6,%edi
1e2f(5): call 0xfffffe71(%rip)
1e34(7): lea 0x142a5(%rip),%rsi
1e3b(7): lea 0x141cc(%rip),%rdi
1e42(5): call 0xfffffc3e(%rip)
1e47(7): lea 0x141c0(%rip),%rdi
1e4e(5): call 0xfffffc02(%rip)
1e53(7): lea 0x2066(%rip),%rdi
1e5a(a): mov $0x3,0x2191ac(%rip)
1e64(5): call 0x1374c(%rip)
1e69(7): lea 0x1428d(%rip),%rax
1e70(2): push $0x0
1e72(7): lea 0x4b7(%rip),%r9
1e79(7): lea 0x14278(%rip),%r8
1e80(7): lea 0x14183(%rip),%rcx
1e87(7): lea 0x14101(%rip),%rdx
1e8e(1): push %rax
1e8f(7): lea 0x14273(%rip),%rax
1e96(3): mov %rbx,%rsi
1e99(2): mov %ebp,%edi
1e9b(1): push %rax
1e9c(7): lea 0x14275(%rip),%rax
1ea3(1): push %rax
1ea4(2): xor %eax,%eax
1ea6(5): call 0x20ca(%rip)
1eab(4): add $0x20,%rsp
1eaf(3): cmp $0x1,%ebp
1eb2(6): jbe 0xee(%rip)
1eb8(4): mov 0x8(%rbx),%rdi
1ebc(7): lea 0x14261(%rip),%rsi
1ec3(5): call 0xfffffd0d(%rip)
1ec8(2): test %eax,%eax
1eca(2): jnz 0xf(%rip)
1ecc(3): cmp $0x2,%ebp
1ecf(6): jz 0xd1(%rip)
1ed5(4): add $0x8,%rbx
1ed9(4): add $0x8,%rbx
1edd(5): mov $0x1,%edi
1ee2(7): mov %rbx,0x2191e7(%rip)
1ee9(5): call 0x1ef7(%rip)
1eee(3): mov %rax,%rbx
1ef1(7): mov 0x2191d8(%rip),%rax
1ef8(3): mov (%rax),%rdx
1efb(3): test %rdx,%rdx
1efe(2): jnz 0x6c(%rip)
1f00(2): mov (%rbx),%eax
1f02(2): test %eax,%eax
1f04(2): jz 0x22(%rip)
1f06(3): sub $0x1,%eax
1f09(2): jnz 0x5c(%rip)
1f0b(4): mov 0x8(%rbx),%rdi
1f0f(5): call 0xfffffb21(%rip)
1f14(3): mov %rbx,%rdi
1f17(5): call 0x2c9(%rip)
1f1c(4): add $0x8,%rsp
1f20(3): movzx %al,%eax
1f23(1): pop %rbx
1f24(1): pop %rbp
1f25(1): ret near (%rsp)
1f26(7): mov 0x21915b(%rip),%rdi
1f2d(4): lea 0x8(%rbx),%rdx
1f31(5): mov $0xa,%esi
1f36(5): call 0xfffffc0a(%rip)
1f3b(7): mov 0x219146(%rip),%rdi
1f42(4): mov 0x28(%rdi),%rax
1f46(4): cmp 0x30(%rdi),%rax
1f4a(2): jnb 0xf(%rip)
1f4c(4): lea 0x1(%rax),%rdx
1f50(4): mov %rdx,0x28(%rdi)
1f54(3): mov $0xa,(%rax)
1f57(2): jmp 0xffffffbd(%rip)
1f59(5): mov $0xa,%esi
1f5e(5): call 0xfffffbb2(%rip)
1f63(2): jmp 0xffffffb1(%rip)
1f65(5): call 0xfffffa7b(%rip)
1f6a(5): mov $0x8,%esi
1f6f(2): xor %edi,%edi
1f71(5): call 0x412f(%rip)
1f76(7): lea 0x13fdb(%rip),%rsi
1f7d(3): mov %rax,%rbx
1f80(5): mov $0x5,%edx
1f85(2): xor %edi,%edi
1f87(5): call 0xfffffb09(%rip)
1f8c(3): mov %rbx,%rcx
1f8f(3): mov %rax,%rdx
1f92(2): xor %esi,%esi
1f94(5): mov $0x2,%edi
1f99(2): xor %eax,%eax
1f9b(5): call 0xfffffd65(%rip)
1fa0(7): lea 0x14180(%rip),%rsi
1fa7(5): mov $0x5,%edx
1fac(2): xor %edi,%edi
1fae(5): call 0xfffffae2(%rip)
1fb3(2): xor %edi,%edi
1fb5(3): mov %rax,%rdx
1fb8(2): xor %esi,%esi
1fba(2): xor %eax,%eax
1fbc(5): call 0xfffffd44(%rip)
1fc1(5): mov $0x2,%edi
1fc6(5): call 0x36a(%rip)

"_start" :
1fd0(2): xor %ebp,%ebp
1fd2(3): mov %rdx,%r9
1fd5(1): pop %rsi
1fd6(3): mov %rsp,%rdx
1fd9(4): and $0xfffffff0,%rsp
1fdd(1): push %rax
1fde(1): push %rsp
1fdf(7): lea 0x135ba(%rip),%r8
1fe6(7): lea 0x13543(%rip),%rcx
1fed(7): lea 0xfffffe1c(%rip),%rdi
1ff4(6): call 0x218fbe(%rip)
1ffa(1): hlt 

"deregister_tm_clones" :
2000(7): lea 0x219079(%rip),%rdi
2007(1): push %rbp
2008(7): lea 0x219071(%rip),%rax
200f(3): cmp %rdi,%rax
2012(3): mov %rsp,%rbp
2015(2): jz 0x1b(%rip)
2017(7): mov 0x218f82(%rip),%rax
201e(3): test %rax,%rax
2021(2): jz 0xf(%rip)
2023(1): pop %rbp
2024(2): jmp %rax
2026(a): nop 0x0(%rax,%rax,1)
2030(1): pop %rbp
2031(1): ret near (%rsp)

"register_tm_clones" :
2040(7): lea 0x219039(%rip),%rdi
2047(7): lea 0x219032(%rip),%rsi
204e(1): push %rbp
204f(3): sub %rdi,%rsi
2052(3): mov %rsp,%rbp
2055(4): sar $0x3,%rsi
2059(3): mov %rsi,%rax
205c(4): shr $0x3f,%rax
2060(3): add %rax,%rsi
2063(3): sar $0x1,%rsi
2066(2): jz 0x1a(%rip)
2068(7): mov 0x218f69(%rip),%rax
206f(3): test %rax,%rax
2072(2): jz 0xe(%rip)
2074(1): pop %rbp
2075(2): jmp %rax
2077(9): nop 0x0(%rax,%rax,1)
2080(1): pop %rbp
2081(1): ret near (%rsp)

"__do_global_dtors_aux" :
2090(7): cmp $0x0,0x219031(%rip)
2097(2): jnz 0x31(%rip)
2099(8): cmp $0x0,0x218f3f(%rip)
20a1(1): push %rbp
20a2(3): mov %rsp,%rbp
20a5(2): jz 0xe(%rip)
20a7(7): mov 0x218f5a(%rip),%rdi
20ae(5): call 0xfffffd22(%rip)
20b3(5): call 0xffffff4d(%rip)
20b8(7): mov $0x1,0x219009(%rip)
20bf(1): pop %rbp
20c0(1): ret near (%rsp)
20c1(7): nop 0x0(%rax)
20c8(2): REP ret near (%rsp)

"frame_dummy" :
20d0(1): push %rbp
20d1(3): mov %rsp,%rbp
20d4(1): pop %rbp
20d5(5): jmp 0xffffff6b(%rip)

"nextarg" :
20e0(1): push %rbx
20e1(7): mov 0x218fe8(%rip),%rbx
20e8(3): mov %rdi,%rsi
20eb(2): xor %eax,%eax
20ed(3): mov (%rbx),%rdi
20f0(3): test %rdi,%rdi
20f3(2): jz 0x1a(%rip)
20f5(5): call 0xfffffadb(%rip)
20fa(2): test %eax,%eax
20fc(3): setz %al
20ff(3): movzx %al,%edx
2102(4): lea 0x0(%rbx,%rdx,8),%rdx
2106(7): mov %rdx,0x218fc3(%rip)
210d(1): pop %rbx
210e(1): ret near (%rsp)

"require_more_args" :
2110(7): mov 0x218fb9(%rip),%rax
2117(4): cmp $0x0,(%rax)
211b(2): jz 0x4(%rip)
211d(2): REP ret near (%rsp)
211f(1): push %rbx
2120(4): mov 0xfffffff8(%rax),%rdx
2124(5): mov $0x8,%esi
2129(2): xor %edi,%edi
212b(5): call 0x3f75(%rip)
2130(7): lea 0x134b1(%rip),%rsi
2137(3): mov %rax,%rbx
213a(5): mov $0x5,%edx
213f(2): xor %edi,%edi
2141(5): call 0xfffff94f(%rip)
2146(3): mov %rbx,%rcx
2149(3): mov %rax,%rdx
214c(2): xor %esi,%esi
214e(5): mov $0x2,%edi
2153(2): xor %eax,%eax
2155(5): call 0xfffffbab(%rip)
215a(6): nop 0x0(%rax,%rax,1)
2160(1): push %rbp
2161(1): push %rbx
2162(3): mov %rdi,%rbp
2165(5): mov $0x18,%edi
216a(4): sub $0x8,%rsp
216e(5): call 0x4c52(%rip)
2173(3): mov %rbp,%rdi
2176(3): mov %rax,%rbx
2179(6): mov $0x1,(%rax)
217f(5): call 0x4e71(%rip)
2184(4): mov %rax,0x8(%rbx)
2188(4): add $0x8,%rsp
218c(3): mov %rbx,%rax
218f(1): pop %rbx
2190(1): pop %rbp
2191(1): ret near (%rsp)

"str_value" :
2160(1): push %rbp
2161(1): push %rbx
2162(3): mov %rdi,%rbp
2165(5): mov $0x18,%edi
216a(4): sub $0x8,%rsp
216e(5): call 0x4c52(%rip)
2173(3): mov %rbp,%rdi
2176(3): mov %rax,%rbx
2179(6): mov $0x1,(%rax)
217f(5): call 0x4e71(%rip)
2184(4): mov %rax,0x8(%rbx)
2188(4): add $0x8,%rsp
218c(3): mov %rbx,%rax
218f(1): pop %rbx
2190(1): pop %rbp
2191(1): ret near (%rsp)

"freev" :
21a0(1): push %rbx
21a1(3): cmp $0x1,(%rdi)
21a4(3): mov %rdi,%rbx
21a7(2): jz 0x19(%rip)
21a9(4): lea 0x8(%rdi),%rdi
21ad(5): call 0xfffffaa3(%rip)
21b2(3): mov %rbx,%rdi
21b5(1): pop %rbx
21b6(5): jmp 0xfffff81a(%rip)
21bb(5): nop 0x0(%rax,%rax,1)
21c0(4): mov 0x8(%rdi),%rdi
21c4(5): call 0xfffff80c(%rip)
21c9(3): mov %rbx,%rdi
21cc(1): pop %rbx
21cd(5): jmp 0xfffff803(%rip)

"null" :
21e0(2): mov (%rdi),%eax
21e2(2): test %eax,%eax
21e4(2): jz 0x44(%rip)
21e6(3): cmp $0x1,%eax
21e9(2): jnz 0x55(%rip)
21eb(4): mov 0x8(%rdi),%rdx
21ef(5): mov $0x1,%eax
21f4(3): movzx (%rdx),%ecx
21f7(2): test %cl,%cl
21f9(2): jz 0x29(%rip)
21fb(2): xor %eax,%eax
21fd(3): cmp $0x2d,%cl
2200(3): setz %al
2203(3): add %rdx,%rax
2206(3): movzx (%rax),%edx
2209(2): jmp 0x12(%rip)
220b(5): nop 0x0(%rax,%rax,1)
2210(4): add $0x1,%rax
2214(3): movzx (%rax),%edx
2217(2): test %dl,%dl
2219(2): jz 0x1f(%rip)
221b(3): cmp $0x30,%dl
221e(2): jz 0xfffffff2(%rip)
2220(2): xor %eax,%eax
2222(2): REP ret near (%rsp)
2224(4): nop 0x0(%rax)
2228(3): mov 0xc(%rdi),%eax
222b(2): test %eax,%eax
222d(3): setz %al
2230(1): ret near (%rsp)
2231(7): nop 0x0(%rax)
2238(5): mov $0x1,%eax
223d(1): ret near (%rsp)
223e(4): sub $0x8,%rsp
2242(5): call 0xfffff79e(%rip)

"toarith" :
2250(2): mov (%rdi),%eax
2252(2): test %eax,%eax
2254(2): jz 0x4c(%rip)
2256(1): push %rbp
2257(1): push %rbx
2258(3): mov %rdi,%rbx
225b(4): sub $0x8,%rsp
225f(3): cmp $0x1,%eax
2262(2): jnz 0x79(%rip)
2264(4): mov 0x8(%rdi),%rbp
2268(2): xor %edx,%edx
226a(4): cmp $0x2d,0x0(%rbp)
226e(3): setz %dl
2271(3): add %rbp,%rdx
2274(3): movsx (%rdx),%eax
2277(2): jmp 0x14(%rip)
2279(7): nop 0x0(%rax)
2280(4): add $0x1,%rdx
2284(3): movsx (%rdx),%eax
2287(2): test %al,%al
2289(2): jz 0x27(%rip)
228b(3): sub $0x30,%eax
228e(3): cmp $0x9,%eax
2291(2): jbe 0xffffffef(%rip)
2293(4): add $0x8,%rsp
2297(2): xor %eax,%eax
2299(1): pop %rbx
229a(1): pop %rbp
229b(1): ret near (%rsp)
229c(4): nop 0x0(%rax)
22a0(5): mov $0x1,%eax
22a5(1): ret near (%rsp)
22a6(a): nop 0x0(%rax,%rax,1)
22b0(4): lea 0x8(%rbx),%rdi
22b4(3): mov %rbp,%rsi
22b7(5): mov $0xa,%edx
22bc(5): call 0xfffffa84(%rip)
22c1(3): mov %rbp,%rdi
22c4(5): call 0xfffff70c(%rip)
22c9(6): mov $0x0,(%rbx)
22cf(4): add $0x8,%rsp
22d3(5): mov $0x1,%eax
22d8(1): pop %rbx
22d9(1): pop %rbp
22da(1): ret near (%rsp)
22db(5): call 0xfffff705(%rip)

"tostring" :
22e0(2): push %r12
22e2(1): push %rbp
22e3(1): push %rbx
22e4(2): mov (%rdi),%eax
22e6(2): test %eax,%eax
22e8(2): jz 0x10(%rip)
22ea(3): cmp $0x1,%eax
22ed(2): jnz 0x3b(%rip)
22ef(1): pop %rbx
22f0(1): pop %rbp
22f1(2): pop %r12
22f3(1): ret near (%rsp)
22f4(4): nop 0x0(%rax)
22f8(4): lea 0x8(%rdi),%rbp
22fc(3): mov %rdi,%rbx
22ff(5): mov $0xa,%esi
2304(2): xor %edi,%edi
2306(3): mov %rbp,%rdx
2309(5): call 0xfffff7b7(%rip)
230e(3): mov %rbp,%rdi
2311(3): mov %rax,%r12
2314(5): call 0xfffff93c(%rip)
2319(4): mov %r12,0x8(%rbx)
231d(6): mov $0x1,(%rbx)
2323(1): pop %rbx
2324(1): pop %rbp
2325(2): pop %r12
2327(1): ret near (%rsp)
2328(5): call 0xfffff6b8(%rip)

"usage" :
2330(2): push %r13
2332(2): push %r12
2334(5): mov $0x5,%edx
2339(1): push %rbp
233a(1): push %rbx
233b(2): mov %edi,%ebp
233d(7): sub $0x88,%rsp
2344(7): mov 0x218d9d(%rip),%rbx
234b(9): mov $0x28,%rax
2354(5): mov %rax,0x78(%rsp)
2359(2): xor %eax,%eax
235b(2): test %edi,%edi
235d(2): jz 0x30(%rip)
235f(7): lea 0x132ca(%rip),%rsi
2366(2): xor %edi,%edi
2368(5): call 0xfffff728(%rip)
236d(7): mov 0x218d4c(%rip),%rdi
2374(3): mov %rax,%rdx
2377(3): mov %rbx,%rcx
237a(5): mov $0x1,%esi
237f(2): xor %eax,%eax
2381(5): call 0xfffff9ff(%rip)
2386(2): mov %ebp,%edi
2388(5): call 0xfffff9d8(%rip)
238d(7): lea 0x132c4(%rip),%rsi
2394(2): xor %edi,%edi
2396(5): call 0xfffff6fa(%rip)
239b(5): mov $0x1,%edi
23a0(3): mov %rax,%rsi
23a3(3): mov %rbx,%rcx
23a6(2): xor %eax,%eax
23a8(3): mov %rbx,%rdx
23ab(5): call 0xfffff905(%rip)
23b0(7): mov 0x218cd1(%rip),%rdi
23b7(4): mov 0x28(%rdi),%rax
23bb(4): cmp 0x30(%rdi),%rax
23bf(6): jnb 0x349(%rip)
23c5(4): lea 0x1(%rax),%rdx
23c9(4): mov %rdx,0x28(%rdi)
23cd(3): mov $0xa,(%rax)
23d0(7): mov 0x218cb1(%rip),%rbx
23d7(7): lea 0x132a2(%rip),%rsi
23de(5): mov $0x5,%edx
23e3(2): xor %edi,%edi
23e5(5): call 0xfffff6ab(%rip)
23ea(3): mov %rbx,%rsi
23ed(3): mov %rax,%rdi
23f0(5): call 0xfffff7c0(%rip)
23f5(7): mov 0x218c8c(%rip),%rbx
23fc(7): lea 0x132ad(%rip),%rsi
2403(5): mov $0x5,%edx
2408(2): xor %edi,%edi
240a(5): call 0xfffff686(%rip)
240f(3): mov %rbx,%rsi
2412(3): mov %rax,%rdi
2415(5): call 0xfffff79b(%rip)
241a(7): mov 0x218c67(%rip),%rbx
2421(7): lea 0x132c0(%rip),%rsi
2428(5): mov $0x5,%edx
242d(2): xor %edi,%edi
242f(5): call 0xfffff661(%rip)
2434(3): mov %rbx,%rsi
2437(3): mov %rax,%rdi
243a(5): call 0xfffff776(%rip)
243f(7): mov 0x218c42(%rip),%rbx
2446(7): lea 0x133b3(%rip),%rsi
244d(5): mov $0x5,%edx
2452(2): xor %edi,%edi
2454(5): call 0xfffff63c(%rip)
2459(3): mov %rbx,%rsi
245c(3): mov %rax,%rdi
245f(5): call 0xfffff751(%rip)
2464(7): mov 0x218c1d(%rip),%rbx
246b(7): lea 0x134b6(%rip),%rsi
2472(5): mov $0x5,%edx
2477(2): xor %edi,%edi
2479(5): call 0xfffff617(%rip)
247e(3): mov %rbx,%rsi
2481(3): mov %rax,%rdi
2484(5): call 0xfffff72c(%rip)
2489(7): mov 0x218bf8(%rip),%rbx
2490(7): lea 0x13509(%rip),%rsi
2497(5): mov $0x5,%edx
249c(2): xor %edi,%edi
249e(5): call 0xfffff5f2(%rip)
24a3(3): mov %rbx,%rsi
24a6(3): mov %rax,%rdi
24a9(5): call 0xfffff707(%rip)
24ae(7): mov 0x218bd3(%rip),%rbx
24b5(7): lea 0x135a4(%rip),%rsi
24bc(5): mov $0x5,%edx
24c1(2): xor %edi,%edi
24c3(5): call 0xfffff5cd(%rip)
24c8(3): mov %rbx,%rsi
24cb(3): mov %rax,%rdi
24ce(5): call 0xfffff6e2(%rip)
24d3(7): mov 0x218bae(%rip),%rbx
24da(7): lea 0x136b7(%rip),%rsi
24e1(5): mov $0x5,%edx
24e6(2): xor %edi,%edi
24e8(5): call 0xfffff5a8(%rip)
24ed(3): mov %rbx,%rsi
24f0(3): mov %rax,%rdi
24f3(5): call 0xfffff6bd(%rip)
24f8(7): mov 0x218b89(%rip),%rbx
24ff(7): lea 0x13762(%rip),%rsi
2506(5): mov $0x5,%edx
250b(2): xor %edi,%edi
250d(5): call 0xfffff583(%rip)
2512(3): mov %rbx,%rsi
2515(3): mov %rax,%rdi
2518(5): call 0xfffff698(%rip)
251d(7): mov 0x218b64(%rip),%rbx
2524(7): lea 0x13865(%rip),%rsi
252b(5): mov $0x5,%edx
2530(2): xor %edi,%edi
2532(5): call 0xfffff55e(%rip)
2537(3): mov %rbx,%rsi
253a(3): mov %rax,%rdi
253d(7): lea 0x13a4b(%rip),%rbx
2544(5): call 0xfffff66c(%rip)
2549(7): lea 0x13a44(%rip),%rax
2550(7): lea 0x13a7e(%rip),%rcx
2557(9): mov $0x0,0x60(%rsp)
2560(9): mov $0x0,0x68(%rsp)
2569(3): mov %rsp,%rdx
256c(4): mov %rax,(%rsp)
2570(7): lea 0x13a1f(%rip),%rax
2577(5): mov %rcx,0x30(%rsp)
257c(7): lea 0x13a5c(%rip),%rcx
2583(5): mov %rax,0x8(%rsp)
2588(7): lea 0x13a7f(%rip),%rax
258f(5): mov %rcx,0x40(%rsp)
2594(7): lea 0x13a4e(%rip),%rcx
259b(5): mov %rax,0x10(%rsp)
25a0(7): lea 0x139ff(%rip),%rax
25a7(5): mov %rcx,0x50(%rsp)
25ac(5): mov %rax,0x18(%rsp)
25b1(7): lea 0x13a04(%rip),%rax
25b8(5): mov %rax,0x20(%rsp)
25bd(7): lea 0x13a02(%rip),%rax
25c4(5): mov %rax,0x28(%rsp)
25c9(5): mov %rax,0x38(%rsp)
25ce(5): mov %rax,0x48(%rsp)
25d3(5): mov %rax,0x58(%rsp)
25d8(8): nop 0x0(%rax,%rax,1)
25e0(4): add $0x10,%rdx
25e4(3): mov (%rdx),%rdi
25e7(3): test %rdi,%rdi
25ea(2): jz 0x15(%rip)
25ec(5): mov $0x5,%ecx
25f1(3): mov %rbx,%rsi
25f4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
25f6(3): setnbe %al
25f9(2): sbb $0x0,%al
25fb(2): test %al,%al
25fd(2): jnz 0xffffffe3(%rip)
25ff(4): mov 0x8(%rdx),%r12
2603(2): xor %edi,%edi
2605(5): mov $0x5,%edx
260a(7): lea 0x139e2(%rip),%rsi
2611(3): test %r12,%r12
2614(6): jz 0x103(%rip)
261a(5): call 0xfffff476(%rip)
261f(7): lea 0x1380a(%rip),%rcx
2626(7): lea 0x139dd(%rip),%rdx
262d(3): mov %rax,%rsi
2630(5): mov $0x1,%edi
2635(2): xor %eax,%eax
2637(5): call 0xfffff679(%rip)
263c(2): xor %esi,%esi
263e(5): mov $0x5,%edi
2643(5): call 0xfffff65d(%rip)
2648(3): test %rax,%rax
264b(2): jz 0x1a(%rip)
264d(7): lea 0x139c4(%rip),%rsi
2654(5): mov $0x3,%edx
2659(3): mov %rax,%rdi
265c(5): call 0xfffff3a4(%rip)
2661(2): test %eax,%eax
2663(2): jnz 0x7b(%rip)
2665(7): lea 0x139b0(%rip),%rsi
266c(2): xor %edi,%edi
266e(5): mov $0x5,%edx
2673(5): call 0xfffff41d(%rip)
2678(7): lea 0x13910(%rip),%rcx
267f(7): lea 0x137aa(%rip),%rdx
2686(3): mov %rax,%rsi
2689(5): mov $0x1,%edi
268e(2): xor %eax,%eax
2690(5): call 0xfffff620(%rip)
2695(3): cmp %rbx,%r12
2698(7): lea 0x13911(%rip),%rcx
269f(7): lea 0x140bb(%rip),%rbx
26a6(4): cmove %rcx,%rbx
26aa(7): lea 0x137ef(%rip),%rsi
26b1(2): xor %edi,%edi
26b3(5): mov $0x5,%edx
26b8(5): call 0xfffff3d8(%rip)
26bd(3): mov %rbx,%rcx
26c0(3): mov %rax,%rsi
26c3(3): mov %r12,%rdx
26c6(5): mov $0x1,%edi
26cb(2): xor %eax,%eax
26cd(5): call 0xfffff5e3(%rip)
26d2(5): jmp 0xfffffcb4(%rip)
26d7(7): lea 0x138b1(%rip),%r12
26de(7): mov 0x2189a3(%rip),%r13
26e5(7): lea 0x1376c(%rip),%rsi
26ec(2): xor %edi,%edi
26ee(5): mov $0x5,%edx
26f3(5): call 0xfffff39d(%rip)
26f8(3): mov %r13,%rsi
26fb(3): mov %rax,%rdi
26fe(5): call 0xfffff4b2(%rip)
2703(5): jmp 0xffffff62(%rip)
2708(5): mov $0xa,%esi
270d(5): call 0xfffff403(%rip)
2712(5): jmp 0xfffffcbe(%rip)
2717(5): call 0xfffff379(%rip)
271c(7): lea 0x1370d(%rip),%rcx
2723(7): lea 0x138e0(%rip),%rdx
272a(3): mov %rax,%rsi
272d(5): mov $0x1,%edi
2732(2): xor %eax,%eax
2734(5): call 0xfffff57c(%rip)
2739(2): xor %esi,%esi
273b(5): mov $0x5,%edi
2740(5): call 0xfffff560(%rip)
2745(3): test %rax,%rax
2748(2): jz 0x1e(%rip)
274a(7): lea 0x138c7(%rip),%rsi
2751(5): mov $0x3,%edx
2756(3): mov %rax,%rdi
2759(5): call 0xfffff2a7(%rip)
275e(2): test %eax,%eax
2760(6): jnz 0xffffff77(%rip)
2766(7): lea 0x138af(%rip),%rsi
276d(5): mov $0x5,%edx
2772(2): xor %edi,%edi
2774(7): lea 0x13814(%rip),%r12
277b(7): lea 0x1382e(%rip),%rbx
2782(5): call 0xfffff30e(%rip)
2787(7): lea 0x13801(%rip),%rcx
278e(7): lea 0x1369b(%rip),%rdx
2795(3): mov %rax,%rsi
2798(5): mov $0x1,%edi
279d(2): xor %eax,%eax
279f(5): call 0xfffff511(%rip)
27a4(5): jmp 0xffffff06(%rip)

"docolon" :
27b0(2): push %r15
27b2(2): push %r14
27b4(2): push %r13
27b6(2): push %r12
27b8(1): push %rbp
27b9(1): push %rbx
27ba(3): mov %rsi,%rbp
27bd(3): mov %rdi,%rbx
27c0(7): sub $0x1c8,%rsp
27c7(9): mov $0x28,%rax
27d0(8): mov %rax,0x1b8(%rsp)
27d8(2): xor %eax,%eax
27da(5): call 0xfffffb06(%rip)
27df(3): mov %rbp,%rdi
27e2(5): call 0xfffffafe(%rip)
27e7(4): mov 0x8(%rbp),%r12
27eb(8): lea 0xb0(%rsp),%rax
27f3(5): lea 0x30(%rsp),%rbp
27f8(9): mov $0x0,0x10(%rsp)
2801(9): mov $0x0,0x18(%rsp)
280a(9): mov $0x0,0x20(%rsp)
2813(9): mov $0x0,0x30(%rsp)
281c(3): mov %r12,%rdi
281f(9): mov $0x0,0x38(%rsp)
2828(5): mov %rax,0x50(%rsp)
282d(9): mov $0x0,0x58(%rsp)
2836(b): mov $0x2c6,0x2189f7(%rip)
2841(5): call 0xfffff26f(%rip)
2846(3): mov %rbp,%rdx
2849(3): mov %rax,%rsi
284c(3): mov %r12,%rdi
284f(5): call 0x12051(%rip)
2854(3): test %rax,%rax
2857(6): jnz 0x363(%rip)
285d(4): mov 0x8(%rbx),%r12
2861(5): and $0x7f,0x68(%rsp)
2866(3): mov %r12,%rdi
2869(5): call 0xfffff247(%rip)
286e(5): lea 0x10(%rsp),%r8
2873(2): xor %ecx,%ecx
2875(3): mov %rax,%rdx
2878(3): mov %r12,%rsi
287b(3): mov %rbp,%rdi
287e(5): call 0x129a2(%rip)
2883(3): test %rax,%rax
2886(3): mov %rax,%r15
2889(6): js 0xcf(%rip)
288f(5): mov 0x60(%rsp),%r14
2894(3): test %r14,%r14
2897(6): jz 0x89(%rip)
289d(5): mov 0x20(%rsp),%rax
28a2(4): mov 0x8(%rbx),%rdx
28a6(4): mov 0x8(%rax),%rax
28aa(4): mov $0x0,0x0(%rdx,%rax,1)
28ae(5): mov 0x18(%rsp),%rax
28b3(4): mov 0x8(%rax),%rdi
28b7(4): add 0x8(%rbx),%rdi
28bb(5): call 0xfffff8a5(%rip)
28c0(3): mov %rax,%rbx
28c3(6): cmp $0x0,0x10(%rsp)
28c9(2): jz 0x16(%rip)
28cb(5): mov 0x18(%rsp),%rdi
28d0(5): call 0xfffff100(%rip)
28d5(5): mov 0x20(%rsp),%rdi
28da(5): call 0xfffff0f6(%rip)
28df(3): mov %rbp,%rdi
28e2(9): mov $0x0,0x50(%rsp)
28eb(5): call 0x12845(%rip)
28f0(8): mov 0x1b8(%rsp),%rcx
28f8(9): xor $0x28,%rcx
2901(3): mov %rbx,%rax
2904(6): jnz 0x2ce(%rip)
290a(7): add $0x1c8,%rsp
2911(1): pop %rbx
2912(1): pop %rbp
2913(2): pop %r12
2915(2): pop %r13
2917(2): pop %r14
2919(2): pop %r15
291b(1): ret near (%rsp)
291c(4): nop 0x0(%rax)
2920(5): call 0xfffff180(%rip)
2925(4): cmp $0x1,%rax
2929(3): mov %r15,%r12
292c(2): jnz 0x7c(%rip)
292e(5): mov $0x18,%edi
2933(5): call 0x448d(%rip)
2938(4): lea 0x8(%rax),%rdi
293c(6): mov $0x0,(%rax)
2942(3): mov %r12,%rsi
2945(3): mov %rax,%rbx
2948(5): call 0xfffff378(%rip)
294d(5): jmp 0xffffff76(%rip)
2952(6): nop 0x0(%rax,%rax,1)
2958(4): cmp $0xffffffff,%rax
295c(6): jnz 0x29a(%rip)
2962(6): cmp $0x0,0x60(%rsp)
2968(2): jz 0x18(%rip)
296a(7): lea 0x13df0(%rip),%rdi
2971(5): call 0xfffff7ef(%rip)
2976(3): mov %rax,%rbx
2979(5): jmp 0xffffff4a(%rip)
297e(2): nop 
2980(5): mov $0x18,%edi
2985(5): call 0x443b(%rip)
298a(4): lea 0x8(%rax),%rdi
298e(6): mov $0x0,(%rax)
2994(2): xor %esi,%esi
2996(3): mov %rax,%rbx
2999(5): call 0xfffff327(%rip)
299e(5): jmp 0xffffff25(%rip)
29a3(5): nop 0x0(%rax,%rax,1)
29a8(5): lea 0x70(%rsp),%r13
29ad(4): mov 0x8(%rbx),%r12
29b1(5): mov $0x0,0x70(%rsp)
29b6(9): mov $0x0,0x74(%rsp)
29bf(5): mov $0x0,0x7c(%rsp)
29c4(4): lea 0x4(%r13),%rax
29c8(8): mov %r12,0x80(%rsp)
29d0(5): mov %rax,0x8(%rsp)
29d5(5): jmp 0x93(%rip)
29da(6): nop 0x0(%rax,%rax,1)
29e0(8): mov 0x80(%rsp),%rbx
29e8(7): lea 0x137b1(%rip),%rcx
29ef(3): movzx (%rbx),%edx
29f2(2): mov %edx,%eax
29f4(3): shr $0x5,%al
29f7(3): and $0x7,%eax
29fa(3): mov 0x0(%rcx,%rax,4),%eax
29fd(3): bt %edx,%eax
2a00(6): jnb 0x118(%rip)
2a06(c): mov $0x1,0x88(%rsp)
2a12(3): movsx (%rbx),%eax
2a15(8): mov $0x1,0x90(%rsp)
2a1d(5): mov $0x1,0x7c(%rsp)
2a22(7): mov %eax,0x94(%rsp)
2a29(7): mov 0x94(%rsp),%eax
2a30(2): test %eax,%eax
2a32(6): jz 0x13e(%rip)
2a38(8): mov 0x80(%rsp),%rbx
2a40(3): mov %rbx,%rax
2a43(3): sub %r12,%rax
2a46(3): cmp %r15,%rax
2a49(6): jnb 0x127(%rip)
2a4f(8): add 0x88(%rsp),%rbx
2a57(4): add $0x1,%r14
2a5b(5): mov $0x0,0x7c(%rsp)
2a60(8): mov %rbx,0x80(%rsp)
2a68(5): cmp $0x0,0x70(%rsp)
2a6d(6): jz 0xffffff73(%rip)
2a73(5): call 0xfffff02d(%rip)
2a78(8): mov 0x80(%rsp),%rbx
2a80(3): mov %rax,%rsi
2a83(3): mov %rbx,%rdi
2a86(5): call 0x3a2a(%rip)
2a8b(4): lea 0x4(%r13),%rcx
2a8f(4): lea 0x24(%r13),%rdi
2a93(3): mov %rax,%rdx
2a96(3): mov %rbx,%rsi
2a99(5): call 0x45b7(%rip)
2a9e(4): cmp $0xffffffff,%rax
2aa2(8): mov %rax,0x88(%rsp)
2aaa(6): jz 0x8e(%rip)
2ab0(4): cmp $0xfffffffe,%rax
2ab4(6): jz 0xcc(%rip)
2aba(3): test %rax,%rax
2abd(2): jnz 0x2e(%rip)
2abf(8): mov 0x80(%rsp),%rbx
2ac7(c): mov $0x1,0x88(%rsp)
2ad3(3): cmp $0x0,(%rbx)
2ad6(6): jnz 0x155(%rip)
2adc(7): mov 0x94(%rsp),%edx
2ae3(2): test %edx,%edx
2ae5(6): jnz 0x141(%rip)
2aeb(4): lea 0x4(%r13),%rdi
2aef(8): mov $0x1,0x90(%rsp)
2af7(5): call 0xfffff299(%rip)
2afc(2): test %eax,%eax
2afe(6): jz 0xb2(%rip)
2b04(5): mov $0x0,0x70(%rsp)
2b09(5): mov $0x1,0x7c(%rsp)
2b0e(5): jmp 0xffffff1b(%rip)
2b13(5): nop 0x0(%rax,%rax,1)
2b18(5): mov 0x8(%rsp),%rdi
2b1d(5): call 0xfffff273(%rip)
2b22(2): test %eax,%eax
2b24(6): jz 0xb3(%rip)
2b2a(5): mov $0x1,0x70(%rsp)
2b2f(5): jmp 0xffffff44(%rip)
2b34(4): nop 0x0(%rax)
2b38(8): mov 0x80(%rsp),%rbx
2b40(c): mov $0x1,0x88(%rsp)
2b4c(8): mov $0x0,0x90(%rsp)
2b54(5): mov $0x1,0x7c(%rsp)
2b59(3): mov %rbx,%rax
2b5c(3): sub %r12,%rax
2b5f(3): cmp %r15,%rax
2b62(6): jb 0xfffffeed(%rip)
2b68(8): nop 0x0(%rax,%rax,1)
2b70(3): mov %r14,%r12
2b73(5): jmp 0xfffffdbb(%rip)
2b78(8): nop 0x0(%rax,%rax,1)
2b80(8): mov 0x80(%rsp),%rbx
2b88(3): mov %rbx,%rdi
2b8b(5): call 0xffffef25(%rip)
2b90(8): mov $0x0,0x90(%rsp)
2b98(8): mov %rax,0x88(%rsp)
2ba0(5): mov $0x1,0x7c(%rsp)
2ba5(5): jmp 0xfffffe9b(%rip)
2baa(6): nop 0x0(%rax,%rax,1)
2bb0(5): mov $0x1,0x7c(%rsp)
2bb5(5): jmp 0xfffffe74(%rip)
2bba(7): lea 0x135c2(%rip),%rdx
2bc1(3): mov %rax,%rcx
2bc4(2): xor %esi,%esi
2bc6(5): mov $0x2,%edi
2bcb(2): xor %eax,%eax
2bcd(5): call 0xfffff133(%rip)
2bd2(5): call 0xffffeefe(%rip)
2bd7(7): lea 0x13582(%rip),%rcx
2bde(7): lea 0x12a2b(%rip),%rsi
2be5(7): lea 0x1344b(%rip),%rdi
2bec(5): mov $0x96,%edx
2bf1(5): call 0xffffef5f(%rip)
2bf6(7): lea 0x132db(%rip),%rsi
2bfd(2): xor %edi,%edi
2bff(5): mov $0x5,%edx
2c04(5): call 0xffffee8c(%rip)
2c09(4): cmp $0xfffffffe,%r15
2c0d(3): mov %rax,%rbx
2c10(5): mov $0x4b,%esi
2c15(2): jz 0x35(%rip)
2c17(3): mov %rbx,%rdx
2c1a(5): mov $0x3,%edi
2c1f(2): xor %eax,%eax
2c21(5): call 0xfffff0df(%rip)
2c26(5): call 0xfffff1ba(%rip)
2c2b(7): lea 0x1352e(%rip),%rcx
2c32(7): lea 0x129d7(%rip),%rsi
2c39(7): lea 0x1340e(%rip),%rdi
2c40(5): mov $0xb2,%edx
2c45(5): call 0xffffef0b(%rip)
2c4a(5): call 0xffffeda6(%rip)
2c4f(2): mov (%rax),%esi
2c51(2): jmp 0xffffffc6(%rip)

"eval6" :
2c60(2): push %r15
2c62(2): push %r14
2c64(2): push %r13
2c66(2): push %r12
2c68(1): push %rbp
2c69(1): push %rbx
2c6a(2): mov %edi,%ebx
2c6c(7): lea 0x133f2(%rip),%rdi
2c73(7): sub $0x108,%rsp
2c7a(9): mov $0x28,%rax
2c83(8): mov %rax,0xf8(%rsp)
2c8b(2): xor %eax,%eax
2c8d(5): call 0xfffff453(%rip)
2c92(2): test %al,%al
2c94(6): jnz 0xec(%rip)
2c9a(7): lea 0x133c6(%rip),%rdi
2ca1(4): movzx %bl,%r15d
2ca5(5): call 0xfffff43b(%rip)
2caa(2): test %al,%al
2cac(6): jnz 0x124(%rip)
2cb2(7): lea 0x133b5(%rip),%rdi
2cb9(5): call 0xfffff427(%rip)
2cbe(2): test %al,%al
2cc0(6): jnz 0x260(%rip)
2cc6(7): lea 0x133a7(%rip),%rdi
2ccd(5): call 0xfffff413(%rip)
2cd2(2): test %al,%al
2cd4(3): mov %eax,%r14d
2cd7(6): jnz 0x2c9(%rip)
2cdd(7): lea 0x13396(%rip),%rdi
2ce4(5): call 0xfffff3fc(%rip)
2ce9(2): test %al,%al
2ceb(6): jnz 0x135(%rip)
2cf1(5): call 0xfffff41f(%rip)
2cf6(7): lea 0x13384(%rip),%rdi
2cfd(5): call 0xfffff3e3(%rip)
2d02(2): test %al,%al
2d04(6): jz 0x25c(%rip)
2d0a(3): mov %r15d,%edi
2d0d(5): call 0x10d3(%rip)
2d12(3): mov %rax,%r13
2d15(7): mov 0x2183b4(%rip),%rax
2d1c(4): cmp $0x0,(%rax)
2d20(6): jz 0xaa8(%rip)
2d26(7): lea 0x139f0(%rip),%rdi
2d2d(5): call 0xfffff3b3(%rip)
2d32(2): test %al,%al
2d34(2): jnz 0x6e(%rip)
2d36(7): mov 0x218393(%rip),%rax
2d3d(5): mov $0x8,%esi
2d42(2): xor %edi,%edi
2d44(3): mov (%rax),%rdx
2d47(5): call 0x3359(%rip)
2d4c(7): lea 0x131d5(%rip),%rsi
2d53(3): mov %rax,%rbx
2d56(5): mov $0x5,%edx
2d5b(2): xor %edi,%edi
2d5d(5): call 0xffffed33(%rip)
2d62(3): mov %rbx,%rcx
2d65(3): mov %rax,%rdx
2d68(2): xor %esi,%esi
2d6a(5): mov $0x2,%edi
2d6f(2): xor %eax,%eax
2d71(5): call 0xffffef8f(%rip)
2d76(a): nop 0x0(%rax,%rax,1)
2d80(5): call 0xfffff390(%rip)
2d85(7): mov 0x218344(%rip),%rax
2d8c(3): mov (%rax),%rdi
2d8f(4): lea 0x8(%rax),%rdx
2d93(7): mov %rdx,0x218336(%rip)
2d9a(5): call 0xfffff3c6(%rip)
2d9f(3): mov %rax,%r13
2da2(8): mov 0xf8(%rsp),%rcx
2daa(9): xor $0x28,%rcx
2db3(3): mov %r13,%rax
2db6(6): jnz 0x9ca(%rip)
2dbc(7): add $0x108,%rsp
2dc3(1): pop %rbx
2dc4(1): pop %rbp
2dc5(2): pop %r12
2dc7(2): pop %r13
2dc9(2): pop %r14
2dcb(2): pop %r15
2dcd(1): ret near (%rsp)
2dce(2): nop 
2dd0(3): mov %r15d,%edi
2dd3(5): call 0xfffffe8d(%rip)
2dd8(3): mov %rax,%rbx
2ddb(3): mov %rax,%rdi
2dde(5): call 0xfffff502(%rip)
2de3(4): mov 0x8(%rbx),%rdi
2de7(5): call 0x1769(%rip)
2dec(5): mov $0x18,%edi
2df1(3): mov %rax,%rbp
2df4(5): call 0x3fcc(%rip)
2df9(4): lea 0x8(%rax),%rdi
2dfd(6): mov $0x0,(%rax)
2e03(3): mov %rbp,%rsi
2e06(3): mov %rax,%r13
2e09(5): call 0xffffeeb7(%rip)
2e0e(3): mov %rbx,%rdi
2e11(5): call 0xfffff38f(%rip)
2e16(2): jmp 0xffffff8c(%rip)
2e18(8): nop 0x0(%rax,%rax,1)
2e20(3): mov %r15d,%edi
2e23(5): call 0xfffffe3d(%rip)
2e28(3): mov %r15d,%edi
2e2b(3): mov %rax,%rbp
2e2e(5): call 0xfffffe32(%rip)
2e33(3): mov %r15d,%edi
2e36(3): mov %rax,%rbx
2e39(5): call 0xfffffe27(%rip)
2e3e(3): mov %rbp,%rdi
2e41(3): mov %rax,%r12
2e44(5): call 0xfffff49c(%rip)
2e49(3): mov %rbx,%rdi
2e4c(5): call 0xfffff404(%rip)
2e51(2): test %al,%al
2e53(6): jz 0x1bd(%rip)
2e59(3): mov %r12,%rdi
2e5c(5): call 0xfffff3f4(%rip)
2e61(2): test %al,%al
2e63(6): jz 0x1ad(%rip)
2e69(3): mov 0xc(%rbx),%edx
2e6c(7): mov $0xffffffff,%r13
2e73(2): test %edx,%edx
2e75(2): js 0x12(%rip)
2e77(3): cmp $0x1,%edx
2e7a(7): mov $0xfffffffe,%r13
2e81(6): jle 0x859(%rip)
2e87(5): mov 0xc(%r12),%eax
2e8c(7): mov $0xffffffff,%r15
2e93(2): test %eax,%eax
2e95(2): js 0x12(%rip)
2e97(3): cmp $0x1,%eax
2e9a(7): mov $0xfffffffe,%r15
2ea1(6): jle 0x815(%rip)
2ea7(4): mov 0x8(%rbp),%rax
2eab(3): mov %rax,%rdi
2eae(5): mov %rax,0x8(%rsp)
2eb3(5): call 0xffffebfd(%rip)
2eb8(4): mov %rax,(%rsp)
2ebc(5): call 0xffffebe4(%rip)
2ec1(4): cmp $0x1,%rax
2ec5(4): mov (%rsp),%rdx
2ec9(2): jbe 0xf(%rip)
2ecb(5): mov 0x8(%rsp),%rdi
2ed0(5): call 0x1680(%rip)
2ed5(3): mov %rax,%rdx
2ed8(3): cmp %rdx,%r13
2edb(2): jnbe 0x15(%rip)
2edd(3): test %r14b,%r14b
2ee0(2): jnz 0x10(%rip)
2ee2(4): lea 0xffffffff(%r15),%rax
2ee6(4): cmp $0xfffffffd,%rax
2eea(6): jbe 0x550(%rip)
2ef0(7): lea 0x1386a(%rip),%rdi
2ef7(5): call 0x40f9(%rip)
2efc(4): mov %rax,(%rsp)
2f00(4): mov (%rsp),%r14
2f04(3): mov %r14,%rdi
2f07(5): call 0xfffff259(%rip)
2f0c(3): mov %r14,%rdi
2f0f(3): mov %rax,%r13
2f12(5): call 0xffffeabe(%rip)
2f17(5): jmp 0x108(%rip)
2f1c(4): nop 0x0(%rax)
2f20(3): mov %r15d,%edi
2f23(5): call 0xfffffd3d(%rip)
2f28(3): mov %r15d,%edi
2f2b(3): mov %rax,%r13
2f2e(5): call 0xfffffd32(%rip)
2f33(2): test %bl,%bl
2f35(3): mov %rax,%rbp
2f38(2): jz 0x1b(%rip)
2f3a(3): mov %r13,%rdi
2f3d(3): mov %rax,%rsi
2f40(5): call 0xfffff870(%rip)
2f45(3): mov %rax,%rbx
2f48(3): mov %r13,%rdi
2f4b(3): mov %rbx,%r13
2f4e(5): call 0xfffff252(%rip)
2f53(3): mov %rbp,%rdi
2f56(5): call 0xfffff24a(%rip)
2f5b(5): jmp 0xfffffe47(%rip)
2f60(7): lea 0x137b6(%rip),%rdi
2f67(5): call 0xfffff179(%rip)
2f6c(2): test %al,%al
2f6e(6): jz 0xfffffe17(%rip)
2f74(7): lea 0x13108(%rip),%rsi
2f7b(5): mov $0x5,%edx
2f80(2): xor %edi,%edi
2f82(5): call 0xffffeb0e(%rip)
2f87(2): xor %esi,%esi
2f89(3): mov %rax,%rdx
2f8c(5): mov $0x2,%edi
2f91(2): xor %eax,%eax
2f93(5): call 0xffffed6d(%rip)
2f98(8): nop 0x0(%rax,%rax,1)
2fa0(3): mov %r15d,%edi
2fa3(5): call 0xfffffcbd(%rip)
2fa8(3): mov %r15d,%edi
2fab(3): mov %rax,%r12
2fae(5): call 0xfffffcb2(%rip)
2fb3(3): mov %r12,%rdi
2fb6(3): mov %rax,%rbx
2fb9(5): call 0xfffff327(%rip)
2fbe(3): mov %rbx,%rdi
2fc1(5): call 0xfffff31f(%rip)
2fc6(4): mov 0x8(%rbx),%r13
2fca(5): cmp $0x0,0x0(%r13)
2fcf(2): jnz 0x71(%rip)
2fd1(2): xor %ebp,%ebp
2fd3(5): mov $0x18,%edi
2fd8(5): call 0x3de8(%rip)
2fdd(4): lea 0x8(%rax),%rdi
2fe1(6): mov $0x0,(%rax)
2fe7(3): mov %rbp,%rsi
2fea(3): mov %rax,%r13
2fed(5): call 0xffffecd3(%rip)
2ff2(3): mov %r12,%rdi
2ff5(5): call 0xfffff1ab(%rip)
2ffa(3): mov %rbx,%rdi
2ffd(5): call 0xfffff1a3(%rip)
3002(5): jmp 0xfffffda0(%rip)
3007(9): nop 0x0(%rax,%rax,1)
3010(7): lea 0x1374a(%rip),%rdi
3017(5): call 0xfffff149(%rip)
301c(3): mov %rax,%r13
301f(3): mov %rbp,%rdi
3022(5): call 0xfffff17e(%rip)
3027(3): mov %rbx,%rdi
302a(5): call 0xfffff176(%rip)
302f(3): mov %r12,%rdi
3032(5): call 0xfffff16e(%rip)
3037(5): jmp 0xfffffd6b(%rip)
303c(4): nop 0x0(%rax)
3040(5): mov 0x8(%r12),%r14
3045(5): call 0xffffea5b(%rip)
304a(4): cmp $0x1,%rax
304e(2): jnbe 0x22(%rip)
3050(3): mov %r13,%rsi
3053(3): mov %r14,%rdi
3056(5): call 0xffffeb1a(%rip)
305b(5): cmp $0x0,0x0(%r14,%rax,1)
3060(6): jz 0xffffff71(%rip)
3066(4): lea 0x1(%rax),%rbp
306a(5): jmp 0xffffff69(%rip)
306f(1): nop 
3070(5): mov %r14,0x40(%rsp)
3075(5): lea 0x70(%rsp),%r14
307a(5): mov $0x0,0x30(%rsp)
307f(2): xor %ebp,%ebp
3081(5): cmp $0x0,0x30(%rsp)
3086(9): mov $0x0,0x34(%rsp)
308f(4): lea 0x24(%r14),%rax
3093(5): mov $0x0,0x3c(%rsp)
3098(4): mov %rax,(%rsp)
309c(5): lea 0x30(%rsp),%rax
30a1(5): mov %rax,0x10(%rsp)
30a6(6): jnz 0x86(%rip)
30ac(5): mov 0x40(%rsp),%rdi
30b1(7): lea 0x130e8(%rip),%rsi
30b8(3): movzx (%rdi),%edx
30bb(2): mov %edx,%eax
30bd(3): shr $0x5,%al
30c0(3): and $0x7,%eax
30c3(3): mov 0x0(%rsi,%rax,4),%eax
30c6(3): bt %edx,%eax
30c9(6): jnb 0x321(%rip)
30cf(9): mov $0x1,0x48(%rsp)
30d8(3): movsx (%rdi),%eax
30db(5): mov $0x1,0x50(%rsp)
30e0(5): mov $0x1,0x3c(%rsp)
30e5(2): test %eax,%eax
30e7(4): mov %eax,0x54(%rsp)
30eb(6): jz 0xfffffee6(%rip)
30f1(4): add $0x1,%rbp
30f5(3): movsx (%rdi),%esi
30f8(5): mov %rdi,0x8(%rsp)
30fd(3): mov %r13,%rdi
3100(5): call 0x11a0(%rip)
3105(3): test %rax,%rax
3108(6): jnz 0xfffffecb(%rip)
310e(5): mov 0x8(%rsp),%rdx
3113(5): mov $0x1,%edi
3118(3): add %rdx,%rdi
311b(5): cmp $0x0,0x30(%rsp)
3120(5): mov $0x0,0x3c(%rsp)
3125(5): mov %rdi,0x40(%rsp)
312a(2): jz 0xffffff82(%rip)
312c(5): call 0xffffe974(%rip)
3131(5): mov 0x40(%rsp),%r8
3136(3): mov %rax,%rsi
3139(3): mov %r8,%rdi
313c(5): mov %r8,0x8(%rsp)
3141(5): call 0x336f(%rip)
3146(5): mov 0x10(%rsp),%rsi
314b(5): mov 0x8(%rsp),%r8
3150(3): mov %rax,%rdx
3153(4): lea 0x4(%rsi),%rcx
3157(4): lea 0x24(%rsi),%rdi
315b(3): mov %r8,%rsi
315e(5): call 0x3ef2(%rip)
3163(4): cmp $0xffffffff,%rax
3167(5): mov %rax,0x48(%rsp)
316c(6): jz 0x29e(%rip)
3172(4): cmp $0xfffffffe,%rax
3176(6): jz 0x522(%rip)
317c(3): test %rax,%rax
317f(2): jnz 0x25(%rip)
3181(5): mov 0x40(%rsp),%rdi
3186(9): mov $0x1,0x48(%rsp)
318f(3): cmp $0x0,(%rdi)
3192(6): jnz 0x617(%rip)
3198(4): mov 0x54(%rsp),%esi
319c(2): test %esi,%esi
319e(6): jnz 0x606(%rip)
31a4(5): mov 0x10(%rsp),%rax
31a9(5): mov $0x1,0x50(%rsp)
31ae(4): lea 0x4(%rax),%rdi
31b2(5): call 0xffffebde(%rip)
31b7(2): test %eax,%eax
31b9(6): jz 0x546(%rip)
31bf(5): mov $0x0,0x30(%rsp)
31c4(5): mov $0x1,0x3c(%rsp)
31c9(4): mov 0x54(%rsp),%ecx
31cd(2): test %ecx,%ecx
31cf(6): jz 0xfffffe02(%rip)
31d5(4): add $0x1,%rbp
31d9(6): cmp $0x1,0x48(%rsp)
31df(2): jnz 0x11(%rip)
31e1(5): mov 0x40(%rsp),%rdi
31e6(5): jmp 0xffffff0f(%rip)
31eb(5): nop 0x0(%rax,%rax,1)
31f0(8): mov %r13,0x80(%rsp)
31f8(5): mov $0x0,0x70(%rsp)
31fd(8): mov $0x0,0x4(%r14)
3205(5): mov $0x0,0x7c(%rsp)
320a(5): jmp 0x88(%rip)
320f(1): nop 
3210(8): mov 0x80(%rsp),%rcx
3218(7): lea 0x12f81(%rip),%rsi
321f(3): movzx (%rcx),%edx
3222(2): mov %edx,%eax
3224(3): shr $0x5,%al
3227(3): and $0x7,%eax
322a(3): mov 0x0(%rsi,%rax,4),%eax
322d(3): bt %edx,%eax
3230(6): jnb 0x160(%rip)
3236(c): mov $0x1,0x88(%rsp)
3242(3): movsx (%rcx),%eax
3245(8): mov $0x1,0x90(%rsp)
324d(5): mov $0x1,0x7c(%rsp)
3252(7): mov %eax,0x94(%rsp)
3259(7): mov 0x94(%rsp),%eax
3260(2): test %eax,%eax
3262(6): jz 0x1c9(%rip)
3268(5): cmp $0x0,0x50(%rsp)
326d(6): jz 0xec(%rip)
3273(4): cmp %eax,0x54(%rsp)
3277(6): jz 0xfffffd5c(%rip)
327d(8): mov 0x88(%rsp),%r15
3285(8): add %r15,0x80(%rsp)
328d(5): mov $0x0,0x7c(%rsp)
3292(5): cmp $0x0,0x70(%rsp)
3297(6): jz 0xffffff79(%rip)
329d(5): call 0xffffe803(%rip)
32a2(8): mov 0x80(%rsp),%r15
32aa(3): mov %rax,%rsi
32ad(3): mov %r15,%rdi
32b0(5): call 0x3200(%rip)
32b5(4): mov (%rsp),%rdi
32b9(4): lea 0x4(%r14),%rcx
32bd(3): mov %rax,%rdx
32c0(3): mov %r15,%rsi
32c3(5): call 0x3d8d(%rip)
32c8(4): cmp $0xffffffff,%rax
32cc(8): mov %rax,0x88(%rsp)
32d4(2): jz 0x6c(%rip)
32d6(4): cmp $0xfffffffe,%rax
32da(6): jz 0xd6(%rip)
32e0(3): test %rax,%rax
32e3(2): jnz 0x2e(%rip)
32e5(8): mov 0x80(%rsp),%rax
32ed(c): mov $0x1,0x88(%rsp)
32f9(3): cmp $0x0,(%rax)
32fc(6): jnz 0x4ad(%rip)
3302(7): mov 0x94(%rsp),%edi
3309(2): test %edi,%edi
330b(6): jnz 0x499(%rip)
3311(4): lea 0x4(%r14),%rdi
3315(8): mov $0x1,0x90(%rsp)
331d(5): call 0xffffea73(%rip)
3322(2): test %eax,%eax
3324(6): jz 0xbc(%rip)
332a(5): mov $0x0,0x70(%rsp)
332f(5): mov $0x1,0x7c(%rsp)
3334(5): jmp 0xffffff25(%rip)
3339(7): nop 0x0(%rax)
3340(c): mov $0x1,0x88(%rsp)
334c(8): mov $0x0,0x90(%rsp)
3354(5): mov $0x1,0x7c(%rsp)
3359(8): mov 0x88(%rsp),%r15
3361(5): cmp 0x48(%rsp),%r15
3366(6): jnz 0xffffff1f(%rip)
336c(5): mov 0x40(%rsp),%rsi
3371(8): mov 0x80(%rsp),%rdi
3379(3): mov %r15,%rdx
337c(5): call 0xffffe814(%rip)
3381(2): test %eax,%eax
3383(6): jz 0xfffffc50(%rip)
3389(5): jmp 0xfffffefc(%rip)
338e(2): nop 
3390(4): lea 0x4(%r14),%rdi
3394(5): call 0xffffe9fc(%rip)
3399(2): test %eax,%eax
339b(6): jz 0x3ea(%rip)
33a1(5): mov $0x1,0x70(%rsp)
33a6(5): jmp 0xfffffef7(%rip)
33ab(5): nop 0x0(%rax,%rax,1)
33b0(8): mov 0x80(%rsp),%rdi
33b8(5): call 0xffffe6f8(%rip)
33bd(8): mov $0x0,0x90(%rsp)
33c5(8): mov %rax,0x88(%rsp)
33cd(5): mov $0x1,0x7c(%rsp)
33d2(5): jmp 0xffffff87(%rip)
33d7(9): nop 0x0(%rax,%rax,1)
33e0(5): mov $0x1,0x7c(%rsp)
33e5(5): jmp 0xfffffe74(%rip)
33ea(5): mov 0x10(%rsp),%rax
33ef(4): lea 0x4(%rax),%rdi
33f3(5): call 0xffffe99d(%rip)
33f8(2): test %eax,%eax
33fa(6): jz 0x38b(%rip)
3400(5): mov $0x1,0x30(%rsp)
3405(5): jmp 0xfffffd27(%rip)
340a(9): mov $0x1,0x48(%rsp)
3413(5): mov $0x0,0x50(%rsp)
3418(4): add $0x1,%rbp
341c(5): mov $0x1,0x3c(%rsp)
3421(5): mov 0x40(%rsp),%rdi
3426(5): jmp 0xfffffccf(%rip)
342b(5): mov 0x40(%rsp),%rdx
3430(5): mov 0x48(%rsp),%rdi
3435(5): jmp 0xfffffce3(%rip)
343a(3): sub %r13,%rdx
343d(4): lea 0x1(%rdx),%rax
3441(3): cmp %r15,%rax
3444(4): cmovbe %rax,%r15
3448(5): call 0xffffe658(%rip)
344d(4): cmp $0x1,%rax
3451(6): jz 0x213(%rip)
3457(4): mov (%rsp),%rdi
345b(6): mov $0x1,%r14d
3461(4): add $0x1,%rdi
3465(5): call 0x395b(%rip)
346a(5): mov 0x8(%rsp),%rsi
346f(4): mov %rax,(%rsp)
3473(5): mov %rax,0x8(%rsp)
3478(8): lea 0xb0(%rsp),%rax
3480(8): mov $0x0,0xb0(%rsp)
3488(c): mov $0x0,0xb4(%rsp)
3494(8): mov $0x0,0xbc(%rsp)
349c(5): mov %rax,0x20(%rsp)
34a1(8): lea 0xb4(%rsp),%rax
34a9(8): mov %rsi,0xc0(%rsp)
34b1(5): mov %rax,0x28(%rsp)
34b6(5): jmp 0xc7(%rip)
34bb(5): nop 0x0(%rax,%rax,1)
34c0(8): mov 0xc0(%rsp),%rcx
34c8(7): lea 0x12cd1(%rip),%rsi
34cf(3): movzx (%rcx),%edx
34d2(2): mov %edx,%eax
34d4(3): shr $0x5,%al
34d7(3): and $0x7,%eax
34da(3): mov 0x0(%rsi,%rax,4),%eax
34dd(3): bt %edx,%eax
34e0(6): jnb 0x165(%rip)
34e6(c): mov $0x1,0xc8(%rsp)
34f2(3): movsx (%rcx),%eax
34f5(8): mov $0x1,0xd0(%rsp)
34fd(8): mov $0x1,0xbc(%rsp)
3505(7): mov %eax,0xd4(%rsp)
350c(7): mov 0xd4(%rsp),%eax
3513(2): test %eax,%eax
3515(6): jz 0x176(%rip)
351b(3): test %r15,%r15
351e(6): jz 0x16d(%rip)
3524(3): cmp %r14,%r13
3527(8): mov 0xc8(%rsp),%r8
352f(8): mov 0xc0(%rsp),%rcx
3537(2): jnbe 0x2f(%rip)
3539(5): mov 0x8(%rsp),%rdi
353e(3): mov %r8,%rdx
3541(3): mov %rcx,%rsi
3544(5): mov %r8,0x18(%rsp)
3549(5): mov %rcx,0x10(%rsp)
354e(4): sub $0x1,%r15
3552(5): call 0xffffe78e(%rip)
3557(5): mov 0x18(%rsp),%r8
355c(5): mov 0x10(%rsp),%rcx
3561(5): mov %rax,0x8(%rsp)
3566(3): add %r8,%rcx
3569(8): mov $0x0,0xbc(%rsp)
3571(4): add $0x1,%r14
3575(8): mov %rcx,0xc0(%rsp)
357d(8): cmp $0x0,0xb0(%rsp)
3585(6): jz 0xffffff3b(%rip)
358b(5): call 0xffffe515(%rip)
3590(8): mov 0xc0(%rsp),%r8
3598(3): mov %rax,%rsi
359b(3): mov %r8,%rdi
359e(5): mov %r8,0x10(%rsp)
35a3(5): call 0x2f0d(%rip)
35a8(5): mov 0x20(%rsp),%rsi
35ad(5): mov 0x10(%rsp),%r8
35b2(3): mov %rax,%rdx
35b5(4): lea 0x4(%rsi),%rcx
35b9(4): lea 0x24(%rsi),%rdi
35bd(3): mov %r8,%rsi
35c0(5): call 0x3a90(%rip)
35c5(4): cmp $0xffffffff,%rax
35c9(8): mov %rax,0xc8(%rsp)
35d1(6): jz 0x138(%rip)
35d7(4): cmp $0xfffffffe,%rax
35db(6): jz 0x14f(%rip)
35e1(3): test %rax,%rax
35e4(2): jnz 0x2e(%rip)
35e6(8): mov 0xc0(%rsp),%rax
35ee(c): mov $0x1,0xc8(%rsp)
35fa(3): cmp $0x0,(%rax)
35fd(6): jnz 0x1ac(%rip)
3603(7): mov 0xd4(%rsp),%edx
360a(2): test %edx,%edx
360c(6): jnz 0x198(%rip)
3612(5): mov 0x20(%rsp),%rax
3617(8): mov $0x1,0xd0(%rsp)
361f(4): lea 0x4(%rax),%rdi
3623(5): call 0xffffe76d(%rip)
3628(2): test %eax,%eax
362a(6): jz 0x12a(%rip)
3630(8): mov $0x0,0xb0(%rsp)
3638(8): mov $0x1,0xbc(%rsp)
3640(5): jmp 0xfffffecc(%rip)
3645(5): mov 0x28(%rsp),%rdi
364a(5): call 0xffffe746(%rip)
364f(2): test %eax,%eax
3651(6): jz 0x134(%rip)
3657(8): mov $0x1,0xb0(%rsp)
365f(5): jmp 0xffffff2c(%rip)
3664(4): lea 0x1(%r15),%rdi
3668(5): call 0x3758(%rip)
366d(5): mov 0x8(%rsp),%rsi
3672(3): mov %r15,%rdx
3675(3): mov %rax,%rdi
3678(4): mov %rax,(%rsp)
367c(5): lea 0xffffffff(%rsi,%r13,1),%rsi
3681(5): call 0xffffe65f(%rip)
3686(5): mov %rax,0x8(%rsp)
368b(5): mov 0x8(%rsp),%rax
3690(3): mov $0x0,(%rax)
3693(5): jmp 0xfffff86d(%rip)
3698(5): mov 0x40(%rsp),%rdi
369d(5): call 0xffffe413(%rip)
36a2(5): mov $0x0,0x50(%rsp)
36a7(5): mov %rax,0x48(%rsp)
36ac(5): mov $0x1,0x3c(%rsp)
36b1(5): jmp 0xfffffb24(%rip)
36b6(5): mov 0x10(%r12),%rdx
36bb(2): test %eax,%eax
36bd(3): mov (%rdx),%r15
36c0(6): jz 0xa1(%rip)
36c6(4): cmp $0xffffffff,%r15
36ca(7): mov $0xfffffffe,%rax
36d1(4): cmove %rax,%r15
36d5(5): jmp 0xfffff7d2(%rip)
36da(4): mov 0x10(%rbx),%rcx
36de(2): test %edx,%edx
36e0(3): mov (%rcx),%r13
36e3(6): jz 0x86(%rip)
36e9(4): cmp $0xffffffff,%r13
36ed(6): jz 0x87(%rip)
36f3(3): test %r13,%r13
36f6(4): setz %r14b
36fa(5): jmp 0xfffff78d(%rip)
36ff(5): mov $0x1,0x3c(%rsp)
3704(5): jmp 0xfffffac5(%rip)
3709(c): mov $0x1,0xc8(%rsp)
3715(8): mov $0x0,0xd0(%rsp)
371d(8): mov $0x1,0xbc(%rsp)
3725(5): jmp 0xfffffdf6(%rip)
372a(8): mov 0xc0(%rsp),%rdi
3732(5): call 0xffffe37e(%rip)
3737(8): mov $0x0,0xd0(%rsp)
373f(8): mov %rax,0xc8(%rsp)
3747(8): mov $0x1,0xbc(%rsp)
374f(5): jmp 0xfffffdcc(%rip)
3754(8): mov $0x1,0xbc(%rsp)
375c(5): jmp 0xfffffdb0(%rip)
3761(3): xor %r15d,%r15d
3764(5): jmp 0xfffff743(%rip)
3769(3): mov %eax,%r14d
376c(3): xor %r13d,%r13d
376f(5): jmp 0xfffff718(%rip)
3774(7): mov $0xfffffffe,%r13
377b(5): jmp 0xfffff70c(%rip)
3780(5): call 0xffffe350(%rip)
3785(7): lea 0x129d4(%rip),%rcx
378c(7): lea 0x11e7d(%rip),%rsi
3793(7): lea 0x1289d(%rip),%rdi
379a(5): mov $0x96,%edx
379f(5): call 0xffffe3b1(%rip)
37a4(5): call 0xffffe63c(%rip)
37a9(7): lea 0x129b0(%rip),%rcx
37b0(7): lea 0x11e59(%rip),%rsi
37b7(7): lea 0x12890(%rip),%rdi
37be(5): mov $0xb2,%edx
37c3(5): call 0xffffe38d(%rip)
37c8(4): mov 0xfffffff8(%rax),%rdx
37cc(5): mov $0x8,%esi
37d1(2): xor %edi,%edi
37d3(5): call 0x28cd(%rip)
37d8(7): lea 0x12721(%rip),%rsi
37df(3): mov %rax,%rbx
37e2(5): mov $0x5,%edx
37e7(2): xor %edi,%edi
37e9(5): call 0xffffe2a7(%rip)
37ee(3): mov %rbx,%rcx
37f1(3): mov %rax,%rdx
37f4(2): xor %esi,%esi
37f6(5): mov $0x2,%edi
37fb(2): xor %eax,%eax
37fd(5): call 0xffffe503(%rip)
3802(4): nop 0x0(%rax)
3806(a): nop 0x0(%rax,%rax,1)
3810(2): push %r15
3812(2): push %r14
3814(3): mov %edi,%r14d
3817(2): push %r13
3819(2): push %r12
381b(7): lea 0x1287e(%rip),%r12
3822(1): push %rbp
3823(1): push %rbx
3824(4): movzx %dil,%ebp
3828(2): mov %ebp,%edi
382a(4): sub $0x8,%rsp
382e(5): call 0xfffff432(%rip)
3833(3): mov %rax,%r13
3836(2): jmp 0x12(%rip)
3838(8): nop 0x0(%rax,%rax,1)
3840(3): mov %rbx,%rdi
3843(5): call 0xffffe95d(%rip)
3848(3): mov %r12,%rdi
384b(5): call 0xffffe895(%rip)
3850(2): test %al,%al
3852(2): jz 0x2e(%rip)
3854(2): mov %ebp,%edi
3856(5): call 0xfffff40a(%rip)
385b(3): test %r14b,%r14b
385e(3): mov %rax,%rbx
3861(2): jz 0xffffffdf(%rip)
3863(3): mov %r13,%rdi
3866(3): mov %rax,%rsi
3869(5): call 0xffffef47(%rip)
386e(3): mov %r13,%rdi
3871(3): mov %rax,%r15
3874(3): mov %r15,%r13
3877(5): call 0xffffe929(%rip)
387c(2): jmp 0xffffffc4(%rip)
387e(2): nop 
3880(4): add $0x8,%rsp
3884(3): mov %r13,%rax
3887(1): pop %rbx
3888(1): pop %rbp
3889(2): pop %r12
388b(2): pop %r13
388d(2): pop %r14
388f(2): pop %r15
3891(1): ret near (%rsp)

"eval5" :
3810(2): push %r15
3812(2): push %r14
3814(3): mov %edi,%r14d
3817(2): push %r13
3819(2): push %r12
381b(7): lea 0x1287e(%rip),%r12
3822(1): push %rbp
3823(1): push %rbx
3824(4): movzx %dil,%ebp
3828(2): mov %ebp,%edi
382a(4): sub $0x8,%rsp
382e(5): call 0xfffff432(%rip)
3833(3): mov %rax,%r13
3836(2): jmp 0x12(%rip)
3838(8): nop 0x0(%rax,%rax,1)
3840(3): mov %rbx,%rdi
3843(5): call 0xffffe95d(%rip)
3848(3): mov %r12,%rdi
384b(5): call 0xffffe895(%rip)
3850(2): test %al,%al
3852(2): jz 0x2e(%rip)
3854(2): mov %ebp,%edi
3856(5): call 0xfffff40a(%rip)
385b(3): test %r14b,%r14b
385e(3): mov %rax,%rbx
3861(2): jz 0xffffffdf(%rip)
3863(3): mov %r13,%rdi
3866(3): mov %rax,%rsi
3869(5): call 0xffffef47(%rip)
386e(3): mov %r13,%rdi
3871(3): mov %rax,%r15
3874(3): mov %r15,%r13
3877(5): call 0xffffe929(%rip)
387c(2): jmp 0xffffffc4(%rip)
387e(2): nop 
3880(4): add $0x8,%rsp
3884(3): mov %r13,%rax
3887(1): pop %rbx
3888(1): pop %rbp
3889(2): pop %r12
388b(2): pop %r13
388d(2): pop %r14
388f(2): pop %r15
3891(1): ret near (%rsp)

"eval4" :
38a0(2): push %r14
38a2(2): push %r13
38a4(3): mov %edi,%r14d
38a7(2): push %r12
38a9(4): movzx %dil,%r12d
38ad(1): push %rbp
38ae(1): push %rbx
38af(3): mov %r12d,%edi
38b2(5): call 0xffffff5e(%rip)
38b7(3): mov %rax,%r13
38ba(2): jmp 0x7f(%rip)
38bc(4): nop 0x0(%rax)
38c0(7): lea 0x1296f(%rip),%rdi
38c7(5): mov $0x1,%ebp
38cc(5): call 0xffffe814(%rip)
38d1(2): test %al,%al
38d3(6): jz 0x95(%rip)
38d9(3): mov %r12d,%edi
38dc(5): call 0xffffff34(%rip)
38e1(3): test %r14b,%r14b
38e4(3): mov %rax,%rbx
38e7(2): jz 0x4a(%rip)
38e9(3): mov %r13,%rdi
38ec(5): call 0xffffe964(%rip)
38f1(2): test %al,%al
38f3(6): jz 0xaa(%rip)
38f9(3): mov %rbx,%rdi
38fc(5): call 0xffffe954(%rip)
3901(2): test %al,%al
3903(6): jz 0x9a(%rip)
3909(2): test %ebp,%ebp
390b(2): jz 0x4d(%rip)
390d(3): mov 0xc(%rbx),%eax
3910(2): test %eax,%eax
3912(6): jz 0xaf(%rip)
3918(3): cmp $0x1,%ebp
391b(2): jz 0x6d(%rip)
391d(7): mov 0x2176a4(%rip),%rax
3924(4): lea 0x8(%r13),%rdi
3928(4): lea 0x8(%rbx),%rdx
392c(3): mov %rdi,%rsi
392f(2): call %rax
3931(3): mov %rbx,%rdi
3934(5): call 0xffffe86c(%rip)
3939(7): lea 0x12762(%rip),%rdi
3940(5): call 0xffffe7a0(%rip)
3945(2): test %al,%al
3947(6): jz 0xffffff79(%rip)
394d(2): xor %ebp,%ebp
394f(2): jmp 0xffffff8a(%rip)
3951(7): nop 0x0(%rax)
3958(7): mov 0x217651(%rip),%rax
395f(2): jmp 0xffffffc5(%rip)
3961(7): nop 0x0(%rax)
3968(7): lea 0x12735(%rip),%rdi
396f(5): call 0xffffe771(%rip)
3974(2): test %al,%al
3976(2): jz 0x1b(%rip)
3978(5): mov $0x2,%ebp
397d(5): jmp 0xffffff5c(%rip)
3982(6): nop 0x0(%rax,%rax,1)
3988(7): mov 0x217609(%rip),%rax
398f(2): jmp 0xffffff95(%rip)
3991(1): pop %rbx
3992(3): mov %r13,%rax
3995(1): pop %rbp
3996(2): pop %r12
3998(2): pop %r13
399a(2): pop %r14
399c(1): ret near (%rsp)
399d(7): lea 0x12702(%rip),%rsi
39a4(5): mov $0x5,%edx
39a9(2): xor %edi,%edi
39ab(5): call 0xffffe0e5(%rip)
39b0(2): xor %esi,%esi
39b2(3): mov %rax,%rdx
39b5(5): mov $0x2,%edi
39ba(2): xor %eax,%eax
39bc(5): call 0xffffe344(%rip)
39c1(7): lea 0x126f3(%rip),%rsi
39c8(5): mov $0x5,%edx
39cd(2): xor %edi,%edi
39cf(5): call 0xffffe0c1(%rip)
39d4(2): xor %esi,%esi
39d6(3): mov %rax,%rdx
39d9(5): mov $0x2,%edi
39de(2): xor %eax,%eax
39e0(5): call 0xffffe320(%rip)
39e5(1): nop 
39e6(a): nop 0x0(%rax,%rax,1)
39f0(2): push %r14
39f2(2): push %r13
39f4(3): mov %edi,%r14d
39f7(2): push %r12
39f9(4): movzx %dil,%r12d
39fd(1): push %rbp
39fe(1): push %rbx
39ff(3): mov %r12d,%edi
3a02(5): call 0xfffffe9e(%rip)
3a07(3): mov %rax,%r13
3a0a(2): jmp 0x63(%rip)
3a0c(4): nop 0x0(%rax)
3a10(7): lea 0x1270e(%rip),%rdi
3a17(5): call 0xffffe6c9(%rip)
3a1c(2): test %al,%al
3a1e(2): jz 0x7a(%rip)
3a20(5): mov $0x1,%ebp
3a25(3): mov %r12d,%edi
3a28(5): call 0xfffffe78(%rip)
3a2d(3): test %r14b,%r14b
3a30(3): mov %rax,%rbx
3a33(2): jz 0x32(%rip)
3a35(3): mov %r13,%rdi
3a38(5): call 0xffffe818(%rip)
3a3d(2): test %al,%al
3a3f(2): jz 0x65(%rip)
3a41(3): mov %rbx,%rdi
3a44(5): call 0xffffe80c(%rip)
3a49(2): test %al,%al
3a4b(2): jz 0x59(%rip)
3a4d(2): test %ebp,%ebp
3a4f(2): jz 0x39(%rip)
3a51(7): mov 0x217550(%rip),%rax
3a58(4): lea 0x8(%r13),%rdi
3a5c(4): lea 0x8(%rbx),%rdx
3a60(3): mov %rdi,%rsi
3a63(2): call %rax
3a65(3): mov %rbx,%rdi
3a68(5): call 0xffffe738(%rip)
3a6d(7): lea 0x125f1(%rip),%rdi
3a74(5): call 0xffffe66c(%rip)
3a79(2): test %al,%al
3a7b(2): jz 0xffffff95(%rip)
3a7d(2): xor %ebp,%ebp
3a7f(2): jmp 0xffffffa6(%rip)
3a81(7): nop 0x0(%rax)
3a88(7): mov 0x217541(%rip),%rax
3a8f(2): jmp 0xffffffc9(%rip)
3a91(7): nop 0x0(%rax)
3a98(1): pop %rbx
3a99(3): mov %r13,%rax
3a9c(1): pop %rbp
3a9d(2): pop %r12
3a9f(2): pop %r13
3aa1(2): pop %r14
3aa3(1): ret near (%rsp)
3aa4(7): lea 0x125fb(%rip),%rsi
3aab(5): mov $0x5,%edx
3ab0(2): xor %edi,%edi
3ab2(5): call 0xffffdfde(%rip)
3ab7(2): xor %esi,%esi
3ab9(3): mov %rax,%rdx
3abc(5): mov $0x2,%edi
3ac1(2): xor %eax,%eax
3ac3(5): call 0xffffe23d(%rip)
3ac8(8): nop 0x0(%rax,%rax,1)
3ad0(2): push %r15
3ad2(2): push %r14
3ad4(3): mov %edi,%r14d
3ad7(2): push %r13
3ad9(2): push %r12
3adb(4): movzx %dil,%r13d
3adf(1): push %rbp
3ae0(1): push %rbx
3ae1(3): mov %r13d,%edi
3ae4(4): sub $0x8,%rsp
3ae8(5): call 0xffffff08(%rip)
3aed(3): mov %rax,%rbx
3af0(2): jmp 0x64(%rip)
3af2(6): nop 0x0(%rax,%rax,1)
3af8(7): lea 0x125cf(%rip),%rdi
3aff(6): mov $0x1,%r12d
3b05(5): call 0xffffe5db(%rip)
3b0a(2): test %al,%al
3b0c(6): jz 0x144(%rip)
3b12(3): mov %r13d,%edi
3b15(3): xor %r15d,%r15d
3b18(5): call 0xfffffed8(%rip)
3b1d(3): test %r14b,%r14b
3b20(3): mov %rax,%rbp
3b23(2): jnz 0x4d(%rip)
3b25(3): mov %rbx,%rdi
3b28(5): call 0xffffe678(%rip)
3b2d(3): mov %rbp,%rdi
3b30(5): call 0xffffe670(%rip)
3b35(5): mov $0x18,%edi
3b3a(5): call 0x3286(%rip)
3b3f(4): lea 0x8(%rax),%rdi
3b43(6): mov $0x0,(%rax)
3b49(3): mov %r15,%rsi
3b4c(3): mov %rax,%rbx
3b4f(5): call 0xffffe171(%rip)
3b54(7): lea 0x12571(%rip),%rdi
3b5b(5): call 0xffffe585(%rip)
3b60(2): test %al,%al
3b62(2): jz 0xffffff96(%rip)
3b64(3): xor %r12d,%r12d
3b67(2): jmp 0xffffffab(%rip)
3b69(7): nop 0x0(%rax)
3b70(3): mov %rbx,%rdi
3b73(5): call 0xffffe76d(%rip)
3b78(3): mov %rbp,%rdi
3b7b(5): call 0xffffe765(%rip)
3b80(4): mov 0x8(%rbx),%rdi
3b84(2): xor %edx,%edx
3b86(3): cmp $0x2d,(%rdi)
3b89(3): setz %dl
3b8c(3): add %rdi,%rdx
3b8f(3): movsx (%rdx),%eax
3b92(2): jmp 0x15(%rip)
3b94(4): nop 0x0(%rax)
3b98(4): add $0x1,%rdx
3b9c(3): movsx (%rdx),%eax
3b9f(2): test %al,%al
3ba1(6): jz 0xcf(%rip)
3ba7(3): sub $0x30,%eax
3baa(3): cmp $0x9,%eax
3bad(2): jbe 0xffffffeb(%rip)
3baf(5): call 0xffffde41(%rip)
3bb4(6): mov $0x0,(%rax)
3bba(4): mov 0x8(%rbp),%rsi
3bbe(4): mov 0x8(%rbx),%rdi
3bc2(5): call 0xffffe0ae(%rip)
3bc7(4): cmp $0x5,%r12d
3bcb(2): jnbe 0x65(%rip)
3bcd(7): lea 0x1256c(%rip),%rcx
3bd4(4): movsxd 0x0(%rcx,%r12,4),%rdx
3bd8(3): add %rcx,%rdx
3bdb(2): jmp %rdx
3bdd(3): nop (%rax)
3be0(3): movsxd %eax,%rsi
3be3(3): not %rsi
3be6(4): shr $0x3f,%rsi
3bea(3): mov %rsi,%r15
3bed(5): jmp 0xffffff38(%rip)
3bf2(6): nop 0x0(%rax,%rax,1)
3bf8(3): xor %r15d,%r15d
3bfb(2): test %eax,%eax
3bfd(4): setnz %r15b
3c01(5): jmp 0xffffff24(%rip)
3c06(a): nop 0x0(%rax,%rax,1)
3c10(3): xor %r15d,%r15d
3c13(2): test %eax,%eax
3c15(4): setz %r15b
3c19(5): jmp 0xffffff0c(%rip)
3c1e(2): nop 
3c20(3): xor %r15d,%r15d
3c23(2): test %eax,%eax
3c25(4): setle %r15b
3c29(5): jmp 0xfffffefc(%rip)
3c2e(2): nop 
3c30(3): movsxd %eax,%rsi
3c33(4): shr $0x3f,%rsi
3c37(3): mov %rsi,%r15
3c3a(5): jmp 0xfffffeeb(%rip)
3c3f(1): nop 
3c40(3): xor %r15d,%r15d
3c43(2): test %eax,%eax
3c45(4): setnle %r15b
3c49(5): jmp 0xfffffedc(%rip)
3c4e(2): nop 
3c50(7): lea 0x1247e(%rip),%rdi
3c57(5): call 0xffffe489(%rip)
3c5c(2): test %al,%al
3c5e(2): jz 0x52(%rip)
3c60(6): mov $0x2,%r12d
3c66(5): jmp 0xfffffeac(%rip)
3c6b(5): nop 0x0(%rax,%rax,1)
3c70(4): mov 0x8(%rbp),%rsi
3c74(2): xor %edx,%edx
3c76(3): cmp $0x2d,(%rsi)
3c79(3): setz %dl
3c7c(3): add %rsi,%rdx
3c7f(3): movsx (%rdx),%eax
3c82(2): jmp 0x11(%rip)
3c84(4): nop 0x0(%rax)
3c88(4): add $0x1,%rdx
3c8c(3): movsx (%rdx),%eax
3c8f(2): test %al,%al
3c91(2): jz 0xf(%rip)
3c93(3): sub $0x30,%eax
3c96(3): cmp $0x9,%eax
3c99(2): jbe 0xffffffef(%rip)
3c9b(5): jmp 0xffffff14(%rip)
3ca0(5): call 0x2850(%rip)
3ca5(5): jmp 0xffffff22(%rip)
3caa(6): nop 0x0(%rax,%rax,1)
3cb0(7): lea 0x1241a(%rip),%rdi
3cb7(5): call 0xffffe429(%rip)
3cbc(2): test %al,%al
3cbe(2): jnz 0xffffffa2(%rip)
3cc0(7): lea 0x1240d(%rip),%rdi
3cc7(6): mov $0x3,%r12d
3ccd(5): call 0xffffe413(%rip)
3cd2(2): test %al,%al
3cd4(6): jnz 0xfffffe3e(%rip)
3cda(7): lea 0x123f6(%rip),%rdi
3ce1(6): mov $0x4,%r12d
3ce7(5): call 0xffffe3f9(%rip)
3cec(2): test %al,%al
3cee(6): jnz 0xfffffe24(%rip)
3cf4(7): lea 0x123df(%rip),%rdi
3cfb(5): call 0xffffe3e5(%rip)
3d00(2): test %al,%al
3d02(2): jz 0xd(%rip)
3d04(6): mov $0x5,%r12d
3d0a(5): jmp 0xfffffe08(%rip)
3d0f(4): add $0x8,%rsp
3d13(3): mov %rbx,%rax
3d16(1): pop %rbx
3d17(1): pop %rbp
3d18(2): pop %r12
3d1a(2): pop %r13
3d1c(2): pop %r14
3d1e(2): pop %r15
3d20(1): ret near (%rsp)

"eval3" :
39f0(2): push %r14
39f2(2): push %r13
39f4(3): mov %edi,%r14d
39f7(2): push %r12
39f9(4): movzx %dil,%r12d
39fd(1): push %rbp
39fe(1): push %rbx
39ff(3): mov %r12d,%edi
3a02(5): call 0xfffffe9e(%rip)
3a07(3): mov %rax,%r13
3a0a(2): jmp 0x63(%rip)
3a0c(4): nop 0x0(%rax)
3a10(7): lea 0x1270e(%rip),%rdi
3a17(5): call 0xffffe6c9(%rip)
3a1c(2): test %al,%al
3a1e(2): jz 0x7a(%rip)
3a20(5): mov $0x1,%ebp
3a25(3): mov %r12d,%edi
3a28(5): call 0xfffffe78(%rip)
3a2d(3): test %r14b,%r14b
3a30(3): mov %rax,%rbx
3a33(2): jz 0x32(%rip)
3a35(3): mov %r13,%rdi
3a38(5): call 0xffffe818(%rip)
3a3d(2): test %al,%al
3a3f(2): jz 0x65(%rip)
3a41(3): mov %rbx,%rdi
3a44(5): call 0xffffe80c(%rip)
3a49(2): test %al,%al
3a4b(2): jz 0x59(%rip)
3a4d(2): test %ebp,%ebp
3a4f(2): jz 0x39(%rip)
3a51(7): mov 0x217550(%rip),%rax
3a58(4): lea 0x8(%r13),%rdi
3a5c(4): lea 0x8(%rbx),%rdx
3a60(3): mov %rdi,%rsi
3a63(2): call %rax
3a65(3): mov %rbx,%rdi
3a68(5): call 0xffffe738(%rip)
3a6d(7): lea 0x125f1(%rip),%rdi
3a74(5): call 0xffffe66c(%rip)
3a79(2): test %al,%al
3a7b(2): jz 0xffffff95(%rip)
3a7d(2): xor %ebp,%ebp
3a7f(2): jmp 0xffffffa6(%rip)
3a81(7): nop 0x0(%rax)
3a88(7): mov 0x217541(%rip),%rax
3a8f(2): jmp 0xffffffc9(%rip)
3a91(7): nop 0x0(%rax)
3a98(1): pop %rbx
3a99(3): mov %r13,%rax
3a9c(1): pop %rbp
3a9d(2): pop %r12
3a9f(2): pop %r13
3aa1(2): pop %r14
3aa3(1): ret near (%rsp)
3aa4(7): lea 0x125fb(%rip),%rsi
3aab(5): mov $0x5,%edx
3ab0(2): xor %edi,%edi
3ab2(5): call 0xffffdfde(%rip)
3ab7(2): xor %esi,%esi
3ab9(3): mov %rax,%rdx
3abc(5): mov $0x2,%edi
3ac1(2): xor %eax,%eax
3ac3(5): call 0xffffe23d(%rip)
3ac8(8): nop 0x0(%rax,%rax,1)
3ad0(2): push %r15
3ad2(2): push %r14
3ad4(3): mov %edi,%r14d
3ad7(2): push %r13
3ad9(2): push %r12
3adb(4): movzx %dil,%r13d
3adf(1): push %rbp
3ae0(1): push %rbx
3ae1(3): mov %r13d,%edi
3ae4(4): sub $0x8,%rsp
3ae8(5): call 0xffffff08(%rip)
3aed(3): mov %rax,%rbx
3af0(2): jmp 0x64(%rip)
3af2(6): nop 0x0(%rax,%rax,1)
3af8(7): lea 0x125cf(%rip),%rdi
3aff(6): mov $0x1,%r12d
3b05(5): call 0xffffe5db(%rip)
3b0a(2): test %al,%al
3b0c(6): jz 0x144(%rip)
3b12(3): mov %r13d,%edi
3b15(3): xor %r15d,%r15d
3b18(5): call 0xfffffed8(%rip)
3b1d(3): test %r14b,%r14b
3b20(3): mov %rax,%rbp
3b23(2): jnz 0x4d(%rip)
3b25(3): mov %rbx,%rdi
3b28(5): call 0xffffe678(%rip)
3b2d(3): mov %rbp,%rdi
3b30(5): call 0xffffe670(%rip)
3b35(5): mov $0x18,%edi
3b3a(5): call 0x3286(%rip)
3b3f(4): lea 0x8(%rax),%rdi
3b43(6): mov $0x0,(%rax)
3b49(3): mov %r15,%rsi
3b4c(3): mov %rax,%rbx
3b4f(5): call 0xffffe171(%rip)
3b54(7): lea 0x12571(%rip),%rdi
3b5b(5): call 0xffffe585(%rip)
3b60(2): test %al,%al
3b62(2): jz 0xffffff96(%rip)
3b64(3): xor %r12d,%r12d
3b67(2): jmp 0xffffffab(%rip)
3b69(7): nop 0x0(%rax)
3b70(3): mov %rbx,%rdi
3b73(5): call 0xffffe76d(%rip)
3b78(3): mov %rbp,%rdi
3b7b(5): call 0xffffe765(%rip)
3b80(4): mov 0x8(%rbx),%rdi
3b84(2): xor %edx,%edx
3b86(3): cmp $0x2d,(%rdi)
3b89(3): setz %dl
3b8c(3): add %rdi,%rdx
3b8f(3): movsx (%rdx),%eax
3b92(2): jmp 0x15(%rip)
3b94(4): nop 0x0(%rax)
3b98(4): add $0x1,%rdx
3b9c(3): movsx (%rdx),%eax
3b9f(2): test %al,%al
3ba1(6): jz 0xcf(%rip)
3ba7(3): sub $0x30,%eax
3baa(3): cmp $0x9,%eax
3bad(2): jbe 0xffffffeb(%rip)
3baf(5): call 0xffffde41(%rip)
3bb4(6): mov $0x0,(%rax)
3bba(4): mov 0x8(%rbp),%rsi
3bbe(4): mov 0x8(%rbx),%rdi
3bc2(5): call 0xffffe0ae(%rip)
3bc7(4): cmp $0x5,%r12d
3bcb(2): jnbe 0x65(%rip)
3bcd(7): lea 0x1256c(%rip),%rcx
3bd4(4): movsxd 0x0(%rcx,%r12,4),%rdx
3bd8(3): add %rcx,%rdx
3bdb(2): jmp %rdx
3bdd(3): nop (%rax)
3be0(3): movsxd %eax,%rsi
3be3(3): not %rsi
3be6(4): shr $0x3f,%rsi
3bea(3): mov %rsi,%r15
3bed(5): jmp 0xffffff38(%rip)
3bf2(6): nop 0x0(%rax,%rax,1)
3bf8(3): xor %r15d,%r15d
3bfb(2): test %eax,%eax
3bfd(4): setnz %r15b
3c01(5): jmp 0xffffff24(%rip)
3c06(a): nop 0x0(%rax,%rax,1)
3c10(3): xor %r15d,%r15d
3c13(2): test %eax,%eax
3c15(4): setz %r15b
3c19(5): jmp 0xffffff0c(%rip)
3c1e(2): nop 
3c20(3): xor %r15d,%r15d
3c23(2): test %eax,%eax
3c25(4): setle %r15b
3c29(5): jmp 0xfffffefc(%rip)
3c2e(2): nop 
3c30(3): movsxd %eax,%rsi
3c33(4): shr $0x3f,%rsi
3c37(3): mov %rsi,%r15
3c3a(5): jmp 0xfffffeeb(%rip)
3c3f(1): nop 
3c40(3): xor %r15d,%r15d
3c43(2): test %eax,%eax
3c45(4): setnle %r15b
3c49(5): jmp 0xfffffedc(%rip)
3c4e(2): nop 
3c50(7): lea 0x1247e(%rip),%rdi
3c57(5): call 0xffffe489(%rip)
3c5c(2): test %al,%al
3c5e(2): jz 0x52(%rip)
3c60(6): mov $0x2,%r12d
3c66(5): jmp 0xfffffeac(%rip)
3c6b(5): nop 0x0(%rax,%rax,1)
3c70(4): mov 0x8(%rbp),%rsi
3c74(2): xor %edx,%edx
3c76(3): cmp $0x2d,(%rsi)
3c79(3): setz %dl
3c7c(3): add %rsi,%rdx
3c7f(3): movsx (%rdx),%eax
3c82(2): jmp 0x11(%rip)
3c84(4): nop 0x0(%rax)
3c88(4): add $0x1,%rdx
3c8c(3): movsx (%rdx),%eax
3c8f(2): test %al,%al
3c91(2): jz 0xf(%rip)
3c93(3): sub $0x30,%eax
3c96(3): cmp $0x9,%eax
3c99(2): jbe 0xffffffef(%rip)
3c9b(5): jmp 0xffffff14(%rip)
3ca0(5): call 0x2850(%rip)
3ca5(5): jmp 0xffffff22(%rip)
3caa(6): nop 0x0(%rax,%rax,1)
3cb0(7): lea 0x1241a(%rip),%rdi
3cb7(5): call 0xffffe429(%rip)
3cbc(2): test %al,%al
3cbe(2): jnz 0xffffffa2(%rip)
3cc0(7): lea 0x1240d(%rip),%rdi
3cc7(6): mov $0x3,%r12d
3ccd(5): call 0xffffe413(%rip)
3cd2(2): test %al,%al
3cd4(6): jnz 0xfffffe3e(%rip)
3cda(7): lea 0x123f6(%rip),%rdi
3ce1(6): mov $0x4,%r12d
3ce7(5): call 0xffffe3f9(%rip)
3cec(2): test %al,%al
3cee(6): jnz 0xfffffe24(%rip)
3cf4(7): lea 0x123df(%rip),%rdi
3cfb(5): call 0xffffe3e5(%rip)
3d00(2): test %al,%al
3d02(2): jz 0xd(%rip)
3d04(6): mov $0x5,%r12d
3d0a(5): jmp 0xfffffe08(%rip)
3d0f(4): add $0x8,%rsp
3d13(3): mov %rbx,%rax
3d16(1): pop %rbx
3d17(1): pop %rbp
3d18(2): pop %r12
3d1a(2): pop %r13
3d1c(2): pop %r14
3d1e(2): pop %r15
3d20(1): ret near (%rsp)

"eval2" :
3ad0(2): push %r15
3ad2(2): push %r14
3ad4(3): mov %edi,%r14d
3ad7(2): push %r13
3ad9(2): push %r12
3adb(4): movzx %dil,%r13d
3adf(1): push %rbp
3ae0(1): push %rbx
3ae1(3): mov %r13d,%edi
3ae4(4): sub $0x8,%rsp
3ae8(5): call 0xffffff08(%rip)
3aed(3): mov %rax,%rbx
3af0(2): jmp 0x64(%rip)
3af2(6): nop 0x0(%rax,%rax,1)
3af8(7): lea 0x125cf(%rip),%rdi
3aff(6): mov $0x1,%r12d
3b05(5): call 0xffffe5db(%rip)
3b0a(2): test %al,%al
3b0c(6): jz 0x144(%rip)
3b12(3): mov %r13d,%edi
3b15(3): xor %r15d,%r15d
3b18(5): call 0xfffffed8(%rip)
3b1d(3): test %r14b,%r14b
3b20(3): mov %rax,%rbp
3b23(2): jnz 0x4d(%rip)
3b25(3): mov %rbx,%rdi
3b28(5): call 0xffffe678(%rip)
3b2d(3): mov %rbp,%rdi
3b30(5): call 0xffffe670(%rip)
3b35(5): mov $0x18,%edi
3b3a(5): call 0x3286(%rip)
3b3f(4): lea 0x8(%rax),%rdi
3b43(6): mov $0x0,(%rax)
3b49(3): mov %r15,%rsi
3b4c(3): mov %rax,%rbx
3b4f(5): call 0xffffe171(%rip)
3b54(7): lea 0x12571(%rip),%rdi
3b5b(5): call 0xffffe585(%rip)
3b60(2): test %al,%al
3b62(2): jz 0xffffff96(%rip)
3b64(3): xor %r12d,%r12d
3b67(2): jmp 0xffffffab(%rip)
3b69(7): nop 0x0(%rax)
3b70(3): mov %rbx,%rdi
3b73(5): call 0xffffe76d(%rip)
3b78(3): mov %rbp,%rdi
3b7b(5): call 0xffffe765(%rip)
3b80(4): mov 0x8(%rbx),%rdi
3b84(2): xor %edx,%edx
3b86(3): cmp $0x2d,(%rdi)
3b89(3): setz %dl
3b8c(3): add %rdi,%rdx
3b8f(3): movsx (%rdx),%eax
3b92(2): jmp 0x15(%rip)
3b94(4): nop 0x0(%rax)
3b98(4): add $0x1,%rdx
3b9c(3): movsx (%rdx),%eax
3b9f(2): test %al,%al
3ba1(6): jz 0xcf(%rip)
3ba7(3): sub $0x30,%eax
3baa(3): cmp $0x9,%eax
3bad(2): jbe 0xffffffeb(%rip)
3baf(5): call 0xffffde41(%rip)
3bb4(6): mov $0x0,(%rax)
3bba(4): mov 0x8(%rbp),%rsi
3bbe(4): mov 0x8(%rbx),%rdi
3bc2(5): call 0xffffe0ae(%rip)
3bc7(4): cmp $0x5,%r12d
3bcb(2): jnbe 0x65(%rip)
3bcd(7): lea 0x1256c(%rip),%rcx
3bd4(4): movsxd 0x0(%rcx,%r12,4),%rdx
3bd8(3): add %rcx,%rdx
3bdb(2): jmp %rdx
3bdd(3): nop (%rax)
3be0(3): movsxd %eax,%rsi
3be3(3): not %rsi
3be6(4): shr $0x3f,%rsi
3bea(3): mov %rsi,%r15
3bed(5): jmp 0xffffff38(%rip)
3bf2(6): nop 0x0(%rax,%rax,1)
3bf8(3): xor %r15d,%r15d
3bfb(2): test %eax,%eax
3bfd(4): setnz %r15b
3c01(5): jmp 0xffffff24(%rip)
3c06(a): nop 0x0(%rax,%rax,1)
3c10(3): xor %r15d,%r15d
3c13(2): test %eax,%eax
3c15(4): setz %r15b
3c19(5): jmp 0xffffff0c(%rip)
3c1e(2): nop 
3c20(3): xor %r15d,%r15d
3c23(2): test %eax,%eax
3c25(4): setle %r15b
3c29(5): jmp 0xfffffefc(%rip)
3c2e(2): nop 
3c30(3): movsxd %eax,%rsi
3c33(4): shr $0x3f,%rsi
3c37(3): mov %rsi,%r15
3c3a(5): jmp 0xfffffeeb(%rip)
3c3f(1): nop 
3c40(3): xor %r15d,%r15d
3c43(2): test %eax,%eax
3c45(4): setnle %r15b
3c49(5): jmp 0xfffffedc(%rip)
3c4e(2): nop 
3c50(7): lea 0x1247e(%rip),%rdi
3c57(5): call 0xffffe489(%rip)
3c5c(2): test %al,%al
3c5e(2): jz 0x52(%rip)
3c60(6): mov $0x2,%r12d
3c66(5): jmp 0xfffffeac(%rip)
3c6b(5): nop 0x0(%rax,%rax,1)
3c70(4): mov 0x8(%rbp),%rsi
3c74(2): xor %edx,%edx
3c76(3): cmp $0x2d,(%rsi)
3c79(3): setz %dl
3c7c(3): add %rsi,%rdx
3c7f(3): movsx (%rdx),%eax
3c82(2): jmp 0x11(%rip)
3c84(4): nop 0x0(%rax)
3c88(4): add $0x1,%rdx
3c8c(3): movsx (%rdx),%eax
3c8f(2): test %al,%al
3c91(2): jz 0xf(%rip)
3c93(3): sub $0x30,%eax
3c96(3): cmp $0x9,%eax
3c99(2): jbe 0xffffffef(%rip)
3c9b(5): jmp 0xffffff14(%rip)
3ca0(5): call 0x2850(%rip)
3ca5(5): jmp 0xffffff22(%rip)
3caa(6): nop 0x0(%rax,%rax,1)
3cb0(7): lea 0x1241a(%rip),%rdi
3cb7(5): call 0xffffe429(%rip)
3cbc(2): test %al,%al
3cbe(2): jnz 0xffffffa2(%rip)
3cc0(7): lea 0x1240d(%rip),%rdi
3cc7(6): mov $0x3,%r12d
3ccd(5): call 0xffffe413(%rip)
3cd2(2): test %al,%al
3cd4(6): jnz 0xfffffe3e(%rip)
3cda(7): lea 0x123f6(%rip),%rdi
3ce1(6): mov $0x4,%r12d
3ce7(5): call 0xffffe3f9(%rip)
3cec(2): test %al,%al
3cee(6): jnz 0xfffffe24(%rip)
3cf4(7): lea 0x123df(%rip),%rdi
3cfb(5): call 0xffffe3e5(%rip)
3d00(2): test %al,%al
3d02(2): jz 0xd(%rip)
3d04(6): mov $0x5,%r12d
3d0a(5): jmp 0xfffffe08(%rip)
3d0f(4): add $0x8,%rsp
3d13(3): mov %rbx,%rax
3d16(1): pop %rbx
3d17(1): pop %rbp
3d18(2): pop %r12
3d1a(2): pop %r13
3d1c(2): pop %r14
3d1e(2): pop %r15
3d20(1): ret near (%rsp)

"eval1" :
3d30(2): push %r12
3d32(1): push %rbp
3d33(3): mov %edi,%r12d
3d36(1): push %rbx
3d37(4): movzx %dil,%edi
3d3b(5): call 0xfffffd95(%rip)
3d40(3): mov %rax,%rbx
3d43(7): lea 0x12392(%rip),%rdi
3d4a(5): call 0xffffe396(%rip)
3d4f(2): test %al,%al
3d51(2): jz 0x75(%rip)
3d53(2): xor %edi,%edi
3d55(3): test %r12b,%r12b
3d58(2): jz 0x10(%rip)
3d5a(3): mov %rbx,%rdi
3d5d(5): call 0xffffe483(%rip)
3d62(3): xor $0x1,%eax
3d65(3): movzx %al,%edi
3d68(5): call 0xfffffd68(%rip)
3d6d(3): mov %rbx,%rdi
3d70(3): mov %rax,%rbp
3d73(5): call 0xffffe46d(%rip)
3d78(2): test %al,%al
3d7a(2): jnz 0xe(%rip)
3d7c(3): mov %rbp,%rdi
3d7f(5): call 0xffffe461(%rip)
3d84(2): test %al,%al
3d86(2): jz 0x4a(%rip)
3d88(3): mov %rbx,%rdi
3d8b(5): call 0xffffe415(%rip)
3d90(3): mov %rbp,%rdi
3d93(5): call 0xffffe40d(%rip)
3d98(5): mov $0x18,%edi
3d9d(5): call 0x3023(%rip)
3da2(4): lea 0x8(%rax),%rdi
3da6(2): xor %esi,%esi
3da8(6): mov $0x0,(%rax)
3dae(3): mov %rax,%rbx
3db1(5): call 0xffffdf0f(%rip)
3db6(7): lea 0x1231f(%rip),%rdi
3dbd(5): call 0xffffe323(%rip)
3dc2(2): test %al,%al
3dc4(2): jnz 0xffffff8f(%rip)
3dc6(3): mov %rbx,%rax
3dc9(1): pop %rbx
3dca(1): pop %rbp
3dcb(2): pop %r12
3dcd(1): ret near (%rsp)
3dce(2): nop 
3dd0(3): mov %rbp,%rdi
3dd3(5): call 0xffffe3cd(%rip)
3dd8(5): jmp 0xffffff6b(%rip)

"eval" :
3de0(2): push %r12
3de2(1): push %rbp
3de3(3): mov %edi,%r12d
3de6(1): push %rbx
3de7(4): movzx %dil,%edi
3deb(5): call 0xffffff45(%rip)
3df0(3): mov %rax,%rbx
3df3(5): nop 0x0(%rax,%rax,1)
3df8(7): lea 0x122df(%rip),%rdi
3dff(5): call 0xffffe2e1(%rip)
3e04(2): test %al,%al
3e06(2): jz 0x75(%rip)
3e08(2): xor %edi,%edi
3e0a(3): test %r12b,%r12b
3e0d(2): jz 0xd(%rip)
3e0f(3): mov %rbx,%rdi
3e12(5): call 0xffffe3ce(%rip)
3e17(3): movzx %al,%edi
3e1a(5): call 0xffffff16(%rip)
3e1f(3): mov %rbx,%rdi
3e22(3): mov %rax,%rbp
3e25(5): call 0xffffe3bb(%rip)
3e2a(2): test %al,%al
3e2c(2): jz 0x5c(%rip)
3e2e(3): mov %rbx,%rdi
3e31(3): mov %rbp,%rbx
3e34(5): call 0xffffe36c(%rip)
3e39(3): mov %rbp,%rdi
3e3c(5): call 0xffffe3a4(%rip)
3e41(2): test %al,%al
3e43(2): jz 0xffffffb5(%rip)
3e45(3): mov %rbp,%rdi
3e48(5): call 0xffffe358(%rip)
3e4d(5): mov $0x18,%edi
3e52(5): call 0x2f6e(%rip)
3e57(4): lea 0x8(%rax),%rdi
3e5b(2): xor %esi,%esi
3e5d(6): mov $0x0,(%rax)
3e63(3): mov %rax,%rbx
3e66(5): call 0xffffde5a(%rip)
3e6b(7): lea 0x1226c(%rip),%rdi
3e72(5): call 0xffffe26e(%rip)
3e77(2): test %al,%al
3e79(2): jnz 0xffffff8f(%rip)
3e7b(3): mov %rbx,%rax
3e7e(1): pop %rbx
3e7f(1): pop %rbp
3e80(2): pop %r12
3e82(1): ret near (%rsp)
3e83(5): nop 0x0(%rax,%rax,1)
3e88(3): mov %rbp,%rdi
3e8b(5): call 0xffffe315(%rip)
3e90(5): jmp 0xffffff68(%rip)

"close_stdout_set_file_name" :
3ea0(7): mov %rdi,0x217239(%rip)
3ea7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3eb0(7): mov %dil,0x217221(%rip)
3eb7(1): ret near (%rsp)

"close_stdout" :
3ec0(1): push %rbp
3ec1(1): push %rbx
3ec2(4): sub $0x8,%rsp
3ec6(7): mov 0x2171bb(%rip),%rdi
3ecd(5): call 0x11423(%rip)
3ed2(2): test %eax,%eax
3ed4(2): jz 0x18(%rip)
3ed6(5): call 0xffffdb1a(%rip)
3edb(7): cmp $0x0,0x2171f6(%rip)
3ee2(3): mov %rax,%rbx
3ee5(2): jz 0x1e(%rip)
3ee7(3): cmp $0x20,(%rax)
3eea(2): jnz 0x19(%rip)
3eec(7): mov 0x2171cd(%rip),%rdi
3ef3(5): call 0x113fd(%rip)
3ef8(2): test %eax,%eax
3efa(2): jnz 0x48(%rip)
3efc(4): add $0x8,%rsp
3f00(1): pop %rbx
3f01(1): pop %rbp
3f02(1): ret near (%rsp)
3f03(7): lea 0x12269(%rip),%rsi
3f0a(2): xor %edi,%edi
3f0c(5): mov $0x5,%edx
3f11(5): call 0xffffdb7f(%rip)
3f16(7): mov 0x2171c3(%rip),%rdi
3f1d(3): mov %rax,%rbp
3f20(3): test %rdi,%rdi
3f23(2): jz 0x2a(%rip)
3f25(5): call 0x236b(%rip)
3f2a(2): mov (%rbx),%esi
3f2c(7): lea 0x1224c(%rip),%rdx
3f33(3): mov %rax,%rcx
3f36(3): mov %rbp,%r8
3f39(2): xor %edi,%edi
3f3b(2): xor %eax,%eax
3f3d(5): call 0xffffddc3(%rip)
3f42(6): mov 0x2170c8(%rip),%edi
3f48(5): call 0xffffdac8(%rip)
3f4d(2): mov (%rbx),%esi
3f4f(7): lea 0x1222d(%rip),%rdx
3f56(3): mov %rax,%rcx
3f59(2): xor %edi,%edi
3f5b(2): xor %eax,%eax
3f5d(5): call 0xffffdda3(%rip)
3f62(2): jmp 0xffffffe0(%rip)

"parse_long_options" :
3f70(2): push %r13
3f72(2): push %r12
3f74(3): mov %r8,%r13
3f77(1): push %rbp
3f78(1): push %rbx
3f79(3): mov %rdx,%rbp
3f7c(3): mov %rcx,%r12
3f7f(7): sub $0xe8,%rsp
3f86(2): test %al,%al
3f88(2): jz 0x3c(%rip)
3f8a(5): movaps %xmm0,0x60(%rsp)
3f8f(5): movaps %xmm1,0x70(%rsp)
3f94(8): movaps %xmm2,0x80(%rsp)
3f9c(8): movaps %xmm3,0x90(%rsp)
3fa4(8): movaps %xmm4,0xa0(%rsp)
3fac(8): movaps %xmm5,0xb0(%rsp)
3fb4(8): movaps %xmm6,0xc0(%rsp)
3fbc(8): movaps %xmm7,0xd0(%rsp)
3fc4(9): mov $0x28,%rax
3fcd(5): mov %rax,0x28(%rsp)
3fd2(2): xor %eax,%eax
3fd4(3): cmp $0x2,%edi
3fd7(6): mov 0x2170c3(%rip),%ebx
3fdd(a): mov $0x0,0x2170b9(%rip)
3fe7(2): jz 0x39(%rip)
3fe9(5): mov 0x28(%rsp),%rax
3fee(9): xor $0x28,%rax
3ff7(6): mov %ebx,0x2170a3(%rip)
3ffd(a): mov $0x0,0x217089(%rip)
4007(6): jnz 0xa3(%rip)
400d(7): add $0xe8,%rsp
4014(1): pop %rbx
4015(1): pop %rbp
4016(2): pop %r12
4018(2): pop %r13
401a(1): ret near (%rsp)
401b(5): nop 0x0(%rax,%rax,1)
4020(7): lea 0x216a99(%rip),%rcx
4027(7): lea 0x12037(%rip),%rdx
402e(3): xor %r8d,%r8d
4031(5): mov %r9,0x8(%rsp)
4036(5): call 0xffffdaaa(%rip)
403b(3): cmp $0xff,%eax
403e(2): jz 0xffffffab(%rip)
4040(3): cmp $0x68,%eax
4043(5): mov 0x8(%rsp),%r9
4048(2): jz 0x58(%rip)
404a(3): cmp $0x76,%eax
404d(2): jnz 0xffffff9c(%rip)
404f(8): lea 0x110(%rsp),%rax
4057(7): mov 0x21702a(%rip),%rdi
405e(5): lea 0x10(%rsp),%r8
4063(3): mov %r13,%rcx
4066(3): mov %r12,%rdx
4069(3): mov %rbp,%rsi
406c(5): mov %rax,0x18(%rsp)
4071(5): lea 0x30(%rsp),%rax
4076(8): mov $0x30,0x10(%rsp)
407e(8): mov $0x30,0x14(%rsp)
4086(5): mov %rax,0x20(%rsp)
408b(5): call 0x2b55(%rip)
4090(2): xor %edi,%edi
4092(5): call 0xffffdcce(%rip)
4097(9): nop 0x0(%rax,%rax,1)
40a0(2): xor %edi,%edi
40a2(3): call %r9
40a5(5): jmp 0xffffff44(%rip)
40aa(5): call 0xffffda26(%rip)

"parse_gnu_standard_options_only" :
40b0(2): push %r14
40b2(2): push %r13
40b4(3): mov %r8,%r14
40b7(2): push %r12
40b9(1): push %rbp
40ba(3): mov %rdx,%r12
40bd(1): push %rbx
40be(3): mov %rcx,%r13
40c1(7): sub $0xd0,%rsp
40c8(2): test %al,%al
40ca(8): mov 0x100(%rsp),%rbp
40d2(2): jz 0x39(%rip)
40d4(5): movaps %xmm0,0x50(%rsp)
40d9(5): movaps %xmm1,0x60(%rsp)
40de(5): movaps %xmm2,0x70(%rsp)
40e3(8): movaps %xmm3,0x80(%rsp)
40eb(8): movaps %xmm4,0x90(%rsp)
40f3(8): movaps %xmm5,0xa0(%rsp)
40fb(8): movaps %xmm6,0xb0(%rsp)
4103(8): movaps %xmm7,0xc0(%rsp)
410b(9): mov $0x28,%rax
4114(5): mov %rax,0x18(%rsp)
4119(2): xor %eax,%eax
411b(7): lea 0x1263f(%rip),%rdx
4122(7): lea 0x11f3c(%rip),%rax
4129(3): test %r9b,%r9b
412c(7): lea 0x21698d(%rip),%rcx
4133(4): cmove %rax,%rdx
4137(3): xor %r8d,%r8d
413a(6): mov 0x216f60(%rip),%ebx
4140(a): mov $0x1,0x216f56(%rip)
414a(5): call 0xffffd996(%rip)
414f(3): cmp $0xff,%eax
4152(2): jz 0x66(%rip)
4154(3): cmp $0x68,%eax
4157(6): jz 0x89(%rip)
415d(3): cmp $0x76,%eax
4160(2): jnz 0x50(%rip)
4162(8): lea 0x108(%rsp),%rax
416a(7): mov 0x216f17(%rip),%rdi
4171(3): mov %rsp,%r8
4174(3): mov %r14,%rcx
4177(3): mov %r13,%rdx
417a(3): mov %r12,%rsi
417d(5): mov %rax,0x8(%rsp)
4182(5): lea 0x20(%rsp),%rax
4187(7): mov $0x30,(%rsp)
418e(8): mov $0x30,0x4(%rsp)
4196(5): mov %rax,0x10(%rsp)
419b(5): call 0x2a45(%rip)
41a0(2): xor %edi,%edi
41a2(5): call 0xffffdbbe(%rip)
41a7(9): nop 0x0(%rax,%rax,1)
41b0(6): mov 0x216e5a(%rip),%edi
41b6(2): call %rbp
41b8(5): mov 0x18(%rsp),%rax
41bd(9): xor $0x28,%rax
41c6(6): mov %ebx,0x216ed4(%rip)
41cc(2): jnz 0x1a(%rip)
41ce(7): add $0xd0,%rsp
41d5(1): pop %rbx
41d6(1): pop %rbp
41d7(2): pop %r12
41d9(2): pop %r13
41db(2): pop %r14
41dd(1): ret near (%rsp)
41de(2): nop 
41e0(2): xor %edi,%edi
41e2(2): call %rbp
41e4(2): jmp 0xffffffd4(%rip)
41e6(5): call 0xffffd8ea(%rip)

"mb_width_aux" :
41f0(1): push %rbx
41f1(2): mov %edi,%ebx
41f3(5): call 0xffffda0d(%rip)
41f8(2): test %eax,%eax
41fa(2): js 0x6(%rip)
41fc(1): pop %rbx
41fd(1): ret near (%rsp)
41fe(2): nop 
4200(2): mov %ebx,%edi
4202(5): call 0xffffd83e(%rip)
4207(2): test %eax,%eax
4209(3): setz %al
420c(3): movzx %al,%eax
420f(1): pop %rbx
4210(1): ret near (%rsp)

"mb_copy" :
4220(1): push %rbp
4221(1): push %rbx
4222(3): mov %rsi,%rbx
4225(4): lea 0x18(%rbx),%rax
4229(3): mov %rdi,%rbp
422c(4): sub $0x8,%rsp
4230(3): mov (%rsi),%rsi
4233(4): mov 0x8(%rbx),%rdx
4237(3): cmp %rax,%rsi
423a(2): jz 0x26(%rip)
423c(3): mov %rsi,(%rdi)
423f(4): movzx 0x10(%rbx),%eax
4243(4): mov %rdx,0x8(%rbp)
4247(2): test %al,%al
4249(3): mov %al,0x10(%rbp)
424c(2): jz 0x8(%rip)
424e(3): mov 0x14(%rbx),%eax
4251(3): mov %eax,0x14(%rbp)
4254(4): add $0x8,%rsp
4258(1): pop %rbx
4259(1): pop %rbp
425a(1): ret near (%rsp)
425b(5): nop 0x0(%rax,%rax,1)
4260(4): lea 0x18(%rdi),%rcx
4264(3): mov %rcx,%rdi
4267(5): call 0xffffd979(%rip)
426c(4): mov 0x8(%rbx),%rdx
4270(4): mov %rax,0x0(%rbp)
4274(2): jmp 0xffffffcb(%rip)

"is_basic" :
4280(2): mov %edi,%eax
4282(7): lea 0x11f17(%rip),%rdx
4289(2): mov %edi,%ecx
428b(3): shr $0x5,%al
428e(3): and $0x1f,%ecx
4291(3): and $0x7,%eax
4294(3): mov 0x0(%rdx,%rax,4),%eax
4297(2): shr %cl,%eax
4299(3): and $0x1,%eax
429c(1): ret near (%rsp)

"mbschr" :
42a0(2): push %r14
42a2(2): push %r13
42a4(2): push %r12
42a6(1): push %rbp
42a7(3): mov %rdi,%r12
42aa(1): push %rbx
42ab(2): mov %esi,%ebx
42ad(4): sub $0x50,%rsp
42b1(9): mov $0x28,%rax
42ba(5): mov %rax,0x48(%rsp)
42bf(2): xor %eax,%eax
42c1(5): call 0xffffd7df(%rip)
42c6(4): cmp $0x1,%rax
42ca(2): jbe 0x9(%rip)
42cc(3): cmp $0x2f,%bl
42cf(2): mov %ebx,%ebp
42d1(2): jnbe 0x2f(%rip)
42d3(5): mov 0x48(%rsp),%rax
42d8(9): xor $0x28,%rax
42e1(6): jnz 0x202(%rip)
42e7(4): add $0x50,%rsp
42eb(2): mov %ebx,%esi
42ed(3): mov %r12,%rdi
42f0(1): pop %rbx
42f1(1): pop %rbp
42f2(2): pop %r12
42f4(2): pop %r13
42f6(2): pop %r14
42f8(5): jmp 0xffffd808(%rip)
42fd(3): nop (%rax)
4300(3): mov %rsp,%rbx
4303(5): mov %r12,0x10(%rsp)
4308(4): mov $0x0,(%rsp)
430c(9): mov $0x0,0x4(%rsp)
4315(5): mov $0x0,0xc(%rsp)
431a(7): lea 0x11e7f(%rip),%r12
4321(4): lea 0x4(%rbx),%r13
4325(2): jmp 0x69(%rip)
4327(9): nop 0x0(%rax,%rax,1)
4330(5): mov 0x10(%rsp),%rax
4335(3): movzx (%rax),%ecx
4338(2): mov %ecx,%edx
433a(3): shr $0x5,%dl
433d(3): and $0x7,%edx
4340(4): mov 0x0(%r12,%rdx,4),%edx
4344(3): bt %ecx,%edx
4347(6): jnb 0x101(%rip)
434d(9): mov $0x1,0x18(%rsp)
4356(3): movsx (%rax),%edx
4359(5): mov $0x1,0x20(%rsp)
435e(5): mov $0x1,0xc(%rsp)
4363(2): test %edx,%edx
4365(4): mov %edx,0x24(%rsp)
4369(6): jz 0x157(%rip)
436f(5): mov $0x1,%edx
4374(3): mov %rax,%r14
4377(3): cmp (%r14),%bpl
437a(6): jz 0x149(%rip)
4380(4): lea 0x0(%r14,%rdx,1),%rax
4384(5): mov $0x0,0xc(%rsp)
4389(5): mov %rax,0x10(%rsp)
438e(4): cmp $0x0,(%rsp)
4392(2): jz 0xffffff9e(%rip)
4394(5): call 0xffffd70c(%rip)
4399(5): mov 0x10(%rsp),%r14
439e(3): mov %rax,%rsi
43a1(3): mov %r14,%rdi
43a4(5): call 0x210c(%rip)
43a9(4): lea 0x4(%rbx),%rcx
43ad(4): lea 0x24(%rbx),%rdi
43b1(3): mov %rax,%rdx
43b4(3): mov %r14,%rsi
43b7(5): call 0x2c99(%rip)
43bc(4): cmp $0xffffffff,%rax
43c0(5): mov %rax,0x18(%rsp)
43c5(6): jz 0xa3(%rip)
43cb(4): cmp $0xfffffffe,%rax
43cf(6): jz 0xc1(%rip)
43d5(3): test %rax,%rax
43d8(2): jnz 0x26(%rip)
43da(5): mov 0x10(%rsp),%r14
43df(9): mov $0x1,0x18(%rsp)
43e8(4): cmp $0x0,(%r14)
43ec(6): jnz 0x11b(%rip)
43f2(4): mov 0x24(%rsp),%edx
43f6(2): test %edx,%edx
43f8(6): jnz 0x12e(%rip)
43fe(4): lea 0x4(%rbx),%rdi
4402(5): mov $0x1,0x20(%rsp)
4407(5): call 0xffffd989(%rip)
440c(2): test %eax,%eax
440e(6): jz 0xa2(%rip)
4414(4): mov $0x0,(%rsp)
4418(5): mov $0x1,0xc(%rsp)
441d(4): mov 0x24(%rsp),%eax
4421(2): test %eax,%eax
4423(6): jz 0x9d(%rip)
4429(5): mov 0x10(%rsp),%r14
442e(5): mov 0x18(%rsp),%rdx
4433(4): cmp $0x1,%rdx
4437(6): jnz 0xffffff49(%rip)
443d(5): jmp 0xffffff3a(%rip)
4442(6): nop 0x0(%rax,%rax,1)
4448(3): mov %r13,%rdi
444b(5): call 0xffffd945(%rip)
4450(2): test %eax,%eax
4452(6): jz 0x96(%rip)
4458(4): mov $0x1,(%rsp)
445c(5): jmp 0xffffff38(%rip)
4461(7): nop 0x0(%rax)
4468(9): mov $0x1,0x18(%rsp)
4471(5): mov $0x0,0x20(%rsp)
4476(5): mov $0x1,%edx
447b(5): mov $0x1,0xc(%rsp)
4480(5): mov 0x10(%rsp),%r14
4485(5): jmp 0xfffffef2(%rip)
448a(6): nop 0x0(%rax,%rax,1)
4490(5): mov 0x10(%rsp),%r14
4495(3): mov %r14,%rdi
4498(5): call 0xffffd618(%rip)
449d(5): mov $0x0,0x20(%rsp)
44a2(5): mov %rax,0x18(%rsp)
44a7(5): mov $0x1,0xc(%rsp)
44ac(2): jmp 0xffffff82(%rip)
44ae(2): nop 
44b0(5): mov $0x1,0xc(%rsp)
44b5(5): jmp 0xffffff68(%rip)
44ba(6): nop 0x0(%rax,%rax,1)
44c0(3): xor %r14d,%r14d
44c3(5): mov 0x48(%rsp),%rsi
44c8(9): xor $0x28,%rsi
44d1(3): mov %r14,%rax
44d4(2): jnz 0xf(%rip)
44d6(4): add $0x50,%rsp
44da(1): pop %rbx
44db(1): pop %rbp
44dc(2): pop %r12
44de(2): pop %r13
44e0(2): pop %r14
44e2(1): ret near (%rsp)
44e3(5): call 0xffffd5ed(%rip)
44e8(7): lea 0x11cd1(%rip),%rcx
44ef(7): lea 0x1111a(%rip),%rsi
44f6(7): lea 0x11b3a(%rip),%rdi
44fd(5): mov $0x96,%edx
4502(5): call 0xffffd64e(%rip)
4507(7): lea 0x11cb2(%rip),%rcx
450e(7): lea 0x110fb(%rip),%rsi
4515(7): lea 0x11b32(%rip),%rdi
451c(5): mov $0xb2,%edx
4521(5): call 0xffffd62f(%rip)
4526(7): lea 0x11c93(%rip),%rcx
452d(7): lea 0x110dc(%rip),%rsi
4534(7): lea 0x11a42(%rip),%rdi
453b(5): mov $0xb3,%edx
4540(5): call 0xffffd610(%rip)

"mbslen" :
4550(2): push %r14
4552(2): push %r13
4554(2): push %r12
4556(1): push %rbp
4557(1): push %rbx
4558(3): mov %rdi,%rbx
455b(4): sub $0x50,%rsp
455f(9): mov $0x28,%rax
4568(5): mov %rax,0x48(%rsp)
456d(2): xor %eax,%eax
456f(5): call 0xffffd531(%rip)
4574(4): cmp $0x1,%rax
4578(2): jnbe 0x38(%rip)
457a(3): mov %rbx,%rdi
457d(5): call 0xffffd533(%rip)
4582(3): mov %rax,%rbx
4585(5): mov 0x48(%rsp),%rsi
458a(9): xor $0x28,%rsi
4593(3): mov %rbx,%rax
4596(6): jnz 0x1a3(%rip)
459c(4): add $0x50,%rsp
45a0(1): pop %rbx
45a1(1): pop %rbp
45a2(2): pop %r12
45a4(2): pop %r13
45a6(2): pop %r14
45a8(1): ret near (%rsp)
45a9(7): nop 0x0(%rax)
45b0(3): mov %rsp,%rbp
45b3(5): mov %rbx,0x10(%rsp)
45b8(4): mov $0x0,(%rsp)
45bc(9): mov $0x0,0x4(%rsp)
45c5(5): mov $0x0,0xc(%rsp)
45ca(2): xor %ebx,%ebx
45cc(7): lea 0x11bcd(%rip),%r12
45d3(4): lea 0x4(%rbp),%r13
45d7(2): jmp 0x5f(%rip)
45d9(7): nop 0x0(%rax)
45e0(5): mov 0x10(%rsp),%rcx
45e5(3): movzx (%rcx),%edx
45e8(2): mov %edx,%eax
45ea(3): shr $0x5,%al
45ed(3): and $0x7,%eax
45f0(4): mov 0x0(%r12,%rax,4),%eax
45f4(3): bt %edx,%eax
45f7(6): jnb 0xc9(%rip)
45fd(9): mov $0x1,0x18(%rsp)
4606(3): movsx (%rcx),%eax
4609(5): mov $0x1,0x20(%rsp)
460e(5): mov $0x1,0xc(%rsp)
4613(4): mov %eax,0x24(%rsp)
4617(4): mov 0x24(%rsp),%eax
461b(2): test %eax,%eax
461d(6): jz 0xffffff68(%rip)
4623(5): mov 0x18(%rsp),%rax
4628(5): add %rax,0x10(%rsp)
462d(4): add $0x1,%rbx
4631(5): mov $0x0,0xc(%rsp)
4636(4): cmp $0x0,(%rsp)
463a(2): jz 0xffffffa6(%rip)
463c(5): call 0xffffd464(%rip)
4641(5): mov 0x10(%rsp),%r14
4646(3): mov %rax,%rsi
4649(3): mov %r14,%rdi
464c(5): call 0x1e64(%rip)
4651(4): lea 0x4(%rbp),%rcx
4655(4): lea 0x24(%rbp),%rdi
4659(3): mov %rax,%rdx
465c(3): mov %r14,%rsi
465f(5): call 0x29f1(%rip)
4664(4): cmp $0xffffffff,%rax
4668(5): mov %rax,0x18(%rsp)
466d(2): jz 0x6b(%rip)
466f(4): cmp $0xfffffffe,%rax
4673(2): jz 0x7d(%rip)
4675(3): test %rax,%rax
4678(2): jnz 0x25(%rip)
467a(5): mov 0x10(%rsp),%rax
467f(9): mov $0x1,0x18(%rsp)
4688(3): cmp $0x0,(%rax)
468b(6): jnz 0xb3(%rip)
4691(4): mov 0x24(%rsp),%edx
4695(2): test %edx,%edx
4697(6): jnz 0xc6(%rip)
469d(4): lea 0x4(%rbp),%rdi
46a1(5): mov $0x1,0x20(%rsp)
46a6(5): call 0xffffd6ea(%rip)
46ab(2): test %eax,%eax
46ad(2): jz 0x63(%rip)
46af(4): mov $0x0,(%rsp)
46b3(5): mov $0x1,0xc(%rsp)
46b8(5): jmp 0xffffff5f(%rip)
46bd(3): nop (%rax)
46c0(3): mov %r13,%rdi
46c3(5): call 0xffffd6cd(%rip)
46c8(2): test %eax,%eax
46ca(2): jz 0x50(%rip)
46cc(4): mov $0x1,(%rsp)
46d0(5): jmp 0xffffff6c(%rip)
46d5(3): nop (%rax)
46d8(9): mov $0x1,0x18(%rsp)
46e1(5): mov $0x0,0x20(%rsp)
46e6(5): jmp 0xffffff3d(%rip)
46eb(5): nop 0x0(%rax,%rax,1)
46f0(5): mov 0x10(%rsp),%rdi
46f5(5): call 0xffffd3bb(%rip)
46fa(5): mov $0x0,0x20(%rsp)
46ff(5): mov %rax,0x18(%rsp)
4704(5): jmp 0xffffff1f(%rip)
4709(7): nop 0x0(%rax)
4710(5): mov $0x1,0xc(%rsp)
4715(5): jmp 0xffffff02(%rip)
471a(7): lea 0x11abf(%rip),%rcx
4721(7): lea 0x10ee8(%rip),%rsi
4728(7): lea 0x11908(%rip),%rdi
472f(5): mov $0x96,%edx
4734(5): call 0xffffd41c(%rip)
4739(5): call 0xffffd397(%rip)
473e(7): lea 0x11a9b(%rip),%rcx
4745(7): lea 0x10ec4(%rip),%rsi
474c(7): lea 0x118fb(%rip),%rdi
4753(5): mov $0xb2,%edx
4758(5): call 0xffffd3f8(%rip)
475d(7): lea 0x11a7c(%rip),%rcx
4764(7): lea 0x10ea5(%rip),%rsi
476b(7): lea 0x1180b(%rip),%rdi
4772(5): mov $0xb3,%edx
4777(5): call 0xffffd3d9(%rip)

"set_program_name" :
4780(3): test %rdi,%rdi
4783(1): push %rbx
4784(2): jz 0x79(%rip)
4786(5): mov $0x2f,%esi
478b(3): mov %rdi,%rbx
478e(5): call 0xffffd392(%rip)
4793(3): test %rax,%rax
4796(2): jz 0x57(%rip)
4798(4): lea 0x1(%rax),%r8
479c(3): mov %r8,%rdx
479f(3): sub %rbx,%rdx
47a2(4): cmp $0x6,%rdx
47a6(2): jle 0x47(%rip)
47a8(4): lea 0xfffffffa(%rax),%rsi
47ac(7): lea 0x11a7d(%rip),%rdi
47b3(5): mov $0x7,%ecx
47b8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
47ba(3): setnbe %dl
47bd(3): sbb $0x0,%dl
47c0(2): test %dl,%dl
47c2(2): jnz 0x2b(%rip)
47c4(7): lea 0x11a6d(%rip),%rdi
47cb(5): mov $0x3,%ecx
47d0(3): mov %r8,%rsi
47d3(3): mov %r8,%rbx
47d6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
47d8(3): setnbe %dl
47db(3): sbb $0x0,%dl
47de(2): test %dl,%dl
47e0(2): jnz 0xd(%rip)
47e2(4): lea 0x4(%rax),%rbx
47e6(7): mov %rbx,0x216893(%rip)
47ed(7): mov %rbx,0x2168f4(%rip)
47f4(7): mov %rbx,0x21689d(%rip)
47fb(1): pop %rbx
47fc(1): ret near (%rsp)
47fd(7): mov 0x2168bc(%rip),%rcx
4804(7): lea 0x119ed(%rip),%rdi
480b(5): mov $0x37,%edx
4810(5): mov $0x1,%esi
4815(5): call 0xffffd55b(%rip)
481a(5): call 0xffffd1c6(%rip)

"gettext_quote.part.1" :
4820(1): push %rbp
4821(1): push %rbx
4822(3): mov %rdi,%rbp
4825(2): mov %esi,%ebx
4827(4): sub $0x8,%rsp
482b(5): call 0x10ba5(%rip)
4830(3): movzx (%rax),%edx
4833(3): and $0xdf,%edx
4836(3): cmp $0x55,%dl
4839(2): jz 0x77(%rip)
483b(3): cmp $0x47,%dl
483e(2): jz 0x22(%rip)
4840(7): lea 0x11a04(%rip),%rax
4847(7): lea 0x11850(%rip),%rdx
484e(3): cmp $0x9,%ebx
4851(4): cmovne %rdx,%rax
4855(4): add $0x8,%rsp
4859(1): pop %rbx
485a(1): pop %rbp
485b(1): ret near (%rsp)
485c(4): nop 0x0(%rax)
4860(4): movzx 0x1(%rax),%edx
4864(3): and $0xdf,%edx
4867(3): cmp $0x42,%dl
486a(2): jnz 0xffffffd6(%rip)
486c(4): cmp $0x31,0x2(%rax)
4870(2): jnz 0xffffffd0(%rip)
4872(4): cmp $0x38,0x3(%rax)
4876(2): jnz 0xffffffca(%rip)
4878(4): cmp $0x30,0x4(%rax)
487c(2): jnz 0xffffffc4(%rip)
487e(4): cmp $0x33,0x5(%rax)
4882(2): jnz 0xffffffbe(%rip)
4884(4): cmp $0x30,0x6(%rax)
4888(2): jnz 0xffffffb8(%rip)
488a(4): cmp $0x0,0x7(%rax)
488e(2): jnz 0xffffffb2(%rip)
4890(4): cmp $0x60,0x0(%rbp)
4894(7): lea 0x119a9(%rip),%rax
489b(7): lea 0x119a6(%rip),%rdx
48a2(4): cmovne %rdx,%rax
48a6(4): add $0x8,%rsp
48aa(1): pop %rbx
48ab(1): pop %rbp
48ac(1): ret near (%rsp)
48ad(3): nop (%rax)
48b0(4): movzx 0x1(%rax),%edx
48b4(3): and $0xdf,%edx
48b7(3): cmp $0x54,%dl
48ba(2): jnz 0xffffff86(%rip)
48bc(4): movzx 0x2(%rax),%edx
48c0(3): and $0xdf,%edx
48c3(3): cmp $0x46,%dl
48c6(6): jnz 0xffffff7a(%rip)
48cc(4): cmp $0x2d,0x3(%rax)
48d0(6): jnz 0xffffff70(%rip)
48d6(4): cmp $0x38,0x4(%rax)
48da(6): jnz 0xffffff66(%rip)
48e0(4): cmp $0x0,0x5(%rax)
48e4(6): jnz 0xffffff5c(%rip)
48ea(4): cmp $0x60,0x0(%rbp)
48ee(7): lea 0x11947(%rip),%rax
48f5(7): lea 0x11944(%rip),%rdx
48fc(4): cmovne %rdx,%rax
4900(4): add $0x8,%rsp
4904(1): pop %rbx
4905(1): pop %rbp
4906(1): ret near (%rsp)

"quotearg_buffer_restyled" :
4910(2): push %r15
4912(2): push %r14
4914(3): mov %r8d,%r15d
4917(2): push %r13
4919(2): push %r12
491b(3): mov %rdi,%r14
491e(1): push %rbp
491f(1): push %rbx
4920(3): mov %r9d,%ebx
4923(3): mov %rsi,%r13
4926(3): mov %rcx,%rbp
4929(3): and $0x2,%ebx
492c(7): sub $0xb8,%rsp
4933(8): mov 0xf0(%rsp),%rax
493b(5): mov %rdx,0x10(%rsp)
4940(5): mov %r8d,0x8(%rsp)
4945(5): mov %r9d,0x78(%rsp)
494a(5): mov %rax,0x20(%rsp)
494f(8): mov 0xf8(%rsp),%rax
4957(5): mov %rax,0x68(%rsp)
495c(8): mov 0x100(%rsp),%rax
4964(5): mov %rax,0x60(%rsp)
4969(9): mov $0x28,%rax
4972(8): mov %rax,0xa8(%rsp)
497a(2): xor %eax,%eax
497c(5): call 0xffffd124(%rip)
4981(4): cmp $0xa,%r15d
4985(5): mov %rax,0x58(%rsp)
498a(6): jnbe 0x11b5(%rip)
4990(7): lea 0x11909(%rip),%rcx
4997(3): mov %r15d,%edx
499a(4): movsxd 0x0(%rcx,%rdx,4),%rax
499e(3): add %rcx,%rax
49a1(2): jmp %rax
49a3(5): mov $0x1,0xe(%rsp)
49a8(5): mov $0x0,0x7c(%rsp)
49ad(3): xor %r12d,%r12d
49b0(9): mov $0x0,0x50(%rsp)
49b9(5): mov $0x1,0xf(%rsp)
49be(5): mov $0x0,0xd(%rsp)
49c3(7): lea 0x116d4(%rip),%rax
49ca(9): mov $0x1,0x18(%rsp)
49d3(3): xor %r15d,%r15d
49d6(8): mov $0x2,0x8(%rsp)
49de(5): mov %rax,0x48(%rsp)
49e3(3): xor %r11d,%r11d
49e6(3): mov %rbp,%rax
49e9(3): mov %r12d,%r8d
49ec(3): mov %r11,%rbp
49ef(3): mov %rax,%r11
49f2(6): nop 0x0(%rax,%rax,1)
49f8(3): cmp %rbp,%r11
49fb(4): setnz %r12b
49ff(4): cmp $0xffffffff,%r11
4a03(2): jnz 0xf(%rip)
4a05(5): mov 0x10(%rsp),%rax
4a0a(4): cmp $0x0,0x0(%rax,%rbp,1)
4a0e(4): setnz %r12b
4a12(3): test %r12b,%r12b
4a15(6): jz 0x65b(%rip)
4a1b(5): cmp $0x2,0x8(%rsp)
4a20(5): mov 0x10(%rsp),%rdi
4a25(4): lea 0x0(%rdi,%rbp,1),%r9
4a29(3): setnz %al
4a2c(4): and 0xd(%rsp),%al
4a30(3): mov %eax,%r10d
4a33(6): jz 0xad(%rip)
4a39(5): mov 0x18(%rsp),%rax
4a3e(3): test %rax,%rax
4a41(6): jz 0x42f(%rip)
4a47(4): cmp $0xffffffff,%r11
4a4b(5): lea 0x0(%rbp,%rax,1),%rbx
4a50(2): jnz 0x30(%rip)
4a52(4): cmp $0x1,%rax
4a56(2): jbe 0x2a(%rip)
4a58(5): mov %r8b,0x38(%rsp)
4a5d(5): mov %r10b,0x30(%rsp)
4a62(5): mov %r9,0x28(%rsp)
4a67(5): call 0xffffd049(%rip)
4a6c(6): movzx 0x38(%rsp),%r8d
4a72(6): movzx 0x30(%rsp),%r10d
4a78(3): mov %rax,%r11
4a7b(5): mov 0x28(%rsp),%r9
4a80(3): cmp %r11,%rbx
4a83(5): mov %r10b,0x28(%rsp)
4a88(6): jnbe 0x5b8(%rip)
4a8e(5): mov 0x18(%rsp),%rdx
4a93(5): mov 0x48(%rsp),%rsi
4a98(3): mov %r9,%rdi
4a9b(5): mov %r11,0x40(%rsp)
4aa0(5): mov %r8b,0x38(%rsp)
4aa5(5): mov %r9,0x30(%rsp)
4aaa(5): call 0xffffd0e6(%rip)
4aaf(2): test %eax,%eax
4ab1(5): mov 0x30(%rsp),%r9
4ab6(6): movzx 0x38(%rsp),%r8d
4abc(5): mov 0x40(%rsp),%r11
4ac1(6): jnz 0x57f(%rip)
4ac7(5): cmp $0x0,0xf(%rsp)
4acc(6): movzx 0x28(%rsp),%r10d
4ad2(6): jnz 0xf83(%rip)
4ad8(8): nop 0x0(%rax,%rax,1)
4ae0(4): movzx (%r9),%ebx
4ae4(3): cmp $0x7e,%bl
4ae7(6): jnbe 0x321(%rip)
4aed(7): lea 0x117d8(%rip),%rcx
4af4(3): movzx %bl,%edx
4af7(4): movsxd 0x0(%rcx,%rdx,4),%rax
4afb(3): add %rcx,%rax
4afe(2): jmp %rax
4b00(3): xor %r10d,%r10d
4b03(4): cmp $0x1,%r11
4b07(3): setnz %al
4b0a(4): cmp $0xffffffff,%r11
4b0e(2): jnz 0xe(%rip)
4b10(5): mov 0x10(%rsp),%rax
4b15(4): cmp $0x0,0x1(%rax)
4b19(3): setnz %al
4b1c(5): cmp $0x2,0x8(%rsp)
4b21(3): setz %dl
4b24(2): test %al,%al
4b26(6): jz 0x252(%rip)
4b2c(3): xor %r12d,%r12d
4b2f(2): xor %eax,%eax
4b31(7): nop 0x0(%rax)
4b38(5): cmp $0x1,0xd(%rsp)
4b3d(6): jnz 0x115(%rip)
4b43(2): test %dl,%dl
4b45(6): jnz 0x10d(%rip)
4b4b(5): mov 0x20(%rsp),%rsi
4b50(3): test %rsi,%rsi
4b53(2): jz 0x16(%rip)
4b55(2): mov %ebx,%edx
4b57(3): shr $0x5,%dl
4b5a(3): movzx %dl,%edx
4b5d(3): mov 0x0(%rsi,%rdx,4),%edx
4b60(3): bt %ebx,%edx
4b63(6): jb 0x150(%rip)
4b69(3): test %r10b,%r10b
4b6c(6): jnz 0x147(%rip)
4b72(3): xor $0x1,%eax
4b75(4): add $0x1,%rbp
4b79(3): and %r8d,%eax
4b7c(2): test %al,%al
4b7e(2): jz 0x22(%rip)
4b80(3): cmp %r15,%r13
4b83(2): jbe 0x7(%rip)
4b85(5): mov $0x27,0x0(%r14,%r15,1)
4b8a(4): lea 0x1(%r15),%rax
4b8e(3): cmp %rax,%r13
4b91(2): jbe 0x8(%rip)
4b93(6): mov $0x27,0x1(%r14,%r15,1)
4b99(4): add $0x2,%r15
4b9d(3): xor %r8d,%r8d
4ba0(3): cmp %r13,%r15
4ba3(2): jnb 0x6(%rip)
4ba5(4): mov %bl,0x0(%r14,%r15,1)
4ba9(5): movzx 0xe(%rsp),%edi
4bae(4): add $0x1,%r15
4bb2(5): mov $0x0,%eax
4bb7(3): test %r12b,%r12b
4bba(3): cmove %eax,%edi
4bbd(5): mov %dil,0xe(%rsp)
4bc2(5): jmp 0xfffffe36(%rip)
4bc7(9): nop 0x0(%rax,%rax,1)
4bd0(3): xor %r10d,%r10d
4bd3(4): mov 0x8(%rsp),%eax
4bd7(3): cmp $0x2,%eax
4bda(6): jz 0x5be(%rip)
4be0(3): cmp $0x5,%eax
4be3(6): jz 0x575(%rip)
4be9(3): cmp $0x2,%eax
4bec(5): mov $0x3f,%ebx
4bf1(3): setz %dl
4bf4(3): xor %r12d,%r12d
4bf7(2): xor %eax,%eax
4bf9(5): jmp 0xffffff3f(%rip)
4bfe(2): nop 
4c00(3): xor %r10d,%r10d
4c03(5): cmp $0x2,0x8(%rsp)
4c08(6): jz 0x508(%rip)
4c0e(5): mov %r12b,0x7c(%rsp)
4c13(2): xor %edx,%edx
4c15(2): xor %eax,%eax
4c17(5): mov $0x27,%ebx
4c1c(5): jmp 0xffffff1c(%rip)
4c21(7): nop 0x0(%rax)
4c28(5): mov $0x9,%edx
4c2d(5): mov $0x74,%ebx
4c32(5): cmp $0x2,0x8(%rsp)
4c37(3): setz %al
4c3a(4): and 0xf(%rsp),%al
4c3e(6): jnz 0x150(%rip)
4c44(5): cmp $0x0,0xd(%rsp)
4c49(2): jnz 0x67(%rip)
4c4b(2): mov %edx,%ebx
4c4d(3): xor %r12d,%r12d
4c50(2): xor %eax,%eax
4c52(5): cmp $0x0,0xf(%rsp)
4c57(6): jnz 0xfffffef4(%rip)
4c5d(5): jmp 0xffffff0c(%rip)
4c62(6): nop 0x0(%rax,%rax,1)
4c68(5): mov $0x8,%edx
4c6d(5): mov $0x62,%ebx
4c72(2): jmp 0xffffffd2(%rip)
4c74(4): nop 0x0(%rax)
4c78(5): cmp $0x2,0x8(%rsp)
4c7d(6): jz 0x3d3(%rip)
4c83(5): cmp $0x0,0xd(%rsp)
4c88(6): jz 0x218(%rip)
4c8e(5): cmp $0x0,0xf(%rsp)
4c93(6): jz 0x20d(%rip)
4c99(6): cmp $0x0,0x18(%rsp)
4c9f(6): jnz 0x3bc(%rip)
4ca5(5): mov $0x5c,%ebx
4caa(6): nop 0x0(%rax,%rax,1)
4cb0(3): xor %r12d,%r12d
4cb3(5): cmp $0x2,0x8(%rsp)
4cb8(3): setz %dl
4cbb(5): cmp $0x0,0xf(%rsp)
4cc0(2): mov %edx,%eax
4cc2(6): jnz 0x856(%rip)
4cc8(3): mov %r8d,%eax
4ccb(3): xor $0x1,%eax
4cce(2): and %dl,%al
4cd0(2): jz 0x31(%rip)
4cd2(3): cmp %r15,%r13
4cd5(2): jbe 0x7(%rip)
4cd7(5): mov $0x27,0x0(%r14,%r15,1)
4cdc(4): lea 0x1(%r15),%rdx
4ce0(3): cmp %rdx,%r13
4ce3(2): jbe 0x8(%rip)
4ce5(6): mov $0x24,0x1(%r14,%r15,1)
4ceb(4): lea 0x2(%r15),%rdx
4cef(3): cmp %rdx,%r13
4cf2(2): jbe 0x8(%rip)
4cf4(6): mov $0x27,0x2(%r14,%r15,1)
4cfa(4): add $0x3,%r15
4cfe(3): mov %eax,%r8d
4d01(3): cmp %r15,%r13
4d04(2): jbe 0x7(%rip)
4d06(5): mov $0x5c,0x0(%r14,%r15,1)
4d0b(4): add $0x1,%r15
4d0f(4): add $0x1,%rbp
4d13(5): jmp 0xfffffe8d(%rip)
4d18(8): nop 0x0(%rax,%rax,1)
4d20(5): cmp $0x0,0xd(%rsp)
4d25(6): jnz 0x1ce(%rip)
4d2b(2): xor %edx,%edx
4d2d(5): test $0x1,0x78(%rsp)
4d32(6): jz 0xffffff19(%rip)
4d38(4): add $0x1,%rbp
4d3c(5): jmp 0xfffffcbc(%rip)
4d41(7): nop 0x0(%rax)
4d48(5): cmp $0x2,0x8(%rsp)
4d4d(3): setz %dl
4d50(2): xor %eax,%eax
4d52(5): jmp 0xfffffde6(%rip)
4d57(9): nop 0x0(%rax,%rax,1)
4d60(5): mov $0x7,%edx
4d65(5): mov $0x61,%ebx
4d6a(5): jmp 0xfffffeda(%rip)
4d6f(1): nop 
4d70(5): cmp $0x2,0x8(%rsp)
4d75(3): setz %dl
4d78(3): test %rbp,%rbp
4d7b(6): jnz 0xfffffdb1(%rip)
4d81(5): movzx 0xf(%rsp),%eax
4d86(2): and %dl,%al
4d88(6): jz 0xfffffdb0(%rip)
4d8e(3): mov %r11,%rbp
4d91(8): mov $0x2,0x8(%rsp)
4d99(5): jmp 0x700(%rip)
4d9e(2): nop 
4da0(5): cmp $0x2,0x8(%rsp)
4da5(3): setz %dl
4da8(3): xor %r12d,%r12d
4dab(2): jmp 0xffffffd6(%rip)
4dad(3): nop (%rax)
4db0(5): cmp $0x2,0x8(%rsp)
4db5(5): mov $0x20,%ebx
4dba(3): setz %dl
4dbd(2): jmp 0xffffffc4(%rip)
4dbf(1): nop 
4dc0(5): mov $0xd,%edx
4dc5(5): mov $0x72,%ebx
4dca(5): jmp 0xfffffe68(%rip)
4dcf(1): nop 
4dd0(5): mov $0xc,%edx
4dd5(5): mov $0x66,%ebx
4dda(5): jmp 0xfffffe6a(%rip)
4ddf(1): nop 
4de0(5): mov $0xb,%edx
4de5(5): mov $0x76,%ebx
4dea(5): jmp 0xfffffe5a(%rip)
4def(1): nop 
4df0(5): mov $0xa,%edx
4df5(5): mov $0x6e,%ebx
4dfa(5): jmp 0xfffffe38(%rip)
4dff(1): nop 
4e00(3): xor %r10d,%r10d
4e03(5): nop 0x0(%rax,%rax,1)
4e08(6): cmp $0x1,0x58(%rsp)
4e0e(6): jnz 0x3aa(%rip)
4e14(5): mov %r11,0x38(%rsp)
4e19(5): mov %r8b,0x30(%rsp)
4e1e(5): mov %r10b,0x28(%rsp)
4e23(5): call 0xffffcf9d(%rip)
4e28(3): mov (%rax),%rcx
4e2b(3): movzx %bl,%edx
4e2e(6): movzx 0x28(%rsp),%r10d
4e34(6): movzx 0x30(%rsp),%r8d
4e3a(5): mov 0x38(%rsp),%r11
4e3f(5): mov $0x1,%edi
4e44(4): movzx 0x0(%rcx,%rdx,2),%eax
4e48(4): and $0x4000,%ax
4e4c(4): setnz %r12b
4e50(3): setz %al
4e53(4): and 0xd(%rsp),%al
4e57(2): test %al,%al
4e59(6): jnz 0x998(%rip)
4e5f(5): cmp $0x2,0x8(%rsp)
4e64(3): setz %dl
4e67(5): jmp 0xfffffcd1(%rip)
4e6c(4): nop 0x0(%rax)
4e70(4): movzx (%r9),%ebx
4e74(3): cmp $0x7e,%bl
4e77(2): jnbe 0xffffff89(%rip)
4e79(7): lea 0x11648(%rip),%rcx
4e80(3): movzx %bl,%edx
4e83(4): movsxd 0x0(%rcx,%rdx,4),%rax
4e87(3): add %rcx,%rax
4e8a(2): jmp %rax
4e8c(4): nop 0x0(%rax)
4e90(3): xor %r10d,%r10d
4e93(5): cmp $0x0,0xd(%rsp)
4e98(6): jnz 0xfffffdf6(%rip)
4e9e(2): nop 
4ea0(5): mov $0x5c,%edx
4ea5(5): mov $0x5c,%ebx
4eaa(5): jmp 0xfffffd9a(%rip)
4eaf(1): nop 
4eb0(5): mov $0xc,%edx
4eb5(3): xor %r10d,%r10d
4eb8(5): mov $0x66,%ebx
4ebd(5): jmp 0xfffffd87(%rip)
4ec2(6): nop 0x0(%rax,%rax,1)
4ec8(5): mov $0xa,%edx
4ecd(3): xor %r10d,%r10d
4ed0(5): mov $0x6e,%ebx
4ed5(5): jmp 0xfffffd5d(%rip)
4eda(6): nop 0x0(%rax,%rax,1)
4ee0(5): mov $0x61,%ebx
4ee5(5): jmp 0xfffffdcb(%rip)
4eea(6): nop 0x0(%rax,%rax,1)
4ef0(3): xor %r10d,%r10d
4ef3(5): cmp $0x2,0x8(%rsp)
4ef8(3): setz %dl
4efb(5): cmp $0x0,0xf(%rsp)
4f00(6): jnz 0xb9a(%rip)
4f06(3): mov %r8d,%eax
4f09(3): mov %r15,%rcx
4f0c(3): xor $0x1,%eax
4f0f(2): and %dl,%al
4f11(2): jz 0x2f(%rip)
4f13(3): cmp %r15,%r13
4f16(2): jbe 0x7(%rip)
4f18(5): mov $0x27,0x0(%r14,%r15,1)
4f1d(4): lea 0x1(%r15),%rcx
4f21(3): cmp %rcx,%r13
4f24(2): jbe 0x8(%rip)
4f26(6): mov $0x24,0x1(%r14,%r15,1)
4f2c(4): lea 0x2(%r15),%rcx
4f30(3): cmp %rcx,%r13
4f33(6): jnbe 0x636(%rip)
4f39(4): lea 0x3(%r15),%rcx
4f3d(3): mov %eax,%r8d
4f40(3): cmp %rcx,%r13
4f43(2): jbe 0x7(%rip)
4f45(5): mov $0x5c,0x0(%r14,%rcx,1)
4f4a(5): cmp $0x2,0x8(%rsp)
4f4f(4): lea 0x1(%rcx),%r15
4f53(6): jz 0x606(%rip)
4f59(4): lea 0x1(%rbp),%rax
4f5d(3): cmp %r11,%rax
4f60(2): jnb 0x1b(%rip)
4f62(5): mov 0x10(%rsp),%rax
4f67(5): movzx 0x1(%rax,%rbp,1),%eax
4f6c(4): mov %al,0x28(%rsp)
4f70(3): sub $0x30,%eax
4f73(2): cmp $0x9,%al
4f75(6): jbe 0x834(%rip)
4f7b(3): mov %r12d,%eax
4f7e(5): mov $0x30,%ebx
4f83(3): xor %r12d,%r12d
4f86(5): jmp 0xfffffbb2(%rip)
4f8b(5): nop 0x0(%rax,%rax,1)
4f90(5): cmp $0x2,0x8(%rsp)
4f95(3): mov %r10d,%r12d
4f98(3): setz %dl
4f9b(3): xor %r10d,%r10d
4f9e(2): xor %eax,%eax
4fa0(5): jmp 0xfffffb98(%rip)
4fa5(3): nop (%rax)
4fa8(5): cmp $0x2,0x8(%rsp)
4fad(3): setz %dl
4fb0(3): xor %r10d,%r10d
4fb3(5): jmp 0xfffffdc5(%rip)
4fb8(8): nop 0x0(%rax,%rax,1)
4fc0(5): cmp $0x2,0x8(%rsp)
4fc5(3): setz %dl
4fc8(3): xor %r10d,%r10d
4fcb(3): xor %r12d,%r12d
4fce(5): jmp 0xfffffdb3(%rip)
4fd3(5): nop 0x0(%rax,%rax,1)
4fd8(5): cmp $0x2,0x8(%rsp)
4fdd(3): mov %r10d,%r12d
4fe0(5): mov $0x20,%ebx
4fe5(3): setz %dl
4fe8(3): xor %r10d,%r10d
4feb(5): jmp 0xfffffd96(%rip)
4ff0(5): mov $0xd,%edx
4ff5(3): xor %r10d,%r10d
4ff8(5): mov $0x72,%ebx
4ffd(5): jmp 0xfffffc35(%rip)
5002(6): nop 0x0(%rax,%rax,1)
5008(5): mov $0x76,%ebx
500d(5): jmp 0xfffffca3(%rip)
5012(6): nop 0x0(%rax,%rax,1)
5018(5): mov $0x9,%edx
501d(3): xor %r10d,%r10d
5020(5): mov $0x74,%ebx
5025(5): jmp 0xfffffc0d(%rip)
502a(6): nop 0x0(%rax,%rax,1)
5030(5): mov $0x62,%ebx
5035(5): jmp 0xfffffc7b(%rip)
503a(6): nop 0x0(%rax,%rax,1)
5040(3): xor %r10d,%r10d
5043(5): jmp 0xfffffa9d(%rip)
5048(8): nop 0x0(%rax,%rax,1)
5050(5): cmp $0x0,0xf(%rsp)
5055(6): jnz 0x96b(%rip)
505b(4): add $0x1,%rbp
505f(3): mov %r8d,%eax
5062(3): xor %r12d,%r12d
5065(5): mov $0x5c,%ebx
506a(5): jmp 0xfffffb12(%rip)
506f(1): nop 
5070(5): cmp $0x2,0x8(%rsp)
5075(5): movzx 0xf(%rsp),%ebx
507a(3): mov %r8d,%r12d
507d(3): mov %r11,%rbp
5080(3): setz %dl
5083(2): mov %ebx,%eax
5085(3): test %r15,%r15
5088(3): setz %cl
508b(2): and %edx,%eax
508d(2): and %cl,%al
508f(6): jnz 0xa67(%rip)
5095(2): mov %ebx,%eax
5097(3): xor $0x1,%eax
509a(2): and %al,%dl
509c(6): jz 0x970(%rip)
50a2(5): cmp $0x0,0x7c(%rsp)
50a7(6): jz 0x963(%rip)
50ad(5): cmp $0x0,0xe(%rsp)
50b2(6): jnz 0x9fb(%rip)
50b8(3): test %r13,%r13
50bb(3): setz %al
50be(6): cmp $0x0,0x50(%rsp)
50c4(3): setnz %dl
50c7(2): and %dl,%al
50c9(6): jz 0xa23(%rip)
50cf(5): mov 0x50(%rsp),%r13
50d4(7): lea 0x10fc3(%rip),%rbx
50db(4): mov $0x27,(%r14)
50df(8): mov $0x2,0x8(%rsp)
50e7(6): mov $0x1,%r15d
50ed(9): mov $0x1,0x18(%rsp)
50f6(5): mov $0x0,0xf(%rsp)
50fb(5): mov %rbx,0x48(%rsp)
5100(4): mov %al,0x7c(%rsp)
5104(5): jmp 0xfffff8df(%rip)
5109(7): nop 0x0(%rax)
5110(5): cmp $0x0,0xf(%rsp)
5115(6): jnz 0x8ab(%rip)
511b(3): test %r13,%r13
511e(6): jz 0x402(%rip)
5124(2): xor %edx,%edx
5126(6): cmp $0x0,0x50(%rsp)
512c(6): jnz 0x3f4(%rip)
5132(5): mov %r13,0x50(%rsp)
5137(4): add $0x3,%r15
513b(2): xor %eax,%eax
513d(5): mov %r12b,0x7c(%rsp)
5142(3): xor %r8d,%r8d
5145(3): mov %rdx,%r13
5148(5): mov $0x27,%ebx
514d(5): jmp 0xfffffa1c(%rip)
5152(6): nop 0x0(%rax,%rax,1)
5158(5): test $0x4,0x78(%rsp)
515d(2): jz 0x23(%rip)
515f(4): lea 0x2(%rbp),%rcx
5163(3): cmp %r11,%rcx
5166(2): jnb 0x1a(%rip)
5168(5): mov 0x10(%rsp),%rax
516d(5): cmp $0x3f,0x1(%rax,%rbp,1)
5172(6): jz 0x790(%rip)
5178(8): nop 0x0(%rax,%rax,1)
5180(2): xor %edx,%edx
5182(3): xor %r12d,%r12d
5185(2): xor %eax,%eax
5187(5): mov $0x3f,%ebx
518c(5): jmp 0xfffff9ac(%rip)
5191(7): nop 0x0(%rax)
5198(5): cmp $0x0,0xf(%rsp)
519d(6): jnz 0x823(%rip)
51a3(3): xor %r12d,%r12d
51a6(2): xor %eax,%eax
51a8(5): mov $0x3f,%ebx
51ad(5): jmp 0xfffff9bc(%rip)
51b2(6): nop 0x0(%rax,%rax,1)
51b8(8): lea 0xa0(%rsp),%rax
51c0(4): cmp $0xffffffff,%r11
51c4(c): mov $0x0,0xa0(%rsp)
51d0(5): mov %rax,0x28(%rsp)
51d5(2): jnz 0x2f(%rip)
51d7(5): mov 0x10(%rsp),%rdi
51dc(5): mov %r8b,0x40(%rsp)
51e1(5): mov %r10b,0x38(%rsp)
51e6(5): mov %r9,0x30(%rsp)
51eb(5): call 0xffffc8c5(%rip)
51f0(6): movzx 0x40(%rsp),%r8d
51f6(6): movzx 0x38(%rsp),%r10d
51fc(3): mov %rax,%r11
51ff(5): mov 0x30(%rsp),%r9
5204(8): lea 0x9c(%rsp),%rax
520c(2): xor %ecx,%ecx
520e(4): mov %bl,0x7e(%rsp)
5212(5): mov %r8b,0x7d(%rsp)
5217(3): mov %rcx,%rbx
521a(8): mov %r9,0x88(%rsp)
5222(5): mov %rax,0x38(%rsp)
5227(5): mov %r10b,0x7f(%rsp)
522c(8): mov %r15,0x80(%rsp)
5234(5): mov %r14,0x40(%rsp)
5239(5): mov %r13,0x70(%rsp)
523e(5): mov %r11,0x30(%rsp)
5243(5): mov 0x10(%rsp),%rax
5248(5): lea 0x0(%rbp,%rbx,1),%r14
524d(5): mov 0x30(%rsp),%rdx
5252(5): mov 0x28(%rsp),%rcx
5257(5): mov 0x38(%rsp),%rdi
525c(4): lea 0x0(%rax,%r14,1),%r13
5260(3): sub %r14,%rdx
5263(3): mov %r13,%rsi
5266(5): call 0x1dea(%rip)
526b(3): test %rax,%rax
526e(3): mov %rax,%r15
5271(2): jz 0x50(%rip)
5273(4): cmp $0xffffffff,%rax
5277(6): jz 0x61e(%rip)
527d(4): cmp $0xfffffffe,%rax
5281(6): jz 0x5a0(%rip)
5287(5): cmp $0x2,0x8(%rsp)
528c(3): setz %al
528f(4): and 0xf(%rsp),%al
5293(6): jnz 0x19d(%rip)
5299(7): mov 0x9c(%rsp),%edi
52a0(5): call 0xffffcb00(%rip)
52a5(5): mov 0x28(%rsp),%rdi
52aa(2): test %eax,%eax
52ac(5): mov $0x0,%eax
52b1(4): cmove %eax,%r12d
52b5(3): add %r15,%rbx
52b8(5): call 0xffffcad8(%rip)
52bd(2): test %eax,%eax
52bf(2): jz 0xffffff84(%rip)
52c1(3): mov %r12d,%edx
52c4(3): mov %rbx,%rdi
52c7(6): movzx 0x7d(%rsp),%r8d
52cd(3): xor $0x1,%edx
52d0(5): movzx 0x7e(%rsp),%ebx
52d5(6): movzx 0x7f(%rsp),%r10d
52db(4): and 0xd(%rsp),%dl
52df(8): mov 0x80(%rsp),%r15
52e7(5): mov 0x40(%rsp),%r14
52ec(5): mov 0x70(%rsp),%r13
52f1(5): mov 0x30(%rsp),%r11
52f6(4): cmp $0x1,%rdi
52fa(6): jbe 0x601(%rip)
5300(3): mov %rdi,%rcx
5303(2): xor %esi,%esi
5305(6): movzx 0xf(%rsp),%r9d
530b(3): add %rbp,%rcx
530e(5): mov 0x10(%rsp),%rdi
5313(5): jmp 0xbb(%rip)
5318(8): nop 0x0(%rax,%rax,1)
5320(5): cmp $0x2,0x8(%rsp)
5325(3): setz %al
5328(3): test %r9b,%r9b
532b(6): jnz 0x4b5(%rip)
5331(3): mov %r8d,%esi
5334(3): xor $0x1,%esi
5337(3): and %sil,%al
533a(2): jz 0x31(%rip)
533c(3): cmp %r15,%r13
533f(2): jbe 0x7(%rip)
5341(5): mov $0x27,0x0(%r14,%r15,1)
5346(4): lea 0x1(%r15),%rsi
534a(3): cmp %rsi,%r13
534d(2): jbe 0x8(%rip)
534f(6): mov $0x24,0x1(%r14,%r15,1)
5355(4): lea 0x2(%r15),%rsi
5359(3): cmp %rsi,%r13
535c(2): jbe 0x8(%rip)
535e(6): mov $0x27,0x2(%r14,%r15,1)
5364(4): add $0x3,%r15
5368(3): mov %eax,%r8d
536b(3): cmp %r15,%r13
536e(2): jbe 0x7(%rip)
5370(5): mov $0x5c,0x0(%r14,%r15,1)
5375(4): lea 0x1(%r15),%rax
5379(3): cmp %rax,%r13
537c(2): jbe 0xf(%rip)
537e(2): mov %ebx,%eax
5380(3): shr $0x6,%al
5383(3): add $0x30,%eax
5386(5): mov %al,0x1(%r14,%r15,1)
538b(4): lea 0x2(%r15),%rax
538f(3): cmp %rax,%r13
5392(2): jbe 0x12(%rip)
5394(2): mov %ebx,%eax
5396(3): shr $0x3,%al
5399(3): and $0x7,%eax
539c(3): add $0x30,%eax
539f(5): mov %al,0x2(%r14,%r15,1)
53a4(3): and $0x7,%ebx
53a7(4): add $0x1,%rbp
53ab(4): add $0x3,%r15
53af(3): add $0x30,%ebx
53b2(3): cmp %rcx,%rbp
53b5(6): jnb 0xfffff7eb(%rip)
53bb(2): mov %edx,%esi
53bd(3): cmp %r15,%r13
53c0(2): jbe 0x6(%rip)
53c2(4): mov %bl,0x0(%r14,%r15,1)
53c6(4): movzx 0x0(%rdi,%rbp,1),%ebx
53ca(4): add $0x1,%r15
53ce(2): test %dl,%dl
53d0(6): jnz 0xffffff50(%rip)
53d6(2): mov %esi,%eax
53d8(3): xor $0x1,%eax
53db(3): and %r8d,%eax
53de(3): test %r10b,%r10b
53e1(2): jz 0x10(%rip)
53e3(3): cmp %r15,%r13
53e6(2): jbe 0x7(%rip)
53e8(5): mov $0x5c,0x0(%r14,%r15,1)
53ed(4): add $0x1,%r15
53f1(4): add $0x1,%rbp
53f5(3): cmp %rcx,%rbp
53f8(6): jnb 0xfffff784(%rip)
53fe(2): test %al,%al
5400(6): jz 0x3fe(%rip)
5406(3): cmp %r15,%r13
5409(2): jbe 0x7(%rip)
540b(5): mov $0x27,0x0(%r14,%r15,1)
5410(4): lea 0x1(%r15),%rax
5414(3): cmp %rax,%r13
5417(2): jbe 0x8(%rip)
5419(6): mov $0x27,0x1(%r14,%r15,1)
541f(4): add $0x2,%r15
5423(3): xor %r10d,%r10d
5426(3): xor %r8d,%r8d
5429(2): jmp 0xffffff94(%rip)
542b(5): nop 0x0(%rax,%rax,1)
5430(4): cmp $0x1,%r15
5434(6): jz 0xfffffe65(%rip)
543a(5): mov 0x10(%rsp),%rdi
543f(4): lea 0x0(%rdi,%r15,1),%rcx
5443(5): lea 0x1(%rdi,%r14,1),%rdx
5448(4): lea 0x0(%rcx,%r14,1),%r8
544c(2): jmp 0x11(%rip)
544e(2): nop 
5450(4): add $0x1,%rdx
5454(3): cmp %rdx,%r8
5457(6): jz 0xfffffe42(%rip)
545d(3): movzx (%rdx),%ecx
5460(3): sub $0x5b,%ecx
5463(3): cmp $0x21,%cl
5466(2): jnbe 0xffffffea(%rip)
5468(5): mov $0x1,%esi
546d(3): shl/sal %cl,%rsi
5470(3): mov %rsi,%rcx
5473(a): mov $0x8589934635,%rsi
547d(3): test %rsi,%rcx
5480(2): jz 0xffffffd0(%rip)
5482(5): mov 0x40(%rsp),%r14
5487(5): mov 0x70(%rsp),%r13
548c(5): mov 0x30(%rsp),%rbp
5491(8): mov $0x2,0x8(%rsp)
5499(5): cmp $0x0,0xd(%rsp)
549e(2): jz 0x12(%rip)
54a0(2): test %al,%al
54a2(5): mov $0x4,%eax
54a7(5): cmove 0x8(%rsp),%eax
54ac(4): mov %eax,0x8(%rsp)
54b0(4): sub $0x8,%rsp
54b4(3): mov %rbp,%rcx
54b7(3): mov %r13,%rsi
54ba(4): push 0x68(%rsp)
54be(4): push 0x78(%rsp)
54c2(3): mov %r14,%rdi
54c5(2): push $0x0
54c7(8): mov 0x98(%rsp),%r9d
54cf(5): mov 0x28(%rsp),%r8d
54d4(5): mov 0x30(%rsp),%rdx
54d9(4): and $0xfd,%r9d
54dd(5): call 0xfffff433(%rip)
54e2(4): add $0x20,%rsp
54e6(3): mov %rax,%r15
54e9(8): mov 0xa8(%rsp),%rbx
54f1(9): xor $0x28,%rbx
54fa(3): mov %r15,%rax
54fd(6): jnz 0x606(%rip)
5503(7): add $0xb8,%rsp
550a(1): pop %rbx
550b(1): pop %rbp
550c(2): pop %r12
550e(2): pop %r13
5510(2): pop %r14
5512(2): pop %r15
5514(1): ret near (%rsp)
5515(3): nop (%rax)
5518(3): mov %r11,%rbp
551b(5): jmp 0xffffff7e(%rip)
5520(3): cmp %r15,%r13
5523(2): jbe 0x7(%rip)
5525(5): mov $0x27,0x0(%r14,%r15,1)
552a(4): lea 0x1(%r15),%rax
552e(3): cmp %rax,%r13
5531(2): jbe 0x8(%rip)
5533(6): mov $0x5c,0x1(%r14,%r15,1)
5539(4): lea 0x2(%r15),%rax
553d(3): cmp %rax,%r13
5540(6): jbe 0x5f2(%rip)
5546(3): mov %r13,%rdx
5549(6): mov $0x27,0x2(%r14,%r15,1)
554f(5): mov 0x50(%rsp),%r13
5554(5): jmp 0xfffffbde(%rip)
5559(3): mov %r12d,%eax
555c(5): mov $0x30,%ebx
5561(3): xor %r12d,%r12d
5564(5): jmp 0xfffff605(%rip)
5569(6): mov $0x27,0x2(%r14,%r15,1)
556f(5): jmp 0xfffff9ca(%rip)
5574(2): test %ebx,%ebx
5576(6): jnz 0xfffff42d(%rip)
557c(5): mov $0x1,0xd(%rsp)
5581(3): test %r13,%r13
5584(6): jnz 0x596(%rip)
558a(7): lea 0x10b0d(%rip),%rax
5591(9): mov $0x0,0x50(%rsp)
559a(5): mov $0x1,0xe(%rsp)
559f(5): mov $0x0,0x7c(%rsp)
55a4(3): xor %r12d,%r12d
55a7(5): mov $0x0,0xf(%rsp)
55ac(9): mov $0x1,0x18(%rsp)
55b5(5): mov %rax,0x48(%rsp)
55ba(6): mov $0x1,%r15d
55c0(8): mov $0x2,0x8(%rsp)
55c8(5): jmp 0xfffff41b(%rip)
55cd(3): nop (%rax)
55d0(2): test %ebx,%ebx
55d2(6): jnz 0x3fb(%rip)
55d8(3): test %r13,%r13
55db(6): jz 0x22b(%rip)
55e1(4): mov $0x22,(%r14)
55e5(5): mov $0x1,0xe(%rsp)
55ea(3): xor %r12d,%r12d
55ed(5): mov $0x0,0x7c(%rsp)
55f2(9): mov $0x0,0x50(%rsp)
55fb(7): lea 0x10c49(%rip),%rax
5602(5): mov $0x0,0xf(%rsp)
5607(5): mov $0x1,0xd(%rsp)
560c(9): mov $0x1,0x18(%rsp)
5615(6): mov $0x1,%r15d
561b(5): mov %rax,0x48(%rsp)
5620(5): jmp 0xfffff3c3(%rip)
5625(7): lea 0x10c1f(%rip),%rax
562c(5): mov $0x1,0xe(%rsp)
5631(5): mov $0x0,0x7c(%rsp)
5636(3): xor %r12d,%r12d
5639(9): mov $0x0,0x50(%rsp)
5642(5): mov $0x1,0xf(%rsp)
5647(5): mov $0x1,0xd(%rsp)
564c(9): mov $0x1,0x18(%rsp)
5655(3): xor %r15d,%r15d
5658(5): mov %rax,0x48(%rsp)
565d(8): mov $0x5,0x8(%rsp)
5665(5): jmp 0xfffff37e(%rip)
566a(5): mov $0x1,0xe(%rsp)
566f(5): mov $0x0,0x7c(%rsp)
5674(3): xor %r12d,%r12d
5677(9): mov $0x0,0x50(%rsp)
5680(5): mov $0x0,0xf(%rsp)
5685(3): xor %r15d,%r15d
5688(5): mov $0x1,0xd(%rsp)
568d(9): mov $0x0,0x18(%rsp)
5696(9): mov $0x0,0x48(%rsp)
569f(5): jmp 0xfffff344(%rip)
56a4(5): cmp $0xa,0x8(%rsp)
56a9(2): jz 0x58(%rip)
56ab(7): lea 0x10b9b(%rip),%rsi
56b2(2): xor %edi,%edi
56b4(5): mov $0x5,%edx
56b9(5): call 0xffffc3d7(%rip)
56be(3): mov %rax,%rcx
56c1(5): mov %rax,0x68(%rsp)
56c6(7): lea 0x10b80(%rip),%rax
56cd(3): cmp %rax,%rcx
56d0(6): jz 0x39e(%rip)
56d6(7): lea 0x109c1(%rip),%rsi
56dd(2): xor %edi,%edi
56df(5): mov $0x5,%edx
56e4(5): call 0xffffc3ac(%rip)
56e9(3): mov %rax,%rcx
56ec(5): mov %rax,0x60(%rsp)
56f1(7): lea 0x109a6(%rip),%rax
56f8(3): cmp %rax,%rcx
56fb(6): jz 0x389(%rip)
5701(3): xor %r15d,%r15d
5704(2): test %ebx,%ebx
5706(6): jz 0x1c7(%rip)
570c(2): test %ebx,%ebx
570e(5): mov 0x60(%rsp),%rbx
5713(5): setnz 0xf(%rsp)
5718(3): xor %r12d,%r12d
571b(3): mov %rbx,%rdi
571e(5): call 0xffffc392(%rip)
5723(5): mov %rbx,0x48(%rsp)
5728(5): mov %rax,0x18(%rsp)
572d(5): mov $0x1,0xe(%rsp)
5732(5): mov $0x0,0x7c(%rsp)
5737(9): mov $0x0,0x50(%rsp)
5740(5): mov $0x1,0xd(%rsp)
5745(5): jmp 0xfffff29e(%rip)
574a(5): mov $0x1,0xe(%rsp)
574f(5): mov $0x0,0x7c(%rsp)
5754(3): xor %r12d,%r12d
5757(9): mov $0x0,0x50(%rsp)
5760(5): mov $0x0,0xf(%rsp)
5765(3): xor %r15d,%r15d
5768(5): mov $0x0,0xd(%rsp)
576d(9): mov $0x0,0x18(%rsp)
5776(9): mov $0x0,0x48(%rsp)
577f(5): jmp 0xfffff264(%rip)
5784(5): mov $0x1,0xe(%rsp)
5789(5): mov $0x0,0x7c(%rsp)
578e(3): xor %r12d,%r12d
5791(9): mov $0x0,0x50(%rsp)
579a(5): mov $0x1,0xf(%rsp)
579f(5): mov $0x1,0xd(%rsp)
57a4(5): jmp 0xfffff21f(%rip)
57a9(3): cmp %r15,%r13
57ac(2): jbe 0x7(%rip)
57ae(5): mov $0x30,0x0(%r14,%r15,1)
57b3(4): lea 0x2(%rcx),%rax
57b7(3): cmp %rax,%r13
57ba(2): jbe 0x8(%rip)
57bc(6): mov $0x30,0x2(%r14,%rcx,1)
57c2(3): mov %r12d,%eax
57c5(4): lea 0x3(%rcx),%r15
57c9(3): xor %r12d,%r12d
57cc(5): mov $0x30,%ebx
57d1(5): jmp 0xfffff367(%rip)
57d6(a): nop 0x0(%rax,%rax,1)
57e0(5): movzx 0xf(%rsp),%ebx
57e5(3): mov %r11,%rbp
57e8(4): mov %bl,0xd(%rsp)
57ec(5): jmp 0xfffffcad(%rip)
57f1(5): movzx 0xd(%rsp),%edx
57f6(3): xor %r12d,%r12d
57f9(5): jmp 0xfffffb07(%rip)
57fe(3): xor %r10d,%r10d
5801(5): jmp 0xfffffbbc(%rip)
5806(9): mov $0x0,0x50(%rsp)
580f(5): mov $0x1,0xe(%rsp)
5814(3): xor %r12d,%r12d
5817(5): mov $0x0,0x7c(%rsp)
581c(5): jmp 0xfffffddf(%rip)
5821(5): mov 0x30(%rsp),%r11
5826(3): mov %r14,%rsi
5829(3): mov %r13,%rcx
582c(3): mov %rbx,%rax
582f(3): mov %rbx,%rdi
5832(6): movzx 0x7d(%rsp),%r8d
5838(5): movzx 0x7e(%rsp),%ebx
583d(8): mov 0x88(%rsp),%r9
5845(3): cmp %r11,%rsi
5848(6): movzx 0x7f(%rsp),%r10d
584e(8): mov 0x80(%rsp),%r15
5856(5): mov 0x40(%rsp),%r14
585b(5): mov 0x70(%rsp),%r13
5860(2): jnb 0x28(%rip)
5862(3): cmp $0x0,(%rcx)
5865(2): jnz 0x12(%rip)
5867(2): jmp 0x21(%rip)
5869(7): nop 0x0(%rax)
5870(5): cmp $0x0,0x0(%r9,%rax,1)
5875(2): jz 0x10(%rip)
5877(4): add $0x1,%rax
587b(5): lea 0x0(%rbp,%rax,1),%rdx
5880(3): cmp %rdx,%r11
5883(2): jnbe 0xffffffed(%rip)
5885(3): mov %rax,%rdi
5888(5): movzx 0xd(%rsp),%edx
588d(3): xor %r12d,%r12d
5890(5): jmp 0xfffffa66(%rip)
5895(3): mov %rbx,%rdi
5898(6): movzx 0x7d(%rsp),%r8d
589e(5): movzx 0x7e(%rsp),%ebx
58a3(6): movzx 0x7f(%rsp),%r10d
58a9(8): mov 0x80(%rsp),%r15
58b1(3): xor %r12d,%r12d
58b4(5): mov 0x40(%rsp),%r14
58b9(5): mov 0x70(%rsp),%r13
58be(5): mov 0x30(%rsp),%r11
58c3(5): movzx 0xd(%rsp),%edx
58c8(5): jmp 0xfffffa2e(%rip)
58cd(5): mov 0x68(%rsp),%rdx
58d2(3): movzx (%rdx),%eax
58d5(2): test %al,%al
58d7(6): jz 0xfffffe35(%rip)
58dd(3): nop (%rax)
58e0(3): cmp %r15,%r13
58e3(2): jbe 0x6(%rip)
58e5(4): mov %al,0x0(%r14,%r15,1)
58e9(4): add $0x1,%r15
58ed(5): movzx 0x0(%rdx,%r15,1),%eax
58f2(2): test %al,%al
58f4(2): jnz 0xffffffec(%rip)
58f6(5): jmp 0xfffffe16(%rip)
58fb(2): mov %edx,%eax
58fd(5): jmp 0xfffff55a(%rip)
5902(4): movzx 0x0(%rax,%rcx,1),%ebx
5906(3): cmp $0x3e,%bl
5909(6): jnbe 0xfffff877(%rip)
590f(a): mov $0x8070630310989004800,%rax
5919(4): bt %rbx,%rax
591d(6): jnb 0xfffff863(%rip)
5923(5): cmp $0x0,0xf(%rsp)
5928(6): jnz 0x1ea(%rip)
592e(3): cmp %r15,%r13
5931(2): jbe 0x7(%rip)
5933(5): mov $0x3f,0x0(%r14,%r15,1)
5938(4): lea 0x1(%r15),%rax
593c(3): cmp %rax,%r13
593f(2): jbe 0x8(%rip)
5941(6): mov $0x22,0x1(%r14,%r15,1)
5947(4): lea 0x2(%r15),%rax
594b(3): cmp %rax,%r13
594e(2): jbe 0x8(%rip)
5950(6): mov $0x22,0x2(%r14,%r15,1)
5956(4): lea 0x3(%r15),%rax
595a(3): cmp %rax,%r13
595d(2): jbe 0x8(%rip)
595f(6): mov $0x3f,0x3(%r14,%r15,1)
5965(4): add $0x4,%r15
5969(2): xor %edx,%edx
596b(3): xor %r12d,%r12d
596e(2): xor %eax,%eax
5970(3): mov %rcx,%rbp
5973(5): jmp 0xfffff1c5(%rip)
5978(2): test %ebx,%ebx
597a(6): jz 0x18e(%rip)
5980(7): lea 0x10717(%rip),%rax
5987(5): mov $0x1,0xe(%rsp)
598c(5): mov $0x0,0x7c(%rsp)
5991(3): xor %r12d,%r12d
5994(9): mov $0x0,0x50(%rsp)
599d(5): mov $0x1,0xf(%rsp)
59a2(5): mov $0x0,0xd(%rsp)
59a7(9): mov $0x1,0x18(%rsp)
59b0(3): xor %r15d,%r15d
59b3(5): mov %rax,0x48(%rsp)
59b8(5): jmp 0xfffff02b(%rip)
59bd(3): nop (%rax)
59c0(3): mov %r11,%rbp
59c3(5): movzx 0xf(%rsp),%eax
59c8(5): jmp 0xfffffad1(%rip)
59cd(7): lea 0x10877(%rip),%rax
59d4(5): mov $0x1,0xe(%rsp)
59d9(5): mov $0x0,0x7c(%rsp)
59de(3): xor %r12d,%r12d
59e1(9): mov $0x0,0x50(%rsp)
59ea(5): mov $0x1,0xf(%rsp)
59ef(5): mov $0x1,0xd(%rsp)
59f4(9): mov $0x1,0x18(%rsp)
59fd(3): xor %r15d,%r15d
5a00(5): mov %rax,0x48(%rsp)
5a05(5): jmp 0xffffefde(%rip)
5a0a(2): mov %edx,%eax
5a0c(5): mov 0x48(%rsp),%rbx
5a11(3): test %rbx,%rbx
5a14(2): jz 0x2e(%rip)
5a16(2): test %al,%al
5a18(2): jz 0x2a(%rip)
5a1a(3): movzx (%rbx),%ecx
5a1d(3): mov %rbx,%rax
5a20(2): test %cl,%cl
5a22(2): jz 0x20(%rip)
5a24(3): mov %r15,%rdx
5a27(3): sub %r15,%rax
5a2a(3): cmp %rdx,%r13
5a2d(2): jbe 0x6(%rip)
5a2f(4): mov %cl,0x0(%r14,%rdx,1)
5a33(4): add $0x1,%rdx
5a37(4): movzx 0x0(%rax,%rdx,1),%ecx
5a3b(2): test %cl,%cl
5a3d(2): jnz 0xffffffed(%rip)
5a3f(3): mov %rdx,%r15
5a42(3): cmp %r15,%r13
5a45(6): jbe 0xfffffaa4(%rip)
5a4b(5): mov $0x0,0x0(%r14,%r15,1)
5a50(5): jmp 0xfffffa99(%rip)
5a55(5): cmp $0x2,0x8(%rsp)
5a5a(5): movzx 0xf(%rsp),%ebx
5a5f(3): mov %r11,%rbp
5a62(3): setz %al
5a65(4): mov %bl,0xd(%rsp)
5a69(5): jmp 0xfffffa30(%rip)
5a6e(4): mov 0x8(%rsp),%esi
5a72(3): mov %rcx,%rdi
5a75(5): call 0xffffedab(%rip)
5a7a(5): mov %rax,0x68(%rsp)
5a7f(5): jmp 0xfffffc57(%rip)
5a84(4): mov 0x8(%rsp),%esi
5a88(3): mov %rcx,%rdi
5a8b(5): call 0xffffed95(%rip)
5a90(5): mov %rax,0x60(%rsp)
5a95(5): jmp 0xfffffc6c(%rip)
5a9a(5): movzx 0xf(%rsp),%ebx
5a9f(3): mov %r11,%rbp
5aa2(2): mov %edx,%eax
5aa4(4): mov %bl,0xd(%rsp)
5aa8(5): jmp 0xfffff9f1(%rip)
5aad(4): sub $0x8,%rsp
5ab1(6): mov $0x5,%r8d
5ab7(3): mov %r11,%rcx
5aba(4): push 0x68(%rsp)
5abe(4): push 0x78(%rsp)
5ac2(3): mov %r14,%rdi
5ac5(4): push 0x38(%rsp)
5ac9(8): mov 0x98(%rsp),%r9d
5ad1(5): mov 0x30(%rsp),%rdx
5ad6(5): mov 0x70(%rsp),%rsi
5adb(5): call 0xffffee35(%rip)
5ae0(4): add $0x20,%rsp
5ae4(3): mov %rax,%r15
5ae7(5): jmp 0xfffffa02(%rip)
5aec(5): movzx 0x7c(%rsp),%eax
5af1(5): jmp 0xffffff1b(%rip)
5af6(8): mov $0x2,0x8(%rsp)
5afe(5): jmp 0xfffff99b(%rip)
5b03(5): call 0xffffbfcd(%rip)
5b08(5): mov $0x0,0xd(%rsp)
5b0d(5): jmp 0xfffffa74(%rip)
5b12(3): mov %r11,%rbp
5b15(5): jmp 0xfffff99b(%rip)
5b1a(5): mov $0x1,0xe(%rsp)
5b1f(2): xor %eax,%eax
5b21(3): xor %r12d,%r12d
5b24(9): mov $0x0,0x50(%rsp)
5b2d(5): jmp 0xfffff5a7(%rip)
5b32(3): mov %r13,%rdx
5b35(5): mov 0x50(%rsp),%r13
5b3a(5): jmp 0xfffff5f8(%rip)
5b3f(5): call 0xffffbea1(%rip)

"quotearg_n_options" :
5b50(2): push %r15
5b52(2): push %r14
5b54(3): movsxd %edi,%r15
5b57(2): push %r13
5b59(2): push %r12
5b5b(3): mov %rdx,%r14
5b5e(1): push %rbp
5b5f(1): push %rbx
5b60(3): mov %rcx,%rbp
5b63(4): sub $0x28,%rsp
5b67(5): mov %rsi,0x8(%rsp)
5b6c(5): call 0xffffbe84(%rip)
5b71(3): mov %rax,%r13
5b74(2): mov (%rax),%eax
5b76(3): test %r15d,%r15d
5b79(7): mov 0x2154e0(%rip),%rbx
5b80(4): mov %eax,0x18(%rsp)
5b84(6): js 0x16d(%rip)
5b8a(7): cmp %r15d,0x2154c7(%rip)
5b91(2): jnle 0x64(%rip)
5b93(7): cmp $0x7fffffff,%r15d
5b9a(6): jz 0x15c(%rip)
5ba0(4): lea 0x1(%r15),%r12d
5ba4(7): lea 0x2154c5(%rip),%rax
5bab(3): movsxd %r12d,%rsi
5bae(4): shl/sal $0x4,%rsi
5bb2(3): cmp %rax,%rbx
5bb5(6): jz 0x11b(%rip)
5bbb(3): mov %rbx,%rdi
5bbe(5): call 0x1262(%rip)
5bc3(3): mov %rax,%rbx
5bc6(7): mov %rax,0x215493(%rip)
5bcd(7): movsxd 0x215484(%rip),%rdi
5bd4(3): mov %r12d,%edx
5bd7(2): xor %esi,%esi
5bd9(2): sub %edi,%edx
5bdb(4): shl/sal $0x4,%rdi
5bdf(3): movsxd %edx,%rdx
5be2(3): add %rbx,%rdi
5be5(4): shl/sal $0x4,%rdx
5be9(5): call 0xffffbf77(%rip)
5bee(7): mov %r12d,0x215463(%rip)
5bf5(3): mov 0x4(%rbp),%eax
5bf8(4): shl/sal $0x4,%r15
5bfc(4): sub $0x8,%rsp
5c00(3): add %r15,%rbx
5c03(4): lea 0x8(%rbp),%r15
5c07(4): mov 0x0(%rbp),%r8d
5c0b(3): mov (%rbx),%r11
5c0e(4): mov 0x8(%rbx),%r12
5c12(3): mov %r14,%rcx
5c15(3): or $0x1,%eax
5c18(4): mov %eax,0x24(%rsp)
5c1c(3): push 0x30(%rbp)
5c1f(3): mov %eax,%r9d
5c22(3): push 0x28(%rbp)
5c25(2): push %r15
5c27(3): mov %r11,%rsi
5c2a(5): mov 0x28(%rsp),%rdx
5c2f(3): mov %r12,%rdi
5c32(5): mov %r11,0x30(%rsp)
5c37(5): call 0xffffecd9(%rip)
5c3c(4): add $0x20,%rsp
5c40(5): mov 0x10(%rsp),%r11
5c45(3): cmp %rax,%r11
5c48(2): jnbe 0x69(%rip)
5c4a(4): lea 0x1(%rax),%rsi
5c4e(7): lea 0x2154ab(%rip),%rax
5c55(3): cmp %rax,%r12
5c58(3): mov %rsi,(%rbx)
5c5b(2): jz 0x14(%rip)
5c5d(3): mov %r12,%rdi
5c60(5): mov %rsi,0x10(%rsp)
5c65(5): call 0xffffbd6b(%rip)
5c6a(5): mov 0x10(%rsp),%rsi
5c6f(3): mov %rsi,%rdi
5c72(5): mov %rsi,0x10(%rsp)
5c77(5): call 0x1149(%rip)
5c7c(4): sub $0x8,%rsp
5c80(4): mov %rax,0x8(%rbx)
5c84(4): mov 0x0(%rbp),%r8d
5c88(3): push 0x30(%rbp)
5c8b(3): push 0x28(%rbp)
5c8e(3): mov %r14,%rcx
5c91(2): push %r15
5c93(5): mov 0x3c(%rsp),%r9d
5c98(3): mov %rax,%rdi
5c9b(5): mov 0x28(%rsp),%rdx
5ca0(5): mov 0x30(%rsp),%rsi
5ca5(3): mov %rax,%r12
5ca8(5): call 0xffffec68(%rip)
5cad(4): add $0x20,%rsp
5cb1(4): mov 0x18(%rsp),%eax
5cb5(4): mov %eax,0x0(%r13)
5cb9(4): add $0x28,%rsp
5cbd(3): mov %r12,%rax
5cc0(1): pop %rbx
5cc1(1): pop %rbp
5cc2(2): pop %r12
5cc4(2): pop %r13
5cc6(2): pop %r14
5cc8(2): pop %r15
5cca(1): ret near (%rsp)
5ccb(5): nop 0x0(%rax,%rax,1)
5cd0(2): xor %edi,%edi
5cd2(5): call 0x114e(%rip)
5cd7(8): movdqa 0x215391(%rip),%xmm0
5cdf(3): mov %rax,%rbx
5ce2(7): mov %rax,0x215377(%rip)
5ce9(3): movups %xmm0,(%rax)
5cec(5): jmp 0xfffffee1(%rip)
5cf1(5): call 0xffffbcef(%rip)
5cf6(5): call 0x131a(%rip)

"clone_quoting_options" :
5d00(2): push %r12
5d02(1): push %rbp
5d03(1): push %rbx
5d04(3): mov %rdi,%rbx
5d07(5): call 0xffffbce9(%rip)
5d0c(3): mov (%rax),%r12d
5d0f(3): mov %rax,%rbp
5d12(7): lea 0x2154e7(%rip),%rax
5d19(3): test %rbx,%rbx
5d1c(5): mov $0x38,%esi
5d21(4): cmove %rax,%rbx
5d25(3): mov %rbx,%rdi
5d28(5): call 0x1298(%rip)
5d2d(4): mov %r12d,0x0(%rbp)
5d31(1): pop %rbx
5d32(1): pop %rbp
5d33(2): pop %r12
5d35(1): ret near (%rsp)

"get_quoting_style" :
5d40(7): lea 0x2154b9(%rip),%rax
5d47(3): test %rdi,%rdi
5d4a(4): cmove %rax,%rdi
5d4e(2): mov (%rdi),%eax
5d50(1): ret near (%rsp)

"set_quoting_style" :
5d60(7): lea 0x215499(%rip),%rax
5d67(3): test %rdi,%rdi
5d6a(4): cmove %rax,%rdi
5d6e(2): mov %esi,(%rdi)
5d70(1): ret near (%rsp)

"set_char_quoting" :
5d80(7): lea 0x215479(%rip),%rax
5d87(3): test %rdi,%rdi
5d8a(2): mov %esi,%ecx
5d8c(4): cmove %rax,%rdi
5d90(2): mov %esi,%eax
5d92(3): and $0x1f,%ecx
5d95(3): shr $0x5,%al
5d98(3): movzx %al,%eax
5d9b(5): lea 0x8(%rdi,%rax,4),%rdi
5da0(2): mov (%rdi),%esi
5da2(2): mov %esi,%eax
5da4(2): shr %cl,%eax
5da6(2): xor %eax,%edx
5da8(3): and $0x1,%eax
5dab(3): and $0x1,%edx
5dae(2): shl/sal %cl,%edx
5db0(2): xor %esi,%edx
5db2(2): mov %edx,(%rdi)
5db4(1): ret near (%rsp)

"set_quoting_flags" :
5dc0(7): lea 0x215439(%rip),%rax
5dc7(3): test %rdi,%rdi
5dca(4): cmove %rax,%rdi
5dce(3): mov 0x4(%rdi),%eax
5dd1(3): mov %esi,0x4(%rdi)
5dd4(1): ret near (%rsp)

"set_custom_quoting" :
5de0(7): lea 0x215419(%rip),%rax
5de7(3): test %rdi,%rdi
5dea(4): cmove %rax,%rdi
5dee(3): test %rsi,%rsi
5df1(6): mov $0xa,(%rdi)
5df7(2): jz 0x10(%rip)
5df9(3): test %rdx,%rdx
5dfc(2): jz 0xb(%rip)
5dfe(4): mov %rsi,0x28(%rdi)
5e02(4): mov %rdx,0x30(%rdi)
5e06(1): ret near (%rsp)
5e07(4): sub $0x8,%rsp
5e0b(5): call 0xffffbbd5(%rip)

"quotearg_buffer" :
5e10(2): push %r15
5e12(2): push %r14
5e14(7): lea 0x2153e5(%rip),%rax
5e1b(2): push %r13
5e1d(2): push %r12
5e1f(3): mov %rdi,%r13
5e22(1): push %rbp
5e23(1): push %rbx
5e24(3): mov %r8,%rbx
5e27(3): mov %rsi,%r14
5e2a(3): mov %rdx,%r15
5e2d(4): sub $0x18,%rsp
5e31(3): test %r8,%r8
5e34(4): cmove %rax,%rbx
5e38(5): mov %rcx,0x8(%rsp)
5e3d(5): call 0xffffbbb3(%rip)
5e42(3): mov (%rax),%r12d
5e45(3): mov %rax,%rbp
5e48(4): lea 0x8(%rbx),%rax
5e4c(4): sub $0x8,%rsp
5e50(4): mov 0x4(%rbx),%r9d
5e54(3): push 0x30(%rbx)
5e57(3): mov (%rbx),%r8d
5e5a(3): push 0x28(%rbx)
5e5d(3): mov %r15,%rdx
5e60(1): push %rax
5e61(5): mov 0x28(%rsp),%rcx
5e66(3): mov %r14,%rsi
5e69(3): mov %r13,%rdi
5e6c(5): call 0xffffeaa4(%rip)
5e71(4): mov %r12d,0x0(%rbp)
5e75(4): add $0x38,%rsp
5e79(1): pop %rbx
5e7a(1): pop %rbp
5e7b(2): pop %r12
5e7d(2): pop %r13
5e7f(2): pop %r14
5e81(2): pop %r15
5e83(1): ret near (%rsp)

"quotearg_alloc_mem" :
5e90(2): push %r15
5e92(2): push %r14
5e94(7): lea 0x215365(%rip),%rax
5e9b(2): push %r13
5e9d(2): push %r12
5e9f(3): mov %rdx,%r12
5ea2(1): push %rbp
5ea3(1): push %rbx
5ea4(3): mov %rcx,%rbx
5ea7(3): mov %rdi,%r14
5eaa(3): mov %rsi,%r15
5ead(4): sub $0x38,%rsp
5eb1(3): test %rcx,%rcx
5eb4(4): cmove %rax,%rbx
5eb8(2): xor %ebp,%ebp
5eba(5): call 0xffffbb36(%rip)
5ebf(3): test %r12,%r12
5ec2(3): mov %rax,%r13
5ec5(2): mov (%rax),%eax
5ec7(4): setz %bpl
5ecb(3): or 0x4(%rbx),%ebp
5ece(4): lea 0x8(%rbx),%r10
5ed2(4): sub $0x8,%rsp
5ed6(3): mov (%rbx),%r8d
5ed9(3): mov %r15,%rcx
5edc(4): mov %eax,0x14(%rsp)
5ee0(3): push 0x30(%rbx)
5ee3(3): mov %r14,%rdx
5ee6(3): push 0x28(%rbx)
5ee9(2): push %r10
5eeb(2): xor %esi,%esi
5eed(3): mov %ebp,%r9d
5ef0(2): xor %edi,%edi
5ef2(5): mov %r10,0x40(%rsp)
5ef7(5): call 0xffffea19(%rip)
5efc(4): lea 0x1(%rax),%rsi
5f00(5): mov %rax,0x48(%rsp)
5f05(4): add $0x20,%rsp
5f09(3): mov %rsi,%rdi
5f0c(5): mov %rsi,0x18(%rsp)
5f11(5): call 0xeaf(%rip)
5f16(5): mov %rax,0x10(%rsp)
5f1b(4): sub $0x8,%rsp
5f1f(3): push 0x30(%rbx)
5f22(3): push 0x28(%rbx)
5f25(5): mov 0x38(%rsp),%r10
5f2a(3): mov %ebp,%r9d
5f2d(3): mov (%rbx),%r8d
5f30(3): mov %r15,%rcx
5f33(3): mov %r14,%rdx
5f36(3): mov %rax,%rdi
5f39(2): push %r10
5f3b(5): mov 0x38(%rsp),%rsi
5f40(5): call 0xffffe9d0(%rip)
5f45(4): mov 0x2c(%rsp),%eax
5f49(4): add $0x20,%rsp
5f4d(3): test %r12,%r12
5f50(4): mov %eax,0x0(%r13)
5f54(2): jz 0xb(%rip)
5f56(5): mov 0x28(%rsp),%r11
5f5b(4): mov %r11,(%r12)
5f5f(5): mov 0x10(%rsp),%rax
5f64(4): add $0x38,%rsp
5f68(1): pop %rbx
5f69(1): pop %rbp
5f6a(2): pop %r12
5f6c(2): pop %r13
5f6e(2): pop %r14
5f70(2): pop %r15
5f72(1): ret near (%rsp)

"quotearg_alloc" :
5f80(3): mov %rdx,%rcx
5f83(2): xor %edx,%edx
5f85(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5f90(6): mov 0x2150c2(%rip),%eax
5f96(2): push %r12
5f98(7): mov 0x2150c1(%rip),%r12
5f9f(1): push %rbp
5fa0(1): push %rbx
5fa1(3): cmp $0x1,%eax
5fa4(2): jle 0x2d(%rip)
5fa6(3): sub $0x2,%eax
5fa9(5): lea 0x18(%r12),%rbx
5fae(4): shl/sal $0x4,%rax
5fb2(5): lea 0x28(%r12,%rax,1),%rbp
5fb7(9): nop 0x0(%rax,%rax,1)
5fc0(3): mov (%rbx),%rdi
5fc3(4): add $0x10,%rbx
5fc7(5): call 0xffffba09(%rip)
5fcc(3): cmp %rbp,%rbx
5fcf(2): jnz 0xfffffff1(%rip)
5fd1(5): mov 0x8(%r12),%rdi
5fd6(7): lea 0x215123(%rip),%rbx
5fdd(3): cmp %rbx,%rdi
5fe0(2): jz 0x19(%rip)
5fe2(5): call 0xffffb9ee(%rip)
5fe7(b): mov $0x100,0x21507e(%rip)
5ff2(7): mov %rbx,0x21507f(%rip)
5ff9(7): lea 0x215070(%rip),%rbx
6000(3): cmp %rbx,%r12
6003(2): jz 0x11(%rip)
6005(3): mov %r12,%rdi
6008(5): call 0xffffb9c8(%rip)
600d(7): mov %rbx,0x21504c(%rip)
6014(1): pop %rbx
6015(a): mov $0x1,0x215039(%rip)
601f(1): pop %rbp
6020(2): pop %r12
6022(1): ret near (%rsp)

"quotearg_n" :
6030(7): lea 0x2151c9(%rip),%rcx
6037(7): mov $0xffffffff,%rdx
603e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
6050(7): lea 0x2151a9(%rip),%rcx
6057(5): jmp 0xfffffaf9(%rip)

"quotearg" :
6060(7): lea 0x215199(%rip),%rcx
6067(3): mov %rdi,%rsi
606a(7): mov $0xffffffff,%rdx
6071(2): xor %edi,%edi
6073(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
6080(7): lea 0x215179(%rip),%rcx
6087(3): mov %rsi,%rdx
608a(3): mov %rdi,%rsi
608d(2): xor %edi,%edi
608f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
60a0(4): sub $0x48,%rsp
60a4(3): mov %rdx,%rax
60a7(9): mov $0x28,%rdx
60b0(5): mov %rdx,0x38(%rsp)
60b5(2): xor %edx,%edx
60b7(3): cmp $0xa,%esi
60ba(2): jz 0x6a(%rip)
60bc(3): mov %esi,(%rsp)
60bf(3): mov %rsp,%rcx
60c2(7): mov $0xffffffff,%rdx
60c9(3): mov %rax,%rsi
60cc(9): mov $0x0,0x4(%rsp)
60d5(9): mov $0x0,0xc(%rsp)
60de(9): mov $0x0,0x14(%rsp)
60e7(9): mov $0x0,0x1c(%rsp)
60f0(9): mov $0x0,0x24(%rsp)
60f9(9): mov $0x0,0x2c(%rsp)
6102(8): mov $0x0,0x34(%rsp)
610a(5): call 0xfffffa46(%rip)
610f(5): mov 0x38(%rsp),%rcx
6114(9): xor $0x28,%rcx
611d(2): jnz 0xc(%rip)
611f(4): add $0x48,%rsp
6123(1): ret near (%rsp)
6124(5): call 0xffffb8bc(%rip)
6129(5): call 0xffffb9a7(%rip)

"quotearg_n_style_mem" :
6130(4): sub $0x48,%rsp
6134(3): mov %rdx,%rax
6137(3): mov %rcx,%rdx
613a(9): mov $0x28,%rcx
6143(5): mov %rcx,0x38(%rsp)
6148(2): xor %ecx,%ecx
614a(3): cmp $0xa,%esi
614d(2): jz 0x63(%rip)
614f(3): mov %esi,(%rsp)
6152(3): mov %rsp,%rcx
6155(3): mov %rax,%rsi
6158(9): mov $0x0,0x4(%rsp)
6161(9): mov $0x0,0xc(%rsp)
616a(9): mov $0x0,0x14(%rsp)
6173(9): mov $0x0,0x1c(%rsp)
617c(9): mov $0x0,0x24(%rsp)
6185(9): mov $0x0,0x2c(%rsp)
618e(8): mov $0x0,0x34(%rsp)
6196(5): call 0xfffff9ba(%rip)
619b(5): mov 0x38(%rsp),%rdx
61a0(9): xor $0x28,%rdx
61a9(2): jnz 0xc(%rip)
61ab(4): add $0x48,%rsp
61af(1): ret near (%rsp)
61b0(5): call 0xffffb830(%rip)
61b5(5): call 0xffffb91b(%rip)

"quotearg_style" :
61c0(3): mov %rsi,%rdx
61c3(2): mov %edi,%esi
61c5(2): xor %edi,%edi
61c7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
61d0(3): mov %rdx,%rcx
61d3(3): mov %rsi,%rdx
61d6(2): mov %edi,%esi
61d8(2): xor %edi,%edi
61da(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
61e0(4): sub $0x48,%rsp
61e4(2): mov %edx,%ecx
61e6(9): mov $0x28,%rax
61ef(5): mov %rax,0x38(%rsp)
61f4(2): xor %eax,%eax
61f6(7): mov 0x215033(%rip),%rax
61fd(3): mov %rsp,%r8
6200(3): and $0x1f,%ecx
6203(8): movdqa 0x214ff5(%rip),%xmm0
620b(5): mov %rax,0x30(%rsp)
6210(2): mov %edx,%eax
6212(4): movaps %xmm0,(%rsp)
6216(3): shr $0x5,%al
6219(3): movzx %al,%eax
621c(5): lea 0x8(%r8,%rax,4),%r9
6221(8): movdqa 0x214fe7(%rip),%xmm0
6229(5): movaps %xmm0,0x10(%rsp)
622e(8): movdqa 0x214fea(%rip),%xmm0
6236(5): movaps %xmm0,0x20(%rsp)
623b(3): mov (%r9),%edx
623e(2): mov %edx,%eax
6240(2): shr %cl,%eax
6242(2): not %eax
6244(3): and $0x1,%eax
6247(2): shl/sal %cl,%eax
6249(3): mov %r8,%rcx
624c(2): xor %edx,%eax
624e(3): mov %rsi,%rdx
6251(3): mov %rdi,%rsi
6254(3): mov %eax,(%r9)
6257(2): xor %edi,%edi
6259(5): call 0xfffff8f7(%rip)
625e(5): mov 0x38(%rsp),%rsi
6263(9): xor $0x28,%rsi
626c(2): jnz 0x7(%rip)
626e(4): add $0x48,%rsp
6272(1): ret near (%rsp)
6273(5): call 0xffffb85d(%rip)

"quotearg_char" :
6280(4): movsx %sil,%edx
6284(7): mov $0xffffffff,%rsi
628b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
6290(5): mov $0x3a,%edx
6295(7): mov $0xffffffff,%rsi
629c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
62b0(5): mov $0x3a,%edx
62b5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
62c0(4): sub $0x48,%rsp
62c4(3): mov %rdx,%rax
62c7(9): mov $0x28,%rdx
62d0(5): mov %rdx,0x38(%rsp)
62d5(2): xor %edx,%edx
62d7(3): cmp $0xa,%esi
62da(2): jz 0x6a(%rip)
62dc(3): mov %esi,(%rsp)
62df(3): mov %rsp,%rcx
62e2(7): mov $0xffffffff,%rdx
62e9(3): mov %rax,%rsi
62ec(9): mov $0x0,0x4(%rsp)
62f5(9): mov $0x4000000,0xc(%rsp)
62fe(9): mov $0x0,0x14(%rsp)
6307(9): mov $0x0,0x1c(%rsp)
6310(9): mov $0x0,0x24(%rsp)
6319(9): mov $0x0,0x2c(%rsp)
6322(8): mov $0x0,0x34(%rsp)
632a(5): call 0xfffff826(%rip)
632f(5): mov 0x38(%rsp),%rcx
6334(9): xor $0x28,%rcx
633d(2): jnz 0xc(%rip)
633f(4): add $0x48,%rsp
6343(1): ret near (%rsp)
6344(5): call 0xffffb69c(%rip)
6349(5): call 0xffffb787(%rip)

"quotearg_n_custom_mem" :
6350(4): sub $0x48,%rsp
6354(3): mov %rcx,%r9
6357(7): mov 0x214ed2(%rip),%rcx
635e(8): movdqa 0x214e9a(%rip),%xmm0
6366(9): mov $0x28,%rax
636f(5): mov %rax,0x38(%rsp)
6374(2): xor %eax,%eax
6376(4): movaps %xmm0,(%rsp)
637a(3): test %rsi,%rsi
637d(5): mov %rcx,0x30(%rsp)
6382(7): mov $0xa,(%rsp)
6389(8): movdqa 0x214e7f(%rip),%xmm0
6391(5): movaps %xmm0,0x10(%rsp)
6396(8): movdqa 0x214e82(%rip),%xmm0
639e(5): movaps %xmm0,0x20(%rsp)
63a3(2): jz 0x34(%rip)
63a5(3): test %rdx,%rdx
63a8(2): jz 0x2f(%rip)
63aa(5): mov %rsi,0x28(%rsp)
63af(5): mov %rdx,0x30(%rsp)
63b4(3): mov %rsp,%rcx
63b7(3): mov %r8,%rdx
63ba(3): mov %r9,%rsi
63bd(5): call 0xfffff793(%rip)
63c2(5): mov 0x38(%rsp),%rdi
63c7(9): xor $0x28,%rdi
63d0(2): jnz 0xc(%rip)
63d2(4): add $0x48,%rsp
63d6(1): ret near (%rsp)
63d7(5): call 0xffffb609(%rip)
63dc(5): call 0xffffb6f4(%rip)

"quotearg_n_custom" :
63f0(7): mov $0xffffffff,%r8
63f7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
6400(3): mov %rdx,%rcx
6403(7): mov $0xffffffff,%r8
640a(3): mov %rsi,%rdx
640d(3): mov %rdi,%rsi
6410(2): xor %edi,%edi
6412(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
6420(3): mov %rcx,%r8
6423(3): mov %rdx,%rcx
6426(3): mov %rsi,%rdx
6429(3): mov %rdi,%rsi
642c(2): xor %edi,%edi
642e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
6440(7): lea 0x214bd9(%rip),%rcx
6447(5): jmp 0xfffff709(%rip)

"quote_mem" :
6450(7): lea 0x214bc9(%rip),%rcx
6457(3): mov %rsi,%rdx
645a(3): mov %rdi,%rsi
645d(2): xor %edi,%edi
645f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
6470(7): lea 0x214ba9(%rip),%rcx
6477(7): mov $0xffffffff,%rdx
647e(5): jmp 0xfffff6d2(%rip)

"quote" :
6490(7): lea 0x214b89(%rip),%rcx
6497(3): mov %rdi,%rsi
649a(7): mov $0xffffffff,%rdx
64a1(2): xor %edi,%edi
64a3(5): jmp 0xfffff6ad(%rip)

"strnlen1" :
64b0(1): push %rbp
64b1(1): push %rbx
64b2(3): mov %rsi,%rdx
64b5(3): mov %rsi,%rbx
64b8(2): xor %esi,%esi
64ba(3): mov %rdi,%rbp
64bd(4): sub $0x8,%rsp
64c1(5): call 0xffffb6bf(%rip)
64c6(3): mov %rax,%rdx
64c9(3): sub %rbp,%rdx
64cc(4): add $0x1,%rdx
64d0(3): test %rax,%rax
64d3(3): mov %rbx,%rax
64d6(4): cmovne %rdx,%rax
64da(4): add $0x8,%rsp
64de(1): pop %rbx
64df(1): pop %rbp
64e0(1): ret near (%rsp)

"strintcmp" :
64f0(4): movzx (%rdi),%r8d
64f4(3): movzx (%rsi),%edx
64f7(4): cmp $0x2d,%r8b
64fb(6): jz 0xa5(%rip)
6501(3): cmp $0x2d,%dl
6504(6): jz 0xe4(%rip)
650a(6): nop 0x0(%rax,%rax,1)
6510(4): cmp $0x30,%r8b
6514(6): jz 0x194(%rip)
651a(3): cmp $0x30,%dl
651d(6): jz 0x17b(%rip)
6523(3): movzx %dl,%eax
6526(3): cmp %r8b,%dl
6529(3): lea 0xffffffd0(%rax),%ecx
652c(6): jnz 0x19c(%rip)
6532(3): cmp $0x9,%ecx
6535(6): jnbe 0x22b(%rip)
653b(4): add $0x1,%rdi
653f(4): add $0x1,%rsi
6543(3): movzx (%rsi),%eax
6546(4): movzx (%rdi),%r8d
654a(2): mov %eax,%edx
654c(3): lea 0xffffffd0(%rax),%ecx
654f(3): cmp %al,%r8b
6552(6): jnz 0x176(%rip)
6558(3): cmp $0x9,%ecx
655b(2): jbe 0xffffffe0(%rip)
655d(4): movzx %r8b,%edx
6561(3): xor %r9d,%r9d
6564(3): cmp $0x9,%ecx
6567(6): jnbe 0x1f9(%rip)
656d(3): nop (%rax)
6570(2): xor %ecx,%ecx
6572(6): nop 0x0(%rax,%rax,1)
6578(5): movzx 0x1(%rsi,%rcx,1),%eax
657d(4): add $0x1,%rcx
6581(3): sub $0x30,%eax
6584(3): cmp $0x9,%eax
6587(2): jbe 0xfffffff1(%rip)
6589(3): cmp %rcx,%r9
658c(6): jz 0x1d7(%rip)
6592(2): sbb %eax,%eax
6594(3): or $0x1,%eax
6597(1): ret near (%rsp)
6598(8): nop 0x0(%rax,%rax,1)
65a0(4): add $0x1,%rdi
65a4(3): movzx (%rdi),%ecx
65a7(3): cmp $0x30,%cl
65aa(2): jz 0xfffffff6(%rip)
65ac(3): movzx %cl,%eax
65af(3): cmp $0x2d,%dl
65b2(4): lea 0xffffffd0(%rax),%r8d
65b6(2): jz 0x6a(%rip)
65b8(4): cmp $0x9,%r8d
65bc(6): jbe 0x1d2(%rip)
65c2(6): nop 0x0(%rax,%rax,1)
65c8(3): cmp $0x30,%dl
65cb(6): jz 0xed(%rip)
65d1(3): sub $0x30,%edx
65d4(3): xor %r9d,%r9d
65d7(3): cmp $0x9,%edx
65da(4): setbe %r9b
65de(3): mov %r9d,%eax
65e1(2): neg %eax
65e3(1): ret near (%rsp)
65e4(4): nop 0x0(%rax)
65e8(4): add $0x1,%rsi
65ec(3): movzx (%rsi),%eax
65ef(2): cmp $0x30,%al
65f1(2): jz 0xfffffff7(%rip)
65f3(3): lea 0xffffffd0(%rax),%edx
65f6(5): mov $0x1,%eax
65fb(3): cmp $0x9,%edx
65fe(6): jbe 0x105(%rip)
6604(4): cmp $0x30,%r8b
6608(6): jz 0x100(%rip)
660e(4): sub $0x30,%r8d
6612(2): xor %eax,%eax
6614(4): cmp $0x9,%r8d
6618(3): setbe %al
661b(1): ret near (%rsp)
661c(4): nop 0x0(%rax)
6620(4): add $0x1,%rsi
6624(4): movzx (%rsi),%r9d
6628(4): cmp $0x30,%r9b
662c(2): jz 0xfffffff4(%rip)
662e(3): cmp %r9b,%cl
6631(6): jnz 0x143(%rip)
6637(4): cmp $0x9,%r8d
663b(3): lea 0xffffffd0(%rax),%edx
663e(2): jnbe 0x23(%rip)
6640(4): add $0x1,%rdi
6644(4): add $0x1,%rsi
6648(3): movzx (%rsi),%eax
664b(3): movzx (%rdi),%ecx
664e(3): mov %eax,%r9d
6651(3): lea 0xffffffd0(%rax),%edx
6654(2): cmp %al,%cl
6656(6): jnz 0xc2(%rip)
665c(3): cmp $0x9,%edx
665f(2): jbe 0xffffffe1(%rip)
6661(3): xor %r10d,%r10d
6664(3): cmp $0x9,%edx
6667(6): jnbe 0xf9(%rip)
666d(2): xor %edx,%edx
666f(1): nop 
6670(5): movzx 0x1(%rsi,%rdx,1),%eax
6675(4): add $0x1,%rdx
6679(3): sub $0x30,%eax
667c(3): cmp $0x9,%eax
667f(2): jbe 0xfffffff1(%rip)
6681(3): cmp %rdx,%r10
6684(6): jz 0xf9(%rip)
668a(2): sbb %eax,%eax
668c(3): and $0x2,%eax
668f(3): sub $0x1,%eax
6692(1): ret near (%rsp)
6693(5): nop 0x0(%rax,%rax,1)
6698(4): add $0x1,%rsi
669c(3): movzx (%rsi),%edx
669f(5): jmp 0xfffffe7b(%rip)
66a4(4): nop 0x0(%rax)
66a8(4): add $0x1,%rdi
66ac(4): movzx (%rdi),%r8d
66b0(5): jmp 0xfffffe60(%rip)
66b5(3): nop (%rax)
66b8(4): add $0x1,%rsi
66bc(3): movzx (%rsi),%edx
66bf(5): jmp 0xffffff09(%rip)
66c4(4): nop 0x0(%rax)
66c8(4): movzx %r8b,%eax
66cc(3): sub $0x30,%eax
66cf(3): cmp $0x9,%eax
66d2(6): jnbe 0xfffffe8f(%rip)
66d8(3): xor %r9d,%r9d
66db(5): nop 0x0(%rax,%rax,1)
66e0(6): movzx 0x1(%rdi,%r9,1),%eax
66e6(4): add $0x1,%r9
66ea(3): sub $0x30,%eax
66ed(3): cmp $0x9,%eax
66f0(2): jbe 0xfffffff0(%rip)
66f2(3): cmp $0x9,%ecx
66f5(6): jbe 0xfffffe7b(%rip)
66fb(2): xor %eax,%eax
66fd(3): test %r9,%r9
6700(3): setnz %al
6703(2): REP ret near (%rsp)
6705(3): nop (%rax)
6708(4): add $0x1,%rdi
670c(4): movzx (%rdi),%r8d
6710(5): jmp 0xfffffef4(%rip)
6715(3): nop (%rax)
6718(4): movzx %cl,%r8d
671c(4): sub $0x30,%r8d
6720(4): cmp $0x9,%r8d
6724(6): jnbe 0xffffff3d(%rip)
672a(3): xor %r10d,%r10d
672d(3): nop (%rax)
6730(6): movzx 0x1(%rdi,%r10,1),%eax
6736(4): add $0x1,%r10
673a(3): sub $0x30,%eax
673d(3): cmp $0x9,%eax
6740(2): jbe 0xfffffff0(%rip)
6742(3): cmp $0x9,%edx
6745(6): jbe 0xffffff28(%rip)
674b(2): xor %eax,%eax
674d(3): test %r10,%r10
6750(3): setnz %al
6753(2): neg %eax
6755(1): ret near (%rsp)
6756(a): nop 0x0(%rax,%rax,1)
6760(2): xor %eax,%eax
6762(1): ret near (%rsp)
6763(2): xor %eax,%eax
6765(3): test %r9,%r9
6768(2): jz 0xffffff9b(%rip)
676a(4): movzx %r8b,%r9d
676e(3): mov %r9d,%eax
6771(2): sub %edx,%eax
6773(1): ret near (%rsp)
6774(4): movzx %r9b,%eax
6778(3): lea 0xffffffd0(%rax),%edx
677b(2): jmp 0xffffffa5(%rip)
677d(2): xor %eax,%eax
677f(3): test %r10,%r10
6782(6): jz 0xffffff81(%rip)
6788(3): mov %r9d,%eax
678b(2): sub %ecx,%eax
678d(1): ret near (%rsp)
678e(5): mov $0xffffffff,%eax
6793(1): ret near (%rsp)

"version_etc_arn" :
67a0(2): push %r15
67a2(2): push %r14
67a4(2): push %r13
67a6(2): push %r12
67a8(3): mov %r9,%r12
67ab(1): push %rbp
67ac(1): push %rbx
67ad(3): mov %rdi,%rbp
67b0(3): mov %r8,%rbx
67b3(4): sub $0x28,%rsp
67b7(3): test %rsi,%rsi
67ba(6): jz 0x11e(%rip)
67c0(3): mov %rdx,%r8
67c3(7): lea 0xff3e(%rip),%rdx
67ca(3): mov %rcx,%r9
67cd(2): xor %eax,%eax
67cf(3): mov %rsi,%rcx
67d2(5): mov $0x1,%esi
67d7(5): call 0xffffb5a9(%rip)
67dc(7): lea 0xff38(%rip),%rsi
67e3(2): xor %edi,%edi
67e5(5): mov $0x5,%edx
67ea(5): call 0xffffb2a6(%rip)
67ef(7): lea 0x1024a(%rip),%rdx
67f6(3): mov %rax,%rcx
67f9(6): mov $0x7e3,%r8d
67ff(5): mov $0x1,%esi
6804(3): mov %rbp,%rdi
6807(2): xor %eax,%eax
6809(5): call 0xffffb577(%rip)
680e(7): lea 0xff93(%rip),%rsi
6815(2): xor %edi,%edi
6817(5): mov $0x5,%edx
681c(5): call 0xffffb274(%rip)
6821(3): mov %rbp,%rsi
6824(3): mov %rax,%rdi
6827(5): call 0xffffb389(%rip)
682c(4): cmp $0x9,%r12
6830(6): jnbe 0x340(%rip)
6836(7): lea 0x101c7(%rip),%rdx
683d(4): movsxd 0x0(%rdx,%r12,4),%rax
6841(3): add %rdx,%rax
6844(2): jmp %rax
6846(a): nop 0x0(%rax,%rax,1)
6850(4): mov 0x38(%rbx),%r9
6854(4): mov 0x10(%rbx),%rax
6858(7): lea 0x100b9(%rip),%rsi
685f(4): mov 0x8(%rbx),%r8
6863(5): mov $0x5,%edx
6868(2): xor %edi,%edi
686a(4): mov 0x30(%rbx),%r13
686e(4): mov 0x28(%rbx),%r12
6872(5): mov %r9,0x10(%rsp)
6877(4): mov 0x20(%rbx),%r15
687b(4): mov 0x18(%rbx),%r14
687f(4): mov %rax,(%rsp)
6883(5): mov %r8,0x8(%rsp)
6888(3): mov (%rbx),%rbx
688b(5): call 0xffffb205(%rip)
6890(4): sub $0x8,%rsp
6894(5): mov 0x18(%rsp),%r9
6899(3): mov %rax,%rdx
689c(3): mov %rbx,%rcx
689f(5): mov $0x1,%esi
68a4(3): mov %rbp,%rdi
68a7(2): xor %eax,%eax
68a9(2): push %r9
68ab(2): push %r13
68ad(2): push %r12
68af(2): push %r15
68b1(2): push %r14
68b3(5): mov 0x30(%rsp),%r9
68b8(5): mov 0x38(%rsp),%r8
68bd(5): call 0xffffb4c3(%rip)
68c2(4): add $0x30,%rsp
68c6(4): add $0x28,%rsp
68ca(1): pop %rbx
68cb(1): pop %rbp
68cc(2): pop %r12
68ce(2): pop %r13
68d0(2): pop %r14
68d2(2): pop %r15
68d4(1): ret near (%rsp)
68d5(3): nop (%rax)
68d8(3): mov %rcx,%r8
68db(3): mov %rdx,%rcx
68de(7): lea 0xfe2f(%rip),%rdx
68e5(5): mov $0x1,%esi
68ea(2): xor %eax,%eax
68ec(5): call 0xffffb494(%rip)
68f1(5): jmp 0xfffffeeb(%rip)
68f6(a): nop 0x0(%rax,%rax,1)
6900(4): mov 0x40(%rbx),%r10
6904(4): mov 0x38(%rbx),%r9
6908(7): lea 0x10039(%rip),%rsi
690f(4): mov 0x10(%rbx),%rax
6913(4): mov 0x8(%rbx),%r8
6917(5): mov $0x5,%edx
691c(4): mov 0x30(%rbx),%r13
6920(4): mov 0x28(%rbx),%r12
6924(4): mov 0x20(%rbx),%r15
6928(4): mov 0x18(%rbx),%r14
692c(3): mov (%rbx),%rbx
692f(5): mov %r10,0x18(%rsp)
6934(5): mov %r9,0x10(%rsp)
6939(4): mov %rax,(%rsp)
693d(5): mov %r8,0x8(%rsp)
6942(2): xor %edi,%edi
6944(5): call 0xffffb14c(%rip)
6949(5): mov 0x18(%rsp),%r10
694e(2): push %r10
6950(5): jmp 0xffffff44(%rip)
6955(3): nop (%rax)
6958(3): mov (%rbx),%rbx
695b(7): lea 0xfdbd(%rip),%rsi
6962(5): mov $0x5,%edx
6967(2): xor %edi,%edi
6969(5): call 0xffffb127(%rip)
696e(4): add $0x28,%rsp
6972(3): mov %rbx,%rcx
6975(3): mov %rbp,%rdi
6978(1): pop %rbx
6979(1): pop %rbp
697a(2): pop %r12
697c(2): pop %r13
697e(2): pop %r14
6980(2): pop %r15
6982(3): mov %rax,%rdx
6985(5): mov $0x1,%esi
698a(2): xor %eax,%eax
698c(5): jmp 0xffffb3f4(%rip)
6991(7): nop 0x0(%rax)
6998(4): mov 0x8(%rbx),%r12
699c(7): lea 0xfd8c(%rip),%rsi
69a3(3): mov (%rbx),%rbx
69a6(5): mov $0x5,%edx
69ab(2): xor %edi,%edi
69ad(5): call 0xffffb0e3(%rip)
69b2(4): add $0x28,%rsp
69b6(3): mov %r12,%r8
69b9(3): mov %rbx,%rcx
69bc(3): mov %rbp,%rdi
69bf(3): mov %rax,%rdx
69c2(5): mov $0x1,%esi
69c7(1): pop %rbx
69c8(1): pop %rbp
69c9(2): pop %r12
69cb(2): pop %r13
69cd(2): pop %r14
69cf(2): pop %r15
69d1(2): xor %eax,%eax
69d3(5): jmp 0xffffb3ad(%rip)
69d8(8): nop 0x0(%rax,%rax,1)
69e0(4): mov 0x10(%rbx),%r13
69e4(4): mov 0x8(%rbx),%r12
69e8(7): lea 0xfd57(%rip),%rsi
69ef(3): mov (%rbx),%rbx
69f2(5): mov $0x5,%edx
69f7(2): xor %edi,%edi
69f9(5): call 0xffffb097(%rip)
69fe(4): add $0x28,%rsp
6a02(3): mov %r13,%r9
6a05(3): mov %r12,%r8
6a08(3): mov %rbx,%rcx
6a0b(3): mov %rbp,%rdi
6a0e(3): mov %rax,%rdx
6a11(1): pop %rbx
6a12(1): pop %rbp
6a13(2): pop %r12
6a15(2): pop %r13
6a17(2): pop %r14
6a19(2): pop %r15
6a1b(5): mov $0x1,%esi
6a20(2): xor %eax,%eax
6a22(5): jmp 0xffffb35e(%rip)
6a27(9): nop 0x0(%rax,%rax,1)
6a30(7): lea 0xfe41(%rip),%rsi
6a37(5): mov $0x5,%edx
6a3c(2): xor %edi,%edi
6a3e(4): mov 0x18(%rbx),%r14
6a42(4): mov 0x10(%rbx),%r13
6a46(4): mov 0x8(%rbx),%r12
6a4a(3): mov (%rbx),%rbx
6a4d(5): call 0xffffb043(%rip)
6a52(4): sub $0x8,%rsp
6a56(2): push %r14
6a58(3): mov %rax,%rdx
6a5b(3): mov %r13,%r9
6a5e(3): mov %r12,%r8
6a61(3): mov %rbx,%rcx
6a64(3): mov %rbp,%rdi
6a67(5): mov $0x1,%esi
6a6c(2): xor %eax,%eax
6a6e(5): call 0xffffb312(%rip)
6a73(1): pop %rax
6a74(1): pop %rdx
6a75(4): add $0x28,%rsp
6a79(1): pop %rbx
6a7a(1): pop %rbp
6a7b(2): pop %r12
6a7d(2): pop %r13
6a7f(2): pop %r14
6a81(2): pop %r15
6a83(1): ret near (%rsp)
6a84(4): nop 0x0(%rax)
6a88(4): mov 0x20(%rbx),%r15
6a8c(7): lea 0xfe05(%rip),%rsi
6a93(5): mov $0x5,%edx
6a98(2): xor %edi,%edi
6a9a(4): mov 0x18(%rbx),%r14
6a9e(4): mov 0x10(%rbx),%r13
6aa2(4): mov 0x8(%rbx),%r12
6aa6(3): mov (%rbx),%rbx
6aa9(5): call 0xffffafe7(%rip)
6aae(2): push %r15
6ab0(2): jmp 0xffffffa6(%rip)
6ab2(6): nop 0x0(%rax,%rax,1)
6ab8(4): mov 0x8(%rbx),%r8
6abc(4): mov 0x28(%rbx),%r12
6ac0(7): lea 0xfdf9(%rip),%rsi
6ac7(4): mov 0x20(%rbx),%r15
6acb(4): mov 0x18(%rbx),%r14
6acf(5): mov $0x5,%edx
6ad4(4): mov 0x10(%rbx),%r13
6ad8(2): xor %edi,%edi
6ada(3): mov (%rbx),%rbx
6add(4): mov %r8,(%rsp)
6ae1(5): call 0xffffafaf(%rip)
6ae6(4): sub $0x8,%rsp
6aea(3): mov %r13,%r9
6aed(2): push %r12
6aef(2): push %r15
6af1(2): push %r14
6af3(5): mov 0x20(%rsp),%r8
6af8(3): mov %rbx,%rcx
6afb(3): mov %rax,%rdx
6afe(3): mov %rbp,%rdi
6b01(5): mov $0x1,%esi
6b06(2): xor %eax,%eax
6b08(5): call 0xffffb278(%rip)
6b0d(4): add $0x20,%rsp
6b11(4): add $0x28,%rsp
6b15(1): pop %rbx
6b16(1): pop %rbp
6b17(2): pop %r12
6b19(2): pop %r13
6b1b(2): pop %r14
6b1d(2): pop %r15
6b1f(1): ret near (%rsp)
6b20(4): mov 0x10(%rbx),%r9
6b24(4): mov 0x30(%rbx),%r13
6b28(7): lea 0xfdb9(%rip),%rsi
6b2f(4): mov 0x28(%rbx),%r12
6b33(4): mov 0x20(%rbx),%r15
6b37(5): mov $0x5,%edx
6b3c(4): mov 0x18(%rbx),%r14
6b40(4): mov 0x8(%rbx),%r8
6b44(2): xor %edi,%edi
6b46(5): mov %r9,0x8(%rsp)
6b4b(3): mov (%rbx),%rbx
6b4e(4): mov %r8,(%rsp)
6b52(5): call 0xffffaf3e(%rip)
6b57(2): push %r13
6b59(2): push %r12
6b5b(2): push %r15
6b5d(2): push %r14
6b5f(5): mov 0x28(%rsp),%r9
6b64(2): jmp 0xffffff8f(%rip)
6b66(a): nop 0x0(%rax,%rax,1)
6b70(4): mov 0x40(%rbx),%r10
6b74(4): mov 0x38(%rbx),%r9
6b78(5): mov $0x5,%edx
6b7d(4): mov 0x10(%rbx),%rax
6b81(4): mov 0x8(%rbx),%r8
6b85(7): lea 0xfdf4(%rip),%rsi
6b8c(4): mov 0x30(%rbx),%r13
6b90(4): mov 0x28(%rbx),%r12
6b94(4): mov 0x20(%rbx),%r15
6b98(4): mov 0x18(%rbx),%r14
6b9c(5): mov %r10,0x18(%rsp)
6ba1(5): mov %r9,0x10(%rsp)
6ba6(4): mov %rax,(%rsp)
6baa(5): mov %r8,0x8(%rsp)
6baf(3): mov (%rbx),%rbx
6bb2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
6bc0(3): xor %r9d,%r9d
6bc3(4): cmp $0x0,(%r8)
6bc7(2): jz 0x14(%rip)
6bc9(7): nop 0x0(%rax)
6bd0(4): add $0x1,%r9
6bd4(5): cmp $0x0,0x0(%r8,%r9,8)
6bd9(2): jnz 0xfffffff7(%rip)
6bdb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
6be0(4): sub $0x68,%rsp
6be4(3): mov %r8,%r10
6be7(3): xor %r9d,%r9d
6bea(9): mov $0x28,%rax
6bf3(5): mov %rax,0x58(%rsp)
6bf8(2): xor %eax,%eax
6bfa(3): mov %rsp,%r8
6bfd(3): nop (%rax)
6c00(3): mov (%r10),%eax
6c03(3): cmp $0x2f,%eax
6c06(2): jnbe 0x44(%rip)
6c08(3): mov %eax,%r11d
6c0b(4): add 0x10(%r10),%r11
6c0f(3): add $0x8,%eax
6c12(3): mov %eax,(%r10)
6c15(3): mov (%r11),%rax
6c18(3): test %rax,%rax
6c1b(4): mov %rax,0x0(%r8,%r9,8)
6c1f(2): jz 0xc(%rip)
6c21(4): add $0x1,%r9
6c25(4): cmp $0xa,%r9
6c29(2): jnz 0xffffffd7(%rip)
6c2b(5): call 0xfffffb75(%rip)
6c30(5): mov 0x58(%rsp),%rax
6c35(9): xor $0x28,%rax
6c3e(2): jnz 0x7(%rip)
6c40(4): add $0x68,%rsp
6c44(1): ret near (%rsp)
6c45(5): call 0xffffae8b(%rip)
6c4a(4): mov 0x8(%r10),%r11
6c4e(4): lea 0x8(%r11),%rax
6c52(4): mov %rax,0x8(%r10)
6c56(2): jmp 0xffffffbf(%rip)

"version_etc" :
6c60(1): push %rbp
6c61(1): push %rbx
6c62(6): mov $0x20,%r10d
6c68(3): xor %r11d,%r11d
6c6b(7): sub $0xb8,%rsp
6c72(9): mov $0x28,%rax
6c7b(5): mov %rax,0x78(%rsp)
6c80(2): xor %eax,%eax
6c82(8): lea 0xd0(%rsp),%rax
6c8a(8): mov %r8,0xa0(%rsp)
6c92(8): lea 0xd0(%rsp),%rbx
6c9a(5): lea 0x20(%rsp),%r8
6c9f(8): mov %r9,0xa8(%rsp)
6ca7(8): mov $0x20,0x8(%rsp)
6caf(5): mov %rax,0x10(%rsp)
6cb4(8): lea 0x80(%rsp),%rax
6cbc(3): xor %r9d,%r9d
6cbf(5): mov %rax,0x18(%rsp)
6cc4(3): mov %rax,%rbp
6cc7(9): nop 0x0(%rax,%rax,1)
6cd0(4): cmp $0x2f,%r10d
6cd4(2): jnbe 0x58(%rip)
6cd6(3): mov %r10d,%eax
6cd9(6): mov $0x1,%r11d
6cdf(4): add $0x8,%r10d
6ce3(3): add %rbp,%rax
6ce6(3): mov (%rax),%rax
6ce9(3): test %rax,%rax
6cec(4): mov %rax,0x0(%r8,%r9,8)
6cf0(2): jz 0xc(%rip)
6cf2(4): add $0x1,%r9
6cf6(4): cmp $0xa,%r9
6cfa(2): jnz 0xffffffd6(%rip)
6cfc(3): test %r11b,%r11b
6cff(2): jnz 0x26(%rip)
6d01(5): call 0xfffffa9f(%rip)
6d06(5): mov 0x78(%rsp),%rax
6d0b(9): xor $0x28,%rax
6d14(2): jnz 0xc(%rip)
6d16(7): add $0xb8,%rsp
6d1d(1): pop %rbx
6d1e(1): pop %rbp
6d1f(1): ret near (%rsp)
6d20(5): call 0xffffadb0(%rip)
6d25(5): mov %r10d,0x8(%rsp)
6d2a(2): jmp 0xffffffd7(%rip)
6d2c(3): mov %rbx,%rax
6d2f(4): add $0x8,%rbx
6d33(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6d40(1): push %rbx
6d41(7): lea 0xfa1a(%rip),%rsi
6d48(5): mov $0x5,%edx
6d4d(2): xor %edi,%edi
6d4f(5): call 0xffffad41(%rip)
6d54(7): lea 0xfa1c(%rip),%rdx
6d5b(3): mov %rax,%rsi
6d5e(5): mov $0x1,%edi
6d63(2): xor %eax,%eax
6d65(5): call 0xffffaf4b(%rip)
6d6a(7): lea 0xfa1c(%rip),%rsi
6d71(5): mov $0x5,%edx
6d76(2): xor %edi,%edi
6d78(5): call 0xffffad18(%rip)
6d7d(7): lea 0xf0ac(%rip),%rcx
6d84(7): lea 0xf27f(%rip),%rdx
6d8b(3): mov %rax,%rsi
6d8e(5): mov $0x1,%edi
6d93(2): xor %eax,%eax
6d95(5): call 0xffffaf1b(%rip)
6d9a(7): mov 0x2142e7(%rip),%rbx
6da1(7): lea 0xfc18(%rip),%rsi
6da8(2): xor %edi,%edi
6daa(5): mov $0x5,%edx
6daf(5): call 0xfffface1(%rip)
6db4(3): mov %rbx,%rsi
6db7(3): mov %rax,%rdi
6dba(1): pop %rbx
6dbb(5): jmp 0xffffadf5(%rip)

"xmalloc" :
6dc0(1): push %rbx
6dc1(3): mov %rdi,%rbx
6dc4(5): call 0xffffae5c(%rip)
6dc9(3): test %rax,%rax
6dcc(2): jnz 0x7(%rip)
6dce(3): test %rbx,%rbx
6dd1(2): jnz 0x4(%rip)
6dd3(1): pop %rbx
6dd4(1): ret near (%rsp)
6dd5(5): call 0x23b(%rip)

"xnmalloc" :
6de0(3): mov %rdi,%rax
6de3(3): mul %rax,%rsi,%rdx
6de6(3): mov %rax,%rdi
6de9(3): seto %al
6dec(3): test %rdi,%rdi
6def(2): js 0xc(%rip)
6df1(3): movzx %al,%eax
6df4(3): test %rax,%rax
6df7(2): jnz 0x4(%rip)
6df9(2): jmp 0xffffffc7(%rip)
6dfb(4): sub $0x8,%rsp
6dff(5): call 0x211(%rip)

"xrealloc" :
6e20(3): test %rsi,%rsi
6e23(1): push %rbx
6e24(3): mov %rsi,%rbx
6e27(2): jnz 0x7(%rip)
6e29(3): test %rdi,%rdi
6e2c(2): jnz 0x1c(%rip)
6e2e(3): mov %rbx,%rsi
6e31(5): call 0xffffae5f(%rip)
6e36(3): test %rax,%rax
6e39(2): jnz 0x7(%rip)
6e3b(3): test %rbx,%rbx
6e3e(2): jnz 0x13(%rip)
6e40(1): pop %rbx
6e41(1): ret near (%rsp)
6e42(6): nop 0x0(%rax,%rax,1)
6e48(5): call 0xffffab88(%rip)
6e4d(2): xor %eax,%eax
6e4f(1): pop %rbx
6e50(1): ret near (%rsp)
6e51(5): call 0x1bf(%rip)

"xnrealloc" :
6e60(3): mov %rsi,%rax
6e63(3): mul %rax,%rdx,%rdx
6e66(3): mov %rax,%rsi
6e69(3): seto %al
6e6c(3): test %rsi,%rsi
6e6f(2): js 0xc(%rip)
6e71(3): movzx %al,%eax
6e74(3): test %rax,%rax
6e77(2): jnz 0x4(%rip)
6e79(2): jmp 0xffffffa7(%rip)
6e7b(4): sub $0x8,%rsp
6e7f(5): call 0x191(%rip)

"x2nrealloc" :
6e90(3): test %rdi,%rdi
6e93(3): mov %rdx,%r9
6e96(3): mov (%rsi),%rcx
6e99(2): jz 0x37(%rip)
6e9b(2): xor %edx,%edx
6e9d(a): mov $0x6148914691236517204,%rax
6ea7(3): div %r9,%rax
6eaa(3): cmp %rcx,%rax
6ead(2): jbe 0x3e(%rip)
6eaf(3): mov %rcx,%rax
6eb2(3): shr $0x1,%rax
6eb5(5): lea 0x1(%rax,%rcx,1),%rcx
6eba(3): mov %rcx,(%rsi)
6ebd(4): imul %r9,%rcx
6ec1(3): mov %rcx,%rsi
6ec4(5): jmp 0xffffff5c(%rip)
6ec9(7): nop 0x0(%rax)
6ed0(3): test %rcx,%rcx
6ed3(2): jz 0x25(%rip)
6ed5(3): mov %rcx,%rax
6ed8(3): mul %rax,%r9,%rdx
6edb(3): seto %dl
6ede(3): test %rax,%rax
6ee1(3): movzx %dl,%edx
6ee4(2): js 0x7(%rip)
6ee6(3): test %rdx,%rdx
6ee9(2): jz 0xffffffd1(%rip)
6eeb(4): sub $0x8,%rsp
6eef(5): call 0x121(%rip)
6ef4(4): nop 0x0(%rax)
6ef8(2): xor %edx,%edx
6efa(5): mov $0x80,%eax
6eff(3): xor %r8d,%r8d
6f02(3): div %r9,%rax
6f05(3): test %rax,%rax
6f08(4): setz %r8b
6f0c(4): lea 0x0(%r8,%rax,1),%rcx
6f10(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6f20(3): test %rdi,%rdi
6f23(3): mov (%rsi),%rax
6f26(2): jz 0x2a(%rip)
6f28(a): mov $0x6148914691236517203,%rdx
6f32(3): cmp %rdx,%rax
6f35(2): jnbe 0x2c(%rip)
6f37(3): mov %rax,%rdx
6f3a(3): shr $0x1,%rdx
6f3d(5): lea 0x1(%rdx,%rax,1),%rax
6f42(3): mov %rax,(%rsi)
6f45(3): mov %rax,%rsi
6f48(5): jmp 0xfffffed8(%rip)
6f4d(3): nop (%rax)
6f50(3): test %rax,%rax
6f53(5): mov $0x80,%edx
6f58(4): cmove %rdx,%rax
6f5c(3): test %rax,%rax
6f5f(2): jns 0xffffffe3(%rip)
6f61(4): sub $0x8,%rsp
6f65(5): call 0xab(%rip)

"xzalloc" :
6f70(1): push %rbx
6f71(3): mov %rdi,%rbx
6f74(5): call 0xfffffe4c(%rip)
6f79(3): mov %rbx,%rdx
6f7c(2): xor %esi,%esi
6f7e(3): mov %rax,%rdi
6f81(1): pop %rbx
6f82(5): jmp 0xffffabde(%rip)

"xcalloc" :
6f90(3): mov %rdi,%rax
6f93(4): sub $0x8,%rsp
6f97(3): mul %rax,%rsi,%rdx
6f9a(3): seto %dl
6f9d(3): test %rax,%rax
6fa0(2): js 0x19(%rip)
6fa2(3): movzx %dl,%edx
6fa5(3): test %rdx,%rdx
6fa8(2): jnz 0x11(%rip)
6faa(5): call 0xffffac16(%rip)
6faf(3): test %rax,%rax
6fb2(2): jz 0x7(%rip)
6fb4(4): add $0x8,%rsp
6fb8(1): ret near (%rsp)
6fb9(5): call 0x57(%rip)

"xmemdup" :
6fc0(1): push %rbp
6fc1(1): push %rbx
6fc2(3): mov %rdi,%rbp
6fc5(3): mov %rsi,%rdi
6fc8(3): mov %rsi,%rbx
6fcb(4): sub $0x8,%rsp
6fcf(5): call 0xfffffdf1(%rip)
6fd4(4): add $0x8,%rsp
6fd8(3): mov %rbx,%rdx
6fdb(3): mov %rbp,%rsi
6fde(1): pop %rbx
6fdf(1): pop %rbp
6fe0(3): mov %rax,%rdi
6fe3(5): jmp 0xffffabfd(%rip)

"xstrdup" :
6ff0(1): push %rbx
6ff1(3): mov %rdi,%rbx
6ff4(5): call 0xffffaabc(%rip)
6ff9(3): mov %rbx,%rdi
6ffc(4): lea 0x1(%rax),%rsi
7000(1): pop %rbx
7001(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
7010(7): lea 0xfa58(%rip),%rsi
7017(4): sub $0x8,%rsp
701b(5): mov $0x5,%edx
7020(2): xor %edi,%edi
7022(5): call 0xffffaa6e(%rip)
7027(6): mov 0x213fe3(%rip),%edi
702d(7): lea 0xf14f(%rip),%rdx
7034(3): mov %rax,%rcx
7037(2): xor %esi,%esi
7039(2): xor %eax,%eax
703b(5): call 0xffffacc5(%rip)
7040(5): call 0xffffa9a0(%rip)

"rpl_mbrtowc" :
7050(2): push %r13
7052(2): push %r12
7054(3): mov %rsi,%r13
7057(1): push %rbp
7058(1): push %rbx
7059(3): mov %rdi,%rbx
705c(3): mov %rdx,%r12
705f(4): sub $0x18,%rsp
7063(9): mov $0x28,%rax
706c(5): mov %rax,0x8(%rsp)
7071(2): xor %eax,%eax
7073(5): lea 0x4(%rsp),%rax
7078(3): test %rdi,%rdi
707b(4): cmove %rax,%rbx
707f(3): mov %rbx,%rdi
7082(5): call 0xffffaa6e(%rip)
7087(4): cmp $0xfffffffd,%rax
708b(3): mov %rax,%rbp
708e(2): jbe 0x22(%rip)
7090(3): test %r12,%r12
7093(2): jz 0x1d(%rip)
7095(2): xor %edi,%edi
7097(5): call 0xe2d9(%rip)
709c(2): test %al,%al
709e(2): jnz 0x12(%rip)
70a0(5): movzx 0x0(%r13),%eax
70a5(5): mov $0x1,%ebp
70aa(2): mov %eax,(%rbx)
70ac(4): nop 0x0(%rax)
70b0(5): mov 0x8(%rsp),%rdx
70b5(9): xor $0x28,%rdx
70be(3): mov %rbp,%rax
70c1(2): jnz 0xd(%rip)
70c3(4): add $0x18,%rsp
70c7(1): pop %rbx
70c8(1): pop %rbp
70c9(2): pop %r12
70cb(2): pop %r13
70cd(1): ret near (%rsp)
70ce(5): call 0xffffaa02(%rip)

"peek_token_bracket" :
70e0(4): mov 0x48(%rsi),%rax
70e4(4): cmp %rax,0x68(%rsi)
70e8(2): jle 0x58(%rip)
70ea(4): mov 0x8(%rsi),%r8
70ee(7): cmp $0x1,0x90(%rsi)
70f5(5): movzx 0x0(%r8,%rax,1),%ecx
70fa(2): mov %cl,(%rdi)
70fc(2): jle 0x17(%rip)
70fe(4): cmp 0x30(%rsi),%rax
7102(2): jz 0x11(%rip)
7104(4): mov 0x10(%rsi),%r9
7108(5): cmp $0xff,0x0(%r9,%rax,4)
710d(6): jz 0x82(%rip)
7113(3): cmp $0x5c,%cl
7116(2): jz 0x6a(%rip)
7118(3): cmp $0x5b,%cl
711b(2): jz 0x35(%rip)
711d(3): cmp $0x5d,%cl
7120(6): jz 0xa0(%rip)
7126(3): cmp $0x5e,%cl
7129(6): jz 0x87(%rip)
712f(3): cmp $0x2d,%cl
7132(2): jnz 0x5d(%rip)
7134(4): mov $0x16,0x8(%rdi)
7138(5): mov $0x1,%eax
713d(1): ret near (%rsp)
713e(2): nop 
7140(4): mov $0x2,0x8(%rdi)
7144(2): xor %eax,%eax
7146(1): ret near (%rsp)
7147(9): nop 0x0(%rax,%rax,1)
7150(4): lea 0x1(%rax),%rcx
7154(4): cmp 0x58(%rsi),%rcx
7158(2): jnl 0x48(%rip)
715a(6): movzx 0x1(%r8,%rax,1),%eax
7160(2): cmp $0x3a,%al
7162(2): mov %al,(%rdi)
7164(6): jz 0x9c(%rip)
716a(2): cmp $0x3d,%al
716c(6): jz 0x84(%rip)
7172(2): cmp $0x2e,%al
7174(2): jnz 0x2c(%rip)
7176(4): mov $0x1a,0x8(%rdi)
717a(5): mov $0x2,%eax
717f(1): ret near (%rsp)
7180(3): and $0x1,%edx
7183(2): jz 0xc(%rip)
7185(4): lea 0x1(%rax),%rdx
7189(4): cmp 0x58(%rsi),%rdx
718d(2): jl 0x43(%rip)
718f(4): mov $0x1,0x8(%rdi)
7193(5): mov $0x1,%eax
7198(1): ret near (%rsp)
7199(7): nop 0x0(%rax)
71a0(4): mov $0x1,0x8(%rdi)
71a4(3): mov $0x5b,(%rdi)
71a7(5): mov $0x1,%eax
71ac(1): ret near (%rsp)
71ad(3): nop (%rax)
71b0(4): mov $0x19,0x8(%rdi)
71b4(5): mov $0x1,%eax
71b9(1): ret near (%rsp)
71ba(6): nop 0x0(%rax,%rax,1)
71c0(4): mov $0x15,0x8(%rdi)
71c4(5): mov $0x1,%eax
71c9(1): ret near (%rsp)
71ca(6): nop 0x0(%rax,%rax,1)
71d0(4): mov %rdx,0x48(%rsi)
71d4(6): movzx 0x1(%r8,%rax,1),%eax
71da(4): mov $0x1,0x8(%rdi)
71de(2): mov %al,(%rdi)
71e0(5): mov $0x1,%eax
71e5(1): ret near (%rsp)
71e6(a): nop 0x0(%rax,%rax,1)
71f0(4): mov $0x1c,0x8(%rdi)
71f4(5): mov $0x2,%eax
71f9(1): ret near (%rsp)
71fa(6): nop 0x0(%rax,%rax,1)
7200(3): and $0x4,%edx
7203(2): jz 0xffffff9d(%rip)
7205(4): mov $0x1e,0x8(%rdi)
7209(5): mov $0x2,%eax
720e(1): ret near (%rsp)

"mark_opt_subexp" :
7210(4): cmp $0x11,0x30(%rsi)
7214(2): jz 0xc(%rip)
7216(2): xor %eax,%eax
7218(1): ret near (%rsp)
7219(7): nop 0x0(%rax)
7220(4): cmp 0x28(%rsi),%rdi
7224(2): jnz 0xfffffff2(%rip)
7226(4): or $0x8,0x32(%rsi)
722a(2): xor %eax,%eax
722c(1): ret near (%rsp)

"check_dst_limits_calc_pos_1" :
7230(2): push %r15
7232(2): push %r14
7234(3): mov %rdx,%r9
7237(2): push %r13
7239(2): push %r12
723b(4): lea 0x0(%rcx,%rcx,2),%rdx
723f(1): push %rbp
7240(1): push %rbx
7241(3): mov %esi,%r15d
7244(4): sub $0x48,%rsp
7248(7): mov 0x98(%rdi),%r14
724f(4): mov %rdi,(%rsp)
7253(4): mov 0x30(%r14),%rax
7257(4): lea 0x0(%rax,%rdx,8),%r12
725b(6): cmp $0x0,0x8(%r12)
7261(6): jle 0x194(%rip)
7267(4): lea 0x0(%r8,%r8,4),%rax
726b(3): mov %rcx,%r11
726e(3): mov %r9d,%ecx
7271(3): mov %r8,%r10
7274(2): xor %ebx,%ebx
7276(4): mov %esi,0x20(%rsp)
727a(4): shl/sal $0x3,%rax
727e(3): mov %r9,%r15
7281(5): mov %r11,0x10(%rsp)
7286(5): mov %rax,0x28(%rsp)
728b(5): mov $0x1,%eax
7290(3): shl/sal %cl,%rax
7293(5): mov %rax,0x18(%rsp)
7298(2): not %eax
729a(5): mov %ax,0x26(%rsp)
729f(2): mov %esi,%eax
72a1(3): and $0x1,%eax
72a4(4): mov %eax,0xc(%rsp)
72a8(2): mov %esi,%eax
72aa(3): and $0x2,%eax
72ad(4): mov %eax,0x8(%rsp)
72b1(2): jmp 0x24(%rip)
72b3(5): nop 0x0(%rax,%rax,1)
72b8(3): cmp $0x9,%dl
72bb(6): jz 0x155(%rip)
72c1(3): cmp $0x4,%dl
72c4(2): jz 0x54(%rip)
72c6(4): add $0x1,%rbx
72ca(5): cmp %rbx,0x8(%r12)
72cf(6): jle 0x121(%rip)
72d5(5): mov 0x10(%r12),%rax
72da(4): mov 0x0(%rax,%rbx,8),%rbp
72de(3): mov %rbp,%rax
72e1(4): shl/sal $0x4,%rax
72e5(3): add (%r14),%rax
72e8(4): movzx 0x8(%rax),%edx
72ec(3): cmp $0x8,%dl
72ef(2): jnz 0xffffffc9(%rip)
72f1(4): mov 0xc(%rsp),%ecx
72f5(2): test %ecx,%ecx
72f7(2): jz 0xffffffcf(%rip)
72f9(3): cmp %r15,(%rax)
72fc(2): jnz 0xffffffca(%rip)
72fe(4): add $0x48,%rsp
7302(5): mov $0xffffffff,%eax
7307(1): pop %rbx
7308(1): pop %rbp
7309(2): pop %r12
730b(2): pop %r13
730d(2): pop %r14
730f(2): pop %r15
7311(1): ret near (%rsp)
7312(6): nop 0x0(%rax,%rax,1)
7318(4): cmp $0xffffffff,%r10
731c(2): jz 0xffffffaa(%rip)
731e(4): mov (%rsp),%rax
7322(5): mov 0x28(%rsp),%r13
7327(3): mov %rbp,%rdi
732a(5): mov %r12,0x30(%rsp)
732f(5): mov %rbx,0x38(%rsp)
7334(3): mov %r10,%r12
7337(7): add 0xd8(%rax),%r13
733e(5): lea 0x0(%rbp,%rbp,2),%rax
7343(3): mov %r14,%rbp
7346(3): mov %rdi,%r14
7349(4): shl/sal $0x3,%rax
734d(3): mov %rax,%rbx
7350(4): cmp %r14,0x0(%r13)
7354(2): jnz 0x6c(%rip)
7356(4): cmp $0x3f,%r15
735a(2): jnle 0xe(%rip)
735c(5): movzx 0x22(%r13),%eax
7361(5): test %rax,0x18(%rsp)
7366(2): jz 0x5a(%rip)
7368(4): mov 0x28(%rbp),%rax
736c(5): mov 0x10(%rax,%rbx,1),%rax
7371(3): mov (%rax),%rcx
7374(5): cmp %rcx,0x10(%rsp)
7379(6): jz 0xc7(%rip)
737f(4): mov 0x20(%rsp),%esi
7383(4): mov (%rsp),%rdi
7387(3): mov %r12,%r8
738a(3): mov %r15,%rdx
738d(5): call 0xfffffea3(%rip)
7392(3): cmp $0xff,%eax
7395(6): jz 0xffffff69(%rip)
739b(2): test %eax,%eax
739d(2): jnz 0xa(%rip)
739f(4): mov 0x8(%rsp),%esi
73a3(2): test %esi,%esi
73a5(2): jnz 0x80(%rip)
73a7(4): cmp $0x3f,%r15
73ab(2): jnle 0x15(%rip)
73ad(5): movzx 0x26(%rsp),%eax
73b2(5): and %ax,0x22(%r13)
73b7(9): nop 0x0(%rax,%rax,1)
73c0(4): add $0x28,%r13
73c4(5): cmp $0x0,0xfffffff8(%r13)
73c9(2): jnz 0xffffff87(%rip)
73cb(5): mov 0x38(%rsp),%rbx
73d0(3): mov %r12,%r10
73d3(5): mov 0x30(%rsp),%r12
73d8(3): mov %rbp,%r14
73db(4): add $0x1,%rbx
73df(5): cmp %rbx,0x8(%r12)
73e4(6): jnle 0xfffffef1(%rip)
73ea(6): nop 0x0(%rax,%rax,1)
73f0(5): mov 0x20(%rsp),%r15d
73f5(4): add $0x48,%rsp
73f9(3): mov %r15d,%eax
73fc(1): pop %rbx
73fd(2): sar $0x1,%eax
73ff(1): pop %rbp
7400(2): pop %r12
7402(2): pop %r13
7404(2): pop %r14
7406(2): pop %r15
7408(1): ret near (%rsp)
7409(7): nop 0x0(%rax)
7410(4): mov 0x8(%rsp),%edx
7414(2): test %edx,%edx
7416(6): jz 0xfffffeb0(%rip)
741c(3): cmp %r15,(%rax)
741f(6): jnz 0xfffffea7(%rip)
7425(4): add $0x48,%rsp
7429(2): xor %eax,%eax
742b(1): pop %rbx
742c(1): pop %rbp
742d(2): pop %r12
742f(2): pop %r13
7431(2): pop %r14
7433(2): pop %r15
7435(1): ret near (%rsp)
7436(a): nop 0x0(%rax,%rax,1)
7440(5): mov 0x20(%rsp),%r15d
7445(4): add $0x48,%rsp
7449(1): pop %rbx
744a(1): pop %rbp
744b(3): mov %r15d,%eax
744e(3): and $0x1,%eax
7451(2): pop %r12
7453(2): neg %eax
7455(2): pop %r13
7457(2): pop %r14
7459(2): pop %r15
745b(1): ret near (%rsp)

"check_dst_limits_calc_pos" :
7460(7): mov 0xd8(%rdi),%rax
7467(4): lea 0x0(%rsi,%rsi,4),%rsi
746b(4): lea 0x0(%rax,%rsi,8),%rax
746f(4): mov 0x10(%rax),%r10
7473(3): cmp %r8,%r10
7476(2): jnle 0x4a(%rip)
7478(4): mov 0x18(%rax),%rax
747c(3): cmp %r8,%rax
747f(2): jl 0x21(%rip)
7481(2): xor %esi,%esi
7483(3): cmp %r8,%r10
7486(4): setz %sil
748a(3): or $0x2,%esi
748d(3): cmp %r8,%rax
7490(2): jz 0x25(%rip)
7492(2): xor %eax,%eax
7494(3): cmp %r8,%r10
7497(2): jz 0x19(%rip)
7499(2): REP ret near (%rsp)
749b(5): nop 0x0(%rax,%rax,1)
74a0(5): mov $0x1,%eax
74a5(1): ret near (%rsp)
74a6(a): nop 0x0(%rax,%rax,1)
74b0(5): mov $0x1,%esi
74b5(3): mov %r9,%r8
74b8(5): jmp 0xfffffd78(%rip)
74bd(3): nop (%rax)
74c0(5): mov $0xffffffff,%eax
74c5(1): ret near (%rsp)

"postorder" :
74d0(2): push %r12
74d2(3): mov %rsi,%r12
74d5(1): push %rbp
74d6(3): mov %rdx,%rbp
74d9(1): push %rbx
74da(3): mov %rdi,%rbx
74dd(2): jmp 0x6(%rip)
74df(1): nop 
74e0(3): mov %rax,%rbx
74e3(4): mov 0x8(%rbx),%rax
74e7(3): test %rax,%rax
74ea(2): jnz 0xfffffff6(%rip)
74ec(4): mov 0x10(%rbx),%rax
74f0(3): test %rax,%rax
74f3(2): jnz 0xffffffed(%rip)
74f5(3): mov %rbx,%rsi
74f8(3): mov %rbp,%rdi
74fb(3): call %r12
74fe(2): test %eax,%eax
7500(2): jnz 0x36(%rip)
7502(6): nop 0x0(%rax,%rax,1)
7508(3): mov (%rbx),%rdx
750b(3): test %rdx,%rdx
750e(2): jz 0x28(%rip)
7510(4): mov 0x10(%rdx),%rax
7514(3): cmp %rbx,%rax
7517(3): mov %rdx,%rbx
751a(4): setz %sil
751e(3): test %rax,%rax
7521(3): setz %cl
7524(3): or %cl,%sil
7527(2): jz 0xffffffb9(%rip)
7529(3): mov %rbx,%rsi
752c(3): mov %rbp,%rdi
752f(3): call %r12
7532(2): test %eax,%eax
7534(2): jz 0xffffffd4(%rip)
7536(1): pop %rbx
7537(1): pop %rbp
7538(2): pop %r12
753a(1): ret near (%rsp)

"preorder" :
7540(2): push %r12
7542(3): mov %rsi,%r12
7545(1): push %rbp
7546(3): mov %rdx,%rbp
7549(1): push %rbx
754a(3): mov %rdi,%rbx
754d(2): jmp 0x6(%rip)
754f(1): nop 
7550(3): mov %rdx,%rbx
7553(3): mov %rbx,%rsi
7556(3): mov %rbp,%rdi
7559(3): call %r12
755c(2): test %eax,%eax
755e(2): jnz 0x2e(%rip)
7560(4): mov 0x8(%rbx),%rdx
7564(2): xor %ecx,%ecx
7566(3): test %rdx,%rdx
7569(2): jnz 0xffffffe7(%rip)
756b(2): jmp 0x8(%rip)
756d(3): nop (%rax)
7570(3): mov %rdx,%rbx
7573(4): mov 0x10(%rbx),%rdx
7577(3): cmp %rcx,%rdx
757a(2): jz 0x7(%rip)
757c(3): test %rdx,%rdx
757f(2): jnz 0xffffffd1(%rip)
7581(3): mov (%rbx),%rdx
7584(3): mov %rbx,%rcx
7587(3): test %rdx,%rdx
758a(2): jnz 0xffffffe6(%rip)
758c(1): pop %rbx
758d(1): pop %rbp
758e(2): pop %r12
7590(1): ret near (%rsp)

"re_string_realloc_buffers" :
75a0(1): push %rbp
75a1(1): push %rbx
75a2(3): mov %rsi,%rbp
75a5(3): mov %rdi,%rbx
75a8(4): sub $0x8,%rsp
75ac(7): cmp $0x1,0x90(%rdi)
75b3(2): jle 0x4a(%rip)
75b5(a): mov $0x2305843009213693951,%rax
75bf(3): cmp %rax,%rsi
75c2(2): jnbe 0x6e(%rip)
75c4(4): mov 0x10(%rdi),%rdi
75c8(8): lea 0x0(,%rsi,4),%rsi
75d0(5): call 0xffffa6c0(%rip)
75d5(3): test %rax,%rax
75d8(2): jz 0x58(%rip)
75da(4): mov 0x18(%rbx),%rdi
75de(4): mov %rax,0x10(%rbx)
75e2(3): test %rdi,%rdi
75e5(2): jz 0x18(%rip)
75e7(8): lea 0x0(,%rbp,8),%rsi
75ef(5): call 0xffffa6a1(%rip)
75f4(3): test %rax,%rax
75f7(2): jz 0x39(%rip)
75f9(4): mov %rax,0x18(%rbx)
75fd(7): cmp $0x0,0x8b(%rbx)
7604(2): jnz 0x14(%rip)
7606(4): mov %rbp,0x40(%rbx)
760a(4): add $0x8,%rsp
760e(2): xor %eax,%eax
7610(1): pop %rbx
7611(1): pop %rbp
7612(1): ret near (%rsp)
7613(5): nop 0x0(%rax,%rax,1)
7618(4): mov 0x8(%rbx),%rdi
761c(3): mov %rbp,%rsi
761f(5): call 0xffffa671(%rip)
7624(3): test %rax,%rax
7627(2): jz 0x9(%rip)
7629(4): mov %rax,0x8(%rbx)
762d(2): jmp 0xffffffd9(%rip)
762f(1): nop 
7630(4): add $0x8,%rsp
7634(5): mov $0xc,%eax
7639(1): pop %rbx
763a(1): pop %rbp
763b(1): ret near (%rsp)

"re_node_set_insert_last" :
7640(1): push %rbp
7641(1): push %rbx
7642(3): mov %rsi,%rbp
7645(3): mov %rdi,%rbx
7648(4): sub $0x8,%rsp
764c(4): mov 0x8(%rdi),%rsi
7650(3): cmp %rsi,(%rdi)
7653(4): mov 0x10(%rdi),%rax
7657(2): jz 0x21(%rip)
7659(4): lea 0x1(%rsi),%rdx
765d(4): mov %rdx,0x8(%rbx)
7661(4): mov %rbp,0x0(%rax,%rsi,8)
7665(5): mov $0x1,%eax
766a(4): add $0x8,%rsp
766e(1): pop %rbx
766f(1): pop %rbp
7670(1): ret near (%rsp)
7671(7): nop 0x0(%rax)
7678(4): add $0x1,%rsi
767c(4): lea 0x0(%rsi,%rsi,1),%rdx
7680(4): shl/sal $0x4,%rsi
7684(3): mov %rdx,(%rdi)
7687(3): mov %rax,%rdi
768a(5): call 0xffffa606(%rip)
768f(3): test %rax,%rax
7692(2): jz 0xe(%rip)
7694(4): mov %rax,0x10(%rbx)
7698(4): mov 0x8(%rbx),%rsi
769c(2): jmp 0xffffffbd(%rip)
769e(2): nop 
76a0(2): xor %eax,%eax
76a2(2): jmp 0xffffffc8(%rip)

"re_node_set_insert" :
76b0(1): push %rbp
76b1(1): push %rbx
76b2(3): mov %rsi,%rbp
76b5(3): mov %rdi,%rbx
76b8(4): sub $0x8,%rsp
76bc(3): mov (%rdi),%rdx
76bf(3): test %rdx,%rdx
76c2(2): jz 0x26(%rip)
76c4(4): mov 0x8(%rdi),%rsi
76c8(4): mov 0x10(%rdi),%rax
76cc(3): test %rsi,%rsi
76cf(2): jnz 0x51(%rip)
76d1(3): mov %rbp,(%rax)
76d4(5): add $0x1,0x8(%rdi)
76d9(5): mov $0x1,%eax
76de(4): add $0x8,%rsp
76e2(1): pop %rbx
76e3(1): pop %rbp
76e4(1): ret near (%rsp)
76e5(3): nop (%rax)
76e8(7): mov $0x1,(%rdi)
76ef(8): mov $0x1,0x8(%rdi)
76f7(5): mov $0x8,%edi
76fc(5): call 0xffffa524(%rip)
7701(3): test %rax,%rax
7704(4): mov %rax,0x10(%rbx)
7708(6): jz 0x90(%rip)
770e(3): mov %rbp,(%rax)
7711(4): add $0x8,%rsp
7715(5): mov $0x1,%eax
771a(1): pop %rbx
771b(1): pop %rbp
771c(1): ret near (%rsp)
771d(3): nop (%rax)
7720(3): cmp %rsi,%rdx
7723(6): jz 0x8d(%rip)
7729(3): cmp %rbp,(%rax)
772c(8): lea 0x0(,%rsi,8),%rdx
7734(2): jle 0x3c(%rip)
7736(3): test %rsi,%rsi
7739(2): jle 0x1a(%rip)
773b(3): add %rax,%rdx
773e(2): nop 
7740(4): mov 0xfffffff8(%rdx),%rcx
7744(4): sub $0x8,%rdx
7748(4): mov %rcx,0x8(%rdx)
774c(3): cmp %rdx,%rax
774f(2): jnz 0xfffffff1(%rip)
7751(2): xor %edx,%edx
7753(4): mov %rbp,0x0(%rax,%rdx,1)
7757(5): mov $0x1,%eax
775c(5): add $0x1,0x8(%rbx)
7761(5): jmp 0xffffff7d(%rip)
7766(a): nop 0x0(%rax,%rax,1)
7770(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
7775(3): cmp %rcx,%rbp
7778(2): jnl 0xffffffdb(%rip)
777a(6): nop 0x0(%rax,%rax,1)
7780(4): mov %rcx,0x0(%rax,%rdx,1)
7784(4): sub $0x8,%rdx
7788(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
778d(3): cmp %rbp,%rcx
7790(2): jnle 0xfffffff0(%rip)
7792(2): jmp 0xffffffc1(%rip)
7794(4): nop 0x0(%rax)
7798(8): mov $0x0,0x8(%rbx)
77a0(7): mov $0x0,(%rbx)
77a7(5): jmp 0xffffff37(%rip)
77ac(4): nop 0x0(%rax)
77b0(4): lea 0x0(%rsi,%rsi,1),%rdx
77b4(4): shl/sal $0x4,%rsi
77b8(3): mov %rdx,(%rdi)
77bb(3): mov %rax,%rdi
77be(5): call 0xffffa4d2(%rip)
77c3(3): test %rax,%rax
77c6(2): jz 0xf(%rip)
77c8(4): mov %rax,0x10(%rbx)
77cc(4): mov 0x8(%rbx),%rsi
77d0(5): jmp 0xffffff59(%rip)
77d5(2): xor %eax,%eax
77d7(5): jmp 0xffffff07(%rip)

"register_state" :
77e0(2): push %r14
77e2(2): push %r13
77e4(3): mov %rdi,%r14
77e7(2): push %r12
77e9(1): push %rbp
77ea(3): mov %rdx,%r12
77ed(1): push %rbx
77ee(4): mov 0x10(%rsi),%rbx
77f2(3): mov %rsi,%rbp
77f5(3): mov %rdx,(%rsi)
77f8(8): mov $0x0,0x28(%rsi)
7800(4): lea 0x20(%rsi),%r13
7804(8): lea 0x0(,%rbx,8),%rdi
780c(4): mov %rbx,0x20(%rsi)
7810(5): call 0xffffa410(%rip)
7815(3): test %rax,%rax
7818(4): mov %rax,0x30(%rbp)
781c(2): jz 0x42(%rip)
781e(3): test %rbx,%rbx
7821(2): jle 0x4f(%rip)
7823(2): xor %ebx,%ebx
7825(2): jmp 0x15(%rip)
7827(9): nop 0x0(%rax,%rax,1)
7830(4): add $0x1,%rbx
7834(4): cmp %rbx,0x10(%rbp)
7838(2): jle 0x38(%rip)
783a(4): mov 0x18(%rbp),%rax
783e(4): mov 0x0(%rax,%rbx,8),%rsi
7842(3): mov %rsi,%rax
7845(4): shl/sal $0x4,%rax
7849(3): add (%r14),%rax
784c(4): test $0x8,0x8(%rax)
7850(2): jnz 0xffffffe0(%rip)
7852(3): mov %r13,%rdi
7855(5): call 0xfffffdeb(%rip)
785a(2): test %al,%al
785c(2): jnz 0xffffffd4(%rip)
785e(1): pop %rbx
785f(5): mov $0xc,%eax
7864(1): pop %rbp
7865(2): pop %r12
7867(2): pop %r13
7869(2): pop %r14
786b(1): ret near (%rsp)
786c(4): nop 0x0(%rax)
7870(7): and 0x88(%r14),%r12
7877(4): mov 0x40(%r14),%rax
787b(4): lea 0x0(%r12,%r12,2),%rdx
787f(4): lea 0x0(%rax,%rdx,8),%rbx
7883(3): mov (%rbx),%rdx
7886(4): cmp %rdx,0x8(%rbx)
788a(4): mov 0x10(%rbx),%rax
788e(4): lea 0x1(%rdx),%rsi
7892(2): jle 0x14(%rip)
7894(3): mov %rsi,(%rbx)
7897(4): mov %rbp,0x0(%rax,%rdx,8)
789b(2): xor %eax,%eax
789d(1): pop %rbx
789e(1): pop %rbp
789f(2): pop %r12
78a1(2): pop %r13
78a3(2): pop %r14
78a5(1): ret near (%rsp)
78a6(4): lea 0x0(%rsi,%rsi,1),%r12
78aa(3): mov %rax,%rdi
78ad(4): shl/sal $0x4,%rsi
78b1(5): call 0xffffa3df(%rip)
78b6(3): test %rax,%rax
78b9(2): jz 0xffffffa5(%rip)
78bb(3): mov (%rbx),%rdx
78be(4): mov %rax,0x10(%rbx)
78c2(4): mov %r12,0x8(%rbx)
78c6(4): lea 0x1(%rdx),%rsi
78ca(2): jmp 0xffffffca(%rip)

"build_upper_buffer" :
78d0(2): push %r12
78d2(4): mov 0x58(%rdi),%r12
78d6(4): cmp %r12,0x40(%rdi)
78da(1): push %rbp
78db(3): mov %rdi,%rbp
78de(5): cmovng 0x40(%rdi),%r12
78e3(1): push %rbx
78e4(4): mov 0x30(%rdi),%rbx
78e8(3): cmp %rbx,%r12
78eb(2): jle 0x3a(%rip)
78ed(5): call 0xffffa0d3(%rip)
78f2(6): nop 0x0(%rax,%rax,1)
78f8(4): mov 0x0(%rbp),%rdx
78fc(4): mov 0x78(%rbp),%rcx
7900(3): add %rbx,%rdx
7903(4): add 0x28(%rbp),%rdx
7907(3): test %rcx,%rcx
790a(3): movzx (%rdx),%edx
790d(2): jnz 0x2b(%rip)
790f(3): mov (%rax),%rsi
7912(4): mov 0x8(%rbp),%rcx
7916(3): mov 0x0(%rsi,%rdx,4),%edx
7919(3): mov %dl,0x0(%rcx,%rbx,1)
791c(4): add $0x1,%rbx
7920(3): cmp %rbx,%r12
7923(2): jnz 0xffffffd5(%rip)
7925(4): mov %rbx,0x30(%rbp)
7929(4): mov %rbx,0x38(%rbp)
792d(1): pop %rbx
792e(1): pop %rbp
792f(2): pop %r12
7931(1): ret near (%rsp)
7932(6): nop 0x0(%rax,%rax,1)
7938(4): movzx 0x0(%rcx,%rdx,1),%edx
793c(2): jmp 0xffffffd3(%rip)

"build_wcs_buffer" :
7940(2): push %r15
7942(2): push %r14
7944(2): push %r13
7946(2): push %r12
7948(1): push %rbp
7949(1): push %rbx
794a(3): mov %rdi,%rbx
794d(4): sub $0x68,%rsp
7951(4): mov 0x58(%rdi),%r12
7955(4): mov 0x30(%rdi),%rbp
7959(9): mov $0x28,%rax
7962(5): mov %rax,0x58(%rsp)
7967(2): xor %eax,%eax
7969(4): cmp %r12,0x40(%rdi)
796d(5): cmovng 0x40(%rdi),%r12
7972(3): cmp %rbp,%r12
7975(6): jle 0x8f(%rip)
797b(4): lea 0x20(%rdi),%r14
797f(5): lea 0xc(%rsp),%r13
7984(4): nop 0x0(%rax)
7988(4): mov 0x78(%rbx),%rdi
798c(3): mov %r12,%rdx
798f(4): mov 0x20(%rbx),%r15
7993(3): sub %rbp,%rdx
7996(3): test %rdi,%rdi
7999(6): jnz 0xe7(%rip)
799f(4): mov 0x28(%rbx),%rsi
79a3(3): add %rbp,%rsi
79a6(3): add (%rbx),%rsi
79a9(3): mov %r14,%rcx
79ac(3): mov %r13,%rdi
79af(5): call 0xfffff6a1(%rip)
79b4(4): lea 0xffffffff(%rax),%rdx
79b8(4): cmp $0xfffffffd,%rdx
79bc(6): jnbe 0x94(%rip)
79c2(4): cmp $0xfffffffe,%rax
79c6(4): mov 0xc(%rsp),%edx
79ca(2): jz 0x76(%rip)
79cc(4): mov 0x10(%rbx),%rcx
79d0(4): lea 0x1(%rbp),%rsi
79d4(8): lea 0x0(,%rbp,4),%rdi
79dc(3): mov %edx,0x0(%rcx,%rbp,4)
79df(3): add %rax,%rbp
79e2(3): cmp %rbp,%rsi
79e5(2): jnl 0x4b(%rip)
79e7(5): lea 0x4(%rcx,%rdi,1),%rdx
79ec(4): lea 0x0(%rcx,%rbp,4),%rax
79f0(6): mov $0xffffffff,(%rdx)
79f6(4): add $0x4,%rdx
79fa(3): cmp %rdx,%rax
79fd(2): jnz 0xfffffff3(%rip)
79ff(3): cmp %r12,%rbp
7a02(2): jl 0xffffff86(%rip)
7a04(5): mov 0x58(%rsp),%rax
7a09(9): xor $0x28,%rax
7a12(4): mov %rbp,0x30(%rbx)
7a16(4): mov %rbp,0x38(%rbx)
7a1a(6): jnz 0xe4(%rip)
7a20(4): add $0x68,%rsp
7a24(1): pop %rbx
7a25(1): pop %rbp
7a26(2): pop %r12
7a28(2): pop %r13
7a2a(2): pop %r14
7a2c(2): pop %r15
7a2e(1): ret near (%rsp)
7a2f(1): nop 
7a30(3): mov %rsi,%rbp
7a33(3): cmp %r12,%rbp
7a36(6): jl 0xffffff52(%rip)
7a3c(2): jmp 0xffffffc8(%rip)
7a3e(2): nop 
7a40(4): mov 0x58(%rbx),%rax
7a44(4): cmp %rax,0x40(%rbx)
7a48(6): jl 0xa0(%rip)
7a4e(2): nop 
7a50(3): mov (%rbx),%rax
7a53(4): mov 0x78(%rbx),%rcx
7a57(3): add %rbp,%rax
7a5a(4): add 0x28(%rbx),%rax
7a5e(3): test %rcx,%rcx
7a61(3): movzx (%rax),%edx
7a64(4): mov %edx,0xc(%rsp)
7a68(6): jnz 0x89(%rip)
7a6e(4): mov %r15,0x20(%rbx)
7a72(5): mov $0x1,%eax
7a77(5): jmp 0xffffff55(%rip)
7a7c(4): nop 0x0(%rax)
7a80(6): mov 0x90(%rbx),%ecx
7a86(2): xor %eax,%eax
7a88(5): lea 0x10(%rsp),%rsi
7a8d(2): test %ecx,%ecx
7a8f(2): jnle 0x22(%rip)
7a91(5): jmp 0xffffff18(%rip)
7a96(a): nop 0x0(%rax,%rax,1)
7aa0(4): add $0x1,%rax
7aa4(3): cmp %rax,%rdx
7aa7(6): jz 0xffffff02(%rip)
7aad(4): mov 0x78(%rbx),%rdi
7ab1(3): mov (%rbx),%rcx
7ab4(3): add %rbp,%rcx
7ab7(3): add %rax,%rcx
7aba(4): add 0x28(%rbx),%rcx
7abe(3): movzx (%rcx),%ecx
7ac1(4): movzx 0x0(%rdi,%rcx,1),%ecx
7ac5(4): mov 0x8(%rbx),%rdi
7ac9(3): add %rbp,%rdi
7acc(3): mov %cl,0x0(%rdi,%rax,1)
7acf(3): mov %cl,0x0(%rsi,%rax,1)
7ad2(3): lea 0x1(%rax),%ecx
7ad5(6): cmp 0x90(%rbx),%ecx
7adb(2): jl 0xffffffc5(%rip)
7add(5): jmp 0xfffffecc(%rip)
7ae2(6): nop 0x0(%rax,%rax,1)
7ae8(4): mov %r15,0x20(%rbx)
7aec(5): jmp 0xffffff18(%rip)
7af1(4): movzx 0x0(%rcx,%rdx,1),%edx
7af5(4): mov %edx,0xc(%rsp)
7af9(5): jmp 0xffffff75(%rip)
7afe(5): call 0xffff9fd2(%rip)

"build_wcs_upper_buffer" :
7b10(2): push %r15
7b12(2): push %r14
7b14(3): mov %rdi,%r14
7b17(2): push %r13
7b19(2): push %r12
7b1b(1): push %rbp
7b1c(1): push %rbx
7b1d(7): sub $0xa8,%rsp
7b24(4): mov 0x58(%rdi),%rbx
7b28(4): mov 0x30(%rdi),%r15
7b2c(9): mov $0x28,%rax
7b35(8): mov %rax,0x98(%rsp)
7b3d(2): xor %eax,%eax
7b3f(4): cmp %rbx,0x40(%rdi)
7b43(5): cmovng 0x40(%rdi),%rbx
7b48(7): cmp $0x0,0x8a(%rdi)
7b4f(2): jnz 0xd(%rip)
7b51(5): cmp $0x0,0x78(%rdi)
7b56(6): jz 0x18a(%rip)
7b5c(4): mov 0x38(%r14),%r13
7b60(3): cmp %rbx,%r15
7b63(2): jl 0x3d(%rip)
7b65(4): mov %r15,0x30(%r14)
7b69(4): mov %r13,0x38(%r14)
7b6d(2): xor %eax,%eax
7b6f(8): mov 0x98(%rsp),%rcx
7b77(9): xor $0x28,%rcx
7b80(6): jnz 0x58a(%rip)
7b86(7): add $0xa8,%rsp
7b8d(1): pop %rbx
7b8e(1): pop %rbp
7b8f(2): pop %r12
7b91(2): pop %r13
7b93(2): pop %r14
7b95(2): pop %r15
7b97(1): ret near (%rsp)
7b98(8): nop 0x0(%rax,%rax,1)
7ba0(4): lea 0x20(%r14),%rax
7ba4(5): mov %rax,0x8(%rsp)
7ba9(3): mov %rbx,%rax
7bac(3): sub %r15,%rax
7baf(5): mov %rax,0x10(%rsp)
7bb4(5): lea 0x44(%rsp),%rax
7bb9(5): mov %rax,0x20(%rsp)
7bbe(4): mov 0x78(%r14),%rdx
7bc2(4): mov 0x20(%r14),%rax
7bc6(3): test %rdx,%rdx
7bc9(5): mov %rax,0x48(%rsp)
7bce(6): jnz 0x30b(%rip)
7bd4(4): mov 0x28(%r14),%rbp
7bd8(3): add %r13,%rbp
7bdb(3): add (%r14),%rbp
7bde(5): mov %rbp,0x18(%rsp)
7be3(5): mov 0x8(%rsp),%rcx
7be8(5): mov 0x10(%rsp),%rdx
7bed(5): mov 0x18(%rsp),%rsi
7bf2(5): mov 0x20(%rsp),%rdi
7bf7(5): call 0xfffff459(%rip)
7bfc(3): mov %rax,%rbp
7bff(4): lea 0xffffffff(%rax),%rax
7c03(4): cmp $0xfffffffc,%rax
7c07(5): mov %rax,0x20(%rsp)
7c0c(6): jnbe 0x33d(%rip)
7c12(4): mov 0x44(%rsp),%edx
7c16(2): mov %edx,%edi
7c18(4): mov %edx,0x10(%rsp)
7c1c(5): call 0xffffa114(%rip)
7c21(4): mov 0x10(%rsp),%edx
7c25(3): mov %eax,%r12d
7c28(5): mov %r15,0x8(%rsp)
7c2d(2): cmp %eax,%edx
7c2f(6): jz 0x301(%rip)
7c35(5): lea 0x50(%rsp),%rcx
7c3a(5): lea 0x48(%rsp),%rdx
7c3f(2): mov %eax,%esi
7c41(3): mov %rcx,%rdi
7c44(5): mov %rcx,0x10(%rsp)
7c49(5): call 0xffff9fe7(%rip)
7c4e(3): cmp %rax,%rbp
7c51(3): mov %rax,%r11
7c54(5): mov 0x10(%rsp),%rcx
7c59(6): jnz 0x38d(%rip)
7c5f(4): mov 0x8(%r14),%rdi
7c63(3): mov %rbp,%rdx
7c66(3): mov %rcx,%rsi
7c69(3): add %r15,%rdi
7c6c(5): call 0xffff9f74(%rip)
7c71(8): cmp $0x0,0x8c(%r14)
7c79(5): lea 0x0(%rbp,%r13,1),%rax
7c7e(6): jnz 0x337(%rip)
7c84(4): add $0x1,%r15
7c88(5): mov 0x8(%rsp),%rsi
7c8d(4): mov 0x10(%r14),%rdx
7c91(5): lea 0xffffffff(%r15,%rbp,1),%rcx
7c96(3): mov %rax,%r13
7c99(3): cmp %rcx,%r15
7c9c(8): lea 0x0(,%rsi,4),%rax
7ca4(4): mov %r12d,0x0(%rdx,%rsi,4)
7ca8(6): jnl 0xfffffeb8(%rip)
7cae(5): lea 0x4(%rdx,%rax,1),%rax
7cb3(4): lea 0x0(%rdx,%rcx,4),%rdx
7cb7(9): nop 0x0(%rax,%rax,1)
7cc0(6): mov $0xffffffff,(%rax)
7cc6(4): add $0x4,%rax
7cca(3): cmp %rax,%rdx
7ccd(2): jnz 0xfffffff3(%rip)
7ccf(3): mov %rcx,%r15
7cd2(5): jmp 0xfffffe8e(%rip)
7cd7(9): nop 0x0(%rax,%rax,1)
7ce0(7): cmp $0x0,0x8c(%rdi)
7ce7(6): jnz 0xfffffe75(%rip)
7ced(3): cmp %rbx,%r15
7cf0(6): jnl 0x198(%rip)
7cf6(4): lea 0x20(%rdi),%rax
7cfa(5): mov %rax,0x8(%rsp)
7cff(5): lea 0x44(%rsp),%rax
7d04(5): mov %rax,0x30(%rsp)
7d09(5): lea 0x48(%rsp),%rax
7d0e(5): mov %rax,0x38(%rsp)
7d13(5): lea 0x50(%rsp),%rax
7d18(5): mov %rax,0x28(%rsp)
7d1d(3): nop (%rax)
7d20(4): mov 0x28(%r14),%rbp
7d24(3): mov %r15,%r13
7d27(3): add %r15,%rbp
7d2a(3): add (%r14),%rbp
7d2d(5): movzx 0x0(%rbp),%r12d
7d32(4): test $0x80,%r12b
7d36(2): jnz 0x14(%rip)
7d38(5): mov 0x8(%rsp),%rdi
7d3d(5): call 0xffffa053(%rip)
7d42(2): test %eax,%eax
7d44(6): jnz 0xf4(%rip)
7d4a(4): mov 0x20(%r14),%rax
7d4e(5): mov 0x30(%rsp),%rdi
7d53(3): mov %rbx,%rdx
7d56(5): mov 0x8(%rsp),%rcx
7d5b(3): sub %r15,%rdx
7d5e(3): mov %rbp,%rsi
7d61(5): mov %rdx,0x10(%rsp)
7d66(5): mov %rax,0x48(%rsp)
7d6b(5): mov %rdi,0x20(%rsp)
7d70(5): call 0xfffff2e0(%rip)
7d75(3): mov %rax,%rbp
7d78(4): lea 0xffffffff(%rax),%rax
7d7c(4): cmp $0xfffffffc,%rax
7d80(6): jnbe 0xe8(%rip)
7d86(4): mov 0x44(%rsp),%edx
7d8a(2): mov %edx,%edi
7d8c(4): mov %edx,0x18(%rsp)
7d90(5): call 0xffff9fa0(%rip)
7d95(4): mov 0x18(%rsp),%edx
7d99(3): mov %eax,%r12d
7d9c(2): cmp %eax,%edx
7d9e(2): jz 0x7a(%rip)
7da0(5): mov 0x38(%rsp),%rdx
7da5(5): mov 0x28(%rsp),%rdi
7daa(2): mov %eax,%esi
7dac(5): call 0xffff9e84(%rip)
7db1(3): cmp %rax,%rbp
7db4(6): jnz 0x174(%rip)
7dba(4): mov 0x8(%r14),%rdi
7dbe(5): mov 0x28(%rsp),%rsi
7dc3(3): mov %rbp,%rdx
7dc6(3): add %r15,%rdi
7dc9(5): call 0xffff9e17(%rip)
7dce(4): add $0x1,%r15
7dd2(4): mov 0x10(%r14),%rdx
7dd6(8): lea 0x0(,%r13,4),%rax
7dde(5): lea 0xffffffff(%r15,%rbp,1),%rcx
7de3(3): cmp %rcx,%r15
7de6(4): mov %r12d,0x0(%rdx,%r13,4)
7dea(2): jnl 0x20(%rip)
7dec(5): lea 0x4(%rdx,%rax,1),%rax
7df1(4): lea 0x0(%rdx,%rcx,4),%rdx
7df5(3): nop (%rax)
7df8(6): mov $0xffffffff,(%rax)
7dfe(4): add $0x4,%rax
7e02(3): cmp %rax,%rdx
7e05(2): jnz 0xfffffff3(%rip)
7e07(3): mov %rcx,%r15
7e0a(3): cmp %r15,%rbx
7e0d(6): jnle 0xffffff13(%rip)
7e13(2): jmp 0x75(%rip)
7e15(3): nop (%rax)
7e18(4): mov 0x28(%r14),%rsi
7e1c(4): mov 0x8(%r14),%rdi
7e20(3): mov %rbp,%rdx
7e23(3): add %r15,%rsi
7e26(3): add (%r14),%rsi
7e29(3): add %r15,%rdi
7e2c(5): call 0xffff9db4(%rip)
7e31(2): jmp 0xffffff9d(%rip)
7e33(5): nop 0x0(%rax,%rax,1)
7e38(5): call 0xffff9b88(%rip)
7e3d(3): mov (%rax),%rax
7e40(4): mov 0x8(%r14),%rdx
7e44(4): mov 0x0(%rax,%r12,4),%eax
7e48(4): mov %al,0x0(%rdx,%r15,1)
7e4c(4): mov 0x8(%r14),%rdx
7e50(4): mov 0x10(%r14),%rax
7e54(5): movzx 0x0(%rdx,%r15,1),%edx
7e59(4): mov %edx,0x0(%rax,%r15,4)
7e5d(4): add $0x1,%r15
7e61(2): jmp 0xffffffa9(%rip)
7e63(5): nop 0x0(%rax,%rax,1)
7e68(4): cmp $0xfffffffd,%rax
7e6c(2): jnz 0x34(%rip)
7e6e(4): mov 0x58(%r14),%rax
7e72(4): cmp %rax,0x40(%r14)
7e76(2): jnl 0x2a(%rip)
7e78(5): mov 0x48(%rsp),%rax
7e7d(4): mov %rax,0x20(%r14)
7e81(7): nop 0x0(%rax)
7e88(4): mov %r15,0x30(%r14)
7e8c(4): mov %r15,0x38(%r14)
7e90(2): xor %eax,%eax
7e92(5): jmp 0xfffffcdd(%rip)
7e97(9): nop 0x0(%rax,%rax,1)
7ea0(3): mov (%r14),%rax
7ea3(4): mov 0x8(%r14),%rdx
7ea7(3): add %r15,%rax
7eaa(4): add 0x28(%r14),%rax
7eae(3): movzx (%rax),%eax
7eb1(4): mov %al,0x0(%rdx,%r15,1)
7eb5(4): mov 0x10(%r14),%rdx
7eb9(4): add $0x1,%r15
7ebd(4): cmp $0xffffffff,%rbp
7ec1(4): mov %eax,0x0(%rdx,%r13,4)
7ec5(6): jnz 0xffffff45(%rip)
7ecb(5): mov 0x48(%rsp),%rax
7ed0(4): mov %rax,0x20(%r14)
7ed4(5): jmp 0xffffff36(%rip)
7ed9(7): mov 0x90(%r14),%eax
7ee0(2): test %eax,%eax
7ee2(6): jle 0x21e(%rip)
7ee8(4): mov 0x28(%r14),%rdi
7eec(4): lea 0xffffffff(%rax),%r11d
7ef0(5): lea 0x50(%rsp),%rcx
7ef5(2): xor %eax,%eax
7ef7(3): add %r13,%rdi
7efa(3): add (%r14),%rdi
7efd(2): jmp 0xd(%rip)
7eff(4): add $0x1,%rax
7f03(5): cmp %rax,0x10(%rsp)
7f08(2): jz 0x13(%rip)
7f0a(4): movzx 0x0(%rdi,%rax,1),%esi
7f0e(3): cmp %rax,%r11
7f11(4): movzx 0x0(%rdx,%rsi,1),%esi
7f15(4): mov %sil,0x0(%rcx,%rax,1)
7f19(2): jnz 0xffffffe6(%rip)
7f1b(5): mov %rcx,0x18(%rsp)
7f20(5): jmp 0xfffffcc3(%rip)
7f25(3): nop (%rax)
7f28(3): mov %r15,%r13
7f2b(5): jmp 0xfffffc93(%rip)
7f30(4): mov 0x8(%r14),%rdi
7f34(5): mov 0x18(%rsp),%rsi
7f39(3): mov %rbp,%rdx
7f3c(3): add %r15,%rdi
7f3f(5): call 0xffff9ca1(%rip)
7f44(5): jmp 0xfffffd2d(%rip)
7f49(6): cmp $0xfffffffd,0x20(%rsp)
7f4f(2): jnz 0xc(%rip)
7f51(4): mov 0x58(%r14),%rax
7f55(4): cmp %rax,0x40(%r14)
7f59(2): jl 0x7f(%rip)
7f5b(3): mov (%r14),%rax
7f5e(4): mov 0x78(%r14),%rdx
7f62(3): add %r13,%rax
7f65(4): add 0x28(%r14),%rax
7f69(3): test %rdx,%rdx
7f6c(3): movzx (%rax),%eax
7f6f(6): jnz 0x1ad(%rip)
7f75(4): mov 0x8(%r14),%rdx
7f79(3): mov %r15,%rcx
7f7c(4): mov %al,0x0(%rdx,%r15,1)
7f80(8): cmp $0x0,0x8c(%r14)
7f88(6): jnz 0x187(%rip)
7f8e(4): mov 0x10(%r14),%rdx
7f92(4): add $0x1,%r13
7f96(4): add $0x1,%r15
7f9a(4): cmp $0xffffffff,%rbp
7f9e(3): mov %eax,0x0(%rdx,%rcx,4)
7fa1(6): jnz 0xfffffbbf(%rip)
7fa7(5): mov 0x48(%rsp),%rax
7fac(4): mov %rax,0x20(%r14)
7fb0(5): jmp 0xfffffbb0(%rip)
7fb5(4): mov 0x18(%r14),%rdx
7fb9(3): mov %r15,%rcx
7fbc(3): mov %r13,%r10
7fbf(3): sub %r13,%rcx
7fc2(4): lea 0x0(%rdx,%rcx,8),%rdx
7fc6(4): mov %r10,0x0(%rdx,%r10,8)
7fca(4): add $0x1,%r10
7fce(3): cmp %r10,%rax
7fd1(2): jnz 0xfffffff5(%rip)
7fd3(5): jmp 0xfffffcb1(%rip)
7fd8(5): mov 0x48(%rsp),%rax
7fdd(4): mov %rax,0x20(%r14)
7fe1(5): jmp 0xfffffb84(%rip)
7fe6(4): cmp $0xffffffff,%rax
7fea(6): jz 0xffffff46(%rip)
7ff0(4): lea 0x0(%rax,%r15,1),%rax
7ff4(3): mov %rax,%rsi
7ff7(5): mov %rax,0x8(%rsp)
7ffc(4): mov 0x40(%r14),%rax
8000(3): cmp %rax,%rsi
8003(2): jnbe 0xffffffd5(%rip)
8005(5): cmp $0x0,0x18(%r14)
800a(6): jz 0xbe(%rip)
8010(8): cmp $0x0,0x8c(%r14)
8018(2): jnz 0x22(%rip)
801a(3): test %r15,%r15
801d(2): jz 0x15(%rip)
801f(4): mov 0x18(%r14),%rdx
8023(2): xor %eax,%eax
8025(4): mov %rax,0x0(%rdx,%rax,8)
8029(4): add $0x1,%rax
802d(3): cmp %r15,%rax
8030(2): jnz 0xfffffff5(%rip)
8032(8): mov $0x1,0x8c(%r14)
803a(4): mov 0x8(%r14),%rdi
803e(3): mov %rcx,%rsi
8041(3): mov %r11,%rdx
8044(5): mov %r11,0x10(%rsp)
8049(3): add %r15,%rdi
804c(5): call 0xffff9b94(%rip)
8051(4): mov 0x10(%r14),%rax
8055(5): mov 0x10(%rsp),%r11
805a(4): lea 0x0(%rax,%r15,4),%rcx
805e(4): mov 0x18(%r14),%rax
8062(4): cmp $0x1,%r11
8066(3): mov %r12d,(%rcx)
8069(4): lea 0x0(%rax,%r15,8),%rsi
806d(3): mov %r13,(%rsi)
8070(2): jbe 0x2a(%rip)
8072(5): mov $0x1,%eax
8077(5): mov 0x20(%rsp),%rdx
807c(3): cmp %rbp,%rax
807f(4): cmovnae %rax,%rdx
8083(3): add %r13,%rdx
8086(4): mov %rdx,0x0(%rsi,%rax,8)
808a(7): mov $0xffffffff,0x0(%rcx,%rax,4)
8091(4): add $0x1,%rax
8095(3): cmp %r11,%rax
8098(2): jnz 0xffffffdf(%rip)
809a(4): mov 0x58(%r14),%rbx
809e(3): sub %rbp,%r11
80a1(3): add %r11,%rbx
80a4(4): cmp 0x60(%r14),%r13
80a8(4): mov %rbx,0x58(%r14)
80ac(2): jnl 0x6(%rip)
80ae(4): add %r11,0x68(%r14)
80b2(4): cmp %rbx,0x40(%r14)
80b6(5): mov 0x8(%rsp),%r15
80bb(5): cmovng 0x40(%r14),%rbx
80c0(3): add %rbp,%r13
80c3(5): jmp 0xfffffa9d(%rip)
80c8(8): lea 0x0(,%rax,8),%rdi
80d0(5): mov %rcx,0x18(%rsp)
80d5(5): mov %r11,0x10(%rsp)
80da(5): call 0xffff9b46(%rip)
80df(3): test %rax,%rax
80e2(4): mov %rax,0x18(%r14)
80e6(5): mov 0x10(%rsp),%r11
80eb(5): mov 0x18(%rsp),%rcx
80f0(6): jnz 0xffffff20(%rip)
80f6(5): mov $0xc,%eax
80fb(5): jmp 0xfffffa74(%rip)
8100(5): lea 0x50(%rsp),%rcx
8105(5): jmp 0xfffffe16(%rip)
810a(5): call 0xffff99c6(%rip)
810f(4): mov 0x18(%r14),%rdx
8113(4): mov %r13,0x0(%rdx,%r15,8)
8117(5): jmp 0xfffffe77(%rip)
811c(4): movzx 0x0(%rdx,%rax,1),%eax
8120(5): jmp 0xfffffe55(%rip)

"extend_buffers" :
8130(1): push %rbp
8131(1): push %rbx
8132(a): mov $0x1152921504606846974,%rdx
813c(4): sub $0x8,%rsp
8140(4): mov 0x40(%rdi),%rax
8144(3): cmp %rdx,%rax
8147(6): jnbe 0x111(%rip)
814d(4): mov 0x58(%rdi),%rdx
8151(3): add %rax,%rax
8154(3): movsxd %esi,%rsi
8157(3): mov %rdi,%rbx
815a(3): cmp %rdx,%rax
815d(4): cmovnl %rdx,%rax
8161(3): cmp %rsi,%rax
8164(4): cmovnl %rax,%rsi
8168(5): call 0xfffff438(%rip)
816d(2): test %eax,%eax
816f(2): mov %eax,%ebp
8171(6): jnz 0xbc(%rip)
8177(7): mov 0xb8(%rbx),%rdi
817e(3): test %rdi,%rdi
8181(2): jz 0x23(%rip)
8183(4): mov 0x40(%rbx),%rax
8187(8): lea 0x8(,%rax,8),%rsi
818f(5): call 0xffff9b01(%rip)
8194(3): test %rax,%rax
8197(6): jz 0xc1(%rip)
819d(7): mov %rax,0xb8(%rbx)
81a4(7): cmp $0x0,0x88(%rbx)
81ab(6): mov 0x90(%rbx),%eax
81b1(2): jz 0x1f(%rip)
81b3(3): cmp $0x1,%eax
81b6(3): mov %rbx,%rdi
81b9(6): jle 0xb7(%rip)
81bf(4): add $0x8,%rsp
81c3(1): pop %rbx
81c4(1): pop %rbp
81c5(5): jmp 0xfffff94b(%rip)
81ca(6): nop 0x0(%rax,%rax,1)
81d0(3): cmp $0x1,%eax
81d3(2): jnle 0x6d(%rip)
81d5(4): mov 0x78(%rbx),%rcx
81d9(3): test %rcx,%rcx
81dc(2): jz 0x51(%rip)
81de(4): mov 0x58(%rbx),%rsi
81e2(4): cmp %rsi,0x40(%rbx)
81e6(5): cmovng 0x40(%rbx),%rsi
81eb(4): mov 0x30(%rbx),%rax
81ef(3): cmp %rax,%rsi
81f2(2): jnle 0x12(%rip)
81f4(2): jmp 0x31(%rip)
81f6(a): nop 0x0(%rax,%rax,1)
8200(4): mov 0x78(%rbx),%rcx
8204(3): mov (%rbx),%rdx
8207(3): add %rax,%rdx
820a(4): add 0x28(%rbx),%rdx
820e(3): movzx (%rdx),%edx
8211(4): movzx 0x0(%rcx,%rdx,1),%ecx
8215(4): mov 0x8(%rbx),%rdx
8219(3): mov %cl,0x0(%rdx,%rax,1)
821c(4): add $0x1,%rax
8220(3): cmp %rax,%rsi
8223(2): jnz 0xffffffdd(%rip)
8225(4): mov %rax,0x30(%rbx)
8229(4): mov %rax,0x38(%rbx)
822d(4): add $0x8,%rsp
8231(2): mov %ebp,%eax
8233(1): pop %rbx
8234(1): pop %rbp
8235(1): ret near (%rsp)
8236(a): nop 0x0(%rax,%rax,1)
8240(3): mov %rbx,%rdi
8243(5): call 0xfffff6fd(%rip)
8248(4): add $0x8,%rsp
824c(2): mov %ebp,%eax
824e(1): pop %rbx
824f(1): pop %rbp
8250(1): ret near (%rsp)
8251(7): nop 0x0(%rax)
8258(5): mov $0xc,%ebp
825d(4): add $0x8,%rsp
8261(2): mov %ebp,%eax
8263(1): pop %rbx
8264(1): pop %rbp
8265(1): ret near (%rsp)
8266(a): nop 0x0(%rax,%rax,1)
8270(5): call 0xfffff660(%rip)
8275(4): add $0x8,%rsp
8279(2): mov %ebp,%eax
827b(1): pop %rbx
827c(1): pop %rbp
827d(1): ret near (%rsp)

"clean_state_log_if_needed" :
8280(2): push %r12
8282(1): push %rbp
8283(3): mov %rsi,%rbp
8286(1): push %rbx
8287(4): mov 0x40(%rdi),%rax
828b(3): mov %rdi,%rbx
828e(7): mov 0xc0(%rdi),%r12
8295(3): cmp %rsi,%rax
8298(2): jnle 0x28(%rip)
829a(4): cmp 0x58(%rdi),%rax
829e(2): jnl 0x22(%rip)
82a0(3): lea 0x1(%rbp),%esi
82a3(3): mov %rbx,%rdi
82a6(5): call 0xfffffe8a(%rip)
82ab(2): test %eax,%eax
82ad(2): jnz 0x9(%rip)
82af(3): cmp %rbp,%r12
82b2(2): jl 0x2e(%rip)
82b4(2): xor %eax,%eax
82b6(1): pop %rbx
82b7(1): pop %rbp
82b8(2): pop %r12
82ba(1): ret near (%rsp)
82bb(5): nop 0x0(%rax,%rax,1)
82c0(4): mov 0x30(%rbx),%rax
82c4(3): cmp %rbp,%rax
82c7(2): jnle 0xffffffe8(%rip)
82c9(4): cmp 0x58(%rbx),%rax
82cd(2): jnl 0xffffffe2(%rip)
82cf(3): lea 0x1(%rbp),%esi
82d2(3): mov %rbx,%rdi
82d5(5): call 0xfffffe5b(%rip)
82da(2): test %eax,%eax
82dc(2): jz 0xffffffd3(%rip)
82de(2): jmp 0xffffffd8(%rip)
82e0(7): mov 0xb8(%rbx),%rax
82e7(3): mov %rbp,%rdx
82ea(2): xor %esi,%esi
82ec(3): sub %r12,%rdx
82ef(4): shl/sal $0x3,%rdx
82f3(5): lea 0x8(%rax,%r12,8),%rdi
82f8(5): call 0xffff9868(%rip)
82fd(7): mov %rbp,0xc0(%rbx)
8304(2): jmp 0xffffffb0(%rip)

"free_charset" :
8310(1): push %rbx
8311(3): mov %rdi,%rbx
8314(3): mov (%rdi),%rdi
8317(5): call 0xffff96b9(%rip)
831c(4): mov 0x8(%rbx),%rdi
8320(5): call 0xffff96b0(%rip)
8325(4): mov 0x10(%rbx),%rdi
8329(5): call 0xffff96a7(%rip)
832e(4): mov 0x18(%rbx),%rdi
8332(5): call 0xffff969e(%rip)
8337(3): mov %rbx,%rdi
833a(1): pop %rbx
833b(5): jmp 0xffff9695(%rip)

"free_token" :
8340(3): mov 0x8(%rdi),%eax
8343(5): and $0x400ff,%eax
8348(3): cmp $0x6,%eax
834b(2): jz 0x15(%rip)
834d(3): cmp $0x3,%eax
8350(2): jz 0x8(%rip)
8352(2): REP ret near (%rsp)
8354(4): nop 0x0(%rax)
8358(3): mov (%rdi),%rdi
835b(5): jmp 0xffff9675(%rip)
8360(3): mov (%rdi),%rdi
8363(2): jmp 0xffffffad(%rip)

"free_tree" :
8370(4): lea 0x28(%rsi),%rdi
8374(4): sub $0x8,%rsp
8378(5): call 0xffffffc8(%rip)
837d(2): xor %eax,%eax
837f(4): add $0x8,%rsp
8383(1): ret near (%rsp)

"re_dfa_add_node" :
8390(2): push %r15
8392(2): push %r14
8394(3): mov %rsi,%r14
8397(2): push %r13
8399(2): push %r12
839b(1): push %rbp
839c(1): push %rbx
839d(3): mov %rdi,%rbx
83a0(4): sub $0x18,%rsp
83a4(4): mov 0x10(%rdi),%rsi
83a8(4): mov 0x8(%rdi),%rbp
83ac(3): cmp %rbp,%rsi
83af(6): jnb 0xb1(%rip)
83b5(4): mov 0x18(%rdi),%r12
83b9(4): mov 0x28(%rdi),%rbp
83bd(3): mov %rsi,%rax
83c0(2): mov %edx,%ecx
83c2(4): shl/sal $0x4,%rax
83c6(3): add (%rbx),%rax
83c9(6): and $0xfffc00ff,%ecx
83cf(4): mov %rdx,0x8(%rax)
83d3(3): mov %ecx,0x8(%rax)
83d6(2): xor %ecx,%ecx
83d8(3): cmp $0x6,%dl
83db(3): mov %r14,(%rax)
83de(3): setz %cl
83e1(3): cmp $0x5,%dl
83e4(2): jnz 0xe(%rip)
83e6(2): xor %ecx,%ecx
83e8(7): cmp $0x1,0xb4(%rbx)
83ef(3): setnle %cl
83f2(4): movzx 0xa(%rax),%edx
83f6(3): shl/sal $0x4,%ecx
83f9(4): pxor %xmm0,%xmm0
83fd(3): and $0xef,%edx
8400(2): or %ecx,%edx
8402(3): mov %dl,0xa(%rax)
8405(8): mov $0xffffffff,0x0(%r12,%rsi,8)
840d(4): mov 0x10(%rbx),%rax
8411(4): lea 0x0(%rax,%rax,2),%rax
8415(5): lea 0x0(%rbp,%rax,8),%rax
841a(3): movups %xmm0,(%rax)
841d(8): mov $0x0,0x10(%rax)
8425(4): mov 0x10(%rbx),%rax
8429(4): lea 0x0(%rax,%rax,2),%rdx
842d(4): mov 0x30(%rbx),%rax
8431(4): lea 0x0(%rax,%rdx,8),%rax
8435(3): movups %xmm0,(%rax)
8438(8): mov $0x0,0x10(%rax)
8440(4): mov 0x10(%rbx),%rax
8444(4): lea 0x1(%rax),%rdx
8448(4): mov %rdx,0x10(%rbx)
844c(4): add $0x18,%rsp
8450(1): pop %rbx
8451(1): pop %rbp
8452(2): pop %r12
8454(2): pop %r13
8456(2): pop %r14
8458(2): pop %r15
845a(1): ret near (%rsp)
845b(5): nop 0x0(%rax,%rax,1)
8460(5): lea 0x0(%rbp,%rbp,1),%r13
8465(a): mov $0x768614336404564650,%rax
846f(3): cmp %rax,%r13
8472(6): jnbe 0xe0(%rip)
8478(3): mov (%rdi),%rdi
847b(3): mov %rbp,%rsi
847e(5): mov %rdx,0x8(%rsp)
8483(4): shl/sal $0x5,%rsi
8487(5): call 0xffff9809(%rip)
848c(3): test %rax,%rax
848f(6): jz 0xc3(%rip)
8495(3): mov %rbp,%r15
8498(4): mov 0x18(%rbx),%rdi
849c(3): mov %rax,(%rbx)
849f(4): shl/sal $0x4,%r15
84a3(3): mov %r15,%rsi
84a6(5): call 0xffff97ea(%rip)
84ab(4): mov 0x20(%rbx),%rdi
84af(3): mov %r15,%rsi
84b2(5): lea 0x0(%r13,%rbp,4),%r15
84b7(3): mov %rax,%r12
84ba(4): shl/sal $0x3,%r15
84be(5): call 0xffff97d2(%rip)
84c3(4): mov 0x28(%rbx),%rdi
84c7(3): mov %r15,%rsi
84ca(4): mov %rax,(%rsp)
84ce(5): call 0xffff97c2(%rip)
84d3(4): mov 0x30(%rbx),%rdi
84d7(3): mov %r15,%rsi
84da(3): mov %rax,%rbp
84dd(5): call 0xffff97b3(%rip)
84e2(3): test %r12,%r12
84e5(4): mov (%rsp),%rcx
84e9(2): jz 0x37(%rip)
84eb(3): test %rcx,%rcx
84ee(2): jz 0x32(%rip)
84f0(3): test %rbp,%rbp
84f3(2): jz 0x2d(%rip)
84f5(3): test %rax,%rax
84f8(5): mov 0x8(%rsp),%rdx
84fd(2): jz 0x23(%rip)
84ff(4): mov %r12,0x18(%rbx)
8503(4): mov %rcx,0x20(%rbx)
8507(4): mov %rbp,0x28(%rbx)
850b(4): mov %rax,0x30(%rbx)
850f(4): mov %r13,0x8(%rbx)
8513(4): mov 0x10(%rbx),%rsi
8517(5): jmp 0xfffffea6(%rip)
851c(4): nop 0x0(%rax)
8520(3): mov %r12,%rdi
8523(5): mov %rax,0x8(%rsp)
8528(4): mov %rcx,(%rsp)
852c(5): call 0xffff94a4(%rip)
8531(4): mov (%rsp),%rcx
8535(3): mov %rcx,%rdi
8538(5): call 0xffff9498(%rip)
853d(3): mov %rbp,%rdi
8540(5): call 0xffff9490(%rip)
8545(5): mov 0x8(%rsp),%rax
854a(3): mov %rax,%rdi
854d(5): call 0xffff9483(%rip)
8552(7): mov $0xffffffff,%rax
8559(5): jmp 0xfffffef3(%rip)

"duplicate_node" :
8560(2): push %r13
8562(2): push %r12
8564(3): mov %rsi,%r13
8567(1): push %rbp
8568(1): push %rbx
8569(4): shl/sal $0x4,%r13
856d(3): mov %rsi,%rbp
8570(3): mov %edx,%r12d
8573(3): mov %rdi,%rbx
8576(4): sub $0x8,%rsp
857a(3): mov (%rdi),%rax
857d(4): mov 0x0(%rax,%r13,1),%rsi
8581(5): mov 0x8(%rax,%r13,1),%rdx
8586(5): call 0xfffffe0a(%rip)
858b(4): cmp $0xffffffff,%rax
858f(2): jz 0x65(%rip)
8591(3): mov %r12d,%edi
8594(3): mov (%rbx),%r8
8597(3): mov %rax,%rsi
859a(5): and $0x3ff,%di
859f(4): shl/sal $0x4,%rsi
85a3(2): mov %edi,%ecx
85a5(6): and $0x3ff,%ecx
85ab(3): add %r8,%rsi
85ae(3): shl/sal $0x8,%ecx
85b1(2): mov %ecx,%edx
85b3(3): mov 0x8(%rsi),%ecx
85b6(6): and $0xfffc00ff,%ecx
85bc(2): or %edx,%ecx
85be(3): mov %ecx,0x8(%rsi)
85c1(5): mov 0x8(%r8,%r13,1),%edx
85c6(6): and $0xfffc00ff,%ecx
85cc(3): shr $0x8,%edx
85cf(2): or %edi,%edx
85d1(6): and $0x3ff,%edx
85d7(3): shl/sal $0x8,%edx
85da(2): or %ecx,%edx
85dc(2): mov %edx,%ecx
85de(3): mov %edx,0x8(%rsi)
85e1(3): shr $0x10,%ecx
85e4(2): mov %ecx,%edx
85e6(3): or $0x4,%edx
85e9(3): mov %dl,0xa(%rsi)
85ec(4): mov 0x20(%rbx),%rdx
85f0(4): mov %rbp,0x0(%rdx,%rax,8)
85f4(4): add $0x8,%rsp
85f8(1): pop %rbx
85f9(1): pop %rbp
85fa(2): pop %r12
85fc(2): pop %r13
85fe(1): ret near (%rsp)

"duplicate_node_closure" :
8600(2): push %r15
8602(2): push %r14
8604(3): mov %rsi,%r9
8607(2): push %r13
8609(2): push %r12
860b(3): mov %rdi,%r14
860e(1): push %rbp
860f(1): push %rbx
8610(3): mov %rdx,%r13
8613(3): mov %r8d,%ebp
8616(4): sub $0x18,%rsp
861a(5): mov %rcx,0x8(%rsp)
861f(3): mov (%r14),%r8
8622(3): mov %r9,%rax
8625(4): mov 0x28(%r14),%rdi
8629(4): shl/sal $0x4,%rax
862d(3): mov %r13,%r12
8630(3): add %r8,%rax
8633(4): cmp $0x4,0x8(%rax)
8637(6): jz 0x1b9(%rip)
863d(4): lea 0x0(%r9,%r9,2),%r12
8641(4): shl/sal $0x3,%r12
8645(4): lea 0x0(%rdi,%r12,1),%rsi
8649(4): mov 0x8(%rsi),%rcx
864d(3): test %rcx,%rcx
8650(6): jz 0x1f9(%rip)
8656(5): lea 0x0(%r13,%r13,2),%rbx
865b(4): mov 0x10(%rsi),%rsi
865f(4): shl/sal $0x3,%rbx
8663(3): add %rbx,%rdi
8666(4): cmp $0x1,%rcx
866a(3): mov (%rsi),%r15
866d(8): mov $0x0,0x8(%rdi)
8675(6): jz 0x11b(%rip)
867b(4): mov 0x10(%r14),%rdx
867f(4): lea 0xffffffff(%rdx),%rsi
8683(3): mov %rsi,%rax
8686(4): shl/sal $0x4,%rax
868a(3): add %r8,%rax
868d(4): test $0x4,0xa(%rax)
8691(6): jz 0xaf(%rip)
8697(3): test %rsi,%rsi
869a(6): jle 0xa6(%rip)
86a0(4): shl/sal $0x4,%rdx
86a4(3): sub %rax,%r8
86a7(4): mov 0x20(%r14),%rcx
86ab(5): lea 0xffffffe0(%r8,%rdx,1),%r8
86b0(2): jmp 0x1a(%rip)
86b2(6): nop 0x0(%rax,%rax,1)
86b8(3): add %r8,%rax
86bb(4): sub $0x1,%rsi
86bf(4): test $0x4,0xa(%rax)
86c3(2): jz 0x7d(%rip)
86c5(3): test %rsi,%rsi
86c8(2): jle 0x78(%rip)
86ca(4): cmp %r15,0x0(%rcx,%rsi,8)
86ce(2): jnz 0xffffffea(%rip)
86d0(3): mov 0x8(%rax),%edx
86d3(3): shr $0x8,%edx
86d6(6): and $0x3ff,%edx
86dc(2): cmp %edx,%ebp
86de(2): jnz 0xffffffda(%rip)
86e0(5): call 0xffffefd0(%rip)
86e5(2): test %al,%al
86e7(2): jz 0x44(%rip)
86e9(4): mov 0x28(%r14),%rax
86ed(2): mov %ebp,%edx
86ef(3): mov %r14,%rdi
86f2(5): mov 0x10(%rax,%r12,1),%rax
86f7(4): mov 0x8(%rax),%r9
86fb(3): mov %r9,%rsi
86fe(4): mov %r9,(%rsp)
8702(5): call 0xfffffe5e(%rip)
8707(4): cmp $0xffffffff,%rax
870b(3): mov %rax,%r13
870e(2): jz 0x1d(%rip)
8710(4): add 0x28(%r14),%rbx
8714(3): mov %r13,%rsi
8717(3): mov %rbx,%rdi
871a(5): call 0xffffef96(%rip)
871f(2): test %al,%al
8721(4): mov (%rsp),%r9
8725(6): jnz 0xfffffefa(%rip)
872b(5): mov $0xc,%eax
8730(4): add $0x18,%rsp
8734(1): pop %rbx
8735(1): pop %rbp
8736(2): pop %r12
8738(2): pop %r13
873a(2): pop %r14
873c(2): pop %r15
873e(1): ret near (%rsp)
873f(1): nop 
8740(2): mov %ebp,%edx
8742(3): mov %r15,%rsi
8745(3): mov %r14,%rdi
8748(5): call 0xfffffe18(%rip)
874d(4): cmp $0xffffffff,%rax
8751(3): mov %rax,%r13
8754(2): jz 0xffffffd7(%rip)
8756(4): mov 0x28(%r14),%rdi
875a(3): mov %r13,%rsi
875d(3): add %rbx,%rdi
8760(5): call 0xffffef50(%rip)
8765(2): test %al,%al
8767(2): jz 0xffffffc4(%rip)
8769(5): mov 0x8(%rsp),%rcx
876e(3): mov %ebp,%r8d
8771(3): mov %r13,%rdx
8774(3): mov %r15,%rsi
8777(3): mov %r14,%rdi
877a(5): call 0xfffffe86(%rip)
877f(2): test %eax,%eax
8781(6): jz 0xffffff68(%rip)
8787(2): jmp 0xffffffa9(%rip)
8789(7): nop 0x0(%rax)
8790(5): cmp 0x8(%rsp),%r9
8795(2): jnz 0xb(%rip)
8797(3): cmp %r13,%r9
879a(6): jnz 0xc2(%rip)
87a0(3): mov 0x8(%rax),%eax
87a3(3): mov %r15,%rsi
87a6(3): mov %r14,%rdi
87a9(3): shr $0x8,%eax
87ac(5): and $0x3ff,%eax
87b1(2): or %eax,%ebp
87b3(2): mov %ebp,%edx
87b5(5): call 0xfffffdab(%rip)
87ba(4): cmp $0xffffffff,%rax
87be(3): mov %rax,%r13
87c1(6): jz 0xffffff6a(%rip)
87c7(4): add 0x28(%r14),%rbx
87cb(3): mov %rax,%rsi
87ce(3): mov %rbx,%rdi
87d1(5): call 0xffffeedf(%rip)
87d6(2): test %al,%al
87d8(6): jz 0xffffff53(%rip)
87de(3): mov %r15,%r9
87e1(5): jmp 0xfffffe3e(%rip)
87e6(a): nop 0x0(%rax,%rax,1)
87f0(4): mov 0x18(%r14),%rax
87f4(5): lea 0x0(%r13,%r13,2),%rbx
87f9(8): lea 0x0(,%r9,8),%r15
8801(2): mov %ebp,%edx
8803(4): shl/sal $0x3,%rbx
8807(4): mov 0x0(%rax,%r9,8),%r9
880b(9): mov $0x0,0x8(%rdi,%rbx,1)
8814(3): mov %r14,%rdi
8817(3): mov %r9,%rsi
881a(4): mov %r9,(%rsp)
881e(5): call 0xfffffd42(%rip)
8823(4): cmp $0xffffffff,%rax
8827(3): mov %rax,%r13
882a(4): mov (%rsp),%r9
882e(6): jz 0xfffffefd(%rip)
8834(4): mov 0x18(%r14),%rax
8838(4): mov %r9,(%rsp)
883c(4): mov 0x0(%rax,%r15,1),%rcx
8840(4): mov %rcx,0x0(%rax,%r12,8)
8844(5): jmp 0xfffffecc(%rip)
8849(4): mov 0x18(%r14),%rax
884d(4): mov 0x0(%rax,%r9,8),%rcx
8851(4): mov %rcx,0x0(%rax,%r13,8)
8855(2): xor %eax,%eax
8857(5): jmp 0xfffffed9(%rip)
885c(3): mov %r15,%rsi
885f(5): call 0xffffee51(%rip)
8864(2): mov %eax,%edx
8866(2): xor %eax,%eax
8868(2): test %dl,%dl
886a(6): jnz 0xfffffec6(%rip)
8870(5): jmp 0xfffffebb(%rip)

"free_state" :
8880(1): push %rbx
8881(3): mov %rdi,%rbx
8884(4): mov 0x30(%rdi),%rdi
8888(5): call 0xffff9148(%rip)
888d(4): mov 0x48(%rbx),%rdi
8891(5): call 0xffff913f(%rip)
8896(4): mov 0x50(%rbx),%rax
889a(4): lea 0x8(%rbx),%rdx
889e(3): cmp %rdx,%rax
88a1(2): jz 0x14(%rip)
88a3(4): mov 0x10(%rax),%rdi
88a7(5): call 0xffff9129(%rip)
88ac(4): mov 0x50(%rbx),%rdi
88b0(5): call 0xffff9120(%rip)
88b5(4): mov 0x18(%rbx),%rdi
88b9(5): call 0xffff9117(%rip)
88be(4): mov 0x60(%rbx),%rdi
88c2(5): call 0xffff910e(%rip)
88c7(4): mov 0x58(%rbx),%rdi
88cb(5): call 0xffff9105(%rip)
88d0(3): mov %rbx,%rdi
88d3(1): pop %rbx
88d4(5): jmp 0xffff90fc(%rip)

"re_string_destruct" :
88e0(1): push %rbx
88e1(3): mov %rdi,%rbx
88e4(4): mov 0x10(%rdi),%rdi
88e8(5): call 0xffff90e8(%rip)
88ed(4): mov 0x18(%rbx),%rdi
88f1(5): call 0xffff90df(%rip)
88f6(7): cmp $0x0,0x8b(%rbx)
88fd(2): jnz 0xb(%rip)
88ff(1): pop %rbx
8900(1): ret near (%rsp)
8901(7): nop 0x0(%rax)
8908(4): mov 0x8(%rbx),%rdi
890c(1): pop %rbx
890d(5): jmp 0xffff90c3(%rip)

"free_dfa_content" :
8920(2): push %r14
8922(2): push %r13
8924(2): push %r12
8926(3): mov %rdi,%r12
8929(1): push %rbp
892a(1): push %rbx
892b(3): mov (%rdi),%rdi
892e(3): test %rdi,%rdi
8931(2): jz 0x2d(%rip)
8933(6): cmp $0x0,0x10(%r12)
8939(2): jz 0x25(%rip)
893b(2): xor %ebx,%ebx
893d(2): jmp 0x7(%rip)
893f(1): nop 
8940(4): mov (%r12),%rdi
8944(3): mov %rbx,%rax
8947(4): add $0x1,%rbx
894b(4): shl/sal $0x4,%rax
894f(3): add %rax,%rdi
8952(5): call 0xfffff9ee(%rip)
8957(5): cmp %rbx,0x10(%r12)
895c(2): jnbe 0xffffffe4(%rip)
895e(5): mov 0x18(%r12),%rdi
8963(5): call 0xffff906d(%rip)
8968(6): cmp $0x0,0x10(%r12)
896e(2): jz 0x55(%rip)
8970(2): xor %ebx,%ebx
8972(2): xor %ebp,%ebp
8974(4): nop 0x0(%rax)
8978(5): mov 0x30(%r12),%rax
897d(3): test %rax,%rax
8980(2): jz 0xc(%rip)
8982(5): mov 0x10(%rax,%rbx,1),%rdi
8987(5): call 0xffff9049(%rip)
898c(5): mov 0x38(%r12),%rax
8991(3): test %rax,%rax
8994(2): jz 0xc(%rip)
8996(5): mov 0x10(%rax,%rbx,1),%rdi
899b(5): call 0xffff9035(%rip)
89a0(5): mov 0x28(%r12),%rax
89a5(3): test %rax,%rax
89a8(2): jz 0xc(%rip)
89aa(5): mov 0x10(%rax,%rbx,1),%rdi
89af(5): call 0xffff9021(%rip)
89b4(4): add $0x1,%rbp
89b8(4): add $0x18,%rbx
89bc(5): cmp %rbp,0x10(%r12)
89c1(2): jnbe 0xffffffb7(%rip)
89c3(5): mov 0x28(%r12),%rdi
89c8(5): call 0xffff9008(%rip)
89cd(5): mov 0x30(%r12),%rdi
89d2(5): call 0xffff8ffe(%rip)
89d7(5): mov 0x38(%r12),%rdi
89dc(5): call 0xffff8ff4(%rip)
89e1(4): mov (%r12),%rdi
89e5(5): call 0xffff8feb(%rip)
89ea(5): mov 0x40(%r12),%rdi
89ef(3): test %rdi,%rdi
89f2(2): jz 0x55(%rip)
89f4(3): xor %r14d,%r14d
89f7(3): xor %r13d,%r13d
89fa(6): nop 0x0(%rax,%rax,1)
8a00(4): lea 0x0(%rdi,%r14,1),%rbp
8a04(5): cmp $0x0,0x0(%rbp)
8a09(2): jle 0x1e(%rip)
8a0b(2): xor %ebx,%ebx
8a0d(3): nop (%rax)
8a10(4): mov 0x10(%rbp),%rax
8a14(4): mov 0x0(%rax,%rbx,8),%rdi
8a18(4): add $0x1,%rbx
8a1c(5): call 0xfffffe64(%rip)
8a21(4): cmp %rbx,0x0(%rbp)
8a25(2): jnle 0xffffffeb(%rip)
8a27(4): mov 0x10(%rbp),%rdi
8a2b(4): add $0x1,%r13
8a2f(4): add $0x18,%r14
8a33(5): call 0xffff8f9d(%rip)
8a38(8): cmp %r13,0x88(%r12)
8a40(5): mov 0x40(%r12),%rdi
8a45(2): jnb 0xffffffbb(%rip)
8a47(5): call 0xffff8f89(%rip)
8a4c(5): mov 0x78(%r12),%rdi
8a51(7): lea 0xe648(%rip),%rax
8a58(3): cmp %rax,%rdi
8a5b(2): jz 0x7(%rip)
8a5d(5): call 0xffff8f73(%rip)
8a62(8): mov 0xe0(%r12),%rdi
8a6a(5): call 0xffff8f66(%rip)
8a6f(1): pop %rbx
8a70(3): mov %r12,%rdi
8a73(1): pop %rbp
8a74(2): pop %r12
8a76(2): pop %r13
8a78(2): pop %r14
8a7a(5): jmp 0xffff8f56(%rip)

"match_ctx_clean" :
8a80(2): push %r14
8a82(2): push %r13
8a84(3): mov %rdi,%r14
8a87(2): push %r12
8a89(1): push %rbp
8a8a(1): push %rbx
8a8b(8): cmp $0x0,0xe8(%rdi)
8a93(6): jle 0x86(%rip)
8a99(3): xor %r13d,%r13d
8a9c(4): nop 0x0(%rax)
8aa0(7): mov 0xf8(%r14),%rax
8aa7(4): mov 0x0(%rax,%r13,8),%r12
8aab(6): cmp $0x0,0x20(%r12)
8ab1(2): jle 0x2c(%rip)
8ab3(2): xor %ebx,%ebx
8ab5(3): nop (%rax)
8ab8(5): mov 0x28(%r12),%rax
8abd(4): mov 0x0(%rax,%rbx,8),%rbp
8ac1(4): add $0x1,%rbx
8ac5(4): mov 0x20(%rbp),%rdi
8ac9(5): call 0xffff8f07(%rip)
8ace(3): mov %rbp,%rdi
8ad1(5): call 0xffff8eff(%rip)
8ad6(5): cmp %rbx,0x20(%r12)
8adb(2): jnle 0xffffffdd(%rip)
8add(5): mov 0x28(%r12),%rdi
8ae2(5): call 0xffff8eee(%rip)
8ae7(5): mov 0x10(%r12),%rax
8aec(3): test %rax,%rax
8aef(2): jz 0x15(%rip)
8af1(4): mov 0x10(%rax),%rdi
8af5(5): call 0xffff8edb(%rip)
8afa(5): mov 0x10(%r12),%rdi
8aff(5): call 0xffff8ed1(%rip)
8b04(3): mov %r12,%rdi
8b07(4): add $0x1,%r13
8b0b(5): call 0xffff8ec5(%rip)
8b10(7): cmp %r13,0xe8(%r14)
8b17(2): jnle 0xffffff89(%rip)
8b19(1): pop %rbx
8b1a(b): mov $0x0,0xe8(%r14)
8b25(b): mov $0x0,0xc8(%r14)
8b30(1): pop %rbp
8b31(2): pop %r12
8b33(2): pop %r13
8b35(2): pop %r14
8b37(1): ret near (%rsp)

"re_string_char_size_at.part.0" :
8b40(4): mov 0x30(%rdi),%rcx
8b44(4): lea 0x1(%rsi),%rax
8b48(3): cmp %rcx,%rax
8b4b(2): jnl 0x3d(%rip)
8b4d(4): mov 0x10(%rdi),%rdx
8b51(8): lea 0x0(,%rax,4),%rdi
8b59(4): cmp $0xff,0x0(%rdx,%rax,4)
8b5d(2): jnz 0x2b(%rip)
8b5f(3): sub %rsi,%rcx
8b62(5): lea 0xfffffffc(%rdx,%rdi,1),%rsi
8b67(5): mov $0x2,%edx
8b6c(2): jmp 0xf(%rip)
8b6e(2): nop 
8b70(4): add $0x1,%rdx
8b74(5): cmp $0xff,0xfffffffc(%rsi,%rdx,4)
8b79(2): jnz 0x14(%rip)
8b7b(3): cmp %rcx,%rdx
8b7e(2): mov %edx,%eax
8b80(2): jnz 0xfffffff0(%rip)
8b82(2): REP ret near (%rsp)
8b84(4): nop 0x0(%rax)
8b88(5): mov $0x1,%eax
8b8d(2): REP ret near (%rsp)

"re_node_set_compare.part.2" :
8b90(4): mov 0x8(%rdi),%rdx
8b94(2): xor %eax,%eax
8b96(4): cmp 0x8(%rsi),%rdx
8b9a(2): jz 0x6(%rip)
8b9c(2): REP ret near (%rsp)
8b9e(2): nop 
8ba0(4): lea 0xffffffff(%rdx),%rax
8ba4(8): lea 0x0(,%rax,8),%rdx
8bac(2): jmp 0x21(%rip)
8bae(2): nop 
8bb0(4): mov 0x10(%rdi),%rcx
8bb4(4): mov 0x0(%rcx,%rdx,1),%r8
8bb8(4): mov 0x10(%rsi),%rcx
8bbc(4): mov 0x0(%rcx,%rdx,1),%rcx
8bc0(4): sub $0x8,%rdx
8bc4(3): cmp %rcx,%r8
8bc7(2): jnz 0x19(%rip)
8bc9(4): sub $0x1,%rax
8bcd(3): test %rax,%rax
8bd0(2): jns 0xffffffe0(%rip)
8bd2(5): mov $0x1,%eax
8bd7(1): ret near (%rsp)
8bd8(8): nop 0x0(%rax,%rax,1)
8be0(2): xor %eax,%eax
8be2(1): ret near (%rsp)

"re_node_set_contains.isra.3" :
8bf0(2): xor %eax,%eax
8bf2(3): test %rdi,%rdi
8bf5(2): jle 0x40(%rip)
8bf7(3): mov (%rsi),%r8
8bfa(4): sub $0x1,%rdi
8bfe(2): xor %esi,%esi
8c00(3): cmp %rdi,%rsi
8c03(2): jnb 0x2a(%rip)
8c05(4): lea 0x0(%rsi,%rdi,1),%rcx
8c09(3): shr $0x1,%rcx
8c0c(4): cmp 0x0(%r8,%rcx,8),%rdx
8c10(2): jle 0x18(%rip)
8c12(2): jmp 0x2e(%rip)
8c14(4): nop 0x0(%rax)
8c18(4): lea 0x0(%rsi,%rcx,1),%rax
8c1c(3): shr $0x1,%rax
8c1f(4): cmp %rdx,0x0(%r8,%rax,8)
8c23(2): jl 0x2d(%rip)
8c25(3): mov %rax,%rcx
8c28(3): cmp %rcx,%rsi
8c2b(2): jb 0xffffffed(%rip)
8c2d(2): xor %eax,%eax
8c2f(4): cmp 0x0(%r8,%rsi,8),%rdx
8c33(2): jz 0x2d(%rip)
8c35(2): REP ret near (%rsp)
8c37(9): nop 0x0(%rax,%rax,1)
8c40(3): mov %rcx,%rax
8c43(3): mov %rdi,%rcx
8c46(a): nop 0x0(%rax,%rax,1)
8c50(4): lea 0x1(%rax),%rsi
8c54(3): mov %rcx,%rdi
8c57(2): jmp 0xffffffa9(%rip)
8c59(7): nop 0x0(%rax)
8c60(4): lea 0x1(%rsi),%rax
8c64(1): ret near (%rsp)

"check_arrival_expand_ecl_sub" :
8c70(2): push %r15
8c72(2): push %r14
8c74(4): lea 0x10(%rsi),%r14
8c78(2): push %r13
8c7a(2): push %r12
8c7c(3): mov %rcx,%r15
8c7f(1): push %rbp
8c80(1): push %rbx
8c81(3): mov %rdi,%r12
8c84(3): mov %rsi,%rbp
8c87(3): mov %rdx,%rbx
8c8a(3): mov %r8d,%r13d
8c8d(4): sub $0x8,%rsp
8c91(4): mov 0x8(%rbp),%rdi
8c95(3): mov %rbx,%rdx
8c98(3): mov %r14,%rsi
8c9b(5): call 0xffffff55(%rip)
8ca0(3): test %rax,%rax
8ca3(2): jnz 0x6d(%rip)
8ca5(3): mov %rbx,%rax
8ca8(4): shl/sal $0x4,%rax
8cac(4): add (%r12),%rax
8cb0(4): movzx 0x8(%rax),%edx
8cb4(3): cmp %r13d,%edx
8cb7(2): jnz 0x7(%rip)
8cb9(3): cmp %r15,(%rax)
8cbc(2): jz 0x3c(%rip)
8cbe(3): mov %rbx,%rsi
8cc1(3): mov %rbp,%rdi
8cc4(5): call 0xffffe9ec(%rip)
8cc9(2): test %al,%al
8ccb(2): jz 0x5d(%rip)
8ccd(4): lea 0x0(%rbx,%rbx,2),%rbx
8cd1(5): mov 0x28(%r12),%rdx
8cd6(4): shl/sal $0x3,%rbx
8cda(3): add %rbx,%rdx
8cdd(4): mov 0x8(%rdx),%rax
8ce1(3): test %rax,%rax
8ce4(2): jz 0x2c(%rip)
8ce6(4): cmp $0x2,%rax
8cea(4): mov 0x10(%rdx),%rdx
8cee(2): jz 0x52(%rip)
8cf0(3): mov (%rdx),%rbx
8cf3(2): jmp 0xffffff9e(%rip)
8cf5(3): nop (%rax)
8cf8(4): cmp $0x9,%r13d
8cfc(2): jnz 0x14(%rip)
8cfe(3): mov %rbx,%rsi
8d01(3): mov %rbp,%rdi
8d04(5): call 0xffffe9ac(%rip)
8d09(2): test %al,%al
8d0b(2): jz 0x1d(%rip)
8d0d(3): nop (%rax)
8d10(2): xor %eax,%eax
8d12(4): add $0x8,%rsp
8d16(1): pop %rbx
8d17(1): pop %rbp
8d18(2): pop %r12
8d1a(2): pop %r13
8d1c(2): pop %r14
8d1e(2): pop %r15
8d20(1): ret near (%rsp)
8d21(7): nop 0x0(%rax)
8d28(4): add $0x8,%rsp
8d2c(5): mov $0xc,%eax
8d31(1): pop %rbx
8d32(1): pop %rbp
8d33(2): pop %r12
8d35(2): pop %r13
8d37(2): pop %r14
8d39(2): pop %r15
8d3b(1): ret near (%rsp)
8d3c(4): nop 0x0(%rax)
8d40(4): mov 0x8(%rdx),%rdx
8d44(3): mov %r13d,%r8d
8d47(3): mov %r15,%rcx
8d4a(3): mov %rbp,%rsi
8d4d(3): mov %r12,%rdi
8d50(5): call 0xffffff20(%rip)
8d55(2): test %eax,%eax
8d57(2): jnz 0xffffffbb(%rip)
8d59(5): mov 0x28(%r12),%rax
8d5e(5): mov 0x10(%rax,%rbx,1),%rdx
8d63(2): jmp 0xffffff8d(%rip)

"re_node_set_remove_at.isra.4.part.5" :
8d70(3): mov (%rdi),%rax
8d73(3): cmp %rdx,%rax
8d76(2): jle 0x2c(%rip)
8d78(4): sub $0x1,%rax
8d7c(3): cmp %rax,%rdx
8d7f(3): mov %rax,(%rdi)
8d82(2): jnl 0x20(%rip)
8d84(3): mov (%rsi),%rax
8d87(9): nop 0x0(%rax,%rax,1)
8d90(5): mov 0x8(%rax,%rdx,8),%rcx
8d95(4): mov %rcx,0x0(%rax,%rdx,8)
8d99(4): add $0x1,%rdx
8d9d(3): cmp (%rdi),%rdx
8da0(2): jl 0xfffffff0(%rip)
8da2(2): REP ret near (%rsp)

"optimize_subexps" :
8db0(4): movzx 0x30(%rsi),%eax
8db4(2): cmp $0x4,%al
8db6(2): jz 0x5a(%rip)
8db8(2): cmp $0x11,%al
8dba(2): jz 0x6(%rip)
8dbc(2): xor %eax,%eax
8dbe(1): ret near (%rsp)
8dbf(1): nop 
8dc0(4): mov 0x8(%rsi),%rax
8dc4(3): test %rax,%rax
8dc7(2): jz 0xfffffff5(%rip)
8dc9(4): cmp $0x11,0x30(%rax)
8dcd(2): jnz 0xffffffef(%rip)
8dcf(4): mov 0x28(%rax),%rcx
8dd3(4): mov 0x8(%rax),%rax
8dd7(3): test %rax,%rax
8dda(4): mov %rax,0x8(%rsi)
8dde(2): jz 0x5(%rip)
8de0(3): mov %rsi,(%rax)
8de3(7): mov 0xe0(%rdi),%rax
8dea(4): mov 0x28(%rsi),%rdx
8dee(4): cmp $0x3f,%rcx
8df2(4): mov 0x0(%rax,%rdx,8),%rdx
8df6(4): mov %rdx,0x0(%rax,%rcx,8)
8dfa(2): jnle 0xffffffc2(%rip)
8dfc(7): mov $0xfffffffe,%rax
8e03(3): rol %cl,%rax
8e06(7): and %rax,0xa0(%rdi)
8e0d(2): jmp 0xffffffaf(%rip)
8e0f(1): nop 
8e10(7): mov 0xe0(%rdi),%rax
8e17(3): test %rax,%rax
8e1a(2): jz 0xffffffa2(%rip)
8e1c(4): movsxd 0x28(%rsi),%rdx
8e20(4): mov 0x0(%rax,%rdx,8),%rcx
8e24(5): mov $0x1,%eax
8e29(2): shl/sal %cl,%eax
8e2b(4): mov %rcx,0x28(%rsi)
8e2f(2): cwde 
8e31(7): or %rax,0xa0(%rdi)
8e38(2): xor %eax,%eax
8e3a(1): ret near (%rsp)

"calc_next" :
8e40(4): movzx 0x30(%rsi),%eax
8e44(4): mov 0x8(%rsi),%rdx
8e48(2): cmp $0xb,%al
8e4a(2): jz 0x46(%rip)
8e4c(2): cmp $0x10,%al
8e4e(2): jz 0x2a(%rip)
8e50(3): test %rdx,%rdx
8e53(2): jz 0xa(%rip)
8e55(4): mov 0x20(%rsi),%rax
8e59(4): mov %rax,0x20(%rdx)
8e5d(4): mov 0x10(%rsi),%rax
8e61(3): test %rax,%rax
8e64(2): jz 0xa(%rip)
8e66(4): mov 0x20(%rsi),%rdx
8e6a(4): mov %rdx,0x20(%rax)
8e6e(2): xor %eax,%eax
8e70(1): ret near (%rsp)
8e71(7): nop 0x0(%rax)
8e78(4): mov 0x10(%rsi),%rax
8e7c(4): mov 0x18(%rax),%rcx
8e80(4): mov %rcx,0x20(%rdx)
8e84(4): mov 0x20(%rsi),%rdx
8e88(4): mov %rdx,0x20(%rax)
8e8c(2): xor %eax,%eax
8e8e(1): ret near (%rsp)
8e8f(1): nop 
8e90(4): mov %rsi,0x20(%rdx)
8e94(2): xor %eax,%eax
8e96(1): ret near (%rsp)

"check_dst_limits.isra.13" :
8ea0(2): push %r15
8ea2(2): push %r14
8ea4(2): push %r13
8ea6(2): push %r12
8ea8(1): push %rbp
8ea9(1): push %rbx
8eaa(2): xor %ebx,%ebx
8eac(4): sub $0x48,%rsp
8eb0(7): mov 0x98(%rdi),%rax
8eb7(7): mov 0xc8(%rdi),%r15
8ebe(8): mov 0x80(%rsp),%r12
8ec6(5): mov %rax,0x8(%rsp)
8ecb(3): mov %r15,%rbp
8ece(3): cmp %rbp,%rbx
8ed1(2): jnl 0x5a(%rip)
8ed3(4): lea 0x0(%rbx,%rbp,1),%rax
8ed7(7): mov 0xd8(%rdi),%r13
8ede(3): mov %rax,%r10
8ee1(4): shr $0x3f,%r10
8ee5(3): add %rax,%r10
8ee8(3): sar $0x1,%r10
8eeb(4): lea 0x0(%r10,%r10,4),%rax
8eef(5): cmp 0x8(%r13,%rax,8),%r8
8ef4(2): jle 0x32(%rip)
8ef6(5): jmp 0x19a(%rip)
8efb(5): nop 0x0(%rax,%rax,1)
8f00(4): lea 0x0(%rbx,%r10,1),%r11
8f04(3): mov %r11,%rax
8f07(4): shr $0x3f,%rax
8f0b(3): add %r11,%rax
8f0e(3): sar $0x1,%rax
8f11(4): lea 0x0(%rax,%rax,4),%r11
8f15(3): mov %rax,%r14
8f18(5): cmp %r8,0x8(%r13,%r11,8)
8f1d(6): jl 0x183(%rip)
8f23(3): mov %rax,%r10
8f26(3): cmp %r10,%rbx
8f29(2): jl 0xffffffd7(%rip)
8f2b(3): cmp %rbx,%r15
8f2e(6): jle 0x1a2(%rip)
8f34(7): mov 0xd8(%rdi),%r11
8f3b(4): lea 0x0(%rbx,%rbx,4),%rax
8f3f(4): lea 0x0(%r11,%rax,8),%rax
8f43(4): cmp 0x8(%rax),%r8
8f47(7): mov $0xffffffff,%rax
8f4e(4): cmovne %rax,%rbx
8f52(3): mov %r15,%rax
8f55(2): xor %ebp,%ebp
8f57(3): cmp %rax,%rbp
8f5a(2): jnl 0x5a(%rip)
8f5c(5): lea 0x0(%rbp,%rax,1),%r11
8f61(3): mov %r11,%r10
8f64(4): shr $0x3f,%r10
8f68(3): add %r11,%r10
8f6b(7): mov 0xd8(%rdi),%r11
8f72(3): sar $0x1,%r10
8f75(4): lea 0x0(%r10,%r10,4),%r13
8f79(5): cmp 0x8(%r11,%r13,8),%r12
8f7e(2): jle 0x31(%rip)
8f80(5): jmp 0x130(%rip)
8f85(3): nop (%rax)
8f88(5): lea 0x0(%rbp,%r10,1),%r13
8f8d(3): mov %r13,%rax
8f90(4): shr $0x3f,%rax
8f94(3): add %r13,%rax
8f97(3): sar $0x1,%rax
8f9a(4): lea 0x0(%rax,%rax,4),%r13
8f9e(3): mov %rax,%r14
8fa1(5): cmp %r12,0x8(%r11,%r13,8)
8fa6(6): jl 0x11a(%rip)
8fac(3): mov %rax,%r10
8faf(3): cmp %r10,%rbp
8fb2(2): jl 0xffffffd6(%rip)
8fb4(3): cmp %rbp,%r15
8fb7(6): jle 0x129(%rip)
8fbd(7): mov 0xd8(%rdi),%r10
8fc4(5): lea 0x0(%rbp,%rbp,4),%rax
8fc9(4): lea 0x0(%r10,%rax,8),%rax
8fcd(4): cmp 0x8(%rax),%r12
8fd1(7): mov $0xffffffff,%rax
8fd8(4): cmovne %rax,%rbp
8fdc(4): cmp $0x0,(%rsi)
8fe0(6): jle 0x122(%rip)
8fe6(5): mov %rbp,0x30(%rsp)
8feb(5): mov %r9,0x20(%rsp)
8ff0(3): mov %rdi,%r13
8ff3(5): mov %r8,0x18(%rsp)
8ff8(5): mov %rcx,0x10(%rsp)
8ffd(3): xor %r14d,%r14d
9000(5): mov %rsi,0x38(%rsp)
9005(5): mov %rbx,0x28(%rsp)
900a(3): mov %rdx,%rbp
900d(3): mov %r12,%r15
9010(4): mov 0x0(%rbp),%rax
9014(7): mov 0xd8(%r13),%rdx
901b(3): mov %r13,%rdi
901e(5): mov 0x28(%rsp),%r9
9023(5): mov 0x18(%rsp),%r8
9028(5): mov 0x10(%rsp),%rcx
902d(4): mov 0x0(%rax,%r14,8),%rsi
9031(4): lea 0x0(%rsi,%rsi,4),%rax
9035(4): lea 0x0(%rdx,%rax,8),%rax
9039(5): mov 0x8(%rsp),%rdx
903e(3): mov (%rax),%rax
9041(4): shl/sal $0x4,%rax
9045(3): add (%rdx),%rax
9048(3): mov (%rax),%r12
904b(3): mov %r12,%rdx
904e(5): call 0xffffe412(%rip)
9053(2): mov %eax,%ebx
9055(4): mov 0x0(%rbp),%rax
9059(5): mov 0x30(%rsp),%r9
905e(5): mov 0x20(%rsp),%rcx
9063(3): mov %r15,%r8
9066(3): mov %r12,%rdx
9069(3): mov %r13,%rdi
906c(4): mov 0x0(%rax,%r14,8),%rsi
9070(5): call 0xffffe3f0(%rip)
9075(2): cmp %eax,%ebx
9077(2): jz 0x79(%rip)
9079(5): mov $0x1,%eax
907e(4): add $0x48,%rsp
9082(1): pop %rbx
9083(1): pop %rbp
9084(2): pop %r12
9086(2): pop %r13
9088(2): pop %r14
908a(2): pop %r15
908c(1): ret near (%rsp)
908d(3): nop (%rax)
9090(3): mov %r10,%r14
9093(3): mov %rbp,%r10
9096(a): nop 0x0(%rax,%rax,1)
90a0(4): lea 0x1(%r14),%rbx
90a4(3): mov %r10,%rbp
90a7(5): jmp 0xfffffe27(%rip)
90ac(4): nop 0x0(%rax)
90b0(3): mov %r10,%r14
90b3(3): mov %rax,%r10
90b6(a): nop 0x0(%rax,%rax,1)
90c0(4): lea 0x1(%r14),%rbp
90c4(3): mov %r10,%rax
90c7(5): jmp 0xfffffe90(%rip)
90cc(4): nop 0x0(%rax)
90d0(7): mov $0xffffffff,%rbx
90d7(5): jmp 0xfffffe7b(%rip)
90dc(4): nop 0x0(%rax)
90e0(7): mov $0xffffffff,%rbp
90e7(5): jmp 0xfffffef5(%rip)
90ec(4): nop 0x0(%rax)
90f0(5): mov 0x38(%rsp),%rax
90f5(4): add $0x1,%r14
90f9(3): cmp (%rax),%r14
90fc(6): jl 0xffffff14(%rip)
9102(2): xor %eax,%eax
9104(5): jmp 0xffffff7a(%rip)

"re_node_set_merge" :
9110(3): test %rsi,%rsi
9113(6): jz 0xf5(%rip)
9119(4): mov 0x8(%rsi),%rdx
911d(3): test %rdx,%rdx
9120(6): jz 0xe8(%rip)
9126(2): push %r12
9128(1): push %rbp
9129(3): mov %rsi,%r12
912c(1): push %rbx
912d(4): mov 0x8(%rdi),%rax
9131(3): mov %rdi,%rbx
9134(3): mov (%rdi),%rsi
9137(4): lea 0x0(%rax,%rdx,2),%rcx
913b(3): cmp %rcx,%rsi
913e(6): jl 0x14a(%rip)
9144(3): test %rax,%rax
9147(6): jz 0x179(%rip)
914d(4): lea 0x0(%rax,%rdx,2),%rbp
9151(4): sub $0x1,%rdx
9155(4): sub $0x1,%rax
9159(3): mov %rdx,%rdi
915c(3): not %rdi
915f(3): test %rdi,%rdi
9162(2): jns 0x3e(%rip)
9164(3): test %rax,%rax
9167(2): js 0x39(%rip)
9169(4): mov 0x10(%rbx),%rcx
916d(5): mov 0x10(%r12),%rsi
9172(4): mov 0x0(%rsi,%rdx,8),%rsi
9176(4): cmp %rsi,0x0(%rcx,%rax,8)
917a(6): jz 0x96(%rip)
9180(6): jnl 0xa8(%rip)
9186(4): sub $0x1,%rdx
918a(4): sub $0x1,%rbp
918e(3): mov %rdx,%rdi
9191(4): mov %rsi,0x0(%rcx,%rbp,8)
9195(3): not %rdi
9198(3): test %rdi,%rdi
919b(2): js 0xffffffc9(%rip)
919d(3): nop (%rax)
91a0(3): test %rdx,%rdx
91a3(6): jns 0x95(%rip)
91a9(4): mov 0x8(%rbx),%rcx
91ad(5): mov 0x8(%r12),%rax
91b2(5): lea 0xffffffff(%rcx,%rax,2),%r8
91b7(3): mov %r8,%rdx
91ba(3): sub %rbp,%rdx
91bd(4): add $0x1,%rdx
91c1(2): jz 0x39(%rip)
91c3(4): mov 0x10(%rbx),%rdi
91c7(4): lea 0xffffffff(%rcx),%rax
91cb(3): add %rdx,%rcx
91ce(4): mov %rcx,0x8(%rbx)
91d2(6): nop 0x0(%rax,%rax,1)
91d8(4): mov 0x0(%rdi,%r8,8),%rsi
91dc(4): mov 0x0(%rdi,%rax,8),%rcx
91e0(4): lea 0x0(%rax,%rdx,1),%r9
91e4(4): lea 0x0(%rdi,%r9,8),%r9
91e8(3): cmp %rcx,%rsi
91eb(2): jle 0x75(%rip)
91ed(4): sub $0x1,%r8
91f1(4): sub $0x1,%rdx
91f5(3): mov %rsi,(%r9)
91f8(2): jnz 0xffffffe0(%rip)
91fa(2): xor %eax,%eax
91fc(1): pop %rbx
91fd(1): pop %rbp
91fe(2): pop %r12
9200(1): ret near (%rsp)
9201(7): nop 0x0(%rax)
9208(2): xor %eax,%eax
920a(1): ret near (%rsp)
920b(5): nop 0x0(%rax,%rax,1)
9210(4): sub $0x1,%rdx
9214(4): sub $0x1,%rax
9218(3): mov %rdx,%rdi
921b(3): not %rdi
921e(5): jmp 0xffffff41(%rip)
9223(5): nop 0x0(%rax,%rax,1)
9228(4): sub $0x1,%rax
922c(5): jmp 0xffffff33(%rip)
9231(7): nop 0x0(%rax)
9238(4): mov 0x10(%rbx),%rax
923c(4): add $0x1,%rdx
9240(5): mov 0x10(%r12),%rsi
9245(3): sub %rdx,%rbp
9248(4): shl/sal $0x3,%rdx
924c(4): lea 0x0(%rax,%rbp,8),%rdi
9250(5): call 0xffff8990(%rip)
9255(5): jmp 0xffffff54(%rip)
925a(6): nop 0x0(%rax,%rax,1)
9260(4): sub $0x1,%rax
9264(3): mov %rcx,(%r9)
9267(6): jns 0xffffff71(%rip)
926d(4): lea 0x0(%rdi,%rbp,8),%rsi
9271(4): shl/sal $0x3,%rdx
9275(5): call 0xffff896b(%rip)
927a(2): xor %eax,%eax
927c(5): jmp 0xffffff80(%rip)
9281(7): nop 0x0(%rax)
9288(3): add %rsi,%rdx
928b(4): mov 0x10(%rdi),%rdi
928f(4): lea 0x0(%rdx,%rdx,1),%rbp
9293(4): shl/sal $0x4,%rdx
9297(3): mov %rdx,%rsi
929a(5): call 0xffff89f6(%rip)
929f(3): test %rax,%rax
92a2(2): jz 0x42(%rip)
92a4(4): mov %rax,0x10(%rbx)
92a8(3): mov %rbp,(%rbx)
92ab(4): mov 0x8(%rbx),%rax
92af(5): mov 0x8(%r12),%rdx
92b4(5): jmp 0xfffffe90(%rip)
92b9(7): nop 0x0(%rax)
92c0(4): mov %rdx,0x8(%rbx)
92c4(5): mov 0x8(%r12),%rax
92c9(4): mov 0x10(%rbx),%rdi
92cd(5): mov 0x10(%r12),%rsi
92d2(8): lea 0x0(,%rax,8),%rdx
92da(5): call 0xffff8906(%rip)
92df(5): jmp 0xffffff1b(%rip)
92e4(5): mov $0xc,%eax
92e9(5): jmp 0xffffff13(%rip)

"calc_eclosure_iter" :
92f0(2): push %r15
92f2(2): push %r14
92f4(3): mov %rsi,%r15
92f7(2): push %r13
92f9(2): push %r12
92fb(1): push %rbp
92fc(1): push %rbx
92fd(4): lea 0x0(%rdx,%rdx,2),%rbx
9301(3): mov %rdx,%rbp
9304(4): sub $0x68,%rsp
9308(4): mov 0x28(%rsi),%r12
930c(4): shl/sal $0x3,%rbx
9310(9): mov $0x28,%rax
9319(5): mov %rax,0x58(%rsp)
931e(2): xor %eax,%eax
9320(5): mov %rdi,0x10(%rsp)
9325(4): mov %ecx,0x1c(%rsp)
9329(3): add %rbx,%r12
932c(5): mov 0x8(%r12),%rax
9331(9): mov $0x0,0x28(%rsp)
933a(4): lea 0x1(%rax),%rdi
933e(5): mov %rdi,0x20(%rsp)
9343(4): shl/sal $0x3,%rdi
9347(5): call 0xffff88d9(%rip)
934c(3): test %rax,%rax
934f(5): mov %rax,0x30(%rsp)
9354(6): jz 0x23c(%rip)
935a(4): mov 0x30(%r15),%rax
935e(3): mov (%r15),%rdx
9361(3): mov %rbp,%r13
9364(4): shl/sal $0x4,%r13
9368(9): mov $0xffffffff,0x8(%rax,%rbx,1)
9371(4): lea 0x0(%rdx,%r13,1),%rax
9375(4): mov 0x8(%rax),%r8d
9379(7): test $0x3ff00,%r8d
9380(6): jnz 0x1a0(%rip)
9386(4): test $0x8,0x8(%rax)
938a(6): jz 0xc6(%rip)
9390(4): mov 0x28(%r15),%rsi
9394(4): lea 0x0(%rsi,%rbx,1),%rax
9398(5): cmp $0x0,0x8(%rax)
939d(6): jle 0xb3(%rip)
93a3(5): lea 0x20(%rsp),%rdx
93a8(5): mov $0x0,0x1b(%rsp)
93ad(3): xor %r14d,%r14d
93b0(5): lea 0x40(%rsp),%r12
93b5(5): mov %rdx,0x8(%rsp)
93ba(2): jmp 0x1c(%rip)
93bc(4): nop 0x0(%rax)
93c0(4): mov 0x28(%r15),%rsi
93c4(4): add $0x1,%r14
93c8(4): lea 0x0(%rsi,%rbx,1),%rax
93cc(4): cmp %r14,0x8(%rax)
93d0(6): jle 0x107(%rip)
93d6(4): mov 0x10(%rax),%rax
93da(4): mov 0x0(%rax,%r14,8),%rdx
93de(4): mov 0x30(%r15),%rax
93e2(4): lea 0x0(%rdx,%rdx,2),%r8
93e6(8): lea 0x0(,%r8,8),%r13
93ee(3): add %r13,%rax
93f1(4): mov 0x8(%rax),%rcx
93f5(4): cmp $0xffffffff,%rcx
93f9(6): jz 0xc7(%rip)
93ff(3): test %rcx,%rcx
9402(6): jz 0x176(%rip)
9408(4): movdqu (%rax),%xmm0
940c(5): movaps %xmm0,0x40(%rsp)
9411(4): mov 0x10(%rax),%rax
9415(5): mov %rax,0x50(%rsp)
941a(5): mov 0x8(%rsp),%rdi
941f(3): mov %r12,%rsi
9422(5): call 0xfffffcee(%rip)
9427(2): test %eax,%eax
9429(2): jnz 0x6d(%rip)
942b(4): mov 0x30(%r15),%rax
942f(6): cmp $0x0,0x8(%rax,%r13,1)
9435(2): jnz 0xffffff8b(%rip)
9437(5): mov 0x50(%rsp),%rdi
943c(5): call 0xffff8594(%rip)
9441(5): mov $0x1,0x1b(%rsp)
9446(5): jmp 0xffffff7a(%rip)
944b(5): nop 0x0(%rax,%rax,1)
9450(5): lea 0x20(%rsp),%rdi
9455(3): mov %rbp,%rsi
9458(5): call 0xffffe258(%rip)
945d(2): test %al,%al
945f(6): jz 0x131(%rip)
9465(4): mov 0x30(%r15),%rax
9469(6): movdqa 0x20(%rsp),%xmm0
946f(4): movups %xmm0,0x0(%rax,%rbx,1)
9473(5): mov 0x30(%rsp),%rdx
9478(5): mov %rdx,0x10(%rax,%rbx,1)
947d(5): mov 0x10(%rsp),%rbx
9482(5): mov 0x30(%rsp),%rax
9487(6): movdqa 0x20(%rsp),%xmm0
948d(3): movaps %xmm0,(%rbx)
9490(4): mov %rax,0x10(%rbx)
9494(2): xor %eax,%eax
9496(5): mov 0x58(%rsp),%rsi
949b(9): xor $0x28,%rsi
94a4(6): jnz 0xf6(%rip)
94aa(4): add $0x68,%rsp
94ae(1): pop %rbx
94af(1): pop %rbp
94b0(2): pop %r12
94b2(2): pop %r13
94b4(2): pop %r14
94b6(2): pop %r15
94b8(1): ret near (%rsp)
94b9(7): nop 0x0(%rax)
94c0(4): lea 0x0(%rsi,%rbx,1),%rax
94c4(4): add $0x1,%r14
94c8(5): mov $0x1,0x1b(%rsp)
94cd(4): cmp %r14,0x8(%rax)
94d1(6): jnle 0xffffff05(%rip)
94d7(5): lea 0x20(%rsp),%rdi
94dc(3): mov %rbp,%rsi
94df(5): call 0xffffe1d1(%rip)
94e4(2): test %al,%al
94e6(6): jz 0xaa(%rip)
94ec(5): cmp $0x1,0x1c(%rsp)
94f1(4): mov 0x30(%r15),%rax
94f5(4): lea 0x0(%rax,%rbx,1),%rdx
94f9(6): jz 0xffffff70(%rip)
94ff(5): cmp $0x0,0x1b(%rsp)
9504(6): jz 0xffffff65(%rip)
950a(8): mov $0x0,0x8(%rdx)
9512(5): jmp 0xffffff6b(%rip)
9517(9): nop 0x0(%rax,%rax,1)
9520(6): cmp $0x0,0x8(%r12)
9526(6): jz 0xffffff2a(%rip)
952c(5): mov 0x10(%r12),%rcx
9531(3): mov (%rcx),%rcx
9534(4): shl/sal $0x4,%rcx
9538(5): test $0x4,0xa(%rdx,%rcx,1)
953d(6): jnz 0xfffffe49(%rip)
9543(4): shr $0x8,%r8d
9547(3): mov %rbp,%rcx
954a(3): mov %rbp,%rdx
954d(7): and $0x3ff,%r8d
9554(3): mov %rbp,%rsi
9557(3): mov %r15,%rdi
955a(5): call 0xfffff0a6(%rip)
955f(2): test %eax,%eax
9561(6): jnz 0xffffff35(%rip)
9567(3): mov (%r15),%rax
956a(3): add %r13,%rax
956d(5): jmp 0xfffffe19(%rip)
9572(6): nop 0x0(%rax,%rax,1)
9578(3): mov %r15,%rsi
957b(3): mov %r12,%rdi
957e(5): call 0xfffffd72(%rip)
9583(2): test %eax,%eax
9585(6): jz 0xfffffe95(%rip)
958b(5): jmp 0xffffff0b(%rip)
9590(5): mov $0xc,%eax
9595(5): jmp 0xffffff01(%rip)
959a(5): call 0xffff8536(%rip)

"check_arrival_expand_ecl" :
95a0(2): push %r15
95a2(2): push %r14
95a4(3): mov %rdi,%r14
95a7(2): push %r13
95a9(2): push %r12
95ab(3): mov %rsi,%r15
95ae(1): push %rbp
95af(1): push %rbx
95b0(3): mov %rdx,%rbp
95b3(2): mov %ecx,%ebx
95b5(4): sub $0x38,%rsp
95b9(4): mov 0x8(%rsi),%r12
95bd(9): mov $0x28,%rax
95c6(5): mov %rax,0x28(%rsp)
95cb(2): xor %eax,%eax
95cd(9): mov $0x0,0x18(%rsp)
95d6(8): lea 0x0(,%r12,8),%rdi
95de(5): mov %r12,0x10(%rsp)
95e3(5): call 0xffff863d(%rip)
95e8(3): test %rax,%rax
95eb(5): mov %rax,0x20(%rsp)
95f0(6): jz 0xfd(%rip)
95f6(3): test %r12,%r12
95f9(6): jle 0x92(%rip)
95ff(5): lea 0x10(%rsp),%r12
9604(3): xor %r13d,%r13d
9607(9): nop 0x0(%rax,%rax,1)
9610(4): mov 0x10(%r15),%rax
9614(4): mov 0x0(%rax,%r13,8),%rdx
9618(4): mov 0x30(%r14),%rax
961c(4): lea 0x0(%rdx,%rdx,2),%rcx
9620(4): lea 0x0(%rax,%rcx,8),%rsi
9624(4): mov 0x8(%rsi),%r8
9628(3): test %r8,%r8
962b(6): jle 0x85(%rip)
9631(4): mov 0x10(%rsi),%r10
9635(3): mov (%r14),%r9
9638(2): xor %ecx,%ecx
963a(2): jmp 0xf(%rip)
963c(4): nop 0x0(%rax)
9640(4): add $0x1,%rcx
9644(3): cmp %rcx,%r8
9647(2): jz 0x69(%rip)
9649(4): mov 0x0(%r10,%rcx,8),%rdi
964d(3): mov %rdi,%rax
9650(4): shl/sal $0x4,%rax
9654(3): add %r9,%rax
9657(5): movzx 0x8(%rax),%r11d
965c(3): cmp %r11d,%ebx
965f(2): jnz 0xffffffe1(%rip)
9661(3): cmp (%rax),%rbp
9664(2): jnz 0xffffffdc(%rip)
9666(4): cmp $0xffffffff,%rdi
966a(2): jz 0x46(%rip)
966c(3): mov %ebx,%r8d
966f(3): mov %rbp,%rcx
9672(3): mov %r12,%rsi
9675(3): mov %r14,%rdi
9678(5): call 0xfffff5f8(%rip)
967d(2): test %eax,%eax
967f(2): jnz 0x3d(%rip)
9681(4): add $0x1,%r13
9685(4): cmp %r13,0x8(%r15)
9689(2): jnle 0xffffff87(%rip)
968b(4): mov 0x10(%r15),%rdi
968f(5): call 0xffff8341(%rip)
9694(5): mov 0x20(%rsp),%rax
9699(6): movdqa 0x10(%rsp),%xmm0
969f(4): mov %rax,0x10(%r15)
96a3(2): xor %eax,%eax
96a5(4): movaps %xmm0,(%r15)
96a9(2): jmp 0x25(%rip)
96ab(5): nop 0x0(%rax,%rax,1)
96b0(3): mov %r12,%rdi
96b3(5): call 0xfffffa5d(%rip)
96b8(2): test %eax,%eax
96ba(2): jz 0xffffffc7(%rip)
96bc(5): mov 0x20(%rsp),%rdi
96c1(4): mov %eax,0xc(%rsp)
96c5(5): call 0xffff830b(%rip)
96ca(4): mov 0xc(%rsp),%eax
96ce(5): mov 0x28(%rsp),%rdx
96d3(9): xor $0x28,%rdx
96dc(2): jnz 0x18(%rip)
96de(4): add $0x38,%rsp
96e2(1): pop %rbx
96e3(1): pop %rbp
96e4(2): pop %r12
96e6(2): pop %r13
96e8(2): pop %r14
96ea(2): pop %r15
96ec(1): ret near (%rsp)
96ed(5): mov $0xc,%eax
96f2(2): jmp 0xffffffdc(%rip)
96f4(5): call 0xffff83dc(%rip)

"re_node_set_add_intersect" :
9700(4): mov 0x8(%rsi),%r9
9704(2): xor %eax,%eax
9706(3): test %r9,%r9
9709(6): jz 0xbf(%rip)
970f(4): mov 0x8(%rdx),%r11
9713(3): test %r11,%r11
9716(6): jz 0xb2(%rip)
971c(2): push %r13
971e(2): push %r12
9720(4): lea 0x0(%r9,%r11,1),%rax
9724(1): push %rbp
9725(1): push %rbx
9726(3): mov %rdx,%r12
9729(3): mov %rdi,%rbx
972c(3): mov %rsi,%rbp
972f(4): sub $0x8,%rsp
9733(4): mov 0x8(%rdi),%rcx
9737(3): mov (%rdi),%r13
973a(4): mov 0x10(%rdi),%rdi
973e(4): lea 0x0(%rax,%rcx,1),%rdx
9742(3): cmp %r13,%rdx
9745(6): jnle 0x12b(%rip)
974b(4): lea 0x0(%rcx,%r9,1),%rsi
974f(4): mov 0x10(%rbp),%r13
9753(5): mov 0x10(%r12),%rdx
9758(4): sub $0x1,%r9
975c(4): sub $0x1,%rcx
9760(3): add %r11,%rsi
9763(4): sub $0x1,%r11
9767(5): mov 0x0(%r13,%r9,8),%rax
976c(4): mov 0x0(%rdx,%r11,8),%r8
9770(3): cmp %r8,%rax
9773(2): jz 0x13(%rip)
9775(2): jnl 0x5b(%rip)
9777(4): sub $0x1,%r11
977b(2): js 0x65(%rip)
977d(4): mov 0x0(%rdx,%r11,8),%r8
9781(3): cmp %r8,%rax
9784(2): jnz 0xfffffff1(%rip)
9786(3): test %rcx,%rcx
9789(2): jns 0x11(%rip)
978b(2): jmp 0x1d(%rip)
978d(3): nop (%rax)
9790(4): sub $0x1,%rcx
9794(4): cmp $0xffffffff,%rcx
9798(2): jz 0x10(%rip)
979a(4): mov 0x0(%rdi,%rcx,8),%r10
979e(3): cmp %r8,%r10
97a1(2): jnle 0xffffffef(%rip)
97a3(3): cmp %r8,%r10
97a6(2): jz 0xa(%rip)
97a8(4): sub $0x1,%rsi
97ac(4): mov %r8,0x0(%rdi,%rsi,8)
97b0(4): sub $0x1,%r9
97b4(2): js 0x2c(%rip)
97b6(4): sub $0x1,%r11
97ba(2): js 0x26(%rip)
97bc(5): mov 0x0(%r13,%r9,8),%rax
97c1(2): jmp 0xffffffbc(%rip)
97c3(5): nop 0x0(%rax,%rax,1)
97c8(2): REP ret near (%rsp)
97ca(6): nop 0x0(%rax,%rax,1)
97d0(4): sub $0x1,%r9
97d4(2): js 0xc(%rip)
97d6(5): mov 0x0(%r13,%r9,8),%rax
97db(2): jmp 0xffffff95(%rip)
97dd(3): nop (%rax)
97e0(4): mov 0x8(%rbx),%rcx
97e4(4): mov 0x8(%rbp),%rdx
97e8(3): add %rcx,%rdx
97eb(5): add 0x8(%r12),%rdx
97f0(4): lea 0xffffffff(%rcx),%rax
97f4(4): lea 0xffffffff(%rdx),%r9
97f8(3): sub %rsi,%rdx
97fb(3): add %rdx,%rcx
97fe(3): test %rdx,%rdx
9801(4): mov %rcx,0x8(%rbx)
9805(2): jle 0x48(%rip)
9807(3): test %rax,%rax
980a(2): js 0x43(%rip)
980c(4): nop 0x0(%rax)
9810(4): mov 0x0(%rdi,%r9,8),%r8
9814(4): mov 0x0(%rdi,%rax,8),%rcx
9818(4): lea 0x0(%rax,%rdx,1),%r10
981c(4): lea 0x0(%rdi,%r10,8),%r10
9820(3): cmp %rcx,%r8
9823(2): jle 0x1d(%rip)
9825(4): sub $0x1,%r9
9829(4): sub $0x1,%rdx
982d(3): mov %r8,(%r10)
9830(2): jnz 0xffffffe0(%rip)
9832(2): xor %edx,%edx
9834(2): jmp 0x1d(%rip)
9836(a): nop 0x0(%rax,%rax,1)
9840(4): sub $0x1,%rax
9844(3): mov %rcx,(%r10)
9847(4): cmp $0xffffffff,%rax
984b(2): jnz 0xffffffc5(%rip)
984d(4): shl/sal $0x3,%rdx
9851(4): lea 0x0(%rdi,%rsi,8),%rsi
9855(5): call 0xffff838b(%rip)
985a(2): xor %eax,%eax
985c(4): add $0x8,%rsp
9860(1): pop %rbx
9861(1): pop %rbp
9862(2): pop %r12
9864(2): pop %r13
9866(1): ret near (%rsp)
9867(9): nop 0x0(%rax,%rax,1)
9870(3): add %rax,%r13
9873(8): lea 0x0(,%r13,8),%rsi
987b(5): call 0xffff8415(%rip)
9880(3): test %rax,%rax
9883(3): mov %rax,%rdi
9886(2): jz 0x1b(%rip)
9888(4): mov %rax,0x10(%rbx)
988c(3): mov %r13,(%rbx)
988f(4): mov 0x8(%rbx),%rcx
9893(4): mov 0x8(%rbp),%r9
9897(5): mov 0x8(%r12),%r11
989c(5): jmp 0xfffffeaf(%rip)
98a1(5): mov $0xc,%eax
98a6(2): jmp 0xffffffb6(%rip)

"create_token_tree.isra.16" :
98b0(1): push %rbx
98b1(3): mov %rdi,%rbx
98b4(4): sub $0x20,%rsp
98b8(2): mov (%rsi),%eax
98ba(3): cmp $0xf,%eax
98bd(2): jz 0x7b(%rip)
98bf(3): movsxd %eax,%r9
98c2(4): lea 0x1(%rax),%r10d
98c6(3): mov (%rdi),%rdi
98c9(3): mov %r9,%rax
98cc(4): shl/sal $0x6,%rax
98d0(4): add $0x8,%rax
98d4(4): shl/sal $0x6,%r9
98d8(3): mov %r10d,(%rsi)
98db(3): add %rdi,%rax
98de(4): lea 0x0(%rdi,%r9,1),%rsi
98e2(8): mov $0x0,0x8(%rsi)
98ea(4): mov %rdx,0x10(%rsi)
98ee(4): lea 0x20(%rsi),%rdi
98f2(4): mov %rcx,0x18(%rsi)
98f6(5): movdqu (%r8),%xmm0
98fb(4): movups %xmm0,0x30(%rsi)
98ff(4): and $0xf3,0x1a(%rdi)
9903(3): test %rdx,%rdx
9906(8): mov $0x0,0x20(%rsi)
990e(8): mov $0x0,0x28(%rsi)
9916(8): mov $0xffffffff,0x40(%rsi)
991e(2): jz 0x5(%rip)
9920(3): mov %rax,(%rdx)
9923(3): test %rcx,%rcx
9926(2): jz 0x5(%rip)
9928(3): mov %rax,(%rcx)
992b(4): add $0x20,%rsp
992f(1): pop %rbx
9930(1): ret near (%rsp)
9931(7): nop 0x0(%rax)
9938(5): mov $0x3c8,%edi
993d(5): mov %r8,0x18(%rsp)
9942(5): mov %rcx,0x10(%rsp)
9947(5): mov %rdx,0x8(%rsp)
994c(4): mov %rsi,(%rsp)
9950(5): call 0xffff82d0(%rip)
9955(3): test %rax,%rax
9958(3): mov %rax,%rdi
995b(2): jz 0x31(%rip)
995d(3): mov (%rbx),%rax
9960(6): mov $0x1,%r10d
9966(3): mov %rdi,(%rbx)
9969(3): xor %r9d,%r9d
996c(5): mov 0x18(%rsp),%r8
9971(5): mov 0x10(%rsp),%rcx
9976(5): mov 0x8(%rsp),%rdx
997b(4): mov (%rsp),%rsi
997f(3): mov %rax,(%rdi)
9982(5): mov $0x8,%eax
9987(5): jmp 0xffffff4d(%rip)
998c(2): xor %eax,%eax
998e(2): jmp 0xffffff9d(%rip)

"duplicate_tree" :
9990(2): push %r14
9992(2): push %r13
9994(4): lea 0x70(%rsi),%r13
9998(2): push %r12
999a(1): push %rbp
999b(7): lea 0x80(%rsi),%r12
99a2(1): push %rbx
99a3(3): mov %rdi,%rbx
99a6(4): sub $0x10,%rsp
99aa(3): mov (%rdi),%rbp
99ad(9): mov $0x28,%rax
99b6(5): mov %rax,0x8(%rsp)
99bb(2): xor %eax,%eax
99bd(3): mov %rsp,%r14
99c0(4): lea 0x28(%rbx),%r8
99c4(2): xor %ecx,%ecx
99c6(2): xor %edx,%edx
99c8(3): mov %r12,%rsi
99cb(3): mov %r13,%rdi
99ce(5): call 0xfffffee2(%rip)
99d3(3): test %rax,%rax
99d6(3): mov %rax,(%r14)
99d9(2): jz 0x53(%rip)
99db(3): mov %rbp,(%rax)
99de(3): mov (%r14),%rbp
99e1(4): or $0x4,0x32(%rbp)
99e5(4): mov 0x8(%rbx),%rax
99e9(3): test %rax,%rax
99ec(2): jz 0x14(%rip)
99ee(4): lea 0x8(%rbp),%r14
99f2(3): mov %rax,%rbx
99f5(2): jmp 0xffffffcb(%rip)
99f7(9): nop 0x0(%rax,%rax,1)
9a00(2): xor %edx,%edx
9a02(2): jmp 0x9(%rip)
9a04(4): nop 0x0(%rax)
9a08(3): mov %rax,%rbx
9a0b(4): mov 0x10(%rbx),%rax
9a0f(3): test %rax,%rax
9a12(2): jz 0x7(%rip)
9a14(3): cmp %rdx,%rax
9a17(2): jnz 0x39(%rip)
9a19(3): mov (%rbx),%rax
9a1c(4): mov 0x0(%rbp),%rbp
9a20(3): mov %rbx,%rdx
9a23(3): test %rax,%rax
9a26(2): jnz 0xffffffe2(%rip)
9a28(4): mov (%rsp),%rax
9a2c(5): mov 0x8(%rsp),%rcx
9a31(9): xor $0x28,%rcx
9a3a(2): jnz 0x22(%rip)
9a3c(4): add $0x10,%rsp
9a40(1): pop %rbx
9a41(1): pop %rbp
9a42(2): pop %r12
9a44(2): pop %r13
9a46(2): pop %r14
9a48(1): ret near (%rsp)
9a49(7): nop 0x0(%rax)
9a50(4): lea 0x10(%rbp),%r14
9a54(3): mov %rax,%rbx
9a57(5): jmp 0xffffff69(%rip)
9a5c(5): call 0xffff8074(%rip)

"lower_subexp" :
9a70(2): push %r15
9a72(2): push %r14
9a74(2): push %r13
9a76(2): push %r12
9a78(3): mov %rdx,%r13
9a7b(1): push %rbp
9a7c(1): push %rbx
9a7d(4): sub $0x48,%rsp
9a81(3): mov (%rsi),%rbx
9a84(4): mov 0x8(%rdx),%rbp
9a88(9): mov $0x28,%rax
9a91(5): mov %rax,0x38(%rsp)
9a96(2): xor %eax,%eax
9a98(4): test $0x10,0x38(%rsi)
9a9c(5): mov %rdi,0x18(%rsp)
9aa1(6): jz 0x177(%rip)
9aa7(3): test %rbp,%rbp
9aaa(2): jz 0x76(%rip)
9aac(4): mov 0x28(%rdx),%rax
9ab0(4): cmp $0x3f,%rax
9ab4(6): jnle 0x139(%rip)
9aba(7): mov 0xa0(%rbx),%rdx
9ac1(4): bt %rax,%rdx
9ac5(6): jnb 0x128(%rip)
9acb(4): lea 0x70(%rbx),%rax
9acf(5): lea 0x20(%rsp),%r14
9ad4(4): sub $0xffffff80,%rbx
9ad8(2): xor %ecx,%ecx
9ada(2): xor %edx,%edx
9adc(3): mov %rbx,%rsi
9adf(3): mov %rax,%r15
9ae2(3): mov %r14,%r8
9ae5(3): mov %rax,%rdi
9ae8(5): mov $0x8,0x28(%rsp)
9aed(5): mov %rax,0x8(%rsp)
9af2(5): call 0xfffffdbe(%rip)
9af7(3): mov %r15,%rdi
9afa(3): mov %r14,%r8
9afd(2): xor %ecx,%ecx
9aff(2): xor %edx,%edx
9b01(3): mov %rbx,%rsi
9b04(3): mov %rax,%r12
9b07(5): mov $0x9,0x28(%rsp)
9b0c(5): call 0xfffffda4(%rip)
9b11(3): mov %rax,%r15
9b14(5): jmp 0x159(%rip)
9b19(7): nop 0x0(%rax)
9b20(4): lea 0x70(%rbx),%rax
9b24(5): lea 0x20(%rsp),%r14
9b29(4): sub $0xffffff80,%rbx
9b2d(2): xor %ecx,%ecx
9b2f(2): xor %edx,%edx
9b31(3): mov %rbx,%rsi
9b34(3): mov %rax,%r15
9b37(3): mov %r14,%r8
9b3a(3): mov %rax,%rdi
9b3d(5): mov $0x8,0x28(%rsp)
9b42(5): mov %rax,0x8(%rsp)
9b47(5): call 0xfffffd69(%rip)
9b4c(3): mov %r15,%rdi
9b4f(3): mov %r14,%r8
9b52(2): xor %ecx,%ecx
9b54(2): xor %edx,%edx
9b56(3): mov %rbx,%rsi
9b59(3): mov %rax,%r12
9b5c(5): mov $0x9,0x28(%rsp)
9b61(5): call 0xfffffd4f(%rip)
9b66(3): mov %rax,%r11
9b69(3): mov %rax,%r15
9b6c(5): mov 0x8(%rsp),%rdi
9b71(3): mov %r14,%r8
9b74(3): mov %r11,%rcx
9b77(3): mov %r12,%rdx
9b7a(3): mov %rbx,%rsi
9b7d(5): mov $0x10,0x28(%rsp)
9b82(5): mov %r11,0x10(%rsp)
9b87(5): call 0xfffffd29(%rip)
9b8c(3): test %rax,%rax
9b8f(3): mov %rax,%rbp
9b92(6): jz 0xfe(%rip)
9b98(5): mov 0x10(%rsp),%r11
9b9d(3): test %r11,%r11
9ba0(6): jz 0xf0(%rip)
9ba6(3): test %r12,%r12
9ba9(6): jz 0xe7(%rip)
9baf(3): test %r15,%r15
9bb2(6): jz 0xde(%rip)
9bb8(4): mov 0x28(%r13),%rax
9bbc(4): mov %rax,0x28(%r15)
9bc0(5): mov %rax,0x28(%r12)
9bc5(5): movzx 0x32(%r13),%eax
9bca(5): movzx 0x32(%r15),%edx
9bcf(3): and $0x8,%eax
9bd2(3): and $0xf7,%edx
9bd5(2): mov %eax,%ecx
9bd7(2): or %ecx,%edx
9bd9(4): mov %dl,0x32(%r15)
9bdd(6): movzx 0x32(%r12),%eax
9be3(3): and $0xf7,%eax
9be6(2): or %ecx,%eax
9be8(5): mov %al,0x32(%r12)
9bed(5): mov 0x38(%rsp),%rdi
9bf2(9): xor $0x28,%rdi
9bfb(3): mov %rbp,%rax
9bfe(6): jnz 0xa4(%rip)
9c04(4): add $0x48,%rsp
9c08(1): pop %rbx
9c09(1): pop %rbp
9c0a(2): pop %r12
9c0c(2): pop %r13
9c0e(2): pop %r14
9c10(2): pop %r15
9c12(1): ret near (%rsp)
9c13(5): nop 0x0(%rax,%rax,1)
9c18(4): lea 0x70(%rbx),%rax
9c1c(5): lea 0x20(%rsp),%r14
9c21(4): sub $0xffffff80,%rbx
9c25(2): xor %ecx,%ecx
9c27(2): xor %edx,%edx
9c29(3): mov %rbx,%rsi
9c2c(3): mov %rax,%r15
9c2f(3): mov %r14,%r8
9c32(3): mov %rax,%rdi
9c35(5): mov $0x8,0x28(%rsp)
9c3a(5): mov %rax,0x8(%rsp)
9c3f(5): call 0xfffffc71(%rip)
9c44(2): xor %ecx,%ecx
9c46(2): xor %edx,%edx
9c48(3): mov %r15,%rdi
9c4b(3): mov %r14,%r8
9c4e(3): mov %rbx,%rsi
9c51(3): mov %rax,%r12
9c54(5): mov $0x9,0x28(%rsp)
9c59(5): call 0xfffffc57(%rip)
9c5e(3): test %rbp,%rbp
9c61(3): mov %rax,%r15
9c64(3): mov %rax,%r11
9c67(6): jz 0xffffff05(%rip)
9c6d(5): mov 0x8(%rsp),%rdi
9c72(3): mov %r14,%r8
9c75(3): mov %r15,%rcx
9c78(3): mov %rbp,%rdx
9c7b(3): mov %rbx,%rsi
9c7e(5): mov $0x10,0x28(%rsp)
9c83(5): call 0xfffffc2d(%rip)
9c88(3): mov %rax,%r11
9c8b(5): jmp 0xfffffee1(%rip)
9c90(5): mov 0x18(%rsp),%rax
9c95(2): xor %ebp,%ebp
9c97(6): mov $0xc,(%rax)
9c9d(5): jmp 0xffffff50(%rip)
9ca2(5): call 0xffff7e2e(%rip)

"lower_subexps" :
9cb0(1): push %rbp
9cb1(1): push %rbx
9cb2(3): mov %rdi,%rbp
9cb5(3): mov %rsi,%rbx
9cb8(4): sub $0x18,%rsp
9cbc(4): mov 0x8(%rsi),%rdx
9cc0(9): mov $0x28,%rax
9cc9(5): mov %rax,0x8(%rsp)
9cce(2): xor %eax,%eax
9cd0(8): mov $0x0,0x4(%rsp)
9cd8(3): test %rdx,%rdx
9cdb(2): jz 0x8(%rip)
9cdd(4): cmp $0x11,0x30(%rdx)
9ce1(2): jz 0x4f(%rip)
9ce3(4): mov 0x10(%rbx),%rdx
9ce7(3): test %rdx,%rdx
9cea(2): jz 0x8(%rip)
9cec(4): cmp $0x11,0x30(%rdx)
9cf0(2): jz 0x20(%rip)
9cf2(5): mov 0x8(%rsp),%rcx
9cf7(9): xor $0x28,%rcx
9d00(4): mov 0x4(%rsp),%eax
9d04(2): jnz 0x47(%rip)
9d06(4): add $0x18,%rsp
9d0a(1): pop %rbx
9d0b(1): pop %rbp
9d0c(1): ret near (%rsp)
9d0d(3): nop (%rax)
9d10(5): lea 0x4(%rsp),%rdi
9d15(3): mov %rbp,%rsi
9d18(5): call 0xfffffd58(%rip)
9d1d(3): test %rax,%rax
9d20(4): mov %rax,0x10(%rbx)
9d24(2): jz 0xffffffce(%rip)
9d26(3): mov %rbx,(%rax)
9d29(2): jmp 0xffffffc9(%rip)
9d2b(5): nop 0x0(%rax,%rax,1)
9d30(5): lea 0x4(%rsp),%rdi
9d35(3): mov %rbp,%rsi
9d38(5): call 0xfffffd38(%rip)
9d3d(3): test %rax,%rax
9d40(4): mov %rax,0x8(%rbx)
9d44(2): jz 0xffffff9f(%rip)
9d46(3): mov %rbx,(%rax)
9d49(2): jmp 0xffffff9a(%rip)
9d4b(5): call 0xffff7d85(%rip)

"re_node_set_init_copy" :
9d50(2): push %r12
9d52(1): push %rbp
9d53(1): push %rbx
9d54(4): mov 0x8(%rsi),%rax
9d58(4): mov %rax,0x8(%rdi)
9d5c(4): mov 0x8(%rsi),%r12
9d60(3): test %r12,%r12
9d63(2): jle 0x3d(%rip)
9d65(3): mov %rdi,%rbx
9d68(3): mov %rax,(%rdi)
9d6b(8): lea 0x0(,%rax,8),%rdi
9d73(3): mov %rsi,%rbp
9d76(5): call 0xffff7eaa(%rip)
9d7b(3): test %rax,%rax
9d7e(4): mov %rax,0x10(%rbx)
9d82(2): jz 0x3e(%rip)
9d84(4): mov 0x10(%rbp),%rsi
9d88(8): lea 0x0(,%r12,8),%rdx
9d90(3): mov %rax,%rdi
9d93(5): call 0xffff7e4d(%rip)
9d98(2): xor %eax,%eax
9d9a(1): pop %rbx
9d9b(1): pop %rbp
9d9c(2): pop %r12
9d9e(1): ret near (%rsp)
9d9f(1): nop 
9da0(4): pxor %xmm0,%xmm0
9da4(8): mov $0x0,0x10(%rdi)
9dac(2): xor %eax,%eax
9dae(3): movups %xmm0,(%rdi)
9db1(1): pop %rbx
9db2(1): pop %rbp
9db3(2): pop %r12
9db5(1): ret near (%rsp)
9db6(a): nop 0x0(%rax,%rax,1)
9dc0(8): mov $0x0,0x8(%rbx)
9dc8(7): mov $0x0,(%rbx)
9dcf(5): mov $0xc,%eax
9dd4(2): jmp 0xffffffc6(%rip)

"re_node_set_init_union" :
9de0(3): test %rsi,%rsi
9de3(2): push %r14
9de5(2): push %r13
9de7(2): push %r12
9de9(1): push %rbp
9dea(1): push %rbx
9deb(6): jz 0xaa(%rip)
9df1(3): test %rdx,%rdx
9df4(4): mov 0x8(%rsi),%r13
9df8(6): jz 0x98(%rip)
9dfe(3): test %r13,%r13
9e01(6): jle 0x8f(%rip)
9e07(4): mov 0x8(%rdx),%r14
9e0b(3): test %r14,%r14
9e0e(6): jle 0xb5(%rip)
9e14(3): mov %rdi,%r12
9e17(5): lea 0x0(%r13,%r14,1),%rdi
9e1c(3): mov %rdx,%rbx
9e1f(3): mov %rsi,%rbp
9e22(4): mov %rdi,(%r12)
9e26(4): shl/sal $0x3,%rdi
9e2a(5): call 0xffff7df6(%rip)
9e2f(3): test %rax,%rax
9e32(5): mov %rax,0x10(%r12)
9e37(6): jz 0xf1(%rip)
9e3d(4): mov 0x10(%rbx),%r9
9e41(4): mov 0x10(%rbp),%r8
9e45(2): xor %ebx,%ebx
9e47(2): xor %ecx,%ecx
9e49(2): xor %esi,%esi
9e4b(2): jmp 0x23(%rip)
9e4d(3): nop (%rax)
9e50(4): setz %dil
9e54(5): mov %rdx,0xfffffff8(%rax,%rbx,8)
9e59(4): add $0x1,%rsi
9e5d(4): movzx %dil,%edi
9e61(3): add %rdi,%rcx
9e64(3): cmp %rsi,%r13
9e67(2): jle 0x69(%rip)
9e69(3): cmp %rcx,%r14
9e6c(2): jle 0x7c(%rip)
9e6e(4): mov 0x0(%r8,%rsi,8),%rdx
9e72(4): mov 0x0(%r9,%rcx,8),%rdi
9e76(4): add $0x1,%rbx
9e7a(3): cmp %rdi,%rdx
9e7d(2): jle 0xffffffd3(%rip)
9e7f(4): add $0x1,%rcx
9e83(5): mov %rdi,0xfffffff8(%rax,%rbx,8)
9e88(2): jmp 0xffffffdc(%rip)
9e8a(6): nop 0x0(%rax,%rax,1)
9e90(3): test %r13,%r13
9e93(2): jnle 0x30(%rip)
9e95(3): test %rdx,%rdx
9e98(2): jz 0x9(%rip)
9e9a(5): cmp $0x0,0x8(%rdx)
9e9f(2): jnle 0x21(%rip)
9ea1(4): pxor %xmm0,%xmm0
9ea5(8): mov $0x0,0x10(%rdi)
9ead(2): xor %eax,%eax
9eaf(3): movaps %xmm0,(%rdi)
9eb2(1): pop %rbx
9eb3(1): pop %rbp
9eb4(2): pop %r12
9eb6(2): pop %r13
9eb8(2): pop %r14
9eba(1): ret near (%rsp)
9ebb(5): nop 0x0(%rax,%rax,1)
9ec0(3): mov %rdx,%rsi
9ec3(1): pop %rbx
9ec4(1): pop %rbp
9ec5(2): pop %r12
9ec7(2): pop %r13
9ec9(2): pop %r14
9ecb(5): jmp 0xfffffe85(%rip)
9ed0(3): cmp %rcx,%r14
9ed3(2): jnle 0x35(%rip)
9ed5(5): mov %rbx,0x8(%r12)
9eda(2): xor %eax,%eax
9edc(1): pop %rbx
9edd(1): pop %rbp
9ede(2): pop %r12
9ee0(2): pop %r13
9ee2(2): pop %r14
9ee4(1): ret near (%rsp)
9ee5(3): nop (%rax)
9ee8(3): sub %rsi,%r13
9eeb(4): lea 0x0(%rax,%rbx,8),%rdi
9eef(4): lea 0x0(%r8,%rsi,8),%rsi
9ef3(8): lea 0x0(,%r13,8),%rdx
9efb(3): add %r13,%rbx
9efe(5): call 0xffff7ce2(%rip)
9f03(2): jmp 0xffffffd2(%rip)
9f05(3): nop (%rax)
9f08(3): sub %rcx,%r14
9f0b(4): lea 0x0(%rax,%rbx,8),%rdi
9f0f(4): lea 0x0(%r9,%rcx,8),%rsi
9f13(8): lea 0x0(,%r14,8),%rdx
9f1b(3): add %r14,%rbx
9f1e(5): call 0xffff7cc2(%rip)
9f23(2): jmp 0xffffffb2(%rip)
9f25(3): nop (%rax)
9f28(5): mov $0xc,%eax
9f2d(5): jmp 0xffffff85(%rip)

"re_acquire_state_context" :
9f40(2): push %r15
9f42(2): push %r14
9f44(2): push %r13
9f46(2): push %r12
9f48(1): push %rbp
9f49(1): push %rbx
9f4a(4): sub $0x28,%rsp
9f4e(4): mov 0x8(%rdx),%r10
9f52(3): test %r10,%r10
9f55(6): jz 0x28a(%rip)
9f5b(3): mov %ecx,%r8d
9f5e(3): test %r10,%r10
9f61(4): lea 0x0(%r8,%r10,1),%r12
9f65(2): jle 0x17(%rip)
9f67(4): mov 0x10(%rdx),%rax
9f6b(4): lea 0x0(%rax,%r10,8),%r10
9f6f(1): nop 
9f70(3): add (%rax),%r12
9f73(4): add $0x8,%rax
9f77(3): cmp %rax,%r10
9f7a(2): jnz 0xfffffff6(%rip)
9f7c(7): mov 0x88(%rsi),%rax
9f83(3): mov %rdx,%rbp
9f86(4): mov %ecx,0x4(%rsp)
9f8a(3): mov %rsi,%r13
9f8d(5): mov %rdi,0x18(%rsp)
9f92(3): and %r12,%rax
9f95(4): lea 0x0(%rax,%rax,2),%rdx
9f99(4): mov 0x40(%rsi),%rax
9f9d(4): lea 0x0(%rax,%rdx,8),%rax
9fa1(3): mov (%rax),%r11
9fa4(3): test %r11,%r11
9fa7(2): jle 0x59(%rip)
9fa9(4): mov 0x10(%rax),%rbx
9fad(3): xor %r10d,%r10d
9fb0(3): mov %ecx,%r9d
9fb3(2): jmp 0xe(%rip)
9fb5(3): nop (%rax)
9fb8(4): add $0x1,%r10
9fbc(3): cmp %r11,%r10
9fbf(2): jz 0x41(%rip)
9fc1(4): mov 0x0(%rbx,%r10,8),%r14
9fc5(3): cmp %r12,(%r14)
9fc8(2): jnz 0xfffffff0(%rip)
9fca(5): movzx 0x68(%r14),%eax
9fcf(3): and $0xf,%eax
9fd2(3): cmp %r9d,%eax
9fd5(2): jnz 0xffffffe3(%rip)
9fd7(4): mov 0x50(%r14),%rdi
9fdb(3): test %rdi,%rdi
9fde(2): jz 0xffffffda(%rip)
9fe0(3): mov %rbp,%rsi
9fe3(5): call 0xffffebad(%rip)
9fe8(2): test %al,%al
9fea(2): jz 0xffffffce(%rip)
9fec(4): add $0x28,%rsp
9ff0(3): mov %r14,%rax
9ff3(1): pop %rbx
9ff4(1): pop %rbp
9ff5(2): pop %r12
9ff7(2): pop %r13
9ff9(2): pop %r14
9ffb(2): pop %r15
9ffd(1): ret near (%rsp)
9ffe(2): nop 
a000(5): mov $0x1,%esi
a005(5): mov $0x70,%edi
a00a(5): call 0xffff7bb6(%rip)
a00f(3): test %rax,%rax
a012(3): mov %rax,%r14
a015(6): jz 0x141(%rip)
a01b(4): lea 0x8(%rax),%rax
a01f(3): mov %rbp,%rsi
a022(3): mov %rax,%rdi
a025(3): mov %rax,%rbx
a028(5): call 0xfffffd28(%rip)
a02d(2): test %eax,%eax
a02f(6): jnz 0x1be(%rip)
a035(5): movzx 0x68(%r14),%eax
a03a(5): movzx 0x4(%rsp),%edx
a03f(4): mov %rbx,0x50(%r14)
a043(3): and $0xf,%edx
a046(3): and $0xf0,%eax
a049(2): or %edx,%eax
a04b(5): cmp $0x0,0x8(%rbp)
a050(4): mov %al,0x68(%r14)
a054(6): jle 0xe4(%rip)
a05a(4): lea 0x18(%r14),%rcx
a05e(3): xor %r15d,%r15d
a061(5): mov %r12,0x10(%rsp)
a066(3): xor %r10d,%r10d
a069(3): mov %r13,%r12
a06c(3): mov %r15,%r13
a06f(5): mov %rcx,0x8(%rsp)
a074(3): mov %rbx,%r15
a077(9): nop 0x0(%rax,%rax,1)
a080(4): mov 0x10(%rbp),%rax
a084(4): mov 0x0(%rax,%r13,8),%rax
a088(4): shl/sal $0x4,%rax
a08c(4): add (%r12),%rax
a090(4): movzx 0x8(%rax),%esi
a094(3): mov 0x8(%rax),%ebx
a097(3): shr $0x8,%ebx
a09a(5): and $0x3ff,%bx
a09f(3): cmp $0x1,%esi
a0a2(3): movzx %bx,%edi
a0a5(2): jnz 0x6(%rip)
a0a7(2): test %edi,%edi
a0a9(2): jz 0x79(%rip)
a0ab(5): movzx 0x68(%r14),%edx
a0b0(4): movzx 0xa(%rax),%eax
a0b4(3): mov %edx,%r9d
a0b7(3): shr $0x4,%al
a0ba(3): and $0xdf,%edx
a0bd(4): shr $0x5,%r9b
a0c1(3): or %r9d,%eax
a0c4(3): and $0x1,%eax
a0c7(3): shl/sal $0x5,%eax
a0ca(2): or %edx,%eax
a0cc(3): cmp $0x2,%esi
a0cf(4): mov %al,0x68(%r14)
a0d3(6): jz 0xcd(%rip)
a0d9(3): cmp $0x4,%esi
a0dc(2): jnz 0x9(%rip)
a0de(3): or $0x40,%eax
a0e1(4): mov %al,0x68(%r14)
a0e5(2): test %edi,%edi
a0e7(2): jz 0x3b(%rip)
a0e9(4): cmp 0x50(%r14),%r15
a0ed(6): jz 0xc3(%rip)
a0f3(3): test $0x1,%bl
a0f6(2): jz 0x7a(%rip)
a0f8(5): test $0x1,0x4(%rsp)
a0fd(2): jz 0xb(%rip)
a0ff(3): test $0x2,%bl
a102(2): jz 0x7a(%rip)
a104(4): nop 0x0(%rax)
a108(3): mov %r13,%rdx
a10b(3): sub %r10,%rdx
a10e(2): js 0x10(%rip)
a110(5): mov 0x8(%rsp),%rsi
a115(4): lea 0x10(%r14),%rdi
a119(5): call 0xffffec57(%rip)
a11e(4): add $0x1,%r10
a122(4): add $0x1,%r13
a126(4): cmp 0x8(%rbp),%r13
a12a(6): jl 0xffffff56(%rip)
a130(3): mov %r12,%r13
a133(5): mov 0x10(%rsp),%r12
a138(3): mov %r12,%rdx
a13b(3): mov %r14,%rsi
a13e(3): mov %r13,%rdi
a141(5): call 0xffffd69f(%rip)
a146(2): test %eax,%eax
a148(6): jz 0xfffffea4(%rip)
a14e(3): mov %r14,%rdi
a151(5): call 0xffffe72f(%rip)
a156(5): mov 0x18(%rsp),%rax
a15b(3): xor %r14d,%r14d
a15e(6): mov $0xc,(%rax)
a164(5): jmp 0xfffffe88(%rip)
a169(7): nop 0x0(%rax)
a170(3): test $0x2,%bl
a173(2): jz 0x9(%rip)
a175(5): test $0x1,0x4(%rsp)
a17a(2): jnz 0xffffff8e(%rip)
a17c(3): test $0x10,%bl
a17f(2): jz 0x9(%rip)
a181(5): test $0x2,0x4(%rsp)
a186(2): jz 0xffffff82(%rip)
a188(3): and $0x40,%ebx
a18b(2): jz 0xffffff97(%rip)
a18d(5): test $0x4,0x4(%rsp)
a192(2): jnz 0xffffff90(%rip)
a194(5): jmp 0xffffff74(%rip)
a199(7): nop 0x0(%rax)
a1a0(3): or $0x10,%eax
a1a3(4): mov %al,0x68(%r14)
a1a7(5): jmp 0xffffff3e(%rip)
a1ac(4): nop 0x0(%rax)
a1b0(5): mov $0x18,%edi
a1b5(5): call 0xffff7a6b(%rip)
a1ba(3): test %rax,%rax
a1bd(4): mov %rax,0x50(%r14)
a1c1(2): jz 0xffffff8d(%rip)
a1c3(3): mov %rbp,%rsi
a1c6(3): mov %rax,%rdi
a1c9(5): call 0xfffffb87(%rip)
a1ce(2): test %eax,%eax
a1d0(2): jnz 0xffffff86(%rip)
a1d2(5): or $0x80,0x68(%r14)
a1d7(3): xor %r10d,%r10d
a1da(5): jmp 0xffffff19(%rip)
a1df(6): mov $0x0,(%rdi)
a1e5(3): xor %r14d,%r14d
a1e8(5): jmp 0xfffffe04(%rip)
a1ed(3): mov %r14,%rdi
a1f0(5): call 0xffff77e0(%rip)
a1f5(5): jmp 0xffffff61(%rip)

"re_acquire_state" :
a200(2): push %r15
a202(2): push %r14
a204(2): push %r13
a206(2): push %r12
a208(1): push %rbp
a209(1): push %rbx
a20a(4): sub $0x8,%rsp
a20e(4): mov 0x8(%rdx),%rbp
a212(3): test %rbp,%rbp
a215(6): jz 0x1db(%rip)
a21b(3): test %rbp,%rbp
a21e(2): jle 0x1e(%rip)
a220(4): mov 0x10(%rdx),%rax
a224(4): lea 0x0(%rax,%rbp,8),%rcx
a228(8): nop 0x0(%rax,%rax,1)
a230(3): add (%rax),%rbp
a233(4): add $0x8,%rax
a237(3): cmp %rax,%rcx
a23a(2): jnz 0xfffffff6(%rip)
a23c(7): mov 0x88(%rsi),%rax
a243(3): mov %rdx,%r14
a246(3): mov %rsi,%r12
a249(3): mov %rdi,%r13
a24c(3): and %rbp,%rax
a24f(4): lea 0x0(%rax,%rax,2),%rdx
a253(4): mov 0x40(%rsi),%rax
a257(4): lea 0x0(%rax,%rdx,8),%rax
a25b(3): mov (%rax),%r10
a25e(3): test %r10,%r10
a261(2): jle 0x35(%rip)
a263(4): mov 0x10(%rax),%r11
a267(3): xor %r9d,%r9d
a26a(6): nop 0x0(%rax,%rax,1)
a270(4): mov 0x0(%r11,%r9,8),%rbx
a274(3): cmp %rbp,(%rbx)
a277(2): jnz 0x16(%rip)
a279(4): lea 0x8(%rbx),%rdi
a27d(3): mov %r14,%rsi
a280(5): call 0xffffe910(%rip)
a285(2): test %al,%al
a287(6): jnz 0x108(%rip)
a28d(4): add $0x1,%r9
a291(3): cmp %r9,%r10
a294(2): jnz 0xffffffdc(%rip)
a296(5): mov $0x1,%esi
a29b(5): mov $0x70,%edi
a2a0(5): call 0xffff7920(%rip)
a2a5(3): test %rax,%rax
a2a8(3): mov %rax,%rbx
a2ab(6): jz 0x12d(%rip)
a2b1(4): lea 0x8(%rax),%r15
a2b5(3): mov %r14,%rsi
a2b8(3): mov %r15,%rdi
a2bb(5): call 0xfffffa95(%rip)
a2c0(2): test %eax,%eax
a2c2(6): jnz 0x10e(%rip)
a2c8(4): mov 0x8(%r14),%rax
a2cc(4): mov %r15,0x50(%rbx)
a2d0(3): test %rax,%rax
a2d3(6): jle 0xaa(%rip)
a2d9(4): mov 0x10(%r14),%rsi
a2dd(4): mov (%r12),%r8
a2e1(4): lea 0x0(%rsi,%rax,8),%r9
a2e5(2): jmp 0x4f(%rip)
a2e7(9): nop 0x0(%rax,%rax,1)
a2f0(4): movzx 0x68(%rbx),%ecx
a2f4(4): movzx 0xa(%rax),%edx
a2f8(3): mov %ecx,%r10d
a2fb(3): shr $0x4,%dl
a2fe(3): and $0xdf,%ecx
a301(4): shr $0x5,%r10b
a305(3): or %r10d,%edx
a308(3): and $0x1,%edx
a30b(3): shl/sal $0x5,%edx
a30e(2): or %ecx,%edx
a310(3): cmp $0x2,%edi
a313(3): mov %dl,0x68(%rbx)
a316(6): jz 0x92(%rip)
a31c(3): cmp $0x4,%edi
a31f(6): jnz 0x99(%rip)
a325(3): or $0x40,%edx
a328(3): mov %dl,0x68(%rbx)
a32b(4): add $0x8,%rsi
a32f(3): cmp %rsi,%r9
a332(2): jz 0x4b(%rip)
a334(3): mov (%rsi),%rax
a337(4): shl/sal $0x4,%rax
a33b(3): add %r8,%rax
a33e(4): movzx 0x8(%rax),%edi
a342(3): cmp $0x1,%edi
a345(2): jnz 0xffffffab(%rip)
a347(7): test $0x3ff00,0x8(%rax)
a34e(2): jz 0xffffffdd(%rip)
a350(4): movzx 0x68(%rbx),%edx
a354(4): movzx 0xa(%rax),%eax
a358(2): mov %edx,%ecx
a35a(3): shr $0x4,%al
a35d(3): and $0xdf,%edx
a360(3): shr $0x5,%cl
a363(2): or %ecx,%eax
a365(3): and $0x1,%eax
a368(3): shl/sal $0x5,%eax
a36b(2): or %edx,%eax
a36d(3): mov %al,0x68(%rbx)
a370(4): add $0x8,%rsi
a374(4): or $0x80,0x68(%rbx)
a378(3): cmp %rsi,%r9
a37b(2): jnz 0xffffffb9(%rip)
a37d(3): mov %rbp,%rdx
a380(3): mov %rbx,%rsi
a383(3): mov %r12,%rdi
a386(5): call 0xffffd45a(%rip)
a38b(2): test %eax,%eax
a38d(2): jnz 0x57(%rip)
a38f(4): add $0x8,%rsp
a393(3): mov %rbx,%rax
a396(1): pop %rbx
a397(1): pop %rbp
a398(2): pop %r12
a39a(2): pop %r13
a39c(2): pop %r14
a39e(2): pop %r15
a3a0(1): ret near (%rsp)
a3a1(7): nop 0x0(%rax)
a3a8(3): or $0x10,%edx
a3ab(3): mov %dl,0x68(%rbx)
a3ae(5): jmp 0xffffff7d(%rip)
a3b3(5): nop 0x0(%rax,%rax,1)
a3b8(3): cmp $0xc,%edi
a3bb(2): jz 0xffffffb5(%rip)
a3bd(7): test $0x3ff00,0x8(%rax)
a3c4(6): jz 0xffffff67(%rip)
a3ca(2): jmp 0xffffffa6(%rip)
a3cc(4): nop 0x0(%rax)
a3d0(3): mov %rbx,%rdi
a3d3(5): call 0xffff75fd(%rip)
a3d8(8): mov $0xc,0x0(%r13)
a3e0(2): xor %ebx,%ebx
a3e2(2): jmp 0xffffffad(%rip)
a3e4(3): mov %rbx,%rdi
a3e7(5): call 0xffffe499(%rip)
a3ec(2): jmp 0xffffffec(%rip)
a3ee(2): nop 
a3f0(6): mov $0x0,(%rdi)
a3f6(2): xor %ebx,%ebx
a3f8(2): jmp 0xffffff97(%rip)

"merge_state_array" :
a400(2): push %r15
a402(2): push %r14
a404(2): push %r13
a406(2): push %r12
a408(1): push %rbp
a409(1): push %rbx
a40a(4): sub $0x48,%rsp
a40e(9): mov $0x28,%rax
a417(5): mov %rax,0x38(%rsp)
a41c(2): xor %eax,%eax
a41e(3): test %rcx,%rcx
a421(6): jle 0x95(%rip)
a427(5): lea 0x1c(%rsp),%rax
a42c(3): mov %rdi,%r14
a42f(3): mov %rsi,%rbx
a432(3): mov %rdx,%r12
a435(3): mov %rcx,%rbp
a438(3): xor %r15d,%r15d
a43b(5): lea 0x20(%rsp),%r13
a440(5): mov %rax,0x8(%rsp)
a445(2): jmp 0x57(%rip)
a447(9): nop 0x0(%rax,%rax,1)
a450(3): test %rdx,%rdx
a453(2): jz 0x40(%rip)
a455(4): add $0x8,%rdx
a459(4): add $0x8,%rsi
a45d(3): mov %r13,%rdi
a460(5): call 0xfffff980(%rip)
a465(2): test %eax,%eax
a467(4): mov %eax,0x1c(%rsp)
a46b(2): jnz 0x4d(%rip)
a46d(5): mov 0x8(%rsp),%rdi
a472(3): mov %r13,%rdx
a475(3): mov %r14,%rsi
a478(5): call 0xfffffd88(%rip)
a47d(5): mov 0x30(%rsp),%rdi
a482(4): mov %rax,0x0(%rbx,%r15,8)
a486(5): call 0xffff754a(%rip)
a48b(4): mov 0x1c(%rsp),%eax
a48f(2): test %eax,%eax
a491(2): jnz 0x27(%rip)
a493(4): add $0x1,%r15
a497(3): cmp %r15,%rbp
a49a(2): jz 0x1c(%rip)
a49c(4): mov 0x0(%rbx,%r15,8),%rsi
a4a0(4): mov 0x0(%r12,%r15,8),%rdx
a4a4(3): test %rsi,%rsi
a4a7(2): jnz 0xffffffa9(%rip)
a4a9(4): mov %rdx,0x0(%rbx,%r15,8)
a4ad(4): add $0x1,%r15
a4b1(3): cmp %r15,%rbp
a4b4(2): jnz 0xffffffe8(%rip)
a4b6(2): xor %eax,%eax
a4b8(5): mov 0x38(%rsp),%rcx
a4bd(9): xor $0x28,%rcx
a4c6(2): jnz 0x11(%rip)
a4c8(4): add $0x48,%rsp
a4cc(1): pop %rbx
a4cd(1): pop %rbp
a4ce(2): pop %r12
a4d0(2): pop %r13
a4d2(2): pop %r14
a4d4(2): pop %r15
a4d6(1): ret near (%rsp)
a4d7(5): call 0xffff75f9(%rip)

"expand_bkref_cache" :
a4e0(2): push %r15
a4e2(2): push %r14
a4e4(2): push %r13
a4e6(2): push %r12
a4e8(3): mov %rdx,%r12
a4eb(1): push %rbp
a4ec(1): push %rbx
a4ed(3): mov %rdi,%rbx
a4f0(3): mov %rsi,%rbp
a4f3(2): xor %esi,%esi
a4f5(4): sub $0x78,%rsp
a4f9(7): mov 0xc8(%rdi),%rdi
a500(9): mov $0x28,%rax
a509(5): mov %rax,0x68(%rsp)
a50e(2): xor %eax,%eax
a510(5): mov %rcx,0x20(%rsp)
a515(5): mov %r8d,0x2c(%rsp)
a51a(3): mov %rdi,%rdx
a51d(3): cmp %rdx,%rsi
a520(2): jnl 0x57(%rip)
a522(4): lea 0x0(%rsi,%rdx,1),%rax
a526(7): mov 0xd8(%rbx),%r8
a52d(3): mov %rax,%rcx
a530(4): shr $0x3f,%rcx
a534(3): add %rax,%rcx
a537(3): sar $0x1,%rcx
a53a(4): lea 0x0(%rcx,%rcx,4),%rax
a53e(5): cmp 0x8(%r8,%rax,8),%r12
a543(2): jle 0x2f(%rip)
a545(5): jmp 0x83(%rip)
a54a(6): nop 0x0(%rax,%rax,1)
a550(4): lea 0x0(%rsi,%rcx,1),%rdx
a554(3): mov %rdx,%rax
a557(4): shr $0x3f,%rax
a55b(3): add %rdx,%rax
a55e(3): sar $0x1,%rax
a561(4): lea 0x0(%rax,%rax,4),%rdx
a565(3): mov %rax,%r9
a568(5): cmp 0x8(%r8,%rdx,8),%r12
a56d(2): jnle 0x63(%rip)
a56f(3): mov %rax,%rcx
a572(3): cmp %rcx,%rsi
a575(2): jl 0xffffffdb(%rip)
a577(3): cmp %rsi,%rdi
a57a(2): jle 0x23(%rip)
a57c(7): mov 0xd8(%rbx),%rcx
a583(4): lea 0x0(%rsi,%rsi,4),%rax
a587(4): shl/sal $0x3,%rax
a58b(5): cmp %r12,0x8(%rcx,%rax,1)
a590(5): mov %rax,0x30(%rsp)
a595(2): jnz 0x8(%rip)
a597(4): cmp $0xffffffff,%rsi
a59b(2): jnz 0x45(%rip)
a59d(2): xor %eax,%eax
a59f(5): mov 0x68(%rsp),%rbx
a5a4(9): xor $0x28,%rbx
a5ad(6): jnz 0x2cc(%rip)
a5b3(4): add $0x78,%rsp
a5b7(1): pop %rbx
a5b8(1): pop %rbp
a5b9(2): pop %r12
a5bb(2): pop %r13
a5bd(2): pop %r14
a5bf(2): pop %r15
a5c1(1): ret near (%rsp)
a5c2(6): nop 0x0(%rax,%rax,1)
a5c8(3): mov %rcx,%r9
a5cb(3): mov %rdx,%rcx
a5ce(2): nop 
a5d0(4): lea 0x1(%r9),%rsi
a5d4(3): mov %rcx,%rdx
a5d7(5): jmp 0xffffff46(%rip)
a5dc(4): nop 0x0(%rax)
a5e0(4): lea 0x10(%rbp),%rax
a5e4(7): mov 0x98(%rbx),%r13
a5eb(4): mov %rax,(%rsp)
a5ef(5): lea 0x4c(%rsp),%rax
a5f4(5): mov %rax,0x38(%rsp)
a5f9(5): lea 0x50(%rsp),%rax
a5fe(5): mov %rax,0x10(%rsp)
a603(5): mov 0x30(%rsp),%rax
a608(4): lea 0x0(%rcx,%rax,1),%r15
a60c(5): jmp 0xdc(%rip)
a611(7): nop 0x0(%rax)
a618(4): mov 0x18(%r13),%rax
a61c(4): mov 0x0(%rax,%r10,8),%rcx
a620(7): mov 0xb8(%rbx),%r10
a627(8): lea 0x0(,%r14,8),%rax
a62f(5): mov %rax,0x18(%rsp)
a634(3): add %rax,%r10
a637(5): mov %rcx,0x8(%rsp)
a63c(3): mov (%r10),%r9
a63f(3): test %r9,%r9
a642(6): jz 0x18e(%rip)
a648(4): mov 0x10(%r9),%rdi
a64c(4): lea 0x18(%r9),%rsi
a650(3): mov %rcx,%rdx
a653(5): call 0xffffe59d(%rip)
a658(3): test %rax,%rax
a65b(2): jnz 0x7e(%rip)
a65d(5): mov 0x10(%rsp),%rdi
a662(4): lea 0x8(%r9),%rsi
a666(5): call 0xfffff6ea(%rip)
a66b(5): mov 0x8(%rsp),%rsi
a670(5): mov 0x10(%rsp),%rdi
a675(4): mov %eax,0x4c(%rsp)
a679(5): call 0xffffd037(%rip)
a67e(4): mov 0x4c(%rsp),%edx
a682(2): test %edx,%edx
a684(6): jnz 0x1a2(%rip)
a68a(2): cmp $0x1,%al
a68c(6): jnz 0x19a(%rip)
a692(5): mov 0x18(%rsp),%r10
a697(7): add 0xb8(%rbx),%r10
a69e(5): mov 0x10(%rsp),%rdx
a6a3(5): mov 0x38(%rsp),%rdi
a6a8(3): mov %r13,%rsi
a6ab(5): mov %r10,0x8(%rsp)
a6b0(5): call 0xfffffb50(%rip)
a6b5(5): mov 0x8(%rsp),%r10
a6ba(5): mov 0x60(%rsp),%rdi
a6bf(3): mov %rax,(%r10)
a6c2(5): call 0xffff730e(%rip)
a6c7(7): mov 0xb8(%rbx),%rax
a6ce(5): cmp $0x0,0x0(%rax,%r14,8)
a6d3(6): jz 0x142(%rip)
a6d9(4): add $0x28,%r15
a6dd(5): cmp $0x0,0xfffffff8(%r15)
a6e2(6): jz 0xfffffebb(%rip)
a6e8(3): mov (%r15),%r10
a6eb(4): mov 0x8(%rbp),%r9
a6ef(4): mov (%rsp),%rsi
a6f3(3): mov %r10,%rdx
a6f6(3): mov %r9,%rdi
a6f9(5): call 0xffffe4f7(%rip)
a6fe(3): test %rax,%rax
a701(2): jz 0xffffffd8(%rip)
a703(4): mov 0x18(%r15),%r8
a707(3): add %r12,%r8
a70a(3): mov %r8,%r14
a70d(4): sub 0x10(%r15),%r14
a711(3): cmp %r14,%r12
a714(6): jnz 0xffffff04(%rip)
a71a(4): mov 0x28(%r13),%rcx
a71e(4): lea 0x0(%r10,%r10,2),%rax
a722(4): mov (%rsp),%rsi
a726(3): mov %r9,%rdi
a729(4): lea 0x0(%rcx,%rax,8),%rax
a72d(4): mov 0x10(%rax),%rax
a731(3): mov (%rax),%r14
a734(3): mov %r14,%rdx
a737(5): call 0xffffe4b9(%rip)
a73c(3): test %rax,%rax
a73f(2): jnz 0xffffff9a(%rip)
a741(5): mov $0x8,%edi
a746(9): mov $0x1,0x50(%rsp)
a74f(9): mov $0x1,0x58(%rsp)
a758(5): call 0xffff74c8(%rip)
a75d(3): test %rax,%rax
a760(5): mov %rax,0x60(%rsp)
a765(6): jz 0xf8(%rip)
a76b(3): mov %r14,(%rax)
a76e(2): xor %eax,%eax
a770(5): mov 0x10(%rsp),%r15
a775(5): mov 0x20(%rsp),%rdx
a77a(3): mov %r13,%rdi
a77d(4): mov 0x2c(%rsp),%ecx
a781(4): mov %eax,0x4c(%rsp)
a785(3): mov %r15,%rsi
a788(5): call 0xffffee18(%rip)
a78d(3): mov %r15,%rsi
a790(3): mov %rbp,%rdi
a793(3): mov %eax,%r14d
a796(5): call 0xffffe97a(%rip)
a79b(5): mov 0x60(%rsp),%rdi
a7a0(3): mov %eax,%r15d
a7a3(5): call 0xffff722d(%rip)
a7a8(4): mov 0x4c(%rsp),%eax
a7ac(3): mov %r14d,%edx
a7af(3): or %r15d,%edx
a7b2(2): or %eax,%edx
a7b4(6): jnz 0x92(%rip)
a7ba(7): mov 0xd8(%rbx),%rcx
a7c1(5): jmp 0xfffffe42(%rip)
a7c6(a): nop 0x0(%rax,%rax,1)
a7d0(5): mov $0x8,%edi
a7d5(5): mov %r10,0x18(%rsp)
a7da(9): mov $0x1,0x50(%rsp)
a7e3(9): mov $0x1,0x58(%rsp)
a7ec(5): call 0xffff7434(%rip)
a7f1(3): test %rax,%rax
a7f4(5): mov %rax,0x60(%rsp)
a7f9(2): jz 0x43(%rip)
a7fb(5): mov 0x8(%rsp),%rdi
a800(8): mov $0x0,0x4c(%rsp)
a808(5): mov 0x18(%rsp),%r10
a80d(3): mov %rdi,(%rax)
a810(5): jmp 0xfffffe8e(%rip)
a815(4): mov 0x4c(%rsp),%eax
a819(2): test %eax,%eax
a81b(6): jz 0xfffffebe(%rip)
a821(5): jmp 0xfffffd7e(%rip)
a826(5): mov 0x60(%rsp),%rdi
a82b(5): call 0xffff71a5(%rip)
a830(4): mov 0x4c(%rsp),%eax
a834(2): test %eax,%eax
a836(6): jnz 0xfffffd69(%rip)
a83c(5): mov $0xc,%eax
a841(5): jmp 0xfffffd5e(%rip)
a846(2): test %eax,%eax
a848(6): jnz 0xfffffd57(%rip)
a84e(3): test %r14d,%r14d
a851(3): mov %r14d,%eax
a854(4): cmove %r15d,%eax
a858(5): jmp 0xfffffd47(%rip)
a85d(9): mov $0x0,0x58(%rsp)
a866(9): mov $0x0,0x50(%rsp)
a86f(5): mov $0xc,%eax
a874(5): jmp 0xfffffefc(%rip)
a879(5): call 0xffff7257(%rip)

"check_subexp_matching_top.isra.18" :
a880(2): push %r15
a882(2): push %r14
a884(2): push %r13
a886(2): push %r12
a888(1): push %rbp
a889(1): push %rbx
a88a(4): sub $0x28,%rsp
a88e(4): cmp $0x0,(%rsi)
a892(7): mov 0x98(%rdi),%r13
a899(6): jle 0xc7(%rip)
a89f(3): mov %rdx,%r14
a8a2(3): mov %rsi,%r12
a8a5(3): mov %rdi,%r15
a8a8(2): xor %ebx,%ebx
a8aa(2): jmp 0x14(%rip)
a8ac(4): nop 0x0(%rax)
a8b0(4): add $0x1,%rbx
a8b4(4): cmp (%r12),%rbx
a8b8(6): jnl 0xa8(%rip)
a8be(3): mov (%r14),%rax
a8c1(4): mov 0x0(%rax,%rbx,8),%rbp
a8c5(3): mov %rbp,%rax
a8c8(4): shl/sal $0x4,%rax
a8cc(4): add 0x0(%r13),%rax
a8d0(4): cmp $0x8,0x8(%rax)
a8d4(2): jnz 0xffffffdc(%rip)
a8d6(3): mov (%rax),%rax
a8d9(4): cmp $0x3f,%rax
a8dd(2): jnle 0xffffffd3(%rip)
a8df(7): mov 0xa0(%r13),%rsi
a8e6(4): bt %rax,%rsi
a8ea(2): jnb 0xffffffc6(%rip)
a8ec(7): mov 0xe8(%r15),%r8
a8f3(7): cmp 0xf0(%r15),%r8
a8fa(7): mov 0xf8(%r15),%r9
a901(2): jz 0x77(%rip)
a903(5): mov $0x30,%esi
a908(5): mov $0x1,%edi
a90d(5): mov %r9,0x10(%rsp)
a912(5): mov %r8,0x8(%rsp)
a917(5): mov %rcx,0x18(%rsp)
a91c(5): call 0xffff72a4(%rip)
a921(5): mov 0x8(%rsp),%r8
a926(5): mov 0x10(%rsp),%r9
a92b(3): test %rax,%rax
a92e(4): mov %rax,0x0(%r9,%r8,8)
a932(2): jz 0x3f(%rip)
a934(4): add $0x1,%r8
a938(4): add $0x1,%rbx
a93c(5): mov 0x18(%rsp),%rcx
a941(7): mov %r8,0xe8(%r15)
a948(4): cmp (%r12),%rbx
a94c(4): mov %rbp,0x8(%rax)
a950(3): mov %rcx,(%rax)
a953(6): jl 0xffffff6b(%rip)
a959(7): nop 0x0(%rax)
a960(2): xor %eax,%eax
a962(4): add $0x28,%rsp
a966(1): pop %rbx
a967(1): pop %rbp
a968(2): pop %r12
a96a(2): pop %r13
a96c(2): pop %r14
a96e(2): pop %r15
a970(1): ret near (%rsp)
a971(5): mov $0xc,%eax
a976(2): jmp 0xffffffec(%rip)
a978(4): lea 0x0(%r8,%r8,1),%rax
a97c(3): mov %r8,%rsi
a97f(3): mov %r9,%rdi
a982(4): shl/sal $0x4,%rsi
a986(5): mov %rcx,0x8(%rsp)
a98b(5): mov %rax,0x10(%rsp)
a990(5): call 0xffff7300(%rip)
a995(3): test %rax,%rax
a998(3): mov %rax,%r9
a99b(5): mov 0x8(%rsp),%rcx
a9a0(2): jz 0xffffffd1(%rip)
a9a2(7): mov %rax,0xf8(%r15)
a9a9(5): mov 0x10(%rsp),%rax
a9ae(7): mov 0xe8(%r15),%r8
a9b5(7): mov %rax,0xf0(%r15)
a9bc(5): jmp 0xffffff47(%rip)

"re_string_context_at" :
a9d0(1): push %rbp
a9d1(1): push %rbx
a9d2(3): mov %rdi,%rbp
a9d5(4): sub $0x8,%rsp
a9d9(3): test %rsi,%rsi
a9dc(2): js 0x54(%rip)
a9de(4): cmp %rsi,0x58(%rdi)
a9e2(6): jz 0xa6(%rip)
a9e8(7): cmp $0x1,0x90(%rdi)
a9ef(2): jle 0x51(%rip)
a9f1(4): mov 0x10(%rdi),%rax
a9f5(2): jmp 0x15(%rip)
a9f7(9): nop 0x0(%rax,%rax,1)
aa00(4): sub $0x1,%rsi
aa04(4): cmp $0xffffffff,%rsi
aa08(2): jz 0x28(%rip)
aa0a(3): mov 0x0(%rax,%rsi,4),%ebx
aa0d(3): cmp $0xff,%ebx
aa10(2): jz 0xfffffff0(%rip)
aa12(7): cmp $0x0,0x8e(%rbp)
aa19(2): jnz 0x7f(%rip)
aa1b(2): xor %eax,%eax
aa1d(3): cmp $0xa,%ebx
aa20(2): jz 0x4c(%rip)
aa22(4): add $0x8,%rsp
aa26(1): pop %rbx
aa27(1): pop %rbp
aa28(1): ret near (%rsp)
aa29(7): nop 0x0(%rax)
aa30(3): mov 0x70(%rbp),%eax
aa33(4): add $0x8,%rsp
aa37(1): pop %rbx
aa38(1): pop %rbp
aa39(1): ret near (%rsp)
aa3a(6): nop 0x0(%rax,%rax,1)
aa40(4): mov 0x8(%rdi),%rax
aa44(7): mov 0x80(%rdi),%rcx
aa4b(4): movzx 0x0(%rax,%rsi,1),%eax
aa4f(3): mov %rax,%rdx
aa52(4): sar $0x6,%rax
aa56(4): mov 0x0(%rcx,%rax,8),%rcx
aa5a(5): mov $0x1,%eax
aa5f(4): bt %rdx,%rcx
aa63(2): jb 0xffffffbf(%rip)
aa65(2): xor %eax,%eax
aa67(3): cmp $0xa,%dl
aa6a(2): jnz 0xffffffb8(%rip)
aa6c(2): xor %eax,%eax
aa6e(7): cmp $0x0,0x8d(%rbp)
aa75(3): setnz %al
aa78(4): add $0x8,%rsp
aa7c(2): add %eax,%eax
aa7e(1): pop %rbx
aa7f(1): pop %rbp
aa80(1): ret near (%rsp)
aa81(7): nop 0x0(%rax)
aa88(3): and $0x2,%edx
aa8b(3): cmp $0x1,%edx
aa8e(2): sbb %eax,%eax
aa90(3): and $0x2,%eax
aa93(3): add $0x8,%eax
aa96(2): jmp 0xffffff8c(%rip)
aa98(2): mov %ebx,%edi
aa9a(5): call 0xffff7176(%rip)
aa9f(2): test %eax,%eax
aaa1(2): jnz 0xb(%rip)
aaa3(3): cmp $0x5f,%ebx
aaa6(6): jnz 0xffffff75(%rip)
aaac(5): mov $0x1,%eax
aab1(5): jmp 0xffffff71(%rip)

"check_node_accept" :
aac0(4): mov 0x8(%rdi),%rax
aac4(4): movzx 0x0(%rax,%rdx,1),%ecx
aac8(4): movzx 0x8(%rsi),%eax
aacc(2): cmp $0x3,%al
aace(6): jz 0xba(%rip)
aad4(6): jbe 0x9c(%rip)
aada(2): cmp $0x5,%al
aadc(2): jz 0x14(%rip)
aade(2): cmp $0x7,%al
aae0(6): jnz 0xa0(%rip)
aae6(2): xor %eax,%eax
aae8(2): test %cl,%cl
aaea(6): js 0x90(%rip)
aaf0(3): cmp $0xa,%cl
aaf3(6): jz 0xc5(%rip)
aaf9(2): test %cl,%cl
aafb(2): jnz 0x15(%rip)
aafd(7): mov 0x98(%rdi),%rcx
ab04(2): xor %eax,%eax
ab06(7): test $0x80,0xd8(%rcx)
ab0d(2): jnz 0x6d(%rip)
ab0f(1): nop 
ab10(1): push %rbx
ab11(3): mov 0x8(%rsi),%ebx
ab14(5): mov $0x1,%eax
ab19(6): test $0x3ff00,%ebx
ab1f(2): jz 0x4d(%rip)
ab21(3): mov %rdx,%rsi
ab24(6): mov 0xa0(%rdi),%edx
ab2a(3): shr $0x8,%ebx
ab2d(5): call 0xfffffea3(%rip)
ab32(2): mov %ebx,%ecx
ab34(2): mov %eax,%edx
ab36(5): and $0x3ff,%cx
ab3b(3): test $0x4,%bl
ab3e(2): jz 0x6a(%rip)
ab40(2): xor %eax,%eax
ab42(3): test $0x1,%dl
ab45(2): jz 0x27(%rip)
ab47(3): and $0x8,%ebx
ab4a(2): jnz 0x22(%rip)
ab4c(3): test $0x20,%cl
ab4f(2): jz 0x9(%rip)
ab51(2): xor %eax,%eax
ab53(3): test $0x2,%dl
ab56(2): jz 0x16(%rip)
ab58(3): shr $0x3,%edx
ab5b(5): mov $0x1,%eax
ab60(3): and $0x1,%edx
ab63(6): and $0x80,%ecx
ab69(3): cmovne %edx,%eax
ab6c(1): pop %rbx
ab6d(1): ret near (%rsp)
ab6e(2): nop 
ab70(2): cmp $0x1,%al
ab72(2): jnz 0xe(%rip)
ab74(2): xor %eax,%eax
ab76(2): cmp %cl,(%rsi)
ab78(2): jz 0xffffff98(%rip)
ab7a(2): REP ret near (%rsp)
ab7c(4): nop 0x0(%rax)
ab80(2): xor %eax,%eax
ab82(1): ret near (%rsp)
ab83(5): nop 0x0(%rax,%rax,1)
ab88(3): mov (%rsi),%r8
ab8b(3): movzx %cl,%eax
ab8e(4): sar $0x6,%rax
ab92(4): mov 0x0(%r8,%rax,8),%r8
ab96(2): xor %eax,%eax
ab98(4): bt %rcx,%r8
ab9c(6): jb 0xffffff74(%rip)
aba2(2): REP ret near (%rsp)
aba4(4): nop 0x0(%rax)
aba8(3): and $0x8,%ebx
abab(2): jz 0xffffffa1(%rip)
abad(2): test $0x1,%al
abaf(2): jz 0xffffff9d(%rip)
abb1(2): xor %eax,%eax
abb3(1): pop %rbx
abb4(1): ret near (%rsp)
abb5(3): nop (%rax)
abb8(7): mov 0x98(%rdi),%rcx
abbf(2): xor %eax,%eax
abc1(7): test $0x40,0xd8(%rcx)
abc8(6): jnz 0xffffff48(%rip)
abce(2): REP ret near (%rsp)

"check_halt_state_context.isra.20" :
abd0(2): push %r12
abd2(3): mov %rdx,%r12
abd5(1): push %rbp
abd6(1): push %rbx
abd7(6): mov 0xa0(%rdi),%edx
abdd(3): mov %rsi,%rbx
abe0(3): mov %rcx,%rsi
abe3(3): mov %rdi,%rbp
abe6(5): call 0xfffffdea(%rip)
abeb(3): test %rbx,%rbx
abee(6): jle 0xaa(%rip)
abf4(7): mov 0x98(%rbp),%rdx
abfb(3): mov %eax,%r11d
abfe(2): mov %eax,%ebp
ac00(3): and $0x1,%eax
ac03(4): mov (%r12),%r9
ac07(2): xor %esi,%esi
ac09(3): and $0x8,%ebp
ac0c(4): and $0x2,%r11d
ac10(3): mov %eax,%r10d
ac13(3): mov (%rdx),%r8
ac16(2): jmp 0x13(%rip)
ac18(8): nop 0x0(%rax,%rax,1)
ac20(4): add $0x1,%rsi
ac24(3): cmp %rbx,%rsi
ac27(2): jz 0x71(%rip)
ac29(4): mov 0x0(%r9,%rsi,8),%rax
ac2d(3): mov %rax,%rdx
ac30(4): shl/sal $0x4,%rdx
ac34(3): add %r8,%rdx
ac37(3): mov 0x8(%rdx),%ecx
ac3a(3): shr $0x8,%ecx
ac3d(2): mov %ecx,%edi
ac3f(5): and $0x3ff,%di
ac44(4): cmp $0x2,0x8(%rdx)
ac48(2): jnz 0xffffffd8(%rip)
ac4a(3): test %di,%di
ac4d(2): jz 0x28(%rip)
ac4f(3): test $0x4,%cl
ac52(2): jz 0x2e(%rip)
ac54(3): test %r10d,%r10d
ac57(2): jz 0xffffffc9(%rip)
ac59(3): and $0x8,%ecx
ac5c(2): jnz 0xffffffc4(%rip)
ac5e(4): test $0x20,%dil
ac62(2): jz 0x7(%rip)
ac64(3): test %r11d,%r11d
ac67(2): jz 0xffffffb9(%rip)
ac69(6): and $0x80,%edi
ac6f(2): jz 0x6(%rip)
ac71(2): test %ebp,%ebp
ac73(2): jz 0xffffffad(%rip)
ac75(1): pop %rbx
ac76(1): pop %rbp
ac77(2): pop %r12
ac79(1): ret near (%rsp)
ac7a(6): nop 0x0(%rax,%rax,1)
ac80(3): and $0x8,%ecx
ac83(2): jz 0xffffffdb(%rip)
ac85(3): test %r10d,%r10d
ac88(2): jnz 0xffffff98(%rip)
ac8a(4): test $0x20,%dil
ac8e(2): jz 0xffffffdb(%rip)
ac90(2): jmp 0xffffffd4(%rip)
ac92(6): nop 0x0(%rax,%rax,1)
ac98(1): pop %rbx
ac99(2): xor %eax,%eax
ac9b(1): pop %rbp
ac9c(2): pop %r12
ac9e(1): ret near (%rsp)

"re_string_reconstruct" :
aca0(2): push %r15
aca2(2): push %r14
aca4(3): mov %rsi,%r15
aca7(2): push %r13
aca9(2): push %r12
acab(3): mov %edx,%r10d
acae(1): push %rbp
acaf(1): push %rbx
acb0(3): mov %rsi,%rbp
acb3(3): mov %rdi,%rbx
acb6(4): sub $0x48,%rsp
acba(9): mov $0x28,%rax
acc3(5): mov %rax,0x38(%rsp)
acc8(2): xor %eax,%eax
acca(4): mov 0x28(%rdi),%rax
acce(3): sub %rax,%rbp
acd1(3): cmp %rsi,%rax
acd4(2): jle 0x62(%rip)
acd6(7): cmp $0x1,0x90(%rdi)
acdd(6): jnle 0x133(%rip)
ace3(4): mov 0x50(%rbx),%rax
ace7(8): mov $0x0,0x30(%rbx)
acef(3): mov %r15,%rbp
acf2(8): mov $0x0,0x28(%rbx)
acfa(8): mov $0x0,0x38(%rbx)
ad02(7): mov $0x0,0x8c(%rbx)
ad09(4): mov %rax,0x58(%rbx)
ad0d(4): mov 0x60(%rbx),%rax
ad11(4): mov %rax,0x68(%rbx)
ad15(3): mov %r10d,%eax
ad18(3): and $0x1,%eax
ad1b(3): cmp $0x1,%eax
ad1e(2): sbb %eax,%eax
ad20(3): and $0x2,%eax
ad23(3): add $0x4,%eax
ad26(7): cmp $0x0,0x8b(%rbx)
ad2d(3): mov %eax,0x70(%rbx)
ad30(6): jz 0xd0(%rip)
ad36(3): test %rbp,%rbp
ad39(2): jz 0x65(%rip)
ad3b(4): mov 0x38(%rbx),%rax
ad3f(7): movzx 0x8c(%rbx),%edx
ad46(4): mov 0x30(%rbx),%r8
ad4a(3): cmp %rbp,%rax
ad4d(6): jle 0x123(%rip)
ad53(2): test %dl,%dl
ad55(6): jnz 0x213(%rip)
ad5b(4): lea 0xffffffff(%rbp),%rsi
ad5f(3): mov %r10d,%edx
ad62(3): mov %rbx,%rdi
ad65(4): mov %r8,(%rsp)
ad69(5): call 0xfffffc67(%rip)
ad6e(4): mov (%rsp),%r8
ad72(3): mov %eax,0x70(%rbx)
ad75(3): sub %rbp,%r8
ad78(7): cmp $0x1,0x90(%rbx)
ad7f(6): jnle 0xa1(%rip)
ad85(7): cmp $0x0,0x8b(%rbx)
ad8c(6): jnz 0x3a4(%rip)
ad92(4): sub %rbp,0x38(%rbx)
ad96(4): mov %r8,0x30(%rbx)
ad9a(4): add %rbp,0x8(%rbx)
ad9e(4): mov 0x58(%rbx),%rax
ada2(4): sub %rbp,0x68(%rbx)
ada6(4): mov %r15,0x28(%rbx)
adaa(3): sub %rbp,%rax
adad(7): cmp $0x1,0x90(%rbx)
adb4(4): mov %rax,0x58(%rbx)
adb8(6): jle 0xa0(%rip)
adbe(7): cmp $0x0,0x88(%rbx)
adc5(3): mov %rbx,%rdi
adc8(2): jz 0x80(%rip)
adca(5): call 0xffffcd46(%rip)
adcf(2): test %eax,%eax
add1(2): jnz 0xc(%rip)
add3(8): mov $0x0,0x48(%rbx)
addb(2): xor %eax,%eax
addd(5): mov 0x38(%rsp),%rcx
ade2(9): xor $0x28,%rcx
adeb(6): jnz 0x64f(%rip)
adf1(4): add $0x48,%rsp
adf5(1): pop %rbx
adf6(1): pop %rbp
adf7(2): pop %r12
adf9(2): pop %r13
adfb(2): pop %r14
adfd(2): pop %r15
adff(1): ret near (%rsp)
ae00(3): mov (%rbx),%rax
ae03(4): mov %rax,0x8(%rbx)
ae07(5): jmp 0xffffff2f(%rip)
ae0c(4): nop 0x0(%rax)
ae10(8): mov $0x0,0x20(%rdi)
ae18(5): jmp 0xfffffecb(%rip)
ae1d(3): nop (%rax)
ae20(4): mov 0x10(%rbx),%rdi
ae24(8): lea 0x0(,%r8,4),%rdx
ae2c(4): lea 0x0(%rdi,%rbp,4),%rsi
ae30(5): call 0xffff6ec0(%rip)
ae35(4): mov 0x30(%rbx),%r8
ae39(3): sub %rbp,%r8
ae3c(5): jmp 0xffffff49(%rip)
ae41(7): nop 0x0(%rax)
ae48(5): call 0xffffcaf8(%rip)
ae4d(5): jmp 0xffffff86(%rip)
ae52(6): nop 0x0(%rax,%rax,1)
ae58(7): cmp $0x0,0x8b(%rbx)
ae5f(6): jnz 0x3b1(%rip)
ae65(4): mov %rax,0x30(%rbx)
ae69(5): jmp 0xffffff6a(%rip)
ae6e(2): nop 
ae70(2): test %dl,%dl
ae72(6): jnz 0x4ab(%rip)
ae78(7): movsxd 0x90(%rbx),%rdx
ae7f(8): mov $0x0,0x30(%rbx)
ae87(4): mov 0x28(%rbx),%r11
ae8b(3): cmp $0x1,%edx
ae8e(6): jle 0x3ea(%rip)
ae94(7): cmp $0x0,0x89(%rbx)
ae9b(6): jnz 0x2bd(%rip)
aea1(4): lea 0x0(%r11,%rax,1),%r14
aea5(3): cmp %r14,%r15
aea8(6): jle 0x447(%rip)
aeae(4): lea 0x20(%rbx),%rax
aeb2(5): lea 0x24(%rsp),%r13
aeb7(5): mov %rax,0x10(%rsp)
aebc(4): nop 0x0(%rax)
aec0(4): mov 0x50(%rbx),%r12
aec4(3): mov (%rbx),%rsi
aec7(3): mov %r13,%rdi
aeca(4): mov 0x20(%rbx),%rax
aece(5): mov 0x10(%rsp),%rcx
aed3(5): mov %r10d,0xc(%rsp)
aed8(4): mov %r8,(%rsp)
aedc(3): sub %r14,%r12
aedf(3): add %r14,%rsi
aee2(3): mov %r12,%rdx
aee5(5): mov %rax,0x18(%rsp)
aeea(5): call 0xffffc166(%rip)
aeef(4): lea 0xffffffff(%rax),%rcx
aef3(4): mov 0x24(%rsp),%edx
aef7(4): mov (%rsp),%r8
aefb(5): mov 0xc(%rsp),%r10d
af00(4): cmp $0xfffffffc,%rcx
af04(6): jnbe 0x441(%rip)
af0a(3): add %rax,%r14
af0d(3): cmp %r14,%r15
af10(2): jnle 0xffffffb0(%rip)
af12(3): sub %r15,%r14
af15(3): cmp $0xff,%edx
af18(3): mov %r14,%r12
af1b(4): mov %r14,0x30(%rbx)
af1f(6): jz 0x3da(%rip)
af25(7): cmp $0x0,0x8e(%rbx)
af2c(6): jnz 0x46d(%rip)
af32(2): xor %eax,%eax
af34(3): cmp $0xa,%edx
af37(2): jnz 0x10(%rip)
af39(2): xor %eax,%eax
af3b(7): cmp $0x0,0x8d(%rbx)
af42(3): setnz %al
af45(2): add %eax,%eax
af47(3): mov %eax,0x70(%rbx)
af4a(4): cmp $0x0,%r12
af4e(6): jnz 0x41c(%rip)
af54(7): movzx 0x8b(%rbx),%eax
af5b(4): mov %r12,0x38(%rbx)
af5f(5): jmp 0x1bd(%rip)
af64(4): nop 0x0(%rax)
af68(4): mov 0x18(%rbx),%r14
af6c(3): mov %r8,%rcx
af6f(2): xor %esi,%esi
af71(2): jmp 0x12(%rip)
af73(5): nop 0x0(%rax,%rax,1)
af78(2): jnl 0x3b(%rip)
af7a(4): lea 0x1(%rax),%rsi
af7e(3): cmp %rcx,%rsi
af81(2): jnl 0x27(%rip)
af83(4): lea 0x0(%rsi,%rcx,1),%rdx
af87(3): mov %rdx,%rax
af8a(4): shr $0x3f,%rax
af8e(3): add %rdx,%rax
af91(3): sar $0x1,%rax
af94(4): mov 0x0(%r14,%rax,8),%rdx
af98(3): mov %rax,%r12
af9b(3): cmp %rbp,%rdx
af9e(2): jle 0xffffffda(%rip)
afa0(3): mov %rax,%rcx
afa3(2): jmp 0xffffffdb(%rip)
afa5(3): nop (%rax)
afa8(4): lea 0x1(%rax),%r12
afac(3): cmp %rbp,%rdx
afaf(4): cmovnl %rax,%r12
afb3(5): lea 0xffffffff(%r12),%r13
afb8(3): mov %r10d,%edx
afbb(3): mov %rbx,%rdi
afbe(4): mov %r8,(%rsp)
afc2(3): mov %r13,%rsi
afc5(5): call 0xfffffa0b(%rip)
afca(3): cmp %r12,%rbp
afcd(3): mov %eax,0x70(%rbx)
afd0(4): mov (%rsp),%r8
afd4(6): jnz 0x84(%rip)
afda(3): cmp %r8,%rbp
afdd(2): jnl 0x7b(%rip)
afdf(4): cmp %rbp,0x0(%r14,%r12,8)
afe3(2): jnz 0x75(%rip)
afe5(4): mov 0x10(%rbx),%rdi
afe9(3): sub %rbp,%r8
afec(8): lea 0x0(,%r8,4),%rdx
aff4(4): lea 0x0(%rdi,%rbp,4),%rsi
aff8(5): call 0xffff6cf8(%rip)
affd(4): mov 0x8(%rbx),%rdi
b001(4): mov 0x30(%rbx),%rdx
b005(4): lea 0x0(%rdi,%rbp,1),%rsi
b009(3): sub %rbp,%rdx
b00c(5): call 0xffff6ce4(%rip)
b011(4): mov 0x30(%rbx),%rax
b015(4): sub %rbp,0x38(%rbx)
b019(3): sub %rbp,%rax
b01c(3): test %rax,%rax
b01f(4): mov %rax,0x30(%rbx)
b023(2): jle 0x25(%rip)
b025(4): mov 0x18(%rbx),%rcx
b029(2): xor %eax,%eax
b02b(4): lea 0x0(%rcx,%rbp,8),%rsi
b02f(1): nop 
b030(4): mov 0x0(%rsi,%rax,8),%rdx
b034(3): sub %rbp,%rdx
b037(4): mov %rdx,0x0(%rcx,%rax,8)
b03b(4): add $0x1,%rax
b03f(4): cmp %rax,0x30(%rbx)
b043(2): jnle 0xffffffed(%rip)
b045(3): nop (%rax)
b048(7): movzx 0x8b(%rbx),%eax
b04f(5): jmp 0xcd(%rip)
b054(4): nop 0x0(%rax)
b058(4): mov 0x50(%rbx),%rax
b05c(7): mov $0x0,0x8c(%rbx)
b063(3): add %rbp,%rax
b066(3): sub %r15,%rax
b069(4): mov %rax,0x58(%rbx)
b06d(4): mov 0x60(%rbx),%rax
b071(3): add %rbp,%rax
b074(3): sub %r15,%rax
b077(3): test %r12,%r12
b07a(4): mov %rax,0x68(%rbx)
b07e(2): jle 0x25(%rip)
b080(5): cmp %rbp,0xfffffff8(%r14,%r12,8)
b085(2): jz 0x16(%rip)
b087(2): jmp 0x1c(%rip)
b089(7): nop 0x0(%rax)
b090(5): cmp %rbp,0xfffffff8(%r14,%r13,8)
b095(2): jnz 0xe(%rip)
b097(4): sub $0x1,%r13
b09b(3): test %r13,%r13
b09e(3): mov %r13,%r12
b0a1(2): jnz 0xffffffef(%rip)
b0a3(3): cmp %r8,%r12
b0a6(6): jnl 0x232(%rip)
b0ac(4): mov 0x10(%rbx),%rax
b0b0(2): jmp 0x15(%rip)
b0b2(6): nop 0x0(%rax,%rax,1)
b0b8(4): add $0x1,%r12
b0bc(3): cmp %r8,%r12
b0bf(6): jz 0x221(%rip)
b0c5(5): cmp $0xff,0x0(%rax,%r12,4)
b0ca(2): jz 0xffffffee(%rip)
b0cc(4): mov 0x0(%r14,%r12,8),%rdx
b0d0(3): sub %rbp,%rdx
b0d3(4): cmp $0x0,%rdx
b0d7(4): mov %rdx,0x30(%rbx)
b0db(2): jz 0x36(%rip)
b0dd(2): jle 0x22(%rip)
b0df(4): mov 0x10(%rbx),%rax
b0e3(4): lea 0x0(%rax,%rdx,4),%rcx
b0e7(9): nop 0x0(%rax,%rax,1)
b0f0(6): mov $0xffffffff,(%rax)
b0f6(4): add $0x4,%rax
b0fa(3): cmp %rax,%rcx
b0fd(2): jnz 0xfffffff3(%rip)
b0ff(4): mov 0x8(%rbx),%rdi
b103(5): mov $0xff,%esi
b108(5): call 0xffff6a58(%rip)
b10d(4): mov 0x30(%rbx),%rdx
b111(7): movzx 0x8b(%rbx),%eax
b118(4): mov %rdx,0x38(%rbx)
b11c(2): test %al,%al
b11e(6): jz 0xfffffc7c(%rip)
b124(5): jmp 0xfffffc7a(%rip)
b129(7): nop 0x0(%rax)
b130(4): mov 0x8(%rbx),%rdi
b134(3): mov %r8,%rdx
b137(4): lea 0x0(%rdi,%rbp,1),%rsi
b13b(5): call 0xffff6bb5(%rip)
b140(7): movzx 0x8b(%rbx),%eax
b147(4): sub %rbp,0x30(%rbx)
b14b(4): sub %rbp,0x38(%rbx)
b14f(2): jmp 0xffffffcd(%rip)
b151(7): nop 0x0(%rax)
b158(3): mov (%rbx),%rcx
b15b(3): mov %rbp,%rdi
b15e(3): sub %rdx,%rdi
b161(3): mov %rdi,%rdx
b164(4): lea 0x0(%rcx,%r11,1),%r12
b168(3): add %r12,%rdx
b16b(5): lea 0xffffffff(%r12,%rbp,1),%rsi
b170(3): cmp %rdx,%rcx
b173(4): cmovnae %rdx,%rcx
b177(3): cmp %rsi,%rcx
b17a(2): jbe 0x1b(%rip)
b17c(5): jmp 0xfffffd25(%rip)
b181(7): nop 0x0(%rax)
b188(4): sub $0x1,%rsi
b18c(3): cmp %rsi,%rcx
b18f(6): jnbe 0xfffffd12(%rip)
b195(3): movzx (%rsi),%edx
b198(3): and $0xc0,%edx
b19b(3): cmp $0x80,%dl
b19e(2): jz 0xffffffea(%rip)
b1a0(4): mov 0x58(%rbx),%rdx
b1a4(4): mov 0x78(%rbx),%rcx
b1a8(3): mov %rsi,%r14
b1ab(3): add %r12,%rdx
b1ae(3): sub %rsi,%rdx
b1b1(3): test %rcx,%rcx
b1b4(6): jnz 0x24e(%rip)
b1ba(5): lea 0x24(%rsp),%r13
b1bf(3): add %rbp,%r12
b1c2(5): lea 0x28(%rsp),%rcx
b1c7(3): sub %r14,%r12
b1ca(5): mov %r10d,0xc(%rsp)
b1cf(4): mov %r8,(%rsp)
b1d3(3): mov %r13,%rdi
b1d6(9): mov $0x0,0x28(%rsp)
b1df(5): call 0xffffbe71(%rip)
b1e4(3): cmp %rax,%r12
b1e7(4): mov (%rsp),%r8
b1eb(5): mov 0xc(%rsp),%r10d
b1f0(2): jnbe 0xc(%rip)
b1f2(4): cmp $0xfffffffd,%rax
b1f6(6): jbe 0x1cb(%rip)
b1fc(4): mov 0x28(%rbx),%r11
b200(4): mov 0x38(%rbx),%rax
b204(5): jmp 0xfffffc9d(%rip)
b209(7): nop 0x0(%rax)
b210(7): cmp $0x0,0x88(%rbx)
b217(6): jnz 0xf9(%rip)
b21d(4): mov 0x78(%rbx),%rcx
b221(3): test %rcx,%rcx
b224(6): jz 0xfffffbaf(%rip)
b22a(4): cmp %rax,0x40(%rbx)
b22e(4): mov 0x30(%rbx),%rdx
b232(5): cmovng 0x40(%rbx),%rax
b237(3): cmp %rdx,%rax
b23a(2): jnle 0xe(%rip)
b23c(2): jmp 0x2c(%rip)
b23e(2): nop 
b240(4): mov 0x28(%rbx),%r15
b244(4): mov 0x78(%rbx),%rcx
b248(3): mov (%rbx),%rsi
b24b(3): add %rdx,%rsi
b24e(5): movzx 0x0(%rsi,%r15,1),%esi
b253(4): movzx 0x0(%rcx,%rsi,1),%esi
b257(4): mov 0x8(%rbx),%rcx
b25b(4): mov %sil,0x0(%rcx,%rdx,1)
b25f(4): add $0x1,%rdx
b263(3): cmp %rdx,%rax
b266(2): jnz 0xffffffda(%rip)
b268(4): mov %rdx,0x30(%rbx)
b26c(4): mov %rdx,0x38(%rbx)
b270(5): jmp 0xfffffb63(%rip)
b275(3): nop (%rax)
b278(3): mov (%rbx),%rax
b27b(4): mov 0x78(%rbx),%rdx
b27f(3): add %rbp,%rax
b282(3): test %rdx,%rdx
b285(6): movzx 0xffffffff(%r11,%rax,1),%eax
b28b(8): mov $0x0,0x38(%rbx)
b293(2): jz 0x6(%rip)
b295(4): movzx 0x0(%rdx,%rax,1),%eax
b299(7): mov 0x80(%rbx),%rcx
b2a0(3): movzx %al,%edx
b2a3(4): sar $0x6,%rdx
b2a7(4): mov 0x0(%rcx,%rdx,8),%rcx
b2ab(5): mov $0x1,%edx
b2b0(4): bt %rax,%rcx
b2b4(2): jb 0x1c(%rip)
b2b6(2): xor %edx,%edx
b2b8(2): cmp $0xa,%al
b2ba(2): jnz 0x16(%rip)
b2bc(2): xor %edx,%edx
b2be(7): cmp $0x0,0x8d(%rbx)
b2c5(3): setnz %dl
b2c8(2): add %edx,%edx
b2ca(6): nop 0x0(%rax,%rax,1)
b2d0(3): mov %edx,0x70(%rbx)
b2d3(5): jmp 0xfffffd75(%rip)
b2d8(6): jnz 0xfffffdf4(%rip)
b2de(2): nop 
b2e0(8): mov $0x0,0x30(%rbx)
b2e8(2): xor %edx,%edx
b2ea(5): jmp 0xfffffe27(%rip)
b2ef(3): sub %r15,%r14
b2f2(3): mov %r14,%r12
b2f5(4): mov %r14,0x30(%rbx)
b2f9(4): lea 0xffffffff(%r8),%rsi
b2fd(3): mov %r10d,%edx
b300(3): mov %rbx,%rdi
b303(5): call 0xfffff6cd(%rip)
b308(3): mov %eax,0x70(%rbx)
b30b(5): jmp 0xfffffc3f(%rip)
b310(3): mov %rbx,%rdi
b313(5): call 0xffffc5bd(%rip)
b318(5): jmp 0xfffffabb(%rip)
b31d(4): mov 0x50(%rbx),%rdx
b321(7): mov $0x0,0x8c(%rbx)
b328(3): add %rbp,%rdx
b32b(3): sub %r15,%rdx
b32e(4): mov %rdx,0x58(%rbx)
b332(4): mov 0x60(%rbx),%rdx
b336(3): add %rbp,%rdx
b339(3): sub %r15,%rdx
b33c(4): mov %rdx,0x68(%rbx)
b340(5): jmp 0xfffffb38(%rip)
b345(3): test %rax,%rax
b348(2): jz 0x75(%rip)
b34a(3): test %r12,%r12
b34d(2): jz 0x70(%rip)
b34f(3): mov (%rbx),%rax
b352(5): movzx 0x0(%rax,%r14,1),%edx
b357(5): mov 0x18(%rsp),%rax
b35c(4): mov %rax,0x20(%rbx)
b360(5): mov $0x1,%eax
b365(5): jmp 0xfffffba5(%rip)
b36a(2): jle 0x1d(%rip)
b36c(4): mov 0x10(%rbx),%rax
b370(4): lea 0x0(%rax,%r12,4),%rdx
b374(4): nop 0x0(%rax)
b378(6): mov $0xffffffff,(%rax)
b37e(4): add $0x4,%rax
b382(3): cmp %rax,%rdx
b385(2): jnz 0xfffffff3(%rip)
b387(7): cmp $0x0,0x8b(%rbx)
b38e(2): jnz 0x5a(%rip)
b390(4): mov %r12,0x38(%rbx)
b394(5): jmp 0xfffffa06(%rip)
b399(2): mov %edx,%edi
b39b(3): mov %edx,(%rsp)
b39e(5): call 0xffff6872(%rip)
b3a3(2): test %eax,%eax
b3a5(2): jnz 0xe(%rip)
b3a7(3): mov (%rsp),%edx
b3aa(3): cmp $0x5f,%edx
b3ad(6): jnz 0xfffffb85(%rip)
b3b3(5): mov $0x1,%eax
b3b8(5): jmp 0xfffffb8f(%rip)
b3bd(2): xor %edx,%edx
b3bf(2): jmp 0xffffff98(%rip)
b3c1(4): mov 0x24(%rsp),%edx
b3c5(3): sub %r12,%rax
b3c8(8): mov $0x0,0x20(%rbx)
b3d0(3): mov %rax,%r12
b3d3(4): mov %rax,0x30(%rbx)
b3d7(3): cmp $0xff,%edx
b3da(6): jnz 0xfffffb4b(%rip)
b3e0(5): jmp 0xfffffe1c(%rip)
b3e5(3): nop (%rax)
b3e8(4): mov 0x8(%rbx),%rdi
b3ec(3): mov %r12,%rdx
b3ef(5): mov $0xff,%esi
b3f4(5): call 0xffff676c(%rip)
b3f9(4): mov 0x30(%rbx),%r12
b3fd(5): jmp 0xfffffb57(%rip)
b402(4): cmp $0x6,%rdx
b406(5): mov $0x6,%edi
b40b(5): lea 0x32(%rsp),%r11
b410(4): cmovng %rdx,%rdi
b414(3): sub $0x1,%edi
b417(2): test %edi,%edi
b419(3): movsxd %edi,%rax
b41c(2): js 0x16(%rip)
b41e(4): movzx 0x0(%rsi,%rax,1),%edi
b422(4): movzx 0x0(%rcx,%rdi,1),%edi
b426(4): mov %dil,0x0(%r11,%rax,1)
b42a(4): sub $0x1,%rax
b42e(2): test %eax,%eax
b430(2): jns 0xffffffee(%rip)
b432(3): mov %r11,%rsi
b435(5): jmp 0xfffffd85(%rip)
b43a(5): call 0xffff6696(%rip)

"sub_epsilon_src_nodes" :
b440(2): push %r15
b442(2): push %r14
b444(3): mov %rdx,%r14
b447(2): push %r13
b449(2): push %r12
b44b(4): lea 0x0(%rsi,%rsi,2),%rdx
b44f(1): push %rbp
b450(1): push %rbx
b451(4): pxor %xmm0,%xmm0
b455(4): sub $0x48,%rsp
b459(9): mov $0x28,%rax
b462(5): mov %rax,0x38(%rsp)
b467(2): xor %eax,%eax
b469(4): mov 0x38(%rdi),%rax
b46d(9): mov $0x0,0x30(%rsp)
b476(5): movaps %xmm0,0x20(%rsp)
b47b(5): mov %rcx,0x10(%rsp)
b480(4): lea 0x0(%rax,%rdx,8),%rbp
b484(4): mov 0x8(%rbp),%r10
b488(3): test %r10,%r10
b48b(6): jle 0x1e7(%rip)
b491(5): lea 0x20(%rsp),%rax
b496(3): mov %rdi,%r12
b499(3): mov %rsi,%r13
b49c(2): xor %ebx,%ebx
b49e(5): mov %rax,0x18(%rsp)
b4a3(2): jmp 0x5a(%rip)
b4a5(3): nop (%rax)
b4a8(3): test %rax,%rax
b4ab(6): jnz 0xdd(%rip)
b4b1(4): mov 0x8(%r14),%rdi
b4b5(4): lea 0x10(%r14),%rsi
b4b9(3): mov %r8,%rdx
b4bc(5): call 0xffffd734(%rip)
b4c1(3): test %rax,%rax
b4c4(6): jz 0xc4(%rip)
b4ca(5): mov 0x38(%r12),%rdx
b4cf(5): mov 0x10(%rsp),%rsi
b4d4(5): mov 0x18(%rsp),%rdi
b4d9(3): add %r9,%rdx
b4dc(5): call 0xffffe224(%rip)
b4e1(2): test %eax,%eax
b4e3(6): jnz 0x17d(%rip)
b4e9(4): mov 0x8(%rbp),%r10
b4ed(3): nop (%rax)
b4f0(4): add $0x1,%rbx
b4f4(3): cmp %rbx,%r10
b4f7(6): jle 0xd9(%rip)
b4fd(4): mov 0x10(%rbp),%rax
b501(4): mov 0x0(%rax,%rbx,8),%rax
b505(3): cmp %rax,%r13
b508(2): jz 0xffffffe8(%rip)
b50a(3): mov %rax,%rdx
b50d(4): shl/sal $0x4,%rdx
b511(4): add (%r12),%rdx
b515(4): test $0x8,0x8(%rdx)
b519(2): jz 0xffffffd7(%rip)
b51b(4): lea 0x0(%rax,%rax,2),%r9
b51f(5): mov 0x28(%r12),%rcx
b524(4): lea 0x10(%rbp),%r11
b528(3): mov %r10,%rdi
b52b(4): shl/sal $0x3,%r9
b52f(3): mov %r11,%rsi
b532(3): add %r9,%rcx
b535(4): mov 0x10(%rcx),%r15
b539(5): mov %rcx,0x8(%rsp)
b53e(3): mov (%r15),%r8
b541(3): mov %r8,%rdx
b544(4): mov %r8,(%rsp)
b548(5): call 0xffffd6a8(%rip)
b54d(5): mov 0x8(%rsp),%rcx
b552(4): mov (%rsp),%r8
b556(5): cmp $0x1,0x8(%rcx)
b55b(6): jnle 0xffffff4d(%rip)
b561(3): test %rax,%rax
b564(2): jnz 0xffffff8c(%rip)
b566(4): mov 0x8(%r14),%rdi
b56a(4): lea 0x10(%r14),%rsi
b56e(3): mov %r8,%rdx
b571(5): call 0xffffd67f(%rip)
b576(3): test %rax,%rax
b579(6): jnz 0xffffff51(%rip)
b57f(5): jmp 0xffffff71(%rip)
b584(4): nop 0x0(%rax)
b588(4): mov 0x8(%r15),%r15
b58c(3): test %r15,%r15
b58f(6): jle 0xffffff61(%rip)
b595(3): mov %r15,%rdx
b598(3): mov %r11,%rsi
b59b(3): mov %r10,%rdi
b59e(5): call 0xffffd652(%rip)
b5a3(3): test %rax,%rax
b5a6(6): jnz 0xffffff4a(%rip)
b5ac(4): mov 0x8(%r14),%rdi
b5b0(4): lea 0x10(%r14),%rsi
b5b4(5): call 0xffffd63c(%rip)
b5b9(3): test %rax,%rax
b5bc(6): jz 0xffffff34(%rip)
b5c2(5): jmp 0xffffff08(%rip)
b5c7(9): nop 0x0(%rax,%rax,1)
b5d0(3): xor %r9d,%r9d
b5d3(3): test %r10,%r10
b5d6(5): lea 0x30(%rsp),%r11
b5db(2): jle 0x51(%rip)
b5dd(3): nop (%rax)
b5e0(4): mov 0x10(%rbp),%rax
b5e4(5): mov 0x28(%rsp),%rdi
b5e9(3): mov %r11,%rsi
b5ec(4): mov 0x0(%rax,%r9,8),%r10
b5f0(3): mov %r10,%rdx
b5f3(5): call 0xffffd5fd(%rip)
b5f8(3): test %rax,%rax
b5fb(2): jnz 0x27(%rip)
b5fd(4): lea 0x10(%r14),%rbx
b601(4): mov 0x8(%r14),%rdi
b605(3): mov %rbx,%rsi
b608(5): call 0xffffd5e8(%rip)
b60d(4): sub $0x1,%rax
b611(3): mov %rax,%rdx
b614(2): js 0xe(%rip)
b616(4): lea 0x8(%r14),%rdi
b61a(3): mov %rbx,%rsi
b61d(5): call 0xffffd753(%rip)
b622(4): add $0x1,%r9
b626(4): cmp %r9,0x8(%rbp)
b62a(2): jnle 0xffffffb6(%rip)
b62c(5): mov 0x30(%rsp),%rdi
b631(5): call 0xffff639f(%rip)
b636(2): xor %eax,%eax
b638(5): mov 0x38(%rsp),%rsi
b63d(9): xor $0x28,%rsi
b646(2): jnz 0x30(%rip)
b648(4): add $0x48,%rsp
b64c(1): pop %rbx
b64d(1): pop %rbp
b64e(2): pop %r12
b650(2): pop %r13
b652(2): pop %r14
b654(2): pop %r15
b656(1): ret near (%rsp)
b657(9): nop 0x0(%rax,%rax,1)
b660(5): mov 0x30(%rsp),%rdi
b665(3): mov %eax,(%rsp)
b668(5): call 0xffff6368(%rip)
b66d(3): mov (%rsp),%eax
b670(2): jmp 0xffffffc8(%rip)
b672(2): xor %edi,%edi
b674(2): jmp 0xffffffbd(%rip)
b676(5): call 0xffff645a(%rip)

"build_trtable" :
b680(2): push %r15
b682(2): push %r14
b684(3): mov %rdi,%r15
b687(2): push %r13
b689(2): push %r12
b68b(5): mov $0x3800,%edi
b690(1): push %rbp
b691(1): push %rbx
b692(7): sub $0x108,%rsp
b699(9): mov $0x28,%rax
b6a2(8): mov %rax,0xf8(%rsp)
b6aa(2): xor %eax,%eax
b6ac(5): mov %rsi,0x8(%rsp)
b6b1(5): call 0xffff656f(%rip)
b6b6(3): test %rax,%rax
b6b9(5): mov %rax,0x18(%rsp)
b6be(6): jz 0x3d2(%rip)
b6c4(5): mov 0x18(%rsp),%rax
b6c9(4): pxor %xmm0,%xmm0
b6cd(7): lea 0x1800(%rax),%rbx
b6d4(5): mov 0x8(%rsp),%rax
b6d9(8): movaps %xmm0,0x90(%rsp)
b6e1(5): mov %rbx,0x40(%rsp)
b6e6(8): movaps %xmm0,0xa0(%rsp)
b6ee(5): cmp $0x0,0x10(%rax)
b6f3(8): mov $0x0,0x58(%rax)
b6fb(8): mov $0x0,0x60(%rax)
b703(6): jle 0xa77(%rip)
b709(5): mov %r15,0x30(%rsp)
b70e(2): xor %ebp,%ebp
b710(9): mov $0x0,0x10(%rsp)
b719(3): mov %rbx,%r15
b71c(5): mov 0x10(%rsp),%rbx
b721(8): lea 0x0(,%rbx,8),%rax
b729(5): mov %rax,0x20(%rsp)
b72e(5): mov 0x8(%rsp),%rax
b733(4): mov 0x18(%rax),%rax
b737(4): mov 0x0(%rax,%rbx,8),%r13
b73b(5): mov 0x30(%rsp),%rax
b740(4): shl/sal $0x4,%r13
b744(3): add (%rax),%r13
b747(5): movzx 0x8(%r13),%r14d
b74c(4): mov 0x8(%r13),%eax
b750(3): shr $0x8,%eax
b753(4): and $0x3ff,%ax
b757(4): cmp $0x1,%r14d
b75b(6): jz 0x365(%rip)
b761(4): cmp $0x3,%r14d
b765(6): jz 0x7cb(%rip)
b76b(4): cmp $0x5,%r14d
b76f(6): jz 0x681(%rip)
b775(4): cmp $0x7,%r14d
b779(6): jz 0x7e0(%rip)
b77f(5): mov 0x8(%rsp),%rbx
b784(6): add $0x1,0x10(%rsp)
b78a(5): mov 0x10(%rsp),%rax
b78f(4): cmp 0x10(%rbx),%rax
b793(2): jl 0xffffff89(%rip)
b795(3): test %rbp,%rbp
b798(5): mov 0x30(%rsp),%r15
b79d(6): jle 0xa5c(%rip)
b7a3(4): lea 0x1(%rbp),%rbx
b7a7(9): mov $0x0,0x78(%rsp)
b7b0(5): mov %rbx,0x70(%rsp)
b7b5(4): shl/sal $0x3,%rbx
b7b9(3): mov %rbx,%rdi
b7bc(5): call 0xffff6464(%rip)
b7c1(3): test %rax,%rax
b7c4(3): mov %rax,%r12
b7c7(8): mov %rax,0x80(%rsp)
b7cf(6): jz 0x800(%rip)
b7d5(a): mov $0x768614336404564053,%rax
b7df(8): mov $0x0,0x6c(%rsp)
b7e7(3): cmp %rax,%rbp
b7ea(6): jnle 0x7e5(%rip)
b7f0(5): lea 0x0(%rbp,%rbp,2),%rax
b7f5(4): shl/sal $0x3,%rax
b7f9(3): mov %rax,%rdi
b7fc(5): mov %rax,0x58(%rsp)
b801(5): call 0xffff641f(%rip)
b806(3): test %rax,%rax
b809(5): mov %rax,0x10(%rsp)
b80e(6): jz 0x7c1(%rip)
b814(5): mov 0x10(%rsp),%rax
b819(4): sub $0x8,%rbx
b81d(5): mov 0x40(%rsp),%r12
b822(4): pxor %xmm0,%xmm0
b826(5): lea 0x70(%rsp),%r14
b82b(5): mov %rbp,0x20(%rsp)
b830(5): mov $0x0,0x4f(%rsp)
b835(3): mov %r15,%rbp
b838(3): add %rbx,%rax
b83b(5): mov %r12,0x50(%rsp)
b840(3): add %rax,%rbx
b843(5): mov %rax,0x30(%rsp)
b848(5): mov 0x18(%rsp),%rax
b84d(8): movaps %xmm0,0xd0(%rsp)
b855(5): mov %rbx,0x38(%rsp)
b85a(2): xor %ebx,%ebx
b85c(4): lea 0x8(%rax),%r13
b860(5): lea 0x6c(%rsp),%rax
b865(8): movaps %xmm0,0xe0(%rsp)
b86d(5): mov %rax,0x28(%rsp)
b872(9): mov $0x0,0x78(%rsp)
b87b(5): cmp $0x0,0x0(%r13)
b880(2): jle 0x48(%rip)
b882(3): xor %r15d,%r15d
b885(3): nop (%rax)
b888(4): mov 0x8(%r13),%rax
b88c(4): mov 0x0(%rax,%r15,8),%rdx
b890(4): mov 0x18(%rbp),%rax
b894(4): mov 0x0(%rax,%rdx,8),%rax
b898(4): cmp $0xffffffff,%rax
b89c(2): jz 0x22(%rip)
b89e(4): lea 0x0(%rax,%rax,2),%rdx
b8a2(4): mov 0x30(%rbp),%rax
b8a6(3): mov %r14,%rdi
b8a9(4): lea 0x0(%rax,%rdx,8),%rsi
b8ad(5): call 0xffffd863(%rip)
b8b2(2): test %eax,%eax
b8b4(4): mov %eax,0x6c(%rsp)
b8b8(6): jnz 0x700(%rip)
b8be(4): add $0x1,%r15
b8c2(4): cmp %r15,0x0(%r13)
b8c6(2): jnle 0xffffffc2(%rip)
b8c8(5): mov 0x28(%rsp),%rdi
b8cd(2): xor %ecx,%ecx
b8cf(3): mov %rbp,%rsi
b8d2(3): mov %r14,%rdx
b8d5(5): call 0xffffe66b(%rip)
b8da(5): mov 0x10(%rsp),%rsi
b8df(3): test %rax,%rax
b8e2(4): mov %rax,0x0(%rsi,%rbx,8)
b8e6(6): jz 0x7b2(%rip)
b8ec(4): cmp $0x0,0x68(%rax)
b8f0(6): js 0x720(%rip)
b8f6(5): mov 0x30(%rsp),%rdi
b8fb(5): mov 0x38(%rsp),%rsi
b900(4): mov %rax,0x0(%rdi,%rbx,8)
b904(5): mov 0x10(%rsp),%rax
b909(4): mov 0x0(%rax,%rbx,8),%rax
b90d(4): mov %rax,0x0(%rsi,%rbx,8)
b911(8): lea 0xd0(%rsp),%rdx
b919(2): xor %eax,%eax
b91b(4): mov 0x0(%rdx,%rax,1),%rcx
b91f(4): or 0x0(%r12,%rax,1),%rcx
b923(4): mov %rcx,0x0(%rdx,%rax,1)
b927(4): add $0x8,%rax
b92b(4): cmp $0x20,%rax
b92f(2): jnz 0xffffffec(%rip)
b931(4): add $0x1,%rbx
b935(4): add $0x18,%r13
b939(4): add $0x20,%r12
b93d(5): cmp 0x20(%rsp),%rbx
b942(6): jnz 0xffffff30(%rip)
b948(5): cmp $0x0,0x4f(%rsp)
b94d(3): mov %rbp,%r15
b950(5): mov 0x20(%rsp),%rbp
b955(5): mov %rdx,0x20(%rsp)
b95a(6): jnz 0x74f(%rip)
b960(5): mov $0x100,%esi
b965(5): mov $0x8,%edi
b96a(5): call 0xffff6256(%rip)
b96f(3): mov %rax,%r11
b972(5): mov 0x8(%rsp),%rax
b977(3): test %r11,%r11
b97a(4): mov %r11,0x58(%rax)
b97e(6): jz 0x63f(%rip)
b984(5): mov 0x40(%rsp),%rbx
b989(5): mov 0x10(%rsp),%r12
b98e(3): xor %r9d,%r9d
b991(5): mov 0x30(%rsp),%r13
b996(5): mov 0x20(%rsp),%rdx
b99b(4): add $0x20,%rbx
b99f(4): mov 0x0(%rdx,%r9,1),%rax
b9a3(3): test %rax,%rax
b9a6(2): jz 0x2e(%rip)
b9a8(3): mov %r9,%rsi
b9ab(5): mov $0x1,%ecx
b9b0(4): shl/sal $0x6,%rsi
b9b4(3): add %r11,%rsi
b9b7(9): nop 0x0(%rax,%rax,1)
b9c0(2): test $0x1,%al
b9c2(6): jnz 0x766(%rip)
b9c8(3): add %rcx,%rcx
b9cb(4): add $0x8,%rsi
b9cf(3): shr $0x1,%rax
b9d2(2): jnz 0xffffffee(%rip)
b9d4(4): add $0x8,%r9
b9d8(4): cmp $0x20,%r9
b9dc(2): jnz 0xffffffc3(%rip)
b9de(8): test $0x4,0xd1(%rsp)
b9e6(2): jz 0x3c(%rip)
b9e8(2): xor %eax,%eax
b9ea(5): mov 0x50(%rsp),%rdx
b9ef(2): jmp 0xf(%rip)
b9f1(4): add $0x1,%rax
b9f5(4): add $0x20,%rdx
b9f9(3): cmp %rbp,%rax
b9fc(2): jz 0x26(%rip)
b9fe(7): test $0x400,(%rdx)
ba05(2): jz 0xffffffec(%rip)
ba07(5): mov 0x38(%rsp),%rbx
ba0c(5): cmp $0x0,0x4f(%rsp)
ba11(4): mov 0x0(%rbx,%rax,8),%rax
ba15(4): mov %rax,0x50(%r11)
ba19(2): jz 0x9(%rip)
ba1b(7): mov %rax,0x850(%r11)
ba22(5): mov 0x10(%rsp),%rdi
ba27(5): call 0xffff5fa9(%rip)
ba2c(8): mov 0x80(%rsp),%rdi
ba34(5): call 0xffff5f9c(%rip)
ba39(5): mov 0x18(%rsp),%rax
ba3e(5): mov 0x58(%rsp),%rbx
ba43(4): lea 0x10(%rax),%rbp
ba47(3): add %rbp,%rbx
ba4a(4): mov 0x0(%rbp),%rdi
ba4e(4): add $0x18,%rbp
ba52(5): call 0xffff5f7e(%rip)
ba57(3): cmp %rbp,%rbx
ba5a(2): jnz 0xfffffff0(%rip)
ba5c(5): mov 0x18(%rsp),%rdi
ba61(5): call 0xffff5f6f(%rip)
ba66(5): mov $0x1,%eax
ba6b(2): jmp 0x27(%rip)
ba6d(3): test %rbp,%rbp
ba70(8): mov $0x0,0x8(%rbx)
ba78(7): mov $0x0,(%rbx)
ba7f(6): jnz 0x331(%rip)
ba85(5): mov 0x18(%rsp),%rdi
ba8a(5): call 0xffff5f46(%rip)
ba8f(1): nop 
ba90(2): xor %eax,%eax
ba92(8): mov 0xf8(%rsp),%rbx
ba9a(9): xor $0x28,%rbx
baa3(6): jnz 0x751(%rip)
baa9(7): add $0x108,%rsp
bab0(1): pop %rbx
bab1(1): pop %rbp
bab2(2): pop %r12
bab4(2): pop %r13
bab6(2): pop %r14
bab8(2): pop %r15
baba(1): ret near (%rsp)
babb(5): nop 0x0(%rax,%rax,1)
bac0(5): movzx 0x0(%r13),%ecx
bac5(8): lea 0x90(%rsp),%r12
bacd(5): mov $0x1,%edi
bad2(3): mov %rcx,%rdx
bad5(3): and $0x3f,%ecx
bad8(4): shr $0x3,%rdx
badc(3): shl/sal %cl,%rdi
badf(3): and $0x18,%edx
bae2(4): or %rdi,0x0(%r12,%rdx,1)
bae6(3): test %ax,%ax
bae9(6): jz 0xc7(%rip)
baef(2): test $0x20,%al
baf1(6): jnz 0x36f(%rip)
baf7(2): test $0x80,%al
baf9(6): jnz 0x29b(%rip)
baff(2): test $0x4,%al
bb01(2): jz 0x54(%rip)
bb03(4): cmp $0x1,%r14d
bb07(6): jz 0x3de(%rip)
bb0d(5): mov 0x30(%rsp),%r8
bb12(8): cmp $0x1,0xb4(%r8)
bb1a(6): jle 0x458(%rip)
bb20(4): mov 0x78(%r8),%rdi
bb24(2): xor %esi,%esi
bb26(2): xor %ecx,%ecx
bb28(4): mov 0x0(%rdi,%rcx,8),%rdx
bb2c(3): not %rdx
bb2f(8): or 0xb8(%r8,%rcx,8),%rdx
bb37(4): and 0x0(%r12,%rcx,8),%rdx
bb3b(4): mov %rdx,0x0(%r12,%rcx,8)
bb3f(4): add $0x1,%rcx
bb43(3): or %rdx,%rsi
bb46(4): cmp $0x4,%rcx
bb4a(2): jnz 0xffffffde(%rip)
bb4c(3): test %rsi,%rsi
bb4f(6): jz 0xfffffc30(%rip)
bb55(2): test $0x8,%al
bb57(2): jz 0x59(%rip)
bb59(4): cmp $0x1,%r14d
bb5d(6): jz 0x334(%rip)
bb63(5): mov 0x30(%rsp),%rdi
bb68(7): cmp $0x1,0xb4(%rdi)
bb6f(6): jle 0x33f(%rip)
bb75(4): mov 0x78(%rdi),%rsi
bb79(2): xor %ecx,%ecx
bb7b(2): xor %edx,%edx
bb7d(8): mov 0xb8(%rdi,%rdx,8),%rax
bb85(4): and 0x0(%rsi,%rdx,8),%rax
bb89(3): not %rax
bb8c(4): and 0x0(%r12,%rdx,8),%rax
bb90(4): mov %rax,0x0(%r12,%rdx,8)
bb94(4): add $0x1,%rdx
bb98(3): or %rax,%rcx
bb9b(4): cmp $0x4,%rdx
bb9f(2): jnz 0xffffffde(%rip)
bba1(3): test %rcx,%rcx
bba4(6): jz 0xfffffbdb(%rip)
bbaa(6): nop 0x0(%rax,%rax,1)
bbb0(2): xor %ebx,%ebx
bbb2(3): test %rbp,%rbp
bbb5(6): jle 0x166(%rip)
bbbb(5): mov %r13,0x28(%rsp)
bbc0(3): mov %r15,%r13
bbc3(5): nop 0x0(%rax,%rax,1)
bbc8(3): mov %rbx,%r10
bbcb(4): shl/sal $0x5,%r10
bbcf(4): cmp $0x1,%r14d
bbd3(2): jnz 0x25(%rip)
bbd5(5): mov 0x28(%rsp),%rax
bbda(3): movzx (%rax),%edx
bbdd(3): mov %rdx,%rax
bbe0(4): shr $0x3,%rax
bbe4(3): and $0x18,%eax
bbe7(3): add %r13,%rax
bbea(4): mov 0x0(%rax,%r10,1),%rax
bbee(4): bt %rdx,%rax
bbf2(6): jnb 0x119(%rip)
bbf8(5): lea 0x0(%r13,%r10,1),%rdi
bbfd(8): lea 0xb0(%rsp),%rsi
bc05(2): xor %ecx,%ecx
bc07(2): xor %eax,%eax
bc09(4): mov 0x0(%r12,%rax,8),%rdx
bc0d(4): and 0x0(%rdi,%rax,8),%rdx
bc11(4): mov %rdx,0x0(%rsi,%rax,8)
bc15(4): add $0x1,%rax
bc19(3): or %rdx,%rcx
bc1c(4): cmp $0x4,%rax
bc20(2): jnz 0xffffffe9(%rip)
bc22(3): test %rcx,%rcx
bc25(6): jz 0xe6(%rip)
bc2b(8): lea 0xd0(%rsp),%r11
bc33(3): xor %r15d,%r15d
bc36(3): xor %r9d,%r9d
bc39(2): xor %ecx,%ecx
bc3b(4): mov 0x0(%r12,%rcx,8),%rsi
bc3f(4): mov 0x0(%rdi,%rcx,8),%rax
bc43(3): mov %rsi,%rdx
bc46(3): not %rdx
bc49(3): and %rax,%rdx
bc4c(3): not %rax
bc4f(3): and %rsi,%rax
bc52(4): mov %rdx,0x0(%r11,%rcx,8)
bc56(3): or %rdx,%r9
bc59(4): mov %rax,0x0(%r12,%rcx,8)
bc5d(4): add $0x1,%rcx
bc61(3): or %rax,%r15
bc64(4): cmp $0x4,%rcx
bc68(2): jnz 0xffffffd3(%rip)
bc6a(5): mov 0x18(%rsp),%rdi
bc6f(4): lea 0x0(%rbx,%rbx,2),%rax
bc73(3): test %r9,%r9
bc76(4): lea 0x0(%rdi,%rax,8),%rdx
bc7a(2): jz 0x6a(%rip)
bc7c(3): mov %rbp,%rax
bc7f(9): movdqa 0xd0(%rsp),%xmm0
bc88(4): shl/sal $0x5,%rax
bc8c(3): mov %rdx,%rsi
bc8f(5): mov %rdx,0x38(%rsp)
bc94(3): add %r13,%rax
bc97(3): movups %xmm0,(%rax)
bc9a(9): movdqa 0xe0(%rsp),%xmm0
bca3(4): movups %xmm0,0x10(%rax)
bca7(5): lea 0x0(%rbp,%rbp,2),%rax
bcac(4): lea 0x0(%rdi,%rax,8),%rdi
bcb0(9): movdqa 0xb0(%rsp),%xmm0
bcb9(6): movups %xmm0,0x0(%r13,%r10,1)
bcbf(9): movdqa 0xc0(%rsp),%xmm0
bcc8(6): movups %xmm0,0x10(%r13,%r10,1)
bcce(5): call 0xffffe082(%rip)
bcd3(2): test %eax,%eax
bcd5(6): jnz 0xdb(%rip)
bcdb(5): mov 0x38(%rsp),%rdx
bce0(4): add $0x1,%rbp
bce4(5): mov 0x8(%rsp),%rax
bce9(5): mov 0x20(%rsp),%rsi
bcee(3): mov %rdx,%rdi
bcf1(4): mov 0x18(%rax),%rax
bcf5(4): mov 0x0(%rax,%rsi,1),%rsi
bcf9(5): call 0xffffb9b7(%rip)
bcfe(2): test %al,%al
bd00(6): jz 0xb0(%rip)
bd06(3): test %r15,%r15
bd09(2): jz 0xf(%rip)
bd0b(4): add $0x1,%rbx
bd0f(3): cmp %rbp,%rbx
bd12(6): jl 0xfffffeb6(%rip)
bd18(3): mov %r13,%r15
bd1b(3): cmp %rbx,%rbp
bd1e(6): jnz 0xfffffa61(%rip)
bd24(3): mov %rbp,%rax
bd27(9): movdqa 0x90(%rsp),%xmm0
bd30(4): shl/sal $0x5,%rax
bd34(5): mov 0x20(%rsp),%rbx
bd39(5): mov $0x8,%edi
bd3e(3): add %r15,%rax
bd41(3): movups %xmm0,(%rax)
bd44(9): movdqa 0xa0(%rsp),%xmm0
bd4d(4): movups %xmm0,0x10(%rax)
bd51(5): mov 0x8(%rsp),%rax
bd56(4): mov 0x18(%rax),%rax
bd5a(4): mov 0x0(%rax,%rbx,1),%r13
bd5e(5): mov 0x18(%rsp),%rbx
bd63(5): lea 0x0(%rbp,%rbp,2),%rax
bd68(4): lea 0x0(%rbx,%rax,8),%rbx
bd6c(7): mov $0x1,(%rbx)
bd73(8): mov $0x1,0x8(%rbx)
bd7b(5): call 0xffff5ea5(%rip)
bd80(3): test %rax,%rax
bd83(4): mov %rax,0x10(%rbx)
bd87(6): jz 0xfffffce6(%rip)
bd8d(3): mov %r13,(%rax)
bd90(4): add $0x1,%rbp
bd94(4): pxor %xmm0,%xmm0
bd98(5): movaps %xmm0,(%r12)
bd9d(6): movaps %xmm0,0x10(%r12)
bda3(5): jmp 0xfffff9dc(%rip)
bda8(8): nop 0x0(%rax,%rax,1)
bdb0(5): mov 0x18(%rsp),%rax
bdb5(4): lea 0x10(%rax),%rbx
bdb9(5): lea 0x0(%rbp,%rbp,2),%rax
bdbe(4): lea 0x0(%rbx,%rax,8),%rbp
bdc2(6): nop 0x0(%rax,%rax,1)
bdc8(3): mov (%rbx),%rdi
bdcb(4): add $0x18,%rbx
bdcf(5): call 0xffff5c01(%rip)
bdd4(3): cmp %rbx,%rbp
bdd7(2): jnz 0xfffffff1(%rip)
bdd9(5): mov 0x18(%rsp),%rdi
bdde(5): call 0xffff5bf2(%rip)
bde3(5): jmp 0xfffffcad(%rip)
bde8(8): nop 0x0(%rax,%rax,1)
bdf0(5): mov 0x30(%rsp),%rsi
bdf5(7): cmp $0x1,0xb4(%rsi)
bdfc(6): jle 0x109(%rip)
be02(4): mov 0x78(%rsi),%rsi
be06(8): lea 0x90(%rsp),%r12
be0e(2): xor %edx,%edx
be10(4): mov 0x0(%r12,%rdx,1),%rcx
be14(4): or 0x0(%rsi,%rdx,1),%rcx
be18(4): mov %rcx,0x0(%r12,%rdx,1)
be1c(4): add $0x8,%rdx
be20(4): cmp $0x20,%rdx
be24(2): jnz 0xffffffec(%rip)
be26(5): mov 0x30(%rsp),%rbx
be2b(7): mov 0xd8(%rbx),%rdx
be32(3): test $0x40,%dl
be35(2): jnz 0xe(%rip)
be37(c): and $0xfffffbff,0x90(%rsp)
be43(6): and $0x80,%edx
be49(6): jz 0xfffffc9d(%rip)
be4f(9): and $0xfffffffe,0x90(%rsp)
be58(5): jmp 0xfffffc8e(%rip)
be5d(3): nop (%rax)
be60(8): mov 0x90(%rsp),%rdx
be68(4): pxor %xmm0,%xmm0
be6c(3): and $0x4,%dh
be6f(5): movaps %xmm0,(%r12)
be74(6): movaps %xmm0,0x10(%r12)
be7a(6): jz 0xfffff905(%rip)
be80(c): mov $0x400,0x90(%rsp)
be8c(5): jmp 0xfffffc6b(%rip)
be91(5): test $0x40,0xa(%r13)
be96(6): jnz 0xfffffefe(%rip)
be9c(5): mov 0x30(%rsp),%rdi
bea1(7): cmp $0x1,0xb4(%rdi)
bea8(6): jnle 0xfffffccd(%rip)
beae(5): mov 0x30(%rsp),%rsi
beb3(2): xor %ecx,%ecx
beb5(2): xor %edx,%edx
beb7(8): mov 0xb8(%rsi,%rdx,8),%rax
bebf(3): not %rax
bec2(4): and 0x0(%r12,%rdx,8),%rax
bec6(4): mov %rax,0x0(%r12,%rdx,8)
beca(4): add $0x1,%rdx
bece(3): or %rax,%rcx
bed1(4): cmp $0x4,%rdx
bed5(2): jnz 0xffffffe2(%rip)
bed7(3): test %rcx,%rcx
beda(6): jnz 0xfffffcd6(%rip)
bee0(5): jmp 0xfffff89f(%rip)
bee5(5): test $0x40,0xa(%r13)
beea(6): jz 0xfffffeaa(%rip)
bef0(5): mov 0x30(%rsp),%r8
bef5(8): cmp $0x1,0xb4(%r8)
befd(6): jnle 0xfffffc23(%rip)
bf03(2): jmp 0x6f(%rip)
bf05(4): pcmpeqd %xmm0,%xmm0
bf09(8): lea 0x90(%rsp),%r12
bf11(8): movaps %xmm0,0x90(%rsp)
bf19(8): movaps %xmm0,0xa0(%rsp)
bf21(5): jmp 0xffffff05(%rip)
bf26(a): nop 0x0(%rax,%rax,1)
bf30(4): mov 0x0(%r13),%rsi
bf34(8): lea 0x90(%rsp),%r12
bf3c(2): xor %edx,%edx
bf3e(4): mov 0x0(%r12,%rdx,1),%rcx
bf42(4): or 0x0(%rsi,%rdx,1),%rcx
bf46(4): mov %rcx,0x0(%r12,%rdx,1)
bf4a(4): add $0x8,%rdx
bf4e(4): cmp $0x20,%rdx
bf52(2): jnz 0xffffffec(%rip)
bf54(5): jmp 0xfffffb92(%rip)
bf59(4): pcmpeqd %xmm0,%xmm0
bf5d(8): lea 0x90(%rsp),%r12
bf65(8): movaps %xmm0,0x90(%rsp)
bf6d(5): jmp 0xfffffeb9(%rip)
bf72(5): mov 0x30(%rsp),%rdi
bf77(2): xor %esi,%esi
bf79(2): xor %edx,%edx
bf7b(4): mov 0x0(%r12,%rdx,8),%rcx
bf7f(8): and 0xb8(%rdi,%rdx,8),%rcx
bf87(4): mov %rcx,0x0(%r12,%rdx,8)
bf8b(4): add $0x1,%rdx
bf8f(3): or %rcx,%rsi
bf92(4): cmp $0x4,%rdx
bf96(2): jnz 0xffffffe5(%rip)
bf98(3): test %rsi,%rsi
bf9b(6): jnz 0xfffffbba(%rip)
bfa1(5): jmp 0xfffff7de(%rip)
bfa6(4): mov 0x6c(%rsp),%edx
bfaa(2): test %edx,%edx
bfac(6): jz 0x8b(%rip)
bfb2(6): nop 0x0(%rax,%rax,1)
bfb8(5): mov 0x20(%rsp),%rbp
bfbd(5): mov 0x10(%rsp),%rdi
bfc2(5): call 0xffff5a0e(%rip)
bfc7(8): mov 0x80(%rsp),%r12
bfcf(3): mov %r12,%rdi
bfd2(5): call 0xffff59fe(%rip)
bfd7(5): mov 0x18(%rsp),%rax
bfdc(4): lea 0x10(%rax),%rbx
bfe0(5): lea 0x0(%rbp,%rbp,2),%rax
bfe5(4): lea 0x0(%rbx,%rax,8),%rbp
bfe9(7): nop 0x0(%rax)
bff0(3): mov (%rbx),%rdi
bff3(4): add $0x18,%rbx
bff7(5): call 0xffff59d9(%rip)
bffc(3): cmp %rbx,%rbp
bfff(2): jnz 0xfffffff1(%rip)
c001(5): mov 0x18(%rsp),%rdi
c006(5): call 0xffff59ca(%rip)
c00b(5): jmp 0xfffffa85(%rip)
c010(5): mov 0x28(%rsp),%rdi
c015(5): mov $0x1,%ecx
c01a(3): mov %r14,%rdx
c01d(3): mov %rbp,%rsi
c020(5): call 0xffffdf20(%rip)
c025(5): mov 0x30(%rsp),%rdi
c02a(3): test %rax,%rax
c02d(4): mov %rax,0x0(%rdi,%rbx,8)
c031(6): jz 0xffffff75(%rip)
c037(5): mov 0x10(%rsp),%rdi
c03c(4): cmp 0x0(%rdi,%rbx,8),%rax
c040(2): jz 0x1b(%rip)
c042(5): movzx 0x4f(%rsp),%edi
c047(7): cmp $0x2,0xb4(%rbp)
c04e(5): mov $0x1,%eax
c053(3): cmovnl %eax,%edi
c056(5): mov %dil,0x4f(%rsp)
c05b(5): mov 0x28(%rsp),%rdi
c060(3): mov %rbp,%rsi
c063(5): mov $0x2,%ecx
c068(3): mov %r14,%rdx
c06b(5): call 0xffffded5(%rip)
c070(5): mov 0x38(%rsp),%rsi
c075(3): test %rax,%rax
c078(4): mov %rax,0x0(%rsi,%rbx,8)
c07c(6): jnz 0xfffff895(%rip)
c082(4): mov 0x6c(%rsp),%eax
c086(2): test %eax,%eax
c088(6): jz 0xfffff889(%rip)
c08e(5): jmp 0xffffff2a(%rip)
c093(5): nop 0x0(%rax,%rax,1)
c098(4): mov 0x6c(%rsp),%ecx
c09c(2): test %ecx,%ecx
c09e(6): jz 0xfffff84e(%rip)
c0a4(5): jmp 0xffffff14(%rip)
c0a9(5): mov $0x200,%esi
c0ae(5): mov $0x8,%edi
c0b3(5): call 0xffff5b0d(%rip)
c0b8(3): mov %rax,%r11
c0bb(5): mov 0x8(%rsp),%rax
c0c0(3): test %r11,%r11
c0c3(4): mov %r11,0x60(%rax)
c0c7(6): jz 0xfffffef6(%rip)
c0cd(5): mov 0x40(%rsp),%r13
c0d2(5): mov 0x10(%rsp),%r10
c0d7(3): mov %r11,%r12
c0da(5): mov 0x30(%rsp),%r14
c0df(5): mov 0x20(%rsp),%rdx
c0e4(2): xor %ebx,%ebx
c0e6(4): add $0x20,%r13
c0ea(4): mov 0x0(%rdx,%rbx,1),%rax
c0ee(3): test %rax,%rax
c0f1(2): jz 0x1e(%rip)
c0f3(3): mov %r12,%rsi
c0f6(5): mov $0x1,%ecx
c0fb(2): test $0x1,%al
c0fd(6): jnz 0xaf(%rip)
c103(3): add %rcx,%rcx
c106(4): add $0x8,%rsi
c10a(3): shr $0x1,%rax
c10d(2): jnz 0xffffffee(%rip)
c10f(4): add $0x8,%rbx
c113(7): add $0x200,%r12
c11a(4): cmp $0x20,%rbx
c11e(2): jnz 0xffffffcc(%rip)
c120(5): jmp 0xfffff8be(%rip)
c125(3): nop (%rax)
c128(5): mov 0x18(%rsp),%rdi
c12d(8): test %rcx,0x1800(%rdi,%r9,1)
c135(2): jnz 0x72(%rip)
c137(4): lea 0x0(%rbx,%r9,1),%rdi
c13b(3): xor %r8d,%r8d
c13e(2): nop 
c140(3): mov (%rdi),%r10
c143(4): add $0x1,%r8
c147(4): add $0x20,%rdi
c14b(3): and %rcx,%r10
c14e(3): test %r10,%r10
c151(2): jz 0xffffffef(%rip)
c153(4): shl/sal $0x3,%r8
c157(8): test %rcx,0xb8(%r15,%r9,1)
c15f(2): jz 0xf(%rip)
c161(5): mov 0x0(%r13,%r8,1),%rdi
c166(3): mov %rdi,(%rsi)
c169(5): jmp 0xfffff85f(%rip)
c16e(4): mov 0x0(%r12,%r8,1),%rdi
c172(3): mov %rdi,(%rsi)
c175(5): jmp 0xfffff853(%rip)
c17a(5): mov 0x18(%rsp),%rdi
c17f(5): call 0xffff5851(%rip)
c184(5): mov $0x100,%esi
c189(5): mov $0x8,%edi
c18e(5): call 0xffff5a32(%rip)
c193(5): mov 0x8(%rsp),%rbx
c198(3): test %rax,%rax
c19b(4): mov %rax,0x58(%rbx)
c19f(3): setnz %al
c1a2(5): jmp 0xfffff8f0(%rip)
c1a7(3): xor %r8d,%r8d
c1aa(2): jmp 0xffffffad(%rip)
c1ac(5): mov 0x18(%rsp),%rdi
c1b1(8): test %rcx,0x1800(%rdi,%rbx,1)
c1b9(2): jnz 0x37(%rip)
c1bb(5): lea 0x0(%r13,%rbx,1),%r9
c1c0(3): xor %r8d,%r8d
c1c3(3): mov (%r9),%r15
c1c6(4): add $0x1,%r8
c1ca(4): add $0x20,%r9
c1ce(3): mov %r8,%rdi
c1d1(3): and %rcx,%r15
c1d4(3): test %r15,%r15
c1d7(2): jz 0xffffffec(%rip)
c1d9(4): mov 0x0(%r10,%rdi,8),%r8
c1dd(3): mov %r8,(%rsi)
c1e0(4): mov 0x0(%r14,%rdi,8),%rdi
c1e4(7): mov %rdi,0x800(%rsi)
c1eb(5): jmp 0xffffff18(%rip)
c1f0(2): xor %edi,%edi
c1f2(2): jmp 0xffffffe7(%rip)
c1f4(5): call 0xffff58dc(%rip)
c1f9(5): mov 0x18(%rsp),%rdi
c1fe(5): call 0xffff57d2(%rip)
c203(3): test %rbp,%rbp
c206(6): jnz 0xfffff88a(%rip)
c20c(5): jmp 0xffffff78(%rip)

"calc_first" :
c220(4): cmp $0x10,0x30(%rsi)
c224(2): jz 0x64(%rip)
c226(1): push %rbp
c227(1): push %rbx
c228(3): mov %rsi,%rbx
c22b(3): mov %rdi,%rbp
c22e(4): sub $0x8,%rsp
c232(4): mov %rsi,0x18(%rbx)
c236(4): mov 0x30(%rbx),%rdx
c23a(4): mov 0x28(%rsi),%rsi
c23e(5): call 0xffffc152(%rip)
c243(4): cmp $0xffffffff,%rax
c247(3): mov %rax,%rdx
c24a(4): mov %rax,0x38(%rbx)
c24e(2): jz 0x52(%rip)
c250(2): xor %eax,%eax
c252(4): cmp $0xc,0x30(%rbx)
c256(2): jnz 0x26(%rip)
c258(3): mov 0x28(%rbx),%ecx
c25b(4): shl/sal $0x4,%rdx
c25f(4): add 0x0(%rbp),%rdx
c263(6): and $0x3ff,%ecx
c269(3): shl/sal $0x8,%ecx
c26c(2): mov %ecx,%esi
c26e(3): mov 0x8(%rdx),%ecx
c271(6): and $0xfffc00ff,%ecx
c277(2): or %esi,%ecx
c279(3): mov %ecx,0x8(%rdx)
c27c(4): add $0x8,%rsp
c280(1): pop %rbx
c281(1): pop %rbp
c282(1): ret near (%rsp)
c283(5): nop 0x0(%rax,%rax,1)
c288(4): mov 0x8(%rsi),%rax
c28c(4): mov 0x18(%rax),%rdx
c290(4): mov 0x38(%rax),%rax
c294(4): mov %rdx,0x18(%rsi)
c298(4): mov %rax,0x38(%rsi)
c29c(2): xor %eax,%eax
c29e(1): ret near (%rsp)
c29f(1): nop 
c2a0(5): mov $0xc,%eax
c2a5(2): jmp 0xffffffd7(%rip)

"free_fail_stack_return.part.24" :
c2b0(2): push %r12
c2b2(1): push %rbp
c2b3(3): mov %rdi,%rbp
c2b6(1): push %rbx
c2b7(4): cmp $0x0,(%rdi)
c2bb(2): jle 0x37(%rip)
c2bd(2): xor %ebx,%ebx
c2bf(3): xor %r12d,%r12d
c2c2(6): nop 0x0(%rax,%rax,1)
c2c8(4): mov 0x10(%rbp),%rax
c2cc(4): add $0x1,%r12
c2d0(5): mov 0x28(%rax,%rbx,1),%rdi
c2d5(5): call 0xffff56fb(%rip)
c2da(4): mov 0x10(%rbp),%rax
c2de(5): mov 0x10(%rax,%rbx,1),%rdi
c2e3(4): add $0x30,%rbx
c2e7(5): call 0xffff56e9(%rip)
c2ec(4): cmp 0x0(%rbp),%r12
c2f0(2): jl 0xffffffd8(%rip)
c2f2(1): pop %rbx
c2f3(4): mov 0x10(%rbp),%rdi
c2f7(1): pop %rbp
c2f8(2): pop %r12
c2fa(5): jmp 0xffff56d6(%rip)

"pop_fail_stack.isra.25" :
c300(2): push %r12
c302(1): push %rbp
c303(1): push %rbx
c304(3): mov (%rdi),%rax
c307(4): sub $0x1,%rax
c30b(3): test %rax,%rax
c30e(3): mov %rax,(%rdi)
c311(2): js 0x64(%rip)
c313(4): lea 0x0(%rax,%rax,2),%rbx
c317(3): mov (%rsi),%rax
c31a(3): mov %rsi,%r12
c31d(4): shl/sal $0x4,%rcx
c321(3): mov %r9,%rbp
c324(3): mov %r8,%rdi
c327(4): shl/sal $0x4,%rbx
c32b(3): add %rbx,%rax
c32e(3): mov (%rax),%rsi
c331(3): mov %rsi,(%rdx)
c334(4): mov 0x10(%rax),%rsi
c338(3): mov %rcx,%rdx
c33b(5): call 0xffff58a5(%rip)
c340(4): mov 0x10(%rbp),%rdi
c344(5): call 0xffff568c(%rip)
c349(4): mov (%r12),%rax
c34d(5): mov 0x10(%rax,%rbx,1),%rdi
c352(5): call 0xffff567e(%rip)
c357(4): add (%r12),%rbx
c35b(5): movdqu 0x18(%rbx),%xmm0
c360(4): movaps %xmm0,0x0(%rbp)
c364(4): mov 0x28(%rbx),%rax
c368(4): mov %rax,0x10(%rbp)
c36c(4): mov 0x8(%rbx),%rax
c370(1): pop %rbx
c371(1): pop %rbp
c372(2): pop %r12
c374(1): ret near (%rsp)
c375(7): lea 0xacc4(%rip),%rcx
c37c(7): lea 0xa6fd(%rip),%rsi
c383(7): lea 0xa75e(%rip),%rdi
c38a(5): mov $0x555,%edx
c38f(5): call 0xffff57c1(%rip)

"build_equiv_class.isra.27" :
c3a0(1): push %rbp
c3a1(1): push %rbx
c3a2(3): mov %rdi,%rbp
c3a5(3): mov %rsi,%rdi
c3a8(3): mov %rsi,%rbx
c3ab(4): sub $0x8,%rsp
c3af(5): call 0xffff5701(%rip)
c3b4(4): cmp $0x1,%rax
c3b8(2): jnz 0x28(%rip)
c3ba(3): movzx (%rbx),%ecx
c3bd(3): mov %rcx,%rdx
c3c0(3): and $0x3f,%ecx
c3c3(4): shr $0x3,%rdx
c3c7(3): shl/sal %cl,%rax
c3ca(3): and $0x18,%edx
c3cd(5): or %rax,0x0(%rbp,%rdx,1)
c3d2(4): add $0x8,%rsp
c3d6(2): xor %eax,%eax
c3d8(1): pop %rbx
c3d9(1): pop %rbp
c3da(1): ret near (%rsp)
c3db(5): nop 0x0(%rax,%rax,1)
c3e0(4): add $0x8,%rsp
c3e4(5): mov $0x3,%eax
c3e9(1): pop %rbx
c3ea(1): pop %rbp
c3eb(1): ret near (%rsp)

"build_charclass.isra.29" :
c3f0(2): push %r14
c3f2(2): push %r13
c3f4(3): mov %rcx,%r13
c3f7(2): push %r12
c3f9(1): push %rbp
c3fa(3): mov %r9,%r12
c3fd(1): push %rbx
c3fe(3): mov %rdi,%rbp
c401(3): mov %rsi,%rbx
c404(4): sub $0x10,%rsp
c408(9): test $0x400000,0x40(%rsp)
c411(2): jz 0x27(%rip)
c413(7): lea 0xa6dd(%rip),%rdi
c41a(5): mov $0x6,%ecx
c41f(3): mov %r9,%rsi
c422(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c424(3): setnbe %al
c427(2): sbb $0x0,%al
c429(2): test %al,%al
c42b(6): jnz 0xfb(%rip)
c431(7): lea 0xa6b9(%rip),%r12
c438(4): mov 0x0(%r13),%rcx
c43c(3): cmp %rcx,(%r8)
c43f(3): mov (%rdx),%rax
c442(6): jz 0x117(%rip)
c448(4): lea 0x1(%rcx),%rdx
c44c(3): mov %r12,%rdi
c44f(4): mov %rdx,0x0(%r13)
c453(4): lea 0x0(%rax,%rcx,8),%r13
c457(5): call 0xffff5749(%rip)
c45c(7): lea 0xa6a0(%rip),%rdi
c463(4): mov %rax,0x0(%r13)
c467(5): mov $0x6,%ecx
c46c(3): mov %r12,%rsi
c46f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c471(3): setnbe %al
c474(2): sbb $0x0,%al
c476(2): test %al,%al
c478(2): jz 0x70(%rip)
c47a(7): lea 0xa688(%rip),%rdi
c481(5): mov $0x6,%ecx
c486(3): mov %r12,%rsi
c489(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c48b(3): setnbe %al
c48e(2): sbb $0x0,%al
c490(2): test %al,%al
c492(6): jnz 0x106(%rip)
c498(5): call 0xffff5928(%rip)
c49d(2): xor %ecx,%ecx
c49f(3): test %rbp,%rbp
c4a2(3): mov (%rax),%rdx
c4a5(5): mov $0x1,%edi
c4aa(6): jnz 0x2c0(%rip)
c4b0(4): test $0x2,0x0(%rdx,%rcx,2)
c4b4(2): jz 0x13(%rip)
c4b6(3): mov %rcx,%rax
c4b9(3): mov %rdi,%rsi
c4bc(4): sar $0x6,%rax
c4c0(3): shl/sal %cl,%rsi
c4c3(4): or %rsi,0x0(%rbx,%rax,8)
c4c7(4): add $0x1,%rcx
c4cb(7): cmp $0x100,%rcx
c4d2(2): jnz 0xffffffde(%rip)
c4d4(2): xor %eax,%eax
c4d6(4): add $0x10,%rsp
c4da(1): pop %rbx
c4db(1): pop %rbp
c4dc(2): pop %r12
c4de(2): pop %r13
c4e0(2): pop %r14
c4e2(1): ret near (%rsp)
c4e3(5): nop 0x0(%rax,%rax,1)
c4e8(5): call 0xffff58d8(%rip)
c4ed(2): xor %ecx,%ecx
c4ef(3): test %rbp,%rbp
c4f2(3): mov (%rax),%rdx
c4f5(5): mov $0x1,%edi
c4fa(6): jnz 0x1f0(%rip)
c500(4): test $0x8,0x0(%rdx,%rcx,2)
c504(2): jz 0x13(%rip)
c506(3): mov %rcx,%rax
c509(3): mov %rdi,%rsi
c50c(4): sar $0x6,%rax
c510(3): shl/sal %cl,%rsi
c513(4): or %rsi,0x0(%rbx,%rax,8)
c517(4): add $0x1,%rcx
c51b(7): cmp $0x100,%rcx
c522(2): jnz 0xffffffde(%rip)
c524(2): jmp 0xffffffb0(%rip)
c526(7): lea 0xa5d0(%rip),%rdi
c52d(5): mov $0x6,%ecx
c532(3): mov %r9,%rsi
c535(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c537(4): mov 0x0(%r13),%rcx
c53b(3): setnbe %al
c53e(2): sbb $0x0,%al
c540(2): test %al,%al
c542(7): lea 0xa5a8(%rip),%rax
c549(4): cmove %rax,%r12
c54d(3): cmp %rcx,(%r8)
c550(3): mov (%rdx),%rax
c553(6): jnz 0xfffffef5(%rip)
c559(5): lea 0x1(%rcx,%rcx,1),%r14
c55e(3): mov %rax,%rdi
c561(5): mov %r8,0x8(%rsp)
c566(4): mov %rdx,(%rsp)
c56a(8): lea 0x0(,%r14,8),%rsi
c572(5): call 0xffff571e(%rip)
c577(3): test %rax,%rax
c57a(6): jz 0x31e(%rip)
c580(4): mov (%rsp),%rdx
c584(5): mov 0x8(%rsp),%r8
c589(3): mov %rax,(%rdx)
c58c(3): mov %r14,(%r8)
c58f(4): mov 0x0(%r13),%rcx
c593(5): jmp 0xfffffeb5(%rip)
c598(7): lea 0xa55e(%rip),%rdi
c59f(5): mov $0x6,%ecx
c5a4(3): mov %r12,%rsi
c5a7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c5a9(3): setnbe %al
c5ac(2): sbb $0x0,%al
c5ae(2): test %al,%al
c5b0(2): jz 0x6a(%rip)
c5b2(7): lea 0xa556(%rip),%rdi
c5b9(5): mov $0x6,%ecx
c5be(3): mov %r12,%rsi
c5c1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c5c3(3): setnbe %al
c5c6(2): sbb $0x0,%al
c5c8(2): test %al,%al
c5ca(6): jnz 0x98(%rip)
c5d0(5): call 0xffff57f0(%rip)
c5d5(2): xor %ecx,%ecx
c5d7(3): test %rbp,%rbp
c5da(3): mov (%rax),%rdx
c5dd(5): mov $0x1,%edi
c5e2(6): jnz 0x35c(%rip)
c5e8(8): nop 0x0(%rax,%rax,1)
c5f0(5): test $0x20,0x1(%rdx,%rcx,2)
c5f5(2): jz 0x13(%rip)
c5f7(3): mov %rcx,%rax
c5fa(3): mov %rdi,%rsi
c5fd(4): sar $0x6,%rax
c601(3): shl/sal %cl,%rsi
c604(4): or %rsi,0x0(%rbx,%rax,8)
c608(4): add $0x1,%rcx
c60c(7): cmp $0x100,%rcx
c613(2): jnz 0xffffffdd(%rip)
c615(5): jmp 0xfffffebf(%rip)
c61a(5): call 0xffff57a6(%rip)
c61f(2): xor %ecx,%ecx
c621(3): test %rbp,%rbp
c624(3): mov (%rax),%rdx
c627(5): mov $0x1,%edi
c62c(6): jnz 0x1d6(%rip)
c632(6): nop 0x0(%rax,%rax,1)
c638(5): test $0x2,0x1(%rdx,%rcx,2)
c63d(2): jz 0x13(%rip)
c63f(3): mov %rcx,%rax
c642(3): mov %rdi,%rsi
c645(4): sar $0x6,%rax
c649(3): shl/sal %cl,%rsi
c64c(4): or %rsi,0x0(%rbx,%rax,8)
c650(4): add $0x1,%rcx
c654(7): cmp $0x100,%rcx
c65b(2): jnz 0xffffffdd(%rip)
c65d(5): jmp 0xfffffe77(%rip)
c662(7): lea 0xa488(%rip),%rdi
c669(5): mov $0x6,%ecx
c66e(3): mov %r12,%rsi
c671(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c673(3): setnbe %al
c676(2): sbb $0x0,%al
c678(2): test %al,%al
c67a(6): jz 0xa9(%rip)
c680(7): lea 0xa4a7(%rip),%rdi
c687(5): mov $0x6,%ecx
c68c(3): mov %r12,%rsi
c68f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c691(3): setnbe %al
c694(2): sbb $0x0,%al
c696(2): test %al,%al
c698(6): jnz 0x10b(%rip)
c69e(5): call 0xffff5722(%rip)
c6a3(2): xor %ecx,%ecx
c6a5(3): test %rbp,%rbp
c6a8(3): mov (%rax),%rdx
c6ab(5): mov $0x1,%edi
c6b0(6): jnz 0x4aa(%rip)
c6b6(a): nop 0x0(%rax,%rax,1)
c6c0(5): test $0x8,0x1(%rdx,%rcx,2)
c6c5(2): jz 0x13(%rip)
c6c7(3): mov %rcx,%rax
c6ca(3): mov %rdi,%rsi
c6cd(4): sar $0x6,%rax
c6d1(3): shl/sal %cl,%rsi
c6d4(4): or %rsi,0x0(%rbx,%rax,8)
c6d8(4): add $0x1,%rcx
c6dc(7): cmp $0x100,%rcx
c6e3(2): jnz 0xffffffdd(%rip)
c6e5(5): jmp 0xfffffdef(%rip)
c6ea(2): xor %eax,%eax
c6ec(4): nop 0x0(%rax)
c6f0(4): test $0x8,0x0(%rdx,%rax,2)
c6f4(2): jz 0x1e(%rip)
c6f6(5): movzx 0x0(%rbp,%rax,1),%ecx
c6fb(3): mov %rdi,%r10
c6fe(3): mov %rcx,%rsi
c701(3): and $0x3f,%ecx
c704(4): shr $0x3,%rsi
c708(3): shl/sal %cl,%r10
c70b(3): and $0x18,%esi
c70e(4): or %r10,0x0(%rbx,%rsi,1)
c712(4): add $0x1,%rax
c716(6): cmp $0x100,%rax
c71c(2): jnz 0xffffffd4(%rip)
c71e(5): jmp 0xfffffdb6(%rip)
c723(5): call 0xffff569d(%rip)
c728(2): xor %ecx,%ecx
c72a(3): test %rbp,%rbp
c72d(3): mov (%rax),%rdx
c730(5): mov $0x1,%edi
c735(6): jnz 0x1d3(%rip)
c73b(5): nop 0x0(%rax,%rax,1)
c740(5): test $0x4,0x1(%rdx,%rcx,2)
c745(2): jz 0x13(%rip)
c747(3): mov %rcx,%rax
c74a(3): mov %rdi,%rsi
c74d(4): sar $0x6,%rax
c751(3): shl/sal %cl,%rsi
c754(4): or %rsi,0x0(%rbx,%rax,8)
c758(4): add $0x1,%rcx
c75c(7): cmp $0x100,%rcx
c763(2): jnz 0xffffffdd(%rip)
c765(5): jmp 0xfffffd6f(%rip)
c76a(2): xor %eax,%eax
c76c(4): nop 0x0(%rax)
c770(4): test $0x2,0x0(%rdx,%rax,2)
c774(2): jz 0x1e(%rip)
c776(5): movzx 0x0(%rbp,%rax,1),%ecx
c77b(3): mov %rdi,%r11
c77e(3): mov %rcx,%rsi
c781(3): and $0x3f,%ecx
c784(4): shr $0x3,%rsi
c788(3): shl/sal %cl,%r11
c78b(3): and $0x18,%esi
c78e(4): or %r11,0x0(%rbx,%rsi,1)
c792(4): add $0x1,%rax
c796(6): cmp $0x100,%rax
c79c(2): jnz 0xffffffd4(%rip)
c79e(5): jmp 0xfffffd36(%rip)
c7a3(7): lea 0xa36b(%rip),%rdi
c7aa(5): mov $0x6,%ecx
c7af(3): mov %r12,%rsi
c7b2(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c7b4(3): setnbe %al
c7b7(2): sbb $0x0,%al
c7b9(2): test %al,%al
c7bb(2): jnz 0x81(%rip)
c7bd(5): call 0xffff5603(%rip)
c7c2(2): xor %ecx,%ecx
c7c4(3): test %rbp,%rbp
c7c7(3): mov (%rax),%rdx
c7ca(5): mov $0x1,%edi
c7cf(6): jnz 0x3f8(%rip)
c7d5(3): nop (%rax)
c7d8(5): test $0x40,0x1(%rdx,%rcx,2)
c7dd(2): jz 0x13(%rip)
c7df(3): mov %rcx,%rax
c7e2(3): mov %rdi,%rsi
c7e5(4): sar $0x6,%rax
c7e9(3): shl/sal %cl,%rsi
c7ec(4): or %rsi,0x0(%rbx,%rax,8)
c7f0(4): add $0x1,%rcx
c7f4(7): cmp $0x100,%rcx
c7fb(2): jnz 0xffffffdd(%rip)
c7fd(5): jmp 0xfffffcd7(%rip)
c802(2): xor %eax,%eax
c804(4): nop 0x0(%rax)
c808(5): test $0x2,0x1(%rdx,%rax,2)
c80d(2): jz 0x1e(%rip)
c80f(5): movzx 0x0(%rbp,%rax,1),%ecx
c814(3): mov %rdi,%r14
c817(3): mov %rcx,%rsi
c81a(3): and $0x3f,%ecx
c81d(4): shr $0x3,%rsi
c821(3): shl/sal %cl,%r14
c824(3): and $0x18,%esi
c827(4): or %r14,0x0(%rbx,%rsi,1)
c82b(4): add $0x1,%rax
c82f(6): cmp $0x100,%rax
c835(2): jnz 0xffffffd3(%rip)
c837(5): jmp 0xfffffc9d(%rip)
c83c(7): lea 0xa2b4(%rip),%rdi
c843(5): mov $0x6,%ecx
c848(3): mov %r12,%rsi
c84b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c84d(3): setnbe %al
c850(2): sbb $0x0,%al
c852(2): test %al,%al
c854(2): jnz 0x4e(%rip)
c856(5): call 0xffff556a(%rip)
c85b(2): xor %ecx,%ecx
c85d(3): test %rbp,%rbp
c860(3): mov (%rax),%rax
c863(5): mov $0x1,%edi
c868(6): jnz 0x328(%rip)
c86e(5): test $0x1,0x1(%rax,%rcx,2)
c873(2): jz 0x13(%rip)
c875(3): mov %rcx,%rdx
c878(3): mov %rdi,%rsi
c87b(4): sar $0x6,%rdx
c87f(3): shl/sal %cl,%rsi
c882(4): or %rsi,0x0(%rbx,%rdx,8)
c886(4): add $0x1,%rcx
c88a(7): cmp $0x100,%rcx
c891(2): jnz 0xffffffdd(%rip)
c893(5): jmp 0xfffffc41(%rip)
c898(5): mov $0xc,%eax
c89d(5): jmp 0xfffffc39(%rip)
c8a2(7): lea 0xa272(%rip),%rdi
c8a9(5): mov $0x6,%ecx
c8ae(3): mov %r12,%rsi
c8b1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c8b3(3): setnbe %al
c8b6(2): sbb $0x0,%al
c8b8(2): test %al,%al
c8ba(6): jnz 0xf4(%rip)
c8c0(5): call 0xffff5500(%rip)
c8c5(2): xor %ecx,%ecx
c8c7(3): test %rbp,%rbp
c8ca(3): mov (%rax),%rdx
c8cd(5): mov $0x1,%esi
c8d2(6): jnz 0xa2(%rip)
c8d8(4): test $0x1,0x0(%rdx,%rcx,2)
c8dc(2): jz 0x13(%rip)
c8de(3): mov %rcx,%rax
c8e1(3): mov %rsi,%rdi
c8e4(4): sar $0x6,%rax
c8e8(3): shl/sal %cl,%rdi
c8eb(4): or %rdi,0x0(%rbx,%rax,8)
c8ef(4): add $0x1,%rcx
c8f3(7): cmp $0x100,%rcx
c8fa(2): jnz 0xffffffde(%rip)
c8fc(5): jmp 0xfffffbd8(%rip)
c901(7): nop 0x0(%rax)
c908(2): xor %eax,%eax
c90a(5): test $0x4,0x1(%rdx,%rax,2)
c90f(2): jz 0x1e(%rip)
c911(5): movzx 0x0(%rbp,%rax,1),%ecx
c916(3): mov %rdi,%r9
c919(3): mov %rcx,%rsi
c91c(3): and $0x3f,%ecx
c91f(4): shr $0x3,%rsi
c923(3): shl/sal %cl,%r9
c926(3): and $0x18,%esi
c929(4): or %r9,0x0(%rbx,%rsi,1)
c92d(4): add $0x1,%rax
c931(6): cmp $0x100,%rax
c937(2): jnz 0xffffffd3(%rip)
c939(5): jmp 0xfffffb9b(%rip)
c93e(2): xor %eax,%eax
c940(5): test $0x20,0x1(%rdx,%rax,2)
c945(2): jz 0x1e(%rip)
c947(5): movzx 0x0(%rbp,%rax,1),%ecx
c94c(3): mov %rdi,%r9
c94f(3): mov %rcx,%rsi
c952(3): and $0x3f,%ecx
c955(4): shr $0x3,%rsi
c959(3): shl/sal %cl,%r9
c95c(3): and $0x18,%esi
c95f(4): or %r9,0x0(%rbx,%rsi,1)
c963(4): add $0x1,%rax
c967(6): cmp $0x100,%rax
c96d(2): jnz 0xffffffd3(%rip)
c96f(5): jmp 0xfffffb65(%rip)
c974(2): xor %eax,%eax
c976(5): mov $0x1,%edi
c97b(4): test $0x1,0x0(%rdx,%rax,2)
c97f(2): jz 0x1e(%rip)
c981(5): movzx 0x0(%rbp,%rax,1),%ecx
c986(3): mov %rdi,%r14
c989(3): mov %rcx,%rsi
c98c(3): and $0x3f,%ecx
c98f(4): shr $0x3,%rsi
c993(3): shl/sal %cl,%r14
c996(3): and $0x18,%esi
c999(4): or %r14,0x0(%rbx,%rsi,1)
c99d(4): add $0x1,%rax
c9a1(6): cmp $0x100,%rax
c9a7(2): jnz 0xffffffd4(%rip)
c9a9(5): jmp 0xfffffb2b(%rip)
c9ae(7): lea 0xa16c(%rip),%rsi
c9b5(3): mov %r12,%rdi
c9b8(5): call 0xffff5218(%rip)
c9bd(2): test %eax,%eax
c9bf(2): jnz 0x7b(%rip)
c9c1(5): call 0xffff53ff(%rip)
c9c6(2): xor %ecx,%ecx
c9c8(3): test %rbp,%rbp
c9cb(3): mov (%rax),%rsi
c9ce(5): mov $0x1,%edx
c9d3(2): jnz 0x2c(%rip)
c9d5(5): cmp $0x0,0x0(%rsi,%rcx,2)
c9da(2): jns 0x13(%rip)
c9dc(3): mov %rcx,%rax
c9df(3): mov %rdx,%rdi
c9e2(4): sar $0x6,%rax
c9e6(3): shl/sal %cl,%rdi
c9e9(4): or %rdi,0x0(%rbx,%rax,8)
c9ed(4): add $0x1,%rcx
c9f1(7): cmp $0x100,%rcx
c9f8(2): jnz 0xffffffdd(%rip)
c9fa(5): jmp 0xfffffada(%rip)
c9ff(2): xor %eax,%eax
ca01(5): mov $0x1,%edi
ca06(5): cmp $0x0,0x0(%rsi,%rax,2)
ca0b(2): jns 0x1e(%rip)
ca0d(5): movzx 0x0(%rbp,%rax,1),%ecx
ca12(3): mov %rdi,%r9
ca15(3): mov %rcx,%rdx
ca18(3): and $0x3f,%ecx
ca1b(4): shr $0x3,%rdx
ca1f(3): shl/sal %cl,%r9
ca22(3): and $0x18,%edx
ca25(4): or %r9,0x0(%rbx,%rdx,1)
ca29(4): add $0x1,%rax
ca2d(6): cmp $0x100,%rax
ca33(2): jnz 0xffffffd3(%rip)
ca35(5): jmp 0xfffffa9f(%rip)
ca3a(7): lea 0xa0e6(%rip),%rsi
ca41(3): mov %r12,%rdi
ca44(5): call 0xffff518c(%rip)
ca49(2): test %eax,%eax
ca4b(2): jnz 0x79(%rip)
ca4d(5): call 0xffff5373(%rip)
ca52(2): xor %ecx,%ecx
ca54(3): test %rbp,%rbp
ca57(3): mov (%rax),%rsi
ca5a(5): mov $0x1,%edx
ca5f(2): jnz 0x2b(%rip)
ca61(4): test $0x4,0x0(%rsi,%rcx,2)
ca65(2): jz 0x13(%rip)
ca67(3): mov %rcx,%rax
ca6a(3): mov %rdx,%rdi
ca6d(4): sar $0x6,%rax
ca71(3): shl/sal %cl,%rdi
ca74(4): or %rdi,0x0(%rbx,%rax,8)
ca78(4): add $0x1,%rcx
ca7c(7): cmp $0x100,%rcx
ca83(2): jnz 0xffffffde(%rip)
ca85(5): jmp 0xfffffa4f(%rip)
ca8a(2): xor %eax,%eax
ca8c(5): mov $0x1,%edi
ca91(4): test $0x4,0x0(%rsi,%rax,2)
ca95(2): jz 0x1e(%rip)
ca97(5): movzx 0x0(%rbp,%rax,1),%ecx
ca9c(3): mov %rdi,%r14
ca9f(3): mov %rcx,%rdx
caa2(3): and $0x3f,%ecx
caa5(4): shr $0x3,%rdx
caa9(3): shl/sal %cl,%r14
caac(3): and $0x18,%edx
caaf(4): or %r14,0x0(%rbx,%rdx,1)
cab3(4): add $0x1,%rax
cab7(6): cmp $0x100,%rax
cabd(2): jnz 0xffffffd4(%rip)
cabf(5): jmp 0xfffffa15(%rip)
cac4(7): lea 0xa062(%rip),%rsi
cacb(3): mov %r12,%rdi
cace(5): call 0xffff5102(%rip)
cad3(2): test %eax,%eax
cad5(2): jnz 0x7b(%rip)
cad7(5): call 0xffff52e9(%rip)
cadc(2): xor %ecx,%ecx
cade(3): test %rbp,%rbp
cae1(3): mov (%rax),%rsi
cae4(5): mov $0x1,%edx
cae9(2): jnz 0x2c(%rip)
caeb(5): test $0x10,0x1(%rsi,%rcx,2)
caf0(2): jz 0x13(%rip)
caf2(3): mov %rcx,%rax
caf5(3): mov %rdx,%rdi
caf8(4): sar $0x6,%rax
cafc(3): shl/sal %cl,%rdi
caff(4): or %rdi,0x0(%rbx,%rax,8)
cb03(4): add $0x1,%rcx
cb07(7): cmp $0x100,%rcx
cb0e(2): jnz 0xffffffdd(%rip)
cb10(5): jmp 0xfffff9c4(%rip)
cb15(2): xor %eax,%eax
cb17(5): mov $0x1,%edi
cb1c(5): test $0x10,0x1(%rsi,%rax,2)
cb21(2): jz 0x1e(%rip)
cb23(5): movzx 0x0(%rbp,%rax,1),%ecx
cb28(3): mov %rdi,%r9
cb2b(3): mov %rcx,%rdx
cb2e(3): and $0x3f,%ecx
cb31(4): shr $0x3,%rdx
cb35(3): shl/sal %cl,%r9
cb38(3): and $0x18,%edx
cb3b(4): or %r9,0x0(%rbx,%rdx,1)
cb3f(4): add $0x1,%rax
cb43(6): cmp $0x100,%rax
cb49(2): jnz 0xffffffd3(%rip)
cb4b(5): jmp 0xfffff989(%rip)
cb50(5): mov $0x4,%eax
cb55(5): jmp 0xfffff981(%rip)
cb5a(2): xor %eax,%eax
cb5c(5): test $0x8,0x1(%rdx,%rax,2)
cb61(2): jz 0x1e(%rip)
cb63(5): movzx 0x0(%rbp,%rax,1),%ecx
cb68(3): mov %rdi,%r14
cb6b(3): mov %rcx,%rsi
cb6e(3): and $0x3f,%ecx
cb71(4): shr $0x3,%rsi
cb75(3): shl/sal %cl,%r14
cb78(3): and $0x18,%esi
cb7b(4): or %r14,0x0(%rbx,%rsi,1)
cb7f(4): add $0x1,%rax
cb83(6): cmp $0x100,%rax
cb89(2): jnz 0xffffffd3(%rip)
cb8b(5): jmp 0xfffff949(%rip)
cb90(2): xor %edx,%edx
cb92(5): test $0x1,0x1(%rax,%rdx,2)
cb97(2): jz 0x1e(%rip)
cb99(5): movzx 0x0(%rbp,%rdx,1),%ecx
cb9e(3): mov %rdi,%r9
cba1(3): mov %rcx,%rsi
cba4(3): and $0x3f,%ecx
cba7(4): shr $0x3,%rsi
cbab(3): shl/sal %cl,%r9
cbae(3): and $0x18,%esi
cbb1(4): or %r9,0x0(%rbx,%rsi,1)
cbb5(4): add $0x1,%rdx
cbb9(7): cmp $0x100,%rdx
cbc0(2): jnz 0xffffffd2(%rip)
cbc2(5): jmp 0xfffff912(%rip)
cbc7(2): xor %eax,%eax
cbc9(5): test $0x40,0x1(%rdx,%rax,2)
cbce(2): jz 0x1e(%rip)
cbd0(5): movzx 0x0(%rbp,%rax,1),%ecx
cbd5(3): mov %rdi,%r14
cbd8(3): mov %rcx,%rsi
cbdb(3): and $0x3f,%ecx
cbde(4): shr $0x3,%rsi
cbe2(3): shl/sal %cl,%r14
cbe5(3): and $0x18,%esi
cbe8(4): or %r14,0x0(%rbx,%rsi,1)
cbec(4): add $0x1,%rax
cbf0(6): cmp $0x100,%rax
cbf6(2): jnz 0xffffffd3(%rip)
cbf8(5): jmp 0xfffff8dc(%rip)

"build_charclass_op" :
cc00(2): push %r15
cc02(2): push %r14
cc04(3): mov %rdx,%r14
cc07(2): push %r13
cc09(2): push %r12
cc0b(3): mov %rcx,%r13
cc0e(1): push %rbp
cc0f(1): push %rbx
cc10(3): mov %rdi,%rbp
cc13(5): mov $0x20,%edi
cc18(3): mov %r8d,%r12d
cc1b(4): sub $0x58,%rsp
cc1f(4): mov %rsi,(%rsp)
cc23(5): mov $0x1,%esi
cc28(5): mov %r9,0x8(%rsp)
cc2d(9): mov $0x28,%rax
cc36(5): mov %rax,0x48(%rsp)
cc3b(2): xor %eax,%eax
cc3d(9): mov $0x0,0x18(%rsp)
cc46(5): call 0xffff4f7a(%rip)
cc4b(3): test %rax,%rax
cc4e(6): jz 0x1c2(%rip)
cc54(5): mov $0x1,%esi
cc59(5): mov $0x50,%edi
cc5e(3): mov %rax,%rbx
cc61(5): call 0xffff4f5f(%rip)
cc66(3): test %rax,%rax
cc69(3): mov %rax,%r15
cc6c(6): jz 0x1b4(%rip)
cc72(4): movzx 0x20(%rax),%eax
cc76(4): sub $0x8,%rsp
cc7a(3): mov %r12d,%edx
cc7d(2): push $0x0
cc7f(3): and $0x1,%edx
cc82(5): mov 0x10(%rsp),%rdi
cc87(4): lea 0x48(%r15),%rcx
cc8b(3): mov %r14,%r9
cc8e(3): mov %rbx,%rsi
cc91(5): lea 0x28(%rsp),%r8
cc96(3): and $0xfe,%eax
cc99(2): or %edx,%eax
cc9b(4): lea 0x18(%r15),%rdx
cc9f(4): mov %al,0x20(%r15)
cca3(5): call 0xfffff74d(%rip)
cca8(2): test %eax,%eax
ccaa(1): pop %rdx
ccab(1): pop %rcx
ccac(6): jnz 0x194(%rip)
ccb2(5): movsx 0x0(%r13),%rcx
ccb7(5): mov $0x1,%esi
ccbc(2): test %cl,%cl
ccbe(2): jz 0x3c(%rip)
ccc0(4): lea 0x3f(%rcx),%rax
ccc4(3): test %rcx,%rcx
ccc7(3): mov %rcx,%rdx
ccca(4): cmovns %rcx,%rax
ccce(4): sar $0x3f,%rdx
ccd2(4): add $0x1,%r13
ccd6(4): shr $0x3a,%rdx
ccda(4): sar $0x6,%rax
ccde(3): add %rdx,%rcx
cce1(3): and $0x3f,%ecx
cce4(3): sub %rdx,%rcx
cce7(3): mov %rsi,%rdx
ccea(3): shl/sal %cl,%rdx
cced(5): movsx 0x0(%r13),%rcx
ccf2(4): or %rdx,0x0(%rbx,%rax,8)
ccf6(2): test %cl,%cl
ccf8(2): jnz 0xffffffc8(%rip)
ccfa(3): test %r12b,%r12b
ccfd(2): jz 0x15(%rip)
ccff(4): lea 0x20(%rbx),%rdx
cd03(3): mov %rbx,%rax
cd06(3): not (%rax)
cd09(4): add $0x8,%rax
cd0d(3): cmp %rax,%rdx
cd10(2): jnz 0xfffffff6(%rip)
cd12(7): cmp $0x1,0xb4(%rbp)
cd19(2): jle 0x1a(%rip)
cd1b(4): mov 0x78(%rbp),%rcx
cd1f(2): xor %eax,%eax
cd21(4): mov 0x0(%rcx,%rax,1),%rdx
cd25(4): and %rdx,0x0(%rbx,%rax,1)
cd29(4): add $0x8,%rax
cd2d(4): cmp $0x20,%rax
cd31(2): jnz 0xfffffff0(%rip)
cd33(5): lea 0x20(%rsp),%r9
cd38(4): lea 0x70(%rbp),%r12
cd3c(7): lea 0x80(%rbp),%r13
cd43(2): xor %ecx,%ecx
cd45(2): xor %edx,%edx
cd47(5): mov $0x3,0x28(%rsp)
cd4c(3): mov %r9,%r8
cd4f(3): mov %r13,%rsi
cd52(3): mov %r12,%rdi
cd55(5): mov %rbx,0x20(%rsp)
cd5a(4): mov %r9,(%rsp)
cd5e(5): call 0xffffcb52(%rip)
cd63(3): test %rax,%rax
cd66(3): mov %rax,%r14
cd69(6): jz 0x97(%rip)
cd6f(7): cmp $0x1,0xb4(%rbp)
cd76(2): jle 0x7a(%rip)
cd78(7): or $0x2,0xb0(%rbp)
cd7f(4): mov (%rsp),%r9
cd83(2): xor %ecx,%ecx
cd85(2): xor %edx,%edx
cd87(3): mov %r13,%rsi
cd8a(3): mov %r12,%rdi
cd8d(5): mov $0x6,0x28(%rsp)
cd92(5): mov %r15,0x20(%rsp)
cd97(3): mov %r9,%r8
cd9a(5): call 0xffffcb16(%rip)
cd9f(3): test %rax,%rax
cda2(2): jz 0x5e(%rip)
cda4(5): lea 0x30(%rsp),%r8
cda9(3): mov %r14,%rdx
cdac(3): mov %rax,%rcx
cdaf(3): mov %r13,%rsi
cdb2(3): mov %r12,%rdi
cdb5(5): mov $0xa,0x38(%rsp)
cdba(5): call 0xffffcaf6(%rip)
cdbf(3): mov %rax,%r14
cdc2(5): mov 0x48(%rsp),%rdi
cdc7(9): xor $0x28,%rdi
cdd0(3): mov %r14,%rax
cdd3(6): jnz 0x92(%rip)
cdd9(4): add $0x58,%rsp
cddd(1): pop %rbx
cdde(1): pop %rbp
cddf(2): pop %r12
cde1(2): pop %r13
cde3(2): pop %r14
cde5(2): pop %r15
cde7(1): ret near (%rsp)
cde8(8): nop 0x0(%rax,%rax,1)
cdf0(3): mov %r15,%rdi
cdf3(5): call 0xffffb51d(%rip)
cdf8(2): jmp 0xffffffca(%rip)
cdfa(6): nop 0x0(%rax,%rax,1)
ce00(3): mov %rbx,%rdi
ce03(5): call 0xffff4bcd(%rip)
ce08(3): mov %r15,%rdi
ce0b(5): call 0xffffb505(%rip)
ce10(5): mov 0x8(%rsp),%rax
ce15(3): xor %r14d,%r14d
ce18(6): mov $0xc,(%rax)
ce1e(2): jmp 0xffffffa4(%rip)
ce20(3): mov %rbx,%rdi
ce23(3): xor %r14d,%r14d
ce26(5): call 0xffff4baa(%rip)
ce2b(5): mov 0x8(%rsp),%rax
ce30(6): mov $0xc,(%rax)
ce36(2): jmp 0xffffff8c(%rip)
ce38(8): nop 0x0(%rax,%rax,1)
ce40(3): mov %rbx,%rdi
ce43(3): mov %eax,(%rsp)
ce46(3): xor %r14d,%r14d
ce49(5): call 0xffff4b87(%rip)
ce4e(3): mov %r15,%rdi
ce51(5): call 0xffffb4bf(%rip)
ce56(5): mov 0x8(%rsp),%rdi
ce5b(3): mov (%rsp),%eax
ce5e(2): mov %eax,(%rdi)
ce60(5): jmp 0xffffff62(%rip)
ce65(5): call 0xffff4c6b(%rip)

"re_compile_fastmap_iter.isra.30" :
ce70(2): push %r15
ce72(2): push %r14
ce74(3): mov %rdi,%rax
ce77(2): push %r13
ce79(2): push %r12
ce7b(1): push %rbp
ce7c(1): push %rbx
ce7d(2): xor %ebx,%ebx
ce7f(3): mov %rcx,%rbp
ce82(7): sub $0x178,%rsp
ce89(3): mov (%rax),%rax
ce8c(5): mov %rdi,0x30(%rsp)
ce91(5): mov %rsi,0x20(%rsp)
ce96(9): mov $0x28,%rdi
ce9f(8): mov %rdi,0x168(%rsp)
cea7(2): xor %edi,%edi
cea9(7): cmp $0x1,0xb4(%rax)
ceb0(5): mov %rdx,0x28(%rsp)
ceb5(5): mov %rax,0x8(%rsp)
ceba(2): jnz 0x19(%rip)
cebc(5): mov 0x30(%rsp),%rax
cec1(4): mov 0x18(%rax),%rax
cec5(3): mov %rax,%rbx
cec8(4): mov %rax,(%rsp)
cecc(4): shr $0x16,%rbx
ced0(3): and $0x1,%ebx
ced3(5): mov 0x20(%rsp),%rax
ced8(4): cmp $0x0,(%rax)
cedc(6): jle 0x411(%rip)
cee2(5): lea 0x58(%rsp),%rax
cee7(8): mov $0x0,(%rsp)
ceef(5): mov %rax,0x40(%rsp)
cef4(5): lea 0x54(%rsp),%rax
cef9(5): mov %rax,0x48(%rsp)
cefe(5): lea 0x60(%rsp),%rax
cf03(5): mov %rax,0x38(%rsp)
cf08(2): jmp 0x46(%rip)
cf0a(6): nop 0x0(%rax,%rax,1)
cf10(3): cmp $0x3,%eax
cf13(6): jz 0x2f3(%rip)
cf19(3): cmp $0x6,%eax
cf1c(6): jz 0x18c(%rip)
cf22(3): and $0xfd,%edx
cf25(3): cmp $0x5,%dl
cf28(6): jz 0x3fc(%rip)
cf2e(3): cmp $0x2,%eax
cf31(6): jz 0x353(%rip)
cf37(5): mov 0x20(%rsp),%rdi
cf3c(5): add $0x1,(%rsp)
cf41(4): mov (%rsp),%rax
cf45(3): cmp (%rdi),%rax
cf48(6): jnl 0x3a5(%rip)
cf4e(5): mov 0x28(%rsp),%rax
cf53(4): mov (%rsp),%rdi
cf57(3): mov (%rax),%rax
cf5a(4): mov 0x0(%rax,%rdi,8),%r12
cf5e(5): mov 0x8(%rsp),%rax
cf63(3): mov (%rax),%rcx
cf66(3): mov %r12,%rax
cf69(4): shl/sal $0x4,%rax
cf6d(5): mov %rax,0x10(%rsp)
cf72(4): lea 0x0(%rcx,%rax,1),%rsi
cf76(4): movzx 0x8(%rsi),%eax
cf7a(3): cmp $0x1,%eax
cf7d(2): mov %eax,%edx
cf7f(2): jnz 0xffffff91(%rip)
cf81(4): movzx (%rsi),%r13d
cf85(2): test %ebx,%ebx
cf87(6): mov $0x1,0x0(%rbp,%r13,1)
cf8d(2): jz 0x13(%rip)
cf8f(5): call 0xffff4e21(%rip)
cf94(3): mov (%rax),%rax
cf97(4): movsxd 0x0(%rax,%r13,4),%rax
cf9b(5): mov $0x1,0x0(%rbp,%rax,1)
cfa0(5): mov 0x30(%rsp),%rax
cfa5(4): test $0x40,0x1a(%rax)
cfa9(2): jz 0xffffff8e(%rip)
cfab(5): mov 0x8(%rsp),%rsi
cfb0(7): cmp $0x1,0xb4(%rsi)
cfb7(6): jle 0xffffff80(%rip)
cfbd(3): mov (%rsi),%rax
cfc0(5): mov 0x10(%rsp),%rdi
cfc5(4): movzx 0x0(%rax,%rdi,1),%edx
cfc9(4): mov %dl,0x60(%rsp)
cfcd(5): lea 0x1(%r12),%rdx
cfd2(4): cmp %rdx,0x10(%rsi)
cfd6(6): jbe 0x340(%rip)
cfdc(5): lea 0x10(%rax,%rdi,1),%rcx
cfe1(3): mov 0x8(%rcx),%eax
cfe4(5): and $0x2000ff,%eax
cfe9(5): cmp $0x200001,%eax
cfee(6): jnz 0x328(%rip)
cff4(4): add $0x20,%rdi
cff8(3): mov %rdi,%r13
cffb(5): mov 0x38(%rsp),%rdi
d000(4): lea 0x1(%rdi),%rax
d004(2): jmp 0x27(%rip)
d006(a): nop 0x0(%rax,%rax,1)
d010(3): mov (%rsi),%rcx
d013(3): add %r13,%rcx
d016(4): add $0x10,%r13
d01a(3): mov 0x8(%rcx),%edx
d01d(6): and $0x2000ff,%edx
d023(6): cmp $0x200001,%edx
d029(2): jnz 0x1b(%rip)
d02b(3): movzx (%rcx),%edx
d02e(4): add $0x1,%rax
d032(3): mov %dl,0xffffffff(%rax)
d035(3): mov %rax,%rdx
d038(3): sub %rdi,%rdx
d03b(3): add %r12,%rdx
d03e(4): cmp %rdx,0x10(%rsi)
d042(2): jnbe 0xffffffce(%rip)
d044(5): mov 0x38(%rsp),%rsi
d049(5): mov 0x40(%rsp),%rcx
d04e(5): mov 0x48(%rsp),%rdi
d053(3): sub %rsi,%rax
d056(7): mov $0x0,(%rcx)
d05d(3): mov %rax,%r12
d060(3): mov %rax,%rdx
d063(5): call 0xffff9fed(%rip)
d068(3): cmp %rax,%r12
d06b(6): jnz 0xfffffecc(%rip)
d071(4): mov 0x54(%rsp),%edi
d075(5): call 0xffff4cab(%rip)
d07a(5): mov 0x40(%rsp),%rdx
d07f(5): mov 0x38(%rsp),%rdi
d084(2): mov %eax,%esi
d086(5): call 0xffff4baa(%rip)
d08b(4): cmp $0xffffffff,%rax
d08f(6): jz 0xfffffea8(%rip)
d095(5): movzx 0x60(%rsp),%eax
d09a(5): mov $0x1,0x0(%rbp,%rax,1)
d09f(5): jmp 0xfffffe98(%rip)
d0a4(4): nop 0x0(%rax)
d0a8(5): mov 0x8(%rsp),%rax
d0ad(3): mov (%rsi),%r12
d0b0(7): cmp $0x1,0xb4(%rax)
d0b7(2): jle 0x26(%rip)
d0b9(6): cmp $0x0,0x48(%r12)
d0bf(6): jnz 0x100(%rip)
d0c5(6): test $0x1,0x20(%r12)
d0cb(6): jnz 0xf4(%rip)
d0d1(6): cmp $0x0,0x40(%r12)
d0d7(6): jnz 0xe8(%rip)
d0dd(3): xor %r13d,%r13d
d0e0(6): cmp $0x0,0x28(%r12)
d0e6(6): jle 0xfffffe51(%rip)
d0ec(3): mov %r12,%r15
d0ef(5): mov 0x40(%rsp),%r14
d0f4(3): mov %rbp,%r12
d0f7(3): mov %r13,%rbp
d0fa(3): mov %ebx,%r13d
d0fd(2): jmp 0x10(%rip)
d0ff(4): add $0x1,%rbp
d103(4): cmp 0x28(%r15),%rbp
d107(6): jnl 0xad(%rip)
d10d(7): mov $0x0,(%r14)
d114(3): mov (%r15),%rax
d117(3): mov %r14,%rdx
d11a(5): mov 0x38(%rsp),%rdi
d11f(8): lea 0x0(,%rbp,4),%rbx
d127(3): mov 0x0(%rax,%rbp,4),%esi
d12a(5): call 0xffff4b06(%rip)
d12f(4): cmp $0xffffffff,%rax
d133(2): jz 0x2c(%rip)
d135(5): movzx 0x60(%rsp),%edx
d13a(3): test %r13d,%r13d
d13d(5): mov $0x1,0x0(%r12,%rdx,1)
d142(5): mov %rdx,0x10(%rsp)
d147(2): jz 0x18(%rip)
d149(5): call 0xffff4c67(%rip)
d14e(5): mov 0x10(%rsp),%rdx
d153(3): mov (%rax),%rax
d156(4): movsxd 0x0(%rax,%rdx,4),%rax
d15a(5): mov $0x1,0x0(%r12,%rax,1)
d15f(5): mov 0x30(%rsp),%rax
d164(4): test $0x40,0x1a(%rax)
d168(2): jz 0xffffff97(%rip)
d16a(5): mov 0x8(%rsp),%rax
d16f(7): cmp $0x1,0xb4(%rax)
d176(2): jle 0xffffff89(%rip)
d178(3): mov (%r15),%rax
d17b(3): mov 0x0(%rax,%rbx,1),%edi
d17e(5): call 0xffff4ba2(%rip)
d183(5): mov 0x38(%rsp),%rdi
d188(3): mov %r14,%rdx
d18b(2): mov %eax,%esi
d18d(5): call 0xffff4aa3(%rip)
d192(4): cmp $0xffffffff,%rax
d196(6): jz 0xffffff69(%rip)
d19c(5): movzx 0x60(%rsp),%eax
d1a1(4): add $0x1,%rbp
d1a5(5): mov $0x1,0x0(%r12,%rax,1)
d1aa(4): cmp 0x28(%r15),%rbp
d1ae(6): jl 0xffffff5f(%rip)
d1b4(3): mov %r13d,%ebx
d1b7(3): mov %r12,%rbp
d1ba(5): jmp 0xfffffd7d(%rip)
d1bf(5): mov 0x40(%rsp),%r12
d1c4(5): mov 0x48(%rsp),%r13
d1c9(5): mov $0x0,0x54(%rsp)
d1ce(2): nop 
d1d0(2): xor %edi,%edi
d1d2(8): mov $0x0,(%r12)
d1da(3): mov %r12,%rcx
d1dd(5): mov $0x1,%edx
d1e2(3): mov %r13,%rsi
d1e5(5): call 0xffff9e6b(%rip)
d1ea(4): cmp $0xfffffffe,%rax
d1ee(2): jnz 0xc(%rip)
d1f0(5): movzx 0x54(%rsp),%eax
d1f5(5): mov $0x1,0x0(%rbp,%rax,1)
d1fa(5): add $0x1,0x54(%rsp)
d1ff(2): jnz 0xffffffd1(%rip)
d201(5): jmp 0xfffffd36(%rip)
d206(3): mov %rbp,%r13
d209(3): xor %r12d,%r12d
d20c(9): mov $0x0,0x18(%rsp)
d215(5): mov 0x10(%rsp),%rax
d21a(5): mov 0x18(%rsp),%rsi
d21f(3): xor %r14d,%r14d
d222(4): mov 0x0(%rcx,%rax,1),%rax
d226(4): mov 0x0(%rax,%rsi,1),%r15
d22a(6): nop 0x0(%rax,%rax,1)
d230(4): bt %r14,%r15
d234(2): jnb 0x21(%rip)
d236(2): test %ebx,%ebx
d238(6): mov $0x1,0x0(%r13,%r14,1)
d23e(2): jz 0x17(%rip)
d240(5): call 0xffff4b70(%rip)
d245(3): mov (%rax),%rax
d248(4): lea 0x0(%r12,%r14,1),%rdx
d24c(4): movsxd 0x0(%rax,%rdx,4),%rax
d250(5): mov $0x1,0x0(%rbp,%rax,1)
d255(4): add $0x1,%r14
d259(4): cmp $0x40,%r14
d25d(2): jnz 0xffffffd3(%rip)
d25f(4): add $0x40,%r12
d263(6): add $0x8,0x18(%rsp)
d269(4): add $0x40,%r13
d26d(7): cmp $0x100,%r12
d274(6): jz 0xfffffcc3(%rip)
d27a(5): mov 0x8(%rsp),%rax
d27f(3): mov (%rax),%rcx
d282(2): jmp 0xffffff93(%rip)
d284(8): movdqa 0xa054(%rip),%xmm0
d28c(4): movups %xmm0,0x0(%rbp)
d290(4): movups %xmm0,0x10(%rbp)
d294(4): movups %xmm0,0x20(%rbp)
d298(4): movups %xmm0,0x30(%rbp)
d29c(4): movups %xmm0,0x40(%rbp)
d2a0(4): movups %xmm0,0x50(%rbp)
d2a4(4): movups %xmm0,0x60(%rbp)
d2a8(4): movups %xmm0,0x70(%rbp)
d2ac(7): movups %xmm0,0x80(%rbp)
d2b3(7): movups %xmm0,0x90(%rbp)
d2ba(7): movups %xmm0,0xa0(%rbp)
d2c1(7): movups %xmm0,0xb0(%rbp)
d2c8(7): movups %xmm0,0xc0(%rbp)
d2cf(7): movups %xmm0,0xd0(%rbp)
d2d6(7): movups %xmm0,0xe0(%rbp)
d2dd(7): movups %xmm0,0xf0(%rbp)
d2e4(5): mov 0x30(%rsp),%rax
d2e9(4): or $0x1,0x38(%rax)
d2ed(8): mov 0x168(%rsp),%rax
d2f5(9): xor $0x28,%rax
d2fe(6): jnz 0x94(%rip)
d304(7): add $0x178,%rsp
d30b(1): pop %rbx
d30c(1): pop %rbp
d30d(2): pop %r12
d30f(2): pop %r13
d311(2): pop %r14
d313(2): pop %r15
d315(1): ret near (%rsp)
d316(5): mov 0x38(%rsp),%rax
d31b(4): add $0x1,%rax
d31f(5): jmp 0xfffffd25(%rip)
d324(8): movdqa 0x9fb4(%rip),%xmm0
d32c(3): cmp $0x2,%eax
d32f(4): movups %xmm0,0x0(%rbp)
d333(4): movups %xmm0,0x10(%rbp)
d337(4): movups %xmm0,0x20(%rbp)
d33b(4): movups %xmm0,0x30(%rbp)
d33f(4): movups %xmm0,0x40(%rbp)
d343(4): movups %xmm0,0x50(%rbp)
d347(4): movups %xmm0,0x60(%rbp)
d34b(4): movups %xmm0,0x70(%rbp)
d34f(7): movups %xmm0,0x80(%rbp)
d356(7): movups %xmm0,0x90(%rbp)
d35d(7): movups %xmm0,0xa0(%rbp)
d364(7): movups %xmm0,0xb0(%rbp)
d36b(7): movups %xmm0,0xc0(%rbp)
d372(7): movups %xmm0,0xd0(%rbp)
d379(7): movups %xmm0,0xe0(%rbp)
d380(7): movups %xmm0,0xf0(%rbp)
d387(6): jnz 0xffffff66(%rip)
d38d(5): jmp 0xffffff57(%rip)
d392(5): call 0xffff473e(%rip)

"check_node_accept_bytes.isra.31" :
d3a0(4): shl/sal $0x4,%rdx
d3a4(2): push %r13
d3a6(2): push %r12
d3a8(4): lea 0x0(%rdi,%rdx,1),%r9
d3ac(1): push %rbp
d3ad(1): push %rbx
d3ae(4): sub $0x8,%rsp
d3b2(5): movzx 0x8(%r9),%r11d
d3b7(4): cmp $0x7,%r11b
d3bb(6): jz 0x115(%rip)
d3c1(7): cmp $0x1,0x90(%rcx)
d3c8(6): jz 0xc8(%rip)
d3ce(3): mov %rsi,%rbx
d3d1(3): mov %rcx,%rdi
d3d4(3): mov %r8,%rsi
d3d7(3): mov %rcx,%r10
d3da(5): call 0xffffb766(%rip)
d3df(4): cmp $0x5,%r11b
d3e3(2): mov %eax,%ebp
d3e5(6): jz 0xbb(%rip)
d3eb(4): cmp $0x6,%r11b
d3ef(6): jnz 0xa1(%rip)
d3f5(3): cmp $0x1,%eax
d3f8(6): jle 0x98(%rip)
d3fe(3): mov (%r9),%r13
d401(4): mov 0x40(%r13),%rsi
d405(4): mov 0x28(%r13),%rdx
d409(3): test %rsi,%rsi
d40c(2): jnz 0xd(%rip)
d40e(5): cmp $0x0,0x48(%r13)
d413(6): jz 0xf5(%rip)
d419(4): mov 0x10(%r10),%rax
d41d(3): test %rdx,%rdx
d420(4): mov 0x0(%rax,%r8,4),%r12d
d424(2): jle 0x23(%rip)
d426(4): mov 0x0(%r13),%rcx
d42a(3): cmp (%rcx),%r12d
d42d(2): jz 0x55(%rip)
d42f(2): xor %eax,%eax
d431(2): jmp 0xd(%rip)
d433(5): nop 0x0(%rax,%rax,1)
d438(4): cmp 0x0(%rcx,%rax,4),%r12d
d43c(2): jz 0x46(%rip)
d43e(4): add $0x1,%rax
d442(3): cmp %rdx,%rax
d445(2): jnz 0xfffffff3(%rip)
d447(4): mov 0x48(%r13),%rax
d44b(3): test %rax,%rax
d44e(6): jle 0xde(%rip)
d454(2): xor %ebx,%ebx
d456(2): jmp 0x18(%rip)
d458(8): nop 0x0(%rax,%rax,1)
d460(4): add $0x1,%rbx
d464(4): cmp 0x48(%r13),%rbx
d468(6): jnl 0xc0(%rip)
d46e(4): mov 0x18(%r13),%rax
d472(3): mov %r12d,%edi
d475(4): mov 0x0(%rax,%rbx,8),%rsi
d479(5): call 0xffff45e7(%rip)
d47e(2): test %eax,%eax
d480(2): jz 0xffffffe0(%rip)
d482(5): test $0x1,0x20(%r13)
d487(2): jz 0xb(%rip)
d489(7): nop 0x0(%rax)
d490(2): xor %ebp,%ebp
d492(4): add $0x8,%rsp
d496(2): mov %ebp,%eax
d498(1): pop %rbx
d499(1): pop %rbp
d49a(2): pop %r12
d49c(2): pop %r13
d49e(1): ret near (%rsp)
d49f(1): nop 
d4a0(3): cmp $0x1,%eax
d4a3(2): jle 0xffffffed(%rip)
d4a5(3): mov (%rbx),%rax
d4a8(2): test $0x40,%al
d4aa(2): jz 0x16(%rip)
d4ac(2): test $0x80,%al
d4ae(2): jz 0xffffffe4(%rip)
d4b0(4): mov 0x8(%r10),%rax
d4b4(5): cmp $0x0,0x0(%rax,%r8,1)
d4b9(2): jz 0xffffffd7(%rip)
d4bb(2): jmp 0xffffffd7(%rip)
d4bd(3): nop (%rax)
d4c0(4): mov 0x8(%r10),%rdx
d4c4(5): cmp $0xa,0x0(%rdx,%r8,1)
d4c9(2): jnz 0xffffffe3(%rip)
d4cb(2): jmp 0xffffffc5(%rip)
d4cd(3): nop (%rax)
d4d0(4): mov 0x8(%rcx),%rdx
d4d4(4): lea 0x0(%rdx,%r8,1),%rsi
d4d8(3): movzx (%rsi),%eax
d4db(2): cmp $0xc1,%al
d4dd(2): jbe 0xffffffb3(%rip)
d4df(4): mov 0x58(%rcx),%rcx
d4e3(4): lea 0x1(%r8),%rdi
d4e7(3): cmp %rcx,%rdi
d4ea(2): jnl 0xffffffa6(%rip)
d4ec(2): cmp $0xdf,%al
d4ee(6): movzx 0x1(%rdx,%r8,1),%edx
d4f4(2): jnbe 0x6a(%rip)
d4f6(3): add $0x80,%edx
d4f9(5): mov $0x2,%ebp
d4fe(3): cmp $0x3f,%dl
d501(2): jnbe 0xffffff8f(%rip)
d503(2): jmp 0xffffff8f(%rip)
d505(3): nop (%rax)
d508(3): test %rdx,%rdx
d50b(6): jnz 0xffffff0e(%rip)
d511(5): test $0x1,0x20(%r13)
d516(6): jnz 0xffffff7c(%rip)
d51c(5): jmp 0xffffff74(%rip)
d521(7): nop 0x0(%rax)
d528(4): mov 0x40(%r13),%rsi
d52c(3): test %rsi,%rsi
d52f(2): jle 0xffffffe2(%rip)
d531(4): mov 0x8(%r13),%rdx
d535(2): xor %eax,%eax
d537(2): jmp 0x12(%rip)
d539(7): nop 0x0(%rax)
d540(4): add $0x1,%rax
d544(3): cmp %rsi,%rax
d547(2): jz 0xffffffca(%rip)
d549(4): cmp 0x0(%rdx,%rax,4),%r12d
d54d(2): jl 0xfffffff3(%rip)
d54f(4): mov 0x10(%r13),%rcx
d553(4): cmp 0x0(%rcx,%rax,4),%r12d
d557(2): jnle 0xffffffe9(%rip)
d559(5): jmp 0xffffff29(%rip)
d55e(2): cmp $0xef,%al
d560(2): jnbe 0x48(%rip)
d562(2): cmp $0xe0,%al
d564(2): jnz 0xb(%rip)
d566(3): cmp $0x9f,%dl
d569(6): jbe 0xffffff27(%rip)
d56f(5): mov $0x3,%ebp
d574(3): movsxd %ebp,%rdi
d577(3): add %rdi,%r8
d57a(3): cmp %r8,%rcx
d57d(6): jl 0xffffff13(%rip)
d583(5): mov $0x1,%eax
d588(2): jmp 0xf(%rip)
d58a(4): add $0x1,%rax
d58e(3): cmp %rax,%rdi
d591(6): jle 0xffffff01(%rip)
d597(4): movzx 0x0(%rsi,%rax,1),%ebx
d59b(3): lea 0xffffff80(%rbx),%edx
d59e(3): cmp $0x3f,%dl
d5a1(2): jbe 0xffffffe9(%rip)
d5a3(5): jmp 0xfffffeed(%rip)
d5a8(2): cmp $0xf7,%al
d5aa(2): jnbe 0x16(%rip)
d5ac(2): cmp $0xf0,%al
d5ae(2): jnz 0xb(%rip)
d5b0(3): cmp $0x8f,%dl
d5b3(6): jbe 0xfffffedd(%rip)
d5b9(5): mov $0x4,%ebp
d5be(2): jmp 0xffffffb6(%rip)
d5c0(2): cmp $0xfb,%al
d5c2(2): jnbe 0x16(%rip)
d5c4(2): cmp $0xf8,%al
d5c6(2): jnz 0xb(%rip)
d5c8(3): cmp $0x87,%dl
d5cb(6): jbe 0xfffffec5(%rip)
d5d1(5): mov $0x5,%ebp
d5d6(2): jmp 0xffffff9e(%rip)
d5d8(2): cmp $0xfd,%al
d5da(6): jnbe 0xfffffeb6(%rip)
d5e0(2): cmp $0xfc,%al
d5e2(2): jnz 0xb(%rip)
d5e4(3): cmp $0x83,%dl
d5e7(6): jbe 0xfffffea9(%rip)
d5ed(5): mov $0x6,%ebp
d5f2(2): jmp 0xffffff82(%rip)

"check_arrival" :
d600(2): push %r15
d602(2): push %r14
d604(3): mov %rdi,%r15
d607(2): push %r13
d609(2): push %r12
d60b(1): push %rbp
d60c(1): push %rbx
d60d(3): mov %rcx,%rbp
d610(3): mov %rdx,%rbx
d613(7): sub $0xd8,%rsp
d61a(7): mov 0x98(%rdi),%rcx
d621(4): mov 0x8(%rsi),%r13
d625(9): mov $0x28,%rax
d62e(8): mov %rax,0xc8(%rsp)
d636(2): xor %eax,%eax
d638(3): mov %rdx,%rax
d63b(5): mov %rsi,0x60(%rsp)
d640(5): mov %r8,0x78(%rsp)
d645(4): shl/sal $0x4,%rax
d649(3): add (%rcx),%rax
d64c(5): mov %r9,0x40(%rsp)
d651(5): mov %rcx,0x30(%rsp)
d656(b): mov $0x0,0x88(%rsp)
d661(3): mov (%rax),%rax
d664(5): mov %rax,0x48(%rsp)
d669(7): movsxd 0xe0(%rdi),%rax
d670(3): add %r9,%rax
d673(3): cmp %r13,%rax
d676(6): jnl 0x620(%rip)
d67c(5): mov 0x60(%rsp),%rax
d681(7): mov 0xb8(%r15),%rdx
d688(4): mov 0x48(%r15),%rcx
d68c(3): mov (%rax),%r12
d68f(4): mov 0x10(%rax),%r14
d693(5): mov %rdx,0x68(%rsp)
d698(5): mov %rcx,0x70(%rsp)
d69d(7): mov 0xa0(%r15),%edx
d6a4(3): test %r12,%r12
d6a7(7): mov %r14,0xb8(%r15)
d6ae(6): jz 0x3e2(%rip)
d6b4(5): lea 0xffffffff(%r12),%rsi
d6b9(4): mov %r12,0x48(%r15)
d6bd(3): mov %r15,%rdi
d6c0(5): call 0xffffd310(%rip)
d6c5(3): cmp %rbp,%r12
d6c8(3): mov %eax,%r13d
d6cb(6): jz 0x3d8(%rip)
d6d1(4): mov 0x0(%r14,%r12,8),%rbp
d6d5(3): test %rbp,%rbp
d6d8(2): jz 0xc(%rip)
d6da(4): test $0x40,0x68(%rbp)
d6de(6): jnz 0x522(%rip)
d6e4(4): pxor %xmm0,%xmm0
d6e8(c): mov $0x0,0xa0(%rsp)
d6f4(8): movaps %xmm0,0x90(%rsp)
d6fc(5): cmp 0x40(%rsp),%r12
d701(6): jnl 0x327(%rip)
d707(7): mov 0xe0(%r15),%ecx
d70e(2): test %ecx,%ecx
d710(6): js 0x318(%rip)
d716(8): lea 0x90(%rsp),%rbx
d71e(8): lea 0x8(,%r12,8),%rax
d726(4): mov %r12,(%rsp)
d72a(9): mov $0x0,0x20(%rsp)
d733(5): mov %rbx,0x8(%rsp)
d738(8): lea 0xb0(%rsp),%rbx
d740(5): mov %rax,0x10(%rsp)
d745(7): mov 0xb8(%r15),%rax
d74c(5): mov %rbx,0x18(%rsp)
d751(8): lea 0x8c(%rsp),%rbx
d759(5): mov %rbx,0x58(%rsp)
d75e(5): mov 0x10(%rsp),%rcx
d763(c): mov $0x0,0x98(%rsp)
d76f(4): mov 0x0(%rax,%rcx,1),%rsi
d773(3): test %rsi,%rsi
d776(6): jz 0x3c2(%rip)
d77c(5): mov 0x8(%rsp),%rdi
d781(4): add $0x8,%rsi
d785(5): call 0xffffb98b(%rip)
d78a(2): test %eax,%eax
d78c(7): mov %eax,0x88(%rsp)
d793(6): jnz 0x3dd(%rip)
d799(3): test %rbp,%rbp
d79c(6): jz 0x1ac(%rip)
d7a2(5): cmp $0x0,0x28(%rbp)
d7a7(5): mov 0x18(%rsp),%rax
d7ac(4): pxor %xmm0,%xmm0
d7b0(7): mov 0x98(%r15),%r12
d7b7(b): mov $0x0,0x8c(%rsp)
d7c2(8): mov $0x0,0x10(%rax)
d7ca(3): movaps %xmm0,(%rax)
d7cd(6): jle 0x533(%rip)
d7d3(8): lea 0xd8(%r12),%rax
d7db(2): xor %ebx,%ebx
d7dd(5): mov %rax,0x28(%rsp)
d7e2(2): jmp 0x47(%rip)
d7e4(4): nop 0x0(%rax)
d7e8(4): mov (%rsp),%rdx
d7ec(3): mov %r15,%rdi
d7ef(5): call 0xffffd2d1(%rip)
d7f4(2): test %al,%al
d7f6(2): jz 0x25(%rip)
d7f8(8): lea 0x0(,%r14,8),%r13
d800(5): mov 0x18(%r12),%rax
d805(5): mov 0x8(%rsp),%rdi
d80a(4): mov 0x0(%rax,%r13,1),%rsi
d80e(5): call 0xffff9ea2(%rip)
d813(2): test %al,%al
d815(6): jz 0x343(%rip)
d81b(4): add $0x1,%rbx
d81f(4): cmp 0x28(%rbp),%rbx
d823(6): jnl 0x38d(%rip)
d829(4): mov 0x30(%rbp),%rax
d82d(4): mov (%r12),%rdi
d831(4): mov 0x0(%rax,%rbx,8),%r14
d835(3): mov %r14,%r13
d838(4): shl/sal $0x4,%r13
d83c(4): lea 0x0(%rdi,%r13,1),%rsi
d840(4): test $0x10,0xa(%rsi)
d844(2): jz 0xffffffa4(%rip)
d846(4): mov (%rsp),%r8
d84a(5): mov 0x28(%rsp),%rsi
d84f(3): mov %r15,%rcx
d852(3): mov %r14,%rdx
d855(5): call 0xfffffb4b(%rip)
d85a(3): cmp $0x1,%eax
d85d(6): jle 0x2c3(%rip)
d863(2): cwde 
d865(4): add (%rsp),%rax
d869(5): mov 0x18(%r12),%rdx
d86e(8): lea 0x0(,%r14,8),%r13
d876(4): mov 0x0(%rdx,%r14,8),%rdx
d87a(3): mov %rax,%rcx
d87d(5): mov %rax,0x38(%rsp)
d882(8): lea 0x0(,%rax,8),%r14
d88a(7): mov 0xb8(%r15),%rax
d891(4): mov 0x0(%rax,%rcx,8),%rsi
d895(c): mov $0x0,0xb8(%rsp)
d8a1(3): test %rsi,%rsi
d8a4(2): jz 0x25(%rip)
d8a6(5): mov 0x18(%rsp),%rdi
d8ab(4): add $0x8,%rsi
d8af(5): mov %rdx,0x50(%rsp)
d8b4(5): call 0xffffb85c(%rip)
d8b9(2): test %eax,%eax
d8bb(7): mov %eax,0x8c(%rsp)
d8c2(5): mov 0x50(%rsp),%rdx
d8c7(2): jnz 0x59(%rip)
d8c9(5): mov 0x18(%rsp),%rdi
d8ce(3): mov %rdx,%rsi
d8d1(5): call 0xffff9ddf(%rip)
d8d6(2): test %al,%al
d8d8(6): jz 0x280(%rip)
d8de(7): add 0xb8(%r15),%r14
d8e5(5): mov 0x18(%rsp),%rdx
d8ea(3): mov %r12,%rsi
d8ed(5): mov 0x58(%rsp),%rdi
d8f2(5): call 0xffffc90e(%rip)
d8f7(5): mov 0x38(%rsp),%rdx
d8fc(3): mov %rax,(%r14)
d8ff(7): mov 0xb8(%r15),%rax
d906(5): cmp $0x0,0x0(%rax,%rdx,8)
d90b(6): jnz 0xfffffef5(%rip)
d911(7): mov 0x8c(%rsp),%edx
d918(2): test %edx,%edx
d91a(6): jz 0xfffffee6(%rip)
d920(8): mov 0xc0(%rsp),%rdi
d928(5): call 0xffff40a8(%rip)
d92d(7): mov 0x8c(%rsp),%eax
d934(2): test %eax,%eax
d936(7): mov %eax,0x88(%rsp)
d93d(6): jnz 0x233(%rip)
d943(5): nop 0x0(%rax,%rax,1)
d948(4): mov (%rsp),%rax
d94c(9): cmp $0x0,0x98(%rsp)
d955(4): lea 0x1(%rax),%rbx
d959(3): mov %rbx,%r12
d95c(2): jz 0x58(%rip)
d95e(7): mov 0x110(%rsp),%ecx
d965(5): mov 0x48(%rsp),%rdx
d96a(5): mov 0x8(%rsp),%rsi
d96f(5): mov 0x30(%rsp),%rdi
d974(5): call 0xffffbc2c(%rip)
d979(2): test %eax,%eax
d97b(7): mov %eax,0x88(%rsp)
d982(6): jnz 0x1ee(%rip)
d988(8): mov 0x110(%rsp),%r8d
d990(5): mov 0x48(%rsp),%rcx
d995(3): mov %rbx,%rdx
d998(5): mov 0x8(%rsp),%rsi
d99d(3): mov %r15,%rdi
d9a0(5): call 0xffffcb40(%rip)
d9a5(2): test %eax,%eax
d9a7(7): mov %eax,0x88(%rsp)
d9ae(6): jnz 0x1c2(%rip)
d9b4(7): mov 0xa0(%r15),%edx
d9bb(4): mov (%rsp),%rsi
d9bf(3): mov %r15,%rdi
d9c2(5): call 0xffffd00e(%rip)
d9c7(5): mov 0x8(%rsp),%rdx
d9cc(5): mov 0x30(%rsp),%rsi
d9d1(8): lea 0x88(%rsp),%rdi
d9d9(2): mov %eax,%ecx
d9db(5): call 0xffffc565(%rip)
d9e0(3): test %rax,%rax
d9e3(3): mov %rax,%rbp
d9e6(6): jz 0x1ea(%rip)
d9ec(7): mov 0xb8(%r15),%rax
d9f3(5): mov 0x10(%rsp),%rdx
d9f8(9): mov $0x0,0x20(%rsp)
da01(4): mov %rbp,0x0(%rax,%rdx,1)
da05(5): cmp %rbx,0x40(%rsp)
da0a(2): jle 0x1e(%rip)
da0c(7): movsxd 0xe0(%r15),%rdx
da13(6): add $0x8,0x10(%rsp)
da19(5): cmp 0x20(%rsp),%rdx
da1e(4): mov %rbx,(%rsp)
da22(6): jnl 0xfffffd3c(%rip)
da28(8): mov 0xa0(%rsp),%rdi
da30(5): call 0xffff3fa0(%rip)
da35(7): mov 0xb8(%r15),%rax
da3c(5): mov 0x40(%rsp),%rbx
da41(4): mov 0x0(%rax,%rbx,8),%rax
da45(3): test %rax,%rax
da48(6): jz 0x2dd(%rip)
da4e(5): mov 0x60(%rsp),%rbx
da53(5): mov 0x78(%rsp),%rdx
da58(4): lea 0x18(%rax),%rsi
da5c(3): mov %r12,(%rbx)
da5f(5): mov 0x68(%rsp),%rbx
da64(7): mov %rbx,0xb8(%r15)
da6b(5): mov 0x70(%rsp),%rbx
da70(4): mov %rbx,0x48(%r15)
da74(4): mov 0x10(%rax),%rdi
da78(5): call 0xffffb178(%rip)
da7d(3): test %rax,%rax
da80(3): setz %al
da83(3): movzx %al,%eax
da86(5): jmp 0xfe(%rip)
da8b(5): nop 0x0(%rax,%rax,1)
da90(4): lea 0xffffffff(%rbp),%rsi
da94(4): mov %rbp,0x48(%r15)
da98(3): mov %r15,%rdi
da9b(5): call 0xffffcf35(%rip)
daa0(3): mov %eax,%r13d
daa3(5): mov $0x8,%edi
daa8(c): mov $0x1,0x90(%rsp)
dab4(c): mov $0x1,0x98(%rsp)
dac0(5): call 0xffff4160(%rip)
dac5(3): test %rax,%rax
dac8(8): mov %rax,0xa0(%rsp)
dad0(6): jz 0x24b(%rip)
dad6(3): mov %rbx,(%rax)
dad9(7): mov 0x110(%rsp),%ecx
dae0(8): lea 0x90(%rsp),%rbx
dae8(5): mov 0x48(%rsp),%rdx
daed(5): mov 0x30(%rsp),%rdi
daf2(3): mov %rbp,%r12
daf5(3): mov %rbx,%rsi
daf8(b): mov $0x0,0x88(%rsp)
db03(5): call 0xffffba9d(%rip)
db08(2): test %eax,%eax
db0a(7): mov %eax,0x88(%rsp)
db11(6): jz 0x11c(%rip)
db17(2): jmp 0x59(%rip)
db19(7): nop 0x0(%rax)
db20(2): test %eax,%eax
db22(6): jnz 0xfffffcd6(%rip)
db28(4): mov (%r12),%rsi
db2c(3): add %r13,%rsi
db2f(5): jmp 0xfffffcb9(%rip)
db34(4): nop 0x0(%rax)
db38(3): test %rbp,%rbp
db3b(6): jnz 0xfffffc67(%rip)
db41(4): mov (%rsp),%rax
db45(4): lea 0x1(%rax),%rbx
db49(3): mov %rbx,%r12
db4c(5): jmp 0xfffffe68(%rip)
db51(7): nop 0x0(%rax)
db58(8): mov 0xc0(%rsp),%rdi
db60(5): call 0xffff3e70(%rip)
db65(b): mov $0xc,0x88(%rsp)
db70(8): mov 0xa0(%rsp),%rdi
db78(5): call 0xffff3e58(%rip)
db7d(7): mov 0x88(%rsp),%eax
db84(8): mov 0xc8(%rsp),%rbx
db8c(9): xor $0x28,%rbx
db95(6): jnz 0x1b7(%rip)
db9b(7): add $0xd8,%rsp
dba2(1): pop %rbx
dba3(1): pop %rbp
dba4(2): pop %r12
dba6(2): pop %r13
dba8(2): pop %r14
dbaa(2): pop %r15
dbac(1): ret near (%rsp)
dbad(3): nop (%rax)
dbb0(8): mov 0xc0(%rsp),%rdi
dbb8(5): call 0xffff3e18(%rip)
dbbd(b): mov $0x0,0x88(%rsp)
dbc8(5): jmp 0xfffffd80(%rip)
dbcd(3): nop (%rax)
dbd0(7): mov 0x88(%rsp),%eax
dbd7(2): test %eax,%eax
dbd9(2): jnz 0xffffff97(%rip)
dbdb(7): mov 0xb8(%r15),%rax
dbe2(5): mov 0x10(%rsp),%rdx
dbe7(6): add $0x1,0x20(%rsp)
dbed(8): mov $0x0,0x0(%rax,%rdx,1)
dbf5(5): jmp 0xfffffe10(%rip)
dbfa(6): nop 0x0(%rax,%rax,1)
dc00(8): lea 0x90(%rsp),%rbx
dc08(4): lea 0x8(%rbp),%rsi
dc0c(3): mov %rbx,%rdi
dc0f(5): call 0xffffc141(%rip)
dc14(2): test %eax,%eax
dc16(7): mov %eax,0x88(%rsp)
dc1d(6): jnz 0xffffff67(%rip)
dc23(4): test $0x40,0x68(%rbp)
dc27(6): jz 0xfffffad5(%rip)
dc2d(9): cmp $0x0,0x98(%rsp)
dc36(2): jz 0x2c(%rip)
dc38(8): mov 0x110(%rsp),%r8d
dc40(5): mov 0x48(%rsp),%rcx
dc45(3): mov %r12,%rdx
dc48(3): mov %rbx,%rsi
dc4b(3): mov %r15,%rdi
dc4e(5): call 0xffffc892(%rip)
dc53(2): test %eax,%eax
dc55(7): mov %eax,0x88(%rsp)
dc5c(6): jnz 0xffffff14(%rip)
dc62(5): mov 0x30(%rsp),%rsi
dc67(8): lea 0x88(%rsp),%rdi
dc6f(3): mov %r13d,%ecx
dc72(3): mov %rbx,%rdx
dc75(5): call 0xffffc2cb(%rip)
dc7a(3): test %rax,%rax
dc7d(3): mov %rax,%rbp
dc80(6): jz 0x87(%rip)
dc86(7): mov 0xb8(%r15),%rax
dc8d(4): mov %rbp,0x0(%rax,%r12,8)
dc91(5): jmp 0xfffffa6b(%rip)
dc96(4): lea 0x1(%rax),%r12
dc9a(a): mov $0x9223372036854775807,%rax
dca4(3): sub %r13,%rax
dca7(3): cmp %r12,%rax
dcaa(2): jl 0x71(%rip)
dcac(5): lea 0x0(%r13,%r12,1),%r14
dcb1(a): mov $0x2305843009213693951,%rax
dcbb(3): cmp %rax,%r14
dcbe(2): jnbe 0x5d(%rip)
dcc0(5): mov 0x60(%rsp),%rax
dcc5(8): lea 0x0(,%r14,8),%rsi
dccd(4): mov 0x10(%rax),%rdi
dcd1(5): call 0xffff3fbf(%rip)
dcd6(3): test %rax,%rax
dcd9(2): jz 0x42(%rip)
dcdb(5): mov 0x60(%rsp),%rcx
dce0(8): lea 0x0(,%r12,8),%rdx
dce8(4): lea 0x0(%rax,%r13,8),%rdi
dcec(2): xor %esi,%esi
dcee(4): mov %rax,0x10(%rcx)
dcf2(4): mov %r14,0x8(%rcx)
dcf6(5): call 0xffff3e6a(%rip)
dcfb(5): jmp 0xfffff981(%rip)
dd00(2): xor %edi,%edi
dd02(5): jmp 0xfffffeb6(%rip)
dd07(7): mov 0x88(%rsp),%esi
dd0e(2): test %esi,%esi
dd10(6): jz 0xffffff76(%rip)
dd16(5): jmp 0xfffffe5a(%rip)
dd1b(5): mov $0xc,%eax
dd20(5): jmp 0xfffffe64(%rip)
dd25(5): mov 0x60(%rsp),%rax
dd2a(3): mov %r12,(%rax)
dd2d(5): mov 0x68(%rsp),%rax
dd32(7): mov %rax,0xb8(%r15)
dd39(5): mov 0x70(%rsp),%rax
dd3e(4): mov %rax,0x48(%r15)
dd42(5): mov $0x1,%eax
dd47(5): jmp 0xfffffe3d(%rip)
dd4c(5): call 0xffff3d84(%rip)

"set_regs" :
dd60(1): push %rbp
dd61(3): mov %rsp,%rbp
dd64(2): push %r15
dd66(2): push %r14
dd68(2): push %r13
dd6a(2): push %r12
dd6c(3): mov %rcx,%r13
dd6f(1): push %rbx
dd70(3): mov %rsi,%r12
dd73(7): sub $0xb8,%rsp
dd7a(7): mov %rdx,0xffffff68(%rbp)
dd81(8): mov $0x0,0xffffffb0(%rbp)
dd89(9): mov $0x28,%rax
dd92(4): mov %rax,0xffffffc8(%rbp)
dd96(2): xor %eax,%eax
dd98(3): mov (%rdi),%rax
dd9b(3): test %r8b,%r8b
dd9e(8): mov $0x2,0xffffffb8(%rbp)
dda6(8): mov $0x0,0xffffffc0(%rbp)
ddae(7): mov %rax,0xffffff70(%rbp)
ddb5(6): jz 0x7a8(%rip)
ddbb(5): mov $0x60,%edi
ddc0(5): call 0xffff3e60(%rip)
ddc5(4): lea 0xffffffb0(%rbp),%rcx
ddc9(3): test %rax,%rax
ddcc(4): mov %rax,0xffffffc0(%rbp)
ddd0(7): mov %rcx,0xffffff78(%rbp)
ddd7(6): jz 0x725(%rip)
dddd(7): mov 0xffffff70(%rbp),%rax
dde4(4): pxor %xmm0,%xmm0
dde8(8): mov $0x0,0xffffffa0(%rbp)
ddf0(7): mov 0x90(%rax),%rbx
ddf7(7): mov 0xffffff68(%rbp),%rax
ddfe(4): movaps %xmm0,0xffffff90(%rbp)
de02(4): shl/sal $0x4,%rax
de06(6): cmp $0xfbf,%rax
de0c(7): mov %rax,0xffffff48(%rbp)
de13(6): jnbe 0x6f3(%rip)
de19(4): add $0x10,%rax
de1d(7): mov $0x0,0xffffff37(%rbp)
de24(3): sub %rax,%rsp
de27(5): lea 0xf(%rsp),%rax
de2c(4): and $0xfffffff0,%rax
de30(7): mov %rax,0xffffff40(%rbp)
de37(7): mov 0xffffff48(%rbp),%rdx
de3e(7): mov 0xffffff40(%rbp),%rdi
de45(3): mov %r13,%rsi
de48(5): call 0xffff3d98(%rip)
de4d(4): lea 0xffffff90(%rbp),%rax
de51(4): mov 0x0(%r13),%rcx
de55(7): mov %rax,0xffffff58(%rbp)
de5c(4): add $0x10,%rax
de60(4): mov %rcx,0xffffff88(%rbp)
de64(7): mov %rax,0xffffff38(%rbp)
de6b(4): lea 0xffffff88(%rbp),%rax
de6f(7): mov %rax,0xffffff50(%rbp)
de76(5): jmp 0xe3(%rip)
de7b(5): nop 0x0(%rax,%rax,1)
de80(3): cmp $0x9,%esi
de83(6): jz 0x1ed(%rip)
de89(3): cmp %rcx,%rax
de8c(2): jnz 0x10(%rip)
de8e(8): cmp %rbx,0xb0(%r12)
de96(6): jz 0x3da(%rip)
de9c(8): mov 0x98(%r12),%r14
dea4(3): mov (%r14),%rdi
dea7(4): lea 0x0(%rdi,%r9,1),%rsi
deab(4): movzx 0x8(%rsi),%eax
deaf(2): test $0x8,%al
deb1(6): jnz 0x10f(%rip)
deb7(4): test $0x10,0xa(%rsi)
debb(6): jnz 0x205(%rip)
dec1(2): cmp $0x4,%al
dec3(6): jz 0x23d(%rip)
dec9(4): mov 0xffffff88(%rbp),%rcx
decd(3): mov %rcx,%rdx
ded0(3): mov %r12,%rdi
ded3(7): mov %rcx,0xffffff60(%rbp)
deda(5): call 0xffffcbe6(%rip)
dedf(2): test %al,%al
dee1(7): mov 0xffffff60(%rbp),%rcx
dee8(6): jz 0x450(%rip)
deee(4): mov 0x18(%r14),%rax
def2(4): lea 0x1(%rcx),%rdx
def6(4): mov 0x0(%rax,%r15,8),%rbx
defa(8): cmp $0x0,0xffffff78(%rbp)
df02(4): mov %rdx,0xffffff88(%rbp)
df06(2): jz 0x3e(%rip)
df08(8): cmp 0xa8(%r12),%rdx
df10(6): jnle 0x436(%rip)
df16(8): mov 0xb8(%r12),%rax
df1e(4): mov 0x0(%rax,%rdx,8),%rax
df22(3): test %rax,%rax
df25(6): jz 0x421(%rip)
df2b(4): mov 0x10(%rax),%rdi
df2f(4): lea 0x18(%rax),%rsi
df33(3): mov %rbx,%rdx
df36(5): call 0xffffacba(%rip)
df3b(3): test %rax,%rax
df3e(6): jz 0x408(%rip)
df44(8): mov $0x0,0xffffff98(%rbp)
df4c(3): test %rbx,%rbx
df4f(6): js 0x3db(%rip)
df55(4): mov 0xffffff88(%rbp),%rcx
df59(4): mov 0x8(%r13),%rax
df5d(3): cmp %rcx,%rax
df60(6): jl 0x4f0(%rip)
df66(7): mov 0xffffff70(%rbp),%rdi
df6d(3): mov %rbx,%r9
df70(3): mov %rbx,%r15
df73(4): shl/sal $0x4,%r9
df77(3): mov (%rdi),%rdx
df7a(3): add %r9,%rdx
df7d(4): movzx 0x8(%rdx),%esi
df81(3): cmp $0x8,%esi
df84(6): jnz 0xfffffefc(%rip)
df8a(3): mov (%rdx),%rdx
df8d(4): add $0x1,%rdx
df91(7): cmp %rdx,0xffffff68(%rbp)
df98(6): jle 0xfffffef1(%rip)
df9e(4): shl/sal $0x4,%rdx
dfa2(3): add %r13,%rdx
dfa5(8): mov $0xffffffff,0x8(%rdx)
dfad(3): mov %rcx,(%rdx)
dfb0(4): mov 0x8(%r13),%rax
dfb4(5): jmp 0xfffffed5(%rip)
dfb9(7): nop 0x0(%rax)
dfc0(8): mov 0xb8(%r12),%rax
dfc8(4): mov 0xffffff88(%rbp),%rdx
dfcc(3): mov %rbx,%rsi
dfcf(7): mov 0xffffff58(%rbp),%rdi
dfd6(4): mov 0x0(%rax,%rdx,8),%r9
dfda(4): mov 0x28(%r14),%rax
dfde(4): lea 0x0(%rbx,%rbx,2),%rdx
dfe2(7): mov %r9,0xffffff60(%rbp)
dfe9(4): lea 0x0(%rax,%rdx,8),%r15
dfed(5): call 0xffff96c3(%rip)
dff2(2): test %al,%al
dff4(7): mov 0xffffff60(%rbp),%r9
dffb(6): jz 0x4dd(%rip)
e001(4): mov 0x8(%r15),%r10
e005(3): test %r10,%r10
e008(6): jle 0x330(%rip)
e00e(4): mov 0x10(%r15),%r15
e012(4): mov 0x10(%r9),%r11
e016(4): lea 0x18(%r9),%r14
e01a(7): mov $0xffffffff,%rbx
e021(3): xor %r9d,%r9d
e024(7): mov %r12,0xffffff60(%rbp)
e02b(5): nop 0x0(%rax,%rax,1)
e030(4): mov 0x0(%r15,%r9,8),%r12
e034(3): mov %r14,%rsi
e037(3): mov %r11,%rdi
e03a(3): mov %r12,%rdx
e03d(5): call 0xffffabb3(%rip)
e042(3): test %rax,%rax
e045(2): jz 0xf(%rip)
e047(4): cmp $0xffffffff,%rbx
e04b(6): jnz 0x155(%rip)
e051(3): mov %r12,%rbx
e054(4): add $0x1,%r9
e058(3): cmp %r9,%r10
e05b(2): jnz 0xffffffd5(%rip)
e05d(7): mov 0xffffff60(%rbp),%r12
e064(5): jmp 0xfffffee8(%rip)
e069(7): nop 0x0(%rax)
e070(3): mov (%rdx),%rdi
e073(4): lea 0x1(%rdi),%rsi
e077(7): cmp %rsi,0xffffff68(%rbp)
e07e(6): jle 0xfffffe0b(%rip)
e084(4): shl/sal $0x4,%rsi
e088(5): lea 0x0(%r13,%rsi,1),%rax
e08d(3): cmp %rcx,(%rax)
e090(6): jl 0x380(%rip)
e096(4): test $0x8,0xa(%rdx)
e09a(2): jz 0x14(%rip)
e09c(7): mov 0xffffff40(%rbp),%rdi
e0a3(5): cmp $0xffffffff,0x0(%rdi,%rsi,1)
e0a8(6): jnz 0x3f3(%rip)
e0ae(4): mov %rcx,0x8(%rax)
e0b2(4): mov 0x8(%r13),%rax
e0b6(5): jmp 0xfffffdd3(%rip)
e0bb(5): nop 0x0(%rax,%rax,1)
e0c0(4): mov 0xffffff88(%rbp),%r8
e0c4(7): lea 0xd8(%r14),%rsi
e0cb(3): mov %r12,%rcx
e0ce(3): mov %rbx,%rdx
e0d1(7): mov %r9,0xffffff60(%rbp)
e0d8(5): call 0xfffff2c8(%rip)
e0dd(3): movsxd %eax,%rcx
e0e0(3): test %rcx,%rcx
e0e3(6): jnz 0x1fe(%rip)
e0e9(7): mov 0xffffff60(%rbp),%r9
e0f0(3): mov (%r14),%rsi
e0f3(4): mov 0xffffff88(%rbp),%rcx
e0f7(3): add %r9,%rsi
e0fa(5): jmp 0xfffffdd3(%rip)
e0ff(1): nop 
e100(3): mov (%rsi),%rax
e103(4): add $0x1,%rax
e107(4): shl/sal $0x4,%rax
e10b(3): add %r13,%rax
e10e(4): mov 0x8(%rax),%rdx
e112(3): mov (%rax),%rdi
e115(3): mov %rdx,%rcx
e118(3): sub %rdi,%rcx
e11b(8): cmp $0x0,0xffffff78(%rbp)
e123(6): jz 0x1b5(%rip)
e129(4): cmp $0xffffffff,%rdi
e12d(6): jz 0x219(%rip)
e133(4): cmp $0xffffffff,%rdx
e137(6): jz 0x20f(%rip)
e13d(3): test %rcx,%rcx
e140(6): jz 0x250(%rip)
e146(4): mov 0xffffff88(%rbp),%r15
e14a(5): mov 0x30(%r12),%rdx
e14f(5): mov 0x8(%r12),%rax
e154(3): sub %r15,%rdx
e157(3): cmp %rdx,%rcx
e15a(6): jnle 0x1ec(%rip)
e160(4): lea 0x0(%rax,%r15,1),%rsi
e164(3): add %rax,%rdi
e167(3): mov %rcx,%rdx
e16a(7): mov %rcx,0xffffff60(%rbp)
e171(5): call 0xffff3a1f(%rip)
e176(2): test %eax,%eax
e178(7): mov 0xffffff60(%rbp),%rcx
e17f(6): jnz 0x1c7(%rip)
e185(4): mov 0x18(%r14),%rax
e189(4): lea 0x0(%r15,%rcx,1),%rdx
e18d(4): mov 0x0(%rax,%rbx,8),%rbx
e191(5): jmp 0xfffffd69(%rip)
e196(a): nop 0x0(%rax,%rax,1)
e1a0(7): mov 0xffffff38(%rbp),%rsi
e1a7(4): mov 0xffffff98(%rbp),%rdi
e1ab(3): mov %rbx,%rdx
e1ae(3): mov %r12,%r14
e1b1(7): mov 0xffffff60(%rbp),%r12
e1b8(5): call 0xffffaa38(%rip)
e1bd(3): test %rax,%rax
e1c0(6): jnz 0x1c0(%rip)
e1c6(7): mov 0xffffff78(%rbp),%rcx
e1cd(3): test %rcx,%rcx
e1d0(6): jz 0xfffffd7c(%rip)
e1d6(3): mov (%rcx),%r15
e1d9(4): mov 0xffffff88(%rbp),%rdx
e1dd(4): lea 0x1(%r15),%rax
e1e1(4): cmp 0x8(%rcx),%rax
e1e5(3): mov %rax,(%rcx)
e1e8(6): jz 0x385(%rip)
e1ee(4): mov 0x10(%rcx),%rax
e1f2(4): lea 0x0(%r15,%r15,2),%r15
e1f6(4): shl/sal $0x4,%r15
e1fa(3): add %rax,%r15
e1fd(4): mov %r14,0x8(%r15)
e201(7): mov 0xffffff48(%rbp),%r14
e208(3): mov %rdx,(%r15)
e20b(3): mov %r14,%rdi
e20e(5): call 0xffff3a12(%rip)
e213(3): test %rax,%rax
e216(4): mov %rax,0x10(%r15)
e21a(2): jz 0x28(%rip)
e21c(3): mov %r14,%rdx
e21f(3): mov %r13,%rsi
e222(3): mov %rax,%rdi
e225(5): call 0xffff39bb(%rip)
e22a(7): mov 0xffffff58(%rbp),%rsi
e231(4): lea 0x18(%r15),%rdi
e235(5): call 0xffffbb1b(%rip)
e23a(2): test %eax,%eax
e23c(6): jz 0xfffffd10(%rip)
e242(4): mov 0xffffffa0(%rbp),%rdi
e246(5): call 0xffff378a(%rip)
e24b(7): cmp $0x0,0xffffff37(%rbp)
e252(6): jnz 0x399(%rip)
e258(7): mov 0xffffff78(%rbp),%rdi
e25f(5): call 0xffffe051(%rip)
e264(5): mov $0xc,%eax
e269(5): jmp 0x210(%rip)
e26e(2): nop 
e270(8): cmp $0x0,0xffffff78(%rbp)
e278(6): jz 0x334(%rip)
e27e(7): mov 0xffffff68(%rbp),%rcx
e285(3): test %rcx,%rcx
e288(2): jz 0x22(%rip)
e28a(3): mov %r13,%rax
e28d(2): xor %edx,%edx
e28f(1): nop 
e290(4): cmp $0x0,(%rax)
e294(2): js 0x9(%rip)
e296(5): cmp $0xffffffff,0x8(%rax)
e29b(2): jz 0x55(%rip)
e29d(4): add $0x1,%rdx
e2a1(4): add $0x10,%rax
e2a5(3): cmp %rdx,%rcx
e2a8(2): jnz 0xffffffe8(%rip)
e2aa(4): mov 0xffffffa0(%rbp),%rdi
e2ae(5): call 0xffff3722(%rip)
e2b3(7): cmp $0x0,0xffffff37(%rbp)
e2ba(6): jnz 0x37a(%rip)
e2c0(7): mov 0xffffff78(%rbp),%rdi
e2c7(5): call 0xffffdfe9(%rip)
e2cc(2): xor %eax,%eax
e2ce(5): jmp 0x1ab(%rip)
e2d3(5): nop 0x0(%rax,%rax,1)
e2d8(3): test %rcx,%rcx
e2db(6): jz 0xb5(%rip)
e2e1(4): mov 0xffffff88(%rbp),%r15
e2e5(5): jmp 0xfffffea0(%rip)
e2ea(6): nop 0x0(%rax,%rax,1)
e2f0(7): mov 0xffffff78(%rbp),%rdi
e2f7(7): mov 0xffffff58(%rbp),%r9
e2fe(3): mov %r13,%r8
e301(7): mov 0xffffff68(%rbp),%rcx
e308(7): mov 0xffffff50(%rbp),%rdx
e30f(4): lea 0x10(%rdi),%rsi
e313(5): call 0xffffdfed(%rip)
e318(3): mov %rax,%r9
e31b(3): mov %rax,%rbx
e31e(3): mov %rax,%r15
e321(4): shl/sal $0x4,%r9
e325(5): jmp 0xfffffb77(%rip)
e32a(4): cmp $0xfffffffe,%rbx
e32e(6): jz 0x1aa(%rip)
e334(4): nop 0x0(%rax)
e338(8): cmp $0x0,0xffffff78(%rbp)
e340(6): jz 0x2bc(%rip)
e346(7): mov 0xffffff78(%rbp),%rdi
e34d(7): mov 0xffffff68(%rbp),%rcx
e354(4): lea 0xffffff88(%rbp),%rdx
e358(7): mov 0xffffff58(%rbp),%r9
e35f(3): mov %r13,%r8
e362(4): lea 0x10(%rdi),%rsi
e366(5): call 0xffffdf9a(%rip)
e36b(4): mov 0xffffff88(%rbp),%rcx
e36f(3): mov %rax,%rbx
e372(5): jmp 0xfffffaf9(%rip)
e377(9): nop 0x0(%rax,%rax,1)
e380(3): mov %r14,%rbx
e383(5): jmp 0xfffffbc9(%rip)
e388(8): nop 0x0(%rax,%rax,1)
e390(7): mov 0xffffff58(%rbp),%rdi
e397(3): mov %rbx,%rsi
e39a(7): mov %r9,0xffffff60(%rbp)
e3a1(5): call 0xffff930f(%rip)
e3a6(2): test %al,%al
e3a8(6): jz 0x130(%rip)
e3ae(4): mov 0x28(%r14),%rdx
e3b2(4): lea 0x0(%rbx,%rbx,2),%rax
e3b6(4): mov 0xffffff88(%rbp),%rcx
e3ba(4): lea 0x0(%rdx,%rax,8),%rax
e3be(7): mov %rcx,0xffffff28(%rbp)
e3c5(4): mov 0x10(%rax),%rax
e3c9(3): mov (%rax),%rbx
e3cc(8): mov 0xb8(%r12),%rax
e3d4(4): mov 0x0(%rax,%rcx,8),%rax
e3d8(3): mov %rbx,%rdx
e3db(4): mov 0x10(%rax),%rdi
e3df(4): lea 0x18(%rax),%rsi
e3e3(5): call 0xffffa80d(%rip)
e3e8(3): test %rax,%rax
e3eb(6): jnz 0xfffffb61(%rip)
e3f1(7): mov 0xffffff60(%rbp),%r9
e3f8(3): mov (%r14),%rsi
e3fb(7): mov 0xffffff28(%rbp),%rcx
e402(3): add %r9,%rsi
e405(5): jmp 0xfffffac8(%rip)
e40a(6): nop 0x0(%rax,%rax,1)
e410(7): mov 0xffffff48(%rbp),%rdx
e417(7): mov 0xffffff40(%rbp),%rdi
e41e(3): mov %r13,%rsi
e421(4): mov %rcx,0x8(%rax)
e425(7): mov %r9,0xffffff28(%rbp)
e42c(7): mov %rcx,0xffffff60(%rbp)
e433(5): call 0xffff37ad(%rip)
e438(4): mov 0x8(%r13),%rax
e43c(7): mov 0xffffff60(%rbp),%rcx
e443(7): mov 0xffffff28(%rbp),%r9
e44a(5): jmp 0xfffffa3f(%rip)
e44f(1): nop 
e450(4): mov 0xffffffa0(%rbp),%rdi
e454(5): call 0xffff357c(%rip)
e459(7): cmp $0x0,0xffffff37(%rbp)
e460(6): jnz 0xdc(%rip)
e466(7): mov 0xffffff78(%rbp),%rdi
e46d(3): test %rdi,%rdi
e470(2): jz 0x7(%rip)
e472(5): call 0xffffde3e(%rip)
e477(2): xor %eax,%eax
e479(4): mov 0xffffffc8(%rbp),%rbx
e47d(9): xor $0x28,%rbx
e486(6): jnz 0x1bf(%rip)
e48c(4): lea 0xffffffd8(%rbp),%rsp
e490(1): pop %rbx
e491(2): pop %r12
e493(2): pop %r13
e495(2): pop %r14
e497(2): pop %r15
e499(1): pop %rbp
e49a(1): ret near (%rsp)
e49b(7): mov 0xffffff48(%rbp),%rdx
e4a2(3): mov %rdi,%rsi
e4a5(3): mov %r13,%rdi
e4a8(7): mov %rcx,0xffffff28(%rbp)
e4af(7): mov %r9,0xffffff60(%rbp)
e4b6(5): call 0xffff372a(%rip)
e4bb(4): mov 0x8(%r13),%rax
e4bf(7): mov 0xffffff60(%rbp),%r9
e4c6(7): mov 0xffffff28(%rbp),%rcx
e4cd(5): jmp 0xfffff9bc(%rip)
e4d2(6): nop 0x0(%rax,%rax,1)
e4d8(4): mov 0xffffffa0(%rbp),%rdi
e4dc(5): call 0xffff34f4(%rip)
e4e1(7): cmp $0x0,0xffffff37(%rbp)
e4e8(6): jnz 0x103(%rip)
e4ee(8): cmp $0x0,0xffffff78(%rbp)
e4f6(6): jnz 0xfffffd62(%rip)
e4fc(5): mov $0xc,%eax
e501(5): jmp 0xffffff78(%rip)
e506(7): mov 0xffffff48(%rbp),%rdi
e50d(5): call 0xffff3713(%rip)
e512(3): test %rax,%rax
e515(7): mov %rax,0xffffff40(%rbp)
e51c(7): mov $0x1,0xffffff37(%rbp)
e523(6): jnz 0xfffff914(%rip)
e529(7): mov 0xffffff78(%rbp),%rdi
e530(3): test %rdi,%rdi
e533(2): jz 0xffffffc9(%rip)
e535(5): call 0xffffdd7b(%rip)
e53a(2): jmp 0xffffffc2(%rip)
e53c(7): mov 0xffffff40(%rbp),%rdi
e543(5): call 0xffff348d(%rip)
e548(7): mov 0xffffff78(%rbp),%rdi
e54f(3): test %rdi,%rdi
e552(6): jnz 0xffffff20(%rip)
e558(5): jmp 0xffffff1f(%rip)
e55d(b): mov $0x0,0xffffff78(%rbp)
e568(5): jmp 0xfffff875(%rip)
e56d(4): lea 0x0(%rax,%rax,2),%rsi
e571(7): mov 0xffffff78(%rbp),%rax
e578(7): mov %rdx,0xffffff60(%rbp)
e57f(4): shl/sal $0x5,%rsi
e583(4): mov 0x10(%rax),%rdi
e587(5): call 0xffff3709(%rip)
e58c(3): test %rax,%rax
e58f(2): jz 0x46(%rip)
e591(7): mov 0xffffff78(%rbp),%rcx
e598(7): mov 0xffffff60(%rbp),%rdx
e59f(4): shl/sal $0x1,0x8(%rcx)
e5a3(4): mov %rax,0x10(%rcx)
e5a7(5): jmp 0xfffffc4b(%rip)
e5ac(4): mov 0xffffffa0(%rbp),%rdi
e5b0(5): call 0xffff3420(%rip)
e5b5(7): cmp $0x0,0xffffff37(%rbp)
e5bc(6): jz 0xfffffebb(%rip)
e5c2(7): mov 0xffffff40(%rbp),%rdi
e5c9(5): call 0xffff3407(%rip)
e5ce(2): xor %eax,%eax
e5d0(5): jmp 0xfffffea9(%rip)
e5d5(4): mov 0xffffffa0(%rbp),%rdi
e5d9(5): call 0xffff33f7(%rip)
e5de(7): cmp $0x0,0xffffff37(%rbp)
e5e5(6): jz 0xfffffc73(%rip)
e5eb(7): mov 0xffffff40(%rbp),%rdi
e5f2(5): call 0xffff33de(%rip)
e5f7(5): jmp 0xfffffef7(%rip)
e5fc(4): mov 0xffffffa0(%rbp),%rdi
e600(5): call 0xffff33d0(%rip)
e605(7): cmp $0x0,0xffffff37(%rbp)
e60c(5): mov $0x1,%eax
e611(6): jz 0xfffffe68(%rip)
e617(7): mov 0xffffff40(%rbp),%rdi
e61e(6): mov %eax,0xffffff78(%rbp)
e624(5): call 0xffff33ac(%rip)
e629(6): mov 0xffffff78(%rbp),%eax
e62f(5): jmp 0xfffffe4a(%rip)
e634(7): mov 0xffffff40(%rbp),%rdi
e63b(5): call 0xffff3395(%rip)
e640(5): jmp 0xfffffc80(%rip)
e645(5): call 0xffff348b(%rip)

"get_subexp_sub.isra.32" :
e650(2): push %r15
e652(2): push %r14
e654(3): mov %rcx,%r14
e657(2): push %r13
e659(2): push %r12
e65b(3): mov %rsi,%r13
e65e(1): push %rbp
e65f(1): push %rbx
e660(4): lea 0x10(%rdx),%rsi
e664(3): mov %rdx,%rbp
e667(3): mov %r8,%r9
e66a(3): mov %r8,%r12
e66d(4): sub $0x20,%rsp
e671(4): mov 0x8(%rdx),%rcx
e675(3): mov %r14,%r8
e678(2): push $0x8
e67a(3): mov (%rdx),%rdx
e67d(3): mov %rdi,%rbx
e680(5): call 0xffffef80(%rip)
e685(2): test %eax,%eax
e687(1): pop %rdx
e688(1): pop %rcx
e689(2): jz 0x17(%rip)
e68b(4): add $0x18,%rsp
e68f(1): pop %rbx
e690(1): pop %rbp
e691(2): pop %r12
e693(2): pop %r13
e695(2): pop %r14
e697(2): pop %r15
e699(1): ret near (%rsp)
e69a(6): nop 0x0(%rax,%rax,1)
e6a0(7): mov 0xc8(%rbx),%rax
e6a7(7): mov 0xd0(%rbx),%rdx
e6ae(4): mov 0x8(%rbp),%r15
e6b2(4): mov 0x0(%r13),%rcx
e6b6(7): mov 0xd8(%rbx),%rdi
e6bd(3): cmp %rdx,%rax
e6c0(3): mov %r15,%rsi
e6c3(6): jnl 0x9d(%rip)
e6c9(4): lea 0x0(%rax,%rax,4),%rdx
e6cd(4): shl/sal $0x3,%rdx
e6d1(3): test %rax,%rax
e6d4(2): jle 0xd(%rip)
e6d6(5): lea 0xffffffd8(%rdi,%rdx,1),%r8
e6db(4): cmp 0x8(%r8),%r12
e6df(2): jz 0x71(%rip)
e6e1(3): add %rdx,%rdi
e6e4(2): xor %edx,%edx
e6e6(3): cmp %rcx,%r15
e6e9(3): setz %dl
e6ec(4): add $0x1,%rax
e6f0(3): mov %r14,(%rdi)
e6f3(2): neg %edx
e6f5(4): mov %r12,0x8(%rdi)
e6f9(4): mov %rcx,0x10(%rdi)
e6fd(4): mov %dx,0x22(%rdi)
e701(4): mov %r15,0x18(%rdi)
e705(7): mov %rax,0xc8(%rbx)
e70c(4): mov $0x0,0x20(%rdi)
e710(3): mov %r15,%rax
e713(7): movsxd 0xe0(%rbx),%rdx
e71a(3): sub %rcx,%rax
e71d(3): cmp %rax,%rdx
e720(2): jnl 0xc(%rip)
e722(3): sub %ecx,%r15d
e725(7): mov %r15d,0xe0(%rbx)
e72c(3): add %r12,%rsi
e72f(4): sub 0x0(%r13),%rsi
e733(4): add $0x18,%rsp
e737(3): mov %rbx,%rdi
e73a(1): pop %rbx
e73b(1): pop %rbp
e73c(2): pop %r12
e73e(2): pop %r13
e740(2): pop %r14
e742(2): pop %r15
e744(5): jmp 0xffff9b3c(%rip)
e749(7): nop 0x0(%rax)
e750(5): mov $0x1,0x20(%r8)
e755(2): jmp 0xffffff8c(%rip)
e757(9): nop 0x0(%rax,%rax,1)
e760(4): lea 0x0(%rdx,%rdx,4),%rsi
e764(5): mov %rcx,0x8(%rsp)
e769(4): shl/sal $0x4,%rsi
e76d(5): call 0xffff3523(%rip)
e772(3): test %rax,%rax
e775(5): mov 0x8(%rsp),%rcx
e77a(2): jz 0x56(%rip)
e77c(7): mov 0xc8(%rbx),%rsi
e783(7): mov 0xd0(%rbx),%rdx
e78a(7): mov %rax,0xd8(%rbx)
e791(5): mov %rcx,0x8(%rsp)
e796(4): lea 0x0(%rsi,%rsi,4),%rsi
e79a(4): lea 0x0(%rdx,%rdx,4),%rdx
e79e(4): lea 0x0(%rax,%rsi,8),%rdi
e7a2(4): shl/sal $0x3,%rdx
e7a6(2): xor %esi,%esi
e7a8(5): call 0xffff33b8(%rip)
e7ad(7): shl/sal $0x1,0xd0(%rbx)
e7b4(7): mov 0xc8(%rbx),%rax
e7bb(7): mov 0xd8(%rbx),%rdi
e7c2(4): mov 0x8(%rbp),%rsi
e7c6(5): mov 0x8(%rsp),%rcx
e7cb(5): jmp 0xfffffefe(%rip)
e7d0(7): mov 0xd8(%rbx),%rdi
e7d7(5): call 0xffff31f9(%rip)
e7dc(5): mov $0xc,%eax
e7e1(5): jmp 0xfffffeaa(%rip)

"transit_state_bkref.isra.34" :
e7f0(2): push %r15
e7f2(2): push %r14
e7f4(2): push %r13
e7f6(2): push %r12
e7f8(1): push %rbp
e7f9(1): push %rbx
e7fa(7): sub $0xb8,%rsp
e801(4): mov 0x48(%rdi),%r15
e805(9): mov $0x28,%rax
e80e(8): mov %rax,0xa8(%rsp)
e816(2): xor %eax,%eax
e818(4): cmp $0x0,(%rsi)
e81c(7): mov 0x98(%rdi),%rax
e823(5): mov %rsi,0x48(%rsp)
e828(5): mov %rdx,0x40(%rsp)
e82d(5): mov %rax,0x38(%rsp)
e832(6): jle 0x32e(%rip)
e838(8): lea 0x0(,%r15,8),%rax
e840(3): mov %rdi,%r14
e843(8): mov $0x0,(%rsp)
e84b(5): mov %r15,0x8(%rsp)
e850(5): mov %rax,0x60(%rsp)
e855(8): lea 0x90(%rsp),%rax
e85d(5): mov %rax,0x68(%rsp)
e862(8): lea 0x8c(%rsp),%rax
e86a(5): mov %rax,0x78(%rsp)
e86f(2): jmp 0x48(%rip)
e871(7): nop 0x0(%rax)
e878(2): test $0x1,%al
e87a(2): jz 0x26(%rip)
e87c(3): and $0x8,%edx
e87f(2): jnz 0x21(%rip)
e881(3): test $0x20,%cl
e884(2): jz 0x6(%rip)
e886(2): test $0x2,%al
e888(2): jz 0x18(%rip)
e88a(6): and $0x80,%ecx
e890(6): jz 0xa0(%rip)
e896(2): test $0x8,%al
e898(6): jnz 0x98(%rip)
e89e(2): nop 
e8a0(5): mov 0x48(%rsp),%rdi
e8a5(5): add $0x1,(%rsp)
e8aa(4): mov (%rsp),%rax
e8ae(3): cmp (%rdi),%rax
e8b1(6): jnl 0x2af(%rip)
e8b7(5): mov 0x40(%rsp),%rax
e8bc(4): mov (%rsp),%rdi
e8c0(3): mov (%rax),%rax
e8c3(4): mov 0x0(%rax,%rdi,8),%r13
e8c7(5): mov 0x38(%rsp),%rdi
e8cc(3): mov (%rdi),%rax
e8cf(3): mov %r13,%rbx
e8d2(4): shl/sal $0x4,%rbx
e8d6(3): add %rbx,%rax
e8d9(4): cmp $0x4,0x8(%rax)
e8dd(2): jnz 0xffffffc3(%rip)
e8df(3): mov 0x8(%rax),%ebp
e8e2(6): test $0x3ff00,%ebp
e8e8(2): jz 0x48(%rip)
e8ea(7): mov 0xa0(%r14),%edx
e8f1(5): mov 0x8(%rsp),%rsi
e8f6(3): mov %r14,%rdi
e8f9(5): call 0xffffc0d7(%rip)
e8fe(2): mov %ebp,%edx
e900(3): shr $0x8,%edx
e903(2): mov %edx,%ecx
e905(5): and $0x3ff,%cx
e90a(3): test $0x4,%dl
e90d(6): jnz 0xffffff6b(%rip)
e913(3): and $0x8,%edx
e916(6): jz 0xffffff6b(%rip)
e91c(2): test $0x1,%al
e91e(6): jz 0xffffff63(%rip)
e924(5): jmp 0xffffff7c(%rip)
e929(7): nop 0x0(%rax)
e930(7): mov 0xc8(%r14),%rdi
e937(7): mov 0x98(%r14),%rax
e93e(2): xor %ecx,%ecx
e940(4): mov 0x8(%r14),%r10
e944(5): mov 0x8(%rsp),%r9
e949(5): mov %rdi,0x70(%rsp)
e94e(5): mov %rax,0x50(%rsp)
e953(3): cmp %rdi,%rcx
e956(2): jnl 0x55(%rip)
e958(4): lea 0x0(%rcx,%rdi,1),%rax
e95c(7): mov 0xd8(%r14),%r11
e963(3): mov %rax,%rsi
e966(4): shr $0x3f,%rsi
e96a(3): add %rax,%rsi
e96d(3): sar $0x1,%rsi
e970(4): lea 0x0(%rsi,%rsi,4),%rax
e974(5): cmp 0x8(%r11,%rax,8),%r9
e979(2): jle 0x2d(%rip)
e97b(5): jmp 0x1cd(%rip)
e980(4): lea 0x0(%rsi,%rcx,1),%rdx
e984(3): mov %rdx,%rax
e987(4): shr $0x3f,%rax
e98b(3): add %rdx,%rax
e98e(3): sar $0x1,%rax
e991(4): lea 0x0(%rax,%rax,4),%rdx
e995(3): mov %rax,%r8
e998(5): cmp 0x8(%r11,%rdx,8),%r9
e99d(6): jnle 0x1b3(%rip)
e9a3(3): mov %rax,%rsi
e9a6(3): cmp %rcx,%rsi
e9a9(2): jnle 0xffffffd7(%rip)
e9ab(5): cmp %rcx,0x70(%rsp)
e9b0(2): jle 0x26(%rip)
e9b2(7): mov 0xd8(%r14),%rdx
e9b9(4): lea 0x0(%rcx,%rcx,4),%rax
e9bd(5): mov 0x8(%rsp),%rdi
e9c2(4): lea 0x0(%rdx,%rax,8),%rax
e9c6(4): cmp %rdi,0x8(%rax)
e9ca(2): jnz 0xc(%rip)
e9cc(4): cmp $0xffffffff,%rcx
e9d0(6): jnz 0x1d6(%rip)
e9d6(5): mov 0x50(%rsp),%rax
e9db(8): cmp $0x0,0xe8(%r14)
e9e3(3): mov (%rax),%rdx
e9e6(4): mov 0x0(%rdx,%rbx,1),%rax
e9ea(5): mov %rax,0x58(%rsp)
e9ef(6): jle 0x1bc(%rip)
e9f5(5): mov %r13,0x30(%rsp)
e9fa(9): mov $0x0,0x28(%rsp)
ea03(3): mov %r10,%r13
ea06(7): mov 0xf8(%r14),%rax
ea0d(5): mov 0x28(%rsp),%rbx
ea12(5): mov 0x58(%rsp),%rdi
ea17(4): mov 0x0(%rax,%rbx,8),%rbx
ea1b(4): mov 0x8(%rbx),%rax
ea1f(4): shl/sal $0x4,%rax
ea23(4): cmp 0x0(%rdx,%rax,1),%rdi
ea27(2): jz 0x29(%rip)
ea29(6): add $0x1,0x28(%rsp)
ea2f(5): mov 0x28(%rsp),%rax
ea34(7): cmp 0xe8(%r14),%rax
ea3b(6): jnl 0x676(%rip)
ea41(5): mov 0x50(%rsp),%rax
ea46(3): mov (%rax),%rdx
ea49(2): jmp 0xffffffbd(%rip)
ea4b(5): nop 0x0(%rax,%rax,1)
ea50(5): cmp $0x0,0x20(%rbx)
ea55(3): mov (%rbx),%r11
ea58(6): jle 0x66a(%rip)
ea5e(5): mov 0x8(%rsp),%rcx
ea63(3): mov %r13,%r8
ea66(2): xor %ebp,%ebp
ea68(3): mov %rbx,%r13
ea6b(3): mov %rcx,%rbx
ea6e(2): jmp 0x6e(%rip)
ea70(4): lea 0x0(%r8,%r11,1),%rsi
ea74(4): lea 0x0(%r8,%rbx,1),%rdi
ea78(5): mov %r9,0x20(%rsp)
ea7d(5): mov %r11,0x18(%rsp)
ea82(5): mov %r8,0x10(%rsp)
ea87(5): call 0xffff3109(%rip)
ea8c(2): test %eax,%eax
ea8e(5): mov 0x10(%rsp),%r8
ea93(5): mov 0x18(%rsp),%r11
ea98(5): mov 0x20(%rsp),%r9
ea9d(6): jnz 0x4cb(%rip)
eaa3(5): mov 0x8(%rsp),%r8
eaa8(5): mov 0x30(%rsp),%rcx
eaad(3): mov %r9,%rdx
eab0(3): mov %r13,%rsi
eab3(3): mov %r14,%rdi
eab6(5): call 0xfffffb9a(%rip)
eabb(3): cmp $0x1,%eax
eabe(4): mov 0x8(%r14),%r8
eac2(6): jnbe 0xa6(%rip)
eac8(4): add $0x1,%rbp
eacc(4): cmp 0x20(%r13),%rbp
ead0(3): mov %r15,%r11
ead3(3): mov %r12,%rbx
ead6(6): jnl 0x2b2(%rip)
eadc(4): mov 0x28(%r13),%rax
eae0(4): mov 0x0(%rax,%rbp,8),%r9
eae4(4): mov 0x8(%r9),%r15
eae8(3): mov %r15,%rdx
eaeb(3): sub %r11,%rdx
eaee(3): test %rdx,%rdx
eaf1(4): lea 0x0(%rdx,%rbx,1),%r12
eaf5(2): jle 0xffffffae(%rip)
eaf7(4): cmp %r12,0x30(%r14)
eafb(6): jnl 0xffffff75(%rip)
eb01(4): cmp %r12,0x58(%r14)
eb05(5): mov %rdx,0x18(%rsp)
eb0a(5): mov %r9,0x10(%rsp)
eb0f(6): jl 0x459(%rip)
eb15(3): mov %r12,%rsi
eb18(3): mov %r14,%rdi
eb1b(5): mov %r11,0x20(%rsp)
eb20(5): call 0xffff9760(%rip)
eb25(2): test %eax,%eax
eb27(2): jnz 0x41(%rip)
eb29(4): mov 0x8(%r14),%r8
eb2d(5): mov 0x18(%rsp),%rdx
eb32(5): mov 0x10(%rsp),%r9
eb37(5): mov 0x20(%rsp),%r11
eb3c(5): jmp 0xffffff34(%rip)
eb41(7): nop 0x0(%rax)
eb48(3): mov %rsi,%r8
eb4b(3): mov %rdi,%rsi
eb4e(2): nop 
eb50(4): lea 0x1(%r8),%rcx
eb54(3): mov %rsi,%rdi
eb57(5): jmp 0xfffffdfc(%rip)
eb5c(4): nop 0x0(%rax)
eb60(2): xor %eax,%eax
eb62(6): nop 0x0(%rax,%rax,1)
eb68(8): mov 0xa8(%rsp),%rbx
eb70(9): xor $0x28,%rbx
eb79(6): jnz 0x553(%rip)
eb7f(7): add $0xb8,%rsp
eb86(1): pop %rbx
eb87(1): pop %rbp
eb88(2): pop %r12
eb8a(2): pop %r13
eb8c(2): pop %r14
eb8e(2): pop %r15
eb90(1): ret near (%rsp)
eb91(7): nop 0x0(%rax)
eb98(4): add $0x28,%rax
eb9c(4): cmp $0x0,0xfffffff8(%rax)
eba0(6): jz 0xfffffe36(%rip)
eba6(3): cmp (%rax),%r13
eba9(2): jnz 0xffffffef(%rip)
ebab(5): mov 0x70(%rsp),%rax
ebb0(5): cmp %rax,0x70(%rsp)
ebb5(b): mov $0x0,0x8c(%rsp)
ebc0(6): jnl 0xfffffce0(%rip)
ebc6(8): lea 0x0(,%r13,8),%rax
ebce(5): mov 0x70(%rsp),%r12
ebd3(5): mov 0x38(%rsp),%rbp
ebd8(5): mov %rax,0x50(%rsp)
ebdd(5): lea 0x0(%r13,%r13,2),%rax
ebe2(4): lea 0x0(%r12,%r12,4),%r8
ebe6(4): shl/sal $0x3,%rax
ebea(5): mov %rax,0x58(%rsp)
ebef(8): lea 0x0(,%r8,8),%r15
ebf7(5): jmp 0x136(%rip)
ebfc(4): nop 0x0(%rax)
ec00(4): mov 0x28(%rbp),%rcx
ec04(5): mov 0x58(%rsp),%rdi
ec09(5): mov 0x10(%rcx,%rdi,1),%rcx
ec0e(3): mov (%rcx),%rcx
ec11(4): lea 0x0(%rcx,%rcx,2),%rcx
ec15(4): lea 0x0(%rdx,%rcx,8),%rcx
ec19(5): mov %rcx,0x18(%rsp)
ec1e(5): add 0x8(%rsp),%rbx
ec23(7): mov 0xa0(%r14),%edx
ec2a(3): mov %r14,%rdi
ec2d(3): sub %rax,%rbx
ec30(4): lea 0xffffffff(%rbx),%rsi
ec34(5): call 0xffffbd9c(%rip)
ec39(5): mov 0x60(%rsp),%rsi
ec3e(2): mov %eax,%ecx
ec40(7): mov 0xb8(%r14),%rax
ec47(8): lea 0x0(,%rbx,8),%r10
ec4f(9): mov $0x0,0x10(%rsp)
ec58(4): lea 0x0(%rax,%r10,1),%r11
ec5c(4): mov 0x0(%rax,%rsi,1),%rax
ec60(3): mov (%r11),%rdx
ec63(3): test %rax,%rax
ec66(2): jz 0xb(%rip)
ec68(4): mov 0x10(%rax),%rax
ec6c(5): mov %rax,0x10(%rsp)
ec71(3): test %rdx,%rdx
ec74(6): jz 0x31c(%rip)
ec7a(4): mov 0x50(%rdx),%rsi
ec7e(5): mov 0x68(%rsp),%rdi
ec83(5): mov 0x18(%rsp),%rdx
ec88(5): mov %r10,0x30(%rsp)
ec8d(4): mov %ecx,0x28(%rsp)
ec91(5): call 0xffffb14f(%rip)
ec96(2): test %eax,%eax
ec98(7): mov %eax,0x8c(%rsp)
ec9f(4): mov 0x28(%rsp),%ecx
eca3(5): mov 0x30(%rsp),%r10
eca8(6): jnz 0x390(%rip)
ecae(7): add 0xb8(%r14),%r10
ecb5(5): mov 0x68(%rsp),%rdx
ecba(3): mov %rbp,%rsi
ecbd(5): mov 0x78(%rsp),%rdi
ecc2(5): mov %r10,0x28(%rsp)
ecc7(5): call 0xffffb279(%rip)
eccc(5): mov 0x28(%rsp),%r10
ecd1(8): mov 0xa0(%rsp),%rdi
ecd9(3): mov %rax,(%r10)
ecdc(5): call 0xffff2cf4(%rip)
ece1(7): mov 0xb8(%r14),%rdx
ece8(5): cmp $0x0,0x0(%rdx,%rbx,8)
eced(6): jz 0x2d4(%rip)
ecf3(6): cmp $0x0,0x20(%rsp)
ecf9(2): jnz 0x1f(%rip)
ecfb(5): mov 0x60(%rsp),%rax
ed00(5): mov 0x10(%rsp),%rbx
ed05(4): mov 0x0(%rdx,%rax,1),%rax
ed09(4): cmp %rbx,0x10(%rax)
ed0d(6): jnle 0x2cb(%rip)
ed13(5): nop 0x0(%rax,%rax,1)
ed18(4): add $0x1,%r12
ed1c(4): add $0x28,%r15
ed20(7): cmp 0xc8(%r14),%r12
ed27(6): jnl 0xfffffb79(%rip)
ed2d(7): mov 0xd8(%r14),%rax
ed34(3): add %r15,%rax
ed37(3): cmp (%rax),%r13
ed3a(2): jnz 0xffffffde(%rip)
ed3c(5): mov 0x8(%rsp),%rdi
ed41(4): cmp 0x8(%rax),%rdi
ed45(2): jnz 0xffffffd3(%rip)
ed47(4): mov 0x18(%rax),%rbx
ed4b(4): mov 0x10(%rax),%rax
ed4f(4): mov 0x30(%rbp),%rdx
ed53(3): mov %rbx,%rcx
ed56(3): sub %rax,%rcx
ed59(5): mov %rcx,0x20(%rsp)
ed5e(6): jz 0xfffffea2(%rip)
ed64(4): mov 0x18(%rbp),%rcx
ed68(5): mov 0x50(%rsp),%rdi
ed6d(4): mov 0x0(%rcx,%rdi,1),%rcx
ed71(4): lea 0x0(%rcx,%rcx,2),%rcx
ed75(4): lea 0x0(%rdx,%rcx,8),%rcx
ed79(5): mov %rcx,0x18(%rsp)
ed7e(5): jmp 0xfffffea0(%rip)
ed83(5): nop 0x0(%rax,%rax,1)
ed88(3): mov %r13,%rbx
ed8b(3): mov %r8,%r13
ed8e(4): lea 0x1(%r15),%r11
ed92(5): cmp %r11,0x8(%rsp)
ed97(6): jl 0xfffffc92(%rip)
ed9d(3): mov %r12,%rax
eda0(8): lea 0x0(,%r11,8),%r15
eda8(3): mov %rbx,%r12
edab(3): mov %r11,%rbx
edae(3): mov %r13,%r11
edb1(3): mov %rax,%r13
edb4(4): nop 0x0(%rax)
edb8(3): mov %rbx,%rax
edbb(4): sub (%r12),%rax
edbf(3): test %rax,%rax
edc2(2): jle 0x23(%rip)
edc4(4): cmp %r13,0x30(%r14)
edc8(6): jle 0x289(%rip)
edce(6): movzx 0xffffffff(%r11,%rbx,1),%ecx
edd4(4): lea 0x1(%r13),%rax
edd8(4): cmp %cl,0x0(%r11,%r13,1)
eddc(6): jnz 0x136(%rip)
ede2(3): mov %rax,%r13
ede5(7): mov 0xb8(%r14),%rax
edec(4): mov 0x0(%rax,%r15,1),%rax
edf0(3): test %rax,%rax
edf3(6): jz 0x10c(%rip)
edf9(4): mov 0x10(%rax),%rcx
edfd(3): test %rcx,%rcx
ee00(6): jle 0xff(%rip)
ee06(4): mov 0x18(%rax),%rdi
ee0a(5): mov 0x50(%rsp),%rax
ee0f(2): xor %edx,%edx
ee11(5): mov 0x58(%rsp),%r8
ee16(3): mov (%rax),%rsi
ee19(2): jmp 0x14(%rip)
ee1b(5): nop 0x0(%rax,%rax,1)
ee20(4): add $0x1,%rdx
ee24(3): cmp %rdx,%rcx
ee27(6): jz 0xd8(%rip)
ee2d(4): mov 0x0(%rdi,%rdx,8),%rbp
ee31(3): mov %rbp,%rax
ee34(4): shl/sal $0x4,%rax
ee38(3): add %rsi,%rax
ee3b(4): cmp $0x9,0x8(%rax)
ee3f(2): jnz 0xffffffe1(%rip)
ee41(3): cmp (%rax),%r8
ee44(2): jnz 0xffffffdc(%rip)
ee46(4): cmp $0xffffffff,%rbp
ee4a(6): jz 0xb5(%rip)
ee50(5): mov 0x10(%r12),%rsi
ee55(4): mov (%r12),%rcx
ee59(3): test %rsi,%rsi
ee5c(6): jz 0xc4(%rip)
ee62(5): mov %r11,0x10(%rsp)
ee67(5): mov 0x8(%r12),%rdx
ee6c(4): sub $0x8,%rsp
ee70(2): push $0x9
ee72(3): mov %rbx,%r9
ee75(3): mov %rbp,%r8
ee78(3): mov %r14,%rdi
ee7b(5): call 0xffffe785(%rip)
ee80(1): pop %rdx
ee81(3): cmp $0x1,%eax
ee84(1): pop %rcx
ee85(5): mov 0x10(%rsp),%r11
ee8a(2): jz 0x75(%rip)
ee8c(2): test %eax,%eax
ee8e(6): jnz 0xfffffcda(%rip)
ee94(5): mov 0x20(%r12),%rax
ee99(5): cmp 0x18(%r12),%rax
ee9e(6): jz 0x1da(%rip)
eea4(5): mov $0x28,%esi
eea9(5): mov $0x1,%edi
eeae(5): call 0xffff2d12(%rip)
eeb3(3): test %rax,%rax
eeb6(6): jz 0xa3(%rip)
eebc(5): mov 0x20(%r12),%rdx
eec1(5): mov 0x28(%r12),%rcx
eec6(3): mov %r12,%rsi
eec9(5): mov 0x8(%rsp),%r8
eece(3): mov %r14,%rdi
eed1(4): mov %rax,0x0(%rcx,%rdx,8)
eed5(5): mov 0x30(%rsp),%rcx
eeda(4): add $0x1,%rdx
eede(3): mov %rbp,(%rax)
eee1(4): mov %rbx,0x8(%rax)
eee5(5): mov %rdx,0x20(%r12)
eeea(3): mov %rax,%rdx
eeed(5): call 0xfffff763(%rip)
eef2(3): cmp $0x1,%eax
eef5(4): mov 0x8(%r14),%r11
eef9(6): jnbe 0xfffffc6f(%rip)
eeff(4): add $0x1,%rbx
ef03(4): add $0x8,%r15
ef07(5): cmp %rbx,0x8(%rsp)
ef0c(6): jnl 0xfffffeac(%rip)
ef12(3): mov %r11,%r13
ef15(5): jmp 0xfffffb14(%rip)
ef1a(6): nop 0x0(%rax,%rax,1)
ef20(3): mov %rbx,%rsi
ef23(5): mov $0x18,%edi
ef28(5): mov %r11,0x18(%rsp)
ef2d(3): sub %rcx,%rsi
ef30(5): mov %rcx,0x10(%rsp)
ef35(4): add $0x1,%rsi
ef39(5): call 0xffff2c87(%rip)
ef3e(3): test %rax,%rax
ef41(3): mov %rax,%rsi
ef44(5): mov %rax,0x10(%r12)
ef49(5): mov 0x10(%rsp),%rcx
ef4e(5): mov 0x18(%rsp),%r11
ef53(6): jnz 0xffffff0f(%rip)
ef59(5): mov $0xc,%eax
ef5e(5): jmp 0xfffffc0a(%rip)
ef63(5): nop 0x0(%rax,%rax,1)
ef68(3): mov %rbx,%rcx
ef6b(3): mov %r13,%rbx
ef6e(3): mov %r8,%r13
ef71(4): cmp %rbp,0x20(%rbx)
ef75(6): jnle 0xfffffab4(%rip)
ef7b(3): test %rbp,%rbp
ef7e(3): mov %rcx,%r12
ef81(6): jz 0xfffffe11(%rip)
ef87(3): mov %r11,%r15
ef8a(5): jmp 0xfffffe04(%rip)
ef8f(1): nop 
ef90(5): mov 0x18(%rsp),%rdx
ef95(5): mov 0x78(%rsp),%rdi
ef9a(3): mov %rbp,%rsi
ef9d(5): mov %r11,0x28(%rsp)
efa2(5): call 0xffffaf9e(%rip)
efa7(5): mov 0x28(%rsp),%r11
efac(7): mov 0xb8(%r14),%rdx
efb3(3): mov %rax,(%r11)
efb6(5): cmp $0x0,0x0(%rdx,%rbx,8)
efbb(6): jnz 0xfffffd38(%rip)
efc1(7): mov 0x8c(%rsp),%eax
efc8(2): test %eax,%eax
efca(6): jz 0xfffffd29(%rip)
efd0(5): jmp 0xfffffb98(%rip)
efd5(3): nop (%rax)
efd8(5): mov 0x18(%rsp),%rax
efdd(5): mov 0x8(%rsp),%rcx
efe2(3): mov %r14,%rdi
efe5(4): lea 0x10(%rax),%r8
efe9(4): lea 0x8(%rax),%rbx
efed(3): mov %r8,%rdx
eff0(3): mov %rbx,%rsi
eff3(5): mov %r8,0x10(%rsp)
eff8(5): call 0xffffb888(%rip)
effd(2): test %eax,%eax
efff(7): mov %eax,0x8c(%rsp)
f006(6): jnz 0xfffffb62(%rip)
f00c(5): mov 0x10(%rsp),%r8
f011(3): mov %rbx,%rsi
f014(3): mov %r14,%rdi
f017(3): mov %r8,%rdx
f01a(5): call 0xfffff7d6(%rip)
f01f(2): test %eax,%eax
f021(7): mov %eax,0x8c(%rsp)
f028(6): jz 0xfffffcf0(%rip)
f02e(5): jmp 0xfffffb3a(%rip)
f033(5): nop 0x0(%rax,%rax,1)
f038(8): mov 0xa0(%rsp),%rdi
f040(5): call 0xffff2990(%rip)
f045(7): mov 0x8c(%rsp),%eax
f04c(5): jmp 0xfffffb1c(%rip)
f051(4): cmp %r13,0x58(%r14)
f055(6): jle 0xfffffebd(%rip)
f05b(4): lea 0x1(%r13),%esi
f05f(3): mov %r14,%rdi
f062(5): call 0xffff90ce(%rip)
f067(2): test %eax,%eax
f069(6): jnz 0xfffffaff(%rip)
f06f(4): mov 0x8(%r14),%r11
f073(5): jmp 0xfffffd5b(%rip)
f078(5): lea 0x1(%rax,%rax,1),%rdx
f07d(5): mov 0x28(%r12),%rdi
f082(8): lea 0x0(,%rdx,8),%rsi
f08a(5): mov %rdx,0x10(%rsp)
f08f(5): call 0xffff2c01(%rip)
f094(3): test %rax,%rax
f097(6): jz 0xfffffec2(%rip)
f09d(5): mov 0x10(%rsp),%rdx
f0a2(5): mov %rax,0x28(%r12)
f0a7(5): mov %rdx,0x18(%r12)
f0ac(5): jmp 0xfffffdf8(%rip)
f0b1(5): mov 0x30(%rsp),%r13
f0b6(7): mov 0xc8(%r14),%rax
f0bd(5): jmp 0xfffffaf3(%rip)
f0c2(5): mov 0x8(%rsp),%r12
f0c7(5): jmp 0xfffffccb(%rip)
f0cc(5): call 0xffff2a04(%rip)

"merge_state_with_log" :
f0e0(2): push %r15
f0e2(2): push %r14
f0e4(2): push %r13
f0e6(2): push %r12
f0e8(3): mov %rdi,%r13
f0eb(1): push %rbp
f0ec(1): push %rbx
f0ed(3): mov %rsi,%rbx
f0f0(4): sub $0x38,%rsp
f0f4(4): mov 0x48(%rsi),%r12
f0f8(7): mov 0xb8(%rsi),%r14
f0ff(9): mov $0x28,%rax
f108(5): mov %rax,0x28(%rsp)
f10d(2): xor %eax,%eax
f10f(7): mov 0x98(%rsi),%r15
f116(8): lea 0x0(,%r12,8),%rbp
f11e(3): add %rbp,%r14
f121(7): cmp %r12,0xc0(%rsi)
f128(2): jnl 0x48(%rip)
f12a(3): mov %rdx,(%r14)
f12d(3): mov %rdx,%rbp
f130(7): mov %r12,0xc0(%rsi)
f137(8): cmp $0x0,0x98(%r15)
f13f(6): jnz 0x129(%rip)
f145(5): mov 0x28(%rsp),%rcx
f14a(9): xor $0x28,%rcx
f153(3): mov %rbp,%rax
f156(6): jnz 0x171(%rip)
f15c(4): add $0x38,%rsp
f160(1): pop %rbx
f161(1): pop %rbp
f162(2): pop %r12
f164(2): pop %r13
f166(2): pop %r14
f168(2): pop %r15
f16a(1): ret near (%rsp)
f16b(5): nop 0x0(%rax,%rax,1)
f170(3): mov (%r14),%rax
f173(3): test %rax,%rax
f176(6): jz 0xe2(%rip)
f17c(3): test %rdx,%rdx
f17f(4): mov 0x50(%rax),%rax
f183(6): jz 0x8d(%rip)
f189(4): mov 0x50(%rdx),%r14
f18d(5): lea 0x10(%rsp),%rdi
f192(3): mov %rax,%rdx
f195(4): mov %rdi,(%rsp)
f199(3): mov %r14,%rsi
f19c(5): call 0xffffac44(%rip)
f1a1(2): test %eax,%eax
f1a3(4): mov %eax,0x0(%r13)
f1a7(6): jnz 0x119(%rip)
f1ad(4): mov 0x48(%rbx),%rax
f1b1(6): mov 0xa0(%rbx),%edx
f1b7(3): mov %rbx,%rdi
f1ba(4): lea 0xffffffff(%rax),%rsi
f1be(5): call 0xffffb812(%rip)
f1c3(7): mov 0xb8(%rbx),%r8
f1ca(4): mov (%rsp),%rdx
f1ce(2): mov %eax,%ecx
f1d0(3): mov %r15,%rsi
f1d3(3): mov %r13,%rdi
f1d6(3): add %rbp,%r8
f1d9(5): mov %r8,0x8(%rsp)
f1de(5): call 0xffffad62(%rip)
f1e3(5): mov 0x8(%rsp),%r8
f1e8(3): test %r14,%r14
f1eb(3): mov %rax,%rbp
f1ee(3): mov %rax,(%r8)
f1f1(6): jz 0xffffff46(%rip)
f1f7(5): mov 0x20(%rsp),%rdi
f1fc(5): call 0xffff27d4(%rip)
f201(5): jmp 0xffffff36(%rip)
f206(a): nop 0x0(%rax,%rax,1)
f210(4): movdqu (%rax),%xmm0
f214(3): mov %rbx,%rdi
f217(6): mov 0xa0(%rsi),%edx
f21d(5): lea 0xffffffff(%r12),%rsi
f222(5): movaps %xmm0,0x10(%rsp)
f227(4): mov 0x10(%rax),%rax
f22b(5): mov %rax,0x20(%rsp)
f230(5): call 0xffffb7a0(%rip)
f235(5): lea 0x10(%rsp),%rdx
f23a(2): mov %eax,%ecx
f23c(3): mov %r15,%rsi
f23f(3): mov %r13,%rdi
f242(5): call 0xffffacfe(%rip)
f247(3): mov %rax,%rbp
f24a(3): mov %rax,(%r14)
f24d(5): jmp 0xfffffeea(%rip)
f252(6): nop 0x0(%rax,%rax,1)
f258(3): mov %rdx,(%r14)
f25b(3): mov %rdx,%rbp
f25e(5): jmp 0xfffffed9(%rip)
f263(5): nop 0x0(%rax,%rax,1)
f268(3): test %rbp,%rbp
f26b(2): jz 0x55(%rip)
f26d(4): lea 0x10(%rbp),%r14
f271(4): lea 0x18(%rbp),%r15
f275(3): mov %r12,%rcx
f278(3): mov %rbx,%rdi
f27b(3): mov %r15,%rdx
f27e(3): mov %r14,%rsi
f281(5): call 0xffffb5ff(%rip)
f286(2): test %eax,%eax
f288(4): mov %eax,0x0(%r13)
f28c(2): jnz 0x34(%rip)
f28e(4): test $0x40,0x68(%rbp)
f292(6): jz 0xfffffeb3(%rip)
f298(3): mov %r15,%rdx
f29b(3): mov %r14,%rsi
f29e(3): mov %rbx,%rdi
f2a1(5): call 0xfffff54f(%rip)
f2a6(2): test %eax,%eax
f2a8(4): mov %eax,0x0(%r13)
f2ac(2): jnz 0x14(%rip)
f2ae(7): mov 0xb8(%rbx),%rax
f2b5(4): mov 0x0(%rax,%r12,8),%rbp
f2b9(5): jmp 0xfffffe8c(%rip)
f2be(2): nop 
f2c0(2): xor %ebp,%ebp
f2c2(5): jmp 0xfffffe83(%rip)
f2c7(5): call 0xffff2809(%rip)

"sift_states_backward" :
f2d0(2): push %r15
f2d2(2): push %r14
f2d4(3): mov %rdi,%r14
f2d7(2): push %r13
f2d9(2): push %r12
f2db(3): mov %rsi,%r13
f2de(1): push %rbp
f2df(1): push %rbx
f2e0(4): sub $0x68,%rsp
f2e4(4): mov 0x18(%rsi),%r15
f2e8(4): mov 0x10(%rsi),%rbx
f2ec(4): mov %rdi,(%rsp)
f2f0(5): mov $0x8,%edi
f2f5(9): mov $0x1,0x40(%rsp)
f2fe(9): mov $0x28,%rax
f307(5): mov %rax,0x58(%rsp)
f30c(2): xor %eax,%eax
f30e(9): mov $0x1,0x48(%rsp)
f317(5): call 0xffff2909(%rip)
f31c(3): test %rax,%rax
f31f(5): mov %rax,0x50(%rsp)
f324(6): jz 0x2e0(%rip)
f32a(5): lea 0x40(%rsp),%rcx
f32f(3): mov %rbx,(%rax)
f332(3): mov %r15,%rdx
f335(3): mov %r13,%rsi
f338(3): mov %r14,%rdi
f33b(5): mov %rcx,0x10(%rsp)
f340(5): call 0x1a00(%rip)
f345(2): test %eax,%eax
f347(6): jnz 0x28e(%rip)
f34d(8): lea 0x0(,%r15,8),%rax
f355(3): test %r15,%r15
f358(8): mov $0x0,0x2c(%rsp)
f360(5): mov %rax,0x8(%rsp)
f365(4): lea 0x30(%r13),%rax
f369(5): mov %rax,0x38(%rsp)
f36e(6): jle 0x209(%rip)
f374(4): mov 0x0(%r13),%rdi
f378(5): mov 0x8(%rsp),%rax
f37d(5): cmp $0x0,0x0(%rdi,%rax,1)
f382(6): jz 0x216(%rip)
f388(4): mov (%rsp),%rax
f38c(8): mov $0x0,0x2c(%rsp)
f394(4): mov 0x2c(%rsp),%ecx
f398(6): cmp %ecx,0xe0(%rax)
f39e(6): jl 0x213(%rip)
f3a4(4): mov (%rsp),%rbx
f3a8(5): mov 0x8(%rsp),%rdi
f3ad(4): sub $0x1,%r15
f3b1(9): mov $0x0,0x48(%rsp)
f3ba(7): mov 0xb8(%rbx),%rax
f3c1(5): mov 0xfffffff8(%rax,%rdi,1),%r12
f3c6(3): test %r12,%r12
f3c9(6): jz 0x187(%rip)
f3cf(6): cmp $0x0,0x28(%r12)
f3d5(7): mov 0x98(%rbx),%r14
f3dc(6): jle 0x174(%rip)
f3e2(2): xor %ebx,%ebx
f3e4(5): jmp 0xa7(%rip)
f3e9(7): nop 0x0(%rax)
f3f0(4): mov (%rsp),%rdi
f3f4(3): mov %r15,%rdx
f3f7(5): call 0xffffb6c9(%rip)
f3fc(2): test %al,%al
f3fe(2): jz 0x7e(%rip)
f400(4): mov 0x0(%r13),%rax
f404(5): mov 0x8(%rsp),%rcx
f409(4): mov 0x0(%rax,%rcx,1),%rax
f40d(3): test %rax,%rax
f410(2): jz 0x6c(%rip)
f412(4): mov 0x18(%r14),%rdx
f416(4): mov 0x10(%rax),%rdi
f41a(4): lea 0x18(%rax),%rsi
f41e(4): mov 0x0(%rdx,%rbp,8),%rdx
f422(5): call 0xffff97ce(%rip)
f427(3): test %rax,%rax
f42a(2): jz 0x52(%rip)
f42c(6): mov $0x1,%r10d
f432(5): cmp $0x0,0x28(%r13)
f437(2): jz 0x30(%rip)
f439(4): mov 0x18(%r14),%rax
f43d(4): sub $0x8,%rsp
f441(4): lea 0x28(%r13),%rsi
f445(4): lea 0x0(%r10,%r15,1),%r8
f449(3): mov %rbp,%r9
f44c(4): mov 0x0(%rax,%rbp,8),%rcx
f450(2): push %r15
f452(5): mov 0x48(%rsp),%rdx
f457(5): mov 0x10(%rsp),%rdi
f45c(5): call 0xffff9a44(%rip)
f461(2): test %al,%al
f463(1): pop %rdx
f464(1): pop %rcx
f465(2): jnz 0x17(%rip)
f467(5): mov 0x10(%rsp),%rdi
f46c(3): mov %rbp,%rsi
f46f(5): call 0xffff8241(%rip)
f474(2): test %al,%al
f476(6): jz 0x15a(%rip)
f47c(4): add $0x1,%rbx
f480(5): cmp 0x28(%r12),%rbx
f485(6): jnl 0xcb(%rip)
f48b(5): mov 0x30(%r12),%rax
f490(3): mov (%r14),%rsi
f493(4): mov 0x0(%rax,%rbx,8),%rbp
f497(3): mov %rbp,%r9
f49a(4): shl/sal $0x4,%r9
f49e(3): add %r9,%rsi
f4a1(4): test $0x10,0xa(%rsi)
f4a5(6): jz 0xffffff4b(%rip)
f4ab(4): mov (%rsp),%rcx
f4af(4): mov 0x18(%r13),%rax
f4b3(3): mov %r15,%r8
f4b6(3): mov %rbp,%rdx
f4b9(5): mov %r9,0x18(%rsp)
f4be(7): mov 0x98(%rcx),%r11
f4c5(5): mov %rax,0x20(%rsp)
f4ca(3): mov (%r11),%rdi
f4cd(7): lea 0xd8(%r11),%rsi
f4d4(5): mov %r11,0x30(%rsp)
f4d9(5): call 0xffffdec7(%rip)
f4de(3): movsxd %eax,%r10
f4e1(5): mov 0x18(%rsp),%r9
f4e6(4): cmp $0x0,%r10d
f4ea(6): jle 0x96(%rip)
f4f0(3): movsxd %r10d,%rax
f4f3(3): add %r15,%rax
f4f6(5): cmp %rax,0x20(%rsp)
f4fb(6): jl 0xffffff37(%rip)
f501(4): mov 0x0(%r13),%rdx
f505(5): mov 0x30(%rsp),%r11
f50a(4): mov 0x0(%rdx,%rax,8),%rax
f50e(3): test %rax,%rax
f511(2): jz 0x75(%rip)
f513(4): mov 0x18(%r11),%rdx
f517(4): mov 0x10(%rax),%rdi
f51b(4): lea 0x18(%rax),%rsi
f51f(5): mov %r9,0x18(%rsp)
f524(4): mov 0x0(%rdx,%rbp,8),%rdx
f528(5): call 0xffff96c8(%rip)
f52d(3): test %rax,%rax
f530(6): jnz 0xffffff02(%rip)
f536(5): mov 0x18(%rsp),%r9
f53b(3): mov (%r14),%rsi
f53e(3): add %r9,%rsi
f541(5): jmp 0xfffffeaf(%rip)
f546(a): nop 0x0(%rax,%rax,1)
f550(5): mov 0x10(%rsp),%rcx
f555(4): mov (%rsp),%rdi
f559(3): mov %r15,%rdx
f55c(3): mov %r13,%rsi
f55f(5): call 0x17e1(%rip)
f564(2): test %eax,%eax
f566(2): jnz 0x6f(%rip)
f568(6): sub $0x8,0x8(%rsp)
f56e(3): test %r15,%r15
f571(6): jnz 0xfffffe03(%rip)
f577(2): xor %eax,%eax
f579(2): jmp 0x5c(%rip)
f57b(5): nop 0x0(%rax,%rax,1)
f580(6): jnz 0xfffffeb2(%rip)
f586(3): mov (%r14),%rsi
f589(3): add %r9,%rsi
f58c(5): jmp 0xfffffe64(%rip)
f591(7): nop 0x0(%rax)
f598(4): mov (%rsp),%rax
f59c(5): add $0x1,0x2c(%rsp)
f5a1(4): mov 0x2c(%rsp),%ecx
f5a5(6): cmp %ecx,0xe0(%rax)
f5ab(6): jnl 0xfffffdf9(%rip)
f5b1(5): mov 0x8(%rsp),%rdx
f5b6(2): xor %esi,%esi
f5b8(5): call 0xffff25a8(%rip)
f5bd(5): mov 0x50(%rsp),%rdi
f5c2(5): call 0xffff240e(%rip)
f5c7(2): xor %eax,%eax
f5c9(2): jmp 0x1c(%rip)
f5cb(5): nop 0x0(%rax,%rax,1)
f5d0(5): mov $0xc,%eax
f5d5(5): mov 0x50(%rsp),%rdi
f5da(3): mov %eax,(%rsp)
f5dd(5): call 0xffff23f3(%rip)
f5e2(3): mov (%rsp),%eax
f5e5(5): mov 0x58(%rsp),%rdx
f5ea(9): xor $0x28,%rdx
f5f3(2): jnz 0x18(%rip)
f5f5(4): add $0x68,%rsp
f5f9(1): pop %rbx
f5fa(1): pop %rbp
f5fb(2): pop %r12
f5fd(2): pop %r13
f5ff(2): pop %r14
f601(2): pop %r15
f603(1): ret near (%rsp)
f604(5): mov $0xc,%eax
f609(2): jmp 0xffffffdc(%rip)
f60b(5): call 0xffff24c5(%rip)

"re_search_internal" :
f610(2): push %r15
f612(2): push %r14
f614(2): push %r13
f616(2): push %r12
f618(3): mov %r9,%r13
f61b(1): push %rbp
f61c(1): push %rbx
f61d(3): mov %rcx,%rbp
f620(5): mov $0x20,%ecx
f625(3): mov %r8,%r12
f628(7): sub $0x238,%rsp
f62f(3): mov (%rdi),%rbx
f632(8): mov 0x278(%rsp),%rax
f63a(5): mov %rdi,0x48(%rsp)
f63f(5): mov %rsi,0x78(%rsp)
f644(3): mov %rdi,%rsi
f647(8): lea 0x120(%rsp),%rdi
f64f(8): mov %rdx,0x88(%rsp)
f657(5): mov %rbx,0x38(%rsp)
f65c(8): mov %rax,0xb8(%rsp)
f664(4): mov %rdi,(%rsp)
f668(9): mov $0x28,%rax
f671(8): mov %rax,0x228(%rsp)
f679(2): xor %eax,%eax
f67b(3): REP stosd %rax,rdi(%es,10)
f67e(4): mov 0x20(%rsi),%rdi
f682(8): mov %rbx,0x1b8(%rsp)
f68a(3): test %rdi,%rdi
f68d(5): mov %rdi,0x68(%rsp)
f692(2): jz 0x24(%rip)
f694(4): movzx 0x38(%rsi),%edx
f698(3): test $0x8,%dl
f69b(6): jz 0x495(%rip)
f6a1(3): cmp %r8,%rbp
f6a4(6): jz 0x48c(%rip)
f6aa(3): and $0x1,%edx
f6ad(4): cmove %rdi,%rax
f6b1(5): mov %rax,0x68(%rsp)
f6b6(5): mov 0x48(%rsp),%rax
f6bb(c): mov $0x0,0x98(%rsp)
f6c7(4): mov 0x30(%rax),%rax
f6cb(8): cmp 0x270(%rsp),%rax
f6d3(2): jnb 0x21(%rip)
f6d5(8): mov 0x270(%rsp),%rcx
f6dd(4): lea 0xffffffff(%rcx),%rdx
f6e1(3): sub %rax,%rdx
f6e4(8): sub %rdx,0x270(%rsp)
f6ec(8): mov %rdx,0x98(%rsp)
f6f4(5): mov 0x48(%rsp),%rsi
f6f9(5): cmp $0x0,0x10(%rsi)
f6fe(6): jz 0xe92(%rip)
f704(5): mov 0x38(%rsp),%rdi
f709(4): mov 0x48(%rdi),%rax
f70d(3): test %rax,%rax
f710(6): jz 0xe80(%rip)
f716(4): mov 0x50(%rdi),%rdx
f71a(3): test %rdx,%rdx
f71d(6): jz 0xe73(%rip)
f723(4): mov 0x58(%rdi),%rcx
f727(3): test %rcx,%rcx
f72a(6): jz 0xe66(%rip)
f730(5): cmp $0x0,0x60(%rdi)
f735(6): jz 0xe5b(%rip)
f73b(5): cmp $0x0,0x10(%rax)
f740(2): jnz 0x38(%rip)
f742(5): cmp $0x0,0x10(%rdx)
f747(2): jnz 0x31(%rip)
f749(5): cmp $0x0,0x10(%rcx)
f74e(2): jz 0x8(%rip)
f750(4): cmp $0x0,0x38(%rsi)
f754(2): js 0x24(%rip)
f756(3): test %rbp,%rbp
f759(2): jz 0x13(%rip)
f75b(3): test %r12,%r12
f75e(8): mov $0x1,0x5c(%rsp)
f766(6): jnz 0xa23(%rip)
f76c(3): xor %r12d,%r12d
f76f(2): xor %ebp,%ebp
f771(7): nop 0x0(%rax)
f778(9): cmp $0x0,0x270(%rsp)
f781(8): mov $0x1,0x58(%rsp)
f789(6): jz 0x387(%rip)
f78f(5): mov 0x38(%rsp),%r11
f794(5): mov 0x48(%rsp),%rax
f799(8): mov 0x88(%rsp),%rdi
f7a1(4): mov 0x10(%r11),%rsi
f7a5(4): mov 0x28(%rax),%rbx
f7a9(7): mov 0xb4(%r11),%edx
f7b0(4): mov 0x18(%rax),%rax
f7b4(8): mov %rdi,0x178(%rsp)
f7bc(8): mov %rdi,0x170(%rsp)
f7c4(5): mov %rsi,0x8(%rsp)
f7c9(4): lea 0x1(%rsi),%rsi
f7cd(8): mov %rbx,0xb0(%rsp)
f7d5(3): movsxd %edx,%rcx
f7d8(4): shr $0x16,%rax
f7dc(8): mov %rbx,0x198(%rsp)
f7e4(3): and $0x1,%eax
f7e7(3): cmp %rcx,%rsi
f7ea(7): mov %edx,0x1b0(%rsp)
f7f1(4): cmovnge %rcx,%rsi
f7f5(4): lea 0x1(%rdi),%rcx
f7f9(7): mov %al,0x1a8(%rsp)
f800(8): mov %rdi,0x188(%rsp)
f808(8): mov %rdi,0x180(%rsp)
f810(3): cmp %rcx,%rsi
f813(4): mov (%rsp),%rdi
f817(4): cmovnl %rcx,%rsi
f81b(3): test %rbx,%rbx
f81e(5): mov 0x78(%rsp),%rcx
f823(3): setnz %bl
f826(2): or %ebx,%eax
f828(7): mov %al,0x1ab(%rsp)
f82f(8): movzx 0xb0(%r11),%eax
f837(8): mov %rcx,0x120(%rsp)
f83f(2): mov %eax,%edx
f841(3): shr $0x3,%al
f844(3): shr $0x2,%dl
f847(3): and $0x1,%eax
f84a(3): and $0x1,%edx
f84d(7): mov %al,0x1aa(%rsp)
f854(7): mov %dl,0x1a9(%rsp)
f85b(5): call 0xffff7d45(%rip)
f860(2): test %eax,%eax
f862(4): mov %eax,0x5c(%rsp)
f866(6): jnz 0x8fa(%rip)
f86c(5): mov 0x38(%rsp),%rdi
f871(7): lea 0xb8(%rdi),%rax
f878(8): mov %rax,0x1a0(%rsp)
f880(7): movzx 0xb0(%rdi),%eax
f887(4): mov %al,0x8(%rsp)
f88b(3): shr $0x4,%al
f88e(3): and $0x1,%eax
f891(8): cmp $0x0,0x1ab(%rsp)
f899(7): mov %al,0x1ae(%rsp)
f8a0(2): jnz 0x25(%rip)
f8a2(5): mov 0x38(%rsp),%rsi
f8a7(5): mov 0x78(%rsp),%rax
f8ac(7): cmp $0x1,0xb4(%rsi)
f8b3(8): mov %rax,0x128(%rsp)
f8bb(8): mov 0x88(%rsp),%rax
f8c3(2): jle 0x4(%rip)
f8c5(2): xor %eax,%eax
f8c7(8): mov %rax,0x150(%rsp)
f8cf(8): mov %rax,0x158(%rsp)
f8d7(5): mov 0x48(%rsp),%rax
f8dc(8): mov %r13,0x188(%rsp)
f8e4(8): mov %r13,0x180(%rsp)
f8ec(4): movzx 0x38(%rax),%eax
f8f0(4): mov %al,0x8(%rsp)
f8f4(3): shr $0x7,%al
f8f7(7): mov %al,0x1ad(%rsp)
f8fe(5): mov 0x38(%rsp),%rax
f903(7): mov 0x98(%rax),%r14
f90a(7): mov 0x280(%rsp),%eax
f911(c): mov $0xffffffff,0x1c8(%rsp)
f91d(4): lea 0x0(%r14,%r14,1),%r13
f921(7): mov %eax,0x1c0(%rsp)
f928(3): test %r13,%r13
f92b(2): jle 0x54(%rip)
f92d(a): mov $0x461168601842738790,%rax
f937(3): cmp %rax,%r13
f93a(6): jnle 0xd46(%rip)
f940(5): lea 0x0(%r13,%r14,8),%rdi
f945(4): shl/sal $0x3,%rdi
f949(5): call 0xffff22d7(%rip)
f94e(3): mov %r14,%rdi
f951(3): mov %rax,%r15
f954(8): mov %rax,0x1f8(%rsp)
f95c(4): shl/sal $0x4,%rdi
f960(5): call 0xffff22c0(%rip)
f965(3): test %rax,%rax
f968(8): mov %rax,0x218(%rsp)
f970(6): jz 0xd10(%rip)
f976(3): test %r15,%r15
f979(6): jz 0xd07(%rip)
f97f(9): cmp $0x1,0x270(%rsp)
f988(8): mov %r13,0x1f0(%rsp)
f990(b): mov $0x1,0x200(%rsp)
f99b(8): mov %r13,0x210(%rsp)
f9a3(6): jbe 0x1125(%rip)
f9a9(8): mov 0x160(%rsp),%rax
f9b1(a): mov $0x2305843009213693950,%rdx
f9bb(3): cmp %rdx,%rax
f9be(6): jnbe 0xcc2(%rip)
f9c4(8): lea 0x8(,%rax,8),%rdi
f9cc(5): call 0xffff2254(%rip)
f9d1(3): test %rax,%rax
f9d4(3): mov %rax,%rdi
f9d7(8): mov %rax,0x1d8(%rsp)
f9df(6): jz 0xcf1(%rip)
f9e5(7): mov 0x280(%rsp),%eax
f9ec(8): mov %rbp,0xd8(%rsp)
f9f4(3): and $0x1,%eax
f9f7(3): cmp $0x1,%eax
f9fa(2): sbb %eax,%eax
f9fc(3): and $0x2,%eax
f9ff(3): add $0x4,%eax
fa02(7): mov %eax,0x190(%rsp)
fa09(2): xor %eax,%eax
fa0b(3): cmp %r12,%rbp
fa0e(3): setle %al
fa11(4): lea 0xffffffff(%rax,%rax,1),%eax
fa15(7): mov %eax,0xac(%rsp)
fa1c(3): mov %r12,%rax
fa1f(4): cmovng %rbp,%rax
fa23(8): mov %rax,0x90(%rsp)
fa2b(3): mov %r12,%rax
fa2e(4): cmovnl %rbp,%rax
fa32(6): cmp $0x0,0x68(%rsp)
fa38(5): mov %rax,0x70(%rsp)
fa3d(5): mov 0x38(%rsp),%rax
fa42(6): mov 0xb4(%rax),%esi
fa48(5): mov $0x8,%eax
fa4d(7): mov %esi,0xc8(%rsp)
fa54(2): jz 0x3b(%rip)
fa56(3): cmp $0x1,%esi
fa59(5): mov $0x4,%ecx
fa5e(2): jz 0x20(%rip)
fa60(5): mov 0x48(%rsp),%rax
fa65(4): test $0x40,0x1a(%rax)
fa69(6): jnz 0xd85(%rip)
fa6f(9): cmp $0x0,0xb0(%rsp)
fa78(6): jnz 0xd76(%rip)
fa7e(2): xor %edx,%edx
fa80(3): cmp %r12,%rbp
fa83(3): movzx %bl,%eax
fa86(3): setle %dl
fa89(2): or %ecx,%eax
fa8b(2): add %edx,%edx
fa8d(2): or %edx,%eax
fa8f(5): cmp 0x70(%rsp),%rbp
fa94(3): setnle %cl
fa97(8): cmp 0x90(%rsp),%rbp
fa9f(3): setl %dl
faa2(2): or %dl,%cl
faa4(6): jnz 0xad5(%rip)
faaa(8): lea 0xd8(%rsp),%rcx
fab2(3): cmp %r12,%rbp
fab5(5): mov $0x0,%edx
faba(4): cmovng %rcx,%rdx
fabe(3): test %rdx,%rdx
fac1(8): mov %rdx,0xc0(%rsp)
fac9(8): setnz 0xcf(%rsp)
fad1(3): sub $0x4,%eax
fad4(7): mov %eax,0xa8(%rsp)
fadb(8): lea 0xd0(%rsp),%rax
fae3(5): mov %rax,0x28(%rsp)
fae8(7): mov 0xa8(%rsp),%eax
faef(3): cmp $0x4,%eax
faf2(6): jnbe 0xbeb(%rip)
faf8(7): lea 0x70c1(%rip),%rcx
faff(4): movsxd 0x0(%rcx,%rax,4),%rax
fb03(3): add %rcx,%rax
fb06(2): jmp %rax
fb08(8): nop 0x0(%rax,%rax,1)
fb10(5): mov 0x38(%rsp),%rax
fb15(8): cmp $0x0,0x98(%rax)
fb1d(3): setnz %al
fb20(3): movzx %al,%eax
fb23(4): mov %eax,0x58(%rsp)
fb27(5): jmp 0xfffffc68(%rip)
fb2c(4): nop 0x0(%rax)
fb30(9): mov $0x0,0x68(%rsp)
fb39(5): jmp 0xfffffb7d(%rip)
fb3e(5): cmp %rbp,0x70(%rsp)
fb43(2): jle 0x5c(%rip)
fb45(5): mov 0x78(%rsp),%rax
fb4a(5): mov 0x68(%rsp),%rdi
fb4f(4): movzx 0x0(%rax,%rbp,1),%edx
fb53(4): lea 0x1(%rbp),%rax
fb57(4): cmp $0x0,0x0(%rdi,%rdx,1)
fb5b(6): jnz 0x8d(%rip)
fb61(5): mov 0x68(%rsp),%rsi
fb66(5): mov 0x70(%rsp),%rcx
fb6b(5): mov 0x78(%rsp),%rdi
fb70(2): jmp 0x1a(%rip)
fb72(6): nop 0x0(%rax,%rax,1)
fb78(4): movzx 0x0(%rdi,%rax,1),%edx
fb7c(4): lea 0x1(%rax),%rax
fb80(4): cmp $0x0,0x0(%rsi,%rdx,1)
fb84(6): jnz 0x119d(%rip)
fb8a(3): cmp %rax,%rcx
fb8d(3): mov %rax,%rbp
fb90(2): jnz 0xffffffe8(%rip)
fb92(5): mov 0x70(%rsp),%rax
fb97(8): mov %rax,0xd8(%rsp)
fb9f(5): cmp %rbp,0x70(%rsp)
fba4(2): jnz 0x44(%rip)
fba6(2): xor %eax,%eax
fba8(5): mov 0x70(%rsp),%rsi
fbad(8): cmp %rsi,0x88(%rsp)
fbb5(2): jle 0xb(%rip)
fbb7(5): mov 0x78(%rsp),%rax
fbbc(4): movzx 0x0(%rax,%rsi,1),%eax
fbc0(8): mov 0xb0(%rsp),%rsi
fbc8(3): test %rsi,%rsi
fbcb(2): jz 0x6(%rip)
fbcd(4): movzx 0x0(%rsi,%rax,1),%eax
fbd1(5): mov 0x68(%rsp),%rdi
fbd6(4): cmp $0x0,0x0(%rdi,%rax,1)
fbda(6): jz 0x99f(%rip)
fbe0(5): mov 0x70(%rsp),%rbp
fbe5(3): nop (%rax)
fbe8(7): mov 0x280(%rsp),%edx
fbef(4): mov (%rsp),%rdi
fbf3(3): mov %rbp,%rsi
fbf6(5): call 0xffffb0aa(%rip)
fbfb(2): test %eax,%eax
fbfd(4): mov %eax,0x5c(%rsp)
fc01(6): jnz 0x55f(%rip)
fc07(8): cmp $0x1,0xc8(%rsp)
fc0f(2): jz 0x1e(%rip)
fc11(9): cmp $0x0,0x150(%rsp)
fc1a(2): jz 0x13(%rip)
fc1c(8): mov 0x130(%rsp),%rax
fc24(3): cmp $0xff,(%rax)
fc27(6): jz 0x92a(%rip)
fc2d(8): mov 0x1b8(%rsp),%rbx
fc35(5): movzx 0x58(%rsp),%eax
fc3a(b): mov $0x0,0x200(%rsp)
fc45(c): mov $0x0,0x1e8(%rsp)
fc51(c): mov $0x0,0x1e0(%rsp)
fc5d(b): mov $0x0,0xd0(%rsp)
fc68(4): mov 0x48(%rbx),%r14
fc6c(3): and $0x1,%eax
fc6f(7): mov %al,0xce(%rsp)
fc76(8): mov 0x168(%rsp),%rax
fc7e(5): cmp $0x0,0x68(%r14)
fc83(5): mov %rax,0x8(%rsp)
fc88(6): js 0x978(%rip)
fc8e(8): mov 0x1d8(%rsp),%rax
fc96(3): test %rax,%rax
fc99(2): jz 0x19(%rip)
fc9b(8): cmp $0x0,0x98(%rbx)
fca3(5): mov 0x8(%rsp),%rdi
fca8(4): mov %r14,0x0(%rax,%rdi,8)
fcac(6): jnz 0xeef(%rip)
fcb2(8): movzx 0xcf(%rsp),%eax
fcba(4): mov %al,0x18(%rsp)
fcbe(5): movzx 0x68(%r14),%eax
fcc3(2): test $0x10,%al
fcc5(9): mov $0xffffffff,0x20(%rsp)
fcce(9): mov $0x0,0x30(%rsp)
fcd7(6): jnz 0xe89(%rip)
fcdd(8): mov 0xc0(%rsp),%rax
fce5(8): mov 0x168(%rsp),%r8
fced(5): mov %rax,0x50(%rsp)
fcf2(8): lea 0xe0(%rsp),%rax
fcfa(5): mov %rax,0x60(%rsp)
fcff(8): lea 0xd4(%rsp),%rax
fd07(8): mov %rax,0x80(%rsp)
fd0f(2): jmp 0x5d(%rip)
fd11(7): nop 0x0(%rax)
fd18(3): cmp %r13,%r14
fd1b(8): mov 0x168(%rsp),%r8
fd23(3): setz %al
fd26(4): and %al,0x18(%rsp)
fd2a(5): movzx 0x68(%r13),%eax
fd2f(6): cmove 0x8(%rsp),%rbx
fd35(2): test $0x10,%al
fd37(5): mov %rbx,0x8(%rsp)
fd3c(2): jz 0x2d(%rip)
fd3e(2): test %al,%al
fd40(6): js 0x4c0(%rip)
fd46(4): mov 0x58(%rsp),%eax
fd4a(5): mov %r8,0x20(%rsp)
fd4f(2): test %eax,%eax
fd51(6): jz 0x125(%rip)
fd57(9): mov $0x1,0x30(%rsp)
fd60(9): mov $0x0,0x50(%rsp)
fd69(3): mov %r13,%r14
fd6c(8): cmp %r8,0x188(%rsp)
fd74(6): jle 0xf0(%rip)
fd7a(8): mov 0x160(%rsp),%rax
fd82(4): lea 0x1(%r8),%rbx
fd86(3): cmp %rax,%rbx
fd89(6): jnl 0x4a7(%rip)
fd8f(8): mov 0x150(%rsp),%rax
fd97(3): cmp %rax,%rbx
fd9a(6): jnl 0x786(%rip)
fda0(5): test $0x20,0x68(%r14)
fda5(6): jnz 0x4cb(%rip)
fdab(4): lea 0x1(%r8),%rax
fdaf(8): mov %rax,0x168(%rsp)
fdb7(8): mov 0x128(%rsp),%rax
fdbf(5): movzx 0x0(%rax,%r8,1),%r13d
fdc4(4): mov 0x58(%r14),%rax
fdc8(3): test %rax,%rax
fdcb(6): jz 0x715(%rip)
fdd1(4): mov 0x0(%rax,%r13,8),%r13
fdd5(9): cmp $0x0,0x1d8(%rsp)
fdde(2): jz 0x16(%rip)
fde0(4): mov (%rsp),%rsi
fde4(5): mov 0x28(%rsp),%rdi
fde9(3): mov %r13,%rdx
fdec(5): call 0xfffff2f4(%rip)
fdf1(3): mov %rax,%r13
fdf4(3): test %r13,%r13
fdf7(6): jnz 0xffffff21(%rip)
fdfd(7): mov 0xd0(%rsp),%ecx
fe04(8): mov 0x1d8(%rsp),%rdi
fe0c(2): test %ecx,%ecx
fe0e(6): jnz 0x8c2(%rip)
fe14(3): test %rdi,%rdi
fe17(2): jz 0x4d(%rip)
fe19(8): movzx 0xce(%rsp),%eax
fe21(3): xor $0x1,%eax
fe24(4): test %al,0x30(%rsp)
fe28(2): jnz 0x3c(%rip)
fe2a(8): mov 0x1e0(%rsp),%rsi
fe32(8): mov 0x168(%rsp),%rax
fe3a(2): xor %ecx,%ecx
fe3c(2): jmp 0x17(%rip)
fe3e(2): nop 
fe40(5): cmp $0x0,0x0(%rdi,%rdx,8)
fe45(3): mov %rdx,%rax
fe48(5): mov $0x1,%ecx
fe4d(6): jnz 0x373(%rip)
fe53(4): lea 0x1(%rax),%rdx
fe57(3): cmp %rdx,%rsi
fe5a(2): jnl 0xffffffe6(%rip)
fe5c(2): test %cl,%cl
fe5e(6): jnz 0xed0(%rip)
fe64(5): mov 0x50(%rsp),%rax
fe69(3): test %rax,%rax
fe6c(2): jz 0xa(%rip)
fe6e(5): mov 0x8(%rsp),%rdi
fe73(3): add %rdi,(%rax)
fe76(5): mov 0x20(%rsp),%rax
fe7b(4): cmp $0xffffffff,%rax
fe7f(6): jz 0x6c1(%rip)
fe85(4): cmp $0xfffffffe,%rax
fe89(6): jz 0x7f7(%rip)
fe8f(5): mov 0x20(%rsp),%rax
fe94(8): mov %rax,0x1c8(%rsp)
fe9c(5): mov 0x48(%rsp),%rax
fea1(4): test $0x10,0x38(%rax)
fea5(6): jnz 0x7bb(%rip)
feab(9): cmp $0x1,0x270(%rsp)
feb4(6): jbe 0x8f8(%rip)
feba(5): mov 0x20(%rsp),%rcx
febf(8): mov 0x1d8(%rsp),%rbx
fec7(4): mov (%rsp),%rdi
fecb(4): mov 0x0(%rbx,%rcx,8),%rax
fecf(4): mov 0x10(%rax),%rsi
fed3(4): lea 0x18(%rax),%rdx
fed7(5): call 0xffffacf9(%rip)
fedc(3): mov %rax,%r13
fedf(8): mov %rax,0x1d0(%rsp)
fee7(5): mov 0x38(%rsp),%rax
feec(7): test $0x1,0xb0(%rax)
fef3(2): jnz 0x1d(%rip)
fef5(5): mov 0x38(%rsp),%rax
fefa(8): cmp $0x0,0x98(%rax)
ff02(6): jz 0x99a(%rip)
ff08(8): mov 0x1d0(%rsp),%r13
ff10(a): mov $0x2305843009213693950,%rsi
ff1a(5): cmp %rsi,0x20(%rsp)
ff1f(8): mov 0x1b8(%rsp),%r15
ff27(6): jnbe 0xc64(%rip)
ff2d(5): mov 0x20(%rsp),%rax
ff32(4): add $0x1,%rax
ff36(8): lea 0x0(,%rax,8),%rbx
ff3e(5): mov %rax,0x8(%rsp)
ff43(3): mov %rbx,%rdi
ff46(5): call 0xffff1cda(%rip)
ff4b(3): test %rax,%rax
ff4e(3): mov %rax,%r12
ff51(6): jz 0x72f(%rip)
ff57(8): cmp $0x0,0x98(%r15)
ff5f(6): jz 0x896(%rip)
ff65(3): mov %rbx,%rdi
ff68(5): call 0xffff1cb8(%rip)
ff6d(3): test %rax,%rax
ff70(3): mov %rax,%rbp
ff73(6): jz 0x705(%rip)
ff79(5): mov 0x20(%rsp),%r14
ff7e(8): lea 0xe0(%rsp),%rbx
ff86(5): mov %r15,0x10(%rsp)
ff8b(5): mov %rax,0x18(%rsp)
ff90(5): mov 0x8(%rsp),%rax
ff95(2): xor %esi,%esi
ff97(3): mov %rbp,%rdi
ff9a(8): lea 0x0(,%rax,8),%rdx
ffa2(5): call 0xffff1bbe(%rip)
ffa7(4): pxor %xmm0,%xmm0
ffab(8): mov %r12,0xe0(%rsp)
ffb3(8): mov %rbp,0xe8(%rsp)
ffbb(8): mov %r13,0xf0(%rsp)
ffc3(3): mov %rbx,%rsi
ffc6(8): mov %r14,0xf8(%rsp)
ffce(4): mov (%rsp),%rdi
ffd2(4): movaps %xmm0,0x20(%rbx)
ffd6(8): mov $0x0,0x30(%rbx)
ffde(5): call 0xfffff2f2(%rip)
ffe3(8): mov 0x110(%rsp),%rdi
ffeb(3): mov %eax,%r15d
ffee(5): call 0xffff19e2(%rip)
fff3(3): test %r15d,%r15d
fff6(6): jnz 0xc1e(%rip)
fffc(5): cmp $0x0,(%r12)
10001(6): jnz 0xc72(%rip)
10007(5): cmp $0x0,0x0(%rbp)
1000c(6): jnz 0xc67(%rip)
10012(8): mov 0x1d8(%rsp),%rdx
1001a(6): nop 0x0(%rax,%rax,1)
10020(4): sub $0x1,%r14
10024(4): cmp $0xffffffff,%r14
10028(6): jz 0xac3(%rip)
1002e(4): mov 0x0(%rdx,%r14,8),%rax
10032(3): test %rax,%rax
10035(2): jz 0xffffffeb(%rip)
10037(4): test $0x10,0x68(%rax)
1003b(2): jz 0xffffffe5(%rip)
1003d(4): mov 0x10(%rax),%rsi
10041(4): mov (%rsp),%rdi
10045(4): lea 0x18(%rax),%rdx
10049(3): mov %r14,%rcx
1004c(5): call 0xffffab84(%rip)
10051(3): mov %rax,%r13
10054(4): lea 0x1(%r14),%rax
10058(5): mov %rax,0x8(%rsp)
1005d(5): jmp 0xffffff33(%rip)
10062(5): cmp %rbp,0x70(%rsp)
10067(6): jle 0xfffffb38(%rip)
1006d(5): mov 0x78(%rsp),%rax
10072(8): mov 0xb0(%rsp),%rdi
1007a(5): mov 0x68(%rsp),%rsi
1007f(4): movzx 0x0(%rax,%rbp,1),%eax
10083(4): movzx 0x0(%rdi,%rax,1),%edx
10087(4): lea 0x1(%rbp),%rax
1008b(4): cmp $0x0,0x0(%rsi,%rdx,1)
1008f(6): jnz 0xfffffb59(%rip)
10095(5): mov 0x68(%rsp),%rsi
1009a(8): mov 0xb0(%rsp),%rdi
100a2(5): mov 0x70(%rsp),%rcx
100a7(5): mov 0x78(%rsp),%r8
100ac(2): jmp 0x1b(%rip)
100ae(2): nop 
100b0(5): movzx 0x0(%r8,%rax,1),%eax
100b5(4): movzx 0x0(%rdi,%rax,1),%edx
100b9(4): lea 0x1(%rbp),%rax
100bd(4): cmp $0x0,0x0(%rsi,%rdx,1)
100c1(6): jnz 0xc60(%rip)
100c7(3): cmp %rax,%rcx
100ca(3): mov %rax,%rbp
100cd(2): jnz 0xffffffe3(%rip)
100cf(5): jmp 0xfffffac3(%rip)
100d4(8): cmp %rbp,0x90(%rsp)
100dc(6): jnle 0x49d(%rip)
100e2(2): xor %ecx,%ecx
100e4(3): mov %rbp,%rax
100e7(5): mov 0x68(%rsp),%rdi
100ec(8): mov 0xb0(%rsp),%rsi
100f4(8): mov 0x90(%rsp),%r9
100fc(5): mov 0x78(%rsp),%r10
10101(8): mov 0x88(%rsp),%r8
10109(2): jmp 0x19(%rip)
1010b(5): nop 0x0(%rax,%rax,1)
10110(4): sub $0x1,%rax
10114(5): mov $0x1,%ecx
10119(3): cmp %r9,%rax
1011c(6): jl 0x9e4(%rip)
10122(2): xor %edx,%edx
10124(3): cmp %rax,%r8
10127(2): jle 0x7(%rip)
10129(5): movzx 0x0(%r10,%rax,1),%edx
1012e(3): test %rsi,%rsi
10131(2): jz 0x6(%rip)
10133(4): movzx 0x0(%rsi,%rdx,1),%edx
10137(4): cmp $0x0,0x0(%rdi,%rdx,1)
1013b(2): jz 0xffffffd5(%rip)
1013d(2): test %cl,%cl
1013f(6): jz 0xfffffaa9(%rip)
10145(8): mov %rax,0xd8(%rsp)
1014d(3): mov %rax,%rbp
10150(5): jmp 0xfffffa98(%rip)
10155(3): nop (%rax)
10158(4): mov %eax,0x5c(%rsp)
1015c(4): nop 0x0(%rax)
10160(8): mov 0x1d8(%rsp),%rdi
10168(5): call 0xffff1868(%rip)
1016d(5): mov 0x38(%rsp),%rax
10172(8): cmp $0x0,0x98(%rax)
1017a(6): jnz 0x926(%rip)
10180(4): mov (%rsp),%rdi
10184(5): call 0xffff875c(%rip)
10189(8): mov 0x228(%rsp),%rsi
10191(9): xor $0x28,%rsi
1019a(4): mov 0x5c(%rsp),%eax
1019e(6): jnz 0xb9d(%rip)
101a4(7): add $0x238,%rsp
101ab(1): pop %rbx
101ac(1): pop %rbp
101ad(2): pop %r12
101af(2): pop %r13
101b1(2): pop %r14
101b3(2): pop %r15
101b5(1): ret near (%rsp)
101b6(a): nop 0x0(%rax,%rax,1)
101c0(4): mov (%rsp),%rsi
101c4(5): mov 0x28(%rsp),%rdi
101c9(8): mov %rdx,0x168(%rsp)
101d1(2): xor %edx,%edx
101d3(5): call 0xffffef0d(%rip)
101d8(7): mov 0xd0(%rsp),%edx
101df(2): test %edx,%edx
101e1(6): jnz 0x93c(%rip)
101e7(3): test %rax,%rax
101ea(6): jnz 0x946(%rip)
101f0(8): mov 0x1d8(%rsp),%rdi
101f8(5): jmp 0xfffffc32(%rip)
101fd(3): nop (%rax)
10200(4): mov 0x10(%r13),%rsi
10204(4): mov (%rsp),%rdi
10208(4): lea 0x18(%r13),%rdx
1020c(3): mov %r8,%rcx
1020f(5): mov %r8,0x10(%rsp)
10214(5): call 0xffffa9bc(%rip)
10219(3): test %rax,%rax
1021c(5): mov 0x10(%rsp),%r8
10221(6): jz 0xfffffb48(%rip)
10227(5): jmp 0xfffffb1f(%rip)
1022c(4): nop 0x0(%rax)
10230(8): cmp 0x178(%rsp),%rax
10238(6): jnl 0xfffffb57(%rip)
1023e(4): mov (%rsp),%rdi
10242(3): lea 0x1(%rbx),%esi
10245(5): call 0xffff7eeb(%rip)
1024a(2): test %eax,%eax
1024c(7): mov %eax,0xd0(%rsp)
10253(6): jnz 0x8e5(%rip)
10259(5): test $0x20,0x68(%r14)
1025e(8): mov 0x168(%rsp),%r8
10266(6): jz 0xfffffb45(%rip)
1026c(4): nop 0x0(%rax)
10270(5): cmp $0x0,0x10(%r14)
10275(8): mov 0x1b8(%rsp),%r13
1027d(6): jle 0x32e(%rip)
10283(7): lea 0xd8(%r13),%rax
1028a(3): xor %r12d,%r12d
1028d(8): mov %rbx,0xa0(%rsp)
10295(3): mov %r12,%rbx
10298(3): mov %r8,%r12
1029b(5): mov %rax,0x40(%rsp)
102a0(5): jmp 0x158(%rip)
102a5(3): nop (%rax)
102a8(2): test $0x1,%al
102aa(6): jz 0x140(%rip)
102b0(3): and $0x8,%ecx
102b3(6): jnz 0x137(%rip)
102b9(3): test $0x20,%dl
102bc(2): jz 0xa(%rip)
102be(2): test $0x2,%al
102c0(6): jz 0x12a(%rip)
102c6(6): and $0x80,%edx
102cc(2): jz 0x14(%rip)
102ce(2): test $0x8,%al
102d0(6): jz 0x11a(%rip)
102d6(a): nop 0x0(%rax,%rax,1)
102e0(4): mov (%rsp),%rcx
102e4(5): mov 0x40(%rsp),%rsi
102e9(3): mov %r12,%r8
102ec(3): mov %r15,%rdx
102ef(3): mov %rbp,%rdi
102f2(5): call 0xffffd0ae(%rip)
102f7(2): test %eax,%eax
102f9(6): jz 0xe9(%rip)
102ff(3): movsxd %eax,%rbp
10302(8): add 0x168(%rsp),%rbp
1030a(7): cmp %eax,0x200(%rsp)
10311(8): cmovnl 0x200(%rsp),%eax
10319(4): mov (%rsp),%rdi
1031d(3): mov %rbp,%rsi
10320(7): mov %eax,0x200(%rsp)
10327(5): call 0xffff7f59(%rip)
1032c(2): test %eax,%eax
1032e(7): mov %eax,0xd4(%rsp)
10335(6): jnz 0x29b(%rip)
1033b(4): mov 0x18(%r13),%rax
1033f(8): lea 0x0(,%rbp,8),%r12
10347(4): mov 0x0(%rax,%r15,8),%rax
1034b(8): mov 0x1d8(%rsp),%r15
10353(4): lea 0x0(%rax,%rax,2),%rdx
10357(4): mov 0x30(%r13),%rax
1035b(3): add %r12,%r15
1035e(4): lea 0x0(%rax,%rdx,8),%rdx
10362(3): mov (%r15),%rax
10365(3): test %rax,%rax
10368(6): jz 0x100(%rip)
1036e(4): mov 0x50(%rax),%rsi
10372(5): mov 0x60(%rsp),%rdi
10377(5): call 0xffff9a69(%rip)
1037c(2): test %eax,%eax
1037e(7): mov %eax,0xd4(%rsp)
10385(6): jnz 0x24b(%rip)
1038b(7): mov 0x1c0(%rsp),%edx
10392(4): mov (%rsp),%rdi
10396(4): lea 0xffffffff(%rbp),%rsi
1039a(5): call 0xffffa636(%rip)
1039f(5): mov 0x60(%rsp),%rdx
103a4(8): mov 0x80(%rsp),%rdi
103ac(2): mov %eax,%ecx
103ae(8): add 0x1d8(%rsp),%r12
103b6(3): mov %r13,%rsi
103b9(5): call 0xffff9b87(%rip)
103be(8): mov 0xf0(%rsp),%rdi
103c6(4): mov %rax,(%r12)
103ca(5): call 0xffff1606(%rip)
103cf(8): mov 0x1d8(%rsp),%rdi
103d7(5): cmp $0x0,0x0(%rdi,%rbp,8)
103dc(6): jz 0xe5(%rip)
103e2(8): mov 0x168(%rsp),%r12
103ea(4): add $0x1,%rbx
103ee(4): cmp 0x10(%r14),%rbx
103f2(6): jnl 0x1ae(%rip)
103f8(4): mov 0x18(%r14),%rax
103fc(4): mov 0x0(%r13),%rbp
10400(4): mov 0x0(%rax,%rbx,8),%r15
10404(3): mov %r15,%rax
10407(4): shl/sal $0x4,%rax
1040b(3): add %rbp,%rax
1040e(4): test $0x10,0xa(%rax)
10412(2): jz 0xffffffd8(%rip)
10414(3): mov 0x8(%rax),%ecx
10417(6): test $0x3ff00,%ecx
1041d(4): mov %ecx,0x10(%rsp)
10421(6): jz 0xfffffebf(%rip)
10427(7): mov 0x1c0(%rsp),%edx
1042e(4): mov (%rsp),%rdi
10432(3): mov %r12,%rsi
10435(5): call 0xffffa59b(%rip)
1043a(4): mov 0x10(%rsp),%ecx
1043e(3): shr $0x8,%ecx
10441(2): mov %ecx,%edx
10443(5): and $0x3ff,%dx
10448(3): test $0x4,%cl
1044b(6): jnz 0xfffffe5d(%rip)
10451(3): and $0x8,%ecx
10454(6): jz 0xfffffe65(%rip)
1045a(2): test $0x1,%al
1045c(6): jz 0xfffffe5d(%rip)
10462(2): jmp 0xffffff88(%rip)
10464(4): nop 0x0(%rax)
10468(4): movdqu (%rdx),%xmm0
1046c(4): lea 0xffffffff(%rbp),%rsi
10470(4): mov (%rsp),%rdi
10474(8): movaps %xmm0,0xe0(%rsp)
1047c(4): mov 0x10(%rdx),%rax
10480(7): mov 0x1c0(%rsp),%edx
10487(8): mov %rax,0xf0(%rsp)
1048f(5): call 0xffffa541(%rip)
10494(8): mov 0x80(%rsp),%rdi
1049c(5): mov 0x60(%rsp),%rdx
104a1(2): mov %eax,%ecx
104a3(3): mov %r13,%rsi
104a6(5): call 0xffff9a9a(%rip)
104ab(8): mov 0x1d8(%rsp),%rdi
104b3(3): mov %rax,(%r15)
104b6(5): cmp $0x0,0x0(%rdi,%rbp,8)
104bb(6): jnz 0xffffff27(%rip)
104c1(7): mov 0xd4(%rsp),%eax
104c8(2): test %eax,%eax
104ca(6): jz 0xffffff18(%rip)
104d0(8): mov 0xa0(%rsp),%rbx
104d8(5): jmp 0x108(%rip)
104dd(3): nop (%rax)
104e0(4): mov 0x60(%r14),%rbp
104e4(3): test %rbp,%rbp
104e7(6): jz 0x1ae(%rip)
104ed(8): mov 0x168(%rsp),%rax
104f5(7): mov 0x1c0(%rsp),%edx
104fc(4): mov (%rsp),%rdi
10500(4): lea 0xffffffff(%rax),%rsi
10504(5): call 0xffffa4cc(%rip)
10509(2): test $0x1,%al
1050b(6): jz 0xb5(%rip)
10511(8): mov 0x800(%rbp,%r13,8),%r13
10519(5): jmp 0xfffff8bc(%rip)
1051e(2): nop 
10520(8): cmp 0x178(%rsp),%rax
10528(6): jnl 0xfffff878(%rip)
1052e(5): jmp 0xfffffd10(%rip)
10533(3): mov %r12,%rdi
10536(5): call 0xffff149a(%rip)
1053b(5): nop 0x0(%rax,%rax,1)
10540(4): mov (%rsp),%rdi
10544(5): call 0xffff853c(%rip)
10549(8): mov 0xd8(%rsp),%rbp
10551(8): movsxd 0xac(%rsp),%rax
10559(3): add %rax,%rbp
1055c(8): cmp 0x90(%rsp),%rbp
10564(8): mov %rbp,0xd8(%rsp)
1056c(2): jl 0xd(%rip)
1056e(5): cmp 0x70(%rsp),%rbp
10573(6): jle 0xfffff575(%rip)
10579(8): mov 0x1d8(%rsp),%rdi
10581(8): mov $0x1,0x5c(%rsp)
10589(5): jmp 0xfffffbdf(%rip)
1058e(2): nop 
10590(8): mov $0x1,0x5c(%rsp)
10598(5): jmp 0xfffffbf1(%rip)
1059d(3): nop (%rax)
105a0(8): mov 0xa0(%rsp),%rbx
105a8(3): mov %r12,%r8
105ab(b): mov $0x0,0xd0(%rsp)
105b6(5): jmp 0xfffff7f5(%rip)
105bb(5): nop 0x0(%rax,%rax,1)
105c0(5): mov 0x0(%rbp,%r13,8),%r13
105c5(5): jmp 0xfffff810(%rip)
105ca(6): nop 0x0(%rax,%rax,1)
105d0(8): mov 0xa0(%rsp),%rbx
105d8(8): mov 0x1d8(%rsp),%rdi
105e0(3): test %rdi,%rdi
105e3(7): mov %eax,0xd0(%rsp)
105ea(6): jz 0xe6(%rip)
105f0(3): xor %r13d,%r13d
105f3(5): jmp 0xfffff7ed(%rip)
105f8(8): nop 0x0(%rax,%rax,1)
10600(7): mov 0x1c0(%rsp),%edx
10607(4): mov (%rsp),%rdi
1060b(4): lea 0xffffffff(%rax),%rsi
1060f(5): call 0xffffa3c1(%rip)
10614(2): test $0x1,%al
10616(6): jz 0x16f(%rip)
1061c(4): mov 0x50(%rbx),%r14
10620(3): test %r14,%r14
10623(6): jnz 0xfffff66b(%rip)
10629(7): mov 0xd0(%rsp),%eax
10630(3): cmp $0xc,%eax
10633(4): mov %eax,0x5c(%rsp)
10637(6): jz 0xfffffb29(%rip)
1063d(7): lea 0x6a0c(%rip),%rcx
10644(7): lea 0x6435(%rip),%rsi
1064b(7): lea 0x64e2(%rip),%rdi
10652(5): mov $0x435,%edx
10657(5): call 0xffff14f9(%rip)
1065c(4): nop 0x0(%rax)
10660(5): mov 0x38(%rsp),%rax
10665(8): cmp $0x0,0x98(%rax)
1066d(6): jz 0x22f(%rip)
10673(5): jmp 0x14c(%rip)
10678(3): mov %r12,%rdi
1067b(5): call 0xffff1355(%rip)
10680(8): mov 0x1d8(%rsp),%rdi
10688(8): mov $0xc,0x5c(%rsp)
10690(5): jmp 0xfffffad8(%rip)
10695(8): mov 0x1b8(%rsp),%rdi
1069d(3): mov %r14,%rsi
106a0(5): call 0xffffafe0(%rip)
106a5(2): test %al,%al
106a7(6): jnz 0xfffff71d(%rip)
106ad(8): mov 0x1d8(%rsp),%rdi
106b5(b): mov $0xc,0xd0(%rsp)
106c0(3): test %rdi,%rdi
106c3(6): jnz 0xffffff2d(%rip)
106c9(7): nop 0x0(%rax)
106d0(8): mov $0xc,0x5c(%rsp)
106d8(5): jmp 0xfffffa90(%rip)
106dd(5): mov 0x68(%rsp),%rbx
106e2(8): mov 0xac(%rsp),%r13d
106ea(8): mov 0x90(%rsp),%r14
106f2(5): mov 0x70(%rsp),%r15
106f7(8): mov 0x88(%rsp),%r12
106ff(2): jmp 0x49(%rip)
10701(7): nop 0x0(%rax)
10708(3): cmp %rbp,%r12
1070b(3): mov %rbx,%rax
1070e(2): jle 0x11(%rip)
10710(8): mov 0x128(%rsp),%rax
10718(4): movzx 0x0(%rax,%rdx,1),%eax
1071c(3): add %rbx,%rax
1071f(3): cmp $0x0,(%rax)
10722(6): jnz 0xfffff4c6(%rip)
10728(3): movsxd %r13d,%rax
1072b(3): add %rax,%rbp
1072e(3): cmp %r14,%rbp
10731(8): mov %rbp,0xd8(%rsp)
10739(6): jl 0xfffffe40(%rip)
1073f(3): cmp %r15,%rbp
10742(6): jnle 0xfffffe37(%rip)
10748(3): mov %rbp,%rdx
1074b(8): sub 0x148(%rsp),%rdx
10753(8): cmp %rdx,0x158(%rsp)
1075b(2): jnbe 0xffffffad(%rip)
1075d(7): mov 0x280(%rsp),%edx
10764(4): mov (%rsp),%rdi
10768(3): mov %rbp,%rsi
1076b(5): call 0xffffa535(%rip)
10770(2): test %eax,%eax
10772(6): jnz 0xfffff9e6(%rip)
10778(3): mov %rbp,%rdx
1077b(8): sub 0x148(%rsp),%rdx
10783(2): jmp 0xffffff85(%rip)
10785(2): test %eax,%eax
10787(6): jz 0xfffff507(%rip)
1078d(2): mov %eax,%edx
1078f(3): and $0x6,%edx
10792(3): cmp $0x6,%edx
10795(6): jz 0x46a(%rip)
1079b(2): test $0x2,%al
1079d(6): jz 0x4b3(%rip)
107a3(4): mov 0x58(%rbx),%r14
107a7(5): jmp 0xfffffe79(%rip)
107ac(5): mov 0x38(%rsp),%rax
107b1(8): cmp $0x0,0x98(%rax)
107b9(6): jz 0xe3(%rip)
107bf(5): mov 0x20(%rsp),%rcx
107c4(8): mov 0x1d8(%rsp),%rbx
107cc(4): mov (%rsp),%rdi
107d0(4): mov 0x0(%rbx,%rcx,8),%rax
107d4(4): mov 0x10(%rax),%rsi
107d8(4): lea 0x18(%rax),%rdx
107dc(5): call 0xffffa3f4(%rip)
107e1(8): mov %rax,0x1d0(%rsp)
107e9(5): jmp 0xfffff71f(%rip)
107ee(2): xor %ecx,%ecx
107f0(5): jmp 0xfffff28e(%rip)
107f5(4): pxor %xmm0,%xmm0
107f9(8): mov %rax,0xe0(%rsp)
10801(4): mov (%rsp),%rdi
10805(5): mov 0x20(%rsp),%rax
1080a(8): lea 0xe0(%rsp),%rbx
10812(c): mov $0x0,0xe8(%rsp)
1081e(8): mov %r13,0xf0(%rsp)
10826(3): mov %rbx,%rsi
10829(c): mov $0x0,0x110(%rsp)
10835(8): movaps %xmm0,0x100(%rsp)
1083d(8): mov %rax,0xf8(%rsp)
10845(5): call 0xffffea8b(%rip)
1084a(8): mov 0x110(%rsp),%rdi
10852(4): mov %eax,0x8(%rsp)
10856(5): call 0xffff117a(%rip)
1085b(4): mov 0x8(%rsp),%eax
1085f(2): test %eax,%eax
10861(6): jnz 0x447(%rip)
10867(5): cmp $0x0,(%r12)
1086c(6): jz 0xfffffcc7(%rip)
10872(8): mov 0x1d8(%rsp),%rdi
1087a(5): call 0xffff1156(%rip)
1087f(5): mov 0x20(%rsp),%rax
10884(8): mov %r12,0x1d8(%rsp)
1088c(8): mov %r13,0x1d0(%rsp)
10894(8): mov %rax,0x1c8(%rsp)
1089c(9): cmp $0x0,0x270(%rsp)
108a5(6): jz 0xfffff8bb(%rip)
108ab(9): cmp $0x1,0x270(%rsp)
108b4(6): jz 0x424(%rip)
108ba(8): mov 0xb8(%rsp),%rsi
108c2(8): mov 0x270(%rsp),%rcx
108ca(7): mov $0xffffffff,%rdx
108d1(4): shl/sal $0x4,%rcx
108d5(4): lea 0x10(%rsi),%rax
108d9(3): add %rsi,%rcx
108dc(4): mov %rdx,0x8(%rax)
108e0(3): mov %rdx,(%rax)
108e3(4): add $0x10,%rax
108e7(3): cmp %rax,%rcx
108ea(2): jnz 0xfffffff2(%rip)
108ec(8): mov 0xb8(%rsp),%rdi
108f4(8): mov 0x1c8(%rsp),%rax
108fc(4): mov %rax,0x8(%rdi)
10900(5): mov 0x48(%rsp),%rax
10905(7): mov $0x0,(%rdi)
1090c(4): test $0x10,0x38(%rax)
10910(6): jnz 0x3e3(%rip)
10916(9): cmp $0x1,0x270(%rsp)
1091f(6): jz 0x3d4(%rip)
10925(5): mov 0x38(%rsp),%rax
1092a(3): xor %r8d,%r8d
1092d(7): test $0x1,0xb0(%rax)
10934(2): jz 0x11(%rip)
10936(3): xor %r8d,%r8d
10939(8): cmp $0x0,0x98(%rax)
10941(4): setnle %r8b
10945(8): mov 0xb8(%rsp),%rbx
1094d(8): mov 0x270(%rsp),%rdx
10955(4): mov (%rsp),%rsi
10959(5): mov 0x48(%rsp),%rdi
1095e(3): mov %rbx,%rcx
10961(5): call 0xffffd3ff(%rip)
10966(2): test %eax,%eax
10968(6): jnz 0x2d5(%rip)
1096e(3): mov (%rbx),%rax
10971(9): movzx 0x1ac(%rsp),%r11d
1097a(8): mov 0x150(%rsp),%r10
10982(2): xor %ecx,%ecx
10984(8): mov 0x138(%rsp),%r9
1098c(8): mov 0x158(%rsp),%r8
10994(8): mov 0xd8(%rsp),%rdi
1099c(8): mov 0xb8(%rsp),%rdx
109a4(2): jmp 0x5(%rip)
109a6(3): mov (%rdx),%rax
109a9(4): cmp $0xffffffff,%rax
109ad(2): jz 0x1c(%rip)
109af(3): test %r11b,%r11b
109b2(4): mov 0x8(%rdx),%rsi
109b6(6): jnz 0x344(%rip)
109bc(3): add %rdi,%rax
109bf(3): add %rdi,%rsi
109c2(3): mov %rax,(%rdx)
109c5(4): mov %rsi,0x8(%rdx)
109c9(4): add $0x1,%rcx
109cd(4): add $0x10,%rdx
109d1(8): cmp 0x270(%rsp),%rcx
109d9(2): jnz 0xffffffcd(%rip)
109db(9): cmp $0x0,0x98(%rsp)
109e4(2): jle 0x41(%rip)
109e6(8): mov 0x98(%rsp),%rdx
109ee(8): mov 0xb8(%rsp),%rdi
109f6(3): mov %rcx,%rax
109f9(4): shl/sal $0x4,%rax
109fd(3): add %rcx,%rdx
10a00(5): lea 0x8(%rdi,%rax,1),%rax
10a05(4): shl/sal $0x4,%rdx
10a09(5): lea 0x8(%rdi,%rdx,1),%rsi
10a0e(7): mov $0xffffffff,%rdx
10a15(4): mov %rdx,0xfffffff8(%rax)
10a19(3): mov %rdx,(%rax)
10a1c(4): add $0x10,%rax
10a20(3): cmp %rax,%rsi
10a23(2): jnz 0xfffffff2(%rip)
10a25(5): mov 0x38(%rsp),%rax
10a2a(8): mov 0x1d8(%rsp),%rdi
10a32(7): mov 0xe0(%rax),%r9
10a39(3): test %r9,%r9
10a3c(6): jz 0xfffff72c(%rip)
10a42(8): mov 0xb8(%rsp),%r10
10a4a(3): xor %r8d,%r8d
10a4d(4): lea 0x10(%r10),%rdx
10a51(2): jmp 0x38(%rip)
10a53(5): mov 0xfffffff8(%r9,%rsi,8),%rax
10a58(3): cmp %r8,%rax
10a5b(2): jz 0x27(%rip)
10a5d(4): add $0x1,%rax
10a61(4): shl/sal $0x4,%rax
10a65(4): mov 0x0(%r10,%rax,1),%rax
10a69(3): mov %rax,(%rdx)
10a6c(5): mov 0xfffffff8(%r9,%rsi,8),%rax
10a71(4): add $0x1,%rax
10a75(4): shl/sal $0x4,%rax
10a79(5): mov 0x8(%r10,%rax,1),%rax
10a7e(4): mov %rax,0x8(%rdx)
10a82(4): add $0x10,%rdx
10a86(3): mov %rsi,%r8
10a89(4): lea 0x1(%r8),%rsi
10a8d(3): cmp %rcx,%rsi
10a90(2): jnz 0xffffffc3(%rip)
10a92(5): jmp 0xfffff6d6(%rip)
10a97(9): nop 0x0(%rax,%rax,1)
10aa0(4): mov (%rsp),%rdi
10aa4(5): call 0xffff7fdc(%rip)
10aa9(8): mov 0x218(%rsp),%rdi
10ab1(5): call 0xffff0f1f(%rip)
10ab6(8): mov 0x1f8(%rsp),%rdi
10abe(5): call 0xffff0f12(%rip)
10ac3(5): jmp 0xfffff6bd(%rip)
10ac8(5): mov 0x38(%rsp),%rax
10acd(7): test $0x2,0xb0(%rax)
10ad4(6): jnz 0xffffeed5(%rip)
10ada(c): mov $0x0,0x1d8(%rsp)
10ae6(5): jmp 0xffffeeff(%rip)
10aeb(3): mov %r12,%rdi
10aee(5): call 0xffff0ee2(%rip)
10af3(3): mov %rbp,%rdi
10af6(5): call 0xffff0eda(%rip)
10afb(5): jmp 0xfffffa45(%rip)
10b00(8): mov %rax,0xd8(%rsp)
10b08(8): mov 0x1d8(%rsp),%rdi
10b10(8): mov $0x1,0x5c(%rsp)
10b18(5): jmp 0xfffff650(%rip)
10b1d(3): test %rax,%rax
10b20(3): mov %rax,%r13
10b23(6): jnz 0xfffff1f5(%rip)
10b29(5): jmp 0xfffff33b(%rip)
10b2e(2): nop 
10b30(3): mov %rax,%r13
10b33(5): jmp 0xfffff1e5(%rip)
10b38(3): cmp $0xc,%eax
10b3b(6): jz 0xfffffb45(%rip)
10b41(7): lea 0x6508(%rip),%rcx
10b48(7): lea 0x5f31(%rip),%rsi
10b4f(7): lea 0x5fde(%rip),%rdi
10b56(5): mov $0x46c,%edx
10b5b(5): call 0xffff0ff5(%rip)
10b60(5): cmp $0x0,0x68(%r14)
10b65(2): js 0x71(%rip)
10b67(4): mov 0x58(%rsp),%esi
10b6b(5): mov 0x8(%rsp),%rax
10b70(2): test %esi,%esi
10b72(5): mov %rax,0x20(%rsp)
10b77(6): jz 0xfffff2ff(%rip)
10b7d(9): mov $0x1,0x30(%rsp)
10b86(5): jmp 0xfffff157(%rip)
10b8b(3): mov %rbx,%rdi
10b8e(8): mov $0xc,0x5c(%rsp)
10b96(5): jmp 0xfffff5d2(%rip)
10b9b(4): lea 0x10(%r14),%rbx
10b9f(4): lea 0x18(%r14),%rbp
10ba3(4): mov (%rsp),%rdi
10ba7(2): xor %ecx,%ecx
10ba9(3): mov %rbp,%rdx
10bac(3): mov %rbx,%rsi
10baf(5): call 0xffff9cd1(%rip)
10bb4(2): test %eax,%eax
10bb6(7): mov %eax,0xd0(%rsp)
10bbd(2): jnz 0x4b(%rip)
10bbf(5): movzx 0x68(%r14),%eax
10bc4(2): test $0x40,%al
10bc6(6): jnz 0xea(%rip)
10bcc(5): mov $0x0,0x18(%rsp)
10bd1(5): jmp 0xfffff0f2(%rip)
10bd6(4): mov 0x10(%r14),%rsi
10bda(5): mov 0x8(%rsp),%rcx
10bdf(4): lea 0x18(%r14),%rdx
10be3(4): mov (%rsp),%rdi
10be7(5): call 0xffff9fe9(%rip)
10bec(3): test %rax,%rax
10bef(5): mov %rax,0x30(%rsp)
10bf4(6): jz 0xfffff0e9(%rip)
10bfa(5): jmp 0xffffff6d(%rip)
10bff(4): mov 0x60(%rbx),%r14
10c03(5): jmp 0xfffffa1d(%rip)
10c08(2): cwde 
10c0a(5): mov %rax,0x20(%rsp)
10c0f(5): jmp 0xfffff267(%rip)
10c14(5): mov 0x18(%rsp),%r14
10c19(3): mov %r15d,%eax
10c1c(3): mov %r12,%rdi
10c1f(4): mov %eax,0x8(%rsp)
10c23(5): call 0xffff0dad(%rip)
10c28(3): mov %r14,%rdi
10c2b(5): call 0xffff0da5(%rip)
10c30(4): mov 0x8(%rsp),%eax
10c34(3): cmp $0x1,%eax
10c37(6): jz 0xfffff909(%rip)
10c3d(8): mov 0x1d8(%rsp),%rdi
10c45(4): mov %eax,0x5c(%rsp)
10c49(5): jmp 0xfffff51f(%rip)
10c4e(2): nop 
10c50(2): test $0x4,%al
10c52(6): jz 0xfffff03c(%rip)
10c58(4): mov 0x50(%r14),%rdx
10c5c(5): mov 0x28(%rsp),%rdi
10c61(2): mov %eax,%ecx
10c63(3): mov %rbx,%rsi
10c66(5): call 0xffff92da(%rip)
10c6b(3): mov %rax,%r14
10c6e(5): jmp 0xfffff9b2(%rip)
10c73(5): mov 0x10(%rsp),%r15
10c78(5): mov 0x8(%rsp),%rcx
10c7d(3): mov %rbp,%rdx
10c80(3): mov %r12,%rsi
10c83(5): mov %r14,0x20(%rsp)
10c88(3): mov %r15,%rdi
10c8b(5): call 0xffff9775(%rip)
10c90(3): mov %rbp,%rdi
10c93(4): mov %eax,0x8(%rsp)
10c97(5): call 0xffff0d39(%rip)
10c9c(4): mov 0x8(%rsp),%eax
10ca0(2): test %eax,%eax
10ca2(6): jz 0xfffffbd0(%rip)
10ca8(3): xor %r14d,%r14d
10cab(5): jmp 0xffffff71(%rip)
10cb0(4): mov (%rsp),%rdi
10cb4(3): mov %rbp,%rdx
10cb7(3): mov %rbx,%rsi
10cba(5): call 0xffffdb36(%rip)
10cbf(2): test %eax,%eax
10cc1(7): mov %eax,0xd0(%rsp)
10cc8(6): jnz 0xffffff40(%rip)
10cce(5): movzx 0x68(%r14),%eax
10cd3(5): jmp 0xfffffef9(%rip)
10cd8(8): mov 0xb8(%rsp),%rsi
10ce0(8): mov 0x1c8(%rsp),%rax
10ce8(7): mov $0x0,(%rsi)
10cef(4): mov %rax,0x8(%rsi)
10cf3(2): xor %eax,%eax
10cf5(5): jmp 0xfffffc7c(%rip)
10cfa(3): cmp %rax,%r10
10cfd(2): jz 0x1f(%rip)
10cff(4): mov 0x0(%r9,%rax,8),%rax
10d03(3): cmp %rsi,%r10
10d06(3): mov %rax,(%rdx)
10d09(2): jz 0xb(%rip)
10d0b(4): mov 0x0(%r9,%rsi,8),%rsi
10d0f(5): jmp 0xfffffcad(%rip)
10d14(3): mov %r8,%rsi
10d17(5): jmp 0xfffffca5(%rip)
10d1c(3): mov %r8,%rax
10d1f(2): jmp 0xffffffe4(%rip)
10d21(8): mov %rbp,0xd8(%rsp)
10d29(5): jmp 0xffffeebf(%rip)
10d2e(8): mov %rax,0x168(%rsp)
10d36(5): jmp 0xfffff12e(%rip)
10d3b(5): call 0xffff0d95(%rip)

"update_cur_sifted_state" :
10d40(2): push %r15
10d42(2): push %r14
10d44(3): mov %rdi,%rax
10d47(2): push %r13
10d49(2): push %r12
10d4b(3): mov %rsi,%r13
10d4e(1): push %rbp
10d4f(1): push %rbx
10d50(3): mov %rdx,%rbp
10d53(3): mov %rcx,%rbx
10d56(8): lea 0x0(,%rdx,8),%rcx
10d5e(7): sub $0xa8,%rsp
10d65(7): mov 0x98(%rax),%r12
10d6c(7): mov 0xb8(%rax),%rax
10d73(5): mov %rdi,0x8(%rsp)
10d78(5): mov %rcx,0x18(%rsp)
10d7d(9): mov $0x28,%rdi
10d86(8): mov %rdi,0x98(%rsp)
10d8e(2): xor %edi,%edi
10d90(4): mov 0x0(%rax,%rdx,8),%rdx
10d94(8): mov $0x0,0x5c(%rsp)
10d9c(4): mov 0x8(%rbx),%rcx
10da0(3): test %rdx,%rdx
10da3(6): jz 0x255(%rip)
10da9(4): lea 0x8(%rdx),%rdi
10dad(3): test %rcx,%rcx
10db0(5): mov %rdi,0x10(%rsp)
10db5(2): jnz 0x53(%rip)
10db7(3): mov (%rsi),%rdx
10dba(8): mov $0x0,0x0(%rdx,%rbp,8)
10dc2(4): mov 0x0(%rax,%rbp,8),%rdx
10dc6(2): xor %eax,%eax
10dc8(4): test $0x40,0x68(%rdx)
10dcc(6): jnz 0xe3(%rip)
10dd2(6): nop 0x0(%rax,%rax,1)
10dd8(8): mov 0x98(%rsp),%rdi
10de0(9): xor $0x28,%rdi
10de9(6): jnz 0x7a2(%rip)
10def(7): add $0xa8,%rsp
10df6(1): pop %rbx
10df7(1): pop %rbp
10df8(2): pop %r12
10dfa(2): pop %r13
10dfc(2): pop %r14
10dfe(2): pop %r15
10e00(1): ret near (%rsp)
10e01(7): nop 0x0(%rax)
10e08(5): lea 0x60(%rsp),%rdi
10e0d(3): mov %rbx,%rdx
10e10(3): mov %r12,%rsi
10e13(8): mov $0x0,0x60(%rsp)
10e1b(5): call 0xffff93e5(%rip)
10e20(3): mov %rax,%rdx
10e23(4): mov 0x60(%rsp),%eax
10e27(2): test %eax,%eax
10e29(2): jnz 0xffffffaf(%rip)
10e2b(4): mov 0x38(%rdx),%r15
10e2f(4): lea 0x38(%rdx),%r14
10e33(3): test %r15,%r15
10e36(6): jz 0x20a(%rip)
10e3c(5): mov 0x10(%rsp),%rsi
10e41(3): mov %r14,%rdx
10e44(3): mov %rbx,%rdi
10e47(5): call 0xffff88b9(%rip)
10e4c(2): test %eax,%eax
10e4e(4): mov %eax,0x5c(%rsp)
10e52(2): jnz 0xffffff86(%rip)
10e54(5): cmp $0x0,0x28(%r13)
10e59(6): jnz 0x277(%rip)
10e5f(5): mov 0x18(%rsp),%r14
10e64(4): add 0x0(%r13),%r14
10e68(5): lea 0x5c(%rsp),%rdi
10e6d(3): mov %rbx,%rdx
10e70(3): mov %r12,%rsi
10e73(5): call 0xffff938d(%rip)
10e78(3): mov %rax,(%r14)
10e7b(4): mov 0x5c(%rsp),%eax
10e7f(2): test %eax,%eax
10e81(6): jnz 0xffffff57(%rip)
10e87(6): cmp $0x0,0x10(%rsp)
10e8d(6): jz 0xffffff4b(%rip)
10e93(5): mov 0x8(%rsp),%rax
10e98(7): mov 0xb8(%rax),%rax
10e9f(4): mov 0x0(%rax,%rbp,8),%rdx
10ea3(2): xor %eax,%eax
10ea5(4): test $0x40,0x68(%rdx)
10ea9(6): jz 0xffffff2f(%rip)
10eaf(5): mov 0x8(%rsp),%rax
10eb4(2): xor %ebx,%ebx
10eb6(7): mov 0xc8(%rax),%rsi
10ebd(3): mov %rsi,%rdx
10ec0(3): cmp %rdx,%rbx
10ec3(2): jnl 0x60(%rip)
10ec5(4): lea 0x0(%rbx,%rdx,1),%rax
10ec9(3): mov %rax,%rcx
10ecc(4): shr $0x3f,%rcx
10ed0(3): add %rax,%rcx
10ed3(5): mov 0x8(%rsp),%rax
10ed8(3): sar $0x1,%rcx
10edb(7): mov 0xd8(%rax),%rdi
10ee2(4): lea 0x0(%rcx,%rcx,4),%rax
10ee6(5): cmp 0x8(%rdi,%rax,8),%rbp
10eeb(2): jle 0x33(%rip)
10eed(5): jmp 0x13a(%rip)
10ef2(6): nop 0x0(%rax,%rax,1)
10ef8(4): lea 0x0(%rbx,%rcx,1),%rdx
10efc(3): mov %rdx,%rax
10eff(4): shr $0x3f,%rax
10f03(3): add %rdx,%rax
10f06(3): sar $0x1,%rax
10f09(4): lea 0x0(%rax,%rax,4),%rdx
10f0d(3): mov %rax,%r8
10f10(5): cmp 0x8(%rdi,%rdx,8),%rbp
10f15(6): jnle 0x11b(%rip)
10f1b(3): mov %rax,%rcx
10f1e(3): cmp %rcx,%rbx
10f21(2): jl 0xffffffd7(%rip)
10f23(3): cmp %rbx,%rsi
10f26(6): jle 0xfa(%rip)
10f2c(4): lea 0x0(%rbx,%rbx,4),%rax
10f30(8): lea 0x0(,%rax,8),%rsi
10f38(5): mov 0x8(%rsp),%rax
10f3d(5): mov %rsi,0x40(%rsp)
10f42(7): mov 0xd8(%rax),%rax
10f49(5): cmp 0x8(%rax,%rsi,1),%rbp
10f4e(6): jnz 0xd2(%rip)
10f54(4): cmp $0xffffffff,%rbx
10f58(6): jz 0xc8(%rip)
10f5e(5): mov 0x8(%rsp),%rax
10f63(9): mov $0x0,0x60(%rsp)
10f6c(7): mov 0x98(%rax),%r12
10f73(5): mov 0x10(%rsp),%rax
10f78(5): cmp $0x0,0x8(%rax)
10f7d(6): jle 0xa3(%rip)
10f83(5): lea 0x60(%rsp),%rax
10f88(9): mov $0x0,0x20(%rsp)
10f91(5): mov %rbx,0x48(%rsp)
10f96(3): mov %r13,%r15
10f99(5): mov %rax,0x38(%rsp)
10f9e(2): jmp 0x24(%rip)
10fa0(2): cmp $0x4,%al
10fa2(6): jz 0x386(%rip)
10fa8(5): mov 0x10(%rsp),%rcx
10fad(6): add $0x1,0x20(%rsp)
10fb3(5): mov 0x20(%rsp),%rax
10fb8(4): cmp 0x8(%rcx),%rax
10fbc(6): jnl 0x5bf(%rip)
10fc2(5): mov 0x10(%rsp),%rax
10fc7(5): mov 0x20(%rsp),%rdi
10fcc(4): mov 0x10(%rax),%rax
10fd0(4): mov 0x0(%rax,%rdi,8),%r14
10fd4(3): mov %r14,%rax
10fd7(4): shl/sal $0x4,%rax
10fdb(4): add (%r12),%rax
10fdf(4): cmp 0x10(%r15),%r14
10fe3(4): movzx 0x8(%rax),%eax
10fe7(2): jnz 0xffffffb9(%rip)
10fe9(4): cmp 0x18(%r15),%rbp
10fed(2): jnz 0xffffffb3(%rip)
10fef(2): jmp 0xffffffb9(%rip)
10ff1(7): nop 0x0(%rax)
10ff8(8): lea 0x0(,%rbp,8),%r14
11000(3): add (%rsi),%r14
11003(3): test %rcx,%rcx
11006(6): jnz 0xba(%rip)
1100c(7): mov $0x0,(%r14)
11013(2): xor %eax,%eax
11015(5): jmp 0xfffffdc3(%rip)
1101a(6): nop 0x0(%rax,%rax,1)
11020(2): xor %eax,%eax
11022(5): jmp 0xfffffdb6(%rip)
11027(3): mov %rcx,%r8
1102a(3): mov %rdx,%rcx
1102d(3): nop (%rax)
11030(4): lea 0x1(%r8),%rbx
11034(3): mov %rcx,%rdx
11037(5): jmp 0xfffffe89(%rip)
1103c(4): nop 0x0(%rax)
11040(4): mov 0x8(%rbx),%rdi
11044(8): mov $0x0,0x40(%rdx)
1104c(5): mov %rdx,0x20(%rsp)
11051(4): mov %rdi,0x38(%rdx)
11055(4): shl/sal $0x3,%rdi
11059(5): call 0xffff0bc7(%rip)
1105e(5): mov 0x20(%rsp),%rdx
11063(3): test %rax,%rax
11066(4): mov %rax,0x48(%rdx)
1106a(2): jz 0x49(%rip)
1106c(5): cmp $0x0,0x8(%rbx)
11071(8): mov $0x0,0x60(%rsp)
11079(2): jnle 0x15(%rip)
1107b(5): jmp 0xfffffdc1(%rip)
11080(4): add $0x1,%r15
11084(4): cmp 0x8(%rbx),%r15
11088(6): jnl 0xfffffdb4(%rip)
1108e(4): mov 0x10(%rbx),%rax
11092(3): mov %r14,%rdi
11095(4): mov 0x0(%rax,%r15,8),%rax
11099(4): lea 0x0(%rax,%rax,2),%rdx
1109d(5): mov 0x38(%r12),%rax
110a2(4): lea 0x0(%rax,%rdx,8),%rsi
110a6(5): call 0xffff806a(%rip)
110ab(2): test %eax,%eax
110ad(4): mov %eax,0x60(%rsp)
110b1(2): jz 0xffffffcf(%rip)
110b3(5): mov $0xc,%eax
110b8(5): jmp 0xfffffd20(%rip)
110bd(3): nop (%rax)
110c0(9): mov $0x0,0x10(%rsp)
110c9(5): jmp 0xfffffd9f(%rip)
110ce(2): nop 
110d0(5): mov 0x8(%rsp),%rax
110d5(7): mov 0xd8(%rax),%rax
110dc(5): mov %rax,0x20(%rsp)
110e1(6): jle 0xda(%rip)
110e7(3): xor %r15d,%r15d
110ea(6): nop 0x0(%rax,%rax,1)
110f0(4): mov 0x30(%r13),%rax
110f4(5): mov 0x20(%rsp),%rdi
110f9(4): mov 0x0(%rax,%r15,8),%rax
110fd(4): lea 0x0(%rax,%rax,4),%rax
11101(4): lea 0x0(%rdi,%rax,8),%rdx
11105(4): cmp 0x10(%rdx),%rbp
11109(6): jle 0xa4(%rip)
1110f(4): cmp 0x8(%rdx),%rbp
11113(6): jnle 0x9a(%rip)
11119(3): mov (%rdx),%rcx
1111c(4): mov (%r12),%rax
11120(4): mov 0x8(%rbx),%rsi
11124(4): shl/sal $0x4,%rcx
11128(4): cmp 0x18(%rdx),%rbp
1112c(4): mov 0x0(%rax,%rcx,1),%r8
11130(6): jz 0xa0(%rip)
11136(3): xor %r14d,%r14d
11139(3): test %rsi,%rsi
1113c(2): jle 0x71(%rip)
1113e(5): mov %rbp,0x28(%rsp)
11143(3): mov %r8,%rbp
11146(2): jmp 0x18(%rip)
11148(8): nop 0x0(%rax,%rax,1)
11150(4): add $0x1,%r14
11154(4): cmp 0x8(%rbx),%r14
11158(2): jnl 0x50(%rip)
1115a(4): mov (%r12),%rax
1115e(4): mov 0x10(%rbx),%rdx
11162(4): mov 0x0(%rdx,%r14,8),%rsi
11166(3): mov %rsi,%rdx
11169(4): shl/sal $0x4,%rdx
1116d(3): add %rdx,%rax
11170(4): movzx 0x8(%rax),%edx
11174(3): sub $0x8,%edx
11177(3): cmp $0x1,%edx
1117a(2): jnbe 0xffffffd6(%rip)
1117c(3): cmp (%rax),%rbp
1117f(2): jnz 0xffffffd1(%rip)
11181(5): mov 0x10(%rsp),%rcx
11186(3): mov %rbx,%rdx
11189(3): mov %r12,%rdi
1118c(5): call 0xffffa2b4(%rip)
11191(2): test %eax,%eax
11193(6): jnz 0xfffffc45(%rip)
11199(4): add $0x1,%r14
1119d(4): cmp 0x8(%rbx),%r14
111a1(2): jl 0xffffffb9(%rip)
111a3(5): nop 0x0(%rax,%rax,1)
111a8(5): mov 0x28(%rsp),%rbp
111ad(4): add $0x1,%r15
111b1(4): cmp 0x28(%r13),%r15
111b5(6): jl 0xffffff3b(%rip)
111bb(8): mov $0x0,0x5c(%rsp)
111c3(5): jmp 0xfffffc9c(%rip)
111c8(8): nop 0x0(%rax,%rax,1)
111d0(3): test %rsi,%rsi
111d3(2): jle 0xffffffda(%rip)
111d5(4): mov 0x10(%rbx),%r10
111d9(7): mov $0xffffffff,%r9
111e0(4): lea 0x0(%r10,%rsi,8),%r11
111e4(3): mov %r10,%rcx
111e7(3): mov %r9,%rsi
111ea(2): jmp 0x1c(%rip)
111ec(4): nop 0x0(%rax)
111f0(4): cmp $0x9,%r14d
111f4(2): jnz 0x9(%rip)
111f6(3): cmp (%rdx),%r8
111f9(4): cmove %rdi,%r9
111fd(4): add $0x8,%rcx
11201(3): cmp %rcx,%r11
11204(2): jz 0x2a(%rip)
11206(3): mov (%rcx),%rdi
11209(3): mov %rdi,%rdx
1120c(4): shl/sal $0x4,%rdx
11210(3): add %rax,%rdx
11213(5): movzx 0x8(%rdx),%r14d
11218(4): cmp $0x8,%r14d
1121c(2): jnz 0xffffffd4(%rip)
1121e(3): cmp (%rdx),%r8
11221(4): cmove %rdi,%rsi
11225(4): add $0x8,%rcx
11229(3): cmp %rcx,%r11
1122c(2): jnz 0xffffffda(%rip)
1122e(3): test %rsi,%rsi
11231(3): mov %r9,%r14
11234(5): mov %r9,0x28(%rsp)
11239(6): js 0xc7(%rip)
1123f(5): mov 0x10(%rsp),%rcx
11244(3): mov %rbx,%rdx
11247(3): mov %r12,%rdi
1124a(5): call 0xffffa1f6(%rip)
1124f(2): test %eax,%eax
11251(6): jnz 0xfffffb87(%rip)
11257(3): test %r14,%r14
1125a(6): js 0xffffff53(%rip)
11260(5): cmp $0x0,0x8(%rbx)
11265(6): jle 0xffffff48(%rip)
1126b(4): mov 0x10(%rbx),%r10
1126f(3): xor %r14d,%r14d
11272(5): mov %rbp,0x30(%rsp)
11277(3): mov %r14,%rbp
1127a(5): mov 0x28(%rsp),%r14
1127f(2): jmp 0x1b(%rip)
11281(7): nop 0x0(%rax)
11288(4): add $0x1,%rbp
1128c(4): cmp 0x8(%rbx),%rbp
11290(6): jnl 0x88(%rip)
11296(4): mov 0x10(%rbx),%r10
1129a(4): mov 0x0(%r10,%rbp,8),%r10
1129e(5): mov 0x38(%r12),%rax
112a3(3): mov %r14,%rdx
112a6(4): lea 0x0(%r10,%r10,2),%r9
112aa(4): shl/sal $0x3,%r9
112ae(3): add %r9,%rax
112b1(4): mov 0x8(%rax),%rdi
112b5(4): lea 0x10(%rax),%rsi
112b9(5): call 0xffff7937(%rip)
112be(3): test %rax,%rax
112c1(2): jnz 0xffffffc7(%rip)
112c3(5): add 0x30(%r12),%r9
112c8(4): mov 0x8(%r9),%rdi
112cc(4): lea 0x10(%r9),%rsi
112d0(5): call 0xffff7920(%rip)
112d5(3): test %rax,%rax
112d8(2): jnz 0xffffffb0(%rip)
112da(5): mov 0x10(%rsp),%rcx
112df(3): mov %rbx,%rdx
112e2(3): mov %r10,%rsi
112e5(3): mov %r12,%rdi
112e8(5): call 0xffffa158(%rip)
112ed(2): test %eax,%eax
112ef(6): jnz 0xfffffae9(%rip)
112f5(4): sub $0x1,%rbp
112f9(2): jmp 0xffffff8f(%rip)
112fb(5): nop 0x0(%rax,%rax,1)
11300(6): cmp $0x0,0x28(%rsp)
11306(6): jns 0xffffff69(%rip)
1130c(5): jmp 0xfffffea1(%rip)
11311(7): nop 0x0(%rax)
11318(5): mov 0x30(%rsp),%rbp
1131d(5): jmp 0xfffffe90(%rip)
11322(6): nop 0x0(%rax,%rax,1)
11328(5): mov 0x8(%rsp),%rax
1132d(5): mov 0x40(%rsp),%r13
11332(5): mov 0x48(%rsp),%rbx
11337(7): add 0xd8(%rax),%r13
1133e(4): lea 0x0(%r14,%r14,2),%rax
11342(4): shl/sal $0x3,%rax
11346(5): mov %rax,0x30(%rsp)
1134b(8): lea 0x0(,%r14,8),%rax
11353(5): mov %rax,0x28(%rsp)
11358(3): mov %r15,%rax
1135b(3): mov %r13,%r15
1135e(3): mov %rbx,%r13
11361(3): mov %rax,%rbx
11364(5): jmp 0x16a(%rip)
11369(7): nop 0x0(%rax)
11370(4): mov 0x18(%r15),%rax
11374(4): sub 0x10(%r15),%rax
11378(3): test %rax,%rax
1137b(5): lea 0x0(%rbp,%rax,1),%r9
11380(6): jz 0x160(%rip)
11386(5): mov 0x18(%r12),%rax
1138b(5): mov 0x28(%rsp),%rsi
11390(4): mov 0x0(%rax,%rsi,1),%r10
11394(4): cmp 0x18(%rbx),%r9
11398(6): jnle 0x13f(%rip)
1139e(3): mov (%rbx),%rax
113a1(4): mov 0x0(%rax,%r9,8),%rax
113a5(3): test %rax,%rax
113a8(6): jz 0x12f(%rip)
113ae(4): mov 0x10(%rax),%rdi
113b2(4): lea 0x18(%rax),%rsi
113b6(3): mov %r10,%rdx
113b9(5): call 0xffff7837(%rip)
113be(3): test %rax,%rax
113c1(6): jz 0x116(%rip)
113c7(4): sub $0x8,%rsp
113cb(4): lea 0x30(%rbx),%rdx
113cf(4): lea 0x28(%rbx),%rsi
113d3(2): push %r9
113d5(5): mov 0x18(%rsp),%rdi
113da(3): mov %r14,%rcx
113dd(3): mov %r10,%r9
113e0(3): mov %rbp,%r8
113e3(5): call 0xffff7abd(%rip)
113e8(2): test %al,%al
113ea(1): pop %rdx
113eb(1): pop %rcx
113ec(6): jnz 0xeb(%rip)
113f2(6): cmp $0x0,0x60(%rsp)
113f8(6): jz 0x110(%rip)
113fe(5): mov 0x38(%rsp),%rax
11403(3): mov %r13,%rsi
11406(5): mov %r14,0x70(%rsp)
1140b(5): mov %rbp,0x78(%rsp)
11410(4): lea 0x20(%rax),%rdi
11414(5): call 0xffff629c(%rip)
11419(2): test %al,%al
1141b(6): jz 0x159(%rip)
11421(5): mov 0x18(%rsp),%rdi
11426(5): mov 0x60(%rsp),%rax
1142b(5): mov 0x38(%rsp),%rsi
11430(4): mov 0x0(%rax,%rdi,1),%r15
11434(5): mov 0x8(%rsp),%rdi
11439(5): call 0xffffde97(%rip)
1143e(2): test %eax,%eax
11440(6): jnz 0x10e(%rip)
11446(4): mov 0x8(%rbx),%rsi
1144a(5): mov 0x60(%rsp),%rdx
1144f(3): test %rsi,%rsi
11452(2): jz 0x1b(%rip)
11454(4): lea 0x1(%rbp),%rcx
11458(3): mov %r12,%rdi
1145b(5): call 0xffff8fa5(%rip)
11460(2): test %eax,%eax
11462(6): jnz 0xec(%rip)
11468(5): mov 0x60(%rsp),%rdx
1146d(5): mov 0x38(%rsp),%r11
11472(5): mov 0x18(%rsp),%rax
11477(8): mov 0x88(%rsp),%rdi
1147f(4): lea 0x30(%r11),%r9
11483(4): mov %r15,0x0(%rdx,%rax,1)
11487(3): mov %r13,%rdx
1148a(3): mov %r9,%rsi
1148d(5): call 0xffff7763(%rip)
11492(4): sub $0x1,%rax
11496(3): mov %rax,%rdx
11499(2): js 0xe(%rip)
1149b(4): lea 0x28(%r11),%rdi
1149f(3): mov %r9,%rsi
114a2(5): call 0xffff78ce(%rip)
114a7(5): mov 0x8(%rsp),%rcx
114ac(5): lea 0x0(%r13,%r13,4),%rax
114b1(7): mov 0xd8(%rcx),%rdx
114b8(4): lea 0x0(%rdx,%rax,8),%rax
114bc(4): nop 0x0(%rax)
114c0(4): add $0x1,%r13
114c4(4): cmp $0x0,0x20(%rax)
114c8(4): lea 0x28(%rax),%r15
114cc(2): jz 0x34(%rip)
114ce(3): cmp (%r15),%r14
114d1(6): jz 0xfffffe9f(%rip)
114d7(3): mov %r15,%rax
114da(2): jmp 0xffffffe6(%rip)
114dc(4): nop 0x0(%rax)
114e0(5): mov 0x28(%r12),%rax
114e5(5): mov 0x30(%rsp),%rdi
114ea(5): mov 0x10(%rax,%rdi,1),%rax
114ef(3): mov (%rax),%r10
114f2(5): jmp 0xfffffea2(%rip)
114f7(9): nop 0x0(%rax,%rax,1)
11500(3): mov %rbx,%r15
11503(5): jmp 0xfffffaa5(%rip)
11508(4): mov 0x30(%rbx),%rax
1150c(4): lea 0x20(%rbx),%rsi
11510(4): movdqa (%rbx),%xmm0
11514(8): mov %rax,0x90(%rsp)
1151c(5): mov 0x38(%rsp),%rax
11521(5): movaps %xmm0,0x60(%rsp)
11526(4): lea 0x20(%rax),%rdi
1152a(5): movdqa 0x10(%rbx),%xmm0
1152f(5): movaps %xmm0,0x70(%rsp)
11534(5): movdqa 0x20(%rbx),%xmm0
11539(8): movaps %xmm0,0x80(%rsp)
11541(5): call 0xffff880f(%rip)
11546(2): test %eax,%eax
11548(6): jz 0xfffffeb6(%rip)
1154e(6): cmp $0x0,0x60(%rsp)
11554(6): jz 0xfffff884(%rip)
1155a(8): mov 0x90(%rsp),%rdi
11562(4): mov %eax,0x8(%rsp)
11566(5): call 0xffff046a(%rip)
1156b(4): mov 0x8(%rsp),%eax
1156f(5): jmp 0xfffff869(%rip)
11574(5): mov $0xc,%eax
11579(2): jmp 0xffffffd5(%rip)
1157b(6): cmp $0x0,0x60(%rsp)
11581(6): jz 0xfffffa9f(%rip)
11587(2): xor %eax,%eax
11589(2): jmp 0xffffffd1(%rip)
1158b(5): call 0xffff0545(%rip)

"parse_bracket_element.constprop.37" :
11590(2): push %r14
11592(2): push %r13
11594(3): mov %rsi,%r10
11597(2): push %r12
11599(1): push %rbp
1159a(3): movsxd %ecx,%r11
1159d(1): push %rbx
1159e(3): mov %rdx,%rbp
115a1(3): mov %rdi,%rbx
115a4(4): sub $0x20,%rsp
115a8(4): mov 0x48(%rsi),%r12
115ac(9): mov $0x28,%rax
115b5(5): mov %rax,0x18(%rsp)
115ba(2): xor %eax,%eax
115bc(7): cmp $0x1,0x90(%rsi)
115c3(2): jz 0x55(%rip)
115c5(3): mov %r12,%rsi
115c8(3): mov %r10,%rdi
115cb(5): call 0xffff7575(%rip)
115d0(3): cmp $0x1,%eax
115d3(2): jle 0x45(%rip)
115d5(4): mov 0x10(%r10),%rdx
115d9(2): cwde 
115db(6): mov $0x1,(%rbx)
115e1(3): add %r12,%rax
115e4(4): mov 0x0(%rdx,%r12,4),%edx
115e8(3): mov %edx,0x8(%rbx)
115eb(4): mov %rax,0x48(%r10)
115ef(2): xor %eax,%eax
115f1(5): mov 0x18(%rsp),%rcx
115f6(9): xor $0x28,%rcx
115ff(6): jnz 0x1e9(%rip)
11605(4): add $0x20,%rsp
11609(1): pop %rbx
1160a(1): pop %rbp
1160b(2): pop %r12
1160d(2): pop %r13
1160f(2): pop %r14
11611(1): ret near (%rsp)
11612(6): nop 0x0(%rax,%rax,1)
11618(4): movzx 0x8(%rbp),%eax
1161c(3): add %r12,%r11
1161f(4): mov %r11,0x48(%r10)
11623(2): mov %eax,%edx
11625(3): and $0xfb,%edx
11628(3): cmp $0x1a,%dl
1162b(2): jz 0x25(%rip)
1162d(2): cmp $0x1c,%al
1162f(2): jz 0x21(%rip)
11631(2): cmp $0x16,%al
11633(2): jnz 0xb(%rip)
11635(3): test %r9b,%r9b
11638(6): jz 0x14a(%rip)
1163e(4): movzx 0x0(%rbp),%eax
11642(6): mov $0x0,(%rbx)
11648(3): mov %al,0x8(%rbx)
1164b(2): xor %eax,%eax
1164d(2): jmp 0xffffffa4(%rip)
1164f(1): nop 
11650(4): mov 0x68(%r10),%r12
11654(3): cmp %r12,%r11
11657(6): jnl 0x121(%rip)
1165d(5): movzx 0x0(%rbp),%r13d
11662(3): xor %r8d,%r8d
11665(2): jmp 0x2d(%rip)
11667(9): nop 0x0(%rax,%rax,1)
11670(4): mov 0x8(%rbx),%rax
11674(4): mov %r9b,0x0(%rax,%r8,1)
11678(4): add $0x1,%r8
1167c(4): cmp $0x20,%r8
11680(6): jz 0xf8(%rip)
11686(4): movzx 0x8(%rbp),%eax
1168a(4): mov 0x48(%r10),%r11
1168e(4): mov 0x68(%r10),%r12
11692(2): cmp $0x1e,%al
11694(3): movsxd %r8d,%r14
11697(2): jz 0x69(%rip)
11699(4): mov 0x8(%r10),%rdx
1169d(4): lea 0x1(%r11),%rax
116a1(4): mov %rax,0x48(%r10)
116a5(5): movzx 0x0(%rdx,%r11,1),%r9d
116aa(3): cmp %r12,%rax
116ad(6): jnl 0xcb(%rip)
116b3(3): cmp %r9b,%r13b
116b6(2): jnz 0xffffffba(%rip)
116b8(4): mov 0x8(%r10),%rdx
116bc(4): cmp $0x5d,0x0(%rdx,%rax,1)
116c0(2): jnz 0xffffffb0(%rip)
116c2(4): add $0x1,%rax
116c6(4): mov %rax,0x48(%r10)
116ca(4): mov 0x8(%rbx),%rax
116ce(5): mov $0x0,0x0(%rax,%r14,1)
116d3(4): movzx 0x8(%rbp),%eax
116d7(2): cmp $0x1c,%al
116d9(6): jz 0x102(%rip)
116df(2): cmp $0x1e,%al
116e1(6): jz 0xed(%rip)
116e7(2): cmp $0x1a,%al
116e9(6): jz 0xd8(%rip)
116ef(2): xor %eax,%eax
116f1(5): jmp 0xffffff00(%rip)
116f6(a): nop 0x0(%rax,%rax,1)
11700(8): cmp $0x0,0x8b(%r10)
11708(2): jz 0xffffff91(%rip)
1170a(8): cmp $0x0,0x8c(%r10)
11712(6): jz 0x96(%rip)
11718(4): cmp 0x30(%r10),%r11
1171c(2): jz 0x11(%rip)
1171e(4): mov 0x10(%r10),%rax
11722(5): cmp $0xff,0x0(%rax,%r11,4)
11727(6): jz 0xffffff72(%rip)
1172d(4): mov 0x18(%r10),%rax
11731(4): mov 0x0(%rax,%r11,8),%rax
11735(3): add (%r10),%rax
11738(4): add 0x28(%r10),%rax
1173c(4): movzx (%rax),%r9d
11740(4): test $0x80,%r9b
11744(6): jnz 0xffffff55(%rip)
1174a(8): cmp $0x1,0x90(%r10)
11752(5): mov $0x1,%eax
11757(2): jz 0xf(%rip)
11759(3): mov %r11,%rsi
1175c(3): mov %r10,%rdi
1175f(5): call 0xffff73e1(%rip)
11764(2): cwde 
11766(3): add %r11,%rax
11769(4): mov %rax,0x48(%r10)
1176d(5): jmp 0xffffff3d(%rip)
11772(6): nop 0x0(%rax,%rax,1)
11778(5): mov $0x7,%eax
1177d(5): jmp 0xfffffe74(%rip)
11782(3): mov %rsp,%rdi
11785(3): mov %r8,%rdx
11788(3): mov %r10,%rsi
1178b(5): call 0xffff5955(%rip)
11790(5): cmp $0x15,0x8(%rsp)
11795(5): mov $0xb,%eax
1179a(6): jz 0xfffffea4(%rip)
117a0(5): jmp 0xfffffe51(%rip)
117a5(3): nop (%rax)
117a8(4): lea 0x1(%r11),%rax
117ac(3): add (%r10),%r11
117af(4): mov 0x28(%r10),%rdx
117b3(4): mov %rax,0x48(%r10)
117b7(5): movzx 0x0(%r11,%rdx,1),%r9d
117bc(5): jmp 0xfffffeee(%rip)
117c1(6): mov $0x3,(%rbx)
117c7(2): xor %eax,%eax
117c9(5): jmp 0xfffffe28(%rip)
117ce(6): mov $0x4,(%rbx)
117d4(2): xor %eax,%eax
117d6(5): jmp 0xfffffe1b(%rip)
117db(6): mov $0x2,(%rbx)
117e1(2): xor %eax,%eax
117e3(5): jmp 0xfffffe0e(%rip)
117e8(5): call 0xffff02e8(%rip)

"peek_token" :
117f0(2): push %r15
117f2(2): push %r14
117f4(2): push %r13
117f6(2): push %r12
117f8(1): push %rbp
117f9(1): push %rbx
117fa(3): mov %rdi,%rbp
117fd(4): sub $0x38,%rsp
11801(4): mov 0x48(%rsi),%r14
11805(9): mov $0x28,%rax
1180e(5): mov %rax,0x28(%rsp)
11813(2): xor %eax,%eax
11815(4): cmp %r14,0x68(%rsi)
11819(6): jle 0x97(%rip)
1181f(5): movzx 0xa(%rdi),%r13d
11824(3): mov %rdx,%r15
11827(4): mov 0x8(%rsi),%rdx
1182b(3): mov %rsi,%rbx
1182e(5): movzx 0x0(%rdx,%r14,1),%r12d
11833(4): and $0x9f,%r13d
11837(4): mov %r13b,0xa(%rdi)
1183b(6): mov 0x90(%rsi),%eax
11841(3): mov %r12b,(%rdi)
11844(3): cmp $0x1,%eax
11847(6): jle 0x99(%rip)
1184d(4): cmp 0x30(%rsi),%r14
11851(6): jz 0x19f(%rip)
11857(4): mov 0x10(%rsi),%rcx
1185b(4): mov 0x0(%rcx,%r14,4),%ecx
1185f(3): cmp $0xff,%ecx
11862(6): jz 0xde(%rip)
11868(4): cmp $0x5c,%r12b
1186c(6): jz 0xf4(%rip)
11872(4): mov $0x1,0x8(%rdi)
11876(2): mov %ecx,%edi
11878(5): mov %rdx,0x8(%rsp)
1187d(3): mov %ecx,(%rsp)
11880(5): call 0xffff0390(%rip)
11885(3): mov (%rsp),%ecx
11888(2): test %eax,%eax
1188a(3): setnz %al
1188d(3): cmp $0x5f,%ecx
11890(3): setz %cl
11893(2): or %ecx,%eax
11895(3): shl/sal $0x6,%eax
11898(3): or %eax,%r13d
1189b(4): mov %r13b,0xa(%rbp)
1189f(5): mov 0x8(%rsp),%rdx
118a4(2): jmp 0x78(%rip)
118a6(a): nop 0x0(%rax,%rax,1)
118b0(4): mov $0x2,0x8(%rdi)
118b4(5): mov 0x28(%rsp),%rdi
118b9(9): xor $0x28,%rdi
118c2(6): jnz 0x626(%rip)
118c8(4): add $0x38,%rsp
118cc(1): pop %rbx
118cd(1): pop %rbp
118ce(2): pop %r12
118d0(2): pop %r13
118d2(2): pop %r14
118d4(2): pop %r15
118d6(1): ret near (%rsp)
118d7(9): nop 0x0(%rax,%rax,1)
118e0(4): cmp $0x5c,%r12b
118e4(2): jz 0x7c(%rip)
118e6(4): mov $0x1,0x8(%rbp)
118ea(4): mov %rdx,(%rsp)
118ee(5): call 0xffff04d2(%rip)
118f3(3): mov (%rax),%rsi
118f6(4): movzx %r12b,%ecx
118fa(4): movzx 0x0(%rsi,%rcx,2),%eax
118fe(4): shr $0x3,%ax
11902(3): and $0x1,%eax
11905(4): cmp $0x5f,%r12b
11909(3): setz %cl
1190c(2): or %ecx,%eax
1190e(3): shl/sal $0x6,%eax
11911(3): or %eax,%r13d
11914(4): mov %r13b,0xa(%rbp)
11918(4): mov (%rsp),%rdx
1191c(4): sub $0xa,%r12d
11920(4): cmp $0x73,%r12b
11924(6): jnbe 0x138(%rip)
1192a(7): lea 0x52a3(%rip),%rcx
11931(4): movzx %r12b,%r12d
11935(4): movsxd 0x0(%rcx,%r12,4),%rax
11939(3): add %rcx,%rax
1193c(2): jmp %rax
1193e(2): nop 
11940(4): or $0x20,%r13d
11944(4): mov $0x1,0x8(%rdi)
11948(5): mov $0x1,%eax
1194d(4): mov %r13b,0xa(%rdi)
11951(5): jmp 0xffffff63(%rip)
11956(a): nop 0x0(%rax,%rax,1)
11960(4): lea 0x1(%r14),%rsi
11964(4): cmp 0x58(%rbx),%rsi
11968(6): jnl 0xa8(%rip)
1196e(7): cmp $0x0,0x8b(%rbx)
11975(6): jnz 0x48b(%rip)
1197b(6): movzx 0x1(%rdx,%r14,1),%edi
11981(3): mov %edi,%r12d
11984(4): mov %edi,0x8(%rsp)
11988(3): cmp $0x1,%eax
1198b(4): mov %r12b,0x0(%rbp)
1198f(4): mov $0x1,0x8(%rbp)
11993(6): jle 0x44d(%rip)
11999(4): mov 0x10(%rbx),%rax
1199d(4): mov 0x0(%rax,%rsi,4),%r8d
119a1(3): mov %r8d,%edi
119a4(4): mov %r8d,(%rsp)
119a8(5): call 0xffff0268(%rip)
119ad(4): mov (%rsp),%r8d
119b1(2): test %eax,%eax
119b3(3): setnz %al
119b6(4): cmp $0x5f,%r8d
119ba(3): setz %dl
119bd(5): lea 0xffffffd9(%r12),%ecx
119c2(2): or %edx,%eax
119c4(3): shl/sal $0x6,%eax
119c7(3): or %eax,%r13d
119ca(3): cmp $0x56,%cl
119cd(4): mov %r13b,0xa(%rbp)
119d1(6): jnbe 0x404(%rip)
119d7(7): lea 0x53c6(%rip),%rdx
119de(3): movzx %cl,%ecx
119e1(4): movsxd 0x0(%rdx,%rcx,4),%rax
119e5(3): add %rdx,%rax
119e8(2): jmp %rax
119ea(6): nop 0x0(%rax,%rax,1)
119f0(4): cmp $0x5c,%r12b
119f4(6): jz 0xffffff6c(%rip)
119fa(4): mov 0x10(%rbx),%rax
119fe(4): mov $0x1,0x8(%rbp)
11a02(4): mov 0x0(%rax,%r14,4),%ecx
11a06(5): jmp 0xfffffe70(%rip)
11a0b(5): nop 0x0(%rax,%rax,1)
11a10(4): mov $0x24,0x8(%rbp)
11a14(5): mov $0x1,%eax
11a19(5): jmp 0xfffffe9b(%rip)
11a1e(2): nop 
11a20(7): and $0x1200,%r15d
11a27(5): mov $0x1,%eax
11a2c(7): cmp $0x1200,%r15
11a33(6): jnz 0xfffffe81(%rip)
11a39(4): mov $0x18,0x8(%rbp)
11a3d(5): jmp 0xfffffe77(%rip)
11a42(6): nop 0x0(%rax,%rax,1)
11a48(7): and $0x8400,%r15d
11a4f(7): cmp $0x8000,%r15
11a56(6): jz 0xdc(%rip)
11a5c(5): mov $0x1,%eax
11a61(5): jmp 0xfffffe53(%rip)
11a66(a): nop 0x0(%rax,%rax,1)
11a70(7): and $0x1200,%r15d
11a77(5): mov $0x1,%eax
11a7c(7): cmp $0x1200,%r15
11a83(6): jnz 0xfffffe31(%rip)
11a89(4): mov $0x17,0x8(%rbp)
11a8d(5): jmp 0xfffffe27(%rip)
11a92(6): nop 0x0(%rax,%rax,1)
11a98(7): test $0x800008,%r15d
11a9f(2): jnz 0xb(%rip)
11aa1(3): test %r14,%r14
11aa4(6): jnz 0x3c6(%rip)
11aaa(4): mov $0xc,0x8(%rbp)
11aae(7): mov $0x10,0x0(%rbp)
11ab5(5): mov $0x1,%eax
11aba(5): jmp 0xfffffdfa(%rip)
11abf(1): nop 
11ac0(4): mov $0x14,0x8(%rbp)
11ac4(5): mov $0x1,%eax
11ac9(5): jmp 0xfffffdeb(%rip)
11ace(2): nop 
11ad0(7): test $0x402,%r15d
11ad7(5): mov $0x1,%eax
11adc(6): jnz 0xfffffdd8(%rip)
11ae2(4): mov $0x13,0x8(%rbp)
11ae6(5): jmp 0xfffffdce(%rip)
11aeb(5): nop 0x0(%rax,%rax,1)
11af0(4): mov $0x5,0x8(%rbp)
11af4(5): mov $0x1,%eax
11af9(5): jmp 0xfffffdbb(%rip)
11afe(2): nop 
11b00(7): test $0x402,%r15d
11b07(5): mov $0x1,%eax
11b0c(6): jnz 0xfffffda8(%rip)
11b12(4): mov $0x12,0x8(%rbp)
11b16(5): jmp 0xfffffd9e(%rip)
11b1b(5): nop 0x0(%rax,%rax,1)
11b20(7): test $0x800,%r15d
11b27(5): mov $0x1,%eax
11b2c(6): jz 0xfffffd88(%rip)
11b32(4): mov $0xa,0x8(%rbp)
11b36(5): mov $0x1,%eax
11b3b(5): jmp 0xfffffd79(%rip)
11b40(4): mov $0xb,0x8(%rbp)
11b44(5): mov $0x1,%eax
11b49(5): jmp 0xfffffd6b(%rip)
11b4e(2): nop 
11b50(7): test $0x2000,%r15d
11b57(5): mov $0x1,%eax
11b5c(6): jz 0xfffffd58(%rip)
11b62(4): mov $0x9,0x8(%rbp)
11b66(5): jmp 0xfffffd4e(%rip)
11b6b(5): nop 0x0(%rax,%rax,1)
11b70(7): test $0x2000,%r15d
11b77(5): mov $0x1,%eax
11b7c(6): jz 0xfffffd38(%rip)
11b82(4): mov $0x8,0x8(%rbp)
11b86(5): jmp 0xfffffd2e(%rip)
11b8b(5): nop 0x0(%rax,%rax,1)
11b90(4): test $0x8,%r15b
11b94(2): jnz 0x10(%rip)
11b96(4): add $0x1,%r14
11b9a(4): cmp 0x58(%rbx),%r14
11b9e(6): jnz 0x2fd(%rip)
11ba4(4): mov $0xc,0x8(%rbp)
11ba8(7): mov $0x20,0x0(%rbp)
11baf(5): mov $0x1,%eax
11bb4(5): jmp 0xfffffd00(%rip)
11bb9(7): test $0x8400,%r15d
11bc0(5): mov $0x2,%eax
11bc5(6): jnz 0xfffffcef(%rip)
11bcb(4): mov $0xa,0x8(%rbp)
11bcf(5): jmp 0xfffffce5(%rip)
11bd4(7): and $0x1200,%r15d
11bdb(5): mov $0x2,%eax
11be0(7): cmp $0x200,%r15
11be7(6): jnz 0xfffffccd(%rip)
11bed(5): jmp 0xfffffe9c(%rip)
11bf2(7): test $0x80000,%r15d
11bf9(5): mov $0x2,%eax
11bfe(6): jnz 0xfffffcb6(%rip)
11c04(4): mov $0x20,0x8(%rbp)
11c08(5): jmp 0xfffffcac(%rip)
11c0d(7): test $0x80000,%r15d
11c14(5): mov $0x2,%eax
11c19(6): jnz 0xfffffc9b(%rip)
11c1f(4): mov $0x22,0x8(%rbp)
11c23(5): jmp 0xfffffc91(%rip)
11c28(7): and $0x1200,%r15d
11c2f(5): mov $0x2,%eax
11c34(7): cmp $0x200,%r15
11c3b(6): jnz 0xfffffc79(%rip)
11c41(5): jmp 0xfffffdf8(%rip)
11c46(7): test $0x80000,%r15d
11c4d(5): mov $0x2,%eax
11c52(6): jnz 0xfffffc62(%rip)
11c58(4): mov $0xc,0x8(%rbp)
11c5c(7): mov $0x100,0x0(%rbp)
11c63(5): jmp 0xfffffc51(%rip)
11c68(7): test $0x80000,%r15d
11c6f(5): mov $0x2,%eax
11c74(6): jnz 0xfffffc40(%rip)
11c7a(4): mov $0xc,0x8(%rbp)
11c7e(7): mov $0x40,0x0(%rbp)
11c85(5): jmp 0xfffffc2f(%rip)
11c8a(7): test $0x80000,%r15d
11c91(5): mov $0x2,%eax
11c96(6): jnz 0xfffffc1e(%rip)
11c9c(4): mov $0x21,0x8(%rbp)
11ca0(5): jmp 0xfffffc14(%rip)
11ca5(7): test $0x80000,%r15d
11cac(5): mov $0x2,%eax
11cb1(6): jnz 0xfffffc03(%rip)
11cb7(4): mov $0x23,0x8(%rbp)
11cbb(5): jmp 0xfffffbf9(%rip)
11cc0(7): test $0x80000,%r15d
11cc7(5): mov $0x2,%eax
11ccc(6): jnz 0xfffffbe8(%rip)
11cd2(4): mov $0xc,0x8(%rbp)
11cd6(7): mov $0x200,0x0(%rbp)
11cdd(5): jmp 0xfffffbd7(%rip)
11ce2(7): and $0x402,%r15d
11ce9(5): mov $0x2,%eax
11cee(4): cmp $0x2,%r15
11cf2(6): jnz 0xfffffbc2(%rip)
11cf8(5): jmp 0xfffffdea(%rip)
11cfd(7): test $0x80000,%r15d
11d04(5): mov $0x2,%eax
11d09(6): jnz 0xfffffbab(%rip)
11d0f(4): mov $0xc,0x8(%rbp)
11d13(7): mov $0x9,0x0(%rbp)
11d1a(5): jmp 0xfffffb9a(%rip)
11d1f(7): test $0x80000,%r15d
11d26(5): mov $0x2,%eax
11d2b(6): jnz 0xfffffb89(%rip)
11d31(4): mov $0xc,0x8(%rbp)
11d35(7): mov $0x6,0x0(%rbp)
11d3c(5): jmp 0xfffffb78(%rip)
11d41(7): test $0x4000,%r15d
11d48(5): mov $0x2,%eax
11d4d(6): jnz 0xfffffb67(%rip)
11d53(4): mov 0x8(%rsp),%edx
11d57(4): mov $0x4,0x8(%rbp)
11d5b(3): sub $0x31,%edx
11d5e(3): movsxd %edx,%rdx
11d61(4): mov %rdx,0x0(%rbp)
11d65(5): jmp 0xfffffb4f(%rip)
11d6a(7): and $0x402,%r15d
11d71(5): mov $0x2,%eax
11d76(4): cmp $0x2,%r15
11d7a(6): jnz 0xfffffb3a(%rip)
11d80(5): jmp 0xfffffd92(%rip)
11d85(7): test $0x2000,%r15d
11d8c(5): mov $0x2,%eax
11d91(6): jnz 0xfffffb23(%rip)
11d97(5): jmp 0xfffffdcb(%rip)
11d9c(7): test $0x2000,%r15d
11da3(5): mov $0x2,%eax
11da8(6): jnz 0xfffffb0c(%rip)
11dae(5): jmp 0xfffffdd4(%rip)
11db3(7): test $0x80000,%r15d
11dba(5): mov $0x2,%eax
11dbf(6): jnz 0xfffffaf5(%rip)
11dc5(4): mov $0xc,0x8(%rbp)
11dc9(7): mov $0x80,0x0(%rbp)
11dd0(5): jmp 0xfffffae4(%rip)
11dd5(5): mov $0x2,%eax
11dda(5): jmp 0xfffffada(%rip)
11ddf(1): nop 
11de0(5): call 0xfffeffe0(%rip)
11de5(3): mov (%rax),%rsi
11de8(4): movzx %r12b,%edx
11dec(4): movzx 0x0(%rsi,%rdx,2),%eax
11df0(4): shr $0x3,%ax
11df4(3): and $0x1,%eax
11df7(4): cmp $0x5f,%r12b
11dfb(5): jmp 0xfffffbbf(%rip)
11e00(3): cmp $0x1,%eax
11e03(2): jle 0x31(%rip)
11e05(4): mov 0x10(%rbx),%rcx
11e09(8): lea 0x0(,%rsi,4),%rdi
11e11(4): mov 0x0(%rcx,%rsi,4),%r8d
11e15(4): cmp $0xff,%r8d
11e19(6): jz 0xb6(%rip)
11e1f(4): lea 0x2(%r14),%r9
11e23(4): cmp %r9,0x30(%rbx)
11e27(2): jz 0xd(%rip)
11e29(5): cmp $0xff,0x4(%rcx,%rdi,1)
11e2e(6): jz 0xa1(%rip)
11e34(7): cmp $0x0,0x8c(%rbx)
11e3b(3): mov (%rbx),%rcx
11e3e(4): mov 0x28(%rbx),%rdi
11e42(2): jz 0x46(%rip)
11e44(4): mov 0x18(%rbx),%r8
11e48(3): add %rdi,%rcx
11e4b(4): add 0x0(%r8,%rsi,8),%rcx
11e4f(3): movzx (%rcx),%edi
11e52(3): mov %edi,%r12d
11e55(4): mov %edi,0x8(%rsp)
11e59(6): and $0x80,%edi
11e5f(6): jnz 0xfffffb1c(%rip)
11e65(5): jmp 0xfffffb23(%rip)
11e6a(6): cmp $0xa,0xffffffff(%rdx,%r14,1)
11e70(6): jnz 0xfffffbec(%rip)
11e76(7): test $0x800,%r15d
11e7d(6): jz 0xfffffbdf(%rip)
11e83(5): jmp 0xfffffc27(%rip)
11e88(3): add %rsi,%rcx
11e8b(4): movzx 0x0(%rcx,%rdi,1),%edi
11e8f(3): mov %edi,%r12d
11e92(4): mov %edi,0x8(%rsp)
11e96(5): jmp 0xfffffaf2(%rip)
11e9b(5): lea 0x10(%rsp),%rdi
11ea0(3): mov %r15,%rdx
11ea3(4): mov %r14,0x48(%rbx)
11ea7(3): mov %rbx,%rsi
11eaa(5): call 0xfffff946(%rip)
11eaf(5): movzx 0x18(%rsp),%eax
11eb4(5): sub $0x1,0x48(%rbx)
11eb9(3): lea 0xfffffff7(%rax),%edx
11ebc(5): mov $0x1,%eax
11ec1(3): cmp $0x1,%dl
11ec4(6): jnbe 0xfffff9f0(%rip)
11eca(5): jmp 0xfffffcda(%rip)
11ecf(6): movzx 0x1(%rdx,%r14,1),%eax
11ed5(4): mov $0x1,0x8(%rbp)
11ed9(3): mov %eax,%r12d
11edc(3): mov %al,0x0(%rbp)
11edf(4): mov %eax,0x8(%rsp)
11ee3(5): jmp 0xfffffabe(%rip)
11ee8(5): call 0xfffefbe8(%rip)

"fetch_number" :
11ef0(2): push %r14
11ef2(3): mov %rdi,%r14
11ef5(2): push %r13
11ef7(3): mov %rsi,%r13
11efa(2): push %r12
11efc(7): mov $0xfffffffe,%r12
11f03(1): push %rbp
11f04(3): mov %rdx,%rbp
11f07(1): push %rbx
11f08(7): mov $0xffffffff,%rbx
11f0f(1): nop 
11f10(3): mov %rbp,%rdx
11f13(3): mov %r14,%rsi
11f16(3): mov %r13,%rdi
11f19(5): call 0xfffff8d7(%rip)
11f1e(2): cwde 
11f20(4): add %rax,0x48(%r14)
11f24(5): movzx 0x8(%r13),%eax
11f29(5): movzx 0x0(%r13),%edx
11f2e(2): cmp $0x2,%al
11f30(2): jz 0x50(%rip)
11f32(2): cmp $0x18,%al
11f34(2): jz 0x53(%rip)
11f36(3): cmp $0x2c,%dl
11f39(2): jz 0x4e(%rip)
11f3b(2): cmp $0x1,%al
11f3d(2): jz 0xb(%rip)
11f3f(3): mov %r12,%rbx
11f42(2): jmp 0xffffffce(%rip)
11f44(4): nop 0x0(%rax)
11f48(3): lea 0xffffffd0(%rdx),%eax
11f4b(2): cmp $0x9,%al
11f4d(2): jnbe 0xfffffff2(%rip)
11f4f(4): cmp $0xfffffffe,%rbx
11f53(2): jz 0xffffffec(%rip)
11f55(4): cmp $0xffffffff,%rbx
11f59(2): jz 0x3f(%rip)
11f5b(4): lea 0x0(%rbx,%rbx,4),%rax
11f5f(4): lea 0x0(%rdx,%rax,2),%rbx
11f63(5): mov $0x8030,%eax
11f68(7): cmp $0x8030,%rbx
11f6f(4): cmovnl %rax,%rbx
11f73(4): sub $0x30,%rbx
11f77(2): jmp 0xffffff99(%rip)
11f79(7): nop 0x0(%rax)
11f80(7): mov $0xfffffffe,%rbx
11f87(3): mov %rbx,%rax
11f8a(1): pop %rbx
11f8b(1): pop %rbp
11f8c(2): pop %r12
11f8e(2): pop %r13
11f90(2): pop %r14
11f92(1): ret near (%rsp)
11f93(5): nop 0x0(%rax,%rax,1)
11f98(3): movzx %dl,%ebx
11f9b(3): sub $0x30,%ebx
11f9e(3): movsxd %ebx,%rbx
11fa1(5): jmp 0xffffff6f(%rip)

"parse_expression" :
11fb0(2): push %r15
11fb2(2): push %r14
11fb4(2): push %r13
11fb6(2): push %r12
11fb8(1): push %rbp
11fb9(1): push %rbx
11fba(7): sub $0x128,%rsp
11fc1(5): mov %rcx,0x20(%rsp)
11fc6(4): movzx 0x8(%rdx),%ecx
11fca(9): mov $0x28,%rax
11fd3(8): mov %rax,0x118(%rsp)
11fdb(2): xor %eax,%eax
11fdd(3): mov (%rsi),%rax
11fe0(5): mov %rdx,0x18(%rsp)
11fe5(5): mov %r9,0x40(%rsp)
11fea(3): cmp $0x24,%cl
11fed(5): mov %rax,0x10(%rsp)
11ff2(6): jnbe 0xbe(%rip)
11ff8(3): mov %rsi,%rbp
11ffb(7): lea 0x4efe(%rip),%rsi
12002(3): movzx %cl,%edx
12005(3): mov %rdi,%r14
12008(4): movsxd 0x0(%rsi,%rdx,4),%rax
1200c(3): add %rsi,%rax
1200f(2): jmp %rax
12011(4): mov 0x30(%rbp),%rbx
12015(5): mov 0x20(%rsp),%r15
1201a(3): mov %rdi,%rsi
1201d(5): mov 0x18(%rsp),%r13
12022(4): mov %r8,(%rsp)
12026(4): lea 0x1(%rbx),%rax
1202a(3): mov %r15,%rdx
1202d(7): or $0x800000,%rdx
12034(3): mov %r13,%rdi
12037(4): mov %rax,0x30(%rbp)
1203b(5): call 0xfffff7b5(%rip)
12040(2): cwde 
12042(4): add %rax,0x48(%r14)
12046(2): xor %eax,%eax
12048(5): cmp $0x9,0x8(%r13)
1204d(3): mov %r13,%rdx
12050(6): jz 0xb00(%rip)
12056(5): mov 0x40(%rsp),%r13
1205b(4): mov (%rsp),%r8
1205f(3): mov %r15,%rcx
12062(3): mov %rbp,%rsi
12065(3): mov %r14,%rdi
12068(4): add $0x1,%r8
1206c(3): mov %r13,%r9
1206f(5): call 0x15b1(%rip)
12074(4): mov 0x0(%r13),%r11d
12078(3): test %r11d,%r11d
1207b(2): jnz 0x35(%rip)
1207d(5): mov 0x18(%rsp),%rdx
12082(4): cmp $0x9,0x8(%rdx)
12086(6): jz 0xaca(%rip)
1208c(3): test %rax,%rax
1208f(2): jz 0x13(%rip)
12091(7): lea 0xffff62d8(%rip),%rsi
12098(2): xor %edx,%edx
1209a(3): mov %rax,%rdi
1209d(5): call 0xffff5433(%rip)
120a2(5): mov 0x40(%rsp),%rax
120a7(6): mov $0x8,(%rax)
120ad(3): nop (%rax)
120b0(9): mov $0x0,0x28(%rsp)
120b9(7): nop 0x0(%rax)
120c0(8): mov 0x118(%rsp),%rdi
120c8(9): xor $0x28,%rdi
120d1(5): mov 0x28(%rsp),%rax
120d6(6): jnz 0x1378(%rip)
120dc(7): add $0x128,%rsp
120e3(1): pop %rbx
120e4(1): pop %rbp
120e5(2): pop %r12
120e7(2): pop %r13
120e9(2): pop %r14
120eb(2): pop %r15
120ed(1): ret near (%rsp)
120ee(9): test $0x1000000,0x20(%rsp)
120f7(6): jnz 0x256(%rip)
120fd(5): mov 0x20(%rsp),%rax
12102(2): test $0x20,%al
12104(6): jnz 0x249(%rip)
1210a(2): test $0x10,%al
1210c(6): jnz 0xe69(%rip)
12112(3): cmp $0x9,%cl
12115(6): jz 0xa13(%rip)
1211b(5): mov 0x10(%rsp),%rax
12120(5): mov 0x18(%rsp),%r8
12125(2): xor %ecx,%ecx
12127(2): xor %edx,%edx
12129(7): lea 0x80(%rax),%rsi
12130(4): lea 0x70(%rax),%rdi
12134(5): mov $0x1,0x8(%r8)
12139(5): call 0xffff7777(%rip)
1213e(3): test %rax,%rax
12141(5): mov %rax,0x28(%rsp)
12146(6): jz 0x9d2(%rip)
1214c(5): mov 0x18(%rsp),%rbx
12151(5): mov 0x20(%rsp),%rdx
12156(3): mov %r14,%rsi
12159(8): lea 0xc0(%rsp),%r15
12161(3): mov %rbx,%rdi
12164(5): call 0xfffff68c(%rip)
12169(2): cwde 
1216b(4): add %rax,0x48(%r14)
1216f(4): movzx 0x8(%rbx),%eax
12173(5): nop 0x0(%rax,%rax,1)
12178(2): cmp $0x17,%al
1217a(6): jnbe 0xffffff46(%rip)
12180(2): cmp $0x12,%al
12182(5): mov $0x8c0800,%ecx
12187(3): setz %bl
1218a(4): bt %rax,%rcx
1218e(6): jnb 0xffffff32(%rip)
12194(5): mov 0x18(%rsp),%rcx
12199(2): cmp $0x17,%al
1219b(4): mov 0x48(%r14),%rbp
1219f(4): movdqa (%rcx),%xmm0
121a3(6): jz 0x325(%rip)
121a9(2): cmp $0x13,%al
121ab(3): movzx %bl,%ebx
121ae(6): jz 0x2b2(%rip)
121b4(5): mov 0x20(%rsp),%rdx
121b9(5): mov 0x18(%rsp),%rdi
121be(3): mov %r14,%rsi
121c1(5): call 0xfffff62f(%rip)
121c6(2): cwde 
121c8(4): add %rax,0x48(%r14)
121cc(6): cmp $0x0,0x28(%rsp)
121d2(6): jz 0x38e(%rip)
121d8(8): mov $0xffffffff,(%rsp)
121e0(3): test %rbx,%rbx
121e3(5): mov 0x28(%rsp),%rbp
121e8(9): mov $0x0,0x30(%rsp)
121f1(6): jnle 0x17f(%rip)
121f7(4): cmp $0x11,0x30(%rbp)
121fb(6): jz 0x345(%rip)
12201(5): cmp $0xffffffff,(%rsp)
12206(3): mov %rbp,%rdx
12209(3): mov %r15,%r8
1220c(3): setz %al
1220f(2): xor %ecx,%ecx
12211(3): add $0xa,%eax
12214(7): mov %al,0xc8(%rsp)
1221b(5): mov 0x10(%rsp),%rax
12220(4): lea 0x70(%rax),%r12
12224(7): lea 0x80(%rax),%r13
1222b(3): mov %r12,%rdi
1222e(3): mov %r13,%rsi
12231(5): call 0xffff767f(%rip)
12236(3): test %rax,%rax
12239(3): mov %rax,%rdx
1223c(6): jz 0x1f4(%rip)
12242(4): add $0x2,%rbx
12246(4): cmp (%rsp),%rbx
1224a(2): jnle 0x81(%rip)
1224c(5): mov %r14,0x48(%rsp)
12251(3): mov %rax,%r14
12254(5): mov 0x10(%rsp),%rsi
12259(3): mov %rbp,%rdi
1225c(5): call 0xffff7734(%rip)
12261(3): mov %r15,%r8
12264(3): mov %rax,%rbp
12267(3): mov %rax,%rcx
1226a(3): mov %r14,%rdx
1226d(3): mov %r13,%rsi
12270(3): mov %r12,%rdi
12273(8): mov $0x10,0xc8(%rsp)
1227b(5): call 0xffff7635(%rip)
12280(3): test %rbp,%rbp
12283(6): jz 0x1ad(%rip)
12289(3): test %rax,%rax
1228c(6): jz 0x1a4(%rip)
12292(2): xor %ecx,%ecx
12294(3): mov %r15,%r8
12297(3): mov %rax,%rdx
1229a(3): mov %r13,%rsi
1229d(3): mov %r12,%rdi
122a0(8): mov $0xa,0xc8(%rsp)
122a8(5): call 0xffff7608(%rip)
122ad(3): test %rax,%rax
122b0(3): mov %rax,%r14
122b3(6): jz 0x17d(%rip)
122b9(4): add $0x1,%rbx
122bd(4): cmp (%rsp),%rbx
122c1(2): jle 0xffffff93(%rip)
122c3(5): mov 0x48(%rsp),%r14
122c8(3): mov %rax,%rdx
122cb(5): mov 0x30(%rsp),%rax
122d0(3): test %rax,%rax
122d3(6): jz 0x2ad(%rip)
122d9(3): mov %rdx,%rcx
122dc(3): mov %r15,%r8
122df(3): mov %rax,%rdx
122e2(3): mov %r13,%rsi
122e5(3): mov %r12,%rdi
122e8(8): mov $0x10,0xc8(%rsp)
122f0(5): call 0xffff75c0(%rip)
122f5(5): mov 0x40(%rsp),%rdi
122fa(2): mov (%rdi),%edx
122fc(2): test %edx,%edx
122fe(2): jz 0xb(%rip)
12300(3): test %rax,%rax
12303(6): jz 0x358(%rip)
12309(5): mov %rax,0x28(%rsp)
1230e(9): test $0x1000000,0x20(%rsp)
12317(5): mov 0x18(%rsp),%rax
1231c(4): movzx 0x8(%rax),%eax
12320(6): jz 0xfffffe58(%rip)
12326(2): cmp $0xb,%al
12328(2): jz 0xa(%rip)
1232a(2): cmp $0x17,%al
1232c(6): jnz 0xfffffe4c(%rip)
12332(5): mov 0x28(%rsp),%rax
12337(3): test %rax,%rax
1233a(2): jz 0x13(%rip)
1233c(7): lea 0xffff602d(%rip),%rsi
12343(2): xor %edx,%edx
12345(3): mov %rax,%rdi
12348(5): call 0xffff5188(%rip)
1234d(5): mov 0x40(%rsp),%rax
12352(9): mov $0x0,0x28(%rsp)
1235b(6): mov $0xd,(%rax)
12361(5): jmp 0xfffffd5f(%rip)
12366(a): nop 0x0(%rax,%rax,1)
12370(4): cmp $0x1,%rbx
12374(6): jz 0x838(%rip)
1237a(5): mov 0x10(%rsp),%rax
1237f(3): mov %rbp,%r13
12382(5): mov %r14,0x48(%rsp)
12387(7): lea 0x80(%rax),%r12
1238e(4): lea 0x70(%rax),%rdi
12392(3): mov %rbp,%rax
12395(3): mov %rax,%r14
12398(5): mov $0x2,%ebp
1239d(3): mov %r12,%rsi
123a0(5): mov %rdi,0x30(%rsp)
123a5(3): mov %r13,%r12
123a8(3): mov %rbx,%r13
123ab(3): mov %rsi,%rbx
123ae(2): nop 
123b0(5): mov 0x10(%rsp),%rsi
123b5(3): mov %r12,%rdi
123b8(5): call 0xffff75d8(%rip)
123bd(5): mov 0x30(%rsp),%rdi
123c2(3): mov %rax,%r12
123c5(3): mov %r14,%rdx
123c8(3): mov %r15,%r8
123cb(3): mov %rax,%rcx
123ce(3): mov %rbx,%rsi
123d1(8): mov $0x10,0xc8(%rsp)
123d9(5): call 0xffff74d7(%rip)
123de(3): test %r12,%r12
123e1(3): mov %rax,%r14
123e4(2): jz 0x4c(%rip)
123e6(3): test %rax,%rax
123e9(2): jz 0x47(%rip)
123eb(4): add $0x1,%rbp
123ef(3): cmp %r13,%rbp
123f2(2): jle 0xffffffbe(%rip)
123f4(5): mov 0x48(%rsp),%r14
123f9(3): mov %r13,%rbx
123fc(5): mov %rax,0x30(%rsp)
12401(3): mov %r12,%r13
12404(4): cmp %rbx,(%rsp)
12408(6): jz 0x16c(%rip)
1240e(5): mov 0x10(%rsp),%rsi
12413(3): mov %r13,%rdi
12416(5): call 0xffff757a(%rip)
1241b(3): test %rax,%rax
1241e(3): mov %rax,%rbp
12421(6): jnz 0xfffffdd6(%rip)
12427(9): nop 0x0(%rax,%rax,1)
12430(5): mov 0x40(%rsp),%rax
12435(6): mov $0xc,(%rax)
1243b(5): mov 0x28(%rsp),%rdi
12440(7): lea 0xffff5f29(%rip),%rsi
12447(2): xor %edx,%edx
12449(5): call 0xffff5087(%rip)
1244e(9): mov $0x0,0x28(%rsp)
12457(5): jmp 0xfffffc69(%rip)
1245c(4): nop 0x0(%rax)
12460(8): mov $0x1,(%rsp)
12468(5): mov 0x20(%rsp),%rdx
1246d(5): mov 0x18(%rsp),%rdi
12472(3): mov %r14,%rsi
12475(5): call 0xfffff37b(%rip)
1247a(2): cwde 
1247c(4): add %rax,0x48(%r14)
12480(6): cmp $0x0,0x28(%rsp)
12486(6): jz 0xda(%rip)
1248c(4): mov (%rsp),%rax
12490(3): or %rbx,%rax
12493(6): jnz 0xfffffd4d(%rip)
12499(5): mov 0x28(%rsp),%rdi
1249e(7): lea 0xffff5ecb(%rip),%rsi
124a5(2): xor %edx,%edx
124a7(5): call 0xffff5029(%rip)
124ac(5): mov 0x40(%rsp),%rax
124b1(2): mov (%rax),%esi
124b3(2): test %esi,%esi
124b5(2): jnz 0xffffff86(%rip)
124b7(9): mov $0x0,0x28(%rsp)
124c0(5): jmp 0xfffffe4e(%rip)
124c5(3): nop (%rax)
124c8(5): mov 0x20(%rsp),%rdx
124cd(3): mov %rcx,%rsi
124d0(3): mov %r14,%rdi
124d3(4): movaps %xmm0,(%rsp)
124d7(5): call 0xfffffa19(%rip)
124dc(4): cmp $0xffffffff,%rax
124e0(3): mov %rax,%rbx
124e3(5): movdqa (%rsp),%xmm0
124e8(6): jz 0xa8(%rip)
124ee(4): cmp $0xfffffffe,%rax
124f2(2): jz 0x1b(%rip)
124f4(5): mov 0x18(%rsp),%rax
124f9(4): movzx 0x8(%rax),%eax
124fd(2): cmp $0x18,%al
124ff(6): jz 0x121(%rip)
12505(2): cmp $0x1,%al
12507(6): jz 0x12c(%rip)
1250d(9): test $0x200000,0x20(%rsp)
12516(6): jz 0xf3d(%rip)
1251c(5): mov 0x18(%rsp),%rax
12521(4): mov %rbp,0x48(%r14)
12525(3): movaps %xmm0,(%rax)
12528(4): mov $0x1,0x8(%rax)
1252c(5): mov 0x28(%rsp),%rax
12531(5): jmp 0xfffffdc4(%rip)
12536(a): nop 0x0(%rax,%rax,1)
12540(4): mov 0x28(%rbp),%rdx
12544(7): lea 0xffff4cc5(%rip),%rsi
1254b(3): mov %rbp,%rdi
1254e(5): call 0xffff4f82(%rip)
12553(5): jmp 0xfffffcae(%rip)
12558(8): nop 0x0(%rax,%rax,1)
12560(5): mov 0x40(%rsp),%rax
12565(2): mov (%rax),%ecx
12567(2): test %ecx,%ecx
12569(6): jz 0xffffff4e(%rip)
1256f(5): jmp 0xfffffb41(%rip)
12574(5): mov 0x30(%rsp),%rdx
12579(7): nop 0x0(%rax)
12580(5): mov %rdx,0x28(%rsp)
12585(5): jmp 0xfffffd89(%rip)
1258a(6): nop 0x0(%rax,%rax,1)
12590(5): mov 0x18(%rsp),%rax
12595(4): cmp $0x1,0x8(%rax)
12599(6): jnz 0xb7(%rip)
1259f(5): mov 0x18(%rsp),%rax
125a4(3): cmp $0x2c,(%rax)
125a7(6): jnz 0xa9(%rip)
125ad(2): xor %ebx,%ebx
125af(5): mov 0x20(%rsp),%rdx
125b4(5): mov 0x18(%rsp),%rsi
125b9(3): mov %r14,%rdi
125bc(5): movaps %xmm0,0x30(%rsp)
125c1(5): call 0xfffff92f(%rip)
125c6(4): cmp $0xfffffffe,%rax
125ca(4): mov %rax,(%rsp)
125ce(6): movdqa 0x30(%rsp),%xmm0
125d4(6): jz 0xffffff39(%rip)
125da(4): mov (%rsp),%rax
125de(4): cmp $0xffffffff,%rax
125e2(2): jz 0x7(%rip)
125e4(3): cmp %rbx,%rax
125e7(2): jl 0x69(%rip)
125e9(5): mov 0x18(%rsp),%rax
125ee(4): cmp $0x18,0x8(%rax)
125f2(2): jnz 0x5e(%rip)
125f4(5): cmp $0xffffffff,(%rsp)
125f9(2): jnz 0x2b(%rip)
125fb(2): xor %eax,%eax
125fd(7): cmp $0x7fff,%rbx
12604(3): setnle %al
12607(3): test %rax,%rax
1260a(6): jz 0xfffffe5e(%rip)
12610(5): mov 0x40(%rsp),%rax
12615(6): mov $0xf,(%rax)
1261b(2): jmp 0x40(%rip)
1261d(3): nop (%rax)
12620(4): mov %rbx,(%rsp)
12624(2): xor %eax,%eax
12626(8): cmp $0x7fff,(%rsp)
1262e(3): setnle %al
12631(2): jmp 0xffffffd6(%rip)
12633(5): mov 0x18(%rsp),%rax
12638(3): cmp $0x2c,(%rax)
1263b(6): jz 0xffffff74(%rip)
12641(9): test $0x200000,0x20(%rsp)
1264a(6): jnz 0xfffffed2(%rip)
12650(5): mov 0x40(%rsp),%rax
12655(6): mov $0xa,(%rax)
1265b(6): cmp $0x0,0x28(%rsp)
12661(6): jnz 0xfffffdda(%rip)
12667(5): jmp 0xfffffa49(%rip)
1266c(4): nop 0x0(%rax)
12670(5): mov 0x18(%rsp),%rax
12675(2): mov (%rax),%ebp
12677(6): test $0x30f,%ebp
1267d(2): jz 0x64(%rip)
1267f(5): mov 0x10(%rsp),%rax
12684(7): movzx 0xb0(%rax),%eax
1268b(2): test $0x10,%al
1268d(2): jnz 0x54(%rip)
1268f(5): mov 0x10(%rsp),%rdi
12694(3): or $0x10,%eax
12697(2): test $0x8,%al
12699(6): mov %al,0xb0(%rdi)
1269f(6): jnz 0xc04(%rip)
126a5(a): mov $0x287948901175001088,%rdx
126af(2): test $0x4,%al
126b1(7): mov %rdx,0xb8(%rdi)
126b8(a): mov $0x576460745995190270,%rdx
126c2(7): mov %rdx,0xc0(%rdi)
126c9(6): jz 0xb5f(%rip)
126cf(4): pxor %xmm0,%xmm0
126d3(5): mov 0x18(%rsp),%rax
126d8(7): movups %xmm0,0xc8(%rdi)
126df(2): mov (%rax),%ebp
126e1(5): mov 0x10(%rsp),%rax
126e6(4): lea 0x70(%rax),%rbx
126ea(7): lea 0x80(%rax),%r12
126f1(6): lea 0xffffff00(%rbp),%eax
126f7(5): test $0xfffffeff,%eax
126fc(6): jnz 0x66e(%rip)
12702(6): cmp $0x100,%ebp
12708(5): mov 0x18(%rsp),%r15
1270d(6): jz 0x635(%rip)
12713(7): mov $0x5,(%r15)
1271a(3): mov %r15,%r8
1271d(2): xor %ecx,%ecx
1271f(2): xor %edx,%edx
12721(3): mov %r12,%rsi
12724(3): mov %rbx,%rdi
12727(5): call 0xffff7189(%rip)
1272c(7): mov $0xa,(%r15)
12733(3): mov %rax,%rbp
12736(5): mov 0x18(%rsp),%r8
1273b(2): xor %ecx,%ecx
1273d(2): xor %edx,%edx
1273f(3): mov %r12,%rsi
12742(3): mov %rbx,%rdi
12745(5): call 0xffff716b(%rip)
1274a(8): lea 0xc0(%rsp),%r8
12752(3): mov %rbp,%rdx
12755(3): mov %rbx,%rdi
12758(3): mov %rax,%rcx
1275b(3): mov %r12,%rsi
1275e(3): mov %rax,%r13
12761(8): mov $0xa,0xc8(%rsp)
12769(5): call 0xffff7147(%rip)
1276e(3): test %rbp,%rbp
12771(3): mov %rax,%rdi
12774(5): mov %rax,0x28(%rsp)
12779(3): setz %dl
1277c(3): test %r13,%r13
1277f(3): setz %al
12782(2): or %al,%dl
12784(6): jnz 0x394(%rip)
1278a(3): test %rdi,%rdi
1278d(6): jz 0x38b(%rip)
12793(5): mov 0x20(%rsp),%rdx
12798(5): mov 0x18(%rsp),%rdi
1279d(3): mov %r14,%rsi
127a0(5): call 0xfffff050(%rip)
127a5(2): cwde 
127a7(4): add %rax,0x48(%r14)
127ab(5): jmp 0xfffff915(%rip)
127b0(5): mov $0x1,%esi
127b5(5): mov $0x20,%edi
127ba(c): mov $0x0,0x98(%rsp)
127c6(5): call 0xfffef3fa(%rip)
127cb(5): mov $0x1,%esi
127d0(3): mov %rax,%r12
127d3(5): mov $0x50,%edi
127d8(5): call 0xfffef3e8(%rip)
127dd(3): test %r12,%r12
127e0(3): mov %rax,%r13
127e3(3): setz %dl
127e6(3): test %rax,%rax
127e9(3): setz %al
127ec(2): or %al,%dl
127ee(6): jnz 0x7db(%rip)
127f4(5): mov 0x18(%rsp),%r10
127f9(5): mov 0x20(%rsp),%rdx
127fe(3): mov %r14,%rsi
12801(3): mov %r10,%rdi
12804(5): call 0xffff48dc(%rip)
12809(3): movsxd %eax,%rbx
1280c(5): movzx 0x8(%r10),%eax
12811(2): cmp $0x2,%al
12813(6): jz 0x7a6(%rip)
12819(2): cmp $0x19,%al
1281b(5): mov $0x0,0x57(%rsp)
12820(6): jz 0x4ca(%rip)
12826(2): cmp $0x15,%al
12828(6): jz 0x50c(%rip)
1282e(8): lea 0xd0(%rsp),%rax
12836(5): mov 0x18(%rsp),%r15
1283b(7): lea 0x4752(%rip),%rbp
12842(9): mov $0x0,0x48(%rsp)
1284b(6): mov $0x1,%r9d
12851(9): mov $0x0,0x30(%rsp)
1285a(5): mov %rax,0x28(%rsp)
1285f(8): lea 0xa0(%rsp),%rax
12867(4): mov %rax,(%rsp)
1286b(8): lea 0x98(%rsp),%rax
12873(5): mov %rax,0x58(%rsp)
12878(8): lea 0xc0(%rsp),%rax
12880(5): mov %rax,0x60(%rsp)
12885(8): lea 0xf0(%rsp),%rax
1288d(5): mov %rax,0x68(%rsp)
12892(5): mov 0x28(%rsp),%rax
12897(5): mov 0x20(%rsp),%r8
1289c(4): and $0x1,%r9d
128a0(4): mov (%rsp),%rdi
128a4(2): mov %ebx,%ecx
128a6(3): mov %r15,%rdx
128a9(3): mov %r14,%rsi
128ac(b): mov $0x3,0xa0(%rsp)
128b7(8): mov %rax,0xa8(%rsp)
128bf(5): call 0xffffecd1(%rip)
128c4(2): test %eax,%eax
128c6(6): jnz 0x4e5(%rip)
128cc(5): mov 0x20(%rsp),%rdx
128d1(3): mov %r14,%rsi
128d4(3): mov %r15,%rdi
128d7(5): call 0xffff4809(%rip)
128dc(3): movsxd %eax,%rbx
128df(7): mov 0xa0(%rsp),%eax
128e6(3): lea 0xfffffffe(%rax),%edx
128e9(3): and $0xfd,%edx
128ec(2): jz 0x19(%rip)
128ee(5): movzx 0x8(%r15),%edx
128f3(3): cmp $0x2,%dl
128f6(6): jz 0x49b(%rip)
128fc(3): cmp $0x16,%dl
128ff(6): jz 0x4b8(%rip)
12905(3): cmp $0x4,%eax
12908(6): jnbe 0x9a2(%rip)
1290e(5): movsxd 0x0(%rbp,%rax,4),%rax
12913(3): add %rbp,%rax
12916(2): jmp %rax
12918(5): mov 0x40(%rsp),%rbx
1291d(3): cmp $0x23,%cl
12920(4): mov 0x78(%rdi),%rsi
12924(4): setz %r8b
12928(7): lea 0x3e32(%rip),%rcx
1292f(7): lea 0x41d9(%rip),%rdx
12936(4): movzx %r8b,%r8d
1293a(3): mov %rbx,%r9
1293d(5): mov 0x10(%rsp),%rdi
12942(5): call 0xffffa2be(%rip)
12947(2): mov (%rbx),%edi
12949(5): mov %rax,0x28(%rsp)
1294e(2): test %edi,%edi
12950(6): jz 0xfffff7fc(%rip)
12956(3): test %rax,%rax
12959(6): jnz 0xfffff7f3(%rip)
1295f(5): jmp 0xfffff751(%rip)
12964(4): nop 0x0(%rax)
12968(5): mov 0x40(%rsp),%rbx
1296d(3): cmp $0x21,%cl
12970(4): mov 0x78(%rdi),%rsi
12974(4): setz %r8b
12978(7): lea 0x369b(%rip),%rcx
1297f(7): lea 0x417d(%rip),%rdx
12986(4): movzx %r8b,%r8d
1298a(3): mov %rbx,%r9
1298d(2): jmp 0xffffffb0(%rip)
1298f(5): mov 0x18(%rsp),%rax
12994(5): mov 0x10(%rsp),%rdi
12999(3): mov (%rax),%rcx
1299c(5): mov $0x1,%eax
129a1(2): shl/sal %cl,%eax
129a3(2): cwde 
129a5(7): test %rax,0xa8(%rdi)
129ac(6): jz 0x632(%rip)
129b2(5): mov 0x10(%rsp),%rbx
129b7(5): mov 0x18(%rsp),%r8
129bc(2): xor %ecx,%ecx
129be(2): xor %edx,%edx
129c0(7): or %rax,0xa0(%rbx)
129c7(7): lea 0x80(%rbx),%rsi
129ce(4): lea 0x70(%rbx),%rdi
129d2(5): call 0xffff6ede(%rip)
129d7(3): test %rax,%rax
129da(5): mov %rax,0x28(%rsp)
129df(6): jz 0x139(%rip)
129e5(8): add $0x1,0x98(%rbx)
129ed(7): or $0x2,0xb0(%rbx)
129f4(5): jmp 0xfffff758(%rip)
129f9(5): mov 0x10(%rsp),%rbx
129fe(5): mov 0x18(%rsp),%r8
12a03(2): xor %ecx,%ecx
12a05(2): xor %edx,%edx
12a07(7): lea 0x80(%rbx),%rsi
12a0e(4): lea 0x70(%rbx),%rdi
12a12(5): call 0xffff6e9e(%rip)
12a17(3): test %rax,%rax
12a1a(5): mov %rax,0x28(%rsp)
12a1f(6): jz 0xf9(%rip)
12a25(7): cmp $0x1,0xb4(%rbx)
12a2c(6): jle 0xfffff720(%rip)
12a32(7): or $0x2,0xb0(%rbx)
12a39(5): jmp 0xfffff713(%rip)
12a3e(5): mov 0x10(%rsp),%rax
12a43(5): mov 0x18(%rsp),%r8
12a48(2): xor %ecx,%ecx
12a4a(2): xor %edx,%edx
12a4c(4): lea 0x70(%rax),%rbx
12a50(7): lea 0x80(%rax),%rbp
12a57(3): mov %rbx,%rdi
12a5a(3): mov %rbp,%rsi
12a5d(5): call 0xffff6e53(%rip)
12a62(3): test %rax,%rax
12a65(5): mov %rax,0x28(%rsp)
12a6a(6): jz 0xae(%rip)
12a70(5): mov 0x10(%rsp),%rax
12a75(8): lea 0xc0(%rsp),%r12
12a7d(5): mov 0x28(%rsp),%r15
12a82(7): cmp $0x1,0xb4(%rax)
12a89(6): jle 0xfffff6c3(%rip)
12a8f(4): mov 0x48(%r14),%rax
12a93(4): cmp %rax,0x68(%r14)
12a97(6): jle 0x30a(%rip)
12a9d(4): cmp 0x30(%r14),%rax
12aa1(6): jz 0x300(%rip)
12aa7(4): mov 0x10(%r14),%rdx
12aab(4): cmp $0xff,0x0(%rdx,%rax,4)
12aaf(6): jnz 0x2f2(%rip)
12ab5(5): mov 0x18(%rsp),%r13
12aba(5): mov 0x20(%rsp),%rdx
12abf(3): mov %r14,%rsi
12ac2(3): mov %r13,%rdi
12ac5(5): call 0xffffed2b(%rip)
12aca(2): cwde 
12acc(4): add %rax,0x48(%r14)
12ad0(3): mov %r13,%r8
12ad3(2): xor %ecx,%ecx
12ad5(2): xor %edx,%edx
12ad7(3): mov %rbp,%rsi
12ada(3): mov %rbx,%rdi
12add(5): call 0xffff6dd3(%rip)
12ae2(3): mov %r15,%rdx
12ae5(3): mov %rax,%r13
12ae8(3): mov %r12,%r8
12aeb(3): mov %rax,%rcx
12aee(3): mov %rbp,%rsi
12af1(3): mov %rbx,%rdi
12af4(8): mov $0x10,0xc8(%rsp)
12afc(5): call 0xffff6db4(%rip)
12b01(3): test %r13,%r13
12b04(3): mov %rax,%r15
12b07(3): setz %dl
12b0a(3): test %rax,%rax
12b0d(3): setz %al
12b10(2): or %al,%dl
12b12(6): jz 0xffffff7d(%rip)
12b18(5): mov 0x40(%rsp),%rax
12b1d(6): mov $0xc,(%rax)
12b23(5): jmp 0xfffff58d(%rip)
12b28(9): test $0x20000,0x20(%rsp)
12b31(6): jnz 0xfffff5ea(%rip)
12b37(5): mov 0x40(%rsp),%rax
12b3c(9): mov $0x0,0x28(%rsp)
12b45(6): mov $0x10,(%rax)
12b4b(5): jmp 0xfffff575(%rip)
12b50(4): cmp $0x8,%rbx
12b54(2): jbe 0x67(%rip)
12b56(5): mov 0x10(%rsp),%rdi
12b5b(8): lea 0xc0(%rsp),%r8
12b63(2): xor %ecx,%ecx
12b65(3): mov %rax,%rdx
12b68(8): mov $0x11,0xc8(%rsp)
12b70(7): lea 0x80(%rdi),%rsi
12b77(4): add $0x70,%rdi
12b7b(5): call 0xffff6d35(%rip)
12b80(3): test %rax,%rax
12b83(5): mov %rax,0x28(%rsp)
12b88(2): jz 0xffffff90(%rip)
12b8a(4): mov %rbx,0x28(%rax)
12b8e(5): jmp 0xfffff5be(%rip)
12b93(5): mov 0x40(%rsp),%rax
12b98(9): mov $0x0,0x28(%rsp)
12ba1(6): mov $0x5,(%rax)
12ba7(5): jmp 0xfffff519(%rip)
12bac(5): mov 0x28(%rsp),%r13
12bb1(5): mov %r13,0x30(%rsp)
12bb6(5): jmp 0xfffff84e(%rip)
12bbb(5): mov 0x10(%rsp),%rsi
12bc0(5): mov $0x1,%edx
12bc5(2): mov %ebx,%ecx
12bc7(2): shl/sal %cl,%edx
12bc9(3): movsxd %edx,%rdx
12bcc(7): or %rdx,0xa8(%rsi)
12bd3(2): jmp 0xffffff83(%rip)
12bd5(8): mov 0xa8(%rsp),%rsi
12bdd(3): mov %r12,%rdi
12be0(5): call 0xffff97c0(%rip)
12be5(5): mov 0x40(%rsp),%rdx
12bea(2): test %eax,%eax
12bec(2): mov %eax,(%rdx)
12bee(2): jnz 0x3a(%rip)
12bf0(5): movzx 0x8(%r15),%eax
12bf5(2): cmp $0x2,%al
12bf7(6): jz 0x19a(%rip)
12bfd(2): cmp $0x15,%al
12bff(6): jz 0x413(%rip)
12c05(3): xor %r9d,%r9d
12c08(5): jmp 0xfffffc8a(%rip)
12c0d(8): mov 0xa8(%rsp),%rsi
12c15(3): mov %r12,%rdi
12c18(5): call 0xffff9788(%rip)
12c1d(5): mov 0x40(%rsp),%rdx
12c22(2): test %eax,%eax
12c24(2): mov %eax,(%rdx)
12c26(2): jz 0xffffffca(%rip)
12c28(3): mov %r12,%rdi
12c2b(5): call 0xfffeeda5(%rip)
12c30(3): mov %r13,%rdi
12c33(5): call 0xffff56dd(%rip)
12c38(5): mov 0x40(%rsp),%rax
12c3d(3): mov (%rax),%r8d
12c40(3): test %r8d,%r8d
12c43(6): jnz 0xfffff46d(%rip)
12c49(9): mov $0x0,0x28(%rsp)
12c52(5): jmp 0xfffff4fa(%rip)
12c57(4): mov 0x28(%r13),%rdx
12c5b(5): cmp 0x30(%rsp),%rdx
12c60(4): mov 0x0(%r13),%rax
12c64(6): jz 0x4fa(%rip)
12c6a(4): lea 0x1(%rdx),%rcx
12c6e(4): mov %rcx,0x28(%r13)
12c72(7): mov 0xa8(%rsp),%ecx
12c79(3): mov %ecx,0x0(%rax,%rdx,4)
12c7c(5): jmp 0xffffff74(%rip)
12c81(8): movzx 0xa8(%rsp),%edx
12c89(5): mov $0x1,%esi
12c8e(3): mov %rdx,%rax
12c91(3): and $0x3f,%edx
12c94(4): shr $0x3,%rax
12c98(2): mov %edx,%ecx
12c9a(3): and $0x18,%eax
12c9d(3): shl/sal %cl,%rsi
12ca0(4): or %rsi,0x0(%r12,%rax,1)
12ca4(5): jmp 0xffffff4c(%rip)
12ca9(4): sub $0x8,%rsp
12cad(4): mov 0x78(%r14),%rdi
12cb1(4): lea 0x18(%r13),%rdx
12cb5(4): push 0x28(%rsp)
12cb9(8): mov 0xb8(%rsp),%r9
12cc1(4): lea 0x48(%r13),%rcx
12cc5(5): mov 0x68(%rsp),%r8
12cca(3): mov %r12,%rsi
12ccd(5): call 0xffff9723(%rip)
12cd2(5): mov 0x50(%rsp),%rdx
12cd7(2): test %eax,%eax
12cd9(2): mov %eax,(%rdx)
12cdb(2): pop %r9
12cdd(2): pop %r10
12cdf(6): jz 0xffffff11(%rip)
12ce5(5): jmp 0xffffff43(%rip)
12cea(5): or $0x1,0x20(%r13)
12cef(9): test $0x100,0x20(%rsp)
12cf8(2): jz 0xa(%rip)
12cfa(8): or $0x400,(%r12)
12d02(4): add %rbx,0x48(%r14)
12d06(5): mov 0x18(%rsp),%r11
12d0b(3): mov %r14,%rsi
12d0e(5): mov 0x20(%rsp),%rdx
12d13(3): mov %r11,%rdi
12d16(5): call 0xffff43ca(%rip)
12d1b(2): mov %eax,%ebx
12d1d(5): movzx 0x8(%r11),%eax
12d22(2): cmp $0x2,%al
12d24(6): jz 0x295(%rip)
12d2a(5): mov $0x1,0x57(%rsp)
12d2f(5): jmp 0xfffffaf7(%rip)
12d34(5): mov 0x18(%rsp),%rax
12d39(4): mov $0x1,0x8(%rax)
12d3d(5): jmp 0xfffffaf1(%rip)
12d42(7): mov $0x6,(%r15)
12d49(3): mov %r15,%r8
12d4c(2): xor %ecx,%ecx
12d4e(2): xor %edx,%edx
12d50(3): mov %r12,%rsi
12d53(3): mov %rbx,%rdi
12d56(5): call 0xffff6b5a(%rip)
12d5b(7): mov $0x9,(%r15)
12d62(3): mov %rax,%rbp
12d65(5): jmp 0xfffff9d1(%rip)
12d6a(5): mov 0x18(%rsp),%r8
12d6f(2): xor %ecx,%ecx
12d71(2): xor %edx,%edx
12d73(3): mov %r12,%rsi
12d76(3): mov %rbx,%rdi
12d79(5): call 0xffff6b37(%rip)
12d7e(3): test %rax,%rax
12d81(5): mov %rax,0x28(%rsp)
12d86(6): jnz 0xfffffa0d(%rip)
12d8c(5): jmp 0xfffffd8c(%rip)
12d91(5): mov 0x40(%rsp),%rax
12d96(6): mov $0x7,(%rax)
12d9c(5): jmp 0xfffffe8c(%rip)
12da1(5): mov %r15,0x28(%rsp)
12da6(5): jmp 0xfffff3a6(%rip)
12dab(5): mov 0x40(%rsp),%rdx
12db0(2): mov %eax,(%rdx)
12db2(5): jmp 0xfffffe76(%rip)
12db7(3): movsxd %ebx,%rax
12dba(5): mov 0x20(%rsp),%r11
12dbf(4): add %rax,0x48(%r14)
12dc3(5): mov 0x60(%rsp),%r10
12dc8(3): mov %r11,%rdx
12dcb(3): mov %r10,%rdi
12dce(5): call 0xffff4312(%rip)
12dd3(8): movzx 0xc8(%rsp),%edx
12ddb(3): cmp $0x2,%dl
12dde(2): jz 0xffffffb3(%rip)
12de0(3): cmp $0x15,%dl
12de3(6): jz 0x214(%rip)
12de9(5): mov 0x68(%rsp),%rdx
12dee(8): lea 0xb0(%rsp),%rdi
12df6(6): mov $0x1,%r9d
12dfc(3): mov %r11,%r8
12dff(2): mov %eax,%ecx
12e01(b): mov $0x3,0xb0(%rsp)
12e0c(8): mov %rdx,0xb8(%rsp)
12e14(3): mov %r10,%rdx
12e17(5): call 0xffffe779(%rip)
12e1c(2): test %eax,%eax
12e1e(2): jnz 0xffffff8d(%rip)
12e20(5): mov 0x20(%rsp),%rdx
12e25(3): mov %r14,%rsi
12e28(3): mov %r15,%rdi
12e2b(5): call 0xffff42b5(%rip)
12e30(3): movsxd %eax,%rbx
12e33(5): mov 0x10(%rsp),%rax
12e38(7): mov 0xa0(%rsp),%esi
12e3f(6): mov $0x0,%r9d
12e45(7): cmp $0x1,0xb4(%rax)
12e4c(3): lea 0xfffffffe(%rsi),%eax
12e4f(4): cmovnl %r13,%r9
12e53(3): and $0xfd,%eax
12e56(6): jz 0x473(%rip)
12e5c(8): mov 0xb0(%rsp),%r10d
12e64(4): lea 0xfffffffe(%r10),%eax
12e68(3): and $0xfd,%eax
12e6b(6): jz 0x45e(%rip)
12e71(3): cmp $0x3,%esi
12e74(4): setz %r11b
12e78(6): jz 0x495(%rip)
12e7e(4): cmp $0x3,%r10d
12e82(6): jz 0x457(%rip)
12e88(2): test %esi,%esi
12e8a(6): jnz 0x36f(%rip)
12e90(8): movzx 0xa8(%rsp),%edx
12e98(3): test %r10d,%r10d
12e9b(6): jnz 0x342(%rip)
12ea1(9): movzx 0xb8(%rsp),%r8d
12eaa(2): test %esi,%esi
12eac(6): jz 0x2ea(%rip)
12eb2(3): test %r11b,%r11b
12eb5(6): jnz 0x2e1(%rip)
12ebb(3): test %r9,%r9
12ebe(7): mov 0xa8(%rsp),%edx
12ec5(2): jz 0x1f(%rip)
12ec7(3): mov %r8d,%edi
12eca(4): mov %edx,0x78(%rsp)
12ece(5): mov %r9,0x70(%rsp)
12ed3(5): call 0xfffeedfd(%rip)
12ed8(5): mov 0x70(%rsp),%r9
12edd(4): mov 0x78(%rsp),%edx
12ee1(3): mov %eax,%r8d
12ee4(3): cmp $0xff,%edx
12ee7(6): jz 0x416(%rip)
12eed(4): cmp $0xff,%r8d
12ef1(6): jz 0x40c(%rip)
12ef7(9): test $0x10000,0x20(%rsp)
12f00(2): jz 0xb(%rip)
12f02(3): cmp %edx,%r8d
12f05(6): jb 0x3c4(%rip)
12f0b(3): test %r9,%r9
12f0e(2): jz 0x28(%rip)
12f10(4): mov 0x40(%r9),%rax
12f14(5): cmp 0x48(%rsp),%rax
12f19(4): mov 0x8(%r9),%rcx
12f1d(6): jz 0x416(%rip)
12f23(3): mov %edx,0x0(%rcx,%rax,4)
12f26(4): mov 0x10(%r9),%rcx
12f2a(4): lea 0x1(%rax),%rsi
12f2e(4): mov %rsi,0x40(%r9)
12f32(4): mov %r8d,0x0(%rcx,%rax,4)
12f36(2): xor %eax,%eax
12f38(5): mov $0x1,%edi
12f3d(2): cmp %eax,%edx
12f3f(2): mov %eax,%ecx
12f41(2): jnbe 0x18(%rip)
12f43(3): cmp %eax,%r8d
12f46(2): jb 0x13(%rip)
12f48(3): mov %rax,%rsi
12f4b(3): mov %rdi,%r11
12f4e(4): sar $0x6,%rsi
12f52(3): shl/sal %cl,%r11
12f55(4): or %r11,0x0(%r12,%rsi,8)
12f59(4): add $0x1,%rax
12f5d(6): cmp $0x100,%rax
12f63(2): jnz 0xffffffda(%rip)
12f65(5): mov 0x40(%rsp),%rax
12f6a(6): mov $0x0,(%rax)
12f70(5): jmp 0xfffffc80(%rip)
12f75(5): mov 0x18(%rsp),%rbx
12f7a(3): mov %rax,%rdx
12f7d(3): mov %r14,%rsi
12f80(4): mov %r8,(%rsp)
12f84(3): mov %rax,%r15
12f87(3): mov %rbx,%rdi
12f8a(5): call 0xffffe866(%rip)
12f8f(2): cwde 
12f91(4): add %rax,0x48(%r14)
12f95(5): mov 0x40(%rsp),%r9
12f9a(4): mov (%rsp),%r8
12f9e(3): mov %r15,%rcx
12fa1(3): mov %rbx,%rdx
12fa4(3): mov %rbp,%rsi
12fa7(3): mov %r14,%rdi
12faa(5): call 0xfffff006(%rip)
12faf(5): mov %rax,0x28(%rsp)
12fb4(5): jmp 0xfffff10c(%rip)
12fb9(5): mov 0x40(%rsp),%rax
12fbe(6): mov $0x2,(%rax)
12fc4(5): jmp 0xfffffc64(%rip)
12fc9(3): mov %r12,%rdi
12fcc(5): call 0xfffeea04(%rip)
12fd1(3): mov %r13,%rdi
12fd4(5): call 0xfffee9fc(%rip)
12fd9(5): jmp 0xfffffb3f(%rip)
12fde(5): mov 0x40(%rsp),%rax
12fe3(9): mov $0x0,0x28(%rsp)
12fec(6): mov $0x6,(%rax)
12ff2(5): jmp 0xfffff0ce(%rip)
12ff7(2): mov %ebx,%eax
12ff9(2): neg %eax
12ffb(2): cwde 
12ffd(4): add %rax,0x48(%r14)
13001(5): mov $0x1,0x8(%r15)
13006(7): mov 0xa0(%rsp),%eax
1300d(5): jmp 0xfffff8f8(%rip)
13012(4): add %rbx,0x48(%r14)
13016(5): cmp $0x0,0x57(%rsp)
1301b(2): jz 0x16(%rip)
1301d(5): lea 0x20(%r12),%rdx
13022(3): mov %r12,%rax
13025(3): not (%rax)
13028(4): add $0x8,%rax
1302c(3): cmp %rax,%rdx
1302f(2): jnz 0xfffffff6(%rip)
13031(5): mov 0x10(%rsp),%rax
13036(6): mov 0xb4(%rax),%edx
1303c(3): cmp $0x1,%edx
1303f(2): jle 0x1a(%rip)
13041(4): mov 0x78(%rax),%rcx
13045(2): xor %eax,%eax
13047(4): mov 0x0(%rcx,%rax,1),%rsi
1304b(4): and %rsi,0x0(%r12,%rax,1)
1304f(4): add $0x8,%rax
13053(4): cmp $0x20,%rax
13057(2): jnz 0xfffffff0(%rip)
13059(5): cmp $0x0,0x28(%r13)
1305e(6): jnz 0x8a(%rip)
13064(5): cmp $0x0,0x30(%r13)
13069(2): jnz 0x7f(%rip)
1306b(5): cmp $0x0,0x38(%r13)
13070(2): jnz 0x78(%rip)
13072(5): cmp $0x0,0x40(%r13)
13077(2): jnz 0x71(%rip)
13079(3): sub $0x1,%edx
1307c(2): jle 0x10(%rip)
1307e(5): cmp $0x0,0x48(%r13)
13083(2): jnz 0x65(%rip)
13085(5): test $0x1,0x20(%r13)
1308a(2): jnz 0x5e(%rip)
1308c(3): mov %r13,%rdi
1308f(5): call 0xffff5281(%rip)
13094(5): mov 0x10(%rsp),%rax
13099(8): lea 0xb0(%rsp),%r8
130a1(2): xor %ecx,%ecx
130a3(2): xor %edx,%edx
130a5(8): mov $0x3,0xb8(%rsp)
130ad(8): mov %r12,0xb0(%rsp)
130b5(7): lea 0x80(%rax),%rsi
130bc(4): lea 0x70(%rax),%rdi
130c0(5): call 0xffff67f0(%rip)
130c5(3): test %rax,%rax
130c8(5): mov %rax,0x28(%rsp)
130cd(6): jnz 0xfffff07f(%rip)
130d3(5): mov 0x40(%rsp),%rax
130d8(6): mov $0xc,(%rax)
130de(5): jmp 0xfffffb4a(%rip)
130e3(5): nop 0x0(%rax,%rax,1)
130e8(5): mov 0x10(%rsp),%rax
130ed(8): lea 0xb0(%rsp),%r15
130f5(2): xor %edx,%edx
130f7(2): xor %ecx,%ecx
130f9(3): mov %r15,%r8
130fc(7): or $0x2,0xb0(%rax)
13103(4): lea 0x70(%rax),%rbx
13107(7): lea 0x80(%rax),%rbp
1310e(8): mov $0x6,0xb8(%rsp)
13116(8): mov %r13,0xb0(%rsp)
1311e(3): mov %rbx,%rdi
13121(3): mov %rbp,%rsi
13124(5): call 0xffff678c(%rip)
13129(3): mov %rax,%rdi
1312c(5): mov %rax,0x28(%rsp)
13131(5): lea 0x20(%r12),%rdx
13136(3): test %rdi,%rdi
13139(3): mov %r12,%rax
1313c(2): jz 0xffffff97(%rip)
1313e(4): cmp $0x0,(%rax)
13142(6): jnz 0x2ab(%rip)
13148(4): add $0x8,%rax
1314c(3): cmp %rax,%rdx
1314f(2): jnz 0xffffffef(%rip)
13151(3): mov %r12,%rdi
13154(5): call 0xfffee87c(%rip)
13159(5): jmp 0xffffeff3(%rip)
1315e(5): mov 0x30(%rsp),%rdx
13163(5): lea 0x1(%rdx,%rdx,1),%rdi
13168(8): lea 0x0(,%rdi,4),%rsi
13170(5): mov %rdi,0x30(%rsp)
13175(3): mov %rax,%rdi
13178(5): call 0xfffeeb18(%rip)
1317d(3): test %rax,%rax
13180(6): jz 0xffffff53(%rip)
13186(4): mov %rax,0x0(%r13)
1318a(4): mov 0x28(%r13),%rdx
1318e(5): jmp 0xfffffadc(%rip)
13193(3): xor %r8d,%r8d
13196(3): test %r9,%r9
13199(2): jz 0x7b(%rip)
1319b(2): mov %edx,%edi
1319d(5): mov %r8d,0x78(%rsp)
131a2(5): mov %r9,0x70(%rsp)
131a7(5): call 0xfffeeb29(%rip)
131ac(2): mov %eax,%edx
131ae(7): mov 0xb0(%rsp),%eax
131b5(5): mov 0x70(%rsp),%r9
131ba(5): mov 0x78(%rsp),%r8d
131bf(3): cmp $0x3,%eax
131c2(6): jz 0xfffffd05(%rip)
131c8(2): test %eax,%eax
131ca(6): jz 0xfffffcfd(%rip)
131d0(8): mov 0xb8(%rsp),%r8d
131d8(5): jmp 0xfffffd0c(%rip)
131dd(4): cmp $0x3,%r10d
131e1(6): jz 0x291(%rip)
131e7(2): test %esi,%esi
131e9(2): jz 0xffffffaa(%rip)
131eb(3): test %r11b,%r11b
131ee(2): jnz 0xffffffa5(%rip)
131f0(7): mov 0xa8(%rsp),%edx
131f7(2): jmp 0xffffffd9(%rip)
131f9(2): xor %edx,%edx
131fb(3): cmp $0x3,%esi
131fe(6): jnz 0xfffffc9a(%rip)
13204(8): mov 0xa8(%rsp),%rax
1320c(3): movzx (%rax),%edx
1320f(5): jmp 0xfffffc89(%rip)
13214(3): test %r10d,%r10d
13217(6): jz 0xfffffce0(%rip)
1321d(4): cmp $0x3,%r10d
13221(2): jnz 0xffffffaf(%rip)
13223(5): jmp 0xfffffcd4(%rip)
13228(5): mov $0x80,%ebx
1322d(6): mov $0x2,%r12d
13233(5): call 0xfffeeb8d(%rip)
13238(3): movsxd %ebx,%rdx
1323b(3): movsxd %r12d,%r9
1323e(6): mov $0x1,%r8d
13244(3): add %rdx,%rdx
13247(3): add (%rax),%rdx
1324a(5): mov 0x10(%rsp),%rax
1324f(4): lea 0x0(%rax,%r9,8),%rdi
13253(2): xor %eax,%eax
13255(2): jmp 0x1d(%rip)
13257(9): nop 0x0(%rax,%rax,1)
13260(3): lea 0x0(%rbx,%rax,1),%esi
13263(3): cmp $0x5f,%esi
13266(2): jz 0x14(%rip)
13268(4): add $0x1,%rax
1326c(4): cmp $0x40,%rax
13270(2): jz 0x19(%rip)
13272(4): test $0x8,0x0(%rdx,%rax,2)
13276(2): mov %eax,%ecx
13278(2): jz 0xffffffe8(%rip)
1327a(3): mov %r8,%rsi
1327d(3): shl/sal %cl,%rsi
13280(7): or %rsi,0xb8(%rdi)
13287(2): jmp 0xffffffe1(%rip)
13289(4): add $0x1,%r9
1328d(3): add $0x40,%ebx
13290(4): sub $0xffffff80,%rdx
13294(4): add $0x8,%rdi
13298(4): cmp $0x3,%r9d
1329c(2): jle 0xffffffb7(%rip)
1329e(5): jmp 0xfffff443(%rip)
132a3(2): xor %ebx,%ebx
132a5(3): xor %r12d,%r12d
132a8(2): jmp 0xffffff8b(%rip)
132aa(7): lea 0x3dbf(%rip),%rcx
132b1(7): lea 0x37e8(%rip),%rsi
132b8(7): lea 0x2cce(%rip),%rdi
132bf(5): mov $0xced,%edx
132c4(5): call 0xfffee88c(%rip)
132c9(5): mov 0x40(%rsp),%rax
132ce(6): mov $0xb,(%rax)
132d4(5): jmp 0xfffff954(%rip)
132d9(8): mov 0xb8(%rsp),%rdi
132e1(2): xor %eax,%eax
132e3(4): or $0xffffffff,%rcx
132e7(2): REPNZ scasb rdi(%es,10),%al
132e9(3): mov %rcx,%rax
132ec(3): not %rax
132ef(4): sub $0x1,%rax
132f3(4): cmp $0x1,%rax
132f7(6): jbe 0xfffffb91(%rip)
132fd(5): mov 0x40(%rsp),%rax
13302(6): mov $0x3,(%rax)
13308(5): jmp 0xfffff920(%rip)
1330d(8): mov 0xa8(%rsp),%rdi
13315(2): xor %eax,%eax
13317(4): or $0xffffffff,%rcx
1331b(2): REPNZ scasb rdi(%es,10),%al
1331d(3): mov %rcx,%rax
13320(3): not %rax
13323(4): sub $0x1,%rax
13327(4): cmp $0x1,%rax
1332b(6): jbe 0xfffffb53(%rip)
13331(2): jmp 0xffffffcc(%rip)
13333(5): mov 0x48(%rsp),%rax
13338(3): mov %rcx,%rdi
1333b(8): mov %r8d,0x8c(%rsp)
13343(7): mov %edx,0x88(%rsp)
1334a(5): mov %r9,0x70(%rsp)
1334f(3): add %rax,%rax
13352(4): add $0x1,%rax
13356(8): lea 0x0(,%rax,4),%r10
1335e(5): mov %rax,0x48(%rsp)
13363(3): mov %r10,%rsi
13366(8): mov %r10,0x80(%rsp)
1336e(5): call 0xfffee922(%rip)
13373(5): mov 0x70(%rsp),%r9
13378(8): mov 0x80(%rsp),%r10
13380(5): mov %rax,0x78(%rsp)
13385(4): mov 0x10(%r9),%rdi
13389(3): mov %r10,%rsi
1338c(5): call 0xfffee904(%rip)
13391(5): mov 0x78(%rsp),%rcx
13396(3): test %rcx,%rcx
13399(2): jz 0x2c(%rip)
1339b(3): test %rax,%rax
1339e(5): mov 0x70(%rsp),%r9
133a3(7): mov 0x88(%rsp),%edx
133aa(8): mov 0x8c(%rsp),%r8d
133b2(2): jz 0x13(%rip)
133b4(4): mov %rax,0x10(%r9)
133b8(4): mov %rcx,0x8(%r9)
133bc(4): mov 0x40(%r9),%rax
133c0(5): jmp 0xfffffb63(%rip)
133c5(3): mov %rcx,%rdi
133c8(4): mov %rax,(%rsp)
133cc(5): call 0xfffee604(%rip)
133d1(4): mov (%rsp),%rax
133d5(3): mov %rax,%rdi
133d8(5): call 0xfffee5f8(%rip)
133dd(5): mov 0x40(%rsp),%rax
133e2(6): mov $0xc,(%rax)
133e8(5): jmp 0xfffff840(%rip)
133ed(2): xor %ecx,%ecx
133ef(2): xor %edx,%edx
133f1(3): mov %r15,%r8
133f4(3): mov %rbp,%rsi
133f7(3): mov %rbx,%rdi
133fa(8): mov $0x3,0xb8(%rsp)
13402(8): mov %r12,0xb0(%rsp)
1340a(5): call 0xffff64a6(%rip)
1340f(3): test %rax,%rax
13412(6): jz 0xfffffcc1(%rip)
13418(5): mov 0x28(%rsp),%rcx
1341d(8): lea 0xc0(%rsp),%r8
13425(3): mov %rax,%rdx
13428(3): mov %rbp,%rsi
1342b(3): mov %rbx,%rdi
1342e(8): mov $0xa,0xc8(%rsp)
13436(5): call 0xffff647a(%rip)
1343b(3): test %rax,%rax
1343e(5): mov %rax,0x28(%rsp)
13443(6): jnz 0xffffed09(%rip)
13449(5): jmp 0xfffffc8a(%rip)
1344e(5): call 0xfffee682(%rip)
13453(5): mov 0x18(%rsp),%rax
13458(4): cmp $0x2,0x8(%rax)
1345c(6): jnz 0xfffff1f4(%rip)
13462(5): mov 0x40(%rsp),%rax
13467(6): mov $0x9,(%rax)
1346d(5): jmp 0xfffff1ee(%rip)
13472(8): mov 0xb8(%rsp),%rax
1347a(4): movzx (%rax),%r8d
1347e(5): jmp 0xfffffa2c(%rip)

"parse_branch" :
13490(2): push %r15
13492(2): push %r14
13494(3): mov %rcx,%r15
13497(2): push %r13
13499(2): push %r12
1349b(3): mov %rsi,%r13
1349e(1): push %rbp
1349f(1): push %rbx
134a0(3): mov %r9,%rbx
134a3(3): mov %rdx,%rbp
134a6(3): mov %r8,%r12
134a9(4): sub $0x48,%rsp
134ad(9): mov $0x28,%rax
134b6(5): mov %rax,0x38(%rsp)
134bb(2): xor %eax,%eax
134bd(3): mov (%rsi),%rax
134c0(4): mov %rdi,(%rsp)
134c4(5): mov %rax,0x10(%rsp)
134c9(5): call 0xffffeae7(%rip)
134ce(2): mov (%rbx),%edx
134d0(3): mov %rax,%r14
134d3(2): test %edx,%edx
134d5(2): jz 0xb(%rip)
134d7(3): test %rax,%rax
134da(6): jz 0x100(%rip)
134e0(5): lea 0x20(%rsp),%rax
134e5(5): mov %rax,0x18(%rsp)
134ea(6): nop 0x0(%rax,%rax,1)
134f0(4): movzx 0x8(%rbp),%eax
134f4(2): mov %eax,%edx
134f6(3): and $0xf7,%edx
134f9(3): cmp $0x2,%dl
134fc(6): jz 0x94(%rip)
13502(2): cmp $0x9,%al
13504(2): jnz 0xb(%rip)
13506(3): test %r12,%r12
13509(6): jnz 0x87(%rip)
1350f(4): mov (%rsp),%rdi
13513(3): mov %rbx,%r9
13516(3): mov %r12,%r8
13519(3): mov %r15,%rcx
1351c(3): mov %rbp,%rdx
1351f(3): mov %r13,%rsi
13522(5): call 0xffffea8e(%rip)
13527(3): mov %rax,%r9
1352a(2): mov (%rbx),%eax
1352c(2): test %eax,%eax
1352e(2): jz 0xb(%rip)
13530(3): test %r9,%r9
13533(6): jz 0x91(%rip)
13539(3): test %r14,%r14
1353c(2): jz 0x7c(%rip)
1353e(3): test %r9,%r9
13541(2): jz 0x77(%rip)
13543(5): mov 0x10(%rsp),%rax
13548(5): mov 0x18(%rsp),%r8
1354d(3): mov %r9,%rcx
13550(3): mov %r14,%rdx
13553(5): mov %r9,0x8(%rsp)
13558(5): mov $0x10,0x28(%rsp)
1355d(7): lea 0x80(%rax),%rsi
13564(4): lea 0x70(%rax),%rdi
13568(5): call 0xffff6348(%rip)
1356d(3): test %rax,%rax
13570(5): mov 0x8(%rsp),%r9
13575(2): jz 0x6b(%rip)
13577(3): mov %rax,%r14
1357a(4): movzx 0x8(%rbp),%eax
1357e(2): mov %eax,%edx
13580(3): and $0xf7,%edx
13583(3): cmp $0x2,%dl
13586(6): jnz 0xffffff7c(%rip)
1358c(4): nop 0x0(%rax)
13590(5): mov 0x38(%rsp),%rcx
13595(9): xor $0x28,%rcx
1359e(3): mov %r14,%rax
135a1(2): jnz 0x6c(%rip)
135a3(4): add $0x48,%rsp
135a7(1): pop %rbx
135a8(1): pop %rbp
135a9(2): pop %r12
135ab(2): pop %r13
135ad(2): pop %r14
135af(2): pop %r15
135b1(1): ret near (%rsp)
135b2(6): nop 0x0(%rax,%rax,1)
135b8(3): test %r14,%r14
135bb(4): cmove %r9,%r14
135bf(5): jmp 0xffffff31(%rip)
135c4(3): test %r14,%r14
135c7(2): jz 0x13(%rip)
135c9(7): lea 0xffff4da0(%rip),%rsi
135d0(2): xor %edx,%edx
135d2(3): mov %r14,%rdi
135d5(5): call 0xffff3efb(%rip)
135da(3): xor %r14d,%r14d
135dd(2): jmp 0xffffffb3(%rip)
135df(1): nop 
135e0(7): lea 0xffff4d89(%rip),%rsi
135e7(3): mov %r9,%rdi
135ea(2): xor %edx,%edx
135ec(5): call 0xffff3ee4(%rip)
135f1(7): lea 0xffff4d78(%rip),%rsi
135f8(3): mov %r14,%rdi
135fb(2): xor %edx,%edx
135fd(3): xor %r14d,%r14d
13600(5): call 0xffff3ed0(%rip)
13605(6): mov $0xc,(%rbx)
1360b(2): jmp 0xffffff85(%rip)
1360d(5): call 0xfffee4c3(%rip)

"parse_reg_exp" :
13620(2): push %r15
13622(2): push %r14
13624(3): mov %rcx,%r14
13627(2): push %r13
13629(2): push %r12
1362b(3): mov %r9,%r13
1362e(1): push %rbp
1362f(1): push %rbx
13630(3): mov %rdx,%rbp
13633(3): mov %rdi,%r12
13636(4): sub $0x58,%rsp
1363a(3): mov (%rsi),%rbx
1363d(9): mov $0x28,%rax
13646(5): mov %rax,0x48(%rsp)
1364b(2): xor %eax,%eax
1364d(5): mov %rsi,0x28(%rsp)
13652(5): mov %r8,0x10(%rsp)
13657(7): mov 0xa8(%rbx),%rax
1365e(5): mov %rax,0x20(%rsp)
13663(5): call 0xfffffe2d(%rip)
13668(4): mov 0x0(%r13),%edx
1366c(3): mov %rax,%r15
1366f(2): test %edx,%edx
13671(2): jz 0xb(%rip)
13673(3): test %rax,%rax
13676(6): jz 0xec(%rip)
1367c(5): lea 0x30(%rsp),%rax
13681(5): mov %rax,0x8(%rsp)
13686(5): jmp 0x8e(%rip)
1368b(5): nop 0x0(%rax,%rax,1)
13690(2): cmp $0x9,%al
13692(2): jnz 0xe(%rip)
13694(6): cmp $0x0,0x10(%rsp)
1369a(6): jnz 0xae(%rip)
136a0(7): mov 0xa8(%rbx),%rax
136a7(5): mov 0x10(%rsp),%r8
136ac(3): mov %r14,%rcx
136af(5): mov 0x28(%rsp),%rsi
136b4(3): mov %r13,%r9
136b7(3): mov %rbp,%rdx
136ba(3): mov %r12,%rdi
136bd(5): mov %rax,0x18(%rsp)
136c2(5): mov 0x20(%rsp),%rax
136c7(7): mov %rax,0xa8(%rbx)
136ce(5): call 0xfffffdc2(%rip)
136d3(3): mov %rax,%rcx
136d6(4): mov 0x0(%r13),%eax
136da(2): test %eax,%eax
136dc(2): jz 0x7(%rip)
136de(3): test %rcx,%rcx
136e1(2): jz 0x6b(%rip)
136e3(5): mov 0x18(%rsp),%rax
136e8(7): or %rax,0xa8(%rbx)
136ef(5): mov 0x8(%rsp),%r8
136f4(7): lea 0x80(%rbx),%rsi
136fb(4): lea 0x70(%rbx),%rdi
136ff(3): mov %r15,%rdx
13702(5): mov $0xa,0x38(%rsp)
13707(5): call 0xffff61a9(%rip)
1370c(3): test %rax,%rax
1370f(3): mov %rax,%r15
13712(2): jz 0x7e(%rip)
13714(4): cmp $0xa,0x8(%rbp)
13718(2): jnz 0x50(%rip)
1371a(3): mov %r14,%rdx
1371d(3): mov %r12,%rsi
13720(3): mov %rbp,%rdi
13723(7): or $0x800000,%rdx
1372a(5): call 0xffffe0c6(%rip)
1372f(2): cwde 
13731(5): add %rax,0x48(%r12)
13736(4): movzx 0x8(%rbp),%eax
1373a(2): mov %eax,%edx
1373c(3): and $0xf7,%edx
1373f(3): cmp $0x2,%dl
13742(6): jnz 0xffffff4e(%rip)
13748(2): xor %ecx,%ecx
1374a(2): jmp 0xffffffa5(%rip)
1374c(3): test %r15,%r15
1374f(2): jz 0x13(%rip)
13751(7): lea 0xffff4c18(%rip),%rsi
13758(2): xor %edx,%edx
1375a(3): mov %r15,%rdi
1375d(5): call 0xffff3d73(%rip)
13762(3): xor %r15d,%r15d
13765(3): nop (%rax)
13768(5): mov 0x48(%rsp),%rcx
1376d(9): xor $0x28,%rcx
13776(3): mov %r15,%rax
13779(2): jnz 0x21(%rip)
1377b(4): add $0x58,%rsp
1377f(1): pop %rbx
13780(1): pop %rbp
13781(2): pop %r12
13783(2): pop %r13
13785(2): pop %r14
13787(2): pop %r15
13789(1): ret near (%rsp)
1378a(6): nop 0x0(%rax,%rax,1)
13790(8): mov $0xc,0x0(%r13)
13798(2): jmp 0xffffffd0(%rip)
1379a(5): call 0xfffee336(%rip)

"re_compile_internal" :
137a0(2): push %r15
137a2(2): push %r14
137a4(2): push %r13
137a6(2): push %r12
137a8(1): push %rbp
137a9(1): push %rbx
137aa(7): sub $0x128,%rsp
137b1(4): mov %rcx,0x18(%rdi)
137b5(8): mov $0x0,0x10(%rdi)
137bd(9): mov $0x28,%rax
137c6(8): mov %rax,0x118(%rsp)
137ce(2): xor %eax,%eax
137d0(4): movzx 0x38(%rdi),%eax
137d4(5): mov %rdi,0x8(%rsp)
137d9(5): mov %rsi,0x10(%rsp)
137de(4): mov %rdx,(%rsp)
137e2(5): mov %rcx,0x18(%rsp)
137e7(8): mov $0x0,0x4c(%rsp)
137ef(8): mov $0x0,0x30(%rdi)
137f7(3): mov (%rdi),%rbx
137fa(4): mov %al,0x20(%rsp)
137fe(3): and $0x90,%eax
13801(8): cmp $0xe7,0x8(%rdi)
13809(3): mov %al,0x38(%rdi)
1380c(6): jbe 0xdfa(%rip)
13812(4): lea 0x8(%rbx),%rdi
13816(5): mov 0x8(%rsp),%rax
1381b(3): mov %rbx,%rcx
1381e(4): and $0xfffffff8,%rdi
13822(3): sub %rdi,%rcx
13825(8): mov $0xe8,0x10(%rax)
1382d(2): xor %eax,%eax
1382f(6): add $0xe8,%ecx
13835(7): mov $0x0,(%rbx)
1383c(b): mov $0x0,0xe0(%rbx)
13847(3): shr $0x3,%ecx
1384a(3): REP stosd %rax,rdi(%es,10)
1384d(a): mov $0x384307168202282324,%rax
13857(a): mov $0xf,0x80(%rbx)
13861(4): cmp %rax,(%rsp)
13865(6): jnbe 0x641(%rip)
1386b(4): mov (%rsp),%r14
1386f(4): lea 0x1(%r14),%rax
13873(3): mov %rax,%rdi
13876(4): mov %rax,0x8(%rbx)
1387a(5): mov %rax,0x28(%rsp)
1387f(4): shl/sal $0x4,%rdi
13883(5): call 0xfffee39d(%rip)
13888(3): test %r14,%r14
1388b(3): mov %rax,(%rbx)
1388e(6): jz 0xce7(%rip)
13894(5): mov $0x1,%esi
13899(7): nop 0x0(%rax)
138a0(3): add %rsi,%rsi
138a3(4): cmp %rsi,(%rsp)
138a7(2): jnb 0xfffffff9(%rip)
138a9(4): lea 0xffffffff(%rsi),%rbp
138ad(5): mov $0x18,%edi
138b2(5): call 0xfffee30e(%rip)
138b7(7): mov %rbp,0x88(%rbx)
138be(4): mov %rax,0x40(%rbx)
138c2(5): call 0xfffee1de(%rip)
138c7(5): mov $0xe,%edi
138cc(6): mov %eax,0xb4(%rbx)
138d2(5): call 0xfffee38e(%rip)
138d7(3): movzx (%rax),%edx
138da(3): and $0xdf,%edx
138dd(3): cmp $0x55,%dl
138e0(2): jnz 0x50(%rip)
138e2(4): movzx 0x1(%rax),%edx
138e6(3): and $0xdf,%edx
138e9(3): cmp $0x54,%dl
138ec(2): jnz 0x44(%rip)
138ee(4): movzx 0x2(%rax),%edx
138f2(3): and $0xdf,%edx
138f5(3): cmp $0x46,%dl
138f8(2): jnz 0x38(%rip)
138fa(2): xor %edx,%edx
138fc(4): cmp $0x2d,0x3(%rax)
13900(7): lea 0x323f(%rip),%rdi
13907(5): mov $0x2,%ecx
1390c(3): setz %dl
1390f(5): lea 0x3(%rax,%rdx,1),%rsi
13914(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
13916(3): setnbe %al
13919(2): sbb $0x0,%al
1391b(2): test %al,%al
1391d(2): jnz 0x13(%rip)
1391f(7): or $0x4,0xb0(%rbx)
13926(a): nop 0x0(%rax,%rax,1)
13930(7): movzx 0xb0(%rbx),%eax
13937(2): mov %eax,%edx
13939(3): and $0xf7,%edx
1393c(7): cmp $0x1,0xb4(%rbx)
13943(6): mov %dl,0xb0(%rbx)
13949(2): jle 0x15(%rip)
1394b(2): test $0x4,%al
1394d(6): jz 0x566(%rip)
13953(7): lea 0x3746(%rip),%rax
1395a(4): mov %rax,0x78(%rbx)
1395e(4): cmp $0x0,(%rbx)
13962(6): jz 0x544(%rip)
13968(5): cmp $0x0,0x40(%rbx)
1396d(6): jz 0x539(%rip)
13973(5): mov 0x18(%rsp),%rax
13978(8): lea 0x80(%rsp),%rbp
13980(5): mov $0x12,%ecx
13985(8): mov $0x0,0x4c(%rsp)
1398d(4): lea 0x8(%rbp),%r8
13991(5): and $0x400000,%eax
13996(5): mov %rax,0x20(%rsp)
1399b(5): mov 0x8(%rsp),%rax
139a0(3): setnz %dl
139a3(3): mov %r8,%rdi
139a6(4): mov 0x28(%rax),%rsi
139aa(2): xor %eax,%eax
139ac(3): REP stosd %rax,rdi(%es,10)
139af(5): mov 0x10(%rsp),%rax
139b4(4): mov (%rsp),%rdi
139b8(3): test %rsi,%rsi
139bb(7): mov %dl,0x108(%rsp)
139c2(6): mov 0xb4(%rbx),%ecx
139c8(4): setnz %r12b
139cc(8): mov %rsi,0xf8(%rsp)
139d4(8): mov %rax,0x80(%rsp)
139dc(7): movzx 0xb0(%rbx),%eax
139e3(3): or %edx,%r12d
139e6(8): mov %rdi,0xd8(%rsp)
139ee(8): mov %rdi,0xd0(%rsp)
139f6(3): mov %r12d,%esi
139f9(8): mov %r12b,0x10b(%rsp)
13a01(7): mov %ecx,0x110(%rsp)
13a08(8): mov %rdi,0xe8(%rsp)
13a10(8): mov %rdi,0xe0(%rsp)
13a18(2): mov %eax,%edx
13a1a(3): shr $0x3,%al
13a1d(3): shr $0x2,%dl
13a20(3): and $0x1,%eax
13a23(3): and $0x1,%edx
13a26(3): test %rdi,%rdi
13a29(7): mov %al,0x10a(%rsp)
13a30(7): mov %dl,0x109(%rsp)
13a37(6): jnz 0x43e(%rip)
13a3d(3): test %sil,%sil
13a40(2): jz 0xf(%rip)
13a42(8): mov 0x88(%rsp),%rax
13a4a(5): mov %rax,0x10(%rsp)
13a4f(6): cmp $0x0,0x20(%rsp)
13a55(5): mov 0x10(%rsp),%rax
13a5a(8): mov %rax,0x88(%rsp)
13a62(6): jz 0x103(%rip)
13a68(3): cmp $0x1,%ecx
13a6b(6): jle 0xbf2(%rip)
13a71(3): mov %rbp,%rdi
13a74(5): call 0xffff409c(%rip)
13a79(2): test %eax,%eax
13a7b(2): jnz 0x45(%rip)
13a7d(4): mov (%rsp),%rax
13a81(8): cmp 0xb8(%rsp),%rax
13a89(6): jle 0xbb7(%rip)
13a8f(7): movsxd 0xb4(%rbx),%rax
13a96(8): mov 0xc0(%rsp),%rsi
13a9e(8): add 0xb0(%rsp),%rax
13aa6(3): cmp %rax,%rsi
13aa9(6): jnle 0xb97(%rip)
13aaf(3): add %rsi,%rsi
13ab2(3): mov %rbp,%rdi
13ab5(5): call 0xffff3aeb(%rip)
13aba(2): test %eax,%eax
13abc(2): jz 0xffffffb5(%rip)
13abe(2): nop 
13ac0(4): mov %eax,0x4c(%rsp)
13ac4(5): mov 0x8(%rsp),%rax
13ac9(3): mov (%rax),%r13
13acc(4): mov 0x70(%r13),%rdi
13ad0(3): test %rdi,%rdi
13ad3(2): jz 0x15(%rip)
13ad5(3): nop (%rax)
13ad8(3): mov (%rdi),%r12
13adb(5): call 0xfffedef5(%rip)
13ae0(3): test %r12,%r12
13ae3(3): mov %r12,%rdi
13ae6(2): jnz 0xfffffff2(%rip)
13ae8(4): mov 0x20(%r13),%rdi
13aec(8): mov $0x0,0x70(%r13)
13af4(b): mov $0xf,0x80(%r13)
13aff(8): mov $0x0,0x68(%r13)
13b07(5): call 0xfffedec9(%rip)
13b0c(8): mov $0x0,0x20(%r13)
13b14(3): mov %rbp,%rdi
13b17(5): call 0xffff4dc9(%rip)
13b1c(3): mov %rbx,%rdi
13b1f(5): call 0xffff4e01(%rip)
13b24(5): mov 0x8(%rsp),%rax
13b29(7): mov $0x0,(%rax)
13b30(8): mov $0x0,0x8(%rax)
13b38(4): mov 0x4c(%rsp),%eax
13b3c(8): mov 0x118(%rsp),%rbx
13b44(9): xor $0x28,%rbx
13b4d(6): jnz 0xd43(%rip)
13b53(7): add $0x128,%rsp
13b5a(1): pop %rbx
13b5b(1): pop %rbp
13b5c(2): pop %r12
13b5e(2): pop %r13
13b60(2): pop %r14
13b62(2): pop %r15
13b64(1): ret near (%rsp)
13b65(3): cmp $0x1,%ecx
13b68(6): jnle 0x9b2(%rip)
13b6e(3): test %r12b,%r12b
13b71(8): mov 0xc0(%rsp),%rsi
13b79(6): jz 0x61b(%rip)
13b7f(8): cmp %rsi,0xd8(%rsp)
13b87(8): mov 0xb0(%rsp),%rax
13b8f(9): cmovng 0xd8(%rsp),%rsi
13b98(3): cmp %rax,%rsi
13b9b(2): jnle 0x12(%rip)
13b9d(2): jmp 0x43(%rip)
13b9f(1): nop 
13ba0(8): mov 0x88(%rsp),%rdx
13ba8(5): mov %rdx,0x10(%rsp)
13bad(8): mov 0x80(%rsp),%rdx
13bb5(8): mov 0xf8(%rsp),%rcx
13bbd(3): add %rax,%rdx
13bc0(8): add 0xa8(%rsp),%rdx
13bc8(3): movzx (%rdx),%edx
13bcb(4): movzx 0x0(%rcx,%rdx,1),%edx
13bcf(5): mov 0x10(%rsp),%rcx
13bd4(3): mov %dl,0x0(%rcx,%rax,1)
13bd7(4): add $0x1,%rax
13bdb(3): cmp %rax,%rsi
13bde(2): jnz 0xffffffc2(%rip)
13be0(8): mov %rax,0xb0(%rsp)
13be8(8): mov %rax,0xb8(%rsp)
13bf0(8): mov $0x0,0x4c(%rsp)
13bf8(5): mov 0x8(%rsp),%r12
13bfd(5): mov 0x18(%rsp),%r14
13c02(5): lea 0x50(%rsp),%r13
13c07(3): mov %rbp,%rsi
13c0a(3): mov %r13,%rdi
13c0d(5): mov %r13,0x28(%rsp)
13c12(4): mov (%r12),%r15
13c16(3): mov %r14,%rdx
13c19(9): mov $0x0,0x30(%r12)
13c22(7): or $0x800000,%rdx
13c29(7): mov %r14,0xd8(%r15)
13c30(5): call 0xffffdbc0(%rip)
13c35(5): lea 0x4c(%rsp),%r9
13c3a(3): xor %r8d,%r8d
13c3d(3): mov %r14,%rcx
13c40(3): mov %r13,%rdx
13c43(3): mov %r12,%rsi
13c46(3): mov %rbp,%rdi
13c49(2): cwde 
13c4b(8): add %rax,0xc8(%rsp)
13c53(5): call 0xfffff9cd(%rip)
13c58(4): mov 0x4c(%rsp),%ecx
13c5c(2): test %ecx,%ecx
13c5e(6): jnz 0xa29(%rip)
13c64(4): lea 0x70(%r15),%r13
13c68(5): lea 0x60(%rsp),%r12
13c6d(4): sub $0xffffff80,%r15
13c71(2): xor %edx,%edx
13c73(2): xor %ecx,%ecx
13c75(3): mov %r15,%rsi
13c78(3): mov %r12,%r8
13c7b(3): mov %r13,%rdi
13c7e(4): mov %rax,(%rsp)
13c82(5): mov $0x2,0x68(%rsp)
13c87(5): call 0xffff5c29(%rip)
13c8c(4): mov (%rsp),%r9
13c90(3): mov %rax,%r11
13c93(3): mov %rax,%rdx
13c96(3): test %r9,%r9
13c99(2): jz 0x29(%rip)
13c9b(3): mov %r11,%rcx
13c9e(3): mov %r9,%rdx
13ca1(3): mov %r12,%r8
13ca4(3): mov %r15,%rsi
13ca7(3): mov %r13,%rdi
13caa(4): mov %r11,(%rsp)
13cae(5): mov $0x10,0x68(%rsp)
13cb3(5): call 0xffff5bfd(%rip)
13cb8(4): mov (%rsp),%r11
13cbc(3): mov %r11,%rdx
13cbf(3): mov %rax,%r11
13cc2(3): test %rdx,%rdx
13cc5(5): mov 0x8(%rsp),%rcx
13cca(3): setz %dl
13ccd(3): test %r11,%r11
13cd0(3): setz %al
13cd3(2): or %al,%dl
13cd5(3): mov (%rcx),%r13
13cd8(6): jnz 0x99a(%rip)
13cde(4): mov 0x8(%r13),%r15
13ce2(4): mov %r11,0x68(%rbx)
13ce6(8): lea 0x0(,%r15,8),%rcx
13cee(4): lea 0x0(%r15,%r15,2),%r15
13cf2(3): mov %rcx,%rdi
13cf5(4): mov %rcx,(%rsp)
13cf9(4): shl/sal $0x3,%r15
13cfd(5): call 0xfffedf23(%rip)
13d02(4): mov (%rsp),%rcx
13d06(4): mov %rax,0x18(%r13)
13d0a(5): mov %rax,0x18(%rsp)
13d0f(3): mov %rcx,%rdi
13d12(5): call 0xfffedf0e(%rip)
13d17(3): mov %r15,%rdi
13d1a(4): mov %rax,0x20(%r13)
13d1e(5): mov %rax,0x10(%rsp)
13d23(5): call 0xfffedefd(%rip)
13d28(3): mov %r15,%rdi
13d2b(4): mov %rax,0x28(%r13)
13d2f(4): mov %rax,(%rsp)
13d33(5): call 0xfffedeed(%rip)
13d38(5): mov 0x18(%rsp),%rdx
13d3d(4): mov %rax,0x30(%r13)
13d41(4): mov (%rsp),%rsi
13d45(5): mov 0x10(%rsp),%rcx
13d4a(3): test %rdx,%rdx
13d4d(6): jz 0x7c0(%rip)
13d53(3): test %rcx,%rcx
13d56(6): jz 0x7b7(%rip)
13d5c(3): test %rsi,%rsi
13d5f(6): jz 0x7ae(%rip)
13d65(3): test %rax,%rax
13d68(6): jz 0x7a5(%rip)
13d6e(5): mov 0x8(%rsp),%rax
13d73(4): mov 0x30(%rax),%r15
13d77(8): lea 0x0(,%r15,8),%rdi
13d7f(5): call 0xfffedea1(%rip)
13d84(3): test %rax,%rax
13d87(7): mov %rax,0xe0(%r13)
13d8e(2): jz 0x6f(%rip)
13d90(3): test %r15,%r15
13d93(2): jz 0x1a(%rip)
13d95(2): xor %edx,%edx
13d97(9): nop 0x0(%rax,%rax,1)
13da0(4): mov %rdx,0x0(%rax,%rdx,8)
13da4(4): add $0x1,%rdx
13da8(3): cmp %r15,%rdx
13dab(2): jnz 0xfffffff5(%rip)
13dad(4): mov 0x68(%r13),%rdi
13db1(7): lea 0xffff4ff8(%rip),%rsi
13db8(3): mov %r13,%rdx
13dbb(5): call 0xffff3785(%rip)
13dc0(5): mov 0x8(%rsp),%rax
13dc5(7): mov 0xe0(%r13),%rdi
13dcc(4): mov 0x30(%rax),%rdx
13dd0(3): test %rdx,%rdx
13dd3(6): jz 0x8f1(%rip)
13dd9(3): mov (%rdi),%rax
13ddc(3): test %rax,%rax
13ddf(2): jz 0xf(%rip)
13de1(2): jmp 0x1c(%rip)
13de3(5): nop 0x0(%rax,%rax,1)
13de8(4): cmp %rax,0x0(%rdi,%rax,8)
13dec(2): jnz 0x11(%rip)
13dee(4): add $0x1,%rax
13df2(3): cmp %rax,%rdx
13df5(2): jnbe 0xfffffff3(%rip)
13df7(6): jz 0x8cd(%rip)
13dfd(4): mov 0x68(%r13),%rdi
13e01(5): mov 0x8(%rsp),%rdx
13e06(7): lea 0xffff5ea3(%rip),%rsi
13e0d(5): call 0xffff36c3(%rip)
13e12(2): test %eax,%eax
13e14(6): jnz 0xfffffcac(%rip)
13e1a(4): mov 0x68(%r13),%rdi
13e1e(7): lea 0xffff83fb(%rip),%rsi
13e25(3): mov %r13,%rdx
13e28(5): call 0xffff36a8(%rip)
13e2d(2): test %eax,%eax
13e2f(6): jnz 0xfffffc91(%rip)
13e35(4): mov 0x68(%r13),%rdi
13e39(7): lea 0xffff5000(%rip),%rsi
13e40(3): mov %r13,%rdx
13e43(5): call 0xffff36fd(%rip)
13e48(4): mov 0x68(%r13),%rdx
13e4c(7): lea 0x3155(%rip),%rsi
13e53(5): nop 0x0(%rax,%rax,1)
13e58(4): movzx 0x30(%rdx),%ecx
13e5c(4): mov 0x38(%rdx),%rdi
13e60(3): cmp $0x10,%cl
13e63(6): jnbe 0xd5(%rip)
13e69(3): movzx %cl,%eax
13e6c(4): movsxd 0x0(%rsi,%rax,4),%rax
13e70(3): add %rsi,%rax
13e73(2): jmp %rax
13e75(5): mov 0x28(%rsp),%rsi
13e7a(3): mov %rbp,%rdi
13e7d(5): call 0xffff3723(%rip)
13e82(2): test %eax,%eax
13e84(6): jnz 0xfffffc3c(%rip)
13e8a(8): movzx 0x10b(%rsp),%esi
13e92(6): mov 0xb4(%rbx),%ecx
13e98(3): test %sil,%sil
13e9b(6): jz 0xfffffbb4(%rip)
13ea1(5): jmp 0xfffffba1(%rip)
13ea6(8): mov $0xc,0x4c(%rsp)
13eae(5): jmp 0xfffffc6e(%rip)
13eb3(5): mov $0x1,%esi
13eb8(5): mov $0x20,%edi
13ebd(5): call 0xfffedd03(%rip)
13ec2(3): test %rax,%rax
13ec5(4): mov %rax,0x78(%rbx)
13ec9(2): jz 0xffffffdd(%rip)
13ecb(3): xor %r12d,%r12d
13ece(2): xor %ebp,%ebp
13ed0(6): mov $0x1,%r13d
13ed6(3): xor %r15d,%r15d
13ed9(7): nop 0x0(%rax)
13ee0(5): lea 0x0(%rbp,%r15,1),%r14d
13ee5(3): mov %r14d,%edi
13ee8(5): call 0xfffedde8(%rip)
13eed(3): cmp $0xff,%eax
13ef0(2): jz 0x15(%rip)
13ef2(4): mov 0x78(%rbx),%rsi
13ef6(3): mov %r13,%rdi
13ef9(3): mov %r15d,%ecx
13efc(3): shl/sal %cl,%rdi
13eff(3): add %r12,%rsi
13f02(3): or %rdi,(%rsi)
13f05(7): test $0xffffff80,%r14d
13f0c(2): jnz 0xe(%rip)
13f0e(3): cmp %r14d,%eax
13f11(2): jz 0x9(%rip)
13f13(7): or $0x8,0xb0(%rbx)
13f1a(4): add $0x1,%r15
13f1e(4): cmp $0x40,%r15
13f22(2): jnz 0xffffffbe(%rip)
13f24(3): add $0x40,%ebp
13f27(4): add $0x8,%r12
13f2b(6): cmp $0x100,%ebp
13f31(2): jnz 0xffffffa5(%rip)
13f33(5): jmp 0xfffffa2b(%rip)
13f38(3): and $0x8,%ecx
13f3b(6): jnz 0x917(%rip)
13f41(4): mov 0x20(%rdx),%rax
13f45(4): mov 0x38(%rax),%rcx
13f49(4): mov 0x18(%r13),%rax
13f4d(4): mov %rcx,0x0(%rax,%rdi,8)
13f51(4): mov 0x8(%rdx),%r15
13f55(2): xor %edi,%edi
13f57(3): test %r15,%r15
13f5a(2): jz 0x11(%rip)
13f5c(3): mov %r15,%rdx
13f5f(5): jmp 0xfffffef9(%rip)
13f64(4): nop 0x0(%rax)
13f68(3): mov %rax,%rdx
13f6b(4): mov 0x10(%rdx),%r15
13f6f(3): test %r15,%r15
13f72(3): setz %cl
13f75(3): cmp %rdi,%r15
13f78(3): setz %al
13f7b(2): or %al,%cl
13f7d(4): mov %cl,0x10(%rsp)
13f81(2): jz 0xffffffdb(%rip)
13f83(3): mov (%rdx),%rax
13f86(3): mov %rdx,%rdi
13f89(3): test %rax,%rax
13f8c(2): jnz 0xffffffdc(%rip)
13f8e(3): xor %r14d,%r14d
13f91(3): xor %r15d,%r15d
13f94(4): nop 0x0(%rax)
13f98(4): mov 0x10(%r13),%rdx
13f9c(3): cmp %r15,%rdx
13f9f(2): jz 0x27(%rip)
13fa1(4): lea 0x0(%r15,%r15,2),%r10
13fa5(4): mov 0x30(%r13),%rax
13fa9(4): shl/sal $0x3,%r10
13fad(6): cmp $0x0,0x8(%rax,%r10,1)
13fb3(6): jz 0x205(%rip)
13fb9(4): mov 0x10(%r13),%rdx
13fbd(4): add $0x1,%r15
13fc1(3): cmp %r15,%rdx
13fc4(2): jnz 0xffffffdd(%rip)
13fc6(3): test %r14b,%r14b
13fc9(6): jz 0x245(%rip)
13fcf(3): xor %r14d,%r14d
13fd2(3): xor %r15d,%r15d
13fd5(2): jmp 0xffffffcc(%rip)
13fd7(8): or $0x1,0xb0(%r13)
13fdf(4): mov 0x8(%rdx),%r15
13fe3(3): test %r15,%r15
13fe6(6): jz 0x613(%rip)
13fec(4): mov 0x18(%r15),%rax
13ff0(4): mov 0x38(%rax),%rcx
13ff4(4): mov 0x10(%rdx),%rax
13ff8(3): test %rax,%rax
13ffb(6): jz 0x5f1(%rip)
14001(4): mov 0x18(%rax),%rax
14005(4): mov 0x38(%rax),%r9
14009(3): test %rcx,%rcx
1400c(6): js 0x865(%rip)
14012(3): test %r9,%r9
14015(6): js 0x81e(%rip)
1401b(4): mov 0x28(%r13),%rax
1401f(4): lea 0x0(%rdi,%rdi,2),%rdi
14023(5): mov %rsi,0x38(%rsp)
14028(5): mov %r9,0x30(%rsp)
1402d(5): mov %rcx,0x18(%rsp)
14032(5): mov %rdx,0x10(%rsp)
14037(4): lea 0x0(%rax,%rdi,8),%r10
1403b(5): mov $0x10,%edi
14040(7): mov $0x2,(%r10)
14047(4): mov %r10,(%rsp)
1404b(5): call 0xfffedbd5(%rip)
14050(4): mov (%rsp),%r10
14054(3): test %rax,%rax
14057(5): mov 0x10(%rsp),%rdx
1405c(5): mov 0x18(%rsp),%rcx
14061(5): mov 0x30(%rsp),%r9
14066(5): mov 0x38(%rsp),%rsi
1406b(4): mov %rax,0x10(%r10)
1406f(6): jz 0x29b(%rip)
14075(3): cmp %r9,%rcx
14078(6): jz 0x5d5(%rip)
1407e(8): mov $0x2,0x8(%r10)
14086(6): jl 0x5ae(%rip)
1408c(3): mov %r9,(%rax)
1408f(4): mov %rcx,0x8(%rax)
14093(5): jmp 0xfffffec2(%rip)
14098(4): mov 0x20(%rdx),%rax
1409c(4): lea 0x0(%rdi,%rdi,2),%rcx
140a0(5): mov $0x8,%edi
140a5(5): mov %rsi,0x10(%rsp)
140aa(4): mov %rdx,(%rsp)
140ae(4): mov 0x38(%rax),%r14
140b2(4): mov 0x28(%r13),%rax
140b6(4): lea 0x0(%rax,%rcx,8),%r15
140ba(7): mov $0x1,(%r15)
140c1(8): mov $0x1,0x8(%r15)
140c9(5): call 0xfffedb57(%rip)
140ce(3): test %rax,%rax
140d1(4): mov %rax,0x10(%r15)
140d5(4): mov (%rsp),%rdx
140d9(5): mov 0x10(%rsp),%rsi
140de(6): jz 0x6aa(%rip)
140e4(3): mov %r14,(%rax)
140e7(4): mov 0x8(%rdx),%r15
140eb(5): jmp 0xfffffe6a(%rip)
140f0(5): cmp $0x0,0x20(%rdx)
140f5(6): jz 0xfffffe5c(%rip)
140fb(7): lea 0x2f5e(%rip),%rcx
14102(7): lea 0x2997(%rip),%rsi
14109(7): lea 0x2a38(%rip),%rdi
14110(5): mov $0x59f,%edx
14115(5): call 0xfffeda3b(%rip)
1411a(6): nop 0x0(%rax,%rax,1)
14120(4): mov 0x20(%rdx),%rax
14124(4): mov 0x38(%rax),%r15
14128(4): mov 0x18(%r13),%rax
1412c(4): mov %r15,0x0(%rax,%rdi,8)
14130(4): cmp $0x4,0x30(%rdx)
14134(6): jnz 0xfffffe1d(%rip)
1413a(4): mov 0x28(%r13),%rax
1413e(4): lea 0x0(%rdi,%rdi,2),%rcx
14142(5): mov $0x8,%edi
14147(5): mov %rsi,0x18(%rsp)
1414c(5): mov %rdx,0x10(%rsp)
14151(4): lea 0x0(%rax,%rcx,8),%rcx
14155(7): mov $0x1,(%rcx)
1415c(8): mov $0x1,0x8(%rcx)
14164(4): mov %rcx,(%rsp)
14168(5): call 0xfffedab8(%rip)
1416d(4): mov (%rsp),%rcx
14171(3): test %rax,%rax
14174(5): mov 0x10(%rsp),%rdx
14179(5): mov 0x18(%rsp),%rsi
1417e(4): mov %rax,0x10(%rcx)
14182(6): jz 0x64e(%rip)
14188(3): mov %r15,(%rax)
1418b(4): mov 0x8(%rdx),%r15
1418f(5): jmp 0xfffffdc6(%rip)
14194(8): mov %rsi,0xb0(%rsp)
1419c(8): mov %rsi,0xb8(%rsp)
141a4(8): mov $0x0,0x4c(%rsp)
141ac(5): jmp 0xfffffa4c(%rip)
141b1(7): nop 0x0(%rax)
141b8(5): mov $0x1,%ecx
141bd(3): mov %r15,%rdx
141c0(3): mov %r13,%rsi
141c3(3): mov %r12,%rdi
141c6(4): mov %r10,(%rsp)
141ca(5): call 0xffff5126(%rip)
141cf(2): test %eax,%eax
141d1(6): jnz 0xfffff8ef(%rip)
141d7(4): mov 0x30(%r13),%rax
141db(4): mov (%rsp),%r10
141df(4): add $0x1,%r15
141e3(6): cmp $0x0,0x8(%rax,%r10,1)
141e9(6): jnz 0xfffffdaf(%rip)
141ef(5): mov 0x70(%rsp),%rdi
141f4(5): call 0xfffed7dc(%rip)
141f9(4): cmp %r15,0x10(%r13)
141fd(6): jz 0xfffffdd2(%rip)
14203(6): movzx 0x10(%rsp),%r14d
14209(5): jmp 0xfffffd98(%rip)
1420e(5): mov 0x8(%rsp),%rax
14213(4): test $0x10,0x38(%rax)
14217(2): jnz 0x13(%rip)
14219(5): cmp $0x0,0x30(%rax)
1421e(2): jz 0xc(%rip)
14220(8): test $0x1,0xb0(%r13)
14228(2): jnz 0x10(%rip)
1422a(8): cmp $0x0,0x98(%r13)
14232(6): jz 0xf9(%rip)
14238(4): lea 0x0(%rdx,%rdx,2),%rdi
1423c(4): mov %rdx,(%rsp)
14240(4): shl/sal $0x3,%rdi
14244(5): call 0xfffed9dc(%rip)
14249(3): test %rax,%rax
1424c(4): mov %rax,0x38(%r13)
14250(6): jz 0x54c(%rip)
14256(4): mov (%rsp),%rdx
1425a(2): xor %esi,%esi
1425c(2): xor %ecx,%ecx
1425e(3): test %rdx,%rdx
14261(2): jnz 0x13(%rip)
14263(5): jmp 0xc8(%rip)
14268(8): nop 0x0(%rax,%rax,1)
14270(4): mov 0x38(%r13),%rax
14274(4): pxor %xmm0,%xmm0
14278(3): add %rsi,%rax
1427b(4): add $0x1,%rcx
1427f(8): mov $0x0,0x10(%rax)
14287(4): add $0x18,%rsi
1428b(3): movups %xmm0,(%rax)
1428e(4): mov 0x10(%r13),%rax
14292(3): cmp %rax,%rcx
14295(2): jb 0xffffffdb(%rip)
14297(3): test %rax,%rax
1429a(6): jz 0x91(%rip)
142a0(4): mov 0x30(%r13),%rax
142a4(9): mov $0x0,0x18(%rsp)
142ad(9): mov $0x0,0x10(%rsp)
142b6(5): mov 0x18(%rsp),%rcx
142bb(4): lea 0x0(%rax,%rcx,1),%rdx
142bf(5): cmp $0x0,0x8(%rdx)
142c4(4): mov 0x10(%rdx),%rcx
142c8(2): jle 0x4c(%rip)
142ca(3): xor %r15d,%r15d
142cd(2): jmp 0x1b(%rip)
142cf(1): nop 
142d0(4): mov 0x30(%r13),%rax
142d4(5): mov 0x18(%rsp),%rdx
142d9(4): add $0x1,%r15
142dd(4): mov (%rsp),%rcx
142e1(5): cmp 0x8(%rax,%rdx,1),%r15
142e6(2): jnl 0x2e(%rip)
142e8(4): mov 0x0(%rcx,%r15,8),%rax
142ec(4): mov %rcx,(%rsp)
142f0(4): lea 0x0(%rax,%rax,2),%rsi
142f4(4): mov 0x38(%r13),%rax
142f8(4): lea 0x0(%rax,%rsi,8),%rdi
142fc(5): mov 0x10(%rsp),%rsi
14301(5): call 0xffff333f(%rip)
14306(2): test %al,%al
14308(2): jnz 0xffffffc8(%rip)
1430a(5): mov $0xc,%eax
1430f(5): jmp 0xfffff7b1(%rip)
14314(6): add $0x1,0x10(%rsp)
1431a(6): add $0x18,0x18(%rsp)
14320(5): mov 0x10(%rsp),%rdx
14325(4): cmp 0x10(%r13),%rdx
14329(2): jb 0xffffff8d(%rip)
1432b(7): movzx 0xb0(%rbx),%eax
14332(8): mov $0x0,0x4c(%rsp)
1433a(3): shr $0x2,%al
1433d(6): cmp $0x0,0x20(%rsp)
14343(3): setz %dl
14346(2): and %dl,%al
14348(6): jnz 0x1e7(%rip)
1434e(4): mov 0x68(%rbx),%rax
14352(3): mov %r12,%rdi
14355(4): mov 0x18(%rax),%rax
14359(4): mov 0x38(%rax),%rax
1435d(4): lea 0x0(%rax,%rax,2),%rdx
14361(7): mov %rax,0x90(%rbx)
14368(4): mov 0x30(%rbx),%rax
1436c(4): lea 0x0(%rax,%rdx,8),%rsi
14370(5): call 0xffff59e0(%rip)
14375(2): test %eax,%eax
14377(3): mov %eax,%r15d
1437a(4): mov %eax,0x50(%rsp)
1437e(6): jnz 0x121(%rip)
14384(8): cmp $0x0,0x98(%rbx)
1438c(6): jle 0xd4(%rip)
14392(5): mov 0x68(%rsp),%r9
14397(3): test %r9,%r9
1439a(6): jle 0xc6(%rip)
143a0(3): xor %r10d,%r10d
143a3(5): lea 0x10(%r12),%r13
143a8(2): jmp 0x15(%rip)
143aa(6): nop 0x0(%rax,%rax,1)
143b0(4): add $0x1,%r10
143b4(3): cmp %r10,%r9
143b7(6): jle 0xa9(%rip)
143bd(5): mov 0x70(%rsp),%rcx
143c2(3): mov (%rbx),%rsi
143c5(4): mov 0x0(%rcx,%r10,8),%r8
143c9(3): mov %r8,%rdi
143cc(4): shl/sal $0x4,%rdi
143d0(3): add %rsi,%rdi
143d3(4): cmp $0x4,0x8(%rdi)
143d7(2): jnz 0xffffffd9(%rip)
143d9(2): xor %edx,%edx
143db(2): jmp 0xe(%rip)
143dd(3): nop (%rax)
143e0(4): add $0x1,%rdx
143e4(3): cmp %rdx,%r9
143e7(2): jz 0xffffffc9(%rip)
143e9(4): mov 0x0(%rcx,%rdx,8),%rax
143ed(4): shl/sal $0x4,%rax
143f1(3): add %rsi,%rax
143f4(4): cmp $0x9,0x8(%rax)
143f8(2): jnz 0xffffffe8(%rip)
143fa(3): mov (%rdi),%r11
143fd(3): cmp %r11,(%rax)
14400(2): jnz 0xffffffe0(%rip)
14402(4): mov 0x28(%rbx),%rdx
14406(4): lea 0x0(%r8,%r8,2),%rax
1440a(3): mov %r13,%rsi
1440d(3): mov %r9,%rdi
14410(4): lea 0x0(%rdx,%rax,8),%rax
14414(4): mov 0x10(%rax),%rax
14418(3): mov (%rax),%r11
1441b(3): mov %r11,%rdx
1441e(5): call 0xffff47d2(%rip)
14423(3): test %rax,%rax
14426(2): jnz 0xffffff8a(%rip)
14428(4): mov 0x30(%rbx),%rax
1442c(4): lea 0x0(%r11,%r11,2),%rdx
14430(3): mov %r12,%rdi
14433(4): lea 0x0(%rax,%rdx,8),%rsi
14437(5): call 0xffff4cd9(%rip)
1443c(2): test %eax,%eax
1443e(6): jnz 0x342(%rip)
14444(5): mov 0x68(%rsp),%r9
14449(6): mov $0x1,%r10d
1444f(3): cmp %r10,%r9
14452(6): jnle 0xffffff6b(%rip)
14458(8): nop 0x0(%rax,%rax,1)
14460(5): mov 0x28(%rsp),%rdi
14465(2): xor %ecx,%ecx
14467(3): mov %r12,%rdx
1446a(3): mov %rbx,%rsi
1446d(5): call 0xffff5ad3(%rip)
14472(3): test %rax,%rax
14475(4): mov %rax,0x48(%rbx)
14479(6): jz 0x169(%rip)
1447f(4): cmp $0x0,0x68(%rax)
14483(6): js 0xfe(%rip)
14489(4): mov %rax,0x60(%rbx)
1448d(4): mov %rax,0x58(%rbx)
14491(4): mov %rax,0x50(%rbx)
14495(5): mov 0x70(%rsp),%rdi
1449a(5): call 0xfffed536(%rip)
1449f(5): mov 0x8(%rsp),%rax
144a4(5): mov %r15d,0x4c(%rsp)
144a9(3): mov (%rax),%r13
144ac(4): mov 0x70(%r13),%rdi
144b0(3): test %rdi,%rdi
144b3(2): jz 0x15(%rip)
144b5(3): nop (%rax)
144b8(3): mov (%rdi),%r12
144bb(5): call 0xfffed515(%rip)
144c0(3): test %r12,%r12
144c3(3): mov %r12,%rdi
144c6(2): jnz 0xfffffff2(%rip)
144c8(4): mov 0x20(%r13),%rdi
144cc(8): mov $0x0,0x70(%r13)
144d4(b): mov $0xf,0x80(%r13)
144df(8): mov $0x0,0x68(%r13)
144e7(5): call 0xfffed4e9(%rip)
144ec(8): mov $0x0,0x20(%r13)
144f4(3): mov %rbp,%rdi
144f7(5): call 0xffff43e9(%rip)
144fc(4): mov 0x4c(%rsp),%eax
14500(2): test %eax,%eax
14502(6): jz 0xfffff63a(%rip)
14508(5): jmp 0xfffff614(%rip)
1450d(8): mov $0xc,0x4c(%rsp)
14515(5): jmp 0xfffff5b7(%rip)
1451a(3): mov %rbp,%rdi
1451d(5): call 0xffff3423(%rip)
14522(8): mov $0x0,0x4c(%rsp)
1452a(5): jmp 0xfffff6ce(%rip)
1452f(5): mov 0x8(%rsp),%rcx
14534(5): cmp $0x0,0x28(%rcx)
14539(6): jnz 0xfffffe15(%rip)
1453f(4): mov 0x10(%rbx),%r10
14543(3): test %r10,%r10
14546(6): jz 0x2b4(%rip)
1454c(3): mov (%rbx),%rsi
1454f(7): lea 0x2a96(%rip),%r9
14556(3): xor %r8d,%r8d
14559(2): xor %edx,%edx
1455b(3): mov %rsi,%rcx
1455e(4): cmp $0xc,0x8(%rcx)
14562(6): jnbe 0x2cc(%rip)
14568(4): movzx 0x8(%rcx),%edi
1456c(4): movsxd 0x0(%r9,%rdi,4),%rdi
14570(3): add %r9,%rdi
14573(2): jmp %rdi
14575(2): xor %ebp,%ebp
14577(5): mov $0x1,%esi
1457c(5): jmp 0xfffff331(%rip)
14581(5): mov 0x28(%rsp),%r14
14586(5): mov $0x1,%ecx
1458b(3): mov %r12,%rdx
1458e(3): mov %rbx,%rsi
14591(3): mov %r14,%rdi
14594(5): call 0xffff59ac(%rip)
14599(5): mov $0x2,%ecx
1459e(3): mov %r12,%rdx
145a1(3): mov %rbx,%rsi
145a4(3): mov %r14,%rdi
145a7(4): mov %rax,0x50(%rbx)
145ab(5): call 0xffff5995(%rip)
145b0(5): mov $0x6,%ecx
145b5(4): mov %rax,0x58(%rbx)
145b9(3): mov %r12,%rdx
145bc(3): mov %rbx,%rsi
145bf(3): mov %r14,%rdi
145c2(5): call 0xffff597e(%rip)
145c7(5): cmp $0x0,0x50(%rbx)
145cc(4): mov %rax,0x60(%rbx)
145d0(2): jz 0x12(%rip)
145d2(5): cmp $0x0,0x58(%rbx)
145d7(2): jz 0xb(%rip)
145d9(3): test %rax,%rax
145dc(6): jnz 0xfffffeb9(%rip)
145e2(5): mov 0x50(%rsp),%r15d
145e7(5): jmp 0xfffffeb8(%rip)
145ec(4): mov 0x20(%rdx),%rax
145f0(4): mov 0x38(%rax),%r9
145f4(5): jmp 0xfffffa15(%rip)
145f9(4): mov 0x20(%rdx),%rax
145fd(4): mov 0x38(%rax),%rcx
14601(5): jmp 0xfffff9f3(%rip)
14606(3): mov %rbx,%rdi
14609(5): mov $0xe8,%esi
1460e(5): call 0xfffed682(%rip)
14613(3): test %rax,%rax
14616(3): mov %rax,%rbx
14619(6): jz 0x198(%rip)
1461f(5): mov 0x8(%rsp),%rax
14624(8): mov $0xe8,0x8(%rax)
1462c(3): mov %rbx,(%rax)
1462f(5): jmp 0xfffff1e3(%rip)
14634(3): mov %rcx,(%rax)
14637(4): mov %r9,0x8(%rax)
1463b(5): jmp 0xfffff91a(%rip)
14640(8): mov $0x0,0x4c(%rsp)
14648(5): jmp 0xfffff5b0(%rip)
1464d(8): mov $0x1,0x8(%r10)
14655(3): mov %rcx,(%rax)
14658(5): jmp 0xfffff8fd(%rip)
1465d(3): mov %rbp,%rdi
14660(5): call 0xffff3270(%rip)
14665(8): mov $0x0,0x4c(%rsp)
1466d(5): jmp 0xfffff58b(%rip)
14672(8): mov $0xc,0x4c(%rsp)
1467a(8): mov $0x0,0x68(%rbx)
14682(5): jmp 0xfffff44a(%rip)
14687(3): test %rax,%rax
1468a(6): jz 0x131(%rip)
14690(4): lea 0x70(%r15),%r13
14694(5): lea 0x60(%rsp),%r12
14699(4): sub $0xffffff80,%r15
1469d(2): xor %ecx,%ecx
1469f(2): xor %edx,%edx
146a1(3): mov %r15,%rsi
146a4(3): mov %r12,%r8
146a7(3): mov %r13,%rdi
146aa(4): mov %rax,(%rsp)
146ae(5): mov $0x2,0x68(%rsp)
146b3(5): call 0xffff51fd(%rip)
146b8(4): mov (%rsp),%r9
146bc(3): mov %rax,%r11
146bf(5): jmp 0xfffff5dc(%rip)
146c4(5): call 0xfffed30c(%rip)
146c9(b): mov $0x0,0xe0(%r13)
146d4(5): jmp 0xfffff729(%rip)
146d9(3): mov %eax,%r8d
146dc(4): add $0x1,%rdx
146e0(4): add $0x10,%rcx
146e4(3): cmp %r10,%rdx
146e7(6): jnz 0xfffffe77(%rip)
146ed(3): or %r8b,%r14b
146f0(6): jz 0x10a(%rip)
146f6(3): mov %rdx,%rax
146f9(4): shl/sal $0x4,%rax
146fd(3): add %rsi,%rax
14700(2): jmp 0x18(%rip)
14702(3): cmp $0x5,%dl
14705(2): jnz 0x6(%rip)
14707(4): mov $0x7,0x8(%rsi)
1470b(4): add $0x10,%rsi
1470f(3): cmp %rsi,%rax
14712(6): jz 0xe5(%rip)
14718(4): movzx 0x8(%rsi),%edx
1471c(3): cmp $0x1,%dl
1471f(2): jnz 0xffffffe3(%rip)
14721(3): cmp $0x0,(%rsi)
14724(2): jns 0xffffffe7(%rip)
14726(4): and $0xdf,0xa(%rsi)
1472a(2): jmp 0xffffffe1(%rip)
1472c(4): nop 0x0(%rax)
14730(3): cmp $0x0,(%rcx)
14733(4): cmovs %eax,%r14d
14737(2): jmp 0xffffffa5(%rip)
14739(2): mov (%rcx),%edi
1473b(3): cmp $0x20,%edi
1473e(2): jz 0xffffff9e(%rip)
14740(6): jbe 0xa9(%rip)
14746(3): cmp $0x40,%edi
14749(2): jz 0xffffff93(%rip)
1474b(3): add $0x80,%edi
1474e(2): jz 0xffffff8e(%rip)
14750(5): jmp 0xfffffbfe(%rip)
14755(3): nop (%rax)
14758(3): mov (%rcx),%rdi
1475b(5): cmp $0x0,0x10(%rdi)
14760(6): jnz 0xfffffbee(%rip)
14766(5): cmp $0x0,0x18(%rdi)
1476b(6): jz 0xffffff71(%rip)
14771(5): jmp 0xfffffbdd(%rip)
14776(a): nop 0x0(%rax,%rax,1)
14780(3): mov %eax,%r15d
14783(5): jmp 0xfffffd1c(%rip)
14788(8): mov $0x0,0x8(%r15)
14790(7): mov $0x0,(%r15)
14797(5): jmp 0xfffffb73(%rip)
1479c(5): mov 0x8(%rsp),%rax
147a1(8): mov $0xc,0x4c(%rsp)
147a9(3): mov (%rax),%r13
147ac(5): jmp 0xfffff320(%rip)
147b1(5): mov $0xc,%eax
147b6(5): jmp 0xfffff386(%rip)
147bb(5): mov 0x8(%rsp),%rax
147c0(8): mov $0x0,0x68(%rbx)
147c8(3): mov (%rax),%r13
147cb(5): jmp 0xfffff301(%rip)
147d0(8): mov $0x0,0x8(%rcx)
147d8(7): mov $0x0,(%rcx)
147df(5): mov $0xc,%eax
147e4(5): jmp 0xfffff2dc(%rip)
147e9(3): cmp $0x10,%edi
147ec(6): jz 0xfffffef0(%rip)
147f2(5): jmp 0xfffffb5c(%rip)
147f7(3): mov %r8d,%r14d
147fa(8): cmp $0x0,0x98(%rbx)
14802(7): movzx 0xb0(%rbx),%edx
14809(a): mov $0x1,0xb4(%rbx)
14813(3): setnle %al
14816(3): and $0xf9,%edx
14819(3): or %r14d,%eax
1481c(3): and $0x1,%eax
1481f(2): add %eax,%eax
14821(2): or %edx,%eax
14823(6): mov %al,0xb0(%rbx)
14829(5): jmp 0xfffffb25(%rip)
1482e(5): call 0xfffed1b2(%rip)
14833(7): lea 0x2826(%rip),%rcx
1483a(7): lea 0x225f(%rip),%rsi
14841(7): lea 0x231d(%rip),%rdi
14848(5): mov $0x5b0,%edx
1484d(5): call 0xfffed303(%rip)
14852(7): lea 0x2807(%rip),%rcx
14859(7): lea 0x2240(%rip),%rsi
14860(7): lea 0x2259(%rip),%rdi
14867(5): mov $0x5c2,%edx
1486c(5): call 0xfffed2e4(%rip)
14871(7): lea 0x27e8(%rip),%rcx
14878(7): lea 0x2221(%rip),%rsi
1487f(7): lea 0x22d5(%rip),%rdi
14886(5): mov $0x5af,%edx
1488b(5): call 0xfffed2c5(%rip)
14890(5): call 0xfffed240(%rip)

"rpl_re_compile_pattern" :
148a0(4): sub $0x8,%rsp
148a4(7): mov 0x20698d(%rip),%rcx
148ab(3): mov %rdi,%r8
148ae(3): mov %rdx,%rdi
148b1(3): mov %rcx,%rax
148b4(4): shr $0x19,%rax
148b8(3): and $0x1,%eax
148bb(3): shl/sal $0x4,%eax
148be(2): mov %eax,%edx
148c0(4): movzx 0x38(%rdi),%eax
148c4(3): and $0xef,%eax
148c7(2): or %edx,%eax
148c9(3): mov %rsi,%rdx
148cc(3): mov %r8,%rsi
148cf(3): or $0x80,%eax
148d2(3): mov %al,0x38(%rdi)
148d5(5): call 0xffffeecb(%rip)
148da(2): test %eax,%eax
148dc(2): jz 0x2c(%rip)
148de(7): lea 0x27db(%rip),%rdx
148e5(2): cwde 
148e7(7): lea 0x2872(%rip),%rsi
148ee(2): xor %edi,%edi
148f0(4): add 0x0(%rdx,%rax,8),%rsi
148f4(5): mov $0x5,%edx
148f9(4): add $0x8,%rsp
148fd(5): jmp 0xfffed193(%rip)
14902(6): nop 0x0(%rax,%rax,1)
14908(2): xor %eax,%eax
1490a(4): add $0x8,%rsp
1490e(1): ret near (%rsp)

"rpl_re_set_syntax" :
14910(7): mov 0x206921(%rip),%rax
14917(7): mov %rdi,0x20691a(%rip)
1491e(1): ret near (%rsp)

"rpl_re_compile_fastmap" :
14920(2): push %r12
14922(1): push %rbp
14923(2): xor %eax,%eax
14925(1): push %rbx
14926(4): mov 0x20(%rdi),%rbp
1492a(3): mov %rdi,%rbx
1492d(3): mov (%rdi),%r12
14930(4): lea 0x8(%rbp),%rdi
14934(3): mov %rbp,%rcx
14937(8): mov $0x0,0x0(%rbp)
1493f(b): mov $0x0,0xf8(%rbp)
1494a(4): and $0xfffffff8,%rdi
1494e(3): sub %rdi,%rcx
14951(6): add $0x100,%ecx
14957(3): shr $0x3,%ecx
1495a(3): REP stosd %rax,rdi(%es,10)
1495d(3): mov %rbp,%rcx
14960(3): mov %rbx,%rdi
14963(5): mov 0x48(%r12),%rsi
14968(4): lea 0x18(%rsi),%rdx
1496c(4): add $0x10,%rsi
14970(5): call 0xffff8500(%rip)
14975(5): mov 0x50(%r12),%rax
1497a(5): cmp %rax,0x48(%r12)
1497f(2): jz 0x1a(%rip)
14981(4): lea 0x18(%rax),%rdx
14985(4): lea 0x10(%rax),%rsi
14989(3): mov %rbp,%rcx
1498c(3): mov %rbx,%rdi
1498f(5): call 0xffff84e1(%rip)
14994(5): mov 0x48(%r12),%rax
14999(5): mov 0x58(%r12),%rsi
1499e(3): cmp %rax,%rsi
149a1(2): jz 0x1a(%rip)
149a3(4): lea 0x18(%rsi),%rdx
149a7(3): mov %rbp,%rcx
149aa(4): add $0x10,%rsi
149ae(3): mov %rbx,%rdi
149b1(5): call 0xffff84bf(%rip)
149b6(5): mov 0x48(%r12),%rax
149bb(5): mov 0x60(%r12),%rsi
149c0(3): cmp %rax,%rsi
149c3(2): jz 0x15(%rip)
149c5(4): lea 0x18(%rsi),%rdx
149c9(3): mov %rbp,%rcx
149cc(4): add $0x10,%rsi
149d0(3): mov %rbx,%rdi
149d3(5): call 0xffff849d(%rip)
149d8(4): or $0x8,0x38(%rbx)
149dc(2): xor %eax,%eax
149de(1): pop %rbx
149df(1): pop %rbp
149e0(2): pop %r12
149e2(1): ret near (%rsp)

"re_search_stub" :
149f0(2): push %r15
149f2(2): push %r14
149f4(3): mov %r8,%rax
149f7(2): push %r13
149f9(2): push %r12
149fb(3): add %rcx,%r8
149fe(1): push %rbp
149ff(1): push %rbx
14a00(4): sub $0x38,%rsp
14a04(3): test %rcx,%rcx
14a07(4): mov 0x78(%rsp),%ebx
14a0b(5): mov 0x70(%rsp),%r12
14a10(4): mov %ebx,0x28(%rsp)
14a14(6): js 0x33c(%rip)
14a1a(3): cmp %rdx,%rcx
14a1d(6): jnle 0x333(%rip)
14a23(3): cmp %rdx,%r8
14a26(3): mov %rcx,%rbx
14a29(3): mov %rdi,%r15
14a2c(6): jnle 0x284(%rip)
14a32(3): test %rax,%rax
14a35(2): js 0xb(%rip)
14a37(3): cmp %r8,%rcx
14a3a(6): jnle 0x276(%rip)
14a40(3): test %r8,%r8
14a43(6): js 0x2e5(%rip)
14a49(3): test %rax,%rax
14a4c(2): jns 0xb(%rip)
14a4e(3): cmp %r8,%rbx
14a51(6): jle 0x2d7(%rip)
14a57(5): movzx 0x38(%r15),%eax
14a5c(3): mov %eax,%r13d
14a5f(4): shr $0x5,%r13b
14a63(3): mov %r13d,%edi
14a66(3): and $0x3,%edi
14a69(3): cmp %rbx,%r8
14a6c(4): mov %edi,0x2c(%rsp)
14a70(2): jle 0x11(%rip)
14a72(5): cmp $0x0,0x20(%r15)
14a77(2): jz 0xa(%rip)
14a79(2): test $0x8,%al
14a7b(6): jz 0x1f5(%rip)
14a81(2): test $0x10,%al
14a83(6): jnz 0x1cd(%rip)
14a89(3): test %r12,%r12
14a8c(6): jz 0x1c4(%rip)
14a92(3): and $0x6,%eax
14a95(4): mov 0x30(%r15),%rcx
14a99(2): cmp $0x4,%al
14a9b(6): jz 0x195(%rip)
14aa1(4): lea 0x1(%rcx),%r14
14aa5(3): mov %r14,%r13
14aa8(3): mov %r14,%rdi
14aab(4): shl/sal $0x4,%rdi
14aaf(5): mov %r9,0x20(%rsp)
14ab4(5): mov %rdx,0x18(%rsp)
14ab9(5): mov %rsi,0x10(%rsp)
14abe(5): mov %r8,0x8(%rsp)
14ac3(5): call 0xfffed15d(%rip)
14ac8(3): test %rax,%rax
14acb(3): mov %rax,%rbp
14ace(6): jz 0x292(%rip)
14ad4(4): sub $0x8,%rsp
14ad8(3): mov %rbx,%rcx
14adb(3): mov %r15,%rdi
14ade(4): mov 0x34(%rsp),%eax
14ae2(1): push %rax
14ae3(1): push %rbp
14ae4(2): push %r14
14ae6(5): mov 0x40(%rsp),%r9
14aeb(5): mov 0x28(%rsp),%r8
14af0(5): mov 0x38(%rsp),%rdx
14af5(5): mov 0x30(%rsp),%rsi
14afa(5): call 0xffffab16(%rip)
14aff(4): add $0x20,%rsp
14b03(2): test %eax,%eax
14b05(2): jz 0x33(%rip)
14b07(3): cmp $0x1,%eax
14b0a(7): mov $0xffffffff,%r12
14b11(2): jz 0x9(%rip)
14b13(7): mov $0xfffffffe,%r12
14b1a(3): mov %rbp,%rdi
14b1d(5): call 0xfffeceb3(%rip)
14b22(4): add $0x38,%rsp
14b26(3): mov %r12,%rax
14b29(1): pop %rbx
14b2a(1): pop %rbp
14b2b(2): pop %r12
14b2d(2): pop %r13
14b2f(2): pop %r14
14b31(2): pop %r15
14b33(1): ret near (%rsp)
14b34(4): nop 0x0(%rax)
14b38(3): test %r12,%r12
14b3b(6): jz 0xcd(%rip)
14b41(5): movzx 0x38(%r15),%eax
14b46(4): lea 0x1(%r13),%rdx
14b4a(2): shr $0x1,%al
14b4c(3): and $0x3,%eax
14b4f(6): jz 0x171(%rip)
14b55(3): cmp $0x1,%eax
14b58(6): jz 0x218(%rip)
14b5e(3): cmp $0x2,%eax
14b61(6): jnz 0x2ef(%rip)
14b67(4): cmp (%r12),%r14
14b6b(6): jnbe 0x2c6(%rip)
14b71(6): mov $0x2,%r9d
14b77(3): test %r13,%r13
14b7a(6): jle 0x26e(%rip)
14b80(5): mov 0x8(%r12),%r8
14b85(5): mov 0x10(%r12),%rdi
14b8a(8): lea 0x0(,%r13,8),%rsi
14b92(3): mov %r13,%rdx
14b95(2): xor %eax,%eax
14b97(9): nop 0x0(%rax,%rax,1)
14ba0(5): mov 0x0(%rbp,%rax,2),%rcx
14ba5(4): mov %rcx,0x0(%r8,%rax,1)
14ba9(5): mov 0x8(%rbp,%rax,2),%rcx
14bae(4): mov %rcx,0x0(%rdi,%rax,1)
14bb2(4): add $0x8,%rax
14bb6(3): cmp %rax,%rsi
14bb9(2): jnz 0xffffffe7(%rip)
14bbb(4): cmp %rdx,(%r12)
14bbf(2): jbe 0x2e(%rip)
14bc1(5): mov 0x10(%r12),%rsi
14bc6(5): mov 0x8(%r12),%rcx
14bcb(7): mov $0xffffffff,%rax
14bd2(6): nop 0x0(%rax,%rax,1)
14bd8(4): mov %rax,0x0(%rsi,%rdx,8)
14bdc(4): add $0x1,%r13
14be0(4): mov %rax,0x0(%rcx,%rdx,8)
14be4(4): cmp (%r12),%r13
14be8(3): mov %r13,%rdx
14beb(2): jb 0xffffffed(%rip)
14bed(5): movzx 0x38(%r15),%eax
14bf2(4): lea 0x0(%r9,%r9,1),%r13d
14bf6(3): and $0xf9,%eax
14bf9(3): or %r13d,%eax
14bfc(2): test $0x6,%al
14bfe(4): mov %al,0x38(%r15)
14c02(6): jz 0xffffff11(%rip)
14c08(5): cmp $0x0,0x28(%rsp)
14c0d(4): mov 0x0(%rbp),%r12
14c11(6): jz 0xffffff09(%rip)
14c17(3): cmp %rbx,%r12
14c1a(6): jnz 0x1f8(%rip)
14c20(4): mov 0x8(%rbp),%r12
14c24(3): sub %rbx,%r12
14c27(5): jmp 0xfffffef3(%rip)
14c2c(4): nop 0x0(%rax)
14c30(4): mov (%r12),%r14
14c34(3): cmp %rcx,%r14
14c37(6): jnbe 0xfffffe6a(%rip)
14c3d(3): test %r14,%r14
14c40(3): mov %r14,%r13
14c43(6): jnle 0xfffffe65(%rip)
14c49(7): nop 0x0(%rax)
14c50(5): mov $0x10,%edi
14c55(6): mov $0x1,%r14d
14c5b(6): mov $0x1,%r13d
14c61(3): xor %r12d,%r12d
14c64(5): jmp 0xfffffe4b(%rip)
14c69(7): nop 0x0(%rax)
14c70(3): mov %r15,%rdi
14c73(5): mov %r9,0x20(%rsp)
14c78(5): mov %rdx,0x18(%rsp)
14c7d(5): mov %rsi,0x10(%rsp)
14c82(5): mov %r8,0x8(%rsp)
14c87(5): call 0xfffffc99(%rip)
14c8c(5): movzx 0x38(%r15),%eax
14c91(5): mov 0x20(%rsp),%r9
14c96(5): mov 0x18(%rsp),%rdx
14c9b(5): mov 0x10(%rsp),%rsi
14ca0(5): mov 0x8(%rsp),%r8
14ca5(5): jmp 0xfffffddc(%rip)
14caa(6): nop 0x0(%rax,%rax,1)
14cb0(3): mov %rdx,%r8
14cb3(5): jmp 0xfffffda4(%rip)
14cb8(8): nop 0x0(%rax,%rax,1)
14cc0(8): lea 0x0(,%rdx,8),%r14
14cc8(5): mov %rdx,0x8(%rsp)
14ccd(3): mov %r14,%rdi
14cd0(5): call 0xfffecf50(%rip)
14cd5(3): test %rax,%rax
14cd8(5): mov %rax,0x8(%r12)
14cdd(5): mov 0x8(%rsp),%rdx
14ce2(6): jz 0x118(%rip)
14ce8(3): mov %r14,%rdi
14ceb(5): mov %rdx,0x8(%rsp)
14cf0(5): mov %rax,0x10(%rsp)
14cf5(5): call 0xfffecf2b(%rip)
14cfa(3): test %rax,%rax
14cfd(5): mov %rax,0x10(%r12)
14d02(5): mov 0x8(%rsp),%rdx
14d07(5): mov 0x10(%rsp),%rcx
14d0c(6): jz 0xe6(%rip)
14d12(4): mov %rdx,(%r12)
14d16(6): mov $0x1,%r9d
14d1c(5): jmp 0xfffffe5b(%rip)
14d21(7): nop 0x0(%rax)
14d28(5): movzx 0x38(%r15),%eax
14d2d(3): xor %r8d,%r8d
14d30(3): mov %eax,%r13d
14d33(4): shr $0x5,%r13b
14d37(3): mov %r13d,%edi
14d3a(3): and $0x3,%edi
14d3d(4): mov %edi,0x2c(%rsp)
14d41(5): jmp 0xfffffd40(%rip)
14d46(a): nop 0x0(%rax,%rax,1)
14d50(7): mov $0xffffffff,%r12
14d57(5): jmp 0xfffffdcb(%rip)
14d5c(4): nop 0x0(%rax)
14d60(7): mov $0xfffffffe,%r12
14d67(5): jmp 0xfffffdbb(%rip)
14d6c(4): nop 0x0(%rax)
14d70(4): cmp %rdx,(%r12)
14d74(6): mov $0x1,%r9d
14d7a(6): jnb 0xfffffdfd(%rip)
14d80(8): lea 0x0(,%rdx,8),%rcx
14d88(5): mov 0x8(%r12),%rdi
14d8d(5): mov %r9b,0x18(%rsp)
14d92(5): mov %rdx,0x10(%rsp)
14d97(3): mov %rcx,%rsi
14d9a(5): mov %rcx,0x8(%rsp)
14d9f(5): call 0xfffecef1(%rip)
14da4(3): test %rax,%rax
14da7(3): mov %rax,%r14
14daa(2): jz 0x50(%rip)
14dac(5): mov 0x8(%rsp),%rcx
14db1(5): mov 0x10(%r12),%rdi
14db6(3): mov %rcx,%rsi
14db9(5): call 0xfffeced7(%rip)
14dbe(3): test %rax,%rax
14dc1(5): mov 0x10(%rsp),%rdx
14dc6(6): movzx 0x18(%rsp),%r9d
14dcc(2): jz 0x36(%rip)
14dce(5): mov %r14,0x8(%r12)
14dd3(5): mov %rax,0x10(%r12)
14dd8(4): mov %rdx,(%r12)
14ddc(5): jmp 0xfffffd9b(%rip)
14de1(7): nop 0x0(%rax)
14de8(2): xor %edx,%edx
14dea(3): xor %r13d,%r13d
14ded(5): jmp 0xfffffdce(%rip)
14df2(3): mov %rcx,%rdi
14df5(5): call 0xfffecbdb(%rip)
14dfa(3): xor %r9d,%r9d
14dfd(5): jmp 0xfffffdf0(%rip)
14e02(3): mov %r14,%rdi
14e05(5): call 0xfffecbcb(%rip)
14e0a(3): xor %r9d,%r9d
14e0d(5): jmp 0xfffffde0(%rip)
14e12(7): lea 0x2217(%rip),%rcx
14e19(7): lea 0x1c60(%rip),%rsi
14e20(7): lea 0x1d7e(%rip),%rdi
14e27(5): mov $0x1be,%edx
14e2c(5): call 0xfffecd24(%rip)
14e31(7): lea 0x21e8(%rip),%rcx
14e38(7): lea 0x1c41(%rip),%rsi
14e3f(7): lea 0x1d47(%rip),%rdi
14e46(5): mov $0x1fb,%edx
14e4b(5): call 0xfffecd05(%rip)
14e50(7): lea 0x21c9(%rip),%rcx
14e57(7): lea 0x1c22(%rip),%rsi
14e5e(7): lea 0x1d0b(%rip),%rdi
14e65(5): mov $0x1f9,%edx
14e6a(5): call 0xfffecce6(%rip)

"re_search_2_stub" :
14e70(2): push %r15
14e72(2): push %r14
14e74(2): push %r13
14e76(2): push %r12
14e78(3): mov %rdi,%r12
14e7b(1): push %rbp
14e7c(1): push %rbx
14e7d(3): mov %r8,%rbp
14e80(3): mov %rdx,%rbx
14e83(3): mov %rbp,%rdx
14e86(4): sub $0x28,%rsp
14e8a(4): shr $0x3f,%rdx
14e8e(5): mov 0x70(%rsp),%rax
14e93(2): mov %edx,%edi
14e95(5): mov 0x78(%rsp),%r8d
14e9a(4): shr $0x3f,%rax
14e9e(3): or %al,%dil
14ea1(6): jnz 0xcf(%rip)
14ea7(3): test %rbx,%rbx
14eaa(6): js 0xc6(%rip)
14eb0(3): mov %rbx,%r15
14eb3(3): add %rbp,%r15
14eb6(6): jo 0xba(%rip)
14ebc(3): test %rbp,%rbp
14ebf(3): mov %rcx,%r14
14ec2(3): mov %r9,%rcx
14ec5(6): jz 0xbb(%rip)
14ecb(3): xor %r13d,%r13d
14ece(3): test %rbx,%rbx
14ed1(5): mov %rsi,0x8(%rsp)
14ed6(2): jnz 0x4a(%rip)
14ed8(4): movzx %r8b,%r8d
14edc(3): mov %r15,%rdx
14edf(3): mov %r14,%rsi
14ee2(2): push %r8
14ee4(4): push 0x70(%rsp)
14ee8(3): mov %r12,%rdi
14eeb(8): mov 0x80(%rsp),%r9
14ef3(5): mov 0x70(%rsp),%r8
14ef8(5): call 0xfffffaf8(%rip)
14efd(3): mov %r13,%rdi
14f00(3): mov %rax,%rbx
14f03(5): call 0xfffecacd(%rip)
14f08(1): pop %rax
14f09(1): pop %rdx
14f0a(4): add $0x28,%rsp
14f0e(3): mov %rbx,%rax
14f11(1): pop %rbx
14f12(1): pop %rbp
14f13(2): pop %r12
14f15(2): pop %r13
14f17(2): pop %r14
14f19(2): pop %r15
14f1b(1): ret near (%rsp)
14f1c(4): nop 0x0(%rax)
14f20(3): mov %r15,%rdi
14f23(5): mov %r8d,0x1c(%rsp)
14f28(5): mov %r9,0x10(%rsp)
14f2d(5): call 0xfffeccf3(%rip)
14f32(3): test %rax,%rax
14f35(3): mov %rax,%r13
14f38(2): jz 0x38(%rip)
14f3a(5): mov 0x8(%rsp),%rsi
14f3f(3): mov %rbx,%rdx
14f42(3): mov %rax,%rdi
14f45(5): call 0xfffecc9b(%rip)
14f4a(5): lea 0x0(%r13,%rbx,1),%rdi
14f4f(3): mov %r14,%rsi
14f52(3): mov %rbp,%rdx
14f55(3): mov %r13,%r14
14f58(5): call 0xfffecc88(%rip)
14f5d(5): mov 0x10(%rsp),%rcx
14f62(5): mov 0x1c(%rsp),%r8d
14f67(5): jmp 0xffffff71(%rip)
14f6c(4): nop 0x0(%rax)
14f70(7): mov $0xfffffffe,%rbx
14f77(2): jmp 0xffffff93(%rip)
14f79(7): nop 0x0(%rax)
14f80(3): mov %rsi,%r14
14f83(3): xor %r13d,%r13d
14f86(5): jmp 0xffffff52(%rip)

"rpl_regcomp" :
14f90(2): mov %edx,%eax
14f92(2): push %r14
14f94(2): push %r13
14f96(3): and $0x1,%eax
14f99(2): push %r12
14f9b(1): push %rbp
14f9c(3): cmp $0x1,%eax
14f9f(1): push %rbx
14fa0(3): mov %rdi,%rbx
14fa3(3): sbb %r14,%r14
14fa6(7): mov $0x0,(%rdi)
14fad(8): mov $0x0,0x8(%rdi)
14fb5(7): and $0xfd4fca,%r14d
14fbc(8): mov $0x0,0x10(%rdi)
14fc4(5): mov $0x100,%edi
14fc9(3): mov %rsi,%r12
14fcc(2): mov %edx,%ebp
14fce(7): add $0x3b2fc,%r14
14fd5(5): call 0xfffecc4b(%rip)
14fda(3): test %rax,%rax
14fdd(4): mov %rax,0x20(%rbx)
14fe1(6): jz 0xaf(%rip)
14fe7(3): mov %rbp,%r13
14fea(4): shl/sal $0x15,%r13
14fee(7): and $0x400000,%r13d
14ff5(3): or %r14,%r13
14ff8(4): test $0x4,%bpl
14ffc(2): jnz 0x64(%rip)
14ffe(4): and $0x7f,0x38(%rbx)
15002(4): movzx 0x38(%rbx),%edx
15006(3): shr $0x3,%ebp
15009(3): mov %r12,%rdi
1500c(3): and $0x1,%ebp
1500f(8): mov $0x0,0x28(%rbx)
15017(3): shl/sal $0x4,%ebp
1501a(3): and $0xef,%edx
1501d(2): or %edx,%ebp
1501f(4): mov %bpl,0x38(%rbx)
15023(5): call 0xfffeca8d(%rip)
15028(3): mov %r13,%rcx
1502b(3): mov %rax,%rdx
1502e(3): mov %r12,%rsi
15031(3): mov %rbx,%rdi
15034(5): call 0xffffe76c(%rip)
15039(3): cmp $0x10,%eax
1503c(2): mov %eax,%ebp
1503e(2): jz 0x3a(%rip)
15040(2): test %eax,%eax
15042(2): jnz 0x3b(%rip)
15044(3): mov %rbx,%rdi
15047(5): call 0xfffff8d9(%rip)
1504c(1): pop %rbx
1504d(2): mov %ebp,%eax
1504f(1): pop %rbp
15050(2): pop %r12
15052(2): pop %r13
15054(2): pop %r14
15056(1): ret near (%rsp)
15057(9): nop 0x0(%rax,%rax,1)
15060(4): and $0xffffffbf,%r13
15064(4): or $0x80,0x38(%rbx)
15068(7): or $0x100,%r13
1506f(2): jmp 0xffffff93(%rip)
15071(7): nop 0x0(%rax)
15078(5): mov $0x8,%ebp
1507d(4): mov 0x20(%rbx),%rdi
15081(5): call 0xfffec94f(%rip)
15086(8): mov $0x0,0x20(%rbx)
1508e(2): jmp 0xffffffbe(%rip)
15090(5): mov $0xc,%ebp
15095(1): pop %rbx
15096(2): mov %ebp,%eax
15098(1): pop %rbp
15099(2): pop %r12
1509b(2): pop %r13
1509d(2): pop %r14
1509f(1): ret near (%rsp)

"rpl_regerror" :
150a0(2): push %r13
150a2(2): push %r12
150a4(1): push %rbp
150a5(1): push %rbx
150a6(4): sub $0x8,%rsp
150aa(3): cmp $0x10,%edi
150ad(2): jnbe 0x63(%rip)
150af(7): lea 0x200a(%rip),%rax
150b6(3): movsxd %edi,%rdi
150b9(7): lea 0x20a0(%rip),%rsi
150c0(3): mov %rdx,%rbp
150c3(5): mov $0x5,%edx
150c8(3): mov %rcx,%r12
150cb(4): add 0x0(%rax,%rdi,8),%rsi
150cf(2): xor %edi,%edi
150d1(5): call 0xfffec9bf(%rip)
150d6(3): mov %rax,%rdi
150d9(3): mov %rax,%r13
150dc(5): call 0xfffec9d4(%rip)
150e1(3): test %r12,%r12
150e4(4): lea 0x1(%rax),%rbx
150e8(2): jz 0x15(%rip)
150ea(3): cmp %r12,%rbx
150ed(3): mov %rbx,%rdx
150f0(2): jnbe 0x28(%rip)
150f2(3): mov %r13,%rsi
150f5(3): mov %rbp,%rdi
150f8(5): call 0xfffecae8(%rip)
150fd(4): add $0x8,%rsp
15101(3): mov %rbx,%rax
15104(1): pop %rbx
15105(1): pop %rbp
15106(2): pop %r12
15108(2): pop %r13
1510a(1): ret near (%rsp)
1510b(5): nop 0x0(%rax,%rax,1)
15110(5): call 0xfffec8d0(%rip)
15115(3): nop (%rax)
15118(5): lea 0xffffffff(%r12),%rdx
1511d(6): mov $0x0,0xffffffff(%rbp,%r12,1)
15123(2): jmp 0xffffffcf(%rip)

"rpl_regfree" :
15130(1): push %rbx
15131(3): mov %rdi,%rbx
15134(3): mov (%rdi),%rdi
15137(3): test %rdi,%rdi
1513a(2): jz 0x7(%rip)
1513c(5): call 0xffff37e4(%rip)
15141(4): mov 0x20(%rbx),%rdi
15145(7): mov $0x0,(%rbx)
1514c(8): mov $0x0,0x8(%rbx)
15154(5): call 0xfffec87c(%rip)
15159(4): mov 0x28(%rbx),%rdi
1515d(8): mov $0x0,0x20(%rbx)
15165(5): call 0xfffec86b(%rip)
1516a(8): mov $0x0,0x28(%rbx)
15172(1): pop %rbx
15173(1): ret near (%rsp)

"rpl_regexec" :
15180(7): test $0xfffffff8,%r8d
15187(6): jnz 0x91(%rip)
1518d(2): push %r13
1518f(2): push %r12
15191(3): mov %rdx,%r13
15194(1): push %rbp
15195(1): push %rbx
15196(3): mov %rcx,%r12
15199(3): mov %r8d,%ebx
1519c(3): mov %rdi,%rbp
1519f(4): sub $0x18,%rsp
151a3(4): test $0x4,%r8b
151a7(2): jnz 0x51(%rip)
151a9(3): mov %rsi,%rdi
151ac(5): mov %rsi,0x8(%rsp)
151b1(5): call 0xfffec8ff(%rip)
151b6(2): xor %ecx,%ecx
151b8(4): test $0x10,0x38(%rbp)
151bc(3): mov %rax,%rdx
151bf(5): mov 0x8(%rsp),%rsi
151c4(2): jz 0x42(%rip)
151c6(4): sub $0x8,%rsp
151ca(1): push %rbx
151cb(2): push $0x0
151cd(2): push $0x0
151cf(3): mov %rbp,%rdi
151d2(3): mov %rdx,%r9
151d5(3): mov %rdx,%r8
151d8(5): call 0xffffa438(%rip)
151dd(4): add $0x20,%rsp
151e1(2): test %eax,%eax
151e3(3): setnz %al
151e6(4): add $0x18,%rsp
151ea(1): pop %rbx
151eb(3): movzx %al,%eax
151ee(1): pop %rbp
151ef(2): pop %r12
151f1(2): pop %r13
151f3(1): ret near (%rsp)
151f4(4): nop 0x0(%rax)
151f8(4): test $0x10,0x38(%rbp)
151fc(3): mov (%rcx),%rcx
151ff(5): mov 0x8(%r12),%rdx
15204(2): jnz 0xffffffc2(%rip)
15206(4): sub $0x8,%rsp
1520a(1): push %rbx
1520b(2): push %r12
1520d(2): push %r13
1520f(2): jmp 0xffffffc0(%rip)
15211(7): nop 0x0(%rax)
15218(5): mov $0x2,%eax
1521d(1): ret near (%rsp)

"rpl_re_match" :
15220(4): sub $0x8,%rsp
15224(3): mov %rdx,%r9
15227(2): push $0x1
15229(2): push %r8
1522b(3): xor %r8d,%r8d
1522e(5): call 0xfffff7c2(%rip)
15233(4): add $0x18,%rsp
15237(1): ret near (%rsp)

"rpl_re_search" :
15240(4): sub $0x8,%rsp
15244(2): push $0x0
15246(2): push %r9
15248(3): mov %rdx,%r9
1524b(5): call 0xfffff7a5(%rip)
15250(4): add $0x18,%rsp
15254(1): ret near (%rsp)

"rpl_re_match_2" :
15260(4): sub $0x8,%rsp
15264(2): push $0x1
15266(4): push 0x20(%rsp)
1526a(4): push 0x20(%rsp)
1526e(2): push $0x0
15270(5): call 0xfffffc00(%rip)
15275(4): add $0x28,%rsp
15279(1): ret near (%rsp)

"rpl_re_search_2" :
15280(4): sub $0x8,%rsp
15284(2): push $0x0
15286(4): push 0x28(%rsp)
1528a(4): push 0x28(%rsp)
1528e(4): push 0x28(%rsp)
15292(5): call 0xfffffbde(%rip)
15297(4): add $0x28,%rsp
1529b(1): ret near (%rsp)

"rpl_re_set_registers" :
152a0(3): test %rdx,%rdx
152a3(2): jnz 0x25(%rip)
152a5(4): and $0xf9,0x38(%rdi)
152a9(7): mov $0x0,(%rsi)
152b0(8): mov $0x0,0x10(%rsi)
152b8(8): mov $0x0,0x8(%rsi)
152c0(1): ret near (%rsp)
152c1(7): nop 0x0(%rax)
152c8(4): movzx 0x38(%rdi),%eax
152cc(3): and $0xf9,%eax
152cf(3): or $0x2,%eax
152d2(3): mov %al,0x38(%rdi)
152d5(3): mov %rdx,(%rsi)
152d8(4): mov %rcx,0x8(%rsi)
152dc(4): mov %r8,0x10(%rsi)
152e0(1): ret near (%rsp)

"close_stream" :
152f0(2): push %r12
152f2(1): push %rbp
152f3(3): mov %rdi,%rbp
152f6(1): push %rbx
152f7(5): call 0xfffec729(%rip)
152fc(3): mov 0x0(%rbp),%ebx
152ff(3): mov %rbp,%rdi
15302(3): mov %rax,%r12
15305(5): call 0x10b(%rip)
1530a(3): and $0x20,%ebx
1530d(2): test %ebx,%ebx
1530f(2): jnz 0x19(%rip)
15311(2): test %eax,%eax
15313(2): jz 0xc(%rip)
15315(3): test %r12,%r12
15318(5): mov $0xffffffff,%eax
1531d(2): jz 0x3b(%rip)
1531f(1): pop %rbx
15320(1): pop %rbp
15321(2): pop %r12
15323(1): ret near (%rsp)
15324(4): nop 0x0(%rax)
15328(2): test %eax,%eax
1532a(2): jnz 0x1e(%rip)
1532c(5): call 0xfffec6c4(%rip)
15331(6): mov $0x0,(%rax)
15337(5): mov $0xffffffff,%eax
1533c(1): pop %rbx
1533d(1): pop %rbp
1533e(2): pop %r12
15340(1): ret near (%rsp)
15341(7): nop 0x0(%rax)
15348(1): pop %rbx
15349(5): mov $0xffffffff,%eax
1534e(1): pop %rbp
1534f(2): pop %r12
15351(1): ret near (%rsp)
15352(6): nop 0x0(%rax,%rax,1)
15358(5): call 0xfffec698(%rip)
1535d(3): cmp $0x9,(%rax)
15360(1): pop %rbx
15361(1): pop %rbp
15362(2): pop %r12
15364(3): setnz %al
15367(3): movzx %al,%eax
1536a(2): neg %eax
1536c(1): ret near (%rsp)

"hard_locale" :
15370(4): sub $0x8,%rsp
15374(2): xor %esi,%esi
15376(5): call 0xfffec92a(%rip)
1537b(3): mov %rax,%rdx
1537e(5): mov $0x1,%eax
15383(3): test %rdx,%rdx
15386(2): jz 0x1f(%rip)
15388(7): lea 0x1f61(%rip),%rdi
1538f(5): mov $0x2,%ecx
15394(3): mov %rdx,%rsi
15397(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
15399(3): setnbe %cl
1539c(3): sbb $0x0,%cl
1539f(2): xor %eax,%eax
153a1(2): test %cl,%cl
153a3(2): jnz 0xd(%rip)
153a5(4): add $0x8,%rsp
153a9(1): ret near (%rsp)
153aa(6): nop 0x0(%rax,%rax,1)
153b0(7): lea 0x1f3b(%rip),%rdi
153b7(5): mov $0x6,%ecx
153bc(3): mov %rdx,%rsi
153bf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
153c1(3): setnbe %al
153c4(2): sbb $0x0,%al
153c6(2): test %al,%al
153c8(3): setnz %al
153cb(4): add $0x8,%rsp
153cf(1): ret near (%rsp)

"locale_charset" :
153d0(4): sub $0x8,%rsp
153d4(5): mov $0xe,%edi
153d9(5): call 0xfffec887(%rip)
153de(3): test %rax,%rax
153e1(2): jz 0x1f(%rip)
153e3(3): cmp $0x0,(%rax)
153e6(7): lea 0x1f0b(%rip),%rdx
153ed(4): cmove %rdx,%rax
153f1(4): add $0x8,%rsp
153f5(1): ret near (%rsp)
153f6(a): nop 0x0(%rax,%rax,1)
15400(7): lea 0x1ef1(%rip),%rax
15407(4): add $0x8,%rsp
1540b(1): ret near (%rsp)

"rpl_fclose" :
15410(2): push %r12
15412(1): push %rbp
15413(1): push %rbx
15414(3): mov %rdi,%rbx
15417(5): call 0xfffec7d9(%rip)
1541c(2): test %eax,%eax
1541e(3): mov %rbx,%rdi
15421(2): js 0x56(%rip)
15423(5): call 0xfffec85d(%rip)
15428(2): test %eax,%eax
1542a(2): jnz 0x2e(%rip)
1542c(3): mov %rbx,%rdi
1542f(5): call 0x61(%rip)
15434(2): test %eax,%eax
15436(2): jz 0x3e(%rip)
15438(5): call 0xfffec5b8(%rip)
1543d(3): mov (%rax),%r12d
15440(3): mov %rbx,%rdi
15443(3): mov %rax,%rbp
15446(5): call 0xfffec62a(%rip)
1544b(3): test %r12d,%r12d
1544e(2): jnz 0x32(%rip)
15450(1): pop %rbx
15451(1): pop %rbp
15452(2): pop %r12
15454(1): ret near (%rsp)
15455(3): nop (%rax)
15458(3): mov %rbx,%rdi
1545b(5): call 0xfffec795(%rip)
15460(2): xor %esi,%esi
15462(5): mov $0x1,%edx
15467(2): mov %eax,%edi
15469(5): call 0xfffec6c7(%rip)
1546e(4): cmp $0xffffffff,%rax
15472(2): jnz 0xffffffba(%rip)
15474(3): mov %rbx,%rdi
15477(1): pop %rbx
15478(1): pop %rbp
15479(2): pop %r12
1547b(5): jmp 0xfffec5f5(%rip)
15480(4): mov %r12d,0x0(%rbp)
15484(5): mov $0xffffffff,%eax
15489(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
15490(3): test %rdi,%rdi
15493(1): push %rbx
15494(3): mov %rdi,%rbx
15497(2): jz 0x13(%rip)
15499(5): call 0xfffec7e7(%rip)
1549e(2): test %eax,%eax
154a0(2): jz 0xa(%rip)
154a2(6): test $0x100,(%rbx)
154a8(2): jnz 0x10(%rip)
154aa(3): mov %rbx,%rdi
154ad(1): pop %rbx
154ae(5): jmp 0xfffec792(%rip)
154b3(5): nop 0x0(%rax,%rax,1)
154b8(3): mov %rbx,%rdi
154bb(5): mov $0x1,%edx
154c0(2): xor %esi,%esi
154c2(5): call 0xe(%rip)
154c7(3): mov %rbx,%rdi
154ca(1): pop %rbx
154cb(5): jmp 0xfffec775(%rip)

"rpl_fseeko" :
154d0(4): mov 0x8(%rdi),%rax
154d4(4): cmp %rax,0x10(%rdi)
154d8(2): jz 0x8(%rip)
154da(5): jmp 0xfffec836(%rip)
154df(1): nop 
154e0(4): mov 0x20(%rdi),%rax
154e4(4): cmp %rax,0x28(%rdi)
154e8(2): jnz 0xfffffff2(%rip)
154ea(5): cmp $0x0,0x48(%rdi)
154ef(2): jnz 0xffffffeb(%rip)
154f1(2): push %r12
154f3(1): push %rbp
154f4(3): mov %edx,%r12d
154f7(1): push %rbx
154f8(3): mov %rsi,%rbp
154fb(3): mov %rdi,%rbx
154fe(5): call 0xfffec6f2(%rip)
15503(3): mov %r12d,%edx
15506(3): mov %rbp,%rsi
15509(2): mov %eax,%edi
1550b(5): call 0xfffec625(%rip)
15510(4): cmp $0xffffffff,%rax
15514(2): jz 0xe(%rip)
15516(3): and $0xef,(%rbx)
15519(7): mov %rax,0x90(%rbx)
15520(2): xor %eax,%eax
15522(1): pop %rbx
15523(1): pop %rbp
15524(2): pop %r12
15526(1): ret near (%rsp)

"__libc_csu_init" :
15530(2): push %r15
15532(2): push %r14
15534(3): mov %rdx,%r15
15537(2): push %r13
15539(2): push %r12
1553b(7): lea 0x20556e(%rip),%r12
15542(1): push %rbp
15543(7): lea 0x20556e(%rip),%rbp
1554a(1): push %rbx
1554b(3): mov %edi,%r13d
1554e(3): mov %rsi,%r14
15551(3): sub %r12,%rbp
15554(4): sub $0x8,%rsp
15558(4): sar $0x3,%rbp
1555c(5): call 0xfffec434(%rip)
15561(3): test %rbp,%rbp
15564(2): jz 0x22(%rip)
15566(2): xor %ebx,%ebx
15568(8): nop 0x0(%rax,%rax,1)
15570(3): mov %r15,%rdx
15573(3): mov %r14,%rsi
15576(3): mov %r13d,%edi
15579(4): call 0x0(%r12,%rbx,8)
1557d(4): add $0x1,%rbx
15581(3): cmp %rbx,%rbp
15584(2): jnz 0xffffffec(%rip)
15586(4): add $0x8,%rsp
1558a(1): pop %rbx
1558b(1): pop %rbp
1558c(2): pop %r12
1558e(2): pop %r13
15590(2): pop %r14
15592(2): pop %r15
15594(1): ret near (%rsp)

"atexit" :
155b0(7): mov 0x205a51(%rip),%rdx
155b7(2): xor %esi,%esi
155b9(5): jmp 0xfffec797(%rip)

"_fini" :
155c0(4): sub $0x8,%rsp
155c4(4): add $0x8,%rsp
155c8(1): ret near (%rsp)

