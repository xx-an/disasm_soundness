
"getenv@plt" :
1780(6): jmp 0x20865a(%rip)
1786(5): push $0x0

"free@plt" :
1790(6): jmp 0x208652(%rip)
1796(5): push $0x1

"abort@plt" :
17a0(6): jmp 0x20864a(%rip)
17a6(5): push $0x2

"__errno_location@plt" :
17b0(6): jmp 0x208642(%rip)
17b6(5): push $0x3

"remove@plt" :
17c0(6): jmp 0x20863a(%rip)
17c6(5): push $0x4

"strncmp@plt" :
17d0(6): jmp 0x208632(%rip)
17d6(5): push $0x5

"_exit@plt" :
17e0(6): jmp 0x20862a(%rip)
17e6(5): push $0x6

"__fpending@plt" :
17f0(6): jmp 0x208622(%rip)
17f6(5): push $0x7

"__read_chk@plt" :
1800(6): jmp 0x20861a(%rip)
1806(5): push $0x8

"mkdir@plt" :
1810(6): jmp 0x208612(%rip)
1816(5): push $0x9

"puts@plt" :
1820(6): jmp 0x20860a(%rip)
1826(5): push $0xa

"fcntl@plt" :
1830(6): jmp 0x208602(%rip)
1836(5): push $0xb

"getpid@plt" :
1840(6): jmp 0x2085fa(%rip)
1846(5): push $0xc

"fread_unlocked@plt" :
1850(6): jmp 0x2085f2(%rip)
1856(5): push $0xd

"textdomain@plt" :
1860(6): jmp 0x2085ea(%rip)
1866(5): push $0xe

"fclose@plt" :
1870(6): jmp 0x2085e2(%rip)
1876(5): push $0xf

"bindtextdomain@plt" :
1880(6): jmp 0x2085da(%rip)
1886(5): push $0x10

"dcgettext@plt" :
1890(6): jmp 0x2085d2(%rip)
1896(5): push $0x11

"__ctype_get_mb_cur_max@plt" :
18a0(6): jmp 0x2085ca(%rip)
18a6(5): push $0x12

"strlen@plt" :
18b0(6): jmp 0x2085c2(%rip)
18b6(5): push $0x13

"__lxstat@plt" :
18c0(6): jmp 0x2085ba(%rip)
18c6(5): push $0x14

"__stack_chk_fail@plt" :
18d0(6): jmp 0x2085b2(%rip)
18d6(5): push $0x15

"getuid@plt" :
18e0(6): jmp 0x2085aa(%rip)
18e6(5): push $0x16

"getopt_long@plt" :
18f0(6): jmp 0x2085a2(%rip)
18f6(5): push $0x17

"mbrtowc@plt" :
1900(6): jmp 0x20859a(%rip)
1906(5): push $0x18

"strrchr@plt" :
1910(6): jmp 0x208592(%rip)
1916(5): push $0x19

"lseek@plt" :
1920(6): jmp 0x20858a(%rip)
1926(5): push $0x1a

"gettimeofday@plt" :
1930(6): jmp 0x208582(%rip)
1936(5): push $0x1b

"__assert_fail@plt" :
1940(6): jmp 0x20857a(%rip)
1946(5): push $0x1c

"memset@plt" :
1950(6): jmp 0x208572(%rip)
1956(5): push $0x1d

"close@plt" :
1960(6): jmp 0x20856a(%rip)
1966(5): push $0x1e

"strspn@plt" :
1970(6): jmp 0x208562(%rip)
1976(5): push $0x1f

"memcmp@plt" :
1980(6): jmp 0x20855a(%rip)
1986(5): push $0x20

"fputs_unlocked@plt" :
1990(6): jmp 0x208552(%rip)
1996(5): push $0x21

"calloc@plt" :
19a0(6): jmp 0x20854a(%rip)
19a6(5): push $0x22

"fputc_unlocked@plt" :
19b0(6): jmp 0x208542(%rip)
19b6(5): push $0x23

"memcpy@plt" :
19c0(6): jmp 0x20853a(%rip)
19c6(5): push $0x24

"fileno@plt" :
19d0(6): jmp 0x208532(%rip)
19d6(5): push $0x25

"getgid@plt" :
19e0(6): jmp 0x20852a(%rip)
19e6(5): push $0x26

"malloc@plt" :
19f0(6): jmp 0x208522(%rip)
19f6(5): push $0x27

"fflush@plt" :
1a00(6): jmp 0x20851a(%rip)
1a06(5): push $0x28

"nl_langinfo@plt" :
1a10(6): jmp 0x208512(%rip)
1a16(5): push $0x29

"__freading@plt" :
1a20(6): jmp 0x20850a(%rip)
1a26(5): push $0x2a

"realloc@plt" :
1a30(6): jmp 0x208502(%rip)
1a36(5): push $0x2b

"fdopen@plt" :
1a40(6): jmp 0x2084fa(%rip)
1a46(5): push $0x2c

"setlocale@plt" :
1a50(6): jmp 0x2084f2(%rip)
1a56(5): push $0x2d

"__printf_chk@plt" :
1a60(6): jmp 0x2084ea(%rip)
1a66(5): push $0x2e

"setvbuf@plt" :
1a70(6): jmp 0x2084e2(%rip)
1a76(5): push $0x2f

"mempcpy@plt" :
1a80(6): jmp 0x2084da(%rip)
1a86(5): push $0x30

"error@plt" :
1a90(6): jmp 0x2084d2(%rip)
1a96(5): push $0x31

"__explicit_bzero_chk@plt" :
1aa0(6): jmp 0x2084ca(%rip)
1aa6(5): push $0x32

"open@plt" :
1ab0(6): jmp 0x2084c2(%rip)
1ab6(5): push $0x33

"fseeko@plt" :
1ac0(6): jmp 0x2084ba(%rip)
1ac6(5): push $0x34

"fopen@plt" :
1ad0(6): jmp 0x2084b2(%rip)
1ad6(5): push $0x35

"__cxa_atexit@plt" :
1ae0(6): jmp 0x2084aa(%rip)
1ae6(5): push $0x36

"getppid@plt" :
1af0(6): jmp 0x2084a2(%rip)
1af6(5): push $0x37

"exit@plt" :
1b00(6): jmp 0x20849a(%rip)
1b06(5): push $0x38

"fwrite@plt" :
1b10(6): jmp 0x208492(%rip)
1b16(5): push $0x39

"__fprintf_chk@plt" :
1b20(6): jmp 0x20848a(%rip)
1b26(5): push $0x3a

"mbsinit@plt" :
1b30(6): jmp 0x208482(%rip)
1b36(5): push $0x3b

"iswprint@plt" :
1b40(6): jmp 0x20847a(%rip)
1b46(5): push $0x3c

"__ctype_b_loc@plt" :
1b50(6): jmp 0x208472(%rip)
1b56(5): push $0x3d

".plt.got" :
1b60(6): jmp 0x20848a(%rip)
1b66(2): nop 

"_init" :
1758(4): sub $0x8,%rsp
175c(7): mov 0x20887d(%rip),%rax
1763(3): test %rax,%rax
1766(2): jz 0x4(%rip)
1768(2): call %rax
176a(4): add $0x8,%rsp
176e(1): ret near (%rsp)

"main" :
1b70(2): push %r15
1b72(2): push %r14
1b74(3): xor %r15d,%r15d
1b77(2): push %r13
1b79(2): push %r12
1b7b(3): xor %r14d,%r14d
1b7e(1): push %rbp
1b7f(1): push %rbx
1b80(2): mov %edi,%ebp
1b82(3): mov %rsi,%rbx
1b85(3): xor %r12d,%r12d
1b88(3): xor %r13d,%r13d
1b8b(4): sub $0x38,%rsp
1b8f(3): mov (%rsi),%rdi
1b92(5): call 0xf1e(%rip)
1b97(7): lea 0x59ba(%rip),%rsi
1b9e(5): mov $0x6,%edi
1ba3(5): call 0xfffffead(%rip)
1ba8(7): lea 0x4b33(%rip),%rsi
1baf(7): lea 0x4aef(%rip),%rdi
1bb6(5): call 0xfffffcca(%rip)
1bbb(7): lea 0x4ae3(%rip),%rdi
1bc2(5): call 0xfffffc9e(%rip)
1bc7(7): lea 0x772(%rip),%rdi
1bce(5): call 0x4a32(%rip)
1bd3(5): mov $0x0,0x16(%rsp)
1bd8(5): mov $0x0,0x17(%rsp)
1bdd(9): mov $0x0,0x8(%rsp)
1be6(a): nop 0x0(%rax,%rax,1)
1bf0(7): lea 0x207e89(%rip),%rcx
1bf7(7): lea 0x4b14(%rip),%rdx
1bfe(3): xor %r8d,%r8d
1c01(3): mov %rbx,%rsi
1c04(2): mov %ebp,%edi
1c06(5): call 0xfffffcea(%rip)
1c0b(3): cmp $0xff,%eax
1c0e(6): jz 0xf6(%rip)
1c14(3): cmp $0x70,%eax
1c17(2): jz 0x51(%rip)
1c19(2): jle 0x27(%rip)
1c1b(3): cmp $0x74,%eax
1c1e(2): jz 0x7a(%rip)
1c20(2): jle 0x60(%rip)
1c22(3): cmp $0x75,%eax
1c25(6): jz 0x8b(%rip)
1c2b(3): add $0x80,%eax
1c2e(6): jnz 0x48f(%rip)
1c34(7): mov 0x20845d(%rip),%r13
1c3b(2): jmp 0xffffffb5(%rip)
1c3d(3): nop (%rax)
1c40(5): cmp $0xffffff7e,%eax
1c45(6): jz 0x547(%rip)
1c4b(2): jle 0x70(%rip)
1c4d(3): cmp $0x56,%eax
1c50(2): jz 0x76(%rip)
1c52(3): cmp $0x64,%eax
1c55(6): jnz 0x468(%rip)
1c5b(6): mov $0x1,%r14d
1c61(2): jmp 0xffffff8f(%rip)
1c63(5): nop 0x0(%rax,%rax,1)
1c68(7): mov 0x208429(%rip),%rax
1c6f(6): mov $0x1,%r12d
1c75(5): mov %rax,0x8(%rsp)
1c7a(5): jmp 0xffffff76(%rip)
1c7f(1): nop 
1c80(3): cmp $0x71,%eax
1c83(6): jnz 0x43a(%rip)
1c89(5): mov $0x1,0x17(%rsp)
1c8e(5): jmp 0xffffff62(%rip)
1c93(5): nop 0x0(%rax,%rax,1)
1c98(5): mov $0x1,0x16(%rsp)
1c9d(6): mov $0x1,%r12d
1ca3(5): jmp 0xffffff4d(%rip)
1ca8(8): nop 0x0(%rax,%rax,1)
1cb0(6): mov $0x1,%r15d
1cb6(5): jmp 0xffffff3a(%rip)
1cbb(5): cmp $0xffffff7d,%eax
1cc0(6): jnz 0x3fd(%rip)
1cc6(4): sub $0x8,%rsp
1cca(7): mov 0x2083b7(%rip),%rdi
1cd1(7): mov 0x208338(%rip),%rcx
1cd8(2): push $0x0
1cda(7): lea 0x4a19(%rip),%r9
1ce1(7): lea 0x4a1d(%rip),%r8
1ce8(7): lea 0x49b2(%rip),%rdx
1cef(7): lea 0x492e(%rip),%rsi
1cf6(2): xor %eax,%eax
1cf8(5): call 0x3288(%rip)
1cfd(2): xor %edi,%edi
1cff(5): call 0xfffffe01(%rip)
1d04(7): movsxd 0x208385(%rip),%rax
1d0b(2): sub %eax,%ebp
1d0d(3): cmp $0x1,%ebp
1d10(6): jnbe 0x38c(%rip)
1d16(2): test %ebp,%ebp
1d18(6): jnz 0x1a7(%rip)
1d1e(3): test %r13,%r13
1d21(6): mov $0x1,%r12d
1d27(7): lea 0x49a0(%rip),%rsi
1d2e(6): jz 0x40d(%rip)
1d34(7): lea 0x4993(%rip),%rsi
1d3b(9): mov $0xe,0x18(%rsp)
1d44(6): mov $0x1,%r12d
1d4a(5): mov %rsi,0x28(%rsp)
1d4f(2): xor %eax,%eax
1d51(3): mov %r13,%rdi
1d54(4): or $0xffffffff,%rcx
1d58(2): REPNZ scasb rdi(%es,10),%al
1d5a(5): mov 0x18(%rsp),%rax
1d5f(3): mov %rcx,%rdx
1d62(3): not %rdx
1d65(4): lea 0xffffffff(%rdx),%rbp
1d69(5): mov %rdx,0x20(%rsp)
1d6e(5): lea 0x1(%rax,%rbp,1),%rdi
1d73(5): call 0x336d(%rip)
1d78(5): mov 0x18(%rsp),%rdx
1d7d(5): mov 0x28(%rsp),%rsi
1d82(3): mov %rax,%rdi
1d85(3): mov %rax,%rbx
1d88(5): call 0xfffffc38(%rip)
1d8d(5): mov 0x18(%rsp),%rax
1d92(5): mov 0x20(%rsp),%rcx
1d97(3): mov %r13,%rsi
1d9a(4): lea 0x0(%rbx,%rax,1),%r8
1d9e(3): mov %rcx,%rdx
1da1(3): mov %r8,%rdi
1da4(5): call 0xfffffc1c(%rip)
1da9(3): mov %rax,%r8
1dac(3): test %rbp,%rbp
1daf(2): jz 0x1d(%rip)
1db1(3): mov %r8,%rdi
1db4(5): mov %r8,0x18(%rsp)
1db9(5): call 0xb27(%rip)
1dbe(5): mov 0x18(%rsp),%r8
1dc3(3): cmp %r8,%rax
1dc6(6): jnz 0x431(%rip)
1dcc(3): mov %r8,%rax
1dcf(3): sub %rbx,%rax
1dd2(6): jz 0x3f3(%rip)
1dd8(5): cmp $0x58,0xffffffff(%r8)
1ddd(6): jnz 0x3e8(%rip)
1de3(5): lea 0xfffffffe(%rbx,%rax,1),%rax
1de8(4): lea 0xffffffff(%rbx),%rdx
1dec(3): xor %r13d,%r13d
1def(2): jmp 0x13(%rip)
1df1(7): nop 0x0(%rax)
1df8(4): sub $0x1,%rax
1dfc(4): cmp $0x58,0x1(%rax)
1e00(2): jnz 0xb(%rip)
1e02(4): add $0x1,%r13
1e06(3): cmp %rax,%rdx
1e09(2): jnz 0xffffffef(%rip)
1e0b(4): cmp $0x2,%r13
1e0f(6): jbe 0x3b6(%rip)
1e15(3): test %r12b,%r12b
1e18(2): jz 0x4b(%rip)
1e1a(5): cmp $0x0,0x16(%rsp)
1e1f(6): jnz 0x2a8(%rip)
1e25(5): mov 0x8(%rsp),%rax
1e2a(3): test %rax,%rax
1e2d(6): jz 0xfb(%rip)
1e33(3): cmp $0x0,(%rax)
1e36(3): mov %rax,%r12
1e39(6): jz 0xef(%rip)
1e3f(3): cmp $0x2f,(%rbx)
1e42(6): jz 0x351(%rip)
1e48(3): mov %rbx,%rsi
1e4b(3): mov %r12,%rdi
1e4e(2): xor %edx,%edx
1e50(5): call 0xb40(%rip)
1e55(3): mov %rax,%r12
1e58(3): mov %rbx,%rdi
1e5b(3): mov %r12,%rbx
1e5e(5): call 0xfffff932(%rip)
1e63(3): mov %rbx,%rdi
1e66(5): call 0x34aa(%rip)
1e6b(3): test %r14b,%r14b
1e6e(3): mov %rax,%r12
1e71(6): jz 0xe0(%rip)
1e77(3): test %r15b,%r15b
1e7a(6): jz 0x143(%rip)
1e80(2): xor %edx,%edx
1e82(2): mov %ebp,%esi
1e84(3): mov %r13,%r8
1e87(5): mov $0x2,%ecx
1e8c(3): mov %rax,%rdi
1e8f(5): call 0x2b81(%rip)
1e94(2): test %eax,%eax
1e96(2): mov %eax,%ebp
1e98(6): jz 0x1f7(%rip)
1e9e(5): cmp $0x0,0x17(%rsp)
1ea3(6): jz 0x1b0(%rip)
1ea9(5): mov $0x1,%ebp
1eae(4): add $0x38,%rsp
1eb2(2): mov %ebp,%eax
1eb4(1): pop %rbx
1eb5(1): pop %rbp
1eb6(2): pop %r12
1eb8(2): pop %r13
1eba(2): pop %r14
1ebc(2): pop %r15
1ebe(1): ret near (%rsp)
1ebf(3): test %r13,%r13
1ec2(4): mov 0x0(%rbx,%rax,8),%rsi
1ec6(6): jz 0x275(%rip)
1ecc(4): or $0xffffffff,%rcx
1ed0(2): xor %eax,%eax
1ed2(3): mov %rsi,%rdi
1ed5(2): REPNZ scasb rdi(%es,10),%al
1ed7(3): mov %rcx,%rdx
1eda(3): not %rdx
1edd(3): mov %rdx,%rcx
1ee0(4): sub $0x1,%rcx
1ee4(5): mov %rcx,0x18(%rsp)
1ee9(2): jz 0xd(%rip)
1eeb(5): cmp $0x58,0xffffffff(%rsi,%rcx,1)
1ef0(6): jz 0xfffffe5a(%rip)
1ef6(3): mov %rsi,%rdi
1ef9(5): call 0x28c7(%rip)
1efe(7): lea 0x4edb(%rip),%rsi
1f05(3): mov %rax,%rbx
1f08(5): mov $0x5,%edx
1f0d(2): xor %edi,%edi
1f0f(5): call 0xfffff981(%rip)
1f14(3): mov %rbx,%rcx
1f17(3): mov %rax,%rdx
1f1a(2): xor %esi,%esi
1f1c(5): mov $0x1,%edi
1f21(2): xor %eax,%eax
1f23(5): call 0xfffffb6d(%rip)
1f28(7): lea 0x4819(%rip),%rdi
1f2f(5): call 0xfffff851(%rip)
1f34(3): test %rax,%rax
1f37(3): mov %rax,%r12
1f3a(2): jz 0xb(%rip)
1f3c(3): cmp $0x0,(%rax)
1f3f(6): jnz 0xffffff00(%rip)
1f45(7): lea 0x4791(%rip),%r12
1f4c(5): jmp 0xfffffef3(%rip)
1f51(3): test %r15b,%r15b
1f54(2): jz 0x29(%rip)
1f56(2): xor %edx,%edx
1f58(3): mov %r13,%r8
1f5b(5): mov $0x2,%ecx
1f60(2): mov %ebp,%esi
1f62(3): mov %rax,%rdi
1f65(5): call 0x2aab(%rip)
1f6a(2): test %eax,%eax
1f6c(2): js 0x2a(%rip)
1f6e(3): mov %r12,%rdi
1f71(2): xor %ebp,%ebp
1f73(5): call 0xfffff8ad(%rip)
1f78(5): jmp 0xffffff36(%rip)
1f7d(2): xor %ecx,%ecx
1f7f(2): xor %edx,%edx
1f81(3): mov %r13,%r8
1f84(2): mov %ebp,%esi
1f86(3): mov %rax,%rdi
1f89(5): call 0x2a87(%rip)
1f8e(2): test %eax,%eax
1f90(6): jns 0xb3(%rip)
1f96(5): cmp $0x0,0x17(%rsp)
1f9b(6): jnz 0xffffff0e(%rip)
1fa1(3): mov %rbx,%rdi
1fa4(5): call 0x281c(%rip)
1fa9(5): mov $0x5,%edx
1fae(3): mov %rax,%rbp
1fb1(7): lea 0x4f30(%rip),%rsi
1fb8(5): jmp 0xb2(%rip)
1fbd(2): xor %edx,%edx
1fbf(3): mov %r13,%r8
1fc2(5): mov $0x1,%ecx
1fc7(2): mov %ebp,%esi
1fc9(3): mov %rax,%rdi
1fcc(5): call 0x2a44(%rip)
1fd1(2): test %eax,%eax
1fd3(6): jnz 0xfffffecb(%rip)
1fd9(3): mov %r12,%rdi
1fdc(5): call 0xfffff844(%rip)
1fe1(7): mov 0x2080a0(%rip),%rdi
1fe8(7): mov $0x1,0x2080da(%rip)
1fef(5): call 0x7a1(%rip)
1ff4(2): test %eax,%eax
1ff6(2): mov %eax,%ebp
1ff8(6): jz 0xfffffeb6(%rip)
1ffe(5): call 0xfffff7b2(%rip)
2003(3): mov %r12,%rdi
2006(2): mov (%rax),%ebx
2008(5): call 0xfffff7b8(%rip)
200d(5): cmp $0x0,0x17(%rsp)
2012(6): jnz 0xfffffe97(%rip)
2018(7): lea 0x4730(%rip),%rsi
201f(5): mov $0x5,%edx
2024(2): xor %edi,%edi
2026(5): mov $0x1,%ebp
202b(5): call 0xfffff865(%rip)
2030(2): mov %ebx,%esi
2032(3): mov %rax,%rdx
2035(2): xor %edi,%edi
2037(2): xor %eax,%eax
2039(5): call 0xfffffa57(%rip)
203e(5): jmp 0xfffffe70(%rip)
2043(2): mov %eax,%edi
2045(5): call 0xfffff91b(%rip)
204a(2): test %eax,%eax
204c(2): jz 0xffffff8d(%rip)
204e(5): jmp 0xffffff48(%rip)
2053(3): mov %rbx,%rdi
2056(5): call 0x276a(%rip)
205b(7): lea 0x4e56(%rip),%rsi
2062(3): mov %rax,%rbp
2065(5): mov $0x5,%edx
206a(2): xor %edi,%edi
206c(5): call 0xfffff824(%rip)
2071(3): mov %rax,%rbx
2074(5): call 0xfffff73c(%rip)
2079(2): mov (%rax),%esi
207b(3): mov %rbp,%rcx
207e(3): mov %rbx,%rdx
2081(2): xor %edi,%edi
2083(2): xor %eax,%eax
2085(5): call 0xfffffa0b(%rip)
208a(5): jmp 0xfffffe1f(%rip)
208f(3): mov %r12,%rdi
2092(5): call 0xfffff78e(%rip)
2097(5): jmp 0xfffffe17(%rip)
209c(7): lea 0x4677(%rip),%rsi
20a3(5): mov $0x5,%edx
20a8(2): xor %edi,%edi
20aa(5): call 0xfffff7e6(%rip)
20af(2): xor %esi,%esi
20b1(3): mov %rax,%rdx
20b4(2): xor %edi,%edi
20b6(2): xor %eax,%eax
20b8(5): call 0xfffff9d8(%rip)
20bd(5): mov $0x1,%edi
20c2(5): call 0x2be(%rip)
20c7(7): lea 0x467a(%rip),%rdi
20ce(5): call 0xfffff6b2(%rip)
20d3(3): test %rax,%rax
20d6(3): mov %rax,%r12
20d9(2): jz 0x7(%rip)
20db(3): cmp $0x0,(%rax)
20de(2): jnz 0x1a(%rip)
20e0(5): mov 0x8(%rsp),%rax
20e5(7): lea 0x45f1(%rip),%r12
20ec(3): test %rax,%rax
20ef(2): jz 0x9(%rip)
20f1(3): cmp $0x0,(%rax)
20f4(4): cmovne %rax,%r12
20f8(3): mov %rbx,%rdi
20fb(5): call 0x7e5(%rip)
2100(3): cmp %rbx,%rax
2103(6): jz 0xfffffd45(%rip)
2109(3): mov %rbx,%rdi
210c(5): call 0x26b4(%rip)
2111(7): lea 0x4d28(%rip),%rsi
2118(3): mov %rax,%rbx
211b(5): mov $0x5,%edx
2120(2): xor %edi,%edi
2122(5): call 0xfffff76e(%rip)
2127(3): mov %rbx,%rcx
212a(3): mov %rax,%rdx
212d(2): xor %esi,%esi
212f(5): mov $0x1,%edi
2134(2): xor %eax,%eax
2136(5): call 0xfffff95a(%rip)
213b(3): mov %rsi,%rdi
213e(5): call 0x31d2(%rip)
2143(5): mov $0x58,%esi
2148(3): mov %rax,%rdi
214b(3): mov %rax,%rbx
214e(5): call 0xfffff7c2(%rip)
2153(3): test %rax,%rax
2156(4): lea 0x1(%rax),%r8
215a(2): jz 0x1c(%rip)
215c(2): xor %eax,%eax
215e(4): or $0xffffffff,%rcx
2162(3): mov %r8,%rdi
2165(2): REPNZ scasb rdi(%es,10),%al
2167(3): mov %rcx,%rax
216a(3): not %rax
216d(4): lea 0xffffffff(%rax),%rbp
2171(5): jmp 0xfffffc3b(%rip)
2176(4): or $0xffffffff,%rcx
217a(3): mov %rbx,%rdi
217d(2): REPNZ scasb rdi(%es,10),%al
217f(3): mov %rcx,%rax
2182(3): not %rax
2185(5): lea 0xffffffff(%rbx,%rax,1),%r8
218a(2): jmp 0xffffffd2(%rip)
218c(2): xor %edi,%edi
218e(5): call 0x1f2(%rip)
2193(3): mov %rbx,%rdi
2196(5): call 0x262a(%rip)
219b(7): lea 0x4cd6(%rip),%rsi
21a2(3): mov %rax,%rbx
21a5(5): mov $0x5,%edx
21aa(2): xor %edi,%edi
21ac(5): call 0xfffff6e4(%rip)
21b1(3): mov %rbx,%rcx
21b4(3): mov %rax,%rdx
21b7(2): xor %esi,%esi
21b9(5): mov $0x1,%edi
21be(2): xor %eax,%eax
21c0(5): call 0xfffff8d0(%rip)
21c5(3): mov %rbx,%rdi
21c8(5): call 0x25f8(%rip)
21cd(7): lea 0x4559(%rip),%rsi
21d4(3): mov %rax,%rbx
21d7(5): mov $0x5,%edx
21dc(2): xor %edi,%edi
21de(5): call 0xfffff6b2(%rip)
21e3(3): mov %rbx,%rcx
21e6(3): mov %rax,%rdx
21e9(2): xor %esi,%esi
21eb(5): mov $0x1,%edi
21f0(2): xor %eax,%eax
21f2(5): call 0xfffff89e(%rip)
21f7(3): mov %r8,%rdi
21fa(5): call 0x25c6(%rip)
21ff(7): lea 0x4c0a(%rip),%rsi
2206(3): mov %rax,%rbx
2209(5): mov $0x5,%edx
220e(2): xor %edi,%edi
2210(5): call 0xfffff680(%rip)
2215(3): mov %rbx,%rcx
2218(3): mov %rax,%rdx
221b(2): xor %esi,%esi
221d(5): mov $0x1,%edi
2222(2): xor %eax,%eax
2224(5): call 0xfffff86c(%rip)
2229(7): nop 0x0(%rax)
2230(2): xor %ebp,%ebp
2232(3): mov %rdx,%r9
2235(1): pop %rsi
2236(3): mov %rsp,%rdx
2239(4): and $0xfffffff0,%rsp
223d(1): push %rax
223e(1): push %rsp
223f(7): lea 0x43aa(%rip),%r8
2246(7): lea 0x4333(%rip),%rcx
224d(7): lea 0xfffff91c(%rip),%rdi
2254(6): call 0x207d7e(%rip)
225a(1): hlt 

"_start" :
2230(2): xor %ebp,%ebp
2232(3): mov %rdx,%r9
2235(1): pop %rsi
2236(3): mov %rsp,%rdx
2239(4): and $0xfffffff0,%rsp
223d(1): push %rax
223e(1): push %rsp
223f(7): lea 0x43aa(%rip),%r8
2246(7): lea 0x4333(%rip),%rcx
224d(7): lea 0xfffff91c(%rip),%rdi
2254(6): call 0x207d7e(%rip)
225a(1): hlt 

"deregister_tm_clones" :
2260(7): lea 0x207e19(%rip),%rdi
2267(1): push %rbp
2268(7): lea 0x207e11(%rip),%rax
226f(3): cmp %rdi,%rax
2272(3): mov %rsp,%rbp
2275(2): jz 0x1b(%rip)
2277(7): mov 0x207d52(%rip),%rax
227e(3): test %rax,%rax
2281(2): jz 0xf(%rip)
2283(1): pop %rbp
2284(2): jmp %rax
2286(a): nop 0x0(%rax,%rax,1)
2290(1): pop %rbp
2291(1): ret near (%rsp)

"register_tm_clones" :
22a0(7): lea 0x207dd9(%rip),%rdi
22a7(7): lea 0x207dd2(%rip),%rsi
22ae(1): push %rbp
22af(3): sub %rdi,%rsi
22b2(3): mov %rsp,%rbp
22b5(4): sar $0x3,%rsi
22b9(3): mov %rsi,%rax
22bc(4): shr $0x3f,%rax
22c0(3): add %rax,%rsi
22c3(3): sar $0x1,%rsi
22c6(2): jz 0x1a(%rip)
22c8(7): mov 0x207d19(%rip),%rax
22cf(3): test %rax,%rax
22d2(2): jz 0xe(%rip)
22d4(1): pop %rbp
22d5(2): jmp %rax
22d7(9): nop 0x0(%rax,%rax,1)
22e0(1): pop %rbp
22e1(1): ret near (%rsp)

"__do_global_dtors_aux" :
22f0(7): cmp $0x0,0x207dd1(%rip)
22f7(2): jnz 0x31(%rip)
22f9(8): cmp $0x0,0x207cef(%rip)
2301(1): push %rbp
2302(3): mov %rsp,%rbp
2305(2): jz 0xe(%rip)
2307(7): mov 0x207cfa(%rip),%rdi
230e(5): call 0xfffff852(%rip)
2313(5): call 0xffffff4d(%rip)
2318(7): mov $0x1,0x207da9(%rip)
231f(1): pop %rbp
2320(1): ret near (%rsp)
2321(7): nop 0x0(%rax)
2328(2): REP ret near (%rsp)

"frame_dummy" :
2330(1): push %rbp
2331(3): mov %rsp,%rbp
2334(1): pop %rbp
2335(5): jmp 0xffffff6b(%rip)

"maybe_close_stdout" :
2340(7): cmp $0x0,0x207d82(%rip)
2347(2): jz 0x21(%rip)
2349(4): sub $0x8,%rsp
234d(7): mov 0x207d6c(%rip),%rdi
2354(5): call 0x43c(%rip)
2359(2): test %eax,%eax
235b(2): jnz 0x12(%rip)
235d(4): add $0x8,%rsp
2361(1): ret near (%rsp)
2362(6): nop 0x0(%rax,%rax,1)
2368(5): jmp 0x4c8(%rip)
236d(5): mov $0x1,%edi
2372(5): call 0xfffff46e(%rip)
2377(9): nop 0x0(%rax,%rax,1)
2380(2): push %r13
2382(2): push %r12
2384(5): mov $0x5,%edx
2389(1): push %rbp
238a(1): push %rbx
238b(2): mov %edi,%ebp
238d(7): sub $0x88,%rsp
2394(7): mov 0x207d45(%rip),%rbx
239b(9): mov $0x28,%rax
23a4(5): mov %rax,0x78(%rsp)
23a9(2): xor %eax,%eax
23ab(2): test %edi,%edi
23ad(2): jz 0x30(%rip)
23af(7): lea 0x43da(%rip),%rsi
23b6(2): xor %edi,%edi
23b8(5): call 0xfffff4d8(%rip)
23bd(7): mov 0x207cfc(%rip),%rdi
23c4(3): mov %rax,%rdx
23c7(3): mov %rbx,%rcx
23ca(5): mov $0x1,%esi
23cf(2): xor %eax,%eax
23d1(5): call 0xfffff74f(%rip)
23d6(2): mov %ebp,%edi
23d8(5): call 0xfffff728(%rip)
23dd(7): lea 0x43d4(%rip),%rsi
23e4(2): xor %edi,%edi
23e6(5): call 0xfffff4aa(%rip)
23eb(3): mov %rbx,%rdx
23ee(3): mov %rax,%rsi
23f1(5): mov $0x1,%edi
23f6(2): xor %eax,%eax
23f8(5): call 0xfffff668(%rip)
23fd(7): mov 0x207c84(%rip),%rbx
2404(7): lea 0x43d5(%rip),%rsi
240b(5): mov $0x5,%edx
2410(2): xor %edi,%edi
2412(5): call 0xfffff47e(%rip)
2417(3): mov %rbx,%rsi
241a(3): mov %rax,%rdi
241d(5): call 0xfffff573(%rip)
2422(7): mov 0x207c5f(%rip),%rbx
2429(7): lea 0x4488(%rip),%rsi
2430(5): mov $0x5,%edx
2435(2): xor %edi,%edi
2437(5): call 0xfffff459(%rip)
243c(3): mov %rbx,%rsi
243f(3): mov %rax,%rdi
2442(5): call 0xfffff54e(%rip)
2447(7): mov 0x207c3a(%rip),%rsi
244e(5): mov $0xa,%edi
2453(5): call 0xfffff55d(%rip)
2458(7): mov 0x207c29(%rip),%rbx
245f(7): lea 0x44a2(%rip),%rsi
2466(5): mov $0x5,%edx
246b(2): xor %edi,%edi
246d(5): call 0xfffff423(%rip)
2472(3): mov %rbx,%rsi
2475(3): mov %rax,%rdi
2478(5): call 0xfffff518(%rip)
247d(7): mov 0x207c04(%rip),%rbx
2484(7): lea 0x454d(%rip),%rsi
248b(5): mov $0x5,%edx
2490(2): xor %edi,%edi
2492(5): call 0xfffff3fe(%rip)
2497(3): mov %rbx,%rsi
249a(3): mov %rax,%rdi
249d(5): call 0xfffff4f3(%rip)
24a2(7): mov 0x207bdf(%rip),%rbx
24a9(7): lea 0x45c8(%rip),%rsi
24b0(5): mov $0x5,%edx
24b5(2): xor %edi,%edi
24b7(5): call 0xfffff3d9(%rip)
24bc(3): mov %rbx,%rsi
24bf(3): mov %rax,%rdi
24c2(5): call 0xfffff4ce(%rip)
24c7(7): mov 0x207bba(%rip),%rbx
24ce(7): lea 0x4713(%rip),%rsi
24d5(5): mov $0x5,%edx
24da(2): xor %edi,%edi
24dc(5): call 0xfffff3b4(%rip)
24e1(3): mov %rbx,%rsi
24e4(3): mov %rax,%rdi
24e7(5): call 0xfffff4a9(%rip)
24ec(7): mov 0x207b95(%rip),%rbx
24f3(7): lea 0x47d6(%rip),%rsi
24fa(5): mov $0x5,%edx
24ff(2): xor %edi,%edi
2501(5): call 0xfffff38f(%rip)
2506(3): mov %rbx,%rsi
2509(3): mov %rax,%rdi
250c(5): call 0xfffff484(%rip)
2511(7): mov 0x207b70(%rip),%rbx
2518(7): lea 0x47e1(%rip),%rsi
251f(5): mov $0x5,%edx
2524(2): xor %edi,%edi
2526(5): call 0xfffff36a(%rip)
252b(3): mov %rbx,%rsi
252e(3): mov %rax,%rdi
2531(7): lea 0x40ec(%rip),%rbx
2538(5): call 0xfffff458(%rip)
253d(7): lea 0x40e7(%rip),%rax
2544(7): lea 0x4121(%rip),%rcx
254b(9): mov $0x0,0x60(%rsp)
2554(9): mov $0x0,0x68(%rsp)
255d(3): mov %rsp,%rdx
2560(4): mov %rax,(%rsp)
2564(7): lea 0x40c2(%rip),%rax
256b(5): mov %rcx,0x30(%rsp)
2570(7): lea 0x40ff(%rip),%rcx
2577(5): mov %rax,0x8(%rsp)
257c(7): lea 0x4122(%rip),%rax
2583(5): mov %rcx,0x40(%rsp)
2588(7): lea 0x40f1(%rip),%rcx
258f(5): mov %rax,0x10(%rsp)
2594(7): lea 0x40a2(%rip),%rax
259b(5): mov %rcx,0x50(%rsp)
25a0(5): mov %rax,0x18(%rsp)
25a5(7): lea 0x40a7(%rip),%rax
25ac(5): mov %rax,0x20(%rsp)
25b1(7): lea 0x40a5(%rip),%rax
25b8(5): mov %rax,0x28(%rsp)
25bd(5): mov %rax,0x38(%rsp)
25c2(5): mov %rax,0x48(%rsp)
25c7(5): mov %rax,0x58(%rsp)
25cc(4): nop 0x0(%rax)
25d0(4): add $0x10,%rdx
25d4(3): mov (%rdx),%rdi
25d7(3): test %rdi,%rdi
25da(2): jz 0x15(%rip)
25dc(5): mov $0x7,%ecx
25e1(3): mov %rbx,%rsi
25e4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
25e6(3): setnbe %al
25e9(2): sbb $0x0,%al
25eb(2): test %al,%al
25ed(2): jnz 0xffffffe3(%rip)
25ef(4): mov 0x8(%rdx),%r12
25f3(2): xor %edi,%edi
25f5(5): mov $0x5,%edx
25fa(7): lea 0x4089(%rip),%rsi
2601(3): test %r12,%r12
2604(6): jz 0xc7(%rip)
260a(5): call 0xfffff286(%rip)
260f(7): lea 0x4722(%rip),%rcx
2616(7): lea 0x4084(%rip),%rdx
261d(3): mov %rax,%rsi
2620(5): mov $0x1,%edi
2625(2): xor %eax,%eax
2627(5): call 0xfffff439(%rip)
262c(2): xor %esi,%esi
262e(5): mov $0x5,%edi
2633(5): call 0xfffff41d(%rip)
2638(3): test %rax,%rax
263b(2): jz 0x1e(%rip)
263d(7): lea 0x406b(%rip),%rsi
2644(5): mov $0x3,%edx
2649(3): mov %rax,%rdi
264c(5): call 0xfffff184(%rip)
2651(2): test %eax,%eax
2653(6): jnz 0x10d(%rip)
2659(7): lea 0x4053(%rip),%rsi
2660(2): xor %edi,%edi
2662(5): mov $0x5,%edx
2667(5): call 0xfffff229(%rip)
266c(7): lea 0x3fb1(%rip),%rcx
2673(7): lea 0x46be(%rip),%rdx
267a(3): mov %rax,%rsi
267d(5): mov $0x1,%edi
2682(2): xor %eax,%eax
2684(5): call 0xfffff3dc(%rip)
2689(3): cmp %rbx,%r12
268c(7): lea 0x3fb4(%rip),%rcx
2693(7): lea 0x4ebe(%rip),%rbx
269a(4): cmove %rcx,%rbx
269e(7): lea 0x4703(%rip),%rsi
26a5(2): xor %edi,%edi
26a7(5): mov $0x5,%edx
26ac(5): call 0xfffff1e4(%rip)
26b1(3): mov %rbx,%rcx
26b4(3): mov %rax,%rsi
26b7(3): mov %r12,%rdx
26ba(5): mov $0x1,%edi
26bf(2): xor %eax,%eax
26c1(5): call 0xfffff39f(%rip)
26c6(5): jmp 0xfffffd10(%rip)
26cb(5): call 0xfffff1c5(%rip)
26d0(7): lea 0x4661(%rip),%rcx
26d7(7): lea 0x3fc3(%rip),%rdx
26de(3): mov %rax,%rsi
26e1(5): mov $0x1,%edi
26e6(2): xor %eax,%eax
26e8(5): call 0xfffff378(%rip)
26ed(2): xor %esi,%esi
26ef(5): mov $0x5,%edi
26f4(5): call 0xfffff35c(%rip)
26f9(3): test %rax,%rax
26fc(2): jz 0x1a(%rip)
26fe(7): lea 0x3faa(%rip),%rsi
2705(5): mov $0x3,%edx
270a(3): mov %rax,%rdi
270d(5): call 0xfffff0c3(%rip)
2712(2): test %eax,%eax
2714(2): jnz 0x45(%rip)
2716(7): lea 0x3f96(%rip),%rsi
271d(5): mov $0x5,%edx
2722(2): xor %edi,%edi
2724(7): lea 0x3ef9(%rip),%r12
272b(7): lea 0x3f15(%rip),%rbx
2732(5): call 0xfffff15e(%rip)
2737(7): lea 0x3ee6(%rip),%rcx
273e(7): lea 0x45f3(%rip),%rdx
2745(3): mov %rax,%rsi
2748(5): mov $0x1,%edi
274d(2): xor %eax,%eax
274f(5): call 0xfffff311(%rip)
2754(5): jmp 0xffffff4a(%rip)
2759(7): lea 0x3ec4(%rip),%r12
2760(7): mov 0x207921(%rip),%r13
2767(7): lea 0x45f2(%rip),%rsi
276e(2): xor %edi,%edi
2770(5): mov $0x5,%edx
2775(5): call 0xfffff11b(%rip)
277a(3): mov %r13,%rsi
277d(3): mov %rax,%rdi
2780(5): call 0xfffff210(%rip)
2785(5): jmp 0xfffffed4(%rip)

"usage" :
2380(2): push %r13
2382(2): push %r12
2384(5): mov $0x5,%edx
2389(1): push %rbp
238a(1): push %rbx
238b(2): mov %edi,%ebp
238d(7): sub $0x88,%rsp
2394(7): mov 0x207d45(%rip),%rbx
239b(9): mov $0x28,%rax
23a4(5): mov %rax,0x78(%rsp)
23a9(2): xor %eax,%eax
23ab(2): test %edi,%edi
23ad(2): jz 0x30(%rip)
23af(7): lea 0x43da(%rip),%rsi
23b6(2): xor %edi,%edi
23b8(5): call 0xfffff4d8(%rip)
23bd(7): mov 0x207cfc(%rip),%rdi
23c4(3): mov %rax,%rdx
23c7(3): mov %rbx,%rcx
23ca(5): mov $0x1,%esi
23cf(2): xor %eax,%eax
23d1(5): call 0xfffff74f(%rip)
23d6(2): mov %ebp,%edi
23d8(5): call 0xfffff728(%rip)
23dd(7): lea 0x43d4(%rip),%rsi
23e4(2): xor %edi,%edi
23e6(5): call 0xfffff4aa(%rip)
23eb(3): mov %rbx,%rdx
23ee(3): mov %rax,%rsi
23f1(5): mov $0x1,%edi
23f6(2): xor %eax,%eax
23f8(5): call 0xfffff668(%rip)
23fd(7): mov 0x207c84(%rip),%rbx
2404(7): lea 0x43d5(%rip),%rsi
240b(5): mov $0x5,%edx
2410(2): xor %edi,%edi
2412(5): call 0xfffff47e(%rip)
2417(3): mov %rbx,%rsi
241a(3): mov %rax,%rdi
241d(5): call 0xfffff573(%rip)
2422(7): mov 0x207c5f(%rip),%rbx
2429(7): lea 0x4488(%rip),%rsi
2430(5): mov $0x5,%edx
2435(2): xor %edi,%edi
2437(5): call 0xfffff459(%rip)
243c(3): mov %rbx,%rsi
243f(3): mov %rax,%rdi
2442(5): call 0xfffff54e(%rip)
2447(7): mov 0x207c3a(%rip),%rsi
244e(5): mov $0xa,%edi
2453(5): call 0xfffff55d(%rip)
2458(7): mov 0x207c29(%rip),%rbx
245f(7): lea 0x44a2(%rip),%rsi
2466(5): mov $0x5,%edx
246b(2): xor %edi,%edi
246d(5): call 0xfffff423(%rip)
2472(3): mov %rbx,%rsi
2475(3): mov %rax,%rdi
2478(5): call 0xfffff518(%rip)
247d(7): mov 0x207c04(%rip),%rbx
2484(7): lea 0x454d(%rip),%rsi
248b(5): mov $0x5,%edx
2490(2): xor %edi,%edi
2492(5): call 0xfffff3fe(%rip)
2497(3): mov %rbx,%rsi
249a(3): mov %rax,%rdi
249d(5): call 0xfffff4f3(%rip)
24a2(7): mov 0x207bdf(%rip),%rbx
24a9(7): lea 0x45c8(%rip),%rsi
24b0(5): mov $0x5,%edx
24b5(2): xor %edi,%edi
24b7(5): call 0xfffff3d9(%rip)
24bc(3): mov %rbx,%rsi
24bf(3): mov %rax,%rdi
24c2(5): call 0xfffff4ce(%rip)
24c7(7): mov 0x207bba(%rip),%rbx
24ce(7): lea 0x4713(%rip),%rsi
24d5(5): mov $0x5,%edx
24da(2): xor %edi,%edi
24dc(5): call 0xfffff3b4(%rip)
24e1(3): mov %rbx,%rsi
24e4(3): mov %rax,%rdi
24e7(5): call 0xfffff4a9(%rip)
24ec(7): mov 0x207b95(%rip),%rbx
24f3(7): lea 0x47d6(%rip),%rsi
24fa(5): mov $0x5,%edx
24ff(2): xor %edi,%edi
2501(5): call 0xfffff38f(%rip)
2506(3): mov %rbx,%rsi
2509(3): mov %rax,%rdi
250c(5): call 0xfffff484(%rip)
2511(7): mov 0x207b70(%rip),%rbx
2518(7): lea 0x47e1(%rip),%rsi
251f(5): mov $0x5,%edx
2524(2): xor %edi,%edi
2526(5): call 0xfffff36a(%rip)
252b(3): mov %rbx,%rsi
252e(3): mov %rax,%rdi
2531(7): lea 0x40ec(%rip),%rbx
2538(5): call 0xfffff458(%rip)
253d(7): lea 0x40e7(%rip),%rax
2544(7): lea 0x4121(%rip),%rcx
254b(9): mov $0x0,0x60(%rsp)
2554(9): mov $0x0,0x68(%rsp)
255d(3): mov %rsp,%rdx
2560(4): mov %rax,(%rsp)
2564(7): lea 0x40c2(%rip),%rax
256b(5): mov %rcx,0x30(%rsp)
2570(7): lea 0x40ff(%rip),%rcx
2577(5): mov %rax,0x8(%rsp)
257c(7): lea 0x4122(%rip),%rax
2583(5): mov %rcx,0x40(%rsp)
2588(7): lea 0x40f1(%rip),%rcx
258f(5): mov %rax,0x10(%rsp)
2594(7): lea 0x40a2(%rip),%rax
259b(5): mov %rcx,0x50(%rsp)
25a0(5): mov %rax,0x18(%rsp)
25a5(7): lea 0x40a7(%rip),%rax
25ac(5): mov %rax,0x20(%rsp)
25b1(7): lea 0x40a5(%rip),%rax
25b8(5): mov %rax,0x28(%rsp)
25bd(5): mov %rax,0x38(%rsp)
25c2(5): mov %rax,0x48(%rsp)
25c7(5): mov %rax,0x58(%rsp)
25cc(4): nop 0x0(%rax)
25d0(4): add $0x10,%rdx
25d4(3): mov (%rdx),%rdi
25d7(3): test %rdi,%rdi
25da(2): jz 0x15(%rip)
25dc(5): mov $0x7,%ecx
25e1(3): mov %rbx,%rsi
25e4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
25e6(3): setnbe %al
25e9(2): sbb $0x0,%al
25eb(2): test %al,%al
25ed(2): jnz 0xffffffe3(%rip)
25ef(4): mov 0x8(%rdx),%r12
25f3(2): xor %edi,%edi
25f5(5): mov $0x5,%edx
25fa(7): lea 0x4089(%rip),%rsi
2601(3): test %r12,%r12
2604(6): jz 0xc7(%rip)
260a(5): call 0xfffff286(%rip)
260f(7): lea 0x4722(%rip),%rcx
2616(7): lea 0x4084(%rip),%rdx
261d(3): mov %rax,%rsi
2620(5): mov $0x1,%edi
2625(2): xor %eax,%eax
2627(5): call 0xfffff439(%rip)
262c(2): xor %esi,%esi
262e(5): mov $0x5,%edi
2633(5): call 0xfffff41d(%rip)
2638(3): test %rax,%rax
263b(2): jz 0x1e(%rip)
263d(7): lea 0x406b(%rip),%rsi
2644(5): mov $0x3,%edx
2649(3): mov %rax,%rdi
264c(5): call 0xfffff184(%rip)
2651(2): test %eax,%eax
2653(6): jnz 0x10d(%rip)
2659(7): lea 0x4053(%rip),%rsi
2660(2): xor %edi,%edi
2662(5): mov $0x5,%edx
2667(5): call 0xfffff229(%rip)
266c(7): lea 0x3fb1(%rip),%rcx
2673(7): lea 0x46be(%rip),%rdx
267a(3): mov %rax,%rsi
267d(5): mov $0x1,%edi
2682(2): xor %eax,%eax
2684(5): call 0xfffff3dc(%rip)
2689(3): cmp %rbx,%r12
268c(7): lea 0x3fb4(%rip),%rcx
2693(7): lea 0x4ebe(%rip),%rbx
269a(4): cmove %rcx,%rbx
269e(7): lea 0x4703(%rip),%rsi
26a5(2): xor %edi,%edi
26a7(5): mov $0x5,%edx
26ac(5): call 0xfffff1e4(%rip)
26b1(3): mov %rbx,%rcx
26b4(3): mov %rax,%rsi
26b7(3): mov %r12,%rdx
26ba(5): mov $0x1,%edi
26bf(2): xor %eax,%eax
26c1(5): call 0xfffff39f(%rip)
26c6(5): jmp 0xfffffd10(%rip)
26cb(5): call 0xfffff1c5(%rip)
26d0(7): lea 0x4661(%rip),%rcx
26d7(7): lea 0x3fc3(%rip),%rdx
26de(3): mov %rax,%rsi
26e1(5): mov $0x1,%edi
26e6(2): xor %eax,%eax
26e8(5): call 0xfffff378(%rip)
26ed(2): xor %esi,%esi
26ef(5): mov $0x5,%edi
26f4(5): call 0xfffff35c(%rip)
26f9(3): test %rax,%rax
26fc(2): jz 0x1a(%rip)
26fe(7): lea 0x3faa(%rip),%rsi
2705(5): mov $0x3,%edx
270a(3): mov %rax,%rdi
270d(5): call 0xfffff0c3(%rip)
2712(2): test %eax,%eax
2714(2): jnz 0x45(%rip)
2716(7): lea 0x3f96(%rip),%rsi
271d(5): mov $0x5,%edx
2722(2): xor %edi,%edi
2724(7): lea 0x3ef9(%rip),%r12
272b(7): lea 0x3f15(%rip),%rbx
2732(5): call 0xfffff15e(%rip)
2737(7): lea 0x3ee6(%rip),%rcx
273e(7): lea 0x45f3(%rip),%rdx
2745(3): mov %rax,%rsi
2748(5): mov $0x1,%edi
274d(2): xor %eax,%eax
274f(5): call 0xfffff311(%rip)
2754(5): jmp 0xffffff4a(%rip)
2759(7): lea 0x3ec4(%rip),%r12
2760(7): mov 0x207921(%rip),%r13
2767(7): lea 0x45f2(%rip),%rsi
276e(2): xor %edi,%edi
2770(5): mov $0x5,%edx
2775(5): call 0xfffff11b(%rip)
277a(3): mov %r13,%rsi
277d(3): mov %rax,%rdi
2780(5): call 0xfffff210(%rip)
2785(5): jmp 0xfffffed4(%rip)

"close_stream" :
2790(2): push %r12
2792(1): push %rbp
2793(3): mov %rdi,%rbp
2796(1): push %rbx
2797(5): call 0xfffff059(%rip)
279c(3): mov 0x0(%rbp),%ebx
279f(3): mov %rbp,%rdi
27a2(3): mov %rax,%r12
27a5(5): call 0x2bcb(%rip)
27aa(3): and $0x20,%ebx
27ad(2): test %ebx,%ebx
27af(2): jnz 0x19(%rip)
27b1(2): test %eax,%eax
27b3(2): jz 0xc(%rip)
27b5(3): test %r12,%r12
27b8(5): mov $0xffffffff,%eax
27bd(2): jz 0x3b(%rip)
27bf(1): pop %rbx
27c0(1): pop %rbp
27c1(2): pop %r12
27c3(1): ret near (%rsp)
27c4(4): nop 0x0(%rax)
27c8(2): test %eax,%eax
27ca(2): jnz 0x1e(%rip)
27cc(5): call 0xffffefe4(%rip)
27d1(6): mov $0x0,(%rax)
27d7(5): mov $0xffffffff,%eax
27dc(1): pop %rbx
27dd(1): pop %rbp
27de(2): pop %r12
27e0(1): ret near (%rsp)
27e1(7): nop 0x0(%rax)
27e8(1): pop %rbx
27e9(5): mov $0xffffffff,%eax
27ee(1): pop %rbp
27ef(2): pop %r12
27f1(1): ret near (%rsp)
27f2(6): nop 0x0(%rax,%rax,1)
27f8(5): call 0xffffefb8(%rip)
27fd(3): cmp $0x9,(%rax)
2800(1): pop %rbx
2801(1): pop %rbp
2802(2): pop %r12
2804(3): setnz %al
2807(3): movzx %al,%eax
280a(2): neg %eax
280c(1): ret near (%rsp)

"close_stdout_set_file_name" :
2810(7): mov %rdi,0x2078c1(%rip)
2817(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2820(7): mov %dil,0x2078a9(%rip)
2827(1): ret near (%rsp)

"close_stdout" :
2830(1): push %rbp
2831(1): push %rbx
2832(4): sub $0x8,%rsp
2836(7): mov 0x20784b(%rip),%rdi
283d(5): call 0xffffff53(%rip)
2842(2): test %eax,%eax
2844(2): jz 0x18(%rip)
2846(5): call 0xffffef6a(%rip)
284b(7): cmp $0x0,0x20787e(%rip)
2852(3): mov %rax,%rbx
2855(2): jz 0x1e(%rip)
2857(3): cmp $0x20,(%rax)
285a(2): jnz 0x19(%rip)
285c(7): mov 0x20785d(%rip),%rdi
2863(5): call 0xffffff2d(%rip)
2868(2): test %eax,%eax
286a(2): jnz 0x48(%rip)
286c(4): add $0x8,%rsp
2870(1): pop %rbx
2871(1): pop %rbp
2872(1): ret near (%rsp)
2873(7): lea 0x3ed5(%rip),%rsi
287a(2): xor %edi,%edi
287c(5): mov $0x5,%edx
2881(5): call 0xfffff00f(%rip)
2886(7): mov 0x20784b(%rip),%rdi
288d(3): mov %rax,%rbp
2890(3): test %rdi,%rdi
2893(2): jz 0x2a(%rip)
2895(5): call 0x1d2b(%rip)
289a(2): mov (%rbx),%esi
289c(7): lea 0x4670(%rip),%rdx
28a3(3): mov %rax,%rcx
28a6(3): mov %rbp,%r8
28a9(2): xor %edi,%edi
28ab(2): xor %eax,%eax
28ad(5): call 0xfffff1e3(%rip)
28b2(6): mov 0x207760(%rip),%edi
28b8(5): call 0xffffef28(%rip)
28bd(2): mov (%rbx),%esi
28bf(7): lea 0x4651(%rip),%rdx
28c6(3): mov %rax,%rcx
28c9(2): xor %edi,%edi
28cb(2): xor %eax,%eax
28cd(5): call 0xfffff1c3(%rip)
28d2(2): jmp 0xffffffe0(%rip)

"last_component" :
28e0(3): movzx (%rdi),%edx
28e3(3): mov %rdi,%rax
28e6(3): cmp $0x2f,%dl
28e9(2): jnz 0x13(%rip)
28eb(5): nop 0x0(%rax,%rax,1)
28f0(4): add $0x1,%rax
28f4(3): movzx (%rax),%edx
28f7(3): cmp $0x2f,%dl
28fa(2): jz 0xfffffff6(%rip)
28fc(2): test %dl,%dl
28fe(2): jz 0x3c(%rip)
2900(3): mov %rax,%rcx
2903(2): xor %esi,%esi
2905(2): jmp 0x20(%rip)
2907(9): nop 0x0(%rax,%rax,1)
2910(3): test %sil,%sil
2913(2): jz 0x7(%rip)
2915(3): mov %rcx,%rax
2918(2): xor %esi,%esi
291a(4): add $0x1,%rcx
291e(3): movzx (%rcx),%edx
2921(2): test %dl,%dl
2923(2): jz 0x17(%rip)
2925(3): cmp $0x2f,%dl
2928(2): jnz 0xffffffe8(%rip)
292a(4): add $0x1,%rcx
292e(3): movzx (%rcx),%edx
2931(5): mov $0x1,%esi
2936(2): test %dl,%dl
2938(2): jnz 0xffffffed(%rip)
293a(2): REP ret near (%rsp)

"base_len" :
2940(1): push %rbx
2941(3): mov %rdi,%rbx
2944(5): call 0xffffef6c(%rip)
2949(4): cmp $0x1,%rax
294d(2): jbe 0xd(%rip)
294f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
2954(4): lea 0xffffffff(%rax),%rdx
2958(2): jz 0x10(%rip)
295a(1): pop %rbx
295b(1): ret near (%rsp)
295c(4): nop 0x0(%rax)
2960(3): mov %rax,%rdx
2963(5): nop 0x0(%rax,%rax,1)
2968(4): cmp $0x1,%rdx
296c(2): jz 0x14(%rip)
296e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
2973(4): lea 0xffffffff(%rdx),%rax
2977(2): jz 0xffffffe9(%rip)
2979(3): mov %rdx,%rax
297c(1): pop %rbx
297d(1): ret near (%rsp)
297e(2): nop 
2980(5): mov $0x1,%eax
2985(1): pop %rbx
2986(1): ret near (%rsp)

"file_name_concat" :
2990(4): sub $0x8,%rsp
2994(5): call 0x1c(%rip)
2999(3): test %rax,%rax
299c(2): jz 0x7(%rip)
299e(4): add $0x8,%rsp
29a2(1): ret near (%rsp)
29a3(5): call 0x298d(%rip)

"mfile_name_concat" :
29b0(2): push %r15
29b2(2): push %r14
29b4(3): mov %rdx,%r15
29b7(2): push %r13
29b9(2): push %r12
29bb(3): mov %rdi,%r12
29be(1): push %rbp
29bf(1): push %rbx
29c0(3): mov %rsi,%rbp
29c3(4): sub $0x18,%rsp
29c7(5): call 0xffffff19(%rip)
29cc(3): mov %rax,%rbx
29cf(3): mov %rax,%rdi
29d2(5): call 0xffffff6e(%rip)
29d7(3): sub %r12,%rbx
29da(3): mov %rax,%r13
29dd(3): mov %rbp,%rdi
29e0(3): add %rax,%rbx
29e3(5): call 0xffffeecd(%rip)
29e8(3): test %r13,%r13
29eb(3): mov %rax,%r14
29ee(2): jz 0x32(%rip)
29f0(6): cmp $0x2f,0xffffffff(%r12,%rbx,1)
29f6(6): jz 0xaa(%rip)
29fc(2): xor %eax,%eax
29fe(4): cmp $0x2f,0x0(%rbp)
2a02(5): mov $0x0,%edx
2a07(3): setnz %al
2a0a(4): mov %rax,(%rsp)
2a0e(5): mov $0x2f,%eax
2a13(3): cmove %edx,%eax
2a16(4): mov %al,0xf(%rsp)
2a1a(2): jmp 0x24(%rip)
2a1c(4): nop 0x0(%rax)
2a20(2): xor %eax,%eax
2a22(4): cmp $0x2f,0x0(%rbp)
2a26(5): mov $0x0,%edx
2a2b(3): setz %al
2a2e(4): mov %rax,(%rsp)
2a32(5): mov $0x2e,%eax
2a37(3): cmovne %edx,%eax
2a3a(4): mov %al,0xf(%rsp)
2a3e(5): lea 0x1(%rbx,%r14,1),%rdi
2a43(4): add (%rsp),%rdi
2a47(5): call 0xffffefa9(%rip)
2a4c(3): test %rax,%rax
2a4f(3): mov %rax,%r13
2a52(2): jz 0x34(%rip)
2a54(3): mov %rax,%rdi
2a57(3): mov %rbx,%rdx
2a5a(3): mov %r12,%rsi
2a5d(5): call 0xfffff023(%rip)
2a62(5): movzx 0xf(%rsp),%ecx
2a67(4): mov (%rsp),%rdi
2a6b(3): add %rax,%rdi
2a6e(3): test %r15,%r15
2a71(2): mov %cl,(%rax)
2a73(2): jz 0x5(%rip)
2a75(3): mov %rdi,(%r15)
2a78(3): mov %r14,%rdx
2a7b(3): mov %rbp,%rsi
2a7e(5): call 0xfffff002(%rip)
2a83(3): mov $0x0,(%rax)
2a86(4): add $0x18,%rsp
2a8a(3): mov %r13,%rax
2a8d(1): pop %rbx
2a8e(1): pop %rbp
2a8f(2): pop %r12
2a91(2): pop %r13
2a93(2): pop %r14
2a95(2): pop %r15
2a97(1): ret near (%rsp)
2a98(8): nop 0x0(%rax,%rax,1)
2aa0(8): mov $0x0,(%rsp)
2aa8(5): mov $0x0,0xf(%rsp)
2aad(2): jmp 0xffffff91(%rip)

"set_program_name" :
2ab0(3): test %rdi,%rdi
2ab3(1): push %rbx
2ab4(2): jz 0x79(%rip)
2ab6(5): mov $0x2f,%esi
2abb(3): mov %rdi,%rbx
2abe(5): call 0xffffee52(%rip)
2ac3(3): test %rax,%rax
2ac6(2): jz 0x57(%rip)
2ac8(4): lea 0x1(%rax),%r8
2acc(3): mov %r8,%rdx
2acf(3): sub %rbx,%rdx
2ad2(4): cmp $0x6,%rdx
2ad6(2): jle 0x47(%rip)
2ad8(4): lea 0xfffffffa(%rax),%rsi
2adc(7): lea 0x4475(%rip),%rdi
2ae3(5): mov $0x7,%ecx
2ae8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2aea(3): setnbe %dl
2aed(3): sbb $0x0,%dl
2af0(2): test %dl,%dl
2af2(2): jnz 0x2b(%rip)
2af4(7): lea 0x4465(%rip),%rdi
2afb(5): mov $0x3,%ecx
2b00(3): mov %r8,%rsi
2b03(3): mov %r8,%rbx
2b06(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2b08(3): setnbe %dl
2b0b(3): sbb $0x0,%dl
2b0e(2): test %dl,%dl
2b10(2): jnz 0xd(%rip)
2b12(4): lea 0x4(%rax),%rbx
2b16(7): mov %rbx,0x207563(%rip)
2b1d(7): mov %rbx,0x2075bc(%rip)
2b24(7): mov %rbx,0x207575(%rip)
2b2b(1): pop %rbx
2b2c(1): ret near (%rsp)
2b2d(7): mov 0x20758c(%rip),%rcx
2b34(7): lea 0x43e5(%rip),%rdi
2b3b(5): mov $0x37,%edx
2b40(5): mov $0x1,%esi
2b45(5): call 0xffffefcb(%rip)
2b4a(5): call 0xffffec56(%rip)

"gettext_quote.part.1" :
2b50(1): push %rbp
2b51(1): push %rbx
2b52(3): mov %rdi,%rbp
2b55(2): mov %esi,%ebx
2b57(4): sub $0x8,%rsp
2b5b(5): call 0x2a25(%rip)
2b60(3): movzx (%rax),%edx
2b63(3): and $0xdf,%edx
2b66(3): cmp $0x55,%dl
2b69(2): jz 0x77(%rip)
2b6b(3): cmp $0x47,%dl
2b6e(2): jz 0x22(%rip)
2b70(7): lea 0x43fc(%rip),%rax
2b77(7): lea 0x43f7(%rip),%rdx
2b7e(3): cmp $0x9,%ebx
2b81(4): cmovne %rdx,%rax
2b85(4): add $0x8,%rsp
2b89(1): pop %rbx
2b8a(1): pop %rbp
2b8b(1): ret near (%rsp)
2b8c(4): nop 0x0(%rax)
2b90(4): movzx 0x1(%rax),%edx
2b94(3): and $0xdf,%edx
2b97(3): cmp $0x42,%dl
2b9a(2): jnz 0xffffffd6(%rip)
2b9c(4): cmp $0x31,0x2(%rax)
2ba0(2): jnz 0xffffffd0(%rip)
2ba2(4): cmp $0x38,0x3(%rax)
2ba6(2): jnz 0xffffffca(%rip)
2ba8(4): cmp $0x30,0x4(%rax)
2bac(2): jnz 0xffffffc4(%rip)
2bae(4): cmp $0x33,0x5(%rax)
2bb2(2): jnz 0xffffffbe(%rip)
2bb4(4): cmp $0x30,0x6(%rax)
2bb8(2): jnz 0xffffffb8(%rip)
2bba(4): cmp $0x0,0x7(%rax)
2bbe(2): jnz 0xffffffb2(%rip)
2bc0(4): cmp $0x60,0x0(%rbp)
2bc4(7): lea 0x43a1(%rip),%rax
2bcb(7): lea 0x439e(%rip),%rdx
2bd2(4): cmovne %rdx,%rax
2bd6(4): add $0x8,%rsp
2bda(1): pop %rbx
2bdb(1): pop %rbp
2bdc(1): ret near (%rsp)
2bdd(3): nop (%rax)
2be0(4): movzx 0x1(%rax),%edx
2be4(3): and $0xdf,%edx
2be7(3): cmp $0x54,%dl
2bea(2): jnz 0xffffff86(%rip)
2bec(4): movzx 0x2(%rax),%edx
2bf0(3): and $0xdf,%edx
2bf3(3): cmp $0x46,%dl
2bf6(6): jnz 0xffffff7a(%rip)
2bfc(4): cmp $0x2d,0x3(%rax)
2c00(6): jnz 0xffffff70(%rip)
2c06(4): cmp $0x38,0x4(%rax)
2c0a(6): jnz 0xffffff66(%rip)
2c10(4): cmp $0x0,0x5(%rax)
2c14(6): jnz 0xffffff5c(%rip)
2c1a(4): cmp $0x60,0x0(%rbp)
2c1e(7): lea 0x433f(%rip),%rax
2c25(7): lea 0x433c(%rip),%rdx
2c2c(4): cmovne %rdx,%rax
2c30(4): add $0x8,%rsp
2c34(1): pop %rbx
2c35(1): pop %rbp
2c36(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2c40(2): push %r15
2c42(2): push %r14
2c44(3): mov %r8d,%r15d
2c47(2): push %r13
2c49(2): push %r12
2c4b(3): mov %rdi,%r14
2c4e(1): push %rbp
2c4f(1): push %rbx
2c50(3): mov %r9d,%ebx
2c53(3): mov %rsi,%r13
2c56(3): mov %rcx,%rbp
2c59(3): and $0x2,%ebx
2c5c(7): sub $0xb8,%rsp
2c63(8): mov 0xf0(%rsp),%rax
2c6b(5): mov %rdx,0x10(%rsp)
2c70(5): mov %r8d,0x8(%rsp)
2c75(5): mov %r9d,0x78(%rsp)
2c7a(5): mov %rax,0x20(%rsp)
2c7f(8): mov 0xf8(%rsp),%rax
2c87(5): mov %rax,0x68(%rsp)
2c8c(8): mov 0x100(%rsp),%rax
2c94(5): mov %rax,0x60(%rsp)
2c99(9): mov $0x28,%rax
2ca2(8): mov %rax,0xa8(%rsp)
2caa(2): xor %eax,%eax
2cac(5): call 0xffffebf4(%rip)
2cb1(4): cmp $0xa,%r15d
2cb5(5): mov %rax,0x58(%rsp)
2cba(6): jnbe 0x11b5(%rip)
2cc0(7): lea 0x4319(%rip),%rcx
2cc7(3): mov %r15d,%edx
2cca(4): movsxd 0x0(%rcx,%rdx,4),%rax
2cce(3): add %rcx,%rax
2cd1(2): jmp %rax
2cd3(5): mov $0x1,0xe(%rsp)
2cd8(5): mov $0x0,0x7c(%rsp)
2cdd(3): xor %r12d,%r12d
2ce0(9): mov $0x0,0x50(%rsp)
2ce9(5): mov $0x1,0xf(%rsp)
2cee(5): mov $0x0,0xd(%rsp)
2cf3(7): lea 0x427b(%rip),%rax
2cfa(9): mov $0x1,0x18(%rsp)
2d03(3): xor %r15d,%r15d
2d06(8): mov $0x2,0x8(%rsp)
2d0e(5): mov %rax,0x48(%rsp)
2d13(3): xor %r11d,%r11d
2d16(3): mov %rbp,%rax
2d19(3): mov %r12d,%r8d
2d1c(3): mov %r11,%rbp
2d1f(3): mov %rax,%r11
2d22(6): nop 0x0(%rax,%rax,1)
2d28(3): cmp %rbp,%r11
2d2b(4): setnz %r12b
2d2f(4): cmp $0xffffffff,%r11
2d33(2): jnz 0xf(%rip)
2d35(5): mov 0x10(%rsp),%rax
2d3a(4): cmp $0x0,0x0(%rax,%rbp,1)
2d3e(4): setnz %r12b
2d42(3): test %r12b,%r12b
2d45(6): jz 0x65b(%rip)
2d4b(5): cmp $0x2,0x8(%rsp)
2d50(5): mov 0x10(%rsp),%rdi
2d55(4): lea 0x0(%rdi,%rbp,1),%r9
2d59(3): setnz %al
2d5c(4): and 0xd(%rsp),%al
2d60(3): mov %eax,%r10d
2d63(6): jz 0xad(%rip)
2d69(5): mov 0x18(%rsp),%rax
2d6e(3): test %rax,%rax
2d71(6): jz 0x42f(%rip)
2d77(4): cmp $0xffffffff,%r11
2d7b(5): lea 0x0(%rbp,%rax,1),%rbx
2d80(2): jnz 0x30(%rip)
2d82(4): cmp $0x1,%rax
2d86(2): jbe 0x2a(%rip)
2d88(5): mov %r8b,0x38(%rsp)
2d8d(5): mov %r10b,0x30(%rsp)
2d92(5): mov %r9,0x28(%rsp)
2d97(5): call 0xffffeb19(%rip)
2d9c(6): movzx 0x38(%rsp),%r8d
2da2(6): movzx 0x30(%rsp),%r10d
2da8(3): mov %rax,%r11
2dab(5): mov 0x28(%rsp),%r9
2db0(3): cmp %r11,%rbx
2db3(5): mov %r10b,0x28(%rsp)
2db8(6): jnbe 0x5b8(%rip)
2dbe(5): mov 0x18(%rsp),%rdx
2dc3(5): mov 0x48(%rsp),%rsi
2dc8(3): mov %r9,%rdi
2dcb(5): mov %r11,0x40(%rsp)
2dd0(5): mov %r8b,0x38(%rsp)
2dd5(5): mov %r9,0x30(%rsp)
2dda(5): call 0xffffeba6(%rip)
2ddf(2): test %eax,%eax
2de1(5): mov 0x30(%rsp),%r9
2de6(6): movzx 0x38(%rsp),%r8d
2dec(5): mov 0x40(%rsp),%r11
2df1(6): jnz 0x57f(%rip)
2df7(5): cmp $0x0,0xf(%rsp)
2dfc(6): movzx 0x28(%rsp),%r10d
2e02(6): jnz 0xf83(%rip)
2e08(8): nop 0x0(%rax,%rax,1)
2e10(4): movzx (%r9),%ebx
2e14(3): cmp $0x7e,%bl
2e17(6): jnbe 0x321(%rip)
2e1d(7): lea 0x41e8(%rip),%rcx
2e24(3): movzx %bl,%edx
2e27(4): movsxd 0x0(%rcx,%rdx,4),%rax
2e2b(3): add %rcx,%rax
2e2e(2): jmp %rax
2e30(3): xor %r10d,%r10d
2e33(4): cmp $0x1,%r11
2e37(3): setnz %al
2e3a(4): cmp $0xffffffff,%r11
2e3e(2): jnz 0xe(%rip)
2e40(5): mov 0x10(%rsp),%rax
2e45(4): cmp $0x0,0x1(%rax)
2e49(3): setnz %al
2e4c(5): cmp $0x2,0x8(%rsp)
2e51(3): setz %dl
2e54(2): test %al,%al
2e56(6): jz 0x252(%rip)
2e5c(3): xor %r12d,%r12d
2e5f(2): xor %eax,%eax
2e61(7): nop 0x0(%rax)
2e68(5): cmp $0x1,0xd(%rsp)
2e6d(6): jnz 0x115(%rip)
2e73(2): test %dl,%dl
2e75(6): jnz 0x10d(%rip)
2e7b(5): mov 0x20(%rsp),%rsi
2e80(3): test %rsi,%rsi
2e83(2): jz 0x16(%rip)
2e85(2): mov %ebx,%edx
2e87(3): shr $0x5,%dl
2e8a(3): movzx %dl,%edx
2e8d(3): mov 0x0(%rsi,%rdx,4),%edx
2e90(3): bt %ebx,%edx
2e93(6): jb 0x150(%rip)
2e99(3): test %r10b,%r10b
2e9c(6): jnz 0x147(%rip)
2ea2(3): xor $0x1,%eax
2ea5(4): add $0x1,%rbp
2ea9(3): and %r8d,%eax
2eac(2): test %al,%al
2eae(2): jz 0x22(%rip)
2eb0(3): cmp %r15,%r13
2eb3(2): jbe 0x7(%rip)
2eb5(5): mov $0x27,0x0(%r14,%r15,1)
2eba(4): lea 0x1(%r15),%rax
2ebe(3): cmp %rax,%r13
2ec1(2): jbe 0x8(%rip)
2ec3(6): mov $0x27,0x1(%r14,%r15,1)
2ec9(4): add $0x2,%r15
2ecd(3): xor %r8d,%r8d
2ed0(3): cmp %r13,%r15
2ed3(2): jnb 0x6(%rip)
2ed5(4): mov %bl,0x0(%r14,%r15,1)
2ed9(5): movzx 0xe(%rsp),%edi
2ede(4): add $0x1,%r15
2ee2(5): mov $0x0,%eax
2ee7(3): test %r12b,%r12b
2eea(3): cmove %eax,%edi
2eed(5): mov %dil,0xe(%rsp)
2ef2(5): jmp 0xfffffe36(%rip)
2ef7(9): nop 0x0(%rax,%rax,1)
2f00(3): xor %r10d,%r10d
2f03(4): mov 0x8(%rsp),%eax
2f07(3): cmp $0x2,%eax
2f0a(6): jz 0x5be(%rip)
2f10(3): cmp $0x5,%eax
2f13(6): jz 0x575(%rip)
2f19(3): cmp $0x2,%eax
2f1c(5): mov $0x3f,%ebx
2f21(3): setz %dl
2f24(3): xor %r12d,%r12d
2f27(2): xor %eax,%eax
2f29(5): jmp 0xffffff3f(%rip)
2f2e(2): nop 
2f30(3): xor %r10d,%r10d
2f33(5): cmp $0x2,0x8(%rsp)
2f38(6): jz 0x508(%rip)
2f3e(5): mov %r12b,0x7c(%rsp)
2f43(2): xor %edx,%edx
2f45(2): xor %eax,%eax
2f47(5): mov $0x27,%ebx
2f4c(5): jmp 0xffffff1c(%rip)
2f51(7): nop 0x0(%rax)
2f58(5): mov $0x9,%edx
2f5d(5): mov $0x74,%ebx
2f62(5): cmp $0x2,0x8(%rsp)
2f67(3): setz %al
2f6a(4): and 0xf(%rsp),%al
2f6e(6): jnz 0x150(%rip)
2f74(5): cmp $0x0,0xd(%rsp)
2f79(2): jnz 0x67(%rip)
2f7b(2): mov %edx,%ebx
2f7d(3): xor %r12d,%r12d
2f80(2): xor %eax,%eax
2f82(5): cmp $0x0,0xf(%rsp)
2f87(6): jnz 0xfffffef4(%rip)
2f8d(5): jmp 0xffffff0c(%rip)
2f92(6): nop 0x0(%rax,%rax,1)
2f98(5): mov $0x8,%edx
2f9d(5): mov $0x62,%ebx
2fa2(2): jmp 0xffffffd2(%rip)
2fa4(4): nop 0x0(%rax)
2fa8(5): cmp $0x2,0x8(%rsp)
2fad(6): jz 0x3d3(%rip)
2fb3(5): cmp $0x0,0xd(%rsp)
2fb8(6): jz 0x218(%rip)
2fbe(5): cmp $0x0,0xf(%rsp)
2fc3(6): jz 0x20d(%rip)
2fc9(6): cmp $0x0,0x18(%rsp)
2fcf(6): jnz 0x3bc(%rip)
2fd5(5): mov $0x5c,%ebx
2fda(6): nop 0x0(%rax,%rax,1)
2fe0(3): xor %r12d,%r12d
2fe3(5): cmp $0x2,0x8(%rsp)
2fe8(3): setz %dl
2feb(5): cmp $0x0,0xf(%rsp)
2ff0(2): mov %edx,%eax
2ff2(6): jnz 0x856(%rip)
2ff8(3): mov %r8d,%eax
2ffb(3): xor $0x1,%eax
2ffe(2): and %dl,%al
3000(2): jz 0x31(%rip)
3002(3): cmp %r15,%r13
3005(2): jbe 0x7(%rip)
3007(5): mov $0x27,0x0(%r14,%r15,1)
300c(4): lea 0x1(%r15),%rdx
3010(3): cmp %rdx,%r13
3013(2): jbe 0x8(%rip)
3015(6): mov $0x24,0x1(%r14,%r15,1)
301b(4): lea 0x2(%r15),%rdx
301f(3): cmp %rdx,%r13
3022(2): jbe 0x8(%rip)
3024(6): mov $0x27,0x2(%r14,%r15,1)
302a(4): add $0x3,%r15
302e(3): mov %eax,%r8d
3031(3): cmp %r15,%r13
3034(2): jbe 0x7(%rip)
3036(5): mov $0x5c,0x0(%r14,%r15,1)
303b(4): add $0x1,%r15
303f(4): add $0x1,%rbp
3043(5): jmp 0xfffffe8d(%rip)
3048(8): nop 0x0(%rax,%rax,1)
3050(5): cmp $0x0,0xd(%rsp)
3055(6): jnz 0x1ce(%rip)
305b(2): xor %edx,%edx
305d(5): test $0x1,0x78(%rsp)
3062(6): jz 0xffffff19(%rip)
3068(4): add $0x1,%rbp
306c(5): jmp 0xfffffcbc(%rip)
3071(7): nop 0x0(%rax)
3078(5): cmp $0x2,0x8(%rsp)
307d(3): setz %dl
3080(2): xor %eax,%eax
3082(5): jmp 0xfffffde6(%rip)
3087(9): nop 0x0(%rax,%rax,1)
3090(5): mov $0x7,%edx
3095(5): mov $0x61,%ebx
309a(5): jmp 0xfffffeda(%rip)
309f(1): nop 
30a0(5): cmp $0x2,0x8(%rsp)
30a5(3): setz %dl
30a8(3): test %rbp,%rbp
30ab(6): jnz 0xfffffdb1(%rip)
30b1(5): movzx 0xf(%rsp),%eax
30b6(2): and %dl,%al
30b8(6): jz 0xfffffdb0(%rip)
30be(3): mov %r11,%rbp
30c1(8): mov $0x2,0x8(%rsp)
30c9(5): jmp 0x700(%rip)
30ce(2): nop 
30d0(5): cmp $0x2,0x8(%rsp)
30d5(3): setz %dl
30d8(3): xor %r12d,%r12d
30db(2): jmp 0xffffffd6(%rip)
30dd(3): nop (%rax)
30e0(5): cmp $0x2,0x8(%rsp)
30e5(5): mov $0x20,%ebx
30ea(3): setz %dl
30ed(2): jmp 0xffffffc4(%rip)
30ef(1): nop 
30f0(5): mov $0xd,%edx
30f5(5): mov $0x72,%ebx
30fa(5): jmp 0xfffffe68(%rip)
30ff(1): nop 
3100(5): mov $0xc,%edx
3105(5): mov $0x66,%ebx
310a(5): jmp 0xfffffe6a(%rip)
310f(1): nop 
3110(5): mov $0xb,%edx
3115(5): mov $0x76,%ebx
311a(5): jmp 0xfffffe5a(%rip)
311f(1): nop 
3120(5): mov $0xa,%edx
3125(5): mov $0x6e,%ebx
312a(5): jmp 0xfffffe38(%rip)
312f(1): nop 
3130(3): xor %r10d,%r10d
3133(5): nop 0x0(%rax,%rax,1)
3138(6): cmp $0x1,0x58(%rsp)
313e(6): jnz 0x3aa(%rip)
3144(5): mov %r11,0x38(%rsp)
3149(5): mov %r8b,0x30(%rsp)
314e(5): mov %r10b,0x28(%rsp)
3153(5): call 0xffffe9fd(%rip)
3158(3): mov (%rax),%rcx
315b(3): movzx %bl,%edx
315e(6): movzx 0x28(%rsp),%r10d
3164(6): movzx 0x30(%rsp),%r8d
316a(5): mov 0x38(%rsp),%r11
316f(5): mov $0x1,%edi
3174(4): movzx 0x0(%rcx,%rdx,2),%eax
3178(4): and $0x4000,%ax
317c(4): setnz %r12b
3180(3): setz %al
3183(4): and 0xd(%rsp),%al
3187(2): test %al,%al
3189(6): jnz 0x998(%rip)
318f(5): cmp $0x2,0x8(%rsp)
3194(3): setz %dl
3197(5): jmp 0xfffffcd1(%rip)
319c(4): nop 0x0(%rax)
31a0(4): movzx (%r9),%ebx
31a4(3): cmp $0x7e,%bl
31a7(2): jnbe 0xffffff89(%rip)
31a9(7): lea 0x4058(%rip),%rcx
31b0(3): movzx %bl,%edx
31b3(4): movsxd 0x0(%rcx,%rdx,4),%rax
31b7(3): add %rcx,%rax
31ba(2): jmp %rax
31bc(4): nop 0x0(%rax)
31c0(3): xor %r10d,%r10d
31c3(5): cmp $0x0,0xd(%rsp)
31c8(6): jnz 0xfffffdf6(%rip)
31ce(2): nop 
31d0(5): mov $0x5c,%edx
31d5(5): mov $0x5c,%ebx
31da(5): jmp 0xfffffd9a(%rip)
31df(1): nop 
31e0(5): mov $0xc,%edx
31e5(3): xor %r10d,%r10d
31e8(5): mov $0x66,%ebx
31ed(5): jmp 0xfffffd87(%rip)
31f2(6): nop 0x0(%rax,%rax,1)
31f8(5): mov $0xa,%edx
31fd(3): xor %r10d,%r10d
3200(5): mov $0x6e,%ebx
3205(5): jmp 0xfffffd5d(%rip)
320a(6): nop 0x0(%rax,%rax,1)
3210(5): mov $0x61,%ebx
3215(5): jmp 0xfffffdcb(%rip)
321a(6): nop 0x0(%rax,%rax,1)
3220(3): xor %r10d,%r10d
3223(5): cmp $0x2,0x8(%rsp)
3228(3): setz %dl
322b(5): cmp $0x0,0xf(%rsp)
3230(6): jnz 0xb9a(%rip)
3236(3): mov %r8d,%eax
3239(3): mov %r15,%rcx
323c(3): xor $0x1,%eax
323f(2): and %dl,%al
3241(2): jz 0x2f(%rip)
3243(3): cmp %r15,%r13
3246(2): jbe 0x7(%rip)
3248(5): mov $0x27,0x0(%r14,%r15,1)
324d(4): lea 0x1(%r15),%rcx
3251(3): cmp %rcx,%r13
3254(2): jbe 0x8(%rip)
3256(6): mov $0x24,0x1(%r14,%r15,1)
325c(4): lea 0x2(%r15),%rcx
3260(3): cmp %rcx,%r13
3263(6): jnbe 0x636(%rip)
3269(4): lea 0x3(%r15),%rcx
326d(3): mov %eax,%r8d
3270(3): cmp %rcx,%r13
3273(2): jbe 0x7(%rip)
3275(5): mov $0x5c,0x0(%r14,%rcx,1)
327a(5): cmp $0x2,0x8(%rsp)
327f(4): lea 0x1(%rcx),%r15
3283(6): jz 0x606(%rip)
3289(4): lea 0x1(%rbp),%rax
328d(3): cmp %r11,%rax
3290(2): jnb 0x1b(%rip)
3292(5): mov 0x10(%rsp),%rax
3297(5): movzx 0x1(%rax,%rbp,1),%eax
329c(4): mov %al,0x28(%rsp)
32a0(3): sub $0x30,%eax
32a3(2): cmp $0x9,%al
32a5(6): jbe 0x834(%rip)
32ab(3): mov %r12d,%eax
32ae(5): mov $0x30,%ebx
32b3(3): xor %r12d,%r12d
32b6(5): jmp 0xfffffbb2(%rip)
32bb(5): nop 0x0(%rax,%rax,1)
32c0(5): cmp $0x2,0x8(%rsp)
32c5(3): mov %r10d,%r12d
32c8(3): setz %dl
32cb(3): xor %r10d,%r10d
32ce(2): xor %eax,%eax
32d0(5): jmp 0xfffffb98(%rip)
32d5(3): nop (%rax)
32d8(5): cmp $0x2,0x8(%rsp)
32dd(3): setz %dl
32e0(3): xor %r10d,%r10d
32e3(5): jmp 0xfffffdc5(%rip)
32e8(8): nop 0x0(%rax,%rax,1)
32f0(5): cmp $0x2,0x8(%rsp)
32f5(3): setz %dl
32f8(3): xor %r10d,%r10d
32fb(3): xor %r12d,%r12d
32fe(5): jmp 0xfffffdb3(%rip)
3303(5): nop 0x0(%rax,%rax,1)
3308(5): cmp $0x2,0x8(%rsp)
330d(3): mov %r10d,%r12d
3310(5): mov $0x20,%ebx
3315(3): setz %dl
3318(3): xor %r10d,%r10d
331b(5): jmp 0xfffffd96(%rip)
3320(5): mov $0xd,%edx
3325(3): xor %r10d,%r10d
3328(5): mov $0x72,%ebx
332d(5): jmp 0xfffffc35(%rip)
3332(6): nop 0x0(%rax,%rax,1)
3338(5): mov $0x76,%ebx
333d(5): jmp 0xfffffca3(%rip)
3342(6): nop 0x0(%rax,%rax,1)
3348(5): mov $0x9,%edx
334d(3): xor %r10d,%r10d
3350(5): mov $0x74,%ebx
3355(5): jmp 0xfffffc0d(%rip)
335a(6): nop 0x0(%rax,%rax,1)
3360(5): mov $0x62,%ebx
3365(5): jmp 0xfffffc7b(%rip)
336a(6): nop 0x0(%rax,%rax,1)
3370(3): xor %r10d,%r10d
3373(5): jmp 0xfffffa9d(%rip)
3378(8): nop 0x0(%rax,%rax,1)
3380(5): cmp $0x0,0xf(%rsp)
3385(6): jnz 0x96b(%rip)
338b(4): add $0x1,%rbp
338f(3): mov %r8d,%eax
3392(3): xor %r12d,%r12d
3395(5): mov $0x5c,%ebx
339a(5): jmp 0xfffffb12(%rip)
339f(1): nop 
33a0(5): cmp $0x2,0x8(%rsp)
33a5(5): movzx 0xf(%rsp),%ebx
33aa(3): mov %r8d,%r12d
33ad(3): mov %r11,%rbp
33b0(3): setz %dl
33b3(2): mov %ebx,%eax
33b5(3): test %r15,%r15
33b8(3): setz %cl
33bb(2): and %edx,%eax
33bd(2): and %cl,%al
33bf(6): jnz 0xa67(%rip)
33c5(2): mov %ebx,%eax
33c7(3): xor $0x1,%eax
33ca(2): and %al,%dl
33cc(6): jz 0x970(%rip)
33d2(5): cmp $0x0,0x7c(%rsp)
33d7(6): jz 0x963(%rip)
33dd(5): cmp $0x0,0xe(%rsp)
33e2(6): jnz 0x9fb(%rip)
33e8(3): test %r13,%r13
33eb(3): setz %al
33ee(6): cmp $0x0,0x50(%rsp)
33f4(3): setnz %dl
33f7(2): and %dl,%al
33f9(6): jz 0xa23(%rip)
33ff(5): mov 0x50(%rsp),%r13
3404(7): lea 0x3b6a(%rip),%rbx
340b(4): mov $0x27,(%r14)
340f(8): mov $0x2,0x8(%rsp)
3417(6): mov $0x1,%r15d
341d(9): mov $0x1,0x18(%rsp)
3426(5): mov $0x0,0xf(%rsp)
342b(5): mov %rbx,0x48(%rsp)
3430(4): mov %al,0x7c(%rsp)
3434(5): jmp 0xfffff8df(%rip)
3439(7): nop 0x0(%rax)
3440(5): cmp $0x0,0xf(%rsp)
3445(6): jnz 0x8ab(%rip)
344b(3): test %r13,%r13
344e(6): jz 0x402(%rip)
3454(2): xor %edx,%edx
3456(6): cmp $0x0,0x50(%rsp)
345c(6): jnz 0x3f4(%rip)
3462(5): mov %r13,0x50(%rsp)
3467(4): add $0x3,%r15
346b(2): xor %eax,%eax
346d(5): mov %r12b,0x7c(%rsp)
3472(3): xor %r8d,%r8d
3475(3): mov %rdx,%r13
3478(5): mov $0x27,%ebx
347d(5): jmp 0xfffffa1c(%rip)
3482(6): nop 0x0(%rax,%rax,1)
3488(5): test $0x4,0x78(%rsp)
348d(2): jz 0x23(%rip)
348f(4): lea 0x2(%rbp),%rcx
3493(3): cmp %r11,%rcx
3496(2): jnb 0x1a(%rip)
3498(5): mov 0x10(%rsp),%rax
349d(5): cmp $0x3f,0x1(%rax,%rbp,1)
34a2(6): jz 0x790(%rip)
34a8(8): nop 0x0(%rax,%rax,1)
34b0(2): xor %edx,%edx
34b2(3): xor %r12d,%r12d
34b5(2): xor %eax,%eax
34b7(5): mov $0x3f,%ebx
34bc(5): jmp 0xfffff9ac(%rip)
34c1(7): nop 0x0(%rax)
34c8(5): cmp $0x0,0xf(%rsp)
34cd(6): jnz 0x823(%rip)
34d3(3): xor %r12d,%r12d
34d6(2): xor %eax,%eax
34d8(5): mov $0x3f,%ebx
34dd(5): jmp 0xfffff9bc(%rip)
34e2(6): nop 0x0(%rax,%rax,1)
34e8(8): lea 0xa0(%rsp),%rax
34f0(4): cmp $0xffffffff,%r11
34f4(c): mov $0x0,0xa0(%rsp)
3500(5): mov %rax,0x28(%rsp)
3505(2): jnz 0x2f(%rip)
3507(5): mov 0x10(%rsp),%rdi
350c(5): mov %r8b,0x40(%rsp)
3511(5): mov %r10b,0x38(%rsp)
3516(5): mov %r9,0x30(%rsp)
351b(5): call 0xffffe395(%rip)
3520(6): movzx 0x40(%rsp),%r8d
3526(6): movzx 0x38(%rsp),%r10d
352c(3): mov %rax,%r11
352f(5): mov 0x30(%rsp),%r9
3534(8): lea 0x9c(%rsp),%rax
353c(2): xor %ecx,%ecx
353e(4): mov %bl,0x7e(%rsp)
3542(5): mov %r8b,0x7d(%rsp)
3547(3): mov %rcx,%rbx
354a(8): mov %r9,0x88(%rsp)
3552(5): mov %rax,0x38(%rsp)
3557(5): mov %r10b,0x7f(%rsp)
355c(8): mov %r15,0x80(%rsp)
3564(5): mov %r14,0x40(%rsp)
3569(5): mov %r13,0x70(%rsp)
356e(5): mov %r11,0x30(%rsp)
3573(5): mov 0x10(%rsp),%rax
3578(5): lea 0x0(%rbp,%rbx,1),%r14
357d(5): mov 0x30(%rsp),%rdx
3582(5): mov 0x28(%rsp),%rcx
3587(5): mov 0x38(%rsp),%rdi
358c(4): lea 0x0(%rax,%r14,1),%r13
3590(3): sub %r14,%rdx
3593(3): mov %r13,%rsi
3596(5): call 0x1efa(%rip)
359b(3): test %rax,%rax
359e(3): mov %rax,%r15
35a1(2): jz 0x50(%rip)
35a3(4): cmp $0xffffffff,%rax
35a7(6): jz 0x61e(%rip)
35ad(4): cmp $0xfffffffe,%rax
35b1(6): jz 0x5a0(%rip)
35b7(5): cmp $0x2,0x8(%rsp)
35bc(3): setz %al
35bf(4): and 0xf(%rsp),%al
35c3(6): jnz 0x19d(%rip)
35c9(7): mov 0x9c(%rsp),%edi
35d0(5): call 0xffffe570(%rip)
35d5(5): mov 0x28(%rsp),%rdi
35da(2): test %eax,%eax
35dc(5): mov $0x0,%eax
35e1(4): cmove %eax,%r12d
35e5(3): add %r15,%rbx
35e8(5): call 0xffffe548(%rip)
35ed(2): test %eax,%eax
35ef(2): jz 0xffffff84(%rip)
35f1(3): mov %r12d,%edx
35f4(3): mov %rbx,%rdi
35f7(6): movzx 0x7d(%rsp),%r8d
35fd(3): xor $0x1,%edx
3600(5): movzx 0x7e(%rsp),%ebx
3605(6): movzx 0x7f(%rsp),%r10d
360b(4): and 0xd(%rsp),%dl
360f(8): mov 0x80(%rsp),%r15
3617(5): mov 0x40(%rsp),%r14
361c(5): mov 0x70(%rsp),%r13
3621(5): mov 0x30(%rsp),%r11
3626(4): cmp $0x1,%rdi
362a(6): jbe 0x601(%rip)
3630(3): mov %rdi,%rcx
3633(2): xor %esi,%esi
3635(6): movzx 0xf(%rsp),%r9d
363b(3): add %rbp,%rcx
363e(5): mov 0x10(%rsp),%rdi
3643(5): jmp 0xbb(%rip)
3648(8): nop 0x0(%rax,%rax,1)
3650(5): cmp $0x2,0x8(%rsp)
3655(3): setz %al
3658(3): test %r9b,%r9b
365b(6): jnz 0x4b5(%rip)
3661(3): mov %r8d,%esi
3664(3): xor $0x1,%esi
3667(3): and %sil,%al
366a(2): jz 0x31(%rip)
366c(3): cmp %r15,%r13
366f(2): jbe 0x7(%rip)
3671(5): mov $0x27,0x0(%r14,%r15,1)
3676(4): lea 0x1(%r15),%rsi
367a(3): cmp %rsi,%r13
367d(2): jbe 0x8(%rip)
367f(6): mov $0x24,0x1(%r14,%r15,1)
3685(4): lea 0x2(%r15),%rsi
3689(3): cmp %rsi,%r13
368c(2): jbe 0x8(%rip)
368e(6): mov $0x27,0x2(%r14,%r15,1)
3694(4): add $0x3,%r15
3698(3): mov %eax,%r8d
369b(3): cmp %r15,%r13
369e(2): jbe 0x7(%rip)
36a0(5): mov $0x5c,0x0(%r14,%r15,1)
36a5(4): lea 0x1(%r15),%rax
36a9(3): cmp %rax,%r13
36ac(2): jbe 0xf(%rip)
36ae(2): mov %ebx,%eax
36b0(3): shr $0x6,%al
36b3(3): add $0x30,%eax
36b6(5): mov %al,0x1(%r14,%r15,1)
36bb(4): lea 0x2(%r15),%rax
36bf(3): cmp %rax,%r13
36c2(2): jbe 0x12(%rip)
36c4(2): mov %ebx,%eax
36c6(3): shr $0x3,%al
36c9(3): and $0x7,%eax
36cc(3): add $0x30,%eax
36cf(5): mov %al,0x2(%r14,%r15,1)
36d4(3): and $0x7,%ebx
36d7(4): add $0x1,%rbp
36db(4): add $0x3,%r15
36df(3): add $0x30,%ebx
36e2(3): cmp %rcx,%rbp
36e5(6): jnb 0xfffff7eb(%rip)
36eb(2): mov %edx,%esi
36ed(3): cmp %r15,%r13
36f0(2): jbe 0x6(%rip)
36f2(4): mov %bl,0x0(%r14,%r15,1)
36f6(4): movzx 0x0(%rdi,%rbp,1),%ebx
36fa(4): add $0x1,%r15
36fe(2): test %dl,%dl
3700(6): jnz 0xffffff50(%rip)
3706(2): mov %esi,%eax
3708(3): xor $0x1,%eax
370b(3): and %r8d,%eax
370e(3): test %r10b,%r10b
3711(2): jz 0x10(%rip)
3713(3): cmp %r15,%r13
3716(2): jbe 0x7(%rip)
3718(5): mov $0x5c,0x0(%r14,%r15,1)
371d(4): add $0x1,%r15
3721(4): add $0x1,%rbp
3725(3): cmp %rcx,%rbp
3728(6): jnb 0xfffff784(%rip)
372e(2): test %al,%al
3730(6): jz 0x3fe(%rip)
3736(3): cmp %r15,%r13
3739(2): jbe 0x7(%rip)
373b(5): mov $0x27,0x0(%r14,%r15,1)
3740(4): lea 0x1(%r15),%rax
3744(3): cmp %rax,%r13
3747(2): jbe 0x8(%rip)
3749(6): mov $0x27,0x1(%r14,%r15,1)
374f(4): add $0x2,%r15
3753(3): xor %r10d,%r10d
3756(3): xor %r8d,%r8d
3759(2): jmp 0xffffff94(%rip)
375b(5): nop 0x0(%rax,%rax,1)
3760(4): cmp $0x1,%r15
3764(6): jz 0xfffffe65(%rip)
376a(5): mov 0x10(%rsp),%rdi
376f(4): lea 0x0(%rdi,%r15,1),%rcx
3773(5): lea 0x1(%rdi,%r14,1),%rdx
3778(4): lea 0x0(%rcx,%r14,1),%r8
377c(2): jmp 0x11(%rip)
377e(2): nop 
3780(4): add $0x1,%rdx
3784(3): cmp %rdx,%r8
3787(6): jz 0xfffffe42(%rip)
378d(3): movzx (%rdx),%ecx
3790(3): sub $0x5b,%ecx
3793(3): cmp $0x21,%cl
3796(2): jnbe 0xffffffea(%rip)
3798(5): mov $0x1,%esi
379d(3): shl/sal %cl,%rsi
37a0(3): mov %rsi,%rcx
37a3(a): mov $0x8589934635,%rsi
37ad(3): test %rsi,%rcx
37b0(2): jz 0xffffffd0(%rip)
37b2(5): mov 0x40(%rsp),%r14
37b7(5): mov 0x70(%rsp),%r13
37bc(5): mov 0x30(%rsp),%rbp
37c1(8): mov $0x2,0x8(%rsp)
37c9(5): cmp $0x0,0xd(%rsp)
37ce(2): jz 0x12(%rip)
37d0(2): test %al,%al
37d2(5): mov $0x4,%eax
37d7(5): cmove 0x8(%rsp),%eax
37dc(4): mov %eax,0x8(%rsp)
37e0(4): sub $0x8,%rsp
37e4(3): mov %rbp,%rcx
37e7(3): mov %r13,%rsi
37ea(4): push 0x68(%rsp)
37ee(4): push 0x78(%rsp)
37f2(3): mov %r14,%rdi
37f5(2): push $0x0
37f7(8): mov 0x98(%rsp),%r9d
37ff(5): mov 0x28(%rsp),%r8d
3804(5): mov 0x30(%rsp),%rdx
3809(4): and $0xfd,%r9d
380d(5): call 0xfffff433(%rip)
3812(4): add $0x20,%rsp
3816(3): mov %rax,%r15
3819(8): mov 0xa8(%rsp),%rbx
3821(9): xor $0x28,%rbx
382a(3): mov %r15,%rax
382d(6): jnz 0x606(%rip)
3833(7): add $0xb8,%rsp
383a(1): pop %rbx
383b(1): pop %rbp
383c(2): pop %r12
383e(2): pop %r13
3840(2): pop %r14
3842(2): pop %r15
3844(1): ret near (%rsp)
3845(3): nop (%rax)
3848(3): mov %r11,%rbp
384b(5): jmp 0xffffff7e(%rip)
3850(3): cmp %r15,%r13
3853(2): jbe 0x7(%rip)
3855(5): mov $0x27,0x0(%r14,%r15,1)
385a(4): lea 0x1(%r15),%rax
385e(3): cmp %rax,%r13
3861(2): jbe 0x8(%rip)
3863(6): mov $0x5c,0x1(%r14,%r15,1)
3869(4): lea 0x2(%r15),%rax
386d(3): cmp %rax,%r13
3870(6): jbe 0x5f2(%rip)
3876(3): mov %r13,%rdx
3879(6): mov $0x27,0x2(%r14,%r15,1)
387f(5): mov 0x50(%rsp),%r13
3884(5): jmp 0xfffffbde(%rip)
3889(3): mov %r12d,%eax
388c(5): mov $0x30,%ebx
3891(3): xor %r12d,%r12d
3894(5): jmp 0xfffff605(%rip)
3899(6): mov $0x27,0x2(%r14,%r15,1)
389f(5): jmp 0xfffff9ca(%rip)
38a4(2): test %ebx,%ebx
38a6(6): jnz 0xfffff42d(%rip)
38ac(5): mov $0x1,0xd(%rsp)
38b1(3): test %r13,%r13
38b4(6): jnz 0x596(%rip)
38ba(7): lea 0x36b4(%rip),%rax
38c1(9): mov $0x0,0x50(%rsp)
38ca(5): mov $0x1,0xe(%rsp)
38cf(5): mov $0x0,0x7c(%rsp)
38d4(3): xor %r12d,%r12d
38d7(5): mov $0x0,0xf(%rsp)
38dc(9): mov $0x1,0x18(%rsp)
38e5(5): mov %rax,0x48(%rsp)
38ea(6): mov $0x1,%r15d
38f0(8): mov $0x2,0x8(%rsp)
38f8(5): jmp 0xfffff41b(%rip)
38fd(3): nop (%rax)
3900(2): test %ebx,%ebx
3902(6): jnz 0x3fb(%rip)
3908(3): test %r13,%r13
390b(6): jz 0x22b(%rip)
3911(4): mov $0x22,(%r14)
3915(5): mov $0x1,0xe(%rsp)
391a(3): xor %r12d,%r12d
391d(5): mov $0x0,0x7c(%rsp)
3922(9): mov $0x0,0x50(%rsp)
392b(7): lea 0x3641(%rip),%rax
3932(5): mov $0x0,0xf(%rsp)
3937(5): mov $0x1,0xd(%rsp)
393c(9): mov $0x1,0x18(%rsp)
3945(6): mov $0x1,%r15d
394b(5): mov %rax,0x48(%rsp)
3950(5): jmp 0xfffff3c3(%rip)
3955(7): lea 0x3617(%rip),%rax
395c(5): mov $0x1,0xe(%rsp)
3961(5): mov $0x0,0x7c(%rsp)
3966(3): xor %r12d,%r12d
3969(9): mov $0x0,0x50(%rsp)
3972(5): mov $0x1,0xf(%rsp)
3977(5): mov $0x1,0xd(%rsp)
397c(9): mov $0x1,0x18(%rsp)
3985(3): xor %r15d,%r15d
3988(5): mov %rax,0x48(%rsp)
398d(8): mov $0x5,0x8(%rsp)
3995(5): jmp 0xfffff37e(%rip)
399a(5): mov $0x1,0xe(%rsp)
399f(5): mov $0x0,0x7c(%rsp)
39a4(3): xor %r12d,%r12d
39a7(9): mov $0x0,0x50(%rsp)
39b0(5): mov $0x0,0xf(%rsp)
39b5(3): xor %r15d,%r15d
39b8(5): mov $0x1,0xd(%rsp)
39bd(9): mov $0x0,0x18(%rsp)
39c6(9): mov $0x0,0x48(%rsp)
39cf(5): jmp 0xfffff344(%rip)
39d4(5): cmp $0xa,0x8(%rsp)
39d9(2): jz 0x58(%rip)
39db(7): lea 0x3595(%rip),%rsi
39e2(2): xor %edi,%edi
39e4(5): mov $0x5,%edx
39e9(5): call 0xffffdea7(%rip)
39ee(3): mov %rax,%rcx
39f1(5): mov %rax,0x68(%rsp)
39f6(7): lea 0x357a(%rip),%rax
39fd(3): cmp %rax,%rcx
3a00(6): jz 0x39e(%rip)
3a06(7): lea 0x3568(%rip),%rsi
3a0d(2): xor %edi,%edi
3a0f(5): mov $0x5,%edx
3a14(5): call 0xffffde7c(%rip)
3a19(3): mov %rax,%rcx
3a1c(5): mov %rax,0x60(%rsp)
3a21(7): lea 0x354d(%rip),%rax
3a28(3): cmp %rax,%rcx
3a2b(6): jz 0x389(%rip)
3a31(3): xor %r15d,%r15d
3a34(2): test %ebx,%ebx
3a36(6): jz 0x1c7(%rip)
3a3c(2): test %ebx,%ebx
3a3e(5): mov 0x60(%rsp),%rbx
3a43(5): setnz 0xf(%rsp)
3a48(3): xor %r12d,%r12d
3a4b(3): mov %rbx,%rdi
3a4e(5): call 0xffffde62(%rip)
3a53(5): mov %rbx,0x48(%rsp)
3a58(5): mov %rax,0x18(%rsp)
3a5d(5): mov $0x1,0xe(%rsp)
3a62(5): mov $0x0,0x7c(%rsp)
3a67(9): mov $0x0,0x50(%rsp)
3a70(5): mov $0x1,0xd(%rsp)
3a75(5): jmp 0xfffff29e(%rip)
3a7a(5): mov $0x1,0xe(%rsp)
3a7f(5): mov $0x0,0x7c(%rsp)
3a84(3): xor %r12d,%r12d
3a87(9): mov $0x0,0x50(%rsp)
3a90(5): mov $0x0,0xf(%rsp)
3a95(3): xor %r15d,%r15d
3a98(5): mov $0x0,0xd(%rsp)
3a9d(9): mov $0x0,0x18(%rsp)
3aa6(9): mov $0x0,0x48(%rsp)
3aaf(5): jmp 0xfffff264(%rip)
3ab4(5): mov $0x1,0xe(%rsp)
3ab9(5): mov $0x0,0x7c(%rsp)
3abe(3): xor %r12d,%r12d
3ac1(9): mov $0x0,0x50(%rsp)
3aca(5): mov $0x1,0xf(%rsp)
3acf(5): mov $0x1,0xd(%rsp)
3ad4(5): jmp 0xfffff21f(%rip)
3ad9(3): cmp %r15,%r13
3adc(2): jbe 0x7(%rip)
3ade(5): mov $0x30,0x0(%r14,%r15,1)
3ae3(4): lea 0x2(%rcx),%rax
3ae7(3): cmp %rax,%r13
3aea(2): jbe 0x8(%rip)
3aec(6): mov $0x30,0x2(%r14,%rcx,1)
3af2(3): mov %r12d,%eax
3af5(4): lea 0x3(%rcx),%r15
3af9(3): xor %r12d,%r12d
3afc(5): mov $0x30,%ebx
3b01(5): jmp 0xfffff367(%rip)
3b06(a): nop 0x0(%rax,%rax,1)
3b10(5): movzx 0xf(%rsp),%ebx
3b15(3): mov %r11,%rbp
3b18(4): mov %bl,0xd(%rsp)
3b1c(5): jmp 0xfffffcad(%rip)
3b21(5): movzx 0xd(%rsp),%edx
3b26(3): xor %r12d,%r12d
3b29(5): jmp 0xfffffb07(%rip)
3b2e(3): xor %r10d,%r10d
3b31(5): jmp 0xfffffbbc(%rip)
3b36(9): mov $0x0,0x50(%rsp)
3b3f(5): mov $0x1,0xe(%rsp)
3b44(3): xor %r12d,%r12d
3b47(5): mov $0x0,0x7c(%rsp)
3b4c(5): jmp 0xfffffddf(%rip)
3b51(5): mov 0x30(%rsp),%r11
3b56(3): mov %r14,%rsi
3b59(3): mov %r13,%rcx
3b5c(3): mov %rbx,%rax
3b5f(3): mov %rbx,%rdi
3b62(6): movzx 0x7d(%rsp),%r8d
3b68(5): movzx 0x7e(%rsp),%ebx
3b6d(8): mov 0x88(%rsp),%r9
3b75(3): cmp %r11,%rsi
3b78(6): movzx 0x7f(%rsp),%r10d
3b7e(8): mov 0x80(%rsp),%r15
3b86(5): mov 0x40(%rsp),%r14
3b8b(5): mov 0x70(%rsp),%r13
3b90(2): jnb 0x28(%rip)
3b92(3): cmp $0x0,(%rcx)
3b95(2): jnz 0x12(%rip)
3b97(2): jmp 0x21(%rip)
3b99(7): nop 0x0(%rax)
3ba0(5): cmp $0x0,0x0(%r9,%rax,1)
3ba5(2): jz 0x10(%rip)
3ba7(4): add $0x1,%rax
3bab(5): lea 0x0(%rbp,%rax,1),%rdx
3bb0(3): cmp %rdx,%r11
3bb3(2): jnbe 0xffffffed(%rip)
3bb5(3): mov %rax,%rdi
3bb8(5): movzx 0xd(%rsp),%edx
3bbd(3): xor %r12d,%r12d
3bc0(5): jmp 0xfffffa66(%rip)
3bc5(3): mov %rbx,%rdi
3bc8(6): movzx 0x7d(%rsp),%r8d
3bce(5): movzx 0x7e(%rsp),%ebx
3bd3(6): movzx 0x7f(%rsp),%r10d
3bd9(8): mov 0x80(%rsp),%r15
3be1(3): xor %r12d,%r12d
3be4(5): mov 0x40(%rsp),%r14
3be9(5): mov 0x70(%rsp),%r13
3bee(5): mov 0x30(%rsp),%r11
3bf3(5): movzx 0xd(%rsp),%edx
3bf8(5): jmp 0xfffffa2e(%rip)
3bfd(5): mov 0x68(%rsp),%rdx
3c02(3): movzx (%rdx),%eax
3c05(2): test %al,%al
3c07(6): jz 0xfffffe35(%rip)
3c0d(3): nop (%rax)
3c10(3): cmp %r15,%r13
3c13(2): jbe 0x6(%rip)
3c15(4): mov %al,0x0(%r14,%r15,1)
3c19(4): add $0x1,%r15
3c1d(5): movzx 0x0(%rdx,%r15,1),%eax
3c22(2): test %al,%al
3c24(2): jnz 0xffffffec(%rip)
3c26(5): jmp 0xfffffe16(%rip)
3c2b(2): mov %edx,%eax
3c2d(5): jmp 0xfffff55a(%rip)
3c32(4): movzx 0x0(%rax,%rcx,1),%ebx
3c36(3): cmp $0x3e,%bl
3c39(6): jnbe 0xfffff877(%rip)
3c3f(a): mov $0x8070630310989004800,%rax
3c49(4): bt %rbx,%rax
3c4d(6): jnb 0xfffff863(%rip)
3c53(5): cmp $0x0,0xf(%rsp)
3c58(6): jnz 0x1ea(%rip)
3c5e(3): cmp %r15,%r13
3c61(2): jbe 0x7(%rip)
3c63(5): mov $0x3f,0x0(%r14,%r15,1)
3c68(4): lea 0x1(%r15),%rax
3c6c(3): cmp %rax,%r13
3c6f(2): jbe 0x8(%rip)
3c71(6): mov $0x22,0x1(%r14,%r15,1)
3c77(4): lea 0x2(%r15),%rax
3c7b(3): cmp %rax,%r13
3c7e(2): jbe 0x8(%rip)
3c80(6): mov $0x22,0x2(%r14,%r15,1)
3c86(4): lea 0x3(%r15),%rax
3c8a(3): cmp %rax,%r13
3c8d(2): jbe 0x8(%rip)
3c8f(6): mov $0x3f,0x3(%r14,%r15,1)
3c95(4): add $0x4,%r15
3c99(2): xor %edx,%edx
3c9b(3): xor %r12d,%r12d
3c9e(2): xor %eax,%eax
3ca0(3): mov %rcx,%rbp
3ca3(5): jmp 0xfffff1c5(%rip)
3ca8(2): test %ebx,%ebx
3caa(6): jz 0x18e(%rip)
3cb0(7): lea 0x32be(%rip),%rax
3cb7(5): mov $0x1,0xe(%rsp)
3cbc(5): mov $0x0,0x7c(%rsp)
3cc1(3): xor %r12d,%r12d
3cc4(9): mov $0x0,0x50(%rsp)
3ccd(5): mov $0x1,0xf(%rsp)
3cd2(5): mov $0x0,0xd(%rsp)
3cd7(9): mov $0x1,0x18(%rsp)
3ce0(3): xor %r15d,%r15d
3ce3(5): mov %rax,0x48(%rsp)
3ce8(5): jmp 0xfffff02b(%rip)
3ced(3): nop (%rax)
3cf0(3): mov %r11,%rbp
3cf3(5): movzx 0xf(%rsp),%eax
3cf8(5): jmp 0xfffffad1(%rip)
3cfd(7): lea 0x326f(%rip),%rax
3d04(5): mov $0x1,0xe(%rsp)
3d09(5): mov $0x0,0x7c(%rsp)
3d0e(3): xor %r12d,%r12d
3d11(9): mov $0x0,0x50(%rsp)
3d1a(5): mov $0x1,0xf(%rsp)
3d1f(5): mov $0x1,0xd(%rsp)
3d24(9): mov $0x1,0x18(%rsp)
3d2d(3): xor %r15d,%r15d
3d30(5): mov %rax,0x48(%rsp)
3d35(5): jmp 0xffffefde(%rip)
3d3a(2): mov %edx,%eax
3d3c(5): mov 0x48(%rsp),%rbx
3d41(3): test %rbx,%rbx
3d44(2): jz 0x2e(%rip)
3d46(2): test %al,%al
3d48(2): jz 0x2a(%rip)
3d4a(3): movzx (%rbx),%ecx
3d4d(3): mov %rbx,%rax
3d50(2): test %cl,%cl
3d52(2): jz 0x20(%rip)
3d54(3): mov %r15,%rdx
3d57(3): sub %r15,%rax
3d5a(3): cmp %rdx,%r13
3d5d(2): jbe 0x6(%rip)
3d5f(4): mov %cl,0x0(%r14,%rdx,1)
3d63(4): add $0x1,%rdx
3d67(4): movzx 0x0(%rax,%rdx,1),%ecx
3d6b(2): test %cl,%cl
3d6d(2): jnz 0xffffffed(%rip)
3d6f(3): mov %rdx,%r15
3d72(3): cmp %r15,%r13
3d75(6): jbe 0xfffffaa4(%rip)
3d7b(5): mov $0x0,0x0(%r14,%r15,1)
3d80(5): jmp 0xfffffa99(%rip)
3d85(5): cmp $0x2,0x8(%rsp)
3d8a(5): movzx 0xf(%rsp),%ebx
3d8f(3): mov %r11,%rbp
3d92(3): setz %al
3d95(4): mov %bl,0xd(%rsp)
3d99(5): jmp 0xfffffa30(%rip)
3d9e(4): mov 0x8(%rsp),%esi
3da2(3): mov %rcx,%rdi
3da5(5): call 0xffffedab(%rip)
3daa(5): mov %rax,0x68(%rsp)
3daf(5): jmp 0xfffffc57(%rip)
3db4(4): mov 0x8(%rsp),%esi
3db8(3): mov %rcx,%rdi
3dbb(5): call 0xffffed95(%rip)
3dc0(5): mov %rax,0x60(%rsp)
3dc5(5): jmp 0xfffffc6c(%rip)
3dca(5): movzx 0xf(%rsp),%ebx
3dcf(3): mov %r11,%rbp
3dd2(2): mov %edx,%eax
3dd4(4): mov %bl,0xd(%rsp)
3dd8(5): jmp 0xfffff9f1(%rip)
3ddd(4): sub $0x8,%rsp
3de1(6): mov $0x5,%r8d
3de7(3): mov %r11,%rcx
3dea(4): push 0x68(%rsp)
3dee(4): push 0x78(%rsp)
3df2(3): mov %r14,%rdi
3df5(4): push 0x38(%rsp)
3df9(8): mov 0x98(%rsp),%r9d
3e01(5): mov 0x30(%rsp),%rdx
3e06(5): mov 0x70(%rsp),%rsi
3e0b(5): call 0xffffee35(%rip)
3e10(4): add $0x20,%rsp
3e14(3): mov %rax,%r15
3e17(5): jmp 0xfffffa02(%rip)
3e1c(5): movzx 0x7c(%rsp),%eax
3e21(5): jmp 0xffffff1b(%rip)
3e26(8): mov $0x2,0x8(%rsp)
3e2e(5): jmp 0xfffff99b(%rip)
3e33(5): call 0xffffda9d(%rip)
3e38(5): mov $0x0,0xd(%rsp)
3e3d(5): jmp 0xfffffa74(%rip)
3e42(3): mov %r11,%rbp
3e45(5): jmp 0xfffff99b(%rip)
3e4a(5): mov $0x1,0xe(%rsp)
3e4f(2): xor %eax,%eax
3e51(3): xor %r12d,%r12d
3e54(9): mov $0x0,0x50(%rsp)
3e5d(5): jmp 0xfffff5a7(%rip)
3e62(3): mov %r13,%rdx
3e65(5): mov 0x50(%rsp),%r13
3e6a(5): jmp 0xfffff5f8(%rip)
3e6f(5): call 0xffffd931(%rip)

"quotearg_n_options" :
3e80(2): push %r15
3e82(2): push %r14
3e84(3): movsxd %edi,%r15
3e87(2): push %r13
3e89(2): push %r12
3e8b(3): mov %rdx,%r14
3e8e(1): push %rbp
3e8f(1): push %rbx
3e90(3): mov %rcx,%rbp
3e93(4): sub $0x28,%rsp
3e97(5): mov %rsi,0x8(%rsp)
3e9c(5): call 0xffffd914(%rip)
3ea1(3): mov %rax,%r13
3ea4(2): mov (%rax),%eax
3ea6(3): test %r15d,%r15d
3ea9(7): mov 0x2061b0(%rip),%rbx
3eb0(4): mov %eax,0x18(%rsp)
3eb4(6): js 0x16d(%rip)
3eba(7): cmp %r15d,0x206197(%rip)
3ec1(2): jnle 0x64(%rip)
3ec3(7): cmp $0x7fffffff,%r15d
3eca(6): jz 0x15c(%rip)
3ed0(4): lea 0x1(%r15),%r12d
3ed4(7): lea 0x206195(%rip),%rax
3edb(3): movsxd %r12d,%rsi
3ede(4): shl/sal $0x4,%rsi
3ee2(3): cmp %rax,%rbx
3ee5(6): jz 0x11b(%rip)
3eeb(3): mov %rbx,%rdi
3eee(5): call 0x1252(%rip)
3ef3(3): mov %rax,%rbx
3ef6(7): mov %rax,0x206163(%rip)
3efd(7): movsxd 0x206154(%rip),%rdi
3f04(3): mov %r12d,%edx
3f07(2): xor %esi,%esi
3f09(2): sub %edi,%edx
3f0b(4): shl/sal $0x4,%rdi
3f0f(3): movsxd %edx,%rdx
3f12(3): add %rbx,%rdi
3f15(4): shl/sal $0x4,%rdx
3f19(5): call 0xffffda37(%rip)
3f1e(7): mov %r12d,0x206133(%rip)
3f25(3): mov 0x4(%rbp),%eax
3f28(4): shl/sal $0x4,%r15
3f2c(4): sub $0x8,%rsp
3f30(3): add %r15,%rbx
3f33(4): lea 0x8(%rbp),%r15
3f37(4): mov 0x0(%rbp),%r8d
3f3b(3): mov (%rbx),%r11
3f3e(4): mov 0x8(%rbx),%r12
3f42(3): mov %r14,%rcx
3f45(3): or $0x1,%eax
3f48(4): mov %eax,0x24(%rsp)
3f4c(3): push 0x30(%rbp)
3f4f(3): mov %eax,%r9d
3f52(3): push 0x28(%rbp)
3f55(2): push %r15
3f57(3): mov %r11,%rsi
3f5a(5): mov 0x28(%rsp),%rdx
3f5f(3): mov %r12,%rdi
3f62(5): mov %r11,0x30(%rsp)
3f67(5): call 0xffffecd9(%rip)
3f6c(4): add $0x20,%rsp
3f70(5): mov 0x10(%rsp),%r11
3f75(3): cmp %rax,%r11
3f78(2): jnbe 0x69(%rip)
3f7a(4): lea 0x1(%rax),%rsi
3f7e(7): lea 0x20617b(%rip),%rax
3f85(3): cmp %rax,%r12
3f88(3): mov %rsi,(%rbx)
3f8b(2): jz 0x14(%rip)
3f8d(3): mov %r12,%rdi
3f90(5): mov %rsi,0x10(%rsp)
3f95(5): call 0xffffd7fb(%rip)
3f9a(5): mov 0x10(%rsp),%rsi
3f9f(3): mov %rsi,%rdi
3fa2(5): mov %rsi,0x10(%rsp)
3fa7(5): call 0x1139(%rip)
3fac(4): sub $0x8,%rsp
3fb0(4): mov %rax,0x8(%rbx)
3fb4(4): mov 0x0(%rbp),%r8d
3fb8(3): push 0x30(%rbp)
3fbb(3): push 0x28(%rbp)
3fbe(3): mov %r14,%rcx
3fc1(2): push %r15
3fc3(5): mov 0x3c(%rsp),%r9d
3fc8(3): mov %rax,%rdi
3fcb(5): mov 0x28(%rsp),%rdx
3fd0(5): mov 0x30(%rsp),%rsi
3fd5(3): mov %rax,%r12
3fd8(5): call 0xffffec68(%rip)
3fdd(4): add $0x20,%rsp
3fe1(4): mov 0x18(%rsp),%eax
3fe5(4): mov %eax,0x0(%r13)
3fe9(4): add $0x28,%rsp
3fed(3): mov %r12,%rax
3ff0(1): pop %rbx
3ff1(1): pop %rbp
3ff2(2): pop %r12
3ff4(2): pop %r13
3ff6(2): pop %r14
3ff8(2): pop %r15
3ffa(1): ret near (%rsp)
3ffb(5): nop 0x0(%rax,%rax,1)
4000(2): xor %edi,%edi
4002(5): call 0x113e(%rip)
4007(8): movdqa 0x206061(%rip),%xmm0
400f(3): mov %rax,%rbx
4012(7): mov %rax,0x206047(%rip)
4019(3): movups %xmm0,(%rax)
401c(5): jmp 0xfffffee1(%rip)
4021(5): call 0xffffd77f(%rip)
4026(5): call 0x130a(%rip)

"clone_quoting_options" :
4030(2): push %r12
4032(1): push %rbp
4033(1): push %rbx
4034(3): mov %rdi,%rbx
4037(5): call 0xffffd779(%rip)
403c(3): mov (%rax),%r12d
403f(3): mov %rax,%rbp
4042(7): lea 0x2061b7(%rip),%rax
4049(3): test %rbx,%rbx
404c(5): mov $0x38,%esi
4051(4): cmove %rax,%rbx
4055(3): mov %rbx,%rdi
4058(5): call 0x1288(%rip)
405d(4): mov %r12d,0x0(%rbp)
4061(1): pop %rbx
4062(1): pop %rbp
4063(2): pop %r12
4065(1): ret near (%rsp)

"get_quoting_style" :
4070(7): lea 0x206189(%rip),%rax
4077(3): test %rdi,%rdi
407a(4): cmove %rax,%rdi
407e(2): mov (%rdi),%eax
4080(1): ret near (%rsp)

"set_quoting_style" :
4090(7): lea 0x206169(%rip),%rax
4097(3): test %rdi,%rdi
409a(4): cmove %rax,%rdi
409e(2): mov %esi,(%rdi)
40a0(1): ret near (%rsp)

"set_char_quoting" :
40b0(7): lea 0x206149(%rip),%rax
40b7(3): test %rdi,%rdi
40ba(2): mov %esi,%ecx
40bc(4): cmove %rax,%rdi
40c0(2): mov %esi,%eax
40c2(3): and $0x1f,%ecx
40c5(3): shr $0x5,%al
40c8(3): movzx %al,%eax
40cb(5): lea 0x8(%rdi,%rax,4),%rdi
40d0(2): mov (%rdi),%esi
40d2(2): mov %esi,%eax
40d4(2): shr %cl,%eax
40d6(2): xor %eax,%edx
40d8(3): and $0x1,%eax
40db(3): and $0x1,%edx
40de(2): shl/sal %cl,%edx
40e0(2): xor %esi,%edx
40e2(2): mov %edx,(%rdi)
40e4(1): ret near (%rsp)

"set_quoting_flags" :
40f0(7): lea 0x206109(%rip),%rax
40f7(3): test %rdi,%rdi
40fa(4): cmove %rax,%rdi
40fe(3): mov 0x4(%rdi),%eax
4101(3): mov %esi,0x4(%rdi)
4104(1): ret near (%rsp)

"set_custom_quoting" :
4110(7): lea 0x2060e9(%rip),%rax
4117(3): test %rdi,%rdi
411a(4): cmove %rax,%rdi
411e(3): test %rsi,%rsi
4121(6): mov $0xa,(%rdi)
4127(2): jz 0x10(%rip)
4129(3): test %rdx,%rdx
412c(2): jz 0xb(%rip)
412e(4): mov %rsi,0x28(%rdi)
4132(4): mov %rdx,0x30(%rdi)
4136(1): ret near (%rsp)
4137(4): sub $0x8,%rsp
413b(5): call 0xffffd665(%rip)

"quotearg_buffer" :
4140(2): push %r15
4142(2): push %r14
4144(7): lea 0x2060b5(%rip),%rax
414b(2): push %r13
414d(2): push %r12
414f(3): mov %rdi,%r13
4152(1): push %rbp
4153(1): push %rbx
4154(3): mov %r8,%rbx
4157(3): mov %rsi,%r14
415a(3): mov %rdx,%r15
415d(4): sub $0x18,%rsp
4161(3): test %r8,%r8
4164(4): cmove %rax,%rbx
4168(5): mov %rcx,0x8(%rsp)
416d(5): call 0xffffd643(%rip)
4172(3): mov (%rax),%r12d
4175(3): mov %rax,%rbp
4178(4): lea 0x8(%rbx),%rax
417c(4): sub $0x8,%rsp
4180(4): mov 0x4(%rbx),%r9d
4184(3): push 0x30(%rbx)
4187(3): mov (%rbx),%r8d
418a(3): push 0x28(%rbx)
418d(3): mov %r15,%rdx
4190(1): push %rax
4191(5): mov 0x28(%rsp),%rcx
4196(3): mov %r14,%rsi
4199(3): mov %r13,%rdi
419c(5): call 0xffffeaa4(%rip)
41a1(4): mov %r12d,0x0(%rbp)
41a5(4): add $0x38,%rsp
41a9(1): pop %rbx
41aa(1): pop %rbp
41ab(2): pop %r12
41ad(2): pop %r13
41af(2): pop %r14
41b1(2): pop %r15
41b3(1): ret near (%rsp)

"quotearg_alloc_mem" :
41c0(2): push %r15
41c2(2): push %r14
41c4(7): lea 0x206035(%rip),%rax
41cb(2): push %r13
41cd(2): push %r12
41cf(3): mov %rdx,%r12
41d2(1): push %rbp
41d3(1): push %rbx
41d4(3): mov %rcx,%rbx
41d7(3): mov %rdi,%r14
41da(3): mov %rsi,%r15
41dd(4): sub $0x38,%rsp
41e1(3): test %rcx,%rcx
41e4(4): cmove %rax,%rbx
41e8(2): xor %ebp,%ebp
41ea(5): call 0xffffd5c6(%rip)
41ef(3): test %r12,%r12
41f2(3): mov %rax,%r13
41f5(2): mov (%rax),%eax
41f7(4): setz %bpl
41fb(3): or 0x4(%rbx),%ebp
41fe(4): lea 0x8(%rbx),%r10
4202(4): sub $0x8,%rsp
4206(3): mov (%rbx),%r8d
4209(3): mov %r15,%rcx
420c(4): mov %eax,0x14(%rsp)
4210(3): push 0x30(%rbx)
4213(3): mov %r14,%rdx
4216(3): push 0x28(%rbx)
4219(2): push %r10
421b(2): xor %esi,%esi
421d(3): mov %ebp,%r9d
4220(2): xor %edi,%edi
4222(5): mov %r10,0x40(%rsp)
4227(5): call 0xffffea19(%rip)
422c(4): lea 0x1(%rax),%rsi
4230(5): mov %rax,0x48(%rsp)
4235(4): add $0x20,%rsp
4239(3): mov %rsi,%rdi
423c(5): mov %rsi,0x18(%rsp)
4241(5): call 0xe9f(%rip)
4246(5): mov %rax,0x10(%rsp)
424b(4): sub $0x8,%rsp
424f(3): push 0x30(%rbx)
4252(3): push 0x28(%rbx)
4255(5): mov 0x38(%rsp),%r10
425a(3): mov %ebp,%r9d
425d(3): mov (%rbx),%r8d
4260(3): mov %r15,%rcx
4263(3): mov %r14,%rdx
4266(3): mov %rax,%rdi
4269(2): push %r10
426b(5): mov 0x38(%rsp),%rsi
4270(5): call 0xffffe9d0(%rip)
4275(4): mov 0x2c(%rsp),%eax
4279(4): add $0x20,%rsp
427d(3): test %r12,%r12
4280(4): mov %eax,0x0(%r13)
4284(2): jz 0xb(%rip)
4286(5): mov 0x28(%rsp),%r11
428b(4): mov %r11,(%r12)
428f(5): mov 0x10(%rsp),%rax
4294(4): add $0x38,%rsp
4298(1): pop %rbx
4299(1): pop %rbp
429a(2): pop %r12
429c(2): pop %r13
429e(2): pop %r14
42a0(2): pop %r15
42a2(1): ret near (%rsp)

"quotearg_alloc" :
42b0(3): mov %rdx,%rcx
42b3(2): xor %edx,%edx
42b5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
42c0(6): mov 0x205d92(%rip),%eax
42c6(2): push %r12
42c8(7): mov 0x205d91(%rip),%r12
42cf(1): push %rbp
42d0(1): push %rbx
42d1(3): cmp $0x1,%eax
42d4(2): jle 0x2d(%rip)
42d6(3): sub $0x2,%eax
42d9(5): lea 0x18(%r12),%rbx
42de(4): shl/sal $0x4,%rax
42e2(5): lea 0x28(%r12,%rax,1),%rbp
42e7(9): nop 0x0(%rax,%rax,1)
42f0(3): mov (%rbx),%rdi
42f3(4): add $0x10,%rbx
42f7(5): call 0xffffd499(%rip)
42fc(3): cmp %rbp,%rbx
42ff(2): jnz 0xfffffff1(%rip)
4301(5): mov 0x8(%r12),%rdi
4306(7): lea 0x205df3(%rip),%rbx
430d(3): cmp %rbx,%rdi
4310(2): jz 0x19(%rip)
4312(5): call 0xffffd47e(%rip)
4317(b): mov $0x100,0x205d4e(%rip)
4322(7): mov %rbx,0x205d4f(%rip)
4329(7): lea 0x205d40(%rip),%rbx
4330(3): cmp %rbx,%r12
4333(2): jz 0x11(%rip)
4335(3): mov %r12,%rdi
4338(5): call 0xffffd458(%rip)
433d(7): mov %rbx,0x205d1c(%rip)
4344(1): pop %rbx
4345(a): mov $0x1,0x205d09(%rip)
434f(1): pop %rbp
4350(2): pop %r12
4352(1): ret near (%rsp)

"quotearg_n" :
4360(7): lea 0x205e99(%rip),%rcx
4367(7): mov $0xffffffff,%rdx
436e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4380(7): lea 0x205e79(%rip),%rcx
4387(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4390(7): lea 0x205e69(%rip),%rcx
4397(3): mov %rdi,%rsi
439a(7): mov $0xffffffff,%rdx
43a1(2): xor %edi,%edi
43a3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
43b0(7): lea 0x205e49(%rip),%rcx
43b7(3): mov %rsi,%rdx
43ba(3): mov %rdi,%rsi
43bd(2): xor %edi,%edi
43bf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
43d0(4): sub $0x48,%rsp
43d4(3): mov %rdx,%rax
43d7(9): mov $0x28,%rdx
43e0(5): mov %rdx,0x38(%rsp)
43e5(2): xor %edx,%edx
43e7(3): cmp $0xa,%esi
43ea(2): jz 0x6a(%rip)
43ec(3): mov %esi,(%rsp)
43ef(3): mov %rsp,%rcx
43f2(7): mov $0xffffffff,%rdx
43f9(3): mov %rax,%rsi
43fc(9): mov $0x0,0x4(%rsp)
4405(9): mov $0x0,0xc(%rsp)
440e(9): mov $0x0,0x14(%rsp)
4417(9): mov $0x0,0x1c(%rsp)
4420(9): mov $0x0,0x24(%rsp)
4429(9): mov $0x0,0x2c(%rsp)
4432(8): mov $0x0,0x34(%rsp)
443a(5): call 0xfffffa46(%rip)
443f(5): mov 0x38(%rsp),%rcx
4444(9): xor $0x28,%rcx
444d(2): jnz 0xc(%rip)
444f(4): add $0x48,%rsp
4453(1): ret near (%rsp)
4454(5): call 0xffffd34c(%rip)
4459(5): call 0xffffd477(%rip)

"quotearg_n_style_mem" :
4460(4): sub $0x48,%rsp
4464(3): mov %rdx,%rax
4467(3): mov %rcx,%rdx
446a(9): mov $0x28,%rcx
4473(5): mov %rcx,0x38(%rsp)
4478(2): xor %ecx,%ecx
447a(3): cmp $0xa,%esi
447d(2): jz 0x63(%rip)
447f(3): mov %esi,(%rsp)
4482(3): mov %rsp,%rcx
4485(3): mov %rax,%rsi
4488(9): mov $0x0,0x4(%rsp)
4491(9): mov $0x0,0xc(%rsp)
449a(9): mov $0x0,0x14(%rsp)
44a3(9): mov $0x0,0x1c(%rsp)
44ac(9): mov $0x0,0x24(%rsp)
44b5(9): mov $0x0,0x2c(%rsp)
44be(8): mov $0x0,0x34(%rsp)
44c6(5): call 0xfffff9ba(%rip)
44cb(5): mov 0x38(%rsp),%rdx
44d0(9): xor $0x28,%rdx
44d9(2): jnz 0xc(%rip)
44db(4): add $0x48,%rsp
44df(1): ret near (%rsp)
44e0(5): call 0xffffd2c0(%rip)
44e5(5): call 0xffffd3eb(%rip)

"quotearg_style" :
44f0(3): mov %rsi,%rdx
44f3(2): mov %edi,%esi
44f5(2): xor %edi,%edi
44f7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4500(3): mov %rdx,%rcx
4503(3): mov %rsi,%rdx
4506(2): mov %edi,%esi
4508(2): xor %edi,%edi
450a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4510(4): sub $0x48,%rsp
4514(2): mov %edx,%ecx
4516(9): mov $0x28,%rax
451f(5): mov %rax,0x38(%rsp)
4524(2): xor %eax,%eax
4526(7): mov 0x205d03(%rip),%rax
452d(3): mov %rsp,%r8
4530(3): and $0x1f,%ecx
4533(8): movdqa 0x205cc5(%rip),%xmm0
453b(5): mov %rax,0x30(%rsp)
4540(2): mov %edx,%eax
4542(4): movaps %xmm0,(%rsp)
4546(3): shr $0x5,%al
4549(3): movzx %al,%eax
454c(5): lea 0x8(%r8,%rax,4),%r9
4551(8): movdqa 0x205cb7(%rip),%xmm0
4559(5): movaps %xmm0,0x10(%rsp)
455e(8): movdqa 0x205cba(%rip),%xmm0
4566(5): movaps %xmm0,0x20(%rsp)
456b(3): mov (%r9),%edx
456e(2): mov %edx,%eax
4570(2): shr %cl,%eax
4572(2): not %eax
4574(3): and $0x1,%eax
4577(2): shl/sal %cl,%eax
4579(3): mov %r8,%rcx
457c(2): xor %edx,%eax
457e(3): mov %rsi,%rdx
4581(3): mov %rdi,%rsi
4584(3): mov %eax,(%r9)
4587(2): xor %edi,%edi
4589(5): call 0xfffff8f7(%rip)
458e(5): mov 0x38(%rsp),%rsi
4593(9): xor $0x28,%rsi
459c(2): jnz 0x7(%rip)
459e(4): add $0x48,%rsp
45a2(1): ret near (%rsp)
45a3(5): call 0xffffd32d(%rip)

"quotearg_char" :
45b0(4): movsx %sil,%edx
45b4(7): mov $0xffffffff,%rsi
45bb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
45c0(5): mov $0x3a,%edx
45c5(7): mov $0xffffffff,%rsi
45cc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
45e0(5): mov $0x3a,%edx
45e5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
45f0(4): sub $0x48,%rsp
45f4(3): mov %rdx,%rax
45f7(9): mov $0x28,%rdx
4600(5): mov %rdx,0x38(%rsp)
4605(2): xor %edx,%edx
4607(3): cmp $0xa,%esi
460a(2): jz 0x6a(%rip)
460c(3): mov %esi,(%rsp)
460f(3): mov %rsp,%rcx
4612(7): mov $0xffffffff,%rdx
4619(3): mov %rax,%rsi
461c(9): mov $0x0,0x4(%rsp)
4625(9): mov $0x4000000,0xc(%rsp)
462e(9): mov $0x0,0x14(%rsp)
4637(9): mov $0x0,0x1c(%rsp)
4640(9): mov $0x0,0x24(%rsp)
4649(9): mov $0x0,0x2c(%rsp)
4652(8): mov $0x0,0x34(%rsp)
465a(5): call 0xfffff826(%rip)
465f(5): mov 0x38(%rsp),%rcx
4664(9): xor $0x28,%rcx
466d(2): jnz 0xc(%rip)
466f(4): add $0x48,%rsp
4673(1): ret near (%rsp)
4674(5): call 0xffffd12c(%rip)
4679(5): call 0xffffd257(%rip)

"quotearg_n_custom_mem" :
4680(4): sub $0x48,%rsp
4684(3): mov %rcx,%r9
4687(7): mov 0x205ba2(%rip),%rcx
468e(8): movdqa 0x205b6a(%rip),%xmm0
4696(9): mov $0x28,%rax
469f(5): mov %rax,0x38(%rsp)
46a4(2): xor %eax,%eax
46a6(4): movaps %xmm0,(%rsp)
46aa(3): test %rsi,%rsi
46ad(5): mov %rcx,0x30(%rsp)
46b2(7): mov $0xa,(%rsp)
46b9(8): movdqa 0x205b4f(%rip),%xmm0
46c1(5): movaps %xmm0,0x10(%rsp)
46c6(8): movdqa 0x205b52(%rip),%xmm0
46ce(5): movaps %xmm0,0x20(%rsp)
46d3(2): jz 0x34(%rip)
46d5(3): test %rdx,%rdx
46d8(2): jz 0x2f(%rip)
46da(5): mov %rsi,0x28(%rsp)
46df(5): mov %rdx,0x30(%rsp)
46e4(3): mov %rsp,%rcx
46e7(3): mov %r8,%rdx
46ea(3): mov %r9,%rsi
46ed(5): call 0xfffff793(%rip)
46f2(5): mov 0x38(%rsp),%rdi
46f7(9): xor $0x28,%rdi
4700(2): jnz 0xc(%rip)
4702(4): add $0x48,%rsp
4706(1): ret near (%rsp)
4707(5): call 0xffffd099(%rip)
470c(5): call 0xffffd1c4(%rip)

"quotearg_n_custom" :
4720(7): mov $0xffffffff,%r8
4727(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4730(3): mov %rdx,%rcx
4733(7): mov $0xffffffff,%r8
473a(3): mov %rsi,%rdx
473d(3): mov %rdi,%rsi
4740(2): xor %edi,%edi
4742(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4750(3): mov %rcx,%r8
4753(3): mov %rdx,%rcx
4756(3): mov %rsi,%rdx
4759(3): mov %rdi,%rsi
475c(2): xor %edi,%edi
475e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4770(7): lea 0x2058a9(%rip),%rcx
4777(5): jmp 0xfffff709(%rip)

"quote_mem" :
4780(7): lea 0x205899(%rip),%rcx
4787(3): mov %rsi,%rdx
478a(3): mov %rdi,%rsi
478d(2): xor %edi,%edi
478f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
47a0(7): lea 0x205879(%rip),%rcx
47a7(7): mov $0xffffffff,%rdx
47ae(5): jmp 0xfffff6d2(%rip)

"quote" :
47c0(7): lea 0x205859(%rip),%rcx
47c7(3): mov %rdi,%rsi
47ca(7): mov $0xffffffff,%rdx
47d1(2): xor %edi,%edi
47d3(5): jmp 0xfffff6ad(%rip)

"try_nocreate" :
47e0(1): push %rbx
47e1(3): mov %rdi,%rsi
47e4(5): mov $0x1,%edi
47e9(7): sub $0xa0,%rsp
47f0(3): mov %rsp,%rdx
47f3(9): mov $0x28,%rax
47fc(8): mov %rax,0x98(%rsp)
4804(2): xor %eax,%eax
4806(5): call 0xffffd0ba(%rip)
480b(2): mov %eax,%ebx
480d(5): call 0xffffcfa3(%rip)
4812(2): test %ebx,%ebx
4814(2): jz 0x1c(%rip)
4816(2): mov (%rax),%edx
4818(3): cmp $0x4b,%edx
481b(2): jz 0x15(%rip)
481d(2): xor %eax,%eax
481f(3): cmp $0x2,%edx
4822(3): setnz %al
4825(2): neg %eax
4827(2): jmp 0x14(%rip)
4829(7): nop 0x0(%rax)
4830(6): mov $0x11,(%rax)
4836(5): mov $0xffffffff,%eax
483b(8): mov 0x98(%rsp),%rcx
4843(9): xor $0x28,%rcx
484c(2): jnz 0xb(%rip)
484e(7): add $0xa0,%rsp
4855(1): pop %rbx
4856(1): ret near (%rsp)
4857(5): call 0xffffd079(%rip)

"try_dir" :
4860(5): mov $0x1c0,%esi
4865(5): jmp 0xffffcfab(%rip)

"try_file" :
4870(2): mov (%rsi),%esi
4872(5): mov $0x180,%edx
4877(2): xor %eax,%eax
4879(4): and $0x3c,%sil
487d(4): or $0xc2,%sil
4881(5): jmp 0xffffd22f(%rip)

"try_tempname_len" :
4890(2): push %r15
4892(2): push %r14
4894(3): mov %rdi,%r15
4897(2): push %r13
4899(2): push %r12
489b(3): mov %r8,%r14
489e(1): push %rbp
489f(1): push %rbx
48a0(2): mov %esi,%ebp
48a2(4): sub $0x38,%rsp
48a6(5): mov %rdx,0x18(%rsp)
48ab(4): mov %rdi,(%rsp)
48af(5): mov %rcx,0x20(%rsp)
48b4(5): call 0xffffcefc(%rip)
48b9(5): mov %rax,0x8(%rsp)
48be(2): mov (%rax),%eax
48c0(3): mov %r15,%rdi
48c3(4): mov %eax,0x2c(%rsp)
48c7(5): call 0xffffcfe9(%rip)
48cc(3): movsxd %ebp,%rsi
48cf(4): lea 0x0(%rsi,%r14,1),%rdx
48d3(3): cmp %rax,%rdx
48d6(6): jnbe 0x115(%rip)
48dc(3): sub %r14,%rax
48df(3): mov %rax,%rbx
48e2(3): sub %rsi,%rbx
48e5(7): lea 0x2f7a(%rip),%rsi
48ec(4): lea 0x0(%r15,%rbx,1),%rax
48f0(3): mov %rax,%rdi
48f3(5): mov %rax,0x10(%rsp)
48f8(5): call 0xffffd078(%rip)
48fd(3): cmp %rax,%r14
4900(6): jnbe 0xeb(%rip)
4906(2): xor %edi,%edi
4908(3): mov %r14,%rsi
490b(5): call 0xce5(%rip)
4910(3): test %rax,%rax
4913(3): mov %rax,%rbp
4916(6): jz 0xe7(%rip)
491c(4): mov (%rsp),%rax
4920(7): lea 0x2b99(%rip),%r12
4927(6): mov $0x3a2f8,%r13d
492d(3): add %r14,%rax
4930(3): add %rax,%rbx
4933(5): nop 0x0(%rax,%rax,1)
4938(3): test %r14,%r14
493b(5): mov 0x10(%rsp),%r15
4940(2): jz 0x27(%rip)
4942(6): nop 0x0(%rax,%rax,1)
4948(5): mov $0x3d,%esi
494d(3): mov %rbp,%rdi
4950(4): add $0x1,%r15
4954(5): call 0xcec(%rip)
4959(5): movzx 0x0(%r12,%rax,1),%eax
495e(4): mov %al,0xffffffff(%r15)
4962(3): cmp %rbx,%r15
4965(2): jnz 0xffffffe3(%rip)
4967(5): mov 0x18(%rsp),%rsi
496c(4): mov (%rsp),%rdi
4970(5): mov 0x20(%rsp),%rax
4975(2): call %rax
4977(2): test %eax,%eax
4979(2): mov %eax,%edx
497b(2): jns 0x2e(%rip)
497d(5): mov 0x8(%rsp),%rax
4982(2): mov (%rax),%ecx
4984(3): cmp $0x11,%ecx
4987(2): jnz 0x5d(%rip)
4989(4): sub $0x1,%r13d
498d(2): jnz 0xffffffab(%rip)
498f(3): mov %rbp,%rdi
4992(5): call 0xdee(%rip)
4997(5): mov 0x8(%rsp),%rax
499c(5): mov $0xffffffff,%edx
49a1(6): mov $0x11,(%rax)
49a7(2): jmp 0x2c(%rip)
49a9(5): mov 0x8(%rsp),%rcx
49ae(4): mov 0x2c(%rsp),%eax
49b2(2): mov %eax,(%rcx)
49b4(2): mov %eax,%ecx
49b6(3): mov %rbp,%rdi
49b9(4): mov %edx,0x10(%rsp)
49bd(3): mov %ecx,(%rsp)
49c0(5): call 0xdc0(%rip)
49c5(5): mov 0x8(%rsp),%rax
49ca(3): mov (%rsp),%ecx
49cd(4): mov 0x10(%rsp),%edx
49d1(2): mov %ecx,(%rax)
49d3(4): add $0x38,%rsp
49d7(2): mov %edx,%eax
49d9(1): pop %rbx
49da(1): pop %rbp
49db(2): pop %r12
49dd(2): pop %r13
49df(2): pop %r14
49e1(2): pop %r15
49e3(1): ret near (%rsp)
49e4(5): mov $0xffffffff,%edx
49e9(2): jmp 0xffffffcd(%rip)
49eb(5): mov 0x8(%rsp),%rax
49f0(5): mov $0xffffffff,%edx
49f5(6): mov $0x16,(%rax)
49fb(2): jmp 0xffffffd8(%rip)
49fd(5): mov $0xffffffff,%edx
4a02(2): jmp 0xffffffd1(%rip)

"gen_tempname_len" :
4a10(4): sub $0x18,%rsp
4a14(3): cmp $0x1,%ecx
4a17(4): mov %edx,0xc(%rsp)
4a1b(2): jz 0x65(%rip)
4a1d(3): cmp $0x2,%ecx
4a20(2): jz 0x28(%rip)
4a22(2): test %ecx,%ecx
4a24(2): jz 0x3c(%rip)
4a26(7): lea 0x2a73(%rip),%rcx
4a2d(7): lea 0x2a14(%rip),%rsi
4a34(7): lea 0x2a35(%rip),%rdi
4a3b(5): mov $0x147,%edx
4a40(5): call 0xffffcf00(%rip)
4a45(3): nop (%rax)
4a48(5): lea 0xc(%rsp),%rdx
4a4d(7): lea 0xfffffd8c(%rip),%rcx
4a54(5): call 0xfffffe3c(%rip)
4a59(4): add $0x18,%rsp
4a5d(1): ret near (%rsp)
4a5e(2): nop 
4a60(5): lea 0xc(%rsp),%rdx
4a65(7): lea 0xfffffe04(%rip),%rcx
4a6c(5): call 0xfffffe24(%rip)
4a71(4): add $0x18,%rsp
4a75(1): ret near (%rsp)
4a76(a): nop 0x0(%rax,%rax,1)
4a80(5): lea 0xc(%rsp),%rdx
4a85(7): lea 0xfffffdd4(%rip),%rcx
4a8c(5): call 0xfffffe04(%rip)
4a91(4): add $0x18,%rsp
4a95(1): ret near (%rsp)

"gen_tempname" :
4aa0(6): mov $0x6,%r8d
4aa6(5): jmp 0xffffff6a(%rip)

"try_tempname" :
4ab0(6): mov $0x6,%r8d
4ab6(5): jmp 0xfffffdda(%rip)

"version_etc_arn" :
4ac0(2): push %r15
4ac2(2): push %r14
4ac4(2): push %r13
4ac6(2): push %r12
4ac8(3): mov %r9,%r12
4acb(1): push %rbp
4acc(1): push %rbx
4acd(3): mov %rdi,%rbp
4ad0(3): mov %r8,%rbx
4ad3(4): sub $0x28,%rsp
4ad7(3): test %rsi,%rsi
4ada(6): jz 0x11e(%rip)
4ae0(3): mov %rdx,%r8
4ae3(7): lea 0x2a15(%rip),%rdx
4aea(3): mov %rcx,%r9
4aed(2): xor %eax,%eax
4aef(3): mov %rsi,%rcx
4af2(5): mov $0x1,%esi
4af7(5): call 0xffffd029(%rip)
4afc(7): lea 0x2a0f(%rip),%rsi
4b03(2): xor %edi,%edi
4b05(5): mov $0x5,%edx
4b0a(5): call 0xffffcd86(%rip)
4b0f(7): lea 0x2d0a(%rip),%rdx
4b16(3): mov %rax,%rcx
4b19(6): mov $0x7e3,%r8d
4b1f(5): mov $0x1,%esi
4b24(3): mov %rbp,%rdi
4b27(2): xor %eax,%eax
4b29(5): call 0xffffcff7(%rip)
4b2e(7): lea 0x2a63(%rip),%rsi
4b35(2): xor %edi,%edi
4b37(5): mov $0x5,%edx
4b3c(5): call 0xffffcd54(%rip)
4b41(3): mov %rbp,%rsi
4b44(3): mov %rax,%rdi
4b47(5): call 0xffffce49(%rip)
4b4c(4): cmp $0x9,%r12
4b50(6): jnbe 0x340(%rip)
4b56(7): lea 0x2c9b(%rip),%rdx
4b5d(4): movsxd 0x0(%rdx,%r12,4),%rax
4b61(3): add %rdx,%rax
4b64(2): jmp %rax
4b66(a): nop 0x0(%rax,%rax,1)
4b70(4): mov 0x38(%rbx),%r9
4b74(4): mov 0x10(%rbx),%rax
4b78(7): lea 0x2b89(%rip),%rsi
4b7f(4): mov 0x8(%rbx),%r8
4b83(5): mov $0x5,%edx
4b88(2): xor %edi,%edi
4b8a(4): mov 0x30(%rbx),%r13
4b8e(4): mov 0x28(%rbx),%r12
4b92(5): mov %r9,0x10(%rsp)
4b97(4): mov 0x20(%rbx),%r15
4b9b(4): mov 0x18(%rbx),%r14
4b9f(4): mov %rax,(%rsp)
4ba3(5): mov %r8,0x8(%rsp)
4ba8(3): mov (%rbx),%rbx
4bab(5): call 0xffffcce5(%rip)
4bb0(4): sub $0x8,%rsp
4bb4(5): mov 0x18(%rsp),%r9
4bb9(3): mov %rax,%rdx
4bbc(3): mov %rbx,%rcx
4bbf(5): mov $0x1,%esi
4bc4(3): mov %rbp,%rdi
4bc7(2): xor %eax,%eax
4bc9(2): push %r9
4bcb(2): push %r13
4bcd(2): push %r12
4bcf(2): push %r15
4bd1(2): push %r14
4bd3(5): mov 0x30(%rsp),%r9
4bd8(5): mov 0x38(%rsp),%r8
4bdd(5): call 0xffffcf43(%rip)
4be2(4): add $0x30,%rsp
4be6(4): add $0x28,%rsp
4bea(1): pop %rbx
4beb(1): pop %rbp
4bec(2): pop %r12
4bee(2): pop %r13
4bf0(2): pop %r14
4bf2(2): pop %r15
4bf4(1): ret near (%rsp)
4bf5(3): nop (%rax)
4bf8(3): mov %rcx,%r8
4bfb(3): mov %rdx,%rcx
4bfe(7): lea 0x2906(%rip),%rdx
4c05(5): mov $0x1,%esi
4c0a(2): xor %eax,%eax
4c0c(5): call 0xffffcf14(%rip)
4c11(5): jmp 0xfffffeeb(%rip)
4c16(a): nop 0x0(%rax,%rax,1)
4c20(4): mov 0x40(%rbx),%r10
4c24(4): mov 0x38(%rbx),%r9
4c28(7): lea 0x2b09(%rip),%rsi
4c2f(4): mov 0x10(%rbx),%rax
4c33(4): mov 0x8(%rbx),%r8
4c37(5): mov $0x5,%edx
4c3c(4): mov 0x30(%rbx),%r13
4c40(4): mov 0x28(%rbx),%r12
4c44(4): mov 0x20(%rbx),%r15
4c48(4): mov 0x18(%rbx),%r14
4c4c(3): mov (%rbx),%rbx
4c4f(5): mov %r10,0x18(%rsp)
4c54(5): mov %r9,0x10(%rsp)
4c59(4): mov %rax,(%rsp)
4c5d(5): mov %r8,0x8(%rsp)
4c62(2): xor %edi,%edi
4c64(5): call 0xffffcc2c(%rip)
4c69(5): mov 0x18(%rsp),%r10
4c6e(2): push %r10
4c70(5): jmp 0xffffff44(%rip)
4c75(3): nop (%rax)
4c78(3): mov (%rbx),%rbx
4c7b(7): lea 0x2894(%rip),%rsi
4c82(5): mov $0x5,%edx
4c87(2): xor %edi,%edi
4c89(5): call 0xffffcc07(%rip)
4c8e(4): add $0x28,%rsp
4c92(3): mov %rbx,%rcx
4c95(3): mov %rbp,%rdi
4c98(1): pop %rbx
4c99(1): pop %rbp
4c9a(2): pop %r12
4c9c(2): pop %r13
4c9e(2): pop %r14
4ca0(2): pop %r15
4ca2(3): mov %rax,%rdx
4ca5(5): mov $0x1,%esi
4caa(2): xor %eax,%eax
4cac(5): jmp 0xffffce74(%rip)
4cb1(7): nop 0x0(%rax)
4cb8(4): mov 0x8(%rbx),%r12
4cbc(7): lea 0x2863(%rip),%rsi
4cc3(3): mov (%rbx),%rbx
4cc6(5): mov $0x5,%edx
4ccb(2): xor %edi,%edi
4ccd(5): call 0xffffcbc3(%rip)
4cd2(4): add $0x28,%rsp
4cd6(3): mov %r12,%r8
4cd9(3): mov %rbx,%rcx
4cdc(3): mov %rbp,%rdi
4cdf(3): mov %rax,%rdx
4ce2(5): mov $0x1,%esi
4ce7(1): pop %rbx
4ce8(1): pop %rbp
4ce9(2): pop %r12
4ceb(2): pop %r13
4ced(2): pop %r14
4cef(2): pop %r15
4cf1(2): xor %eax,%eax
4cf3(5): jmp 0xffffce2d(%rip)
4cf8(8): nop 0x0(%rax,%rax,1)
4d00(4): mov 0x10(%rbx),%r13
4d04(4): mov 0x8(%rbx),%r12
4d08(7): lea 0x282e(%rip),%rsi
4d0f(3): mov (%rbx),%rbx
4d12(5): mov $0x5,%edx
4d17(2): xor %edi,%edi
4d19(5): call 0xffffcb77(%rip)
4d1e(4): add $0x28,%rsp
4d22(3): mov %r13,%r9
4d25(3): mov %r12,%r8
4d28(3): mov %rbx,%rcx
4d2b(3): mov %rbp,%rdi
4d2e(3): mov %rax,%rdx
4d31(1): pop %rbx
4d32(1): pop %rbp
4d33(2): pop %r12
4d35(2): pop %r13
4d37(2): pop %r14
4d39(2): pop %r15
4d3b(5): mov $0x1,%esi
4d40(2): xor %eax,%eax
4d42(5): jmp 0xffffcdde(%rip)
4d47(9): nop 0x0(%rax,%rax,1)
4d50(7): lea 0x2911(%rip),%rsi
4d57(5): mov $0x5,%edx
4d5c(2): xor %edi,%edi
4d5e(4): mov 0x18(%rbx),%r14
4d62(4): mov 0x10(%rbx),%r13
4d66(4): mov 0x8(%rbx),%r12
4d6a(3): mov (%rbx),%rbx
4d6d(5): call 0xffffcb23(%rip)
4d72(4): sub $0x8,%rsp
4d76(2): push %r14
4d78(3): mov %rax,%rdx
4d7b(3): mov %r13,%r9
4d7e(3): mov %r12,%r8
4d81(3): mov %rbx,%rcx
4d84(3): mov %rbp,%rdi
4d87(5): mov $0x1,%esi
4d8c(2): xor %eax,%eax
4d8e(5): call 0xffffcd92(%rip)
4d93(1): pop %rax
4d94(1): pop %rdx
4d95(4): add $0x28,%rsp
4d99(1): pop %rbx
4d9a(1): pop %rbp
4d9b(2): pop %r12
4d9d(2): pop %r13
4d9f(2): pop %r14
4da1(2): pop %r15
4da3(1): ret near (%rsp)
4da4(4): nop 0x0(%rax)
4da8(4): mov 0x20(%rbx),%r15
4dac(7): lea 0x28d5(%rip),%rsi
4db3(5): mov $0x5,%edx
4db8(2): xor %edi,%edi
4dba(4): mov 0x18(%rbx),%r14
4dbe(4): mov 0x10(%rbx),%r13
4dc2(4): mov 0x8(%rbx),%r12
4dc6(3): mov (%rbx),%rbx
4dc9(5): call 0xffffcac7(%rip)
4dce(2): push %r15
4dd0(2): jmp 0xffffffa6(%rip)
4dd2(6): nop 0x0(%rax,%rax,1)
4dd8(4): mov 0x8(%rbx),%r8
4ddc(4): mov 0x28(%rbx),%r12
4de0(7): lea 0x28c9(%rip),%rsi
4de7(4): mov 0x20(%rbx),%r15
4deb(4): mov 0x18(%rbx),%r14
4def(5): mov $0x5,%edx
4df4(4): mov 0x10(%rbx),%r13
4df8(2): xor %edi,%edi
4dfa(3): mov (%rbx),%rbx
4dfd(4): mov %r8,(%rsp)
4e01(5): call 0xffffca8f(%rip)
4e06(4): sub $0x8,%rsp
4e0a(3): mov %r13,%r9
4e0d(2): push %r12
4e0f(2): push %r15
4e11(2): push %r14
4e13(5): mov 0x20(%rsp),%r8
4e18(3): mov %rbx,%rcx
4e1b(3): mov %rax,%rdx
4e1e(3): mov %rbp,%rdi
4e21(5): mov $0x1,%esi
4e26(2): xor %eax,%eax
4e28(5): call 0xffffccf8(%rip)
4e2d(4): add $0x20,%rsp
4e31(4): add $0x28,%rsp
4e35(1): pop %rbx
4e36(1): pop %rbp
4e37(2): pop %r12
4e39(2): pop %r13
4e3b(2): pop %r14
4e3d(2): pop %r15
4e3f(1): ret near (%rsp)
4e40(4): mov 0x10(%rbx),%r9
4e44(4): mov 0x30(%rbx),%r13
4e48(7): lea 0x2889(%rip),%rsi
4e4f(4): mov 0x28(%rbx),%r12
4e53(4): mov 0x20(%rbx),%r15
4e57(5): mov $0x5,%edx
4e5c(4): mov 0x18(%rbx),%r14
4e60(4): mov 0x8(%rbx),%r8
4e64(2): xor %edi,%edi
4e66(5): mov %r9,0x8(%rsp)
4e6b(3): mov (%rbx),%rbx
4e6e(4): mov %r8,(%rsp)
4e72(5): call 0xffffca1e(%rip)
4e77(2): push %r13
4e79(2): push %r12
4e7b(2): push %r15
4e7d(2): push %r14
4e7f(5): mov 0x28(%rsp),%r9
4e84(2): jmp 0xffffff8f(%rip)
4e86(a): nop 0x0(%rax,%rax,1)
4e90(4): mov 0x40(%rbx),%r10
4e94(4): mov 0x38(%rbx),%r9
4e98(5): mov $0x5,%edx
4e9d(4): mov 0x10(%rbx),%rax
4ea1(4): mov 0x8(%rbx),%r8
4ea5(7): lea 0x28c4(%rip),%rsi
4eac(4): mov 0x30(%rbx),%r13
4eb0(4): mov 0x28(%rbx),%r12
4eb4(4): mov 0x20(%rbx),%r15
4eb8(4): mov 0x18(%rbx),%r14
4ebc(5): mov %r10,0x18(%rsp)
4ec1(5): mov %r9,0x10(%rsp)
4ec6(4): mov %rax,(%rsp)
4eca(5): mov %r8,0x8(%rsp)
4ecf(3): mov (%rbx),%rbx
4ed2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4ee0(3): xor %r9d,%r9d
4ee3(4): cmp $0x0,(%r8)
4ee7(2): jz 0x14(%rip)
4ee9(7): nop 0x0(%rax)
4ef0(4): add $0x1,%r9
4ef4(5): cmp $0x0,0x0(%r8,%r9,8)
4ef9(2): jnz 0xfffffff7(%rip)
4efb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4f00(4): sub $0x68,%rsp
4f04(3): mov %r8,%r10
4f07(3): xor %r9d,%r9d
4f0a(9): mov $0x28,%rax
4f13(5): mov %rax,0x58(%rsp)
4f18(2): xor %eax,%eax
4f1a(3): mov %rsp,%r8
4f1d(3): nop (%rax)
4f20(3): mov (%r10),%eax
4f23(3): cmp $0x2f,%eax
4f26(2): jnbe 0x44(%rip)
4f28(3): mov %eax,%r11d
4f2b(4): add 0x10(%r10),%r11
4f2f(3): add $0x8,%eax
4f32(3): mov %eax,(%r10)
4f35(3): mov (%r11),%rax
4f38(3): test %rax,%rax
4f3b(4): mov %rax,0x0(%r8,%r9,8)
4f3f(2): jz 0xc(%rip)
4f41(4): add $0x1,%r9
4f45(4): cmp $0xa,%r9
4f49(2): jnz 0xffffffd7(%rip)
4f4b(5): call 0xfffffb75(%rip)
4f50(5): mov 0x58(%rsp),%rax
4f55(9): xor $0x28,%rax
4f5e(2): jnz 0x7(%rip)
4f60(4): add $0x68,%rsp
4f64(1): ret near (%rsp)
4f65(5): call 0xffffc96b(%rip)
4f6a(4): mov 0x8(%r10),%r11
4f6e(4): lea 0x8(%r11),%rax
4f72(4): mov %rax,0x8(%r10)
4f76(2): jmp 0xffffffbf(%rip)

"version_etc" :
4f80(1): push %rbp
4f81(1): push %rbx
4f82(6): mov $0x20,%r10d
4f88(3): xor %r11d,%r11d
4f8b(7): sub $0xb8,%rsp
4f92(9): mov $0x28,%rax
4f9b(5): mov %rax,0x78(%rsp)
4fa0(2): xor %eax,%eax
4fa2(8): lea 0xd0(%rsp),%rax
4faa(8): mov %r8,0xa0(%rsp)
4fb2(8): lea 0xd0(%rsp),%rbx
4fba(5): lea 0x20(%rsp),%r8
4fbf(8): mov %r9,0xa8(%rsp)
4fc7(8): mov $0x20,0x8(%rsp)
4fcf(5): mov %rax,0x10(%rsp)
4fd4(8): lea 0x80(%rsp),%rax
4fdc(3): xor %r9d,%r9d
4fdf(5): mov %rax,0x18(%rsp)
4fe4(3): mov %rax,%rbp
4fe7(9): nop 0x0(%rax,%rax,1)
4ff0(4): cmp $0x2f,%r10d
4ff4(2): jnbe 0x58(%rip)
4ff6(3): mov %r10d,%eax
4ff9(6): mov $0x1,%r11d
4fff(4): add $0x8,%r10d
5003(3): add %rbp,%rax
5006(3): mov (%rax),%rax
5009(3): test %rax,%rax
500c(4): mov %rax,0x0(%r8,%r9,8)
5010(2): jz 0xc(%rip)
5012(4): add $0x1,%r9
5016(4): cmp $0xa,%r9
501a(2): jnz 0xffffffd6(%rip)
501c(3): test %r11b,%r11b
501f(2): jnz 0x26(%rip)
5021(5): call 0xfffffa9f(%rip)
5026(5): mov 0x78(%rsp),%rax
502b(9): xor $0x28,%rax
5034(2): jnz 0xc(%rip)
5036(7): add $0xb8,%rsp
503d(1): pop %rbx
503e(1): pop %rbp
503f(1): ret near (%rsp)
5040(5): call 0xffffc890(%rip)
5045(5): mov %r10d,0x8(%rsp)
504a(2): jmp 0xffffffd7(%rip)
504c(3): mov %rbx,%rax
504f(4): add $0x8,%rbx
5053(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5060(1): push %rbx
5061(7): lea 0x24f1(%rip),%rsi
5068(5): mov $0x5,%edx
506d(2): xor %edi,%edi
506f(5): call 0xffffc821(%rip)
5074(7): lea 0x24f3(%rip),%rdx
507b(3): mov %rax,%rsi
507e(5): mov $0x1,%edi
5083(2): xor %eax,%eax
5085(5): call 0xffffc9db(%rip)
508a(7): lea 0x24f3(%rip),%rsi
5091(5): mov $0x5,%edx
5096(2): xor %edi,%edi
5098(5): call 0xffffc7f8(%rip)
509d(7): lea 0x1c94(%rip),%rcx
50a4(7): lea 0x15f6(%rip),%rdx
50ab(3): mov %rax,%rsi
50ae(5): mov $0x1,%edi
50b3(2): xor %eax,%eax
50b5(5): call 0xffffc9ab(%rip)
50ba(7): mov 0x204fc7(%rip),%rbx
50c1(7): lea 0x26e8(%rip),%rsi
50c8(2): xor %edi,%edi
50ca(5): mov $0x5,%edx
50cf(5): call 0xffffc7c1(%rip)
50d4(3): mov %rbx,%rsi
50d7(3): mov %rax,%rdi
50da(1): pop %rbx
50db(5): jmp 0xffffc8b5(%rip)

"xmalloc" :
50e0(1): push %rbx
50e1(3): mov %rdi,%rbx
50e4(5): call 0xffffc90c(%rip)
50e9(3): test %rax,%rax
50ec(2): jnz 0x7(%rip)
50ee(3): test %rbx,%rbx
50f1(2): jnz 0x4(%rip)
50f3(1): pop %rbx
50f4(1): ret near (%rsp)
50f5(5): call 0x23b(%rip)

"xnmalloc" :
5100(3): mov %rdi,%rax
5103(3): mul %rax,%rsi,%rdx
5106(3): mov %rax,%rdi
5109(3): seto %al
510c(3): test %rdi,%rdi
510f(2): js 0xc(%rip)
5111(3): movzx %al,%eax
5114(3): test %rax,%rax
5117(2): jnz 0x4(%rip)
5119(2): jmp 0xffffffc7(%rip)
511b(4): sub $0x8,%rsp
511f(5): call 0x211(%rip)

"xrealloc" :
5140(3): test %rsi,%rsi
5143(1): push %rbx
5144(3): mov %rsi,%rbx
5147(2): jnz 0x7(%rip)
5149(3): test %rdi,%rdi
514c(2): jnz 0x1c(%rip)
514e(3): mov %rbx,%rsi
5151(5): call 0xffffc8df(%rip)
5156(3): test %rax,%rax
5159(2): jnz 0x7(%rip)
515b(3): test %rbx,%rbx
515e(2): jnz 0x13(%rip)
5160(1): pop %rbx
5161(1): ret near (%rsp)
5162(6): nop 0x0(%rax,%rax,1)
5168(5): call 0xffffc628(%rip)
516d(2): xor %eax,%eax
516f(1): pop %rbx
5170(1): ret near (%rsp)
5171(5): call 0x1bf(%rip)

"xnrealloc" :
5180(3): mov %rsi,%rax
5183(3): mul %rax,%rdx,%rdx
5186(3): mov %rax,%rsi
5189(3): seto %al
518c(3): test %rsi,%rsi
518f(2): js 0xc(%rip)
5191(3): movzx %al,%eax
5194(3): test %rax,%rax
5197(2): jnz 0x4(%rip)
5199(2): jmp 0xffffffa7(%rip)
519b(4): sub $0x8,%rsp
519f(5): call 0x191(%rip)

"x2nrealloc" :
51b0(3): test %rdi,%rdi
51b3(3): mov %rdx,%r9
51b6(3): mov (%rsi),%rcx
51b9(2): jz 0x37(%rip)
51bb(2): xor %edx,%edx
51bd(a): mov $0x6148914691236517204,%rax
51c7(3): div %r9,%rax
51ca(3): cmp %rcx,%rax
51cd(2): jbe 0x3e(%rip)
51cf(3): mov %rcx,%rax
51d2(3): shr $0x1,%rax
51d5(5): lea 0x1(%rax,%rcx,1),%rcx
51da(3): mov %rcx,(%rsi)
51dd(4): imul %r9,%rcx
51e1(3): mov %rcx,%rsi
51e4(5): jmp 0xffffff5c(%rip)
51e9(7): nop 0x0(%rax)
51f0(3): test %rcx,%rcx
51f3(2): jz 0x25(%rip)
51f5(3): mov %rcx,%rax
51f8(3): mul %rax,%r9,%rdx
51fb(3): seto %dl
51fe(3): test %rax,%rax
5201(3): movzx %dl,%edx
5204(2): js 0x7(%rip)
5206(3): test %rdx,%rdx
5209(2): jz 0xffffffd1(%rip)
520b(4): sub $0x8,%rsp
520f(5): call 0x121(%rip)
5214(4): nop 0x0(%rax)
5218(2): xor %edx,%edx
521a(5): mov $0x80,%eax
521f(3): xor %r8d,%r8d
5222(3): div %r9,%rax
5225(3): test %rax,%rax
5228(4): setz %r8b
522c(4): lea 0x0(%r8,%rax,1),%rcx
5230(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5240(3): test %rdi,%rdi
5243(3): mov (%rsi),%rax
5246(2): jz 0x2a(%rip)
5248(a): mov $0x6148914691236517203,%rdx
5252(3): cmp %rdx,%rax
5255(2): jnbe 0x2c(%rip)
5257(3): mov %rax,%rdx
525a(3): shr $0x1,%rdx
525d(5): lea 0x1(%rdx,%rax,1),%rax
5262(3): mov %rax,(%rsi)
5265(3): mov %rax,%rsi
5268(5): jmp 0xfffffed8(%rip)
526d(3): nop (%rax)
5270(3): test %rax,%rax
5273(5): mov $0x80,%edx
5278(4): cmove %rdx,%rax
527c(3): test %rax,%rax
527f(2): jns 0xffffffe3(%rip)
5281(4): sub $0x8,%rsp
5285(5): call 0xab(%rip)

"xzalloc" :
5290(1): push %rbx
5291(3): mov %rdi,%rbx
5294(5): call 0xfffffe4c(%rip)
5299(3): mov %rbx,%rdx
529c(2): xor %esi,%esi
529e(3): mov %rax,%rdi
52a1(1): pop %rbx
52a2(5): jmp 0xffffc6ae(%rip)

"xcalloc" :
52b0(3): mov %rdi,%rax
52b3(4): sub $0x8,%rsp
52b7(3): mul %rax,%rsi,%rdx
52ba(3): seto %dl
52bd(3): test %rax,%rax
52c0(2): js 0x19(%rip)
52c2(3): movzx %dl,%edx
52c5(3): test %rdx,%rdx
52c8(2): jnz 0x11(%rip)
52ca(5): call 0xffffc6d6(%rip)
52cf(3): test %rax,%rax
52d2(2): jz 0x7(%rip)
52d4(4): add $0x8,%rsp
52d8(1): ret near (%rsp)
52d9(5): call 0x57(%rip)

"xmemdup" :
52e0(1): push %rbp
52e1(1): push %rbx
52e2(3): mov %rdi,%rbp
52e5(3): mov %rsi,%rdi
52e8(3): mov %rsi,%rbx
52eb(4): sub $0x8,%rsp
52ef(5): call 0xfffffdf1(%rip)
52f4(4): add $0x8,%rsp
52f8(3): mov %rbx,%rdx
52fb(3): mov %rbp,%rsi
52fe(1): pop %rbx
52ff(1): pop %rbp
5300(3): mov %rax,%rdi
5303(5): jmp 0xffffc6bd(%rip)

"xstrdup" :
5310(1): push %rbx
5311(3): mov %rdi,%rbx
5314(5): call 0xffffc59c(%rip)
5319(3): mov %rbx,%rdi
531c(4): lea 0x1(%rax),%rsi
5320(1): pop %rbx
5321(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5330(7): lea 0x2518(%rip),%rsi
5337(4): sub $0x8,%rsp
533b(5): mov $0x5,%edx
5340(2): xor %edi,%edi
5342(5): call 0xffffc54e(%rip)
5347(6): mov 0x204ccb(%rip),%edi
534d(7): lea 0x1bc3(%rip),%rdx
5354(3): mov %rax,%rcx
5357(2): xor %esi,%esi
5359(2): xor %eax,%eax
535b(5): call 0xffffc735(%rip)
5360(5): call 0xffffc440(%rip)

"rpl_fclose" :
5370(2): push %r12
5372(1): push %rbp
5373(1): push %rbx
5374(3): mov %rdi,%rbx
5377(5): call 0xffffc659(%rip)
537c(2): test %eax,%eax
537e(3): mov %rbx,%rdi
5381(2): js 0x56(%rip)
5383(5): call 0xffffc69d(%rip)
5388(2): test %eax,%eax
538a(2): jnz 0x2e(%rip)
538c(3): mov %rbx,%rdi
538f(5): call 0x61(%rip)
5394(2): test %eax,%eax
5396(2): jz 0x3e(%rip)
5398(5): call 0xffffc418(%rip)
539d(3): mov (%rax),%r12d
53a0(3): mov %rbx,%rdi
53a3(3): mov %rax,%rbp
53a6(5): call 0xffffc4ca(%rip)
53ab(3): test %r12d,%r12d
53ae(2): jnz 0x32(%rip)
53b0(1): pop %rbx
53b1(1): pop %rbp
53b2(2): pop %r12
53b4(1): ret near (%rsp)
53b5(3): nop (%rax)
53b8(3): mov %rbx,%rdi
53bb(5): call 0xffffc615(%rip)
53c0(2): xor %esi,%esi
53c2(5): mov $0x1,%edx
53c7(2): mov %eax,%edi
53c9(5): call 0xffffc557(%rip)
53ce(4): cmp $0xffffffff,%rax
53d2(2): jnz 0xffffffba(%rip)
53d4(3): mov %rbx,%rdi
53d7(1): pop %rbx
53d8(1): pop %rbp
53d9(2): pop %r12
53db(5): jmp 0xffffc495(%rip)
53e0(4): mov %r12d,0x0(%rbp)
53e4(5): mov $0xffffffff,%eax
53e9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
53f0(3): test %rdi,%rdi
53f3(1): push %rbx
53f4(3): mov %rdi,%rbx
53f7(2): jz 0x13(%rip)
53f9(5): call 0xffffc627(%rip)
53fe(2): test %eax,%eax
5400(2): jz 0xa(%rip)
5402(6): test $0x100,(%rbx)
5408(2): jnz 0x10(%rip)
540a(3): mov %rbx,%rdi
540d(1): pop %rbx
540e(5): jmp 0xffffc5f2(%rip)
5413(5): nop 0x0(%rax,%rax,1)
5418(3): mov %rbx,%rdi
541b(5): mov $0x1,%edx
5420(2): xor %esi,%esi
5422(5): call 0xe(%rip)
5427(3): mov %rbx,%rdi
542a(1): pop %rbx
542b(5): jmp 0xffffc5d5(%rip)

"rpl_fseeko" :
5430(4): mov 0x8(%rdi),%rax
5434(4): cmp %rax,0x10(%rdi)
5438(2): jz 0x8(%rip)
543a(5): jmp 0xffffc686(%rip)
543f(1): nop 
5440(4): mov 0x20(%rdi),%rax
5444(4): cmp %rax,0x28(%rdi)
5448(2): jnz 0xfffffff2(%rip)
544a(5): cmp $0x0,0x48(%rdi)
544f(2): jnz 0xffffffeb(%rip)
5451(2): push %r12
5453(1): push %rbp
5454(3): mov %edx,%r12d
5457(1): push %rbx
5458(3): mov %rsi,%rbp
545b(3): mov %rdi,%rbx
545e(5): call 0xffffc572(%rip)
5463(3): mov %r12d,%edx
5466(3): mov %rbp,%rsi
5469(2): mov %eax,%edi
546b(5): call 0xffffc4b5(%rip)
5470(4): cmp $0xffffffff,%rax
5474(2): jz 0xe(%rip)
5476(3): and $0xef,(%rbx)
5479(7): mov %rax,0x90(%rbx)
5480(2): xor %eax,%eax
5482(1): pop %rbx
5483(1): pop %rbp
5484(2): pop %r12
5486(1): ret near (%rsp)

"rpl_mbrtowc" :
5490(2): push %r13
5492(2): push %r12
5494(3): mov %rsi,%r13
5497(1): push %rbp
5498(1): push %rbx
5499(3): mov %rdi,%rbx
549c(3): mov %rdx,%r12
549f(4): sub $0x18,%rsp
54a3(9): mov $0x28,%rax
54ac(5): mov %rax,0x8(%rsp)
54b1(2): xor %eax,%eax
54b3(5): lea 0x4(%rsp),%rax
54b8(3): test %rdi,%rdi
54bb(4): cmove %rax,%rbx
54bf(3): mov %rbx,%rdi
54c2(5): call 0xffffc43e(%rip)
54c7(4): cmp $0xfffffffd,%rax
54cb(3): mov %rax,%rbp
54ce(2): jbe 0x22(%rip)
54d0(3): test %r12,%r12
54d3(2): jz 0x1d(%rip)
54d5(2): xor %edi,%edi
54d7(5): call 0x49(%rip)
54dc(2): test %al,%al
54de(2): jnz 0x12(%rip)
54e0(5): movzx 0x0(%r13),%eax
54e5(5): mov $0x1,%ebp
54ea(2): mov %eax,(%rbx)
54ec(4): nop 0x0(%rax)
54f0(5): mov 0x8(%rsp),%rdx
54f5(9): xor $0x28,%rdx
54fe(3): mov %rbp,%rax
5501(2): jnz 0xd(%rip)
5503(4): add $0x18,%rsp
5507(1): pop %rbx
5508(1): pop %rbp
5509(2): pop %r12
550b(2): pop %r13
550d(1): ret near (%rsp)
550e(5): call 0xffffc3c2(%rip)

"hard_locale" :
5520(4): sub $0x8,%rsp
5524(2): xor %esi,%esi
5526(5): call 0xffffc52a(%rip)
552b(3): mov %rax,%rdx
552e(5): mov $0x1,%eax
5533(3): test %rdx,%rdx
5536(2): jz 0x1f(%rip)
5538(7): lea 0x2321(%rip),%rdi
553f(5): mov $0x2,%ecx
5544(3): mov %rdx,%rsi
5547(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5549(3): setnbe %cl
554c(3): sbb $0x0,%cl
554f(2): xor %eax,%eax
5551(2): test %cl,%cl
5553(2): jnz 0xd(%rip)
5555(4): add $0x8,%rsp
5559(1): ret near (%rsp)
555a(6): nop 0x0(%rax,%rax,1)
5560(7): lea 0x22fb(%rip),%rdi
5567(5): mov $0x6,%ecx
556c(3): mov %rdx,%rsi
556f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5571(3): setnbe %al
5574(2): sbb $0x0,%al
5576(2): test %al,%al
5578(3): setnz %al
557b(4): add $0x8,%rsp
557f(1): ret near (%rsp)

"locale_charset" :
5580(4): sub $0x8,%rsp
5584(5): mov $0xe,%edi
5589(5): call 0xffffc487(%rip)
558e(3): test %rax,%rax
5591(2): jz 0x1f(%rip)
5593(3): cmp $0x0,(%rax)
5596(7): lea 0x22cb(%rip),%rdx
559d(4): cmove %rdx,%rax
55a1(4): add $0x8,%rsp
55a5(1): ret near (%rsp)
55a6(a): nop 0x0(%rax,%rax,1)
55b0(7): lea 0x22b1(%rip),%rax
55b7(4): add $0x8,%rsp
55bb(1): ret near (%rsp)

"randint_new" :
55c0(1): push %rbx
55c1(3): mov %rdi,%rbx
55c4(5): mov $0x18,%edi
55c9(5): call 0xfffffb17(%rip)
55ce(3): mov %rbx,(%rax)
55d1(8): mov $0x0,0x10(%rax)
55d9(8): mov $0x0,0x8(%rax)
55e1(1): pop %rbx
55e2(1): ret near (%rsp)

"randint_all_new" :
55f0(1): push %rbx
55f1(5): call 0x24f(%rip)
55f6(3): test %rax,%rax
55f9(2): jz 0x27(%rip)
55fb(3): mov %rax,%rbx
55fe(5): mov $0x18,%edi
5603(5): call 0xfffffadd(%rip)
5608(3): mov %rbx,(%rax)
560b(8): mov $0x0,0x10(%rax)
5613(8): mov $0x0,0x8(%rax)
561b(1): pop %rbx
561c(1): ret near (%rsp)
561d(3): nop (%rax)
5620(2): xor %eax,%eax
5622(1): pop %rbx
5623(1): ret near (%rsp)

"randint_get_source" :
5630(3): mov (%rdi),%rax
5633(1): ret near (%rsp)

"randint_genmax" :
5640(2): push %r15
5642(2): push %r14
5644(4): lea 0x1(%rsi),%r15
5648(2): push %r13
564a(2): push %r12
564c(3): mov %rdi,%r13
564f(1): push %rbp
5650(1): push %rbx
5651(3): mov %rsi,%r14
5654(4): sub $0x28,%rsp
5658(4): mov 0x8(%rdi),%rbp
565c(4): mov 0x10(%rdi),%rbx
5660(9): mov $0x28,%rax
5669(5): mov %rax,0x18(%rsp)
566e(2): xor %eax,%eax
5670(3): mov (%rdi),%rax
5673(5): lea 0x10(%rsp),%r12
5678(5): mov %rax,0x8(%rsp)
567d(2): jmp 0x38(%rip)
567f(1): nop 
5680(3): cmp %r14,%rbx
5683(6): jz 0x8c(%rip)
5689(3): mov %rbx,%rax
568c(2): xor %edx,%edx
568e(3): sub %r14,%rax
5691(3): div %r15,%rax
5694(3): sub %rdx,%rbx
5697(3): mov %rdx,%rdi
569a(3): mov %rax,%rsi
569d(2): xor %edx,%edx
569f(3): mov %rbp,%rax
56a2(3): div %r15,%rax
56a5(3): cmp %rbx,%rbp
56a8(6): jbe 0xa0(%rip)
56ae(4): lea 0xffffffff(%rdi),%rbx
56b2(3): mov %rdx,%rbp
56b5(3): cmp %r14,%rbx
56b8(2): jnb 0xffffffc8(%rip)
56ba(3): mov %rbx,%rax
56bd(2): xor %edx,%edx
56bf(1): nop 
56c0(4): shl/sal $0x8,%rax
56c4(4): add $0x1,%rdx
56c8(6): add $0xff,%rax
56ce(3): cmp %rax,%r14
56d1(2): jnbe 0xffffffef(%rip)
56d3(5): mov 0x8(%rsp),%rdi
56d8(3): mov %r12,%rsi
56db(5): call 0x4b5(%rip)
56e0(3): mov %r12,%rax
56e3(5): nop 0x0(%rax,%rax,1)
56e8(3): movzx (%rax),%edx
56eb(4): shl/sal $0x8,%rbx
56ef(4): shl/sal $0x8,%rbp
56f3(7): add $0xff,%rbx
56fa(4): add $0x1,%rax
56fe(3): add %rdx,%rbp
5701(3): cmp %rbx,%r14
5704(2): jnbe 0xffffffe4(%rip)
5706(3): cmp %r14,%rbx
5709(6): jnz 0xffffff80(%rip)
570f(8): mov $0x0,0x10(%r13)
5717(8): mov $0x0,0x8(%r13)
571f(5): mov 0x18(%rsp),%rcx
5724(9): xor $0x28,%rcx
572d(3): mov %rbp,%rax
5730(2): jnz 0x25(%rip)
5732(4): add $0x28,%rsp
5736(1): pop %rbx
5737(1): pop %rbp
5738(2): pop %r12
573a(2): pop %r13
573c(2): pop %r14
573e(2): pop %r15
5740(1): ret near (%rsp)
5741(7): nop 0x0(%rax)
5748(4): mov %rax,0x8(%r13)
574c(4): mov %rsi,0x10(%r13)
5750(3): mov %rdx,%rbp
5753(2): jmp 0xffffffcc(%rip)
5755(5): call 0xffffc17b(%rip)

"randint_free" :
5760(1): push %rbx
5761(7): mov $0xffffffff,%rdx
5768(3): mov %rdi,%rbx
576b(5): mov $0x18,%esi
5770(5): call 0xffffc330(%rip)
5775(3): mov %rbx,%rdi
5778(1): pop %rbx
5779(5): jmp 0xffffc017(%rip)

"randint_all_free" :
5780(2): push %r13
5782(2): push %r12
5784(1): push %rbp
5785(1): push %rbx
5786(3): mov %rdi,%rbx
5789(4): sub $0x8,%rsp
578d(3): mov (%rdi),%rdi
5790(5): call 0x5a0(%rip)
5795(3): mov %eax,%r12d
5798(5): call 0xffffc018(%rip)
579d(3): mov (%rax),%r13d
57a0(3): mov %rbx,%rdi
57a3(7): mov $0xffffffff,%rdx
57aa(5): mov $0x18,%esi
57af(3): mov %rax,%rbp
57b2(5): call 0xffffc2ee(%rip)
57b7(3): mov %rbx,%rdi
57ba(5): call 0xffffbfd6(%rip)
57bf(4): mov %r13d,0x0(%rbp)
57c3(4): add $0x8,%rsp
57c7(3): mov %r12d,%eax
57ca(1): pop %rbx
57cb(1): pop %rbp
57cc(2): pop %r12
57ce(2): pop %r13
57d0(1): ret near (%rsp)

"randread_error" :
57e0(1): push %rbp
57e1(1): push %rbx
57e2(4): sub $0x8,%rsp
57e6(3): test %rdi,%rdi
57e9(2): jz 0x3f(%rip)
57eb(5): call 0xffffefd5(%rip)
57f0(3): mov %rax,%rbp
57f3(5): call 0xffffbfbd(%rip)
57f8(3): cmp $0x0,(%rax)
57fb(3): mov %rax,%rbx
57fe(5): mov $0x5,%edx
5803(2): jz 0x2a(%rip)
5805(7): lea 0x2072(%rip),%rsi
580c(2): xor %edi,%edi
580e(5): call 0xffffc082(%rip)
5813(6): mov 0x2047ff(%rip),%edi
5819(2): mov (%rbx),%esi
581b(3): mov %rax,%rdx
581e(3): mov %rbp,%rcx
5821(2): xor %eax,%eax
5823(5): call 0xffffc26d(%rip)
5828(5): call 0xffffbf78(%rip)
582d(7): lea 0x203a(%rip),%rsi
5834(2): xor %edi,%edi
5836(5): call 0xffffc05a(%rip)
583b(2): jmp 0xffffffd8(%rip)

"randread_new" :
5840(2): push %r15
5842(2): push %r14
5844(2): push %r13
5846(2): push %r12
5848(1): push %rbp
5849(1): push %rbx
584a(4): sub $0x38,%rsp
584e(9): mov $0x28,%rax
5857(5): mov %rax,0x28(%rsp)
585c(2): xor %eax,%eax
585e(3): test %rsi,%rsi
5861(6): jz 0x127(%rip)
5867(3): test %rdi,%rdi
586a(3): mov %rdi,%r12
586d(3): mov %rsi,%rbp
5870(2): jz 0x80(%rip)
5872(7): lea 0x2021(%rip),%rsi
5879(5): call 0x9d7(%rip)
587e(3): test %rax,%rax
5881(3): mov %rax,%r13
5884(6): jz 0x204(%rip)
588a(5): mov $0x1038,%edi
588f(5): call 0xfffff851(%rip)
5894(3): mov %rax,%rbx
5897(3): mov %r13,(%rax)
589a(7): lea 0xffffff3f(%rip),%rax
58a1(7): cmp $0x1000,%rbp
58a8(5): mov $0x1000,%ecx
58ad(4): lea 0x18(%rbx),%rsi
58b1(4): cmovbe %rbp,%rcx
58b5(4): mov %rax,0x8(%rbx)
58b9(4): mov %r12,0x10(%rbx)
58bd(2): xor %edx,%edx
58bf(3): mov %r13,%rdi
58c2(5): call 0xffffc1ae(%rip)
58c7(5): mov 0x28(%rsp),%rdx
58cc(9): xor $0x28,%rdx
58d5(3): mov %rbx,%rax
58d8(6): jnz 0x1b7(%rip)
58de(4): add $0x38,%rsp
58e2(1): pop %rbx
58e3(1): pop %rbp
58e4(2): pop %r12
58e6(2): pop %r13
58e8(2): pop %r14
58ea(2): pop %r15
58ec(1): ret near (%rsp)
58ed(3): nop (%rax)
58f0(5): mov $0x1038,%edi
58f5(5): call 0xfffff7eb(%rip)
58fa(3): mov %rax,%rbx
58fd(7): mov $0x0,(%rax)
5904(7): lea 0xfffffed5(%rip),%rax
590b(7): lea 0x1f7b(%rip),%rdi
5912(2): xor %esi,%esi
5914(8): mov $0x0,0x10(%rbx)
591c(4): mov %rax,0x8(%rbx)
5920(8): mov $0x0,0x18(%rbx)
5928(2): xor %eax,%eax
592a(5): call 0xffffc186(%rip)
592f(2): test %eax,%eax
5931(4): lea 0x20(%rbx),%r13
5935(3): mov %eax,%r15d
5938(2): js 0x80(%rip)
593a(7): cmp $0x800,%rbp
5941(3): mov %rbp,%rdx
5944(6): mov $0x800,%r14d
594a(4): cmovnbe %r14,%rdx
594e(5): mov $0x1018,%ecx
5953(3): mov %r13,%rsi
5956(2): mov %eax,%edi
5958(5): call 0xffffbea8(%rip)
595d(3): mov %r15d,%edi
5960(3): mov %rax,%rbp
5963(5): call 0xffffbffd(%rip)
5968(7): cmp $0x7ff,%rbp
596f(6): jle 0x125(%rip)
5975(3): mov %r13,%rdi
5978(5): call 0x698(%rip)
597d(5): jmp 0xffffff4a(%rip)
5982(6): nop 0x0(%rax,%rax,1)
5988(5): mov $0x1038,%edi
598d(5): call 0xfffff753(%rip)
5992(3): mov %rax,%rbx
5995(7): mov $0x0,(%rax)
599c(7): lea 0xfffffe3d(%rip),%rax
59a3(8): mov $0x0,0x10(%rbx)
59ab(4): mov %rax,0x8(%rbx)
59af(5): jmp 0xffffff18(%rip)
59b4(4): nop 0x0(%rax)
59b8(5): lea 0x10(%rsp),%r12
59bd(2): xor %esi,%esi
59bf(6): mov $0x18,%r14d
59c5(3): mov %r12,%rdi
59c8(5): call 0xffffbf68(%rip)
59cd(6): movdqa 0x10(%rsp),%xmm0
59d3(4): movups %xmm0,0x20(%rbx)
59d7(5): call 0xffffbe69(%rip)
59dc(3): mov %eax,0x30(%rbx)
59df(4): mov %eax,0x10(%rsp)
59e3(5): call 0xffffc10d(%rip)
59e8(4): mov %eax,0x10(%rsp)
59ec(3): mov %eax,0x34(%rbx)
59ef(5): mov $0x800,%ebp
59f4(5): mov $0x4,%eax
59f9(3): sub %r14,%rbp
59fc(4): cmp $0x4,%rbp
5a00(4): cmovnbe %rax,%rbp
5a04(5): call 0xffffbedc(%rip)
5a09(2): test %ebp,%ebp
5a0b(4): mov %eax,0x10(%rsp)
5a0f(5): lea 0x0(%r13,%r14,1),%rcx
5a14(2): mov %ebp,%esi
5a16(2): jz 0x16(%rip)
5a18(2): xor %eax,%eax
5a1a(2): mov %eax,%edx
5a1c(3): add $0x1,%eax
5a1f(5): movzx 0x0(%r12,%rdx,1),%edi
5a24(2): cmp %esi,%eax
5a26(4): mov %dil,0x0(%rcx,%rdx,1)
5a2a(2): jb 0xfffffff0(%rip)
5a2c(3): add %r14,%rbp
5a2f(7): cmp $0x7ff,%rbp
5a36(6): jnbe 0xffffff3f(%rip)
5a3c(5): call 0xffffbfa4(%rip)
5a41(4): mov %eax,0x10(%rsp)
5a45(5): mov $0x800,%eax
5a4a(5): mov $0x4,%edx
5a4f(3): sub %rbp,%rax
5a52(5): lea 0x0(%r13,%rbp,1),%rcx
5a57(4): cmp $0x4,%rax
5a5b(4): cmovnbe %rdx,%rax
5a5f(2): test %eax,%eax
5a61(2): mov %eax,%esi
5a63(6): jz 0xffffff12(%rip)
5a69(2): xor %eax,%eax
5a6b(2): mov %eax,%edx
5a6d(3): add $0x1,%eax
5a70(5): movzx 0x0(%r12,%rdx,1),%edi
5a75(2): cmp %esi,%eax
5a77(4): mov %dil,0x0(%rcx,%rdx,1)
5a7b(2): jb 0xfffffff0(%rip)
5a7d(5): jmp 0xfffffef8(%rip)
5a82(6): nop 0x0(%rax,%rax,1)
5a88(2): xor %ebx,%ebx
5a8a(5): jmp 0xfffffe3d(%rip)
5a8f(5): call 0xffffbe41(%rip)
5a94(3): test %rbp,%rbp
5a97(3): mov %r14,%r15
5a9a(5): mov $0x10,%eax
5a9f(4): cmovs %r12,%rbp
5aa3(5): lea 0x10(%rsp),%r12
5aa8(3): sub %rbp,%r15
5aab(4): cmp $0x10,%r15
5aaf(3): mov %r12,%rdi
5ab2(4): cmovnbe %rax,%r15
5ab6(2): xor %esi,%esi
5ab8(5): call 0xffffbe78(%rip)
5abd(5): lea 0x0(%r13,%rbp,1),%rax
5ac2(3): add %r15,%rbp
5ac5(3): mov %r15d,%ecx
5ac8(7): cmp $0x7ff,%rbp
5acf(3): mov %r12,%rsi
5ad2(3): mov %rax,%rdi
5ad5(2): REP movsb rsi(%ds,10),rdi(%es,10)
5ad7(6): jnbe 0xfffffe9e(%rip)
5add(3): mov %r14,%r15
5ae0(6): mov $0x4,%r8d
5ae6(3): sub %rbp,%r15
5ae9(5): mov %r8,0x8(%rsp)
5aee(4): cmp $0x4,%r15
5af2(4): cmovnbe %r8,%r15
5af6(5): lea 0x0(%rbp,%r15,1),%rdx
5afb(3): add %r13,%rbp
5afe(4): mov %rdx,(%rsp)
5b02(5): call 0xffffbd3e(%rip)
5b07(4): mov (%rsp),%rdx
5b0b(4): mov %eax,0x10(%rsp)
5b0f(3): mov %r15d,%ecx
5b12(3): mov %rbp,%rdi
5b15(3): mov %r12,%rsi
5b18(5): mov 0x8(%rsp),%r8
5b1d(2): REP movsb rsi(%ds,10),rdi(%es,10)
5b1f(7): cmp $0x7ff,%rdx
5b26(6): jnle 0xfffffe4f(%rip)
5b2c(3): sub %rdx,%r14
5b2f(4): cmp $0x4,%r14
5b33(4): cmovnbe %r8,%r14
5b37(5): call 0xffffbfb9(%rip)
5b3c(4): mov (%rsp),%rdx
5b40(4): mov %eax,0x10(%rsp)
5b44(3): mov %r14d,%ecx
5b47(3): mov %r12,%rsi
5b4a(5): lea 0x0(%r13,%rdx,1),%rax
5b4f(3): add %rdx,%r14
5b52(7): cmp $0x7ff,%r14
5b59(3): mov %rax,%rdi
5b5c(2): REP movsb rsi(%ds,10),rdi(%es,10)
5b5e(6): jnbe 0xfffffe17(%rip)
5b64(5): jmp 0xfffffe8b(%rip)

"randread_set_handler" :
5b70(4): mov %rsi,0x8(%rdi)
5b74(1): ret near (%rsp)

"randread_set_handler_arg" :
5b80(4): mov %rsi,0x10(%rdi)
5b84(1): ret near (%rsp)

"randread" :
5b90(2): push %r15
5b92(2): push %r14
5b94(2): push %r13
5b96(2): push %r12
5b98(3): mov %rdi,%r12
5b9b(1): push %rbp
5b9c(1): push %rbx
5b9d(3): mov %rdx,%rbp
5ba0(3): mov %rsi,%rbx
5ba3(4): sub $0x18,%rsp
5ba7(3): mov (%rdi),%rcx
5baa(3): test %rcx,%rcx
5bad(5): mov %rcx,0x8(%rsp)
5bb2(2): jz 0x66(%rip)
5bb4(5): call 0xffffbbfc(%rip)
5bb9(5): mov 0x8(%rsp),%rcx
5bbe(3): mov %rax,%r13
5bc1(2): jmp 0x25(%rip)
5bc3(5): nop 0x0(%rax,%rax,1)
5bc8(4): mov (%r12),%rax
5bcc(5): mov 0x10(%r12),%rdi
5bd1(2): mov (%rax),%eax
5bd3(3): and $0x20,%eax
5bd6(3): cmovne %edx,%eax
5bd9(4): mov %eax,0x0(%r13)
5bdd(5): call 0x8(%r12)
5be2(4): mov (%r12),%rcx
5be6(3): mov %rbp,%rdx
5be9(3): mov %rbx,%rdi
5bec(5): mov $0x1,%esi
5bf1(5): call 0xffffbc5f(%rip)
5bf6(3): add %rax,%rbx
5bf9(3): sub %rax,%rbp
5bfc(4): mov 0x0(%r13),%edx
5c00(2): jnz 0xffffffc8(%rip)
5c02(4): add $0x18,%rsp
5c06(1): pop %rbx
5c07(1): pop %rbp
5c08(2): pop %r12
5c0a(2): pop %r13
5c0c(2): pop %r14
5c0e(2): pop %r15
5c10(1): ret near (%rsp)
5c11(7): nop 0x0(%rax)
5c18(4): mov 0x18(%rdi),%r14
5c1c(7): lea 0x838(%rdi),%rax
5c23(4): lea 0x20(%rdi),%r13
5c27(5): mov %rax,0x8(%rsp)
5c2c(3): cmp %r14,%rdx
5c2f(6): jbe 0xe3(%rip)
5c35(5): mov $0x800,%esi
5c3a(3): mov %rbx,%rdi
5c3d(3): mov %r14,%rdx
5c40(3): sub %r14,%rsi
5c43(5): add 0x8(%rsp),%rsi
5c48(3): add %r14,%rbx
5c4b(3): sub %r14,%rbp
5c4e(5): call 0xffffbd72(%rip)
5c53(3): test $0x7,%bl
5c56(2): jnz 0x6a(%rip)
5c58(7): cmp $0x7ff,%rbp
5c5f(6): jbe 0xa4(%rip)
5c65(7): lea 0xfffff800(%rbp),%r15
5c6c(3): mov %r15,%r14
5c6f(7): and $0x7ff,%r14d
5c76(2): jmp 0x16(%rip)
5c78(8): nop 0x0(%rax,%rax,1)
5c80(3): cmp %r14,%r15
5c83(2): jz 0x3d(%rip)
5c85(7): sub $0x800,%r15
5c8c(3): mov %rbx,%rsi
5c8f(3): mov %r13,%rdi
5c92(7): add $0x800,%rbx
5c99(5): call 0xe7(%rip)
5c9e(3): test %r15,%r15
5ca1(3): mov %r15,%rbp
5ca4(2): jnz 0xffffffdc(%rip)
5ca6(9): mov $0x0,0x18(%r12)
5caf(4): add $0x18,%rsp
5cb3(1): pop %rbx
5cb4(1): pop %rbp
5cb5(2): pop %r12
5cb7(2): pop %r13
5cb9(2): pop %r14
5cbb(2): pop %r15
5cbd(1): ret near (%rsp)
5cbe(2): nop 
5cc0(5): mov 0x8(%rsp),%rsi
5cc5(3): mov %r13,%rdi
5cc8(6): mov $0x800,%r14d
5cce(5): call 0xb2(%rip)
5cd3(7): cmp $0x800,%rbp
5cda(6): jnbe 0xffffff5b(%rip)
5ce0(6): mov $0x800,%r14d
5ce6(5): mov 0x8(%rsp),%rsi
5ceb(3): mov %rbp,%rdx
5cee(3): mov %rbx,%rdi
5cf1(3): sub %rbp,%r14
5cf4(5): call 0xffffbccc(%rip)
5cf9(5): mov %r14,0x18(%r12)
5cfe(5): jmp 0xffffff04(%rip)
5d03(5): mov 0x8(%rsp),%rsi
5d08(3): mov %r13,%rdi
5d0b(5): call 0x75(%rip)
5d10(2): jmp 0xffffffd0(%rip)
5d12(3): mov %rax,%r15
5d15(3): sub %r14,%r15
5d18(7): lea 0x800(%r15),%rax
5d1f(5): mov %rax,0x8(%rsp)
5d24(2): jmp 0xffffffc2(%rip)

"randread_free" :
5d30(1): push %rbp
5d31(1): push %rbx
5d32(7): mov $0xffffffff,%rdx
5d39(3): mov %rdi,%rbx
5d3c(5): mov $0x1038,%esi
5d41(4): sub $0x8,%rsp
5d45(3): mov (%rdi),%rbp
5d48(5): call 0xffffbd58(%rip)
5d4d(3): mov %rbx,%rdi
5d50(5): call 0xffffba40(%rip)
5d55(3): test %rbp,%rbp
5d58(2): jz 0x18(%rip)
5d5a(4): add $0x8,%rsp
5d5e(3): mov %rbp,%rdi
5d61(1): pop %rbx
5d62(1): pop %rbp
5d63(5): jmp 0xfffff60d(%rip)
5d68(8): nop 0x0(%rax,%rax,1)
5d70(4): add $0x8,%rsp
5d74(2): xor %eax,%eax
5d76(1): pop %rbx
5d77(1): pop %rbp
5d78(1): ret near (%rsp)

"isaac_refill" :
5d80(7): mov 0x810(%rdi),%rax
5d87(7): mov 0x800(%rdi),%rdx
5d8e(7): lea 0x400(%rdi),%r9
5d95(4): lea 0x1(%rax),%rcx
5d99(3): mov %rdi,%rax
5d9c(7): mov %rcx,0x810(%rdi)
5da3(7): add 0x808(%rdi),%rcx
5daa(6): nop 0x0(%rax,%rax,1)
5db0(3): mov %rdx,%r8
5db3(4): shl/sal $0x15,%r8
5db7(3): xor %r8,%rdx
5dba(3): mov (%rax),%r8
5dbd(3): not %rdx
5dc0(7): add 0x400(%rax),%rdx
5dc7(3): mov %r8,%r10
5dca(7): and $0x7f8,%r10d
5dd1(4): mov 0x0(%rdi,%r10,1),%r11
5dd5(3): mov %rdx,%r10
5dd8(4): shr $0x5,%r10
5ddc(3): add %rdx,%r11
5ddf(3): xor %r10,%rdx
5de2(3): add %r11,%rcx
5de5(3): mov %rcx,(%rax)
5de8(4): shr $0x8,%rcx
5dec(6): and $0x7f8,%ecx
5df2(4): mov 0x0(%rdi,%rcx,1),%r11
5df6(3): add %r8,%r11
5df9(3): mov %r11,(%rsi)
5dfc(7): add 0x408(%rax),%rdx
5e03(4): mov 0x8(%rax),%rcx
5e07(3): mov %rdx,%r10
5e0a(3): mov %rcx,%rdx
5e0d(6): and $0x7f8,%edx
5e13(4): mov 0x0(%rdi,%rdx,1),%r8
5e17(3): mov %r10,%rdx
5e1a(4): shl/sal $0xc,%rdx
5e1e(3): xor %r10,%rdx
5e21(3): add %r10,%r8
5e24(3): add %r11,%r8
5e27(4): mov %r8,0x8(%rax)
5e2b(4): shr $0x8,%r8
5e2f(7): and $0x7f8,%r8d
5e36(4): add 0x0(%rdi,%r8,1),%rcx
5e3a(4): mov %rcx,0x8(%rsi)
5e3e(4): mov 0x10(%rax),%r8
5e42(3): mov %rcx,%r11
5e45(7): add 0x410(%rax),%rdx
5e4c(3): mov %r8,%rcx
5e4f(6): and $0x7f8,%ecx
5e55(4): mov 0x0(%rdi,%rcx,1),%r10
5e59(3): add %rdx,%r10
5e5c(3): mov %r10,%rcx
5e5f(3): add %r11,%rcx
5e62(4): mov %rcx,0x10(%rax)
5e66(4): shr $0x8,%rcx
5e6a(6): and $0x7f8,%ecx
5e70(4): mov 0x0(%rdi,%rcx,1),%r10
5e74(3): mov %rdx,%rcx
5e77(4): shr $0x21,%rcx
5e7b(3): xor %rcx,%rdx
5e7e(3): add %r8,%r10
5e81(4): mov %r10,0x10(%rsi)
5e85(4): mov 0x18(%rax),%rcx
5e89(7): add 0x418(%rax),%rdx
5e90(3): mov %rcx,%r8
5e93(7): and $0x7f8,%r8d
5e9a(4): mov 0x0(%rdi,%r8,1),%r11
5e9e(3): add %rdx,%r11
5ea1(3): mov %r11,%r8
5ea4(3): add %r10,%r8
5ea7(4): add $0x20,%rax
5eab(4): add $0x20,%rsi
5eaf(4): mov %r8,0xfffffff8(%rax)
5eb3(4): shr $0x8,%r8
5eb7(7): and $0x7f8,%r8d
5ebe(4): add 0x0(%rdi,%r8,1),%rcx
5ec2(4): mov %rcx,0xfffffff8(%rsi)
5ec6(3): cmp %r9,%rax
5ec9(6): jb 0xfffffee7(%rip)
5ecf(7): lea 0x800(%rdi),%r9
5ed6(a): nop 0x0(%rax,%rax,1)
5ee0(3): mov %rdx,%r8
5ee3(4): shl/sal $0x15,%r8
5ee7(3): xor %r8,%rdx
5eea(3): mov (%rax),%r8
5eed(3): not %rdx
5ef0(7): add 0xfffffc00(%rax),%rdx
5ef7(3): mov %r8,%r10
5efa(7): and $0x7f8,%r10d
5f01(4): mov 0x0(%rdi,%r10,1),%r11
5f05(3): mov %rdx,%r10
5f08(4): shr $0x5,%r10
5f0c(3): add %rdx,%r11
5f0f(3): xor %r10,%rdx
5f12(3): add %r11,%rcx
5f15(3): mov %rcx,(%rax)
5f18(4): shr $0x8,%rcx
5f1c(6): and $0x7f8,%ecx
5f22(4): mov 0x0(%rdi,%rcx,1),%r11
5f26(3): add %r8,%r11
5f29(3): mov %r11,(%rsi)
5f2c(7): add 0xfffffc08(%rax),%rdx
5f33(4): mov 0x8(%rax),%rcx
5f37(3): mov %rdx,%r10
5f3a(3): mov %rcx,%rdx
5f3d(6): and $0x7f8,%edx
5f43(4): mov 0x0(%rdi,%rdx,1),%r8
5f47(3): mov %r10,%rdx
5f4a(4): shl/sal $0xc,%rdx
5f4e(3): xor %r10,%rdx
5f51(3): add %r10,%r8
5f54(3): add %r11,%r8
5f57(4): mov %r8,0x8(%rax)
5f5b(4): shr $0x8,%r8
5f5f(7): and $0x7f8,%r8d
5f66(4): add 0x0(%rdi,%r8,1),%rcx
5f6a(4): mov %rcx,0x8(%rsi)
5f6e(4): mov 0x10(%rax),%r8
5f72(3): mov %rcx,%r11
5f75(7): add 0xfffffc10(%rax),%rdx
5f7c(3): mov %r8,%rcx
5f7f(6): and $0x7f8,%ecx
5f85(4): mov 0x0(%rdi,%rcx,1),%r10
5f89(3): add %rdx,%r10
5f8c(3): mov %r10,%rcx
5f8f(3): add %r11,%rcx
5f92(4): mov %rcx,0x10(%rax)
5f96(4): shr $0x8,%rcx
5f9a(6): and $0x7f8,%ecx
5fa0(4): mov 0x0(%rdi,%rcx,1),%r10
5fa4(3): mov %rdx,%rcx
5fa7(4): shr $0x21,%rcx
5fab(3): xor %rcx,%rdx
5fae(3): add %r8,%r10
5fb1(4): mov %r10,0x10(%rsi)
5fb5(4): mov 0x18(%rax),%rcx
5fb9(7): add 0xfffffc18(%rax),%rdx
5fc0(3): mov %rcx,%r8
5fc3(7): and $0x7f8,%r8d
5fca(4): mov 0x0(%rdi,%r8,1),%r11
5fce(3): add %rdx,%r11
5fd1(3): mov %r11,%r8
5fd4(3): add %r10,%r8
5fd7(4): add $0x20,%rax
5fdb(4): add $0x20,%rsi
5fdf(4): mov %r8,0xfffffff8(%rax)
5fe3(4): shr $0x8,%r8
5fe7(7): and $0x7f8,%r8d
5fee(4): add 0x0(%rdi,%r8,1),%rcx
5ff2(4): mov %rcx,0xfffffff8(%rsi)
5ff6(3): cmp %r9,%rax
5ff9(6): jb 0xfffffee7(%rip)
5fff(7): mov %rdx,0x800(%rdi)
6006(7): mov %rcx,0x808(%rdi)
600d(1): ret near (%rsp)

"isaac_seed" :
6010(2): push %r13
6012(2): push %r12
6014(7): lea 0x800(%rdi),%r12
601b(1): push %rbp
601c(3): mov %rdi,%rdx
601f(1): push %rbx
6020(3): mov %rdi,%rax
6023(a): mov $0x-7424904924229222229,%rcx
602d(a): mov $0x-5865837416287532563,%r10
6037(a): mov $0x5259722845879046933,%rbp
6041(a): mov $0x-9011610652101975858,%rsi
604b(a): mov $0x-5576812576440232668,%r8
6055(a): mov $0x-8354558816804203872,%rbx
605f(a): mov $0x-5046086420515862430,%r11
6069(a): mov $0x7240739780546808700,%r9
6073(5): nop 0x0(%rax,%rax,1)
6078(4): add 0x20(%rax),%rsi
607c(4): add 0x38(%rax),%rcx
6080(3): mov (%rax),%r13
6083(4): add 0x28(%rax),%rbp
6087(4): add 0x30(%rax),%r10
608b(3): sub %rsi,%r13
608e(3): add %r13,%r9
6091(3): mov %rcx,%r13
6094(4): shr $0x9,%r13
6098(3): add %r9,%rcx
609b(3): xor %r13,%rbp
609e(4): mov 0x8(%rax),%r13
60a2(3): sub %rbp,%r13
60a5(3): add %r13,%r11
60a8(3): mov %r9,%r13
60ab(4): shl/sal $0x9,%r13
60af(3): add %r11,%r9
60b2(3): xor %r13,%r10
60b5(4): mov 0x10(%rax),%r13
60b9(3): sub %r10,%r13
60bc(3): add %r13,%rbx
60bf(3): mov %r11,%r13
60c2(4): shr $0x17,%r13
60c6(3): add %rbx,%r11
60c9(3): xor %r13,%rcx
60cc(4): mov 0x18(%rax),%r13
60d0(3): sub %rcx,%r13
60d3(3): add %r13,%r8
60d6(3): mov %rbx,%r13
60d9(4): shl/sal $0xf,%r13
60dd(3): add %r8,%rbx
60e0(3): xor %r13,%r9
60e3(3): mov %r8,%r13
60e6(3): sub %r9,%rsi
60e9(4): shr $0xe,%r13
60ed(3): mov %r9,(%rax)
60f0(3): xor %r13,%r11
60f3(3): mov %rsi,%r13
60f6(3): add %rsi,%r8
60f9(3): sub %r11,%rbp
60fc(4): shl/sal $0x14,%r13
6100(4): mov %r11,0x8(%rax)
6104(3): xor %r13,%rbx
6107(4): lea 0x0(%rsi,%rbp,1),%r13
610b(3): mov %rbp,%rsi
610e(3): sub %rbx,%r10
6111(4): shr $0x11,%rsi
6115(4): mov %rbx,0x10(%rax)
6119(3): xor %rsi,%r8
611c(3): mov %r10,%rsi
611f(3): add %r10,%rbp
6122(3): sub %r8,%rcx
6125(4): shl/sal $0xe,%rsi
6129(4): mov %r8,0x18(%rax)
612d(3): xor %r13,%rsi
6130(3): add %rcx,%r10
6133(4): mov %rbp,0x28(%rax)
6137(4): mov %rsi,0x20(%rax)
613b(4): mov %r10,0x30(%rax)
613f(4): add $0x40,%rax
6143(4): mov %rcx,0xfffffff8(%rax)
6147(3): cmp %rax,%r12
614a(6): jnz 0xffffff2e(%rip)
6150(4): add 0x20(%rdx),%rsi
6154(4): add 0x38(%rdx),%rcx
6158(3): mov (%rdx),%r12
615b(4): add 0x28(%rdx),%rbp
615f(4): add 0x30(%rdx),%r10
6163(3): sub %rsi,%r12
6166(3): add %r12,%r9
6169(3): mov %rcx,%r12
616c(4): shr $0x9,%r12
6170(3): add %r9,%rcx
6173(3): xor %r12,%rbp
6176(4): mov 0x8(%rdx),%r12
617a(3): sub %rbp,%r12
617d(3): add %r12,%r11
6180(3): mov %r9,%r12
6183(4): shl/sal $0x9,%r12
6187(3): add %r11,%r9
618a(3): xor %r12,%r10
618d(4): mov 0x10(%rdx),%r12
6191(3): sub %r10,%r12
6194(3): add %r12,%rbx
6197(3): mov %r11,%r12
619a(4): shr $0x17,%r12
619e(3): add %rbx,%r11
61a1(3): xor %r12,%rcx
61a4(4): mov 0x18(%rdx),%r12
61a8(3): sub %rcx,%r12
61ab(3): add %r12,%r8
61ae(3): mov %rbx,%r12
61b1(4): shl/sal $0xf,%r12
61b5(3): add %r8,%rbx
61b8(3): xor %r12,%r9
61bb(3): mov %r8,%r12
61be(3): sub %r9,%rsi
61c1(4): shr $0xe,%r12
61c5(3): mov %r9,(%rdx)
61c8(3): xor %r12,%r11
61cb(3): mov %rsi,%r12
61ce(3): add %rsi,%r8
61d1(3): sub %r11,%rbp
61d4(4): shl/sal $0x14,%r12
61d8(4): mov %r11,0x8(%rdx)
61dc(3): xor %r12,%rbx
61df(4): lea 0x0(%rsi,%rbp,1),%r12
61e3(3): mov %rbp,%rsi
61e6(3): sub %rbx,%r10
61e9(4): shr $0x11,%rsi
61ed(4): mov %rbx,0x10(%rdx)
61f1(3): xor %rsi,%r8
61f4(3): mov %r10,%rsi
61f7(3): add %r10,%rbp
61fa(3): sub %r8,%rcx
61fd(4): shl/sal $0xe,%rsi
6201(4): mov %r8,0x18(%rdx)
6205(3): xor %r12,%rsi
6208(3): add %rcx,%r10
620b(4): mov %rbp,0x28(%rdx)
620f(4): mov %rsi,0x20(%rdx)
6213(4): mov %r10,0x30(%rdx)
6217(4): add $0x40,%rdx
621b(4): mov %rcx,0xfffffff8(%rdx)
621f(3): cmp %rdx,%rax
6222(6): jnz 0xffffff2e(%rip)
6228(1): pop %rbx
6229(b): mov $0x0,0x810(%rdi)
6234(b): mov $0x0,0x808(%rdi)
623f(1): pop %rbp
6240(b): mov $0x0,0x800(%rdi)
624b(2): pop %r12
624d(2): pop %r13
624f(1): ret near (%rsp)

"fopen_safer" :
6250(2): push %r12
6252(1): push %rbp
6253(3): mov %rsi,%rbp
6256(1): push %rbx
6257(5): call 0xffffb879(%rip)
625c(3): test %rax,%rax
625f(3): mov %rax,%rbx
6262(2): jz 0xf(%rip)
6264(3): mov %rax,%rdi
6267(5): call 0xffffb769(%rip)
626c(3): cmp $0x2,%eax
626f(2): jbe 0x11(%rip)
6271(3): mov %rbx,%rax
6274(1): pop %rbx
6275(1): pop %rbp
6276(2): pop %r12
6278(1): ret near (%rsp)
6279(7): nop 0x0(%rax)
6280(2): mov %eax,%edi
6282(5): call 0x6e(%rip)
6287(2): test %eax,%eax
6289(3): mov %eax,%r12d
628c(2): js 0x3c(%rip)
628e(3): mov %rbx,%rdi
6291(5): call 0xfffff0df(%rip)
6296(2): test %eax,%eax
6298(2): jnz 0x15(%rip)
629a(3): mov %rbp,%rsi
629d(3): mov %r12d,%edi
62a0(5): call 0xffffb7a0(%rip)
62a5(3): test %rax,%rax
62a8(3): mov %rax,%rbx
62ab(2): jnz 0xffffffc6(%rip)
62ad(5): call 0xffffb503(%rip)
62b2(2): mov (%rax),%ebp
62b4(3): mov %rax,%rbx
62b7(3): mov %r12d,%edi
62ba(5): call 0xffffb6a6(%rip)
62bf(2): mov %ebp,(%rbx)
62c1(2): xor %ebx,%ebx
62c3(2): jmp 0xffffffae(%rip)
62c5(3): nop (%rax)
62c8(5): call 0xffffb4e8(%rip)
62cd(3): mov (%rax),%r12d
62d0(3): mov %rax,%rbp
62d3(3): mov %rbx,%rdi
62d6(5): call 0xfffff09a(%rip)
62db(2): xor %ebx,%ebx
62dd(4): mov %r12d,0x0(%rbp)
62e1(2): jmp 0xffffff90(%rip)

"dup_safer" :
62f0(5): mov $0x3,%edx
62f5(2): xor %esi,%esi
62f7(2): xor %eax,%eax
62f9(5): jmp 0x7(%rip)

"rpl_fcntl" :
6300(2): push %r12
6302(1): push %rbp
6303(2): mov %edi,%ebp
6305(1): push %rbx
6306(4): sub $0x50,%rsp
630a(9): mov $0x28,%rax
6313(5): mov %rax,0x18(%rsp)
6318(2): xor %eax,%eax
631a(5): lea 0x70(%rsp),%rax
631f(2): test %esi,%esi
6321(5): mov %rdx,0x30(%rsp)
6326(5): mov %rcx,0x38(%rsp)
632b(5): mov %r8,0x40(%rsp)
6330(5): mov %rax,0x8(%rsp)
6335(5): lea 0x20(%rsp),%rax
633a(5): mov %r9,0x48(%rsp)
633f(7): mov $0x10,(%rsp)
6346(5): mov %rax,0x10(%rsp)
634b(6): jz 0x207(%rip)
6351(6): cmp $0x406,%esi
6357(2): jnz 0x49(%rip)
6359(5): mov 0x10(%rsp),%rax
635e(7): cmp $0x0,0x203ed3(%rip)
6365(7): mov $0x18,(%rsp)
636c(4): mov 0x10(%rax),%r12d
6370(3): mov %r12d,%edx
6373(6): js 0x130(%rip)
6379(2): xor %eax,%eax
637b(5): mov $0x406,%esi
6380(5): call 0xffffb4b0(%rip)
6385(2): test %eax,%eax
6387(2): mov %eax,%ebx
6389(6): js 0x18f(%rip)
638f(a): mov $0x1,0x203e9f(%rip)
6399(2): jmp 0x47(%rip)
639b(5): nop 0x0(%rax,%rax,1)
63a0(3): cmp $0xb,%esi
63a3(2): jz 0x2d(%rip)
63a5(2): jnle 0x5b(%rip)
63a7(3): cmp $0x4,%esi
63aa(6): jz 0xd6(%rip)
63b0(6): jnle 0xc0(%rip)
63b6(3): cmp $0x2,%esi
63b9(6): jz 0xc7(%rip)
63bf(2): jnle 0x11(%rip)
63c1(3): cmp $0x1,%esi
63c4(2): jnz 0x64(%rip)
63c6(a): nop 0x0(%rax,%rax,1)
63d0(2): mov %ebp,%edi
63d2(2): xor %eax,%eax
63d4(5): call 0xffffb45c(%rip)
63d9(2): mov %eax,%ebx
63db(5): nop 0x0(%rax,%rax,1)
63e0(5): mov 0x18(%rsp),%rcx
63e5(9): xor $0x28,%rcx
63ee(2): mov %ebx,%eax
63f0(6): jnz 0x15d(%rip)
63f6(4): add $0x50,%rsp
63fa(1): pop %rbx
63fb(1): pop %rbp
63fc(2): pop %r12
63fe(1): ret near (%rsp)
63ff(1): nop 
6400(6): cmp $0x407,%esi
6406(2): jnle 0x4a(%rip)
6408(6): cmp $0x406,%esi
640e(2): jnl 0x72(%rip)
6410(6): cmp $0x401,%esi
6416(2): jz 0xffffffba(%rip)
6418(6): cmp $0x402,%esi
641e(2): jz 0x62(%rip)
6420(6): cmp $0x400,%esi
6426(2): jz 0x5a(%rip)
6428(3): mov (%rsp),%eax
642b(3): cmp $0x2f,%eax
642e(6): jnbe 0x13c(%rip)
6434(5): add 0x10(%rsp),%rax
6439(3): mov (%rax),%rdx
643c(2): mov %ebp,%edi
643e(2): xor %eax,%eax
6440(5): call 0xffffb3f0(%rip)
6445(2): mov %eax,%ebx
6447(2): jmp 0xffffff99(%rip)
6449(7): nop 0x0(%rax)
6450(6): cmp $0x409,%esi
6456(2): jz 0x2a(%rip)
6458(6): jl 0xffffff78(%rip)
645e(6): cmp $0x40a,%esi
6464(2): jnz 0xffffffc4(%rip)
6466(5): jmp 0xffffff6a(%rip)
646b(5): nop 0x0(%rax,%rax,1)
6470(3): cmp $0x9,%esi
6473(6): jz 0xffffff5d(%rip)
6479(2): jnle 0x7(%rip)
647b(3): cmp $0x8,%esi
647e(2): jnz 0xffffffaa(%rip)
6480(3): mov (%rsp),%eax
6483(3): cmp $0x2f,%eax
6486(6): jnbe 0xee(%rip)
648c(5): add 0x10(%rsp),%rax
6491(2): mov (%rax),%edx
6493(2): mov %ebp,%edi
6495(2): xor %eax,%eax
6497(5): call 0xffffb399(%rip)
649c(2): mov %eax,%ebx
649e(5): jmp 0xffffff42(%rip)
64a3(2): xor %esi,%esi
64a5(2): xor %eax,%eax
64a7(5): call 0xffffb389(%rip)
64ac(2): test %eax,%eax
64ae(2): mov %eax,%ebx
64b0(6): js 0xffffff30(%rip)
64b6(7): cmp $0xff,0x203d7b(%rip)
64bd(6): jnz 0xffffff23(%rip)
64c3(2): xor %eax,%eax
64c5(5): mov $0x1,%esi
64ca(2): mov %ebx,%edi
64cc(5): call 0xffffb364(%rip)
64d1(2): test %eax,%eax
64d3(2): js 0x1e(%rip)
64d5(3): or $0x1,%eax
64d8(5): mov $0x2,%esi
64dd(2): mov %ebx,%edi
64df(2): mov %eax,%edx
64e1(2): xor %eax,%eax
64e3(5): call 0xffffb34d(%rip)
64e8(3): cmp $0xff,%eax
64eb(6): jnz 0xfffffef5(%rip)
64f1(5): call 0xffffb2bf(%rip)
64f6(3): mov (%rax),%r12d
64f9(3): mov %rax,%rbp
64fc(2): mov %ebx,%edi
64fe(5): call 0xffffb462(%rip)
6503(5): mov $0xffffffff,%ebx
6508(4): mov %r12d,0x0(%rbp)
650c(5): jmp 0xfffffed4(%rip)
6511(7): nop 0x0(%rax)
6518(5): call 0xffffb298(%rip)
651d(3): cmp $0x16,(%rax)
6520(6): jnz 0xfffffe6f(%rip)
6526(2): xor %esi,%esi
6528(2): xor %eax,%eax
652a(3): mov %r12d,%edx
652d(2): mov %ebp,%edi
652f(5): call 0xffffb301(%rip)
6534(2): test %eax,%eax
6536(2): mov %eax,%ebx
6538(6): js 0xfffffea8(%rip)
653e(a): mov $0xffffffff,0x203cf0(%rip)
6548(5): jmp 0xffffff7b(%rip)
654d(5): call 0xffffb383(%rip)
6552(5): mov 0x10(%rsp),%rax
6557(2): xor %esi,%esi
6559(3): mov 0x10(%rax),%edx
655c(2): xor %eax,%eax
655e(5): call 0xffffb2d2(%rip)
6563(2): mov %eax,%ebx
6565(5): jmp 0xfffffe7b(%rip)
656a(5): mov 0x8(%rsp),%rax
656f(5): jmp 0xfffffeca(%rip)
6574(5): mov 0x8(%rsp),%rax
6579(5): jmp 0xffffff18(%rip)

"__libc_csu_init" :
6580(2): push %r15
6582(2): push %r14
6584(3): mov %rdx,%r15
6587(2): push %r13
6589(2): push %r12
658b(7): lea 0x2034de(%rip),%r12
6592(1): push %rbp
6593(7): lea 0x2034de(%rip),%rbp
659a(1): push %rbx
659b(3): mov %edi,%r13d
659e(3): mov %rsi,%r14
65a1(3): sub %r12,%rbp
65a4(4): sub $0x8,%rsp
65a8(4): sar $0x3,%rbp
65ac(5): call 0xffffb1ac(%rip)
65b1(3): test %rbp,%rbp
65b4(2): jz 0x22(%rip)
65b6(2): xor %ebx,%ebx
65b8(8): nop 0x0(%rax,%rax,1)
65c0(3): mov %r15,%rdx
65c3(3): mov %r14,%rsi
65c6(3): mov %r13d,%edi
65c9(4): call 0x0(%r12,%rbx,8)
65cd(4): add $0x1,%rbx
65d1(3): cmp %rbx,%rbp
65d4(2): jnz 0xffffffec(%rip)
65d6(4): add $0x8,%rsp
65da(1): pop %rbx
65db(1): pop %rbp
65dc(2): pop %r12
65de(2): pop %r13
65e0(2): pop %r14
65e2(2): pop %r15
65e4(1): ret near (%rsp)

"atexit" :
6600(7): mov 0x203a01(%rip),%rdx
6607(2): xor %esi,%esi
6609(5): jmp 0xffffb4d7(%rip)

"_fini" :
6610(4): sub $0x8,%rsp
6614(4): add $0x8,%rsp
6618(1): ret near (%rsp)

