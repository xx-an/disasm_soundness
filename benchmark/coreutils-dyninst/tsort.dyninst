
"__uflow@plt" :
13e0(6): jmp 0x206a5a(%rip)
13e6(5): push $0x0

"free@plt" :
13f0(6): jmp 0x206a52(%rip)
13f6(5): push $0x1

"abort@plt" :
1400(6): jmp 0x206a4a(%rip)
1406(5): push $0x2

"__errno_location@plt" :
1410(6): jmp 0x206a42(%rip)
1416(5): push $0x3

"strncmp@plt" :
1420(6): jmp 0x206a3a(%rip)
1426(5): push $0x4

"_exit@plt" :
1430(6): jmp 0x206a32(%rip)
1436(5): push $0x5

"__fpending@plt" :
1440(6): jmp 0x206a2a(%rip)
1446(5): push $0x6

"puts@plt" :
1450(6): jmp 0x206a22(%rip)
1456(5): push $0x7

"textdomain@plt" :
1460(6): jmp 0x206a1a(%rip)
1466(5): push $0x8

"fclose@plt" :
1470(6): jmp 0x206a12(%rip)
1476(5): push $0x9

"bindtextdomain@plt" :
1480(6): jmp 0x206a0a(%rip)
1486(5): push $0xa

"dcgettext@plt" :
1490(6): jmp 0x206a02(%rip)
1496(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
14a0(6): jmp 0x2069fa(%rip)
14a6(5): push $0xc

"strlen@plt" :
14b0(6): jmp 0x2069f2(%rip)
14b6(5): push $0xd

"__stack_chk_fail@plt" :
14c0(6): jmp 0x2069ea(%rip)
14c6(5): push $0xe

"getopt_long@plt" :
14d0(6): jmp 0x2069e2(%rip)
14d6(5): push $0xf

"mbrtowc@plt" :
14e0(6): jmp 0x2069da(%rip)
14e6(5): push $0x10

"dup2@plt" :
14f0(6): jmp 0x2069d2(%rip)
14f6(5): push $0x11

"strrchr@plt" :
1500(6): jmp 0x2069ca(%rip)
1506(5): push $0x12

"lseek@plt" :
1510(6): jmp 0x2069c2(%rip)
1516(5): push $0x13

"__assert_fail@plt" :
1520(6): jmp 0x2069ba(%rip)
1526(5): push $0x14

"memset@plt" :
1530(6): jmp 0x2069b2(%rip)
1536(5): push $0x15

"freopen@plt" :
1540(6): jmp 0x2069aa(%rip)
1546(5): push $0x16

"close@plt" :
1550(6): jmp 0x2069a2(%rip)
1556(5): push $0x17

"posix_fadvise@plt" :
1560(6): jmp 0x20699a(%rip)
1566(5): push $0x18

"memcmp@plt" :
1570(6): jmp 0x206992(%rip)
1576(5): push $0x19

"fputs_unlocked@plt" :
1580(6): jmp 0x20698a(%rip)
1586(5): push $0x1a

"calloc@plt" :
1590(6): jmp 0x206982(%rip)
1596(5): push $0x1b

"strcmp@plt" :
15a0(6): jmp 0x20697a(%rip)
15a6(5): push $0x1c

"memcpy@plt" :
15b0(6): jmp 0x206972(%rip)
15b6(5): push $0x1d

"fileno@plt" :
15c0(6): jmp 0x20696a(%rip)
15c6(5): push $0x1e

"malloc@plt" :
15d0(6): jmp 0x206962(%rip)
15d6(5): push $0x1f

"fflush@plt" :
15e0(6): jmp 0x20695a(%rip)
15e6(5): push $0x20

"nl_langinfo@plt" :
15f0(6): jmp 0x206952(%rip)
15f6(5): push $0x21

"__freading@plt" :
1600(6): jmp 0x20694a(%rip)
1606(5): push $0x22

"realloc@plt" :
1610(6): jmp 0x206942(%rip)
1616(5): push $0x23

"setlocale@plt" :
1620(6): jmp 0x20693a(%rip)
1626(5): push $0x24

"__printf_chk@plt" :
1630(6): jmp 0x206932(%rip)
1636(5): push $0x25

"error@plt" :
1640(6): jmp 0x20692a(%rip)
1646(5): push $0x26

"open@plt" :
1650(6): jmp 0x206922(%rip)
1656(5): push $0x27

"fseeko@plt" :
1660(6): jmp 0x20691a(%rip)
1666(5): push $0x28

"__cxa_atexit@plt" :
1670(6): jmp 0x206912(%rip)
1676(5): push $0x29

"exit@plt" :
1680(6): jmp 0x20690a(%rip)
1686(5): push $0x2a

"fwrite@plt" :
1690(6): jmp 0x206902(%rip)
1696(5): push $0x2b

"__fprintf_chk@plt" :
16a0(6): jmp 0x2068fa(%rip)
16a6(5): push $0x2c

"mbsinit@plt" :
16b0(6): jmp 0x2068f2(%rip)
16b6(5): push $0x2d

"iswprint@plt" :
16c0(6): jmp 0x2068ea(%rip)
16c6(5): push $0x2e

"__ctype_b_loc@plt" :
16d0(6): jmp 0x2068e2(%rip)
16d6(5): push $0x2f

".plt.got" :
16e0(6): jmp 0x2068fa(%rip)
16e6(2): nop 

"_init" :
13b8(4): sub $0x8,%rsp
13bc(7): mov 0x206c0d(%rip),%rax
13c3(3): test %rax,%rax
13c6(2): jz 0x4(%rip)
13c8(2): call %rax
13ca(4): add $0x8,%rsp
13ce(1): ret near (%rsp)

"main" :
16f0(2): push %r15
16f2(2): push %r14
16f4(2): push %r13
16f6(2): push %r12
16f8(1): push %rbp
16f9(1): push %rbx
16fa(2): mov %edi,%ebp
16fc(3): mov %rsi,%rbx
16ff(4): sub $0x58,%rsp
1703(3): mov (%rsi),%rdi
1706(9): mov $0x28,%rax
170f(5): mov %rax,0x48(%rsp)
1714(2): xor %eax,%eax
1716(5): call 0x13ba(%rip)
171b(7): lea 0x4205(%rip),%rsi
1722(5): mov $0x6,%edi
1727(5): call 0xfffffef9(%rip)
172c(7): lea 0x41ba(%rip),%rsi
1733(7): lea 0x418a(%rip),%rdi
173a(5): call 0xfffffd46(%rip)
173f(7): lea 0x417e(%rip),%rdi
1746(5): call 0xfffffd1a(%rip)
174b(7): lea 0xe0e(%rip),%rdi
1752(5): call 0x40ce(%rip)
1757(7): lea 0x41a7(%rip),%rax
175e(4): sub $0x8,%rsp
1762(7): mov 0x2068a7(%rip),%r8
1769(2): push $0x0
176b(7): lea 0x40d2(%rip),%rdx
1772(7): lea 0x4147(%rip),%rcx
1779(1): push %rax
177a(7): lea 0xa4f(%rip),%rax
1781(6): mov $0x1,%r9d
1787(3): mov %rbx,%rsi
178a(2): mov %ebp,%edi
178c(1): push %rax
178d(2): xor %eax,%eax
178f(5): call 0x1201(%rip)
1794(7): movsxd 0x2068fd(%rip),%rax
179b(2): mov %ebp,%edx
179d(4): add $0x20,%rsp
17a1(2): sub %eax,%edx
17a3(3): cmp $0x1,%edx
17a6(6): jnle 0x650(%rip)
17ac(2): cmp %ebp,%eax
17ae(6): jz 0x4fb(%rip)
17b4(4): mov 0x0(%rbx,%rax,8),%rsi
17b8(7): lea 0x447b(%rip),%rdi
17bf(5): mov $0x2,%ecx
17c4(3): mov %rsi,%r15
17c7(5): mov %rsi,0x20(%rsp)
17cc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
17ce(3): setnbe %al
17d1(2): sbb $0x0,%al
17d3(2): xor %edi,%edi
17d5(3): movsx %al,%eax
17d8(2): mov %eax,%ebx
17da(4): mov %eax,0x2c(%rsp)
17de(5): call 0x802(%rip)
17e3(2): test %ebx,%ebx
17e5(3): mov %rax,%r14
17e8(2): jz 0x21(%rip)
17ea(7): mov 0x20689f(%rip),%rdx
17f1(7): lea 0x43d9(%rip),%rsi
17f8(3): mov %r15,%rdi
17fb(5): call 0xea5(%rip)
1800(3): test %rax,%rax
1803(6): jz 0x4e8(%rip)
1809(7): mov 0x206880(%rip),%rdi
1810(5): mov $0x2,%esi
1815(5): call 0xe0b(%rip)
181a(5): lea 0x30(%rsp),%rdi
181f(5): mov %rdi,0x10(%rsp)
1824(5): call 0x2fdc(%rip)
1829(9): mov $0x0,0x8(%rsp)
1832(6): nop 0x0(%rax,%rax,1)
1838(5): mov 0x10(%rsp),%rcx
183d(7): mov 0x20684c(%rip),%rdi
1844(7): lea 0x40d9(%rip),%rsi
184b(5): mov $0x3,%edx
1850(5): call 0x2fc0(%rip)
1855(4): cmp $0xffffffff,%rax
1859(6): jz 0x233(%rip)
185f(3): test %rax,%rax
1862(6): jz 0x5cf(%rip)
1868(3): test %r14,%r14
186b(5): mov 0x38(%rsp),%rbp
1870(6): jz 0x562(%rip)
1876(4): mov 0x10(%r14),%r15
187a(3): mov %r14,%r12
187d(3): test %r15,%r15
1880(3): mov %r15,%rbx
1883(2): jnz 0x2b(%rip)
1885(5): jmp 0x1ea(%rip)
188a(6): nop 0x0(%rax,%rax,1)
1890(4): mov 0x10(%r15),%rax
1894(5): cmovs 0x8(%r15),%rax
1899(3): test %rax,%rax
189c(2): jz 0x3c(%rip)
189e(3): mov 0x18(%rax),%edx
18a1(2): test %edx,%edx
18a3(4): cmovne %r15,%r12
18a7(4): cmovne %rax,%rbx
18ab(3): mov %rax,%r15
18ae(3): mov (%r15),%rsi
18b1(3): mov %rbp,%rdi
18b4(5): call 0xfffffcec(%rip)
18b9(2): test %eax,%eax
18bb(2): mov %eax,%edx
18bd(2): jnz 0xffffffd3(%rip)
18bf(6): cmp $0x0,0x8(%rsp)
18c5(6): jnz 0x159(%rip)
18cb(5): mov %r15,0x8(%rsp)
18d0(5): jmp 0xffffff68(%rip)
18d5(3): nop (%rax)
18d8(3): mov %rbp,%rdi
18db(4): mov %edx,0x28(%rsp)
18df(5): call 0x701(%rip)
18e4(4): mov 0x28(%rsp),%edx
18e8(3): mov %rax,%r13
18eb(2): test %edx,%edx
18ed(6): js 0x196(%rip)
18f3(4): mov %rax,0x10(%r15)
18f7(3): mov (%rbx),%rsi
18fa(3): mov %rbp,%rdi
18fd(5): call 0xfffffca3(%rip)
1902(2): test %eax,%eax
1904(6): jz 0x499(%rip)
190a(1): cdq %eax
190b(4): mov 0x10(%rbx),%rcx
190f(3): or $0x1,%edx
1912(2): test %eax,%eax
1914(5): cmovs 0x8(%rbx),%rcx
1919(4): mov %edx,0x28(%rsp)
191d(3): cmp %rcx,%r13
1920(5): mov %rcx,0x18(%rsp)
1925(3): mov %rcx,%r15
1928(2): jnz 0x19(%rip)
192a(2): jmp 0x3d(%rip)
192c(4): nop 0x0(%rax)
1930(8): mov $0x1,0x18(%r15)
1938(4): mov 0x10(%r15),%r15
193c(3): cmp %r15,%r13
193f(2): jz 0x28(%rip)
1941(3): mov (%r15),%rsi
1944(3): mov %rbp,%rdi
1947(5): call 0xfffffc59(%rip)
194c(2): test %eax,%eax
194e(6): jz 0x37e(%rip)
1954(2): jns 0xffffffdc(%rip)
1956(8): mov $0xffffffff,0x18(%r15)
195e(4): mov 0x8(%r15),%r15
1962(3): cmp %r15,%r13
1965(2): jnz 0xffffffdc(%rip)
1967(3): mov 0x18(%rbx),%eax
196a(2): test %eax,%eax
196c(6): jz 0xf4(%rip)
1972(4): mov 0x28(%rsp),%edx
1976(2): neg %edx
1978(2): cmp %edx,%eax
197a(6): jz 0xe6(%rip)
1980(5): mov 0x18(%rsp),%rax
1985(4): mov 0x28(%rsp),%edi
1989(3): cmp 0x18(%rax),%edi
198c(6): jz 0x2a4(%rip)
1992(4): mov 0x28(%rsp),%esi
1996(5): mov 0x18(%rsp),%rdi
199b(2): test %esi,%esi
199d(4): mov 0x8(%rdi),%rax
19a1(4): mov 0x10(%rdi),%rcx
19a5(6): js 0x2cb(%rip)
19ab(4): mov 0x10(%rax),%rcx
19af(5): mov 0x18(%rsp),%rsi
19b4(4): mov %rcx,0x8(%rsi)
19b8(4): mov 0x8(%rax),%rcx
19bc(4): mov %rsi,0x10(%rax)
19c0(4): mov %rcx,0x10(%rbx)
19c4(4): mov %rbx,0x8(%rax)
19c8(5): mov 0x18(%rsp),%rdi
19cd(7): mov $0x0,0x18(%rbx)
19d4(7): mov $0x0,0x18(%rdi)
19db(3): mov 0x18(%rax),%ecx
19de(4): cmp %ecx,0x28(%rsp)
19e2(6): jz 0x2ae(%rip)
19e8(2): cmp %ecx,%edx
19ea(2): jnz 0xe(%rip)
19ec(5): mov 0x18(%rsp),%rsi
19f1(4): mov 0x28(%rsp),%edi
19f5(3): mov %edi,0x18(%rsi)
19f8(5): cmp %rbx,0x10(%r12)
19fd(7): mov $0x0,0x18(%rax)
1a04(6): jz 0x25f(%rip)
1a0a(6): cmp $0x0,0x8(%rsp)
1a10(5): mov %rax,0x8(%r12)
1a15(3): mov %r13,%r15
1a18(6): jz 0xfffffeb3(%rip)
1a1e(5): mov 0x8(%rsp),%rax
1a23(3): mov (%r15),%rsi
1a26(3): mov (%rax),%rdi
1a29(5): call 0xfffffb77(%rip)
1a2e(2): test %eax,%eax
1a30(6): jz 0xfffffdf9(%rip)
1a36(5): add $0x1,0x20(%r15)
1a3b(5): mov $0x10,%edi
1a40(5): call 0x3800(%rip)
1a45(5): mov 0x8(%rsp),%rdi
1a4a(3): mov %r15,(%rax)
1a4d(4): mov 0x30(%rdi),%rdx
1a51(4): mov %rdx,0x8(%rax)
1a55(4): mov %rax,0x30(%rdi)
1a59(5): jmp 0xfffffdd0(%rip)
1a5e(2): nop 
1a60(4): add 0x28(%rsp),%eax
1a64(3): mov %r13,%r15
1a67(3): mov %eax,0x18(%rbx)
1a6a(5): jmp 0xfffffe55(%rip)
1a6f(3): mov %rbp,%rdi
1a72(5): call 0x56e(%rip)
1a77(3): mov %rax,%r15
1a7a(4): mov %rax,0x10(%r14)
1a7e(5): jmp 0xfffffe41(%rip)
1a83(4): mov %rax,0x8(%r15)
1a87(5): jmp 0xfffffe70(%rip)
1a8c(6): cmp $0x0,0x8(%rsp)
1a92(6): jnz 0x28a(%rip)
1a98(4): mov 0x10(%r14),%rdi
1a9c(3): test %rdi,%rdi
1a9f(2): jz 0xe(%rip)
1aa1(7): lea 0x4b8(%rip),%rsi
1aa8(5): call 0x4c8(%rip)
1aad(5): mov $0x1,%ebp
1ab2(8): cmp $0x0,0x206636(%rip)
1aba(6): jz 0xb3(%rip)
1ac0(4): mov 0x10(%r14),%rdi
1ac4(3): test %rdi,%rdi
1ac7(6): jz 0xe9(%rip)
1acd(7): lea 0x57c(%rip),%rsi
1ad4(5): call 0x49c(%rip)
1ad9(7): mov 0x206628(%rip),%rax
1ae0(3): test %rax,%rax
1ae3(6): jz 0x141(%rip)
1ae9(7): nop 0x0(%rax)
1af0(3): mov (%rax),%rdi
1af3(4): mov 0x30(%rax),%rbx
1af7(5): call 0xfffff959(%rip)
1afc(7): mov 0x2065ed(%rip),%rax
1b03(7): mov 0x2065fe(%rip),%r8
1b0a(2): xor %esi,%esi
1b0c(3): test %rbx,%rbx
1b0f(7): mov 0x2065ea(%rip),%rcx
1b16(4): lea 0xffffffff(%rax),%rdi
1b1a(7): mov $0x0,(%r8)
1b21(7): mov %rdi,0x2065c8(%rip)
1b28(2): jz 0x30(%rip)
1b2a(6): nop 0x0(%rax,%rax,1)
1b30(3): mov (%rbx),%rdx
1b33(5): sub $0x1,0x20(%rdx)
1b38(2): jnz 0xe(%rip)
1b3a(4): mov %rdx,0x28(%rcx)
1b3e(5): mov $0x1,%esi
1b43(3): mov %rdx,%rcx
1b46(4): mov 0x8(%rbx),%rbx
1b4a(3): test %rbx,%rbx
1b4d(2): jnz 0xffffffe3(%rip)
1b4f(3): test %sil,%sil
1b52(6): jnz 0x23f(%rip)
1b58(4): mov 0x28(%r8),%rax
1b5c(3): test %rax,%rax
1b5f(7): mov %rax,0x2065a2(%rip)
1b66(2): jnz 0xffffff8a(%rip)
1b68(3): test %rdi,%rdi
1b6b(2): jnz 0x55(%rip)
1b6d(7): mov 0x20651c(%rip),%rdi
1b74(5): call 0x395c(%rip)
1b79(2): test %eax,%eax
1b7b(6): jnz 0x1dc(%rip)
1b81(3): xor $0x1,%ebp
1b84(5): mov 0x48(%rsp),%rsi
1b89(9): xor $0x28,%rsi
1b92(4): movzx %bpl,%eax
1b96(6): jnz 0x25b(%rip)
1b9c(4): add $0x58,%rsp
1ba0(1): pop %rbx
1ba1(1): pop %rbp
1ba2(2): pop %r12
1ba4(2): pop %r13
1ba6(2): pop %r14
1ba8(2): pop %r15
1baa(1): ret near (%rsp)
1bab(5): nop 0x0(%rax,%rax,1)
1bb0(7): mov 0x206551(%rip),%rax
1bb7(3): test %rax,%rax
1bba(6): jnz 0xffffff36(%rip)
1bc0(5): mov 0x20(%rsp),%rdx
1bc5(5): mov $0x3,%esi
1bca(2): xor %edi,%edi
1bcc(2): xor %ebp,%ebp
1bce(5): call 0x2a42(%rip)
1bd3(7): lea 0x3da4(%rip),%rsi
1bda(3): mov %rax,%rbx
1bdd(5): mov $0x5,%edx
1be2(2): xor %edi,%edi
1be4(5): call 0xfffff8ac(%rip)
1be9(3): mov %rbx,%rcx
1bec(3): mov %rax,%rdx
1bef(2): xor %esi,%esi
1bf1(2): xor %edi,%edi
1bf3(2): xor %eax,%eax
1bf5(5): call 0xfffffa4b(%rip)
1bfa(6): nop 0x0(%rax,%rax,1)
1c00(4): mov 0x10(%r14),%rdi
1c04(3): test %rdi,%rdi
1c07(2): jz 0xe(%rip)
1c09(7): lea 0x480(%rip),%rsi
1c10(5): call 0x360(%rip)
1c15(8): cmp $0x0,0x2064db(%rip)
1c1d(2): jnz 0xffffffe3(%rip)
1c1f(5): jmp 0xfffffe93(%rip)
1c24(7): mov 0x2064c5(%rip),%rdi
1c2b(5): jmp 0xffffff3d(%rip)
1c30(2): test %edi,%edi
1c32(2): js 0x66(%rip)
1c34(5): mov 0x18(%rsp),%rdi
1c39(4): mov 0x8(%rdi),%rax
1c3d(4): mov %rax,0x10(%rbx)
1c41(4): mov %rbx,0x8(%rdi)
1c45(5): cmp %rbx,0x10(%r12)
1c4a(5): mov 0x18(%rsp),%rax
1c4f(7): mov $0x0,0x18(%rax)
1c56(7): mov $0x0,0x18(%rbx)
1c5d(6): jnz 0xfffffdad(%rip)
1c63(5): mov %rax,0x10(%r12)
1c68(3): mov %r13,%r15
1c6b(5): jmp 0xfffffc54(%rip)
1c70(4): mov 0x8(%rcx),%rax
1c74(4): mov %rax,0x10(%rdi)
1c78(4): mov 0x10(%rcx),%rax
1c7c(4): mov %rdi,0x8(%rcx)
1c80(4): mov %rax,0x8(%rbx)
1c84(4): mov %rbx,0x10(%rcx)
1c88(3): mov %rcx,%rax
1c8b(5): jmp 0xfffffd3d(%rip)
1c90(3): mov %edx,0x18(%rbx)
1c93(5): jmp 0xfffffd65(%rip)
1c98(3): mov %rax,%rdi
1c9b(4): mov 0x10(%rax),%rax
1c9f(4): mov %rax,0x8(%rbx)
1ca3(4): mov %rbx,0x10(%rdi)
1ca7(2): jmp 0xffffff9e(%rip)
1ca9(2): xor %edi,%edi
1cab(5): call 0x335(%rip)
1cb0(3): mov %rax,%r14
1cb3(7): lea 0x3f80(%rip),%rax
1cba(8): mov $0x0,0x2c(%rsp)
1cc2(5): mov %rax,0x20(%rsp)
1cc7(5): jmp 0xfffffb42(%rip)
1ccc(7): lea 0x3edd(%rip),%rcx
1cd3(7): lea 0x3c4e(%rip),%rsi
1cda(7): lea 0x3c88(%rip),%rdi
1ce1(5): mov $0xb6,%edx
1ce6(5): call 0xfffff83a(%rip)
1ceb(5): mov 0x20(%rsp),%rdx
1cf0(5): mov $0x3,%esi
1cf5(2): xor %edi,%edi
1cf7(5): call 0x2919(%rip)
1cfc(3): mov %rax,%rbx
1cff(5): call 0xfffff711(%rip)
1d04(2): mov (%rax),%esi
1d06(7): lea 0x3eca(%rip),%rdx
1d0d(3): mov %rbx,%rcx
1d10(5): mov $0x1,%edi
1d15(2): xor %eax,%eax
1d17(5): call 0xfffff929(%rip)
1d1c(5): mov 0x20(%rsp),%rdx
1d21(5): mov $0x3,%esi
1d26(2): xor %edi,%edi
1d28(5): call 0x28e8(%rip)
1d2d(7): lea 0x3e4c(%rip),%rsi
1d34(3): mov %rax,%rbx
1d37(5): mov $0x5,%edx
1d3c(2): xor %edi,%edi
1d3e(5): call 0xfffff752(%rip)
1d43(3): mov %rbx,%rcx
1d46(3): mov %rax,%rdx
1d49(2): xor %esi,%esi
1d4b(5): mov $0x1,%edi
1d50(2): xor %eax,%eax
1d52(5): call 0xfffff8ee(%rip)
1d57(5): cmp $0x0,0x2c(%rsp)
1d5c(2): jnz 0x60(%rip)
1d5e(7): lea 0x3c34(%rip),%rsi
1d65(5): mov $0x5,%edx
1d6a(2): xor %edi,%edi
1d6c(5): call 0xfffff724(%rip)
1d71(3): mov %rax,%rbx
1d74(5): call 0xfffff69c(%rip)
1d79(2): mov (%rax),%esi
1d7b(7): lea 0x3e55(%rip),%rdx
1d82(3): mov %rbx,%rcx
1d85(5): mov $0x1,%edi
1d8a(2): xor %eax,%eax
1d8c(5): call 0xfffff8b4(%rip)
1d91(7): mov %rcx,0x206368(%rip)
1d98(5): jmp 0xfffffdc0(%rip)
1d9d(7): lea 0x3e0c(%rip),%rcx
1da4(7): lea 0x3b7d(%rip),%rsi
1dab(7): lea 0x3ba2(%rip),%rdi
1db2(5): mov $0xa8,%edx
1db7(5): call 0xfffff769(%rip)
1dbc(5): mov 0x20(%rsp),%rdx
1dc1(5): mov $0x3,%esi
1dc6(2): xor %edi,%edi
1dc8(5): call 0x2848(%rip)
1dcd(3): mov %rax,%rbx
1dd0(2): jmp 0xffffffa4(%rip)
1dd2(7): lea 0x3dd7(%rip),%rcx
1dd9(7): lea 0x3b48(%rip),%rsi
1de0(7): lea 0x3b68(%rip),%rdi
1de7(5): mov $0x84,%edx
1dec(5): call 0xfffff734(%rip)
1df1(5): call 0xfffff6cf(%rip)
1df6(5): mov 0x8(%rbx,%rax,8),%rdi
1dfb(5): call 0x29e5(%rip)
1e00(7): lea 0x3b0c(%rip),%rsi
1e07(3): mov %rax,%rbx
1e0a(5): mov $0x5,%edx
1e0f(2): xor %edi,%edi
1e11(5): call 0xfffff67f(%rip)
1e16(2): xor %edi,%edi
1e18(3): mov %rax,%rdx
1e1b(3): mov %rbx,%rcx
1e1e(2): xor %esi,%esi
1e20(2): xor %eax,%eax
1e22(5): call 0xfffff81e(%rip)
1e27(5): mov $0x1,%edi
1e2c(5): call 0x3a4(%rip)
1e31(7): lea 0x3d84(%rip),%rcx
1e38(7): lea 0x3ae9(%rip),%rsi
1e3f(7): lea 0x3b00(%rip),%rdi
1e46(5): mov $0x1cd,%edx
1e4b(5): call 0xfffff6d5(%rip)

"_start" :
1e50(2): xor %ebp,%ebp
1e52(3): mov %rdx,%r9
1e55(1): pop %rsi
1e56(3): mov %rsp,%rdx
1e59(4): and $0xfffffff0,%rsp
1e5d(1): push %rax
1e5e(1): push %rsp
1e5f(7): lea 0x39aa(%rip),%r8
1e66(7): lea 0x3933(%rip),%rcx
1e6d(7): lea 0xfffff87c(%rip),%rdi
1e74(6): call 0x20614e(%rip)
1e7a(1): hlt 

"deregister_tm_clones" :
1e80(7): lea 0x2061f9(%rip),%rdi
1e87(1): push %rbp
1e88(7): lea 0x2061f1(%rip),%rax
1e8f(3): cmp %rdi,%rax
1e92(3): mov %rsp,%rbp
1e95(2): jz 0x1b(%rip)
1e97(7): mov 0x206122(%rip),%rax
1e9e(3): test %rax,%rax
1ea1(2): jz 0xf(%rip)
1ea3(1): pop %rbp
1ea4(2): jmp %rax
1ea6(a): nop 0x0(%rax,%rax,1)
1eb0(1): pop %rbp
1eb1(1): ret near (%rsp)

"register_tm_clones" :
1ec0(7): lea 0x2061b9(%rip),%rdi
1ec7(7): lea 0x2061b2(%rip),%rsi
1ece(1): push %rbp
1ecf(3): sub %rdi,%rsi
1ed2(3): mov %rsp,%rbp
1ed5(4): sar $0x3,%rsi
1ed9(3): mov %rsi,%rax
1edc(4): shr $0x3f,%rax
1ee0(3): add %rax,%rsi
1ee3(3): sar $0x1,%rsi
1ee6(2): jz 0x1a(%rip)
1ee8(7): mov 0x2060e9(%rip),%rax
1eef(3): test %rax,%rax
1ef2(2): jz 0xe(%rip)
1ef4(1): pop %rbp
1ef5(2): jmp %rax
1ef7(9): nop 0x0(%rax,%rax,1)
1f00(1): pop %rbp
1f01(1): ret near (%rsp)

"__do_global_dtors_aux" :
1f10(7): cmp $0x0,0x2061d1(%rip)
1f17(2): jnz 0x31(%rip)
1f19(8): cmp $0x0,0x2060bf(%rip)
1f21(1): push %rbp
1f22(3): mov %rsp,%rbp
1f25(2): jz 0xe(%rip)
1f27(7): mov 0x2060da(%rip),%rdi
1f2e(5): call 0xfffff7b2(%rip)
1f33(5): call 0xffffff4d(%rip)
1f38(7): mov $0x1,0x2061a9(%rip)
1f3f(1): pop %rbp
1f40(1): ret near (%rsp)
1f41(7): nop 0x0(%rax)
1f48(2): REP ret near (%rsp)

"frame_dummy" :
1f50(1): push %rbp
1f51(3): mov %rsp,%rbp
1f54(1): pop %rbp
1f55(5): jmp 0xffffff6b(%rip)

"count_items" :
1f60(8): add $0x1,0x206188(%rip)
1f68(2): xor %eax,%eax
1f6a(1): ret near (%rsp)

"recurse_tree" :
1f70(1): push %rbp
1f71(1): push %rbx
1f72(3): mov %rsi,%rbp
1f75(3): mov %rdi,%rbx
1f78(4): sub $0x8,%rsp
1f7c(4): mov 0x8(%rbx),%rdi
1f80(3): test %rdi,%rdi
1f83(2): jz 0x3d(%rip)
1f85(3): mov %rbp,%rsi
1f88(5): call 0xffffffe8(%rip)
1f8d(2): test %al,%al
1f8f(2): jnz 0x21(%rip)
1f91(3): mov %rbx,%rdi
1f94(2): call %rbp
1f96(2): test %al,%al
1f98(2): jnz 0x18(%rip)
1f9a(4): mov 0x10(%rbx),%rbx
1f9e(3): test %rbx,%rbx
1fa1(2): jnz 0xffffffdb(%rip)
1fa3(4): add $0x8,%rsp
1fa7(1): pop %rbx
1fa8(1): pop %rbp
1fa9(1): ret near (%rsp)
1faa(6): nop 0x0(%rax,%rax,1)
1fb0(4): add $0x8,%rsp
1fb4(5): mov $0x1,%eax
1fb9(1): pop %rbx
1fba(1): pop %rbp
1fbb(1): ret near (%rsp)
1fbc(4): nop 0x0(%rax)
1fc0(5): cmp $0x0,0x10(%rbx)
1fc5(2): jnz 0xffffffcc(%rip)
1fc7(4): add $0x8,%rsp
1fcb(3): mov %rbx,%rdi
1fce(3): mov %rbp,%rax
1fd1(1): pop %rbx
1fd2(1): pop %rbp
1fd3(2): jmp %rax

"new_item" :
1fe0(1): push %rbp
1fe1(1): push %rbx
1fe2(3): mov %rdi,%rbp
1fe5(5): mov $0x38,%edi
1fea(4): sub $0x8,%rsp
1fee(5): call 0x3252(%rip)
1ff3(3): test %rbp,%rbp
1ff6(3): mov %rax,%rbx
1ff9(2): jz 0xd(%rip)
1ffb(3): mov %rbp,%rdi
1ffe(5): call 0x3472(%rip)
2003(3): mov %rax,%rbp
2006(3): mov %rbp,(%rbx)
2009(8): mov $0x0,0x10(%rbx)
2011(3): mov %rbx,%rax
2014(8): mov $0x0,0x8(%rbx)
201c(7): mov $0x0,0x18(%rbx)
2023(8): mov $0x0,0x20(%rbx)
202b(8): mov $0x0,0x28(%rbx)
2033(8): mov $0x0,0x30(%rbx)
203b(4): add $0x8,%rsp
203f(1): pop %rbx
2040(1): pop %rbp
2041(1): ret near (%rsp)

"scan_zeros" :
2050(5): cmp $0x0,0x20(%rdi)
2055(2): jnz 0x24(%rip)
2057(4): cmp $0x0,(%rdi)
205b(2): jz 0x1e(%rip)
205d(8): cmp $0x0,0x2060a3(%rip)
2065(2): jz 0x1b(%rip)
2067(7): mov 0x206092(%rip),%rax
206e(4): mov %rdi,0x28(%rax)
2072(7): mov %rdi,0x206087(%rip)
2079(2): xor %eax,%eax
207b(1): ret near (%rsp)
207c(4): nop 0x0(%rax)
2080(7): mov %rdi,0x206081(%rip)
2087(2): jmp 0xffffffeb(%rip)

"detect_loop" :
2090(2): xor %eax,%eax
2092(5): cmp $0x0,0x20(%rdi)
2097(2): jz 0x51(%rip)
2099(2): push %r13
209b(2): push %r12
209d(1): push %rbp
209e(1): push %rbx
209f(3): mov %rdi,%rbx
20a2(4): sub $0x8,%rsp
20a6(7): mov 0x20604b(%rip),%rdx
20ad(3): test %rdx,%rdx
20b0(2): jz 0x40(%rip)
20b2(4): mov 0x30(%rdi),%rcx
20b6(3): test %rcx,%rcx
20b9(2): jz 0x20(%rip)
20bb(3): cmp (%rcx),%rdx
20be(2): jnz 0x12(%rip)
20c0(5): jmp 0xf8(%rip)
20c5(3): nop (%rax)
20c8(3): cmp (%rax),%rdx
20cb(2): jz 0x3d(%rip)
20cd(3): mov %rax,%rcx
20d0(4): mov 0x8(%rcx),%rax
20d4(3): test %rax,%rax
20d7(2): jnz 0xfffffff1(%rip)
20d9(4): add $0x8,%rsp
20dd(1): pop %rbx
20de(1): pop %rbp
20df(2): pop %r12
20e1(2): pop %r13
20e3(1): ret near (%rsp)
20e4(4): nop 0x0(%rax)
20e8(2): REP ret near (%rsp)
20ea(6): nop 0x0(%rax,%rax,1)
20f0(7): mov %rdi,0x206001(%rip)
20f7(4): add $0x8,%rsp
20fb(1): pop %rbx
20fc(1): pop %rbp
20fd(2): pop %r12
20ff(2): pop %r13
2101(1): ret near (%rsp)
2102(6): nop 0x0(%rax,%rax,1)
2108(4): lea 0x8(%rcx),%rbp
210c(5): cmp $0x0,0x28(%rbx)
2111(6): jz 0x8f(%rip)
2117(7): lea 0x3ab9(%rip),%r13
211e(2): jmp 0x19(%rip)
2120(3): test %r12,%r12
2123(8): mov $0x0,0x28(%rax)
212b(7): mov %r12,0x205fc6(%rip)
2132(3): mov %r12,%rdx
2135(2): jz 0x5a(%rip)
2137(3): mov (%rdx),%rcx
213a(2): xor %eax,%eax
213c(4): mov 0x28(%rdx),%r12
2140(2): xor %esi,%esi
2142(2): xor %edi,%edi
2144(3): mov %r13,%rdx
2147(5): call 0xfffff4f9(%rip)
214c(7): mov 0x205fa5(%rip),%rax
2153(3): cmp %rax,%rbx
2156(2): jnz 0xffffffca(%rip)
2158(4): mov 0x0(%rbp),%rax
215c(3): mov (%rax),%rdx
215f(4): mov 0x8(%rax),%rax
2163(5): sub $0x1,0x20(%rdx)
2168(4): mov %rax,0x0(%rbp)
216c(4): nop 0x0(%rax)
2170(4): mov 0x28(%rbx),%rax
2174(8): mov $0x0,0x28(%rbx)
217c(3): test %rax,%rax
217f(3): mov %rax,%rbx
2182(2): jnz 0xffffffee(%rip)
2184(b): mov $0x0,0x205f69(%rip)
218f(4): add $0x8,%rsp
2193(5): mov $0x1,%eax
2198(1): pop %rbx
2199(1): pop %rbp
219a(2): pop %r12
219c(2): pop %r13
219e(1): ret near (%rsp)
219f(1): nop 
21a0(4): mov %rdx,0x28(%rbx)
21a4(7): mov %rbx,0x205f4d(%rip)
21ab(2): xor %eax,%eax
21ad(5): jmp 0xffffff2c(%rip)
21b2(6): nop 0x0(%rax,%rax,1)
21b8(4): lea 0x30(%rdi),%rbp
21bc(5): jmp 0xffffff50(%rip)

"usage" :
21d0(2): push %r13
21d2(2): push %r12
21d4(5): mov $0x5,%edx
21d9(1): push %rbp
21da(1): push %rbx
21db(2): mov %edi,%ebp
21dd(7): sub $0x88,%rsp
21e4(7): mov 0x205f35(%rip),%rbx
21eb(9): mov $0x28,%rax
21f4(5): mov %rax,0x78(%rsp)
21f9(2): xor %eax,%eax
21fb(2): test %edi,%edi
21fd(2): jz 0x30(%rip)
21ff(7): lea 0x37a2(%rip),%rsi
2206(2): xor %edi,%edi
2208(5): call 0xfffff288(%rip)
220d(7): mov 0x205ecc(%rip),%rdi
2214(3): mov %rax,%rdx
2217(3): mov %rbx,%rcx
221a(5): mov $0x1,%esi
221f(2): xor %eax,%eax
2221(5): call 0xfffff47f(%rip)
2226(2): mov %ebp,%edi
2228(5): call 0xfffff458(%rip)
222d(7): lea 0x379c(%rip),%rsi
2234(2): xor %edi,%edi
2236(5): call 0xfffff25a(%rip)
223b(3): mov %rbx,%rdx
223e(3): mov %rax,%rsi
2241(5): mov $0x1,%edi
2246(2): xor %eax,%eax
2248(5): call 0xfffff3e8(%rip)
224d(7): mov 0x205e34(%rip),%rbx
2254(7): lea 0x37dd(%rip),%rsi
225b(5): mov $0x5,%edx
2260(2): xor %edi,%edi
2262(5): call 0xfffff22e(%rip)
2267(3): mov %rbx,%rsi
226a(3): mov %rax,%rdi
226d(5): call 0xfffff313(%rip)
2272(7): mov 0x205e0f(%rip),%rbx
2279(7): lea 0x36a6(%rip),%rsi
2280(5): mov $0x5,%edx
2285(2): xor %edi,%edi
2287(5): call 0xfffff209(%rip)
228c(3): mov %rbx,%rsi
228f(3): mov %rax,%rdi
2292(5): call 0xfffff2ee(%rip)
2297(7): mov 0x205dea(%rip),%rbx
229e(7): lea 0x37cb(%rip),%rsi
22a5(5): mov $0x5,%edx
22aa(2): xor %edi,%edi
22ac(5): call 0xfffff1e4(%rip)
22b1(3): mov %rbx,%rsi
22b4(3): mov %rax,%rdi
22b7(5): call 0xfffff2c9(%rip)
22bc(7): mov 0x205dc5(%rip),%rbx
22c3(7): lea 0x37d6(%rip),%rsi
22ca(5): mov $0x5,%edx
22cf(2): xor %edi,%edi
22d1(5): call 0xfffff1bf(%rip)
22d6(3): mov %rbx,%rsi
22d9(3): mov %rax,%rdi
22dc(7): lea 0x3561(%rip),%rbx
22e3(5): call 0xfffff29d(%rip)
22e8(7): lea 0x355b(%rip),%rax
22ef(7): lea 0x3595(%rip),%rcx
22f6(9): mov $0x0,0x60(%rsp)
22ff(9): mov $0x0,0x68(%rsp)
2308(3): mov %rsp,%rdx
230b(4): mov %rax,(%rsp)
230f(7): lea 0x3536(%rip),%rax
2316(5): mov %rcx,0x30(%rsp)
231b(7): lea 0x3573(%rip),%rcx
2322(5): mov %rax,0x8(%rsp)
2327(7): lea 0x3596(%rip),%rax
232e(5): mov %rcx,0x40(%rsp)
2333(7): lea 0x3565(%rip),%rcx
233a(5): mov %rax,0x10(%rsp)
233f(7): lea 0x3516(%rip),%rax
2346(5): mov %rcx,0x50(%rsp)
234b(5): mov %rax,0x18(%rsp)
2350(7): lea 0x351b(%rip),%rax
2357(5): mov %rax,0x20(%rsp)
235c(7): lea 0x3519(%rip),%rax
2363(5): mov %rax,0x28(%rsp)
2368(5): mov %rax,0x38(%rsp)
236d(5): mov %rax,0x48(%rsp)
2372(5): mov %rax,0x58(%rsp)
2377(9): nop 0x0(%rax,%rax,1)
2380(4): add $0x10,%rdx
2384(3): mov (%rdx),%rdi
2387(3): test %rdi,%rdi
238a(2): jz 0x15(%rip)
238c(5): mov $0x6,%ecx
2391(3): mov %rbx,%rsi
2394(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2396(3): setnbe %al
2399(2): sbb $0x0,%al
239b(2): test %al,%al
239d(2): jnz 0xffffffe3(%rip)
239f(4): mov 0x8(%rdx),%r12
23a3(2): xor %edi,%edi
23a5(5): mov $0x5,%edx
23aa(7): lea 0x34f8(%rip),%rsi
23b1(3): test %r12,%r12
23b4(6): jz 0xc7(%rip)
23ba(5): call 0xfffff0d6(%rip)
23bf(7): lea 0x3712(%rip),%rcx
23c6(7): lea 0x34f3(%rip),%rdx
23cd(3): mov %rax,%rsi
23d0(5): mov $0x1,%edi
23d5(2): xor %eax,%eax
23d7(5): call 0xfffff259(%rip)
23dc(2): xor %esi,%esi
23de(5): mov $0x5,%edi
23e3(5): call 0xfffff23d(%rip)
23e8(3): test %rax,%rax
23eb(2): jz 0x1e(%rip)
23ed(7): lea 0x34da(%rip),%rsi
23f4(5): mov $0x3,%edx
23f9(3): mov %rax,%rdi
23fc(5): call 0xfffff024(%rip)
2401(2): test %eax,%eax
2403(6): jnz 0x10d(%rip)
2409(7): lea 0x34c2(%rip),%rsi
2410(2): xor %edi,%edi
2412(5): mov $0x5,%edx
2417(5): call 0xfffff079(%rip)
241c(7): lea 0x3421(%rip),%rcx
2423(7): lea 0x36ae(%rip),%rdx
242a(3): mov %rax,%rsi
242d(5): mov $0x1,%edi
2432(2): xor %eax,%eax
2434(5): call 0xfffff1fc(%rip)
2439(3): cmp %rbx,%r12
243c(7): lea 0x3423(%rip),%rcx
2443(7): lea 0x34dd(%rip),%rbx
244a(4): cmove %rcx,%rbx
244e(7): lea 0x36f3(%rip),%rsi
2455(2): xor %edi,%edi
2457(5): mov $0x5,%edx
245c(5): call 0xfffff034(%rip)
2461(3): mov %rbx,%rcx
2464(3): mov %rax,%rsi
2467(3): mov %r12,%rdx
246a(5): mov $0x1,%edi
246f(2): xor %eax,%eax
2471(5): call 0xfffff1bf(%rip)
2476(5): jmp 0xfffffdb0(%rip)
247b(5): call 0xfffff015(%rip)
2480(7): lea 0x3651(%rip),%rcx
2487(7): lea 0x3432(%rip),%rdx
248e(3): mov %rax,%rsi
2491(5): mov $0x1,%edi
2496(2): xor %eax,%eax
2498(5): call 0xfffff198(%rip)
249d(2): xor %esi,%esi
249f(5): mov $0x5,%edi
24a4(5): call 0xfffff17c(%rip)
24a9(3): test %rax,%rax
24ac(2): jz 0x1a(%rip)
24ae(7): lea 0x3419(%rip),%rsi
24b5(5): mov $0x3,%edx
24ba(3): mov %rax,%rdi
24bd(5): call 0xffffef63(%rip)
24c2(2): test %eax,%eax
24c4(2): jnz 0x45(%rip)
24c6(7): lea 0x3405(%rip),%rsi
24cd(5): mov $0x5,%edx
24d2(2): xor %edi,%edi
24d4(7): lea 0x3369(%rip),%r12
24db(7): lea 0x3384(%rip),%rbx
24e2(5): call 0xffffefae(%rip)
24e7(7): lea 0x3356(%rip),%rcx
24ee(7): lea 0x35e3(%rip),%rdx
24f5(3): mov %rax,%rsi
24f8(5): mov $0x1,%edi
24fd(2): xor %eax,%eax
24ff(5): call 0xfffff131(%rip)
2504(5): jmp 0xffffff4a(%rip)
2509(7): lea 0x3334(%rip),%r12
2510(7): mov 0x205b71(%rip),%r13
2517(7): lea 0x35e2(%rip),%rsi
251e(2): xor %edi,%edi
2520(5): mov $0x5,%edx
2525(5): call 0xffffef6b(%rip)
252a(3): mov %r13,%rsi
252d(3): mov %rax,%rdi
2530(5): call 0xfffff050(%rip)
2535(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2540(7): mov %rdi,0x205bd1(%rip)
2547(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2550(7): mov %dil,0x205bb9(%rip)
2557(1): ret near (%rsp)

"close_stdout" :
2560(1): push %rbp
2561(1): push %rbx
2562(4): sub $0x8,%rsp
2566(7): mov 0x205b1b(%rip),%rdi
256d(5): call 0x3113(%rip)
2572(2): test %eax,%eax
2574(2): jz 0x18(%rip)
2576(5): call 0xffffee9a(%rip)
257b(7): cmp $0x0,0x205b8e(%rip)
2582(3): mov %rax,%rbx
2585(2): jz 0x1e(%rip)
2587(3): cmp $0x20,(%rax)
258a(2): jnz 0x19(%rip)
258c(7): mov 0x205b4d(%rip),%rdi
2593(5): call 0x30ed(%rip)
2598(2): test %eax,%eax
259a(2): jnz 0x48(%rip)
259c(4): add $0x8,%rsp
25a0(1): pop %rbx
25a1(1): pop %rbp
25a2(1): ret near (%rsp)
25a3(7): lea 0x361d(%rip),%rsi
25aa(2): xor %edi,%edi
25ac(5): mov $0x5,%edx
25b1(5): call 0xffffeedf(%rip)
25b6(7): mov 0x205b5b(%rip),%rdi
25bd(3): mov %rax,%rbp
25c0(3): test %rdi,%rdi
25c3(2): jz 0x2a(%rip)
25c5(5): call 0x201b(%rip)
25ca(2): mov (%rbx),%esi
25cc(7): lea 0x3600(%rip),%rdx
25d3(3): mov %rax,%rcx
25d6(3): mov %rbp,%r8
25d9(2): xor %edi,%edi
25db(2): xor %eax,%eax
25dd(5): call 0xfffff063(%rip)
25e2(6): mov 0x205a30(%rip),%edi
25e8(5): call 0xffffee48(%rip)
25ed(2): mov (%rbx),%esi
25ef(7): lea 0x35e1(%rip),%rdx
25f6(3): mov %rax,%rcx
25f9(2): xor %edi,%edi
25fb(2): xor %eax,%eax
25fd(5): call 0xfffff043(%rip)
2602(2): jmp 0xffffffe0(%rip)

"fadvise" :
2620(3): test %rdi,%rdi
2623(2): jz 0x1d(%rip)
2625(1): push %rbx
2626(2): mov %esi,%ebx
2628(5): call 0xffffef98(%rip)
262d(2): mov %ebx,%ecx
262f(2): xor %edx,%edx
2631(2): xor %esi,%esi
2633(1): pop %rbx
2634(2): mov %eax,%edi
2636(5): jmp 0xffffef2a(%rip)
263b(5): nop 0x0(%rax,%rax,1)
2640(2): REP ret near (%rsp)

"protect_fd" :
2650(1): push %rbp
2651(1): push %rbx
2652(2): mov %edi,%ebp
2654(7): lea 0x357f(%rip),%rdi
265b(2): xor %esi,%esi
265d(2): xor %eax,%eax
265f(4): sub $0x8,%rsp
2663(5): mov $0x1,%ebx
2668(5): call 0xffffefe8(%rip)
266d(2): cmp %eax,%ebp
266f(2): jz 0x1a(%rip)
2671(2): xor %ebx,%ebx
2673(2): test %eax,%eax
2675(2): js 0x14(%rip)
2677(2): mov %eax,%edi
2679(5): call 0xffffeed7(%rip)
267e(5): call 0xffffed92(%rip)
2683(6): mov $0x9,(%rax)
2689(4): add $0x8,%rsp
268d(2): mov %ebx,%eax
268f(1): pop %rbx
2690(1): pop %rbp
2691(1): ret near (%rsp)

"freopen_safer" :
26a0(2): push %r15
26a2(2): push %r14
26a4(3): mov %rsi,%r15
26a7(2): push %r13
26a9(2): push %r12
26ab(3): mov %rdx,%r12
26ae(1): push %rbp
26af(1): push %rbx
26b0(4): sub $0x18,%rsp
26b4(5): mov %rdi,0x8(%rsp)
26b9(3): mov %rdx,%rdi
26bc(5): call 0xffffef04(%rip)
26c1(2): mov %eax,%ebx
26c3(5): call 0xffffed4d(%rip)
26c8(3): cmp $0x1,%ebx
26cb(3): mov %rax,%r14
26ce(6): jz 0x162(%rip)
26d4(3): cmp $0x2,%ebx
26d7(6): jz 0x149(%rip)
26dd(2): test %ebx,%ebx
26df(6): jz 0xb9(%rip)
26e5(5): mov $0x2,%esi
26ea(5): mov $0x2,%edi
26ef(5): call 0xffffee01(%rip)
26f4(3): cmp $0x2,%eax
26f7(3): setnz %bl
26fa(5): mov $0x1,%esi
26ff(5): mov $0x1,%edi
2704(5): call 0xffffedec(%rip)
2709(3): cmp $0x1,%eax
270c(4): setnz %bpl
2710(2): xor %esi,%esi
2712(2): xor %edi,%edi
2714(5): call 0xffffeddc(%rip)
2719(2): test %eax,%eax
271b(6): jz 0x8d(%rip)
2721(2): xor %edi,%edi
2723(5): call 0xffffff2d(%rip)
2728(2): test %al,%al
272a(3): mov %eax,%r13d
272d(6): jz 0x113(%rip)
2733(3): test %bpl,%bpl
2736(2): jnz 0x7a(%rip)
2738(2): test %bl,%bl
273a(2): jz 0x16(%rip)
273c(5): mov $0x2,%edi
2741(5): call 0xffffff0f(%rip)
2746(2): test %al,%al
2748(2): mov %eax,%ebx
274a(6): jz 0xb6(%rip)
2750(5): mov 0x8(%rsp),%rdi
2755(3): mov %r12,%rdx
2758(3): mov %r15,%rsi
275b(5): call 0xffffede5(%rip)
2760(3): mov %rax,%r12
2763(2): test %bl,%bl
2765(3): mov (%r14),%r15d
2768(6): jnz 0xa8(%rip)
276e(3): test %bpl,%bpl
2771(2): jnz 0x6f(%rip)
2773(3): test %r13b,%r13b
2776(2): jnz 0x79(%rip)
2778(3): test %r12,%r12
277b(2): jnz 0x5(%rip)
277d(3): mov %r15d,(%r14)
2780(4): add $0x18,%rsp
2784(3): mov %r12,%rax
2787(1): pop %rbx
2788(1): pop %rbp
2789(2): pop %r12
278b(2): pop %r13
278d(2): pop %r14
278f(2): pop %r15
2791(1): ret near (%rsp)
2792(6): nop 0x0(%rax,%rax,1)
2798(2): xor %ebx,%ebx
279a(2): xor %ebp,%ebp
279c(3): xor %r13d,%r13d
279f(2): jmp 0xffffffb1(%rip)
27a1(7): nop 0x0(%rax)
27a8(3): xor %r13d,%r13d
27ab(3): test %bpl,%bpl
27ae(2): jz 0xffffff8a(%rip)
27b0(5): mov $0x1,%edi
27b5(5): call 0xfffffe9b(%rip)
27ba(2): test %al,%al
27bc(2): mov %eax,%ebp
27be(6): jnz 0xffffff7a(%rip)
27c4(3): xor %r12d,%r12d
27c7(2): test %bl,%bl
27c9(3): mov (%r14),%r15d
27cc(2): jz 0x14(%rip)
27ce(5): mov $0x2,%edi
27d3(5): call 0xffffed7d(%rip)
27d8(8): nop 0x0(%rax,%rax,1)
27e0(5): mov $0x1,%edi
27e5(5): call 0xffffed6b(%rip)
27ea(3): test %r13b,%r13b
27ed(2): jz 0xffffff8b(%rip)
27ef(2): xor %edi,%edi
27f1(5): call 0xffffed5f(%rip)
27f6(2): jmp 0xffffff82(%rip)
27f8(8): nop 0x0(%rax,%rax,1)
2800(3): mov (%r14),%r15d
2803(3): xor %r12d,%r12d
2806(a): nop 0x0(%rax,%rax,1)
2810(5): mov $0x2,%edi
2815(5): call 0xffffed3b(%rip)
281a(5): jmp 0xffffff54(%rip)
281f(1): nop 
2820(2): xor %ebx,%ebx
2822(5): jmp 0xfffffed8(%rip)
2827(9): nop 0x0(%rax,%rax,1)
2830(2): xor %ebx,%ebx
2832(2): xor %ebp,%ebp
2834(5): jmp 0xfffffedc(%rip)
2839(7): nop 0x0(%rax)
2840(6): mov $0x1,%r13d
2846(3): xor %r12d,%r12d
2849(5): jmp 0xffffff1a(%rip)

"parse_long_options" :
2850(2): push %r13
2852(2): push %r12
2854(3): mov %r8,%r13
2857(1): push %rbp
2858(1): push %rbx
2859(3): mov %rdx,%rbp
285c(3): mov %rcx,%r12
285f(7): sub $0xe8,%rsp
2866(2): test %al,%al
2868(2): jz 0x3c(%rip)
286a(5): movaps %xmm0,0x60(%rsp)
286f(5): movaps %xmm1,0x70(%rsp)
2874(8): movaps %xmm2,0x80(%rsp)
287c(8): movaps %xmm3,0x90(%rsp)
2884(8): movaps %xmm4,0xa0(%rsp)
288c(8): movaps %xmm5,0xb0(%rsp)
2894(8): movaps %xmm6,0xc0(%rsp)
289c(8): movaps %xmm7,0xd0(%rsp)
28a4(9): mov $0x28,%rax
28ad(5): mov %rax,0x28(%rsp)
28b2(2): xor %eax,%eax
28b4(3): cmp $0x2,%edi
28b7(6): mov 0x205803(%rip),%ebx
28bd(a): mov $0x0,0x2057f9(%rip)
28c7(2): jz 0x39(%rip)
28c9(5): mov 0x28(%rsp),%rax
28ce(9): xor $0x28,%rax
28d7(6): mov %ebx,0x2057e3(%rip)
28dd(a): mov $0x0,0x2057b1(%rip)
28e7(6): jnz 0xa3(%rip)
28ed(7): add $0xe8,%rsp
28f4(1): pop %rbx
28f5(1): pop %rbp
28f6(2): pop %r12
28f8(2): pop %r13
28fa(1): ret near (%rsp)
28fb(5): nop 0x0(%rax,%rax,1)
2900(7): lea 0x205279(%rip),%rcx
2907(7): lea 0x32d6(%rip),%rdx
290e(3): xor %r8d,%r8d
2911(5): mov %r9,0x8(%rsp)
2916(5): call 0xffffebba(%rip)
291b(3): cmp $0xff,%eax
291e(2): jz 0xffffffab(%rip)
2920(3): cmp $0x68,%eax
2923(5): mov 0x8(%rsp),%r9
2928(2): jz 0x58(%rip)
292a(3): cmp $0x76,%eax
292d(2): jnz 0xffffff9c(%rip)
292f(8): lea 0x110(%rsp),%rax
2937(7): mov 0x20574a(%rip),%rdi
293e(5): lea 0x10(%rsp),%r8
2943(3): mov %r13,%rcx
2946(3): mov %r12,%rdx
2949(3): mov %rbp,%rsi
294c(5): mov %rax,0x18(%rsp)
2951(5): lea 0x30(%rsp),%rax
2956(8): mov $0x30,0x10(%rsp)
295e(8): mov $0x30,0x14(%rsp)
2966(5): mov %rax,0x20(%rsp)
296b(5): call 0x26f5(%rip)
2970(2): xor %edi,%edi
2972(5): call 0xffffed0e(%rip)
2977(9): nop 0x0(%rax,%rax,1)
2980(2): xor %edi,%edi
2982(3): call %r9
2985(5): jmp 0xffffff44(%rip)
298a(5): call 0xffffeb36(%rip)

"parse_gnu_standard_options_only" :
2990(2): push %r14
2992(2): push %r13
2994(3): mov %r8,%r14
2997(2): push %r12
2999(1): push %rbp
299a(3): mov %rdx,%r12
299d(1): push %rbx
299e(3): mov %rcx,%r13
29a1(7): sub $0xd0,%rsp
29a8(2): test %al,%al
29aa(8): mov 0x100(%rsp),%rbp
29b2(2): jz 0x39(%rip)
29b4(5): movaps %xmm0,0x50(%rsp)
29b9(5): movaps %xmm1,0x60(%rsp)
29be(5): movaps %xmm2,0x70(%rsp)
29c3(8): movaps %xmm3,0x80(%rsp)
29cb(8): movaps %xmm4,0x90(%rsp)
29d3(8): movaps %xmm5,0xa0(%rsp)
29db(8): movaps %xmm6,0xb0(%rsp)
29e3(8): movaps %xmm7,0xc0(%rsp)
29eb(9): mov $0x28,%rax
29f4(5): mov %rax,0x18(%rsp)
29f9(2): xor %eax,%eax
29fb(7): lea 0x2f25(%rip),%rdx
2a02(7): lea 0x31db(%rip),%rax
2a09(3): test %r9b,%r9b
2a0c(7): lea 0x20516d(%rip),%rcx
2a13(4): cmove %rax,%rdx
2a17(3): xor %r8d,%r8d
2a1a(6): mov 0x2056a0(%rip),%ebx
2a20(a): mov $0x1,0x205696(%rip)
2a2a(5): call 0xffffeaa6(%rip)
2a2f(3): cmp $0xff,%eax
2a32(2): jz 0x66(%rip)
2a34(3): cmp $0x68,%eax
2a37(6): jz 0x89(%rip)
2a3d(3): cmp $0x76,%eax
2a40(2): jnz 0x50(%rip)
2a42(8): lea 0x108(%rsp),%rax
2a4a(7): mov 0x205637(%rip),%rdi
2a51(3): mov %rsp,%r8
2a54(3): mov %r14,%rcx
2a57(3): mov %r13,%rdx
2a5a(3): mov %r12,%rsi
2a5d(5): mov %rax,0x8(%rsp)
2a62(5): lea 0x20(%rsp),%rax
2a67(7): mov $0x30,(%rsp)
2a6e(8): mov $0x30,0x4(%rsp)
2a76(5): mov %rax,0x10(%rsp)
2a7b(5): call 0x25e5(%rip)
2a80(2): xor %edi,%edi
2a82(5): call 0xffffebfe(%rip)
2a87(9): nop 0x0(%rax,%rax,1)
2a90(6): mov 0x205582(%rip),%edi
2a96(2): call %rbp
2a98(5): mov 0x18(%rsp),%rax
2a9d(9): xor $0x28,%rax
2aa6(6): mov %ebx,0x205614(%rip)
2aac(2): jnz 0x1a(%rip)
2aae(7): add $0xd0,%rsp
2ab5(1): pop %rbx
2ab6(1): pop %rbp
2ab7(2): pop %r12
2ab9(2): pop %r13
2abb(2): pop %r14
2abd(1): ret near (%rsp)
2abe(2): nop 
2ac0(2): xor %edi,%edi
2ac2(2): call %rbp
2ac4(2): jmp 0xffffffd4(%rip)
2ac6(5): call 0xffffe9fa(%rip)

"set_program_name" :
2ad0(3): test %rdi,%rdi
2ad3(1): push %rbx
2ad4(2): jz 0x79(%rip)
2ad6(5): mov $0x2f,%esi
2adb(3): mov %rdi,%rbx
2ade(5): call 0xffffea22(%rip)
2ae3(3): test %rax,%rax
2ae6(2): jz 0x57(%rip)
2ae8(4): lea 0x1(%rax),%r8
2aec(3): mov %r8,%rdx
2aef(3): sub %rbx,%rdx
2af2(4): cmp $0x6,%rdx
2af6(2): jle 0x47(%rip)
2af8(4): lea 0xfffffffa(%rax),%rsi
2afc(7): lea 0x312d(%rip),%rdi
2b03(5): mov $0x7,%ecx
2b08(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2b0a(3): setnbe %dl
2b0d(3): sbb $0x0,%dl
2b10(2): test %dl,%dl
2b12(2): jnz 0x2b(%rip)
2b14(7): lea 0x311d(%rip),%rdi
2b1b(5): mov $0x3,%ecx
2b20(3): mov %r8,%rsi
2b23(3): mov %r8,%rbx
2b26(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2b28(3): setnbe %dl
2b2b(3): sbb $0x0,%dl
2b2e(2): test %dl,%dl
2b30(2): jnz 0xd(%rip)
2b32(4): lea 0x4(%rax),%rbx
2b36(7): mov %rbx,0x205543(%rip)
2b3d(7): mov %rbx,0x2055dc(%rip)
2b44(7): mov %rbx,0x205555(%rip)
2b4b(1): pop %rbx
2b4c(1): ret near (%rsp)
2b4d(7): mov 0x20558c(%rip),%rcx
2b54(7): lea 0x309d(%rip),%rdi
2b5b(5): mov $0x37,%edx
2b60(5): mov $0x1,%esi
2b65(5): call 0xffffeb2b(%rip)
2b6a(5): call 0xffffe896(%rip)

"gettext_quote.part.1" :
2b70(1): push %rbp
2b71(1): push %rbx
2b72(3): mov %rdi,%rbp
2b75(2): mov %esi,%ebx
2b77(4): sub $0x8,%rsp
2b7b(5): call 0x2be5(%rip)
2b80(3): movzx (%rax),%edx
2b83(3): and $0xdf,%edx
2b86(3): cmp $0x55,%dl
2b89(2): jz 0x77(%rip)
2b8b(3): cmp $0x47,%dl
2b8e(2): jz 0x22(%rip)
2b90(7): lea 0x30b4(%rip),%rax
2b97(7): lea 0x30af(%rip),%rdx
2b9e(3): cmp $0x9,%ebx
2ba1(4): cmovne %rdx,%rax
2ba5(4): add $0x8,%rsp
2ba9(1): pop %rbx
2baa(1): pop %rbp
2bab(1): ret near (%rsp)
2bac(4): nop 0x0(%rax)
2bb0(4): movzx 0x1(%rax),%edx
2bb4(3): and $0xdf,%edx
2bb7(3): cmp $0x42,%dl
2bba(2): jnz 0xffffffd6(%rip)
2bbc(4): cmp $0x31,0x2(%rax)
2bc0(2): jnz 0xffffffd0(%rip)
2bc2(4): cmp $0x38,0x3(%rax)
2bc6(2): jnz 0xffffffca(%rip)
2bc8(4): cmp $0x30,0x4(%rax)
2bcc(2): jnz 0xffffffc4(%rip)
2bce(4): cmp $0x33,0x5(%rax)
2bd2(2): jnz 0xffffffbe(%rip)
2bd4(4): cmp $0x30,0x6(%rax)
2bd8(2): jnz 0xffffffb8(%rip)
2bda(4): cmp $0x0,0x7(%rax)
2bde(2): jnz 0xffffffb2(%rip)
2be0(4): cmp $0x60,0x0(%rbp)
2be4(7): lea 0x3059(%rip),%rax
2beb(7): lea 0x3056(%rip),%rdx
2bf2(4): cmovne %rdx,%rax
2bf6(4): add $0x8,%rsp
2bfa(1): pop %rbx
2bfb(1): pop %rbp
2bfc(1): ret near (%rsp)
2bfd(3): nop (%rax)
2c00(4): movzx 0x1(%rax),%edx
2c04(3): and $0xdf,%edx
2c07(3): cmp $0x54,%dl
2c0a(2): jnz 0xffffff86(%rip)
2c0c(4): movzx 0x2(%rax),%edx
2c10(3): and $0xdf,%edx
2c13(3): cmp $0x46,%dl
2c16(6): jnz 0xffffff7a(%rip)
2c1c(4): cmp $0x2d,0x3(%rax)
2c20(6): jnz 0xffffff70(%rip)
2c26(4): cmp $0x38,0x4(%rax)
2c2a(6): jnz 0xffffff66(%rip)
2c30(4): cmp $0x0,0x5(%rax)
2c34(6): jnz 0xffffff5c(%rip)
2c3a(4): cmp $0x60,0x0(%rbp)
2c3e(7): lea 0x2ff7(%rip),%rax
2c45(7): lea 0x2ff4(%rip),%rdx
2c4c(4): cmovne %rdx,%rax
2c50(4): add $0x8,%rsp
2c54(1): pop %rbx
2c55(1): pop %rbp
2c56(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2c60(2): push %r15
2c62(2): push %r14
2c64(3): mov %r8d,%r15d
2c67(2): push %r13
2c69(2): push %r12
2c6b(3): mov %rdi,%r14
2c6e(1): push %rbp
2c6f(1): push %rbx
2c70(3): mov %r9d,%ebx
2c73(3): mov %rsi,%r13
2c76(3): mov %rcx,%rbp
2c79(3): and $0x2,%ebx
2c7c(7): sub $0xb8,%rsp
2c83(8): mov 0xf0(%rsp),%rax
2c8b(5): mov %rdx,0x10(%rsp)
2c90(5): mov %r8d,0x8(%rsp)
2c95(5): mov %r9d,0x78(%rsp)
2c9a(5): mov %rax,0x20(%rsp)
2c9f(8): mov 0xf8(%rsp),%rax
2ca7(5): mov %rax,0x68(%rsp)
2cac(8): mov 0x100(%rsp),%rax
2cb4(5): mov %rax,0x60(%rsp)
2cb9(9): mov $0x28,%rax
2cc2(8): mov %rax,0xa8(%rsp)
2cca(2): xor %eax,%eax
2ccc(5): call 0xffffe7d4(%rip)
2cd1(4): cmp $0xa,%r15d
2cd5(5): mov %rax,0x58(%rsp)
2cda(6): jnbe 0x11b5(%rip)
2ce0(7): lea 0x2fb9(%rip),%rcx
2ce7(3): mov %r15d,%edx
2cea(4): movsxd 0x0(%rcx,%rdx,4),%rax
2cee(3): add %rcx,%rax
2cf1(2): jmp %rax
2cf3(5): mov $0x1,0xe(%rsp)
2cf8(5): mov $0x0,0x7c(%rsp)
2cfd(3): xor %r12d,%r12d
2d00(9): mov $0x0,0x50(%rsp)
2d09(5): mov $0x1,0xf(%rsp)
2d0e(5): mov $0x0,0xd(%rsp)
2d13(7): lea 0x2f33(%rip),%rax
2d1a(9): mov $0x1,0x18(%rsp)
2d23(3): xor %r15d,%r15d
2d26(8): mov $0x2,0x8(%rsp)
2d2e(5): mov %rax,0x48(%rsp)
2d33(3): xor %r11d,%r11d
2d36(3): mov %rbp,%rax
2d39(3): mov %r12d,%r8d
2d3c(3): mov %r11,%rbp
2d3f(3): mov %rax,%r11
2d42(6): nop 0x0(%rax,%rax,1)
2d48(3): cmp %rbp,%r11
2d4b(4): setnz %r12b
2d4f(4): cmp $0xffffffff,%r11
2d53(2): jnz 0xf(%rip)
2d55(5): mov 0x10(%rsp),%rax
2d5a(4): cmp $0x0,0x0(%rax,%rbp,1)
2d5e(4): setnz %r12b
2d62(3): test %r12b,%r12b
2d65(6): jz 0x65b(%rip)
2d6b(5): cmp $0x2,0x8(%rsp)
2d70(5): mov 0x10(%rsp),%rdi
2d75(4): lea 0x0(%rdi,%rbp,1),%r9
2d79(3): setnz %al
2d7c(4): and 0xd(%rsp),%al
2d80(3): mov %eax,%r10d
2d83(6): jz 0xad(%rip)
2d89(5): mov 0x18(%rsp),%rax
2d8e(3): test %rax,%rax
2d91(6): jz 0x42f(%rip)
2d97(4): cmp $0xffffffff,%r11
2d9b(5): lea 0x0(%rbp,%rax,1),%rbx
2da0(2): jnz 0x30(%rip)
2da2(4): cmp $0x1,%rax
2da6(2): jbe 0x2a(%rip)
2da8(5): mov %r8b,0x38(%rsp)
2dad(5): mov %r10b,0x30(%rsp)
2db2(5): mov %r9,0x28(%rsp)
2db7(5): call 0xffffe6f9(%rip)
2dbc(6): movzx 0x38(%rsp),%r8d
2dc2(6): movzx 0x30(%rsp),%r10d
2dc8(3): mov %rax,%r11
2dcb(5): mov 0x28(%rsp),%r9
2dd0(3): cmp %r11,%rbx
2dd3(5): mov %r10b,0x28(%rsp)
2dd8(6): jnbe 0x5b8(%rip)
2dde(5): mov 0x18(%rsp),%rdx
2de3(5): mov 0x48(%rsp),%rsi
2de8(3): mov %r9,%rdi
2deb(5): mov %r11,0x40(%rsp)
2df0(5): mov %r8b,0x38(%rsp)
2df5(5): mov %r9,0x30(%rsp)
2dfa(5): call 0xffffe776(%rip)
2dff(2): test %eax,%eax
2e01(5): mov 0x30(%rsp),%r9
2e06(6): movzx 0x38(%rsp),%r8d
2e0c(5): mov 0x40(%rsp),%r11
2e11(6): jnz 0x57f(%rip)
2e17(5): cmp $0x0,0xf(%rsp)
2e1c(6): movzx 0x28(%rsp),%r10d
2e22(6): jnz 0xf83(%rip)
2e28(8): nop 0x0(%rax,%rax,1)
2e30(4): movzx (%r9),%ebx
2e34(3): cmp $0x7e,%bl
2e37(6): jnbe 0x321(%rip)
2e3d(7): lea 0x2e88(%rip),%rcx
2e44(3): movzx %bl,%edx
2e47(4): movsxd 0x0(%rcx,%rdx,4),%rax
2e4b(3): add %rcx,%rax
2e4e(2): jmp %rax
2e50(3): xor %r10d,%r10d
2e53(4): cmp $0x1,%r11
2e57(3): setnz %al
2e5a(4): cmp $0xffffffff,%r11
2e5e(2): jnz 0xe(%rip)
2e60(5): mov 0x10(%rsp),%rax
2e65(4): cmp $0x0,0x1(%rax)
2e69(3): setnz %al
2e6c(5): cmp $0x2,0x8(%rsp)
2e71(3): setz %dl
2e74(2): test %al,%al
2e76(6): jz 0x252(%rip)
2e7c(3): xor %r12d,%r12d
2e7f(2): xor %eax,%eax
2e81(7): nop 0x0(%rax)
2e88(5): cmp $0x1,0xd(%rsp)
2e8d(6): jnz 0x115(%rip)
2e93(2): test %dl,%dl
2e95(6): jnz 0x10d(%rip)
2e9b(5): mov 0x20(%rsp),%rsi
2ea0(3): test %rsi,%rsi
2ea3(2): jz 0x16(%rip)
2ea5(2): mov %ebx,%edx
2ea7(3): shr $0x5,%dl
2eaa(3): movzx %dl,%edx
2ead(3): mov 0x0(%rsi,%rdx,4),%edx
2eb0(3): bt %ebx,%edx
2eb3(6): jb 0x150(%rip)
2eb9(3): test %r10b,%r10b
2ebc(6): jnz 0x147(%rip)
2ec2(3): xor $0x1,%eax
2ec5(4): add $0x1,%rbp
2ec9(3): and %r8d,%eax
2ecc(2): test %al,%al
2ece(2): jz 0x22(%rip)
2ed0(3): cmp %r15,%r13
2ed3(2): jbe 0x7(%rip)
2ed5(5): mov $0x27,0x0(%r14,%r15,1)
2eda(4): lea 0x1(%r15),%rax
2ede(3): cmp %rax,%r13
2ee1(2): jbe 0x8(%rip)
2ee3(6): mov $0x27,0x1(%r14,%r15,1)
2ee9(4): add $0x2,%r15
2eed(3): xor %r8d,%r8d
2ef0(3): cmp %r13,%r15
2ef3(2): jnb 0x6(%rip)
2ef5(4): mov %bl,0x0(%r14,%r15,1)
2ef9(5): movzx 0xe(%rsp),%edi
2efe(4): add $0x1,%r15
2f02(5): mov $0x0,%eax
2f07(3): test %r12b,%r12b
2f0a(3): cmove %eax,%edi
2f0d(5): mov %dil,0xe(%rsp)
2f12(5): jmp 0xfffffe36(%rip)
2f17(9): nop 0x0(%rax,%rax,1)
2f20(3): xor %r10d,%r10d
2f23(4): mov 0x8(%rsp),%eax
2f27(3): cmp $0x2,%eax
2f2a(6): jz 0x5be(%rip)
2f30(3): cmp $0x5,%eax
2f33(6): jz 0x575(%rip)
2f39(3): cmp $0x2,%eax
2f3c(5): mov $0x3f,%ebx
2f41(3): setz %dl
2f44(3): xor %r12d,%r12d
2f47(2): xor %eax,%eax
2f49(5): jmp 0xffffff3f(%rip)
2f4e(2): nop 
2f50(3): xor %r10d,%r10d
2f53(5): cmp $0x2,0x8(%rsp)
2f58(6): jz 0x508(%rip)
2f5e(5): mov %r12b,0x7c(%rsp)
2f63(2): xor %edx,%edx
2f65(2): xor %eax,%eax
2f67(5): mov $0x27,%ebx
2f6c(5): jmp 0xffffff1c(%rip)
2f71(7): nop 0x0(%rax)
2f78(5): mov $0x9,%edx
2f7d(5): mov $0x74,%ebx
2f82(5): cmp $0x2,0x8(%rsp)
2f87(3): setz %al
2f8a(4): and 0xf(%rsp),%al
2f8e(6): jnz 0x150(%rip)
2f94(5): cmp $0x0,0xd(%rsp)
2f99(2): jnz 0x67(%rip)
2f9b(2): mov %edx,%ebx
2f9d(3): xor %r12d,%r12d
2fa0(2): xor %eax,%eax
2fa2(5): cmp $0x0,0xf(%rsp)
2fa7(6): jnz 0xfffffef4(%rip)
2fad(5): jmp 0xffffff0c(%rip)
2fb2(6): nop 0x0(%rax,%rax,1)
2fb8(5): mov $0x8,%edx
2fbd(5): mov $0x62,%ebx
2fc2(2): jmp 0xffffffd2(%rip)
2fc4(4): nop 0x0(%rax)
2fc8(5): cmp $0x2,0x8(%rsp)
2fcd(6): jz 0x3d3(%rip)
2fd3(5): cmp $0x0,0xd(%rsp)
2fd8(6): jz 0x218(%rip)
2fde(5): cmp $0x0,0xf(%rsp)
2fe3(6): jz 0x20d(%rip)
2fe9(6): cmp $0x0,0x18(%rsp)
2fef(6): jnz 0x3bc(%rip)
2ff5(5): mov $0x5c,%ebx
2ffa(6): nop 0x0(%rax,%rax,1)
3000(3): xor %r12d,%r12d
3003(5): cmp $0x2,0x8(%rsp)
3008(3): setz %dl
300b(5): cmp $0x0,0xf(%rsp)
3010(2): mov %edx,%eax
3012(6): jnz 0x856(%rip)
3018(3): mov %r8d,%eax
301b(3): xor $0x1,%eax
301e(2): and %dl,%al
3020(2): jz 0x31(%rip)
3022(3): cmp %r15,%r13
3025(2): jbe 0x7(%rip)
3027(5): mov $0x27,0x0(%r14,%r15,1)
302c(4): lea 0x1(%r15),%rdx
3030(3): cmp %rdx,%r13
3033(2): jbe 0x8(%rip)
3035(6): mov $0x24,0x1(%r14,%r15,1)
303b(4): lea 0x2(%r15),%rdx
303f(3): cmp %rdx,%r13
3042(2): jbe 0x8(%rip)
3044(6): mov $0x27,0x2(%r14,%r15,1)
304a(4): add $0x3,%r15
304e(3): mov %eax,%r8d
3051(3): cmp %r15,%r13
3054(2): jbe 0x7(%rip)
3056(5): mov $0x5c,0x0(%r14,%r15,1)
305b(4): add $0x1,%r15
305f(4): add $0x1,%rbp
3063(5): jmp 0xfffffe8d(%rip)
3068(8): nop 0x0(%rax,%rax,1)
3070(5): cmp $0x0,0xd(%rsp)
3075(6): jnz 0x1ce(%rip)
307b(2): xor %edx,%edx
307d(5): test $0x1,0x78(%rsp)
3082(6): jz 0xffffff19(%rip)
3088(4): add $0x1,%rbp
308c(5): jmp 0xfffffcbc(%rip)
3091(7): nop 0x0(%rax)
3098(5): cmp $0x2,0x8(%rsp)
309d(3): setz %dl
30a0(2): xor %eax,%eax
30a2(5): jmp 0xfffffde6(%rip)
30a7(9): nop 0x0(%rax,%rax,1)
30b0(5): mov $0x7,%edx
30b5(5): mov $0x61,%ebx
30ba(5): jmp 0xfffffeda(%rip)
30bf(1): nop 
30c0(5): cmp $0x2,0x8(%rsp)
30c5(3): setz %dl
30c8(3): test %rbp,%rbp
30cb(6): jnz 0xfffffdb1(%rip)
30d1(5): movzx 0xf(%rsp),%eax
30d6(2): and %dl,%al
30d8(6): jz 0xfffffdb0(%rip)
30de(3): mov %r11,%rbp
30e1(8): mov $0x2,0x8(%rsp)
30e9(5): jmp 0x700(%rip)
30ee(2): nop 
30f0(5): cmp $0x2,0x8(%rsp)
30f5(3): setz %dl
30f8(3): xor %r12d,%r12d
30fb(2): jmp 0xffffffd6(%rip)
30fd(3): nop (%rax)
3100(5): cmp $0x2,0x8(%rsp)
3105(5): mov $0x20,%ebx
310a(3): setz %dl
310d(2): jmp 0xffffffc4(%rip)
310f(1): nop 
3110(5): mov $0xd,%edx
3115(5): mov $0x72,%ebx
311a(5): jmp 0xfffffe68(%rip)
311f(1): nop 
3120(5): mov $0xc,%edx
3125(5): mov $0x66,%ebx
312a(5): jmp 0xfffffe6a(%rip)
312f(1): nop 
3130(5): mov $0xb,%edx
3135(5): mov $0x76,%ebx
313a(5): jmp 0xfffffe5a(%rip)
313f(1): nop 
3140(5): mov $0xa,%edx
3145(5): mov $0x6e,%ebx
314a(5): jmp 0xfffffe38(%rip)
314f(1): nop 
3150(3): xor %r10d,%r10d
3153(5): nop 0x0(%rax,%rax,1)
3158(6): cmp $0x1,0x58(%rsp)
315e(6): jnz 0x3aa(%rip)
3164(5): mov %r11,0x38(%rsp)
3169(5): mov %r8b,0x30(%rsp)
316e(5): mov %r10b,0x28(%rsp)
3173(5): call 0xffffe55d(%rip)
3178(3): mov (%rax),%rcx
317b(3): movzx %bl,%edx
317e(6): movzx 0x28(%rsp),%r10d
3184(6): movzx 0x30(%rsp),%r8d
318a(5): mov 0x38(%rsp),%r11
318f(5): mov $0x1,%edi
3194(4): movzx 0x0(%rcx,%rdx,2),%eax
3198(4): and $0x4000,%ax
319c(4): setnz %r12b
31a0(3): setz %al
31a3(4): and 0xd(%rsp),%al
31a7(2): test %al,%al
31a9(6): jnz 0x998(%rip)
31af(5): cmp $0x2,0x8(%rsp)
31b4(3): setz %dl
31b7(5): jmp 0xfffffcd1(%rip)
31bc(4): nop 0x0(%rax)
31c0(4): movzx (%r9),%ebx
31c4(3): cmp $0x7e,%bl
31c7(2): jnbe 0xffffff89(%rip)
31c9(7): lea 0x2cf8(%rip),%rcx
31d0(3): movzx %bl,%edx
31d3(4): movsxd 0x0(%rcx,%rdx,4),%rax
31d7(3): add %rcx,%rax
31da(2): jmp %rax
31dc(4): nop 0x0(%rax)
31e0(3): xor %r10d,%r10d
31e3(5): cmp $0x0,0xd(%rsp)
31e8(6): jnz 0xfffffdf6(%rip)
31ee(2): nop 
31f0(5): mov $0x5c,%edx
31f5(5): mov $0x5c,%ebx
31fa(5): jmp 0xfffffd9a(%rip)
31ff(1): nop 
3200(5): mov $0xc,%edx
3205(3): xor %r10d,%r10d
3208(5): mov $0x66,%ebx
320d(5): jmp 0xfffffd87(%rip)
3212(6): nop 0x0(%rax,%rax,1)
3218(5): mov $0xa,%edx
321d(3): xor %r10d,%r10d
3220(5): mov $0x6e,%ebx
3225(5): jmp 0xfffffd5d(%rip)
322a(6): nop 0x0(%rax,%rax,1)
3230(5): mov $0x61,%ebx
3235(5): jmp 0xfffffdcb(%rip)
323a(6): nop 0x0(%rax,%rax,1)
3240(3): xor %r10d,%r10d
3243(5): cmp $0x2,0x8(%rsp)
3248(3): setz %dl
324b(5): cmp $0x0,0xf(%rsp)
3250(6): jnz 0xb9a(%rip)
3256(3): mov %r8d,%eax
3259(3): mov %r15,%rcx
325c(3): xor $0x1,%eax
325f(2): and %dl,%al
3261(2): jz 0x2f(%rip)
3263(3): cmp %r15,%r13
3266(2): jbe 0x7(%rip)
3268(5): mov $0x27,0x0(%r14,%r15,1)
326d(4): lea 0x1(%r15),%rcx
3271(3): cmp %rcx,%r13
3274(2): jbe 0x8(%rip)
3276(6): mov $0x24,0x1(%r14,%r15,1)
327c(4): lea 0x2(%r15),%rcx
3280(3): cmp %rcx,%r13
3283(6): jnbe 0x636(%rip)
3289(4): lea 0x3(%r15),%rcx
328d(3): mov %eax,%r8d
3290(3): cmp %rcx,%r13
3293(2): jbe 0x7(%rip)
3295(5): mov $0x5c,0x0(%r14,%rcx,1)
329a(5): cmp $0x2,0x8(%rsp)
329f(4): lea 0x1(%rcx),%r15
32a3(6): jz 0x606(%rip)
32a9(4): lea 0x1(%rbp),%rax
32ad(3): cmp %r11,%rax
32b0(2): jnb 0x1b(%rip)
32b2(5): mov 0x10(%rsp),%rax
32b7(5): movzx 0x1(%rax,%rbp,1),%eax
32bc(4): mov %al,0x28(%rsp)
32c0(3): sub $0x30,%eax
32c3(2): cmp $0x9,%al
32c5(6): jbe 0x834(%rip)
32cb(3): mov %r12d,%eax
32ce(5): mov $0x30,%ebx
32d3(3): xor %r12d,%r12d
32d6(5): jmp 0xfffffbb2(%rip)
32db(5): nop 0x0(%rax,%rax,1)
32e0(5): cmp $0x2,0x8(%rsp)
32e5(3): mov %r10d,%r12d
32e8(3): setz %dl
32eb(3): xor %r10d,%r10d
32ee(2): xor %eax,%eax
32f0(5): jmp 0xfffffb98(%rip)
32f5(3): nop (%rax)
32f8(5): cmp $0x2,0x8(%rsp)
32fd(3): setz %dl
3300(3): xor %r10d,%r10d
3303(5): jmp 0xfffffdc5(%rip)
3308(8): nop 0x0(%rax,%rax,1)
3310(5): cmp $0x2,0x8(%rsp)
3315(3): setz %dl
3318(3): xor %r10d,%r10d
331b(3): xor %r12d,%r12d
331e(5): jmp 0xfffffdb3(%rip)
3323(5): nop 0x0(%rax,%rax,1)
3328(5): cmp $0x2,0x8(%rsp)
332d(3): mov %r10d,%r12d
3330(5): mov $0x20,%ebx
3335(3): setz %dl
3338(3): xor %r10d,%r10d
333b(5): jmp 0xfffffd96(%rip)
3340(5): mov $0xd,%edx
3345(3): xor %r10d,%r10d
3348(5): mov $0x72,%ebx
334d(5): jmp 0xfffffc35(%rip)
3352(6): nop 0x0(%rax,%rax,1)
3358(5): mov $0x76,%ebx
335d(5): jmp 0xfffffca3(%rip)
3362(6): nop 0x0(%rax,%rax,1)
3368(5): mov $0x9,%edx
336d(3): xor %r10d,%r10d
3370(5): mov $0x74,%ebx
3375(5): jmp 0xfffffc0d(%rip)
337a(6): nop 0x0(%rax,%rax,1)
3380(5): mov $0x62,%ebx
3385(5): jmp 0xfffffc7b(%rip)
338a(6): nop 0x0(%rax,%rax,1)
3390(3): xor %r10d,%r10d
3393(5): jmp 0xfffffa9d(%rip)
3398(8): nop 0x0(%rax,%rax,1)
33a0(5): cmp $0x0,0xf(%rsp)
33a5(6): jnz 0x96b(%rip)
33ab(4): add $0x1,%rbp
33af(3): mov %r8d,%eax
33b2(3): xor %r12d,%r12d
33b5(5): mov $0x5c,%ebx
33ba(5): jmp 0xfffffb12(%rip)
33bf(1): nop 
33c0(5): cmp $0x2,0x8(%rsp)
33c5(5): movzx 0xf(%rsp),%ebx
33ca(3): mov %r8d,%r12d
33cd(3): mov %r11,%rbp
33d0(3): setz %dl
33d3(2): mov %ebx,%eax
33d5(3): test %r15,%r15
33d8(3): setz %cl
33db(2): and %edx,%eax
33dd(2): and %cl,%al
33df(6): jnz 0xa67(%rip)
33e5(2): mov %ebx,%eax
33e7(3): xor $0x1,%eax
33ea(2): and %al,%dl
33ec(6): jz 0x970(%rip)
33f2(5): cmp $0x0,0x7c(%rsp)
33f7(6): jz 0x963(%rip)
33fd(5): cmp $0x0,0xe(%rsp)
3402(6): jnz 0x9fb(%rip)
3408(3): test %r13,%r13
340b(3): setz %al
340e(6): cmp $0x0,0x50(%rsp)
3414(3): setnz %dl
3417(2): and %dl,%al
3419(6): jz 0xa23(%rip)
341f(5): mov 0x50(%rsp),%r13
3424(7): lea 0x2822(%rip),%rbx
342b(4): mov $0x27,(%r14)
342f(8): mov $0x2,0x8(%rsp)
3437(6): mov $0x1,%r15d
343d(9): mov $0x1,0x18(%rsp)
3446(5): mov $0x0,0xf(%rsp)
344b(5): mov %rbx,0x48(%rsp)
3450(4): mov %al,0x7c(%rsp)
3454(5): jmp 0xfffff8df(%rip)
3459(7): nop 0x0(%rax)
3460(5): cmp $0x0,0xf(%rsp)
3465(6): jnz 0x8ab(%rip)
346b(3): test %r13,%r13
346e(6): jz 0x402(%rip)
3474(2): xor %edx,%edx
3476(6): cmp $0x0,0x50(%rsp)
347c(6): jnz 0x3f4(%rip)
3482(5): mov %r13,0x50(%rsp)
3487(4): add $0x3,%r15
348b(2): xor %eax,%eax
348d(5): mov %r12b,0x7c(%rsp)
3492(3): xor %r8d,%r8d
3495(3): mov %rdx,%r13
3498(5): mov $0x27,%ebx
349d(5): jmp 0xfffffa1c(%rip)
34a2(6): nop 0x0(%rax,%rax,1)
34a8(5): test $0x4,0x78(%rsp)
34ad(2): jz 0x23(%rip)
34af(4): lea 0x2(%rbp),%rcx
34b3(3): cmp %r11,%rcx
34b6(2): jnb 0x1a(%rip)
34b8(5): mov 0x10(%rsp),%rax
34bd(5): cmp $0x3f,0x1(%rax,%rbp,1)
34c2(6): jz 0x790(%rip)
34c8(8): nop 0x0(%rax,%rax,1)
34d0(2): xor %edx,%edx
34d2(3): xor %r12d,%r12d
34d5(2): xor %eax,%eax
34d7(5): mov $0x3f,%ebx
34dc(5): jmp 0xfffff9ac(%rip)
34e1(7): nop 0x0(%rax)
34e8(5): cmp $0x0,0xf(%rsp)
34ed(6): jnz 0x823(%rip)
34f3(3): xor %r12d,%r12d
34f6(2): xor %eax,%eax
34f8(5): mov $0x3f,%ebx
34fd(5): jmp 0xfffff9bc(%rip)
3502(6): nop 0x0(%rax,%rax,1)
3508(8): lea 0xa0(%rsp),%rax
3510(4): cmp $0xffffffff,%r11
3514(c): mov $0x0,0xa0(%rsp)
3520(5): mov %rax,0x28(%rsp)
3525(2): jnz 0x2f(%rip)
3527(5): mov 0x10(%rsp),%rdi
352c(5): mov %r8b,0x40(%rsp)
3531(5): mov %r10b,0x38(%rsp)
3536(5): mov %r9,0x30(%rsp)
353b(5): call 0xffffdf75(%rip)
3540(6): movzx 0x40(%rsp),%r8d
3546(6): movzx 0x38(%rsp),%r10d
354c(3): mov %rax,%r11
354f(5): mov 0x30(%rsp),%r9
3554(8): lea 0x9c(%rsp),%rax
355c(2): xor %ecx,%ecx
355e(4): mov %bl,0x7e(%rsp)
3562(5): mov %r8b,0x7d(%rsp)
3567(3): mov %rcx,%rbx
356a(8): mov %r9,0x88(%rsp)
3572(5): mov %rax,0x38(%rsp)
3577(5): mov %r10b,0x7f(%rsp)
357c(8): mov %r15,0x80(%rsp)
3584(5): mov %r14,0x40(%rsp)
3589(5): mov %r13,0x70(%rsp)
358e(5): mov %r11,0x30(%rsp)
3593(5): mov 0x10(%rsp),%rax
3598(5): lea 0x0(%rbp,%rbx,1),%r14
359d(5): mov 0x30(%rsp),%rdx
35a2(5): mov 0x28(%rsp),%rcx
35a7(5): mov 0x38(%rsp),%rdi
35ac(4): lea 0x0(%rax,%r14,1),%r13
35b0(3): sub %r14,%rdx
35b3(3): mov %r13,%rsi
35b6(5): call 0x203a(%rip)
35bb(3): test %rax,%rax
35be(3): mov %rax,%r15
35c1(2): jz 0x50(%rip)
35c3(4): cmp $0xffffffff,%rax
35c7(6): jz 0x61e(%rip)
35cd(4): cmp $0xfffffffe,%rax
35d1(6): jz 0x5a0(%rip)
35d7(5): cmp $0x2,0x8(%rsp)
35dc(3): setz %al
35df(4): and 0xf(%rsp),%al
35e3(6): jnz 0x19d(%rip)
35e9(7): mov 0x9c(%rsp),%edi
35f0(5): call 0xffffe0d0(%rip)
35f5(5): mov 0x28(%rsp),%rdi
35fa(2): test %eax,%eax
35fc(5): mov $0x0,%eax
3601(4): cmove %eax,%r12d
3605(3): add %r15,%rbx
3608(5): call 0xffffe0a8(%rip)
360d(2): test %eax,%eax
360f(2): jz 0xffffff84(%rip)
3611(3): mov %r12d,%edx
3614(3): mov %rbx,%rdi
3617(6): movzx 0x7d(%rsp),%r8d
361d(3): xor $0x1,%edx
3620(5): movzx 0x7e(%rsp),%ebx
3625(6): movzx 0x7f(%rsp),%r10d
362b(4): and 0xd(%rsp),%dl
362f(8): mov 0x80(%rsp),%r15
3637(5): mov 0x40(%rsp),%r14
363c(5): mov 0x70(%rsp),%r13
3641(5): mov 0x30(%rsp),%r11
3646(4): cmp $0x1,%rdi
364a(6): jbe 0x601(%rip)
3650(3): mov %rdi,%rcx
3653(2): xor %esi,%esi
3655(6): movzx 0xf(%rsp),%r9d
365b(3): add %rbp,%rcx
365e(5): mov 0x10(%rsp),%rdi
3663(5): jmp 0xbb(%rip)
3668(8): nop 0x0(%rax,%rax,1)
3670(5): cmp $0x2,0x8(%rsp)
3675(3): setz %al
3678(3): test %r9b,%r9b
367b(6): jnz 0x4b5(%rip)
3681(3): mov %r8d,%esi
3684(3): xor $0x1,%esi
3687(3): and %sil,%al
368a(2): jz 0x31(%rip)
368c(3): cmp %r15,%r13
368f(2): jbe 0x7(%rip)
3691(5): mov $0x27,0x0(%r14,%r15,1)
3696(4): lea 0x1(%r15),%rsi
369a(3): cmp %rsi,%r13
369d(2): jbe 0x8(%rip)
369f(6): mov $0x24,0x1(%r14,%r15,1)
36a5(4): lea 0x2(%r15),%rsi
36a9(3): cmp %rsi,%r13
36ac(2): jbe 0x8(%rip)
36ae(6): mov $0x27,0x2(%r14,%r15,1)
36b4(4): add $0x3,%r15
36b8(3): mov %eax,%r8d
36bb(3): cmp %r15,%r13
36be(2): jbe 0x7(%rip)
36c0(5): mov $0x5c,0x0(%r14,%r15,1)
36c5(4): lea 0x1(%r15),%rax
36c9(3): cmp %rax,%r13
36cc(2): jbe 0xf(%rip)
36ce(2): mov %ebx,%eax
36d0(3): shr $0x6,%al
36d3(3): add $0x30,%eax
36d6(5): mov %al,0x1(%r14,%r15,1)
36db(4): lea 0x2(%r15),%rax
36df(3): cmp %rax,%r13
36e2(2): jbe 0x12(%rip)
36e4(2): mov %ebx,%eax
36e6(3): shr $0x3,%al
36e9(3): and $0x7,%eax
36ec(3): add $0x30,%eax
36ef(5): mov %al,0x2(%r14,%r15,1)
36f4(3): and $0x7,%ebx
36f7(4): add $0x1,%rbp
36fb(4): add $0x3,%r15
36ff(3): add $0x30,%ebx
3702(3): cmp %rcx,%rbp
3705(6): jnb 0xfffff7eb(%rip)
370b(2): mov %edx,%esi
370d(3): cmp %r15,%r13
3710(2): jbe 0x6(%rip)
3712(4): mov %bl,0x0(%r14,%r15,1)
3716(4): movzx 0x0(%rdi,%rbp,1),%ebx
371a(4): add $0x1,%r15
371e(2): test %dl,%dl
3720(6): jnz 0xffffff50(%rip)
3726(2): mov %esi,%eax
3728(3): xor $0x1,%eax
372b(3): and %r8d,%eax
372e(3): test %r10b,%r10b
3731(2): jz 0x10(%rip)
3733(3): cmp %r15,%r13
3736(2): jbe 0x7(%rip)
3738(5): mov $0x5c,0x0(%r14,%r15,1)
373d(4): add $0x1,%r15
3741(4): add $0x1,%rbp
3745(3): cmp %rcx,%rbp
3748(6): jnb 0xfffff784(%rip)
374e(2): test %al,%al
3750(6): jz 0x3fe(%rip)
3756(3): cmp %r15,%r13
3759(2): jbe 0x7(%rip)
375b(5): mov $0x27,0x0(%r14,%r15,1)
3760(4): lea 0x1(%r15),%rax
3764(3): cmp %rax,%r13
3767(2): jbe 0x8(%rip)
3769(6): mov $0x27,0x1(%r14,%r15,1)
376f(4): add $0x2,%r15
3773(3): xor %r10d,%r10d
3776(3): xor %r8d,%r8d
3779(2): jmp 0xffffff94(%rip)
377b(5): nop 0x0(%rax,%rax,1)
3780(4): cmp $0x1,%r15
3784(6): jz 0xfffffe65(%rip)
378a(5): mov 0x10(%rsp),%rdi
378f(4): lea 0x0(%rdi,%r15,1),%rcx
3793(5): lea 0x1(%rdi,%r14,1),%rdx
3798(4): lea 0x0(%rcx,%r14,1),%r8
379c(2): jmp 0x11(%rip)
379e(2): nop 
37a0(4): add $0x1,%rdx
37a4(3): cmp %rdx,%r8
37a7(6): jz 0xfffffe42(%rip)
37ad(3): movzx (%rdx),%ecx
37b0(3): sub $0x5b,%ecx
37b3(3): cmp $0x21,%cl
37b6(2): jnbe 0xffffffea(%rip)
37b8(5): mov $0x1,%esi
37bd(3): shl/sal %cl,%rsi
37c0(3): mov %rsi,%rcx
37c3(a): mov $0x8589934635,%rsi
37cd(3): test %rsi,%rcx
37d0(2): jz 0xffffffd0(%rip)
37d2(5): mov 0x40(%rsp),%r14
37d7(5): mov 0x70(%rsp),%r13
37dc(5): mov 0x30(%rsp),%rbp
37e1(8): mov $0x2,0x8(%rsp)
37e9(5): cmp $0x0,0xd(%rsp)
37ee(2): jz 0x12(%rip)
37f0(2): test %al,%al
37f2(5): mov $0x4,%eax
37f7(5): cmove 0x8(%rsp),%eax
37fc(4): mov %eax,0x8(%rsp)
3800(4): sub $0x8,%rsp
3804(3): mov %rbp,%rcx
3807(3): mov %r13,%rsi
380a(4): push 0x68(%rsp)
380e(4): push 0x78(%rsp)
3812(3): mov %r14,%rdi
3815(2): push $0x0
3817(8): mov 0x98(%rsp),%r9d
381f(5): mov 0x28(%rsp),%r8d
3824(5): mov 0x30(%rsp),%rdx
3829(4): and $0xfd,%r9d
382d(5): call 0xfffff433(%rip)
3832(4): add $0x20,%rsp
3836(3): mov %rax,%r15
3839(8): mov 0xa8(%rsp),%rbx
3841(9): xor $0x28,%rbx
384a(3): mov %r15,%rax
384d(6): jnz 0x606(%rip)
3853(7): add $0xb8,%rsp
385a(1): pop %rbx
385b(1): pop %rbp
385c(2): pop %r12
385e(2): pop %r13
3860(2): pop %r14
3862(2): pop %r15
3864(1): ret near (%rsp)
3865(3): nop (%rax)
3868(3): mov %r11,%rbp
386b(5): jmp 0xffffff7e(%rip)
3870(3): cmp %r15,%r13
3873(2): jbe 0x7(%rip)
3875(5): mov $0x27,0x0(%r14,%r15,1)
387a(4): lea 0x1(%r15),%rax
387e(3): cmp %rax,%r13
3881(2): jbe 0x8(%rip)
3883(6): mov $0x5c,0x1(%r14,%r15,1)
3889(4): lea 0x2(%r15),%rax
388d(3): cmp %rax,%r13
3890(6): jbe 0x5f2(%rip)
3896(3): mov %r13,%rdx
3899(6): mov $0x27,0x2(%r14,%r15,1)
389f(5): mov 0x50(%rsp),%r13
38a4(5): jmp 0xfffffbde(%rip)
38a9(3): mov %r12d,%eax
38ac(5): mov $0x30,%ebx
38b1(3): xor %r12d,%r12d
38b4(5): jmp 0xfffff605(%rip)
38b9(6): mov $0x27,0x2(%r14,%r15,1)
38bf(5): jmp 0xfffff9ca(%rip)
38c4(2): test %ebx,%ebx
38c6(6): jnz 0xfffff42d(%rip)
38cc(5): mov $0x1,0xd(%rsp)
38d1(3): test %r13,%r13
38d4(6): jnz 0x596(%rip)
38da(7): lea 0x236c(%rip),%rax
38e1(9): mov $0x0,0x50(%rsp)
38ea(5): mov $0x1,0xe(%rsp)
38ef(5): mov $0x0,0x7c(%rsp)
38f4(3): xor %r12d,%r12d
38f7(5): mov $0x0,0xf(%rsp)
38fc(9): mov $0x1,0x18(%rsp)
3905(5): mov %rax,0x48(%rsp)
390a(6): mov $0x1,%r15d
3910(8): mov $0x2,0x8(%rsp)
3918(5): jmp 0xfffff41b(%rip)
391d(3): nop (%rax)
3920(2): test %ebx,%ebx
3922(6): jnz 0x3fb(%rip)
3928(3): test %r13,%r13
392b(6): jz 0x22b(%rip)
3931(4): mov $0x22,(%r14)
3935(5): mov $0x1,0xe(%rsp)
393a(3): xor %r12d,%r12d
393d(5): mov $0x0,0x7c(%rsp)
3942(9): mov $0x0,0x50(%rsp)
394b(7): lea 0x22f9(%rip),%rax
3952(5): mov $0x0,0xf(%rsp)
3957(5): mov $0x1,0xd(%rsp)
395c(9): mov $0x1,0x18(%rsp)
3965(6): mov $0x1,%r15d
396b(5): mov %rax,0x48(%rsp)
3970(5): jmp 0xfffff3c3(%rip)
3975(7): lea 0x22cf(%rip),%rax
397c(5): mov $0x1,0xe(%rsp)
3981(5): mov $0x0,0x7c(%rsp)
3986(3): xor %r12d,%r12d
3989(9): mov $0x0,0x50(%rsp)
3992(5): mov $0x1,0xf(%rsp)
3997(5): mov $0x1,0xd(%rsp)
399c(9): mov $0x1,0x18(%rsp)
39a5(3): xor %r15d,%r15d
39a8(5): mov %rax,0x48(%rsp)
39ad(8): mov $0x5,0x8(%rsp)
39b5(5): jmp 0xfffff37e(%rip)
39ba(5): mov $0x1,0xe(%rsp)
39bf(5): mov $0x0,0x7c(%rsp)
39c4(3): xor %r12d,%r12d
39c7(9): mov $0x0,0x50(%rsp)
39d0(5): mov $0x0,0xf(%rsp)
39d5(3): xor %r15d,%r15d
39d8(5): mov $0x1,0xd(%rsp)
39dd(9): mov $0x0,0x18(%rsp)
39e6(9): mov $0x0,0x48(%rsp)
39ef(5): jmp 0xfffff344(%rip)
39f4(5): cmp $0xa,0x8(%rsp)
39f9(2): jz 0x58(%rip)
39fb(7): lea 0x224d(%rip),%rsi
3a02(2): xor %edi,%edi
3a04(5): mov $0x5,%edx
3a09(5): call 0xffffda87(%rip)
3a0e(3): mov %rax,%rcx
3a11(5): mov %rax,0x68(%rsp)
3a16(7): lea 0x2232(%rip),%rax
3a1d(3): cmp %rax,%rcx
3a20(6): jz 0x39e(%rip)
3a26(7): lea 0x2220(%rip),%rsi
3a2d(2): xor %edi,%edi
3a2f(5): mov $0x5,%edx
3a34(5): call 0xffffda5c(%rip)
3a39(3): mov %rax,%rcx
3a3c(5): mov %rax,0x60(%rsp)
3a41(7): lea 0x2205(%rip),%rax
3a48(3): cmp %rax,%rcx
3a4b(6): jz 0x389(%rip)
3a51(3): xor %r15d,%r15d
3a54(2): test %ebx,%ebx
3a56(6): jz 0x1c7(%rip)
3a5c(2): test %ebx,%ebx
3a5e(5): mov 0x60(%rsp),%rbx
3a63(5): setnz 0xf(%rsp)
3a68(3): xor %r12d,%r12d
3a6b(3): mov %rbx,%rdi
3a6e(5): call 0xffffda42(%rip)
3a73(5): mov %rbx,0x48(%rsp)
3a78(5): mov %rax,0x18(%rsp)
3a7d(5): mov $0x1,0xe(%rsp)
3a82(5): mov $0x0,0x7c(%rsp)
3a87(9): mov $0x0,0x50(%rsp)
3a90(5): mov $0x1,0xd(%rsp)
3a95(5): jmp 0xfffff29e(%rip)
3a9a(5): mov $0x1,0xe(%rsp)
3a9f(5): mov $0x0,0x7c(%rsp)
3aa4(3): xor %r12d,%r12d
3aa7(9): mov $0x0,0x50(%rsp)
3ab0(5): mov $0x0,0xf(%rsp)
3ab5(3): xor %r15d,%r15d
3ab8(5): mov $0x0,0xd(%rsp)
3abd(9): mov $0x0,0x18(%rsp)
3ac6(9): mov $0x0,0x48(%rsp)
3acf(5): jmp 0xfffff264(%rip)
3ad4(5): mov $0x1,0xe(%rsp)
3ad9(5): mov $0x0,0x7c(%rsp)
3ade(3): xor %r12d,%r12d
3ae1(9): mov $0x0,0x50(%rsp)
3aea(5): mov $0x1,0xf(%rsp)
3aef(5): mov $0x1,0xd(%rsp)
3af4(5): jmp 0xfffff21f(%rip)
3af9(3): cmp %r15,%r13
3afc(2): jbe 0x7(%rip)
3afe(5): mov $0x30,0x0(%r14,%r15,1)
3b03(4): lea 0x2(%rcx),%rax
3b07(3): cmp %rax,%r13
3b0a(2): jbe 0x8(%rip)
3b0c(6): mov $0x30,0x2(%r14,%rcx,1)
3b12(3): mov %r12d,%eax
3b15(4): lea 0x3(%rcx),%r15
3b19(3): xor %r12d,%r12d
3b1c(5): mov $0x30,%ebx
3b21(5): jmp 0xfffff367(%rip)
3b26(a): nop 0x0(%rax,%rax,1)
3b30(5): movzx 0xf(%rsp),%ebx
3b35(3): mov %r11,%rbp
3b38(4): mov %bl,0xd(%rsp)
3b3c(5): jmp 0xfffffcad(%rip)
3b41(5): movzx 0xd(%rsp),%edx
3b46(3): xor %r12d,%r12d
3b49(5): jmp 0xfffffb07(%rip)
3b4e(3): xor %r10d,%r10d
3b51(5): jmp 0xfffffbbc(%rip)
3b56(9): mov $0x0,0x50(%rsp)
3b5f(5): mov $0x1,0xe(%rsp)
3b64(3): xor %r12d,%r12d
3b67(5): mov $0x0,0x7c(%rsp)
3b6c(5): jmp 0xfffffddf(%rip)
3b71(5): mov 0x30(%rsp),%r11
3b76(3): mov %r14,%rsi
3b79(3): mov %r13,%rcx
3b7c(3): mov %rbx,%rax
3b7f(3): mov %rbx,%rdi
3b82(6): movzx 0x7d(%rsp),%r8d
3b88(5): movzx 0x7e(%rsp),%ebx
3b8d(8): mov 0x88(%rsp),%r9
3b95(3): cmp %r11,%rsi
3b98(6): movzx 0x7f(%rsp),%r10d
3b9e(8): mov 0x80(%rsp),%r15
3ba6(5): mov 0x40(%rsp),%r14
3bab(5): mov 0x70(%rsp),%r13
3bb0(2): jnb 0x28(%rip)
3bb2(3): cmp $0x0,(%rcx)
3bb5(2): jnz 0x12(%rip)
3bb7(2): jmp 0x21(%rip)
3bb9(7): nop 0x0(%rax)
3bc0(5): cmp $0x0,0x0(%r9,%rax,1)
3bc5(2): jz 0x10(%rip)
3bc7(4): add $0x1,%rax
3bcb(5): lea 0x0(%rbp,%rax,1),%rdx
3bd0(3): cmp %rdx,%r11
3bd3(2): jnbe 0xffffffed(%rip)
3bd5(3): mov %rax,%rdi
3bd8(5): movzx 0xd(%rsp),%edx
3bdd(3): xor %r12d,%r12d
3be0(5): jmp 0xfffffa66(%rip)
3be5(3): mov %rbx,%rdi
3be8(6): movzx 0x7d(%rsp),%r8d
3bee(5): movzx 0x7e(%rsp),%ebx
3bf3(6): movzx 0x7f(%rsp),%r10d
3bf9(8): mov 0x80(%rsp),%r15
3c01(3): xor %r12d,%r12d
3c04(5): mov 0x40(%rsp),%r14
3c09(5): mov 0x70(%rsp),%r13
3c0e(5): mov 0x30(%rsp),%r11
3c13(5): movzx 0xd(%rsp),%edx
3c18(5): jmp 0xfffffa2e(%rip)
3c1d(5): mov 0x68(%rsp),%rdx
3c22(3): movzx (%rdx),%eax
3c25(2): test %al,%al
3c27(6): jz 0xfffffe35(%rip)
3c2d(3): nop (%rax)
3c30(3): cmp %r15,%r13
3c33(2): jbe 0x6(%rip)
3c35(4): mov %al,0x0(%r14,%r15,1)
3c39(4): add $0x1,%r15
3c3d(5): movzx 0x0(%rdx,%r15,1),%eax
3c42(2): test %al,%al
3c44(2): jnz 0xffffffec(%rip)
3c46(5): jmp 0xfffffe16(%rip)
3c4b(2): mov %edx,%eax
3c4d(5): jmp 0xfffff55a(%rip)
3c52(4): movzx 0x0(%rax,%rcx,1),%ebx
3c56(3): cmp $0x3e,%bl
3c59(6): jnbe 0xfffff877(%rip)
3c5f(a): mov $0x8070630310989004800,%rax
3c69(4): bt %rbx,%rax
3c6d(6): jnb 0xfffff863(%rip)
3c73(5): cmp $0x0,0xf(%rsp)
3c78(6): jnz 0x1ea(%rip)
3c7e(3): cmp %r15,%r13
3c81(2): jbe 0x7(%rip)
3c83(5): mov $0x3f,0x0(%r14,%r15,1)
3c88(4): lea 0x1(%r15),%rax
3c8c(3): cmp %rax,%r13
3c8f(2): jbe 0x8(%rip)
3c91(6): mov $0x22,0x1(%r14,%r15,1)
3c97(4): lea 0x2(%r15),%rax
3c9b(3): cmp %rax,%r13
3c9e(2): jbe 0x8(%rip)
3ca0(6): mov $0x22,0x2(%r14,%r15,1)
3ca6(4): lea 0x3(%r15),%rax
3caa(3): cmp %rax,%r13
3cad(2): jbe 0x8(%rip)
3caf(6): mov $0x3f,0x3(%r14,%r15,1)
3cb5(4): add $0x4,%r15
3cb9(2): xor %edx,%edx
3cbb(3): xor %r12d,%r12d
3cbe(2): xor %eax,%eax
3cc0(3): mov %rcx,%rbp
3cc3(5): jmp 0xfffff1c5(%rip)
3cc8(2): test %ebx,%ebx
3cca(6): jz 0x18e(%rip)
3cd0(7): lea 0x1f76(%rip),%rax
3cd7(5): mov $0x1,0xe(%rsp)
3cdc(5): mov $0x0,0x7c(%rsp)
3ce1(3): xor %r12d,%r12d
3ce4(9): mov $0x0,0x50(%rsp)
3ced(5): mov $0x1,0xf(%rsp)
3cf2(5): mov $0x0,0xd(%rsp)
3cf7(9): mov $0x1,0x18(%rsp)
3d00(3): xor %r15d,%r15d
3d03(5): mov %rax,0x48(%rsp)
3d08(5): jmp 0xfffff02b(%rip)
3d0d(3): nop (%rax)
3d10(3): mov %r11,%rbp
3d13(5): movzx 0xf(%rsp),%eax
3d18(5): jmp 0xfffffad1(%rip)
3d1d(7): lea 0x1f27(%rip),%rax
3d24(5): mov $0x1,0xe(%rsp)
3d29(5): mov $0x0,0x7c(%rsp)
3d2e(3): xor %r12d,%r12d
3d31(9): mov $0x0,0x50(%rsp)
3d3a(5): mov $0x1,0xf(%rsp)
3d3f(5): mov $0x1,0xd(%rsp)
3d44(9): mov $0x1,0x18(%rsp)
3d4d(3): xor %r15d,%r15d
3d50(5): mov %rax,0x48(%rsp)
3d55(5): jmp 0xffffefde(%rip)
3d5a(2): mov %edx,%eax
3d5c(5): mov 0x48(%rsp),%rbx
3d61(3): test %rbx,%rbx
3d64(2): jz 0x2e(%rip)
3d66(2): test %al,%al
3d68(2): jz 0x2a(%rip)
3d6a(3): movzx (%rbx),%ecx
3d6d(3): mov %rbx,%rax
3d70(2): test %cl,%cl
3d72(2): jz 0x20(%rip)
3d74(3): mov %r15,%rdx
3d77(3): sub %r15,%rax
3d7a(3): cmp %rdx,%r13
3d7d(2): jbe 0x6(%rip)
3d7f(4): mov %cl,0x0(%r14,%rdx,1)
3d83(4): add $0x1,%rdx
3d87(4): movzx 0x0(%rax,%rdx,1),%ecx
3d8b(2): test %cl,%cl
3d8d(2): jnz 0xffffffed(%rip)
3d8f(3): mov %rdx,%r15
3d92(3): cmp %r15,%r13
3d95(6): jbe 0xfffffaa4(%rip)
3d9b(5): mov $0x0,0x0(%r14,%r15,1)
3da0(5): jmp 0xfffffa99(%rip)
3da5(5): cmp $0x2,0x8(%rsp)
3daa(5): movzx 0xf(%rsp),%ebx
3daf(3): mov %r11,%rbp
3db2(3): setz %al
3db5(4): mov %bl,0xd(%rsp)
3db9(5): jmp 0xfffffa30(%rip)
3dbe(4): mov 0x8(%rsp),%esi
3dc2(3): mov %rcx,%rdi
3dc5(5): call 0xffffedab(%rip)
3dca(5): mov %rax,0x68(%rsp)
3dcf(5): jmp 0xfffffc57(%rip)
3dd4(4): mov 0x8(%rsp),%esi
3dd8(3): mov %rcx,%rdi
3ddb(5): call 0xffffed95(%rip)
3de0(5): mov %rax,0x60(%rsp)
3de5(5): jmp 0xfffffc6c(%rip)
3dea(5): movzx 0xf(%rsp),%ebx
3def(3): mov %r11,%rbp
3df2(2): mov %edx,%eax
3df4(4): mov %bl,0xd(%rsp)
3df8(5): jmp 0xfffff9f1(%rip)
3dfd(4): sub $0x8,%rsp
3e01(6): mov $0x5,%r8d
3e07(3): mov %r11,%rcx
3e0a(4): push 0x68(%rsp)
3e0e(4): push 0x78(%rsp)
3e12(3): mov %r14,%rdi
3e15(4): push 0x38(%rsp)
3e19(8): mov 0x98(%rsp),%r9d
3e21(5): mov 0x30(%rsp),%rdx
3e26(5): mov 0x70(%rsp),%rsi
3e2b(5): call 0xffffee35(%rip)
3e30(4): add $0x20,%rsp
3e34(3): mov %rax,%r15
3e37(5): jmp 0xfffffa02(%rip)
3e3c(5): movzx 0x7c(%rsp),%eax
3e41(5): jmp 0xffffff1b(%rip)
3e46(8): mov $0x2,0x8(%rsp)
3e4e(5): jmp 0xfffff99b(%rip)
3e53(5): call 0xffffd66d(%rip)
3e58(5): mov $0x0,0xd(%rsp)
3e5d(5): jmp 0xfffffa74(%rip)
3e62(3): mov %r11,%rbp
3e65(5): jmp 0xfffff99b(%rip)
3e6a(5): mov $0x1,0xe(%rsp)
3e6f(2): xor %eax,%eax
3e71(3): xor %r12d,%r12d
3e74(9): mov $0x0,0x50(%rsp)
3e7d(5): jmp 0xfffff5a7(%rip)
3e82(3): mov %r13,%rdx
3e85(5): mov 0x50(%rsp),%r13
3e8a(5): jmp 0xfffff5f8(%rip)
3e8f(5): call 0xffffd571(%rip)

"quotearg_n_options" :
3ea0(2): push %r15
3ea2(2): push %r14
3ea4(3): movsxd %edi,%r15
3ea7(2): push %r13
3ea9(2): push %r12
3eab(3): mov %rdx,%r14
3eae(1): push %rbp
3eaf(1): push %rbx
3eb0(3): mov %rcx,%rbp
3eb3(4): sub $0x28,%rsp
3eb7(5): mov %rsi,0x8(%rsp)
3ebc(5): call 0xffffd554(%rip)
3ec1(3): mov %rax,%r13
3ec4(2): mov (%rax),%eax
3ec6(3): test %r15d,%r15d
3ec9(7): mov 0x204190(%rip),%rbx
3ed0(4): mov %eax,0x18(%rsp)
3ed4(6): js 0x16d(%rip)
3eda(7): cmp %r15d,0x204177(%rip)
3ee1(2): jnle 0x64(%rip)
3ee3(7): cmp $0x7fffffff,%r15d
3eea(6): jz 0x15c(%rip)
3ef0(4): lea 0x1(%r15),%r12d
3ef4(7): lea 0x204175(%rip),%rax
3efb(3): movsxd %r12d,%rsi
3efe(4): shl/sal $0x4,%rsi
3f02(3): cmp %rax,%rbx
3f05(6): jz 0x11b(%rip)
3f0b(3): mov %rbx,%rdi
3f0e(5): call 0x1392(%rip)
3f13(3): mov %rax,%rbx
3f16(7): mov %rax,0x204143(%rip)
3f1d(7): movsxd 0x204134(%rip),%rdi
3f24(3): mov %r12d,%edx
3f27(2): xor %esi,%esi
3f29(2): sub %edi,%edx
3f2b(4): shl/sal $0x4,%rdi
3f2f(3): movsxd %edx,%rdx
3f32(3): add %rbx,%rdi
3f35(4): shl/sal $0x4,%rdx
3f39(5): call 0xffffd5f7(%rip)
3f3e(7): mov %r12d,0x204113(%rip)
3f45(3): mov 0x4(%rbp),%eax
3f48(4): shl/sal $0x4,%r15
3f4c(4): sub $0x8,%rsp
3f50(3): add %r15,%rbx
3f53(4): lea 0x8(%rbp),%r15
3f57(4): mov 0x0(%rbp),%r8d
3f5b(3): mov (%rbx),%r11
3f5e(4): mov 0x8(%rbx),%r12
3f62(3): mov %r14,%rcx
3f65(3): or $0x1,%eax
3f68(4): mov %eax,0x24(%rsp)
3f6c(3): push 0x30(%rbp)
3f6f(3): mov %eax,%r9d
3f72(3): push 0x28(%rbp)
3f75(2): push %r15
3f77(3): mov %r11,%rsi
3f7a(5): mov 0x28(%rsp),%rdx
3f7f(3): mov %r12,%rdi
3f82(5): mov %r11,0x30(%rsp)
3f87(5): call 0xffffecd9(%rip)
3f8c(4): add $0x20,%rsp
3f90(5): mov 0x10(%rsp),%r11
3f95(3): cmp %rax,%r11
3f98(2): jnbe 0x69(%rip)
3f9a(4): lea 0x1(%rax),%rsi
3f9e(7): lea 0x20419b(%rip),%rax
3fa5(3): cmp %rax,%r12
3fa8(3): mov %rsi,(%rbx)
3fab(2): jz 0x14(%rip)
3fad(3): mov %r12,%rdi
3fb0(5): mov %rsi,0x10(%rsp)
3fb5(5): call 0xffffd43b(%rip)
3fba(5): mov 0x10(%rsp),%rsi
3fbf(3): mov %rsi,%rdi
3fc2(5): mov %rsi,0x10(%rsp)
3fc7(5): call 0x1279(%rip)
3fcc(4): sub $0x8,%rsp
3fd0(4): mov %rax,0x8(%rbx)
3fd4(4): mov 0x0(%rbp),%r8d
3fd8(3): push 0x30(%rbp)
3fdb(3): push 0x28(%rbp)
3fde(3): mov %r14,%rcx
3fe1(2): push %r15
3fe3(5): mov 0x3c(%rsp),%r9d
3fe8(3): mov %rax,%rdi
3feb(5): mov 0x28(%rsp),%rdx
3ff0(5): mov 0x30(%rsp),%rsi
3ff5(3): mov %rax,%r12
3ff8(5): call 0xffffec68(%rip)
3ffd(4): add $0x20,%rsp
4001(4): mov 0x18(%rsp),%eax
4005(4): mov %eax,0x0(%r13)
4009(4): add $0x28,%rsp
400d(3): mov %r12,%rax
4010(1): pop %rbx
4011(1): pop %rbp
4012(2): pop %r12
4014(2): pop %r13
4016(2): pop %r14
4018(2): pop %r15
401a(1): ret near (%rsp)
401b(5): nop 0x0(%rax,%rax,1)
4020(2): xor %edi,%edi
4022(5): call 0x127e(%rip)
4027(8): movdqa 0x204041(%rip),%xmm0
402f(3): mov %rax,%rbx
4032(7): mov %rax,0x204027(%rip)
4039(3): movups %xmm0,(%rax)
403c(5): jmp 0xfffffee1(%rip)
4041(5): call 0xffffd3bf(%rip)
4046(5): call 0x144a(%rip)

"clone_quoting_options" :
4050(2): push %r12
4052(1): push %rbp
4053(1): push %rbx
4054(3): mov %rdi,%rbx
4057(5): call 0xffffd3b9(%rip)
405c(3): mov (%rax),%r12d
405f(3): mov %rax,%rbp
4062(7): lea 0x2041d7(%rip),%rax
4069(3): test %rbx,%rbx
406c(5): mov $0x38,%esi
4071(4): cmove %rax,%rbx
4075(3): mov %rbx,%rdi
4078(5): call 0x13c8(%rip)
407d(4): mov %r12d,0x0(%rbp)
4081(1): pop %rbx
4082(1): pop %rbp
4083(2): pop %r12
4085(1): ret near (%rsp)

"get_quoting_style" :
4090(7): lea 0x2041a9(%rip),%rax
4097(3): test %rdi,%rdi
409a(4): cmove %rax,%rdi
409e(2): mov (%rdi),%eax
40a0(1): ret near (%rsp)

"set_quoting_style" :
40b0(7): lea 0x204189(%rip),%rax
40b7(3): test %rdi,%rdi
40ba(4): cmove %rax,%rdi
40be(2): mov %esi,(%rdi)
40c0(1): ret near (%rsp)

"set_char_quoting" :
40d0(7): lea 0x204169(%rip),%rax
40d7(3): test %rdi,%rdi
40da(2): mov %esi,%ecx
40dc(4): cmove %rax,%rdi
40e0(2): mov %esi,%eax
40e2(3): and $0x1f,%ecx
40e5(3): shr $0x5,%al
40e8(3): movzx %al,%eax
40eb(5): lea 0x8(%rdi,%rax,4),%rdi
40f0(2): mov (%rdi),%esi
40f2(2): mov %esi,%eax
40f4(2): shr %cl,%eax
40f6(2): xor %eax,%edx
40f8(3): and $0x1,%eax
40fb(3): and $0x1,%edx
40fe(2): shl/sal %cl,%edx
4100(2): xor %esi,%edx
4102(2): mov %edx,(%rdi)
4104(1): ret near (%rsp)

"set_quoting_flags" :
4110(7): lea 0x204129(%rip),%rax
4117(3): test %rdi,%rdi
411a(4): cmove %rax,%rdi
411e(3): mov 0x4(%rdi),%eax
4121(3): mov %esi,0x4(%rdi)
4124(1): ret near (%rsp)

"set_custom_quoting" :
4130(7): lea 0x204109(%rip),%rax
4137(3): test %rdi,%rdi
413a(4): cmove %rax,%rdi
413e(3): test %rsi,%rsi
4141(6): mov $0xa,(%rdi)
4147(2): jz 0x10(%rip)
4149(3): test %rdx,%rdx
414c(2): jz 0xb(%rip)
414e(4): mov %rsi,0x28(%rdi)
4152(4): mov %rdx,0x30(%rdi)
4156(1): ret near (%rsp)
4157(4): sub $0x8,%rsp
415b(5): call 0xffffd2a5(%rip)

"quotearg_buffer" :
4160(2): push %r15
4162(2): push %r14
4164(7): lea 0x2040d5(%rip),%rax
416b(2): push %r13
416d(2): push %r12
416f(3): mov %rdi,%r13
4172(1): push %rbp
4173(1): push %rbx
4174(3): mov %r8,%rbx
4177(3): mov %rsi,%r14
417a(3): mov %rdx,%r15
417d(4): sub $0x18,%rsp
4181(3): test %r8,%r8
4184(4): cmove %rax,%rbx
4188(5): mov %rcx,0x8(%rsp)
418d(5): call 0xffffd283(%rip)
4192(3): mov (%rax),%r12d
4195(3): mov %rax,%rbp
4198(4): lea 0x8(%rbx),%rax
419c(4): sub $0x8,%rsp
41a0(4): mov 0x4(%rbx),%r9d
41a4(3): push 0x30(%rbx)
41a7(3): mov (%rbx),%r8d
41aa(3): push 0x28(%rbx)
41ad(3): mov %r15,%rdx
41b0(1): push %rax
41b1(5): mov 0x28(%rsp),%rcx
41b6(3): mov %r14,%rsi
41b9(3): mov %r13,%rdi
41bc(5): call 0xffffeaa4(%rip)
41c1(4): mov %r12d,0x0(%rbp)
41c5(4): add $0x38,%rsp
41c9(1): pop %rbx
41ca(1): pop %rbp
41cb(2): pop %r12
41cd(2): pop %r13
41cf(2): pop %r14
41d1(2): pop %r15
41d3(1): ret near (%rsp)

"quotearg_alloc_mem" :
41e0(2): push %r15
41e2(2): push %r14
41e4(7): lea 0x204055(%rip),%rax
41eb(2): push %r13
41ed(2): push %r12
41ef(3): mov %rdx,%r12
41f2(1): push %rbp
41f3(1): push %rbx
41f4(3): mov %rcx,%rbx
41f7(3): mov %rdi,%r14
41fa(3): mov %rsi,%r15
41fd(4): sub $0x38,%rsp
4201(3): test %rcx,%rcx
4204(4): cmove %rax,%rbx
4208(2): xor %ebp,%ebp
420a(5): call 0xffffd206(%rip)
420f(3): test %r12,%r12
4212(3): mov %rax,%r13
4215(2): mov (%rax),%eax
4217(4): setz %bpl
421b(3): or 0x4(%rbx),%ebp
421e(4): lea 0x8(%rbx),%r10
4222(4): sub $0x8,%rsp
4226(3): mov (%rbx),%r8d
4229(3): mov %r15,%rcx
422c(4): mov %eax,0x14(%rsp)
4230(3): push 0x30(%rbx)
4233(3): mov %r14,%rdx
4236(3): push 0x28(%rbx)
4239(2): push %r10
423b(2): xor %esi,%esi
423d(3): mov %ebp,%r9d
4240(2): xor %edi,%edi
4242(5): mov %r10,0x40(%rsp)
4247(5): call 0xffffea19(%rip)
424c(4): lea 0x1(%rax),%rsi
4250(5): mov %rax,0x48(%rsp)
4255(4): add $0x20,%rsp
4259(3): mov %rsi,%rdi
425c(5): mov %rsi,0x18(%rsp)
4261(5): call 0xfdf(%rip)
4266(5): mov %rax,0x10(%rsp)
426b(4): sub $0x8,%rsp
426f(3): push 0x30(%rbx)
4272(3): push 0x28(%rbx)
4275(5): mov 0x38(%rsp),%r10
427a(3): mov %ebp,%r9d
427d(3): mov (%rbx),%r8d
4280(3): mov %r15,%rcx
4283(3): mov %r14,%rdx
4286(3): mov %rax,%rdi
4289(2): push %r10
428b(5): mov 0x38(%rsp),%rsi
4290(5): call 0xffffe9d0(%rip)
4295(4): mov 0x2c(%rsp),%eax
4299(4): add $0x20,%rsp
429d(3): test %r12,%r12
42a0(4): mov %eax,0x0(%r13)
42a4(2): jz 0xb(%rip)
42a6(5): mov 0x28(%rsp),%r11
42ab(4): mov %r11,(%r12)
42af(5): mov 0x10(%rsp),%rax
42b4(4): add $0x38,%rsp
42b8(1): pop %rbx
42b9(1): pop %rbp
42ba(2): pop %r12
42bc(2): pop %r13
42be(2): pop %r14
42c0(2): pop %r15
42c2(1): ret near (%rsp)

"quotearg_alloc" :
42d0(3): mov %rdx,%rcx
42d3(2): xor %edx,%edx
42d5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
42e0(6): mov 0x203d72(%rip),%eax
42e6(2): push %r12
42e8(7): mov 0x203d71(%rip),%r12
42ef(1): push %rbp
42f0(1): push %rbx
42f1(3): cmp $0x1,%eax
42f4(2): jle 0x2d(%rip)
42f6(3): sub $0x2,%eax
42f9(5): lea 0x18(%r12),%rbx
42fe(4): shl/sal $0x4,%rax
4302(5): lea 0x28(%r12,%rax,1),%rbp
4307(9): nop 0x0(%rax,%rax,1)
4310(3): mov (%rbx),%rdi
4313(4): add $0x10,%rbx
4317(5): call 0xffffd0d9(%rip)
431c(3): cmp %rbp,%rbx
431f(2): jnz 0xfffffff1(%rip)
4321(5): mov 0x8(%r12),%rdi
4326(7): lea 0x203e13(%rip),%rbx
432d(3): cmp %rbx,%rdi
4330(2): jz 0x19(%rip)
4332(5): call 0xffffd0be(%rip)
4337(b): mov $0x100,0x203d2e(%rip)
4342(7): mov %rbx,0x203d2f(%rip)
4349(7): lea 0x203d20(%rip),%rbx
4350(3): cmp %rbx,%r12
4353(2): jz 0x11(%rip)
4355(3): mov %r12,%rdi
4358(5): call 0xffffd098(%rip)
435d(7): mov %rbx,0x203cfc(%rip)
4364(1): pop %rbx
4365(a): mov $0x1,0x203ce9(%rip)
436f(1): pop %rbp
4370(2): pop %r12
4372(1): ret near (%rsp)

"quotearg_n" :
4380(7): lea 0x203eb9(%rip),%rcx
4387(7): mov $0xffffffff,%rdx
438e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
43a0(7): lea 0x203e99(%rip),%rcx
43a7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
43b0(7): lea 0x203e89(%rip),%rcx
43b7(3): mov %rdi,%rsi
43ba(7): mov $0xffffffff,%rdx
43c1(2): xor %edi,%edi
43c3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
43d0(7): lea 0x203e69(%rip),%rcx
43d7(3): mov %rsi,%rdx
43da(3): mov %rdi,%rsi
43dd(2): xor %edi,%edi
43df(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
43f0(4): sub $0x48,%rsp
43f4(3): mov %rdx,%rax
43f7(9): mov $0x28,%rdx
4400(5): mov %rdx,0x38(%rsp)
4405(2): xor %edx,%edx
4407(3): cmp $0xa,%esi
440a(2): jz 0x6a(%rip)
440c(3): mov %esi,(%rsp)
440f(3): mov %rsp,%rcx
4412(7): mov $0xffffffff,%rdx
4419(3): mov %rax,%rsi
441c(9): mov $0x0,0x4(%rsp)
4425(9): mov $0x0,0xc(%rsp)
442e(9): mov $0x0,0x14(%rsp)
4437(9): mov $0x0,0x1c(%rsp)
4440(9): mov $0x0,0x24(%rsp)
4449(9): mov $0x0,0x2c(%rsp)
4452(8): mov $0x0,0x34(%rsp)
445a(5): call 0xfffffa46(%rip)
445f(5): mov 0x38(%rsp),%rcx
4464(9): xor $0x28,%rcx
446d(2): jnz 0xc(%rip)
446f(4): add $0x48,%rsp
4473(1): ret near (%rsp)
4474(5): call 0xffffcf8c(%rip)
4479(5): call 0xffffd047(%rip)

"quotearg_n_style_mem" :
4480(4): sub $0x48,%rsp
4484(3): mov %rdx,%rax
4487(3): mov %rcx,%rdx
448a(9): mov $0x28,%rcx
4493(5): mov %rcx,0x38(%rsp)
4498(2): xor %ecx,%ecx
449a(3): cmp $0xa,%esi
449d(2): jz 0x63(%rip)
449f(3): mov %esi,(%rsp)
44a2(3): mov %rsp,%rcx
44a5(3): mov %rax,%rsi
44a8(9): mov $0x0,0x4(%rsp)
44b1(9): mov $0x0,0xc(%rsp)
44ba(9): mov $0x0,0x14(%rsp)
44c3(9): mov $0x0,0x1c(%rsp)
44cc(9): mov $0x0,0x24(%rsp)
44d5(9): mov $0x0,0x2c(%rsp)
44de(8): mov $0x0,0x34(%rsp)
44e6(5): call 0xfffff9ba(%rip)
44eb(5): mov 0x38(%rsp),%rdx
44f0(9): xor $0x28,%rdx
44f9(2): jnz 0xc(%rip)
44fb(4): add $0x48,%rsp
44ff(1): ret near (%rsp)
4500(5): call 0xffffcf00(%rip)
4505(5): call 0xffffcfbb(%rip)

"quotearg_style" :
4510(3): mov %rsi,%rdx
4513(2): mov %edi,%esi
4515(2): xor %edi,%edi
4517(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4520(3): mov %rdx,%rcx
4523(3): mov %rsi,%rdx
4526(2): mov %edi,%esi
4528(2): xor %edi,%edi
452a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4530(4): sub $0x48,%rsp
4534(2): mov %edx,%ecx
4536(9): mov $0x28,%rax
453f(5): mov %rax,0x38(%rsp)
4544(2): xor %eax,%eax
4546(7): mov 0x203d23(%rip),%rax
454d(3): mov %rsp,%r8
4550(3): and $0x1f,%ecx
4553(8): movdqa 0x203ce5(%rip),%xmm0
455b(5): mov %rax,0x30(%rsp)
4560(2): mov %edx,%eax
4562(4): movaps %xmm0,(%rsp)
4566(3): shr $0x5,%al
4569(3): movzx %al,%eax
456c(5): lea 0x8(%r8,%rax,4),%r9
4571(8): movdqa 0x203cd7(%rip),%xmm0
4579(5): movaps %xmm0,0x10(%rsp)
457e(8): movdqa 0x203cda(%rip),%xmm0
4586(5): movaps %xmm0,0x20(%rsp)
458b(3): mov (%r9),%edx
458e(2): mov %edx,%eax
4590(2): shr %cl,%eax
4592(2): not %eax
4594(3): and $0x1,%eax
4597(2): shl/sal %cl,%eax
4599(3): mov %r8,%rcx
459c(2): xor %edx,%eax
459e(3): mov %rsi,%rdx
45a1(3): mov %rdi,%rsi
45a4(3): mov %eax,(%r9)
45a7(2): xor %edi,%edi
45a9(5): call 0xfffff8f7(%rip)
45ae(5): mov 0x38(%rsp),%rsi
45b3(9): xor $0x28,%rsi
45bc(2): jnz 0x7(%rip)
45be(4): add $0x48,%rsp
45c2(1): ret near (%rsp)
45c3(5): call 0xffffcefd(%rip)

"quotearg_char" :
45d0(4): movsx %sil,%edx
45d4(7): mov $0xffffffff,%rsi
45db(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
45e0(5): mov $0x3a,%edx
45e5(7): mov $0xffffffff,%rsi
45ec(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4600(5): mov $0x3a,%edx
4605(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4610(4): sub $0x48,%rsp
4614(3): mov %rdx,%rax
4617(9): mov $0x28,%rdx
4620(5): mov %rdx,0x38(%rsp)
4625(2): xor %edx,%edx
4627(3): cmp $0xa,%esi
462a(2): jz 0x6a(%rip)
462c(3): mov %esi,(%rsp)
462f(3): mov %rsp,%rcx
4632(7): mov $0xffffffff,%rdx
4639(3): mov %rax,%rsi
463c(9): mov $0x0,0x4(%rsp)
4645(9): mov $0x4000000,0xc(%rsp)
464e(9): mov $0x0,0x14(%rsp)
4657(9): mov $0x0,0x1c(%rsp)
4660(9): mov $0x0,0x24(%rsp)
4669(9): mov $0x0,0x2c(%rsp)
4672(8): mov $0x0,0x34(%rsp)
467a(5): call 0xfffff826(%rip)
467f(5): mov 0x38(%rsp),%rcx
4684(9): xor $0x28,%rcx
468d(2): jnz 0xc(%rip)
468f(4): add $0x48,%rsp
4693(1): ret near (%rsp)
4694(5): call 0xffffcd6c(%rip)
4699(5): call 0xffffce27(%rip)

"quotearg_n_custom_mem" :
46a0(4): sub $0x48,%rsp
46a4(3): mov %rcx,%r9
46a7(7): mov 0x203bc2(%rip),%rcx
46ae(8): movdqa 0x203b8a(%rip),%xmm0
46b6(9): mov $0x28,%rax
46bf(5): mov %rax,0x38(%rsp)
46c4(2): xor %eax,%eax
46c6(4): movaps %xmm0,(%rsp)
46ca(3): test %rsi,%rsi
46cd(5): mov %rcx,0x30(%rsp)
46d2(7): mov $0xa,(%rsp)
46d9(8): movdqa 0x203b6f(%rip),%xmm0
46e1(5): movaps %xmm0,0x10(%rsp)
46e6(8): movdqa 0x203b72(%rip),%xmm0
46ee(5): movaps %xmm0,0x20(%rsp)
46f3(2): jz 0x34(%rip)
46f5(3): test %rdx,%rdx
46f8(2): jz 0x2f(%rip)
46fa(5): mov %rsi,0x28(%rsp)
46ff(5): mov %rdx,0x30(%rsp)
4704(3): mov %rsp,%rcx
4707(3): mov %r8,%rdx
470a(3): mov %r9,%rsi
470d(5): call 0xfffff793(%rip)
4712(5): mov 0x38(%rsp),%rdi
4717(9): xor $0x28,%rdi
4720(2): jnz 0xc(%rip)
4722(4): add $0x48,%rsp
4726(1): ret near (%rsp)
4727(5): call 0xffffccd9(%rip)
472c(5): call 0xffffcd94(%rip)

"quotearg_n_custom" :
4740(7): mov $0xffffffff,%r8
4747(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4750(3): mov %rdx,%rcx
4753(7): mov $0xffffffff,%r8
475a(3): mov %rsi,%rdx
475d(3): mov %rdi,%rsi
4760(2): xor %edi,%edi
4762(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4770(3): mov %rcx,%r8
4773(3): mov %rdx,%rcx
4776(3): mov %rsi,%rdx
4779(3): mov %rdi,%rsi
477c(2): xor %edi,%edi
477e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4790(7): lea 0x203889(%rip),%rcx
4797(5): jmp 0xfffff709(%rip)

"quote_mem" :
47a0(7): lea 0x203879(%rip),%rcx
47a7(3): mov %rsi,%rdx
47aa(3): mov %rdi,%rsi
47ad(2): xor %edi,%edi
47af(5): jmp 0xfffff6f1(%rip)

"quote_n" :
47c0(7): lea 0x203859(%rip),%rcx
47c7(7): mov $0xffffffff,%rdx
47ce(5): jmp 0xfffff6d2(%rip)

"quote" :
47e0(7): lea 0x203839(%rip),%rcx
47e7(3): mov %rdi,%rsi
47ea(7): mov $0xffffffff,%rdx
47f1(2): xor %edi,%edi
47f3(5): jmp 0xfffff6ad(%rip)

"init_tokenbuffer" :
4800(7): mov $0x0,(%rdi)
4807(8): mov $0x0,0x8(%rdi)
480f(1): ret near (%rsp)

"readtoken" :
4810(2): push %r15
4812(2): push %r14
4814(2): push %r13
4816(2): push %r12
4818(3): mov %rcx,%r13
481b(1): push %rbp
481c(1): push %rbx
481d(3): mov %rdi,%rbp
4820(4): pxor %xmm0,%xmm0
4824(4): sub $0x38,%rsp
4828(9): mov $0x28,%rax
4831(5): mov %rax,0x28(%rsp)
4836(2): xor %eax,%eax
4838(3): test %rdx,%rdx
483b(4): movaps %xmm0,(%rsp)
483f(5): movaps %xmm0,0x10(%rsp)
4844(2): jz 0x68(%rip)
4846(3): add %rsi,%rdx
4849(3): mov %rsp,%rdi
484c(6): mov $0x1,%r8d
4852(6): nop 0x0(%rax,%rax,1)
4858(3): mov %r8,%rbx
485b(4): add $0x1,%rsi
485f(4): movzx 0xffffffff(%rsi),%ecx
4863(3): mov %rcx,%rax
4866(3): and $0x3f,%ecx
4869(4): shr $0x3,%rax
486d(3): shl/sal %cl,%rbx
4870(3): and $0x18,%eax
4873(4): or %rbx,0x0(%rdi,%rax,1)
4877(3): cmp %rsi,%rdx
487a(2): jnz 0xffffffde(%rip)
487c(4): mov 0x8(%rbp),%rax
4880(4): cmp 0x10(%rbp),%rax
4884(2): jnb 0x32(%rip)
4886(a): nop 0x0(%rax,%rax,1)
4890(4): lea 0x1(%rax),%rdx
4894(4): mov %rdx,0x8(%rbp)
4898(3): movzx (%rax),%ebx
489b(3): movsxd %ebx,%rax
489e(4): shr $0x6,%rax
48a2(4): mov 0x0(%rsp,%rax,8),%rax
48a6(4): bt %rbx,%rax
48aa(2): jnb 0x1a(%rip)
48ac(4): mov 0x8(%rbp),%rax
48b0(4): cmp 0x10(%rbp),%rax
48b4(2): jb 0xffffffdc(%rip)
48b6(3): mov %rbp,%rdi
48b9(5): call 0xffffcb27(%rip)
48be(2): test %eax,%eax
48c0(2): mov %eax,%ebx
48c2(2): jns 0xffffffd9(%rip)
48c4(4): mov 0x8(%r13),%r15
48c8(4): mov 0x0(%r13),%r14
48cc(3): xor %r12d,%r12d
48cf(2): test %ebx,%ebx
48d1(2): jns 0xf(%rip)
48d3(3): test %r12,%r12
48d6(2): jz 0x54(%rip)
48d8(8): nop 0x0(%rax,%rax,1)
48e0(3): cmp %r14,%r12
48e3(2): jz 0x55(%rip)
48e5(2): test %ebx,%ebx
48e7(4): lea 0x0(%r15,%r12,1),%rdx
48eb(6): js 0x95(%rip)
48f1(3): movsxd %ebx,%rax
48f4(4): shr $0x6,%rax
48f8(4): mov 0x0(%rsp,%rax,8),%rax
48fc(4): bt %rbx,%rax
4900(2): jb 0x80(%rip)
4902(2): mov %bl,(%rdx)
4904(4): add $0x1,%r12
4908(4): mov 0x8(%rbp),%rax
490c(4): cmp 0x10(%rbp),%rax
4910(6): jnb 0xa0(%rip)
4916(4): lea 0x1(%rax),%rdx
491a(4): mov %rdx,0x8(%rbp)
491e(3): movzx (%rax),%ebx
4921(2): test %ebx,%ebx
4923(2): jns 0xffffffbd(%rip)
4925(3): test %r12,%r12
4928(2): jnz 0xffffffb8(%rip)
492a(7): mov $0xffffffff,%r12
4931(2): jmp 0x5a(%rip)
4933(5): nop 0x0(%rax,%rax,1)
4938(3): test %r15,%r15
493b(6): jz 0x85(%rip)
4941(a): mov $0x6148914691236517203,%rax
494b(3): cmp %rax,%r12
494e(6): jnbe 0x86(%rip)
4954(3): mov %r12,%rax
4957(3): shr $0x1,%rax
495a(5): lea 0x1(%r12,%rax,1),%r14
495f(3): mov %r15,%rdi
4962(3): mov %r14,%rsi
4965(5): call 0x93b(%rip)
496a(2): test %ebx,%ebx
496c(3): mov %rax,%r15
496f(4): lea 0x0(%r15,%r12,1),%rdx
4973(6): jns 0xffffff7e(%rip)
4979(7): nop 0x0(%rax)
4980(3): mov $0x0,(%rdx)
4983(4): mov %r15,0x8(%r13)
4987(4): mov %r14,0x0(%r13)
498b(5): mov 0x28(%rsp),%rdi
4990(9): xor $0x28,%rdi
4999(3): mov %r12,%rax
499c(2): jnz 0x3d(%rip)
499e(4): add $0x38,%rsp
49a2(1): pop %rbx
49a3(1): pop %rbp
49a4(2): pop %r12
49a6(2): pop %r13
49a8(2): pop %r14
49aa(2): pop %r15
49ac(1): ret near (%rsp)
49ad(3): nop (%rax)
49b0(3): mov %rbp,%rdi
49b3(5): call 0xffffca2d(%rip)
49b8(2): mov %eax,%ebx
49ba(5): jmp 0xffffff15(%rip)
49bf(1): nop 
49c0(3): test %r12,%r12
49c3(5): mov $0x80,%ecx
49c8(4): cmovne %r12,%rcx
49cc(3): test %rcx,%rcx
49cf(3): mov %rcx,%r14
49d2(2): jns 0xffffff8d(%rip)
49d4(5): call 0xabc(%rip)
49d9(5): call 0xffffcae7(%rip)

"readtokens" :
49e0(2): push %r15
49e2(2): push %r14
49e4(2): push %r13
49e6(2): push %r12
49e8(1): push %rbp
49e9(1): push %rbx
49ea(4): lea 0x1(%rsi),%rbp
49ee(4): sub $0x68,%rsp
49f2(9): mov $0x28,%rax
49fb(5): mov %rax,0x58(%rsp)
4a00(2): xor %eax,%eax
4a02(5): mov %rdx,0x10(%rsp)
4a07(3): test %rsi,%rsi
4a0a(5): mov $0x40,%eax
4a0f(5): mov $0x8,%edx
4a14(4): cmove %rax,%rbp
4a18(5): mov %rdi,0x8(%rsp)
4a1d(3): mov %rdx,%rax
4a20(5): mov %rcx,0x18(%rsp)
4a25(5): mov %r8,0x38(%rsp)
4a2a(3): mul %rax,%rbp,%rdx
4a2d(5): mov %r9,0x30(%rsp)
4a32(6): jo 0x1ce(%rip)
4a38(2): xor %ecx,%ecx
4a3a(3): test %rax,%rax
4a3d(6): js 0x1be(%rip)
4a43(3): test %rcx,%rcx
4a46(6): jnz 0x1b5(%rip)
4a4c(8): lea 0x0(,%rbp,8),%rbx
4a54(3): mov %rbx,%rdi
4a57(5): call 0x7e9(%rip)
4a5c(3): mov %rbx,%rdi
4a5f(3): mov %rax,%r12
4a62(2): xor %ebx,%ebx
4a64(5): call 0x7dc(%rip)
4a69(3): mov %rax,%r13
4a6c(5): lea 0x40(%rsp),%rax
4a71(9): mov $0x0,0x40(%rsp)
4a7a(9): mov $0x0,0x48(%rsp)
4a83(5): mov %rax,0x20(%rsp)
4a88(2): jmp 0x44(%rip)
4a8a(6): nop 0x0(%rax,%rax,1)
4a90(4): cmp $0xffffffff,%r14
4a94(6): jz 0xb8(%rip)
4a9a(3): mov %r14,%r15
4a9d(4): add $0x1,%r15
4aa1(6): js 0x15a(%rip)
4aa7(3): mov %r15,%rdi
4aaa(5): call 0x796(%rip)
4aaf(5): mov 0x48(%rsp),%rsi
4ab4(5): mov %r14,0x0(%r13,%rbx,8)
4ab9(3): mov %r15,%rdx
4abc(3): mov %rax,%rdi
4abf(5): call 0xffffcaf1(%rip)
4ac4(4): mov %rax,0x0(%r12,%rbx,8)
4ac8(4): add $0x1,%rbx
4acc(5): mov 0x20(%rsp),%rcx
4ad1(5): mov 0x18(%rsp),%rdx
4ad6(5): mov 0x10(%rsp),%rsi
4adb(5): mov 0x8(%rsp),%rdi
4ae0(5): call 0xfffffd30(%rip)
4ae5(3): cmp %rbp,%rbx
4ae8(3): mov %rax,%r14
4aeb(2): jb 0xffffffa5(%rip)
4aed(3): test %r12,%r12
4af0(6): jz 0xb8(%rip)
4af6(a): mov $0x768614336404564649,%rax
4b00(3): cmp %rax,%rbp
4b03(6): jnbe 0xf8(%rip)
4b09(3): mov %rbp,%rax
4b0c(3): mov %r12,%rdi
4b0f(3): shr $0x1,%rax
4b12(5): lea 0x1(%rbp,%rax,1),%rbp
4b17(8): lea 0x0(,%rbp,8),%rdx
4b1f(3): mov %rdx,%rsi
4b22(5): mov %rdx,0x28(%rsp)
4b27(5): call 0x779(%rip)
4b2c(5): mov 0x28(%rsp),%rdx
4b31(3): mov %rax,%r12
4b34(3): mov %r13,%rdi
4b37(3): mov %rdx,%rsi
4b3a(5): call 0x766(%rip)
4b3f(4): cmp $0xffffffff,%r14
4b43(3): mov %rax,%r13
4b46(6): jnz 0xffffff54(%rip)
4b4c(8): mov $0x0,0x0(%r12,%rbx,8)
4b54(5): mov 0x48(%rsp),%rdi
4b59(9): mov $0x0,0x0(%r13,%rbx,8)
4b62(5): call 0xffffc88e(%rip)
4b67(6): cmp $0x0,0x30(%rsp)
4b6d(5): mov 0x38(%rsp),%rax
4b72(3): mov %r12,(%rax)
4b75(2): jz 0x7c(%rip)
4b77(5): mov 0x30(%rsp),%rax
4b7c(3): mov %r13,(%rax)
4b7f(5): mov 0x58(%rsp),%rcx
4b84(9): xor $0x28,%rcx
4b8d(3): mov %rbx,%rax
4b90(2): jnz 0x7a(%rip)
4b92(4): add $0x68,%rsp
4b96(1): pop %rbx
4b97(1): pop %rbp
4b98(2): pop %r12
4b9a(2): pop %r13
4b9c(2): pop %r14
4b9e(2): pop %r15
4ba0(1): ret near (%rsp)
4ba1(7): nop 0x0(%rax)
4ba8(3): test %rbp,%rbp
4bab(5): mov $0x10,%eax
4bb0(5): mov $0x8,%edx
4bb5(4): cmove %rax,%rbp
4bb9(3): mov %rdx,%rax
4bbc(2): xor %esi,%esi
4bbe(3): mul %rax,%rbp,%rdx
4bc1(2): jo 0x4e(%rip)
4bc3(3): test %rax,%rax
4bc6(2): js 0x35(%rip)
4bc8(3): test %rsi,%rsi
4bcb(2): jnz 0x30(%rip)
4bcd(8): lea 0x0(,%rbp,8),%rdx
4bd5(2): xor %edi,%edi
4bd7(3): mov %rdx,%rsi
4bda(5): mov %rdx,0x28(%rsp)
4bdf(5): call 0x6c1(%rip)
4be4(5): mov 0x28(%rsp),%rdx
4be9(3): mov %rax,%r12
4bec(5): jmp 0xffffff48(%rip)
4bf1(3): mov %r13,%rdi
4bf4(5): call 0xffffc7fc(%rip)
4bf9(2): jmp 0xffffff86(%rip)
4bfb(5): call 0x895(%rip)
4c00(5): mov $0x1,%ecx
4c05(5): jmp 0xfffffe35(%rip)
4c0a(5): call 0xffffc8b6(%rip)
4c0f(5): mov $0x1,%esi
4c14(2): jmp 0xffffffaf(%rip)

"version_etc_arn" :
4c20(2): push %r15
4c22(2): push %r14
4c24(2): push %r13
4c26(2): push %r12
4c28(3): mov %r9,%r12
4c2b(1): push %rbp
4c2c(1): push %rbx
4c2d(3): mov %rdi,%rbp
4c30(3): mov %r8,%rbx
4c33(4): sub $0x28,%rsp
4c37(3): test %rsi,%rsi
4c3a(6): jz 0x11e(%rip)
4c40(3): mov %rdx,%r8
4c43(7): lea 0x14be(%rip),%rdx
4c4a(3): mov %rcx,%r9
4c4d(2): xor %eax,%eax
4c4f(3): mov %rsi,%rcx
4c52(5): mov $0x1,%esi
4c57(5): call 0xffffca49(%rip)
4c5c(7): lea 0x14b8(%rip),%rsi
4c63(2): xor %edi,%edi
4c65(5): mov $0x5,%edx
4c6a(5): call 0xffffc826(%rip)
4c6f(7): lea 0x17ca(%rip),%rdx
4c76(3): mov %rax,%rcx
4c79(6): mov $0x7e3,%r8d
4c7f(5): mov $0x1,%esi
4c84(3): mov %rbp,%rdi
4c87(2): xor %eax,%eax
4c89(5): call 0xffffca17(%rip)
4c8e(7): lea 0x1513(%rip),%rsi
4c95(2): xor %edi,%edi
4c97(5): mov $0x5,%edx
4c9c(5): call 0xffffc7f4(%rip)
4ca1(3): mov %rbp,%rsi
4ca4(3): mov %rax,%rdi
4ca7(5): call 0xffffc8d9(%rip)
4cac(4): cmp $0x9,%r12
4cb0(6): jnbe 0x340(%rip)
4cb6(7): lea 0x174b(%rip),%rdx
4cbd(4): movsxd 0x0(%rdx,%r12,4),%rax
4cc1(3): add %rdx,%rax
4cc4(2): jmp %rax
4cc6(a): nop 0x0(%rax,%rax,1)
4cd0(4): mov 0x38(%rbx),%r9
4cd4(4): mov 0x10(%rbx),%rax
4cd8(7): lea 0x1639(%rip),%rsi
4cdf(4): mov 0x8(%rbx),%r8
4ce3(5): mov $0x5,%edx
4ce8(2): xor %edi,%edi
4cea(4): mov 0x30(%rbx),%r13
4cee(4): mov 0x28(%rbx),%r12
4cf2(5): mov %r9,0x10(%rsp)
4cf7(4): mov 0x20(%rbx),%r15
4cfb(4): mov 0x18(%rbx),%r14
4cff(4): mov %rax,(%rsp)
4d03(5): mov %r8,0x8(%rsp)
4d08(3): mov (%rbx),%rbx
4d0b(5): call 0xffffc785(%rip)
4d10(4): sub $0x8,%rsp
4d14(5): mov 0x18(%rsp),%r9
4d19(3): mov %rax,%rdx
4d1c(3): mov %rbx,%rcx
4d1f(5): mov $0x1,%esi
4d24(3): mov %rbp,%rdi
4d27(2): xor %eax,%eax
4d29(2): push %r9
4d2b(2): push %r13
4d2d(2): push %r12
4d2f(2): push %r15
4d31(2): push %r14
4d33(5): mov 0x30(%rsp),%r9
4d38(5): mov 0x38(%rsp),%r8
4d3d(5): call 0xffffc963(%rip)
4d42(4): add $0x30,%rsp
4d46(4): add $0x28,%rsp
4d4a(1): pop %rbx
4d4b(1): pop %rbp
4d4c(2): pop %r12
4d4e(2): pop %r13
4d50(2): pop %r14
4d52(2): pop %r15
4d54(1): ret near (%rsp)
4d55(3): nop (%rax)
4d58(3): mov %rcx,%r8
4d5b(3): mov %rdx,%rcx
4d5e(7): lea 0x13af(%rip),%rdx
4d65(5): mov $0x1,%esi
4d6a(2): xor %eax,%eax
4d6c(5): call 0xffffc934(%rip)
4d71(5): jmp 0xfffffeeb(%rip)
4d76(a): nop 0x0(%rax,%rax,1)
4d80(4): mov 0x40(%rbx),%r10
4d84(4): mov 0x38(%rbx),%r9
4d88(7): lea 0x15b9(%rip),%rsi
4d8f(4): mov 0x10(%rbx),%rax
4d93(4): mov 0x8(%rbx),%r8
4d97(5): mov $0x5,%edx
4d9c(4): mov 0x30(%rbx),%r13
4da0(4): mov 0x28(%rbx),%r12
4da4(4): mov 0x20(%rbx),%r15
4da8(4): mov 0x18(%rbx),%r14
4dac(3): mov (%rbx),%rbx
4daf(5): mov %r10,0x18(%rsp)
4db4(5): mov %r9,0x10(%rsp)
4db9(4): mov %rax,(%rsp)
4dbd(5): mov %r8,0x8(%rsp)
4dc2(2): xor %edi,%edi
4dc4(5): call 0xffffc6cc(%rip)
4dc9(5): mov 0x18(%rsp),%r10
4dce(2): push %r10
4dd0(5): jmp 0xffffff44(%rip)
4dd5(3): nop (%rax)
4dd8(3): mov (%rbx),%rbx
4ddb(7): lea 0x133d(%rip),%rsi
4de2(5): mov $0x5,%edx
4de7(2): xor %edi,%edi
4de9(5): call 0xffffc6a7(%rip)
4dee(4): add $0x28,%rsp
4df2(3): mov %rbx,%rcx
4df5(3): mov %rbp,%rdi
4df8(1): pop %rbx
4df9(1): pop %rbp
4dfa(2): pop %r12
4dfc(2): pop %r13
4dfe(2): pop %r14
4e00(2): pop %r15
4e02(3): mov %rax,%rdx
4e05(5): mov $0x1,%esi
4e0a(2): xor %eax,%eax
4e0c(5): jmp 0xffffc894(%rip)
4e11(7): nop 0x0(%rax)
4e18(4): mov 0x8(%rbx),%r12
4e1c(7): lea 0x130c(%rip),%rsi
4e23(3): mov (%rbx),%rbx
4e26(5): mov $0x5,%edx
4e2b(2): xor %edi,%edi
4e2d(5): call 0xffffc663(%rip)
4e32(4): add $0x28,%rsp
4e36(3): mov %r12,%r8
4e39(3): mov %rbx,%rcx
4e3c(3): mov %rbp,%rdi
4e3f(3): mov %rax,%rdx
4e42(5): mov $0x1,%esi
4e47(1): pop %rbx
4e48(1): pop %rbp
4e49(2): pop %r12
4e4b(2): pop %r13
4e4d(2): pop %r14
4e4f(2): pop %r15
4e51(2): xor %eax,%eax
4e53(5): jmp 0xffffc84d(%rip)
4e58(8): nop 0x0(%rax,%rax,1)
4e60(4): mov 0x10(%rbx),%r13
4e64(4): mov 0x8(%rbx),%r12
4e68(7): lea 0x12d7(%rip),%rsi
4e6f(3): mov (%rbx),%rbx
4e72(5): mov $0x5,%edx
4e77(2): xor %edi,%edi
4e79(5): call 0xffffc617(%rip)
4e7e(4): add $0x28,%rsp
4e82(3): mov %r13,%r9
4e85(3): mov %r12,%r8
4e88(3): mov %rbx,%rcx
4e8b(3): mov %rbp,%rdi
4e8e(3): mov %rax,%rdx
4e91(1): pop %rbx
4e92(1): pop %rbp
4e93(2): pop %r12
4e95(2): pop %r13
4e97(2): pop %r14
4e99(2): pop %r15
4e9b(5): mov $0x1,%esi
4ea0(2): xor %eax,%eax
4ea2(5): jmp 0xffffc7fe(%rip)
4ea7(9): nop 0x0(%rax,%rax,1)
4eb0(7): lea 0x13c1(%rip),%rsi
4eb7(5): mov $0x5,%edx
4ebc(2): xor %edi,%edi
4ebe(4): mov 0x18(%rbx),%r14
4ec2(4): mov 0x10(%rbx),%r13
4ec6(4): mov 0x8(%rbx),%r12
4eca(3): mov (%rbx),%rbx
4ecd(5): call 0xffffc5c3(%rip)
4ed2(4): sub $0x8,%rsp
4ed6(2): push %r14
4ed8(3): mov %rax,%rdx
4edb(3): mov %r13,%r9
4ede(3): mov %r12,%r8
4ee1(3): mov %rbx,%rcx
4ee4(3): mov %rbp,%rdi
4ee7(5): mov $0x1,%esi
4eec(2): xor %eax,%eax
4eee(5): call 0xffffc7b2(%rip)
4ef3(1): pop %rax
4ef4(1): pop %rdx
4ef5(4): add $0x28,%rsp
4ef9(1): pop %rbx
4efa(1): pop %rbp
4efb(2): pop %r12
4efd(2): pop %r13
4eff(2): pop %r14
4f01(2): pop %r15
4f03(1): ret near (%rsp)
4f04(4): nop 0x0(%rax)
4f08(4): mov 0x20(%rbx),%r15
4f0c(7): lea 0x1385(%rip),%rsi
4f13(5): mov $0x5,%edx
4f18(2): xor %edi,%edi
4f1a(4): mov 0x18(%rbx),%r14
4f1e(4): mov 0x10(%rbx),%r13
4f22(4): mov 0x8(%rbx),%r12
4f26(3): mov (%rbx),%rbx
4f29(5): call 0xffffc567(%rip)
4f2e(2): push %r15
4f30(2): jmp 0xffffffa6(%rip)
4f32(6): nop 0x0(%rax,%rax,1)
4f38(4): mov 0x8(%rbx),%r8
4f3c(4): mov 0x28(%rbx),%r12
4f40(7): lea 0x1379(%rip),%rsi
4f47(4): mov 0x20(%rbx),%r15
4f4b(4): mov 0x18(%rbx),%r14
4f4f(5): mov $0x5,%edx
4f54(4): mov 0x10(%rbx),%r13
4f58(2): xor %edi,%edi
4f5a(3): mov (%rbx),%rbx
4f5d(4): mov %r8,(%rsp)
4f61(5): call 0xffffc52f(%rip)
4f66(4): sub $0x8,%rsp
4f6a(3): mov %r13,%r9
4f6d(2): push %r12
4f6f(2): push %r15
4f71(2): push %r14
4f73(5): mov 0x20(%rsp),%r8
4f78(3): mov %rbx,%rcx
4f7b(3): mov %rax,%rdx
4f7e(3): mov %rbp,%rdi
4f81(5): mov $0x1,%esi
4f86(2): xor %eax,%eax
4f88(5): call 0xffffc718(%rip)
4f8d(4): add $0x20,%rsp
4f91(4): add $0x28,%rsp
4f95(1): pop %rbx
4f96(1): pop %rbp
4f97(2): pop %r12
4f99(2): pop %r13
4f9b(2): pop %r14
4f9d(2): pop %r15
4f9f(1): ret near (%rsp)
4fa0(4): mov 0x10(%rbx),%r9
4fa4(4): mov 0x30(%rbx),%r13
4fa8(7): lea 0x1339(%rip),%rsi
4faf(4): mov 0x28(%rbx),%r12
4fb3(4): mov 0x20(%rbx),%r15
4fb7(5): mov $0x5,%edx
4fbc(4): mov 0x18(%rbx),%r14
4fc0(4): mov 0x8(%rbx),%r8
4fc4(2): xor %edi,%edi
4fc6(5): mov %r9,0x8(%rsp)
4fcb(3): mov (%rbx),%rbx
4fce(4): mov %r8,(%rsp)
4fd2(5): call 0xffffc4be(%rip)
4fd7(2): push %r13
4fd9(2): push %r12
4fdb(2): push %r15
4fdd(2): push %r14
4fdf(5): mov 0x28(%rsp),%r9
4fe4(2): jmp 0xffffff8f(%rip)
4fe6(a): nop 0x0(%rax,%rax,1)
4ff0(4): mov 0x40(%rbx),%r10
4ff4(4): mov 0x38(%rbx),%r9
4ff8(5): mov $0x5,%edx
4ffd(4): mov 0x10(%rbx),%rax
5001(4): mov 0x8(%rbx),%r8
5005(7): lea 0x1374(%rip),%rsi
500c(4): mov 0x30(%rbx),%r13
5010(4): mov 0x28(%rbx),%r12
5014(4): mov 0x20(%rbx),%r15
5018(4): mov 0x18(%rbx),%r14
501c(5): mov %r10,0x18(%rsp)
5021(5): mov %r9,0x10(%rsp)
5026(4): mov %rax,(%rsp)
502a(5): mov %r8,0x8(%rsp)
502f(3): mov (%rbx),%rbx
5032(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5040(3): xor %r9d,%r9d
5043(4): cmp $0x0,(%r8)
5047(2): jz 0x14(%rip)
5049(7): nop 0x0(%rax)
5050(4): add $0x1,%r9
5054(5): cmp $0x0,0x0(%r8,%r9,8)
5059(2): jnz 0xfffffff7(%rip)
505b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5060(4): sub $0x68,%rsp
5064(3): mov %r8,%r10
5067(3): xor %r9d,%r9d
506a(9): mov $0x28,%rax
5073(5): mov %rax,0x58(%rsp)
5078(2): xor %eax,%eax
507a(3): mov %rsp,%r8
507d(3): nop (%rax)
5080(3): mov (%r10),%eax
5083(3): cmp $0x2f,%eax
5086(2): jnbe 0x44(%rip)
5088(3): mov %eax,%r11d
508b(4): add 0x10(%r10),%r11
508f(3): add $0x8,%eax
5092(3): mov %eax,(%r10)
5095(3): mov (%r11),%rax
5098(3): test %rax,%rax
509b(4): mov %rax,0x0(%r8,%r9,8)
509f(2): jz 0xc(%rip)
50a1(4): add $0x1,%r9
50a5(4): cmp $0xa,%r9
50a9(2): jnz 0xffffffd7(%rip)
50ab(5): call 0xfffffb75(%rip)
50b0(5): mov 0x58(%rsp),%rax
50b5(9): xor $0x28,%rax
50be(2): jnz 0x7(%rip)
50c0(4): add $0x68,%rsp
50c4(1): ret near (%rsp)
50c5(5): call 0xffffc3fb(%rip)
50ca(4): mov 0x8(%r10),%r11
50ce(4): lea 0x8(%r11),%rax
50d2(4): mov %rax,0x8(%r10)
50d6(2): jmp 0xffffffbf(%rip)

"version_etc" :
50e0(1): push %rbp
50e1(1): push %rbx
50e2(6): mov $0x20,%r10d
50e8(3): xor %r11d,%r11d
50eb(7): sub $0xb8,%rsp
50f2(9): mov $0x28,%rax
50fb(5): mov %rax,0x78(%rsp)
5100(2): xor %eax,%eax
5102(8): lea 0xd0(%rsp),%rax
510a(8): mov %r8,0xa0(%rsp)
5112(8): lea 0xd0(%rsp),%rbx
511a(5): lea 0x20(%rsp),%r8
511f(8): mov %r9,0xa8(%rsp)
5127(8): mov $0x20,0x8(%rsp)
512f(5): mov %rax,0x10(%rsp)
5134(8): lea 0x80(%rsp),%rax
513c(3): xor %r9d,%r9d
513f(5): mov %rax,0x18(%rsp)
5144(3): mov %rax,%rbp
5147(9): nop 0x0(%rax,%rax,1)
5150(4): cmp $0x2f,%r10d
5154(2): jnbe 0x58(%rip)
5156(3): mov %r10d,%eax
5159(6): mov $0x1,%r11d
515f(4): add $0x8,%r10d
5163(3): add %rbp,%rax
5166(3): mov (%rax),%rax
5169(3): test %rax,%rax
516c(4): mov %rax,0x0(%r8,%r9,8)
5170(2): jz 0xc(%rip)
5172(4): add $0x1,%r9
5176(4): cmp $0xa,%r9
517a(2): jnz 0xffffffd6(%rip)
517c(3): test %r11b,%r11b
517f(2): jnz 0x26(%rip)
5181(5): call 0xfffffa9f(%rip)
5186(5): mov 0x78(%rsp),%rax
518b(9): xor $0x28,%rax
5194(2): jnz 0xc(%rip)
5196(7): add $0xb8,%rsp
519d(1): pop %rbx
519e(1): pop %rbp
519f(1): ret near (%rsp)
51a0(5): call 0xffffc320(%rip)
51a5(5): mov %r10d,0x8(%rsp)
51aa(2): jmp 0xffffffd7(%rip)
51ac(3): mov %rbx,%rax
51af(4): add $0x8,%rbx
51b3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
51c0(1): push %rbx
51c1(7): lea 0xf9a(%rip),%rsi
51c8(5): mov $0x5,%edx
51cd(2): xor %edi,%edi
51cf(5): call 0xffffc2c1(%rip)
51d4(7): lea 0xf9c(%rip),%rdx
51db(3): mov %rax,%rsi
51de(5): mov $0x1,%edi
51e3(2): xor %eax,%eax
51e5(5): call 0xffffc44b(%rip)
51ea(7): lea 0xf9c(%rip),%rsi
51f1(5): mov $0x5,%edx
51f6(2): xor %edi,%edi
51f8(5): call 0xffffc298(%rip)
51fd(7): lea 0x8d4(%rip),%rcx
5204(7): lea 0x6b5(%rip),%rdx
520b(3): mov %rax,%rsi
520e(5): mov $0x1,%edi
5213(2): xor %eax,%eax
5215(5): call 0xffffc41b(%rip)
521a(7): mov 0x202e67(%rip),%rbx
5221(7): lea 0x1198(%rip),%rsi
5228(2): xor %edi,%edi
522a(5): mov $0x5,%edx
522f(5): call 0xffffc261(%rip)
5234(3): mov %rbx,%rsi
5237(3): mov %rax,%rdi
523a(1): pop %rbx
523b(5): jmp 0xffffc345(%rip)

"xmalloc" :
5240(1): push %rbx
5241(3): mov %rdi,%rbx
5244(5): call 0xffffc38c(%rip)
5249(3): test %rax,%rax
524c(2): jnz 0x7(%rip)
524e(3): test %rbx,%rbx
5251(2): jnz 0x4(%rip)
5253(1): pop %rbx
5254(1): ret near (%rsp)
5255(5): call 0x23b(%rip)

"xnmalloc" :
5260(3): mov %rdi,%rax
5263(3): mul %rax,%rsi,%rdx
5266(3): mov %rax,%rdi
5269(3): seto %al
526c(3): test %rdi,%rdi
526f(2): js 0xc(%rip)
5271(3): movzx %al,%eax
5274(3): test %rax,%rax
5277(2): jnz 0x4(%rip)
5279(2): jmp 0xffffffc7(%rip)
527b(4): sub $0x8,%rsp
527f(5): call 0x211(%rip)

"xrealloc" :
52a0(3): test %rsi,%rsi
52a3(1): push %rbx
52a4(3): mov %rsi,%rbx
52a7(2): jnz 0x7(%rip)
52a9(3): test %rdi,%rdi
52ac(2): jnz 0x1c(%rip)
52ae(3): mov %rbx,%rsi
52b1(5): call 0xffffc35f(%rip)
52b6(3): test %rax,%rax
52b9(2): jnz 0x7(%rip)
52bb(3): test %rbx,%rbx
52be(2): jnz 0x13(%rip)
52c0(1): pop %rbx
52c1(1): ret near (%rsp)
52c2(6): nop 0x0(%rax,%rax,1)
52c8(5): call 0xffffc128(%rip)
52cd(2): xor %eax,%eax
52cf(1): pop %rbx
52d0(1): ret near (%rsp)
52d1(5): call 0x1bf(%rip)

"xnrealloc" :
52e0(3): mov %rsi,%rax
52e3(3): mul %rax,%rdx,%rdx
52e6(3): mov %rax,%rsi
52e9(3): seto %al
52ec(3): test %rsi,%rsi
52ef(2): js 0xc(%rip)
52f1(3): movzx %al,%eax
52f4(3): test %rax,%rax
52f7(2): jnz 0x4(%rip)
52f9(2): jmp 0xffffffa7(%rip)
52fb(4): sub $0x8,%rsp
52ff(5): call 0x191(%rip)

"x2nrealloc" :
5310(3): test %rdi,%rdi
5313(3): mov %rdx,%r9
5316(3): mov (%rsi),%rcx
5319(2): jz 0x37(%rip)
531b(2): xor %edx,%edx
531d(a): mov $0x6148914691236517204,%rax
5327(3): div %r9,%rax
532a(3): cmp %rcx,%rax
532d(2): jbe 0x3e(%rip)
532f(3): mov %rcx,%rax
5332(3): shr $0x1,%rax
5335(5): lea 0x1(%rax,%rcx,1),%rcx
533a(3): mov %rcx,(%rsi)
533d(4): imul %r9,%rcx
5341(3): mov %rcx,%rsi
5344(5): jmp 0xffffff5c(%rip)
5349(7): nop 0x0(%rax)
5350(3): test %rcx,%rcx
5353(2): jz 0x25(%rip)
5355(3): mov %rcx,%rax
5358(3): mul %rax,%r9,%rdx
535b(3): seto %dl
535e(3): test %rax,%rax
5361(3): movzx %dl,%edx
5364(2): js 0x7(%rip)
5366(3): test %rdx,%rdx
5369(2): jz 0xffffffd1(%rip)
536b(4): sub $0x8,%rsp
536f(5): call 0x121(%rip)
5374(4): nop 0x0(%rax)
5378(2): xor %edx,%edx
537a(5): mov $0x80,%eax
537f(3): xor %r8d,%r8d
5382(3): div %r9,%rax
5385(3): test %rax,%rax
5388(4): setz %r8b
538c(4): lea 0x0(%r8,%rax,1),%rcx
5390(2): jmp 0xffffffc5(%rip)

"x2realloc" :
53a0(3): test %rdi,%rdi
53a3(3): mov (%rsi),%rax
53a6(2): jz 0x2a(%rip)
53a8(a): mov $0x6148914691236517203,%rdx
53b2(3): cmp %rdx,%rax
53b5(2): jnbe 0x2c(%rip)
53b7(3): mov %rax,%rdx
53ba(3): shr $0x1,%rdx
53bd(5): lea 0x1(%rdx,%rax,1),%rax
53c2(3): mov %rax,(%rsi)
53c5(3): mov %rax,%rsi
53c8(5): jmp 0xfffffed8(%rip)
53cd(3): nop (%rax)
53d0(3): test %rax,%rax
53d3(5): mov $0x80,%edx
53d8(4): cmove %rdx,%rax
53dc(3): test %rax,%rax
53df(2): jns 0xffffffe3(%rip)
53e1(4): sub $0x8,%rsp
53e5(5): call 0xab(%rip)

"xzalloc" :
53f0(1): push %rbx
53f1(3): mov %rdi,%rbx
53f4(5): call 0xfffffe4c(%rip)
53f9(3): mov %rbx,%rdx
53fc(2): xor %esi,%esi
53fe(3): mov %rax,%rdi
5401(1): pop %rbx
5402(5): jmp 0xffffc12e(%rip)

"xcalloc" :
5410(3): mov %rdi,%rax
5413(4): sub $0x8,%rsp
5417(3): mul %rax,%rsi,%rdx
541a(3): seto %dl
541d(3): test %rax,%rax
5420(2): js 0x19(%rip)
5422(3): movzx %dl,%edx
5425(3): test %rdx,%rdx
5428(2): jnz 0x11(%rip)
542a(5): call 0xffffc166(%rip)
542f(3): test %rax,%rax
5432(2): jz 0x7(%rip)
5434(4): add $0x8,%rsp
5438(1): ret near (%rsp)
5439(5): call 0x57(%rip)

"xmemdup" :
5440(1): push %rbp
5441(1): push %rbx
5442(3): mov %rdi,%rbp
5445(3): mov %rsi,%rdi
5448(3): mov %rsi,%rbx
544b(4): sub $0x8,%rsp
544f(5): call 0xfffffdf1(%rip)
5454(4): add $0x8,%rsp
5458(3): mov %rbx,%rdx
545b(3): mov %rbp,%rsi
545e(1): pop %rbx
545f(1): pop %rbp
5460(3): mov %rax,%rdi
5463(5): jmp 0xffffc14d(%rip)

"xstrdup" :
5470(1): push %rbx
5471(3): mov %rdi,%rbx
5474(5): call 0xffffc03c(%rip)
5479(3): mov %rbx,%rdi
547c(4): lea 0x1(%rax),%rsi
5480(1): pop %rbx
5481(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5490(7): lea 0xfd8(%rip),%rsi
5497(4): sub $0x8,%rsp
549b(5): mov $0x5,%edx
54a0(2): xor %edi,%edi
54a2(5): call 0xffffbfee(%rip)
54a7(6): mov 0x202b6b(%rip),%edi
54ad(7): lea 0x723(%rip),%rdx
54b4(3): mov %rax,%rcx
54b7(2): xor %esi,%esi
54b9(2): xor %eax,%eax
54bb(5): call 0xffffc185(%rip)
54c0(5): call 0xffffbf40(%rip)

"rpl_fclose" :
54d0(2): push %r12
54d2(1): push %rbp
54d3(1): push %rbx
54d4(3): mov %rdi,%rbx
54d7(5): call 0xffffc0e9(%rip)
54dc(2): test %eax,%eax
54de(3): mov %rbx,%rdi
54e1(2): js 0x56(%rip)
54e3(5): call 0xffffc11d(%rip)
54e8(2): test %eax,%eax
54ea(2): jnz 0x2e(%rip)
54ec(3): mov %rbx,%rdi
54ef(5): call 0x61(%rip)
54f4(2): test %eax,%eax
54f6(2): jz 0x3e(%rip)
54f8(5): call 0xffffbf18(%rip)
54fd(3): mov (%rax),%r12d
5500(3): mov %rbx,%rdi
5503(3): mov %rax,%rbp
5506(5): call 0xffffbf6a(%rip)
550b(3): test %r12d,%r12d
550e(2): jnz 0x32(%rip)
5510(1): pop %rbx
5511(1): pop %rbp
5512(2): pop %r12
5514(1): ret near (%rsp)
5515(3): nop (%rax)
5518(3): mov %rbx,%rdi
551b(5): call 0xffffc0a5(%rip)
5520(2): xor %esi,%esi
5522(5): mov $0x1,%edx
5527(2): mov %eax,%edi
5529(5): call 0xffffbfe7(%rip)
552e(4): cmp $0xffffffff,%rax
5532(2): jnz 0xffffffba(%rip)
5534(3): mov %rbx,%rdi
5537(1): pop %rbx
5538(1): pop %rbp
5539(2): pop %r12
553b(5): jmp 0xffffbf35(%rip)
5540(4): mov %r12d,0x0(%rbp)
5544(5): mov $0xffffffff,%eax
5549(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5550(3): test %rdi,%rdi
5553(1): push %rbx
5554(3): mov %rdi,%rbx
5557(2): jz 0x13(%rip)
5559(5): call 0xffffc0a7(%rip)
555e(2): test %eax,%eax
5560(2): jz 0xa(%rip)
5562(6): test $0x100,(%rbx)
5568(2): jnz 0x10(%rip)
556a(3): mov %rbx,%rdi
556d(1): pop %rbx
556e(5): jmp 0xffffc072(%rip)
5573(5): nop 0x0(%rax,%rax,1)
5578(3): mov %rbx,%rdi
557b(5): mov $0x1,%edx
5580(2): xor %esi,%esi
5582(5): call 0xe(%rip)
5587(3): mov %rbx,%rdi
558a(1): pop %rbx
558b(5): jmp 0xffffc055(%rip)

"rpl_fseeko" :
5590(4): mov 0x8(%rdi),%rax
5594(4): cmp %rax,0x10(%rdi)
5598(2): jz 0x8(%rip)
559a(5): jmp 0xffffc0c6(%rip)
559f(1): nop 
55a0(4): mov 0x20(%rdi),%rax
55a4(4): cmp %rax,0x28(%rdi)
55a8(2): jnz 0xfffffff2(%rip)
55aa(5): cmp $0x0,0x48(%rdi)
55af(2): jnz 0xffffffeb(%rip)
55b1(2): push %r12
55b3(1): push %rbp
55b4(3): mov %edx,%r12d
55b7(1): push %rbx
55b8(3): mov %rsi,%rbp
55bb(3): mov %rdi,%rbx
55be(5): call 0xffffc002(%rip)
55c3(3): mov %r12d,%edx
55c6(3): mov %rbp,%rsi
55c9(2): mov %eax,%edi
55cb(5): call 0xffffbf45(%rip)
55d0(4): cmp $0xffffffff,%rax
55d4(2): jz 0xe(%rip)
55d6(3): and $0xef,(%rbx)
55d9(7): mov %rax,0x90(%rbx)
55e0(2): xor %eax,%eax
55e2(1): pop %rbx
55e3(1): pop %rbp
55e4(2): pop %r12
55e6(1): ret near (%rsp)

"rpl_mbrtowc" :
55f0(2): push %r13
55f2(2): push %r12
55f4(3): mov %rsi,%r13
55f7(1): push %rbp
55f8(1): push %rbx
55f9(3): mov %rdi,%rbx
55fc(3): mov %rdx,%r12
55ff(4): sub $0x18,%rsp
5603(9): mov $0x28,%rax
560c(5): mov %rax,0x8(%rsp)
5611(2): xor %eax,%eax
5613(5): lea 0x4(%rsp),%rax
5618(3): test %rdi,%rdi
561b(4): cmove %rax,%rbx
561f(3): mov %rbx,%rdi
5622(5): call 0xffffbebe(%rip)
5627(4): cmp $0xfffffffd,%rax
562b(3): mov %rax,%rbp
562e(2): jbe 0x22(%rip)
5630(3): test %r12,%r12
5633(2): jz 0x1d(%rip)
5635(2): xor %edi,%edi
5637(5): call 0xc9(%rip)
563c(2): test %al,%al
563e(2): jnz 0x12(%rip)
5640(5): movzx 0x0(%r13),%eax
5645(5): mov $0x1,%ebp
564a(2): mov %eax,(%rbx)
564c(4): nop 0x0(%rax)
5650(5): mov 0x8(%rsp),%rdx
5655(9): xor $0x28,%rdx
565e(3): mov %rbp,%rax
5661(2): jnz 0xd(%rip)
5663(4): add $0x18,%rsp
5667(1): pop %rbx
5668(1): pop %rbp
5669(2): pop %r12
566b(2): pop %r13
566d(1): ret near (%rsp)
566e(5): call 0xffffbe52(%rip)

"close_stream" :
5680(2): push %r12
5682(1): push %rbp
5683(3): mov %rdi,%rbp
5686(1): push %rbx
5687(5): call 0xffffbdb9(%rip)
568c(3): mov 0x0(%rbp),%ebx
568f(3): mov %rbp,%rdi
5692(3): mov %rax,%r12
5695(5): call 0xfffffe3b(%rip)
569a(3): and $0x20,%ebx
569d(2): test %ebx,%ebx
569f(2): jnz 0x19(%rip)
56a1(2): test %eax,%eax
56a3(2): jz 0xc(%rip)
56a5(3): test %r12,%r12
56a8(5): mov $0xffffffff,%eax
56ad(2): jz 0x3b(%rip)
56af(1): pop %rbx
56b0(1): pop %rbp
56b1(2): pop %r12
56b3(1): ret near (%rsp)
56b4(4): nop 0x0(%rax)
56b8(2): test %eax,%eax
56ba(2): jnz 0x1e(%rip)
56bc(5): call 0xffffbd54(%rip)
56c1(6): mov $0x0,(%rax)
56c7(5): mov $0xffffffff,%eax
56cc(1): pop %rbx
56cd(1): pop %rbp
56ce(2): pop %r12
56d0(1): ret near (%rsp)
56d1(7): nop 0x0(%rax)
56d8(1): pop %rbx
56d9(5): mov $0xffffffff,%eax
56de(1): pop %rbp
56df(2): pop %r12
56e1(1): ret near (%rsp)
56e2(6): nop 0x0(%rax,%rax,1)
56e8(5): call 0xffffbd28(%rip)
56ed(3): cmp $0x9,(%rax)
56f0(1): pop %rbx
56f1(1): pop %rbp
56f2(2): pop %r12
56f4(3): setnz %al
56f7(3): movzx %al,%eax
56fa(2): neg %eax
56fc(1): ret near (%rsp)

"hard_locale" :
5700(4): sub $0x8,%rsp
5704(2): xor %esi,%esi
5706(5): call 0xffffbf1a(%rip)
570b(3): mov %rax,%rdx
570e(5): mov $0x1,%eax
5713(3): test %rdx,%rdx
5716(2): jz 0x1f(%rip)
5718(7): lea 0xd61(%rip),%rdi
571f(5): mov $0x2,%ecx
5724(3): mov %rdx,%rsi
5727(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5729(3): setnbe %cl
572c(3): sbb $0x0,%cl
572f(2): xor %eax,%eax
5731(2): test %cl,%cl
5733(2): jnz 0xd(%rip)
5735(4): add $0x8,%rsp
5739(1): ret near (%rsp)
573a(6): nop 0x0(%rax,%rax,1)
5740(7): lea 0xd3b(%rip),%rdi
5747(5): mov $0x6,%ecx
574c(3): mov %rdx,%rsi
574f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5751(3): setnbe %al
5754(2): sbb $0x0,%al
5756(2): test %al,%al
5758(3): setnz %al
575b(4): add $0x8,%rsp
575f(1): ret near (%rsp)

"locale_charset" :
5760(4): sub $0x8,%rsp
5764(5): mov $0xe,%edi
5769(5): call 0xffffbe87(%rip)
576e(3): test %rax,%rax
5771(2): jz 0x1f(%rip)
5773(3): cmp $0x0,(%rax)
5776(7): lea 0xd0b(%rip),%rdx
577d(4): cmove %rdx,%rax
5781(4): add $0x8,%rsp
5785(1): ret near (%rsp)
5786(a): nop 0x0(%rax,%rax,1)
5790(7): lea 0xcf1(%rip),%rax
5797(4): add $0x8,%rsp
579b(1): ret near (%rsp)

"__libc_csu_init" :
57a0(2): push %r15
57a2(2): push %r14
57a4(3): mov %rdx,%r15
57a7(2): push %r13
57a9(2): push %r12
57ab(7): lea 0x2023be(%rip),%r12
57b2(1): push %rbp
57b3(7): lea 0x2023be(%rip),%rbp
57ba(1): push %rbx
57bb(3): mov %edi,%r13d
57be(3): mov %rsi,%r14
57c1(3): sub %r12,%rbp
57c4(4): sub $0x8,%rsp
57c8(4): sar $0x3,%rbp
57cc(5): call 0xffffbbec(%rip)
57d1(3): test %rbp,%rbp
57d4(2): jz 0x22(%rip)
57d6(2): xor %ebx,%ebx
57d8(8): nop 0x0(%rax,%rax,1)
57e0(3): mov %r15,%rdx
57e3(3): mov %r14,%rsi
57e6(3): mov %r13d,%edi
57e9(4): call 0x0(%r12,%rbx,8)
57ed(4): add $0x1,%rbx
57f1(3): cmp %rbx,%rbp
57f4(2): jnz 0xffffffec(%rip)
57f6(4): add $0x8,%rsp
57fa(1): pop %rbx
57fb(1): pop %rbp
57fc(2): pop %r12
57fe(2): pop %r13
5800(2): pop %r14
5802(2): pop %r15
5804(1): ret near (%rsp)

"atexit" :
5820(7): mov 0x2027e1(%rip),%rdx
5827(2): xor %esi,%esi
5829(5): jmp 0xffffbe47(%rip)

"_fini" :
5830(4): sub $0x8,%rsp
5834(4): add $0x8,%rsp
5838(1): ret near (%rsp)

