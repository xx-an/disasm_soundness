
"__ctype_toupper_loc@plt" :
1820(6): jmp 0x20859a(%rip)
1826(5): push $0x0

"utmpxname@plt" :
1830(6): jmp 0x208592(%rip)
1836(5): push $0x1

"getenv@plt" :
1840(6): jmp 0x20858a(%rip)
1846(5): push $0x2

"free@plt" :
1850(6): jmp 0x208582(%rip)
1856(5): push $0x3

"localtime@plt" :
1860(6): jmp 0x20857a(%rip)
1866(5): push $0x4

"abort@plt" :
1870(6): jmp 0x208572(%rip)
1876(5): push $0x5

"__errno_location@plt" :
1880(6): jmp 0x20856a(%rip)
1886(5): push $0x6

"strncpy@plt" :
1890(6): jmp 0x208562(%rip)
1896(5): push $0x7

"strncmp@plt" :
18a0(6): jmp 0x20855a(%rip)
18a6(5): push $0x8

"localtime_r@plt" :
18b0(6): jmp 0x208552(%rip)
18b6(5): push $0x9

"_exit@plt" :
18c0(6): jmp 0x20854a(%rip)
18c6(5): push $0xa

"__fpending@plt" :
18d0(6): jmp 0x208542(%rip)
18d6(5): push $0xb

"setenv@plt" :
18e0(6): jmp 0x20853a(%rip)
18e6(5): push $0xc

"textdomain@plt" :
18f0(6): jmp 0x208532(%rip)
18f6(5): push $0xd

"endutxent@plt" :
1900(6): jmp 0x20852a(%rip)
1906(5): push $0xe

"strtod_l@plt" :
1910(6): jmp 0x208522(%rip)
1916(5): push $0xf

"fclose@plt" :
1920(6): jmp 0x20851a(%rip)
1926(5): push $0x10

"getloadavg@plt" :
1930(6): jmp 0x208512(%rip)
1936(5): push $0x11

"bindtextdomain@plt" :
1940(6): jmp 0x20850a(%rip)
1946(5): push $0x12

"dcgettext@plt" :
1950(6): jmp 0x208502(%rip)
1956(5): push $0x13

"__ctype_get_mb_cur_max@plt" :
1960(6): jmp 0x2084fa(%rip)
1966(5): push $0x14

"strlen@plt" :
1970(6): jmp 0x2084f2(%rip)
1976(5): push $0x15

"__stack_chk_fail@plt" :
1980(6): jmp 0x2084ea(%rip)
1986(5): push $0x16

"getopt_long@plt" :
1990(6): jmp 0x2084e2(%rip)
1996(5): push $0x17

"mbrtowc@plt" :
19a0(6): jmp 0x2084da(%rip)
19a6(5): push $0x18

"newlocale@plt" :
19b0(6): jmp 0x2084d2(%rip)
19b6(5): push $0x19

"__overflow@plt" :
19c0(6): jmp 0x2084ca(%rip)
19c6(5): push $0x1a

"strrchr@plt" :
19d0(6): jmp 0x2084c2(%rip)
19d6(5): push $0x1b

"gmtime_r@plt" :
19e0(6): jmp 0x2084ba(%rip)
19e6(5): push $0x1c

"lseek@plt" :
19f0(6): jmp 0x2084b2(%rip)
19f6(5): push $0x1d

"memset@plt" :
1a00(6): jmp 0x2084aa(%rip)
1a06(5): push $0x1e

"fputc@plt" :
1a10(6): jmp 0x2084a2(%rip)
1a16(5): push $0x1f

"memcmp@plt" :
1a20(6): jmp 0x20849a(%rip)
1a26(5): push $0x20

"fputs_unlocked@plt" :
1a30(6): jmp 0x208492(%rip)
1a36(5): push $0x21

"calloc@plt" :
1a40(6): jmp 0x20848a(%rip)
1a46(5): push $0x22

"strcmp@plt" :
1a50(6): jmp 0x208482(%rip)
1a56(5): push $0x23

"setutxent@plt" :
1a60(6): jmp 0x20847a(%rip)
1a66(5): push $0x24

"memcpy@plt" :
1a70(6): jmp 0x208472(%rip)
1a76(5): push $0x25

"tzset@plt" :
1a80(6): jmp 0x20846a(%rip)
1a86(5): push $0x26

"kill@plt" :
1a90(6): jmp 0x208462(%rip)
1a96(5): push $0x27

"time@plt" :
1aa0(6): jmp 0x20845a(%rip)
1aa6(5): push $0x28

"fileno@plt" :
1ab0(6): jmp 0x208452(%rip)
1ab6(5): push $0x29

"fgets_unlocked@plt" :
1ac0(6): jmp 0x20844a(%rip)
1ac6(5): push $0x2a

"malloc@plt" :
1ad0(6): jmp 0x208442(%rip)
1ad6(5): push $0x2b

"fflush@plt" :
1ae0(6): jmp 0x20843a(%rip)
1ae6(5): push $0x2c

"nl_langinfo@plt" :
1af0(6): jmp 0x208432(%rip)
1af6(5): push $0x2d

"mktime@plt" :
1b00(6): jmp 0x20842a(%rip)
1b06(5): push $0x2e

"__freading@plt" :
1b10(6): jmp 0x208422(%rip)
1b16(5): push $0x2f

"realloc@plt" :
1b20(6): jmp 0x20841a(%rip)
1b26(5): push $0x30

"setlocale@plt" :
1b30(6): jmp 0x208412(%rip)
1b36(5): push $0x31

"__printf_chk@plt" :
1b40(6): jmp 0x20840a(%rip)
1b46(5): push $0x32

"timegm@plt" :
1b50(6): jmp 0x208402(%rip)
1b56(5): push $0x33

"strftime@plt" :
1b60(6): jmp 0x2083fa(%rip)
1b66(5): push $0x34

"getutxent@plt" :
1b70(6): jmp 0x2083f2(%rip)
1b76(5): push $0x35

"error@plt" :
1b80(6): jmp 0x2083ea(%rip)
1b86(5): push $0x36

"fseeko@plt" :
1b90(6): jmp 0x2083e2(%rip)
1b96(5): push $0x37

"fopen@plt" :
1ba0(6): jmp 0x2083da(%rip)
1ba6(5): push $0x38

"dcngettext@plt" :
1bb0(6): jmp 0x2083d2(%rip)
1bb6(5): push $0x39

"unsetenv@plt" :
1bc0(6): jmp 0x2083ca(%rip)
1bc6(5): push $0x3a

"__cxa_atexit@plt" :
1bd0(6): jmp 0x2083c2(%rip)
1bd6(5): push $0x3b

"exit@plt" :
1be0(6): jmp 0x2083ba(%rip)
1be6(5): push $0x3c

"fwrite@plt" :
1bf0(6): jmp 0x2083b2(%rip)
1bf6(5): push $0x3d

"__fprintf_chk@plt" :
1c00(6): jmp 0x2083aa(%rip)
1c06(5): push $0x3e

"mbsinit@plt" :
1c10(6): jmp 0x2083a2(%rip)
1c16(5): push $0x3f

"iswprint@plt" :
1c20(6): jmp 0x20839a(%rip)
1c26(5): push $0x40

"__ctype_tolower_loc@plt" :
1c30(6): jmp 0x208392(%rip)
1c36(5): push $0x41

"__ctype_b_loc@plt" :
1c40(6): jmp 0x20838a(%rip)
1c46(5): push $0x42

".plt.got" :
1c50(6): jmp 0x2083a2(%rip)
1c56(2): nop 

"_init" :
17f8(4): sub $0x8,%rsp
17fc(7): mov 0x2087e5(%rip),%rax
1803(3): test %rax,%rax
1806(2): jz 0x4(%rip)
1808(2): call %rax
180a(4): add $0x8,%rsp
180e(1): ret near (%rsp)

"main" :
1c60(1): push %rbp
1c61(1): push %rbx
1c62(2): mov %edi,%ebx
1c64(3): mov %rsi,%rbp
1c67(4): sub $0x8,%rsp
1c6b(3): mov (%rsi),%rdi
1c6e(5): call 0x2b82(%rip)
1c73(7): lea 0x6887(%rip),%rsi
1c7a(5): mov $0x6,%edi
1c7f(5): call 0xfffffeb1(%rip)
1c84(7): lea 0x5dd6(%rip),%rsi
1c8b(7): lea 0x5da6(%rip),%rdi
1c92(5): call 0xfffffcae(%rip)
1c97(7): lea 0x5d9a(%rip),%rdi
1c9e(5): call 0xfffffc52(%rip)
1ca3(7): lea 0xae6(%rip),%rdi
1caa(5): call 0x5be6(%rip)
1caf(7): lea 0x5dc3(%rip),%rax
1cb6(4): sub $0x8,%rsp
1cba(7): mov 0x20834f(%rip),%r8
1cc1(2): push $0x0
1cc3(7): lea 0x5d6a(%rip),%rcx
1cca(7): lea 0x5bf9(%rip),%rdx
1cd1(1): push %rax
1cd2(7): lea 0x5dac(%rip),%rax
1cd9(2): mov %ebx,%edi
1cdb(6): mov $0x1,%r9d
1ce1(3): mov %rbp,%rsi
1ce4(1): push %rax
1ce5(7): lea 0x5da9(%rip),%rax
1cec(1): push %rax
1ced(7): lea 0x66c(%rip),%rax
1cf4(1): push %rax
1cf5(2): xor %eax,%eax
1cf7(5): call 0x29b9(%rip)
1cfc(7): movsxd 0x20838d(%rip),%rax
1d03(4): add $0x30,%rsp
1d07(2): sub %eax,%ebx
1d09(2): jz 0x1c(%rip)
1d0b(3): sub $0x1,%ebx
1d0e(2): jnz 0x2a(%rip)
1d10(5): mov 0x0(%rbp,%rax,8),%rdi
1d15(2): xor %esi,%esi
1d17(5): call 0x5b9(%rip)
1d1c(4): add $0x8,%rsp
1d20(2): xor %eax,%eax
1d22(1): pop %rbx
1d23(1): pop %rbp
1d24(1): ret near (%rsp)
1d25(7): lea 0x5c84(%rip),%rdi
1d2c(5): mov $0x1,%esi
1d31(5): call 0x59f(%rip)
1d36(2): jmp 0xffffffe6(%rip)
1d38(5): mov 0x8(%rbp,%rax,8),%rdi
1d3d(5): call 0x47c3(%rip)
1d42(7): lea 0x5d5d(%rip),%rsi
1d49(3): mov %rax,%rbx
1d4c(5): mov $0x5,%edx
1d51(2): xor %edi,%edi
1d53(5): call 0xfffffbfd(%rip)
1d58(2): xor %edi,%edi
1d5a(3): mov %rax,%rdx
1d5d(3): mov %rbx,%rcx
1d60(2): xor %esi,%esi
1d62(2): xor %eax,%eax
1d64(5): call 0xfffffe1c(%rip)
1d69(5): mov $0x1,%edi
1d6e(5): call 0x5f2(%rip)

"_start" :
1d80(2): xor %ebp,%ebp
1d82(3): mov %rdx,%r9
1d85(1): pop %rsi
1d86(3): mov %rsp,%rdx
1d89(4): and $0xfffffff0,%rsp
1d8d(1): push %rax
1d8e(1): push %rsp
1d8f(7): lea 0x5aea(%rip),%r8
1d96(7): lea 0x5a73(%rip),%rcx
1d9d(7): lea 0xfffffebc(%rip),%rdi
1da4(6): call 0x208236(%rip)
1daa(1): hlt 

"deregister_tm_clones" :
1db0(7): lea 0x2082c9(%rip),%rdi
1db7(1): push %rbp
1db8(7): lea 0x2082c1(%rip),%rax
1dbf(3): cmp %rdi,%rax
1dc2(3): mov %rsp,%rbp
1dc5(2): jz 0x1b(%rip)
1dc7(7): mov 0x20820a(%rip),%rax
1dce(3): test %rax,%rax
1dd1(2): jz 0xf(%rip)
1dd3(1): pop %rbp
1dd4(2): jmp %rax
1dd6(a): nop 0x0(%rax,%rax,1)
1de0(1): pop %rbp
1de1(1): ret near (%rsp)

"register_tm_clones" :
1df0(7): lea 0x208289(%rip),%rdi
1df7(7): lea 0x208282(%rip),%rsi
1dfe(1): push %rbp
1dff(3): sub %rdi,%rsi
1e02(3): mov %rsp,%rbp
1e05(4): sar $0x3,%rsi
1e09(3): mov %rsi,%rax
1e0c(4): shr $0x3f,%rax
1e10(3): add %rax,%rsi
1e13(3): sar $0x1,%rsi
1e16(2): jz 0x1a(%rip)
1e18(7): mov 0x2081d1(%rip),%rax
1e1f(3): test %rax,%rax
1e22(2): jz 0xe(%rip)
1e24(1): pop %rbp
1e25(2): jmp %rax
1e27(9): nop 0x0(%rax,%rax,1)
1e30(1): pop %rbp
1e31(1): ret near (%rsp)

"__do_global_dtors_aux" :
1e40(7): cmp $0x0,0x208281(%rip)
1e47(2): jnz 0x31(%rip)
1e49(8): cmp $0x0,0x2081a7(%rip)
1e51(1): push %rbp
1e52(3): mov %rsp,%rbp
1e55(2): jz 0xe(%rip)
1e57(7): mov 0x2081aa(%rip),%rdi
1e5e(5): call 0xfffffdf2(%rip)
1e63(5): call 0xffffff4d(%rip)
1e68(7): mov $0x1,0x208259(%rip)
1e6f(1): pop %rbp
1e70(1): ret near (%rsp)
1e71(7): nop 0x0(%rax)
1e78(2): REP ret near (%rsp)

"frame_dummy" :
1e80(1): push %rbp
1e81(3): mov %rsp,%rbp
1e84(1): pop %rbp
1e85(5): jmp 0xffffff6b(%rip)

"print_uptime" :
1e90(2): push %r15
1e92(2): push %r14
1e94(2): push %r13
1e96(2): push %r12
1e98(3): mov %rdi,%r12
1e9b(1): push %rbp
1e9c(1): push %rbx
1e9d(7): lea 0x5a20(%rip),%rdi
1ea4(3): mov %rsi,%rbx
1ea7(7): lea 0x5ab7(%rip),%rsi
1eae(5): lea 0xffffffff(%r12),%rbp
1eb3(7): sub $0x2058,%rsp
1eba(9): mov $0x28,%rax
1ec3(8): mov %rax,0x2048(%rsp)
1ecb(2): xor %eax,%eax
1ecd(5): call 0xfffffcd3(%rip)
1ed2(3): test %rax,%rax
1ed5(2): jz 0x2b(%rip)
1ed7(5): lea 0x40(%rsp),%r13
1edc(3): mov %rax,%rdx
1edf(5): mov $0x2000,%esi
1ee4(3): mov %rax,%r15
1ee7(3): mov %r13,%rdi
1eea(5): call 0xfffffbd6(%rip)
1eef(3): cmp %r13,%rax
1ef2(6): jz 0x30b(%rip)
1ef8(3): mov %r15,%rdi
1efb(5): call 0x4ed5(%rip)
1f00(3): xor %r13d,%r13d
1f03(3): test %r12,%r12
1f06(6): jz 0x365(%rip)
1f0c(3): xor %r14d,%r14d
1f0f(3): xor %r12d,%r12d
1f12(2): jmp 0x24(%rip)
1f14(4): nop 0x0(%rax)
1f18(4): cmp $0x2,%ax
1f1c(2): jnz 0x9(%rip)
1f1e(7): movsxd 0x154(%rbx),%r14
1f25(4): sub $0x1,%rbp
1f29(7): add $0x180,%rbx
1f30(4): cmp $0xffffffff,%rbp
1f34(2): jz 0x1c(%rip)
1f36(4): cmp $0x0,0x2c(%rbx)
1f3a(3): movzx (%rbx),%eax
1f3d(2): jz 0xffffffdb(%rip)
1f3f(4): cmp $0x7,%ax
1f43(2): jnz 0xffffffd5(%rip)
1f45(4): add $0x1,%r12
1f49(2): jmp 0xffffffdc(%rip)
1f4b(5): nop 0x0(%rax,%rax,1)
1f50(2): xor %edi,%edi
1f52(5): call 0xfffffb4e(%rip)
1f57(3): test %r13,%r13
1f5a(5): mov %rax,0x18(%rsp)
1f5f(2): jnz 0x11(%rip)
1f61(3): sub %r14,%rax
1f64(3): test %r14,%r14
1f67(3): mov %rax,%r13
1f6a(6): jz 0x30d(%rip)
1f70(5): lea 0x18(%rsp),%r14
1f75(3): mov %r13,%rax
1f78(a): mov $0x1749024623285053783,%rdx
1f82(3): mov %r14,%rdi
1f85(3): imul %rax,%rdx,%rdx
1f88(3): mov %r13,%rax
1f8b(4): sar $0x3f,%rax
1f8f(4): sar $0xd,%rdx
1f93(3): mov %rdx,%rbx
1f96(a): mov $0x5247073869855161349,%rdx
1fa0(3): sub %rax,%rbx
1fa3(7): imul %rbx,$0xfffeae80,%rsi
1faa(3): add %r13,%rsi
1fad(3): mov %rsi,%rax
1fb0(3): imul %rax,%rdx,%rdx
1fb3(3): mov %rsi,%rax
1fb6(4): sar $0x3f,%rax
1fba(4): sar $0xa,%rdx
1fbe(3): sub %rax,%rdx
1fc1(6): imul %edx,$0xe10,%eax
1fc7(3): mov %rdx,%rbp
1fca(a): mov $0x-8608480567731124087,%rdx
1fd4(2): cwde 
1fd6(3): sub %rax,%rsi
1fd9(3): mov %rsi,%rax
1fdc(3): imul %rax,%rdx,%rdx
1fdf(3): add %rsi,%rdx
1fe2(4): sar $0x3f,%rsi
1fe6(4): sar $0x5,%rdx
1fea(3): sub %rsi,%rdx
1fed(3): mov %rdx,%r15
1ff0(5): call 0xfffff870(%rip)
1ff5(3): test %rax,%rax
1ff8(3): mov %rax,%r14
1ffb(5): mov $0x5,%edx
2000(6): jz 0x188(%rip)
2006(7): lea 0x58db(%rip),%rsi
200d(2): xor %edi,%edi
200f(5): call 0xfffff941(%rip)
2014(7): mov 0x20806d(%rip),%rdi
201b(3): xor %r8d,%r8d
201e(2): xor %ecx,%ecx
2020(3): mov %r14,%rdx
2023(3): mov %rax,%rsi
2026(5): call 0x24fa(%rip)
202b(4): cmp $0xffffffff,%r13
202f(6): jz 0x1a7(%rip)
2035(3): test %rbx,%rbx
2038(6): jle 0x172(%rip)
203e(7): lea 0x58d0(%rip),%rdx
2045(7): lea 0x58e1(%rip),%rsi
204c(6): mov $0x5,%r8d
2052(3): mov %rbx,%rcx
2055(2): xor %edi,%edi
2057(5): call 0xfffffb59(%rip)
205c(3): mov %r15d,%r8d
205f(3): mov %rax,%rsi
2062(2): mov %ebp,%ecx
2064(3): mov %rbx,%rdx
2067(5): mov $0x1,%edi
206c(2): xor %eax,%eax
206e(5): call 0xfffffad2(%rip)
2073(7): lea 0x58da(%rip),%rdx
207a(7): lea 0x58dd(%rip),%rsi
2081(6): mov $0x5,%r8d
2087(3): mov %r12,%rcx
208a(2): xor %edi,%edi
208c(5): call 0xfffffb24(%rip)
2091(3): mov %r12,%rdx
2094(3): mov %rax,%rsi
2097(5): mov $0x1,%edi
209c(2): xor %eax,%eax
209e(5): call 0xfffffaa2(%rip)
20a3(5): lea 0x20(%rsp),%rdi
20a8(5): mov $0x3,%esi
20ad(5): call 0xfffff883(%rip)
20b2(3): cmp $0xff,%eax
20b5(2): mov %eax,%ebx
20b7(6): jz 0xac(%rip)
20bd(2): test %eax,%eax
20bf(2): jnle 0x2b(%rip)
20c1(8): mov 0x2048(%rsp),%rax
20c9(9): xor $0x28,%rax
20d2(6): jnz 0x1eb(%rip)
20d8(7): add $0x2058,%rsp
20df(1): pop %rbx
20e0(1): pop %rbp
20e1(2): pop %r12
20e3(2): pop %r13
20e5(2): pop %r14
20e7(2): pop %r15
20e9(1): ret near (%rsp)
20ea(6): movsd 0x20(%rsp),%xmm0
20f0(7): lea 0x5870(%rip),%rsi
20f7(2): xor %edi,%edi
20f9(5): mov $0x5,%edx
20fe(6): movsd %xmm0,0x8(%rsp)
2104(5): call 0xfffff84c(%rip)
2109(6): movsd 0x8(%rsp),%xmm0
210f(3): mov %rax,%rsi
2112(5): mov $0x1,%edi
2117(5): mov $0x1,%eax
211c(5): call 0xfffffa24(%rip)
2121(3): cmp $0x1,%ebx
2124(2): jz 0x3f(%rip)
2126(6): movsd 0x28(%rsp),%xmm0
212c(7): lea 0x584a(%rip),%rsi
2133(5): mov $0x1,%edi
2138(5): mov $0x1,%eax
213d(5): call 0xfffffa03(%rip)
2142(3): cmp $0x2,%ebx
2145(2): jz 0x1e(%rip)
2147(6): movsd 0x30(%rsp),%xmm0
214d(7): lea 0x5829(%rip),%rsi
2154(5): mov $0x1,%edi
2159(5): mov $0x1,%eax
215e(5): call 0xfffff9e2(%rip)
2163(7): mov 0x207f1e(%rip),%rdi
216a(4): mov 0x28(%rdi),%rax
216e(4): cmp 0x30(%rdi),%rax
2172(6): jnb 0x131(%rip)
2178(4): lea 0x1(%rax),%rdx
217c(4): mov %rdx,0x28(%rdi)
2180(3): mov $0xa,(%rax)
2183(5): jmp 0xffffff3e(%rip)
2188(7): lea 0x5765(%rip),%rsi
218f(2): xor %edi,%edi
2191(5): call 0xfffff7bf(%rip)
2196(5): mov $0x1,%edi
219b(3): mov %rax,%rsi
219e(2): xor %eax,%eax
21a0(5): call 0xfffff9a0(%rip)
21a5(5): jmp 0xfffffe86(%rip)
21aa(7): lea 0x5793(%rip),%rsi
21b1(2): xor %edi,%edi
21b3(5): mov $0x5,%edx
21b8(5): call 0xfffff798(%rip)
21bd(3): mov %r15d,%ecx
21c0(3): mov %rax,%rsi
21c3(2): mov %ebp,%edx
21c5(5): mov $0x1,%edi
21ca(2): xor %eax,%eax
21cc(5): call 0xfffff974(%rip)
21d1(5): jmp 0xfffffea2(%rip)
21d6(7): lea 0x5722(%rip),%rsi
21dd(2): xor %edi,%edi
21df(5): mov $0x5,%edx
21e4(5): call 0xfffff76c(%rip)
21e9(5): mov $0x1,%edi
21ee(3): mov %rax,%rsi
21f1(2): xor %eax,%eax
21f3(5): call 0xfffff94d(%rip)
21f8(5): jmp 0xfffffe7b(%rip)
21fd(5): lea 0x18(%rsp),%r14
2202(3): mov %rax,%rdi
2205(5): mov %rax,0x8(%rsp)
220a(3): mov %r14,%rsi
220d(5): call 0x4f3(%rip)
2212(5): mov 0x8(%rsp),%rax
2217(5): cmp %rax,0x18(%rsp)
221c(6): jz 0x9c(%rip)
2222(8): ucomisd 0x5b1e(%rip),%xmm0
222a(6): jb 0x88(%rip)
2230(8): movsd 0x5b18(%rip),%xmm1
2238(4): ucomisd %xmm0,%xmm1
223c(2): jbe 0x76(%rip)
223e(5): cvttsd2si %xmm0,%r13
2243(3): mov %r15,%rdi
2246(5): call 0x4b8a(%rip)
224b(3): test %r12,%r12
224e(6): jnz 0xfffffcbe(%rip)
2254(2): xor %edi,%edi
2256(5): call 0xfffff84a(%rip)
225b(3): test %r13,%r13
225e(5): mov %rax,0x18(%rsp)
2263(6): jnz 0xfffffd12(%rip)
2269(2): jmp 0xe(%rip)
226b(2): xor %edi,%edi
226d(5): call 0xfffff833(%rip)
2272(5): mov %rax,0x18(%rsp)
2277(7): lea 0x5653(%rip),%rsi
227e(5): mov $0x5,%edx
2283(2): xor %edi,%edi
2285(5): call 0xfffff6cb(%rip)
228a(3): mov %rax,%rbx
228d(5): call 0xfffff5f3(%rip)
2292(2): mov (%rax),%esi
2294(3): mov %rbx,%rdx
2297(5): mov $0x1,%edi
229c(2): xor %eax,%eax
229e(5): call 0xfffff8e2(%rip)
22a3(5): mov $0xa,%esi
22a8(5): call 0xfffff718(%rip)
22ad(5): jmp 0xfffffe14(%rip)
22b2(4): or $0xffffffff,%r13
22b6(2): jmp 0xffffff8d(%rip)
22b8(3): xor %r13d,%r13d
22bb(2): jmp 0xffffff88(%rip)
22bd(5): call 0xfffff6c3(%rip)

"uptime" :
22d0(1): push %rbx
22d1(2): mov %esi,%ecx
22d3(3): mov %rdi,%rbx
22d6(4): sub $0x20,%rsp
22da(5): lea 0x10(%rsp),%rdx
22df(5): lea 0x8(%rsp),%rsi
22e4(9): mov $0x0,0x10(%rsp)
22ed(9): mov $0x28,%rax
22f6(5): mov %rax,0x18(%rsp)
22fb(2): xor %eax,%eax
22fd(5): call 0x4ce3(%rip)
2302(2): test %eax,%eax
2304(2): jnz 0x27(%rip)
2306(5): mov 0x10(%rsp),%rsi
230b(5): mov 0x8(%rsp),%rdi
2310(5): call 0xfffffb80(%rip)
2315(5): mov 0x18(%rsp),%rax
231a(9): xor $0x28,%rax
2323(2): jnz 0x37(%rip)
2325(4): add $0x20,%rsp
2329(1): pop %rbx
232a(1): ret near (%rsp)
232b(3): mov %rbx,%rdx
232e(5): mov $0x3,%esi
2333(2): xor %edi,%edi
2335(5): call 0x3ffb(%rip)
233a(3): mov %rax,%rbx
233d(5): call 0xfffff543(%rip)
2342(2): mov (%rax),%esi
2344(7): lea 0x5a24(%rip),%rdx
234b(3): mov %rbx,%rcx
234e(5): mov $0x1,%edi
2353(2): xor %eax,%eax
2355(5): call 0xfffff82b(%rip)
235a(5): call 0xfffff626(%rip)

"usage" :
2360(2): push %r13
2362(2): push %r12
2364(5): mov $0x5,%edx
2369(1): push %rbp
236a(1): push %rbx
236b(2): mov %edi,%ebp
236d(7): sub $0x88,%rsp
2374(7): mov 0x207d6d(%rip),%rbx
237b(9): mov $0x28,%rax
2384(5): mov %rax,0x78(%rsp)
2389(2): xor %eax,%eax
238b(2): test %edi,%edi
238d(2): jz 0x30(%rip)
238f(7): lea 0x5722(%rip),%rsi
2396(2): xor %edi,%edi
2398(5): call 0xfffff5b8(%rip)
239d(7): mov 0x207d1c(%rip),%rdi
23a4(3): mov %rax,%rdx
23a7(3): mov %rbx,%rcx
23aa(5): mov $0x1,%esi
23af(2): xor %eax,%eax
23b1(5): call 0xfffff84f(%rip)
23b6(2): mov %ebp,%edi
23b8(5): call 0xfffff828(%rip)
23bd(7): lea 0x55c0(%rip),%rsi
23c4(2): xor %edi,%edi
23c6(5): call 0xfffff58a(%rip)
23cb(3): mov %rbx,%rdx
23ce(3): mov %rax,%rsi
23d1(5): mov $0x1,%edi
23d6(2): xor %eax,%eax
23d8(5): call 0xfffff768(%rip)
23dd(7): lea 0x56fc(%rip),%rsi
23e4(5): mov $0x5,%edx
23e9(2): xor %edi,%edi
23eb(5): call 0xfffff565(%rip)
23f0(5): mov $0x1,%edi
23f5(3): mov %rax,%rsi
23f8(2): xor %eax,%eax
23fa(5): call 0xfffff746(%rip)
23ff(7): lea 0x579a(%rip),%rsi
2406(5): mov $0x5,%edx
240b(2): xor %edi,%edi
240d(5): call 0xfffff543(%rip)
2412(5): mov $0x1,%edi
2417(3): mov %rax,%rsi
241a(2): xor %eax,%eax
241c(5): call 0xfffff724(%rip)
2421(7): lea 0x57d0(%rip),%rsi
2428(5): mov $0x5,%edx
242d(2): xor %edi,%edi
242f(5): call 0xfffff521(%rip)
2434(7): lea 0x5567(%rip),%rcx
243b(7): lea 0x556e(%rip),%rdx
2442(3): mov %rax,%rsi
2445(5): mov $0x1,%edi
244a(2): xor %eax,%eax
244c(5): call 0xfffff6f4(%rip)
2451(7): mov 0x207c30(%rip),%rbx
2458(7): lea 0x57d9(%rip),%rsi
245f(5): mov $0x5,%edx
2464(2): xor %edi,%edi
2466(5): call 0xfffff4ea(%rip)
246b(3): mov %rbx,%rsi
246e(3): mov %rax,%rdi
2471(5): call 0xfffff5bf(%rip)
2476(7): mov 0x207c0b(%rip),%rbx
247d(7): lea 0x57e4(%rip),%rsi
2484(5): mov $0x5,%edx
2489(2): xor %edi,%edi
248b(5): call 0xfffff4c5(%rip)
2490(3): mov %rbx,%rsi
2493(3): mov %rax,%rdi
2496(7): lea 0x556c(%rip),%rbx
249d(5): call 0xfffff593(%rip)
24a2(7): lea 0x5515(%rip),%rax
24a9(7): lea 0x554f(%rip),%rcx
24b0(5): mov %rbx,0x40(%rsp)
24b5(7): lea 0x540e(%rip),%rbx
24bc(9): mov $0x0,0x60(%rsp)
24c5(9): mov $0x0,0x68(%rsp)
24ce(4): mov %rax,(%rsp)
24d2(7): lea 0x54e7(%rip),%rax
24d9(5): mov %rcx,0x30(%rsp)
24de(7): lea 0x552e(%rip),%rcx
24e5(3): mov %rsp,%rdx
24e8(5): mov %rax,0x8(%rsp)
24ed(7): lea 0x5544(%rip),%rax
24f4(5): mov %rcx,0x50(%rsp)
24f9(5): mov %rax,0x10(%rsp)
24fe(7): lea 0x54cb(%rip),%rax
2505(5): mov %rax,0x18(%rsp)
250a(7): lea 0x54d5(%rip),%rax
2511(5): mov %rax,0x20(%rsp)
2516(7): lea 0x54d3(%rip),%rax
251d(5): mov %rax,0x28(%rsp)
2522(5): mov %rax,0x38(%rsp)
2527(5): mov %rax,0x48(%rsp)
252c(5): mov %rax,0x58(%rsp)
2531(7): nop 0x0(%rax)
2538(4): add $0x10,%rdx
253c(3): mov (%rdx),%rdi
253f(3): test %rdi,%rdi
2542(2): jz 0x15(%rip)
2544(5): mov $0x7,%ecx
2549(3): mov %rbx,%rsi
254c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
254e(3): setnbe %al
2551(2): sbb $0x0,%al
2553(2): test %al,%al
2555(2): jnz 0xffffffe3(%rip)
2557(4): mov 0x8(%rdx),%r12
255b(2): xor %edi,%edi
255d(5): mov $0x5,%edx
2562(7): lea 0x54b4(%rip),%rsi
2569(3): test %r12,%r12
256c(6): jz 0xc7(%rip)
2572(5): call 0xfffff3de(%rip)
2577(7): lea 0x5722(%rip),%rcx
257e(7): lea 0x54af(%rip),%rdx
2585(3): mov %rax,%rsi
2588(5): mov $0x1,%edi
258d(2): xor %eax,%eax
258f(5): call 0xfffff5b1(%rip)
2594(2): xor %esi,%esi
2596(5): mov $0x5,%edi
259b(5): call 0xfffff595(%rip)
25a0(3): test %rax,%rax
25a3(2): jz 0x1e(%rip)
25a5(7): lea 0x5496(%rip),%rsi
25ac(5): mov $0x3,%edx
25b1(3): mov %rax,%rdi
25b4(5): call 0xfffff2ec(%rip)
25b9(2): test %eax,%eax
25bb(6): jnz 0x10d(%rip)
25c1(7): lea 0x547e(%rip),%rsi
25c8(2): xor %edi,%edi
25ca(5): mov $0x5,%edx
25cf(5): call 0xfffff381(%rip)
25d4(7): lea 0x52ef(%rip),%rcx
25db(7): lea 0x56be(%rip),%rdx
25e2(3): mov %rax,%rsi
25e5(5): mov $0x1,%edi
25ea(2): xor %eax,%eax
25ec(5): call 0xfffff554(%rip)
25f1(3): cmp %rbx,%r12
25f4(7): lea 0x53df(%rip),%rcx
25fb(7): lea 0x5eff(%rip),%rbx
2602(4): cmove %rcx,%rbx
2606(7): lea 0x5703(%rip),%rsi
260d(2): xor %edi,%edi
260f(5): mov $0x5,%edx
2614(5): call 0xfffff33c(%rip)
2619(3): mov %rbx,%rcx
261c(3): mov %rax,%rsi
261f(3): mov %r12,%rdx
2622(5): mov $0x1,%edi
2627(2): xor %eax,%eax
2629(5): call 0xfffff517(%rip)
262e(5): jmp 0xfffffd88(%rip)
2633(5): call 0xfffff31d(%rip)
2638(7): lea 0x5661(%rip),%rcx
263f(7): lea 0x53ee(%rip),%rdx
2646(3): mov %rax,%rsi
2649(5): mov $0x1,%edi
264e(2): xor %eax,%eax
2650(5): call 0xfffff4f0(%rip)
2655(2): xor %esi,%esi
2657(5): mov $0x5,%edi
265c(5): call 0xfffff4d4(%rip)
2661(3): test %rax,%rax
2664(2): jz 0x1a(%rip)
2666(7): lea 0x53d5(%rip),%rsi
266d(5): mov $0x3,%edx
2672(3): mov %rax,%rdi
2675(5): call 0xfffff22b(%rip)
267a(2): test %eax,%eax
267c(2): jnz 0x45(%rip)
267e(7): lea 0x53c1(%rip),%rsi
2685(5): mov $0x5,%edx
268a(2): xor %edi,%edi
268c(7): lea 0x5237(%rip),%r12
2693(7): lea 0x5340(%rip),%rbx
269a(5): call 0xfffff2b6(%rip)
269f(7): lea 0x5224(%rip),%rcx
26a6(7): lea 0x55f3(%rip),%rdx
26ad(3): mov %rax,%rsi
26b0(5): mov $0x1,%edi
26b5(2): xor %eax,%eax
26b7(5): call 0xfffff489(%rip)
26bc(5): jmp 0xffffff4a(%rip)
26c1(7): lea 0x5202(%rip),%r12
26c8(7): mov 0x2079b9(%rip),%r13
26cf(7): lea 0x55f2(%rip),%rsi
26d6(2): xor %edi,%edi
26d8(5): mov $0x5,%edx
26dd(5): call 0xfffff273(%rip)
26e2(3): mov %r13,%rsi
26e5(3): mov %rax,%rdi
26e8(5): call 0xfffff348(%rip)
26ed(5): jmp 0xfffffed4(%rip)

"c_strtod" :
2700(1): push %rbp
2701(1): push %rbx
2702(3): mov %rdi,%rbp
2705(3): mov %rsi,%rbx
2708(4): sub $0x8,%rsp
270c(7): mov 0x2079bd(%rip),%rax
2713(3): test %rax,%rax
2716(2): jz 0x3a(%rip)
2718(7): mov 0x2079b1(%rip),%rdx
271f(3): test %rdx,%rdx
2722(2): jz 0x16(%rip)
2724(4): add $0x8,%rsp
2728(3): mov %rbx,%rsi
272b(3): mov %rbp,%rdi
272e(1): pop %rbx
272f(1): pop %rbp
2730(5): jmp 0xfffff1e0(%rip)
2735(3): nop (%rax)
2738(3): test %rbx,%rbx
273b(4): pxor %xmm0,%xmm0
273f(2): jz 0x9(%rip)
2741(4): pxor %xmm0,%xmm0
2745(3): mov %rbp,(%rbx)
2748(4): add $0x8,%rsp
274c(1): pop %rbx
274d(1): pop %rbp
274e(1): ret near (%rsp)
274f(1): nop 
2750(7): lea 0x5606(%rip),%rsi
2757(2): xor %edx,%edx
2759(5): mov $0x1fbf,%edi
275e(5): call 0xfffff252(%rip)
2763(7): mov %rax,0x207966(%rip)
276a(2): jmp 0xffffffae(%rip)

"close_stdout_set_file_name" :
2770(7): mov %rdi,0x207969(%rip)
2777(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2780(7): mov %dil,0x207951(%rip)
2787(1): ret near (%rsp)

"close_stdout" :
2790(1): push %rbp
2791(1): push %rbx
2792(4): sub $0x8,%rsp
2796(7): mov 0x2078eb(%rip),%rdi
279d(5): call 0x4f53(%rip)
27a2(2): test %eax,%eax
27a4(2): jz 0x18(%rip)
27a6(5): call 0xfffff0da(%rip)
27ab(7): cmp $0x0,0x207926(%rip)
27b2(3): mov %rax,%rbx
27b5(2): jz 0x1e(%rip)
27b7(3): cmp $0x20,(%rax)
27ba(2): jnz 0x19(%rip)
27bc(7): mov 0x2078fd(%rip),%rdi
27c3(5): call 0x4f2d(%rip)
27c8(2): test %eax,%eax
27ca(2): jnz 0x48(%rip)
27cc(4): add $0x8,%rsp
27d0(1): pop %rbx
27d1(1): pop %rbp
27d2(1): ret near (%rsp)
27d3(7): lea 0x5585(%rip),%rsi
27da(2): xor %edi,%edi
27dc(5): mov $0x5,%edx
27e1(5): call 0xfffff16f(%rip)
27e6(7): mov 0x2078f3(%rip),%rdi
27ed(3): mov %rax,%rbp
27f0(3): test %rdi,%rdi
27f3(2): jz 0x2a(%rip)
27f5(5): call 0x3b0b(%rip)
27fa(2): mov (%rbx),%esi
27fc(7): lea 0x5568(%rip),%rdx
2803(3): mov %rax,%rcx
2806(3): mov %rbp,%r8
2809(2): xor %edi,%edi
280b(2): xor %eax,%eax
280d(5): call 0xfffff373(%rip)
2812(6): mov 0x207800(%rip),%edi
2818(5): call 0xfffff0a8(%rip)
281d(2): mov (%rbx),%esi
281f(7): lea 0x5549(%rip),%rdx
2826(3): mov %rax,%rcx
2829(2): xor %edi,%edi
282b(2): xor %eax,%eax
282d(5): call 0xfffff353(%rip)
2832(2): jmp 0xffffffe0(%rip)

"fwrite_lowcase" :
2840(3): test %rdx,%rdx
2843(2): jz 0x4d(%rip)
2845(2): push %r13
2847(2): push %r12
2849(3): mov %rdi,%r12
284c(1): push %rbp
284d(1): push %rbx
284e(3): mov %rdx,%rbp
2851(3): mov %rsi,%rbx
2854(4): sub $0x8,%rsp
2858(3): add %rbx,%rbp
285b(5): call 0xfffff3d5(%rip)
2860(3): mov %rax,%r13
2863(5): nop 0x0(%rax,%rax,1)
2868(3): movzx (%rbx),%ecx
286b(4): mov 0x0(%r13),%rax
286f(3): mov %r12,%rsi
2872(4): add $0x1,%rbx
2876(3): mov 0x0(%rax,%rcx,4),%edi
2879(5): call 0xfffff197(%rip)
287e(3): cmp %rbp,%rbx
2881(2): jnz 0xffffffe7(%rip)
2883(4): add $0x8,%rsp
2887(1): pop %rbx
2888(1): pop %rbp
2889(2): pop %r12
288b(2): pop %r13
288d(1): ret near (%rsp)
288e(2): nop 
2890(2): REP ret near (%rsp)

"fwrite_uppcase" :
28a0(3): test %rdx,%rdx
28a3(2): jz 0x4d(%rip)
28a5(2): push %r13
28a7(2): push %r12
28a9(3): mov %rdi,%r12
28ac(1): push %rbp
28ad(1): push %rbx
28ae(3): mov %rdx,%rbp
28b1(3): mov %rsi,%rbx
28b4(4): sub $0x8,%rsp
28b8(3): add %rbx,%rbp
28bb(5): call 0xffffef65(%rip)
28c0(3): mov %rax,%r13
28c3(5): nop 0x0(%rax,%rax,1)
28c8(3): movzx (%rbx),%ecx
28cb(4): mov 0x0(%r13),%rax
28cf(3): mov %r12,%rsi
28d2(4): add $0x1,%rbx
28d6(3): mov 0x0(%rax,%rcx,4),%edi
28d9(5): call 0xfffff137(%rip)
28de(3): cmp %rbp,%rbx
28e1(2): jnz 0xffffffe7(%rip)
28e3(4): add $0x8,%rsp
28e7(1): pop %rbx
28e8(1): pop %rbp
28e9(2): pop %r12
28eb(2): pop %r13
28ed(1): ret near (%rsp)
28ee(2): nop 
28f0(2): REP ret near (%rsp)

"__strftime_internal" :
2900(2): push %r15
2902(2): push %r14
2904(3): mov %rsi,%r10
2907(2): push %r13
2909(2): push %r12
290b(3): mov %rdi,%r12
290e(1): push %rbp
290f(1): push %rbx
2910(3): mov %r9d,%ebp
2913(7): sub $0x4b8,%rsp
291a(4): mov 0x30(%rdx),%r13
291e(4): mov 0x8(%rdx),%r14d
2922(8): mov 0x4f0(%rsp),%rax
292a(4): mov %rdx,(%rsp)
292e(5): mov %r8d,0x24(%rsp)
2933(4): mov %cl,0x23(%rsp)
2937(5): mov %rax,0x18(%rsp)
293c(8): mov 0x4f8(%rsp),%rax
2944(5): mov %rax,0x10(%rsp)
2949(9): mov $0x28,%rax
2952(8): mov %rax,0x4a8(%rsp)
295a(2): xor %eax,%eax
295c(7): lea 0x5b9e(%rip),%rax
2963(3): test %r13,%r13
2966(4): cmove %rax,%r13
296a(4): cmp $0xc,%r14d
296e(6): jle 0x15a(%rip)
2974(4): sub $0xc,%r14d
2978(4): movzx (%r10),%eax
297c(3): xor %r15d,%r15d
297f(2): test %al,%al
2981(2): jz 0x41(%rip)
2983(2): cmp $0x25,%al
2985(3): mov %r10,%rbx
2988(5): mov %r14d,0x30(%rsp)
298d(5): mov %r13,0x28(%rsp)
2992(3): movsxd %ebp,%r10
2995(6): jz 0x96(%rip)
299b(3): test %r10d,%r10d
299e(6): mov $0x0,%r14d
29a4(5): mov $0x1,%eax
29a9(4): cmovns %r10,%r14
29ad(3): test %r14,%r14
29b0(4): cmove %rax,%r14
29b4(3): mov %r15,%rax
29b7(3): not %rax
29ba(3): cmp %r14,%rax
29bd(2): jnbe 0x33(%rip)
29bf(3): xor %r15d,%r15d
29c2(8): mov 0x4a8(%rsp),%rdi
29ca(9): xor $0x28,%rdi
29d3(3): mov %r15,%rax
29d6(6): jnz 0x1b22(%rip)
29dc(7): add $0x4b8,%rsp
29e3(1): pop %rbx
29e4(1): pop %rbp
29e5(2): pop %r12
29e7(2): pop %r13
29e9(2): pop %r14
29eb(2): pop %r15
29ed(1): ret near (%rsp)
29ee(2): nop 
29f0(3): test %r12,%r12
29f3(2): jz 0x17(%rip)
29f5(4): cmp $0x1,%r10d
29f9(6): jnle 0x1e7(%rip)
29ff(3): movsx (%rbx),%edi
2a02(3): mov %r12,%rsi
2a05(5): call 0xfffff00b(%rip)
2a0a(3): add %r14,%r15
2a0d(3): mov %rbx,%rbp
2a10(4): movzx 0x1(%rbp),%eax
2a14(4): lea 0x1(%rbp),%rbx
2a18(7): mov $0xffffffff,%r10
2a1f(2): test %al,%al
2a21(2): jz 0xffffffa1(%rip)
2a23(2): cmp $0x25,%al
2a25(6): jnz 0xffffff76(%rip)
2a2b(5): movzx 0x23(%rsp),%eax
2a30(3): xor %r14d,%r14d
2a33(8): mov $0x0,0x8(%rsp)
2a3b(4): mov %al,0x34(%rsp)
2a3f(5): mov $0x1,%eax
2a44(4): add $0x1,%rbx
2a48(4): movsx (%rbx),%r11d
2a4c(4): lea 0xffffffdd(%r11),%ecx
2a50(3): mov %r11d,%r13d
2a53(3): mov %r11d,%edi
2a56(3): cmp $0x3c,%cl
2a59(2): jnbe 0x36(%rip)
2a5b(3): mov %rax,%rdx
2a5e(a): mov $0x1152921504606856448,%rsi
2a68(3): shl/sal %cl,%rdx
2a6b(3): test %rsi,%rdx
2a6e(6): jnz 0x82(%rip)
2a74(2): test %cl,%cl
2a76(6): jz 0x8a(%rip)
2a7c(a): mov $0x576460752303423488,%rsi
2a86(3): test %rsi,%rdx
2a89(6): jnz 0x187(%rip)
2a8f(4): lea 0xffffffd0(%r11),%eax
2a93(3): cmp $0x9,%eax
2a96(6): jbe 0x18a(%rip)
2a9c(4): cmp $0x45,%r13b
2aa0(2): jz 0x40(%rip)
2aa2(4): cmp $0x4f,%r13b
2aa6(2): jz 0x3a(%rip)
2aa8(3): xor %r11d,%r11d
2aab(4): cmp $0x7a,%r13b
2aaf(2): jnbe 0x61(%rip)
2ab1(7): lea 0x52dc(%rip),%rsi
2ab8(4): movzx %r13b,%eax
2abc(4): movsxd 0x0(%rsi,%rax,4),%rax
2ac0(3): add %rsi,%rax
2ac3(2): jmp %rax
2ac5(3): nop (%rax)
2ac8(3): test %r14d,%r14d
2acb(5): mov $0xc,%eax
2ad0(4): cmove %eax,%r14d
2ad4(5): jmp 0xfffffea4(%rip)
2ad9(7): nop 0x0(%rax)
2ae0(4): movsx 0x1(%rbx),%edi
2ae4(4): add $0x1,%rbx
2ae8(3): mov %edi,%r13d
2aeb(2): jmp 0xffffffc0(%rip)
2aed(3): nop (%rax)
2af0(5): mov %r11d,0x8(%rsp)
2af5(5): jmp 0xffffff4f(%rip)
2afa(6): nop 0x0(%rax,%rax,1)
2b00(6): mov $0x1,%r14d
2b06(5): jmp 0xffffff3e(%rip)
2b0b(5): mov 0x38(%rsp),%rbx
2b10(4): lea 0xffffffff(%rbx),%rax
2b14(6): mov $0x1,%r13d
2b1a(3): mov %rax,%rdx
2b1d(4): lea 0xffffffff(%rax),%rax
2b21(4): add $0x1,%r13d
2b25(4): cmp $0x25,0x1(%rax)
2b29(2): jnz 0xfffffff1(%rip)
2b2b(3): test %r10d,%r10d
2b2e(5): mov $0x0,%eax
2b33(3): movsxd %r13d,%r13
2b36(4): cmovns %r10d,%eax
2b3a(5): mov %rdx,0x38(%rsp)
2b3f(3): mov %r13,%r14
2b42(2): cwde 
2b44(3): mov %r15,%rdx
2b47(3): mov %rbx,%rbp
2b4a(3): cmp %r13,%rax
2b4d(3): not %rdx
2b50(4): cmovnb %rax,%r14
2b54(3): cmp %r14,%rdx
2b57(6): jbe 0xfffffe68(%rip)
2b5d(3): test %r12,%r12
2b60(2): jz 0x6e(%rip)
2b62(3): cmp %rax,%r13
2b65(2): jnb 0x4e(%rip)
2b67(4): mov 0x8(%rsp),%eax
2b6b(3): movsxd %r10d,%rbx
2b6e(3): sub %r13,%rbx
2b71(3): cmp $0x30,%eax
2b74(6): jz 0x122f(%rip)
2b7a(3): cmp $0x2b,%eax
2b7d(6): jz 0x1226(%rip)
2b83(2): xor %edx,%edx
2b85(3): test %rbx,%rbx
2b88(2): jz 0x2b(%rip)
2b8a(5): mov %rbp,0x8(%rsp)
2b8f(3): mov %rdx,%rbp
2b92(6): nop 0x0(%rax,%rax,1)
2b98(3): mov %r12,%rsi
2b9b(5): mov $0x20,%edi
2ba0(4): add $0x1,%rbp
2ba4(5): call 0xffffee6c(%rip)
2ba9(3): cmp %rbp,%rbx
2bac(2): jnz 0xffffffec(%rip)
2bae(5): mov 0x8(%rsp),%rbp
2bb3(5): cmp $0x0,0x34(%rsp)
2bb8(6): jz 0x1130(%rip)
2bbe(5): mov 0x38(%rsp),%rsi
2bc3(3): mov %r13,%rdx
2bc6(3): mov %r12,%rdi
2bc9(5): call 0xfffffcd7(%rip)
2bce(3): add %r14,%r15
2bd1(5): jmp 0xfffffe3f(%rip)
2bd6(a): nop 0x0(%rax,%rax,1)
2be0(4): lea 0xffffffff(%r10),%r13
2be4(2): xor %ebp,%ebp
2be6(a): nop 0x0(%rax,%rax,1)
2bf0(3): mov %r12,%rsi
2bf3(5): mov $0x20,%edi
2bf8(4): add $0x1,%rbp
2bfc(5): call 0xffffee14(%rip)
2c01(3): cmp %rbp,%r13
2c04(2): jnz 0xffffffec(%rip)
2c06(5): jmp 0xfffffdf9(%rip)
2c0b(5): nop 0x0(%rax,%rax,1)
2c10(5): mov $0x1,0x34(%rsp)
2c15(5): jmp 0xfffffe2f(%rip)
2c1a(6): nop 0x0(%rax,%rax,1)
2c20(3): xor %r10d,%r10d
2c23(5): movsx 0x1(%rbx),%r11d
2c28(7): cmp $0xccccccc,%r10d
2c2f(4): lea 0x1(%rbx),%rcx
2c33(3): mov %r11d,%r13d
2c36(4): lea 0xffffffd0(%r11),%eax
2c3a(2): jnle 0x2b(%rip)
2c3c(3): movsx (%rbx),%edx
2c3f(2): jz 0x21(%rip)
2c41(4): lea 0x0(%r10,%r10,4),%esi
2c45(3): mov %rcx,%rbx
2c48(5): lea 0xffffffd0(%rdx,%rsi,2),%r10d
2c4d(3): cmp $0x9,%eax
2c50(2): jbe 0xffffffd3(%rip)
2c52(3): mov %r11d,%edi
2c55(5): jmp 0xfffffe47(%rip)
2c5a(6): nop 0x0(%rax,%rax,1)
2c60(3): cmp $0x37,%dl
2c63(2): jle 0xffffffde(%rip)
2c65(3): cmp $0x9,%eax
2c68(2): jnbe 0x20(%rip)
2c6a(5): movsx 0x2(%rbx),%r11d
2c6f(6): mov $0x7fffffff,%r10d
2c75(4): add $0x2,%rbx
2c79(3): mov %r11d,%r13d
2c7c(4): lea 0xffffffd0(%r11),%eax
2c80(2): jmp 0xffffffcd(%rip)
2c82(6): nop 0x0(%rax,%rax,1)
2c88(3): mov %r11d,%edi
2c8b(3): mov %rcx,%rbx
2c8e(6): mov $0x7fffffff,%r10d
2c94(5): jmp 0xfffffe08(%rip)
2c99(7): nop 0x0(%rax)
2ca0(4): cmp $0x4f,%r11d
2ca4(6): jz 0xfffffe6c(%rip)
2caa(3): xor %r14d,%r14d
2cad(5): mov $0x2520,%ebp
2cb2(3): test %r11d,%r11d
2cb5(8): mov %bp,0x9b(%rsp)
2cbd(6): jnz 0x1853(%rip)
2cc3(8): lea 0x9b(%rsp),%rdx
2ccb(3): mov %rbx,%rbp
2cce(4): lea 0x2(%rdx),%rax
2cd2(3): mov %r13b,(%rax)
2cd5(4): mov $0x0,0x1(%rax)
2cd9(8): lea 0xa0(%rsp),%rax
2ce1(4): mov (%rsp),%rcx
2ce5(5): mov $0x400,%esi
2cea(5): mov %r10d,0x40(%rsp)
2cef(3): mov %rax,%rdi
2cf2(5): mov %r11d,0x58(%rsp)
2cf7(5): mov %rax,0x38(%rsp)
2cfc(5): call 0xffffee64(%rip)
2d01(3): test %rax,%rax
2d04(6): jz 0xfffffd0c(%rip)
2d0a(5): movsxd 0x40(%rsp),%r10
2d0f(4): lea 0xffffffff(%rax),%r13
2d13(5): mov $0x0,%eax
2d18(3): mov %r15,%rdx
2d1b(3): not %rdx
2d1e(3): test %r10d,%r10d
2d21(4): cmovns %r10,%rax
2d25(3): cmp %rax,%r13
2d28(3): mov %rax,%rdi
2d2b(4): cmovnb %r13,%rdi
2d2f(3): cmp %rdi,%rdx
2d32(5): mov %rdi,0x40(%rsp)
2d37(6): jbe 0xfffffc88(%rip)
2d3d(3): test %r12,%r12
2d40(6): jz 0x83(%rip)
2d46(5): mov 0x58(%rsp),%r11d
2d4b(3): test %r11d,%r11d
2d4e(2): jnz 0x4d(%rip)
2d50(3): cmp %rax,%r13
2d53(2): jnb 0x48(%rip)
2d55(4): mov 0x8(%rsp),%eax
2d59(3): movsxd %r10d,%rbx
2d5c(3): sub %r13,%rbx
2d5f(3): cmp $0x30,%eax
2d62(6): jz 0x100e(%rip)
2d68(3): cmp $0x2b,%eax
2d6b(6): jz 0x1005(%rip)
2d71(2): xor %edx,%edx
2d73(3): test %rbx,%rbx
2d76(2): jz 0x25(%rip)
2d78(5): mov %rbp,0x8(%rsp)
2d7d(3): mov %rdx,%rbp
2d80(3): mov %r12,%rsi
2d83(5): mov $0x20,%edi
2d88(4): add $0x1,%rbp
2d8c(5): call 0xffffec84(%rip)
2d91(3): cmp %rbp,%rbx
2d94(2): jnz 0xffffffec(%rip)
2d96(5): mov 0x8(%rsp),%rbp
2d9b(3): test %r14b,%r14b
2d9e(6): jnz 0xf92(%rip)
2da4(5): cmp $0x0,0x34(%rsp)
2da9(6): jz 0xf5f(%rip)
2daf(5): mov 0x38(%rsp),%rsi
2db4(3): mov %r13,%rdx
2db7(3): mov %r12,%rdi
2dba(4): add $0x1,%rsi
2dbe(5): call 0xfffffae2(%rip)
2dc3(5): add 0x40(%rsp),%r15
2dc8(5): jmp 0xfffffc48(%rip)
2dcd(3): nop (%rax)
2dd0(3): test %r11d,%r11d
2dd3(6): jnz 0xfffffd3d(%rip)
2dd9(5): movzx 0x34(%rsp),%eax
2dde(3): test %r14b,%r14b
2de1(8): lea 0x9b(%rsp),%rdx
2de9(3): mov %rbx,%rbp
2dec(4): cmovne %r14d,%eax
2df0(3): xor %r14d,%r14d
2df3(3): xor %r11d,%r11d
2df6(4): mov %al,0x34(%rsp)
2dfa(5): mov $0x2520,%eax
2dff(8): mov %ax,0x9b(%rsp)
2e07(4): lea 0x2(%rdx),%rax
2e0b(5): jmp 0xfffffec7(%rip)
2e10(3): test %r10d,%r10d
2e13(6): mov $0x0,%r13d
2e19(5): mov $0x1,%eax
2e1e(4): cmovns %r10d,%r13d
2e22(3): movsxd %r13d,%r13
2e25(3): test %r13,%r13
2e28(4): cmove %rax,%r13
2e2c(3): mov %r15,%rax
2e2f(3): not %rax
2e32(3): cmp %r13,%rax
2e35(6): jbe 0xfffffb8a(%rip)
2e3b(3): test %r12,%r12
2e3e(6): jz 0x1a1(%rip)
2e44(4): cmp $0x1,%r10d
2e48(2): jle 0x37(%rip)
2e4a(4): mov 0x8(%rsp),%eax
2e4e(3): movsxd %r10d,%r10
2e51(4): lea 0xffffffff(%r10),%r14
2e55(3): cmp $0x30,%eax
2e58(6): jz 0x14d7(%rip)
2e5e(2): xor %ebp,%ebp
2e60(3): cmp $0x2b,%eax
2e63(6): jz 0x14cc(%rip)
2e69(3): mov %r12,%rsi
2e6c(5): mov $0x20,%edi
2e71(4): add $0x1,%rbp
2e75(5): call 0xffffeb9b(%rip)
2e7a(3): cmp %rbp,%r14
2e7d(2): jnz 0xffffffec(%rip)
2e7f(3): mov %r12,%rsi
2e82(5): mov $0x9,%edi
2e87(5): call 0xffffeb89(%rip)
2e8c(5): jmp 0x153(%rip)
2e91(4): mov (%rsp),%rax
2e95(5): mov $0x92492493,%edx
2e9a(5): mov $0x1,%esi
2e9f(3): mov 0x18(%rax),%eax
2ea2(3): lea 0x6(%rax),%ecx
2ea5(4): mov %eax,0x38(%rsp)
2ea9(2): mov %ecx,%eax
2eab(2): imul %eax,%edx,%edx
2ead(3): lea 0x0(%rdx,%rcx,1),%eax
2eb0(2): mov %ecx,%edx
2eb2(3): sar $0x1f,%edx
2eb5(3): sar $0x2,%eax
2eb8(2): sub %edx,%eax
2eba(7): lea 0x0(,%rax,8),%edx
2ec1(2): sub %eax,%edx
2ec3(2): sub %edx,%ecx
2ec5(3): add $0x1,%ecx
2ec8(8): nop 0x0(%rax,%rax,1)
2ed0(2): mov %ecx,%eax
2ed2(3): xor %r8d,%r8d
2ed5(3): xor %r9d,%r9d
2ed8(3): shr $0x1f,%eax
2edb(3): mov %eax,%r13d
2ede(2): mov %ecx,%eax
2ee0(2): not %eax
2ee2(3): shr $0x1f,%eax
2ee5(4): cmp $0x4f,%r11d
2ee9(6): jnz 0xd17(%rip)
2eef(2): test %al,%al
2ef1(6): jz 0xd0f(%rip)
2ef7(3): mov %edi,%r13d
2efa(5): mov $0x2520,%edx
2eff(3): xor %r14d,%r14d
2f02(8): mov %dx,0x9b(%rsp)
2f0a(8): lea 0x9b(%rsp),%rdx
2f12(8): mov %r11b,0x9d(%rsp)
2f1a(3): mov %rbx,%rbp
2f1d(3): mov %esi,%r11d
2f20(4): lea 0x3(%rdx),%rax
2f24(5): jmp 0xfffffdae(%rip)
2f29(4): cmp $0x45,%r11d
2f2d(6): jz 0xfffffbe3(%rip)
2f33(4): mov (%rsp),%rax
2f37(5): mov $0x1,%esi
2f3c(3): mov 0x18(%rax),%ecx
2f3f(2): jmp 0xffffff91(%rip)
2f41(5): mov $0x1,%eax
2f46(3): test %r14b,%r14b
2f49(6): jnz 0xf61(%rip)
2f4f(3): mov %eax,%r14d
2f52(6): mov $0x70,%r13d
2f58(5): jmp 0xfffffd55(%rip)
2f5d(7): lea 0x4e0e(%rip),%rax
2f64(6): mov $0xffffffff,%r14d
2f6a(5): mov %rax,0x38(%rsp)
2f6f(5): movzx 0x34(%rsp),%ebp
2f74(5): mov %r10d,0x40(%rsp)
2f79(4): sub $0x8,%rsp
2f7d(7): mov 0x508(%rsp),%eax
2f84(2): xor %edi,%edi
2f86(3): mov %r14d,%r9d
2f89(1): push %rax
2f8a(4): push 0x20(%rsp)
2f8e(2): mov %ebp,%ecx
2f90(4): push 0x30(%rsp)
2f94(5): mov 0x20(%rsp),%rdx
2f99(5): mov 0x28(%rsp),%r8d
2f9e(5): mov 0x58(%rsp),%rsi
2fa3(5): call 0xfffff95d(%rip)
2fa8(4): add $0x20,%rsp
2fac(5): movsxd 0x40(%rsp),%r10
2fb1(5): mov $0x0,%edx
2fb6(3): mov %r15,%rcx
2fb9(3): not %rcx
2fbc(3): test %r10d,%r10d
2fbf(4): cmovns %r10,%rdx
2fc3(3): cmp %rdx,%rax
2fc6(3): mov %rdx,%r13
2fc9(4): cmovnb %rax,%r13
2fcd(3): cmp %r13,%rcx
2fd0(6): jbe 0xfffff9ef(%rip)
2fd6(3): test %r12,%r12
2fd9(6): jnz 0xe02(%rip)
2fdf(3): add %r13,%r15
2fe2(3): mov %rbx,%rbp
2fe5(5): jmp 0xfffffa2b(%rip)
2fea(4): cmp $0x45,%r11d
2fee(6): jz 0xfffffb22(%rip)
2ff4(4): mov (%rsp),%rax
2ff8(5): mov $0x2,%esi
2ffd(2): mov (%rax),%ecx
2fff(5): jmp 0xfffffed1(%rip)
3004(4): mov (%rsp),%rax
3008(5): mov 0x10(%rsp),%rdi
300d(5): lea 0x60(%rsp),%rsi
3012(5): mov %r10d,0x40(%rsp)
3017(8): lea 0xb7(%rsp),%r14
301f(4): movdqu (%rax),%xmm0
3023(5): movaps %xmm0,0x60(%rsp)
3028(5): movdqu 0x10(%rax),%xmm0
302d(5): movaps %xmm0,0x70(%rsp)
3032(5): movdqu 0x20(%rax),%xmm0
3037(4): mov 0x30(%rax),%rax
303b(8): movaps %xmm0,0x80(%rsp)
3043(8): mov %rax,0x90(%rsp)
304b(5): call 0x4555(%rip)
3050(5): mov 0x40(%rsp),%r10d
3055(3): mov %rax,%rsi
3058(3): mov %rax,%rcx
305b(8): lea 0xa0(%rsp),%rax
3063(a): mov $0x7378697629483820647,%r8
306d(5): mov $0x30,%edi
3072(5): mov %rax,0x38(%rsp)
3077(9): nop 0x0(%rax,%rax,1)
3080(3): mov %rcx,%rax
3083(3): imul %rax,%r8,%rdx
3086(3): mov %rcx,%rax
3089(4): sar $0x3f,%rax
308d(4): sar $0x2,%rdx
3091(3): sub %rax,%rdx
3094(3): mov %rdx,%rax
3097(4): lea 0x0(%rdx,%rdx,4),%rdx
309b(3): add %rdx,%rdx
309e(3): sub %rdx,%rcx
30a1(3): mov %rcx,%rdx
30a4(3): mov %rax,%rcx
30a7(2): mov %edi,%eax
30a9(2): sub %edx,%eax
30ab(3): add $0x30,%edx
30ae(3): test %rsi,%rsi
30b1(3): cmovs %eax,%edx
30b4(4): sub $0x1,%r14
30b8(3): test %rcx,%rcx
30bb(3): mov %dl,(%r14)
30be(2): jnz 0xffffffc2(%rip)
30c0(3): test %r10d,%r10d
30c3(5): mov $0x1,%eax
30c8(4): cmovnl %r10d,%eax
30cc(3): test %rsi,%rsi
30cf(4): mov %eax,0x58(%rsp)
30d3(6): js 0xb3d(%rip)
30d9(5): mov 0x38(%rsp),%rax
30de(3): mov %r15,%rdx
30e1(3): not %rdx
30e4(4): add $0x17,%rax
30e8(3): sub %r14,%rax
30eb(5): cmp $0x2d,0x8(%rsp)
30f0(5): mov %rax,0x40(%rsp)
30f5(2): jz 0x15(%rip)
30f7(5): mov 0x58(%rsp),%r13d
30fc(5): sub 0x40(%rsp),%r13d
3101(3): test %r13d,%r13d
3104(6): jnle 0x113a(%rip)
310a(3): test %r10d,%r10d
310d(5): mov $0x0,%ecx
3112(3): mov %rbx,%rbp
3115(4): cmovns %r10d,%ecx
3119(3): movsxd %ecx,%r13
311c(5): mov 0x40(%rsp),%rax
3121(3): cmp %r13,%rax
3124(3): mov %rax,%rbx
3127(4): cmovnae %r13,%rbx
312b(3): cmp %rdx,%rbx
312e(6): jnb 0xfffff891(%rip)
3134(3): test %r12,%r12
3137(2): jz 0x77(%rip)
3139(4): mov 0x58(%rsp),%edx
313d(2): test %edx,%edx
313f(2): jnz 0x54(%rip)
3141(3): cmp %r13,%rax
3144(2): jnb 0x4f(%rip)
3146(3): movsxd %r10d,%r13
3149(3): sub %rax,%r13
314c(4): mov 0x8(%rsp),%eax
3150(3): cmp $0x30,%eax
3153(6): jz 0xd1d(%rip)
3159(3): cmp $0x2b,%eax
315c(6): jz 0xd14(%rip)
3162(2): xor %edx,%edx
3164(3): test %r13,%r13
3167(2): jz 0x2c(%rip)
3169(5): mov %rbx,0x8(%rsp)
316e(3): mov %rdx,%rbx
3171(7): nop 0x0(%rax)
3178(3): mov %r12,%rsi
317b(5): mov $0x20,%edi
3180(4): add $0x1,%rbx
3184(5): call 0xffffe88c(%rip)
3189(3): cmp %rbx,%r13
318c(2): jnz 0xffffffec(%rip)
318e(5): mov 0x8(%rsp),%rbx
3193(5): cmp $0x0,0x34(%rsp)
3198(6): jz 0xbb8(%rip)
319e(5): mov 0x40(%rsp),%rdx
31a3(3): mov %r14,%rsi
31a6(3): mov %r12,%rdi
31a9(5): call 0xfffff6f7(%rip)
31ae(3): add %rbx,%r15
31b1(5): jmp 0xfffff85f(%rip)
31b6(4): mov (%rsp),%rax
31ba(4): cmp $0x4f,%r11d
31be(5): mov $0x1,%esi
31c3(3): mov 0x10(%rax),%eax
31c6(6): jz 0xfffffd34(%rip)
31cc(3): lea 0x0(%rax,%rax,4),%edx
31cf(3): xor %r9d,%r9d
31d2(3): xor %r13d,%r13d
31d5(3): xor %r8d,%r8d
31d8(3): lea 0x0(%rax,%rdx,2),%ecx
31db(3): sar $0x5,%ecx
31de(3): add $0x1,%ecx
31e1(7): nop 0x0(%rax)
31e8(8): lea 0xa0(%rsp),%rax
31f0(8): lea 0xb7(%rsp),%rdi
31f8(6): mov $0xcccccccd,%r11d
31fe(5): mov %rax,0x38(%rsp)
3203(5): nop 0x0(%rax,%rax,1)
3208(4): test $0x1,%r8b
320c(4): lea 0xffffffff(%rdi),%r14
3210(2): jz 0x10(%rip)
3212(4): lea 0xfffffffe(%rdi),%rax
3216(4): mov $0x3a,0xffffffff(%rdi)
321a(3): mov %r14,%rdi
321d(3): mov %rax,%r14
3220(2): mov %ecx,%eax
3222(3): sar $0x1,%r8d
3225(3): mul %eax,%r11d,%edx
3228(3): shr $0x3,%edx
322b(3): lea 0x0(%rdx,%rdx,4),%eax
322e(2): add %eax,%eax
3230(2): sub %eax,%ecx
3232(3): mov %r8d,%eax
3235(3): add $0x30,%ecx
3238(2): or %edx,%eax
323a(3): mov %cl,0xffffffff(%rdi)
323d(2): mov %edx,%ecx
323f(3): mov %r14,%rdi
3242(2): jnz 0xffffffc6(%rip)
3244(3): cmp %esi,%r10d
3247(4): cmovnl %r10d,%esi
324b(3): test %r13b,%r13b
324e(4): mov %esi,0x58(%rsp)
3252(6): jnz 0x9be(%rip)
3258(3): test %r9b,%r9b
325b(6): jz 0xfffffe7e(%rip)
3261(5): cmp $0x2d,0x8(%rsp)
3266(5): mov $0x2b,%ebp
326b(6): jz 0xdb2(%rip)
3271(5): mov 0x38(%rsp),%rax
3276(3): mov %r15,%rdx
3279(3): not %rdx
327c(4): add $0x17,%rax
3280(3): sub %r14,%rax
3283(3): mov %rax,%rdi
3286(5): mov %rax,0x40(%rsp)
328b(4): mov 0x58(%rsp),%eax
328f(3): sub $0x1,%eax
3292(2): sub %edi,%eax
3294(2): test %eax,%eax
3296(3): mov %eax,%r13d
3299(6): jle 0xcc7(%rip)
329f(5): cmp $0x5f,0x8(%rsp)
32a4(6): jz 0xc18(%rip)
32aa(5): movsxd 0x58(%rsp),%rax
32af(3): cmp %rdx,%rax
32b2(3): mov %rax,%rdi
32b5(6): jnb 0xfffff70a(%rip)
32bb(3): test %r10d,%r10d
32be(5): mov $0x0,%eax
32c3(5): mov $0x1,%ecx
32c8(4): cmovns %r10d,%eax
32cc(2): cwde 
32ce(3): test %rax,%rax
32d1(4): cmovne %rax,%rcx
32d5(3): cmp %rdx,%rcx
32d8(5): mov %rcx,0x48(%rsp)
32dd(6): jnb 0xfffff6e2(%rip)
32e3(3): test %r12,%r12
32e6(2): jz 0x66(%rip)
32e8(2): test %edi,%edi
32ea(2): jnz 0x56(%rip)
32ec(4): cmp $0x1,%rax
32f0(2): jbe 0x50(%rip)
32f2(4): mov 0x8(%rsp),%edi
32f6(3): movsxd %r10d,%r10
32f9(4): lea 0xffffffff(%r10),%rax
32fd(3): cmp $0x30,%edi
3300(5): mov %rax,0x38(%rsp)
3305(6): jz 0x110b(%rip)
330b(3): cmp $0x2b,%edi
330e(6): jz 0x1102(%rip)
3314(2): xor %edx,%edx
3316(3): test %rax,%rax
3319(2): jz 0x27(%rip)
331b(5): mov %rbx,0x50(%rsp)
3320(3): mov %rdx,%rbx
3323(3): mov %r12,%rsi
3326(5): mov $0x20,%edi
332b(4): add $0x1,%rbx
332f(5): call 0xffffe6e1(%rip)
3334(5): cmp %rbx,0x38(%rsp)
3339(2): jnz 0xffffffea(%rip)
333b(5): mov 0x50(%rsp),%rbx
3340(4): movsx %bpl,%edi
3344(3): mov %r12,%rsi
3347(5): call 0xffffe6c9(%rip)
334c(5): add 0x48(%rsp),%r15
3351(3): mov %rbx,%rbp
3354(3): movsxd %r13d,%rbx
3357(3): xor %r13d,%r13d
335a(3): test %r12,%r12
335d(2): jz 0x19(%rip)
335f(1): nop 
3360(3): mov %r12,%rsi
3363(5): mov $0x30,%edi
3368(4): add $0x1,%r13
336c(5): call 0xffffe6a4(%rip)
3371(3): cmp %rbx,%r13
3374(2): jnz 0xffffffec(%rip)
3376(3): add %rbx,%r15
3379(3): xor %r13d,%r13d
337c(3): xor %r10d,%r10d
337f(3): mov %r15,%rdx
3382(3): not %rdx
3385(5): jmp 0xfffffd97(%rip)
338a(7): lea 0x49e7(%rip),%rax
3391(6): mov $0xffffffff,%r14d
3397(5): mov %rax,0x38(%rsp)
339c(5): jmp 0xfffffbd3(%rip)
33a1(4): cmp $0x45,%r11d
33a5(6): jz 0xfffff76b(%rip)
33ab(4): mov (%rsp),%rax
33af(5): mov $0x92492493,%edx
33b4(3): mov 0x1c(%rax),%esi
33b7(3): sub 0x18(%rax),%esi
33ba(3): add $0x7,%esi
33bd(2): mov %esi,%eax
33bf(2): imul %eax,%edx,%edx
33c1(3): lea 0x0(%rdx,%rsi,1),%ecx
33c4(3): sar $0x1f,%esi
33c7(3): sar $0x2,%ecx
33ca(2): sub %esi,%ecx
33cc(5): mov $0x2,%esi
33d1(5): jmp 0xfffffaff(%rip)
33d6(4): cmp $0x45,%r11d
33da(6): jz 0xfffff736(%rip)
33e0(4): mov (%rsp),%rcx
33e4(5): mov $0x92492493,%edx
33e9(3): mov 0x14(%rcx),%esi
33ec(4): mov 0x1c(%rcx),%r8d
33f0(4): mov 0x18(%rcx),%r14d
33f4(2): mov %esi,%eax
33f6(3): mov %r8d,%ecx
33f9(3): sar $0x1f,%eax
33fc(3): sub %r14d,%ecx
33ff(6): add $0x17e,%ecx
3405(5): and $0x190,%eax
340a(5): lea 0xffffff9c(%rsi,%rax,1),%r9d
340f(2): mov %ecx,%eax
3411(2): imul %eax,%edx,%edx
3413(3): lea 0x0(%rdx,%rcx,1),%eax
3416(2): mov %ecx,%edx
3418(3): sar $0x1f,%edx
341b(3): sar $0x2,%eax
341e(2): sub %edx,%eax
3420(7): lea 0x0(,%rax,8),%edx
3427(2): sub %eax,%edx
3429(3): mov %r8d,%eax
342c(2): sub %ecx,%eax
342e(4): lea 0x3(%rax,%rdx,1),%ebp
3432(2): test %ebp,%ebp
3434(6): js 0xe2c(%rip)
343a(4): test $0x3,%r9b
343e(5): mov $0x16d,%eax
3443(2): jnz 0x47(%rip)
3445(3): mov %r9d,%eax
3448(5): mov $0x51eb851f,%edx
344d(3): mov %r9d,%ecx
3450(2): imul %eax,%edx,%edx
3452(3): sar $0x1f,%ecx
3455(5): mov $0x16e,%eax
345a(4): mov %edx,0x38(%rsp)
345e(3): sar $0x5,%edx
3461(2): sub %ecx,%edx
3463(3): imul %edx,$0x64,%edx
3466(3): cmp %edx,%r9d
3469(2): jnz 0x21(%rip)
346b(4): mov 0x38(%rsp),%edx
346f(3): sar $0x7,%edx
3472(2): mov %edx,%eax
3474(2): sub %ecx,%eax
3476(6): imul %eax,$0x190,%eax
347c(3): cmp %eax,%r9d
347f(3): setz %al
3482(3): movzx %al,%eax
3485(5): add $0x16d,%eax
348a(3): sub %eax,%r8d
348d(5): mov $0x92492493,%edx
3492(3): mov %r8d,%ecx
3495(3): sub %r14d,%ecx
3498(6): add $0x17e,%ecx
349e(2): mov %ecx,%eax
34a0(3): sub %ecx,%r8d
34a3(2): imul %eax,%edx,%edx
34a5(3): lea 0x0(%rdx,%rcx,1),%eax
34a8(2): mov %ecx,%edx
34aa(3): sar $0x1f,%edx
34ad(3): sar $0x2,%eax
34b0(2): sub %edx,%eax
34b2(7): lea 0x0(,%rax,8),%edx
34b9(2): sub %eax,%edx
34bb(5): lea 0x3(%r8,%rdx,1),%ecx
34c0(6): mov $0x1,%r8d
34c6(2): test %ecx,%ecx
34c8(2): jns 0x7(%rip)
34ca(2): mov %ebp,%ecx
34cc(3): xor %r8d,%r8d
34cf(4): cmp $0x47,%r13b
34d3(6): jz 0xc94(%rip)
34d9(4): cmp $0x67,%r13b
34dd(6): jnz 0xe0d(%rip)
34e3(5): mov $0x51eb851f,%ecx
34e8(2): mov %esi,%eax
34ea(3): mov %esi,%r9d
34ed(2): imul %eax,%ecx,%edx
34ef(2): mov %edx,%eax
34f1(2): mov %esi,%edx
34f3(3): sar $0x1f,%edx
34f6(3): sar $0x5,%eax
34f9(2): sub %edx,%eax
34fb(3): imul %eax,$0x64,%eax
34fe(3): sub %eax,%r9d
3501(3): add %r8d,%r9d
3504(3): mov %r9d,%eax
3507(2): imul %eax,%ecx,%edx
3509(3): mov %r9d,%eax
350c(3): sar $0x1f,%eax
350f(2): mov %edx,%ecx
3511(3): sar $0x5,%ecx
3514(2): sub %eax,%ecx
3516(3): imul %ecx,$0x64,%ecx
3519(3): sub %ecx,%r9d
351c(3): mov %r9d,%ecx
351f(6): js 0xc05(%rip)
3525(4): mov 0x8(%rsp),%esi
3529(2): test %esi,%esi
352b(6): jz 0xc16(%rip)
3531(5): mov $0x1,%eax
3536(3): xor %r13d,%r13d
3539(5): cmp $0x2b,0x8(%rsp)
353e(6): jz 0xf9f(%rip)
3544(3): xor %r9d,%r9d
3547(5): mov $0x2,%esi
354c(3): xor %r8d,%r8d
354f(5): jmp 0xfffff996(%rip)
3554(4): cmp $0x45,%r11d
3558(6): jz 0xfffff5b8(%rip)
355e(4): mov (%rsp),%rax
3562(5): mov $0x2,%esi
3567(3): mov 0x8(%rax),%ecx
356a(5): jmp 0xfffff966(%rip)
356f(4): cmp $0x45,%r11d
3573(6): jz 0xfffff59d(%rip)
3579(4): mov (%rsp),%rax
357d(5): mov $0x2,%esi
3582(3): mov 0x4(%rax),%ecx
3585(5): jmp 0xfffff94b(%rip)
358a(4): cmp $0x45,%r11d
358e(6): jz 0xfffff582(%rip)
3594(4): cmp $0xff,%r10d
3598(6): jz 0xc18(%rip)
359e(4): cmp $0x8,%r10d
35a2(6): jnle 0xf4a(%rip)
35a8(7): mov 0x500(%rsp),%ecx
35af(3): mov %r10d,%esi
35b2(6): mov $0x66666667,%r8d
35b8(8): nop 0x0(%rax,%rax,1)
35c0(2): mov %ecx,%eax
35c2(3): add $0x1,%esi
35c5(3): sar $0x1f,%ecx
35c8(3): imul %eax,%r8d,%edx
35cb(3): sar $0x2,%edx
35ce(2): sub %ecx,%edx
35d0(3): cmp $0x9,%esi
35d3(2): mov %edx,%ecx
35d5(2): jnz 0xffffffeb(%rip)
35d7(3): mov %r10d,%esi
35da(5): jmp 0xfffff8f6(%rip)
35df(4): cmp $0x45,%r11d
35e3(6): jz 0xfffff52d(%rip)
35e9(4): mov 0x30(%rsp),%ecx
35ed(5): mov $0x2,%esi
35f2(5): jmp 0xfffff8de(%rip)
35f7(4): cmp $0x45,%r11d
35fb(6): jz 0x8a8(%rip)
3601(4): mov (%rsp),%rax
3605(5): mov $0x51eb851f,%edx
360a(5): mov 0x8(%rsp),%r9d
360f(3): mov 0x14(%rax),%esi
3612(2): mov %esi,%eax
3614(2): imul %eax,%edx,%edx
3616(2): mov %edx,%eax
3618(2): mov %esi,%edx
361a(3): sar $0x1f,%edx
361d(3): sar $0x5,%eax
3620(2): sub %edx,%eax
3622(2): mov %esi,%edx
3624(3): lea 0x13(%rax),%ecx
3627(3): imul %eax,$0x64,%eax
362a(2): sub %eax,%edx
362c(2): mov %edx,%eax
362e(3): shr $0x1f,%eax
3631(2): test %ecx,%ecx
3633(3): setnle %dl
3636(2): and %edx,%eax
3638(6): cmp $0xfffff894,%esi
363e(4): setl %r13b
3642(2): sub %eax,%ecx
3644(6): cmp $0xfffff894,%esi
364a(3): setnl %al
364d(3): test %r9d,%r9d
3650(6): jnz 0xfffffee9(%rip)
3656(5): cmp $0x2b,0x24(%rsp)
365b(6): jz 0xe82(%rip)
3661(4): mov 0x24(%rsp),%esi
3665(4): mov %esi,0x8(%rsp)
3669(5): jmp 0xfffffedb(%rip)
366e(3): test %r11d,%r11d
3671(6): jnz 0xfffff49f(%rip)
3677(7): lea 0x470c(%rip),%rax
367e(6): mov $0xffffffff,%r14d
3684(5): mov %rax,0x38(%rsp)
3689(5): jmp 0xfffff8e6(%rip)
368e(3): test %r11d,%r11d
3691(6): jnz 0xfffff47f(%rip)
3697(5): mov 0x8(%rsp),%r11d
369c(3): test %r11d,%r11d
369f(6): jnz 0xd50(%rip)
36a5(3): test %r10d,%r10d
36a8(6): jns 0xd47(%rip)
36ae(7): lea 0x46cc(%rip),%rax
36b5(6): mov $0x4,%r14d
36bb(8): mov $0x2b,0x8(%rsp)
36c3(5): mov %rax,0x38(%rsp)
36c8(5): jmp 0xfffff8a7(%rip)
36cd(4): movzx 0xffffffff(%rbx),%ecx
36d1(4): lea 0xffffffff(%rbx),%rax
36d5(5): mov %rax,0x38(%rsp)
36da(3): test %r10d,%r10d
36dd(5): mov $0x0,%eax
36e2(3): mov %r15,%rdx
36e5(4): cmovns %r10d,%eax
36e9(3): cmp $0x25,%cl
36ec(3): not %rdx
36ef(2): cwde 
36f1(6): jnz 0xfffff41a(%rip)
36f7(3): test %rax,%rax
36fa(6): mov $0x1,%r14d
3700(5): mov 0x38(%rsp),%rbp
3705(4): cmovne %rax,%r14
3709(6): mov $0x1,%r13d
370f(5): jmp 0xfffff445(%rip)
3714(4): cmp $0x45,%r11d
3718(6): jz 0xfffff3f8(%rip)
371e(3): test %r14b,%r14b
3721(6): jz 0xfffff58c(%rip)
3727(5): mov %r14b,0x34(%rsp)
372c(5): jmp 0xfffff57e(%rip)
3731(3): test %r10d,%r10d
3734(5): mov $0x0,%eax
3739(6): mov $0x1,%r14d
373f(4): cmovns %r10d,%eax
3743(3): mov %r15,%rdx
3746(2): cwde 
3748(3): not %rdx
374b(3): test %rax,%rax
374e(4): cmovne %rax,%r14
3752(3): test %r11d,%r11d
3755(6): jnz 0xa72(%rip)
375b(3): cmp %r14,%rdx
375e(6): jbe 0xfffff261(%rip)
3764(3): test %r12,%r12
3767(6): jz 0xfffff2a3(%rip)
376d(4): cmp $0x1,%r10d
3771(6): jle 0xfffff291(%rip)
3777(4): mov 0x8(%rsp),%eax
377b(3): movsxd %r10d,%r10
377e(4): lea 0xffffffff(%r10),%r13
3782(3): cmp $0x30,%eax
3785(6): jz 0xd29(%rip)
378b(2): xor %ebp,%ebp
378d(3): cmp $0x2b,%eax
3790(6): jz 0xd1e(%rip)
3796(3): mov %r12,%rsi
3799(5): mov $0x20,%edi
379e(4): add $0x1,%rbp
37a2(5): call 0xffffe26e(%rip)
37a7(3): cmp %rbp,%r13
37aa(2): jnz 0xffffffec(%rip)
37ac(5): jmp 0xfffff253(%rip)
37b1(4): movzx 0x1(%rbx),%eax
37b5(4): lea 0x1(%rbx),%rdx
37b9(2): cmp $0x3a,%al
37bb(6): jz 0xbe6(%rip)
37c1(6): mov $0x1,%r14d
37c7(2): cmp $0x7a,%al
37c9(6): jnz 0xfffff347(%rip)
37cf(3): mov %rdx,%rbx
37d2(4): mov (%rsp),%rax
37d6(3): mov 0x20(%rax),%ecx
37d9(2): test %ecx,%ecx
37db(6): js 0x880(%rip)
37e1(4): mov 0x28(%rax),%rcx
37e5(6): mov $0x1,%r13d
37eb(2): test %ecx,%ecx
37ed(2): js 0x16(%rip)
37ef(6): mov $0x0,%r13d
37f5(2): jnz 0xe(%rip)
37f7(5): mov 0x28(%rsp),%rax
37fc(3): cmp $0x2d,(%rax)
37ff(4): setz %r13b
3803(2): mov %ecx,%eax
3805(5): mov $0x91a2b3c5,%edx
380a(3): mov %ecx,%r9d
380d(2): imul %eax,%edx,%edx
380f(4): sar $0x1f,%r9d
3813(6): mov $0x88888889,%r8d
3819(2): mov %ecx,%eax
381b(2): add %ecx,%edx
381d(3): sar $0xb,%edx
3820(3): sub %r9d,%edx
3823(2): mov %edx,%ebp
3825(3): imul %eax,%r8d,%edx
3828(3): lea 0x0(%rdx,%rcx,1),%esi
382b(3): sar $0x5,%esi
382e(3): sub %r9d,%esi
3831(2): mov %esi,%eax
3833(3): imul %eax,%r8d,%edx
3836(2): mov %esi,%eax
3838(3): sar $0x1f,%eax
383b(4): lea 0x0(%rdx,%rsi,1),%r8d
383f(4): sar $0x5,%r8d
3843(3): sub %eax,%r8d
3846(2): mov %esi,%eax
3848(4): imul %r8d,$0x3c,%r8d
384c(3): imul %esi,$0x3c,%esi
384f(3): sub %r8d,%eax
3852(2): sub %esi,%ecx
3854(4): cmp $0x1,%r14
3858(3): mov %eax,%r8d
385b(6): jz 0xab2(%rip)
3861(6): jb 0xb70(%rip)
3867(4): cmp $0x2,%r14
386b(6): jz 0x9a8(%rip)
3871(4): cmp $0x3,%r14
3875(6): jnz 0xb4f(%rip)
387b(2): test %ecx,%ecx
387d(6): jnz 0x996(%rip)
3883(2): test %eax,%eax
3885(6): jnz 0xa88(%rip)
388b(3): mov %r13d,%eax
388e(2): mov %ebp,%ecx
3890(6): mov $0x1,%r9d
3896(3): xor $0x1,%eax
3899(5): mov $0x3,%esi
389e(5): jmp 0xfffff647(%rip)
38a3(5): nop 0x0(%rax,%rax,1)
38a8(4): cmp $0x45,%r11d
38ac(6): jz 0xfffff264(%rip)
38b2(4): mov (%rsp),%r9
38b6(5): mov $0x92492493,%ecx
38bb(4): mov 0x18(%r9),%eax
38bf(3): lea 0x6(%rax),%esi
38c2(4): mov %eax,0x38(%rsp)
38c6(2): mov %esi,%eax
38c8(2): imul %eax,%ecx,%edx
38ca(3): lea 0x0(%rdx,%rsi,1),%eax
38cd(2): mov %esi,%edx
38cf(3): sar $0x1f,%edx
38d2(3): sar $0x2,%eax
38d5(2): sub %edx,%eax
38d7(7): lea 0x0(,%rax,8),%edx
38de(2): sub %eax,%edx
38e0(2): mov %edx,%eax
38e2(4): mov 0x1c(%r9),%edx
38e6(2): sub %esi,%eax
38e8(4): lea 0x7(%rax,%rdx,1),%esi
38ec(2): mov %esi,%eax
38ee(2): imul %eax,%ecx,%edx
38f0(5): jmp 0xfffffad1(%rip)
38f5(4): cmp $0x45,%r11d
38f9(6): jz 0x5aa(%rip)
38ff(4): cmp $0x4f,%r11d
3903(6): jz 0xfffff20d(%rip)
3909(4): mov (%rsp),%rax
390d(5): mov 0x8(%rsp),%r8d
3912(3): mov 0x14(%rax),%eax
3915(5): cmp $0xfffff894,%eax
391a(6): lea 0x76c(%rax),%ecx
3920(4): setl %r13b
3924(5): cmp $0xfffff894,%eax
3929(3): setnl %al
392c(3): test %r8d,%r8d
392f(6): jnz 0x85f(%rip)
3935(4): mov 0x24(%rsp),%esi
3939(3): cmp $0x2b,%esi
393c(6): jz 0x6eb(%rip)
3942(4): mov %esi,0x8(%rsp)
3946(3): xor %r9d,%r9d
3949(5): mov $0x4,%esi
394e(5): jmp 0xfffffbfe(%rip)
3953(5): movzx 0x34(%rsp),%edi
3958(3): test %r14b,%r14b
395b(5): mov $0x0,%eax
3960(5): mov %r10d,0x38(%rsp)
3965(3): cmovne %eax,%edi
3968(5): mov %dil,0x34(%rsp)
396d(5): mov 0x28(%rsp),%rdi
3972(5): call 0xffffdffe(%rip)
3977(5): movsxd 0x38(%rsp),%r10
397c(3): mov %rax,%r13
397f(5): mov $0x0,%eax
3984(3): mov %r15,%rdx
3987(3): not %rdx
398a(3): test %r10d,%r10d
398d(4): cmovns %r10,%rax
3991(3): cmp %rax,%r13
3994(3): mov %rax,%rbp
3997(4): cmovnb %r13,%rbp
399b(3): cmp %rbp,%rdx
399e(6): jbe 0xfffff021(%rip)
39a4(3): test %r12,%r12
39a7(2): jz 0x78(%rip)
39a9(3): cmp %rax,%r13
39ac(2): jnb 0x4f(%rip)
39ae(4): mov 0x8(%rsp),%edi
39b2(3): mov %r10,%rax
39b5(3): sub %r13,%rax
39b8(5): mov %rax,0x38(%rsp)
39bd(3): cmp $0x30,%edi
39c0(6): jz 0xa83(%rip)
39c6(3): cmp $0x2b,%edi
39c9(6): jz 0xa7a(%rip)
39cf(2): xor %edx,%edx
39d1(3): test %rax,%rax
39d4(2): jz 0x27(%rip)
39d6(5): mov %rbx,0x8(%rsp)
39db(3): mov %rdx,%rbx
39de(3): mov %r12,%rsi
39e1(5): mov $0x20,%edi
39e6(4): add $0x1,%rbx
39ea(5): call 0xffffe026(%rip)
39ef(5): cmp %rbx,0x38(%rsp)
39f4(2): jnz 0xffffffea(%rip)
39f6(5): mov 0x8(%rsp),%rbx
39fb(3): test %r14b,%r14b
39fe(6): jnz 0x985(%rip)
3a04(5): cmp $0x0,0x34(%rsp)
3a09(6): jz 0x960(%rip)
3a0f(5): mov 0x28(%rsp),%rsi
3a14(3): mov %r13,%rdx
3a17(3): mov %r12,%rdi
3a1a(5): call 0xffffee86(%rip)
3a1f(3): add %rbp,%r15
3a22(3): mov %rbx,%rbp
3a25(5): jmp 0xffffefeb(%rip)
3a2a(4): cmp $0x45,%r11d
3a2e(6): jz 0x475(%rip)
3a34(4): mov (%rsp),%rax
3a38(5): mov $0x51eb851f,%edx
3a3d(3): mov 0x14(%rax),%esi
3a40(2): mov %esi,%eax
3a42(2): imul %eax,%edx,%edx
3a44(2): mov %esi,%eax
3a46(3): sar $0x1f,%eax
3a49(2): mov %edx,%ecx
3a4b(3): sar $0x5,%ecx
3a4e(2): sub %eax,%ecx
3a50(2): mov %esi,%eax
3a52(3): imul %ecx,$0x64,%ecx
3a55(2): sub %ecx,%eax
3a57(2): mov %eax,%ecx
3a59(6): jns 0xfffffacc(%rip)
3a5f(2): neg %eax
3a61(3): add $0x64,%ecx
3a64(6): cmp $0xfffff893,%esi
3a6a(3): cmovng %eax,%ecx
3a6d(5): jmp 0xfffffab8(%rip)
3a72(4): cmp $0x45,%r11d
3a76(6): jz 0xfffff09a(%rip)
3a7c(4): mov (%rsp),%rax
3a80(5): mov $0x2,%esi
3a85(3): mov 0xc(%rax),%ecx
3a88(5): jmp 0xfffff448(%rip)
3a8d(4): cmp $0x45,%r11d
3a91(6): jz 0xfffff07f(%rip)
3a97(4): mov (%rsp),%rax
3a9b(3): mov 0xc(%rax),%ecx
3a9e(5): mov 0x8(%rsp),%r8d
3aa3(5): mov $0x2,%esi
3aa8(3): test %r8d,%r8d
3aab(6): jnz 0xfffff425(%rip)
3ab1(8): mov $0x5f,0x8(%rsp)
3ab9(5): jmp 0xfffff417(%rip)
3abe(4): cmp $0x45,%r11d
3ac2(6): jz 0xfffff04e(%rip)
3ac8(4): mov (%rsp),%rax
3acc(5): mov $0x3,%esi
3ad1(3): mov 0x1c(%rax),%eax
3ad4(3): cmp $0xff,%eax
3ad7(3): lea 0x1(%rax),%ecx
3ada(4): setl %r13b
3ade(3): cmp $0xff,%eax
3ae1(3): setnl %al
3ae4(3): xor %r8d,%r8d
3ae7(3): xor %r9d,%r9d
3aea(5): jmp 0xfffff3fb(%rip)
3aef(4): cmp $0x45,%r11d
3af3(6): jz 0xfffff01d(%rip)
3af9(4): mov (%rsp),%rax
3afd(3): mov 0x8(%rax),%ecx
3b00(2): jmp 0xffffff9e(%rip)
3b02(4): cmp $0x45,%r11d
3b06(6): jz 0xfffff00a(%rip)
3b0c(4): mov 0x30(%rsp),%ecx
3b10(2): jmp 0xffffff8e(%rip)
3b12(4): cmp $0x45,%r11d
3b16(6): jz 0xffffeffa(%rip)
3b1c(4): mov (%rsp),%rax
3b20(5): mov $0x2,%esi
3b25(3): mov 0x10(%rax),%eax
3b28(3): cmp $0xff,%eax
3b2b(3): lea 0x1(%rax),%ecx
3b2e(4): setl %r13b
3b32(3): cmp $0xff,%eax
3b35(3): setnl %al
3b38(3): xor %r8d,%r8d
3b3b(3): xor %r9d,%r9d
3b3e(5): jmp 0xfffff3a7(%rip)
3b43(3): test %r10d,%r10d
3b46(6): mov $0x0,%r13d
3b4c(5): mov $0x1,%eax
3b51(4): cmovns %r10d,%r13d
3b55(3): movsxd %r13d,%r13
3b58(3): test %r13,%r13
3b5b(4): cmove %rax,%r13
3b5f(3): mov %r15,%rax
3b62(3): not %rax
3b65(3): cmp %r13,%rax
3b68(6): jbe 0xffffee57(%rip)
3b6e(3): test %r12,%r12
3b71(6): jz 0xfffff46e(%rip)
3b77(4): cmp $0x1,%r10d
3b7b(2): jle 0x37(%rip)
3b7d(4): mov 0x8(%rsp),%eax
3b81(3): movsxd %r10d,%r10
3b84(4): lea 0xffffffff(%r10),%r14
3b88(3): cmp $0x30,%eax
3b8b(6): jz 0x7c1(%rip)
3b91(2): xor %ebp,%ebp
3b93(3): cmp $0x2b,%eax
3b96(6): jz 0x7b6(%rip)
3b9c(3): mov %r12,%rsi
3b9f(5): mov $0x20,%edi
3ba4(4): add $0x1,%rbp
3ba8(5): call 0xffffde68(%rip)
3bad(3): cmp %rbp,%r14
3bb0(2): jnz 0xffffffec(%rip)
3bb2(3): mov %r12,%rsi
3bb5(5): mov $0xa,%edi
3bba(5): call 0xffffde56(%rip)
3bbf(5): jmp 0xfffff420(%rip)
3bc4(2): xor %eax,%eax
3bc6(5): jmp 0xfffff380(%rip)
3bcb(5): movzx 0x34(%rsp),%eax
3bd0(3): test %r14b,%r14b
3bd3(4): cmovne %r14d,%eax
3bd7(4): cmp $0x45,%r11d
3bdb(6): jz 0x7bd(%rip)
3be1(3): mov %edi,%r13d
3be4(4): mov %al,0x34(%rsp)
3be8(3): xor %r14d,%r14d
3beb(5): jmp 0xfffff0c2(%rip)
3bf0(3): xor %r14d,%r14d
3bf3(5): jmp 0xfffffbdf(%rip)
3bf8(8): nop 0x0(%rax,%rax,1)
3c00(2): mov %ecx,%eax
3c02(2): neg %eax
3c04(3): test %r13b,%r13b
3c07(3): cmovne %eax,%ecx
3c0a(5): jmp 0xfffff5de(%rip)
3c0f(1): nop 
3c10(5): cmp $0x2d,0x8(%rsp)
3c15(5): mov $0x2d,%ebp
3c1a(6): jnz 0xfffff657(%rip)
3c20(5): mov $0x2d,0x40(%rsp)
3c25(3): test %r10d,%r10d
3c28(5): mov $0x0,%ecx
3c2d(5): mov $0x1,%eax
3c32(4): cmovns %r10d,%ecx
3c36(3): movsxd %ecx,%r13
3c39(3): test %r13,%r13
3c3c(4): cmovne %r13,%rax
3c40(3): mov %rax,%rdi
3c43(5): mov %rax,0x8(%rsp)
3c48(3): mov %r15,%rax
3c4b(3): not %rax
3c4e(3): cmp %rdi,%rax
3c51(6): jbe 0xffffed6e(%rip)
3c57(3): test %r12,%r12
3c5a(2): jz 0x5f(%rip)
3c5c(4): mov 0x58(%rsp),%edi
3c60(2): test %edi,%edi
3c62(2): jnz 0x40(%rip)
3c64(4): cmp $0x1,%r13
3c68(2): jbe 0x3a(%rip)
3c6a(3): movsxd %r10d,%rax
3c6d(4): sub $0x1,%rax
3c71(2): jz 0x31(%rip)
3c73(5): mov %rbx,0x48(%rsp)
3c78(2): xor %ebp,%ebp
3c7a(3): mov %rax,%rbx
3c7d(5): mov %r10d,0x50(%rsp)
3c82(3): mov %r12,%rsi
3c85(5): mov $0x20,%edi
3c8a(4): add $0x1,%rbp
3c8e(5): call 0xffffdd82(%rip)
3c93(3): cmp %rbp,%rbx
3c96(2): jnz 0xffffffec(%rip)
3c98(5): mov 0x48(%rsp),%rbx
3c9d(5): mov 0x50(%rsp),%r10d
3ca2(5): movsx 0x40(%rsp),%edi
3ca7(3): mov %r12,%rsi
3caa(5): mov %r10d,0x48(%rsp)
3caf(5): call 0xffffdd61(%rip)
3cb4(5): mov 0x48(%rsp),%r10d
3cb9(5): add 0x8(%rsp),%r15
3cbe(5): mov 0x38(%rsp),%rax
3cc3(3): mov %rbx,%rbp
3cc6(8): mov $0x2d,0x8(%rsp)
3cce(4): add $0x17,%rax
3cd2(3): sub %r14,%rax
3cd5(3): mov %r15,%rdx
3cd8(5): mov %rax,0x40(%rsp)
3cdd(3): not %rdx
3ce0(5): jmp 0xfffff43c(%rip)
3ce5(3): nop (%rax)
3ce8(5): mov 0x38(%rsp),%rdi
3ced(3): mov %r12,%rcx
3cf0(5): mov $0x1,%edx
3cf5(3): mov %r13,%rsi
3cf8(5): call 0xffffdef8(%rip)
3cfd(5): jmp 0xffffeed1(%rip)
3d02(6): nop 0x0(%rax,%rax,1)
3d08(5): mov 0x38(%rsp),%rdi
3d0d(3): mov %r12,%rcx
3d10(5): mov $0x1,%edx
3d15(3): mov %r13,%rsi
3d18(4): add $0x1,%rdi
3d1c(5): call 0xffffded4(%rip)
3d21(5): jmp 0xfffff0a2(%rip)
3d26(a): nop 0x0(%rax,%rax,1)
3d30(5): mov 0x38(%rsp),%rsi
3d35(3): mov %r13,%rdx
3d38(3): mov %r12,%rdi
3d3b(4): add $0x1,%rsi
3d3f(5): call 0xffffeb01(%rip)
3d44(5): jmp 0xfffff07f(%rip)
3d49(7): nop 0x0(%rax)
3d50(5): mov 0x40(%rsp),%rsi
3d55(3): mov %r12,%rcx
3d58(5): mov $0x1,%edx
3d5d(3): mov %r14,%rdi
3d60(5): call 0xffffde90(%rip)
3d65(5): jmp 0xfffff449(%rip)
3d6a(6): nop 0x0(%rax,%rax,1)
3d70(3): test %rbx,%rbx
3d73(6): jz 0xfffff028(%rip)
3d79(2): xor %edx,%edx
3d7b(5): mov %rbp,0x8(%rsp)
3d80(3): mov %rdx,%rbp
3d83(5): nop 0x0(%rax,%rax,1)
3d88(3): mov %r12,%rsi
3d8b(5): mov $0x30,%edi
3d90(4): add $0x1,%rbp
3d94(5): call 0xffffdc7c(%rip)
3d99(3): cmp %rbp,%rbx
3d9c(2): jnz 0xffffffec(%rip)
3d9e(5): jmp 0xffffeff8(%rip)
3da3(3): test %rbx,%rbx
3da6(6): jz 0xffffee0d(%rip)
3dac(2): xor %edx,%edx
3dae(5): mov %rbp,0x8(%rsp)
3db3(3): mov %rdx,%rbp
3db6(a): nop 0x0(%rax,%rax,1)
3dc0(3): mov %r12,%rsi
3dc3(5): mov $0x30,%edi
3dc8(4): add $0x1,%rbp
3dcc(5): call 0xffffdc44(%rip)
3dd1(3): cmp %rbp,%rbx
3dd4(2): jnz 0xffffffec(%rip)
3dd6(5): jmp 0xffffedd8(%rip)
3ddb(3): cmp %rdx,%rax
3dde(2): jnb 0x59(%rip)
3de0(3): movsxd %r10d,%rdx
3de3(3): mov %rdx,%rdi
3de6(3): sub %rax,%rdi
3de9(4): mov 0x8(%rsp),%eax
3ded(3): cmp $0x30,%eax
3df0(6): jz 0x3ea(%rip)
3df6(3): cmp $0x2b,%eax
3df9(6): jz 0x3e1(%rip)
3dff(2): xor %edx,%edx
3e01(3): test %rdi,%rdi
3e04(2): jz 0x33(%rip)
3e06(4): mov %ebp,0x34(%rsp)
3e0a(5): mov %rbx,0x40(%rsp)
3e0f(3): mov %rdi,%rbp
3e12(3): mov %rdx,%rbx
3e15(3): nop (%rax)
3e18(3): mov %r12,%rsi
3e1b(5): mov $0x20,%edi
3e20(4): add $0x1,%rbx
3e24(5): call 0xffffdbec(%rip)
3e29(3): cmp %rbx,%rbp
3e2c(2): jnz 0xffffffec(%rip)
3e2e(4): mov 0x34(%rsp),%ebp
3e32(5): mov 0x40(%rsp),%rbx
3e37(4): sub $0x8,%rsp
3e3b(3): mov %r14d,%r9d
3e3e(2): mov %ebp,%ecx
3e40(7): mov 0x508(%rsp),%eax
3e47(3): mov %r12,%rdi
3e4a(1): push %rax
3e4b(4): push 0x20(%rsp)
3e4f(4): push 0x30(%rsp)
3e53(5): mov 0x28(%rsp),%r8d
3e58(5): mov 0x20(%rsp),%rdx
3e5d(5): mov 0x58(%rsp),%rsi
3e62(5): call 0xffffea9e(%rip)
3e67(4): add $0x20,%rsp
3e6b(5): jmp 0xfffff174(%rip)
3e70(3): test %r13,%r13
3e73(6): jz 0xfffff320(%rip)
3e79(2): xor %edx,%edx
3e7b(5): mov %rbx,0x8(%rsp)
3e80(3): mov %rdx,%rbx
3e83(5): nop 0x0(%rax,%rax,1)
3e88(3): mov %r12,%rsi
3e8b(5): mov $0x30,%edi
3e90(4): add $0x1,%rbx
3e94(5): call 0xffffdb7c(%rip)
3e99(3): cmp %rbx,%r13
3e9c(2): jnz 0xffffffec(%rip)
3e9e(5): jmp 0xfffff2f0(%rip)
3ea3(2): xor %esi,%esi
3ea5(5): jmp 0xfffff055(%rip)
3eaa(6): mov $0x70,%r13d
3eb0(5): mov $0x0,0x34(%rsp)
3eb5(5): jmp 0xffffedf8(%rip)
3eba(2): xor %ebp,%ebp
3ebc(3): movsxd %r13d,%rax
3ebf(3): cmp %rdx,%rax
3ec2(5): mov %rax,0x8(%rsp)
3ec7(6): jnb 0xffffeaf8(%rip)
3ecd(3): test %r12,%r12
3ed0(2): jz 0x45(%rip)
3ed2(2): xor %edx,%edx
3ed4(5): mov %bpl,0x40(%rsp)
3ed9(5): mov %rbx,0x48(%rsp)
3ede(3): mov %rdx,%rbp
3ee1(3): mov %rax,%rbx
3ee4(5): mov %r10d,0x50(%rsp)
3ee9(7): nop 0x0(%rax)
3ef0(3): mov %r12,%rsi
3ef3(5): mov $0x20,%edi
3ef8(4): add $0x1,%rbp
3efc(5): call 0xffffdb14(%rip)
3f01(3): cmp %rbp,%rbx
3f04(2): jnbe 0xffffffec(%rip)
3f06(5): movzx 0x40(%rsp),%ebp
3f0b(5): mov 0x48(%rsp),%rbx
3f10(5): mov 0x50(%rsp),%r10d
3f15(5): add 0x8(%rsp),%r15
3f1a(3): mov %r10d,%eax
3f1d(3): sub %r13d,%eax
3f20(3): cmp %r13d,%r10d
3f23(6): mov $0x0,%r10d
3f29(4): cmovnl %eax,%r10d
3f2d(3): test %bpl,%bpl
3f30(3): mov %r15,%rdx
3f33(3): not %rdx
3f36(6): jnz 0x12d(%rip)
3f3c(5): mov 0x38(%rsp),%rax
3f41(3): movsxd %r10d,%r13
3f44(3): mov %rbx,%rbp
3f47(8): mov $0x5f,0x8(%rsp)
3f4f(4): add $0x17,%rax
3f53(3): sub %r14,%rax
3f56(5): mov %rax,0x40(%rsp)
3f5b(5): jmp 0xfffff1c1(%rip)
3f60(3): test %r10d,%r10d
3f63(5): mov $0x0,%ecx
3f68(5): mov $0x1,%eax
3f6d(4): cmovns %r10d,%ecx
3f71(3): movsxd %ecx,%r13
3f74(3): test %r13,%r13
3f77(4): cmovne %r13,%rax
3f7b(3): cmp %rdx,%rax
3f7e(5): mov %rax,0x48(%rsp)
3f83(6): jnb 0xffffea3c(%rip)
3f89(3): test %r12,%r12
3f8c(2): jz 0x7e(%rip)
3f8e(4): mov 0x58(%rsp),%ecx
3f92(2): test %ecx,%ecx
3f94(2): jnz 0x60(%rip)
3f96(4): cmp $0x1,%r13
3f9a(2): jbe 0x5a(%rip)
3f9c(4): mov 0x8(%rsp),%edi
3fa0(3): movsxd %r10d,%rax
3fa3(4): sub $0x1,%rax
3fa7(5): mov %rax,0x38(%rsp)
3fac(3): cmp $0x30,%edi
3faf(6): jz 0x4c7(%rip)
3fb5(3): cmp $0x2b,%edi
3fb8(6): jz 0x4be(%rip)
3fbe(2): xor %edx,%edx
3fc0(3): test %rax,%rax
3fc3(2): jz 0x31(%rip)
3fc5(5): mov %rbx,0x50(%rsp)
3fca(5): mov %r10d,0x5c(%rsp)
3fcf(3): mov %rdx,%rbx
3fd2(3): mov %r12,%rsi
3fd5(5): mov $0x20,%edi
3fda(4): add $0x1,%rbx
3fde(5): call 0xffffda32(%rip)
3fe3(5): cmp %rbx,0x38(%rsp)
3fe8(2): jnz 0xffffffea(%rip)
3fea(5): mov 0x50(%rsp),%rbx
3fef(5): mov 0x5c(%rsp),%r10d
3ff4(4): movsx %bpl,%edi
3ff8(3): mov %r12,%rsi
3ffb(5): mov %r10d,0x38(%rsp)
4000(5): call 0xffffda10(%rip)
4005(5): mov 0x38(%rsp),%r10d
400a(5): add 0x48(%rsp),%r15
400f(3): mov %rbx,%rbp
4012(3): mov %r15,%rdx
4015(3): not %rdx
4018(5): jmp 0xfffff104(%rip)
401d(5): mov $0x2b,0x40(%rsp)
4022(5): jmp 0xfffffc03(%rip)
4027(5): mov $0x4,%esi
402c(5): mov $0x270f,%edx
4031(2): cmp %ecx,%edx
4033(6): mov $0x1,%r9d
4039(8): mov $0x2b,0x8(%rsp)
4041(6): jb 0xfffff50b(%rip)
4047(3): cmp %esi,%r10d
404a(8): mov $0x2b,0x8(%rsp)
4052(4): setnle %r9b
4056(5): jmp 0xfffff4f6(%rip)
405b(3): mov %rbx,%rbp
405e(5): jmp 0xffffe9b2(%rip)
4063(3): movsxd %r10d,%rcx
4066(6): mov $0x1,%r13d
406c(3): test %rcx,%rcx
406f(4): cmovne %rcx,%r13
4073(3): cmp %rdx,%r13
4076(5): mov %r13,0x8(%rsp)
407b(6): jnb 0xffffe944(%rip)
4081(3): test %r12,%r12
4084(2): jz 0x71(%rip)
4086(4): mov 0x58(%rsp),%esi
408a(2): test %esi,%esi
408c(2): jnz 0x49(%rip)
408e(4): cmp $0x1,%r10d
4092(2): jbe 0x43(%rip)
4094(4): lea 0xffffffff(%rcx),%rax
4098(3): xor %r13d,%r13d
409b(5): mov %rbx,0x48(%rsp)
40a0(5): mov %r10d,0x50(%rsp)
40a5(3): mov %r13,%rbx
40a8(3): mov %rcx,%r13
40ab(5): mov %rax,0x40(%rsp)
40b0(3): mov %r12,%rsi
40b3(5): mov $0x20,%edi
40b8(4): add $0x1,%rbx
40bc(5): call 0xffffd954(%rip)
40c1(5): cmp %rbx,0x40(%rsp)
40c6(2): jnz 0xffffffea(%rip)
40c8(5): mov 0x48(%rsp),%rbx
40cd(5): mov 0x50(%rsp),%r10d
40d2(3): mov %r13,%rcx
40d5(4): movsx %bpl,%edi
40d9(3): mov %r12,%rsi
40dc(5): mov %r10d,0x48(%rsp)
40e1(5): mov %rcx,0x40(%rsp)
40e6(5): call 0xffffd92a(%rip)
40eb(5): mov 0x48(%rsp),%r10d
40f0(5): mov 0x40(%rsp),%rcx
40f5(5): add 0x8(%rsp),%r15
40fa(5): mov 0x38(%rsp),%rax
40ff(3): mov %rcx,%r13
4102(3): mov %rbx,%rbp
4105(8): mov $0x5f,0x8(%rsp)
410d(4): add $0x17,%rax
4111(3): sub %r14,%rax
4114(3): mov %r15,%rdx
4117(5): mov %rax,0x40(%rsp)
411c(3): not %rdx
411f(5): jmp 0xffffeffd(%rip)
4124(5): mov $0xfffff894,%eax
4129(3): sub %r8d,%eax
412c(2): cmp %eax,%esi
412e(6): jnl 0x3cf(%rip)
4134(2): neg %ecx
4136(5): cmp $0x0,0x8(%rsp)
413b(6): jnz 0xfffff3f6(%rip)
4141(4): mov 0x24(%rsp),%eax
4145(3): cmp $0x2b,%eax
4148(6): jz 0x383(%rip)
414e(4): mov %eax,0x8(%rsp)
4152(3): xor %r9d,%r9d
4155(5): mov $0x1,%eax
415a(3): xor %r13d,%r13d
415d(5): mov $0x2,%esi
4162(5): jmp 0xfffff3ea(%rip)
4167(5): mov $0xfffff894,%eax
416c(5): mov 0x8(%rsp),%r9d
4171(8): lea 0x76c(%rsi,%r8,1),%ecx
4179(3): sub %r8d,%eax
417c(2): cmp %eax,%esi
417e(4): setl %r13b
4182(3): setnl %al
4185(3): test %r9d,%r9d
4188(6): jz 0xfffff7ad(%rip)
418e(5): cmp $0x2b,0x8(%rsp)
4193(6): jz 0xfffffe94(%rip)
4199(3): xor %r9d,%r9d
419c(5): mov $0x4,%esi
41a1(5): jmp 0xfffff3ab(%rip)
41a6(a): nop 0x0(%rax,%rax,1)
41b0(7): mov 0x500(%rsp),%ecx
41b7(5): mov $0x9,%esi
41bc(6): mov $0x9,%r10d
41c2(5): jmp 0xffffed0e(%rip)
41c7(3): mov %rbx,%rbp
41ca(5): mov %rbx,0x38(%rsp)
41cf(6): mov $0x1,%r13d
41d5(5): jmp 0xffffe97f(%rip)
41da(3): test %rdi,%rdi
41dd(6): jz 0xfffffc5a(%rip)
41e3(2): xor %edx,%edx
41e5(4): mov %ebp,0x34(%rsp)
41e9(5): mov %rbx,0x40(%rsp)
41ee(3): mov %rdi,%rbp
41f1(3): mov %rdx,%rbx
41f4(4): nop 0x0(%rax)
41f8(3): mov %r12,%rsi
41fb(5): mov $0x30,%edi
4200(4): add $0x1,%rbx
4204(5): call 0xffffd80c(%rip)
4209(3): cmp %rbx,%rbp
420c(2): jnz 0xffffffec(%rip)
420e(5): jmp 0xfffffc20(%rip)
4213(4): imul %r8d,$0x64,%r8d
4217(6): mov $0x1,%r9d
421d(5): mov $0x9,%esi
4222(6): imul %ebp,$0x2710,%eax
4228(3): add %r8d,%eax
422b(6): mov $0x14,%r8d
4231(2): add %eax,%ecx
4233(3): mov %r13d,%eax
4236(3): xor $0x1,%eax
4239(5): jmp 0xffffecac(%rip)
423e(5): cmp $0x5f,0x8(%rsp)
4243(6): jz 0xfffffc77(%rip)
4249(5): movsxd 0x58(%rsp),%rax
424e(3): cmp %rdx,%rax
4251(6): jb 0xfffff100(%rip)
4257(5): jmp 0xffffe768(%rip)
425c(4): nop 0x0(%rax)
4260(4): sub $0x1,%r9d
4264(5): mov $0x16d,%edx
4269(4): test $0x3,%r9b
426d(2): jnz 0x3c(%rip)
426f(3): mov %r9d,%eax
4272(5): mov $0x51eb851f,%edx
4277(2): imul %eax,%edx,%edx
4279(3): mov %r9d,%eax
427c(3): sar $0x1f,%eax
427f(3): sar $0x5,%edx
4282(2): sub %eax,%edx
4284(3): imul %edx,$0x64,%eax
4287(5): mov $0x16e,%edx
428c(3): cmp %eax,%r9d
428f(2): jnz 0x1a(%rip)
4291(3): mov %r9d,%eax
4294(5): mov $0x190,%ecx
4299(1): cdq %eax
429a(2): idiv %ecx,%eax
429c(3): cmp $0x1,%edx
429f(2): sbb %edx,%edx
42a1(2): not %edx
42a3(6): add $0x16e,%edx
42a9(3): add %edx,%r8d
42ac(5): mov $0x92492493,%edx
42b1(3): mov %r8d,%ecx
42b4(3): sub %r14d,%ecx
42b7(6): add $0x17e,%ecx
42bd(2): mov %ecx,%eax
42bf(3): sub %ecx,%r8d
42c2(2): imul %eax,%edx,%edx
42c4(3): lea 0x0(%rdx,%rcx,1),%eax
42c7(2): mov %ecx,%edx
42c9(3): sar $0x1f,%edx
42cc(3): sar $0x2,%eax
42cf(2): sub %edx,%eax
42d1(7): lea 0x0(,%rax,8),%edx
42d8(2): sub %eax,%edx
42da(5): lea 0x3(%r8,%rdx,1),%ecx
42df(6): mov $0xffffffff,%r8d
42e5(5): jmp 0xfffff1ea(%rip)
42ea(2): mov %ecx,%eax
42ec(5): mov $0x92492493,%edx
42f1(5): mov $0x2,%esi
42f6(2): imul %eax,%edx,%edx
42f8(3): lea 0x0(%rdx,%rcx,1),%eax
42fb(3): sar $0x1f,%ecx
42fe(3): sar $0x2,%eax
4301(2): sub %ecx,%eax
4303(2): mov %eax,%ecx
4305(3): add $0x1,%ecx
4308(5): jmp 0xffffebc8(%rip)
430d(3): imul %ebp,$0x64,%ecx
4310(3): mov %r13d,%eax
4313(6): mov $0x1,%r9d
4319(3): xor $0x1,%eax
431c(5): mov $0x6,%esi
4321(3): add %r8d,%ecx
4324(6): mov $0x4,%r8d
432a(5): jmp 0xffffebbb(%rip)
432f(2): xor %ebp,%ebp
4331(3): mov %r12,%rsi
4334(5): mov $0x30,%edi
4339(4): add $0x1,%rbp
433d(5): call 0xffffd6d3(%rip)
4342(3): cmp %rbp,%r14
4345(2): jnz 0xffffffec(%rip)
4347(5): jmp 0xffffeb38(%rip)
434c(2): xor %ebp,%ebp
434e(3): mov %r12,%rsi
4351(5): mov $0x30,%edi
4356(4): add $0x1,%rbp
435a(5): call 0xffffd6b6(%rip)
435f(3): cmp %rbp,%r14
4362(2): jnz 0xffffffec(%rip)
4364(5): jmp 0xfffff84e(%rip)
4369(5): mov 0x28(%rsp),%rdi
436e(3): mov %r12,%rcx
4371(5): mov $0x1,%edx
4376(3): mov %r13,%rsi
4379(5): call 0xffffd877(%rip)
437e(5): jmp 0xfffff6a1(%rip)
4383(5): mov 0x28(%rsp),%rsi
4388(3): mov %r13,%rdx
438b(3): mov %r12,%rdi
438e(5): call 0xffffe4b2(%rip)
4393(5): jmp 0xfffff68c(%rip)
4398(4): mov %al,0x34(%rsp)
439c(5): jmp 0xffffe774(%rip)
43a1(4): lea 0x2(%rbx),%rcx
43a5(6): mov $0x1,%r14d
43ab(3): mov %rcx,%rdx
43ae(4): add $0x1,%rcx
43b2(4): movzx 0xffffffff(%rcx),%eax
43b6(4): add $0x1,%r14
43ba(2): cmp $0x3a,%al
43bc(6): jnz 0xfffff40b(%rip)
43c2(2): jmp 0xffffffe9(%rip)
43c4(3): movzx (%rbx),%ecx
43c7(5): mov %rbx,0x38(%rsp)
43cc(5): jmp 0xfffff30e(%rip)
43d1(3): imul %ebp,$0x64,%ecx
43d4(3): xor %r8d,%r8d
43d7(6): mov $0x1,%r9d
43dd(5): mov $0x5,%esi
43e2(2): add %eax,%ecx
43e4(3): mov %r13d,%eax
43e7(3): xor $0x1,%eax
43ea(5): jmp 0xffffeafb(%rip)
43ef(3): mov %r10d,%r14d
43f2(5): mov $0x0,%eax
43f7(4): sub $0x6,%r14d
43fb(4): cmovs %eax,%r14d
43ff(7): lea 0x397b(%rip),%rax
4406(5): mov %rax,0x38(%rsp)
440b(5): jmp 0xffffeb64(%rip)
4410(6): cmp $0x0,0x38(%rsp)
4416(6): jz 0xffffef2a(%rip)
441c(2): xor %edx,%edx
441e(5): mov %rbx,0x50(%rsp)
4423(3): mov %rdx,%rbx
4426(3): mov %r12,%rsi
4429(5): mov $0x30,%edi
442e(4): add $0x1,%rbx
4432(5): call 0xffffd5de(%rip)
4437(5): cmp %rbx,0x38(%rsp)
443c(2): jnz 0xffffffea(%rip)
443e(5): jmp 0xffffeefd(%rip)
4443(6): cmp $0x0,0x38(%rsp)
4449(6): jz 0xfffff5b2(%rip)
444f(2): xor %edx,%edx
4451(5): mov %rbx,0x8(%rsp)
4456(3): mov %rdx,%rbx
4459(3): mov %r12,%rsi
445c(5): mov $0x30,%edi
4461(4): add $0x1,%rbx
4465(5): call 0xffffd5ab(%rip)
446a(5): cmp %rbx,0x38(%rsp)
446f(2): jnz 0xffffffea(%rip)
4471(5): jmp 0xfffff585(%rip)
4476(6): cmp $0x0,0x38(%rsp)
447c(6): jz 0xfffffb78(%rip)
4482(2): xor %edx,%edx
4484(5): mov %rbx,0x50(%rsp)
4489(5): mov %r10d,0x5c(%rsp)
448e(3): mov %rdx,%rbx
4491(3): mov %r12,%rsi
4494(5): mov $0x30,%edi
4499(4): add $0x1,%rbx
449d(5): call 0xffffd573(%rip)
44a2(5): cmp %rbx,0x38(%rsp)
44a7(2): jnz 0xffffffea(%rip)
44a9(5): jmp 0xfffffb41(%rip)
44ae(2): xor %ebp,%ebp
44b0(3): mov %r12,%rsi
44b3(5): mov $0x30,%edi
44b8(4): add $0x1,%rbp
44bc(5): call 0xffffd554(%rip)
44c1(3): cmp %rbp,%r13
44c4(2): jnz 0xffffffec(%rip)
44c6(5): jmp 0xffffe539(%rip)
44cb(5): mov $0x1,%eax
44d0(3): xor %r13d,%r13d
44d3(5): mov $0x2,%esi
44d8(5): jmp 0xfffffb6f(%rip)
44dd(5): mov $0x2,%esi
44e2(5): mov $0x63,%edx
44e7(5): jmp 0xfffffb4a(%rip)
44ec(7): mov 0x500(%rsp),%ecx
44f3(5): jmp 0xfffff0e4(%rip)
44f8(5): call 0xffffd488(%rip)
44fd(3): add $0x64,%ecx
4500(5): cmp $0x0,0x8(%rsp)
4505(6): jz 0xfffffc3c(%rip)
450b(5): jmp 0xfffff026(%rip)
4510(2): xor %esi,%esi
4512(5): jmp 0xffffe9f8(%rip)

"fprintftime" :
4520(4): sub $0x20,%rsp
4524(6): mov $0xffffffff,%r9d
452a(9): mov $0x28,%rax
4533(5): mov %rax,0x10(%rsp)
4538(2): xor %eax,%eax
453a(5): mov $0x0,0xf(%rsp)
453f(2): push %r8
4541(3): xor %r8d,%r8d
4544(1): push %rcx
4545(2): xor %ecx,%ecx
4547(5): lea 0x1f(%rsp),%rax
454c(1): push %rax
454d(5): call 0xffffe3b3(%rip)
4552(4): add $0x20,%rsp
4556(5): mov 0x8(%rsp),%rdx
455b(9): xor $0x28,%rdx
4564(2): jnz 0x7(%rip)
4566(4): add $0x18,%rsp
456a(1): ret near (%rsp)
456b(5): call 0xffffd415(%rip)

"parse_long_options" :
4570(2): push %r13
4572(2): push %r12
4574(3): mov %r8,%r13
4577(1): push %rbp
4578(1): push %rbx
4579(3): mov %rdx,%rbp
457c(3): mov %rcx,%r12
457f(7): sub $0xe8,%rsp
4586(2): test %al,%al
4588(2): jz 0x3c(%rip)
458a(5): movaps %xmm0,0x60(%rsp)
458f(5): movaps %xmm1,0x70(%rsp)
4594(8): movaps %xmm2,0x80(%rsp)
459c(8): movaps %xmm3,0x90(%rsp)
45a4(8): movaps %xmm4,0xa0(%rsp)
45ac(8): movaps %xmm5,0xb0(%rsp)
45b4(8): movaps %xmm6,0xc0(%rsp)
45bc(8): movaps %xmm7,0xd0(%rsp)
45c4(9): mov $0x28,%rax
45cd(5): mov %rax,0x28(%rsp)
45d2(2): xor %eax,%eax
45d4(3): cmp $0x2,%edi
45d7(6): mov 0x205ac3(%rip),%ebx
45dd(a): mov $0x0,0x205ab9(%rip)
45e7(2): jz 0x39(%rip)
45e9(5): mov 0x28(%rsp),%rax
45ee(9): xor $0x28,%rax
45f7(6): mov %ebx,0x205aa3(%rip)
45fd(a): mov $0x0,0x205a89(%rip)
4607(6): jnz 0xa3(%rip)
460d(7): add $0xe8,%rsp
4614(1): pop %rbx
4615(1): pop %rbp
4616(2): pop %r12
4618(2): pop %r13
461a(1): ret near (%rsp)
461b(5): nop 0x0(%rax,%rax,1)
4620(7): lea 0x2054d9(%rip),%rcx
4627(7): lea 0x3952(%rip),%rdx
462e(3): xor %r8d,%r8d
4631(5): mov %r9,0x8(%rsp)
4636(5): call 0xffffd35a(%rip)
463b(3): cmp $0xff,%eax
463e(2): jz 0xffffffab(%rip)
4640(3): cmp $0x68,%eax
4643(5): mov 0x8(%rsp),%r9
4648(2): jz 0x58(%rip)
464a(3): cmp $0x76,%eax
464d(2): jnz 0xffffff9c(%rip)
464f(8): lea 0x110(%rsp),%rax
4657(7): mov 0x205a2a(%rip),%rdi
465e(5): lea 0x10(%rsp),%r8
4663(3): mov %r13,%rcx
4666(3): mov %r12,%rdx
4669(3): mov %rbp,%rsi
466c(5): mov %rax,0x18(%rsp)
4671(5): lea 0x30(%rsp),%rax
4676(8): mov $0x30,0x10(%rsp)
467e(8): mov $0x30,0x14(%rsp)
4686(5): mov %rax,0x20(%rsp)
468b(5): call 0x22d5(%rip)
4690(2): xor %edi,%edi
4692(5): call 0xffffd54e(%rip)
4697(9): nop 0x0(%rax,%rax,1)
46a0(2): xor %edi,%edi
46a2(3): call %r9
46a5(5): jmp 0xffffff44(%rip)
46aa(5): call 0xffffd2d6(%rip)

"parse_gnu_standard_options_only" :
46b0(2): push %r14
46b2(2): push %r13
46b4(3): mov %r8,%r14
46b7(2): push %r12
46b9(1): push %rbp
46ba(3): mov %rdx,%r12
46bd(1): push %rbx
46be(3): mov %rcx,%r13
46c1(7): sub $0xd0,%rsp
46c8(2): test %al,%al
46ca(8): mov 0x100(%rsp),%rbp
46d2(2): jz 0x39(%rip)
46d4(5): movaps %xmm0,0x50(%rsp)
46d9(5): movaps %xmm1,0x60(%rsp)
46de(5): movaps %xmm2,0x70(%rsp)
46e3(8): movaps %xmm3,0x80(%rsp)
46eb(8): movaps %xmm4,0x90(%rsp)
46f3(8): movaps %xmm5,0xa0(%rsp)
46fb(8): movaps %xmm6,0xb0(%rsp)
4703(8): movaps %xmm7,0xc0(%rsp)
470b(9): mov $0x28,%rax
4714(5): mov %rax,0x18(%rsp)
4719(2): xor %eax,%eax
471b(7): lea 0x3ddf(%rip),%rdx
4722(7): lea 0x3857(%rip),%rax
4729(3): test %r9b,%r9b
472c(7): lea 0x2053cd(%rip),%rcx
4733(4): cmove %rax,%rdx
4737(3): xor %r8d,%r8d
473a(6): mov 0x205960(%rip),%ebx
4740(a): mov $0x1,0x205956(%rip)
474a(5): call 0xffffd246(%rip)
474f(3): cmp $0xff,%eax
4752(2): jz 0x66(%rip)
4754(3): cmp $0x68,%eax
4757(6): jz 0x89(%rip)
475d(3): cmp $0x76,%eax
4760(2): jnz 0x50(%rip)
4762(8): lea 0x108(%rsp),%rax
476a(7): mov 0x205917(%rip),%rdi
4771(3): mov %rsp,%r8
4774(3): mov %r14,%rcx
4777(3): mov %r13,%rdx
477a(3): mov %r12,%rsi
477d(5): mov %rax,0x8(%rsp)
4782(5): lea 0x20(%rsp),%rax
4787(7): mov $0x30,(%rsp)
478e(8): mov $0x30,0x4(%rsp)
4796(5): mov %rax,0x10(%rsp)
479b(5): call 0x21c5(%rip)
47a0(2): xor %edi,%edi
47a2(5): call 0xffffd43e(%rip)
47a7(9): nop 0x0(%rax,%rax,1)
47b0(6): mov 0x205862(%rip),%edi
47b6(2): call %rbp
47b8(5): mov 0x18(%rsp),%rax
47bd(9): xor $0x28,%rax
47c6(6): mov %ebx,0x2058d4(%rip)
47cc(2): jnz 0x1a(%rip)
47ce(7): add $0xd0,%rsp
47d5(1): pop %rbx
47d6(1): pop %rbp
47d7(2): pop %r12
47d9(2): pop %r13
47db(2): pop %r14
47dd(1): ret near (%rsp)
47de(2): nop 
47e0(2): xor %edi,%edi
47e2(2): call %rbp
47e4(2): jmp 0xffffffd4(%rip)
47e6(5): call 0xffffd19a(%rip)

"set_program_name" :
47f0(3): test %rdi,%rdi
47f3(1): push %rbx
47f4(2): jz 0x79(%rip)
47f6(5): mov $0x2f,%esi
47fb(3): mov %rdi,%rbx
47fe(5): call 0xffffd1d2(%rip)
4803(3): test %rax,%rax
4806(2): jz 0x57(%rip)
4808(4): lea 0x1(%rax),%r8
480c(3): mov %r8,%rdx
480f(3): sub %rbx,%rdx
4812(4): cmp $0x6,%rdx
4816(2): jle 0x47(%rip)
4818(4): lea 0xfffffffa(%rax),%rsi
481c(7): lea 0x37a5(%rip),%rdi
4823(5): mov $0x7,%ecx
4828(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
482a(3): setnbe %dl
482d(3): sbb $0x0,%dl
4830(2): test %dl,%dl
4832(2): jnz 0x2b(%rip)
4834(7): lea 0x3795(%rip),%rdi
483b(5): mov $0x3,%ecx
4840(3): mov %r8,%rsi
4843(3): mov %r8,%rbx
4846(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4848(3): setnbe %dl
484b(3): sbb $0x0,%dl
484e(2): test %dl,%dl
4850(2): jnz 0xd(%rip)
4852(4): lea 0x4(%rax),%rbx
4856(7): mov %rbx,0x205823(%rip)
485d(7): mov %rbx,0x205884(%rip)
4864(7): mov %rbx,0x20582d(%rip)
486b(1): pop %rbx
486c(1): ret near (%rsp)
486d(7): mov 0x20584c(%rip),%rcx
4874(7): lea 0x3715(%rip),%rdi
487b(5): mov $0x37,%edx
4880(5): mov $0x1,%esi
4885(5): call 0xffffd36b(%rip)
488a(5): call 0xffffcfe6(%rip)

"gettext_quote.part.1" :
4890(1): push %rbp
4891(1): push %rbx
4892(3): mov %rdi,%rbp
4895(2): mov %esi,%ebx
4897(4): sub $0x8,%rsp
489b(5): call 0x2f35(%rip)
48a0(3): movzx (%rax),%edx
48a3(3): and $0xdf,%edx
48a6(3): cmp $0x55,%dl
48a9(2): jz 0x77(%rip)
48ab(3): cmp $0x47,%dl
48ae(2): jz 0x22(%rip)
48b0(7): lea 0x372c(%rip),%rax
48b7(7): lea 0x3727(%rip),%rdx
48be(3): cmp $0x9,%ebx
48c1(4): cmovne %rdx,%rax
48c5(4): add $0x8,%rsp
48c9(1): pop %rbx
48ca(1): pop %rbp
48cb(1): ret near (%rsp)
48cc(4): nop 0x0(%rax)
48d0(4): movzx 0x1(%rax),%edx
48d4(3): and $0xdf,%edx
48d7(3): cmp $0x42,%dl
48da(2): jnz 0xffffffd6(%rip)
48dc(4): cmp $0x31,0x2(%rax)
48e0(2): jnz 0xffffffd0(%rip)
48e2(4): cmp $0x38,0x3(%rax)
48e6(2): jnz 0xffffffca(%rip)
48e8(4): cmp $0x30,0x4(%rax)
48ec(2): jnz 0xffffffc4(%rip)
48ee(4): cmp $0x33,0x5(%rax)
48f2(2): jnz 0xffffffbe(%rip)
48f4(4): cmp $0x30,0x6(%rax)
48f8(2): jnz 0xffffffb8(%rip)
48fa(4): cmp $0x0,0x7(%rax)
48fe(2): jnz 0xffffffb2(%rip)
4900(4): cmp $0x60,0x0(%rbp)
4904(7): lea 0x36d1(%rip),%rax
490b(7): lea 0x36ce(%rip),%rdx
4912(4): cmovne %rdx,%rax
4916(4): add $0x8,%rsp
491a(1): pop %rbx
491b(1): pop %rbp
491c(1): ret near (%rsp)
491d(3): nop (%rax)
4920(4): movzx 0x1(%rax),%edx
4924(3): and $0xdf,%edx
4927(3): cmp $0x54,%dl
492a(2): jnz 0xffffff86(%rip)
492c(4): movzx 0x2(%rax),%edx
4930(3): and $0xdf,%edx
4933(3): cmp $0x46,%dl
4936(6): jnz 0xffffff7a(%rip)
493c(4): cmp $0x2d,0x3(%rax)
4940(6): jnz 0xffffff70(%rip)
4946(4): cmp $0x38,0x4(%rax)
494a(6): jnz 0xffffff66(%rip)
4950(4): cmp $0x0,0x5(%rax)
4954(6): jnz 0xffffff5c(%rip)
495a(4): cmp $0x60,0x0(%rbp)
495e(7): lea 0x366f(%rip),%rax
4965(7): lea 0x366c(%rip),%rdx
496c(4): cmovne %rdx,%rax
4970(4): add $0x8,%rsp
4974(1): pop %rbx
4975(1): pop %rbp
4976(1): ret near (%rsp)

"quotearg_buffer_restyled" :
4980(2): push %r15
4982(2): push %r14
4984(3): mov %r8d,%r15d
4987(2): push %r13
4989(2): push %r12
498b(3): mov %rdi,%r14
498e(1): push %rbp
498f(1): push %rbx
4990(3): mov %r9d,%ebx
4993(3): mov %rsi,%r13
4996(3): mov %rcx,%rbp
4999(3): and $0x2,%ebx
499c(7): sub $0xb8,%rsp
49a3(8): mov 0xf0(%rsp),%rax
49ab(5): mov %rdx,0x10(%rsp)
49b0(5): mov %r8d,0x8(%rsp)
49b5(5): mov %r9d,0x78(%rsp)
49ba(5): mov %rax,0x20(%rsp)
49bf(8): mov 0xf8(%rsp),%rax
49c7(5): mov %rax,0x68(%rsp)
49cc(8): mov 0x100(%rsp),%rax
49d4(5): mov %rax,0x60(%rsp)
49d9(9): mov $0x28,%rax
49e2(8): mov %rax,0xa8(%rsp)
49ea(2): xor %eax,%eax
49ec(5): call 0xffffcf74(%rip)
49f1(4): cmp $0xa,%r15d
49f5(5): mov %rax,0x58(%rsp)
49fa(6): jnbe 0x11b5(%rip)
4a00(7): lea 0x3639(%rip),%rcx
4a07(3): mov %r15d,%edx
4a0a(4): movsxd 0x0(%rcx,%rdx,4),%rax
4a0e(3): add %rcx,%rax
4a11(2): jmp %rax
4a13(5): mov $0x1,0xe(%rsp)
4a18(5): mov $0x0,0x7c(%rsp)
4a1d(3): xor %r12d,%r12d
4a20(9): mov $0x0,0x50(%rsp)
4a29(5): mov $0x1,0xf(%rsp)
4a2e(5): mov $0x0,0xd(%rsp)
4a33(7): lea 0x35ab(%rip),%rax
4a3a(9): mov $0x1,0x18(%rsp)
4a43(3): xor %r15d,%r15d
4a46(8): mov $0x2,0x8(%rsp)
4a4e(5): mov %rax,0x48(%rsp)
4a53(3): xor %r11d,%r11d
4a56(3): mov %rbp,%rax
4a59(3): mov %r12d,%r8d
4a5c(3): mov %r11,%rbp
4a5f(3): mov %rax,%r11
4a62(6): nop 0x0(%rax,%rax,1)
4a68(3): cmp %rbp,%r11
4a6b(4): setnz %r12b
4a6f(4): cmp $0xffffffff,%r11
4a73(2): jnz 0xf(%rip)
4a75(5): mov 0x10(%rsp),%rax
4a7a(4): cmp $0x0,0x0(%rax,%rbp,1)
4a7e(4): setnz %r12b
4a82(3): test %r12b,%r12b
4a85(6): jz 0x65b(%rip)
4a8b(5): cmp $0x2,0x8(%rsp)
4a90(5): mov 0x10(%rsp),%rdi
4a95(4): lea 0x0(%rdi,%rbp,1),%r9
4a99(3): setnz %al
4a9c(4): and 0xd(%rsp),%al
4aa0(3): mov %eax,%r10d
4aa3(6): jz 0xad(%rip)
4aa9(5): mov 0x18(%rsp),%rax
4aae(3): test %rax,%rax
4ab1(6): jz 0x42f(%rip)
4ab7(4): cmp $0xffffffff,%r11
4abb(5): lea 0x0(%rbp,%rax,1),%rbx
4ac0(2): jnz 0x30(%rip)
4ac2(4): cmp $0x1,%rax
4ac6(2): jbe 0x2a(%rip)
4ac8(5): mov %r8b,0x38(%rsp)
4acd(5): mov %r10b,0x30(%rsp)
4ad2(5): mov %r9,0x28(%rsp)
4ad7(5): call 0xffffce99(%rip)
4adc(6): movzx 0x38(%rsp),%r8d
4ae2(6): movzx 0x30(%rsp),%r10d
4ae8(3): mov %rax,%r11
4aeb(5): mov 0x28(%rsp),%r9
4af0(3): cmp %r11,%rbx
4af3(5): mov %r10b,0x28(%rsp)
4af8(6): jnbe 0x5b8(%rip)
4afe(5): mov 0x18(%rsp),%rdx
4b03(5): mov 0x48(%rsp),%rsi
4b08(3): mov %r9,%rdi
4b0b(5): mov %r11,0x40(%rsp)
4b10(5): mov %r8b,0x38(%rsp)
4b15(5): mov %r9,0x30(%rsp)
4b1a(5): call 0xffffcf06(%rip)
4b1f(2): test %eax,%eax
4b21(5): mov 0x30(%rsp),%r9
4b26(6): movzx 0x38(%rsp),%r8d
4b2c(5): mov 0x40(%rsp),%r11
4b31(6): jnz 0x57f(%rip)
4b37(5): cmp $0x0,0xf(%rsp)
4b3c(6): movzx 0x28(%rsp),%r10d
4b42(6): jnz 0xf83(%rip)
4b48(8): nop 0x0(%rax,%rax,1)
4b50(4): movzx (%r9),%ebx
4b54(3): cmp $0x7e,%bl
4b57(6): jnbe 0x321(%rip)
4b5d(7): lea 0x3508(%rip),%rcx
4b64(3): movzx %bl,%edx
4b67(4): movsxd 0x0(%rcx,%rdx,4),%rax
4b6b(3): add %rcx,%rax
4b6e(2): jmp %rax
4b70(3): xor %r10d,%r10d
4b73(4): cmp $0x1,%r11
4b77(3): setnz %al
4b7a(4): cmp $0xffffffff,%r11
4b7e(2): jnz 0xe(%rip)
4b80(5): mov 0x10(%rsp),%rax
4b85(4): cmp $0x0,0x1(%rax)
4b89(3): setnz %al
4b8c(5): cmp $0x2,0x8(%rsp)
4b91(3): setz %dl
4b94(2): test %al,%al
4b96(6): jz 0x252(%rip)
4b9c(3): xor %r12d,%r12d
4b9f(2): xor %eax,%eax
4ba1(7): nop 0x0(%rax)
4ba8(5): cmp $0x1,0xd(%rsp)
4bad(6): jnz 0x115(%rip)
4bb3(2): test %dl,%dl
4bb5(6): jnz 0x10d(%rip)
4bbb(5): mov 0x20(%rsp),%rsi
4bc0(3): test %rsi,%rsi
4bc3(2): jz 0x16(%rip)
4bc5(2): mov %ebx,%edx
4bc7(3): shr $0x5,%dl
4bca(3): movzx %dl,%edx
4bcd(3): mov 0x0(%rsi,%rdx,4),%edx
4bd0(3): bt %ebx,%edx
4bd3(6): jb 0x150(%rip)
4bd9(3): test %r10b,%r10b
4bdc(6): jnz 0x147(%rip)
4be2(3): xor $0x1,%eax
4be5(4): add $0x1,%rbp
4be9(3): and %r8d,%eax
4bec(2): test %al,%al
4bee(2): jz 0x22(%rip)
4bf0(3): cmp %r15,%r13
4bf3(2): jbe 0x7(%rip)
4bf5(5): mov $0x27,0x0(%r14,%r15,1)
4bfa(4): lea 0x1(%r15),%rax
4bfe(3): cmp %rax,%r13
4c01(2): jbe 0x8(%rip)
4c03(6): mov $0x27,0x1(%r14,%r15,1)
4c09(4): add $0x2,%r15
4c0d(3): xor %r8d,%r8d
4c10(3): cmp %r13,%r15
4c13(2): jnb 0x6(%rip)
4c15(4): mov %bl,0x0(%r14,%r15,1)
4c19(5): movzx 0xe(%rsp),%edi
4c1e(4): add $0x1,%r15
4c22(5): mov $0x0,%eax
4c27(3): test %r12b,%r12b
4c2a(3): cmove %eax,%edi
4c2d(5): mov %dil,0xe(%rsp)
4c32(5): jmp 0xfffffe36(%rip)
4c37(9): nop 0x0(%rax,%rax,1)
4c40(3): xor %r10d,%r10d
4c43(4): mov 0x8(%rsp),%eax
4c47(3): cmp $0x2,%eax
4c4a(6): jz 0x5be(%rip)
4c50(3): cmp $0x5,%eax
4c53(6): jz 0x575(%rip)
4c59(3): cmp $0x2,%eax
4c5c(5): mov $0x3f,%ebx
4c61(3): setz %dl
4c64(3): xor %r12d,%r12d
4c67(2): xor %eax,%eax
4c69(5): jmp 0xffffff3f(%rip)
4c6e(2): nop 
4c70(3): xor %r10d,%r10d
4c73(5): cmp $0x2,0x8(%rsp)
4c78(6): jz 0x508(%rip)
4c7e(5): mov %r12b,0x7c(%rsp)
4c83(2): xor %edx,%edx
4c85(2): xor %eax,%eax
4c87(5): mov $0x27,%ebx
4c8c(5): jmp 0xffffff1c(%rip)
4c91(7): nop 0x0(%rax)
4c98(5): mov $0x9,%edx
4c9d(5): mov $0x74,%ebx
4ca2(5): cmp $0x2,0x8(%rsp)
4ca7(3): setz %al
4caa(4): and 0xf(%rsp),%al
4cae(6): jnz 0x150(%rip)
4cb4(5): cmp $0x0,0xd(%rsp)
4cb9(2): jnz 0x67(%rip)
4cbb(2): mov %edx,%ebx
4cbd(3): xor %r12d,%r12d
4cc0(2): xor %eax,%eax
4cc2(5): cmp $0x0,0xf(%rsp)
4cc7(6): jnz 0xfffffef4(%rip)
4ccd(5): jmp 0xffffff0c(%rip)
4cd2(6): nop 0x0(%rax,%rax,1)
4cd8(5): mov $0x8,%edx
4cdd(5): mov $0x62,%ebx
4ce2(2): jmp 0xffffffd2(%rip)
4ce4(4): nop 0x0(%rax)
4ce8(5): cmp $0x2,0x8(%rsp)
4ced(6): jz 0x3d3(%rip)
4cf3(5): cmp $0x0,0xd(%rsp)
4cf8(6): jz 0x218(%rip)
4cfe(5): cmp $0x0,0xf(%rsp)
4d03(6): jz 0x20d(%rip)
4d09(6): cmp $0x0,0x18(%rsp)
4d0f(6): jnz 0x3bc(%rip)
4d15(5): mov $0x5c,%ebx
4d1a(6): nop 0x0(%rax,%rax,1)
4d20(3): xor %r12d,%r12d
4d23(5): cmp $0x2,0x8(%rsp)
4d28(3): setz %dl
4d2b(5): cmp $0x0,0xf(%rsp)
4d30(2): mov %edx,%eax
4d32(6): jnz 0x856(%rip)
4d38(3): mov %r8d,%eax
4d3b(3): xor $0x1,%eax
4d3e(2): and %dl,%al
4d40(2): jz 0x31(%rip)
4d42(3): cmp %r15,%r13
4d45(2): jbe 0x7(%rip)
4d47(5): mov $0x27,0x0(%r14,%r15,1)
4d4c(4): lea 0x1(%r15),%rdx
4d50(3): cmp %rdx,%r13
4d53(2): jbe 0x8(%rip)
4d55(6): mov $0x24,0x1(%r14,%r15,1)
4d5b(4): lea 0x2(%r15),%rdx
4d5f(3): cmp %rdx,%r13
4d62(2): jbe 0x8(%rip)
4d64(6): mov $0x27,0x2(%r14,%r15,1)
4d6a(4): add $0x3,%r15
4d6e(3): mov %eax,%r8d
4d71(3): cmp %r15,%r13
4d74(2): jbe 0x7(%rip)
4d76(5): mov $0x5c,0x0(%r14,%r15,1)
4d7b(4): add $0x1,%r15
4d7f(4): add $0x1,%rbp
4d83(5): jmp 0xfffffe8d(%rip)
4d88(8): nop 0x0(%rax,%rax,1)
4d90(5): cmp $0x0,0xd(%rsp)
4d95(6): jnz 0x1ce(%rip)
4d9b(2): xor %edx,%edx
4d9d(5): test $0x1,0x78(%rsp)
4da2(6): jz 0xffffff19(%rip)
4da8(4): add $0x1,%rbp
4dac(5): jmp 0xfffffcbc(%rip)
4db1(7): nop 0x0(%rax)
4db8(5): cmp $0x2,0x8(%rsp)
4dbd(3): setz %dl
4dc0(2): xor %eax,%eax
4dc2(5): jmp 0xfffffde6(%rip)
4dc7(9): nop 0x0(%rax,%rax,1)
4dd0(5): mov $0x7,%edx
4dd5(5): mov $0x61,%ebx
4dda(5): jmp 0xfffffeda(%rip)
4ddf(1): nop 
4de0(5): cmp $0x2,0x8(%rsp)
4de5(3): setz %dl
4de8(3): test %rbp,%rbp
4deb(6): jnz 0xfffffdb1(%rip)
4df1(5): movzx 0xf(%rsp),%eax
4df6(2): and %dl,%al
4df8(6): jz 0xfffffdb0(%rip)
4dfe(3): mov %r11,%rbp
4e01(8): mov $0x2,0x8(%rsp)
4e09(5): jmp 0x700(%rip)
4e0e(2): nop 
4e10(5): cmp $0x2,0x8(%rsp)
4e15(3): setz %dl
4e18(3): xor %r12d,%r12d
4e1b(2): jmp 0xffffffd6(%rip)
4e1d(3): nop (%rax)
4e20(5): cmp $0x2,0x8(%rsp)
4e25(5): mov $0x20,%ebx
4e2a(3): setz %dl
4e2d(2): jmp 0xffffffc4(%rip)
4e2f(1): nop 
4e30(5): mov $0xd,%edx
4e35(5): mov $0x72,%ebx
4e3a(5): jmp 0xfffffe68(%rip)
4e3f(1): nop 
4e40(5): mov $0xc,%edx
4e45(5): mov $0x66,%ebx
4e4a(5): jmp 0xfffffe6a(%rip)
4e4f(1): nop 
4e50(5): mov $0xb,%edx
4e55(5): mov $0x76,%ebx
4e5a(5): jmp 0xfffffe5a(%rip)
4e5f(1): nop 
4e60(5): mov $0xa,%edx
4e65(5): mov $0x6e,%ebx
4e6a(5): jmp 0xfffffe38(%rip)
4e6f(1): nop 
4e70(3): xor %r10d,%r10d
4e73(5): nop 0x0(%rax,%rax,1)
4e78(6): cmp $0x1,0x58(%rsp)
4e7e(6): jnz 0x3aa(%rip)
4e84(5): mov %r11,0x38(%rsp)
4e89(5): mov %r8b,0x30(%rsp)
4e8e(5): mov %r10b,0x28(%rsp)
4e93(5): call 0xffffcdad(%rip)
4e98(3): mov (%rax),%rcx
4e9b(3): movzx %bl,%edx
4e9e(6): movzx 0x28(%rsp),%r10d
4ea4(6): movzx 0x30(%rsp),%r8d
4eaa(5): mov 0x38(%rsp),%r11
4eaf(5): mov $0x1,%edi
4eb4(4): movzx 0x0(%rcx,%rdx,2),%eax
4eb8(4): and $0x4000,%ax
4ebc(4): setnz %r12b
4ec0(3): setz %al
4ec3(4): and 0xd(%rsp),%al
4ec7(2): test %al,%al
4ec9(6): jnz 0x998(%rip)
4ecf(5): cmp $0x2,0x8(%rsp)
4ed4(3): setz %dl
4ed7(5): jmp 0xfffffcd1(%rip)
4edc(4): nop 0x0(%rax)
4ee0(4): movzx (%r9),%ebx
4ee4(3): cmp $0x7e,%bl
4ee7(2): jnbe 0xffffff89(%rip)
4ee9(7): lea 0x3378(%rip),%rcx
4ef0(3): movzx %bl,%edx
4ef3(4): movsxd 0x0(%rcx,%rdx,4),%rax
4ef7(3): add %rcx,%rax
4efa(2): jmp %rax
4efc(4): nop 0x0(%rax)
4f00(3): xor %r10d,%r10d
4f03(5): cmp $0x0,0xd(%rsp)
4f08(6): jnz 0xfffffdf6(%rip)
4f0e(2): nop 
4f10(5): mov $0x5c,%edx
4f15(5): mov $0x5c,%ebx
4f1a(5): jmp 0xfffffd9a(%rip)
4f1f(1): nop 
4f20(5): mov $0xc,%edx
4f25(3): xor %r10d,%r10d
4f28(5): mov $0x66,%ebx
4f2d(5): jmp 0xfffffd87(%rip)
4f32(6): nop 0x0(%rax,%rax,1)
4f38(5): mov $0xa,%edx
4f3d(3): xor %r10d,%r10d
4f40(5): mov $0x6e,%ebx
4f45(5): jmp 0xfffffd5d(%rip)
4f4a(6): nop 0x0(%rax,%rax,1)
4f50(5): mov $0x61,%ebx
4f55(5): jmp 0xfffffdcb(%rip)
4f5a(6): nop 0x0(%rax,%rax,1)
4f60(3): xor %r10d,%r10d
4f63(5): cmp $0x2,0x8(%rsp)
4f68(3): setz %dl
4f6b(5): cmp $0x0,0xf(%rsp)
4f70(6): jnz 0xb9a(%rip)
4f76(3): mov %r8d,%eax
4f79(3): mov %r15,%rcx
4f7c(3): xor $0x1,%eax
4f7f(2): and %dl,%al
4f81(2): jz 0x2f(%rip)
4f83(3): cmp %r15,%r13
4f86(2): jbe 0x7(%rip)
4f88(5): mov $0x27,0x0(%r14,%r15,1)
4f8d(4): lea 0x1(%r15),%rcx
4f91(3): cmp %rcx,%r13
4f94(2): jbe 0x8(%rip)
4f96(6): mov $0x24,0x1(%r14,%r15,1)
4f9c(4): lea 0x2(%r15),%rcx
4fa0(3): cmp %rcx,%r13
4fa3(6): jnbe 0x636(%rip)
4fa9(4): lea 0x3(%r15),%rcx
4fad(3): mov %eax,%r8d
4fb0(3): cmp %rcx,%r13
4fb3(2): jbe 0x7(%rip)
4fb5(5): mov $0x5c,0x0(%r14,%rcx,1)
4fba(5): cmp $0x2,0x8(%rsp)
4fbf(4): lea 0x1(%rcx),%r15
4fc3(6): jz 0x606(%rip)
4fc9(4): lea 0x1(%rbp),%rax
4fcd(3): cmp %r11,%rax
4fd0(2): jnb 0x1b(%rip)
4fd2(5): mov 0x10(%rsp),%rax
4fd7(5): movzx 0x1(%rax,%rbp,1),%eax
4fdc(4): mov %al,0x28(%rsp)
4fe0(3): sub $0x30,%eax
4fe3(2): cmp $0x9,%al
4fe5(6): jbe 0x834(%rip)
4feb(3): mov %r12d,%eax
4fee(5): mov $0x30,%ebx
4ff3(3): xor %r12d,%r12d
4ff6(5): jmp 0xfffffbb2(%rip)
4ffb(5): nop 0x0(%rax,%rax,1)
5000(5): cmp $0x2,0x8(%rsp)
5005(3): mov %r10d,%r12d
5008(3): setz %dl
500b(3): xor %r10d,%r10d
500e(2): xor %eax,%eax
5010(5): jmp 0xfffffb98(%rip)
5015(3): nop (%rax)
5018(5): cmp $0x2,0x8(%rsp)
501d(3): setz %dl
5020(3): xor %r10d,%r10d
5023(5): jmp 0xfffffdc5(%rip)
5028(8): nop 0x0(%rax,%rax,1)
5030(5): cmp $0x2,0x8(%rsp)
5035(3): setz %dl
5038(3): xor %r10d,%r10d
503b(3): xor %r12d,%r12d
503e(5): jmp 0xfffffdb3(%rip)
5043(5): nop 0x0(%rax,%rax,1)
5048(5): cmp $0x2,0x8(%rsp)
504d(3): mov %r10d,%r12d
5050(5): mov $0x20,%ebx
5055(3): setz %dl
5058(3): xor %r10d,%r10d
505b(5): jmp 0xfffffd96(%rip)
5060(5): mov $0xd,%edx
5065(3): xor %r10d,%r10d
5068(5): mov $0x72,%ebx
506d(5): jmp 0xfffffc35(%rip)
5072(6): nop 0x0(%rax,%rax,1)
5078(5): mov $0x76,%ebx
507d(5): jmp 0xfffffca3(%rip)
5082(6): nop 0x0(%rax,%rax,1)
5088(5): mov $0x9,%edx
508d(3): xor %r10d,%r10d
5090(5): mov $0x74,%ebx
5095(5): jmp 0xfffffc0d(%rip)
509a(6): nop 0x0(%rax,%rax,1)
50a0(5): mov $0x62,%ebx
50a5(5): jmp 0xfffffc7b(%rip)
50aa(6): nop 0x0(%rax,%rax,1)
50b0(3): xor %r10d,%r10d
50b3(5): jmp 0xfffffa9d(%rip)
50b8(8): nop 0x0(%rax,%rax,1)
50c0(5): cmp $0x0,0xf(%rsp)
50c5(6): jnz 0x96b(%rip)
50cb(4): add $0x1,%rbp
50cf(3): mov %r8d,%eax
50d2(3): xor %r12d,%r12d
50d5(5): mov $0x5c,%ebx
50da(5): jmp 0xfffffb12(%rip)
50df(1): nop 
50e0(5): cmp $0x2,0x8(%rsp)
50e5(5): movzx 0xf(%rsp),%ebx
50ea(3): mov %r8d,%r12d
50ed(3): mov %r11,%rbp
50f0(3): setz %dl
50f3(2): mov %ebx,%eax
50f5(3): test %r15,%r15
50f8(3): setz %cl
50fb(2): and %edx,%eax
50fd(2): and %cl,%al
50ff(6): jnz 0xa67(%rip)
5105(2): mov %ebx,%eax
5107(3): xor $0x1,%eax
510a(2): and %al,%dl
510c(6): jz 0x970(%rip)
5112(5): cmp $0x0,0x7c(%rsp)
5117(6): jz 0x963(%rip)
511d(5): cmp $0x0,0xe(%rsp)
5122(6): jnz 0x9fb(%rip)
5128(3): test %r13,%r13
512b(3): setz %al
512e(6): cmp $0x0,0x50(%rsp)
5134(3): setnz %dl
5137(2): and %dl,%al
5139(6): jz 0xa23(%rip)
513f(5): mov 0x50(%rsp),%r13
5144(7): lea 0x2e9a(%rip),%rbx
514b(4): mov $0x27,(%r14)
514f(8): mov $0x2,0x8(%rsp)
5157(6): mov $0x1,%r15d
515d(9): mov $0x1,0x18(%rsp)
5166(5): mov $0x0,0xf(%rsp)
516b(5): mov %rbx,0x48(%rsp)
5170(4): mov %al,0x7c(%rsp)
5174(5): jmp 0xfffff8df(%rip)
5179(7): nop 0x0(%rax)
5180(5): cmp $0x0,0xf(%rsp)
5185(6): jnz 0x8ab(%rip)
518b(3): test %r13,%r13
518e(6): jz 0x402(%rip)
5194(2): xor %edx,%edx
5196(6): cmp $0x0,0x50(%rsp)
519c(6): jnz 0x3f4(%rip)
51a2(5): mov %r13,0x50(%rsp)
51a7(4): add $0x3,%r15
51ab(2): xor %eax,%eax
51ad(5): mov %r12b,0x7c(%rsp)
51b2(3): xor %r8d,%r8d
51b5(3): mov %rdx,%r13
51b8(5): mov $0x27,%ebx
51bd(5): jmp 0xfffffa1c(%rip)
51c2(6): nop 0x0(%rax,%rax,1)
51c8(5): test $0x4,0x78(%rsp)
51cd(2): jz 0x23(%rip)
51cf(4): lea 0x2(%rbp),%rcx
51d3(3): cmp %r11,%rcx
51d6(2): jnb 0x1a(%rip)
51d8(5): mov 0x10(%rsp),%rax
51dd(5): cmp $0x3f,0x1(%rax,%rbp,1)
51e2(6): jz 0x790(%rip)
51e8(8): nop 0x0(%rax,%rax,1)
51f0(2): xor %edx,%edx
51f2(3): xor %r12d,%r12d
51f5(2): xor %eax,%eax
51f7(5): mov $0x3f,%ebx
51fc(5): jmp 0xfffff9ac(%rip)
5201(7): nop 0x0(%rax)
5208(5): cmp $0x0,0xf(%rsp)
520d(6): jnz 0x823(%rip)
5213(3): xor %r12d,%r12d
5216(2): xor %eax,%eax
5218(5): mov $0x3f,%ebx
521d(5): jmp 0xfffff9bc(%rip)
5222(6): nop 0x0(%rax,%rax,1)
5228(8): lea 0xa0(%rsp),%rax
5230(4): cmp $0xffffffff,%r11
5234(c): mov $0x0,0xa0(%rsp)
5240(5): mov %rax,0x28(%rsp)
5245(2): jnz 0x2f(%rip)
5247(5): mov 0x10(%rsp),%rdi
524c(5): mov %r8b,0x40(%rsp)
5251(5): mov %r10b,0x38(%rsp)
5256(5): mov %r9,0x30(%rsp)
525b(5): call 0xffffc715(%rip)
5260(6): movzx 0x40(%rsp),%r8d
5266(6): movzx 0x38(%rsp),%r10d
526c(3): mov %rax,%r11
526f(5): mov 0x30(%rsp),%r9
5274(8): lea 0x9c(%rsp),%rax
527c(2): xor %ecx,%ecx
527e(4): mov %bl,0x7e(%rsp)
5282(5): mov %r8b,0x7d(%rsp)
5287(3): mov %rcx,%rbx
528a(8): mov %r9,0x88(%rsp)
5292(5): mov %rax,0x38(%rsp)
5297(5): mov %r10b,0x7f(%rsp)
529c(8): mov %r15,0x80(%rsp)
52a4(5): mov %r14,0x40(%rsp)
52a9(5): mov %r13,0x70(%rsp)
52ae(5): mov %r11,0x30(%rsp)
52b3(5): mov 0x10(%rsp),%rax
52b8(5): lea 0x0(%rbp,%rbx,1),%r14
52bd(5): mov 0x30(%rsp),%rdx
52c2(5): mov 0x28(%rsp),%rcx
52c7(5): mov 0x38(%rsp),%rdi
52cc(4): lea 0x0(%rax,%r14,1),%r13
52d0(3): sub %r14,%rdx
52d3(3): mov %r13,%rsi
52d6(5): call 0x1c1a(%rip)
52db(3): test %rax,%rax
52de(3): mov %rax,%r15
52e1(2): jz 0x50(%rip)
52e3(4): cmp $0xffffffff,%rax
52e7(6): jz 0x61e(%rip)
52ed(4): cmp $0xfffffffe,%rax
52f1(6): jz 0x5a0(%rip)
52f7(5): cmp $0x2,0x8(%rsp)
52fc(3): setz %al
52ff(4): and 0xf(%rsp),%al
5303(6): jnz 0x19d(%rip)
5309(7): mov 0x9c(%rsp),%edi
5310(5): call 0xffffc910(%rip)
5315(5): mov 0x28(%rsp),%rdi
531a(2): test %eax,%eax
531c(5): mov $0x0,%eax
5321(4): cmove %eax,%r12d
5325(3): add %r15,%rbx
5328(5): call 0xffffc8e8(%rip)
532d(2): test %eax,%eax
532f(2): jz 0xffffff84(%rip)
5331(3): mov %r12d,%edx
5334(3): mov %rbx,%rdi
5337(6): movzx 0x7d(%rsp),%r8d
533d(3): xor $0x1,%edx
5340(5): movzx 0x7e(%rsp),%ebx
5345(6): movzx 0x7f(%rsp),%r10d
534b(4): and 0xd(%rsp),%dl
534f(8): mov 0x80(%rsp),%r15
5357(5): mov 0x40(%rsp),%r14
535c(5): mov 0x70(%rsp),%r13
5361(5): mov 0x30(%rsp),%r11
5366(4): cmp $0x1,%rdi
536a(6): jbe 0x601(%rip)
5370(3): mov %rdi,%rcx
5373(2): xor %esi,%esi
5375(6): movzx 0xf(%rsp),%r9d
537b(3): add %rbp,%rcx
537e(5): mov 0x10(%rsp),%rdi
5383(5): jmp 0xbb(%rip)
5388(8): nop 0x0(%rax,%rax,1)
5390(5): cmp $0x2,0x8(%rsp)
5395(3): setz %al
5398(3): test %r9b,%r9b
539b(6): jnz 0x4b5(%rip)
53a1(3): mov %r8d,%esi
53a4(3): xor $0x1,%esi
53a7(3): and %sil,%al
53aa(2): jz 0x31(%rip)
53ac(3): cmp %r15,%r13
53af(2): jbe 0x7(%rip)
53b1(5): mov $0x27,0x0(%r14,%r15,1)
53b6(4): lea 0x1(%r15),%rsi
53ba(3): cmp %rsi,%r13
53bd(2): jbe 0x8(%rip)
53bf(6): mov $0x24,0x1(%r14,%r15,1)
53c5(4): lea 0x2(%r15),%rsi
53c9(3): cmp %rsi,%r13
53cc(2): jbe 0x8(%rip)
53ce(6): mov $0x27,0x2(%r14,%r15,1)
53d4(4): add $0x3,%r15
53d8(3): mov %eax,%r8d
53db(3): cmp %r15,%r13
53de(2): jbe 0x7(%rip)
53e0(5): mov $0x5c,0x0(%r14,%r15,1)
53e5(4): lea 0x1(%r15),%rax
53e9(3): cmp %rax,%r13
53ec(2): jbe 0xf(%rip)
53ee(2): mov %ebx,%eax
53f0(3): shr $0x6,%al
53f3(3): add $0x30,%eax
53f6(5): mov %al,0x1(%r14,%r15,1)
53fb(4): lea 0x2(%r15),%rax
53ff(3): cmp %rax,%r13
5402(2): jbe 0x12(%rip)
5404(2): mov %ebx,%eax
5406(3): shr $0x3,%al
5409(3): and $0x7,%eax
540c(3): add $0x30,%eax
540f(5): mov %al,0x2(%r14,%r15,1)
5414(3): and $0x7,%ebx
5417(4): add $0x1,%rbp
541b(4): add $0x3,%r15
541f(3): add $0x30,%ebx
5422(3): cmp %rcx,%rbp
5425(6): jnb 0xfffff7eb(%rip)
542b(2): mov %edx,%esi
542d(3): cmp %r15,%r13
5430(2): jbe 0x6(%rip)
5432(4): mov %bl,0x0(%r14,%r15,1)
5436(4): movzx 0x0(%rdi,%rbp,1),%ebx
543a(4): add $0x1,%r15
543e(2): test %dl,%dl
5440(6): jnz 0xffffff50(%rip)
5446(2): mov %esi,%eax
5448(3): xor $0x1,%eax
544b(3): and %r8d,%eax
544e(3): test %r10b,%r10b
5451(2): jz 0x10(%rip)
5453(3): cmp %r15,%r13
5456(2): jbe 0x7(%rip)
5458(5): mov $0x5c,0x0(%r14,%r15,1)
545d(4): add $0x1,%r15
5461(4): add $0x1,%rbp
5465(3): cmp %rcx,%rbp
5468(6): jnb 0xfffff784(%rip)
546e(2): test %al,%al
5470(6): jz 0x3fe(%rip)
5476(3): cmp %r15,%r13
5479(2): jbe 0x7(%rip)
547b(5): mov $0x27,0x0(%r14,%r15,1)
5480(4): lea 0x1(%r15),%rax
5484(3): cmp %rax,%r13
5487(2): jbe 0x8(%rip)
5489(6): mov $0x27,0x1(%r14,%r15,1)
548f(4): add $0x2,%r15
5493(3): xor %r10d,%r10d
5496(3): xor %r8d,%r8d
5499(2): jmp 0xffffff94(%rip)
549b(5): nop 0x0(%rax,%rax,1)
54a0(4): cmp $0x1,%r15
54a4(6): jz 0xfffffe65(%rip)
54aa(5): mov 0x10(%rsp),%rdi
54af(4): lea 0x0(%rdi,%r15,1),%rcx
54b3(5): lea 0x1(%rdi,%r14,1),%rdx
54b8(4): lea 0x0(%rcx,%r14,1),%r8
54bc(2): jmp 0x11(%rip)
54be(2): nop 
54c0(4): add $0x1,%rdx
54c4(3): cmp %rdx,%r8
54c7(6): jz 0xfffffe42(%rip)
54cd(3): movzx (%rdx),%ecx
54d0(3): sub $0x5b,%ecx
54d3(3): cmp $0x21,%cl
54d6(2): jnbe 0xffffffea(%rip)
54d8(5): mov $0x1,%esi
54dd(3): shl/sal %cl,%rsi
54e0(3): mov %rsi,%rcx
54e3(a): mov $0x8589934635,%rsi
54ed(3): test %rsi,%rcx
54f0(2): jz 0xffffffd0(%rip)
54f2(5): mov 0x40(%rsp),%r14
54f7(5): mov 0x70(%rsp),%r13
54fc(5): mov 0x30(%rsp),%rbp
5501(8): mov $0x2,0x8(%rsp)
5509(5): cmp $0x0,0xd(%rsp)
550e(2): jz 0x12(%rip)
5510(2): test %al,%al
5512(5): mov $0x4,%eax
5517(5): cmove 0x8(%rsp),%eax
551c(4): mov %eax,0x8(%rsp)
5520(4): sub $0x8,%rsp
5524(3): mov %rbp,%rcx
5527(3): mov %r13,%rsi
552a(4): push 0x68(%rsp)
552e(4): push 0x78(%rsp)
5532(3): mov %r14,%rdi
5535(2): push $0x0
5537(8): mov 0x98(%rsp),%r9d
553f(5): mov 0x28(%rsp),%r8d
5544(5): mov 0x30(%rsp),%rdx
5549(4): and $0xfd,%r9d
554d(5): call 0xfffff433(%rip)
5552(4): add $0x20,%rsp
5556(3): mov %rax,%r15
5559(8): mov 0xa8(%rsp),%rbx
5561(9): xor $0x28,%rbx
556a(3): mov %r15,%rax
556d(6): jnz 0x606(%rip)
5573(7): add $0xb8,%rsp
557a(1): pop %rbx
557b(1): pop %rbp
557c(2): pop %r12
557e(2): pop %r13
5580(2): pop %r14
5582(2): pop %r15
5584(1): ret near (%rsp)
5585(3): nop (%rax)
5588(3): mov %r11,%rbp
558b(5): jmp 0xffffff7e(%rip)
5590(3): cmp %r15,%r13
5593(2): jbe 0x7(%rip)
5595(5): mov $0x27,0x0(%r14,%r15,1)
559a(4): lea 0x1(%r15),%rax
559e(3): cmp %rax,%r13
55a1(2): jbe 0x8(%rip)
55a3(6): mov $0x5c,0x1(%r14,%r15,1)
55a9(4): lea 0x2(%r15),%rax
55ad(3): cmp %rax,%r13
55b0(6): jbe 0x5f2(%rip)
55b6(3): mov %r13,%rdx
55b9(6): mov $0x27,0x2(%r14,%r15,1)
55bf(5): mov 0x50(%rsp),%r13
55c4(5): jmp 0xfffffbde(%rip)
55c9(3): mov %r12d,%eax
55cc(5): mov $0x30,%ebx
55d1(3): xor %r12d,%r12d
55d4(5): jmp 0xfffff605(%rip)
55d9(6): mov $0x27,0x2(%r14,%r15,1)
55df(5): jmp 0xfffff9ca(%rip)
55e4(2): test %ebx,%ebx
55e6(6): jnz 0xfffff42d(%rip)
55ec(5): mov $0x1,0xd(%rsp)
55f1(3): test %r13,%r13
55f4(6): jnz 0x596(%rip)
55fa(7): lea 0x29e4(%rip),%rax
5601(9): mov $0x0,0x50(%rsp)
560a(5): mov $0x1,0xe(%rsp)
560f(5): mov $0x0,0x7c(%rsp)
5614(3): xor %r12d,%r12d
5617(5): mov $0x0,0xf(%rsp)
561c(9): mov $0x1,0x18(%rsp)
5625(5): mov %rax,0x48(%rsp)
562a(6): mov $0x1,%r15d
5630(8): mov $0x2,0x8(%rsp)
5638(5): jmp 0xfffff41b(%rip)
563d(3): nop (%rax)
5640(2): test %ebx,%ebx
5642(6): jnz 0x3fb(%rip)
5648(3): test %r13,%r13
564b(6): jz 0x22b(%rip)
5651(4): mov $0x22,(%r14)
5655(5): mov $0x1,0xe(%rsp)
565a(3): xor %r12d,%r12d
565d(5): mov $0x0,0x7c(%rsp)
5662(9): mov $0x0,0x50(%rsp)
566b(7): lea 0x2971(%rip),%rax
5672(5): mov $0x0,0xf(%rsp)
5677(5): mov $0x1,0xd(%rsp)
567c(9): mov $0x1,0x18(%rsp)
5685(6): mov $0x1,%r15d
568b(5): mov %rax,0x48(%rsp)
5690(5): jmp 0xfffff3c3(%rip)
5695(7): lea 0x2947(%rip),%rax
569c(5): mov $0x1,0xe(%rsp)
56a1(5): mov $0x0,0x7c(%rsp)
56a6(3): xor %r12d,%r12d
56a9(9): mov $0x0,0x50(%rsp)
56b2(5): mov $0x1,0xf(%rsp)
56b7(5): mov $0x1,0xd(%rsp)
56bc(9): mov $0x1,0x18(%rsp)
56c5(3): xor %r15d,%r15d
56c8(5): mov %rax,0x48(%rsp)
56cd(8): mov $0x5,0x8(%rsp)
56d5(5): jmp 0xfffff37e(%rip)
56da(5): mov $0x1,0xe(%rsp)
56df(5): mov $0x0,0x7c(%rsp)
56e4(3): xor %r12d,%r12d
56e7(9): mov $0x0,0x50(%rsp)
56f0(5): mov $0x0,0xf(%rsp)
56f5(3): xor %r15d,%r15d
56f8(5): mov $0x1,0xd(%rsp)
56fd(9): mov $0x0,0x18(%rsp)
5706(9): mov $0x0,0x48(%rsp)
570f(5): jmp 0xfffff344(%rip)
5714(5): cmp $0xa,0x8(%rsp)
5719(2): jz 0x58(%rip)
571b(7): lea 0x28c5(%rip),%rsi
5722(2): xor %edi,%edi
5724(5): mov $0x5,%edx
5729(5): call 0xffffc227(%rip)
572e(3): mov %rax,%rcx
5731(5): mov %rax,0x68(%rsp)
5736(7): lea 0x28aa(%rip),%rax
573d(3): cmp %rax,%rcx
5740(6): jz 0x39e(%rip)
5746(7): lea 0x2898(%rip),%rsi
574d(2): xor %edi,%edi
574f(5): mov $0x5,%edx
5754(5): call 0xffffc1fc(%rip)
5759(3): mov %rax,%rcx
575c(5): mov %rax,0x60(%rsp)
5761(7): lea 0x287d(%rip),%rax
5768(3): cmp %rax,%rcx
576b(6): jz 0x389(%rip)
5771(3): xor %r15d,%r15d
5774(2): test %ebx,%ebx
5776(6): jz 0x1c7(%rip)
577c(2): test %ebx,%ebx
577e(5): mov 0x60(%rsp),%rbx
5783(5): setnz 0xf(%rsp)
5788(3): xor %r12d,%r12d
578b(3): mov %rbx,%rdi
578e(5): call 0xffffc1e2(%rip)
5793(5): mov %rbx,0x48(%rsp)
5798(5): mov %rax,0x18(%rsp)
579d(5): mov $0x1,0xe(%rsp)
57a2(5): mov $0x0,0x7c(%rsp)
57a7(9): mov $0x0,0x50(%rsp)
57b0(5): mov $0x1,0xd(%rsp)
57b5(5): jmp 0xfffff29e(%rip)
57ba(5): mov $0x1,0xe(%rsp)
57bf(5): mov $0x0,0x7c(%rsp)
57c4(3): xor %r12d,%r12d
57c7(9): mov $0x0,0x50(%rsp)
57d0(5): mov $0x0,0xf(%rsp)
57d5(3): xor %r15d,%r15d
57d8(5): mov $0x0,0xd(%rsp)
57dd(9): mov $0x0,0x18(%rsp)
57e6(9): mov $0x0,0x48(%rsp)
57ef(5): jmp 0xfffff264(%rip)
57f4(5): mov $0x1,0xe(%rsp)
57f9(5): mov $0x0,0x7c(%rsp)
57fe(3): xor %r12d,%r12d
5801(9): mov $0x0,0x50(%rsp)
580a(5): mov $0x1,0xf(%rsp)
580f(5): mov $0x1,0xd(%rsp)
5814(5): jmp 0xfffff21f(%rip)
5819(3): cmp %r15,%r13
581c(2): jbe 0x7(%rip)
581e(5): mov $0x30,0x0(%r14,%r15,1)
5823(4): lea 0x2(%rcx),%rax
5827(3): cmp %rax,%r13
582a(2): jbe 0x8(%rip)
582c(6): mov $0x30,0x2(%r14,%rcx,1)
5832(3): mov %r12d,%eax
5835(4): lea 0x3(%rcx),%r15
5839(3): xor %r12d,%r12d
583c(5): mov $0x30,%ebx
5841(5): jmp 0xfffff367(%rip)
5846(a): nop 0x0(%rax,%rax,1)
5850(5): movzx 0xf(%rsp),%ebx
5855(3): mov %r11,%rbp
5858(4): mov %bl,0xd(%rsp)
585c(5): jmp 0xfffffcad(%rip)
5861(5): movzx 0xd(%rsp),%edx
5866(3): xor %r12d,%r12d
5869(5): jmp 0xfffffb07(%rip)
586e(3): xor %r10d,%r10d
5871(5): jmp 0xfffffbbc(%rip)
5876(9): mov $0x0,0x50(%rsp)
587f(5): mov $0x1,0xe(%rsp)
5884(3): xor %r12d,%r12d
5887(5): mov $0x0,0x7c(%rsp)
588c(5): jmp 0xfffffddf(%rip)
5891(5): mov 0x30(%rsp),%r11
5896(3): mov %r14,%rsi
5899(3): mov %r13,%rcx
589c(3): mov %rbx,%rax
589f(3): mov %rbx,%rdi
58a2(6): movzx 0x7d(%rsp),%r8d
58a8(5): movzx 0x7e(%rsp),%ebx
58ad(8): mov 0x88(%rsp),%r9
58b5(3): cmp %r11,%rsi
58b8(6): movzx 0x7f(%rsp),%r10d
58be(8): mov 0x80(%rsp),%r15
58c6(5): mov 0x40(%rsp),%r14
58cb(5): mov 0x70(%rsp),%r13
58d0(2): jnb 0x28(%rip)
58d2(3): cmp $0x0,(%rcx)
58d5(2): jnz 0x12(%rip)
58d7(2): jmp 0x21(%rip)
58d9(7): nop 0x0(%rax)
58e0(5): cmp $0x0,0x0(%r9,%rax,1)
58e5(2): jz 0x10(%rip)
58e7(4): add $0x1,%rax
58eb(5): lea 0x0(%rbp,%rax,1),%rdx
58f0(3): cmp %rdx,%r11
58f3(2): jnbe 0xffffffed(%rip)
58f5(3): mov %rax,%rdi
58f8(5): movzx 0xd(%rsp),%edx
58fd(3): xor %r12d,%r12d
5900(5): jmp 0xfffffa66(%rip)
5905(3): mov %rbx,%rdi
5908(6): movzx 0x7d(%rsp),%r8d
590e(5): movzx 0x7e(%rsp),%ebx
5913(6): movzx 0x7f(%rsp),%r10d
5919(8): mov 0x80(%rsp),%r15
5921(3): xor %r12d,%r12d
5924(5): mov 0x40(%rsp),%r14
5929(5): mov 0x70(%rsp),%r13
592e(5): mov 0x30(%rsp),%r11
5933(5): movzx 0xd(%rsp),%edx
5938(5): jmp 0xfffffa2e(%rip)
593d(5): mov 0x68(%rsp),%rdx
5942(3): movzx (%rdx),%eax
5945(2): test %al,%al
5947(6): jz 0xfffffe35(%rip)
594d(3): nop (%rax)
5950(3): cmp %r15,%r13
5953(2): jbe 0x6(%rip)
5955(4): mov %al,0x0(%r14,%r15,1)
5959(4): add $0x1,%r15
595d(5): movzx 0x0(%rdx,%r15,1),%eax
5962(2): test %al,%al
5964(2): jnz 0xffffffec(%rip)
5966(5): jmp 0xfffffe16(%rip)
596b(2): mov %edx,%eax
596d(5): jmp 0xfffff55a(%rip)
5972(4): movzx 0x0(%rax,%rcx,1),%ebx
5976(3): cmp $0x3e,%bl
5979(6): jnbe 0xfffff877(%rip)
597f(a): mov $0x8070630310989004800,%rax
5989(4): bt %rbx,%rax
598d(6): jnb 0xfffff863(%rip)
5993(5): cmp $0x0,0xf(%rsp)
5998(6): jnz 0x1ea(%rip)
599e(3): cmp %r15,%r13
59a1(2): jbe 0x7(%rip)
59a3(5): mov $0x3f,0x0(%r14,%r15,1)
59a8(4): lea 0x1(%r15),%rax
59ac(3): cmp %rax,%r13
59af(2): jbe 0x8(%rip)
59b1(6): mov $0x22,0x1(%r14,%r15,1)
59b7(4): lea 0x2(%r15),%rax
59bb(3): cmp %rax,%r13
59be(2): jbe 0x8(%rip)
59c0(6): mov $0x22,0x2(%r14,%r15,1)
59c6(4): lea 0x3(%r15),%rax
59ca(3): cmp %rax,%r13
59cd(2): jbe 0x8(%rip)
59cf(6): mov $0x3f,0x3(%r14,%r15,1)
59d5(4): add $0x4,%r15
59d9(2): xor %edx,%edx
59db(3): xor %r12d,%r12d
59de(2): xor %eax,%eax
59e0(3): mov %rcx,%rbp
59e3(5): jmp 0xfffff1c5(%rip)
59e8(2): test %ebx,%ebx
59ea(6): jz 0x18e(%rip)
59f0(7): lea 0x25ee(%rip),%rax
59f7(5): mov $0x1,0xe(%rsp)
59fc(5): mov $0x0,0x7c(%rsp)
5a01(3): xor %r12d,%r12d
5a04(9): mov $0x0,0x50(%rsp)
5a0d(5): mov $0x1,0xf(%rsp)
5a12(5): mov $0x0,0xd(%rsp)
5a17(9): mov $0x1,0x18(%rsp)
5a20(3): xor %r15d,%r15d
5a23(5): mov %rax,0x48(%rsp)
5a28(5): jmp 0xfffff02b(%rip)
5a2d(3): nop (%rax)
5a30(3): mov %r11,%rbp
5a33(5): movzx 0xf(%rsp),%eax
5a38(5): jmp 0xfffffad1(%rip)
5a3d(7): lea 0x259f(%rip),%rax
5a44(5): mov $0x1,0xe(%rsp)
5a49(5): mov $0x0,0x7c(%rsp)
5a4e(3): xor %r12d,%r12d
5a51(9): mov $0x0,0x50(%rsp)
5a5a(5): mov $0x1,0xf(%rsp)
5a5f(5): mov $0x1,0xd(%rsp)
5a64(9): mov $0x1,0x18(%rsp)
5a6d(3): xor %r15d,%r15d
5a70(5): mov %rax,0x48(%rsp)
5a75(5): jmp 0xffffefde(%rip)
5a7a(2): mov %edx,%eax
5a7c(5): mov 0x48(%rsp),%rbx
5a81(3): test %rbx,%rbx
5a84(2): jz 0x2e(%rip)
5a86(2): test %al,%al
5a88(2): jz 0x2a(%rip)
5a8a(3): movzx (%rbx),%ecx
5a8d(3): mov %rbx,%rax
5a90(2): test %cl,%cl
5a92(2): jz 0x20(%rip)
5a94(3): mov %r15,%rdx
5a97(3): sub %r15,%rax
5a9a(3): cmp %rdx,%r13
5a9d(2): jbe 0x6(%rip)
5a9f(4): mov %cl,0x0(%r14,%rdx,1)
5aa3(4): add $0x1,%rdx
5aa7(4): movzx 0x0(%rax,%rdx,1),%ecx
5aab(2): test %cl,%cl
5aad(2): jnz 0xffffffed(%rip)
5aaf(3): mov %rdx,%r15
5ab2(3): cmp %r15,%r13
5ab5(6): jbe 0xfffffaa4(%rip)
5abb(5): mov $0x0,0x0(%r14,%r15,1)
5ac0(5): jmp 0xfffffa99(%rip)
5ac5(5): cmp $0x2,0x8(%rsp)
5aca(5): movzx 0xf(%rsp),%ebx
5acf(3): mov %r11,%rbp
5ad2(3): setz %al
5ad5(4): mov %bl,0xd(%rsp)
5ad9(5): jmp 0xfffffa30(%rip)
5ade(4): mov 0x8(%rsp),%esi
5ae2(3): mov %rcx,%rdi
5ae5(5): call 0xffffedab(%rip)
5aea(5): mov %rax,0x68(%rsp)
5aef(5): jmp 0xfffffc57(%rip)
5af4(4): mov 0x8(%rsp),%esi
5af8(3): mov %rcx,%rdi
5afb(5): call 0xffffed95(%rip)
5b00(5): mov %rax,0x60(%rsp)
5b05(5): jmp 0xfffffc6c(%rip)
5b0a(5): movzx 0xf(%rsp),%ebx
5b0f(3): mov %r11,%rbp
5b12(2): mov %edx,%eax
5b14(4): mov %bl,0xd(%rsp)
5b18(5): jmp 0xfffff9f1(%rip)
5b1d(4): sub $0x8,%rsp
5b21(6): mov $0x5,%r8d
5b27(3): mov %r11,%rcx
5b2a(4): push 0x68(%rsp)
5b2e(4): push 0x78(%rsp)
5b32(3): mov %r14,%rdi
5b35(4): push 0x38(%rsp)
5b39(8): mov 0x98(%rsp),%r9d
5b41(5): mov 0x30(%rsp),%rdx
5b46(5): mov 0x70(%rsp),%rsi
5b4b(5): call 0xffffee35(%rip)
5b50(4): add $0x20,%rsp
5b54(3): mov %rax,%r15
5b57(5): jmp 0xfffffa02(%rip)
5b5c(5): movzx 0x7c(%rsp),%eax
5b61(5): jmp 0xffffff1b(%rip)
5b66(8): mov $0x2,0x8(%rsp)
5b6e(5): jmp 0xfffff99b(%rip)
5b73(5): call 0xffffbe0d(%rip)
5b78(5): mov $0x0,0xd(%rsp)
5b7d(5): jmp 0xfffffa74(%rip)
5b82(3): mov %r11,%rbp
5b85(5): jmp 0xfffff99b(%rip)
5b8a(5): mov $0x1,0xe(%rsp)
5b8f(2): xor %eax,%eax
5b91(3): xor %r12d,%r12d
5b94(9): mov $0x0,0x50(%rsp)
5b9d(5): jmp 0xfffff5a7(%rip)
5ba2(3): mov %r13,%rdx
5ba5(5): mov 0x50(%rsp),%r13
5baa(5): jmp 0xfffff5f8(%rip)
5baf(5): call 0xffffbcc1(%rip)

"quotearg_n_options" :
5bc0(2): push %r15
5bc2(2): push %r14
5bc4(3): movsxd %edi,%r15
5bc7(2): push %r13
5bc9(2): push %r12
5bcb(3): mov %rdx,%r14
5bce(1): push %rbp
5bcf(1): push %rbx
5bd0(3): mov %rcx,%rbp
5bd3(4): sub $0x28,%rsp
5bd7(5): mov %rsi,0x8(%rsp)
5bdc(5): call 0xffffbca4(%rip)
5be1(3): mov %rax,%r13
5be4(2): mov (%rax),%eax
5be6(3): test %r15d,%r15d
5be9(7): mov 0x204470(%rip),%rbx
5bf0(4): mov %eax,0x18(%rsp)
5bf4(6): js 0x16d(%rip)
5bfa(7): cmp %r15d,0x204457(%rip)
5c01(2): jnle 0x64(%rip)
5c03(7): cmp $0x7fffffff,%r15d
5c0a(6): jz 0x15c(%rip)
5c10(4): lea 0x1(%r15),%r12d
5c14(7): lea 0x204455(%rip),%rax
5c1b(3): movsxd %r12d,%rsi
5c1e(4): shl/sal $0x4,%rsi
5c22(3): cmp %rax,%rbx
5c25(6): jz 0x11b(%rip)
5c2b(3): mov %rbx,%rdi
5c2e(5): call 0xf72(%rip)
5c33(3): mov %rax,%rbx
5c36(7): mov %rax,0x204423(%rip)
5c3d(7): movsxd 0x204414(%rip),%rdi
5c44(3): mov %r12d,%edx
5c47(2): xor %esi,%esi
5c49(2): sub %edi,%edx
5c4b(4): shl/sal $0x4,%rdi
5c4f(3): movsxd %edx,%rdx
5c52(3): add %rbx,%rdi
5c55(4): shl/sal $0x4,%rdx
5c59(5): call 0xffffbda7(%rip)
5c5e(7): mov %r12d,0x2043f3(%rip)
5c65(3): mov 0x4(%rbp),%eax
5c68(4): shl/sal $0x4,%r15
5c6c(4): sub $0x8,%rsp
5c70(3): add %r15,%rbx
5c73(4): lea 0x8(%rbp),%r15
5c77(4): mov 0x0(%rbp),%r8d
5c7b(3): mov (%rbx),%r11
5c7e(4): mov 0x8(%rbx),%r12
5c82(3): mov %r14,%rcx
5c85(3): or $0x1,%eax
5c88(4): mov %eax,0x24(%rsp)
5c8c(3): push 0x30(%rbp)
5c8f(3): mov %eax,%r9d
5c92(3): push 0x28(%rbp)
5c95(2): push %r15
5c97(3): mov %r11,%rsi
5c9a(5): mov 0x28(%rsp),%rdx
5c9f(3): mov %r12,%rdi
5ca2(5): mov %r11,0x30(%rsp)
5ca7(5): call 0xffffecd9(%rip)
5cac(4): add $0x20,%rsp
5cb0(5): mov 0x10(%rsp),%r11
5cb5(3): cmp %rax,%r11
5cb8(2): jnbe 0x69(%rip)
5cba(4): lea 0x1(%rax),%rsi
5cbe(7): lea 0x20443b(%rip),%rax
5cc5(3): cmp %rax,%r12
5cc8(3): mov %rsi,(%rbx)
5ccb(2): jz 0x14(%rip)
5ccd(3): mov %r12,%rdi
5cd0(5): mov %rsi,0x10(%rsp)
5cd5(5): call 0xffffbb7b(%rip)
5cda(5): mov 0x10(%rsp),%rsi
5cdf(3): mov %rsi,%rdi
5ce2(5): mov %rsi,0x10(%rsp)
5ce7(5): call 0xe59(%rip)
5cec(4): sub $0x8,%rsp
5cf0(4): mov %rax,0x8(%rbx)
5cf4(4): mov 0x0(%rbp),%r8d
5cf8(3): push 0x30(%rbp)
5cfb(3): push 0x28(%rbp)
5cfe(3): mov %r14,%rcx
5d01(2): push %r15
5d03(5): mov 0x3c(%rsp),%r9d
5d08(3): mov %rax,%rdi
5d0b(5): mov 0x28(%rsp),%rdx
5d10(5): mov 0x30(%rsp),%rsi
5d15(3): mov %rax,%r12
5d18(5): call 0xffffec68(%rip)
5d1d(4): add $0x20,%rsp
5d21(4): mov 0x18(%rsp),%eax
5d25(4): mov %eax,0x0(%r13)
5d29(4): add $0x28,%rsp
5d2d(3): mov %r12,%rax
5d30(1): pop %rbx
5d31(1): pop %rbp
5d32(2): pop %r12
5d34(2): pop %r13
5d36(2): pop %r14
5d38(2): pop %r15
5d3a(1): ret near (%rsp)
5d3b(5): nop 0x0(%rax,%rax,1)
5d40(2): xor %edi,%edi
5d42(5): call 0xe5e(%rip)
5d47(8): movdqa 0x204321(%rip),%xmm0
5d4f(3): mov %rax,%rbx
5d52(7): mov %rax,0x204307(%rip)
5d59(3): movups %xmm0,(%rax)
5d5c(5): jmp 0xfffffee1(%rip)
5d61(5): call 0xffffbb0f(%rip)
5d66(5): call 0x102a(%rip)

"clone_quoting_options" :
5d70(2): push %r12
5d72(1): push %rbp
5d73(1): push %rbx
5d74(3): mov %rdi,%rbx
5d77(5): call 0xffffbb09(%rip)
5d7c(3): mov (%rax),%r12d
5d7f(3): mov %rax,%rbp
5d82(7): lea 0x204477(%rip),%rax
5d89(3): test %rbx,%rbx
5d8c(5): mov $0x38,%esi
5d91(4): cmove %rax,%rbx
5d95(3): mov %rbx,%rdi
5d98(5): call 0xfa8(%rip)
5d9d(4): mov %r12d,0x0(%rbp)
5da1(1): pop %rbx
5da2(1): pop %rbp
5da3(2): pop %r12
5da5(1): ret near (%rsp)

"get_quoting_style" :
5db0(7): lea 0x204449(%rip),%rax
5db7(3): test %rdi,%rdi
5dba(4): cmove %rax,%rdi
5dbe(2): mov (%rdi),%eax
5dc0(1): ret near (%rsp)

"set_quoting_style" :
5dd0(7): lea 0x204429(%rip),%rax
5dd7(3): test %rdi,%rdi
5dda(4): cmove %rax,%rdi
5dde(2): mov %esi,(%rdi)
5de0(1): ret near (%rsp)

"set_char_quoting" :
5df0(7): lea 0x204409(%rip),%rax
5df7(3): test %rdi,%rdi
5dfa(2): mov %esi,%ecx
5dfc(4): cmove %rax,%rdi
5e00(2): mov %esi,%eax
5e02(3): and $0x1f,%ecx
5e05(3): shr $0x5,%al
5e08(3): movzx %al,%eax
5e0b(5): lea 0x8(%rdi,%rax,4),%rdi
5e10(2): mov (%rdi),%esi
5e12(2): mov %esi,%eax
5e14(2): shr %cl,%eax
5e16(2): xor %eax,%edx
5e18(3): and $0x1,%eax
5e1b(3): and $0x1,%edx
5e1e(2): shl/sal %cl,%edx
5e20(2): xor %esi,%edx
5e22(2): mov %edx,(%rdi)
5e24(1): ret near (%rsp)

"set_quoting_flags" :
5e30(7): lea 0x2043c9(%rip),%rax
5e37(3): test %rdi,%rdi
5e3a(4): cmove %rax,%rdi
5e3e(3): mov 0x4(%rdi),%eax
5e41(3): mov %esi,0x4(%rdi)
5e44(1): ret near (%rsp)

"set_custom_quoting" :
5e50(7): lea 0x2043a9(%rip),%rax
5e57(3): test %rdi,%rdi
5e5a(4): cmove %rax,%rdi
5e5e(3): test %rsi,%rsi
5e61(6): mov $0xa,(%rdi)
5e67(2): jz 0x10(%rip)
5e69(3): test %rdx,%rdx
5e6c(2): jz 0xb(%rip)
5e6e(4): mov %rsi,0x28(%rdi)
5e72(4): mov %rdx,0x30(%rdi)
5e76(1): ret near (%rsp)
5e77(4): sub $0x8,%rsp
5e7b(5): call 0xffffb9f5(%rip)

"quotearg_buffer" :
5e80(2): push %r15
5e82(2): push %r14
5e84(7): lea 0x204375(%rip),%rax
5e8b(2): push %r13
5e8d(2): push %r12
5e8f(3): mov %rdi,%r13
5e92(1): push %rbp
5e93(1): push %rbx
5e94(3): mov %r8,%rbx
5e97(3): mov %rsi,%r14
5e9a(3): mov %rdx,%r15
5e9d(4): sub $0x18,%rsp
5ea1(3): test %r8,%r8
5ea4(4): cmove %rax,%rbx
5ea8(5): mov %rcx,0x8(%rsp)
5ead(5): call 0xffffb9d3(%rip)
5eb2(3): mov (%rax),%r12d
5eb5(3): mov %rax,%rbp
5eb8(4): lea 0x8(%rbx),%rax
5ebc(4): sub $0x8,%rsp
5ec0(4): mov 0x4(%rbx),%r9d
5ec4(3): push 0x30(%rbx)
5ec7(3): mov (%rbx),%r8d
5eca(3): push 0x28(%rbx)
5ecd(3): mov %r15,%rdx
5ed0(1): push %rax
5ed1(5): mov 0x28(%rsp),%rcx
5ed6(3): mov %r14,%rsi
5ed9(3): mov %r13,%rdi
5edc(5): call 0xffffeaa4(%rip)
5ee1(4): mov %r12d,0x0(%rbp)
5ee5(4): add $0x38,%rsp
5ee9(1): pop %rbx
5eea(1): pop %rbp
5eeb(2): pop %r12
5eed(2): pop %r13
5eef(2): pop %r14
5ef1(2): pop %r15
5ef3(1): ret near (%rsp)

"quotearg_alloc_mem" :
5f00(2): push %r15
5f02(2): push %r14
5f04(7): lea 0x2042f5(%rip),%rax
5f0b(2): push %r13
5f0d(2): push %r12
5f0f(3): mov %rdx,%r12
5f12(1): push %rbp
5f13(1): push %rbx
5f14(3): mov %rcx,%rbx
5f17(3): mov %rdi,%r14
5f1a(3): mov %rsi,%r15
5f1d(4): sub $0x38,%rsp
5f21(3): test %rcx,%rcx
5f24(4): cmove %rax,%rbx
5f28(2): xor %ebp,%ebp
5f2a(5): call 0xffffb956(%rip)
5f2f(3): test %r12,%r12
5f32(3): mov %rax,%r13
5f35(2): mov (%rax),%eax
5f37(4): setz %bpl
5f3b(3): or 0x4(%rbx),%ebp
5f3e(4): lea 0x8(%rbx),%r10
5f42(4): sub $0x8,%rsp
5f46(3): mov (%rbx),%r8d
5f49(3): mov %r15,%rcx
5f4c(4): mov %eax,0x14(%rsp)
5f50(3): push 0x30(%rbx)
5f53(3): mov %r14,%rdx
5f56(3): push 0x28(%rbx)
5f59(2): push %r10
5f5b(2): xor %esi,%esi
5f5d(3): mov %ebp,%r9d
5f60(2): xor %edi,%edi
5f62(5): mov %r10,0x40(%rsp)
5f67(5): call 0xffffea19(%rip)
5f6c(4): lea 0x1(%rax),%rsi
5f70(5): mov %rax,0x48(%rsp)
5f75(4): add $0x20,%rsp
5f79(3): mov %rsi,%rdi
5f7c(5): mov %rsi,0x18(%rsp)
5f81(5): call 0xbbf(%rip)
5f86(5): mov %rax,0x10(%rsp)
5f8b(4): sub $0x8,%rsp
5f8f(3): push 0x30(%rbx)
5f92(3): push 0x28(%rbx)
5f95(5): mov 0x38(%rsp),%r10
5f9a(3): mov %ebp,%r9d
5f9d(3): mov (%rbx),%r8d
5fa0(3): mov %r15,%rcx
5fa3(3): mov %r14,%rdx
5fa6(3): mov %rax,%rdi
5fa9(2): push %r10
5fab(5): mov 0x38(%rsp),%rsi
5fb0(5): call 0xffffe9d0(%rip)
5fb5(4): mov 0x2c(%rsp),%eax
5fb9(4): add $0x20,%rsp
5fbd(3): test %r12,%r12
5fc0(4): mov %eax,0x0(%r13)
5fc4(2): jz 0xb(%rip)
5fc6(5): mov 0x28(%rsp),%r11
5fcb(4): mov %r11,(%r12)
5fcf(5): mov 0x10(%rsp),%rax
5fd4(4): add $0x38,%rsp
5fd8(1): pop %rbx
5fd9(1): pop %rbp
5fda(2): pop %r12
5fdc(2): pop %r13
5fde(2): pop %r14
5fe0(2): pop %r15
5fe2(1): ret near (%rsp)

"quotearg_alloc" :
5ff0(3): mov %rdx,%rcx
5ff3(2): xor %edx,%edx
5ff5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
6000(6): mov 0x204052(%rip),%eax
6006(2): push %r12
6008(7): mov 0x204051(%rip),%r12
600f(1): push %rbp
6010(1): push %rbx
6011(3): cmp $0x1,%eax
6014(2): jle 0x2d(%rip)
6016(3): sub $0x2,%eax
6019(5): lea 0x18(%r12),%rbx
601e(4): shl/sal $0x4,%rax
6022(5): lea 0x28(%r12,%rax,1),%rbp
6027(9): nop 0x0(%rax,%rax,1)
6030(3): mov (%rbx),%rdi
6033(4): add $0x10,%rbx
6037(5): call 0xffffb819(%rip)
603c(3): cmp %rbp,%rbx
603f(2): jnz 0xfffffff1(%rip)
6041(5): mov 0x8(%r12),%rdi
6046(7): lea 0x2040b3(%rip),%rbx
604d(3): cmp %rbx,%rdi
6050(2): jz 0x19(%rip)
6052(5): call 0xffffb7fe(%rip)
6057(b): mov $0x100,0x20400e(%rip)
6062(7): mov %rbx,0x20400f(%rip)
6069(7): lea 0x204000(%rip),%rbx
6070(3): cmp %rbx,%r12
6073(2): jz 0x11(%rip)
6075(3): mov %r12,%rdi
6078(5): call 0xffffb7d8(%rip)
607d(7): mov %rbx,0x203fdc(%rip)
6084(1): pop %rbx
6085(a): mov $0x1,0x203fc9(%rip)
608f(1): pop %rbp
6090(2): pop %r12
6092(1): ret near (%rsp)

"quotearg_n" :
60a0(7): lea 0x204159(%rip),%rcx
60a7(7): mov $0xffffffff,%rdx
60ae(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
60c0(7): lea 0x204139(%rip),%rcx
60c7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
60d0(7): lea 0x204129(%rip),%rcx
60d7(3): mov %rdi,%rsi
60da(7): mov $0xffffffff,%rdx
60e1(2): xor %edi,%edi
60e3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
60f0(7): lea 0x204109(%rip),%rcx
60f7(3): mov %rsi,%rdx
60fa(3): mov %rdi,%rsi
60fd(2): xor %edi,%edi
60ff(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
6110(4): sub $0x48,%rsp
6114(3): mov %rdx,%rax
6117(9): mov $0x28,%rdx
6120(5): mov %rdx,0x38(%rsp)
6125(2): xor %edx,%edx
6127(3): cmp $0xa,%esi
612a(2): jz 0x6a(%rip)
612c(3): mov %esi,(%rsp)
612f(3): mov %rsp,%rcx
6132(7): mov $0xffffffff,%rdx
6139(3): mov %rax,%rsi
613c(9): mov $0x0,0x4(%rsp)
6145(9): mov $0x0,0xc(%rsp)
614e(9): mov $0x0,0x14(%rsp)
6157(9): mov $0x0,0x1c(%rsp)
6160(9): mov $0x0,0x24(%rsp)
6169(9): mov $0x0,0x2c(%rsp)
6172(8): mov $0x0,0x34(%rsp)
617a(5): call 0xfffffa46(%rip)
617f(5): mov 0x38(%rsp),%rcx
6184(9): xor $0x28,%rcx
618d(2): jnz 0xc(%rip)
618f(4): add $0x48,%rsp
6193(1): ret near (%rsp)
6194(5): call 0xffffb6dc(%rip)
6199(5): call 0xffffb7e7(%rip)

"quotearg_n_style_mem" :
61a0(4): sub $0x48,%rsp
61a4(3): mov %rdx,%rax
61a7(3): mov %rcx,%rdx
61aa(9): mov $0x28,%rcx
61b3(5): mov %rcx,0x38(%rsp)
61b8(2): xor %ecx,%ecx
61ba(3): cmp $0xa,%esi
61bd(2): jz 0x63(%rip)
61bf(3): mov %esi,(%rsp)
61c2(3): mov %rsp,%rcx
61c5(3): mov %rax,%rsi
61c8(9): mov $0x0,0x4(%rsp)
61d1(9): mov $0x0,0xc(%rsp)
61da(9): mov $0x0,0x14(%rsp)
61e3(9): mov $0x0,0x1c(%rsp)
61ec(9): mov $0x0,0x24(%rsp)
61f5(9): mov $0x0,0x2c(%rsp)
61fe(8): mov $0x0,0x34(%rsp)
6206(5): call 0xfffff9ba(%rip)
620b(5): mov 0x38(%rsp),%rdx
6210(9): xor $0x28,%rdx
6219(2): jnz 0xc(%rip)
621b(4): add $0x48,%rsp
621f(1): ret near (%rsp)
6220(5): call 0xffffb650(%rip)
6225(5): call 0xffffb75b(%rip)

"quotearg_style" :
6230(3): mov %rsi,%rdx
6233(2): mov %edi,%esi
6235(2): xor %edi,%edi
6237(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
6240(3): mov %rdx,%rcx
6243(3): mov %rsi,%rdx
6246(2): mov %edi,%esi
6248(2): xor %edi,%edi
624a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
6250(4): sub $0x48,%rsp
6254(2): mov %edx,%ecx
6256(9): mov $0x28,%rax
625f(5): mov %rax,0x38(%rsp)
6264(2): xor %eax,%eax
6266(7): mov 0x203fc3(%rip),%rax
626d(3): mov %rsp,%r8
6270(3): and $0x1f,%ecx
6273(8): movdqa 0x203f85(%rip),%xmm0
627b(5): mov %rax,0x30(%rsp)
6280(2): mov %edx,%eax
6282(4): movaps %xmm0,(%rsp)
6286(3): shr $0x5,%al
6289(3): movzx %al,%eax
628c(5): lea 0x8(%r8,%rax,4),%r9
6291(8): movdqa 0x203f77(%rip),%xmm0
6299(5): movaps %xmm0,0x10(%rsp)
629e(8): movdqa 0x203f7a(%rip),%xmm0
62a6(5): movaps %xmm0,0x20(%rsp)
62ab(3): mov (%r9),%edx
62ae(2): mov %edx,%eax
62b0(2): shr %cl,%eax
62b2(2): not %eax
62b4(3): and $0x1,%eax
62b7(2): shl/sal %cl,%eax
62b9(3): mov %r8,%rcx
62bc(2): xor %edx,%eax
62be(3): mov %rsi,%rdx
62c1(3): mov %rdi,%rsi
62c4(3): mov %eax,(%r9)
62c7(2): xor %edi,%edi
62c9(5): call 0xfffff8f7(%rip)
62ce(5): mov 0x38(%rsp),%rsi
62d3(9): xor $0x28,%rsi
62dc(2): jnz 0x7(%rip)
62de(4): add $0x48,%rsp
62e2(1): ret near (%rsp)
62e3(5): call 0xffffb69d(%rip)

"quotearg_char" :
62f0(4): movsx %sil,%edx
62f4(7): mov $0xffffffff,%rsi
62fb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
6300(5): mov $0x3a,%edx
6305(7): mov $0xffffffff,%rsi
630c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
6320(5): mov $0x3a,%edx
6325(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
6330(4): sub $0x48,%rsp
6334(3): mov %rdx,%rax
6337(9): mov $0x28,%rdx
6340(5): mov %rdx,0x38(%rsp)
6345(2): xor %edx,%edx
6347(3): cmp $0xa,%esi
634a(2): jz 0x6a(%rip)
634c(3): mov %esi,(%rsp)
634f(3): mov %rsp,%rcx
6352(7): mov $0xffffffff,%rdx
6359(3): mov %rax,%rsi
635c(9): mov $0x0,0x4(%rsp)
6365(9): mov $0x4000000,0xc(%rsp)
636e(9): mov $0x0,0x14(%rsp)
6377(9): mov $0x0,0x1c(%rsp)
6380(9): mov $0x0,0x24(%rsp)
6389(9): mov $0x0,0x2c(%rsp)
6392(8): mov $0x0,0x34(%rsp)
639a(5): call 0xfffff826(%rip)
639f(5): mov 0x38(%rsp),%rcx
63a4(9): xor $0x28,%rcx
63ad(2): jnz 0xc(%rip)
63af(4): add $0x48,%rsp
63b3(1): ret near (%rsp)
63b4(5): call 0xffffb4bc(%rip)
63b9(5): call 0xffffb5c7(%rip)

"quotearg_n_custom_mem" :
63c0(4): sub $0x48,%rsp
63c4(3): mov %rcx,%r9
63c7(7): mov 0x203e62(%rip),%rcx
63ce(8): movdqa 0x203e2a(%rip),%xmm0
63d6(9): mov $0x28,%rax
63df(5): mov %rax,0x38(%rsp)
63e4(2): xor %eax,%eax
63e6(4): movaps %xmm0,(%rsp)
63ea(3): test %rsi,%rsi
63ed(5): mov %rcx,0x30(%rsp)
63f2(7): mov $0xa,(%rsp)
63f9(8): movdqa 0x203e0f(%rip),%xmm0
6401(5): movaps %xmm0,0x10(%rsp)
6406(8): movdqa 0x203e12(%rip),%xmm0
640e(5): movaps %xmm0,0x20(%rsp)
6413(2): jz 0x34(%rip)
6415(3): test %rdx,%rdx
6418(2): jz 0x2f(%rip)
641a(5): mov %rsi,0x28(%rsp)
641f(5): mov %rdx,0x30(%rsp)
6424(3): mov %rsp,%rcx
6427(3): mov %r8,%rdx
642a(3): mov %r9,%rsi
642d(5): call 0xfffff793(%rip)
6432(5): mov 0x38(%rsp),%rdi
6437(9): xor $0x28,%rdi
6440(2): jnz 0xc(%rip)
6442(4): add $0x48,%rsp
6446(1): ret near (%rsp)
6447(5): call 0xffffb429(%rip)
644c(5): call 0xffffb534(%rip)

"quotearg_n_custom" :
6460(7): mov $0xffffffff,%r8
6467(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
6470(3): mov %rdx,%rcx
6473(7): mov $0xffffffff,%r8
647a(3): mov %rsi,%rdx
647d(3): mov %rdi,%rsi
6480(2): xor %edi,%edi
6482(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
6490(3): mov %rcx,%r8
6493(3): mov %rdx,%rcx
6496(3): mov %rsi,%rdx
6499(3): mov %rdi,%rsi
649c(2): xor %edi,%edi
649e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
64b0(7): lea 0x203b69(%rip),%rcx
64b7(5): jmp 0xfffff709(%rip)

"quote_mem" :
64c0(7): lea 0x203b59(%rip),%rcx
64c7(3): mov %rsi,%rdx
64ca(3): mov %rdi,%rsi
64cd(2): xor %edi,%edi
64cf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
64e0(7): lea 0x203b39(%rip),%rcx
64e7(7): mov $0xffffffff,%rdx
64ee(5): jmp 0xfffff6d2(%rip)

"quote" :
6500(7): lea 0x203b19(%rip),%rcx
6507(3): mov %rdi,%rsi
650a(7): mov $0xffffffff,%rdx
6511(2): xor %edi,%edi
6513(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
6520(2): push %r15
6522(2): push %r14
6524(2): push %r13
6526(2): push %r12
6528(3): mov %r9,%r12
652b(1): push %rbp
652c(1): push %rbx
652d(3): mov %rdi,%rbp
6530(3): mov %r8,%rbx
6533(4): sub $0x28,%rsp
6537(3): test %rsi,%rsi
653a(6): jz 0x11e(%rip)
6540(3): mov %rdx,%r8
6543(7): lea 0x1f5e(%rip),%rdx
654a(3): mov %rcx,%r9
654d(2): xor %eax,%eax
654f(3): mov %rsi,%rcx
6552(5): mov $0x1,%esi
6557(5): call 0xffffb6a9(%rip)
655c(7): lea 0x1f58(%rip),%rsi
6563(2): xor %edi,%edi
6565(5): mov $0x5,%edx
656a(5): call 0xffffb3e6(%rip)
656f(7): lea 0x226a(%rip),%rdx
6576(3): mov %rax,%rcx
6579(6): mov $0x7e3,%r8d
657f(5): mov $0x1,%esi
6584(3): mov %rbp,%rdi
6587(2): xor %eax,%eax
6589(5): call 0xffffb677(%rip)
658e(7): lea 0x1fb3(%rip),%rsi
6595(2): xor %edi,%edi
6597(5): mov $0x5,%edx
659c(5): call 0xffffb3b4(%rip)
65a1(3): mov %rbp,%rsi
65a4(3): mov %rax,%rdi
65a7(5): call 0xffffb489(%rip)
65ac(4): cmp $0x9,%r12
65b0(6): jnbe 0x340(%rip)
65b6(7): lea 0x21eb(%rip),%rdx
65bd(4): movsxd 0x0(%rdx,%r12,4),%rax
65c1(3): add %rdx,%rax
65c4(2): jmp %rax
65c6(a): nop 0x0(%rax,%rax,1)
65d0(4): mov 0x38(%rbx),%r9
65d4(4): mov 0x10(%rbx),%rax
65d8(7): lea 0x20d9(%rip),%rsi
65df(4): mov 0x8(%rbx),%r8
65e3(5): mov $0x5,%edx
65e8(2): xor %edi,%edi
65ea(4): mov 0x30(%rbx),%r13
65ee(4): mov 0x28(%rbx),%r12
65f2(5): mov %r9,0x10(%rsp)
65f7(4): mov 0x20(%rbx),%r15
65fb(4): mov 0x18(%rbx),%r14
65ff(4): mov %rax,(%rsp)
6603(5): mov %r8,0x8(%rsp)
6608(3): mov (%rbx),%rbx
660b(5): call 0xffffb345(%rip)
6610(4): sub $0x8,%rsp
6614(5): mov 0x18(%rsp),%r9
6619(3): mov %rax,%rdx
661c(3): mov %rbx,%rcx
661f(5): mov $0x1,%esi
6624(3): mov %rbp,%rdi
6627(2): xor %eax,%eax
6629(2): push %r9
662b(2): push %r13
662d(2): push %r12
662f(2): push %r15
6631(2): push %r14
6633(5): mov 0x30(%rsp),%r9
6638(5): mov 0x38(%rsp),%r8
663d(5): call 0xffffb5c3(%rip)
6642(4): add $0x30,%rsp
6646(4): add $0x28,%rsp
664a(1): pop %rbx
664b(1): pop %rbp
664c(2): pop %r12
664e(2): pop %r13
6650(2): pop %r14
6652(2): pop %r15
6654(1): ret near (%rsp)
6655(3): nop (%rax)
6658(3): mov %rcx,%r8
665b(3): mov %rdx,%rcx
665e(7): lea 0x1e4f(%rip),%rdx
6665(5): mov $0x1,%esi
666a(2): xor %eax,%eax
666c(5): call 0xffffb594(%rip)
6671(5): jmp 0xfffffeeb(%rip)
6676(a): nop 0x0(%rax,%rax,1)
6680(4): mov 0x40(%rbx),%r10
6684(4): mov 0x38(%rbx),%r9
6688(7): lea 0x2059(%rip),%rsi
668f(4): mov 0x10(%rbx),%rax
6693(4): mov 0x8(%rbx),%r8
6697(5): mov $0x5,%edx
669c(4): mov 0x30(%rbx),%r13
66a0(4): mov 0x28(%rbx),%r12
66a4(4): mov 0x20(%rbx),%r15
66a8(4): mov 0x18(%rbx),%r14
66ac(3): mov (%rbx),%rbx
66af(5): mov %r10,0x18(%rsp)
66b4(5): mov %r9,0x10(%rsp)
66b9(4): mov %rax,(%rsp)
66bd(5): mov %r8,0x8(%rsp)
66c2(2): xor %edi,%edi
66c4(5): call 0xffffb28c(%rip)
66c9(5): mov 0x18(%rsp),%r10
66ce(2): push %r10
66d0(5): jmp 0xffffff44(%rip)
66d5(3): nop (%rax)
66d8(3): mov (%rbx),%rbx
66db(7): lea 0x1ddd(%rip),%rsi
66e2(5): mov $0x5,%edx
66e7(2): xor %edi,%edi
66e9(5): call 0xffffb267(%rip)
66ee(4): add $0x28,%rsp
66f2(3): mov %rbx,%rcx
66f5(3): mov %rbp,%rdi
66f8(1): pop %rbx
66f9(1): pop %rbp
66fa(2): pop %r12
66fc(2): pop %r13
66fe(2): pop %r14
6700(2): pop %r15
6702(3): mov %rax,%rdx
6705(5): mov $0x1,%esi
670a(2): xor %eax,%eax
670c(5): jmp 0xffffb4f4(%rip)
6711(7): nop 0x0(%rax)
6718(4): mov 0x8(%rbx),%r12
671c(7): lea 0x1dac(%rip),%rsi
6723(3): mov (%rbx),%rbx
6726(5): mov $0x5,%edx
672b(2): xor %edi,%edi
672d(5): call 0xffffb223(%rip)
6732(4): add $0x28,%rsp
6736(3): mov %r12,%r8
6739(3): mov %rbx,%rcx
673c(3): mov %rbp,%rdi
673f(3): mov %rax,%rdx
6742(5): mov $0x1,%esi
6747(1): pop %rbx
6748(1): pop %rbp
6749(2): pop %r12
674b(2): pop %r13
674d(2): pop %r14
674f(2): pop %r15
6751(2): xor %eax,%eax
6753(5): jmp 0xffffb4ad(%rip)
6758(8): nop 0x0(%rax,%rax,1)
6760(4): mov 0x10(%rbx),%r13
6764(4): mov 0x8(%rbx),%r12
6768(7): lea 0x1d77(%rip),%rsi
676f(3): mov (%rbx),%rbx
6772(5): mov $0x5,%edx
6777(2): xor %edi,%edi
6779(5): call 0xffffb1d7(%rip)
677e(4): add $0x28,%rsp
6782(3): mov %r13,%r9
6785(3): mov %r12,%r8
6788(3): mov %rbx,%rcx
678b(3): mov %rbp,%rdi
678e(3): mov %rax,%rdx
6791(1): pop %rbx
6792(1): pop %rbp
6793(2): pop %r12
6795(2): pop %r13
6797(2): pop %r14
6799(2): pop %r15
679b(5): mov $0x1,%esi
67a0(2): xor %eax,%eax
67a2(5): jmp 0xffffb45e(%rip)
67a7(9): nop 0x0(%rax,%rax,1)
67b0(7): lea 0x1e61(%rip),%rsi
67b7(5): mov $0x5,%edx
67bc(2): xor %edi,%edi
67be(4): mov 0x18(%rbx),%r14
67c2(4): mov 0x10(%rbx),%r13
67c6(4): mov 0x8(%rbx),%r12
67ca(3): mov (%rbx),%rbx
67cd(5): call 0xffffb183(%rip)
67d2(4): sub $0x8,%rsp
67d6(2): push %r14
67d8(3): mov %rax,%rdx
67db(3): mov %r13,%r9
67de(3): mov %r12,%r8
67e1(3): mov %rbx,%rcx
67e4(3): mov %rbp,%rdi
67e7(5): mov $0x1,%esi
67ec(2): xor %eax,%eax
67ee(5): call 0xffffb412(%rip)
67f3(1): pop %rax
67f4(1): pop %rdx
67f5(4): add $0x28,%rsp
67f9(1): pop %rbx
67fa(1): pop %rbp
67fb(2): pop %r12
67fd(2): pop %r13
67ff(2): pop %r14
6801(2): pop %r15
6803(1): ret near (%rsp)
6804(4): nop 0x0(%rax)
6808(4): mov 0x20(%rbx),%r15
680c(7): lea 0x1e25(%rip),%rsi
6813(5): mov $0x5,%edx
6818(2): xor %edi,%edi
681a(4): mov 0x18(%rbx),%r14
681e(4): mov 0x10(%rbx),%r13
6822(4): mov 0x8(%rbx),%r12
6826(3): mov (%rbx),%rbx
6829(5): call 0xffffb127(%rip)
682e(2): push %r15
6830(2): jmp 0xffffffa6(%rip)
6832(6): nop 0x0(%rax,%rax,1)
6838(4): mov 0x8(%rbx),%r8
683c(4): mov 0x28(%rbx),%r12
6840(7): lea 0x1e19(%rip),%rsi
6847(4): mov 0x20(%rbx),%r15
684b(4): mov 0x18(%rbx),%r14
684f(5): mov $0x5,%edx
6854(4): mov 0x10(%rbx),%r13
6858(2): xor %edi,%edi
685a(3): mov (%rbx),%rbx
685d(4): mov %r8,(%rsp)
6861(5): call 0xffffb0ef(%rip)
6866(4): sub $0x8,%rsp
686a(3): mov %r13,%r9
686d(2): push %r12
686f(2): push %r15
6871(2): push %r14
6873(5): mov 0x20(%rsp),%r8
6878(3): mov %rbx,%rcx
687b(3): mov %rax,%rdx
687e(3): mov %rbp,%rdi
6881(5): mov $0x1,%esi
6886(2): xor %eax,%eax
6888(5): call 0xffffb378(%rip)
688d(4): add $0x20,%rsp
6891(4): add $0x28,%rsp
6895(1): pop %rbx
6896(1): pop %rbp
6897(2): pop %r12
6899(2): pop %r13
689b(2): pop %r14
689d(2): pop %r15
689f(1): ret near (%rsp)
68a0(4): mov 0x10(%rbx),%r9
68a4(4): mov 0x30(%rbx),%r13
68a8(7): lea 0x1dd9(%rip),%rsi
68af(4): mov 0x28(%rbx),%r12
68b3(4): mov 0x20(%rbx),%r15
68b7(5): mov $0x5,%edx
68bc(4): mov 0x18(%rbx),%r14
68c0(4): mov 0x8(%rbx),%r8
68c4(2): xor %edi,%edi
68c6(5): mov %r9,0x8(%rsp)
68cb(3): mov (%rbx),%rbx
68ce(4): mov %r8,(%rsp)
68d2(5): call 0xffffb07e(%rip)
68d7(2): push %r13
68d9(2): push %r12
68db(2): push %r15
68dd(2): push %r14
68df(5): mov 0x28(%rsp),%r9
68e4(2): jmp 0xffffff8f(%rip)
68e6(a): nop 0x0(%rax,%rax,1)
68f0(4): mov 0x40(%rbx),%r10
68f4(4): mov 0x38(%rbx),%r9
68f8(5): mov $0x5,%edx
68fd(4): mov 0x10(%rbx),%rax
6901(4): mov 0x8(%rbx),%r8
6905(7): lea 0x1e14(%rip),%rsi
690c(4): mov 0x30(%rbx),%r13
6910(4): mov 0x28(%rbx),%r12
6914(4): mov 0x20(%rbx),%r15
6918(4): mov 0x18(%rbx),%r14
691c(5): mov %r10,0x18(%rsp)
6921(5): mov %r9,0x10(%rsp)
6926(4): mov %rax,(%rsp)
692a(5): mov %r8,0x8(%rsp)
692f(3): mov (%rbx),%rbx
6932(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
6940(3): xor %r9d,%r9d
6943(4): cmp $0x0,(%r8)
6947(2): jz 0x14(%rip)
6949(7): nop 0x0(%rax)
6950(4): add $0x1,%r9
6954(5): cmp $0x0,0x0(%r8,%r9,8)
6959(2): jnz 0xfffffff7(%rip)
695b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
6960(4): sub $0x68,%rsp
6964(3): mov %r8,%r10
6967(3): xor %r9d,%r9d
696a(9): mov $0x28,%rax
6973(5): mov %rax,0x58(%rsp)
6978(2): xor %eax,%eax
697a(3): mov %rsp,%r8
697d(3): nop (%rax)
6980(3): mov (%r10),%eax
6983(3): cmp $0x2f,%eax
6986(2): jnbe 0x44(%rip)
6988(3): mov %eax,%r11d
698b(4): add 0x10(%r10),%r11
698f(3): add $0x8,%eax
6992(3): mov %eax,(%r10)
6995(3): mov (%r11),%rax
6998(3): test %rax,%rax
699b(4): mov %rax,0x0(%r8,%r9,8)
699f(2): jz 0xc(%rip)
69a1(4): add $0x1,%r9
69a5(4): cmp $0xa,%r9
69a9(2): jnz 0xffffffd7(%rip)
69ab(5): call 0xfffffb75(%rip)
69b0(5): mov 0x58(%rsp),%rax
69b5(9): xor $0x28,%rax
69be(2): jnz 0x7(%rip)
69c0(4): add $0x68,%rsp
69c4(1): ret near (%rsp)
69c5(5): call 0xffffafbb(%rip)
69ca(4): mov 0x8(%r10),%r11
69ce(4): lea 0x8(%r11),%rax
69d2(4): mov %rax,0x8(%r10)
69d6(2): jmp 0xffffffbf(%rip)

"version_etc" :
69e0(1): push %rbp
69e1(1): push %rbx
69e2(6): mov $0x20,%r10d
69e8(3): xor %r11d,%r11d
69eb(7): sub $0xb8,%rsp
69f2(9): mov $0x28,%rax
69fb(5): mov %rax,0x78(%rsp)
6a00(2): xor %eax,%eax
6a02(8): lea 0xd0(%rsp),%rax
6a0a(8): mov %r8,0xa0(%rsp)
6a12(8): lea 0xd0(%rsp),%rbx
6a1a(5): lea 0x20(%rsp),%r8
6a1f(8): mov %r9,0xa8(%rsp)
6a27(8): mov $0x20,0x8(%rsp)
6a2f(5): mov %rax,0x10(%rsp)
6a34(8): lea 0x80(%rsp),%rax
6a3c(3): xor %r9d,%r9d
6a3f(5): mov %rax,0x18(%rsp)
6a44(3): mov %rax,%rbp
6a47(9): nop 0x0(%rax,%rax,1)
6a50(4): cmp $0x2f,%r10d
6a54(2): jnbe 0x58(%rip)
6a56(3): mov %r10d,%eax
6a59(6): mov $0x1,%r11d
6a5f(4): add $0x8,%r10d
6a63(3): add %rbp,%rax
6a66(3): mov (%rax),%rax
6a69(3): test %rax,%rax
6a6c(4): mov %rax,0x0(%r8,%r9,8)
6a70(2): jz 0xc(%rip)
6a72(4): add $0x1,%r9
6a76(4): cmp $0xa,%r9
6a7a(2): jnz 0xffffffd6(%rip)
6a7c(3): test %r11b,%r11b
6a7f(2): jnz 0x26(%rip)
6a81(5): call 0xfffffa9f(%rip)
6a86(5): mov 0x78(%rsp),%rax
6a8b(9): xor $0x28,%rax
6a94(2): jnz 0xc(%rip)
6a96(7): add $0xb8,%rsp
6a9d(1): pop %rbx
6a9e(1): pop %rbp
6a9f(1): ret near (%rsp)
6aa0(5): call 0xffffaee0(%rip)
6aa5(5): mov %r10d,0x8(%rsp)
6aaa(2): jmp 0xffffffd7(%rip)
6aac(3): mov %rbx,%rax
6aaf(4): add $0x8,%rbx
6ab3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6ac0(1): push %rbx
6ac1(7): lea 0x1a3a(%rip),%rsi
6ac8(5): mov $0x5,%edx
6acd(2): xor %edi,%edi
6acf(5): call 0xffffae81(%rip)
6ad4(7): lea 0x1a3c(%rip),%rdx
6adb(3): mov %rax,%rsi
6ade(5): mov $0x1,%edi
6ae3(2): xor %eax,%eax
6ae5(5): call 0xffffb05b(%rip)
6aea(7): lea 0x1a3c(%rip),%rsi
6af1(5): mov $0x5,%edx
6af6(2): xor %edi,%edi
6af8(5): call 0xffffae58(%rip)
6afd(7): lea 0x119c(%rip),%rcx
6b04(7): lea 0xf29(%rip),%rdx
6b0b(3): mov %rax,%rsi
6b0e(5): mov $0x1,%edi
6b13(2): xor %eax,%eax
6b15(5): call 0xffffb02b(%rip)
6b1a(7): mov 0x203567(%rip),%rbx
6b21(7): lea 0x1c38(%rip),%rsi
6b28(2): xor %edi,%edi
6b2a(5): mov $0x5,%edx
6b2f(5): call 0xffffae21(%rip)
6b34(3): mov %rbx,%rsi
6b37(3): mov %rax,%rdi
6b3a(1): pop %rbx
6b3b(5): jmp 0xffffaef5(%rip)

"xmalloc" :
6b40(1): push %rbx
6b41(3): mov %rdi,%rbx
6b44(5): call 0xffffaf8c(%rip)
6b49(3): test %rax,%rax
6b4c(2): jnz 0x7(%rip)
6b4e(3): test %rbx,%rbx
6b51(2): jnz 0x4(%rip)
6b53(1): pop %rbx
6b54(1): ret near (%rsp)
6b55(5): call 0x23b(%rip)

"xnmalloc" :
6b60(3): mov %rdi,%rax
6b63(3): mul %rax,%rsi,%rdx
6b66(3): mov %rax,%rdi
6b69(3): seto %al
6b6c(3): test %rdi,%rdi
6b6f(2): js 0xc(%rip)
6b71(3): movzx %al,%eax
6b74(3): test %rax,%rax
6b77(2): jnz 0x4(%rip)
6b79(2): jmp 0xffffffc7(%rip)
6b7b(4): sub $0x8,%rsp
6b7f(5): call 0x211(%rip)

"xrealloc" :
6ba0(3): test %rsi,%rsi
6ba3(1): push %rbx
6ba4(3): mov %rsi,%rbx
6ba7(2): jnz 0x7(%rip)
6ba9(3): test %rdi,%rdi
6bac(2): jnz 0x1c(%rip)
6bae(3): mov %rbx,%rsi
6bb1(5): call 0xffffaf6f(%rip)
6bb6(3): test %rax,%rax
6bb9(2): jnz 0x7(%rip)
6bbb(3): test %rbx,%rbx
6bbe(2): jnz 0x13(%rip)
6bc0(1): pop %rbx
6bc1(1): ret near (%rsp)
6bc2(6): nop 0x0(%rax,%rax,1)
6bc8(5): call 0xffffac88(%rip)
6bcd(2): xor %eax,%eax
6bcf(1): pop %rbx
6bd0(1): ret near (%rsp)
6bd1(5): call 0x1bf(%rip)

"xnrealloc" :
6be0(3): mov %rsi,%rax
6be3(3): mul %rax,%rdx,%rdx
6be6(3): mov %rax,%rsi
6be9(3): seto %al
6bec(3): test %rsi,%rsi
6bef(2): js 0xc(%rip)
6bf1(3): movzx %al,%eax
6bf4(3): test %rax,%rax
6bf7(2): jnz 0x4(%rip)
6bf9(2): jmp 0xffffffa7(%rip)
6bfb(4): sub $0x8,%rsp
6bff(5): call 0x191(%rip)

"x2nrealloc" :
6c10(3): test %rdi,%rdi
6c13(3): mov %rdx,%r9
6c16(3): mov (%rsi),%rcx
6c19(2): jz 0x37(%rip)
6c1b(2): xor %edx,%edx
6c1d(a): mov $0x6148914691236517204,%rax
6c27(3): div %r9,%rax
6c2a(3): cmp %rcx,%rax
6c2d(2): jbe 0x3e(%rip)
6c2f(3): mov %rcx,%rax
6c32(3): shr $0x1,%rax
6c35(5): lea 0x1(%rax,%rcx,1),%rcx
6c3a(3): mov %rcx,(%rsi)
6c3d(4): imul %r9,%rcx
6c41(3): mov %rcx,%rsi
6c44(5): jmp 0xffffff5c(%rip)
6c49(7): nop 0x0(%rax)
6c50(3): test %rcx,%rcx
6c53(2): jz 0x25(%rip)
6c55(3): mov %rcx,%rax
6c58(3): mul %rax,%r9,%rdx
6c5b(3): seto %dl
6c5e(3): test %rax,%rax
6c61(3): movzx %dl,%edx
6c64(2): js 0x7(%rip)
6c66(3): test %rdx,%rdx
6c69(2): jz 0xffffffd1(%rip)
6c6b(4): sub $0x8,%rsp
6c6f(5): call 0x121(%rip)
6c74(4): nop 0x0(%rax)
6c78(2): xor %edx,%edx
6c7a(5): mov $0x80,%eax
6c7f(3): xor %r8d,%r8d
6c82(3): div %r9,%rax
6c85(3): test %rax,%rax
6c88(4): setz %r8b
6c8c(4): lea 0x0(%r8,%rax,1),%rcx
6c90(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6ca0(3): test %rdi,%rdi
6ca3(3): mov (%rsi),%rax
6ca6(2): jz 0x2a(%rip)
6ca8(a): mov $0x6148914691236517203,%rdx
6cb2(3): cmp %rdx,%rax
6cb5(2): jnbe 0x2c(%rip)
6cb7(3): mov %rax,%rdx
6cba(3): shr $0x1,%rdx
6cbd(5): lea 0x1(%rdx,%rax,1),%rax
6cc2(3): mov %rax,(%rsi)
6cc5(3): mov %rax,%rsi
6cc8(5): jmp 0xfffffed8(%rip)
6ccd(3): nop (%rax)
6cd0(3): test %rax,%rax
6cd3(5): mov $0x80,%edx
6cd8(4): cmove %rdx,%rax
6cdc(3): test %rax,%rax
6cdf(2): jns 0xffffffe3(%rip)
6ce1(4): sub $0x8,%rsp
6ce5(5): call 0xab(%rip)

"xzalloc" :
6cf0(1): push %rbx
6cf1(3): mov %rdi,%rbx
6cf4(5): call 0xfffffe4c(%rip)
6cf9(3): mov %rbx,%rdx
6cfc(2): xor %esi,%esi
6cfe(3): mov %rax,%rdi
6d01(1): pop %rbx
6d02(5): jmp 0xffffacfe(%rip)

"xcalloc" :
6d10(3): mov %rdi,%rax
6d13(4): sub $0x8,%rsp
6d17(3): mul %rax,%rsi,%rdx
6d1a(3): seto %dl
6d1d(3): test %rax,%rax
6d20(2): js 0x19(%rip)
6d22(3): movzx %dl,%edx
6d25(3): test %rdx,%rdx
6d28(2): jnz 0x11(%rip)
6d2a(5): call 0xffffad16(%rip)
6d2f(3): test %rax,%rax
6d32(2): jz 0x7(%rip)
6d34(4): add $0x8,%rsp
6d38(1): ret near (%rsp)
6d39(5): call 0x57(%rip)

"xmemdup" :
6d40(1): push %rbp
6d41(1): push %rbx
6d42(3): mov %rdi,%rbp
6d45(3): mov %rsi,%rdi
6d48(3): mov %rsi,%rbx
6d4b(4): sub $0x8,%rsp
6d4f(5): call 0xfffffdf1(%rip)
6d54(4): add $0x8,%rsp
6d58(3): mov %rbx,%rdx
6d5b(3): mov %rbp,%rsi
6d5e(1): pop %rbx
6d5f(1): pop %rbp
6d60(3): mov %rax,%rdi
6d63(5): jmp 0xffffad0d(%rip)

"xstrdup" :
6d70(1): push %rbx
6d71(3): mov %rdi,%rbx
6d74(5): call 0xffffabfc(%rip)
6d79(3): mov %rbx,%rdi
6d7c(4): lea 0x1(%rax),%rsi
6d80(1): pop %rbx
6d81(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
6d90(7): lea 0x1a78(%rip),%rsi
6d97(4): sub $0x8,%rsp
6d9b(5): mov $0x5,%edx
6da0(2): xor %edi,%edi
6da2(5): call 0xffffabae(%rip)
6da7(6): mov 0x20326b(%rip),%edi
6dad(7): lea 0xfbb(%rip),%rdx
6db4(3): mov %rax,%rcx
6db7(2): xor %esi,%esi
6db9(2): xor %eax,%eax
6dbb(5): call 0xffffadc5(%rip)
6dc0(5): call 0xffffaab0(%rip)

"rpl_fclose" :
6dd0(2): push %r12
6dd2(1): push %rbp
6dd3(1): push %rbx
6dd4(3): mov %rdi,%rbx
6dd7(5): call 0xffffacd9(%rip)
6ddc(2): test %eax,%eax
6dde(3): mov %rbx,%rdi
6de1(2): js 0x56(%rip)
6de3(5): call 0xffffad2d(%rip)
6de8(2): test %eax,%eax
6dea(2): jnz 0x2e(%rip)
6dec(3): mov %rbx,%rdi
6def(5): call 0x61(%rip)
6df4(2): test %eax,%eax
6df6(2): jz 0x3e(%rip)
6df8(5): call 0xffffaa88(%rip)
6dfd(3): mov (%rax),%r12d
6e00(3): mov %rbx,%rdi
6e03(3): mov %rax,%rbp
6e06(5): call 0xffffab1a(%rip)
6e0b(3): test %r12d,%r12d
6e0e(2): jnz 0x32(%rip)
6e10(1): pop %rbx
6e11(1): pop %rbp
6e12(2): pop %r12
6e14(1): ret near (%rsp)
6e15(3): nop (%rax)
6e18(3): mov %rbx,%rdi
6e1b(5): call 0xffffac95(%rip)
6e20(2): xor %esi,%esi
6e22(5): mov $0x1,%edx
6e27(2): mov %eax,%edi
6e29(5): call 0xffffabc7(%rip)
6e2e(4): cmp $0xffffffff,%rax
6e32(2): jnz 0xffffffba(%rip)
6e34(3): mov %rbx,%rdi
6e37(1): pop %rbx
6e38(1): pop %rbp
6e39(2): pop %r12
6e3b(5): jmp 0xffffaae5(%rip)
6e40(4): mov %r12d,0x0(%rbp)
6e44(5): mov $0xffffffff,%eax
6e49(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
6e50(3): test %rdi,%rdi
6e53(1): push %rbx
6e54(3): mov %rdi,%rbx
6e57(2): jz 0x13(%rip)
6e59(5): call 0xffffacb7(%rip)
6e5e(2): test %eax,%eax
6e60(2): jz 0xa(%rip)
6e62(6): test $0x100,(%rbx)
6e68(2): jnz 0x10(%rip)
6e6a(3): mov %rbx,%rdi
6e6d(1): pop %rbx
6e6e(5): jmp 0xffffac72(%rip)
6e73(5): nop 0x0(%rax,%rax,1)
6e78(3): mov %rbx,%rdi
6e7b(5): mov $0x1,%edx
6e80(2): xor %esi,%esi
6e82(5): call 0xe(%rip)
6e87(3): mov %rbx,%rdi
6e8a(1): pop %rbx
6e8b(5): jmp 0xffffac55(%rip)

"rpl_fseeko" :
6e90(4): mov 0x8(%rdi),%rax
6e94(4): cmp %rax,0x10(%rdi)
6e98(2): jz 0x8(%rip)
6e9a(5): jmp 0xffffacf6(%rip)
6e9f(1): nop 
6ea0(4): mov 0x20(%rdi),%rax
6ea4(4): cmp %rax,0x28(%rdi)
6ea8(2): jnz 0xfffffff2(%rip)
6eaa(5): cmp $0x0,0x48(%rdi)
6eaf(2): jnz 0xffffffeb(%rip)
6eb1(2): push %r12
6eb3(1): push %rbp
6eb4(3): mov %edx,%r12d
6eb7(1): push %rbx
6eb8(3): mov %rsi,%rbp
6ebb(3): mov %rdi,%rbx
6ebe(5): call 0xffffabf2(%rip)
6ec3(3): mov %r12d,%edx
6ec6(3): mov %rbp,%rsi
6ec9(2): mov %eax,%edi
6ecb(5): call 0xffffab25(%rip)
6ed0(4): cmp $0xffffffff,%rax
6ed4(2): jz 0xe(%rip)
6ed6(3): and $0xef,(%rbx)
6ed9(7): mov %rax,0x90(%rbx)
6ee0(2): xor %eax,%eax
6ee2(1): pop %rbx
6ee3(1): pop %rbp
6ee4(2): pop %r12
6ee6(1): ret near (%rsp)

"rpl_mbrtowc" :
6ef0(2): push %r13
6ef2(2): push %r12
6ef4(3): mov %rsi,%r13
6ef7(1): push %rbp
6ef8(1): push %rbx
6ef9(3): mov %rdi,%rbx
6efc(3): mov %rdx,%r12
6eff(4): sub $0x18,%rsp
6f03(9): mov $0x28,%rax
6f0c(5): mov %rax,0x8(%rsp)
6f11(2): xor %eax,%eax
6f13(5): lea 0x4(%rsp),%rax
6f18(3): test %rdi,%rdi
6f1b(4): cmove %rax,%rbx
6f1f(3): mov %rbx,%rdi
6f22(5): call 0xffffaa7e(%rip)
6f27(4): cmp $0xfffffffd,%rax
6f2b(3): mov %rax,%rbp
6f2e(2): jbe 0x22(%rip)
6f30(3): test %r12,%r12
6f33(2): jz 0x1d(%rip)
6f35(2): xor %edi,%edi
6f37(5): call 0x839(%rip)
6f3c(2): test %al,%al
6f3e(2): jnz 0x12(%rip)
6f40(5): movzx 0x0(%r13),%eax
6f45(5): mov $0x1,%ebp
6f4a(2): mov %eax,(%rbx)
6f4c(4): nop 0x0(%rax)
6f50(5): mov 0x8(%rsp),%rdx
6f55(9): xor $0x28,%rdx
6f5e(3): mov %rbp,%rax
6f61(2): jnz 0xd(%rip)
6f63(4): add $0x18,%rsp
6f67(1): pop %rbx
6f68(1): pop %rbp
6f69(2): pop %r12
6f6b(2): pop %r13
6f6d(1): ret near (%rsp)
6f6e(5): call 0xffffaa12(%rip)

"extract_trimmed_name" :
6f80(1): push %rbp
6f81(1): push %rbx
6f82(3): mov %rdi,%rbp
6f85(5): mov $0x21,%edi
6f8a(4): sub $0x8,%rsp
6f8e(5): call 0xfffffbb2(%rip)
6f93(4): lea 0x2c(%rbp),%rsi
6f97(3): mov %rax,%rbx
6f9a(5): mov $0x20,%edx
6f9f(3): mov %rax,%rdi
6fa2(5): call 0xffffa8ee(%rip)
6fa7(3): mov %rbx,%rdi
6faa(4): mov $0x0,0x20(%rbx)
6fae(5): call 0xffffa9c2(%rip)
6fb3(3): add %rbx,%rax
6fb6(3): cmp %rax,%rbx
6fb9(2): jnb 0x8(%rip)
6fbb(4): cmp $0x20,0xffffffff(%rax)
6fbf(2): jz 0x11(%rip)
6fc1(4): add $0x8,%rsp
6fc5(3): mov %rbx,%rax
6fc8(1): pop %rbx
6fc9(1): pop %rbp
6fca(1): ret near (%rsp)
6fcb(5): nop 0x0(%rax,%rax,1)
6fd0(4): sub $0x1,%rax
6fd4(3): mov $0x0,(%rax)
6fd7(3): cmp %rax,%rbx
6fda(2): jnz 0xffffffe1(%rip)
6fdc(2): jmp 0xffffffe5(%rip)

"read_utmp" :
6fe0(2): push %r15
6fe2(2): push %r14
6fe4(3): xor %r14d,%r14d
6fe7(2): push %r13
6fe9(3): mov %ecx,%r13d
6fec(2): push %r12
6fee(1): push %rbp
6fef(1): push %rbx
6ff0(3): mov %r13d,%r12d
6ff3(2): xor %ebx,%ebx
6ff5(2): xor %ebp,%ebp
6ff7(4): and $0x2,%r12d
6ffb(4): sub $0x18,%rsp
6fff(4): and $0x1,%r13d
7003(4): mov %rsi,(%rsp)
7007(5): mov %rdx,0x8(%rsp)
700c(5): call 0xffffa824(%rip)
7011(5): call 0xffffaa4f(%rip)
7016(5): call 0xffffab5a(%rip)
701b(3): test %rax,%rax
701e(3): mov %rax,%r15
7021(2): jz 0x70(%rip)
7023(5): cmp $0x7,(%r15)
7028(2): jnz 0xd(%rip)
702a(5): cmp $0x0,0x2c(%r15)
702f(6): jnz 0x91(%rip)
7035(3): test %r12d,%r12d
7038(2): jnz 0xffffffde(%rip)
703a(3): cmp %rbx,%rbp
703d(6): jz 0xc3(%rip)
7043(4): lea 0x0(%rbx,%rbx,2),%rax
7047(3): mov (%r15),%rdx
704a(3): mov %r15,%rsi
704d(4): add $0x1,%rbx
7051(4): shl/sal $0x7,%rax
7055(3): add %r14,%rax
7058(3): mov %rdx,(%rax)
705b(4): lea 0x8(%rax),%rdi
705f(7): mov 0x178(%r15),%rdx
7066(4): and $0xfffffff8,%rdi
706a(7): mov %rdx,0x178(%rax)
7071(3): sub %rdi,%rax
7074(3): sub %rax,%rsi
7077(5): add $0x180,%eax
707c(3): shr $0x3,%eax
707f(2): mov %eax,%ecx
7081(3): REP movsd rsi(%ds,10),rdi(%es,10)
7084(5): call 0xffffaaec(%rip)
7089(3): test %rax,%rax
708c(3): mov %rax,%r15
708f(2): jnz 0xffffff94(%rip)
7091(5): call 0xffffa86f(%rip)
7096(4): mov (%rsp),%rax
709a(3): mov %rbx,(%rax)
709d(5): mov 0x8(%rsp),%rax
70a2(3): mov %r14,(%rax)
70a5(4): add $0x18,%rsp
70a9(2): xor %eax,%eax
70ab(1): pop %rbx
70ac(1): pop %rbp
70ad(2): pop %r12
70af(2): pop %r13
70b1(2): pop %r14
70b3(2): pop %r15
70b5(1): ret near (%rsp)
70b6(a): nop 0x0(%rax,%rax,1)
70c0(4): mov 0x4(%r15),%edi
70c4(2): test %edi,%edi
70c6(6): jle 0xffffff74(%rip)
70cc(3): test %r13b,%r13b
70cf(6): jz 0xffffff6b(%rip)
70d5(2): xor %esi,%esi
70d7(5): call 0xffffa9b9(%rip)
70dc(2): test %eax,%eax
70de(6): jns 0xffffff5c(%rip)
70e4(5): call 0xffffa79c(%rip)
70e9(3): cmp $0x3,(%rax)
70ec(6): jz 0xffffff2a(%rip)
70f2(3): cmp %rbx,%rbp
70f5(6): jnz 0xffffff4e(%rip)
70fb(5): nop 0x0(%rax,%rax,1)
7100(3): test %r14,%r14
7103(2): jz 0x35(%rip)
7105(a): mov $0x16012798675095095,%rax
710f(3): cmp %rax,%rbp
7112(2): jnbe 0x4b(%rip)
7114(3): mov %rbp,%rax
7117(3): shr $0x1,%rax
711a(5): lea 0x1(%rbp,%rax,1),%rbp
711f(5): lea 0x0(%rbp,%rbp,2),%rsi
7124(3): mov %r14,%rdi
7127(4): shl/sal $0x7,%rsi
712b(5): call 0xfffffa75(%rip)
7130(3): mov %rax,%r14
7133(5): jmp 0xffffff10(%rip)
7138(3): test %rbp,%rbp
713b(5): mov $0x1,%eax
7140(5): mov $0x180,%edx
7145(4): cmove %rax,%rbp
7149(3): mov %rdx,%rax
714c(2): xor %esi,%esi
714e(3): mul %rax,%rbp,%rdx
7151(2): jo 0x11(%rip)
7153(3): test %rax,%rax
7156(2): js 0x7(%rip)
7158(3): test %rsi,%rsi
715b(2): jz 0xffffffc4(%rip)
715d(5): call 0xfffffc33(%rip)
7162(5): mov $0x1,%esi
7167(2): jmp 0xffffffec(%rip)

"setenv_TZ" :
7170(3): test %rdi,%rdi
7173(2): jz 0x1d(%rip)
7175(3): mov %rdi,%rsi
7178(7): lea 0x16a1(%rip),%rdi
717f(5): mov $0x1,%edx
7184(5): jmp 0xffffa75c(%rip)
7189(7): nop 0x0(%rax)
7190(7): lea 0x1689(%rip),%rdi
7197(5): jmp 0xffffaa29(%rip)

"tzfree.part.0" :
71a0(3): test %rdi,%rdi
71a3(2): jz 0x25(%rip)
71a5(1): push %rbx
71a6(a): nop 0x0(%rax,%rax,1)
71b0(3): mov (%rdi),%rbx
71b3(5): call 0xffffa69d(%rip)
71b8(3): test %rbx,%rbx
71bb(3): mov %rbx,%rdi
71be(2): jnz 0xfffffff2(%rip)
71c0(1): pop %rbx
71c1(1): ret near (%rsp)
71c2(6): nop 0x0(%rax,%rax,1)
71c8(2): REP ret near (%rsp)

"revert_tz.part.1" :
71d0(2): push %r13
71d2(2): push %r12
71d4(1): push %rbp
71d5(1): push %rbx
71d6(3): mov %rdi,%rbp
71d9(4): sub $0x8,%rsp
71dd(5): call 0xffffa6a3(%rip)
71e2(4): cmp $0x0,0x8(%rbp)
71e6(3): mov %rax,%rbx
71e9(3): mov (%rax),%r12d
71ec(4): lea 0x9(%rbp),%rdi
71f0(2): jnz 0x4(%rip)
71f2(2): xor %edi,%edi
71f4(5): call 0xffffff7c(%rip)
71f9(2): test %eax,%eax
71fb(2): jz 0x25(%rip)
71fd(3): mov (%rbx),%r12d
7200(3): xor %r13d,%r13d
7203(3): mov %rbp,%rdi
7206(5): call 0xffffff9a(%rip)
720b(3): mov %r12d,(%rbx)
720e(4): add $0x8,%rsp
7212(3): mov %r13d,%eax
7215(1): pop %rbx
7216(1): pop %rbp
7217(2): pop %r12
7219(2): pop %r13
721b(1): ret near (%rsp)
721c(4): nop 0x0(%rax)
7220(5): call 0xffffa860(%rip)
7225(6): mov $0x1,%r13d
722b(2): jmp 0xffffffd8(%rip)

"tzalloc" :
7230(3): test %rdi,%rdi
7233(2): push %r12
7235(1): push %rbp
7236(1): push %rbx
7237(2): jz 0x61(%rip)
7239(3): mov %rdi,%r12
723c(5): call 0xffffa734(%rip)
7241(4): lea 0x1(%rax),%rbp
7245(5): mov $0x76,%edi
724a(4): cmp $0x76,%rbp
724e(4): cmovnb %rbp,%rdi
7252(4): add $0x11,%rdi
7256(4): and $0xfffffff8,%rdi
725a(5): call 0xffffa876(%rip)
725f(3): test %rax,%rax
7262(3): mov %rax,%rbx
7265(2): jz 0x26(%rip)
7267(7): mov $0x0,(%rax)
726e(4): lea 0x9(%rbx),%rdi
7272(5): mov $0x1,%eax
7277(4): mov %ax,0x8(%rbx)
727b(3): mov %rbp,%rdx
727e(3): mov %r12,%rsi
7281(5): call 0xffffa7ef(%rip)
7286(5): mov $0x0,0x9(%rbx,%rbp,1)
728b(3): mov %rbx,%rax
728e(1): pop %rbx
728f(1): pop %rbp
7290(2): pop %r12
7292(1): ret near (%rsp)
7293(5): nop 0x0(%rax,%rax,1)
7298(5): mov $0x80,%edi
729d(5): call 0xffffa833(%rip)
72a2(3): test %rax,%rax
72a5(3): mov %rax,%rbx
72a8(2): jz 0xffffffe3(%rip)
72aa(2): xor %edx,%edx
72ac(7): mov $0x0,(%rbx)
72b3(3): mov %rbx,%rax
72b6(4): mov %dx,0x8(%rbx)
72ba(1): pop %rbx
72bb(1): pop %rbp
72bc(2): pop %r12
72be(1): ret near (%rsp)

"save_abbr" :
72c0(2): push %r15
72c2(2): push %r14
72c4(5): mov $0x1,%eax
72c9(2): push %r13
72cb(2): push %r12
72cd(1): push %rbp
72ce(1): push %rbx
72cf(4): sub $0x8,%rsp
72d3(4): mov 0x30(%rsi),%rbp
72d7(3): test %rbp,%rbp
72da(6): jz 0x96(%rip)
72e0(3): cmp %rbp,%rsi
72e3(3): mov %rdi,%r12
72e6(3): mov %rsi,%r13
72e9(2): jnbe 0xb(%rip)
72eb(4): lea 0x38(%rsi),%rdx
72ef(3): cmp %rdx,%rbp
72f2(2): jb 0x7e(%rip)
72f4(4): cmp $0x0,0x0(%rbp)
72f8(5): lea 0x9(%r12),%rbx
72fd(2): jz 0x63(%rip)
72ff(1): nop 
7300(3): mov %rbp,%rsi
7303(3): mov %rbx,%rdi
7306(5): call 0xffffa74a(%rip)
730b(2): test %eax,%eax
730d(2): jz 0x5a(%rip)
730f(3): cmp $0x0,(%rbx)
7312(2): jnz 0x14(%rip)
7314(5): lea 0x9(%r12),%r14
7319(3): cmp %rbx,%r14
731c(2): jnz 0x64(%rip)
731e(6): cmp $0x0,0x8(%r12)
7324(2): jz 0x5c(%rip)
7326(3): mov %rbx,%rdi
7329(5): call 0xffffa647(%rip)
732e(5): lea 0x1(%rbx,%rax,1),%rbx
7333(3): cmp $0x0,(%rbx)
7336(2): jnz 0xffffffca(%rip)
7338(4): mov (%r12),%rax
733c(3): test %rax,%rax
733f(2): jz 0xffffffc1(%rip)
7341(4): lea 0x9(%rax),%rbx
7345(3): mov %rbp,%rsi
7348(3): mov %rax,%r12
734b(3): mov %rbx,%rdi
734e(5): call 0xffffa702(%rip)
7353(2): test %eax,%eax
7355(2): jnz 0xffffffba(%rip)
7357(2): jmp 0x10(%rip)
7359(7): nop 0x0(%rax)
7360(7): lea 0x119a(%rip),%rbx
7367(4): mov %rbx,0x30(%r13)
736b(5): mov $0x1,%eax
7370(4): add $0x8,%rsp
7374(1): pop %rbx
7375(1): pop %rbp
7376(2): pop %r12
7378(2): pop %r13
737a(2): pop %r14
737c(2): pop %r15
737e(1): ret near (%rsp)
737f(1): nop 
7380(3): mov %rbp,%rdi
7383(5): call 0xffffa5ed(%rip)
7388(4): lea 0x1(%rax),%rdx
738c(3): mov %rax,%r15
738f(3): mov %rbx,%rax
7392(3): sub %r14,%rax
7395(3): mov %rax,%rcx
7398(3): not %rcx
739b(3): cmp %rdx,%rcx
739e(2): jb 0x32(%rip)
73a0(3): add %rdx,%rax
73a3(4): cmp $0x76,%rax
73a7(2): jbe 0x39(%rip)
73a9(3): mov %rbp,%rdi
73ac(5): call 0xfffffe84(%rip)
73b1(3): mov %rax,%rbx
73b4(4): mov %rax,(%r12)
73b8(2): xor %eax,%eax
73ba(3): test %rbx,%rbx
73bd(2): jz 0xffffffb3(%rip)
73bf(4): mov $0x0,0x8(%rbx)
73c3(4): add $0x9,%rbx
73c7(2): jmp 0xffffffa0(%rip)
73c9(7): nop 0x0(%rax)
73d0(5): call 0xffffa4b0(%rip)
73d5(6): mov $0xc,(%rax)
73db(2): xor %eax,%eax
73dd(2): jmp 0xffffff93(%rip)
73df(1): nop 
73e0(3): mov %rbp,%rsi
73e3(3): mov %rbx,%rdi
73e6(5): call 0xffffa68a(%rip)
73eb(6): mov $0x0,0x1(%rbx,%r15,1)
73f1(5): jmp 0xffffff76(%rip)

"set_tz" :
7400(2): push %r12
7402(1): push %rbp
7403(3): mov %rdi,%rbp
7406(1): push %rbx
7407(7): lea 0x1412(%rip),%rdi
740e(4): sub $0x10,%rsp
7412(5): call 0xffffa42e(%rip)
7417(3): test %rax,%rax
741a(3): mov %rax,%rbx
741d(6): jz 0x9b(%rip)
7423(4): cmp $0x0,0x8(%rbp)
7427(2): jnz 0x69(%rip)
7429(3): mov %rbx,%rdi
742c(5): call 0xfffffe04(%rip)
7431(3): test %rax,%rax
7434(3): mov %rax,%r12
7437(2): jz 0x46(%rip)
7439(2): xor %edi,%edi
743b(4): cmp $0x0,0x8(%rbp)
743f(2): jz 0x6(%rip)
7441(4): lea 0x9(%rbp),%rdi
7445(5): call 0xfffffd2b(%rip)
744a(2): test %eax,%eax
744c(6): jz 0x8c(%rip)
7452(5): call 0xffffa42e(%rip)
7457(4): cmp $0x1,%r12
745b(2): mov (%rax),%ebx
745d(2): jz 0x1b(%rip)
745f(3): mov %r12,%rdi
7462(5): mov %rax,0x8(%rsp)
7467(5): call 0xfffffd39(%rip)
746c(5): mov 0x8(%rsp),%rax
7471(7): nop 0x0(%rax)
7478(2): mov %ebx,(%rax)
747a(3): xor %r12d,%r12d
747d(4): add $0x10,%rsp
7481(3): mov %r12,%rax
7484(1): pop %rbx
7485(1): pop %rbp
7486(2): pop %r12
7488(1): ret near (%rsp)
7489(7): nop 0x0(%rax)
7490(4): lea 0x9(%rbp),%rdi
7494(3): mov %rax,%rsi
7497(6): mov $0x1,%r12d
749d(5): call 0xffffa5b3(%rip)
74a2(2): test %eax,%eax
74a4(2): jnz 0xffffff85(%rip)
74a6(4): add $0x10,%rsp
74aa(3): mov %r12,%rax
74ad(1): pop %rbx
74ae(1): pop %rbp
74af(2): pop %r12
74b1(1): ret near (%rsp)
74b2(6): nop 0x0(%rax,%rax,1)
74b8(4): cmp $0x0,0x8(%rbp)
74bc(6): mov $0x1,%r12d
74c2(6): jnz 0xffffff67(%rip)
74c8(4): add $0x10,%rsp
74cc(3): mov %r12,%rax
74cf(1): pop %rbx
74d0(1): pop %rbp
74d1(2): pop %r12
74d3(1): ret near (%rsp)
74d4(4): nop 0x0(%rax)
74d8(5): call 0xffffa5a8(%rip)
74dd(2): jmp 0xffffffa0(%rip)

"tzfree" :
74e0(4): cmp $0x1,%rdi
74e4(2): jz 0x7(%rip)
74e6(5): jmp 0xfffffcba(%rip)
74eb(1): ret near (%rsp)

"localtime_rz" :
74f0(2): push %r13
74f2(2): push %r12
74f4(1): push %rbp
74f5(1): push %rbx
74f6(3): mov %rsi,%rbp
74f9(4): sub $0x8,%rsp
74fd(3): test %rdi,%rdi
7500(2): jz 0x70(%rip)
7502(3): mov %rdx,%r13
7505(3): mov %rdi,%rbx
7508(5): call 0xfffffef8(%rip)
750d(3): test %rax,%rax
7510(3): mov %rax,%r12
7513(2): jz 0x4b(%rip)
7515(3): mov %r13,%rsi
7518(3): mov %rbp,%rdi
751b(5): call 0xffffa395(%rip)
7520(3): test %rax,%rax
7523(2): jz 0x2d(%rip)
7525(3): mov %r13,%rsi
7528(3): mov %rbx,%rdi
752b(5): call 0xfffffd95(%rip)
7530(2): test %al,%al
7532(2): jz 0x1e(%rip)
7534(4): cmp $0x1,%r12
7538(2): jnz 0x4d(%rip)
753a(4): add $0x8,%rsp
753e(3): mov %r13,%rax
7541(1): pop %rbx
7542(1): pop %rbp
7543(2): pop %r12
7545(2): pop %r13
7547(1): ret near (%rsp)
7548(8): nop 0x0(%rax,%rax,1)
7550(4): cmp $0x1,%r12
7554(2): jz 0xa(%rip)
7556(3): mov %r12,%rdi
7559(5): call 0xfffffc77(%rip)
755e(4): add $0x8,%rsp
7562(2): xor %eax,%eax
7564(1): pop %rbx
7565(1): pop %rbp
7566(2): pop %r12
7568(2): pop %r13
756a(1): ret near (%rsp)
756b(5): nop 0x0(%rax,%rax,1)
7570(4): add $0x8,%rsp
7574(3): mov %rbp,%rdi
7577(3): mov %rdx,%rsi
757a(1): pop %rbx
757b(1): pop %rbp
757c(2): pop %r12
757e(2): pop %r13
7580(5): jmp 0xffffa460(%rip)
7585(3): mov %r12,%rdi
7588(5): call 0xfffffc48(%rip)
758d(2): test %al,%al
758f(2): jnz 0xffffffab(%rip)
7591(2): jmp 0xffffffcd(%rip)

"mktime_z" :
75a0(2): push %r12
75a2(1): push %rbp
75a3(1): push %rbx
75a4(3): mov %rsi,%rbx
75a7(4): sub $0x50,%rsp
75ab(9): mov $0x28,%rax
75b4(5): mov %rax,0x48(%rsp)
75b9(2): xor %eax,%eax
75bb(3): test %rdi,%rdi
75be(6): jz 0x102(%rip)
75c4(3): mov %rdi,%rbp
75c7(5): call 0xfffffe39(%rip)
75cc(3): test %rax,%rax
75cf(3): mov %rax,%r12
75d2(6): jz 0xfe(%rip)
75d8(3): mov %rbx,%rdi
75db(5): call 0xffffa525(%rip)
75e0(4): cmp $0xffffffff,%rax
75e4(5): mov %rax,0x8(%rsp)
75e9(2): jz 0x57(%rip)
75eb(3): mov %rbx,%rsi
75ee(3): mov %rbp,%rdi
75f1(5): call 0xfffffccf(%rip)
75f6(2): test %al,%al
75f8(2): jnz 0xb(%rip)
75fa(9): mov $0xffffffff,0x8(%rsp)
7603(4): cmp $0x1,%r12
7607(2): jz 0x12(%rip)
7609(3): mov %r12,%rdi
760c(5): call 0xfffffbc4(%rip)
7611(2): test %al,%al
7613(6): jz 0xbd(%rip)
7619(5): mov 0x8(%rsp),%rax
761e(5): mov 0x48(%rsp),%rcx
7623(9): xor $0x28,%rcx
762c(6): jnz 0xb0(%rip)
7632(4): add $0x50,%rsp
7636(1): pop %rbx
7637(1): pop %rbp
7638(2): pop %r12
763a(1): ret near (%rsp)
763b(5): nop 0x0(%rax,%rax,1)
7640(5): lea 0x10(%rsp),%rsi
7645(5): lea 0x8(%rsp),%rdi
764a(5): call 0xffffa266(%rip)
764f(3): test %rax,%rax
7652(2): jz 0xffffffb1(%rip)
7654(2): mov (%rbx),%eax
7656(3): mov 0x4(%rbx),%edx
7659(4): xor 0x10(%rsp),%eax
765d(4): xor 0x14(%rsp),%edx
7661(4): mov 0x30(%rsp),%ecx
7665(2): or %edx,%eax
7667(3): mov 0x8(%rbx),%edx
766a(4): xor 0x18(%rsp),%edx
766e(2): or %edx,%eax
7670(3): mov 0xc(%rbx),%edx
7673(4): xor 0x1c(%rsp),%edx
7677(2): or %edx,%eax
7679(3): mov 0x10(%rbx),%edx
767c(4): xor 0x20(%rsp),%edx
7680(2): or %edx,%eax
7682(3): mov 0x14(%rbx),%edx
7685(4): xor 0x24(%rsp),%edx
7689(2): or %edx,%eax
768b(3): mov 0x20(%rbx),%edx
768e(2): test %edx,%edx
7690(4): setz %dil
7694(2): test %ecx,%ecx
7696(4): setz %sil
769a(3): cmp %sil,%dil
769d(2): jz 0xe(%rip)
769f(2): test %edx,%edx
76a1(2): js 0xa(%rip)
76a3(2): test %ecx,%ecx
76a5(6): jns 0xffffff5e(%rip)
76ab(2): test %eax,%eax
76ad(6): jz 0xffffff3e(%rip)
76b3(5): jmp 0xffffff50(%rip)
76b8(8): nop 0x0(%rax,%rax,1)
76c0(3): mov %rsi,%rdi
76c3(5): call 0xffffa48d(%rip)
76c8(5): jmp 0xffffff56(%rip)
76cd(3): nop (%rax)
76d0(7): mov $0xffffffff,%rax
76d7(5): jmp 0xffffff47(%rip)
76dc(5): call 0xffffa2a4(%rip)

"close_stream" :
76f0(2): push %r12
76f2(1): push %rbp
76f3(3): mov %rdi,%rbp
76f6(1): push %rbx
76f7(5): call 0xffffa1d9(%rip)
76fc(3): mov 0x0(%rbp),%ebx
76ff(3): mov %rbp,%rdi
7702(3): mov %rax,%r12
7705(5): call 0xfffff6cb(%rip)
770a(3): and $0x20,%ebx
770d(2): test %ebx,%ebx
770f(2): jnz 0x19(%rip)
7711(2): test %eax,%eax
7713(2): jz 0xc(%rip)
7715(3): test %r12,%r12
7718(5): mov $0xffffffff,%eax
771d(2): jz 0x3b(%rip)
771f(1): pop %rbx
7720(1): pop %rbp
7721(2): pop %r12
7723(1): ret near (%rsp)
7724(4): nop 0x0(%rax)
7728(2): test %eax,%eax
772a(2): jnz 0x1e(%rip)
772c(5): call 0xffffa154(%rip)
7731(6): mov $0x0,(%rax)
7737(5): mov $0xffffffff,%eax
773c(1): pop %rbx
773d(1): pop %rbp
773e(2): pop %r12
7740(1): ret near (%rsp)
7741(7): nop 0x0(%rax)
7748(1): pop %rbx
7749(5): mov $0xffffffff,%eax
774e(1): pop %rbp
774f(2): pop %r12
7751(1): ret near (%rsp)
7752(6): nop 0x0(%rax,%rax,1)
7758(5): call 0xffffa128(%rip)
775d(3): cmp $0x9,(%rax)
7760(1): pop %rbx
7761(1): pop %rbp
7762(2): pop %r12
7764(3): setnz %al
7767(3): movzx %al,%eax
776a(2): neg %eax
776c(1): ret near (%rsp)

"hard_locale" :
7770(4): sub $0x8,%rsp
7774(2): xor %esi,%esi
7776(5): call 0xffffa3ba(%rip)
777b(3): mov %rax,%rdx
777e(5): mov $0x1,%eax
7783(3): test %rdx,%rdx
7786(2): jz 0x1f(%rip)
7788(7): lea 0x5ce(%rip),%rdi
778f(5): mov $0x2,%ecx
7794(3): mov %rdx,%rsi
7797(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7799(3): setnbe %cl
779c(3): sbb $0x0,%cl
779f(2): xor %eax,%eax
77a1(2): test %cl,%cl
77a3(2): jnz 0xd(%rip)
77a5(4): add $0x8,%rsp
77a9(1): ret near (%rsp)
77aa(6): nop 0x0(%rax,%rax,1)
77b0(7): lea 0x106c(%rip),%rdi
77b7(5): mov $0x6,%ecx
77bc(3): mov %rdx,%rsi
77bf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
77c1(3): setnbe %al
77c4(2): sbb $0x0,%al
77c6(2): test %al,%al
77c8(3): setnz %al
77cb(4): add $0x8,%rsp
77cf(1): ret near (%rsp)

"locale_charset" :
77d0(4): sub $0x8,%rsp
77d4(5): mov $0xe,%edi
77d9(5): call 0xffffa317(%rip)
77de(3): test %rax,%rax
77e1(2): jz 0x1f(%rip)
77e3(3): cmp $0x0,(%rax)
77e6(7): lea 0x103c(%rip),%rdx
77ed(4): cmove %rdx,%rax
77f1(4): add $0x8,%rsp
77f5(1): ret near (%rsp)
77f6(a): nop 0x0(%rax,%rax,1)
7800(7): lea 0x1022(%rip),%rax
7807(4): add $0x8,%rsp
780b(1): ret near (%rsp)

"__libc_csu_init" :
7810(2): push %r15
7812(2): push %r14
7814(3): mov %rdx,%r15
7817(2): push %r13
7819(2): push %r12
781b(7): lea 0x2022ce(%rip),%r12
7822(1): push %rbp
7823(7): lea 0x2022ce(%rip),%rbp
782a(1): push %rbx
782b(3): mov %edi,%r13d
782e(3): mov %rsi,%r14
7831(3): sub %r12,%rbp
7834(4): sub $0x8,%rsp
7838(4): sar $0x3,%rbp
783c(5): call 0xffff9fbc(%rip)
7841(3): test %rbp,%rbp
7844(2): jz 0x22(%rip)
7846(2): xor %ebx,%ebx
7848(8): nop 0x0(%rax,%rax,1)
7850(3): mov %r15,%rdx
7853(3): mov %r14,%rsi
7856(3): mov %r13d,%edi
7859(4): call 0x0(%r12,%rbx,8)
785d(4): add $0x1,%rbx
7861(3): cmp %rbx,%rbp
7864(2): jnz 0xffffffec(%rip)
7866(4): add $0x8,%rsp
786a(1): pop %rbx
786b(1): pop %rbp
786c(2): pop %r12
786e(2): pop %r13
7870(2): pop %r14
7872(2): pop %r15
7874(1): ret near (%rsp)

"atexit" :
7890(7): mov 0x202771(%rip),%rdx
7897(2): xor %esi,%esi
7899(5): jmp 0xffffa337(%rip)

"_fini" :
78a0(4): sub $0x8,%rsp
78a4(4): add $0x8,%rsp
78a8(1): ret near (%rsp)

