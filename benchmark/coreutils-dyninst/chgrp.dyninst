
"endgrent@plt" :
1910(6): jmp 0x20c4aa(%rip)
1916(5): push $0x0

"abort@plt" :
1920(6): jmp 0x20c4a2(%rip)
1926(5): push $0x1

"__errno_location@plt" :
1930(6): jmp 0x20c49a(%rip)
1936(5): push $0x2

"strncmp@plt" :
1940(6): jmp 0x20c492(%rip)
1946(5): push $0x3

"_exit@plt" :
1950(6): jmp 0x20c48a(%rip)
1956(5): push $0x4

"strcpy@plt" :
1960(6): jmp 0x20c482(%rip)
1966(5): push $0x5

"__fpending@plt" :
1970(6): jmp 0x20c47a(%rip)
1976(5): push $0x6

"qsort@plt" :
1980(6): jmp 0x20c472(%rip)
1986(5): push $0x7

"fcntl@plt" :
1990(6): jmp 0x20c46a(%rip)
1996(5): push $0x8

"textdomain@plt" :
19a0(6): jmp 0x20c462(%rip)
19a6(5): push $0x9

"fclose@plt" :
19b0(6): jmp 0x20c45a(%rip)
19b6(5): push $0xa

"getpwuid@plt" :
19c0(6): jmp 0x20c452(%rip)
19c6(5): push $0xb

"bindtextdomain@plt" :
19d0(6): jmp 0x20c44a(%rip)
19d6(5): push $0xc

"stpcpy@plt" :
19e0(6): jmp 0x20c442(%rip)
19e6(5): push $0xd

"dcgettext@plt" :
19f0(6): jmp 0x20c43a(%rip)
19f6(5): push $0xe

"__ctype_get_mb_cur_max@plt" :
1a00(6): jmp 0x20c432(%rip)
1a06(5): push $0xf

"strlen@plt" :
1a10(6): jmp 0x20c42a(%rip)
1a16(5): push $0x10

"__lxstat@plt" :
1a20(6): jmp 0x20c422(%rip)
1a26(5): push $0x11

"openat@plt" :
1a30(6): jmp 0x20c41a(%rip)
1a36(5): push $0x12

"__stack_chk_fail@plt" :
1a40(6): jmp 0x20c412(%rip)
1a46(5): push $0x13

"getopt_long@plt" :
1a50(6): jmp 0x20c40a(%rip)
1a56(5): push $0x14

"mbrtowc@plt" :
1a60(6): jmp 0x20c402(%rip)
1a66(5): push $0x15

"strchr@plt" :
1a70(6): jmp 0x20c3fa(%rip)
1a76(5): push $0x16

"getgrgid@plt" :
1a80(6): jmp 0x20c3f2(%rip)
1a86(5): push $0x17

"__fxstatat@plt" :
1a90(6): jmp 0x20c3ea(%rip)
1a96(5): push $0x18

"strrchr@plt" :
1aa0(6): jmp 0x20c3e2(%rip)
1aa6(5): push $0x19

"lseek@plt" :
1ab0(6): jmp 0x20c3da(%rip)
1ab6(5): push $0x1a

"__assert_fail@plt" :
1ac0(6): jmp 0x20c3d2(%rip)
1ac6(5): push $0x1b

"memset@plt" :
1ad0(6): jmp 0x20c3ca(%rip)
1ad6(5): push $0x1c

"close@plt" :
1ae0(6): jmp 0x20c3c2(%rip)
1ae6(5): push $0x1d

"__openat_2@plt" :
1af0(6): jmp 0x20c3ba(%rip)
1af6(5): push $0x1e

"closedir@plt" :
1b00(6): jmp 0x20c3b2(%rip)
1b06(5): push $0x1f

"memcmp@plt" :
1b10(6): jmp 0x20c3aa(%rip)
1b16(5): push $0x20

"fputs_unlocked@plt" :
1b20(6): jmp 0x20c3a2(%rip)
1b26(5): push $0x21

"calloc@plt" :
1b30(6): jmp 0x20c39a(%rip)
1b36(5): push $0x22

"dirfd@plt" :
1b40(6): jmp 0x20c392(%rip)
1b46(5): push $0x23

"memcpy@plt" :
1b50(6): jmp 0x20c38a(%rip)
1b56(5): push $0x24

"getgrnam@plt" :
1b60(6): jmp 0x20c382(%rip)
1b66(5): push $0x25

"fileno@plt" :
1b70(6): jmp 0x20c37a(%rip)
1b76(5): push $0x26

"__xstat@plt" :
1b80(6): jmp 0x20c372(%rip)
1b86(5): push $0x27

"readdir@plt" :
1b90(6): jmp 0x20c36a(%rip)
1b96(5): push $0x28

"malloc@plt" :
1ba0(6): jmp 0x20c362(%rip)
1ba6(5): push $0x29

"fflush@plt" :
1bb0(6): jmp 0x20c35a(%rip)
1bb6(5): push $0x2a

"nl_langinfo@plt" :
1bc0(6): jmp 0x20c352(%rip)
1bc6(5): push $0x2b

"__fxstat@plt" :
1bd0(6): jmp 0x20c34a(%rip)
1bd6(5): push $0x2c

"__freading@plt" :
1be0(6): jmp 0x20c342(%rip)
1be6(5): push $0x2d

"fchdir@plt" :
1bf0(6): jmp 0x20c33a(%rip)
1bf6(5): push $0x2e

"realloc@plt" :
1c00(6): jmp 0x20c332(%rip)
1c06(5): push $0x2f

"setlocale@plt" :
1c10(6): jmp 0x20c32a(%rip)
1c16(5): push $0x30

"__printf_chk@plt" :
1c20(6): jmp 0x20c322(%rip)
1c26(5): push $0x31

"memmove@plt" :
1c30(6): jmp 0x20c31a(%rip)
1c36(5): push $0x32

"error@plt" :
1c40(6): jmp 0x20c312(%rip)
1c46(5): push $0x33

"open@plt" :
1c50(6): jmp 0x20c30a(%rip)
1c56(5): push $0x34

"fseeko@plt" :
1c60(6): jmp 0x20c302(%rip)
1c66(5): push $0x35

"fchown@plt" :
1c70(6): jmp 0x20c2fa(%rip)
1c76(5): push $0x36

"fdopendir@plt" :
1c80(6): jmp 0x20c2f2(%rip)
1c86(5): push $0x37

"strtoul@plt" :
1c90(6): jmp 0x20c2ea(%rip)
1c96(5): push $0x38

"fstatfs@plt" :
1ca0(6): jmp 0x20c2e2(%rip)
1ca6(5): push $0x39

"__cxa_atexit@plt" :
1cb0(6): jmp 0x20c2da(%rip)
1cb6(5): push $0x3a

"fchownat@plt" :
1cc0(6): jmp 0x20c2d2(%rip)
1cc6(5): push $0x3b

"exit@plt" :
1cd0(6): jmp 0x20c2ca(%rip)
1cd6(5): push $0x3c

"fwrite@plt" :
1ce0(6): jmp 0x20c2c2(%rip)
1ce6(5): push $0x3d

"__fprintf_chk@plt" :
1cf0(6): jmp 0x20c2ba(%rip)
1cf6(5): push $0x3e

"mbsinit@plt" :
1d00(6): jmp 0x20c2b2(%rip)
1d06(5): push $0x3f

"iswprint@plt" :
1d10(6): jmp 0x20c2aa(%rip)
1d16(5): push $0x40

"__ctype_b_loc@plt" :
1d20(6): jmp 0x20c2a2(%rip)
1d26(5): push $0x41

".plt.got" :
1d30(6): jmp 0x20c29a(%rip)
1d36(2): nop 
1d38(6): jmp 0x20c2ba(%rip)
1d3e(2): nop 

"_init" :
18e8(4): sub $0x8,%rsp
18ec(7): mov 0x20c6f5(%rip),%rax
18f3(3): test %rax,%rax
18f6(2): jz 0x4(%rip)
18f8(2): call %rax
18fa(4): add $0x8,%rsp
18fe(1): ret near (%rsp)

"main" :
1d40(2): push %r15
1d42(2): push %r14
1d44(6): mov $0x1,%r15d
1d4a(2): push %r13
1d4c(2): push %r12
1d4e(6): mov $0xffffffff,%r13d
1d54(1): push %rbp
1d55(1): push %rbx
1d56(3): movsxd %edi,%rbp
1d59(3): mov %rsi,%rbx
1d5c(6): mov $0x10,%r12d
1d62(3): xor %r14d,%r14d
1d65(7): sub $0xf8,%rsp
1d6c(3): mov (%rsi),%rdi
1d6f(9): mov $0x28,%rax
1d78(8): mov %rax,0xe8(%rsp)
1d80(2): xor %eax,%eax
1d82(5): call 0x1bae(%rip)
1d87(7): lea 0x99b3(%rip),%rsi
1d8e(5): mov $0x6,%edi
1d93(5): call 0xfffffe7d(%rip)
1d98(7): lea 0x872e(%rip),%rsi
1d9f(7): lea 0x86fe(%rip),%rdi
1da6(5): call 0xfffffc2a(%rip)
1dab(7): lea 0x86f2(%rip),%rdi
1db2(5): call 0xfffffbee(%rip)
1db7(7): lea 0x1a72(%rip),%rdi
1dbe(5): call 0x8642(%rip)
1dc3(5): lea 0x20(%rsp),%rax
1dc8(3): mov %rax,%rdi
1dcb(5): mov %rax,0x8(%rsp)
1dd0(5): call 0xa80(%rip)
1dd5(3): nop (%rax)
1dd8(7): lea 0x20bbe1(%rip),%rcx
1ddf(7): lea 0x871c(%rip),%rdx
1de6(3): xor %r8d,%r8d
1de9(3): mov %rbx,%rsi
1dec(2): mov %ebp,%edi
1dee(5): call 0xfffffc62(%rip)
1df3(3): cmp $0xff,%eax
1df6(6): jz 0x153(%rip)
1dfc(3): cmp $0x63,%eax
1dff(6): jz 0x12a(%rip)
1e05(2): jle 0x3b(%rip)
1e07(5): cmp $0x80,%eax
1e0c(6): jz 0xf2(%rip)
1e12(2): jnle 0x5e(%rip)
1e14(3): cmp $0x68,%eax
1e17(6): jz 0xff(%rip)
1e1d(3): cmp $0x76,%eax
1e20(6): jz 0xe9(%rip)
1e26(3): cmp $0x66,%eax
1e29(2): jz 0xc(%rip)
1e2b(5): mov $0x1,%edi
1e30(5): call 0x520(%rip)
1e35(5): mov %r15b,0x31(%rsp)
1e3a(2): jmp 0xffffff9e(%rip)
1e3c(4): nop 0x0(%rax)
1e40(3): cmp $0x48,%eax
1e43(6): jz 0xdb(%rip)
1e49(2): jle 0x57(%rip)
1e4b(3): cmp $0x50,%eax
1e4e(6): jz 0x9b(%rip)
1e54(3): cmp $0x52,%eax
1e57(6): jz 0x9d(%rip)
1e5d(3): cmp $0x4c,%eax
1e60(2): jnz 0xffffffcb(%rip)
1e62(6): mov $0x2,%r12d
1e68(5): jmp 0xffffff70(%rip)
1e6d(3): nop (%rax)
1e70(5): cmp $0x82,%eax
1e75(6): jz 0xc9(%rip)
1e7b(6): jl 0xbb(%rip)
1e81(5): cmp $0x83,%eax
1e86(2): jnz 0xffffffa5(%rip)
1e88(7): mov 0x20c209(%rip),%rax
1e8f(7): mov %rax,0x20c24a(%rip)
1e96(5): jmp 0xffffff42(%rip)
1e9b(5): nop 0x0(%rax,%rax,1)
1ea0(5): cmp $0xffffff7d,%eax
1ea5(6): jnz 0x2b8(%rip)
1eab(4): sub $0x8,%rsp
1eaf(7): mov 0x20c1d2(%rip),%rdi
1eb6(7): mov 0x20c153(%rip),%rcx
1ebd(2): push $0x0
1ebf(7): lea 0x861f(%rip),%r9
1ec6(7): lea 0x8625(%rip),%r8
1ecd(7): lea 0x85cc(%rip),%rdx
1ed4(7): lea 0x8549(%rip),%rsi
1edb(2): xor %eax,%eax
1edd(5): call 0x3cc3(%rip)
1ee2(2): xor %edi,%edi
1ee4(5): call 0xfffffdec(%rip)
1ee9(6): mov $0x10,%r12d
1eef(5): jmp 0xfffffee9(%rip)
1ef4(5): mov %r15b,0x24(%rsp)
1ef9(5): jmp 0xfffffedf(%rip)
1efe(6): mov $0x1,%r13d
1f04(5): jmp 0xfffffed4(%rip)
1f09(8): mov $0x0,0x20(%rsp)
1f11(5): jmp 0xfffffec7(%rip)
1f16(3): xor %r13d,%r13d
1f19(5): jmp 0xfffffebf(%rip)
1f1e(6): mov $0x11,%r12d
1f24(5): jmp 0xfffffeb4(%rip)
1f29(8): mov $0x1,0x20(%rsp)
1f31(5): jmp 0xfffffea7(%rip)
1f36(3): xor %r14d,%r14d
1f39(5): jmp 0xfffffe9f(%rip)
1f3e(6): mov $0x1,%r14d
1f44(5): jmp 0xfffffe94(%rip)
1f49(5): cmp $0x0,0x24(%rsp)
1f4e(6): jnz 0xcf(%rip)
1f54(6): mov $0x10,%r12d
1f5a(7): movsxd 0x20c12f(%rip),%rax
1f61(3): test %r13d,%r13d
1f64(7): mov 0x20c175(%rip),%r13
1f6b(2): mov %ebp,%edx
1f6d(5): setnz 0x30(%rsp)
1f72(2): sub %eax,%edx
1f74(3): test %r13,%r13
1f77(6): jz 0xc2(%rip)
1f7d(2): test %edx,%edx
1f7f(6): jle 0x1f0(%rip)
1f85(5): lea 0x50(%rsp),%rdx
1f8a(3): mov %r13,%rsi
1f8d(5): mov $0x1,%edi
1f92(5): call 0xfffffbee(%rip)
1f97(2): test %eax,%eax
1f99(6): jnz 0x25f(%rip)
1f9f(4): mov 0x70(%rsp),%ebp
1fa3(2): mov %ebp,%edi
1fa5(5): call 0x8fb(%rip)
1faa(5): mov %rax,0x40(%rsp)
1faf(5): cmp $0x0,0x24(%rsp)
1fb4(2): jz 0xb(%rip)
1fb6(3): test %r14b,%r14b
1fb9(6): jnz 0xc9(%rip)
1fbf(7): movsxd 0x20c0ca(%rip),%rax
1fc6(4): sub $0x8,%rsp
1fca(4): or $0xff,%r9d
1fce(4): push 0x10(%rsp)
1fd2(3): mov %r12d,%esi
1fd5(2): mov %ebp,%ecx
1fd7(6): or $0x400,%esi
1fdd(3): mov %r9d,%edx
1fe0(3): mov %r9d,%r8d
1fe3(4): lea 0x0(%rbx,%rax,8),%rdi
1fe7(5): call 0x1709(%rip)
1fec(1): pop %rdx
1fed(1): pop %rcx
1fee(3): xor $0x1,%eax
1ff1(3): movzx %al,%eax
1ff4(8): mov 0xe8(%rsp),%rcx
1ffc(9): xor $0x28,%rcx
2005(6): jnz 0x1ee(%rip)
200b(7): add $0xf8,%rsp
2012(1): pop %rbx
2013(1): pop %rbp
2014(2): pop %r12
2016(2): pop %r13
2018(2): pop %r14
201a(2): pop %r15
201c(1): ret near (%rsp)
201d(4): cmp $0x10,%r12d
2021(6): jnz 0xffffff39(%rip)
2027(4): sub $0x1,%r13d
202b(6): jz 0x16e(%rip)
2031(3): xor %r13d,%r13d
2034(5): jmp 0xffffff26(%rip)
2039(3): sub $0x1,%edx
203c(6): jle 0x133(%rip)
2042(4): mov 0x0(%rbx,%rax,8),%r15
2046(3): lea 0x1(%rax),%edx
2049(6): mov %edx,0x20c041(%rip)
204f(4): cmp $0x0,(%r15)
2053(6): jnz 0x94(%rip)
2059(5): mov %r13,0x40(%rsp)
205e(4): cmp $0x0,(%r15)
2062(2): jz 0x7d(%rip)
2064(3): mov %r15,%rdi
2067(5): call 0xfffffaf9(%rip)
206c(3): test %rax,%rax
206f(6): jz 0x88(%rip)
2075(3): mov 0x10(%rax),%ebp
2078(5): call 0xfffff898(%rip)
207d(5): jmp 0xffffff32(%rip)
2082(7): lea 0x20c047(%rip),%rdi
2089(5): call 0x35d7(%rip)
208e(3): test %rax,%rax
2091(5): mov %rax,0x28(%rsp)
2096(6): jnz 0xffffff29(%rip)
209c(7): lea 0x916b(%rip),%rsi
20a3(5): mov $0x4,%edi
20a8(5): call 0x32c8(%rip)
20ad(7): lea 0x8ce4(%rip),%rsi
20b4(5): mov $0x5,%edx
20b9(2): xor %edi,%edi
20bb(3): mov %rax,%rbp
20be(5): call 0xfffff932(%rip)
20c3(3): mov %rax,%rbx
20c6(5): call 0xfffff86a(%rip)
20cb(2): mov (%rax),%esi
20cd(3): mov %rbp,%rcx
20d0(3): mov %rbx,%rdx
20d3(5): mov $0x1,%edi
20d8(2): xor %eax,%eax
20da(5): call 0xfffffb66(%rip)
20df(3): or $0xff,%ebp
20e2(5): jmp 0xfffffecd(%rip)
20e7(3): mov %r15,%rdi
20ea(5): call 0x3e46(%rip)
20ef(3): mov %rax,%r13
20f2(5): jmp 0xffffff67(%rip)
20f7(5): lea 0x18(%rsp),%rcx
20fc(7): lea 0x963e(%rip),%r8
2103(2): xor %esi,%esi
2105(5): mov $0xa,%edx
210a(3): mov %r15,%rdi
210d(5): call 0x3f03(%rip)
2112(2): test %eax,%eax
2114(2): jnz 0x17(%rip)
2116(5): mov 0x18(%rsp),%rax
211b(5): mov $0xffffffff,%edx
2120(3): cmp %rdx,%rax
2123(2): mov %eax,%ebp
2125(6): jbe 0xffffff53(%rip)
212b(3): mov %r15,%rdi
212e(5): call 0x3512(%rip)
2133(7): lea 0x83fa(%rip),%rsi
213a(3): mov %rax,%rbx
213d(5): mov $0x5,%edx
2142(2): xor %edi,%edi
2144(5): call 0xfffff8ac(%rip)
2149(3): mov %rbx,%rcx
214c(3): mov %rax,%rdx
214f(2): xor %esi,%esi
2151(5): mov $0x1,%edi
2156(2): xor %eax,%eax
2158(5): call 0xfffffae8(%rip)
215d(5): cmp $0xffffff7e,%eax
2162(6): jnz 0xfffffcc9(%rip)
2168(2): xor %edi,%edi
216a(5): call 0x1e6(%rip)
216f(2): cmp %ebp,%eax
2171(2): jl 0x4c(%rip)
2173(7): lea 0x8391(%rip),%rsi
217a(2): xor %edi,%edi
217c(5): mov $0x5,%edx
2181(5): call 0xfffff86f(%rip)
2186(2): xor %esi,%esi
2188(3): mov %rax,%rdx
218b(2): xor %edi,%edi
218d(2): xor %eax,%eax
218f(5): call 0xfffffab1(%rip)
2194(5): jmp 0xfffffc97(%rip)
2199(7): lea 0x8bc8(%rip),%rsi
21a0(5): mov $0x5,%edx
21a5(2): xor %edi,%edi
21a7(5): call 0xfffff849(%rip)
21ac(2): xor %esi,%esi
21ae(3): mov %rax,%rdx
21b1(5): mov $0x1,%edi
21b6(2): xor %eax,%eax
21b8(5): call 0xfffffa88(%rip)
21bd(5): mov 0xfffffff8(%rbx,%rbp,8),%rdi
21c2(5): call 0x347e(%rip)
21c7(7): lea 0x834d(%rip),%rsi
21ce(3): mov %rax,%rbx
21d1(2): xor %edi,%edi
21d3(5): mov $0x5,%edx
21d8(5): call 0xfffff818(%rip)
21dd(3): mov %rbx,%rcx
21e0(3): mov %rax,%rdx
21e3(2): xor %esi,%esi
21e5(2): xor %edi,%edi
21e7(2): xor %eax,%eax
21e9(5): call 0xfffffa57(%rip)
21ee(5): jmp 0xfffffc3d(%rip)
21f3(5): call 0xfffff84d(%rip)
21f8(3): mov %r13,%rsi
21fb(5): mov $0x4,%edi
2200(5): call 0x3170(%rip)
2205(7): lea 0x8b8c(%rip),%rsi
220c(5): mov $0x5,%edx
2211(2): xor %edi,%edi
2213(3): mov %rax,%rbp
2216(5): call 0xfffff7da(%rip)
221b(3): mov %rax,%rbx
221e(5): call 0xfffff712(%rip)
2223(2): mov (%rax),%esi
2225(3): mov %rbp,%rcx
2228(3): mov %rbx,%rdx
222b(5): mov $0x1,%edi
2230(2): xor %eax,%eax
2232(5): call 0xfffffa0e(%rip)
2237(9): nop 0x0(%rax,%rax,1)
2240(2): xor %ebp,%ebp
2242(3): mov %rdx,%r9
2245(1): pop %rsi
2246(3): mov %rsp,%rdx
2249(4): and $0xfffffff0,%rsp
224d(1): push %rax
224e(1): push %rsp
224f(7): lea 0x819a(%rip),%r8
2256(7): lea 0x8123(%rip),%rcx
225d(7): lea 0xfffffadc(%rip),%rdi
2264(6): call 0x20bd76(%rip)
226a(1): hlt 

"_start" :
2240(2): xor %ebp,%ebp
2242(3): mov %rdx,%r9
2245(1): pop %rsi
2246(3): mov %rsp,%rdx
2249(4): and $0xfffffff0,%rsp
224d(1): push %rax
224e(1): push %rsp
224f(7): lea 0x819a(%rip),%r8
2256(7): lea 0x8123(%rip),%rcx
225d(7): lea 0xfffffadc(%rip),%rdi
2264(6): call 0x20bd76(%rip)
226a(1): hlt 

"deregister_tm_clones" :
2270(7): lea 0x20be09(%rip),%rdi
2277(1): push %rbp
2278(7): lea 0x20be01(%rip),%rax
227f(3): cmp %rdi,%rax
2282(3): mov %rsp,%rbp
2285(2): jz 0x1b(%rip)
2287(7): mov 0x20bd4a(%rip),%rax
228e(3): test %rax,%rax
2291(2): jz 0xf(%rip)
2293(1): pop %rbp
2294(2): jmp %rax
2296(a): nop 0x0(%rax,%rax,1)
22a0(1): pop %rbp
22a1(1): ret near (%rsp)

"register_tm_clones" :
22b0(7): lea 0x20bdc9(%rip),%rdi
22b7(7): lea 0x20bdc2(%rip),%rsi
22be(1): push %rbp
22bf(3): sub %rdi,%rsi
22c2(3): mov %rsp,%rbp
22c5(4): sar $0x3,%rsi
22c9(3): mov %rsi,%rax
22cc(4): shr $0x3f,%rax
22d0(3): add %rax,%rsi
22d3(3): sar $0x1,%rsi
22d6(2): jz 0x1a(%rip)
22d8(7): mov 0x20bd11(%rip),%rax
22df(3): test %rax,%rax
22e2(2): jz 0xe(%rip)
22e4(1): pop %rbp
22e5(2): jmp %rax
22e7(9): nop 0x0(%rax,%rax,1)
22f0(1): pop %rbp
22f1(1): ret near (%rsp)

"__do_global_dtors_aux" :
2300(7): cmp $0x0,0x20bdc1(%rip)
2307(2): jnz 0x31(%rip)
2309(8): cmp $0x0,0x20bce7(%rip)
2311(1): push %rbp
2312(3): mov %rsp,%rbp
2315(2): jz 0xe(%rip)
2317(7): mov 0x20bcea(%rip),%rdi
231e(5): call 0xfffffa1a(%rip)
2323(5): call 0xffffff4d(%rip)
2328(7): mov $0x1,0x20bd99(%rip)
232f(1): pop %rbp
2330(1): ret near (%rsp)
2331(7): nop 0x0(%rax)
2338(2): REP ret near (%rsp)

"frame_dummy" :
2340(1): push %rbp
2341(3): mov %rsp,%rbp
2344(1): pop %rbp
2345(5): jmp 0xffffff6b(%rip)

"usage" :
2350(2): push %r13
2352(2): push %r12
2354(5): mov $0x5,%edx
2359(1): push %rbp
235a(1): push %rbx
235b(2): mov %edi,%ebp
235d(7): sub $0x88,%rsp
2364(7): mov 0x20bd8d(%rip),%rbx
236b(9): mov $0x28,%rax
2374(5): mov %rax,0x78(%rsp)
2379(2): xor %eax,%eax
237b(2): test %edi,%edi
237d(2): jz 0x30(%rip)
237f(7): lea 0x821a(%rip),%rsi
2386(2): xor %edi,%edi
2388(5): call 0xfffff668(%rip)
238d(7): mov 0x20bd2c(%rip),%rdi
2394(3): mov %rax,%rdx
2397(3): mov %rbx,%rcx
239a(5): mov $0x1,%esi
239f(2): xor %eax,%eax
23a1(5): call 0xfffff94f(%rip)
23a6(2): mov %ebp,%edi
23a8(5): call 0xfffff928(%rip)
23ad(7): lea 0x8214(%rip),%rsi
23b4(2): xor %edi,%edi
23b6(5): call 0xfffff63a(%rip)
23bb(3): mov %rbx,%rcx
23be(3): mov %rbx,%rdx
23c1(3): mov %rax,%rsi
23c4(5): mov $0x1,%edi
23c9(2): xor %eax,%eax
23cb(5): call 0xfffff855(%rip)
23d0(7): mov 0x20bcb1(%rip),%rbx
23d7(7): lea 0x8242(%rip),%rsi
23de(5): mov $0x5,%edx
23e3(2): xor %edi,%edi
23e5(5): call 0xfffff60b(%rip)
23ea(3): mov %rbx,%rsi
23ed(3): mov %rax,%rdi
23f0(5): call 0xfffff730(%rip)
23f5(7): mov 0x20bc8c(%rip),%rbx
23fc(7): lea 0x828d(%rip),%rsi
2403(5): mov $0x5,%edx
2408(2): xor %edi,%edi
240a(5): call 0xfffff5e6(%rip)
240f(3): mov %rbx,%rsi
2412(3): mov %rax,%rdi
2415(5): call 0xfffff70b(%rip)
241a(7): mov 0x20bc67(%rip),%rbx
2421(7): lea 0x8338(%rip),%rsi
2428(5): mov $0x5,%edx
242d(2): xor %edi,%edi
242f(5): call 0xfffff5c1(%rip)
2434(3): mov %rbx,%rsi
2437(3): mov %rax,%rdi
243a(5): call 0xfffff6e6(%rip)
243f(7): mov 0x20bc42(%rip),%rbx
2446(7): lea 0x83fb(%rip),%rsi
244d(5): mov $0x5,%edx
2452(2): xor %edi,%edi
2454(5): call 0xfffff59c(%rip)
2459(3): mov %rbx,%rsi
245c(3): mov %rax,%rdi
245f(5): call 0xfffff6c1(%rip)
2464(7): mov 0x20bc1d(%rip),%rbx
246b(7): lea 0x844e(%rip),%rsi
2472(5): mov $0x5,%edx
2477(2): xor %edi,%edi
2479(5): call 0xfffff577(%rip)
247e(3): mov %rbx,%rsi
2481(3): mov %rax,%rdi
2484(5): call 0xfffff69c(%rip)
2489(7): mov 0x20bbf8(%rip),%rbx
2490(7): lea 0x84a9(%rip),%rsi
2497(5): mov $0x5,%edx
249c(2): xor %edi,%edi
249e(5): call 0xfffff552(%rip)
24a3(3): mov %rbx,%rsi
24a6(3): mov %rax,%rdi
24a9(5): call 0xfffff677(%rip)
24ae(7): mov 0x20bbd3(%rip),%rbx
24b5(7): lea 0x84f4(%rip),%rsi
24bc(5): mov $0x5,%edx
24c1(2): xor %edi,%edi
24c3(5): call 0xfffff52d(%rip)
24c8(3): mov %rbx,%rsi
24cb(3): mov %rax,%rdi
24ce(5): call 0xfffff652(%rip)
24d3(7): mov 0x20bbae(%rip),%rbx
24da(7): lea 0x8517(%rip),%rsi
24e1(5): mov $0x5,%edx
24e6(2): xor %edi,%edi
24e8(5): call 0xfffff508(%rip)
24ed(3): mov %rbx,%rsi
24f0(3): mov %rax,%rdi
24f3(5): call 0xfffff62d(%rip)
24f8(7): mov 0x20bb89(%rip),%rbx
24ff(7): lea 0x86ca(%rip),%rsi
2506(5): mov $0x5,%edx
250b(2): xor %edi,%edi
250d(5): call 0xfffff4e3(%rip)
2512(3): mov %rbx,%rsi
2515(3): mov %rax,%rdi
2518(5): call 0xfffff608(%rip)
251d(7): mov 0x20bb64(%rip),%rbx
2524(7): lea 0x86d5(%rip),%rsi
252b(5): mov $0x5,%edx
2530(2): xor %edi,%edi
2532(5): call 0xfffff4be(%rip)
2537(3): mov %rbx,%rsi
253a(3): mov %rax,%rdi
253d(5): call 0xfffff5e3(%rip)
2542(7): mov 0x20bbaf(%rip),%rbx
2549(7): lea 0x86e8(%rip),%rsi
2550(5): mov $0x5,%edx
2555(2): xor %edi,%edi
2557(5): call 0xfffff499(%rip)
255c(3): mov %rbx,%rcx
255f(3): mov %rbx,%rdx
2562(3): mov %rax,%rsi
2565(5): mov $0x1,%edi
256a(2): xor %eax,%eax
256c(7): lea 0x7eb1(%rip),%rbx
2573(5): call 0xfffff6ad(%rip)
2578(7): lea 0x7eab(%rip),%rax
257f(7): lea 0x7ee5(%rip),%rcx
2586(9): mov $0x0,0x60(%rsp)
258f(9): mov $0x0,0x68(%rsp)
2598(3): mov %rsp,%rdx
259b(4): mov %rax,(%rsp)
259f(7): lea 0x7e86(%rip),%rax
25a6(5): mov %rcx,0x30(%rsp)
25ab(7): lea 0x7ec3(%rip),%rcx
25b2(5): mov %rax,0x8(%rsp)
25b7(7): lea 0x7ee6(%rip),%rax
25be(5): mov %rcx,0x40(%rsp)
25c3(7): lea 0x7eb5(%rip),%rcx
25ca(5): mov %rax,0x10(%rsp)
25cf(7): lea 0x7e66(%rip),%rax
25d6(5): mov %rcx,0x50(%rsp)
25db(5): mov %rax,0x18(%rsp)
25e0(7): lea 0x7e6b(%rip),%rax
25e7(5): mov %rax,0x20(%rsp)
25ec(7): lea 0x7e69(%rip),%rax
25f3(5): mov %rax,0x28(%rsp)
25f8(5): mov %rax,0x38(%rsp)
25fd(5): mov %rax,0x48(%rsp)
2602(5): mov %rax,0x58(%rsp)
2607(9): nop 0x0(%rax,%rax,1)
2610(4): add $0x10,%rdx
2614(3): mov (%rdx),%rdi
2617(3): test %rdi,%rdi
261a(2): jz 0x15(%rip)
261c(5): mov $0x6,%ecx
2621(3): mov %rbx,%rsi
2624(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2626(3): setnbe %al
2629(2): sbb $0x0,%al
262b(2): test %al,%al
262d(2): jnz 0xffffffe3(%rip)
262f(4): mov 0x8(%rdx),%r12
2633(2): xor %edi,%edi
2635(5): mov $0x5,%edx
263a(7): lea 0x7e48(%rip),%rsi
2641(3): test %r12,%r12
2644(6): jz 0xc7(%rip)
264a(5): call 0xfffff3a6(%rip)
264f(7): lea 0x866a(%rip),%rcx
2656(7): lea 0x7e43(%rip),%rdx
265d(3): mov %rax,%rsi
2660(5): mov $0x1,%edi
2665(2): xor %eax,%eax
2667(5): call 0xfffff5b9(%rip)
266c(2): xor %esi,%esi
266e(5): mov $0x5,%edi
2673(5): call 0xfffff59d(%rip)
2678(3): test %rax,%rax
267b(2): jz 0x1e(%rip)
267d(7): lea 0x7e2a(%rip),%rsi
2684(5): mov $0x3,%edx
2689(3): mov %rax,%rdi
268c(5): call 0xfffff2b4(%rip)
2691(2): test %eax,%eax
2693(6): jnz 0x10d(%rip)
2699(7): lea 0x7e12(%rip),%rsi
26a0(2): xor %edi,%edi
26a2(5): mov $0x5,%edx
26a7(5): call 0xfffff349(%rip)
26ac(7): lea 0x7d71(%rip),%rcx
26b3(7): lea 0x8606(%rip),%rdx
26ba(3): mov %rax,%rsi
26bd(5): mov $0x1,%edi
26c2(2): xor %eax,%eax
26c4(5): call 0xfffff55c(%rip)
26c9(3): cmp %rbx,%r12
26cc(7): lea 0x7d73(%rip),%rcx
26d3(7): lea 0x9067(%rip),%rbx
26da(4): cmove %rcx,%rbx
26de(7): lea 0x864b(%rip),%rsi
26e5(2): xor %edi,%edi
26e7(5): mov $0x5,%edx
26ec(5): call 0xfffff304(%rip)
26f1(3): mov %rbx,%rcx
26f4(3): mov %rax,%rsi
26f7(3): mov %r12,%rdx
26fa(5): mov $0x1,%edi
26ff(2): xor %eax,%eax
2701(5): call 0xfffff51f(%rip)
2706(5): jmp 0xfffffca0(%rip)
270b(5): call 0xfffff2e5(%rip)
2710(7): lea 0x85a9(%rip),%rcx
2717(7): lea 0x7d82(%rip),%rdx
271e(3): mov %rax,%rsi
2721(5): mov $0x1,%edi
2726(2): xor %eax,%eax
2728(5): call 0xfffff4f8(%rip)
272d(2): xor %esi,%esi
272f(5): mov $0x5,%edi
2734(5): call 0xfffff4dc(%rip)
2739(3): test %rax,%rax
273c(2): jz 0x1a(%rip)
273e(7): lea 0x7d69(%rip),%rsi
2745(5): mov $0x3,%edx
274a(3): mov %rax,%rdi
274d(5): call 0xfffff1f3(%rip)
2752(2): test %eax,%eax
2754(2): jnz 0x45(%rip)
2756(7): lea 0x7d55(%rip),%rsi
275d(5): mov $0x5,%edx
2762(2): xor %edi,%edi
2764(7): lea 0x7cb9(%rip),%r12
276b(7): lea 0x7cd4(%rip),%rbx
2772(5): call 0xfffff27e(%rip)
2777(7): lea 0x7ca6(%rip),%rcx
277e(7): lea 0x853b(%rip),%rdx
2785(3): mov %rax,%rsi
2788(5): mov $0x1,%edi
278d(2): xor %eax,%eax
278f(5): call 0xfffff491(%rip)
2794(5): jmp 0xffffff4a(%rip)
2799(7): lea 0x7c84(%rip),%r12
27a0(7): mov 0x20b8e1(%rip),%r13
27a7(7): lea 0x853a(%rip),%rsi
27ae(2): xor %edi,%edi
27b0(5): mov $0x5,%edx
27b5(5): call 0xfffff23b(%rip)
27ba(3): mov %r13,%rsi
27bd(3): mov %rax,%rdi
27c0(5): call 0xfffff360(%rip)
27c5(5): jmp 0xfffffed4(%rip)

"user_group_str" :
27d0(3): test %rdi,%rdi
27d3(2): push %r12
27d5(1): push %rbp
27d6(1): push %rbx
27d7(2): jz 0x51(%rip)
27d9(3): test %rsi,%rsi
27dc(2): jz 0x54(%rip)
27de(3): mov %rsi,%rbx
27e1(3): mov %rdi,%rbp
27e4(5): call 0xfffff22c(%rip)
27e9(3): mov %rbx,%rdi
27ec(3): mov %rax,%r12
27ef(5): call 0xfffff221(%rip)
27f4(5): lea 0x2(%r12,%rax,1),%rdi
27f9(5): call 0x3507(%rip)
27fe(3): mov %rbp,%rsi
2801(3): mov %rax,%rdi
2804(3): mov %rax,%r12
2807(5): call 0xfffff1d9(%rip)
280c(4): lea 0x1(%rax),%rdi
2810(3): mov $0x3a,(%rax)
2813(3): mov %rbx,%rsi
2816(5): call 0xfffff14a(%rip)
281b(3): mov %r12,%rax
281e(1): pop %rbx
281f(1): pop %rbp
2820(2): pop %r12
2822(1): ret near (%rsp)
2823(5): nop 0x0(%rax,%rax,1)
2828(3): test %rsi,%rsi
282b(2): jz 0x15(%rip)
282d(3): mov %rsi,%rdi
2830(1): pop %rbx
2831(1): pop %rbp
2832(2): pop %r12
2834(5): jmp 0x36fc(%rip)
2839(7): nop 0x0(%rax)
2840(3): xor %r12d,%r12d
2843(2): jmp 0xffffffd8(%rip)

"chopt_init" :
2850(6): mov $0x2,(%rdi)
2856(8): mov $0x0,0x8(%rdi)
285e(4): mov $0x1,0x10(%rdi)
2862(4): mov $0x0,0x4(%rdi)
2866(4): mov $0x0,0x11(%rdi)
286a(8): mov $0x0,0x18(%rdi)
2872(8): mov $0x0,0x20(%rdi)
287a(1): ret near (%rsp)

"chopt_free" :
2880(1): push %rbx
2881(3): mov %rdi,%rbx
2884(4): mov 0x18(%rdi),%rdi
2888(5): call 0xfffff4a8(%rip)
288d(4): mov 0x20(%rbx),%rdi
2891(1): pop %rbx
2892(5): jmp 0xfffff49e(%rip)

"gid_to_name" :
28a0(1): push %rbx
28a1(2): mov %edi,%ebx
28a3(4): sub $0x20,%rsp
28a7(9): mov $0x28,%rax
28b0(5): mov %rax,0x18(%rsp)
28b5(2): xor %eax,%eax
28b7(5): call 0xfffff1c9(%rip)
28bc(3): test %rax,%rax
28bf(2): jz 0x21(%rip)
28c1(3): mov (%rax),%rdi
28c4(5): call 0x366c(%rip)
28c9(5): mov 0x18(%rsp),%rdx
28ce(9): xor $0x28,%rdx
28d7(2): jnz 0x18(%rip)
28d9(4): add $0x20,%rsp
28dd(1): pop %rbx
28de(1): ret near (%rsp)
28df(1): nop 
28e0(2): mov %ebx,%edi
28e2(3): mov %rsp,%rsi
28e5(5): call 0xffb(%rip)
28ea(3): mov %rax,%rdi
28ed(2): jmp 0xffffffd7(%rip)
28ef(5): call 0xfffff151(%rip)

"uid_to_name" :
2900(1): push %rbx
2901(2): mov %edi,%ebx
2903(4): sub $0x20,%rsp
2907(9): mov $0x28,%rax
2910(5): mov %rax,0x18(%rsp)
2915(2): xor %eax,%eax
2917(5): call 0xfffff0a9(%rip)
291c(3): test %rax,%rax
291f(2): jz 0x21(%rip)
2921(3): mov (%rax),%rdi
2924(5): call 0x360c(%rip)
2929(5): mov 0x18(%rsp),%rdx
292e(9): xor $0x28,%rdx
2937(2): jnz 0x18(%rip)
2939(4): add $0x20,%rsp
293d(1): pop %rbx
293e(1): ret near (%rsp)
293f(1): nop 
2940(2): mov %ebx,%edi
2942(3): mov %rsp,%rsi
2945(5): call 0xf9b(%rip)
294a(3): mov %rax,%rdi
294d(2): jmp 0xffffffd7(%rip)
294f(5): call 0xfffff0f1(%rip)

"change_file_owner" :
2960(2): push %r15
2962(2): push %r14
2964(2): push %r13
2966(2): push %r12
2968(3): mov %r8d,%r12d
296b(1): push %rbp
296c(1): push %rbx
296d(3): mov %rsi,%rbp
2970(7): sub $0x178,%rsp
2977(5): movzx 0x70(%rsi),%r14d
297c(9): mov $0x28,%rax
2985(8): mov %rax,0x168(%rsp)
298d(2): xor %eax,%eax
298f(4): mov 0x38(%rsi),%rax
2993(4): mov %rdi,(%rsp)
2997(4): mov %edx,0x10(%rsp)
299b(4): mov %ecx,0x18(%rsp)
299f(5): cmp $0xa,%r14w
29a4(8): mov 0x1b0(%rsp),%rbx
29ac(5): mov %rax,0x8(%rsp)
29b1(2): jnbe 0x3a(%rip)
29b3(7): lea 0x87ce(%rip),%rcx
29ba(4): movzx %r14w,%edx
29be(4): movsxd 0x0(%rcx,%rdx,4),%rax
29c2(3): add %rcx,%rax
29c5(2): jmp %rax
29c7(9): nop 0x0(%rax,%rax,1)
29d0(4): mov (%rsp),%rdi
29d4(5): mov %r9d,0x20(%rsp)
29d9(5): call 0x3607(%rip)
29de(2): test %al,%al
29e0(5): mov 0x20(%rsp),%r9d
29e5(6): jnz 0x7e3(%rip)
29eb(4): cmp $0xff,%r12d
29ef(4): mov 0x30(%rbp),%r11
29f3(4): movzx 0x10(%rbx),%ecx
29f7(3): setz %dl
29fa(4): cmp $0xff,%r9d
29fe(4): lea 0x78(%rbp),%r13
2a02(3): setz %al
2a05(2): and %al,%dl
2a07(3): mov %edx,%r15d
2a0a(2): jz 0x16(%rip)
2a0c(3): cmp $0x2,(%rbx)
2a0f(2): jnz 0x11(%rip)
2a11(5): cmp $0x0,0x8(%rbx)
2a16(6): jz 0x87a(%rip)
2a1c(4): nop 0x0(%rax)
2a20(2): test %cl,%cl
2a22(6): jnz 0x206(%rip)
2a28(3): mov %r14d,%eax
2a2b(3): and $0xfd,%eax
2a2e(4): cmp $0x4,%ax
2a32(3): setz %al
2a35(4): sub $0x1,%r14d
2a39(5): cmp $0x1,%r14w
2a3e(3): setbe %dl
2a41(2): or %edx,%eax
2a43(4): cmp $0xff,%r12d
2a47(6): jz 0x1b1(%rip)
2a4d(4): cmp %r12d,0x1c(%r13)
2a51(6): jz 0x1a7(%rip)
2a57(2): test %al,%al
2a59(6): jz 0xa3d(%rip)
2a5f(4): mov 0x8(%rbx),%rdx
2a63(3): test %rdx,%rdx
2a66(6): jz 0xc39(%rip)
2a6c(2): xor %ecx,%ecx
2a6e(3): mov (%rdx),%rax
2a71(4): cmp %rax,0x8(%r13)
2a75(6): jz 0x433(%rip)
2a7b(2): test %cl,%cl
2a7d(6): jz 0xc22(%rip)
2a83(4): movzx 0x10(%rbx),%ecx
2a87(4): mov (%rsp),%rax
2a8b(2): test %cl,%cl
2a8d(4): mov 0x2c(%rax),%r14d
2a91(6): jnz 0x4af(%rip)
2a97(4): mov 0x18(%rsp),%ecx
2a9b(4): mov 0x10(%rsp),%edx
2a9f(6): mov $0x100,%r8d
2aa5(3): mov %r11,%rsi
2aa8(3): mov %r14d,%edi
2aab(5): call 0xfffff215(%rip)
2ab0(2): test %eax,%eax
2ab2(4): setz %r15b
2ab6(2): jz 0x10(%rip)
2ab8(5): call 0xffffee78(%rip)
2abd(3): cmp $0x5f,(%rax)
2ac0(6): jz 0x858(%rip)
2ac6(3): test %r15b,%r15b
2ac9(6): jnz 0x53f(%rip)
2acf(5): movzx 0x11(%rbx),%r15d
2ad4(3): test %r15b,%r15b
2ad7(6): jz 0x611(%rip)
2add(2): mov (%rbx),%eax
2adf(3): xor %r15d,%r15d
2ae2(3): cmp $0x2,%eax
2ae5(6): jz 0xed(%rip)
2aeb(2): test %eax,%eax
2aed(6): jnz 0xe5(%rip)
2af3(8): mov $0x3,0x2c(%rsp)
2afb(4): mov 0x1c(%r13),%edi
2aff(5): call 0xfffffe01(%rip)
2b04(4): mov 0x20(%r13),%edi
2b08(5): mov %rax,0x10(%rsp)
2b0d(5): call 0xfffffd93(%rip)
2b12(4): mov 0x20(%rbx),%r12
2b16(4): mov 0x18(%rbx),%r14
2b1a(3): mov %rax,%r13
2b1d(3): mov %r12,%rsi
2b20(3): mov %r14,%rdi
2b23(5): call 0xfffffcad(%rip)
2b28(3): test %r12,%r12
2b2b(5): mov $0x0,%esi
2b30(5): mov %rax,0x18(%rsp)
2b35(4): cmovne %r13,%rsi
2b39(3): test %r14,%r14
2b3c(6): jz 0x564(%rip)
2b42(5): mov 0x10(%rsp),%rdi
2b47(5): call 0xfffffc89(%rip)
2b4c(5): mov %rax,0x20(%rsp)
2b51(4): mov 0x2c(%rsp),%eax
2b55(3): cmp $0x3,%eax
2b58(6): jz 0x518(%rip)
2b5e(3): cmp $0x4,%eax
2b61(6): jnz 0x75f(%rip)
2b67(7): lea 0x85c2(%rip),%rsi
2b6e(5): mov $0x5,%edx
2b73(2): xor %edi,%edi
2b75(5): call 0xffffee7b(%rip)
2b7a(3): mov %rax,%r12
2b7d(3): nop (%rax)
2b80(5): mov 0x8(%rsp),%rsi
2b85(5): mov $0x4,%edi
2b8a(5): call 0x27e6(%rip)
2b8f(5): mov 0x20(%rsp),%r14
2b94(5): mov 0x18(%rsp),%r8
2b99(3): mov %rax,%rdx
2b9c(3): mov %r12,%rsi
2b9f(5): mov $0x1,%edi
2ba4(2): xor %eax,%eax
2ba6(3): mov %r14,%rcx
2ba9(5): call 0xfffff077(%rip)
2bae(3): mov %r14,%rdi
2bb1(5): call 0xfffff17f(%rip)
2bb6(5): mov 0x18(%rsp),%rdi
2bbb(5): call 0xfffff175(%rip)
2bc0(5): mov 0x10(%rsp),%rdi
2bc5(5): call 0xfffff16b(%rip)
2bca(3): mov %r13,%rdi
2bcd(5): call 0xfffff163(%rip)
2bd2(4): cmp $0x0,0x4(%rbx)
2bd6(6): jnz 0x27a(%rip)
2bdc(4): mov (%rsp),%rdi
2be0(5): mov $0x4,%edx
2be5(3): mov %rbp,%rsi
2be8(5): call 0x5ae8(%rip)
2bed(5): jmp 0x263(%rip)
2bf2(6): nop 0x0(%rax,%rax,1)
2bf8(4): cmp $0xff,%r9d
2bfc(6): jz 0x284(%rip)
2c02(4): cmp %r9d,0x20(%r13)
2c06(3): setz %cl
2c09(2): test %al,%al
2c0b(6): jz 0xfffffe70(%rip)
2c11(4): mov 0x8(%rbx),%rdx
2c15(3): test %rdx,%rdx
2c18(6): jz 0xfffffe63(%rip)
2c1e(5): jmp 0xfffffe50(%rip)
2c23(5): nop 0x0(%rax,%rax,1)
2c28(6): mov 0x90(%rbp),%eax
2c2e(5): and $0xf000,%eax
2c33(5): cmp $0xa000,%eax
2c38(6): jnz 0xfffffdf0(%rip)
2c3e(4): mov (%rsp),%rax
2c42(5): lea 0x40(%rsp),%r13
2c47(3): xor %r8d,%r8d
2c4a(3): mov %r11,%rdx
2c4d(5): mov $0x1,%edi
2c52(5): mov %r9d,0x2c(%rsp)
2c57(3): mov %r13,%rcx
2c5a(5): mov %r11,0x20(%rsp)
2c5f(3): mov 0x2c(%rax),%esi
2c62(5): call 0xffffee2e(%rip)
2c67(2): test %eax,%eax
2c69(6): jnz 0x77f(%rip)
2c6f(5): movzx 0x70(%rbp),%r14d
2c74(5): mov 0x20(%rsp),%r11
2c79(5): mov 0x2c(%rsp),%r9d
2c7e(5): jmp 0xfffffdaa(%rip)
2c83(5): nop 0x0(%rax,%rax,1)
2c88(5): movzx 0x4(%rbx),%r15d
2c8d(3): test %r15b,%r15b
2c90(6): jz 0xfffffd5b(%rip)
2c96(4): mov 0x8(%rbx),%rax
2c9a(3): test %rax,%rax
2c9d(6): jz 0x1b3(%rip)
2ca3(3): mov (%rax),%rbx
2ca6(7): cmp %rbx,0x80(%rsi)
2cad(6): jnz 0x1a3(%rip)
2cb3(4): mov 0x8(%rax),%rax
2cb7(4): cmp %rax,0x78(%rsi)
2cbb(6): jnz 0x195(%rip)
2cc1(7): lea 0x8546(%rip),%rdx
2cc8(5): mov 0x8(%rsp),%rsi
2ccd(5): mov $0x2,%ecx
2cd2(3): mov %rdx,%rdi
2cd5(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2cd7(3): setnbe %al
2cda(2): sbb $0x0,%al
2cdc(2): test %al,%al
2cde(6): jnz 0x912(%rip)
2ce4(5): mov 0x8(%rsp),%rsi
2ce9(5): mov $0x4,%edi
2cee(5): call 0x2682(%rip)
2cf3(7): lea 0x81a6(%rip),%rsi
2cfa(3): mov %rax,%rbx
2cfd(5): mov $0x5,%edx
2d02(2): xor %edi,%edi
2d04(5): call 0xffffecec(%rip)
2d09(3): mov %rbx,%rcx
2d0c(3): mov %rax,%rdx
2d0f(2): xor %esi,%esi
2d11(2): xor %edi,%edi
2d13(2): xor %eax,%eax
2d15(5): call 0xffffef2b(%rip)
2d1a(7): lea 0x81ef(%rip),%rsi
2d21(5): mov $0x5,%edx
2d26(2): xor %edi,%edi
2d28(3): xor %r15d,%r15d
2d2b(5): call 0xffffecc5(%rip)
2d30(2): xor %esi,%esi
2d32(3): mov %rax,%rdx
2d35(2): xor %edi,%edi
2d37(2): xor %eax,%eax
2d39(5): call 0xffffef07(%rip)
2d3e(4): mov (%rsp),%rbx
2d42(5): mov $0x4,%edx
2d47(3): mov %rbp,%rsi
2d4a(3): mov %rbx,%rdi
2d4d(5): call 0x5983(%rip)
2d52(3): mov %rbx,%rdi
2d55(5): call 0x51fb(%rip)
2d5a(5): jmp 0xf6(%rip)
2d5f(1): nop 
2d60(5): movzx 0x11(%rbx),%r15d
2d65(3): test %r15b,%r15b
2d68(6): jz 0x578(%rip)
2d6e(2): mov (%rbx),%eax
2d70(3): xor %r15d,%r15d
2d73(3): cmp $0x2,%eax
2d76(6): jz 0xfffffe5c(%rip)
2d7c(2): test %eax,%eax
2d7e(6): jnz 0xfffffe54(%rip)
2d84(3): xor %r15d,%r15d
2d87(8): mov $0x3,0x2c(%rsp)
2d8f(4): mov 0x20(%rbx),%r12
2d93(4): mov 0x18(%rbx),%r14
2d97(3): xor %r13d,%r13d
2d9a(9): mov $0x0,0x10(%rsp)
2da3(5): jmp 0xfffffd7a(%rip)
2da8(8): nop 0x0(%rax,%rax,1)
2db0(5): movzx 0x11(%rbx),%r15d
2db5(3): test %r15b,%r15b
2db8(2): jnz 0xffffffb6(%rip)
2dba(5): mov 0x8(%rsp),%rdx
2dbf(5): mov $0x3,%esi
2dc4(2): xor %edi,%edi
2dc6(5): call 0x26aa(%rip)
2dcb(3): mov 0x40(%rbp),%esi
2dce(7): lea 0x776e(%rip),%rdx
2dd5(3): mov %rax,%rcx
2dd8(2): xor %eax,%eax
2dda(2): xor %edi,%edi
2ddc(5): call 0xffffee64(%rip)
2de1(2): mov (%rbx),%eax
2de3(3): cmp $0x2,%eax
2de6(2): jnz 0xffffff96(%rip)
2de8(5): jmp 0xfffffdea(%rip)
2ded(3): nop (%rax)
2df0(5): cmp $0x0,0x58(%rsi)
2df5(2): jnz 0xd(%rip)
2df7(5): cmp $0x0,0x20(%rsi)
2dfc(6): jz 0x5cc(%rip)
2e02(5): movzx 0x11(%rbx),%r15d
2e07(3): test %r15b,%r15b
2e0a(6): jnz 0xffffff64(%rip)
2e10(5): mov 0x8(%rsp),%rsi
2e15(5): mov $0x4,%edi
2e1a(5): call 0x2556(%rip)
2e1f(7): lea 0x7f91(%rip),%rsi
2e26(3): mov %rax,%r12
2e29(5): mov $0x5,%edx
2e2e(2): xor %edi,%edi
2e30(5): call 0xffffebc0(%rip)
2e35(3): mov 0x40(%rbp),%esi
2e38(3): mov %r12,%rcx
2e3b(3): mov %rax,%rdx
2e3e(2): jmp 0xffffff9a(%rip)
2e40(4): cmp $0x0,0x4(%rbx)
2e44(6): jnz 0xfffffba7(%rip)
2e4a(6): mov $0x1,%r15d
2e50(8): mov 0x168(%rsp),%rbx
2e58(9): xor $0x28,%rbx
2e61(3): mov %r15d,%eax
2e64(6): jnz 0x836(%rip)
2e6a(7): add $0x178,%rsp
2e71(1): pop %rbx
2e72(1): pop %rbp
2e73(2): pop %r12
2e75(2): pop %r13
2e77(2): pop %r14
2e79(2): pop %r15
2e7b(1): ret near (%rsp)
2e7c(4): nop 0x0(%rax)
2e80(2): test %al,%al
2e82(6): jz 0xfffffc01(%rip)
2e88(4): mov 0x8(%rbx),%rdx
2e8c(3): test %rdx,%rdx
2e8f(6): jz 0xfffffbf4(%rip)
2e95(3): mov (%rdx),%rdi
2e98(4): cmp %rdi,0x8(%r13)
2e9c(6): jnz 0xfffffbe7(%rip)
2ea2(2): mov %eax,%ecx
2ea4(4): nop 0x0(%rax)
2ea8(4): mov 0x8(%rdx),%rax
2eac(4): cmp %rax,0x0(%r13)
2eb0(6): jnz 0xfffffbcb(%rip)
2eb6(7): lea 0x8351(%rip),%rdx
2ebd(5): mov 0x8(%rsp),%rsi
2ec2(5): mov $0x2,%ecx
2ec7(3): mov %rdx,%rdi
2eca(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2ecc(3): setnbe %al
2ecf(2): sbb $0x0,%al
2ed1(2): test %al,%al
2ed3(6): jnz 0x5e5(%rip)
2ed9(5): mov 0x8(%rsp),%rsi
2ede(5): mov $0x4,%edi
2ee3(5): call 0x248d(%rip)
2ee8(7): lea 0x7fb1(%rip),%rsi
2eef(3): mov %rax,%rbx
2ef2(5): mov $0x5,%edx
2ef7(2): xor %edi,%edi
2ef9(5): call 0xffffeaf7(%rip)
2efe(3): mov %rbx,%rcx
2f01(3): mov %rax,%rdx
2f04(2): xor %esi,%esi
2f06(2): xor %edi,%edi
2f08(2): xor %eax,%eax
2f0a(5): call 0xffffed36(%rip)
2f0f(7): lea 0x7ffa(%rip),%rsi
2f16(5): mov $0x5,%edx
2f1b(2): xor %edi,%edi
2f1d(3): xor %r15d,%r15d
2f20(5): call 0xffffead0(%rip)
2f25(2): xor %esi,%esi
2f27(3): mov %rax,%rdx
2f2a(2): xor %edi,%edi
2f2c(2): xor %eax,%eax
2f2e(5): call 0xffffed12(%rip)
2f33(5): jmp 0xffffff1d(%rip)
2f38(8): nop 0x0(%rax,%rax,1)
2f40(3): test %r15b,%r15b
2f43(6): jnz 0x9d(%rip)
2f49(4): mov 0x18(%r13),%eax
2f4d(5): and $0xf000,%eax
2f52(5): cmp $0x8000,%eax
2f57(6): jz 0x3b1(%rip)
2f5d(5): cmp $0x4000,%eax
2f62(8): mov $0x10900,0x20(%rsp)
2f6a(2): jnz 0x76(%rip)
2f6c(4): mov 0x20(%rsp),%edx
2f70(3): mov %r11,%rsi
2f73(3): mov %r14d,%edi
2f76(5): mov %r9d,0x30(%rsp)
2f7b(4): mov %cl,0x2c(%rsp)
2f7f(5): mov %r11,0x38(%rsp)
2f84(5): call 0xffffeb6c(%rip)
2f89(2): test %eax,%eax
2f8b(3): mov %eax,%r8d
2f8e(5): movzx 0x2c(%rsp),%ecx
2f93(5): mov 0x30(%rsp),%r9d
2f98(6): jns 0x1b0(%rip)
2f9e(5): call 0xffffe992(%rip)
2fa3(3): cmp $0xd,(%rax)
2fa6(3): mov %rax,%r10
2fa9(5): movzx 0x2c(%rsp),%ecx
2fae(5): mov 0x30(%rsp),%r9d
2fb3(5): mov 0x38(%rsp),%r11
2fb8(6): jnz 0xfffffb17(%rip)
2fbe(4): mov 0x18(%r13),%eax
2fc2(5): and $0xf000,%eax
2fc7(5): cmp $0x8000,%eax
2fcc(6): jz 0x5ca(%rip)
2fd2(4): mov (%rsp),%rax
2fd6(4): mov 0x2c(%rax),%r14d
2fda(6): nop 0x0(%rax,%rax,1)
2fe0(4): mov 0x18(%rsp),%ecx
2fe4(4): mov 0x10(%rsp),%edx
2fe8(3): xor %r8d,%r8d
2feb(3): mov %r11,%rsi
2fee(3): mov %r14d,%edi
2ff1(5): call 0xffffeccf(%rip)
2ff6(2): test %eax,%eax
2ff8(4): setz %r15b
2ffc(5): jmp 0xfffffaca(%rip)
3001(7): nop 0x0(%rax)
3008(2): mov (%rbx),%eax
300a(3): cmp $0x2,%eax
300d(6): jz 0xfffffbc5(%rip)
3013(4): mov 0x10(%rsp),%esi
3017(3): cmp $0xff,%esi
301a(2): jz 0x1a(%rip)
301c(4): cmp %esi,0x1c(%r13)
3020(6): mov $0x1,%r15d
3026(8): mov $0x2,0x2c(%rsp)
302e(6): jnz 0xfffffacd(%rip)
3034(4): mov 0x18(%rsp),%esi
3038(3): cmp $0xff,%esi
303b(6): jz 0x225(%rip)
3041(4): cmp %esi,0x20(%r13)
3045(6): mov $0x1,%r15d
304b(8): mov $0x2,0x2c(%rsp)
3053(6): jnz 0xfffffaa8(%rip)
3059(2): test %eax,%eax
305b(6): jnz 0xfffffb77(%rip)
3061(8): mov $0x4,0x2c(%rsp)
3069(5): jmp 0xfffffa92(%rip)
306e(2): nop 
3070(6): cmp $0x0,0x20(%rsp)
3076(5): mov $0x5,%edx
307b(6): jz 0x315(%rip)
3081(3): test %r14,%r14
3084(6): jz 0x1b4(%rip)
308a(7): lea 0x7fc7(%rip),%rsi
3091(2): xor %edi,%edi
3093(5): call 0xffffe95d(%rip)
3098(3): mov %rax,%r12
309b(5): jmp 0xfffffae5(%rip)
30a0(2): xor %edi,%edi
30a2(5): call 0xfffff72e(%rip)
30a7(5): mov %rax,0x20(%rsp)
30ac(4): mov 0x2c(%rsp),%eax
30b0(3): cmp $0x3,%eax
30b3(2): jz 0xffffffbd(%rip)
30b5(3): cmp $0x4,%eax
30b8(6): jnz 0x158(%rip)
30be(3): test %r12,%r12
30c1(5): mov $0x5,%edx
30c6(6): jz 0x382(%rip)
30cc(7): lea 0x7d70(%rip),%rsi
30d3(2): xor %edi,%edi
30d5(5): call 0xffffe91b(%rip)
30da(3): mov %rax,%r12
30dd(5): jmp 0xfffffaa3(%rip)
30e2(6): nop 0x0(%rax,%rax,1)
30e8(5): mov 0x8(%rsp),%rsi
30ed(5): mov $0x4,%edi
30f2(5): call 0x227e(%rip)
30f7(5): cmp $0xff,0x10(%rsp)
30fc(3): mov %rax,%r14
30ff(5): mov $0x5,%edx
3104(6): jz 0x174(%rip)
310a(7): lea 0x7ce6(%rip),%rsi
3111(2): xor %edi,%edi
3113(5): call 0xffffe8dd(%rip)
3118(3): mov %rax,%r12
311b(5): call 0xffffe815(%rip)
3120(2): mov (%rax),%esi
3122(2): xor %edi,%edi
3124(2): xor %eax,%eax
3126(3): mov %r14,%rcx
3129(3): mov %r12,%rdx
312c(5): call 0xffffeb14(%rip)
3131(2): mov (%rbx),%eax
3133(3): cmp $0x2,%eax
3136(6): jnz 0xfffff9b5(%rip)
313c(5): jmp 0xfffffa96(%rip)
3141(7): nop 0x0(%rax)
3148(8): lea 0xd0(%rsp),%rdx
3150(3): mov %r8d,%esi
3153(5): mov $0x1,%edi
3158(5): mov %r8d,0x20(%rsp)
315d(5): mov %r9d,0x30(%rsp)
3162(4): mov %cl,0x2c(%rsp)
3166(5): call 0xffffea6a(%rip)
316b(2): test %eax,%eax
316d(5): mov 0x20(%rsp),%r8d
3172(6): jnz 0x2ae(%rip)
3178(8): mov 0xd8(%rsp),%rax
3180(4): cmp %rax,0x8(%r13)
3184(5): movzx 0x2c(%rsp),%ecx
3189(5): mov 0x30(%rsp),%r9d
318e(6): jz 0x382(%rip)
3194(5): mov %r8d,0x10(%rsp)
3199(5): call 0xffffe797(%rip)
319e(5): mov 0x10(%rsp),%r8d
31a3(3): mov %rax,%r12
31a6(3): mov (%rax),%r14d
31a9(3): mov %r8d,%edi
31ac(5): call 0xffffe934(%rip)
31b1(2): mov (%rbx),%eax
31b3(4): mov %r14d,(%r12)
31b7(3): cmp $0x2,%eax
31ba(6): jnz 0xfffff931(%rip)
31c0(5): jmp 0xfffffa12(%rip)
31c5(3): nop (%rax)
31c8(5): mov 0x8(%rsp),%rdx
31cd(5): mov $0x3,%esi
31d2(2): xor %edi,%edi
31d4(3): xor %r15d,%r15d
31d7(5): call 0x2299(%rip)
31dc(7): lea 0x7d65(%rip),%rsi
31e3(3): mov %rax,%rbx
31e6(5): mov $0x5,%edx
31eb(2): xor %edi,%edi
31ed(5): call 0xffffe803(%rip)
31f2(3): mov %rbx,%rcx
31f5(3): mov %rax,%rdx
31f8(2): xor %esi,%esi
31fa(2): xor %edi,%edi
31fc(2): xor %eax,%eax
31fe(5): call 0xffffea42(%rip)
3203(5): jmp 0xfffffc4d(%rip)
3208(8): nop 0x0(%rax,%rax,1)
3210(3): test %r12,%r12
3213(5): mov $0x5,%edx
3218(6): jz 0x268(%rip)
321e(7): lea 0x7e0b(%rip),%rsi
3225(2): xor %edi,%edi
3227(5): call 0xffffe7c9(%rip)
322c(3): mov %rax,%r12
322f(5): jmp 0xfffff951(%rip)
3234(4): nop 0x0(%rax)
3238(3): test %r12,%r12
323b(6): jz 0x345(%rip)
3241(7): lea 0x7e40(%rip),%rsi
3248(2): xor %edi,%edi
324a(5): call 0xffffe7a6(%rip)
324f(3): mov %rax,%r12
3252(5): jmp 0xfffff92e(%rip)
3257(9): nop 0x0(%rax,%rax,1)
3260(2): test %eax,%eax
3262(6): jnz 0x246(%rip)
3268(6): mov $0x1,%r15d
326e(5): jmp 0xfffffdf3(%rip)
3273(5): nop 0x0(%rax,%rax,1)
3278(7): lea 0x7b91(%rip),%rsi
327f(2): xor %edi,%edi
3281(5): call 0xffffe76f(%rip)
3286(3): mov %rax,%r12
3289(5): jmp 0xfffffe92(%rip)
328e(2): nop 
3290(2): test %cl,%cl
3292(6): jnz 0xfffff996(%rip)
3298(3): mov %r14d,%eax
329b(3): and $0xfd,%eax
329e(4): cmp $0x4,%ax
32a2(2): jz 0x11(%rip)
32a4(4): sub $0x1,%r14d
32a8(5): cmp $0x1,%r14w
32ad(6): jnbe 0xfffff7da(%rip)
32b3(4): mov (%rsp),%rax
32b7(4): mov 0x2c(%rax),%r14d
32bb(5): jmp 0xfffff7dc(%rip)
32c0(7): lea 0x7d41(%rip),%rsi
32c7(5): mov $0x5,%edx
32cc(2): xor %edi,%edi
32ce(5): call 0xffffe722(%rip)
32d3(3): mov %rax,%r12
32d6(5): jmp 0xfffff8aa(%rip)
32db(5): nop 0x0(%rax,%rax,1)
32e0(5): mov 0x8(%rsp),%rsi
32e5(5): mov $0x4,%edi
32ea(5): call 0x2086(%rip)
32ef(5): mov $0x5,%edx
32f4(3): mov %rax,%r12
32f7(7): lea 0x7aca(%rip),%rsi
32fe(5): jmp 0xfffffb30(%rip)
3303(5): nop 0x0(%rax,%rax,1)
3308(8): mov $0x900,0x20(%rsp)
3310(5): jmp 0xfffffc5c(%rip)
3315(3): nop (%rax)
3318(2): mov (%rbx),%eax
331a(6): mov $0x1,%r15d
3320(3): cmp $0x2,%eax
3323(6): jz 0xfffff8af(%rip)
3329(2): test %eax,%eax
332b(6): jnz 0xfffff8a7(%rip)
3331(4): mov 0x1c(%r13),%edi
3335(5): call 0xfffff5cb(%rip)
333a(4): mov 0x20(%r13),%edi
333e(5): mov %rax,0x10(%rsp)
3343(5): call 0xfffff55d(%rip)
3348(5): mov 0x8(%rsp),%rsi
334d(5): mov $0x4,%edi
3352(3): mov %rax,%r13
3355(5): call 0x201b(%rip)
335a(7): lea 0x7def(%rip),%rsi
3361(3): mov %rax,%r12
3364(2): xor %edi,%edi
3366(5): mov $0x5,%edx
336b(5): call 0xffffe685(%rip)
3370(3): mov %r12,%rdx
3373(3): mov %rax,%rsi
3376(5): mov $0x1,%edi
337b(2): xor %eax,%eax
337d(5): call 0xffffe8a3(%rip)
3382(5): jmp 0xfffff83e(%rip)
3387(9): nop 0x0(%rax,%rax,1)
3390(3): test %r14,%r14
3393(7): lea 0x7d46(%rip),%rsi
339a(6): jz 0xc6(%rip)
33a0(2): xor %edi,%edi
33a2(5): call 0xffffe64e(%rip)
33a7(3): mov %rax,%r12
33aa(5): mov 0x18(%rsp),%rax
33af(9): mov $0x0,0x18(%rsp)
33b8(5): mov %rax,0x20(%rsp)
33bd(5): jmp 0xfffff7c3(%rip)
33c2(6): nop 0x0(%rax,%rax,1)
33c8(4): mov (%rsp),%rdi
33cc(8): mov $0x1,0x20(%rsi)
33d4(5): mov $0x1,%edx
33d9(5): call 0x52f7(%rip)
33de(5): jmp 0xfffffa6c(%rip)
33e3(5): nop 0x0(%rax,%rax,1)
33e8(5): movzx 0x11(%rbx),%r15d
33ed(3): test %r15b,%r15b
33f0(6): jnz 0xfffff6ed(%rip)
33f6(5): mov 0x8(%rsp),%rsi
33fb(5): mov $0x4,%edi
3400(5): call 0x1f70(%rip)
3405(5): mov $0x5,%edx
340a(3): mov %rax,%r14
340d(7): lea 0x79cd(%rip),%rsi
3414(5): jmp 0xfffffe6b(%rip)
3419(7): nop 0x0(%rax)
3420(5): mov %r8d,0x18(%rsp)
3425(5): call 0xffffe50b(%rip)
342a(5): mov 0x18(%rsp),%r8d
342f(3): mov (%rax),%r12d
3432(3): mov %rax,%r14
3435(3): mov %r8d,%edi
3438(5): call 0xffffe6a8(%rip)
343d(3): mov %r12d,(%r14)
3440(5): jmp 0xfffff68f(%rip)
3445(3): nop (%rax)
3448(7): lea 0x7a10(%rip),%rsi
344f(2): xor %edi,%edi
3451(5): call 0xffffe59f(%rip)
3456(3): mov %rax,%r12
3459(5): jmp 0xfffff727(%rip)
345e(2): nop 
3460(3): test %r12,%r12
3463(7): lea 0x7c9e(%rip),%rsi
346a(6): jnz 0xffffff36(%rip)
3470(7): lea 0x7c41(%rip),%rsi
3477(5): jmp 0xffffff29(%rip)
347c(4): nop 0x0(%rax)
3480(7): lea 0x799e(%rip),%rsi
3487(2): xor %edi,%edi
3489(5): call 0xffffe567(%rip)
348e(3): mov %rax,%r12
3491(5): jmp 0xfffff6ef(%rip)
3496(2): mov (%rbx),%eax
3498(3): cmp $0x2,%eax
349b(2): jz 0xd(%rip)
349d(2): test %eax,%eax
349f(6): jz 0x219(%rip)
34a5(3): nop (%rax)
34a8(6): mov $0x1,%r15d
34ae(5): jmp 0xfffff724(%rip)
34b3(5): nop 0x0(%rax,%rax,1)
34b8(5): mov $0x4,%esi
34bd(5): mov $0x1,%edi
34c2(5): call 0x1d8e(%rip)
34c7(5): mov 0x8(%rsp),%rdx
34cc(2): xor %edi,%edi
34ce(5): mov $0x4,%esi
34d3(3): mov %rax,%rbp
34d6(5): call 0x1d7a(%rip)
34db(7): lea 0x79ee(%rip),%rsi
34e2(3): mov %rax,%rbx
34e5(2): xor %edi,%edi
34e7(5): mov $0x5,%edx
34ec(5): call 0xffffe504(%rip)
34f1(3): mov %rbp,%r8
34f4(3): mov %rax,%rdx
34f7(3): mov %rbx,%rcx
34fa(2): xor %esi,%esi
34fc(2): xor %edi,%edi
34fe(2): xor %eax,%eax
3500(5): call 0xffffe740(%rip)
3505(5): jmp 0xfffffa0a(%rip)
350a(6): nop 0x0(%rax,%rax,1)
3510(8): mov 0xd0(%rsp),%rax
3518(4): cmp %rax,0x0(%r13)
351c(6): jnz 0xfffffc78(%rip)
3522(4): cmp $0xff,%r12d
3526(6): jz 0x122(%rip)
352c(8): cmp 0xec(%rsp),%r12d
3534(6): jz 0x10e(%rip)
353a(5): mov %r8d,0x2c(%rsp)
353f(4): mov %cl,0x20(%rsp)
3543(5): call 0xffffe3ed(%rip)
3548(5): mov 0x2c(%rsp),%r8d
354d(3): mov (%rax),%r14d
3550(3): mov %rax,%r12
3553(3): mov %r8d,%edi
3556(5): call 0xffffe58a(%rip)
355b(4): mov %r14d,(%r12)
355f(2): mov (%rbx),%eax
3561(5): movzx 0x20(%rsp),%ecx
3566(3): cmp $0x2,%eax
3569(6): jnz 0xfffffaaa(%rip)
356f(3): mov %ecx,%r15d
3572(5): jmp 0xfffff660(%rip)
3577(9): nop 0x0(%rax,%rax,1)
3580(7): lea 0x7b31(%rip),%rsi
3587(2): xor %edi,%edi
3589(5): call 0xffffe467(%rip)
358e(3): mov %rax,%r12
3591(5): jmp 0xfffff5ef(%rip)
3596(4): mov 0x20(%rsp),%edx
359a(3): mov %r11,%rsi
359d(3): mov %r14d,%edi
35a0(5): mov %r9d,0x38(%rsp)
35a5(5): mov %r10,0x30(%rsp)
35aa(4): mov %cl,0x2c(%rsp)
35ae(5): mov %r11,0x20(%rsp)
35b3(3): or $0x1,%edx
35b6(5): call 0xffffe53a(%rip)
35bb(2): test %eax,%eax
35bd(3): mov %eax,%r8d
35c0(5): mov 0x20(%rsp),%r11
35c5(5): movzx 0x2c(%rsp),%ecx
35ca(5): mov 0x30(%rsp),%r10
35cf(5): mov 0x38(%rsp),%r9d
35d4(6): jns 0xfffffb74(%rip)
35da(4): cmp $0xd,(%r10)
35de(6): jz 0xfffff9f4(%rip)
35e4(5): jmp 0xfffff4eb(%rip)
35e9(7): nop 0x0(%rax)
35f0(5): mov $0x4,%esi
35f5(5): mov $0x1,%edi
35fa(5): call 0x1c56(%rip)
35ff(5): mov 0x8(%rsp),%rdx
3604(2): xor %edi,%edi
3606(5): mov $0x4,%esi
360b(3): mov %rax,%r12
360e(5): call 0x1c42(%rip)
3613(7): lea 0x78b6(%rip),%rsi
361a(3): mov %rax,%rbx
361d(2): xor %edi,%edi
361f(5): mov $0x5,%edx
3624(5): call 0xffffe3cc(%rip)
3629(3): mov %r12,%r8
362c(3): mov %rax,%rdx
362f(3): mov %rbx,%rcx
3632(2): xor %esi,%esi
3634(2): xor %edi,%edi
3636(2): xor %eax,%eax
3638(5): call 0xffffe608(%rip)
363d(5): jmp 0xfffff6dd(%rip)
3642(4): cmp $0xff,%r9d
3646(2): jz 0x10(%rip)
3648(8): cmp 0xf0(%rsp),%r9d
3650(6): jnz 0xfffffeea(%rip)
3656(4): mov 0x18(%rsp),%edx
365a(4): mov 0x10(%rsp),%esi
365e(3): mov %r8d,%edi
3661(4): mov %cl,0x2c(%rsp)
3665(5): mov %r8d,0x20(%rsp)
366a(5): call 0xffffe606(%rip)
366f(2): test %eax,%eax
3671(5): mov 0x20(%rsp),%r8d
3676(5): movzx 0x2c(%rsp),%ecx
367b(6): jnz 0xfffffda5(%rip)
3681(3): mov %r8d,%edi
3684(4): mov %cl,0x20(%rsp)
3688(5): call 0xffffe458(%rip)
368d(2): test %eax,%eax
368f(6): jnz 0xfffff440(%rip)
3695(5): jmp 0xfffffeca(%rip)
369a(5): call 0xffffe3a6(%rip)
369f(2): mov (%rbx),%eax
36a1(6): mov $0x1,%r15d
36a7(3): cmp $0x2,%eax
36aa(6): jz 0xfffff528(%rip)
36b0(2): test %eax,%eax
36b2(6): jnz 0xfffff520(%rip)
36b8(3): test %r13,%r13
36bb(2): jnz 0x15(%rip)
36bd(6): mov $0x1,%r15d
36c3(8): mov $0x4,0x2c(%rsp)
36cb(5): jmp 0xfffff6c4(%rip)
36d0(8): mov $0x4,0x2c(%rsp)
36d8(6): mov $0x1,%r15d
36de(5): jmp 0xfffff41d(%rip)

"chown_files" :
36f0(2): push %r15
36f2(2): push %r14
36f4(3): mov %ecx,%r15d
36f7(2): push %r13
36f9(2): push %r12
36fb(3): mov %r8d,%r13d
36fe(1): push %rbp
36ff(1): push %rbx
3700(3): mov %r9d,%r14d
3703(4): sub $0x18,%rsp
3707(4): cmp $0xff,%r8d
370b(4): mov %edx,0xc(%rsp)
370f(5): mov 0x50(%rsp),%r12
3714(2): jnz 0x14(%rip)
3716(4): cmp $0xff,%r9d
371a(2): jnz 0xe(%rip)
371c(6): cmp $0x0,0x10(%r12)
3722(6): jz 0xae(%rip)
3728(2): xor %edx,%edx
372a(5): mov $0x1,%ebx
372f(5): call 0x2861(%rip)
3734(3): mov %rax,%rbp
3737(2): jmp 0x2b(%rip)
3739(7): nop 0x0(%rax)
3740(4): sub $0x8,%rsp
3744(3): mov %r14d,%r9d
3747(3): mov %r13d,%r8d
374a(2): push %r12
374c(4): mov 0x1c(%rsp),%edx
3750(3): mov %r15d,%ecx
3753(3): mov %rax,%rsi
3756(3): mov %rbp,%rdi
3759(5): call 0xfffff207(%rip)
375e(2): and %eax,%ebx
3760(1): pop %rax
3761(1): pop %rdx
3762(3): mov %rbp,%rdi
3765(5): call 0x47eb(%rip)
376a(3): test %rax,%rax
376d(2): jnz 0xffffffd3(%rip)
376f(5): call 0xffffe1c1(%rip)
3774(2): mov (%rax),%ecx
3776(3): mov %rax,%r13
3779(2): test %ecx,%ecx
377b(2): jz 0xe(%rip)
377d(6): movzx 0x11(%r12),%ebx
3783(2): test %bl,%bl
3785(2): jz 0x63(%rip)
3787(2): xor %ebx,%ebx
3789(3): mov %rbp,%rdi
378c(5): call 0x4634(%rip)
3791(2): test %eax,%eax
3793(2): jz 0x27(%rip)
3795(7): lea 0x76ed(%rip),%rsi
379c(5): mov $0x5,%edx
37a1(2): xor %edi,%edi
37a3(2): xor %ebx,%ebx
37a5(5): call 0xffffe24b(%rip)
37aa(4): mov 0x0(%r13),%esi
37ae(3): mov %rax,%rdx
37b1(2): xor %edi,%edi
37b3(2): xor %eax,%eax
37b5(5): call 0xffffe48b(%rip)
37ba(4): add $0x18,%rsp
37be(2): mov %ebx,%eax
37c0(1): pop %rbx
37c1(1): pop %rbp
37c2(2): pop %r12
37c4(2): pop %r13
37c6(2): pop %r14
37c8(2): pop %r15
37ca(1): ret near (%rsp)
37cb(5): nop 0x0(%rax,%rax,1)
37d0(2): mov %esi,%eax
37d2(3): or $0x8,%eax
37d5(5): cmp $0x2,(%r12)
37da(3): cmove %eax,%esi
37dd(5): jmp 0xffffff4b(%rip)
37e2(6): nop 0x0(%rax,%rax,1)
37e8(7): lea 0x768a(%rip),%rsi
37ef(2): xor %edi,%edi
37f1(5): mov $0x5,%edx
37f6(5): call 0xffffe1fa(%rip)
37fb(4): mov 0x0(%r13),%esi
37ff(3): mov %rax,%rdx
3802(2): xor %edi,%edi
3804(2): xor %eax,%eax
3806(5): call 0xffffe43a(%rip)
380b(5): jmp 0xffffff7e(%rip)

"close_stdout_set_file_name" :
3810(7): mov %rdi,0x20a8d9(%rip)
3817(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3820(7): mov %dil,0x20a8c1(%rip)
3827(1): ret near (%rsp)

"close_stdout" :
3830(1): push %rbp
3831(1): push %rbx
3832(4): sub $0x8,%rsp
3836(7): mov 0x20a84b(%rip),%rdi
383d(5): call 0x50a3(%rip)
3842(2): test %eax,%eax
3844(2): jz 0x18(%rip)
3846(5): call 0xffffe0ea(%rip)
384b(7): cmp $0x0,0x20a896(%rip)
3852(3): mov %rax,%rbx
3855(2): jz 0x1e(%rip)
3857(3): cmp $0x20,(%rax)
385a(2): jnz 0x19(%rip)
385c(7): mov 0x20a85d(%rip),%rdi
3863(5): call 0x507d(%rip)
3868(2): test %eax,%eax
386a(2): jnz 0x48(%rip)
386c(4): add $0x8,%rsp
3870(1): pop %rbx
3871(1): pop %rbp
3872(1): ret near (%rsp)
3873(7): lea 0x793f(%rip),%rsi
387a(2): xor %edi,%edi
387c(5): mov $0x5,%edx
3881(5): call 0xffffe16f(%rip)
3886(7): mov 0x20a863(%rip),%rdi
388d(3): mov %rax,%rbp
3890(3): test %rdi,%rdi
3893(2): jz 0x2a(%rip)
3895(5): call 0x1bab(%rip)
389a(2): mov (%rbx),%esi
389c(7): lea 0x7922(%rip),%rdx
38a3(3): mov %rax,%rcx
38a6(3): mov %rbp,%r8
38a9(2): xor %edi,%edi
38ab(2): xor %eax,%eax
38ad(5): call 0xffffe393(%rip)
38b2(6): mov 0x20a760(%rip),%edi
38b8(5): call 0xffffe098(%rip)
38bd(2): mov (%rbx),%esi
38bf(7): lea 0x6c7d(%rip),%rdx
38c6(3): mov %rax,%rcx
38c9(2): xor %edi,%edi
38cb(2): xor %eax,%eax
38cd(5): call 0xffffe373(%rip)
38d2(2): jmp 0xffffffe0(%rip)

"umaxtostr" :
38e0(4): lea 0x14(%rsi),%rcx
38e4(4): mov $0x0,0x14(%rsi)
38e8(a): mov $0x-3689348814741910323,%rsi
38f2(6): nop 0x0(%rax,%rax,1)
38f8(3): mov %rdi,%rax
38fb(4): sub $0x1,%rcx
38ff(3): mul %rax,%rsi,%rdx
3902(4): shr $0x3,%rdx
3906(4): lea 0x0(%rdx,%rdx,4),%rax
390a(3): add %rax,%rax
390d(3): sub %rax,%rdi
3910(3): add $0x30,%edi
3913(3): test %rdx,%rdx
3916(3): mov %dil,(%rcx)
3919(3): mov %rdx,%rdi
391c(2): jnz 0xffffffdc(%rip)
391e(3): mov %rcx,%rax
3921(1): ret near (%rsp)

"set_program_name" :
3930(3): test %rdi,%rdi
3933(1): push %rbx
3934(2): jz 0x79(%rip)
3936(5): mov $0x2f,%esi
393b(3): mov %rdi,%rbx
393e(5): call 0xffffe162(%rip)
3943(3): test %rax,%rax
3946(2): jz 0x57(%rip)
3948(4): lea 0x1(%rax),%r8
394c(3): mov %r8,%rdx
394f(3): sub %rbx,%rdx
3952(4): cmp $0x6,%rdx
3956(2): jle 0x47(%rip)
3958(4): lea 0xfffffffa(%rax),%rsi
395c(7): lea 0x78a5(%rip),%rdi
3963(5): mov $0x7,%ecx
3968(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
396a(3): setnbe %dl
396d(3): sbb $0x0,%dl
3970(2): test %dl,%dl
3972(2): jnz 0x2b(%rip)
3974(7): lea 0x7895(%rip),%rdi
397b(5): mov $0x3,%ecx
3980(3): mov %r8,%rsi
3983(3): mov %r8,%rbx
3986(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3988(3): setnbe %dl
398b(3): sbb $0x0,%dl
398e(2): test %dl,%dl
3990(2): jnz 0xd(%rip)
3992(4): lea 0x4(%rax),%rbx
3996(7): mov %rbx,0x20a6e3(%rip)
399d(7): mov %rbx,0x20a754(%rip)
39a4(7): mov %rbx,0x20a6f5(%rip)
39ab(1): pop %rbx
39ac(1): ret near (%rsp)
39ad(7): mov 0x20a70c(%rip),%rcx
39b4(7): lea 0x7815(%rip),%rdi
39bb(5): mov $0x37,%edx
39c0(5): mov $0x1,%esi
39c5(5): call 0xffffe31b(%rip)
39ca(5): call 0xffffdf56(%rip)

"gettext_quote.part.1" :
39d0(1): push %rbp
39d1(1): push %rbx
39d2(3): mov %rdi,%rbp
39d5(2): mov %esi,%ebx
39d7(4): sub $0x8,%rsp
39db(5): call 0x6485(%rip)
39e0(3): movzx (%rax),%edx
39e3(3): and $0xdf,%edx
39e6(3): cmp $0x55,%dl
39e9(2): jz 0x77(%rip)
39eb(3): cmp $0x47,%dl
39ee(2): jz 0x22(%rip)
39f0(7): lea 0x782c(%rip),%rax
39f7(7): lea 0x7827(%rip),%rdx
39fe(3): cmp $0x9,%ebx
3a01(4): cmovne %rdx,%rax
3a05(4): add $0x8,%rsp
3a09(1): pop %rbx
3a0a(1): pop %rbp
3a0b(1): ret near (%rsp)
3a0c(4): nop 0x0(%rax)
3a10(4): movzx 0x1(%rax),%edx
3a14(3): and $0xdf,%edx
3a17(3): cmp $0x42,%dl
3a1a(2): jnz 0xffffffd6(%rip)
3a1c(4): cmp $0x31,0x2(%rax)
3a20(2): jnz 0xffffffd0(%rip)
3a22(4): cmp $0x38,0x3(%rax)
3a26(2): jnz 0xffffffca(%rip)
3a28(4): cmp $0x30,0x4(%rax)
3a2c(2): jnz 0xffffffc4(%rip)
3a2e(4): cmp $0x33,0x5(%rax)
3a32(2): jnz 0xffffffbe(%rip)
3a34(4): cmp $0x30,0x6(%rax)
3a38(2): jnz 0xffffffb8(%rip)
3a3a(4): cmp $0x0,0x7(%rax)
3a3e(2): jnz 0xffffffb2(%rip)
3a40(4): cmp $0x60,0x0(%rbp)
3a44(7): lea 0x77d1(%rip),%rax
3a4b(7): lea 0x77ce(%rip),%rdx
3a52(4): cmovne %rdx,%rax
3a56(4): add $0x8,%rsp
3a5a(1): pop %rbx
3a5b(1): pop %rbp
3a5c(1): ret near (%rsp)
3a5d(3): nop (%rax)
3a60(4): movzx 0x1(%rax),%edx
3a64(3): and $0xdf,%edx
3a67(3): cmp $0x54,%dl
3a6a(2): jnz 0xffffff86(%rip)
3a6c(4): movzx 0x2(%rax),%edx
3a70(3): and $0xdf,%edx
3a73(3): cmp $0x46,%dl
3a76(6): jnz 0xffffff7a(%rip)
3a7c(4): cmp $0x2d,0x3(%rax)
3a80(6): jnz 0xffffff70(%rip)
3a86(4): cmp $0x38,0x4(%rax)
3a8a(6): jnz 0xffffff66(%rip)
3a90(4): cmp $0x0,0x5(%rax)
3a94(6): jnz 0xffffff5c(%rip)
3a9a(4): cmp $0x60,0x0(%rbp)
3a9e(7): lea 0x776f(%rip),%rax
3aa5(7): lea 0x776c(%rip),%rdx
3aac(4): cmovne %rdx,%rax
3ab0(4): add $0x8,%rsp
3ab4(1): pop %rbx
3ab5(1): pop %rbp
3ab6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3ac0(2): push %r15
3ac2(2): push %r14
3ac4(3): mov %r8d,%r15d
3ac7(2): push %r13
3ac9(2): push %r12
3acb(3): mov %rdi,%r14
3ace(1): push %rbp
3acf(1): push %rbx
3ad0(3): mov %r9d,%ebx
3ad3(3): mov %rsi,%r13
3ad6(3): mov %rcx,%rbp
3ad9(3): and $0x2,%ebx
3adc(7): sub $0xb8,%rsp
3ae3(8): mov 0xf0(%rsp),%rax
3aeb(5): mov %rdx,0x10(%rsp)
3af0(5): mov %r8d,0x8(%rsp)
3af5(5): mov %r9d,0x78(%rsp)
3afa(5): mov %rax,0x20(%rsp)
3aff(8): mov 0xf8(%rsp),%rax
3b07(5): mov %rax,0x68(%rsp)
3b0c(8): mov 0x100(%rsp),%rax
3b14(5): mov %rax,0x60(%rsp)
3b19(9): mov $0x28,%rax
3b22(8): mov %rax,0xa8(%rsp)
3b2a(2): xor %eax,%eax
3b2c(5): call 0xffffded4(%rip)
3b31(4): cmp $0xa,%r15d
3b35(5): mov %rax,0x58(%rsp)
3b3a(6): jnbe 0x11b5(%rip)
3b40(7): lea 0x7739(%rip),%rcx
3b47(3): mov %r15d,%edx
3b4a(4): movsxd 0x0(%rcx,%rdx,4),%rax
3b4e(3): add %rcx,%rax
3b51(2): jmp %rax
3b53(5): mov $0x1,0xe(%rsp)
3b58(5): mov $0x0,0x7c(%rsp)
3b5d(3): xor %r12d,%r12d
3b60(9): mov $0x0,0x50(%rsp)
3b69(5): mov $0x1,0xf(%rsp)
3b6e(5): mov $0x0,0xd(%rsp)
3b73(7): lea 0x76ab(%rip),%rax
3b7a(9): mov $0x1,0x18(%rsp)
3b83(3): xor %r15d,%r15d
3b86(8): mov $0x2,0x8(%rsp)
3b8e(5): mov %rax,0x48(%rsp)
3b93(3): xor %r11d,%r11d
3b96(3): mov %rbp,%rax
3b99(3): mov %r12d,%r8d
3b9c(3): mov %r11,%rbp
3b9f(3): mov %rax,%r11
3ba2(6): nop 0x0(%rax,%rax,1)
3ba8(3): cmp %rbp,%r11
3bab(4): setnz %r12b
3baf(4): cmp $0xffffffff,%r11
3bb3(2): jnz 0xf(%rip)
3bb5(5): mov 0x10(%rsp),%rax
3bba(4): cmp $0x0,0x0(%rax,%rbp,1)
3bbe(4): setnz %r12b
3bc2(3): test %r12b,%r12b
3bc5(6): jz 0x65b(%rip)
3bcb(5): cmp $0x2,0x8(%rsp)
3bd0(5): mov 0x10(%rsp),%rdi
3bd5(4): lea 0x0(%rdi,%rbp,1),%r9
3bd9(3): setnz %al
3bdc(4): and 0xd(%rsp),%al
3be0(3): mov %eax,%r10d
3be3(6): jz 0xad(%rip)
3be9(5): mov 0x18(%rsp),%rax
3bee(3): test %rax,%rax
3bf1(6): jz 0x42f(%rip)
3bf7(4): cmp $0xffffffff,%r11
3bfb(5): lea 0x0(%rbp,%rax,1),%rbx
3c00(2): jnz 0x30(%rip)
3c02(4): cmp $0x1,%rax
3c06(2): jbe 0x2a(%rip)
3c08(5): mov %r8b,0x38(%rsp)
3c0d(5): mov %r10b,0x30(%rsp)
3c12(5): mov %r9,0x28(%rsp)
3c17(5): call 0xffffddf9(%rip)
3c1c(6): movzx 0x38(%rsp),%r8d
3c22(6): movzx 0x30(%rsp),%r10d
3c28(3): mov %rax,%r11
3c2b(5): mov 0x28(%rsp),%r9
3c30(3): cmp %r11,%rbx
3c33(5): mov %r10b,0x28(%rsp)
3c38(6): jnbe 0x5b8(%rip)
3c3e(5): mov 0x18(%rsp),%rdx
3c43(5): mov 0x48(%rsp),%rsi
3c48(3): mov %r9,%rdi
3c4b(5): mov %r11,0x40(%rsp)
3c50(5): mov %r8b,0x38(%rsp)
3c55(5): mov %r9,0x30(%rsp)
3c5a(5): call 0xffffdeb6(%rip)
3c5f(2): test %eax,%eax
3c61(5): mov 0x30(%rsp),%r9
3c66(6): movzx 0x38(%rsp),%r8d
3c6c(5): mov 0x40(%rsp),%r11
3c71(6): jnz 0x57f(%rip)
3c77(5): cmp $0x0,0xf(%rsp)
3c7c(6): movzx 0x28(%rsp),%r10d
3c82(6): jnz 0xf83(%rip)
3c88(8): nop 0x0(%rax,%rax,1)
3c90(4): movzx (%r9),%ebx
3c94(3): cmp $0x7e,%bl
3c97(6): jnbe 0x321(%rip)
3c9d(7): lea 0x7608(%rip),%rcx
3ca4(3): movzx %bl,%edx
3ca7(4): movsxd 0x0(%rcx,%rdx,4),%rax
3cab(3): add %rcx,%rax
3cae(2): jmp %rax
3cb0(3): xor %r10d,%r10d
3cb3(4): cmp $0x1,%r11
3cb7(3): setnz %al
3cba(4): cmp $0xffffffff,%r11
3cbe(2): jnz 0xe(%rip)
3cc0(5): mov 0x10(%rsp),%rax
3cc5(4): cmp $0x0,0x1(%rax)
3cc9(3): setnz %al
3ccc(5): cmp $0x2,0x8(%rsp)
3cd1(3): setz %dl
3cd4(2): test %al,%al
3cd6(6): jz 0x252(%rip)
3cdc(3): xor %r12d,%r12d
3cdf(2): xor %eax,%eax
3ce1(7): nop 0x0(%rax)
3ce8(5): cmp $0x1,0xd(%rsp)
3ced(6): jnz 0x115(%rip)
3cf3(2): test %dl,%dl
3cf5(6): jnz 0x10d(%rip)
3cfb(5): mov 0x20(%rsp),%rsi
3d00(3): test %rsi,%rsi
3d03(2): jz 0x16(%rip)
3d05(2): mov %ebx,%edx
3d07(3): shr $0x5,%dl
3d0a(3): movzx %dl,%edx
3d0d(3): mov 0x0(%rsi,%rdx,4),%edx
3d10(3): bt %ebx,%edx
3d13(6): jb 0x150(%rip)
3d19(3): test %r10b,%r10b
3d1c(6): jnz 0x147(%rip)
3d22(3): xor $0x1,%eax
3d25(4): add $0x1,%rbp
3d29(3): and %r8d,%eax
3d2c(2): test %al,%al
3d2e(2): jz 0x22(%rip)
3d30(3): cmp %r15,%r13
3d33(2): jbe 0x7(%rip)
3d35(5): mov $0x27,0x0(%r14,%r15,1)
3d3a(4): lea 0x1(%r15),%rax
3d3e(3): cmp %rax,%r13
3d41(2): jbe 0x8(%rip)
3d43(6): mov $0x27,0x1(%r14,%r15,1)
3d49(4): add $0x2,%r15
3d4d(3): xor %r8d,%r8d
3d50(3): cmp %r13,%r15
3d53(2): jnb 0x6(%rip)
3d55(4): mov %bl,0x0(%r14,%r15,1)
3d59(5): movzx 0xe(%rsp),%edi
3d5e(4): add $0x1,%r15
3d62(5): mov $0x0,%eax
3d67(3): test %r12b,%r12b
3d6a(3): cmove %eax,%edi
3d6d(5): mov %dil,0xe(%rsp)
3d72(5): jmp 0xfffffe36(%rip)
3d77(9): nop 0x0(%rax,%rax,1)
3d80(3): xor %r10d,%r10d
3d83(4): mov 0x8(%rsp),%eax
3d87(3): cmp $0x2,%eax
3d8a(6): jz 0x5be(%rip)
3d90(3): cmp $0x5,%eax
3d93(6): jz 0x575(%rip)
3d99(3): cmp $0x2,%eax
3d9c(5): mov $0x3f,%ebx
3da1(3): setz %dl
3da4(3): xor %r12d,%r12d
3da7(2): xor %eax,%eax
3da9(5): jmp 0xffffff3f(%rip)
3dae(2): nop 
3db0(3): xor %r10d,%r10d
3db3(5): cmp $0x2,0x8(%rsp)
3db8(6): jz 0x508(%rip)
3dbe(5): mov %r12b,0x7c(%rsp)
3dc3(2): xor %edx,%edx
3dc5(2): xor %eax,%eax
3dc7(5): mov $0x27,%ebx
3dcc(5): jmp 0xffffff1c(%rip)
3dd1(7): nop 0x0(%rax)
3dd8(5): mov $0x9,%edx
3ddd(5): mov $0x74,%ebx
3de2(5): cmp $0x2,0x8(%rsp)
3de7(3): setz %al
3dea(4): and 0xf(%rsp),%al
3dee(6): jnz 0x150(%rip)
3df4(5): cmp $0x0,0xd(%rsp)
3df9(2): jnz 0x67(%rip)
3dfb(2): mov %edx,%ebx
3dfd(3): xor %r12d,%r12d
3e00(2): xor %eax,%eax
3e02(5): cmp $0x0,0xf(%rsp)
3e07(6): jnz 0xfffffef4(%rip)
3e0d(5): jmp 0xffffff0c(%rip)
3e12(6): nop 0x0(%rax,%rax,1)
3e18(5): mov $0x8,%edx
3e1d(5): mov $0x62,%ebx
3e22(2): jmp 0xffffffd2(%rip)
3e24(4): nop 0x0(%rax)
3e28(5): cmp $0x2,0x8(%rsp)
3e2d(6): jz 0x3d3(%rip)
3e33(5): cmp $0x0,0xd(%rsp)
3e38(6): jz 0x218(%rip)
3e3e(5): cmp $0x0,0xf(%rsp)
3e43(6): jz 0x20d(%rip)
3e49(6): cmp $0x0,0x18(%rsp)
3e4f(6): jnz 0x3bc(%rip)
3e55(5): mov $0x5c,%ebx
3e5a(6): nop 0x0(%rax,%rax,1)
3e60(3): xor %r12d,%r12d
3e63(5): cmp $0x2,0x8(%rsp)
3e68(3): setz %dl
3e6b(5): cmp $0x0,0xf(%rsp)
3e70(2): mov %edx,%eax
3e72(6): jnz 0x856(%rip)
3e78(3): mov %r8d,%eax
3e7b(3): xor $0x1,%eax
3e7e(2): and %dl,%al
3e80(2): jz 0x31(%rip)
3e82(3): cmp %r15,%r13
3e85(2): jbe 0x7(%rip)
3e87(5): mov $0x27,0x0(%r14,%r15,1)
3e8c(4): lea 0x1(%r15),%rdx
3e90(3): cmp %rdx,%r13
3e93(2): jbe 0x8(%rip)
3e95(6): mov $0x24,0x1(%r14,%r15,1)
3e9b(4): lea 0x2(%r15),%rdx
3e9f(3): cmp %rdx,%r13
3ea2(2): jbe 0x8(%rip)
3ea4(6): mov $0x27,0x2(%r14,%r15,1)
3eaa(4): add $0x3,%r15
3eae(3): mov %eax,%r8d
3eb1(3): cmp %r15,%r13
3eb4(2): jbe 0x7(%rip)
3eb6(5): mov $0x5c,0x0(%r14,%r15,1)
3ebb(4): add $0x1,%r15
3ebf(4): add $0x1,%rbp
3ec3(5): jmp 0xfffffe8d(%rip)
3ec8(8): nop 0x0(%rax,%rax,1)
3ed0(5): cmp $0x0,0xd(%rsp)
3ed5(6): jnz 0x1ce(%rip)
3edb(2): xor %edx,%edx
3edd(5): test $0x1,0x78(%rsp)
3ee2(6): jz 0xffffff19(%rip)
3ee8(4): add $0x1,%rbp
3eec(5): jmp 0xfffffcbc(%rip)
3ef1(7): nop 0x0(%rax)
3ef8(5): cmp $0x2,0x8(%rsp)
3efd(3): setz %dl
3f00(2): xor %eax,%eax
3f02(5): jmp 0xfffffde6(%rip)
3f07(9): nop 0x0(%rax,%rax,1)
3f10(5): mov $0x7,%edx
3f15(5): mov $0x61,%ebx
3f1a(5): jmp 0xfffffeda(%rip)
3f1f(1): nop 
3f20(5): cmp $0x2,0x8(%rsp)
3f25(3): setz %dl
3f28(3): test %rbp,%rbp
3f2b(6): jnz 0xfffffdb1(%rip)
3f31(5): movzx 0xf(%rsp),%eax
3f36(2): and %dl,%al
3f38(6): jz 0xfffffdb0(%rip)
3f3e(3): mov %r11,%rbp
3f41(8): mov $0x2,0x8(%rsp)
3f49(5): jmp 0x700(%rip)
3f4e(2): nop 
3f50(5): cmp $0x2,0x8(%rsp)
3f55(3): setz %dl
3f58(3): xor %r12d,%r12d
3f5b(2): jmp 0xffffffd6(%rip)
3f5d(3): nop (%rax)
3f60(5): cmp $0x2,0x8(%rsp)
3f65(5): mov $0x20,%ebx
3f6a(3): setz %dl
3f6d(2): jmp 0xffffffc4(%rip)
3f6f(1): nop 
3f70(5): mov $0xd,%edx
3f75(5): mov $0x72,%ebx
3f7a(5): jmp 0xfffffe68(%rip)
3f7f(1): nop 
3f80(5): mov $0xc,%edx
3f85(5): mov $0x66,%ebx
3f8a(5): jmp 0xfffffe6a(%rip)
3f8f(1): nop 
3f90(5): mov $0xb,%edx
3f95(5): mov $0x76,%ebx
3f9a(5): jmp 0xfffffe5a(%rip)
3f9f(1): nop 
3fa0(5): mov $0xa,%edx
3fa5(5): mov $0x6e,%ebx
3faa(5): jmp 0xfffffe38(%rip)
3faf(1): nop 
3fb0(3): xor %r10d,%r10d
3fb3(5): nop 0x0(%rax,%rax,1)
3fb8(6): cmp $0x1,0x58(%rsp)
3fbe(6): jnz 0x3aa(%rip)
3fc4(5): mov %r11,0x38(%rsp)
3fc9(5): mov %r8b,0x30(%rsp)
3fce(5): mov %r10b,0x28(%rsp)
3fd3(5): call 0xffffdd4d(%rip)
3fd8(3): mov (%rax),%rcx
3fdb(3): movzx %bl,%edx
3fde(6): movzx 0x28(%rsp),%r10d
3fe4(6): movzx 0x30(%rsp),%r8d
3fea(5): mov 0x38(%rsp),%r11
3fef(5): mov $0x1,%edi
3ff4(4): movzx 0x0(%rcx,%rdx,2),%eax
3ff8(4): and $0x4000,%ax
3ffc(4): setnz %r12b
4000(3): setz %al
4003(4): and 0xd(%rsp),%al
4007(2): test %al,%al
4009(6): jnz 0x998(%rip)
400f(5): cmp $0x2,0x8(%rsp)
4014(3): setz %dl
4017(5): jmp 0xfffffcd1(%rip)
401c(4): nop 0x0(%rax)
4020(4): movzx (%r9),%ebx
4024(3): cmp $0x7e,%bl
4027(2): jnbe 0xffffff89(%rip)
4029(7): lea 0x7478(%rip),%rcx
4030(3): movzx %bl,%edx
4033(4): movsxd 0x0(%rcx,%rdx,4),%rax
4037(3): add %rcx,%rax
403a(2): jmp %rax
403c(4): nop 0x0(%rax)
4040(3): xor %r10d,%r10d
4043(5): cmp $0x0,0xd(%rsp)
4048(6): jnz 0xfffffdf6(%rip)
404e(2): nop 
4050(5): mov $0x5c,%edx
4055(5): mov $0x5c,%ebx
405a(5): jmp 0xfffffd9a(%rip)
405f(1): nop 
4060(5): mov $0xc,%edx
4065(3): xor %r10d,%r10d
4068(5): mov $0x66,%ebx
406d(5): jmp 0xfffffd87(%rip)
4072(6): nop 0x0(%rax,%rax,1)
4078(5): mov $0xa,%edx
407d(3): xor %r10d,%r10d
4080(5): mov $0x6e,%ebx
4085(5): jmp 0xfffffd5d(%rip)
408a(6): nop 0x0(%rax,%rax,1)
4090(5): mov $0x61,%ebx
4095(5): jmp 0xfffffdcb(%rip)
409a(6): nop 0x0(%rax,%rax,1)
40a0(3): xor %r10d,%r10d
40a3(5): cmp $0x2,0x8(%rsp)
40a8(3): setz %dl
40ab(5): cmp $0x0,0xf(%rsp)
40b0(6): jnz 0xb9a(%rip)
40b6(3): mov %r8d,%eax
40b9(3): mov %r15,%rcx
40bc(3): xor $0x1,%eax
40bf(2): and %dl,%al
40c1(2): jz 0x2f(%rip)
40c3(3): cmp %r15,%r13
40c6(2): jbe 0x7(%rip)
40c8(5): mov $0x27,0x0(%r14,%r15,1)
40cd(4): lea 0x1(%r15),%rcx
40d1(3): cmp %rcx,%r13
40d4(2): jbe 0x8(%rip)
40d6(6): mov $0x24,0x1(%r14,%r15,1)
40dc(4): lea 0x2(%r15),%rcx
40e0(3): cmp %rcx,%r13
40e3(6): jnbe 0x636(%rip)
40e9(4): lea 0x3(%r15),%rcx
40ed(3): mov %eax,%r8d
40f0(3): cmp %rcx,%r13
40f3(2): jbe 0x7(%rip)
40f5(5): mov $0x5c,0x0(%r14,%rcx,1)
40fa(5): cmp $0x2,0x8(%rsp)
40ff(4): lea 0x1(%rcx),%r15
4103(6): jz 0x606(%rip)
4109(4): lea 0x1(%rbp),%rax
410d(3): cmp %r11,%rax
4110(2): jnb 0x1b(%rip)
4112(5): mov 0x10(%rsp),%rax
4117(5): movzx 0x1(%rax,%rbp,1),%eax
411c(4): mov %al,0x28(%rsp)
4120(3): sub $0x30,%eax
4123(2): cmp $0x9,%al
4125(6): jbe 0x834(%rip)
412b(3): mov %r12d,%eax
412e(5): mov $0x30,%ebx
4133(3): xor %r12d,%r12d
4136(5): jmp 0xfffffbb2(%rip)
413b(5): nop 0x0(%rax,%rax,1)
4140(5): cmp $0x2,0x8(%rsp)
4145(3): mov %r10d,%r12d
4148(3): setz %dl
414b(3): xor %r10d,%r10d
414e(2): xor %eax,%eax
4150(5): jmp 0xfffffb98(%rip)
4155(3): nop (%rax)
4158(5): cmp $0x2,0x8(%rsp)
415d(3): setz %dl
4160(3): xor %r10d,%r10d
4163(5): jmp 0xfffffdc5(%rip)
4168(8): nop 0x0(%rax,%rax,1)
4170(5): cmp $0x2,0x8(%rsp)
4175(3): setz %dl
4178(3): xor %r10d,%r10d
417b(3): xor %r12d,%r12d
417e(5): jmp 0xfffffdb3(%rip)
4183(5): nop 0x0(%rax,%rax,1)
4188(5): cmp $0x2,0x8(%rsp)
418d(3): mov %r10d,%r12d
4190(5): mov $0x20,%ebx
4195(3): setz %dl
4198(3): xor %r10d,%r10d
419b(5): jmp 0xfffffd96(%rip)
41a0(5): mov $0xd,%edx
41a5(3): xor %r10d,%r10d
41a8(5): mov $0x72,%ebx
41ad(5): jmp 0xfffffc35(%rip)
41b2(6): nop 0x0(%rax,%rax,1)
41b8(5): mov $0x76,%ebx
41bd(5): jmp 0xfffffca3(%rip)
41c2(6): nop 0x0(%rax,%rax,1)
41c8(5): mov $0x9,%edx
41cd(3): xor %r10d,%r10d
41d0(5): mov $0x74,%ebx
41d5(5): jmp 0xfffffc0d(%rip)
41da(6): nop 0x0(%rax,%rax,1)
41e0(5): mov $0x62,%ebx
41e5(5): jmp 0xfffffc7b(%rip)
41ea(6): nop 0x0(%rax,%rax,1)
41f0(3): xor %r10d,%r10d
41f3(5): jmp 0xfffffa9d(%rip)
41f8(8): nop 0x0(%rax,%rax,1)
4200(5): cmp $0x0,0xf(%rsp)
4205(6): jnz 0x96b(%rip)
420b(4): add $0x1,%rbp
420f(3): mov %r8d,%eax
4212(3): xor %r12d,%r12d
4215(5): mov $0x5c,%ebx
421a(5): jmp 0xfffffb12(%rip)
421f(1): nop 
4220(5): cmp $0x2,0x8(%rsp)
4225(5): movzx 0xf(%rsp),%ebx
422a(3): mov %r8d,%r12d
422d(3): mov %r11,%rbp
4230(3): setz %dl
4233(2): mov %ebx,%eax
4235(3): test %r15,%r15
4238(3): setz %cl
423b(2): and %edx,%eax
423d(2): and %cl,%al
423f(6): jnz 0xa67(%rip)
4245(2): mov %ebx,%eax
4247(3): xor $0x1,%eax
424a(2): and %al,%dl
424c(6): jz 0x970(%rip)
4252(5): cmp $0x0,0x7c(%rsp)
4257(6): jz 0x963(%rip)
425d(5): cmp $0x0,0xe(%rsp)
4262(6): jnz 0x9fb(%rip)
4268(3): test %r13,%r13
426b(3): setz %al
426e(6): cmp $0x0,0x50(%rsp)
4274(3): setnz %dl
4277(2): and %dl,%al
4279(6): jz 0xa23(%rip)
427f(5): mov 0x50(%rsp),%r13
4284(7): lea 0x6f9a(%rip),%rbx
428b(4): mov $0x27,(%r14)
428f(8): mov $0x2,0x8(%rsp)
4297(6): mov $0x1,%r15d
429d(9): mov $0x1,0x18(%rsp)
42a6(5): mov $0x0,0xf(%rsp)
42ab(5): mov %rbx,0x48(%rsp)
42b0(4): mov %al,0x7c(%rsp)
42b4(5): jmp 0xfffff8df(%rip)
42b9(7): nop 0x0(%rax)
42c0(5): cmp $0x0,0xf(%rsp)
42c5(6): jnz 0x8ab(%rip)
42cb(3): test %r13,%r13
42ce(6): jz 0x402(%rip)
42d4(2): xor %edx,%edx
42d6(6): cmp $0x0,0x50(%rsp)
42dc(6): jnz 0x3f4(%rip)
42e2(5): mov %r13,0x50(%rsp)
42e7(4): add $0x3,%r15
42eb(2): xor %eax,%eax
42ed(5): mov %r12b,0x7c(%rsp)
42f2(3): xor %r8d,%r8d
42f5(3): mov %rdx,%r13
42f8(5): mov $0x27,%ebx
42fd(5): jmp 0xfffffa1c(%rip)
4302(6): nop 0x0(%rax,%rax,1)
4308(5): test $0x4,0x78(%rsp)
430d(2): jz 0x23(%rip)
430f(4): lea 0x2(%rbp),%rcx
4313(3): cmp %r11,%rcx
4316(2): jnb 0x1a(%rip)
4318(5): mov 0x10(%rsp),%rax
431d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4322(6): jz 0x790(%rip)
4328(8): nop 0x0(%rax,%rax,1)
4330(2): xor %edx,%edx
4332(3): xor %r12d,%r12d
4335(2): xor %eax,%eax
4337(5): mov $0x3f,%ebx
433c(5): jmp 0xfffff9ac(%rip)
4341(7): nop 0x0(%rax)
4348(5): cmp $0x0,0xf(%rsp)
434d(6): jnz 0x823(%rip)
4353(3): xor %r12d,%r12d
4356(2): xor %eax,%eax
4358(5): mov $0x3f,%ebx
435d(5): jmp 0xfffff9bc(%rip)
4362(6): nop 0x0(%rax,%rax,1)
4368(8): lea 0xa0(%rsp),%rax
4370(4): cmp $0xffffffff,%r11
4374(c): mov $0x0,0xa0(%rsp)
4380(5): mov %rax,0x28(%rsp)
4385(2): jnz 0x2f(%rip)
4387(5): mov 0x10(%rsp),%rdi
438c(5): mov %r8b,0x40(%rsp)
4391(5): mov %r10b,0x38(%rsp)
4396(5): mov %r9,0x30(%rsp)
439b(5): call 0xffffd675(%rip)
43a0(6): movzx 0x40(%rsp),%r8d
43a6(6): movzx 0x38(%rsp),%r10d
43ac(3): mov %rax,%r11
43af(5): mov 0x30(%rsp),%r9
43b4(8): lea 0x9c(%rsp),%rax
43bc(2): xor %ecx,%ecx
43be(4): mov %bl,0x7e(%rsp)
43c2(5): mov %r8b,0x7d(%rsp)
43c7(3): mov %rcx,%rbx
43ca(8): mov %r9,0x88(%rsp)
43d2(5): mov %rax,0x38(%rsp)
43d7(5): mov %r10b,0x7f(%rsp)
43dc(8): mov %r15,0x80(%rsp)
43e4(5): mov %r14,0x40(%rsp)
43e9(5): mov %r13,0x70(%rsp)
43ee(5): mov %r11,0x30(%rsp)
43f3(5): mov 0x10(%rsp),%rax
43f8(5): lea 0x0(%rbp,%rbx,1),%r14
43fd(5): mov 0x30(%rsp),%rdx
4402(5): mov 0x28(%rsp),%rcx
4407(5): mov 0x38(%rsp),%rdi
440c(4): lea 0x0(%rax,%r14,1),%r13
4410(3): sub %r14,%rdx
4413(3): mov %r13,%rsi
4416(5): call 0x443a(%rip)
441b(3): test %rax,%rax
441e(3): mov %rax,%r15
4421(2): jz 0x50(%rip)
4423(4): cmp $0xffffffff,%rax
4427(6): jz 0x61e(%rip)
442d(4): cmp $0xfffffffe,%rax
4431(6): jz 0x5a0(%rip)
4437(5): cmp $0x2,0x8(%rsp)
443c(3): setz %al
443f(4): and 0xf(%rsp),%al
4443(6): jnz 0x19d(%rip)
4449(7): mov 0x9c(%rsp),%edi
4450(5): call 0xffffd8c0(%rip)
4455(5): mov 0x28(%rsp),%rdi
445a(2): test %eax,%eax
445c(5): mov $0x0,%eax
4461(4): cmove %eax,%r12d
4465(3): add %r15,%rbx
4468(5): call 0xffffd898(%rip)
446d(2): test %eax,%eax
446f(2): jz 0xffffff84(%rip)
4471(3): mov %r12d,%edx
4474(3): mov %rbx,%rdi
4477(6): movzx 0x7d(%rsp),%r8d
447d(3): xor $0x1,%edx
4480(5): movzx 0x7e(%rsp),%ebx
4485(6): movzx 0x7f(%rsp),%r10d
448b(4): and 0xd(%rsp),%dl
448f(8): mov 0x80(%rsp),%r15
4497(5): mov 0x40(%rsp),%r14
449c(5): mov 0x70(%rsp),%r13
44a1(5): mov 0x30(%rsp),%r11
44a6(4): cmp $0x1,%rdi
44aa(6): jbe 0x601(%rip)
44b0(3): mov %rdi,%rcx
44b3(2): xor %esi,%esi
44b5(6): movzx 0xf(%rsp),%r9d
44bb(3): add %rbp,%rcx
44be(5): mov 0x10(%rsp),%rdi
44c3(5): jmp 0xbb(%rip)
44c8(8): nop 0x0(%rax,%rax,1)
44d0(5): cmp $0x2,0x8(%rsp)
44d5(3): setz %al
44d8(3): test %r9b,%r9b
44db(6): jnz 0x4b5(%rip)
44e1(3): mov %r8d,%esi
44e4(3): xor $0x1,%esi
44e7(3): and %sil,%al
44ea(2): jz 0x31(%rip)
44ec(3): cmp %r15,%r13
44ef(2): jbe 0x7(%rip)
44f1(5): mov $0x27,0x0(%r14,%r15,1)
44f6(4): lea 0x1(%r15),%rsi
44fa(3): cmp %rsi,%r13
44fd(2): jbe 0x8(%rip)
44ff(6): mov $0x24,0x1(%r14,%r15,1)
4505(4): lea 0x2(%r15),%rsi
4509(3): cmp %rsi,%r13
450c(2): jbe 0x8(%rip)
450e(6): mov $0x27,0x2(%r14,%r15,1)
4514(4): add $0x3,%r15
4518(3): mov %eax,%r8d
451b(3): cmp %r15,%r13
451e(2): jbe 0x7(%rip)
4520(5): mov $0x5c,0x0(%r14,%r15,1)
4525(4): lea 0x1(%r15),%rax
4529(3): cmp %rax,%r13
452c(2): jbe 0xf(%rip)
452e(2): mov %ebx,%eax
4530(3): shr $0x6,%al
4533(3): add $0x30,%eax
4536(5): mov %al,0x1(%r14,%r15,1)
453b(4): lea 0x2(%r15),%rax
453f(3): cmp %rax,%r13
4542(2): jbe 0x12(%rip)
4544(2): mov %ebx,%eax
4546(3): shr $0x3,%al
4549(3): and $0x7,%eax
454c(3): add $0x30,%eax
454f(5): mov %al,0x2(%r14,%r15,1)
4554(3): and $0x7,%ebx
4557(4): add $0x1,%rbp
455b(4): add $0x3,%r15
455f(3): add $0x30,%ebx
4562(3): cmp %rcx,%rbp
4565(6): jnb 0xfffff7eb(%rip)
456b(2): mov %edx,%esi
456d(3): cmp %r15,%r13
4570(2): jbe 0x6(%rip)
4572(4): mov %bl,0x0(%r14,%r15,1)
4576(4): movzx 0x0(%rdi,%rbp,1),%ebx
457a(4): add $0x1,%r15
457e(2): test %dl,%dl
4580(6): jnz 0xffffff50(%rip)
4586(2): mov %esi,%eax
4588(3): xor $0x1,%eax
458b(3): and %r8d,%eax
458e(3): test %r10b,%r10b
4591(2): jz 0x10(%rip)
4593(3): cmp %r15,%r13
4596(2): jbe 0x7(%rip)
4598(5): mov $0x5c,0x0(%r14,%r15,1)
459d(4): add $0x1,%r15
45a1(4): add $0x1,%rbp
45a5(3): cmp %rcx,%rbp
45a8(6): jnb 0xfffff784(%rip)
45ae(2): test %al,%al
45b0(6): jz 0x3fe(%rip)
45b6(3): cmp %r15,%r13
45b9(2): jbe 0x7(%rip)
45bb(5): mov $0x27,0x0(%r14,%r15,1)
45c0(4): lea 0x1(%r15),%rax
45c4(3): cmp %rax,%r13
45c7(2): jbe 0x8(%rip)
45c9(6): mov $0x27,0x1(%r14,%r15,1)
45cf(4): add $0x2,%r15
45d3(3): xor %r10d,%r10d
45d6(3): xor %r8d,%r8d
45d9(2): jmp 0xffffff94(%rip)
45db(5): nop 0x0(%rax,%rax,1)
45e0(4): cmp $0x1,%r15
45e4(6): jz 0xfffffe65(%rip)
45ea(5): mov 0x10(%rsp),%rdi
45ef(4): lea 0x0(%rdi,%r15,1),%rcx
45f3(5): lea 0x1(%rdi,%r14,1),%rdx
45f8(4): lea 0x0(%rcx,%r14,1),%r8
45fc(2): jmp 0x11(%rip)
45fe(2): nop 
4600(4): add $0x1,%rdx
4604(3): cmp %rdx,%r8
4607(6): jz 0xfffffe42(%rip)
460d(3): movzx (%rdx),%ecx
4610(3): sub $0x5b,%ecx
4613(3): cmp $0x21,%cl
4616(2): jnbe 0xffffffea(%rip)
4618(5): mov $0x1,%esi
461d(3): shl/sal %cl,%rsi
4620(3): mov %rsi,%rcx
4623(a): mov $0x8589934635,%rsi
462d(3): test %rsi,%rcx
4630(2): jz 0xffffffd0(%rip)
4632(5): mov 0x40(%rsp),%r14
4637(5): mov 0x70(%rsp),%r13
463c(5): mov 0x30(%rsp),%rbp
4641(8): mov $0x2,0x8(%rsp)
4649(5): cmp $0x0,0xd(%rsp)
464e(2): jz 0x12(%rip)
4650(2): test %al,%al
4652(5): mov $0x4,%eax
4657(5): cmove 0x8(%rsp),%eax
465c(4): mov %eax,0x8(%rsp)
4660(4): sub $0x8,%rsp
4664(3): mov %rbp,%rcx
4667(3): mov %r13,%rsi
466a(4): push 0x68(%rsp)
466e(4): push 0x78(%rsp)
4672(3): mov %r14,%rdi
4675(2): push $0x0
4677(8): mov 0x98(%rsp),%r9d
467f(5): mov 0x28(%rsp),%r8d
4684(5): mov 0x30(%rsp),%rdx
4689(4): and $0xfd,%r9d
468d(5): call 0xfffff433(%rip)
4692(4): add $0x20,%rsp
4696(3): mov %rax,%r15
4699(8): mov 0xa8(%rsp),%rbx
46a1(9): xor $0x28,%rbx
46aa(3): mov %r15,%rax
46ad(6): jnz 0x606(%rip)
46b3(7): add $0xb8,%rsp
46ba(1): pop %rbx
46bb(1): pop %rbp
46bc(2): pop %r12
46be(2): pop %r13
46c0(2): pop %r14
46c2(2): pop %r15
46c4(1): ret near (%rsp)
46c5(3): nop (%rax)
46c8(3): mov %r11,%rbp
46cb(5): jmp 0xffffff7e(%rip)
46d0(3): cmp %r15,%r13
46d3(2): jbe 0x7(%rip)
46d5(5): mov $0x27,0x0(%r14,%r15,1)
46da(4): lea 0x1(%r15),%rax
46de(3): cmp %rax,%r13
46e1(2): jbe 0x8(%rip)
46e3(6): mov $0x5c,0x1(%r14,%r15,1)
46e9(4): lea 0x2(%r15),%rax
46ed(3): cmp %rax,%r13
46f0(6): jbe 0x5f2(%rip)
46f6(3): mov %r13,%rdx
46f9(6): mov $0x27,0x2(%r14,%r15,1)
46ff(5): mov 0x50(%rsp),%r13
4704(5): jmp 0xfffffbde(%rip)
4709(3): mov %r12d,%eax
470c(5): mov $0x30,%ebx
4711(3): xor %r12d,%r12d
4714(5): jmp 0xfffff605(%rip)
4719(6): mov $0x27,0x2(%r14,%r15,1)
471f(5): jmp 0xfffff9ca(%rip)
4724(2): test %ebx,%ebx
4726(6): jnz 0xfffff42d(%rip)
472c(5): mov $0x1,0xd(%rsp)
4731(3): test %r13,%r13
4734(6): jnz 0x596(%rip)
473a(7): lea 0x6ae4(%rip),%rax
4741(9): mov $0x0,0x50(%rsp)
474a(5): mov $0x1,0xe(%rsp)
474f(5): mov $0x0,0x7c(%rsp)
4754(3): xor %r12d,%r12d
4757(5): mov $0x0,0xf(%rsp)
475c(9): mov $0x1,0x18(%rsp)
4765(5): mov %rax,0x48(%rsp)
476a(6): mov $0x1,%r15d
4770(8): mov $0x2,0x8(%rsp)
4778(5): jmp 0xfffff41b(%rip)
477d(3): nop (%rax)
4780(2): test %ebx,%ebx
4782(6): jnz 0x3fb(%rip)
4788(3): test %r13,%r13
478b(6): jz 0x22b(%rip)
4791(4): mov $0x22,(%r14)
4795(5): mov $0x1,0xe(%rsp)
479a(3): xor %r12d,%r12d
479d(5): mov $0x0,0x7c(%rsp)
47a2(9): mov $0x0,0x50(%rsp)
47ab(7): lea 0x6a71(%rip),%rax
47b2(5): mov $0x0,0xf(%rsp)
47b7(5): mov $0x1,0xd(%rsp)
47bc(9): mov $0x1,0x18(%rsp)
47c5(6): mov $0x1,%r15d
47cb(5): mov %rax,0x48(%rsp)
47d0(5): jmp 0xfffff3c3(%rip)
47d5(7): lea 0x6a47(%rip),%rax
47dc(5): mov $0x1,0xe(%rsp)
47e1(5): mov $0x0,0x7c(%rsp)
47e6(3): xor %r12d,%r12d
47e9(9): mov $0x0,0x50(%rsp)
47f2(5): mov $0x1,0xf(%rsp)
47f7(5): mov $0x1,0xd(%rsp)
47fc(9): mov $0x1,0x18(%rsp)
4805(3): xor %r15d,%r15d
4808(5): mov %rax,0x48(%rsp)
480d(8): mov $0x5,0x8(%rsp)
4815(5): jmp 0xfffff37e(%rip)
481a(5): mov $0x1,0xe(%rsp)
481f(5): mov $0x0,0x7c(%rsp)
4824(3): xor %r12d,%r12d
4827(9): mov $0x0,0x50(%rsp)
4830(5): mov $0x0,0xf(%rsp)
4835(3): xor %r15d,%r15d
4838(5): mov $0x1,0xd(%rsp)
483d(9): mov $0x0,0x18(%rsp)
4846(9): mov $0x0,0x48(%rsp)
484f(5): jmp 0xfffff344(%rip)
4854(5): cmp $0xa,0x8(%rsp)
4859(2): jz 0x58(%rip)
485b(7): lea 0x69c5(%rip),%rsi
4862(2): xor %edi,%edi
4864(5): mov $0x5,%edx
4869(5): call 0xffffd187(%rip)
486e(3): mov %rax,%rcx
4871(5): mov %rax,0x68(%rsp)
4876(7): lea 0x69aa(%rip),%rax
487d(3): cmp %rax,%rcx
4880(6): jz 0x39e(%rip)
4886(7): lea 0x6998(%rip),%rsi
488d(2): xor %edi,%edi
488f(5): mov $0x5,%edx
4894(5): call 0xffffd15c(%rip)
4899(3): mov %rax,%rcx
489c(5): mov %rax,0x60(%rsp)
48a1(7): lea 0x697d(%rip),%rax
48a8(3): cmp %rax,%rcx
48ab(6): jz 0x389(%rip)
48b1(3): xor %r15d,%r15d
48b4(2): test %ebx,%ebx
48b6(6): jz 0x1c7(%rip)
48bc(2): test %ebx,%ebx
48be(5): mov 0x60(%rsp),%rbx
48c3(5): setnz 0xf(%rsp)
48c8(3): xor %r12d,%r12d
48cb(3): mov %rbx,%rdi
48ce(5): call 0xffffd142(%rip)
48d3(5): mov %rbx,0x48(%rsp)
48d8(5): mov %rax,0x18(%rsp)
48dd(5): mov $0x1,0xe(%rsp)
48e2(5): mov $0x0,0x7c(%rsp)
48e7(9): mov $0x0,0x50(%rsp)
48f0(5): mov $0x1,0xd(%rsp)
48f5(5): jmp 0xfffff29e(%rip)
48fa(5): mov $0x1,0xe(%rsp)
48ff(5): mov $0x0,0x7c(%rsp)
4904(3): xor %r12d,%r12d
4907(9): mov $0x0,0x50(%rsp)
4910(5): mov $0x0,0xf(%rsp)
4915(3): xor %r15d,%r15d
4918(5): mov $0x0,0xd(%rsp)
491d(9): mov $0x0,0x18(%rsp)
4926(9): mov $0x0,0x48(%rsp)
492f(5): jmp 0xfffff264(%rip)
4934(5): mov $0x1,0xe(%rsp)
4939(5): mov $0x0,0x7c(%rsp)
493e(3): xor %r12d,%r12d
4941(9): mov $0x0,0x50(%rsp)
494a(5): mov $0x1,0xf(%rsp)
494f(5): mov $0x1,0xd(%rsp)
4954(5): jmp 0xfffff21f(%rip)
4959(3): cmp %r15,%r13
495c(2): jbe 0x7(%rip)
495e(5): mov $0x30,0x0(%r14,%r15,1)
4963(4): lea 0x2(%rcx),%rax
4967(3): cmp %rax,%r13
496a(2): jbe 0x8(%rip)
496c(6): mov $0x30,0x2(%r14,%rcx,1)
4972(3): mov %r12d,%eax
4975(4): lea 0x3(%rcx),%r15
4979(3): xor %r12d,%r12d
497c(5): mov $0x30,%ebx
4981(5): jmp 0xfffff367(%rip)
4986(a): nop 0x0(%rax,%rax,1)
4990(5): movzx 0xf(%rsp),%ebx
4995(3): mov %r11,%rbp
4998(4): mov %bl,0xd(%rsp)
499c(5): jmp 0xfffffcad(%rip)
49a1(5): movzx 0xd(%rsp),%edx
49a6(3): xor %r12d,%r12d
49a9(5): jmp 0xfffffb07(%rip)
49ae(3): xor %r10d,%r10d
49b1(5): jmp 0xfffffbbc(%rip)
49b6(9): mov $0x0,0x50(%rsp)
49bf(5): mov $0x1,0xe(%rsp)
49c4(3): xor %r12d,%r12d
49c7(5): mov $0x0,0x7c(%rsp)
49cc(5): jmp 0xfffffddf(%rip)
49d1(5): mov 0x30(%rsp),%r11
49d6(3): mov %r14,%rsi
49d9(3): mov %r13,%rcx
49dc(3): mov %rbx,%rax
49df(3): mov %rbx,%rdi
49e2(6): movzx 0x7d(%rsp),%r8d
49e8(5): movzx 0x7e(%rsp),%ebx
49ed(8): mov 0x88(%rsp),%r9
49f5(3): cmp %r11,%rsi
49f8(6): movzx 0x7f(%rsp),%r10d
49fe(8): mov 0x80(%rsp),%r15
4a06(5): mov 0x40(%rsp),%r14
4a0b(5): mov 0x70(%rsp),%r13
4a10(2): jnb 0x28(%rip)
4a12(3): cmp $0x0,(%rcx)
4a15(2): jnz 0x12(%rip)
4a17(2): jmp 0x21(%rip)
4a19(7): nop 0x0(%rax)
4a20(5): cmp $0x0,0x0(%r9,%rax,1)
4a25(2): jz 0x10(%rip)
4a27(4): add $0x1,%rax
4a2b(5): lea 0x0(%rbp,%rax,1),%rdx
4a30(3): cmp %rdx,%r11
4a33(2): jnbe 0xffffffed(%rip)
4a35(3): mov %rax,%rdi
4a38(5): movzx 0xd(%rsp),%edx
4a3d(3): xor %r12d,%r12d
4a40(5): jmp 0xfffffa66(%rip)
4a45(3): mov %rbx,%rdi
4a48(6): movzx 0x7d(%rsp),%r8d
4a4e(5): movzx 0x7e(%rsp),%ebx
4a53(6): movzx 0x7f(%rsp),%r10d
4a59(8): mov 0x80(%rsp),%r15
4a61(3): xor %r12d,%r12d
4a64(5): mov 0x40(%rsp),%r14
4a69(5): mov 0x70(%rsp),%r13
4a6e(5): mov 0x30(%rsp),%r11
4a73(5): movzx 0xd(%rsp),%edx
4a78(5): jmp 0xfffffa2e(%rip)
4a7d(5): mov 0x68(%rsp),%rdx
4a82(3): movzx (%rdx),%eax
4a85(2): test %al,%al
4a87(6): jz 0xfffffe35(%rip)
4a8d(3): nop (%rax)
4a90(3): cmp %r15,%r13
4a93(2): jbe 0x6(%rip)
4a95(4): mov %al,0x0(%r14,%r15,1)
4a99(4): add $0x1,%r15
4a9d(5): movzx 0x0(%rdx,%r15,1),%eax
4aa2(2): test %al,%al
4aa4(2): jnz 0xffffffec(%rip)
4aa6(5): jmp 0xfffffe16(%rip)
4aab(2): mov %edx,%eax
4aad(5): jmp 0xfffff55a(%rip)
4ab2(4): movzx 0x0(%rax,%rcx,1),%ebx
4ab6(3): cmp $0x3e,%bl
4ab9(6): jnbe 0xfffff877(%rip)
4abf(a): mov $0x8070630310989004800,%rax
4ac9(4): bt %rbx,%rax
4acd(6): jnb 0xfffff863(%rip)
4ad3(5): cmp $0x0,0xf(%rsp)
4ad8(6): jnz 0x1ea(%rip)
4ade(3): cmp %r15,%r13
4ae1(2): jbe 0x7(%rip)
4ae3(5): mov $0x3f,0x0(%r14,%r15,1)
4ae8(4): lea 0x1(%r15),%rax
4aec(3): cmp %rax,%r13
4aef(2): jbe 0x8(%rip)
4af1(6): mov $0x22,0x1(%r14,%r15,1)
4af7(4): lea 0x2(%r15),%rax
4afb(3): cmp %rax,%r13
4afe(2): jbe 0x8(%rip)
4b00(6): mov $0x22,0x2(%r14,%r15,1)
4b06(4): lea 0x3(%r15),%rax
4b0a(3): cmp %rax,%r13
4b0d(2): jbe 0x8(%rip)
4b0f(6): mov $0x3f,0x3(%r14,%r15,1)
4b15(4): add $0x4,%r15
4b19(2): xor %edx,%edx
4b1b(3): xor %r12d,%r12d
4b1e(2): xor %eax,%eax
4b20(3): mov %rcx,%rbp
4b23(5): jmp 0xfffff1c5(%rip)
4b28(2): test %ebx,%ebx
4b2a(6): jz 0x18e(%rip)
4b30(7): lea 0x66ee(%rip),%rax
4b37(5): mov $0x1,0xe(%rsp)
4b3c(5): mov $0x0,0x7c(%rsp)
4b41(3): xor %r12d,%r12d
4b44(9): mov $0x0,0x50(%rsp)
4b4d(5): mov $0x1,0xf(%rsp)
4b52(5): mov $0x0,0xd(%rsp)
4b57(9): mov $0x1,0x18(%rsp)
4b60(3): xor %r15d,%r15d
4b63(5): mov %rax,0x48(%rsp)
4b68(5): jmp 0xfffff02b(%rip)
4b6d(3): nop (%rax)
4b70(3): mov %r11,%rbp
4b73(5): movzx 0xf(%rsp),%eax
4b78(5): jmp 0xfffffad1(%rip)
4b7d(7): lea 0x669f(%rip),%rax
4b84(5): mov $0x1,0xe(%rsp)
4b89(5): mov $0x0,0x7c(%rsp)
4b8e(3): xor %r12d,%r12d
4b91(9): mov $0x0,0x50(%rsp)
4b9a(5): mov $0x1,0xf(%rsp)
4b9f(5): mov $0x1,0xd(%rsp)
4ba4(9): mov $0x1,0x18(%rsp)
4bad(3): xor %r15d,%r15d
4bb0(5): mov %rax,0x48(%rsp)
4bb5(5): jmp 0xffffefde(%rip)
4bba(2): mov %edx,%eax
4bbc(5): mov 0x48(%rsp),%rbx
4bc1(3): test %rbx,%rbx
4bc4(2): jz 0x2e(%rip)
4bc6(2): test %al,%al
4bc8(2): jz 0x2a(%rip)
4bca(3): movzx (%rbx),%ecx
4bcd(3): mov %rbx,%rax
4bd0(2): test %cl,%cl
4bd2(2): jz 0x20(%rip)
4bd4(3): mov %r15,%rdx
4bd7(3): sub %r15,%rax
4bda(3): cmp %rdx,%r13
4bdd(2): jbe 0x6(%rip)
4bdf(4): mov %cl,0x0(%r14,%rdx,1)
4be3(4): add $0x1,%rdx
4be7(4): movzx 0x0(%rax,%rdx,1),%ecx
4beb(2): test %cl,%cl
4bed(2): jnz 0xffffffed(%rip)
4bef(3): mov %rdx,%r15
4bf2(3): cmp %r15,%r13
4bf5(6): jbe 0xfffffaa4(%rip)
4bfb(5): mov $0x0,0x0(%r14,%r15,1)
4c00(5): jmp 0xfffffa99(%rip)
4c05(5): cmp $0x2,0x8(%rsp)
4c0a(5): movzx 0xf(%rsp),%ebx
4c0f(3): mov %r11,%rbp
4c12(3): setz %al
4c15(4): mov %bl,0xd(%rsp)
4c19(5): jmp 0xfffffa30(%rip)
4c1e(4): mov 0x8(%rsp),%esi
4c22(3): mov %rcx,%rdi
4c25(5): call 0xffffedab(%rip)
4c2a(5): mov %rax,0x68(%rsp)
4c2f(5): jmp 0xfffffc57(%rip)
4c34(4): mov 0x8(%rsp),%esi
4c38(3): mov %rcx,%rdi
4c3b(5): call 0xffffed95(%rip)
4c40(5): mov %rax,0x60(%rsp)
4c45(5): jmp 0xfffffc6c(%rip)
4c4a(5): movzx 0xf(%rsp),%ebx
4c4f(3): mov %r11,%rbp
4c52(2): mov %edx,%eax
4c54(4): mov %bl,0xd(%rsp)
4c58(5): jmp 0xfffff9f1(%rip)
4c5d(4): sub $0x8,%rsp
4c61(6): mov $0x5,%r8d
4c67(3): mov %r11,%rcx
4c6a(4): push 0x68(%rsp)
4c6e(4): push 0x78(%rsp)
4c72(3): mov %r14,%rdi
4c75(4): push 0x38(%rsp)
4c79(8): mov 0x98(%rsp),%r9d
4c81(5): mov 0x30(%rsp),%rdx
4c86(5): mov 0x70(%rsp),%rsi
4c8b(5): call 0xffffee35(%rip)
4c90(4): add $0x20,%rsp
4c94(3): mov %rax,%r15
4c97(5): jmp 0xfffffa02(%rip)
4c9c(5): movzx 0x7c(%rsp),%eax
4ca1(5): jmp 0xffffff1b(%rip)
4ca6(8): mov $0x2,0x8(%rsp)
4cae(5): jmp 0xfffff99b(%rip)
4cb3(5): call 0xffffcd8d(%rip)
4cb8(5): mov $0x0,0xd(%rsp)
4cbd(5): jmp 0xfffffa74(%rip)
4cc2(3): mov %r11,%rbp
4cc5(5): jmp 0xfffff99b(%rip)
4cca(5): mov $0x1,0xe(%rsp)
4ccf(2): xor %eax,%eax
4cd1(3): xor %r12d,%r12d
4cd4(9): mov $0x0,0x50(%rsp)
4cdd(5): jmp 0xfffff5a7(%rip)
4ce2(3): mov %r13,%rdx
4ce5(5): mov 0x50(%rsp),%r13
4cea(5): jmp 0xfffff5f8(%rip)
4cef(5): call 0xffffcc31(%rip)

"quotearg_n_options" :
4d00(2): push %r15
4d02(2): push %r14
4d04(3): movsxd %edi,%r15
4d07(2): push %r13
4d09(2): push %r12
4d0b(3): mov %rdx,%r14
4d0e(1): push %rbp
4d0f(1): push %rbx
4d10(3): mov %rcx,%rbp
4d13(4): sub $0x28,%rsp
4d17(5): mov %rsi,0x8(%rsp)
4d1c(5): call 0xffffcc14(%rip)
4d21(3): mov %rax,%r13
4d24(2): mov (%rax),%eax
4d26(3): test %r15d,%r15d
4d29(7): mov 0x209330(%rip),%rbx
4d30(4): mov %eax,0x18(%rsp)
4d34(6): js 0x16d(%rip)
4d3a(7): cmp %r15d,0x209317(%rip)
4d41(2): jnle 0x64(%rip)
4d43(7): cmp $0x7fffffff,%r15d
4d4a(6): jz 0x15c(%rip)
4d50(4): lea 0x1(%r15),%r12d
4d54(7): lea 0x209315(%rip),%rax
4d5b(3): movsxd %r12d,%rsi
4d5e(4): shl/sal $0x4,%rsi
4d62(3): cmp %rax,%rbx
4d65(6): jz 0x11b(%rip)
4d6b(3): mov %rbx,%rdi
4d6e(5): call 0xff2(%rip)
4d73(3): mov %rax,%rbx
4d76(7): mov %rax,0x2092e3(%rip)
4d7d(7): movsxd 0x2092d4(%rip),%rdi
4d84(3): mov %r12d,%edx
4d87(2): xor %esi,%esi
4d89(2): sub %edi,%edx
4d8b(4): shl/sal $0x4,%rdi
4d8f(3): movsxd %edx,%rdx
4d92(3): add %rbx,%rdi
4d95(4): shl/sal $0x4,%rdx
4d99(5): call 0xffffcd37(%rip)
4d9e(7): mov %r12d,0x2092b3(%rip)
4da5(3): mov 0x4(%rbp),%eax
4da8(4): shl/sal $0x4,%r15
4dac(4): sub $0x8,%rsp
4db0(3): add %r15,%rbx
4db3(4): lea 0x8(%rbp),%r15
4db7(4): mov 0x0(%rbp),%r8d
4dbb(3): mov (%rbx),%r11
4dbe(4): mov 0x8(%rbx),%r12
4dc2(3): mov %r14,%rcx
4dc5(3): or $0x1,%eax
4dc8(4): mov %eax,0x24(%rsp)
4dcc(3): push 0x30(%rbp)
4dcf(3): mov %eax,%r9d
4dd2(3): push 0x28(%rbp)
4dd5(2): push %r15
4dd7(3): mov %r11,%rsi
4dda(5): mov 0x28(%rsp),%rdx
4ddf(3): mov %r12,%rdi
4de2(5): mov %r11,0x30(%rsp)
4de7(5): call 0xffffecd9(%rip)
4dec(4): add $0x20,%rsp
4df0(5): mov 0x10(%rsp),%r11
4df5(3): cmp %rax,%r11
4df8(2): jnbe 0x69(%rip)
4dfa(4): lea 0x1(%rax),%rsi
4dfe(7): lea 0x2092fb(%rip),%rax
4e05(3): cmp %rax,%r12
4e08(3): mov %rsi,(%rbx)
4e0b(2): jz 0x14(%rip)
4e0d(3): mov %r12,%rdi
4e10(5): mov %rsi,0x10(%rsp)
4e15(5): call 0xffffcf1b(%rip)
4e1a(5): mov 0x10(%rsp),%rsi
4e1f(3): mov %rsi,%rdi
4e22(5): mov %rsi,0x10(%rsp)
4e27(5): call 0xed9(%rip)
4e2c(4): sub $0x8,%rsp
4e30(4): mov %rax,0x8(%rbx)
4e34(4): mov 0x0(%rbp),%r8d
4e38(3): push 0x30(%rbp)
4e3b(3): push 0x28(%rbp)
4e3e(3): mov %r14,%rcx
4e41(2): push %r15
4e43(5): mov 0x3c(%rsp),%r9d
4e48(3): mov %rax,%rdi
4e4b(5): mov 0x28(%rsp),%rdx
4e50(5): mov 0x30(%rsp),%rsi
4e55(3): mov %rax,%r12
4e58(5): call 0xffffec68(%rip)
4e5d(4): add $0x20,%rsp
4e61(4): mov 0x18(%rsp),%eax
4e65(4): mov %eax,0x0(%r13)
4e69(4): add $0x28,%rsp
4e6d(3): mov %r12,%rax
4e70(1): pop %rbx
4e71(1): pop %rbp
4e72(2): pop %r12
4e74(2): pop %r13
4e76(2): pop %r14
4e78(2): pop %r15
4e7a(1): ret near (%rsp)
4e7b(5): nop 0x0(%rax,%rax,1)
4e80(2): xor %edi,%edi
4e82(5): call 0xede(%rip)
4e87(8): movdqa 0x2091e1(%rip),%xmm0
4e8f(3): mov %rax,%rbx
4e92(7): mov %rax,0x2091c7(%rip)
4e99(3): movups %xmm0,(%rax)
4e9c(5): jmp 0xfffffee1(%rip)
4ea1(5): call 0xffffca7f(%rip)
4ea6(5): call 0x10aa(%rip)

"clone_quoting_options" :
4eb0(2): push %r12
4eb2(1): push %rbp
4eb3(1): push %rbx
4eb4(3): mov %rdi,%rbx
4eb7(5): call 0xffffca79(%rip)
4ebc(3): mov (%rax),%r12d
4ebf(3): mov %rax,%rbp
4ec2(7): lea 0x209337(%rip),%rax
4ec9(3): test %rbx,%rbx
4ecc(5): mov $0x38,%esi
4ed1(4): cmove %rax,%rbx
4ed5(3): mov %rbx,%rdi
4ed8(5): call 0x1028(%rip)
4edd(4): mov %r12d,0x0(%rbp)
4ee1(1): pop %rbx
4ee2(1): pop %rbp
4ee3(2): pop %r12
4ee5(1): ret near (%rsp)

"get_quoting_style" :
4ef0(7): lea 0x209309(%rip),%rax
4ef7(3): test %rdi,%rdi
4efa(4): cmove %rax,%rdi
4efe(2): mov (%rdi),%eax
4f00(1): ret near (%rsp)

"set_quoting_style" :
4f10(7): lea 0x2092e9(%rip),%rax
4f17(3): test %rdi,%rdi
4f1a(4): cmove %rax,%rdi
4f1e(2): mov %esi,(%rdi)
4f20(1): ret near (%rsp)

"set_char_quoting" :
4f30(7): lea 0x2092c9(%rip),%rax
4f37(3): test %rdi,%rdi
4f3a(2): mov %esi,%ecx
4f3c(4): cmove %rax,%rdi
4f40(2): mov %esi,%eax
4f42(3): and $0x1f,%ecx
4f45(3): shr $0x5,%al
4f48(3): movzx %al,%eax
4f4b(5): lea 0x8(%rdi,%rax,4),%rdi
4f50(2): mov (%rdi),%esi
4f52(2): mov %esi,%eax
4f54(2): shr %cl,%eax
4f56(2): xor %eax,%edx
4f58(3): and $0x1,%eax
4f5b(3): and $0x1,%edx
4f5e(2): shl/sal %cl,%edx
4f60(2): xor %esi,%edx
4f62(2): mov %edx,(%rdi)
4f64(1): ret near (%rsp)

"set_quoting_flags" :
4f70(7): lea 0x209289(%rip),%rax
4f77(3): test %rdi,%rdi
4f7a(4): cmove %rax,%rdi
4f7e(3): mov 0x4(%rdi),%eax
4f81(3): mov %esi,0x4(%rdi)
4f84(1): ret near (%rsp)

"set_custom_quoting" :
4f90(7): lea 0x209269(%rip),%rax
4f97(3): test %rdi,%rdi
4f9a(4): cmove %rax,%rdi
4f9e(3): test %rsi,%rsi
4fa1(6): mov $0xa,(%rdi)
4fa7(2): jz 0x10(%rip)
4fa9(3): test %rdx,%rdx
4fac(2): jz 0xb(%rip)
4fae(4): mov %rsi,0x28(%rdi)
4fb2(4): mov %rdx,0x30(%rdi)
4fb6(1): ret near (%rsp)
4fb7(4): sub $0x8,%rsp
4fbb(5): call 0xffffc965(%rip)

"quotearg_buffer" :
4fc0(2): push %r15
4fc2(2): push %r14
4fc4(7): lea 0x209235(%rip),%rax
4fcb(2): push %r13
4fcd(2): push %r12
4fcf(3): mov %rdi,%r13
4fd2(1): push %rbp
4fd3(1): push %rbx
4fd4(3): mov %r8,%rbx
4fd7(3): mov %rsi,%r14
4fda(3): mov %rdx,%r15
4fdd(4): sub $0x18,%rsp
4fe1(3): test %r8,%r8
4fe4(4): cmove %rax,%rbx
4fe8(5): mov %rcx,0x8(%rsp)
4fed(5): call 0xffffc943(%rip)
4ff2(3): mov (%rax),%r12d
4ff5(3): mov %rax,%rbp
4ff8(4): lea 0x8(%rbx),%rax
4ffc(4): sub $0x8,%rsp
5000(4): mov 0x4(%rbx),%r9d
5004(3): push 0x30(%rbx)
5007(3): mov (%rbx),%r8d
500a(3): push 0x28(%rbx)
500d(3): mov %r15,%rdx
5010(1): push %rax
5011(5): mov 0x28(%rsp),%rcx
5016(3): mov %r14,%rsi
5019(3): mov %r13,%rdi
501c(5): call 0xffffeaa4(%rip)
5021(4): mov %r12d,0x0(%rbp)
5025(4): add $0x38,%rsp
5029(1): pop %rbx
502a(1): pop %rbp
502b(2): pop %r12
502d(2): pop %r13
502f(2): pop %r14
5031(2): pop %r15
5033(1): ret near (%rsp)

"quotearg_alloc_mem" :
5040(2): push %r15
5042(2): push %r14
5044(7): lea 0x2091b5(%rip),%rax
504b(2): push %r13
504d(2): push %r12
504f(3): mov %rdx,%r12
5052(1): push %rbp
5053(1): push %rbx
5054(3): mov %rcx,%rbx
5057(3): mov %rdi,%r14
505a(3): mov %rsi,%r15
505d(4): sub $0x38,%rsp
5061(3): test %rcx,%rcx
5064(4): cmove %rax,%rbx
5068(2): xor %ebp,%ebp
506a(5): call 0xffffc8c6(%rip)
506f(3): test %r12,%r12
5072(3): mov %rax,%r13
5075(2): mov (%rax),%eax
5077(4): setz %bpl
507b(3): or 0x4(%rbx),%ebp
507e(4): lea 0x8(%rbx),%r10
5082(4): sub $0x8,%rsp
5086(3): mov (%rbx),%r8d
5089(3): mov %r15,%rcx
508c(4): mov %eax,0x14(%rsp)
5090(3): push 0x30(%rbx)
5093(3): mov %r14,%rdx
5096(3): push 0x28(%rbx)
5099(2): push %r10
509b(2): xor %esi,%esi
509d(3): mov %ebp,%r9d
50a0(2): xor %edi,%edi
50a2(5): mov %r10,0x40(%rsp)
50a7(5): call 0xffffea19(%rip)
50ac(4): lea 0x1(%rax),%rsi
50b0(5): mov %rax,0x48(%rsp)
50b5(4): add $0x20,%rsp
50b9(3): mov %rsi,%rdi
50bc(5): mov %rsi,0x18(%rsp)
50c1(5): call 0xc3f(%rip)
50c6(5): mov %rax,0x10(%rsp)
50cb(4): sub $0x8,%rsp
50cf(3): push 0x30(%rbx)
50d2(3): push 0x28(%rbx)
50d5(5): mov 0x38(%rsp),%r10
50da(3): mov %ebp,%r9d
50dd(3): mov (%rbx),%r8d
50e0(3): mov %r15,%rcx
50e3(3): mov %r14,%rdx
50e6(3): mov %rax,%rdi
50e9(2): push %r10
50eb(5): mov 0x38(%rsp),%rsi
50f0(5): call 0xffffe9d0(%rip)
50f5(4): mov 0x2c(%rsp),%eax
50f9(4): add $0x20,%rsp
50fd(3): test %r12,%r12
5100(4): mov %eax,0x0(%r13)
5104(2): jz 0xb(%rip)
5106(5): mov 0x28(%rsp),%r11
510b(4): mov %r11,(%r12)
510f(5): mov 0x10(%rsp),%rax
5114(4): add $0x38,%rsp
5118(1): pop %rbx
5119(1): pop %rbp
511a(2): pop %r12
511c(2): pop %r13
511e(2): pop %r14
5120(2): pop %r15
5122(1): ret near (%rsp)

"quotearg_alloc" :
5130(3): mov %rdx,%rcx
5133(2): xor %edx,%edx
5135(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5140(6): mov 0x208f12(%rip),%eax
5146(2): push %r12
5148(7): mov 0x208f11(%rip),%r12
514f(1): push %rbp
5150(1): push %rbx
5151(3): cmp $0x1,%eax
5154(2): jle 0x2d(%rip)
5156(3): sub $0x2,%eax
5159(5): lea 0x18(%r12),%rbx
515e(4): shl/sal $0x4,%rax
5162(5): lea 0x28(%r12,%rax,1),%rbp
5167(9): nop 0x0(%rax,%rax,1)
5170(3): mov (%rbx),%rdi
5173(4): add $0x10,%rbx
5177(5): call 0xffffcbb9(%rip)
517c(3): cmp %rbp,%rbx
517f(2): jnz 0xfffffff1(%rip)
5181(5): mov 0x8(%r12),%rdi
5186(7): lea 0x208f73(%rip),%rbx
518d(3): cmp %rbx,%rdi
5190(2): jz 0x19(%rip)
5192(5): call 0xffffcb9e(%rip)
5197(b): mov $0x100,0x208ece(%rip)
51a2(7): mov %rbx,0x208ecf(%rip)
51a9(7): lea 0x208ec0(%rip),%rbx
51b0(3): cmp %rbx,%r12
51b3(2): jz 0x11(%rip)
51b5(3): mov %r12,%rdi
51b8(5): call 0xffffcb78(%rip)
51bd(7): mov %rbx,0x208e9c(%rip)
51c4(1): pop %rbx
51c5(a): mov $0x1,0x208e89(%rip)
51cf(1): pop %rbp
51d0(2): pop %r12
51d2(1): ret near (%rsp)

"quotearg_n" :
51e0(7): lea 0x209019(%rip),%rcx
51e7(7): mov $0xffffffff,%rdx
51ee(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5200(7): lea 0x208ff9(%rip),%rcx
5207(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5210(7): lea 0x208fe9(%rip),%rcx
5217(3): mov %rdi,%rsi
521a(7): mov $0xffffffff,%rdx
5221(2): xor %edi,%edi
5223(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5230(7): lea 0x208fc9(%rip),%rcx
5237(3): mov %rsi,%rdx
523a(3): mov %rdi,%rsi
523d(2): xor %edi,%edi
523f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5250(4): sub $0x48,%rsp
5254(3): mov %rdx,%rax
5257(9): mov $0x28,%rdx
5260(5): mov %rdx,0x38(%rsp)
5265(2): xor %edx,%edx
5267(3): cmp $0xa,%esi
526a(2): jz 0x6a(%rip)
526c(3): mov %esi,(%rsp)
526f(3): mov %rsp,%rcx
5272(7): mov $0xffffffff,%rdx
5279(3): mov %rax,%rsi
527c(9): mov $0x0,0x4(%rsp)
5285(9): mov $0x0,0xc(%rsp)
528e(9): mov $0x0,0x14(%rsp)
5297(9): mov $0x0,0x1c(%rsp)
52a0(9): mov $0x0,0x24(%rsp)
52a9(9): mov $0x0,0x2c(%rsp)
52b2(8): mov $0x0,0x34(%rsp)
52ba(5): call 0xfffffa46(%rip)
52bf(5): mov 0x38(%rsp),%rcx
52c4(9): xor $0x28,%rcx
52cd(2): jnz 0xc(%rip)
52cf(4): add $0x48,%rsp
52d3(1): ret near (%rsp)
52d4(5): call 0xffffc64c(%rip)
52d9(5): call 0xffffc767(%rip)

"quotearg_n_style_mem" :
52e0(4): sub $0x48,%rsp
52e4(3): mov %rdx,%rax
52e7(3): mov %rcx,%rdx
52ea(9): mov $0x28,%rcx
52f3(5): mov %rcx,0x38(%rsp)
52f8(2): xor %ecx,%ecx
52fa(3): cmp $0xa,%esi
52fd(2): jz 0x63(%rip)
52ff(3): mov %esi,(%rsp)
5302(3): mov %rsp,%rcx
5305(3): mov %rax,%rsi
5308(9): mov $0x0,0x4(%rsp)
5311(9): mov $0x0,0xc(%rsp)
531a(9): mov $0x0,0x14(%rsp)
5323(9): mov $0x0,0x1c(%rsp)
532c(9): mov $0x0,0x24(%rsp)
5335(9): mov $0x0,0x2c(%rsp)
533e(8): mov $0x0,0x34(%rsp)
5346(5): call 0xfffff9ba(%rip)
534b(5): mov 0x38(%rsp),%rdx
5350(9): xor $0x28,%rdx
5359(2): jnz 0xc(%rip)
535b(4): add $0x48,%rsp
535f(1): ret near (%rsp)
5360(5): call 0xffffc5c0(%rip)
5365(5): call 0xffffc6db(%rip)

"quotearg_style" :
5370(3): mov %rsi,%rdx
5373(2): mov %edi,%esi
5375(2): xor %edi,%edi
5377(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5380(3): mov %rdx,%rcx
5383(3): mov %rsi,%rdx
5386(2): mov %edi,%esi
5388(2): xor %edi,%edi
538a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5390(4): sub $0x48,%rsp
5394(2): mov %edx,%ecx
5396(9): mov $0x28,%rax
539f(5): mov %rax,0x38(%rsp)
53a4(2): xor %eax,%eax
53a6(7): mov 0x208e83(%rip),%rax
53ad(3): mov %rsp,%r8
53b0(3): and $0x1f,%ecx
53b3(8): movdqa 0x208e45(%rip),%xmm0
53bb(5): mov %rax,0x30(%rsp)
53c0(2): mov %edx,%eax
53c2(4): movaps %xmm0,(%rsp)
53c6(3): shr $0x5,%al
53c9(3): movzx %al,%eax
53cc(5): lea 0x8(%r8,%rax,4),%r9
53d1(8): movdqa 0x208e37(%rip),%xmm0
53d9(5): movaps %xmm0,0x10(%rsp)
53de(8): movdqa 0x208e3a(%rip),%xmm0
53e6(5): movaps %xmm0,0x20(%rsp)
53eb(3): mov (%r9),%edx
53ee(2): mov %edx,%eax
53f0(2): shr %cl,%eax
53f2(2): not %eax
53f4(3): and $0x1,%eax
53f7(2): shl/sal %cl,%eax
53f9(3): mov %r8,%rcx
53fc(2): xor %edx,%eax
53fe(3): mov %rsi,%rdx
5401(3): mov %rdi,%rsi
5404(3): mov %eax,(%r9)
5407(2): xor %edi,%edi
5409(5): call 0xfffff8f7(%rip)
540e(5): mov 0x38(%rsp),%rsi
5413(9): xor $0x28,%rsi
541c(2): jnz 0x7(%rip)
541e(4): add $0x48,%rsp
5422(1): ret near (%rsp)
5423(5): call 0xffffc61d(%rip)

"quotearg_char" :
5430(4): movsx %sil,%edx
5434(7): mov $0xffffffff,%rsi
543b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5440(5): mov $0x3a,%edx
5445(7): mov $0xffffffff,%rsi
544c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5460(5): mov $0x3a,%edx
5465(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5470(4): sub $0x48,%rsp
5474(3): mov %rdx,%rax
5477(9): mov $0x28,%rdx
5480(5): mov %rdx,0x38(%rsp)
5485(2): xor %edx,%edx
5487(3): cmp $0xa,%esi
548a(2): jz 0x6a(%rip)
548c(3): mov %esi,(%rsp)
548f(3): mov %rsp,%rcx
5492(7): mov $0xffffffff,%rdx
5499(3): mov %rax,%rsi
549c(9): mov $0x0,0x4(%rsp)
54a5(9): mov $0x4000000,0xc(%rsp)
54ae(9): mov $0x0,0x14(%rsp)
54b7(9): mov $0x0,0x1c(%rsp)
54c0(9): mov $0x0,0x24(%rsp)
54c9(9): mov $0x0,0x2c(%rsp)
54d2(8): mov $0x0,0x34(%rsp)
54da(5): call 0xfffff826(%rip)
54df(5): mov 0x38(%rsp),%rcx
54e4(9): xor $0x28,%rcx
54ed(2): jnz 0xc(%rip)
54ef(4): add $0x48,%rsp
54f3(1): ret near (%rsp)
54f4(5): call 0xffffc42c(%rip)
54f9(5): call 0xffffc547(%rip)

"quotearg_n_custom_mem" :
5500(4): sub $0x48,%rsp
5504(3): mov %rcx,%r9
5507(7): mov 0x208d22(%rip),%rcx
550e(8): movdqa 0x208cea(%rip),%xmm0
5516(9): mov $0x28,%rax
551f(5): mov %rax,0x38(%rsp)
5524(2): xor %eax,%eax
5526(4): movaps %xmm0,(%rsp)
552a(3): test %rsi,%rsi
552d(5): mov %rcx,0x30(%rsp)
5532(7): mov $0xa,(%rsp)
5539(8): movdqa 0x208ccf(%rip),%xmm0
5541(5): movaps %xmm0,0x10(%rsp)
5546(8): movdqa 0x208cd2(%rip),%xmm0
554e(5): movaps %xmm0,0x20(%rsp)
5553(2): jz 0x34(%rip)
5555(3): test %rdx,%rdx
5558(2): jz 0x2f(%rip)
555a(5): mov %rsi,0x28(%rsp)
555f(5): mov %rdx,0x30(%rsp)
5564(3): mov %rsp,%rcx
5567(3): mov %r8,%rdx
556a(3): mov %r9,%rsi
556d(5): call 0xfffff793(%rip)
5572(5): mov 0x38(%rsp),%rdi
5577(9): xor $0x28,%rdi
5580(2): jnz 0xc(%rip)
5582(4): add $0x48,%rsp
5586(1): ret near (%rsp)
5587(5): call 0xffffc399(%rip)
558c(5): call 0xffffc4b4(%rip)

"quotearg_n_custom" :
55a0(7): mov $0xffffffff,%r8
55a7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
55b0(3): mov %rdx,%rcx
55b3(7): mov $0xffffffff,%r8
55ba(3): mov %rsi,%rdx
55bd(3): mov %rdi,%rsi
55c0(2): xor %edi,%edi
55c2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
55d0(3): mov %rcx,%r8
55d3(3): mov %rdx,%rcx
55d6(3): mov %rsi,%rdx
55d9(3): mov %rdi,%rsi
55dc(2): xor %edi,%edi
55de(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
55f0(7): lea 0x208a29(%rip),%rcx
55f7(5): jmp 0xfffff709(%rip)

"quote_mem" :
5600(7): lea 0x208a19(%rip),%rcx
5607(3): mov %rsi,%rdx
560a(3): mov %rdi,%rsi
560d(2): xor %edi,%edi
560f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5620(7): lea 0x2089f9(%rip),%rcx
5627(7): mov $0xffffffff,%rdx
562e(5): jmp 0xfffff6d2(%rip)

"quote" :
5640(7): lea 0x2089d9(%rip),%rcx
5647(3): mov %rdi,%rsi
564a(7): mov $0xffffffff,%rdx
5651(2): xor %edi,%edi
5653(5): jmp 0xfffff6ad(%rip)

"get_root_dev_ino" :
5660(1): push %rbx
5661(7): lea 0x5ba6(%rip),%rsi
5668(3): mov %rdi,%rbx
566b(5): mov $0x1,%edi
5670(7): sub $0xa0,%rsp
5677(3): mov %rsp,%rdx
567a(9): mov $0x28,%rax
5683(8): mov %rax,0x98(%rsp)
568b(2): xor %eax,%eax
568d(5): call 0xffffc393(%rip)
5692(2): test %eax,%eax
5694(2): jnz 0x34(%rip)
5696(5): mov 0x8(%rsp),%rax
569b(3): mov %rax,(%rbx)
569e(4): mov (%rsp),%rax
56a2(4): mov %rax,0x8(%rbx)
56a6(3): mov %rbx,%rax
56a9(8): mov 0x98(%rsp),%rcx
56b1(9): xor $0x28,%rcx
56ba(2): jnz 0x12(%rip)
56bc(7): add $0xa0,%rsp
56c3(1): pop %rbx
56c4(1): ret near (%rsp)
56c5(3): nop (%rax)
56c8(2): xor %eax,%eax
56ca(2): jmp 0xffffffdf(%rip)
56cc(5): call 0xffffc374(%rip)

"version_etc_arn" :
56e0(2): push %r15
56e2(2): push %r14
56e4(2): push %r13
56e6(2): push %r12
56e8(3): mov %r9,%r12
56eb(1): push %rbp
56ec(1): push %rbx
56ed(3): mov %rdi,%rbp
56f0(3): mov %r8,%rbx
56f3(4): sub $0x28,%rsp
56f7(3): test %rsi,%rsi
56fa(6): jz 0x11e(%rip)
5700(3): mov %rdx,%r8
5703(7): lea 0x5fde(%rip),%rdx
570a(3): mov %rcx,%r9
570d(2): xor %eax,%eax
570f(3): mov %rsi,%rcx
5712(5): mov $0x1,%esi
5717(5): call 0xffffc5d9(%rip)
571c(7): lea 0x5fd8(%rip),%rsi
5723(2): xor %edi,%edi
5725(5): mov $0x5,%edx
572a(5): call 0xffffc2c6(%rip)
572f(7): lea 0x62ea(%rip),%rdx
5736(3): mov %rax,%rcx
5739(6): mov $0x7e3,%r8d
573f(5): mov $0x1,%esi
5744(3): mov %rbp,%rdi
5747(2): xor %eax,%eax
5749(5): call 0xffffc5a7(%rip)
574e(7): lea 0x6033(%rip),%rsi
5755(2): xor %edi,%edi
5757(5): mov $0x5,%edx
575c(5): call 0xffffc294(%rip)
5761(3): mov %rbp,%rsi
5764(3): mov %rax,%rdi
5767(5): call 0xffffc3b9(%rip)
576c(4): cmp $0x9,%r12
5770(6): jnbe 0x340(%rip)
5776(7): lea 0x6267(%rip),%rdx
577d(4): movsxd 0x0(%rdx,%r12,4),%rax
5781(3): add %rdx,%rax
5784(2): jmp %rax
5786(a): nop 0x0(%rax,%rax,1)
5790(4): mov 0x38(%rbx),%r9
5794(4): mov 0x10(%rbx),%rax
5798(7): lea 0x6159(%rip),%rsi
579f(4): mov 0x8(%rbx),%r8
57a3(5): mov $0x5,%edx
57a8(2): xor %edi,%edi
57aa(4): mov 0x30(%rbx),%r13
57ae(4): mov 0x28(%rbx),%r12
57b2(5): mov %r9,0x10(%rsp)
57b7(4): mov 0x20(%rbx),%r15
57bb(4): mov 0x18(%rbx),%r14
57bf(4): mov %rax,(%rsp)
57c3(5): mov %r8,0x8(%rsp)
57c8(3): mov (%rbx),%rbx
57cb(5): call 0xffffc225(%rip)
57d0(4): sub $0x8,%rsp
57d4(5): mov 0x18(%rsp),%r9
57d9(3): mov %rax,%rdx
57dc(3): mov %rbx,%rcx
57df(5): mov $0x1,%esi
57e4(3): mov %rbp,%rdi
57e7(2): xor %eax,%eax
57e9(2): push %r9
57eb(2): push %r13
57ed(2): push %r12
57ef(2): push %r15
57f1(2): push %r14
57f3(5): mov 0x30(%rsp),%r9
57f8(5): mov 0x38(%rsp),%r8
57fd(5): call 0xffffc4f3(%rip)
5802(4): add $0x30,%rsp
5806(4): add $0x28,%rsp
580a(1): pop %rbx
580b(1): pop %rbp
580c(2): pop %r12
580e(2): pop %r13
5810(2): pop %r14
5812(2): pop %r15
5814(1): ret near (%rsp)
5815(3): nop (%rax)
5818(3): mov %rcx,%r8
581b(3): mov %rdx,%rcx
581e(7): lea 0x5ecf(%rip),%rdx
5825(5): mov $0x1,%esi
582a(2): xor %eax,%eax
582c(5): call 0xffffc4c4(%rip)
5831(5): jmp 0xfffffeeb(%rip)
5836(a): nop 0x0(%rax,%rax,1)
5840(4): mov 0x40(%rbx),%r10
5844(4): mov 0x38(%rbx),%r9
5848(7): lea 0x60d9(%rip),%rsi
584f(4): mov 0x10(%rbx),%rax
5853(4): mov 0x8(%rbx),%r8
5857(5): mov $0x5,%edx
585c(4): mov 0x30(%rbx),%r13
5860(4): mov 0x28(%rbx),%r12
5864(4): mov 0x20(%rbx),%r15
5868(4): mov 0x18(%rbx),%r14
586c(3): mov (%rbx),%rbx
586f(5): mov %r10,0x18(%rsp)
5874(5): mov %r9,0x10(%rsp)
5879(4): mov %rax,(%rsp)
587d(5): mov %r8,0x8(%rsp)
5882(2): xor %edi,%edi
5884(5): call 0xffffc16c(%rip)
5889(5): mov 0x18(%rsp),%r10
588e(2): push %r10
5890(5): jmp 0xffffff44(%rip)
5895(3): nop (%rax)
5898(3): mov (%rbx),%rbx
589b(7): lea 0x5e5d(%rip),%rsi
58a2(5): mov $0x5,%edx
58a7(2): xor %edi,%edi
58a9(5): call 0xffffc147(%rip)
58ae(4): add $0x28,%rsp
58b2(3): mov %rbx,%rcx
58b5(3): mov %rbp,%rdi
58b8(1): pop %rbx
58b9(1): pop %rbp
58ba(2): pop %r12
58bc(2): pop %r13
58be(2): pop %r14
58c0(2): pop %r15
58c2(3): mov %rax,%rdx
58c5(5): mov $0x1,%esi
58ca(2): xor %eax,%eax
58cc(5): jmp 0xffffc424(%rip)
58d1(7): nop 0x0(%rax)
58d8(4): mov 0x8(%rbx),%r12
58dc(7): lea 0x5e2c(%rip),%rsi
58e3(3): mov (%rbx),%rbx
58e6(5): mov $0x5,%edx
58eb(2): xor %edi,%edi
58ed(5): call 0xffffc103(%rip)
58f2(4): add $0x28,%rsp
58f6(3): mov %r12,%r8
58f9(3): mov %rbx,%rcx
58fc(3): mov %rbp,%rdi
58ff(3): mov %rax,%rdx
5902(5): mov $0x1,%esi
5907(1): pop %rbx
5908(1): pop %rbp
5909(2): pop %r12
590b(2): pop %r13
590d(2): pop %r14
590f(2): pop %r15
5911(2): xor %eax,%eax
5913(5): jmp 0xffffc3dd(%rip)
5918(8): nop 0x0(%rax,%rax,1)
5920(4): mov 0x10(%rbx),%r13
5924(4): mov 0x8(%rbx),%r12
5928(7): lea 0x5df7(%rip),%rsi
592f(3): mov (%rbx),%rbx
5932(5): mov $0x5,%edx
5937(2): xor %edi,%edi
5939(5): call 0xffffc0b7(%rip)
593e(4): add $0x28,%rsp
5942(3): mov %r13,%r9
5945(3): mov %r12,%r8
5948(3): mov %rbx,%rcx
594b(3): mov %rbp,%rdi
594e(3): mov %rax,%rdx
5951(1): pop %rbx
5952(1): pop %rbp
5953(2): pop %r12
5955(2): pop %r13
5957(2): pop %r14
5959(2): pop %r15
595b(5): mov $0x1,%esi
5960(2): xor %eax,%eax
5962(5): jmp 0xffffc38e(%rip)
5967(9): nop 0x0(%rax,%rax,1)
5970(7): lea 0x5ee1(%rip),%rsi
5977(5): mov $0x5,%edx
597c(2): xor %edi,%edi
597e(4): mov 0x18(%rbx),%r14
5982(4): mov 0x10(%rbx),%r13
5986(4): mov 0x8(%rbx),%r12
598a(3): mov (%rbx),%rbx
598d(5): call 0xffffc063(%rip)
5992(4): sub $0x8,%rsp
5996(2): push %r14
5998(3): mov %rax,%rdx
599b(3): mov %r13,%r9
599e(3): mov %r12,%r8
59a1(3): mov %rbx,%rcx
59a4(3): mov %rbp,%rdi
59a7(5): mov $0x1,%esi
59ac(2): xor %eax,%eax
59ae(5): call 0xffffc342(%rip)
59b3(1): pop %rax
59b4(1): pop %rdx
59b5(4): add $0x28,%rsp
59b9(1): pop %rbx
59ba(1): pop %rbp
59bb(2): pop %r12
59bd(2): pop %r13
59bf(2): pop %r14
59c1(2): pop %r15
59c3(1): ret near (%rsp)
59c4(4): nop 0x0(%rax)
59c8(4): mov 0x20(%rbx),%r15
59cc(7): lea 0x5ea5(%rip),%rsi
59d3(5): mov $0x5,%edx
59d8(2): xor %edi,%edi
59da(4): mov 0x18(%rbx),%r14
59de(4): mov 0x10(%rbx),%r13
59e2(4): mov 0x8(%rbx),%r12
59e6(3): mov (%rbx),%rbx
59e9(5): call 0xffffc007(%rip)
59ee(2): push %r15
59f0(2): jmp 0xffffffa6(%rip)
59f2(6): nop 0x0(%rax,%rax,1)
59f8(4): mov 0x8(%rbx),%r8
59fc(4): mov 0x28(%rbx),%r12
5a00(7): lea 0x5e99(%rip),%rsi
5a07(4): mov 0x20(%rbx),%r15
5a0b(4): mov 0x18(%rbx),%r14
5a0f(5): mov $0x5,%edx
5a14(4): mov 0x10(%rbx),%r13
5a18(2): xor %edi,%edi
5a1a(3): mov (%rbx),%rbx
5a1d(4): mov %r8,(%rsp)
5a21(5): call 0xffffbfcf(%rip)
5a26(4): sub $0x8,%rsp
5a2a(3): mov %r13,%r9
5a2d(2): push %r12
5a2f(2): push %r15
5a31(2): push %r14
5a33(5): mov 0x20(%rsp),%r8
5a38(3): mov %rbx,%rcx
5a3b(3): mov %rax,%rdx
5a3e(3): mov %rbp,%rdi
5a41(5): mov $0x1,%esi
5a46(2): xor %eax,%eax
5a48(5): call 0xffffc2a8(%rip)
5a4d(4): add $0x20,%rsp
5a51(4): add $0x28,%rsp
5a55(1): pop %rbx
5a56(1): pop %rbp
5a57(2): pop %r12
5a59(2): pop %r13
5a5b(2): pop %r14
5a5d(2): pop %r15
5a5f(1): ret near (%rsp)
5a60(4): mov 0x10(%rbx),%r9
5a64(4): mov 0x30(%rbx),%r13
5a68(7): lea 0x5e59(%rip),%rsi
5a6f(4): mov 0x28(%rbx),%r12
5a73(4): mov 0x20(%rbx),%r15
5a77(5): mov $0x5,%edx
5a7c(4): mov 0x18(%rbx),%r14
5a80(4): mov 0x8(%rbx),%r8
5a84(2): xor %edi,%edi
5a86(5): mov %r9,0x8(%rsp)
5a8b(3): mov (%rbx),%rbx
5a8e(4): mov %r8,(%rsp)
5a92(5): call 0xffffbf5e(%rip)
5a97(2): push %r13
5a99(2): push %r12
5a9b(2): push %r15
5a9d(2): push %r14
5a9f(5): mov 0x28(%rsp),%r9
5aa4(2): jmp 0xffffff8f(%rip)
5aa6(a): nop 0x0(%rax,%rax,1)
5ab0(4): mov 0x40(%rbx),%r10
5ab4(4): mov 0x38(%rbx),%r9
5ab8(5): mov $0x5,%edx
5abd(4): mov 0x10(%rbx),%rax
5ac1(4): mov 0x8(%rbx),%r8
5ac5(7): lea 0x5e94(%rip),%rsi
5acc(4): mov 0x30(%rbx),%r13
5ad0(4): mov 0x28(%rbx),%r12
5ad4(4): mov 0x20(%rbx),%r15
5ad8(4): mov 0x18(%rbx),%r14
5adc(5): mov %r10,0x18(%rsp)
5ae1(5): mov %r9,0x10(%rsp)
5ae6(4): mov %rax,(%rsp)
5aea(5): mov %r8,0x8(%rsp)
5aef(3): mov (%rbx),%rbx
5af2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5b00(3): xor %r9d,%r9d
5b03(4): cmp $0x0,(%r8)
5b07(2): jz 0x14(%rip)
5b09(7): nop 0x0(%rax)
5b10(4): add $0x1,%r9
5b14(5): cmp $0x0,0x0(%r8,%r9,8)
5b19(2): jnz 0xfffffff7(%rip)
5b1b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5b20(4): sub $0x68,%rsp
5b24(3): mov %r8,%r10
5b27(3): xor %r9d,%r9d
5b2a(9): mov $0x28,%rax
5b33(5): mov %rax,0x58(%rsp)
5b38(2): xor %eax,%eax
5b3a(3): mov %rsp,%r8
5b3d(3): nop (%rax)
5b40(3): mov (%r10),%eax
5b43(3): cmp $0x2f,%eax
5b46(2): jnbe 0x44(%rip)
5b48(3): mov %eax,%r11d
5b4b(4): add 0x10(%r10),%r11
5b4f(3): add $0x8,%eax
5b52(3): mov %eax,(%r10)
5b55(3): mov (%r11),%rax
5b58(3): test %rax,%rax
5b5b(4): mov %rax,0x0(%r8,%r9,8)
5b5f(2): jz 0xc(%rip)
5b61(4): add $0x1,%r9
5b65(4): cmp $0xa,%r9
5b69(2): jnz 0xffffffd7(%rip)
5b6b(5): call 0xfffffb75(%rip)
5b70(5): mov 0x58(%rsp),%rax
5b75(9): xor $0x28,%rax
5b7e(2): jnz 0x7(%rip)
5b80(4): add $0x68,%rsp
5b84(1): ret near (%rsp)
5b85(5): call 0xffffbebb(%rip)
5b8a(4): mov 0x8(%r10),%r11
5b8e(4): lea 0x8(%r11),%rax
5b92(4): mov %rax,0x8(%r10)
5b96(2): jmp 0xffffffbf(%rip)

"version_etc" :
5ba0(1): push %rbp
5ba1(1): push %rbx
5ba2(6): mov $0x20,%r10d
5ba8(3): xor %r11d,%r11d
5bab(7): sub $0xb8,%rsp
5bb2(9): mov $0x28,%rax
5bbb(5): mov %rax,0x78(%rsp)
5bc0(2): xor %eax,%eax
5bc2(8): lea 0xd0(%rsp),%rax
5bca(8): mov %r8,0xa0(%rsp)
5bd2(8): lea 0xd0(%rsp),%rbx
5bda(5): lea 0x20(%rsp),%r8
5bdf(8): mov %r9,0xa8(%rsp)
5be7(8): mov $0x20,0x8(%rsp)
5bef(5): mov %rax,0x10(%rsp)
5bf4(8): lea 0x80(%rsp),%rax
5bfc(3): xor %r9d,%r9d
5bff(5): mov %rax,0x18(%rsp)
5c04(3): mov %rax,%rbp
5c07(9): nop 0x0(%rax,%rax,1)
5c10(4): cmp $0x2f,%r10d
5c14(2): jnbe 0x58(%rip)
5c16(3): mov %r10d,%eax
5c19(6): mov $0x1,%r11d
5c1f(4): add $0x8,%r10d
5c23(3): add %rbp,%rax
5c26(3): mov (%rax),%rax
5c29(3): test %rax,%rax
5c2c(4): mov %rax,0x0(%r8,%r9,8)
5c30(2): jz 0xc(%rip)
5c32(4): add $0x1,%r9
5c36(4): cmp $0xa,%r9
5c3a(2): jnz 0xffffffd6(%rip)
5c3c(3): test %r11b,%r11b
5c3f(2): jnz 0x26(%rip)
5c41(5): call 0xfffffa9f(%rip)
5c46(5): mov 0x78(%rsp),%rax
5c4b(9): xor $0x28,%rax
5c54(2): jnz 0xc(%rip)
5c56(7): add $0xb8,%rsp
5c5d(1): pop %rbx
5c5e(1): pop %rbp
5c5f(1): ret near (%rsp)
5c60(5): call 0xffffbde0(%rip)
5c65(5): mov %r10d,0x8(%rsp)
5c6a(2): jmp 0xffffffd7(%rip)
5c6c(3): mov %rbx,%rax
5c6f(4): add $0x8,%rbx
5c73(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5c80(1): push %rbx
5c81(7): lea 0x5aba(%rip),%rsi
5c88(5): mov $0x5,%edx
5c8d(2): xor %edi,%edi
5c8f(5): call 0xffffbd61(%rip)
5c94(7): lea 0x5abc(%rip),%rdx
5c9b(3): mov %rax,%rsi
5c9e(5): mov $0x1,%edi
5ca3(2): xor %eax,%eax
5ca5(5): call 0xffffbf7b(%rip)
5caa(7): lea 0x5abc(%rip),%rsi
5cb1(5): mov $0x5,%edx
5cb6(2): xor %edi,%edi
5cb8(5): call 0xffffbd38(%rip)
5cbd(7): lea 0x4ffc(%rip),%rcx
5cc4(7): lea 0x47d5(%rip),%rdx
5ccb(3): mov %rax,%rsi
5cce(5): mov $0x1,%edi
5cd3(2): xor %eax,%eax
5cd5(5): call 0xffffbf4b(%rip)
5cda(7): mov 0x2083a7(%rip),%rbx
5ce1(7): lea 0x5cb8(%rip),%rsi
5ce8(2): xor %edi,%edi
5cea(5): mov $0x5,%edx
5cef(5): call 0xffffbd01(%rip)
5cf4(3): mov %rbx,%rsi
5cf7(3): mov %rax,%rdi
5cfa(1): pop %rbx
5cfb(5): jmp 0xffffbe25(%rip)

"xmalloc" :
5d00(1): push %rbx
5d01(3): mov %rdi,%rbx
5d04(5): call 0xffffbe9c(%rip)
5d09(3): test %rax,%rax
5d0c(2): jnz 0x7(%rip)
5d0e(3): test %rbx,%rbx
5d11(2): jnz 0x4(%rip)
5d13(1): pop %rbx
5d14(1): ret near (%rsp)
5d15(5): call 0x23b(%rip)

"xnmalloc" :
5d20(3): mov %rdi,%rax
5d23(3): mul %rax,%rsi,%rdx
5d26(3): mov %rax,%rdi
5d29(3): seto %al
5d2c(3): test %rdi,%rdi
5d2f(2): js 0xc(%rip)
5d31(3): movzx %al,%eax
5d34(3): test %rax,%rax
5d37(2): jnz 0x4(%rip)
5d39(2): jmp 0xffffffc7(%rip)
5d3b(4): sub $0x8,%rsp
5d3f(5): call 0x211(%rip)

"xrealloc" :
5d60(3): test %rsi,%rsi
5d63(1): push %rbx
5d64(3): mov %rsi,%rbx
5d67(2): jnz 0x7(%rip)
5d69(3): test %rdi,%rdi
5d6c(2): jnz 0x1c(%rip)
5d6e(3): mov %rbx,%rsi
5d71(5): call 0xffffbe8f(%rip)
5d76(3): test %rax,%rax
5d79(2): jnz 0x7(%rip)
5d7b(3): test %rbx,%rbx
5d7e(2): jnz 0x13(%rip)
5d80(1): pop %rbx
5d81(1): ret near (%rsp)
5d82(6): nop 0x0(%rax,%rax,1)
5d88(5): call 0xffffbfa8(%rip)
5d8d(2): xor %eax,%eax
5d8f(1): pop %rbx
5d90(1): ret near (%rsp)
5d91(5): call 0x1bf(%rip)

"xnrealloc" :
5da0(3): mov %rsi,%rax
5da3(3): mul %rax,%rdx,%rdx
5da6(3): mov %rax,%rsi
5da9(3): seto %al
5dac(3): test %rsi,%rsi
5daf(2): js 0xc(%rip)
5db1(3): movzx %al,%eax
5db4(3): test %rax,%rax
5db7(2): jnz 0x4(%rip)
5db9(2): jmp 0xffffffa7(%rip)
5dbb(4): sub $0x8,%rsp
5dbf(5): call 0x191(%rip)

"x2nrealloc" :
5dd0(3): test %rdi,%rdi
5dd3(3): mov %rdx,%r9
5dd6(3): mov (%rsi),%rcx
5dd9(2): jz 0x37(%rip)
5ddb(2): xor %edx,%edx
5ddd(a): mov $0x6148914691236517204,%rax
5de7(3): div %r9,%rax
5dea(3): cmp %rcx,%rax
5ded(2): jbe 0x3e(%rip)
5def(3): mov %rcx,%rax
5df2(3): shr $0x1,%rax
5df5(5): lea 0x1(%rax,%rcx,1),%rcx
5dfa(3): mov %rcx,(%rsi)
5dfd(4): imul %r9,%rcx
5e01(3): mov %rcx,%rsi
5e04(5): jmp 0xffffff5c(%rip)
5e09(7): nop 0x0(%rax)
5e10(3): test %rcx,%rcx
5e13(2): jz 0x25(%rip)
5e15(3): mov %rcx,%rax
5e18(3): mul %rax,%r9,%rdx
5e1b(3): seto %dl
5e1e(3): test %rax,%rax
5e21(3): movzx %dl,%edx
5e24(2): js 0x7(%rip)
5e26(3): test %rdx,%rdx
5e29(2): jz 0xffffffd1(%rip)
5e2b(4): sub $0x8,%rsp
5e2f(5): call 0x121(%rip)
5e34(4): nop 0x0(%rax)
5e38(2): xor %edx,%edx
5e3a(5): mov $0x80,%eax
5e3f(3): xor %r8d,%r8d
5e42(3): div %r9,%rax
5e45(3): test %rax,%rax
5e48(4): setz %r8b
5e4c(4): lea 0x0(%r8,%rax,1),%rcx
5e50(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5e60(3): test %rdi,%rdi
5e63(3): mov (%rsi),%rax
5e66(2): jz 0x2a(%rip)
5e68(a): mov $0x6148914691236517203,%rdx
5e72(3): cmp %rdx,%rax
5e75(2): jnbe 0x2c(%rip)
5e77(3): mov %rax,%rdx
5e7a(3): shr $0x1,%rdx
5e7d(5): lea 0x1(%rdx,%rax,1),%rax
5e82(3): mov %rax,(%rsi)
5e85(3): mov %rax,%rsi
5e88(5): jmp 0xfffffed8(%rip)
5e8d(3): nop (%rax)
5e90(3): test %rax,%rax
5e93(5): mov $0x80,%edx
5e98(4): cmove %rdx,%rax
5e9c(3): test %rax,%rax
5e9f(2): jns 0xffffffe3(%rip)
5ea1(4): sub $0x8,%rsp
5ea5(5): call 0xab(%rip)

"xzalloc" :
5eb0(1): push %rbx
5eb1(3): mov %rdi,%rbx
5eb4(5): call 0xfffffe4c(%rip)
5eb9(3): mov %rbx,%rdx
5ebc(2): xor %esi,%esi
5ebe(3): mov %rax,%rdi
5ec1(1): pop %rbx
5ec2(5): jmp 0xffffbc0e(%rip)

"xcalloc" :
5ed0(3): mov %rdi,%rax
5ed3(4): sub $0x8,%rsp
5ed7(3): mul %rax,%rsi,%rdx
5eda(3): seto %dl
5edd(3): test %rax,%rax
5ee0(2): js 0x19(%rip)
5ee2(3): movzx %dl,%edx
5ee5(3): test %rdx,%rdx
5ee8(2): jnz 0x11(%rip)
5eea(5): call 0xffffbc46(%rip)
5eef(3): test %rax,%rax
5ef2(2): jz 0x7(%rip)
5ef4(4): add $0x8,%rsp
5ef8(1): ret near (%rsp)
5ef9(5): call 0x57(%rip)

"xmemdup" :
5f00(1): push %rbp
5f01(1): push %rbx
5f02(3): mov %rdi,%rbp
5f05(3): mov %rsi,%rdi
5f08(3): mov %rsi,%rbx
5f0b(4): sub $0x8,%rsp
5f0f(5): call 0xfffffdf1(%rip)
5f14(4): add $0x8,%rsp
5f18(3): mov %rbx,%rdx
5f1b(3): mov %rbp,%rsi
5f1e(1): pop %rbx
5f1f(1): pop %rbp
5f20(3): mov %rax,%rdi
5f23(5): jmp 0xffffbc2d(%rip)

"xstrdup" :
5f30(1): push %rbx
5f31(3): mov %rdi,%rbx
5f34(5): call 0xffffbadc(%rip)
5f39(3): mov %rbx,%rdi
5f3c(4): lea 0x1(%rax),%rsi
5f40(1): pop %rbx
5f41(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5f50(7): lea 0x5af8(%rip),%rsi
5f57(4): sub $0x8,%rsp
5f5b(5): mov $0x5,%edx
5f60(2): xor %edi,%edi
5f62(5): call 0xffffba8e(%rip)
5f67(6): mov 0x2080ab(%rip),%edi
5f6d(7): lea 0x45cf(%rip),%rdx
5f74(3): mov %rax,%rcx
5f77(2): xor %esi,%esi
5f79(2): xor %eax,%eax
5f7b(5): call 0xffffbcc5(%rip)
5f80(5): call 0xffffb9a0(%rip)

"xfts_open" :
5f90(4): sub $0x8,%rsp
5f94(6): or $0x200,%esi
5f9a(5): call 0x1a76(%rip)
5f9f(3): test %rax,%rax
5fa2(2): jz 0xe(%rip)
5fa4(4): add $0x8,%rsp
5fa8(1): ret near (%rsp)
5fa9(7): nop 0x0(%rax)
5fb0(5): call 0xffffb980(%rip)
5fb5(3): cmp $0x16,(%rax)
5fb8(2): jz 0x8(%rip)
5fba(5): call 0xffffff96(%rip)
5fbf(1): nop 
5fc0(7): lea 0x5ac9(%rip),%rcx
5fc7(7): lea 0x5a92(%rip),%rsi
5fce(7): lea 0x5aa8(%rip),%rdi
5fd5(5): mov $0x29,%edx
5fda(5): call 0xffffbae6(%rip)

"cycle_warning_required" :
5fe0(3): mov 0x48(%rdi),%edx
5fe3(5): mov $0x1,%eax
5fe8(3): and $0x11,%edx
5feb(3): cmp $0x10,%edx
5fee(2): jz 0x9(%rip)
5ff0(2): xor %eax,%eax
5ff2(3): cmp $0x11,%edx
5ff5(2): jz 0xb(%rip)
5ff7(2): REP ret near (%rsp)
5ff9(7): nop 0x0(%rax)
6000(5): cmp $0x0,0x58(%rsi)
6005(3): setnz %al
6008(1): ret near (%rsp)

"xstrtoul" :
6010(2): push %r15
6012(2): push %r14
6014(2): push %r13
6016(2): push %r12
6018(1): push %rbp
6019(1): push %rbx
601a(4): sub $0x28,%rsp
601e(9): mov $0x28,%rax
6027(5): mov %rax,0x18(%rsp)
602c(2): xor %eax,%eax
602e(3): cmp $0x24,%edx
6031(6): jnbe 0x364(%rip)
6037(5): lea 0x10(%rsp),%rax
603c(3): mov %rsi,%r15
603f(3): test %rsi,%rsi
6042(3): mov %rdi,%rbp
6045(4): mov %edx,0x8(%rsp)
6049(3): mov %rcx,%r14
604c(3): mov %r8,%r13
604f(4): cmove %rax,%r15
6053(5): call 0xffffb8dd(%rip)
6058(6): mov $0x0,(%rax)
605e(3): mov %rax,%r12
6061(4): movzx 0x0(%rbp),%ebx
6065(5): call 0xffffbcbb(%rip)
606a(4): mov 0x8(%rsp),%edx
606e(3): mov (%rax),%rsi
6071(3): mov %rbp,%rax
6074(2): jmp 0x13(%rip)
6076(a): nop 0x0(%rax,%rax,1)
6080(4): add $0x1,%rax
6084(3): movzx (%rax),%ebx
6087(3): movzx %bl,%ecx
608a(5): test $0x20,0x1(%rsi,%rcx,2)
608f(2): jnz 0xfffffff1(%rip)
6091(3): cmp $0x2d,%bl
6094(2): jz 0x54(%rip)
6096(3): mov %r15,%rsi
6099(3): mov %rbp,%rdi
609c(5): call 0xffffbbf4(%rip)
60a1(3): mov (%r15),%rcx
60a4(3): mov %rax,%rbx
60a7(3): cmp %rbp,%rcx
60aa(2): jz 0x2e(%rip)
60ac(4): mov (%r12),%eax
60b0(2): test %eax,%eax
60b2(2): jz 0x66(%rip)
60b4(3): cmp $0x22,%eax
60b7(5): mov $0x1,%ebp
60bc(2): jnz 0x2c(%rip)
60be(3): test %r13,%r13
60c1(2): jz 0xb(%rip)
60c3(4): movzx (%rcx),%r12d
60c7(3): test %r12b,%r12b
60ca(2): jnz 0x7d(%rip)
60cc(3): mov %rbx,(%r14)
60cf(2): jmp 0x1e(%rip)
60d1(7): nop 0x0(%rax)
60d8(3): test %r13,%r13
60db(5): mov %rcx,0x8(%rsp)
60e0(2): jnz 0x40(%rip)
60e2(6): nop 0x0(%rax,%rax,1)
60e8(5): mov $0x4,%ebp
60ed(5): mov 0x18(%rsp),%rdi
60f2(9): xor $0x28,%rdi
60fb(2): mov %ebp,%eax
60fd(6): jnz 0x293(%rip)
6103(4): add $0x28,%rsp
6107(1): pop %rbx
6108(1): pop %rbp
6109(2): pop %r12
610b(2): pop %r13
610d(2): pop %r14
610f(2): pop %r15
6111(1): ret near (%rsp)
6112(6): nop 0x0(%rax,%rax,1)
6118(2): xor %ebp,%ebp
611a(2): jmp 0xffffffa4(%rip)
611c(4): nop 0x0(%rax)
6120(5): movzx 0x0(%rbp),%r12d
6125(3): test %r12b,%r12b
6128(2): jz 0xffffffc0(%rip)
612a(4): movsx %r12b,%esi
612e(3): mov %r13,%rdi
6131(2): xor %ebp,%ebp
6133(5): call 0xffffb93d(%rip)
6138(3): test %rax,%rax
613b(5): mov $0x1,%ebx
6140(5): mov 0x8(%rsp),%rcx
6145(2): jz 0xffffffa3(%rip)
6147(4): movsx %r12b,%esi
614b(3): mov %r13,%rdi
614e(5): mov %rcx,0x8(%rsp)
6153(5): call 0xffffb91d(%rip)
6158(3): test %rax,%rax
615b(5): mov 0x8(%rsp),%rcx
6160(6): jz 0xcc(%rip)
6166(5): lea 0xffffffbb(%r12),%eax
616b(2): cmp $0x2f,%al
616d(2): jnbe 0x53(%rip)
616f(a): mov $0x142129060940101,%rdx
6179(4): bt %rax,%rdx
617d(2): jnb 0x43(%rip)
617f(5): mov $0x30,%esi
6184(3): mov %r13,%rdi
6187(5): mov %rcx,0x8(%rsp)
618c(5): call 0xffffb8e4(%rip)
6191(3): test %rax,%rax
6194(5): mov 0x8(%rsp),%rcx
6199(2): jz 0x27(%rip)
619b(4): movzx 0x1(%rcx),%eax
619f(2): cmp $0x44,%al
61a1(2): jz 0xe(%rip)
61a3(2): cmp $0x69,%al
61a5(6): jz 0x1d3(%rip)
61ab(2): cmp $0x42,%al
61ad(2): jnz 0x13(%rip)
61af(5): mov $0x2,%edi
61b4(5): mov $0x3e8,%esi
61b9(2): jmp 0x11(%rip)
61bb(5): nop 0x0(%rax,%rax,1)
61c0(5): mov $0x1,%edi
61c5(5): mov $0x400,%esi
61ca(4): sub $0x42,%r12d
61ce(4): cmp $0x35,%r12b
61d2(2): jnbe 0x5a(%rip)
61d4(7): lea 0x590d(%rip),%rdx
61db(4): movzx %r12b,%r12d
61df(4): movsxd 0x0(%rdx,%r12,4),%rax
61e3(3): add %rdx,%rax
61e6(2): jmp %rax
61e8(3): mov %rbx,%rax
61eb(3): mul %rax,%rsi,%rdx
61ee(6): jo 0x1f3(%rip)
61f4(3): xor %r8d,%r8d
61f7(3): mul %rax,%rsi,%rdx
61fa(6): jo 0x1d8(%rip)
6200(3): mov %rax,%rbx
6203(3): or %r8d,%ebp
6206(a): nop 0x0(%rax,%rax,1)
6210(3): movsxd %edi,%rdi
6213(2): mov %ebp,%eax
6215(3): add %rdi,%rcx
6218(3): or $0x2,%eax
621b(3): mov %rcx,(%r15)
621e(3): cmp $0x0,(%rcx)
6221(3): mov %rbx,(%r14)
6224(3): cmovne %eax,%ebp
6227(5): jmp 0xfffffec6(%rip)
622c(3): mov %rbx,(%r14)
622f(3): or $0x2,%ebp
6232(5): jmp 0xfffffebb(%rip)
6237(5): mov $0x2,%edx
623c(3): mov %rdx,%rax
623f(3): mul %rax,%rbx,%rdx
6242(6): jo 0x9c(%rip)
6248(3): add %rbx,%rbx
624b(2): jmp 0xffffffc5(%rip)
624d(5): mov $0x200,%edx
6252(3): mov %rdx,%rax
6255(3): mul %rax,%rbx,%rdx
6258(6): jo 0x86(%rip)
625e(4): shl/sal $0x9,%rbx
6262(2): jmp 0xffffffae(%rip)
6264(6): mov $0x7,%r8d
626a(3): xor %r9d,%r9d
626d(3): nop (%rax)
6270(3): mov %rbx,%rax
6273(3): mul %rax,%rsi,%rdx
6276(3): mov %rax,%rbx
6279(6): jo 0x195(%rip)
627f(4): sub $0x1,%r8d
6283(2): jnz 0xffffffed(%rip)
6285(3): or %r9d,%ebp
6288(2): jmp 0xffffff88(%rip)
628a(6): mov $0x8,%r8d
6290(3): xor %r9d,%r9d
6293(5): nop 0x0(%rax,%rax,1)
6298(3): mov %rbx,%rax
629b(3): mul %rax,%rsi,%rdx
629e(3): mov %rax,%rbx
62a1(6): jo 0x14f(%rip)
62a7(4): sub $0x1,%r8d
62ab(2): jnz 0xffffffed(%rip)
62ad(2): jmp 0xffffffd8(%rip)
62af(6): mov $0x4,%r8d
62b5(3): xor %r9d,%r9d
62b8(3): mov %rbx,%rax
62bb(3): mul %rax,%rsi,%rdx
62be(3): mov %rax,%rbx
62c1(6): jo 0x102(%rip)
62c7(4): sub $0x1,%r8d
62cb(2): jnz 0xffffffed(%rip)
62cd(2): jmp 0xffffffb8(%rip)
62cf(3): mov %rbx,%rax
62d2(3): mul %rax,%rsi,%rdx
62d5(3): mov %rax,%rbx
62d8(6): jno 0xffffff38(%rip)
62de(5): mov $0x1,%ebp
62e3(4): or $0xffffffff,%rbx
62e7(5): jmp 0xffffff29(%rip)
62ec(4): nop 0x0(%rax)
62f0(6): mov $0x5,%r8d
62f6(3): xor %r9d,%r9d
62f9(3): mov %rbx,%rax
62fc(3): mul %rax,%rsi,%rdx
62ff(3): mov %rax,%rbx
6302(6): jo 0xfd(%rip)
6308(4): sub $0x1,%r8d
630c(2): jnz 0xffffffed(%rip)
630e(5): jmp 0xffffff77(%rip)
6313(6): mov $0x6,%r8d
6319(3): xor %r9d,%r9d
631c(3): mov %rbx,%rax
631f(3): mul %rax,%rsi,%rdx
6322(3): mov %rax,%rbx
6325(6): jo 0x8f(%rip)
632b(4): sub $0x1,%r8d
632f(2): jnz 0xffffffed(%rip)
6331(5): jmp 0xffffff54(%rip)
6336(5): mov $0x400,%edx
633b(3): mov %rdx,%rax
633e(3): mul %rax,%rbx,%rdx
6341(2): jo 0xffffff9d(%rip)
6343(4): shl/sal $0xa,%rbx
6347(5): jmp 0xfffffec9(%rip)
634c(3): mov %rbx,%rax
634f(3): mul %rax,%rsi,%rdx
6352(6): jo 0xcb(%rip)
6358(3): xor %r8d,%r8d
635b(3): mul %rax,%rsi,%rdx
635e(6): jno 0xfffffe99(%rip)
6364(6): mov $0x1,%r8d
636a(4): or $0xffffffff,%rax
636e(5): jmp 0xfffffe89(%rip)
6373(5): nop 0x0(%rax,%rax,1)
6378(2): xor %edi,%edi
637a(4): cmp $0x42,0x2(%rcx)
637e(5): mov $0x400,%esi
6383(4): setz %dil
6387(4): lea 0x1(%rdi,%rdi,1),%edi
638b(5): jmp 0xfffffe3f(%rip)
6390(5): call 0xffffb6b0(%rip)
6395(7): lea 0x5824(%rip),%rcx
639c(7): lea 0x56fd(%rip),%rsi
63a3(7): lea 0x5716(%rip),%rdi
63aa(5): mov $0x54,%edx
63af(5): call 0xffffb711(%rip)
63b4(6): mov $0x1,%r9d
63ba(4): or $0xffffffff,%rbx
63be(5): jmp 0xffffff6d(%rip)
63c3(6): mov $0x1,%r9d
63c9(4): or $0xffffffff,%rbx
63cd(5): jmp 0xfffffefa(%rip)
63d2(6): mov $0x1,%r8d
63d8(4): or $0xffffffff,%rbx
63dc(5): jmp 0xfffffe27(%rip)
63e1(4): or $0xffffffff,%rax
63e5(6): mov $0x1,%r8d
63eb(5): jmp 0xfffffe0c(%rip)
63f0(6): mov $0x1,%r9d
63f6(4): or $0xffffffff,%rbx
63fa(5): jmp 0xfffffead(%rip)
63ff(6): mov $0x1,%r9d
6405(4): or $0xffffffff,%rbx
6409(5): jmp 0xfffffeff(%rip)
640e(6): mov $0x1,%r9d
6414(4): or $0xffffffff,%rbx
6418(5): jmp 0xfffffe67(%rip)
641d(6): mov $0x1,%r8d
6423(4): or $0xffffffff,%rax
6427(5): jmp 0xffffff34(%rip)

"AD_compare" :
6430(2): xor %eax,%eax
6432(4): mov 0x8(%rsi),%rdx
6436(4): cmp %rdx,0x8(%rdi)
643a(2): jz 0x6(%rip)
643c(2): REP ret near (%rsp)
643e(2): nop 
6440(3): mov (%rsi),%rax
6443(3): cmp %rax,(%rdi)
6446(3): setz %al
6449(1): ret near (%rsp)

"AD_hash" :
6450(4): mov 0x8(%rdi),%rax
6454(2): xor %edx,%edx
6456(3): div %rsi,%rax
6459(3): mov %rdx,%rax
645c(1): ret near (%rsp)

"dev_type_hash" :
6460(3): mov (%rdi),%rax
6463(2): xor %edx,%edx
6465(3): div %rsi,%rax
6468(3): mov %rdx,%rax
646b(1): ret near (%rsp)

"dev_type_compare" :
6470(3): mov (%rsi),%rax
6473(3): cmp %rax,(%rdi)
6476(3): setz %al
6479(1): ret near (%rsp)

"fts_compare_ino" :
6480(3): mov (%rdi),%rdx
6483(3): mov (%rsi),%rax
6486(7): mov 0x80(%rax),%rax
648d(7): cmp %rax,0x80(%rdx)
6494(2): jb 0xc(%rip)
6496(3): setnbe %al
6499(3): movzx %al,%eax
649c(1): ret near (%rsp)
649d(3): nop (%rax)
64a0(5): mov $0xffffffff,%eax
64a5(1): ret near (%rsp)

"fts_stat" :
64b0(2): push %r12
64b2(1): push %rbp
64b3(3): mov %rsi,%rbp
64b6(1): push %rbx
64b7(5): cmp $0x0,0x58(%rbp)
64bc(4): lea 0x78(%rsi),%rbx
64c0(3): mov %rdi,%r12
64c3(3): mov 0x48(%rdi),%eax
64c6(4): mov 0x30(%rsi),%rsi
64ca(2): jnz 0x66(%rip)
64cc(2): test $0x1,%al
64ce(2): jz 0x62(%rip)
64d0(3): mov %rbx,%rdx
64d3(5): mov $0x1,%edi
64d8(5): call 0xffffb6a8(%rip)
64dd(2): test %eax,%eax
64df(2): jz 0x7c(%rip)
64e1(5): call 0xffffb44f(%rip)
64e6(3): mov %rax,%r12
64e9(2): mov (%rax),%eax
64eb(3): cmp $0x2,%eax
64ee(6): jz 0x112(%rip)
64f4(4): lea 0x8(%rbx),%rdi
64f8(3): mov %eax,0x40(%rbp)
64fb(8): mov $0x0,0x78(%rbp)
6503(b): mov $0x0,0x88(%rbx)
650e(2): xor %eax,%eax
6510(4): and $0xfffffff8,%rdi
6514(3): sub %rdi,%rbx
6517(6): lea 0x90(%rbx),%ecx
651d(3): shr $0x3,%ecx
6520(3): REP stosd %rax,rdi(%es,10)
6523(5): mov $0xa,%eax
6528(1): pop %rbx
6529(1): pop %rbp
652a(2): pop %r12
652c(1): ret near (%rsp)
652d(3): nop (%rax)
6530(2): test $0x2,%al
6532(2): jnz 0xffffff9e(%rip)
6534(2): test %dl,%dl
6536(2): jnz 0xffffff9a(%rip)
6538(3): mov %rsi,%rdx
653b(5): mov 0x2c(%r12),%esi
6540(6): mov $0x100,%r8d
6546(3): mov %rbx,%rcx
6549(5): mov $0x1,%edi
654e(5): call 0xffffb542(%rip)
6553(2): test %eax,%eax
6555(6): jnz 0x9b(%rip)
655b(6): mov 0x90(%rbp),%eax
6561(5): and $0xf000,%eax
6566(5): cmp $0x4000,%eax
656b(2): jz 0x25(%rip)
656d(5): cmp $0xa000,%eax
6572(6): jz 0xd6(%rip)
6578(5): cmp $0x8000,%eax
657d(3): setz %al
6580(3): movzx %al,%eax
6583(1): pop %rbx
6584(4): lea 0x3(%rax,%rax,4),%eax
6588(1): pop %rbp
6589(2): pop %r12
658b(1): ret near (%rsp)
658c(4): nop 0x0(%rax)
6590(7): mov 0x88(%rbp),%rax
6597(4): cmp $0x1,%rax
659b(6): jbe 0x85(%rip)
65a1(5): cmp $0x0,0x58(%rbp)
65a6(2): jle 0x7a(%rip)
65a8(6): test $0x20,0x48(%r12)
65ae(4): lea 0xfffffffe(%rax),%rdx
65b2(4): cmove %rdx,%rax
65b6(7): cmp $0x2e,0x108(%rbp)
65bd(4): mov %rax,0x68(%rbp)
65c1(5): mov $0x1,%eax
65c6(6): jnz 0xffffff62(%rip)
65cc(7): cmp $0x0,0x109(%rbp)
65d3(6): jnz 0x85(%rip)
65d9(5): cmp $0x1,0x58(%rbp)
65de(2): sbb %eax,%eax
65e0(3): and $0xfc,%eax
65e3(3): add $0x5,%eax
65e6(5): jmp 0xffffff42(%rip)
65eb(5): nop 0x0(%rax,%rax,1)
65f0(5): call 0xffffb340(%rip)
65f5(2): mov (%rax),%eax
65f7(5): jmp 0xfffffefd(%rip)
65fc(4): nop 0x0(%rax)
6600(4): mov 0x30(%rbp),%rsi
6604(3): mov %rbx,%rdx
6607(5): mov $0x1,%edi
660c(5): call 0xffffb414(%rip)
6611(2): test %eax,%eax
6613(2): jz 0x1d(%rip)
6615(4): mov (%r12),%eax
6619(5): jmp 0xfffffedb(%rip)
661e(2): nop 
6620(7): mov $0xffffffff,%rax
6627(2): jmp 0xffffff8f(%rip)
6629(7): nop 0x0(%rax)
6630(8): mov $0x0,(%r12)
6638(5): mov $0xd,%eax
663d(5): jmp 0xfffffeeb(%rip)
6642(6): nop 0x0(%rax,%rax,1)
6648(5): mov $0xc,%eax
664d(5): jmp 0xfffffedb(%rip)
6652(6): nop 0x0(%rax,%rax,1)
6658(6): mov 0x108(%rbp),%edx
665e(6): and $0xffff00,%edx
6664(6): cmp $0x2e00,%edx
666a(6): jnz 0xfffffebe(%rip)
6670(5): jmp 0xffffff69(%rip)

"fts_sort" :
6680(2): push %r13
6682(2): push %r12
6684(3): mov %rdx,%r12
6687(1): push %rbp
6688(1): push %rbx
6689(3): mov %rdi,%rbp
668c(3): mov %rsi,%rbx
668f(4): sub $0x8,%rsp
6693(4): cmp %rdx,0x38(%rbp)
6697(4): mov 0x40(%rdi),%r13
669b(4): mov 0x10(%rdi),%rdi
669f(2): jnb 0x36(%rip)
66a1(4): lea 0x28(%rdx),%rsi
66a5(a): mov $0x2305843009213693951,%rax
66af(3): cmp %rax,%rsi
66b2(4): mov %rsi,0x38(%rbp)
66b6(6): jnbe 0x9e(%rip)
66bc(4): shl/sal $0x3,%rsi
66c0(5): call 0xffffb540(%rip)
66c5(3): test %rax,%rax
66c8(3): mov %rax,%rdi
66cb(6): jz 0x85(%rip)
66d1(4): mov %rax,0x10(%rbp)
66d5(3): test %rbx,%rbx
66d8(2): jz 0x19(%rip)
66da(3): mov %rdi,%rdx
66dd(3): nop (%rax)
66e0(4): add $0x8,%rdx
66e4(4): mov %rbx,0xfffffff8(%rdx)
66e8(4): mov 0x10(%rbx),%rbx
66ec(3): test %rbx,%rbx
66ef(2): jnz 0xfffffff1(%rip)
66f1(3): mov %r13,%rcx
66f4(5): mov $0x8,%edx
66f9(3): mov %r12,%rsi
66fc(5): call 0xffffb284(%rip)
6701(4): mov 0x10(%rbp),%r8
6705(3): mov %r12,%rcx
6708(4): sub $0x1,%rcx
670c(3): mov (%r8),%rax
670f(2): jz 0x71(%rip)
6711(3): mov %rax,%rdi
6714(3): mov %r8,%rdx
6717(2): jmp 0xc(%rip)
6719(7): nop 0x0(%rax)
6720(3): mov (%rdx),%rdi
6723(4): mov 0x8(%rdx),%rsi
6727(4): add $0x8,%rdx
672b(4): sub $0x1,%rcx
672f(4): mov %rsi,0x10(%rdi)
6733(2): jnz 0xffffffed(%rip)
6735(5): mov 0xfffffff8(%r8,%r12,8),%rdx
673a(8): mov $0x0,0x10(%rdx)
6742(4): add $0x8,%rsp
6746(1): pop %rbx
6747(1): pop %rbp
6748(2): pop %r12
674a(2): pop %r13
674c(1): ret near (%rsp)
674d(3): nop (%rax)
6750(4): mov 0x10(%rbp),%rdi
6754(5): call 0xffffb5dc(%rip)
6759(8): mov $0x0,0x10(%rbp)
6761(8): mov $0x0,0x38(%rbp)
6769(4): add $0x8,%rsp
676d(3): mov %rbx,%rax
6770(1): pop %rbx
6771(1): pop %rbp
6772(2): pop %r12
6774(2): pop %r13
6776(1): ret near (%rsp)
6777(9): nop 0x0(%rax,%rax,1)
6780(3): mov %rax,%rdx
6783(2): jmp 0xffffffb7(%rip)

"fts_alloc" :
6790(2): push %r13
6792(2): push %r12
6794(3): mov %rdi,%r12
6797(1): push %rbp
6798(7): lea 0x110(%rdx),%rdi
679f(1): push %rbx
67a0(3): mov %rsi,%r13
67a3(3): mov %rdx,%rbp
67a6(4): sub $0x8,%rsp
67aa(4): and $0xfffffff8,%rdi
67ae(5): call 0xffffb3f2(%rip)
67b3(3): test %rax,%rax
67b6(3): mov %rax,%rbx
67b9(2): jz 0x53(%rip)
67bb(7): lea 0x108(%rax),%rdi
67c2(3): mov %rbp,%rdx
67c5(3): mov %r13,%rsi
67c8(5): call 0xffffb388(%rip)
67cd(5): mov 0x20(%r12),%rax
67d2(8): mov $0x0,0x108(%rbx,%rbp,1)
67da(4): mov %rbp,0x60(%rbx)
67de(4): mov %r12,0x50(%rbx)
67e2(7): mov $0x0,0x40(%rbx)
67e9(8): mov $0x0,0x18(%rbx)
67f1(4): mov %rax,0x38(%rbx)
67f5(7): mov $0x30000,0x72(%rbx)
67fc(8): mov $0x0,0x20(%rbx)
6804(8): mov $0x0,0x28(%rbx)
680c(4): add $0x8,%rsp
6810(3): mov %rbx,%rax
6813(1): pop %rbx
6814(1): pop %rbp
6815(2): pop %r12
6817(2): pop %r13
6819(1): ret near (%rsp)

"fts_lfree" :
6820(3): test %rdi,%rdi
6823(2): jz 0x3d(%rip)
6825(1): push %rbp
6826(1): push %rbx
6827(3): mov %rdi,%rbx
682a(4): sub $0x8,%rsp
682e(2): nop 
6830(4): mov 0x18(%rbx),%rdi
6834(4): mov 0x10(%rbx),%rbp
6838(3): test %rdi,%rdi
683b(2): jz 0x7(%rip)
683d(5): call 0xffffb2c3(%rip)
6842(3): mov %rbx,%rdi
6845(3): mov %rbp,%rbx
6848(5): call 0xffffb4e8(%rip)
684d(3): test %rbp,%rbp
6850(2): jnz 0xffffffe0(%rip)
6852(4): add $0x8,%rsp
6856(1): pop %rbx
6857(1): pop %rbp
6858(1): ret near (%rsp)
6859(7): nop 0x0(%rax)
6860(2): REP ret near (%rsp)

"fd_ring_clear" :
6870(1): push %rbx
6871(3): mov %rdi,%rbx
6874(2): jmp 0x18(%rip)
6876(a): nop 0x0(%rax,%rax,1)
6880(3): mov %rbx,%rdi
6883(5): call 0x359d(%rip)
6888(2): test %eax,%eax
688a(2): jns 0x16(%rip)
688c(3): mov %rbx,%rdi
688f(5): call 0x3541(%rip)
6894(2): test %al,%al
6896(2): jz 0xffffffea(%rip)
6898(1): pop %rbx
6899(1): ret near (%rsp)
689a(6): nop 0x0(%rax,%rax,1)
68a0(2): mov %eax,%edi
68a2(5): call 0xffffb23e(%rip)
68a7(2): jmp 0xffffffe5(%rip)

"filesystem_type" :
68b0(2): push %r13
68b2(2): push %r12
68b4(1): push %rbp
68b5(1): push %rbx
68b6(7): sub $0x98,%rsp
68bd(4): mov 0x50(%rdi),%rbx
68c1(9): mov $0x28,%rax
68ca(8): mov %rax,0x88(%rsp)
68d2(2): xor %eax,%eax
68d4(4): test $0x2,0x49(%rbx)
68d8(2): jz 0x6a(%rip)
68da(4): mov 0x50(%rbx),%r12
68de(3): mov %rdi,%rbp
68e1(3): mov %esi,%r13d
68e4(3): test %r12,%r12
68e7(2): jz 0x29(%rip)
68e9(4): mov 0x78(%rbp),%rax
68ed(3): mov %rsp,%rsi
68f0(3): mov %r12,%rdi
68f3(4): mov %rax,(%rsp)
68f7(5): call 0x27d9(%rip)
68fc(3): test %rax,%rax
68ff(2): jz 0x3e(%rip)
6901(4): mov 0x8(%rax),%rbx
6905(2): jmp 0x3f(%rip)
6907(9): nop 0x0(%rax,%rax,1)
6910(7): mov 0x2076b9(%rip),%r8
6917(7): lea 0xfffffb52(%rip),%rcx
691e(7): lea 0xfffffb3b(%rip),%rdx
6925(2): xor %esi,%esi
6927(5): mov $0xd,%edi
692c(5): call 0x2a14(%rip)
6931(3): test %rax,%rax
6934(3): mov %rax,%r12
6937(4): mov %rax,0x50(%rbx)
693b(2): jnz 0xffffffae(%rip)
693d(3): test %r13d,%r13d
6940(2): jns 0x30(%rip)
6942(2): xor %ebx,%ebx
6944(8): mov 0x88(%rsp),%rdx
694c(9): xor $0x28,%rdx
6955(3): mov %rbx,%rax
6958(2): jnz 0x7a(%rip)
695a(7): add $0x98,%rsp
6961(1): pop %rbx
6962(1): pop %rbp
6963(2): pop %r12
6965(2): pop %r13
6967(1): ret near (%rsp)
6968(8): nop 0x0(%rax,%rax,1)
6970(5): lea 0x10(%rsp),%rsi
6975(3): mov %r13d,%edi
6978(5): call 0xffffb328(%rip)
697d(2): test %eax,%eax
697f(2): jnz 0xffffffc3(%rip)
6981(3): test %r12,%r12
6984(5): mov 0x10(%rsp),%rbx
6989(2): jz 0xffffffbb(%rip)
698b(5): mov $0x10,%edi
6990(5): call 0xffffb210(%rip)
6995(3): test %rax,%rax
6998(3): mov %rax,%r13
699b(2): jz 0xffffffa9(%rip)
699d(4): mov 0x78(%rbp),%rax
69a1(4): mov %rbx,0x8(%r13)
69a5(3): mov %r13,%rsi
69a8(3): mov %r12,%rdi
69ab(4): mov %rax,0x0(%r13)
69af(5): call 0x3191(%rip)
69b4(3): test %rax,%rax
69b7(2): jz 0x11(%rip)
69b9(3): cmp %rax,%r13
69bc(2): jnz 0x1b(%rip)
69be(5): mov 0x10(%rsp),%rbx
69c3(5): jmp 0xffffff81(%rip)
69c8(3): mov %r13,%rdi
69cb(5): call 0xffffb365(%rip)
69d0(2): jmp 0xffffffee(%rip)
69d2(5): call 0xffffb06e(%rip)
69d7(5): call 0xffffaf49(%rip)

"leaf_optimization" :
69e0(4): sub $0x8,%rsp
69e4(5): call 0xfffffecc(%rip)
69e9(6): cmp $0x52654973,%rax
69ef(2): jz 0x51(%rip)
69f1(2): jle 0x2f(%rip)
69f3(6): cmp $0x58465342,%rax
69f9(2): jz 0x47(%rip)
69fb(5): mov $0xff534d42,%edx
6a00(3): cmp %rdx,%rax
6a03(2): jz 0x32(%rip)
6a05(6): cmp $0x5346414f,%rax
6a0b(2): jz 0x2a(%rip)
6a0d(5): mov $0x1,%eax
6a12(4): add $0x8,%rsp
6a16(1): ret near (%rsp)
6a17(9): nop 0x0(%rax,%rax,1)
6a20(6): cmp $0x6969,%rax
6a26(2): jz 0xf(%rip)
6a28(6): cmp $0x9fa0,%rax
6a2e(2): jz 0x7(%rip)
6a30(3): test %rax,%rax
6a33(2): jnz 0xffffffda(%rip)
6a35(2): xor %eax,%eax
6a37(4): add $0x8,%rsp
6a3b(1): ret near (%rsp)
6a3c(4): nop 0x0(%rax)
6a40(5): mov $0x2,%eax
6a45(4): add $0x8,%rsp
6a49(1): ret near (%rsp)

"cwd_advance_fd" :
6a50(1): push %rbp
6a51(1): push %rbx
6a52(2): mov %esi,%ebp
6a54(3): mov %rdi,%rbx
6a57(4): sub $0x8,%rsp
6a5b(3): mov 0x2c(%rdi),%esi
6a5e(2): cmp %ebp,%esi
6a60(2): jnz 0x7(%rip)
6a62(3): cmp $0x9c,%esi
6a65(2): jnz 0x4c(%rip)
6a67(2): test %dl,%dl
6a69(2): jnz 0x17(%rip)
6a6b(4): test $0x4,0x48(%rbx)
6a6f(2): jnz 0x6(%rip)
6a71(2): test %esi,%esi
6a73(2): jns 0x2d(%rip)
6a75(3): mov %ebp,0x2c(%rbx)
6a78(4): add $0x8,%rsp
6a7c(1): pop %rbx
6a7d(1): pop %rbp
6a7e(1): ret near (%rsp)
6a7f(1): nop 
6a80(4): lea 0x60(%rbx),%rdi
6a84(5): call 0x335c(%rip)
6a89(2): test %eax,%eax
6a8b(2): js 0xffffffea(%rip)
6a8d(2): mov %eax,%edi
6a8f(5): call 0xffffb051(%rip)
6a94(3): mov %ebp,0x2c(%rbx)
6a97(4): add $0x8,%rsp
6a9b(1): pop %rbx
6a9c(1): pop %rbp
6a9d(1): ret near (%rsp)
6a9e(2): nop 
6aa0(2): mov %esi,%edi
6aa2(5): call 0xffffb03e(%rip)
6aa7(3): mov %ebp,0x2c(%rbx)
6aaa(4): add $0x8,%rsp
6aae(1): pop %rbx
6aaf(1): pop %rbp
6ab0(1): ret near (%rsp)
6ab1(5): call 0xffffae6f(%rip)

"restore_initial_cwd" :
6ac0(1): push %rbp
6ac1(1): push %rbx
6ac2(3): mov %rdi,%rbx
6ac5(4): sub $0x8,%rsp
6ac9(3): mov 0x48(%rdi),%edx
6acc(2): mov %edx,%ebp
6ace(3): and $0x4,%ebp
6ad1(2): jnz 0x47(%rip)
6ad3(3): and $0x2,%dh
6ad6(2): jnz 0x2a(%rip)
6ad8(3): mov 0x28(%rdi),%edi
6adb(2): xor %ebp,%ebp
6add(5): call 0xffffb113(%rip)
6ae2(2): test %eax,%eax
6ae4(4): setnz %bpl
6ae8(4): lea 0x60(%rbx),%rdi
6aec(5): call 0xfffffd84(%rip)
6af1(4): add $0x8,%rsp
6af5(2): mov %ebp,%eax
6af7(1): pop %rbx
6af8(1): pop %rbp
6af9(1): ret near (%rsp)
6afa(6): nop 0x0(%rax,%rax,1)
6b00(5): mov $0x1,%edx
6b05(5): mov $0xffffff9c,%esi
6b0a(5): call 0xffffff46(%rip)
6b0f(2): jmp 0xffffffd9(%rip)
6b11(7): nop 0x0(%rax)
6b18(2): xor %ebp,%ebp
6b1a(2): jmp 0xffffffce(%rip)

"fts_palloc.isra.2" :
6b20(1): push %rbx
6b21(3): mov (%rsi),%rcx
6b24(3): mov %rdi,%rbx
6b27(3): mov (%rdi),%rdi
6b2a(8): lea 0x100(%rcx,%rdx,1),%rax
6b32(3): cmp %rax,%rcx
6b35(2): jnbe 0x23(%rip)
6b37(3): mov %rax,(%rsi)
6b3a(3): mov %rax,%rsi
6b3d(5): call 0xffffb0c3(%rip)
6b42(3): test %rax,%rax
6b45(2): jz 0x33(%rip)
6b47(3): mov %rax,(%rbx)
6b4a(5): mov $0x1,%eax
6b4f(1): pop %rbx
6b50(1): ret near (%rsp)
6b51(7): nop 0x0(%rax)
6b58(5): call 0xffffb1d8(%rip)
6b5d(7): mov $0x0,(%rbx)
6b64(5): call 0xffffadcc(%rip)
6b69(6): mov $0x24,(%rax)
6b6f(2): xor %eax,%eax
6b71(1): pop %rbx
6b72(1): ret near (%rsp)
6b73(5): nop 0x0(%rax,%rax,1)
6b78(3): mov (%rbx),%rdi
6b7b(5): call 0xffffb1b5(%rip)
6b80(7): mov $0x0,(%rbx)
6b87(2): xor %eax,%eax
6b89(1): pop %rbx
6b8a(1): ret near (%rsp)

"setup_dir.isra.4" :
6b90(6): and $0x102,%edi
6b96(1): push %rbx
6b97(3): mov %rsi,%rbx
6b9a(2): jz 0x36(%rip)
6b9c(7): mov 0x20742d(%rip),%r8
6ba3(7): lea 0xfffff886(%rip),%rcx
6baa(7): lea 0xfffff89f(%rip),%rdx
6bb1(2): xor %esi,%esi
6bb3(5): mov $0x1f,%edi
6bb8(5): call 0x2788(%rip)
6bbd(3): test %rax,%rax
6bc0(3): mov %rax,(%rbx)
6bc3(3): setnz %al
6bc6(1): pop %rbx
6bc7(1): ret near (%rsp)
6bc8(8): nop 0x0(%rax,%rax,1)
6bd0(5): mov $0x20,%edi
6bd5(5): call 0xffffafcb(%rip)
6bda(3): mov %rax,%rdi
6bdd(3): mov %rax,(%rbx)
6be0(2): xor %eax,%eax
6be2(3): test %rdi,%rdi
6be5(2): jz 0xffffffe1(%rip)
6be7(5): call 0x1d79(%rip)
6bec(5): mov $0x1,%eax
6bf1(1): pop %rbx
6bf2(1): ret near (%rsp)

"diropen.isra.6" :
6c00(3): mov %rdx,%rax
6c03(2): mov %esi,%edx
6c05(3): shl/sal $0xd,%edx
6c08(6): and $0x20000,%edx
6c0e(6): or $0x90900,%edx
6c14(6): and $0x200,%esi
6c1a(2): jnz 0x16(%rip)
6c1c(3): mov %rax,%rdi
6c1f(2): mov %edx,%esi
6c21(2): xor %eax,%eax
6c23(5): jmp 0x1ddd(%rip)
6c28(8): nop 0x0(%rax,%rax,1)
6c30(3): mov %rax,%rsi
6c33(2): xor %eax,%eax
6c35(5): jmp 0x326b(%rip)

"fts_safe_changedir" :
6c40(2): push %r15
6c42(2): push %r14
6c44(3): mov %rsi,%r14
6c47(2): push %r13
6c49(2): push %r12
6c4b(3): mov %rdi,%r13
6c4e(1): push %rbp
6c4f(1): push %rbx
6c50(3): mov %edx,%r12d
6c53(3): mov %rcx,%rbp
6c56(7): sub $0xb8,%rsp
6c5d(3): mov 0x48(%rdi),%ebx
6c60(9): mov $0x28,%rax
6c69(8): mov %rax,0xa8(%rsp)
6c71(2): xor %eax,%eax
6c73(3): mov %ebx,%r9d
6c76(4): and $0x4,%r9d
6c7a(3): test %rcx,%rcx
6c7d(6): jz 0xb3(%rip)
6c83(7): lea 0x4f3f(%rip),%rdx
6c8a(5): mov $0x3,%ecx
6c8f(3): mov %rbp,%rsi
6c92(3): mov %rdx,%rdi
6c95(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6c97(3): setnbe %al
6c9a(2): sbb $0x0,%al
6c9c(2): test %al,%al
6c9e(6): jnz 0x92(%rip)
6ca4(3): test %r9d,%r9d
6ca7(6): jnz 0x8e(%rip)
6cad(3): test %r12d,%r12d
6cb0(6): jns 0x1ea(%rip)
6cb6(3): test $0x2,%bh
6cb9(6): jnz 0x147(%rip)
6cbf(5): mov $0x1,0xf(%rsp)
6cc4(4): mov 0x2c(%r13),%edi
6cc8(3): mov %rbp,%rdx
6ccb(2): mov %ebx,%esi
6ccd(5): call 0xffffff33(%rip)
6cd2(2): test %eax,%eax
6cd4(3): mov %eax,%r15d
6cd7(6): js 0x1b4(%rip)
6cdd(4): mov 0x48(%r13),%ebx
6ce1(3): test $0x2,%bl
6ce4(6): jz 0xa6(%rip)
6cea(6): nop 0x0(%rax,%rax,1)
6cf0(5): lea 0x10(%rsp),%rdx
6cf5(3): mov %r15d,%esi
6cf8(5): mov $0x1,%edi
6cfd(5): call 0xffffaed3(%rip)
6d02(2): test %eax,%eax
6d04(6): jz 0xcc(%rip)
6d0a(5): mov $0xffffffff,%ebx
6d0f(3): test %r12d,%r12d
6d12(2): jns 0x33(%rip)
6d14(5): call 0xffffac1c(%rip)
6d19(3): mov (%rax),%r12d
6d1c(3): mov %rax,%rbp
6d1f(3): mov %r15d,%edi
6d22(5): call 0xffffadbe(%rip)
6d27(4): mov %r12d,0x0(%rbp)
6d2b(2): jmp 0x1a(%rip)
6d2d(3): nop (%rax)
6d30(3): test %r9d,%r9d
6d33(2): jz 0x3d(%rip)
6d35(3): and $0x2,%bh
6d38(2): jz 0xb(%rip)
6d3a(3): test %r12d,%r12d
6d3d(6): jns 0xb3(%rip)
6d43(2): xor %ebx,%ebx
6d45(8): mov 0xa8(%rsp),%rcx
6d4d(9): xor $0x28,%rcx
6d56(2): mov %ebx,%eax
6d58(6): jnz 0x13d(%rip)
6d5e(7): add $0xb8,%rsp
6d65(1): pop %rbx
6d66(1): pop %rbp
6d67(2): pop %r12
6d69(2): pop %r13
6d6b(2): pop %r14
6d6d(2): pop %r15
6d6f(1): ret near (%rsp)
6d70(3): test %r12d,%r12d
6d73(6): js 0x13d(%rip)
6d79(3): test $0x2,%bl
6d7c(3): mov %r12d,%r15d
6d7f(5): mov $0x0,0xf(%rsp)
6d84(6): jnz 0xffffff6c(%rip)
6d8a(3): test %rbp,%rbp
6d8d(2): jz 0x23(%rip)
6d8f(7): lea 0x4e33(%rip),%rdx
6d96(5): mov $0x3,%ecx
6d9b(3): mov %rbp,%rsi
6d9e(3): mov %rdx,%rdi
6da1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6da3(3): setnbe %al
6da6(2): sbb $0x0,%al
6da8(2): test %al,%al
6daa(6): jz 0xffffff46(%rip)
6db0(3): and $0x2,%bh
6db3(6): jnz 0x95(%rip)
6db9(3): mov %r15d,%edi
6dbc(5): call 0xffffae34(%rip)
6dc1(2): mov %eax,%ebx
6dc3(5): jmp 0xffffff4c(%rip)
6dc8(8): nop 0x0(%rax,%rax,1)
6dd0(5): mov 0x10(%rsp),%rax
6dd5(4): cmp %rax,0x78(%r14)
6dd9(6): jz 0x97(%rip)
6ddf(5): call 0xffffab51(%rip)
6de4(6): mov $0x2,(%rax)
6dea(5): jmp 0xffffff20(%rip)
6def(1): nop 
6df0(3): mov %r12d,%edi
6df3(2): xor %ebx,%ebx
6df5(5): call 0xffffaceb(%rip)
6dfa(5): jmp 0xffffff4b(%rip)
6dff(1): nop 
6e00(4): lea 0x60(%r13),%r15
6e04(3): mov %r15,%rdi
6e07(5): call 0x2fc9(%rip)
6e0c(2): test %al,%al
6e0e(4): mov %al,0xf(%rsp)
6e12(6): jnz 0xfffffeb2(%rip)
6e18(3): mov %r15,%rdi
6e1b(5): call 0x3005(%rip)
6e20(2): test %eax,%eax
6e22(3): mov %eax,%r15d
6e25(4): mov 0x48(%r13),%ebx
6e29(6): js 0xfffffe96(%rip)
6e2f(3): test $0x2,%bl
6e32(3): mov %eax,%r12d
6e35(5): mov $0x1,0xf(%rsp)
6e3a(6): jz 0xffffff76(%rip)
6e40(5): jmp 0xfffffeb0(%rip)
6e45(3): nop (%rax)
6e48(6): movzx 0xf(%rsp),%r14d
6e4e(3): mov %r15d,%esi
6e51(3): mov %r13,%rdi
6e54(2): xor %ebx,%ebx
6e56(4): xor $0x1,%r14d
6e5a(4): movzx %r14b,%edx
6e5e(5): call 0xfffffbf2(%rip)
6e63(5): jmp 0xfffffee2(%rip)
6e68(8): nop 0x0(%rax,%rax,1)
6e70(5): mov 0x18(%rsp),%rax
6e75(7): cmp %rax,0x80(%r14)
6e7c(6): jnz 0xffffff63(%rip)
6e82(4): mov 0x48(%r13),%ebx
6e86(5): jmp 0xffffff2a(%rip)
6e8b(5): mov $0xffffffff,%ebx
6e90(5): jmp 0xfffffeb5(%rip)
6e95(5): call 0xffffabab(%rip)
6e9a(3): test $0x2,%bl
6e9d(3): mov %r12d,%r15d
6ea0(5): mov $0x1,0xf(%rsp)
6ea5(6): jz 0xfffffef1(%rip)
6eab(5): jmp 0xfffffe45(%rip)
6eb0(5): mov $0x0,0xf(%rsp)
6eb5(5): jmp 0xfffffe0f(%rip)

"enter_dir.isra.10" :
6ec0(6): and $0x102,%edi
6ec6(2): push %r12
6ec8(3): mov %rsi,%r12
6ecb(1): push %rbp
6ecc(1): push %rbx
6ecd(3): mov %rdx,%rbx
6ed0(2): jz 0x70(%rip)
6ed2(5): mov $0x18,%edi
6ed7(5): call 0xffffacc9(%rip)
6edc(3): test %rax,%rax
6edf(3): mov %rax,%rbp
6ee2(6): jz 0x86(%rip)
6ee8(4): mov 0x78(%rbx),%rax
6eec(4): mov (%r12),%rdi
6ef0(3): mov %rbp,%rsi
6ef3(4): mov %rbx,0x10(%rbp)
6ef7(4): mov %rax,0x0(%rbp)
6efb(7): mov 0x80(%rbx),%rax
6f02(4): mov %rax,0x8(%rbp)
6f06(5): call 0x2c3a(%rip)
6f0b(3): cmp %rax,%rbp
6f0e(3): mov %rax,%r12
6f11(2): jz 0x20(%rip)
6f13(3): mov %rbp,%rdi
6f16(5): call 0xffffae1a(%rip)
6f1b(3): test %r12,%r12
6f1e(2): jz 0x4a(%rip)
6f20(5): mov 0x10(%r12),%rax
6f25(5): mov $0x2,%ecx
6f2a(4): mov %cx,0x70(%rbx)
6f2e(3): mov %rax,(%rbx)
6f31(1): pop %rbx
6f32(5): mov $0x1,%eax
6f37(1): pop %rbp
6f38(2): pop %r12
6f3a(1): ret near (%rsp)
6f3b(5): nop 0x0(%rax,%rax,1)
6f40(4): mov (%r12),%rdi
6f44(4): lea 0x78(%rdx),%rsi
6f48(5): call 0x1a28(%rip)
6f4d(2): test %al,%al
6f4f(2): jz 0xffffffe2(%rip)
6f51(5): mov $0x2,%edx
6f56(3): mov %rbx,(%rbx)
6f59(4): mov %dx,0x70(%rbx)
6f5d(1): pop %rbx
6f5e(1): pop %rbp
6f5f(2): pop %r12
6f61(1): ret near (%rsp)
6f62(6): nop 0x0(%rax,%rax,1)
6f68(1): pop %rbx
6f69(2): xor %eax,%eax
6f6b(1): pop %rbp
6f6c(2): pop %r12
6f6e(1): ret near (%rsp)

"leave_dir.isra.12" :
6f70(4): sub $0x28,%rsp
6f74(3): mov %rsi,%rcx
6f77(9): mov $0x28,%rax
6f80(5): mov %rax,0x18(%rsp)
6f85(2): xor %eax,%eax
6f87(6): and $0x102,%edi
6f8d(2): jnz 0x43(%rip)
6f8f(4): mov 0x8(%rdx),%rax
6f93(3): test %rax,%rax
6f96(2): jz 0x1f(%rip)
6f98(5): cmp $0x0,0x58(%rax)
6f9d(2): js 0x18(%rip)
6f9f(3): mov (%rsi),%rcx
6fa2(5): cmp $0x0,0x10(%rcx)
6fa7(2): jz 0x7c(%rip)
6fa9(7): mov 0x80(%rdx),%rsi
6fb0(3): cmp %rsi,(%rcx)
6fb3(2): jz 0x4d(%rip)
6fb5(5): mov 0x18(%rsp),%rax
6fba(9): xor $0x28,%rax
6fc3(2): jnz 0x5b(%rip)
6fc5(4): add $0x28,%rsp
6fc9(1): ret near (%rsp)
6fca(6): nop 0x0(%rax,%rax,1)
6fd0(4): mov 0x78(%rdx),%rax
6fd4(3): mov (%rcx),%rdi
6fd7(3): mov %rsp,%rsi
6fda(4): mov %rax,(%rsp)
6fde(7): mov 0x80(%rdx),%rax
6fe5(5): mov %rax,0x8(%rsp)
6fea(5): call 0x2bb6(%rip)
6fef(3): test %rax,%rax
6ff2(2): jz 0x31(%rip)
6ff4(3): mov %rax,%rdi
6ff7(5): call 0xffffad39(%rip)
6ffc(2): jmp 0xffffffb9(%rip)
6ffe(2): nop 
7000(4): mov 0x78(%rdx),%rsi
7004(4): cmp %rsi,0x8(%rcx)
7008(2): jnz 0xffffffad(%rip)
700a(4): mov 0x78(%rax),%rdx
700e(7): mov 0x80(%rax),%rax
7015(4): mov %rdx,0x8(%rcx)
7019(3): mov %rax,(%rcx)
701c(2): jmp 0xffffff99(%rip)
701e(5): call 0xffffaa22(%rip)
7023(5): call 0xffffa8fd(%rip)

"fts_build" :
7030(2): push %r15
7032(2): push %r14
7034(3): mov %rdi,%r15
7037(2): push %r13
7039(2): push %r12
703b(1): push %rbp
703c(1): push %rbx
703d(4): sub $0x78,%rsp
7041(3): mov (%rdi),%rbp
7044(9): mov $0x28,%rax
704d(5): mov %rax,0x68(%rsp)
7052(2): xor %eax,%eax
7054(4): mov %esi,0x58(%rsp)
7058(4): mov 0x18(%rbp),%rax
705c(3): test %rax,%rax
705f(5): mov %rax,0x50(%rsp)
7064(6): jz 0x43c(%rip)
706a(3): mov %rax,%rdi
706d(5): call 0xffffaad3(%rip)
7072(2): test %eax,%eax
7074(4): mov %eax,0x64(%rsp)
7078(6): js 0x558(%rip)
707e(5): cmp $0x0,0x40(%r15)
7083(6): jz 0x7d5(%rip)
7089(9): mov $0xffffffff,0x38(%rsp)
7092(4): mov 0x48(%r15),%edi
7096(5): mov $0x1,0x5f(%rsp)
709b(4): mov 0x48(%rbp),%rcx
709f(4): mov 0x38(%rbp),%rdx
70a3(9): mov $0x0,0x40(%rsp)
70ac(5): cmp $0x2f,0xffffffff(%rdx,%rcx,1)
70b1(4): lea 0xffffffff(%rcx),%rax
70b5(4): cmovne %rcx,%rax
70b9(3): and $0x4,%edi
70bc(5): mov %rax,0x48(%rsp)
70c1(2): jz 0x12(%rip)
70c3(4): add 0x20(%r15),%rax
70c7(4): lea 0x1(%rax),%rbx
70cb(3): mov $0x2f,(%rax)
70ce(5): mov %rbx,0x40(%rsp)
70d3(5): mov 0x48(%rsp),%rax
70d8(4): mov 0x30(%r15),%rbx
70dc(5): mov $0x0,0x5e(%rsp)
70e1(5): mov $0x0,0x5d(%rsp)
70e6(9): mov $0x0,0x8(%rsp)
70ef(9): mov $0x0,0x10(%rsp)
70f8(4): add $0x1,%rax
70fc(5): mov %rbp,0x20(%rsp)
7101(3): sub %rax,%rbx
7104(5): mov %rax,0x18(%rsp)
7109(4): mov 0x58(%rbp),%rax
710d(5): mov %rbx,0x28(%rsp)
7112(2): xor %ebx,%ebx
7114(4): add $0x1,%rax
7118(5): mov %rax,0x30(%rsp)
711d(5): jmp 0xe2(%rip)
7122(6): nop 0x0(%rax,%rax,1)
7128(3): mov %r14,%r9
712b(5): add 0x18(%rsp),%r9
7130(6): jb 0x860(%rip)
7136(5): mov 0x30(%rsp),%rax
713b(7): lea 0x108(%r13),%rsi
7142(4): mov %rax,0x58(%r13)
7146(3): mov (%r15),%rax
7149(4): mov %r9,0x48(%r13)
714d(4): mov %rax,0x8(%r13)
7151(4): mov 0x0(%rbp),%rax
7155(7): mov %rax,0x80(%r13)
715c(4): mov 0x48(%r15),%eax
7160(2): test $0x4,%al
7162(6): jnz 0x26e(%rip)
7168(4): mov %rsi,0x30(%r13)
716c(5): cmp $0x0,0x40(%r15)
7171(2): jz 0xb(%rip)
7173(3): test $0x4,%ah
7176(6): jz 0x302(%rip)
717c(4): movzx 0x12(%rbp),%edx
7180(3): and $0x18,%eax
7183(2): mov %edx,%esi
7185(3): sub $0x1,%edx
7188(3): cmp $0x18,%eax
718b(6): jz 0x2b5(%rip)
7191(5): mov $0xb,%ecx
7196(3): cmp $0xb,%edx
7199(5): mov %cx,0x70(%r13)
719e(6): jnbe 0x26a(%rip)
71a4(7): lea 0x4a35(%rip),%rax
71ab(3): mov 0x0(%rax,%rdx,4),%eax
71ae(7): mov %eax,0x90(%r13)
71b5(5): mov $0x2,%eax
71ba(7): mov %rax,0xa8(%r13)
71c1(6): cmp $0x0,0x10(%rsp)
71c7(8): mov $0x0,0x10(%r13)
71cf(6): jz 0x229(%rip)
71d5(5): mov 0x8(%rsp),%rax
71da(4): mov %r13,0x10(%rax)
71de(7): cmp $0x2710,%rbx
71e5(6): jz 0xfb(%rip)
71eb(4): add $0x1,%rbx
71ef(5): cmp 0x38(%rsp),%rbx
71f4(6): jnb 0x144(%rip)
71fa(5): mov %r13,0x8(%rsp)
71ff(5): mov 0x20(%rsp),%rax
7204(4): mov 0x18(%rax),%r13
7208(3): test %r13,%r13
720b(6): jz 0x4cd(%rip)
7211(5): call 0xffffa71f(%rip)
7216(3): mov %r13,%rdi
7219(6): mov $0x0,(%rax)
721f(3): mov %rax,%r12
7222(5): call 0xffffa96e(%rip)
7227(3): test %rax,%rax
722a(3): mov %rax,%rbp
722d(6): jz 0x583(%rip)
7233(5): test $0x20,0x48(%r15)
7238(2): jnz 0xc(%rip)
723a(4): cmp $0x2e,0x13(%rax)
723e(6): jz 0x1e2(%rip)
7244(4): lea 0x13(%rbp),%r13
7248(3): mov %r13,%rdi
724b(5): call 0xffffa7c5(%rip)
7250(3): mov %r13,%rsi
7253(3): mov %rax,%rdx
7256(3): mov %r15,%rdi
7259(3): mov %rax,%r14
725c(5): call 0xfffff534(%rip)
7261(3): test %rax,%rax
7264(3): mov %rax,%r13
7267(6): jz 0x419(%rip)
726d(5): cmp %r14,0x28(%rsp)
7272(6): jnbe 0xfffffeb6(%rip)
7278(4): mov 0x20(%r15),%rax
727c(4): lea 0x30(%r15),%rsi
7280(4): lea 0x20(%r15),%rdi
7284(5): mov %rax,0x28(%rsp)
7289(5): mov 0x48(%rsp),%rax
728e(5): lea 0x2(%rax,%r14,1),%rdx
7293(5): call 0xfffff88d(%rip)
7298(2): test %al,%al
729a(6): jz 0x3e6(%rip)
72a0(4): mov 0x20(%r15),%rdx
72a4(5): cmp 0x28(%rsp),%rdx
72a9(6): jz 0x1e7(%rip)
72af(5): add 0x18(%rsp),%rdx
72b4(5): test $0x4,0x48(%r15)
72b9(6): cmove 0x40(%rsp),%rdx
72bf(5): mov %rdx,0x40(%rsp)
72c4(4): mov 0x30(%r15),%rcx
72c8(5): sub 0x18(%rsp),%rcx
72cd(4): mov %al,0x5d(%rsp)
72d1(5): mov %rcx,0x28(%rsp)
72d6(5): jmp 0xfffffe52(%rip)
72db(5): nop 0x0(%rax,%rax,1)
72e0(5): cmp $0x0,0x40(%r15)
72e5(6): jnz 0xffffff06(%rip)
72eb(4): mov 0x64(%rsp),%esi
72ef(5): mov 0x20(%rsp),%rdi
72f4(5): call 0xfffff5bc(%rip)
72f9(6): cmp $0x1021994,%rax
72ff(6): jz 0x371(%rip)
7305(5): mov $0xff534d42,%ecx
730a(3): cmp %rcx,%rax
730d(6): jz 0x363(%rip)
7313(6): cmp $0x6969,%rax
7319(6): jz 0x357(%rip)
731f(4): add $0x1,%rbx
7323(5): cmp 0x38(%rsp),%rbx
7328(5): mov $0x1,0x5e(%rsp)
732d(6): jb 0xfffffecd(%rip)
7333(5): nop 0x0(%rax,%rax,1)
7338(5): cmp $0x0,0x5d(%rsp)
733d(5): mov 0x20(%rsp),%rbp
7342(6): jz 0x3a4(%rip)
7348(4): mov 0x8(%r15),%rax
734c(4): mov 0x20(%r15),%rcx
7350(3): test %rax,%rax
7353(2): jz 0x2d(%rip)
7355(3): nop (%rax)
7358(4): mov 0x30(%rax),%rdx
735c(7): lea 0x108(%rax),%rsi
7363(3): cmp %rsi,%rdx
7366(2): jz 0xd(%rip)
7368(4): sub 0x38(%rax),%rdx
736c(3): add %rcx,%rdx
736f(4): mov %rdx,0x30(%rax)
7373(4): mov %rcx,0x38(%rax)
7377(4): mov 0x10(%rax),%rax
737b(3): test %rax,%rax
737e(2): jnz 0xffffffda(%rip)
7380(5): mov 0x10(%rsp),%rax
7385(2): jmp 0xe(%rip)
7387(9): nop 0x0(%rax,%rax,1)
7390(3): mov %rdx,%rax
7393(5): cmp $0x0,0x58(%rax)
7398(6): js 0x34e(%rip)
739e(4): mov 0x30(%rax),%rdx
73a2(7): lea 0x108(%rax),%rsi
73a9(3): cmp %rsi,%rdx
73ac(2): jz 0xd(%rip)
73ae(4): sub 0x38(%rax),%rdx
73b2(3): add %rcx,%rdx
73b5(4): mov %rdx,0x30(%rax)
73b9(4): mov 0x10(%rax),%rdx
73bd(4): mov %rcx,0x38(%rax)
73c1(3): test %rdx,%rdx
73c4(2): jnz 0xffffffcc(%rip)
73c6(4): mov 0x8(%rax),%rdx
73ca(2): jmp 0xffffffc6(%rip)
73cc(4): nop 0x0(%rax)
73d0(4): mov 0x38(%r13),%rax
73d4(5): mov 0x40(%rsp),%rdi
73d9(4): mov %rax,0x30(%r13)
73dd(4): mov 0x60(%r13),%rax
73e1(4): lea 0x1(%rax),%rdx
73e5(5): call 0xffffa84b(%rip)
73ea(4): mov 0x48(%r15),%eax
73ee(5): jmp 0xfffffd7e(%rip)
73f3(5): nop 0x0(%rax,%rax,1)
73f8(5): mov %r13,0x10(%rsp)
73fd(5): jmp 0xfffffde1(%rip)
7402(6): nop 0x0(%rax,%rax,1)
7408(b): mov $0x0,0x90(%r13)
7413(5): mov $0x2,%eax
7418(5): jmp 0xfffffda2(%rip)
741d(3): nop (%rax)
7420(4): cmp $0x0,0x14(%rax)
7424(2): jz 0xd(%rip)
7426(5): cmp $0x2e,0x14(%rax)
742b(6): jnz 0xfffffe19(%rip)
7431(5): mov 0x8(%rsp),%r13
7436(5): jmp 0xfffffdc4(%rip)
743b(5): nop 0x0(%rax,%rax,1)
7440(6): and $0xfb,%esi
7446(6): jz 0xfffffd4b(%rip)
744c(5): mov $0xb,%eax
7451(3): cmp $0xb,%edx
7454(5): mov %ax,0x70(%r13)
7459(6): jbe 0x58d(%rip)
745f(b): mov $0x0,0x90(%r13)
746a(5): mov $0x1,%eax
746f(5): jmp 0xfffffd4b(%rip)
7474(4): nop 0x0(%rax)
7478(2): xor %edx,%edx
747a(3): mov %r13,%rsi
747d(3): mov %r15,%rdi
7480(5): call 0xfffff030(%rip)
7485(5): mov %ax,0x70(%r13)
748a(5): jmp 0xfffffd37(%rip)
748f(1): nop 
7490(5): movzx 0x5d(%rsp),%eax
7495(5): jmp 0xfffffe2f(%rip)
749a(6): nop 0x0(%rax,%rax,1)
74a0(3): mov 0x48(%rdi),%eax
74a3(2): mov %eax,%edx
74a5(3): and $0x10,%edx
74a8(2): jz 0xf(%rip)
74aa(2): test $0x1,%al
74ac(5): mov $0x20000,%edx
74b1(6): jnz 0x107(%rip)
74b7(5): and $0x204,%eax
74bc(4): mov 0x30(%rbp),%rsi
74c0(5): mov $0xffffff9c,%edi
74c5(5): cmp $0x200,%eax
74ca(2): jnz 0x6(%rip)
74cc(4): mov 0x2c(%r15),%edi
74d0(5): lea 0x64(%rsp),%rcx
74d5(5): call 0x2a3b(%rip)
74da(3): test %rax,%rax
74dd(4): mov %rax,0x18(%rbp)
74e1(6): jz 0x31f(%rip)
74e7(5): cmp $0xb,0x70(%rbp)
74ec(6): jz 0x394(%rip)
74f2(4): mov 0x48(%r15),%edi
74f6(6): test $0x100,%edi
74fc(6): jnz 0x124(%rip)
7502(5): cmp $0x1,0x40(%r15)
7507(3): sbb %rax,%rax
750a(5): and $0x186a1,%eax
750f(4): sub $0x1,%rax
7513(5): cmp $0x2,0x58(%rsp)
7518(5): mov %rax,0x38(%rsp)
751d(6): jz 0x353(%rip)
7523(4): mov 0x48(%r15),%edx
7527(4): mov 0x64(%rsp),%eax
752b(3): and $0x38,%edx
752e(3): cmp $0x18,%edx
7531(6): jz 0x3a3(%rip)
7537(5): cmp $0x3,0x58(%rsp)
753c(6): mov $0x1,%r12d
7542(3): setz %bl
7545(5): test $0x2,0x49(%r15)
754a(6): jnz 0x3e2(%rip)
7550(2): test %eax,%eax
7552(6): jns 0x366(%rip)
7558(2): test %bl,%bl
755a(2): jz 0x11(%rip)
755c(3): test %r12b,%r12b
755f(2): jz 0xc(%rip)
7561(5): call 0xffffa3cf(%rip)
7566(2): mov (%rax),%eax
7568(3): mov %eax,0x40(%rbp)
756b(5): or $0x1,0x72(%rbp)
7570(4): mov 0x18(%rbp),%rdi
7574(5): call 0xffffa58c(%rip)
7579(4): mov 0x48(%r15),%edi
757d(8): mov $0x0,0x18(%rbp)
7585(6): test $0x200,%edi
758b(2): jz 0x15(%rip)
758d(4): mov 0x64(%rsp),%eax
7591(2): test %eax,%eax
7593(2): js 0xd(%rip)
7595(2): mov %eax,%edi
7597(5): call 0xffffa549(%rip)
759c(4): mov 0x48(%r15),%edi
75a0(8): mov $0x0,0x18(%rbp)
75a8(5): mov $0x0,0x5f(%rsp)
75ad(5): jmp 0xfffffaee(%rip)
75b2(6): nop 0x0(%rax,%rax,1)
75b8(2): xor %edx,%edx
75ba(5): cmp $0x0,0x58(%rbp)
75bf(3): setnz %dl
75c2(3): shl/sal $0x11,%edx
75c5(5): jmp 0xfffffef2(%rip)
75ca(6): nop 0x0(%rax,%rax,1)
75d0(4): mov 0x18(%rbp),%rdi
75d4(5): call 0xffffa52c(%rip)
75d9(5): cmp $0x3,0x58(%rsp)
75de(8): mov $0x0,0x18(%rbp)
75e6(6): jz 0x225(%rip)
75ec(9): mov $0x0,0x10(%rsp)
75f5(5): mov 0x68(%rsp),%rbx
75fa(9): xor $0x28,%rbx
7603(5): mov 0x10(%rsp),%rax
7608(6): jnz 0x3d9(%rip)
760e(4): add $0x78,%rsp
7612(1): pop %rbx
7613(1): pop %rbp
7614(2): pop %r12
7616(2): pop %r13
7618(2): pop %r14
761a(2): pop %r15
761c(1): ret near (%rsp)
761d(3): nop (%rax)
7620(4): lea 0x58(%r15),%rbx
7624(3): mov %rbp,%rdx
7627(3): mov %rbx,%rsi
762a(5): call 0xfffff946(%rip)
762f(2): xor %edx,%edx
7631(3): mov %rbp,%rsi
7634(3): mov %r15,%rdi
7637(5): call 0xffffee79(%rip)
763c(4): mov 0x48(%r15),%edi
7640(3): mov %rbp,%rdx
7643(3): mov %rbx,%rsi
7646(5): call 0xfffff87a(%rip)
764b(2): test %al,%al
764d(6): jnz 0xfffffeb5(%rip)
7653(5): call 0xffffa2dd(%rip)
7658(9): mov $0x0,0x10(%rsp)
7661(6): mov $0xc,(%rax)
7667(2): jmp 0xffffff8e(%rip)
7669(7): nop 0x0(%rax)
7670(5): mov $0x0,0x5e(%rsp)
7675(5): jmp 0xfffffb76(%rip)
767a(6): nop 0x0(%rax,%rax,1)
7680(3): mov %r13,%rdi
7683(5): mov 0x20(%rsp),%rbp
7688(4): mov (%r12),%ebx
768c(5): call 0xffffa6a4(%rip)
7691(5): mov 0x10(%rsp),%rdi
7696(5): call 0xfffff18a(%rip)
769b(4): mov 0x18(%rbp),%rdi
769f(5): call 0xffffa461(%rip)
76a4(6): mov $0x7,%r9d
76aa(8): mov $0x0,0x18(%rbp)
76b2(9): mov $0x0,0x10(%rsp)
76bb(5): mov %r9w,0x70(%rbp)
76c0(8): or $0x2000,0x48(%r15)
76c8(4): mov %ebx,(%r12)
76cc(5): jmp 0xffffff29(%rip)
76d1(7): nop 0x0(%rax)
76d8(3): mov %rax,%rbp
76db(5): cmp $0x0,0x5d(%rsp)
76e0(6): jnz 0xfffffc68(%rip)
76e6(5): test $0x4,0x48(%r15)
76eb(2): jz 0x20(%rip)
76ed(5): mov 0x18(%rsp),%rax
76f2(4): cmp %rax,0x30(%r15)
76f6(2): jz 0x7(%rip)
76f8(3): test %rbx,%rbx
76fb(2): jnz 0x8(%rip)
76fd(6): sub $0x1,0x40(%rsp)
7703(5): mov 0x40(%rsp),%rax
7708(3): mov $0x0,(%rax)
770b(6): cmp $0x0,0x50(%rsp)
7711(2): jnz 0x6f(%rip)
7713(5): cmp $0x0,0x5f(%rsp)
7718(2): jz 0x68(%rip)
771a(5): cmp $0x1,0x58(%rsp)
771f(2): jz 0x41(%rip)
7721(3): test %rbx,%rbx
7724(2): jz 0x3c(%rip)
7726(5): cmp $0x0,0x5e(%rsp)
772b(6): jnz 0xfd(%rip)
7731(5): cmp $0x0,0x40(%r15)
7736(6): jz 0xfffffebf(%rip)
773c(4): cmp $0x1,%rbx
7740(6): jz 0xfffffeb5(%rip)
7746(5): mov 0x10(%rsp),%rsi
774b(3): mov %rbx,%rdx
774e(3): mov %r15,%rdi
7751(5): call 0xffffef2f(%rip)
7756(5): mov %rax,0x10(%rsp)
775b(5): jmp 0xfffffe9a(%rip)
7760(5): cmp $0x0,0x58(%rbp)
7765(6): jnz 0x131(%rip)
776b(3): mov %r15,%rdi
776e(5): call 0xfffff352(%rip)
7773(2): test %eax,%eax
7775(3): setnz %al
7778(2): test %al,%al
777a(6): jnz 0x189(%rip)
7780(3): test %rbx,%rbx
7783(2): jnz 0xffffffa3(%rip)
7785(5): cmp $0x3,0x58(%rsp)
778a(6): jz 0x1be(%rip)
7790(5): mov 0x10(%rsp),%rdi
7795(5): call 0xfffff08b(%rip)
779a(9): mov $0x0,0x10(%rsp)
77a3(5): jmp 0xfffffe52(%rip)
77a8(8): nop 0x0(%rax,%rax,1)
77b0(4): mov (%r12),%eax
77b4(5): mov 0x20(%rsp),%rbp
77b9(2): test %eax,%eax
77bb(2): jz 0x23(%rip)
77bd(3): test %rbx,%rbx
77c0(3): mov %eax,0x40(%rbp)
77c3(6): jnz 0x136(%rip)
77c9(6): cmp $0x0,0x50(%rsp)
77cf(5): mov $0x4,%eax
77d4(6): jnz 0x125(%rip)
77da(4): mov %ax,0x70(%rbp)
77de(4): mov 0x18(%rbp),%rdi
77e2(3): test %rdi,%rdi
77e5(6): jz 0xfffffef6(%rip)
77eb(5): call 0xffffa315(%rip)
77f0(8): mov $0x0,0x18(%rbp)
77f8(5): jmp 0xfffffee3(%rip)
77fd(3): nop (%rax)
7800(5): cmp $0x3,0x58(%rsp)
7805(6): jnz 0xfffffde7(%rip)
780b(6): mov $0x4,%r10d
7811(5): mov %r10w,0x70(%rbp)
7816(5): call 0xffffa11a(%rip)
781b(2): mov (%rax),%eax
781d(3): mov %eax,0x40(%rbp)
7820(5): jmp 0xfffffdcc(%rip)
7825(3): nop (%rax)
7828(7): lea 0xffffec51(%rip),%rax
782f(5): mov 0x10(%rsp),%rsi
7834(3): mov %rbx,%rdx
7837(3): mov %r15,%rdi
783a(4): mov %rax,0x40(%r15)
783e(5): call 0xffffee42(%rip)
7843(8): mov $0x0,0x40(%r15)
784b(5): mov %rax,0x10(%rsp)
7850(5): jmp 0xfffffda5(%rip)
7855(3): nop (%rax)
7858(9): mov $0x186a0,0x38(%rsp)
7861(5): mov $0x1,0x5f(%rsp)
7866(4): mov 0x48(%r15),%edi
786a(5): jmp 0xfffff831(%rip)
786f(1): nop 
7870(5): mov $0x0,0x5f(%rsp)
7875(4): mov 0x48(%r15),%edi
7879(5): jmp 0xfffff822(%rip)
787e(2): nop 
7880(2): xor %edx,%edx
7882(3): mov %rbp,%rsi
7885(3): mov %r15,%rdi
7888(5): call 0xffffec28(%rip)
788d(4): mov %ax,0x70(%rbp)
7891(5): jmp 0xfffffc71(%rip)
7896(4): mov 0x8(%rbp),%rsi
789a(7): lea 0x4328(%rip),%rcx
78a1(5): mov $0xffffffff,%edx
78a6(3): mov %r15,%rdi
78a9(5): call 0xfffff397(%rip)
78ae(2): test %eax,%eax
78b0(3): setnz %al
78b3(5): jmp 0xfffffec5(%rip)
78b8(2): xor %ecx,%ecx
78ba(2): mov %eax,%edx
78bc(3): mov %rbp,%rsi
78bf(3): mov %r15,%rdi
78c2(5): call 0xfffff37e(%rip)
78c7(2): test %eax,%eax
78c9(6): jnz 0xfffffc8f(%rip)
78cf(5): jmp 0xfffff7c3(%rip)
78d4(8): cmp $0x2,0x88(%rbp)
78dc(6): jnz 0xfffffc5b(%rip)
78e2(2): mov %eax,%esi
78e4(3): mov %rbp,%rdi
78e7(5): call 0xfffff0f9(%rip)
78ec(2): test %eax,%eax
78ee(2): jnz 0x80(%rip)
78f0(4): mov 0x64(%rsp),%eax
78f4(5): jmp 0xfffffc43(%rip)
78f9(5): mov $0x7,%eax
78fe(5): jmp 0xfffffedc(%rip)
7903(5): mov $0x7,%edi
7908(4): mov %di,0x70(%rbp)
790c(8): or $0x2000,0x48(%r15)
7914(5): mov 0x10(%rsp),%rdi
7919(5): call 0xffffef07(%rip)
791e(9): mov $0x0,0x10(%rsp)
7927(5): jmp 0xfffffcce(%rip)
792c(2): mov %eax,%edi
792e(5): mov $0x3,%edx
7933(5): mov $0x406,%esi
7938(2): xor %eax,%eax
793a(5): call 0x2716(%rip)
793f(4): mov %eax,0x64(%rsp)
7943(5): jmp 0xfffffc0d(%rip)
7948(4): movzx 0x70(%rbp),%eax
794c(4): cmp $0x7,%ax
7950(6): jz 0xfffffe40(%rip)
7956(4): cmp $0x4,%ax
795a(6): jz 0xfffffe36(%rip)
7960(5): mov $0x6,%esi
7965(4): mov %si,0x70(%rbp)
7969(5): jmp 0xfffffe27(%rip)
796e(5): cmp $0x3,0x58(%rsp)
7973(6): jnz 0xfffffefd(%rip)
7979(4): mov 0x64(%rsp),%eax
797d(3): xor %r12d,%r12d
7980(5): mov $0x1,%ebx
7985(5): jmp 0xfffffbc0(%rip)
798a(6): nop 0x0(%rax,%rax,1)
7990(3): mov %r13,%rdi
7993(5): mov 0x20(%rsp),%rbp
7998(5): call 0xffffa398(%rip)
799d(5): mov 0x10(%rsp),%rdi
79a2(5): call 0xffffee7e(%rip)
79a7(4): mov 0x18(%rbp),%rdi
79ab(5): call 0xffffa155(%rip)
79b0(6): mov $0x7,%r8d
79b6(8): mov $0x0,0x18(%rbp)
79be(9): mov $0x0,0x10(%rsp)
79c7(5): mov %r8w,0x70(%rbp)
79cc(8): or $0x2000,0x48(%r15)
79d4(8): mov $0x24,(%r12)
79dc(5): jmp 0xfffffc19(%rip)
79e1(5): call 0xffffa05f(%rip)
79e6(7): lea 0x41f3(%rip),%rax
79ed(3): mov 0x0(%rax,%rdx,4),%eax
79f0(7): mov %eax,0x90(%r13)
79f7(5): mov $0x1,%eax
79fc(5): jmp 0xfffff7be(%rip)

"rpl_fts_open" :
7a10(2): push %r15
7a12(2): push %r14
7a14(2): push %r13
7a16(2): push %r12
7a18(1): push %rbp
7a19(1): push %rbx
7a1a(4): sub $0x28,%rsp
7a1e(6): test $0xfffff000,%esi
7a24(6): jnz 0x384(%rip)
7a2a(2): mov %esi,%eax
7a2c(2): mov %esi,%ebp
7a2e(5): and $0x204,%eax
7a33(5): cmp $0x204,%eax
7a38(6): jz 0x370(%rip)
7a3e(4): test $0x12,%sil
7a42(6): jz 0x366(%rip)
7a48(3): mov %rdi,%r13
7a4b(5): mov $0x1,%esi
7a50(5): mov $0x80,%edi
7a55(3): mov %rdx,%r14
7a58(5): call 0xffffa0d8(%rip)
7a5d(3): test %rax,%rax
7a60(3): mov %rax,%rbx
7a63(6): jz 0x25b(%rip)
7a69(4): test $0x2,%bpl
7a6d(4): mov %r14,0x40(%rax)
7a71(6): jnz 0x25f(%rip)
7a77(4): mov 0x0(%r13),%rdi
7a7b(3): mov %ebp,0x48(%rax)
7a7e(7): mov $0xffffff9c,0x2c(%rbx)
7a85(3): test %rdi,%rdi
7a88(6): jz 0x267(%rip)
7a8e(3): mov %r13,%r15
7a91(3): xor %r12d,%r12d
7a94(4): nop 0x0(%rax)
7a98(5): call 0xffff9f78(%rip)
7a9d(3): cmp %rax,%r12
7aa0(4): cmovnae %rax,%r12
7aa4(4): add $0x8,%r15
7aa8(3): mov (%r15),%rdi
7aab(3): test %rdi,%rdi
7aae(2): jnz 0xffffffea(%rip)
7ab0(5): lea 0x1(%r12),%rdx
7ab5(5): mov $0x1000,%eax
7aba(7): cmp $0x1000,%rdx
7ac1(4): cmovnae %rax,%rdx
7ac5(4): lea 0x30(%rbx),%rsi
7ac9(4): lea 0x20(%rbx),%rdi
7acd(5): call 0xfffff053(%rip)
7ad2(2): test %al,%al
7ad4(4): mov %al,0x16(%rsp)
7ad8(6): jz 0x2a1(%rip)
7ade(4): mov 0x0(%r13),%rsi
7ae2(3): test %rsi,%rsi
7ae5(6): jz 0x2ab(%rip)
7aeb(7): lea 0x3c4f(%rip),%rsi
7af2(2): xor %edx,%edx
7af4(3): mov %rbx,%rdi
7af7(5): call 0xffffec99(%rip)
7afc(3): test %rax,%rax
7aff(3): mov %rax,%r15
7b02(6): jz 0x26e(%rip)
7b08(7): mov $0xffffffff,%rax
7b0f(3): test %r14,%r14
7b12(4): mov 0x0(%r13),%rsi
7b16(4): mov %rax,0x58(%r15)
7b1a(4): mov %rax,0x68(%r15)
7b1e(2): jz 0xf(%rip)
7b20(3): mov 0x48(%rbx),%eax
7b23(3): shr $0xa,%eax
7b26(3): and $0x1,%eax
7b29(4): mov %al,0x16(%rsp)
7b2d(3): test %rsi,%rsi
7b30(6): jz 0x26c(%rip)
7b36(3): shr $0xb,%ebp
7b39(9): mov $0x0,0x18(%rsp)
7b42(3): xor %r12d,%r12d
7b45(3): xor $0x1,%ebp
7b48(2): mov %ebp,%eax
7b4a(2): xor %ebp,%ebp
7b4c(3): and $0x1,%eax
7b4f(4): mov %al,0x17(%rsp)
7b53(2): jmp 0x79(%rip)
7b55(3): nop (%rax)
7b58(3): mov %rax,%rdx
7b5b(3): mov %rbx,%rdi
7b5e(5): call 0xffffec32(%rip)
7b63(3): test %rax,%rax
7b66(3): mov %rax,%rcx
7b69(6): jz 0x1f7(%rip)
7b6f(8): mov $0x0,0x58(%rax)
7b77(4): mov %r15,0x8(%rax)
7b7b(7): lea 0x108(%rax),%rax
7b82(3): test %r12,%r12
7b85(4): mov %rax,0x30(%rcx)
7b89(6): jz 0x177(%rip)
7b8f(5): cmp $0x0,0x16(%rsp)
7b94(6): jz 0x16c(%rip)
7b9a(5): mov $0xb,%esi
7b9f(3): test %r14,%r14
7ba2(b): mov $0x2,0xa8(%rcx)
7bad(4): mov %si,0x70(%rcx)
7bb1(6): jz 0x18f(%rip)
7bb7(4): mov %r12,0x10(%rcx)
7bbb(3): mov %rcx,%r12
7bbe(4): add $0x1,%rbp
7bc2(5): mov 0x0(%r13,%rbp,8),%rsi
7bc7(3): test %rsi,%rsi
7bca(2): jz 0x56(%rip)
7bcc(3): mov %rsi,%rdi
7bcf(5): mov %rsi,0x8(%rsp)
7bd4(5): call 0xffff9e3c(%rip)
7bd9(4): cmp $0x2,%rax
7bdd(5): mov 0x8(%rsp),%rsi
7be2(6): jbe 0xffffff76(%rip)
7be8(5): cmp $0x0,0x17(%rsp)
7bed(6): jz 0xffffff6b(%rip)
7bf3(5): cmp $0x2f,0xffffffff(%rsi,%rax,1)
7bf8(6): jnz 0xffffff60(%rip)
7bfe(2): nop 
7c00(5): cmp $0x2f,0xfffffffe(%rsi,%rax,1)
7c05(6): jnz 0xffffff53(%rip)
7c0b(4): sub $0x1,%rax
7c0f(4): cmp $0x1,%rax
7c13(2): jnz 0xffffffed(%rip)
7c15(5): jmp 0xffffff43(%rip)
7c1a(6): nop 0x0(%rax,%rax,1)
7c20(3): test %r14,%r14
7c23(2): jz 0x19(%rip)
7c25(4): cmp $0x1,%rbp
7c29(2): jbe 0x13(%rip)
7c2b(3): mov %r12,%rsi
7c2e(3): mov %rbp,%rdx
7c31(3): mov %rbx,%rdi
7c34(5): call 0xffffea4c(%rip)
7c39(3): mov %rax,%r12
7c3c(7): lea 0x3afe(%rip),%rsi
7c43(2): xor %edx,%edx
7c45(3): mov %rbx,%rdi
7c48(5): call 0xffffeb48(%rip)
7c4d(3): test %rax,%rax
7c50(3): mov %rax,(%rbx)
7c53(6): jz 0x10d(%rip)
7c59(3): mov 0x48(%rbx),%edi
7c5c(5): mov $0x9,%edx
7c61(4): lea 0x58(%rbx),%rsi
7c65(4): mov %r12,0x10(%rax)
7c69(4): mov %dx,0x70(%rax)
7c6d(8): mov $0x1,0x58(%rax)
7c75(5): call 0xffffef1b(%rip)
7c7a(2): test %al,%al
7c7c(6): jz 0xe4(%rip)
7c82(3): mov 0x48(%rbx),%esi
7c85(6): test $0x204,%esi
7c8b(2): jnz 0x25(%rip)
7c8d(3): mov 0x2c(%rbx),%edi
7c90(7): lea 0x3f33(%rip),%rdx
7c97(5): call 0xffffef69(%rip)
7c9c(2): test %eax,%eax
7c9e(3): mov %eax,0x28(%rbx)
7ca1(2): jns 0xf(%rip)
7ca3(4): or $0x4,0x48(%rbx)
7ca7(9): nop 0x0(%rax,%rax,1)
7cb0(4): lea 0x60(%rbx),%rdi
7cb4(5): mov $0xffffffff,%esi
7cb9(5): call 0x20f7(%rip)
7cbe(4): add $0x28,%rsp
7cc2(3): mov %rbx,%rax
7cc5(1): pop %rbx
7cc6(1): pop %rbp
7cc7(2): pop %r12
7cc9(2): pop %r13
7ccb(2): pop %r14
7ccd(2): pop %r15
7ccf(1): ret near (%rsp)
7cd0(4): mov 0x0(%r13),%rdi
7cd4(2): mov %ebp,%eax
7cd6(7): mov $0xffffff9c,0x2c(%rbx)
7cdd(3): and $0xfd,%ah
7ce0(3): or $0x4,%eax
7ce3(3): test %rdi,%rdi
7ce6(3): mov %eax,0x48(%rbx)
7ce9(6): jnz 0xfffffda5(%rip)
7cef(5): mov $0x1000,%edx
7cf4(5): jmp 0xfffffdd1(%rip)
7cf9(7): nop 0x0(%rax)
7d00(2): xor %edx,%edx
7d02(3): mov %rcx,%rsi
7d05(3): mov %rbx,%rdi
7d08(5): mov %rcx,0x8(%rsp)
7d0d(5): call 0xffffe7a3(%rip)
7d12(5): mov 0x8(%rsp),%rcx
7d17(3): test %r14,%r14
7d1a(4): mov %ax,0x70(%rcx)
7d1e(6): jnz 0xfffffe99(%rip)
7d24(3): test %r12,%r12
7d27(8): mov $0x0,0x10(%rcx)
7d2f(2): jnz 0x19(%rip)
7d31(5): mov %rcx,0x18(%rsp)
7d36(3): mov %rcx,%r12
7d39(5): jmp 0xfffffe85(%rip)
7d3e(2): nop 
7d40(8): mov $0x0,0x10(%rcx)
7d48(5): mov 0x18(%rsp),%rax
7d4d(5): mov %rcx,0x18(%rsp)
7d52(4): mov %rcx,0x10(%rax)
7d56(5): jmp 0xfffffe68(%rip)
7d5b(5): nop 0x0(%rax,%rax,1)
7d60(3): mov %r12,%rdi
7d63(5): call 0xffffeabd(%rip)
7d68(3): mov %r15,%rdi
7d6b(5): call 0xffff9fc5(%rip)
7d70(4): mov 0x20(%rbx),%rdi
7d74(5): call 0xffff9fbc(%rip)
7d79(3): mov %rbx,%rdi
7d7c(2): xor %ebx,%ebx
7d7e(5): call 0xffff9fb2(%rip)
7d83(5): jmp 0xffffff3b(%rip)
7d88(8): nop 0x0(%rax,%rax,1)
7d90(3): xor %r15d,%r15d
7d93(3): test %r14,%r14
7d96(6): jnz 0xfffffd8a(%rip)
7d9c(3): xor %r12d,%r12d
7d9f(5): jmp 0xfffffe9d(%rip)
7da4(4): nop 0x0(%rax)
7da8(5): call 0xffff9b88(%rip)
7dad(2): xor %ebx,%ebx
7daf(6): mov $0x16,(%rax)
7db5(5): jmp 0xffffff09(%rip)

"rpl_fts_close" :
7dc0(2): push %r12
7dc2(1): push %rbp
7dc3(3): mov %rdi,%rbp
7dc6(1): push %rbx
7dc7(3): mov (%rdi),%rdi
7dca(3): test %rdi,%rdi
7dcd(2): jz 0x46(%rip)
7dcf(5): cmp $0x0,0x58(%rdi)
7dd4(2): jns 0x1b(%rip)
7dd6(5): jmp 0x11a(%rip)
7ddb(5): nop 0x0(%rax,%rax,1)
7de0(5): call 0xffff9f50(%rip)
7de5(5): cmp $0x0,0x58(%rbx)
7dea(3): mov %rbx,%rdi
7ded(2): js 0x1e(%rip)
7def(4): mov 0x10(%rdi),%rbx
7df3(3): test %rbx,%rbx
7df6(2): jnz 0xffffffea(%rip)
7df8(4): mov 0x8(%rdi),%rbx
7dfc(5): call 0xffff9f34(%rip)
7e01(5): cmp $0x0,0x58(%rbx)
7e06(3): mov %rbx,%rdi
7e09(2): jns 0xffffffe6(%rip)
7e0b(3): mov %rbx,%rdi
7e0e(5): call 0xffff9f22(%rip)
7e13(4): mov 0x8(%rbp),%rdi
7e17(3): test %rdi,%rdi
7e1a(2): jz 0x7(%rip)
7e1c(5): call 0xffffea04(%rip)
7e21(4): mov 0x10(%rbp),%rdi
7e25(5): call 0xffff9f0b(%rip)
7e2a(4): mov 0x20(%rbp),%rdi
7e2e(5): call 0xffff9f02(%rip)
7e33(3): mov 0x48(%rbp),%eax
7e36(3): test $0x2,%ah
7e39(2): jz 0x67(%rip)
7e3b(3): mov 0x2c(%rbp),%edi
7e3e(2): test %edi,%edi
7e40(6): jns 0x90(%rip)
7e46(2): xor %ebx,%ebx
7e48(4): lea 0x60(%rbp),%rdi
7e4c(5): call 0xffffea24(%rip)
7e51(4): mov 0x50(%rbp),%rdi
7e55(3): test %rdi,%rdi
7e58(2): jz 0x7(%rip)
7e5a(5): call 0x1736(%rip)
7e5f(7): test $0x102,0x48(%rbp)
7e66(4): mov 0x58(%rbp),%rdi
7e6a(2): jz 0x26(%rip)
7e6c(3): test %rdi,%rdi
7e6f(2): jz 0x7(%rip)
7e71(5): call 0x171f(%rip)
7e76(3): mov %rbp,%rdi
7e79(5): call 0xffff9eb7(%rip)
7e7e(2): test %ebx,%ebx
7e80(6): jnz 0xb1(%rip)
7e86(2): mov %ebx,%eax
7e88(1): pop %rbx
7e89(1): pop %rbp
7e8a(2): pop %r12
7e8c(1): ret near (%rsp)
7e8d(3): nop (%rax)
7e90(5): call 0xffff9ea0(%rip)
7e95(2): jmp 0xffffffe1(%rip)
7e97(9): nop 0x0(%rax,%rax,1)
7ea0(2): test $0x4,%al
7ea2(2): jnz 0xffffffa4(%rip)
7ea4(3): mov 0x28(%rbp),%edi
7ea7(5): call 0xffff9d49(%rip)
7eac(2): test %eax,%eax
7eae(2): jnz 0x52(%rip)
7eb0(3): mov 0x28(%rbp),%edi
7eb3(5): call 0xffff9c2d(%rip)
7eb8(2): test %eax,%eax
7eba(2): jz 0xffffff8c(%rip)
7ebc(5): call 0xffff9a74(%rip)
7ec1(3): mov %rax,%r12
7ec4(2): jmp 0x64(%rip)
7ec6(a): nop 0x0(%rax,%rax,1)
7ed0(5): call 0xffff9c10(%rip)
7ed5(2): test %eax,%eax
7ed7(6): jz 0xffffff6f(%rip)
7edd(5): call 0xffff9a53(%rip)
7ee2(2): mov (%rax),%ebx
7ee4(5): jmp 0xffffff64(%rip)
7ee9(7): nop 0x0(%rax)
7ef0(3): mov %rdi,%rbx
7ef3(3): mov %rbx,%rdi
7ef6(5): call 0xffff9e3a(%rip)
7efb(5): jmp 0xffffff18(%rip)
7f00(5): call 0xffff9a30(%rip)
7f05(3): mov 0x28(%rbp),%edi
7f08(3): mov %rax,%r12
7f0b(2): mov (%rax),%ebx
7f0d(5): call 0xffff9bd3(%rip)
7f12(2): test %eax,%eax
7f14(6): jz 0xffffff34(%rip)
7f1a(2): test %ebx,%ebx
7f1c(6): jnz 0xffffff2c(%rip)
7f22(6): nop 0x0(%rax,%rax,1)
7f28(4): mov (%r12),%ebx
7f2c(5): jmp 0xffffff1c(%rip)
7f31(5): call 0xffff99ff(%rip)
7f36(2): mov %ebx,(%rax)
7f38(5): mov $0xffffffff,%ebx
7f3d(5): jmp 0xffffff49(%rip)

"rpl_fts_read" :
7f50(2): push %r14
7f52(2): push %r13
7f54(2): push %r12
7f56(1): push %rbp
7f57(1): push %rbx
7f58(3): mov (%rdi),%rbp
7f5b(3): test %rbp,%rbp
7f5e(6): jz 0x110(%rip)
7f64(3): mov 0x48(%rdi),%edx
7f67(3): test $0x20,%dh
7f6a(6): jnz 0x104(%rip)
7f70(4): movzx 0x74(%rbp),%eax
7f74(5): mov $0x3,%ebx
7f79(3): mov %rdi,%r12
7f7c(4): mov %bx,0x74(%rbp)
7f80(4): cmp $0x1,%ax
7f84(6): jz 0x24c(%rip)
7f8a(4): cmp $0x2,%ax
7f8e(4): movzx 0x70(%rbp),%ecx
7f92(6): jz 0xee(%rip)
7f98(4): cmp $0x1,%cx
7f9c(2): jnz 0x34(%rip)
7f9e(5): jmp 0x222(%rip)
7fa3(5): nop 0x0(%rax,%rax,1)
7fa8(4): mov %rbx,(%r12)
7fac(3): mov %rbp,%rdi
7faf(5): call 0xffff9d81(%rip)
7fb4(5): cmp $0x0,0x58(%rbx)
7fb9(6): jz 0x237(%rip)
7fbf(4): movzx 0x74(%rbx),%eax
7fc3(3): mov %rbx,%rbp
7fc6(4): cmp $0x4,%ax
7fca(6): jnz 0x32e(%rip)
7fd0(4): mov 0x10(%rbp),%rbx
7fd4(3): test %rbx,%rbx
7fd7(2): jnz 0xffffffd1(%rip)
7fd9(4): mov 0x8(%rbp),%rbx
7fdd(5): cmp $0x0,0x18(%rbx)
7fe2(6): jnz 0x56e(%rip)
7fe8(4): mov %rbx,(%r12)
7fec(3): mov %rbp,%rdi
7fef(5): call 0xffff9d41(%rip)
7ff4(5): cmp $0xffffffff,0x58(%rbx)
7ff9(6): jz 0x4b9(%rip)
7fff(5): cmp $0xb,0x70(%rbx)
8004(6): jz 0x13b(%rip)
800a(5): mov 0x20(%r12),%rdx
800f(4): mov 0x48(%rbx),%rax
8013(4): mov $0x0,0x0(%rdx,%rax,1)
8017(5): cmp $0x0,0x58(%rbx)
801c(6): jz 0x3c4(%rip)
8022(4): movzx 0x72(%rbx),%eax
8026(2): test $0x2,%al
8028(6): jz 0x370(%rip)
802e(5): mov 0x48(%r12),%eax
8033(3): mov 0x44(%rbx),%edi
8036(2): test $0x4,%al
8038(6): jz 0x404(%rip)
803e(5): call 0xffff9aa2(%rip)
8043(5): mov 0x48(%r12),%edi
8048(5): cmp $0x2,0x70(%rbx)
804d(2): jz 0x16(%rip)
804f(3): mov 0x40(%rbx),%ecx
8052(2): test %ecx,%ecx
8054(6): jz 0x3a4(%rip)
805a(5): mov $0x7,%edx
805f(4): mov %dx,0x70(%rbx)
8063(6): and $0x2000,%edi
8069(3): mov %rbx,%rbp
806c(2): jz 0x7e(%rip)
806e(2): xor %ebp,%ebp
8070(1): pop %rbx
8071(3): mov %rbp,%rax
8074(1): pop %rbp
8075(2): pop %r12
8077(2): pop %r13
8079(2): pop %r14
807b(1): ret near (%rsp)
807c(4): nop 0x0(%rax)
8080(3): lea 0xfffffff4(%rcx),%eax
8083(4): cmp $0x1,%ax
8087(2): jbe 0x79(%rip)
8089(4): cmp $0x1,%cx
808d(6): jnz 0xffffff43(%rip)
8093(3): test $0x40,%dl
8096(6): jz 0xb2(%rip)
809c(5): mov 0x18(%r12),%rax
80a1(4): cmp %rax,0x78(%rbp)
80a5(6): jz 0xa3(%rip)
80ab(4): test $0x2,0x72(%rbp)
80af(6): jnz 0x4e1(%rip)
80b5(5): mov 0x8(%r12),%rdi
80ba(3): test %rdi,%rdi
80bd(2): jz 0x10(%rip)
80bf(5): call 0xffffe761(%rip)
80c4(9): mov $0x0,0x8(%r12)
80cd(5): mov 0x48(%r12),%edi
80d2(6): mov $0x6,%r10d
80d8(5): lea 0x58(%r12),%rsi
80dd(5): mov %r10w,0x70(%rbp)
80e2(3): mov %rbp,%rdx
80e5(5): call 0xffffee8b(%rip)
80ea(1): pop %rbx
80eb(3): mov %rbp,%rax
80ee(1): pop %rbp
80ef(2): pop %r12
80f1(2): pop %r13
80f3(2): pop %r14
80f5(1): ret near (%rsp)
80f6(a): nop 0x0(%rax,%rax,1)
8100(5): mov $0x1,%edx
8105(3): mov %rbp,%rsi
8108(5): call 0xffffe3a8(%rip)
810d(4): cmp $0x1,%ax
8111(4): mov %ax,0x70(%rbp)
8115(6): jz 0x347(%rip)
811b(4): cmp $0xb,%ax
811f(4): mov %rbp,(%r12)
8123(2): jnz 0xffffffc7(%rip)
8125(3): nop (%rax)
8128(7): mov 0xa8(%rbp),%rax
812f(4): cmp $0x2,%rax
8133(6): jz 0x3a5(%rip)
8139(4): cmp $0x1,%rax
813d(2): jz 0xffffffad(%rip)
813f(5): call 0xffff97e1(%rip)
8144(4): nop 0x0(%rax)
8148(5): mov 0x8(%r12),%rdi
814d(3): test %rdi,%rdi
8150(6): jz 0x218(%rip)
8156(3): test $0x10,%dh
8159(6): jnz 0x1f9(%rip)
815f(4): mov 0x30(%rbp),%rcx
8163(5): mov $0xffffffff,%edx
8168(3): mov %rbp,%rsi
816b(3): mov %r12,%rdi
816e(5): call 0xffffead2(%rip)
8173(2): test %eax,%eax
8175(6): jz 0x2bd(%rip)
817b(5): call 0xffff97b5(%rip)
8180(2): mov (%rax),%eax
8182(5): or $0x1,0x72(%rbp)
8187(3): mov %eax,0x40(%rbp)
818a(5): mov 0x8(%r12),%rbp
818f(3): test %rbp,%rbp
8192(6): jz 0x1f4(%rip)
8198(3): mov %rbp,%rax
819b(5): nop 0x0(%rax,%rax,1)
81a0(4): mov 0x8(%rax),%rdx
81a4(4): mov 0x30(%rdx),%rdx
81a8(4): mov %rdx,0x30(%rax)
81ac(4): mov 0x10(%rax),%rax
81b0(3): test %rax,%rax
81b3(2): jnz 0xffffffed(%rip)
81b5(5): jmp 0x1d1(%rip)
81ba(6): nop 0x0(%rax,%rax,1)
81c0(4): cmp $0x4,%ax
81c4(6): jnz 0xfffffecf(%rip)
81ca(5): jmp 0xfffffee1(%rip)
81cf(1): nop 
81d0(3): mov %rbp,%rsi
81d3(2): xor %edx,%edx
81d5(5): call 0xffffe2db(%rip)
81da(4): mov %ax,0x70(%rbp)
81de(3): mov %rbp,%rax
81e1(1): pop %rbx
81e2(1): pop %rbp
81e3(2): pop %r12
81e5(2): pop %r13
81e7(2): pop %r14
81e9(1): ret near (%rsp)
81ea(6): nop 0x0(%rax,%rax,1)
81f0(3): mov %r12,%rdi
81f3(5): call 0xffffe8cd(%rip)
81f8(2): test %eax,%eax
81fa(6): jnz 0x407(%rip)
8200(9): test $0x102,0x48(%r12)
8209(5): mov 0x58(%r12),%rdi
820e(6): jz 0x13a(%rip)
8214(3): test %rdi,%rdi
8217(2): jz 0x7(%rip)
8219(5): call 0x1377(%rip)
821e(4): mov 0x60(%rbx),%rdx
8222(7): lea 0x108(%rbx),%rbp
8229(5): mov 0x20(%r12),%rdi
822e(3): mov %rbp,%rsi
8231(4): mov %rdx,0x48(%rbx)
8235(4): add $0x1,%rdx
8239(5): call 0xffff99f7(%rip)
823e(5): mov $0x2f,%esi
8243(3): mov %rbp,%rdi
8246(5): call 0xffff985a(%rip)
824b(3): test %rax,%rax
824e(2): jz 0x2d(%rip)
8250(3): cmp %rax,%rbp
8253(6): jz 0x1cd(%rip)
8259(4): lea 0x1(%rax),%r13
825d(3): mov %r13,%rdi
8260(5): call 0xffff97b0(%rip)
8265(4): lea 0x1(%rax),%rdx
8269(3): mov %rax,%r14
826c(3): mov %r13,%rsi
826f(3): mov %rbp,%rdi
8272(5): call 0xffff99be(%rip)
8277(4): mov %r14,0x60(%rbx)
827b(5): mov 0x20(%r12),%rax
8280(5): mov 0x48(%r12),%edi
8285(5): lea 0x58(%r12),%rsi
828a(3): mov %rbx,%rbp
828d(4): mov %rax,0x38(%rbx)
8291(4): mov %rax,0x30(%rbx)
8295(5): call 0xffffe8fb(%rip)
829a(4): movzx 0x70(%rbx),%eax
829e(4): cmp $0xb,%ax
82a2(4): mov %rbp,(%r12)
82a6(6): jz 0xfffffe82(%rip)
82ac(4): cmp $0x1,%ax
82b0(6): jnz 0xfffffe3a(%rip)
82b6(5): cmp $0x0,0x58(%rbp)
82bb(2): jnz 0xb(%rip)
82bd(4): mov 0x78(%rbp),%rax
82c1(5): mov %rax,0x18(%r12)
82c6(5): mov 0x48(%r12),%edi
82cb(5): lea 0x58(%r12),%rsi
82d0(3): mov %rbp,%rdx
82d3(5): call 0xffffebed(%rip)
82d8(2): test %al,%al
82da(6): jnz 0xfffffe10(%rip)
82e0(5): call 0xffff9650(%rip)
82e5(2): xor %ebp,%ebp
82e7(6): mov $0xc,(%rax)
82ed(5): jmp 0xfffffdfd(%rip)
82f2(6): nop 0x0(%rax,%rax,1)
82f8(4): cmp $0x2,%ax
82fc(6): jz 0x2a1(%rip)
8302(4): mov 0x8(%rbp),%rax
8306(7): lea 0x108(%rbp),%rsi
830d(4): mov 0x48(%rax),%rdi
8311(4): mov 0x38(%rax),%rax
8315(5): cmp $0x2f,0xffffffff(%rax,%rdi,1)
831a(4): lea 0xffffffff(%rdi),%rdx
831e(4): cmove %rdx,%rdi
8322(5): add 0x20(%r12),%rdi
8327(3): mov $0x2f,(%rdi)
832a(4): mov 0x60(%rbp),%rax
832e(4): add $0x1,%rdi
8332(4): lea 0x1(%rax),%rdx
8336(5): call 0xffff98fa(%rip)
833b(4): movzx 0x70(%rbp),%eax
833f(5): jmp 0xffffff5f(%rip)
8344(4): nop 0x0(%rax)
8348(5): call 0xffff99e8(%rip)
834d(5): jmp 0xfffffed1(%rip)
8352(3): and $0xef,%dh
8355(5): mov %edx,0x48(%r12)
835a(5): call 0xffffe4c6(%rip)
835f(9): mov $0x0,0x8(%r12)
8368(5): mov $0x3,%esi
836d(3): mov %r12,%rdi
8370(5): call 0xffffecc0(%rip)
8375(3): test %rax,%rax
8378(5): mov %rax,0x8(%r12)
837d(6): jz 0xf7(%rip)
8383(3): mov %rax,%rbp
8386(9): mov $0x0,0x8(%r12)
838f(5): jmp 0xffffff73(%rip)
8394(4): nop 0x0(%rax)
8398(2): test $0x1,%al
839a(6): jnz 0xfffffca9(%rip)
83a0(4): mov 0x8(%rbx),%rsi
83a4(7): lea 0x381e(%rip),%rcx
83ab(5): mov $0xffffffff,%edx
83b0(3): mov %r12,%rdi
83b3(5): call 0xffffe88d(%rip)
83b8(2): test %eax,%eax
83ba(6): jz 0xfffffc89(%rip)
83c0(5): call 0xffff9570(%rip)
83c5(5): mov 0x48(%r12),%edi
83ca(2): mov (%rax),%eax
83cc(6): or $0x2000,%edi
83d2(3): mov %eax,0x40(%rbx)
83d5(5): mov %edi,0x48(%r12)
83da(5): jmp 0xfffffc6e(%rip)
83df(1): nop 
83e0(3): mov %r12,%rdi
83e3(5): call 0xffffe6dd(%rip)
83e8(2): test %eax,%eax
83ea(2): jnz 0xffffffd6(%rip)
83ec(5): jmp 0xfffffc57(%rip)
83f1(7): nop 0x0(%rax)
83f8(5): mov $0x6,%eax
83fd(5): lea 0x58(%r12),%rsi
8402(3): mov %rbx,%rdx
8405(4): mov %ax,0x70(%rbx)
8409(5): call 0xffffeb67(%rip)
840e(5): mov 0x48(%r12),%edi
8413(5): jmp 0xfffffc50(%rip)
8418(8): nop 0x0(%rax,%rax,1)
8420(7): cmp $0x0,0x109(%rbx)
8427(6): jnz 0xfffffe32(%rip)
842d(5): jmp 0xfffffe4e(%rip)
8432(5): mov 0x8(%r12),%rbp
8437(5): jmp 0xffffff4f(%rip)
843c(3): test $0x2,%ah
843f(6): jz 0x19e(%rip)
8445(2): mov %edi,%esi
8447(5): mov $0x1,%edx
844c(3): mov %r12,%rdi
844f(5): call 0xffffe601(%rip)
8454(3): mov 0x44(%rbx),%edi
8457(5): jmp 0xfffffbe7(%rip)
845c(5): mov 0x48(%r12),%esi
8461(4): test $0x4,%sil
8465(6): jz 0x207(%rip)
846b(4): mov %rbp,(%r12)
846f(5): jmp 0xfffffe47(%rip)
8474(5): mov 0x48(%r12),%edi
8479(6): test $0x2000,%edi
847f(6): jnz 0xfffffbef(%rip)
8485(4): mov 0x40(%rbp),%r9d
8489(3): test %r9d,%r9d
848c(2): jz 0x14(%rip)
848e(5): cmp $0x4,0x70(%rbp)
8493(2): jz 0xd(%rip)
8495(6): mov $0x7,%r8d
849b(5): mov %r8w,0x70(%rbp)
84a0(5): lea 0x58(%r12),%rsi
84a5(3): mov %rbp,%rdx
84a8(5): call 0xffffeac8(%rip)
84ad(5): jmp 0xfffffc3d(%rip)
84b2(3): mov %rbx,%rdi
84b5(2): xor %ebp,%ebp
84b7(5): call 0xffff9879(%rip)
84bc(5): call 0xffff9474(%rip)
84c1(6): mov $0x0,(%rax)
84c7(8): mov $0x0,(%r12)
84cf(5): jmp 0xfffffc1b(%rip)
84d4(4): nop 0x0(%rax)
84d8(4): mov 0x8(%rbp),%rbx
84dc(5): cmp $0x0,0x68(%rbx)
84e1(2): jnz 0x13(%rip)
84e3(5): mov 0x48(%r12),%eax
84e8(3): and $0x18,%eax
84eb(3): cmp $0x18,%eax
84ee(6): jz 0x15f(%rip)
84f4(2): xor %edx,%edx
84f6(3): mov %rbp,%rsi
84f9(3): mov %r12,%rdi
84fc(5): call 0xffffdfb4(%rip)
8501(6): mov 0x90(%rbp),%edx
8507(4): mov %ax,0x70(%rbp)
850b(6): and $0xf000,%edx
8511(6): cmp $0x4000,%edx
8517(6): jnz 0xfffffd95(%rip)
851d(5): cmp $0x0,0x58(%rbp)
8522(6): jz 0x11c(%rip)
8528(4): mov 0x68(%rbx),%rcx
852c(4): lea 0xffffffff(%rcx),%rdx
8530(4): cmp $0xfffffffd,%rdx
8534(2): jnbe 0x6(%rip)
8536(4): mov %rdx,0x68(%rbx)
853a(4): cmp $0x1,%ax
853e(6): jnz 0xfffffbac(%rip)
8544(5): jmp 0xfffffd82(%rip)
8549(7): nop 0x0(%rax)
8550(4): mov 0x48(%rbx),%rax
8554(5): mov 0x20(%r12),%rdx
8559(5): mov $0x3,%esi
855e(4): mov %rbx,(%r12)
8562(3): mov %r12,%rdi
8565(4): mov $0x0,0x0(%rdx,%rax,1)
8569(5): call 0xffffeac7(%rip)
856e(3): test %rax,%rax
8571(3): mov %rax,%rbx
8574(2): jz 0x54(%rip)
8576(3): mov %rbp,%rdi
8579(3): mov %rbx,%rbp
857c(5): call 0xffff97b4(%rip)
8581(5): jmp 0xfffffd81(%rip)
8586(a): nop 0x0(%rax,%rax,1)
8590(3): mov 0x44(%rbp),%edi
8593(5): call 0xffff954d(%rip)
8598(5): jmp 0xfffffb1d(%rip)
859d(5): mov $0x1,%edx
85a2(3): mov %rbx,%rsi
85a5(3): mov %r12,%rdi
85a8(5): call 0xffffdf08(%rip)
85ad(4): cmp $0x1,%ax
85b1(4): mov %ax,0x70(%rbx)
85b5(2): jz 0x5c(%rip)
85b7(5): mov $0x3,%esi
85bc(3): mov %rbx,%rbp
85bf(4): mov %si,0x74(%rbx)
85c3(5): jmp 0xfffffd3f(%rip)
85c8(6): test $0x20,0x49(%r12)
85ce(6): jnz 0xfffffaa0(%rip)
85d4(4): mov 0x8(%rbp),%rbx
85d8(5): jmp 0xfffffa10(%rip)
85dd(5): call 0xffff9613(%rip)
85e2(2): test %eax,%eax
85e4(2): jz 0x15(%rip)
85e6(5): call 0xffff934a(%rip)
85eb(2): mov (%rax),%eax
85ed(3): mov %eax,0x40(%rbx)
85f0(9): or $0x2000,0x48(%r12)
85f9(3): mov 0x44(%rbx),%edi
85fc(5): jmp 0xfffffa42(%rip)
8601(9): or $0x2000,0x48(%r12)
860a(2): xor %ebp,%ebp
860c(5): jmp 0xfffffade(%rip)
8611(5): mov 0x48(%r12),%esi
8616(4): test $0x4,%sil
861a(2): jnz 0xffffff9d(%rip)
861c(5): mov 0x2c(%r12),%edi
8621(7): lea 0x35a2(%rip),%rdx
8628(5): call 0xffffe5d8(%rip)
862d(2): test %eax,%eax
862f(3): mov %eax,0x44(%rbx)
8632(2): js 0x7e(%rip)
8634(5): or $0x2,0x72(%rbx)
8639(5): jmp 0xffffff7e(%rip)
863e(4): cmp $0x1,%ax
8642(6): jnz 0xfffffaa8(%rip)
8648(5): jmp 0xfffffc75(%rip)
864d(5): mov 0x2c(%r12),%esi
8652(3): mov %rbx,%rdi
8655(5): call 0xffffe38b(%rip)
865a(3): cmp $0x2,%eax
865d(6): jnz 0xfffffe97(%rip)
8663(4): movzx 0x70(%rbp),%eax
8667(5): jmp 0xfffffc45(%rip)
866c(5): mov 0x2c(%r12),%edi
8671(7): lea 0x3552(%rip),%rdx
8678(5): call 0xffffe588(%rip)
867d(2): test %eax,%eax
867f(3): mov %eax,0x44(%rbp)
8682(2): js 0x10(%rip)
8684(5): or $0x2,0x72(%rbp)
8689(4): movzx 0x70(%rbp),%eax
868d(5): jmp 0xfffffc11(%rip)
8692(5): call 0xffff929e(%rip)
8697(2): mov (%rax),%eax
8699(6): mov $0x7,%r11d
869f(5): mov %r11w,0x70(%rbp)
86a4(3): mov %eax,0x40(%rbp)
86a7(4): mov %rbp,(%r12)
86ab(5): jmp 0xfffffa3f(%rip)
86b0(5): call 0xffff9280(%rip)
86b5(2): mov (%rax),%eax
86b7(5): mov $0x7,%edi
86bc(4): mov %di,0x70(%rbx)
86c0(3): mov %eax,0x40(%rbx)
86c3(5): jmp 0xfffffef4(%rip)

"rpl_fts_set" :
86d0(3): cmp $0x4,%edx
86d3(2): jnbe 0xd(%rip)
86d5(4): mov %dx,0x74(%rsi)
86d9(2): xor %eax,%eax
86db(1): ret near (%rsp)
86dc(4): nop 0x0(%rax)
86e0(4): sub $0x8,%rsp
86e4(5): call 0xffff924c(%rip)
86e9(6): mov $0x16,(%rax)
86ef(5): mov $0x1,%eax
86f4(4): add $0x8,%rsp
86f8(1): ret near (%rsp)

"rpl_fts_children" :
8700(2): push %r14
8702(2): push %r13
8704(2): push %r12
8706(1): push %rbp
8707(3): mov %esi,%r12d
870a(1): push %rbx
870b(3): mov %rdi,%rbx
870e(5): call 0xffff9222(%rip)
8713(7): test $0xffffefff,%r12d
871a(3): mov %rax,%r13
871d(6): jnz 0xeb(%rip)
8723(3): mov (%rbx),%rbp
8726(6): mov $0x0,(%rax)
872c(4): test $0x20,0x49(%rbx)
8730(2): jnz 0x80(%rip)
8732(4): movzx 0x70(%rbp),%eax
8736(4): cmp $0x9,%ax
873a(2): jz 0x66(%rip)
873c(4): cmp $0x1,%ax
8740(2): jnz 0x70(%rip)
8742(4): mov 0x8(%rbx),%rdi
8746(3): test %rdi,%rdi
8749(2): jz 0x7(%rip)
874b(5): call 0xffffe0d5(%rip)
8750(7): cmp $0x1000,%r12d
8757(6): mov $0x1,%r14d
875d(2): jnz 0xf(%rip)
875f(7): or $0x1000,0x48(%rbx)
8766(6): mov $0x2,%r14d
876c(5): cmp $0x0,0x58(%rbp)
8771(2): jnz 0x14(%rip)
8773(4): mov 0x30(%rbp),%rax
8777(3): cmp $0x2f,(%rax)
877a(2): jz 0xb(%rip)
877c(3): mov 0x48(%rbx),%esi
877f(4): test $0x4,%sil
8783(2): jz 0x3d(%rip)
8785(3): mov %r14d,%esi
8788(3): mov %rbx,%rdi
878b(5): call 0xffffe8a5(%rip)
8790(4): mov %rax,0x8(%rbx)
8794(1): pop %rbx
8795(1): pop %rbp
8796(2): pop %r12
8798(2): pop %r13
879a(2): pop %r14
879c(1): ret near (%rsp)
879d(3): nop (%rax)
87a0(1): pop %rbx
87a1(4): mov 0x10(%rbp),%rax
87a5(1): pop %rbp
87a6(2): pop %r12
87a8(2): pop %r13
87aa(2): pop %r14
87ac(1): ret near (%rsp)
87ad(3): nop (%rax)
87b0(1): pop %rbx
87b1(2): xor %eax,%eax
87b3(1): pop %rbp
87b4(2): pop %r12
87b6(2): pop %r13
87b8(2): pop %r14
87ba(1): ret near (%rsp)
87bb(5): nop 0x0(%rax,%rax,1)
87c0(3): mov 0x2c(%rbx),%edi
87c3(7): lea 0x3400(%rip),%rdx
87ca(5): call 0xffffe436(%rip)
87cf(2): test %eax,%eax
87d1(2): mov %eax,%ebp
87d3(2): js 0x56(%rip)
87d5(3): mov %r14d,%esi
87d8(3): mov %rbx,%rdi
87db(5): call 0xffffe855(%rip)
87e0(4): test $0x2,0x49(%rbx)
87e4(4): mov %rax,0x8(%rbx)
87e8(2): jnz 0x30(%rip)
87ea(2): mov %ebp,%edi
87ec(5): call 0xffff9404(%rip)
87f1(2): test %eax,%eax
87f3(2): jnz 0x45(%rip)
87f5(2): mov %ebp,%edi
87f7(5): call 0xffff92e9(%rip)
87fc(4): mov 0x8(%rbx),%rax
8800(2): jmp 0xffffff94(%rip)
8802(6): nop 0x0(%rax,%rax,1)
8808(6): mov $0x16,(%rax)
880e(2): xor %eax,%eax
8810(5): jmp 0xffffff84(%rip)
8815(3): nop (%rax)
8818(5): mov $0x1,%edx
881d(2): mov %ebp,%esi
881f(3): mov %rbx,%rdi
8822(5): call 0xffffe22e(%rip)
8827(2): jmp 0xffffffd5(%rip)
8829(8): mov $0x0,0x8(%rbx)
8831(2): xor %eax,%eax
8833(5): jmp 0xffffff61(%rip)
8838(4): mov 0x0(%r13),%ebx
883c(2): mov %ebp,%edi
883e(5): call 0xffff92a2(%rip)
8843(2): xor %eax,%eax
8845(4): mov %ebx,0x0(%r13)
8849(5): jmp 0xffffff4b(%rip)

"rpl_mbrtowc" :
8850(2): push %r13
8852(2): push %r12
8854(3): mov %rsi,%r13
8857(1): push %rbp
8858(1): push %rbx
8859(3): mov %rdi,%rbx
885c(3): mov %rdx,%r12
885f(4): sub $0x18,%rsp
8863(9): mov $0x28,%rax
886c(5): mov %rax,0x8(%rsp)
8871(2): xor %eax,%eax
8873(5): lea 0x4(%rsp),%rax
8878(3): test %rdi,%rdi
887b(4): cmove %rax,%rbx
887f(3): mov %rbx,%rdi
8882(5): call 0xffff91de(%rip)
8887(4): cmp $0xfffffffd,%rax
888b(3): mov %rax,%rbp
888e(2): jbe 0x22(%rip)
8890(3): test %r12,%r12
8893(2): jz 0x1d(%rip)
8895(2): xor %edi,%edi
8897(5): call 0x1d9(%rip)
889c(2): test %al,%al
889e(2): jnz 0x12(%rip)
88a0(5): movzx 0x0(%r13),%eax
88a5(5): mov $0x1,%ebp
88aa(2): mov %eax,(%rbx)
88ac(4): nop 0x0(%rax)
88b0(5): mov 0x8(%rsp),%rdx
88b5(9): xor $0x28,%rdx
88be(3): mov %rbp,%rax
88c1(2): jnz 0xd(%rip)
88c3(4): add $0x18,%rsp
88c7(1): pop %rbx
88c8(1): pop %rbp
88c9(2): pop %r12
88cb(2): pop %r13
88cd(1): ret near (%rsp)
88ce(5): call 0xffff9172(%rip)

"close_stream" :
88e0(2): push %r12
88e2(1): push %rbp
88e3(3): mov %rdi,%rbp
88e6(1): push %rbx
88e7(5): call 0xffff9089(%rip)
88ec(3): mov 0x0(%rbp),%ebx
88ef(3): mov %rbp,%rdi
88f2(3): mov %rax,%r12
88f5(5): call 0x16db(%rip)
88fa(3): and $0x20,%ebx
88fd(2): test %ebx,%ebx
88ff(2): jnz 0x19(%rip)
8901(2): test %eax,%eax
8903(2): jz 0xc(%rip)
8905(3): test %r12,%r12
8908(5): mov $0xffffffff,%eax
890d(2): jz 0x3b(%rip)
890f(1): pop %rbx
8910(1): pop %rbp
8911(2): pop %r12
8913(1): ret near (%rsp)
8914(4): nop 0x0(%rax)
8918(2): test %eax,%eax
891a(2): jnz 0x1e(%rip)
891c(5): call 0xffff9014(%rip)
8921(6): mov $0x0,(%rax)
8927(5): mov $0xffffffff,%eax
892c(1): pop %rbx
892d(1): pop %rbp
892e(2): pop %r12
8930(1): ret near (%rsp)
8931(7): nop 0x0(%rax)
8938(1): pop %rbx
8939(5): mov $0xffffffff,%eax
893e(1): pop %rbp
893f(2): pop %r12
8941(1): ret near (%rsp)
8942(6): nop 0x0(%rax,%rax,1)
8948(5): call 0xffff8fe8(%rip)
894d(3): cmp $0x9,(%rax)
8950(1): pop %rbx
8951(1): pop %rbp
8952(2): pop %r12
8954(3): setnz %al
8957(3): movzx %al,%eax
895a(2): neg %eax
895c(1): ret near (%rsp)

"cycle_check_init" :
8960(8): mov $0x0,0x10(%rdi)
8968(7): mov $0x95f616,0x18(%rdi)
896f(1): ret near (%rsp)

"cycle_check" :
8970(7): cmp $0x95f616,0x18(%rdi)
8977(2): jnz 0x60(%rip)
8979(4): mov 0x10(%rdi),%rdx
897d(4): mov 0x8(%rsi),%rcx
8981(3): test %rdx,%rdx
8984(2): jz 0x1c(%rip)
8986(3): cmp %rcx,(%rdi)
8989(2): jz 0x2f(%rip)
898b(4): lea 0x1(%rdx),%r8
898f(2): xor %eax,%eax
8991(3): test %r8,%rdx
8994(4): mov %r8,0x10(%rdi)
8998(2): jz 0x38(%rip)
899a(2): REP ret near (%rsp)
899c(4): nop 0x0(%rax)
89a0(8): mov $0x1,0x10(%rdi)
89a8(3): mov (%rsi),%rax
89ab(3): mov %rcx,(%rdi)
89ae(4): mov %rax,0x8(%rdi)
89b2(2): xor %eax,%eax
89b4(1): ret near (%rsp)
89b5(3): nop (%rax)
89b8(4): mov 0x8(%rdi),%rax
89bc(3): cmp %rax,(%rsi)
89bf(2): jnz 0xffffffcc(%rip)
89c1(5): mov $0x1,%eax
89c6(1): ret near (%rsp)
89c7(9): nop 0x0(%rax,%rax,1)
89d0(3): test %r8,%r8
89d3(2): jz 0xffffffee(%rip)
89d5(2): jmp 0xffffffd3(%rip)
89d7(7): lea 0x3272(%rip),%rcx
89de(7): lea 0x322b(%rip),%rsi
89e5(7): lea 0x3248(%rip),%rdi
89ec(4): sub $0x8,%rsp
89f0(5): mov $0x3c,%edx
89f5(5): call 0xffff90cb(%rip)

"open_safer" :
8a00(4): sub $0x58,%rsp
8a04(5): mov %rdx,0x30(%rsp)
8a09(2): xor %edx,%edx
8a0b(9): mov $0x28,%rax
8a14(5): mov %rax,0x18(%rsp)
8a19(2): xor %eax,%eax
8a1b(4): test $0x40,%sil
8a1f(2): jnz 0x29(%rip)
8a21(2): xor %eax,%eax
8a23(5): call 0xffff922d(%rip)
8a28(2): mov %eax,%edi
8a2a(5): call 0x1566(%rip)
8a2f(5): mov 0x18(%rsp),%rcx
8a34(9): xor $0x28,%rcx
8a3d(2): jnz 0x2c(%rip)
8a3f(4): add $0x58,%rsp
8a43(1): ret near (%rsp)
8a44(4): nop 0x0(%rax)
8a48(5): lea 0x60(%rsp),%rax
8a4d(7): mov $0x10,(%rsp)
8a54(4): mov 0x30(%rsp),%edx
8a58(5): mov %rax,0x8(%rsp)
8a5d(5): lea 0x20(%rsp),%rax
8a62(5): mov %rax,0x10(%rsp)
8a67(2): jmp 0xffffffba(%rip)
8a69(5): call 0xffff8fd7(%rip)

"hard_locale" :
8a70(4): sub $0x8,%rsp
8a74(2): xor %esi,%esi
8a76(5): call 0xffff919a(%rip)
8a7b(3): mov %rax,%rdx
8a7e(5): mov $0x1,%eax
8a83(3): test %rdx,%rdx
8a86(2): jz 0x1f(%rip)
8a88(7): lea 0x31cd(%rip),%rdi
8a8f(5): mov $0x2,%ecx
8a94(3): mov %rdx,%rsi
8a97(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8a99(3): setnbe %cl
8a9c(3): sbb $0x0,%cl
8a9f(2): xor %eax,%eax
8aa1(2): test %cl,%cl
8aa3(2): jnz 0xd(%rip)
8aa5(4): add $0x8,%rsp
8aa9(1): ret near (%rsp)
8aaa(6): nop 0x0(%rax,%rax,1)
8ab0(7): lea 0x31a7(%rip),%rdi
8ab7(5): mov $0x6,%ecx
8abc(3): mov %rdx,%rsi
8abf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8ac1(3): setnbe %al
8ac4(2): sbb $0x0,%al
8ac6(2): test %al,%al
8ac8(3): setnz %al
8acb(4): add $0x8,%rsp
8acf(1): ret near (%rsp)

"next_prime" :
8ad0(4): cmp $0xa,%rdi
8ad4(5): mov $0xa,%eax
8ad9(a): mov $0x-6148914691236517205,%r9
8ae3(4): cmovnae %rax,%rdi
8ae7(4): or $0x1,%rdi
8aeb(4): cmp $0xffffffff,%rdi
8aef(2): jz 0x70(%rip)
8af1(7): nop 0x0(%rax)
8af8(3): mov %rdi,%rax
8afb(3): mov %rdi,%rcx
8afe(3): mul %rax,%r9,%rdx
8b01(3): mov %rdx,%rax
8b04(3): shr $0x1,%rax
8b07(4): lea 0x0(%rax,%rax,2),%rax
8b0b(3): sub %rax,%rcx
8b0e(4): cmp $0x9,%rdi
8b12(3): mov %rcx,%rax
8b15(2): jbe 0x3b(%rip)
8b17(3): test %rcx,%rcx
8b1a(2): jz 0x3b(%rip)
8b1c(6): mov $0x10,%r8d
8b22(5): mov $0x9,%esi
8b27(5): mov $0x3,%ecx
8b2c(2): jmp 0xd(%rip)
8b2e(2): nop 
8b30(4): add $0x8,%r8
8b34(3): test %rdx,%rdx
8b37(2): jz 0x1e(%rip)
8b39(4): add $0x2,%rcx
8b3d(2): xor %edx,%edx
8b3f(3): mov %rdi,%rax
8b42(3): div %rcx,%rax
8b45(3): add %r8,%rsi
8b48(3): cmp %rdi,%rsi
8b4b(3): mov %rdx,%rax
8b4e(2): jb 0xffffffe2(%rip)
8b50(3): test %rax,%rax
8b53(2): jnz 0xc(%rip)
8b55(4): add $0x2,%rdi
8b59(4): cmp $0xffffffff,%rdi
8b5d(2): jnz 0xffffff9b(%rip)
8b5f(3): mov %rdi,%rax
8b62(1): ret near (%rsp)

"raw_hasher" :
8b70(3): mov %rdi,%rax
8b73(2): xor %edx,%edx
8b75(4): ror $0x3,%rax
8b79(3): div %rsi,%rax
8b7c(3): mov %rdx,%rax
8b7f(1): ret near (%rsp)

"raw_comparator" :
8b80(3): cmp %rsi,%rdi
8b83(3): setz %al
8b86(1): ret near (%rsp)

"safe_hasher" :
8b90(1): push %rbx
8b91(3): mov %rdi,%rbx
8b94(3): mov %rsi,%rdi
8b97(4): mov 0x10(%rbx),%rsi
8b9b(3): call 0x30(%rbx)
8b9e(4): cmp %rax,0x10(%rbx)
8ba2(2): jbe 0xb(%rip)
8ba4(4): shl/sal $0x4,%rax
8ba8(3): add (%rbx),%rax
8bab(1): pop %rbx
8bac(1): ret near (%rsp)
8bad(5): call 0xffff8d73(%rip)

"hash_find_entry" :
8bc0(2): push %r14
8bc2(2): push %r13
8bc4(3): mov %rdx,%r14
8bc7(2): push %r12
8bc9(1): push %rbp
8bca(3): mov %rdi,%r12
8bcd(1): push %rbx
8bce(3): mov %rsi,%rbp
8bd1(3): mov %ecx,%r13d
8bd4(5): call 0xffffffbc(%rip)
8bd9(3): mov %rax,(%r14)
8bdc(3): mov (%rax),%rsi
8bdf(3): test %rsi,%rsi
8be2(6): jz 0xee(%rip)
8be8(3): cmp %rbp,%rsi
8beb(3): mov %rax,%rbx
8bee(6): jz 0x95(%rip)
8bf4(3): mov %rbp,%rdi
8bf7(5): call 0x38(%r12)
8bfc(2): test %al,%al
8bfe(6): jnz 0x82(%rip)
8c04(4): mov 0x8(%rbx),%rax
8c08(3): test %rax,%rax
8c0b(6): jz 0xc5(%rip)
8c11(3): mov (%rax),%rsi
8c14(3): cmp %rsi,%rbp
8c17(2): jnz 0x22(%rip)
8c19(2): jmp 0x33(%rip)
8c1b(5): nop 0x0(%rax,%rax,1)
8c20(4): mov 0x8(%rbx),%rbx
8c24(4): mov 0x8(%rbx),%rax
8c28(3): test %rax,%rax
8c2b(6): jz 0xa5(%rip)
8c31(3): mov (%rax),%rsi
8c34(3): cmp %rbp,%rsi
8c37(2): jz 0x15(%rip)
8c39(3): mov %rbp,%rdi
8c3c(5): call 0x38(%r12)
8c41(2): test %al,%al
8c43(2): jz 0xffffffdd(%rip)
8c45(4): mov 0x8(%rbx),%rax
8c49(3): mov (%rax),%rsi
8c4c(3): test %r13b,%r13b
8c4f(2): jz 0x1f(%rip)
8c51(4): mov 0x8(%rax),%rdx
8c55(4): mov %rdx,0x8(%rbx)
8c59(7): mov $0x0,(%rax)
8c60(5): mov 0x48(%r12),%rdx
8c65(4): mov %rdx,0x8(%rax)
8c69(5): mov %rax,0x48(%r12)
8c6e(1): pop %rbx
8c6f(3): mov %rsi,%rax
8c72(1): pop %rbp
8c73(2): pop %r12
8c75(2): pop %r13
8c77(2): pop %r14
8c79(1): ret near (%rsp)
8c7a(6): nop 0x0(%rax,%rax,1)
8c80(3): mov (%rbx),%rsi
8c83(3): test %r13b,%r13b
8c86(2): jz 0xffffffe8(%rip)
8c88(4): mov 0x8(%rbx),%rax
8c8c(3): test %rax,%rax
8c8f(2): jz 0x31(%rip)
8c91(4): movdqu (%rax),%xmm0
8c95(3): movups %xmm0,(%rbx)
8c98(7): mov $0x0,(%rax)
8c9f(5): mov 0x48(%r12),%rdx
8ca4(4): mov %rdx,0x8(%rax)
8ca8(5): mov %rax,0x48(%r12)
8cad(3): mov %rsi,%rax
8cb0(1): pop %rbx
8cb1(1): pop %rbp
8cb2(2): pop %r12
8cb4(2): pop %r13
8cb6(2): pop %r14
8cb8(1): ret near (%rsp)
8cb9(7): nop 0x0(%rax)
8cc0(7): mov $0x0,(%rbx)
8cc7(2): jmp 0xffffffa7(%rip)
8cc9(7): nop 0x0(%rax)
8cd0(2): xor %esi,%esi
8cd2(1): pop %rbx
8cd3(3): mov %rsi,%rax
8cd6(1): pop %rbp
8cd7(2): pop %r12
8cd9(2): pop %r13
8cdb(2): pop %r14
8cdd(1): ret near (%rsp)

"check_tuning.isra.0" :
8ce0(3): mov (%rdi),%rdx
8ce3(7): lea 0x2ff6(%rip),%rcx
8cea(5): mov $0x1,%eax
8cef(3): cmp %rcx,%rdx
8cf2(2): jz 0x63(%rip)
8cf4(5): movss 0x8(%rdx),%xmm0
8cf9(7): ucomiss 0x2ff4(%rip),%xmm0
8d00(2): jbe 0x50(%rip)
8d02(8): movss 0x2fee(%rip),%xmm1
8d0a(3): ucomiss %xmm0,%xmm1
8d0d(2): jbe 0x43(%rip)
8d0f(5): movss 0xc(%rdx),%xmm1
8d14(7): ucomiss 0x2fe1(%rip),%xmm1
8d1b(2): jbe 0x35(%rip)
8d1d(4): movss (%rdx),%xmm1
8d21(7): ucomiss 0x2fd8(%rip),%xmm1
8d28(2): jb 0x28(%rip)
8d2a(8): addss 0x2fc2(%rip),%xmm1
8d32(5): movss 0x4(%rdx),%xmm2
8d37(3): ucomiss %xmm1,%xmm2
8d3a(2): jbe 0x16(%rip)
8d3c(8): movss 0x2fc0(%rip),%xmm3
8d44(3): ucomiss %xmm2,%xmm3
8d47(2): jb 0x9(%rip)
8d49(3): ucomiss %xmm1,%xmm0
8d4c(2): jnbe 0x9(%rip)
8d4e(2): nop 
8d50(3): mov %rcx,(%rdi)
8d53(2): xor %eax,%eax
8d55(2): REP ret near (%rsp)

"transfer_entries" :
8d60(2): push %r15
8d62(2): push %r14
8d64(2): push %r13
8d66(2): push %r12
8d68(1): push %rbp
8d69(1): push %rbx
8d6a(4): sub $0x8,%rsp
8d6e(3): mov (%rsi),%r12
8d71(4): cmp 0x8(%rsi),%r12
8d75(6): jnb 0xe3(%rip)
8d7b(3): mov %rdi,%rbp
8d7e(3): mov %rsi,%r13
8d81(3): mov %edx,%r14d
8d84(4): nop 0x0(%rax)
8d88(4): mov (%r12),%r15
8d8c(3): test %r15,%r15
8d8f(6): jz 0xbb(%rip)
8d95(5): mov 0x8(%r12),%rbx
8d9a(3): test %rbx,%rbx
8d9d(2): jnz 0x1f(%rip)
8d9f(2): jmp 0x5c(%rip)
8da1(7): nop 0x0(%rax)
8da8(4): mov 0x8(%rax),%rcx
8dac(3): test %rdx,%rdx
8daf(4): mov %rcx,0x8(%rbx)
8db3(4): mov %rbx,0x8(%rax)
8db7(3): mov %rdx,%rbx
8dba(2): jz 0x3d(%rip)
8dbc(3): mov (%rbx),%r15
8dbf(3): mov %rbp,%rdi
8dc2(3): mov %r15,%rsi
8dc5(5): call 0xfffffdcb(%rip)
8dca(4): cmp $0x0,(%rax)
8dce(4): mov 0x8(%rbx),%rdx
8dd2(2): jnz 0xffffffd6(%rip)
8dd4(3): mov %r15,(%rax)
8dd7(5): add $0x1,0x18(%rbp)
8ddc(3): test %rdx,%rdx
8ddf(7): mov $0x0,(%rbx)
8de6(4): mov 0x48(%rbp),%rax
8dea(4): mov %rax,0x8(%rbx)
8dee(4): mov %rbx,0x48(%rbp)
8df2(3): mov %rdx,%rbx
8df5(2): jnz 0xffffffc7(%rip)
8df7(4): mov (%r12),%r15
8dfb(3): test %r14b,%r14b
8dfe(9): mov $0x0,0x8(%r12)
8e07(2): jnz 0x43(%rip)
8e09(3): mov %r15,%rsi
8e0c(3): mov %rbp,%rdi
8e0f(5): call 0xfffffd81(%rip)
8e14(4): cmp $0x0,(%rax)
8e18(3): mov %rax,%rbx
8e1b(2): jz 0x55(%rip)
8e1d(4): mov 0x48(%rbp),%rax
8e21(3): test %rax,%rax
8e24(2): jz 0x5c(%rip)
8e26(4): mov 0x8(%rax),%rdx
8e2a(4): mov %rdx,0x48(%rbp)
8e2e(4): mov 0x8(%rbx),%rdx
8e32(3): mov %r15,(%rax)
8e35(4): mov %rdx,0x8(%rax)
8e39(4): mov %rax,0x8(%rbx)
8e3d(8): mov $0x0,(%r12)
8e45(5): sub $0x1,0x18(%r13)
8e4a(4): add $0x10,%r12
8e4e(4): cmp %r12,0x8(%r13)
8e52(6): jnbe 0xffffff36(%rip)
8e58(4): add $0x8,%rsp
8e5c(5): mov $0x1,%eax
8e61(1): pop %rbx
8e62(1): pop %rbp
8e63(2): pop %r12
8e65(2): pop %r13
8e67(2): pop %r14
8e69(2): pop %r15
8e6b(1): ret near (%rsp)
8e6c(4): nop 0x0(%rax)
8e70(3): mov %r15,(%rax)
8e73(5): add $0x1,0x18(%rbp)
8e78(2): jmp 0xffffffc5(%rip)
8e7a(6): nop 0x0(%rax,%rax,1)
8e80(5): mov $0x10,%edi
8e85(5): call 0xffff8d1b(%rip)
8e8a(3): test %rax,%rax
8e8d(2): jnz 0xffffffa1(%rip)
8e8f(4): add $0x8,%rsp
8e93(2): xor %eax,%eax
8e95(1): pop %rbx
8e96(1): pop %rbp
8e97(2): pop %r12
8e99(2): pop %r13
8e9b(2): pop %r14
8e9d(2): pop %r15
8e9f(1): ret near (%rsp)

"hash_get_n_buckets" :
8ea0(4): mov 0x10(%rdi),%rax
8ea4(1): ret near (%rsp)

"hash_get_n_buckets_used" :
8eb0(4): mov 0x18(%rdi),%rax
8eb4(1): ret near (%rsp)

"hash_get_n_entries" :
8ec0(4): mov 0x20(%rdi),%rax
8ec4(1): ret near (%rsp)

"hash_get_max_bucket_length" :
8ed0(3): mov (%rdi),%rsi
8ed3(4): mov 0x8(%rdi),%rdi
8ed7(2): xor %eax,%eax
8ed9(3): cmp %rdi,%rsi
8edc(2): jnb 0x3b(%rip)
8ede(2): nop 
8ee0(4): cmp $0x0,(%rsi)
8ee4(2): jz 0x28(%rip)
8ee6(4): mov 0x8(%rsi),%rdx
8eea(5): mov $0x1,%ecx
8eef(3): test %rdx,%rdx
8ef2(2): jz 0x13(%rip)
8ef4(4): nop 0x0(%rax)
8ef8(4): mov 0x8(%rdx),%rdx
8efc(4): add $0x1,%rcx
8f00(3): test %rdx,%rdx
8f03(2): jnz 0xfffffff5(%rip)
8f05(3): cmp %rcx,%rax
8f08(4): cmovnae %rcx,%rax
8f0c(4): add $0x10,%rsi
8f10(3): cmp %rdi,%rsi
8f13(2): jb 0xffffffcd(%rip)
8f15(2): REP ret near (%rsp)
8f17(2): REP ret near (%rsp)

"hash_table_ok" :
8f20(3): mov (%rdi),%rcx
8f23(4): mov 0x8(%rdi),%r8
8f27(2): xor %edx,%edx
8f29(2): xor %esi,%esi
8f2b(3): cmp %r8,%rcx
8f2e(2): jnb 0x38(%rip)
8f30(4): cmp $0x0,(%rcx)
8f34(2): jz 0x29(%rip)
8f36(4): mov 0x8(%rcx),%rax
8f3a(4): add $0x1,%rsi
8f3e(4): add $0x1,%rdx
8f42(3): test %rax,%rax
8f45(2): jz 0x18(%rip)
8f47(9): nop 0x0(%rax,%rax,1)
8f50(4): mov 0x8(%rax),%rax
8f54(4): add $0x1,%rdx
8f58(3): test %rax,%rax
8f5b(2): jnz 0xfffffff5(%rip)
8f5d(4): add $0x10,%rcx
8f61(3): cmp %r8,%rcx
8f64(2): jb 0xffffffcc(%rip)
8f66(2): xor %eax,%eax
8f68(4): cmp %rsi,0x18(%rdi)
8f6c(2): jz 0x4(%rip)
8f6e(2): REP ret near (%rsp)
8f70(4): cmp %rdx,0x20(%rdi)
8f74(3): setz %al
8f77(1): ret near (%rsp)

"hash_print_statistics" :
8f80(2): push %r13
8f82(2): push %r12
8f84(3): mov %rsi,%r12
8f87(1): push %rbp
8f88(1): push %rbx
8f89(2): xor %ebx,%ebx
8f8b(4): sub $0x8,%rsp
8f8f(3): mov (%rdi),%rsi
8f92(4): mov 0x20(%rdi),%rcx
8f96(4): mov 0x10(%rdi),%rbp
8f9a(4): mov 0x18(%rdi),%r13
8f9e(4): mov 0x8(%rdi),%rdi
8fa2(3): cmp %rdi,%rsi
8fa5(2): jnb 0x40(%rip)
8fa7(9): nop 0x0(%rax,%rax,1)
8fb0(4): cmp $0x0,(%rsi)
8fb4(2): jz 0x28(%rip)
8fb6(4): mov 0x8(%rsi),%rax
8fba(5): mov $0x1,%edx
8fbf(3): test %rax,%rax
8fc2(2): jz 0x13(%rip)
8fc4(4): nop 0x0(%rax)
8fc8(4): mov 0x8(%rax),%rax
8fcc(4): add $0x1,%rdx
8fd0(3): test %rax,%rax
8fd3(2): jnz 0xfffffff5(%rip)
8fd5(3): cmp %rdx,%rbx
8fd8(4): cmovnae %rdx,%rbx
8fdc(4): add $0x10,%rsi
8fe0(3): cmp %rdi,%rsi
8fe3(2): jb 0xffffffcd(%rip)
8fe5(7): lea 0x2c78(%rip),%rdx
8fec(5): mov $0x1,%esi
8ff1(3): mov %r12,%rdi
8ff4(2): xor %eax,%eax
8ff6(5): call 0xffff8cfa(%rip)
8ffb(7): lea 0x2c7a(%rip),%rdx
9002(2): xor %eax,%eax
9004(3): mov %rbp,%rcx
9007(5): mov $0x1,%esi
900c(3): mov %r12,%rdi
900f(5): call 0xffff8ce1(%rip)
9014(3): test %r13,%r13
9017(2): js 0x69(%rip)
9019(4): pxor %xmm0,%xmm0
901d(3): test %rbp,%rbp
9020(5): cvtsi2sd %r13,%xmm0
9025(8): mulsd 0x2ceb(%rip),%xmm0
902d(2): js 0x7c(%rip)
902f(4): pxor %xmm1,%xmm1
9033(5): cvtsi2sd %rbp,%xmm1
9038(4): divsd %xmm1,%xmm0
903c(7): lea 0x2c6d(%rip),%rdx
9043(3): mov %r13,%rcx
9046(3): mov %r12,%rdi
9049(5): mov $0x1,%esi
904e(5): mov $0x1,%eax
9053(5): call 0xffff8c9d(%rip)
9058(4): add $0x8,%rsp
905c(3): mov %rbx,%rcx
905f(3): mov %r12,%rdi
9062(1): pop %rbx
9063(1): pop %rbp
9064(2): pop %r12
9066(2): pop %r13
9068(7): lea 0x2c25(%rip),%rdx
906f(5): mov $0x1,%esi
9074(2): xor %eax,%eax
9076(5): jmp 0xffff8c7a(%rip)
907b(5): nop 0x0(%rax,%rax,1)
9080(3): mov %r13,%rax
9083(3): mov %r13,%rdx
9086(4): pxor %xmm0,%xmm0
908a(3): shr $0x1,%rax
908d(3): and $0x1,%edx
9090(3): or %rdx,%rax
9093(3): test %rbp,%rbp
9096(5): cvtsi2sd %rax,%xmm0
909b(4): addsd %xmm0,%xmm0
909f(8): mulsd 0x2c71(%rip),%xmm0
90a7(2): jns 0xffffff88(%rip)
90a9(3): mov %rbp,%rax
90ac(4): pxor %xmm1,%xmm1
90b0(3): shr $0x1,%rax
90b3(3): and $0x1,%ebp
90b6(3): or %rbp,%rax
90b9(5): cvtsi2sd %rax,%xmm1
90be(4): addsd %xmm1,%xmm1
90c2(5): jmp 0xffffff76(%rip)

"hash_lookup" :
90d0(2): push %r12
90d2(1): push %rbp
90d3(3): mov %rdi,%r12
90d6(1): push %rbx
90d7(3): mov %rsi,%rbp
90da(5): call 0xfffffab6(%rip)
90df(3): mov (%rax),%rsi
90e2(3): test %rsi,%rsi
90e5(2): jz 0x28(%rip)
90e7(3): mov %rax,%rbx
90ea(2): jmp 0x9(%rip)
90ec(4): nop 0x0(%rax)
90f0(3): mov (%rbx),%rsi
90f3(3): cmp %rbp,%rsi
90f6(2): jz 0x19(%rip)
90f8(3): mov %rbp,%rdi
90fb(5): call 0x38(%r12)
9100(2): test %al,%al
9102(2): jnz 0x1e(%rip)
9104(4): mov 0x8(%rbx),%rbx
9108(3): test %rbx,%rbx
910b(2): jnz 0xffffffe5(%rip)
910d(2): xor %esi,%esi
910f(1): pop %rbx
9110(3): mov %rsi,%rax
9113(1): pop %rbp
9114(2): pop %r12
9116(1): ret near (%rsp)
9117(9): nop 0x0(%rax,%rax,1)
9120(3): mov (%rbx),%rsi
9123(1): pop %rbx
9124(1): pop %rbp
9125(3): mov %rsi,%rax
9128(2): pop %r12
912a(1): ret near (%rsp)

"hash_get_first" :
9130(5): cmp $0x0,0x20(%rdi)
9135(2): jz 0x2e(%rip)
9137(3): mov (%rdi),%rdx
913a(4): mov 0x8(%rdi),%rcx
913e(3): cmp %rcx,%rdx
9141(2): jnb 0x27(%rip)
9143(3): mov (%rdx),%rax
9146(3): test %rax,%rax
9149(2): jnz 0x1d(%rip)
914b(5): nop 0x0(%rax,%rax,1)
9150(4): add $0x10,%rdx
9154(3): cmp %rcx,%rdx
9157(2): jnb 0x11(%rip)
9159(3): mov (%rdx),%rax
915c(3): test %rax,%rax
915f(2): jz 0xfffffff1(%rip)
9161(2): REP ret near (%rsp)
9163(2): xor %eax,%eax
9165(1): ret near (%rsp)
9166(2): REP ret near (%rsp)
9168(4): sub $0x8,%rsp
916c(5): call 0xffff87b4(%rip)

"hash_get_next" :
9180(1): push %rbp
9181(1): push %rbx
9182(3): mov %rdi,%rbp
9185(3): mov %rsi,%rbx
9188(4): sub $0x8,%rsp
918c(5): call 0xfffffa04(%rip)
9191(3): mov %rax,%rdx
9194(3): mov %rax,%rcx
9197(3): mov (%rdx),%rax
919a(4): mov 0x8(%rdx),%rdx
919e(3): cmp %rbx,%rax
91a1(2): jz 0x18(%rip)
91a3(5): nop 0x0(%rax,%rax,1)
91a8(3): test %rdx,%rdx
91ab(2): jz 0x13(%rip)
91ad(3): mov (%rdx),%rax
91b0(4): mov 0x8(%rdx),%rdx
91b4(3): cmp %rbx,%rax
91b7(2): jnz 0xfffffff1(%rip)
91b9(3): test %rdx,%rdx
91bc(2): jnz 0x2c(%rip)
91be(4): mov 0x8(%rbp),%rdx
91c2(2): jmp 0xe(%rip)
91c4(4): nop 0x0(%rax)
91c8(3): mov (%rcx),%rax
91cb(3): test %rax,%rax
91ce(2): jnz 0xd(%rip)
91d0(4): add $0x10,%rcx
91d4(3): cmp %rcx,%rdx
91d7(2): jnbe 0xfffffff1(%rip)
91d9(2): xor %eax,%eax
91db(4): add $0x8,%rsp
91df(1): pop %rbx
91e0(1): pop %rbp
91e1(1): ret near (%rsp)
91e2(6): nop 0x0(%rax,%rax,1)
91e8(3): mov (%rdx),%rax
91eb(4): add $0x8,%rsp
91ef(1): pop %rbx
91f0(1): pop %rbp
91f1(1): ret near (%rsp)

"hash_get_entries" :
9200(3): mov (%rdi),%r9
9203(4): cmp %r9,0x8(%rdi)
9207(2): jbe 0x5b(%rip)
9209(3): xor %r8d,%r8d
920c(3): mov (%r9),%rcx
920f(3): test %rcx,%rcx
9212(2): jz 0x3b(%rip)
9214(3): cmp %r8,%rdx
9217(2): jbe 0x40(%rip)
9219(4): mov %rcx,0x0(%rsi,%r8,8)
921d(4): mov 0x8(%r9),%rcx
9221(4): lea 0x1(%r8),%rax
9225(3): test %rcx,%rcx
9228(2): jz 0x22(%rip)
922a(6): nop 0x0(%rax,%rax,1)
9230(3): cmp %rax,%rdx
9233(2): jz 0x2d(%rip)
9235(3): mov (%rcx),%r8
9238(4): add $0x1,%rax
923c(5): mov %r8,0xfffffff8(%rsi,%rax,8)
9241(4): mov 0x8(%rcx),%rcx
9245(3): test %rcx,%rcx
9248(2): jnz 0xffffffe8(%rip)
924a(3): mov %rax,%r8
924d(4): add $0x10,%r9
9251(4): cmp %r9,0x8(%rdi)
9255(2): jnbe 0xffffffb7(%rip)
9257(3): mov %r8,%rax
925a(1): ret near (%rsp)
925b(5): nop 0x0(%rax,%rax,1)
9260(2): REP ret near (%rsp)
9262(2): xor %eax,%eax
9264(1): ret near (%rsp)

"hash_do_for_each" :
9270(2): push %r15
9272(2): push %r14
9274(2): push %r13
9276(2): push %r12
9278(1): push %rbp
9279(1): push %rbx
927a(4): sub $0x8,%rsp
927e(3): mov (%rdi),%r14
9281(4): cmp %r14,0x8(%rdi)
9285(2): jbe 0x51(%rip)
9287(3): mov %rdx,%r13
928a(3): mov %rsi,%r12
928d(3): mov %rdi,%r15
9290(2): xor %ebp,%ebp
9292(3): mov (%r14),%rdi
9295(3): test %rdi,%rdi
9298(2): jz 0x22(%rip)
929a(3): mov %r14,%rbx
929d(2): jmp 0x6(%rip)
929f(1): nop 
92a0(3): mov (%rbx),%rdi
92a3(3): mov %r13,%rsi
92a6(3): call %r12
92a9(2): test %al,%al
92ab(2): jz 0x19(%rip)
92ad(4): mov 0x8(%rbx),%rbx
92b1(4): add $0x1,%rbp
92b5(3): test %rbx,%rbx
92b8(2): jnz 0xffffffe8(%rip)
92ba(4): add $0x10,%r14
92be(4): cmp %r14,0x8(%r15)
92c2(2): jnbe 0xffffffd0(%rip)
92c4(4): add $0x8,%rsp
92c8(3): mov %rbp,%rax
92cb(1): pop %rbx
92cc(1): pop %rbp
92cd(2): pop %r12
92cf(2): pop %r13
92d1(2): pop %r14
92d3(2): pop %r15
92d5(1): ret near (%rsp)
92d6(2): xor %ebp,%ebp
92d8(2): jmp 0xffffffec(%rip)

"hash_string" :
92e0(3): movzx (%rdi),%ecx
92e3(2): xor %edx,%edx
92e5(2): test %cl,%cl
92e7(2): jz 0x26(%rip)
92e9(7): nop 0x0(%rax)
92f0(3): mov %rdx,%rax
92f3(4): add $0x1,%rdi
92f7(4): shl/sal $0x5,%rax
92fb(3): sub %rdx,%rax
92fe(2): xor %edx,%edx
9300(3): add %rcx,%rax
9303(3): movzx (%rdi),%ecx
9306(3): div %rsi,%rax
9309(2): test %cl,%cl
930b(2): jnz 0xffffffe5(%rip)
930d(3): mov %rdx,%rax
9310(1): ret near (%rsp)

"hash_reset_tuning" :
9320(a): mov $0x4575657221408423936,%rax
932a(4): mov $0x0,0x10(%rdi)
932e(3): mov %rax,(%rdi)
9331(a): mov $0x4590573145673223373,%rax
933b(4): mov %rax,0x8(%rdi)
933f(1): ret near (%rsp)

"hash_initialize" :
9340(2): push %r15
9342(2): push %r14
9344(7): lea 0xfffff825(%rip),%rax
934b(2): push %r13
934d(2): push %r12
934f(3): mov %rdx,%r12
9352(1): push %rbp
9353(1): push %rbx
9354(3): mov %rcx,%r13
9357(3): mov %rdi,%rbp
935a(5): mov $0x50,%edi
935f(3): mov %rsi,%r15
9362(4): sub $0x8,%rsp
9366(3): test %rdx,%rdx
9369(3): mov %r8,%r14
936c(4): cmove %rax,%r12
9370(7): lea 0xfffff809(%rip),%rax
9377(3): test %rcx,%rcx
937a(4): cmove %rax,%r13
937e(5): call 0xffff8822(%rip)
9383(3): test %rax,%rax
9386(3): mov %rax,%rbx
9389(6): jz 0xb1(%rip)
938f(3): test %r15,%r15
9392(4): lea 0x28(%rax),%rdi
9396(6): jz 0xba(%rip)
939c(4): mov %r15,0x28(%rax)
93a0(5): call 0xfffff940(%rip)
93a5(2): test %al,%al
93a7(6): jz 0x89(%rip)
93ad(5): cmp $0x0,0x10(%r15)
93b2(6): jz 0xfe(%rip)
93b8(3): mov %rbp,%rdi
93bb(5): call 0xfffff715(%rip)
93c0(5): mov $0x8,%edx
93c5(3): mov %rax,%rbp
93c8(2): xor %ecx,%ecx
93ca(3): mov %rdx,%rax
93cd(3): mul %rax,%rbp,%rdx
93d0(6): jo 0x11a(%rip)
93d6(3): test %rax,%rax
93d9(2): js 0x57(%rip)
93db(3): test %rcx,%rcx
93de(2): jnz 0x52(%rip)
93e0(3): test %rbp,%rbp
93e3(4): mov %rbp,0x10(%rbx)
93e7(2): jz 0x49(%rip)
93e9(5): mov $0x10,%esi
93ee(3): mov %rbp,%rdi
93f1(5): call 0xffff873f(%rip)
93f6(3): test %rax,%rax
93f9(3): mov %rax,(%rbx)
93fc(2): jz 0x34(%rip)
93fe(4): shl/sal $0x4,%rbp
9402(8): mov $0x0,0x18(%rbx)
940a(8): mov $0x0,0x20(%rbx)
9412(3): add %rax,%rbp
9415(4): mov %r12,0x30(%rbx)
9419(4): mov %r13,0x38(%rbx)
941d(4): mov %rbp,0x8(%rbx)
9421(4): mov %r14,0x40(%rbx)
9425(8): mov $0x0,0x48(%rbx)
942d(2): jmp 0xd(%rip)
942f(1): nop 
9430(3): mov %rbx,%rdi
9433(2): xor %ebx,%ebx
9435(5): call 0xffff88fb(%rip)
943a(4): add $0x8,%rsp
943e(3): mov %rbx,%rax
9441(1): pop %rbx
9442(1): pop %rbp
9443(2): pop %r12
9445(2): pop %r13
9447(2): pop %r14
9449(2): pop %r15
944b(1): ret near (%rsp)
944c(4): nop 0x0(%rax)
9450(7): lea 0x2889(%rip),%rax
9457(4): mov %rax,0x28(%rbx)
945b(5): call 0xfffff885(%rip)
9460(2): test %al,%al
9462(8): movss 0x289e(%rip),%xmm1
946a(2): jz 0xffffffc6(%rip)
946c(3): test %rbp,%rbp
946f(2): js 0x4c(%rip)
9471(4): pxor %xmm0,%xmm0
9475(5): cvtsi2ss %rbp,%xmm0
947a(4): divss %xmm1,%xmm0
947e(7): ucomiss 0x2887(%rip),%xmm0
9485(2): jnb 0xffffffab(%rip)
9487(7): ucomiss 0x2882(%rip),%xmm0
948e(2): jb 0x52(%rip)
9490(8): subss 0x2878(%rip),%xmm0
9498(a): mov $0x-9223372036854775808,%rax
94a2(5): cvttss2si %xmm0,%rbp
94a7(3): xor %rax,%rbp
94aa(5): jmp 0xffffff0e(%rip)
94af(1): nop 
94b0(3): test %rbp,%rbp
94b3(6): movss 0x8(%r15),%xmm1
94b9(2): jns 0xffffffb8(%rip)
94bb(3): mov %rbp,%rax
94be(4): pxor %xmm0,%xmm0
94c2(3): shr $0x1,%rax
94c5(3): and $0x1,%ebp
94c8(3): or %rbp,%rax
94cb(5): cvtsi2ss %rax,%xmm0
94d0(4): addss %xmm0,%xmm0
94d4(2): jmp 0xffffffa6(%rip)
94d6(a): nop 0x0(%rax,%rax,1)
94e0(5): cvttss2si %xmm0,%rbp
94e5(5): jmp 0xfffffed3(%rip)
94ea(5): mov $0x1,%ecx
94ef(5): jmp 0xfffffee7(%rip)

"hash_clear" :
9500(2): push %r12
9502(1): push %rbp
9503(3): mov %rdi,%rbp
9506(1): push %rbx
9507(3): mov (%rdi),%r12
950a(4): cmp 0x8(%rdi),%r12
950e(2): jnb 0x6d(%rip)
9510(5): cmp $0x0,(%r12)
9515(2): jz 0x5c(%rip)
9517(5): mov 0x8(%r12),%rbx
951c(4): mov 0x40(%rbp),%rax
9520(3): test %rbx,%rbx
9523(2): jz 0x32(%rip)
9525(3): nop (%rax)
9528(3): test %rax,%rax
952b(2): jz 0xb(%rip)
952d(3): mov (%rbx),%rdi
9530(2): call %rax
9532(4): mov 0x40(%rbp),%rax
9536(4): mov 0x8(%rbx),%rdx
953a(4): mov 0x48(%rbp),%rcx
953e(7): mov $0x0,(%rbx)
9545(3): test %rdx,%rdx
9548(4): mov %rcx,0x8(%rbx)
954c(4): mov %rbx,0x48(%rbp)
9550(3): mov %rdx,%rbx
9553(2): jnz 0xffffffd5(%rip)
9555(3): test %rax,%rax
9558(2): jz 0x8(%rip)
955a(4): mov (%r12),%rdi
955e(2): call %rax
9560(8): mov $0x0,(%r12)
9568(9): mov $0x0,0x8(%r12)
9571(4): add $0x10,%r12
9575(4): cmp %r12,0x8(%rbp)
9579(2): jnbe 0xffffff97(%rip)
957b(8): mov $0x0,0x18(%rbp)
9583(8): mov $0x0,0x20(%rbp)
958b(1): pop %rbx
958c(1): pop %rbp
958d(2): pop %r12
958f(1): ret near (%rsp)

"hash_free" :
9590(2): push %r12
9592(1): push %rbp
9593(3): mov %rdi,%r12
9596(1): push %rbx
9597(5): cmp $0x0,0x40(%rdi)
959c(3): mov (%rdi),%rbp
959f(4): mov 0x8(%rdi),%rax
95a3(2): jz 0x50(%rip)
95a5(5): cmp $0x0,0x20(%rdi)
95aa(2): jz 0x49(%rip)
95ac(3): cmp %rax,%rbp
95af(2): jnb 0x7d(%rip)
95b1(7): nop 0x0(%rax)
95b8(4): mov 0x0(%rbp),%rdi
95bc(3): test %rdi,%rdi
95bf(2): jz 0x27(%rip)
95c1(3): mov %rbp,%rbx
95c4(2): jmp 0xf(%rip)
95c6(a): nop 0x0(%rax,%rax,1)
95d0(3): mov (%rbx),%rdi
95d3(5): call 0x40(%r12)
95d8(4): mov 0x8(%rbx),%rbx
95dc(3): test %rbx,%rbx
95df(2): jnz 0xfffffff1(%rip)
95e1(5): mov 0x8(%r12),%rax
95e6(4): add $0x10,%rbp
95ea(3): cmp %rbp,%rax
95ed(2): jnbe 0xffffffcb(%rip)
95ef(4): mov (%r12),%rbp
95f3(3): cmp %rax,%rbp
95f6(2): jnb 0x36(%rip)
95f8(8): nop 0x0(%rax,%rax,1)
9600(4): mov 0x8(%rbp),%rdi
9604(3): test %rdi,%rdi
9607(2): jz 0x1a(%rip)
9609(7): nop 0x0(%rax)
9610(4): mov 0x8(%rdi),%rbx
9614(5): call 0xffff871c(%rip)
9619(3): test %rbx,%rbx
961c(3): mov %rbx,%rdi
961f(2): jnz 0xfffffff1(%rip)
9621(4): add $0x10,%rbp
9625(5): cmp %rbp,0x8(%r12)
962a(2): jnbe 0xffffffd6(%rip)
962c(5): mov 0x48(%r12),%rdi
9631(3): test %rdi,%rdi
9634(2): jz 0x1d(%rip)
9636(a): nop 0x0(%rax,%rax,1)
9640(4): mov 0x8(%rdi),%rbx
9644(5): call 0xffff86ec(%rip)
9649(3): test %rbx,%rbx
964c(3): mov %rbx,%rdi
964f(2): jnz 0xfffffff1(%rip)
9651(4): mov (%r12),%rdi
9655(5): call 0xffff86db(%rip)
965a(1): pop %rbx
965b(3): mov %r12,%rdi
965e(1): pop %rbp
965f(2): pop %r12
9661(5): jmp 0xffff86cf(%rip)

"hash_rehash" :
9670(2): push %r12
9672(1): push %rbp
9673(3): mov %rdi,%rbp
9676(1): push %rbx
9677(4): sub $0x60,%rsp
967b(4): mov 0x28(%rdi),%r12
967f(9): mov $0x28,%rax
9688(5): mov %rax,0x58(%rsp)
968d(2): xor %eax,%eax
968f(6): cmp $0x0,0x10(%r12)
9695(2): jnz 0x53(%rip)
9697(3): test %rsi,%rsi
969a(6): js 0x17e(%rip)
96a0(4): pxor %xmm0,%xmm0
96a4(5): cvtsi2ss %rsi,%xmm0
96a9(7): divss 0x8(%r12),%xmm0
96b0(7): ucomiss 0x2655(%rip),%xmm0
96b7(6): jnb 0x139(%rip)
96bd(7): ucomiss 0x264c(%rip),%xmm0
96c4(6): jb 0x17c(%rip)
96ca(8): subss 0x263e(%rip),%xmm0
96d2(a): mov $0x-9223372036854775808,%rax
96dc(5): cvttss2si %xmm0,%rsi
96e1(3): xor %rax,%rsi
96e4(4): nop 0x0(%rax)
96e8(3): mov %rsi,%rdi
96eb(5): call 0xfffff3e5(%rip)
96f0(5): mov $0x8,%edx
96f5(3): mov %rax,%rbx
96f8(2): xor %ecx,%ecx
96fa(3): mov %rdx,%rax
96fd(3): mul %rax,%rbx,%rdx
9700(6): jo 0x19f(%rip)
9706(3): test %rax,%rax
9709(5): mov $0x1,%eax
970e(4): cmovs %rax,%rcx
9712(3): test %rbx,%rbx
9715(6): jz 0xdb(%rip)
971b(3): and $0x1,%ecx
971e(6): jnz 0xd2(%rip)
9724(4): cmp %rbx,0x10(%rbp)
9728(6): jz 0x128(%rip)
972e(5): mov $0x10,%esi
9733(3): mov %rbx,%rdi
9736(5): call 0xffff83fa(%rip)
973b(3): test %rax,%rax
973e(4): mov %rax,(%rsp)
9742(6): jz 0xae(%rip)
9748(5): mov %rbx,0x10(%rsp)
974d(4): shl/sal $0x4,%rbx
9751(5): mov %r12,0x28(%rsp)
9756(3): add %rax,%rbx
9759(4): mov 0x30(%rbp),%rax
975d(3): mov %rsp,%r12
9760(2): xor %edx,%edx
9762(3): mov %rbp,%rsi
9765(3): mov %r12,%rdi
9768(5): mov %rbx,0x8(%rsp)
976d(9): mov $0x0,0x18(%rsp)
9776(5): mov %rax,0x30(%rsp)
977b(4): mov 0x38(%rbp),%rax
977f(9): mov $0x0,0x20(%rsp)
9788(5): mov %rax,0x38(%rsp)
978d(4): mov 0x40(%rbp),%rax
9791(5): mov %rax,0x40(%rsp)
9796(4): mov 0x48(%rbp),%rax
979a(5): mov %rax,0x48(%rsp)
979f(5): call 0xfffff5c1(%rip)
97a4(2): test %al,%al
97a6(2): mov %eax,%ebx
97a8(6): jnz 0xb8(%rip)
97ae(5): mov 0x48(%rsp),%rax
97b3(5): mov $0x1,%edx
97b8(3): mov %r12,%rsi
97bb(3): mov %rbp,%rdi
97be(4): mov %rax,0x48(%rbp)
97c2(5): call 0xfffff59e(%rip)
97c7(2): test %al,%al
97c9(6): jz 0xe0(%rip)
97cf(2): xor %edx,%edx
97d1(3): mov %r12,%rsi
97d4(3): mov %rbp,%rdi
97d7(5): call 0xfffff589(%rip)
97dc(2): test %al,%al
97de(6): jz 0xcb(%rip)
97e4(4): mov (%rsp),%rdi
97e8(5): call 0xffff8548(%rip)
97ed(2): jmp 0x5(%rip)
97ef(1): nop 
97f0(2): xor %ebx,%ebx
97f2(5): mov 0x58(%rsp),%rcx
97f7(9): xor $0x28,%rcx
9800(2): mov %ebx,%eax
9802(6): jnz 0x98(%rip)
9808(4): add $0x60,%rsp
980c(1): pop %rbx
980d(1): pop %rbp
980e(2): pop %r12
9810(1): ret near (%rsp)
9811(7): nop 0x0(%rax)
9818(3): mov %rsi,%rax
981b(4): pxor %xmm0,%xmm0
981f(3): shr $0x1,%rax
9822(3): and $0x1,%esi
9825(3): or %rsi,%rax
9828(5): cvtsi2ss %rax,%xmm0
982d(4): addss %xmm0,%xmm0
9831(5): jmp 0xfffffe78(%rip)
9836(a): nop 0x0(%rax,%rax,1)
9840(5): cvttss2si %xmm0,%rsi
9845(5): jmp 0xfffffea3(%rip)
984a(6): nop 0x0(%rax,%rax,1)
9850(5): mov $0x1,%ebx
9855(2): jmp 0xffffff9d(%rip)
9857(9): nop 0x0(%rax,%rax,1)
9860(4): mov 0x0(%rbp),%rdi
9864(5): call 0xffff84cc(%rip)
9869(4): mov (%rsp),%rax
986d(4): mov %rax,0x0(%rbp)
9871(5): mov 0x8(%rsp),%rax
9876(4): mov %rax,0x8(%rbp)
987a(5): mov 0x10(%rsp),%rax
987f(4): mov %rax,0x10(%rbp)
9883(5): mov 0x18(%rsp),%rax
9888(4): mov %rax,0x18(%rbp)
988c(5): mov 0x48(%rsp),%rax
9891(4): mov %rax,0x48(%rbp)
9895(5): jmp 0xffffff5d(%rip)
989a(5): call 0xffff81a6(%rip)
989f(5): mov $0x1,%ecx
98a4(5): jmp 0xfffffe62(%rip)
98a9(5): call 0xffff8077(%rip)

"hash_insert_if_absent" :
98b0(2): push %r13
98b2(2): push %r12
98b4(1): push %rbp
98b5(1): push %rbx
98b6(4): sub $0x18,%rsp
98ba(9): mov $0x28,%rax
98c3(5): mov %rax,0x8(%rsp)
98c8(2): xor %eax,%eax
98ca(3): test %rsi,%rsi
98cd(6): jz 0x1c0(%rip)
98d3(3): mov %rsp,%r12
98d6(2): xor %ecx,%ecx
98d8(3): mov %rdx,%r13
98db(3): mov %r12,%rdx
98de(3): mov %rdi,%rbx
98e1(3): mov %rsi,%rbp
98e4(5): call 0xfffff2dc(%rip)
98e9(3): test %rax,%rax
98ec(3): mov %rax,%rdx
98ef(2): jz 0x31(%rip)
98f1(2): xor %eax,%eax
98f3(3): test %r13,%r13
98f6(2): jz 0x6(%rip)
98f8(4): mov %rdx,0x0(%r13)
98fc(5): mov 0x8(%rsp),%rcx
9901(9): xor $0x28,%rcx
990a(6): jnz 0x225(%rip)
9910(4): add $0x18,%rsp
9914(1): pop %rbx
9915(1): pop %rbp
9916(2): pop %r12
9918(2): pop %r13
991a(1): ret near (%rsp)
991b(5): nop 0x0(%rax,%rax,1)
9920(4): mov 0x18(%rbx),%rax
9924(3): test %rax,%rax
9927(2): js 0x79(%rip)
9929(4): pxor %xmm1,%xmm1
992d(4): mov 0x28(%rbx),%rdx
9931(5): cvtsi2ss %rax,%xmm1
9936(4): mov 0x10(%rbx),%rax
993a(3): test %rax,%rax
993d(6): js 0x8d(%rip)
9943(4): pxor %xmm0,%xmm0
9947(5): cvtsi2ss %rax,%xmm0
994c(5): mulss 0x8(%rdx),%xmm0
9951(3): ucomiss %xmm0,%xmm1
9954(6): jnbe 0x9c(%rip)
995a(4): mov (%rsp),%r12
995e(5): cmp $0x0,(%r12)
9963(6): jz 0x135(%rip)
9969(4): mov 0x48(%rbx),%rax
996d(3): test %rax,%rax
9970(6): jz 0x140(%rip)
9976(4): mov 0x8(%rax),%rdx
997a(4): mov %rdx,0x48(%rbx)
997e(5): mov 0x8(%r12),%rdx
9983(3): mov %rbp,(%rax)
9986(4): mov %rdx,0x8(%rax)
998a(5): mov %rax,0x8(%r12)
998f(5): mov $0x1,%eax
9994(5): add $0x1,0x20(%rbx)
9999(5): jmp 0xffffff63(%rip)
999e(2): nop 
99a0(3): mov %rax,%rdx
99a3(4): pxor %xmm1,%xmm1
99a7(3): and $0x1,%eax
99aa(3): shr $0x1,%rdx
99ad(3): or %rax,%rdx
99b0(4): mov 0x10(%rbx),%rax
99b4(5): cvtsi2ss %rdx,%xmm1
99b9(4): mov 0x28(%rbx),%rdx
99bd(3): test %rax,%rax
99c0(4): addss %xmm1,%xmm1
99c4(6): jns 0xffffff7f(%rip)
99ca(3): mov %rax,%rcx
99cd(4): pxor %xmm0,%xmm0
99d1(3): shr $0x1,%rcx
99d4(3): and $0x1,%eax
99d7(3): or %rax,%rcx
99da(5): cvtsi2ss %rcx,%xmm0
99df(4): addss %xmm0,%xmm0
99e3(5): jmp 0xffffff69(%rip)
99e8(8): nop 0x0(%rax,%rax,1)
99f0(4): lea 0x28(%rbx),%rdi
99f4(5): call 0xfffff2ec(%rip)
99f9(4): mov 0x10(%rbx),%rax
99fd(4): mov 0x28(%rbx),%rdx
9a01(3): test %rax,%rax
9a04(5): movss 0x8(%rdx),%xmm2
9a09(6): js 0xc7(%rip)
9a0f(4): pxor %xmm0,%xmm0
9a13(5): cvtsi2ss %rax,%xmm0
9a18(4): mov 0x18(%rbx),%rax
9a1c(3): test %rax,%rax
9a1f(6): js 0xd1(%rip)
9a25(4): pxor %xmm1,%xmm1
9a29(5): cvtsi2ss %rax,%xmm1
9a2e(3): movaps %xmm2,%xmm3
9a31(4): mulss %xmm0,%xmm3
9a35(3): ucomiss %xmm3,%xmm1
9a38(6): jbe 0xffffff22(%rip)
9a3e(4): cmp $0x0,0x10(%rdx)
9a42(5): mulss 0xc(%rdx),%xmm0
9a47(2): jnz 0x6(%rip)
9a49(4): mulss %xmm2,%xmm0
9a4d(7): ucomiss 0x22b8(%rip),%xmm0
9a54(2): jnb 0x6f(%rip)
9a56(7): ucomiss 0x22b3(%rip),%xmm0
9a5d(6): jnb 0xb3(%rip)
9a63(5): cvttss2si %xmm0,%rsi
9a68(3): mov %rbx,%rdi
9a6b(5): call 0xfffffc05(%rip)
9a70(2): test %al,%al
9a72(2): jz 0x51(%rip)
9a74(2): xor %ecx,%ecx
9a76(3): mov %r12,%rdx
9a79(3): mov %rbp,%rsi
9a7c(3): mov %rbx,%rdi
9a7f(5): call 0xfffff141(%rip)
9a84(3): test %rax,%rax
9a87(6): jz 0xfffffed3(%rip)
9a8d(5): call 0xffff7e93(%rip)
9a92(6): nop 0x0(%rax,%rax,1)
9a98(4): mov %rbp,(%r12)
9a9c(5): mov $0x1,%eax
9aa1(5): add $0x1,0x20(%rbx)
9aa6(5): add $0x1,0x18(%rbx)
9aab(5): jmp 0xfffffe51(%rip)
9ab0(5): mov $0x10,%edi
9ab5(5): call 0xffff80eb(%rip)
9aba(3): test %rax,%rax
9abd(6): jnz 0xfffffec1(%rip)
9ac3(5): mov $0xffffffff,%eax
9ac8(5): jmp 0xfffffe34(%rip)
9acd(3): nop (%rax)
9ad0(3): mov %rax,%rcx
9ad3(4): pxor %xmm0,%xmm0
9ad7(3): shr $0x1,%rcx
9ada(3): and $0x1,%eax
9add(3): or %rax,%rcx
9ae0(5): cvtsi2ss %rcx,%xmm0
9ae5(4): addss %xmm0,%xmm0
9ae9(5): jmp 0xffffff2f(%rip)
9aee(2): nop 
9af0(3): mov %rax,%rcx
9af3(4): pxor %xmm1,%xmm1
9af7(3): shr $0x1,%rcx
9afa(3): and $0x1,%eax
9afd(3): or %rax,%rcx
9b00(5): cvtsi2ss %rcx,%xmm1
9b05(4): addss %xmm1,%xmm1
9b09(5): jmp 0xffffff25(%rip)
9b0e(2): nop 
9b10(8): subss 0x21f8(%rip),%xmm0
9b18(a): mov $0x-9223372036854775808,%rax
9b22(5): cvttss2si %xmm0,%rsi
9b27(3): xor %rax,%rsi
9b2a(5): jmp 0xffffff3e(%rip)
9b2f(5): call 0xffff7f11(%rip)

"hash_insert" :
9b40(1): push %rbx
9b41(3): mov %rsi,%rbx
9b44(4): sub $0x10,%rsp
9b48(3): mov %rsp,%rdx
9b4b(9): mov $0x28,%rax
9b54(5): mov %rax,0x8(%rsp)
9b59(2): xor %eax,%eax
9b5b(5): call 0xfffffd55(%rip)
9b60(3): cmp $0xff,%eax
9b63(2): jz 0x2d(%rip)
9b65(2): test %eax,%eax
9b67(2): jnz 0x6(%rip)
9b69(4): mov (%rsp),%rbx
9b6d(5): mov 0x8(%rsp),%rcx
9b72(9): xor $0x28,%rcx
9b7b(3): mov %rbx,%rax
9b7e(2): jnz 0x16(%rip)
9b80(4): add $0x10,%rsp
9b84(1): pop %rbx
9b85(1): ret near (%rsp)
9b86(a): nop 0x0(%rax,%rax,1)
9b90(2): xor %ebx,%ebx
9b92(2): jmp 0xffffffdb(%rip)
9b94(5): call 0xffff7eac(%rip)

"hash_delete" :
9ba0(2): push %r12
9ba2(1): push %rbp
9ba3(5): mov $0x1,%ecx
9ba8(1): push %rbx
9ba9(3): mov %rdi,%rbx
9bac(4): sub $0x10,%rsp
9bb0(3): mov %rsp,%rdx
9bb3(9): mov $0x28,%rax
9bbc(5): mov %rax,0x8(%rsp)
9bc1(2): xor %eax,%eax
9bc3(5): call 0xffffeffd(%rip)
9bc8(3): test %rax,%rax
9bcb(3): mov %rax,%rbp
9bce(2): jz 0x11(%rip)
9bd0(4): mov (%rsp),%rax
9bd4(5): sub $0x1,0x20(%rbx)
9bd9(4): cmp $0x0,(%rax)
9bdd(2): jz 0x23(%rip)
9bdf(5): mov 0x8(%rsp),%rcx
9be4(9): xor $0x28,%rcx
9bed(3): mov %rbp,%rax
9bf0(6): jnz 0x1ae(%rip)
9bf6(4): add $0x10,%rsp
9bfa(1): pop %rbx
9bfb(1): pop %rbp
9bfc(2): pop %r12
9bfe(1): ret near (%rsp)
9bff(1): nop 
9c00(4): mov 0x18(%rbx),%rax
9c04(4): sub $0x1,%rax
9c08(3): test %rax,%rax
9c0b(4): mov %rax,0x18(%rbx)
9c0f(6): js 0x101(%rip)
9c15(4): pxor %xmm0,%xmm0
9c19(5): cvtsi2ss %rax,%xmm0
9c1e(4): mov 0x10(%rbx),%rax
9c22(4): mov 0x28(%rbx),%rdx
9c26(3): test %rax,%rax
9c29(6): js 0xc7(%rip)
9c2f(4): pxor %xmm1,%xmm1
9c33(5): cvtsi2ss %rax,%xmm1
9c38(4): mulss (%rdx),%xmm1
9c3c(3): ucomiss %xmm0,%xmm1
9c3f(2): jbe 0xffffffa0(%rip)
9c41(4): lea 0x28(%rbx),%rdi
9c45(5): call 0xfffff09b(%rip)
9c4a(4): mov 0x10(%rbx),%rax
9c4e(4): mov 0x28(%rbx),%rdx
9c52(3): test %rax,%rax
9c55(6): js 0x12b(%rip)
9c5b(4): pxor %xmm0,%xmm0
9c5f(5): cvtsi2ss %rax,%xmm0
9c64(4): mov 0x18(%rbx),%rax
9c68(3): test %rax,%rax
9c6b(6): js 0xf5(%rip)
9c71(4): pxor %xmm1,%xmm1
9c75(5): cvtsi2ss %rax,%xmm1
9c7a(4): movss (%rdx),%xmm2
9c7e(4): mulss %xmm0,%xmm2
9c82(3): ucomiss %xmm1,%xmm2
9c85(6): jbe 0xffffff5a(%rip)
9c8b(4): cmp $0x0,0x10(%rdx)
9c8f(5): mulss 0x4(%rdx),%xmm0
9c94(6): jz 0xbc(%rip)
9c9a(7): ucomiss 0x206f(%rip),%xmm0
9ca1(6): jnb 0x8f(%rip)
9ca7(5): cvttss2si %xmm0,%rsi
9cac(3): mov %rbx,%rdi
9caf(5): call 0xfffff9c1(%rip)
9cb4(2): test %al,%al
9cb6(6): jnz 0xffffff29(%rip)
9cbc(4): mov 0x48(%rbx),%rdi
9cc0(3): test %rdi,%rdi
9cc3(2): jz 0x16(%rip)
9cc5(3): nop (%rax)
9cc8(4): mov 0x8(%rdi),%r12
9ccc(5): call 0xffff8064(%rip)
9cd1(3): test %r12,%r12
9cd4(3): mov %r12,%rdi
9cd7(2): jnz 0xfffffff1(%rip)
9cd9(8): mov $0x0,0x48(%rbx)
9ce1(5): jmp 0xfffffefe(%rip)
9ce6(a): nop 0x0(%rax,%rax,1)
9cf0(3): mov %rax,%rcx
9cf3(4): pxor %xmm1,%xmm1
9cf7(3): shr $0x1,%rcx
9cfa(3): and $0x1,%eax
9cfd(3): or %rax,%rcx
9d00(5): cvtsi2ss %rcx,%xmm1
9d05(4): addss %xmm1,%xmm1
9d09(5): jmp 0xffffff2f(%rip)
9d0e(2): nop 
9d10(3): mov %rax,%rdx
9d13(4): pxor %xmm0,%xmm0
9d17(3): shr $0x1,%rdx
9d1a(3): and $0x1,%eax
9d1d(3): or %rax,%rdx
9d20(5): cvtsi2ss %rdx,%xmm0
9d25(4): addss %xmm0,%xmm0
9d29(5): jmp 0xfffffef5(%rip)
9d2e(2): nop 
9d30(8): subss 0x1fd8(%rip),%xmm0
9d38(a): mov $0x-9223372036854775808,%rax
9d42(5): cvttss2si %xmm0,%rsi
9d47(3): xor %rax,%rsi
9d4a(5): jmp 0xffffff62(%rip)
9d4f(1): nop 
9d50(5): mulss 0x8(%rdx),%xmm0
9d55(5): jmp 0xffffff45(%rip)
9d5a(6): nop 0x0(%rax,%rax,1)
9d60(3): mov %rax,%rcx
9d63(4): pxor %xmm1,%xmm1
9d67(3): shr $0x1,%rcx
9d6a(3): and $0x1,%eax
9d6d(3): or %rax,%rcx
9d70(5): cvtsi2ss %rcx,%xmm1
9d75(4): addss %xmm1,%xmm1
9d79(5): jmp 0xffffff01(%rip)
9d7e(2): nop 
9d80(3): mov %rax,%rcx
9d83(4): pxor %xmm0,%xmm0
9d87(3): shr $0x1,%rcx
9d8a(3): and $0x1,%eax
9d8d(3): or %rax,%rcx
9d90(5): cvtsi2ss %rcx,%xmm0
9d95(4): addss %xmm0,%xmm0
9d99(5): jmp 0xfffffecb(%rip)
9d9e(5): call 0xffff7ca2(%rip)

"i_ring_init" :
9db0(4): mov $0x1,0x1c(%rdi)
9db4(8): mov $0x0,0x14(%rdi)
9dbc(2): mov %esi,(%rdi)
9dbe(3): mov %esi,0x4(%rdi)
9dc1(3): mov %esi,0x8(%rdi)
9dc4(3): mov %esi,0xc(%rdi)
9dc7(3): mov %esi,0x10(%rdi)
9dca(1): ret near (%rsp)

"i_ring_empty" :
9dd0(4): movzx 0x1c(%rdi),%eax
9dd4(1): ret near (%rsp)

"i_ring_push" :
9de0(4): movzx 0x1c(%rdi),%edx
9de4(3): mov 0x14(%rdi),%ecx
9de7(3): xor $0x1,%edx
9dea(3): movzx %dl,%edx
9ded(2): add %edx,%ecx
9def(3): and $0x3,%ecx
9df2(2): mov %ecx,%eax
9df4(4): lea 0x0(%rdi,%rax,4),%r8
9df8(3): mov (%r8),%eax
9dfb(3): mov %esi,(%r8)
9dfe(3): mov 0x18(%rdi),%esi
9e01(3): mov %ecx,0x14(%rdi)
9e04(2): cmp %ecx,%esi
9e06(2): jnz 0xa(%rip)
9e08(2): add %esi,%edx
9e0a(3): and $0x3,%edx
9e0d(3): mov %edx,0x18(%rdi)
9e10(4): mov $0x0,0x1c(%rdi)
9e14(1): ret near (%rsp)

"i_ring_pop" :
9e20(4): cmp $0x0,0x1c(%rdi)
9e24(2): jnz 0x31(%rip)
9e26(3): mov 0x14(%rdi),%eax
9e29(3): mov 0x10(%rdi),%esi
9e2c(4): lea 0x0(%rdi,%rax,4),%rcx
9e30(3): mov %rax,%rdx
9e33(2): mov (%rcx),%eax
9e35(2): mov %esi,(%rcx)
9e37(3): cmp 0x18(%rdi),%edx
9e3a(2): jz 0x16(%rip)
9e3c(3): add $0x3,%edx
9e3f(3): and $0x3,%edx
9e42(3): mov %edx,0x14(%rdi)
9e45(1): ret near (%rsp)
9e46(a): nop 0x0(%rax,%rax,1)
9e50(4): mov $0x1,0x1c(%rdi)
9e54(1): ret near (%rsp)
9e55(4): sub $0x8,%rsp
9e59(5): call 0xffff7ac7(%rip)

"locale_charset" :
9e60(4): sub $0x8,%rsp
9e64(5): mov $0xe,%edi
9e69(5): call 0xffff7d57(%rip)
9e6e(3): test %rax,%rax
9e71(2): jz 0x1f(%rip)
9e73(3): cmp $0x0,(%rax)
9e76(7): lea 0x1ea3(%rip),%rdx
9e7d(4): cmove %rdx,%rax
9e81(4): add $0x8,%rsp
9e85(1): ret near (%rsp)
9e86(a): nop 0x0(%rax,%rax,1)
9e90(7): lea 0x1e89(%rip),%rax
9e97(4): add $0x8,%rsp
9e9b(1): ret near (%rsp)

"openat_safer" :
9ea0(4): sub $0x58,%rsp
9ea4(5): mov %rcx,0x38(%rsp)
9ea9(2): xor %ecx,%ecx
9eab(9): mov $0x28,%rax
9eb4(5): mov %rax,0x18(%rsp)
9eb9(2): xor %eax,%eax
9ebb(3): test $0x40,%dl
9ebe(2): jnz 0x2a(%rip)
9ec0(2): xor %eax,%eax
9ec2(5): call 0xffff7b6e(%rip)
9ec7(2): mov %eax,%edi
9ec9(5): call 0xc7(%rip)
9ece(5): mov 0x18(%rsp),%rsi
9ed3(9): xor $0x28,%rsi
9edc(2): jnz 0x2d(%rip)
9ede(4): add $0x58,%rsp
9ee2(1): ret near (%rsp)
9ee3(5): nop 0x0(%rax,%rax,1)
9ee8(5): lea 0x60(%rsp),%rax
9eed(7): mov $0x18,(%rsp)
9ef4(4): mov 0x38(%rsp),%ecx
9ef8(5): mov %rax,0x8(%rsp)
9efd(5): lea 0x20(%rsp),%rax
9f02(5): mov %rax,0x10(%rsp)
9f07(2): jmp 0xffffffb9(%rip)
9f09(5): call 0xffff7b37(%rip)

"opendirat" :
9f10(2): push %r13
9f12(2): push %r12
9f14(6): or $0x90900,%edx
9f1a(1): push %rbp
9f1b(1): push %rbx
9f1c(2): xor %eax,%eax
9f1e(3): mov %rcx,%r12
9f21(4): sub $0x8,%rsp
9f25(5): call 0xffffff7b(%rip)
9f2a(2): test %eax,%eax
9f2c(2): js 0x54(%rip)
9f2e(2): mov %eax,%edi
9f30(2): mov %eax,%ebx
9f32(5): call 0xffff7d4e(%rip)
9f37(3): test %rax,%rax
9f3a(3): mov %rax,%rbp
9f3d(2): jz 0x1b(%rip)
9f3f(4): mov %ebx,(%r12)
9f43(4): add $0x8,%rsp
9f47(3): mov %rbp,%rax
9f4a(1): pop %rbx
9f4b(1): pop %rbp
9f4c(2): pop %r12
9f4e(2): pop %r13
9f50(1): ret near (%rsp)
9f51(7): nop 0x0(%rax)
9f58(5): call 0xffff79d8(%rip)
9f5d(3): mov (%rax),%r13d
9f60(3): mov %rax,%r12
9f63(2): mov %ebx,%edi
9f65(5): call 0xffff7b7b(%rip)
9f6a(3): mov %rbp,%rax
9f6d(4): mov %r13d,(%r12)
9f71(4): add $0x8,%rsp
9f75(1): pop %rbx
9f76(1): pop %rbp
9f77(2): pop %r12
9f79(2): pop %r13
9f7b(1): ret near (%rsp)
9f7c(4): nop 0x0(%rax)
9f80(4): add $0x8,%rsp
9f84(2): xor %ebp,%ebp
9f86(1): pop %rbx
9f87(3): mov %rbp,%rax
9f8a(1): pop %rbp
9f8b(2): pop %r12
9f8d(2): pop %r13
9f8f(1): ret near (%rsp)

"fd_safer" :
9f90(2): push %r13
9f92(2): push %r12
9f94(1): push %rbp
9f95(1): push %rbx
9f96(2): mov %edi,%ebx
9f98(4): sub $0x8,%rsp
9f9c(3): cmp $0x2,%edi
9f9f(2): jnbe 0x23(%rip)
9fa1(5): call 0x3cf(%rip)
9fa6(3): mov %eax,%r12d
9fa9(5): call 0xffff7987(%rip)
9fae(3): mov (%rax),%r13d
9fb1(3): mov %rax,%rbp
9fb4(2): mov %ebx,%edi
9fb6(5): call 0xffff7b2a(%rip)
9fbb(3): mov %r12d,%ebx
9fbe(4): mov %r13d,0x0(%rbp)
9fc2(4): add $0x8,%rsp
9fc6(2): mov %ebx,%eax
9fc8(1): pop %rbx
9fc9(1): pop %rbp
9fca(2): pop %r12
9fcc(2): pop %r13
9fce(1): ret near (%rsp)

"rpl_fclose" :
9fd0(2): push %r12
9fd2(1): push %rbp
9fd3(1): push %rbx
9fd4(3): mov %rdi,%rbx
9fd7(5): call 0xffff7b99(%rip)
9fdc(2): test %eax,%eax
9fde(3): mov %rbx,%rdi
9fe1(2): js 0x56(%rip)
9fe3(5): call 0xffff7bfd(%rip)
9fe8(2): test %eax,%eax
9fea(2): jnz 0x2e(%rip)
9fec(3): mov %rbx,%rdi
9fef(5): call 0x2e1(%rip)
9ff4(2): test %eax,%eax
9ff6(2): jz 0x3e(%rip)
9ff8(5): call 0xffff7938(%rip)
9ffd(3): mov (%rax),%r12d
a000(3): mov %rbx,%rdi
a003(3): mov %rax,%rbp
a006(5): call 0xffff79aa(%rip)
a00b(3): test %r12d,%r12d
a00e(2): jnz 0x32(%rip)
a010(1): pop %rbx
a011(1): pop %rbp
a012(2): pop %r12
a014(1): ret near (%rsp)
a015(3): nop (%rax)
a018(3): mov %rbx,%rdi
a01b(5): call 0xffff7b55(%rip)
a020(2): xor %esi,%esi
a022(5): mov $0x1,%edx
a027(2): mov %eax,%edi
a029(5): call 0xffff7a87(%rip)
a02e(4): cmp $0xffffffff,%rax
a032(2): jnz 0xffffffba(%rip)
a034(3): mov %rbx,%rdi
a037(1): pop %rbx
a038(1): pop %rbp
a039(2): pop %r12
a03b(5): jmp 0xffff7975(%rip)
a040(4): mov %r12d,0x0(%rbp)
a044(5): mov $0xffffffff,%eax
a049(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
a050(2): push %r12
a052(1): push %rbp
a053(2): mov %edi,%ebp
a055(1): push %rbx
a056(4): sub $0x50,%rsp
a05a(9): mov $0x28,%rax
a063(5): mov %rax,0x18(%rsp)
a068(2): xor %eax,%eax
a06a(5): lea 0x70(%rsp),%rax
a06f(2): test %esi,%esi
a071(5): mov %rdx,0x30(%rsp)
a076(5): mov %rcx,0x38(%rsp)
a07b(5): mov %r8,0x40(%rsp)
a080(5): mov %rax,0x8(%rsp)
a085(5): lea 0x20(%rsp),%rax
a08a(5): mov %r9,0x48(%rsp)
a08f(7): mov $0x10,(%rsp)
a096(5): mov %rax,0x10(%rsp)
a09b(6): jz 0x207(%rip)
a0a1(6): cmp $0x406,%esi
a0a7(2): jnz 0x49(%rip)
a0a9(5): mov 0x10(%rsp),%rax
a0ae(7): cmp $0x0,0x204183(%rip)
a0b5(7): mov $0x18,(%rsp)
a0bc(4): mov 0x10(%rax),%r12d
a0c0(3): mov %r12d,%edx
a0c3(6): js 0x130(%rip)
a0c9(2): xor %eax,%eax
a0cb(5): mov $0x406,%esi
a0d0(5): call 0xffff78c0(%rip)
a0d5(2): test %eax,%eax
a0d7(2): mov %eax,%ebx
a0d9(6): js 0x18f(%rip)
a0df(a): mov $0x1,0x20414f(%rip)
a0e9(2): jmp 0x47(%rip)
a0eb(5): nop 0x0(%rax,%rax,1)
a0f0(3): cmp $0xb,%esi
a0f3(2): jz 0x2d(%rip)
a0f5(2): jnle 0x5b(%rip)
a0f7(3): cmp $0x4,%esi
a0fa(6): jz 0xd6(%rip)
a100(6): jnle 0xc0(%rip)
a106(3): cmp $0x2,%esi
a109(6): jz 0xc7(%rip)
a10f(2): jnle 0x11(%rip)
a111(3): cmp $0x1,%esi
a114(2): jnz 0x64(%rip)
a116(a): nop 0x0(%rax,%rax,1)
a120(2): mov %ebp,%edi
a122(2): xor %eax,%eax
a124(5): call 0xffff786c(%rip)
a129(2): mov %eax,%ebx
a12b(5): nop 0x0(%rax,%rax,1)
a130(5): mov 0x18(%rsp),%rcx
a135(9): xor $0x28,%rcx
a13e(2): mov %ebx,%eax
a140(6): jnz 0x15d(%rip)
a146(4): add $0x50,%rsp
a14a(1): pop %rbx
a14b(1): pop %rbp
a14c(2): pop %r12
a14e(1): ret near (%rsp)
a14f(1): nop 
a150(6): cmp $0x407,%esi
a156(2): jnle 0x4a(%rip)
a158(6): cmp $0x406,%esi
a15e(2): jnl 0x72(%rip)
a160(6): cmp $0x401,%esi
a166(2): jz 0xffffffba(%rip)
a168(6): cmp $0x402,%esi
a16e(2): jz 0x62(%rip)
a170(6): cmp $0x400,%esi
a176(2): jz 0x5a(%rip)
a178(3): mov (%rsp),%eax
a17b(3): cmp $0x2f,%eax
a17e(6): jnbe 0x13c(%rip)
a184(5): add 0x10(%rsp),%rax
a189(3): mov (%rax),%rdx
a18c(2): mov %ebp,%edi
a18e(2): xor %eax,%eax
a190(5): call 0xffff7800(%rip)
a195(2): mov %eax,%ebx
a197(2): jmp 0xffffff99(%rip)
a199(7): nop 0x0(%rax)
a1a0(6): cmp $0x409,%esi
a1a6(2): jz 0x2a(%rip)
a1a8(6): jl 0xffffff78(%rip)
a1ae(6): cmp $0x40a,%esi
a1b4(2): jnz 0xffffffc4(%rip)
a1b6(5): jmp 0xffffff6a(%rip)
a1bb(5): nop 0x0(%rax,%rax,1)
a1c0(3): cmp $0x9,%esi
a1c3(6): jz 0xffffff5d(%rip)
a1c9(2): jnle 0x7(%rip)
a1cb(3): cmp $0x8,%esi
a1ce(2): jnz 0xffffffaa(%rip)
a1d0(3): mov (%rsp),%eax
a1d3(3): cmp $0x2f,%eax
a1d6(6): jnbe 0xee(%rip)
a1dc(5): add 0x10(%rsp),%rax
a1e1(2): mov (%rax),%edx
a1e3(2): mov %ebp,%edi
a1e5(2): xor %eax,%eax
a1e7(5): call 0xffff77a9(%rip)
a1ec(2): mov %eax,%ebx
a1ee(5): jmp 0xffffff42(%rip)
a1f3(2): xor %esi,%esi
a1f5(2): xor %eax,%eax
a1f7(5): call 0xffff7799(%rip)
a1fc(2): test %eax,%eax
a1fe(2): mov %eax,%ebx
a200(6): js 0xffffff30(%rip)
a206(7): cmp $0xff,0x20402b(%rip)
a20d(6): jnz 0xffffff23(%rip)
a213(2): xor %eax,%eax
a215(5): mov $0x1,%esi
a21a(2): mov %ebx,%edi
a21c(5): call 0xffff7774(%rip)
a221(2): test %eax,%eax
a223(2): js 0x1e(%rip)
a225(3): or $0x1,%eax
a228(5): mov $0x2,%esi
a22d(2): mov %ebx,%edi
a22f(2): mov %eax,%edx
a231(2): xor %eax,%eax
a233(5): call 0xffff775d(%rip)
a238(3): cmp $0xff,%eax
a23b(6): jnz 0xfffffef5(%rip)
a241(5): call 0xffff76ef(%rip)
a246(3): mov (%rax),%r12d
a249(3): mov %rax,%rbp
a24c(2): mov %ebx,%edi
a24e(5): call 0xffff7892(%rip)
a253(5): mov $0xffffffff,%ebx
a258(4): mov %r12d,0x0(%rbp)
a25c(5): jmp 0xfffffed4(%rip)
a261(7): nop 0x0(%rax)
a268(5): call 0xffff76c8(%rip)
a26d(3): cmp $0x16,(%rax)
a270(6): jnz 0xfffffe6f(%rip)
a276(2): xor %esi,%esi
a278(2): xor %eax,%eax
a27a(3): mov %r12d,%edx
a27d(2): mov %ebp,%edi
a27f(5): call 0xffff7711(%rip)
a284(2): test %eax,%eax
a286(2): mov %eax,%ebx
a288(6): js 0xfffffea8(%rip)
a28e(a): mov $0xffffffff,0x203fa0(%rip)
a298(5): jmp 0xffffff7b(%rip)
a29d(5): call 0xffff77a3(%rip)
a2a2(5): mov 0x10(%rsp),%rax
a2a7(2): xor %esi,%esi
a2a9(3): mov 0x10(%rax),%edx
a2ac(2): xor %eax,%eax
a2ae(5): call 0xffff76e2(%rip)
a2b3(2): mov %eax,%ebx
a2b5(5): jmp 0xfffffe7b(%rip)
a2ba(5): mov 0x8(%rsp),%rax
a2bf(5): jmp 0xfffffeca(%rip)
a2c4(5): mov 0x8(%rsp),%rax
a2c9(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
a2d0(3): test %rdi,%rdi
a2d3(1): push %rbx
a2d4(3): mov %rdi,%rbx
a2d7(2): jz 0x13(%rip)
a2d9(5): call 0xffff7907(%rip)
a2de(2): test %eax,%eax
a2e0(2): jz 0xa(%rip)
a2e2(6): test $0x100,(%rbx)
a2e8(2): jnz 0x10(%rip)
a2ea(3): mov %rbx,%rdi
a2ed(1): pop %rbx
a2ee(5): jmp 0xffff78c2(%rip)
a2f3(5): nop 0x0(%rax,%rax,1)
a2f8(3): mov %rbx,%rdi
a2fb(5): mov $0x1,%edx
a300(2): xor %esi,%esi
a302(5): call 0xe(%rip)
a307(3): mov %rbx,%rdi
a30a(1): pop %rbx
a30b(5): jmp 0xffff78a5(%rip)

"rpl_fseeko" :
a310(4): mov 0x8(%rdi),%rax
a314(4): cmp %rax,0x10(%rdi)
a318(2): jz 0x8(%rip)
a31a(5): jmp 0xffff7946(%rip)
a31f(1): nop 
a320(4): mov 0x20(%rdi),%rax
a324(4): cmp %rax,0x28(%rdi)
a328(2): jnz 0xfffffff2(%rip)
a32a(5): cmp $0x0,0x48(%rdi)
a32f(2): jnz 0xffffffeb(%rip)
a331(2): push %r12
a333(1): push %rbp
a334(3): mov %edx,%r12d
a337(1): push %rbx
a338(3): mov %rsi,%rbp
a33b(3): mov %rdi,%rbx
a33e(5): call 0xffff7832(%rip)
a343(3): mov %r12d,%edx
a346(3): mov %rbp,%rsi
a349(2): mov %eax,%edi
a34b(5): call 0xffff7765(%rip)
a350(4): cmp $0xffffffff,%rax
a354(2): jz 0xe(%rip)
a356(3): and $0xef,(%rbx)
a359(7): mov %rax,0x90(%rbx)
a360(2): xor %eax,%eax
a362(1): pop %rbx
a363(1): pop %rbp
a364(2): pop %r12
a366(1): ret near (%rsp)

"dup_safer" :
a370(5): mov $0x3,%edx
a375(2): xor %esi,%esi
a377(2): xor %eax,%eax
a379(5): jmp 0xfffffcd7(%rip)

"__libc_csu_init" :
a380(2): push %r15
a382(2): push %r14
a384(3): mov %rdx,%r15
a387(2): push %r13
a389(2): push %r12
a38b(7): lea 0x20361e(%rip),%r12
a392(1): push %rbp
a393(7): lea 0x20361e(%rip),%rbp
a39a(1): push %rbx
a39b(3): mov %edi,%r13d
a39e(3): mov %rsi,%r14
a3a1(3): sub %r12,%rbp
a3a4(4): sub $0x8,%rsp
a3a8(4): sar $0x3,%rbp
a3ac(5): call 0xffff753c(%rip)
a3b1(3): test %rbp,%rbp
a3b4(2): jz 0x22(%rip)
a3b6(2): xor %ebx,%ebx
a3b8(8): nop 0x0(%rax,%rax,1)
a3c0(3): mov %r15,%rdx
a3c3(3): mov %r14,%rsi
a3c6(3): mov %r13d,%edi
a3c9(4): call 0x0(%r12,%rbx,8)
a3cd(4): add $0x1,%rbx
a3d1(3): cmp %rbx,%rbp
a3d4(2): jnz 0xffffffec(%rip)
a3d6(4): add $0x8,%rsp
a3da(1): pop %rbx
a3db(1): pop %rbp
a3dc(2): pop %r12
a3de(2): pop %r13
a3e0(2): pop %r14
a3e2(2): pop %r15
a3e4(1): ret near (%rsp)

"atexit" :
a400(7): mov 0x203c01(%rip),%rdx
a407(2): xor %esi,%esi
a409(5): jmp 0xffff78a7(%rip)

"_fini" :
a410(4): sub $0x8,%rsp
a414(4): add $0x8,%rsp
a418(1): ret near (%rsp)

