
"utmpxname@plt" :
17f0(6): jmp 0x2095ea(%rip)
17f6(5): push $0x0

"__snprintf_chk@plt" :
1800(6): jmp 0x2095e2(%rip)
1806(5): push $0x1

"free@plt" :
1810(6): jmp 0x2095da(%rip)
1816(5): push $0x2

"localtime@plt" :
1820(6): jmp 0x2095d2(%rip)
1826(5): push $0x3

"abort@plt" :
1830(6): jmp 0x2095ca(%rip)
1836(5): push $0x4

"__errno_location@plt" :
1840(6): jmp 0x2095c2(%rip)
1846(5): push $0x5

"strncpy@plt" :
1850(6): jmp 0x2095ba(%rip)
1856(5): push $0x6

"strncmp@plt" :
1860(6): jmp 0x2095b2(%rip)
1866(5): push $0x7

"_exit@plt" :
1870(6): jmp 0x2095aa(%rip)
1876(5): push $0x8

"strcpy@plt" :
1880(6): jmp 0x2095a2(%rip)
1886(5): push $0x9

"__fpending@plt" :
1890(6): jmp 0x20959a(%rip)
1896(5): push $0xa

"puts@plt" :
18a0(6): jmp 0x209592(%rip)
18a6(5): push $0xb

"textdomain@plt" :
18b0(6): jmp 0x20958a(%rip)
18b6(5): push $0xc

"endutxent@plt" :
18c0(6): jmp 0x209582(%rip)
18c6(5): push $0xd

"fclose@plt" :
18d0(6): jmp 0x20957a(%rip)
18d6(5): push $0xe

"bindtextdomain@plt" :
18e0(6): jmp 0x209572(%rip)
18e6(5): push $0xf

"dcgettext@plt" :
18f0(6): jmp 0x20956a(%rip)
18f6(5): push $0x10

"__ctype_get_mb_cur_max@plt" :
1900(6): jmp 0x209562(%rip)
1906(5): push $0x11

"strlen@plt" :
1910(6): jmp 0x20955a(%rip)
1916(5): push $0x12

"__stack_chk_fail@plt" :
1920(6): jmp 0x209552(%rip)
1926(5): push $0x13

"getopt_long@plt" :
1930(6): jmp 0x20954a(%rip)
1936(5): push $0x14

"mbrtowc@plt" :
1940(6): jmp 0x209542(%rip)
1946(5): push $0x15

"strchr@plt" :
1950(6): jmp 0x20953a(%rip)
1956(5): push $0x16

"gai_strerror@plt" :
1960(6): jmp 0x209532(%rip)
1966(5): push $0x17

"strrchr@plt" :
1970(6): jmp 0x20952a(%rip)
1976(5): push $0x18

"lseek@plt" :
1980(6): jmp 0x209522(%rip)
1986(5): push $0x19

"__assert_fail@plt" :
1990(6): jmp 0x20951a(%rip)
1996(5): push $0x1a

"memset@plt" :
19a0(6): jmp 0x209512(%rip)
19a6(5): push $0x1b

"strncat@plt" :
19b0(6): jmp 0x20950a(%rip)
19b6(5): push $0x1c

"memcmp@plt" :
19c0(6): jmp 0x209502(%rip)
19c6(5): push $0x1d

"fputs_unlocked@plt" :
19d0(6): jmp 0x2094fa(%rip)
19d6(5): push $0x1e

"calloc@plt" :
19e0(6): jmp 0x2094f2(%rip)
19e6(5): push $0x1f

"setutxent@plt" :
19f0(6): jmp 0x2094ea(%rip)
19f6(5): push $0x20

"memcpy@plt" :
1a00(6): jmp 0x2094e2(%rip)
1a06(5): push $0x21

"kill@plt" :
1a10(6): jmp 0x2094da(%rip)
1a16(5): push $0x22

"time@plt" :
1a20(6): jmp 0x2094d2(%rip)
1a26(5): push $0x23

"fileno@plt" :
1a30(6): jmp 0x2094ca(%rip)
1a36(5): push $0x24

"__xstat@plt" :
1a40(6): jmp 0x2094c2(%rip)
1a46(5): push $0x25

"malloc@plt" :
1a50(6): jmp 0x2094ba(%rip)
1a56(5): push $0x26

"fflush@plt" :
1a60(6): jmp 0x2094b2(%rip)
1a66(5): push $0x27

"nl_langinfo@plt" :
1a70(6): jmp 0x2094aa(%rip)
1a76(5): push $0x28

"__freading@plt" :
1a80(6): jmp 0x2094a2(%rip)
1a86(5): push $0x29

"ttyname@plt" :
1a90(6): jmp 0x20949a(%rip)
1a96(5): push $0x2a

"realloc@plt" :
1aa0(6): jmp 0x209492(%rip)
1aa6(5): push $0x2b

"setlocale@plt" :
1ab0(6): jmp 0x20948a(%rip)
1ab6(5): push $0x2c

"__printf_chk@plt" :
1ac0(6): jmp 0x209482(%rip)
1ac6(5): push $0x2d

"strftime@plt" :
1ad0(6): jmp 0x20947a(%rip)
1ad6(5): push $0x2e

"getutxent@plt" :
1ae0(6): jmp 0x209472(%rip)
1ae6(5): push $0x2f

"error@plt" :
1af0(6): jmp 0x20946a(%rip)
1af6(5): push $0x30

"fseeko@plt" :
1b00(6): jmp 0x209462(%rip)
1b06(5): push $0x31

"__cxa_atexit@plt" :
1b10(6): jmp 0x20945a(%rip)
1b16(5): push $0x32

"exit@plt" :
1b20(6): jmp 0x209452(%rip)
1b26(5): push $0x33

"fwrite@plt" :
1b30(6): jmp 0x20944a(%rip)
1b36(5): push $0x34

"__fprintf_chk@plt" :
1b40(6): jmp 0x209442(%rip)
1b46(5): push $0x35

"getaddrinfo@plt" :
1b50(6): jmp 0x20943a(%rip)
1b56(5): push $0x36

"strdup@plt" :
1b60(6): jmp 0x209432(%rip)
1b66(5): push $0x37

"mbsinit@plt" :
1b70(6): jmp 0x20942a(%rip)
1b76(5): push $0x38

"iswprint@plt" :
1b80(6): jmp 0x209422(%rip)
1b86(5): push $0x39

"__ctype_b_loc@plt" :
1b90(6): jmp 0x20941a(%rip)
1b96(5): push $0x3a

"freeaddrinfo@plt" :
1ba0(6): jmp 0x209412(%rip)
1ba6(5): push $0x3b

"__sprintf_chk@plt" :
1bb0(6): jmp 0x20940a(%rip)
1bb6(5): push $0x3c

".plt.got" :
1bc0(6): jmp 0x209422(%rip)
1bc6(2): nop 

"_init" :
17c0(4): sub $0x8,%rsp
17c4(7): mov 0x20980d(%rip),%rax
17cb(3): test %rax,%rax
17ce(2): jz 0x4(%rip)
17d0(2): call %rax
17d2(4): add $0x8,%rsp
17d6(1): ret near (%rsp)

"main" :
1bd0(2): push %r12
1bd2(1): push %rbp
1bd3(3): mov %rsi,%rbp
1bd6(1): push %rbx
1bd7(2): mov %edi,%ebx
1bd9(3): mov (%rsi),%rdi
1bdc(6): mov $0x1,%r12d
1be2(5): call 0x1c3e(%rip)
1be7(7): lea 0x7673(%rip),%rsi
1bee(5): mov $0x6,%edi
1bf3(5): call 0xfffffebd(%rip)
1bf8(7): lea 0x6a38(%rip),%rsi
1bff(7): lea 0x6a08(%rip),%rdi
1c06(5): call 0xfffffcda(%rip)
1c0b(7): lea 0x69fc(%rip),%rdi
1c12(5): call 0xfffffc9e(%rip)
1c17(7): lea 0x1a52(%rip),%rdi
1c1e(5): call 0x6812(%rip)
1c23(5): nop 0x0(%rax,%rax,1)
1c28(7): lea 0x208d11(%rip),%rcx
1c2f(7): lea 0x6a48(%rip),%rdx
1c36(3): xor %r8d,%r8d
1c39(3): mov %rbp,%rsi
1c3c(2): mov %ebx,%edi
1c3e(5): call 0xfffffcf2(%rip)
1c43(3): cmp $0xff,%eax
1c46(6): jz 0x20f(%rip)
1c4c(3): cmp $0x6d,%eax
1c4f(6): jz 0x133(%rip)
1c55(2): jle 0x3b(%rip)
1c57(3): cmp $0x73,%eax
1c5a(6): jz 0x10d(%rip)
1c60(2): jle 0x70(%rip)
1c62(3): cmp $0x75,%eax
1c65(6): jz 0x144(%rip)
1c6b(6): jl 0x12f(%rip)
1c71(3): cmp $0x77,%eax
1c74(6): jz 0x11a(%rip)
1c7a(3): add $0x80,%eax
1c7d(6): jnz 0x92(%rip)
1c83(7): mov $0x1,0x2094cc(%rip)
1c8a(2): jmp 0xffffff9e(%rip)
1c8c(4): nop 0x0(%rax)
1c90(3): cmp $0x54,%eax
1c93(6): jz 0xfb(%rip)
1c99(2): jle 0x5f(%rip)
1c9b(3): cmp $0x62,%eax
1c9e(6): jz 0xd5(%rip)
1ca4(6): jle 0x138(%rip)
1caa(3): cmp $0x64,%eax
1cad(6): jz 0x112(%rip)
1cb3(3): cmp $0x6c,%eax
1cb6(2): jnz 0x59(%rip)
1cb8(7): mov $0x1,0x20948e(%rip)
1cbf(7): mov $0x1,0x20948d(%rip)
1cc6(3): xor %r12d,%r12d
1cc9(5): jmp 0xffffff5f(%rip)
1cce(2): nop 
1cd0(3): cmp $0x71,%eax
1cd3(6): jz 0x176(%rip)
1cd9(6): jnle 0x15a(%rip)
1cdf(3): cmp $0x70,%eax
1ce2(2): jnz 0x2d(%rip)
1ce4(7): mov $0x1,0x209461(%rip)
1ceb(3): xor %r12d,%r12d
1cee(5): jmp 0xffffff3a(%rip)
1cf3(5): nop 0x0(%rax,%rax,1)
1cf8(5): cmp $0xffffff7e,%eax
1cfd(6): jz 0x204(%rip)
1d03(3): cmp $0x48,%eax
1d06(2): jz 0x55(%rip)
1d08(5): cmp $0xffffff7d,%eax
1d0d(2): jz 0xc(%rip)
1d0f(5): mov $0x1,%edi
1d14(5): call 0x143c(%rip)
1d19(7): lea 0x6950(%rip),%rax
1d20(7): mov 0x209381(%rip),%rdi
1d27(7): mov 0x2092f2(%rip),%rcx
1d2e(2): push $0x0
1d30(7): lea 0x6918(%rip),%r9
1d37(7): lea 0x6921(%rip),%r8
1d3e(1): push %rax
1d3f(7): lea 0x68c4(%rip),%rdx
1d46(7): lea 0x6827(%rip),%rsi
1d4d(2): xor %eax,%eax
1d4f(5): call 0x3cc1(%rip)
1d54(2): xor %edi,%edi
1d56(5): call 0xfffffdca(%rip)
1d5b(7): mov $0x1,0x2093f0(%rip)
1d62(5): jmp 0xfffffec6(%rip)
1d67(7): mov $0x1,0x2093e6(%rip)
1d6e(5): jmp 0xfffffeba(%rip)
1d73(7): mov $0x1,0x2093d5(%rip)
1d7a(3): xor %r12d,%r12d
1d7d(5): jmp 0xfffffeab(%rip)
1d82(7): mov $0x1,0x2093bf(%rip)
1d89(5): jmp 0xfffffe9f(%rip)
1d8e(7): mov $0x1,0x2093bc(%rip)
1d95(5): jmp 0xfffffe93(%rip)
1d9a(7): mov $0x1,0x2093aa(%rip)
1da1(3): xor %r12d,%r12d
1da4(5): jmp 0xfffffe84(%rip)
1da9(7): mov $0x1,0x209399(%rip)
1db0(7): mov $0x1,0x20939c(%rip)
1db7(3): xor %r12d,%r12d
1dba(5): jmp 0xfffffe6e(%rip)
1dbf(7): mov $0x1,0x209388(%rip)
1dc6(7): mov $0x1,0x209386(%rip)
1dcd(3): xor %r12d,%r12d
1dd0(7): mov $0x1,0x209379(%rip)
1dd7(5): jmp 0xfffffe51(%rip)
1ddc(3): cmp $0x61,%eax
1ddf(6): jnz 0xffffff30(%rip)
1de5(7): mov $0x1,0x209363(%rip)
1dec(7): mov $0x1,0x20935b(%rip)
1df3(3): xor %r12d,%r12d
1df6(7): mov $0x1,0x209350(%rip)
1dfd(7): mov $0x1,0x209348(%rip)
1e04(7): mov $0x1,0x20933f(%rip)
1e0b(7): mov $0x1,0x209339(%rip)
1e12(7): mov $0x1,0x209330(%rip)
1e19(7): mov $0x1,0x209331(%rip)
1e20(7): mov $0x1,0x20932c(%rip)
1e27(7): mov $0x1,0x209322(%rip)
1e2e(5): jmp 0xfffffdfa(%rip)
1e33(7): mov $0x1,0x209310(%rip)
1e3a(7): mov $0x1,0x209312(%rip)
1e41(3): xor %r12d,%r12d
1e44(5): jmp 0xfffffde4(%rip)
1e49(7): mov $0x1,0x209305(%rip)
1e50(5): jmp 0xfffffdd8(%rip)
1e55(3): test %r12b,%r12b
1e58(2): jz 0x10(%rip)
1e5a(7): mov $0x1,0x2092e8(%rip)
1e61(7): mov $0x1,0x2092ec(%rip)
1e68(7): cmp $0x0,0x2092e1(%rip)
1e6f(2): jz 0x9(%rip)
1e71(7): mov $0x0,0x2092dc(%rip)
1e78(5): mov $0x2,%edi
1e7d(5): call 0x18a3(%rip)
1e82(2): test %al,%al
1e84(2): jnz 0x47(%rip)
1e86(7): lea 0x680f(%rip),%rax
1e8d(a): mov $0xc,0x2092a1(%rip)
1e97(7): mov %rax,0x2092a2(%rip)
1e9e(7): movsxd 0x20920b(%rip),%rax
1ea5(2): sub %eax,%ebx
1ea7(3): cmp $0x1,%ebx
1eaa(2): jz 0x49(%rip)
1eac(2): jnle 0x39(%rip)
1eae(3): add $0x1,%ebx
1eb1(2): jl 0x57(%rip)
1eb3(7): lea 0x66cc(%rip),%rdi
1eba(5): mov $0x1,%esi
1ebf(5): call 0xac1(%rip)
1ec4(1): pop %rbx
1ec5(2): xor %eax,%eax
1ec7(1): pop %rbp
1ec8(2): pop %r12
1eca(1): ret near (%rsp)
1ecb(7): lea 0x67bb(%rip),%rax
1ed2(a): mov $0x10,0x20925c(%rip)
1edc(7): mov %rax,0x20925d(%rip)
1ee3(2): jmp 0xffffffbb(%rip)
1ee5(3): cmp $0x2,%ebx
1ee8(2): jnz 0x20(%rip)
1eea(7): mov $0x1,0x209257(%rip)
1ef1(2): jmp 0xffffffc2(%rip)
1ef3(5): mov 0x0(%rbp,%rax,8),%rdi
1ef8(2): xor %esi,%esi
1efa(5): call 0xa86(%rip)
1eff(2): jmp 0xffffffc5(%rip)
1f01(2): xor %edi,%edi
1f03(5): call 0x124d(%rip)
1f08(5): mov 0x10(%rbp,%rax,8),%rdi
1f0d(5): call 0x3623(%rip)
1f12(7): lea 0x678f(%rip),%rsi
1f19(3): mov %rax,%rbx
1f1c(2): xor %edi,%edi
1f1e(5): mov $0x5,%edx
1f23(5): call 0xfffff9cd(%rip)
1f28(3): mov %rbx,%rcx
1f2b(3): mov %rax,%rdx
1f2e(2): xor %esi,%esi
1f30(2): xor %edi,%edi
1f32(2): xor %eax,%eax
1f34(5): call 0xfffffbbc(%rip)
1f39(5): jmp 0xfffffdd6(%rip)

"_start" :
1f40(2): xor %ebp,%ebp
1f42(3): mov %rdx,%r9
1f45(1): pop %rsi
1f46(3): mov %rsp,%rdx
1f49(4): and $0xfffffff0,%rsp
1f4d(1): push %rax
1f4e(1): push %rsp
1f4f(7): lea 0x64ca(%rip),%r8
1f56(7): lea 0x6453(%rip),%rcx
1f5d(7): lea 0xfffffc6c(%rip),%rdi
1f64(6): call 0x209066(%rip)
1f6a(1): hlt 

"deregister_tm_clones" :
1f70(7): lea 0x209129(%rip),%rdi
1f77(1): push %rbp
1f78(7): lea 0x209121(%rip),%rax
1f7f(3): cmp %rdi,%rax
1f82(3): mov %rsp,%rbp
1f85(2): jz 0x1b(%rip)
1f87(7): mov 0x20903a(%rip),%rax
1f8e(3): test %rax,%rax
1f91(2): jz 0xf(%rip)
1f93(1): pop %rbp
1f94(2): jmp %rax
1f96(a): nop 0x0(%rax,%rax,1)
1fa0(1): pop %rbp
1fa1(1): ret near (%rsp)

"register_tm_clones" :
1fb0(7): lea 0x2090e9(%rip),%rdi
1fb7(7): lea 0x2090e2(%rip),%rsi
1fbe(1): push %rbp
1fbf(3): sub %rdi,%rsi
1fc2(3): mov %rsp,%rbp
1fc5(4): sar $0x3,%rsi
1fc9(3): mov %rsi,%rax
1fcc(4): shr $0x3f,%rax
1fd0(3): add %rax,%rsi
1fd3(3): sar $0x1,%rsi
1fd6(2): jz 0x1a(%rip)
1fd8(7): mov 0x209001(%rip),%rax
1fdf(3): test %rax,%rax
1fe2(2): jz 0xe(%rip)
1fe4(1): pop %rbp
1fe5(2): jmp %rax
1fe7(9): nop 0x0(%rax,%rax,1)
1ff0(1): pop %rbp
1ff1(1): ret near (%rsp)

"__do_global_dtors_aux" :
2000(7): cmp $0x0,0x2090c1(%rip)
2007(2): jnz 0x31(%rip)
2009(8): cmp $0x0,0x208fd7(%rip)
2011(1): push %rbp
2012(3): mov %rsp,%rbp
2015(2): jz 0xe(%rip)
2017(7): mov 0x208fea(%rip),%rdi
201e(5): call 0xfffffba2(%rip)
2023(5): call 0xffffff4d(%rip)
2028(7): mov $0x1,0x209099(%rip)
202f(1): pop %rbp
2030(1): ret near (%rsp)
2031(7): nop 0x0(%rax)
2038(2): REP ret near (%rsp)

"frame_dummy" :
2040(1): push %rbp
2041(3): mov %rsp,%rbp
2044(1): pop %rbp
2045(5): jmp 0xffffff6b(%rip)

"print_line" :
2050(2): push %r15
2052(2): push %r14
2054(3): mov %r8,%r15
2057(2): push %r13
2059(2): push %r12
205b(3): mov %r9,%r14
205e(1): push %rbp
205f(1): push %rbx
2060(3): mov %rsi,%rbx
2063(4): sub $0x58,%rsp
2067(6): mov %dl,0x208fac(%rip)
206d(8): movzx 0x2090df(%rip),%r12d
2075(8): mov 0xa0(%rsp),%rax
207d(3): mov %edi,(%rsp)
2080(4): mov %ecx,0x4(%rsp)
2084(8): mov 0x90(%rsp),%r8
208c(8): mov 0x98(%rsp),%rbp
2094(5): mov %rax,0x8(%rsp)
2099(8): mov 0xa8(%rsp),%rax
20a1(5): mov %rax,0x10(%rsp)
20a6(9): mov $0x28,%rax
20af(5): mov %rax,0x48(%rsp)
20b4(2): xor %eax,%eax
20b6(7): cmp $0x0,0x209096(%rip)
20bd(2): jz 0xb(%rip)
20bf(3): test %r12b,%r12b
20c2(6): jz 0x14e(%rip)
20c8(5): lea 0x33(%rsp),%r13
20cd(5): mov $0x0,0x33(%rsp)
20d2(3): test %r12b,%r12b
20d5(2): jnz 0x14(%rip)
20d7(3): mov %rbp,%rdi
20da(5): call 0xfffff836(%rip)
20df(4): cmp $0xb,%rax
20e3(6): jbe 0x1ad(%rip)
20e9(5): lea 0x3b(%rsp),%r12
20ee(5): mov $0x0,0x3b(%rsp)
20f3(7): cmp $0x0,0x209056(%rip)
20fa(5): mov $0x1,%edi
20ff(2): jz 0x1d(%rip)
2101(5): mov 0x10(%rsp),%rdi
2106(5): call 0xfffff80a(%rip)
210b(4): lea 0x2(%rax),%rdi
210f(4): cmp $0xb,%rax
2113(5): mov $0xe,%eax
2118(4): cmovbe %rax,%rdi
211c(5): call 0x3a54(%rip)
2121(7): cmp $0x0,0x209028(%rip)
2128(3): mov %rax,%rbp
212b(6): jnz 0x135(%rip)
2131(3): mov $0x0,(%rax)
2134(7): cmp $0x0,0x209016(%rip)
213b(7): lea 0x208ed6(%rip),%rax
2142(7): lea 0x7118(%rip),%r8
2149(5): lea 0x28(%rsp),%rdi
214e(7): lea 0x65d3(%rip),%rsi
2155(4): cmovne %rax,%r8
2159(7): lea 0x6304(%rip),%rax
2160(3): test %rbx,%rbx
2163(4): cmove %rax,%rbx
2167(6): mov 0x208fcb(%rip),%eax
216d(4): sub $0x8,%rsp
2171(1): push %rbp
2172(4): push 0x18(%rsp)
2176(3): mov %rbx,%rcx
2179(2): push %r12
217b(2): push %r13
217d(2): push %r14
217f(1): push %rax
2180(2): xor %eax,%eax
2182(2): push %r15
2184(5): mov 0x44(%rsp),%r9d
2189(4): mov 0x40(%rsp),%edx
218d(5): call 0x3c73(%rip)
2192(4): add $0x40,%rsp
2196(3): cmp $0xff,%eax
2199(6): jz 0x11f(%rip)
219f(5): mov 0x28(%rsp),%rbx
21a4(3): mov %rbx,%rdi
21a7(5): call 0xfffff769(%rip)
21ac(3): add %rbx,%rax
21af(2): jmp 0xc(%rip)
21b1(7): nop 0x0(%rax)
21b8(3): mov %rdx,%rax
21bb(4): cmp $0x20,0xffffffff(%rax)
21bf(4): lea 0xffffffff(%rax),%rdx
21c3(2): jz 0xfffffff5(%rip)
21c5(3): mov $0x0,(%rax)
21c8(5): mov 0x28(%rsp),%rdi
21cd(5): call 0xfffff6d3(%rip)
21d2(5): mov 0x28(%rsp),%rdi
21d7(5): call 0xfffff639(%rip)
21dc(5): mov 0x48(%rsp),%rax
21e1(9): xor $0x28,%rax
21ea(6): jnz 0xd3(%rip)
21f0(4): add $0x58,%rsp
21f4(3): mov %rbp,%rdi
21f7(1): pop %rbx
21f8(1): pop %rbp
21f9(2): pop %r12
21fb(2): pop %r13
21fd(2): pop %r14
21ff(2): pop %r15
2201(5): jmp 0xfffff60f(%rip)
2206(a): nop 0x0(%rax,%rax,1)
2210(3): mov %r8,%rdi
2213(5): mov %r8,0x18(%rsp)
2218(5): call 0xfffff6f8(%rip)
221d(4): cmp $0x6,%rax
2221(5): mov 0x18(%rsp),%r8
2226(6): jnbe 0xfffffea2(%rip)
222c(5): lea 0x33(%rsp),%r13
2231(7): lea 0x6231(%rip),%rcx
2238(5): mov $0x8,%edx
223d(5): mov $0x1,%esi
2242(2): xor %eax,%eax
2244(3): mov %r13,%rdi
2247(5): call 0xfffff969(%rip)
224c(8): movzx 0x208f00(%rip),%r12d
2254(5): jmp 0xfffffe7e(%rip)
2259(7): nop 0x0(%rax)
2260(5): mov 0x10(%rsp),%r8
2265(7): lea 0x6209(%rip),%rcx
226c(3): mov %rax,%rdi
226f(7): mov $0xffffffff,%rdx
2276(5): mov $0x1,%esi
227b(2): xor %eax,%eax
227d(5): call 0xfffff933(%rip)
2282(5): jmp 0xfffffeb2(%rip)
2287(9): nop 0x0(%rax,%rax,1)
2290(5): lea 0x3b(%rsp),%r12
2295(7): lea 0x61d3(%rip),%rcx
229c(3): mov %rbp,%r8
229f(5): mov $0xd,%edx
22a4(5): mov $0x1,%esi
22a9(2): xor %eax,%eax
22ab(3): mov %r12,%rdi
22ae(5): call 0xfffff902(%rip)
22b3(5): jmp 0xfffffe40(%rip)
22b8(5): call 0x3b08(%rip)
22bd(5): call 0xfffff663(%rip)

"make_id_equals_comment" :
22d0(1): push %rbp
22d1(1): push %rbx
22d2(7): lea 0x61a3(%rip),%rsi
22d9(5): mov $0x5,%edx
22de(3): mov %rdi,%rbp
22e1(2): xor %edi,%edi
22e3(4): sub $0x8,%rsp
22e7(5): call 0xfffff609(%rip)
22ec(3): mov %rax,%rdi
22ef(5): call 0xfffff621(%rip)
22f4(4): lea 0x5(%rax),%rdi
22f8(5): call 0x3878(%rip)
22fd(7): lea 0x6178(%rip),%rsi
2304(3): mov %rax,%rbx
2307(5): mov $0x5,%edx
230c(2): xor %edi,%edi
230e(5): call 0xfffff5e2(%rip)
2313(3): mov %rbx,%rdi
2316(3): mov %rax,%rsi
2319(5): call 0xfffff567(%rip)
231e(4): lea 0x28(%rbp),%rsi
2322(3): mov %rbx,%rdi
2325(5): mov $0x4,%edx
232a(5): call 0xfffff686(%rip)
232f(4): add $0x8,%rsp
2333(1): pop %rbx
2334(1): pop %rbp
2335(1): ret near (%rsp)

"time_string.isra.1" :
2340(4): sub $0x18,%rsp
2344(3): movsxd %edi,%rdi
2347(4): mov %rdi,(%rsp)
234b(3): mov %rsp,%rdi
234e(9): mov $0x28,%rax
2357(5): mov %rax,0x8(%rsp)
235c(2): xor %eax,%eax
235e(5): call 0xfffff4c2(%rip)
2363(3): test %rax,%rax
2366(2): jz 0x3a(%rip)
2368(7): mov 0x208dd1(%rip),%rdx
236f(7): lea 0x208d8a(%rip),%rdi
2376(3): mov %rax,%rcx
2379(5): mov $0x21,%esi
237e(5): call 0xfffff752(%rip)
2383(7): lea 0x208d76(%rip),%rax
238a(5): mov 0x8(%rsp),%rdx
238f(9): xor $0x28,%rdx
2398(2): jnz 0x1a(%rip)
239a(4): add $0x18,%rsp
239e(1): ret near (%rsp)
239f(1): nop 
23a0(4): mov (%rsp),%rdi
23a4(7): lea 0x208d55(%rip),%rsi
23ab(5): call 0x13d5(%rip)
23b0(2): jmp 0xffffffda(%rip)
23b2(5): call 0xfffff56e(%rip)

"print_user" :
23c0(2): push %r15
23c2(2): push %r14
23c4(7): lea 0x60bb(%rip),%rcx
23cb(2): push %r13
23cd(2): push %r12
23cf(5): mov $0xc,%edx
23d4(1): push %rbp
23d5(1): push %rbx
23d6(3): mov %rsi,%r12
23d9(3): mov %rdi,%rbx
23dc(5): mov $0x1,%esi
23e1(7): sub $0x228,%rsp
23e8(4): movsxd 0x4(%rdi),%r8
23ec(8): lea 0xd4(%rsp),%rbp
23f4(9): mov $0x28,%rax
23fd(8): mov %rax,0x218(%rsp)
2405(2): xor %eax,%eax
2407(3): mov %rbp,%rdi
240a(5): call 0xfffff7a6(%rip)
240f(4): movzx 0x8(%rbx),%ecx
2413(3): cmp $0x2f,%cl
2416(6): jnz 0x2ba(%rip)
241c(4): lea 0x8(%rbx),%rax
2420(8): lea 0xe0(%rsp),%rsi
2428(4): lea 0x28(%rbx),%rdi
242c(3): mov %rax,%r15
242f(3): mov %rsi,%rdx
2432(2): jmp 0xd(%rip)
2434(4): nop 0x0(%rax)
2438(3): movzx (%rax),%ecx
243b(2): test %cl,%cl
243d(2): jz 0x12(%rip)
243f(4): add $0x1,%rax
2443(4): add $0x1,%rdx
2447(3): mov %cl,0xffffffff(%rdx)
244a(3): cmp %rax,%rdi
244d(2): jnbe 0xffffffeb(%rip)
244f(3): mov $0x0,(%rdx)
2452(5): lea 0x30(%rsp),%rdx
2457(5): mov $0x1,%edi
245c(5): call 0xfffff5e4(%rip)
2461(2): test %eax,%eax
2463(6): jnz 0x2ad(%rip)
2469(4): mov 0x48(%rsp),%eax
246d(5): mov 0x78(%rsp),%r14
2472(3): and $0x10,%eax
2475(3): cmp $0x1,%eax
2478(3): sbb %r13d,%r13d
247b(4): and $0x2,%r13d
247f(4): add $0x2b,%r13d
2483(3): test %r14,%r14
2486(6): jnz 0x192(%rip)
248c(4): movsx %r13b,%eax
2490(4): mov %eax,0xc(%rsp)
2494(4): movzx 0x4c(%rbx),%edx
2498(b): mov $0x3f2020,0xcd(%rsp)
24a3(8): lea 0xcd(%rsp),%r14
24ab(2): test %dl,%dl
24ad(6): jz 0x1f6(%rip)
24b3(8): lea 0x110(%rsp),%r12
24bb(4): lea 0x4c(%rbx),%rax
24bf(7): lea 0x14c(%rbx),%rsi
24c6(3): mov %r12,%rcx
24c9(2): jmp 0xe(%rip)
24cb(5): nop 0x0(%rax,%rax,1)
24d0(3): movzx (%rax),%edx
24d3(2): test %dl,%dl
24d5(2): jz 0x12(%rip)
24d7(4): add $0x1,%rax
24db(4): add $0x1,%rcx
24df(3): mov %dl,0xffffffff(%rcx)
24e2(3): cmp %rax,%rsi
24e5(2): jnbe 0xffffffeb(%rip)
24e7(3): mov $0x0,(%rcx)
24ea(5): mov $0x3a,%esi
24ef(3): mov %r12,%rdi
24f2(5): call 0xfffff45e(%rip)
24f7(3): test %rax,%rax
24fa(6): jz 0x27e(%rip)
2500(3): mov $0x0,(%rax)
2503(8): cmp $0x0,0x110(%rsp)
250b(4): lea 0x1(%rax),%rsi
250f(3): mov %r12,%r13
2512(5): mov %rsi,0x10(%rsp)
2517(6): jnz 0x209(%rip)
251d(3): mov %r13,%rdi
2520(5): call 0xfffff3f0(%rip)
2525(5): mov 0x10(%rsp),%rdi
252a(5): mov %rax,0x28(%rsp)
252f(7): mov 0x208bfa(%rip),%rcx
2536(7): mov 0x208beb(%rip),%r10
253d(3): test %rdi,%rdi
2540(6): jz 0x29d(%rip)
2546(5): mov %r10,0x20(%rsp)
254b(5): mov %rcx,0x18(%rsp)
2550(5): call 0xfffff3c0(%rip)
2555(5): mov 0x28(%rsp),%rdx
255a(5): mov 0x18(%rsp),%rcx
255f(5): mov 0x20(%rsp),%r10
2564(5): lea 0x4(%rdx,%rax,1),%rax
2569(3): cmp %rcx,%rax
256c(6): jnbe 0x2a4(%rip)
2572(5): mov 0x10(%rsp),%r9
2577(7): lea 0x5f5b(%rip),%rcx
257e(3): mov %r13,%r8
2581(7): mov $0xffffffff,%rdx
2588(5): mov $0x1,%esi
258d(3): mov %r10,%rdi
2590(2): xor %eax,%eax
2592(5): call 0xfffff61e(%rip)
2597(3): cmp %r12,%r13
259a(2): jz 0xa(%rip)
259c(3): mov %r13,%rdi
259f(5): call 0xfffff271(%rip)
25a4(7): mov 0x208b7d(%rip),%r12
25ab(7): lea 0x6caf(%rip),%r13
25b2(3): test %r12,%r12
25b5(4): cmove %r13,%r12
25b9(6): mov 0x154(%rbx),%edi
25bf(5): call 0xfffffd81(%rip)
25c4(2): push %r13
25c6(2): push %r12
25c8(4): lea 0x2c(%rbx),%rsi
25cc(1): push %rbp
25cd(2): push %r14
25cf(3): mov %rax,%r9
25d2(4): mov 0x2c(%rsp),%edx
25d6(3): mov %r15,%r8
25d9(5): mov $0x20,%ecx
25de(5): mov $0x20,%edi
25e3(5): call 0xfffffa6d(%rip)
25e8(4): add $0x20,%rsp
25ec(8): mov 0x218(%rsp),%rax
25f4(9): xor $0x28,%rax
25fd(6): jnz 0x351(%rip)
2603(7): add $0x228,%rsp
260a(1): pop %rbx
260b(1): pop %rbp
260c(2): pop %r12
260e(2): pop %r13
2610(2): pop %r14
2612(2): pop %r15
2614(1): ret near (%rsp)
2615(3): nop (%rax)
2618(a): mov $0x-9223372036854775808,%rax
2622(7): cmp %rax,0x2089e7(%rip)
2629(6): jz 0x217(%rip)
262f(3): cmp %r12,%r14
2632(2): jle 0x1e(%rip)
2634(7): mov 0x2089d5(%rip),%rax
263b(7): lea 0xfffeae81(%rax),%rdx
2642(3): cmp %rdx,%r14
2645(2): jl 0xb(%rip)
2647(3): cmp %rax,%r14
264a(6): jle 0x237(%rip)
2650(7): lea 0x5e77(%rip),%rsi
2657(5): mov $0x5,%edx
265c(2): xor %edi,%edi
265e(5): call 0xfffff292(%rip)
2663(3): mov %rax,%r9
2666(8): lea 0xcd(%rsp),%r14
266e(7): lea 0x5e5f(%rip),%rcx
2675(5): mov $0x7,%edx
267a(2): xor %eax,%eax
267c(6): mov $0x6,%r8d
2682(5): mov $0x1,%esi
2687(3): mov %r14,%rdi
268a(5): call 0xfffff526(%rip)
268f(4): movzx 0x4c(%rbx),%edx
2693(4): movsx %r13b,%eax
2697(4): mov %eax,0xc(%rsp)
269b(2): test %dl,%dl
269d(6): jnz 0xfffffe16(%rip)
26a3(8): cmp $0x0,0x208a85(%rip)
26ab(7): mov 0x208a76(%rip),%r12
26b2(6): jz 0x96(%rip)
26b8(5): mov $0x0,(%r12)
26bd(7): lea 0x6b9d(%rip),%r13
26c4(5): jmp 0xfffffef5(%rip)
26c9(7): nop 0x0(%rax)
26d0(5): mov $0x2f,%eax
26d5(8): lea 0xe0(%rsp),%rsi
26dd(2): test %cl,%cl
26df(8): mov %ax,0xe4(%rsp)
26e7(4): lea 0x8(%rbx),%rax
26eb(b): mov $0x7665642f,0xe0(%rsp)
26f6(4): lea 0x28(%rbx),%rdi
26fa(4): lea 0x5(%rsi),%rdx
26fe(3): mov %rax,%r15
2701(6): jnz 0xfffffd3e(%rip)
2707(5): jmp 0xfffffd48(%rip)
270c(4): nop 0x0(%rax)
2710(8): mov $0x3f,0xc(%rsp)
2718(5): jmp 0xfffffd7c(%rip)
271d(3): nop (%rax)
2720(7): cmp $0x0,0x208a2f(%rip)
2727(6): jz 0xfffffdf6(%rip)
272d(3): mov %r12,%rdi
2730(5): call 0xf00(%rip)
2735(3): mov %rax,%r13
2738(3): test %rax,%rax
273b(4): cmove %r12,%r13
273f(5): jmp 0xfffffdde(%rip)
2744(4): nop 0x0(%rax)
2748(3): mov %r12,%rdi
274b(b): mov $0x1,0x2089da(%rip)
2756(5): call 0xfffff0ba(%rip)
275b(5): mov $0x1,%edi
2760(5): call 0x3410(%rip)
2765(3): mov %rax,%r12
2768(7): mov %rax,0x2089b9(%rip)
276f(5): jmp 0xffffff49(%rip)
2774(4): nop 0x0(%rax)
2778(8): cmp $0x0,0x110(%rsp)
2780(2): jz 0xf(%rip)
2782(7): cmp $0x0,0x2089cd(%rip)
2789(6): jnz 0x16e(%rip)
278f(3): mov %r12,%rax
2792(2): mov (%rax),%ecx
2794(4): add $0x4,%rax
2798(6): lea 0xfefefeff(%rcx),%edx
279e(2): not %ecx
27a0(2): and %ecx,%edx
27a2(6): and $0x80808080,%edx
27a8(2): jz 0xffffffea(%rip)
27aa(2): mov %edx,%ecx
27ac(7): mov 0x208975(%rip),%r10
27b3(3): mov %r12,%r13
27b6(3): shr $0x10,%ecx
27b9(6): test $0x8080,%edx
27bf(3): cmove %ecx,%edx
27c2(4): lea 0x2(%rax),%rcx
27c6(2): mov %edx,%esi
27c8(4): cmove %rcx,%rax
27cc(3): add %dl,%sil
27cf(7): mov 0x20895a(%rip),%rcx
27d6(4): sbb $0x3,%rax
27da(3): sub %r12,%rax
27dd(4): add $0x3,%rax
27e1(3): cmp %rcx,%rax
27e4(2): jnbe 0x6d(%rip)
27e6(7): lea 0x5cf4(%rip),%rcx
27ed(3): mov %r13,%r8
27f0(7): mov $0xffffffff,%rdx
27f7(5): mov $0x1,%esi
27fc(3): mov %r10,%rdi
27ff(2): xor %eax,%eax
2801(5): call 0xfffff3af(%rip)
2806(5): jmp 0xfffffd91(%rip)
280b(5): nop 0x0(%rax,%rax,1)
2810(3): mov %r10,%rdi
2813(7): mov %rax,0x208916(%rip)
281a(5): mov %rax,0x18(%rsp)
281f(5): call 0xffffeff1(%rip)
2824(5): mov 0x18(%rsp),%rax
2829(3): mov %rax,%rdi
282c(5): call 0x3344(%rip)
2831(3): mov %rax,%r10
2834(7): mov %rax,0x2088ed(%rip)
283b(5): jmp 0xfffffd37(%rip)
2840(7): lea 0x2087c9(%rip),%rdi
2847(5): call 0xfffff1d9(%rip)
284c(5): jmp 0xfffffde3(%rip)
2851(3): mov %r10,%rdi
2854(7): mov %rax,0x2088d5(%rip)
285b(5): mov %rax,0x10(%rsp)
2860(5): call 0xffffefb0(%rip)
2865(5): mov 0x10(%rsp),%rax
286a(3): mov %rax,%rdi
286d(5): call 0x3303(%rip)
2872(3): mov %rax,%r10
2875(7): mov %rax,0x2088ac(%rip)
287c(5): jmp 0xffffff6a(%rip)
2881(2): mov %eax,%ecx
2883(3): sub %r14d,%ecx
2886(3): cmp $0x3b,%ecx
2889(6): jle 0x99(%rip)
288f(6): cmp $0x1517f,%ecx
2895(6): jnle 0xbe(%rip)
289b(2): mov %ecx,%eax
289d(5): mov $0x91a2b3c5,%edx
28a2(7): lea 0x208878(%rip),%rdi
28a9(2): imul %eax,%edx,%edx
28ab(2): mov %ecx,%eax
28ad(5): mov $0x1,%esi
28b2(3): sar $0x1f,%eax
28b5(4): lea 0x0(%rdx,%rcx,1),%r8d
28b9(5): mov $0x88888889,%edx
28be(4): sar $0xb,%r8d
28c2(3): sub %eax,%r8d
28c5(7): imul %r8d,$0xe10,%eax
28cc(2): sub %eax,%ecx
28ce(2): mov %ecx,%eax
28d0(7): lea 0x5bed(%rip),%rcx
28d7(2): mul %eax,%edx,%edx
28d9(2): xor %eax,%eax
28db(3): shr $0x5,%edx
28de(3): mov %edx,%r9d
28e1(5): mov $0x6,%edx
28e6(5): call 0xfffff2ca(%rip)
28eb(7): lea 0x20882f(%rip),%r9
28f2(5): jmp 0xfffffd74(%rip)
28f7(3): mov %r12,%rdi
28fa(5): call 0xd36(%rip)
28ff(3): test %rax,%rax
2902(3): mov %rax,%r13
2905(2): jz 0x29(%rip)
2907(3): mov %rax,%rdi
290a(5): call 0xfffff006(%rip)
290f(7): mov 0x20881a(%rip),%rcx
2916(7): mov 0x20880b(%rip),%r10
291d(5): jmp 0xfffffec0(%rip)
2922(7): lea 0x5b57(%rip),%r9
2929(5): jmp 0xfffffd3d(%rip)
292e(3): mov %r12,%rax
2931(2): mov (%rax),%ecx
2933(4): add $0x4,%rax
2937(6): lea 0xfefefeff(%rcx),%edx
293d(2): not %ecx
293f(2): and %ecx,%edx
2941(6): and $0x80808080,%edx
2947(2): jz 0xffffffea(%rip)
2949(5): jmp 0xfffffe61(%rip)
294e(5): call 0xffffefd2(%rip)
2953(7): lea 0x6366(%rip),%rcx
295a(7): lea 0x5b29(%rip),%rsi
2961(7): lea 0x5b3e(%rip),%rdi
2968(5): mov $0xcd,%edx
296d(5): call 0xfffff023(%rip)

"who" :
2980(2): push %r15
2982(2): push %r14
2984(2): mov %esi,%ecx
2986(2): push %r13
2988(2): push %r12
298a(1): push %rbp
298b(1): push %rbx
298c(3): mov %rdi,%rbx
298f(4): sub $0x58,%rsp
2993(5): lea 0x30(%rsp),%rdx
2998(5): lea 0x28(%rsp),%rsi
299d(9): mov $0x28,%rax
29a6(5): mov %rax,0x48(%rsp)
29ab(2): xor %eax,%eax
29ad(5): call 0x3603(%rip)
29b2(2): test %eax,%eax
29b4(6): jnz 0x762(%rip)
29ba(7): cmp $0x0,0x208794(%rip)
29c1(5): mov 0x30(%rsp),%r15
29c6(5): mov 0x28(%rsp),%r13
29cb(6): jnz 0x163(%rip)
29d1(7): cmp $0x0,0x20877a(%rip)
29d8(6): jnz 0x32d(%rip)
29de(7): cmp $0x0,0x208763(%rip)
29e5(6): jnz 0x2e8(%rip)
29eb(a): mov $0x-9223372036854775808,%rax
29f5(3): test %r13,%r13
29f8(4): lea 0xffffffff(%r13),%r12
29fc(4): mov %rax,(%rsp)
2a00(6): jz 0x101(%rip)
2a06(5): lea 0x3c(%rsp),%rax
2a0b(7): lea 0x684f(%rip),%rbx
2a12(3): mov %r12,%r14
2a15(3): mov %r15,%r12
2a18(5): mov %rax,0x8(%rsp)
2a1d(3): nop (%rax)
2a20(7): cmp $0x0,0x208721(%rip)
2a27(2): jz 0x1c(%rip)
2a29(5): lea 0x8(%r12),%rsi
2a2e(5): mov $0x20,%edx
2a33(3): mov %rbp,%rdi
2a36(5): call 0xffffee2a(%rip)
2a3b(2): test %eax,%eax
2a3d(6): jnz 0x9b(%rip)
2a43(7): cmp $0x0,0x2086ff(%rip)
2a4a(5): movzx (%r12),%eax
2a4f(2): jz 0x14(%rip)
2a51(6): cmp $0x0,0x2c(%r12)
2a57(2): jz 0xc(%rip)
2a59(4): cmp $0x7,%ax
2a5d(6): jz 0x5c3(%rip)
2a63(7): cmp $0x0,0x2086e0(%rip)
2a6a(2): jz 0xc(%rip)
2a6c(4): cmp $0x1,%ax
2a70(6): jz 0x15e(%rip)
2a76(7): cmp $0x0,0x2086d2(%rip)
2a7d(2): jz 0xc(%rip)
2a7f(4): cmp $0x2,%ax
2a83(6): jz 0x34f(%rip)
2a89(7): cmp $0x0,0x2086bb(%rip)
2a90(2): jz 0xc(%rip)
2a92(4): cmp $0x3,%ax
2a96(6): jz 0x388(%rip)
2a9c(7): cmp $0x0,0x2086a9(%rip)
2aa3(2): jz 0xc(%rip)
2aa5(4): cmp $0x5,%ax
2aa9(6): jz 0x393(%rip)
2aaf(7): cmp $0x0,0x208697(%rip)
2ab6(2): jz 0xc(%rip)
2ab8(4): cmp $0x6,%ax
2abc(6): jz 0x3f5(%rip)
2ac2(7): cmp $0x0,0x208685(%rip)
2ac9(2): jz 0xf(%rip)
2acb(4): cmp $0x8,%ax
2acf(6): jz 0x454(%rip)
2ad5(3): nop (%rax)
2ad8(6): cmp $0x2,(%r12)
2ade(2): jnz 0xe(%rip)
2ae0(8): movsxd 0x154(%r12),%rax
2ae8(4): mov %rax,(%rsp)
2aec(4): sub $0x1,%r14
2af0(7): add $0x180,%r12
2af7(4): cmp $0xffffffff,%r14
2afb(6): jnz 0xffffff25(%rip)
2b01(5): mov 0x30(%rsp),%rdi
2b06(5): call 0xffffed0a(%rip)
2b0b(5): mov 0x48(%rsp),%rax
2b10(9): xor $0x28,%rax
2b19(6): jnz 0x62c(%rip)
2b1f(4): add $0x58,%rsp
2b23(1): pop %rbx
2b24(1): pop %rbp
2b25(2): pop %r12
2b27(2): pop %r13
2b29(2): pop %r14
2b2b(2): pop %r15
2b2d(1): ret near (%rsp)
2b2e(2): xor %ebp,%ebp
2b30(3): test %r13,%r13
2b33(4): lea 0xffffffff(%r13),%rbx
2b37(2): jz 0x38(%rip)
2b39(7): lea 0x6721(%rip),%r12
2b40(7): lea 0x593d(%rip),%r14
2b47(9): nop 0x0(%rax,%rax,1)
2b50(5): cmp $0x0,0x2c(%r15)
2b55(2): jz 0x9(%rip)
2b57(5): cmp $0x7,(%r15)
2b5c(2): jz 0x3d(%rip)
2b5e(4): sub $0x1,%rbx
2b62(7): add $0x180,%r15
2b69(4): cmp $0xffffffff,%rbx
2b6d(2): jnz 0xffffffe3(%rip)
2b6f(7): lea 0x5975(%rip),%rsi
2b76(2): xor %edi,%edi
2b78(5): mov $0x5,%edx
2b7d(5): call 0xffffed73(%rip)
2b82(3): mov %rbp,%rdx
2b85(3): mov %rax,%rsi
2b88(5): mov $0x1,%edi
2b8d(2): xor %eax,%eax
2b8f(5): call 0xffffef31(%rip)
2b94(5): jmp 0xffffff6d(%rip)
2b99(3): mov %r15,%rdi
2b9c(4): add $0x1,%rbp
2ba0(5): call 0x33b0(%rip)
2ba5(7): lea 0x593a(%rip),%rsi
2bac(3): mov %rax,%rcx
2baf(3): mov %r12,%rdx
2bb2(3): mov %rax,%r13
2bb5(5): mov $0x1,%edi
2bba(2): xor %eax,%eax
2bbc(5): call 0xffffef04(%rip)
2bc1(3): mov %r13,%rdi
2bc4(3): mov %r14,%r12
2bc7(5): call 0xffffec49(%rip)
2bcc(2): jmp 0xffffff92(%rip)
2bce(5): mov 0x4(%r12),%eax
2bd3(5): mov $0x100,%ecx
2bd8(1): cdq %eax
2bd9(2): idiv %ecx,%eax
2bdb(8): cmp $0x0,0x20850d(%rip)
2be3(3): mov %edx,%r15d
2be6(3): mov %eax,%r13d
2be9(6): jz 0x448(%rip)
2bef(7): lea 0x592e(%rip),%rsi
2bf6(2): xor %edi,%edi
2bf8(5): mov $0x5,%edx
2bfd(5): call 0xffffecf3(%rip)
2c02(7): mov 0x2084e7(%rip),%rdi
2c09(7): lea 0x591e(%rip),%rcx
2c10(3): mov %rax,%r8
2c13(4): or $0xffffffff,%rdx
2c17(2): xor %eax,%eax
2c19(4): movzx %r15b,%r9d
2c1d(5): mov $0x1,%esi
2c22(5): call 0xffffef8e(%rip)
2c27(8): cmp $0x0,0x2084b9(%rip)
2c2f(6): jz 0x43b(%rip)
2c35(4): cmp $0x4e,%r13b
2c39(4): movzx %r13b,%r15d
2c3d(7): lea 0x58f0(%rip),%rsi
2c44(6): mov $0x53,%r13d
2c4a(5): mov $0x5,%edx
2c4f(4): cmovne %r15d,%r13d
2c53(2): xor %edi,%edi
2c55(4): sub $0x20,%r15d
2c59(5): call 0xffffec97(%rip)
2c5e(7): mov 0x208483(%rip),%rdi
2c65(7): lea 0x58ce(%rip),%rcx
2c6c(3): mov %rax,%r8
2c6f(3): mov %r13d,%r9d
2c72(4): or $0xffffffff,%rdx
2c76(2): xor %eax,%eax
2c78(5): mov $0x1,%esi
2c7d(7): lea 0x65dd(%rip),%r13
2c84(5): call 0xffffef2c(%rip)
2c89(4): cmp $0x5e,%r15d
2c8d(2): jnbe 0x9(%rip)
2c8f(7): mov 0x208452(%rip),%r13
2c96(8): mov 0x154(%r12),%edi
2c9e(5): call 0xfffff6a2(%rip)
2ca3(7): mov 0x208446(%rip),%r8
2caa(1): push %rbx
2cab(3): or $0xff,%ecx
2cae(2): push %r13
2cb0(1): push %rbx
2cb1(3): mov %rax,%r9
2cb4(1): push %rbx
2cb5(5): mov $0x20,%edx
2cba(3): mov %rbx,%rsi
2cbd(2): mov %ecx,%edi
2cbf(5): call 0xfffff391(%rip)
2cc4(4): add $0x20,%rsp
2cc8(5): jmp 0xfffffe10(%rip)
2ccd(2): xor %edi,%edi
2ccf(5): call 0xffffedc1(%rip)
2cd4(3): test %rax,%rax
2cd7(3): mov %rax,%rbp
2cda(6): jz 0xfffffe27(%rip)
2ce0(7): lea 0x5837(%rip),%rsi
2ce7(5): mov $0x5,%edx
2cec(3): mov %rax,%rdi
2cef(5): call 0xffffeb71(%rip)
2cf4(2): test %eax,%eax
2cf6(6): jnz 0xfffffcf5(%rip)
2cfc(4): add $0x5,%rbp
2d00(5): jmp 0xfffffceb(%rip)
2d05(7): lea 0x57ed(%rip),%rsi
2d0c(5): mov $0x5,%edx
2d11(2): xor %edi,%edi
2d13(5): call 0xffffebdd(%rip)
2d18(7): lea 0x57df(%rip),%rsi
2d1f(5): mov $0x5,%edx
2d24(2): xor %edi,%edi
2d26(5): mov %rax,0x10(%rsp)
2d2b(5): call 0xffffebc5(%rip)
2d30(7): lea 0x57cf(%rip),%rsi
2d37(5): mov $0x5,%edx
2d3c(2): xor %edi,%edi
2d3e(3): mov %rax,%r12
2d41(5): call 0xffffebaf(%rip)
2d46(7): lea 0x57bd(%rip),%rsi
2d4d(5): mov $0x5,%edx
2d52(2): xor %edi,%edi
2d54(3): mov %rax,%rbx
2d57(5): call 0xffffeb99(%rip)
2d5c(7): lea 0x57ac(%rip),%rsi
2d63(5): mov $0x5,%edx
2d68(2): xor %edi,%edi
2d6a(3): mov %rax,%r14
2d6d(5): call 0xffffeb83(%rip)
2d72(7): lea 0x579b(%rip),%rsi
2d79(5): mov $0x5,%edx
2d7e(2): xor %edi,%edi
2d80(5): mov %rax,0x8(%rsp)
2d85(5): call 0xffffeb6b(%rip)
2d8a(7): lea 0x5788(%rip),%rsi
2d91(5): mov $0x5,%edx
2d96(2): xor %edi,%edi
2d98(4): mov %rax,(%rsp)
2d9c(5): call 0xffffeb54(%rip)
2da1(5): mov 0x10(%rsp),%r8
2da6(3): or $0xff,%ecx
2da9(5): mov $0x20,%edx
2dae(3): mov %rax,%rsi
2db1(2): mov %ecx,%edi
2db3(2): push %r8
2db5(2): push %r12
2db7(1): push %rbx
2db8(2): push %r14
2dba(5): mov 0x28(%rsp),%r9
2dbf(5): mov 0x20(%rsp),%r8
2dc4(5): call 0xfffff28c(%rip)
2dc9(4): add $0x20,%rsp
2dcd(5): jmp 0xfffffc11(%rip)
2dd2(8): mov 0x154(%r12),%edi
2dda(5): call 0xfffff566(%rip)
2ddf(7): lea 0x5759(%rip),%rsi
2de6(3): mov %rax,%r13
2de9(5): mov $0x5,%edx
2dee(2): xor %edi,%edi
2df0(5): call 0xffffeb00(%rip)
2df5(1): push %rbx
2df6(3): or $0xff,%ecx
2df9(1): push %rbx
2dfa(7): lea 0x6460(%rip),%rsi
2e01(1): push %rbx
2e02(1): push %rbx
2e03(3): mov %rax,%r8
2e06(3): mov %r13,%r9
2e09(5): mov $0x20,%edx
2e0e(2): mov %ecx,%edi
2e10(5): call 0xfffff240(%rip)
2e15(4): add $0x20,%rsp
2e19(5): jmp 0xfffffcbf(%rip)
2e1e(8): mov 0x154(%r12),%edi
2e26(5): call 0xfffff51a(%rip)
2e2b(5): mov $0x5,%edx
2e30(3): mov %rax,%r13
2e33(7): lea 0x5711(%rip),%rsi
2e3a(2): jmp 0xffffffb4(%rip)
2e3c(3): mov %r12,%rdi
2e3f(5): call 0xfffff491(%rip)
2e44(5): mov 0x8(%rsp),%r15
2e49(5): movsxd 0x4(%r12),%r8
2e4e(7): lea 0x5631(%rip),%rcx
2e55(5): mov $0xc,%edx
2e5a(5): mov $0x1,%esi
2e5f(3): mov %rax,%r13
2e62(2): xor %eax,%eax
2e64(3): mov %r15,%rdi
2e67(5): call 0xffffed49(%rip)
2e6c(8): mov 0x154(%r12),%edi
2e74(5): call 0xfffff4cc(%rip)
2e79(1): push %rbx
2e7a(5): lea 0x8(%r12),%r8
2e7f(2): push %r13
2e81(7): lea 0x63d9(%rip),%rsi
2e88(2): push %r15
2e8a(1): push %rbx
2e8b(3): mov %rax,%r9
2e8e(5): mov $0x20,%ecx
2e93(5): mov $0x20,%edx
2e98(3): or $0xff,%edi
2e9b(5): call 0xfffff1b5(%rip)
2ea0(4): add $0x20,%rsp
2ea4(3): mov %r13,%rdi
2ea7(5): call 0xffffe969(%rip)
2eac(5): jmp 0xfffffc2c(%rip)
2eb1(3): mov %r12,%rdi
2eb4(5): call 0xfffff41c(%rip)
2eb9(5): movsxd 0x4(%r12),%r8
2ebe(5): mov 0x8(%rsp),%rdi
2ec3(7): lea 0x55bc(%rip),%rcx
2eca(5): mov $0xc,%edx
2ecf(5): mov $0x1,%esi
2ed4(3): mov %rax,%r13
2ed7(2): xor %eax,%eax
2ed9(5): call 0xffffecd7(%rip)
2ede(8): mov 0x154(%r12),%edi
2ee6(5): call 0xfffff45a(%rip)
2eeb(7): lea 0x5666(%rip),%rsi
2ef2(3): mov %rax,%r15
2ef5(5): mov $0x5,%edx
2efa(2): xor %edi,%edi
2efc(5): call 0xffffe9f4(%rip)
2f01(1): push %rbx
2f02(3): mov %r15,%r9
2f05(2): push %r13
2f07(5): lea 0x8(%r12),%r8
2f0c(4): push 0x18(%rsp)
2f10(5): mov $0x20,%ecx
2f15(1): push %rbx
2f16(5): mov $0x20,%edx
2f1b(3): mov %rax,%rsi
2f1e(5): jmp 0xffffff7a(%rip)
2f23(3): mov %r12,%rdi
2f26(5): call 0xfffff3aa(%rip)
2f2b(5): movsxd 0x4(%r12),%r8
2f30(5): mov 0x8(%rsp),%rdi
2f35(7): lea 0x554a(%rip),%rcx
2f3c(3): mov %rax,%r13
2f3f(5): mov $0xc,%edx
2f44(2): xor %eax,%eax
2f46(5): mov $0x1,%esi
2f4b(5): call 0xffffec65(%rip)
2f50(8): cmp $0x0,0x208188(%rip)
2f58(6): jz 0x147(%rip)
2f5e(9): movsx 0x14e(%r12),%r9d
2f67(7): lea 0x55f6(%rip),%rsi
2f6e(2): xor %edi,%edi
2f70(5): mov $0x5,%edx
2f75(5): mov %r9d,0x18(%rsp)
2f7a(5): call 0xffffe976(%rip)
2f7f(3): mov %rax,%r15
2f82(9): movsx 0x14c(%r12),%eax
2f8b(7): lea 0x55cc(%rip),%rsi
2f92(2): xor %edi,%edi
2f94(5): mov $0x5,%edx
2f99(4): mov %eax,0x10(%rsp)
2f9d(5): call 0xffffe953(%rip)
2fa2(5): mov 0x18(%rsp),%r9d
2fa7(7): mov 0x208132(%rip),%rdi
2fae(7): lea 0x55b5(%rip),%rcx
2fb5(3): mov %rax,%r8
2fb8(4): or $0xffffffff,%rdx
2fbc(5): mov $0x1,%esi
2fc1(2): xor %eax,%eax
2fc3(2): push %r9
2fc5(2): push %r15
2fc7(5): mov 0x20(%rsp),%r9d
2fcc(5): call 0xffffebe4(%rip)
2fd1(7): mov 0x208108(%rip),%r15
2fd8(8): mov 0x154(%r12),%edi
2fe0(5): call 0xfffff360(%rip)
2fe5(2): push %r15
2fe7(5): lea 0x8(%r12),%r8
2fec(2): push %r13
2fee(7): lea 0x626c(%rip),%rsi
2ff5(4): push 0x28(%rsp)
2ff9(1): push %rbx
2ffa(3): or $0xff,%edi
2ffd(3): mov %rax,%r9
3000(5): mov $0x20,%ecx
3005(5): mov $0x20,%edx
300a(5): call 0xfffff046(%rip)
300f(4): add $0x30,%rsp
3013(3): mov %r13,%rdi
3016(5): call 0xffffe7fa(%rip)
301b(5): jmp 0xfffffabd(%rip)
3020(4): mov (%rsp),%rsi
3024(3): mov %r12,%rdi
3027(5): call 0xfffff399(%rip)
302c(5): jmp 0xfffffaac(%rip)
3031(7): lea 0x54ec(%rip),%rsi
3038(5): mov $0x5,%edx
303d(2): xor %edi,%edi
303f(5): call 0xffffe8b1(%rip)
3044(4): or $0xffffffff,%rcx
3048(3): mov %rax,%rdi
304b(2): xor %eax,%eax
304d(2): REPNZ scasb rdi(%es,10),%al
304f(3): mov %rcx,%rax
3052(3): not %rax
3055(4): lea 0x2(%rax),%rdi
3059(5): call 0x2b17(%rip)
305e(7): mov %rax,0x20808b(%rip)
3065(5): jmp 0xfffffb8a(%rip)
306a(7): lea 0x54c3(%rip),%rsi
3071(5): mov $0x5,%edx
3076(2): xor %edi,%edi
3078(5): call 0xffffe878(%rip)
307d(4): or $0xffffffff,%rcx
3081(3): mov %rax,%rdi
3084(2): xor %eax,%eax
3086(2): REPNZ scasb rdi(%es,10),%al
3088(3): neg %rcx
308b(3): mov %rcx,%rdi
308e(5): call 0x2ae2(%rip)
3093(7): mov %rax,0x20804e(%rip)
309a(5): jmp 0xfffffb9b(%rip)
309f(7): lea 0x54b8(%rip),%rsi
30a6(5): mov $0x5,%edx
30ab(2): xor %edi,%edi
30ad(3): xor %r15d,%r15d
30b0(5): call 0xffffe840(%rip)
30b5(4): or $0xffffffff,%r8
30b9(3): mov %rax,%rdi
30bc(3): mov %r15d,%eax
30bf(3): mov %r8,%rcx
30c2(5): mov %r8,0x18(%rsp)
30c7(7): lea 0x5496(%rip),%rsi
30ce(2): REPNZ scasb rdi(%es,10),%al
30d0(5): mov $0x5,%edx
30d5(2): xor %edi,%edi
30d7(3): not %rcx
30da(4): lea 0x0(%rcx,%r8,1),%rax
30de(5): mov %rax,0x10(%rsp)
30e3(5): call 0xffffe80d(%rip)
30e8(5): mov 0x18(%rsp),%r8
30ed(3): mov %rax,%rdi
30f0(3): mov %r15d,%eax
30f3(3): mov %r8,%rcx
30f6(2): REPNZ scasb rdi(%es,10),%al
30f8(5): mov 0x10(%rsp),%rax
30fd(3): not %rcx
3100(5): lea 0xd(%rax,%rcx,1),%rdi
3105(5): call 0x2a6b(%rip)
310a(7): mov %rax,0x207fcf(%rip)
3111(5): jmp 0xfffffe4d(%rip)
3116(3): mov %rbx,%rdx
3119(5): mov $0x3,%esi
311e(2): xor %edi,%edi
3120(5): call 0x2240(%rip)
3125(3): mov %rax,%rbx
3128(5): call 0xffffe718(%rip)
312d(2): mov (%rax),%esi
312f(7): lea 0x5bab(%rip),%rdx
3136(3): mov %rbx,%rcx
3139(5): mov $0x1,%edi
313e(2): xor %eax,%eax
3140(5): call 0xffffe9b0(%rip)
3145(5): call 0xffffe7db(%rip)

"usage" :
3150(2): push %r13
3152(2): push %r12
3154(5): mov $0x5,%edx
3159(1): push %rbp
315a(1): push %rbx
315b(2): mov %edi,%ebp
315d(7): sub $0x88,%rsp
3164(7): mov 0x20803d(%rip),%rbx
316b(9): mov $0x28,%rax
3174(5): mov %rax,0x78(%rsp)
3179(2): xor %eax,%eax
317b(2): test %edi,%edi
317d(2): jz 0x30(%rip)
317f(7): lea 0x55ca(%rip),%rsi
3186(2): xor %edi,%edi
3188(5): call 0xffffe768(%rip)
318d(7): mov 0x207f2c(%rip),%rdi
3194(3): mov %rax,%rdx
3197(3): mov %rbx,%rcx
319a(5): mov $0x1,%esi
319f(2): xor %eax,%eax
31a1(5): call 0xffffe99f(%rip)
31a6(2): mov %ebp,%edi
31a8(5): call 0xffffe978(%rip)
31ad(7): lea 0x55c4(%rip),%rsi
31b4(2): xor %edi,%edi
31b6(5): call 0xffffe73a(%rip)
31bb(3): mov %rbx,%rdx
31be(3): mov %rax,%rsi
31c1(5): mov $0x1,%edi
31c6(2): xor %eax,%eax
31c8(5): call 0xffffe8f8(%rip)
31cd(7): mov 0x207ed4(%rip),%rbx
31d4(7): lea 0x55cd(%rip),%rsi
31db(5): mov $0x5,%edx
31e0(2): xor %edi,%edi
31e2(5): call 0xffffe70e(%rip)
31e7(3): mov %rbx,%rsi
31ea(3): mov %rax,%rdi
31ed(5): call 0xffffe7e3(%rip)
31f2(7): mov 0x207eaf(%rip),%rbx
31f9(7): lea 0x55e8(%rip),%rsi
3200(5): mov $0x5,%edx
3205(2): xor %edi,%edi
3207(5): call 0xffffe6e9(%rip)
320c(3): mov %rbx,%rsi
320f(3): mov %rax,%rdi
3212(5): call 0xffffe7be(%rip)
3217(7): mov 0x207e8a(%rip),%rbx
321e(7): lea 0x568b(%rip),%rsi
3225(5): mov $0x5,%edx
322a(2): xor %edi,%edi
322c(5): call 0xffffe6c4(%rip)
3231(3): mov %rbx,%rsi
3234(3): mov %rax,%rdi
3237(5): call 0xffffe799(%rip)
323c(7): mov 0x207e65(%rip),%rbx
3243(7): lea 0x569e(%rip),%rsi
324a(5): mov $0x5,%edx
324f(2): xor %edi,%edi
3251(5): call 0xffffe69f(%rip)
3256(3): mov %rbx,%rsi
3259(3): mov %rax,%rdi
325c(5): call 0xffffe774(%rip)
3261(7): mov 0x207e40(%rip),%rbx
3268(7): lea 0x5739(%rip),%rsi
326f(5): mov $0x5,%edx
3274(2): xor %edi,%edi
3276(5): call 0xffffe67a(%rip)
327b(3): mov %rbx,%rsi
327e(3): mov %rax,%rdi
3281(5): call 0xffffe74f(%rip)
3286(7): mov 0x207e1b(%rip),%rbx
328d(7): lea 0x57f4(%rip),%rsi
3294(5): mov $0x5,%edx
3299(2): xor %edi,%edi
329b(5): call 0xffffe655(%rip)
32a0(3): mov %rbx,%rsi
32a3(3): mov %rax,%rdi
32a6(5): call 0xffffe72a(%rip)
32ab(7): mov 0x207df6(%rip),%rbx
32b2(7): lea 0x5877(%rip),%rsi
32b9(5): mov $0x5,%edx
32be(2): xor %edi,%edi
32c0(5): call 0xffffe630(%rip)
32c5(3): mov %rbx,%rsi
32c8(3): mov %rax,%rdi
32cb(5): call 0xffffe705(%rip)
32d0(7): mov 0x207dd1(%rip),%rbx
32d7(7): lea 0x5882(%rip),%rsi
32de(5): mov $0x5,%edx
32e3(2): xor %edi,%edi
32e5(5): call 0xffffe60b(%rip)
32ea(3): mov %rbx,%rsi
32ed(3): mov %rax,%rdi
32f0(7): lea 0x527d(%rip),%rbx
32f7(5): call 0xffffe6d9(%rip)
32fc(7): lea 0x5895(%rip),%rsi
3303(5): mov $0x5,%edx
3308(2): xor %edi,%edi
330a(5): call 0xffffe5e6(%rip)
330f(7): lea 0x5262(%rip),%rcx
3316(7): lea 0x5269(%rip),%rdx
331d(3): mov %rax,%rsi
3320(5): mov $0x1,%edi
3325(2): xor %eax,%eax
3327(5): call 0xffffe799(%rip)
332c(7): lea 0x5261(%rip),%rax
3333(7): lea 0x529b(%rip),%rcx
333a(9): mov $0x0,0x60(%rsp)
3343(9): mov $0x0,0x68(%rsp)
334c(3): mov %rsp,%rdx
334f(4): mov %rax,(%rsp)
3353(7): lea 0x523c(%rip),%rax
335a(5): mov %rcx,0x30(%rsp)
335f(7): lea 0x5279(%rip),%rcx
3366(5): mov %rax,0x8(%rsp)
336b(7): lea 0x529c(%rip),%rax
3372(5): mov %rcx,0x40(%rsp)
3377(7): lea 0x526b(%rip),%rcx
337e(5): mov %rax,0x10(%rsp)
3383(7): lea 0x521c(%rip),%rax
338a(5): mov %rcx,0x50(%rsp)
338f(5): mov %rax,0x18(%rsp)
3394(7): lea 0x5221(%rip),%rax
339b(5): mov %rax,0x20(%rsp)
33a0(7): lea 0x521f(%rip),%rax
33a7(5): mov %rax,0x28(%rsp)
33ac(5): mov %rax,0x38(%rsp)
33b1(5): mov %rax,0x48(%rsp)
33b6(5): mov %rax,0x58(%rsp)
33bb(5): nop 0x0(%rax,%rax,1)
33c0(4): add $0x10,%rdx
33c4(3): mov (%rdx),%rdi
33c7(3): test %rdi,%rdi
33ca(2): jz 0x15(%rip)
33cc(5): mov $0x4,%ecx
33d1(3): mov %rbx,%rsi
33d4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
33d6(3): setnbe %al
33d9(2): sbb $0x0,%al
33db(2): test %al,%al
33dd(2): jnz 0xffffffe3(%rip)
33df(4): mov 0x8(%rdx),%r12
33e3(2): xor %edi,%edi
33e5(5): mov $0x5,%edx
33ea(7): lea 0x5202(%rip),%rsi
33f1(3): test %r12,%r12
33f4(6): jz 0xc7(%rip)
33fa(5): call 0xffffe4f6(%rip)
33ff(7): lea 0x5812(%rip),%rcx
3406(7): lea 0x51fd(%rip),%rdx
340d(3): mov %rax,%rsi
3410(5): mov $0x1,%edi
3415(2): xor %eax,%eax
3417(5): call 0xffffe6a9(%rip)
341c(2): xor %esi,%esi
341e(5): mov $0x5,%edi
3423(5): call 0xffffe68d(%rip)
3428(3): test %rax,%rax
342b(2): jz 0x1e(%rip)
342d(7): lea 0x51e4(%rip),%rsi
3434(5): mov $0x3,%edx
3439(3): mov %rax,%rdi
343c(5): call 0xffffe424(%rip)
3441(2): test %eax,%eax
3443(6): jnz 0x10d(%rip)
3449(7): lea 0x51cc(%rip),%rsi
3450(2): xor %edi,%edi
3452(5): mov $0x5,%edx
3457(5): call 0xffffe499(%rip)
345c(7): lea 0x5111(%rip),%rcx
3463(7): lea 0x57ae(%rip),%rdx
346a(3): mov %rax,%rsi
346d(5): mov $0x1,%edi
3472(2): xor %eax,%eax
3474(5): call 0xffffe64c(%rip)
3479(3): cmp %rbx,%r12
347c(7): lea 0x512d(%rip),%rcx
3483(7): lea 0x5dd7(%rip),%rbx
348a(4): cmove %rcx,%rbx
348e(7): lea 0x57f3(%rip),%rsi
3495(2): xor %edi,%edi
3497(5): mov $0x5,%edx
349c(5): call 0xffffe454(%rip)
34a1(3): mov %rbx,%rcx
34a4(3): mov %rax,%rsi
34a7(3): mov %r12,%rdx
34aa(5): mov $0x1,%edi
34af(2): xor %eax,%eax
34b1(5): call 0xffffe60f(%rip)
34b6(5): jmp 0xfffffcf0(%rip)
34bb(5): call 0xffffe435(%rip)
34c0(7): lea 0x5751(%rip),%rcx
34c7(7): lea 0x513c(%rip),%rdx
34ce(3): mov %rax,%rsi
34d1(5): mov $0x1,%edi
34d6(2): xor %eax,%eax
34d8(5): call 0xffffe5e8(%rip)
34dd(2): xor %esi,%esi
34df(5): mov $0x5,%edi
34e4(5): call 0xffffe5cc(%rip)
34e9(3): test %rax,%rax
34ec(2): jz 0x1a(%rip)
34ee(7): lea 0x5123(%rip),%rsi
34f5(5): mov $0x3,%edx
34fa(3): mov %rax,%rdi
34fd(5): call 0xffffe363(%rip)
3502(2): test %eax,%eax
3504(2): jnz 0x45(%rip)
3506(7): lea 0x510f(%rip),%rsi
350d(5): mov $0x5,%edx
3512(2): xor %edi,%edi
3514(7): lea 0x5059(%rip),%r12
351b(7): lea 0x508e(%rip),%rbx
3522(5): call 0xffffe3ce(%rip)
3527(7): lea 0x5046(%rip),%rcx
352e(7): lea 0x56e3(%rip),%rdx
3535(3): mov %rax,%rsi
3538(5): mov $0x1,%edi
353d(2): xor %eax,%eax
353f(5): call 0xffffe581(%rip)
3544(5): jmp 0xffffff4a(%rip)
3549(7): lea 0x5024(%rip),%r12
3550(7): mov 0x207b51(%rip),%r13
3557(7): lea 0x56e2(%rip),%rsi
355e(2): xor %edi,%edi
3560(5): mov $0x5,%edx
3565(5): call 0xffffe38b(%rip)
356a(3): mov %r13,%rsi
356d(3): mov %rax,%rdi
3570(5): call 0xffffe460(%rip)
3575(5): jmp 0xfffffed4(%rip)

"canon_host_r" :
3580(2): push %r12
3582(1): push %rbp
3583(7): lea 0x207bd6(%rip),%rdx
358a(1): push %rbx
358b(3): mov %rsi,%rbx
358e(2): xor %esi,%esi
3590(3): mov %rdi,%rbp
3593(4): sub $0x10,%rsp
3597(a): mov $0x2,0x207bbf(%rip)
35a1(3): mov %rsp,%rcx
35a4(8): mov $0x0,(%rsp)
35ac(9): mov $0x28,%rax
35b5(5): mov %rax,0x8(%rsp)
35ba(2): xor %eax,%eax
35bc(5): call 0xffffe594(%rip)
35c1(2): test %eax,%eax
35c3(2): jnz 0x55(%rip)
35c5(4): mov (%rsp),%r12
35c9(5): mov 0x20(%r12),%rdi
35ce(3): test %rdi,%rdi
35d1(4): cmove %rbp,%rdi
35d5(5): call 0xffffe58b(%rip)
35da(3): test %rax,%rax
35dd(3): mov %rax,%rbp
35e0(2): jnz 0xd(%rip)
35e2(3): test %rbx,%rbx
35e5(2): jz 0x8(%rip)
35e7(6): mov $0xfffffff6,(%rbx)
35ed(3): mov %r12,%rdi
35f0(5): call 0xffffe5b0(%rip)
35f5(5): mov 0x8(%rsp),%rdx
35fa(9): xor $0x28,%rdx
3603(3): mov %rbp,%rax
3606(2): jnz 0x1d(%rip)
3608(4): add $0x10,%rsp
360c(1): pop %rbx
360d(1): pop %rbp
360e(2): pop %r12
3610(1): ret near (%rsp)
3611(7): nop 0x0(%rax)
3618(2): xor %ebp,%ebp
361a(3): test %rbx,%rbx
361d(2): jz 0xffffffd8(%rip)
361f(2): mov %eax,(%rbx)
3621(2): jmp 0xffffffd4(%rip)
3623(5): call 0xffffe2fd(%rip)

"canon_host" :
3630(7): lea 0x207b59(%rip),%rsi
3637(5): jmp 0xffffff49(%rip)

"ch_strerror" :
3640(6): mov 0x207b4a(%rip),%edi
3646(5): jmp 0xffffe31a(%rip)

"close_stdout_set_file_name" :
3650(7): mov %rdi,0x207b49(%rip)
3657(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3660(7): mov %dil,0x207b31(%rip)
3667(1): ret near (%rsp)

"close_stdout" :
3670(1): push %rbp
3671(1): push %rbx
3672(4): sub $0x8,%rsp
3676(7): mov 0x207a2b(%rip),%rdi
367d(5): call 0x2b43(%rip)
3682(2): test %eax,%eax
3684(2): jz 0x18(%rip)
3686(5): call 0xffffe1ba(%rip)
368b(7): cmp $0x0,0x207b06(%rip)
3692(3): mov %rax,%rbx
3695(2): jz 0x1e(%rip)
3697(3): cmp $0x20,(%rax)
369a(2): jnz 0x19(%rip)
369c(7): mov 0x207a1d(%rip),%rdi
36a3(5): call 0x2b1d(%rip)
36a8(2): test %eax,%eax
36aa(2): jnz 0x48(%rip)
36ac(4): add $0x8,%rsp
36b0(1): pop %rbx
36b1(1): pop %rbp
36b2(1): ret near (%rsp)
36b3(7): lea 0x5617(%rip),%rsi
36ba(2): xor %edi,%edi
36bc(5): mov $0x5,%edx
36c1(5): call 0xffffe22f(%rip)
36c6(7): mov 0x207ad3(%rip),%rdi
36cd(3): mov %rax,%rbp
36d0(3): test %rdi,%rdi
36d3(2): jz 0x2a(%rip)
36d5(5): call 0x1c5b(%rip)
36da(2): mov (%rbx),%esi
36dc(7): lea 0x55fa(%rip),%rdx
36e3(3): mov %rax,%rcx
36e6(3): mov %rbp,%r8
36e9(2): xor %edi,%edi
36eb(2): xor %eax,%eax
36ed(5): call 0xffffe403(%rip)
36f2(6): mov 0x207930(%rip),%edi
36f8(5): call 0xffffe178(%rip)
36fd(2): mov (%rbx),%esi
36ff(7): lea 0x55db(%rip),%rdx
3706(3): mov %rax,%rcx
3709(2): xor %edi,%edi
370b(2): xor %eax,%eax
370d(5): call 0xffffe3e3(%rip)
3712(2): jmp 0xffffffe0(%rip)

"hard_locale" :
3720(4): sub $0x8,%rsp
3724(2): xor %esi,%esi
3726(5): call 0xffffe38a(%rip)
372b(3): mov %rax,%rdx
372e(5): mov $0x1,%eax
3733(3): test %rdx,%rdx
3736(2): jz 0x1f(%rip)
3738(7): lea 0x55a5(%rip),%rdi
373f(5): mov $0x2,%ecx
3744(3): mov %rdx,%rsi
3747(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3749(3): setnbe %cl
374c(3): sbb $0x0,%cl
374f(2): xor %eax,%eax
3751(2): test %cl,%cl
3753(2): jnz 0xd(%rip)
3755(4): add $0x8,%rsp
3759(1): ret near (%rsp)
375a(6): nop 0x0(%rax,%rax,1)
3760(7): lea 0x557f(%rip),%rdi
3767(5): mov $0x6,%ecx
376c(3): mov %rdx,%rsi
376f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3771(3): setnbe %al
3774(2): sbb $0x0,%al
3776(2): test %al,%al
3778(3): setnz %al
377b(4): add $0x8,%rsp
377f(1): ret near (%rsp)

"imaxtostr" :
3780(3): test %rdi,%rdi
3783(4): lea 0x14(%rsi),%rcx
3787(4): mov $0x0,0x14(%rsi)
378b(a): mov $0x7378697629483820647,%r9
3795(a): mov $0x-3689348814741910323,%rsi
379f(6): mov $0x30,%r8d
37a5(2): js 0x3e(%rip)
37a7(9): nop 0x0(%rax,%rax,1)
37b0(3): mov %rdi,%rax
37b3(4): sub $0x1,%rcx
37b7(3): mul %rax,%rsi,%rdx
37ba(4): shr $0x3,%rdx
37be(4): lea 0x0(%rdx,%rdx,4),%rax
37c2(3): add %rax,%rax
37c5(3): sub %rax,%rdi
37c8(3): add $0x30,%edi
37cb(3): test %rdx,%rdx
37ce(3): mov %dil,(%rcx)
37d1(3): mov %rdx,%rdi
37d4(2): jnz 0xffffffdc(%rip)
37d6(3): mov %rcx,%rax
37d9(1): ret near (%rsp)
37da(6): nop 0x0(%rax,%rax,1)
37e0(3): mov %rsi,%rcx
37e3(3): mov %rdi,%rax
37e6(4): lea 0xffffffff(%rcx),%rsi
37ea(3): imul %rax,%r9,%rdx
37ed(3): mov %rdi,%rax
37f0(4): sar $0x3f,%rax
37f4(4): sar $0x2,%rdx
37f8(3): sub %rax,%rdx
37fb(4): lea 0x0(%rdx,%rdx,4),%rax
37ff(4): lea 0x0(%r8,%rax,2),%eax
3803(2): sub %edi,%eax
3805(3): test %rdx,%rdx
3808(3): mov %rdx,%rdi
380b(3): mov %al,0xffffffff(%rcx)
380e(2): jnz 0xffffffd2(%rip)
3810(4): sub $0x2,%rcx
3814(4): mov $0x2d,0xffffffff(%rsi)
3818(3): mov %rcx,%rax
381b(1): ret near (%rsp)

"set_program_name" :
3820(3): test %rdi,%rdi
3823(1): push %rbx
3824(2): jz 0x79(%rip)
3826(5): mov $0x2f,%esi
382b(3): mov %rdi,%rbx
382e(5): call 0xffffe142(%rip)
3833(3): test %rax,%rax
3836(2): jz 0x57(%rip)
3838(4): lea 0x1(%rax),%r8
383c(3): mov %r8,%rdx
383f(3): sub %rbx,%rdx
3842(4): cmp $0x6,%rdx
3846(2): jle 0x47(%rip)
3848(4): lea 0xfffffffa(%rax),%rsi
384c(7): lea 0x54d5(%rip),%rdi
3853(5): mov $0x7,%ecx
3858(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
385a(3): setnbe %dl
385d(3): sbb $0x0,%dl
3860(2): test %dl,%dl
3862(2): jnz 0x2b(%rip)
3864(7): lea 0x54c5(%rip),%rdi
386b(5): mov $0x3,%ecx
3870(3): mov %r8,%rsi
3873(3): mov %r8,%rbx
3876(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3878(3): setnbe %dl
387b(3): sbb $0x0,%dl
387e(2): test %dl,%dl
3880(2): jnz 0xd(%rip)
3882(4): lea 0x4(%rax),%rbx
3886(7): mov %rbx,0x207813(%rip)
388d(7): mov %rbx,0x207914(%rip)
3894(7): mov %rbx,0x20781d(%rip)
389b(1): pop %rbx
389c(1): ret near (%rsp)
389d(7): mov 0x20781c(%rip),%rcx
38a4(7): lea 0x5445(%rip),%rdi
38ab(5): mov $0x37,%edx
38b0(5): mov $0x1,%esi
38b5(5): call 0xffffe27b(%rip)
38ba(5): call 0xffffdf76(%rip)

"gettext_quote.part.1" :
38c0(1): push %rbp
38c1(1): push %rbx
38c2(3): mov %rdi,%rbp
38c5(2): mov %esi,%ebx
38c7(4): sub $0x8,%rsp
38cb(5): call 0x2975(%rip)
38d0(3): movzx (%rax),%edx
38d3(3): and $0xdf,%edx
38d6(3): cmp $0x55,%dl
38d9(2): jz 0x77(%rip)
38db(3): cmp $0x47,%dl
38de(2): jz 0x22(%rip)
38e0(7): lea 0x545c(%rip),%rax
38e7(7): lea 0x5457(%rip),%rdx
38ee(3): cmp $0x9,%ebx
38f1(4): cmovne %rdx,%rax
38f5(4): add $0x8,%rsp
38f9(1): pop %rbx
38fa(1): pop %rbp
38fb(1): ret near (%rsp)
38fc(4): nop 0x0(%rax)
3900(4): movzx 0x1(%rax),%edx
3904(3): and $0xdf,%edx
3907(3): cmp $0x42,%dl
390a(2): jnz 0xffffffd6(%rip)
390c(4): cmp $0x31,0x2(%rax)
3910(2): jnz 0xffffffd0(%rip)
3912(4): cmp $0x38,0x3(%rax)
3916(2): jnz 0xffffffca(%rip)
3918(4): cmp $0x30,0x4(%rax)
391c(2): jnz 0xffffffc4(%rip)
391e(4): cmp $0x33,0x5(%rax)
3922(2): jnz 0xffffffbe(%rip)
3924(4): cmp $0x30,0x6(%rax)
3928(2): jnz 0xffffffb8(%rip)
392a(4): cmp $0x0,0x7(%rax)
392e(2): jnz 0xffffffb2(%rip)
3930(4): cmp $0x60,0x0(%rbp)
3934(7): lea 0x5401(%rip),%rax
393b(7): lea 0x53fe(%rip),%rdx
3942(4): cmovne %rdx,%rax
3946(4): add $0x8,%rsp
394a(1): pop %rbx
394b(1): pop %rbp
394c(1): ret near (%rsp)
394d(3): nop (%rax)
3950(4): movzx 0x1(%rax),%edx
3954(3): and $0xdf,%edx
3957(3): cmp $0x54,%dl
395a(2): jnz 0xffffff86(%rip)
395c(4): movzx 0x2(%rax),%edx
3960(3): and $0xdf,%edx
3963(3): cmp $0x46,%dl
3966(6): jnz 0xffffff7a(%rip)
396c(4): cmp $0x2d,0x3(%rax)
3970(6): jnz 0xffffff70(%rip)
3976(4): cmp $0x38,0x4(%rax)
397a(6): jnz 0xffffff66(%rip)
3980(4): cmp $0x0,0x5(%rax)
3984(6): jnz 0xffffff5c(%rip)
398a(4): cmp $0x60,0x0(%rbp)
398e(7): lea 0x539f(%rip),%rax
3995(7): lea 0x539c(%rip),%rdx
399c(4): cmovne %rdx,%rax
39a0(4): add $0x8,%rsp
39a4(1): pop %rbx
39a5(1): pop %rbp
39a6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
39b0(2): push %r15
39b2(2): push %r14
39b4(3): mov %r8d,%r15d
39b7(2): push %r13
39b9(2): push %r12
39bb(3): mov %rdi,%r14
39be(1): push %rbp
39bf(1): push %rbx
39c0(3): mov %r9d,%ebx
39c3(3): mov %rsi,%r13
39c6(3): mov %rcx,%rbp
39c9(3): and $0x2,%ebx
39cc(7): sub $0xb8,%rsp
39d3(8): mov 0xf0(%rsp),%rax
39db(5): mov %rdx,0x10(%rsp)
39e0(5): mov %r8d,0x8(%rsp)
39e5(5): mov %r9d,0x78(%rsp)
39ea(5): mov %rax,0x20(%rsp)
39ef(8): mov 0xf8(%rsp),%rax
39f7(5): mov %rax,0x68(%rsp)
39fc(8): mov 0x100(%rsp),%rax
3a04(5): mov %rax,0x60(%rsp)
3a09(9): mov $0x28,%rax
3a12(8): mov %rax,0xa8(%rsp)
3a1a(2): xor %eax,%eax
3a1c(5): call 0xffffdee4(%rip)
3a21(4): cmp $0xa,%r15d
3a25(5): mov %rax,0x58(%rsp)
3a2a(6): jnbe 0x11b5(%rip)
3a30(7): lea 0x5369(%rip),%rcx
3a37(3): mov %r15d,%edx
3a3a(4): movsxd 0x0(%rcx,%rdx,4),%rax
3a3e(3): add %rcx,%rax
3a41(2): jmp %rax
3a43(5): mov $0x1,0xe(%rsp)
3a48(5): mov $0x0,0x7c(%rsp)
3a4d(3): xor %r12d,%r12d
3a50(9): mov $0x0,0x50(%rsp)
3a59(5): mov $0x1,0xf(%rsp)
3a5e(5): mov $0x0,0xd(%rsp)
3a63(7): lea 0x52db(%rip),%rax
3a6a(9): mov $0x1,0x18(%rsp)
3a73(3): xor %r15d,%r15d
3a76(8): mov $0x2,0x8(%rsp)
3a7e(5): mov %rax,0x48(%rsp)
3a83(3): xor %r11d,%r11d
3a86(3): mov %rbp,%rax
3a89(3): mov %r12d,%r8d
3a8c(3): mov %r11,%rbp
3a8f(3): mov %rax,%r11
3a92(6): nop 0x0(%rax,%rax,1)
3a98(3): cmp %rbp,%r11
3a9b(4): setnz %r12b
3a9f(4): cmp $0xffffffff,%r11
3aa3(2): jnz 0xf(%rip)
3aa5(5): mov 0x10(%rsp),%rax
3aaa(4): cmp $0x0,0x0(%rax,%rbp,1)
3aae(4): setnz %r12b
3ab2(3): test %r12b,%r12b
3ab5(6): jz 0x65b(%rip)
3abb(5): cmp $0x2,0x8(%rsp)
3ac0(5): mov 0x10(%rsp),%rdi
3ac5(4): lea 0x0(%rdi,%rbp,1),%r9
3ac9(3): setnz %al
3acc(4): and 0xd(%rsp),%al
3ad0(3): mov %eax,%r10d
3ad3(6): jz 0xad(%rip)
3ad9(5): mov 0x18(%rsp),%rax
3ade(3): test %rax,%rax
3ae1(6): jz 0x42f(%rip)
3ae7(4): cmp $0xffffffff,%r11
3aeb(5): lea 0x0(%rbp,%rax,1),%rbx
3af0(2): jnz 0x30(%rip)
3af2(4): cmp $0x1,%rax
3af6(2): jbe 0x2a(%rip)
3af8(5): mov %r8b,0x38(%rsp)
3afd(5): mov %r10b,0x30(%rsp)
3b02(5): mov %r9,0x28(%rsp)
3b07(5): call 0xffffde09(%rip)
3b0c(6): movzx 0x38(%rsp),%r8d
3b12(6): movzx 0x30(%rsp),%r10d
3b18(3): mov %rax,%r11
3b1b(5): mov 0x28(%rsp),%r9
3b20(3): cmp %r11,%rbx
3b23(5): mov %r10b,0x28(%rsp)
3b28(6): jnbe 0x5b8(%rip)
3b2e(5): mov 0x18(%rsp),%rdx
3b33(5): mov 0x48(%rsp),%rsi
3b38(3): mov %r9,%rdi
3b3b(5): mov %r11,0x40(%rsp)
3b40(5): mov %r8b,0x38(%rsp)
3b45(5): mov %r9,0x30(%rsp)
3b4a(5): call 0xffffde76(%rip)
3b4f(2): test %eax,%eax
3b51(5): mov 0x30(%rsp),%r9
3b56(6): movzx 0x38(%rsp),%r8d
3b5c(5): mov 0x40(%rsp),%r11
3b61(6): jnz 0x57f(%rip)
3b67(5): cmp $0x0,0xf(%rsp)
3b6c(6): movzx 0x28(%rsp),%r10d
3b72(6): jnz 0xf83(%rip)
3b78(8): nop 0x0(%rax,%rax,1)
3b80(4): movzx (%r9),%ebx
3b84(3): cmp $0x7e,%bl
3b87(6): jnbe 0x321(%rip)
3b8d(7): lea 0x5238(%rip),%rcx
3b94(3): movzx %bl,%edx
3b97(4): movsxd 0x0(%rcx,%rdx,4),%rax
3b9b(3): add %rcx,%rax
3b9e(2): jmp %rax
3ba0(3): xor %r10d,%r10d
3ba3(4): cmp $0x1,%r11
3ba7(3): setnz %al
3baa(4): cmp $0xffffffff,%r11
3bae(2): jnz 0xe(%rip)
3bb0(5): mov 0x10(%rsp),%rax
3bb5(4): cmp $0x0,0x1(%rax)
3bb9(3): setnz %al
3bbc(5): cmp $0x2,0x8(%rsp)
3bc1(3): setz %dl
3bc4(2): test %al,%al
3bc6(6): jz 0x252(%rip)
3bcc(3): xor %r12d,%r12d
3bcf(2): xor %eax,%eax
3bd1(7): nop 0x0(%rax)
3bd8(5): cmp $0x1,0xd(%rsp)
3bdd(6): jnz 0x115(%rip)
3be3(2): test %dl,%dl
3be5(6): jnz 0x10d(%rip)
3beb(5): mov 0x20(%rsp),%rsi
3bf0(3): test %rsi,%rsi
3bf3(2): jz 0x16(%rip)
3bf5(2): mov %ebx,%edx
3bf7(3): shr $0x5,%dl
3bfa(3): movzx %dl,%edx
3bfd(3): mov 0x0(%rsi,%rdx,4),%edx
3c00(3): bt %ebx,%edx
3c03(6): jb 0x150(%rip)
3c09(3): test %r10b,%r10b
3c0c(6): jnz 0x147(%rip)
3c12(3): xor $0x1,%eax
3c15(4): add $0x1,%rbp
3c19(3): and %r8d,%eax
3c1c(2): test %al,%al
3c1e(2): jz 0x22(%rip)
3c20(3): cmp %r15,%r13
3c23(2): jbe 0x7(%rip)
3c25(5): mov $0x27,0x0(%r14,%r15,1)
3c2a(4): lea 0x1(%r15),%rax
3c2e(3): cmp %rax,%r13
3c31(2): jbe 0x8(%rip)
3c33(6): mov $0x27,0x1(%r14,%r15,1)
3c39(4): add $0x2,%r15
3c3d(3): xor %r8d,%r8d
3c40(3): cmp %r13,%r15
3c43(2): jnb 0x6(%rip)
3c45(4): mov %bl,0x0(%r14,%r15,1)
3c49(5): movzx 0xe(%rsp),%edi
3c4e(4): add $0x1,%r15
3c52(5): mov $0x0,%eax
3c57(3): test %r12b,%r12b
3c5a(3): cmove %eax,%edi
3c5d(5): mov %dil,0xe(%rsp)
3c62(5): jmp 0xfffffe36(%rip)
3c67(9): nop 0x0(%rax,%rax,1)
3c70(3): xor %r10d,%r10d
3c73(4): mov 0x8(%rsp),%eax
3c77(3): cmp $0x2,%eax
3c7a(6): jz 0x5be(%rip)
3c80(3): cmp $0x5,%eax
3c83(6): jz 0x575(%rip)
3c89(3): cmp $0x2,%eax
3c8c(5): mov $0x3f,%ebx
3c91(3): setz %dl
3c94(3): xor %r12d,%r12d
3c97(2): xor %eax,%eax
3c99(5): jmp 0xffffff3f(%rip)
3c9e(2): nop 
3ca0(3): xor %r10d,%r10d
3ca3(5): cmp $0x2,0x8(%rsp)
3ca8(6): jz 0x508(%rip)
3cae(5): mov %r12b,0x7c(%rsp)
3cb3(2): xor %edx,%edx
3cb5(2): xor %eax,%eax
3cb7(5): mov $0x27,%ebx
3cbc(5): jmp 0xffffff1c(%rip)
3cc1(7): nop 0x0(%rax)
3cc8(5): mov $0x9,%edx
3ccd(5): mov $0x74,%ebx
3cd2(5): cmp $0x2,0x8(%rsp)
3cd7(3): setz %al
3cda(4): and 0xf(%rsp),%al
3cde(6): jnz 0x150(%rip)
3ce4(5): cmp $0x0,0xd(%rsp)
3ce9(2): jnz 0x67(%rip)
3ceb(2): mov %edx,%ebx
3ced(3): xor %r12d,%r12d
3cf0(2): xor %eax,%eax
3cf2(5): cmp $0x0,0xf(%rsp)
3cf7(6): jnz 0xfffffef4(%rip)
3cfd(5): jmp 0xffffff0c(%rip)
3d02(6): nop 0x0(%rax,%rax,1)
3d08(5): mov $0x8,%edx
3d0d(5): mov $0x62,%ebx
3d12(2): jmp 0xffffffd2(%rip)
3d14(4): nop 0x0(%rax)
3d18(5): cmp $0x2,0x8(%rsp)
3d1d(6): jz 0x3d3(%rip)
3d23(5): cmp $0x0,0xd(%rsp)
3d28(6): jz 0x218(%rip)
3d2e(5): cmp $0x0,0xf(%rsp)
3d33(6): jz 0x20d(%rip)
3d39(6): cmp $0x0,0x18(%rsp)
3d3f(6): jnz 0x3bc(%rip)
3d45(5): mov $0x5c,%ebx
3d4a(6): nop 0x0(%rax,%rax,1)
3d50(3): xor %r12d,%r12d
3d53(5): cmp $0x2,0x8(%rsp)
3d58(3): setz %dl
3d5b(5): cmp $0x0,0xf(%rsp)
3d60(2): mov %edx,%eax
3d62(6): jnz 0x856(%rip)
3d68(3): mov %r8d,%eax
3d6b(3): xor $0x1,%eax
3d6e(2): and %dl,%al
3d70(2): jz 0x31(%rip)
3d72(3): cmp %r15,%r13
3d75(2): jbe 0x7(%rip)
3d77(5): mov $0x27,0x0(%r14,%r15,1)
3d7c(4): lea 0x1(%r15),%rdx
3d80(3): cmp %rdx,%r13
3d83(2): jbe 0x8(%rip)
3d85(6): mov $0x24,0x1(%r14,%r15,1)
3d8b(4): lea 0x2(%r15),%rdx
3d8f(3): cmp %rdx,%r13
3d92(2): jbe 0x8(%rip)
3d94(6): mov $0x27,0x2(%r14,%r15,1)
3d9a(4): add $0x3,%r15
3d9e(3): mov %eax,%r8d
3da1(3): cmp %r15,%r13
3da4(2): jbe 0x7(%rip)
3da6(5): mov $0x5c,0x0(%r14,%r15,1)
3dab(4): add $0x1,%r15
3daf(4): add $0x1,%rbp
3db3(5): jmp 0xfffffe8d(%rip)
3db8(8): nop 0x0(%rax,%rax,1)
3dc0(5): cmp $0x0,0xd(%rsp)
3dc5(6): jnz 0x1ce(%rip)
3dcb(2): xor %edx,%edx
3dcd(5): test $0x1,0x78(%rsp)
3dd2(6): jz 0xffffff19(%rip)
3dd8(4): add $0x1,%rbp
3ddc(5): jmp 0xfffffcbc(%rip)
3de1(7): nop 0x0(%rax)
3de8(5): cmp $0x2,0x8(%rsp)
3ded(3): setz %dl
3df0(2): xor %eax,%eax
3df2(5): jmp 0xfffffde6(%rip)
3df7(9): nop 0x0(%rax,%rax,1)
3e00(5): mov $0x7,%edx
3e05(5): mov $0x61,%ebx
3e0a(5): jmp 0xfffffeda(%rip)
3e0f(1): nop 
3e10(5): cmp $0x2,0x8(%rsp)
3e15(3): setz %dl
3e18(3): test %rbp,%rbp
3e1b(6): jnz 0xfffffdb1(%rip)
3e21(5): movzx 0xf(%rsp),%eax
3e26(2): and %dl,%al
3e28(6): jz 0xfffffdb0(%rip)
3e2e(3): mov %r11,%rbp
3e31(8): mov $0x2,0x8(%rsp)
3e39(5): jmp 0x700(%rip)
3e3e(2): nop 
3e40(5): cmp $0x2,0x8(%rsp)
3e45(3): setz %dl
3e48(3): xor %r12d,%r12d
3e4b(2): jmp 0xffffffd6(%rip)
3e4d(3): nop (%rax)
3e50(5): cmp $0x2,0x8(%rsp)
3e55(5): mov $0x20,%ebx
3e5a(3): setz %dl
3e5d(2): jmp 0xffffffc4(%rip)
3e5f(1): nop 
3e60(5): mov $0xd,%edx
3e65(5): mov $0x72,%ebx
3e6a(5): jmp 0xfffffe68(%rip)
3e6f(1): nop 
3e70(5): mov $0xc,%edx
3e75(5): mov $0x66,%ebx
3e7a(5): jmp 0xfffffe6a(%rip)
3e7f(1): nop 
3e80(5): mov $0xb,%edx
3e85(5): mov $0x76,%ebx
3e8a(5): jmp 0xfffffe5a(%rip)
3e8f(1): nop 
3e90(5): mov $0xa,%edx
3e95(5): mov $0x6e,%ebx
3e9a(5): jmp 0xfffffe38(%rip)
3e9f(1): nop 
3ea0(3): xor %r10d,%r10d
3ea3(5): nop 0x0(%rax,%rax,1)
3ea8(6): cmp $0x1,0x58(%rsp)
3eae(6): jnz 0x3aa(%rip)
3eb4(5): mov %r11,0x38(%rsp)
3eb9(5): mov %r8b,0x30(%rsp)
3ebe(5): mov %r10b,0x28(%rsp)
3ec3(5): call 0xffffdccd(%rip)
3ec8(3): mov (%rax),%rcx
3ecb(3): movzx %bl,%edx
3ece(6): movzx 0x28(%rsp),%r10d
3ed4(6): movzx 0x30(%rsp),%r8d
3eda(5): mov 0x38(%rsp),%r11
3edf(5): mov $0x1,%edi
3ee4(4): movzx 0x0(%rcx,%rdx,2),%eax
3ee8(4): and $0x4000,%ax
3eec(4): setnz %r12b
3ef0(3): setz %al
3ef3(4): and 0xd(%rsp),%al
3ef7(2): test %al,%al
3ef9(6): jnz 0x998(%rip)
3eff(5): cmp $0x2,0x8(%rsp)
3f04(3): setz %dl
3f07(5): jmp 0xfffffcd1(%rip)
3f0c(4): nop 0x0(%rax)
3f10(4): movzx (%r9),%ebx
3f14(3): cmp $0x7e,%bl
3f17(2): jnbe 0xffffff89(%rip)
3f19(7): lea 0x50a8(%rip),%rcx
3f20(3): movzx %bl,%edx
3f23(4): movsxd 0x0(%rcx,%rdx,4),%rax
3f27(3): add %rcx,%rax
3f2a(2): jmp %rax
3f2c(4): nop 0x0(%rax)
3f30(3): xor %r10d,%r10d
3f33(5): cmp $0x0,0xd(%rsp)
3f38(6): jnz 0xfffffdf6(%rip)
3f3e(2): nop 
3f40(5): mov $0x5c,%edx
3f45(5): mov $0x5c,%ebx
3f4a(5): jmp 0xfffffd9a(%rip)
3f4f(1): nop 
3f50(5): mov $0xc,%edx
3f55(3): xor %r10d,%r10d
3f58(5): mov $0x66,%ebx
3f5d(5): jmp 0xfffffd87(%rip)
3f62(6): nop 0x0(%rax,%rax,1)
3f68(5): mov $0xa,%edx
3f6d(3): xor %r10d,%r10d
3f70(5): mov $0x6e,%ebx
3f75(5): jmp 0xfffffd5d(%rip)
3f7a(6): nop 0x0(%rax,%rax,1)
3f80(5): mov $0x61,%ebx
3f85(5): jmp 0xfffffdcb(%rip)
3f8a(6): nop 0x0(%rax,%rax,1)
3f90(3): xor %r10d,%r10d
3f93(5): cmp $0x2,0x8(%rsp)
3f98(3): setz %dl
3f9b(5): cmp $0x0,0xf(%rsp)
3fa0(6): jnz 0xb9a(%rip)
3fa6(3): mov %r8d,%eax
3fa9(3): mov %r15,%rcx
3fac(3): xor $0x1,%eax
3faf(2): and %dl,%al
3fb1(2): jz 0x2f(%rip)
3fb3(3): cmp %r15,%r13
3fb6(2): jbe 0x7(%rip)
3fb8(5): mov $0x27,0x0(%r14,%r15,1)
3fbd(4): lea 0x1(%r15),%rcx
3fc1(3): cmp %rcx,%r13
3fc4(2): jbe 0x8(%rip)
3fc6(6): mov $0x24,0x1(%r14,%r15,1)
3fcc(4): lea 0x2(%r15),%rcx
3fd0(3): cmp %rcx,%r13
3fd3(6): jnbe 0x636(%rip)
3fd9(4): lea 0x3(%r15),%rcx
3fdd(3): mov %eax,%r8d
3fe0(3): cmp %rcx,%r13
3fe3(2): jbe 0x7(%rip)
3fe5(5): mov $0x5c,0x0(%r14,%rcx,1)
3fea(5): cmp $0x2,0x8(%rsp)
3fef(4): lea 0x1(%rcx),%r15
3ff3(6): jz 0x606(%rip)
3ff9(4): lea 0x1(%rbp),%rax
3ffd(3): cmp %r11,%rax
4000(2): jnb 0x1b(%rip)
4002(5): mov 0x10(%rsp),%rax
4007(5): movzx 0x1(%rax,%rbp,1),%eax
400c(4): mov %al,0x28(%rsp)
4010(3): sub $0x30,%eax
4013(2): cmp $0x9,%al
4015(6): jbe 0x834(%rip)
401b(3): mov %r12d,%eax
401e(5): mov $0x30,%ebx
4023(3): xor %r12d,%r12d
4026(5): jmp 0xfffffbb2(%rip)
402b(5): nop 0x0(%rax,%rax,1)
4030(5): cmp $0x2,0x8(%rsp)
4035(3): mov %r10d,%r12d
4038(3): setz %dl
403b(3): xor %r10d,%r10d
403e(2): xor %eax,%eax
4040(5): jmp 0xfffffb98(%rip)
4045(3): nop (%rax)
4048(5): cmp $0x2,0x8(%rsp)
404d(3): setz %dl
4050(3): xor %r10d,%r10d
4053(5): jmp 0xfffffdc5(%rip)
4058(8): nop 0x0(%rax,%rax,1)
4060(5): cmp $0x2,0x8(%rsp)
4065(3): setz %dl
4068(3): xor %r10d,%r10d
406b(3): xor %r12d,%r12d
406e(5): jmp 0xfffffdb3(%rip)
4073(5): nop 0x0(%rax,%rax,1)
4078(5): cmp $0x2,0x8(%rsp)
407d(3): mov %r10d,%r12d
4080(5): mov $0x20,%ebx
4085(3): setz %dl
4088(3): xor %r10d,%r10d
408b(5): jmp 0xfffffd96(%rip)
4090(5): mov $0xd,%edx
4095(3): xor %r10d,%r10d
4098(5): mov $0x72,%ebx
409d(5): jmp 0xfffffc35(%rip)
40a2(6): nop 0x0(%rax,%rax,1)
40a8(5): mov $0x76,%ebx
40ad(5): jmp 0xfffffca3(%rip)
40b2(6): nop 0x0(%rax,%rax,1)
40b8(5): mov $0x9,%edx
40bd(3): xor %r10d,%r10d
40c0(5): mov $0x74,%ebx
40c5(5): jmp 0xfffffc0d(%rip)
40ca(6): nop 0x0(%rax,%rax,1)
40d0(5): mov $0x62,%ebx
40d5(5): jmp 0xfffffc7b(%rip)
40da(6): nop 0x0(%rax,%rax,1)
40e0(3): xor %r10d,%r10d
40e3(5): jmp 0xfffffa9d(%rip)
40e8(8): nop 0x0(%rax,%rax,1)
40f0(5): cmp $0x0,0xf(%rsp)
40f5(6): jnz 0x96b(%rip)
40fb(4): add $0x1,%rbp
40ff(3): mov %r8d,%eax
4102(3): xor %r12d,%r12d
4105(5): mov $0x5c,%ebx
410a(5): jmp 0xfffffb12(%rip)
410f(1): nop 
4110(5): cmp $0x2,0x8(%rsp)
4115(5): movzx 0xf(%rsp),%ebx
411a(3): mov %r8d,%r12d
411d(3): mov %r11,%rbp
4120(3): setz %dl
4123(2): mov %ebx,%eax
4125(3): test %r15,%r15
4128(3): setz %cl
412b(2): and %edx,%eax
412d(2): and %cl,%al
412f(6): jnz 0xa67(%rip)
4135(2): mov %ebx,%eax
4137(3): xor $0x1,%eax
413a(2): and %al,%dl
413c(6): jz 0x970(%rip)
4142(5): cmp $0x0,0x7c(%rsp)
4147(6): jz 0x963(%rip)
414d(5): cmp $0x0,0xe(%rsp)
4152(6): jnz 0x9fb(%rip)
4158(3): test %r13,%r13
415b(3): setz %al
415e(6): cmp $0x0,0x50(%rsp)
4164(3): setnz %dl
4167(2): and %dl,%al
4169(6): jz 0xa23(%rip)
416f(5): mov 0x50(%rsp),%r13
4174(7): lea 0x4bca(%rip),%rbx
417b(4): mov $0x27,(%r14)
417f(8): mov $0x2,0x8(%rsp)
4187(6): mov $0x1,%r15d
418d(9): mov $0x1,0x18(%rsp)
4196(5): mov $0x0,0xf(%rsp)
419b(5): mov %rbx,0x48(%rsp)
41a0(4): mov %al,0x7c(%rsp)
41a4(5): jmp 0xfffff8df(%rip)
41a9(7): nop 0x0(%rax)
41b0(5): cmp $0x0,0xf(%rsp)
41b5(6): jnz 0x8ab(%rip)
41bb(3): test %r13,%r13
41be(6): jz 0x402(%rip)
41c4(2): xor %edx,%edx
41c6(6): cmp $0x0,0x50(%rsp)
41cc(6): jnz 0x3f4(%rip)
41d2(5): mov %r13,0x50(%rsp)
41d7(4): add $0x3,%r15
41db(2): xor %eax,%eax
41dd(5): mov %r12b,0x7c(%rsp)
41e2(3): xor %r8d,%r8d
41e5(3): mov %rdx,%r13
41e8(5): mov $0x27,%ebx
41ed(5): jmp 0xfffffa1c(%rip)
41f2(6): nop 0x0(%rax,%rax,1)
41f8(5): test $0x4,0x78(%rsp)
41fd(2): jz 0x23(%rip)
41ff(4): lea 0x2(%rbp),%rcx
4203(3): cmp %r11,%rcx
4206(2): jnb 0x1a(%rip)
4208(5): mov 0x10(%rsp),%rax
420d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4212(6): jz 0x790(%rip)
4218(8): nop 0x0(%rax,%rax,1)
4220(2): xor %edx,%edx
4222(3): xor %r12d,%r12d
4225(2): xor %eax,%eax
4227(5): mov $0x3f,%ebx
422c(5): jmp 0xfffff9ac(%rip)
4231(7): nop 0x0(%rax)
4238(5): cmp $0x0,0xf(%rsp)
423d(6): jnz 0x823(%rip)
4243(3): xor %r12d,%r12d
4246(2): xor %eax,%eax
4248(5): mov $0x3f,%ebx
424d(5): jmp 0xfffff9bc(%rip)
4252(6): nop 0x0(%rax,%rax,1)
4258(8): lea 0xa0(%rsp),%rax
4260(4): cmp $0xffffffff,%r11
4264(c): mov $0x0,0xa0(%rsp)
4270(5): mov %rax,0x28(%rsp)
4275(2): jnz 0x2f(%rip)
4277(5): mov 0x10(%rsp),%rdi
427c(5): mov %r8b,0x40(%rsp)
4281(5): mov %r10b,0x38(%rsp)
4286(5): mov %r9,0x30(%rsp)
428b(5): call 0xffffd685(%rip)
4290(6): movzx 0x40(%rsp),%r8d
4296(6): movzx 0x38(%rsp),%r10d
429c(3): mov %rax,%r11
429f(5): mov 0x30(%rsp),%r9
42a4(8): lea 0x9c(%rsp),%rax
42ac(2): xor %ecx,%ecx
42ae(4): mov %bl,0x7e(%rsp)
42b2(5): mov %r8b,0x7d(%rsp)
42b7(3): mov %rcx,%rbx
42ba(8): mov %r9,0x88(%rsp)
42c2(5): mov %rax,0x38(%rsp)
42c7(5): mov %r10b,0x7f(%rsp)
42cc(8): mov %r15,0x80(%rsp)
42d4(5): mov %r14,0x40(%rsp)
42d9(5): mov %r13,0x70(%rsp)
42de(5): mov %r11,0x30(%rsp)
42e3(5): mov 0x10(%rsp),%rax
42e8(5): lea 0x0(%rbp,%rbx,1),%r14
42ed(5): mov 0x30(%rsp),%rdx
42f2(5): mov 0x28(%rsp),%rcx
42f7(5): mov 0x38(%rsp),%rdi
42fc(4): lea 0x0(%rax,%r14,1),%r13
4300(3): sub %r14,%rdx
4303(3): mov %r13,%rsi
4306(5): call 0x1bba(%rip)
430b(3): test %rax,%rax
430e(3): mov %rax,%r15
4311(2): jz 0x50(%rip)
4313(4): cmp $0xffffffff,%rax
4317(6): jz 0x61e(%rip)
431d(4): cmp $0xfffffffe,%rax
4321(6): jz 0x5a0(%rip)
4327(5): cmp $0x2,0x8(%rsp)
432c(3): setz %al
432f(4): and 0xf(%rsp),%al
4333(6): jnz 0x19d(%rip)
4339(7): mov 0x9c(%rsp),%edi
4340(5): call 0xffffd840(%rip)
4345(5): mov 0x28(%rsp),%rdi
434a(2): test %eax,%eax
434c(5): mov $0x0,%eax
4351(4): cmove %eax,%r12d
4355(3): add %r15,%rbx
4358(5): call 0xffffd818(%rip)
435d(2): test %eax,%eax
435f(2): jz 0xffffff84(%rip)
4361(3): mov %r12d,%edx
4364(3): mov %rbx,%rdi
4367(6): movzx 0x7d(%rsp),%r8d
436d(3): xor $0x1,%edx
4370(5): movzx 0x7e(%rsp),%ebx
4375(6): movzx 0x7f(%rsp),%r10d
437b(4): and 0xd(%rsp),%dl
437f(8): mov 0x80(%rsp),%r15
4387(5): mov 0x40(%rsp),%r14
438c(5): mov 0x70(%rsp),%r13
4391(5): mov 0x30(%rsp),%r11
4396(4): cmp $0x1,%rdi
439a(6): jbe 0x601(%rip)
43a0(3): mov %rdi,%rcx
43a3(2): xor %esi,%esi
43a5(6): movzx 0xf(%rsp),%r9d
43ab(3): add %rbp,%rcx
43ae(5): mov 0x10(%rsp),%rdi
43b3(5): jmp 0xbb(%rip)
43b8(8): nop 0x0(%rax,%rax,1)
43c0(5): cmp $0x2,0x8(%rsp)
43c5(3): setz %al
43c8(3): test %r9b,%r9b
43cb(6): jnz 0x4b5(%rip)
43d1(3): mov %r8d,%esi
43d4(3): xor $0x1,%esi
43d7(3): and %sil,%al
43da(2): jz 0x31(%rip)
43dc(3): cmp %r15,%r13
43df(2): jbe 0x7(%rip)
43e1(5): mov $0x27,0x0(%r14,%r15,1)
43e6(4): lea 0x1(%r15),%rsi
43ea(3): cmp %rsi,%r13
43ed(2): jbe 0x8(%rip)
43ef(6): mov $0x24,0x1(%r14,%r15,1)
43f5(4): lea 0x2(%r15),%rsi
43f9(3): cmp %rsi,%r13
43fc(2): jbe 0x8(%rip)
43fe(6): mov $0x27,0x2(%r14,%r15,1)
4404(4): add $0x3,%r15
4408(3): mov %eax,%r8d
440b(3): cmp %r15,%r13
440e(2): jbe 0x7(%rip)
4410(5): mov $0x5c,0x0(%r14,%r15,1)
4415(4): lea 0x1(%r15),%rax
4419(3): cmp %rax,%r13
441c(2): jbe 0xf(%rip)
441e(2): mov %ebx,%eax
4420(3): shr $0x6,%al
4423(3): add $0x30,%eax
4426(5): mov %al,0x1(%r14,%r15,1)
442b(4): lea 0x2(%r15),%rax
442f(3): cmp %rax,%r13
4432(2): jbe 0x12(%rip)
4434(2): mov %ebx,%eax
4436(3): shr $0x3,%al
4439(3): and $0x7,%eax
443c(3): add $0x30,%eax
443f(5): mov %al,0x2(%r14,%r15,1)
4444(3): and $0x7,%ebx
4447(4): add $0x1,%rbp
444b(4): add $0x3,%r15
444f(3): add $0x30,%ebx
4452(3): cmp %rcx,%rbp
4455(6): jnb 0xfffff7eb(%rip)
445b(2): mov %edx,%esi
445d(3): cmp %r15,%r13
4460(2): jbe 0x6(%rip)
4462(4): mov %bl,0x0(%r14,%r15,1)
4466(4): movzx 0x0(%rdi,%rbp,1),%ebx
446a(4): add $0x1,%r15
446e(2): test %dl,%dl
4470(6): jnz 0xffffff50(%rip)
4476(2): mov %esi,%eax
4478(3): xor $0x1,%eax
447b(3): and %r8d,%eax
447e(3): test %r10b,%r10b
4481(2): jz 0x10(%rip)
4483(3): cmp %r15,%r13
4486(2): jbe 0x7(%rip)
4488(5): mov $0x5c,0x0(%r14,%r15,1)
448d(4): add $0x1,%r15
4491(4): add $0x1,%rbp
4495(3): cmp %rcx,%rbp
4498(6): jnb 0xfffff784(%rip)
449e(2): test %al,%al
44a0(6): jz 0x3fe(%rip)
44a6(3): cmp %r15,%r13
44a9(2): jbe 0x7(%rip)
44ab(5): mov $0x27,0x0(%r14,%r15,1)
44b0(4): lea 0x1(%r15),%rax
44b4(3): cmp %rax,%r13
44b7(2): jbe 0x8(%rip)
44b9(6): mov $0x27,0x1(%r14,%r15,1)
44bf(4): add $0x2,%r15
44c3(3): xor %r10d,%r10d
44c6(3): xor %r8d,%r8d
44c9(2): jmp 0xffffff94(%rip)
44cb(5): nop 0x0(%rax,%rax,1)
44d0(4): cmp $0x1,%r15
44d4(6): jz 0xfffffe65(%rip)
44da(5): mov 0x10(%rsp),%rdi
44df(4): lea 0x0(%rdi,%r15,1),%rcx
44e3(5): lea 0x1(%rdi,%r14,1),%rdx
44e8(4): lea 0x0(%rcx,%r14,1),%r8
44ec(2): jmp 0x11(%rip)
44ee(2): nop 
44f0(4): add $0x1,%rdx
44f4(3): cmp %rdx,%r8
44f7(6): jz 0xfffffe42(%rip)
44fd(3): movzx (%rdx),%ecx
4500(3): sub $0x5b,%ecx
4503(3): cmp $0x21,%cl
4506(2): jnbe 0xffffffea(%rip)
4508(5): mov $0x1,%esi
450d(3): shl/sal %cl,%rsi
4510(3): mov %rsi,%rcx
4513(a): mov $0x8589934635,%rsi
451d(3): test %rsi,%rcx
4520(2): jz 0xffffffd0(%rip)
4522(5): mov 0x40(%rsp),%r14
4527(5): mov 0x70(%rsp),%r13
452c(5): mov 0x30(%rsp),%rbp
4531(8): mov $0x2,0x8(%rsp)
4539(5): cmp $0x0,0xd(%rsp)
453e(2): jz 0x12(%rip)
4540(2): test %al,%al
4542(5): mov $0x4,%eax
4547(5): cmove 0x8(%rsp),%eax
454c(4): mov %eax,0x8(%rsp)
4550(4): sub $0x8,%rsp
4554(3): mov %rbp,%rcx
4557(3): mov %r13,%rsi
455a(4): push 0x68(%rsp)
455e(4): push 0x78(%rsp)
4562(3): mov %r14,%rdi
4565(2): push $0x0
4567(8): mov 0x98(%rsp),%r9d
456f(5): mov 0x28(%rsp),%r8d
4574(5): mov 0x30(%rsp),%rdx
4579(4): and $0xfd,%r9d
457d(5): call 0xfffff433(%rip)
4582(4): add $0x20,%rsp
4586(3): mov %rax,%r15
4589(8): mov 0xa8(%rsp),%rbx
4591(9): xor $0x28,%rbx
459a(3): mov %r15,%rax
459d(6): jnz 0x606(%rip)
45a3(7): add $0xb8,%rsp
45aa(1): pop %rbx
45ab(1): pop %rbp
45ac(2): pop %r12
45ae(2): pop %r13
45b0(2): pop %r14
45b2(2): pop %r15
45b4(1): ret near (%rsp)
45b5(3): nop (%rax)
45b8(3): mov %r11,%rbp
45bb(5): jmp 0xffffff7e(%rip)
45c0(3): cmp %r15,%r13
45c3(2): jbe 0x7(%rip)
45c5(5): mov $0x27,0x0(%r14,%r15,1)
45ca(4): lea 0x1(%r15),%rax
45ce(3): cmp %rax,%r13
45d1(2): jbe 0x8(%rip)
45d3(6): mov $0x5c,0x1(%r14,%r15,1)
45d9(4): lea 0x2(%r15),%rax
45dd(3): cmp %rax,%r13
45e0(6): jbe 0x5f2(%rip)
45e6(3): mov %r13,%rdx
45e9(6): mov $0x27,0x2(%r14,%r15,1)
45ef(5): mov 0x50(%rsp),%r13
45f4(5): jmp 0xfffffbde(%rip)
45f9(3): mov %r12d,%eax
45fc(5): mov $0x30,%ebx
4601(3): xor %r12d,%r12d
4604(5): jmp 0xfffff605(%rip)
4609(6): mov $0x27,0x2(%r14,%r15,1)
460f(5): jmp 0xfffff9ca(%rip)
4614(2): test %ebx,%ebx
4616(6): jnz 0xfffff42d(%rip)
461c(5): mov $0x1,0xd(%rsp)
4621(3): test %r13,%r13
4624(6): jnz 0x596(%rip)
462a(7): lea 0x4714(%rip),%rax
4631(9): mov $0x0,0x50(%rsp)
463a(5): mov $0x1,0xe(%rsp)
463f(5): mov $0x0,0x7c(%rsp)
4644(3): xor %r12d,%r12d
4647(5): mov $0x0,0xf(%rsp)
464c(9): mov $0x1,0x18(%rsp)
4655(5): mov %rax,0x48(%rsp)
465a(6): mov $0x1,%r15d
4660(8): mov $0x2,0x8(%rsp)
4668(5): jmp 0xfffff41b(%rip)
466d(3): nop (%rax)
4670(2): test %ebx,%ebx
4672(6): jnz 0x3fb(%rip)
4678(3): test %r13,%r13
467b(6): jz 0x22b(%rip)
4681(4): mov $0x22,(%r14)
4685(5): mov $0x1,0xe(%rsp)
468a(3): xor %r12d,%r12d
468d(5): mov $0x0,0x7c(%rsp)
4692(9): mov $0x0,0x50(%rsp)
469b(7): lea 0x46a1(%rip),%rax
46a2(5): mov $0x0,0xf(%rsp)
46a7(5): mov $0x1,0xd(%rsp)
46ac(9): mov $0x1,0x18(%rsp)
46b5(6): mov $0x1,%r15d
46bb(5): mov %rax,0x48(%rsp)
46c0(5): jmp 0xfffff3c3(%rip)
46c5(7): lea 0x4677(%rip),%rax
46cc(5): mov $0x1,0xe(%rsp)
46d1(5): mov $0x0,0x7c(%rsp)
46d6(3): xor %r12d,%r12d
46d9(9): mov $0x0,0x50(%rsp)
46e2(5): mov $0x1,0xf(%rsp)
46e7(5): mov $0x1,0xd(%rsp)
46ec(9): mov $0x1,0x18(%rsp)
46f5(3): xor %r15d,%r15d
46f8(5): mov %rax,0x48(%rsp)
46fd(8): mov $0x5,0x8(%rsp)
4705(5): jmp 0xfffff37e(%rip)
470a(5): mov $0x1,0xe(%rsp)
470f(5): mov $0x0,0x7c(%rsp)
4714(3): xor %r12d,%r12d
4717(9): mov $0x0,0x50(%rsp)
4720(5): mov $0x0,0xf(%rsp)
4725(3): xor %r15d,%r15d
4728(5): mov $0x1,0xd(%rsp)
472d(9): mov $0x0,0x18(%rsp)
4736(9): mov $0x0,0x48(%rsp)
473f(5): jmp 0xfffff344(%rip)
4744(5): cmp $0xa,0x8(%rsp)
4749(2): jz 0x58(%rip)
474b(7): lea 0x45f5(%rip),%rsi
4752(2): xor %edi,%edi
4754(5): mov $0x5,%edx
4759(5): call 0xffffd197(%rip)
475e(3): mov %rax,%rcx
4761(5): mov %rax,0x68(%rsp)
4766(7): lea 0x45da(%rip),%rax
476d(3): cmp %rax,%rcx
4770(6): jz 0x39e(%rip)
4776(7): lea 0x45c8(%rip),%rsi
477d(2): xor %edi,%edi
477f(5): mov $0x5,%edx
4784(5): call 0xffffd16c(%rip)
4789(3): mov %rax,%rcx
478c(5): mov %rax,0x60(%rsp)
4791(7): lea 0x45ad(%rip),%rax
4798(3): cmp %rax,%rcx
479b(6): jz 0x389(%rip)
47a1(3): xor %r15d,%r15d
47a4(2): test %ebx,%ebx
47a6(6): jz 0x1c7(%rip)
47ac(2): test %ebx,%ebx
47ae(5): mov 0x60(%rsp),%rbx
47b3(5): setnz 0xf(%rsp)
47b8(3): xor %r12d,%r12d
47bb(3): mov %rbx,%rdi
47be(5): call 0xffffd152(%rip)
47c3(5): mov %rbx,0x48(%rsp)
47c8(5): mov %rax,0x18(%rsp)
47cd(5): mov $0x1,0xe(%rsp)
47d2(5): mov $0x0,0x7c(%rsp)
47d7(9): mov $0x0,0x50(%rsp)
47e0(5): mov $0x1,0xd(%rsp)
47e5(5): jmp 0xfffff29e(%rip)
47ea(5): mov $0x1,0xe(%rsp)
47ef(5): mov $0x0,0x7c(%rsp)
47f4(3): xor %r12d,%r12d
47f7(9): mov $0x0,0x50(%rsp)
4800(5): mov $0x0,0xf(%rsp)
4805(3): xor %r15d,%r15d
4808(5): mov $0x0,0xd(%rsp)
480d(9): mov $0x0,0x18(%rsp)
4816(9): mov $0x0,0x48(%rsp)
481f(5): jmp 0xfffff264(%rip)
4824(5): mov $0x1,0xe(%rsp)
4829(5): mov $0x0,0x7c(%rsp)
482e(3): xor %r12d,%r12d
4831(9): mov $0x0,0x50(%rsp)
483a(5): mov $0x1,0xf(%rsp)
483f(5): mov $0x1,0xd(%rsp)
4844(5): jmp 0xfffff21f(%rip)
4849(3): cmp %r15,%r13
484c(2): jbe 0x7(%rip)
484e(5): mov $0x30,0x0(%r14,%r15,1)
4853(4): lea 0x2(%rcx),%rax
4857(3): cmp %rax,%r13
485a(2): jbe 0x8(%rip)
485c(6): mov $0x30,0x2(%r14,%rcx,1)
4862(3): mov %r12d,%eax
4865(4): lea 0x3(%rcx),%r15
4869(3): xor %r12d,%r12d
486c(5): mov $0x30,%ebx
4871(5): jmp 0xfffff367(%rip)
4876(a): nop 0x0(%rax,%rax,1)
4880(5): movzx 0xf(%rsp),%ebx
4885(3): mov %r11,%rbp
4888(4): mov %bl,0xd(%rsp)
488c(5): jmp 0xfffffcad(%rip)
4891(5): movzx 0xd(%rsp),%edx
4896(3): xor %r12d,%r12d
4899(5): jmp 0xfffffb07(%rip)
489e(3): xor %r10d,%r10d
48a1(5): jmp 0xfffffbbc(%rip)
48a6(9): mov $0x0,0x50(%rsp)
48af(5): mov $0x1,0xe(%rsp)
48b4(3): xor %r12d,%r12d
48b7(5): mov $0x0,0x7c(%rsp)
48bc(5): jmp 0xfffffddf(%rip)
48c1(5): mov 0x30(%rsp),%r11
48c6(3): mov %r14,%rsi
48c9(3): mov %r13,%rcx
48cc(3): mov %rbx,%rax
48cf(3): mov %rbx,%rdi
48d2(6): movzx 0x7d(%rsp),%r8d
48d8(5): movzx 0x7e(%rsp),%ebx
48dd(8): mov 0x88(%rsp),%r9
48e5(3): cmp %r11,%rsi
48e8(6): movzx 0x7f(%rsp),%r10d
48ee(8): mov 0x80(%rsp),%r15
48f6(5): mov 0x40(%rsp),%r14
48fb(5): mov 0x70(%rsp),%r13
4900(2): jnb 0x28(%rip)
4902(3): cmp $0x0,(%rcx)
4905(2): jnz 0x12(%rip)
4907(2): jmp 0x21(%rip)
4909(7): nop 0x0(%rax)
4910(5): cmp $0x0,0x0(%r9,%rax,1)
4915(2): jz 0x10(%rip)
4917(4): add $0x1,%rax
491b(5): lea 0x0(%rbp,%rax,1),%rdx
4920(3): cmp %rdx,%r11
4923(2): jnbe 0xffffffed(%rip)
4925(3): mov %rax,%rdi
4928(5): movzx 0xd(%rsp),%edx
492d(3): xor %r12d,%r12d
4930(5): jmp 0xfffffa66(%rip)
4935(3): mov %rbx,%rdi
4938(6): movzx 0x7d(%rsp),%r8d
493e(5): movzx 0x7e(%rsp),%ebx
4943(6): movzx 0x7f(%rsp),%r10d
4949(8): mov 0x80(%rsp),%r15
4951(3): xor %r12d,%r12d
4954(5): mov 0x40(%rsp),%r14
4959(5): mov 0x70(%rsp),%r13
495e(5): mov 0x30(%rsp),%r11
4963(5): movzx 0xd(%rsp),%edx
4968(5): jmp 0xfffffa2e(%rip)
496d(5): mov 0x68(%rsp),%rdx
4972(3): movzx (%rdx),%eax
4975(2): test %al,%al
4977(6): jz 0xfffffe35(%rip)
497d(3): nop (%rax)
4980(3): cmp %r15,%r13
4983(2): jbe 0x6(%rip)
4985(4): mov %al,0x0(%r14,%r15,1)
4989(4): add $0x1,%r15
498d(5): movzx 0x0(%rdx,%r15,1),%eax
4992(2): test %al,%al
4994(2): jnz 0xffffffec(%rip)
4996(5): jmp 0xfffffe16(%rip)
499b(2): mov %edx,%eax
499d(5): jmp 0xfffff55a(%rip)
49a2(4): movzx 0x0(%rax,%rcx,1),%ebx
49a6(3): cmp $0x3e,%bl
49a9(6): jnbe 0xfffff877(%rip)
49af(a): mov $0x8070630310989004800,%rax
49b9(4): bt %rbx,%rax
49bd(6): jnb 0xfffff863(%rip)
49c3(5): cmp $0x0,0xf(%rsp)
49c8(6): jnz 0x1ea(%rip)
49ce(3): cmp %r15,%r13
49d1(2): jbe 0x7(%rip)
49d3(5): mov $0x3f,0x0(%r14,%r15,1)
49d8(4): lea 0x1(%r15),%rax
49dc(3): cmp %rax,%r13
49df(2): jbe 0x8(%rip)
49e1(6): mov $0x22,0x1(%r14,%r15,1)
49e7(4): lea 0x2(%r15),%rax
49eb(3): cmp %rax,%r13
49ee(2): jbe 0x8(%rip)
49f0(6): mov $0x22,0x2(%r14,%r15,1)
49f6(4): lea 0x3(%r15),%rax
49fa(3): cmp %rax,%r13
49fd(2): jbe 0x8(%rip)
49ff(6): mov $0x3f,0x3(%r14,%r15,1)
4a05(4): add $0x4,%r15
4a09(2): xor %edx,%edx
4a0b(3): xor %r12d,%r12d
4a0e(2): xor %eax,%eax
4a10(3): mov %rcx,%rbp
4a13(5): jmp 0xfffff1c5(%rip)
4a18(2): test %ebx,%ebx
4a1a(6): jz 0x18e(%rip)
4a20(7): lea 0x431e(%rip),%rax
4a27(5): mov $0x1,0xe(%rsp)
4a2c(5): mov $0x0,0x7c(%rsp)
4a31(3): xor %r12d,%r12d
4a34(9): mov $0x0,0x50(%rsp)
4a3d(5): mov $0x1,0xf(%rsp)
4a42(5): mov $0x0,0xd(%rsp)
4a47(9): mov $0x1,0x18(%rsp)
4a50(3): xor %r15d,%r15d
4a53(5): mov %rax,0x48(%rsp)
4a58(5): jmp 0xfffff02b(%rip)
4a5d(3): nop (%rax)
4a60(3): mov %r11,%rbp
4a63(5): movzx 0xf(%rsp),%eax
4a68(5): jmp 0xfffffad1(%rip)
4a6d(7): lea 0x42cf(%rip),%rax
4a74(5): mov $0x1,0xe(%rsp)
4a79(5): mov $0x0,0x7c(%rsp)
4a7e(3): xor %r12d,%r12d
4a81(9): mov $0x0,0x50(%rsp)
4a8a(5): mov $0x1,0xf(%rsp)
4a8f(5): mov $0x1,0xd(%rsp)
4a94(9): mov $0x1,0x18(%rsp)
4a9d(3): xor %r15d,%r15d
4aa0(5): mov %rax,0x48(%rsp)
4aa5(5): jmp 0xffffefde(%rip)
4aaa(2): mov %edx,%eax
4aac(5): mov 0x48(%rsp),%rbx
4ab1(3): test %rbx,%rbx
4ab4(2): jz 0x2e(%rip)
4ab6(2): test %al,%al
4ab8(2): jz 0x2a(%rip)
4aba(3): movzx (%rbx),%ecx
4abd(3): mov %rbx,%rax
4ac0(2): test %cl,%cl
4ac2(2): jz 0x20(%rip)
4ac4(3): mov %r15,%rdx
4ac7(3): sub %r15,%rax
4aca(3): cmp %rdx,%r13
4acd(2): jbe 0x6(%rip)
4acf(4): mov %cl,0x0(%r14,%rdx,1)
4ad3(4): add $0x1,%rdx
4ad7(4): movzx 0x0(%rax,%rdx,1),%ecx
4adb(2): test %cl,%cl
4add(2): jnz 0xffffffed(%rip)
4adf(3): mov %rdx,%r15
4ae2(3): cmp %r15,%r13
4ae5(6): jbe 0xfffffaa4(%rip)
4aeb(5): mov $0x0,0x0(%r14,%r15,1)
4af0(5): jmp 0xfffffa99(%rip)
4af5(5): cmp $0x2,0x8(%rsp)
4afa(5): movzx 0xf(%rsp),%ebx
4aff(3): mov %r11,%rbp
4b02(3): setz %al
4b05(4): mov %bl,0xd(%rsp)
4b09(5): jmp 0xfffffa30(%rip)
4b0e(4): mov 0x8(%rsp),%esi
4b12(3): mov %rcx,%rdi
4b15(5): call 0xffffedab(%rip)
4b1a(5): mov %rax,0x68(%rsp)
4b1f(5): jmp 0xfffffc57(%rip)
4b24(4): mov 0x8(%rsp),%esi
4b28(3): mov %rcx,%rdi
4b2b(5): call 0xffffed95(%rip)
4b30(5): mov %rax,0x60(%rsp)
4b35(5): jmp 0xfffffc6c(%rip)
4b3a(5): movzx 0xf(%rsp),%ebx
4b3f(3): mov %r11,%rbp
4b42(2): mov %edx,%eax
4b44(4): mov %bl,0xd(%rsp)
4b48(5): jmp 0xfffff9f1(%rip)
4b4d(4): sub $0x8,%rsp
4b51(6): mov $0x5,%r8d
4b57(3): mov %r11,%rcx
4b5a(4): push 0x68(%rsp)
4b5e(4): push 0x78(%rsp)
4b62(3): mov %r14,%rdi
4b65(4): push 0x38(%rsp)
4b69(8): mov 0x98(%rsp),%r9d
4b71(5): mov 0x30(%rsp),%rdx
4b76(5): mov 0x70(%rsp),%rsi
4b7b(5): call 0xffffee35(%rip)
4b80(4): add $0x20,%rsp
4b84(3): mov %rax,%r15
4b87(5): jmp 0xfffffa02(%rip)
4b8c(5): movzx 0x7c(%rsp),%eax
4b91(5): jmp 0xffffff1b(%rip)
4b96(8): mov $0x2,0x8(%rsp)
4b9e(5): jmp 0xfffff99b(%rip)
4ba3(5): call 0xffffcd7d(%rip)
4ba8(5): mov $0x0,0xd(%rsp)
4bad(5): jmp 0xfffffa74(%rip)
4bb2(3): mov %r11,%rbp
4bb5(5): jmp 0xfffff99b(%rip)
4bba(5): mov $0x1,0xe(%rsp)
4bbf(2): xor %eax,%eax
4bc1(3): xor %r12d,%r12d
4bc4(9): mov $0x0,0x50(%rsp)
4bcd(5): jmp 0xfffff5a7(%rip)
4bd2(3): mov %r13,%rdx
4bd5(5): mov 0x50(%rsp),%r13
4bda(5): jmp 0xfffff5f8(%rip)
4bdf(5): call 0xffffcc51(%rip)

"quotearg_n_options" :
4bf0(2): push %r15
4bf2(2): push %r14
4bf4(3): movsxd %edi,%r15
4bf7(2): push %r13
4bf9(2): push %r12
4bfb(3): mov %rdx,%r14
4bfe(1): push %rbp
4bff(1): push %rbx
4c00(3): mov %rcx,%rbp
4c03(4): sub $0x28,%rsp
4c07(5): mov %rsi,0x8(%rsp)
4c0c(5): call 0xffffcc34(%rip)
4c11(3): mov %rax,%r13
4c14(2): mov (%rax),%eax
4c16(3): test %r15d,%r15d
4c19(7): mov 0x206460(%rip),%rbx
4c20(4): mov %eax,0x18(%rsp)
4c24(6): js 0x16d(%rip)
4c2a(7): cmp %r15d,0x206447(%rip)
4c31(2): jnle 0x64(%rip)
4c33(7): cmp $0x7fffffff,%r15d
4c3a(6): jz 0x15c(%rip)
4c40(4): lea 0x1(%r15),%r12d
4c44(7): lea 0x206445(%rip),%rax
4c4b(3): movsxd %r12d,%rsi
4c4e(4): shl/sal $0x4,%rsi
4c52(3): cmp %rax,%rbx
4c55(6): jz 0x11b(%rip)
4c5b(3): mov %rbx,%rdi
4c5e(5): call 0xf72(%rip)
4c63(3): mov %rax,%rbx
4c66(7): mov %rax,0x206413(%rip)
4c6d(7): movsxd 0x206404(%rip),%rdi
4c74(3): mov %r12d,%edx
4c77(2): xor %esi,%esi
4c79(2): sub %edi,%edx
4c7b(4): shl/sal $0x4,%rdi
4c7f(3): movsxd %edx,%rdx
4c82(3): add %rbx,%rdi
4c85(4): shl/sal $0x4,%rdx
4c89(5): call 0xffffcd17(%rip)
4c8e(7): mov %r12d,0x2063e3(%rip)
4c95(3): mov 0x4(%rbp),%eax
4c98(4): shl/sal $0x4,%r15
4c9c(4): sub $0x8,%rsp
4ca0(3): add %r15,%rbx
4ca3(4): lea 0x8(%rbp),%r15
4ca7(4): mov 0x0(%rbp),%r8d
4cab(3): mov (%rbx),%r11
4cae(4): mov 0x8(%rbx),%r12
4cb2(3): mov %r14,%rcx
4cb5(3): or $0x1,%eax
4cb8(4): mov %eax,0x24(%rsp)
4cbc(3): push 0x30(%rbp)
4cbf(3): mov %eax,%r9d
4cc2(3): push 0x28(%rbp)
4cc5(2): push %r15
4cc7(3): mov %r11,%rsi
4cca(5): mov 0x28(%rsp),%rdx
4ccf(3): mov %r12,%rdi
4cd2(5): mov %r11,0x30(%rsp)
4cd7(5): call 0xffffecd9(%rip)
4cdc(4): add $0x20,%rsp
4ce0(5): mov 0x10(%rsp),%r11
4ce5(3): cmp %rax,%r11
4ce8(2): jnbe 0x69(%rip)
4cea(4): lea 0x1(%rax),%rsi
4cee(7): lea 0x2064cb(%rip),%rax
4cf5(3): cmp %rax,%r12
4cf8(3): mov %rsi,(%rbx)
4cfb(2): jz 0x14(%rip)
4cfd(3): mov %r12,%rdi
4d00(5): mov %rsi,0x10(%rsp)
4d05(5): call 0xffffcb0b(%rip)
4d0a(5): mov 0x10(%rsp),%rsi
4d0f(3): mov %rsi,%rdi
4d12(5): mov %rsi,0x10(%rsp)
4d17(5): call 0xe59(%rip)
4d1c(4): sub $0x8,%rsp
4d20(4): mov %rax,0x8(%rbx)
4d24(4): mov 0x0(%rbp),%r8d
4d28(3): push 0x30(%rbp)
4d2b(3): push 0x28(%rbp)
4d2e(3): mov %r14,%rcx
4d31(2): push %r15
4d33(5): mov 0x3c(%rsp),%r9d
4d38(3): mov %rax,%rdi
4d3b(5): mov 0x28(%rsp),%rdx
4d40(5): mov 0x30(%rsp),%rsi
4d45(3): mov %rax,%r12
4d48(5): call 0xffffec68(%rip)
4d4d(4): add $0x20,%rsp
4d51(4): mov 0x18(%rsp),%eax
4d55(4): mov %eax,0x0(%r13)
4d59(4): add $0x28,%rsp
4d5d(3): mov %r12,%rax
4d60(1): pop %rbx
4d61(1): pop %rbp
4d62(2): pop %r12
4d64(2): pop %r13
4d66(2): pop %r14
4d68(2): pop %r15
4d6a(1): ret near (%rsp)
4d6b(5): nop 0x0(%rax,%rax,1)
4d70(2): xor %edi,%edi
4d72(5): call 0xe5e(%rip)
4d77(8): movdqa 0x206311(%rip),%xmm0
4d7f(3): mov %rax,%rbx
4d82(7): mov %rax,0x2062f7(%rip)
4d89(3): movups %xmm0,(%rax)
4d8c(5): jmp 0xfffffee1(%rip)
4d91(5): call 0xffffca9f(%rip)
4d96(5): call 0x102a(%rip)

"clone_quoting_options" :
4da0(2): push %r12
4da2(1): push %rbp
4da3(1): push %rbx
4da4(3): mov %rdi,%rbx
4da7(5): call 0xffffca99(%rip)
4dac(3): mov (%rax),%r12d
4daf(3): mov %rax,%rbp
4db2(7): lea 0x206507(%rip),%rax
4db9(3): test %rbx,%rbx
4dbc(5): mov $0x38,%esi
4dc1(4): cmove %rax,%rbx
4dc5(3): mov %rbx,%rdi
4dc8(5): call 0xfa8(%rip)
4dcd(4): mov %r12d,0x0(%rbp)
4dd1(1): pop %rbx
4dd2(1): pop %rbp
4dd3(2): pop %r12
4dd5(1): ret near (%rsp)

"get_quoting_style" :
4de0(7): lea 0x2064d9(%rip),%rax
4de7(3): test %rdi,%rdi
4dea(4): cmove %rax,%rdi
4dee(2): mov (%rdi),%eax
4df0(1): ret near (%rsp)

"set_quoting_style" :
4e00(7): lea 0x2064b9(%rip),%rax
4e07(3): test %rdi,%rdi
4e0a(4): cmove %rax,%rdi
4e0e(2): mov %esi,(%rdi)
4e10(1): ret near (%rsp)

"set_char_quoting" :
4e20(7): lea 0x206499(%rip),%rax
4e27(3): test %rdi,%rdi
4e2a(2): mov %esi,%ecx
4e2c(4): cmove %rax,%rdi
4e30(2): mov %esi,%eax
4e32(3): and $0x1f,%ecx
4e35(3): shr $0x5,%al
4e38(3): movzx %al,%eax
4e3b(5): lea 0x8(%rdi,%rax,4),%rdi
4e40(2): mov (%rdi),%esi
4e42(2): mov %esi,%eax
4e44(2): shr %cl,%eax
4e46(2): xor %eax,%edx
4e48(3): and $0x1,%eax
4e4b(3): and $0x1,%edx
4e4e(2): shl/sal %cl,%edx
4e50(2): xor %esi,%edx
4e52(2): mov %edx,(%rdi)
4e54(1): ret near (%rsp)

"set_quoting_flags" :
4e60(7): lea 0x206459(%rip),%rax
4e67(3): test %rdi,%rdi
4e6a(4): cmove %rax,%rdi
4e6e(3): mov 0x4(%rdi),%eax
4e71(3): mov %esi,0x4(%rdi)
4e74(1): ret near (%rsp)

"set_custom_quoting" :
4e80(7): lea 0x206439(%rip),%rax
4e87(3): test %rdi,%rdi
4e8a(4): cmove %rax,%rdi
4e8e(3): test %rsi,%rsi
4e91(6): mov $0xa,(%rdi)
4e97(2): jz 0x10(%rip)
4e99(3): test %rdx,%rdx
4e9c(2): jz 0xb(%rip)
4e9e(4): mov %rsi,0x28(%rdi)
4ea2(4): mov %rdx,0x30(%rdi)
4ea6(1): ret near (%rsp)
4ea7(4): sub $0x8,%rsp
4eab(5): call 0xffffc985(%rip)

"quotearg_buffer" :
4eb0(2): push %r15
4eb2(2): push %r14
4eb4(7): lea 0x206405(%rip),%rax
4ebb(2): push %r13
4ebd(2): push %r12
4ebf(3): mov %rdi,%r13
4ec2(1): push %rbp
4ec3(1): push %rbx
4ec4(3): mov %r8,%rbx
4ec7(3): mov %rsi,%r14
4eca(3): mov %rdx,%r15
4ecd(4): sub $0x18,%rsp
4ed1(3): test %r8,%r8
4ed4(4): cmove %rax,%rbx
4ed8(5): mov %rcx,0x8(%rsp)
4edd(5): call 0xffffc963(%rip)
4ee2(3): mov (%rax),%r12d
4ee5(3): mov %rax,%rbp
4ee8(4): lea 0x8(%rbx),%rax
4eec(4): sub $0x8,%rsp
4ef0(4): mov 0x4(%rbx),%r9d
4ef4(3): push 0x30(%rbx)
4ef7(3): mov (%rbx),%r8d
4efa(3): push 0x28(%rbx)
4efd(3): mov %r15,%rdx
4f00(1): push %rax
4f01(5): mov 0x28(%rsp),%rcx
4f06(3): mov %r14,%rsi
4f09(3): mov %r13,%rdi
4f0c(5): call 0xffffeaa4(%rip)
4f11(4): mov %r12d,0x0(%rbp)
4f15(4): add $0x38,%rsp
4f19(1): pop %rbx
4f1a(1): pop %rbp
4f1b(2): pop %r12
4f1d(2): pop %r13
4f1f(2): pop %r14
4f21(2): pop %r15
4f23(1): ret near (%rsp)

"quotearg_alloc_mem" :
4f30(2): push %r15
4f32(2): push %r14
4f34(7): lea 0x206385(%rip),%rax
4f3b(2): push %r13
4f3d(2): push %r12
4f3f(3): mov %rdx,%r12
4f42(1): push %rbp
4f43(1): push %rbx
4f44(3): mov %rcx,%rbx
4f47(3): mov %rdi,%r14
4f4a(3): mov %rsi,%r15
4f4d(4): sub $0x38,%rsp
4f51(3): test %rcx,%rcx
4f54(4): cmove %rax,%rbx
4f58(2): xor %ebp,%ebp
4f5a(5): call 0xffffc8e6(%rip)
4f5f(3): test %r12,%r12
4f62(3): mov %rax,%r13
4f65(2): mov (%rax),%eax
4f67(4): setz %bpl
4f6b(3): or 0x4(%rbx),%ebp
4f6e(4): lea 0x8(%rbx),%r10
4f72(4): sub $0x8,%rsp
4f76(3): mov (%rbx),%r8d
4f79(3): mov %r15,%rcx
4f7c(4): mov %eax,0x14(%rsp)
4f80(3): push 0x30(%rbx)
4f83(3): mov %r14,%rdx
4f86(3): push 0x28(%rbx)
4f89(2): push %r10
4f8b(2): xor %esi,%esi
4f8d(3): mov %ebp,%r9d
4f90(2): xor %edi,%edi
4f92(5): mov %r10,0x40(%rsp)
4f97(5): call 0xffffea19(%rip)
4f9c(4): lea 0x1(%rax),%rsi
4fa0(5): mov %rax,0x48(%rsp)
4fa5(4): add $0x20,%rsp
4fa9(3): mov %rsi,%rdi
4fac(5): mov %rsi,0x18(%rsp)
4fb1(5): call 0xbbf(%rip)
4fb6(5): mov %rax,0x10(%rsp)
4fbb(4): sub $0x8,%rsp
4fbf(3): push 0x30(%rbx)
4fc2(3): push 0x28(%rbx)
4fc5(5): mov 0x38(%rsp),%r10
4fca(3): mov %ebp,%r9d
4fcd(3): mov (%rbx),%r8d
4fd0(3): mov %r15,%rcx
4fd3(3): mov %r14,%rdx
4fd6(3): mov %rax,%rdi
4fd9(2): push %r10
4fdb(5): mov 0x38(%rsp),%rsi
4fe0(5): call 0xffffe9d0(%rip)
4fe5(4): mov 0x2c(%rsp),%eax
4fe9(4): add $0x20,%rsp
4fed(3): test %r12,%r12
4ff0(4): mov %eax,0x0(%r13)
4ff4(2): jz 0xb(%rip)
4ff6(5): mov 0x28(%rsp),%r11
4ffb(4): mov %r11,(%r12)
4fff(5): mov 0x10(%rsp),%rax
5004(4): add $0x38,%rsp
5008(1): pop %rbx
5009(1): pop %rbp
500a(2): pop %r12
500c(2): pop %r13
500e(2): pop %r14
5010(2): pop %r15
5012(1): ret near (%rsp)

"quotearg_alloc" :
5020(3): mov %rdx,%rcx
5023(2): xor %edx,%edx
5025(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5030(6): mov 0x206042(%rip),%eax
5036(2): push %r12
5038(7): mov 0x206041(%rip),%r12
503f(1): push %rbp
5040(1): push %rbx
5041(3): cmp $0x1,%eax
5044(2): jle 0x2d(%rip)
5046(3): sub $0x2,%eax
5049(5): lea 0x18(%r12),%rbx
504e(4): shl/sal $0x4,%rax
5052(5): lea 0x28(%r12,%rax,1),%rbp
5057(9): nop 0x0(%rax,%rax,1)
5060(3): mov (%rbx),%rdi
5063(4): add $0x10,%rbx
5067(5): call 0xffffc7a9(%rip)
506c(3): cmp %rbp,%rbx
506f(2): jnz 0xfffffff1(%rip)
5071(5): mov 0x8(%r12),%rdi
5076(7): lea 0x206143(%rip),%rbx
507d(3): cmp %rbx,%rdi
5080(2): jz 0x19(%rip)
5082(5): call 0xffffc78e(%rip)
5087(b): mov $0x100,0x205ffe(%rip)
5092(7): mov %rbx,0x205fff(%rip)
5099(7): lea 0x205ff0(%rip),%rbx
50a0(3): cmp %rbx,%r12
50a3(2): jz 0x11(%rip)
50a5(3): mov %r12,%rdi
50a8(5): call 0xffffc768(%rip)
50ad(7): mov %rbx,0x205fcc(%rip)
50b4(1): pop %rbx
50b5(a): mov $0x1,0x205fb9(%rip)
50bf(1): pop %rbp
50c0(2): pop %r12
50c2(1): ret near (%rsp)

"quotearg_n" :
50d0(7): lea 0x2061e9(%rip),%rcx
50d7(7): mov $0xffffffff,%rdx
50de(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
50f0(7): lea 0x2061c9(%rip),%rcx
50f7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5100(7): lea 0x2061b9(%rip),%rcx
5107(3): mov %rdi,%rsi
510a(7): mov $0xffffffff,%rdx
5111(2): xor %edi,%edi
5113(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5120(7): lea 0x206199(%rip),%rcx
5127(3): mov %rsi,%rdx
512a(3): mov %rdi,%rsi
512d(2): xor %edi,%edi
512f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5140(4): sub $0x48,%rsp
5144(3): mov %rdx,%rax
5147(9): mov $0x28,%rdx
5150(5): mov %rdx,0x38(%rsp)
5155(2): xor %edx,%edx
5157(3): cmp $0xa,%esi
515a(2): jz 0x6a(%rip)
515c(3): mov %esi,(%rsp)
515f(3): mov %rsp,%rcx
5162(7): mov $0xffffffff,%rdx
5169(3): mov %rax,%rsi
516c(9): mov $0x0,0x4(%rsp)
5175(9): mov $0x0,0xc(%rsp)
517e(9): mov $0x0,0x14(%rsp)
5187(9): mov $0x0,0x1c(%rsp)
5190(9): mov $0x0,0x24(%rsp)
5199(9): mov $0x0,0x2c(%rsp)
51a2(8): mov $0x0,0x34(%rsp)
51aa(5): call 0xfffffa46(%rip)
51af(5): mov 0x38(%rsp),%rcx
51b4(9): xor $0x28,%rcx
51bd(2): jnz 0xc(%rip)
51bf(4): add $0x48,%rsp
51c3(1): ret near (%rsp)
51c4(5): call 0xffffc66c(%rip)
51c9(5): call 0xffffc757(%rip)

"quotearg_n_style_mem" :
51d0(4): sub $0x48,%rsp
51d4(3): mov %rdx,%rax
51d7(3): mov %rcx,%rdx
51da(9): mov $0x28,%rcx
51e3(5): mov %rcx,0x38(%rsp)
51e8(2): xor %ecx,%ecx
51ea(3): cmp $0xa,%esi
51ed(2): jz 0x63(%rip)
51ef(3): mov %esi,(%rsp)
51f2(3): mov %rsp,%rcx
51f5(3): mov %rax,%rsi
51f8(9): mov $0x0,0x4(%rsp)
5201(9): mov $0x0,0xc(%rsp)
520a(9): mov $0x0,0x14(%rsp)
5213(9): mov $0x0,0x1c(%rsp)
521c(9): mov $0x0,0x24(%rsp)
5225(9): mov $0x0,0x2c(%rsp)
522e(8): mov $0x0,0x34(%rsp)
5236(5): call 0xfffff9ba(%rip)
523b(5): mov 0x38(%rsp),%rdx
5240(9): xor $0x28,%rdx
5249(2): jnz 0xc(%rip)
524b(4): add $0x48,%rsp
524f(1): ret near (%rsp)
5250(5): call 0xffffc5e0(%rip)
5255(5): call 0xffffc6cb(%rip)

"quotearg_style" :
5260(3): mov %rsi,%rdx
5263(2): mov %edi,%esi
5265(2): xor %edi,%edi
5267(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5270(3): mov %rdx,%rcx
5273(3): mov %rsi,%rdx
5276(2): mov %edi,%esi
5278(2): xor %edi,%edi
527a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5280(4): sub $0x48,%rsp
5284(2): mov %edx,%ecx
5286(9): mov $0x28,%rax
528f(5): mov %rax,0x38(%rsp)
5294(2): xor %eax,%eax
5296(7): mov 0x206053(%rip),%rax
529d(3): mov %rsp,%r8
52a0(3): and $0x1f,%ecx
52a3(8): movdqa 0x206015(%rip),%xmm0
52ab(5): mov %rax,0x30(%rsp)
52b0(2): mov %edx,%eax
52b2(4): movaps %xmm0,(%rsp)
52b6(3): shr $0x5,%al
52b9(3): movzx %al,%eax
52bc(5): lea 0x8(%r8,%rax,4),%r9
52c1(8): movdqa 0x206007(%rip),%xmm0
52c9(5): movaps %xmm0,0x10(%rsp)
52ce(8): movdqa 0x20600a(%rip),%xmm0
52d6(5): movaps %xmm0,0x20(%rsp)
52db(3): mov (%r9),%edx
52de(2): mov %edx,%eax
52e0(2): shr %cl,%eax
52e2(2): not %eax
52e4(3): and $0x1,%eax
52e7(2): shl/sal %cl,%eax
52e9(3): mov %r8,%rcx
52ec(2): xor %edx,%eax
52ee(3): mov %rsi,%rdx
52f1(3): mov %rdi,%rsi
52f4(3): mov %eax,(%r9)
52f7(2): xor %edi,%edi
52f9(5): call 0xfffff8f7(%rip)
52fe(5): mov 0x38(%rsp),%rsi
5303(9): xor $0x28,%rsi
530c(2): jnz 0x7(%rip)
530e(4): add $0x48,%rsp
5312(1): ret near (%rsp)
5313(5): call 0xffffc60d(%rip)

"quotearg_char" :
5320(4): movsx %sil,%edx
5324(7): mov $0xffffffff,%rsi
532b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5330(5): mov $0x3a,%edx
5335(7): mov $0xffffffff,%rsi
533c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5350(5): mov $0x3a,%edx
5355(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5360(4): sub $0x48,%rsp
5364(3): mov %rdx,%rax
5367(9): mov $0x28,%rdx
5370(5): mov %rdx,0x38(%rsp)
5375(2): xor %edx,%edx
5377(3): cmp $0xa,%esi
537a(2): jz 0x6a(%rip)
537c(3): mov %esi,(%rsp)
537f(3): mov %rsp,%rcx
5382(7): mov $0xffffffff,%rdx
5389(3): mov %rax,%rsi
538c(9): mov $0x0,0x4(%rsp)
5395(9): mov $0x4000000,0xc(%rsp)
539e(9): mov $0x0,0x14(%rsp)
53a7(9): mov $0x0,0x1c(%rsp)
53b0(9): mov $0x0,0x24(%rsp)
53b9(9): mov $0x0,0x2c(%rsp)
53c2(8): mov $0x0,0x34(%rsp)
53ca(5): call 0xfffff826(%rip)
53cf(5): mov 0x38(%rsp),%rcx
53d4(9): xor $0x28,%rcx
53dd(2): jnz 0xc(%rip)
53df(4): add $0x48,%rsp
53e3(1): ret near (%rsp)
53e4(5): call 0xffffc44c(%rip)
53e9(5): call 0xffffc537(%rip)

"quotearg_n_custom_mem" :
53f0(4): sub $0x48,%rsp
53f4(3): mov %rcx,%r9
53f7(7): mov 0x205ef2(%rip),%rcx
53fe(8): movdqa 0x205eba(%rip),%xmm0
5406(9): mov $0x28,%rax
540f(5): mov %rax,0x38(%rsp)
5414(2): xor %eax,%eax
5416(4): movaps %xmm0,(%rsp)
541a(3): test %rsi,%rsi
541d(5): mov %rcx,0x30(%rsp)
5422(7): mov $0xa,(%rsp)
5429(8): movdqa 0x205e9f(%rip),%xmm0
5431(5): movaps %xmm0,0x10(%rsp)
5436(8): movdqa 0x205ea2(%rip),%xmm0
543e(5): movaps %xmm0,0x20(%rsp)
5443(2): jz 0x34(%rip)
5445(3): test %rdx,%rdx
5448(2): jz 0x2f(%rip)
544a(5): mov %rsi,0x28(%rsp)
544f(5): mov %rdx,0x30(%rsp)
5454(3): mov %rsp,%rcx
5457(3): mov %r8,%rdx
545a(3): mov %r9,%rsi
545d(5): call 0xfffff793(%rip)
5462(5): mov 0x38(%rsp),%rdi
5467(9): xor $0x28,%rdi
5470(2): jnz 0xc(%rip)
5472(4): add $0x48,%rsp
5476(1): ret near (%rsp)
5477(5): call 0xffffc3b9(%rip)
547c(5): call 0xffffc4a4(%rip)

"quotearg_n_custom" :
5490(7): mov $0xffffffff,%r8
5497(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
54a0(3): mov %rdx,%rcx
54a3(7): mov $0xffffffff,%r8
54aa(3): mov %rsi,%rdx
54ad(3): mov %rdi,%rsi
54b0(2): xor %edi,%edi
54b2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
54c0(3): mov %rcx,%r8
54c3(3): mov %rdx,%rcx
54c6(3): mov %rsi,%rdx
54c9(3): mov %rdi,%rsi
54cc(2): xor %edi,%edi
54ce(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
54e0(7): lea 0x205b59(%rip),%rcx
54e7(5): jmp 0xfffff709(%rip)

"quote_mem" :
54f0(7): lea 0x205b49(%rip),%rcx
54f7(3): mov %rsi,%rdx
54fa(3): mov %rdi,%rsi
54fd(2): xor %edi,%edi
54ff(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5510(7): lea 0x205b29(%rip),%rcx
5517(7): mov $0xffffffff,%rdx
551e(5): jmp 0xfffff6d2(%rip)

"quote" :
5530(7): lea 0x205b09(%rip),%rcx
5537(3): mov %rdi,%rsi
553a(7): mov $0xffffffff,%rdx
5541(2): xor %edi,%edi
5543(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
5550(2): push %r15
5552(2): push %r14
5554(2): push %r13
5556(2): push %r12
5558(3): mov %r9,%r12
555b(1): push %rbp
555c(1): push %rbx
555d(3): mov %rdi,%rbp
5560(3): mov %r8,%rbx
5563(4): sub $0x28,%rsp
5567(3): test %rsi,%rsi
556a(6): jz 0x11e(%rip)
5570(3): mov %rdx,%r8
5573(7): lea 0x3c8e(%rip),%rdx
557a(3): mov %rcx,%r9
557d(2): xor %eax,%eax
557f(3): mov %rsi,%rcx
5582(5): mov $0x1,%esi
5587(5): call 0xffffc5b9(%rip)
558c(7): lea 0x3c88(%rip),%rsi
5593(2): xor %edi,%edi
5595(5): mov $0x5,%edx
559a(5): call 0xffffc356(%rip)
559f(7): lea 0x3f9a(%rip),%rdx
55a6(3): mov %rax,%rcx
55a9(6): mov $0x7e3,%r8d
55af(5): mov $0x1,%esi
55b4(3): mov %rbp,%rdi
55b7(2): xor %eax,%eax
55b9(5): call 0xffffc587(%rip)
55be(7): lea 0x3ce3(%rip),%rsi
55c5(2): xor %edi,%edi
55c7(5): mov $0x5,%edx
55cc(5): call 0xffffc324(%rip)
55d1(3): mov %rbp,%rsi
55d4(3): mov %rax,%rdi
55d7(5): call 0xffffc3f9(%rip)
55dc(4): cmp $0x9,%r12
55e0(6): jnbe 0x340(%rip)
55e6(7): lea 0x3f1b(%rip),%rdx
55ed(4): movsxd 0x0(%rdx,%r12,4),%rax
55f1(3): add %rdx,%rax
55f4(2): jmp %rax
55f6(a): nop 0x0(%rax,%rax,1)
5600(4): mov 0x38(%rbx),%r9
5604(4): mov 0x10(%rbx),%rax
5608(7): lea 0x3e09(%rip),%rsi
560f(4): mov 0x8(%rbx),%r8
5613(5): mov $0x5,%edx
5618(2): xor %edi,%edi
561a(4): mov 0x30(%rbx),%r13
561e(4): mov 0x28(%rbx),%r12
5622(5): mov %r9,0x10(%rsp)
5627(4): mov 0x20(%rbx),%r15
562b(4): mov 0x18(%rbx),%r14
562f(4): mov %rax,(%rsp)
5633(5): mov %r8,0x8(%rsp)
5638(3): mov (%rbx),%rbx
563b(5): call 0xffffc2b5(%rip)
5640(4): sub $0x8,%rsp
5644(5): mov 0x18(%rsp),%r9
5649(3): mov %rax,%rdx
564c(3): mov %rbx,%rcx
564f(5): mov $0x1,%esi
5654(3): mov %rbp,%rdi
5657(2): xor %eax,%eax
5659(2): push %r9
565b(2): push %r13
565d(2): push %r12
565f(2): push %r15
5661(2): push %r14
5663(5): mov 0x30(%rsp),%r9
5668(5): mov 0x38(%rsp),%r8
566d(5): call 0xffffc4d3(%rip)
5672(4): add $0x30,%rsp
5676(4): add $0x28,%rsp
567a(1): pop %rbx
567b(1): pop %rbp
567c(2): pop %r12
567e(2): pop %r13
5680(2): pop %r14
5682(2): pop %r15
5684(1): ret near (%rsp)
5685(3): nop (%rax)
5688(3): mov %rcx,%r8
568b(3): mov %rdx,%rcx
568e(7): lea 0x3b7f(%rip),%rdx
5695(5): mov $0x1,%esi
569a(2): xor %eax,%eax
569c(5): call 0xffffc4a4(%rip)
56a1(5): jmp 0xfffffeeb(%rip)
56a6(a): nop 0x0(%rax,%rax,1)
56b0(4): mov 0x40(%rbx),%r10
56b4(4): mov 0x38(%rbx),%r9
56b8(7): lea 0x3d89(%rip),%rsi
56bf(4): mov 0x10(%rbx),%rax
56c3(4): mov 0x8(%rbx),%r8
56c7(5): mov $0x5,%edx
56cc(4): mov 0x30(%rbx),%r13
56d0(4): mov 0x28(%rbx),%r12
56d4(4): mov 0x20(%rbx),%r15
56d8(4): mov 0x18(%rbx),%r14
56dc(3): mov (%rbx),%rbx
56df(5): mov %r10,0x18(%rsp)
56e4(5): mov %r9,0x10(%rsp)
56e9(4): mov %rax,(%rsp)
56ed(5): mov %r8,0x8(%rsp)
56f2(2): xor %edi,%edi
56f4(5): call 0xffffc1fc(%rip)
56f9(5): mov 0x18(%rsp),%r10
56fe(2): push %r10
5700(5): jmp 0xffffff44(%rip)
5705(3): nop (%rax)
5708(3): mov (%rbx),%rbx
570b(7): lea 0x3b0d(%rip),%rsi
5712(5): mov $0x5,%edx
5717(2): xor %edi,%edi
5719(5): call 0xffffc1d7(%rip)
571e(4): add $0x28,%rsp
5722(3): mov %rbx,%rcx
5725(3): mov %rbp,%rdi
5728(1): pop %rbx
5729(1): pop %rbp
572a(2): pop %r12
572c(2): pop %r13
572e(2): pop %r14
5730(2): pop %r15
5732(3): mov %rax,%rdx
5735(5): mov $0x1,%esi
573a(2): xor %eax,%eax
573c(5): jmp 0xffffc404(%rip)
5741(7): nop 0x0(%rax)
5748(4): mov 0x8(%rbx),%r12
574c(7): lea 0x3adc(%rip),%rsi
5753(3): mov (%rbx),%rbx
5756(5): mov $0x5,%edx
575b(2): xor %edi,%edi
575d(5): call 0xffffc193(%rip)
5762(4): add $0x28,%rsp
5766(3): mov %r12,%r8
5769(3): mov %rbx,%rcx
576c(3): mov %rbp,%rdi
576f(3): mov %rax,%rdx
5772(5): mov $0x1,%esi
5777(1): pop %rbx
5778(1): pop %rbp
5779(2): pop %r12
577b(2): pop %r13
577d(2): pop %r14
577f(2): pop %r15
5781(2): xor %eax,%eax
5783(5): jmp 0xffffc3bd(%rip)
5788(8): nop 0x0(%rax,%rax,1)
5790(4): mov 0x10(%rbx),%r13
5794(4): mov 0x8(%rbx),%r12
5798(7): lea 0x3aa7(%rip),%rsi
579f(3): mov (%rbx),%rbx
57a2(5): mov $0x5,%edx
57a7(2): xor %edi,%edi
57a9(5): call 0xffffc147(%rip)
57ae(4): add $0x28,%rsp
57b2(3): mov %r13,%r9
57b5(3): mov %r12,%r8
57b8(3): mov %rbx,%rcx
57bb(3): mov %rbp,%rdi
57be(3): mov %rax,%rdx
57c1(1): pop %rbx
57c2(1): pop %rbp
57c3(2): pop %r12
57c5(2): pop %r13
57c7(2): pop %r14
57c9(2): pop %r15
57cb(5): mov $0x1,%esi
57d0(2): xor %eax,%eax
57d2(5): jmp 0xffffc36e(%rip)
57d7(9): nop 0x0(%rax,%rax,1)
57e0(7): lea 0x3b91(%rip),%rsi
57e7(5): mov $0x5,%edx
57ec(2): xor %edi,%edi
57ee(4): mov 0x18(%rbx),%r14
57f2(4): mov 0x10(%rbx),%r13
57f6(4): mov 0x8(%rbx),%r12
57fa(3): mov (%rbx),%rbx
57fd(5): call 0xffffc0f3(%rip)
5802(4): sub $0x8,%rsp
5806(2): push %r14
5808(3): mov %rax,%rdx
580b(3): mov %r13,%r9
580e(3): mov %r12,%r8
5811(3): mov %rbx,%rcx
5814(3): mov %rbp,%rdi
5817(5): mov $0x1,%esi
581c(2): xor %eax,%eax
581e(5): call 0xffffc322(%rip)
5823(1): pop %rax
5824(1): pop %rdx
5825(4): add $0x28,%rsp
5829(1): pop %rbx
582a(1): pop %rbp
582b(2): pop %r12
582d(2): pop %r13
582f(2): pop %r14
5831(2): pop %r15
5833(1): ret near (%rsp)
5834(4): nop 0x0(%rax)
5838(4): mov 0x20(%rbx),%r15
583c(7): lea 0x3b55(%rip),%rsi
5843(5): mov $0x5,%edx
5848(2): xor %edi,%edi
584a(4): mov 0x18(%rbx),%r14
584e(4): mov 0x10(%rbx),%r13
5852(4): mov 0x8(%rbx),%r12
5856(3): mov (%rbx),%rbx
5859(5): call 0xffffc097(%rip)
585e(2): push %r15
5860(2): jmp 0xffffffa6(%rip)
5862(6): nop 0x0(%rax,%rax,1)
5868(4): mov 0x8(%rbx),%r8
586c(4): mov 0x28(%rbx),%r12
5870(7): lea 0x3b49(%rip),%rsi
5877(4): mov 0x20(%rbx),%r15
587b(4): mov 0x18(%rbx),%r14
587f(5): mov $0x5,%edx
5884(4): mov 0x10(%rbx),%r13
5888(2): xor %edi,%edi
588a(3): mov (%rbx),%rbx
588d(4): mov %r8,(%rsp)
5891(5): call 0xffffc05f(%rip)
5896(4): sub $0x8,%rsp
589a(3): mov %r13,%r9
589d(2): push %r12
589f(2): push %r15
58a1(2): push %r14
58a3(5): mov 0x20(%rsp),%r8
58a8(3): mov %rbx,%rcx
58ab(3): mov %rax,%rdx
58ae(3): mov %rbp,%rdi
58b1(5): mov $0x1,%esi
58b6(2): xor %eax,%eax
58b8(5): call 0xffffc288(%rip)
58bd(4): add $0x20,%rsp
58c1(4): add $0x28,%rsp
58c5(1): pop %rbx
58c6(1): pop %rbp
58c7(2): pop %r12
58c9(2): pop %r13
58cb(2): pop %r14
58cd(2): pop %r15
58cf(1): ret near (%rsp)
58d0(4): mov 0x10(%rbx),%r9
58d4(4): mov 0x30(%rbx),%r13
58d8(7): lea 0x3b09(%rip),%rsi
58df(4): mov 0x28(%rbx),%r12
58e3(4): mov 0x20(%rbx),%r15
58e7(5): mov $0x5,%edx
58ec(4): mov 0x18(%rbx),%r14
58f0(4): mov 0x8(%rbx),%r8
58f4(2): xor %edi,%edi
58f6(5): mov %r9,0x8(%rsp)
58fb(3): mov (%rbx),%rbx
58fe(4): mov %r8,(%rsp)
5902(5): call 0xffffbfee(%rip)
5907(2): push %r13
5909(2): push %r12
590b(2): push %r15
590d(2): push %r14
590f(5): mov 0x28(%rsp),%r9
5914(2): jmp 0xffffff8f(%rip)
5916(a): nop 0x0(%rax,%rax,1)
5920(4): mov 0x40(%rbx),%r10
5924(4): mov 0x38(%rbx),%r9
5928(5): mov $0x5,%edx
592d(4): mov 0x10(%rbx),%rax
5931(4): mov 0x8(%rbx),%r8
5935(7): lea 0x3b44(%rip),%rsi
593c(4): mov 0x30(%rbx),%r13
5940(4): mov 0x28(%rbx),%r12
5944(4): mov 0x20(%rbx),%r15
5948(4): mov 0x18(%rbx),%r14
594c(5): mov %r10,0x18(%rsp)
5951(5): mov %r9,0x10(%rsp)
5956(4): mov %rax,(%rsp)
595a(5): mov %r8,0x8(%rsp)
595f(3): mov (%rbx),%rbx
5962(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5970(3): xor %r9d,%r9d
5973(4): cmp $0x0,(%r8)
5977(2): jz 0x14(%rip)
5979(7): nop 0x0(%rax)
5980(4): add $0x1,%r9
5984(5): cmp $0x0,0x0(%r8,%r9,8)
5989(2): jnz 0xfffffff7(%rip)
598b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5990(4): sub $0x68,%rsp
5994(3): mov %r8,%r10
5997(3): xor %r9d,%r9d
599a(9): mov $0x28,%rax
59a3(5): mov %rax,0x58(%rsp)
59a8(2): xor %eax,%eax
59aa(3): mov %rsp,%r8
59ad(3): nop (%rax)
59b0(3): mov (%r10),%eax
59b3(3): cmp $0x2f,%eax
59b6(2): jnbe 0x44(%rip)
59b8(3): mov %eax,%r11d
59bb(4): add 0x10(%r10),%r11
59bf(3): add $0x8,%eax
59c2(3): mov %eax,(%r10)
59c5(3): mov (%r11),%rax
59c8(3): test %rax,%rax
59cb(4): mov %rax,0x0(%r8,%r9,8)
59cf(2): jz 0xc(%rip)
59d1(4): add $0x1,%r9
59d5(4): cmp $0xa,%r9
59d9(2): jnz 0xffffffd7(%rip)
59db(5): call 0xfffffb75(%rip)
59e0(5): mov 0x58(%rsp),%rax
59e5(9): xor $0x28,%rax
59ee(2): jnz 0x7(%rip)
59f0(4): add $0x68,%rsp
59f4(1): ret near (%rsp)
59f5(5): call 0xffffbf2b(%rip)
59fa(4): mov 0x8(%r10),%r11
59fe(4): lea 0x8(%r11),%rax
5a02(4): mov %rax,0x8(%r10)
5a06(2): jmp 0xffffffbf(%rip)

"version_etc" :
5a10(1): push %rbp
5a11(1): push %rbx
5a12(6): mov $0x20,%r10d
5a18(3): xor %r11d,%r11d
5a1b(7): sub $0xb8,%rsp
5a22(9): mov $0x28,%rax
5a2b(5): mov %rax,0x78(%rsp)
5a30(2): xor %eax,%eax
5a32(8): lea 0xd0(%rsp),%rax
5a3a(8): mov %r8,0xa0(%rsp)
5a42(8): lea 0xd0(%rsp),%rbx
5a4a(5): lea 0x20(%rsp),%r8
5a4f(8): mov %r9,0xa8(%rsp)
5a57(8): mov $0x20,0x8(%rsp)
5a5f(5): mov %rax,0x10(%rsp)
5a64(8): lea 0x80(%rsp),%rax
5a6c(3): xor %r9d,%r9d
5a6f(5): mov %rax,0x18(%rsp)
5a74(3): mov %rax,%rbp
5a77(9): nop 0x0(%rax,%rax,1)
5a80(4): cmp $0x2f,%r10d
5a84(2): jnbe 0x58(%rip)
5a86(3): mov %r10d,%eax
5a89(6): mov $0x1,%r11d
5a8f(4): add $0x8,%r10d
5a93(3): add %rbp,%rax
5a96(3): mov (%rax),%rax
5a99(3): test %rax,%rax
5a9c(4): mov %rax,0x0(%r8,%r9,8)
5aa0(2): jz 0xc(%rip)
5aa2(4): add $0x1,%r9
5aa6(4): cmp $0xa,%r9
5aaa(2): jnz 0xffffffd6(%rip)
5aac(3): test %r11b,%r11b
5aaf(2): jnz 0x26(%rip)
5ab1(5): call 0xfffffa9f(%rip)
5ab6(5): mov 0x78(%rsp),%rax
5abb(9): xor $0x28,%rax
5ac4(2): jnz 0xc(%rip)
5ac6(7): add $0xb8,%rsp
5acd(1): pop %rbx
5ace(1): pop %rbp
5acf(1): ret near (%rsp)
5ad0(5): call 0xffffbe50(%rip)
5ad5(5): mov %r10d,0x8(%rsp)
5ada(2): jmp 0xffffffd7(%rip)
5adc(3): mov %rbx,%rax
5adf(4): add $0x8,%rbx
5ae3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5af0(1): push %rbx
5af1(7): lea 0x376a(%rip),%rsi
5af8(5): mov $0x5,%edx
5afd(2): xor %edi,%edi
5aff(5): call 0xffffbdf1(%rip)
5b04(7): lea 0x376c(%rip),%rdx
5b0b(3): mov %rax,%rsi
5b0e(5): mov $0x1,%edi
5b13(2): xor %eax,%eax
5b15(5): call 0xffffbfab(%rip)
5b1a(7): lea 0x376c(%rip),%rsi
5b21(5): mov $0x5,%edx
5b26(2): xor %edi,%edi
5b28(5): call 0xffffbdc8(%rip)
5b2d(7): lea 0x30e4(%rip),%rcx
5b34(7): lea 0x2acf(%rip),%rdx
5b3b(3): mov %rax,%rsi
5b3e(5): mov $0x1,%edi
5b43(2): xor %eax,%eax
5b45(5): call 0xffffbf7b(%rip)
5b4a(7): mov 0x205557(%rip),%rbx
5b51(7): lea 0x3968(%rip),%rsi
5b58(2): xor %edi,%edi
5b5a(5): mov $0x5,%edx
5b5f(5): call 0xffffbd91(%rip)
5b64(3): mov %rbx,%rsi
5b67(3): mov %rax,%rdi
5b6a(1): pop %rbx
5b6b(5): jmp 0xffffbe65(%rip)

"xmalloc" :
5b70(1): push %rbx
5b71(3): mov %rdi,%rbx
5b74(5): call 0xffffbedc(%rip)
5b79(3): test %rax,%rax
5b7c(2): jnz 0x7(%rip)
5b7e(3): test %rbx,%rbx
5b81(2): jnz 0x4(%rip)
5b83(1): pop %rbx
5b84(1): ret near (%rsp)
5b85(5): call 0x23b(%rip)

"xnmalloc" :
5b90(3): mov %rdi,%rax
5b93(3): mul %rax,%rsi,%rdx
5b96(3): mov %rax,%rdi
5b99(3): seto %al
5b9c(3): test %rdi,%rdi
5b9f(2): js 0xc(%rip)
5ba1(3): movzx %al,%eax
5ba4(3): test %rax,%rax
5ba7(2): jnz 0x4(%rip)
5ba9(2): jmp 0xffffffc7(%rip)
5bab(4): sub $0x8,%rsp
5baf(5): call 0x211(%rip)

"xrealloc" :
5bd0(3): test %rsi,%rsi
5bd3(1): push %rbx
5bd4(3): mov %rsi,%rbx
5bd7(2): jnz 0x7(%rip)
5bd9(3): test %rdi,%rdi
5bdc(2): jnz 0x1c(%rip)
5bde(3): mov %rbx,%rsi
5be1(5): call 0xffffbebf(%rip)
5be6(3): test %rax,%rax
5be9(2): jnz 0x7(%rip)
5beb(3): test %rbx,%rbx
5bee(2): jnz 0x13(%rip)
5bf0(1): pop %rbx
5bf1(1): ret near (%rsp)
5bf2(6): nop 0x0(%rax,%rax,1)
5bf8(5): call 0xffffbc18(%rip)
5bfd(2): xor %eax,%eax
5bff(1): pop %rbx
5c00(1): ret near (%rsp)
5c01(5): call 0x1bf(%rip)

"xnrealloc" :
5c10(3): mov %rsi,%rax
5c13(3): mul %rax,%rdx,%rdx
5c16(3): mov %rax,%rsi
5c19(3): seto %al
5c1c(3): test %rsi,%rsi
5c1f(2): js 0xc(%rip)
5c21(3): movzx %al,%eax
5c24(3): test %rax,%rax
5c27(2): jnz 0x4(%rip)
5c29(2): jmp 0xffffffa7(%rip)
5c2b(4): sub $0x8,%rsp
5c2f(5): call 0x191(%rip)

"x2nrealloc" :
5c40(3): test %rdi,%rdi
5c43(3): mov %rdx,%r9
5c46(3): mov (%rsi),%rcx
5c49(2): jz 0x37(%rip)
5c4b(2): xor %edx,%edx
5c4d(a): mov $0x6148914691236517204,%rax
5c57(3): div %r9,%rax
5c5a(3): cmp %rcx,%rax
5c5d(2): jbe 0x3e(%rip)
5c5f(3): mov %rcx,%rax
5c62(3): shr $0x1,%rax
5c65(5): lea 0x1(%rax,%rcx,1),%rcx
5c6a(3): mov %rcx,(%rsi)
5c6d(4): imul %r9,%rcx
5c71(3): mov %rcx,%rsi
5c74(5): jmp 0xffffff5c(%rip)
5c79(7): nop 0x0(%rax)
5c80(3): test %rcx,%rcx
5c83(2): jz 0x25(%rip)
5c85(3): mov %rcx,%rax
5c88(3): mul %rax,%r9,%rdx
5c8b(3): seto %dl
5c8e(3): test %rax,%rax
5c91(3): movzx %dl,%edx
5c94(2): js 0x7(%rip)
5c96(3): test %rdx,%rdx
5c99(2): jz 0xffffffd1(%rip)
5c9b(4): sub $0x8,%rsp
5c9f(5): call 0x121(%rip)
5ca4(4): nop 0x0(%rax)
5ca8(2): xor %edx,%edx
5caa(5): mov $0x80,%eax
5caf(3): xor %r8d,%r8d
5cb2(3): div %r9,%rax
5cb5(3): test %rax,%rax
5cb8(4): setz %r8b
5cbc(4): lea 0x0(%r8,%rax,1),%rcx
5cc0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5cd0(3): test %rdi,%rdi
5cd3(3): mov (%rsi),%rax
5cd6(2): jz 0x2a(%rip)
5cd8(a): mov $0x6148914691236517203,%rdx
5ce2(3): cmp %rdx,%rax
5ce5(2): jnbe 0x2c(%rip)
5ce7(3): mov %rax,%rdx
5cea(3): shr $0x1,%rdx
5ced(5): lea 0x1(%rdx,%rax,1),%rax
5cf2(3): mov %rax,(%rsi)
5cf5(3): mov %rax,%rsi
5cf8(5): jmp 0xfffffed8(%rip)
5cfd(3): nop (%rax)
5d00(3): test %rax,%rax
5d03(5): mov $0x80,%edx
5d08(4): cmove %rdx,%rax
5d0c(3): test %rax,%rax
5d0f(2): jns 0xffffffe3(%rip)
5d11(4): sub $0x8,%rsp
5d15(5): call 0xab(%rip)

"xzalloc" :
5d20(1): push %rbx
5d21(3): mov %rdi,%rbx
5d24(5): call 0xfffffe4c(%rip)
5d29(3): mov %rbx,%rdx
5d2c(2): xor %esi,%esi
5d2e(3): mov %rax,%rdi
5d31(1): pop %rbx
5d32(5): jmp 0xffffbc6e(%rip)

"xcalloc" :
5d40(3): mov %rdi,%rax
5d43(4): sub $0x8,%rsp
5d47(3): mul %rax,%rsi,%rdx
5d4a(3): seto %dl
5d4d(3): test %rax,%rax
5d50(2): js 0x19(%rip)
5d52(3): movzx %dl,%edx
5d55(3): test %rdx,%rdx
5d58(2): jnz 0x11(%rip)
5d5a(5): call 0xffffbc86(%rip)
5d5f(3): test %rax,%rax
5d62(2): jz 0x7(%rip)
5d64(4): add $0x8,%rsp
5d68(1): ret near (%rsp)
5d69(5): call 0x57(%rip)

"xmemdup" :
5d70(1): push %rbp
5d71(1): push %rbx
5d72(3): mov %rdi,%rbp
5d75(3): mov %rsi,%rdi
5d78(3): mov %rsi,%rbx
5d7b(4): sub $0x8,%rsp
5d7f(5): call 0xfffffdf1(%rip)
5d84(4): add $0x8,%rsp
5d88(3): mov %rbx,%rdx
5d8b(3): mov %rbp,%rsi
5d8e(1): pop %rbx
5d8f(1): pop %rbp
5d90(3): mov %rax,%rdi
5d93(5): jmp 0xffffbc6d(%rip)

"xstrdup" :
5da0(1): push %rbx
5da1(3): mov %rdi,%rbx
5da4(5): call 0xffffbb6c(%rip)
5da9(3): mov %rbx,%rdi
5dac(4): lea 0x1(%rax),%rsi
5db0(1): pop %rbx
5db1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5dc0(7): lea 0x37a8(%rip),%rsi
5dc7(4): sub $0x8,%rsp
5dcb(5): mov $0x5,%edx
5dd0(2): xor %edi,%edi
5dd2(5): call 0xffffbb1e(%rip)
5dd7(6): mov 0x20524b(%rip),%edi
5ddd(7): lea 0x2efd(%rip),%rdx
5de4(3): mov %rax,%rcx
5de7(2): xor %esi,%esi
5de9(2): xor %eax,%eax
5deb(5): call 0xffffbd05(%rip)
5df0(5): call 0xffffba40(%rip)

"rpl_asprintf" :
5e00(7): sub $0xd8,%rsp
5e07(2): test %al,%al
5e09(5): mov %rdx,0x30(%rsp)
5e0e(5): mov %rcx,0x38(%rsp)
5e13(5): mov %r8,0x40(%rsp)
5e18(5): mov %r9,0x48(%rsp)
5e1d(2): jz 0x39(%rip)
5e1f(5): movaps %xmm0,0x50(%rsp)
5e24(5): movaps %xmm1,0x60(%rsp)
5e29(5): movaps %xmm2,0x70(%rsp)
5e2e(8): movaps %xmm3,0x80(%rsp)
5e36(8): movaps %xmm4,0x90(%rsp)
5e3e(8): movaps %xmm5,0xa0(%rsp)
5e46(8): movaps %xmm6,0xb0(%rsp)
5e4e(8): movaps %xmm7,0xc0(%rsp)
5e56(9): mov $0x28,%rax
5e5f(5): mov %rax,0x18(%rsp)
5e64(2): xor %eax,%eax
5e66(8): lea 0xe0(%rsp),%rax
5e6e(3): mov %rsp,%rdx
5e71(5): mov %rax,0x8(%rsp)
5e76(5): lea 0x20(%rsp),%rax
5e7b(7): mov $0x10,(%rsp)
5e82(8): mov $0x30,0x4(%rsp)
5e8a(5): mov %rax,0x10(%rsp)
5e8f(5): call 0x2b1(%rip)
5e94(5): mov 0x18(%rsp),%rcx
5e99(9): xor $0x28,%rcx
5ea2(2): jnz 0xa(%rip)
5ea4(7): add $0xd8,%rsp
5eab(1): ret near (%rsp)
5eac(5): call 0xffffba74(%rip)

"rpl_mbrtowc" :
5ec0(2): push %r13
5ec2(2): push %r12
5ec4(3): mov %rsi,%r13
5ec7(1): push %rbp
5ec8(1): push %rbx
5ec9(3): mov %rdi,%rbx
5ecc(3): mov %rdx,%r12
5ecf(4): sub $0x18,%rsp
5ed3(9): mov $0x28,%rax
5edc(5): mov %rax,0x8(%rsp)
5ee1(2): xor %eax,%eax
5ee3(5): lea 0x4(%rsp),%rax
5ee8(3): test %rdi,%rdi
5eeb(4): cmove %rax,%rbx
5eef(3): mov %rbx,%rdi
5ef2(5): call 0xffffba4e(%rip)
5ef7(4): cmp $0xfffffffd,%rax
5efb(3): mov %rax,%rbp
5efe(2): jbe 0x22(%rip)
5f00(3): test %r12,%r12
5f03(2): jz 0x1d(%rip)
5f05(2): xor %edi,%edi
5f07(5): call 0xffffd819(%rip)
5f0c(2): test %al,%al
5f0e(2): jnz 0x12(%rip)
5f10(5): movzx 0x0(%r13),%eax
5f15(5): mov $0x1,%ebp
5f1a(2): mov %eax,(%rbx)
5f1c(4): nop 0x0(%rax)
5f20(5): mov 0x8(%rsp),%rdx
5f25(9): xor $0x28,%rdx
5f2e(3): mov %rbp,%rax
5f31(2): jnz 0xd(%rip)
5f33(4): add $0x18,%rsp
5f37(1): pop %rbx
5f38(1): pop %rbp
5f39(2): pop %r12
5f3b(2): pop %r13
5f3d(1): ret near (%rsp)
5f3e(5): call 0xffffb9e2(%rip)

"extract_trimmed_name" :
5f50(1): push %rbp
5f51(1): push %rbx
5f52(3): mov %rdi,%rbp
5f55(5): mov $0x21,%edi
5f5a(4): sub $0x8,%rsp
5f5e(5): call 0xfffffc12(%rip)
5f63(4): lea 0x2c(%rbp),%rsi
5f67(3): mov %rax,%rbx
5f6a(5): mov $0x20,%edx
5f6f(3): mov %rax,%rdi
5f72(5): call 0xffffb8de(%rip)
5f77(3): mov %rbx,%rdi
5f7a(4): mov $0x0,0x20(%rbx)
5f7e(5): call 0xffffb992(%rip)
5f83(3): add %rbx,%rax
5f86(3): cmp %rax,%rbx
5f89(2): jnb 0x8(%rip)
5f8b(4): cmp $0x20,0xffffffff(%rax)
5f8f(2): jz 0x11(%rip)
5f91(4): add $0x8,%rsp
5f95(3): mov %rbx,%rax
5f98(1): pop %rbx
5f99(1): pop %rbp
5f9a(1): ret near (%rsp)
5f9b(5): nop 0x0(%rax,%rax,1)
5fa0(4): sub $0x1,%rax
5fa4(3): mov $0x0,(%rax)
5fa7(3): cmp %rax,%rbx
5faa(2): jnz 0xffffffe1(%rip)
5fac(2): jmp 0xffffffe5(%rip)

"read_utmp" :
5fb0(2): push %r15
5fb2(2): push %r14
5fb4(3): xor %r14d,%r14d
5fb7(2): push %r13
5fb9(3): mov %ecx,%r13d
5fbc(2): push %r12
5fbe(1): push %rbp
5fbf(1): push %rbx
5fc0(3): mov %r13d,%r12d
5fc3(2): xor %ebx,%ebx
5fc5(2): xor %ebp,%ebp
5fc7(4): and $0x2,%r12d
5fcb(4): sub $0x18,%rsp
5fcf(4): and $0x1,%r13d
5fd3(4): mov %rsi,(%rsp)
5fd7(5): mov %rdx,0x8(%rsp)
5fdc(5): call 0xffffb814(%rip)
5fe1(5): call 0xffffba0f(%rip)
5fe6(5): call 0xffffbafa(%rip)
5feb(3): test %rax,%rax
5fee(3): mov %rax,%r15
5ff1(2): jz 0x70(%rip)
5ff3(5): cmp $0x7,(%r15)
5ff8(2): jnz 0xd(%rip)
5ffa(5): cmp $0x0,0x2c(%r15)
5fff(6): jnz 0x91(%rip)
6005(3): test %r12d,%r12d
6008(2): jnz 0xffffffde(%rip)
600a(3): cmp %rbx,%rbp
600d(6): jz 0xc3(%rip)
6013(4): lea 0x0(%rbx,%rbx,2),%rax
6017(3): mov (%r15),%rdx
601a(3): mov %r15,%rsi
601d(4): add $0x1,%rbx
6021(4): shl/sal $0x7,%rax
6025(3): add %r14,%rax
6028(3): mov %rdx,(%rax)
602b(4): lea 0x8(%rax),%rdi
602f(7): mov 0x178(%r15),%rdx
6036(4): and $0xfffffff8,%rdi
603a(7): mov %rdx,0x178(%rax)
6041(3): sub %rdi,%rax
6044(3): sub %rax,%rsi
6047(5): add $0x180,%eax
604c(3): shr $0x3,%eax
604f(2): mov %eax,%ecx
6051(3): REP movsd rsi(%ds,10),rdi(%es,10)
6054(5): call 0xffffba8c(%rip)
6059(3): test %rax,%rax
605c(3): mov %rax,%r15
605f(2): jnz 0xffffff94(%rip)
6061(5): call 0xffffb85f(%rip)
6066(4): mov (%rsp),%rax
606a(3): mov %rbx,(%rax)
606d(5): mov 0x8(%rsp),%rax
6072(3): mov %r14,(%rax)
6075(4): add $0x18,%rsp
6079(2): xor %eax,%eax
607b(1): pop %rbx
607c(1): pop %rbp
607d(2): pop %r12
607f(2): pop %r13
6081(2): pop %r14
6083(2): pop %r15
6085(1): ret near (%rsp)
6086(a): nop 0x0(%rax,%rax,1)
6090(4): mov 0x4(%r15),%edi
6094(2): test %edi,%edi
6096(6): jle 0xffffff74(%rip)
609c(3): test %r13b,%r13b
609f(6): jz 0xffffff6b(%rip)
60a5(2): xor %esi,%esi
60a7(5): call 0xffffb969(%rip)
60ac(2): test %eax,%eax
60ae(6): jns 0xffffff5c(%rip)
60b4(5): call 0xffffb78c(%rip)
60b9(3): cmp $0x3,(%rax)
60bc(6): jz 0xffffff2a(%rip)
60c2(3): cmp %rbx,%rbp
60c5(6): jnz 0xffffff4e(%rip)
60cb(5): nop 0x0(%rax,%rax,1)
60d0(3): test %r14,%r14
60d3(2): jz 0x35(%rip)
60d5(a): mov $0x16012798675095095,%rax
60df(3): cmp %rax,%rbp
60e2(2): jnbe 0x4b(%rip)
60e4(3): mov %rbp,%rax
60e7(3): shr $0x1,%rax
60ea(5): lea 0x1(%rbp,%rax,1),%rbp
60ef(5): lea 0x0(%rbp,%rbp,2),%rsi
60f4(3): mov %r14,%rdi
60f7(4): shl/sal $0x7,%rsi
60fb(5): call 0xfffffad5(%rip)
6100(3): mov %rax,%r14
6103(5): jmp 0xffffff10(%rip)
6108(3): test %rbp,%rbp
610b(5): mov $0x1,%eax
6110(5): mov $0x180,%edx
6115(4): cmove %rax,%rbp
6119(3): mov %rdx,%rax
611c(2): xor %esi,%esi
611e(3): mul %rax,%rbp,%rdx
6121(2): jo 0x11(%rip)
6123(3): test %rax,%rax
6126(2): js 0x7(%rip)
6128(3): test %rsi,%rsi
612b(2): jz 0xffffffc4(%rip)
612d(5): call 0xfffffc93(%rip)
6132(5): mov $0x1,%esi
6137(2): jmp 0xffffffec(%rip)

"rpl_vasprintf" :
6140(1): push %rbx
6141(3): mov %rsi,%rax
6144(3): mov %rdi,%rbx
6147(2): xor %edi,%edi
6149(4): sub $0x10,%rsp
614d(9): mov $0x28,%rcx
6156(5): mov %rcx,0x8(%rsp)
615b(2): xor %ecx,%ecx
615d(3): mov %rsp,%rsi
6160(3): mov %rdx,%rcx
6163(3): mov %rax,%rdx
6166(5): call 0x23a(%rip)
616b(3): test %rax,%rax
616e(2): jz 0x44(%rip)
6170(4): mov (%rsp),%rdx
6174(7): cmp $0x7fffffff,%rdx
617b(2): jnbe 0x1d(%rip)
617d(3): mov %rax,(%rbx)
6180(2): mov %edx,%eax
6182(5): mov 0x8(%rsp),%rbx
6187(9): xor $0x28,%rbx
6190(2): jnz 0x29(%rip)
6192(4): add $0x10,%rsp
6196(1): pop %rbx
6197(1): ret near (%rsp)
6198(3): mov %rax,%rdi
619b(5): call 0xffffb675(%rip)
61a0(5): call 0xffffb6a0(%rip)
61a5(6): mov $0x4b,(%rax)
61ab(5): mov $0xffffffff,%eax
61b0(2): jmp 0xffffffd2(%rip)
61b2(5): mov $0xffffffff,%eax
61b7(2): jmp 0xffffffcb(%rip)
61b9(5): call 0xffffb767(%rip)

"close_stream" :
61c0(2): push %r12
61c2(1): push %rbp
61c3(3): mov %rdi,%rbp
61c6(1): push %rbx
61c7(5): call 0xffffb6c9(%rip)
61cc(3): mov 0x0(%rbp),%ebx
61cf(3): mov %rbp,%rdi
61d2(3): mov %rax,%r12
61d5(5): call 0xab(%rip)
61da(3): and $0x20,%ebx
61dd(2): test %ebx,%ebx
61df(2): jnz 0x19(%rip)
61e1(2): test %eax,%eax
61e3(2): jz 0xc(%rip)
61e5(3): test %r12,%r12
61e8(5): mov $0xffffffff,%eax
61ed(2): jz 0x3b(%rip)
61ef(1): pop %rbx
61f0(1): pop %rbp
61f1(2): pop %r12
61f3(1): ret near (%rsp)
61f4(4): nop 0x0(%rax)
61f8(2): test %eax,%eax
61fa(2): jnz 0x1e(%rip)
61fc(5): call 0xffffb644(%rip)
6201(6): mov $0x0,(%rax)
6207(5): mov $0xffffffff,%eax
620c(1): pop %rbx
620d(1): pop %rbp
620e(2): pop %r12
6210(1): ret near (%rsp)
6211(7): nop 0x0(%rax)
6218(1): pop %rbx
6219(5): mov $0xffffffff,%eax
621e(1): pop %rbp
621f(2): pop %r12
6221(1): ret near (%rsp)
6222(6): nop 0x0(%rax,%rax,1)
6228(5): call 0xffffb618(%rip)
622d(3): cmp $0x9,(%rax)
6230(1): pop %rbx
6231(1): pop %rbp
6232(2): pop %r12
6234(3): setnz %al
6237(3): movzx %al,%eax
623a(2): neg %eax
623c(1): ret near (%rsp)

"locale_charset" :
6240(4): sub $0x8,%rsp
6244(5): mov $0xe,%edi
6249(5): call 0xffffb827(%rip)
624e(3): test %rax,%rax
6251(2): jz 0x1f(%rip)
6253(3): cmp $0x0,(%rax)
6256(7): lea 0x3323(%rip),%rdx
625d(4): cmove %rdx,%rax
6261(4): add $0x8,%rsp
6265(1): ret near (%rsp)
6266(a): nop 0x0(%rax,%rax,1)
6270(7): lea 0x3309(%rip),%rax
6277(4): add $0x8,%rsp
627b(1): ret near (%rsp)

"rpl_fclose" :
6280(2): push %r12
6282(1): push %rbp
6283(1): push %rbx
6284(3): mov %rdi,%rbx
6287(5): call 0xffffb7a9(%rip)
628c(2): test %eax,%eax
628e(3): mov %rbx,%rdi
6291(2): js 0x56(%rip)
6293(5): call 0xffffb7ed(%rip)
6298(2): test %eax,%eax
629a(2): jnz 0x2e(%rip)
629c(3): mov %rbx,%rdi
629f(5): call 0x61(%rip)
62a4(2): test %eax,%eax
62a6(2): jz 0x3e(%rip)
62a8(5): call 0xffffb598(%rip)
62ad(3): mov (%rax),%r12d
62b0(3): mov %rbx,%rdi
62b3(3): mov %rax,%rbp
62b6(5): call 0xffffb61a(%rip)
62bb(3): test %r12d,%r12d
62be(2): jnz 0x32(%rip)
62c0(1): pop %rbx
62c1(1): pop %rbp
62c2(2): pop %r12
62c4(1): ret near (%rsp)
62c5(3): nop (%rax)
62c8(3): mov %rbx,%rdi
62cb(5): call 0xffffb765(%rip)
62d0(2): xor %esi,%esi
62d2(5): mov $0x1,%edx
62d7(2): mov %eax,%edi
62d9(5): call 0xffffb6a7(%rip)
62de(4): cmp $0xffffffff,%rax
62e2(2): jnz 0xffffffba(%rip)
62e4(3): mov %rbx,%rdi
62e7(1): pop %rbx
62e8(1): pop %rbp
62e9(2): pop %r12
62eb(5): jmp 0xffffb5e5(%rip)
62f0(4): mov %r12d,0x0(%rbp)
62f4(5): mov $0xffffffff,%eax
62f9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
6300(3): test %rdi,%rdi
6303(1): push %rbx
6304(3): mov %rdi,%rbx
6307(2): jz 0x13(%rip)
6309(5): call 0xffffb777(%rip)
630e(2): test %eax,%eax
6310(2): jz 0xa(%rip)
6312(6): test $0x100,(%rbx)
6318(2): jnz 0x10(%rip)
631a(3): mov %rbx,%rdi
631d(1): pop %rbx
631e(5): jmp 0xffffb742(%rip)
6323(5): nop 0x0(%rax,%rax,1)
6328(3): mov %rbx,%rdi
632b(5): mov $0x1,%edx
6330(2): xor %esi,%esi
6332(5): call 0xe(%rip)
6337(3): mov %rbx,%rdi
633a(1): pop %rbx
633b(5): jmp 0xffffb725(%rip)

"rpl_fseeko" :
6340(4): mov 0x8(%rdi),%rax
6344(4): cmp %rax,0x10(%rdi)
6348(2): jz 0x8(%rip)
634a(5): jmp 0xffffb7b6(%rip)
634f(1): nop 
6350(4): mov 0x20(%rdi),%rax
6354(4): cmp %rax,0x28(%rdi)
6358(2): jnz 0xfffffff2(%rip)
635a(5): cmp $0x0,0x48(%rdi)
635f(2): jnz 0xffffffeb(%rip)
6361(2): push %r12
6363(1): push %rbp
6364(3): mov %edx,%r12d
6367(1): push %rbx
6368(3): mov %rsi,%rbp
636b(3): mov %rdi,%rbx
636e(5): call 0xffffb6c2(%rip)
6373(3): mov %r12d,%edx
6376(3): mov %rbp,%rsi
6379(2): mov %eax,%edi
637b(5): call 0xffffb605(%rip)
6380(4): cmp $0xffffffff,%rax
6384(2): jz 0xe(%rip)
6386(3): and $0xef,(%rbx)
6389(7): mov %rax,0x90(%rbx)
6390(2): xor %eax,%eax
6392(1): pop %rbx
6393(1): pop %rbp
6394(2): pop %r12
6396(1): ret near (%rsp)

"vasnprintf" :
63a0(1): push %rbp
63a1(3): mov %rsp,%rbp
63a4(2): push %r15
63a6(2): push %r14
63a8(2): push %r13
63aa(2): push %r12
63ac(7): lea 0xfffffc50(%rbp),%r14
63b3(1): push %rbx
63b4(3): mov %rdx,%rbx
63b7(3): mov %rcx,%r12
63ba(3): mov %r14,%rdx
63bd(7): sub $0x408,%rsp
63c4(7): mov %rsi,0xfffffbe8(%rbp)
63cb(7): lea 0xfffffd40(%rbp),%rsi
63d2(7): mov %rdi,0xfffffc18(%rbp)
63d9(3): mov %rbx,%rdi
63dc(7): mov %r14,0xfffffbf0(%rbp)
63e3(9): mov $0x28,%rax
63ec(4): mov %rax,0xffffffc8(%rbp)
63f0(2): xor %eax,%eax
63f2(7): mov %rsi,0xfffffbf8(%rbp)
63f9(5): call 0x12c7(%rip)
63fe(2): test %eax,%eax
6400(6): js 0xe68(%rip)
6406(3): mov %r14,%rsi
6409(3): mov %r12,%rdi
640c(5): call 0x10b4(%rip)
6411(2): test %eax,%eax
6413(6): js 0xebd(%rip)
6419(7): mov 0xfffffd50(%rbp),%rax
6420(7): mov $0xffffffff,%rdx
6427(4): add $0x7,%rax
642b(4): cmp $0x6,%rax
642f(4): cmovbe %rdx,%rax
6433(7): add 0xfffffd58(%rbp),%rax
643a(6): jb 0xa2e(%rip)
6440(3): mov %rax,%rdi
6443(3): xor %r8d,%r8d
6446(4): add $0x6,%rdi
644a(4): setb %r8b
644e(6): jb 0xa1a(%rip)
6454(7): cmp $0xf9f,%rdi
645b(6): jbe 0x14d(%rip)
6461(4): cmp $0xffffffff,%rdi
6465(7): mov %r8,0xfffffc38(%rbp)
646c(6): jz 0x9fc(%rip)
6472(5): call 0xffffb5de(%rip)
6477(3): test %rax,%rax
647a(7): mov %rax,0xfffffc28(%rbp)
6481(6): jz 0x9e7(%rip)
6487(7): mov 0xfffffc38(%rbp),%r8
648e(7): mov %rax,0xfffffbe0(%rbp)
6495(3): xor %r12d,%r12d
6498(8): cmp $0x0,0xfffffc18(%rbp)
64a0(2): jz 0xc(%rip)
64a2(7): mov 0xfffffbe8(%rbp),%rax
64a9(3): mov (%rax),%r12
64ac(7): mov 0xfffffd48(%rbp),%r13
64b3(7): lea 0xfffffc44(%rbp),%rax
64ba(7): mov 0xfffffc18(%rbp),%r15
64c1(b): mov $0x0,0xfffffc00(%rbp)
64cc(7): mov %rax,0xfffffc10(%rbp)
64d3(3): mov %rbx,%rax
64d6(3): mov %r8,%rbx
64d9(4): mov 0x0(%r13),%rcx
64dd(3): mov %rax,%r8
64e0(3): cmp %r8,%rcx
64e3(6): jz 0x96e(%rip)
64e9(3): sub %r8,%rcx
64ec(3): mov %rbx,%rax
64ef(3): add %rcx,%rax
64f2(3): mov %rax,%r14
64f5(6): jnb 0xe3(%rip)
64fb(4): cmp $0xffffffff,%r12
64ff(6): jz 0xad1(%rip)
6505(5): call 0xffffb33b(%rip)
650a(7): mov %rax,0xfffffc38(%rbp)
6511(7): cmp 0xfffffc18(%rbp),%r15
6518(2): jz 0xb(%rip)
651a(3): test %r15,%r15
651d(6): jnz 0xae3(%rip)
6523(7): mov 0xfffffbe0(%rbp),%rax
652a(3): test %rax,%rax
652d(2): jz 0xa(%rip)
652f(3): mov %rax,%rdi
6532(5): call 0xffffb2de(%rip)
6537(7): mov 0xfffffbf8(%rbp),%rax
653e(7): mov 0xfffffd48(%rbp),%rdi
6545(4): add $0x20,%rax
6549(3): cmp %rax,%rdi
654c(2): jz 0x7(%rip)
654e(5): call 0xffffb2c2(%rip)
6553(7): mov 0xfffffbf0(%rbp),%rax
655a(7): mov 0xfffffc58(%rbp),%rdi
6561(4): add $0x10,%rax
6565(3): cmp %rax,%rdi
6568(2): jz 0x7(%rip)
656a(5): call 0xffffb2a6(%rip)
656f(7): mov 0xfffffc38(%rbp),%rax
6576(3): xor %r15d,%r15d
6579(6): mov $0xc,(%rax)
657f(4): mov 0xffffffc8(%rbp),%rdi
6583(9): xor $0x28,%rdi
658c(3): mov %r15,%rax
658f(6): jnz 0xf08(%rip)
6595(4): lea 0xffffffd8(%rbp),%rsp
6599(1): pop %rbx
659a(2): pop %r12
659c(2): pop %r13
659e(2): pop %r14
65a0(2): pop %r15
65a2(1): pop %rbp
65a3(1): ret near (%rsp)
65a4(4): nop 0x0(%rax)
65a8(4): add $0x24,%rax
65ac(b): mov $0x0,0xfffffbe0(%rbp)
65b7(4): and $0xfffffff0,%rax
65bb(3): sub %rax,%rsp
65be(5): lea 0xf(%rsp),%rax
65c3(4): and $0xfffffff0,%rax
65c7(7): mov %rax,0xfffffc28(%rbp)
65ce(5): jmp 0xfffffec7(%rip)
65d3(5): nop 0x0(%rax,%rax,1)
65d8(3): cmp %rax,%r12
65db(2): jnb 0x69(%rip)
65dd(3): test %r12,%r12
65e0(6): jnz 0x930(%rip)
65e6(4): cmp $0xc,%rax
65ea(6): jnbe 0x938(%rip)
65f0(6): mov $0xc,%r12d
65f6(7): cmp 0xfffffc18(%rbp),%r15
65fd(3): setz %dl
6600(3): test %r15,%r15
6603(6): jz 0x945(%rip)
6609(2): test %dl,%dl
660b(6): jnz 0x93d(%rip)
6611(3): mov %r12,%rsi
6614(3): mov %r15,%rdi
6617(7): mov %r8,0xfffffc30(%rbp)
661e(7): mov %rcx,0xfffffc38(%rbp)
6625(5): call 0xffffb47b(%rip)
662a(3): test %rax,%rax
662d(7): mov 0xfffffc38(%rbp),%rcx
6634(7): mov 0xfffffc30(%rbp),%r8
663b(6): jz 0x9b0(%rip)
6641(3): mov %rax,%r15
6644(4): lea 0x0(%r15,%rbx,1),%rdi
6648(3): mov %rcx,%rdx
664b(3): mov %r8,%rsi
664e(5): call 0xffffb3b2(%rip)
6653(7): mov 0xfffffc00(%rbp),%rax
665a(7): cmp %rax,0xfffffd40(%rbp)
6661(6): jz 0xcba(%rip)
6667(5): movzx 0x48(%r13),%edx
666c(4): mov 0x50(%r13),%rax
6670(3): cmp $0x25,%dl
6673(6): jz 0x795(%rip)
6679(4): cmp $0xffffffff,%rax
667d(6): jz 0xc49(%rip)
6683(7): mov 0xfffffc58(%rbp),%r8
668a(4): shl/sal $0x5,%rax
668e(3): add %r8,%rax
6691(3): cmp $0x6e,%dl
6694(2): mov (%rax),%edi
6696(6): mov %edi,0xfffffc30(%rbp)
669c(6): jz 0x7e4(%rip)
66a2(4): mov 0x10(%r13),%eax
66a6(7): mov 0xfffffc28(%rbp),%rdi
66ad(2): test $0x1,%al
66af(3): mov $0x25,(%rdi)
66b2(4): lea 0x1(%rdi),%rbx
66b6(2): jz 0x11(%rip)
66b8(7): mov 0xfffffc28(%rbp),%rdi
66bf(4): lea 0x2(%rdi),%rbx
66c3(4): mov $0x27,0x1(%rdi)
66c7(2): test $0x2,%al
66c9(2): jz 0x9(%rip)
66cb(3): mov $0x2d,(%rbx)
66ce(4): add $0x1,%rbx
66d2(2): test $0x4,%al
66d4(2): jz 0x9(%rip)
66d6(3): mov $0x2b,(%rbx)
66d9(4): add $0x1,%rbx
66dd(2): test $0x8,%al
66df(2): jz 0x9(%rip)
66e1(3): mov $0x20,(%rbx)
66e4(4): add $0x1,%rbx
66e8(2): test $0x10,%al
66ea(2): jz 0x9(%rip)
66ec(3): mov $0x23,(%rbx)
66ef(4): add $0x1,%rbx
66f3(2): test $0x40,%al
66f5(2): jz 0x9(%rip)
66f7(3): mov $0x49,(%rbx)
66fa(4): add $0x1,%rbx
66fe(2): test $0x20,%al
6700(2): jz 0x9(%rip)
6702(3): mov $0x30,(%rbx)
6705(4): add $0x1,%rbx
6709(4): mov 0x18(%r13),%rsi
670d(4): mov 0x20(%r13),%rdx
6711(3): cmp %rdx,%rsi
6714(2): jz 0x32(%rip)
6716(3): mov %rdx,%rcx
6719(3): mov %rbx,%rdi
671c(7): mov %r8,0xfffffc20(%rbp)
6723(3): sub %rsi,%rcx
6726(3): mov %rcx,%rdx
6729(7): mov %rcx,0xfffffc38(%rbp)
6730(5): call 0xffffb2d0(%rip)
6735(7): mov 0xfffffc38(%rbp),%rcx
673c(7): mov 0xfffffc20(%rbp),%r8
6743(3): add %rcx,%rbx
6746(4): mov 0x30(%r13),%rsi
674a(4): mov 0x38(%r13),%rdx
674e(3): cmp %rdx,%rsi
6751(2): jz 0x32(%rip)
6753(3): mov %rdx,%rcx
6756(3): mov %rbx,%rdi
6759(7): mov %r8,0xfffffc20(%rbp)
6760(3): sub %rsi,%rcx
6763(3): mov %rcx,%rdx
6766(7): mov %rcx,0xfffffc38(%rbp)
676d(5): call 0xffffb293(%rip)
6772(7): mov 0xfffffc38(%rbp),%rcx
6779(7): mov 0xfffffc20(%rbp),%r8
6780(3): add %rcx,%rbx
6783(6): mov 0xfffffc30(%rbp),%edi
6789(3): cmp $0x10,%edi
678c(2): jnbe 0x2f(%rip)
678e(5): mov $0x1,%eax
6793(2): mov %edi,%ecx
6795(3): shl/sal %cl,%rax
6798(5): test $0x14180,%eax
679d(2): jnz 0x17(%rip)
679f(3): test $0x10,%ah
67a2(6): jnz 0x95e(%rip)
67a8(3): test $0x6,%ah
67ab(2): jz 0x10(%rip)
67ad(3): mov $0x6c,(%rbx)
67b0(4): add $0x1,%rbx
67b4(3): mov $0x6c,(%rbx)
67b7(4): add $0x1,%rbx
67bb(5): movzx 0x48(%r13),%eax
67c0(4): mov $0x0,0x1(%rbx)
67c4(2): mov %al,(%rbx)
67c6(4): mov 0x28(%r13),%rax
67ca(4): cmp $0xffffffff,%rax
67ce(6): jz 0x732(%rip)
67d4(4): shl/sal $0x5,%rax
67d8(3): add %r8,%rax
67db(3): cmp $0x5,(%rax)
67de(6): jnz 0xae8(%rip)
67e4(3): mov 0x10(%rax),%eax
67e7(a): mov $0x1,0xfffffc20(%rbp)
67f1(6): mov %eax,0xfffffc48(%rbp)
67f7(4): mov 0x40(%r13),%rax
67fb(4): cmp $0xffffffff,%rax
67ff(2): jz 0x2d(%rip)
6801(4): shl/sal $0x5,%rax
6805(3): add %rax,%r8
6808(4): cmp $0x5,(%r8)
680c(6): jnz 0xaba(%rip)
6812(6): mov 0xfffffc20(%rbp),%eax
6818(4): mov 0x10(%r8),%edx
681c(7): mov %edx,0xfffffc48(%rbp,%rax,4)
6823(3): lea 0x1(%rax),%eax
6826(6): mov %eax,0xfffffc20(%rbp)
682c(3): mov %r14,%rax
682f(2): xor %edx,%edx
6831(4): add $0x2,%rax
6835(6): jb 0xc67(%rip)
683b(3): cmp %rax,%r12
683e(2): jnb 0x4d(%rip)
6840(3): test %r12,%r12
6843(6): jnz 0x825(%rip)
6849(4): cmp $0xc,%rax
684d(6): jnbe 0x833(%rip)
6853(6): mov $0xc,%r12d
6859(7): cmp 0xfffffc18(%rbp),%r15
6860(3): setz %dl
6863(3): test %r15,%r15
6866(6): jz 0x84a(%rip)
686c(2): test %dl,%dl
686e(6): jnz 0x842(%rip)
6874(3): mov %r12,%rsi
6877(3): mov %r15,%rdi
687a(5): call 0xffffb226(%rip)
687f(3): test %rax,%rax
6882(6): jz 0xfffffc83(%rip)
6888(3): mov %rax,%r15
688b(5): mov $0x0,0x0(%r15,%r14,1)
6890(5): call 0xffffafb0(%rip)
6895(7): mov %rax,0xfffffc38(%rbp)
689c(2): mov (%rax),%eax
689e(7): mov %rbx,0xfffffc08(%rbp)
68a5(6): mov %eax,0xfffffbdc(%rbp)
68ab(5): nop 0x0(%rax,%rax,1)
68b0(7): mov 0xfffffc38(%rbp),%rax
68b7(3): mov %r12,%rbx
68ba(6): mov $0x7fffffff,%r10d
68c0(3): sub %r14,%rbx
68c3(a): mov $0xffffffff,0xfffffc44(%rbp)
68cd(7): cmp $0x7fffffff,%rbx
68d4(6): mov $0x0,(%rax)
68da(6): mov 0xfffffc30(%rbp),%eax
68e0(4): cmovbe %rbx,%r10
68e4(3): cmp $0x11,%eax
68e7(6): jnbe 0x9df(%rip)
68ed(7): lea 0x2c94(%rip),%rsi
68f4(4): movsxd 0x0(%rsi,%rax,4),%rax
68f8(3): add %rsi,%rax
68fb(2): jmp %rax
68fd(3): nop (%rax)
6900(4): mov 0x50(%r13),%rax
6904(4): lea 0x0(%r15,%r14,1),%rdi
6908(4): shl/sal $0x5,%rax
690c(7): add 0xfffffc58(%rbp),%rax
6913(4): mov 0x10(%rax),%r9
6917(6): mov 0xfffffc20(%rbp),%eax
691d(3): cmp $0x1,%eax
6920(6): jz 0x4c8(%rip)
6926(3): cmp $0x2,%eax
6929(6): jz 0x4a7(%rip)
692f(4): sub $0x8,%rsp
6933(6): push 0xfffffc10(%rbp)
6939(7): mov 0xfffffc28(%rbp),%r8
6940(3): mov %r10,%rsi
6943(7): mov $0xffffffff,%rcx
694a(5): mov $0x1,%edx
694f(2): xor %eax,%eax
6951(7): mov %r10,0xfffffbd0(%rbp)
6958(5): call 0xffffaea8(%rip)
695d(1): pop %rsi
695e(1): pop %rdi
695f(7): mov 0xfffffbd0(%rbp),%r10
6966(6): mov 0xfffffc44(%rbp),%ecx
696c(2): test %ecx,%ecx
696e(6): js 0x13e(%rip)
6974(3): movsxd %ecx,%rdx
6977(3): cmp %r10,%rdx
697a(2): jnb 0x10(%rip)
697c(3): add %r15,%rdx
697f(5): cmp $0x0,0x0(%rdx,%r14,1)
6984(6): jnz 0x942(%rip)
698a(2): cmp %eax,%ecx
698c(2): jnl 0xa(%rip)
698e(6): mov %eax,0xfffffc44(%rbp)
6994(2): mov %eax,%ecx
6996(3): lea 0x1(%rcx),%eax
6999(3): cmp %r10,%rax
699c(6): jb 0x834(%rip)
69a2(7): cmp $0x7ffffffe,%rbx
69a9(6): jnbe 0x847(%rip)
69af(4): lea 0x0(%r12,%r12,1),%rsi
69b3(3): lea 0x2(%rcx),%edx
69b6(3): test %r12,%r12
69b9(7): mov $0xffffffff,%rax
69c0(4): cmovns %rsi,%rax
69c4(3): add %r14,%rdx
69c7(6): jb 0xac1(%rip)
69cd(3): cmp %rdx,%rax
69d0(4): cmovnae %rdx,%rax
69d4(3): cmp %rax,%r12
69d7(6): jnb 0xfffffed9(%rip)
69dd(3): test %r12,%r12
69e0(6): js 0xfffffb31(%rip)
69e6(3): cmp %rax,%rsi
69e9(3): mov %rsi,%r12
69ec(2): jnb 0xf(%rip)
69ee(4): cmp $0xffffffff,%rax
69f2(6): jz 0xfffffb1f(%rip)
69f8(3): mov %rax,%r12
69fb(7): cmp 0xfffffc18(%rbp),%r15
6a02(3): setz %bl
6a05(3): test %r15,%r15
6a08(6): jz 0x388(%rip)
6a0e(2): test %bl,%bl
6a10(6): jnz 0x380(%rip)
6a16(3): mov %r12,%rsi
6a19(3): mov %r15,%rdi
6a1c(5): call 0xffffb084(%rip)
6a21(3): test %rax,%rax
6a24(6): jz 0xfffffaed(%rip)
6a2a(3): mov %rax,%r15
6a2d(5): jmp 0xfffffe83(%rip)
6a32(6): nop 0x0(%rax,%rax,1)
6a38(4): mov 0x50(%r13),%rax
6a3c(4): lea 0x0(%r15,%r14,1),%rdi
6a40(4): shl/sal $0x5,%rax
6a44(7): add 0xfffffc58(%rbp),%rax
6a4b(4): mov 0x10(%rax),%r9d
6a4f(6): mov 0xfffffc20(%rbp),%eax
6a55(3): cmp $0x1,%eax
6a58(6): jz 0x238(%rip)
6a5e(3): cmp $0x2,%eax
6a61(6): jz 0x277(%rip)
6a67(4): sub $0x8,%rsp
6a6b(6): push 0xfffffc10(%rbp)
6a71(7): mov 0xfffffc28(%rbp),%r8
6a78(7): mov $0xffffffff,%rcx
6a7f(5): mov $0x1,%edx
6a84(3): mov %r10,%rsi
6a87(2): xor %eax,%eax
6a89(7): mov %r10,0xfffffbd0(%rbp)
6a90(5): call 0xffffad70(%rip)
6a95(1): pop %rdx
6a96(1): pop %rcx
6a97(6): mov 0xfffffc44(%rbp),%ecx
6a9d(7): mov 0xfffffbd0(%rbp),%r10
6aa4(2): test %ecx,%ecx
6aa6(6): jns 0xfffffece(%rip)
6aac(7): mov 0xfffffc08(%rbp),%rdi
6ab3(4): cmp $0x0,0x1(%rdi)
6ab7(6): jnz 0x341(%rip)
6abd(2): test %eax,%eax
6abf(6): jns 0xfffffecf(%rip)
6ac5(7): mov 0xfffffc38(%rbp),%rax
6acc(2): mov (%rax),%ebx
6ace(2): test %ebx,%ebx
6ad0(2): jnz 0x20(%rip)
6ad2(5): movzx 0x48(%r13),%eax
6ad7(5): mov $0x16,%ebx
6adc(3): and $0xef,%eax
6adf(2): cmp $0x63,%al
6ae1(5): mov $0x54,%eax
6ae6(3): cmove %eax,%ebx
6ae9(7): nop 0x0(%rax)
6af0(7): cmp 0xfffffc18(%rbp),%r15
6af7(2): jz 0xb(%rip)
6af9(3): test %r15,%r15
6afc(6): jnz 0x7b0(%rip)
6b02(7): mov 0xfffffbe0(%rbp),%rax
6b09(3): test %rax,%rax
6b0c(2): jz 0xa(%rip)
6b0e(3): mov %rax,%rdi
6b11(5): call 0xffffacff(%rip)
6b16(7): mov 0xfffffbf8(%rbp),%rax
6b1d(7): mov 0xfffffd48(%rbp),%rdi
6b24(4): add $0x20,%rax
6b28(3): cmp %rax,%rdi
6b2b(2): jz 0x7(%rip)
6b2d(5): call 0xfffface3(%rip)
6b32(7): mov 0xfffffbf0(%rbp),%rax
6b39(7): mov 0xfffffc58(%rbp),%rdi
6b40(4): add $0x10,%rax
6b44(3): cmp %rax,%rdi
6b47(2): jz 0x7(%rip)
6b49(5): call 0xffffacc7(%rip)
6b4e(7): mov 0xfffffc38(%rbp),%rax
6b55(3): xor %r15d,%r15d
6b58(2): mov %ebx,(%rax)
6b5a(5): jmp 0xfffffa25(%rip)
6b5f(1): nop 
6b60(4): mov 0x50(%r13),%rax
6b64(4): lea 0x0(%r15,%r14,1),%rdi
6b68(4): shl/sal $0x5,%rax
6b6c(7): add 0xfffffc58(%rbp),%rax
6b73(3): fld 0x10(%rax),%st0
6b76(6): mov 0xfffffc20(%rbp),%eax
6b7c(3): cmp $0x1,%eax
6b7f(6): jz 0x631(%rip)
6b85(3): cmp $0x2,%eax
6b88(6): jnz 0x4c8(%rip)
6b8e(6): mov 0xfffffc4c(%rbp),%eax
6b94(4): sub $0x8,%rsp
6b98(6): push 0xfffffc10(%rbp)
6b9e(7): mov 0xfffffc48(%rbp),%r9d
6ba5(7): mov 0xfffffc28(%rbp),%r8
6bac(3): mov %r10,%rsi
6baf(4): sub $0x18,%rsp
6bb3(7): mov $0xffffffff,%rcx
6bba(5): mov $0x1,%edx
6bbf(4): fstp %st0,0x8(%rsp)
6bc3(1): push %rax
6bc4(2): xor %eax,%eax
6bc6(7): mov %r10,0xfffffbd0(%rbp)
6bcd(5): call 0xffffac33(%rip)
6bd2(4): add $0x30,%rsp
6bd6(7): mov 0xfffffbd0(%rbp),%r10
6bdd(5): jmp 0xfffffd89(%rip)
6be2(6): nop 0x0(%rax,%rax,1)
6be8(4): mov 0x50(%r13),%rax
6bec(4): lea 0x0(%r15,%r14,1),%rdi
6bf0(4): shl/sal $0x5,%rax
6bf4(7): add 0xfffffc58(%rbp),%rax
6bfb(5): movsd 0x10(%rax),%xmm0
6c00(6): mov 0xfffffc20(%rbp),%eax
6c06(3): cmp $0x1,%eax
6c09(6): jz 0x597(%rip)
6c0f(3): cmp $0x2,%eax
6c12(6): jnz 0x3fe(%rip)
6c18(6): mov 0xfffffc4c(%rbp),%eax
6c1e(6): push 0xfffffc10(%rbp)
6c24(1): push %rax
6c25(7): mov 0xfffffc48(%rbp),%r9d
6c2c(7): mov 0xfffffc28(%rbp),%r8
6c33(3): mov %r10,%rsi
6c36(7): mov $0xffffffff,%rcx
6c3d(5): mov $0x1,%edx
6c42(5): mov $0x1,%eax
6c47(7): mov %r10,0xfffffbd0(%rbp)
6c4e(5): call 0xffffabb2(%rip)
6c53(2): pop %r8
6c55(7): mov 0xfffffbd0(%rbp),%r10
6c5c(2): pop %r9
6c5e(5): jmp 0xfffffd08(%rip)
6c63(5): nop 0x0(%rax,%rax,1)
6c68(4): mov 0x50(%r13),%rax
6c6c(4): lea 0x0(%r15,%r14,1),%rdi
6c70(4): shl/sal $0x5,%rax
6c74(7): add 0xfffffc58(%rbp),%rax
6c7b(5): movzx 0x10(%rax),%r9d
6c80(6): mov 0xfffffc20(%rbp),%eax
6c86(3): cmp $0x1,%eax
6c89(6): jnz 0xfffffdd5(%rip)
6c8f(1): nop 
6c90(6): push 0xfffffc10(%rbp)
6c96(2): push %r9
6c98(7): mov 0xfffffc48(%rbp),%r9d
6c9f(5): jmp 0xfffffdd2(%rip)
6ca4(4): nop 0x0(%rax)
6ca8(4): mov 0x50(%r13),%rax
6cac(4): lea 0x0(%r15,%r14,1),%rdi
6cb0(4): shl/sal $0x5,%rax
6cb4(7): add 0xfffffc58(%rbp),%rax
6cbb(5): movsx 0x10(%rax),%r9d
6cc0(6): mov 0xfffffc20(%rbp),%eax
6cc6(3): cmp $0x1,%eax
6cc9(2): jz 0xffffffc7(%rip)
6ccb(3): cmp $0x2,%eax
6cce(6): jnz 0xfffffd99(%rip)
6cd4(4): nop 0x0(%rax)
6cd8(4): sub $0x8,%rsp
6cdc(6): push 0xfffffc10(%rbp)
6ce2(2): push %r9
6ce4(6): mov 0xfffffc4c(%rbp),%eax
6cea(1): push %rax
6ceb(7): mov 0xfffffc48(%rbp),%r9d
6cf2(7): mov 0xfffffc28(%rbp),%r8
6cf9(3): mov %r10,%rsi
6cfc(7): mov $0xffffffff,%rcx
6d03(5): mov $0x1,%edx
6d08(2): xor %eax,%eax
6d0a(7): mov %r10,0xfffffbd0(%rbp)
6d11(5): call 0xffffaaef(%rip)
6d16(4): add $0x20,%rsp
6d1a(7): mov 0xfffffbd0(%rbp),%r10
6d21(5): jmp 0xfffffc45(%rip)
6d26(a): nop 0x0(%rax,%rax,1)
6d30(4): mov 0x50(%r13),%rax
6d34(4): lea 0x0(%r15,%r14,1),%rdi
6d38(4): shl/sal $0x5,%rax
6d3c(7): add 0xfffffc58(%rbp),%rax
6d43(5): movzx 0x10(%rax),%r9d
6d48(6): mov 0xfffffc20(%rbp),%eax
6d4e(3): cmp $0x1,%eax
6d51(6): jnz 0xfffffd0d(%rip)
6d57(5): jmp 0xffffff39(%rip)
6d5c(4): nop 0x0(%rax)
6d60(4): mov 0x50(%r13),%rax
6d64(4): lea 0x0(%r15,%r14,1),%rdi
6d68(4): shl/sal $0x5,%rax
6d6c(7): add 0xfffffc58(%rbp),%rax
6d73(5): movsx 0x10(%rax),%r9d
6d78(6): mov 0xfffffc20(%rbp),%eax
6d7e(3): cmp $0x1,%eax
6d81(6): jnz 0xfffffcdd(%rip)
6d87(5): jmp 0xffffff09(%rip)
6d8c(4): nop 0x0(%rax)
6d90(3): mov %r12,%rdi
6d93(5): call 0xffffacbd(%rip)
6d98(3): test %rax,%rax
6d9b(3): mov %rax,%rcx
6d9e(6): jz 0xfffff773(%rip)
6da4(3): test %r14,%r14
6da7(6): jz 0xb9(%rip)
6dad(2): test %bl,%bl
6daf(6): jz 0xb1(%rip)
6db5(3): mov %r15,%rsi
6db8(3): mov %r14,%rdx
6dbb(3): mov %rax,%rdi
6dbe(5): call 0xffffac42(%rip)
6dc3(3): mov %rax,%r15
6dc6(5): jmp 0xfffffaea(%rip)
6dcb(5): nop 0x0(%rax,%rax,1)
6dd0(4): sub $0x8,%rsp
6dd4(6): push 0xfffffc10(%rbp)
6dda(2): push %r9
6ddc(5): jmp 0xffffff08(%rip)
6de1(7): nop 0x0(%rax)
6de8(6): push 0xfffffc10(%rbp)
6dee(2): push %r9
6df0(5): jmp 0xfffffea8(%rip)
6df5(3): nop (%rax)
6df8(4): mov $0x0,0x1(%rdi)
6dfc(5): jmp 0xfffffab4(%rip)
6e01(7): nop 0x0(%rax)
6e08(4): cmp $0xffffffff,%rax
6e0c(6): jnz 0x4ba(%rip)
6e12(3): mov %r14,%rax
6e15(4): add $0x1,%rax
6e19(3): mov %rax,%rbx
6e1c(6): jnb 0x8c(%rip)
6e22(4): cmp $0xffffffff,%r12
6e26(6): jnz 0xfffff6df(%rip)
6e2c(3): mov %r12,%rbx
6e2f(5): mov $0x25,0x0(%r15,%r14,1)
6e34(4): mov 0x8(%r13),%r8
6e38(4): add $0x58,%r13
6e3c(4): mov 0x0(%r13),%rcx
6e40(8): add $0x1,0xfffffc00(%rbp)
6e48(3): cmp %r8,%rcx
6e4b(6): jnz 0xfffff69e(%rip)
6e51(3): mov %rbx,%r14
6e54(5): jmp 0xfffff7ff(%rip)
6e59(7): nop 0x0(%rax)
6e60(3): mov %rcx,%r15
6e63(5): jmp 0xfffffa4d(%rip)
6e68(5): call 0xffffa9d8(%rip)
6e6d(7): mov %rax,0xfffffc38(%rbp)
6e74(5): jmp 0xfffff6c3(%rip)
6e79(7): nop 0x0(%rax)
6e80(2): mov %edi,%edx
6e82(3): sub $0x12,%edx
6e85(3): cmp $0x4,%edx
6e88(6): jnbe 0x43e(%rip)
6e8e(7): lea 0x273b(%rip),%rdi
6e95(4): mov 0x10(%rax),%rax
6e99(4): movsxd 0x0(%rdi,%rdx,4),%rdx
6e9d(3): add %rdi,%rdx
6ea0(2): jmp %rdx
6ea2(6): nop 0x0(%rax,%rax,1)
6ea8(3): cmp %rax,%r12
6eab(2): jnb 0xffffff84(%rip)
6ead(3): test %r12,%r12
6eb0(6): jnz 0x3d0(%rip)
6eb6(4): cmp $0xc,%rax
6eba(6): jnbe 0x3d8(%rip)
6ec0(6): mov $0xc,%r12d
6ec6(7): cmp 0xfffffc18(%rbp),%r15
6ecd(3): setz %dl
6ed0(3): test %r15,%r15
6ed3(6): jz 0x26d(%rip)
6ed9(2): test %dl,%dl
6edb(6): jnz 0x265(%rip)
6ee1(3): mov %r12,%rsi
6ee4(3): mov %r15,%rdi
6ee7(5): call 0xffffabb9(%rip)
6eec(3): test %rax,%rax
6eef(6): jz 0xfc(%rip)
6ef5(3): mov %rax,%r15
6ef8(5): jmp 0xffffff37(%rip)
6efd(3): nop (%rax)
6f00(a): mov $0x0,0xfffffc20(%rbp)
6f0a(5): jmp 0xfffff8ed(%rip)
6f0f(1): nop 
6f10(6): js 0xfffff5f5(%rip)
6f16(3): add %r12,%r12
6f19(3): cmp %rax,%r12
6f1c(6): jnb 0xfffff6da(%rip)
6f22(4): cmp $0xffffffff,%rax
6f26(6): jz 0xfffff5df(%rip)
6f2c(7): cmp 0xfffffc18(%rbp),%r15
6f33(3): mov %rax,%r12
6f36(3): setz %dl
6f39(3): test %r15,%r15
6f3c(6): jnz 0xfffff6cd(%rip)
6f42(6): nop 0x0(%rax,%rax,1)
6f48(3): mov %r12,%rdi
6f4b(7): mov %r8,0xfffffc20(%rbp)
6f52(6): mov %dl,0xfffffc30(%rbp)
6f58(7): mov %rcx,0xfffffc38(%rbp)
6f5f(5): call 0xffffaaf1(%rip)
6f64(3): test %rax,%rax
6f67(3): mov %rax,%r9
6f6a(7): mov 0xfffffc38(%rbp),%rcx
6f71(7): movzx 0xfffffc30(%rbp),%edx
6f78(7): mov 0xfffffc20(%rbp),%r8
6f7f(6): jz 0xfffff586(%rip)
6f85(3): test %rbx,%rbx
6f88(6): jz 0x208(%rip)
6f8e(2): test %dl,%dl
6f90(6): jz 0x200(%rip)
6f96(3): mov %r15,%rsi
6f99(3): mov %rbx,%rdx
6f9c(3): mov %rax,%rdi
6f9f(7): mov %r8,0xfffffc30(%rbp)
6fa6(7): mov %rcx,0xfffffc38(%rbp)
6fad(5): call 0xffffaa53(%rip)
6fb2(7): mov 0xfffffc38(%rbp),%rcx
6fb9(3): mov %rax,%r15
6fbc(7): mov 0xfffffc30(%rbp),%r8
6fc3(5): jmp 0xfffff681(%rip)
6fc8(8): nop 0x0(%rax,%rax,1)
6fd0(3): mov %r12,%r14
6fd3(5): jmp 0xfffff671(%rip)
6fd8(8): nop 0x0(%rax,%rax,1)
6fe0(3): mov %r14,(%rax)
6fe3(3): mov %r14,%rbx
6fe6(5): jmp 0xfffffe4e(%rip)
6feb(5): call 0xffffa855(%rip)
6ff0(7): mov %rax,0xfffffc38(%rbp)
6ff7(9): nop 0x0(%rax,%rax,1)
7000(3): mov %r15,%rdi
7003(5): call 0xffffa80d(%rip)
7008(5): jmp 0xfffff51b(%rip)
700d(3): nop (%rax)
7010(7): mov 0xfffffc10(%rbp),%r9
7017(7): mov 0xfffffc28(%rbp),%r8
701e(3): mov %r10,%rsi
7021(7): mov $0xffffffff,%rcx
7028(5): mov $0x1,%edx
702d(5): mov $0x1,%eax
7032(7): mov %r10,0xfffffbd0(%rbp)
7039(5): call 0xffffa7c7(%rip)
703e(7): mov 0xfffffbd0(%rbp),%r10
7045(5): jmp 0xfffff921(%rip)
704a(6): nop 0x0(%rax,%rax,1)
7050(4): sub $0x10,%rsp
7054(7): mov 0xfffffc10(%rbp),%r9
705b(3): fstp %st0,(%rsp)
705e(5): jmp 0xfffff8db(%rip)
7063(5): nop 0x0(%rax,%rax,1)
7068(6): js 0xfffff49d(%rip)
706e(3): add %r12,%r12
7071(3): cmp %rax,%r12
7074(6): jnb 0xfffff7e5(%rip)
707a(6): nop 0x0(%rax,%rax,1)
7080(3): test %rdx,%rdx
7083(6): jnz 0xfffff482(%rip)
7089(4): cmp $0xffffffff,%rax
708d(6): jz 0xfffff478(%rip)
7093(7): cmp 0xfffffc18(%rbp),%r15
709a(3): mov %rax,%r12
709d(3): setz %dl
70a0(3): test %r15,%r15
70a3(6): jnz 0xfffff7c9(%rip)
70a9(7): nop 0x0(%rax)
70b0(3): mov %r12,%rdi
70b3(6): mov %dl,0xfffffc38(%rbp)
70b9(5): call 0xffffa997(%rip)
70be(3): test %rax,%rax
70c1(3): mov %rax,%rcx
70c4(7): movzx 0xfffffc38(%rbp),%edx
70cb(6): jz 0xfffff43a(%rip)
70d1(3): test %r14,%r14
70d4(6): jz 0x19c(%rip)
70da(2): test %dl,%dl
70dc(6): jz 0x194(%rip)
70e2(3): mov %r15,%rsi
70e5(3): mov %r14,%rdx
70e8(3): mov %rax,%rdi
70eb(5): call 0xffffa915(%rip)
70f0(3): mov %rax,%r15
70f3(5): jmp 0xfffff798(%rip)
70f8(8): nop 0x0(%rax,%rax,1)
7100(3): mov $0x4c,(%rbx)
7103(4): add $0x1,%rbx
7107(5): jmp 0xfffff6b4(%rip)
710c(4): nop 0x0(%rax)
7110(3): mov %r14b,(%rax)
7113(3): mov %r14,%rbx
7116(5): jmp 0xfffffd1e(%rip)
711b(5): nop 0x0(%rax,%rax,1)
7120(3): mov %r14d,(%rax)
7123(3): mov %r14,%rbx
7126(5): jmp 0xfffffd0e(%rip)
712b(5): nop 0x0(%rax,%rax,1)
7130(4): mov %r14w,(%rax)
7134(3): mov %r14,%rbx
7137(5): jmp 0xfffffcfd(%rip)
713c(4): nop 0x0(%rax)
7140(3): mov %r12,%rdi
7143(6): mov %dl,0xfffffc38(%rbp)
7149(5): call 0xffffa907(%rip)
714e(3): test %rax,%rax
7151(3): mov %rax,%rcx
7154(7): movzx 0xfffffc38(%rbp),%edx
715b(6): jz 0xfffff3aa(%rip)
7161(3): test %r14,%r14
7164(6): jz 0x140(%rip)
716a(2): test %dl,%dl
716c(6): jz 0x138(%rip)
7172(3): mov %r15,%rsi
7175(3): mov %r14,%rdx
7178(3): mov %rax,%rdi
717b(5): call 0xffffa885(%rip)
7180(3): mov %rax,%r15
7183(5): jmp 0xfffffcac(%rip)
7188(8): nop 0x0(%rax,%rax,1)
7190(3): mov %r9,%r15
7193(5): jmp 0xfffff4b1(%rip)
7198(8): nop 0x0(%rax,%rax,1)
71a0(4): sub $0x8,%rsp
71a4(6): push 0xfffffc10(%rbp)
71aa(5): jmp 0xfffffa7b(%rip)
71af(1): nop 
71b0(4): sub $0x8,%rsp
71b4(6): push 0xfffffc10(%rbp)
71ba(4): sub $0x10,%rsp
71be(3): fstp %st0,(%rsp)
71c1(5): jmp 0xfffffb2a(%rip)
71c6(a): nop 0x0(%rax,%rax,1)
71d0(7): mov 0xfffffc38(%rbp),%rax
71d7(6): mov 0xfffffbdc(%rbp),%edi
71dd(3): movsxd %ecx,%rbx
71e0(3): add %r14,%rbx
71e3(2): mov %edi,(%rax)
71e5(5): jmp 0xfffffc4f(%rip)
71ea(6): nop 0x0(%rax,%rax,1)
71f0(7): cmp 0xfffffc18(%rbp),%r15
71f7(2): jz 0xb(%rip)
71f9(3): test %r15,%r15
71fc(6): jnz 0xbd(%rip)
7202(7): mov 0xfffffbe0(%rbp),%rax
7209(3): test %rax,%rax
720c(2): jz 0xa(%rip)
720e(3): mov %rax,%rdi
7211(5): call 0xffffa5ff(%rip)
7216(7): mov 0xfffffbf8(%rbp),%rax
721d(7): mov 0xfffffd48(%rbp),%rdi
7224(4): add $0x20,%rax
7228(3): cmp %rax,%rdi
722b(2): jz 0x7(%rip)
722d(5): call 0xffffa5e3(%rip)
7232(7): mov 0xfffffbf0(%rbp),%rax
7239(7): mov 0xfffffc58(%rbp),%rdi
7240(4): add $0x10,%rax
7244(3): cmp %rax,%rdi
7247(2): jz 0x7(%rip)
7249(5): call 0xffffa5c7(%rip)
724e(7): mov 0xfffffc38(%rbp),%rax
7255(3): xor %r15d,%r15d
7258(6): mov $0x4b,(%rax)
725e(5): jmp 0xfffff321(%rip)
7263(5): nop 0x0(%rax,%rax,1)
7268(3): xor %r15d,%r15d
726b(5): jmp 0xfffff314(%rip)
7270(3): mov %rcx,%r15
7273(5): jmp 0xfffff618(%rip)
7278(8): nop 0x0(%rax,%rax,1)
7280(6): js 0xfffff285(%rip)
7286(3): add %r12,%r12
7289(3): cmp %rax,%r12
728c(6): jnb 0xfffffc3a(%rip)
7292(4): cmp $0xffffffff,%rax
7296(6): jz 0xfffff26f(%rip)
729c(3): mov %rax,%r12
729f(5): jmp 0xfffffc27(%rip)
72a4(3): mov %rcx,%r15
72a7(5): jmp 0xfffffb88(%rip)
72ac(3): mov %r15,%rdi
72af(5): call 0xffffa561(%rip)
72b4(5): jmp 0xfffff84e(%rip)
72b9(3): mov %r15,%rdi
72bc(5): call 0xffffa554(%rip)
72c1(5): jmp 0xffffff41(%rip)
72c6(5): call 0xffffa56a(%rip)
72cb(5): nop 0x0(%rax,%rax,1)
72d0(7): mov 0xfffffbf8(%rbp),%rax
72d7(7): mov 0xfffffd48(%rbp),%rdi
72de(4): add $0x20,%rax
72e2(3): cmp %rax,%rdi
72e5(2): jz 0x7(%rip)
72e7(5): call 0xffffa529(%rip)
72ec(7): mov 0xfffffbf0(%rbp),%rax
72f3(7): mov 0xfffffc58(%rbp),%rdi
72fa(4): add $0x10,%rax
72fe(3): cmp %rax,%rdi
7301(2): jz 0x7(%rip)
7303(5): call 0xffffa50d(%rip)
7308(5): call 0xffffa538(%rip)
730d(3): xor %r15d,%r15d
7310(6): mov $0x16,(%rax)
7316(5): jmp 0xfffff269(%rip)
731b(3): mov %r14,%rbx
731e(2): xor %eax,%eax
7320(4): add $0x1,%rbx
7324(6): jb 0x10c(%rip)
732a(3): cmp %rbx,%r12
732d(2): jnb 0x4f(%rip)
732f(3): test %r12,%r12
7332(6): jnz 0x137(%rip)
7338(4): cmp $0xc,%rbx
733c(6): jnbe 0x112(%rip)
7342(6): mov $0xc,%r12d
7348(7): cmp 0xfffffc18(%rbp),%r15
734f(4): setz %r13b
7353(3): test %r15,%r15
7356(6): jz 0xa6(%rip)
735c(3): test %r13b,%r13b
735f(6): jnz 0x9d(%rip)
7365(3): mov %r12,%rsi
7368(3): mov %r15,%rdi
736b(5): call 0xffffa735(%rip)
7370(3): test %rax,%rax
7373(6): jz 0xfffffc78(%rip)
7379(3): mov %rax,%r15
737c(7): cmp 0xfffffc18(%rbp),%r15
7383(5): mov $0x0,0x0(%r15,%r14,1)
7388(2): jz 0x19(%rip)
738a(3): cmp %rbx,%r12
738d(2): jbe 0x14(%rip)
738f(3): mov %r15,%rdi
7392(3): mov %rbx,%rsi
7395(5): call 0xffffa70b(%rip)
739a(3): test %rax,%rax
739d(4): cmovne %rax,%r15
73a1(7): mov 0xfffffbe0(%rbp),%rax
73a8(3): test %rax,%rax
73ab(2): jz 0xa(%rip)
73ad(3): mov %rax,%rdi
73b0(5): call 0xffffa460(%rip)
73b5(7): mov 0xfffffbf8(%rbp),%rax
73bc(7): mov 0xfffffd48(%rbp),%rdi
73c3(4): add $0x20,%rax
73c7(3): cmp %rax,%rdi
73ca(2): jz 0x7(%rip)
73cc(5): call 0xffffa444(%rip)
73d1(7): mov 0xfffffbf0(%rbp),%rax
73d8(7): mov 0xfffffc58(%rbp),%rdi
73df(4): add $0x10,%rax
73e3(3): cmp %rax,%rdi
73e6(2): jz 0x7(%rip)
73e8(5): call 0xffffa428(%rip)
73ed(7): mov 0xfffffbe8(%rbp),%rax
73f4(3): mov %r14,(%rax)
73f7(5): jmp 0xfffff188(%rip)
73fc(3): mov %r12,%rdi
73ff(5): call 0xffffa651(%rip)
7404(3): test %rax,%rax
7407(3): mov %rax,%rcx
740a(6): jz 0xfffff0fb(%rip)
7410(3): test %r14,%r14
7413(2): jz 0x6d(%rip)
7415(3): test %r13b,%r13b
7418(2): jz 0x68(%rip)
741a(3): mov %r15,%rsi
741d(3): mov %r14,%rdx
7420(3): mov %rax,%rdi
7423(5): call 0xffffa5dd(%rip)
7428(3): mov %rax,%r15
742b(5): jmp 0xffffff51(%rip)
7430(4): cmp $0xffffffff,%r12
7434(5): mov $0x1,%eax
7439(6): jz 0xffffff43(%rip)
743f(3): test %r12,%r12
7442(6): jz 0xfffff0c3(%rip)
7448(6): js 0xfffff0bd(%rip)
744e(3): test %rax,%rax
7451(6): jnz 0xfffff0b4(%rip)
7457(4): cmp $0xffffffff,%rbx
745b(6): jz 0xfffff0aa(%rip)
7461(3): mov %rbx,%r12
7464(5): jmp 0xfffffee4(%rip)
7469(6): js 0xfffff09c(%rip)
746f(3): add %r12,%r12
7472(3): cmp %rbx,%r12
7475(6): jnb 0xfffffed3(%rip)
747b(2): jmp 0xffffffd3(%rip)
747d(3): nop (%rax)
7480(3): mov %rcx,%r15
7483(5): jmp 0xfffffef9(%rip)
7488(4): cmp $0xffffffff,%r12
748c(6): jz 0xfffff424(%rip)
7492(5): jmp 0xfffff07f(%rip)
7497(5): call 0xffffa489(%rip)
749c(4): cmp $0xffffffff,%r12
74a0(5): mov $0x1,%edx
74a5(6): jz 0xfffff3e6(%rip)
74ab(3): test %r12,%r12
74ae(6): jz 0xfffff057(%rip)
74b4(6): jns 0xfffffbcc(%rip)
74ba(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
74c0(4): cmp $0x0,(%rsi)
74c4(4): mov 0x8(%rsi),%rax
74c8(2): jz 0x65(%rip)
74ca(7): lea 0x211f(%rip),%r8
74d1(7): lea 0x2178(%rip),%r10
74d8(7): lea 0x2105(%rip),%r9
74df(2): xor %ecx,%ecx
74e1(7): nop 0x0(%rax)
74e8(3): cmp $0x16,(%rax)
74eb(2): jnbe 0x45(%rip)
74ed(2): mov (%rax),%edx
74ef(4): movsxd 0x0(%r8,%rdx,4),%rdx
74f3(3): add %r8,%rdx
74f6(2): jmp %rdx
74f8(8): nop 0x0(%rax,%rax,1)
7500(4): mov 0x8(%rdi),%rdx
7504(4): add $0xf,%rdx
7508(4): and $0xfffffff0,%rdx
750c(4): lea 0x10(%rdx),%r11
7510(4): mov %r11,0x8(%rdi)
7514(2): fld (%rdx),%st0
7516(3): fstp %st0,0x10(%rax)
7519(7): nop 0x0(%rax)
7520(4): add $0x1,%rcx
7524(4): add $0x20,%rax
7528(3): cmp %rcx,(%rsi)
752b(2): jnbe 0xffffffbd(%rip)
752d(2): xor %eax,%eax
752f(1): ret near (%rsp)
7530(5): mov $0xffffffff,%eax
7535(1): ret near (%rsp)
7536(3): mov (%rdi),%r11d
7539(4): cmp $0x2f,%r11d
753d(6): jnbe 0x13d(%rip)
7543(3): mov %r11d,%edx
7546(4): add 0x10(%rdi),%rdx
754a(4): add $0x8,%r11d
754e(3): mov %r11d,(%rdi)
7551(3): mov (%rdx),%rdx
7554(4): mov %rdx,0x10(%rax)
7558(2): jmp 0xffffffc8(%rip)
755a(3): mov (%rdi),%r11d
755d(4): cmp $0x2f,%r11d
7561(6): jnbe 0x13b(%rip)
7567(3): mov %r11d,%edx
756a(4): add 0x10(%rdi),%rdx
756e(4): add $0x8,%r11d
7572(3): mov %r11d,(%rdi)
7575(2): mov (%rdx),%edx
7577(3): mov %edx,0x10(%rax)
757a(2): jmp 0xffffffa6(%rip)
757c(3): mov (%rdi),%r11d
757f(4): cmp $0x2f,%r11d
7583(6): jnbe 0x108(%rip)
7589(3): mov %r11d,%edx
758c(4): add 0x10(%rdi),%rdx
7590(4): add $0x8,%r11d
7594(3): mov %r11d,(%rdi)
7597(2): mov (%rdx),%edx
7599(3): mov %dl,0x10(%rax)
759c(2): jmp 0xffffff84(%rip)
759e(3): mov (%rdi),%r11d
75a1(4): cmp $0x2f,%r11d
75a5(6): jnbe 0xa5(%rip)
75ab(3): mov %r11d,%edx
75ae(4): add 0x10(%rdi),%rdx
75b2(4): add $0x8,%r11d
75b6(3): mov %r11d,(%rdi)
75b9(2): mov (%rdx),%edx
75bb(4): mov %dx,0x10(%rax)
75bf(5): jmp 0xffffff61(%rip)
75c4(3): mov (%rdi),%r11d
75c7(4): cmp $0x2f,%r11d
75cb(6): jnbe 0x90(%rip)
75d1(3): mov %r11d,%edx
75d4(4): add 0x10(%rdi),%rdx
75d8(4): add $0x8,%r11d
75dc(3): mov %r11d,(%rdi)
75df(3): mov (%rdx),%rdx
75e2(3): test %rdx,%rdx
75e5(4): cmove %r9,%rdx
75e9(4): mov %rdx,0x10(%rax)
75ed(5): jmp 0xffffff33(%rip)
75f2(4): mov 0x4(%rdi),%r11d
75f6(7): cmp $0xaf,%r11d
75fd(6): jnbe 0xb0(%rip)
7603(3): mov %r11d,%edx
7606(4): add 0x10(%rdi),%rdx
760a(4): add $0x10,%r11d
760e(4): mov %r11d,0x4(%rdi)
7612(4): movsd (%rdx),%xmm0
7616(5): movsd %xmm0,0x10(%rax)
761b(5): jmp 0xffffff05(%rip)
7620(3): mov (%rdi),%r11d
7623(4): cmp $0x2f,%r11d
7627(2): jnbe 0x45(%rip)
7629(3): mov %r11d,%edx
762c(4): add 0x10(%rdi),%rdx
7630(4): add $0x8,%r11d
7634(3): mov %r11d,(%rdi)
7637(3): mov (%rdx),%rdx
763a(3): test %rdx,%rdx
763d(4): cmove %r10,%rdx
7641(4): mov %rdx,0x10(%rax)
7645(5): jmp 0xfffffedb(%rip)
764a(4): mov 0x8(%rdi),%rdx
764e(4): lea 0x8(%rdx),%r11
7652(4): mov %r11,0x8(%rdi)
7656(5): jmp 0xffffff63(%rip)
765b(4): mov 0x8(%rdi),%rdx
765f(4): lea 0x8(%rdx),%r11
7663(4): mov %r11,0x8(%rdi)
7667(5): jmp 0xffffff78(%rip)
766c(4): mov 0x8(%rdi),%rdx
7670(4): lea 0x8(%rdx),%r11
7674(4): mov %r11,0x8(%rdi)
7678(2): jmp 0xffffffbf(%rip)
767a(4): mov 0x8(%rdi),%rdx
767e(4): lea 0x8(%rdx),%r11
7682(4): mov %r11,0x8(%rdi)
7686(5): jmp 0xfffffecb(%rip)
768b(4): mov 0x8(%rdi),%rdx
768f(4): lea 0x8(%rdx),%r11
7693(4): mov %r11,0x8(%rdi)
7697(5): jmp 0xffffff00(%rip)
769c(4): mov 0x8(%rdi),%rdx
76a0(4): lea 0x8(%rdx),%r11
76a4(4): mov %r11,0x8(%rdi)
76a8(5): jmp 0xfffffecd(%rip)
76ad(4): mov 0x8(%rdi),%rdx
76b1(4): lea 0x8(%rdx),%r11
76b5(4): mov %r11,0x8(%rdi)
76b9(5): jmp 0xffffff59(%rip)

"printf_parse" :
76c0(2): push %r15
76c2(2): push %r14
76c4(4): lea 0x20(%rsi),%rcx
76c8(2): push %r13
76ca(2): push %r12
76cc(4): lea 0x10(%rdx),%rax
76d0(1): push %rbp
76d1(1): push %rbx
76d2(3): mov %rsi,%r14
76d5(3): mov %rdx,%r15
76d8(2): xor %ebx,%ebx
76da(6): mov $0x7,%r9d
76e0(4): sub $0x58,%rsp
76e4(6): mov $0x7,%r10d
76ea(7): mov $0x0,(%rsi)
76f1(4): mov %rcx,0x8(%rsi)
76f5(5): mov %rcx,0x28(%rsp)
76fa(7): mov $0xffffffff,%r8
7701(7): mov $0x0,(%rdx)
7708(5): mov %rax,0x8(%rsp)
770d(4): mov %rax,0x8(%rdx)
7711(9): mov $0x0,0x18(%rsp)
771a(9): mov $0x0,0x10(%rsp)
7723(9): mov $0x0,0x20(%rsp)
772c(2): jmp 0xf(%rip)
772e(2): nop 
7730(2): cmp $0x25,%al
7732(4): lea 0x1(%rdi),%rbp
7736(2): jz 0x42(%rip)
7738(3): mov %rbp,%rdi
773b(3): movzx (%rdi),%eax
773e(2): test %al,%al
7740(2): jnz 0xfffffff0(%rip)
7742(4): lea 0x0(%rbx,%rbx,4),%rax
7746(4): lea 0x0(%rbx,%rax,2),%rax
774a(4): mov %rdi,0x0(%rcx,%rax,8)
774e(5): mov 0x10(%rsp),%rax
7753(4): mov %rax,0x10(%r14)
7757(5): mov 0x18(%rsp),%rax
775c(4): mov %rax,0x18(%r14)
7760(2): xor %eax,%eax
7762(4): add $0x58,%rsp
7766(1): pop %rbx
7767(1): pop %rbp
7768(2): pop %r12
776a(2): pop %r13
776c(2): pop %r14
776e(2): pop %r15
7770(1): ret near (%rsp)
7771(7): nop 0x0(%rax)
7778(4): lea 0x0(%rbx,%rbx,4),%rax
777c(3): mov %r8,%r13
777f(4): lea 0x0(%rbx,%rax,2),%rax
7783(4): lea 0x0(%rcx,%rax,8),%r12
7787(4): mov %rdi,(%r12)
778b(9): mov $0x0,0x10(%r12)
7794(9): mov $0x0,0x18(%r12)
779d(9): mov $0x0,0x20(%r12)
77a6(5): mov %r8,0x28(%r12)
77ab(9): mov $0x0,0x30(%r12)
77b4(9): mov $0x0,0x38(%r12)
77bd(5): mov %r8,0x40(%r12)
77c2(5): mov %r8,0x50(%r12)
77c7(4): movzx 0x1(%rdi),%ebx
77cb(3): lea 0xffffffd0(%rbx),%eax
77ce(2): cmp $0x9,%al
77d0(2): jnbe 0x3e(%rip)
77d2(5): jmp 0x438(%rip)
77d7(9): nop 0x0(%rax,%rax,1)
77e0(3): cmp $0x2d,%bl
77e3(2): jz 0x45(%rip)
77e5(3): cmp $0x2b,%bl
77e8(2): jz 0x48(%rip)
77ea(3): cmp $0x20,%bl
77ed(2): jz 0x53(%rip)
77ef(3): cmp $0x23,%bl
77f2(2): jz 0x5e(%rip)
77f4(3): cmp $0x30,%bl
77f7(2): jz 0x69(%rip)
77f9(3): cmp $0x49,%bl
77fc(2): jnz 0x74(%rip)
77fe(6): or $0x40,0x10(%r12)
7804(4): nop 0x0(%rax)
7808(3): movzx (%rax),%ebx
780b(3): mov %rax,%rbp
780e(4): lea 0x1(%rbp),%rax
7812(3): cmp $0x27,%bl
7815(3): mov %rax,%rdx
7818(2): jnz 0xffffffc8(%rip)
781a(6): or $0x1,0x10(%r12)
7820(2): jmp 0xffffffe8(%rip)
7822(6): nop 0x0(%rax,%rax,1)
7828(6): or $0x2,0x10(%r12)
782e(2): jmp 0xffffffda(%rip)
7830(6): or $0x4,0x10(%r12)
7836(2): jmp 0xffffffd2(%rip)
7838(8): nop 0x0(%rax,%rax,1)
7840(6): or $0x8,0x10(%r12)
7846(2): jmp 0xffffffc2(%rip)
7848(8): nop 0x0(%rax,%rax,1)
7850(6): or $0x10,0x10(%r12)
7856(2): jmp 0xffffffb2(%rip)
7858(8): nop 0x0(%rax,%rax,1)
7860(6): or $0x20,0x10(%r12)
7866(2): jmp 0xffffffa2(%rip)
7868(8): nop 0x0(%rax,%rax,1)
7870(3): cmp $0x2a,%bl
7873(6): jz 0x1b6(%rip)
7879(3): lea 0xffffffd0(%rbx),%ecx
787c(3): cmp $0x9,%cl
787f(6): jbe 0x418(%rip)
7885(3): cmp $0x2e,%bl
7888(6): jz 0x2d7(%rip)
788e(2): xor %eax,%eax
7890(5): mov $0x1,%esi
7895(2): jmp 0x32(%rip)
7897(9): nop 0x0(%rax,%rax,1)
78a0(3): cmp $0x4c,%bl
78a3(2): jz 0x3d(%rip)
78a5(3): cmp $0x6c,%bl
78a8(2): jz 0x18(%rip)
78aa(3): cmp $0x6a,%bl
78ad(2): jz 0x13(%rip)
78af(2): mov %ebx,%edx
78b1(3): and $0xdf,%edx
78b4(3): cmp $0x5a,%dl
78b7(2): jz 0x9(%rip)
78b9(3): cmp $0x74,%bl
78bc(2): jnz 0x2c(%rip)
78be(2): nop 
78c0(3): add $0x8,%eax
78c3(4): movzx 0x0(%rbp),%ebx
78c7(4): add $0x1,%rbp
78cb(3): cmp $0x68,%bl
78ce(2): jnz 0xffffffd2(%rip)
78d0(2): mov %eax,%ecx
78d2(2): mov %esi,%edx
78d4(3): and $0x1,%ecx
78d7(2): shl/sal %cl,%edx
78d9(2): or %edx,%eax
78db(2): jmp 0xffffffe8(%rip)
78dd(3): nop (%rax)
78e0(3): or $0x4,%eax
78e3(2): jmp 0xffffffe0(%rip)
78e5(3): nop (%rax)
78e8(3): lea 0xffffffdb(%rbx),%edx
78eb(3): cmp $0x53,%dl
78ee(6): jnbe 0x61d(%rip)
78f4(7): lea 0x1d71(%rip),%rcx
78fb(3): movzx %dl,%edx
78fe(4): movsxd 0x0(%rcx,%rdx,4),%rdx
7902(3): add %rcx,%rdx
7905(2): jmp %rdx
7907(6): mov $0x10,%r11d
790d(5): mov $0x73,%ebx
7912(6): nop 0x0(%rax,%rax,1)
7918(4): cmp $0xffffffff,%r13
791c(6): jz 0x6bb(%rip)
7922(5): mov %r13,0x50(%r12)
7927(3): cmp %r13,%r9
792a(4): mov 0x8(%r15),%rcx
792e(6): jbe 0x622(%rip)
7934(3): mov (%r15),%rax
7937(3): mov %rax,%rdx
793a(4): shl/sal $0x5,%rdx
793e(3): add %rcx,%rdx
7941(3): cmp %r13,%rax
7944(2): jnbe 0x22(%rip)
7946(a): nop 0x0(%rax,%rax,1)
7950(4): add $0x1,%rax
7954(6): mov $0x0,(%rdx)
795a(4): add $0x20,%rdx
795e(3): cmp %r13,%rax
7961(2): jbe 0xffffffef(%rip)
7963(3): mov %rax,(%r15)
7966(4): shl/sal $0x5,%r13
796a(4): lea 0x0(%rcx,%r13,1),%rax
796e(2): mov (%rax),%edx
7970(2): test %edx,%edx
7972(6): jnz 0x5d1(%rip)
7978(3): mov %r11d,(%rax)
797b(5): mov %bl,0x48(%r12)
7980(3): mov (%r14),%rax
7983(5): mov %rbp,0x8(%r12)
7988(4): lea 0x1(%rax),%rbx
798c(3): cmp %rbx,%r10
798f(3): mov %rbx,(%r14)
7992(6): jnbe 0x8e(%rip)
7998(3): test %r10,%r10
799b(6): js 0x9ac(%rip)
79a1(3): add %r10,%r10
79a4(a): mov $0x209622091746699450,%rax
79ae(3): cmp %rax,%r10
79b1(6): jnbe 0x996(%rip)
79b7(4): lea 0x0(%r10,%r10,4),%rax
79bb(4): mov 0x8(%r14),%rdi
79bf(5): cmp %rdi,0x28(%rsp)
79c4(5): mov %r9,0x40(%rsp)
79c9(5): mov %r10,0x38(%rsp)
79ce(4): lea 0x0(%r10,%rax,2),%rax
79d2(5): mov %r8,0x30(%rsp)
79d7(8): lea 0x0(,%rax,8),%rsi
79df(6): jz 0x6be(%rip)
79e5(5): call 0xffffa0bb(%rip)
79ea(3): test %rax,%rax
79ed(3): mov %rax,%rcx
79f0(5): mov 0x30(%rsp),%r8
79f5(5): mov 0x38(%rsp),%r10
79fa(5): mov 0x40(%rsp),%r9
79ff(6): jz 0x948(%rip)
7a05(5): mov 0x28(%rsp),%rax
7a0a(4): cmp 0x8(%r14),%rax
7a0e(3): mov (%r14),%rbx
7a11(6): jz 0x6af(%rip)
7a17(4): mov %rcx,0x8(%r14)
7a1b(5): jmp 0xfffffd1d(%rip)
7a20(4): mov 0x8(%r14),%rcx
7a24(5): jmp 0xfffffd14(%rip)
7a29(5): mov 0x10(%rsp),%rsi
7a2e(5): mov $0x1,%ecx
7a33(5): mov %rbp,0x18(%r12)
7a38(5): mov %rax,0x20(%r12)
7a3d(3): test %rsi,%rsi
7a40(4): cmovne %rsi,%rcx
7a44(5): mov %rcx,0x10(%rsp)
7a49(4): movzx 0x1(%rbp),%ecx
7a4d(3): lea 0xffffffd0(%rcx),%esi
7a50(4): cmp $0x9,%sil
7a54(6): jbe 0x2e1(%rip)
7a5a(5): mov 0x20(%rsp),%rsi
7a5f(4): cmp $0xffffffff,%rsi
7a63(4): lea 0x1(%rsi),%rdx
7a67(5): mov %rsi,0x28(%r12)
7a6c(6): jz 0x49f(%rip)
7a72(5): mov 0x20(%rsp),%rbx
7a77(3): mov %rax,%rbp
7a7a(5): mov %rdx,0x20(%rsp)
7a7f(3): cmp %rbx,%r9
7a82(4): mov 0x8(%r15),%rcx
7a86(6): jnbe 0x67c(%rip)
7a8c(3): add %r9,%r9
7a8f(4): lea 0x1(%rbx),%rax
7a93(3): cmp %rbx,%r9
7a96(4): cmovbe %rax,%r9
7a9a(a): mov $0x576460752303423487,%rax
7aa4(3): cmp %rax,%r9
7aa7(6): jnbe 0x8a4(%rip)
7aad(3): mov %r9,%rsi
7ab0(5): mov %r9,0x40(%rsp)
7ab5(5): mov %r10,0x38(%rsp)
7aba(4): shl/sal $0x5,%rsi
7abe(5): cmp %rcx,0x8(%rsp)
7ac3(5): mov %r8,0x30(%rsp)
7ac8(6): jz 0x719(%rip)
7ace(3): mov %rcx,%rdi
7ad1(5): call 0xffff9fcf(%rip)
7ad6(4): mov 0x8(%r15),%rdx
7ada(5): mov 0x30(%rsp),%r8
7adf(3): mov %rax,%rcx
7ae2(5): mov 0x38(%rsp),%r10
7ae7(5): mov 0x40(%rsp),%r9
7aec(3): test %rcx,%rcx
7aef(6): jz 0x8b8(%rip)
7af5(5): cmp %rdx,0x8(%rsp)
7afa(3): mov (%r15),%rax
7afd(6): jz 0x7be(%rip)
7b03(4): mov %rcx,0x8(%r15)
7b07(3): mov %rax,%rdx
7b0a(4): shl/sal $0x5,%rdx
7b0e(3): add %rcx,%rdx
7b11(3): cmp %rbx,%rax
7b14(2): jnbe 0x22(%rip)
7b16(a): nop 0x0(%rax,%rax,1)
7b20(4): add $0x1,%rax
7b24(6): mov $0x0,(%rdx)
7b2a(4): add $0x20,%rdx
7b2e(3): cmp %rbx,%rax
7b31(2): jbe 0xffffffef(%rip)
7b33(3): mov %rax,(%r15)
7b36(4): shl/sal $0x5,%rbx
7b3a(4): lea 0x0(%rcx,%rbx,1),%rax
7b3e(2): mov (%rax),%edx
7b40(2): test %edx,%edx
7b42(6): jnz 0x4d9(%rip)
7b48(6): mov $0x5,(%rax)
7b4e(4): movzx 0x0(%rbp),%ebx
7b52(4): lea 0x1(%rbp),%rdx
7b56(3): cmp $0x2e,%bl
7b59(6): jnz 0xfffffd35(%rip)
7b5f(4): cmp $0x2a,0x1(%rbp)
7b63(5): mov %rbp,0x30(%r12)
7b68(6): jnz 0x186(%rip)
7b6e(5): mov 0x18(%rsp),%rsi
7b73(4): lea 0x2(%rbp),%r11
7b77(5): mov $0x2,%eax
7b7c(5): mov %r11,0x38(%r12)
7b81(4): cmp $0x2,%rsi
7b85(4): cmovnb %rsi,%rax
7b89(5): mov %rax,0x18(%rsp)
7b8e(4): movsx 0x2(%rbp),%eax
7b92(3): lea 0xffffffd0(%rax),%edx
7b95(3): cmp $0x9,%dl
7b98(6): jbe 0x694(%rip)
7b9e(5): mov 0x40(%r12),%rbx
7ba3(4): cmp $0xffffffff,%rbx
7ba7(6): jz 0x65e(%rip)
7bad(3): cmp %rbx,%r9
7bb0(4): mov 0x8(%r15),%rcx
7bb4(6): jbe 0x56b(%rip)
7bba(3): mov (%r15),%rax
7bbd(3): mov %rax,%rdx
7bc0(4): shl/sal $0x5,%rdx
7bc4(3): add %rcx,%rdx
7bc7(3): cmp %rbx,%rax
7bca(2): jnbe 0x1c(%rip)
7bcc(4): nop 0x0(%rax)
7bd0(4): add $0x1,%rax
7bd4(6): mov $0x0,(%rdx)
7bda(4): add $0x20,%rdx
7bde(3): cmp %rbx,%rax
7be1(2): jbe 0xffffffef(%rip)
7be3(3): mov %rax,(%r15)
7be6(4): shl/sal $0x5,%rbx
7bea(4): lea 0x0(%rcx,%rbx,1),%rax
7bee(2): mov (%rax),%edx
7bf0(2): test %edx,%edx
7bf2(6): jnz 0x518(%rip)
7bf8(6): mov $0x5,(%rax)
7bfe(3): mov %r11,%rbp
7c01(4): movzx (%r11),%ebx
7c05(5): jmp 0xfffffc89(%rip)
7c0a(3): mov %rbp,%rax
7c0d(3): nop (%rax)
7c10(4): add $0x1,%rax
7c14(3): movzx (%rax),%edx
7c17(3): lea 0xffffffd0(%rdx),%ecx
7c1a(3): cmp $0x9,%cl
7c1d(2): jbe 0xfffffff3(%rip)
7c1f(3): cmp $0x24,%dl
7c22(3): mov %r8,%r13
7c25(6): jnz 0xfffffbe9(%rip)
7c2b(2): xor %edx,%edx
7c2d(3): movsx %bl,%eax
7c30(a): mov $0x1844674407370955161,%rdi
7c3a(3): mov %r8,%rsi
7c3d(3): sub $0x30,%eax
7c40(3): cmp %rdi,%rdx
7c43(2): cwde 
7c45(2): jnbe 0x9(%rip)
7c47(4): lea 0x0(%rdx,%rdx,4),%rsi
7c4b(3): add %rsi,%rsi
7c4e(3): mov %rbp,%rcx
7c51(3): add %rsi,%rax
7c54(4): movzx 0x1(%rbp),%ebx
7c58(4): setb %sil
7c5c(4): add $0x1,%rbp
7c60(3): mov %rax,%rdx
7c63(4): movzx %sil,%esi
7c67(3): test %rsi,%rsi
7c6a(3): lea 0xffffffd0(%rbx),%edi
7c6d(6): jnz 0x391(%rip)
7c73(4): cmp $0x9,%dil
7c77(2): jbe 0xffffffb6(%rip)
7c79(3): mov %rax,%r13
7c7c(4): sub $0x1,%r13
7c80(4): cmp $0xfffffffd,%r13
7c84(6): jnbe 0x287(%rip)
7c8a(4): lea 0x2(%rcx),%rbp
7c8e(4): movzx 0x2(%rcx),%ebx
7c92(5): jmp 0xfffffb7c(%rip)
7c97(5): mov %rbp,0x18(%r12)
7c9c(4): movzx 0x0(%rbp),%edi
7ca0(3): mov %rbp,%rsi
7ca3(3): lea 0xffffffd0(%rdi),%ecx
7ca6(3): cmp $0x9,%cl
7ca9(2): jbe 0xe(%rip)
7cab(2): jmp 0x35(%rip)
7cad(3): nop (%rax)
7cb0(3): mov %rax,%rbp
7cb3(4): add $0x1,%rax
7cb7(3): movzx (%rax),%edi
7cba(3): lea 0xffffffd0(%rdi),%edx
7cbd(3): cmp $0x9,%dl
7cc0(2): jbe 0xfffffff0(%rip)
7cc2(3): mov %rax,%rcx
7cc5(4): lea 0x2(%rbp),%rdx
7cc9(3): mov %rax,%rbp
7ccc(3): sub %rsi,%rcx
7ccf(5): mov 0x10(%rsp),%rsi
7cd4(3): cmp %rcx,%rsi
7cd7(4): cmovnb %rsi,%rcx
7cdb(5): mov %rcx,0x10(%rsp)
7ce0(5): mov %rbp,0x20(%r12)
7ce5(4): movzx 0x0(%rbp),%ebx
7ce9(5): jmp 0xfffffb9c(%rip)
7cee(4): movzx 0x1(%rbp),%eax
7cf2(3): sub $0x30,%eax
7cf5(2): cmp $0x9,%al
7cf7(2): jnbe 0x17(%rip)
7cf9(7): nop 0x0(%rax)
7d00(4): add $0x1,%rdx
7d04(3): movzx (%rdx),%eax
7d07(3): sub $0x30,%eax
7d0a(2): cmp $0x9,%al
7d0c(2): jbe 0xfffffff4(%rip)
7d0e(5): mov 0x18(%rsp),%rsi
7d13(3): mov %rdx,%rax
7d16(5): mov %rdx,0x38(%r12)
7d1b(3): sub %rbp,%rax
7d1e(3): movzx (%rdx),%ebx
7d21(3): mov %rdx,%rbp
7d24(3): cmp %rax,%rsi
7d27(4): cmovnb %rsi,%rax
7d2b(5): mov %rax,0x18(%rsp)
7d30(5): jmp 0xfffffb5e(%rip)
7d35(3): mov %rax,%rsi
7d38(4): add $0x1,%rsi
7d3c(3): movzx (%rsi),%edi
7d3f(4): lea 0xffffffd0(%rdi),%r11d
7d43(4): cmp $0x9,%r11b
7d47(2): jbe 0xfffffff1(%rip)
7d49(4): cmp $0x24,%dil
7d4d(6): jnz 0xfffffd0d(%rip)
7d53(2): xor %esi,%esi
7d55(3): movsx %cl,%eax
7d58(a): mov $0x1844674407370955161,%rdi
7d62(3): mov %r8,%rcx
7d65(3): sub $0x30,%eax
7d68(3): cmp %rdi,%rsi
7d6b(2): cwde 
7d6d(2): jnbe 0x9(%rip)
7d6f(4): lea 0x0(%rsi,%rsi,4),%rcx
7d73(3): add %rcx,%rcx
7d76(3): mov %rdx,%rbp
7d79(3): xor %r11d,%r11d
7d7c(3): add %rcx,%rax
7d7f(4): movzx 0x1(%rdx),%ecx
7d83(4): setb %r11b
7d87(4): add $0x1,%rdx
7d8b(3): mov %rax,%rsi
7d8e(3): test %r11,%r11
7d91(3): lea 0xffffffd0(%rcx),%edi
7d94(6): jnz 0x50a(%rip)
7d9a(4): cmp $0x9,%dil
7d9e(2): jbe 0xffffffb7(%rip)
7da0(4): lea 0xffffffff(%rax),%rbx
7da4(4): cmp $0xfffffffd,%rbx
7da8(6): jnbe 0x163(%rip)
7dae(5): mov %rbx,0x28(%r12)
7db3(4): add $0x2,%rbp
7db7(5): jmp 0xfffffcc8(%rip)
7dbc(3): cmp $0xf,%eax
7dbf(6): mov $0x16,%r11d
7dc5(6): jnle 0xfffffb53(%rip)
7dcb(2): test $0x4,%al
7dcd(6): jnz 0xfffffb4b(%rip)
7dd3(3): cmp $0x7,%eax
7dd6(6): mov $0x15,%r11d
7ddc(6): jnle 0xfffffb3c(%rip)
7de2(2): test $0x2,%al
7de4(6): mov $0x12,%r11d
7dea(6): jnz 0xfffffb2e(%rip)
7df0(3): xor %r11d,%r11d
7df3(2): test $0x1,%al
7df5(4): setz %r11b
7df9(4): add $0x13,%r11d
7dfd(5): jmp 0xfffffb1b(%rip)
7e02(6): nop 0x0(%rax,%rax,1)
7e08(3): xor %r11d,%r11d
7e0b(3): cmp $0x7,%eax
7e0e(4): setnle %r11b
7e12(4): add $0xd,%r11d
7e16(5): jmp 0xfffffb02(%rip)
7e1b(3): cmp $0xf,%eax
7e1e(6): mov $0x9,%r11d
7e24(6): jnle 0xfffffaf4(%rip)
7e2a(2): test $0x4,%al
7e2c(6): jnz 0xfffffaec(%rip)
7e32(3): cmp $0x7,%eax
7e35(6): mov $0x7,%r11d
7e3b(6): jnle 0xfffffadd(%rip)
7e41(2): test $0x2,%al
7e43(6): mov $0x1,%r11d
7e49(6): jnz 0xfffffacf(%rip)
7e4f(3): and $0x1,%eax
7e52(3): cmp $0x1,%eax
7e55(3): sbb %r11d,%r11d
7e58(4): and $0x2,%r11d
7e5c(4): add $0x3,%r11d
7e60(5): jmp 0xfffffab8(%rip)
7e65(3): nop (%rax)
7e68(3): xor %r11d,%r11d
7e6b(3): cmp $0x7,%eax
7e6e(4): setnle %r11b
7e72(4): add $0xf,%r11d
7e76(5): jmp 0xfffffaa2(%rip)
7e7b(3): cmp $0xf,%eax
7e7e(6): mov $0xc,%r11d
7e84(6): jnle 0xfffffa94(%rip)
7e8a(3): xor %r11d,%r11d
7e8d(2): test $0x4,%al
7e8f(4): setnz %r11b
7e93(4): add $0xb,%r11d
7e97(5): jmp 0xfffffa81(%rip)
7e9c(6): mov $0xe,%r11d
7ea2(5): mov $0x63,%ebx
7ea7(5): jmp 0xfffffa71(%rip)
7eac(3): cmp $0xf,%eax
7eaf(6): mov $0xa,%r11d
7eb5(6): jnle 0xfffffa63(%rip)
7ebb(2): test $0x4,%al
7ebd(6): jnz 0xfffffa5b(%rip)
7ec3(3): cmp $0x7,%eax
7ec6(6): mov $0x8,%r11d
7ecc(6): jnle 0xfffffa4c(%rip)
7ed2(2): test $0x2,%al
7ed4(6): mov $0x2,%r11d
7eda(6): jnz 0xfffffa3e(%rip)
7ee0(3): and $0x1,%eax
7ee3(3): cmp $0x1,%eax
7ee6(3): sbb %r11d,%r11d
7ee9(4): and $0x2,%r11d
7eed(4): add $0x4,%r11d
7ef1(5): jmp 0xfffffa27(%rip)
7ef6(a): nop 0x0(%rax,%rax,1)
7f00(6): mov $0x11,%r11d
7f06(5): jmp 0xfffffa12(%rip)
7f0b(4): mov 0x8(%r15),%rcx
7f0f(5): cmp %rcx,0x8(%rsp)
7f14(2): jz 0xa(%rip)
7f16(3): mov %rcx,%rdi
7f19(5): call 0xffff98f7(%rip)
7f1e(4): mov 0x8(%r14),%rdi
7f22(5): cmp %rdi,0x28(%rsp)
7f27(2): jz 0x7(%rip)
7f29(5): call 0xffff98e7(%rip)
7f2e(5): call 0xffff9912(%rip)
7f33(6): mov $0x16,(%rax)
7f39(5): mov $0xffffffff,%eax
7f3e(5): jmp 0xfffff824(%rip)
7f43(3): cmp %r11d,%edx
7f46(6): jz 0xfffffa35(%rip)
7f4c(2): jmp 0xffffffc3(%rip)
7f4e(2): nop 
7f50(3): add %r9,%r9
7f53(4): lea 0x1(%r13),%rax
7f57(3): cmp %r13,%r9
7f5a(4): cmovbe %rax,%r9
7f5e(a): mov $0x576460752303423487,%rax
7f68(3): cmp %rax,%r9
7f6b(6): jnbe 0x3e0(%rip)
7f71(3): mov %r9,%rsi
7f74(5): mov %r9,0x48(%rsp)
7f79(5): mov %r10,0x40(%rsp)
7f7e(4): shl/sal $0x5,%rsi
7f82(5): cmp %rcx,0x8(%rsp)
7f87(5): mov %r8,0x38(%rsp)
7f8c(5): mov %r11d,0x30(%rsp)
7f91(6): jz 0xa0(%rip)
7f97(3): mov %rcx,%rdi
7f9a(5): call 0xffff9b06(%rip)
7f9f(3): test %rax,%rax
7fa2(3): mov %rax,%rcx
7fa5(5): mov 0x30(%rsp),%r11d
7faa(5): mov 0x38(%rsp),%r8
7faf(5): mov 0x40(%rsp),%r10
7fb4(5): mov 0x48(%rsp),%r9
7fb9(6): jz 0x38e(%rip)
7fbf(5): mov 0x8(%rsp),%rax
7fc4(4): cmp 0x8(%r15),%rax
7fc8(6): jz 0x91(%rip)
7fce(4): mov %rcx,0x8(%r15)
7fd2(5): jmp 0xfffff962(%rip)
7fd7(5): mov 0x20(%rsp),%rsi
7fdc(4): cmp $0xffffffff,%rsi
7fe0(4): lea 0x1(%rsi),%rax
7fe4(5): mov %rsi,0x50(%r12)
7fe9(6): jz 0xffffff22(%rip)
7fef(5): mov 0x20(%rsp),%r13
7ff4(5): mov %rax,0x20(%rsp)
7ff9(5): jmp 0xfffff92e(%rip)
7ffe(4): cmp $0x9,%dil
8002(6): jnbe 0xffffff09(%rip)
8008(3): movsx %bl,%eax
800b(3): mov %r8,%rsi
800e(3): mov %rbp,%rcx
8011(3): sub $0x30,%eax
8014(2): cwde 
8016(5): jmp 0xfffffc3b(%rip)
801b(3): cmp $0x5,%edx
801e(6): jnz 0xfffffef1(%rip)
8024(4): movzx 0x0(%rbp),%ebx
8028(4): lea 0x1(%rbp),%rdx
802c(5): jmp 0xfffff859(%rip)
8031(3): mov %rsi,%rdi
8034(5): call 0xffff9a1c(%rip)
8039(3): test %rax,%rax
803c(3): mov %rax,%rcx
803f(5): mov 0x30(%rsp),%r11d
8044(5): mov 0x38(%rsp),%r8
8049(5): mov 0x40(%rsp),%r10
804e(5): mov 0x48(%rsp),%r9
8053(6): jz 0x169(%rip)
8059(3): mov (%r15),%rdx
805c(5): mov 0x8(%rsp),%rsi
8061(3): mov %rcx,%rdi
8064(5): mov %r9,0x48(%rsp)
8069(5): mov %r10,0x40(%rsp)
806e(5): mov %r8,0x38(%rsp)
8073(5): mov %r11d,0x30(%rsp)
8078(4): shl/sal $0x5,%rdx
807c(5): call 0xffff9984(%rip)
8081(5): mov 0x48(%rsp),%r9
8086(5): mov 0x40(%rsp),%r10
808b(3): mov %rax,%rcx
808e(5): mov 0x38(%rsp),%r8
8093(5): mov 0x30(%rsp),%r11d
8098(5): jmp 0xffffff36(%rip)
809d(3): mov %rsi,%rdi
80a0(5): call 0xffff99b0(%rip)
80a5(3): test %rax,%rax
80a8(3): mov %rax,%rcx
80ab(5): mov 0x30(%rsp),%r8
80b0(5): mov 0x38(%rsp),%r10
80b5(5): mov 0x40(%rsp),%r9
80ba(6): jz 0xef(%rip)
80c0(4): lea 0x0(%rbx,%rbx,4),%rax
80c4(5): mov 0x28(%rsp),%rsi
80c9(3): mov %rcx,%rdi
80cc(5): mov %r9,0x40(%rsp)
80d1(5): mov %r10,0x38(%rsp)
80d6(4): lea 0x0(%rbx,%rax,2),%rdx
80da(5): mov %r8,0x30(%rsp)
80df(4): shl/sal $0x3,%rdx
80e3(5): call 0xffff991d(%rip)
80e8(3): mov (%r14),%rbx
80eb(3): mov %rax,%rcx
80ee(5): mov 0x40(%rsp),%r9
80f3(5): mov 0x38(%rsp),%r10
80f8(5): mov 0x30(%rsp),%r8
80fd(5): jmp 0xfffff91a(%rip)
8102(3): mov (%r15),%rax
8105(5): jmp 0xfffffa02(%rip)
810a(3): cmp $0x5,%edx
810d(6): jnz 0xfffffe02(%rip)
8113(4): movzx (%r11),%ebx
8117(3): mov %r11,%rbp
811a(5): jmp 0xfffff774(%rip)
811f(3): add %r9,%r9
8122(4): lea 0x1(%rbx),%rax
8126(3): cmp %rbx,%r9
8129(4): cmovbe %rax,%r9
812d(a): mov $0x576460752303423487,%rax
8137(3): cmp %rax,%r9
813a(6): jnbe 0x211(%rip)
8140(3): mov %r9,%rsi
8143(5): mov %r9,0x48(%rsp)
8148(5): mov %r10,0x40(%rsp)
814d(4): shl/sal $0x5,%rsi
8151(5): cmp %rcx,0x8(%rsp)
8156(5): mov %r8,0x38(%rsp)
815b(5): mov %r11,0x30(%rsp)
8160(6): jz 0x1be(%rip)
8166(3): mov %rcx,%rdi
8169(5): call 0xffff9937(%rip)
816e(4): mov 0x8(%r15),%rdx
8172(5): mov 0x30(%rsp),%r11
8177(3): mov %rax,%rcx
817a(5): mov 0x38(%rsp),%r8
817f(5): mov 0x40(%rsp),%r10
8184(5): mov 0x48(%rsp),%r9
8189(3): test %rcx,%rcx
818c(6): jz 0x21b(%rip)
8192(5): cmp %rdx,0x8(%rsp)
8197(3): mov (%r15),%rax
819a(6): jz 0x1c6(%rip)
81a0(4): mov %rcx,0x8(%r15)
81a4(5): jmp 0xfffffa19(%rip)
81a9(4): mov 0x8(%r15),%rcx
81ad(5): cmp %rcx,0x8(%rsp)
81b2(2): jz 0x1a(%rip)
81b4(3): mov %rcx,%rdi
81b7(5): call 0xffff9659(%rip)
81bc(4): mov 0x8(%r14),%rdi
81c0(5): cmp %rdi,0x28(%rsp)
81c5(2): jz 0x7(%rip)
81c7(5): call 0xffff9649(%rip)
81cc(5): call 0xffff9674(%rip)
81d1(6): mov $0xc,(%rax)
81d7(5): mov $0xffffffff,%eax
81dc(5): jmp 0xfffff586(%rip)
81e1(3): mov %rsi,%rdi
81e4(5): call 0xffff986c(%rip)
81e9(5): mov 0x8(%rsp),%rdx
81ee(3): mov %rax,%rcx
81f1(5): mov 0x40(%rsp),%r9
81f6(5): mov 0x38(%rsp),%r10
81fb(5): mov 0x30(%rsp),%r8
8200(5): jmp 0xfffff8ec(%rip)
8205(5): mov 0x20(%rsp),%rsi
820a(4): cmp $0xffffffff,%rsi
820e(4): lea 0x1(%rsi),%rax
8212(5): mov %rsi,0x40(%r12)
8217(6): jz 0xfffffcf4(%rip)
821d(5): mov 0x20(%rsp),%rbx
8222(5): mov %rax,0x20(%rsp)
8227(5): jmp 0xfffff986(%rip)
822c(3): mov %r11,%rdx
822f(4): add $0x1,%rdx
8233(3): movzx (%rdx),%ecx
8236(3): lea 0xffffffd0(%rcx),%esi
8239(4): cmp $0x9,%sil
823d(2): jbe 0xfffffff2(%rip)
823f(3): cmp $0x24,%cl
8242(6): jnz 0xfffff95c(%rip)
8248(2): xor %ecx,%ecx
824a(a): mov $0x1844674407370955161,%rsi
8254(3): sub $0x30,%eax
8257(3): mov %r8,%rdx
825a(3): cmp %rsi,%rcx
825d(2): cwde 
825f(2): jnbe 0x9(%rip)
8261(4): lea 0x0(%rcx,%rcx,4),%rdx
8265(3): add %rdx,%rdx
8268(3): mov %r11,%rsi
826b(2): xor %ebx,%ebx
826d(3): add %rax,%rdx
8270(5): movsx 0x1(%r11),%eax
8275(3): setb %bl
8278(4): add $0x1,%r11
827c(3): mov %rdx,%rcx
827f(3): test %rbx,%rbx
8282(3): lea 0xffffffd0(%rax),%edi
8285(2): jz 0x73(%rip)
8287(4): cmp $0x9,%dil
828b(6): jnbe 0xfffffc80(%rip)
8291(3): sub $0x30,%eax
8294(3): mov %r8,%rdx
8297(3): mov %r11,%rsi
829a(2): cwde 
829c(2): jmp 0xffffffcf(%rip)
829e(4): cmp $0x9,%dil
82a2(6): jnbe 0xfffffc69(%rip)
82a8(3): movsx %cl,%eax
82ab(3): mov %rdx,%rbp
82ae(3): mov %r8,%rcx
82b1(3): sub $0x30,%eax
82b4(2): cwde 
82b6(5): jmp 0xfffffac3(%rip)
82bb(5): mov 0x8(%rsp),%rsi
82c0(4): shl/sal $0x5,%rax
82c4(3): mov %rcx,%rdi
82c7(3): mov %rax,%rdx
82ca(5): mov %r9,0x40(%rsp)
82cf(5): mov %r10,0x38(%rsp)
82d4(5): mov %r8,0x30(%rsp)
82d9(5): call 0xffff9727(%rip)
82de(5): mov 0x40(%rsp),%r9
82e3(3): mov %rax,%rcx
82e6(5): mov 0x38(%rsp),%r10
82eb(3): mov (%r15),%rax
82ee(5): mov 0x30(%rsp),%r8
82f3(5): jmp 0xfffff810(%rip)
82f8(4): cmp $0x9,%dil
82fc(6): jbe 0xffffff4e(%rip)
8302(4): lea 0xffffffff(%rdx),%rbx
8306(4): cmp $0xfffffffd,%rbx
830a(6): jnbe 0xfffffc01(%rip)
8310(5): mov %rbx,0x40(%r12)
8315(4): lea 0x2(%rsi),%r11
8319(5): jmp 0xfffff894(%rip)
831e(3): mov %rsi,%rdi
8321(5): call 0xffff972f(%rip)
8326(5): mov 0x8(%rsp),%rdx
832b(3): mov %rax,%rcx
832e(5): mov 0x48(%rsp),%r9
8333(5): mov 0x40(%rsp),%r10
8338(5): mov 0x38(%rsp),%r8
833d(5): mov 0x30(%rsp),%r11
8342(5): jmp 0xfffffe47(%rip)
8347(4): mov 0x8(%r15),%rcx
834b(5): cmp %rcx,0x8(%rsp)
8350(6): jnz 0xfffffe64(%rip)
8356(5): jmp 0xfffffe66(%rip)
835b(5): nop 0x0(%rax,%rax,1)
8360(5): mov 0x8(%rsp),%rsi
8365(4): shl/sal $0x5,%rax
8369(3): mov %rcx,%rdi
836c(3): mov %rax,%rdx
836f(5): mov %r9,0x48(%rsp)
8374(5): mov %r10,0x40(%rsp)
8379(5): mov %r8,0x38(%rsp)
837e(5): mov %r11,0x30(%rsp)
8383(5): call 0xffff967d(%rip)
8388(5): mov 0x48(%rsp),%r9
838d(3): mov %rax,%rcx
8390(5): mov 0x40(%rsp),%r10
8395(3): mov (%r15),%rax
8398(5): mov 0x38(%rsp),%r8
839d(5): mov 0x30(%rsp),%r11
83a2(5): jmp 0xfffffdfe(%rip)
83a7(3): mov %rdx,%rcx
83aa(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
83b0(2): push %r15
83b2(2): push %r14
83b4(3): mov %rdx,%r15
83b7(2): push %r13
83b9(2): push %r12
83bb(7): lea 0x20256e(%rip),%r12
83c2(1): push %rbp
83c3(7): lea 0x20256e(%rip),%rbp
83ca(1): push %rbx
83cb(3): mov %edi,%r13d
83ce(3): mov %rsi,%r14
83d1(3): sub %r12,%rbp
83d4(4): sub $0x8,%rsp
83d8(4): sar $0x3,%rbp
83dc(5): call 0xffff93e4(%rip)
83e1(3): test %rbp,%rbp
83e4(2): jz 0x22(%rip)
83e6(2): xor %ebx,%ebx
83e8(8): nop 0x0(%rax,%rax,1)
83f0(3): mov %r15,%rdx
83f3(3): mov %r14,%rsi
83f6(3): mov %r13d,%edi
83f9(4): call 0x0(%r12,%rbx,8)
83fd(4): add $0x1,%rbx
8401(3): cmp %rbx,%rbp
8404(2): jnz 0xffffffec(%rip)
8406(4): add $0x8,%rsp
840a(1): pop %rbx
840b(1): pop %rbp
840c(2): pop %r12
840e(2): pop %r13
8410(2): pop %r14
8412(2): pop %r15
8414(1): ret near (%rsp)

"atexit" :
8430(7): mov 0x202bd1(%rip),%rdx
8437(2): xor %esi,%esi
8439(5): jmp 0xffff96d7(%rip)

"_fini" :
8440(4): sub $0x8,%rsp
8444(4): add $0x8,%rsp
8448(1): ret near (%rsp)

