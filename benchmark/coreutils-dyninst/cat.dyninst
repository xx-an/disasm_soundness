
"free@plt" :
1480(6): jmp 0x2069ba(%rip)
1486(5): push $0x0

"abort@plt" :
1490(6): jmp 0x2069b2(%rip)
1496(5): push $0x1

"__errno_location@plt" :
14a0(6): jmp 0x2069aa(%rip)
14a6(5): push $0x2

"strncmp@plt" :
14b0(6): jmp 0x2069a2(%rip)
14b6(5): push $0x3

"_exit@plt" :
14c0(6): jmp 0x20699a(%rip)
14c6(5): push $0x4

"__fpending@plt" :
14d0(6): jmp 0x206992(%rip)
14d6(5): push $0x5

"write@plt" :
14e0(6): jmp 0x20698a(%rip)
14e6(5): push $0x6

"textdomain@plt" :
14f0(6): jmp 0x206982(%rip)
14f6(5): push $0x7

"fclose@plt" :
1500(6): jmp 0x20697a(%rip)
1506(5): push $0x8

"bindtextdomain@plt" :
1510(6): jmp 0x206972(%rip)
1516(5): push $0x9

"stpcpy@plt" :
1520(6): jmp 0x20696a(%rip)
1526(5): push $0xa

"dcgettext@plt" :
1530(6): jmp 0x206962(%rip)
1536(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1540(6): jmp 0x20695a(%rip)
1546(5): push $0xc

"strlen@plt" :
1550(6): jmp 0x206952(%rip)
1556(5): push $0xd

"__stack_chk_fail@plt" :
1560(6): jmp 0x20694a(%rip)
1566(5): push $0xe

"getopt_long@plt" :
1570(6): jmp 0x206942(%rip)
1576(5): push $0xf

"mbrtowc@plt" :
1580(6): jmp 0x20693a(%rip)
1586(5): push $0x10

"strrchr@plt" :
1590(6): jmp 0x206932(%rip)
1596(5): push $0x11

"lseek@plt" :
15a0(6): jmp 0x20692a(%rip)
15a6(5): push $0x12

"memset@plt" :
15b0(6): jmp 0x206922(%rip)
15b6(5): push $0x13

"ioctl@plt" :
15c0(6): jmp 0x20691a(%rip)
15c6(5): push $0x14

"close@plt" :
15d0(6): jmp 0x206912(%rip)
15d6(5): push $0x15

"posix_fadvise@plt" :
15e0(6): jmp 0x20690a(%rip)
15e6(5): push $0x16

"read@plt" :
15f0(6): jmp 0x206902(%rip)
15f6(5): push $0x17

"memcmp@plt" :
1600(6): jmp 0x2068fa(%rip)
1606(5): push $0x18

"fputs_unlocked@plt" :
1610(6): jmp 0x2068f2(%rip)
1616(5): push $0x19

"calloc@plt" :
1620(6): jmp 0x2068ea(%rip)
1626(5): push $0x1a

"memcpy@plt" :
1630(6): jmp 0x2068e2(%rip)
1636(5): push $0x1b

"fileno@plt" :
1640(6): jmp 0x2068da(%rip)
1646(5): push $0x1c

"malloc@plt" :
1650(6): jmp 0x2068d2(%rip)
1656(5): push $0x1d

"fflush@plt" :
1660(6): jmp 0x2068ca(%rip)
1666(5): push $0x1e

"nl_langinfo@plt" :
1670(6): jmp 0x2068c2(%rip)
1676(5): push $0x1f

"__fxstat@plt" :
1680(6): jmp 0x2068ba(%rip)
1686(5): push $0x20

"__freading@plt" :
1690(6): jmp 0x2068b2(%rip)
1696(5): push $0x21

"realloc@plt" :
16a0(6): jmp 0x2068aa(%rip)
16a6(5): push $0x22

"setlocale@plt" :
16b0(6): jmp 0x2068a2(%rip)
16b6(5): push $0x23

"__printf_chk@plt" :
16c0(6): jmp 0x20689a(%rip)
16c6(5): push $0x24

"memmove@plt" :
16d0(6): jmp 0x206892(%rip)
16d6(5): push $0x25

"error@plt" :
16e0(6): jmp 0x20688a(%rip)
16e6(5): push $0x26

"open@plt" :
16f0(6): jmp 0x206882(%rip)
16f6(5): push $0x27

"fseeko@plt" :
1700(6): jmp 0x20687a(%rip)
1706(5): push $0x28

"__cxa_atexit@plt" :
1710(6): jmp 0x206872(%rip)
1716(5): push $0x29

"getpagesize@plt" :
1720(6): jmp 0x20686a(%rip)
1726(5): push $0x2a

"exit@plt" :
1730(6): jmp 0x206862(%rip)
1736(5): push $0x2b

"fwrite@plt" :
1740(6): jmp 0x20685a(%rip)
1746(5): push $0x2c

"__fprintf_chk@plt" :
1750(6): jmp 0x206852(%rip)
1756(5): push $0x2d

"mbsinit@plt" :
1760(6): jmp 0x20684a(%rip)
1766(5): push $0x2e

"iswprint@plt" :
1770(6): jmp 0x206842(%rip)
1776(5): push $0x2f

"__ctype_b_loc@plt" :
1780(6): jmp 0x20683a(%rip)
1786(5): push $0x30

".plt.got" :
1790(6): jmp 0x206852(%rip)
1796(2): nop 

"_init" :
1450(4): sub $0x8,%rsp
1454(7): mov 0x206b7d(%rip),%rax
145b(3): test %rax,%rax
145e(2): jz 0x4(%rip)
1460(2): call %rax
1462(4): add $0x8,%rsp
1466(1): ret near (%rsp)

"write_pending.part.6" :
17a0(1): push %rbx
17a1(7): lea 0x3d5c(%rip),%rsi
17a8(5): mov $0x5,%edx
17ad(2): xor %edi,%edi
17af(5): call 0xfffffd81(%rip)
17b4(3): mov %rax,%rbx
17b7(5): call 0xfffffce9(%rip)
17bc(2): mov (%rax),%esi
17be(3): mov %rbx,%rdx
17c1(5): mov $0x1,%edi
17c6(2): xor %eax,%eax
17c8(5): call 0xffffff18(%rip)
17cd(3): nop (%rax)
17d0(2): push %r15
17d2(2): push %r14
17d4(3): mov %rsi,%r14
17d7(2): push %r13
17d9(2): push %r12
17db(3): xor %r12d,%r12d
17de(1): push %rbp
17df(1): push %rbx
17e0(7): sub $0x158,%rsp
17e7(5): mov %rsi,0x48(%rsp)
17ec(4): mov %edi,0x50(%rsp)
17f0(9): mov $0x28,%rax
17f9(8): mov %rax,0x148(%rsp)
1801(2): xor %eax,%eax
1803(5): call 0xffffff1d(%rip)
1808(3): mov (%r14),%rdi
180b(2): mov %eax,%ebx
180d(5): call 0x12d3(%rip)
1812(7): lea 0x48a8(%rip),%rsi
1819(5): mov $0x6,%edi
181e(5): call 0xfffffe92(%rip)
1823(7): lea 0x3d8d(%rip),%rsi
182a(7): lea 0x3d5d(%rip),%rdi
1831(5): call 0xfffffcdf(%rip)
1836(7): lea 0x3d51(%rip),%rdi
183d(5): call 0xfffffcb3(%rip)
1842(7): lea 0x1127(%rip),%rdi
1849(5): call 0x3c87(%rip)
184e(5): mov $0x0,0x36(%rsp)
1853(5): mov $0x0,0x55(%rsp)
1858(5): mov $0x0,0x56(%rsp)
185d(8): mov $0x0,0x8d(%rsp)
1865(5): mov $0x0,0x37(%rsp)
186a(6): nop 0x0(%rax,%rax,1)
1870(5): mov 0x48(%rsp),%rsi
1875(4): mov 0x50(%rsp),%edi
1879(7): lea 0x206220(%rip),%rcx
1880(7): lea 0x3d6e(%rip),%rdx
1887(3): xor %r8d,%r8d
188a(5): call 0xfffffce6(%rip)
188f(3): cmp $0xff,%eax
1892(6): jz 0xf1(%rip)
1898(3): cmp $0x62,%eax
189b(6): jz 0xce(%rip)
18a1(2): jle 0x27(%rip)
18a3(3): cmp $0x73,%eax
18a6(2): jz 0x6c(%rip)
18a8(2): jle 0x52(%rip)
18aa(3): cmp $0x75,%eax
18ad(2): jz 0xffffffc3(%rip)
18af(6): jl 0xc4(%rip)
18b5(3): cmp $0x76,%eax
18b8(6): jnz 0xae8(%rip)
18be(5): mov $0x1,0x36(%rsp)
18c3(2): jmp 0xffffffad(%rip)
18c5(3): nop (%rax)
18c8(3): cmp $0x41,%eax
18cb(2): jz 0x1a(%rip)
18cd(2): jle 0x4f(%rip)
18cf(3): cmp $0x45,%eax
18d2(2): jz 0x1e(%rip)
18d4(3): cmp $0x54,%eax
18d7(6): jnz 0xac9(%rip)
18dd(6): mov $0x1,%r12d
18e3(2): jmp 0xffffff8d(%rip)
18e5(6): mov $0x1,%r12d
18eb(5): mov $0x1,0x36(%rsp)
18f0(5): mov $0x1,0x55(%rsp)
18f5(5): jmp 0xffffff7b(%rip)
18fa(3): cmp $0x65,%eax
18fd(2): jz 0xffffffee(%rip)
18ff(3): cmp $0x6e,%eax
1902(6): jnz 0xa9e(%rip)
1908(5): mov $0x1,0x37(%rsp)
190d(5): jmp 0xffffff63(%rip)
1912(5): mov $0x1,0x56(%rsp)
1917(5): jmp 0xffffff59(%rip)
191c(5): cmp $0xffffff7d,%eax
1921(4): mov %eax,0x30(%rsp)
1925(6): jnz 0xa41(%rip)
192b(4): sub $0x8,%rsp
192f(7): mov 0x206792(%rip),%rdi
1936(7): mov 0x2066fb(%rip),%rcx
193d(2): push $0x0
193f(7): lea 0x3c89(%rip),%r9
1946(7): lea 0x3c96(%rip),%r8
194d(7): lea 0x3c36(%rip),%rdx
1954(7): lea 0x3bb5(%rip),%rsi
195b(2): xor %eax,%eax
195d(5): call 0x3433(%rip)
1962(2): xor %edi,%edi
1964(5): call 0xfffffdcc(%rip)
1969(8): mov $0x1,0x8d(%rsp)
1971(2): jmp 0xffffff97(%rip)
1973(6): mov $0x1,%r12d
1979(5): mov $0x1,0x36(%rsp)
197e(5): jmp 0xfffffef2(%rip)
1983(4): mov %eax,0x30(%rsp)
1987(8): lea 0xb0(%rsp),%rax
198f(5): mov $0x1,%esi
1994(5): mov $0x1,%edi
1999(3): mov %rax,%rdx
199c(8): mov %rax,0x80(%rsp)
19a4(5): call 0xfffffcdc(%rip)
19a9(2): test %eax,%eax
19ab(6): js 0xa04(%rip)
19b1(8): mov 0xe8(%rsp),%r15
19b9(a): mov $0x2305843009213562880,%rax
19c3(7): movsxd 0x206706(%rip),%rcx
19ca(8): mov $0x0,0x8e(%rsp)
19d2(8): mov $0x1,0x8c(%rsp)
19da(7): lea 0xfffe0000(%r15),%rdx
19e1(5): mov %rcx,0x58(%rsp)
19e6(3): cmp %rax,%rdx
19e9(5): mov $0x20000,%eax
19ee(4): cmovnbe %rax,%r15
19f2(3): movsxd %ebx,%rax
19f5(5): mov %rax,0x68(%rsp)
19fa(8): mov 0xb0(%rsp),%rax
1a02(8): mov %rax,0x90(%rsp)
1a0a(8): mov 0xb8(%rsp),%rax
1a12(8): mov %rax,0x98(%rsp)
1a1a(7): mov 0xc8(%rsp),%eax
1a21(5): and $0xf000,%eax
1a26(7): mov %eax,0x88(%rsp)
1a2d(5): movzx 0x37(%rsp),%eax
1a32(4): or 0x55(%rsp),%al
1a36(4): cmp %ecx,0x50(%rsp)
1a3a(7): mov %al,0x8f(%rsp)
1a41(7): lea 0x4142(%rip),%rax
1a48(7): mov %rax,0x2066a9(%rip)
1a4f(6): jle 0x8ab(%rip)
1a55(5): mov 0x48(%rsp),%rax
1a5a(5): mov 0x58(%rsp),%rcx
1a5f(4): mov 0x0(%rax,%rcx,8),%rax
1a63(7): mov %rax,0x20668e(%rip)
1a6a(7): lea 0x4119(%rip),%rdi
1a71(5): mov $0x2,%ecx
1a76(3): mov %rax,%rsi
1a79(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1a7b(3): setnbe %bl
1a7e(3): sbb $0x0,%bl
1a81(3): movsx %bl,%ebx
1a84(2): test %ebx,%ebx
1a86(6): jnz 0x4d3(%rip)
1a8c(a): mov $0x0,0x20665e(%rip)
1a96(8): mov $0x1,0x8e(%rsp)
1a9e(8): mov 0x80(%rsp),%rdx
1aa6(2): mov %ebx,%esi
1aa8(5): mov $0x1,%edi
1aad(5): call 0xfffffbd3(%rip)
1ab2(2): test %eax,%eax
1ab4(6): js 0x6b3(%rip)
1aba(8): mov 0xe8(%rsp),%rcx
1ac2(a): mov $0x2305843009213562880,%rax
1acc(2): mov %ebx,%edi
1ace(7): lea 0xfffe0000(%rcx),%rdx
1ad5(3): cmp %rax,%rdx
1ad8(5): mov $0x20000,%eax
1add(4): cmovbe %rcx,%rax
1ae1(2): xor %edx,%edx
1ae3(2): xor %esi,%esi
1ae5(5): mov $0x2,%ecx
1aea(5): mov %rax,0x38(%rsp)
1aef(5): call 0xf31(%rip)
1af4(b): cmp $0x8000,0x88(%rsp)
1aff(6): jz 0x5d5(%rip)
1b05(8): cmp $0x0,0x8f(%rsp)
1b0d(5): mov 0x68(%rsp),%rax
1b12(4): lea 0xffffffff(%rax),%r14
1b16(2): jnz 0x16(%rip)
1b18(6): movzx 0x36(%rsp),%r13d
1b1e(3): or %r12d,%r13d
1b21(5): or 0x56(%rsp),%r13b
1b26(6): jz 0x6f9(%rip)
1b2c(5): mov 0x68(%rsp),%rbx
1b31(5): mov 0x38(%rsp),%rbp
1b36(3): mov %rbx,%rdi
1b39(3): add %rbp,%rdi
1b3c(5): call 0x33b4(%rip)
1b41(3): mov %rax,%r13
1b44(5): mov %rax,0x70(%rsp)
1b49(5): lea 0x12(%rbx,%r15,1),%rax
1b4e(4): lea 0x0(%rax,%rbp,4),%rdi
1b52(5): call 0x339e(%rip)
1b57(3): mov %rax,%rcx
1b5a(5): mov %rax,0x78(%rsp)
1b5f(2): xor %edx,%edx
1b61(3): add %r14,%rcx
1b64(3): add %r13,%r14
1b67(6): mov 0x206583(%rip),%esi
1b6d(3): mov %rcx,%rax
1b70(3): mov %r12d,%r13d
1b73(5): mov $0x1,0x54(%rsp)
1b78(3): div %rbx,%rax
1b7b(3): mov %r14,%rax
1b7e(4): mov %esi,0x4(%rsp)
1b82(4): xor $0x1,%r13d
1b86(3): sub %rdx,%rcx
1b89(2): xor %edx,%edx
1b8b(3): div %rbx,%rax
1b8e(3): mov %r14,%rax
1b91(4): lea 0x0(%rcx,%r15,1),%rsi
1b95(3): mov %r15,%r14
1b98(5): mov %rcx,0x20(%rsp)
1b9d(3): mov %rcx,%r15
1ba0(5): mov %rsi,0x10(%rsp)
1ba5(3): sub %rdx,%rax
1ba8(4): lea 0x1(%rax),%rbx
1bac(5): mov %rax,0x18(%rsp)
1bb1(5): mov %rax,0x8(%rsp)
1bb6(8): movzx 0x8d(%rsp),%eax
1bbe(5): mov %rbx,0x40(%rsp)
1bc3(3): xor $0x1,%eax
1bc6(4): mov %al,0x57(%rsp)
1bca(8): lea 0xac(%rsp),%rax
1bd2(5): mov %rax,0x60(%rsp)
1bd7(9): nop 0x0(%rax,%rax,1)
1be0(5): cmp %r15,0x10(%rsp)
1be5(6): jbe 0x1be(%rip)
1beb(5): cmp 0x8(%rsp),%rbx
1bf0(6): jbe 0x213(%rip)
1bf6(5): cmp $0x0,0x54(%rsp)
1bfb(b): mov $0x0,0xac(%rsp)
1c06(6): jnz 0x2aa(%rip)
1c0c(3): mov %r15,%rbx
1c0f(5): sub 0x20(%rsp),%rbx
1c14(6): jnz 0x2df(%rip)
1c1a(6): mov 0x2064d4(%rip),%ebx
1c20(5): mov 0x38(%rsp),%rdx
1c25(5): mov 0x18(%rsp),%rsi
1c2a(2): mov %ebx,%edi
1c2c(5): call 0x2be4(%rip)
1c31(4): cmp $0xffffffff,%rax
1c35(6): jz 0x3d2(%rip)
1c3b(3): test %rax,%rax
1c3e(6): jz 0x470(%rip)
1c44(5): mov 0x18(%rsp),%rdi
1c49(5): mov 0x40(%rsp),%rbx
1c4e(3): add %rdi,%rax
1c51(5): mov %rax,0x8(%rsp)
1c56(3): mov $0xa,(%rax)
1c59(3): mov %rdi,%rax
1c5c(3): movzx (%rax),%ebp
1c5f(4): cmp $0xa,%bpl
1c63(6): jz 0xffffff7d(%rip)
1c69(4): mov 0x4(%rsp),%edi
1c6d(2): test %edi,%edi
1c6f(2): js 0x20(%rip)
1c71(5): cmp $0x0,0x37(%rsp)
1c76(2): jz 0x19(%rip)
1c78(5): call 0x878(%rip)
1c7d(7): mov 0x2063ac(%rip),%rsi
1c84(3): mov %r15,%rdi
1c87(5): call 0xfffff899(%rip)
1c8c(3): mov %rax,%r15
1c8f(5): cmp $0x0,0x36(%rsp)
1c94(2): jz 0x27(%rip)
1c96(2): jmp 0x57(%rip)
1c98(8): nop 0x0(%rax,%rax,1)
1ca0(3): test %r12b,%r12b
1ca3(2): jz 0x1e(%rip)
1ca5(5): mov $0x495e,%eax
1caa(4): add $0x2,%r15
1cae(5): mov %ax,0xfffffffe(%r15)
1cb3(4): add $0x1,%rbx
1cb7(4): movzx 0xffffffff(%rbx),%ebp
1cbb(4): cmp $0x9,%bpl
1cbf(2): jz 0xffffffe1(%rip)
1cc1(4): cmp $0xa,%bpl
1cc5(6): jz 0xcb(%rip)
1ccb(3): mov %bpl,(%r15)
1cce(4): add $0x1,%r15
1cd2(2): jmp 0xffffffe1(%rip)
1cd4(4): nop 0x0(%rax)
1cd8(4): cmp $0x7e,%bpl
1cdc(2): jnbe 0x34(%rip)
1cde(3): mov %bpl,(%r15)
1ce1(4): add $0x1,%r15
1ce5(4): add $0x1,%rbx
1ce9(4): movzx 0xffffffff(%rbx),%ebp
1ced(4): cmp $0x1f,%bpl
1cf1(2): jnbe 0xffffffe7(%rip)
1cf3(4): cmp $0x9,%bpl
1cf7(2): jnz 0x49(%rip)
1cf9(3): test %r13b,%r13b
1cfc(2): jz 0x44(%rip)
1cfe(4): mov $0x9,(%r15)
1d02(4): add $0x1,%r15
1d06(2): jmp 0xffffffdf(%rip)
1d08(8): nop 0x0(%rax,%rax,1)
1d10(4): cmp $0x7f,%bpl
1d14(2): jz 0x4c(%rip)
1d16(5): mov $0x2d4d,%ecx
1d1b(4): cmp $0x9f,%bpl
1d1f(4): mov %cx,(%r15)
1d23(2): jbe 0x55(%rip)
1d25(4): cmp $0xff,%bpl
1d29(6): jz 0x15f(%rip)
1d2f(3): add $0x80,%ebp
1d32(4): add $0x3,%r15
1d36(4): mov %bpl,0xffffffff(%r15)
1d3a(2): jmp 0xffffffab(%rip)
1d3c(4): nop 0x0(%rax)
1d40(4): cmp $0xa,%bpl
1d44(2): jz 0x4c(%rip)
1d46(3): add $0x40,%ebp
1d49(4): mov $0x5e,(%r15)
1d4d(4): add $0x2,%r15
1d51(4): mov %bpl,0xffffffff(%r15)
1d55(2): jmp 0xffffff90(%rip)
1d57(9): nop 0x0(%rax,%rax,1)
1d60(5): mov $0x3f5e,%esi
1d65(4): add $0x2,%r15
1d69(5): mov %si,0xfffffffe(%r15)
1d6e(5): jmp 0xffffff77(%rip)
1d73(5): nop 0x0(%rax,%rax,1)
1d78(3): sub $0x40,%ebp
1d7b(5): mov $0x5e,0x2(%r15)
1d80(4): add $0x4,%r15
1d84(4): mov %bpl,0xffffffff(%r15)
1d88(5): jmp 0xffffff5d(%rip)
1d8d(3): nop (%rax)
1d90(5): cmp %r15,0x10(%rsp)
1d95(4): mov 0x30(%rsp),%eax
1d99(4): mov %eax,0x4(%rsp)
1d9d(6): jnbe 0xfffffe4e(%rip)
1da3(5): mov 0x20(%rsp),%rbp
1da8(8): nop 0x0(%rax,%rax,1)
1db0(3): mov %r14,%rdx
1db3(3): mov %rbp,%rsi
1db6(5): mov $0x1,%edi
1dbb(5): call 0xca5(%rip)
1dc0(3): cmp %rax,%r14
1dc3(6): jnz 0x50b(%rip)
1dc9(3): add %r14,%rbp
1dcc(3): mov %r15,%r9
1dcf(3): sub %rbp,%r9
1dd2(3): cmp %r9,%r14
1dd5(2): jbe 0xffffffdb(%rip)
1dd7(5): mov 0x20(%rsp),%r15
1ddc(3): mov %r9,%rdx
1ddf(3): mov %rbp,%rsi
1de2(5): mov %r9,0x28(%rsp)
1de7(3): mov %r15,%rdi
1dea(5): call 0xfffff8e6(%rip)
1def(5): cmp 0x8(%rsp),%rbx
1df4(5): mov 0x28(%rsp),%r9
1df9(4): lea 0x0(%r15,%r9,1),%r15
1dfd(6): jnbe 0xfffffdf9(%rip)
1e03(5): add $0x1,0x4(%rsp)
1e08(4): lea 0x1(%rbx),%rdx
1e0c(4): mov 0x4(%rsp),%eax
1e10(2): test %eax,%eax
1e12(2): jle 0x4e(%rip)
1e14(3): cmp $0x1,%eax
1e17(2): jz 0x15(%rip)
1e19(5): cmp $0x0,0x56(%rsp)
1e1e(8): mov $0x2,0x4(%rsp)
1e26(6): jnz 0xc2(%rip)
1e2c(5): cmp $0x0,0x57(%rsp)
1e31(2): jz 0x2f(%rip)
1e33(5): cmp $0x0,0x37(%rsp)
1e38(2): jz 0x28(%rip)
1e3a(5): mov %rdx,0x28(%rsp)
1e3f(5): call 0x6b1(%rip)
1e44(7): mov 0x2061e5(%rip),%rsi
1e4b(3): mov %r15,%rdi
1e4e(5): call 0xfffff6d2(%rip)
1e53(5): mov 0x28(%rsp),%rdx
1e58(3): mov %rax,%r15
1e5b(5): nop 0x0(%rax,%rax,1)
1e60(5): cmp $0x0,0x55(%rsp)
1e65(4): lea 0x1(%r15),%rax
1e69(2): jz 0x37(%rip)
1e6b(4): mov $0x24,(%r15)
1e6f(4): add $0x2,%r15
1e73(3): mov $0xa,(%rax)
1e76(3): mov %rbx,%rax
1e79(3): mov %rdx,%rbx
1e7c(5): jmp 0xfffffde0(%rip)
1e81(7): nop 0x0(%rax)
1e88(5): mov $0x3f5e,%edx
1e8d(4): add $0x4,%r15
1e91(5): mov %dx,0xfffffffe(%r15)
1e96(5): jmp 0xfffffe4f(%rip)
1e9b(5): nop 0x0(%rax,%rax,1)
1ea0(3): mov %rax,%rsi
1ea3(3): mov %r15,%rax
1ea6(3): mov %rsi,%r15
1ea9(2): jmp 0xffffffca(%rip)
1eab(5): nop 0x0(%rax,%rax,1)
1eb0(6): mov 0x20623e(%rip),%ebx
1eb6(5): mov 0x60(%rsp),%rdx
1ebb(2): xor %eax,%eax
1ebd(5): mov $0x541b,%esi
1ec2(2): mov %ebx,%edi
1ec4(5): call 0xfffff6fc(%rip)
1ec9(2): test %eax,%eax
1ecb(2): js 0x55(%rip)
1ecd(8): mov 0xac(%rsp),%r8d
1ed5(3): test %r8d,%r8d
1ed8(6): jnz 0xfffffd48(%rip)
1ede(5): jmp 0xfffffd2e(%rip)
1ee3(5): nop 0x0(%rax,%rax,1)
1ee8(3): movzx (%rbx),%ebp
1eeb(3): mov %rdx,%rbx
1eee(5): jmp 0xfffffd71(%rip)
1ef3(5): mov 0x20(%rsp),%r15
1ef8(3): mov %rbx,%rdx
1efb(5): mov $0x1,%edi
1f00(3): mov %r15,%rsi
1f03(5): call 0xb5d(%rip)
1f08(3): cmp %rax,%rbx
1f0b(6): jz 0xfffffd0f(%rip)
1f11(5): call 0xfffff88f(%rip)
1f16(a): nop 0x0(%rax,%rax,1)
1f20(5): call 0xfffff580(%rip)
1f25(2): mov (%rax),%ecx
1f27(3): cmp $0x5f,%ecx
1f2a(4): setz %r10b
1f2e(3): cmp $0x26,%ecx
1f31(2): jnbe 0x15(%rip)
1f33(a): mov $0x274916179968,%rdx
1f3d(3): shr %cl,%rdx
1f40(3): and $0x1,%edx
1f43(3): or %edx,%r10d
1f46(3): test %r10b,%r10b
1f49(6): jz 0x3bd(%rip)
1f4f(5): mov $0x0,0x54(%rsp)
1f54(5): jmp 0xffffff79(%rip)
1f59(2): xor %esi,%esi
1f5b(3): mov %rax,%rdi
1f5e(2): xor %eax,%eax
1f60(5): call 0xfffff790(%rip)
1f65(2): test %eax,%eax
1f67(2): mov %eax,%ebx
1f69(6): mov %eax,0x206185(%rip)
1f6f(6): jns 0xfffffb2f(%rip)
1f75(7): mov 0x20617c(%rip),%rdx
1f7c(5): mov $0x3,%esi
1f81(2): xor %edi,%edi
1f83(5): call 0x269d(%rip)
1f88(3): mov %rax,%rbx
1f8b(5): call 0xfffff515(%rip)
1f90(2): mov (%rax),%esi
1f92(7): lea 0x3bab(%rip),%rdx
1f99(3): mov %rbx,%rcx
1f9c(2): xor %edi,%edi
1f9e(2): xor %eax,%eax
1fa0(5): call 0xfffff740(%rip)
1fa5(8): mov $0x0,0x8c(%rsp)
1fad(6): add $0x1,0x58(%rsp)
1fb3(5): mov 0x58(%rsp),%rax
1fb8(4): cmp %eax,0x50(%rsp)
1fbc(6): jnle 0xfffffa99(%rip)
1fc2(8): cmp $0x0,0x8e(%rsp)
1fca(6): jnz 0x21a(%rip)
1fd0(8): movzx 0x8c(%rsp),%eax
1fd8(3): xor $0x1,%eax
1fdb(8): mov 0x148(%rsp),%rcx
1fe3(9): xor $0x28,%rcx
1fec(3): movzx %al,%eax
1fef(6): jnz 0x3bb(%rip)
1ff5(7): add $0x158,%rsp
1ffc(1): pop %rbx
1ffd(1): pop %rbp
1ffe(2): pop %r12
2000(2): pop %r13
2002(2): pop %r14
2004(2): pop %r15
2006(1): ret near (%rsp)
2007(7): mov 0x2060ea(%rip),%rdx
200e(2): xor %edi,%edi
2010(3): mov %r15,%rax
2013(5): mov $0x3,%esi
2018(3): mov %r14,%r15
201b(3): mov %rax,%r14
201e(5): call 0x2602(%rip)
2023(3): mov %rax,%rbx
2026(5): call 0xfffff47a(%rip)
202b(2): mov (%rax),%esi
202d(7): lea 0x3b10(%rip),%rdx
2034(2): xor %edi,%edi
2036(2): xor %eax,%eax
2038(3): mov %rbx,%rcx
203b(5): call 0xfffff6a5(%rip)
2040(5): sub 0x20(%rsp),%r14
2045(6): jnz 0x15f(%rip)
204b(4): mov 0x4(%rsp),%eax
204f(3): xor %r10d,%r10d
2052(6): mov %eax,0x206098(%rip)
2058(5): mov 0x78(%rsp),%rdi
205d(8): and %r10b,0x8c(%rsp)
2065(5): call 0xfffff41b(%rip)
206a(5): mov 0x70(%rsp),%rdi
206f(5): call 0xfffff411(%rip)
2074(7): mov 0x20607d(%rip),%rsi
207b(7): lea 0x3b08(%rip),%rdi
2082(5): mov $0x2,%ecx
2087(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2089(3): setnbe %al
208c(2): sbb $0x0,%al
208e(2): test %al,%al
2090(6): jz 0xffffff1d(%rip)
2096(6): mov 0x206058(%rip),%edi
209c(5): call 0xfffff534(%rip)
20a1(2): test %eax,%eax
20a3(6): jns 0xffffff0a(%rip)
20a9(5): jmp 0xfffffecc(%rip)
20ae(3): mov %r15,%rax
20b1(3): mov %r14,%r15
20b4(3): mov %rax,%rbx
20b7(5): sub 0x20(%rsp),%rbx
20bc(6): jnz 0x108(%rip)
20c2(4): mov 0x4(%rsp),%eax
20c6(6): mov $0x1,%r10d
20cc(6): mov %eax,0x20601e(%rip)
20d2(2): jmp 0xffffff86(%rip)
20d4(8): mov 0x90(%rsp),%rax
20dc(8): cmp %rax,0xb0(%rsp)
20e4(6): jnz 0xfffffa21(%rip)
20ea(8): mov 0x98(%rsp),%rax
20f2(8): cmp %rax,0xb8(%rsp)
20fa(6): jnz 0xfffffa0b(%rip)
2100(6): mov 0x205fee(%rip),%edi
2106(2): xor %esi,%esi
2108(5): mov $0x1,%edx
210d(5): call 0xfffff493(%rip)
2112(8): cmp 0xe0(%rsp),%rax
211a(6): jnl 0xfffff9eb(%rip)
2120(7): mov 0x205fd1(%rip),%rdx
2127(5): mov $0x3,%esi
212c(2): xor %edi,%edi
212e(5): call 0x24f2(%rip)
2133(7): lea 0x34d6(%rip),%rsi
213a(3): mov %rax,%rbx
213d(5): mov $0x5,%edx
2142(2): xor %edi,%edi
2144(5): call 0xfffff3ec(%rip)
2149(3): mov %rbx,%rcx
214c(3): mov %rax,%rdx
214f(2): xor %esi,%esi
2151(2): xor %edi,%edi
2153(2): xor %eax,%eax
2155(5): call 0xfffff58b(%rip)
215a(8): mov $0x0,0x8c(%rsp)
2162(5): jmp 0xffffff12(%rip)
2167(7): mov 0x205f8a(%rip),%rdx
216e(5): mov $0x3,%esi
2173(2): xor %edi,%edi
2175(5): call 0x24ab(%rip)
217a(3): mov %rax,%rbx
217d(5): call 0xfffff323(%rip)
2182(2): mov (%rax),%esi
2184(7): lea 0x39b9(%rip),%rdx
218b(3): mov %rbx,%rcx
218e(2): xor %edi,%edi
2190(2): xor %eax,%eax
2192(5): call 0xfffff54e(%rip)
2197(8): mov $0x0,0x8c(%rsp)
219f(5): jmp 0xfffffed5(%rip)
21a4(5): mov 0x20(%rsp),%rsi
21a9(3): mov %r14,%rdx
21ac(5): mov $0x1,%edi
21b1(5): call 0x8af(%rip)
21b6(3): cmp %rax,%r14
21b9(6): jz 0xfffffe92(%rip)
21bf(5): jmp 0xfffffd52(%rip)
21c4(5): mov 0x20(%rsp),%rsi
21c9(3): mov %rbx,%rdx
21cc(5): mov $0x1,%edi
21d1(5): call 0x88f(%rip)
21d6(3): cmp %rax,%rbx
21d9(6): jz 0xfffffee9(%rip)
21df(5): jmp 0xfffffd32(%rip)
21e4(2): xor %edi,%edi
21e6(5): call 0xfffff3ea(%rip)
21eb(2): test %eax,%eax
21ed(6): jns 0xfffffde3(%rip)
21f3(7): lea 0x344a(%rip),%rsi
21fa(5): mov $0x5,%edx
21ff(2): xor %edi,%edi
2201(5): call 0xfffff32f(%rip)
2206(3): mov %rax,%rbx
2209(5): call 0xfffff297(%rip)
220e(2): mov (%rax),%esi
2210(3): mov %rbx,%rdx
2213(5): mov $0x1,%edi
2218(2): xor %eax,%eax
221a(5): call 0xfffff4c6(%rip)
221f(5): mov 0x38(%rsp),%rax
2224(3): cmp %rax,%r15
2227(4): cmovnb %r15,%rax
222b(4): lea 0x0(%rax,%r14,1),%rdi
222f(3): mov %rax,%rbp
2232(5): call 0x2cbe(%rip)
2237(3): add %rax,%r14
223a(5): mov %rax,0x70(%rsp)
223f(2): xor %edx,%edx
2241(3): mov %r14,%rax
2244(3): mov %r14,%rbx
2247(5): div 0x68(%rsp),%rax
224c(3): sub %rdx,%rbx
224f(2): jmp 0x20(%rip)
2251(3): test %rax,%rax
2254(2): jz 0x72(%rip)
2256(3): mov %rax,%rdx
2259(3): mov %rbx,%rsi
225c(5): mov $0x1,%edi
2261(5): call 0x7ff(%rip)
2266(3): cmp %rax,%r14
2269(6): jnz 0x10b(%rip)
226f(6): mov 0x205e7f(%rip),%edi
2275(3): mov %rbp,%rdx
2278(3): mov %rbx,%rsi
227b(5): call 0x2595(%rip)
2280(4): cmp $0xffffffff,%rax
2284(3): mov %rax,%r14
2287(2): jnz 0xffffffca(%rip)
2289(7): mov 0x205e68(%rip),%rdx
2290(5): mov $0x3,%esi
2295(2): xor %edi,%edi
2297(5): call 0x2389(%rip)
229c(3): mov %rax,%rbx
229f(5): call 0xfffff201(%rip)
22a4(2): mov (%rax),%esi
22a6(7): lea 0x3897(%rip),%rdx
22ad(3): mov %rbx,%rcx
22b0(2): xor %edi,%edi
22b2(2): xor %eax,%eax
22b4(5): call 0xfffff42c(%rip)
22b9(8): and %r13b,0x8c(%rsp)
22c1(5): jmp 0xfffffda9(%rip)
22c6(6): mov $0x1,%r13d
22cc(2): jmp 0xffffffed(%rip)
22ce(7): lea 0x322f(%rip),%rsi
22d5(5): mov $0x5,%edx
22da(2): xor %edi,%edi
22dc(5): call 0xfffff254(%rip)
22e1(3): mov %rax,%rbx
22e4(5): call 0xfffff1bc(%rip)
22e9(2): mov (%rax),%esi
22eb(3): mov %rbx,%rdx
22ee(5): mov $0x1,%edi
22f3(2): xor %eax,%eax
22f5(5): call 0xfffff3eb(%rip)
22fa(7): lea 0x3889(%rip),%rax
2301(5): jmp 0xfffff769(%rip)
2306(7): mov 0x205deb(%rip),%rsi
230d(5): mov $0x4,%edi
2312(5): mov %r10b,0x8(%rsp)
2317(5): mov %rax,0x10(%rsp)
231c(3): mov %r14,%r15
231f(5): call 0x2201(%rip)
2324(7): lea 0x3303(%rip),%rsi
232b(5): mov $0x5,%edx
2330(2): xor %edi,%edi
2332(3): mov %rax,%rbx
2335(5): call 0xfffff1fb(%rip)
233a(5): mov 0x10(%rsp),%r11
233f(3): mov %rax,%rdx
2342(3): mov %rbx,%rcx
2345(2): xor %eax,%eax
2347(2): xor %edi,%edi
2349(3): mov (%r11),%esi
234c(5): call 0xfffff394(%rip)
2351(4): mov 0x4(%rsp),%eax
2355(6): movzx 0x8(%rsp),%r10d
235b(6): mov %eax,0x205d8f(%rip)
2361(5): jmp 0xfffffcf7(%rip)
2366(5): cmp $0xffffff7e,%eax
236b(2): jnz 0x35(%rip)
236d(2): xor %edi,%edi
236f(5): call 0x201(%rip)
2374(7): lea 0x3189(%rip),%rsi
237b(5): mov $0x5,%edx
2380(2): xor %edi,%edi
2382(5): call 0xfffff1ae(%rip)
2387(3): mov %rax,%rbx
238a(5): call 0xfffff116(%rip)
238f(2): mov (%rax),%esi
2391(3): mov %rbx,%rdx
2394(5): mov $0x1,%edi
2399(2): xor %eax,%eax
239b(5): call 0xfffff345(%rip)
23a0(5): mov $0x1,%edi
23a5(5): call 0x1cb(%rip)
23aa(5): call 0xfffff1b6(%rip)
23af(7): lea 0x324a(%rip),%rsi
23b6(5): mov $0x5,%edx
23bb(2): xor %edi,%edi
23bd(5): call 0xfffff173(%rip)
23c2(3): mov %rax,%rbx
23c5(5): call 0xfffff0db(%rip)
23ca(2): mov (%rax),%esi
23cc(3): mov %rbx,%rdx
23cf(5): mov $0x1,%edi
23d4(2): xor %eax,%eax
23d6(5): call 0xfffff30a(%rip)
23db(5): nop 0x0(%rax,%rax,1)
23e0(2): xor %ebp,%ebp
23e2(3): mov %rdx,%r9
23e5(1): pop %rsi
23e6(3): mov %rsp,%rdx
23e9(4): and $0xfffffff0,%rsp
23ed(1): push %rax
23ee(1): push %rsp
23ef(7): lea 0x30ca(%rip),%r8
23f6(7): lea 0x3053(%rip),%rcx
23fd(7): lea 0xfffff3cc(%rip),%rdi
2404(6): call 0x205bc6(%rip)
240a(1): hlt 

"main" :
17d0(2): push %r15
17d2(2): push %r14
17d4(3): mov %rsi,%r14
17d7(2): push %r13
17d9(2): push %r12
17db(3): xor %r12d,%r12d
17de(1): push %rbp
17df(1): push %rbx
17e0(7): sub $0x158,%rsp
17e7(5): mov %rsi,0x48(%rsp)
17ec(4): mov %edi,0x50(%rsp)
17f0(9): mov $0x28,%rax
17f9(8): mov %rax,0x148(%rsp)
1801(2): xor %eax,%eax
1803(5): call 0xffffff1d(%rip)
1808(3): mov (%r14),%rdi
180b(2): mov %eax,%ebx
180d(5): call 0x12d3(%rip)
1812(7): lea 0x48a8(%rip),%rsi
1819(5): mov $0x6,%edi
181e(5): call 0xfffffe92(%rip)
1823(7): lea 0x3d8d(%rip),%rsi
182a(7): lea 0x3d5d(%rip),%rdi
1831(5): call 0xfffffcdf(%rip)
1836(7): lea 0x3d51(%rip),%rdi
183d(5): call 0xfffffcb3(%rip)
1842(7): lea 0x1127(%rip),%rdi
1849(5): call 0x3c87(%rip)
184e(5): mov $0x0,0x36(%rsp)
1853(5): mov $0x0,0x55(%rsp)
1858(5): mov $0x0,0x56(%rsp)
185d(8): mov $0x0,0x8d(%rsp)
1865(5): mov $0x0,0x37(%rsp)
186a(6): nop 0x0(%rax,%rax,1)
1870(5): mov 0x48(%rsp),%rsi
1875(4): mov 0x50(%rsp),%edi
1879(7): lea 0x206220(%rip),%rcx
1880(7): lea 0x3d6e(%rip),%rdx
1887(3): xor %r8d,%r8d
188a(5): call 0xfffffce6(%rip)
188f(3): cmp $0xff,%eax
1892(6): jz 0xf1(%rip)
1898(3): cmp $0x62,%eax
189b(6): jz 0xce(%rip)
18a1(2): jle 0x27(%rip)
18a3(3): cmp $0x73,%eax
18a6(2): jz 0x6c(%rip)
18a8(2): jle 0x52(%rip)
18aa(3): cmp $0x75,%eax
18ad(2): jz 0xffffffc3(%rip)
18af(6): jl 0xc4(%rip)
18b5(3): cmp $0x76,%eax
18b8(6): jnz 0xae8(%rip)
18be(5): mov $0x1,0x36(%rsp)
18c3(2): jmp 0xffffffad(%rip)
18c5(3): nop (%rax)
18c8(3): cmp $0x41,%eax
18cb(2): jz 0x1a(%rip)
18cd(2): jle 0x4f(%rip)
18cf(3): cmp $0x45,%eax
18d2(2): jz 0x1e(%rip)
18d4(3): cmp $0x54,%eax
18d7(6): jnz 0xac9(%rip)
18dd(6): mov $0x1,%r12d
18e3(2): jmp 0xffffff8d(%rip)
18e5(6): mov $0x1,%r12d
18eb(5): mov $0x1,0x36(%rsp)
18f0(5): mov $0x1,0x55(%rsp)
18f5(5): jmp 0xffffff7b(%rip)
18fa(3): cmp $0x65,%eax
18fd(2): jz 0xffffffee(%rip)
18ff(3): cmp $0x6e,%eax
1902(6): jnz 0xa9e(%rip)
1908(5): mov $0x1,0x37(%rsp)
190d(5): jmp 0xffffff63(%rip)
1912(5): mov $0x1,0x56(%rsp)
1917(5): jmp 0xffffff59(%rip)
191c(5): cmp $0xffffff7d,%eax
1921(4): mov %eax,0x30(%rsp)
1925(6): jnz 0xa41(%rip)
192b(4): sub $0x8,%rsp
192f(7): mov 0x206792(%rip),%rdi
1936(7): mov 0x2066fb(%rip),%rcx
193d(2): push $0x0
193f(7): lea 0x3c89(%rip),%r9
1946(7): lea 0x3c96(%rip),%r8
194d(7): lea 0x3c36(%rip),%rdx
1954(7): lea 0x3bb5(%rip),%rsi
195b(2): xor %eax,%eax
195d(5): call 0x3433(%rip)
1962(2): xor %edi,%edi
1964(5): call 0xfffffdcc(%rip)
1969(8): mov $0x1,0x8d(%rsp)
1971(2): jmp 0xffffff97(%rip)
1973(6): mov $0x1,%r12d
1979(5): mov $0x1,0x36(%rsp)
197e(5): jmp 0xfffffef2(%rip)
1983(4): mov %eax,0x30(%rsp)
1987(8): lea 0xb0(%rsp),%rax
198f(5): mov $0x1,%esi
1994(5): mov $0x1,%edi
1999(3): mov %rax,%rdx
199c(8): mov %rax,0x80(%rsp)
19a4(5): call 0xfffffcdc(%rip)
19a9(2): test %eax,%eax
19ab(6): js 0xa04(%rip)
19b1(8): mov 0xe8(%rsp),%r15
19b9(a): mov $0x2305843009213562880,%rax
19c3(7): movsxd 0x206706(%rip),%rcx
19ca(8): mov $0x0,0x8e(%rsp)
19d2(8): mov $0x1,0x8c(%rsp)
19da(7): lea 0xfffe0000(%r15),%rdx
19e1(5): mov %rcx,0x58(%rsp)
19e6(3): cmp %rax,%rdx
19e9(5): mov $0x20000,%eax
19ee(4): cmovnbe %rax,%r15
19f2(3): movsxd %ebx,%rax
19f5(5): mov %rax,0x68(%rsp)
19fa(8): mov 0xb0(%rsp),%rax
1a02(8): mov %rax,0x90(%rsp)
1a0a(8): mov 0xb8(%rsp),%rax
1a12(8): mov %rax,0x98(%rsp)
1a1a(7): mov 0xc8(%rsp),%eax
1a21(5): and $0xf000,%eax
1a26(7): mov %eax,0x88(%rsp)
1a2d(5): movzx 0x37(%rsp),%eax
1a32(4): or 0x55(%rsp),%al
1a36(4): cmp %ecx,0x50(%rsp)
1a3a(7): mov %al,0x8f(%rsp)
1a41(7): lea 0x4142(%rip),%rax
1a48(7): mov %rax,0x2066a9(%rip)
1a4f(6): jle 0x8ab(%rip)
1a55(5): mov 0x48(%rsp),%rax
1a5a(5): mov 0x58(%rsp),%rcx
1a5f(4): mov 0x0(%rax,%rcx,8),%rax
1a63(7): mov %rax,0x20668e(%rip)
1a6a(7): lea 0x4119(%rip),%rdi
1a71(5): mov $0x2,%ecx
1a76(3): mov %rax,%rsi
1a79(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1a7b(3): setnbe %bl
1a7e(3): sbb $0x0,%bl
1a81(3): movsx %bl,%ebx
1a84(2): test %ebx,%ebx
1a86(6): jnz 0x4d3(%rip)
1a8c(a): mov $0x0,0x20665e(%rip)
1a96(8): mov $0x1,0x8e(%rsp)
1a9e(8): mov 0x80(%rsp),%rdx
1aa6(2): mov %ebx,%esi
1aa8(5): mov $0x1,%edi
1aad(5): call 0xfffffbd3(%rip)
1ab2(2): test %eax,%eax
1ab4(6): js 0x6b3(%rip)
1aba(8): mov 0xe8(%rsp),%rcx
1ac2(a): mov $0x2305843009213562880,%rax
1acc(2): mov %ebx,%edi
1ace(7): lea 0xfffe0000(%rcx),%rdx
1ad5(3): cmp %rax,%rdx
1ad8(5): mov $0x20000,%eax
1add(4): cmovbe %rcx,%rax
1ae1(2): xor %edx,%edx
1ae3(2): xor %esi,%esi
1ae5(5): mov $0x2,%ecx
1aea(5): mov %rax,0x38(%rsp)
1aef(5): call 0xf31(%rip)
1af4(b): cmp $0x8000,0x88(%rsp)
1aff(6): jz 0x5d5(%rip)
1b05(8): cmp $0x0,0x8f(%rsp)
1b0d(5): mov 0x68(%rsp),%rax
1b12(4): lea 0xffffffff(%rax),%r14
1b16(2): jnz 0x16(%rip)
1b18(6): movzx 0x36(%rsp),%r13d
1b1e(3): or %r12d,%r13d
1b21(5): or 0x56(%rsp),%r13b
1b26(6): jz 0x6f9(%rip)
1b2c(5): mov 0x68(%rsp),%rbx
1b31(5): mov 0x38(%rsp),%rbp
1b36(3): mov %rbx,%rdi
1b39(3): add %rbp,%rdi
1b3c(5): call 0x33b4(%rip)
1b41(3): mov %rax,%r13
1b44(5): mov %rax,0x70(%rsp)
1b49(5): lea 0x12(%rbx,%r15,1),%rax
1b4e(4): lea 0x0(%rax,%rbp,4),%rdi
1b52(5): call 0x339e(%rip)
1b57(3): mov %rax,%rcx
1b5a(5): mov %rax,0x78(%rsp)
1b5f(2): xor %edx,%edx
1b61(3): add %r14,%rcx
1b64(3): add %r13,%r14
1b67(6): mov 0x206583(%rip),%esi
1b6d(3): mov %rcx,%rax
1b70(3): mov %r12d,%r13d
1b73(5): mov $0x1,0x54(%rsp)
1b78(3): div %rbx,%rax
1b7b(3): mov %r14,%rax
1b7e(4): mov %esi,0x4(%rsp)
1b82(4): xor $0x1,%r13d
1b86(3): sub %rdx,%rcx
1b89(2): xor %edx,%edx
1b8b(3): div %rbx,%rax
1b8e(3): mov %r14,%rax
1b91(4): lea 0x0(%rcx,%r15,1),%rsi
1b95(3): mov %r15,%r14
1b98(5): mov %rcx,0x20(%rsp)
1b9d(3): mov %rcx,%r15
1ba0(5): mov %rsi,0x10(%rsp)
1ba5(3): sub %rdx,%rax
1ba8(4): lea 0x1(%rax),%rbx
1bac(5): mov %rax,0x18(%rsp)
1bb1(5): mov %rax,0x8(%rsp)
1bb6(8): movzx 0x8d(%rsp),%eax
1bbe(5): mov %rbx,0x40(%rsp)
1bc3(3): xor $0x1,%eax
1bc6(4): mov %al,0x57(%rsp)
1bca(8): lea 0xac(%rsp),%rax
1bd2(5): mov %rax,0x60(%rsp)
1bd7(9): nop 0x0(%rax,%rax,1)
1be0(5): cmp %r15,0x10(%rsp)
1be5(6): jbe 0x1be(%rip)
1beb(5): cmp 0x8(%rsp),%rbx
1bf0(6): jbe 0x213(%rip)
1bf6(5): cmp $0x0,0x54(%rsp)
1bfb(b): mov $0x0,0xac(%rsp)
1c06(6): jnz 0x2aa(%rip)
1c0c(3): mov %r15,%rbx
1c0f(5): sub 0x20(%rsp),%rbx
1c14(6): jnz 0x2df(%rip)
1c1a(6): mov 0x2064d4(%rip),%ebx
1c20(5): mov 0x38(%rsp),%rdx
1c25(5): mov 0x18(%rsp),%rsi
1c2a(2): mov %ebx,%edi
1c2c(5): call 0x2be4(%rip)
1c31(4): cmp $0xffffffff,%rax
1c35(6): jz 0x3d2(%rip)
1c3b(3): test %rax,%rax
1c3e(6): jz 0x470(%rip)
1c44(5): mov 0x18(%rsp),%rdi
1c49(5): mov 0x40(%rsp),%rbx
1c4e(3): add %rdi,%rax
1c51(5): mov %rax,0x8(%rsp)
1c56(3): mov $0xa,(%rax)
1c59(3): mov %rdi,%rax
1c5c(3): movzx (%rax),%ebp
1c5f(4): cmp $0xa,%bpl
1c63(6): jz 0xffffff7d(%rip)
1c69(4): mov 0x4(%rsp),%edi
1c6d(2): test %edi,%edi
1c6f(2): js 0x20(%rip)
1c71(5): cmp $0x0,0x37(%rsp)
1c76(2): jz 0x19(%rip)
1c78(5): call 0x878(%rip)
1c7d(7): mov 0x2063ac(%rip),%rsi
1c84(3): mov %r15,%rdi
1c87(5): call 0xfffff899(%rip)
1c8c(3): mov %rax,%r15
1c8f(5): cmp $0x0,0x36(%rsp)
1c94(2): jz 0x27(%rip)
1c96(2): jmp 0x57(%rip)
1c98(8): nop 0x0(%rax,%rax,1)
1ca0(3): test %r12b,%r12b
1ca3(2): jz 0x1e(%rip)
1ca5(5): mov $0x495e,%eax
1caa(4): add $0x2,%r15
1cae(5): mov %ax,0xfffffffe(%r15)
1cb3(4): add $0x1,%rbx
1cb7(4): movzx 0xffffffff(%rbx),%ebp
1cbb(4): cmp $0x9,%bpl
1cbf(2): jz 0xffffffe1(%rip)
1cc1(4): cmp $0xa,%bpl
1cc5(6): jz 0xcb(%rip)
1ccb(3): mov %bpl,(%r15)
1cce(4): add $0x1,%r15
1cd2(2): jmp 0xffffffe1(%rip)
1cd4(4): nop 0x0(%rax)
1cd8(4): cmp $0x7e,%bpl
1cdc(2): jnbe 0x34(%rip)
1cde(3): mov %bpl,(%r15)
1ce1(4): add $0x1,%r15
1ce5(4): add $0x1,%rbx
1ce9(4): movzx 0xffffffff(%rbx),%ebp
1ced(4): cmp $0x1f,%bpl
1cf1(2): jnbe 0xffffffe7(%rip)
1cf3(4): cmp $0x9,%bpl
1cf7(2): jnz 0x49(%rip)
1cf9(3): test %r13b,%r13b
1cfc(2): jz 0x44(%rip)
1cfe(4): mov $0x9,(%r15)
1d02(4): add $0x1,%r15
1d06(2): jmp 0xffffffdf(%rip)
1d08(8): nop 0x0(%rax,%rax,1)
1d10(4): cmp $0x7f,%bpl
1d14(2): jz 0x4c(%rip)
1d16(5): mov $0x2d4d,%ecx
1d1b(4): cmp $0x9f,%bpl
1d1f(4): mov %cx,(%r15)
1d23(2): jbe 0x55(%rip)
1d25(4): cmp $0xff,%bpl
1d29(6): jz 0x15f(%rip)
1d2f(3): add $0x80,%ebp
1d32(4): add $0x3,%r15
1d36(4): mov %bpl,0xffffffff(%r15)
1d3a(2): jmp 0xffffffab(%rip)
1d3c(4): nop 0x0(%rax)
1d40(4): cmp $0xa,%bpl
1d44(2): jz 0x4c(%rip)
1d46(3): add $0x40,%ebp
1d49(4): mov $0x5e,(%r15)
1d4d(4): add $0x2,%r15
1d51(4): mov %bpl,0xffffffff(%r15)
1d55(2): jmp 0xffffff90(%rip)
1d57(9): nop 0x0(%rax,%rax,1)
1d60(5): mov $0x3f5e,%esi
1d65(4): add $0x2,%r15
1d69(5): mov %si,0xfffffffe(%r15)
1d6e(5): jmp 0xffffff77(%rip)
1d73(5): nop 0x0(%rax,%rax,1)
1d78(3): sub $0x40,%ebp
1d7b(5): mov $0x5e,0x2(%r15)
1d80(4): add $0x4,%r15
1d84(4): mov %bpl,0xffffffff(%r15)
1d88(5): jmp 0xffffff5d(%rip)
1d8d(3): nop (%rax)
1d90(5): cmp %r15,0x10(%rsp)
1d95(4): mov 0x30(%rsp),%eax
1d99(4): mov %eax,0x4(%rsp)
1d9d(6): jnbe 0xfffffe4e(%rip)
1da3(5): mov 0x20(%rsp),%rbp
1da8(8): nop 0x0(%rax,%rax,1)
1db0(3): mov %r14,%rdx
1db3(3): mov %rbp,%rsi
1db6(5): mov $0x1,%edi
1dbb(5): call 0xca5(%rip)
1dc0(3): cmp %rax,%r14
1dc3(6): jnz 0x50b(%rip)
1dc9(3): add %r14,%rbp
1dcc(3): mov %r15,%r9
1dcf(3): sub %rbp,%r9
1dd2(3): cmp %r9,%r14
1dd5(2): jbe 0xffffffdb(%rip)
1dd7(5): mov 0x20(%rsp),%r15
1ddc(3): mov %r9,%rdx
1ddf(3): mov %rbp,%rsi
1de2(5): mov %r9,0x28(%rsp)
1de7(3): mov %r15,%rdi
1dea(5): call 0xfffff8e6(%rip)
1def(5): cmp 0x8(%rsp),%rbx
1df4(5): mov 0x28(%rsp),%r9
1df9(4): lea 0x0(%r15,%r9,1),%r15
1dfd(6): jnbe 0xfffffdf9(%rip)
1e03(5): add $0x1,0x4(%rsp)
1e08(4): lea 0x1(%rbx),%rdx
1e0c(4): mov 0x4(%rsp),%eax
1e10(2): test %eax,%eax
1e12(2): jle 0x4e(%rip)
1e14(3): cmp $0x1,%eax
1e17(2): jz 0x15(%rip)
1e19(5): cmp $0x0,0x56(%rsp)
1e1e(8): mov $0x2,0x4(%rsp)
1e26(6): jnz 0xc2(%rip)
1e2c(5): cmp $0x0,0x57(%rsp)
1e31(2): jz 0x2f(%rip)
1e33(5): cmp $0x0,0x37(%rsp)
1e38(2): jz 0x28(%rip)
1e3a(5): mov %rdx,0x28(%rsp)
1e3f(5): call 0x6b1(%rip)
1e44(7): mov 0x2061e5(%rip),%rsi
1e4b(3): mov %r15,%rdi
1e4e(5): call 0xfffff6d2(%rip)
1e53(5): mov 0x28(%rsp),%rdx
1e58(3): mov %rax,%r15
1e5b(5): nop 0x0(%rax,%rax,1)
1e60(5): cmp $0x0,0x55(%rsp)
1e65(4): lea 0x1(%r15),%rax
1e69(2): jz 0x37(%rip)
1e6b(4): mov $0x24,(%r15)
1e6f(4): add $0x2,%r15
1e73(3): mov $0xa,(%rax)
1e76(3): mov %rbx,%rax
1e79(3): mov %rdx,%rbx
1e7c(5): jmp 0xfffffde0(%rip)
1e81(7): nop 0x0(%rax)
1e88(5): mov $0x3f5e,%edx
1e8d(4): add $0x4,%r15
1e91(5): mov %dx,0xfffffffe(%r15)
1e96(5): jmp 0xfffffe4f(%rip)
1e9b(5): nop 0x0(%rax,%rax,1)
1ea0(3): mov %rax,%rsi
1ea3(3): mov %r15,%rax
1ea6(3): mov %rsi,%r15
1ea9(2): jmp 0xffffffca(%rip)
1eab(5): nop 0x0(%rax,%rax,1)
1eb0(6): mov 0x20623e(%rip),%ebx
1eb6(5): mov 0x60(%rsp),%rdx
1ebb(2): xor %eax,%eax
1ebd(5): mov $0x541b,%esi
1ec2(2): mov %ebx,%edi
1ec4(5): call 0xfffff6fc(%rip)
1ec9(2): test %eax,%eax
1ecb(2): js 0x55(%rip)
1ecd(8): mov 0xac(%rsp),%r8d
1ed5(3): test %r8d,%r8d
1ed8(6): jnz 0xfffffd48(%rip)
1ede(5): jmp 0xfffffd2e(%rip)
1ee3(5): nop 0x0(%rax,%rax,1)
1ee8(3): movzx (%rbx),%ebp
1eeb(3): mov %rdx,%rbx
1eee(5): jmp 0xfffffd71(%rip)
1ef3(5): mov 0x20(%rsp),%r15
1ef8(3): mov %rbx,%rdx
1efb(5): mov $0x1,%edi
1f00(3): mov %r15,%rsi
1f03(5): call 0xb5d(%rip)
1f08(3): cmp %rax,%rbx
1f0b(6): jz 0xfffffd0f(%rip)
1f11(5): call 0xfffff88f(%rip)
1f16(a): nop 0x0(%rax,%rax,1)
1f20(5): call 0xfffff580(%rip)
1f25(2): mov (%rax),%ecx
1f27(3): cmp $0x5f,%ecx
1f2a(4): setz %r10b
1f2e(3): cmp $0x26,%ecx
1f31(2): jnbe 0x15(%rip)
1f33(a): mov $0x274916179968,%rdx
1f3d(3): shr %cl,%rdx
1f40(3): and $0x1,%edx
1f43(3): or %edx,%r10d
1f46(3): test %r10b,%r10b
1f49(6): jz 0x3bd(%rip)
1f4f(5): mov $0x0,0x54(%rsp)
1f54(5): jmp 0xffffff79(%rip)
1f59(2): xor %esi,%esi
1f5b(3): mov %rax,%rdi
1f5e(2): xor %eax,%eax
1f60(5): call 0xfffff790(%rip)
1f65(2): test %eax,%eax
1f67(2): mov %eax,%ebx
1f69(6): mov %eax,0x206185(%rip)
1f6f(6): jns 0xfffffb2f(%rip)
1f75(7): mov 0x20617c(%rip),%rdx
1f7c(5): mov $0x3,%esi
1f81(2): xor %edi,%edi
1f83(5): call 0x269d(%rip)
1f88(3): mov %rax,%rbx
1f8b(5): call 0xfffff515(%rip)
1f90(2): mov (%rax),%esi
1f92(7): lea 0x3bab(%rip),%rdx
1f99(3): mov %rbx,%rcx
1f9c(2): xor %edi,%edi
1f9e(2): xor %eax,%eax
1fa0(5): call 0xfffff740(%rip)
1fa5(8): mov $0x0,0x8c(%rsp)
1fad(6): add $0x1,0x58(%rsp)
1fb3(5): mov 0x58(%rsp),%rax
1fb8(4): cmp %eax,0x50(%rsp)
1fbc(6): jnle 0xfffffa99(%rip)
1fc2(8): cmp $0x0,0x8e(%rsp)
1fca(6): jnz 0x21a(%rip)
1fd0(8): movzx 0x8c(%rsp),%eax
1fd8(3): xor $0x1,%eax
1fdb(8): mov 0x148(%rsp),%rcx
1fe3(9): xor $0x28,%rcx
1fec(3): movzx %al,%eax
1fef(6): jnz 0x3bb(%rip)
1ff5(7): add $0x158,%rsp
1ffc(1): pop %rbx
1ffd(1): pop %rbp
1ffe(2): pop %r12
2000(2): pop %r13
2002(2): pop %r14
2004(2): pop %r15
2006(1): ret near (%rsp)
2007(7): mov 0x2060ea(%rip),%rdx
200e(2): xor %edi,%edi
2010(3): mov %r15,%rax
2013(5): mov $0x3,%esi
2018(3): mov %r14,%r15
201b(3): mov %rax,%r14
201e(5): call 0x2602(%rip)
2023(3): mov %rax,%rbx
2026(5): call 0xfffff47a(%rip)
202b(2): mov (%rax),%esi
202d(7): lea 0x3b10(%rip),%rdx
2034(2): xor %edi,%edi
2036(2): xor %eax,%eax
2038(3): mov %rbx,%rcx
203b(5): call 0xfffff6a5(%rip)
2040(5): sub 0x20(%rsp),%r14
2045(6): jnz 0x15f(%rip)
204b(4): mov 0x4(%rsp),%eax
204f(3): xor %r10d,%r10d
2052(6): mov %eax,0x206098(%rip)
2058(5): mov 0x78(%rsp),%rdi
205d(8): and %r10b,0x8c(%rsp)
2065(5): call 0xfffff41b(%rip)
206a(5): mov 0x70(%rsp),%rdi
206f(5): call 0xfffff411(%rip)
2074(7): mov 0x20607d(%rip),%rsi
207b(7): lea 0x3b08(%rip),%rdi
2082(5): mov $0x2,%ecx
2087(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2089(3): setnbe %al
208c(2): sbb $0x0,%al
208e(2): test %al,%al
2090(6): jz 0xffffff1d(%rip)
2096(6): mov 0x206058(%rip),%edi
209c(5): call 0xfffff534(%rip)
20a1(2): test %eax,%eax
20a3(6): jns 0xffffff0a(%rip)
20a9(5): jmp 0xfffffecc(%rip)
20ae(3): mov %r15,%rax
20b1(3): mov %r14,%r15
20b4(3): mov %rax,%rbx
20b7(5): sub 0x20(%rsp),%rbx
20bc(6): jnz 0x108(%rip)
20c2(4): mov 0x4(%rsp),%eax
20c6(6): mov $0x1,%r10d
20cc(6): mov %eax,0x20601e(%rip)
20d2(2): jmp 0xffffff86(%rip)
20d4(8): mov 0x90(%rsp),%rax
20dc(8): cmp %rax,0xb0(%rsp)
20e4(6): jnz 0xfffffa21(%rip)
20ea(8): mov 0x98(%rsp),%rax
20f2(8): cmp %rax,0xb8(%rsp)
20fa(6): jnz 0xfffffa0b(%rip)
2100(6): mov 0x205fee(%rip),%edi
2106(2): xor %esi,%esi
2108(5): mov $0x1,%edx
210d(5): call 0xfffff493(%rip)
2112(8): cmp 0xe0(%rsp),%rax
211a(6): jnl 0xfffff9eb(%rip)
2120(7): mov 0x205fd1(%rip),%rdx
2127(5): mov $0x3,%esi
212c(2): xor %edi,%edi
212e(5): call 0x24f2(%rip)
2133(7): lea 0x34d6(%rip),%rsi
213a(3): mov %rax,%rbx
213d(5): mov $0x5,%edx
2142(2): xor %edi,%edi
2144(5): call 0xfffff3ec(%rip)
2149(3): mov %rbx,%rcx
214c(3): mov %rax,%rdx
214f(2): xor %esi,%esi
2151(2): xor %edi,%edi
2153(2): xor %eax,%eax
2155(5): call 0xfffff58b(%rip)
215a(8): mov $0x0,0x8c(%rsp)
2162(5): jmp 0xffffff12(%rip)
2167(7): mov 0x205f8a(%rip),%rdx
216e(5): mov $0x3,%esi
2173(2): xor %edi,%edi
2175(5): call 0x24ab(%rip)
217a(3): mov %rax,%rbx
217d(5): call 0xfffff323(%rip)
2182(2): mov (%rax),%esi
2184(7): lea 0x39b9(%rip),%rdx
218b(3): mov %rbx,%rcx
218e(2): xor %edi,%edi
2190(2): xor %eax,%eax
2192(5): call 0xfffff54e(%rip)
2197(8): mov $0x0,0x8c(%rsp)
219f(5): jmp 0xfffffed5(%rip)
21a4(5): mov 0x20(%rsp),%rsi
21a9(3): mov %r14,%rdx
21ac(5): mov $0x1,%edi
21b1(5): call 0x8af(%rip)
21b6(3): cmp %rax,%r14
21b9(6): jz 0xfffffe92(%rip)
21bf(5): jmp 0xfffffd52(%rip)
21c4(5): mov 0x20(%rsp),%rsi
21c9(3): mov %rbx,%rdx
21cc(5): mov $0x1,%edi
21d1(5): call 0x88f(%rip)
21d6(3): cmp %rax,%rbx
21d9(6): jz 0xfffffee9(%rip)
21df(5): jmp 0xfffffd32(%rip)
21e4(2): xor %edi,%edi
21e6(5): call 0xfffff3ea(%rip)
21eb(2): test %eax,%eax
21ed(6): jns 0xfffffde3(%rip)
21f3(7): lea 0x344a(%rip),%rsi
21fa(5): mov $0x5,%edx
21ff(2): xor %edi,%edi
2201(5): call 0xfffff32f(%rip)
2206(3): mov %rax,%rbx
2209(5): call 0xfffff297(%rip)
220e(2): mov (%rax),%esi
2210(3): mov %rbx,%rdx
2213(5): mov $0x1,%edi
2218(2): xor %eax,%eax
221a(5): call 0xfffff4c6(%rip)
221f(5): mov 0x38(%rsp),%rax
2224(3): cmp %rax,%r15
2227(4): cmovnb %r15,%rax
222b(4): lea 0x0(%rax,%r14,1),%rdi
222f(3): mov %rax,%rbp
2232(5): call 0x2cbe(%rip)
2237(3): add %rax,%r14
223a(5): mov %rax,0x70(%rsp)
223f(2): xor %edx,%edx
2241(3): mov %r14,%rax
2244(3): mov %r14,%rbx
2247(5): div 0x68(%rsp),%rax
224c(3): sub %rdx,%rbx
224f(2): jmp 0x20(%rip)
2251(3): test %rax,%rax
2254(2): jz 0x72(%rip)
2256(3): mov %rax,%rdx
2259(3): mov %rbx,%rsi
225c(5): mov $0x1,%edi
2261(5): call 0x7ff(%rip)
2266(3): cmp %rax,%r14
2269(6): jnz 0x10b(%rip)
226f(6): mov 0x205e7f(%rip),%edi
2275(3): mov %rbp,%rdx
2278(3): mov %rbx,%rsi
227b(5): call 0x2595(%rip)
2280(4): cmp $0xffffffff,%rax
2284(3): mov %rax,%r14
2287(2): jnz 0xffffffca(%rip)
2289(7): mov 0x205e68(%rip),%rdx
2290(5): mov $0x3,%esi
2295(2): xor %edi,%edi
2297(5): call 0x2389(%rip)
229c(3): mov %rax,%rbx
229f(5): call 0xfffff201(%rip)
22a4(2): mov (%rax),%esi
22a6(7): lea 0x3897(%rip),%rdx
22ad(3): mov %rbx,%rcx
22b0(2): xor %edi,%edi
22b2(2): xor %eax,%eax
22b4(5): call 0xfffff42c(%rip)
22b9(8): and %r13b,0x8c(%rsp)
22c1(5): jmp 0xfffffda9(%rip)
22c6(6): mov $0x1,%r13d
22cc(2): jmp 0xffffffed(%rip)
22ce(7): lea 0x322f(%rip),%rsi
22d5(5): mov $0x5,%edx
22da(2): xor %edi,%edi
22dc(5): call 0xfffff254(%rip)
22e1(3): mov %rax,%rbx
22e4(5): call 0xfffff1bc(%rip)
22e9(2): mov (%rax),%esi
22eb(3): mov %rbx,%rdx
22ee(5): mov $0x1,%edi
22f3(2): xor %eax,%eax
22f5(5): call 0xfffff3eb(%rip)
22fa(7): lea 0x3889(%rip),%rax
2301(5): jmp 0xfffff769(%rip)
2306(7): mov 0x205deb(%rip),%rsi
230d(5): mov $0x4,%edi
2312(5): mov %r10b,0x8(%rsp)
2317(5): mov %rax,0x10(%rsp)
231c(3): mov %r14,%r15
231f(5): call 0x2201(%rip)
2324(7): lea 0x3303(%rip),%rsi
232b(5): mov $0x5,%edx
2330(2): xor %edi,%edi
2332(3): mov %rax,%rbx
2335(5): call 0xfffff1fb(%rip)
233a(5): mov 0x10(%rsp),%r11
233f(3): mov %rax,%rdx
2342(3): mov %rbx,%rcx
2345(2): xor %eax,%eax
2347(2): xor %edi,%edi
2349(3): mov (%r11),%esi
234c(5): call 0xfffff394(%rip)
2351(4): mov 0x4(%rsp),%eax
2355(6): movzx 0x8(%rsp),%r10d
235b(6): mov %eax,0x205d8f(%rip)
2361(5): jmp 0xfffffcf7(%rip)
2366(5): cmp $0xffffff7e,%eax
236b(2): jnz 0x35(%rip)
236d(2): xor %edi,%edi
236f(5): call 0x201(%rip)
2374(7): lea 0x3189(%rip),%rsi
237b(5): mov $0x5,%edx
2380(2): xor %edi,%edi
2382(5): call 0xfffff1ae(%rip)
2387(3): mov %rax,%rbx
238a(5): call 0xfffff116(%rip)
238f(2): mov (%rax),%esi
2391(3): mov %rbx,%rdx
2394(5): mov $0x1,%edi
2399(2): xor %eax,%eax
239b(5): call 0xfffff345(%rip)
23a0(5): mov $0x1,%edi
23a5(5): call 0x1cb(%rip)
23aa(5): call 0xfffff1b6(%rip)
23af(7): lea 0x324a(%rip),%rsi
23b6(5): mov $0x5,%edx
23bb(2): xor %edi,%edi
23bd(5): call 0xfffff173(%rip)
23c2(3): mov %rax,%rbx
23c5(5): call 0xfffff0db(%rip)
23ca(2): mov (%rax),%esi
23cc(3): mov %rbx,%rdx
23cf(5): mov $0x1,%edi
23d4(2): xor %eax,%eax
23d6(5): call 0xfffff30a(%rip)
23db(5): nop 0x0(%rax,%rax,1)
23e0(2): xor %ebp,%ebp
23e2(3): mov %rdx,%r9
23e5(1): pop %rsi
23e6(3): mov %rsp,%rdx
23e9(4): and $0xfffffff0,%rsp
23ed(1): push %rax
23ee(1): push %rsp
23ef(7): lea 0x30ca(%rip),%r8
23f6(7): lea 0x3053(%rip),%rcx
23fd(7): lea 0xfffff3cc(%rip),%rdi
2404(6): call 0x205bc6(%rip)
240a(1): hlt 

"_start" :
23e0(2): xor %ebp,%ebp
23e2(3): mov %rdx,%r9
23e5(1): pop %rsi
23e6(3): mov %rsp,%rdx
23e9(4): and $0xfffffff0,%rsp
23ed(1): push %rax
23ee(1): push %rsp
23ef(7): lea 0x30ca(%rip),%r8
23f6(7): lea 0x3053(%rip),%rcx
23fd(7): lea 0xfffff3cc(%rip),%rdi
2404(6): call 0x205bc6(%rip)
240a(1): hlt 

"deregister_tm_clones" :
2410(7): lea 0x205ca9(%rip),%rdi
2417(1): push %rbp
2418(7): lea 0x205ca1(%rip),%rax
241f(3): cmp %rdi,%rax
2422(3): mov %rsp,%rbp
2425(2): jz 0x1b(%rip)
2427(7): mov 0x205b9a(%rip),%rax
242e(3): test %rax,%rax
2431(2): jz 0xf(%rip)
2433(1): pop %rbp
2434(2): jmp %rax
2436(a): nop 0x0(%rax,%rax,1)
2440(1): pop %rbp
2441(1): ret near (%rsp)

"register_tm_clones" :
2450(7): lea 0x205c69(%rip),%rdi
2457(7): lea 0x205c62(%rip),%rsi
245e(1): push %rbp
245f(3): sub %rdi,%rsi
2462(3): mov %rsp,%rbp
2465(4): sar $0x3,%rsi
2469(3): mov %rsi,%rax
246c(4): shr $0x3f,%rax
2470(3): add %rax,%rsi
2473(3): sar $0x1,%rsi
2476(2): jz 0x1a(%rip)
2478(7): mov 0x205b61(%rip),%rax
247f(3): test %rax,%rax
2482(2): jz 0xe(%rip)
2484(1): pop %rbp
2485(2): jmp %rax
2487(9): nop 0x0(%rax,%rax,1)
2490(1): pop %rbp
2491(1): ret near (%rsp)

"__do_global_dtors_aux" :
24a0(7): cmp $0x0,0x205c41(%rip)
24a7(2): jnz 0x31(%rip)
24a9(8): cmp $0x0,0x205b37(%rip)
24b1(1): push %rbp
24b2(3): mov %rsp,%rbp
24b5(2): jz 0xe(%rip)
24b7(7): mov 0x205b4a(%rip),%rdi
24be(5): call 0xfffff2d2(%rip)
24c3(5): call 0xffffff4d(%rip)
24c8(7): mov $0x1,0x205c19(%rip)
24cf(1): pop %rbp
24d0(1): ret near (%rsp)
24d1(7): nop 0x0(%rax)
24d8(2): REP ret near (%rsp)

"frame_dummy" :
24e0(1): push %rbp
24e1(3): mov %rsp,%rbp
24e4(1): pop %rbp
24e5(5): jmp 0xffffff6b(%rip)

"next_line_num" :
24f0(7): mov 0x205b31(%rip),%rcx
24f7(7): lea 0x205b23(%rip),%rax
24fe(2): jmp 0xf(%rip)
2500(4): sub $0x1,%rax
2504(4): mov $0x30,0x1(%rax)
2508(3): cmp %rax,%rcx
250b(2): jnbe 0x15(%rip)
250d(3): movzx (%rax),%edx
2510(3): cmp $0x38,%dl
2513(2): jnle 0xffffffed(%rip)
2515(3): add $0x1,%edx
2518(2): mov %dl,(%rax)
251a(1): ret near (%rsp)
251b(5): nop 0x0(%rax,%rax,1)
2520(7): lea 0x205ae9(%rip),%rax
2527(3): cmp %rax,%rcx
252a(2): jbe 0x2e(%rip)
252c(4): lea 0xffffffff(%rcx),%rdx
2530(4): mov $0x31,0xffffffff(%rcx)
2534(7): mov %rdx,0x205aed(%rip)
253b(7): mov 0x205aee(%rip),%rax
2542(3): cmp %rdx,%rax
2545(2): jbe 0xd(%rip)
2547(4): sub $0x1,%rax
254b(7): mov %rax,0x205ade(%rip)
2552(2): REP ret near (%rsp)
2554(4): nop 0x0(%rax)
2558(7): mov $0x3e,0x205ab1(%rip)
255f(3): mov %rcx,%rdx
2562(2): jmp 0xffffffd9(%rip)

"usage" :
2570(2): push %r13
2572(2): push %r12
2574(5): mov $0x5,%edx
2579(1): push %rbp
257a(1): push %rbx
257b(2): mov %edi,%ebp
257d(7): sub $0x88,%rsp
2584(7): mov 0x205b85(%rip),%rbx
258b(9): mov $0x28,%rax
2594(5): mov %rax,0x78(%rsp)
2599(2): xor %eax,%eax
259b(2): test %edi,%edi
259d(2): jz 0x30(%rip)
259f(7): lea 0x311a(%rip),%rsi
25a6(2): xor %edi,%edi
25a8(5): call 0xffffef88(%rip)
25ad(7): mov 0x205b2c(%rip),%rdi
25b4(3): mov %rax,%rdx
25b7(3): mov %rbx,%rcx
25ba(5): mov $0x1,%esi
25bf(2): xor %eax,%eax
25c1(5): call 0xfffff18f(%rip)
25c6(2): mov %ebp,%edi
25c8(5): call 0xfffff168(%rip)
25cd(7): lea 0x3114(%rip),%rsi
25d4(2): xor %edi,%edi
25d6(5): call 0xffffef5a(%rip)
25db(3): mov %rbx,%rdx
25de(3): mov %rax,%rsi
25e1(5): mov $0x1,%edi
25e6(2): xor %eax,%eax
25e8(5): call 0xfffff0d8(%rip)
25ed(7): mov 0x205ad4(%rip),%rbx
25f4(7): lea 0x3115(%rip),%rsi
25fb(5): mov $0x5,%edx
2600(2): xor %edi,%edi
2602(5): call 0xffffef2e(%rip)
2607(3): mov %rbx,%rsi
260a(3): mov %rax,%rdi
260d(5): call 0xfffff003(%rip)
2612(7): mov 0x205aaf(%rip),%rbx
2619(7): lea 0x3120(%rip),%rsi
2620(5): mov $0x5,%edx
2625(2): xor %edi,%edi
2627(5): call 0xffffef09(%rip)
262c(3): mov %rbx,%rsi
262f(3): mov %rax,%rdi
2632(5): call 0xffffefde(%rip)
2637(7): mov 0x205a8a(%rip),%rbx
263e(7): lea 0x3133(%rip),%rsi
2645(5): mov $0x5,%edx
264a(2): xor %edi,%edi
264c(5): call 0xffffeee4(%rip)
2651(3): mov %rbx,%rsi
2654(3): mov %rax,%rdi
2657(5): call 0xffffefb9(%rip)
265c(7): mov 0x205a65(%rip),%rbx
2663(7): lea 0x325e(%rip),%rsi
266a(5): mov $0x5,%edx
266f(2): xor %edi,%edi
2671(5): call 0xffffeebf(%rip)
2676(3): mov %rbx,%rsi
2679(3): mov %rax,%rdi
267c(5): call 0xffffef94(%rip)
2681(7): mov 0x205a40(%rip),%rbx
2688(7): lea 0x3311(%rip),%rsi
268f(5): mov $0x5,%edx
2694(2): xor %edi,%edi
2696(5): call 0xffffee9a(%rip)
269b(3): mov %rbx,%rsi
269e(3): mov %rax,%rdi
26a1(5): call 0xffffef6f(%rip)
26a6(7): mov 0x205a1b(%rip),%rbx
26ad(7): lea 0x331c(%rip),%rsi
26b4(5): mov $0x5,%edx
26b9(2): xor %edi,%edi
26bb(5): call 0xffffee75(%rip)
26c0(3): mov %rbx,%rsi
26c3(3): mov %rax,%rdi
26c6(5): call 0xffffef4a(%rip)
26cb(7): mov 0x205a3e(%rip),%rbx
26d2(7): lea 0x332f(%rip),%rsi
26d9(5): mov $0x5,%edx
26de(2): xor %edi,%edi
26e0(5): call 0xffffee50(%rip)
26e5(3): mov %rbx,%rcx
26e8(3): mov %rbx,%rdx
26eb(3): mov %rax,%rsi
26ee(5): mov $0x1,%edi
26f3(2): xor %eax,%eax
26f5(7): lea 0x2e14(%rip),%rbx
26fc(5): call 0xffffefc4(%rip)
2701(7): lea 0x2e0c(%rip),%rax
2708(7): lea 0x2e46(%rip),%rcx
270f(9): mov $0x0,0x60(%rsp)
2718(9): mov $0x0,0x68(%rsp)
2721(3): mov %rsp,%rdx
2724(4): mov %rax,(%rsp)
2728(7): lea 0x2de7(%rip),%rax
272f(5): mov %rcx,0x30(%rsp)
2734(7): lea 0x2e24(%rip),%rcx
273b(5): mov %rax,0x8(%rsp)
2740(7): lea 0x2e47(%rip),%rax
2747(5): mov %rcx,0x40(%rsp)
274c(7): lea 0x2e16(%rip),%rcx
2753(5): mov %rax,0x10(%rsp)
2758(7): lea 0x2dc7(%rip),%rax
275f(5): mov %rcx,0x50(%rsp)
2764(5): mov %rax,0x18(%rsp)
2769(7): lea 0x2dcc(%rip),%rax
2770(5): mov %rax,0x20(%rsp)
2775(7): lea 0x2dca(%rip),%rax
277c(5): mov %rax,0x28(%rsp)
2781(5): mov %rax,0x38(%rsp)
2786(5): mov %rax,0x48(%rsp)
278b(5): mov %rax,0x58(%rsp)
2790(4): add $0x10,%rdx
2794(3): mov (%rdx),%rdi
2797(3): test %rdi,%rdi
279a(2): jz 0x15(%rip)
279c(5): mov $0x4,%ecx
27a1(3): mov %rbx,%rsi
27a4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
27a6(3): setnbe %al
27a9(2): sbb $0x0,%al
27ab(2): test %al,%al
27ad(2): jnz 0xffffffe3(%rip)
27af(4): mov 0x8(%rdx),%r12
27b3(2): xor %edi,%edi
27b5(5): mov $0x5,%edx
27ba(7): lea 0x2db2(%rip),%rsi
27c1(3): test %r12,%r12
27c4(6): jz 0xc7(%rip)
27ca(5): call 0xffffed66(%rip)
27cf(7): lea 0x32c2(%rip),%rcx
27d6(7): lea 0x2dad(%rip),%rdx
27dd(3): mov %rax,%rsi
27e0(5): mov $0x1,%edi
27e5(2): xor %eax,%eax
27e7(5): call 0xffffeed9(%rip)
27ec(2): xor %esi,%esi
27ee(5): mov $0x5,%edi
27f3(5): call 0xffffeebd(%rip)
27f8(3): test %rax,%rax
27fb(2): jz 0x1e(%rip)
27fd(7): lea 0x2d94(%rip),%rsi
2804(5): mov $0x3,%edx
2809(3): mov %rax,%rdi
280c(5): call 0xffffeca4(%rip)
2811(2): test %eax,%eax
2813(6): jnz 0x10d(%rip)
2819(7): lea 0x2d7c(%rip),%rsi
2820(2): xor %edi,%edi
2822(5): mov $0x5,%edx
2827(5): call 0xffffed09(%rip)
282c(7): lea 0x2cdd(%rip),%rcx
2833(7): lea 0x325e(%rip),%rdx
283a(3): mov %rax,%rsi
283d(5): mov $0x1,%edi
2842(2): xor %eax,%eax
2844(5): call 0xffffee7c(%rip)
2849(3): cmp %rbx,%r12
284c(7): lea 0x2cdd(%rip),%rcx
2853(7): lea 0x3867(%rip),%rbx
285a(4): cmove %rcx,%rbx
285e(7): lea 0x32a3(%rip),%rsi
2865(2): xor %edi,%edi
2867(5): mov $0x5,%edx
286c(5): call 0xffffecc4(%rip)
2871(3): mov %rbx,%rcx
2874(3): mov %rax,%rsi
2877(3): mov %r12,%rdx
287a(5): mov $0x1,%edi
287f(2): xor %eax,%eax
2881(5): call 0xffffee3f(%rip)
2886(5): jmp 0xfffffd40(%rip)
288b(5): call 0xffffeca5(%rip)
2890(7): lea 0x3201(%rip),%rcx
2897(7): lea 0x2cec(%rip),%rdx
289e(3): mov %rax,%rsi
28a1(5): mov $0x1,%edi
28a6(2): xor %eax,%eax
28a8(5): call 0xffffee18(%rip)
28ad(2): xor %esi,%esi
28af(5): mov $0x5,%edi
28b4(5): call 0xffffedfc(%rip)
28b9(3): test %rax,%rax
28bc(2): jz 0x1a(%rip)
28be(7): lea 0x2cd3(%rip),%rsi
28c5(5): mov $0x3,%edx
28ca(3): mov %rax,%rdi
28cd(5): call 0xffffebe3(%rip)
28d2(2): test %eax,%eax
28d4(2): jnz 0x45(%rip)
28d6(7): lea 0x2cbf(%rip),%rsi
28dd(5): mov $0x5,%edx
28e2(2): xor %edi,%edi
28e4(7): lea 0x2c25(%rip),%r12
28eb(7): lea 0x2c3e(%rip),%rbx
28f2(5): call 0xffffec3e(%rip)
28f7(7): lea 0x2c12(%rip),%rcx
28fe(7): lea 0x3193(%rip),%rdx
2905(3): mov %rax,%rsi
2908(5): mov $0x1,%edi
290d(2): xor %eax,%eax
290f(5): call 0xffffedb1(%rip)
2914(5): jmp 0xffffff4a(%rip)
2919(7): lea 0x2bf0(%rip),%r12
2920(7): mov 0x2057a1(%rip),%r13
2927(7): lea 0x3192(%rip),%rsi
292e(2): xor %edi,%edi
2930(5): mov $0x5,%edx
2935(5): call 0xffffebfb(%rip)
293a(3): mov %r13,%rsi
293d(3): mov %rax,%rdi
2940(5): call 0xffffecd0(%rip)
2945(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2950(7): mov %rdi,0x2057b1(%rip)
2957(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2960(7): mov %dil,0x205799(%rip)
2967(1): ret near (%rsp)

"close_stdout" :
2970(1): push %rbp
2971(1): push %rbx
2972(4): sub $0x8,%rsp
2976(7): mov 0x20574b(%rip),%rdi
297d(5): call 0x2893(%rip)
2982(2): test %eax,%eax
2984(2): jz 0x18(%rip)
2986(5): call 0xffffeb1a(%rip)
298b(7): cmp $0x0,0x20576e(%rip)
2992(3): mov %rax,%rbx
2995(2): jz 0x1e(%rip)
2997(3): cmp $0x20,(%rax)
299a(2): jnz 0x19(%rip)
299c(7): mov 0x20573d(%rip),%rdi
29a3(5): call 0x286d(%rip)
29a8(2): test %eax,%eax
29aa(2): jnz 0x48(%rip)
29ac(4): add $0x8,%rsp
29b0(1): pop %rbx
29b1(1): pop %rbp
29b2(1): ret near (%rsp)
29b3(7): lea 0x2b4a(%rip),%rsi
29ba(2): xor %edi,%edi
29bc(5): mov $0x5,%edx
29c1(5): call 0xffffeb6f(%rip)
29c6(7): mov 0x20573b(%rip),%rdi
29cd(3): mov %rax,%rbp
29d0(3): test %rdi,%rdi
29d3(2): jz 0x2a(%rip)
29d5(5): call 0x1c1b(%rip)
29da(2): mov (%rbx),%esi
29dc(7): lea 0x315d(%rip),%rdx
29e3(3): mov %rax,%rcx
29e6(3): mov %rbp,%r8
29e9(2): xor %edi,%edi
29eb(2): xor %eax,%eax
29ed(5): call 0xffffecf3(%rip)
29f2(6): mov 0x205648(%rip),%edi
29f8(5): call 0xffffeac8(%rip)
29fd(2): mov (%rbx),%esi
29ff(7): lea 0x313e(%rip),%rdx
2a06(3): mov %rax,%rcx
2a09(2): xor %edi,%edi
2a0b(2): xor %eax,%eax
2a0d(5): call 0xffffecd3(%rip)
2a12(2): jmp 0xffffffe0(%rip)

"fadvise" :
2a30(3): test %rdi,%rdi
2a33(2): jz 0x1d(%rip)
2a35(1): push %rbx
2a36(2): mov %esi,%ebx
2a38(5): call 0xffffec08(%rip)
2a3d(2): mov %ebx,%ecx
2a3f(2): xor %edx,%edx
2a41(2): xor %esi,%esi
2a43(1): pop %rbx
2a44(2): mov %eax,%edi
2a46(5): jmp 0xffffeb9a(%rip)
2a4b(5): nop 0x0(%rax,%rax,1)
2a50(2): REP ret near (%rsp)

"full_write" :
2a60(2): push %r13
2a62(2): push %r12
2a64(1): push %rbp
2a65(1): push %rbx
2a66(4): sub $0x8,%rsp
2a6a(3): test %rdx,%rdx
2a6d(2): jz 0x64(%rip)
2a6f(3): mov %edi,%r13d
2a72(3): mov %rsi,%rbp
2a75(3): mov %rdx,%rbx
2a78(3): xor %r12d,%r12d
2a7b(2): jmp 0x15(%rip)
2a7d(3): nop (%rax)
2a80(3): test %rax,%rax
2a83(2): jz 0x35(%rip)
2a85(3): add %rax,%r12
2a88(3): add %rax,%rbp
2a8b(3): sub %rax,%rbx
2a8e(2): jz 0x16(%rip)
2a90(3): mov %rbx,%rdx
2a93(3): mov %rbp,%rsi
2a96(3): mov %r13d,%edi
2a99(5): call 0x1dd7(%rip)
2a9e(4): cmp $0xffffffff,%rax
2aa2(2): jnz 0xffffffde(%rip)
2aa4(4): add $0x8,%rsp
2aa8(3): mov %r12,%rax
2aab(1): pop %rbx
2aac(1): pop %rbp
2aad(2): pop %r12
2aaf(2): pop %r13
2ab1(1): ret near (%rsp)
2ab2(6): nop 0x0(%rax,%rax,1)
2ab8(5): call 0xffffe9e8(%rip)
2abd(6): mov $0x1c,(%rax)
2ac3(4): add $0x8,%rsp
2ac7(3): mov %r12,%rax
2aca(1): pop %rbx
2acb(1): pop %rbp
2acc(2): pop %r12
2ace(2): pop %r13
2ad0(1): ret near (%rsp)
2ad1(3): xor %r12d,%r12d
2ad4(2): jmp 0xffffffd0(%rip)

"set_program_name" :
2ae0(3): test %rdi,%rdi
2ae3(1): push %rbx
2ae4(2): jz 0x79(%rip)
2ae6(5): mov $0x2f,%esi
2aeb(3): mov %rdi,%rbx
2aee(5): call 0xffffeaa2(%rip)
2af3(3): test %rax,%rax
2af6(2): jz 0x57(%rip)
2af8(4): lea 0x1(%rax),%r8
2afc(3): mov %r8,%rdx
2aff(3): sub %rbx,%rdx
2b02(4): cmp $0x6,%rdx
2b06(2): jle 0x47(%rip)
2b08(4): lea 0xfffffffa(%rax),%rsi
2b0c(7): lea 0x306d(%rip),%rdi
2b13(5): mov $0x7,%ecx
2b18(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2b1a(3): setnbe %dl
2b1d(3): sbb $0x0,%dl
2b20(2): test %dl,%dl
2b22(2): jnz 0x2b(%rip)
2b24(7): lea 0x305d(%rip),%rdi
2b2b(5): mov $0x3,%ecx
2b30(3): mov %r8,%rsi
2b33(3): mov %r8,%rbx
2b36(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2b38(3): setnbe %dl
2b3b(3): sbb $0x0,%dl
2b3e(2): test %dl,%dl
2b40(2): jnz 0xd(%rip)
2b42(4): lea 0x4(%rax),%rbx
2b46(7): mov %rbx,0x205573(%rip)
2b4d(7): mov %rbx,0x2055bc(%rip)
2b54(7): mov %rbx,0x20557d(%rip)
2b5b(1): pop %rbx
2b5c(1): ret near (%rsp)
2b5d(7): mov 0x20557c(%rip),%rcx
2b64(7): lea 0x2fdd(%rip),%rdi
2b6b(5): mov $0x37,%edx
2b70(5): mov $0x1,%esi
2b75(5): call 0xffffebcb(%rip)
2b7a(5): call 0xffffe916(%rip)

"gettext_quote.part.1" :
2b80(1): push %rbp
2b81(1): push %rbx
2b82(3): mov %rdi,%rbp
2b85(2): mov %esi,%ebx
2b87(4): sub $0x8,%rsp
2b8b(5): call 0x2765(%rip)
2b90(3): movzx (%rax),%edx
2b93(3): and $0xdf,%edx
2b96(3): cmp $0x55,%dl
2b99(2): jz 0x77(%rip)
2b9b(3): cmp $0x47,%dl
2b9e(2): jz 0x22(%rip)
2ba0(7): lea 0x2ff4(%rip),%rax
2ba7(7): lea 0x2fef(%rip),%rdx
2bae(3): cmp $0x9,%ebx
2bb1(4): cmovne %rdx,%rax
2bb5(4): add $0x8,%rsp
2bb9(1): pop %rbx
2bba(1): pop %rbp
2bbb(1): ret near (%rsp)
2bbc(4): nop 0x0(%rax)
2bc0(4): movzx 0x1(%rax),%edx
2bc4(3): and $0xdf,%edx
2bc7(3): cmp $0x42,%dl
2bca(2): jnz 0xffffffd6(%rip)
2bcc(4): cmp $0x31,0x2(%rax)
2bd0(2): jnz 0xffffffd0(%rip)
2bd2(4): cmp $0x38,0x3(%rax)
2bd6(2): jnz 0xffffffca(%rip)
2bd8(4): cmp $0x30,0x4(%rax)
2bdc(2): jnz 0xffffffc4(%rip)
2bde(4): cmp $0x33,0x5(%rax)
2be2(2): jnz 0xffffffbe(%rip)
2be4(4): cmp $0x30,0x6(%rax)
2be8(2): jnz 0xffffffb8(%rip)
2bea(4): cmp $0x0,0x7(%rax)
2bee(2): jnz 0xffffffb2(%rip)
2bf0(4): cmp $0x60,0x0(%rbp)
2bf4(7): lea 0x2f99(%rip),%rax
2bfb(7): lea 0x2f96(%rip),%rdx
2c02(4): cmovne %rdx,%rax
2c06(4): add $0x8,%rsp
2c0a(1): pop %rbx
2c0b(1): pop %rbp
2c0c(1): ret near (%rsp)
2c0d(3): nop (%rax)
2c10(4): movzx 0x1(%rax),%edx
2c14(3): and $0xdf,%edx
2c17(3): cmp $0x54,%dl
2c1a(2): jnz 0xffffff86(%rip)
2c1c(4): movzx 0x2(%rax),%edx
2c20(3): and $0xdf,%edx
2c23(3): cmp $0x46,%dl
2c26(6): jnz 0xffffff7a(%rip)
2c2c(4): cmp $0x2d,0x3(%rax)
2c30(6): jnz 0xffffff70(%rip)
2c36(4): cmp $0x38,0x4(%rax)
2c3a(6): jnz 0xffffff66(%rip)
2c40(4): cmp $0x0,0x5(%rax)
2c44(6): jnz 0xffffff5c(%rip)
2c4a(4): cmp $0x60,0x0(%rbp)
2c4e(7): lea 0x2f37(%rip),%rax
2c55(7): lea 0x2f34(%rip),%rdx
2c5c(4): cmovne %rdx,%rax
2c60(4): add $0x8,%rsp
2c64(1): pop %rbx
2c65(1): pop %rbp
2c66(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2c70(2): push %r15
2c72(2): push %r14
2c74(3): mov %r8d,%r15d
2c77(2): push %r13
2c79(2): push %r12
2c7b(3): mov %rdi,%r14
2c7e(1): push %rbp
2c7f(1): push %rbx
2c80(3): mov %r9d,%ebx
2c83(3): mov %rsi,%r13
2c86(3): mov %rcx,%rbp
2c89(3): and $0x2,%ebx
2c8c(7): sub $0xb8,%rsp
2c93(8): mov 0xf0(%rsp),%rax
2c9b(5): mov %rdx,0x10(%rsp)
2ca0(5): mov %r8d,0x8(%rsp)
2ca5(5): mov %r9d,0x78(%rsp)
2caa(5): mov %rax,0x20(%rsp)
2caf(8): mov 0xf8(%rsp),%rax
2cb7(5): mov %rax,0x68(%rsp)
2cbc(8): mov 0x100(%rsp),%rax
2cc4(5): mov %rax,0x60(%rsp)
2cc9(9): mov $0x28,%rax
2cd2(8): mov %rax,0xa8(%rsp)
2cda(2): xor %eax,%eax
2cdc(5): call 0xffffe864(%rip)
2ce1(4): cmp $0xa,%r15d
2ce5(5): mov %rax,0x58(%rsp)
2cea(6): jnbe 0x11b5(%rip)
2cf0(7): lea 0x2f09(%rip),%rcx
2cf7(3): mov %r15d,%edx
2cfa(4): movsxd 0x0(%rcx,%rdx,4),%rax
2cfe(3): add %rcx,%rax
2d01(2): jmp %rax
2d03(5): mov $0x1,0xe(%rsp)
2d08(5): mov $0x0,0x7c(%rsp)
2d0d(3): xor %r12d,%r12d
2d10(9): mov $0x0,0x50(%rsp)
2d19(5): mov $0x1,0xf(%rsp)
2d1e(5): mov $0x0,0xd(%rsp)
2d23(7): lea 0x2e73(%rip),%rax
2d2a(9): mov $0x1,0x18(%rsp)
2d33(3): xor %r15d,%r15d
2d36(8): mov $0x2,0x8(%rsp)
2d3e(5): mov %rax,0x48(%rsp)
2d43(3): xor %r11d,%r11d
2d46(3): mov %rbp,%rax
2d49(3): mov %r12d,%r8d
2d4c(3): mov %r11,%rbp
2d4f(3): mov %rax,%r11
2d52(6): nop 0x0(%rax,%rax,1)
2d58(3): cmp %rbp,%r11
2d5b(4): setnz %r12b
2d5f(4): cmp $0xffffffff,%r11
2d63(2): jnz 0xf(%rip)
2d65(5): mov 0x10(%rsp),%rax
2d6a(4): cmp $0x0,0x0(%rax,%rbp,1)
2d6e(4): setnz %r12b
2d72(3): test %r12b,%r12b
2d75(6): jz 0x65b(%rip)
2d7b(5): cmp $0x2,0x8(%rsp)
2d80(5): mov 0x10(%rsp),%rdi
2d85(4): lea 0x0(%rdi,%rbp,1),%r9
2d89(3): setnz %al
2d8c(4): and 0xd(%rsp),%al
2d90(3): mov %eax,%r10d
2d93(6): jz 0xad(%rip)
2d99(5): mov 0x18(%rsp),%rax
2d9e(3): test %rax,%rax
2da1(6): jz 0x42f(%rip)
2da7(4): cmp $0xffffffff,%r11
2dab(5): lea 0x0(%rbp,%rax,1),%rbx
2db0(2): jnz 0x30(%rip)
2db2(4): cmp $0x1,%rax
2db6(2): jbe 0x2a(%rip)
2db8(5): mov %r8b,0x38(%rsp)
2dbd(5): mov %r10b,0x30(%rsp)
2dc2(5): mov %r9,0x28(%rsp)
2dc7(5): call 0xffffe789(%rip)
2dcc(6): movzx 0x38(%rsp),%r8d
2dd2(6): movzx 0x30(%rsp),%r10d
2dd8(3): mov %rax,%r11
2ddb(5): mov 0x28(%rsp),%r9
2de0(3): cmp %r11,%rbx
2de3(5): mov %r10b,0x28(%rsp)
2de8(6): jnbe 0x5b8(%rip)
2dee(5): mov 0x18(%rsp),%rdx
2df3(5): mov 0x48(%rsp),%rsi
2df8(3): mov %r9,%rdi
2dfb(5): mov %r11,0x40(%rsp)
2e00(5): mov %r8b,0x38(%rsp)
2e05(5): mov %r9,0x30(%rsp)
2e0a(5): call 0xffffe7f6(%rip)
2e0f(2): test %eax,%eax
2e11(5): mov 0x30(%rsp),%r9
2e16(6): movzx 0x38(%rsp),%r8d
2e1c(5): mov 0x40(%rsp),%r11
2e21(6): jnz 0x57f(%rip)
2e27(5): cmp $0x0,0xf(%rsp)
2e2c(6): movzx 0x28(%rsp),%r10d
2e32(6): jnz 0xf83(%rip)
2e38(8): nop 0x0(%rax,%rax,1)
2e40(4): movzx (%r9),%ebx
2e44(3): cmp $0x7e,%bl
2e47(6): jnbe 0x321(%rip)
2e4d(7): lea 0x2dd8(%rip),%rcx
2e54(3): movzx %bl,%edx
2e57(4): movsxd 0x0(%rcx,%rdx,4),%rax
2e5b(3): add %rcx,%rax
2e5e(2): jmp %rax
2e60(3): xor %r10d,%r10d
2e63(4): cmp $0x1,%r11
2e67(3): setnz %al
2e6a(4): cmp $0xffffffff,%r11
2e6e(2): jnz 0xe(%rip)
2e70(5): mov 0x10(%rsp),%rax
2e75(4): cmp $0x0,0x1(%rax)
2e79(3): setnz %al
2e7c(5): cmp $0x2,0x8(%rsp)
2e81(3): setz %dl
2e84(2): test %al,%al
2e86(6): jz 0x252(%rip)
2e8c(3): xor %r12d,%r12d
2e8f(2): xor %eax,%eax
2e91(7): nop 0x0(%rax)
2e98(5): cmp $0x1,0xd(%rsp)
2e9d(6): jnz 0x115(%rip)
2ea3(2): test %dl,%dl
2ea5(6): jnz 0x10d(%rip)
2eab(5): mov 0x20(%rsp),%rsi
2eb0(3): test %rsi,%rsi
2eb3(2): jz 0x16(%rip)
2eb5(2): mov %ebx,%edx
2eb7(3): shr $0x5,%dl
2eba(3): movzx %dl,%edx
2ebd(3): mov 0x0(%rsi,%rdx,4),%edx
2ec0(3): bt %ebx,%edx
2ec3(6): jb 0x150(%rip)
2ec9(3): test %r10b,%r10b
2ecc(6): jnz 0x147(%rip)
2ed2(3): xor $0x1,%eax
2ed5(4): add $0x1,%rbp
2ed9(3): and %r8d,%eax
2edc(2): test %al,%al
2ede(2): jz 0x22(%rip)
2ee0(3): cmp %r15,%r13
2ee3(2): jbe 0x7(%rip)
2ee5(5): mov $0x27,0x0(%r14,%r15,1)
2eea(4): lea 0x1(%r15),%rax
2eee(3): cmp %rax,%r13
2ef1(2): jbe 0x8(%rip)
2ef3(6): mov $0x27,0x1(%r14,%r15,1)
2ef9(4): add $0x2,%r15
2efd(3): xor %r8d,%r8d
2f00(3): cmp %r13,%r15
2f03(2): jnb 0x6(%rip)
2f05(4): mov %bl,0x0(%r14,%r15,1)
2f09(5): movzx 0xe(%rsp),%edi
2f0e(4): add $0x1,%r15
2f12(5): mov $0x0,%eax
2f17(3): test %r12b,%r12b
2f1a(3): cmove %eax,%edi
2f1d(5): mov %dil,0xe(%rsp)
2f22(5): jmp 0xfffffe36(%rip)
2f27(9): nop 0x0(%rax,%rax,1)
2f30(3): xor %r10d,%r10d
2f33(4): mov 0x8(%rsp),%eax
2f37(3): cmp $0x2,%eax
2f3a(6): jz 0x5be(%rip)
2f40(3): cmp $0x5,%eax
2f43(6): jz 0x575(%rip)
2f49(3): cmp $0x2,%eax
2f4c(5): mov $0x3f,%ebx
2f51(3): setz %dl
2f54(3): xor %r12d,%r12d
2f57(2): xor %eax,%eax
2f59(5): jmp 0xffffff3f(%rip)
2f5e(2): nop 
2f60(3): xor %r10d,%r10d
2f63(5): cmp $0x2,0x8(%rsp)
2f68(6): jz 0x508(%rip)
2f6e(5): mov %r12b,0x7c(%rsp)
2f73(2): xor %edx,%edx
2f75(2): xor %eax,%eax
2f77(5): mov $0x27,%ebx
2f7c(5): jmp 0xffffff1c(%rip)
2f81(7): nop 0x0(%rax)
2f88(5): mov $0x9,%edx
2f8d(5): mov $0x74,%ebx
2f92(5): cmp $0x2,0x8(%rsp)
2f97(3): setz %al
2f9a(4): and 0xf(%rsp),%al
2f9e(6): jnz 0x150(%rip)
2fa4(5): cmp $0x0,0xd(%rsp)
2fa9(2): jnz 0x67(%rip)
2fab(2): mov %edx,%ebx
2fad(3): xor %r12d,%r12d
2fb0(2): xor %eax,%eax
2fb2(5): cmp $0x0,0xf(%rsp)
2fb7(6): jnz 0xfffffef4(%rip)
2fbd(5): jmp 0xffffff0c(%rip)
2fc2(6): nop 0x0(%rax,%rax,1)
2fc8(5): mov $0x8,%edx
2fcd(5): mov $0x62,%ebx
2fd2(2): jmp 0xffffffd2(%rip)
2fd4(4): nop 0x0(%rax)
2fd8(5): cmp $0x2,0x8(%rsp)
2fdd(6): jz 0x3d3(%rip)
2fe3(5): cmp $0x0,0xd(%rsp)
2fe8(6): jz 0x218(%rip)
2fee(5): cmp $0x0,0xf(%rsp)
2ff3(6): jz 0x20d(%rip)
2ff9(6): cmp $0x0,0x18(%rsp)
2fff(6): jnz 0x3bc(%rip)
3005(5): mov $0x5c,%ebx
300a(6): nop 0x0(%rax,%rax,1)
3010(3): xor %r12d,%r12d
3013(5): cmp $0x2,0x8(%rsp)
3018(3): setz %dl
301b(5): cmp $0x0,0xf(%rsp)
3020(2): mov %edx,%eax
3022(6): jnz 0x856(%rip)
3028(3): mov %r8d,%eax
302b(3): xor $0x1,%eax
302e(2): and %dl,%al
3030(2): jz 0x31(%rip)
3032(3): cmp %r15,%r13
3035(2): jbe 0x7(%rip)
3037(5): mov $0x27,0x0(%r14,%r15,1)
303c(4): lea 0x1(%r15),%rdx
3040(3): cmp %rdx,%r13
3043(2): jbe 0x8(%rip)
3045(6): mov $0x24,0x1(%r14,%r15,1)
304b(4): lea 0x2(%r15),%rdx
304f(3): cmp %rdx,%r13
3052(2): jbe 0x8(%rip)
3054(6): mov $0x27,0x2(%r14,%r15,1)
305a(4): add $0x3,%r15
305e(3): mov %eax,%r8d
3061(3): cmp %r15,%r13
3064(2): jbe 0x7(%rip)
3066(5): mov $0x5c,0x0(%r14,%r15,1)
306b(4): add $0x1,%r15
306f(4): add $0x1,%rbp
3073(5): jmp 0xfffffe8d(%rip)
3078(8): nop 0x0(%rax,%rax,1)
3080(5): cmp $0x0,0xd(%rsp)
3085(6): jnz 0x1ce(%rip)
308b(2): xor %edx,%edx
308d(5): test $0x1,0x78(%rsp)
3092(6): jz 0xffffff19(%rip)
3098(4): add $0x1,%rbp
309c(5): jmp 0xfffffcbc(%rip)
30a1(7): nop 0x0(%rax)
30a8(5): cmp $0x2,0x8(%rsp)
30ad(3): setz %dl
30b0(2): xor %eax,%eax
30b2(5): jmp 0xfffffde6(%rip)
30b7(9): nop 0x0(%rax,%rax,1)
30c0(5): mov $0x7,%edx
30c5(5): mov $0x61,%ebx
30ca(5): jmp 0xfffffeda(%rip)
30cf(1): nop 
30d0(5): cmp $0x2,0x8(%rsp)
30d5(3): setz %dl
30d8(3): test %rbp,%rbp
30db(6): jnz 0xfffffdb1(%rip)
30e1(5): movzx 0xf(%rsp),%eax
30e6(2): and %dl,%al
30e8(6): jz 0xfffffdb0(%rip)
30ee(3): mov %r11,%rbp
30f1(8): mov $0x2,0x8(%rsp)
30f9(5): jmp 0x700(%rip)
30fe(2): nop 
3100(5): cmp $0x2,0x8(%rsp)
3105(3): setz %dl
3108(3): xor %r12d,%r12d
310b(2): jmp 0xffffffd6(%rip)
310d(3): nop (%rax)
3110(5): cmp $0x2,0x8(%rsp)
3115(5): mov $0x20,%ebx
311a(3): setz %dl
311d(2): jmp 0xffffffc4(%rip)
311f(1): nop 
3120(5): mov $0xd,%edx
3125(5): mov $0x72,%ebx
312a(5): jmp 0xfffffe68(%rip)
312f(1): nop 
3130(5): mov $0xc,%edx
3135(5): mov $0x66,%ebx
313a(5): jmp 0xfffffe6a(%rip)
313f(1): nop 
3140(5): mov $0xb,%edx
3145(5): mov $0x76,%ebx
314a(5): jmp 0xfffffe5a(%rip)
314f(1): nop 
3150(5): mov $0xa,%edx
3155(5): mov $0x6e,%ebx
315a(5): jmp 0xfffffe38(%rip)
315f(1): nop 
3160(3): xor %r10d,%r10d
3163(5): nop 0x0(%rax,%rax,1)
3168(6): cmp $0x1,0x58(%rsp)
316e(6): jnz 0x3aa(%rip)
3174(5): mov %r11,0x38(%rsp)
3179(5): mov %r8b,0x30(%rsp)
317e(5): mov %r10b,0x28(%rsp)
3183(5): call 0xffffe5fd(%rip)
3188(3): mov (%rax),%rcx
318b(3): movzx %bl,%edx
318e(6): movzx 0x28(%rsp),%r10d
3194(6): movzx 0x30(%rsp),%r8d
319a(5): mov 0x38(%rsp),%r11
319f(5): mov $0x1,%edi
31a4(4): movzx 0x0(%rcx,%rdx,2),%eax
31a8(4): and $0x4000,%ax
31ac(4): setnz %r12b
31b0(3): setz %al
31b3(4): and 0xd(%rsp),%al
31b7(2): test %al,%al
31b9(6): jnz 0x998(%rip)
31bf(5): cmp $0x2,0x8(%rsp)
31c4(3): setz %dl
31c7(5): jmp 0xfffffcd1(%rip)
31cc(4): nop 0x0(%rax)
31d0(4): movzx (%r9),%ebx
31d4(3): cmp $0x7e,%bl
31d7(2): jnbe 0xffffff89(%rip)
31d9(7): lea 0x2c48(%rip),%rcx
31e0(3): movzx %bl,%edx
31e3(4): movsxd 0x0(%rcx,%rdx,4),%rax
31e7(3): add %rcx,%rax
31ea(2): jmp %rax
31ec(4): nop 0x0(%rax)
31f0(3): xor %r10d,%r10d
31f3(5): cmp $0x0,0xd(%rsp)
31f8(6): jnz 0xfffffdf6(%rip)
31fe(2): nop 
3200(5): mov $0x5c,%edx
3205(5): mov $0x5c,%ebx
320a(5): jmp 0xfffffd9a(%rip)
320f(1): nop 
3210(5): mov $0xc,%edx
3215(3): xor %r10d,%r10d
3218(5): mov $0x66,%ebx
321d(5): jmp 0xfffffd87(%rip)
3222(6): nop 0x0(%rax,%rax,1)
3228(5): mov $0xa,%edx
322d(3): xor %r10d,%r10d
3230(5): mov $0x6e,%ebx
3235(5): jmp 0xfffffd5d(%rip)
323a(6): nop 0x0(%rax,%rax,1)
3240(5): mov $0x61,%ebx
3245(5): jmp 0xfffffdcb(%rip)
324a(6): nop 0x0(%rax,%rax,1)
3250(3): xor %r10d,%r10d
3253(5): cmp $0x2,0x8(%rsp)
3258(3): setz %dl
325b(5): cmp $0x0,0xf(%rsp)
3260(6): jnz 0xb9a(%rip)
3266(3): mov %r8d,%eax
3269(3): mov %r15,%rcx
326c(3): xor $0x1,%eax
326f(2): and %dl,%al
3271(2): jz 0x2f(%rip)
3273(3): cmp %r15,%r13
3276(2): jbe 0x7(%rip)
3278(5): mov $0x27,0x0(%r14,%r15,1)
327d(4): lea 0x1(%r15),%rcx
3281(3): cmp %rcx,%r13
3284(2): jbe 0x8(%rip)
3286(6): mov $0x24,0x1(%r14,%r15,1)
328c(4): lea 0x2(%r15),%rcx
3290(3): cmp %rcx,%r13
3293(6): jnbe 0x636(%rip)
3299(4): lea 0x3(%r15),%rcx
329d(3): mov %eax,%r8d
32a0(3): cmp %rcx,%r13
32a3(2): jbe 0x7(%rip)
32a5(5): mov $0x5c,0x0(%r14,%rcx,1)
32aa(5): cmp $0x2,0x8(%rsp)
32af(4): lea 0x1(%rcx),%r15
32b3(6): jz 0x606(%rip)
32b9(4): lea 0x1(%rbp),%rax
32bd(3): cmp %r11,%rax
32c0(2): jnb 0x1b(%rip)
32c2(5): mov 0x10(%rsp),%rax
32c7(5): movzx 0x1(%rax,%rbp,1),%eax
32cc(4): mov %al,0x28(%rsp)
32d0(3): sub $0x30,%eax
32d3(2): cmp $0x9,%al
32d5(6): jbe 0x834(%rip)
32db(3): mov %r12d,%eax
32de(5): mov $0x30,%ebx
32e3(3): xor %r12d,%r12d
32e6(5): jmp 0xfffffbb2(%rip)
32eb(5): nop 0x0(%rax,%rax,1)
32f0(5): cmp $0x2,0x8(%rsp)
32f5(3): mov %r10d,%r12d
32f8(3): setz %dl
32fb(3): xor %r10d,%r10d
32fe(2): xor %eax,%eax
3300(5): jmp 0xfffffb98(%rip)
3305(3): nop (%rax)
3308(5): cmp $0x2,0x8(%rsp)
330d(3): setz %dl
3310(3): xor %r10d,%r10d
3313(5): jmp 0xfffffdc5(%rip)
3318(8): nop 0x0(%rax,%rax,1)
3320(5): cmp $0x2,0x8(%rsp)
3325(3): setz %dl
3328(3): xor %r10d,%r10d
332b(3): xor %r12d,%r12d
332e(5): jmp 0xfffffdb3(%rip)
3333(5): nop 0x0(%rax,%rax,1)
3338(5): cmp $0x2,0x8(%rsp)
333d(3): mov %r10d,%r12d
3340(5): mov $0x20,%ebx
3345(3): setz %dl
3348(3): xor %r10d,%r10d
334b(5): jmp 0xfffffd96(%rip)
3350(5): mov $0xd,%edx
3355(3): xor %r10d,%r10d
3358(5): mov $0x72,%ebx
335d(5): jmp 0xfffffc35(%rip)
3362(6): nop 0x0(%rax,%rax,1)
3368(5): mov $0x76,%ebx
336d(5): jmp 0xfffffca3(%rip)
3372(6): nop 0x0(%rax,%rax,1)
3378(5): mov $0x9,%edx
337d(3): xor %r10d,%r10d
3380(5): mov $0x74,%ebx
3385(5): jmp 0xfffffc0d(%rip)
338a(6): nop 0x0(%rax,%rax,1)
3390(5): mov $0x62,%ebx
3395(5): jmp 0xfffffc7b(%rip)
339a(6): nop 0x0(%rax,%rax,1)
33a0(3): xor %r10d,%r10d
33a3(5): jmp 0xfffffa9d(%rip)
33a8(8): nop 0x0(%rax,%rax,1)
33b0(5): cmp $0x0,0xf(%rsp)
33b5(6): jnz 0x96b(%rip)
33bb(4): add $0x1,%rbp
33bf(3): mov %r8d,%eax
33c2(3): xor %r12d,%r12d
33c5(5): mov $0x5c,%ebx
33ca(5): jmp 0xfffffb12(%rip)
33cf(1): nop 
33d0(5): cmp $0x2,0x8(%rsp)
33d5(5): movzx 0xf(%rsp),%ebx
33da(3): mov %r8d,%r12d
33dd(3): mov %r11,%rbp
33e0(3): setz %dl
33e3(2): mov %ebx,%eax
33e5(3): test %r15,%r15
33e8(3): setz %cl
33eb(2): and %edx,%eax
33ed(2): and %cl,%al
33ef(6): jnz 0xa67(%rip)
33f5(2): mov %ebx,%eax
33f7(3): xor $0x1,%eax
33fa(2): and %al,%dl
33fc(6): jz 0x970(%rip)
3402(5): cmp $0x0,0x7c(%rsp)
3407(6): jz 0x963(%rip)
340d(5): cmp $0x0,0xe(%rsp)
3412(6): jnz 0x9fb(%rip)
3418(3): test %r13,%r13
341b(3): setz %al
341e(6): cmp $0x0,0x50(%rsp)
3424(3): setnz %dl
3427(2): and %dl,%al
3429(6): jz 0xa23(%rip)
342f(5): mov 0x50(%rsp),%r13
3434(7): lea 0x2762(%rip),%rbx
343b(4): mov $0x27,(%r14)
343f(8): mov $0x2,0x8(%rsp)
3447(6): mov $0x1,%r15d
344d(9): mov $0x1,0x18(%rsp)
3456(5): mov $0x0,0xf(%rsp)
345b(5): mov %rbx,0x48(%rsp)
3460(4): mov %al,0x7c(%rsp)
3464(5): jmp 0xfffff8df(%rip)
3469(7): nop 0x0(%rax)
3470(5): cmp $0x0,0xf(%rsp)
3475(6): jnz 0x8ab(%rip)
347b(3): test %r13,%r13
347e(6): jz 0x402(%rip)
3484(2): xor %edx,%edx
3486(6): cmp $0x0,0x50(%rsp)
348c(6): jnz 0x3f4(%rip)
3492(5): mov %r13,0x50(%rsp)
3497(4): add $0x3,%r15
349b(2): xor %eax,%eax
349d(5): mov %r12b,0x7c(%rsp)
34a2(3): xor %r8d,%r8d
34a5(3): mov %rdx,%r13
34a8(5): mov $0x27,%ebx
34ad(5): jmp 0xfffffa1c(%rip)
34b2(6): nop 0x0(%rax,%rax,1)
34b8(5): test $0x4,0x78(%rsp)
34bd(2): jz 0x23(%rip)
34bf(4): lea 0x2(%rbp),%rcx
34c3(3): cmp %r11,%rcx
34c6(2): jnb 0x1a(%rip)
34c8(5): mov 0x10(%rsp),%rax
34cd(5): cmp $0x3f,0x1(%rax,%rbp,1)
34d2(6): jz 0x790(%rip)
34d8(8): nop 0x0(%rax,%rax,1)
34e0(2): xor %edx,%edx
34e2(3): xor %r12d,%r12d
34e5(2): xor %eax,%eax
34e7(5): mov $0x3f,%ebx
34ec(5): jmp 0xfffff9ac(%rip)
34f1(7): nop 0x0(%rax)
34f8(5): cmp $0x0,0xf(%rsp)
34fd(6): jnz 0x823(%rip)
3503(3): xor %r12d,%r12d
3506(2): xor %eax,%eax
3508(5): mov $0x3f,%ebx
350d(5): jmp 0xfffff9bc(%rip)
3512(6): nop 0x0(%rax,%rax,1)
3518(8): lea 0xa0(%rsp),%rax
3520(4): cmp $0xffffffff,%r11
3524(c): mov $0x0,0xa0(%rsp)
3530(5): mov %rax,0x28(%rsp)
3535(2): jnz 0x2f(%rip)
3537(5): mov 0x10(%rsp),%rdi
353c(5): mov %r8b,0x40(%rsp)
3541(5): mov %r10b,0x38(%rsp)
3546(5): mov %r9,0x30(%rsp)
354b(5): call 0xffffe005(%rip)
3550(6): movzx 0x40(%rsp),%r8d
3556(6): movzx 0x38(%rsp),%r10d
355c(3): mov %rax,%r11
355f(5): mov 0x30(%rsp),%r9
3564(8): lea 0x9c(%rsp),%rax
356c(2): xor %ecx,%ecx
356e(4): mov %bl,0x7e(%rsp)
3572(5): mov %r8b,0x7d(%rsp)
3577(3): mov %rcx,%rbx
357a(8): mov %r9,0x88(%rsp)
3582(5): mov %rax,0x38(%rsp)
3587(5): mov %r10b,0x7f(%rsp)
358c(8): mov %r15,0x80(%rsp)
3594(5): mov %r14,0x40(%rsp)
3599(5): mov %r13,0x70(%rsp)
359e(5): mov %r11,0x30(%rsp)
35a3(5): mov 0x10(%rsp),%rax
35a8(5): lea 0x0(%rbp,%rbx,1),%r14
35ad(5): mov 0x30(%rsp),%rdx
35b2(5): mov 0x28(%rsp),%rcx
35b7(5): mov 0x38(%rsp),%rdi
35bc(4): lea 0x0(%rax,%r14,1),%r13
35c0(3): sub %r14,%rdx
35c3(3): mov %r13,%rsi
35c6(5): call 0x1bba(%rip)
35cb(3): test %rax,%rax
35ce(3): mov %rax,%r15
35d1(2): jz 0x50(%rip)
35d3(4): cmp $0xffffffff,%rax
35d7(6): jz 0x61e(%rip)
35dd(4): cmp $0xfffffffe,%rax
35e1(6): jz 0x5a0(%rip)
35e7(5): cmp $0x2,0x8(%rsp)
35ec(3): setz %al
35ef(4): and 0xf(%rsp),%al
35f3(6): jnz 0x19d(%rip)
35f9(7): mov 0x9c(%rsp),%edi
3600(5): call 0xffffe170(%rip)
3605(5): mov 0x28(%rsp),%rdi
360a(2): test %eax,%eax
360c(5): mov $0x0,%eax
3611(4): cmove %eax,%r12d
3615(3): add %r15,%rbx
3618(5): call 0xffffe148(%rip)
361d(2): test %eax,%eax
361f(2): jz 0xffffff84(%rip)
3621(3): mov %r12d,%edx
3624(3): mov %rbx,%rdi
3627(6): movzx 0x7d(%rsp),%r8d
362d(3): xor $0x1,%edx
3630(5): movzx 0x7e(%rsp),%ebx
3635(6): movzx 0x7f(%rsp),%r10d
363b(4): and 0xd(%rsp),%dl
363f(8): mov 0x80(%rsp),%r15
3647(5): mov 0x40(%rsp),%r14
364c(5): mov 0x70(%rsp),%r13
3651(5): mov 0x30(%rsp),%r11
3656(4): cmp $0x1,%rdi
365a(6): jbe 0x601(%rip)
3660(3): mov %rdi,%rcx
3663(2): xor %esi,%esi
3665(6): movzx 0xf(%rsp),%r9d
366b(3): add %rbp,%rcx
366e(5): mov 0x10(%rsp),%rdi
3673(5): jmp 0xbb(%rip)
3678(8): nop 0x0(%rax,%rax,1)
3680(5): cmp $0x2,0x8(%rsp)
3685(3): setz %al
3688(3): test %r9b,%r9b
368b(6): jnz 0x4b5(%rip)
3691(3): mov %r8d,%esi
3694(3): xor $0x1,%esi
3697(3): and %sil,%al
369a(2): jz 0x31(%rip)
369c(3): cmp %r15,%r13
369f(2): jbe 0x7(%rip)
36a1(5): mov $0x27,0x0(%r14,%r15,1)
36a6(4): lea 0x1(%r15),%rsi
36aa(3): cmp %rsi,%r13
36ad(2): jbe 0x8(%rip)
36af(6): mov $0x24,0x1(%r14,%r15,1)
36b5(4): lea 0x2(%r15),%rsi
36b9(3): cmp %rsi,%r13
36bc(2): jbe 0x8(%rip)
36be(6): mov $0x27,0x2(%r14,%r15,1)
36c4(4): add $0x3,%r15
36c8(3): mov %eax,%r8d
36cb(3): cmp %r15,%r13
36ce(2): jbe 0x7(%rip)
36d0(5): mov $0x5c,0x0(%r14,%r15,1)
36d5(4): lea 0x1(%r15),%rax
36d9(3): cmp %rax,%r13
36dc(2): jbe 0xf(%rip)
36de(2): mov %ebx,%eax
36e0(3): shr $0x6,%al
36e3(3): add $0x30,%eax
36e6(5): mov %al,0x1(%r14,%r15,1)
36eb(4): lea 0x2(%r15),%rax
36ef(3): cmp %rax,%r13
36f2(2): jbe 0x12(%rip)
36f4(2): mov %ebx,%eax
36f6(3): shr $0x3,%al
36f9(3): and $0x7,%eax
36fc(3): add $0x30,%eax
36ff(5): mov %al,0x2(%r14,%r15,1)
3704(3): and $0x7,%ebx
3707(4): add $0x1,%rbp
370b(4): add $0x3,%r15
370f(3): add $0x30,%ebx
3712(3): cmp %rcx,%rbp
3715(6): jnb 0xfffff7eb(%rip)
371b(2): mov %edx,%esi
371d(3): cmp %r15,%r13
3720(2): jbe 0x6(%rip)
3722(4): mov %bl,0x0(%r14,%r15,1)
3726(4): movzx 0x0(%rdi,%rbp,1),%ebx
372a(4): add $0x1,%r15
372e(2): test %dl,%dl
3730(6): jnz 0xffffff50(%rip)
3736(2): mov %esi,%eax
3738(3): xor $0x1,%eax
373b(3): and %r8d,%eax
373e(3): test %r10b,%r10b
3741(2): jz 0x10(%rip)
3743(3): cmp %r15,%r13
3746(2): jbe 0x7(%rip)
3748(5): mov $0x5c,0x0(%r14,%r15,1)
374d(4): add $0x1,%r15
3751(4): add $0x1,%rbp
3755(3): cmp %rcx,%rbp
3758(6): jnb 0xfffff784(%rip)
375e(2): test %al,%al
3760(6): jz 0x3fe(%rip)
3766(3): cmp %r15,%r13
3769(2): jbe 0x7(%rip)
376b(5): mov $0x27,0x0(%r14,%r15,1)
3770(4): lea 0x1(%r15),%rax
3774(3): cmp %rax,%r13
3777(2): jbe 0x8(%rip)
3779(6): mov $0x27,0x1(%r14,%r15,1)
377f(4): add $0x2,%r15
3783(3): xor %r10d,%r10d
3786(3): xor %r8d,%r8d
3789(2): jmp 0xffffff94(%rip)
378b(5): nop 0x0(%rax,%rax,1)
3790(4): cmp $0x1,%r15
3794(6): jz 0xfffffe65(%rip)
379a(5): mov 0x10(%rsp),%rdi
379f(4): lea 0x0(%rdi,%r15,1),%rcx
37a3(5): lea 0x1(%rdi,%r14,1),%rdx
37a8(4): lea 0x0(%rcx,%r14,1),%r8
37ac(2): jmp 0x11(%rip)
37ae(2): nop 
37b0(4): add $0x1,%rdx
37b4(3): cmp %rdx,%r8
37b7(6): jz 0xfffffe42(%rip)
37bd(3): movzx (%rdx),%ecx
37c0(3): sub $0x5b,%ecx
37c3(3): cmp $0x21,%cl
37c6(2): jnbe 0xffffffea(%rip)
37c8(5): mov $0x1,%esi
37cd(3): shl/sal %cl,%rsi
37d0(3): mov %rsi,%rcx
37d3(a): mov $0x8589934635,%rsi
37dd(3): test %rsi,%rcx
37e0(2): jz 0xffffffd0(%rip)
37e2(5): mov 0x40(%rsp),%r14
37e7(5): mov 0x70(%rsp),%r13
37ec(5): mov 0x30(%rsp),%rbp
37f1(8): mov $0x2,0x8(%rsp)
37f9(5): cmp $0x0,0xd(%rsp)
37fe(2): jz 0x12(%rip)
3800(2): test %al,%al
3802(5): mov $0x4,%eax
3807(5): cmove 0x8(%rsp),%eax
380c(4): mov %eax,0x8(%rsp)
3810(4): sub $0x8,%rsp
3814(3): mov %rbp,%rcx
3817(3): mov %r13,%rsi
381a(4): push 0x68(%rsp)
381e(4): push 0x78(%rsp)
3822(3): mov %r14,%rdi
3825(2): push $0x0
3827(8): mov 0x98(%rsp),%r9d
382f(5): mov 0x28(%rsp),%r8d
3834(5): mov 0x30(%rsp),%rdx
3839(4): and $0xfd,%r9d
383d(5): call 0xfffff433(%rip)
3842(4): add $0x20,%rsp
3846(3): mov %rax,%r15
3849(8): mov 0xa8(%rsp),%rbx
3851(9): xor $0x28,%rbx
385a(3): mov %r15,%rax
385d(6): jnz 0x606(%rip)
3863(7): add $0xb8,%rsp
386a(1): pop %rbx
386b(1): pop %rbp
386c(2): pop %r12
386e(2): pop %r13
3870(2): pop %r14
3872(2): pop %r15
3874(1): ret near (%rsp)
3875(3): nop (%rax)
3878(3): mov %r11,%rbp
387b(5): jmp 0xffffff7e(%rip)
3880(3): cmp %r15,%r13
3883(2): jbe 0x7(%rip)
3885(5): mov $0x27,0x0(%r14,%r15,1)
388a(4): lea 0x1(%r15),%rax
388e(3): cmp %rax,%r13
3891(2): jbe 0x8(%rip)
3893(6): mov $0x5c,0x1(%r14,%r15,1)
3899(4): lea 0x2(%r15),%rax
389d(3): cmp %rax,%r13
38a0(6): jbe 0x5f2(%rip)
38a6(3): mov %r13,%rdx
38a9(6): mov $0x27,0x2(%r14,%r15,1)
38af(5): mov 0x50(%rsp),%r13
38b4(5): jmp 0xfffffbde(%rip)
38b9(3): mov %r12d,%eax
38bc(5): mov $0x30,%ebx
38c1(3): xor %r12d,%r12d
38c4(5): jmp 0xfffff605(%rip)
38c9(6): mov $0x27,0x2(%r14,%r15,1)
38cf(5): jmp 0xfffff9ca(%rip)
38d4(2): test %ebx,%ebx
38d6(6): jnz 0xfffff42d(%rip)
38dc(5): mov $0x1,0xd(%rsp)
38e1(3): test %r13,%r13
38e4(6): jnz 0x596(%rip)
38ea(7): lea 0x22ac(%rip),%rax
38f1(9): mov $0x0,0x50(%rsp)
38fa(5): mov $0x1,0xe(%rsp)
38ff(5): mov $0x0,0x7c(%rsp)
3904(3): xor %r12d,%r12d
3907(5): mov $0x0,0xf(%rsp)
390c(9): mov $0x1,0x18(%rsp)
3915(5): mov %rax,0x48(%rsp)
391a(6): mov $0x1,%r15d
3920(8): mov $0x2,0x8(%rsp)
3928(5): jmp 0xfffff41b(%rip)
392d(3): nop (%rax)
3930(2): test %ebx,%ebx
3932(6): jnz 0x3fb(%rip)
3938(3): test %r13,%r13
393b(6): jz 0x22b(%rip)
3941(4): mov $0x22,(%r14)
3945(5): mov $0x1,0xe(%rsp)
394a(3): xor %r12d,%r12d
394d(5): mov $0x0,0x7c(%rsp)
3952(9): mov $0x0,0x50(%rsp)
395b(7): lea 0x2239(%rip),%rax
3962(5): mov $0x0,0xf(%rsp)
3967(5): mov $0x1,0xd(%rsp)
396c(9): mov $0x1,0x18(%rsp)
3975(6): mov $0x1,%r15d
397b(5): mov %rax,0x48(%rsp)
3980(5): jmp 0xfffff3c3(%rip)
3985(7): lea 0x220f(%rip),%rax
398c(5): mov $0x1,0xe(%rsp)
3991(5): mov $0x0,0x7c(%rsp)
3996(3): xor %r12d,%r12d
3999(9): mov $0x0,0x50(%rsp)
39a2(5): mov $0x1,0xf(%rsp)
39a7(5): mov $0x1,0xd(%rsp)
39ac(9): mov $0x1,0x18(%rsp)
39b5(3): xor %r15d,%r15d
39b8(5): mov %rax,0x48(%rsp)
39bd(8): mov $0x5,0x8(%rsp)
39c5(5): jmp 0xfffff37e(%rip)
39ca(5): mov $0x1,0xe(%rsp)
39cf(5): mov $0x0,0x7c(%rsp)
39d4(3): xor %r12d,%r12d
39d7(9): mov $0x0,0x50(%rsp)
39e0(5): mov $0x0,0xf(%rsp)
39e5(3): xor %r15d,%r15d
39e8(5): mov $0x1,0xd(%rsp)
39ed(9): mov $0x0,0x18(%rsp)
39f6(9): mov $0x0,0x48(%rsp)
39ff(5): jmp 0xfffff344(%rip)
3a04(5): cmp $0xa,0x8(%rsp)
3a09(2): jz 0x58(%rip)
3a0b(7): lea 0x218d(%rip),%rsi
3a12(2): xor %edi,%edi
3a14(5): mov $0x5,%edx
3a19(5): call 0xffffdb17(%rip)
3a1e(3): mov %rax,%rcx
3a21(5): mov %rax,0x68(%rsp)
3a26(7): lea 0x2172(%rip),%rax
3a2d(3): cmp %rax,%rcx
3a30(6): jz 0x39e(%rip)
3a36(7): lea 0x2160(%rip),%rsi
3a3d(2): xor %edi,%edi
3a3f(5): mov $0x5,%edx
3a44(5): call 0xffffdaec(%rip)
3a49(3): mov %rax,%rcx
3a4c(5): mov %rax,0x60(%rsp)
3a51(7): lea 0x2145(%rip),%rax
3a58(3): cmp %rax,%rcx
3a5b(6): jz 0x389(%rip)
3a61(3): xor %r15d,%r15d
3a64(2): test %ebx,%ebx
3a66(6): jz 0x1c7(%rip)
3a6c(2): test %ebx,%ebx
3a6e(5): mov 0x60(%rsp),%rbx
3a73(5): setnz 0xf(%rsp)
3a78(3): xor %r12d,%r12d
3a7b(3): mov %rbx,%rdi
3a7e(5): call 0xffffdad2(%rip)
3a83(5): mov %rbx,0x48(%rsp)
3a88(5): mov %rax,0x18(%rsp)
3a8d(5): mov $0x1,0xe(%rsp)
3a92(5): mov $0x0,0x7c(%rsp)
3a97(9): mov $0x0,0x50(%rsp)
3aa0(5): mov $0x1,0xd(%rsp)
3aa5(5): jmp 0xfffff29e(%rip)
3aaa(5): mov $0x1,0xe(%rsp)
3aaf(5): mov $0x0,0x7c(%rsp)
3ab4(3): xor %r12d,%r12d
3ab7(9): mov $0x0,0x50(%rsp)
3ac0(5): mov $0x0,0xf(%rsp)
3ac5(3): xor %r15d,%r15d
3ac8(5): mov $0x0,0xd(%rsp)
3acd(9): mov $0x0,0x18(%rsp)
3ad6(9): mov $0x0,0x48(%rsp)
3adf(5): jmp 0xfffff264(%rip)
3ae4(5): mov $0x1,0xe(%rsp)
3ae9(5): mov $0x0,0x7c(%rsp)
3aee(3): xor %r12d,%r12d
3af1(9): mov $0x0,0x50(%rsp)
3afa(5): mov $0x1,0xf(%rsp)
3aff(5): mov $0x1,0xd(%rsp)
3b04(5): jmp 0xfffff21f(%rip)
3b09(3): cmp %r15,%r13
3b0c(2): jbe 0x7(%rip)
3b0e(5): mov $0x30,0x0(%r14,%r15,1)
3b13(4): lea 0x2(%rcx),%rax
3b17(3): cmp %rax,%r13
3b1a(2): jbe 0x8(%rip)
3b1c(6): mov $0x30,0x2(%r14,%rcx,1)
3b22(3): mov %r12d,%eax
3b25(4): lea 0x3(%rcx),%r15
3b29(3): xor %r12d,%r12d
3b2c(5): mov $0x30,%ebx
3b31(5): jmp 0xfffff367(%rip)
3b36(a): nop 0x0(%rax,%rax,1)
3b40(5): movzx 0xf(%rsp),%ebx
3b45(3): mov %r11,%rbp
3b48(4): mov %bl,0xd(%rsp)
3b4c(5): jmp 0xfffffcad(%rip)
3b51(5): movzx 0xd(%rsp),%edx
3b56(3): xor %r12d,%r12d
3b59(5): jmp 0xfffffb07(%rip)
3b5e(3): xor %r10d,%r10d
3b61(5): jmp 0xfffffbbc(%rip)
3b66(9): mov $0x0,0x50(%rsp)
3b6f(5): mov $0x1,0xe(%rsp)
3b74(3): xor %r12d,%r12d
3b77(5): mov $0x0,0x7c(%rsp)
3b7c(5): jmp 0xfffffddf(%rip)
3b81(5): mov 0x30(%rsp),%r11
3b86(3): mov %r14,%rsi
3b89(3): mov %r13,%rcx
3b8c(3): mov %rbx,%rax
3b8f(3): mov %rbx,%rdi
3b92(6): movzx 0x7d(%rsp),%r8d
3b98(5): movzx 0x7e(%rsp),%ebx
3b9d(8): mov 0x88(%rsp),%r9
3ba5(3): cmp %r11,%rsi
3ba8(6): movzx 0x7f(%rsp),%r10d
3bae(8): mov 0x80(%rsp),%r15
3bb6(5): mov 0x40(%rsp),%r14
3bbb(5): mov 0x70(%rsp),%r13
3bc0(2): jnb 0x28(%rip)
3bc2(3): cmp $0x0,(%rcx)
3bc5(2): jnz 0x12(%rip)
3bc7(2): jmp 0x21(%rip)
3bc9(7): nop 0x0(%rax)
3bd0(5): cmp $0x0,0x0(%r9,%rax,1)
3bd5(2): jz 0x10(%rip)
3bd7(4): add $0x1,%rax
3bdb(5): lea 0x0(%rbp,%rax,1),%rdx
3be0(3): cmp %rdx,%r11
3be3(2): jnbe 0xffffffed(%rip)
3be5(3): mov %rax,%rdi
3be8(5): movzx 0xd(%rsp),%edx
3bed(3): xor %r12d,%r12d
3bf0(5): jmp 0xfffffa66(%rip)
3bf5(3): mov %rbx,%rdi
3bf8(6): movzx 0x7d(%rsp),%r8d
3bfe(5): movzx 0x7e(%rsp),%ebx
3c03(6): movzx 0x7f(%rsp),%r10d
3c09(8): mov 0x80(%rsp),%r15
3c11(3): xor %r12d,%r12d
3c14(5): mov 0x40(%rsp),%r14
3c19(5): mov 0x70(%rsp),%r13
3c1e(5): mov 0x30(%rsp),%r11
3c23(5): movzx 0xd(%rsp),%edx
3c28(5): jmp 0xfffffa2e(%rip)
3c2d(5): mov 0x68(%rsp),%rdx
3c32(3): movzx (%rdx),%eax
3c35(2): test %al,%al
3c37(6): jz 0xfffffe35(%rip)
3c3d(3): nop (%rax)
3c40(3): cmp %r15,%r13
3c43(2): jbe 0x6(%rip)
3c45(4): mov %al,0x0(%r14,%r15,1)
3c49(4): add $0x1,%r15
3c4d(5): movzx 0x0(%rdx,%r15,1),%eax
3c52(2): test %al,%al
3c54(2): jnz 0xffffffec(%rip)
3c56(5): jmp 0xfffffe16(%rip)
3c5b(2): mov %edx,%eax
3c5d(5): jmp 0xfffff55a(%rip)
3c62(4): movzx 0x0(%rax,%rcx,1),%ebx
3c66(3): cmp $0x3e,%bl
3c69(6): jnbe 0xfffff877(%rip)
3c6f(a): mov $0x8070630310989004800,%rax
3c79(4): bt %rbx,%rax
3c7d(6): jnb 0xfffff863(%rip)
3c83(5): cmp $0x0,0xf(%rsp)
3c88(6): jnz 0x1ea(%rip)
3c8e(3): cmp %r15,%r13
3c91(2): jbe 0x7(%rip)
3c93(5): mov $0x3f,0x0(%r14,%r15,1)
3c98(4): lea 0x1(%r15),%rax
3c9c(3): cmp %rax,%r13
3c9f(2): jbe 0x8(%rip)
3ca1(6): mov $0x22,0x1(%r14,%r15,1)
3ca7(4): lea 0x2(%r15),%rax
3cab(3): cmp %rax,%r13
3cae(2): jbe 0x8(%rip)
3cb0(6): mov $0x22,0x2(%r14,%r15,1)
3cb6(4): lea 0x3(%r15),%rax
3cba(3): cmp %rax,%r13
3cbd(2): jbe 0x8(%rip)
3cbf(6): mov $0x3f,0x3(%r14,%r15,1)
3cc5(4): add $0x4,%r15
3cc9(2): xor %edx,%edx
3ccb(3): xor %r12d,%r12d
3cce(2): xor %eax,%eax
3cd0(3): mov %rcx,%rbp
3cd3(5): jmp 0xfffff1c5(%rip)
3cd8(2): test %ebx,%ebx
3cda(6): jz 0x18e(%rip)
3ce0(7): lea 0x1eb6(%rip),%rax
3ce7(5): mov $0x1,0xe(%rsp)
3cec(5): mov $0x0,0x7c(%rsp)
3cf1(3): xor %r12d,%r12d
3cf4(9): mov $0x0,0x50(%rsp)
3cfd(5): mov $0x1,0xf(%rsp)
3d02(5): mov $0x0,0xd(%rsp)
3d07(9): mov $0x1,0x18(%rsp)
3d10(3): xor %r15d,%r15d
3d13(5): mov %rax,0x48(%rsp)
3d18(5): jmp 0xfffff02b(%rip)
3d1d(3): nop (%rax)
3d20(3): mov %r11,%rbp
3d23(5): movzx 0xf(%rsp),%eax
3d28(5): jmp 0xfffffad1(%rip)
3d2d(7): lea 0x1e67(%rip),%rax
3d34(5): mov $0x1,0xe(%rsp)
3d39(5): mov $0x0,0x7c(%rsp)
3d3e(3): xor %r12d,%r12d
3d41(9): mov $0x0,0x50(%rsp)
3d4a(5): mov $0x1,0xf(%rsp)
3d4f(5): mov $0x1,0xd(%rsp)
3d54(9): mov $0x1,0x18(%rsp)
3d5d(3): xor %r15d,%r15d
3d60(5): mov %rax,0x48(%rsp)
3d65(5): jmp 0xffffefde(%rip)
3d6a(2): mov %edx,%eax
3d6c(5): mov 0x48(%rsp),%rbx
3d71(3): test %rbx,%rbx
3d74(2): jz 0x2e(%rip)
3d76(2): test %al,%al
3d78(2): jz 0x2a(%rip)
3d7a(3): movzx (%rbx),%ecx
3d7d(3): mov %rbx,%rax
3d80(2): test %cl,%cl
3d82(2): jz 0x20(%rip)
3d84(3): mov %r15,%rdx
3d87(3): sub %r15,%rax
3d8a(3): cmp %rdx,%r13
3d8d(2): jbe 0x6(%rip)
3d8f(4): mov %cl,0x0(%r14,%rdx,1)
3d93(4): add $0x1,%rdx
3d97(4): movzx 0x0(%rax,%rdx,1),%ecx
3d9b(2): test %cl,%cl
3d9d(2): jnz 0xffffffed(%rip)
3d9f(3): mov %rdx,%r15
3da2(3): cmp %r15,%r13
3da5(6): jbe 0xfffffaa4(%rip)
3dab(5): mov $0x0,0x0(%r14,%r15,1)
3db0(5): jmp 0xfffffa99(%rip)
3db5(5): cmp $0x2,0x8(%rsp)
3dba(5): movzx 0xf(%rsp),%ebx
3dbf(3): mov %r11,%rbp
3dc2(3): setz %al
3dc5(4): mov %bl,0xd(%rsp)
3dc9(5): jmp 0xfffffa30(%rip)
3dce(4): mov 0x8(%rsp),%esi
3dd2(3): mov %rcx,%rdi
3dd5(5): call 0xffffedab(%rip)
3dda(5): mov %rax,0x68(%rsp)
3ddf(5): jmp 0xfffffc57(%rip)
3de4(4): mov 0x8(%rsp),%esi
3de8(3): mov %rcx,%rdi
3deb(5): call 0xffffed95(%rip)
3df0(5): mov %rax,0x60(%rsp)
3df5(5): jmp 0xfffffc6c(%rip)
3dfa(5): movzx 0xf(%rsp),%ebx
3dff(3): mov %r11,%rbp
3e02(2): mov %edx,%eax
3e04(4): mov %bl,0xd(%rsp)
3e08(5): jmp 0xfffff9f1(%rip)
3e0d(4): sub $0x8,%rsp
3e11(6): mov $0x5,%r8d
3e17(3): mov %r11,%rcx
3e1a(4): push 0x68(%rsp)
3e1e(4): push 0x78(%rsp)
3e22(3): mov %r14,%rdi
3e25(4): push 0x38(%rsp)
3e29(8): mov 0x98(%rsp),%r9d
3e31(5): mov 0x30(%rsp),%rdx
3e36(5): mov 0x70(%rsp),%rsi
3e3b(5): call 0xffffee35(%rip)
3e40(4): add $0x20,%rsp
3e44(3): mov %rax,%r15
3e47(5): jmp 0xfffffa02(%rip)
3e4c(5): movzx 0x7c(%rsp),%eax
3e51(5): jmp 0xffffff1b(%rip)
3e56(8): mov $0x2,0x8(%rsp)
3e5e(5): jmp 0xfffff99b(%rip)
3e63(5): call 0xffffd6fd(%rip)
3e68(5): mov $0x0,0xd(%rsp)
3e6d(5): jmp 0xfffffa74(%rip)
3e72(3): mov %r11,%rbp
3e75(5): jmp 0xfffff99b(%rip)
3e7a(5): mov $0x1,0xe(%rsp)
3e7f(2): xor %eax,%eax
3e81(3): xor %r12d,%r12d
3e84(9): mov $0x0,0x50(%rsp)
3e8d(5): jmp 0xfffff5a7(%rip)
3e92(3): mov %r13,%rdx
3e95(5): mov 0x50(%rsp),%r13
3e9a(5): jmp 0xfffff5f8(%rip)
3e9f(5): call 0xffffd5f1(%rip)

"quotearg_n_options" :
3eb0(2): push %r15
3eb2(2): push %r14
3eb4(3): movsxd %edi,%r15
3eb7(2): push %r13
3eb9(2): push %r12
3ebb(3): mov %rdx,%r14
3ebe(1): push %rbp
3ebf(1): push %rbx
3ec0(3): mov %rcx,%rbp
3ec3(4): sub $0x28,%rsp
3ec7(5): mov %rsi,0x8(%rsp)
3ecc(5): call 0xffffd5d4(%rip)
3ed1(3): mov %rax,%r13
3ed4(2): mov (%rax),%eax
3ed6(3): test %r15d,%r15d
3ed9(7): mov 0x2041c0(%rip),%rbx
3ee0(4): mov %eax,0x18(%rsp)
3ee4(6): js 0x16d(%rip)
3eea(7): cmp %r15d,0x2041a7(%rip)
3ef1(2): jnle 0x64(%rip)
3ef3(7): cmp $0x7fffffff,%r15d
3efa(6): jz 0x15c(%rip)
3f00(4): lea 0x1(%r15),%r12d
3f04(7): lea 0x2041a5(%rip),%rax
3f0b(3): movsxd %r12d,%rsi
3f0e(4): shl/sal $0x4,%rsi
3f12(3): cmp %rax,%rbx
3f15(6): jz 0x11b(%rip)
3f1b(3): mov %rbx,%rdi
3f1e(5): call 0x1032(%rip)
3f23(3): mov %rax,%rbx
3f26(7): mov %rax,0x204173(%rip)
3f2d(7): movsxd 0x204164(%rip),%rdi
3f34(3): mov %r12d,%edx
3f37(2): xor %esi,%esi
3f39(2): sub %edi,%edx
3f3b(4): shl/sal $0x4,%rdi
3f3f(3): movsxd %edx,%rdx
3f42(3): add %rbx,%rdi
3f45(4): shl/sal $0x4,%rdx
3f49(5): call 0xffffd667(%rip)
3f4e(7): mov %r12d,0x204143(%rip)
3f55(3): mov 0x4(%rbp),%eax
3f58(4): shl/sal $0x4,%r15
3f5c(4): sub $0x8,%rsp
3f60(3): add %r15,%rbx
3f63(4): lea 0x8(%rbp),%r15
3f67(4): mov 0x0(%rbp),%r8d
3f6b(3): mov (%rbx),%r11
3f6e(4): mov 0x8(%rbx),%r12
3f72(3): mov %r14,%rcx
3f75(3): or $0x1,%eax
3f78(4): mov %eax,0x24(%rsp)
3f7c(3): push 0x30(%rbp)
3f7f(3): mov %eax,%r9d
3f82(3): push 0x28(%rbp)
3f85(2): push %r15
3f87(3): mov %r11,%rsi
3f8a(5): mov 0x28(%rsp),%rdx
3f8f(3): mov %r12,%rdi
3f92(5): mov %r11,0x30(%rsp)
3f97(5): call 0xffffecd9(%rip)
3f9c(4): add $0x20,%rsp
3fa0(5): mov 0x10(%rsp),%r11
3fa5(3): cmp %rax,%r11
3fa8(2): jnbe 0x69(%rip)
3faa(4): lea 0x1(%rax),%rsi
3fae(7): lea 0x20416b(%rip),%rax
3fb5(3): cmp %rax,%r12
3fb8(3): mov %rsi,(%rbx)
3fbb(2): jz 0x14(%rip)
3fbd(3): mov %r12,%rdi
3fc0(5): mov %rsi,0x10(%rsp)
3fc5(5): call 0xffffd4bb(%rip)
3fca(5): mov 0x10(%rsp),%rsi
3fcf(3): mov %rsi,%rdi
3fd2(5): mov %rsi,0x10(%rsp)
3fd7(5): call 0xf19(%rip)
3fdc(4): sub $0x8,%rsp
3fe0(4): mov %rax,0x8(%rbx)
3fe4(4): mov 0x0(%rbp),%r8d
3fe8(3): push 0x30(%rbp)
3feb(3): push 0x28(%rbp)
3fee(3): mov %r14,%rcx
3ff1(2): push %r15
3ff3(5): mov 0x3c(%rsp),%r9d
3ff8(3): mov %rax,%rdi
3ffb(5): mov 0x28(%rsp),%rdx
4000(5): mov 0x30(%rsp),%rsi
4005(3): mov %rax,%r12
4008(5): call 0xffffec68(%rip)
400d(4): add $0x20,%rsp
4011(4): mov 0x18(%rsp),%eax
4015(4): mov %eax,0x0(%r13)
4019(4): add $0x28,%rsp
401d(3): mov %r12,%rax
4020(1): pop %rbx
4021(1): pop %rbp
4022(2): pop %r12
4024(2): pop %r13
4026(2): pop %r14
4028(2): pop %r15
402a(1): ret near (%rsp)
402b(5): nop 0x0(%rax,%rax,1)
4030(2): xor %edi,%edi
4032(5): call 0xf1e(%rip)
4037(8): movdqa 0x204071(%rip),%xmm0
403f(3): mov %rax,%rbx
4042(7): mov %rax,0x204057(%rip)
4049(3): movups %xmm0,(%rax)
404c(5): jmp 0xfffffee1(%rip)
4051(5): call 0xffffd43f(%rip)
4056(5): call 0x10ea(%rip)

"clone_quoting_options" :
4060(2): push %r12
4062(1): push %rbp
4063(1): push %rbx
4064(3): mov %rdi,%rbx
4067(5): call 0xffffd439(%rip)
406c(3): mov (%rax),%r12d
406f(3): mov %rax,%rbp
4072(7): lea 0x2041a7(%rip),%rax
4079(3): test %rbx,%rbx
407c(5): mov $0x38,%esi
4081(4): cmove %rax,%rbx
4085(3): mov %rbx,%rdi
4088(5): call 0x1068(%rip)
408d(4): mov %r12d,0x0(%rbp)
4091(1): pop %rbx
4092(1): pop %rbp
4093(2): pop %r12
4095(1): ret near (%rsp)

"get_quoting_style" :
40a0(7): lea 0x204179(%rip),%rax
40a7(3): test %rdi,%rdi
40aa(4): cmove %rax,%rdi
40ae(2): mov (%rdi),%eax
40b0(1): ret near (%rsp)

"set_quoting_style" :
40c0(7): lea 0x204159(%rip),%rax
40c7(3): test %rdi,%rdi
40ca(4): cmove %rax,%rdi
40ce(2): mov %esi,(%rdi)
40d0(1): ret near (%rsp)

"set_char_quoting" :
40e0(7): lea 0x204139(%rip),%rax
40e7(3): test %rdi,%rdi
40ea(2): mov %esi,%ecx
40ec(4): cmove %rax,%rdi
40f0(2): mov %esi,%eax
40f2(3): and $0x1f,%ecx
40f5(3): shr $0x5,%al
40f8(3): movzx %al,%eax
40fb(5): lea 0x8(%rdi,%rax,4),%rdi
4100(2): mov (%rdi),%esi
4102(2): mov %esi,%eax
4104(2): shr %cl,%eax
4106(2): xor %eax,%edx
4108(3): and $0x1,%eax
410b(3): and $0x1,%edx
410e(2): shl/sal %cl,%edx
4110(2): xor %esi,%edx
4112(2): mov %edx,(%rdi)
4114(1): ret near (%rsp)

"set_quoting_flags" :
4120(7): lea 0x2040f9(%rip),%rax
4127(3): test %rdi,%rdi
412a(4): cmove %rax,%rdi
412e(3): mov 0x4(%rdi),%eax
4131(3): mov %esi,0x4(%rdi)
4134(1): ret near (%rsp)

"set_custom_quoting" :
4140(7): lea 0x2040d9(%rip),%rax
4147(3): test %rdi,%rdi
414a(4): cmove %rax,%rdi
414e(3): test %rsi,%rsi
4151(6): mov $0xa,(%rdi)
4157(2): jz 0x10(%rip)
4159(3): test %rdx,%rdx
415c(2): jz 0xb(%rip)
415e(4): mov %rsi,0x28(%rdi)
4162(4): mov %rdx,0x30(%rdi)
4166(1): ret near (%rsp)
4167(4): sub $0x8,%rsp
416b(5): call 0xffffd325(%rip)

"quotearg_buffer" :
4170(2): push %r15
4172(2): push %r14
4174(7): lea 0x2040a5(%rip),%rax
417b(2): push %r13
417d(2): push %r12
417f(3): mov %rdi,%r13
4182(1): push %rbp
4183(1): push %rbx
4184(3): mov %r8,%rbx
4187(3): mov %rsi,%r14
418a(3): mov %rdx,%r15
418d(4): sub $0x18,%rsp
4191(3): test %r8,%r8
4194(4): cmove %rax,%rbx
4198(5): mov %rcx,0x8(%rsp)
419d(5): call 0xffffd303(%rip)
41a2(3): mov (%rax),%r12d
41a5(3): mov %rax,%rbp
41a8(4): lea 0x8(%rbx),%rax
41ac(4): sub $0x8,%rsp
41b0(4): mov 0x4(%rbx),%r9d
41b4(3): push 0x30(%rbx)
41b7(3): mov (%rbx),%r8d
41ba(3): push 0x28(%rbx)
41bd(3): mov %r15,%rdx
41c0(1): push %rax
41c1(5): mov 0x28(%rsp),%rcx
41c6(3): mov %r14,%rsi
41c9(3): mov %r13,%rdi
41cc(5): call 0xffffeaa4(%rip)
41d1(4): mov %r12d,0x0(%rbp)
41d5(4): add $0x38,%rsp
41d9(1): pop %rbx
41da(1): pop %rbp
41db(2): pop %r12
41dd(2): pop %r13
41df(2): pop %r14
41e1(2): pop %r15
41e3(1): ret near (%rsp)

"quotearg_alloc_mem" :
41f0(2): push %r15
41f2(2): push %r14
41f4(7): lea 0x204025(%rip),%rax
41fb(2): push %r13
41fd(2): push %r12
41ff(3): mov %rdx,%r12
4202(1): push %rbp
4203(1): push %rbx
4204(3): mov %rcx,%rbx
4207(3): mov %rdi,%r14
420a(3): mov %rsi,%r15
420d(4): sub $0x38,%rsp
4211(3): test %rcx,%rcx
4214(4): cmove %rax,%rbx
4218(2): xor %ebp,%ebp
421a(5): call 0xffffd286(%rip)
421f(3): test %r12,%r12
4222(3): mov %rax,%r13
4225(2): mov (%rax),%eax
4227(4): setz %bpl
422b(3): or 0x4(%rbx),%ebp
422e(4): lea 0x8(%rbx),%r10
4232(4): sub $0x8,%rsp
4236(3): mov (%rbx),%r8d
4239(3): mov %r15,%rcx
423c(4): mov %eax,0x14(%rsp)
4240(3): push 0x30(%rbx)
4243(3): mov %r14,%rdx
4246(3): push 0x28(%rbx)
4249(2): push %r10
424b(2): xor %esi,%esi
424d(3): mov %ebp,%r9d
4250(2): xor %edi,%edi
4252(5): mov %r10,0x40(%rsp)
4257(5): call 0xffffea19(%rip)
425c(4): lea 0x1(%rax),%rsi
4260(5): mov %rax,0x48(%rsp)
4265(4): add $0x20,%rsp
4269(3): mov %rsi,%rdi
426c(5): mov %rsi,0x18(%rsp)
4271(5): call 0xc7f(%rip)
4276(5): mov %rax,0x10(%rsp)
427b(4): sub $0x8,%rsp
427f(3): push 0x30(%rbx)
4282(3): push 0x28(%rbx)
4285(5): mov 0x38(%rsp),%r10
428a(3): mov %ebp,%r9d
428d(3): mov (%rbx),%r8d
4290(3): mov %r15,%rcx
4293(3): mov %r14,%rdx
4296(3): mov %rax,%rdi
4299(2): push %r10
429b(5): mov 0x38(%rsp),%rsi
42a0(5): call 0xffffe9d0(%rip)
42a5(4): mov 0x2c(%rsp),%eax
42a9(4): add $0x20,%rsp
42ad(3): test %r12,%r12
42b0(4): mov %eax,0x0(%r13)
42b4(2): jz 0xb(%rip)
42b6(5): mov 0x28(%rsp),%r11
42bb(4): mov %r11,(%r12)
42bf(5): mov 0x10(%rsp),%rax
42c4(4): add $0x38,%rsp
42c8(1): pop %rbx
42c9(1): pop %rbp
42ca(2): pop %r12
42cc(2): pop %r13
42ce(2): pop %r14
42d0(2): pop %r15
42d2(1): ret near (%rsp)

"quotearg_alloc" :
42e0(3): mov %rdx,%rcx
42e3(2): xor %edx,%edx
42e5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
42f0(6): mov 0x203da2(%rip),%eax
42f6(2): push %r12
42f8(7): mov 0x203da1(%rip),%r12
42ff(1): push %rbp
4300(1): push %rbx
4301(3): cmp $0x1,%eax
4304(2): jle 0x2d(%rip)
4306(3): sub $0x2,%eax
4309(5): lea 0x18(%r12),%rbx
430e(4): shl/sal $0x4,%rax
4312(5): lea 0x28(%r12,%rax,1),%rbp
4317(9): nop 0x0(%rax,%rax,1)
4320(3): mov (%rbx),%rdi
4323(4): add $0x10,%rbx
4327(5): call 0xffffd159(%rip)
432c(3): cmp %rbp,%rbx
432f(2): jnz 0xfffffff1(%rip)
4331(5): mov 0x8(%r12),%rdi
4336(7): lea 0x203de3(%rip),%rbx
433d(3): cmp %rbx,%rdi
4340(2): jz 0x19(%rip)
4342(5): call 0xffffd13e(%rip)
4347(b): mov $0x100,0x203d5e(%rip)
4352(7): mov %rbx,0x203d5f(%rip)
4359(7): lea 0x203d50(%rip),%rbx
4360(3): cmp %rbx,%r12
4363(2): jz 0x11(%rip)
4365(3): mov %r12,%rdi
4368(5): call 0xffffd118(%rip)
436d(7): mov %rbx,0x203d2c(%rip)
4374(1): pop %rbx
4375(a): mov $0x1,0x203d19(%rip)
437f(1): pop %rbp
4380(2): pop %r12
4382(1): ret near (%rsp)

"quotearg_n" :
4390(7): lea 0x203e89(%rip),%rcx
4397(7): mov $0xffffffff,%rdx
439e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
43b0(7): lea 0x203e69(%rip),%rcx
43b7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
43c0(7): lea 0x203e59(%rip),%rcx
43c7(3): mov %rdi,%rsi
43ca(7): mov $0xffffffff,%rdx
43d1(2): xor %edi,%edi
43d3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
43e0(7): lea 0x203e39(%rip),%rcx
43e7(3): mov %rsi,%rdx
43ea(3): mov %rdi,%rsi
43ed(2): xor %edi,%edi
43ef(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4400(4): sub $0x48,%rsp
4404(3): mov %rdx,%rax
4407(9): mov $0x28,%rdx
4410(5): mov %rdx,0x38(%rsp)
4415(2): xor %edx,%edx
4417(3): cmp $0xa,%esi
441a(2): jz 0x6a(%rip)
441c(3): mov %esi,(%rsp)
441f(3): mov %rsp,%rcx
4422(7): mov $0xffffffff,%rdx
4429(3): mov %rax,%rsi
442c(9): mov $0x0,0x4(%rsp)
4435(9): mov $0x0,0xc(%rsp)
443e(9): mov $0x0,0x14(%rsp)
4447(9): mov $0x0,0x1c(%rsp)
4450(9): mov $0x0,0x24(%rsp)
4459(9): mov $0x0,0x2c(%rsp)
4462(8): mov $0x0,0x34(%rsp)
446a(5): call 0xfffffa46(%rip)
446f(5): mov 0x38(%rsp),%rcx
4474(9): xor $0x28,%rcx
447d(2): jnz 0xc(%rip)
447f(4): add $0x48,%rsp
4483(1): ret near (%rsp)
4484(5): call 0xffffd00c(%rip)
4489(5): call 0xffffd0d7(%rip)

"quotearg_n_style_mem" :
4490(4): sub $0x48,%rsp
4494(3): mov %rdx,%rax
4497(3): mov %rcx,%rdx
449a(9): mov $0x28,%rcx
44a3(5): mov %rcx,0x38(%rsp)
44a8(2): xor %ecx,%ecx
44aa(3): cmp $0xa,%esi
44ad(2): jz 0x63(%rip)
44af(3): mov %esi,(%rsp)
44b2(3): mov %rsp,%rcx
44b5(3): mov %rax,%rsi
44b8(9): mov $0x0,0x4(%rsp)
44c1(9): mov $0x0,0xc(%rsp)
44ca(9): mov $0x0,0x14(%rsp)
44d3(9): mov $0x0,0x1c(%rsp)
44dc(9): mov $0x0,0x24(%rsp)
44e5(9): mov $0x0,0x2c(%rsp)
44ee(8): mov $0x0,0x34(%rsp)
44f6(5): call 0xfffff9ba(%rip)
44fb(5): mov 0x38(%rsp),%rdx
4500(9): xor $0x28,%rdx
4509(2): jnz 0xc(%rip)
450b(4): add $0x48,%rsp
450f(1): ret near (%rsp)
4510(5): call 0xffffcf80(%rip)
4515(5): call 0xffffd04b(%rip)

"quotearg_style" :
4520(3): mov %rsi,%rdx
4523(2): mov %edi,%esi
4525(2): xor %edi,%edi
4527(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4530(3): mov %rdx,%rcx
4533(3): mov %rsi,%rdx
4536(2): mov %edi,%esi
4538(2): xor %edi,%edi
453a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4540(4): sub $0x48,%rsp
4544(2): mov %edx,%ecx
4546(9): mov $0x28,%rax
454f(5): mov %rax,0x38(%rsp)
4554(2): xor %eax,%eax
4556(7): mov 0x203cf3(%rip),%rax
455d(3): mov %rsp,%r8
4560(3): and $0x1f,%ecx
4563(8): movdqa 0x203cb5(%rip),%xmm0
456b(5): mov %rax,0x30(%rsp)
4570(2): mov %edx,%eax
4572(4): movaps %xmm0,(%rsp)
4576(3): shr $0x5,%al
4579(3): movzx %al,%eax
457c(5): lea 0x8(%r8,%rax,4),%r9
4581(8): movdqa 0x203ca7(%rip),%xmm0
4589(5): movaps %xmm0,0x10(%rsp)
458e(8): movdqa 0x203caa(%rip),%xmm0
4596(5): movaps %xmm0,0x20(%rsp)
459b(3): mov (%r9),%edx
459e(2): mov %edx,%eax
45a0(2): shr %cl,%eax
45a2(2): not %eax
45a4(3): and $0x1,%eax
45a7(2): shl/sal %cl,%eax
45a9(3): mov %r8,%rcx
45ac(2): xor %edx,%eax
45ae(3): mov %rsi,%rdx
45b1(3): mov %rdi,%rsi
45b4(3): mov %eax,(%r9)
45b7(2): xor %edi,%edi
45b9(5): call 0xfffff8f7(%rip)
45be(5): mov 0x38(%rsp),%rsi
45c3(9): xor $0x28,%rsi
45cc(2): jnz 0x7(%rip)
45ce(4): add $0x48,%rsp
45d2(1): ret near (%rsp)
45d3(5): call 0xffffcf8d(%rip)

"quotearg_char" :
45e0(4): movsx %sil,%edx
45e4(7): mov $0xffffffff,%rsi
45eb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
45f0(5): mov $0x3a,%edx
45f5(7): mov $0xffffffff,%rsi
45fc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4610(5): mov $0x3a,%edx
4615(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4620(4): sub $0x48,%rsp
4624(3): mov %rdx,%rax
4627(9): mov $0x28,%rdx
4630(5): mov %rdx,0x38(%rsp)
4635(2): xor %edx,%edx
4637(3): cmp $0xa,%esi
463a(2): jz 0x6a(%rip)
463c(3): mov %esi,(%rsp)
463f(3): mov %rsp,%rcx
4642(7): mov $0xffffffff,%rdx
4649(3): mov %rax,%rsi
464c(9): mov $0x0,0x4(%rsp)
4655(9): mov $0x4000000,0xc(%rsp)
465e(9): mov $0x0,0x14(%rsp)
4667(9): mov $0x0,0x1c(%rsp)
4670(9): mov $0x0,0x24(%rsp)
4679(9): mov $0x0,0x2c(%rsp)
4682(8): mov $0x0,0x34(%rsp)
468a(5): call 0xfffff826(%rip)
468f(5): mov 0x38(%rsp),%rcx
4694(9): xor $0x28,%rcx
469d(2): jnz 0xc(%rip)
469f(4): add $0x48,%rsp
46a3(1): ret near (%rsp)
46a4(5): call 0xffffcdec(%rip)
46a9(5): call 0xffffceb7(%rip)

"quotearg_n_custom_mem" :
46b0(4): sub $0x48,%rsp
46b4(3): mov %rcx,%r9
46b7(7): mov 0x203b92(%rip),%rcx
46be(8): movdqa 0x203b5a(%rip),%xmm0
46c6(9): mov $0x28,%rax
46cf(5): mov %rax,0x38(%rsp)
46d4(2): xor %eax,%eax
46d6(4): movaps %xmm0,(%rsp)
46da(3): test %rsi,%rsi
46dd(5): mov %rcx,0x30(%rsp)
46e2(7): mov $0xa,(%rsp)
46e9(8): movdqa 0x203b3f(%rip),%xmm0
46f1(5): movaps %xmm0,0x10(%rsp)
46f6(8): movdqa 0x203b42(%rip),%xmm0
46fe(5): movaps %xmm0,0x20(%rsp)
4703(2): jz 0x34(%rip)
4705(3): test %rdx,%rdx
4708(2): jz 0x2f(%rip)
470a(5): mov %rsi,0x28(%rsp)
470f(5): mov %rdx,0x30(%rsp)
4714(3): mov %rsp,%rcx
4717(3): mov %r8,%rdx
471a(3): mov %r9,%rsi
471d(5): call 0xfffff793(%rip)
4722(5): mov 0x38(%rsp),%rdi
4727(9): xor $0x28,%rdi
4730(2): jnz 0xc(%rip)
4732(4): add $0x48,%rsp
4736(1): ret near (%rsp)
4737(5): call 0xffffcd59(%rip)
473c(5): call 0xffffce24(%rip)

"quotearg_n_custom" :
4750(7): mov $0xffffffff,%r8
4757(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4760(3): mov %rdx,%rcx
4763(7): mov $0xffffffff,%r8
476a(3): mov %rsi,%rdx
476d(3): mov %rdi,%rsi
4770(2): xor %edi,%edi
4772(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4780(3): mov %rcx,%r8
4783(3): mov %rdx,%rcx
4786(3): mov %rsi,%rdx
4789(3): mov %rdi,%rsi
478c(2): xor %edi,%edi
478e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
47a0(7): lea 0x2038b9(%rip),%rcx
47a7(5): jmp 0xfffff709(%rip)

"quote_mem" :
47b0(7): lea 0x2038a9(%rip),%rcx
47b7(3): mov %rsi,%rdx
47ba(3): mov %rdi,%rsi
47bd(2): xor %edi,%edi
47bf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
47d0(7): lea 0x203889(%rip),%rcx
47d7(7): mov $0xffffffff,%rdx
47de(5): jmp 0xfffff6d2(%rip)

"quote" :
47f0(7): lea 0x203869(%rip),%rcx
47f7(3): mov %rdi,%rsi
47fa(7): mov $0xffffffff,%rdx
4801(2): xor %edi,%edi
4803(5): jmp 0xfffff6ad(%rip)

"safe_read" :
4810(2): push %r13
4812(2): push %r12
4814(3): mov %edi,%r13d
4817(1): push %rbp
4818(1): push %rbx
4819(3): mov %rsi,%r12
481c(3): mov %rdx,%rbx
481f(4): sub $0x8,%rsp
4823(5): nop 0x0(%rax,%rax,1)
4828(3): mov %rbx,%rdx
482b(3): mov %r12,%rsi
482e(3): mov %r13d,%edi
4831(5): call 0xffffcdbf(%rip)
4836(3): test %rax,%rax
4839(3): mov %rax,%rbp
483c(2): jns 0x24(%rip)
483e(5): call 0xffffcc62(%rip)
4843(2): mov (%rax),%eax
4845(3): cmp $0x4,%eax
4848(2): jz 0xffffffe0(%rip)
484a(7): cmp $0x7ff00000,%rbx
4851(2): jbe 0xf(%rip)
4853(3): cmp $0x16,%eax
4856(2): jnz 0xa(%rip)
4858(5): mov $0x7ff00000,%ebx
485d(2): jmp 0xffffffcb(%rip)
485f(1): nop 
4860(4): add $0x8,%rsp
4864(3): mov %rbp,%rax
4867(1): pop %rbx
4868(1): pop %rbp
4869(2): pop %r12
486b(2): pop %r13
486d(1): ret near (%rsp)

"safe_write" :
4870(2): push %r13
4872(2): push %r12
4874(3): mov %edi,%r13d
4877(1): push %rbp
4878(1): push %rbx
4879(3): mov %rsi,%r12
487c(3): mov %rdx,%rbx
487f(4): sub $0x8,%rsp
4883(5): nop 0x0(%rax,%rax,1)
4888(3): mov %rbx,%rdx
488b(3): mov %r12,%rsi
488e(3): mov %r13d,%edi
4891(5): call 0xffffcc4f(%rip)
4896(3): test %rax,%rax
4899(3): mov %rax,%rbp
489c(2): jns 0x24(%rip)
489e(5): call 0xffffcc02(%rip)
48a3(2): mov (%rax),%eax
48a5(3): cmp $0x4,%eax
48a8(2): jz 0xffffffe0(%rip)
48aa(3): cmp $0x16,%eax
48ad(2): jnz 0x13(%rip)
48af(7): cmp $0x7ff00000,%rbx
48b6(2): jbe 0xa(%rip)
48b8(5): mov $0x7ff00000,%ebx
48bd(2): jmp 0xffffffcb(%rip)
48bf(1): nop 
48c0(4): add $0x8,%rsp
48c4(3): mov %rbp,%rax
48c7(1): pop %rbx
48c8(1): pop %rbp
48c9(2): pop %r12
48cb(2): pop %r13
48cd(1): ret near (%rsp)

"version_etc_arn" :
48d0(2): push %r15
48d2(2): push %r14
48d4(2): push %r13
48d6(2): push %r12
48d8(3): mov %r9,%r12
48db(1): push %rbp
48dc(1): push %rbx
48dd(3): mov %rdi,%rbp
48e0(3): mov %r8,%rbx
48e3(4): sub $0x28,%rsp
48e7(3): test %rsi,%rsi
48ea(6): jz 0x11e(%rip)
48f0(3): mov %rdx,%r8
48f3(7): lea 0x176e(%rip),%rdx
48fa(3): mov %rcx,%r9
48fd(2): xor %eax,%eax
48ff(3): mov %rsi,%rcx
4902(5): mov $0x1,%esi
4907(5): call 0xffffce49(%rip)
490c(7): lea 0x1768(%rip),%rsi
4913(2): xor %edi,%edi
4915(5): mov $0x5,%edx
491a(5): call 0xffffcc16(%rip)
491f(7): lea 0x1a7a(%rip),%rdx
4926(3): mov %rax,%rcx
4929(6): mov $0x7e3,%r8d
492f(5): mov $0x1,%esi
4934(3): mov %rbp,%rdi
4937(2): xor %eax,%eax
4939(5): call 0xffffce17(%rip)
493e(7): lea 0x17c3(%rip),%rsi
4945(2): xor %edi,%edi
4947(5): mov $0x5,%edx
494c(5): call 0xffffcbe4(%rip)
4951(3): mov %rbp,%rsi
4954(3): mov %rax,%rdi
4957(5): call 0xffffccb9(%rip)
495c(4): cmp $0x9,%r12
4960(6): jnbe 0x340(%rip)
4966(7): lea 0x19fb(%rip),%rdx
496d(4): movsxd 0x0(%rdx,%r12,4),%rax
4971(3): add %rdx,%rax
4974(2): jmp %rax
4976(a): nop 0x0(%rax,%rax,1)
4980(4): mov 0x38(%rbx),%r9
4984(4): mov 0x10(%rbx),%rax
4988(7): lea 0x18e9(%rip),%rsi
498f(4): mov 0x8(%rbx),%r8
4993(5): mov $0x5,%edx
4998(2): xor %edi,%edi
499a(4): mov 0x30(%rbx),%r13
499e(4): mov 0x28(%rbx),%r12
49a2(5): mov %r9,0x10(%rsp)
49a7(4): mov 0x20(%rbx),%r15
49ab(4): mov 0x18(%rbx),%r14
49af(4): mov %rax,(%rsp)
49b3(5): mov %r8,0x8(%rsp)
49b8(3): mov (%rbx),%rbx
49bb(5): call 0xffffcb75(%rip)
49c0(4): sub $0x8,%rsp
49c4(5): mov 0x18(%rsp),%r9
49c9(3): mov %rax,%rdx
49cc(3): mov %rbx,%rcx
49cf(5): mov $0x1,%esi
49d4(3): mov %rbp,%rdi
49d7(2): xor %eax,%eax
49d9(2): push %r9
49db(2): push %r13
49dd(2): push %r12
49df(2): push %r15
49e1(2): push %r14
49e3(5): mov 0x30(%rsp),%r9
49e8(5): mov 0x38(%rsp),%r8
49ed(5): call 0xffffcd63(%rip)
49f2(4): add $0x30,%rsp
49f6(4): add $0x28,%rsp
49fa(1): pop %rbx
49fb(1): pop %rbp
49fc(2): pop %r12
49fe(2): pop %r13
4a00(2): pop %r14
4a02(2): pop %r15
4a04(1): ret near (%rsp)
4a05(3): nop (%rax)
4a08(3): mov %rcx,%r8
4a0b(3): mov %rdx,%rcx
4a0e(7): lea 0x165f(%rip),%rdx
4a15(5): mov $0x1,%esi
4a1a(2): xor %eax,%eax
4a1c(5): call 0xffffcd34(%rip)
4a21(5): jmp 0xfffffeeb(%rip)
4a26(a): nop 0x0(%rax,%rax,1)
4a30(4): mov 0x40(%rbx),%r10
4a34(4): mov 0x38(%rbx),%r9
4a38(7): lea 0x1869(%rip),%rsi
4a3f(4): mov 0x10(%rbx),%rax
4a43(4): mov 0x8(%rbx),%r8
4a47(5): mov $0x5,%edx
4a4c(4): mov 0x30(%rbx),%r13
4a50(4): mov 0x28(%rbx),%r12
4a54(4): mov 0x20(%rbx),%r15
4a58(4): mov 0x18(%rbx),%r14
4a5c(3): mov (%rbx),%rbx
4a5f(5): mov %r10,0x18(%rsp)
4a64(5): mov %r9,0x10(%rsp)
4a69(4): mov %rax,(%rsp)
4a6d(5): mov %r8,0x8(%rsp)
4a72(2): xor %edi,%edi
4a74(5): call 0xffffcabc(%rip)
4a79(5): mov 0x18(%rsp),%r10
4a7e(2): push %r10
4a80(5): jmp 0xffffff44(%rip)
4a85(3): nop (%rax)
4a88(3): mov (%rbx),%rbx
4a8b(7): lea 0x15ed(%rip),%rsi
4a92(5): mov $0x5,%edx
4a97(2): xor %edi,%edi
4a99(5): call 0xffffca97(%rip)
4a9e(4): add $0x28,%rsp
4aa2(3): mov %rbx,%rcx
4aa5(3): mov %rbp,%rdi
4aa8(1): pop %rbx
4aa9(1): pop %rbp
4aaa(2): pop %r12
4aac(2): pop %r13
4aae(2): pop %r14
4ab0(2): pop %r15
4ab2(3): mov %rax,%rdx
4ab5(5): mov $0x1,%esi
4aba(2): xor %eax,%eax
4abc(5): jmp 0xffffcc94(%rip)
4ac1(7): nop 0x0(%rax)
4ac8(4): mov 0x8(%rbx),%r12
4acc(7): lea 0x15bc(%rip),%rsi
4ad3(3): mov (%rbx),%rbx
4ad6(5): mov $0x5,%edx
4adb(2): xor %edi,%edi
4add(5): call 0xffffca53(%rip)
4ae2(4): add $0x28,%rsp
4ae6(3): mov %r12,%r8
4ae9(3): mov %rbx,%rcx
4aec(3): mov %rbp,%rdi
4aef(3): mov %rax,%rdx
4af2(5): mov $0x1,%esi
4af7(1): pop %rbx
4af8(1): pop %rbp
4af9(2): pop %r12
4afb(2): pop %r13
4afd(2): pop %r14
4aff(2): pop %r15
4b01(2): xor %eax,%eax
4b03(5): jmp 0xffffcc4d(%rip)
4b08(8): nop 0x0(%rax,%rax,1)
4b10(4): mov 0x10(%rbx),%r13
4b14(4): mov 0x8(%rbx),%r12
4b18(7): lea 0x1587(%rip),%rsi
4b1f(3): mov (%rbx),%rbx
4b22(5): mov $0x5,%edx
4b27(2): xor %edi,%edi
4b29(5): call 0xffffca07(%rip)
4b2e(4): add $0x28,%rsp
4b32(3): mov %r13,%r9
4b35(3): mov %r12,%r8
4b38(3): mov %rbx,%rcx
4b3b(3): mov %rbp,%rdi
4b3e(3): mov %rax,%rdx
4b41(1): pop %rbx
4b42(1): pop %rbp
4b43(2): pop %r12
4b45(2): pop %r13
4b47(2): pop %r14
4b49(2): pop %r15
4b4b(5): mov $0x1,%esi
4b50(2): xor %eax,%eax
4b52(5): jmp 0xffffcbfe(%rip)
4b57(9): nop 0x0(%rax,%rax,1)
4b60(7): lea 0x1671(%rip),%rsi
4b67(5): mov $0x5,%edx
4b6c(2): xor %edi,%edi
4b6e(4): mov 0x18(%rbx),%r14
4b72(4): mov 0x10(%rbx),%r13
4b76(4): mov 0x8(%rbx),%r12
4b7a(3): mov (%rbx),%rbx
4b7d(5): call 0xffffc9b3(%rip)
4b82(4): sub $0x8,%rsp
4b86(2): push %r14
4b88(3): mov %rax,%rdx
4b8b(3): mov %r13,%r9
4b8e(3): mov %r12,%r8
4b91(3): mov %rbx,%rcx
4b94(3): mov %rbp,%rdi
4b97(5): mov $0x1,%esi
4b9c(2): xor %eax,%eax
4b9e(5): call 0xffffcbb2(%rip)
4ba3(1): pop %rax
4ba4(1): pop %rdx
4ba5(4): add $0x28,%rsp
4ba9(1): pop %rbx
4baa(1): pop %rbp
4bab(2): pop %r12
4bad(2): pop %r13
4baf(2): pop %r14
4bb1(2): pop %r15
4bb3(1): ret near (%rsp)
4bb4(4): nop 0x0(%rax)
4bb8(4): mov 0x20(%rbx),%r15
4bbc(7): lea 0x1635(%rip),%rsi
4bc3(5): mov $0x5,%edx
4bc8(2): xor %edi,%edi
4bca(4): mov 0x18(%rbx),%r14
4bce(4): mov 0x10(%rbx),%r13
4bd2(4): mov 0x8(%rbx),%r12
4bd6(3): mov (%rbx),%rbx
4bd9(5): call 0xffffc957(%rip)
4bde(2): push %r15
4be0(2): jmp 0xffffffa6(%rip)
4be2(6): nop 0x0(%rax,%rax,1)
4be8(4): mov 0x8(%rbx),%r8
4bec(4): mov 0x28(%rbx),%r12
4bf0(7): lea 0x1629(%rip),%rsi
4bf7(4): mov 0x20(%rbx),%r15
4bfb(4): mov 0x18(%rbx),%r14
4bff(5): mov $0x5,%edx
4c04(4): mov 0x10(%rbx),%r13
4c08(2): xor %edi,%edi
4c0a(3): mov (%rbx),%rbx
4c0d(4): mov %r8,(%rsp)
4c11(5): call 0xffffc91f(%rip)
4c16(4): sub $0x8,%rsp
4c1a(3): mov %r13,%r9
4c1d(2): push %r12
4c1f(2): push %r15
4c21(2): push %r14
4c23(5): mov 0x20(%rsp),%r8
4c28(3): mov %rbx,%rcx
4c2b(3): mov %rax,%rdx
4c2e(3): mov %rbp,%rdi
4c31(5): mov $0x1,%esi
4c36(2): xor %eax,%eax
4c38(5): call 0xffffcb18(%rip)
4c3d(4): add $0x20,%rsp
4c41(4): add $0x28,%rsp
4c45(1): pop %rbx
4c46(1): pop %rbp
4c47(2): pop %r12
4c49(2): pop %r13
4c4b(2): pop %r14
4c4d(2): pop %r15
4c4f(1): ret near (%rsp)
4c50(4): mov 0x10(%rbx),%r9
4c54(4): mov 0x30(%rbx),%r13
4c58(7): lea 0x15e9(%rip),%rsi
4c5f(4): mov 0x28(%rbx),%r12
4c63(4): mov 0x20(%rbx),%r15
4c67(5): mov $0x5,%edx
4c6c(4): mov 0x18(%rbx),%r14
4c70(4): mov 0x8(%rbx),%r8
4c74(2): xor %edi,%edi
4c76(5): mov %r9,0x8(%rsp)
4c7b(3): mov (%rbx),%rbx
4c7e(4): mov %r8,(%rsp)
4c82(5): call 0xffffc8ae(%rip)
4c87(2): push %r13
4c89(2): push %r12
4c8b(2): push %r15
4c8d(2): push %r14
4c8f(5): mov 0x28(%rsp),%r9
4c94(2): jmp 0xffffff8f(%rip)
4c96(a): nop 0x0(%rax,%rax,1)
4ca0(4): mov 0x40(%rbx),%r10
4ca4(4): mov 0x38(%rbx),%r9
4ca8(5): mov $0x5,%edx
4cad(4): mov 0x10(%rbx),%rax
4cb1(4): mov 0x8(%rbx),%r8
4cb5(7): lea 0x1624(%rip),%rsi
4cbc(4): mov 0x30(%rbx),%r13
4cc0(4): mov 0x28(%rbx),%r12
4cc4(4): mov 0x20(%rbx),%r15
4cc8(4): mov 0x18(%rbx),%r14
4ccc(5): mov %r10,0x18(%rsp)
4cd1(5): mov %r9,0x10(%rsp)
4cd6(4): mov %rax,(%rsp)
4cda(5): mov %r8,0x8(%rsp)
4cdf(3): mov (%rbx),%rbx
4ce2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4cf0(3): xor %r9d,%r9d
4cf3(4): cmp $0x0,(%r8)
4cf7(2): jz 0x14(%rip)
4cf9(7): nop 0x0(%rax)
4d00(4): add $0x1,%r9
4d04(5): cmp $0x0,0x0(%r8,%r9,8)
4d09(2): jnz 0xfffffff7(%rip)
4d0b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4d10(4): sub $0x68,%rsp
4d14(3): mov %r8,%r10
4d17(3): xor %r9d,%r9d
4d1a(9): mov $0x28,%rax
4d23(5): mov %rax,0x58(%rsp)
4d28(2): xor %eax,%eax
4d2a(3): mov %rsp,%r8
4d2d(3): nop (%rax)
4d30(3): mov (%r10),%eax
4d33(3): cmp $0x2f,%eax
4d36(2): jnbe 0x44(%rip)
4d38(3): mov %eax,%r11d
4d3b(4): add 0x10(%r10),%r11
4d3f(3): add $0x8,%eax
4d42(3): mov %eax,(%r10)
4d45(3): mov (%r11),%rax
4d48(3): test %rax,%rax
4d4b(4): mov %rax,0x0(%r8,%r9,8)
4d4f(2): jz 0xc(%rip)
4d51(4): add $0x1,%r9
4d55(4): cmp $0xa,%r9
4d59(2): jnz 0xffffffd7(%rip)
4d5b(5): call 0xfffffb75(%rip)
4d60(5): mov 0x58(%rsp),%rax
4d65(9): xor $0x28,%rax
4d6e(2): jnz 0x7(%rip)
4d70(4): add $0x68,%rsp
4d74(1): ret near (%rsp)
4d75(5): call 0xffffc7eb(%rip)
4d7a(4): mov 0x8(%r10),%r11
4d7e(4): lea 0x8(%r11),%rax
4d82(4): mov %rax,0x8(%r10)
4d86(2): jmp 0xffffffbf(%rip)

"version_etc" :
4d90(1): push %rbp
4d91(1): push %rbx
4d92(6): mov $0x20,%r10d
4d98(3): xor %r11d,%r11d
4d9b(7): sub $0xb8,%rsp
4da2(9): mov $0x28,%rax
4dab(5): mov %rax,0x78(%rsp)
4db0(2): xor %eax,%eax
4db2(8): lea 0xd0(%rsp),%rax
4dba(8): mov %r8,0xa0(%rsp)
4dc2(8): lea 0xd0(%rsp),%rbx
4dca(5): lea 0x20(%rsp),%r8
4dcf(8): mov %r9,0xa8(%rsp)
4dd7(8): mov $0x20,0x8(%rsp)
4ddf(5): mov %rax,0x10(%rsp)
4de4(8): lea 0x80(%rsp),%rax
4dec(3): xor %r9d,%r9d
4def(5): mov %rax,0x18(%rsp)
4df4(3): mov %rax,%rbp
4df7(9): nop 0x0(%rax,%rax,1)
4e00(4): cmp $0x2f,%r10d
4e04(2): jnbe 0x58(%rip)
4e06(3): mov %r10d,%eax
4e09(6): mov $0x1,%r11d
4e0f(4): add $0x8,%r10d
4e13(3): add %rbp,%rax
4e16(3): mov (%rax),%rax
4e19(3): test %rax,%rax
4e1c(4): mov %rax,0x0(%r8,%r9,8)
4e20(2): jz 0xc(%rip)
4e22(4): add $0x1,%r9
4e26(4): cmp $0xa,%r9
4e2a(2): jnz 0xffffffd6(%rip)
4e2c(3): test %r11b,%r11b
4e2f(2): jnz 0x26(%rip)
4e31(5): call 0xfffffa9f(%rip)
4e36(5): mov 0x78(%rsp),%rax
4e3b(9): xor $0x28,%rax
4e44(2): jnz 0xc(%rip)
4e46(7): add $0xb8,%rsp
4e4d(1): pop %rbx
4e4e(1): pop %rbp
4e4f(1): ret near (%rsp)
4e50(5): call 0xffffc710(%rip)
4e55(5): mov %r10d,0x8(%rsp)
4e5a(2): jmp 0xffffffd7(%rip)
4e5c(3): mov %rbx,%rax
4e5f(4): add $0x8,%rbx
4e63(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4e70(1): push %rbx
4e71(7): lea 0x124a(%rip),%rsi
4e78(5): mov $0x5,%edx
4e7d(2): xor %edi,%edi
4e7f(5): call 0xffffc6b1(%rip)
4e84(7): lea 0x124c(%rip),%rdx
4e8b(3): mov %rax,%rsi
4e8e(5): mov $0x1,%edi
4e93(2): xor %eax,%eax
4e95(5): call 0xffffc82b(%rip)
4e9a(7): lea 0x124c(%rip),%rsi
4ea1(5): mov $0x5,%edx
4ea6(2): xor %edi,%edi
4ea8(5): call 0xffffc688(%rip)
4ead(7): lea 0xbe4(%rip),%rcx
4eb4(7): lea 0x6cf(%rip),%rdx
4ebb(3): mov %rax,%rsi
4ebe(5): mov $0x1,%edi
4ec3(2): xor %eax,%eax
4ec5(5): call 0xffffc7fb(%rip)
4eca(7): mov 0x2031f7(%rip),%rbx
4ed1(7): lea 0x1448(%rip),%rsi
4ed8(2): xor %edi,%edi
4eda(5): mov $0x5,%edx
4edf(5): call 0xffffc651(%rip)
4ee4(3): mov %rbx,%rsi
4ee7(3): mov %rax,%rdi
4eea(1): pop %rbx
4eeb(5): jmp 0xffffc725(%rip)

"xmalloc" :
4ef0(1): push %rbx
4ef1(3): mov %rdi,%rbx
4ef4(5): call 0xffffc75c(%rip)
4ef9(3): test %rax,%rax
4efc(2): jnz 0x7(%rip)
4efe(3): test %rbx,%rbx
4f01(2): jnz 0x4(%rip)
4f03(1): pop %rbx
4f04(1): ret near (%rsp)
4f05(5): call 0x23b(%rip)

"xnmalloc" :
4f10(3): mov %rdi,%rax
4f13(3): mul %rax,%rsi,%rdx
4f16(3): mov %rax,%rdi
4f19(3): seto %al
4f1c(3): test %rdi,%rdi
4f1f(2): js 0xc(%rip)
4f21(3): movzx %al,%eax
4f24(3): test %rax,%rax
4f27(2): jnz 0x4(%rip)
4f29(2): jmp 0xffffffc7(%rip)
4f2b(4): sub $0x8,%rsp
4f2f(5): call 0x211(%rip)

"xrealloc" :
4f50(3): test %rsi,%rsi
4f53(1): push %rbx
4f54(3): mov %rsi,%rbx
4f57(2): jnz 0x7(%rip)
4f59(3): test %rdi,%rdi
4f5c(2): jnz 0x1c(%rip)
4f5e(3): mov %rbx,%rsi
4f61(5): call 0xffffc73f(%rip)
4f66(3): test %rax,%rax
4f69(2): jnz 0x7(%rip)
4f6b(3): test %rbx,%rbx
4f6e(2): jnz 0x13(%rip)
4f70(1): pop %rbx
4f71(1): ret near (%rsp)
4f72(6): nop 0x0(%rax,%rax,1)
4f78(5): call 0xffffc508(%rip)
4f7d(2): xor %eax,%eax
4f7f(1): pop %rbx
4f80(1): ret near (%rsp)
4f81(5): call 0x1bf(%rip)

"xnrealloc" :
4f90(3): mov %rsi,%rax
4f93(3): mul %rax,%rdx,%rdx
4f96(3): mov %rax,%rsi
4f99(3): seto %al
4f9c(3): test %rsi,%rsi
4f9f(2): js 0xc(%rip)
4fa1(3): movzx %al,%eax
4fa4(3): test %rax,%rax
4fa7(2): jnz 0x4(%rip)
4fa9(2): jmp 0xffffffa7(%rip)
4fab(4): sub $0x8,%rsp
4faf(5): call 0x191(%rip)

"x2nrealloc" :
4fc0(3): test %rdi,%rdi
4fc3(3): mov %rdx,%r9
4fc6(3): mov (%rsi),%rcx
4fc9(2): jz 0x37(%rip)
4fcb(2): xor %edx,%edx
4fcd(a): mov $0x6148914691236517204,%rax
4fd7(3): div %r9,%rax
4fda(3): cmp %rcx,%rax
4fdd(2): jbe 0x3e(%rip)
4fdf(3): mov %rcx,%rax
4fe2(3): shr $0x1,%rax
4fe5(5): lea 0x1(%rax,%rcx,1),%rcx
4fea(3): mov %rcx,(%rsi)
4fed(4): imul %r9,%rcx
4ff1(3): mov %rcx,%rsi
4ff4(5): jmp 0xffffff5c(%rip)
4ff9(7): nop 0x0(%rax)
5000(3): test %rcx,%rcx
5003(2): jz 0x25(%rip)
5005(3): mov %rcx,%rax
5008(3): mul %rax,%r9,%rdx
500b(3): seto %dl
500e(3): test %rax,%rax
5011(3): movzx %dl,%edx
5014(2): js 0x7(%rip)
5016(3): test %rdx,%rdx
5019(2): jz 0xffffffd1(%rip)
501b(4): sub $0x8,%rsp
501f(5): call 0x121(%rip)
5024(4): nop 0x0(%rax)
5028(2): xor %edx,%edx
502a(5): mov $0x80,%eax
502f(3): xor %r8d,%r8d
5032(3): div %r9,%rax
5035(3): test %rax,%rax
5038(4): setz %r8b
503c(4): lea 0x0(%r8,%rax,1),%rcx
5040(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5050(3): test %rdi,%rdi
5053(3): mov (%rsi),%rax
5056(2): jz 0x2a(%rip)
5058(a): mov $0x6148914691236517203,%rdx
5062(3): cmp %rdx,%rax
5065(2): jnbe 0x2c(%rip)
5067(3): mov %rax,%rdx
506a(3): shr $0x1,%rdx
506d(5): lea 0x1(%rdx,%rax,1),%rax
5072(3): mov %rax,(%rsi)
5075(3): mov %rax,%rsi
5078(5): jmp 0xfffffed8(%rip)
507d(3): nop (%rax)
5080(3): test %rax,%rax
5083(5): mov $0x80,%edx
5088(4): cmove %rdx,%rax
508c(3): test %rax,%rax
508f(2): jns 0xffffffe3(%rip)
5091(4): sub $0x8,%rsp
5095(5): call 0xab(%rip)

"xzalloc" :
50a0(1): push %rbx
50a1(3): mov %rdi,%rbx
50a4(5): call 0xfffffe4c(%rip)
50a9(3): mov %rbx,%rdx
50ac(2): xor %esi,%esi
50ae(3): mov %rax,%rdi
50b1(1): pop %rbx
50b2(5): jmp 0xffffc4fe(%rip)

"xcalloc" :
50c0(3): mov %rdi,%rax
50c3(4): sub $0x8,%rsp
50c7(3): mul %rax,%rsi,%rdx
50ca(3): seto %dl
50cd(3): test %rax,%rax
50d0(2): js 0x19(%rip)
50d2(3): movzx %dl,%edx
50d5(3): test %rdx,%rdx
50d8(2): jnz 0x11(%rip)
50da(5): call 0xffffc546(%rip)
50df(3): test %rax,%rax
50e2(2): jz 0x7(%rip)
50e4(4): add $0x8,%rsp
50e8(1): ret near (%rsp)
50e9(5): call 0x57(%rip)

"xmemdup" :
50f0(1): push %rbp
50f1(1): push %rbx
50f2(3): mov %rdi,%rbp
50f5(3): mov %rsi,%rdi
50f8(3): mov %rsi,%rbx
50fb(4): sub $0x8,%rsp
50ff(5): call 0xfffffdf1(%rip)
5104(4): add $0x8,%rsp
5108(3): mov %rbx,%rdx
510b(3): mov %rbp,%rsi
510e(1): pop %rbx
510f(1): pop %rbp
5110(3): mov %rax,%rdi
5113(5): jmp 0xffffc51d(%rip)

"xstrdup" :
5120(1): push %rbx
5121(3): mov %rdi,%rbx
5124(5): call 0xffffc42c(%rip)
5129(3): mov %rbx,%rdi
512c(4): lea 0x1(%rax),%rsi
5130(1): pop %rbx
5131(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5140(7): lea 0x1288(%rip),%rsi
5147(4): sub $0x8,%rsp
514b(5): mov $0x5,%edx
5150(2): xor %edi,%edi
5152(5): call 0xffffc3de(%rip)
5157(6): mov 0x202ee3(%rip),%edi
515d(7): lea 0x9e0(%rip),%rdx
5164(3): mov %rax,%rcx
5167(2): xor %esi,%esi
5169(2): xor %eax,%eax
516b(5): call 0xffffc575(%rip)
5170(5): call 0xffffc320(%rip)

"rpl_mbrtowc" :
5180(2): push %r13
5182(2): push %r12
5184(3): mov %rsi,%r13
5187(1): push %rbp
5188(1): push %rbx
5189(3): mov %rdi,%rbx
518c(3): mov %rdx,%r12
518f(4): sub $0x18,%rsp
5193(9): mov $0x28,%rax
519c(5): mov %rax,0x8(%rsp)
51a1(2): xor %eax,%eax
51a3(5): lea 0x4(%rsp),%rax
51a8(3): test %rdi,%rdi
51ab(4): cmove %rax,%rbx
51af(3): mov %rbx,%rdi
51b2(5): call 0xffffc3ce(%rip)
51b7(4): cmp $0xfffffffd,%rax
51bb(3): mov %rax,%rbp
51be(2): jbe 0x22(%rip)
51c0(3): test %r12,%r12
51c3(2): jz 0x1d(%rip)
51c5(2): xor %edi,%edi
51c7(5): call 0xc9(%rip)
51cc(2): test %al,%al
51ce(2): jnz 0x12(%rip)
51d0(5): movzx 0x0(%r13),%eax
51d5(5): mov $0x1,%ebp
51da(2): mov %eax,(%rbx)
51dc(4): nop 0x0(%rax)
51e0(5): mov 0x8(%rsp),%rdx
51e5(9): xor $0x28,%rdx
51ee(3): mov %rbp,%rax
51f1(2): jnz 0xd(%rip)
51f3(4): add $0x18,%rsp
51f7(1): pop %rbx
51f8(1): pop %rbp
51f9(2): pop %r12
51fb(2): pop %r13
51fd(1): ret near (%rsp)
51fe(5): call 0xffffc362(%rip)

"close_stream" :
5210(2): push %r12
5212(1): push %rbp
5213(3): mov %rdi,%rbp
5216(1): push %rbx
5217(5): call 0xffffc2b9(%rip)
521c(3): mov 0x0(%rbp),%ebx
521f(3): mov %rbp,%rdi
5222(3): mov %rax,%r12
5225(5): call 0x10b(%rip)
522a(3): and $0x20,%ebx
522d(2): test %ebx,%ebx
522f(2): jnz 0x19(%rip)
5231(2): test %eax,%eax
5233(2): jz 0xc(%rip)
5235(3): test %r12,%r12
5238(5): mov $0xffffffff,%eax
523d(2): jz 0x3b(%rip)
523f(1): pop %rbx
5240(1): pop %rbp
5241(2): pop %r12
5243(1): ret near (%rsp)
5244(4): nop 0x0(%rax)
5248(2): test %eax,%eax
524a(2): jnz 0x1e(%rip)
524c(5): call 0xffffc254(%rip)
5251(6): mov $0x0,(%rax)
5257(5): mov $0xffffffff,%eax
525c(1): pop %rbx
525d(1): pop %rbp
525e(2): pop %r12
5260(1): ret near (%rsp)
5261(7): nop 0x0(%rax)
5268(1): pop %rbx
5269(5): mov $0xffffffff,%eax
526e(1): pop %rbp
526f(2): pop %r12
5271(1): ret near (%rsp)
5272(6): nop 0x0(%rax,%rax,1)
5278(5): call 0xffffc228(%rip)
527d(3): cmp $0x9,(%rax)
5280(1): pop %rbx
5281(1): pop %rbp
5282(2): pop %r12
5284(3): setnz %al
5287(3): movzx %al,%eax
528a(2): neg %eax
528c(1): ret near (%rsp)

"hard_locale" :
5290(4): sub $0x8,%rsp
5294(2): xor %esi,%esi
5296(5): call 0xffffc41a(%rip)
529b(3): mov %rax,%rdx
529e(5): mov $0x1,%eax
52a3(3): test %rdx,%rdx
52a6(2): jz 0x1f(%rip)
52a8(7): lea 0x1131(%rip),%rdi
52af(5): mov $0x2,%ecx
52b4(3): mov %rdx,%rsi
52b7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
52b9(3): setnbe %cl
52bc(3): sbb $0x0,%cl
52bf(2): xor %eax,%eax
52c1(2): test %cl,%cl
52c3(2): jnz 0xd(%rip)
52c5(4): add $0x8,%rsp
52c9(1): ret near (%rsp)
52ca(6): nop 0x0(%rax,%rax,1)
52d0(7): lea 0x110b(%rip),%rdi
52d7(5): mov $0x6,%ecx
52dc(3): mov %rdx,%rsi
52df(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
52e1(3): setnbe %al
52e4(2): sbb $0x0,%al
52e6(2): test %al,%al
52e8(3): setnz %al
52eb(4): add $0x8,%rsp
52ef(1): ret near (%rsp)

"locale_charset" :
52f0(4): sub $0x8,%rsp
52f4(5): mov $0xe,%edi
52f9(5): call 0xffffc377(%rip)
52fe(3): test %rax,%rax
5301(2): jz 0x1f(%rip)
5303(3): cmp $0x0,(%rax)
5306(7): lea 0x10db(%rip),%rdx
530d(4): cmove %rdx,%rax
5311(4): add $0x8,%rsp
5315(1): ret near (%rsp)
5316(a): nop 0x0(%rax,%rax,1)
5320(7): lea 0x10c1(%rip),%rax
5327(4): add $0x8,%rsp
532b(1): ret near (%rsp)

"rpl_fclose" :
5330(2): push %r12
5332(1): push %rbp
5333(1): push %rbx
5334(3): mov %rdi,%rbx
5337(5): call 0xffffc309(%rip)
533c(2): test %eax,%eax
533e(3): mov %rbx,%rdi
5341(2): js 0x56(%rip)
5343(5): call 0xffffc34d(%rip)
5348(2): test %eax,%eax
534a(2): jnz 0x2e(%rip)
534c(3): mov %rbx,%rdi
534f(5): call 0x61(%rip)
5354(2): test %eax,%eax
5356(2): jz 0x3e(%rip)
5358(5): call 0xffffc148(%rip)
535d(3): mov (%rax),%r12d
5360(3): mov %rbx,%rdi
5363(3): mov %rax,%rbp
5366(5): call 0xffffc19a(%rip)
536b(3): test %r12d,%r12d
536e(2): jnz 0x32(%rip)
5370(1): pop %rbx
5371(1): pop %rbp
5372(2): pop %r12
5374(1): ret near (%rsp)
5375(3): nop (%rax)
5378(3): mov %rbx,%rdi
537b(5): call 0xffffc2c5(%rip)
5380(2): xor %esi,%esi
5382(5): mov $0x1,%edx
5387(2): mov %eax,%edi
5389(5): call 0xffffc217(%rip)
538e(4): cmp $0xffffffff,%rax
5392(2): jnz 0xffffffba(%rip)
5394(3): mov %rbx,%rdi
5397(1): pop %rbx
5398(1): pop %rbp
5399(2): pop %r12
539b(5): jmp 0xffffc165(%rip)
53a0(4): mov %r12d,0x0(%rbp)
53a4(5): mov $0xffffffff,%eax
53a9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
53b0(3): test %rdi,%rdi
53b3(1): push %rbx
53b4(3): mov %rdi,%rbx
53b7(2): jz 0x13(%rip)
53b9(5): call 0xffffc2d7(%rip)
53be(2): test %eax,%eax
53c0(2): jz 0xa(%rip)
53c2(6): test $0x100,(%rbx)
53c8(2): jnz 0x10(%rip)
53ca(3): mov %rbx,%rdi
53cd(1): pop %rbx
53ce(5): jmp 0xffffc292(%rip)
53d3(5): nop 0x0(%rax,%rax,1)
53d8(3): mov %rbx,%rdi
53db(5): mov $0x1,%edx
53e0(2): xor %esi,%esi
53e2(5): call 0xe(%rip)
53e7(3): mov %rbx,%rdi
53ea(1): pop %rbx
53eb(5): jmp 0xffffc275(%rip)

"rpl_fseeko" :
53f0(4): mov 0x8(%rdi),%rax
53f4(4): cmp %rax,0x10(%rdi)
53f8(2): jz 0x8(%rip)
53fa(5): jmp 0xffffc306(%rip)
53ff(1): nop 
5400(4): mov 0x20(%rdi),%rax
5404(4): cmp %rax,0x28(%rdi)
5408(2): jnz 0xfffffff2(%rip)
540a(5): cmp $0x0,0x48(%rdi)
540f(2): jnz 0xffffffeb(%rip)
5411(2): push %r12
5413(1): push %rbp
5414(3): mov %edx,%r12d
5417(1): push %rbx
5418(3): mov %rsi,%rbp
541b(3): mov %rdi,%rbx
541e(5): call 0xffffc222(%rip)
5423(3): mov %r12d,%edx
5426(3): mov %rbp,%rsi
5429(2): mov %eax,%edi
542b(5): call 0xffffc175(%rip)
5430(4): cmp $0xffffffff,%rax
5434(2): jz 0xe(%rip)
5436(3): and $0xef,(%rbx)
5439(7): mov %rax,0x90(%rbx)
5440(2): xor %eax,%eax
5442(1): pop %rbx
5443(1): pop %rbp
5444(2): pop %r12
5446(1): ret near (%rsp)

"__libc_csu_init" :
5450(2): push %r15
5452(2): push %r14
5454(3): mov %rdx,%r15
5457(2): push %r13
5459(2): push %r12
545b(7): lea 0x20262e(%rip),%r12
5462(1): push %rbp
5463(7): lea 0x20262e(%rip),%rbp
546a(1): push %rbx
546b(3): mov %edi,%r13d
546e(3): mov %rsi,%r14
5471(3): sub %r12,%rbp
5474(4): sub $0x8,%rsp
5478(4): sar $0x3,%rbp
547c(5): call 0xffffbfd4(%rip)
5481(3): test %rbp,%rbp
5484(2): jz 0x22(%rip)
5486(2): xor %ebx,%ebx
5488(8): nop 0x0(%rax,%rax,1)
5490(3): mov %r15,%rdx
5493(3): mov %r14,%rsi
5496(3): mov %r13d,%edi
5499(4): call 0x0(%r12,%rbx,8)
549d(4): add $0x1,%rbx
54a1(3): cmp %rbx,%rbp
54a4(2): jnz 0xffffffec(%rip)
54a6(4): add $0x8,%rsp
54aa(1): pop %rbx
54ab(1): pop %rbp
54ac(2): pop %r12
54ae(2): pop %r13
54b0(2): pop %r14
54b2(2): pop %r15
54b4(1): ret near (%rsp)

"atexit" :
54d0(7): mov 0x202b31(%rip),%rdx
54d7(2): xor %esi,%esi
54d9(5): jmp 0xffffc237(%rip)

"_fini" :
54e0(4): sub $0x8,%rsp
54e4(4): add $0x8,%rsp
54e8(1): ret near (%rsp)

