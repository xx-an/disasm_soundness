
"__ctype_toupper_loc@plt" :
15e0(6): jmp 0x20985a(%rip)
15e6(5): push $0x0

"free@plt" :
15f0(6): jmp 0x209852(%rip)
15f6(5): push $0x1

"abort@plt" :
1600(6): jmp 0x20984a(%rip)
1606(5): push $0x2

"__errno_location@plt" :
1610(6): jmp 0x209842(%rip)
1616(5): push $0x3

"strncmp@plt" :
1620(6): jmp 0x20983a(%rip)
1626(5): push $0x4

"_exit@plt" :
1630(6): jmp 0x209832(%rip)
1636(5): push $0x5

"__fpending@plt" :
1640(6): jmp 0x20982a(%rip)
1646(5): push $0x6

"textdomain@plt" :
1650(6): jmp 0x209822(%rip)
1656(5): push $0x7

"fclose@plt" :
1660(6): jmp 0x20981a(%rip)
1666(5): push $0x8

"bindtextdomain@plt" :
1670(6): jmp 0x209812(%rip)
1676(5): push $0x9

"stpcpy@plt" :
1680(6): jmp 0x20980a(%rip)
1686(5): push $0xa

"dcgettext@plt" :
1690(6): jmp 0x209802(%rip)
1696(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
16a0(6): jmp 0x2097fa(%rip)
16a6(5): push $0xc

"strlen@plt" :
16b0(6): jmp 0x2097f2(%rip)
16b6(5): push $0xd

"__stack_chk_fail@plt" :
16c0(6): jmp 0x2097ea(%rip)
16c6(5): push $0xe

"getopt_long@plt" :
16d0(6): jmp 0x2097e2(%rip)
16d6(5): push $0xf

"mbrtowc@plt" :
16e0(6): jmp 0x2097da(%rip)
16e6(5): push $0x10

"strchr@plt" :
16f0(6): jmp 0x2097d2(%rip)
16f6(5): push $0x11

"strrchr@plt" :
1700(6): jmp 0x2097ca(%rip)
1706(5): push $0x12

"lseek@plt" :
1710(6): jmp 0x2097c2(%rip)
1716(5): push $0x13

"__assert_fail@plt" :
1720(6): jmp 0x2097ba(%rip)
1726(5): push $0x14

"__strtoul_internal@plt" :
1730(6): jmp 0x2097b2(%rip)
1736(5): push $0x15

"memset@plt" :
1740(6): jmp 0x2097aa(%rip)
1746(5): push $0x16

"close@plt" :
1750(6): jmp 0x2097a2(%rip)
1756(5): push $0x17

"posix_fadvise@plt" :
1760(6): jmp 0x20979a(%rip)
1766(5): push $0x18

"read@plt" :
1770(6): jmp 0x209792(%rip)
1776(5): push $0x19

"memcmp@plt" :
1780(6): jmp 0x20978a(%rip)
1786(5): push $0x1a

"fputs_unlocked@plt" :
1790(6): jmp 0x209782(%rip)
1796(5): push $0x1b

"calloc@plt" :
17a0(6): jmp 0x20977a(%rip)
17a6(5): push $0x1c

"memcpy@plt" :
17b0(6): jmp 0x209772(%rip)
17b6(5): push $0x1d

"fileno@plt" :
17c0(6): jmp 0x20976a(%rip)
17c6(5): push $0x1e

"malloc@plt" :
17d0(6): jmp 0x209762(%rip)
17d6(5): push $0x1f

"fflush@plt" :
17e0(6): jmp 0x20975a(%rip)
17e6(5): push $0x20

"nl_langinfo@plt" :
17f0(6): jmp 0x209752(%rip)
17f6(5): push $0x21

"__freading@plt" :
1800(6): jmp 0x20974a(%rip)
1806(5): push $0x22

"fwrite_unlocked@plt" :
1810(6): jmp 0x209742(%rip)
1816(5): push $0x23

"realloc@plt" :
1820(6): jmp 0x20973a(%rip)
1826(5): push $0x24

"setlocale@plt" :
1830(6): jmp 0x209732(%rip)
1836(5): push $0x25

"__printf_chk@plt" :
1840(6): jmp 0x20972a(%rip)
1846(5): push $0x26

"error@plt" :
1850(6): jmp 0x209722(%rip)
1856(5): push $0x27

"fseeko@plt" :
1860(6): jmp 0x20971a(%rip)
1866(5): push $0x28

"__cxa_atexit@plt" :
1870(6): jmp 0x209712(%rip)
1876(5): push $0x29

"exit@plt" :
1880(6): jmp 0x20970a(%rip)
1886(5): push $0x2a

"fwrite@plt" :
1890(6): jmp 0x209702(%rip)
1896(5): push $0x2b

"__fprintf_chk@plt" :
18a0(6): jmp 0x2096fa(%rip)
18a6(5): push $0x2c

"mbsinit@plt" :
18b0(6): jmp 0x2096f2(%rip)
18b6(5): push $0x2d

"iswprint@plt" :
18c0(6): jmp 0x2096ea(%rip)
18c6(5): push $0x2e

"__ctype_tolower_loc@plt" :
18d0(6): jmp 0x2096e2(%rip)
18d6(5): push $0x2f

"__ctype_b_loc@plt" :
18e0(6): jmp 0x2096da(%rip)
18e6(5): push $0x30

"__sprintf_chk@plt" :
18f0(6): jmp 0x2096d2(%rip)
18f6(5): push $0x31

".plt.got" :
1900(6): jmp 0x2096ea(%rip)
1906(2): nop 

"_init" :
15b0(4): sub $0x8,%rsp
15b4(7): mov 0x209a25(%rip),%rax
15bb(3): test %rax,%rax
15be(2): jz 0x4(%rip)
15c0(2): call %rax
15c2(4): add $0x8,%rsp
15c6(1): ret near (%rsp)

"append_repeated_char.part.8" :
1910(7): lea 0x5a39(%rip),%rcx
1917(7): lea 0x5703(%rip),%rsi
191e(7): lea 0x5749(%rip),%rdi
1925(4): sub $0x8,%rsp
1929(5): mov $0x2cf,%edx
192e(5): call 0xfffffdf2(%rip)

"main" :
1940(2): push %r15
1942(2): push %r14
1944(2): push %r13
1946(2): push %r12
1948(3): mov %rsi,%r13
194b(1): push %rbp
194c(1): push %rbx
194d(3): movsxd %edi,%rbx
1950(7): lea 0x209149(%rip),%rbp
1957(7): sub $0x1e8,%rsp
195e(3): mov (%rsi),%rdi
1961(9): mov $0x28,%rax
196a(8): mov %rax,0x1d8(%rsp)
1972(2): xor %eax,%eax
1974(5): call 0x28bc(%rip)
1979(7): lea 0x6f61(%rip),%rsi
1980(5): mov $0x6,%edi
1985(5): call 0xfffffeab(%rip)
198a(7): lea 0x57b5(%rip),%rsi
1991(7): lea 0x5785(%rip),%rdi
1998(5): call 0xfffffcd8(%rip)
199d(7): lea 0x5779(%rip),%rdi
19a4(5): call 0xfffffcac(%rip)
19a9(7): lea 0x2790(%rip),%rdi
19b0(5): call 0x5630(%rip)
19b5(3): nop (%rax)
19b8(7): lea 0x57ae(%rip),%rdx
19bf(3): xor %r8d,%r8d
19c2(3): mov %rbp,%rcx
19c5(3): mov %r13,%rsi
19c8(2): mov %ebx,%edi
19ca(5): call 0xfffffd06(%rip)
19cf(3): cmp $0xff,%eax
19d2(6): jz 0xf2(%rip)
19d8(3): cmp $0x43,%eax
19db(6): jz 0xbe(%rip)
19e1(2): jle 0x2f(%rip)
19e3(3): cmp $0x64,%eax
19e6(6): jz 0xd2(%rip)
19ec(6): jle 0xa8(%rip)
19f2(3): cmp $0x73,%eax
19f5(6): jz 0xb3(%rip)
19fb(3): cmp $0x74,%eax
19fe(2): jnz 0x29(%rip)
1a00(7): mov $0x1,0x20b9da(%rip)
1a07(2): jmp 0xffffffb1(%rip)
1a09(7): nop 0x0(%rax)
1a10(5): cmp $0xffffff7e,%eax
1a15(6): jz 0xa45(%rip)
1a1b(3): cmp $0x41,%eax
1a1e(2): jz 0x52(%rip)
1a20(5): cmp $0xffffff7d,%eax
1a25(2): jz 0x13(%rip)
1a27(5): mov $0x1,%edi
1a2c(5): call 0x2314(%rip)
1a31(7): nop 0x0(%rax)
1a38(7): mov 0x209649(%rip),%rdi
1a3f(7): mov 0x2095ca(%rip),%rcx
1a46(7): lea 0x5713(%rip),%r8
1a4d(7): lea 0x56c5(%rip),%rdx
1a54(7): lea 0x5645(%rip),%rsi
1a5b(3): xor %r9d,%r9d
1a5e(2): xor %eax,%eax
1a60(5): call 0x4a20(%rip)
1a65(2): xor %edi,%edi
1a67(5): call 0xfffffe19(%rip)
1a6c(4): nop 0x0(%rax)
1a70(7): lea 0x56e7(%rip),%rsi
1a77(5): mov $0x3,%edi
1a7c(5): call 0xfffffdb4(%rip)
1a81(7): lea 0x56d6(%rip),%rsi
1a88(2): xor %edi,%edi
1a8a(5): call 0xfffffda6(%rip)
1a8f(5): jmp 0xffffff29(%rip)
1a94(3): cmp $0x63,%eax
1a97(2): jnz 0xffffff90(%rip)
1a99(7): mov $0x1,0x20b942(%rip)
1aa0(5): jmp 0xffffff18(%rip)
1aa5(3): nop (%rax)
1aa8(7): mov $0x1,0x20b935(%rip)
1aaf(5): jmp 0xffffff09(%rip)
1ab4(4): nop 0x0(%rax)
1ab8(7): mov $0x1,0x20b924(%rip)
1abf(5): jmp 0xfffffef9(%rip)
1ac4(6): mov 0x2095ce(%rip),%ecx
1aca(3): mov %ebx,%r12d
1acd(7): movzx 0x20b90f(%rip),%eax
1ad4(7): movzx 0x20b909(%rip),%edx
1adb(3): sub %ecx,%r12d
1ade(4): cmp $0x2,%r12d
1ae2(6): jz 0x284(%rip)
1ae8(2): cmp %al,%dl
1aea(7): mov $0x0,0x20b8ef(%rip)
1af1(6): jz 0x619(%rip)
1af7(2): cmp %al,%dl
1af9(5): mov $0x1,%esi
1afe(2): sbb %eax,%eax
1b00(3): add $0x2,%eax
1b03(3): cmp %esi,%r12d
1b06(6): jl 0xa52(%rip)
1b0c(3): cmp %r12d,%eax
1b0f(6): jl 0xaec(%rip)
1b15(5): mov $0x20,%edi
1b1a(5): lea 0x50(%rsp),%rbp
1b1f(5): call 0x4ac1(%rip)
1b24(5): mov %rax,0x58(%rsp)
1b29(5): mov %rax,0x50(%rsp)
1b2e(3): mov %rbp,%rsi
1b31(8): mov $0x0,0x8(%rax)
1b39(7): movsxd 0x209558(%rip),%rax
1b40(5): mov 0x0(%r13,%rax,8),%rdi
1b45(5): call 0x168b(%rip)
1b4a(2): test %al,%al
1b4c(6): jz 0x2b5(%rip)
1b52(2): xor %ebx,%ebx
1b54(4): cmp $0x2,%r12d
1b58(6): jz 0x263(%rip)
1b5e(3): mov %rbp,%rdi
1b61(5): call 0x108f(%rip)
1b66(7): cmp $0x0,0x20b875(%rip)
1b6d(6): jnz 0x5e5(%rip)
1b73(5): mov 0x70(%rsp),%r14
1b78(3): test %r14,%r14
1b7b(6): jnz 0x92e(%rip)
1b81(3): test %rbx,%rbx
1b84(6): jz 0x34d(%rip)
1b8a(3): mov %rbx,%rdi
1b8d(5): mov 0x68(%rsp),%r13
1b92(5): call 0x105e(%rip)
1b97(4): mov 0x18(%rbx),%rax
1b9b(3): cmp %rax,%r13
1b9e(6): jb 0x4d3(%rip)
1ba4(5): cmp $0x1,0x20(%rbx)
1ba9(6): jnz 0x4c8(%rip)
1baf(3): mov %r13,%rcx
1bb2(4): mov 0x28(%rbx),%rdx
1bb6(3): sub %rax,%rcx
1bb9(7): cmp $0x0,0x20b820(%rip)
1bc0(4): mov %rcx,0x18(%rdx)
1bc4(4): mov %r13,0x18(%rbx)
1bc8(6): jz 0x4cd(%rip)
1bce(4): cmp $0x0,0x30(%rbx)
1bd2(6): jnz 0x91f(%rip)
1bd8(4): cmp $0x0,0x32(%rbx)
1bdc(6): jnz 0x8f1(%rip)
1be2(5): movzx 0x31(%rbx),%r13d
1be7(3): test %r13b,%r13b
1bea(6): jz 0x601(%rip)
1bf0(5): call 0xfffffcf0(%rip)
1bf5(3): mov (%rax),%rdx
1bf8(2): xor %ecx,%ecx
1bfa(7): lea 0x200(%rdx),%rdi
1c01(7): nop 0x0(%rax)
1c08(3): movzx (%rdx),%eax
1c0b(2): mov %eax,%esi
1c0d(5): and $0x100,%si
1c12(4): cmp $0x1,%si
1c16(4): sbb $0xffffffff,%r14
1c1a(4): and $0x200,%ax
1c1e(4): cmp $0x1,%ax
1c22(4): sbb $0xffffffff,%rcx
1c26(4): add $0x2,%rdx
1c2a(3): cmp %rdi,%rdx
1c2d(2): jnz 0xffffffdb(%rip)
1c2f(5): mov 0x68(%rsp),%rax
1c34(5): mov %rbp,0x10(%rsp)
1c39(4): lea 0xffffffff(%rcx),%r15
1c3d(3): mov %rbx,%rbp
1c40(5): mov %r12d,0x3c(%rsp)
1c45(5): mov %rax,0x18(%rsp)
1c4a(4): mov 0x18(%rbx),%rax
1c4e(5): mov %rax,0x20(%rsp)
1c53(5): mov 0x58(%rsp),%rax
1c58(5): mov %rax,0x28(%rsp)
1c5d(4): mov 0x8(%rbx),%rax
1c61(5): mov %rax,0x30(%rsp)
1c66(7): mov $0xfffffffe,%rax
1c6d(4): mov %rax,0x10(%rbx)
1c71(5): mov %rax,0x60(%rsp)
1c76(5): lea 0x48(%rsp),%rax
1c7b(4): mov %rax,(%rsp)
1c7f(5): lea 0x4c(%rsp),%rax
1c84(5): mov %rax,0x8(%rsp)
1c89(4): lea 0xffffffff(%r14),%rax
1c8d(3): mov %r13d,%r14d
1c90(3): mov %rax,%rbx
1c93(5): jmp 0x9d(%rip)
1c98(3): cmp $0x2,%ecx
1c9b(2): jz 0x6f(%rip)
1c9d(3): test %r14b,%r14b
1ca0(6): jz 0x894(%rip)
1ca6(5): cmp $0x2,0x48(%rsp)
1cab(6): jz 0x889(%rip)
1cb1(5): mov 0x58(%rsp),%rsi
1cb6(5): cmp $0x1,0x48(%rsp)
1cbb(5): mov 0x68(%rsp),%rdx
1cc0(4): mov 0x8(%rsi),%rsi
1cc4(9): mov $0xffffffff,0x60(%rsp)
1ccd(5): mov %rsi,0x58(%rsp)
1cd2(4): mov 0x8(%rbp),%rsi
1cd6(4): mov 0x8(%rsi),%rsi
1cda(8): mov $0xffffffff,0x10(%rbp)
1ce2(4): mov %rsi,0x8(%rbp)
1ce6(3): mov %r15,%rsi
1ce9(4): cmove %rbx,%rsi
1ced(3): sub %rsi,%rdx
1cf0(3): sub $0x1,%ecx
1cf3(4): mov 0x18(%rbp),%rcx
1cf7(3): mov %rbx,%rsi
1cfa(5): mov %rdx,0x68(%rsp)
1cff(4): cmovne %r15,%rsi
1d03(3): sub %rsi,%rcx
1d06(4): mov %rcx,0x18(%rbp)
1d0a(6): cmp $0xffffffff,0x60(%rsp)
1d10(4): setz %r14b
1d14(5): cmp $0xffffffff,0x10(%rbp)
1d19(4): setz %r13b
1d1d(4): add $0x1,%r12d
1d21(6): jz 0x48b(%rip)
1d27(3): add $0x1,%eax
1d2a(6): jz 0x482(%rip)
1d30(4): mov (%rsp),%rsi
1d34(5): mov 0x10(%rsp),%rdi
1d39(5): call 0x1077(%rip)
1d3e(5): mov 0x8(%rsp),%rsi
1d43(3): mov %rbp,%rdi
1d46(3): mov %eax,%r12d
1d49(5): call 0x1067(%rip)
1d4e(3): test %r13b,%r13b
1d51(4): mov 0x4c(%rsp),%ecx
1d55(6): jnz 0xffffff43(%rip)
1d5b(3): cmp $0x2,%ecx
1d5e(6): jnz 0xffffff53(%rip)
1d64(2): jmp 0xffffffa6(%rip)
1d66(2): test %al,%al
1d68(6): jnz 0x2f5(%rip)
1d6e(2): test %dl,%dl
1d70(7): mov $0x1,0x20b669(%rip)
1d77(5): mov $0x2,%eax
1d7c(6): jnz 0xfffffd90(%rip)
1d82(5): mov $0x20,%edi
1d87(5): lea 0x50(%rsp),%rbp
1d8c(5): call 0x4854(%rip)
1d91(5): mov %rax,0x58(%rsp)
1d96(5): mov %rax,0x50(%rsp)
1d9b(3): mov %rbp,%rsi
1d9e(8): mov $0x0,0x8(%rax)
1da6(7): movsxd 0x2092eb(%rip),%rax
1dad(5): mov 0x0(%r13,%rax,8),%rdi
1db2(5): call 0x141e(%rip)
1db7(2): test %al,%al
1db9(2): jz 0x48(%rip)
1dbb(5): mov $0x20,%edi
1dc0(8): lea 0x90(%rsp),%rbx
1dc8(5): call 0x4818(%rip)
1dcd(8): mov %rax,0x98(%rsp)
1dd5(8): mov %rax,0x90(%rsp)
1ddd(3): mov %rbx,%rsi
1de0(8): mov $0x0,0x8(%rax)
1de8(7): movsxd 0x2092a9(%rip),%rax
1def(5): mov 0x8(%r13,%rax,8),%rdi
1df4(5): call 0x13dc(%rip)
1df9(2): test %al,%al
1dfb(6): jnz 0xfffffd63(%rip)
1e01(5): mov $0x1,%eax
1e06(8): mov 0x1d8(%rsp),%rcx
1e0e(9): xor $0x28,%rcx
1e17(6): jnz 0x64a(%rip)
1e1d(7): add $0x1e8,%rsp
1e24(1): pop %rbx
1e25(1): pop %rbp
1e26(2): pop %r12
1e28(2): pop %r13
1e2a(2): pop %r14
1e2c(2): pop %r15
1e2e(1): ret near (%rsp)
1e2f(5): movzx 0x10(%rcx),%r14d
1e34(3): sub %rdx,%rax
1e37(5): mov $0x20,%edi
1e3c(3): mov %rax,%r13
1e3f(5): call 0x47a1(%rip)
1e44(4): mov 0x8(%rbx),%rdx
1e48(8): mov $0x0,0x8(%rax)
1e50(6): mov $0x4,(%rax)
1e56(4): mov %r14b,0x10(%rax)
1e5a(4): mov %r13,0x18(%rax)
1e5e(3): test %rdx,%rdx
1e61(6): jz 0x82f(%rip)
1e67(4): mov %rax,0x8(%rdx)
1e6b(4): mov %rax,0x8(%rbx)
1e6f(5): mov 0x68(%rsp),%rax
1e74(4): mov %rax,0x18(%rbx)
1e78(7): cmp $0x0,0x20b563(%rip)
1e7f(2): jz 0x52(%rip)
1e81(8): cmp $0x0,0x81(%rsp)
1e89(2): jz 0x48(%rip)
1e8b(5): mov 0x68(%rsp),%rax
1e90(4): cmp %rax,0x18(%rbx)
1e94(6): jnz 0x598(%rip)
1e9a(2): xor %esi,%esi
1e9c(8): mov $0xfffffffe,0x10(%rbx)
1ea4(3): mov %rbx,%rdi
1ea7(5): call 0xf09(%rip)
1eac(3): cmp $0xff,%eax
1eaf(3): mov %eax,%r13d
1eb2(2): jnz 0x10(%rip)
1eb4(5): jmp 0x578(%rip)
1eb9(3): cmp %eax,%r13d
1ebc(6): jnz 0x570(%rip)
1ec2(2): xor %esi,%esi
1ec4(3): mov %rbx,%rdi
1ec7(5): call 0xee9(%rip)
1ecc(3): cmp $0xff,%eax
1ecf(2): jnz 0xffffffea(%rip)
1ed1(7): mov 0x2091b8(%rip),%rdi
1ed8(5): mov $0x2,%esi
1edd(5): call 0x2323(%rip)
1ee2(7): cmp $0x0,0x20b4fb(%rip)
1ee9(6): jz 0x95(%rip)
1eef(4): cmp $0x1,%r12d
1ef3(6): jz 0x494(%rip)
1ef9(7): cmp $0x0,0x20b4e3(%rip)
1f00(6): jz 0x91(%rip)
1f06(4): cmp $0x2,%r12d
1f0a(6): jnz 0x87(%rip)
1f10(7): movzx 0x20b4cb(%rip),%esi
1f17(7): lea 0x2092c2(%rip),%rdx
1f1e(3): mov %rbp,%rdi
1f21(5): call 0x1bbf(%rip)
1f26(7): lea 0x2093b3(%rip),%rdx
1f2d(3): mov %rbx,%rdi
1f30(2): xor %esi,%esi
1f32(5): call 0x1bae(%rip)
1f37(7): lea 0x1132(%rip),%rdi
1f3e(5): call 0x1c02(%rip)
1f43(2): xor %edi,%edi
1f45(5): call 0xfffff80b(%rip)
1f4a(2): test %eax,%eax
1f4c(6): jz 0xfffffeba(%rip)
1f52(7): lea 0x528a(%rip),%rsi
1f59(5): mov $0x5,%edx
1f5e(2): xor %edi,%edi
1f60(5): call 0xfffff730(%rip)
1f65(3): mov %rax,%rbx
1f68(5): call 0xfffff6a8(%rip)
1f6d(2): mov (%rax),%esi
1f6f(3): mov %rbx,%rdx
1f72(5): mov $0x1,%edi
1f77(2): xor %eax,%eax
1f79(5): call 0xfffff8d7(%rip)
1f7e(7): cmp $0x0,0x20b45e(%rip)
1f85(2): jz 0xc(%rip)
1f87(4): sub $0x1,%r12d
1f8b(6): jz 0x423(%rip)
1f91(7): cmp $0x0,0x20b448(%rip)
1f98(2): jz 0xffffffab(%rip)
1f9a(7): cmp $0x0,0x20b441(%rip)
1fa1(6): jnz 0x326(%rip)
1fa7(7): lea 0x209132(%rip),%r12
1fae(2): xor %eax,%eax
1fb0(4): mov %al,0x0(%r12,%rax,1)
1fb4(4): add $0x1,%rax
1fb8(6): cmp $0x100,%rax
1fbe(2): jnz 0xfffffff2(%rip)
1fc0(7): mov $0xfffffffe,%rax
1fc7(4): or $0xffffffff,%r13
1fcb(5): mov %rax,0x60(%rsp)
1fd0(4): mov %rax,0x10(%rbx)
1fd4(5): lea 0x48(%rsp),%rax
1fd9(4): mov %rax,(%rsp)
1fdd(5): lea 0x4c(%rsp),%rax
1fe2(5): mov %rax,0x8(%rsp)
1fe7(4): mov (%rsp),%rsi
1feb(3): mov %rbp,%rdi
1fee(5): call 0xdc2(%rip)
1ff3(5): mov 0x8(%rsp),%rsi
1ff8(3): mov %rbx,%rdi
1ffb(3): movsxd %eax,%r14
1ffe(5): call 0xdb2(%rip)
2003(4): mov 0x48(%rsp),%edx
2007(2): test %edx,%edx
2009(6): jnz 0xb0(%rip)
200f(5): cmp $0x1,0x4c(%rsp)
2014(6): jz 0x105(%rip)
201a(4): cmp $0xff,%r14d
201e(6): jz 0x221(%rip)
2024(3): cmp $0xff,%eax
2027(6): jz 0x218(%rip)
202d(5): cmp $0x2,0x4c(%rsp)
2032(4): mov %al,0x0(%r12,%r14,1)
2036(2): jz 0xffffffb1(%rip)
2038(5): mov 0x58(%rsp),%rax
203d(4): mov 0x8(%rax),%rax
2041(5): mov %r13,0x60(%rsp)
2046(5): mov %rax,0x58(%rsp)
204b(4): mov 0x8(%rbx),%rax
204f(4): mov 0x8(%rax),%rax
2053(4): mov %r13,0x10(%rbx)
2057(4): mov %rax,0x8(%rbx)
205b(2): jmp 0xffffff8c(%rip)
205d(2): test %dl,%dl
205f(7): mov $0x0,0x20b37a(%rip)
2066(6): jz 0xfffffa91(%rip)
206c(5): jmp 0xfffffd16(%rip)
2071(4): mov 0x20(%rbx),%rax
2075(4): cmp $0x1,%rax
2079(6): jnbe 0x40c(%rip)
207f(7): cmp $0x0,0x20b35a(%rip)
2086(6): jnz 0xfffffb48(%rip)
208c(3): test %rax,%rax
208f(6): jz 0xfffffe42(%rip)
2095(7): lea 0x6274(%rip),%rsi
209c(5): mov $0x5,%edx
20a1(2): xor %edi,%edi
20a3(5): call 0xfffff5ed(%rip)
20a8(2): xor %esi,%esi
20aa(3): mov %rax,%rdx
20ad(5): mov $0x1,%edi
20b2(2): xor %eax,%eax
20b4(5): call 0xfffff79c(%rip)
20b9(3): sub $0x1,%edx
20bc(6): jnz 0xffffff5e(%rip)
20c2(5): cmp $0x0,0x4c(%rsp)
20c7(6): jnz 0xffffff53(%rip)
20cd(5): call 0xfffff813(%rip)
20d2(3): mov (%rax),%r15
20d5(3): xor %r14d,%r14d
20d8(8): nop 0x0(%rax,%rax,1)
20e0(6): test $0x1,0x1(%r15,%r14,2)
20e6(2): jz 0x12(%rip)
20e8(5): call 0xfffff7e8(%rip)
20ed(3): mov (%rax),%rax
20f0(4): mov 0x0(%rax,%r14,4),%eax
20f4(4): mov %al,0x0(%r12,%r14,1)
20f8(4): add $0x1,%r14
20fc(7): cmp $0x100,%r14
2103(2): jnz 0xffffffdd(%rip)
2105(5): jmp 0xffffff33(%rip)
210a(5): mov $0x2,%esi
210f(5): mov $0x2,%eax
2114(5): jmp 0xfffff9ef(%rip)
2119(5): call 0xfffff7c7(%rip)
211e(3): mov (%rax),%r15
2121(3): xor %r14d,%r14d
2124(4): nop 0x0(%rax)
2128(6): test $0x2,0x1(%r15,%r14,2)
212e(2): jz 0x12(%rip)
2130(5): call 0xfffff4b0(%rip)
2135(3): mov (%rax),%rax
2138(4): mov 0x0(%rax,%r14,4),%eax
213c(4): mov %al,0x0(%r12,%r14,1)
2140(4): add $0x1,%r14
2144(7): cmp $0x100,%r14
214b(2): jnz 0xffffffdd(%rip)
214d(5): jmp 0xfffffeeb(%rip)
2152(8): lea 0xd0(%rsp),%rdi
215a(5): mov $0x20,%ecx
215f(2): xor %eax,%eax
2161(9): mov $0xfffffffe,0x60(%rsp)
216a(6): mov $0x100,%r13d
2170(3): REP stosd %rax,rdi(%es,10)
2173(2): jmp 0x1d(%rip)
2175(2): cwde 
2177(8): movzx 0xd0(%rsp,%rax,1),%edx
217f(8): mov $0x1,0xd0(%rsp,%rax,1)
2187(3): xor $0x1,%edx
218a(3): movzx %dl,%edx
218d(3): sub %edx,%r13d
2190(2): xor %esi,%esi
2192(3): mov %rbp,%rdi
2195(5): call 0xc1b(%rip)
219a(3): cmp $0xff,%eax
219d(2): jnz 0xffffffd8(%rip)
219f(3): movsxd %r13d,%r13
21a2(5): mov %r13,0x68(%rsp)
21a7(5): jmp 0xfffff9cc(%rip)
21ac(5): mov 0x18(%rsp),%rax
21b1(5): cmp 0x68(%rsp),%rax
21b6(3): mov %rbp,%rbx
21b9(5): mov 0x3c(%rsp),%r12d
21be(5): mov 0x10(%rsp),%rbp
21c3(6): jb 0x2a3(%rip)
21c9(5): mov 0x20(%rsp),%rax
21ce(4): cmp 0x18(%rbx),%rax
21d2(6): jb 0x294(%rip)
21d8(5): mov 0x28(%rsp),%rax
21dd(5): mov %rax,0x58(%rsp)
21e2(5): mov 0x30(%rsp),%rax
21e7(4): mov %rax,0x8(%rbx)
21eb(5): mov 0x68(%rsp),%rax
21f0(4): mov 0x18(%rbx),%rdx
21f4(3): cmp %rdx,%rax
21f7(6): jbe 0xfffffc81(%rip)
21fd(7): cmp $0x0,0x20b1dd(%rip)
2204(6): jnz 0xfffffc74(%rip)
220a(3): test %rdx,%rdx
220d(6): jz 0x45f(%rip)
2213(4): mov 0x8(%rbx),%rcx
2217(2): mov (%rcx),%esi
2219(3): cmp $0x1,%esi
221c(6): jz 0x234(%rip)
2222(6): jb 0xfffffc0d(%rip)
2228(3): cmp $0x2,%esi
222b(6): jz 0x41d(%rip)
2231(3): cmp $0x4,%esi
2234(6): jz 0xfffffbfb(%rip)
223a(5): call 0xfffff3c6(%rip)
223f(4): add $0x1,%r14d
2243(2): jz 0xf(%rip)
2245(7): cmp $0x0,0x20b195(%rip)
224c(6): jz 0x2c9(%rip)
2252(7): cmp $0x0,0x20b18b(%rip)
2259(7): lea 0x209180(%rip),%rbp
2260(6): jnz 0x105(%rip)
2266(5): mov $0x2000,%esi
226b(3): mov %rbp,%rdi
226e(5): call 0xeb2(%rip)
2273(3): test %rax,%rax
2276(3): mov %rax,%rbx
2279(6): jz 0xfffffcca(%rip)
227f(7): mov 0x208e02(%rip),%rcx
2286(3): mov %rax,%rdx
2289(5): mov $0x1,%esi
228e(3): mov %rbp,%rdi
2291(5): call 0xfffff57f(%rip)
2296(3): cmp %rax,%rbx
2299(2): jz 0xffffffcd(%rip)
229b(7): lea 0x4df2(%rip),%rsi
22a2(5): mov $0x5,%edx
22a7(2): xor %edi,%edi
22a9(5): call 0xfffff3e7(%rip)
22ae(3): mov %rax,%rbx
22b1(5): call 0xfffff35f(%rip)
22b6(2): mov (%rax),%esi
22b8(3): mov %rbx,%rdx
22bb(5): mov $0x1,%edi
22c0(2): xor %eax,%eax
22c2(5): call 0xfffff58e(%rip)
22c7(7): lea 0x208f12(%rip),%rdx
22ce(2): xor %esi,%esi
22d0(3): mov %rbp,%rdi
22d3(7): lea 0x208e06(%rip),%r12
22da(5): call 0x1806(%rip)
22df(8): mov $0xfffffffe,0x10(%rbx)
22e7(2): xor %eax,%eax
22e9(7): nop 0x0(%rax)
22f0(4): mov %al,0x0(%r12,%rax,1)
22f4(4): add $0x1,%rax
22f8(6): cmp $0x100,%rax
22fe(2): jnz 0xfffffff2(%rip)
2300(2): xor %ebp,%ebp
2302(7): lea 0x208ed7(%rip),%r13
2309(2): jmp 0x13(%rip)
230b(4): add $0x1,%rbp
230f(7): cmp $0x100,%rbp
2316(6): jz 0xffffff3c(%rip)
231c(6): cmp $0x0,0x0(%r13,%rbp,1)
2322(2): jnz 0xffffffe9(%rip)
2324(2): xor %esi,%esi
2326(3): mov %rbx,%rdi
2329(5): call 0xa87(%rip)
232e(3): cmp $0xff,%eax
2331(2): jz 0x8(%rip)
2333(4): mov %al,0x0(%r12,%rbp,1)
2337(2): jmp 0xffffffd4(%rip)
2339(7): cmp $0x0,0x20b0a1(%rip)
2340(6): jnz 0xffffff12(%rip)
2346(7): lea 0x5055(%rip),%rcx
234d(7): lea 0x4ccd(%rip),%rsi
2354(7): lea 0x4e54(%rip),%rdi
235b(5): mov $0x72d,%edx
2360(5): call 0xfffff3c0(%rip)
2365(7): lea 0x208f74(%rip),%rdx
236c(3): mov %rbx,%rdi
236f(2): xor %esi,%esi
2371(5): call 0x176f(%rip)
2376(7): lea 0xda3(%rip),%rdi
237d(5): call 0x17c3(%rip)
2382(5): jmp 0xfffffbc1(%rip)
2387(7): movzx 0x20b054(%rip),%esi
238e(7): lea 0x208f4b(%rip),%rdx
2395(3): mov %rbp,%rdi
2398(5): call 0x1748(%rip)
239d(7): lea 0xc9c(%rip),%rdi
23a4(5): call 0x179c(%rip)
23a9(5): jmp 0xfffffb9a(%rip)
23ae(7): movzx 0x20b02d(%rip),%esi
23b5(3): mov %rbp,%rdi
23b8(7): lea 0x208e21(%rip),%rdx
23bf(7): lea 0x20901a(%rip),%rbp
23c6(5): call 0x171a(%rip)
23cb(5): mov $0x2000,%esi
23d0(3): mov %rbp,%rdi
23d3(5): call 0xc9d(%rip)
23d8(3): test %rax,%rax
23db(3): mov %rax,%rbx
23de(6): jz 0xfffffb65(%rip)
23e4(7): mov 0x208c9d(%rip),%rcx
23eb(3): mov %rax,%rdx
23ee(5): mov $0x1,%esi
23f3(3): mov %rbp,%rdi
23f6(5): call 0xfffff41a(%rip)
23fb(3): cmp %rax,%rbx
23fe(2): jz 0xffffffcd(%rip)
2400(7): lea 0x4c8d(%rip),%rsi
2407(5): mov $0x5,%edx
240c(2): xor %edi,%edi
240e(5): call 0xfffff282(%rip)
2413(3): mov %rax,%rbx
2416(5): call 0xfffff1fa(%rip)
241b(2): mov (%rax),%esi
241d(3): mov %rbx,%rdx
2420(5): mov $0x1,%edi
2425(2): xor %eax,%eax
2427(5): call 0xfffff429(%rip)
242c(7): lea 0x5e6d(%rip),%rsi
2433(5): mov $0x5,%edx
2438(2): xor %edi,%edi
243a(5): call 0xfffff256(%rip)
243f(2): xor %esi,%esi
2441(3): mov %rax,%rdx
2444(5): mov $0x1,%edi
2449(2): xor %eax,%eax
244b(5): call 0xfffff405(%rip)
2450(5): movzx 0x11(%rcx),%r14d
2455(5): jmp 0xfffff9df(%rip)
245a(2): xor %edi,%edi
245c(5): call 0x18e4(%rip)
2461(5): call 0xfffff25f(%rip)
2466(7): lea 0x4e83(%rip),%rcx
246d(7): lea 0x4bad(%rip),%rsi
2474(7): lea 0x5d45(%rip),%rdi
247b(5): mov $0x4c5,%edx
2480(5): call 0xfffff2a0(%rip)
2485(7): lea 0x5c2c(%rip),%rsi
248c(5): mov $0x5,%edx
2491(2): xor %edi,%edi
2493(5): call 0xfffff1fd(%rip)
2498(2): xor %esi,%esi
249a(3): mov %rax,%rdx
249d(5): mov $0x1,%edi
24a2(2): xor %eax,%eax
24a4(5): call 0xfffff3ac(%rip)
24a9(7): lea 0x5bd0(%rip),%rsi
24b0(5): mov $0x5,%edx
24b5(2): xor %edi,%edi
24b7(5): call 0xfffff1d9(%rip)
24bc(2): xor %esi,%esi
24be(3): mov %rax,%rdx
24c1(5): mov $0x1,%edi
24c6(2): xor %eax,%eax
24c8(5): call 0xfffff388(%rip)
24cd(7): lea 0x5c5c(%rip),%rsi
24d4(5): mov $0x5,%edx
24d9(2): xor %edi,%edi
24db(5): call 0xfffff1b5(%rip)
24e0(2): xor %esi,%esi
24e2(3): mov %rax,%rdx
24e5(5): mov $0x1,%edi
24ea(2): xor %eax,%eax
24ec(5): call 0xfffff364(%rip)
24f1(7): lea 0x5bf8(%rip),%rsi
24f8(5): mov $0x5,%edx
24fd(2): xor %edi,%edi
24ff(5): call 0xfffff191(%rip)
2504(2): xor %esi,%esi
2506(3): mov %rax,%rdx
2509(5): mov $0x1,%edi
250e(2): xor %eax,%eax
2510(5): call 0xfffff340(%rip)
2515(7): lea 0x4e86(%rip),%rcx
251c(7): lea 0x4afe(%rip),%rsi
2523(7): lea 0x4c9f(%rip),%rdi
252a(5): mov $0x762,%edx
252f(5): call 0xfffff1f1(%rip)
2534(7): lea 0x5c55(%rip),%rsi
253b(5): mov $0x5,%edx
2540(2): xor %edi,%edi
2542(5): call 0xfffff14e(%rip)
2547(2): xor %esi,%esi
2549(3): mov %rax,%rdx
254c(5): mov $0x1,%edi
2551(2): xor %eax,%eax
2553(5): call 0xfffff2fd(%rip)
2558(3): test %r12d,%r12d
255b(2): jnz 0x28(%rip)
255d(7): lea 0x4c11(%rip),%rsi
2564(2): xor %edi,%edi
2566(5): mov $0x5,%edx
256b(5): call 0xfffff125(%rip)
2570(2): xor %esi,%esi
2572(3): mov %rax,%rdx
2575(2): xor %edi,%edi
2577(2): xor %eax,%eax
2579(5): call 0xfffff2d7(%rip)
257e(5): jmp 0xfffff4a9(%rip)
2583(5): mov 0xfffffff8(%r13,%rbx,8),%rdi
2588(5): call 0x39b8(%rip)
258d(7): lea 0x4bf1(%rip),%rsi
2594(2): xor %edi,%edi
2596(3): mov %rax,%rbx
2599(5): mov $0x5,%edx
259e(5): call 0xfffff0f2(%rip)
25a3(2): xor %esi,%esi
25a5(3): mov %rax,%rdx
25a8(2): xor %edi,%edi
25aa(2): xor %eax,%eax
25ac(3): mov %rbx,%rcx
25af(5): call 0xfffff2a1(%rip)
25b4(7): cmp $0x0,0x20ae29(%rip)
25bb(7): lea 0x5a46(%rip),%rsi
25c2(7): lea 0x59f7(%rip),%rax
25c9(5): mov $0x5,%edx
25ce(4): cmovne %rax,%rsi
25d2(2): xor %edi,%edi
25d4(5): call 0xfffff0bc(%rip)
25d9(7): mov 0x208ae0(%rip),%rdi
25e0(7): lea 0x62a9(%rip),%rdx
25e7(3): mov %rax,%rcx
25ea(5): mov $0x1,%esi
25ef(2): xor %eax,%eax
25f1(5): call 0xfffff2af(%rip)
25f6(5): jmp 0xfffff431(%rip)
25fb(2): add %ecx,%eax
25fd(2): cwde 
25ff(5): mov 0x0(%r13,%rax,8),%rdi
2604(5): call 0x393c(%rip)
2609(7): lea 0x4b8e(%rip),%rsi
2610(2): xor %edi,%edi
2612(3): mov %rax,%rbx
2615(5): mov $0x5,%edx
261a(5): call 0xfffff076(%rip)
261f(2): xor %esi,%esi
2621(3): mov %rax,%rdx
2624(2): xor %edi,%edi
2626(2): xor %eax,%eax
2628(3): mov %rbx,%rcx
262b(5): call 0xfffff225(%rip)
2630(4): cmp $0x2,%r12d
2634(5): mov $0x5,%edx
2639(7): lea 0x59f8(%rip),%rsi
2640(6): jnz 0xfffff3e7(%rip)
2646(2): jmp 0xffffff8c(%rip)
2648(7): lea 0x5be1(%rip),%rsi
264f(5): mov $0x5,%edx
2654(2): xor %edi,%edi
2656(5): call 0xfffff03a(%rip)
265b(2): xor %esi,%esi
265d(3): mov %rax,%rdx
2660(5): mov $0x1,%edi
2665(2): xor %eax,%eax
2667(5): call 0xfffff1e9(%rip)
266c(7): lea 0x5b85(%rip),%rsi
2673(5): mov $0x5,%edx
2678(2): xor %edi,%edi
267a(5): call 0xfffff016(%rip)
267f(2): xor %esi,%esi
2681(3): mov %rax,%rdx
2684(5): mov $0x1,%edi
2689(2): xor %eax,%eax
268b(5): call 0xfffff1c5(%rip)
2690(5): call 0xfffff280(%rip)

"_start" :
26a0(2): xor %ebp,%ebp
26a2(3): mov %rdx,%r9
26a5(1): pop %rsi
26a6(3): mov %rsp,%rdx
26a9(4): and $0xfffffff0,%rsp
26ad(1): push %rax
26ae(1): push %rsp
26af(7): lea 0x491a(%rip),%r8
26b6(7): lea 0x48a3(%rip),%rcx
26bd(7): lea 0xfffff27c(%rip),%rdi
26c4(6): call 0x20890e(%rip)
26ca(1): hlt 

"deregister_tm_clones" :
26d0(7): lea 0x2089a9(%rip),%rdi
26d7(1): push %rbp
26d8(7): lea 0x2089a1(%rip),%rax
26df(3): cmp %rdi,%rax
26e2(3): mov %rsp,%rbp
26e5(2): jz 0x1b(%rip)
26e7(7): mov 0x2088e2(%rip),%rax
26ee(3): test %rax,%rax
26f1(2): jz 0xf(%rip)
26f3(1): pop %rbp
26f4(2): jmp %rax
26f6(a): nop 0x0(%rax,%rax,1)
2700(1): pop %rbp
2701(1): ret near (%rsp)

"register_tm_clones" :
2710(7): lea 0x208969(%rip),%rdi
2717(7): lea 0x208962(%rip),%rsi
271e(1): push %rbp
271f(3): sub %rdi,%rsi
2722(3): mov %rsp,%rbp
2725(4): sar $0x3,%rsi
2729(3): mov %rsi,%rax
272c(4): shr $0x3f,%rax
2730(3): add %rax,%rsi
2733(3): sar $0x1,%rsi
2736(2): jz 0x1a(%rip)
2738(7): mov 0x2088a9(%rip),%rax
273f(3): test %rax,%rax
2742(2): jz 0xe(%rip)
2744(1): pop %rbp
2745(2): jmp %rax
2747(9): nop 0x0(%rax,%rax,1)
2750(1): pop %rbp
2751(1): ret near (%rsp)

"__do_global_dtors_aux" :
2760(7): cmp $0x0,0x208961(%rip)
2767(2): jnz 0x31(%rip)
2769(8): cmp $0x0,0x20887f(%rip)
2771(1): push %rbp
2772(3): mov %rsp,%rbp
2775(2): jz 0xe(%rip)
2777(7): mov 0x20888a(%rip),%rdi
277e(5): call 0xfffff182(%rip)
2783(5): call 0xffffff4d(%rip)
2788(7): mov $0x1,0x208939(%rip)
278f(1): pop %rbp
2790(1): ret near (%rsp)
2791(7): nop 0x0(%rax)
2798(2): REP ret near (%rsp)

"frame_dummy" :
27a0(1): push %rbp
27a1(3): mov %rsp,%rbp
27a4(1): pop %rbp
27a5(5): jmp 0xffffff6b(%rip)

"star_digits_closebracket" :
27b0(3): mov (%rdi),%r8
27b3(2): xor %eax,%eax
27b5(5): cmp $0x2a,0x0(%r8,%rsi,1)
27ba(2): jz 0x6(%rip)
27bc(2): REP ret near (%rsp)
27be(2): nop 
27c0(4): mov 0x8(%rdi),%r10
27c4(5): cmp $0x0,0x0(%r10,%rsi,1)
27c9(2): jnz 0xfffffff3(%rip)
27cb(4): mov 0x10(%rdi),%r9
27cf(4): lea 0x1(%rsi),%rdx
27d3(3): cmp %r9,%rdx
27d6(2): jnb 0xffffffe6(%rip)
27d8(6): movzx 0x1(%r8,%rsi,1),%eax
27de(2): mov %eax,%edi
27e0(3): sub $0x30,%eax
27e3(3): cmp $0x9,%eax
27e6(2): jnbe 0x3a(%rip)
27e8(6): movzx 0x1(%r10,%rsi,1),%eax
27ee(2): test %al,%al
27f0(2): jz 0x1e(%rip)
27f2(2): jmp 0x48(%rip)
27f4(4): nop 0x0(%rax)
27f8(5): movzx 0x0(%r8,%rdx,1),%ecx
27fd(2): mov %ecx,%edi
27ff(3): sub $0x30,%ecx
2802(3): cmp $0x9,%ecx
2805(2): jnbe 0x1b(%rip)
2807(5): cmp $0x0,0x0(%r10,%rdx,1)
280c(2): jnz 0x2c(%rip)
280e(4): add $0x1,%rdx
2812(3): cmp %r9,%rdx
2815(2): jb 0xffffffe3(%rip)
2817(2): REP ret near (%rsp)
2819(7): nop 0x0(%rax)
2820(2): xor %eax,%eax
2822(4): cmp $0x5d,%dil
2826(2): jnz 0xffffff96(%rip)
2828(5): movzx 0x0(%r10,%rdx,1),%eax
282d(3): xor $0x1,%eax
2830(1): ret near (%rsp)
2831(7): nop 0x0(%rax)
2838(2): REP ret near (%rsp)
283a(2): xor %eax,%eax
283c(1): ret near (%rsp)

"make_printable_char" :
2840(2): push %r12
2842(1): push %rbp
2843(3): mov %edi,%r12d
2846(1): push %rbx
2847(4): movzx %dil,%ebx
284b(5): mov $0x5,%edi
2850(5): call 0x3d90(%rip)
2855(3): mov %rax,%rbp
2858(5): call 0xfffff088(%rip)
285d(3): mov (%rax),%rax
2860(5): test $0x40,0x1(%rax,%rbx,2)
2865(2): jz 0x1b(%rip)
2867(4): mov %r12b,0x0(%rbp)
286b(4): mov $0x0,0x1(%rbp)
286f(3): mov %rbp,%rax
2872(1): pop %rbx
2873(1): pop %rbp
2874(2): pop %r12
2876(1): ret near (%rsp)
2877(9): nop 0x0(%rax,%rax,1)
2880(7): lea 0x477d(%rip),%rcx
2887(4): movzx %r12b,%r8d
288b(3): mov %rbp,%rdi
288e(5): mov $0x5,%edx
2893(5): mov $0x1,%esi
2898(2): xor %eax,%eax
289a(5): call 0xfffff056(%rip)
289f(3): mov %rbp,%rax
28a2(1): pop %rbx
28a3(1): pop %rbp
28a4(2): pop %r12
28a6(1): ret near (%rsp)

"make_printable_str" :
28b0(2): push %r15
28b2(2): push %r14
28b4(5): mov $0x4,%edx
28b9(2): push %r13
28bb(2): push %r12
28bd(3): mov %rdi,%r14
28c0(1): push %rbp
28c1(1): push %rbx
28c2(4): lea 0x1(%rsi),%rdi
28c6(3): mov %rsi,%rbx
28c9(4): sub $0x28,%rsp
28cd(9): mov $0x28,%rax
28d6(5): mov %rax,0x18(%rsp)
28db(2): xor %eax,%eax
28dd(3): mov %rdx,%rax
28e0(3): mul %rax,%rdi,%rdx
28e3(6): jo 0x161(%rip)
28e9(2): xor %ecx,%ecx
28eb(3): test %rax,%rax
28ee(6): js 0x151(%rip)
28f4(3): test %rcx,%rcx
28f7(6): jnz 0x148(%rip)
28fd(4): shl/sal $0x2,%rdi
2901(5): call 0x3cdf(%rip)
2906(3): test %rbx,%rbx
2909(3): mov %rax,%r13
290c(6): jz 0xc4(%rip)
2912(3): add %r14,%rbx
2915(3): mov %rax,%r15
2918(7): lea 0x46f3(%rip),%rbp
291f(7): lea 0x46f8(%rip),%r12
2926(2): jmp 0x4e(%rip)
2928(8): nop 0x0(%rax,%rax,1)
2930(4): cmp $0xc,%r8b
2934(3): mov %rbp,%rsi
2937(2): jz 0x29(%rip)
2939(3): mov %r12,%rsi
293c(2): jl 0x24(%rip)
293e(4): cmp $0xd,%r8b
2942(7): lea 0x46cf(%rip),%rsi
2949(2): jz 0x17(%rip)
294b(4): cmp $0x5c,%r8b
294f(7): lea 0x46b4(%rip),%rsi
2956(2): jnz 0x4d(%rip)
2958(8): nop 0x0(%rax,%rax,1)
2960(3): mov %r15,%rdi
2963(4): add $0x1,%r14
2967(5): call 0xffffed19(%rip)
296c(3): cmp %r14,%rbx
296f(3): mov %rax,%r15
2972(2): jz 0x5e(%rip)
2974(4): movzx (%r14),%r8d
2978(4): cmp $0xa,%r8b
297c(2): jz 0x7c(%rip)
297e(2): jnle 0xffffffb2(%rip)
2980(4): cmp $0x8,%r8b
2984(7): lea 0x4684(%rip),%rsi
298b(2): jz 0xffffffd5(%rip)
298d(7): lea 0x4687(%rip),%rsi
2994(2): jnle 0xffffffcc(%rip)
2996(4): cmp $0x7,%r8b
299a(7): lea 0x466b(%rip),%rsi
29a1(2): jz 0xffffffbf(%rip)
29a3(5): mov %r8b,0x8(%rsp)
29a8(5): call 0xffffef38(%rip)
29ad(5): movzx 0x8(%rsp),%edx
29b2(3): mov (%rax),%rcx
29b5(5): test $0x40,0x1(%rcx,%rdx,2)
29ba(3): mov %rdx,%r8
29bd(2): jz 0x4b(%rip)
29bf(4): mov %dl,0x13(%rsp)
29c3(5): mov $0x0,0x14(%rsp)
29c8(5): lea 0x13(%rsp),%rsi
29cd(2): jmp 0xffffff93(%rip)
29cf(1): nop 
29d0(5): mov 0x18(%rsp),%rcx
29d5(9): xor $0x28,%rcx
29de(3): mov %r13,%rax
29e1(2): jnz 0x59(%rip)
29e3(4): add $0x28,%rsp
29e7(1): pop %rbx
29e8(1): pop %rbp
29e9(2): pop %r12
29eb(2): pop %r13
29ed(2): pop %r14
29ef(2): pop %r15
29f1(1): ret near (%rsp)
29f2(6): nop 0x0(%rax,%rax,1)
29f8(7): lea 0x4616(%rip),%rsi
29ff(5): jmp 0xffffff61(%rip)
2a04(4): nop 0x0(%rax)
2a08(5): lea 0x13(%rsp),%r10
2a0d(7): lea 0x45f0(%rip),%rcx
2a14(5): mov $0x1,%esi
2a19(5): mov $0x5,%edx
2a1e(2): xor %eax,%eax
2a20(3): mov %r10,%rdi
2a23(5): mov %r10,0x8(%rsp)
2a28(5): call 0xffffeec8(%rip)
2a2d(5): mov 0x8(%rsp),%r10
2a32(3): mov %r10,%rsi
2a35(5): jmp 0xffffff2b(%rip)
2a3a(5): call 0xffffec86(%rip)
2a3f(5): call 0x3df1(%rip)
2a44(5): mov $0x1,%ecx
2a49(5): jmp 0xfffffea2(%rip)

"is_char_class_member" :
2a50(3): cmp $0xb,%edi
2a53(1): push %rbx
2a54(6): jnbe 0x18f(%rip)
2a5a(7): lea 0x481f(%rip),%rdx
2a61(2): mov %edi,%edi
2a63(2): mov %esi,%ebx
2a65(4): movsxd 0x0(%rdx,%rdi,4),%rax
2a69(3): add %rdx,%rax
2a6c(2): jmp %rax
2a6e(2): nop 
2a70(5): call 0xffffee70(%rip)
2a75(3): mov (%rax),%rax
2a78(3): movzx %bl,%esi
2a7b(4): movzx 0x0(%rax,%rsi,2),%eax
2a7f(4): and $0x100,%ax
2a83(3): movzx %ax,%eax
2a86(2): test %eax,%eax
2a88(3): setnz %al
2a8b(1): pop %rbx
2a8c(1): ret near (%rsp)
2a8d(3): nop (%rax)
2a90(5): call 0xffffee50(%rip)
2a95(3): mov (%rax),%rax
2a98(3): movzx %bl,%esi
2a9b(4): movzx 0x0(%rax,%rsi,2),%eax
2a9f(4): and $0x1000,%ax
2aa3(3): movzx %ax,%eax
2aa6(2): jmp 0xffffffe0(%rip)
2aa8(8): nop 0x0(%rax,%rax,1)
2ab0(5): call 0xffffee30(%rip)
2ab5(3): mov (%rax),%rax
2ab8(3): movzx %bl,%esi
2abb(4): movzx 0x0(%rax,%rsi,2),%eax
2abf(3): and $0x8,%eax
2ac2(3): movzx %ax,%eax
2ac5(2): jmp 0xffffffc1(%rip)
2ac7(9): nop 0x0(%rax,%rax,1)
2ad0(5): call 0xffffee10(%rip)
2ad5(3): mov (%rax),%rax
2ad8(3): movzx %bl,%esi
2adb(4): movzx 0x0(%rax,%rsi,2),%eax
2adf(4): and $0x400,%ax
2ae3(3): movzx %ax,%eax
2ae6(2): jmp 0xffffffa0(%rip)
2ae8(8): nop 0x0(%rax,%rax,1)
2af0(5): call 0xffffedf0(%rip)
2af5(3): mov (%rax),%rax
2af8(3): movzx %bl,%esi
2afb(4): movzx 0x0(%rax,%rsi,2),%eax
2aff(3): and $0x1,%eax
2b02(2): jmp 0xffffff84(%rip)
2b04(4): nop 0x0(%rax)
2b08(5): call 0xffffedd8(%rip)
2b0d(3): mov (%rax),%rax
2b10(3): movzx %bl,%esi
2b13(4): movzx 0x0(%rax,%rsi,2),%eax
2b17(3): and $0x2,%eax
2b1a(3): movzx %ax,%eax
2b1d(5): jmp 0xffffff69(%rip)
2b22(6): nop 0x0(%rax,%rax,1)
2b28(5): call 0xffffedb8(%rip)
2b2d(3): mov (%rax),%rax
2b30(3): movzx %bl,%esi
2b33(4): movzx 0x0(%rax,%rsi,2),%eax
2b37(4): and $0x800,%ax
2b3b(3): movzx %ax,%eax
2b3e(5): jmp 0xffffff48(%rip)
2b43(5): nop 0x0(%rax,%rax,1)
2b48(5): call 0xffffed98(%rip)
2b4d(3): mov (%rax),%rax
2b50(3): movzx %bl,%esi
2b53(4): movzx 0x0(%rax,%rsi,2),%eax
2b57(4): and $0x8000,%ax
2b5b(3): movzx %ax,%eax
2b5e(5): jmp 0xffffff28(%rip)
2b63(5): nop 0x0(%rax,%rax,1)
2b68(5): call 0xffffed78(%rip)
2b6d(3): mov (%rax),%rax
2b70(3): movzx %bl,%esi
2b73(4): movzx 0x0(%rax,%rsi,2),%eax
2b77(4): and $0x200,%ax
2b7b(3): movzx %ax,%eax
2b7e(5): jmp 0xffffff08(%rip)
2b83(5): nop 0x0(%rax,%rax,1)
2b88(5): call 0xffffed58(%rip)
2b8d(3): mov (%rax),%rax
2b90(3): movzx %bl,%esi
2b93(4): movzx 0x0(%rax,%rsi,2),%eax
2b97(4): and $0x4000,%ax
2b9b(3): movzx %ax,%eax
2b9e(5): jmp 0xfffffee8(%rip)
2ba3(5): nop 0x0(%rax,%rax,1)
2ba8(5): call 0xffffed38(%rip)
2bad(3): mov (%rax),%rax
2bb0(3): movzx %bl,%esi
2bb3(4): movzx 0x0(%rax,%rsi,2),%eax
2bb7(3): and $0x4,%eax
2bba(3): movzx %ax,%eax
2bbd(5): jmp 0xfffffec9(%rip)
2bc2(6): nop 0x0(%rax,%rax,1)
2bc8(5): call 0xffffed18(%rip)
2bcd(3): mov (%rax),%rax
2bd0(3): movzx %bl,%esi
2bd3(4): movzx 0x0(%rax,%rsi,2),%eax
2bd7(4): and $0x2000,%ax
2bdb(3): movzx %ax,%eax
2bde(5): jmp 0xfffffea8(%rip)
2be3(5): call 0xffffea1d(%rip)

"get_spec_stats" :
2bf0(2): push %r15
2bf2(2): push %r14
2bf4(3): xor %r14d,%r14d
2bf7(2): push %r13
2bf9(2): push %r12
2bfb(1): push %rbp
2bfc(1): push %rbx
2bfd(4): sub $0x18,%rsp
2c01(3): mov (%rdi),%rax
2c04(8): mov $0x0,0x20(%rdi)
2c0c(5): mov %rdi,0x8(%rsp)
2c11(4): mov $0x0,0x30(%rdi)
2c15(4): mov $0x0,0x32(%rdi)
2c19(4): mov $0x0,0x31(%rdi)
2c1d(4): mov 0x8(%rax),%rbp
2c21(3): test %rbp,%rbp
2c24(2): jz 0x78(%rip)
2c26(7): lea 0x4683(%rip),%r12
2c2d(3): nop (%rax)
2c30(4): cmp $0x4,0x0(%rbp)
2c34(6): jnbe 0x12c(%rip)
2c3a(3): mov 0x0(%rbp),%eax
2c3d(4): movsxd 0x0(%r12,%rax,4),%rax
2c41(3): add %r12,%rax
2c44(2): jmp %rax
2c46(a): nop 0x0(%rax,%rax,1)
2c50(4): movzx 0x10(%rbp),%ecx
2c54(2): xor %eax,%eax
2c56(2): xor %ebx,%ebx
2c58(8): nop 0x0(%rax,%rax,1)
2c60(2): xor %edx,%edx
2c62(2): cmp %al,%cl
2c64(3): setz %dl
2c67(3): add $0x1,%eax
2c6a(3): add %rdx,%rbx
2c6d(5): cmp $0x100,%eax
2c72(2): jnz 0xffffffee(%rip)
2c74(5): mov 0x8(%rsp),%rax
2c79(4): mov $0x1,0x30(%rax)
2c7d(3): add %r14,%rbx
2c80(3): mov %rbx,%r14
2c83(6): jb 0x101(%rip)
2c89(4): cmp $0xffffffff,%rbx
2c8d(6): jz 0xf7(%rip)
2c93(4): mov 0x8(%rbp),%rbp
2c97(3): test %rbp,%rbp
2c9a(2): jnz 0xffffff96(%rip)
2c9c(5): mov 0x8(%rsp),%rax
2ca1(4): mov %r14,0x18(%rax)
2ca5(4): add $0x18,%rsp
2ca9(1): pop %rbx
2caa(1): pop %rbp
2cab(2): pop %r12
2cad(2): pop %r13
2caf(2): pop %r14
2cb1(2): pop %r15
2cb3(1): ret near (%rsp)
2cb4(4): nop 0x0(%rax)
2cb8(5): mov 0x8(%rsp),%rax
2cbd(4): mov 0x10(%rbp),%r15d
2cc1(3): xor %r13d,%r13d
2cc4(2): xor %ebx,%ebx
2cc6(4): mov $0x1,0x31(%rax)
2cca(6): nop 0x0(%rax,%rax,1)
2cd0(3): mov %r13d,%esi
2cd3(3): mov %r15d,%edi
2cd6(5): call 0xfffffd7a(%rip)
2cdb(2): cmp $0x1,%al
2cdd(4): sbb $0xffffffff,%rbx
2ce1(4): add $0x1,%r13d
2ce5(7): cmp $0x100,%r13d
2cec(2): jnz 0xffffffe4(%rip)
2cee(4): cmp $0x6,%r15d
2cf2(2): jz 0xffffff8b(%rip)
2cf4(4): cmp $0xa,%r15d
2cf8(2): jz 0xffffff85(%rip)
2cfa(5): mov 0x8(%rsp),%rax
2cff(4): mov $0x1,0x32(%rax)
2d03(5): jmp 0xffffff7a(%rip)
2d08(8): nop 0x0(%rax,%rax,1)
2d10(4): movzx 0x11(%rbp),%eax
2d14(4): movzx 0x10(%rbp),%edx
2d18(2): cmp %dl,%al
2d1a(2): jb 0x4b(%rip)
2d1c(3): movzx %al,%ebx
2d1f(2): mov %ebx,%eax
2d21(2): sub %edx,%eax
2d23(3): lea 0x1(%rax),%ebx
2d26(3): movsxd %ebx,%rbx
2d29(5): jmp 0xffffff54(%rip)
2d2e(2): nop 
2d30(5): mov $0x1,%ebx
2d35(5): jmp 0xffffff48(%rip)
2d3a(6): nop 0x0(%rax,%rax,1)
2d40(4): mov 0x18(%rbp),%rbx
2d44(3): test %rbx,%rbx
2d47(6): jnz 0xffffff36(%rip)
2d4d(5): mov 0x8(%rsp),%rax
2d52(4): mov %rbp,0x28(%rax)
2d56(5): add $0x1,0x20(%rax)
2d5b(5): jmp 0xffffff38(%rip)
2d60(5): call 0xffffe8a0(%rip)
2d65(7): lea 0x459c(%rip),%rcx
2d6c(7): lea 0x42ae(%rip),%rsi
2d73(7): lea 0x462e(%rip),%rdi
2d7a(5): mov $0x4ee,%edx
2d7f(5): call 0xffffe9a1(%rip)
2d84(7): lea 0x42b1(%rip),%rsi
2d8b(5): mov $0x5,%edx
2d90(2): xor %edi,%edi
2d92(5): call 0xffffe8fe(%rip)
2d97(2): xor %esi,%esi
2d99(3): mov %rax,%rdx
2d9c(5): mov $0x1,%edi
2da1(2): xor %eax,%eax
2da3(5): call 0xffffeaad(%rip)
2da8(8): nop 0x0(%rax,%rax,1)
2db0(2): push %r14
2db2(2): push %r13
2db4(7): lea 0x4509(%rip),%rdx
2dbb(2): push %r12
2dbd(1): push %rbp
2dbe(3): mov %rdi,%r14
2dc1(1): push %rbx
2dc2(4): mov 0x10(%rdi),%rax
2dc6(7): mov $0xffffffff,%rcx
2dcd(3): test %rsi,%rsi
2dd0(2): jz 0x8(%rip)
2dd2(6): mov $0x2,(%rsi)
2dd8(4): cmp $0xfffffffe,%rax
2ddc(6): jz 0x144(%rip)
2de2(4): mov 0x8(%r14),%rbp
2de6(3): test %rbp,%rbp
2de9(6): jz 0x19f(%rip)
2def(4): cmp $0x4,0x0(%rbp)
2df3(6): jnbe 0x1eb(%rip)
2df9(3): mov 0x0(%rbp),%eax
2dfc(4): movsxd 0x0(%rdx,%rax,4),%rax
2e00(3): add %rdx,%rax
2e03(2): jmp %rax
2e05(3): nop (%rax)
2e08(4): mov 0x8(%rbp),%rax
2e0c(5): movzx 0x10(%rbp),%r13d
2e11(8): mov $0xffffffff,0x10(%r14)
2e19(4): mov %rax,0x8(%r14)
2e1d(1): pop %rbx
2e1e(3): mov %r13d,%eax
2e21(1): pop %rbp
2e22(2): pop %r12
2e24(2): pop %r13
2e26(2): pop %r14
2e28(1): ret near (%rsp)
2e29(7): nop 0x0(%rax)
2e30(4): mov 0x18(%rbp),%rax
2e34(3): test %rax,%rax
2e37(6): jnz 0x17b(%rip)
2e3d(4): mov 0x8(%rbp),%rax
2e41(4): mov %rcx,0x10(%r14)
2e45(4): mov %rax,0x8(%r14)
2e49(3): mov %rcx,%rax
2e4c(5): jmp 0xffffff81(%rip)
2e51(7): nop 0x0(%rax)
2e58(3): test %rsi,%rsi
2e5b(4): mov 0x10(%rbp),%r12d
2e5f(2): jz 0x18(%rip)
2e61(4): cmp $0x6,%r12d
2e65(6): jz 0x113(%rip)
2e6b(4): cmp $0xa,%r12d
2e6f(2): jnz 0x8(%rip)
2e71(6): mov $0x1,(%rsi)
2e77(4): mov 0x10(%r14),%rbx
2e7b(4): cmp $0xffffffff,%rbx
2e7f(6): jz 0xb9(%rip)
2e85(3): movzx %bl,%esi
2e88(3): mov %r12d,%edi
2e8b(5): call 0xfffffbc5(%rip)
2e90(2): test %al,%al
2e92(6): jz 0x151(%rip)
2e98(3): mov %ebx,%r13d
2e9b(3): add $0x1,%ebx
2e9e(6): cmp $0xff,%ebx
2ea4(2): jle 0x17(%rip)
2ea6(2): jmp 0x5c(%rip)
2ea8(8): nop 0x0(%rax,%rax,1)
2eb0(3): add $0x1,%ebx
2eb3(6): cmp $0x100,%ebx
2eb9(2): jz 0x49(%rip)
2ebb(3): movzx %bl,%esi
2ebe(3): mov %r12d,%edi
2ec1(5): call 0xfffffb8f(%rip)
2ec6(2): test %al,%al
2ec8(2): jz 0xffffffe8(%rip)
2eca(3): movsxd %ebx,%rbx
2ecd(3): mov %r13d,%eax
2ed0(4): mov %rbx,0x10(%r14)
2ed4(1): pop %rbx
2ed5(1): pop %rbp
2ed6(2): pop %r12
2ed8(2): pop %r13
2eda(2): pop %r14
2edc(1): ret near (%rsp)
2edd(3): nop (%rax)
2ee0(4): mov 0x10(%r14),%rax
2ee4(4): cmp $0xffffffff,%rax
2ee8(2): jz 0x80(%rip)
2eea(4): add $0x1,%rax
2eee(4): mov %rax,0x10(%r14)
2ef2(4): movzx 0x11(%rbp),%edx
2ef6(3): mov %eax,%r13d
2ef9(3): cmp %rax,%rdx
2efc(6): jnz 0xffffff21(%rip)
2f02(4): mov 0x8(%rbp),%rax
2f06(8): mov $0xffffffff,0x10(%r14)
2f0e(1): pop %rbx
2f0f(1): pop %rbp
2f10(4): mov %rax,0x8(%r14)
2f14(3): mov %r13d,%eax
2f17(2): pop %r12
2f19(2): pop %r13
2f1b(2): pop %r14
2f1d(1): ret near (%rsp)
2f1e(2): nop 
2f20(3): mov (%r14),%rax
2f23(4): mov 0x8(%rax),%rbp
2f27(4): mov %rcx,0x10(%r14)
2f2b(4): mov %rbp,0x8(%r14)
2f2f(5): jmp 0xfffffeb7(%rip)
2f34(4): nop 0x0(%rax)
2f38(2): xor %ebx,%ebx
2f3a(2): jmp 0x11(%rip)
2f3c(4): nop 0x0(%rax)
2f40(3): add $0x1,%ebx
2f43(6): cmp $0x100,%ebx
2f49(2): jz 0x4a(%rip)
2f4b(2): mov %ebx,%esi
2f4d(3): mov %r12d,%edi
2f50(5): call 0xfffffb00(%rip)
2f55(2): test %al,%al
2f57(2): jz 0xffffffe9(%rip)
2f59(3): movsxd %ebx,%rbx
2f5c(4): mov %rbx,0x10(%r14)
2f60(5): jmp 0xffffff25(%rip)
2f65(3): nop (%rax)
2f68(4): movzx 0x10(%rbp),%eax
2f6c(4): mov %rax,0x10(%r14)
2f70(5): jmp 0xffffff82(%rip)
2f75(3): nop (%rax)
2f78(6): mov $0x0,(%rsi)
2f7e(5): jmp 0xfffffef9(%rip)
2f83(5): nop 0x0(%rax,%rax,1)
2f88(6): mov $0xffffffff,%r13d
2f8e(5): jmp 0xfffffe8f(%rip)
2f93(7): lea 0x433e(%rip),%rcx
2f9a(7): lea 0x4080(%rip),%rsi
2fa1(7): lea 0x40af(%rip),%rdi
2fa8(5): mov $0x434,%edx
2fad(5): call 0xffffe773(%rip)
2fb2(4): mov 0x10(%r14),%rcx
2fb6(5): movzx 0x10(%rbp),%r13d
2fbb(4): lea 0x1(%rcx),%rdx
2fbf(4): cmp $0xffffffff,%rcx
2fc3(5): mov $0x1,%ecx
2fc8(4): cmove %rcx,%rdx
2fcc(3): cmp %rdx,%rax
2fcf(4): mov %rdx,0x10(%r14)
2fd3(6): jnz 0xfffffe4a(%rip)
2fd9(5): jmp 0xffffff29(%rip)
2fde(5): call 0xffffe622(%rip)
2fe3(7): lea 0x42ee(%rip),%rcx
2fea(7): lea 0x4030(%rip),%rsi
2ff1(7): lea 0x43e0(%rip),%rdi
2ff8(5): mov $0x437,%edx
2ffd(5): call 0xffffe723(%rip)

"get_next" :
2db0(2): push %r14
2db2(2): push %r13
2db4(7): lea 0x4509(%rip),%rdx
2dbb(2): push %r12
2dbd(1): push %rbp
2dbe(3): mov %rdi,%r14
2dc1(1): push %rbx
2dc2(4): mov 0x10(%rdi),%rax
2dc6(7): mov $0xffffffff,%rcx
2dcd(3): test %rsi,%rsi
2dd0(2): jz 0x8(%rip)
2dd2(6): mov $0x2,(%rsi)
2dd8(4): cmp $0xfffffffe,%rax
2ddc(6): jz 0x144(%rip)
2de2(4): mov 0x8(%r14),%rbp
2de6(3): test %rbp,%rbp
2de9(6): jz 0x19f(%rip)
2def(4): cmp $0x4,0x0(%rbp)
2df3(6): jnbe 0x1eb(%rip)
2df9(3): mov 0x0(%rbp),%eax
2dfc(4): movsxd 0x0(%rdx,%rax,4),%rax
2e00(3): add %rdx,%rax
2e03(2): jmp %rax
2e05(3): nop (%rax)
2e08(4): mov 0x8(%rbp),%rax
2e0c(5): movzx 0x10(%rbp),%r13d
2e11(8): mov $0xffffffff,0x10(%r14)
2e19(4): mov %rax,0x8(%r14)
2e1d(1): pop %rbx
2e1e(3): mov %r13d,%eax
2e21(1): pop %rbp
2e22(2): pop %r12
2e24(2): pop %r13
2e26(2): pop %r14
2e28(1): ret near (%rsp)
2e29(7): nop 0x0(%rax)
2e30(4): mov 0x18(%rbp),%rax
2e34(3): test %rax,%rax
2e37(6): jnz 0x17b(%rip)
2e3d(4): mov 0x8(%rbp),%rax
2e41(4): mov %rcx,0x10(%r14)
2e45(4): mov %rax,0x8(%r14)
2e49(3): mov %rcx,%rax
2e4c(5): jmp 0xffffff81(%rip)
2e51(7): nop 0x0(%rax)
2e58(3): test %rsi,%rsi
2e5b(4): mov 0x10(%rbp),%r12d
2e5f(2): jz 0x18(%rip)
2e61(4): cmp $0x6,%r12d
2e65(6): jz 0x113(%rip)
2e6b(4): cmp $0xa,%r12d
2e6f(2): jnz 0x8(%rip)
2e71(6): mov $0x1,(%rsi)
2e77(4): mov 0x10(%r14),%rbx
2e7b(4): cmp $0xffffffff,%rbx
2e7f(6): jz 0xb9(%rip)
2e85(3): movzx %bl,%esi
2e88(3): mov %r12d,%edi
2e8b(5): call 0xfffffbc5(%rip)
2e90(2): test %al,%al
2e92(6): jz 0x151(%rip)
2e98(3): mov %ebx,%r13d
2e9b(3): add $0x1,%ebx
2e9e(6): cmp $0xff,%ebx
2ea4(2): jle 0x17(%rip)
2ea6(2): jmp 0x5c(%rip)
2ea8(8): nop 0x0(%rax,%rax,1)
2eb0(3): add $0x1,%ebx
2eb3(6): cmp $0x100,%ebx
2eb9(2): jz 0x49(%rip)
2ebb(3): movzx %bl,%esi
2ebe(3): mov %r12d,%edi
2ec1(5): call 0xfffffb8f(%rip)
2ec6(2): test %al,%al
2ec8(2): jz 0xffffffe8(%rip)
2eca(3): movsxd %ebx,%rbx
2ecd(3): mov %r13d,%eax
2ed0(4): mov %rbx,0x10(%r14)
2ed4(1): pop %rbx
2ed5(1): pop %rbp
2ed6(2): pop %r12
2ed8(2): pop %r13
2eda(2): pop %r14
2edc(1): ret near (%rsp)
2edd(3): nop (%rax)
2ee0(4): mov 0x10(%r14),%rax
2ee4(4): cmp $0xffffffff,%rax
2ee8(2): jz 0x80(%rip)
2eea(4): add $0x1,%rax
2eee(4): mov %rax,0x10(%r14)
2ef2(4): movzx 0x11(%rbp),%edx
2ef6(3): mov %eax,%r13d
2ef9(3): cmp %rax,%rdx
2efc(6): jnz 0xffffff21(%rip)
2f02(4): mov 0x8(%rbp),%rax
2f06(8): mov $0xffffffff,0x10(%r14)
2f0e(1): pop %rbx
2f0f(1): pop %rbp
2f10(4): mov %rax,0x8(%r14)
2f14(3): mov %r13d,%eax
2f17(2): pop %r12
2f19(2): pop %r13
2f1b(2): pop %r14
2f1d(1): ret near (%rsp)
2f1e(2): nop 
2f20(3): mov (%r14),%rax
2f23(4): mov 0x8(%rax),%rbp
2f27(4): mov %rcx,0x10(%r14)
2f2b(4): mov %rbp,0x8(%r14)
2f2f(5): jmp 0xfffffeb7(%rip)
2f34(4): nop 0x0(%rax)
2f38(2): xor %ebx,%ebx
2f3a(2): jmp 0x11(%rip)
2f3c(4): nop 0x0(%rax)
2f40(3): add $0x1,%ebx
2f43(6): cmp $0x100,%ebx
2f49(2): jz 0x4a(%rip)
2f4b(2): mov %ebx,%esi
2f4d(3): mov %r12d,%edi
2f50(5): call 0xfffffb00(%rip)
2f55(2): test %al,%al
2f57(2): jz 0xffffffe9(%rip)
2f59(3): movsxd %ebx,%rbx
2f5c(4): mov %rbx,0x10(%r14)
2f60(5): jmp 0xffffff25(%rip)
2f65(3): nop (%rax)
2f68(4): movzx 0x10(%rbp),%eax
2f6c(4): mov %rax,0x10(%r14)
2f70(5): jmp 0xffffff82(%rip)
2f75(3): nop (%rax)
2f78(6): mov $0x0,(%rsi)
2f7e(5): jmp 0xfffffef9(%rip)
2f83(5): nop 0x0(%rax,%rax,1)
2f88(6): mov $0xffffffff,%r13d
2f8e(5): jmp 0xfffffe8f(%rip)
2f93(7): lea 0x433e(%rip),%rcx
2f9a(7): lea 0x4080(%rip),%rsi
2fa1(7): lea 0x40af(%rip),%rdi
2fa8(5): mov $0x434,%edx
2fad(5): call 0xffffe773(%rip)
2fb2(4): mov 0x10(%r14),%rcx
2fb6(5): movzx 0x10(%rbp),%r13d
2fbb(4): lea 0x1(%rcx),%rdx
2fbf(4): cmp $0xffffffff,%rcx
2fc3(5): mov $0x1,%ecx
2fc8(4): cmove %rcx,%rdx
2fcc(3): cmp %rdx,%rax
2fcf(4): mov %rdx,0x10(%r14)
2fd3(6): jnz 0xfffffe4a(%rip)
2fd9(5): jmp 0xffffff29(%rip)
2fde(5): call 0xffffe622(%rip)
2fe3(7): lea 0x42ee(%rip),%rcx
2fea(7): lea 0x4030(%rip),%rsi
2ff1(7): lea 0x43e0(%rip),%rdi
2ff8(5): mov $0x437,%edx
2ffd(5): call 0xffffe723(%rip)

"plain_read.part.5" :
3010(1): push %rbx
3011(7): lea 0x404b(%rip),%rsi
3018(5): mov $0x5,%edx
301d(2): xor %edi,%edi
301f(5): call 0xffffe671(%rip)
3024(3): mov %rax,%rbx
3027(5): call 0xffffe5e9(%rip)
302c(2): mov (%rax),%esi
302e(3): mov %rbx,%rdx
3031(5): mov $0x1,%edi
3036(2): xor %eax,%eax
3038(5): call 0xffffe818(%rip)
303d(3): nop (%rax)
3040(4): sub $0x8,%rsp
3044(3): mov %rsi,%rdx
3047(3): mov %rdi,%rsi
304a(2): xor %edi,%edi
304c(5): call 0x2f14(%rip)
3051(4): cmp $0xffffffff,%rax
3055(2): jz 0x7(%rip)
3057(4): add $0x8,%rsp
305b(1): ret near (%rsp)
305c(5): call 0xffffffb4(%rip)
3061(5): nop 0x0(%rax,%rax,1)
3066(a): nop 0x0(%rax,%rax,1)
3070(2): push %r12
3072(1): push %rbp
3073(7): lea 0x208166(%rip),%rbp
307a(1): push %rbx
307b(3): mov %rdi,%r12
307e(3): mov %rsi,%rbx
3081(7): nop 0x0(%rax)
3088(2): xor %edi,%edi
308a(3): mov %rbx,%rdx
308d(3): mov %r12,%rsi
3090(5): call 0x2ed0(%rip)
3095(4): cmp $0xffffffff,%rax
3099(2): jz 0x78(%rip)
309b(3): test %rax,%rax
309e(2): jz 0x45(%rip)
30a0(2): xor %esi,%esi
30a2(5): movzx 0x0(%r12,%rsi,1),%ecx
30a7(4): lea 0x1(%rsi),%rdx
30ab(5): cmp $0x0,0x0(%rbp,%rcx,1)
30b0(2): jz 0x40(%rip)
30b2(3): cmp %rdx,%rax
30b5(2): jbe 0x26(%rip)
30b7(3): add %r12,%rdx
30ba(3): add %r12,%rax
30bd(3): nop (%rax)
30c0(3): movzx (%rdx),%edi
30c3(5): cmp $0x0,0x0(%rbp,%rdi,1)
30c8(2): jnz 0xa(%rip)
30ca(4): mov %dil,0x0(%r12,%rsi,1)
30ce(4): add $0x1,%rsi
30d2(4): add $0x1,%rdx
30d6(3): cmp %rdx,%rax
30d9(2): jnz 0xffffffe7(%rip)
30db(3): test %rsi,%rsi
30de(2): jz 0xffffffaa(%rip)
30e0(3): mov %rsi,%rax
30e3(1): pop %rbx
30e4(1): pop %rbp
30e5(2): pop %r12
30e7(1): ret near (%rsp)
30e8(8): nop 0x0(%rax,%rax,1)
30f0(3): cmp %rdx,%rax
30f3(2): jz 0xd(%rip)
30f5(3): mov %rdx,%rsi
30f8(2): jmp 0xffffffaa(%rip)
30fa(6): nop 0x0(%rax,%rax,1)
3100(4): lea 0x2(%rsi),%rdx
3104(3): mov %rax,%rsi
3107(3): cmp %rdx,%rax
310a(2): jnbe 0xffffffad(%rip)
310c(3): mov %rsi,%rax
310f(2): jmp 0xffffffd4(%rip)
3111(5): call 0xfffffeff(%rip)
3116(a): nop 0x0(%rax,%rax,1)
3120(1): push %rbx
3121(3): mov %rsi,%rdx
3124(3): mov %rdi,%rbx
3127(3): mov %rdi,%rsi
312a(2): xor %edi,%edi
312c(5): call 0x2e34(%rip)
3131(4): cmp $0xffffffff,%rax
3135(2): jz 0x30(%rip)
3137(3): test %rax,%rax
313a(3): mov %rbx,%rdi
313d(4): lea 0x0(%rbx,%rax,1),%rsi
3141(7): lea 0x207f98(%rip),%rcx
3148(2): jz 0x1b(%rip)
314a(6): nop 0x0(%rax,%rax,1)
3150(3): movzx (%rdi),%edx
3153(4): add $0x1,%rdi
3157(4): movzx 0x0(%rcx,%rdx,1),%edx
315b(3): mov %dl,0xffffffff(%rdi)
315e(3): cmp %rdi,%rsi
3161(2): jnz 0xffffffef(%rip)
3163(1): pop %rbx
3164(1): ret near (%rsp)
3165(5): call 0xfffffeab(%rip)
316a(6): nop 0x0(%rax,%rax,1)
3170(1): push %rbp
3171(1): push %rbx
3172(3): mov %rdi,%rbx
3175(5): mov $0x20,%edi
317a(2): mov %esi,%ebp
317c(4): sub $0x8,%rsp
3180(5): call 0x3460(%rip)
3185(4): mov 0x8(%rbx),%rdx
3189(8): mov $0x0,0x8(%rax)
3191(6): mov $0x0,(%rax)
3197(4): mov %bpl,0x10(%rax)
319b(3): test %rdx,%rdx
319e(2): jz 0x11(%rip)
31a0(4): mov %rax,0x8(%rdx)
31a4(4): mov %rax,0x8(%rbx)
31a8(4): add $0x8,%rsp
31ac(1): pop %rbx
31ad(1): pop %rbp
31ae(1): ret near (%rsp)
31af(7): lea 0x416a(%rip),%rcx
31b6(7): lea 0x3e64(%rip),%rsi
31bd(7): lea 0x3eaa(%rip),%rdi
31c4(5): mov $0x287,%edx
31c9(5): call 0xffffe557(%rip)

"plain_read" :
3040(4): sub $0x8,%rsp
3044(3): mov %rsi,%rdx
3047(3): mov %rdi,%rsi
304a(2): xor %edi,%edi
304c(5): call 0x2f14(%rip)
3051(4): cmp $0xffffffff,%rax
3055(2): jz 0x7(%rip)
3057(4): add $0x8,%rsp
305b(1): ret near (%rsp)
305c(5): call 0xffffffb4(%rip)
3061(5): nop 0x0(%rax,%rax,1)
3066(a): nop 0x0(%rax,%rax,1)
3070(2): push %r12
3072(1): push %rbp
3073(7): lea 0x208166(%rip),%rbp
307a(1): push %rbx
307b(3): mov %rdi,%r12
307e(3): mov %rsi,%rbx
3081(7): nop 0x0(%rax)
3088(2): xor %edi,%edi
308a(3): mov %rbx,%rdx
308d(3): mov %r12,%rsi
3090(5): call 0x2ed0(%rip)
3095(4): cmp $0xffffffff,%rax
3099(2): jz 0x78(%rip)
309b(3): test %rax,%rax
309e(2): jz 0x45(%rip)
30a0(2): xor %esi,%esi
30a2(5): movzx 0x0(%r12,%rsi,1),%ecx
30a7(4): lea 0x1(%rsi),%rdx
30ab(5): cmp $0x0,0x0(%rbp,%rcx,1)
30b0(2): jz 0x40(%rip)
30b2(3): cmp %rdx,%rax
30b5(2): jbe 0x26(%rip)
30b7(3): add %r12,%rdx
30ba(3): add %r12,%rax
30bd(3): nop (%rax)
30c0(3): movzx (%rdx),%edi
30c3(5): cmp $0x0,0x0(%rbp,%rdi,1)
30c8(2): jnz 0xa(%rip)
30ca(4): mov %dil,0x0(%r12,%rsi,1)
30ce(4): add $0x1,%rsi
30d2(4): add $0x1,%rdx
30d6(3): cmp %rdx,%rax
30d9(2): jnz 0xffffffe7(%rip)
30db(3): test %rsi,%rsi
30de(2): jz 0xffffffaa(%rip)
30e0(3): mov %rsi,%rax
30e3(1): pop %rbx
30e4(1): pop %rbp
30e5(2): pop %r12
30e7(1): ret near (%rsp)
30e8(8): nop 0x0(%rax,%rax,1)
30f0(3): cmp %rdx,%rax
30f3(2): jz 0xd(%rip)
30f5(3): mov %rdx,%rsi
30f8(2): jmp 0xffffffaa(%rip)
30fa(6): nop 0x0(%rax,%rax,1)
3100(4): lea 0x2(%rsi),%rdx
3104(3): mov %rax,%rsi
3107(3): cmp %rdx,%rax
310a(2): jnbe 0xffffffad(%rip)
310c(3): mov %rsi,%rax
310f(2): jmp 0xffffffd4(%rip)
3111(5): call 0xfffffeff(%rip)
3116(a): nop 0x0(%rax,%rax,1)
3120(1): push %rbx
3121(3): mov %rsi,%rdx
3124(3): mov %rdi,%rbx
3127(3): mov %rdi,%rsi
312a(2): xor %edi,%edi
312c(5): call 0x2e34(%rip)
3131(4): cmp $0xffffffff,%rax
3135(2): jz 0x30(%rip)
3137(3): test %rax,%rax
313a(3): mov %rbx,%rdi
313d(4): lea 0x0(%rbx,%rax,1),%rsi
3141(7): lea 0x207f98(%rip),%rcx
3148(2): jz 0x1b(%rip)
314a(6): nop 0x0(%rax,%rax,1)
3150(3): movzx (%rdi),%edx
3153(4): add $0x1,%rdi
3157(4): movzx 0x0(%rcx,%rdx,1),%edx
315b(3): mov %dl,0xffffffff(%rdi)
315e(3): cmp %rdi,%rsi
3161(2): jnz 0xffffffef(%rip)
3163(1): pop %rbx
3164(1): ret near (%rsp)
3165(5): call 0xfffffeab(%rip)
316a(6): nop 0x0(%rax,%rax,1)
3170(1): push %rbp
3171(1): push %rbx
3172(3): mov %rdi,%rbx
3175(5): mov $0x20,%edi
317a(2): mov %esi,%ebp
317c(4): sub $0x8,%rsp
3180(5): call 0x3460(%rip)
3185(4): mov 0x8(%rbx),%rdx
3189(8): mov $0x0,0x8(%rax)
3191(6): mov $0x0,(%rax)
3197(4): mov %bpl,0x10(%rax)
319b(3): test %rdx,%rdx
319e(2): jz 0x11(%rip)
31a0(4): mov %rax,0x8(%rdx)
31a4(4): mov %rax,0x8(%rbx)
31a8(4): add $0x8,%rsp
31ac(1): pop %rbx
31ad(1): pop %rbp
31ae(1): ret near (%rsp)
31af(7): lea 0x416a(%rip),%rcx
31b6(7): lea 0x3e64(%rip),%rsi
31bd(7): lea 0x3eaa(%rip),%rdi
31c4(5): mov $0x287,%edx
31c9(5): call 0xffffe557(%rip)

"read_and_delete" :
3070(2): push %r12
3072(1): push %rbp
3073(7): lea 0x208166(%rip),%rbp
307a(1): push %rbx
307b(3): mov %rdi,%r12
307e(3): mov %rsi,%rbx
3081(7): nop 0x0(%rax)
3088(2): xor %edi,%edi
308a(3): mov %rbx,%rdx
308d(3): mov %r12,%rsi
3090(5): call 0x2ed0(%rip)
3095(4): cmp $0xffffffff,%rax
3099(2): jz 0x78(%rip)
309b(3): test %rax,%rax
309e(2): jz 0x45(%rip)
30a0(2): xor %esi,%esi
30a2(5): movzx 0x0(%r12,%rsi,1),%ecx
30a7(4): lea 0x1(%rsi),%rdx
30ab(5): cmp $0x0,0x0(%rbp,%rcx,1)
30b0(2): jz 0x40(%rip)
30b2(3): cmp %rdx,%rax
30b5(2): jbe 0x26(%rip)
30b7(3): add %r12,%rdx
30ba(3): add %r12,%rax
30bd(3): nop (%rax)
30c0(3): movzx (%rdx),%edi
30c3(5): cmp $0x0,0x0(%rbp,%rdi,1)
30c8(2): jnz 0xa(%rip)
30ca(4): mov %dil,0x0(%r12,%rsi,1)
30ce(4): add $0x1,%rsi
30d2(4): add $0x1,%rdx
30d6(3): cmp %rdx,%rax
30d9(2): jnz 0xffffffe7(%rip)
30db(3): test %rsi,%rsi
30de(2): jz 0xffffffaa(%rip)
30e0(3): mov %rsi,%rax
30e3(1): pop %rbx
30e4(1): pop %rbp
30e5(2): pop %r12
30e7(1): ret near (%rsp)
30e8(8): nop 0x0(%rax,%rax,1)
30f0(3): cmp %rdx,%rax
30f3(2): jz 0xd(%rip)
30f5(3): mov %rdx,%rsi
30f8(2): jmp 0xffffffaa(%rip)
30fa(6): nop 0x0(%rax,%rax,1)
3100(4): lea 0x2(%rsi),%rdx
3104(3): mov %rax,%rsi
3107(3): cmp %rdx,%rax
310a(2): jnbe 0xffffffad(%rip)
310c(3): mov %rsi,%rax
310f(2): jmp 0xffffffd4(%rip)
3111(5): call 0xfffffeff(%rip)
3116(a): nop 0x0(%rax,%rax,1)
3120(1): push %rbx
3121(3): mov %rsi,%rdx
3124(3): mov %rdi,%rbx
3127(3): mov %rdi,%rsi
312a(2): xor %edi,%edi
312c(5): call 0x2e34(%rip)
3131(4): cmp $0xffffffff,%rax
3135(2): jz 0x30(%rip)
3137(3): test %rax,%rax
313a(3): mov %rbx,%rdi
313d(4): lea 0x0(%rbx,%rax,1),%rsi
3141(7): lea 0x207f98(%rip),%rcx
3148(2): jz 0x1b(%rip)
314a(6): nop 0x0(%rax,%rax,1)
3150(3): movzx (%rdi),%edx
3153(4): add $0x1,%rdi
3157(4): movzx 0x0(%rcx,%rdx,1),%edx
315b(3): mov %dl,0xffffffff(%rdi)
315e(3): cmp %rdi,%rsi
3161(2): jnz 0xffffffef(%rip)
3163(1): pop %rbx
3164(1): ret near (%rsp)
3165(5): call 0xfffffeab(%rip)
316a(6): nop 0x0(%rax,%rax,1)
3170(1): push %rbp
3171(1): push %rbx
3172(3): mov %rdi,%rbx
3175(5): mov $0x20,%edi
317a(2): mov %esi,%ebp
317c(4): sub $0x8,%rsp
3180(5): call 0x3460(%rip)
3185(4): mov 0x8(%rbx),%rdx
3189(8): mov $0x0,0x8(%rax)
3191(6): mov $0x0,(%rax)
3197(4): mov %bpl,0x10(%rax)
319b(3): test %rdx,%rdx
319e(2): jz 0x11(%rip)
31a0(4): mov %rax,0x8(%rdx)
31a4(4): mov %rax,0x8(%rbx)
31a8(4): add $0x8,%rsp
31ac(1): pop %rbx
31ad(1): pop %rbp
31ae(1): ret near (%rsp)
31af(7): lea 0x416a(%rip),%rcx
31b6(7): lea 0x3e64(%rip),%rsi
31bd(7): lea 0x3eaa(%rip),%rdi
31c4(5): mov $0x287,%edx
31c9(5): call 0xffffe557(%rip)

"read_and_xlate" :
3120(1): push %rbx
3121(3): mov %rsi,%rdx
3124(3): mov %rdi,%rbx
3127(3): mov %rdi,%rsi
312a(2): xor %edi,%edi
312c(5): call 0x2e34(%rip)
3131(4): cmp $0xffffffff,%rax
3135(2): jz 0x30(%rip)
3137(3): test %rax,%rax
313a(3): mov %rbx,%rdi
313d(4): lea 0x0(%rbx,%rax,1),%rsi
3141(7): lea 0x207f98(%rip),%rcx
3148(2): jz 0x1b(%rip)
314a(6): nop 0x0(%rax,%rax,1)
3150(3): movzx (%rdi),%edx
3153(4): add $0x1,%rdi
3157(4): movzx 0x0(%rcx,%rdx,1),%edx
315b(3): mov %dl,0xffffffff(%rdi)
315e(3): cmp %rdi,%rsi
3161(2): jnz 0xffffffef(%rip)
3163(1): pop %rbx
3164(1): ret near (%rsp)
3165(5): call 0xfffffeab(%rip)
316a(6): nop 0x0(%rax,%rax,1)
3170(1): push %rbp
3171(1): push %rbx
3172(3): mov %rdi,%rbx
3175(5): mov $0x20,%edi
317a(2): mov %esi,%ebp
317c(4): sub $0x8,%rsp
3180(5): call 0x3460(%rip)
3185(4): mov 0x8(%rbx),%rdx
3189(8): mov $0x0,0x8(%rax)
3191(6): mov $0x0,(%rax)
3197(4): mov %bpl,0x10(%rax)
319b(3): test %rdx,%rdx
319e(2): jz 0x11(%rip)
31a0(4): mov %rax,0x8(%rdx)
31a4(4): mov %rax,0x8(%rbx)
31a8(4): add $0x8,%rsp
31ac(1): pop %rbx
31ad(1): pop %rbp
31ae(1): ret near (%rsp)
31af(7): lea 0x416a(%rip),%rcx
31b6(7): lea 0x3e64(%rip),%rsi
31bd(7): lea 0x3eaa(%rip),%rdi
31c4(5): mov $0x287,%edx
31c9(5): call 0xffffe557(%rip)

"append_normal_char" :
3170(1): push %rbp
3171(1): push %rbx
3172(3): mov %rdi,%rbx
3175(5): mov $0x20,%edi
317a(2): mov %esi,%ebp
317c(4): sub $0x8,%rsp
3180(5): call 0x3460(%rip)
3185(4): mov 0x8(%rbx),%rdx
3189(8): mov $0x0,0x8(%rax)
3191(6): mov $0x0,(%rax)
3197(4): mov %bpl,0x10(%rax)
319b(3): test %rdx,%rdx
319e(2): jz 0x11(%rip)
31a0(4): mov %rax,0x8(%rdx)
31a4(4): mov %rax,0x8(%rbx)
31a8(4): add $0x8,%rsp
31ac(1): pop %rbx
31ad(1): pop %rbp
31ae(1): ret near (%rsp)
31af(7): lea 0x416a(%rip),%rcx
31b6(7): lea 0x3e64(%rip),%rsi
31bd(7): lea 0x3eaa(%rip),%rdi
31c4(5): mov $0x287,%edx
31c9(5): call 0xffffe557(%rip)

"parse_str" :
31d0(2): push %r15
31d2(2): push %r14
31d4(2): push %r13
31d6(2): push %r12
31d8(1): push %rbp
31d9(1): push %rbx
31da(3): mov %rdi,%rbp
31dd(7): sub $0xa8,%rsp
31e4(5): mov %rsi,0x10(%rsp)
31e9(9): mov $0x28,%rax
31f2(8): mov %rax,0x98(%rsp)
31fa(2): xor %eax,%eax
31fc(5): call 0xffffe4b4(%rip)
3201(3): mov %rax,%rbx
3204(3): mov %rax,%rdi
3207(5): call 0x33d9(%rip)
320c(5): mov $0x1,%esi
3211(3): mov %rbx,%rdi
3214(3): mov %rax,%r13
3217(5): mov %rax,0x8(%rsp)
321c(8): mov %rax,0x80(%rsp)
3224(5): call 0x358c(%rip)
3229(3): mov %rax,%r14
322c(8): mov %rax,0x88(%rsp)
3234(4): movzx 0x0(%rbp),%eax
3238(2): test %al,%al
323a(6): jz 0x7ad(%rip)
3240(2): xor %ebx,%ebx
3242(3): xor %r15d,%r15d
3245(3): mov %r13,%r10
3248(8): nop 0x0(%rax,%rax,1)
3250(3): lea 0x1(%rbx),%ecx
3253(3): mov %r15d,%edx
3256(4): add $0x1,%r15d
325a(2): cmp $0x5c,%al
325c(4): lea 0x0(%r10,%rdx,1),%r13
3260(3): mov %rcx,%rsi
3263(5): movzx 0x0(%rbp,%rcx,1),%ecx
3268(2): jnz 0x50(%rip)
326a(4): lea 0x0(%r14,%rdx,1),%r12
326e(3): cmp $0x62,%cl
3271(5): mov $0x1,(%r12)
3276(6): jz 0x6b2(%rip)
327c(6): jle 0x3fc(%rip)
3282(3): cmp $0x72,%cl
3285(6): jz 0x6b1(%rip)
328b(6): jnle 0x458(%rip)
3291(3): cmp $0x66,%cl
3294(6): jz 0x541(%rip)
329a(3): cmp $0x6e,%cl
329d(6): jnz 0x680(%rip)
32a3(6): mov $0xa,%r12d
32a9(3): lea 0x2(%rbx),%eax
32ac(5): jmp 0x424(%rip)
32b1(7): nop 0x0(%rax)
32b8(4): mov %al,0x0(%r13)
32bc(2): mov %esi,%ebx
32be(2): mov %ecx,%eax
32c0(2): test %al,%al
32c2(2): jnz 0xffffff8e(%rip)
32c4(5): lea 0x70(%rsp),%rax
32c9(5): mov 0x8(%rsp),%r12
32ce(8): mov %r15,0x90(%rsp)
32d6(3): xor %r13d,%r13d
32d9(5): mov %rax,0x30(%rsp)
32de(5): lea 0x78(%rsp),%rax
32e3(5): mov %rax,0x38(%rsp)
32e8(4): lea 0x2(%r13),%rcx
32ec(3): cmp %r15,%rcx
32ef(2): jnb 0x3f(%rip)
32f1(5): cmp $0x5b,0x0(%r12,%r13,1)
32f6(4): lea 0x1(%r13),%rbp
32fa(6): movzx 0x1(%r12,%r13,1),%r9d
3300(2): jz 0x70(%rip)
3302(5): mov 0x8(%rsp),%rax
3307(4): cmp $0x2d,%r9b
330b(5): movzx 0x0(%rax,%r13,1),%esi
3310(2): mov %esi,%ebx
3312(6): jz 0x16e(%rip)
3318(5): mov 0x10(%rsp),%rdi
331d(3): mov %rbp,%r13
3320(5): call 0xfffffe50(%rip)
3325(4): lea 0x2(%r13),%rcx
3329(3): cmp %r15,%rcx
332c(2): jb 0xffffffc5(%rip)
332e(3): cmp %r15,%r13
3331(2): jnb 0x2d(%rip)
3333(5): mov 0x8(%rsp),%rax
3338(5): mov 0x10(%rsp),%rbp
333d(4): lea 0x0(%rax,%r15,1),%rbx
3341(3): add %rax,%r13
3344(4): nop 0x0(%rax)
3348(5): movzx 0x0(%r13),%esi
334d(3): mov %rbp,%rdi
3350(4): add $0x1,%r13
3354(5): call 0xfffffe1c(%rip)
3359(3): cmp %r13,%rbx
335c(2): jnz 0xffffffec(%rip)
335e(5): mov $0x1,0x18(%rsp)
3363(5): jmp 0x2d2(%rip)
3368(8): nop 0x0(%rax,%rax,1)
3370(5): movzx 0x0(%r14,%r13,1),%eax
3375(2): test %al,%al
3377(4): mov %al,0x18(%rsp)
337b(2): jnz 0xffffff87(%rip)
337d(4): cmp $0x3a,%r9b
3381(6): jz 0x16f(%rip)
3387(4): cmp $0x3d,%r9b
338b(6): jz 0x165(%rip)
3391(5): cmp $0x2a,0x0(%r12,%rcx,1)
3396(6): jnz 0xffffff6c(%rip)
339c(5): cmp $0x0,0x0(%r14,%rcx,1)
33a1(6): jnz 0xffffff61(%rip)
33a7(4): lea 0x3(%r13),%rax
33ab(3): cmp %r15,%rax
33ae(6): jnb 0xffffff54(%rip)
33b4(6): cmp $0x0,0x3(%r14,%r13,1)
33ba(6): jnz 0xffffff48(%rip)
33c0(4): lea 0x0(%r12,%rax,1),%r11
33c4(4): movzx (%r11),%edx
33c8(3): cmp $0x5d,%dl
33cb(2): jnz 0x10(%rip)
33cd(5): jmp 0x622(%rip)
33d2(6): nop 0x0(%rax,%rax,1)
33d8(3): mov %rbx,%rax
33db(4): lea 0x1(%rax),%rbx
33df(3): cmp %r15,%rbx
33e2(6): jnb 0xffffff20(%rip)
33e8(6): cmp $0x0,0x1(%r14,%rax,1)
33ee(6): jnz 0xffffff14(%rip)
33f4(5): cmp $0x5d,0x0(%r12,%rbx,1)
33f9(2): jnz 0xffffffdf(%rip)
33fb(3): not %rbp
33fe(3): add %rax,%rbp
3401(6): jnz 0x31c(%rip)
3407(9): mov $0x0,0x70(%rsp)
3410(5): mov $0x20,%edi
3415(5): mov %r9b,0x18(%rsp)
341a(5): mov 0x70(%rsp),%rbp
341f(5): call 0x31c1(%rip)
3424(5): mov 0x10(%rsp),%rdi
3429(6): movzx 0x18(%rsp),%r9d
342f(8): mov $0x0,0x8(%rax)
3437(6): mov $0x4,(%rax)
343d(4): mov %rbp,0x18(%rax)
3441(4): mov 0x8(%rdi),%rdx
3445(4): mov %r9b,0x10(%rax)
3449(3): test %rdx,%rdx
344c(6): jz 0x680(%rip)
3452(5): mov 0x10(%rsp),%rdi
3457(4): lea 0x1(%rbx),%r13
345b(4): mov %rax,0x8(%rdx)
345f(4): mov %rax,0x8(%rdi)
3463(8): mov 0x80(%rsp),%r12
346b(8): mov 0x88(%rsp),%r14
3473(8): mov 0x90(%rsp),%r15
347b(5): jmp 0xfffffe6d(%rip)
3480(5): movzx 0x0(%r14,%rbp,1),%eax
3485(2): test %al,%al
3487(4): mov %al,0x18(%rsp)
348b(6): jnz 0xfffffe8d(%rip)
3491(5): mov 0x8(%rsp),%rax
3496(4): movzx 0x0(%rax,%rcx,1),%ebp
349a(3): cmp %sil,%bpl
349d(6): jb 0x14b(%rip)
34a3(5): mov $0x20,%edi
34a8(5): call 0x3138(%rip)
34ad(5): mov 0x10(%rsp),%rdi
34b2(8): mov $0x0,0x8(%rax)
34ba(6): mov $0x1,(%rax)
34c0(3): mov %bl,0x10(%rax)
34c3(4): mov %bpl,0x11(%rax)
34c7(4): mov 0x8(%rdi),%rdx
34cb(3): test %rdx,%rdx
34ce(6): jz 0x5bb(%rip)
34d4(5): mov 0x10(%rsp),%rdi
34d9(4): mov %rax,0x8(%rdx)
34dd(4): add $0x3,%r13
34e1(4): mov %rax,0x8(%rdi)
34e5(5): jmp 0xfffffe03(%rip)
34ea(6): nop 0x0(%rax,%rax,1)
34f0(5): cmp $0x0,0x0(%r14,%rbp,1)
34f5(6): jnz 0xfffffe9c(%rip)
34fb(5): mov 0x8(%rsp),%rax
3500(4): lea 0xffffffff(%r15),%rdx
3504(3): cmp %rdx,%rcx
3507(4): movzx 0x0(%rax,%rbp,1),%esi
350b(6): jnb 0xfffffe86(%rip)
3511(3): mov %rcx,%rbx
3514(2): jmp 0x18(%rip)
3516(a): nop 0x0(%rax,%rax,1)
3520(3): cmp %rax,%rdx
3523(3): mov %rax,%rbx
3526(6): jbe 0xfffffe6b(%rip)
352c(4): cmp 0x0(%r12,%rbx,1),%sil
3530(4): lea 0x1(%rbx),%rax
3534(2): jnz 0xffffffec(%rip)
3536(6): cmp $0x5d,0x1(%r12,%rbx,1)
353c(2): jnz 0xffffffe4(%rip)
353e(6): cmp $0x0,0xffffffff(%r14,%rax,1)
3544(2): jnz 0xffffffdc(%rip)
3546(5): cmp $0x0,0x0(%r14,%rax,1)
354b(2): jnz 0xffffffd5(%rip)
354d(5): mov 0x8(%rsp),%rdi
3552(7): mov $0xfffffffe,%rax
3559(3): sub %r13,%rax
355c(3): add %rcx,%rdi
355f(3): add %rbx,%rax
3562(5): mov %rdi,0x28(%rsp)
3567(5): mov %rax,0x20(%rsp)
356c(6): jz 0x4e8(%rip)
3572(4): cmp $0x3a,%sil
3576(6): jz 0x2c5(%rip)
357c(6): cmp $0x1,0x20(%rsp)
3582(6): jz 0x415(%rip)
3588(8): lea 0x80(%rsp),%rdi
3590(3): mov %rcx,%rsi
3593(5): mov %r9b,0x48(%rsp)
3598(5): mov %rcx,0x40(%rsp)
359d(5): call 0xfffff213(%rip)
35a2(2): test %al,%al
35a4(5): mov 0x40(%rsp),%rcx
35a9(6): movzx 0x48(%rsp),%r9d
35af(6): jnz 0xfffffde2(%rip)
35b5(5): mov 0x20(%rsp),%rsi
35ba(5): mov 0x28(%rsp),%rdi
35bf(5): call 0xfffff2f1(%rip)
35c4(7): lea 0x3f4d(%rip),%rsi
35cb(3): mov %rax,%rbx
35ce(5): mov $0x5,%edx
35d3(2): xor %edi,%edi
35d5(5): call 0xffffe0bb(%rip)
35da(3): mov %rbx,%rcx
35dd(5): jmp 0x1c1(%rip)
35e2(6): nop 0x0(%rax,%rax,1)
35e8(2): mov %esi,%edi
35ea(5): call 0xfffff256(%rip)
35ef(4): movzx %bpl,%edi
35f3(3): mov %rax,%r13
35f6(5): call 0xfffff24a(%rip)
35fb(7): lea 0x3f86(%rip),%rsi
3602(3): mov %rax,%rbx
3605(5): mov $0x5,%edx
360a(2): xor %edi,%edi
360c(5): call 0xffffe084(%rip)
3611(3): mov %rbx,%r8
3614(3): mov %rax,%rdx
3617(3): mov %r13,%rcx
361a(2): xor %esi,%esi
361c(2): xor %edi,%edi
361e(2): xor %eax,%eax
3620(5): call 0xffffe230(%rip)
3625(3): mov %r13,%rdi
3628(5): call 0xffffdfc8(%rip)
362d(3): mov %rbx,%rdi
3630(5): call 0xffffdfc0(%rip)
3635(3): mov %r12,%rdi
3638(5): call 0xffffdfb8(%rip)
363d(3): mov %r14,%rdi
3640(5): call 0xffffdfb0(%rip)
3645(8): mov 0x98(%rsp),%rdi
364d(9): xor $0x28,%rdi
3656(5): movzx 0x18(%rsp),%eax
365b(6): jnz 0x44d(%rip)
3661(7): add $0xa8,%rsp
3668(1): pop %rbx
3669(1): pop %rbp
366a(2): pop %r12
366c(2): pop %r13
366e(2): pop %r14
3670(2): pop %r15
3672(1): ret near (%rsp)
3673(5): nop 0x0(%rax,%rax,1)
3678(3): cmp $0x37,%cl
367b(6): jnle 0x85(%rip)
3681(3): cmp $0x30,%cl
3684(6): jnl 0x15f(%rip)
368a(2): test %cl,%cl
368c(6): jnz 0x291(%rip)
3692(7): lea 0x3ddf(%rip),%rsi
3699(5): mov $0x5,%edx
369e(2): xor %edi,%edi
36a0(5): mov %r10,0x18(%rsp)
36a5(5): call 0xffffdfeb(%rip)
36aa(2): xor %esi,%esi
36ac(3): mov %rax,%rdx
36af(2): xor %edi,%edi
36b1(2): xor %eax,%eax
36b3(5): call 0xffffe19d(%rip)
36b8(5): mov 0x18(%rsp),%r10
36bd(3): lea 0x1(%rbx),%eax
36c0(5): mov $0x0,(%r12)
36c5(6): mov $0x5c,%r12d
36cb(5): nop 0x0(%rax,%rax,1)
36d0(2): mov %eax,%eax
36d2(4): mov %r12b,0x0(%r13)
36d6(3): mov %rax,%rbx
36d9(5): movzx 0x0(%rbp,%rax,1),%eax
36de(5): jmp 0xfffffbe2(%rip)
36e3(3): cmp $0x74,%cl
36e6(6): jz 0xe1(%rip)
36ec(3): cmp $0x76,%cl
36ef(6): jnz 0x22e(%rip)
36f5(6): mov $0xb,%r12d
36fb(3): lea 0x2(%rbx),%eax
36fe(2): jmp 0xffffffd2(%rip)
3700(3): cmp $0x5c,%cl
3703(6): jz 0xb6(%rip)
3709(3): cmp $0x61,%cl
370c(6): jnz 0x211(%rip)
3712(6): mov $0x7,%r12d
3718(3): lea 0x2(%rbx),%eax
371b(2): jmp 0xffffffb5(%rip)
371d(3): cmp $0x30,%dl
3720(5): mov 0x30(%rsp),%rcx
3725(5): mov 0x38(%rsp),%rsi
372a(3): setnz %dl
372d(3): mov %r11,%rdi
3730(3): xor %r8d,%r8d
3733(3): movzx %dl,%edx
3736(5): mov %r11,0x28(%rsp)
373b(5): mov %r9b,0x20(%rsp)
3740(4): lea 0x8(%rdx,%rdx,1),%edx
3744(5): call 0x312c(%rip)
3749(2): test %eax,%eax
374b(5): mov 0x28(%rsp),%r11
3750(2): jnz 0x1f(%rip)
3752(6): cmp $0xffffffff,0x70(%rsp)
3758(2): jz 0x17(%rip)
375a(4): lea 0x0(%r11,%rbp,1),%rax
375e(5): cmp %rax,0x78(%rsp)
3763(6): movzx 0x20(%rsp),%r9d
3769(6): jz 0xfffffca7(%rip)
376f(3): mov %rbp,%rsi
3772(3): mov %r11,%rdi
3775(5): call 0xfffff13b(%rip)
377a(3): mov %rax,%rdi
377d(3): mov %rax,%rbx
3780(5): call 0x27c0(%rip)
3785(7): lea 0x3dcc(%rip),%rsi
378c(3): mov %rax,%rbp
378f(5): mov $0x5,%edx
3794(2): xor %edi,%edi
3796(5): call 0xffffdefa(%rip)
379b(3): mov %rbp,%rcx
379e(3): mov %rax,%rdx
37a1(2): xor %edi,%edi
37a3(2): xor %esi,%esi
37a5(2): xor %eax,%eax
37a7(5): call 0xffffe0a9(%rip)
37ac(3): mov %rbx,%rdi
37af(5): call 0xffffde41(%rip)
37b4(5): jmp 0xfffffe81(%rip)
37b9(6): mov $0x5c,%r12d
37bf(3): lea 0x2(%rbx),%eax
37c2(5): jmp 0xffffff0e(%rip)
37c7(6): mov $0x9,%r12d
37cd(3): lea 0x2(%rbx),%eax
37d0(5): jmp 0xffffff00(%rip)
37d5(6): mov $0xc,%r12d
37db(3): lea 0x2(%rbx),%eax
37de(5): jmp 0xfffffef2(%rip)
37e3(3): lea 0x2(%rbx),%edx
37e6(4): lea 0xffffffd0(%rcx),%r12d
37ea(6): movsx 0x0(%rbp,%rdx,1),%r8d
37f0(3): mov %rdx,%rax
37f3(4): lea 0xffffffd0(%r8),%edx
37f7(3): cmp $0x7,%edx
37fa(6): jnbe 0xfffffed6(%rip)
3800(3): lea 0x3(%rbx),%eax
3803(4): lea 0x0(%rdx,%r12,8),%r12d
3807(6): movsx 0x0(%rbp,%rax,1),%r9d
380d(3): lea 0x3(%rbx),%eax
3810(4): lea 0xffffffd0(%r9),%edx
3814(3): cmp $0x7,%edx
3817(6): jnbe 0xfffffeb9(%rip)
381d(4): movzx %r12b,%eax
3821(3): lea 0x0(%rdx,%rax,8),%eax
3824(5): cmp $0xff,%eax
3829(6): jnle 0x1ce(%rip)
382f(4): lea 0x0(%rdx,%r12,8),%r12d
3833(3): lea 0x4(%rbx),%eax
3836(5): jmp 0xfffffe9a(%rip)
383b(5): mov %rbx,0x68(%rsp)
3840(5): mov %rbp,0x60(%rsp)
3845(3): xor %r8d,%r8d
3848(5): mov 0x20(%rsp),%rbx
384d(5): mov 0x28(%rsp),%rbp
3852(5): mov %r12,0x50(%rsp)
3857(5): mov %r13,0x40(%rsp)
385c(3): mov %r8,%r12
385f(5): mov %rcx,0x48(%rsp)
3864(5): mov %r9b,0x5f(%rsp)
3869(7): nop 0x0(%rax)
3870(7): lea 0x207309(%rip),%rax
3877(3): mov %rbx,%rdx
387a(3): mov %rbp,%rdi
387d(4): mov 0x0(%rax,%r12,8),%r13
3881(3): mov %r13,%rsi
3884(5): call 0xffffdd9c(%rip)
3889(2): test %eax,%eax
388b(2): jnz 0x13(%rip)
388d(3): mov %r13,%rdi
3890(5): call 0xffffde20(%rip)
3895(3): cmp %rax,%rbx
3898(6): jz 0xac(%rip)
389e(4): add $0x1,%r12
38a2(4): cmp $0xc,%r12
38a6(2): jnz 0xffffffca(%rip)
38a8(5): mov 0x48(%rsp),%rcx
38ad(6): movzx 0x5f(%rsp),%r9d
38b3(8): lea 0x80(%rsp),%rdi
38bb(5): mov 0x40(%rsp),%r13
38c0(5): mov 0x50(%rsp),%r12
38c5(5): mov 0x60(%rsp),%rbp
38ca(3): mov %rcx,%rsi
38cd(5): mov %rcx,0x40(%rsp)
38d2(5): mov %r9b,0x48(%rsp)
38d7(5): call 0xffffeed9(%rip)
38dc(2): test %al,%al
38de(5): mov 0x40(%rsp),%rcx
38e3(6): movzx 0x48(%rsp),%r9d
38e9(6): jnz 0xfffffaa8(%rip)
38ef(5): mov 0x20(%rsp),%rsi
38f4(5): mov 0x28(%rsp),%rdi
38f9(5): call 0xffffefb7(%rip)
38fe(3): mov %rax,%rdi
3901(3): mov %rax,%rbx
3904(5): call 0x263c(%rip)
3909(5): mov $0x5,%edx
390e(3): mov %rax,%rbp
3911(7): lea 0x3761(%rip),%rsi
3918(5): jmp 0xfffffe7c(%rip)
391d(3): mov %ecx,%r12d
3920(3): lea 0x2(%rbx),%eax
3923(5): jmp 0xfffffdad(%rip)
3928(6): mov $0x8,%r12d
392e(3): lea 0x2(%rbx),%eax
3931(5): jmp 0xfffffd9f(%rip)
3936(6): mov $0xd,%r12d
393c(3): lea 0x2(%rbx),%eax
393f(5): jmp 0xfffffd91(%rip)
3944(5): mov $0x20,%edi
3949(5): mov 0x68(%rsp),%rbx
394e(5): mov %r12,0x18(%rsp)
3953(5): call 0x2c8d(%rip)
3958(5): mov 0x10(%rsp),%rdi
395d(5): mov 0x18(%rsp),%r8
3962(8): mov $0x0,0x8(%rax)
396a(6): mov $0x2,(%rax)
3970(4): mov 0x8(%rdi),%rdx
3974(4): mov %r8d,0x10(%rax)
3978(3): test %rdx,%rdx
397b(6): jz 0x132(%rip)
3981(5): mov 0x10(%rsp),%rdi
3986(4): mov %rax,0x8(%rdx)
398a(4): lea 0x2(%rbx),%r13
398e(4): mov %rax,0x8(%rdi)
3992(5): jmp 0xfffffad1(%rip)
3997(5): mov $0x20,%edi
399c(5): call 0x2c44(%rip)
39a1(5): mov 0x28(%rsp),%rdi
39a6(8): mov $0x0,0x8(%rax)
39ae(6): mov $0x3,(%rax)
39b4(3): movzx (%rdi),%edx
39b7(5): mov 0x10(%rsp),%rdi
39bc(3): mov %dl,0x10(%rax)
39bf(4): mov 0x8(%rdi),%rdx
39c3(3): test %rdx,%rdx
39c6(2): jnz 0xffffffbb(%rip)
39c8(7): lea 0x39a1(%rip),%rcx
39cf(7): lea 0x364b(%rip),%rsi
39d6(7): lea 0x3691(%rip),%rdi
39dd(5): mov $0x2e5,%edx
39e2(5): call 0xffffdd3e(%rip)
39e7(3): xor %r15d,%r15d
39ea(5): jmp 0xfffff8da(%rip)
39ef(3): mov %rax,%rbx
39f2(5): jmp 0xfffffa15(%rip)
39f7(7): lea 0x3a12(%rip),%rsi
39fe(5): mov $0x5,%edx
3a03(2): xor %edi,%edi
3a05(4): mov %cl,0x28(%rsp)
3a09(5): mov %r10,0x30(%rsp)
3a0e(5): mov %r9d,0x20(%rsp)
3a13(5): mov %r8d,0x18(%rsp)
3a18(5): call 0xffffdc78(%rip)
3a1d(5): movsx 0x28(%rsp),%ecx
3a22(4): sub $0x8,%rsp
3a26(3): mov %rax,%rdx
3a29(5): mov 0x28(%rsp),%r9d
3a2e(2): xor %eax,%eax
3a30(2): xor %esi,%esi
3a32(2): xor %edi,%edi
3a34(2): push %r9
3a36(5): mov 0x28(%rsp),%r8d
3a3b(2): push %r8
3a3d(1): push %rcx
3a3e(5): call 0xffffde12(%rip)
3a43(4): add $0x20,%rsp
3a47(3): lea 0x3(%rbx),%eax
3a4a(5): mov 0x30(%rsp),%r10
3a4f(5): jmp 0xfffffc81(%rip)
3a54(4): cmp $0x3a,%sil
3a58(5): mov $0x5,%edx
3a5d(2): jz 0x23(%rip)
3a5f(7): lea 0x3a82(%rip),%rsi
3a66(2): xor %edi,%edi
3a68(5): call 0xffffdc28(%rip)
3a6d(2): xor %esi,%esi
3a6f(3): mov %rax,%rdx
3a72(2): xor %edi,%edi
3a74(2): xor %eax,%eax
3a76(5): call 0xffffddda(%rip)
3a7b(5): jmp 0xfffffbba(%rip)
3a80(7): lea 0x3a39(%rip),%rsi
3a87(2): jmp 0xffffffdf(%rip)
3a89(7): lea 0x38a8(%rip),%rcx
3a90(7): lea 0x358a(%rip),%rsi
3a97(7): lea 0x35d0(%rip),%rdi
3a9e(5): mov $0x2a5,%edx
3aa3(5): call 0xffffdc7d(%rip)
3aa8(5): call 0xffffdc18(%rip)
3aad(7): lea 0x38dc(%rip),%rcx
3ab4(7): lea 0x3566(%rip),%rsi
3abb(7): lea 0x35ac(%rip),%rdi
3ac2(5): mov $0x2bb,%edx
3ac7(5): call 0xffffdc59(%rip)
3acc(5): call 0xffffde44(%rip)

"set_initialize" :
3ae0(2): push %r12
3ae2(3): mov %esi,%r12d
3ae5(1): push %rbp
3ae6(3): mov %rdi,%rbp
3ae9(1): push %rbx
3aea(3): mov %rdx,%rbx
3aed(8): mov $0xfffffffe,0x10(%rdi)
3af5(2): jmp 0x11(%rip)
3af7(9): nop 0x0(%rax,%rax,1)
3b00(2): cwde 
3b02(4): mov $0x1,0x0(%rbx,%rax,1)
3b06(2): xor %esi,%esi
3b08(3): mov %rbp,%rdi
3b0b(5): call 0xfffff2a5(%rip)
3b10(3): cmp $0xff,%eax
3b13(2): jnz 0xffffffed(%rip)
3b15(3): test %r12b,%r12b
3b18(2): jz 0x1c(%rip)
3b1a(7): lea 0x100(%rbx),%rax
3b21(3): mov %rbx,%rdx
3b24(4): nop 0x0(%rax)
3b28(3): xor $0x1,(%rdx)
3b2b(4): add $0x1,%rdx
3b2f(3): cmp %rax,%rdx
3b32(2): jnz 0xfffffff6(%rip)
3b34(1): pop %rbx
3b35(1): pop %rbp
3b36(2): pop %r12
3b38(1): ret near (%rsp)

"squeeze_filter.constprop.14" :
3b40(2): push %r15
3b42(2): push %r14
3b44(7): lea 0x207795(%rip),%r14
3b4b(2): push %r13
3b4d(2): push %r12
3b4f(3): mov %rdi,%r13
3b52(1): push %rbp
3b53(1): push %rbx
3b54(7): lea 0x207885(%rip),%rbp
3b5b(3): xor %r15d,%r15d
3b5e(2): xor %ebx,%ebx
3b60(6): mov $0x7fffffff,%r12d
3b66(4): sub $0x18,%rsp
3b6a(3): cmp %r15,%rbx
3b6d(6): jb 0x193(%rip)
3b73(5): mov $0x2000,%esi
3b78(3): mov %rbp,%rdi
3b7b(3): call %r13
3b7e(3): test %rax,%rax
3b81(3): mov %rax,%r15
3b84(6): jz 0x164(%rip)
3b8a(2): xor %ebx,%ebx
3b8c(7): cmp $0x7fffffff,%r12d
3b93(2): jz 0x6d(%rip)
3b95(3): cmp %r15,%rbx
3b98(2): jnb 0xffffffd2(%rip)
3b9a(5): movsx 0x0(%rbp,%rbx,1),%eax
3b9f(3): cmp %eax,%r12d
3ba2(6): jz 0x11e(%rip)
3ba8(5): lea 0x0(%rbp,%rbx,1),%rax
3bad(3): mov %rbx,%rdi
3bb0(3): mov %rdi,%rbx
3bb3(3): movzx (%rax),%eax
3bb6(5): cmp $0x0,0x0(%r14,%rax,1)
3bbb(2): jz 0x5b(%rip)
3bbd(3): nop (%rax)
3bc0(3): cmp %r15,%rbx
3bc3(2): jb 0x73(%rip)
3bc5(3): mov %r15,%r12
3bc8(3): sub %rdi,%r12
3bcb(2): jz 0x22(%rip)
3bcd(7): mov 0x2074b4(%rip),%rcx
3bd4(3): add %rbp,%rdi
3bd7(3): mov %r12,%rdx
3bda(5): mov $0x1,%esi
3bdf(5): call 0xffffdc31(%rip)
3be4(3): cmp %rax,%r12
3be7(6): jnz 0xaa(%rip)
3bed(3): cmp %rbx,%r15
3bf0(6): mov $0x7fffffff,%r12d
3bf6(6): jbe 0xffffff7d(%rip)
3bfc(2): jmp 0xffffffac(%rip)
3bfe(2): nop 
3c00(7): lea 0x2077d9(%rip),%rax
3c07(2): xor %edi,%edi
3c09(3): mov %rdi,%rbx
3c0c(3): movzx (%rax),%eax
3c0f(5): cmp $0x0,0x0(%r14,%rax,1)
3c14(2): jnz 0xffffffac(%rip)
3c16(3): mov %rdi,%rax
3c19(4): lea 0x2(%rax),%rbx
3c1d(3): cmp %r15,%rbx
3c20(6): jnb 0xfa(%rip)
3c26(5): movzx 0x2(%rbp,%rax,1),%eax
3c2b(5): cmp $0x0,0x0(%r14,%rax,1)
3c30(6): jz 0xe2(%rip)
3c36(3): mov %rbx,%rax
3c39(6): movsx 0x0(%rbp,%rbx,1),%r12d
3c3f(3): sub %rdi,%rax
3c42(3): test %rbx,%rbx
3c45(4): lea 0x1(%rax),%r9
3c49(2): jz 0x11(%rip)
3c4b(7): lea 0x20778d(%rip),%rcx
3c52(4): cmp 0x0(%rbx,%rcx,1),%r12b
3c56(4): cmove %rax,%r9
3c5a(4): add $0x1,%rbx
3c5e(3): test %r9,%r9
3c61(6): jz 0xffffff34(%rip)
3c67(7): mov 0x20741a(%rip),%rcx
3c6e(3): add %rbp,%rdi
3c71(3): mov %r9,%rdx
3c74(5): mov $0x1,%esi
3c79(5): mov %r9,0x8(%rsp)
3c7e(5): call 0xffffdb92(%rip)
3c83(5): mov 0x8(%rsp),%r9
3c88(3): cmp %r9,%rax
3c8b(6): jz 0xffffff0a(%rip)
3c91(7): lea 0x33fc(%rip),%rsi
3c98(5): mov $0x5,%edx
3c9d(2): xor %edi,%edi
3c9f(5): call 0xffffd9f1(%rip)
3ca4(3): mov %rax,%rbx
3ca7(5): call 0xffffd969(%rip)
3cac(2): mov (%rax),%esi
3cae(3): mov %rbx,%rdx
3cb1(5): mov $0x1,%edi
3cb6(2): xor %eax,%eax
3cb8(5): call 0xffffdb98(%rip)
3cbd(3): nop (%rax)
3cc0(4): add $0x1,%rbx
3cc4(3): cmp %r15,%rbx
3cc7(6): jz 0xfffffea3(%rip)
3ccd(5): movsx 0x0(%rbp,%rbx,1),%eax
3cd2(3): cmp %r12d,%eax
3cd5(2): jz 0xffffffeb(%rip)
3cd7(6): mov $0x7fffffff,%r12d
3cdd(5): jmp 0xfffffe8d(%rip)
3ce2(6): nop 0x0(%rax,%rax,1)
3ce8(4): add $0x18,%rsp
3cec(1): pop %rbx
3ced(1): pop %rbp
3cee(2): pop %r12
3cf0(2): pop %r13
3cf2(2): pop %r14
3cf4(2): pop %r15
3cf6(1): ret near (%rsp)
3cf7(9): nop 0x0(%rax,%rax,1)
3d00(7): cmp $0x7fffffff,%r12d
3d07(6): jnz 0xfffffe93(%rip)
3d0d(5): jmp 0xfffffe9b(%rip)
3d12(3): mov %rbx,%rax
3d15(5): jmp 0xffffff04(%rip)
3d1a(6): jnz 0xfffffeab(%rip)
3d20(4): lea 0x1(%rax),%rdx
3d24(5): movzx 0x1(%rbp,%rax,1),%eax
3d29(5): cmp $0x0,0x0(%r14,%rax,1)
3d2e(6): jz 0xfffffe97(%rip)
3d34(3): mov %rdx,%rbx
3d37(5): jmp 0xfffffe89(%rip)

"usage" :
3d40(2): push %r13
3d42(2): push %r12
3d44(5): mov $0x5,%edx
3d49(1): push %rbp
3d4a(1): push %rbx
3d4b(2): mov %edi,%ebp
3d4d(7): sub $0x88,%rsp
3d54(7): mov 0x20969d(%rip),%rbx
3d5b(9): mov $0x28,%rax
3d64(5): mov %rax,0x78(%rsp)
3d69(2): xor %eax,%eax
3d6b(2): test %edi,%edi
3d6d(2): jz 0x30(%rip)
3d6f(7): lea 0x385a(%rip),%rsi
3d76(2): xor %edi,%edi
3d78(5): call 0xffffd918(%rip)
3d7d(7): mov 0x20733c(%rip),%rdi
3d84(3): mov %rax,%rdx
3d87(3): mov %rbx,%rcx
3d8a(5): mov $0x1,%esi
3d8f(2): xor %eax,%eax
3d91(5): call 0xffffdb0f(%rip)
3d96(2): mov %ebp,%edi
3d98(5): call 0xffffdae8(%rip)
3d9d(7): lea 0x3854(%rip),%rsi
3da4(2): xor %edi,%edi
3da6(5): call 0xffffd8ea(%rip)
3dab(3): mov %rbx,%rdx
3dae(3): mov %rax,%rsi
3db1(5): mov $0x1,%edi
3db6(2): xor %eax,%eax
3db8(5): call 0xffffda88(%rip)
3dbd(7): mov 0x2072c4(%rip),%rbx
3dc4(7): lea 0x3855(%rip),%rsi
3dcb(5): mov $0x5,%edx
3dd0(2): xor %edi,%edi
3dd2(5): call 0xffffd8be(%rip)
3dd7(3): mov %rbx,%rsi
3dda(3): mov %rax,%rdi
3ddd(5): call 0xffffd9b3(%rip)
3de2(7): mov 0x20729f(%rip),%rbx
3de9(7): lea 0x3a20(%rip),%rsi
3df0(5): mov $0x5,%edx
3df5(2): xor %edi,%edi
3df7(5): call 0xffffd899(%rip)
3dfc(3): mov %rbx,%rsi
3dff(3): mov %rax,%rdi
3e02(5): call 0xffffd98e(%rip)
3e07(7): mov 0x20727a(%rip),%rbx
3e0e(7): lea 0x3a2b(%rip),%rsi
3e15(5): mov $0x5,%edx
3e1a(2): xor %edi,%edi
3e1c(5): call 0xffffd874(%rip)
3e21(3): mov %rbx,%rsi
3e24(3): mov %rax,%rdi
3e27(5): call 0xffffd969(%rip)
3e2c(7): mov 0x207255(%rip),%rbx
3e33(7): lea 0x3a3e(%rip),%rsi
3e3a(5): mov $0x5,%edx
3e3f(2): xor %edi,%edi
3e41(5): call 0xffffd84f(%rip)
3e46(3): mov %rbx,%rsi
3e49(3): mov %rax,%rdi
3e4c(5): call 0xffffd944(%rip)
3e51(7): mov 0x207230(%rip),%rbx
3e58(7): lea 0x3b91(%rip),%rsi
3e5f(5): mov $0x5,%edx
3e64(2): xor %edi,%edi
3e66(5): call 0xffffd82a(%rip)
3e6b(3): mov %rbx,%rsi
3e6e(3): mov %rax,%rdi
3e71(5): call 0xffffd91f(%rip)
3e76(7): mov 0x20720b(%rip),%rbx
3e7d(7): lea 0x3d1c(%rip),%rsi
3e84(5): mov $0x5,%edx
3e89(2): xor %edi,%edi
3e8b(5): call 0xffffd805(%rip)
3e90(3): mov %rbx,%rsi
3e93(3): mov %rax,%rdi
3e96(5): call 0xffffd8fa(%rip)
3e9b(7): mov 0x2071e6(%rip),%rbx
3ea2(7): lea 0x3e97(%rip),%rsi
3ea9(5): mov $0x5,%edx
3eae(2): xor %edi,%edi
3eb0(5): call 0xffffd7e0(%rip)
3eb5(3): mov %rbx,%rsi
3eb8(3): mov %rax,%rdi
3ebb(7): lea 0x31de(%rip),%rbx
3ec2(5): call 0xffffd8ce(%rip)
3ec7(7): lea 0x31d5(%rip),%rax
3ece(7): lea 0x320f(%rip),%rcx
3ed5(9): mov $0x0,0x60(%rsp)
3ede(9): mov $0x0,0x68(%rsp)
3ee7(3): mov %rsp,%rdx
3eea(4): mov %rax,(%rsp)
3eee(7): lea 0x31b0(%rip),%rax
3ef5(5): mov %rcx,0x30(%rsp)
3efa(7): lea 0x31ed(%rip),%rcx
3f01(5): mov %rax,0x8(%rsp)
3f06(7): lea 0x3210(%rip),%rax
3f0d(5): mov %rcx,0x40(%rsp)
3f12(7): lea 0x31df(%rip),%rcx
3f19(5): mov %rax,0x10(%rsp)
3f1e(7): lea 0x3190(%rip),%rax
3f25(5): mov %rcx,0x50(%rsp)
3f2a(5): mov %rax,0x18(%rsp)
3f2f(7): lea 0x3195(%rip),%rax
3f36(5): mov %rax,0x20(%rsp)
3f3b(7): lea 0x3193(%rip),%rax
3f42(5): mov %rax,0x28(%rsp)
3f47(5): mov %rax,0x38(%rsp)
3f4c(5): mov %rax,0x48(%rsp)
3f51(5): mov %rax,0x58(%rsp)
3f56(a): nop 0x0(%rax,%rax,1)
3f60(4): add $0x10,%rdx
3f64(3): mov (%rdx),%rdi
3f67(3): test %rdi,%rdi
3f6a(2): jz 0x15(%rip)
3f6c(5): mov $0x3,%ecx
3f71(3): mov %rbx,%rsi
3f74(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3f76(3): setnbe %al
3f79(2): sbb $0x0,%al
3f7b(2): test %al,%al
3f7d(2): jnz 0xffffffe3(%rip)
3f7f(4): mov 0x8(%rdx),%r12
3f83(2): xor %edi,%edi
3f85(5): mov $0x5,%edx
3f8a(7): lea 0x3171(%rip),%rsi
3f91(3): test %r12,%r12
3f94(6): jz 0xc7(%rip)
3f9a(5): call 0xffffd6f6(%rip)
3f9f(7): lea 0x3f72(%rip),%rcx
3fa6(7): lea 0x316c(%rip),%rdx
3fad(3): mov %rax,%rsi
3fb0(5): mov $0x1,%edi
3fb5(2): xor %eax,%eax
3fb7(5): call 0xffffd889(%rip)
3fbc(2): xor %esi,%esi
3fbe(5): mov $0x5,%edi
3fc3(5): call 0xffffd86d(%rip)
3fc8(3): test %rax,%rax
3fcb(2): jz 0x1e(%rip)
3fcd(7): lea 0x3153(%rip),%rsi
3fd4(5): mov $0x3,%edx
3fd9(3): mov %rax,%rdi
3fdc(5): call 0xffffd644(%rip)
3fe1(2): test %eax,%eax
3fe3(6): jnz 0x10d(%rip)
3fe9(7): lea 0x313b(%rip),%rsi
3ff0(2): xor %edi,%edi
3ff2(5): mov $0x5,%edx
3ff7(5): call 0xffffd699(%rip)
3ffc(7): lea 0x309d(%rip),%rcx
4003(7): lea 0x3f0e(%rip),%rdx
400a(3): mov %rax,%rsi
400d(5): mov $0x1,%edi
4012(2): xor %eax,%eax
4014(5): call 0xffffd82c(%rip)
4019(3): cmp %rbx,%r12
401c(7): lea 0x309c(%rip),%rcx
4023(7): lea 0x48b7(%rip),%rbx
402a(4): cmove %rcx,%rbx
402e(7): lea 0x3f53(%rip),%rsi
4035(2): xor %edi,%edi
4037(5): mov $0x5,%edx
403c(5): call 0xffffd654(%rip)
4041(3): mov %rbx,%rcx
4044(3): mov %rax,%rsi
4047(3): mov %r12,%rdx
404a(5): mov $0x1,%edi
404f(2): xor %eax,%eax
4051(5): call 0xffffd7ef(%rip)
4056(5): jmp 0xfffffd40(%rip)
405b(5): call 0xffffd635(%rip)
4060(7): lea 0x3eb1(%rip),%rcx
4067(7): lea 0x30ab(%rip),%rdx
406e(3): mov %rax,%rsi
4071(5): mov $0x1,%edi
4076(2): xor %eax,%eax
4078(5): call 0xffffd7c8(%rip)
407d(2): xor %esi,%esi
407f(5): mov $0x5,%edi
4084(5): call 0xffffd7ac(%rip)
4089(3): test %rax,%rax
408c(2): jz 0x1a(%rip)
408e(7): lea 0x3092(%rip),%rsi
4095(5): mov $0x3,%edx
409a(3): mov %rax,%rdi
409d(5): call 0xffffd583(%rip)
40a2(2): test %eax,%eax
40a4(2): jnz 0x45(%rip)
40a6(7): lea 0x307e(%rip),%rsi
40ad(5): mov $0x5,%edx
40b2(2): xor %edi,%edi
40b4(7): lea 0x2fe5(%rip),%r12
40bb(7): lea 0x2ffd(%rip),%rbx
40c2(5): call 0xffffd5ce(%rip)
40c7(7): lea 0x2fd2(%rip),%rcx
40ce(7): lea 0x3e43(%rip),%rdx
40d5(3): mov %rax,%rsi
40d8(5): mov $0x1,%edi
40dd(2): xor %eax,%eax
40df(5): call 0xffffd761(%rip)
40e4(5): jmp 0xffffff4a(%rip)
40e9(7): lea 0x2fb0(%rip),%r12
40f0(7): mov 0x206f91(%rip),%r13
40f7(7): lea 0x3e42(%rip),%rsi
40fe(2): xor %edi,%edi
4100(5): mov $0x5,%edx
4105(5): call 0xffffd58b(%rip)
410a(3): mov %r13,%rsi
410d(3): mov %rax,%rdi
4110(5): call 0xffffd680(%rip)
4115(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
4120(7): mov %rdi,0x2092c9(%rip)
4127(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
4130(7): mov %dil,0x2092b1(%rip)
4137(1): ret near (%rsp)

"close_stdout" :
4140(1): push %rbp
4141(1): push %rbx
4142(4): sub $0x8,%rsp
4146(7): mov 0x206f3b(%rip),%rdi
414d(5): call 0x2bd3(%rip)
4152(2): test %eax,%eax
4154(2): jz 0x18(%rip)
4156(5): call 0xffffd4ba(%rip)
415b(7): cmp $0x0,0x209286(%rip)
4162(3): mov %rax,%rbx
4165(2): jz 0x1e(%rip)
4167(3): cmp $0x20,(%rax)
416a(2): jnz 0x19(%rip)
416c(7): mov 0x206f4d(%rip),%rdi
4173(5): call 0x2bad(%rip)
4178(2): test %eax,%eax
417a(2): jnz 0x48(%rip)
417c(4): add $0x8,%rsp
4180(1): pop %rbx
4181(1): pop %rbp
4182(1): ret near (%rsp)
4183(7): lea 0x2f0a(%rip),%rsi
418a(2): xor %edi,%edi
418c(5): mov $0x5,%edx
4191(5): call 0xffffd4ff(%rip)
4196(7): mov 0x209253(%rip),%rdi
419d(3): mov %rax,%rbp
41a0(3): test %rdi,%rdi
41a3(2): jz 0x2a(%rip)
41a5(5): call 0x1b9b(%rip)
41aa(2): mov (%rbx),%esi
41ac(7): lea 0x41a1(%rip),%rdx
41b3(3): mov %rax,%rcx
41b6(3): mov %rbp,%r8
41b9(2): xor %edi,%edi
41bb(2): xor %eax,%eax
41bd(5): call 0xffffd693(%rip)
41c2(6): mov 0x206e50(%rip),%edi
41c8(5): call 0xffffd468(%rip)
41cd(2): mov (%rbx),%esi
41cf(7): lea 0x4182(%rip),%rdx
41d6(3): mov %rax,%rcx
41d9(2): xor %edi,%edi
41db(2): xor %eax,%eax
41dd(5): call 0xffffd673(%rip)
41e2(2): jmp 0xffffffe0(%rip)

"fadvise" :
4200(3): test %rdi,%rdi
4203(2): jz 0x1d(%rip)
4205(1): push %rbx
4206(2): mov %esi,%ebx
4208(5): call 0xffffd5b8(%rip)
420d(2): mov %ebx,%ecx
420f(2): xor %edx,%edx
4211(2): xor %esi,%esi
4213(1): pop %rbx
4214(2): mov %eax,%edi
4216(5): jmp 0xffffd54a(%rip)
421b(5): nop 0x0(%rax,%rax,1)
4220(2): REP ret near (%rsp)

"set_program_name" :
4230(3): test %rdi,%rdi
4233(1): push %rbx
4234(2): jz 0x79(%rip)
4236(5): mov $0x2f,%esi
423b(3): mov %rdi,%rbx
423e(5): call 0xffffd4c2(%rip)
4243(3): test %rax,%rax
4246(2): jz 0x57(%rip)
4248(4): lea 0x1(%rax),%r8
424c(3): mov %r8,%rdx
424f(3): sub %rbx,%rdx
4252(4): cmp $0x6,%rdx
4256(2): jle 0x47(%rip)
4258(4): lea 0xfffffffa(%rax),%rsi
425c(7): lea 0x4135(%rip),%rdi
4263(5): mov $0x7,%ecx
4268(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
426a(3): setnbe %dl
426d(3): sbb $0x0,%dl
4270(2): test %dl,%dl
4272(2): jnz 0x2b(%rip)
4274(7): lea 0x4125(%rip),%rdi
427b(5): mov $0x3,%ecx
4280(3): mov %r8,%rsi
4283(3): mov %r8,%rbx
4286(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4288(3): setnbe %dl
428b(3): sbb $0x0,%dl
428e(2): test %dl,%dl
4290(2): jnz 0xd(%rip)
4292(4): lea 0x4(%rax),%rbx
4296(7): mov %rbx,0x206de3(%rip)
429d(7): mov %rbx,0x209154(%rip)
42a4(7): mov %rbx,0x206df5(%rip)
42ab(1): pop %rbx
42ac(1): ret near (%rsp)
42ad(7): mov 0x206e0c(%rip),%rcx
42b4(7): lea 0x40a5(%rip),%rdi
42bb(5): mov $0x37,%edx
42c0(5): mov $0x1,%esi
42c5(5): call 0xffffd5cb(%rip)
42ca(5): call 0xffffd336(%rip)

"gettext_quote.part.1" :
42d0(1): push %rbp
42d1(1): push %rbx
42d2(3): mov %rdi,%rbp
42d5(2): mov %esi,%ebx
42d7(4): sub $0x8,%rsp
42db(5): call 0x2b25(%rip)
42e0(3): movzx (%rax),%edx
42e3(3): and $0xdf,%edx
42e6(3): cmp $0x55,%dl
42e9(2): jz 0x77(%rip)
42eb(3): cmp $0x47,%dl
42ee(2): jz 0x22(%rip)
42f0(7): lea 0x40bc(%rip),%rax
42f7(7): lea 0x40b7(%rip),%rdx
42fe(3): cmp $0x9,%ebx
4301(4): cmovne %rdx,%rax
4305(4): add $0x8,%rsp
4309(1): pop %rbx
430a(1): pop %rbp
430b(1): ret near (%rsp)
430c(4): nop 0x0(%rax)
4310(4): movzx 0x1(%rax),%edx
4314(3): and $0xdf,%edx
4317(3): cmp $0x42,%dl
431a(2): jnz 0xffffffd6(%rip)
431c(4): cmp $0x31,0x2(%rax)
4320(2): jnz 0xffffffd0(%rip)
4322(4): cmp $0x38,0x3(%rax)
4326(2): jnz 0xffffffca(%rip)
4328(4): cmp $0x30,0x4(%rax)
432c(2): jnz 0xffffffc4(%rip)
432e(4): cmp $0x33,0x5(%rax)
4332(2): jnz 0xffffffbe(%rip)
4334(4): cmp $0x30,0x6(%rax)
4338(2): jnz 0xffffffb8(%rip)
433a(4): cmp $0x0,0x7(%rax)
433e(2): jnz 0xffffffb2(%rip)
4340(4): cmp $0x60,0x0(%rbp)
4344(7): lea 0x4061(%rip),%rax
434b(7): lea 0x405e(%rip),%rdx
4352(4): cmovne %rdx,%rax
4356(4): add $0x8,%rsp
435a(1): pop %rbx
435b(1): pop %rbp
435c(1): ret near (%rsp)
435d(3): nop (%rax)
4360(4): movzx 0x1(%rax),%edx
4364(3): and $0xdf,%edx
4367(3): cmp $0x54,%dl
436a(2): jnz 0xffffff86(%rip)
436c(4): movzx 0x2(%rax),%edx
4370(3): and $0xdf,%edx
4373(3): cmp $0x46,%dl
4376(6): jnz 0xffffff7a(%rip)
437c(4): cmp $0x2d,0x3(%rax)
4380(6): jnz 0xffffff70(%rip)
4386(4): cmp $0x38,0x4(%rax)
438a(6): jnz 0xffffff66(%rip)
4390(4): cmp $0x0,0x5(%rax)
4394(6): jnz 0xffffff5c(%rip)
439a(4): cmp $0x60,0x0(%rbp)
439e(7): lea 0x3fff(%rip),%rax
43a5(7): lea 0x3ffc(%rip),%rdx
43ac(4): cmovne %rdx,%rax
43b0(4): add $0x8,%rsp
43b4(1): pop %rbx
43b5(1): pop %rbp
43b6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
43c0(2): push %r15
43c2(2): push %r14
43c4(3): mov %r8d,%r15d
43c7(2): push %r13
43c9(2): push %r12
43cb(3): mov %rdi,%r14
43ce(1): push %rbp
43cf(1): push %rbx
43d0(3): mov %r9d,%ebx
43d3(3): mov %rsi,%r13
43d6(3): mov %rcx,%rbp
43d9(3): and $0x2,%ebx
43dc(7): sub $0xb8,%rsp
43e3(8): mov 0xf0(%rsp),%rax
43eb(5): mov %rdx,0x10(%rsp)
43f0(5): mov %r8d,0x8(%rsp)
43f5(5): mov %r9d,0x78(%rsp)
43fa(5): mov %rax,0x20(%rsp)
43ff(8): mov 0xf8(%rsp),%rax
4407(5): mov %rax,0x68(%rsp)
440c(8): mov 0x100(%rsp),%rax
4414(5): mov %rax,0x60(%rsp)
4419(9): mov $0x28,%rax
4422(8): mov %rax,0xa8(%rsp)
442a(2): xor %eax,%eax
442c(5): call 0xffffd274(%rip)
4431(4): cmp $0xa,%r15d
4435(5): mov %rax,0x58(%rsp)
443a(6): jnbe 0x11b5(%rip)
4440(7): lea 0x3fd9(%rip),%rcx
4447(3): mov %r15d,%edx
444a(4): movsxd 0x0(%rcx,%rdx,4),%rax
444e(3): add %rcx,%rax
4451(2): jmp %rax
4453(5): mov $0x1,0xe(%rsp)
4458(5): mov $0x0,0x7c(%rsp)
445d(3): xor %r12d,%r12d
4460(9): mov $0x0,0x50(%rsp)
4469(5): mov $0x1,0xf(%rsp)
446e(5): mov $0x0,0xd(%rsp)
4473(7): lea 0x3f3b(%rip),%rax
447a(9): mov $0x1,0x18(%rsp)
4483(3): xor %r15d,%r15d
4486(8): mov $0x2,0x8(%rsp)
448e(5): mov %rax,0x48(%rsp)
4493(3): xor %r11d,%r11d
4496(3): mov %rbp,%rax
4499(3): mov %r12d,%r8d
449c(3): mov %r11,%rbp
449f(3): mov %rax,%r11
44a2(6): nop 0x0(%rax,%rax,1)
44a8(3): cmp %rbp,%r11
44ab(4): setnz %r12b
44af(4): cmp $0xffffffff,%r11
44b3(2): jnz 0xf(%rip)
44b5(5): mov 0x10(%rsp),%rax
44ba(4): cmp $0x0,0x0(%rax,%rbp,1)
44be(4): setnz %r12b
44c2(3): test %r12b,%r12b
44c5(6): jz 0x65b(%rip)
44cb(5): cmp $0x2,0x8(%rsp)
44d0(5): mov 0x10(%rsp),%rdi
44d5(4): lea 0x0(%rdi,%rbp,1),%r9
44d9(3): setnz %al
44dc(4): and 0xd(%rsp),%al
44e0(3): mov %eax,%r10d
44e3(6): jz 0xad(%rip)
44e9(5): mov 0x18(%rsp),%rax
44ee(3): test %rax,%rax
44f1(6): jz 0x42f(%rip)
44f7(4): cmp $0xffffffff,%r11
44fb(5): lea 0x0(%rbp,%rax,1),%rbx
4500(2): jnz 0x30(%rip)
4502(4): cmp $0x1,%rax
4506(2): jbe 0x2a(%rip)
4508(5): mov %r8b,0x38(%rsp)
450d(5): mov %r10b,0x30(%rsp)
4512(5): mov %r9,0x28(%rsp)
4517(5): call 0xffffd199(%rip)
451c(6): movzx 0x38(%rsp),%r8d
4522(6): movzx 0x30(%rsp),%r10d
4528(3): mov %rax,%r11
452b(5): mov 0x28(%rsp),%r9
4530(3): cmp %r11,%rbx
4533(5): mov %r10b,0x28(%rsp)
4538(6): jnbe 0x5b8(%rip)
453e(5): mov 0x18(%rsp),%rdx
4543(5): mov 0x48(%rsp),%rsi
4548(3): mov %r9,%rdi
454b(5): mov %r11,0x40(%rsp)
4550(5): mov %r8b,0x38(%rsp)
4555(5): mov %r9,0x30(%rsp)
455a(5): call 0xffffd226(%rip)
455f(2): test %eax,%eax
4561(5): mov 0x30(%rsp),%r9
4566(6): movzx 0x38(%rsp),%r8d
456c(5): mov 0x40(%rsp),%r11
4571(6): jnz 0x57f(%rip)
4577(5): cmp $0x0,0xf(%rsp)
457c(6): movzx 0x28(%rsp),%r10d
4582(6): jnz 0xf83(%rip)
4588(8): nop 0x0(%rax,%rax,1)
4590(4): movzx (%r9),%ebx
4594(3): cmp $0x7e,%bl
4597(6): jnbe 0x321(%rip)
459d(7): lea 0x3ea8(%rip),%rcx
45a4(3): movzx %bl,%edx
45a7(4): movsxd 0x0(%rcx,%rdx,4),%rax
45ab(3): add %rcx,%rax
45ae(2): jmp %rax
45b0(3): xor %r10d,%r10d
45b3(4): cmp $0x1,%r11
45b7(3): setnz %al
45ba(4): cmp $0xffffffff,%r11
45be(2): jnz 0xe(%rip)
45c0(5): mov 0x10(%rsp),%rax
45c5(4): cmp $0x0,0x1(%rax)
45c9(3): setnz %al
45cc(5): cmp $0x2,0x8(%rsp)
45d1(3): setz %dl
45d4(2): test %al,%al
45d6(6): jz 0x252(%rip)
45dc(3): xor %r12d,%r12d
45df(2): xor %eax,%eax
45e1(7): nop 0x0(%rax)
45e8(5): cmp $0x1,0xd(%rsp)
45ed(6): jnz 0x115(%rip)
45f3(2): test %dl,%dl
45f5(6): jnz 0x10d(%rip)
45fb(5): mov 0x20(%rsp),%rsi
4600(3): test %rsi,%rsi
4603(2): jz 0x16(%rip)
4605(2): mov %ebx,%edx
4607(3): shr $0x5,%dl
460a(3): movzx %dl,%edx
460d(3): mov 0x0(%rsi,%rdx,4),%edx
4610(3): bt %ebx,%edx
4613(6): jb 0x150(%rip)
4619(3): test %r10b,%r10b
461c(6): jnz 0x147(%rip)
4622(3): xor $0x1,%eax
4625(4): add $0x1,%rbp
4629(3): and %r8d,%eax
462c(2): test %al,%al
462e(2): jz 0x22(%rip)
4630(3): cmp %r15,%r13
4633(2): jbe 0x7(%rip)
4635(5): mov $0x27,0x0(%r14,%r15,1)
463a(4): lea 0x1(%r15),%rax
463e(3): cmp %rax,%r13
4641(2): jbe 0x8(%rip)
4643(6): mov $0x27,0x1(%r14,%r15,1)
4649(4): add $0x2,%r15
464d(3): xor %r8d,%r8d
4650(3): cmp %r13,%r15
4653(2): jnb 0x6(%rip)
4655(4): mov %bl,0x0(%r14,%r15,1)
4659(5): movzx 0xe(%rsp),%edi
465e(4): add $0x1,%r15
4662(5): mov $0x0,%eax
4667(3): test %r12b,%r12b
466a(3): cmove %eax,%edi
466d(5): mov %dil,0xe(%rsp)
4672(5): jmp 0xfffffe36(%rip)
4677(9): nop 0x0(%rax,%rax,1)
4680(3): xor %r10d,%r10d
4683(4): mov 0x8(%rsp),%eax
4687(3): cmp $0x2,%eax
468a(6): jz 0x5be(%rip)
4690(3): cmp $0x5,%eax
4693(6): jz 0x575(%rip)
4699(3): cmp $0x2,%eax
469c(5): mov $0x3f,%ebx
46a1(3): setz %dl
46a4(3): xor %r12d,%r12d
46a7(2): xor %eax,%eax
46a9(5): jmp 0xffffff3f(%rip)
46ae(2): nop 
46b0(3): xor %r10d,%r10d
46b3(5): cmp $0x2,0x8(%rsp)
46b8(6): jz 0x508(%rip)
46be(5): mov %r12b,0x7c(%rsp)
46c3(2): xor %edx,%edx
46c5(2): xor %eax,%eax
46c7(5): mov $0x27,%ebx
46cc(5): jmp 0xffffff1c(%rip)
46d1(7): nop 0x0(%rax)
46d8(5): mov $0x9,%edx
46dd(5): mov $0x74,%ebx
46e2(5): cmp $0x2,0x8(%rsp)
46e7(3): setz %al
46ea(4): and 0xf(%rsp),%al
46ee(6): jnz 0x150(%rip)
46f4(5): cmp $0x0,0xd(%rsp)
46f9(2): jnz 0x67(%rip)
46fb(2): mov %edx,%ebx
46fd(3): xor %r12d,%r12d
4700(2): xor %eax,%eax
4702(5): cmp $0x0,0xf(%rsp)
4707(6): jnz 0xfffffef4(%rip)
470d(5): jmp 0xffffff0c(%rip)
4712(6): nop 0x0(%rax,%rax,1)
4718(5): mov $0x8,%edx
471d(5): mov $0x62,%ebx
4722(2): jmp 0xffffffd2(%rip)
4724(4): nop 0x0(%rax)
4728(5): cmp $0x2,0x8(%rsp)
472d(6): jz 0x3d3(%rip)
4733(5): cmp $0x0,0xd(%rsp)
4738(6): jz 0x218(%rip)
473e(5): cmp $0x0,0xf(%rsp)
4743(6): jz 0x20d(%rip)
4749(6): cmp $0x0,0x18(%rsp)
474f(6): jnz 0x3bc(%rip)
4755(5): mov $0x5c,%ebx
475a(6): nop 0x0(%rax,%rax,1)
4760(3): xor %r12d,%r12d
4763(5): cmp $0x2,0x8(%rsp)
4768(3): setz %dl
476b(5): cmp $0x0,0xf(%rsp)
4770(2): mov %edx,%eax
4772(6): jnz 0x856(%rip)
4778(3): mov %r8d,%eax
477b(3): xor $0x1,%eax
477e(2): and %dl,%al
4780(2): jz 0x31(%rip)
4782(3): cmp %r15,%r13
4785(2): jbe 0x7(%rip)
4787(5): mov $0x27,0x0(%r14,%r15,1)
478c(4): lea 0x1(%r15),%rdx
4790(3): cmp %rdx,%r13
4793(2): jbe 0x8(%rip)
4795(6): mov $0x24,0x1(%r14,%r15,1)
479b(4): lea 0x2(%r15),%rdx
479f(3): cmp %rdx,%r13
47a2(2): jbe 0x8(%rip)
47a4(6): mov $0x27,0x2(%r14,%r15,1)
47aa(4): add $0x3,%r15
47ae(3): mov %eax,%r8d
47b1(3): cmp %r15,%r13
47b4(2): jbe 0x7(%rip)
47b6(5): mov $0x5c,0x0(%r14,%r15,1)
47bb(4): add $0x1,%r15
47bf(4): add $0x1,%rbp
47c3(5): jmp 0xfffffe8d(%rip)
47c8(8): nop 0x0(%rax,%rax,1)
47d0(5): cmp $0x0,0xd(%rsp)
47d5(6): jnz 0x1ce(%rip)
47db(2): xor %edx,%edx
47dd(5): test $0x1,0x78(%rsp)
47e2(6): jz 0xffffff19(%rip)
47e8(4): add $0x1,%rbp
47ec(5): jmp 0xfffffcbc(%rip)
47f1(7): nop 0x0(%rax)
47f8(5): cmp $0x2,0x8(%rsp)
47fd(3): setz %dl
4800(2): xor %eax,%eax
4802(5): jmp 0xfffffde6(%rip)
4807(9): nop 0x0(%rax,%rax,1)
4810(5): mov $0x7,%edx
4815(5): mov $0x61,%ebx
481a(5): jmp 0xfffffeda(%rip)
481f(1): nop 
4820(5): cmp $0x2,0x8(%rsp)
4825(3): setz %dl
4828(3): test %rbp,%rbp
482b(6): jnz 0xfffffdb1(%rip)
4831(5): movzx 0xf(%rsp),%eax
4836(2): and %dl,%al
4838(6): jz 0xfffffdb0(%rip)
483e(3): mov %r11,%rbp
4841(8): mov $0x2,0x8(%rsp)
4849(5): jmp 0x700(%rip)
484e(2): nop 
4850(5): cmp $0x2,0x8(%rsp)
4855(3): setz %dl
4858(3): xor %r12d,%r12d
485b(2): jmp 0xffffffd6(%rip)
485d(3): nop (%rax)
4860(5): cmp $0x2,0x8(%rsp)
4865(5): mov $0x20,%ebx
486a(3): setz %dl
486d(2): jmp 0xffffffc4(%rip)
486f(1): nop 
4870(5): mov $0xd,%edx
4875(5): mov $0x72,%ebx
487a(5): jmp 0xfffffe68(%rip)
487f(1): nop 
4880(5): mov $0xc,%edx
4885(5): mov $0x66,%ebx
488a(5): jmp 0xfffffe6a(%rip)
488f(1): nop 
4890(5): mov $0xb,%edx
4895(5): mov $0x76,%ebx
489a(5): jmp 0xfffffe5a(%rip)
489f(1): nop 
48a0(5): mov $0xa,%edx
48a5(5): mov $0x6e,%ebx
48aa(5): jmp 0xfffffe38(%rip)
48af(1): nop 
48b0(3): xor %r10d,%r10d
48b3(5): nop 0x0(%rax,%rax,1)
48b8(6): cmp $0x1,0x58(%rsp)
48be(6): jnz 0x3aa(%rip)
48c4(5): mov %r11,0x38(%rsp)
48c9(5): mov %r8b,0x30(%rsp)
48ce(5): mov %r10b,0x28(%rsp)
48d3(5): call 0xffffd00d(%rip)
48d8(3): mov (%rax),%rcx
48db(3): movzx %bl,%edx
48de(6): movzx 0x28(%rsp),%r10d
48e4(6): movzx 0x30(%rsp),%r8d
48ea(5): mov 0x38(%rsp),%r11
48ef(5): mov $0x1,%edi
48f4(4): movzx 0x0(%rcx,%rdx,2),%eax
48f8(4): and $0x4000,%ax
48fc(4): setnz %r12b
4900(3): setz %al
4903(4): and 0xd(%rsp),%al
4907(2): test %al,%al
4909(6): jnz 0x998(%rip)
490f(5): cmp $0x2,0x8(%rsp)
4914(3): setz %dl
4917(5): jmp 0xfffffcd1(%rip)
491c(4): nop 0x0(%rax)
4920(4): movzx (%r9),%ebx
4924(3): cmp $0x7e,%bl
4927(2): jnbe 0xffffff89(%rip)
4929(7): lea 0x3d18(%rip),%rcx
4930(3): movzx %bl,%edx
4933(4): movsxd 0x0(%rcx,%rdx,4),%rax
4937(3): add %rcx,%rax
493a(2): jmp %rax
493c(4): nop 0x0(%rax)
4940(3): xor %r10d,%r10d
4943(5): cmp $0x0,0xd(%rsp)
4948(6): jnz 0xfffffdf6(%rip)
494e(2): nop 
4950(5): mov $0x5c,%edx
4955(5): mov $0x5c,%ebx
495a(5): jmp 0xfffffd9a(%rip)
495f(1): nop 
4960(5): mov $0xc,%edx
4965(3): xor %r10d,%r10d
4968(5): mov $0x66,%ebx
496d(5): jmp 0xfffffd87(%rip)
4972(6): nop 0x0(%rax,%rax,1)
4978(5): mov $0xa,%edx
497d(3): xor %r10d,%r10d
4980(5): mov $0x6e,%ebx
4985(5): jmp 0xfffffd5d(%rip)
498a(6): nop 0x0(%rax,%rax,1)
4990(5): mov $0x61,%ebx
4995(5): jmp 0xfffffdcb(%rip)
499a(6): nop 0x0(%rax,%rax,1)
49a0(3): xor %r10d,%r10d
49a3(5): cmp $0x2,0x8(%rsp)
49a8(3): setz %dl
49ab(5): cmp $0x0,0xf(%rsp)
49b0(6): jnz 0xb9a(%rip)
49b6(3): mov %r8d,%eax
49b9(3): mov %r15,%rcx
49bc(3): xor $0x1,%eax
49bf(2): and %dl,%al
49c1(2): jz 0x2f(%rip)
49c3(3): cmp %r15,%r13
49c6(2): jbe 0x7(%rip)
49c8(5): mov $0x27,0x0(%r14,%r15,1)
49cd(4): lea 0x1(%r15),%rcx
49d1(3): cmp %rcx,%r13
49d4(2): jbe 0x8(%rip)
49d6(6): mov $0x24,0x1(%r14,%r15,1)
49dc(4): lea 0x2(%r15),%rcx
49e0(3): cmp %rcx,%r13
49e3(6): jnbe 0x636(%rip)
49e9(4): lea 0x3(%r15),%rcx
49ed(3): mov %eax,%r8d
49f0(3): cmp %rcx,%r13
49f3(2): jbe 0x7(%rip)
49f5(5): mov $0x5c,0x0(%r14,%rcx,1)
49fa(5): cmp $0x2,0x8(%rsp)
49ff(4): lea 0x1(%rcx),%r15
4a03(6): jz 0x606(%rip)
4a09(4): lea 0x1(%rbp),%rax
4a0d(3): cmp %r11,%rax
4a10(2): jnb 0x1b(%rip)
4a12(5): mov 0x10(%rsp),%rax
4a17(5): movzx 0x1(%rax,%rbp,1),%eax
4a1c(4): mov %al,0x28(%rsp)
4a20(3): sub $0x30,%eax
4a23(2): cmp $0x9,%al
4a25(6): jbe 0x834(%rip)
4a2b(3): mov %r12d,%eax
4a2e(5): mov $0x30,%ebx
4a33(3): xor %r12d,%r12d
4a36(5): jmp 0xfffffbb2(%rip)
4a3b(5): nop 0x0(%rax,%rax,1)
4a40(5): cmp $0x2,0x8(%rsp)
4a45(3): mov %r10d,%r12d
4a48(3): setz %dl
4a4b(3): xor %r10d,%r10d
4a4e(2): xor %eax,%eax
4a50(5): jmp 0xfffffb98(%rip)
4a55(3): nop (%rax)
4a58(5): cmp $0x2,0x8(%rsp)
4a5d(3): setz %dl
4a60(3): xor %r10d,%r10d
4a63(5): jmp 0xfffffdc5(%rip)
4a68(8): nop 0x0(%rax,%rax,1)
4a70(5): cmp $0x2,0x8(%rsp)
4a75(3): setz %dl
4a78(3): xor %r10d,%r10d
4a7b(3): xor %r12d,%r12d
4a7e(5): jmp 0xfffffdb3(%rip)
4a83(5): nop 0x0(%rax,%rax,1)
4a88(5): cmp $0x2,0x8(%rsp)
4a8d(3): mov %r10d,%r12d
4a90(5): mov $0x20,%ebx
4a95(3): setz %dl
4a98(3): xor %r10d,%r10d
4a9b(5): jmp 0xfffffd96(%rip)
4aa0(5): mov $0xd,%edx
4aa5(3): xor %r10d,%r10d
4aa8(5): mov $0x72,%ebx
4aad(5): jmp 0xfffffc35(%rip)
4ab2(6): nop 0x0(%rax,%rax,1)
4ab8(5): mov $0x76,%ebx
4abd(5): jmp 0xfffffca3(%rip)
4ac2(6): nop 0x0(%rax,%rax,1)
4ac8(5): mov $0x9,%edx
4acd(3): xor %r10d,%r10d
4ad0(5): mov $0x74,%ebx
4ad5(5): jmp 0xfffffc0d(%rip)
4ada(6): nop 0x0(%rax,%rax,1)
4ae0(5): mov $0x62,%ebx
4ae5(5): jmp 0xfffffc7b(%rip)
4aea(6): nop 0x0(%rax,%rax,1)
4af0(3): xor %r10d,%r10d
4af3(5): jmp 0xfffffa9d(%rip)
4af8(8): nop 0x0(%rax,%rax,1)
4b00(5): cmp $0x0,0xf(%rsp)
4b05(6): jnz 0x96b(%rip)
4b0b(4): add $0x1,%rbp
4b0f(3): mov %r8d,%eax
4b12(3): xor %r12d,%r12d
4b15(5): mov $0x5c,%ebx
4b1a(5): jmp 0xfffffb12(%rip)
4b1f(1): nop 
4b20(5): cmp $0x2,0x8(%rsp)
4b25(5): movzx 0xf(%rsp),%ebx
4b2a(3): mov %r8d,%r12d
4b2d(3): mov %r11,%rbp
4b30(3): setz %dl
4b33(2): mov %ebx,%eax
4b35(3): test %r15,%r15
4b38(3): setz %cl
4b3b(2): and %edx,%eax
4b3d(2): and %cl,%al
4b3f(6): jnz 0xa67(%rip)
4b45(2): mov %ebx,%eax
4b47(3): xor $0x1,%eax
4b4a(2): and %al,%dl
4b4c(6): jz 0x970(%rip)
4b52(5): cmp $0x0,0x7c(%rsp)
4b57(6): jz 0x963(%rip)
4b5d(5): cmp $0x0,0xe(%rsp)
4b62(6): jnz 0x9fb(%rip)
4b68(3): test %r13,%r13
4b6b(3): setz %al
4b6e(6): cmp $0x0,0x50(%rsp)
4b74(3): setnz %dl
4b77(2): and %dl,%al
4b79(6): jz 0xa23(%rip)
4b7f(5): mov 0x50(%rsp),%r13
4b84(7): lea 0x382a(%rip),%rbx
4b8b(4): mov $0x27,(%r14)
4b8f(8): mov $0x2,0x8(%rsp)
4b97(6): mov $0x1,%r15d
4b9d(9): mov $0x1,0x18(%rsp)
4ba6(5): mov $0x0,0xf(%rsp)
4bab(5): mov %rbx,0x48(%rsp)
4bb0(4): mov %al,0x7c(%rsp)
4bb4(5): jmp 0xfffff8df(%rip)
4bb9(7): nop 0x0(%rax)
4bc0(5): cmp $0x0,0xf(%rsp)
4bc5(6): jnz 0x8ab(%rip)
4bcb(3): test %r13,%r13
4bce(6): jz 0x402(%rip)
4bd4(2): xor %edx,%edx
4bd6(6): cmp $0x0,0x50(%rsp)
4bdc(6): jnz 0x3f4(%rip)
4be2(5): mov %r13,0x50(%rsp)
4be7(4): add $0x3,%r15
4beb(2): xor %eax,%eax
4bed(5): mov %r12b,0x7c(%rsp)
4bf2(3): xor %r8d,%r8d
4bf5(3): mov %rdx,%r13
4bf8(5): mov $0x27,%ebx
4bfd(5): jmp 0xfffffa1c(%rip)
4c02(6): nop 0x0(%rax,%rax,1)
4c08(5): test $0x4,0x78(%rsp)
4c0d(2): jz 0x23(%rip)
4c0f(4): lea 0x2(%rbp),%rcx
4c13(3): cmp %r11,%rcx
4c16(2): jnb 0x1a(%rip)
4c18(5): mov 0x10(%rsp),%rax
4c1d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4c22(6): jz 0x790(%rip)
4c28(8): nop 0x0(%rax,%rax,1)
4c30(2): xor %edx,%edx
4c32(3): xor %r12d,%r12d
4c35(2): xor %eax,%eax
4c37(5): mov $0x3f,%ebx
4c3c(5): jmp 0xfffff9ac(%rip)
4c41(7): nop 0x0(%rax)
4c48(5): cmp $0x0,0xf(%rsp)
4c4d(6): jnz 0x823(%rip)
4c53(3): xor %r12d,%r12d
4c56(2): xor %eax,%eax
4c58(5): mov $0x3f,%ebx
4c5d(5): jmp 0xfffff9bc(%rip)
4c62(6): nop 0x0(%rax,%rax,1)
4c68(8): lea 0xa0(%rsp),%rax
4c70(4): cmp $0xffffffff,%r11
4c74(c): mov $0x0,0xa0(%rsp)
4c80(5): mov %rax,0x28(%rsp)
4c85(2): jnz 0x2f(%rip)
4c87(5): mov 0x10(%rsp),%rdi
4c8c(5): mov %r8b,0x40(%rsp)
4c91(5): mov %r10b,0x38(%rsp)
4c96(5): mov %r9,0x30(%rsp)
4c9b(5): call 0xffffca15(%rip)
4ca0(6): movzx 0x40(%rsp),%r8d
4ca6(6): movzx 0x38(%rsp),%r10d
4cac(3): mov %rax,%r11
4caf(5): mov 0x30(%rsp),%r9
4cb4(8): lea 0x9c(%rsp),%rax
4cbc(2): xor %ecx,%ecx
4cbe(4): mov %bl,0x7e(%rsp)
4cc2(5): mov %r8b,0x7d(%rsp)
4cc7(3): mov %rcx,%rbx
4cca(8): mov %r9,0x88(%rsp)
4cd2(5): mov %rax,0x38(%rsp)
4cd7(5): mov %r10b,0x7f(%rsp)
4cdc(8): mov %r15,0x80(%rsp)
4ce4(5): mov %r14,0x40(%rsp)
4ce9(5): mov %r13,0x70(%rsp)
4cee(5): mov %r11,0x30(%rsp)
4cf3(5): mov 0x10(%rsp),%rax
4cf8(5): lea 0x0(%rbp,%rbx,1),%r14
4cfd(5): mov 0x30(%rsp),%rdx
4d02(5): mov 0x28(%rsp),%rcx
4d07(5): mov 0x38(%rsp),%rdi
4d0c(4): lea 0x0(%rax,%r14,1),%r13
4d10(3): sub %r14,%rdx
4d13(3): mov %r13,%rsi
4d16(5): call 0x1f7a(%rip)
4d1b(3): test %rax,%rax
4d1e(3): mov %rax,%r15
4d21(2): jz 0x50(%rip)
4d23(4): cmp $0xffffffff,%rax
4d27(6): jz 0x61e(%rip)
4d2d(4): cmp $0xfffffffe,%rax
4d31(6): jz 0x5a0(%rip)
4d37(5): cmp $0x2,0x8(%rsp)
4d3c(3): setz %al
4d3f(4): and 0xf(%rsp),%al
4d43(6): jnz 0x19d(%rip)
4d49(7): mov 0x9c(%rsp),%edi
4d50(5): call 0xffffcb70(%rip)
4d55(5): mov 0x28(%rsp),%rdi
4d5a(2): test %eax,%eax
4d5c(5): mov $0x0,%eax
4d61(4): cmove %eax,%r12d
4d65(3): add %r15,%rbx
4d68(5): call 0xffffcb48(%rip)
4d6d(2): test %eax,%eax
4d6f(2): jz 0xffffff84(%rip)
4d71(3): mov %r12d,%edx
4d74(3): mov %rbx,%rdi
4d77(6): movzx 0x7d(%rsp),%r8d
4d7d(3): xor $0x1,%edx
4d80(5): movzx 0x7e(%rsp),%ebx
4d85(6): movzx 0x7f(%rsp),%r10d
4d8b(4): and 0xd(%rsp),%dl
4d8f(8): mov 0x80(%rsp),%r15
4d97(5): mov 0x40(%rsp),%r14
4d9c(5): mov 0x70(%rsp),%r13
4da1(5): mov 0x30(%rsp),%r11
4da6(4): cmp $0x1,%rdi
4daa(6): jbe 0x601(%rip)
4db0(3): mov %rdi,%rcx
4db3(2): xor %esi,%esi
4db5(6): movzx 0xf(%rsp),%r9d
4dbb(3): add %rbp,%rcx
4dbe(5): mov 0x10(%rsp),%rdi
4dc3(5): jmp 0xbb(%rip)
4dc8(8): nop 0x0(%rax,%rax,1)
4dd0(5): cmp $0x2,0x8(%rsp)
4dd5(3): setz %al
4dd8(3): test %r9b,%r9b
4ddb(6): jnz 0x4b5(%rip)
4de1(3): mov %r8d,%esi
4de4(3): xor $0x1,%esi
4de7(3): and %sil,%al
4dea(2): jz 0x31(%rip)
4dec(3): cmp %r15,%r13
4def(2): jbe 0x7(%rip)
4df1(5): mov $0x27,0x0(%r14,%r15,1)
4df6(4): lea 0x1(%r15),%rsi
4dfa(3): cmp %rsi,%r13
4dfd(2): jbe 0x8(%rip)
4dff(6): mov $0x24,0x1(%r14,%r15,1)
4e05(4): lea 0x2(%r15),%rsi
4e09(3): cmp %rsi,%r13
4e0c(2): jbe 0x8(%rip)
4e0e(6): mov $0x27,0x2(%r14,%r15,1)
4e14(4): add $0x3,%r15
4e18(3): mov %eax,%r8d
4e1b(3): cmp %r15,%r13
4e1e(2): jbe 0x7(%rip)
4e20(5): mov $0x5c,0x0(%r14,%r15,1)
4e25(4): lea 0x1(%r15),%rax
4e29(3): cmp %rax,%r13
4e2c(2): jbe 0xf(%rip)
4e2e(2): mov %ebx,%eax
4e30(3): shr $0x6,%al
4e33(3): add $0x30,%eax
4e36(5): mov %al,0x1(%r14,%r15,1)
4e3b(4): lea 0x2(%r15),%rax
4e3f(3): cmp %rax,%r13
4e42(2): jbe 0x12(%rip)
4e44(2): mov %ebx,%eax
4e46(3): shr $0x3,%al
4e49(3): and $0x7,%eax
4e4c(3): add $0x30,%eax
4e4f(5): mov %al,0x2(%r14,%r15,1)
4e54(3): and $0x7,%ebx
4e57(4): add $0x1,%rbp
4e5b(4): add $0x3,%r15
4e5f(3): add $0x30,%ebx
4e62(3): cmp %rcx,%rbp
4e65(6): jnb 0xfffff7eb(%rip)
4e6b(2): mov %edx,%esi
4e6d(3): cmp %r15,%r13
4e70(2): jbe 0x6(%rip)
4e72(4): mov %bl,0x0(%r14,%r15,1)
4e76(4): movzx 0x0(%rdi,%rbp,1),%ebx
4e7a(4): add $0x1,%r15
4e7e(2): test %dl,%dl
4e80(6): jnz 0xffffff50(%rip)
4e86(2): mov %esi,%eax
4e88(3): xor $0x1,%eax
4e8b(3): and %r8d,%eax
4e8e(3): test %r10b,%r10b
4e91(2): jz 0x10(%rip)
4e93(3): cmp %r15,%r13
4e96(2): jbe 0x7(%rip)
4e98(5): mov $0x5c,0x0(%r14,%r15,1)
4e9d(4): add $0x1,%r15
4ea1(4): add $0x1,%rbp
4ea5(3): cmp %rcx,%rbp
4ea8(6): jnb 0xfffff784(%rip)
4eae(2): test %al,%al
4eb0(6): jz 0x3fe(%rip)
4eb6(3): cmp %r15,%r13
4eb9(2): jbe 0x7(%rip)
4ebb(5): mov $0x27,0x0(%r14,%r15,1)
4ec0(4): lea 0x1(%r15),%rax
4ec4(3): cmp %rax,%r13
4ec7(2): jbe 0x8(%rip)
4ec9(6): mov $0x27,0x1(%r14,%r15,1)
4ecf(4): add $0x2,%r15
4ed3(3): xor %r10d,%r10d
4ed6(3): xor %r8d,%r8d
4ed9(2): jmp 0xffffff94(%rip)
4edb(5): nop 0x0(%rax,%rax,1)
4ee0(4): cmp $0x1,%r15
4ee4(6): jz 0xfffffe65(%rip)
4eea(5): mov 0x10(%rsp),%rdi
4eef(4): lea 0x0(%rdi,%r15,1),%rcx
4ef3(5): lea 0x1(%rdi,%r14,1),%rdx
4ef8(4): lea 0x0(%rcx,%r14,1),%r8
4efc(2): jmp 0x11(%rip)
4efe(2): nop 
4f00(4): add $0x1,%rdx
4f04(3): cmp %rdx,%r8
4f07(6): jz 0xfffffe42(%rip)
4f0d(3): movzx (%rdx),%ecx
4f10(3): sub $0x5b,%ecx
4f13(3): cmp $0x21,%cl
4f16(2): jnbe 0xffffffea(%rip)
4f18(5): mov $0x1,%esi
4f1d(3): shl/sal %cl,%rsi
4f20(3): mov %rsi,%rcx
4f23(a): mov $0x8589934635,%rsi
4f2d(3): test %rsi,%rcx
4f30(2): jz 0xffffffd0(%rip)
4f32(5): mov 0x40(%rsp),%r14
4f37(5): mov 0x70(%rsp),%r13
4f3c(5): mov 0x30(%rsp),%rbp
4f41(8): mov $0x2,0x8(%rsp)
4f49(5): cmp $0x0,0xd(%rsp)
4f4e(2): jz 0x12(%rip)
4f50(2): test %al,%al
4f52(5): mov $0x4,%eax
4f57(5): cmove 0x8(%rsp),%eax
4f5c(4): mov %eax,0x8(%rsp)
4f60(4): sub $0x8,%rsp
4f64(3): mov %rbp,%rcx
4f67(3): mov %r13,%rsi
4f6a(4): push 0x68(%rsp)
4f6e(4): push 0x78(%rsp)
4f72(3): mov %r14,%rdi
4f75(2): push $0x0
4f77(8): mov 0x98(%rsp),%r9d
4f7f(5): mov 0x28(%rsp),%r8d
4f84(5): mov 0x30(%rsp),%rdx
4f89(4): and $0xfd,%r9d
4f8d(5): call 0xfffff433(%rip)
4f92(4): add $0x20,%rsp
4f96(3): mov %rax,%r15
4f99(8): mov 0xa8(%rsp),%rbx
4fa1(9): xor $0x28,%rbx
4faa(3): mov %r15,%rax
4fad(6): jnz 0x606(%rip)
4fb3(7): add $0xb8,%rsp
4fba(1): pop %rbx
4fbb(1): pop %rbp
4fbc(2): pop %r12
4fbe(2): pop %r13
4fc0(2): pop %r14
4fc2(2): pop %r15
4fc4(1): ret near (%rsp)
4fc5(3): nop (%rax)
4fc8(3): mov %r11,%rbp
4fcb(5): jmp 0xffffff7e(%rip)
4fd0(3): cmp %r15,%r13
4fd3(2): jbe 0x7(%rip)
4fd5(5): mov $0x27,0x0(%r14,%r15,1)
4fda(4): lea 0x1(%r15),%rax
4fde(3): cmp %rax,%r13
4fe1(2): jbe 0x8(%rip)
4fe3(6): mov $0x5c,0x1(%r14,%r15,1)
4fe9(4): lea 0x2(%r15),%rax
4fed(3): cmp %rax,%r13
4ff0(6): jbe 0x5f2(%rip)
4ff6(3): mov %r13,%rdx
4ff9(6): mov $0x27,0x2(%r14,%r15,1)
4fff(5): mov 0x50(%rsp),%r13
5004(5): jmp 0xfffffbde(%rip)
5009(3): mov %r12d,%eax
500c(5): mov $0x30,%ebx
5011(3): xor %r12d,%r12d
5014(5): jmp 0xfffff605(%rip)
5019(6): mov $0x27,0x2(%r14,%r15,1)
501f(5): jmp 0xfffff9ca(%rip)
5024(2): test %ebx,%ebx
5026(6): jnz 0xfffff42d(%rip)
502c(5): mov $0x1,0xd(%rsp)
5031(3): test %r13,%r13
5034(6): jnz 0x596(%rip)
503a(7): lea 0x3374(%rip),%rax
5041(9): mov $0x0,0x50(%rsp)
504a(5): mov $0x1,0xe(%rsp)
504f(5): mov $0x0,0x7c(%rsp)
5054(3): xor %r12d,%r12d
5057(5): mov $0x0,0xf(%rsp)
505c(9): mov $0x1,0x18(%rsp)
5065(5): mov %rax,0x48(%rsp)
506a(6): mov $0x1,%r15d
5070(8): mov $0x2,0x8(%rsp)
5078(5): jmp 0xfffff41b(%rip)
507d(3): nop (%rax)
5080(2): test %ebx,%ebx
5082(6): jnz 0x3fb(%rip)
5088(3): test %r13,%r13
508b(6): jz 0x22b(%rip)
5091(4): mov $0x22,(%r14)
5095(5): mov $0x1,0xe(%rsp)
509a(3): xor %r12d,%r12d
509d(5): mov $0x0,0x7c(%rsp)
50a2(9): mov $0x0,0x50(%rsp)
50ab(7): lea 0x3301(%rip),%rax
50b2(5): mov $0x0,0xf(%rsp)
50b7(5): mov $0x1,0xd(%rsp)
50bc(9): mov $0x1,0x18(%rsp)
50c5(6): mov $0x1,%r15d
50cb(5): mov %rax,0x48(%rsp)
50d0(5): jmp 0xfffff3c3(%rip)
50d5(7): lea 0x32d7(%rip),%rax
50dc(5): mov $0x1,0xe(%rsp)
50e1(5): mov $0x0,0x7c(%rsp)
50e6(3): xor %r12d,%r12d
50e9(9): mov $0x0,0x50(%rsp)
50f2(5): mov $0x1,0xf(%rsp)
50f7(5): mov $0x1,0xd(%rsp)
50fc(9): mov $0x1,0x18(%rsp)
5105(3): xor %r15d,%r15d
5108(5): mov %rax,0x48(%rsp)
510d(8): mov $0x5,0x8(%rsp)
5115(5): jmp 0xfffff37e(%rip)
511a(5): mov $0x1,0xe(%rsp)
511f(5): mov $0x0,0x7c(%rsp)
5124(3): xor %r12d,%r12d
5127(9): mov $0x0,0x50(%rsp)
5130(5): mov $0x0,0xf(%rsp)
5135(3): xor %r15d,%r15d
5138(5): mov $0x1,0xd(%rsp)
513d(9): mov $0x0,0x18(%rsp)
5146(9): mov $0x0,0x48(%rsp)
514f(5): jmp 0xfffff344(%rip)
5154(5): cmp $0xa,0x8(%rsp)
5159(2): jz 0x58(%rip)
515b(7): lea 0x3255(%rip),%rsi
5162(2): xor %edi,%edi
5164(5): mov $0x5,%edx
5169(5): call 0xffffc527(%rip)
516e(3): mov %rax,%rcx
5171(5): mov %rax,0x68(%rsp)
5176(7): lea 0x323a(%rip),%rax
517d(3): cmp %rax,%rcx
5180(6): jz 0x39e(%rip)
5186(7): lea 0x3228(%rip),%rsi
518d(2): xor %edi,%edi
518f(5): mov $0x5,%edx
5194(5): call 0xffffc4fc(%rip)
5199(3): mov %rax,%rcx
519c(5): mov %rax,0x60(%rsp)
51a1(7): lea 0x320d(%rip),%rax
51a8(3): cmp %rax,%rcx
51ab(6): jz 0x389(%rip)
51b1(3): xor %r15d,%r15d
51b4(2): test %ebx,%ebx
51b6(6): jz 0x1c7(%rip)
51bc(2): test %ebx,%ebx
51be(5): mov 0x60(%rsp),%rbx
51c3(5): setnz 0xf(%rsp)
51c8(3): xor %r12d,%r12d
51cb(3): mov %rbx,%rdi
51ce(5): call 0xffffc4e2(%rip)
51d3(5): mov %rbx,0x48(%rsp)
51d8(5): mov %rax,0x18(%rsp)
51dd(5): mov $0x1,0xe(%rsp)
51e2(5): mov $0x0,0x7c(%rsp)
51e7(9): mov $0x0,0x50(%rsp)
51f0(5): mov $0x1,0xd(%rsp)
51f5(5): jmp 0xfffff29e(%rip)
51fa(5): mov $0x1,0xe(%rsp)
51ff(5): mov $0x0,0x7c(%rsp)
5204(3): xor %r12d,%r12d
5207(9): mov $0x0,0x50(%rsp)
5210(5): mov $0x0,0xf(%rsp)
5215(3): xor %r15d,%r15d
5218(5): mov $0x0,0xd(%rsp)
521d(9): mov $0x0,0x18(%rsp)
5226(9): mov $0x0,0x48(%rsp)
522f(5): jmp 0xfffff264(%rip)
5234(5): mov $0x1,0xe(%rsp)
5239(5): mov $0x0,0x7c(%rsp)
523e(3): xor %r12d,%r12d
5241(9): mov $0x0,0x50(%rsp)
524a(5): mov $0x1,0xf(%rsp)
524f(5): mov $0x1,0xd(%rsp)
5254(5): jmp 0xfffff21f(%rip)
5259(3): cmp %r15,%r13
525c(2): jbe 0x7(%rip)
525e(5): mov $0x30,0x0(%r14,%r15,1)
5263(4): lea 0x2(%rcx),%rax
5267(3): cmp %rax,%r13
526a(2): jbe 0x8(%rip)
526c(6): mov $0x30,0x2(%r14,%rcx,1)
5272(3): mov %r12d,%eax
5275(4): lea 0x3(%rcx),%r15
5279(3): xor %r12d,%r12d
527c(5): mov $0x30,%ebx
5281(5): jmp 0xfffff367(%rip)
5286(a): nop 0x0(%rax,%rax,1)
5290(5): movzx 0xf(%rsp),%ebx
5295(3): mov %r11,%rbp
5298(4): mov %bl,0xd(%rsp)
529c(5): jmp 0xfffffcad(%rip)
52a1(5): movzx 0xd(%rsp),%edx
52a6(3): xor %r12d,%r12d
52a9(5): jmp 0xfffffb07(%rip)
52ae(3): xor %r10d,%r10d
52b1(5): jmp 0xfffffbbc(%rip)
52b6(9): mov $0x0,0x50(%rsp)
52bf(5): mov $0x1,0xe(%rsp)
52c4(3): xor %r12d,%r12d
52c7(5): mov $0x0,0x7c(%rsp)
52cc(5): jmp 0xfffffddf(%rip)
52d1(5): mov 0x30(%rsp),%r11
52d6(3): mov %r14,%rsi
52d9(3): mov %r13,%rcx
52dc(3): mov %rbx,%rax
52df(3): mov %rbx,%rdi
52e2(6): movzx 0x7d(%rsp),%r8d
52e8(5): movzx 0x7e(%rsp),%ebx
52ed(8): mov 0x88(%rsp),%r9
52f5(3): cmp %r11,%rsi
52f8(6): movzx 0x7f(%rsp),%r10d
52fe(8): mov 0x80(%rsp),%r15
5306(5): mov 0x40(%rsp),%r14
530b(5): mov 0x70(%rsp),%r13
5310(2): jnb 0x28(%rip)
5312(3): cmp $0x0,(%rcx)
5315(2): jnz 0x12(%rip)
5317(2): jmp 0x21(%rip)
5319(7): nop 0x0(%rax)
5320(5): cmp $0x0,0x0(%r9,%rax,1)
5325(2): jz 0x10(%rip)
5327(4): add $0x1,%rax
532b(5): lea 0x0(%rbp,%rax,1),%rdx
5330(3): cmp %rdx,%r11
5333(2): jnbe 0xffffffed(%rip)
5335(3): mov %rax,%rdi
5338(5): movzx 0xd(%rsp),%edx
533d(3): xor %r12d,%r12d
5340(5): jmp 0xfffffa66(%rip)
5345(3): mov %rbx,%rdi
5348(6): movzx 0x7d(%rsp),%r8d
534e(5): movzx 0x7e(%rsp),%ebx
5353(6): movzx 0x7f(%rsp),%r10d
5359(8): mov 0x80(%rsp),%r15
5361(3): xor %r12d,%r12d
5364(5): mov 0x40(%rsp),%r14
5369(5): mov 0x70(%rsp),%r13
536e(5): mov 0x30(%rsp),%r11
5373(5): movzx 0xd(%rsp),%edx
5378(5): jmp 0xfffffa2e(%rip)
537d(5): mov 0x68(%rsp),%rdx
5382(3): movzx (%rdx),%eax
5385(2): test %al,%al
5387(6): jz 0xfffffe35(%rip)
538d(3): nop (%rax)
5390(3): cmp %r15,%r13
5393(2): jbe 0x6(%rip)
5395(4): mov %al,0x0(%r14,%r15,1)
5399(4): add $0x1,%r15
539d(5): movzx 0x0(%rdx,%r15,1),%eax
53a2(2): test %al,%al
53a4(2): jnz 0xffffffec(%rip)
53a6(5): jmp 0xfffffe16(%rip)
53ab(2): mov %edx,%eax
53ad(5): jmp 0xfffff55a(%rip)
53b2(4): movzx 0x0(%rax,%rcx,1),%ebx
53b6(3): cmp $0x3e,%bl
53b9(6): jnbe 0xfffff877(%rip)
53bf(a): mov $0x8070630310989004800,%rax
53c9(4): bt %rbx,%rax
53cd(6): jnb 0xfffff863(%rip)
53d3(5): cmp $0x0,0xf(%rsp)
53d8(6): jnz 0x1ea(%rip)
53de(3): cmp %r15,%r13
53e1(2): jbe 0x7(%rip)
53e3(5): mov $0x3f,0x0(%r14,%r15,1)
53e8(4): lea 0x1(%r15),%rax
53ec(3): cmp %rax,%r13
53ef(2): jbe 0x8(%rip)
53f1(6): mov $0x22,0x1(%r14,%r15,1)
53f7(4): lea 0x2(%r15),%rax
53fb(3): cmp %rax,%r13
53fe(2): jbe 0x8(%rip)
5400(6): mov $0x22,0x2(%r14,%r15,1)
5406(4): lea 0x3(%r15),%rax
540a(3): cmp %rax,%r13
540d(2): jbe 0x8(%rip)
540f(6): mov $0x3f,0x3(%r14,%r15,1)
5415(4): add $0x4,%r15
5419(2): xor %edx,%edx
541b(3): xor %r12d,%r12d
541e(2): xor %eax,%eax
5420(3): mov %rcx,%rbp
5423(5): jmp 0xfffff1c5(%rip)
5428(2): test %ebx,%ebx
542a(6): jz 0x18e(%rip)
5430(7): lea 0x2f7e(%rip),%rax
5437(5): mov $0x1,0xe(%rsp)
543c(5): mov $0x0,0x7c(%rsp)
5441(3): xor %r12d,%r12d
5444(9): mov $0x0,0x50(%rsp)
544d(5): mov $0x1,0xf(%rsp)
5452(5): mov $0x0,0xd(%rsp)
5457(9): mov $0x1,0x18(%rsp)
5460(3): xor %r15d,%r15d
5463(5): mov %rax,0x48(%rsp)
5468(5): jmp 0xfffff02b(%rip)
546d(3): nop (%rax)
5470(3): mov %r11,%rbp
5473(5): movzx 0xf(%rsp),%eax
5478(5): jmp 0xfffffad1(%rip)
547d(7): lea 0x2f2f(%rip),%rax
5484(5): mov $0x1,0xe(%rsp)
5489(5): mov $0x0,0x7c(%rsp)
548e(3): xor %r12d,%r12d
5491(9): mov $0x0,0x50(%rsp)
549a(5): mov $0x1,0xf(%rsp)
549f(5): mov $0x1,0xd(%rsp)
54a4(9): mov $0x1,0x18(%rsp)
54ad(3): xor %r15d,%r15d
54b0(5): mov %rax,0x48(%rsp)
54b5(5): jmp 0xffffefde(%rip)
54ba(2): mov %edx,%eax
54bc(5): mov 0x48(%rsp),%rbx
54c1(3): test %rbx,%rbx
54c4(2): jz 0x2e(%rip)
54c6(2): test %al,%al
54c8(2): jz 0x2a(%rip)
54ca(3): movzx (%rbx),%ecx
54cd(3): mov %rbx,%rax
54d0(2): test %cl,%cl
54d2(2): jz 0x20(%rip)
54d4(3): mov %r15,%rdx
54d7(3): sub %r15,%rax
54da(3): cmp %rdx,%r13
54dd(2): jbe 0x6(%rip)
54df(4): mov %cl,0x0(%r14,%rdx,1)
54e3(4): add $0x1,%rdx
54e7(4): movzx 0x0(%rax,%rdx,1),%ecx
54eb(2): test %cl,%cl
54ed(2): jnz 0xffffffed(%rip)
54ef(3): mov %rdx,%r15
54f2(3): cmp %r15,%r13
54f5(6): jbe 0xfffffaa4(%rip)
54fb(5): mov $0x0,0x0(%r14,%r15,1)
5500(5): jmp 0xfffffa99(%rip)
5505(5): cmp $0x2,0x8(%rsp)
550a(5): movzx 0xf(%rsp),%ebx
550f(3): mov %r11,%rbp
5512(3): setz %al
5515(4): mov %bl,0xd(%rsp)
5519(5): jmp 0xfffffa30(%rip)
551e(4): mov 0x8(%rsp),%esi
5522(3): mov %rcx,%rdi
5525(5): call 0xffffedab(%rip)
552a(5): mov %rax,0x68(%rsp)
552f(5): jmp 0xfffffc57(%rip)
5534(4): mov 0x8(%rsp),%esi
5538(3): mov %rcx,%rdi
553b(5): call 0xffffed95(%rip)
5540(5): mov %rax,0x60(%rsp)
5545(5): jmp 0xfffffc6c(%rip)
554a(5): movzx 0xf(%rsp),%ebx
554f(3): mov %r11,%rbp
5552(2): mov %edx,%eax
5554(4): mov %bl,0xd(%rsp)
5558(5): jmp 0xfffff9f1(%rip)
555d(4): sub $0x8,%rsp
5561(6): mov $0x5,%r8d
5567(3): mov %r11,%rcx
556a(4): push 0x68(%rsp)
556e(4): push 0x78(%rsp)
5572(3): mov %r14,%rdi
5575(4): push 0x38(%rsp)
5579(8): mov 0x98(%rsp),%r9d
5581(5): mov 0x30(%rsp),%rdx
5586(5): mov 0x70(%rsp),%rsi
558b(5): call 0xffffee35(%rip)
5590(4): add $0x20,%rsp
5594(3): mov %rax,%r15
5597(5): jmp 0xfffffa02(%rip)
559c(5): movzx 0x7c(%rsp),%eax
55a1(5): jmp 0xffffff1b(%rip)
55a6(8): mov $0x2,0x8(%rsp)
55ae(5): jmp 0xfffff99b(%rip)
55b3(5): call 0xffffc10d(%rip)
55b8(5): mov $0x0,0xd(%rsp)
55bd(5): jmp 0xfffffa74(%rip)
55c2(3): mov %r11,%rbp
55c5(5): jmp 0xfffff99b(%rip)
55ca(5): mov $0x1,0xe(%rsp)
55cf(2): xor %eax,%eax
55d1(3): xor %r12d,%r12d
55d4(9): mov $0x0,0x50(%rsp)
55dd(5): jmp 0xfffff5a7(%rip)
55e2(3): mov %r13,%rdx
55e5(5): mov 0x50(%rsp),%r13
55ea(5): jmp 0xfffff5f8(%rip)
55ef(5): call 0xffffc011(%rip)

"quotearg_n_options" :
5600(2): push %r15
5602(2): push %r14
5604(3): movsxd %edi,%r15
5607(2): push %r13
5609(2): push %r12
560b(3): mov %rdx,%r14
560e(1): push %rbp
560f(1): push %rbx
5610(3): mov %rcx,%rbp
5613(4): sub $0x28,%rsp
5617(5): mov %rsi,0x8(%rsp)
561c(5): call 0xffffbff4(%rip)
5621(3): mov %rax,%r13
5624(2): mov (%rax),%eax
5626(3): test %r15d,%r15d
5629(7): mov 0x205a30(%rip),%rbx
5630(4): mov %eax,0x18(%rsp)
5634(6): js 0x16d(%rip)
563a(7): cmp %r15d,0x205a17(%rip)
5641(2): jnle 0x64(%rip)
5643(7): cmp $0x7fffffff,%r15d
564a(6): jz 0x15c(%rip)
5650(4): lea 0x1(%r15),%r12d
5654(7): lea 0x205a15(%rip),%rax
565b(3): movsxd %r12d,%rsi
565e(4): shl/sal $0x4,%rsi
5662(3): cmp %rax,%rbx
5665(6): jz 0x11b(%rip)
566b(3): mov %rbx,%rdi
566e(5): call 0xfd2(%rip)
5673(3): mov %rax,%rbx
5676(7): mov %rax,0x2059e3(%rip)
567d(7): movsxd 0x2059d4(%rip),%rdi
5684(3): mov %r12d,%edx
5687(2): xor %esi,%esi
5689(2): sub %edi,%edx
568b(4): shl/sal $0x4,%rdi
568f(3): movsxd %edx,%rdx
5692(3): add %rbx,%rdi
5695(4): shl/sal $0x4,%rdx
5699(5): call 0xffffc0a7(%rip)
569e(7): mov %r12d,0x2059b3(%rip)
56a5(3): mov 0x4(%rbp),%eax
56a8(4): shl/sal $0x4,%r15
56ac(4): sub $0x8,%rsp
56b0(3): add %r15,%rbx
56b3(4): lea 0x8(%rbp),%r15
56b7(4): mov 0x0(%rbp),%r8d
56bb(3): mov (%rbx),%r11
56be(4): mov 0x8(%rbx),%r12
56c2(3): mov %r14,%rcx
56c5(3): or $0x1,%eax
56c8(4): mov %eax,0x24(%rsp)
56cc(3): push 0x30(%rbp)
56cf(3): mov %eax,%r9d
56d2(3): push 0x28(%rbp)
56d5(2): push %r15
56d7(3): mov %r11,%rsi
56da(5): mov 0x28(%rsp),%rdx
56df(3): mov %r12,%rdi
56e2(5): mov %r11,0x30(%rsp)
56e7(5): call 0xffffecd9(%rip)
56ec(4): add $0x20,%rsp
56f0(5): mov 0x10(%rsp),%r11
56f5(3): cmp %rax,%r11
56f8(2): jnbe 0x69(%rip)
56fa(4): lea 0x1(%rax),%rsi
56fe(7): lea 0x207cfb(%rip),%rax
5705(3): cmp %rax,%r12
5708(3): mov %rsi,(%rbx)
570b(2): jz 0x14(%rip)
570d(3): mov %r12,%rdi
5710(5): mov %rsi,0x10(%rsp)
5715(5): call 0xffffbedb(%rip)
571a(5): mov 0x10(%rsp),%rsi
571f(3): mov %rsi,%rdi
5722(5): mov %rsi,0x10(%rsp)
5727(5): call 0xeb9(%rip)
572c(4): sub $0x8,%rsp
5730(4): mov %rax,0x8(%rbx)
5734(4): mov 0x0(%rbp),%r8d
5738(3): push 0x30(%rbp)
573b(3): push 0x28(%rbp)
573e(3): mov %r14,%rcx
5741(2): push %r15
5743(5): mov 0x3c(%rsp),%r9d
5748(3): mov %rax,%rdi
574b(5): mov 0x28(%rsp),%rdx
5750(5): mov 0x30(%rsp),%rsi
5755(3): mov %rax,%r12
5758(5): call 0xffffec68(%rip)
575d(4): add $0x20,%rsp
5761(4): mov 0x18(%rsp),%eax
5765(4): mov %eax,0x0(%r13)
5769(4): add $0x28,%rsp
576d(3): mov %r12,%rax
5770(1): pop %rbx
5771(1): pop %rbp
5772(2): pop %r12
5774(2): pop %r13
5776(2): pop %r14
5778(2): pop %r15
577a(1): ret near (%rsp)
577b(5): nop 0x0(%rax,%rax,1)
5780(2): xor %edi,%edi
5782(5): call 0xebe(%rip)
5787(8): movdqa 0x2058e1(%rip),%xmm0
578f(3): mov %rax,%rbx
5792(7): mov %rax,0x2058c7(%rip)
5799(3): movups %xmm0,(%rax)
579c(5): jmp 0xfffffee1(%rip)
57a1(5): call 0xffffbe5f(%rip)
57a6(5): call 0x108a(%rip)

"clone_quoting_options" :
57b0(2): push %r12
57b2(1): push %rbp
57b3(1): push %rbx
57b4(3): mov %rdi,%rbx
57b7(5): call 0xffffbe59(%rip)
57bc(3): mov (%rax),%r12d
57bf(3): mov %rax,%rbp
57c2(7): lea 0x207d37(%rip),%rax
57c9(3): test %rbx,%rbx
57cc(5): mov $0x38,%esi
57d1(4): cmove %rax,%rbx
57d5(3): mov %rbx,%rdi
57d8(5): call 0x1008(%rip)
57dd(4): mov %r12d,0x0(%rbp)
57e1(1): pop %rbx
57e2(1): pop %rbp
57e3(2): pop %r12
57e5(1): ret near (%rsp)

"get_quoting_style" :
57f0(7): lea 0x207d09(%rip),%rax
57f7(3): test %rdi,%rdi
57fa(4): cmove %rax,%rdi
57fe(2): mov (%rdi),%eax
5800(1): ret near (%rsp)

"set_quoting_style" :
5810(7): lea 0x207ce9(%rip),%rax
5817(3): test %rdi,%rdi
581a(4): cmove %rax,%rdi
581e(2): mov %esi,(%rdi)
5820(1): ret near (%rsp)

"set_char_quoting" :
5830(7): lea 0x207cc9(%rip),%rax
5837(3): test %rdi,%rdi
583a(2): mov %esi,%ecx
583c(4): cmove %rax,%rdi
5840(2): mov %esi,%eax
5842(3): and $0x1f,%ecx
5845(3): shr $0x5,%al
5848(3): movzx %al,%eax
584b(5): lea 0x8(%rdi,%rax,4),%rdi
5850(2): mov (%rdi),%esi
5852(2): mov %esi,%eax
5854(2): shr %cl,%eax
5856(2): xor %eax,%edx
5858(3): and $0x1,%eax
585b(3): and $0x1,%edx
585e(2): shl/sal %cl,%edx
5860(2): xor %esi,%edx
5862(2): mov %edx,(%rdi)
5864(1): ret near (%rsp)

"set_quoting_flags" :
5870(7): lea 0x207c89(%rip),%rax
5877(3): test %rdi,%rdi
587a(4): cmove %rax,%rdi
587e(3): mov 0x4(%rdi),%eax
5881(3): mov %esi,0x4(%rdi)
5884(1): ret near (%rsp)

"set_custom_quoting" :
5890(7): lea 0x207c69(%rip),%rax
5897(3): test %rdi,%rdi
589a(4): cmove %rax,%rdi
589e(3): test %rsi,%rsi
58a1(6): mov $0xa,(%rdi)
58a7(2): jz 0x10(%rip)
58a9(3): test %rdx,%rdx
58ac(2): jz 0xb(%rip)
58ae(4): mov %rsi,0x28(%rdi)
58b2(4): mov %rdx,0x30(%rdi)
58b6(1): ret near (%rsp)
58b7(4): sub $0x8,%rsp
58bb(5): call 0xffffbd45(%rip)

"quotearg_buffer" :
58c0(2): push %r15
58c2(2): push %r14
58c4(7): lea 0x207c35(%rip),%rax
58cb(2): push %r13
58cd(2): push %r12
58cf(3): mov %rdi,%r13
58d2(1): push %rbp
58d3(1): push %rbx
58d4(3): mov %r8,%rbx
58d7(3): mov %rsi,%r14
58da(3): mov %rdx,%r15
58dd(4): sub $0x18,%rsp
58e1(3): test %r8,%r8
58e4(4): cmove %rax,%rbx
58e8(5): mov %rcx,0x8(%rsp)
58ed(5): call 0xffffbd23(%rip)
58f2(3): mov (%rax),%r12d
58f5(3): mov %rax,%rbp
58f8(4): lea 0x8(%rbx),%rax
58fc(4): sub $0x8,%rsp
5900(4): mov 0x4(%rbx),%r9d
5904(3): push 0x30(%rbx)
5907(3): mov (%rbx),%r8d
590a(3): push 0x28(%rbx)
590d(3): mov %r15,%rdx
5910(1): push %rax
5911(5): mov 0x28(%rsp),%rcx
5916(3): mov %r14,%rsi
5919(3): mov %r13,%rdi
591c(5): call 0xffffeaa4(%rip)
5921(4): mov %r12d,0x0(%rbp)
5925(4): add $0x38,%rsp
5929(1): pop %rbx
592a(1): pop %rbp
592b(2): pop %r12
592d(2): pop %r13
592f(2): pop %r14
5931(2): pop %r15
5933(1): ret near (%rsp)

"quotearg_alloc_mem" :
5940(2): push %r15
5942(2): push %r14
5944(7): lea 0x207bb5(%rip),%rax
594b(2): push %r13
594d(2): push %r12
594f(3): mov %rdx,%r12
5952(1): push %rbp
5953(1): push %rbx
5954(3): mov %rcx,%rbx
5957(3): mov %rdi,%r14
595a(3): mov %rsi,%r15
595d(4): sub $0x38,%rsp
5961(3): test %rcx,%rcx
5964(4): cmove %rax,%rbx
5968(2): xor %ebp,%ebp
596a(5): call 0xffffbca6(%rip)
596f(3): test %r12,%r12
5972(3): mov %rax,%r13
5975(2): mov (%rax),%eax
5977(4): setz %bpl
597b(3): or 0x4(%rbx),%ebp
597e(4): lea 0x8(%rbx),%r10
5982(4): sub $0x8,%rsp
5986(3): mov (%rbx),%r8d
5989(3): mov %r15,%rcx
598c(4): mov %eax,0x14(%rsp)
5990(3): push 0x30(%rbx)
5993(3): mov %r14,%rdx
5996(3): push 0x28(%rbx)
5999(2): push %r10
599b(2): xor %esi,%esi
599d(3): mov %ebp,%r9d
59a0(2): xor %edi,%edi
59a2(5): mov %r10,0x40(%rsp)
59a7(5): call 0xffffea19(%rip)
59ac(4): lea 0x1(%rax),%rsi
59b0(5): mov %rax,0x48(%rsp)
59b5(4): add $0x20,%rsp
59b9(3): mov %rsi,%rdi
59bc(5): mov %rsi,0x18(%rsp)
59c1(5): call 0xc1f(%rip)
59c6(5): mov %rax,0x10(%rsp)
59cb(4): sub $0x8,%rsp
59cf(3): push 0x30(%rbx)
59d2(3): push 0x28(%rbx)
59d5(5): mov 0x38(%rsp),%r10
59da(3): mov %ebp,%r9d
59dd(3): mov (%rbx),%r8d
59e0(3): mov %r15,%rcx
59e3(3): mov %r14,%rdx
59e6(3): mov %rax,%rdi
59e9(2): push %r10
59eb(5): mov 0x38(%rsp),%rsi
59f0(5): call 0xffffe9d0(%rip)
59f5(4): mov 0x2c(%rsp),%eax
59f9(4): add $0x20,%rsp
59fd(3): test %r12,%r12
5a00(4): mov %eax,0x0(%r13)
5a04(2): jz 0xb(%rip)
5a06(5): mov 0x28(%rsp),%r11
5a0b(4): mov %r11,(%r12)
5a0f(5): mov 0x10(%rsp),%rax
5a14(4): add $0x38,%rsp
5a18(1): pop %rbx
5a19(1): pop %rbp
5a1a(2): pop %r12
5a1c(2): pop %r13
5a1e(2): pop %r14
5a20(2): pop %r15
5a22(1): ret near (%rsp)

"quotearg_alloc" :
5a30(3): mov %rdx,%rcx
5a33(2): xor %edx,%edx
5a35(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5a40(6): mov 0x205612(%rip),%eax
5a46(2): push %r12
5a48(7): mov 0x205611(%rip),%r12
5a4f(1): push %rbp
5a50(1): push %rbx
5a51(3): cmp $0x1,%eax
5a54(2): jle 0x2d(%rip)
5a56(3): sub $0x2,%eax
5a59(5): lea 0x18(%r12),%rbx
5a5e(4): shl/sal $0x4,%rax
5a62(5): lea 0x28(%r12,%rax,1),%rbp
5a67(9): nop 0x0(%rax,%rax,1)
5a70(3): mov (%rbx),%rdi
5a73(4): add $0x10,%rbx
5a77(5): call 0xffffbb79(%rip)
5a7c(3): cmp %rbp,%rbx
5a7f(2): jnz 0xfffffff1(%rip)
5a81(5): mov 0x8(%r12),%rdi
5a86(7): lea 0x207973(%rip),%rbx
5a8d(3): cmp %rbx,%rdi
5a90(2): jz 0x19(%rip)
5a92(5): call 0xffffbb5e(%rip)
5a97(b): mov $0x100,0x2055ce(%rip)
5aa2(7): mov %rbx,0x2055cf(%rip)
5aa9(7): lea 0x2055c0(%rip),%rbx
5ab0(3): cmp %rbx,%r12
5ab3(2): jz 0x11(%rip)
5ab5(3): mov %r12,%rdi
5ab8(5): call 0xffffbb38(%rip)
5abd(7): mov %rbx,0x20559c(%rip)
5ac4(1): pop %rbx
5ac5(a): mov $0x1,0x205589(%rip)
5acf(1): pop %rbp
5ad0(2): pop %r12
5ad2(1): ret near (%rsp)

"quotearg_n" :
5ae0(7): lea 0x207a19(%rip),%rcx
5ae7(7): mov $0xffffffff,%rdx
5aee(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5b00(7): lea 0x2079f9(%rip),%rcx
5b07(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5b10(7): lea 0x2079e9(%rip),%rcx
5b17(3): mov %rdi,%rsi
5b1a(7): mov $0xffffffff,%rdx
5b21(2): xor %edi,%edi
5b23(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5b30(7): lea 0x2079c9(%rip),%rcx
5b37(3): mov %rsi,%rdx
5b3a(3): mov %rdi,%rsi
5b3d(2): xor %edi,%edi
5b3f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5b50(4): sub $0x48,%rsp
5b54(3): mov %rdx,%rax
5b57(9): mov $0x28,%rdx
5b60(5): mov %rdx,0x38(%rsp)
5b65(2): xor %edx,%edx
5b67(3): cmp $0xa,%esi
5b6a(2): jz 0x6a(%rip)
5b6c(3): mov %esi,(%rsp)
5b6f(3): mov %rsp,%rcx
5b72(7): mov $0xffffffff,%rdx
5b79(3): mov %rax,%rsi
5b7c(9): mov $0x0,0x4(%rsp)
5b85(9): mov $0x0,0xc(%rsp)
5b8e(9): mov $0x0,0x14(%rsp)
5b97(9): mov $0x0,0x1c(%rsp)
5ba0(9): mov $0x0,0x24(%rsp)
5ba9(9): mov $0x0,0x2c(%rsp)
5bb2(8): mov $0x0,0x34(%rsp)
5bba(5): call 0xfffffa46(%rip)
5bbf(5): mov 0x38(%rsp),%rcx
5bc4(9): xor $0x28,%rcx
5bcd(2): jnz 0xc(%rip)
5bcf(4): add $0x48,%rsp
5bd3(1): ret near (%rsp)
5bd4(5): call 0xffffba2c(%rip)
5bd9(5): call 0xffffbae7(%rip)

"quotearg_n_style_mem" :
5be0(4): sub $0x48,%rsp
5be4(3): mov %rdx,%rax
5be7(3): mov %rcx,%rdx
5bea(9): mov $0x28,%rcx
5bf3(5): mov %rcx,0x38(%rsp)
5bf8(2): xor %ecx,%ecx
5bfa(3): cmp $0xa,%esi
5bfd(2): jz 0x63(%rip)
5bff(3): mov %esi,(%rsp)
5c02(3): mov %rsp,%rcx
5c05(3): mov %rax,%rsi
5c08(9): mov $0x0,0x4(%rsp)
5c11(9): mov $0x0,0xc(%rsp)
5c1a(9): mov $0x0,0x14(%rsp)
5c23(9): mov $0x0,0x1c(%rsp)
5c2c(9): mov $0x0,0x24(%rsp)
5c35(9): mov $0x0,0x2c(%rsp)
5c3e(8): mov $0x0,0x34(%rsp)
5c46(5): call 0xfffff9ba(%rip)
5c4b(5): mov 0x38(%rsp),%rdx
5c50(9): xor $0x28,%rdx
5c59(2): jnz 0xc(%rip)
5c5b(4): add $0x48,%rsp
5c5f(1): ret near (%rsp)
5c60(5): call 0xffffb9a0(%rip)
5c65(5): call 0xffffba5b(%rip)

"quotearg_style" :
5c70(3): mov %rsi,%rdx
5c73(2): mov %edi,%esi
5c75(2): xor %edi,%edi
5c77(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5c80(3): mov %rdx,%rcx
5c83(3): mov %rsi,%rdx
5c86(2): mov %edi,%esi
5c88(2): xor %edi,%edi
5c8a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5c90(4): sub $0x48,%rsp
5c94(2): mov %edx,%ecx
5c96(9): mov $0x28,%rax
5c9f(5): mov %rax,0x38(%rsp)
5ca4(2): xor %eax,%eax
5ca6(7): mov 0x207883(%rip),%rax
5cad(3): mov %rsp,%r8
5cb0(3): and $0x1f,%ecx
5cb3(8): movdqa 0x207845(%rip),%xmm0
5cbb(5): mov %rax,0x30(%rsp)
5cc0(2): mov %edx,%eax
5cc2(4): movaps %xmm0,(%rsp)
5cc6(3): shr $0x5,%al
5cc9(3): movzx %al,%eax
5ccc(5): lea 0x8(%r8,%rax,4),%r9
5cd1(8): movdqa 0x207837(%rip),%xmm0
5cd9(5): movaps %xmm0,0x10(%rsp)
5cde(8): movdqa 0x20783a(%rip),%xmm0
5ce6(5): movaps %xmm0,0x20(%rsp)
5ceb(3): mov (%r9),%edx
5cee(2): mov %edx,%eax
5cf0(2): shr %cl,%eax
5cf2(2): not %eax
5cf4(3): and $0x1,%eax
5cf7(2): shl/sal %cl,%eax
5cf9(3): mov %r8,%rcx
5cfc(2): xor %edx,%eax
5cfe(3): mov %rsi,%rdx
5d01(3): mov %rdi,%rsi
5d04(3): mov %eax,(%r9)
5d07(2): xor %edi,%edi
5d09(5): call 0xfffff8f7(%rip)
5d0e(5): mov 0x38(%rsp),%rsi
5d13(9): xor $0x28,%rsi
5d1c(2): jnz 0x7(%rip)
5d1e(4): add $0x48,%rsp
5d22(1): ret near (%rsp)
5d23(5): call 0xffffb99d(%rip)

"quotearg_char" :
5d30(4): movsx %sil,%edx
5d34(7): mov $0xffffffff,%rsi
5d3b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5d40(5): mov $0x3a,%edx
5d45(7): mov $0xffffffff,%rsi
5d4c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5d60(5): mov $0x3a,%edx
5d65(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5d70(4): sub $0x48,%rsp
5d74(3): mov %rdx,%rax
5d77(9): mov $0x28,%rdx
5d80(5): mov %rdx,0x38(%rsp)
5d85(2): xor %edx,%edx
5d87(3): cmp $0xa,%esi
5d8a(2): jz 0x6a(%rip)
5d8c(3): mov %esi,(%rsp)
5d8f(3): mov %rsp,%rcx
5d92(7): mov $0xffffffff,%rdx
5d99(3): mov %rax,%rsi
5d9c(9): mov $0x0,0x4(%rsp)
5da5(9): mov $0x4000000,0xc(%rsp)
5dae(9): mov $0x0,0x14(%rsp)
5db7(9): mov $0x0,0x1c(%rsp)
5dc0(9): mov $0x0,0x24(%rsp)
5dc9(9): mov $0x0,0x2c(%rsp)
5dd2(8): mov $0x0,0x34(%rsp)
5dda(5): call 0xfffff826(%rip)
5ddf(5): mov 0x38(%rsp),%rcx
5de4(9): xor $0x28,%rcx
5ded(2): jnz 0xc(%rip)
5def(4): add $0x48,%rsp
5df3(1): ret near (%rsp)
5df4(5): call 0xffffb80c(%rip)
5df9(5): call 0xffffb8c7(%rip)

"quotearg_n_custom_mem" :
5e00(4): sub $0x48,%rsp
5e04(3): mov %rcx,%r9
5e07(7): mov 0x207722(%rip),%rcx
5e0e(8): movdqa 0x2076ea(%rip),%xmm0
5e16(9): mov $0x28,%rax
5e1f(5): mov %rax,0x38(%rsp)
5e24(2): xor %eax,%eax
5e26(4): movaps %xmm0,(%rsp)
5e2a(3): test %rsi,%rsi
5e2d(5): mov %rcx,0x30(%rsp)
5e32(7): mov $0xa,(%rsp)
5e39(8): movdqa 0x2076cf(%rip),%xmm0
5e41(5): movaps %xmm0,0x10(%rsp)
5e46(8): movdqa 0x2076d2(%rip),%xmm0
5e4e(5): movaps %xmm0,0x20(%rsp)
5e53(2): jz 0x34(%rip)
5e55(3): test %rdx,%rdx
5e58(2): jz 0x2f(%rip)
5e5a(5): mov %rsi,0x28(%rsp)
5e5f(5): mov %rdx,0x30(%rsp)
5e64(3): mov %rsp,%rcx
5e67(3): mov %r8,%rdx
5e6a(3): mov %r9,%rsi
5e6d(5): call 0xfffff793(%rip)
5e72(5): mov 0x38(%rsp),%rdi
5e77(9): xor $0x28,%rdi
5e80(2): jnz 0xc(%rip)
5e82(4): add $0x48,%rsp
5e86(1): ret near (%rsp)
5e87(5): call 0xffffb779(%rip)
5e8c(5): call 0xffffb834(%rip)

"quotearg_n_custom" :
5ea0(7): mov $0xffffffff,%r8
5ea7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5eb0(3): mov %rdx,%rcx
5eb3(7): mov $0xffffffff,%r8
5eba(3): mov %rsi,%rdx
5ebd(3): mov %rdi,%rsi
5ec0(2): xor %edi,%edi
5ec2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5ed0(3): mov %rcx,%r8
5ed3(3): mov %rdx,%rcx
5ed6(3): mov %rsi,%rdx
5ed9(3): mov %rdi,%rsi
5edc(2): xor %edi,%edi
5ede(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5ef0(7): lea 0x205129(%rip),%rcx
5ef7(5): jmp 0xfffff709(%rip)

"quote_mem" :
5f00(7): lea 0x205119(%rip),%rcx
5f07(3): mov %rsi,%rdx
5f0a(3): mov %rdi,%rsi
5f0d(2): xor %edi,%edi
5f0f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5f20(7): lea 0x2050f9(%rip),%rcx
5f27(7): mov $0xffffffff,%rdx
5f2e(5): jmp 0xfffff6d2(%rip)

"quote" :
5f40(7): lea 0x2050d9(%rip),%rcx
5f47(3): mov %rdi,%rsi
5f4a(7): mov $0xffffffff,%rdx
5f51(2): xor %edi,%edi
5f53(5): jmp 0xfffff6ad(%rip)

"safe_read" :
5f60(2): push %r13
5f62(2): push %r12
5f64(3): mov %edi,%r13d
5f67(1): push %rbp
5f68(1): push %rbx
5f69(3): mov %rsi,%r12
5f6c(3): mov %rdx,%rbx
5f6f(4): sub $0x8,%rsp
5f73(5): nop 0x0(%rax,%rax,1)
5f78(3): mov %rbx,%rdx
5f7b(3): mov %r12,%rsi
5f7e(3): mov %r13d,%edi
5f81(5): call 0xffffb7ef(%rip)
5f86(3): test %rax,%rax
5f89(3): mov %rax,%rbp
5f8c(2): jns 0x24(%rip)
5f8e(5): call 0xffffb682(%rip)
5f93(2): mov (%rax),%eax
5f95(3): cmp $0x4,%eax
5f98(2): jz 0xffffffe0(%rip)
5f9a(7): cmp $0x7ff00000,%rbx
5fa1(2): jbe 0xf(%rip)
5fa3(3): cmp $0x16,%eax
5fa6(2): jnz 0xa(%rip)
5fa8(5): mov $0x7ff00000,%ebx
5fad(2): jmp 0xffffffcb(%rip)
5faf(1): nop 
5fb0(4): add $0x8,%rsp
5fb4(3): mov %rbp,%rax
5fb7(1): pop %rbx
5fb8(1): pop %rbp
5fb9(2): pop %r12
5fbb(2): pop %r13
5fbd(1): ret near (%rsp)

"version_etc_arn" :
5fc0(2): push %r15
5fc2(2): push %r14
5fc4(2): push %r13
5fc6(2): push %r12
5fc8(3): mov %r9,%r12
5fcb(1): push %rbp
5fcc(1): push %rbx
5fcd(3): mov %rdi,%rbp
5fd0(3): mov %r8,%rbx
5fd3(4): sub $0x28,%rsp
5fd7(3): test %rsi,%rsi
5fda(6): jz 0x11e(%rip)
5fe0(3): mov %rdx,%r8
5fe3(7): lea 0x289e(%rip),%rdx
5fea(3): mov %rcx,%r9
5fed(2): xor %eax,%eax
5fef(3): mov %rsi,%rcx
5ff2(5): mov $0x1,%esi
5ff7(5): call 0xffffb8a9(%rip)
5ffc(7): lea 0x2898(%rip),%rsi
6003(2): xor %edi,%edi
6005(5): mov $0x5,%edx
600a(5): call 0xffffb686(%rip)
600f(7): lea 0x2baa(%rip),%rdx
6016(3): mov %rax,%rcx
6019(6): mov $0x7e3,%r8d
601f(5): mov $0x1,%esi
6024(3): mov %rbp,%rdi
6027(2): xor %eax,%eax
6029(5): call 0xffffb877(%rip)
602e(7): lea 0x28f3(%rip),%rsi
6035(2): xor %edi,%edi
6037(5): mov $0x5,%edx
603c(5): call 0xffffb654(%rip)
6041(3): mov %rbp,%rsi
6044(3): mov %rax,%rdi
6047(5): call 0xffffb749(%rip)
604c(4): cmp $0x9,%r12
6050(6): jnbe 0x340(%rip)
6056(7): lea 0x2b27(%rip),%rdx
605d(4): movsxd 0x0(%rdx,%r12,4),%rax
6061(3): add %rdx,%rax
6064(2): jmp %rax
6066(a): nop 0x0(%rax,%rax,1)
6070(4): mov 0x38(%rbx),%r9
6074(4): mov 0x10(%rbx),%rax
6078(7): lea 0x2a19(%rip),%rsi
607f(4): mov 0x8(%rbx),%r8
6083(5): mov $0x5,%edx
6088(2): xor %edi,%edi
608a(4): mov 0x30(%rbx),%r13
608e(4): mov 0x28(%rbx),%r12
6092(5): mov %r9,0x10(%rsp)
6097(4): mov 0x20(%rbx),%r15
609b(4): mov 0x18(%rbx),%r14
609f(4): mov %rax,(%rsp)
60a3(5): mov %r8,0x8(%rsp)
60a8(3): mov (%rbx),%rbx
60ab(5): call 0xffffb5e5(%rip)
60b0(4): sub $0x8,%rsp
60b4(5): mov 0x18(%rsp),%r9
60b9(3): mov %rax,%rdx
60bc(3): mov %rbx,%rcx
60bf(5): mov $0x1,%esi
60c4(3): mov %rbp,%rdi
60c7(2): xor %eax,%eax
60c9(2): push %r9
60cb(2): push %r13
60cd(2): push %r12
60cf(2): push %r15
60d1(2): push %r14
60d3(5): mov 0x30(%rsp),%r9
60d8(5): mov 0x38(%rsp),%r8
60dd(5): call 0xffffb7c3(%rip)
60e2(4): add $0x30,%rsp
60e6(4): add $0x28,%rsp
60ea(1): pop %rbx
60eb(1): pop %rbp
60ec(2): pop %r12
60ee(2): pop %r13
60f0(2): pop %r14
60f2(2): pop %r15
60f4(1): ret near (%rsp)
60f5(3): nop (%rax)
60f8(3): mov %rcx,%r8
60fb(3): mov %rdx,%rcx
60fe(7): lea 0x278f(%rip),%rdx
6105(5): mov $0x1,%esi
610a(2): xor %eax,%eax
610c(5): call 0xffffb794(%rip)
6111(5): jmp 0xfffffeeb(%rip)
6116(a): nop 0x0(%rax,%rax,1)
6120(4): mov 0x40(%rbx),%r10
6124(4): mov 0x38(%rbx),%r9
6128(7): lea 0x2999(%rip),%rsi
612f(4): mov 0x10(%rbx),%rax
6133(4): mov 0x8(%rbx),%r8
6137(5): mov $0x5,%edx
613c(4): mov 0x30(%rbx),%r13
6140(4): mov 0x28(%rbx),%r12
6144(4): mov 0x20(%rbx),%r15
6148(4): mov 0x18(%rbx),%r14
614c(3): mov (%rbx),%rbx
614f(5): mov %r10,0x18(%rsp)
6154(5): mov %r9,0x10(%rsp)
6159(4): mov %rax,(%rsp)
615d(5): mov %r8,0x8(%rsp)
6162(2): xor %edi,%edi
6164(5): call 0xffffb52c(%rip)
6169(5): mov 0x18(%rsp),%r10
616e(2): push %r10
6170(5): jmp 0xffffff44(%rip)
6175(3): nop (%rax)
6178(3): mov (%rbx),%rbx
617b(7): lea 0x271d(%rip),%rsi
6182(5): mov $0x5,%edx
6187(2): xor %edi,%edi
6189(5): call 0xffffb507(%rip)
618e(4): add $0x28,%rsp
6192(3): mov %rbx,%rcx
6195(3): mov %rbp,%rdi
6198(1): pop %rbx
6199(1): pop %rbp
619a(2): pop %r12
619c(2): pop %r13
619e(2): pop %r14
61a0(2): pop %r15
61a2(3): mov %rax,%rdx
61a5(5): mov $0x1,%esi
61aa(2): xor %eax,%eax
61ac(5): jmp 0xffffb6f4(%rip)
61b1(7): nop 0x0(%rax)
61b8(4): mov 0x8(%rbx),%r12
61bc(7): lea 0x26ec(%rip),%rsi
61c3(3): mov (%rbx),%rbx
61c6(5): mov $0x5,%edx
61cb(2): xor %edi,%edi
61cd(5): call 0xffffb4c3(%rip)
61d2(4): add $0x28,%rsp
61d6(3): mov %r12,%r8
61d9(3): mov %rbx,%rcx
61dc(3): mov %rbp,%rdi
61df(3): mov %rax,%rdx
61e2(5): mov $0x1,%esi
61e7(1): pop %rbx
61e8(1): pop %rbp
61e9(2): pop %r12
61eb(2): pop %r13
61ed(2): pop %r14
61ef(2): pop %r15
61f1(2): xor %eax,%eax
61f3(5): jmp 0xffffb6ad(%rip)
61f8(8): nop 0x0(%rax,%rax,1)
6200(4): mov 0x10(%rbx),%r13
6204(4): mov 0x8(%rbx),%r12
6208(7): lea 0x26b7(%rip),%rsi
620f(3): mov (%rbx),%rbx
6212(5): mov $0x5,%edx
6217(2): xor %edi,%edi
6219(5): call 0xffffb477(%rip)
621e(4): add $0x28,%rsp
6222(3): mov %r13,%r9
6225(3): mov %r12,%r8
6228(3): mov %rbx,%rcx
622b(3): mov %rbp,%rdi
622e(3): mov %rax,%rdx
6231(1): pop %rbx
6232(1): pop %rbp
6233(2): pop %r12
6235(2): pop %r13
6237(2): pop %r14
6239(2): pop %r15
623b(5): mov $0x1,%esi
6240(2): xor %eax,%eax
6242(5): jmp 0xffffb65e(%rip)
6247(9): nop 0x0(%rax,%rax,1)
6250(7): lea 0x27a1(%rip),%rsi
6257(5): mov $0x5,%edx
625c(2): xor %edi,%edi
625e(4): mov 0x18(%rbx),%r14
6262(4): mov 0x10(%rbx),%r13
6266(4): mov 0x8(%rbx),%r12
626a(3): mov (%rbx),%rbx
626d(5): call 0xffffb423(%rip)
6272(4): sub $0x8,%rsp
6276(2): push %r14
6278(3): mov %rax,%rdx
627b(3): mov %r13,%r9
627e(3): mov %r12,%r8
6281(3): mov %rbx,%rcx
6284(3): mov %rbp,%rdi
6287(5): mov $0x1,%esi
628c(2): xor %eax,%eax
628e(5): call 0xffffb612(%rip)
6293(1): pop %rax
6294(1): pop %rdx
6295(4): add $0x28,%rsp
6299(1): pop %rbx
629a(1): pop %rbp
629b(2): pop %r12
629d(2): pop %r13
629f(2): pop %r14
62a1(2): pop %r15
62a3(1): ret near (%rsp)
62a4(4): nop 0x0(%rax)
62a8(4): mov 0x20(%rbx),%r15
62ac(7): lea 0x2765(%rip),%rsi
62b3(5): mov $0x5,%edx
62b8(2): xor %edi,%edi
62ba(4): mov 0x18(%rbx),%r14
62be(4): mov 0x10(%rbx),%r13
62c2(4): mov 0x8(%rbx),%r12
62c6(3): mov (%rbx),%rbx
62c9(5): call 0xffffb3c7(%rip)
62ce(2): push %r15
62d0(2): jmp 0xffffffa6(%rip)
62d2(6): nop 0x0(%rax,%rax,1)
62d8(4): mov 0x8(%rbx),%r8
62dc(4): mov 0x28(%rbx),%r12
62e0(7): lea 0x2759(%rip),%rsi
62e7(4): mov 0x20(%rbx),%r15
62eb(4): mov 0x18(%rbx),%r14
62ef(5): mov $0x5,%edx
62f4(4): mov 0x10(%rbx),%r13
62f8(2): xor %edi,%edi
62fa(3): mov (%rbx),%rbx
62fd(4): mov %r8,(%rsp)
6301(5): call 0xffffb38f(%rip)
6306(4): sub $0x8,%rsp
630a(3): mov %r13,%r9
630d(2): push %r12
630f(2): push %r15
6311(2): push %r14
6313(5): mov 0x20(%rsp),%r8
6318(3): mov %rbx,%rcx
631b(3): mov %rax,%rdx
631e(3): mov %rbp,%rdi
6321(5): mov $0x1,%esi
6326(2): xor %eax,%eax
6328(5): call 0xffffb578(%rip)
632d(4): add $0x20,%rsp
6331(4): add $0x28,%rsp
6335(1): pop %rbx
6336(1): pop %rbp
6337(2): pop %r12
6339(2): pop %r13
633b(2): pop %r14
633d(2): pop %r15
633f(1): ret near (%rsp)
6340(4): mov 0x10(%rbx),%r9
6344(4): mov 0x30(%rbx),%r13
6348(7): lea 0x2719(%rip),%rsi
634f(4): mov 0x28(%rbx),%r12
6353(4): mov 0x20(%rbx),%r15
6357(5): mov $0x5,%edx
635c(4): mov 0x18(%rbx),%r14
6360(4): mov 0x8(%rbx),%r8
6364(2): xor %edi,%edi
6366(5): mov %r9,0x8(%rsp)
636b(3): mov (%rbx),%rbx
636e(4): mov %r8,(%rsp)
6372(5): call 0xffffb31e(%rip)
6377(2): push %r13
6379(2): push %r12
637b(2): push %r15
637d(2): push %r14
637f(5): mov 0x28(%rsp),%r9
6384(2): jmp 0xffffff8f(%rip)
6386(a): nop 0x0(%rax,%rax,1)
6390(4): mov 0x40(%rbx),%r10
6394(4): mov 0x38(%rbx),%r9
6398(5): mov $0x5,%edx
639d(4): mov 0x10(%rbx),%rax
63a1(4): mov 0x8(%rbx),%r8
63a5(7): lea 0x2754(%rip),%rsi
63ac(4): mov 0x30(%rbx),%r13
63b0(4): mov 0x28(%rbx),%r12
63b4(4): mov 0x20(%rbx),%r15
63b8(4): mov 0x18(%rbx),%r14
63bc(5): mov %r10,0x18(%rsp)
63c1(5): mov %r9,0x10(%rsp)
63c6(4): mov %rax,(%rsp)
63ca(5): mov %r8,0x8(%rsp)
63cf(3): mov (%rbx),%rbx
63d2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
63e0(3): xor %r9d,%r9d
63e3(4): cmp $0x0,(%r8)
63e7(2): jz 0x14(%rip)
63e9(7): nop 0x0(%rax)
63f0(4): add $0x1,%r9
63f4(5): cmp $0x0,0x0(%r8,%r9,8)
63f9(2): jnz 0xfffffff7(%rip)
63fb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
6400(4): sub $0x68,%rsp
6404(3): mov %r8,%r10
6407(3): xor %r9d,%r9d
640a(9): mov $0x28,%rax
6413(5): mov %rax,0x58(%rsp)
6418(2): xor %eax,%eax
641a(3): mov %rsp,%r8
641d(3): nop (%rax)
6420(3): mov (%r10),%eax
6423(3): cmp $0x2f,%eax
6426(2): jnbe 0x44(%rip)
6428(3): mov %eax,%r11d
642b(4): add 0x10(%r10),%r11
642f(3): add $0x8,%eax
6432(3): mov %eax,(%r10)
6435(3): mov (%r11),%rax
6438(3): test %rax,%rax
643b(4): mov %rax,0x0(%r8,%r9,8)
643f(2): jz 0xc(%rip)
6441(4): add $0x1,%r9
6445(4): cmp $0xa,%r9
6449(2): jnz 0xffffffd7(%rip)
644b(5): call 0xfffffb75(%rip)
6450(5): mov 0x58(%rsp),%rax
6455(9): xor $0x28,%rax
645e(2): jnz 0x7(%rip)
6460(4): add $0x68,%rsp
6464(1): ret near (%rsp)
6465(5): call 0xffffb25b(%rip)
646a(4): mov 0x8(%r10),%r11
646e(4): lea 0x8(%r11),%rax
6472(4): mov %rax,0x8(%r10)
6476(2): jmp 0xffffffbf(%rip)

"version_etc" :
6480(1): push %rbp
6481(1): push %rbx
6482(6): mov $0x20,%r10d
6488(3): xor %r11d,%r11d
648b(7): sub $0xb8,%rsp
6492(9): mov $0x28,%rax
649b(5): mov %rax,0x78(%rsp)
64a0(2): xor %eax,%eax
64a2(8): lea 0xd0(%rsp),%rax
64aa(8): mov %r8,0xa0(%rsp)
64b2(8): lea 0xd0(%rsp),%rbx
64ba(5): lea 0x20(%rsp),%r8
64bf(8): mov %r9,0xa8(%rsp)
64c7(8): mov $0x20,0x8(%rsp)
64cf(5): mov %rax,0x10(%rsp)
64d4(8): lea 0x80(%rsp),%rax
64dc(3): xor %r9d,%r9d
64df(5): mov %rax,0x18(%rsp)
64e4(3): mov %rax,%rbp
64e7(9): nop 0x0(%rax,%rax,1)
64f0(4): cmp $0x2f,%r10d
64f4(2): jnbe 0x58(%rip)
64f6(3): mov %r10d,%eax
64f9(6): mov $0x1,%r11d
64ff(4): add $0x8,%r10d
6503(3): add %rbp,%rax
6506(3): mov (%rax),%rax
6509(3): test %rax,%rax
650c(4): mov %rax,0x0(%r8,%r9,8)
6510(2): jz 0xc(%rip)
6512(4): add $0x1,%r9
6516(4): cmp $0xa,%r9
651a(2): jnz 0xffffffd6(%rip)
651c(3): test %r11b,%r11b
651f(2): jnz 0x26(%rip)
6521(5): call 0xfffffa9f(%rip)
6526(5): mov 0x78(%rsp),%rax
652b(9): xor $0x28,%rax
6534(2): jnz 0xc(%rip)
6536(7): add $0xb8,%rsp
653d(1): pop %rbx
653e(1): pop %rbp
653f(1): ret near (%rsp)
6540(5): call 0xffffb180(%rip)
6545(5): mov %r10d,0x8(%rsp)
654a(2): jmp 0xffffffd7(%rip)
654c(3): mov %rbx,%rax
654f(4): add $0x8,%rbx
6553(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6560(1): push %rbx
6561(7): lea 0x237a(%rip),%rsi
6568(5): mov $0x5,%edx
656d(2): xor %edi,%edi
656f(5): call 0xffffb121(%rip)
6574(7): lea 0x237c(%rip),%rdx
657b(3): mov %rax,%rsi
657e(5): mov $0x1,%edi
6583(2): xor %eax,%eax
6585(5): call 0xffffb2bb(%rip)
658a(7): lea 0x237c(%rip),%rsi
6591(5): mov $0x5,%edx
6596(2): xor %edi,%edi
6598(5): call 0xffffb0f8(%rip)
659d(7): lea 0x1974(%rip),%rcx
65a4(7): lea 0xb6e(%rip),%rdx
65ab(3): mov %rax,%rsi
65ae(5): mov $0x1,%edi
65b3(2): xor %eax,%eax
65b5(5): call 0xffffb28b(%rip)
65ba(7): mov 0x204ac7(%rip),%rbx
65c1(7): lea 0x2578(%rip),%rsi
65c8(2): xor %edi,%edi
65ca(5): mov $0x5,%edx
65cf(5): call 0xffffb0c1(%rip)
65d4(3): mov %rbx,%rsi
65d7(3): mov %rax,%rdi
65da(1): pop %rbx
65db(5): jmp 0xffffb1b5(%rip)

"xmalloc" :
65e0(1): push %rbx
65e1(3): mov %rdi,%rbx
65e4(5): call 0xffffb1ec(%rip)
65e9(3): test %rax,%rax
65ec(2): jnz 0x7(%rip)
65ee(3): test %rbx,%rbx
65f1(2): jnz 0x4(%rip)
65f3(1): pop %rbx
65f4(1): ret near (%rsp)
65f5(5): call 0x23b(%rip)

"xnmalloc" :
6600(3): mov %rdi,%rax
6603(3): mul %rax,%rsi,%rdx
6606(3): mov %rax,%rdi
6609(3): seto %al
660c(3): test %rdi,%rdi
660f(2): js 0xc(%rip)
6611(3): movzx %al,%eax
6614(3): test %rax,%rax
6617(2): jnz 0x4(%rip)
6619(2): jmp 0xffffffc7(%rip)
661b(4): sub $0x8,%rsp
661f(5): call 0x211(%rip)

"xrealloc" :
6640(3): test %rsi,%rsi
6643(1): push %rbx
6644(3): mov %rsi,%rbx
6647(2): jnz 0x7(%rip)
6649(3): test %rdi,%rdi
664c(2): jnz 0x1c(%rip)
664e(3): mov %rbx,%rsi
6651(5): call 0xffffb1cf(%rip)
6656(3): test %rax,%rax
6659(2): jnz 0x7(%rip)
665b(3): test %rbx,%rbx
665e(2): jnz 0x13(%rip)
6660(1): pop %rbx
6661(1): ret near (%rsp)
6662(6): nop 0x0(%rax,%rax,1)
6668(5): call 0xffffaf88(%rip)
666d(2): xor %eax,%eax
666f(1): pop %rbx
6670(1): ret near (%rsp)
6671(5): call 0x1bf(%rip)

"xnrealloc" :
6680(3): mov %rsi,%rax
6683(3): mul %rax,%rdx,%rdx
6686(3): mov %rax,%rsi
6689(3): seto %al
668c(3): test %rsi,%rsi
668f(2): js 0xc(%rip)
6691(3): movzx %al,%eax
6694(3): test %rax,%rax
6697(2): jnz 0x4(%rip)
6699(2): jmp 0xffffffa7(%rip)
669b(4): sub $0x8,%rsp
669f(5): call 0x191(%rip)

"x2nrealloc" :
66b0(3): test %rdi,%rdi
66b3(3): mov %rdx,%r9
66b6(3): mov (%rsi),%rcx
66b9(2): jz 0x37(%rip)
66bb(2): xor %edx,%edx
66bd(a): mov $0x6148914691236517204,%rax
66c7(3): div %r9,%rax
66ca(3): cmp %rcx,%rax
66cd(2): jbe 0x3e(%rip)
66cf(3): mov %rcx,%rax
66d2(3): shr $0x1,%rax
66d5(5): lea 0x1(%rax,%rcx,1),%rcx
66da(3): mov %rcx,(%rsi)
66dd(4): imul %r9,%rcx
66e1(3): mov %rcx,%rsi
66e4(5): jmp 0xffffff5c(%rip)
66e9(7): nop 0x0(%rax)
66f0(3): test %rcx,%rcx
66f3(2): jz 0x25(%rip)
66f5(3): mov %rcx,%rax
66f8(3): mul %rax,%r9,%rdx
66fb(3): seto %dl
66fe(3): test %rax,%rax
6701(3): movzx %dl,%edx
6704(2): js 0x7(%rip)
6706(3): test %rdx,%rdx
6709(2): jz 0xffffffd1(%rip)
670b(4): sub $0x8,%rsp
670f(5): call 0x121(%rip)
6714(4): nop 0x0(%rax)
6718(2): xor %edx,%edx
671a(5): mov $0x80,%eax
671f(3): xor %r8d,%r8d
6722(3): div %r9,%rax
6725(3): test %rax,%rax
6728(4): setz %r8b
672c(4): lea 0x0(%r8,%rax,1),%rcx
6730(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6740(3): test %rdi,%rdi
6743(3): mov (%rsi),%rax
6746(2): jz 0x2a(%rip)
6748(a): mov $0x6148914691236517203,%rdx
6752(3): cmp %rdx,%rax
6755(2): jnbe 0x2c(%rip)
6757(3): mov %rax,%rdx
675a(3): shr $0x1,%rdx
675d(5): lea 0x1(%rdx,%rax,1),%rax
6762(3): mov %rax,(%rsi)
6765(3): mov %rax,%rsi
6768(5): jmp 0xfffffed8(%rip)
676d(3): nop (%rax)
6770(3): test %rax,%rax
6773(5): mov $0x80,%edx
6778(4): cmove %rdx,%rax
677c(3): test %rax,%rax
677f(2): jns 0xffffffe3(%rip)
6781(4): sub $0x8,%rsp
6785(5): call 0xab(%rip)

"xzalloc" :
6790(1): push %rbx
6791(3): mov %rdi,%rbx
6794(5): call 0xfffffe4c(%rip)
6799(3): mov %rbx,%rdx
679c(2): xor %esi,%esi
679e(3): mov %rax,%rdi
67a1(1): pop %rbx
67a2(5): jmp 0xffffaf9e(%rip)

"xcalloc" :
67b0(3): mov %rdi,%rax
67b3(4): sub $0x8,%rsp
67b7(3): mul %rax,%rsi,%rdx
67ba(3): seto %dl
67bd(3): test %rax,%rax
67c0(2): js 0x19(%rip)
67c2(3): movzx %dl,%edx
67c5(3): test %rdx,%rdx
67c8(2): jnz 0x11(%rip)
67ca(5): call 0xffffafd6(%rip)
67cf(3): test %rax,%rax
67d2(2): jz 0x7(%rip)
67d4(4): add $0x8,%rsp
67d8(1): ret near (%rsp)
67d9(5): call 0x57(%rip)

"xmemdup" :
67e0(1): push %rbp
67e1(1): push %rbx
67e2(3): mov %rdi,%rbp
67e5(3): mov %rsi,%rdi
67e8(3): mov %rsi,%rbx
67eb(4): sub $0x8,%rsp
67ef(5): call 0xfffffdf1(%rip)
67f4(4): add $0x8,%rsp
67f8(3): mov %rbx,%rdx
67fb(3): mov %rbp,%rsi
67fe(1): pop %rbx
67ff(1): pop %rbp
6800(3): mov %rax,%rdi
6803(5): jmp 0xffffafad(%rip)

"xstrdup" :
6810(1): push %rbx
6811(3): mov %rdi,%rbx
6814(5): call 0xffffae9c(%rip)
6819(3): mov %rbx,%rdi
681c(4): lea 0x1(%rax),%rsi
6820(1): pop %rbx
6821(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
6830(7): lea 0x23b8(%rip),%rsi
6837(4): sub $0x8,%rsp
683b(5): mov $0x5,%edx
6840(2): xor %edi,%edi
6842(5): call 0xffffae4e(%rip)
6847(6): mov 0x2047cb(%rip),%edi
684d(7): lea 0x1b04(%rip),%rdx
6854(3): mov %rax,%rcx
6857(2): xor %esi,%esi
6859(2): xor %eax,%eax
685b(5): call 0xffffaff5(%rip)
6860(5): call 0xffffada0(%rip)

"xstrtoumax" :
6870(2): push %r15
6872(2): push %r14
6874(2): push %r13
6876(2): push %r12
6878(1): push %rbp
6879(1): push %rbx
687a(4): sub $0x28,%rsp
687e(9): mov $0x28,%rax
6887(5): mov %rax,0x18(%rsp)
688c(2): xor %eax,%eax
688e(3): cmp $0x24,%edx
6891(6): jnbe 0x364(%rip)
6897(5): lea 0x10(%rsp),%rax
689c(3): mov %rsi,%r15
689f(3): test %rsi,%rsi
68a2(3): mov %rdi,%rbp
68a5(4): mov %edx,0x8(%rsp)
68a9(3): mov %rcx,%r14
68ac(3): mov %r8,%r13
68af(4): cmove %rax,%r15
68b3(5): call 0xffffad5d(%rip)
68b8(6): mov $0x0,(%rax)
68be(3): mov %rax,%r12
68c1(4): movzx 0x0(%rbp),%ebx
68c5(5): call 0xffffb01b(%rip)
68ca(4): mov 0x8(%rsp),%edx
68ce(3): mov (%rax),%rsi
68d1(3): mov %rbp,%rax
68d4(2): jmp 0x13(%rip)
68d6(a): nop 0x0(%rax,%rax,1)
68e0(4): add $0x1,%rax
68e4(3): movzx (%rax),%ebx
68e7(3): movzx %bl,%ecx
68ea(5): test $0x20,0x1(%rsi,%rcx,2)
68ef(2): jnz 0xfffffff1(%rip)
68f1(3): cmp $0x2d,%bl
68f4(2): jz 0x54(%rip)
68f6(2): xor %ecx,%ecx
68f8(3): mov %r15,%rsi
68fb(3): mov %rbp,%rdi
68fe(5): call 0xffffae32(%rip)
6903(3): mov (%r15),%rcx
6906(3): mov %rax,%rbx
6909(3): cmp %rbp,%rcx
690c(2): jz 0x2c(%rip)
690e(4): mov (%r12),%eax
6912(2): test %eax,%eax
6914(2): jz 0x64(%rip)
6916(3): cmp $0x22,%eax
6919(5): mov $0x1,%ebp
691e(2): jnz 0x2a(%rip)
6920(3): test %r13,%r13
6923(2): jz 0xb(%rip)
6925(4): movzx (%rcx),%r12d
6929(3): test %r12b,%r12b
692c(2): jnz 0x7b(%rip)
692e(3): mov %rbx,(%r14)
6931(2): jmp 0x1c(%rip)
6933(5): nop 0x0(%rax,%rax,1)
6938(3): test %r13,%r13
693b(5): mov %rcx,0x8(%rsp)
6940(2): jnz 0x40(%rip)
6942(6): nop 0x0(%rax,%rax,1)
6948(5): mov $0x4,%ebp
694d(5): mov 0x18(%rsp),%rdi
6952(9): xor $0x28,%rdi
695b(2): mov %ebp,%eax
695d(6): jnz 0x293(%rip)
6963(4): add $0x28,%rsp
6967(1): pop %rbx
6968(1): pop %rbp
6969(2): pop %r12
696b(2): pop %r13
696d(2): pop %r14
696f(2): pop %r15
6971(1): ret near (%rsp)
6972(6): nop 0x0(%rax,%rax,1)
6978(2): xor %ebp,%ebp
697a(2): jmp 0xffffffa6(%rip)
697c(4): nop 0x0(%rax)
6980(5): movzx 0x0(%rbp),%r12d
6985(3): test %r12b,%r12b
6988(2): jz 0xffffffc0(%rip)
698a(4): movsx %r12b,%esi
698e(3): mov %r13,%rdi
6991(2): xor %ebp,%ebp
6993(5): call 0xffffad5d(%rip)
6998(3): test %rax,%rax
699b(5): mov $0x1,%ebx
69a0(5): mov 0x8(%rsp),%rcx
69a5(2): jz 0xffffffa3(%rip)
69a7(4): movsx %r12b,%esi
69ab(3): mov %r13,%rdi
69ae(5): mov %rcx,0x8(%rsp)
69b3(5): call 0xffffad3d(%rip)
69b8(3): test %rax,%rax
69bb(5): mov 0x8(%rsp),%rcx
69c0(6): jz 0xcc(%rip)
69c6(5): lea 0xffffffbb(%r12),%eax
69cb(2): cmp $0x2f,%al
69cd(2): jnbe 0x53(%rip)
69cf(a): mov $0x142129060940101,%rdx
69d9(4): bt %rax,%rdx
69dd(2): jnb 0x43(%rip)
69df(5): mov $0x30,%esi
69e4(3): mov %r13,%rdi
69e7(5): mov %rcx,0x8(%rsp)
69ec(5): call 0xffffad04(%rip)
69f1(3): test %rax,%rax
69f4(5): mov 0x8(%rsp),%rcx
69f9(2): jz 0x27(%rip)
69fb(4): movzx 0x1(%rcx),%eax
69ff(2): cmp $0x44,%al
6a01(2): jz 0xe(%rip)
6a03(2): cmp $0x69,%al
6a05(6): jz 0x1d3(%rip)
6a0b(2): cmp $0x42,%al
6a0d(2): jnz 0x13(%rip)
6a0f(5): mov $0x2,%edi
6a14(5): mov $0x3e8,%esi
6a19(2): jmp 0x11(%rip)
6a1b(5): nop 0x0(%rax,%rax,1)
6a20(5): mov $0x1,%edi
6a25(5): mov $0x400,%esi
6a2a(4): sub $0x42,%r12d
6a2e(4): cmp $0x35,%r12b
6a32(2): jnbe 0x5a(%rip)
6a34(7): lea 0x220d(%rip),%rdx
6a3b(4): movzx %r12b,%r12d
6a3f(4): movsxd 0x0(%rdx,%r12,4),%rax
6a43(3): add %rdx,%rax
6a46(2): jmp %rax
6a48(3): mov %rbx,%rax
6a4b(3): mul %rax,%rsi,%rdx
6a4e(6): jo 0x1f3(%rip)
6a54(3): xor %r8d,%r8d
6a57(3): mul %rax,%rsi,%rdx
6a5a(6): jo 0x1d8(%rip)
6a60(3): mov %rax,%rbx
6a63(3): or %r8d,%ebp
6a66(a): nop 0x0(%rax,%rax,1)
6a70(3): movsxd %edi,%rdi
6a73(2): mov %ebp,%eax
6a75(3): add %rdi,%rcx
6a78(3): or $0x2,%eax
6a7b(3): mov %rcx,(%r15)
6a7e(3): cmp $0x0,(%rcx)
6a81(3): mov %rbx,(%r14)
6a84(3): cmovne %eax,%ebp
6a87(5): jmp 0xfffffec6(%rip)
6a8c(3): mov %rbx,(%r14)
6a8f(3): or $0x2,%ebp
6a92(5): jmp 0xfffffebb(%rip)
6a97(5): mov $0x2,%edx
6a9c(3): mov %rdx,%rax
6a9f(3): mul %rax,%rbx,%rdx
6aa2(6): jo 0x9c(%rip)
6aa8(3): add %rbx,%rbx
6aab(2): jmp 0xffffffc5(%rip)
6aad(5): mov $0x200,%edx
6ab2(3): mov %rdx,%rax
6ab5(3): mul %rax,%rbx,%rdx
6ab8(6): jo 0x86(%rip)
6abe(4): shl/sal $0x9,%rbx
6ac2(2): jmp 0xffffffae(%rip)
6ac4(6): mov $0x7,%r8d
6aca(3): xor %r9d,%r9d
6acd(3): nop (%rax)
6ad0(3): mov %rbx,%rax
6ad3(3): mul %rax,%rsi,%rdx
6ad6(3): mov %rax,%rbx
6ad9(6): jo 0x195(%rip)
6adf(4): sub $0x1,%r8d
6ae3(2): jnz 0xffffffed(%rip)
6ae5(3): or %r9d,%ebp
6ae8(2): jmp 0xffffff88(%rip)
6aea(6): mov $0x8,%r8d
6af0(3): xor %r9d,%r9d
6af3(5): nop 0x0(%rax,%rax,1)
6af8(3): mov %rbx,%rax
6afb(3): mul %rax,%rsi,%rdx
6afe(3): mov %rax,%rbx
6b01(6): jo 0x14f(%rip)
6b07(4): sub $0x1,%r8d
6b0b(2): jnz 0xffffffed(%rip)
6b0d(2): jmp 0xffffffd8(%rip)
6b0f(6): mov $0x4,%r8d
6b15(3): xor %r9d,%r9d
6b18(3): mov %rbx,%rax
6b1b(3): mul %rax,%rsi,%rdx
6b1e(3): mov %rax,%rbx
6b21(6): jo 0x102(%rip)
6b27(4): sub $0x1,%r8d
6b2b(2): jnz 0xffffffed(%rip)
6b2d(2): jmp 0xffffffb8(%rip)
6b2f(3): mov %rbx,%rax
6b32(3): mul %rax,%rsi,%rdx
6b35(3): mov %rax,%rbx
6b38(6): jno 0xffffff38(%rip)
6b3e(5): mov $0x1,%ebp
6b43(4): or $0xffffffff,%rbx
6b47(5): jmp 0xffffff29(%rip)
6b4c(4): nop 0x0(%rax)
6b50(6): mov $0x5,%r8d
6b56(3): xor %r9d,%r9d
6b59(3): mov %rbx,%rax
6b5c(3): mul %rax,%rsi,%rdx
6b5f(3): mov %rax,%rbx
6b62(6): jo 0xfd(%rip)
6b68(4): sub $0x1,%r8d
6b6c(2): jnz 0xffffffed(%rip)
6b6e(5): jmp 0xffffff77(%rip)
6b73(6): mov $0x6,%r8d
6b79(3): xor %r9d,%r9d
6b7c(3): mov %rbx,%rax
6b7f(3): mul %rax,%rsi,%rdx
6b82(3): mov %rax,%rbx
6b85(6): jo 0x8f(%rip)
6b8b(4): sub $0x1,%r8d
6b8f(2): jnz 0xffffffed(%rip)
6b91(5): jmp 0xffffff54(%rip)
6b96(5): mov $0x400,%edx
6b9b(3): mov %rdx,%rax
6b9e(3): mul %rax,%rbx,%rdx
6ba1(2): jo 0xffffff9d(%rip)
6ba3(4): shl/sal $0xa,%rbx
6ba7(5): jmp 0xfffffec9(%rip)
6bac(3): mov %rbx,%rax
6baf(3): mul %rax,%rsi,%rdx
6bb2(6): jo 0xcb(%rip)
6bb8(3): xor %r8d,%r8d
6bbb(3): mul %rax,%rsi,%rdx
6bbe(6): jno 0xfffffe99(%rip)
6bc4(6): mov $0x1,%r8d
6bca(4): or $0xffffffff,%rax
6bce(5): jmp 0xfffffe89(%rip)
6bd3(5): nop 0x0(%rax,%rax,1)
6bd8(2): xor %edi,%edi
6bda(4): cmp $0x42,0x2(%rcx)
6bde(5): mov $0x400,%esi
6be3(4): setz %dil
6be7(4): lea 0x1(%rdi,%rdi,1),%edi
6beb(5): jmp 0xfffffe3f(%rip)
6bf0(5): call 0xffffaad0(%rip)
6bf5(7): lea 0x2124(%rip),%rcx
6bfc(7): lea 0x1ffd(%rip),%rsi
6c03(7): lea 0x2016(%rip),%rdi
6c0a(5): mov $0x54,%edx
6c0f(5): call 0xffffab11(%rip)
6c14(6): mov $0x1,%r9d
6c1a(4): or $0xffffffff,%rbx
6c1e(5): jmp 0xffffff6d(%rip)
6c23(6): mov $0x1,%r9d
6c29(4): or $0xffffffff,%rbx
6c2d(5): jmp 0xfffffefa(%rip)
6c32(6): mov $0x1,%r8d
6c38(4): or $0xffffffff,%rbx
6c3c(5): jmp 0xfffffe27(%rip)
6c41(4): or $0xffffffff,%rax
6c45(6): mov $0x1,%r8d
6c4b(5): jmp 0xfffffe0c(%rip)
6c50(6): mov $0x1,%r9d
6c56(4): or $0xffffffff,%rbx
6c5a(5): jmp 0xfffffead(%rip)
6c5f(6): mov $0x1,%r9d
6c65(4): or $0xffffffff,%rbx
6c69(5): jmp 0xfffffeff(%rip)
6c6e(6): mov $0x1,%r9d
6c74(4): or $0xffffffff,%rbx
6c78(5): jmp 0xfffffe67(%rip)
6c7d(6): mov $0x1,%r8d
6c83(4): or $0xffffffff,%rax
6c87(5): jmp 0xffffff34(%rip)

"rpl_mbrtowc" :
6c90(2): push %r13
6c92(2): push %r12
6c94(3): mov %rsi,%r13
6c97(1): push %rbp
6c98(1): push %rbx
6c99(3): mov %rdi,%rbx
6c9c(3): mov %rdx,%r12
6c9f(4): sub $0x18,%rsp
6ca3(9): mov $0x28,%rax
6cac(5): mov %rax,0x8(%rsp)
6cb1(2): xor %eax,%eax
6cb3(5): lea 0x4(%rsp),%rax
6cb8(3): test %rdi,%rdi
6cbb(4): cmove %rax,%rbx
6cbf(3): mov %rbx,%rdi
6cc2(5): call 0xffffaa1e(%rip)
6cc7(4): cmp $0xfffffffd,%rax
6ccb(3): mov %rax,%rbp
6cce(2): jbe 0x22(%rip)
6cd0(3): test %r12,%r12
6cd3(2): jz 0x1d(%rip)
6cd5(2): xor %edi,%edi
6cd7(5): call 0xc9(%rip)
6cdc(2): test %al,%al
6cde(2): jnz 0x12(%rip)
6ce0(5): movzx 0x0(%r13),%eax
6ce5(5): mov $0x1,%ebp
6cea(2): mov %eax,(%rbx)
6cec(4): nop 0x0(%rax)
6cf0(5): mov 0x8(%rsp),%rdx
6cf5(9): xor $0x28,%rdx
6cfe(3): mov %rbp,%rax
6d01(2): jnz 0xd(%rip)
6d03(4): add $0x18,%rsp
6d07(1): pop %rbx
6d08(1): pop %rbp
6d09(2): pop %r12
6d0b(2): pop %r13
6d0d(1): ret near (%rsp)
6d0e(5): call 0xffffa9b2(%rip)

"close_stream" :
6d20(2): push %r12
6d22(1): push %rbp
6d23(3): mov %rdi,%rbp
6d26(1): push %rbx
6d27(5): call 0xffffa919(%rip)
6d2c(3): mov 0x0(%rbp),%ebx
6d2f(3): mov %rbp,%rdi
6d32(3): mov %rax,%r12
6d35(5): call 0x10b(%rip)
6d3a(3): and $0x20,%ebx
6d3d(2): test %ebx,%ebx
6d3f(2): jnz 0x19(%rip)
6d41(2): test %eax,%eax
6d43(2): jz 0xc(%rip)
6d45(3): test %r12,%r12
6d48(5): mov $0xffffffff,%eax
6d4d(2): jz 0x3b(%rip)
6d4f(1): pop %rbx
6d50(1): pop %rbp
6d51(2): pop %r12
6d53(1): ret near (%rsp)
6d54(4): nop 0x0(%rax)
6d58(2): test %eax,%eax
6d5a(2): jnz 0x1e(%rip)
6d5c(5): call 0xffffa8b4(%rip)
6d61(6): mov $0x0,(%rax)
6d67(5): mov $0xffffffff,%eax
6d6c(1): pop %rbx
6d6d(1): pop %rbp
6d6e(2): pop %r12
6d70(1): ret near (%rsp)
6d71(7): nop 0x0(%rax)
6d78(1): pop %rbx
6d79(5): mov $0xffffffff,%eax
6d7e(1): pop %rbp
6d7f(2): pop %r12
6d81(1): ret near (%rsp)
6d82(6): nop 0x0(%rax,%rax,1)
6d88(5): call 0xffffa888(%rip)
6d8d(3): cmp $0x9,(%rax)
6d90(1): pop %rbx
6d91(1): pop %rbp
6d92(2): pop %r12
6d94(3): setnz %al
6d97(3): movzx %al,%eax
6d9a(2): neg %eax
6d9c(1): ret near (%rsp)

"hard_locale" :
6da0(4): sub $0x8,%rsp
6da4(2): xor %esi,%esi
6da6(5): call 0xffffaa8a(%rip)
6dab(3): mov %rax,%rdx
6dae(5): mov $0x1,%eax
6db3(3): test %rdx,%rdx
6db6(2): jz 0x1f(%rip)
6db8(7): lea 0x39f(%rip),%rdi
6dbf(5): mov $0x2,%ecx
6dc4(3): mov %rdx,%rsi
6dc7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6dc9(3): setnbe %cl
6dcc(3): sbb $0x0,%cl
6dcf(2): xor %eax,%eax
6dd1(2): test %cl,%cl
6dd3(2): jnz 0xd(%rip)
6dd5(4): add $0x8,%rsp
6dd9(1): ret near (%rsp)
6dda(6): nop 0x0(%rax,%rax,1)
6de0(7): lea 0x1f44(%rip),%rdi
6de7(5): mov $0x6,%ecx
6dec(3): mov %rdx,%rsi
6def(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6df1(3): setnbe %al
6df4(2): sbb $0x0,%al
6df6(2): test %al,%al
6df8(3): setnz %al
6dfb(4): add $0x8,%rsp
6dff(1): ret near (%rsp)

"locale_charset" :
6e00(4): sub $0x8,%rsp
6e04(5): mov $0xe,%edi
6e09(5): call 0xffffa9e7(%rip)
6e0e(3): test %rax,%rax
6e11(2): jz 0x1f(%rip)
6e13(3): cmp $0x0,(%rax)
6e16(7): lea 0x1f14(%rip),%rdx
6e1d(4): cmove %rdx,%rax
6e21(4): add $0x8,%rsp
6e25(1): ret near (%rsp)
6e26(a): nop 0x0(%rax,%rax,1)
6e30(7): lea 0x1efa(%rip),%rax
6e37(4): add $0x8,%rsp
6e3b(1): ret near (%rsp)

"rpl_fclose" :
6e40(2): push %r12
6e42(1): push %rbp
6e43(1): push %rbx
6e44(3): mov %rdi,%rbx
6e47(5): call 0xffffa979(%rip)
6e4c(2): test %eax,%eax
6e4e(3): mov %rbx,%rdi
6e51(2): js 0x56(%rip)
6e53(5): call 0xffffa9ad(%rip)
6e58(2): test %eax,%eax
6e5a(2): jnz 0x2e(%rip)
6e5c(3): mov %rbx,%rdi
6e5f(5): call 0x61(%rip)
6e64(2): test %eax,%eax
6e66(2): jz 0x3e(%rip)
6e68(5): call 0xffffa7a8(%rip)
6e6d(3): mov (%rax),%r12d
6e70(3): mov %rbx,%rdi
6e73(3): mov %rax,%rbp
6e76(5): call 0xffffa7ea(%rip)
6e7b(3): test %r12d,%r12d
6e7e(2): jnz 0x32(%rip)
6e80(1): pop %rbx
6e81(1): pop %rbp
6e82(2): pop %r12
6e84(1): ret near (%rsp)
6e85(3): nop (%rax)
6e88(3): mov %rbx,%rdi
6e8b(5): call 0xffffa935(%rip)
6e90(2): xor %esi,%esi
6e92(5): mov $0x1,%edx
6e97(2): mov %eax,%edi
6e99(5): call 0xffffa877(%rip)
6e9e(4): cmp $0xffffffff,%rax
6ea2(2): jnz 0xffffffba(%rip)
6ea4(3): mov %rbx,%rdi
6ea7(1): pop %rbx
6ea8(1): pop %rbp
6ea9(2): pop %r12
6eab(5): jmp 0xffffa7b5(%rip)
6eb0(4): mov %r12d,0x0(%rbp)
6eb4(5): mov $0xffffffff,%eax
6eb9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
6ec0(3): test %rdi,%rdi
6ec3(1): push %rbx
6ec4(3): mov %rdi,%rbx
6ec7(2): jz 0x13(%rip)
6ec9(5): call 0xffffa937(%rip)
6ece(2): test %eax,%eax
6ed0(2): jz 0xa(%rip)
6ed2(6): test $0x100,(%rbx)
6ed8(2): jnz 0x10(%rip)
6eda(3): mov %rbx,%rdi
6edd(1): pop %rbx
6ede(5): jmp 0xffffa902(%rip)
6ee3(5): nop 0x0(%rax,%rax,1)
6ee8(3): mov %rbx,%rdi
6eeb(5): mov $0x1,%edx
6ef0(2): xor %esi,%esi
6ef2(5): call 0xe(%rip)
6ef7(3): mov %rbx,%rdi
6efa(1): pop %rbx
6efb(5): jmp 0xffffa8e5(%rip)

"rpl_fseeko" :
6f00(4): mov 0x8(%rdi),%rax
6f04(4): cmp %rax,0x10(%rdi)
6f08(2): jz 0x8(%rip)
6f0a(5): jmp 0xffffa956(%rip)
6f0f(1): nop 
6f10(4): mov 0x20(%rdi),%rax
6f14(4): cmp %rax,0x28(%rdi)
6f18(2): jnz 0xfffffff2(%rip)
6f1a(5): cmp $0x0,0x48(%rdi)
6f1f(2): jnz 0xffffffeb(%rip)
6f21(2): push %r12
6f23(1): push %rbp
6f24(3): mov %edx,%r12d
6f27(1): push %rbx
6f28(3): mov %rsi,%rbp
6f2b(3): mov %rdi,%rbx
6f2e(5): call 0xffffa892(%rip)
6f33(3): mov %r12d,%edx
6f36(3): mov %rbp,%rsi
6f39(2): mov %eax,%edi
6f3b(5): call 0xffffa7d5(%rip)
6f40(4): cmp $0xffffffff,%rax
6f44(2): jz 0xe(%rip)
6f46(3): and $0xef,(%rbx)
6f49(7): mov %rax,0x90(%rbx)
6f50(2): xor %eax,%eax
6f52(1): pop %rbx
6f53(1): pop %rbp
6f54(2): pop %r12
6f56(1): ret near (%rsp)

"__libc_csu_init" :
6f60(2): push %r15
6f62(2): push %r14
6f64(3): mov %rdx,%r15
6f67(2): push %r13
6f69(2): push %r12
6f6b(7): lea 0x203b1e(%rip),%r12
6f72(1): push %rbp
6f73(7): lea 0x203b1e(%rip),%rbp
6f7a(1): push %rbx
6f7b(3): mov %edi,%r13d
6f7e(3): mov %rsi,%r14
6f81(3): sub %r12,%rbp
6f84(4): sub $0x8,%rsp
6f88(4): sar $0x3,%rbp
6f8c(5): call 0xffffa624(%rip)
6f91(3): test %rbp,%rbp
6f94(2): jz 0x22(%rip)
6f96(2): xor %ebx,%ebx
6f98(8): nop 0x0(%rax,%rax,1)
6fa0(3): mov %r15,%rdx
6fa3(3): mov %r14,%rsi
6fa6(3): mov %r13d,%edi
6fa9(4): call 0x0(%r12,%rbx,8)
6fad(4): add $0x1,%rbx
6fb1(3): cmp %rbx,%rbp
6fb4(2): jnz 0xffffffec(%rip)
6fb6(4): add $0x8,%rsp
6fba(1): pop %rbx
6fbb(1): pop %rbp
6fbc(2): pop %r12
6fbe(2): pop %r13
6fc0(2): pop %r14
6fc2(2): pop %r15
6fc4(1): ret near (%rsp)

"atexit" :
6fe0(7): mov 0x204021(%rip),%rdx
6fe7(2): xor %esi,%esi
6fe9(5): jmp 0xffffa887(%rip)

"_fini" :
6ff0(4): sub $0x8,%rsp
6ff4(4): add $0x8,%rsp
6ff8(1): ret near (%rsp)

