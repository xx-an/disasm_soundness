
"getenv@plt" :
1b30(6): jmp 0x20a24a(%rip)
1b36(5): push $0x0

"sigprocmask@plt" :
1b40(6): jmp 0x20a242(%rip)
1b46(5): push $0x1

"free@plt" :
1b50(6): jmp 0x20a23a(%rip)
1b56(5): push $0x2

"abort@plt" :
1b60(6): jmp 0x20a232(%rip)
1b66(5): push $0x3

"__errno_location@plt" :
1b70(6): jmp 0x20a22a(%rip)
1b76(5): push $0x4

"strncmp@plt" :
1b80(6): jmp 0x20a222(%rip)
1b86(5): push $0x5

"_exit@plt" :
1b90(6): jmp 0x20a21a(%rip)
1b96(5): push $0x6

"strcpy@plt" :
1ba0(6): jmp 0x20a212(%rip)
1ba6(5): push $0x7

"__fpending@plt" :
1bb0(6): jmp 0x20a20a(%rip)
1bb6(5): push $0x8

"sigaction@plt" :
1bc0(6): jmp 0x20a202(%rip)
1bc6(5): push $0x9

"fcntl@plt" :
1bd0(6): jmp 0x20a1fa(%rip)
1bd6(5): push $0xa

"setenv@plt" :
1be0(6): jmp 0x20a1f2(%rip)
1be6(5): push $0xb

"clearerr_unlocked@plt" :
1bf0(6): jmp 0x20a1ea(%rip)
1bf6(5): push $0xc

"write@plt" :
1c00(6): jmp 0x20a1e2(%rip)
1c06(5): push $0xd

"textdomain@plt" :
1c10(6): jmp 0x20a1da(%rip)
1c16(5): push $0xe

"fclose@plt" :
1c20(6): jmp 0x20a1d2(%rip)
1c26(5): push $0xf

"bindtextdomain@plt" :
1c30(6): jmp 0x20a1ca(%rip)
1c36(5): push $0x10

"dcgettext@plt" :
1c40(6): jmp 0x20a1c2(%rip)
1c46(5): push $0x11

"__ctype_get_mb_cur_max@plt" :
1c50(6): jmp 0x20a1ba(%rip)
1c56(5): push $0x12

"strlen@plt" :
1c60(6): jmp 0x20a1b2(%rip)
1c66(5): push $0x13

"__stack_chk_fail@plt" :
1c70(6): jmp 0x20a1aa(%rip)
1c76(5): push $0x14

"getopt_long@plt" :
1c80(6): jmp 0x20a1a2(%rip)
1c86(5): push $0x15

"mbrtowc@plt" :
1c90(6): jmp 0x20a19a(%rip)
1c96(5): push $0x16

"dup2@plt" :
1ca0(6): jmp 0x20a192(%rip)
1ca6(5): push $0x17

"strchr@plt" :
1cb0(6): jmp 0x20a18a(%rip)
1cb6(5): push $0x18

"strrchr@plt" :
1cc0(6): jmp 0x20a182(%rip)
1cc6(5): push $0x19

"ftruncate@plt" :
1cd0(6): jmp 0x20a17a(%rip)
1cd6(5): push $0x1a

"lseek@plt" :
1ce0(6): jmp 0x20a172(%rip)
1ce6(5): push $0x1b

"__assert_fail@plt" :
1cf0(6): jmp 0x20a16a(%rip)
1cf6(5): push $0x1c

"__strtoul_internal@plt" :
1d00(6): jmp 0x20a162(%rip)
1d06(5): push $0x1d

"memset@plt" :
1d10(6): jmp 0x20a15a(%rip)
1d16(5): push $0x1e

"close@plt" :
1d20(6): jmp 0x20a152(%rip)
1d26(5): push $0x1f

"pipe@plt" :
1d30(6): jmp 0x20a14a(%rip)
1d36(5): push $0x20

"strspn@plt" :
1d40(6): jmp 0x20a142(%rip)
1d46(5): push $0x21

"memchr@plt" :
1d50(6): jmp 0x20a13a(%rip)
1d56(5): push $0x22

"read@plt" :
1d60(6): jmp 0x20a132(%rip)
1d66(5): push $0x23

"memcmp@plt" :
1d70(6): jmp 0x20a12a(%rip)
1d76(5): push $0x24

"fputs_unlocked@plt" :
1d80(6): jmp 0x20a122(%rip)
1d86(5): push $0x25

"calloc@plt" :
1d90(6): jmp 0x20a11a(%rip)
1d96(5): push $0x26

"strcmp@plt" :
1da0(6): jmp 0x20a112(%rip)
1da6(5): push $0x27

"sigemptyset@plt" :
1db0(6): jmp 0x20a10a(%rip)
1db6(5): push $0x28

"strtol@plt" :
1dc0(6): jmp 0x20a102(%rip)
1dc6(5): push $0x29

"memcpy@plt" :
1dd0(6): jmp 0x20a0fa(%rip)
1dd6(5): push $0x2a

"fileno@plt" :
1de0(6): jmp 0x20a0f2(%rip)
1de6(5): push $0x2b

"malloc@plt" :
1df0(6): jmp 0x20a0ea(%rip)
1df6(5): push $0x2c

"fflush@plt" :
1e00(6): jmp 0x20a0e2(%rip)
1e06(5): push $0x2d

"nl_langinfo@plt" :
1e10(6): jmp 0x20a0da(%rip)
1e16(5): push $0x2e

"__fxstat@plt" :
1e20(6): jmp 0x20a0d2(%rip)
1e26(5): push $0x2f

"__freading@plt" :
1e30(6): jmp 0x20a0ca(%rip)
1e36(5): push $0x30

"fwrite_unlocked@plt" :
1e40(6): jmp 0x20a0c2(%rip)
1e46(5): push $0x31

"realloc@plt" :
1e50(6): jmp 0x20a0ba(%rip)
1e56(5): push $0x32

"fdopen@plt" :
1e60(6): jmp 0x20a0b2(%rip)
1e66(5): push $0x33

"setlocale@plt" :
1e70(6): jmp 0x20a0aa(%rip)
1e76(5): push $0x34

"__printf_chk@plt" :
1e80(6): jmp 0x20a0a2(%rip)
1e86(5): push $0x35

"memmove@plt" :
1e90(6): jmp 0x20a09a(%rip)
1e96(5): push $0x36

"error@plt" :
1ea0(6): jmp 0x20a092(%rip)
1ea6(5): push $0x37

"memrchr@plt" :
1eb0(6): jmp 0x20a08a(%rip)
1eb6(5): push $0x38

"waitpid@plt" :
1ec0(6): jmp 0x20a082(%rip)
1ec6(5): push $0x39

"open@plt" :
1ed0(6): jmp 0x20a07a(%rip)
1ed6(5): push $0x3a

"fseeko@plt" :
1ee0(6): jmp 0x20a072(%rip)
1ee6(5): push $0x3b

"__cxa_atexit@plt" :
1ef0(6): jmp 0x20a06a(%rip)
1ef6(5): push $0x3c

"getpagesize@plt" :
1f00(6): jmp 0x20a062(%rip)
1f06(5): push $0x3d

"__libc_current_sigrtmin@plt" :
1f10(6): jmp 0x20a05a(%rip)
1f16(5): push $0x3e

"exit@plt" :
1f20(6): jmp 0x20a052(%rip)
1f26(5): push $0x3f

"fwrite@plt" :
1f30(6): jmp 0x20a04a(%rip)
1f36(5): push $0x40

"__fprintf_chk@plt" :
1f40(6): jmp 0x20a042(%rip)
1f46(5): push $0x41

"__libc_current_sigrtmax@plt" :
1f50(6): jmp 0x20a03a(%rip)
1f56(5): push $0x42

"mbsinit@plt" :
1f60(6): jmp 0x20a032(%rip)
1f66(5): push $0x43

"execl@plt" :
1f70(6): jmp 0x20a02a(%rip)
1f76(5): push $0x44

"iswprint@plt" :
1f80(6): jmp 0x20a022(%rip)
1f86(5): push $0x45

"sigaddset@plt" :
1f90(6): jmp 0x20a01a(%rip)
1f96(5): push $0x46

"fork@plt" :
1fa0(6): jmp 0x20a012(%rip)
1fa6(5): push $0x47

"__ctype_b_loc@plt" :
1fb0(6): jmp 0x20a00a(%rip)
1fb6(5): push $0x48

"__sprintf_chk@plt" :
1fc0(6): jmp 0x20a002(%rip)
1fc6(5): push $0x49

".plt.got" :
1fd0(6): jmp 0x20a01a(%rip)
1fd6(2): nop 

"_init" :
1b08(4): sub $0x8,%rsp
1b0c(7): mov 0x20a4cd(%rip),%rax
1b13(3): test %rax,%rax
1b16(2): jz 0x4(%rip)
1b18(2): call %rax
1b1a(4): add $0x8,%rsp
1b1e(1): ret near (%rsp)

"main" :
1fe0(2): push %r15
1fe2(2): push %r14
1fe4(3): xor %r14d,%r14d
1fe7(2): push %r13
1fe9(2): push %r12
1feb(3): xor %r12d,%r12d
1fee(1): push %rbp
1fef(1): push %rbx
1ff0(3): mov %rsi,%rbx
1ff3(2): mov %edi,%ebp
1ff5(7): sub $0x148,%rsp
1ffc(9): mov $0x28,%rax
2005(8): mov %rax,0x138(%rsp)
200d(2): xor %eax,%eax
200f(5): call 0xfffffef1(%rip)
2014(3): mov (%rbx),%rdi
2017(2): cwde 
2019(5): mov %rax,0x8(%rsp)
201e(5): call 0x35f2(%rip)
2023(7): lea 0x8117(%rip),%rsi
202a(5): mov $0x6,%edi
202f(5): call 0xfffffe41(%rip)
2034(7): lea 0x6c73(%rip),%rsi
203b(7): lea 0x6c43(%rip),%rdi
2042(5): call 0xfffffbee(%rip)
2047(7): lea 0x6c37(%rip),%rdi
204e(5): call 0xfffffbc2(%rip)
2053(7): lea 0x32b6(%rip),%rdi
205a(5): call 0x6a36(%rip)
205f(7): lea 0x7bac(%rip),%rax
2066(8): mov $0x0,(%rsp)
206e(9): mov $0x0,0x10(%rsp)
2077(9): mov $0x0,0x40(%rsp)
2080(7): mov %rax,0x20a309(%rip)
2087(7): lea 0x6dff(%rip),%rax
208e(7): mov %rax,0x20a32b(%rip)
2095(3): nop (%rax)
2098(7): mov 0x20a1d1(%rip),%r13d
209f(5): mov $0x1,%eax
20a4(7): lea 0x209855(%rip),%rcx
20ab(7): lea 0x6c14(%rip),%rdx
20b2(3): mov %rbx,%rsi
20b5(2): mov %ebp,%edi
20b7(3): test %r13d,%r13d
20ba(4): cmove %eax,%r13d
20be(3): xor %r8d,%r8d
20c1(5): call 0xfffffbbf(%rip)
20c6(3): cmp $0xff,%eax
20c9(3): mov %eax,%r15d
20cc(6): jz 0x59c(%rip)
20d2(3): cmp $0x65,%eax
20d5(6): jz 0x16b(%rip)
20db(2): jle 0x45(%rip)
20dd(3): cmp $0x78,%eax
20e0(6): jz 0x4db(%rip)
20e6(6): jnle 0xb2(%rip)
20ec(3): cmp $0x6e,%eax
20ef(6): jz 0x259(%rip)
20f5(6): jle 0x1f3(%rip)
20fb(3): cmp $0x74,%eax
20fe(6): jz 0x192(%rip)
2104(3): cmp $0x75,%eax
2107(6): jnz 0x1825(%rip)
210d(7): mov $0x1,0x20a1cc(%rip)
2114(2): jmp 0xffffff84(%rip)
2116(a): nop 0x0(%rax,%rax,1)
2120(3): cmp $0x39,%eax
2123(6): jle 0xc5(%rip)
2129(3): cmp $0x61,%eax
212c(6): jz 0x394(%rip)
2132(6): jle 0x32e(%rip)
2138(3): cmp $0x62,%eax
213b(6): jnz 0x511(%rip)
2141(3): test %r12d,%r12d
2144(6): jnz 0x1b64(%rip)
214a(7): lea 0x6ba6(%rip),%rsi
2151(5): mov $0x5,%edx
2156(2): xor %edi,%edi
2158(6): mov $0x1,%r12d
215e(5): call 0xfffffae2(%rip)
2163(7): mov 0x20a10e(%rip),%rdi
216a(7): lea 0x7a47(%rip),%rcx
2171(3): mov %rax,%r8
2174(3): xor %r9d,%r9d
2177(a): mov $0x9223372036854775807,%rdx
2181(5): mov $0x1,%esi
2186(5): call 0x5c6a(%rip)
218b(4): mov %rax,(%rsp)
218f(5): jmp 0xffffff09(%rip)
2194(4): nop 0x0(%rax)
2198(5): cmp $0x81,%eax
219d(6): jz 0x3d3(%rip)
21a3(6): jle 0x3ad(%rip)
21a9(5): cmp $0x82,%eax
21ae(6): jz 0x35a(%rip)
21b4(5): cmp $0x83,%eax
21b9(6): jnz 0x1773(%rip)
21bf(7): mov 0x20a0b2(%rip),%r13
21c6(3): mov %r13,%rdi
21c9(5): call 0x31f7(%rip)
21ce(3): cmp %rax,%r13
21d1(6): jnz 0x18cd(%rip)
21d7(7): mov %r13,0x20a1ba(%rip)
21de(5): jmp 0xfffffeba(%rip)
21e3(5): nop 0x0(%rax,%rax,1)
21e8(3): cmp $0x30,%eax
21eb(2): jnl 0x65(%rip)
21ed(5): cmp $0xffffff7d,%eax
21f2(6): jnz 0x1650(%rip)
21f8(4): sub $0x8,%rsp
21fc(7): mov 0x20a065(%rip),%rdi
2203(7): mov 0x209e1e(%rip),%rcx
220a(2): push $0x0
220c(7): lea 0x6bb1(%rip),%r9
2213(7): lea 0x6bbe(%rip),%r8
221a(7): lea 0x6a60(%rip),%rdx
2221(7): lea 0x69dd(%rip),%rsi
2228(2): xor %eax,%eax
222a(5): call 0x56d6(%rip)
222f(2): xor %edi,%edi
2231(5): call 0xfffffcef(%rip)
2236(a): nop 0x0(%rax,%rax,1)
2240(7): mov $0x1,0x20a09a(%rip)
2247(5): jmp 0xfffffe51(%rip)
224c(4): nop 0x0(%rax)
2250(3): test %r12d,%r12d
2253(2): jz 0x1e(%rip)
2255(4): cmp $0x4,%r12d
2259(6): jnz 0x1a4f(%rip)
225f(3): test %r14d,%r14d
2262(6): jz 0x68b(%rip)
2268(3): cmp %r13d,%r14d
226b(6): jz 0x682(%rip)
2271(4): sub $0x30,%r15d
2275(3): mov %r13d,%r14d
2278(6): mov $0x4,%r12d
227e(3): movsxd %r15d,%rax
2281(4): mov %rax,(%rsp)
2285(5): jmp 0xfffffe13(%rip)
228a(6): nop 0x0(%rax,%rax,1)
2290(7): mov 0x209fe1(%rip),%r13
2297(5): movsx 0x0(%r13),%eax
229c(2): test %al,%al
229e(6): jz 0x19a2(%rip)
22a4(5): cmp $0x0,0x1(%r13)
22a9(2): jz 0x1b(%rip)
22ab(7): lea 0x6ac0(%rip),%rsi
22b2(3): mov %r13,%rdi
22b5(5): call 0xfffffaeb(%rip)
22ba(2): test %eax,%eax
22bc(6): jnz 0x1a21(%rip)
22c2(2): xor %eax,%eax
22c4(6): mov 0x209d46(%rip),%edx
22ca(2): test %edx,%edx
22cc(2): js 0xa(%rip)
22ce(2): cmp %eax,%edx
22d0(6): jnz 0x19e9(%rip)
22d6(6): mov %eax,0x209d34(%rip)
22dc(5): jmp 0xfffffdbc(%rip)
22e1(7): nop 0x0(%rax)
22e8(3): cmp $0x6c,%eax
22eb(6): jnz 0x1641(%rip)
22f1(3): test %r12d,%r12d
22f4(6): jnz 0x19b4(%rip)
22fa(7): lea 0x6a0e(%rip),%rsi
2301(5): mov $0x5,%edx
2306(2): xor %edi,%edi
2308(6): mov $0x3,%r12d
230e(5): call 0xfffff932(%rip)
2313(7): mov 0x209f5e(%rip),%rdi
231a(7): lea 0x7e20(%rip),%rcx
2321(3): mov %rax,%r8
2324(3): xor %r9d,%r9d
2327(7): mov $0xffffffff,%rdx
232e(5): mov $0x1,%esi
2333(5): call 0x5abd(%rip)
2338(4): mov %rax,(%rsp)
233c(5): jmp 0xfffffd5c(%rip)
2341(7): nop 0x0(%rax)
2348(3): test %r12d,%r12d
234b(6): jnz 0x195d(%rip)
2351(5): call 0xfffffc5f(%rip)
2356(3): mov (%rax),%rcx
2359(7): mov 0x209f18(%rip),%rax
2360(2): jmp 0xf(%rip)
2362(6): nop 0x0(%rax,%rax,1)
2368(7): mov %rax,0x209f09(%rip)
236f(3): mov %rax,%r13
2372(4): add $0x1,%rax
2376(5): movzx 0x0(%r13),%edx
237b(5): test $0x20,0x1(%rcx,%rdx,2)
2380(2): jnz 0xffffffe8(%rip)
2382(7): lea 0x699e(%rip),%rdi
2389(5): mov $0x2,%ecx
238e(3): mov %r13,%rsi
2391(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2393(3): setnbe %al
2396(2): sbb $0x0,%al
2398(2): test %al,%al
239a(6): jnz 0x1e9(%rip)
23a0(4): add $0x2,%r13
23a4(6): mov $0x7,%r12d
23aa(7): mov %r13,0x209ec7(%rip)
23b1(7): mov 0x209ec0(%rip),%rdi
23b8(5): mov $0x2f,%esi
23bd(5): call 0xfffff8f3(%rip)
23c2(2): xor %edi,%edi
23c4(3): test %rax,%rax
23c7(3): mov %rax,%r13
23ca(5): mov $0x5,%edx
23cf(7): lea 0x6957(%rip),%rsi
23d6(6): jz 0x4d4(%rip)
23dc(5): call 0xfffff864(%rip)
23e1(4): lea 0x1(%r13),%rdi
23e5(7): lea 0x7d55(%rip),%rcx
23ec(3): xor %r9d,%r9d
23ef(4): or $0xffffffff,%rdx
23f3(3): mov %rax,%r8
23f6(5): mov $0x1,%esi
23fb(5): call 0x59f5(%rip)
2400(7): cmp 0x209e71(%rip),%r13
2407(3): mov %rax,%r15
240a(4): mov %rax,(%rsp)
240e(6): jz 0xfffffc8a(%rip)
2414(7): lea 0x692b(%rip),%rsi
241b(5): mov $0x5,%edx
2420(2): xor %edi,%edi
2422(5): mov $0x0,0x0(%r13)
2427(5): call 0xfffff819(%rip)
242c(7): mov 0x209e45(%rip),%rdi
2433(7): lea 0x7d07(%rip),%rcx
243a(3): mov %rax,%r8
243d(3): xor %r9d,%r9d
2440(3): mov %r15,%rdx
2443(5): mov $0x1,%esi
2448(5): call 0x59a8(%rip)
244d(5): mov %rax,0x10(%rsp)
2452(5): jmp 0xfffffc46(%rip)
2457(9): nop 0x0(%rax,%rax,1)
2460(3): cmp $0x43,%eax
2463(6): jnz 0x14c9(%rip)
2469(3): test %r12d,%r12d
246c(6): jnz 0x183c(%rip)
2472(7): lea 0x687e(%rip),%rsi
2479(5): mov $0x5,%edx
247e(2): xor %edi,%edi
2480(6): mov $0x2,%r12d
2486(5): call 0xfffff7ba(%rip)
248b(7): mov 0x209de6(%rip),%rdi
2492(7): lea 0x771f(%rip),%rcx
2499(3): mov %rax,%r8
249c(3): xor %r9d,%r9d
249f(a): mov $0x9223372036854775807,%rdx
24a9(5): mov $0x1,%esi
24ae(5): call 0x5942(%rip)
24b3(4): mov %rax,(%rsp)
24b7(5): jmp 0xfffffbe1(%rip)
24bc(4): nop 0x0(%rax)
24c0(7): lea 0x681a(%rip),%rsi
24c7(5): mov $0x5,%edx
24cc(2): xor %edi,%edi
24ce(5): call 0xfffff772(%rip)
24d3(7): mov 0x209d9e(%rip),%rdi
24da(7): lea 0x7c60(%rip),%rcx
24e1(3): mov %rax,%r8
24e4(3): xor %r9d,%r9d
24e7(a): mov $0x2305843009213693951,%rdx
24f1(2): xor %esi,%esi
24f3(5): call 0x58fd(%rip)
24f8(7): mov %rax,0x209ea9(%rip)
24ff(5): jmp 0xfffffb99(%rip)
2504(4): nop 0x0(%rax)
2508(7): lea 0x689f(%rip),%rsi
250f(5): mov $0x5,%edx
2514(2): xor %edi,%edi
2516(5): call 0xfffff72a(%rip)
251b(5): mov 0x8(%rsp),%rdx
2520(7): mov 0x209d51(%rip),%rdi
2527(7): lea 0x768a(%rip),%rcx
252e(3): mov %rax,%r8
2531(3): xor %r9d,%r9d
2534(5): mov $0x1,%esi
2539(3): not %rdx
253c(5): call 0x58b4(%rip)
2541(5): mov %rax,0x40(%rsp)
2546(5): jmp 0xfffffb52(%rip)
254b(5): nop 0x0(%rax,%rax,1)
2550(4): add $0x80,%r15d
2554(6): jnz 0x13d8(%rip)
255a(7): mov $0x1,0x209d81(%rip)
2561(5): jmp 0xfffffb37(%rip)
2566(a): nop 0x0(%rax,%rax,1)
2570(7): mov 0x209d01(%rip),%rax
2577(7): mov %rax,0x209f82(%rip)
257e(5): jmp 0xfffffb1a(%rip)
2583(7): lea 0x67a0(%rip),%rsi
258a(5): mov $0x2,%edx
258f(3): mov %r13,%rdi
2592(6): mov $0x5,%r12d
2598(5): call 0xfffff5e8(%rip)
259d(2): test %eax,%eax
259f(6): jnz 0xfffffe12(%rip)
25a5(4): add $0x2,%r13
25a9(6): mov $0x6,%r12d
25af(7): mov %r13,0x209cc2(%rip)
25b6(5): jmp 0xfffffdfb(%rip)
25bb(7): lea 0x67db(%rip),%rax
25c2(7): mov %rax,0x209a57(%rip)
25c9(7): mov 0x209ca8(%rip),%r13
25d0(3): test %r13,%r13
25d3(6): jz 0xfffffac5(%rip)
25d9(2): xor %eax,%eax
25db(4): or $0xffffffff,%rcx
25df(3): mov %r13,%rdi
25e2(2): REPNZ scasb rdi(%es,10),%al
25e4(3): mov %r13,%rdi
25e7(3): mov %rcx,%rsi
25ea(3): not %rsi
25ed(4): lea 0xffffffff(%rsi),%rax
25f1(7): mov 0x209a28(%rip),%rsi
25f8(5): mov %rax,0x18(%rsp)
25fd(5): call 0xfffff743(%rip)
2602(5): cmp %rax,0x18(%rsp)
2607(6): jnz 0x15fd(%rip)
260d(5): cmp $0x30,0x0(%r13)
2612(2): jnz 0x2e(%rip)
2614(5): cmp $0x0,0x1(%r13)
2619(4): lea 0x1(%r13),%rax
261d(2): jnz 0x14(%rip)
261f(2): jmp 0x21(%rip)
2621(7): nop 0x0(%rax)
2628(4): add $0x1,%rax
262c(3): cmp $0x0,(%rax)
262f(2): jz 0x11(%rip)
2631(7): mov %rax,0x209c40(%rip)
2638(3): cmp $0x30,(%rax)
263b(3): mov %rax,%r13
263e(2): jz 0xffffffea(%rip)
2640(7): mov %r13,0x209d59(%rip)
2647(5): jmp 0xfffffa51(%rip)
264c(3): cmp $0x64,%eax
264f(6): jnz 0x12dd(%rip)
2655(7): lea 0x6736(%rip),%rax
265c(7): mov %rax,0x2099bd(%rip)
2663(5): jmp 0xffffff66(%rip)
2668(6): cmp $0x0,0x10(%rsp)
266e(2): jz 0x10(%rip)
2670(8): cmp $0x0,0x209e88(%rip)
2678(6): jnz 0x1293(%rip)
267e(3): test %r12d,%r12d
2681(6): jz 0x259(%rip)
2687(5): cmp $0x0,(%rsp)
268c(6): jz 0x15d8(%rip)
2692(7): cmp $0x0,0x209977(%rip)
2699(2): jns 0xc(%rip)
269b(a): mov $0xa,0x20996b(%rip)
26a5(7): mov 0x209cf4(%rip),%rdi
26ac(5): lea 0xfffffffb(%r12),%r13d
26b1(3): test %rdi,%rdi
26b4(6): jz 0x273(%rip)
26ba(4): cmp $0x2,%r13d
26be(7): mov $0x0,0x209953(%rip)
26c5(6): jbe 0x2e1(%rip)
26cb(3): xor %r14d,%r14d
26ce(8): cmp $0x0,0x209cd2(%rip)
26d6(6): jnz 0x2c4(%rip)
26dc(4): cmp $0x2,%r14
26e0(5): mov $0x2,%eax
26e5(4): cmovnb %r14,%rax
26e9(7): mov %rax,0x209cb8(%rip)
26f0(6): mov 0x209b7a(%rip),%eax
26f6(2): cmp %ebp,%eax
26f8(2): jnl 0x42(%rip)
26fa(3): movsxd %eax,%rcx
26fd(3): lea 0x1(%rax),%edx
2700(8): lea 0x0(,%rcx,8),%rsi
2708(4): mov 0x0(%rbx,%rcx,8),%rcx
270c(2): cmp %ebp,%edx
270e(6): mov %edx,0x209b5c(%rip)
2714(7): mov %rcx,0x209c75(%rip)
271b(2): jnl 0x1f(%rip)
271d(5): mov 0x8(%rbx,%rsi,1),%rdx
2722(3): add $0x2,%eax
2725(2): cmp %ebp,%eax
2727(6): mov %eax,0x209b43(%rip)
272d(7): mov %rdx,0x209c8c(%rip)
2734(6): jl 0x132e(%rip)
273a(7): mov 0x209c5f(%rip),%rdi
2741(3): test %rdi,%rdi
2744(2): jz 0x2d(%rip)
2746(2): xor %eax,%eax
2748(4): or $0xffffffff,%rcx
274c(5): mov $0x5,%edx
2751(2): REPNZ scasb rdi(%es,10),%al
2753(7): lea 0x7366(%rip),%rsi
275a(3): mov %rcx,%rax
275d(3): not %rax
2760(4): sub $0x1,%rax
2764(7): cmp 0x209c3d(%rip),%rax
276b(6): jnbe 0x11ac(%rip)
2771(7): mov 0x209c18(%rip),%rbx
2778(7): lea 0x7493(%rip),%rsi
277f(3): mov %rbx,%rdi
2782(5): call 0xfffff61e(%rip)
2787(2): test %eax,%eax
2789(2): jz 0x18(%rip)
278b(2): xor %ecx,%ecx
278d(2): xor %edx,%edx
278f(2): xor %edi,%edi
2791(3): mov %rbx,%rsi
2794(5): call 0x2d4c(%rip)
2799(2): test %eax,%eax
279b(6): js 0x1284(%rip)
27a1(7): lea 0x209b58(%rip),%rdx
27a8(2): xor %esi,%esi
27aa(5): mov $0x1,%edi
27af(5): call 0xfffff671(%rip)
27b4(2): test %eax,%eax
27b6(6): jnz 0x1236(%rip)
27bc(6): cmp $0x0,0x40(%rsp)
27c2(2): jnz 0x2b(%rip)
27c4(7): mov 0x209b6d(%rip),%rsi
27cb(a): mov $0x2305843009213562880,%rax
27d5(7): lea 0xfffe0000(%rsi),%rdx
27dc(3): cmp %rax,%rdx
27df(5): mov $0x20000,%eax
27e4(4): cmovbe %rsi,%rax
27e8(5): mov %rax,0x40(%rsp)
27ed(5): mov 0x8(%rsp),%rbx
27f2(5): mov 0x40(%rsp),%rdi
27f7(4): or $0xffffffff,%rbp
27fb(3): add %rbx,%rdi
27fe(5): call 0x5262(%rip)
2803(5): lea 0xffffffff(%rax,%rbx,1),%rcx
2808(2): xor %edx,%edx
280a(3): mov %rcx,%rax
280d(3): div %rbx,%rax
2810(a): mov $0x9223372036854775807,%rax
281a(5): mov %rax,0x18(%rsp)
281f(3): sub %rdx,%rcx
2822(4): cmp $0x1,%r13d
2826(5): mov %rcx,0x48(%rsp)
282b(6): jbe 0x1c4(%rip)
2831(8): cmp $0x0,0x209cc7(%rip)
2839(2): jz 0x53(%rip)
283b(7): lea 0x209b9e(%rip),%rdi
2842(5): call 0xfffff56e(%rip)
2847(8): lea 0x80(%rsp),%rdx
284f(2): xor %esi,%esi
2851(5): mov $0xd,%edi
2856(5): call 0xfffff36a(%rip)
285b(9): cmp $0x1,0x80(%rsp)
2864(2): jz 0x13(%rip)
2866(7): lea 0x209b73(%rip),%rdi
286d(5): mov $0xd,%esi
2872(5): call 0xfffff71e(%rip)
2877(7): lea 0x209be2(%rip),%rdx
287e(7): lea 0x209b5b(%rip),%rsi
2885(2): xor %edi,%edi
2887(5): call 0xfffff2b9(%rip)
288c(4): sub $0x2,%r12d
2890(4): cmp $0x5,%r12d
2894(6): jnbe 0xbf8(%rip)
289a(7): lea 0x72af(%rip),%rdx
28a1(4): movsxd 0x0(%rdx,%r12,4),%rax
28a5(3): add %rdx,%rax
28a8(2): jmp %rax
28aa(5): call 0xfffff396(%rip)
28af(7): mov 0x2099c2(%rip),%rdi
28b6(7): lea 0x7884(%rip),%rcx
28bd(3): mov %rax,%r8
28c0(3): xor %r9d,%r9d
28c3(4): or $0xffffffff,%rdx
28c7(5): mov $0x1,%esi
28cc(5): call 0x5524(%rip)
28d1(4): mov %rax,(%rsp)
28d5(5): jmp 0xfffff7c3(%rip)
28da(8): mov $0x3e8,(%rsp)
28e2(6): mov $0x3,%r12d
28e8(5): jmp 0xfffffdaa(%rip)
28ed(4): mov (%rsp),%rdi
28f1(a): mov $0x1844674407370955161,%rax
28fb(3): cmp %rax,%rdi
28fe(6): jnbe 0x1265(%rip)
2904(4): imul %rdi,$0xa,%rax
2908(4): lea 0xffffffd0(%r15),%edx
290c(3): movsxd %edx,%rdx
290f(3): add %rdx,%rax
2912(3): cmp %rdi,%rax
2915(6): jb 0x124e(%rip)
291b(4): mov %rax,(%rsp)
291f(3): mov %r13d,%r14d
2922(5): jmp 0xfffff776(%rip)
2927(4): cmp $0x2,%r13d
292b(4): mov (%rsp),%rdx
292f(6): jnbe 0xfffffd9c(%rip)
2935(7): mov 0x2096e4(%rip),%rdi
293c(2): xor %eax,%eax
293e(4): or $0xffffffff,%rcx
2942(2): REPNZ scasb rdi(%es,10),%al
2944(3): mov %rdx,%rax
2947(2): xor %edx,%edx
2949(3): not %rcx
294c(4): sub $0x1,%rcx
2950(3): div %rcx,%rax
2953(3): test %rdx,%rdx
2956(4): setnz %dil
295a(3): test %rax,%rax
295d(2): jz 0x15(%rip)
295f(2): xor %esi,%esi
2961(2): xor %edx,%edx
2963(4): add $0x1,%rsi
2967(3): div %rcx,%rax
296a(3): test %rax,%rax
296d(2): jnz 0xfffffff4(%rip)
296f(3): mov %rsi,%rax
2972(4): movzx %dil,%edi
2976(7): mov $0x0,0x20969b(%rip)
297d(4): lea 0x0(%rdi,%rax,1),%r14
2981(7): mov 0x209a20(%rip),%rax
2988(3): test %rax,%rax
298b(6): jz 0xfffffd51(%rip)
2991(3): cmp %rax,%r14
2994(6): jnbe 0x11a8(%rip)
299a(7): mov $0x0,0x209677(%rip)
29a1(5): jmp 0xfffffd4f(%rip)
29a6(5): lea 0x78(%rsp),%rcx
29ab(7): lea 0x778f(%rip),%r8
29b2(5): mov $0xa,%edx
29b7(2): xor %esi,%esi
29b9(5): call 0x5467(%rip)
29be(4): mov (%rsp),%rcx
29c2(2): test %eax,%eax
29c4(3): mov %rcx,%rdx
29c7(6): jnz 0xffffff6e(%rip)
29cd(5): mov 0x78(%rsp),%rdx
29d2(3): mov %rcx,%rax
29d5(3): not %rax
29d8(3): cmp %rdx,%rax
29db(2): jb 0xb(%rip)
29dd(3): cmp %rcx,%rdx
29e0(6): jb 0xe74(%rip)
29e6(4): mov (%rsp),%rdx
29ea(5): jmp 0xffffff4b(%rip)
29ef(2): xor %esi,%esi
29f1(2): xor %edi,%edi
29f3(5): mov $0x1,%edx
29f8(5): call 0xfffff2e8(%rip)
29fd(3): xor %r13d,%r13d
2a00(3): test %rax,%rax
2a03(3): mov %rax,%rbx
2a06(6): js 0x564(%rip)
2a0c(5): mov 0x40(%rsp),%r14
2a11(5): mov 0x48(%rsp),%r15
2a16(2): jmp 0x1d(%rip)
2a18(4): cmp $0xffffffff,%rax
2a1c(6): jz 0x55e(%rip)
2a22(5): lea 0x0(%r13,%rax,1),%rbp
2a27(3): cmp %rbp,%r14
2a2a(3): mov %rbp,%r13
2a2d(6): jbe 0xd88(%rip)
2a33(3): mov %r14,%rdx
2a36(4): lea 0x0(%r15,%r13,1),%rsi
2a3a(2): xor %edi,%edi
2a3c(3): sub %r13,%rdx
2a3f(5): call 0x4901(%rip)
2a44(3): test %rax,%rax
2a47(2): jnz 0xffffffd1(%rip)
2a49(3): test %r13,%r13
2a4c(6): js 0x52e(%rip)
2a52(5): mov 0x40(%rsp),%rax
2a57(3): cmp %rax,%r13
2a5a(3): mov %rax,%rbp
2a5d(4): cmovbe %r13,%rbp
2a61(5): cmp $0x0,(%rsp)
2a66(6): js 0x1051(%rip)
2a6c(4): mov (%rsp),%rax
2a70(3): cmp %rax,%r13
2a73(4): cmovnae %rax,%r13
2a77(5): mov %r13,0x18(%rsp)
2a7c(5): jmp 0xfffffdb5(%rip)
2a81(4): mov (%rsp),%r15
2a85(2): xor %ebx,%ebx
2a87(6): mov $0x1,%r13d
2a8d(5): mov 0x40(%rsp),%rdx
2a92(5): mov 0x48(%rsp),%rsi
2a97(2): xor %edi,%edi
2a99(5): call 0x48a7(%rip)
2a9e(5): mov %rax,0x8(%rsp)
2aa3(4): add $0x1,%rax
2aa7(6): jz 0xeb3(%rip)
2aad(5): mov 0x48(%rsp),%rax
2ab2(5): mov 0x8(%rsp),%rbp
2ab7(7): mov 0x209552(%rip),%r12d
2abe(3): add %rax,%rbp
2ac1(3): mov %rax,%r14
2ac4(3): mov %rax,%rcx
2ac7(4): mov %r12b,0x0(%rbp)
2acb(5): nop 0x0(%rax,%rax,1)
2ad0(3): mov %rbp,%rdx
2ad3(3): mov %r12d,%esi
2ad6(3): mov %rcx,%rdi
2ad9(3): sub %rcx,%rdx
2adc(4): add $0x1,%rdx
2ae0(5): call 0xfffff270(%rip)
2ae5(3): cmp %rax,%rbp
2ae8(6): jz 0x578(%rip)
2aee(4): add $0x1,%rbx
2af2(4): lea 0x1(%rax),%rcx
2af6(3): cmp %r15,%rbx
2af9(2): jb 0xffffffd7(%rip)
2afb(3): mov %rcx,%rdx
2afe(4): movzx %r13b,%edi
2b02(3): mov %r14,%rsi
2b05(3): sub %r14,%rdx
2b08(4): mov %rcx,(%rsp)
2b0c(2): xor %ebx,%ebx
2b0e(5): call 0x2072(%rip)
2b13(4): mov (%rsp),%rcx
2b17(7): mov 0x2094f2(%rip),%r12d
2b1e(6): mov $0x1,%r13d
2b24(3): mov %rcx,%r14
2b27(2): jmp 0xffffffa9(%rip)
2b29(5): mov $0x0,0x10(%rsp)
2b2e(9): mov $0x0,0x18(%rsp)
2b37(3): xor %r12d,%r12d
2b3a(9): mov $0x0,0x8(%rsp)
2b43(3): xor %r13d,%r13d
2b46(a): nop 0x0(%rax,%rax,1)
2b50(5): mov 0x40(%rsp),%rdx
2b55(5): mov 0x48(%rsp),%rsi
2b5a(2): xor %edi,%edi
2b5c(5): call 0x47e4(%rip)
2b61(4): cmp $0xffffffff,%rax
2b65(3): mov %rax,%rbp
2b68(6): jz 0xe51(%rip)
2b6e(3): test %rax,%rax
2b71(6): jz 0x541(%rip)
2b77(5): mov 0x48(%rsp),%rbx
2b7c(2): jmp 0x73(%rip)
2b7e(2): nop 
2b80(3): mov %rcx,%rdx
2b83(3): mov %rbx,%rdi
2b86(5): lea 0xffffffff(%rbx,%rcx,1),%r14
2b8b(5): call 0xfffff325(%rip)
2b90(3): test %r12,%r12
2b93(3): mov %rax,%r8
2b96(6): jz 0x92(%rip)
2b9c(3): test %r13,%r13
2b9f(4): setz %dil
2ba3(3): test %r8,%r8
2ba6(6): jnz 0x442(%rip)
2bac(3): test %dil,%dil
2baf(6): jnz 0x439(%rip)
2bb5(5): cmp $0x0,0x10(%rsp)
2bba(6): jnz 0xaf(%rip)
2bc0(2): xor %edi,%edi
2bc2(3): test %r13,%r13
2bc5(4): setz %dil
2bc9(3): test %r14,%r14
2bcc(6): jz 0x474(%rip)
2bd2(3): mov %rbx,%rsi
2bd5(3): mov %r15,%rdx
2bd8(3): sub %r15,%rbp
2bdb(3): add %r15,%rbx
2bde(3): xor %r13d,%r13d
2be1(5): call 0x1f9f(%rip)
2be6(3): test %rbp,%rbp
2be9(6): jz 0xffffff67(%rip)
2bef(4): mov (%rsp),%rcx
2bf3(6): mov 0x209417(%rip),%esi
2bf9(3): sub %r13,%rcx
2bfc(3): sub %r12,%rcx
2bff(3): cmp %rcx,%rbp
2c02(3): mov %rcx,%r15
2c05(6): jnb 0xffffff7b(%rip)
2c0b(3): mov %rbp,%rdx
2c0e(3): mov %rbx,%rdi
2c11(3): xor %r14d,%r14d
2c14(5): call 0xfffff29c(%rip)
2c19(3): xor %r15d,%r15d
2c1c(3): test %r12,%r12
2c1f(3): mov %rax,%r8
2c22(6): jnz 0xffffff7a(%rip)
2c28(3): test %r8,%r8
2c2b(6): jz 0x42d(%rip)
2c31(3): sub %rbx,%r8
2c34(2): xor %edi,%edi
2c36(3): test %r13,%r13
2c39(4): lea 0x1(%r8),%r12
2c3d(4): setz %dil
2c41(3): mov %rbx,%rsi
2c44(3): mov %r12,%rdx
2c47(3): add %r12,%r13
2c4a(3): sub %r12,%rbp
2c4d(5): call 0x1f33(%rip)
2c52(3): add %r12,%rbx
2c55(3): test %r14,%r14
2c58(6): jz 0x368(%rip)
2c5e(3): sub %r12,%r15
2c61(5): mov $0x1,0x10(%rsp)
2c66(3): xor %r12d,%r12d
2c69(3): test %r14,%r14
2c6c(6): jz 0x35c(%rip)
2c72(3): test %r15,%r15
2c75(6): jz 0x353(%rip)
2c7b(5): mov 0x18(%rsp),%rcx
2c80(3): mov %rcx,%rax
2c83(3): sub %r12,%rax
2c86(3): cmp %r15,%rax
2c89(2): jnb 0x30(%rip)
2c8b(5): mov 0x40(%rsp),%rsi
2c90(3): mov %rsi,%rax
2c93(3): not %rax
2c96(3): cmp %rcx,%rax
2c99(6): jb 0xc9d(%rip)
2c9f(5): mov 0x8(%rsp),%rdi
2ca4(3): add %rsi,%rcx
2ca7(3): mov %rcx,%rsi
2caa(5): mov %rcx,0x18(%rsp)
2caf(5): call 0x4e11(%rip)
2cb4(5): mov %rax,0x8(%rsp)
2cb9(5): mov 0x8(%rsp),%rax
2cbe(3): mov %rbx,%rsi
2cc1(3): mov %r15,%rdx
2cc4(3): sub %r15,%rbp
2cc7(3): add %r15,%rbx
2cca(4): lea 0x0(%rax,%r12,1),%rdi
2cce(3): add %r15,%r12
2cd1(5): call 0xfffff0ff(%rip)
2cd6(5): movzx 0x10(%rsp),%edi
2cdb(3): test %r14,%r14
2cde(5): mov $0x0,%eax
2ce3(3): cmovne %eax,%edi
2ce6(5): mov $0x0,%eax
2ceb(5): mov %dil,0x10(%rsp)
2cf0(4): cmovne %rax,%r13
2cf4(5): jmp 0xfffffef2(%rip)
2cf9(4): mov (%rsp),%rax
2cfd(5): cmp %rax,0x10(%rsp)
2d02(6): jnbe 0xea6(%rip)
2d08(5): cmp %rax,0x18(%rsp)
2d0d(6): jb 0xe9b(%rip)
2d13(5): mov 0x18(%rsp),%rax
2d18(2): xor %edx,%edx
2d1a(5): mov 0x10(%rsp),%rsi
2d1f(4): div (%rsp),%rax
2d23(4): cmp $0x1,%rsi
2d27(5): mov %rax,0x8(%rsp)
2d2c(6): jbe 0xa20(%rip)
2d32(4): lea 0xffffffff(%rsi),%r12
2d36(4): imul %r12,%rax
2d3a(3): mov %rax,%rbx
2d3d(4): sub $0x1,%rbx
2d41(3): cmp %rbx,%rbp
2d44(3): mov %rbx,%r13
2d47(6): jbe 0x9ae(%rip)
2d4d(5): mov 0x48(%rsp),%rdi
2d52(3): sub %rbx,%rbp
2d55(3): mov %rbp,%rdx
2d58(4): lea 0x0(%rdi,%rbx,1),%rsi
2d5c(5): call 0xfffff134(%rip)
2d61(5): mov %rbx,0x20(%rsp)
2d66(5): mov 0x18(%rsp),%rax
2d6b(5): mov 0x10(%rsp),%rbx
2d70(5): mov $0x0,0x67(%rsp)
2d75(5): mov $0x1,0x50(%rsp)
2d7a(4): sub $0x1,%rax
2d7e(5): mov %rax,0x68(%rsp)
2d83(5): mov 0x20(%rsp),%rdi
2d88(5): cmp %rdi,0x18(%rsp)
2d8d(6): jle 0xb49(%rip)
2d93(4): cmp $0xffffffff,%rbp
2d97(6): jz 0xac5(%rip)
2d9d(3): test %rbp,%rbp
2da0(6): jz 0xb36(%rip)
2da6(5): mov 0x18(%rsp),%rax
2dab(5): sub 0x20(%rsp),%rax
2db0(5): mov 0x48(%rsp),%r8
2db5(5): mov $0x0,0x67(%rsp)
2dba(3): cmp %rbp,%rax
2dbd(3): mov %r8,%r14
2dc0(4): cmovbe %rax,%rbp
2dc4(3): add %rbp,%r14
2dc7(5): mov %rbp,0x38(%rsp)
2dcc(4): mov (%rsp),%rbp
2dd0(3): mov %r14,%r15
2dd3(5): mov 0x68(%rsp),%r14
2dd8(4): or $0xffffffff,%rax
2ddc(3): cmp %r8,%r15
2ddf(6): jz 0xaef(%rip)
2de5(3): mov %r13,%rax
2de8(5): sub 0x20(%rsp),%rax
2ded(5): mov 0x38(%rsp),%rsi
2df2(5): mov $0x0,%edx
2df7(5): mov %r8,0x28(%rsp)
2dfc(4): cmovs %rdx,%rax
2e00(3): cmp %rsi,%rax
2e03(4): cmovnbe %rsi,%rax
2e07(3): sub %rax,%rsi
2e0a(4): lea 0x0(%r8,%rax,1),%rdi
2e0e(3): mov %rsi,%rdx
2e11(6): mov 0x2091f9(%rip),%esi
2e17(5): call 0xffffef39(%rip)
2e1c(3): test %rax,%rax
2e1f(5): mov 0x28(%rsp),%r8
2e24(6): jz 0x687(%rip)
2e2a(4): lea 0x1(%rax),%r9
2e2e(5): mov $0x1,0x30(%rsp)
2e33(3): mov %r9,%rax
2e36(3): sub %r8,%rax
2e39(3): cmp %rbx,%r12
2e3c(5): mov %rax,0x28(%rsp)
2e41(6): jz 0x698(%rip)
2e47(3): test %rbx,%rbx
2e4a(6): jz 0x66e(%rip)
2e50(5): mov 0x20(%rsp),%rcx
2e55(5): add 0x28(%rsp),%rcx
2e5a(6): movzx 0x30(%rsp),%r8d
2e60(5): mov %rcx,0x20(%rsp)
2e65(3): nop (%rax)
2e68(3): cmp %r13,%rcx
2e6b(2): jnle 0xb(%rip)
2e6d(3): test %r8b,%r8b
2e70(6): jz 0x227(%rip)
2e76(3): mov %r8d,%eax
2e79(3): xor $0x1,%eax
2e7c(3): cmp %r9,%r15
2e7f(3): setz %dl
2e82(2): and %dl,%al
2e84(6): jnz 0x20f(%rip)
2e8a(4): add $0x1,%r12
2e8e(3): test %rbx,%rbx
2e91(3): setnz %dl
2e94(3): cmp %rbx,%r12
2e97(3): setnbe %al
2e9a(2): test %al,%dl
2e9c(2): jnz 0x7a(%rip)
2e9e(5): add 0x8(%rsp),%r13
2ea3(3): cmp %rbp,%r12
2ea6(4): cmove %r14,%r13
2eaa(3): cmp %r13,%rcx
2ead(6): jle 0x1de(%rip)
2eb3(3): test %rbx,%rbx
2eb6(2): jnz 0xffffffb2(%rip)
2eb8(2): xor %edx,%edx
2eba(2): xor %esi,%esi
2ebc(5): mov $0x1,%edi
2ec1(5): mov %r8b,0x66(%rsp)
2ec6(5): mov %rcx,0x58(%rsp)
2ecb(5): mov %r9,0x50(%rsp)
2ed0(5): call 0x1cb0(%rip)
2ed5(5): mov 0x50(%rsp),%r9
2eda(5): mov 0x58(%rsp),%rcx
2edf(6): movzx 0x66(%rsp),%r8d
2ee5(2): jmp 0xffffff83(%rip)
2ee7(6): cmp $0x0,0x10(%rsp)
2eed(6): jnz 0x6a2(%rip)
2ef3(5): mov 0x18(%rsp),%rax
2ef8(4): mov (%rsp),%r8
2efc(2): xor %edx,%edx
2efe(5): mov 0x48(%rsp),%rsi
2f03(3): mov %rbp,%rcx
2f06(3): div %r8,%rax
2f09(5): mov 0x40(%rsp),%rdx
2f0e(3): mov %rax,%rdi
2f11(5): call 0x1d7f(%rip)
2f16(2): xor %edi,%edi
2f18(5): call 0xffffee08(%rip)
2f1d(2): test %eax,%eax
2f1f(6): jnz 0xbea(%rip)
2f25(7): mov 0x20948c(%rip),%rcx
2f2c(6): mov 0x2095c6(%rip),%edx
2f32(2): xor %edi,%edi
2f34(6): mov 0x2090da(%rip),%esi
2f3a(5): call 0x1946(%rip)
2f3f(2): xor %eax,%eax
2f41(8): mov 0x138(%rsp),%rcx
2f49(9): xor $0x28,%rcx
2f52(6): jnz 0xbb2(%rip)
2f58(7): add $0x148,%rsp
2f5f(1): pop %rbx
2f60(1): pop %rbp
2f61(2): pop %r12
2f63(2): pop %r13
2f65(2): pop %r14
2f67(2): pop %r15
2f69(1): ret near (%rsp)
2f6a(5): call 0xffffec06(%rip)
2f6f(3): cmp $0x1d,(%rax)
2f72(2): jnz 0x8(%rip)
2f74(6): mov $0x0,(%rax)
2f7a(7): mov 0x20940f(%rip),%rdx
2f81(5): mov $0x3,%esi
2f86(2): xor %edi,%edi
2f88(5): call 0x41c8(%rip)
2f8d(7): lea 0x6b6c(%rip),%rsi
2f94(5): mov $0x5,%edx
2f99(2): xor %edi,%edi
2f9b(3): mov %rax,%rbp
2f9e(5): call 0xffffeca2(%rip)
2fa3(3): mov %rax,%rbx
2fa6(5): call 0xffffebca(%rip)
2fab(2): mov (%rax),%esi
2fad(3): mov %rbp,%rcx
2fb0(3): mov %rbx,%rdx
2fb3(5): mov $0x1,%edi
2fb8(2): xor %eax,%eax
2fba(5): call 0xffffeee6(%rip)
2fbf(1): nop 
2fc0(3): xor %r12d,%r12d
2fc3(5): mov $0x1,0x10(%rsp)
2fc8(3): test %r14,%r14
2fcb(6): jnz 0xfffffd0b(%rip)
2fd1(3): test %rbp,%rbp
2fd4(6): jz 0xfffffd02(%rip)
2fda(3): mov %rbp,%r15
2fdd(5): jmp 0xfffffc9e(%rip)
2fe2(6): nop 0x0(%rax,%rax,1)
2fe8(5): mov 0x8(%rsp),%rsi
2fed(4): movzx %dil,%edi
2ff1(3): mov %r12,%rdx
2ff4(5): mov %r8,0x20(%rsp)
2ff9(3): add %r12,%r13
2ffc(5): call 0x1b84(%rip)
3001(5): mov 0x40(%rsp),%rax
3006(5): mov 0x20(%rsp),%r8
300b(3): cmp %r12,%rax
300e(5): mov %rax,0x18(%rsp)
3013(6): jnb 0xfffffc15(%rip)
3019(5): mov 0x8(%rsp),%rdi
301e(3): mov %rax,%r12
3021(3): mov %rax,%rsi
3024(5): call 0x4a9c(%rip)
3029(5): mov %r12,0x18(%rsp)
302e(5): mov %rax,0x8(%rsp)
3033(5): mov 0x20(%rsp),%r8
3038(5): jmp 0xfffffbf0(%rip)
303d(3): nop (%rax)
3040(3): mov %rbp,%rdx
3043(3): mov %rbx,%rsi
3046(3): add %rbp,%r13
3049(5): call 0x1b37(%rip)
304e(5): jmp 0xfffffb02(%rip)
3053(5): nop 0x0(%rax,%rax,1)
3058(3): xor %r12d,%r12d
305b(5): jmp 0xfffffb5a(%rip)
3060(3): cmp %r14,%rbp
3063(2): jz 0x17(%rip)
3065(3): mov %rbp,%rdx
3068(4): movzx %r13b,%edi
306c(3): mov %r14,%rsi
306f(3): sub %r14,%rdx
3072(3): xor %r13d,%r13d
3075(5): call 0x1b0b(%rip)
307a(6): cmp $0x0,0x8(%rsp)
3080(6): jnz 0xfffffa0d(%rip)
3086(5): jmp 0xfffffe90(%rip)
308b(3): xor %r8d,%r8d
308e(5): jmp 0xfffffdda(%rip)
3093(4): mov %al,0x67(%rsp)
3097(5): movzx 0x30(%rsp),%eax
309c(5): mov 0x28(%rsp),%rcx
30a1(3): mov %r9,%r8
30a4(5): sub %rcx,0x38(%rsp)
30a9(4): mov %al,0x50(%rsp)
30ad(5): jmp 0xfffffd2b(%rip)
30b2(3): test %r12,%r12
30b5(6): jnz 0x625(%rip)
30bb(5): mov 0x8(%rsp),%rdi
30c0(5): call 0xffffea90(%rip)
30c5(5): jmp 0xfffffe51(%rip)
30ca(6): cmp $0x0,0x10(%rsp)
30d0(2): jnz 0x7a(%rip)
30d2(5): mov $0x20,%edx
30d7(2): xor %ecx,%ecx
30d9(3): mov %rdx,%rax
30dc(4): mul %rax,(%rsp),%rdx
30e0(6): jo 0xb1a(%rip)
30e6(3): test %rax,%rax
30e9(6): js 0x84d(%rip)
30ef(3): test %rcx,%rcx
30f2(6): jnz 0x844(%rip)
30f8(4): mov (%rsp),%r12
30fc(2): xor %ebp,%ebp
30fe(3): mov %r12,%rdi
3101(4): shl/sal $0x5,%rdi
3105(5): call 0x495b(%rip)
310a(5): mov %rax,0x30(%rsp)
310f(3): mov %rax,%rbx
3112(5): call 0xd0e(%rip)
3117(7): mov 0x20929a(%rip),%rdi
311e(4): add $0x1,%rbp
3122(4): add $0x20,%rbx
3126(5): call 0x4b6a(%rip)
312b(7): mov $0xffffffff,0xffffffe8(%rbx)
3132(4): mov %rax,0xffffffe0(%rbx)
3136(8): mov $0x0,0xfffffff0(%rbx)
313e(7): mov $0x0,0xfffffff8(%rbx)
3145(3): cmp %r12,%rbp
3148(2): jnz 0xffffffca(%rip)
314a(9): mov $0x1,0x8(%rsp)
3153(9): mov $0x0,0x18(%rsp)
315c(5): mov $0x0,0x38(%rsp)
3161(5): mov $0x0,0x28(%rsp)
3166(5): mov $0x0,0x50(%rsp)
316b(5): mov 0x40(%rsp),%rdx
3170(5): mov 0x48(%rsp),%rsi
3175(2): xor %edi,%edi
3177(5): call 0x41c9(%rip)
317c(4): cmp $0xffffffff,%rax
3180(6): jz 0xa47(%rip)
3186(3): test %rax,%rax
3189(6): jz 0x724(%rip)
318f(5): mov 0x48(%rsp),%rdi
3194(4): lea 0x0(%rdi,%rax,1),%rbp
3198(3): cmp %rbp,%rdi
319b(2): jz 0xffffffd0(%rip)
319d(3): mov %rdi,%r13
31a0(2): jmp 0x3c(%rip)
31a2(6): nop 0x0(%rax,%rax,1)
31a8(5): cmp %rax,0x8(%rsp)
31ad(6): jz 0x153(%rip)
31b3(3): test %r15b,%r15b
31b6(2): jz 0x1e(%rip)
31b8(5): mov 0x8(%rsp),%rdx
31bd(4): cmp (%rsp),%rdx
31c1(6): mov $0x1,%r13d
31c7(4): lea 0x1(%rdx),%rax
31cb(4): cmovne %rax,%r13
31cf(5): mov %r13,0x8(%rsp)
31d4(3): cmp %r12,%rbp
31d7(3): mov %r12,%r13
31da(2): jz 0xffffff91(%rip)
31dc(3): mov %rbp,%rbx
31df(6): mov 0x208e2b(%rip),%esi
31e5(3): mov %r13,%rdi
31e8(3): sub %r13,%rbx
31eb(3): mov %rbx,%rdx
31ee(5): call 0xffffeb62(%rip)
31f3(3): test %rax,%rax
31f6(6): jz 0xfa(%rip)
31fc(4): lea 0x1(%rax),%r12
3200(6): mov $0x1,%r15d
3206(3): mov %r12,%rbx
3209(3): sub %r13,%rbx
320c(5): mov 0x10(%rsp),%rax
3211(3): test %rax,%rax
3214(2): jnz 0xffffff94(%rip)
3216(5): mov 0x18(%rsp),%r14
321b(4): mov (%rsp),%rdx
321f(5): mov 0x30(%rsp),%rdi
3224(3): mov %r14,%rsi
3227(4): shl/sal $0x5,%r14
322b(5): call 0x1455(%rip)
3230(5): add 0x30(%rsp),%r14
3235(4): or %al,0x38(%rsp)
3239(5): call 0xffffe937(%rip)
323e(7): cmp $0x0,0x20909b(%rip)
3245(5): mov %rax,0x20(%rsp)
324a(6): jnz 0x196(%rip)
3250(4): mov 0x10(%r14),%rcx
3254(5): mov $0x1,%edx
3259(3): mov %rbx,%rsi
325c(3): mov %r13,%rdi
325f(5): call 0xffffebe1(%rip)
3264(4): cmp $0x1,%rax
3268(5): mov 0x20(%rsp),%rax
326d(6): jnz 0x103(%rip)
3273(3): cmp $0x20,(%rax)
3276(3): setz %al
3279(8): cmp $0x0,0x20927f(%rip)
3281(3): setnz %dl
3284(2): and %edx,%eax
3286(5): mov $0x1,%edx
328b(2): test %al,%al
328d(5): movzx 0x28(%rsp),%eax
3292(3): cmove %edx,%eax
3295(4): mov %al,0x28(%rsp)
3299(5): cmp $0x0,0x38(%rsp)
329e(6): jnz 0x112(%rip)
32a4(3): test %r15b,%r15b
32a7(6): jz 0xffffff2d(%rip)
32ad(6): add $0x1,0x18(%rsp)
32b3(5): mov 0x18(%rsp),%rax
32b8(4): cmp (%rsp),%rax
32bc(6): jnz 0xffffff18(%rip)
32c2(5): cmp $0x0,0x28(%rsp)
32c7(6): jz 0x26a(%rip)
32cd(5): movzx 0x28(%rsp),%eax
32d2(9): mov $0x0,0x18(%rsp)
32db(5): mov $0x0,0x28(%rsp)
32e0(4): mov %al,0x50(%rsp)
32e4(5): jmp 0xfffffef0(%rip)
32e9(7): nop 0x0(%rax)
32f0(3): mov %rbp,%r12
32f3(3): xor %r15d,%r15d
32f6(5): jmp 0xffffff16(%rip)
32fb(5): nop 0x0(%rax,%rax,1)
3300(7): cmp $0x0,0x208fd9(%rip)
3307(6): jnz 0x139(%rip)
330d(7): mov 0x208f54(%rip),%rcx
3314(5): mov $0x1,%edx
3319(3): mov %rbx,%rsi
331c(3): mov %r13,%rdi
331f(5): call 0xffffeb21(%rip)
3324(4): cmp $0x1,%rax
3328(6): jz 0xfffffe8b(%rip)
332e(7): mov 0x208f33(%rip),%rdi
3335(5): call 0xffffe8bb(%rip)
333a(7): lea 0x5afa(%rip),%rsi
3341(5): mov $0x5,%edx
3346(2): xor %edi,%edi
3348(5): call 0xffffe8f8(%rip)
334d(3): mov %rax,%rbx
3350(5): call 0xffffe820(%rip)
3355(2): mov (%rax),%esi
3357(7): lea 0x5a90(%rip),%rdx
335e(3): mov %rbx,%rcx
3361(5): mov $0x1,%edi
3366(2): xor %eax,%eax
3368(5): call 0xffffeb38(%rip)
336d(3): nop (%rax)
3370(3): cmp $0x20,(%rax)
3373(2): jnz 0x10(%rip)
3375(8): cmp $0x0,0x209183(%rip)
337d(6): jnz 0xffffff1c(%rip)
3383(3): mov (%r14),%rdx
3386(5): mov $0x3,%esi
338b(2): xor %edi,%edi
338d(5): call 0x3dc3(%rip)
3392(3): mov %rax,%rcx
3395(5): mov 0x20(%rsp),%rax
339a(7): lea 0x5a4d(%rip),%rdx
33a1(5): mov $0x1,%edi
33a6(2): mov (%rax),%esi
33a8(2): xor %eax,%eax
33aa(5): call 0xffffeaf6(%rip)
33af(1): nop 
33b0(4): mov 0x10(%r14),%rdi
33b4(5): call 0x4e8c(%rip)
33b9(2): test %eax,%eax
33bb(6): jnz 0x5d2(%rip)
33c1(8): mov $0x0,0x10(%r14)
33c9(8): mov $0xfffffffe,0x8(%r14)
33d1(5): jmp 0xfffffed3(%rip)
33d6(a): nop 0x0(%rax,%rax,1)
33e0(4): mov 0x8(%r14),%edi
33e4(3): mov %rbx,%rdx
33e7(3): mov %r13,%rsi
33ea(5): call 0x2156(%rip)
33ef(3): cmp %rbx,%rax
33f2(5): mov 0x20(%rsp),%rax
33f7(6): jz 0xfffffe7c(%rip)
33fd(3): cmp $0x20,(%rax)
3400(2): jnz 0x10(%rip)
3402(8): cmp $0x0,0x2090f6(%rip)
340a(6): jnz 0xfffffe8f(%rip)
3410(3): mov (%r14),%rdx
3413(5): mov $0x3,%esi
3418(2): xor %edi,%edi
341a(5): call 0x3d36(%rip)
341f(3): mov %rax,%rcx
3422(5): mov 0x20(%rsp),%rax
3427(7): lea 0x59c0(%rip),%rdx
342e(5): mov $0x1,%edi
3433(2): mov (%rax),%esi
3435(2): xor %eax,%eax
3437(5): call 0xffffea69(%rip)
343c(4): nop 0x0(%rax)
3440(3): mov %rbx,%rdx
3443(3): mov %r13,%rsi
3446(5): mov $0x1,%edi
344b(5): call 0x20f5(%rip)
3450(3): cmp %rbx,%rax
3453(6): jz 0xfffffd60(%rip)
3459(7): lea 0x59db(%rip),%rsi
3460(5): mov $0x5,%edx
3465(2): xor %edi,%edi
3467(5): call 0xffffe7d9(%rip)
346c(3): mov %rax,%rbx
346f(5): call 0xffffe701(%rip)
3474(2): mov (%rax),%esi
3476(7): lea 0x5971(%rip),%rdx
347d(3): mov %rbx,%rcx
3480(5): mov $0x1,%edi
3485(2): xor %eax,%eax
3487(5): call 0xffffea19(%rip)
348c(5): mov 0x40(%rsp),%rdx
3491(5): mov 0x48(%rsp),%rsi
3496(3): xor %r8d,%r8d
3499(4): mov (%rsp),%rdi
349d(4): or $0xffffffff,%rcx
34a1(5): call 0x17ef(%rip)
34a6(5): jmp 0xfffffa70(%rip)
34ab(3): mov %r15,%r9
34ae(5): mov $0x0,0x30(%rsp)
34b3(5): jmp 0xfffff980(%rip)
34b8(5): movzx 0x50(%rsp),%edi
34bd(5): mov 0x28(%rsp),%rdx
34c2(3): mov %r8,%rsi
34c5(5): mov %r9,0x58(%rsp)
34ca(5): call 0x16b6(%rip)
34cf(5): mov 0x58(%rsp),%r9
34d4(5): jmp 0xfffff97c(%rip)
34d9(3): mov %rax,%rdx
34dc(3): mov %r8,%rsi
34df(5): mov $0x1,%edi
34e4(5): mov %r9,0x50(%rsp)
34e9(5): call 0x2057(%rip)
34ee(5): cmp %rax,0x28(%rsp)
34f3(5): mov 0x50(%rsp),%r9
34f8(6): jz 0xfffff958(%rip)
34fe(7): lea 0x5936(%rip),%rsi
3505(5): mov $0x5,%edx
350a(2): xor %edi,%edi
350c(5): call 0xffffe734(%rip)
3511(3): mov %rax,%rbx
3514(5): call 0xffffe65c(%rip)
3519(2): mov (%rax),%esi
351b(7): lea 0x58cc(%rip),%rdx
3522(3): mov %rbx,%rcx
3525(5): mov $0x1,%edi
352a(2): xor %eax,%eax
352c(5): call 0xffffe974(%rip)
3531(4): movsxd (%rsp),%rbx
3535(5): mov 0x30(%rsp),%rbp
353a(4): mov (%rsp),%r13
353e(3): xor %r12d,%r12d
3541(3): cmp %r12,%rbx
3544(2): jnbe 0x1b(%rip)
3546(7): cmp $0x0,0x208d94(%rip)
354d(2): jnz 0x12(%rip)
354f(5): mov 0x30(%rsp),%rdi
3554(3): mov %r13,%rdx
3557(3): mov %r12,%rsi
355a(5): call 0x1126(%rip)
355f(3): mov 0x8(%rbp),%esi
3562(2): test %esi,%esi
3564(2): js 0x12(%rip)
3566(3): mov 0x18(%rbp),%edx
3569(4): mov 0x10(%rbp),%rdi
356d(4): mov 0x0(%rbp),%rcx
3571(5): call 0x130f(%rip)
3576(4): add $0x1,%r12
357a(7): mov $0xfffffffe,0x8(%rbp)
3581(4): add $0x20,%rbp
3585(3): cmp %r13,%r12
3588(2): jnz 0xffffffb9(%rip)
358a(5): jmp 0xfffff98c(%rip)
358f(4): mov (%rsp),%rax
3593(5): cmp %rax,0x10(%rsp)
3598(6): jnbe 0x3a3(%rip)
359e(5): mov 0x18(%rsp),%rcx
35a3(3): cmp %rcx,%rax
35a6(6): jnbe 0x395(%rip)
35ac(4): mov (%rsp),%rdi
35b0(5): mov 0x18(%rsp),%rax
35b5(2): xor %edx,%edx
35b7(5): mov 0x10(%rsp),%rcx
35bc(3): div %rdi,%rax
35bf(4): lea 0xffffffff(%rcx),%rsi
35c3(4): imul %rax,%rsi
35c7(3): cmp %rdi,%rcx
35ca(3): mov %rsi,%rbx
35cd(2): jz 0xb(%rip)
35cf(4): imul %rcx,%rax
35d3(5): mov %rax,0x18(%rsp)
35d8(3): cmp %rsi,%rbp
35db(6): jbe 0x18e(%rip)
35e1(5): mov 0x48(%rsp),%rdi
35e6(3): sub %rsi,%rbp
35e9(3): mov %rbp,%rdx
35ec(3): add %rdi,%rsi
35ef(5): call 0xffffe8a1(%rip)
35f4(5): mov 0x18(%rsp),%r14
35f9(5): mov 0x48(%rsp),%r15
35fe(4): or $0xffffffff,%r12
3602(3): mov %rbp,%rax
3605(3): cmp %rbx,%r14
3608(6): jle 0xfffff90e(%rip)
360e(4): cmp $0xffffffff,%rax
3612(2): jz 0x7c(%rip)
3614(3): test %rax,%rax
3617(6): jz 0xfffff8ff(%rip)
361d(3): mov %r14,%rbp
3620(3): mov %r15,%rsi
3623(5): mov $0x1,%edi
3628(3): sub %rbx,%rbp
362b(3): cmp %rax,%rbp
362e(4): cmovnbe %rax,%rbp
3632(3): mov %rbp,%rdx
3635(5): call 0x1f0b(%rip)
363a(3): cmp %rax,%rbp
363d(2): jz 0x46(%rip)
363f(5): call 0xffffe531(%rip)
3644(8): cmp $0x0,0x208eb4(%rip)
364c(2): jz 0x7(%rip)
364e(3): cmp $0x20,(%rax)
3651(2): jz 0x32(%rip)
3653(7): lea 0x65b8(%rip),%rdx
365a(3): mov %rax,%r13
365d(5): mov $0x3,%esi
3662(2): xor %edi,%edi
3664(5): call 0x3aec(%rip)
3669(4): mov 0x0(%r13),%esi
366d(7): lea 0x577a(%rip),%rdx
3674(3): mov %rax,%rcx
3677(5): mov $0x1,%edi
367c(2): xor %eax,%eax
367e(5): call 0xffffe822(%rip)
3683(3): add %rbp,%rbx
3686(3): mov %r12,%rax
3689(5): jmp 0xffffff7c(%rip)
368e(5): mov 0x40(%rsp),%rdx
3693(2): xor %edi,%edi
3695(3): mov %r15,%rsi
3698(5): call 0x3ca8(%rip)
369d(4): cmp $0xffffffff,%rax
36a1(6): jnz 0xffffff73(%rip)
36a7(7): mov 0x208ce2(%rip),%rdx
36ae(5): mov $0x3,%esi
36b3(2): xor %edi,%edi
36b5(5): call 0x3a9b(%rip)
36ba(3): mov %rax,%rbx
36bd(5): call 0xffffe4b3(%rip)
36c2(2): mov (%rax),%esi
36c4(7): lea 0x5723(%rip),%rdx
36cb(3): mov %rbx,%rcx
36ce(5): mov $0x1,%edi
36d3(2): xor %eax,%eax
36d5(5): call 0xffffe7cb(%rip)
36da(5): mov 0x8(%rsp),%rsi
36df(2): xor %edi,%edi
36e1(3): test %r13,%r13
36e4(4): setz %dil
36e8(3): mov %r12,%rdx
36eb(5): call 0x1495(%rip)
36f0(5): jmp 0xfffff9cb(%rip)
36f5(3): mov %rbx,%rsi
36f8(2): xor %edi,%edi
36fa(5): mov $0x1,%edx
36ff(3): sub %rbp,%rsi
3702(4): or $0xffffffff,%rbp
3706(5): call 0xffffe5da(%rip)
370b(3): test %rax,%rax
370e(5): mov %rbx,0x20(%rsp)
3713(6): jns 0xfffff653(%rip)
3719(7): mov 0x208c70(%rip),%rdx
3720(5): mov $0x3,%esi
3725(2): xor %edi,%edi
3727(5): call 0x3a29(%rip)
372c(3): mov %rax,%rbx
372f(5): call 0xffffe441(%rip)
3734(2): mov (%rax),%esi
3736(7): lea 0x56b1(%rip),%rdx
373d(3): mov %rbx,%rcx
3740(5): mov $0x1,%edi
3745(2): xor %eax,%eax
3747(5): call 0xffffe759(%rip)
374c(5): mov 0x8(%rsp),%rax
3751(9): mov $0x0,0x20(%rsp)
375a(6): mov $0x1,%r12d
3760(4): lea 0xffffffff(%rax),%r13
3764(5): jmp 0xfffff602(%rip)
3769(2): xor %edi,%edi
376b(5): mov $0x1,%edx
3770(4): or $0xffffffff,%rbp
3774(5): call 0xffffe56c(%rip)
3779(3): test %rax,%rax
377c(6): jns 0xfffffe78(%rip)
3782(7): mov 0x208c07(%rip),%rdx
3789(5): mov $0x3,%esi
378e(2): xor %edi,%edi
3790(5): call 0x39c0(%rip)
3795(3): mov %rax,%rbx
3798(5): call 0xffffe3d8(%rip)
379d(2): mov (%rax),%esi
379f(7): lea 0x5648(%rip),%rdx
37a6(3): mov %rbx,%rcx
37a9(5): mov $0x1,%edi
37ae(2): xor %eax,%eax
37b0(5): call 0xffffe6f0(%rip)
37b5(7): mov 0x208b74(%rip),%r14
37bc(3): test %r14,%r14
37bf(2): jz 0x73(%rip)
37c1(6): mov 0x208b51(%rip),%eax
37c7(3): add %rbp,%rbx
37ca(5): and $0xd000,%eax
37cf(5): cmp $0x8000,%eax
37d4(2): jnz 0x7(%rip)
37d6(3): cmp %rbx,%r14
37d9(2): jnl 0x3d(%rip)
37db(2): xor %esi,%esi
37dd(2): xor %edi,%edi
37df(5): mov $0x2,%edx
37e4(5): call 0xffffe4fc(%rip)
37e9(3): test %rax,%rax
37ec(3): mov %rax,%r14
37ef(6): js 0xfffff78b(%rip)
37f5(3): cmp %rax,%rbx
37f8(2): jz 0x1e(%rip)
37fa(2): xor %edx,%edx
37fc(2): xor %edi,%edi
37fe(3): mov %rbx,%rsi
3801(5): call 0xffffe4df(%rip)
3806(3): test %rax,%rax
3809(6): js 0xfffff771(%rip)
380f(3): cmp %rbx,%r14
3812(4): cmovnge %rbx,%r14
3816(3): sub %rbx,%r14
3819(a): mov $0x9223372036854775807,%rax
3823(3): mov %r14,%r13
3826(3): add %rbp,%r13
3829(3): cmp %rax,%r13
382c(6): jnz 0xfffff21d(%rip)
3832(5): call 0xffffe33e(%rip)
3837(6): mov $0x4b,(%rax)
383d(5): jmp 0xfffff73d(%rip)
3842(5): cmp $0xffffff7e,%eax
3847(6): jnz 0xe5(%rip)
384d(2): xor %edi,%edi
384f(5): call 0x1671(%rip)
3854(3): add %rcx,%rdx
3857(5): jmp 0xfffff0de(%rip)
385c(5): mov 0x40(%rsp),%rdx
3861(5): mov 0x48(%rsp),%rsi
3866(2): xor %edi,%edi
3868(5): call 0x3ad8(%rip)
386d(4): cmp $0xffffffff,%rax
3871(3): mov %rax,%rbp
3874(6): jnz 0xfffff529(%rip)
387a(7): mov 0x208b0f(%rip),%rdx
3881(5): mov $0x3,%esi
3886(2): xor %edi,%edi
3888(5): call 0x38c8(%rip)
388d(3): mov %rax,%rbx
3890(5): call 0xffffe2e0(%rip)
3895(2): mov (%rax),%esi
3897(7): lea 0x5550(%rip),%rdx
389e(3): mov %rbx,%rcx
38a1(5): mov $0x1,%edi
38a6(2): xor %eax,%eax
38a8(5): call 0xffffe5f8(%rip)
38ad(6): cmp $0x0,0x10(%rsp)
38b3(6): jnz 0xfffff663(%rip)
38b9(5): cmp $0x0,0x50(%rsp)
38be(6): jnz 0xfffffc73(%rip)
38c4(5): movsxd 0x18(%rsp),%rbx
38c9(5): jmp 0xfffffc6c(%rip)
38ce(3): mov %rax,%rbp
38d1(5): jmp 0xfffff4b2(%rip)
38d6(5): cmp $0x0,0x67(%rsp)
38db(2): jz 0x6(%rip)
38dd(4): add $0x1,%r12
38e1(6): cmp $0x0,0x10(%rsp)
38e7(2): jz 0x19(%rip)
38e9(5): jmp 0xfffff62d(%rip)
38ee(2): xor %edx,%edx
38f0(2): xor %esi,%esi
38f2(5): mov $0x1,%edi
38f7(4): add $0x1,%r12
38fb(5): call 0x1285(%rip)
3900(4): cmp (%rsp),%r12
3904(2): jbe 0xffffffea(%rip)
3906(5): jmp 0xfffff610(%rip)
390b(7): lea 0x6146(%rip),%rsi
3912(5): mov $0x5,%edx
3917(2): xor %edi,%edi
3919(5): call 0xffffe327(%rip)
391e(2): xor %esi,%esi
3920(3): mov %rax,%rdx
3923(2): xor %edi,%edi
3925(2): xor %eax,%eax
3927(5): call 0xffffe579(%rip)
392c(5): mov $0x1,%edi
3931(5): call 0x158f(%rip)
3936(5): call 0x437a(%rip)
393b(7): lea 0x624e(%rip),%rcx
3942(7): lea 0x517b(%rip),%rsi
3949(7): lea 0x61d0(%rip),%rdi
3950(5): mov $0x3e0,%edx
3955(5): call 0xffffe39b(%rip)
395a(7): mov 0x208a2f(%rip),%rdx
3961(5): mov $0x3,%esi
3966(2): xor %edi,%edi
3968(5): call 0x37e8(%rip)
396d(3): mov %rax,%rbx
3970(5): call 0xffffe200(%rip)
3975(2): mov (%rax),%esi
3977(7): lea 0x5470(%rip),%rdx
397e(3): mov %rbx,%rcx
3981(5): mov $0x1,%edi
3986(2): xor %eax,%eax
3988(5): call 0xffffe518(%rip)
398d(3): mov (%r14),%rdx
3990(5): mov $0x3,%esi
3995(2): xor %edi,%edi
3997(5): call 0x37b9(%rip)
399c(3): mov %rax,%rcx
399f(5): mov 0x20(%rsp),%rax
39a4(7): lea 0x5443(%rip),%rdx
39ab(5): mov $0x1,%edi
39b0(2): mov (%rax),%esi
39b2(2): xor %eax,%eax
39b4(5): call 0xffffe4ec(%rip)
39b9(7): mov 0x2089d0(%rip),%rdx
39c0(5): mov $0x3,%esi
39c5(2): xor %edi,%edi
39c7(5): call 0x3789(%rip)
39cc(3): mov %rax,%rbx
39cf(5): call 0xffffe1a1(%rip)
39d4(2): mov (%rax),%esi
39d6(7): lea 0x5411(%rip),%rdx
39dd(3): mov %rbx,%rcx
39e0(5): mov $0x1,%edi
39e5(2): xor %eax,%eax
39e7(5): call 0xffffe4b9(%rip)
39ec(7): mov 0x20899d(%rip),%rdx
39f3(5): mov $0x3,%esi
39f8(2): xor %edi,%edi
39fa(5): call 0x3756(%rip)
39ff(3): mov %rax,%rbx
3a02(5): call 0xffffe16e(%rip)
3a07(2): mov (%rax),%esi
3a09(7): lea 0x53de(%rip),%rdx
3a10(3): mov %rbx,%rcx
3a13(5): mov $0x1,%edi
3a18(2): xor %eax,%eax
3a1a(5): call 0xffffe486(%rip)
3a1f(7): mov 0x20896a(%rip),%rsi
3a26(5): mov $0x4,%edi
3a2b(5): call 0x3625(%rip)
3a30(7): lea 0x53cb(%rip),%rsi
3a37(5): mov $0x5,%edx
3a3c(2): xor %edi,%edi
3a3e(3): mov %rax,%rbp
3a41(5): call 0xffffe1ff(%rip)
3a46(3): mov %rax,%rbx
3a49(5): call 0xffffe127(%rip)
3a4e(2): mov (%rax),%esi
3a50(3): mov %rbp,%rcx
3a53(3): mov %rbx,%rdx
3a56(5): mov $0x1,%edi
3a5b(2): xor %eax,%eax
3a5d(5): call 0xffffe443(%rip)
3a62(2): cwde 
3a64(4): mov 0x0(%rbx,%rax,8),%rdi
3a68(5): call 0x38b8(%rip)
3a6d(7): lea 0x537d(%rip),%rsi
3a74(3): mov %rax,%rbx
3a77(5): mov $0x5,%edx
3a7c(2): xor %edi,%edi
3a7e(5): call 0xffffe1c2(%rip)
3a83(3): mov %rax,%rdx
3a86(2): xor %edi,%edi
3a88(3): mov %rbx,%rcx
3a8b(2): xor %esi,%esi
3a8d(2): xor %eax,%eax
3a8f(5): call 0xffffe411(%rip)
3a94(5): mov $0x1,%edi
3a99(5): call 0x1427(%rip)
3a9e(3): mov %r13,%rdi
3aa1(5): call 0x387f(%rip)
3aa6(5): mov $0x5,%edx
3aab(3): mov %rax,%rbx
3aae(7): lea 0x5e9b(%rip),%rsi
3ab5(2): jmp 0xffffffc7(%rip)
3ab7(4): mov (%rsp),%rdi
3abb(8): lea 0x120(%rsp),%rsi
3ac3(5): call 0x1afd(%rip)
3ac8(3): mov %rax,%rdi
3acb(5): call 0x3855(%rip)
3ad0(7): lea 0x5256(%rip),%rsi
3ad7(5): mov $0x5,%edx
3adc(2): xor %edi,%edi
3ade(3): mov %rax,%rbx
3ae1(5): call 0xffffe15f(%rip)
3ae6(7): lea 0x52fd(%rip),%rdx
3aed(3): mov %rax,%rcx
3af0(3): mov %rbx,%r8
3af3(5): mov $0x4b,%esi
3af8(5): mov $0x1,%edi
3afd(2): xor %eax,%eax
3aff(5): call 0xffffe3a1(%rip)
3b04(5): call 0xffffe16c(%rip)
3b09(7): mov 0x208880(%rip),%rdx
3b10(5): mov $0x3,%esi
3b15(2): xor %edi,%edi
3b17(5): call 0x3639(%rip)
3b1c(3): mov %rax,%rbx
3b1f(5): call 0xffffe051(%rip)
3b24(2): mov (%rax),%esi
3b26(7): lea 0x52c1(%rip),%rdx
3b2d(3): mov %rbx,%rcx
3b30(5): mov $0x1,%edi
3b35(2): xor %eax,%eax
3b37(5): call 0xffffe369(%rip)
3b3c(7): lea 0x5f4d(%rip),%rsi
3b43(5): mov $0x5,%edx
3b48(2): xor %edi,%edi
3b4a(5): call 0xffffe0f6(%rip)
3b4f(3): mov %r14,%rcx
3b52(3): mov %rax,%rdx
3b55(2): xor %esi,%esi
3b57(5): mov $0x1,%edi
3b5c(2): xor %eax,%eax
3b5e(5): call 0xffffe342(%rip)
3b63(4): mov (%rsp),%rdi
3b67(8): lea 0x120(%rsp),%rsi
3b6f(5): mov %r15d,0x8(%rsp)
3b74(5): call 0x1a4c(%rip)
3b79(7): lea 0x5e50(%rip),%rsi
3b80(5): mov $0x5,%edx
3b85(2): xor %edi,%edi
3b87(3): mov %rax,%rbx
3b8a(5): call 0xffffe0b6(%rip)
3b8f(5): mov 0x8(%rsp),%r8d
3b94(3): mov %rax,%rdx
3b97(3): mov %rbx,%rcx
3b9a(2): xor %esi,%esi
3b9c(5): mov $0x1,%edi
3ba1(2): xor %eax,%eax
3ba3(5): call 0xffffe2fd(%rip)
3ba8(7): lea 0x5fc1(%rip),%rcx
3baf(7): lea 0x4f0e(%rip),%rsi
3bb6(7): lea 0x5260(%rip),%rdi
3bbd(5): mov $0x362,%edx
3bc2(5): call 0xffffe12e(%rip)
3bc7(7): mov 0x2087c2(%rip),%rdx
3bce(5): mov $0x3,%esi
3bd3(2): xor %edi,%edi
3bd5(5): call 0x357b(%rip)
3bda(3): mov %rax,%rbx
3bdd(5): call 0xffffdf93(%rip)
3be2(2): mov (%rax),%esi
3be4(7): lea 0x5203(%rip),%rdx
3beb(3): mov %rbx,%rcx
3bee(5): mov $0x1,%edi
3bf3(2): xor %eax,%eax
3bf5(5): call 0xffffe2ab(%rip)
3bfa(5): mov $0x1,%ecx
3bff(5): jmp 0xfffff4e7(%rip)
3c04(3): mov %r13,%rdi
3c07(4): mov %r15d,(%rsp)
3c0b(5): call 0x3715(%rip)
3c10(4): mov (%rsp),%r8d
3c14(3): mov %rax,%rbx
3c17(5): mov $0x5,%edx
3c1c(7): lea 0x5e05(%rip),%rsi
3c23(4): cmp $0x64,%r8d
3c27(6): jnz 0xfffffe55(%rip)
3c2d(7): lea 0x5dc4(%rip),%rsi
3c34(2): xor %edi,%edi
3c36(5): call 0xffffe00a(%rip)
3c3b(5): jmp 0xfffffe48(%rip)
3c40(7): lea 0x5114(%rip),%rsi
3c47(5): mov $0x5,%edx
3c4c(2): xor %edi,%edi
3c4e(5): call 0xffffdff2(%rip)
3c53(2): xor %esi,%esi
3c55(3): mov %rax,%rdx
3c58(5): mov $0x1,%edi
3c5d(2): xor %eax,%eax
3c5f(5): call 0xffffe241(%rip)
3c64(7): lea 0x5108(%rip),%rdi
3c6b(5): call 0x36b5(%rip)
3c70(7): lea 0x5098(%rip),%rsi
3c77(5): mov $0x5,%edx
3c7c(2): xor %edi,%edi
3c7e(3): mov %rax,%rbx
3c81(5): call 0xffffdfbf(%rip)
3c86(7): lea 0x515d(%rip),%rdx
3c8d(3): mov %rax,%rcx
3c90(2): xor %edi,%edi
3c92(3): mov %rbx,%r8
3c95(2): xor %esi,%esi
3c97(2): xor %eax,%eax
3c99(5): call 0xffffe207(%rip)
3c9e(5): mov $0x1,%edi
3ca3(5): call 0x121d(%rip)
3ca8(5): mov $0x5,%edx
3cad(7): lea 0x5ccc(%rip),%rsi
3cb4(5): jmp 0xfffffc63(%rip)
3cb9(7): lea 0x5ce8(%rip),%rsi
3cc0(5): mov $0x5,%edx
3cc5(2): xor %edi,%edi
3cc7(5): call 0xffffdf79(%rip)
3ccc(2): xor %esi,%esi
3cce(3): mov %rax,%rdx
3cd1(5): mov $0x1,%edi
3cd6(2): xor %eax,%eax
3cd8(5): call 0xffffe1c8(%rip)
3cdd(3): mov %r13,%rdi
3ce0(5): call 0x3640(%rip)
3ce5(7): lea 0x5089(%rip),%rsi
3cec(3): mov %rax,%rbx
3cef(5): mov $0x5,%edx
3cf4(2): xor %edi,%edi
3cf6(5): call 0xffffdf4a(%rip)
3cfb(3): mov %rbx,%rcx
3cfe(3): mov %rax,%rdx
3d01(2): xor %esi,%esi
3d03(5): mov $0x1,%edi
3d08(2): xor %eax,%eax
3d0a(5): call 0xffffe196(%rip)
3d0f(1): nop 
3d10(2): xor %ebp,%ebp
3d12(3): mov %rdx,%r9
3d15(1): pop %rsi
3d16(3): mov %rsp,%rdx
3d19(4): and $0xfffffff0,%rsp
3d1d(1): push %rax
3d1e(1): push %rsp
3d1f(7): lea 0x4d5a(%rip),%r8
3d26(7): lea 0x4ce3(%rip),%rcx
3d2d(7): lea 0xffffe2ac(%rip),%rdi
3d34(6): call 0x20829e(%rip)
3d3a(1): hlt 

"_start" :
3d10(2): xor %ebp,%ebp
3d12(3): mov %rdx,%r9
3d15(1): pop %rsi
3d16(3): mov %rsp,%rdx
3d19(4): and $0xfffffff0,%rsp
3d1d(1): push %rax
3d1e(1): push %rsp
3d1f(7): lea 0x4d5a(%rip),%r8
3d26(7): lea 0x4ce3(%rip),%rcx
3d2d(7): lea 0xffffe2ac(%rip),%rdi
3d34(6): call 0x20829e(%rip)
3d3a(1): hlt 

"deregister_tm_clones" :
3d40(7): lea 0x208501(%rip),%rdi
3d47(1): push %rbp
3d48(7): lea 0x2084f9(%rip),%rax
3d4f(3): cmp %rdi,%rax
3d52(3): mov %rsp,%rbp
3d55(2): jz 0x1b(%rip)
3d57(7): mov 0x208272(%rip),%rax
3d5e(3): test %rax,%rax
3d61(2): jz 0xf(%rip)
3d63(1): pop %rbp
3d64(2): jmp %rax
3d66(a): nop 0x0(%rax,%rax,1)
3d70(1): pop %rbp
3d71(1): ret near (%rsp)

"register_tm_clones" :
3d80(7): lea 0x2084c1(%rip),%rdi
3d87(7): lea 0x2084ba(%rip),%rsi
3d8e(1): push %rbp
3d8f(3): sub %rdi,%rsi
3d92(3): mov %rsp,%rbp
3d95(4): sar $0x3,%rsi
3d99(3): mov %rsi,%rax
3d9c(4): shr $0x3f,%rax
3da0(3): add %rax,%rsi
3da3(3): sar $0x1,%rsi
3da6(2): jz 0x1a(%rip)
3da8(7): mov 0x208239(%rip),%rax
3daf(3): test %rax,%rax
3db2(2): jz 0xe(%rip)
3db4(1): pop %rbp
3db5(2): jmp %rax
3db7(9): nop 0x0(%rax,%rax,1)
3dc0(1): pop %rbp
3dc1(1): ret near (%rsp)

"__do_global_dtors_aux" :
3dd0(7): cmp $0x0,0x2084d1(%rip)
3dd7(2): jnz 0x31(%rip)
3dd9(8): cmp $0x0,0x20820f(%rip)
3de1(1): push %rbp
3de2(3): mov %rsp,%rbp
3de5(2): jz 0xe(%rip)
3de7(7): mov 0x20821a(%rip),%rdi
3dee(5): call 0xffffe1e2(%rip)
3df3(5): call 0xffffff4d(%rip)
3df8(7): mov $0x1,0x2084a9(%rip)
3dff(1): pop %rbp
3e00(1): ret near (%rsp)
3e01(7): nop 0x0(%rax)
3e08(2): REP ret near (%rsp)

"frame_dummy" :
3e10(1): push %rbp
3e11(3): mov %rsp,%rbp
3e14(1): pop %rbp
3e15(5): jmp 0xffffff6b(%rip)

"next_file_name" :
3e20(2): push %r13
3e22(2): push %r12
3e24(1): push %rbp
3e25(1): push %rbx
3e26(4): sub $0x8,%rsp
3e2a(7): mov 0x208587(%rip),%r12
3e31(7): mov 0x208570(%rip),%rbx
3e38(3): test %r12,%r12
3e3b(2): jz 0x81(%rip)
3e3d(3): test %rbx,%rbx
3e40(4): lea 0xffffffff(%rbx),%rax
3e44(6): jz 0x25a(%rip)
3e4a(7): mov 0x20846f(%rip),%rcx
3e51(8): movzx 0x2081bf(%rip),%r8d
3e59(7): mov 0x2081c0(%rip),%rsi
3e60(7): mov 0x208549(%rip),%rdi
3e67(2): jmp 0x34(%rip)
3e69(7): nop 0x0(%rax)
3e70(4): movzx 0x0(%rsi,%rdx,1),%edx
3e74(2): test %dl,%dl
3e76(3): mov %dl,0x0(%rdi,%rax,1)
3e79(6): jnz 0x1b0(%rip)
3e7f(8): mov $0x0,0x0(%rcx,%rax,8)
3e87(3): movzx (%rsi),%edx
3e8a(3): mov %dl,0x0(%rdi,%rax,1)
3e8d(4): sub $0x1,%rax
3e91(4): cmp $0xffffffff,%rax
3e95(6): jz 0x209(%rip)
3e9b(4): mov 0x0(%rcx,%rax,8),%rdx
3e9f(4): add $0x1,%rdx
3ea3(3): test %rax,%rax
3ea6(4): mov %rdx,0x0(%rcx,%rax,8)
3eaa(2): jnz 0xffffffc6(%rip)
3eac(3): test %r8b,%r8b
3eaf(2): jz 0xffffffc1(%rip)
3eb1(3): mov (%rcx),%r9
3eb4(6): cmp $0x0,0x1(%rsi,%r9,1)
3eba(2): jnz 0xffffffb6(%rip)
3ebc(7): mov 0x208415(%rip),%rbp
3ec3(3): test %rbp,%rbp
3ec6(6): jnz 0x172(%rip)
3ecc(7): mov 0x2084ed(%rip),%rdi
3ed3(5): call 0xffffdd8d(%rip)
3ed8(7): mov 0x2084b9(%rip),%rdi
3edf(3): mov %rax,%r13
3ee2(7): mov %rax,0x2083e7(%rip)
3ee9(2): xor %eax,%eax
3eeb(3): test %rdi,%rdi
3eee(2): jz 0x7(%rip)
3ef0(5): call 0xffffdd70(%rip)
3ef5(5): lea 0x0(%r13,%rbx,1),%rsi
3efa(7): mov %rax,0x2083c7(%rip)
3f01(3): add %rax,%rsi
3f04(7): mov %rsi,0x2083cd(%rip)
3f0b(4): add $0x1,%rsi
3f0f(3): cmp %rsi,%r13
3f12(6): jnbe 0x1b0(%rip)
3f18(3): mov %r12,%rdi
3f1b(5): call 0x3ba5(%rip)
3f20(7): mov 0x2083a9(%rip),%rbx
3f27(7): mov 0x208492(%rip),%rsi
3f2e(3): mov %rax,%rdi
3f31(3): mov %rax,%r12
3f34(7): mov %rax,0x20847d(%rip)
3f3b(3): mov %rbx,%rdx
3f3e(5): call 0xffffde92(%rip)
3f43(7): mov 0x2080d6(%rip),%rax
3f4a(7): mov 0x20836f(%rip),%r13
3f51(4): lea 0x0(%r12,%rbx,1),%rcx
3f55(3): movsx (%rax),%esi
3f58(7): mov 0x208449(%rip),%rbx
3f5f(3): mov %rcx,%rdi
3f62(7): mov %rcx,0x208447(%rip)
3f69(3): mov %rbx,%rdx
3f6c(5): call 0xffffdda4(%rip)
3f71(7): mov 0x208420(%rip),%rsi
3f78(3): test %rsi,%rsi
3f7b(2): jz 0x12(%rip)
3f7d(7): mov 0x208344(%rip),%rdx
3f84(4): lea 0x0(%rax,%rbx,1),%rdi
3f88(5): call 0xffffde48(%rip)
3f8d(7): mov 0x208344(%rip),%rax
3f94(3): mov %r13,%rdi
3f97(5): mov $0x0,0x0(%r12,%rax,1)
3f9c(5): call 0xffffdbb4(%rip)
3fa1(3): mov %rbx,%rdi
3fa4(5): mov $0x8,%esi
3fa9(5): call 0x3c87(%rip)
3fae(7): mov 0x2083eb(%rip),%r12
3fb5(3): mov %rax,%rbx
3fb8(7): mov %rax,0x208301(%rip)
3fbf(3): test %r12,%r12
3fc2(2): jz 0x67(%rip)
3fc4(3): test %rbp,%rbp
3fc7(6): jnz 0x100(%rip)
3fcd(3): mov %r12,%rdi
3fd0(5): call 0xffffdc90(%rip)
3fd5(7): mov 0x2083cc(%rip),%r13
3fdc(3): mov %rax,%rbp
3fdf(3): mov %rax,%rdx
3fe2(3): mov %r12,%rsi
3fe5(3): mov %r13,%rdi
3fe8(4): shl/sal $0x3,%r13
3fec(3): sub %rax,%rdi
3fef(7): add 0x2083ba(%rip),%rdi
3ff6(5): call 0xffffddda(%rip)
3ffb(3): test %rbp,%rbp
3ffe(4): lea 0xffffffff(%rbp),%rcx
4002(2): jz 0x27(%rip)
4004(3): neg %rbp
4007(5): lea 0x0(%r13,%rbp,8),%rax
400c(3): add %rbx,%rax
400f(1): nop 
4010(5): movsx 0x0(%r12,%rcx,1),%edx
4015(3): sub $0x30,%edx
4018(3): movsxd %edx,%rdx
401b(4): mov %rdx,0x0(%rax,%rcx,8)
401f(4): sub $0x1,%rcx
4023(4): cmp $0xffffffff,%rcx
4027(2): jnz 0xffffffe9(%rip)
4029(4): add $0x8,%rsp
402d(1): pop %rbx
402e(1): pop %rbp
402f(2): pop %r12
4031(2): pop %r13
4033(1): ret near (%rsp)
4034(4): nop 0x0(%rax)
4038(4): add $0x1,%rbx
403c(4): lea 0x3(%rbp),%rsi
4040(7): cmp 0x208289(%rip),%rsi
4047(4): lea 0x2(%rbp),%rax
404b(7): mov %rbx,0x208356(%rip)
4052(7): mov %rax,0x20827f(%rip)
4059(2): jb 0x69(%rip)
405b(3): mov %r12,%rdi
405e(5): call 0x3a62(%rip)
4063(7): mov 0x208256(%rip),%r13
406a(3): mov %rax,%r12
406d(7): mov %rax,0x208344(%rip)
4074(7): mov 0x207fa5(%rip),%rax
407b(7): mov 0x20824e(%rip),%rcx
4082(4): mov 0x0(%r13),%rdx
4086(4): lea 0x1(%rcx),%rbx
408a(4): movzx 0x0(%rax,%rdx,1),%edx
408e(7): mov %rbx,0x20823b(%rip)
4095(4): mov %dl,0x0(%r12,%rcx,1)
4099(5): jmp 0xfffffeb8(%rip)
409e(7): lea 0x4e4b(%rip),%rsi
40a5(5): mov $0x5,%edx
40aa(2): xor %edi,%edi
40ac(5): call 0xffffdb94(%rip)
40b1(2): xor %esi,%esi
40b3(3): mov %rax,%rdx
40b6(5): mov $0x1,%edi
40bb(2): xor %eax,%eax
40bd(5): call 0xffffdde3(%rip)
40c2(5): call 0x3bee(%rip)
40c7(7): lea 0x5ada(%rip),%rcx
40ce(7): lea 0x49ef(%rip),%rsi
40d5(7): lea 0x4a06(%rip),%rdi
40dc(5): mov $0x198,%edx
40e1(5): call 0xffffdc0f(%rip)

"create" :
40f0(2): push %r12
40f2(1): push %rbp
40f3(3): mov %rdi,%r12
40f6(1): push %rbx
40f7(7): sub $0xa0,%rsp
40fe(9): mov $0x28,%rax
4107(8): mov %rax,0x98(%rsp)
410f(2): xor %eax,%eax
4111(8): cmp $0x0,0x2083e7(%rip)
4119(6): jz 0x1bf(%rip)
411f(7): lea 0x4a05(%rip),%rdi
4126(5): call 0xffffda0a(%rip)
412b(7): lea 0x49ff(%rip),%rdi
4132(3): test %rax,%rax
4135(3): mov %rax,%rbp
4138(7): lea 0x49ab(%rip),%rax
413f(5): mov $0x1,%edx
4144(3): mov %r12,%rsi
4147(4): cmove %rax,%rbp
414b(5): call 0xffffda95(%rip)
4150(2): test %eax,%eax
4152(6): jnz 0x3af(%rip)
4158(7): cmp $0x0,0x208183(%rip)
415f(6): jnz 0x241(%rip)
4165(3): mov %rsp,%rdi
4168(5): call 0xffffdbc8(%rip)
416d(2): test %eax,%eax
416f(6): jnz 0x3be(%rip)
4175(5): call 0xffffde2b(%rip)
417a(2): test %eax,%eax
417c(2): mov %eax,%ebx
417e(2): jz 0x7a(%rip)
4180(3): cmp $0xff,%eax
4183(6): jz 0x4ca(%rip)
4189(3): mov (%rsp),%edi
418c(5): call 0xffffdb94(%rip)
4191(2): test %eax,%eax
4193(6): jnz 0x48e(%rip)
4199(7): mov 0x208340(%rip),%rcx
41a0(7): cmp 0x208341(%rip),%rcx
41a7(6): mov %ebx,0x20834b(%rip)
41ad(7): mov 0x20833c(%rip),%rdi
41b4(6): jz 0x2a4(%rip)
41ba(4): lea 0x1(%rcx),%rax
41be(7): mov %rax,0x20831b(%rip)
41c5(4): mov 0x4(%rsp),%eax
41c9(3): mov %eax,0x0(%rdi,%rcx,4)
41cc(4): mov 0x4(%rsp),%ebx
41d0(8): mov 0x98(%rsp),%rcx
41d8(9): xor $0x28,%rcx
41e1(2): mov %ebx,%eax
41e3(6): jnz 0x319(%rip)
41e9(7): add $0xa0,%rsp
41f0(1): pop %rbx
41f1(1): pop %rbp
41f2(2): pop %r12
41f4(1): ret near (%rsp)
41f5(3): nop (%rax)
41f8(8): cmp $0x0,0x2082e0(%rip)
4200(2): jz 0x2c(%rip)
4202(2): xor %ebx,%ebx
4204(4): nop 0x0(%rax)
4208(7): mov 0x2082e1(%rip),%rax
420f(3): mov 0x0(%rax,%rbx,4),%edi
4212(5): call 0xffffdb0e(%rip)
4217(2): test %eax,%eax
4219(6): jnz 0x2b7(%rip)
421f(4): add $0x1,%rbx
4223(7): cmp %rbx,0x2082b6(%rip)
422a(2): jnbe 0xffffffde(%rip)
422c(4): mov 0x4(%rsp),%edi
4230(5): call 0xffffdaf0(%rip)
4235(3): mov %eax,%r12d
4238(5): call 0xffffd938(%rip)
423d(3): test %r12d,%r12d
4240(3): mov %rax,%rbx
4243(6): jnz 0x357(%rip)
4249(3): mov (%rsp),%edi
424c(2): test %edi,%edi
424e(2): jz 0x21(%rip)
4250(2): xor %esi,%esi
4252(5): call 0xffffda4e(%rip)
4257(2): test %eax,%eax
4259(6): jnz 0x365(%rip)
425f(3): mov (%rsp),%edi
4262(5): call 0xffffdabe(%rip)
4267(2): test %eax,%eax
4269(6): jnz 0x17f(%rip)
426f(7): lea 0x2081ea(%rip),%rsi
4276(2): xor %edx,%edx
4278(5): mov $0x2,%edi
427d(5): call 0xffffd8c3(%rip)
4282(7): mov 0x208277(%rip),%r12
4289(3): mov %rbp,%rdi
428c(5): call 0x1134(%rip)
4291(7): lea 0x4918(%rip),%rdx
4298(3): xor %r8d,%r8d
429b(3): mov %rax,%rsi
429e(3): mov %r12,%rcx
42a1(3): mov %rbp,%rdi
42a4(2): xor %eax,%eax
42a6(5): call 0xffffdcca(%rip)
42ab(7): lea 0x4cae(%rip),%rsi
42b2(5): mov $0x5,%edx
42b7(2): xor %edi,%edi
42b9(5): call 0xffffd987(%rip)
42be(2): mov (%rbx),%esi
42c0(3): mov %rax,%rdx
42c3(3): mov %r12,%r8
42c6(3): mov %rbp,%rcx
42c9(5): mov $0x1,%edi
42ce(2): xor %eax,%eax
42d0(5): call 0xffffdbd0(%rip)
42d5(3): nop (%rax)
42d8(7): cmp $0x0,0x208003(%rip)
42df(6): jnz 0x131(%rip)
42e5(2): xor %eax,%eax
42e7(5): mov $0x1b6,%edx
42ec(5): mov $0x41,%esi
42f1(3): mov %r12,%rdi
42f4(5): call 0x117c(%rip)
42f9(2): test %eax,%eax
42fb(2): mov %eax,%ebx
42fd(6): js 0xfffffed3(%rip)
4303(3): mov %rsp,%rdx
4306(2): mov %eax,%esi
4308(5): mov $0x1,%edi
430d(5): call 0xffffdb13(%rip)
4312(2): test %eax,%eax
4314(6): jnz 0x2ce(%rip)
431a(5): mov 0x8(%rsp),%rax
431f(7): cmp %rax,0x207fe2(%rip)
4326(2): jnz 0x13(%rip)
4328(4): mov (%rsp),%rax
432c(7): cmp %rax,0x207fcd(%rip)
4333(6): jz 0x230(%rip)
4339(2): xor %esi,%esi
433b(2): mov %ebx,%edi
433d(5): call 0xffffd993(%rip)
4342(2): test %eax,%eax
4344(6): jz 0xfffffe8c(%rip)
434a(4): mov 0x18(%rsp),%eax
434e(5): and $0xf000,%eax
4353(5): cmp $0x8000,%eax
4358(6): jnz 0xfffffe78(%rip)
435e(3): mov %r12,%rdx
4361(5): mov $0x3,%esi
4366(2): xor %edi,%edi
4368(5): call 0x2de8(%rip)
436d(7): lea 0x47a2(%rip),%rsi
4374(5): mov $0x5,%edx
4379(2): xor %edi,%edi
437b(3): mov %rax,%rbp
437e(5): call 0xffffd8c2(%rip)
4383(3): mov %rax,%rbx
4386(5): call 0xffffd7ea(%rip)
438b(2): mov (%rax),%esi
438d(3): mov %rbp,%rcx
4390(3): mov %rbx,%rdx
4393(5): mov $0x1,%edi
4398(2): xor %eax,%eax
439a(5): call 0xffffdb06(%rip)
439f(1): nop 
43a0(3): mov %r12,%rdx
43a3(2): xor %edi,%edi
43a5(5): mov $0x3,%esi
43aa(5): call 0x2da6(%rip)
43af(7): lea 0x4780(%rip),%rsi
43b6(2): xor %edi,%edi
43b8(5): mov $0x5,%edx
43bd(3): mov %rax,%rbx
43c0(5): call 0xffffd880(%rip)
43c5(7): mov 0x207e9c(%rip),%rdi
43cc(3): mov %rax,%rdx
43cf(3): mov %rbx,%rcx
43d2(5): mov $0x1,%esi
43d7(2): xor %eax,%eax
43d9(5): call 0xffffdb67(%rip)
43de(5): jmp 0xfffffd87(%rip)
43e3(5): nop 0x0(%rax,%rax,1)
43e8(7): lea 0x47ae(%rip),%rsi
43ef(5): mov $0x5,%edx
43f4(2): xor %edi,%edi
43f6(5): call 0xffffd84a(%rip)
43fb(2): mov (%rbx),%esi
43fd(3): mov %rax,%rdx
4400(5): mov $0x1,%edi
4405(2): xor %eax,%eax
4407(5): call 0xffffda99(%rip)
440c(4): nop 0x0(%rax)
4410(3): mov %rdi,%rsi
4413(5): mov $0x4,%edi
4418(5): call 0x2c38(%rip)
441d(7): lea 0x46ce(%rip),%rsi
4424(2): xor %edi,%edi
4426(5): mov $0x5,%edx
442b(3): mov %rax,%rbx
442e(5): call 0xffffd812(%rip)
4433(7): mov 0x207e2e(%rip),%rdi
443a(3): mov %rax,%rdx
443d(3): mov %rbx,%rcx
4440(5): mov $0x1,%esi
4445(2): xor %eax,%eax
4447(5): call 0xffffdaf9(%rip)
444c(5): jmp 0xfffffe99(%rip)
4451(7): nop 0x0(%rax)
4458(3): test %rdi,%rdi
445b(2): jz 0x46(%rip)
445d(a): mov $0x1537228672809129300,%rax
4467(3): cmp %rax,%rcx
446a(2): jnbe 0x60(%rip)
446c(3): mov %rcx,%rax
446f(3): shr $0x1,%rax
4472(5): lea 0x1(%rcx,%rax,1),%rcx
4477(8): lea 0x0(,%rcx,4),%rsi
447f(7): mov %rcx,0x208062(%rip)
4486(5): call 0x363a(%rip)
448b(7): mov 0x20804e(%rip),%rcx
4492(3): mov %rax,%rdi
4495(7): mov %rax,0x208054(%rip)
449c(5): jmp 0xfffffd1e(%rip)
44a1(3): test %rcx,%rcx
44a4(5): mov $0x20,%eax
44a9(5): mov $0x4,%edx
44ae(4): cmove %rax,%rcx
44b2(3): mov %rdx,%rax
44b5(2): xor %esi,%esi
44b7(3): mul %rax,%rcx,%rdx
44ba(6): jo 0x9f(%rip)
44c0(3): test %rax,%rax
44c3(2): js 0x7(%rip)
44c5(3): test %rsi,%rsi
44c8(2): jz 0xffffffaf(%rip)
44ca(5): call 0x37e6(%rip)
44cf(1): nop 
44d0(7): lea 0x468d(%rip),%rsi
44d7(5): mov $0x5,%edx
44dc(2): xor %edi,%edi
44de(5): call 0xffffd762(%rip)
44e3(3): mov %rax,%rbx
44e6(5): call 0xffffd68a(%rip)
44eb(2): mov (%rax),%esi
44ed(3): mov %rbx,%rdx
44f0(5): mov $0x1,%edi
44f5(2): xor %eax,%eax
44f7(5): call 0xffffd9a9(%rip)
44fc(5): call 0xffffd774(%rip)
4501(7): lea 0x4a30(%rip),%rsi
4508(5): mov $0x5,%edx
450d(2): xor %edi,%edi
450f(5): call 0xffffd731(%rip)
4514(3): mov %rax,%rbx
4517(5): call 0xffffd659(%rip)
451c(2): mov (%rax),%esi
451e(3): mov %rbx,%rdx
4521(5): mov $0x1,%edi
4526(2): xor %eax,%eax
4528(5): call 0xffffd978(%rip)
452d(7): lea 0x461a(%rip),%rsi
4534(5): mov $0x5,%edx
4539(2): xor %edi,%edi
453b(5): call 0xffffd705(%rip)
4540(3): mov %rax,%rbx
4543(5): call 0xffffd62d(%rip)
4548(2): mov (%rax),%esi
454a(3): mov %rbx,%rdx
454d(5): mov $0x1,%edi
4552(2): xor %eax,%eax
4554(5): call 0xffffd94c(%rip)
4559(5): mov $0x1,%esi
455e(5): jmp 0xffffff62(%rip)
4563(3): mov %r12,%rsi
4566(5): mov $0x4,%edi
456b(5): call 0x2ae5(%rip)
4570(7): lea 0x4999(%rip),%rsi
4577(3): mov %rax,%rbx
457a(5): mov $0x5,%edx
457f(2): xor %edi,%edi
4581(5): call 0xffffd6bf(%rip)
4586(3): mov %rbx,%rcx
4589(3): mov %rax,%rdx
458c(2): xor %esi,%esi
458e(5): mov $0x1,%edi
4593(2): xor %eax,%eax
4595(5): call 0xffffd90b(%rip)
459a(7): lea 0x45d6(%rip),%rsi
45a1(5): mov $0x5,%edx
45a6(2): xor %edi,%edi
45a8(5): call 0xffffd698(%rip)
45ad(2): mov (%rbx),%esi
45af(3): mov %rax,%rdx
45b2(5): mov $0x1,%edi
45b7(2): xor %eax,%eax
45b9(5): call 0xffffd8e7(%rip)
45be(7): lea 0x45c6(%rip),%rsi
45c5(5): mov $0x5,%edx
45ca(2): xor %edi,%edi
45cc(5): call 0xffffd674(%rip)
45d1(2): mov (%rbx),%esi
45d3(3): mov %rax,%rdx
45d6(5): mov $0x1,%edi
45db(2): xor %eax,%eax
45dd(5): call 0xffffd8c3(%rip)
45e2(3): mov %r12,%rsi
45e5(5): mov $0x4,%edi
45ea(5): call 0x2a66(%rip)
45ef(7): lea 0x450e(%rip),%rsi
45f6(5): mov $0x5,%edx
45fb(2): xor %edi,%edi
45fd(3): mov %rax,%rbp
4600(5): call 0xffffd640(%rip)
4605(3): mov %rax,%rbx
4608(5): call 0xffffd568(%rip)
460d(2): mov (%rax),%esi
460f(3): mov %rbp,%rcx
4612(3): mov %rbx,%rdx
4615(5): mov $0x1,%edi
461a(2): xor %eax,%eax
461c(5): call 0xffffd884(%rip)
4621(7): lea 0x45a3(%rip),%rsi
4628(5): mov $0x5,%edx
462d(2): xor %edi,%edi
462f(5): call 0xffffd611(%rip)
4634(3): mov %rax,%rbx
4637(5): call 0xffffd539(%rip)
463c(2): mov (%rax),%esi
463e(3): mov %rbx,%rdx
4641(5): mov $0x1,%edi
4646(2): xor %eax,%eax
4648(5): call 0xffffd858(%rip)
464d(7): lea 0x455f(%rip),%rsi
4654(5): mov $0x5,%edx
4659(2): xor %edi,%edi
465b(5): call 0xffffd5e5(%rip)
4660(3): mov %rax,%rbx
4663(5): call 0xffffd50d(%rip)
4668(2): mov (%rax),%esi
466a(3): mov %rbx,%rdx
466d(5): mov $0x1,%edi
4672(2): xor %eax,%eax
4674(5): call 0xffffd82c(%rip)
4679(7): nop 0x0(%rax)
4680(2): push %r15
4682(2): push %r14
4684(2): push %r13
4686(3): mov %rsi,%r13
4689(2): push %r12
468b(4): shl/sal $0x5,%r13
468f(1): push %rbp
4690(1): push %rbx
4691(3): add %rdi,%r13
4694(2): xor %ebp,%ebp
4696(4): sub $0x18,%rsp
469a(4): mov 0x8(%r13),%eax
469e(2): test %eax,%eax
46a0(2): js 0x13(%rip)
46a2(4): add $0x18,%rsp
46a6(2): mov %ebp,%eax
46a8(1): pop %rbx
46a9(1): pop %rbp
46aa(2): pop %r12
46ac(2): pop %r13
46ae(2): pop %r14
46b0(2): pop %r15
46b2(1): ret near (%rsp)
46b3(4): lea 0xffffffff(%rsi),%rbx
46b7(4): lea 0xffffffff(%rdx),%r14
46bb(3): test %rsi,%rsi
46be(3): mov %rdi,%r12
46c1(3): mov %rsi,%r15
46c4(4): mov 0x0(%r13),%rdi
46c8(4): cmove %r14,%rbx
46cc(3): cmp $0xff,%eax
46cf(6): jz 0x9c(%rip)
46d5(3): nop (%rax)
46d8(2): xor %eax,%eax
46da(5): mov $0xc01,%esi
46df(5): call 0xd91(%rip)
46e4(2): test %eax,%eax
46e6(6): jns 0x92(%rip)
46ec(5): call 0xffffd484(%rip)
46f1(3): mov %rax,%r8
46f4(2): mov (%rax),%eax
46f6(3): sub $0x17,%eax
46f9(3): cmp $0x1,%eax
46fc(2): jbe 0x23(%rip)
46fe(5): jmp 0xe5(%rip)
4703(5): nop 0x0(%rax,%rax,1)
4708(4): lea 0xffffffff(%rbx),%rax
470c(3): test %rbx,%rbx
470f(4): cmove %r14,%rax
4713(3): cmp %r15,%rax
4716(3): mov %rax,%rbx
4719(6): jz 0x97(%rip)
471f(3): mov %rbx,%rbp
4722(4): shl/sal $0x5,%rbp
4726(3): add %r12,%rbp
4729(3): mov 0x8(%rbp),%eax
472c(2): test %eax,%eax
472e(2): js 0xffffffda(%rip)
4730(4): mov 0x10(%rbp),%rdi
4734(5): mov %r8,0x8(%rsp)
4739(5): call 0x3b07(%rip)
473e(2): test %eax,%eax
4740(6): jnz 0xd6(%rip)
4746(7): mov $0xfffffffe,0x8(%rbp)
474d(4): mov 0x8(%r13),%eax
4751(8): mov $0x0,0x10(%rbp)
4759(4): mov 0x0(%r13),%rdi
475d(5): mov $0x1,%ebp
4762(3): cmp $0xff,%eax
4765(6): jnz 0xffffff73(%rip)
476b(5): call 0xfffff985(%rip)
4770(2): test %eax,%eax
4772(6): js 0xffffff7a(%rip)
4778(7): lea 0x4467(%rip),%rsi
477f(4): mov %eax,0x8(%r13)
4783(2): mov %eax,%edi
4785(5): call 0xffffd6db(%rip)
478a(3): test %rax,%rax
478d(4): mov %rax,0x10(%r13)
4791(6): jz 0xb3(%rip)
4797(6): mov 0x207d5b(%rip),%eax
479d(a): mov $0x0,0x207d51(%rip)
47a7(4): mov %eax,0x18(%r13)
47ab(5): jmp 0xfffffef7(%rip)
47b0(4): mov 0x0(%r13),%rdx
47b4(5): mov $0x3,%esi
47b9(2): xor %edi,%edi
47bb(5): mov %r8,0x8(%rsp)
47c0(5): call 0x2990(%rip)
47c5(5): mov 0x8(%rsp),%r8
47ca(7): lea 0x461d(%rip),%rdx
47d1(3): mov %rax,%rcx
47d4(5): mov $0x1,%edi
47d9(2): xor %eax,%eax
47db(3): mov (%r8),%esi
47de(5): call 0xffffd6c2(%rip)
47e3(4): mov 0x0(%r13),%rdx
47e7(5): mov $0x3,%esi
47ec(2): xor %edi,%edi
47ee(5): mov %r8,0x8(%rsp)
47f3(5): call 0x295d(%rip)
47f8(5): mov 0x8(%rsp),%r8
47fd(7): lea 0x45ea(%rip),%rdx
4804(3): mov %rax,%rcx
4807(5): mov $0x1,%edi
480c(2): xor %eax,%eax
480e(3): mov (%r8),%esi
4811(5): call 0xffffd68f(%rip)
4816(4): mov 0x0(%rbp),%rdx
481a(5): mov $0x3,%esi
481f(2): xor %edi,%edi
4821(5): call 0x292f(%rip)
4826(5): mov 0x8(%rsp),%r8
482b(7): lea 0x45bc(%rip),%rdx
4832(3): mov %rax,%rcx
4835(5): mov $0x1,%edi
483a(2): xor %eax,%eax
483c(3): mov (%r8),%esi
483f(5): call 0xffffd661(%rip)
4844(4): mov 0x0(%r13),%rdx
4848(5): mov $0x3,%esi
484d(2): xor %edi,%edi
484f(5): call 0x2901(%rip)
4854(3): mov %rax,%rbx
4857(5): call 0xffffd319(%rip)
485c(2): mov (%rax),%esi
485e(7): lea 0x4589(%rip),%rdx
4865(3): mov %rbx,%rcx
4868(5): mov $0x1,%edi
486d(2): xor %eax,%eax
486f(5): call 0xffffd631(%rip)
4874(2): nop 
4876(a): nop 0x0(%rax,%rax,1)
4880(2): push %r13
4882(2): push %r12
4884(3): mov %edx,%r12d
4887(1): push %rbp
4888(1): push %rbx
4889(2): mov %esi,%ebp
488b(3): mov %rcx,%rbx
488e(4): sub $0x48,%rsp
4892(9): mov $0x28,%rax
489b(5): mov %rax,0x38(%rsp)
48a0(2): xor %eax,%eax
48a2(3): test %rdi,%rdi
48a5(6): jz 0x113(%rip)
48ab(5): call 0x3995(%rip)
48b0(2): test %eax,%eax
48b2(6): jnz 0xbe(%rip)
48b8(2): test %ebp,%ebp
48ba(2): js 0x46(%rip)
48bc(7): mov 0x207c1d(%rip),%rdi
48c3(3): test %rdi,%rdi
48c6(2): jz 0x3a(%rip)
48c8(7): mov 0x207c21(%rip),%rsi
48cf(2): cmp (%rsi),%ebp
48d1(6): jz 0x12f(%rip)
48d7(4): lea 0x4(%rsi),%rdx
48db(4): sub $0x1,%rdi
48df(2): xor %eax,%eax
48e1(2): jmp 0x1a(%rip)
48e3(5): nop 0x0(%rax,%rax,1)
48e8(3): mov %rdx,%rcx
48eb(4): add $0x1,%rax
48ef(4): add $0x4,%rdx
48f3(2): cmp %ebp,(%rcx)
48f5(6): jz 0x11b(%rip)
48fb(3): cmp %rax,%rdi
48fe(2): jnz 0xffffffea(%rip)
4900(3): test %r12d,%r12d
4903(2): jle 0x45(%rip)
4905(5): lea 0x1c(%rsp),%rsi
490a(2): xor %edx,%edx
490c(3): mov %r12d,%edi
490f(8): mov $0x0,0x1c(%rsp)
4917(5): call 0xffffd5a9(%rip)
491c(3): cmp $0xff,%eax
491f(6): jz 0x169(%rip)
4925(4): mov 0x1c(%rsp),%ecx
4929(2): mov %ecx,%ebp
492b(3): and $0x7f,%ebp
492e(3): lea 0x1(%rbp),%eax
4931(2): cmp $0x1,%al
4933(6): jle 0xf5(%rip)
4939(3): cmp $0xd,%ebp
493c(6): jnz 0x184(%rip)
4942(6): nop 0x0(%rax,%rax,1)
4948(5): mov 0x38(%rsp),%rax
494d(9): xor $0x28,%rax
4956(6): jnz 0x1ea(%rip)
495c(4): add $0x48,%rsp
4960(1): pop %rbx
4961(1): pop %rbp
4962(2): pop %r12
4964(2): pop %r13
4966(1): ret near (%rsp)
4967(9): nop 0x0(%rax,%rax,1)
4970(5): call 0xffffd200(%rip)
4975(8): cmp $0x0,0x207b83(%rip)
497d(3): mov %rax,%r13
4980(2): jz 0xb(%rip)
4982(3): cmp $0x20,(%rax)
4985(6): jz 0xffffff33(%rip)
498b(3): mov %rbx,%rdx
498e(5): mov $0x3,%esi
4993(2): xor %edi,%edi
4995(5): call 0x27bb(%rip)
499a(4): mov 0x0(%r13),%esi
499e(7): lea 0x4449(%rip),%rdx
49a5(3): mov %rax,%rcx
49a8(5): mov $0x1,%edi
49ad(2): xor %eax,%eax
49af(5): call 0xffffd4f1(%rip)
49b4(4): nop 0x0(%rax)
49b8(2): test %esi,%esi
49ba(6): js 0xffffff46(%rip)
49c0(2): mov %ebp,%edi
49c2(5): call 0xffffd35e(%rip)
49c7(2): test %eax,%eax
49c9(6): jns 0xfffffef3(%rip)
49cf(3): mov %rbx,%rdx
49d2(5): mov $0x3,%esi
49d7(2): xor %edi,%edi
49d9(5): call 0x2777(%rip)
49de(3): mov %rax,%rbx
49e1(5): call 0xffffd18f(%rip)
49e6(2): mov (%rax),%esi
49e8(7): lea 0x43ff(%rip),%rdx
49ef(3): mov %rbx,%rcx
49f2(5): mov $0x1,%edi
49f7(2): xor %eax,%eax
49f9(5): call 0xffffd4a7(%rip)
49fe(2): nop 
4a00(3): mov %rsi,%rcx
4a03(4): sub $0x1,%rdi
4a07(9): nop 0x0(%rax,%rax,1)
4a10(3): mov 0x0(%rsi,%rdi,4),%eax
4a13(7): mov %rdi,0x207ac6(%rip)
4a1a(2): mov %eax,(%rcx)
4a1c(5): jmp 0xfffffee4(%rip)
4a21(7): nop 0x0(%rax)
4a28(2): test %ebp,%ebp
4a2a(6): jnz 0x11b(%rip)
4a30(3): movzx %ch,%ebp
4a33(2): test %ebp,%ebp
4a35(6): jz 0xffffff13(%rip)
4a3b(7): mov 0x207abe(%rip),%r12
4a42(3): mov %rbx,%rdx
4a45(2): xor %edi,%edi
4a47(5): mov $0x3,%esi
4a4c(5): call 0x2704(%rip)
4a51(7): lea 0x4560(%rip),%rsi
4a58(3): mov %rax,%rbx
4a5b(2): xor %edi,%edi
4a5d(5): mov $0x5,%edx
4a62(5): call 0xffffd1de(%rip)
4a67(3): mov %r12,%r9
4a6a(3): mov %rax,%rdx
4a6d(3): mov %ebp,%r8d
4a70(3): mov %rbx,%rcx
4a73(2): xor %esi,%esi
4a75(2): mov %ebp,%edi
4a77(2): xor %eax,%eax
4a79(5): call 0xffffd427(%rip)
4a7e(5): jmp 0xfffffeca(%rip)
4a83(5): nop 0x0(%rax,%rax,1)
4a88(5): call 0xffffd0e8(%rip)
4a8d(3): cmp $0xa,(%rax)
4a90(3): mov %rax,%rbp
4a93(6): jz 0xfffffe92(%rip)
4a99(7): lea 0x4148(%rip),%rsi
4aa0(5): mov $0x5,%edx
4aa5(2): xor %edi,%edi
4aa7(5): call 0xffffd199(%rip)
4aac(3): mov 0x0(%rbp),%esi
4aaf(3): mov %rax,%rdx
4ab2(5): mov $0x1,%edi
4ab7(2): xor %eax,%eax
4ab9(5): call 0xffffd3e7(%rip)
4abe(2): nop 
4ac0(5): lea 0x20(%rsp),%r12
4ac5(2): mov %ebp,%edi
4ac7(3): mov %r12,%rsi
4aca(5): call 0x3ab6(%rip)
4acf(2): test %eax,%eax
4ad1(2): jnz 0x4f(%rip)
4ad3(3): mov %rbx,%rdx
4ad6(2): xor %edi,%edi
4ad8(5): mov $0x3,%esi
4add(7): mov 0x207a1c(%rip),%r13
4ae4(5): call 0x266c(%rip)
4ae9(7): lea 0x4498(%rip),%rsi
4af0(2): xor %edi,%edi
4af2(5): mov $0x5,%edx
4af7(3): mov %rax,%rbx
4afa(5): call 0xffffd146(%rip)
4aff(6): lea 0x80(%rbp),%edi
4b05(3): mov %rax,%rdx
4b08(3): mov %r13,%r9
4b0b(3): mov %r12,%r8
4b0e(3): mov %rbx,%rcx
4b11(2): xor %esi,%esi
4b13(2): xor %eax,%eax
4b15(5): call 0xffffd38b(%rip)
4b1a(5): jmp 0xfffffe2e(%rip)
4b1f(1): nop 
4b20(7): lea 0x40db(%rip),%rcx
4b27(3): mov %ebp,%r8d
4b2a(5): mov $0x13,%edx
4b2f(5): mov $0x1,%esi
4b34(3): mov %r12,%rdi
4b37(2): xor %eax,%eax
4b39(5): call 0xffffd487(%rip)
4b3e(2): jmp 0xffffff95(%rip)
4b40(5): call 0xffffd130(%rip)
4b45(7): lea 0x4494(%rip),%rsi
4b4c(5): mov $0x5,%edx
4b51(2): xor %edi,%edi
4b53(4): mov %ecx,0xc(%rsp)
4b57(5): call 0xffffd0e9(%rip)
4b5c(4): mov 0xc(%rsp),%ecx
4b60(3): mov %rax,%rdx
4b63(2): xor %esi,%esi
4b65(5): mov $0x1,%edi
4b6a(2): xor %eax,%eax
4b6c(5): call 0xffffd334(%rip)
4b71(5): nop 0x0(%rax,%rax,1)
4b76(a): nop 0x0(%rax,%rax,1)
4b80(1): push %rbp
4b81(1): push %rbx
4b82(3): mov %rsi,%rbp
4b85(3): mov %rdx,%rbx
4b88(4): sub $0x8,%rsp
4b8c(3): test %dil,%dil
4b8f(6): jz 0xc1(%rip)
4b95(3): test %rsi,%rsi
4b98(2): jnz 0x14(%rip)
4b9a(3): test %rdx,%rdx
4b9d(2): jnz 0xf(%rip)
4b9f(7): cmp $0x0,0x20773b(%rip)
4ba6(6): jnz 0x9a(%rip)
4bac(7): mov 0x207805(%rip),%rcx
4bb3(6): mov 0x20793f(%rip),%edx
4bb9(2): xor %edi,%edi
4bbb(6): mov 0x207453(%rip),%esi
4bc1(5): call 0xfffffcbf(%rip)
4bc6(5): call 0xfffff25a(%rip)
4bcb(7): mov 0x2077e6(%rip),%rdi
4bd2(5): call 0xfffff51e(%rip)
4bd7(2): test %eax,%eax
4bd9(2): mov %eax,%edi
4bdb(6): mov %eax,0x207433(%rip)
4be1(2): js 0x77(%rip)
4be3(3): mov %rbx,%rdx
4be6(3): mov %rbp,%rsi
4be9(5): call 0x957(%rip)
4bee(3): cmp %rbx,%rax
4bf1(2): jz 0x4f(%rip)
4bf3(5): call 0xffffcf7d(%rip)
4bf8(8): cmp $0x0,0x207900(%rip)
4c00(3): mov %rax,%rbx
4c03(2): jz 0x9(%rip)
4c05(2): xor %eax,%eax
4c07(3): cmp $0x20,(%rbx)
4c0a(2): jz 0x3b(%rip)
4c0c(7): mov 0x2077a5(%rip),%rdx
4c13(5): mov $0x3,%esi
4c18(2): xor %edi,%edi
4c1a(5): call 0x2536(%rip)
4c1f(2): mov (%rbx),%esi
4c21(7): lea 0x41c6(%rip),%rdx
4c28(3): mov %rax,%rcx
4c2b(5): mov $0x1,%edi
4c30(2): xor %eax,%eax
4c32(5): call 0xffffd26e(%rip)
4c37(9): nop 0x0(%rax,%rax,1)
4c40(5): mov $0x1,%eax
4c45(4): add $0x8,%rsp
4c49(1): pop %rbx
4c4a(1): pop %rbp
4c4b(1): ret near (%rsp)
4c4c(4): nop 0x0(%rax)
4c50(6): mov 0x2073be(%rip),%edi
4c56(2): jmp 0xffffff8d(%rip)
4c58(7): mov 0x207759(%rip),%rdx
4c5f(5): mov $0x3,%esi
4c64(2): xor %edi,%edi
4c66(5): call 0x24ea(%rip)
4c6b(3): mov %rax,%rbx
4c6e(5): call 0xffffcf02(%rip)
4c73(2): mov (%rax),%esi
4c75(7): lea 0x4172(%rip),%rdx
4c7c(3): mov %rbx,%rcx
4c7f(5): mov $0x1,%edi
4c84(2): xor %eax,%eax
4c86(5): call 0xffffd21a(%rip)
4c8b(5): nop 0x0(%rax,%rax,1)
4c90(2): push %r15
4c92(2): push %r14
4c94(3): xor %r14d,%r14d
4c97(2): push %r13
4c99(2): push %r12
4c9b(3): mov %rdi,%r15
4c9e(1): push %rbp
4c9f(1): push %rbx
4ca0(3): mov %rdi,%r12
4ca3(5): mov $0x1,%ebp
4ca8(5): mov $0x1,%ebx
4cad(4): sub $0x38,%rsp
4cb1(4): cmp $0xffffffff,%rcx
4cb5(5): mov %rsi,0x20(%rsp)
4cba(5): mov %rdx,0x28(%rsp)
4cbf(6): jz 0xa5(%rip)
4cc5(3): cmp %rdx,%rcx
4cc8(3): mov %rcx,%r13
4ccb(5): setb 0x1f(%rsp)
4cd0(3): cmp %r12,%r13
4cd3(6): jb 0xd3(%rip)
4cd9(3): test %r8,%r8
4cdc(5): mov 0x20(%rsp),%r9
4ce1(4): setz %r11b
4ce5(2): jmp 0x33(%rip)
4ce7(9): nop 0x0(%rax,%rax,1)
4cf0(3): movzx %bl,%ebx
4cf3(3): add %rbx,%r14
4cf6(3): cmp %r8,%r14
4cf9(3): setb %bl
4cfc(3): or %r11b,%bl
4cff(2): jnz 0xb(%rip)
4d01(3): test %bpl,%bpl
4d04(6): jz 0xc4(%rip)
4d0a(3): sub %r12,%r13
4d0d(3): add %r12,%r9
4d10(3): mov %r15,%r12
4d13(3): cmp %r13,%r15
4d16(2): jnbe 0x3a(%rip)
4d18(3): or %bl,%bpl
4d1b(2): jz 0xffffffd5(%rip)
4d1d(3): mov %r9,%rsi
4d20(3): movzx %bl,%edi
4d23(3): mov %r12,%rdx
4d26(5): mov %r8,0x10(%rsp)
4d2b(5): mov %r11b,0x1e(%rsp)
4d30(5): mov %r9,0x8(%rsp)
4d35(5): call 0xfffffe4b(%rip)
4d3a(5): mov 0x10(%rsp),%r8
4d3f(2): mov %eax,%ebp
4d41(6): movzx 0x1e(%rsp),%r11d
4d47(5): mov 0x8(%rsp),%r9
4d4c(2): jmp 0xffffffa4(%rip)
4d4e(2): nop 
4d50(3): test %r13,%r13
4d53(6): jnz 0x8d(%rip)
4d59(5): cmp $0x0,0x1f(%rsp)
4d5e(6): jnz 0xf0(%rip)
4d64(3): test %bpl,%bpl
4d67(6): jz 0xb9(%rip)
4d6d(5): mov 0x28(%rsp),%rdx
4d72(5): mov 0x20(%rsp),%rsi
4d77(2): xor %edi,%edi
4d79(5): mov %r8,0x8(%rsp)
4d7e(5): call 0x25c2(%rip)
4d83(4): cmp $0xffffffff,%rax
4d87(3): mov %rax,%r13
4d8a(5): mov 0x8(%rsp),%r8
4d8f(6): jz 0xf7(%rip)
4d95(3): test %rax,%rax
4d98(5): setz 0x1f(%rsp)
4d9d(3): cmp %r12,%r13
4da0(6): jnb 0xffffff39(%rip)
4da6(3): test %r13,%r13
4da9(2): jz 0xffffffb0(%rip)
4dab(2): mov %ebp,%eax
4dad(2): or %bl,%al
4daf(2): jnz 0x28(%rip)
4db1(3): movzx %al,%eax
4db4(2): xor %ebp,%ebp
4db6(5): mov $0x1,%edx
4dbb(3): add %rax,%r14
4dbe(3): cmp %r14,%r8
4dc1(3): setz %bl
4dc4(2): and %dl,%bl
4dc6(2): jz 0x4b(%rip)
4dc8(4): add $0x38,%rsp
4dcc(1): pop %rbx
4dcd(1): pop %rbp
4dce(2): pop %r12
4dd0(2): pop %r13
4dd2(2): pop %r14
4dd4(2): pop %r15
4dd6(1): ret near (%rsp)
4dd7(5): mov 0x20(%rsp),%r9
4ddc(4): nop 0x0(%rax)
4de0(3): movzx %bl,%edi
4de3(3): mov %r13,%rdx
4de6(3): mov %r9,%rsi
4de9(5): mov %r8,0x8(%rsp)
4dee(5): call 0xfffffd92(%rip)
4df3(5): mov 0x8(%rsp),%r8
4df8(2): mov %eax,%edx
4dfa(2): mov %eax,%ebp
4dfc(2): mov %ebx,%eax
4dfe(3): xor $0x1,%edx
4e01(3): movzx %al,%eax
4e04(3): add %rax,%r14
4e07(3): cmp %r14,%r8
4e0a(3): setz %bl
4e0d(2): and %dl,%bl
4e0f(2): jnz 0xffffffb9(%rip)
4e11(3): sub %r13,%r12
4e14(5): jmp 0xffffff45(%rip)
4e19(7): nop 0x0(%rax)
4e20(3): mov %r12,%rsi
4e23(2): xor %edi,%edi
4e25(5): mov $0x1,%edx
4e2a(5): mov %r8,0x8(%rsp)
4e2f(5): call 0xffffceb1(%rip)
4e34(4): cmp $0xffffffff,%rax
4e38(5): mov $0x1,%eax
4e3d(5): mov 0x8(%rsp),%r8
4e42(4): cmovne %r15,%r12
4e46(3): cmovne %eax,%ebx
4e49(5): jmp 0xffffff24(%rip)
4e4e(3): cmp %r8,%r14
4e51(4): lea 0x1(%r14),%rbx
4e55(6): jnb 0xffffff73(%rip)
4e5b(4): lea 0x1(%r8),%rbp
4e5f(1): nop 
4e60(2): xor %edx,%edx
4e62(2): xor %esi,%esi
4e64(5): mov $0x1,%edi
4e69(4): add $0x1,%rbx
4e6d(5): call 0xfffffd13(%rip)
4e72(3): cmp %rbx,%rbp
4e75(2): jnz 0xffffffeb(%rip)
4e77(4): add $0x38,%rsp
4e7b(1): pop %rbx
4e7c(1): pop %rbp
4e7d(2): pop %r12
4e7f(2): pop %r13
4e81(2): pop %r14
4e83(2): pop %r15
4e85(1): ret near (%rsp)
4e86(7): mov 0x207503(%rip),%rdx
4e8d(5): mov $0x3,%esi
4e92(2): xor %edi,%edi
4e94(5): call 0x22bc(%rip)
4e99(3): mov %rax,%rbx
4e9c(5): call 0xffffccd4(%rip)
4ea1(2): mov (%rax),%esi
4ea3(7): lea 0x3f44(%rip),%rdx
4eaa(3): mov %rbx,%rcx
4ead(5): mov $0x1,%edi
4eb2(2): xor %eax,%eax
4eb4(5): call 0xffffcfec(%rip)
4eb9(7): nop 0x0(%rax)
4ec0(2): push %r13
4ec2(2): push %r12
4ec4(5): mov $0x5,%edx
4ec9(1): push %rbp
4eca(1): push %rbx
4ecb(2): mov %edi,%ebp
4ecd(7): sub $0x88,%rsp
4ed4(7): mov 0x20763d(%rip),%rbx
4edb(9): mov $0x28,%rax
4ee4(5): mov %rax,0x78(%rsp)
4ee9(2): xor %eax,%eax
4eeb(2): test %edi,%edi
4eed(2): jz 0x30(%rip)
4eef(7): lea 0x4112(%rip),%rsi
4ef6(2): xor %edi,%edi
4ef8(5): call 0xffffcd48(%rip)
4efd(7): mov 0x20739c(%rip),%rdi
4f04(3): mov %rax,%rdx
4f07(3): mov %rbx,%rcx
4f0a(5): mov $0x1,%esi
4f0f(2): xor %eax,%eax
4f11(5): call 0xffffd02f(%rip)
4f16(2): mov %ebp,%edi
4f18(5): call 0xffffd008(%rip)
4f1d(7): lea 0x410c(%rip),%rsi
4f24(2): xor %edi,%edi
4f26(5): call 0xffffcd1a(%rip)
4f2b(3): mov %rbx,%rdx
4f2e(3): mov %rax,%rsi
4f31(5): mov $0x1,%edi
4f36(2): xor %eax,%eax
4f38(5): call 0xffffcf48(%rip)
4f3d(7): mov 0x207324(%rip),%rbx
4f44(7): lea 0x410d(%rip),%rsi
4f4b(5): mov $0x5,%edx
4f50(2): xor %edi,%edi
4f52(5): call 0xffffccee(%rip)
4f57(3): mov %rbx,%rsi
4f5a(3): mov %rax,%rdi
4f5d(5): call 0xffffce23(%rip)
4f62(7): mov 0x2072ff(%rip),%rbx
4f69(7): lea 0x4158(%rip),%rsi
4f70(5): mov $0x5,%edx
4f75(2): xor %edi,%edi
4f77(5): call 0xffffccc9(%rip)
4f7c(3): mov %rbx,%rsi
4f7f(3): mov %rax,%rdi
4f82(5): call 0xffffcdfe(%rip)
4f87(7): mov 0x2072da(%rip),%rbx
4f8e(7): lea 0x416b(%rip),%rsi
4f95(5): mov $0x5,%edx
4f9a(2): xor %edi,%edi
4f9c(5): call 0xffffcca4(%rip)
4fa1(3): mov %rbx,%rsi
4fa4(3): mov %rax,%rdi
4fa7(5): call 0xffffcdd9(%rip)
4fac(7): lea 0x419d(%rip),%rsi
4fb3(5): mov $0x5,%edx
4fb8(2): xor %edi,%edi
4fba(5): call 0xffffcc86(%rip)
4fbf(7): mov 0x2072a2(%rip),%rdi
4fc6(5): mov $0x2,%ecx
4fcb(3): mov %rax,%rdx
4fce(5): mov $0x1,%esi
4fd3(2): xor %eax,%eax
4fd5(5): call 0xffffcf6b(%rip)
4fda(7): mov 0x207287(%rip),%rbx
4fe1(7): lea 0x45b0(%rip),%rsi
4fe8(5): mov $0x5,%edx
4fed(2): xor %edi,%edi
4fef(5): call 0xffffcc51(%rip)
4ff4(3): mov %rbx,%rsi
4ff7(3): mov %rax,%rdi
4ffa(5): call 0xffffcd86(%rip)
4fff(7): mov 0x207262(%rip),%rbx
5006(7): lea 0x4603(%rip),%rsi
500d(5): mov $0x5,%edx
5012(2): xor %edi,%edi
5014(5): call 0xffffcc2c(%rip)
5019(3): mov %rbx,%rsi
501c(3): mov %rax,%rdi
501f(5): call 0xffffcd61(%rip)
5024(7): mov 0x20723d(%rip),%rbx
502b(7): lea 0x460e(%rip),%rsi
5032(5): mov $0x5,%edx
5037(2): xor %edi,%edi
5039(5): call 0xffffcc07(%rip)
503e(3): mov %rbx,%rsi
5041(3): mov %rax,%rdi
5044(5): call 0xffffcd3c(%rip)
5049(7): mov 0x207218(%rip),%rbx
5050(7): lea 0x4621(%rip),%rsi
5057(5): mov $0x5,%edx
505c(2): xor %edi,%edi
505e(5): call 0xffffcbe2(%rip)
5063(3): mov %rbx,%rsi
5066(3): mov %rax,%rdi
5069(5): call 0xffffcd17(%rip)
506e(7): mov 0x2071f3(%rip),%rbx
5075(7): lea 0x46d4(%rip),%rsi
507c(5): mov $0x5,%edx
5081(2): xor %edi,%edi
5083(5): call 0xffffcbbd(%rip)
5088(3): mov %rbx,%rsi
508b(3): mov %rax,%rdi
508e(7): lea 0x3b70(%rip),%rbx
5095(5): call 0xffffcceb(%rip)
509a(7): lea 0x3b6a(%rip),%rax
50a1(7): lea 0x3ba4(%rip),%rcx
50a8(9): mov $0x0,0x60(%rsp)
50b1(9): mov $0x0,0x68(%rsp)
50ba(3): mov %rsp,%rdx
50bd(4): mov %rax,(%rsp)
50c1(7): lea 0x3b45(%rip),%rax
50c8(5): mov %rcx,0x30(%rsp)
50cd(7): lea 0x3b82(%rip),%rcx
50d4(5): mov %rax,0x8(%rsp)
50d9(7): lea 0x3ba5(%rip),%rax
50e0(5): mov %rcx,0x40(%rsp)
50e5(7): lea 0x3b74(%rip),%rcx
50ec(5): mov %rax,0x10(%rsp)
50f1(7): lea 0x3b25(%rip),%rax
50f8(5): mov %rcx,0x50(%rsp)
50fd(5): mov %rax,0x18(%rsp)
5102(7): lea 0x3b2a(%rip),%rax
5109(5): mov %rax,0x20(%rsp)
510e(7): lea 0x3b28(%rip),%rax
5115(5): mov %rax,0x28(%rsp)
511a(5): mov %rax,0x38(%rsp)
511f(5): mov %rax,0x48(%rsp)
5124(5): mov %rax,0x58(%rsp)
5129(7): nop 0x0(%rax)
5130(4): add $0x10,%rdx
5134(3): mov (%rdx),%rdi
5137(3): test %rdi,%rdi
513a(2): jz 0x15(%rip)
513c(5): mov $0x6,%ecx
5141(3): mov %rbx,%rsi
5144(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5146(3): setnbe %al
5149(2): sbb $0x0,%al
514b(2): test %al,%al
514d(2): jnz 0xffffffe3(%rip)
514f(4): mov 0x8(%rdx),%r12
5153(2): xor %edi,%edi
5155(5): mov $0x5,%edx
515a(7): lea 0x3b09(%rip),%rsi
5161(3): test %r12,%r12
5164(6): jz 0xc7(%rip)
516a(5): call 0xffffcad6(%rip)
516f(7): lea 0x4732(%rip),%rcx
5176(7): lea 0x3b04(%rip),%rdx
517d(3): mov %rax,%rsi
5180(5): mov $0x1,%edi
5185(2): xor %eax,%eax
5187(5): call 0xffffccf9(%rip)
518c(2): xor %esi,%esi
518e(5): mov $0x5,%edi
5193(5): call 0xffffccdd(%rip)
5198(3): test %rax,%rax
519b(2): jz 0x1e(%rip)
519d(7): lea 0x3aeb(%rip),%rsi
51a4(5): mov $0x3,%edx
51a9(3): mov %rax,%rdi
51ac(5): call 0xffffc9d4(%rip)
51b1(2): test %eax,%eax
51b3(6): jnz 0x10d(%rip)
51b9(7): lea 0x3ad3(%rip),%rsi
51c0(2): xor %edi,%edi
51c2(5): mov $0x5,%edx
51c7(5): call 0xffffca79(%rip)
51cc(7): lea 0x3a32(%rip),%rcx
51d3(7): lea 0x46ce(%rip),%rdx
51da(3): mov %rax,%rsi
51dd(5): mov $0x1,%edi
51e2(2): xor %eax,%eax
51e4(5): call 0xffffcc9c(%rip)
51e9(3): cmp %rbx,%r12
51ec(7): lea 0x3a34(%rip),%rcx
51f3(7): lea 0x4f47(%rip),%rbx
51fa(4): cmove %rcx,%rbx
51fe(7): lea 0x4713(%rip),%rsi
5205(2): xor %edi,%edi
5207(5): mov $0x5,%edx
520c(5): call 0xffffca34(%rip)
5211(3): mov %rbx,%rcx
5214(3): mov %rax,%rsi
5217(3): mov %r12,%rdx
521a(5): mov $0x1,%edi
521f(2): xor %eax,%eax
5221(5): call 0xffffcc5f(%rip)
5226(5): jmp 0xfffffcf0(%rip)
522b(5): call 0xffffca15(%rip)
5230(7): lea 0x4671(%rip),%rcx
5237(7): lea 0x3a43(%rip),%rdx
523e(3): mov %rax,%rsi
5241(5): mov $0x1,%edi
5246(2): xor %eax,%eax
5248(5): call 0xffffcc38(%rip)
524d(2): xor %esi,%esi
524f(5): mov $0x5,%edi
5254(5): call 0xffffcc1c(%rip)
5259(3): test %rax,%rax
525c(2): jz 0x1a(%rip)
525e(7): lea 0x3a2a(%rip),%rsi
5265(5): mov $0x3,%edx
526a(3): mov %rax,%rdi
526d(5): call 0xffffc913(%rip)
5272(2): test %eax,%eax
5274(2): jnz 0x45(%rip)
5276(7): lea 0x3a16(%rip),%rsi
527d(5): mov $0x5,%edx
5282(2): xor %edi,%edi
5284(7): lea 0x397a(%rip),%r12
528b(7): lea 0x3995(%rip),%rbx
5292(5): call 0xffffc9ae(%rip)
5297(7): lea 0x3967(%rip),%rcx
529e(7): lea 0x4603(%rip),%rdx
52a5(3): mov %rax,%rsi
52a8(5): mov $0x1,%edi
52ad(2): xor %eax,%eax
52af(5): call 0xffffcbd1(%rip)
52b4(5): jmp 0xffffff4a(%rip)
52b9(7): lea 0x3945(%rip),%r12
52c0(7): mov 0x206fa1(%rip),%r13
52c7(7): lea 0x4602(%rip),%rsi
52ce(2): xor %edi,%edi
52d0(5): mov $0x5,%edx
52d5(5): call 0xffffc96b(%rip)
52da(3): mov %r13,%rsi
52dd(3): mov %rax,%rdi
52e0(5): call 0xffffcaa0(%rip)
52e5(5): jmp 0xfffffed4(%rip)

"ofile_open" :
4680(2): push %r15
4682(2): push %r14
4684(2): push %r13
4686(3): mov %rsi,%r13
4689(2): push %r12
468b(4): shl/sal $0x5,%r13
468f(1): push %rbp
4690(1): push %rbx
4691(3): add %rdi,%r13
4694(2): xor %ebp,%ebp
4696(4): sub $0x18,%rsp
469a(4): mov 0x8(%r13),%eax
469e(2): test %eax,%eax
46a0(2): js 0x13(%rip)
46a2(4): add $0x18,%rsp
46a6(2): mov %ebp,%eax
46a8(1): pop %rbx
46a9(1): pop %rbp
46aa(2): pop %r12
46ac(2): pop %r13
46ae(2): pop %r14
46b0(2): pop %r15
46b2(1): ret near (%rsp)
46b3(4): lea 0xffffffff(%rsi),%rbx
46b7(4): lea 0xffffffff(%rdx),%r14
46bb(3): test %rsi,%rsi
46be(3): mov %rdi,%r12
46c1(3): mov %rsi,%r15
46c4(4): mov 0x0(%r13),%rdi
46c8(4): cmove %r14,%rbx
46cc(3): cmp $0xff,%eax
46cf(6): jz 0x9c(%rip)
46d5(3): nop (%rax)
46d8(2): xor %eax,%eax
46da(5): mov $0xc01,%esi
46df(5): call 0xd91(%rip)
46e4(2): test %eax,%eax
46e6(6): jns 0x92(%rip)
46ec(5): call 0xffffd484(%rip)
46f1(3): mov %rax,%r8
46f4(2): mov (%rax),%eax
46f6(3): sub $0x17,%eax
46f9(3): cmp $0x1,%eax
46fc(2): jbe 0x23(%rip)
46fe(5): jmp 0xe5(%rip)
4703(5): nop 0x0(%rax,%rax,1)
4708(4): lea 0xffffffff(%rbx),%rax
470c(3): test %rbx,%rbx
470f(4): cmove %r14,%rax
4713(3): cmp %r15,%rax
4716(3): mov %rax,%rbx
4719(6): jz 0x97(%rip)
471f(3): mov %rbx,%rbp
4722(4): shl/sal $0x5,%rbp
4726(3): add %r12,%rbp
4729(3): mov 0x8(%rbp),%eax
472c(2): test %eax,%eax
472e(2): js 0xffffffda(%rip)
4730(4): mov 0x10(%rbp),%rdi
4734(5): mov %r8,0x8(%rsp)
4739(5): call 0x3b07(%rip)
473e(2): test %eax,%eax
4740(6): jnz 0xd6(%rip)
4746(7): mov $0xfffffffe,0x8(%rbp)
474d(4): mov 0x8(%r13),%eax
4751(8): mov $0x0,0x10(%rbp)
4759(4): mov 0x0(%r13),%rdi
475d(5): mov $0x1,%ebp
4762(3): cmp $0xff,%eax
4765(6): jnz 0xffffff73(%rip)
476b(5): call 0xfffff985(%rip)
4770(2): test %eax,%eax
4772(6): js 0xffffff7a(%rip)
4778(7): lea 0x4467(%rip),%rsi
477f(4): mov %eax,0x8(%r13)
4783(2): mov %eax,%edi
4785(5): call 0xffffd6db(%rip)
478a(3): test %rax,%rax
478d(4): mov %rax,0x10(%r13)
4791(6): jz 0xb3(%rip)
4797(6): mov 0x207d5b(%rip),%eax
479d(a): mov $0x0,0x207d51(%rip)
47a7(4): mov %eax,0x18(%r13)
47ab(5): jmp 0xfffffef7(%rip)
47b0(4): mov 0x0(%r13),%rdx
47b4(5): mov $0x3,%esi
47b9(2): xor %edi,%edi
47bb(5): mov %r8,0x8(%rsp)
47c0(5): call 0x2990(%rip)
47c5(5): mov 0x8(%rsp),%r8
47ca(7): lea 0x461d(%rip),%rdx
47d1(3): mov %rax,%rcx
47d4(5): mov $0x1,%edi
47d9(2): xor %eax,%eax
47db(3): mov (%r8),%esi
47de(5): call 0xffffd6c2(%rip)
47e3(4): mov 0x0(%r13),%rdx
47e7(5): mov $0x3,%esi
47ec(2): xor %edi,%edi
47ee(5): mov %r8,0x8(%rsp)
47f3(5): call 0x295d(%rip)
47f8(5): mov 0x8(%rsp),%r8
47fd(7): lea 0x45ea(%rip),%rdx
4804(3): mov %rax,%rcx
4807(5): mov $0x1,%edi
480c(2): xor %eax,%eax
480e(3): mov (%r8),%esi
4811(5): call 0xffffd68f(%rip)
4816(4): mov 0x0(%rbp),%rdx
481a(5): mov $0x3,%esi
481f(2): xor %edi,%edi
4821(5): call 0x292f(%rip)
4826(5): mov 0x8(%rsp),%r8
482b(7): lea 0x45bc(%rip),%rdx
4832(3): mov %rax,%rcx
4835(5): mov $0x1,%edi
483a(2): xor %eax,%eax
483c(3): mov (%r8),%esi
483f(5): call 0xffffd661(%rip)
4844(4): mov 0x0(%r13),%rdx
4848(5): mov $0x3,%esi
484d(2): xor %edi,%edi
484f(5): call 0x2901(%rip)
4854(3): mov %rax,%rbx
4857(5): call 0xffffd319(%rip)
485c(2): mov (%rax),%esi
485e(7): lea 0x4589(%rip),%rdx
4865(3): mov %rbx,%rcx
4868(5): mov $0x1,%edi
486d(2): xor %eax,%eax
486f(5): call 0xffffd631(%rip)
4874(2): nop 
4876(a): nop 0x0(%rax,%rax,1)
4880(2): push %r13
4882(2): push %r12
4884(3): mov %edx,%r12d
4887(1): push %rbp
4888(1): push %rbx
4889(2): mov %esi,%ebp
488b(3): mov %rcx,%rbx
488e(4): sub $0x48,%rsp
4892(9): mov $0x28,%rax
489b(5): mov %rax,0x38(%rsp)
48a0(2): xor %eax,%eax
48a2(3): test %rdi,%rdi
48a5(6): jz 0x113(%rip)
48ab(5): call 0x3995(%rip)
48b0(2): test %eax,%eax
48b2(6): jnz 0xbe(%rip)
48b8(2): test %ebp,%ebp
48ba(2): js 0x46(%rip)
48bc(7): mov 0x207c1d(%rip),%rdi
48c3(3): test %rdi,%rdi
48c6(2): jz 0x3a(%rip)
48c8(7): mov 0x207c21(%rip),%rsi
48cf(2): cmp (%rsi),%ebp
48d1(6): jz 0x12f(%rip)
48d7(4): lea 0x4(%rsi),%rdx
48db(4): sub $0x1,%rdi
48df(2): xor %eax,%eax
48e1(2): jmp 0x1a(%rip)
48e3(5): nop 0x0(%rax,%rax,1)
48e8(3): mov %rdx,%rcx
48eb(4): add $0x1,%rax
48ef(4): add $0x4,%rdx
48f3(2): cmp %ebp,(%rcx)
48f5(6): jz 0x11b(%rip)
48fb(3): cmp %rax,%rdi
48fe(2): jnz 0xffffffea(%rip)
4900(3): test %r12d,%r12d
4903(2): jle 0x45(%rip)
4905(5): lea 0x1c(%rsp),%rsi
490a(2): xor %edx,%edx
490c(3): mov %r12d,%edi
490f(8): mov $0x0,0x1c(%rsp)
4917(5): call 0xffffd5a9(%rip)
491c(3): cmp $0xff,%eax
491f(6): jz 0x169(%rip)
4925(4): mov 0x1c(%rsp),%ecx
4929(2): mov %ecx,%ebp
492b(3): and $0x7f,%ebp
492e(3): lea 0x1(%rbp),%eax
4931(2): cmp $0x1,%al
4933(6): jle 0xf5(%rip)
4939(3): cmp $0xd,%ebp
493c(6): jnz 0x184(%rip)
4942(6): nop 0x0(%rax,%rax,1)
4948(5): mov 0x38(%rsp),%rax
494d(9): xor $0x28,%rax
4956(6): jnz 0x1ea(%rip)
495c(4): add $0x48,%rsp
4960(1): pop %rbx
4961(1): pop %rbp
4962(2): pop %r12
4964(2): pop %r13
4966(1): ret near (%rsp)
4967(9): nop 0x0(%rax,%rax,1)
4970(5): call 0xffffd200(%rip)
4975(8): cmp $0x0,0x207b83(%rip)
497d(3): mov %rax,%r13
4980(2): jz 0xb(%rip)
4982(3): cmp $0x20,(%rax)
4985(6): jz 0xffffff33(%rip)
498b(3): mov %rbx,%rdx
498e(5): mov $0x3,%esi
4993(2): xor %edi,%edi
4995(5): call 0x27bb(%rip)
499a(4): mov 0x0(%r13),%esi
499e(7): lea 0x4449(%rip),%rdx
49a5(3): mov %rax,%rcx
49a8(5): mov $0x1,%edi
49ad(2): xor %eax,%eax
49af(5): call 0xffffd4f1(%rip)
49b4(4): nop 0x0(%rax)
49b8(2): test %esi,%esi
49ba(6): js 0xffffff46(%rip)
49c0(2): mov %ebp,%edi
49c2(5): call 0xffffd35e(%rip)
49c7(2): test %eax,%eax
49c9(6): jns 0xfffffef3(%rip)
49cf(3): mov %rbx,%rdx
49d2(5): mov $0x3,%esi
49d7(2): xor %edi,%edi
49d9(5): call 0x2777(%rip)
49de(3): mov %rax,%rbx
49e1(5): call 0xffffd18f(%rip)
49e6(2): mov (%rax),%esi
49e8(7): lea 0x43ff(%rip),%rdx
49ef(3): mov %rbx,%rcx
49f2(5): mov $0x1,%edi
49f7(2): xor %eax,%eax
49f9(5): call 0xffffd4a7(%rip)
49fe(2): nop 
4a00(3): mov %rsi,%rcx
4a03(4): sub $0x1,%rdi
4a07(9): nop 0x0(%rax,%rax,1)
4a10(3): mov 0x0(%rsi,%rdi,4),%eax
4a13(7): mov %rdi,0x207ac6(%rip)
4a1a(2): mov %eax,(%rcx)
4a1c(5): jmp 0xfffffee4(%rip)
4a21(7): nop 0x0(%rax)
4a28(2): test %ebp,%ebp
4a2a(6): jnz 0x11b(%rip)
4a30(3): movzx %ch,%ebp
4a33(2): test %ebp,%ebp
4a35(6): jz 0xffffff13(%rip)
4a3b(7): mov 0x207abe(%rip),%r12
4a42(3): mov %rbx,%rdx
4a45(2): xor %edi,%edi
4a47(5): mov $0x3,%esi
4a4c(5): call 0x2704(%rip)
4a51(7): lea 0x4560(%rip),%rsi
4a58(3): mov %rax,%rbx
4a5b(2): xor %edi,%edi
4a5d(5): mov $0x5,%edx
4a62(5): call 0xffffd1de(%rip)
4a67(3): mov %r12,%r9
4a6a(3): mov %rax,%rdx
4a6d(3): mov %ebp,%r8d
4a70(3): mov %rbx,%rcx
4a73(2): xor %esi,%esi
4a75(2): mov %ebp,%edi
4a77(2): xor %eax,%eax
4a79(5): call 0xffffd427(%rip)
4a7e(5): jmp 0xfffffeca(%rip)
4a83(5): nop 0x0(%rax,%rax,1)
4a88(5): call 0xffffd0e8(%rip)
4a8d(3): cmp $0xa,(%rax)
4a90(3): mov %rax,%rbp
4a93(6): jz 0xfffffe92(%rip)
4a99(7): lea 0x4148(%rip),%rsi
4aa0(5): mov $0x5,%edx
4aa5(2): xor %edi,%edi
4aa7(5): call 0xffffd199(%rip)
4aac(3): mov 0x0(%rbp),%esi
4aaf(3): mov %rax,%rdx
4ab2(5): mov $0x1,%edi
4ab7(2): xor %eax,%eax
4ab9(5): call 0xffffd3e7(%rip)
4abe(2): nop 
4ac0(5): lea 0x20(%rsp),%r12
4ac5(2): mov %ebp,%edi
4ac7(3): mov %r12,%rsi
4aca(5): call 0x3ab6(%rip)
4acf(2): test %eax,%eax
4ad1(2): jnz 0x4f(%rip)
4ad3(3): mov %rbx,%rdx
4ad6(2): xor %edi,%edi
4ad8(5): mov $0x3,%esi
4add(7): mov 0x207a1c(%rip),%r13
4ae4(5): call 0x266c(%rip)
4ae9(7): lea 0x4498(%rip),%rsi
4af0(2): xor %edi,%edi
4af2(5): mov $0x5,%edx
4af7(3): mov %rax,%rbx
4afa(5): call 0xffffd146(%rip)
4aff(6): lea 0x80(%rbp),%edi
4b05(3): mov %rax,%rdx
4b08(3): mov %r13,%r9
4b0b(3): mov %r12,%r8
4b0e(3): mov %rbx,%rcx
4b11(2): xor %esi,%esi
4b13(2): xor %eax,%eax
4b15(5): call 0xffffd38b(%rip)
4b1a(5): jmp 0xfffffe2e(%rip)
4b1f(1): nop 
4b20(7): lea 0x40db(%rip),%rcx
4b27(3): mov %ebp,%r8d
4b2a(5): mov $0x13,%edx
4b2f(5): mov $0x1,%esi
4b34(3): mov %r12,%rdi
4b37(2): xor %eax,%eax
4b39(5): call 0xffffd487(%rip)
4b3e(2): jmp 0xffffff95(%rip)
4b40(5): call 0xffffd130(%rip)
4b45(7): lea 0x4494(%rip),%rsi
4b4c(5): mov $0x5,%edx
4b51(2): xor %edi,%edi
4b53(4): mov %ecx,0xc(%rsp)
4b57(5): call 0xffffd0e9(%rip)
4b5c(4): mov 0xc(%rsp),%ecx
4b60(3): mov %rax,%rdx
4b63(2): xor %esi,%esi
4b65(5): mov $0x1,%edi
4b6a(2): xor %eax,%eax
4b6c(5): call 0xffffd334(%rip)
4b71(5): nop 0x0(%rax,%rax,1)
4b76(a): nop 0x0(%rax,%rax,1)
4b80(1): push %rbp
4b81(1): push %rbx
4b82(3): mov %rsi,%rbp
4b85(3): mov %rdx,%rbx
4b88(4): sub $0x8,%rsp
4b8c(3): test %dil,%dil
4b8f(6): jz 0xc1(%rip)
4b95(3): test %rsi,%rsi
4b98(2): jnz 0x14(%rip)
4b9a(3): test %rdx,%rdx
4b9d(2): jnz 0xf(%rip)
4b9f(7): cmp $0x0,0x20773b(%rip)
4ba6(6): jnz 0x9a(%rip)
4bac(7): mov 0x207805(%rip),%rcx
4bb3(6): mov 0x20793f(%rip),%edx
4bb9(2): xor %edi,%edi
4bbb(6): mov 0x207453(%rip),%esi
4bc1(5): call 0xfffffcbf(%rip)
4bc6(5): call 0xfffff25a(%rip)
4bcb(7): mov 0x2077e6(%rip),%rdi
4bd2(5): call 0xfffff51e(%rip)
4bd7(2): test %eax,%eax
4bd9(2): mov %eax,%edi
4bdb(6): mov %eax,0x207433(%rip)
4be1(2): js 0x77(%rip)
4be3(3): mov %rbx,%rdx
4be6(3): mov %rbp,%rsi
4be9(5): call 0x957(%rip)
4bee(3): cmp %rbx,%rax
4bf1(2): jz 0x4f(%rip)
4bf3(5): call 0xffffcf7d(%rip)
4bf8(8): cmp $0x0,0x207900(%rip)
4c00(3): mov %rax,%rbx
4c03(2): jz 0x9(%rip)
4c05(2): xor %eax,%eax
4c07(3): cmp $0x20,(%rbx)
4c0a(2): jz 0x3b(%rip)
4c0c(7): mov 0x2077a5(%rip),%rdx
4c13(5): mov $0x3,%esi
4c18(2): xor %edi,%edi
4c1a(5): call 0x2536(%rip)
4c1f(2): mov (%rbx),%esi
4c21(7): lea 0x41c6(%rip),%rdx
4c28(3): mov %rax,%rcx
4c2b(5): mov $0x1,%edi
4c30(2): xor %eax,%eax
4c32(5): call 0xffffd26e(%rip)
4c37(9): nop 0x0(%rax,%rax,1)
4c40(5): mov $0x1,%eax
4c45(4): add $0x8,%rsp
4c49(1): pop %rbx
4c4a(1): pop %rbp
4c4b(1): ret near (%rsp)
4c4c(4): nop 0x0(%rax)
4c50(6): mov 0x2073be(%rip),%edi
4c56(2): jmp 0xffffff8d(%rip)
4c58(7): mov 0x207759(%rip),%rdx
4c5f(5): mov $0x3,%esi
4c64(2): xor %edi,%edi
4c66(5): call 0x24ea(%rip)
4c6b(3): mov %rax,%rbx
4c6e(5): call 0xffffcf02(%rip)
4c73(2): mov (%rax),%esi
4c75(7): lea 0x4172(%rip),%rdx
4c7c(3): mov %rbx,%rcx
4c7f(5): mov $0x1,%edi
4c84(2): xor %eax,%eax
4c86(5): call 0xffffd21a(%rip)
4c8b(5): nop 0x0(%rax,%rax,1)
4c90(2): push %r15
4c92(2): push %r14
4c94(3): xor %r14d,%r14d
4c97(2): push %r13
4c99(2): push %r12
4c9b(3): mov %rdi,%r15
4c9e(1): push %rbp
4c9f(1): push %rbx
4ca0(3): mov %rdi,%r12
4ca3(5): mov $0x1,%ebp
4ca8(5): mov $0x1,%ebx
4cad(4): sub $0x38,%rsp
4cb1(4): cmp $0xffffffff,%rcx
4cb5(5): mov %rsi,0x20(%rsp)
4cba(5): mov %rdx,0x28(%rsp)
4cbf(6): jz 0xa5(%rip)
4cc5(3): cmp %rdx,%rcx
4cc8(3): mov %rcx,%r13
4ccb(5): setb 0x1f(%rsp)
4cd0(3): cmp %r12,%r13
4cd3(6): jb 0xd3(%rip)
4cd9(3): test %r8,%r8
4cdc(5): mov 0x20(%rsp),%r9
4ce1(4): setz %r11b
4ce5(2): jmp 0x33(%rip)
4ce7(9): nop 0x0(%rax,%rax,1)
4cf0(3): movzx %bl,%ebx
4cf3(3): add %rbx,%r14
4cf6(3): cmp %r8,%r14
4cf9(3): setb %bl
4cfc(3): or %r11b,%bl
4cff(2): jnz 0xb(%rip)
4d01(3): test %bpl,%bpl
4d04(6): jz 0xc4(%rip)
4d0a(3): sub %r12,%r13
4d0d(3): add %r12,%r9
4d10(3): mov %r15,%r12
4d13(3): cmp %r13,%r15
4d16(2): jnbe 0x3a(%rip)
4d18(3): or %bl,%bpl
4d1b(2): jz 0xffffffd5(%rip)
4d1d(3): mov %r9,%rsi
4d20(3): movzx %bl,%edi
4d23(3): mov %r12,%rdx
4d26(5): mov %r8,0x10(%rsp)
4d2b(5): mov %r11b,0x1e(%rsp)
4d30(5): mov %r9,0x8(%rsp)
4d35(5): call 0xfffffe4b(%rip)
4d3a(5): mov 0x10(%rsp),%r8
4d3f(2): mov %eax,%ebp
4d41(6): movzx 0x1e(%rsp),%r11d
4d47(5): mov 0x8(%rsp),%r9
4d4c(2): jmp 0xffffffa4(%rip)
4d4e(2): nop 
4d50(3): test %r13,%r13
4d53(6): jnz 0x8d(%rip)
4d59(5): cmp $0x0,0x1f(%rsp)
4d5e(6): jnz 0xf0(%rip)
4d64(3): test %bpl,%bpl
4d67(6): jz 0xb9(%rip)
4d6d(5): mov 0x28(%rsp),%rdx
4d72(5): mov 0x20(%rsp),%rsi
4d77(2): xor %edi,%edi
4d79(5): mov %r8,0x8(%rsp)
4d7e(5): call 0x25c2(%rip)
4d83(4): cmp $0xffffffff,%rax
4d87(3): mov %rax,%r13
4d8a(5): mov 0x8(%rsp),%r8
4d8f(6): jz 0xf7(%rip)
4d95(3): test %rax,%rax
4d98(5): setz 0x1f(%rsp)
4d9d(3): cmp %r12,%r13
4da0(6): jnb 0xffffff39(%rip)
4da6(3): test %r13,%r13
4da9(2): jz 0xffffffb0(%rip)
4dab(2): mov %ebp,%eax
4dad(2): or %bl,%al
4daf(2): jnz 0x28(%rip)
4db1(3): movzx %al,%eax
4db4(2): xor %ebp,%ebp
4db6(5): mov $0x1,%edx
4dbb(3): add %rax,%r14
4dbe(3): cmp %r14,%r8
4dc1(3): setz %bl
4dc4(2): and %dl,%bl
4dc6(2): jz 0x4b(%rip)
4dc8(4): add $0x38,%rsp
4dcc(1): pop %rbx
4dcd(1): pop %rbp
4dce(2): pop %r12
4dd0(2): pop %r13
4dd2(2): pop %r14
4dd4(2): pop %r15
4dd6(1): ret near (%rsp)
4dd7(5): mov 0x20(%rsp),%r9
4ddc(4): nop 0x0(%rax)
4de0(3): movzx %bl,%edi
4de3(3): mov %r13,%rdx
4de6(3): mov %r9,%rsi
4de9(5): mov %r8,0x8(%rsp)
4dee(5): call 0xfffffd92(%rip)
4df3(5): mov 0x8(%rsp),%r8
4df8(2): mov %eax,%edx
4dfa(2): mov %eax,%ebp
4dfc(2): mov %ebx,%eax
4dfe(3): xor $0x1,%edx
4e01(3): movzx %al,%eax
4e04(3): add %rax,%r14
4e07(3): cmp %r14,%r8
4e0a(3): setz %bl
4e0d(2): and %dl,%bl
4e0f(2): jnz 0xffffffb9(%rip)
4e11(3): sub %r13,%r12
4e14(5): jmp 0xffffff45(%rip)
4e19(7): nop 0x0(%rax)
4e20(3): mov %r12,%rsi
4e23(2): xor %edi,%edi
4e25(5): mov $0x1,%edx
4e2a(5): mov %r8,0x8(%rsp)
4e2f(5): call 0xffffceb1(%rip)
4e34(4): cmp $0xffffffff,%rax
4e38(5): mov $0x1,%eax
4e3d(5): mov 0x8(%rsp),%r8
4e42(4): cmovne %r15,%r12
4e46(3): cmovne %eax,%ebx
4e49(5): jmp 0xffffff24(%rip)
4e4e(3): cmp %r8,%r14
4e51(4): lea 0x1(%r14),%rbx
4e55(6): jnb 0xffffff73(%rip)
4e5b(4): lea 0x1(%r8),%rbp
4e5f(1): nop 
4e60(2): xor %edx,%edx
4e62(2): xor %esi,%esi
4e64(5): mov $0x1,%edi
4e69(4): add $0x1,%rbx
4e6d(5): call 0xfffffd13(%rip)
4e72(3): cmp %rbx,%rbp
4e75(2): jnz 0xffffffeb(%rip)
4e77(4): add $0x38,%rsp
4e7b(1): pop %rbx
4e7c(1): pop %rbp
4e7d(2): pop %r12
4e7f(2): pop %r13
4e81(2): pop %r14
4e83(2): pop %r15
4e85(1): ret near (%rsp)
4e86(7): mov 0x207503(%rip),%rdx
4e8d(5): mov $0x3,%esi
4e92(2): xor %edi,%edi
4e94(5): call 0x22bc(%rip)
4e99(3): mov %rax,%rbx
4e9c(5): call 0xffffccd4(%rip)
4ea1(2): mov (%rax),%esi
4ea3(7): lea 0x3f44(%rip),%rdx
4eaa(3): mov %rbx,%rcx
4ead(5): mov $0x1,%edi
4eb2(2): xor %eax,%eax
4eb4(5): call 0xffffcfec(%rip)
4eb9(7): nop 0x0(%rax)
4ec0(2): push %r13
4ec2(2): push %r12
4ec4(5): mov $0x5,%edx
4ec9(1): push %rbp
4eca(1): push %rbx
4ecb(2): mov %edi,%ebp
4ecd(7): sub $0x88,%rsp
4ed4(7): mov 0x20763d(%rip),%rbx
4edb(9): mov $0x28,%rax
4ee4(5): mov %rax,0x78(%rsp)
4ee9(2): xor %eax,%eax
4eeb(2): test %edi,%edi
4eed(2): jz 0x30(%rip)
4eef(7): lea 0x4112(%rip),%rsi
4ef6(2): xor %edi,%edi
4ef8(5): call 0xffffcd48(%rip)
4efd(7): mov 0x20739c(%rip),%rdi
4f04(3): mov %rax,%rdx
4f07(3): mov %rbx,%rcx
4f0a(5): mov $0x1,%esi
4f0f(2): xor %eax,%eax
4f11(5): call 0xffffd02f(%rip)
4f16(2): mov %ebp,%edi
4f18(5): call 0xffffd008(%rip)
4f1d(7): lea 0x410c(%rip),%rsi
4f24(2): xor %edi,%edi
4f26(5): call 0xffffcd1a(%rip)
4f2b(3): mov %rbx,%rdx
4f2e(3): mov %rax,%rsi
4f31(5): mov $0x1,%edi
4f36(2): xor %eax,%eax
4f38(5): call 0xffffcf48(%rip)
4f3d(7): mov 0x207324(%rip),%rbx
4f44(7): lea 0x410d(%rip),%rsi
4f4b(5): mov $0x5,%edx
4f50(2): xor %edi,%edi
4f52(5): call 0xffffccee(%rip)
4f57(3): mov %rbx,%rsi
4f5a(3): mov %rax,%rdi
4f5d(5): call 0xffffce23(%rip)
4f62(7): mov 0x2072ff(%rip),%rbx
4f69(7): lea 0x4158(%rip),%rsi
4f70(5): mov $0x5,%edx
4f75(2): xor %edi,%edi
4f77(5): call 0xffffccc9(%rip)
4f7c(3): mov %rbx,%rsi
4f7f(3): mov %rax,%rdi
4f82(5): call 0xffffcdfe(%rip)
4f87(7): mov 0x2072da(%rip),%rbx
4f8e(7): lea 0x416b(%rip),%rsi
4f95(5): mov $0x5,%edx
4f9a(2): xor %edi,%edi
4f9c(5): call 0xffffcca4(%rip)
4fa1(3): mov %rbx,%rsi
4fa4(3): mov %rax,%rdi
4fa7(5): call 0xffffcdd9(%rip)
4fac(7): lea 0x419d(%rip),%rsi
4fb3(5): mov $0x5,%edx
4fb8(2): xor %edi,%edi
4fba(5): call 0xffffcc86(%rip)
4fbf(7): mov 0x2072a2(%rip),%rdi
4fc6(5): mov $0x2,%ecx
4fcb(3): mov %rax,%rdx
4fce(5): mov $0x1,%esi
4fd3(2): xor %eax,%eax
4fd5(5): call 0xffffcf6b(%rip)
4fda(7): mov 0x207287(%rip),%rbx
4fe1(7): lea 0x45b0(%rip),%rsi
4fe8(5): mov $0x5,%edx
4fed(2): xor %edi,%edi
4fef(5): call 0xffffcc51(%rip)
4ff4(3): mov %rbx,%rsi
4ff7(3): mov %rax,%rdi
4ffa(5): call 0xffffcd86(%rip)
4fff(7): mov 0x207262(%rip),%rbx
5006(7): lea 0x4603(%rip),%rsi
500d(5): mov $0x5,%edx
5012(2): xor %edi,%edi
5014(5): call 0xffffcc2c(%rip)
5019(3): mov %rbx,%rsi
501c(3): mov %rax,%rdi
501f(5): call 0xffffcd61(%rip)
5024(7): mov 0x20723d(%rip),%rbx
502b(7): lea 0x460e(%rip),%rsi
5032(5): mov $0x5,%edx
5037(2): xor %edi,%edi
5039(5): call 0xffffcc07(%rip)
503e(3): mov %rbx,%rsi
5041(3): mov %rax,%rdi
5044(5): call 0xffffcd3c(%rip)
5049(7): mov 0x207218(%rip),%rbx
5050(7): lea 0x4621(%rip),%rsi
5057(5): mov $0x5,%edx
505c(2): xor %edi,%edi
505e(5): call 0xffffcbe2(%rip)
5063(3): mov %rbx,%rsi
5066(3): mov %rax,%rdi
5069(5): call 0xffffcd17(%rip)
506e(7): mov 0x2071f3(%rip),%rbx
5075(7): lea 0x46d4(%rip),%rsi
507c(5): mov $0x5,%edx
5081(2): xor %edi,%edi
5083(5): call 0xffffcbbd(%rip)
5088(3): mov %rbx,%rsi
508b(3): mov %rax,%rdi
508e(7): lea 0x3b70(%rip),%rbx
5095(5): call 0xffffcceb(%rip)
509a(7): lea 0x3b6a(%rip),%rax
50a1(7): lea 0x3ba4(%rip),%rcx
50a8(9): mov $0x0,0x60(%rsp)
50b1(9): mov $0x0,0x68(%rsp)
50ba(3): mov %rsp,%rdx
50bd(4): mov %rax,(%rsp)
50c1(7): lea 0x3b45(%rip),%rax
50c8(5): mov %rcx,0x30(%rsp)
50cd(7): lea 0x3b82(%rip),%rcx
50d4(5): mov %rax,0x8(%rsp)
50d9(7): lea 0x3ba5(%rip),%rax
50e0(5): mov %rcx,0x40(%rsp)
50e5(7): lea 0x3b74(%rip),%rcx
50ec(5): mov %rax,0x10(%rsp)
50f1(7): lea 0x3b25(%rip),%rax
50f8(5): mov %rcx,0x50(%rsp)
50fd(5): mov %rax,0x18(%rsp)
5102(7): lea 0x3b2a(%rip),%rax
5109(5): mov %rax,0x20(%rsp)
510e(7): lea 0x3b28(%rip),%rax
5115(5): mov %rax,0x28(%rsp)
511a(5): mov %rax,0x38(%rsp)
511f(5): mov %rax,0x48(%rsp)
5124(5): mov %rax,0x58(%rsp)
5129(7): nop 0x0(%rax)
5130(4): add $0x10,%rdx
5134(3): mov (%rdx),%rdi
5137(3): test %rdi,%rdi
513a(2): jz 0x15(%rip)
513c(5): mov $0x6,%ecx
5141(3): mov %rbx,%rsi
5144(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5146(3): setnbe %al
5149(2): sbb $0x0,%al
514b(2): test %al,%al
514d(2): jnz 0xffffffe3(%rip)
514f(4): mov 0x8(%rdx),%r12
5153(2): xor %edi,%edi
5155(5): mov $0x5,%edx
515a(7): lea 0x3b09(%rip),%rsi
5161(3): test %r12,%r12
5164(6): jz 0xc7(%rip)
516a(5): call 0xffffcad6(%rip)
516f(7): lea 0x4732(%rip),%rcx
5176(7): lea 0x3b04(%rip),%rdx
517d(3): mov %rax,%rsi
5180(5): mov $0x1,%edi
5185(2): xor %eax,%eax
5187(5): call 0xffffccf9(%rip)
518c(2): xor %esi,%esi
518e(5): mov $0x5,%edi
5193(5): call 0xffffccdd(%rip)
5198(3): test %rax,%rax
519b(2): jz 0x1e(%rip)
519d(7): lea 0x3aeb(%rip),%rsi
51a4(5): mov $0x3,%edx
51a9(3): mov %rax,%rdi
51ac(5): call 0xffffc9d4(%rip)
51b1(2): test %eax,%eax
51b3(6): jnz 0x10d(%rip)
51b9(7): lea 0x3ad3(%rip),%rsi
51c0(2): xor %edi,%edi
51c2(5): mov $0x5,%edx
51c7(5): call 0xffffca79(%rip)
51cc(7): lea 0x3a32(%rip),%rcx
51d3(7): lea 0x46ce(%rip),%rdx
51da(3): mov %rax,%rsi
51dd(5): mov $0x1,%edi
51e2(2): xor %eax,%eax
51e4(5): call 0xffffcc9c(%rip)
51e9(3): cmp %rbx,%r12
51ec(7): lea 0x3a34(%rip),%rcx
51f3(7): lea 0x4f47(%rip),%rbx
51fa(4): cmove %rcx,%rbx
51fe(7): lea 0x4713(%rip),%rsi
5205(2): xor %edi,%edi
5207(5): mov $0x5,%edx
520c(5): call 0xffffca34(%rip)
5211(3): mov %rbx,%rcx
5214(3): mov %rax,%rsi
5217(3): mov %r12,%rdx
521a(5): mov $0x1,%edi
521f(2): xor %eax,%eax
5221(5): call 0xffffcc5f(%rip)
5226(5): jmp 0xfffffcf0(%rip)
522b(5): call 0xffffca15(%rip)
5230(7): lea 0x4671(%rip),%rcx
5237(7): lea 0x3a43(%rip),%rdx
523e(3): mov %rax,%rsi
5241(5): mov $0x1,%edi
5246(2): xor %eax,%eax
5248(5): call 0xffffcc38(%rip)
524d(2): xor %esi,%esi
524f(5): mov $0x5,%edi
5254(5): call 0xffffcc1c(%rip)
5259(3): test %rax,%rax
525c(2): jz 0x1a(%rip)
525e(7): lea 0x3a2a(%rip),%rsi
5265(5): mov $0x3,%edx
526a(3): mov %rax,%rdi
526d(5): call 0xffffc913(%rip)
5272(2): test %eax,%eax
5274(2): jnz 0x45(%rip)
5276(7): lea 0x3a16(%rip),%rsi
527d(5): mov $0x5,%edx
5282(2): xor %edi,%edi
5284(7): lea 0x397a(%rip),%r12
528b(7): lea 0x3995(%rip),%rbx
5292(5): call 0xffffc9ae(%rip)
5297(7): lea 0x3967(%rip),%rcx
529e(7): lea 0x4603(%rip),%rdx
52a5(3): mov %rax,%rsi
52a8(5): mov $0x1,%edi
52ad(2): xor %eax,%eax
52af(5): call 0xffffcbd1(%rip)
52b4(5): jmp 0xffffff4a(%rip)
52b9(7): lea 0x3945(%rip),%r12
52c0(7): mov 0x206fa1(%rip),%r13
52c7(7): lea 0x4602(%rip),%rsi
52ce(2): xor %edi,%edi
52d0(5): mov $0x5,%edx
52d5(5): call 0xffffc96b(%rip)
52da(3): mov %r13,%rsi
52dd(3): mov %rax,%rdi
52e0(5): call 0xffffcaa0(%rip)
52e5(5): jmp 0xfffffed4(%rip)

"closeout" :
4880(2): push %r13
4882(2): push %r12
4884(3): mov %edx,%r12d
4887(1): push %rbp
4888(1): push %rbx
4889(2): mov %esi,%ebp
488b(3): mov %rcx,%rbx
488e(4): sub $0x48,%rsp
4892(9): mov $0x28,%rax
489b(5): mov %rax,0x38(%rsp)
48a0(2): xor %eax,%eax
48a2(3): test %rdi,%rdi
48a5(6): jz 0x113(%rip)
48ab(5): call 0x3995(%rip)
48b0(2): test %eax,%eax
48b2(6): jnz 0xbe(%rip)
48b8(2): test %ebp,%ebp
48ba(2): js 0x46(%rip)
48bc(7): mov 0x207c1d(%rip),%rdi
48c3(3): test %rdi,%rdi
48c6(2): jz 0x3a(%rip)
48c8(7): mov 0x207c21(%rip),%rsi
48cf(2): cmp (%rsi),%ebp
48d1(6): jz 0x12f(%rip)
48d7(4): lea 0x4(%rsi),%rdx
48db(4): sub $0x1,%rdi
48df(2): xor %eax,%eax
48e1(2): jmp 0x1a(%rip)
48e3(5): nop 0x0(%rax,%rax,1)
48e8(3): mov %rdx,%rcx
48eb(4): add $0x1,%rax
48ef(4): add $0x4,%rdx
48f3(2): cmp %ebp,(%rcx)
48f5(6): jz 0x11b(%rip)
48fb(3): cmp %rax,%rdi
48fe(2): jnz 0xffffffea(%rip)
4900(3): test %r12d,%r12d
4903(2): jle 0x45(%rip)
4905(5): lea 0x1c(%rsp),%rsi
490a(2): xor %edx,%edx
490c(3): mov %r12d,%edi
490f(8): mov $0x0,0x1c(%rsp)
4917(5): call 0xffffd5a9(%rip)
491c(3): cmp $0xff,%eax
491f(6): jz 0x169(%rip)
4925(4): mov 0x1c(%rsp),%ecx
4929(2): mov %ecx,%ebp
492b(3): and $0x7f,%ebp
492e(3): lea 0x1(%rbp),%eax
4931(2): cmp $0x1,%al
4933(6): jle 0xf5(%rip)
4939(3): cmp $0xd,%ebp
493c(6): jnz 0x184(%rip)
4942(6): nop 0x0(%rax,%rax,1)
4948(5): mov 0x38(%rsp),%rax
494d(9): xor $0x28,%rax
4956(6): jnz 0x1ea(%rip)
495c(4): add $0x48,%rsp
4960(1): pop %rbx
4961(1): pop %rbp
4962(2): pop %r12
4964(2): pop %r13
4966(1): ret near (%rsp)
4967(9): nop 0x0(%rax,%rax,1)
4970(5): call 0xffffd200(%rip)
4975(8): cmp $0x0,0x207b83(%rip)
497d(3): mov %rax,%r13
4980(2): jz 0xb(%rip)
4982(3): cmp $0x20,(%rax)
4985(6): jz 0xffffff33(%rip)
498b(3): mov %rbx,%rdx
498e(5): mov $0x3,%esi
4993(2): xor %edi,%edi
4995(5): call 0x27bb(%rip)
499a(4): mov 0x0(%r13),%esi
499e(7): lea 0x4449(%rip),%rdx
49a5(3): mov %rax,%rcx
49a8(5): mov $0x1,%edi
49ad(2): xor %eax,%eax
49af(5): call 0xffffd4f1(%rip)
49b4(4): nop 0x0(%rax)
49b8(2): test %esi,%esi
49ba(6): js 0xffffff46(%rip)
49c0(2): mov %ebp,%edi
49c2(5): call 0xffffd35e(%rip)
49c7(2): test %eax,%eax
49c9(6): jns 0xfffffef3(%rip)
49cf(3): mov %rbx,%rdx
49d2(5): mov $0x3,%esi
49d7(2): xor %edi,%edi
49d9(5): call 0x2777(%rip)
49de(3): mov %rax,%rbx
49e1(5): call 0xffffd18f(%rip)
49e6(2): mov (%rax),%esi
49e8(7): lea 0x43ff(%rip),%rdx
49ef(3): mov %rbx,%rcx
49f2(5): mov $0x1,%edi
49f7(2): xor %eax,%eax
49f9(5): call 0xffffd4a7(%rip)
49fe(2): nop 
4a00(3): mov %rsi,%rcx
4a03(4): sub $0x1,%rdi
4a07(9): nop 0x0(%rax,%rax,1)
4a10(3): mov 0x0(%rsi,%rdi,4),%eax
4a13(7): mov %rdi,0x207ac6(%rip)
4a1a(2): mov %eax,(%rcx)
4a1c(5): jmp 0xfffffee4(%rip)
4a21(7): nop 0x0(%rax)
4a28(2): test %ebp,%ebp
4a2a(6): jnz 0x11b(%rip)
4a30(3): movzx %ch,%ebp
4a33(2): test %ebp,%ebp
4a35(6): jz 0xffffff13(%rip)
4a3b(7): mov 0x207abe(%rip),%r12
4a42(3): mov %rbx,%rdx
4a45(2): xor %edi,%edi
4a47(5): mov $0x3,%esi
4a4c(5): call 0x2704(%rip)
4a51(7): lea 0x4560(%rip),%rsi
4a58(3): mov %rax,%rbx
4a5b(2): xor %edi,%edi
4a5d(5): mov $0x5,%edx
4a62(5): call 0xffffd1de(%rip)
4a67(3): mov %r12,%r9
4a6a(3): mov %rax,%rdx
4a6d(3): mov %ebp,%r8d
4a70(3): mov %rbx,%rcx
4a73(2): xor %esi,%esi
4a75(2): mov %ebp,%edi
4a77(2): xor %eax,%eax
4a79(5): call 0xffffd427(%rip)
4a7e(5): jmp 0xfffffeca(%rip)
4a83(5): nop 0x0(%rax,%rax,1)
4a88(5): call 0xffffd0e8(%rip)
4a8d(3): cmp $0xa,(%rax)
4a90(3): mov %rax,%rbp
4a93(6): jz 0xfffffe92(%rip)
4a99(7): lea 0x4148(%rip),%rsi
4aa0(5): mov $0x5,%edx
4aa5(2): xor %edi,%edi
4aa7(5): call 0xffffd199(%rip)
4aac(3): mov 0x0(%rbp),%esi
4aaf(3): mov %rax,%rdx
4ab2(5): mov $0x1,%edi
4ab7(2): xor %eax,%eax
4ab9(5): call 0xffffd3e7(%rip)
4abe(2): nop 
4ac0(5): lea 0x20(%rsp),%r12
4ac5(2): mov %ebp,%edi
4ac7(3): mov %r12,%rsi
4aca(5): call 0x3ab6(%rip)
4acf(2): test %eax,%eax
4ad1(2): jnz 0x4f(%rip)
4ad3(3): mov %rbx,%rdx
4ad6(2): xor %edi,%edi
4ad8(5): mov $0x3,%esi
4add(7): mov 0x207a1c(%rip),%r13
4ae4(5): call 0x266c(%rip)
4ae9(7): lea 0x4498(%rip),%rsi
4af0(2): xor %edi,%edi
4af2(5): mov $0x5,%edx
4af7(3): mov %rax,%rbx
4afa(5): call 0xffffd146(%rip)
4aff(6): lea 0x80(%rbp),%edi
4b05(3): mov %rax,%rdx
4b08(3): mov %r13,%r9
4b0b(3): mov %r12,%r8
4b0e(3): mov %rbx,%rcx
4b11(2): xor %esi,%esi
4b13(2): xor %eax,%eax
4b15(5): call 0xffffd38b(%rip)
4b1a(5): jmp 0xfffffe2e(%rip)
4b1f(1): nop 
4b20(7): lea 0x40db(%rip),%rcx
4b27(3): mov %ebp,%r8d
4b2a(5): mov $0x13,%edx
4b2f(5): mov $0x1,%esi
4b34(3): mov %r12,%rdi
4b37(2): xor %eax,%eax
4b39(5): call 0xffffd487(%rip)
4b3e(2): jmp 0xffffff95(%rip)
4b40(5): call 0xffffd130(%rip)
4b45(7): lea 0x4494(%rip),%rsi
4b4c(5): mov $0x5,%edx
4b51(2): xor %edi,%edi
4b53(4): mov %ecx,0xc(%rsp)
4b57(5): call 0xffffd0e9(%rip)
4b5c(4): mov 0xc(%rsp),%ecx
4b60(3): mov %rax,%rdx
4b63(2): xor %esi,%esi
4b65(5): mov $0x1,%edi
4b6a(2): xor %eax,%eax
4b6c(5): call 0xffffd334(%rip)
4b71(5): nop 0x0(%rax,%rax,1)
4b76(a): nop 0x0(%rax,%rax,1)
4b80(1): push %rbp
4b81(1): push %rbx
4b82(3): mov %rsi,%rbp
4b85(3): mov %rdx,%rbx
4b88(4): sub $0x8,%rsp
4b8c(3): test %dil,%dil
4b8f(6): jz 0xc1(%rip)
4b95(3): test %rsi,%rsi
4b98(2): jnz 0x14(%rip)
4b9a(3): test %rdx,%rdx
4b9d(2): jnz 0xf(%rip)
4b9f(7): cmp $0x0,0x20773b(%rip)
4ba6(6): jnz 0x9a(%rip)
4bac(7): mov 0x207805(%rip),%rcx
4bb3(6): mov 0x20793f(%rip),%edx
4bb9(2): xor %edi,%edi
4bbb(6): mov 0x207453(%rip),%esi
4bc1(5): call 0xfffffcbf(%rip)
4bc6(5): call 0xfffff25a(%rip)
4bcb(7): mov 0x2077e6(%rip),%rdi
4bd2(5): call 0xfffff51e(%rip)
4bd7(2): test %eax,%eax
4bd9(2): mov %eax,%edi
4bdb(6): mov %eax,0x207433(%rip)
4be1(2): js 0x77(%rip)
4be3(3): mov %rbx,%rdx
4be6(3): mov %rbp,%rsi
4be9(5): call 0x957(%rip)
4bee(3): cmp %rbx,%rax
4bf1(2): jz 0x4f(%rip)
4bf3(5): call 0xffffcf7d(%rip)
4bf8(8): cmp $0x0,0x207900(%rip)
4c00(3): mov %rax,%rbx
4c03(2): jz 0x9(%rip)
4c05(2): xor %eax,%eax
4c07(3): cmp $0x20,(%rbx)
4c0a(2): jz 0x3b(%rip)
4c0c(7): mov 0x2077a5(%rip),%rdx
4c13(5): mov $0x3,%esi
4c18(2): xor %edi,%edi
4c1a(5): call 0x2536(%rip)
4c1f(2): mov (%rbx),%esi
4c21(7): lea 0x41c6(%rip),%rdx
4c28(3): mov %rax,%rcx
4c2b(5): mov $0x1,%edi
4c30(2): xor %eax,%eax
4c32(5): call 0xffffd26e(%rip)
4c37(9): nop 0x0(%rax,%rax,1)
4c40(5): mov $0x1,%eax
4c45(4): add $0x8,%rsp
4c49(1): pop %rbx
4c4a(1): pop %rbp
4c4b(1): ret near (%rsp)
4c4c(4): nop 0x0(%rax)
4c50(6): mov 0x2073be(%rip),%edi
4c56(2): jmp 0xffffff8d(%rip)
4c58(7): mov 0x207759(%rip),%rdx
4c5f(5): mov $0x3,%esi
4c64(2): xor %edi,%edi
4c66(5): call 0x24ea(%rip)
4c6b(3): mov %rax,%rbx
4c6e(5): call 0xffffcf02(%rip)
4c73(2): mov (%rax),%esi
4c75(7): lea 0x4172(%rip),%rdx
4c7c(3): mov %rbx,%rcx
4c7f(5): mov $0x1,%edi
4c84(2): xor %eax,%eax
4c86(5): call 0xffffd21a(%rip)
4c8b(5): nop 0x0(%rax,%rax,1)
4c90(2): push %r15
4c92(2): push %r14
4c94(3): xor %r14d,%r14d
4c97(2): push %r13
4c99(2): push %r12
4c9b(3): mov %rdi,%r15
4c9e(1): push %rbp
4c9f(1): push %rbx
4ca0(3): mov %rdi,%r12
4ca3(5): mov $0x1,%ebp
4ca8(5): mov $0x1,%ebx
4cad(4): sub $0x38,%rsp
4cb1(4): cmp $0xffffffff,%rcx
4cb5(5): mov %rsi,0x20(%rsp)
4cba(5): mov %rdx,0x28(%rsp)
4cbf(6): jz 0xa5(%rip)
4cc5(3): cmp %rdx,%rcx
4cc8(3): mov %rcx,%r13
4ccb(5): setb 0x1f(%rsp)
4cd0(3): cmp %r12,%r13
4cd3(6): jb 0xd3(%rip)
4cd9(3): test %r8,%r8
4cdc(5): mov 0x20(%rsp),%r9
4ce1(4): setz %r11b
4ce5(2): jmp 0x33(%rip)
4ce7(9): nop 0x0(%rax,%rax,1)
4cf0(3): movzx %bl,%ebx
4cf3(3): add %rbx,%r14
4cf6(3): cmp %r8,%r14
4cf9(3): setb %bl
4cfc(3): or %r11b,%bl
4cff(2): jnz 0xb(%rip)
4d01(3): test %bpl,%bpl
4d04(6): jz 0xc4(%rip)
4d0a(3): sub %r12,%r13
4d0d(3): add %r12,%r9
4d10(3): mov %r15,%r12
4d13(3): cmp %r13,%r15
4d16(2): jnbe 0x3a(%rip)
4d18(3): or %bl,%bpl
4d1b(2): jz 0xffffffd5(%rip)
4d1d(3): mov %r9,%rsi
4d20(3): movzx %bl,%edi
4d23(3): mov %r12,%rdx
4d26(5): mov %r8,0x10(%rsp)
4d2b(5): mov %r11b,0x1e(%rsp)
4d30(5): mov %r9,0x8(%rsp)
4d35(5): call 0xfffffe4b(%rip)
4d3a(5): mov 0x10(%rsp),%r8
4d3f(2): mov %eax,%ebp
4d41(6): movzx 0x1e(%rsp),%r11d
4d47(5): mov 0x8(%rsp),%r9
4d4c(2): jmp 0xffffffa4(%rip)
4d4e(2): nop 
4d50(3): test %r13,%r13
4d53(6): jnz 0x8d(%rip)
4d59(5): cmp $0x0,0x1f(%rsp)
4d5e(6): jnz 0xf0(%rip)
4d64(3): test %bpl,%bpl
4d67(6): jz 0xb9(%rip)
4d6d(5): mov 0x28(%rsp),%rdx
4d72(5): mov 0x20(%rsp),%rsi
4d77(2): xor %edi,%edi
4d79(5): mov %r8,0x8(%rsp)
4d7e(5): call 0x25c2(%rip)
4d83(4): cmp $0xffffffff,%rax
4d87(3): mov %rax,%r13
4d8a(5): mov 0x8(%rsp),%r8
4d8f(6): jz 0xf7(%rip)
4d95(3): test %rax,%rax
4d98(5): setz 0x1f(%rsp)
4d9d(3): cmp %r12,%r13
4da0(6): jnb 0xffffff39(%rip)
4da6(3): test %r13,%r13
4da9(2): jz 0xffffffb0(%rip)
4dab(2): mov %ebp,%eax
4dad(2): or %bl,%al
4daf(2): jnz 0x28(%rip)
4db1(3): movzx %al,%eax
4db4(2): xor %ebp,%ebp
4db6(5): mov $0x1,%edx
4dbb(3): add %rax,%r14
4dbe(3): cmp %r14,%r8
4dc1(3): setz %bl
4dc4(2): and %dl,%bl
4dc6(2): jz 0x4b(%rip)
4dc8(4): add $0x38,%rsp
4dcc(1): pop %rbx
4dcd(1): pop %rbp
4dce(2): pop %r12
4dd0(2): pop %r13
4dd2(2): pop %r14
4dd4(2): pop %r15
4dd6(1): ret near (%rsp)
4dd7(5): mov 0x20(%rsp),%r9
4ddc(4): nop 0x0(%rax)
4de0(3): movzx %bl,%edi
4de3(3): mov %r13,%rdx
4de6(3): mov %r9,%rsi
4de9(5): mov %r8,0x8(%rsp)
4dee(5): call 0xfffffd92(%rip)
4df3(5): mov 0x8(%rsp),%r8
4df8(2): mov %eax,%edx
4dfa(2): mov %eax,%ebp
4dfc(2): mov %ebx,%eax
4dfe(3): xor $0x1,%edx
4e01(3): movzx %al,%eax
4e04(3): add %rax,%r14
4e07(3): cmp %r14,%r8
4e0a(3): setz %bl
4e0d(2): and %dl,%bl
4e0f(2): jnz 0xffffffb9(%rip)
4e11(3): sub %r13,%r12
4e14(5): jmp 0xffffff45(%rip)
4e19(7): nop 0x0(%rax)
4e20(3): mov %r12,%rsi
4e23(2): xor %edi,%edi
4e25(5): mov $0x1,%edx
4e2a(5): mov %r8,0x8(%rsp)
4e2f(5): call 0xffffceb1(%rip)
4e34(4): cmp $0xffffffff,%rax
4e38(5): mov $0x1,%eax
4e3d(5): mov 0x8(%rsp),%r8
4e42(4): cmovne %r15,%r12
4e46(3): cmovne %eax,%ebx
4e49(5): jmp 0xffffff24(%rip)
4e4e(3): cmp %r8,%r14
4e51(4): lea 0x1(%r14),%rbx
4e55(6): jnb 0xffffff73(%rip)
4e5b(4): lea 0x1(%r8),%rbp
4e5f(1): nop 
4e60(2): xor %edx,%edx
4e62(2): xor %esi,%esi
4e64(5): mov $0x1,%edi
4e69(4): add $0x1,%rbx
4e6d(5): call 0xfffffd13(%rip)
4e72(3): cmp %rbx,%rbp
4e75(2): jnz 0xffffffeb(%rip)
4e77(4): add $0x38,%rsp
4e7b(1): pop %rbx
4e7c(1): pop %rbp
4e7d(2): pop %r12
4e7f(2): pop %r13
4e81(2): pop %r14
4e83(2): pop %r15
4e85(1): ret near (%rsp)
4e86(7): mov 0x207503(%rip),%rdx
4e8d(5): mov $0x3,%esi
4e92(2): xor %edi,%edi
4e94(5): call 0x22bc(%rip)
4e99(3): mov %rax,%rbx
4e9c(5): call 0xffffccd4(%rip)
4ea1(2): mov (%rax),%esi
4ea3(7): lea 0x3f44(%rip),%rdx
4eaa(3): mov %rbx,%rcx
4ead(5): mov $0x1,%edi
4eb2(2): xor %eax,%eax
4eb4(5): call 0xffffcfec(%rip)
4eb9(7): nop 0x0(%rax)
4ec0(2): push %r13
4ec2(2): push %r12
4ec4(5): mov $0x5,%edx
4ec9(1): push %rbp
4eca(1): push %rbx
4ecb(2): mov %edi,%ebp
4ecd(7): sub $0x88,%rsp
4ed4(7): mov 0x20763d(%rip),%rbx
4edb(9): mov $0x28,%rax
4ee4(5): mov %rax,0x78(%rsp)
4ee9(2): xor %eax,%eax
4eeb(2): test %edi,%edi
4eed(2): jz 0x30(%rip)
4eef(7): lea 0x4112(%rip),%rsi
4ef6(2): xor %edi,%edi
4ef8(5): call 0xffffcd48(%rip)
4efd(7): mov 0x20739c(%rip),%rdi
4f04(3): mov %rax,%rdx
4f07(3): mov %rbx,%rcx
4f0a(5): mov $0x1,%esi
4f0f(2): xor %eax,%eax
4f11(5): call 0xffffd02f(%rip)
4f16(2): mov %ebp,%edi
4f18(5): call 0xffffd008(%rip)
4f1d(7): lea 0x410c(%rip),%rsi
4f24(2): xor %edi,%edi
4f26(5): call 0xffffcd1a(%rip)
4f2b(3): mov %rbx,%rdx
4f2e(3): mov %rax,%rsi
4f31(5): mov $0x1,%edi
4f36(2): xor %eax,%eax
4f38(5): call 0xffffcf48(%rip)
4f3d(7): mov 0x207324(%rip),%rbx
4f44(7): lea 0x410d(%rip),%rsi
4f4b(5): mov $0x5,%edx
4f50(2): xor %edi,%edi
4f52(5): call 0xffffccee(%rip)
4f57(3): mov %rbx,%rsi
4f5a(3): mov %rax,%rdi
4f5d(5): call 0xffffce23(%rip)
4f62(7): mov 0x2072ff(%rip),%rbx
4f69(7): lea 0x4158(%rip),%rsi
4f70(5): mov $0x5,%edx
4f75(2): xor %edi,%edi
4f77(5): call 0xffffccc9(%rip)
4f7c(3): mov %rbx,%rsi
4f7f(3): mov %rax,%rdi
4f82(5): call 0xffffcdfe(%rip)
4f87(7): mov 0x2072da(%rip),%rbx
4f8e(7): lea 0x416b(%rip),%rsi
4f95(5): mov $0x5,%edx
4f9a(2): xor %edi,%edi
4f9c(5): call 0xffffcca4(%rip)
4fa1(3): mov %rbx,%rsi
4fa4(3): mov %rax,%rdi
4fa7(5): call 0xffffcdd9(%rip)
4fac(7): lea 0x419d(%rip),%rsi
4fb3(5): mov $0x5,%edx
4fb8(2): xor %edi,%edi
4fba(5): call 0xffffcc86(%rip)
4fbf(7): mov 0x2072a2(%rip),%rdi
4fc6(5): mov $0x2,%ecx
4fcb(3): mov %rax,%rdx
4fce(5): mov $0x1,%esi
4fd3(2): xor %eax,%eax
4fd5(5): call 0xffffcf6b(%rip)
4fda(7): mov 0x207287(%rip),%rbx
4fe1(7): lea 0x45b0(%rip),%rsi
4fe8(5): mov $0x5,%edx
4fed(2): xor %edi,%edi
4fef(5): call 0xffffcc51(%rip)
4ff4(3): mov %rbx,%rsi
4ff7(3): mov %rax,%rdi
4ffa(5): call 0xffffcd86(%rip)
4fff(7): mov 0x207262(%rip),%rbx
5006(7): lea 0x4603(%rip),%rsi
500d(5): mov $0x5,%edx
5012(2): xor %edi,%edi
5014(5): call 0xffffcc2c(%rip)
5019(3): mov %rbx,%rsi
501c(3): mov %rax,%rdi
501f(5): call 0xffffcd61(%rip)
5024(7): mov 0x20723d(%rip),%rbx
502b(7): lea 0x460e(%rip),%rsi
5032(5): mov $0x5,%edx
5037(2): xor %edi,%edi
5039(5): call 0xffffcc07(%rip)
503e(3): mov %rbx,%rsi
5041(3): mov %rax,%rdi
5044(5): call 0xffffcd3c(%rip)
5049(7): mov 0x207218(%rip),%rbx
5050(7): lea 0x4621(%rip),%rsi
5057(5): mov $0x5,%edx
505c(2): xor %edi,%edi
505e(5): call 0xffffcbe2(%rip)
5063(3): mov %rbx,%rsi
5066(3): mov %rax,%rdi
5069(5): call 0xffffcd17(%rip)
506e(7): mov 0x2071f3(%rip),%rbx
5075(7): lea 0x46d4(%rip),%rsi
507c(5): mov $0x5,%edx
5081(2): xor %edi,%edi
5083(5): call 0xffffcbbd(%rip)
5088(3): mov %rbx,%rsi
508b(3): mov %rax,%rdi
508e(7): lea 0x3b70(%rip),%rbx
5095(5): call 0xffffcceb(%rip)
509a(7): lea 0x3b6a(%rip),%rax
50a1(7): lea 0x3ba4(%rip),%rcx
50a8(9): mov $0x0,0x60(%rsp)
50b1(9): mov $0x0,0x68(%rsp)
50ba(3): mov %rsp,%rdx
50bd(4): mov %rax,(%rsp)
50c1(7): lea 0x3b45(%rip),%rax
50c8(5): mov %rcx,0x30(%rsp)
50cd(7): lea 0x3b82(%rip),%rcx
50d4(5): mov %rax,0x8(%rsp)
50d9(7): lea 0x3ba5(%rip),%rax
50e0(5): mov %rcx,0x40(%rsp)
50e5(7): lea 0x3b74(%rip),%rcx
50ec(5): mov %rax,0x10(%rsp)
50f1(7): lea 0x3b25(%rip),%rax
50f8(5): mov %rcx,0x50(%rsp)
50fd(5): mov %rax,0x18(%rsp)
5102(7): lea 0x3b2a(%rip),%rax
5109(5): mov %rax,0x20(%rsp)
510e(7): lea 0x3b28(%rip),%rax
5115(5): mov %rax,0x28(%rsp)
511a(5): mov %rax,0x38(%rsp)
511f(5): mov %rax,0x48(%rsp)
5124(5): mov %rax,0x58(%rsp)
5129(7): nop 0x0(%rax)
5130(4): add $0x10,%rdx
5134(3): mov (%rdx),%rdi
5137(3): test %rdi,%rdi
513a(2): jz 0x15(%rip)
513c(5): mov $0x6,%ecx
5141(3): mov %rbx,%rsi
5144(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5146(3): setnbe %al
5149(2): sbb $0x0,%al
514b(2): test %al,%al
514d(2): jnz 0xffffffe3(%rip)
514f(4): mov 0x8(%rdx),%r12
5153(2): xor %edi,%edi
5155(5): mov $0x5,%edx
515a(7): lea 0x3b09(%rip),%rsi
5161(3): test %r12,%r12
5164(6): jz 0xc7(%rip)
516a(5): call 0xffffcad6(%rip)
516f(7): lea 0x4732(%rip),%rcx
5176(7): lea 0x3b04(%rip),%rdx
517d(3): mov %rax,%rsi
5180(5): mov $0x1,%edi
5185(2): xor %eax,%eax
5187(5): call 0xffffccf9(%rip)
518c(2): xor %esi,%esi
518e(5): mov $0x5,%edi
5193(5): call 0xffffccdd(%rip)
5198(3): test %rax,%rax
519b(2): jz 0x1e(%rip)
519d(7): lea 0x3aeb(%rip),%rsi
51a4(5): mov $0x3,%edx
51a9(3): mov %rax,%rdi
51ac(5): call 0xffffc9d4(%rip)
51b1(2): test %eax,%eax
51b3(6): jnz 0x10d(%rip)
51b9(7): lea 0x3ad3(%rip),%rsi
51c0(2): xor %edi,%edi
51c2(5): mov $0x5,%edx
51c7(5): call 0xffffca79(%rip)
51cc(7): lea 0x3a32(%rip),%rcx
51d3(7): lea 0x46ce(%rip),%rdx
51da(3): mov %rax,%rsi
51dd(5): mov $0x1,%edi
51e2(2): xor %eax,%eax
51e4(5): call 0xffffcc9c(%rip)
51e9(3): cmp %rbx,%r12
51ec(7): lea 0x3a34(%rip),%rcx
51f3(7): lea 0x4f47(%rip),%rbx
51fa(4): cmove %rcx,%rbx
51fe(7): lea 0x4713(%rip),%rsi
5205(2): xor %edi,%edi
5207(5): mov $0x5,%edx
520c(5): call 0xffffca34(%rip)
5211(3): mov %rbx,%rcx
5214(3): mov %rax,%rsi
5217(3): mov %r12,%rdx
521a(5): mov $0x1,%edi
521f(2): xor %eax,%eax
5221(5): call 0xffffcc5f(%rip)
5226(5): jmp 0xfffffcf0(%rip)
522b(5): call 0xffffca15(%rip)
5230(7): lea 0x4671(%rip),%rcx
5237(7): lea 0x3a43(%rip),%rdx
523e(3): mov %rax,%rsi
5241(5): mov $0x1,%edi
5246(2): xor %eax,%eax
5248(5): call 0xffffcc38(%rip)
524d(2): xor %esi,%esi
524f(5): mov $0x5,%edi
5254(5): call 0xffffcc1c(%rip)
5259(3): test %rax,%rax
525c(2): jz 0x1a(%rip)
525e(7): lea 0x3a2a(%rip),%rsi
5265(5): mov $0x3,%edx
526a(3): mov %rax,%rdi
526d(5): call 0xffffc913(%rip)
5272(2): test %eax,%eax
5274(2): jnz 0x45(%rip)
5276(7): lea 0x3a16(%rip),%rsi
527d(5): mov $0x5,%edx
5282(2): xor %edi,%edi
5284(7): lea 0x397a(%rip),%r12
528b(7): lea 0x3995(%rip),%rbx
5292(5): call 0xffffc9ae(%rip)
5297(7): lea 0x3967(%rip),%rcx
529e(7): lea 0x4603(%rip),%rdx
52a5(3): mov %rax,%rsi
52a8(5): mov $0x1,%edi
52ad(2): xor %eax,%eax
52af(5): call 0xffffcbd1(%rip)
52b4(5): jmp 0xffffff4a(%rip)
52b9(7): lea 0x3945(%rip),%r12
52c0(7): mov 0x206fa1(%rip),%r13
52c7(7): lea 0x4602(%rip),%rsi
52ce(2): xor %edi,%edi
52d0(5): mov $0x5,%edx
52d5(5): call 0xffffc96b(%rip)
52da(3): mov %r13,%rsi
52dd(3): mov %rax,%rdi
52e0(5): call 0xffffcaa0(%rip)
52e5(5): jmp 0xfffffed4(%rip)

"cwrite" :
4b80(1): push %rbp
4b81(1): push %rbx
4b82(3): mov %rsi,%rbp
4b85(3): mov %rdx,%rbx
4b88(4): sub $0x8,%rsp
4b8c(3): test %dil,%dil
4b8f(6): jz 0xc1(%rip)
4b95(3): test %rsi,%rsi
4b98(2): jnz 0x14(%rip)
4b9a(3): test %rdx,%rdx
4b9d(2): jnz 0xf(%rip)
4b9f(7): cmp $0x0,0x20773b(%rip)
4ba6(6): jnz 0x9a(%rip)
4bac(7): mov 0x207805(%rip),%rcx
4bb3(6): mov 0x20793f(%rip),%edx
4bb9(2): xor %edi,%edi
4bbb(6): mov 0x207453(%rip),%esi
4bc1(5): call 0xfffffcbf(%rip)
4bc6(5): call 0xfffff25a(%rip)
4bcb(7): mov 0x2077e6(%rip),%rdi
4bd2(5): call 0xfffff51e(%rip)
4bd7(2): test %eax,%eax
4bd9(2): mov %eax,%edi
4bdb(6): mov %eax,0x207433(%rip)
4be1(2): js 0x77(%rip)
4be3(3): mov %rbx,%rdx
4be6(3): mov %rbp,%rsi
4be9(5): call 0x957(%rip)
4bee(3): cmp %rbx,%rax
4bf1(2): jz 0x4f(%rip)
4bf3(5): call 0xffffcf7d(%rip)
4bf8(8): cmp $0x0,0x207900(%rip)
4c00(3): mov %rax,%rbx
4c03(2): jz 0x9(%rip)
4c05(2): xor %eax,%eax
4c07(3): cmp $0x20,(%rbx)
4c0a(2): jz 0x3b(%rip)
4c0c(7): mov 0x2077a5(%rip),%rdx
4c13(5): mov $0x3,%esi
4c18(2): xor %edi,%edi
4c1a(5): call 0x2536(%rip)
4c1f(2): mov (%rbx),%esi
4c21(7): lea 0x41c6(%rip),%rdx
4c28(3): mov %rax,%rcx
4c2b(5): mov $0x1,%edi
4c30(2): xor %eax,%eax
4c32(5): call 0xffffd26e(%rip)
4c37(9): nop 0x0(%rax,%rax,1)
4c40(5): mov $0x1,%eax
4c45(4): add $0x8,%rsp
4c49(1): pop %rbx
4c4a(1): pop %rbp
4c4b(1): ret near (%rsp)
4c4c(4): nop 0x0(%rax)
4c50(6): mov 0x2073be(%rip),%edi
4c56(2): jmp 0xffffff8d(%rip)
4c58(7): mov 0x207759(%rip),%rdx
4c5f(5): mov $0x3,%esi
4c64(2): xor %edi,%edi
4c66(5): call 0x24ea(%rip)
4c6b(3): mov %rax,%rbx
4c6e(5): call 0xffffcf02(%rip)
4c73(2): mov (%rax),%esi
4c75(7): lea 0x4172(%rip),%rdx
4c7c(3): mov %rbx,%rcx
4c7f(5): mov $0x1,%edi
4c84(2): xor %eax,%eax
4c86(5): call 0xffffd21a(%rip)
4c8b(5): nop 0x0(%rax,%rax,1)
4c90(2): push %r15
4c92(2): push %r14
4c94(3): xor %r14d,%r14d
4c97(2): push %r13
4c99(2): push %r12
4c9b(3): mov %rdi,%r15
4c9e(1): push %rbp
4c9f(1): push %rbx
4ca0(3): mov %rdi,%r12
4ca3(5): mov $0x1,%ebp
4ca8(5): mov $0x1,%ebx
4cad(4): sub $0x38,%rsp
4cb1(4): cmp $0xffffffff,%rcx
4cb5(5): mov %rsi,0x20(%rsp)
4cba(5): mov %rdx,0x28(%rsp)
4cbf(6): jz 0xa5(%rip)
4cc5(3): cmp %rdx,%rcx
4cc8(3): mov %rcx,%r13
4ccb(5): setb 0x1f(%rsp)
4cd0(3): cmp %r12,%r13
4cd3(6): jb 0xd3(%rip)
4cd9(3): test %r8,%r8
4cdc(5): mov 0x20(%rsp),%r9
4ce1(4): setz %r11b
4ce5(2): jmp 0x33(%rip)
4ce7(9): nop 0x0(%rax,%rax,1)
4cf0(3): movzx %bl,%ebx
4cf3(3): add %rbx,%r14
4cf6(3): cmp %r8,%r14
4cf9(3): setb %bl
4cfc(3): or %r11b,%bl
4cff(2): jnz 0xb(%rip)
4d01(3): test %bpl,%bpl
4d04(6): jz 0xc4(%rip)
4d0a(3): sub %r12,%r13
4d0d(3): add %r12,%r9
4d10(3): mov %r15,%r12
4d13(3): cmp %r13,%r15
4d16(2): jnbe 0x3a(%rip)
4d18(3): or %bl,%bpl
4d1b(2): jz 0xffffffd5(%rip)
4d1d(3): mov %r9,%rsi
4d20(3): movzx %bl,%edi
4d23(3): mov %r12,%rdx
4d26(5): mov %r8,0x10(%rsp)
4d2b(5): mov %r11b,0x1e(%rsp)
4d30(5): mov %r9,0x8(%rsp)
4d35(5): call 0xfffffe4b(%rip)
4d3a(5): mov 0x10(%rsp),%r8
4d3f(2): mov %eax,%ebp
4d41(6): movzx 0x1e(%rsp),%r11d
4d47(5): mov 0x8(%rsp),%r9
4d4c(2): jmp 0xffffffa4(%rip)
4d4e(2): nop 
4d50(3): test %r13,%r13
4d53(6): jnz 0x8d(%rip)
4d59(5): cmp $0x0,0x1f(%rsp)
4d5e(6): jnz 0xf0(%rip)
4d64(3): test %bpl,%bpl
4d67(6): jz 0xb9(%rip)
4d6d(5): mov 0x28(%rsp),%rdx
4d72(5): mov 0x20(%rsp),%rsi
4d77(2): xor %edi,%edi
4d79(5): mov %r8,0x8(%rsp)
4d7e(5): call 0x25c2(%rip)
4d83(4): cmp $0xffffffff,%rax
4d87(3): mov %rax,%r13
4d8a(5): mov 0x8(%rsp),%r8
4d8f(6): jz 0xf7(%rip)
4d95(3): test %rax,%rax
4d98(5): setz 0x1f(%rsp)
4d9d(3): cmp %r12,%r13
4da0(6): jnb 0xffffff39(%rip)
4da6(3): test %r13,%r13
4da9(2): jz 0xffffffb0(%rip)
4dab(2): mov %ebp,%eax
4dad(2): or %bl,%al
4daf(2): jnz 0x28(%rip)
4db1(3): movzx %al,%eax
4db4(2): xor %ebp,%ebp
4db6(5): mov $0x1,%edx
4dbb(3): add %rax,%r14
4dbe(3): cmp %r14,%r8
4dc1(3): setz %bl
4dc4(2): and %dl,%bl
4dc6(2): jz 0x4b(%rip)
4dc8(4): add $0x38,%rsp
4dcc(1): pop %rbx
4dcd(1): pop %rbp
4dce(2): pop %r12
4dd0(2): pop %r13
4dd2(2): pop %r14
4dd4(2): pop %r15
4dd6(1): ret near (%rsp)
4dd7(5): mov 0x20(%rsp),%r9
4ddc(4): nop 0x0(%rax)
4de0(3): movzx %bl,%edi
4de3(3): mov %r13,%rdx
4de6(3): mov %r9,%rsi
4de9(5): mov %r8,0x8(%rsp)
4dee(5): call 0xfffffd92(%rip)
4df3(5): mov 0x8(%rsp),%r8
4df8(2): mov %eax,%edx
4dfa(2): mov %eax,%ebp
4dfc(2): mov %ebx,%eax
4dfe(3): xor $0x1,%edx
4e01(3): movzx %al,%eax
4e04(3): add %rax,%r14
4e07(3): cmp %r14,%r8
4e0a(3): setz %bl
4e0d(2): and %dl,%bl
4e0f(2): jnz 0xffffffb9(%rip)
4e11(3): sub %r13,%r12
4e14(5): jmp 0xffffff45(%rip)
4e19(7): nop 0x0(%rax)
4e20(3): mov %r12,%rsi
4e23(2): xor %edi,%edi
4e25(5): mov $0x1,%edx
4e2a(5): mov %r8,0x8(%rsp)
4e2f(5): call 0xffffceb1(%rip)
4e34(4): cmp $0xffffffff,%rax
4e38(5): mov $0x1,%eax
4e3d(5): mov 0x8(%rsp),%r8
4e42(4): cmovne %r15,%r12
4e46(3): cmovne %eax,%ebx
4e49(5): jmp 0xffffff24(%rip)
4e4e(3): cmp %r8,%r14
4e51(4): lea 0x1(%r14),%rbx
4e55(6): jnb 0xffffff73(%rip)
4e5b(4): lea 0x1(%r8),%rbp
4e5f(1): nop 
4e60(2): xor %edx,%edx
4e62(2): xor %esi,%esi
4e64(5): mov $0x1,%edi
4e69(4): add $0x1,%rbx
4e6d(5): call 0xfffffd13(%rip)
4e72(3): cmp %rbx,%rbp
4e75(2): jnz 0xffffffeb(%rip)
4e77(4): add $0x38,%rsp
4e7b(1): pop %rbx
4e7c(1): pop %rbp
4e7d(2): pop %r12
4e7f(2): pop %r13
4e81(2): pop %r14
4e83(2): pop %r15
4e85(1): ret near (%rsp)
4e86(7): mov 0x207503(%rip),%rdx
4e8d(5): mov $0x3,%esi
4e92(2): xor %edi,%edi
4e94(5): call 0x22bc(%rip)
4e99(3): mov %rax,%rbx
4e9c(5): call 0xffffccd4(%rip)
4ea1(2): mov (%rax),%esi
4ea3(7): lea 0x3f44(%rip),%rdx
4eaa(3): mov %rbx,%rcx
4ead(5): mov $0x1,%edi
4eb2(2): xor %eax,%eax
4eb4(5): call 0xffffcfec(%rip)
4eb9(7): nop 0x0(%rax)
4ec0(2): push %r13
4ec2(2): push %r12
4ec4(5): mov $0x5,%edx
4ec9(1): push %rbp
4eca(1): push %rbx
4ecb(2): mov %edi,%ebp
4ecd(7): sub $0x88,%rsp
4ed4(7): mov 0x20763d(%rip),%rbx
4edb(9): mov $0x28,%rax
4ee4(5): mov %rax,0x78(%rsp)
4ee9(2): xor %eax,%eax
4eeb(2): test %edi,%edi
4eed(2): jz 0x30(%rip)
4eef(7): lea 0x4112(%rip),%rsi
4ef6(2): xor %edi,%edi
4ef8(5): call 0xffffcd48(%rip)
4efd(7): mov 0x20739c(%rip),%rdi
4f04(3): mov %rax,%rdx
4f07(3): mov %rbx,%rcx
4f0a(5): mov $0x1,%esi
4f0f(2): xor %eax,%eax
4f11(5): call 0xffffd02f(%rip)
4f16(2): mov %ebp,%edi
4f18(5): call 0xffffd008(%rip)
4f1d(7): lea 0x410c(%rip),%rsi
4f24(2): xor %edi,%edi
4f26(5): call 0xffffcd1a(%rip)
4f2b(3): mov %rbx,%rdx
4f2e(3): mov %rax,%rsi
4f31(5): mov $0x1,%edi
4f36(2): xor %eax,%eax
4f38(5): call 0xffffcf48(%rip)
4f3d(7): mov 0x207324(%rip),%rbx
4f44(7): lea 0x410d(%rip),%rsi
4f4b(5): mov $0x5,%edx
4f50(2): xor %edi,%edi
4f52(5): call 0xffffccee(%rip)
4f57(3): mov %rbx,%rsi
4f5a(3): mov %rax,%rdi
4f5d(5): call 0xffffce23(%rip)
4f62(7): mov 0x2072ff(%rip),%rbx
4f69(7): lea 0x4158(%rip),%rsi
4f70(5): mov $0x5,%edx
4f75(2): xor %edi,%edi
4f77(5): call 0xffffccc9(%rip)
4f7c(3): mov %rbx,%rsi
4f7f(3): mov %rax,%rdi
4f82(5): call 0xffffcdfe(%rip)
4f87(7): mov 0x2072da(%rip),%rbx
4f8e(7): lea 0x416b(%rip),%rsi
4f95(5): mov $0x5,%edx
4f9a(2): xor %edi,%edi
4f9c(5): call 0xffffcca4(%rip)
4fa1(3): mov %rbx,%rsi
4fa4(3): mov %rax,%rdi
4fa7(5): call 0xffffcdd9(%rip)
4fac(7): lea 0x419d(%rip),%rsi
4fb3(5): mov $0x5,%edx
4fb8(2): xor %edi,%edi
4fba(5): call 0xffffcc86(%rip)
4fbf(7): mov 0x2072a2(%rip),%rdi
4fc6(5): mov $0x2,%ecx
4fcb(3): mov %rax,%rdx
4fce(5): mov $0x1,%esi
4fd3(2): xor %eax,%eax
4fd5(5): call 0xffffcf6b(%rip)
4fda(7): mov 0x207287(%rip),%rbx
4fe1(7): lea 0x45b0(%rip),%rsi
4fe8(5): mov $0x5,%edx
4fed(2): xor %edi,%edi
4fef(5): call 0xffffcc51(%rip)
4ff4(3): mov %rbx,%rsi
4ff7(3): mov %rax,%rdi
4ffa(5): call 0xffffcd86(%rip)
4fff(7): mov 0x207262(%rip),%rbx
5006(7): lea 0x4603(%rip),%rsi
500d(5): mov $0x5,%edx
5012(2): xor %edi,%edi
5014(5): call 0xffffcc2c(%rip)
5019(3): mov %rbx,%rsi
501c(3): mov %rax,%rdi
501f(5): call 0xffffcd61(%rip)
5024(7): mov 0x20723d(%rip),%rbx
502b(7): lea 0x460e(%rip),%rsi
5032(5): mov $0x5,%edx
5037(2): xor %edi,%edi
5039(5): call 0xffffcc07(%rip)
503e(3): mov %rbx,%rsi
5041(3): mov %rax,%rdi
5044(5): call 0xffffcd3c(%rip)
5049(7): mov 0x207218(%rip),%rbx
5050(7): lea 0x4621(%rip),%rsi
5057(5): mov $0x5,%edx
505c(2): xor %edi,%edi
505e(5): call 0xffffcbe2(%rip)
5063(3): mov %rbx,%rsi
5066(3): mov %rax,%rdi
5069(5): call 0xffffcd17(%rip)
506e(7): mov 0x2071f3(%rip),%rbx
5075(7): lea 0x46d4(%rip),%rsi
507c(5): mov $0x5,%edx
5081(2): xor %edi,%edi
5083(5): call 0xffffcbbd(%rip)
5088(3): mov %rbx,%rsi
508b(3): mov %rax,%rdi
508e(7): lea 0x3b70(%rip),%rbx
5095(5): call 0xffffcceb(%rip)
509a(7): lea 0x3b6a(%rip),%rax
50a1(7): lea 0x3ba4(%rip),%rcx
50a8(9): mov $0x0,0x60(%rsp)
50b1(9): mov $0x0,0x68(%rsp)
50ba(3): mov %rsp,%rdx
50bd(4): mov %rax,(%rsp)
50c1(7): lea 0x3b45(%rip),%rax
50c8(5): mov %rcx,0x30(%rsp)
50cd(7): lea 0x3b82(%rip),%rcx
50d4(5): mov %rax,0x8(%rsp)
50d9(7): lea 0x3ba5(%rip),%rax
50e0(5): mov %rcx,0x40(%rsp)
50e5(7): lea 0x3b74(%rip),%rcx
50ec(5): mov %rax,0x10(%rsp)
50f1(7): lea 0x3b25(%rip),%rax
50f8(5): mov %rcx,0x50(%rsp)
50fd(5): mov %rax,0x18(%rsp)
5102(7): lea 0x3b2a(%rip),%rax
5109(5): mov %rax,0x20(%rsp)
510e(7): lea 0x3b28(%rip),%rax
5115(5): mov %rax,0x28(%rsp)
511a(5): mov %rax,0x38(%rsp)
511f(5): mov %rax,0x48(%rsp)
5124(5): mov %rax,0x58(%rsp)
5129(7): nop 0x0(%rax)
5130(4): add $0x10,%rdx
5134(3): mov (%rdx),%rdi
5137(3): test %rdi,%rdi
513a(2): jz 0x15(%rip)
513c(5): mov $0x6,%ecx
5141(3): mov %rbx,%rsi
5144(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5146(3): setnbe %al
5149(2): sbb $0x0,%al
514b(2): test %al,%al
514d(2): jnz 0xffffffe3(%rip)
514f(4): mov 0x8(%rdx),%r12
5153(2): xor %edi,%edi
5155(5): mov $0x5,%edx
515a(7): lea 0x3b09(%rip),%rsi
5161(3): test %r12,%r12
5164(6): jz 0xc7(%rip)
516a(5): call 0xffffcad6(%rip)
516f(7): lea 0x4732(%rip),%rcx
5176(7): lea 0x3b04(%rip),%rdx
517d(3): mov %rax,%rsi
5180(5): mov $0x1,%edi
5185(2): xor %eax,%eax
5187(5): call 0xffffccf9(%rip)
518c(2): xor %esi,%esi
518e(5): mov $0x5,%edi
5193(5): call 0xffffccdd(%rip)
5198(3): test %rax,%rax
519b(2): jz 0x1e(%rip)
519d(7): lea 0x3aeb(%rip),%rsi
51a4(5): mov $0x3,%edx
51a9(3): mov %rax,%rdi
51ac(5): call 0xffffc9d4(%rip)
51b1(2): test %eax,%eax
51b3(6): jnz 0x10d(%rip)
51b9(7): lea 0x3ad3(%rip),%rsi
51c0(2): xor %edi,%edi
51c2(5): mov $0x5,%edx
51c7(5): call 0xffffca79(%rip)
51cc(7): lea 0x3a32(%rip),%rcx
51d3(7): lea 0x46ce(%rip),%rdx
51da(3): mov %rax,%rsi
51dd(5): mov $0x1,%edi
51e2(2): xor %eax,%eax
51e4(5): call 0xffffcc9c(%rip)
51e9(3): cmp %rbx,%r12
51ec(7): lea 0x3a34(%rip),%rcx
51f3(7): lea 0x4f47(%rip),%rbx
51fa(4): cmove %rcx,%rbx
51fe(7): lea 0x4713(%rip),%rsi
5205(2): xor %edi,%edi
5207(5): mov $0x5,%edx
520c(5): call 0xffffca34(%rip)
5211(3): mov %rbx,%rcx
5214(3): mov %rax,%rsi
5217(3): mov %r12,%rdx
521a(5): mov $0x1,%edi
521f(2): xor %eax,%eax
5221(5): call 0xffffcc5f(%rip)
5226(5): jmp 0xfffffcf0(%rip)
522b(5): call 0xffffca15(%rip)
5230(7): lea 0x4671(%rip),%rcx
5237(7): lea 0x3a43(%rip),%rdx
523e(3): mov %rax,%rsi
5241(5): mov $0x1,%edi
5246(2): xor %eax,%eax
5248(5): call 0xffffcc38(%rip)
524d(2): xor %esi,%esi
524f(5): mov $0x5,%edi
5254(5): call 0xffffcc1c(%rip)
5259(3): test %rax,%rax
525c(2): jz 0x1a(%rip)
525e(7): lea 0x3a2a(%rip),%rsi
5265(5): mov $0x3,%edx
526a(3): mov %rax,%rdi
526d(5): call 0xffffc913(%rip)
5272(2): test %eax,%eax
5274(2): jnz 0x45(%rip)
5276(7): lea 0x3a16(%rip),%rsi
527d(5): mov $0x5,%edx
5282(2): xor %edi,%edi
5284(7): lea 0x397a(%rip),%r12
528b(7): lea 0x3995(%rip),%rbx
5292(5): call 0xffffc9ae(%rip)
5297(7): lea 0x3967(%rip),%rcx
529e(7): lea 0x4603(%rip),%rdx
52a5(3): mov %rax,%rsi
52a8(5): mov $0x1,%edi
52ad(2): xor %eax,%eax
52af(5): call 0xffffcbd1(%rip)
52b4(5): jmp 0xffffff4a(%rip)
52b9(7): lea 0x3945(%rip),%r12
52c0(7): mov 0x206fa1(%rip),%r13
52c7(7): lea 0x4602(%rip),%rsi
52ce(2): xor %edi,%edi
52d0(5): mov $0x5,%edx
52d5(5): call 0xffffc96b(%rip)
52da(3): mov %r13,%rsi
52dd(3): mov %rax,%rdi
52e0(5): call 0xffffcaa0(%rip)
52e5(5): jmp 0xfffffed4(%rip)

"bytes_split" :
4c90(2): push %r15
4c92(2): push %r14
4c94(3): xor %r14d,%r14d
4c97(2): push %r13
4c99(2): push %r12
4c9b(3): mov %rdi,%r15
4c9e(1): push %rbp
4c9f(1): push %rbx
4ca0(3): mov %rdi,%r12
4ca3(5): mov $0x1,%ebp
4ca8(5): mov $0x1,%ebx
4cad(4): sub $0x38,%rsp
4cb1(4): cmp $0xffffffff,%rcx
4cb5(5): mov %rsi,0x20(%rsp)
4cba(5): mov %rdx,0x28(%rsp)
4cbf(6): jz 0xa5(%rip)
4cc5(3): cmp %rdx,%rcx
4cc8(3): mov %rcx,%r13
4ccb(5): setb 0x1f(%rsp)
4cd0(3): cmp %r12,%r13
4cd3(6): jb 0xd3(%rip)
4cd9(3): test %r8,%r8
4cdc(5): mov 0x20(%rsp),%r9
4ce1(4): setz %r11b
4ce5(2): jmp 0x33(%rip)
4ce7(9): nop 0x0(%rax,%rax,1)
4cf0(3): movzx %bl,%ebx
4cf3(3): add %rbx,%r14
4cf6(3): cmp %r8,%r14
4cf9(3): setb %bl
4cfc(3): or %r11b,%bl
4cff(2): jnz 0xb(%rip)
4d01(3): test %bpl,%bpl
4d04(6): jz 0xc4(%rip)
4d0a(3): sub %r12,%r13
4d0d(3): add %r12,%r9
4d10(3): mov %r15,%r12
4d13(3): cmp %r13,%r15
4d16(2): jnbe 0x3a(%rip)
4d18(3): or %bl,%bpl
4d1b(2): jz 0xffffffd5(%rip)
4d1d(3): mov %r9,%rsi
4d20(3): movzx %bl,%edi
4d23(3): mov %r12,%rdx
4d26(5): mov %r8,0x10(%rsp)
4d2b(5): mov %r11b,0x1e(%rsp)
4d30(5): mov %r9,0x8(%rsp)
4d35(5): call 0xfffffe4b(%rip)
4d3a(5): mov 0x10(%rsp),%r8
4d3f(2): mov %eax,%ebp
4d41(6): movzx 0x1e(%rsp),%r11d
4d47(5): mov 0x8(%rsp),%r9
4d4c(2): jmp 0xffffffa4(%rip)
4d4e(2): nop 
4d50(3): test %r13,%r13
4d53(6): jnz 0x8d(%rip)
4d59(5): cmp $0x0,0x1f(%rsp)
4d5e(6): jnz 0xf0(%rip)
4d64(3): test %bpl,%bpl
4d67(6): jz 0xb9(%rip)
4d6d(5): mov 0x28(%rsp),%rdx
4d72(5): mov 0x20(%rsp),%rsi
4d77(2): xor %edi,%edi
4d79(5): mov %r8,0x8(%rsp)
4d7e(5): call 0x25c2(%rip)
4d83(4): cmp $0xffffffff,%rax
4d87(3): mov %rax,%r13
4d8a(5): mov 0x8(%rsp),%r8
4d8f(6): jz 0xf7(%rip)
4d95(3): test %rax,%rax
4d98(5): setz 0x1f(%rsp)
4d9d(3): cmp %r12,%r13
4da0(6): jnb 0xffffff39(%rip)
4da6(3): test %r13,%r13
4da9(2): jz 0xffffffb0(%rip)
4dab(2): mov %ebp,%eax
4dad(2): or %bl,%al
4daf(2): jnz 0x28(%rip)
4db1(3): movzx %al,%eax
4db4(2): xor %ebp,%ebp
4db6(5): mov $0x1,%edx
4dbb(3): add %rax,%r14
4dbe(3): cmp %r14,%r8
4dc1(3): setz %bl
4dc4(2): and %dl,%bl
4dc6(2): jz 0x4b(%rip)
4dc8(4): add $0x38,%rsp
4dcc(1): pop %rbx
4dcd(1): pop %rbp
4dce(2): pop %r12
4dd0(2): pop %r13
4dd2(2): pop %r14
4dd4(2): pop %r15
4dd6(1): ret near (%rsp)
4dd7(5): mov 0x20(%rsp),%r9
4ddc(4): nop 0x0(%rax)
4de0(3): movzx %bl,%edi
4de3(3): mov %r13,%rdx
4de6(3): mov %r9,%rsi
4de9(5): mov %r8,0x8(%rsp)
4dee(5): call 0xfffffd92(%rip)
4df3(5): mov 0x8(%rsp),%r8
4df8(2): mov %eax,%edx
4dfa(2): mov %eax,%ebp
4dfc(2): mov %ebx,%eax
4dfe(3): xor $0x1,%edx
4e01(3): movzx %al,%eax
4e04(3): add %rax,%r14
4e07(3): cmp %r14,%r8
4e0a(3): setz %bl
4e0d(2): and %dl,%bl
4e0f(2): jnz 0xffffffb9(%rip)
4e11(3): sub %r13,%r12
4e14(5): jmp 0xffffff45(%rip)
4e19(7): nop 0x0(%rax)
4e20(3): mov %r12,%rsi
4e23(2): xor %edi,%edi
4e25(5): mov $0x1,%edx
4e2a(5): mov %r8,0x8(%rsp)
4e2f(5): call 0xffffceb1(%rip)
4e34(4): cmp $0xffffffff,%rax
4e38(5): mov $0x1,%eax
4e3d(5): mov 0x8(%rsp),%r8
4e42(4): cmovne %r15,%r12
4e46(3): cmovne %eax,%ebx
4e49(5): jmp 0xffffff24(%rip)
4e4e(3): cmp %r8,%r14
4e51(4): lea 0x1(%r14),%rbx
4e55(6): jnb 0xffffff73(%rip)
4e5b(4): lea 0x1(%r8),%rbp
4e5f(1): nop 
4e60(2): xor %edx,%edx
4e62(2): xor %esi,%esi
4e64(5): mov $0x1,%edi
4e69(4): add $0x1,%rbx
4e6d(5): call 0xfffffd13(%rip)
4e72(3): cmp %rbx,%rbp
4e75(2): jnz 0xffffffeb(%rip)
4e77(4): add $0x38,%rsp
4e7b(1): pop %rbx
4e7c(1): pop %rbp
4e7d(2): pop %r12
4e7f(2): pop %r13
4e81(2): pop %r14
4e83(2): pop %r15
4e85(1): ret near (%rsp)
4e86(7): mov 0x207503(%rip),%rdx
4e8d(5): mov $0x3,%esi
4e92(2): xor %edi,%edi
4e94(5): call 0x22bc(%rip)
4e99(3): mov %rax,%rbx
4e9c(5): call 0xffffccd4(%rip)
4ea1(2): mov (%rax),%esi
4ea3(7): lea 0x3f44(%rip),%rdx
4eaa(3): mov %rbx,%rcx
4ead(5): mov $0x1,%edi
4eb2(2): xor %eax,%eax
4eb4(5): call 0xffffcfec(%rip)
4eb9(7): nop 0x0(%rax)
4ec0(2): push %r13
4ec2(2): push %r12
4ec4(5): mov $0x5,%edx
4ec9(1): push %rbp
4eca(1): push %rbx
4ecb(2): mov %edi,%ebp
4ecd(7): sub $0x88,%rsp
4ed4(7): mov 0x20763d(%rip),%rbx
4edb(9): mov $0x28,%rax
4ee4(5): mov %rax,0x78(%rsp)
4ee9(2): xor %eax,%eax
4eeb(2): test %edi,%edi
4eed(2): jz 0x30(%rip)
4eef(7): lea 0x4112(%rip),%rsi
4ef6(2): xor %edi,%edi
4ef8(5): call 0xffffcd48(%rip)
4efd(7): mov 0x20739c(%rip),%rdi
4f04(3): mov %rax,%rdx
4f07(3): mov %rbx,%rcx
4f0a(5): mov $0x1,%esi
4f0f(2): xor %eax,%eax
4f11(5): call 0xffffd02f(%rip)
4f16(2): mov %ebp,%edi
4f18(5): call 0xffffd008(%rip)
4f1d(7): lea 0x410c(%rip),%rsi
4f24(2): xor %edi,%edi
4f26(5): call 0xffffcd1a(%rip)
4f2b(3): mov %rbx,%rdx
4f2e(3): mov %rax,%rsi
4f31(5): mov $0x1,%edi
4f36(2): xor %eax,%eax
4f38(5): call 0xffffcf48(%rip)
4f3d(7): mov 0x207324(%rip),%rbx
4f44(7): lea 0x410d(%rip),%rsi
4f4b(5): mov $0x5,%edx
4f50(2): xor %edi,%edi
4f52(5): call 0xffffccee(%rip)
4f57(3): mov %rbx,%rsi
4f5a(3): mov %rax,%rdi
4f5d(5): call 0xffffce23(%rip)
4f62(7): mov 0x2072ff(%rip),%rbx
4f69(7): lea 0x4158(%rip),%rsi
4f70(5): mov $0x5,%edx
4f75(2): xor %edi,%edi
4f77(5): call 0xffffccc9(%rip)
4f7c(3): mov %rbx,%rsi
4f7f(3): mov %rax,%rdi
4f82(5): call 0xffffcdfe(%rip)
4f87(7): mov 0x2072da(%rip),%rbx
4f8e(7): lea 0x416b(%rip),%rsi
4f95(5): mov $0x5,%edx
4f9a(2): xor %edi,%edi
4f9c(5): call 0xffffcca4(%rip)
4fa1(3): mov %rbx,%rsi
4fa4(3): mov %rax,%rdi
4fa7(5): call 0xffffcdd9(%rip)
4fac(7): lea 0x419d(%rip),%rsi
4fb3(5): mov $0x5,%edx
4fb8(2): xor %edi,%edi
4fba(5): call 0xffffcc86(%rip)
4fbf(7): mov 0x2072a2(%rip),%rdi
4fc6(5): mov $0x2,%ecx
4fcb(3): mov %rax,%rdx
4fce(5): mov $0x1,%esi
4fd3(2): xor %eax,%eax
4fd5(5): call 0xffffcf6b(%rip)
4fda(7): mov 0x207287(%rip),%rbx
4fe1(7): lea 0x45b0(%rip),%rsi
4fe8(5): mov $0x5,%edx
4fed(2): xor %edi,%edi
4fef(5): call 0xffffcc51(%rip)
4ff4(3): mov %rbx,%rsi
4ff7(3): mov %rax,%rdi
4ffa(5): call 0xffffcd86(%rip)
4fff(7): mov 0x207262(%rip),%rbx
5006(7): lea 0x4603(%rip),%rsi
500d(5): mov $0x5,%edx
5012(2): xor %edi,%edi
5014(5): call 0xffffcc2c(%rip)
5019(3): mov %rbx,%rsi
501c(3): mov %rax,%rdi
501f(5): call 0xffffcd61(%rip)
5024(7): mov 0x20723d(%rip),%rbx
502b(7): lea 0x460e(%rip),%rsi
5032(5): mov $0x5,%edx
5037(2): xor %edi,%edi
5039(5): call 0xffffcc07(%rip)
503e(3): mov %rbx,%rsi
5041(3): mov %rax,%rdi
5044(5): call 0xffffcd3c(%rip)
5049(7): mov 0x207218(%rip),%rbx
5050(7): lea 0x4621(%rip),%rsi
5057(5): mov $0x5,%edx
505c(2): xor %edi,%edi
505e(5): call 0xffffcbe2(%rip)
5063(3): mov %rbx,%rsi
5066(3): mov %rax,%rdi
5069(5): call 0xffffcd17(%rip)
506e(7): mov 0x2071f3(%rip),%rbx
5075(7): lea 0x46d4(%rip),%rsi
507c(5): mov $0x5,%edx
5081(2): xor %edi,%edi
5083(5): call 0xffffcbbd(%rip)
5088(3): mov %rbx,%rsi
508b(3): mov %rax,%rdi
508e(7): lea 0x3b70(%rip),%rbx
5095(5): call 0xffffcceb(%rip)
509a(7): lea 0x3b6a(%rip),%rax
50a1(7): lea 0x3ba4(%rip),%rcx
50a8(9): mov $0x0,0x60(%rsp)
50b1(9): mov $0x0,0x68(%rsp)
50ba(3): mov %rsp,%rdx
50bd(4): mov %rax,(%rsp)
50c1(7): lea 0x3b45(%rip),%rax
50c8(5): mov %rcx,0x30(%rsp)
50cd(7): lea 0x3b82(%rip),%rcx
50d4(5): mov %rax,0x8(%rsp)
50d9(7): lea 0x3ba5(%rip),%rax
50e0(5): mov %rcx,0x40(%rsp)
50e5(7): lea 0x3b74(%rip),%rcx
50ec(5): mov %rax,0x10(%rsp)
50f1(7): lea 0x3b25(%rip),%rax
50f8(5): mov %rcx,0x50(%rsp)
50fd(5): mov %rax,0x18(%rsp)
5102(7): lea 0x3b2a(%rip),%rax
5109(5): mov %rax,0x20(%rsp)
510e(7): lea 0x3b28(%rip),%rax
5115(5): mov %rax,0x28(%rsp)
511a(5): mov %rax,0x38(%rsp)
511f(5): mov %rax,0x48(%rsp)
5124(5): mov %rax,0x58(%rsp)
5129(7): nop 0x0(%rax)
5130(4): add $0x10,%rdx
5134(3): mov (%rdx),%rdi
5137(3): test %rdi,%rdi
513a(2): jz 0x15(%rip)
513c(5): mov $0x6,%ecx
5141(3): mov %rbx,%rsi
5144(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5146(3): setnbe %al
5149(2): sbb $0x0,%al
514b(2): test %al,%al
514d(2): jnz 0xffffffe3(%rip)
514f(4): mov 0x8(%rdx),%r12
5153(2): xor %edi,%edi
5155(5): mov $0x5,%edx
515a(7): lea 0x3b09(%rip),%rsi
5161(3): test %r12,%r12
5164(6): jz 0xc7(%rip)
516a(5): call 0xffffcad6(%rip)
516f(7): lea 0x4732(%rip),%rcx
5176(7): lea 0x3b04(%rip),%rdx
517d(3): mov %rax,%rsi
5180(5): mov $0x1,%edi
5185(2): xor %eax,%eax
5187(5): call 0xffffccf9(%rip)
518c(2): xor %esi,%esi
518e(5): mov $0x5,%edi
5193(5): call 0xffffccdd(%rip)
5198(3): test %rax,%rax
519b(2): jz 0x1e(%rip)
519d(7): lea 0x3aeb(%rip),%rsi
51a4(5): mov $0x3,%edx
51a9(3): mov %rax,%rdi
51ac(5): call 0xffffc9d4(%rip)
51b1(2): test %eax,%eax
51b3(6): jnz 0x10d(%rip)
51b9(7): lea 0x3ad3(%rip),%rsi
51c0(2): xor %edi,%edi
51c2(5): mov $0x5,%edx
51c7(5): call 0xffffca79(%rip)
51cc(7): lea 0x3a32(%rip),%rcx
51d3(7): lea 0x46ce(%rip),%rdx
51da(3): mov %rax,%rsi
51dd(5): mov $0x1,%edi
51e2(2): xor %eax,%eax
51e4(5): call 0xffffcc9c(%rip)
51e9(3): cmp %rbx,%r12
51ec(7): lea 0x3a34(%rip),%rcx
51f3(7): lea 0x4f47(%rip),%rbx
51fa(4): cmove %rcx,%rbx
51fe(7): lea 0x4713(%rip),%rsi
5205(2): xor %edi,%edi
5207(5): mov $0x5,%edx
520c(5): call 0xffffca34(%rip)
5211(3): mov %rbx,%rcx
5214(3): mov %rax,%rsi
5217(3): mov %r12,%rdx
521a(5): mov $0x1,%edi
521f(2): xor %eax,%eax
5221(5): call 0xffffcc5f(%rip)
5226(5): jmp 0xfffffcf0(%rip)
522b(5): call 0xffffca15(%rip)
5230(7): lea 0x4671(%rip),%rcx
5237(7): lea 0x3a43(%rip),%rdx
523e(3): mov %rax,%rsi
5241(5): mov $0x1,%edi
5246(2): xor %eax,%eax
5248(5): call 0xffffcc38(%rip)
524d(2): xor %esi,%esi
524f(5): mov $0x5,%edi
5254(5): call 0xffffcc1c(%rip)
5259(3): test %rax,%rax
525c(2): jz 0x1a(%rip)
525e(7): lea 0x3a2a(%rip),%rsi
5265(5): mov $0x3,%edx
526a(3): mov %rax,%rdi
526d(5): call 0xffffc913(%rip)
5272(2): test %eax,%eax
5274(2): jnz 0x45(%rip)
5276(7): lea 0x3a16(%rip),%rsi
527d(5): mov $0x5,%edx
5282(2): xor %edi,%edi
5284(7): lea 0x397a(%rip),%r12
528b(7): lea 0x3995(%rip),%rbx
5292(5): call 0xffffc9ae(%rip)
5297(7): lea 0x3967(%rip),%rcx
529e(7): lea 0x4603(%rip),%rdx
52a5(3): mov %rax,%rsi
52a8(5): mov $0x1,%edi
52ad(2): xor %eax,%eax
52af(5): call 0xffffcbd1(%rip)
52b4(5): jmp 0xffffff4a(%rip)
52b9(7): lea 0x3945(%rip),%r12
52c0(7): mov 0x206fa1(%rip),%r13
52c7(7): lea 0x4602(%rip),%rsi
52ce(2): xor %edi,%edi
52d0(5): mov $0x5,%edx
52d5(5): call 0xffffc96b(%rip)
52da(3): mov %r13,%rsi
52dd(3): mov %rax,%rdi
52e0(5): call 0xffffcaa0(%rip)
52e5(5): jmp 0xfffffed4(%rip)

"usage" :
4ec0(2): push %r13
4ec2(2): push %r12
4ec4(5): mov $0x5,%edx
4ec9(1): push %rbp
4eca(1): push %rbx
4ecb(2): mov %edi,%ebp
4ecd(7): sub $0x88,%rsp
4ed4(7): mov 0x20763d(%rip),%rbx
4edb(9): mov $0x28,%rax
4ee4(5): mov %rax,0x78(%rsp)
4ee9(2): xor %eax,%eax
4eeb(2): test %edi,%edi
4eed(2): jz 0x30(%rip)
4eef(7): lea 0x4112(%rip),%rsi
4ef6(2): xor %edi,%edi
4ef8(5): call 0xffffcd48(%rip)
4efd(7): mov 0x20739c(%rip),%rdi
4f04(3): mov %rax,%rdx
4f07(3): mov %rbx,%rcx
4f0a(5): mov $0x1,%esi
4f0f(2): xor %eax,%eax
4f11(5): call 0xffffd02f(%rip)
4f16(2): mov %ebp,%edi
4f18(5): call 0xffffd008(%rip)
4f1d(7): lea 0x410c(%rip),%rsi
4f24(2): xor %edi,%edi
4f26(5): call 0xffffcd1a(%rip)
4f2b(3): mov %rbx,%rdx
4f2e(3): mov %rax,%rsi
4f31(5): mov $0x1,%edi
4f36(2): xor %eax,%eax
4f38(5): call 0xffffcf48(%rip)
4f3d(7): mov 0x207324(%rip),%rbx
4f44(7): lea 0x410d(%rip),%rsi
4f4b(5): mov $0x5,%edx
4f50(2): xor %edi,%edi
4f52(5): call 0xffffccee(%rip)
4f57(3): mov %rbx,%rsi
4f5a(3): mov %rax,%rdi
4f5d(5): call 0xffffce23(%rip)
4f62(7): mov 0x2072ff(%rip),%rbx
4f69(7): lea 0x4158(%rip),%rsi
4f70(5): mov $0x5,%edx
4f75(2): xor %edi,%edi
4f77(5): call 0xffffccc9(%rip)
4f7c(3): mov %rbx,%rsi
4f7f(3): mov %rax,%rdi
4f82(5): call 0xffffcdfe(%rip)
4f87(7): mov 0x2072da(%rip),%rbx
4f8e(7): lea 0x416b(%rip),%rsi
4f95(5): mov $0x5,%edx
4f9a(2): xor %edi,%edi
4f9c(5): call 0xffffcca4(%rip)
4fa1(3): mov %rbx,%rsi
4fa4(3): mov %rax,%rdi
4fa7(5): call 0xffffcdd9(%rip)
4fac(7): lea 0x419d(%rip),%rsi
4fb3(5): mov $0x5,%edx
4fb8(2): xor %edi,%edi
4fba(5): call 0xffffcc86(%rip)
4fbf(7): mov 0x2072a2(%rip),%rdi
4fc6(5): mov $0x2,%ecx
4fcb(3): mov %rax,%rdx
4fce(5): mov $0x1,%esi
4fd3(2): xor %eax,%eax
4fd5(5): call 0xffffcf6b(%rip)
4fda(7): mov 0x207287(%rip),%rbx
4fe1(7): lea 0x45b0(%rip),%rsi
4fe8(5): mov $0x5,%edx
4fed(2): xor %edi,%edi
4fef(5): call 0xffffcc51(%rip)
4ff4(3): mov %rbx,%rsi
4ff7(3): mov %rax,%rdi
4ffa(5): call 0xffffcd86(%rip)
4fff(7): mov 0x207262(%rip),%rbx
5006(7): lea 0x4603(%rip),%rsi
500d(5): mov $0x5,%edx
5012(2): xor %edi,%edi
5014(5): call 0xffffcc2c(%rip)
5019(3): mov %rbx,%rsi
501c(3): mov %rax,%rdi
501f(5): call 0xffffcd61(%rip)
5024(7): mov 0x20723d(%rip),%rbx
502b(7): lea 0x460e(%rip),%rsi
5032(5): mov $0x5,%edx
5037(2): xor %edi,%edi
5039(5): call 0xffffcc07(%rip)
503e(3): mov %rbx,%rsi
5041(3): mov %rax,%rdi
5044(5): call 0xffffcd3c(%rip)
5049(7): mov 0x207218(%rip),%rbx
5050(7): lea 0x4621(%rip),%rsi
5057(5): mov $0x5,%edx
505c(2): xor %edi,%edi
505e(5): call 0xffffcbe2(%rip)
5063(3): mov %rbx,%rsi
5066(3): mov %rax,%rdi
5069(5): call 0xffffcd17(%rip)
506e(7): mov 0x2071f3(%rip),%rbx
5075(7): lea 0x46d4(%rip),%rsi
507c(5): mov $0x5,%edx
5081(2): xor %edi,%edi
5083(5): call 0xffffcbbd(%rip)
5088(3): mov %rbx,%rsi
508b(3): mov %rax,%rdi
508e(7): lea 0x3b70(%rip),%rbx
5095(5): call 0xffffcceb(%rip)
509a(7): lea 0x3b6a(%rip),%rax
50a1(7): lea 0x3ba4(%rip),%rcx
50a8(9): mov $0x0,0x60(%rsp)
50b1(9): mov $0x0,0x68(%rsp)
50ba(3): mov %rsp,%rdx
50bd(4): mov %rax,(%rsp)
50c1(7): lea 0x3b45(%rip),%rax
50c8(5): mov %rcx,0x30(%rsp)
50cd(7): lea 0x3b82(%rip),%rcx
50d4(5): mov %rax,0x8(%rsp)
50d9(7): lea 0x3ba5(%rip),%rax
50e0(5): mov %rcx,0x40(%rsp)
50e5(7): lea 0x3b74(%rip),%rcx
50ec(5): mov %rax,0x10(%rsp)
50f1(7): lea 0x3b25(%rip),%rax
50f8(5): mov %rcx,0x50(%rsp)
50fd(5): mov %rax,0x18(%rsp)
5102(7): lea 0x3b2a(%rip),%rax
5109(5): mov %rax,0x20(%rsp)
510e(7): lea 0x3b28(%rip),%rax
5115(5): mov %rax,0x28(%rsp)
511a(5): mov %rax,0x38(%rsp)
511f(5): mov %rax,0x48(%rsp)
5124(5): mov %rax,0x58(%rsp)
5129(7): nop 0x0(%rax)
5130(4): add $0x10,%rdx
5134(3): mov (%rdx),%rdi
5137(3): test %rdi,%rdi
513a(2): jz 0x15(%rip)
513c(5): mov $0x6,%ecx
5141(3): mov %rbx,%rsi
5144(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5146(3): setnbe %al
5149(2): sbb $0x0,%al
514b(2): test %al,%al
514d(2): jnz 0xffffffe3(%rip)
514f(4): mov 0x8(%rdx),%r12
5153(2): xor %edi,%edi
5155(5): mov $0x5,%edx
515a(7): lea 0x3b09(%rip),%rsi
5161(3): test %r12,%r12
5164(6): jz 0xc7(%rip)
516a(5): call 0xffffcad6(%rip)
516f(7): lea 0x4732(%rip),%rcx
5176(7): lea 0x3b04(%rip),%rdx
517d(3): mov %rax,%rsi
5180(5): mov $0x1,%edi
5185(2): xor %eax,%eax
5187(5): call 0xffffccf9(%rip)
518c(2): xor %esi,%esi
518e(5): mov $0x5,%edi
5193(5): call 0xffffccdd(%rip)
5198(3): test %rax,%rax
519b(2): jz 0x1e(%rip)
519d(7): lea 0x3aeb(%rip),%rsi
51a4(5): mov $0x3,%edx
51a9(3): mov %rax,%rdi
51ac(5): call 0xffffc9d4(%rip)
51b1(2): test %eax,%eax
51b3(6): jnz 0x10d(%rip)
51b9(7): lea 0x3ad3(%rip),%rsi
51c0(2): xor %edi,%edi
51c2(5): mov $0x5,%edx
51c7(5): call 0xffffca79(%rip)
51cc(7): lea 0x3a32(%rip),%rcx
51d3(7): lea 0x46ce(%rip),%rdx
51da(3): mov %rax,%rsi
51dd(5): mov $0x1,%edi
51e2(2): xor %eax,%eax
51e4(5): call 0xffffcc9c(%rip)
51e9(3): cmp %rbx,%r12
51ec(7): lea 0x3a34(%rip),%rcx
51f3(7): lea 0x4f47(%rip),%rbx
51fa(4): cmove %rcx,%rbx
51fe(7): lea 0x4713(%rip),%rsi
5205(2): xor %edi,%edi
5207(5): mov $0x5,%edx
520c(5): call 0xffffca34(%rip)
5211(3): mov %rbx,%rcx
5214(3): mov %rax,%rsi
5217(3): mov %r12,%rdx
521a(5): mov $0x1,%edi
521f(2): xor %eax,%eax
5221(5): call 0xffffcc5f(%rip)
5226(5): jmp 0xfffffcf0(%rip)
522b(5): call 0xffffca15(%rip)
5230(7): lea 0x4671(%rip),%rcx
5237(7): lea 0x3a43(%rip),%rdx
523e(3): mov %rax,%rsi
5241(5): mov $0x1,%edi
5246(2): xor %eax,%eax
5248(5): call 0xffffcc38(%rip)
524d(2): xor %esi,%esi
524f(5): mov $0x5,%edi
5254(5): call 0xffffcc1c(%rip)
5259(3): test %rax,%rax
525c(2): jz 0x1a(%rip)
525e(7): lea 0x3a2a(%rip),%rsi
5265(5): mov $0x3,%edx
526a(3): mov %rax,%rdi
526d(5): call 0xffffc913(%rip)
5272(2): test %eax,%eax
5274(2): jnz 0x45(%rip)
5276(7): lea 0x3a16(%rip),%rsi
527d(5): mov $0x5,%edx
5282(2): xor %edi,%edi
5284(7): lea 0x397a(%rip),%r12
528b(7): lea 0x3995(%rip),%rbx
5292(5): call 0xffffc9ae(%rip)
5297(7): lea 0x3967(%rip),%rcx
529e(7): lea 0x4603(%rip),%rdx
52a5(3): mov %rax,%rsi
52a8(5): mov $0x1,%edi
52ad(2): xor %eax,%eax
52af(5): call 0xffffcbd1(%rip)
52b4(5): jmp 0xffffff4a(%rip)
52b9(7): lea 0x3945(%rip),%r12
52c0(7): mov 0x206fa1(%rip),%r13
52c7(7): lea 0x4602(%rip),%rsi
52ce(2): xor %edi,%edi
52d0(5): mov $0x5,%edx
52d5(5): call 0xffffc96b(%rip)
52da(3): mov %r13,%rsi
52dd(3): mov %rax,%rdi
52e0(5): call 0xffffcaa0(%rip)
52e5(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
52f0(7): mov %rdi,0x207219(%rip)
52f7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
5300(7): mov %dil,0x207201(%rip)
5307(1): ret near (%rsp)

"close_stdout" :
5310(1): push %rbp
5311(1): push %rbx
5312(4): sub $0x8,%rsp
5316(7): mov 0x206f4b(%rip),%rdi
531d(5): call 0x3343(%rip)
5322(2): test %eax,%eax
5324(2): jz 0x18(%rip)
5326(5): call 0xffffc84a(%rip)
532b(7): cmp $0x0,0x2071d6(%rip)
5332(3): mov %rax,%rbx
5335(2): jz 0x1e(%rip)
5337(3): cmp $0x20,(%rax)
533a(2): jnz 0x19(%rip)
533c(7): mov 0x206f5d(%rip),%rdi
5343(5): call 0x331d(%rip)
5348(2): test %eax,%eax
534a(2): jnz 0x48(%rip)
534c(4): add $0x8,%rsp
5350(1): pop %rbx
5351(1): pop %rbp
5352(1): ret near (%rsp)
5353(7): lea 0x3ae1(%rip),%rsi
535a(2): xor %edi,%edi
535c(5): mov $0x5,%edx
5361(5): call 0xffffc8df(%rip)
5366(7): mov 0x2071a3(%rip),%rdi
536d(3): mov %rax,%rbp
5370(3): test %rdi,%rdi
5373(2): jz 0x2a(%rip)
5375(5): call 0x1dab(%rip)
537a(2): mov (%rbx),%esi
537c(7): lea 0x3a67(%rip),%rdx
5383(3): mov %rax,%rcx
5386(3): mov %rbp,%r8
5389(2): xor %edi,%edi
538b(2): xor %eax,%eax
538d(5): call 0xffffcb13(%rip)
5392(6): mov 0x206c98(%rip),%edi
5398(5): call 0xffffc7f8(%rip)
539d(2): mov (%rbx),%esi
539f(7): lea 0x3a48(%rip),%rdx
53a6(3): mov %rax,%rcx
53a9(2): xor %edi,%edi
53ab(2): xor %eax,%eax
53ad(5): call 0xffffcaf3(%rip)
53b2(2): jmp 0xffffffe0(%rip)

"last_component" :
53c0(3): movzx (%rdi),%edx
53c3(3): mov %rdi,%rax
53c6(3): cmp $0x2f,%dl
53c9(2): jnz 0x13(%rip)
53cb(5): nop 0x0(%rax,%rax,1)
53d0(4): add $0x1,%rax
53d4(3): movzx (%rax),%edx
53d7(3): cmp $0x2f,%dl
53da(2): jz 0xfffffff6(%rip)
53dc(2): test %dl,%dl
53de(2): jz 0x3c(%rip)
53e0(3): mov %rax,%rcx
53e3(2): xor %esi,%esi
53e5(2): jmp 0x20(%rip)
53e7(9): nop 0x0(%rax,%rax,1)
53f0(3): test %sil,%sil
53f3(2): jz 0x7(%rip)
53f5(3): mov %rcx,%rax
53f8(2): xor %esi,%esi
53fa(4): add $0x1,%rcx
53fe(3): movzx (%rcx),%edx
5401(2): test %dl,%dl
5403(2): jz 0x17(%rip)
5405(3): cmp $0x2f,%dl
5408(2): jnz 0xffffffe8(%rip)
540a(4): add $0x1,%rcx
540e(3): movzx (%rcx),%edx
5411(5): mov $0x1,%esi
5416(2): test %dl,%dl
5418(2): jnz 0xffffffed(%rip)
541a(2): REP ret near (%rsp)

"base_len" :
5420(1): push %rbx
5421(3): mov %rdi,%rbx
5424(5): call 0xffffc83c(%rip)
5429(4): cmp $0x1,%rax
542d(2): jbe 0xd(%rip)
542f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
5434(4): lea 0xffffffff(%rax),%rdx
5438(2): jz 0x10(%rip)
543a(1): pop %rbx
543b(1): ret near (%rsp)
543c(4): nop 0x0(%rax)
5440(3): mov %rax,%rdx
5443(5): nop 0x0(%rax,%rax,1)
5448(4): cmp $0x1,%rdx
544c(2): jz 0x14(%rip)
544e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
5453(4): lea 0xffffffff(%rdx),%rax
5457(2): jz 0xffffffe9(%rip)
5459(3): mov %rdx,%rax
545c(1): pop %rbx
545d(1): ret near (%rsp)
545e(2): nop 
5460(5): mov $0x1,%eax
5465(1): pop %rbx
5466(1): ret near (%rsp)

"open_safer" :
5470(4): sub $0x58,%rsp
5474(5): mov %rdx,0x30(%rsp)
5479(2): xor %edx,%edx
547b(9): mov $0x28,%rax
5484(5): mov %rax,0x18(%rsp)
5489(2): xor %eax,%eax
548b(4): test $0x40,%sil
548f(2): jnz 0x29(%rip)
5491(2): xor %eax,%eax
5493(5): call 0xffffca3d(%rip)
5498(2): mov %eax,%edi
549a(5): call 0x1f66(%rip)
549f(5): mov 0x18(%rsp),%rcx
54a4(9): xor $0x28,%rcx
54ad(2): jnz 0x2c(%rip)
54af(4): add $0x58,%rsp
54b3(1): ret near (%rsp)
54b4(4): nop 0x0(%rax)
54b8(5): lea 0x60(%rsp),%rax
54bd(7): mov $0x10,(%rsp)
54c4(4): mov 0x30(%rsp),%edx
54c8(5): mov %rax,0x8(%rsp)
54cd(5): lea 0x20(%rsp),%rax
54d2(5): mov %rax,0x10(%rsp)
54d7(2): jmp 0xffffffba(%rip)
54d9(5): call 0xffffc797(%rip)

"fd_reopen" :
54e0(2): push %r13
54e2(2): push %r12
54e4(2): xor %eax,%eax
54e6(1): push %rbp
54e7(1): push %rbx
54e8(2): mov %edi,%ebp
54ea(3): mov %rsi,%rdi
54ed(2): mov %edx,%esi
54ef(2): mov %ecx,%edx
54f1(4): sub $0x8,%rsp
54f5(5): call 0xffffc9db(%rip)
54fa(2): cmp %eax,%ebp
54fc(2): mov %eax,%ebx
54fe(2): jz 0x2b(%rip)
5500(2): test %eax,%eax
5502(2): js 0x27(%rip)
5504(2): mov %ebp,%esi
5506(2): mov %eax,%edi
5508(5): call 0xffffc798(%rip)
550d(3): mov %eax,%r12d
5510(5): call 0xffffc660(%rip)
5515(3): mov (%rax),%r13d
5518(3): mov %rax,%rbp
551b(2): mov %ebx,%edi
551d(5): call 0xffffc803(%rip)
5522(3): mov %r12d,%ebx
5525(4): mov %r13d,0x0(%rbp)
5529(4): add $0x8,%rsp
552d(2): mov %ebx,%eax
552f(1): pop %rbx
5530(1): pop %rbp
5531(2): pop %r12
5533(2): pop %r13
5535(1): ret near (%rsp)

"full_write" :
5540(2): push %r13
5542(2): push %r12
5544(1): push %rbp
5545(1): push %rbx
5546(4): sub $0x8,%rsp
554a(3): test %rdx,%rdx
554d(2): jz 0x64(%rip)
554f(3): mov %edi,%r13d
5552(3): mov %rsi,%rbp
5555(3): mov %rdx,%rbx
5558(3): xor %r12d,%r12d
555b(2): jmp 0x15(%rip)
555d(3): nop (%rax)
5560(3): test %rax,%rax
5563(2): jz 0x35(%rip)
5565(3): add %rax,%r12
5568(3): add %rax,%rbp
556b(3): sub %rax,%rbx
556e(2): jz 0x16(%rip)
5570(3): mov %rbx,%rdx
5573(3): mov %rbp,%rsi
5576(3): mov %r13d,%edi
5579(5): call 0x1e27(%rip)
557e(4): cmp $0xffffffff,%rax
5582(2): jnz 0xffffffde(%rip)
5584(4): add $0x8,%rsp
5588(3): mov %r12,%rax
558b(1): pop %rbx
558c(1): pop %rbp
558d(2): pop %r12
558f(2): pop %r13
5591(1): ret near (%rsp)
5592(6): nop 0x0(%rax,%rax,1)
5598(5): call 0xffffc5d8(%rip)
559d(6): mov $0x1c,(%rax)
55a3(4): add $0x8,%rsp
55a7(3): mov %r12,%rax
55aa(1): pop %rbx
55ab(1): pop %rbp
55ac(2): pop %r12
55ae(2): pop %r13
55b0(1): ret near (%rsp)
55b1(3): xor %r12d,%r12d
55b4(2): jmp 0xffffffd0(%rip)

"umaxtostr" :
55c0(4): lea 0x14(%rsi),%rcx
55c4(4): mov $0x0,0x14(%rsi)
55c8(a): mov $0x-3689348814741910323,%rsi
55d2(6): nop 0x0(%rax,%rax,1)
55d8(3): mov %rdi,%rax
55db(4): sub $0x1,%rcx
55df(3): mul %rax,%rsi,%rdx
55e2(4): shr $0x3,%rdx
55e6(4): lea 0x0(%rdx,%rdx,4),%rax
55ea(3): add %rax,%rax
55ed(3): sub %rax,%rdi
55f0(3): add $0x30,%edi
55f3(3): test %rdx,%rdx
55f6(3): mov %dil,(%rcx)
55f9(3): mov %rdx,%rdi
55fc(2): jnz 0xffffffdc(%rip)
55fe(3): mov %rcx,%rax
5601(1): ret near (%rsp)

"set_program_name" :
5610(3): test %rdi,%rdi
5613(1): push %rbx
5614(2): jz 0x79(%rip)
5616(5): mov $0x2f,%esi
561b(3): mov %rdi,%rbx
561e(5): call 0xffffc6a2(%rip)
5623(3): test %rax,%rax
5626(2): jz 0x57(%rip)
5628(4): lea 0x1(%rax),%r8
562c(3): mov %r8,%rdx
562f(3): sub %rbx,%rdx
5632(4): cmp $0x6,%rdx
5636(2): jle 0x47(%rip)
5638(4): lea 0xfffffffa(%rax),%rsi
563c(7): lea 0x45c5(%rip),%rdi
5643(5): mov $0x7,%ecx
5648(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
564a(3): setnbe %dl
564d(3): sbb $0x0,%dl
5650(2): test %dl,%dl
5652(2): jnz 0x2b(%rip)
5654(7): lea 0x45b5(%rip),%rdi
565b(5): mov $0x3,%ecx
5660(3): mov %r8,%rsi
5663(3): mov %r8,%rbx
5666(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5668(3): setnbe %dl
566b(3): sbb $0x0,%dl
566e(2): test %dl,%dl
5670(2): jnz 0xd(%rip)
5672(4): lea 0x4(%rax),%rbx
5676(7): mov %rbx,0x206be3(%rip)
567d(7): mov %rbx,0x206e94(%rip)
5684(7): mov %rbx,0x206bf5(%rip)
568b(1): pop %rbx
568c(1): ret near (%rsp)
568d(7): mov 0x206c0c(%rip),%rcx
5694(7): lea 0x4535(%rip),%rdi
569b(5): mov $0x37,%edx
56a0(5): mov $0x1,%esi
56a5(5): call 0xffffc88b(%rip)
56aa(5): call 0xffffc4b6(%rip)

"gettext_quote.part.1" :
56b0(1): push %rbp
56b1(1): push %rbx
56b2(3): mov %rdi,%rbp
56b5(2): mov %esi,%ebx
56b7(4): sub $0x8,%rsp
56bb(5): call 0x3085(%rip)
56c0(3): movzx (%rax),%edx
56c3(3): and $0xdf,%edx
56c6(3): cmp $0x55,%dl
56c9(2): jz 0x77(%rip)
56cb(3): cmp $0x47,%dl
56ce(2): jz 0x22(%rip)
56d0(7): lea 0x454c(%rip),%rax
56d7(7): lea 0x4547(%rip),%rdx
56de(3): cmp $0x9,%ebx
56e1(4): cmovne %rdx,%rax
56e5(4): add $0x8,%rsp
56e9(1): pop %rbx
56ea(1): pop %rbp
56eb(1): ret near (%rsp)
56ec(4): nop 0x0(%rax)
56f0(4): movzx 0x1(%rax),%edx
56f4(3): and $0xdf,%edx
56f7(3): cmp $0x42,%dl
56fa(2): jnz 0xffffffd6(%rip)
56fc(4): cmp $0x31,0x2(%rax)
5700(2): jnz 0xffffffd0(%rip)
5702(4): cmp $0x38,0x3(%rax)
5706(2): jnz 0xffffffca(%rip)
5708(4): cmp $0x30,0x4(%rax)
570c(2): jnz 0xffffffc4(%rip)
570e(4): cmp $0x33,0x5(%rax)
5712(2): jnz 0xffffffbe(%rip)
5714(4): cmp $0x30,0x6(%rax)
5718(2): jnz 0xffffffb8(%rip)
571a(4): cmp $0x0,0x7(%rax)
571e(2): jnz 0xffffffb2(%rip)
5720(4): cmp $0x60,0x0(%rbp)
5724(7): lea 0x44f1(%rip),%rax
572b(7): lea 0x44ee(%rip),%rdx
5732(4): cmovne %rdx,%rax
5736(4): add $0x8,%rsp
573a(1): pop %rbx
573b(1): pop %rbp
573c(1): ret near (%rsp)
573d(3): nop (%rax)
5740(4): movzx 0x1(%rax),%edx
5744(3): and $0xdf,%edx
5747(3): cmp $0x54,%dl
574a(2): jnz 0xffffff86(%rip)
574c(4): movzx 0x2(%rax),%edx
5750(3): and $0xdf,%edx
5753(3): cmp $0x46,%dl
5756(6): jnz 0xffffff7a(%rip)
575c(4): cmp $0x2d,0x3(%rax)
5760(6): jnz 0xffffff70(%rip)
5766(4): cmp $0x38,0x4(%rax)
576a(6): jnz 0xffffff66(%rip)
5770(4): cmp $0x0,0x5(%rax)
5774(6): jnz 0xffffff5c(%rip)
577a(4): cmp $0x60,0x0(%rbp)
577e(7): lea 0x448f(%rip),%rax
5785(7): lea 0x448c(%rip),%rdx
578c(4): cmovne %rdx,%rax
5790(4): add $0x8,%rsp
5794(1): pop %rbx
5795(1): pop %rbp
5796(1): ret near (%rsp)

"quotearg_buffer_restyled" :
57a0(2): push %r15
57a2(2): push %r14
57a4(3): mov %r8d,%r15d
57a7(2): push %r13
57a9(2): push %r12
57ab(3): mov %rdi,%r14
57ae(1): push %rbp
57af(1): push %rbx
57b0(3): mov %r9d,%ebx
57b3(3): mov %rsi,%r13
57b6(3): mov %rcx,%rbp
57b9(3): and $0x2,%ebx
57bc(7): sub $0xb8,%rsp
57c3(8): mov 0xf0(%rsp),%rax
57cb(5): mov %rdx,0x10(%rsp)
57d0(5): mov %r8d,0x8(%rsp)
57d5(5): mov %r9d,0x78(%rsp)
57da(5): mov %rax,0x20(%rsp)
57df(8): mov 0xf8(%rsp),%rax
57e7(5): mov %rax,0x68(%rsp)
57ec(8): mov 0x100(%rsp),%rax
57f4(5): mov %rax,0x60(%rsp)
57f9(9): mov $0x28,%rax
5802(8): mov %rax,0xa8(%rsp)
580a(2): xor %eax,%eax
580c(5): call 0xffffc444(%rip)
5811(4): cmp $0xa,%r15d
5815(5): mov %rax,0x58(%rsp)
581a(6): jnbe 0x11b5(%rip)
5820(7): lea 0x4459(%rip),%rcx
5827(3): mov %r15d,%edx
582a(4): movsxd 0x0(%rcx,%rdx,4),%rax
582e(3): add %rcx,%rax
5831(2): jmp %rax
5833(5): mov $0x1,0xe(%rsp)
5838(5): mov $0x0,0x7c(%rsp)
583d(3): xor %r12d,%r12d
5840(9): mov $0x0,0x50(%rsp)
5849(5): mov $0x1,0xf(%rsp)
584e(5): mov $0x0,0xd(%rsp)
5853(7): lea 0x43cb(%rip),%rax
585a(9): mov $0x1,0x18(%rsp)
5863(3): xor %r15d,%r15d
5866(8): mov $0x2,0x8(%rsp)
586e(5): mov %rax,0x48(%rsp)
5873(3): xor %r11d,%r11d
5876(3): mov %rbp,%rax
5879(3): mov %r12d,%r8d
587c(3): mov %r11,%rbp
587f(3): mov %rax,%r11
5882(6): nop 0x0(%rax,%rax,1)
5888(3): cmp %rbp,%r11
588b(4): setnz %r12b
588f(4): cmp $0xffffffff,%r11
5893(2): jnz 0xf(%rip)
5895(5): mov 0x10(%rsp),%rax
589a(4): cmp $0x0,0x0(%rax,%rbp,1)
589e(4): setnz %r12b
58a2(3): test %r12b,%r12b
58a5(6): jz 0x65b(%rip)
58ab(5): cmp $0x2,0x8(%rsp)
58b0(5): mov 0x10(%rsp),%rdi
58b5(4): lea 0x0(%rdi,%rbp,1),%r9
58b9(3): setnz %al
58bc(4): and 0xd(%rsp),%al
58c0(3): mov %eax,%r10d
58c3(6): jz 0xad(%rip)
58c9(5): mov 0x18(%rsp),%rax
58ce(3): test %rax,%rax
58d1(6): jz 0x42f(%rip)
58d7(4): cmp $0xffffffff,%r11
58db(5): lea 0x0(%rbp,%rax,1),%rbx
58e0(2): jnz 0x30(%rip)
58e2(4): cmp $0x1,%rax
58e6(2): jbe 0x2a(%rip)
58e8(5): mov %r8b,0x38(%rsp)
58ed(5): mov %r10b,0x30(%rsp)
58f2(5): mov %r9,0x28(%rsp)
58f7(5): call 0xffffc369(%rip)
58fc(6): movzx 0x38(%rsp),%r8d
5902(6): movzx 0x30(%rsp),%r10d
5908(3): mov %rax,%r11
590b(5): mov 0x28(%rsp),%r9
5910(3): cmp %r11,%rbx
5913(5): mov %r10b,0x28(%rsp)
5918(6): jnbe 0x5b8(%rip)
591e(5): mov 0x18(%rsp),%rdx
5923(5): mov 0x48(%rsp),%rsi
5928(3): mov %r9,%rdi
592b(5): mov %r11,0x40(%rsp)
5930(5): mov %r8b,0x38(%rsp)
5935(5): mov %r9,0x30(%rsp)
593a(5): call 0xffffc436(%rip)
593f(2): test %eax,%eax
5941(5): mov 0x30(%rsp),%r9
5946(6): movzx 0x38(%rsp),%r8d
594c(5): mov 0x40(%rsp),%r11
5951(6): jnz 0x57f(%rip)
5957(5): cmp $0x0,0xf(%rsp)
595c(6): movzx 0x28(%rsp),%r10d
5962(6): jnz 0xf83(%rip)
5968(8): nop 0x0(%rax,%rax,1)
5970(4): movzx (%r9),%ebx
5974(3): cmp $0x7e,%bl
5977(6): jnbe 0x321(%rip)
597d(7): lea 0x4328(%rip),%rcx
5984(3): movzx %bl,%edx
5987(4): movsxd 0x0(%rcx,%rdx,4),%rax
598b(3): add %rcx,%rax
598e(2): jmp %rax
5990(3): xor %r10d,%r10d
5993(4): cmp $0x1,%r11
5997(3): setnz %al
599a(4): cmp $0xffffffff,%r11
599e(2): jnz 0xe(%rip)
59a0(5): mov 0x10(%rsp),%rax
59a5(4): cmp $0x0,0x1(%rax)
59a9(3): setnz %al
59ac(5): cmp $0x2,0x8(%rsp)
59b1(3): setz %dl
59b4(2): test %al,%al
59b6(6): jz 0x252(%rip)
59bc(3): xor %r12d,%r12d
59bf(2): xor %eax,%eax
59c1(7): nop 0x0(%rax)
59c8(5): cmp $0x1,0xd(%rsp)
59cd(6): jnz 0x115(%rip)
59d3(2): test %dl,%dl
59d5(6): jnz 0x10d(%rip)
59db(5): mov 0x20(%rsp),%rsi
59e0(3): test %rsi,%rsi
59e3(2): jz 0x16(%rip)
59e5(2): mov %ebx,%edx
59e7(3): shr $0x5,%dl
59ea(3): movzx %dl,%edx
59ed(3): mov 0x0(%rsi,%rdx,4),%edx
59f0(3): bt %ebx,%edx
59f3(6): jb 0x150(%rip)
59f9(3): test %r10b,%r10b
59fc(6): jnz 0x147(%rip)
5a02(3): xor $0x1,%eax
5a05(4): add $0x1,%rbp
5a09(3): and %r8d,%eax
5a0c(2): test %al,%al
5a0e(2): jz 0x22(%rip)
5a10(3): cmp %r15,%r13
5a13(2): jbe 0x7(%rip)
5a15(5): mov $0x27,0x0(%r14,%r15,1)
5a1a(4): lea 0x1(%r15),%rax
5a1e(3): cmp %rax,%r13
5a21(2): jbe 0x8(%rip)
5a23(6): mov $0x27,0x1(%r14,%r15,1)
5a29(4): add $0x2,%r15
5a2d(3): xor %r8d,%r8d
5a30(3): cmp %r13,%r15
5a33(2): jnb 0x6(%rip)
5a35(4): mov %bl,0x0(%r14,%r15,1)
5a39(5): movzx 0xe(%rsp),%edi
5a3e(4): add $0x1,%r15
5a42(5): mov $0x0,%eax
5a47(3): test %r12b,%r12b
5a4a(3): cmove %eax,%edi
5a4d(5): mov %dil,0xe(%rsp)
5a52(5): jmp 0xfffffe36(%rip)
5a57(9): nop 0x0(%rax,%rax,1)
5a60(3): xor %r10d,%r10d
5a63(4): mov 0x8(%rsp),%eax
5a67(3): cmp $0x2,%eax
5a6a(6): jz 0x5be(%rip)
5a70(3): cmp $0x5,%eax
5a73(6): jz 0x575(%rip)
5a79(3): cmp $0x2,%eax
5a7c(5): mov $0x3f,%ebx
5a81(3): setz %dl
5a84(3): xor %r12d,%r12d
5a87(2): xor %eax,%eax
5a89(5): jmp 0xffffff3f(%rip)
5a8e(2): nop 
5a90(3): xor %r10d,%r10d
5a93(5): cmp $0x2,0x8(%rsp)
5a98(6): jz 0x508(%rip)
5a9e(5): mov %r12b,0x7c(%rsp)
5aa3(2): xor %edx,%edx
5aa5(2): xor %eax,%eax
5aa7(5): mov $0x27,%ebx
5aac(5): jmp 0xffffff1c(%rip)
5ab1(7): nop 0x0(%rax)
5ab8(5): mov $0x9,%edx
5abd(5): mov $0x74,%ebx
5ac2(5): cmp $0x2,0x8(%rsp)
5ac7(3): setz %al
5aca(4): and 0xf(%rsp),%al
5ace(6): jnz 0x150(%rip)
5ad4(5): cmp $0x0,0xd(%rsp)
5ad9(2): jnz 0x67(%rip)
5adb(2): mov %edx,%ebx
5add(3): xor %r12d,%r12d
5ae0(2): xor %eax,%eax
5ae2(5): cmp $0x0,0xf(%rsp)
5ae7(6): jnz 0xfffffef4(%rip)
5aed(5): jmp 0xffffff0c(%rip)
5af2(6): nop 0x0(%rax,%rax,1)
5af8(5): mov $0x8,%edx
5afd(5): mov $0x62,%ebx
5b02(2): jmp 0xffffffd2(%rip)
5b04(4): nop 0x0(%rax)
5b08(5): cmp $0x2,0x8(%rsp)
5b0d(6): jz 0x3d3(%rip)
5b13(5): cmp $0x0,0xd(%rsp)
5b18(6): jz 0x218(%rip)
5b1e(5): cmp $0x0,0xf(%rsp)
5b23(6): jz 0x20d(%rip)
5b29(6): cmp $0x0,0x18(%rsp)
5b2f(6): jnz 0x3bc(%rip)
5b35(5): mov $0x5c,%ebx
5b3a(6): nop 0x0(%rax,%rax,1)
5b40(3): xor %r12d,%r12d
5b43(5): cmp $0x2,0x8(%rsp)
5b48(3): setz %dl
5b4b(5): cmp $0x0,0xf(%rsp)
5b50(2): mov %edx,%eax
5b52(6): jnz 0x856(%rip)
5b58(3): mov %r8d,%eax
5b5b(3): xor $0x1,%eax
5b5e(2): and %dl,%al
5b60(2): jz 0x31(%rip)
5b62(3): cmp %r15,%r13
5b65(2): jbe 0x7(%rip)
5b67(5): mov $0x27,0x0(%r14,%r15,1)
5b6c(4): lea 0x1(%r15),%rdx
5b70(3): cmp %rdx,%r13
5b73(2): jbe 0x8(%rip)
5b75(6): mov $0x24,0x1(%r14,%r15,1)
5b7b(4): lea 0x2(%r15),%rdx
5b7f(3): cmp %rdx,%r13
5b82(2): jbe 0x8(%rip)
5b84(6): mov $0x27,0x2(%r14,%r15,1)
5b8a(4): add $0x3,%r15
5b8e(3): mov %eax,%r8d
5b91(3): cmp %r15,%r13
5b94(2): jbe 0x7(%rip)
5b96(5): mov $0x5c,0x0(%r14,%r15,1)
5b9b(4): add $0x1,%r15
5b9f(4): add $0x1,%rbp
5ba3(5): jmp 0xfffffe8d(%rip)
5ba8(8): nop 0x0(%rax,%rax,1)
5bb0(5): cmp $0x0,0xd(%rsp)
5bb5(6): jnz 0x1ce(%rip)
5bbb(2): xor %edx,%edx
5bbd(5): test $0x1,0x78(%rsp)
5bc2(6): jz 0xffffff19(%rip)
5bc8(4): add $0x1,%rbp
5bcc(5): jmp 0xfffffcbc(%rip)
5bd1(7): nop 0x0(%rax)
5bd8(5): cmp $0x2,0x8(%rsp)
5bdd(3): setz %dl
5be0(2): xor %eax,%eax
5be2(5): jmp 0xfffffde6(%rip)
5be7(9): nop 0x0(%rax,%rax,1)
5bf0(5): mov $0x7,%edx
5bf5(5): mov $0x61,%ebx
5bfa(5): jmp 0xfffffeda(%rip)
5bff(1): nop 
5c00(5): cmp $0x2,0x8(%rsp)
5c05(3): setz %dl
5c08(3): test %rbp,%rbp
5c0b(6): jnz 0xfffffdb1(%rip)
5c11(5): movzx 0xf(%rsp),%eax
5c16(2): and %dl,%al
5c18(6): jz 0xfffffdb0(%rip)
5c1e(3): mov %r11,%rbp
5c21(8): mov $0x2,0x8(%rsp)
5c29(5): jmp 0x700(%rip)
5c2e(2): nop 
5c30(5): cmp $0x2,0x8(%rsp)
5c35(3): setz %dl
5c38(3): xor %r12d,%r12d
5c3b(2): jmp 0xffffffd6(%rip)
5c3d(3): nop (%rax)
5c40(5): cmp $0x2,0x8(%rsp)
5c45(5): mov $0x20,%ebx
5c4a(3): setz %dl
5c4d(2): jmp 0xffffffc4(%rip)
5c4f(1): nop 
5c50(5): mov $0xd,%edx
5c55(5): mov $0x72,%ebx
5c5a(5): jmp 0xfffffe68(%rip)
5c5f(1): nop 
5c60(5): mov $0xc,%edx
5c65(5): mov $0x66,%ebx
5c6a(5): jmp 0xfffffe6a(%rip)
5c6f(1): nop 
5c70(5): mov $0xb,%edx
5c75(5): mov $0x76,%ebx
5c7a(5): jmp 0xfffffe5a(%rip)
5c7f(1): nop 
5c80(5): mov $0xa,%edx
5c85(5): mov $0x6e,%ebx
5c8a(5): jmp 0xfffffe38(%rip)
5c8f(1): nop 
5c90(3): xor %r10d,%r10d
5c93(5): nop 0x0(%rax,%rax,1)
5c98(6): cmp $0x1,0x58(%rsp)
5c9e(6): jnz 0x3aa(%rip)
5ca4(5): mov %r11,0x38(%rsp)
5ca9(5): mov %r8b,0x30(%rsp)
5cae(5): mov %r10b,0x28(%rsp)
5cb3(5): call 0xffffc2fd(%rip)
5cb8(3): mov (%rax),%rcx
5cbb(3): movzx %bl,%edx
5cbe(6): movzx 0x28(%rsp),%r10d
5cc4(6): movzx 0x30(%rsp),%r8d
5cca(5): mov 0x38(%rsp),%r11
5ccf(5): mov $0x1,%edi
5cd4(4): movzx 0x0(%rcx,%rdx,2),%eax
5cd8(4): and $0x4000,%ax
5cdc(4): setnz %r12b
5ce0(3): setz %al
5ce3(4): and 0xd(%rsp),%al
5ce7(2): test %al,%al
5ce9(6): jnz 0x998(%rip)
5cef(5): cmp $0x2,0x8(%rsp)
5cf4(3): setz %dl
5cf7(5): jmp 0xfffffcd1(%rip)
5cfc(4): nop 0x0(%rax)
5d00(4): movzx (%r9),%ebx
5d04(3): cmp $0x7e,%bl
5d07(2): jnbe 0xffffff89(%rip)
5d09(7): lea 0x4198(%rip),%rcx
5d10(3): movzx %bl,%edx
5d13(4): movsxd 0x0(%rcx,%rdx,4),%rax
5d17(3): add %rcx,%rax
5d1a(2): jmp %rax
5d1c(4): nop 0x0(%rax)
5d20(3): xor %r10d,%r10d
5d23(5): cmp $0x0,0xd(%rsp)
5d28(6): jnz 0xfffffdf6(%rip)
5d2e(2): nop 
5d30(5): mov $0x5c,%edx
5d35(5): mov $0x5c,%ebx
5d3a(5): jmp 0xfffffd9a(%rip)
5d3f(1): nop 
5d40(5): mov $0xc,%edx
5d45(3): xor %r10d,%r10d
5d48(5): mov $0x66,%ebx
5d4d(5): jmp 0xfffffd87(%rip)
5d52(6): nop 0x0(%rax,%rax,1)
5d58(5): mov $0xa,%edx
5d5d(3): xor %r10d,%r10d
5d60(5): mov $0x6e,%ebx
5d65(5): jmp 0xfffffd5d(%rip)
5d6a(6): nop 0x0(%rax,%rax,1)
5d70(5): mov $0x61,%ebx
5d75(5): jmp 0xfffffdcb(%rip)
5d7a(6): nop 0x0(%rax,%rax,1)
5d80(3): xor %r10d,%r10d
5d83(5): cmp $0x2,0x8(%rsp)
5d88(3): setz %dl
5d8b(5): cmp $0x0,0xf(%rsp)
5d90(6): jnz 0xb9a(%rip)
5d96(3): mov %r8d,%eax
5d99(3): mov %r15,%rcx
5d9c(3): xor $0x1,%eax
5d9f(2): and %dl,%al
5da1(2): jz 0x2f(%rip)
5da3(3): cmp %r15,%r13
5da6(2): jbe 0x7(%rip)
5da8(5): mov $0x27,0x0(%r14,%r15,1)
5dad(4): lea 0x1(%r15),%rcx
5db1(3): cmp %rcx,%r13
5db4(2): jbe 0x8(%rip)
5db6(6): mov $0x24,0x1(%r14,%r15,1)
5dbc(4): lea 0x2(%r15),%rcx
5dc0(3): cmp %rcx,%r13
5dc3(6): jnbe 0x636(%rip)
5dc9(4): lea 0x3(%r15),%rcx
5dcd(3): mov %eax,%r8d
5dd0(3): cmp %rcx,%r13
5dd3(2): jbe 0x7(%rip)
5dd5(5): mov $0x5c,0x0(%r14,%rcx,1)
5dda(5): cmp $0x2,0x8(%rsp)
5ddf(4): lea 0x1(%rcx),%r15
5de3(6): jz 0x606(%rip)
5de9(4): lea 0x1(%rbp),%rax
5ded(3): cmp %r11,%rax
5df0(2): jnb 0x1b(%rip)
5df2(5): mov 0x10(%rsp),%rax
5df7(5): movzx 0x1(%rax,%rbp,1),%eax
5dfc(4): mov %al,0x28(%rsp)
5e00(3): sub $0x30,%eax
5e03(2): cmp $0x9,%al
5e05(6): jbe 0x834(%rip)
5e0b(3): mov %r12d,%eax
5e0e(5): mov $0x30,%ebx
5e13(3): xor %r12d,%r12d
5e16(5): jmp 0xfffffbb2(%rip)
5e1b(5): nop 0x0(%rax,%rax,1)
5e20(5): cmp $0x2,0x8(%rsp)
5e25(3): mov %r10d,%r12d
5e28(3): setz %dl
5e2b(3): xor %r10d,%r10d
5e2e(2): xor %eax,%eax
5e30(5): jmp 0xfffffb98(%rip)
5e35(3): nop (%rax)
5e38(5): cmp $0x2,0x8(%rsp)
5e3d(3): setz %dl
5e40(3): xor %r10d,%r10d
5e43(5): jmp 0xfffffdc5(%rip)
5e48(8): nop 0x0(%rax,%rax,1)
5e50(5): cmp $0x2,0x8(%rsp)
5e55(3): setz %dl
5e58(3): xor %r10d,%r10d
5e5b(3): xor %r12d,%r12d
5e5e(5): jmp 0xfffffdb3(%rip)
5e63(5): nop 0x0(%rax,%rax,1)
5e68(5): cmp $0x2,0x8(%rsp)
5e6d(3): mov %r10d,%r12d
5e70(5): mov $0x20,%ebx
5e75(3): setz %dl
5e78(3): xor %r10d,%r10d
5e7b(5): jmp 0xfffffd96(%rip)
5e80(5): mov $0xd,%edx
5e85(3): xor %r10d,%r10d
5e88(5): mov $0x72,%ebx
5e8d(5): jmp 0xfffffc35(%rip)
5e92(6): nop 0x0(%rax,%rax,1)
5e98(5): mov $0x76,%ebx
5e9d(5): jmp 0xfffffca3(%rip)
5ea2(6): nop 0x0(%rax,%rax,1)
5ea8(5): mov $0x9,%edx
5ead(3): xor %r10d,%r10d
5eb0(5): mov $0x74,%ebx
5eb5(5): jmp 0xfffffc0d(%rip)
5eba(6): nop 0x0(%rax,%rax,1)
5ec0(5): mov $0x62,%ebx
5ec5(5): jmp 0xfffffc7b(%rip)
5eca(6): nop 0x0(%rax,%rax,1)
5ed0(3): xor %r10d,%r10d
5ed3(5): jmp 0xfffffa9d(%rip)
5ed8(8): nop 0x0(%rax,%rax,1)
5ee0(5): cmp $0x0,0xf(%rsp)
5ee5(6): jnz 0x96b(%rip)
5eeb(4): add $0x1,%rbp
5eef(3): mov %r8d,%eax
5ef2(3): xor %r12d,%r12d
5ef5(5): mov $0x5c,%ebx
5efa(5): jmp 0xfffffb12(%rip)
5eff(1): nop 
5f00(5): cmp $0x2,0x8(%rsp)
5f05(5): movzx 0xf(%rsp),%ebx
5f0a(3): mov %r8d,%r12d
5f0d(3): mov %r11,%rbp
5f10(3): setz %dl
5f13(2): mov %ebx,%eax
5f15(3): test %r15,%r15
5f18(3): setz %cl
5f1b(2): and %edx,%eax
5f1d(2): and %cl,%al
5f1f(6): jnz 0xa67(%rip)
5f25(2): mov %ebx,%eax
5f27(3): xor $0x1,%eax
5f2a(2): and %al,%dl
5f2c(6): jz 0x970(%rip)
5f32(5): cmp $0x0,0x7c(%rsp)
5f37(6): jz 0x963(%rip)
5f3d(5): cmp $0x0,0xe(%rsp)
5f42(6): jnz 0x9fb(%rip)
5f48(3): test %r13,%r13
5f4b(3): setz %al
5f4e(6): cmp $0x0,0x50(%rsp)
5f54(3): setnz %dl
5f57(2): and %dl,%al
5f59(6): jz 0xa23(%rip)
5f5f(5): mov 0x50(%rsp),%r13
5f64(7): lea 0x3cba(%rip),%rbx
5f6b(4): mov $0x27,(%r14)
5f6f(8): mov $0x2,0x8(%rsp)
5f77(6): mov $0x1,%r15d
5f7d(9): mov $0x1,0x18(%rsp)
5f86(5): mov $0x0,0xf(%rsp)
5f8b(5): mov %rbx,0x48(%rsp)
5f90(4): mov %al,0x7c(%rsp)
5f94(5): jmp 0xfffff8df(%rip)
5f99(7): nop 0x0(%rax)
5fa0(5): cmp $0x0,0xf(%rsp)
5fa5(6): jnz 0x8ab(%rip)
5fab(3): test %r13,%r13
5fae(6): jz 0x402(%rip)
5fb4(2): xor %edx,%edx
5fb6(6): cmp $0x0,0x50(%rsp)
5fbc(6): jnz 0x3f4(%rip)
5fc2(5): mov %r13,0x50(%rsp)
5fc7(4): add $0x3,%r15
5fcb(2): xor %eax,%eax
5fcd(5): mov %r12b,0x7c(%rsp)
5fd2(3): xor %r8d,%r8d
5fd5(3): mov %rdx,%r13
5fd8(5): mov $0x27,%ebx
5fdd(5): jmp 0xfffffa1c(%rip)
5fe2(6): nop 0x0(%rax,%rax,1)
5fe8(5): test $0x4,0x78(%rsp)
5fed(2): jz 0x23(%rip)
5fef(4): lea 0x2(%rbp),%rcx
5ff3(3): cmp %r11,%rcx
5ff6(2): jnb 0x1a(%rip)
5ff8(5): mov 0x10(%rsp),%rax
5ffd(5): cmp $0x3f,0x1(%rax,%rbp,1)
6002(6): jz 0x790(%rip)
6008(8): nop 0x0(%rax,%rax,1)
6010(2): xor %edx,%edx
6012(3): xor %r12d,%r12d
6015(2): xor %eax,%eax
6017(5): mov $0x3f,%ebx
601c(5): jmp 0xfffff9ac(%rip)
6021(7): nop 0x0(%rax)
6028(5): cmp $0x0,0xf(%rsp)
602d(6): jnz 0x823(%rip)
6033(3): xor %r12d,%r12d
6036(2): xor %eax,%eax
6038(5): mov $0x3f,%ebx
603d(5): jmp 0xfffff9bc(%rip)
6042(6): nop 0x0(%rax,%rax,1)
6048(8): lea 0xa0(%rsp),%rax
6050(4): cmp $0xffffffff,%r11
6054(c): mov $0x0,0xa0(%rsp)
6060(5): mov %rax,0x28(%rsp)
6065(2): jnz 0x2f(%rip)
6067(5): mov 0x10(%rsp),%rdi
606c(5): mov %r8b,0x40(%rsp)
6071(5): mov %r10b,0x38(%rsp)
6076(5): mov %r9,0x30(%rsp)
607b(5): call 0xffffbbe5(%rip)
6080(6): movzx 0x40(%rsp),%r8d
6086(6): movzx 0x38(%rsp),%r10d
608c(3): mov %rax,%r11
608f(5): mov 0x30(%rsp),%r9
6094(8): lea 0x9c(%rsp),%rax
609c(2): xor %ecx,%ecx
609e(4): mov %bl,0x7e(%rsp)
60a2(5): mov %r8b,0x7d(%rsp)
60a7(3): mov %rcx,%rbx
60aa(8): mov %r9,0x88(%rsp)
60b2(5): mov %rax,0x38(%rsp)
60b7(5): mov %r10b,0x7f(%rsp)
60bc(8): mov %r15,0x80(%rsp)
60c4(5): mov %r14,0x40(%rsp)
60c9(5): mov %r13,0x70(%rsp)
60ce(5): mov %r11,0x30(%rsp)
60d3(5): mov 0x10(%rsp),%rax
60d8(5): lea 0x0(%rbp,%rbx,1),%r14
60dd(5): mov 0x30(%rsp),%rdx
60e2(5): mov 0x28(%rsp),%rcx
60e7(5): mov 0x38(%rsp),%rdi
60ec(4): lea 0x0(%rax,%r14,1),%r13
60f0(3): sub %r14,%rdx
60f3(3): mov %r13,%rsi
60f6(5): call 0x226a(%rip)
60fb(3): test %rax,%rax
60fe(3): mov %rax,%r15
6101(2): jz 0x50(%rip)
6103(4): cmp $0xffffffff,%rax
6107(6): jz 0x61e(%rip)
610d(4): cmp $0xfffffffe,%rax
6111(6): jz 0x5a0(%rip)
6117(5): cmp $0x2,0x8(%rsp)
611c(3): setz %al
611f(4): and 0xf(%rsp),%al
6123(6): jnz 0x19d(%rip)
6129(7): mov 0x9c(%rsp),%edi
6130(5): call 0xffffbe50(%rip)
6135(5): mov 0x28(%rsp),%rdi
613a(2): test %eax,%eax
613c(5): mov $0x0,%eax
6141(4): cmove %eax,%r12d
6145(3): add %r15,%rbx
6148(5): call 0xffffbe18(%rip)
614d(2): test %eax,%eax
614f(2): jz 0xffffff84(%rip)
6151(3): mov %r12d,%edx
6154(3): mov %rbx,%rdi
6157(6): movzx 0x7d(%rsp),%r8d
615d(3): xor $0x1,%edx
6160(5): movzx 0x7e(%rsp),%ebx
6165(6): movzx 0x7f(%rsp),%r10d
616b(4): and 0xd(%rsp),%dl
616f(8): mov 0x80(%rsp),%r15
6177(5): mov 0x40(%rsp),%r14
617c(5): mov 0x70(%rsp),%r13
6181(5): mov 0x30(%rsp),%r11
6186(4): cmp $0x1,%rdi
618a(6): jbe 0x601(%rip)
6190(3): mov %rdi,%rcx
6193(2): xor %esi,%esi
6195(6): movzx 0xf(%rsp),%r9d
619b(3): add %rbp,%rcx
619e(5): mov 0x10(%rsp),%rdi
61a3(5): jmp 0xbb(%rip)
61a8(8): nop 0x0(%rax,%rax,1)
61b0(5): cmp $0x2,0x8(%rsp)
61b5(3): setz %al
61b8(3): test %r9b,%r9b
61bb(6): jnz 0x4b5(%rip)
61c1(3): mov %r8d,%esi
61c4(3): xor $0x1,%esi
61c7(3): and %sil,%al
61ca(2): jz 0x31(%rip)
61cc(3): cmp %r15,%r13
61cf(2): jbe 0x7(%rip)
61d1(5): mov $0x27,0x0(%r14,%r15,1)
61d6(4): lea 0x1(%r15),%rsi
61da(3): cmp %rsi,%r13
61dd(2): jbe 0x8(%rip)
61df(6): mov $0x24,0x1(%r14,%r15,1)
61e5(4): lea 0x2(%r15),%rsi
61e9(3): cmp %rsi,%r13
61ec(2): jbe 0x8(%rip)
61ee(6): mov $0x27,0x2(%r14,%r15,1)
61f4(4): add $0x3,%r15
61f8(3): mov %eax,%r8d
61fb(3): cmp %r15,%r13
61fe(2): jbe 0x7(%rip)
6200(5): mov $0x5c,0x0(%r14,%r15,1)
6205(4): lea 0x1(%r15),%rax
6209(3): cmp %rax,%r13
620c(2): jbe 0xf(%rip)
620e(2): mov %ebx,%eax
6210(3): shr $0x6,%al
6213(3): add $0x30,%eax
6216(5): mov %al,0x1(%r14,%r15,1)
621b(4): lea 0x2(%r15),%rax
621f(3): cmp %rax,%r13
6222(2): jbe 0x12(%rip)
6224(2): mov %ebx,%eax
6226(3): shr $0x3,%al
6229(3): and $0x7,%eax
622c(3): add $0x30,%eax
622f(5): mov %al,0x2(%r14,%r15,1)
6234(3): and $0x7,%ebx
6237(4): add $0x1,%rbp
623b(4): add $0x3,%r15
623f(3): add $0x30,%ebx
6242(3): cmp %rcx,%rbp
6245(6): jnb 0xfffff7eb(%rip)
624b(2): mov %edx,%esi
624d(3): cmp %r15,%r13
6250(2): jbe 0x6(%rip)
6252(4): mov %bl,0x0(%r14,%r15,1)
6256(4): movzx 0x0(%rdi,%rbp,1),%ebx
625a(4): add $0x1,%r15
625e(2): test %dl,%dl
6260(6): jnz 0xffffff50(%rip)
6266(2): mov %esi,%eax
6268(3): xor $0x1,%eax
626b(3): and %r8d,%eax
626e(3): test %r10b,%r10b
6271(2): jz 0x10(%rip)
6273(3): cmp %r15,%r13
6276(2): jbe 0x7(%rip)
6278(5): mov $0x5c,0x0(%r14,%r15,1)
627d(4): add $0x1,%r15
6281(4): add $0x1,%rbp
6285(3): cmp %rcx,%rbp
6288(6): jnb 0xfffff784(%rip)
628e(2): test %al,%al
6290(6): jz 0x3fe(%rip)
6296(3): cmp %r15,%r13
6299(2): jbe 0x7(%rip)
629b(5): mov $0x27,0x0(%r14,%r15,1)
62a0(4): lea 0x1(%r15),%rax
62a4(3): cmp %rax,%r13
62a7(2): jbe 0x8(%rip)
62a9(6): mov $0x27,0x1(%r14,%r15,1)
62af(4): add $0x2,%r15
62b3(3): xor %r10d,%r10d
62b6(3): xor %r8d,%r8d
62b9(2): jmp 0xffffff94(%rip)
62bb(5): nop 0x0(%rax,%rax,1)
62c0(4): cmp $0x1,%r15
62c4(6): jz 0xfffffe65(%rip)
62ca(5): mov 0x10(%rsp),%rdi
62cf(4): lea 0x0(%rdi,%r15,1),%rcx
62d3(5): lea 0x1(%rdi,%r14,1),%rdx
62d8(4): lea 0x0(%rcx,%r14,1),%r8
62dc(2): jmp 0x11(%rip)
62de(2): nop 
62e0(4): add $0x1,%rdx
62e4(3): cmp %rdx,%r8
62e7(6): jz 0xfffffe42(%rip)
62ed(3): movzx (%rdx),%ecx
62f0(3): sub $0x5b,%ecx
62f3(3): cmp $0x21,%cl
62f6(2): jnbe 0xffffffea(%rip)
62f8(5): mov $0x1,%esi
62fd(3): shl/sal %cl,%rsi
6300(3): mov %rsi,%rcx
6303(a): mov $0x8589934635,%rsi
630d(3): test %rsi,%rcx
6310(2): jz 0xffffffd0(%rip)
6312(5): mov 0x40(%rsp),%r14
6317(5): mov 0x70(%rsp),%r13
631c(5): mov 0x30(%rsp),%rbp
6321(8): mov $0x2,0x8(%rsp)
6329(5): cmp $0x0,0xd(%rsp)
632e(2): jz 0x12(%rip)
6330(2): test %al,%al
6332(5): mov $0x4,%eax
6337(5): cmove 0x8(%rsp),%eax
633c(4): mov %eax,0x8(%rsp)
6340(4): sub $0x8,%rsp
6344(3): mov %rbp,%rcx
6347(3): mov %r13,%rsi
634a(4): push 0x68(%rsp)
634e(4): push 0x78(%rsp)
6352(3): mov %r14,%rdi
6355(2): push $0x0
6357(8): mov 0x98(%rsp),%r9d
635f(5): mov 0x28(%rsp),%r8d
6364(5): mov 0x30(%rsp),%rdx
6369(4): and $0xfd,%r9d
636d(5): call 0xfffff433(%rip)
6372(4): add $0x20,%rsp
6376(3): mov %rax,%r15
6379(8): mov 0xa8(%rsp),%rbx
6381(9): xor $0x28,%rbx
638a(3): mov %r15,%rax
638d(6): jnz 0x606(%rip)
6393(7): add $0xb8,%rsp
639a(1): pop %rbx
639b(1): pop %rbp
639c(2): pop %r12
639e(2): pop %r13
63a0(2): pop %r14
63a2(2): pop %r15
63a4(1): ret near (%rsp)
63a5(3): nop (%rax)
63a8(3): mov %r11,%rbp
63ab(5): jmp 0xffffff7e(%rip)
63b0(3): cmp %r15,%r13
63b3(2): jbe 0x7(%rip)
63b5(5): mov $0x27,0x0(%r14,%r15,1)
63ba(4): lea 0x1(%r15),%rax
63be(3): cmp %rax,%r13
63c1(2): jbe 0x8(%rip)
63c3(6): mov $0x5c,0x1(%r14,%r15,1)
63c9(4): lea 0x2(%r15),%rax
63cd(3): cmp %rax,%r13
63d0(6): jbe 0x5f2(%rip)
63d6(3): mov %r13,%rdx
63d9(6): mov $0x27,0x2(%r14,%r15,1)
63df(5): mov 0x50(%rsp),%r13
63e4(5): jmp 0xfffffbde(%rip)
63e9(3): mov %r12d,%eax
63ec(5): mov $0x30,%ebx
63f1(3): xor %r12d,%r12d
63f4(5): jmp 0xfffff605(%rip)
63f9(6): mov $0x27,0x2(%r14,%r15,1)
63ff(5): jmp 0xfffff9ca(%rip)
6404(2): test %ebx,%ebx
6406(6): jnz 0xfffff42d(%rip)
640c(5): mov $0x1,0xd(%rsp)
6411(3): test %r13,%r13
6414(6): jnz 0x596(%rip)
641a(7): lea 0x3804(%rip),%rax
6421(9): mov $0x0,0x50(%rsp)
642a(5): mov $0x1,0xe(%rsp)
642f(5): mov $0x0,0x7c(%rsp)
6434(3): xor %r12d,%r12d
6437(5): mov $0x0,0xf(%rsp)
643c(9): mov $0x1,0x18(%rsp)
6445(5): mov %rax,0x48(%rsp)
644a(6): mov $0x1,%r15d
6450(8): mov $0x2,0x8(%rsp)
6458(5): jmp 0xfffff41b(%rip)
645d(3): nop (%rax)
6460(2): test %ebx,%ebx
6462(6): jnz 0x3fb(%rip)
6468(3): test %r13,%r13
646b(6): jz 0x22b(%rip)
6471(4): mov $0x22,(%r14)
6475(5): mov $0x1,0xe(%rsp)
647a(3): xor %r12d,%r12d
647d(5): mov $0x0,0x7c(%rsp)
6482(9): mov $0x0,0x50(%rsp)
648b(7): lea 0x3791(%rip),%rax
6492(5): mov $0x0,0xf(%rsp)
6497(5): mov $0x1,0xd(%rsp)
649c(9): mov $0x1,0x18(%rsp)
64a5(6): mov $0x1,%r15d
64ab(5): mov %rax,0x48(%rsp)
64b0(5): jmp 0xfffff3c3(%rip)
64b5(7): lea 0x3767(%rip),%rax
64bc(5): mov $0x1,0xe(%rsp)
64c1(5): mov $0x0,0x7c(%rsp)
64c6(3): xor %r12d,%r12d
64c9(9): mov $0x0,0x50(%rsp)
64d2(5): mov $0x1,0xf(%rsp)
64d7(5): mov $0x1,0xd(%rsp)
64dc(9): mov $0x1,0x18(%rsp)
64e5(3): xor %r15d,%r15d
64e8(5): mov %rax,0x48(%rsp)
64ed(8): mov $0x5,0x8(%rsp)
64f5(5): jmp 0xfffff37e(%rip)
64fa(5): mov $0x1,0xe(%rsp)
64ff(5): mov $0x0,0x7c(%rsp)
6504(3): xor %r12d,%r12d
6507(9): mov $0x0,0x50(%rsp)
6510(5): mov $0x0,0xf(%rsp)
6515(3): xor %r15d,%r15d
6518(5): mov $0x1,0xd(%rsp)
651d(9): mov $0x0,0x18(%rsp)
6526(9): mov $0x0,0x48(%rsp)
652f(5): jmp 0xfffff344(%rip)
6534(5): cmp $0xa,0x8(%rsp)
6539(2): jz 0x58(%rip)
653b(7): lea 0x36e5(%rip),%rsi
6542(2): xor %edi,%edi
6544(5): mov $0x5,%edx
6549(5): call 0xffffb6f7(%rip)
654e(3): mov %rax,%rcx
6551(5): mov %rax,0x68(%rsp)
6556(7): lea 0x36ca(%rip),%rax
655d(3): cmp %rax,%rcx
6560(6): jz 0x39e(%rip)
6566(7): lea 0x36b8(%rip),%rsi
656d(2): xor %edi,%edi
656f(5): mov $0x5,%edx
6574(5): call 0xffffb6cc(%rip)
6579(3): mov %rax,%rcx
657c(5): mov %rax,0x60(%rsp)
6581(7): lea 0x369d(%rip),%rax
6588(3): cmp %rax,%rcx
658b(6): jz 0x389(%rip)
6591(3): xor %r15d,%r15d
6594(2): test %ebx,%ebx
6596(6): jz 0x1c7(%rip)
659c(2): test %ebx,%ebx
659e(5): mov 0x60(%rsp),%rbx
65a3(5): setnz 0xf(%rsp)
65a8(3): xor %r12d,%r12d
65ab(3): mov %rbx,%rdi
65ae(5): call 0xffffb6b2(%rip)
65b3(5): mov %rbx,0x48(%rsp)
65b8(5): mov %rax,0x18(%rsp)
65bd(5): mov $0x1,0xe(%rsp)
65c2(5): mov $0x0,0x7c(%rsp)
65c7(9): mov $0x0,0x50(%rsp)
65d0(5): mov $0x1,0xd(%rsp)
65d5(5): jmp 0xfffff29e(%rip)
65da(5): mov $0x1,0xe(%rsp)
65df(5): mov $0x0,0x7c(%rsp)
65e4(3): xor %r12d,%r12d
65e7(9): mov $0x0,0x50(%rsp)
65f0(5): mov $0x0,0xf(%rsp)
65f5(3): xor %r15d,%r15d
65f8(5): mov $0x0,0xd(%rsp)
65fd(9): mov $0x0,0x18(%rsp)
6606(9): mov $0x0,0x48(%rsp)
660f(5): jmp 0xfffff264(%rip)
6614(5): mov $0x1,0xe(%rsp)
6619(5): mov $0x0,0x7c(%rsp)
661e(3): xor %r12d,%r12d
6621(9): mov $0x0,0x50(%rsp)
662a(5): mov $0x1,0xf(%rsp)
662f(5): mov $0x1,0xd(%rsp)
6634(5): jmp 0xfffff21f(%rip)
6639(3): cmp %r15,%r13
663c(2): jbe 0x7(%rip)
663e(5): mov $0x30,0x0(%r14,%r15,1)
6643(4): lea 0x2(%rcx),%rax
6647(3): cmp %rax,%r13
664a(2): jbe 0x8(%rip)
664c(6): mov $0x30,0x2(%r14,%rcx,1)
6652(3): mov %r12d,%eax
6655(4): lea 0x3(%rcx),%r15
6659(3): xor %r12d,%r12d
665c(5): mov $0x30,%ebx
6661(5): jmp 0xfffff367(%rip)
6666(a): nop 0x0(%rax,%rax,1)
6670(5): movzx 0xf(%rsp),%ebx
6675(3): mov %r11,%rbp
6678(4): mov %bl,0xd(%rsp)
667c(5): jmp 0xfffffcad(%rip)
6681(5): movzx 0xd(%rsp),%edx
6686(3): xor %r12d,%r12d
6689(5): jmp 0xfffffb07(%rip)
668e(3): xor %r10d,%r10d
6691(5): jmp 0xfffffbbc(%rip)
6696(9): mov $0x0,0x50(%rsp)
669f(5): mov $0x1,0xe(%rsp)
66a4(3): xor %r12d,%r12d
66a7(5): mov $0x0,0x7c(%rsp)
66ac(5): jmp 0xfffffddf(%rip)
66b1(5): mov 0x30(%rsp),%r11
66b6(3): mov %r14,%rsi
66b9(3): mov %r13,%rcx
66bc(3): mov %rbx,%rax
66bf(3): mov %rbx,%rdi
66c2(6): movzx 0x7d(%rsp),%r8d
66c8(5): movzx 0x7e(%rsp),%ebx
66cd(8): mov 0x88(%rsp),%r9
66d5(3): cmp %r11,%rsi
66d8(6): movzx 0x7f(%rsp),%r10d
66de(8): mov 0x80(%rsp),%r15
66e6(5): mov 0x40(%rsp),%r14
66eb(5): mov 0x70(%rsp),%r13
66f0(2): jnb 0x28(%rip)
66f2(3): cmp $0x0,(%rcx)
66f5(2): jnz 0x12(%rip)
66f7(2): jmp 0x21(%rip)
66f9(7): nop 0x0(%rax)
6700(5): cmp $0x0,0x0(%r9,%rax,1)
6705(2): jz 0x10(%rip)
6707(4): add $0x1,%rax
670b(5): lea 0x0(%rbp,%rax,1),%rdx
6710(3): cmp %rdx,%r11
6713(2): jnbe 0xffffffed(%rip)
6715(3): mov %rax,%rdi
6718(5): movzx 0xd(%rsp),%edx
671d(3): xor %r12d,%r12d
6720(5): jmp 0xfffffa66(%rip)
6725(3): mov %rbx,%rdi
6728(6): movzx 0x7d(%rsp),%r8d
672e(5): movzx 0x7e(%rsp),%ebx
6733(6): movzx 0x7f(%rsp),%r10d
6739(8): mov 0x80(%rsp),%r15
6741(3): xor %r12d,%r12d
6744(5): mov 0x40(%rsp),%r14
6749(5): mov 0x70(%rsp),%r13
674e(5): mov 0x30(%rsp),%r11
6753(5): movzx 0xd(%rsp),%edx
6758(5): jmp 0xfffffa2e(%rip)
675d(5): mov 0x68(%rsp),%rdx
6762(3): movzx (%rdx),%eax
6765(2): test %al,%al
6767(6): jz 0xfffffe35(%rip)
676d(3): nop (%rax)
6770(3): cmp %r15,%r13
6773(2): jbe 0x6(%rip)
6775(4): mov %al,0x0(%r14,%r15,1)
6779(4): add $0x1,%r15
677d(5): movzx 0x0(%rdx,%r15,1),%eax
6782(2): test %al,%al
6784(2): jnz 0xffffffec(%rip)
6786(5): jmp 0xfffffe16(%rip)
678b(2): mov %edx,%eax
678d(5): jmp 0xfffff55a(%rip)
6792(4): movzx 0x0(%rax,%rcx,1),%ebx
6796(3): cmp $0x3e,%bl
6799(6): jnbe 0xfffff877(%rip)
679f(a): mov $0x8070630310989004800,%rax
67a9(4): bt %rbx,%rax
67ad(6): jnb 0xfffff863(%rip)
67b3(5): cmp $0x0,0xf(%rsp)
67b8(6): jnz 0x1ea(%rip)
67be(3): cmp %r15,%r13
67c1(2): jbe 0x7(%rip)
67c3(5): mov $0x3f,0x0(%r14,%r15,1)
67c8(4): lea 0x1(%r15),%rax
67cc(3): cmp %rax,%r13
67cf(2): jbe 0x8(%rip)
67d1(6): mov $0x22,0x1(%r14,%r15,1)
67d7(4): lea 0x2(%r15),%rax
67db(3): cmp %rax,%r13
67de(2): jbe 0x8(%rip)
67e0(6): mov $0x22,0x2(%r14,%r15,1)
67e6(4): lea 0x3(%r15),%rax
67ea(3): cmp %rax,%r13
67ed(2): jbe 0x8(%rip)
67ef(6): mov $0x3f,0x3(%r14,%r15,1)
67f5(4): add $0x4,%r15
67f9(2): xor %edx,%edx
67fb(3): xor %r12d,%r12d
67fe(2): xor %eax,%eax
6800(3): mov %rcx,%rbp
6803(5): jmp 0xfffff1c5(%rip)
6808(2): test %ebx,%ebx
680a(6): jz 0x18e(%rip)
6810(7): lea 0x340e(%rip),%rax
6817(5): mov $0x1,0xe(%rsp)
681c(5): mov $0x0,0x7c(%rsp)
6821(3): xor %r12d,%r12d
6824(9): mov $0x0,0x50(%rsp)
682d(5): mov $0x1,0xf(%rsp)
6832(5): mov $0x0,0xd(%rsp)
6837(9): mov $0x1,0x18(%rsp)
6840(3): xor %r15d,%r15d
6843(5): mov %rax,0x48(%rsp)
6848(5): jmp 0xfffff02b(%rip)
684d(3): nop (%rax)
6850(3): mov %r11,%rbp
6853(5): movzx 0xf(%rsp),%eax
6858(5): jmp 0xfffffad1(%rip)
685d(7): lea 0x33bf(%rip),%rax
6864(5): mov $0x1,0xe(%rsp)
6869(5): mov $0x0,0x7c(%rsp)
686e(3): xor %r12d,%r12d
6871(9): mov $0x0,0x50(%rsp)
687a(5): mov $0x1,0xf(%rsp)
687f(5): mov $0x1,0xd(%rsp)
6884(9): mov $0x1,0x18(%rsp)
688d(3): xor %r15d,%r15d
6890(5): mov %rax,0x48(%rsp)
6895(5): jmp 0xffffefde(%rip)
689a(2): mov %edx,%eax
689c(5): mov 0x48(%rsp),%rbx
68a1(3): test %rbx,%rbx
68a4(2): jz 0x2e(%rip)
68a6(2): test %al,%al
68a8(2): jz 0x2a(%rip)
68aa(3): movzx (%rbx),%ecx
68ad(3): mov %rbx,%rax
68b0(2): test %cl,%cl
68b2(2): jz 0x20(%rip)
68b4(3): mov %r15,%rdx
68b7(3): sub %r15,%rax
68ba(3): cmp %rdx,%r13
68bd(2): jbe 0x6(%rip)
68bf(4): mov %cl,0x0(%r14,%rdx,1)
68c3(4): add $0x1,%rdx
68c7(4): movzx 0x0(%rax,%rdx,1),%ecx
68cb(2): test %cl,%cl
68cd(2): jnz 0xffffffed(%rip)
68cf(3): mov %rdx,%r15
68d2(3): cmp %r15,%r13
68d5(6): jbe 0xfffffaa4(%rip)
68db(5): mov $0x0,0x0(%r14,%r15,1)
68e0(5): jmp 0xfffffa99(%rip)
68e5(5): cmp $0x2,0x8(%rsp)
68ea(5): movzx 0xf(%rsp),%ebx
68ef(3): mov %r11,%rbp
68f2(3): setz %al
68f5(4): mov %bl,0xd(%rsp)
68f9(5): jmp 0xfffffa30(%rip)
68fe(4): mov 0x8(%rsp),%esi
6902(3): mov %rcx,%rdi
6905(5): call 0xffffedab(%rip)
690a(5): mov %rax,0x68(%rsp)
690f(5): jmp 0xfffffc57(%rip)
6914(4): mov 0x8(%rsp),%esi
6918(3): mov %rcx,%rdi
691b(5): call 0xffffed95(%rip)
6920(5): mov %rax,0x60(%rsp)
6925(5): jmp 0xfffffc6c(%rip)
692a(5): movzx 0xf(%rsp),%ebx
692f(3): mov %r11,%rbp
6932(2): mov %edx,%eax
6934(4): mov %bl,0xd(%rsp)
6938(5): jmp 0xfffff9f1(%rip)
693d(4): sub $0x8,%rsp
6941(6): mov $0x5,%r8d
6947(3): mov %r11,%rcx
694a(4): push 0x68(%rsp)
694e(4): push 0x78(%rsp)
6952(3): mov %r14,%rdi
6955(4): push 0x38(%rsp)
6959(8): mov 0x98(%rsp),%r9d
6961(5): mov 0x30(%rsp),%rdx
6966(5): mov 0x70(%rsp),%rsi
696b(5): call 0xffffee35(%rip)
6970(4): add $0x20,%rsp
6974(3): mov %rax,%r15
6977(5): jmp 0xfffffa02(%rip)
697c(5): movzx 0x7c(%rsp),%eax
6981(5): jmp 0xffffff1b(%rip)
6986(8): mov $0x2,0x8(%rsp)
698e(5): jmp 0xfffff99b(%rip)
6993(5): call 0xffffb2dd(%rip)
6998(5): mov $0x0,0xd(%rsp)
699d(5): jmp 0xfffffa74(%rip)
69a2(3): mov %r11,%rbp
69a5(5): jmp 0xfffff99b(%rip)
69aa(5): mov $0x1,0xe(%rsp)
69af(2): xor %eax,%eax
69b1(3): xor %r12d,%r12d
69b4(9): mov $0x0,0x50(%rsp)
69bd(5): jmp 0xfffff5a7(%rip)
69c2(3): mov %r13,%rdx
69c5(5): mov 0x50(%rsp),%r13
69ca(5): jmp 0xfffff5f8(%rip)
69cf(5): call 0xffffb191(%rip)

"quotearg_n_options" :
69e0(2): push %r15
69e2(2): push %r14
69e4(3): movsxd %edi,%r15
69e7(2): push %r13
69e9(2): push %r12
69eb(3): mov %rdx,%r14
69ee(1): push %rbp
69ef(1): push %rbx
69f0(3): mov %rcx,%rbp
69f3(4): sub $0x28,%rsp
69f7(5): mov %rsi,0x8(%rsp)
69fc(5): call 0xffffb174(%rip)
6a01(3): mov %rax,%r13
6a04(2): mov (%rax),%eax
6a06(3): test %r15d,%r15d
6a09(7): mov 0x205670(%rip),%rbx
6a10(4): mov %eax,0x18(%rsp)
6a14(6): js 0x16d(%rip)
6a1a(7): cmp %r15d,0x205657(%rip)
6a21(2): jnle 0x64(%rip)
6a23(7): cmp $0x7fffffff,%r15d
6a2a(6): jz 0x15c(%rip)
6a30(4): lea 0x1(%r15),%r12d
6a34(7): lea 0x205655(%rip),%rax
6a3b(3): movsxd %r12d,%rsi
6a3e(4): shl/sal $0x4,%rsi
6a42(3): cmp %rax,%rbx
6a45(6): jz 0x11b(%rip)
6a4b(3): mov %rbx,%rdi
6a4e(5): call 0x1072(%rip)
6a53(3): mov %rax,%rbx
6a56(7): mov %rax,0x205623(%rip)
6a5d(7): movsxd 0x205614(%rip),%rdi
6a64(3): mov %r12d,%edx
6a67(2): xor %esi,%esi
6a69(2): sub %edi,%edx
6a6b(4): shl/sal $0x4,%rdi
6a6f(3): movsxd %edx,%rdx
6a72(3): add %rbx,%rdi
6a75(4): shl/sal $0x4,%rdx
6a79(5): call 0xffffb297(%rip)
6a7e(7): mov %r12d,0x2055f3(%rip)
6a85(3): mov 0x4(%rbp),%eax
6a88(4): shl/sal $0x4,%r15
6a8c(4): sub $0x8,%rsp
6a90(3): add %r15,%rbx
6a93(4): lea 0x8(%rbp),%r15
6a97(4): mov 0x0(%rbp),%r8d
6a9b(3): mov (%rbx),%r11
6a9e(4): mov 0x8(%rbx),%r12
6aa2(3): mov %r14,%rcx
6aa5(3): or $0x1,%eax
6aa8(4): mov %eax,0x24(%rsp)
6aac(3): push 0x30(%rbp)
6aaf(3): mov %eax,%r9d
6ab2(3): push 0x28(%rbp)
6ab5(2): push %r15
6ab7(3): mov %r11,%rsi
6aba(5): mov 0x28(%rsp),%rdx
6abf(3): mov %r12,%rdi
6ac2(5): mov %r11,0x30(%rsp)
6ac7(5): call 0xffffecd9(%rip)
6acc(4): add $0x20,%rsp
6ad0(5): mov 0x10(%rsp),%r11
6ad5(3): cmp %rax,%r11
6ad8(2): jnbe 0x69(%rip)
6ada(4): lea 0x1(%rax),%rsi
6ade(7): lea 0x205a3b(%rip),%rax
6ae5(3): cmp %rax,%r12
6ae8(3): mov %rsi,(%rbx)
6aeb(2): jz 0x14(%rip)
6aed(3): mov %r12,%rdi
6af0(5): mov %rsi,0x10(%rsp)
6af5(5): call 0xffffb05b(%rip)
6afa(5): mov 0x10(%rsp),%rsi
6aff(3): mov %rsi,%rdi
6b02(5): mov %rsi,0x10(%rsp)
6b07(5): call 0xf59(%rip)
6b0c(4): sub $0x8,%rsp
6b10(4): mov %rax,0x8(%rbx)
6b14(4): mov 0x0(%rbp),%r8d
6b18(3): push 0x30(%rbp)
6b1b(3): push 0x28(%rbp)
6b1e(3): mov %r14,%rcx
6b21(2): push %r15
6b23(5): mov 0x3c(%rsp),%r9d
6b28(3): mov %rax,%rdi
6b2b(5): mov 0x28(%rsp),%rdx
6b30(5): mov 0x30(%rsp),%rsi
6b35(3): mov %rax,%r12
6b38(5): call 0xffffec68(%rip)
6b3d(4): add $0x20,%rsp
6b41(4): mov 0x18(%rsp),%eax
6b45(4): mov %eax,0x0(%r13)
6b49(4): add $0x28,%rsp
6b4d(3): mov %r12,%rax
6b50(1): pop %rbx
6b51(1): pop %rbp
6b52(2): pop %r12
6b54(2): pop %r13
6b56(2): pop %r14
6b58(2): pop %r15
6b5a(1): ret near (%rsp)
6b5b(5): nop 0x0(%rax,%rax,1)
6b60(2): xor %edi,%edi
6b62(5): call 0xf5e(%rip)
6b67(8): movdqa 0x205521(%rip),%xmm0
6b6f(3): mov %rax,%rbx
6b72(7): mov %rax,0x205507(%rip)
6b79(3): movups %xmm0,(%rax)
6b7c(5): jmp 0xfffffee1(%rip)
6b81(5): call 0xffffafdf(%rip)
6b86(5): call 0x112a(%rip)

"clone_quoting_options" :
6b90(2): push %r12
6b92(1): push %rbp
6b93(1): push %rbx
6b94(3): mov %rdi,%rbx
6b97(5): call 0xffffafd9(%rip)
6b9c(3): mov (%rax),%r12d
6b9f(3): mov %rax,%rbp
6ba2(7): lea 0x205a77(%rip),%rax
6ba9(3): test %rbx,%rbx
6bac(5): mov $0x38,%esi
6bb1(4): cmove %rax,%rbx
6bb5(3): mov %rbx,%rdi
6bb8(5): call 0x10a8(%rip)
6bbd(4): mov %r12d,0x0(%rbp)
6bc1(1): pop %rbx
6bc2(1): pop %rbp
6bc3(2): pop %r12
6bc5(1): ret near (%rsp)

"get_quoting_style" :
6bd0(7): lea 0x205a49(%rip),%rax
6bd7(3): test %rdi,%rdi
6bda(4): cmove %rax,%rdi
6bde(2): mov (%rdi),%eax
6be0(1): ret near (%rsp)

"set_quoting_style" :
6bf0(7): lea 0x205a29(%rip),%rax
6bf7(3): test %rdi,%rdi
6bfa(4): cmove %rax,%rdi
6bfe(2): mov %esi,(%rdi)
6c00(1): ret near (%rsp)

"set_char_quoting" :
6c10(7): lea 0x205a09(%rip),%rax
6c17(3): test %rdi,%rdi
6c1a(2): mov %esi,%ecx
6c1c(4): cmove %rax,%rdi
6c20(2): mov %esi,%eax
6c22(3): and $0x1f,%ecx
6c25(3): shr $0x5,%al
6c28(3): movzx %al,%eax
6c2b(5): lea 0x8(%rdi,%rax,4),%rdi
6c30(2): mov (%rdi),%esi
6c32(2): mov %esi,%eax
6c34(2): shr %cl,%eax
6c36(2): xor %eax,%edx
6c38(3): and $0x1,%eax
6c3b(3): and $0x1,%edx
6c3e(2): shl/sal %cl,%edx
6c40(2): xor %esi,%edx
6c42(2): mov %edx,(%rdi)
6c44(1): ret near (%rsp)

"set_quoting_flags" :
6c50(7): lea 0x2059c9(%rip),%rax
6c57(3): test %rdi,%rdi
6c5a(4): cmove %rax,%rdi
6c5e(3): mov 0x4(%rdi),%eax
6c61(3): mov %esi,0x4(%rdi)
6c64(1): ret near (%rsp)

"set_custom_quoting" :
6c70(7): lea 0x2059a9(%rip),%rax
6c77(3): test %rdi,%rdi
6c7a(4): cmove %rax,%rdi
6c7e(3): test %rsi,%rsi
6c81(6): mov $0xa,(%rdi)
6c87(2): jz 0x10(%rip)
6c89(3): test %rdx,%rdx
6c8c(2): jz 0xb(%rip)
6c8e(4): mov %rsi,0x28(%rdi)
6c92(4): mov %rdx,0x30(%rdi)
6c96(1): ret near (%rsp)
6c97(4): sub $0x8,%rsp
6c9b(5): call 0xffffaec5(%rip)

"quotearg_buffer" :
6ca0(2): push %r15
6ca2(2): push %r14
6ca4(7): lea 0x205975(%rip),%rax
6cab(2): push %r13
6cad(2): push %r12
6caf(3): mov %rdi,%r13
6cb2(1): push %rbp
6cb3(1): push %rbx
6cb4(3): mov %r8,%rbx
6cb7(3): mov %rsi,%r14
6cba(3): mov %rdx,%r15
6cbd(4): sub $0x18,%rsp
6cc1(3): test %r8,%r8
6cc4(4): cmove %rax,%rbx
6cc8(5): mov %rcx,0x8(%rsp)
6ccd(5): call 0xffffaea3(%rip)
6cd2(3): mov (%rax),%r12d
6cd5(3): mov %rax,%rbp
6cd8(4): lea 0x8(%rbx),%rax
6cdc(4): sub $0x8,%rsp
6ce0(4): mov 0x4(%rbx),%r9d
6ce4(3): push 0x30(%rbx)
6ce7(3): mov (%rbx),%r8d
6cea(3): push 0x28(%rbx)
6ced(3): mov %r15,%rdx
6cf0(1): push %rax
6cf1(5): mov 0x28(%rsp),%rcx
6cf6(3): mov %r14,%rsi
6cf9(3): mov %r13,%rdi
6cfc(5): call 0xffffeaa4(%rip)
6d01(4): mov %r12d,0x0(%rbp)
6d05(4): add $0x38,%rsp
6d09(1): pop %rbx
6d0a(1): pop %rbp
6d0b(2): pop %r12
6d0d(2): pop %r13
6d0f(2): pop %r14
6d11(2): pop %r15
6d13(1): ret near (%rsp)

"quotearg_alloc_mem" :
6d20(2): push %r15
6d22(2): push %r14
6d24(7): lea 0x2058f5(%rip),%rax
6d2b(2): push %r13
6d2d(2): push %r12
6d2f(3): mov %rdx,%r12
6d32(1): push %rbp
6d33(1): push %rbx
6d34(3): mov %rcx,%rbx
6d37(3): mov %rdi,%r14
6d3a(3): mov %rsi,%r15
6d3d(4): sub $0x38,%rsp
6d41(3): test %rcx,%rcx
6d44(4): cmove %rax,%rbx
6d48(2): xor %ebp,%ebp
6d4a(5): call 0xffffae26(%rip)
6d4f(3): test %r12,%r12
6d52(3): mov %rax,%r13
6d55(2): mov (%rax),%eax
6d57(4): setz %bpl
6d5b(3): or 0x4(%rbx),%ebp
6d5e(4): lea 0x8(%rbx),%r10
6d62(4): sub $0x8,%rsp
6d66(3): mov (%rbx),%r8d
6d69(3): mov %r15,%rcx
6d6c(4): mov %eax,0x14(%rsp)
6d70(3): push 0x30(%rbx)
6d73(3): mov %r14,%rdx
6d76(3): push 0x28(%rbx)
6d79(2): push %r10
6d7b(2): xor %esi,%esi
6d7d(3): mov %ebp,%r9d
6d80(2): xor %edi,%edi
6d82(5): mov %r10,0x40(%rsp)
6d87(5): call 0xffffea19(%rip)
6d8c(4): lea 0x1(%rax),%rsi
6d90(5): mov %rax,0x48(%rsp)
6d95(4): add $0x20,%rsp
6d99(3): mov %rsi,%rdi
6d9c(5): mov %rsi,0x18(%rsp)
6da1(5): call 0xcbf(%rip)
6da6(5): mov %rax,0x10(%rsp)
6dab(4): sub $0x8,%rsp
6daf(3): push 0x30(%rbx)
6db2(3): push 0x28(%rbx)
6db5(5): mov 0x38(%rsp),%r10
6dba(3): mov %ebp,%r9d
6dbd(3): mov (%rbx),%r8d
6dc0(3): mov %r15,%rcx
6dc3(3): mov %r14,%rdx
6dc6(3): mov %rax,%rdi
6dc9(2): push %r10
6dcb(5): mov 0x38(%rsp),%rsi
6dd0(5): call 0xffffe9d0(%rip)
6dd5(4): mov 0x2c(%rsp),%eax
6dd9(4): add $0x20,%rsp
6ddd(3): test %r12,%r12
6de0(4): mov %eax,0x0(%r13)
6de4(2): jz 0xb(%rip)
6de6(5): mov 0x28(%rsp),%r11
6deb(4): mov %r11,(%r12)
6def(5): mov 0x10(%rsp),%rax
6df4(4): add $0x38,%rsp
6df8(1): pop %rbx
6df9(1): pop %rbp
6dfa(2): pop %r12
6dfc(2): pop %r13
6dfe(2): pop %r14
6e00(2): pop %r15
6e02(1): ret near (%rsp)

"quotearg_alloc" :
6e10(3): mov %rdx,%rcx
6e13(2): xor %edx,%edx
6e15(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
6e20(6): mov 0x205252(%rip),%eax
6e26(2): push %r12
6e28(7): mov 0x205251(%rip),%r12
6e2f(1): push %rbp
6e30(1): push %rbx
6e31(3): cmp $0x1,%eax
6e34(2): jle 0x2d(%rip)
6e36(3): sub $0x2,%eax
6e39(5): lea 0x18(%r12),%rbx
6e3e(4): shl/sal $0x4,%rax
6e42(5): lea 0x28(%r12,%rax,1),%rbp
6e47(9): nop 0x0(%rax,%rax,1)
6e50(3): mov (%rbx),%rdi
6e53(4): add $0x10,%rbx
6e57(5): call 0xffffacf9(%rip)
6e5c(3): cmp %rbp,%rbx
6e5f(2): jnz 0xfffffff1(%rip)
6e61(5): mov 0x8(%r12),%rdi
6e66(7): lea 0x2056b3(%rip),%rbx
6e6d(3): cmp %rbx,%rdi
6e70(2): jz 0x19(%rip)
6e72(5): call 0xffffacde(%rip)
6e77(b): mov $0x100,0x20520e(%rip)
6e82(7): mov %rbx,0x20520f(%rip)
6e89(7): lea 0x205200(%rip),%rbx
6e90(3): cmp %rbx,%r12
6e93(2): jz 0x11(%rip)
6e95(3): mov %r12,%rdi
6e98(5): call 0xffffacb8(%rip)
6e9d(7): mov %rbx,0x2051dc(%rip)
6ea4(1): pop %rbx
6ea5(a): mov $0x1,0x2051c9(%rip)
6eaf(1): pop %rbp
6eb0(2): pop %r12
6eb2(1): ret near (%rsp)

"quotearg_n" :
6ec0(7): lea 0x205759(%rip),%rcx
6ec7(7): mov $0xffffffff,%rdx
6ece(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
6ee0(7): lea 0x205739(%rip),%rcx
6ee7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
6ef0(7): lea 0x205729(%rip),%rcx
6ef7(3): mov %rdi,%rsi
6efa(7): mov $0xffffffff,%rdx
6f01(2): xor %edi,%edi
6f03(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
6f10(7): lea 0x205709(%rip),%rcx
6f17(3): mov %rsi,%rdx
6f1a(3): mov %rdi,%rsi
6f1d(2): xor %edi,%edi
6f1f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
6f30(4): sub $0x48,%rsp
6f34(3): mov %rdx,%rax
6f37(9): mov $0x28,%rdx
6f40(5): mov %rdx,0x38(%rsp)
6f45(2): xor %edx,%edx
6f47(3): cmp $0xa,%esi
6f4a(2): jz 0x6a(%rip)
6f4c(3): mov %esi,(%rsp)
6f4f(3): mov %rsp,%rcx
6f52(7): mov $0xffffffff,%rdx
6f59(3): mov %rax,%rsi
6f5c(9): mov $0x0,0x4(%rsp)
6f65(9): mov $0x0,0xc(%rsp)
6f6e(9): mov $0x0,0x14(%rsp)
6f77(9): mov $0x0,0x1c(%rsp)
6f80(9): mov $0x0,0x24(%rsp)
6f89(9): mov $0x0,0x2c(%rsp)
6f92(8): mov $0x0,0x34(%rsp)
6f9a(5): call 0xfffffa46(%rip)
6f9f(5): mov 0x38(%rsp),%rcx
6fa4(9): xor $0x28,%rcx
6fad(2): jnz 0xc(%rip)
6faf(4): add $0x48,%rsp
6fb3(1): ret near (%rsp)
6fb4(5): call 0xffffabac(%rip)
6fb9(5): call 0xffffacb7(%rip)

"quotearg_n_style_mem" :
6fc0(4): sub $0x48,%rsp
6fc4(3): mov %rdx,%rax
6fc7(3): mov %rcx,%rdx
6fca(9): mov $0x28,%rcx
6fd3(5): mov %rcx,0x38(%rsp)
6fd8(2): xor %ecx,%ecx
6fda(3): cmp $0xa,%esi
6fdd(2): jz 0x63(%rip)
6fdf(3): mov %esi,(%rsp)
6fe2(3): mov %rsp,%rcx
6fe5(3): mov %rax,%rsi
6fe8(9): mov $0x0,0x4(%rsp)
6ff1(9): mov $0x0,0xc(%rsp)
6ffa(9): mov $0x0,0x14(%rsp)
7003(9): mov $0x0,0x1c(%rsp)
700c(9): mov $0x0,0x24(%rsp)
7015(9): mov $0x0,0x2c(%rsp)
701e(8): mov $0x0,0x34(%rsp)
7026(5): call 0xfffff9ba(%rip)
702b(5): mov 0x38(%rsp),%rdx
7030(9): xor $0x28,%rdx
7039(2): jnz 0xc(%rip)
703b(4): add $0x48,%rsp
703f(1): ret near (%rsp)
7040(5): call 0xffffab20(%rip)
7045(5): call 0xffffac2b(%rip)

"quotearg_style" :
7050(3): mov %rsi,%rdx
7053(2): mov %edi,%esi
7055(2): xor %edi,%edi
7057(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
7060(3): mov %rdx,%rcx
7063(3): mov %rsi,%rdx
7066(2): mov %edi,%esi
7068(2): xor %edi,%edi
706a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
7070(4): sub $0x48,%rsp
7074(2): mov %edx,%ecx
7076(9): mov $0x28,%rax
707f(5): mov %rax,0x38(%rsp)
7084(2): xor %eax,%eax
7086(7): mov 0x2055c3(%rip),%rax
708d(3): mov %rsp,%r8
7090(3): and $0x1f,%ecx
7093(8): movdqa 0x205585(%rip),%xmm0
709b(5): mov %rax,0x30(%rsp)
70a0(2): mov %edx,%eax
70a2(4): movaps %xmm0,(%rsp)
70a6(3): shr $0x5,%al
70a9(3): movzx %al,%eax
70ac(5): lea 0x8(%r8,%rax,4),%r9
70b1(8): movdqa 0x205577(%rip),%xmm0
70b9(5): movaps %xmm0,0x10(%rsp)
70be(8): movdqa 0x20557a(%rip),%xmm0
70c6(5): movaps %xmm0,0x20(%rsp)
70cb(3): mov (%r9),%edx
70ce(2): mov %edx,%eax
70d0(2): shr %cl,%eax
70d2(2): not %eax
70d4(3): and $0x1,%eax
70d7(2): shl/sal %cl,%eax
70d9(3): mov %r8,%rcx
70dc(2): xor %edx,%eax
70de(3): mov %rsi,%rdx
70e1(3): mov %rdi,%rsi
70e4(3): mov %eax,(%r9)
70e7(2): xor %edi,%edi
70e9(5): call 0xfffff8f7(%rip)
70ee(5): mov 0x38(%rsp),%rsi
70f3(9): xor $0x28,%rsi
70fc(2): jnz 0x7(%rip)
70fe(4): add $0x48,%rsp
7102(1): ret near (%rsp)
7103(5): call 0xffffab6d(%rip)

"quotearg_char" :
7110(4): movsx %sil,%edx
7114(7): mov $0xffffffff,%rsi
711b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
7120(5): mov $0x3a,%edx
7125(7): mov $0xffffffff,%rsi
712c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
7140(5): mov $0x3a,%edx
7145(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
7150(4): sub $0x48,%rsp
7154(3): mov %rdx,%rax
7157(9): mov $0x28,%rdx
7160(5): mov %rdx,0x38(%rsp)
7165(2): xor %edx,%edx
7167(3): cmp $0xa,%esi
716a(2): jz 0x6a(%rip)
716c(3): mov %esi,(%rsp)
716f(3): mov %rsp,%rcx
7172(7): mov $0xffffffff,%rdx
7179(3): mov %rax,%rsi
717c(9): mov $0x0,0x4(%rsp)
7185(9): mov $0x4000000,0xc(%rsp)
718e(9): mov $0x0,0x14(%rsp)
7197(9): mov $0x0,0x1c(%rsp)
71a0(9): mov $0x0,0x24(%rsp)
71a9(9): mov $0x0,0x2c(%rsp)
71b2(8): mov $0x0,0x34(%rsp)
71ba(5): call 0xfffff826(%rip)
71bf(5): mov 0x38(%rsp),%rcx
71c4(9): xor $0x28,%rcx
71cd(2): jnz 0xc(%rip)
71cf(4): add $0x48,%rsp
71d3(1): ret near (%rsp)
71d4(5): call 0xffffa98c(%rip)
71d9(5): call 0xffffaa97(%rip)

"quotearg_n_custom_mem" :
71e0(4): sub $0x48,%rsp
71e4(3): mov %rcx,%r9
71e7(7): mov 0x205462(%rip),%rcx
71ee(8): movdqa 0x20542a(%rip),%xmm0
71f6(9): mov $0x28,%rax
71ff(5): mov %rax,0x38(%rsp)
7204(2): xor %eax,%eax
7206(4): movaps %xmm0,(%rsp)
720a(3): test %rsi,%rsi
720d(5): mov %rcx,0x30(%rsp)
7212(7): mov $0xa,(%rsp)
7219(8): movdqa 0x20540f(%rip),%xmm0
7221(5): movaps %xmm0,0x10(%rsp)
7226(8): movdqa 0x205412(%rip),%xmm0
722e(5): movaps %xmm0,0x20(%rsp)
7233(2): jz 0x34(%rip)
7235(3): test %rdx,%rdx
7238(2): jz 0x2f(%rip)
723a(5): mov %rsi,0x28(%rsp)
723f(5): mov %rdx,0x30(%rsp)
7244(3): mov %rsp,%rcx
7247(3): mov %r8,%rdx
724a(3): mov %r9,%rsi
724d(5): call 0xfffff793(%rip)
7252(5): mov 0x38(%rsp),%rdi
7257(9): xor $0x28,%rdi
7260(2): jnz 0xc(%rip)
7262(4): add $0x48,%rsp
7266(1): ret near (%rsp)
7267(5): call 0xffffa8f9(%rip)
726c(5): call 0xffffaa04(%rip)

"quotearg_n_custom" :
7280(7): mov $0xffffffff,%r8
7287(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
7290(3): mov %rdx,%rcx
7293(7): mov $0xffffffff,%r8
729a(3): mov %rsi,%rdx
729d(3): mov %rdi,%rsi
72a0(2): xor %edi,%edi
72a2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
72b0(3): mov %rcx,%r8
72b3(3): mov %rdx,%rcx
72b6(3): mov %rsi,%rdx
72b9(3): mov %rdi,%rsi
72bc(2): xor %edi,%edi
72be(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
72d0(7): lea 0x204d69(%rip),%rcx
72d7(5): jmp 0xfffff709(%rip)

"quote_mem" :
72e0(7): lea 0x204d59(%rip),%rcx
72e7(3): mov %rsi,%rdx
72ea(3): mov %rdi,%rsi
72ed(2): xor %edi,%edi
72ef(5): jmp 0xfffff6f1(%rip)

"quote_n" :
7300(7): lea 0x204d39(%rip),%rcx
7307(7): mov $0xffffffff,%rdx
730e(5): jmp 0xfffff6d2(%rip)

"quote" :
7320(7): lea 0x204d19(%rip),%rcx
7327(3): mov %rdi,%rsi
732a(7): mov $0xffffffff,%rdx
7331(2): xor %edi,%edi
7333(5): jmp 0xfffff6ad(%rip)

"safe_read" :
7340(2): push %r13
7342(2): push %r12
7344(3): mov %edi,%r13d
7347(1): push %rbp
7348(1): push %rbx
7349(3): mov %rsi,%r12
734c(3): mov %rdx,%rbx
734f(4): sub $0x8,%rsp
7353(5): nop 0x0(%rax,%rax,1)
7358(3): mov %rbx,%rdx
735b(3): mov %r12,%rsi
735e(3): mov %r13d,%edi
7361(5): call 0xffffa9ff(%rip)
7366(3): test %rax,%rax
7369(3): mov %rax,%rbp
736c(2): jns 0x24(%rip)
736e(5): call 0xffffa802(%rip)
7373(2): mov (%rax),%eax
7375(3): cmp $0x4,%eax
7378(2): jz 0xffffffe0(%rip)
737a(7): cmp $0x7ff00000,%rbx
7381(2): jbe 0xf(%rip)
7383(3): cmp $0x16,%eax
7386(2): jnz 0xa(%rip)
7388(5): mov $0x7ff00000,%ebx
738d(2): jmp 0xffffffcb(%rip)
738f(1): nop 
7390(4): add $0x8,%rsp
7394(3): mov %rbp,%rax
7397(1): pop %rbx
7398(1): pop %rbp
7399(2): pop %r12
739b(2): pop %r13
739d(1): ret near (%rsp)

"safe_write" :
73a0(2): push %r13
73a2(2): push %r12
73a4(3): mov %edi,%r13d
73a7(1): push %rbp
73a8(1): push %rbx
73a9(3): mov %rsi,%r12
73ac(3): mov %rdx,%rbx
73af(4): sub $0x8,%rsp
73b3(5): nop 0x0(%rax,%rax,1)
73b8(3): mov %rbx,%rdx
73bb(3): mov %r12,%rsi
73be(3): mov %r13d,%edi
73c1(5): call 0xffffa83f(%rip)
73c6(3): test %rax,%rax
73c9(3): mov %rax,%rbp
73cc(2): jns 0x24(%rip)
73ce(5): call 0xffffa7a2(%rip)
73d3(2): mov (%rax),%eax
73d5(3): cmp $0x4,%eax
73d8(2): jz 0xffffffe0(%rip)
73da(3): cmp $0x16,%eax
73dd(2): jnz 0x13(%rip)
73df(7): cmp $0x7ff00000,%rbx
73e6(2): jbe 0xa(%rip)
73e8(5): mov $0x7ff00000,%ebx
73ed(2): jmp 0xffffffcb(%rip)
73ef(1): nop 
73f0(4): add $0x8,%rsp
73f4(3): mov %rbp,%rax
73f7(1): pop %rbx
73f8(1): pop %rbp
73f9(2): pop %r12
73fb(2): pop %r13
73fd(1): ret near (%rsp)

"fd_safer" :
7400(2): push %r13
7402(2): push %r12
7404(1): push %rbp
7405(1): push %rbx
7406(2): mov %edi,%ebx
7408(4): sub $0x8,%rsp
740c(3): cmp $0x2,%edi
740f(2): jnbe 0x23(%rip)
7411(5): call 0x136f(%rip)
7416(3): mov %eax,%r12d
7419(5): call 0xffffa757(%rip)
741e(3): mov (%rax),%r13d
7421(3): mov %rax,%rbp
7424(2): mov %ebx,%edi
7426(5): call 0xffffa8fa(%rip)
742b(3): mov %r12d,%ebx
742e(4): mov %r13d,0x0(%rbp)
7432(4): add $0x8,%rsp
7436(2): mov %ebx,%eax
7438(1): pop %rbx
7439(1): pop %rbp
743a(2): pop %r12
743c(2): pop %r13
743e(1): ret near (%rsp)

"version_etc_arn" :
7440(2): push %r15
7442(2): push %r14
7444(2): push %r13
7446(2): push %r12
7448(3): mov %r9,%r12
744b(1): push %rbp
744c(1): push %rbx
744d(3): mov %rdi,%rbp
7450(3): mov %r8,%rbx
7453(4): sub $0x28,%rsp
7457(3): test %rsi,%rsi
745a(6): jz 0x11e(%rip)
7460(3): mov %rdx,%r8
7463(7): lea 0x2c7e(%rip),%rdx
746a(3): mov %rcx,%r9
746d(2): xor %eax,%eax
746f(3): mov %rsi,%rcx
7472(5): mov $0x1,%esi
7477(5): call 0xffffaac9(%rip)
747c(7): lea 0x2c78(%rip),%rsi
7483(2): xor %edi,%edi
7485(5): mov $0x5,%edx
748a(5): call 0xffffa7b6(%rip)
748f(7): lea 0x2f8a(%rip),%rdx
7496(3): mov %rax,%rcx
7499(6): mov $0x7e3,%r8d
749f(5): mov $0x1,%esi
74a4(3): mov %rbp,%rdi
74a7(2): xor %eax,%eax
74a9(5): call 0xffffaa97(%rip)
74ae(7): lea 0x2cd3(%rip),%rsi
74b5(2): xor %edi,%edi
74b7(5): mov $0x5,%edx
74bc(5): call 0xffffa784(%rip)
74c1(3): mov %rbp,%rsi
74c4(3): mov %rax,%rdi
74c7(5): call 0xffffa8b9(%rip)
74cc(4): cmp $0x9,%r12
74d0(6): jnbe 0x340(%rip)
74d6(7): lea 0x2f07(%rip),%rdx
74dd(4): movsxd 0x0(%rdx,%r12,4),%rax
74e1(3): add %rdx,%rax
74e4(2): jmp %rax
74e6(a): nop 0x0(%rax,%rax,1)
74f0(4): mov 0x38(%rbx),%r9
74f4(4): mov 0x10(%rbx),%rax
74f8(7): lea 0x2df9(%rip),%rsi
74ff(4): mov 0x8(%rbx),%r8
7503(5): mov $0x5,%edx
7508(2): xor %edi,%edi
750a(4): mov 0x30(%rbx),%r13
750e(4): mov 0x28(%rbx),%r12
7512(5): mov %r9,0x10(%rsp)
7517(4): mov 0x20(%rbx),%r15
751b(4): mov 0x18(%rbx),%r14
751f(4): mov %rax,(%rsp)
7523(5): mov %r8,0x8(%rsp)
7528(3): mov (%rbx),%rbx
752b(5): call 0xffffa715(%rip)
7530(4): sub $0x8,%rsp
7534(5): mov 0x18(%rsp),%r9
7539(3): mov %rax,%rdx
753c(3): mov %rbx,%rcx
753f(5): mov $0x1,%esi
7544(3): mov %rbp,%rdi
7547(2): xor %eax,%eax
7549(2): push %r9
754b(2): push %r13
754d(2): push %r12
754f(2): push %r15
7551(2): push %r14
7553(5): mov 0x30(%rsp),%r9
7558(5): mov 0x38(%rsp),%r8
755d(5): call 0xffffa9e3(%rip)
7562(4): add $0x30,%rsp
7566(4): add $0x28,%rsp
756a(1): pop %rbx
756b(1): pop %rbp
756c(2): pop %r12
756e(2): pop %r13
7570(2): pop %r14
7572(2): pop %r15
7574(1): ret near (%rsp)
7575(3): nop (%rax)
7578(3): mov %rcx,%r8
757b(3): mov %rdx,%rcx
757e(7): lea 0x2b6f(%rip),%rdx
7585(5): mov $0x1,%esi
758a(2): xor %eax,%eax
758c(5): call 0xffffa9b4(%rip)
7591(5): jmp 0xfffffeeb(%rip)
7596(a): nop 0x0(%rax,%rax,1)
75a0(4): mov 0x40(%rbx),%r10
75a4(4): mov 0x38(%rbx),%r9
75a8(7): lea 0x2d79(%rip),%rsi
75af(4): mov 0x10(%rbx),%rax
75b3(4): mov 0x8(%rbx),%r8
75b7(5): mov $0x5,%edx
75bc(4): mov 0x30(%rbx),%r13
75c0(4): mov 0x28(%rbx),%r12
75c4(4): mov 0x20(%rbx),%r15
75c8(4): mov 0x18(%rbx),%r14
75cc(3): mov (%rbx),%rbx
75cf(5): mov %r10,0x18(%rsp)
75d4(5): mov %r9,0x10(%rsp)
75d9(4): mov %rax,(%rsp)
75dd(5): mov %r8,0x8(%rsp)
75e2(2): xor %edi,%edi
75e4(5): call 0xffffa65c(%rip)
75e9(5): mov 0x18(%rsp),%r10
75ee(2): push %r10
75f0(5): jmp 0xffffff44(%rip)
75f5(3): nop (%rax)
75f8(3): mov (%rbx),%rbx
75fb(7): lea 0x2afd(%rip),%rsi
7602(5): mov $0x5,%edx
7607(2): xor %edi,%edi
7609(5): call 0xffffa637(%rip)
760e(4): add $0x28,%rsp
7612(3): mov %rbx,%rcx
7615(3): mov %rbp,%rdi
7618(1): pop %rbx
7619(1): pop %rbp
761a(2): pop %r12
761c(2): pop %r13
761e(2): pop %r14
7620(2): pop %r15
7622(3): mov %rax,%rdx
7625(5): mov $0x1,%esi
762a(2): xor %eax,%eax
762c(5): jmp 0xffffa914(%rip)
7631(7): nop 0x0(%rax)
7638(4): mov 0x8(%rbx),%r12
763c(7): lea 0x2acc(%rip),%rsi
7643(3): mov (%rbx),%rbx
7646(5): mov $0x5,%edx
764b(2): xor %edi,%edi
764d(5): call 0xffffa5f3(%rip)
7652(4): add $0x28,%rsp
7656(3): mov %r12,%r8
7659(3): mov %rbx,%rcx
765c(3): mov %rbp,%rdi
765f(3): mov %rax,%rdx
7662(5): mov $0x1,%esi
7667(1): pop %rbx
7668(1): pop %rbp
7669(2): pop %r12
766b(2): pop %r13
766d(2): pop %r14
766f(2): pop %r15
7671(2): xor %eax,%eax
7673(5): jmp 0xffffa8cd(%rip)
7678(8): nop 0x0(%rax,%rax,1)
7680(4): mov 0x10(%rbx),%r13
7684(4): mov 0x8(%rbx),%r12
7688(7): lea 0x2a97(%rip),%rsi
768f(3): mov (%rbx),%rbx
7692(5): mov $0x5,%edx
7697(2): xor %edi,%edi
7699(5): call 0xffffa5a7(%rip)
769e(4): add $0x28,%rsp
76a2(3): mov %r13,%r9
76a5(3): mov %r12,%r8
76a8(3): mov %rbx,%rcx
76ab(3): mov %rbp,%rdi
76ae(3): mov %rax,%rdx
76b1(1): pop %rbx
76b2(1): pop %rbp
76b3(2): pop %r12
76b5(2): pop %r13
76b7(2): pop %r14
76b9(2): pop %r15
76bb(5): mov $0x1,%esi
76c0(2): xor %eax,%eax
76c2(5): jmp 0xffffa87e(%rip)
76c7(9): nop 0x0(%rax,%rax,1)
76d0(7): lea 0x2b81(%rip),%rsi
76d7(5): mov $0x5,%edx
76dc(2): xor %edi,%edi
76de(4): mov 0x18(%rbx),%r14
76e2(4): mov 0x10(%rbx),%r13
76e6(4): mov 0x8(%rbx),%r12
76ea(3): mov (%rbx),%rbx
76ed(5): call 0xffffa553(%rip)
76f2(4): sub $0x8,%rsp
76f6(2): push %r14
76f8(3): mov %rax,%rdx
76fb(3): mov %r13,%r9
76fe(3): mov %r12,%r8
7701(3): mov %rbx,%rcx
7704(3): mov %rbp,%rdi
7707(5): mov $0x1,%esi
770c(2): xor %eax,%eax
770e(5): call 0xffffa832(%rip)
7713(1): pop %rax
7714(1): pop %rdx
7715(4): add $0x28,%rsp
7719(1): pop %rbx
771a(1): pop %rbp
771b(2): pop %r12
771d(2): pop %r13
771f(2): pop %r14
7721(2): pop %r15
7723(1): ret near (%rsp)
7724(4): nop 0x0(%rax)
7728(4): mov 0x20(%rbx),%r15
772c(7): lea 0x2b45(%rip),%rsi
7733(5): mov $0x5,%edx
7738(2): xor %edi,%edi
773a(4): mov 0x18(%rbx),%r14
773e(4): mov 0x10(%rbx),%r13
7742(4): mov 0x8(%rbx),%r12
7746(3): mov (%rbx),%rbx
7749(5): call 0xffffa4f7(%rip)
774e(2): push %r15
7750(2): jmp 0xffffffa6(%rip)
7752(6): nop 0x0(%rax,%rax,1)
7758(4): mov 0x8(%rbx),%r8
775c(4): mov 0x28(%rbx),%r12
7760(7): lea 0x2b39(%rip),%rsi
7767(4): mov 0x20(%rbx),%r15
776b(4): mov 0x18(%rbx),%r14
776f(5): mov $0x5,%edx
7774(4): mov 0x10(%rbx),%r13
7778(2): xor %edi,%edi
777a(3): mov (%rbx),%rbx
777d(4): mov %r8,(%rsp)
7781(5): call 0xffffa4bf(%rip)
7786(4): sub $0x8,%rsp
778a(3): mov %r13,%r9
778d(2): push %r12
778f(2): push %r15
7791(2): push %r14
7793(5): mov 0x20(%rsp),%r8
7798(3): mov %rbx,%rcx
779b(3): mov %rax,%rdx
779e(3): mov %rbp,%rdi
77a1(5): mov $0x1,%esi
77a6(2): xor %eax,%eax
77a8(5): call 0xffffa798(%rip)
77ad(4): add $0x20,%rsp
77b1(4): add $0x28,%rsp
77b5(1): pop %rbx
77b6(1): pop %rbp
77b7(2): pop %r12
77b9(2): pop %r13
77bb(2): pop %r14
77bd(2): pop %r15
77bf(1): ret near (%rsp)
77c0(4): mov 0x10(%rbx),%r9
77c4(4): mov 0x30(%rbx),%r13
77c8(7): lea 0x2af9(%rip),%rsi
77cf(4): mov 0x28(%rbx),%r12
77d3(4): mov 0x20(%rbx),%r15
77d7(5): mov $0x5,%edx
77dc(4): mov 0x18(%rbx),%r14
77e0(4): mov 0x8(%rbx),%r8
77e4(2): xor %edi,%edi
77e6(5): mov %r9,0x8(%rsp)
77eb(3): mov (%rbx),%rbx
77ee(4): mov %r8,(%rsp)
77f2(5): call 0xffffa44e(%rip)
77f7(2): push %r13
77f9(2): push %r12
77fb(2): push %r15
77fd(2): push %r14
77ff(5): mov 0x28(%rsp),%r9
7804(2): jmp 0xffffff8f(%rip)
7806(a): nop 0x0(%rax,%rax,1)
7810(4): mov 0x40(%rbx),%r10
7814(4): mov 0x38(%rbx),%r9
7818(5): mov $0x5,%edx
781d(4): mov 0x10(%rbx),%rax
7821(4): mov 0x8(%rbx),%r8
7825(7): lea 0x2b34(%rip),%rsi
782c(4): mov 0x30(%rbx),%r13
7830(4): mov 0x28(%rbx),%r12
7834(4): mov 0x20(%rbx),%r15
7838(4): mov 0x18(%rbx),%r14
783c(5): mov %r10,0x18(%rsp)
7841(5): mov %r9,0x10(%rsp)
7846(4): mov %rax,(%rsp)
784a(5): mov %r8,0x8(%rsp)
784f(3): mov (%rbx),%rbx
7852(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
7860(3): xor %r9d,%r9d
7863(4): cmp $0x0,(%r8)
7867(2): jz 0x14(%rip)
7869(7): nop 0x0(%rax)
7870(4): add $0x1,%r9
7874(5): cmp $0x0,0x0(%r8,%r9,8)
7879(2): jnz 0xfffffff7(%rip)
787b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
7880(4): sub $0x68,%rsp
7884(3): mov %r8,%r10
7887(3): xor %r9d,%r9d
788a(9): mov $0x28,%rax
7893(5): mov %rax,0x58(%rsp)
7898(2): xor %eax,%eax
789a(3): mov %rsp,%r8
789d(3): nop (%rax)
78a0(3): mov (%r10),%eax
78a3(3): cmp $0x2f,%eax
78a6(2): jnbe 0x44(%rip)
78a8(3): mov %eax,%r11d
78ab(4): add 0x10(%r10),%r11
78af(3): add $0x8,%eax
78b2(3): mov %eax,(%r10)
78b5(3): mov (%r11),%rax
78b8(3): test %rax,%rax
78bb(4): mov %rax,0x0(%r8,%r9,8)
78bf(2): jz 0xc(%rip)
78c1(4): add $0x1,%r9
78c5(4): cmp $0xa,%r9
78c9(2): jnz 0xffffffd7(%rip)
78cb(5): call 0xfffffb75(%rip)
78d0(5): mov 0x58(%rsp),%rax
78d5(9): xor $0x28,%rax
78de(2): jnz 0x7(%rip)
78e0(4): add $0x68,%rsp
78e4(1): ret near (%rsp)
78e5(5): call 0xffffa38b(%rip)
78ea(4): mov 0x8(%r10),%r11
78ee(4): lea 0x8(%r11),%rax
78f2(4): mov %rax,0x8(%r10)
78f6(2): jmp 0xffffffbf(%rip)

"version_etc" :
7900(1): push %rbp
7901(1): push %rbx
7902(6): mov $0x20,%r10d
7908(3): xor %r11d,%r11d
790b(7): sub $0xb8,%rsp
7912(9): mov $0x28,%rax
791b(5): mov %rax,0x78(%rsp)
7920(2): xor %eax,%eax
7922(8): lea 0xd0(%rsp),%rax
792a(8): mov %r8,0xa0(%rsp)
7932(8): lea 0xd0(%rsp),%rbx
793a(5): lea 0x20(%rsp),%r8
793f(8): mov %r9,0xa8(%rsp)
7947(8): mov $0x20,0x8(%rsp)
794f(5): mov %rax,0x10(%rsp)
7954(8): lea 0x80(%rsp),%rax
795c(3): xor %r9d,%r9d
795f(5): mov %rax,0x18(%rsp)
7964(3): mov %rax,%rbp
7967(9): nop 0x0(%rax,%rax,1)
7970(4): cmp $0x2f,%r10d
7974(2): jnbe 0x58(%rip)
7976(3): mov %r10d,%eax
7979(6): mov $0x1,%r11d
797f(4): add $0x8,%r10d
7983(3): add %rbp,%rax
7986(3): mov (%rax),%rax
7989(3): test %rax,%rax
798c(4): mov %rax,0x0(%r8,%r9,8)
7990(2): jz 0xc(%rip)
7992(4): add $0x1,%r9
7996(4): cmp $0xa,%r9
799a(2): jnz 0xffffffd6(%rip)
799c(3): test %r11b,%r11b
799f(2): jnz 0x26(%rip)
79a1(5): call 0xfffffa9f(%rip)
79a6(5): mov 0x78(%rsp),%rax
79ab(9): xor $0x28,%rax
79b4(2): jnz 0xc(%rip)
79b6(7): add $0xb8,%rsp
79bd(1): pop %rbx
79be(1): pop %rbp
79bf(1): ret near (%rsp)
79c0(5): call 0xffffa2b0(%rip)
79c5(5): mov %r10d,0x8(%rsp)
79ca(2): jmp 0xffffffd7(%rip)
79cc(3): mov %rbx,%rax
79cf(4): add $0x8,%rbx
79d3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
79e0(1): push %rbx
79e1(7): lea 0x275a(%rip),%rsi
79e8(5): mov $0x5,%edx
79ed(2): xor %edi,%edi
79ef(5): call 0xffffa251(%rip)
79f4(7): lea 0x275c(%rip),%rdx
79fb(3): mov %rax,%rsi
79fe(5): mov $0x1,%edi
7a03(2): xor %eax,%eax
7a05(5): call 0xffffa47b(%rip)
7a0a(7): lea 0x275c(%rip),%rsi
7a11(5): mov $0x5,%edx
7a16(2): xor %edi,%edi
7a18(5): call 0xffffa228(%rip)
7a1d(7): lea 0x1e84(%rip),%rcx
7a24(7): lea 0x1256(%rip),%rdx
7a2b(3): mov %rax,%rsi
7a2e(5): mov $0x1,%edi
7a33(2): xor %eax,%eax
7a35(5): call 0xffffa44b(%rip)
7a3a(7): mov 0x204827(%rip),%rbx
7a41(7): lea 0x2958(%rip),%rsi
7a48(2): xor %edi,%edi
7a4a(5): mov $0x5,%edx
7a4f(5): call 0xffffa1f1(%rip)
7a54(3): mov %rbx,%rsi
7a57(3): mov %rax,%rdi
7a5a(1): pop %rbx
7a5b(5): jmp 0xffffa325(%rip)

"xmalloc" :
7a60(1): push %rbx
7a61(3): mov %rdi,%rbx
7a64(5): call 0xffffa38c(%rip)
7a69(3): test %rax,%rax
7a6c(2): jnz 0x7(%rip)
7a6e(3): test %rbx,%rbx
7a71(2): jnz 0x4(%rip)
7a73(1): pop %rbx
7a74(1): ret near (%rsp)
7a75(5): call 0x23b(%rip)

"xnmalloc" :
7a80(3): mov %rdi,%rax
7a83(3): mul %rax,%rsi,%rdx
7a86(3): mov %rax,%rdi
7a89(3): seto %al
7a8c(3): test %rdi,%rdi
7a8f(2): js 0xc(%rip)
7a91(3): movzx %al,%eax
7a94(3): test %rax,%rax
7a97(2): jnz 0x4(%rip)
7a99(2): jmp 0xffffffc7(%rip)
7a9b(4): sub $0x8,%rsp
7a9f(5): call 0x211(%rip)

"xrealloc" :
7ac0(3): test %rsi,%rsi
7ac3(1): push %rbx
7ac4(3): mov %rsi,%rbx
7ac7(2): jnz 0x7(%rip)
7ac9(3): test %rdi,%rdi
7acc(2): jnz 0x1c(%rip)
7ace(3): mov %rbx,%rsi
7ad1(5): call 0xffffa37f(%rip)
7ad6(3): test %rax,%rax
7ad9(2): jnz 0x7(%rip)
7adb(3): test %rbx,%rbx
7ade(2): jnz 0x13(%rip)
7ae0(1): pop %rbx
7ae1(1): ret near (%rsp)
7ae2(6): nop 0x0(%rax,%rax,1)
7ae8(5): call 0xffffa068(%rip)
7aed(2): xor %eax,%eax
7aef(1): pop %rbx
7af0(1): ret near (%rsp)
7af1(5): call 0x1bf(%rip)

"xnrealloc" :
7b00(3): mov %rsi,%rax
7b03(3): mul %rax,%rdx,%rdx
7b06(3): mov %rax,%rsi
7b09(3): seto %al
7b0c(3): test %rsi,%rsi
7b0f(2): js 0xc(%rip)
7b11(3): movzx %al,%eax
7b14(3): test %rax,%rax
7b17(2): jnz 0x4(%rip)
7b19(2): jmp 0xffffffa7(%rip)
7b1b(4): sub $0x8,%rsp
7b1f(5): call 0x191(%rip)

"x2nrealloc" :
7b30(3): test %rdi,%rdi
7b33(3): mov %rdx,%r9
7b36(3): mov (%rsi),%rcx
7b39(2): jz 0x37(%rip)
7b3b(2): xor %edx,%edx
7b3d(a): mov $0x6148914691236517204,%rax
7b47(3): div %r9,%rax
7b4a(3): cmp %rcx,%rax
7b4d(2): jbe 0x3e(%rip)
7b4f(3): mov %rcx,%rax
7b52(3): shr $0x1,%rax
7b55(5): lea 0x1(%rax,%rcx,1),%rcx
7b5a(3): mov %rcx,(%rsi)
7b5d(4): imul %r9,%rcx
7b61(3): mov %rcx,%rsi
7b64(5): jmp 0xffffff5c(%rip)
7b69(7): nop 0x0(%rax)
7b70(3): test %rcx,%rcx
7b73(2): jz 0x25(%rip)
7b75(3): mov %rcx,%rax
7b78(3): mul %rax,%r9,%rdx
7b7b(3): seto %dl
7b7e(3): test %rax,%rax
7b81(3): movzx %dl,%edx
7b84(2): js 0x7(%rip)
7b86(3): test %rdx,%rdx
7b89(2): jz 0xffffffd1(%rip)
7b8b(4): sub $0x8,%rsp
7b8f(5): call 0x121(%rip)
7b94(4): nop 0x0(%rax)
7b98(2): xor %edx,%edx
7b9a(5): mov $0x80,%eax
7b9f(3): xor %r8d,%r8d
7ba2(3): div %r9,%rax
7ba5(3): test %rax,%rax
7ba8(4): setz %r8b
7bac(4): lea 0x0(%r8,%rax,1),%rcx
7bb0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
7bc0(3): test %rdi,%rdi
7bc3(3): mov (%rsi),%rax
7bc6(2): jz 0x2a(%rip)
7bc8(a): mov $0x6148914691236517203,%rdx
7bd2(3): cmp %rdx,%rax
7bd5(2): jnbe 0x2c(%rip)
7bd7(3): mov %rax,%rdx
7bda(3): shr $0x1,%rdx
7bdd(5): lea 0x1(%rdx,%rax,1),%rax
7be2(3): mov %rax,(%rsi)
7be5(3): mov %rax,%rsi
7be8(5): jmp 0xfffffed8(%rip)
7bed(3): nop (%rax)
7bf0(3): test %rax,%rax
7bf3(5): mov $0x80,%edx
7bf8(4): cmove %rdx,%rax
7bfc(3): test %rax,%rax
7bff(2): jns 0xffffffe3(%rip)
7c01(4): sub $0x8,%rsp
7c05(5): call 0xab(%rip)

"xzalloc" :
7c10(1): push %rbx
7c11(3): mov %rdi,%rbx
7c14(5): call 0xfffffe4c(%rip)
7c19(3): mov %rbx,%rdx
7c1c(2): xor %esi,%esi
7c1e(3): mov %rax,%rdi
7c21(1): pop %rbx
7c22(5): jmp 0xffffa0ee(%rip)

"xcalloc" :
7c30(3): mov %rdi,%rax
7c33(4): sub $0x8,%rsp
7c37(3): mul %rax,%rsi,%rdx
7c3a(3): seto %dl
7c3d(3): test %rax,%rax
7c40(2): js 0x19(%rip)
7c42(3): movzx %dl,%edx
7c45(3): test %rdx,%rdx
7c48(2): jnz 0x11(%rip)
7c4a(5): call 0xffffa146(%rip)
7c4f(3): test %rax,%rax
7c52(2): jz 0x7(%rip)
7c54(4): add $0x8,%rsp
7c58(1): ret near (%rsp)
7c59(5): call 0x57(%rip)

"xmemdup" :
7c60(1): push %rbp
7c61(1): push %rbx
7c62(3): mov %rdi,%rbp
7c65(3): mov %rsi,%rdi
7c68(3): mov %rsi,%rbx
7c6b(4): sub $0x8,%rsp
7c6f(5): call 0xfffffdf1(%rip)
7c74(4): add $0x8,%rsp
7c78(3): mov %rbx,%rdx
7c7b(3): mov %rbp,%rsi
7c7e(1): pop %rbx
7c7f(1): pop %rbp
7c80(3): mov %rax,%rdi
7c83(5): jmp 0xffffa14d(%rip)

"xstrdup" :
7c90(1): push %rbx
7c91(3): mov %rdi,%rbx
7c94(5): call 0xffff9fcc(%rip)
7c99(3): mov %rbx,%rdi
7c9c(4): lea 0x1(%rax),%rsi
7ca0(1): pop %rbx
7ca1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
7cb0(7): lea 0x2798(%rip),%rsi
7cb7(4): sub $0x8,%rsp
7cbb(5): mov $0x5,%edx
7cc0(2): xor %edi,%edi
7cc2(5): call 0xffff9f7e(%rip)
7cc7(6): mov 0x204363(%rip),%edi
7ccd(7): lea 0x111a(%rip),%rdx
7cd4(3): mov %rax,%rcx
7cd7(2): xor %esi,%esi
7cd9(2): xor %eax,%eax
7cdb(5): call 0xffffa1c5(%rip)
7ce0(5): call 0xffff9e80(%rip)

"xnumtoumax" :
7cf0(2): push %r15
7cf2(2): push %r14
7cf4(3): mov %rcx,%r15
7cf7(2): push %r13
7cf9(2): push %r12
7cfb(3): mov %rdx,%r14
7cfe(1): push %rbp
7cff(1): push %rbx
7d00(2): mov %esi,%edx
7d02(2): xor %esi,%esi
7d04(3): mov %rdi,%r12
7d07(3): mov %r9,%r13
7d0a(4): sub $0x18,%rsp
7d0e(3): mov %rsp,%rcx
7d11(4): mov 0x50(%rsp),%ebx
7d15(9): mov $0x28,%rax
7d1e(5): mov %rax,0x8(%rsp)
7d23(2): xor %eax,%eax
7d25(5): call 0xfb(%rip)
7d2a(2): test %eax,%eax
7d2c(6): jnz 0x94(%rip)
7d32(4): mov (%rsp),%rbp
7d36(3): cmp %r14,%rbp
7d39(2): jb 0x7(%rip)
7d3b(3): cmp %r15,%rbp
7d3e(2): jbe 0x56(%rip)
7d40(5): call 0xffff9e30(%rip)
7d45(7): cmp $0x40000000,%rbp
7d4c(3): mov %rax,%r14
7d4f(2): sbb %eax,%eax
7d51(3): and $0xd7,%eax
7d54(3): add $0x4b,%eax
7d57(3): mov %eax,(%r14)
7d5a(3): mov %r12,%rdi
7d5d(5): call 0xfffff5c3(%rip)
7d62(3): mov (%r14),%esi
7d65(3): mov %rax,%r8
7d68(5): mov $0x0,%eax
7d6d(7): lea 0x1076(%rip),%rdx
7d74(3): mov %r13,%rcx
7d77(3): cmp $0x16,%esi
7d7a(3): cmove %eax,%esi
7d7d(2): test %ebx,%ebx
7d7f(5): mov $0x1,%eax
7d84(3): cmove %eax,%ebx
7d87(2): xor %eax,%eax
7d89(2): mov %ebx,%edi
7d8b(5): call 0xffffa115(%rip)
7d90(4): mov (%rsp),%rbp
7d94(5): mov 0x8(%rsp),%rdx
7d99(9): xor $0x28,%rdx
7da2(3): mov %rbp,%rax
7da5(2): jnz 0x46(%rip)
7da7(4): add $0x18,%rsp
7dab(1): pop %rbx
7dac(1): pop %rbp
7dad(2): pop %r12
7daf(2): pop %r13
7db1(2): pop %r14
7db3(2): pop %r15
7db5(1): ret near (%rsp)
7db6(a): nop 0x0(%rax,%rax,1)
7dc0(2): mov %eax,%ebp
7dc2(5): call 0xffff9dae(%rip)
7dc7(3): cmp $0x1,%ebp
7dca(3): mov %rax,%r14
7dcd(2): jz 0x13(%rip)
7dcf(3): cmp $0x3,%ebp
7dd2(2): jnz 0xffffff88(%rip)
7dd4(6): mov $0x0,(%rax)
7dda(5): jmp 0xffffff80(%rip)
7ddf(1): nop 
7de0(6): mov $0x4b,(%rax)
7de6(5): jmp 0xffffff74(%rip)
7deb(5): call 0xffff9e85(%rip)

"xdectoumax" :
7df0(4): sub $0x10,%rsp
7df4(2): push %r9
7df6(3): mov %r8,%r9
7df9(3): mov %rcx,%r8
7dfc(3): mov %rdx,%rcx
7dff(3): mov %rsi,%rdx
7e02(5): mov $0xa,%esi
7e07(5): call 0xfffffee9(%rip)
7e0c(4): add $0x18,%rsp
7e10(1): ret near (%rsp)

"xstrtoumax" :
7e20(2): push %r15
7e22(2): push %r14
7e24(2): push %r13
7e26(2): push %r12
7e28(1): push %rbp
7e29(1): push %rbx
7e2a(4): sub $0x28,%rsp
7e2e(9): mov $0x28,%rax
7e37(5): mov %rax,0x18(%rsp)
7e3c(2): xor %eax,%eax
7e3e(3): cmp $0x24,%edx
7e41(6): jnbe 0x364(%rip)
7e47(5): lea 0x10(%rsp),%rax
7e4c(3): mov %rsi,%r15
7e4f(3): test %rsi,%rsi
7e52(3): mov %rdi,%rbp
7e55(4): mov %edx,0x8(%rsp)
7e59(3): mov %rcx,%r14
7e5c(3): mov %r8,%r13
7e5f(4): cmove %rax,%r15
7e63(5): call 0xffff9d0d(%rip)
7e68(6): mov $0x0,(%rax)
7e6e(3): mov %rax,%r12
7e71(4): movzx 0x0(%rbp),%ebx
7e75(5): call 0xffffa13b(%rip)
7e7a(4): mov 0x8(%rsp),%edx
7e7e(3): mov (%rax),%rsi
7e81(3): mov %rbp,%rax
7e84(2): jmp 0x13(%rip)
7e86(a): nop 0x0(%rax,%rax,1)
7e90(4): add $0x1,%rax
7e94(3): movzx (%rax),%ebx
7e97(3): movzx %bl,%ecx
7e9a(5): test $0x20,0x1(%rsi,%rcx,2)
7e9f(2): jnz 0xfffffff1(%rip)
7ea1(3): cmp $0x2d,%bl
7ea4(2): jz 0x54(%rip)
7ea6(2): xor %ecx,%ecx
7ea8(3): mov %r15,%rsi
7eab(3): mov %rbp,%rdi
7eae(5): call 0xffff9e52(%rip)
7eb3(3): mov (%r15),%rcx
7eb6(3): mov %rax,%rbx
7eb9(3): cmp %rbp,%rcx
7ebc(2): jz 0x2c(%rip)
7ebe(4): mov (%r12),%eax
7ec2(2): test %eax,%eax
7ec4(2): jz 0x64(%rip)
7ec6(3): cmp $0x22,%eax
7ec9(5): mov $0x1,%ebp
7ece(2): jnz 0x2a(%rip)
7ed0(3): test %r13,%r13
7ed3(2): jz 0xb(%rip)
7ed5(4): movzx (%rcx),%r12d
7ed9(3): test %r12b,%r12b
7edc(2): jnz 0x7b(%rip)
7ede(3): mov %rbx,(%r14)
7ee1(2): jmp 0x1c(%rip)
7ee3(5): nop 0x0(%rax,%rax,1)
7ee8(3): test %r13,%r13
7eeb(5): mov %rcx,0x8(%rsp)
7ef0(2): jnz 0x40(%rip)
7ef2(6): nop 0x0(%rax,%rax,1)
7ef8(5): mov $0x4,%ebp
7efd(5): mov 0x18(%rsp),%rdi
7f02(9): xor $0x28,%rdi
7f0b(2): mov %ebp,%eax
7f0d(6): jnz 0x293(%rip)
7f13(4): add $0x28,%rsp
7f17(1): pop %rbx
7f18(1): pop %rbp
7f19(2): pop %r12
7f1b(2): pop %r13
7f1d(2): pop %r14
7f1f(2): pop %r15
7f21(1): ret near (%rsp)
7f22(6): nop 0x0(%rax,%rax,1)
7f28(2): xor %ebp,%ebp
7f2a(2): jmp 0xffffffa6(%rip)
7f2c(4): nop 0x0(%rax)
7f30(5): movzx 0x0(%rbp),%r12d
7f35(3): test %r12b,%r12b
7f38(2): jz 0xffffffc0(%rip)
7f3a(4): movsx %r12b,%esi
7f3e(3): mov %r13,%rdi
7f41(2): xor %ebp,%ebp
7f43(5): call 0xffff9d6d(%rip)
7f48(3): test %rax,%rax
7f4b(5): mov $0x1,%ebx
7f50(5): mov 0x8(%rsp),%rcx
7f55(2): jz 0xffffffa3(%rip)
7f57(4): movsx %r12b,%esi
7f5b(3): mov %r13,%rdi
7f5e(5): mov %rcx,0x8(%rsp)
7f63(5): call 0xffff9d4d(%rip)
7f68(3): test %rax,%rax
7f6b(5): mov 0x8(%rsp),%rcx
7f70(6): jz 0xcc(%rip)
7f76(5): lea 0xffffffbb(%r12),%eax
7f7b(2): cmp $0x2f,%al
7f7d(2): jnbe 0x53(%rip)
7f7f(a): mov $0x142129060940101,%rdx
7f89(4): bt %rax,%rdx
7f8d(2): jnb 0x43(%rip)
7f8f(5): mov $0x30,%esi
7f94(3): mov %r13,%rdi
7f97(5): mov %rcx,0x8(%rsp)
7f9c(5): call 0xffff9d14(%rip)
7fa1(3): test %rax,%rax
7fa4(5): mov 0x8(%rsp),%rcx
7fa9(2): jz 0x27(%rip)
7fab(4): movzx 0x1(%rcx),%eax
7faf(2): cmp $0x44,%al
7fb1(2): jz 0xe(%rip)
7fb3(2): cmp $0x69,%al
7fb5(6): jz 0x1d3(%rip)
7fbb(2): cmp $0x42,%al
7fbd(2): jnz 0x13(%rip)
7fbf(5): mov $0x2,%edi
7fc4(5): mov $0x3e8,%esi
7fc9(2): jmp 0x11(%rip)
7fcb(5): nop 0x0(%rax,%rax,1)
7fd0(5): mov $0x1,%edi
7fd5(5): mov $0x400,%esi
7fda(4): sub $0x42,%r12d
7fde(4): cmp $0x35,%r12b
7fe2(2): jnbe 0x5a(%rip)
7fe4(7): lea 0x24bd(%rip),%rdx
7feb(4): movzx %r12b,%r12d
7fef(4): movsxd 0x0(%rdx,%r12,4),%rax
7ff3(3): add %rdx,%rax
7ff6(2): jmp %rax
7ff8(3): mov %rbx,%rax
7ffb(3): mul %rax,%rsi,%rdx
7ffe(6): jo 0x1f3(%rip)
8004(3): xor %r8d,%r8d
8007(3): mul %rax,%rsi,%rdx
800a(6): jo 0x1d8(%rip)
8010(3): mov %rax,%rbx
8013(3): or %r8d,%ebp
8016(a): nop 0x0(%rax,%rax,1)
8020(3): movsxd %edi,%rdi
8023(2): mov %ebp,%eax
8025(3): add %rdi,%rcx
8028(3): or $0x2,%eax
802b(3): mov %rcx,(%r15)
802e(3): cmp $0x0,(%rcx)
8031(3): mov %rbx,(%r14)
8034(3): cmovne %eax,%ebp
8037(5): jmp 0xfffffec6(%rip)
803c(3): mov %rbx,(%r14)
803f(3): or $0x2,%ebp
8042(5): jmp 0xfffffebb(%rip)
8047(5): mov $0x2,%edx
804c(3): mov %rdx,%rax
804f(3): mul %rax,%rbx,%rdx
8052(6): jo 0x9c(%rip)
8058(3): add %rbx,%rbx
805b(2): jmp 0xffffffc5(%rip)
805d(5): mov $0x200,%edx
8062(3): mov %rdx,%rax
8065(3): mul %rax,%rbx,%rdx
8068(6): jo 0x86(%rip)
806e(4): shl/sal $0x9,%rbx
8072(2): jmp 0xffffffae(%rip)
8074(6): mov $0x7,%r8d
807a(3): xor %r9d,%r9d
807d(3): nop (%rax)
8080(3): mov %rbx,%rax
8083(3): mul %rax,%rsi,%rdx
8086(3): mov %rax,%rbx
8089(6): jo 0x195(%rip)
808f(4): sub $0x1,%r8d
8093(2): jnz 0xffffffed(%rip)
8095(3): or %r9d,%ebp
8098(2): jmp 0xffffff88(%rip)
809a(6): mov $0x8,%r8d
80a0(3): xor %r9d,%r9d
80a3(5): nop 0x0(%rax,%rax,1)
80a8(3): mov %rbx,%rax
80ab(3): mul %rax,%rsi,%rdx
80ae(3): mov %rax,%rbx
80b1(6): jo 0x14f(%rip)
80b7(4): sub $0x1,%r8d
80bb(2): jnz 0xffffffed(%rip)
80bd(2): jmp 0xffffffd8(%rip)
80bf(6): mov $0x4,%r8d
80c5(3): xor %r9d,%r9d
80c8(3): mov %rbx,%rax
80cb(3): mul %rax,%rsi,%rdx
80ce(3): mov %rax,%rbx
80d1(6): jo 0x102(%rip)
80d7(4): sub $0x1,%r8d
80db(2): jnz 0xffffffed(%rip)
80dd(2): jmp 0xffffffb8(%rip)
80df(3): mov %rbx,%rax
80e2(3): mul %rax,%rsi,%rdx
80e5(3): mov %rax,%rbx
80e8(6): jno 0xffffff38(%rip)
80ee(5): mov $0x1,%ebp
80f3(4): or $0xffffffff,%rbx
80f7(5): jmp 0xffffff29(%rip)
80fc(4): nop 0x0(%rax)
8100(6): mov $0x5,%r8d
8106(3): xor %r9d,%r9d
8109(3): mov %rbx,%rax
810c(3): mul %rax,%rsi,%rdx
810f(3): mov %rax,%rbx
8112(6): jo 0xfd(%rip)
8118(4): sub $0x1,%r8d
811c(2): jnz 0xffffffed(%rip)
811e(5): jmp 0xffffff77(%rip)
8123(6): mov $0x6,%r8d
8129(3): xor %r9d,%r9d
812c(3): mov %rbx,%rax
812f(3): mul %rax,%rsi,%rdx
8132(3): mov %rax,%rbx
8135(6): jo 0x8f(%rip)
813b(4): sub $0x1,%r8d
813f(2): jnz 0xffffffed(%rip)
8141(5): jmp 0xffffff54(%rip)
8146(5): mov $0x400,%edx
814b(3): mov %rdx,%rax
814e(3): mul %rax,%rbx,%rdx
8151(2): jo 0xffffff9d(%rip)
8153(4): shl/sal $0xa,%rbx
8157(5): jmp 0xfffffec9(%rip)
815c(3): mov %rbx,%rax
815f(3): mul %rax,%rsi,%rdx
8162(6): jo 0xcb(%rip)
8168(3): xor %r8d,%r8d
816b(3): mul %rax,%rsi,%rdx
816e(6): jno 0xfffffe99(%rip)
8174(6): mov $0x1,%r8d
817a(4): or $0xffffffff,%rax
817e(5): jmp 0xfffffe89(%rip)
8183(5): nop 0x0(%rax,%rax,1)
8188(2): xor %edi,%edi
818a(4): cmp $0x42,0x2(%rcx)
818e(5): mov $0x400,%esi
8193(4): setz %dil
8197(4): lea 0x1(%rdi,%rdi,1),%edi
819b(5): jmp 0xfffffe3f(%rip)
81a0(5): call 0xffff9ad0(%rip)
81a5(7): lea 0x23d4(%rip),%rcx
81ac(7): lea 0x22ad(%rip),%rsi
81b3(7): lea 0x22c6(%rip),%rdi
81ba(5): mov $0x54,%edx
81bf(5): call 0xffff9b31(%rip)
81c4(6): mov $0x1,%r9d
81ca(4): or $0xffffffff,%rbx
81ce(5): jmp 0xffffff6d(%rip)
81d3(6): mov $0x1,%r9d
81d9(4): or $0xffffffff,%rbx
81dd(5): jmp 0xfffffefa(%rip)
81e2(6): mov $0x1,%r8d
81e8(4): or $0xffffffff,%rbx
81ec(5): jmp 0xfffffe27(%rip)
81f1(4): or $0xffffffff,%rax
81f5(6): mov $0x1,%r8d
81fb(5): jmp 0xfffffe0c(%rip)
8200(6): mov $0x1,%r9d
8206(4): or $0xffffffff,%rbx
820a(5): jmp 0xfffffead(%rip)
820f(6): mov $0x1,%r9d
8215(4): or $0xffffffff,%rbx
8219(5): jmp 0xfffffeff(%rip)
821e(6): mov $0x1,%r9d
8224(4): or $0xffffffff,%rbx
8228(5): jmp 0xfffffe67(%rip)
822d(6): mov $0x1,%r8d
8233(4): or $0xffffffff,%rax
8237(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
8240(2): push %r12
8242(1): push %rbp
8243(1): push %rbx
8244(3): mov %rdi,%rbx
8247(5): call 0xffff9b99(%rip)
824c(2): test %eax,%eax
824e(3): mov %rbx,%rdi
8251(2): js 0x56(%rip)
8253(5): call 0xffff9bdd(%rip)
8258(2): test %eax,%eax
825a(2): jnz 0x2e(%rip)
825c(3): mov %rbx,%rdi
825f(5): call 0x61(%rip)
8264(2): test %eax,%eax
8266(2): jz 0x3e(%rip)
8268(5): call 0xffff9908(%rip)
826d(3): mov (%rax),%r12d
8270(3): mov %rbx,%rdi
8273(3): mov %rax,%rbp
8276(5): call 0xffff99aa(%rip)
827b(3): test %r12d,%r12d
827e(2): jnz 0x32(%rip)
8280(1): pop %rbx
8281(1): pop %rbp
8282(2): pop %r12
8284(1): ret near (%rsp)
8285(3): nop (%rax)
8288(3): mov %rbx,%rdi
828b(5): call 0xffff9b55(%rip)
8290(2): xor %esi,%esi
8292(5): mov $0x1,%edx
8297(2): mov %eax,%edi
8299(5): call 0xffff9a47(%rip)
829e(4): cmp $0xffffffff,%rax
82a2(2): jnz 0xffffffba(%rip)
82a4(3): mov %rbx,%rdi
82a7(1): pop %rbx
82a8(1): pop %rbp
82a9(2): pop %r12
82ab(5): jmp 0xffff9975(%rip)
82b0(4): mov %r12d,0x0(%rbp)
82b4(5): mov $0xffffffff,%eax
82b9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
82c0(3): test %rdi,%rdi
82c3(1): push %rbx
82c4(3): mov %rdi,%rbx
82c7(2): jz 0x13(%rip)
82c9(5): call 0xffff9b67(%rip)
82ce(2): test %eax,%eax
82d0(2): jz 0xa(%rip)
82d2(6): test $0x100,(%rbx)
82d8(2): jnz 0x10(%rip)
82da(3): mov %rbx,%rdi
82dd(1): pop %rbx
82de(5): jmp 0xffff9b22(%rip)
82e3(5): nop 0x0(%rax,%rax,1)
82e8(3): mov %rbx,%rdi
82eb(5): mov $0x1,%edx
82f0(2): xor %esi,%esi
82f2(5): call 0xe(%rip)
82f7(3): mov %rbx,%rdi
82fa(1): pop %rbx
82fb(5): jmp 0xffff9b05(%rip)

"rpl_fseeko" :
8300(4): mov 0x8(%rdi),%rax
8304(4): cmp %rax,0x10(%rdi)
8308(2): jz 0x8(%rip)
830a(5): jmp 0xffff9bd6(%rip)
830f(1): nop 
8310(4): mov 0x20(%rdi),%rax
8314(4): cmp %rax,0x28(%rdi)
8318(2): jnz 0xfffffff2(%rip)
831a(5): cmp $0x0,0x48(%rdi)
831f(2): jnz 0xffffffeb(%rip)
8321(2): push %r12
8323(1): push %rbp
8324(3): mov %edx,%r12d
8327(1): push %rbx
8328(3): mov %rsi,%rbp
832b(3): mov %rdi,%rbx
832e(5): call 0xffff9ab2(%rip)
8333(3): mov %r12d,%edx
8336(3): mov %rbp,%rsi
8339(2): mov %eax,%edi
833b(5): call 0xffff99a5(%rip)
8340(4): cmp $0xffffffff,%rax
8344(2): jz 0xe(%rip)
8346(3): and $0xef,(%rbx)
8349(7): mov %rax,0x90(%rbx)
8350(2): xor %eax,%eax
8352(1): pop %rbx
8353(1): pop %rbp
8354(2): pop %r12
8356(1): ret near (%rsp)

"rpl_mbrtowc" :
8360(2): push %r13
8362(2): push %r12
8364(3): mov %rsi,%r13
8367(1): push %rbp
8368(1): push %rbx
8369(3): mov %rdi,%rbx
836c(3): mov %rdx,%r12
836f(4): sub $0x18,%rsp
8373(9): mov $0x28,%rax
837c(5): mov %rax,0x8(%rsp)
8381(2): xor %eax,%eax
8383(5): lea 0x4(%rsp),%rax
8388(3): test %rdi,%rdi
838b(4): cmove %rax,%rbx
838f(3): mov %rbx,%rdi
8392(5): call 0xffff98fe(%rip)
8397(4): cmp $0xfffffffd,%rax
839b(3): mov %rax,%rbp
839e(2): jbe 0x22(%rip)
83a0(3): test %r12,%r12
83a3(2): jz 0x1d(%rip)
83a5(2): xor %edi,%edi
83a7(5): call 0x339(%rip)
83ac(2): test %al,%al
83ae(2): jnz 0x12(%rip)
83b0(5): movzx 0x0(%r13),%eax
83b5(5): mov $0x1,%ebp
83ba(2): mov %eax,(%rbx)
83bc(4): nop 0x0(%rax)
83c0(5): mov 0x8(%rsp),%rdx
83c5(9): xor $0x28,%rdx
83ce(3): mov %rbp,%rax
83d1(2): jnz 0xd(%rip)
83d3(4): add $0x18,%rsp
83d7(1): pop %rbx
83d8(1): pop %rbp
83d9(2): pop %r12
83db(2): pop %r13
83dd(1): ret near (%rsp)
83de(5): call 0xffff9892(%rip)

"str2sig" :
83f0(2): push %r13
83f2(2): push %r12
83f4(3): mov %rsi,%r13
83f7(1): push %rbp
83f8(1): push %rbx
83f9(2): xor %ebx,%ebx
83fb(3): mov %rdi,%r12
83fe(7): lea 0x203c9f(%rip),%rbp
8405(4): sub $0x18,%rsp
8409(9): mov $0x28,%rax
8412(5): mov %rax,0x8(%rsp)
8417(2): xor %eax,%eax
8419(3): movsx (%rdi),%eax
841c(3): sub $0x30,%eax
841f(3): cmp $0x9,%eax
8422(2): jnbe 0x1a(%rip)
8424(2): jmp 0x5c(%rip)
8426(a): nop 0x0(%rax,%rax,1)
8430(3): add $0x1,%ebx
8433(4): add $0xc,%rbp
8437(3): cmp $0x23,%ebx
843a(2): jz 0x76(%rip)
843c(3): mov %r12,%rsi
843f(3): mov %rbp,%rdi
8442(5): call 0xffff995e(%rip)
8447(2): test %eax,%eax
8449(2): jnz 0xffffffe7(%rip)
844b(4): lea 0x0(%rbx,%rbx,2),%rdx
844f(7): lea 0x203c4a(%rip),%rax
8456(3): mov 0x0(%rax,%rdx,4),%eax
8459(4): mov %eax,0x0(%r13)
845d(3): sar $0x1f,%eax
8460(5): mov 0x8(%rsp),%rcx
8465(9): xor $0x28,%rcx
846e(6): jnz 0x102(%rip)
8474(4): add $0x18,%rsp
8478(1): pop %rbx
8479(1): pop %rbp
847a(2): pop %r12
847c(2): pop %r13
847e(1): ret near (%rsp)
847f(1): nop 
8480(5): mov $0xa,%edx
8485(3): mov %rsp,%rsi
8488(5): call 0xffff9938(%rip)
848d(4): mov (%rsp),%rdx
8491(3): cmp $0x0,(%rdx)
8494(2): jnz 0x8(%rip)
8496(4): cmp $0x40,%rax
849a(2): jle 0xffffffbf(%rip)
849c(8): mov $0xffffffff,0x0(%r13)
84a4(5): mov $0xffffffff,%eax
84a9(2): jmp 0xffffffb7(%rip)
84ab(5): nop 0x0(%rax,%rax,1)
84b0(5): call 0xffff9a60(%rip)
84b5(2): mov %eax,%ebp
84b7(5): call 0xffff9a99(%rip)
84bc(2): test %ebp,%ebp
84be(2): mov %eax,%ebx
84c0(2): jle 0x1c(%rip)
84c2(7): lea 0x20c2(%rip),%rdi
84c9(5): mov $0x5,%ecx
84ce(3): mov %r12,%rsi
84d1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
84d3(3): setnbe %al
84d6(2): sbb $0x0,%al
84d8(2): test %al,%al
84da(2): jz 0x59(%rip)
84dc(2): test %ebx,%ebx
84de(2): jle 0xffffffbe(%rip)
84e0(7): lea 0x20aa(%rip),%rdi
84e7(5): mov $0x5,%ecx
84ec(3): mov %r12,%rsi
84ef(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
84f1(3): setnbe %al
84f4(2): sbb $0x0,%al
84f6(2): test %al,%al
84f8(2): jnz 0xffffffa4(%rip)
84fa(5): lea 0x5(%r12),%rdi
84ff(5): mov $0xa,%edx
8504(3): mov %rsp,%rsi
8507(5): call 0xffff98b9(%rip)
850c(4): mov (%rsp),%rdx
8510(3): cmp $0x0,(%rdx)
8513(2): jnz 0xffffff89(%rip)
8515(2): sub %ebx,%ebp
8517(3): movsxd %ebp,%rbp
851a(3): cmp %rbp,%rax
851d(6): jl 0xffffff7f(%rip)
8523(3): test %rax,%rax
8526(6): jnle 0xffffff76(%rip)
852c(2): add %ebx,%eax
852e(5): jmp 0xffffff2b(%rip)
8533(5): lea 0x5(%r12),%rdi
8538(5): mov $0xa,%edx
853d(3): mov %rsp,%rsi
8540(5): call 0xffff9880(%rip)
8545(4): mov (%rsp),%rdx
8549(3): cmp $0x0,(%rdx)
854c(6): jnz 0xffffff50(%rip)
8552(3): test %rax,%rax
8555(6): js 0xffffff47(%rip)
855b(2): sub %ebp,%ebx
855d(3): movsxd %ebx,%rdx
8560(3): cmp %rdx,%rax
8563(6): jnle 0xffffff39(%rip)
8569(2): add %ebp,%eax
856b(5): jmp 0xfffffeee(%rip)
8570(5): call 0xffff9700(%rip)

"sig2str" :
8580(1): push %rbp
8581(7): lea 0x203b18(%rip),%rax
8588(1): push %rbx
8589(2): xor %edx,%edx
858b(2): mov %edi,%ebx
858d(3): mov %rsi,%rdi
8590(4): sub $0x18,%rsp
8594(3): mov %rax,%rcx
8597(2): jmp 0x15(%rip)
8599(7): nop 0x0(%rax)
85a0(3): add $0x1,%edx
85a3(4): add $0xc,%rcx
85a7(3): cmp $0x23,%edx
85aa(2): jz 0x26(%rip)
85ac(2): cmp %ebx,(%rcx)
85ae(2): jnz 0xfffffff2(%rip)
85b0(4): lea 0x0(%rdx,%rdx,2),%rdx
85b4(5): lea 0x4(%rax,%rdx,4),%rsi
85b9(5): call 0xffff95e7(%rip)
85be(2): xor %eax,%eax
85c0(4): add $0x18,%rsp
85c4(1): pop %rbx
85c5(1): pop %rbp
85c6(1): ret near (%rsp)
85c7(9): nop 0x0(%rax,%rax,1)
85d0(5): mov %rdi,0x8(%rsp)
85d5(5): call 0xffff993b(%rip)
85da(2): mov %eax,%ebp
85dc(5): call 0xffff9974(%rip)
85e1(2): cmp %ebx,%ebp
85e3(2): jnle 0x6e(%rip)
85e5(2): cmp %ebx,%eax
85e7(2): jl 0x6a(%rip)
85e9(2): mov %eax,%edx
85eb(5): mov 0x8(%rsp),%rdi
85f0(2): sub %ebp,%edx
85f2(2): sar $0x1,%edx
85f4(2): add %ebp,%edx
85f6(2): cmp %ebx,%edx
85f8(2): jnl 0x48(%rip)
85fa(5): mov $0x58,%edx
85ff(6): mov $0x414d5452,(%rdi)
8605(2): mov %eax,%ebp
8607(4): mov %dx,0x4(%rdi)
860b(2): mov %ebx,%eax
860d(2): sub %ebp,%eax
860f(2): jz 0xffffffb1(%rip)
8611(7): lea 0x1f7f(%rip),%rcx
8618(3): mov %eax,%r8d
861b(4): add $0x5,%rdi
861f(7): mov $0xffffffff,%rdx
8626(5): mov $0x1,%esi
862b(2): xor %eax,%eax
862d(5): call 0xffff9993(%rip)
8632(4): add $0x18,%rsp
8636(2): xor %eax,%eax
8638(1): pop %rbx
8639(1): pop %rbp
863a(1): ret near (%rsp)
863b(5): nop 0x0(%rax,%rax,1)
8640(5): mov $0x4e,%ecx
8645(6): mov $0x494d5452,(%rdi)
864b(4): mov %cx,0x4(%rdi)
864f(2): jmp 0xffffffbc(%rip)
8651(5): mov $0xffffffff,%eax
8656(5): jmp 0xffffff6a(%rip)

"close_stream" :
8660(2): push %r12
8662(1): push %rbp
8663(3): mov %rdi,%rbp
8666(1): push %rbx
8667(5): call 0xffff9549(%rip)
866c(3): mov 0x0(%rbp),%ebx
866f(3): mov %rbp,%rdi
8672(3): mov %rax,%r12
8675(5): call 0xfffffbcb(%rip)
867a(3): and $0x20,%ebx
867d(2): test %ebx,%ebx
867f(2): jnz 0x19(%rip)
8681(2): test %eax,%eax
8683(2): jz 0xc(%rip)
8685(3): test %r12,%r12
8688(5): mov $0xffffffff,%eax
868d(2): jz 0x3b(%rip)
868f(1): pop %rbx
8690(1): pop %rbp
8691(2): pop %r12
8693(1): ret near (%rsp)
8694(4): nop 0x0(%rax)
8698(2): test %eax,%eax
869a(2): jnz 0x1e(%rip)
869c(5): call 0xffff94d4(%rip)
86a1(6): mov $0x0,(%rax)
86a7(5): mov $0xffffffff,%eax
86ac(1): pop %rbx
86ad(1): pop %rbp
86ae(2): pop %r12
86b0(1): ret near (%rsp)
86b1(7): nop 0x0(%rax)
86b8(1): pop %rbx
86b9(5): mov $0xffffffff,%eax
86be(1): pop %rbp
86bf(2): pop %r12
86c1(1): ret near (%rsp)
86c2(6): nop 0x0(%rax,%rax,1)
86c8(5): call 0xffff94a8(%rip)
86cd(3): cmp $0x9,(%rax)
86d0(1): pop %rbx
86d1(1): pop %rbp
86d2(2): pop %r12
86d4(3): setnz %al
86d7(3): movzx %al,%eax
86da(2): neg %eax
86dc(1): ret near (%rsp)

"hard_locale" :
86e0(4): sub $0x8,%rsp
86e4(2): xor %esi,%esi
86e6(5): call 0xffff978a(%rip)
86eb(3): mov %rax,%rdx
86ee(5): mov $0x1,%eax
86f3(3): test %rdx,%rdx
86f6(2): jz 0x1f(%rip)
86f8(7): lea 0x1e9c(%rip),%rdi
86ff(5): mov $0x2,%ecx
8704(3): mov %rdx,%rsi
8707(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8709(3): setnbe %cl
870c(3): sbb $0x0,%cl
870f(2): xor %eax,%eax
8711(2): test %cl,%cl
8713(2): jnz 0xd(%rip)
8715(4): add $0x8,%rsp
8719(1): ret near (%rsp)
871a(6): nop 0x0(%rax,%rax,1)
8720(7): lea 0x1e76(%rip),%rdi
8727(5): mov $0x6,%ecx
872c(3): mov %rdx,%rsi
872f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8731(3): setnbe %al
8734(2): sbb $0x0,%al
8736(2): test %al,%al
8738(3): setnz %al
873b(4): add $0x8,%rsp
873f(1): ret near (%rsp)

"locale_charset" :
8740(4): sub $0x8,%rsp
8744(5): mov $0xe,%edi
8749(5): call 0xffff96c7(%rip)
874e(3): test %rax,%rax
8751(2): jz 0x1f(%rip)
8753(3): cmp $0x0,(%rax)
8756(7): lea 0x1e46(%rip),%rdx
875d(4): cmove %rdx,%rax
8761(4): add $0x8,%rsp
8765(1): ret near (%rsp)
8766(a): nop 0x0(%rax,%rax,1)
8770(7): lea 0x1e2c(%rip),%rax
8777(4): add $0x8,%rsp
877b(1): ret near (%rsp)

"dup_safer" :
8780(5): mov $0x3,%edx
8785(2): xor %esi,%esi
8787(2): xor %eax,%eax
8789(5): jmp 0x7(%rip)

"rpl_fcntl" :
8790(2): push %r12
8792(1): push %rbp
8793(2): mov %edi,%ebp
8795(1): push %rbx
8796(4): sub $0x50,%rsp
879a(9): mov $0x28,%rax
87a3(5): mov %rax,0x18(%rsp)
87a8(2): xor %eax,%eax
87aa(5): lea 0x70(%rsp),%rax
87af(2): test %esi,%esi
87b1(5): mov %rdx,0x30(%rsp)
87b6(5): mov %rcx,0x38(%rsp)
87bb(5): mov %r8,0x40(%rsp)
87c0(5): mov %rax,0x8(%rsp)
87c5(5): lea 0x20(%rsp),%rax
87ca(5): mov %r9,0x48(%rsp)
87cf(7): mov $0x10,(%rsp)
87d6(5): mov %rax,0x10(%rsp)
87db(6): jz 0x207(%rip)
87e1(6): cmp $0x406,%esi
87e7(2): jnz 0x49(%rip)
87e9(5): mov 0x10(%rsp),%rax
87ee(7): cmp $0x0,0x203e63(%rip)
87f5(7): mov $0x18,(%rsp)
87fc(4): mov 0x10(%rax),%r12d
8800(3): mov %r12d,%edx
8803(6): js 0x130(%rip)
8809(2): xor %eax,%eax
880b(5): mov $0x406,%esi
8810(5): call 0xffff93c0(%rip)
8815(2): test %eax,%eax
8817(2): mov %eax,%ebx
8819(6): js 0x18f(%rip)
881f(a): mov $0x1,0x203e2f(%rip)
8829(2): jmp 0x47(%rip)
882b(5): nop 0x0(%rax,%rax,1)
8830(3): cmp $0xb,%esi
8833(2): jz 0x2d(%rip)
8835(2): jnle 0x5b(%rip)
8837(3): cmp $0x4,%esi
883a(6): jz 0xd6(%rip)
8840(6): jnle 0xc0(%rip)
8846(3): cmp $0x2,%esi
8849(6): jz 0xc7(%rip)
884f(2): jnle 0x11(%rip)
8851(3): cmp $0x1,%esi
8854(2): jnz 0x64(%rip)
8856(a): nop 0x0(%rax,%rax,1)
8860(2): mov %ebp,%edi
8862(2): xor %eax,%eax
8864(5): call 0xffff936c(%rip)
8869(2): mov %eax,%ebx
886b(5): nop 0x0(%rax,%rax,1)
8870(5): mov 0x18(%rsp),%rcx
8875(9): xor $0x28,%rcx
887e(2): mov %ebx,%eax
8880(6): jnz 0x15d(%rip)
8886(4): add $0x50,%rsp
888a(1): pop %rbx
888b(1): pop %rbp
888c(2): pop %r12
888e(1): ret near (%rsp)
888f(1): nop 
8890(6): cmp $0x407,%esi
8896(2): jnle 0x4a(%rip)
8898(6): cmp $0x406,%esi
889e(2): jnl 0x72(%rip)
88a0(6): cmp $0x401,%esi
88a6(2): jz 0xffffffba(%rip)
88a8(6): cmp $0x402,%esi
88ae(2): jz 0x62(%rip)
88b0(6): cmp $0x400,%esi
88b6(2): jz 0x5a(%rip)
88b8(3): mov (%rsp),%eax
88bb(3): cmp $0x2f,%eax
88be(6): jnbe 0x13c(%rip)
88c4(5): add 0x10(%rsp),%rax
88c9(3): mov (%rax),%rdx
88cc(2): mov %ebp,%edi
88ce(2): xor %eax,%eax
88d0(5): call 0xffff9300(%rip)
88d5(2): mov %eax,%ebx
88d7(2): jmp 0xffffff99(%rip)
88d9(7): nop 0x0(%rax)
88e0(6): cmp $0x409,%esi
88e6(2): jz 0x2a(%rip)
88e8(6): jl 0xffffff78(%rip)
88ee(6): cmp $0x40a,%esi
88f4(2): jnz 0xffffffc4(%rip)
88f6(5): jmp 0xffffff6a(%rip)
88fb(5): nop 0x0(%rax,%rax,1)
8900(3): cmp $0x9,%esi
8903(6): jz 0xffffff5d(%rip)
8909(2): jnle 0x7(%rip)
890b(3): cmp $0x8,%esi
890e(2): jnz 0xffffffaa(%rip)
8910(3): mov (%rsp),%eax
8913(3): cmp $0x2f,%eax
8916(6): jnbe 0xee(%rip)
891c(5): add 0x10(%rsp),%rax
8921(2): mov (%rax),%edx
8923(2): mov %ebp,%edi
8925(2): xor %eax,%eax
8927(5): call 0xffff92a9(%rip)
892c(2): mov %eax,%ebx
892e(5): jmp 0xffffff42(%rip)
8933(2): xor %esi,%esi
8935(2): xor %eax,%eax
8937(5): call 0xffff9299(%rip)
893c(2): test %eax,%eax
893e(2): mov %eax,%ebx
8940(6): js 0xffffff30(%rip)
8946(7): cmp $0xff,0x203d0b(%rip)
894d(6): jnz 0xffffff23(%rip)
8953(2): xor %eax,%eax
8955(5): mov $0x1,%esi
895a(2): mov %ebx,%edi
895c(5): call 0xffff9274(%rip)
8961(2): test %eax,%eax
8963(2): js 0x1e(%rip)
8965(3): or $0x1,%eax
8968(5): mov $0x2,%esi
896d(2): mov %ebx,%edi
896f(2): mov %eax,%edx
8971(2): xor %eax,%eax
8973(5): call 0xffff925d(%rip)
8978(3): cmp $0xff,%eax
897b(6): jnz 0xfffffef5(%rip)
8981(5): call 0xffff91ef(%rip)
8986(3): mov (%rax),%r12d
8989(3): mov %rax,%rbp
898c(2): mov %ebx,%edi
898e(5): call 0xffff9392(%rip)
8993(5): mov $0xffffffff,%ebx
8998(4): mov %r12d,0x0(%rbp)
899c(5): jmp 0xfffffed4(%rip)
89a1(7): nop 0x0(%rax)
89a8(5): call 0xffff91c8(%rip)
89ad(3): cmp $0x16,(%rax)
89b0(6): jnz 0xfffffe6f(%rip)
89b6(2): xor %esi,%esi
89b8(2): xor %eax,%eax
89ba(3): mov %r12d,%edx
89bd(2): mov %ebp,%edi
89bf(5): call 0xffff9211(%rip)
89c4(2): test %eax,%eax
89c6(2): mov %eax,%ebx
89c8(6): js 0xfffffea8(%rip)
89ce(a): mov $0xffffffff,0x203c80(%rip)
89d8(5): jmp 0xffffff7b(%rip)
89dd(5): call 0xffff9293(%rip)
89e2(5): mov 0x10(%rsp),%rax
89e7(2): xor %esi,%esi
89e9(3): mov 0x10(%rax),%edx
89ec(2): xor %eax,%eax
89ee(5): call 0xffff91e2(%rip)
89f3(2): mov %eax,%ebx
89f5(5): jmp 0xfffffe7b(%rip)
89fa(5): mov 0x8(%rsp),%rax
89ff(5): jmp 0xfffffeca(%rip)
8a04(5): mov 0x8(%rsp),%rax
8a09(5): jmp 0xffffff18(%rip)

"__libc_csu_init" :
8a10(2): push %r15
8a12(2): push %r14
8a14(3): mov %rdx,%r15
8a17(2): push %r13
8a19(2): push %r12
8a1b(7): lea 0x202ece(%rip),%r12
8a22(1): push %rbp
8a23(7): lea 0x202ece(%rip),%rbp
8a2a(1): push %rbx
8a2b(3): mov %edi,%r13d
8a2e(3): mov %rsi,%r14
8a31(3): sub %r12,%rbp
8a34(4): sub $0x8,%rsp
8a38(4): sar $0x3,%rbp
8a3c(5): call 0xffff90cc(%rip)
8a41(3): test %rbp,%rbp
8a44(2): jz 0x22(%rip)
8a46(2): xor %ebx,%ebx
8a48(8): nop 0x0(%rax,%rax,1)
8a50(3): mov %r15,%rdx
8a53(3): mov %r14,%rsi
8a56(3): mov %r13d,%edi
8a59(4): call 0x0(%r12,%rbx,8)
8a5d(4): add $0x1,%rbx
8a61(3): cmp %rbx,%rbp
8a64(2): jnz 0xffffffec(%rip)
8a66(4): add $0x8,%rsp
8a6a(1): pop %rbx
8a6b(1): pop %rbp
8a6c(2): pop %r12
8a6e(2): pop %r13
8a70(2): pop %r14
8a72(2): pop %r15
8a74(1): ret near (%rsp)

"atexit" :
8a90(7): mov 0x203571(%rip),%rdx
8a97(2): xor %esi,%esi
8a99(5): jmp 0xffff9457(%rip)

"_fini" :
8aa0(4): sub $0x8,%rsp
8aa4(4): add $0x8,%rsp
8aa8(1): ret near (%rsp)

