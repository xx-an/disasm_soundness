
"free@plt" :
1440(6): jmp 0x2089fa(%rip)
1446(5): push $0x0

"abort@plt" :
1450(6): jmp 0x2089f2(%rip)
1456(5): push $0x1

"__errno_location@plt" :
1460(6): jmp 0x2089ea(%rip)
1466(5): push $0x2

"strncmp@plt" :
1470(6): jmp 0x2089e2(%rip)
1476(5): push $0x3

"_exit@plt" :
1480(6): jmp 0x2089da(%rip)
1486(5): push $0x4

"__fpending@plt" :
1490(6): jmp 0x2089d2(%rip)
1496(5): push $0x5

"readlink@plt" :
14a0(6): jmp 0x2089ca(%rip)
14a6(5): push $0x6

"textdomain@plt" :
14b0(6): jmp 0x2089c2(%rip)
14b6(5): push $0x7

"fclose@plt" :
14c0(6): jmp 0x2089ba(%rip)
14c6(5): push $0x8

"bindtextdomain@plt" :
14d0(6): jmp 0x2089b2(%rip)
14d6(5): push $0x9

"dcgettext@plt" :
14e0(6): jmp 0x2089aa(%rip)
14e6(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
14f0(6): jmp 0x2089a2(%rip)
14f6(5): push $0xb

"strlen@plt" :
1500(6): jmp 0x20899a(%rip)
1506(5): push $0xc

"__lxstat@plt" :
1510(6): jmp 0x208992(%rip)
1516(5): push $0xd

"__stack_chk_fail@plt" :
1520(6): jmp 0x20898a(%rip)
1526(5): push $0xe

"getopt_long@plt" :
1530(6): jmp 0x208982(%rip)
1536(5): push $0xf

"mbrtowc@plt" :
1540(6): jmp 0x20897a(%rip)
1546(5): push $0x10

"__fxstatat@plt" :
1550(6): jmp 0x208972(%rip)
1556(5): push $0x11

"__overflow@plt" :
1560(6): jmp 0x20896a(%rip)
1566(5): push $0x12

"strrchr@plt" :
1570(6): jmp 0x208962(%rip)
1576(5): push $0x13

"lseek@plt" :
1580(6): jmp 0x20895a(%rip)
1586(5): push $0x14

"memset@plt" :
1590(6): jmp 0x208952(%rip)
1596(5): push $0x15

"getcwd@plt" :
15a0(6): jmp 0x20894a(%rip)
15a6(5): push $0x16

"strspn@plt" :
15b0(6): jmp 0x208942(%rip)
15b6(5): push $0x17

"memcmp@plt" :
15c0(6): jmp 0x20893a(%rip)
15c6(5): push $0x18

"fputs_unlocked@plt" :
15d0(6): jmp 0x208932(%rip)
15d6(5): push $0x19

"calloc@plt" :
15e0(6): jmp 0x20892a(%rip)
15e6(5): push $0x1a

"strcmp@plt" :
15f0(6): jmp 0x208922(%rip)
15f6(5): push $0x1b

"memcpy@plt" :
1600(6): jmp 0x20891a(%rip)
1606(5): push $0x1c

"fileno@plt" :
1610(6): jmp 0x208912(%rip)
1616(5): push $0x1d

"__xstat@plt" :
1620(6): jmp 0x20890a(%rip)
1626(5): push $0x1e

"malloc@plt" :
1630(6): jmp 0x208902(%rip)
1636(5): push $0x1f

"fflush@plt" :
1640(6): jmp 0x2088fa(%rip)
1646(5): push $0x20

"nl_langinfo@plt" :
1650(6): jmp 0x2088f2(%rip)
1656(5): push $0x21

"__freading@plt" :
1660(6): jmp 0x2088ea(%rip)
1666(5): push $0x22

"realloc@plt" :
1670(6): jmp 0x2088e2(%rip)
1676(5): push $0x23

"setlocale@plt" :
1680(6): jmp 0x2088da(%rip)
1686(5): push $0x24

"__printf_chk@plt" :
1690(6): jmp 0x2088d2(%rip)
1696(5): push $0x25

"memmove@plt" :
16a0(6): jmp 0x2088ca(%rip)
16a6(5): push $0x26

"error@plt" :
16b0(6): jmp 0x2088c2(%rip)
16b6(5): push $0x27

"fseeko@plt" :
16c0(6): jmp 0x2088ba(%rip)
16c6(5): push $0x28

"__cxa_atexit@plt" :
16d0(6): jmp 0x2088b2(%rip)
16d6(5): push $0x29

"exit@plt" :
16e0(6): jmp 0x2088aa(%rip)
16e6(5): push $0x2a

"fwrite@plt" :
16f0(6): jmp 0x2088a2(%rip)
16f6(5): push $0x2b

"__fprintf_chk@plt" :
1700(6): jmp 0x20889a(%rip)
1706(5): push $0x2c

"mbsinit@plt" :
1710(6): jmp 0x208892(%rip)
1716(5): push $0x2d

"iswprint@plt" :
1720(6): jmp 0x20888a(%rip)
1726(5): push $0x2e

"__ctype_b_loc@plt" :
1730(6): jmp 0x208882(%rip)
1736(5): push $0x2f

".plt.got" :
1740(6): jmp 0x20889a(%rip)
1746(2): nop 

"_init" :
1410(4): sub $0x8,%rsp
1414(7): mov 0x208bb5(%rip),%rax
141b(3): test %rax,%rax
141e(2): jz 0x4(%rip)
1420(2): call %rax
1422(4): add $0x8,%rsp
1426(1): ret near (%rsp)

"main" :
1750(2): push %r15
1752(2): push %r14
1754(2): push %r13
1756(2): push %r12
1758(3): xor %r13d,%r13d
175b(1): push %rbp
175c(1): push %rbx
175d(2): mov %edi,%ebp
175f(3): mov %rsi,%rbx
1762(6): mov $0xffffffff,%r12d
1768(4): sub $0x18,%rsp
176c(3): mov (%rsi),%rdi
176f(5): call 0x2431(%rip)
1774(7): lea 0x5e86(%rip),%rsi
177b(5): mov $0x6,%edi
1780(5): call 0xffffff00(%rip)
1785(7): lea 0x5204(%rip),%rsi
178c(7): lea 0x51d4(%rip),%rdi
1793(5): call 0xfffffd3d(%rip)
1798(7): lea 0x51c8(%rip),%rdi
179f(5): call 0xfffffd11(%rip)
17a4(7): lea 0xea5(%rip),%rdi
17ab(5): call 0x5115(%rip)
17b0(7): lea 0x2082c9(%rip),%rcx
17b7(7): lea 0x51fa(%rip),%rdx
17be(3): xor %r8d,%r8d
17c1(3): mov %rbx,%rsi
17c4(2): mov %ebp,%edi
17c6(5): call 0xfffffd6a(%rip)
17cb(3): cmp $0xff,%eax
17ce(6): jz 0xf1(%rip)
17d4(3): cmp $0x6d,%eax
17d7(2): jz 0x79(%rip)
17d9(2): jle 0x27(%rip)
17db(3): cmp $0x73,%eax
17de(2): jz 0x64(%rip)
17e0(2): jle 0x48(%rip)
17e2(3): cmp $0x76,%eax
17e5(2): jz 0x7b(%rip)
17e7(3): cmp $0x7a,%eax
17ea(6): jnz 0x24d(%rip)
17f0(6): mov $0x1,%r13d
17f6(2): jmp 0xffffffba(%rip)
17f8(8): nop 0x0(%rax,%rax,1)
1800(5): cmp $0xffffff7e,%eax
1805(6): jz 0x24a(%rip)
180b(2): jle 0x75(%rip)
180d(3): cmp $0x65,%eax
1810(2): jz 0x60(%rip)
1812(3): cmp $0x66,%eax
1815(6): jnz 0x222(%rip)
181b(6): mov $0x1,%r12d
1821(2): jmp 0xffffff8f(%rip)
1823(5): nop 0x0(%rax,%rax,1)
1828(3): cmp $0x6e,%eax
182b(2): jnz 0xe(%rip)
182d(7): mov $0x1,0x208876(%rip)
1834(5): jmp 0xffffff7c(%rip)
1839(3): cmp $0x71,%eax
183c(6): jnz 0x1fb(%rip)
1842(7): mov $0x0,0x208860(%rip)
1849(5): jmp 0xffffff67(%rip)
184e(2): nop 
1850(6): mov $0x2,%r12d
1856(5): jmp 0xffffff5a(%rip)
185b(5): nop 0x0(%rax,%rax,1)
1860(7): mov $0x1,0x208842(%rip)
1867(5): jmp 0xffffff49(%rip)
186c(4): nop 0x0(%rax)
1870(3): xor %r12d,%r12d
1873(5): jmp 0xffffff3d(%rip)
1878(8): nop 0x0(%rax,%rax,1)
1880(5): cmp $0xffffff7d,%eax
1885(6): jnz 0x1b2(%rip)
188b(7): mov 0x2087f6(%rip),%rdi
1892(7): mov 0x208777(%rip),%rcx
1899(7): lea 0x5108(%rip),%r8
18a0(7): lea 0x50bc(%rip),%rdx
18a7(7): lea 0x5036(%rip),%rsi
18ae(3): xor %r9d,%r9d
18b1(2): xor %eax,%eax
18b3(5): call 0x46cd(%rip)
18b8(2): xor %edi,%edi
18ba(5): call 0xfffffe26(%rip)
18bf(6): mov 0x2087cb(%rip),%edx
18c5(2): cmp %ebp,%edx
18c7(2): mov %edx,%eax
18c9(6): jnl 0x14d(%rip)
18cf(2): mov %ebp,%ecx
18d1(2): sub %edx,%ecx
18d3(3): sub $0x1,%ecx
18d6(2): jz 0x20(%rip)
18d8(7): cmp $0x0,0x2087cb(%rip)
18df(6): jnz 0x10b(%rip)
18e5(2): cmp %edx,%ebp
18e7(7): mov $0x0,0x2087bc(%rip)
18ee(2): mov %edx,%eax
18f0(6): jle 0xe5(%rip)
18f6(4): cmp $0x1,%r13b
18fa(2): sbb %ecx,%ecx
18fc(3): xor %r14d,%r14d
18ff(3): and $0xa,%ecx
1902(4): mov %ecx,0xc(%rsp)
1906(4): mov %cl,0xb(%rsp)
190a(2): jmp 0x5d(%rip)
190c(4): nop 0x0(%rax)
1910(7): mov 0x208771(%rip),%rsi
1917(3): mov %r15,%rdi
191a(5): call 0xfffffcb6(%rip)
191f(7): cmp $0x0,0x208784(%rip)
1926(2): jnz 0x26(%rip)
1928(7): mov 0x208759(%rip),%rdi
192f(4): mov 0x28(%rdi),%rax
1933(4): cmp %rax,0x30(%rdi)
1937(6): jbe 0x10a(%rip)
193d(5): movzx 0xb(%rsp),%edx
1942(4): lea 0x1(%rax),%rcx
1946(4): mov %rcx,0x28(%rdi)
194a(2): mov %dl,(%rax)
194c(3): mov %r15,%rdi
194f(5): call 0xfffffaf1(%rip)
1954(6): mov 0x208736(%rip),%eax
195a(3): add $0x1,%eax
195d(2): cmp %ebp,%eax
195f(6): mov %eax,0x20872b(%rip)
1965(2): jnl 0x73(%rip)
1967(2): cwde 
1969(4): cmp $0xff,%r12d
196d(4): mov 0x0(%rbx,%rax,8),%r13
1971(2): jz 0x52(%rip)
1973(3): mov %r12d,%esi
1976(3): mov %r13,%rdi
1979(5): call 0x677(%rip)
197e(3): mov %rax,%r15
1981(3): test %r15,%r15
1984(2): jnz 0xffffff8c(%rip)
1986(7): cmp $0x0,0x20871c(%rip)
198d(6): mov $0x1,%r14d
1993(2): jz 0xffffffc1(%rip)
1995(3): mov %r13,%rdx
1998(2): xor %edi,%edi
199a(5): mov $0x3,%esi
199f(5): call 0x3d41(%rip)
19a4(3): mov %rax,%r13
19a7(5): call 0xfffffab9(%rip)
19ac(2): mov (%rax),%esi
19ae(7): lea 0x5626(%rip),%rdx
19b5(3): mov %r13,%rcx
19b8(2): xor %edi,%edi
19ba(2): xor %eax,%eax
19bc(5): call 0xfffffcf4(%rip)
19c1(2): jmp 0xffffff93(%rip)
19c3(5): mov $0x3f,%esi
19c8(3): mov %r13,%rdi
19cb(5): call 0x535(%rip)
19d0(3): mov %rax,%r15
19d3(2): jmp 0xffffffae(%rip)
19d5(3): xor %r14d,%r14d
19d8(4): add $0x18,%rsp
19dc(3): mov %r14d,%eax
19df(1): pop %rbx
19e0(1): pop %rbp
19e1(2): pop %r12
19e3(2): pop %r13
19e5(2): pop %r14
19e7(2): pop %r15
19e9(1): ret near (%rsp)
19ea(7): lea 0x55a7(%rip),%rsi
19f1(5): mov $0x5,%edx
19f6(2): xor %edi,%edi
19f8(5): call 0xfffffae8(%rip)
19fd(2): xor %esi,%esi
19ff(3): mov %rax,%rdx
1a02(2): xor %edi,%edi
1a04(2): xor %eax,%eax
1a06(5): call 0xfffffcaa(%rip)
1a0b(6): mov 0x20867f(%rip),%edx
1a11(5): jmp 0xfffffed4(%rip)
1a16(7): lea 0x4fa4(%rip),%rsi
1a1d(5): mov $0x5,%edx
1a22(2): xor %edi,%edi
1a24(5): call 0xfffffabc(%rip)
1a29(2): xor %esi,%esi
1a2b(3): mov %rax,%rdx
1a2e(2): xor %edi,%edi
1a30(2): xor %eax,%eax
1a32(5): call 0xfffffc7e(%rip)
1a37(5): mov $0x1,%edi
1a3c(5): call 0x134(%rip)
1a41(4): mov 0xc(%rsp),%esi
1a45(5): call 0xfffffb1b(%rip)
1a4a(5): jmp 0xffffff02(%rip)
1a4f(2): xor %edi,%edi
1a51(5): call 0x11f(%rip)

"_start" :
1a60(2): xor %ebp,%ebp
1a62(3): mov %rdx,%r9
1a65(1): pop %rsi
1a66(3): mov %rsp,%rdx
1a69(4): and $0xfffffff0,%rsp
1a6d(1): push %rax
1a6e(1): push %rsp
1a6f(7): lea 0x4e3a(%rip),%r8
1a76(7): lea 0x4dc3(%rip),%rcx
1a7d(7): lea 0xfffffccc(%rip),%rdi
1a84(6): call 0x20853e(%rip)
1a8a(1): hlt 

"deregister_tm_clones" :
1a90(7): lea 0x2085e9(%rip),%rdi
1a97(1): push %rbp
1a98(7): lea 0x2085e1(%rip),%rax
1a9f(3): cmp %rdi,%rax
1aa2(3): mov %rsp,%rbp
1aa5(2): jz 0x1b(%rip)
1aa7(7): mov 0x208512(%rip),%rax
1aae(3): test %rax,%rax
1ab1(2): jz 0xf(%rip)
1ab3(1): pop %rbp
1ab4(2): jmp %rax
1ab6(a): nop 0x0(%rax,%rax,1)
1ac0(1): pop %rbp
1ac1(1): ret near (%rsp)

"register_tm_clones" :
1ad0(7): lea 0x2085a9(%rip),%rdi
1ad7(7): lea 0x2085a2(%rip),%rsi
1ade(1): push %rbp
1adf(3): sub %rdi,%rsi
1ae2(3): mov %rsp,%rbp
1ae5(4): sar $0x3,%rsi
1ae9(3): mov %rsi,%rax
1aec(4): shr $0x3f,%rax
1af0(3): add %rax,%rsi
1af3(3): sar $0x1,%rsi
1af6(2): jz 0x1a(%rip)
1af8(7): mov 0x2084d9(%rip),%rax
1aff(3): test %rax,%rax
1b02(2): jz 0xe(%rip)
1b04(1): pop %rbp
1b05(2): jmp %rax
1b07(9): nop 0x0(%rax,%rax,1)
1b10(1): pop %rbp
1b11(1): ret near (%rsp)

"__do_global_dtors_aux" :
1b20(7): cmp $0x0,0x208581(%rip)
1b27(2): jnz 0x31(%rip)
1b29(8): cmp $0x0,0x2084af(%rip)
1b31(1): push %rbp
1b32(3): mov %rsp,%rbp
1b35(2): jz 0xe(%rip)
1b37(7): mov 0x2084ca(%rip),%rdi
1b3e(5): call 0xfffffc02(%rip)
1b43(5): call 0xffffff4d(%rip)
1b48(7): mov $0x1,0x208559(%rip)
1b4f(1): pop %rbp
1b50(1): ret near (%rsp)
1b51(7): nop 0x0(%rax)
1b58(2): REP ret near (%rsp)

"frame_dummy" :
1b60(1): push %rbp
1b61(3): mov %rsp,%rbp
1b64(1): pop %rbp
1b65(5): jmp 0xffffff6b(%rip)

"usage" :
1b70(2): push %r13
1b72(2): push %r12
1b74(5): mov $0x5,%edx
1b79(1): push %rbp
1b7a(1): push %rbx
1b7b(2): mov %edi,%ebp
1b7d(7): sub $0x88,%rsp
1b84(7): mov 0x208535(%rip),%rbx
1b8b(9): mov $0x28,%rax
1b94(5): mov %rax,0x78(%rsp)
1b99(2): xor %eax,%eax
1b9b(2): test %edi,%edi
1b9d(2): jz 0x30(%rip)
1b9f(7): lea 0x4e9a(%rip),%rsi
1ba6(2): xor %edi,%edi
1ba8(5): call 0xfffff938(%rip)
1bad(7): mov 0x2084ec(%rip),%rdi
1bb4(3): mov %rax,%rdx
1bb7(3): mov %rbx,%rcx
1bba(5): mov $0x1,%esi
1bbf(2): xor %eax,%eax
1bc1(5): call 0xfffffb3f(%rip)
1bc6(2): mov %ebp,%edi
1bc8(5): call 0xfffffb18(%rip)
1bcd(7): lea 0x4e94(%rip),%rsi
1bd4(2): xor %edi,%edi
1bd6(5): call 0xfffff90a(%rip)
1bdb(3): mov %rbx,%rdx
1bde(3): mov %rax,%rsi
1be1(5): mov $0x1,%edi
1be6(2): xor %eax,%eax
1be8(5): call 0xfffffaa8(%rip)
1bed(7): mov 0x208494(%rip),%rbx
1bf4(7): lea 0x4e8d(%rip),%rsi
1bfb(5): mov $0x5,%edx
1c00(2): xor %edi,%edi
1c02(5): call 0xfffff8de(%rip)
1c07(3): mov %rbx,%rsi
1c0a(3): mov %rax,%rdi
1c0d(5): call 0xfffff9c3(%rip)
1c12(7): mov 0x20846f(%rip),%rbx
1c19(7): lea 0x4ea0(%rip),%rsi
1c20(5): mov $0x5,%edx
1c25(2): xor %edi,%edi
1c27(5): call 0xfffff8b9(%rip)
1c2c(3): mov %rbx,%rsi
1c2f(3): mov %rax,%rdi
1c32(5): call 0xfffff99e(%rip)
1c37(7): mov 0x20844a(%rip),%rbx
1c3e(7): lea 0x5033(%rip),%rsi
1c45(5): mov $0x5,%edx
1c4a(2): xor %edi,%edi
1c4c(5): call 0xfffff894(%rip)
1c51(3): mov %rbx,%rsi
1c54(3): mov %rax,%rdi
1c57(5): call 0xfffff979(%rip)
1c5c(7): mov 0x208425(%rip),%rbx
1c63(7): lea 0x521e(%rip),%rsi
1c6a(5): mov $0x5,%edx
1c6f(2): xor %edi,%edi
1c71(5): call 0xfffff86f(%rip)
1c76(3): mov %rbx,%rsi
1c79(3): mov %rax,%rdi
1c7c(5): call 0xfffff954(%rip)
1c81(7): mov 0x208400(%rip),%rbx
1c88(7): lea 0x5229(%rip),%rsi
1c8f(5): mov $0x5,%edx
1c94(2): xor %edi,%edi
1c96(5): call 0xfffff84a(%rip)
1c9b(3): mov %rbx,%rsi
1c9e(3): mov %rax,%rdi
1ca1(7): lea 0x4c3c(%rip),%rbx
1ca8(5): call 0xfffff928(%rip)
1cad(7): lea 0x4c39(%rip),%rax
1cb4(7): lea 0x4c73(%rip),%rcx
1cbb(9): mov $0x0,0x60(%rsp)
1cc4(9): mov $0x0,0x68(%rsp)
1ccd(3): mov %rsp,%rdx
1cd0(4): mov %rax,(%rsp)
1cd4(7): lea 0x4c14(%rip),%rax
1cdb(5): mov %rcx,0x30(%rsp)
1ce0(7): lea 0x4c51(%rip),%rcx
1ce7(5): mov %rax,0x8(%rsp)
1cec(7): lea 0x4c74(%rip),%rax
1cf3(5): mov %rcx,0x40(%rsp)
1cf8(7): lea 0x4c43(%rip),%rcx
1cff(5): mov %rax,0x10(%rsp)
1d04(7): lea 0x4bf4(%rip),%rax
1d0b(5): mov %rcx,0x50(%rsp)
1d10(5): mov %rax,0x18(%rsp)
1d15(7): lea 0x4bf9(%rip),%rax
1d1c(5): mov %rax,0x20(%rsp)
1d21(7): lea 0x4bf7(%rip),%rax
1d28(5): mov %rax,0x28(%rsp)
1d2d(5): mov %rax,0x38(%rsp)
1d32(5): mov %rax,0x48(%rsp)
1d37(5): mov %rax,0x58(%rsp)
1d3c(4): nop 0x0(%rax)
1d40(4): add $0x10,%rdx
1d44(3): mov (%rdx),%rdi
1d47(3): test %rdi,%rdi
1d4a(2): jz 0x15(%rip)
1d4c(5): mov $0x9,%ecx
1d51(3): mov %rbx,%rsi
1d54(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1d56(3): setnbe %al
1d59(2): sbb $0x0,%al
1d5b(2): test %al,%al
1d5d(2): jnz 0xffffffe3(%rip)
1d5f(4): mov 0x8(%rdx),%r12
1d63(2): xor %edi,%edi
1d65(5): mov $0x5,%edx
1d6a(7): lea 0x4bdb(%rip),%rsi
1d71(3): test %r12,%r12
1d74(6): jz 0xc7(%rip)
1d7a(5): call 0xfffff766(%rip)
1d7f(7): lea 0x516a(%rip),%rcx
1d86(7): lea 0x4bd6(%rip),%rdx
1d8d(3): mov %rax,%rsi
1d90(5): mov $0x1,%edi
1d95(2): xor %eax,%eax
1d97(5): call 0xfffff8f9(%rip)
1d9c(2): xor %esi,%esi
1d9e(5): mov $0x5,%edi
1da3(5): call 0xfffff8dd(%rip)
1da8(3): test %rax,%rax
1dab(2): jz 0x1e(%rip)
1dad(7): lea 0x4bbd(%rip),%rsi
1db4(5): mov $0x3,%edx
1db9(3): mov %rax,%rdi
1dbc(5): call 0xfffff6b4(%rip)
1dc1(2): test %eax,%eax
1dc3(6): jnz 0x10d(%rip)
1dc9(7): lea 0x4ba5(%rip),%rsi
1dd0(2): xor %edi,%edi
1dd2(5): mov $0x5,%edx
1dd7(5): call 0xfffff709(%rip)
1ddc(7): lea 0x4b01(%rip),%rcx
1de3(7): lea 0x5106(%rip),%rdx
1dea(3): mov %rax,%rsi
1ded(5): mov $0x1,%edi
1df2(2): xor %eax,%eax
1df4(5): call 0xfffff89c(%rip)
1df9(3): cmp %rbx,%r12
1dfc(7): lea 0x4b06(%rip),%rcx
1e03(7): lea 0x57f7(%rip),%rbx
1e0a(4): cmove %rcx,%rbx
1e0e(7): lea 0x514b(%rip),%rsi
1e15(2): xor %edi,%edi
1e17(5): mov $0x5,%edx
1e1c(5): call 0xfffff6c4(%rip)
1e21(3): mov %rbx,%rcx
1e24(3): mov %rax,%rsi
1e27(3): mov %r12,%rdx
1e2a(5): mov $0x1,%edi
1e2f(2): xor %eax,%eax
1e31(5): call 0xfffff85f(%rip)
1e36(5): jmp 0xfffffd90(%rip)
1e3b(5): call 0xfffff6a5(%rip)
1e40(7): lea 0x50a9(%rip),%rcx
1e47(7): lea 0x4b15(%rip),%rdx
1e4e(3): mov %rax,%rsi
1e51(5): mov $0x1,%edi
1e56(2): xor %eax,%eax
1e58(5): call 0xfffff838(%rip)
1e5d(2): xor %esi,%esi
1e5f(5): mov $0x5,%edi
1e64(5): call 0xfffff81c(%rip)
1e69(3): test %rax,%rax
1e6c(2): jz 0x1a(%rip)
1e6e(7): lea 0x4afc(%rip),%rsi
1e75(5): mov $0x3,%edx
1e7a(3): mov %rax,%rdi
1e7d(5): call 0xfffff5f3(%rip)
1e82(2): test %eax,%eax
1e84(2): jnz 0x45(%rip)
1e86(7): lea 0x4ae8(%rip),%rsi
1e8d(5): mov $0x5,%edx
1e92(2): xor %edi,%edi
1e94(7): lea 0x4a49(%rip),%r12
1e9b(7): lea 0x4a67(%rip),%rbx
1ea2(5): call 0xfffff63e(%rip)
1ea7(7): lea 0x4a36(%rip),%rcx
1eae(7): lea 0x503b(%rip),%rdx
1eb5(3): mov %rax,%rsi
1eb8(5): mov $0x1,%edi
1ebd(2): xor %eax,%eax
1ebf(5): call 0xfffff7d1(%rip)
1ec4(5): jmp 0xffffff4a(%rip)
1ec9(7): lea 0x4a14(%rip),%r12
1ed0(7): mov 0x2081b1(%rip),%r13
1ed7(7): lea 0x503a(%rip),%rsi
1ede(2): xor %edi,%edi
1ee0(5): mov $0x5,%edx
1ee5(5): call 0xfffff5fb(%rip)
1eea(3): mov %r13,%rsi
1eed(3): mov %rax,%rdi
1ef0(5): call 0xfffff6e0(%rip)
1ef5(5): jmp 0xfffffed4(%rip)

"areadlink_with_size" :
1f00(2): push %r15
1f02(2): push %r14
1f04(5): mov $0x401,%eax
1f09(2): push %r13
1f0b(2): push %r12
1f0d(3): mov %rdi,%r13
1f10(1): push %rbp
1f11(1): push %rbx
1f12(4): lea 0x1(%rsi),%rbx
1f16(a): mov $0x4611686018427387903,%r14
1f20(a): mov $0x9223372036854775806,%r15
1f2a(4): sub $0x8,%rsp
1f2e(7): cmp $0x401,%rsi
1f35(4): cmovnb %rax,%rbx
1f39(7): nop 0x0(%rax)
1f40(3): mov %rbx,%rdi
1f43(5): call 0xfffff6ed(%rip)
1f48(3): test %rax,%rax
1f4b(3): mov %rax,%rbp
1f4e(2): jz 0x3d(%rip)
1f50(3): mov %rbx,%rdx
1f53(3): mov %rax,%rsi
1f56(3): mov %r13,%rdi
1f59(5): call 0xfffff547(%rip)
1f5e(3): test %rax,%rax
1f61(3): mov %rax,%r12
1f64(2): js 0x54(%rip)
1f66(3): cmp %r12,%rbx
1f69(2): jnbe 0x67(%rip)
1f6b(3): mov %rbp,%rdi
1f6e(5): call 0xfffff4d2(%rip)
1f73(3): cmp %r14,%rbx
1f76(2): jnbe 0x2a(%rip)
1f78(3): add %rbx,%rbx
1f7b(3): mov %rbx,%rdi
1f7e(5): call 0xfffff6b2(%rip)
1f83(3): test %rax,%rax
1f86(3): mov %rax,%rbp
1f89(2): jnz 0xffffffc7(%rip)
1f8b(4): add $0x8,%rsp
1f8f(3): mov %rbp,%rax
1f92(1): pop %rbx
1f93(1): pop %rbp
1f94(2): pop %r12
1f96(2): pop %r13
1f98(2): pop %r14
1f9a(2): pop %r15
1f9c(1): ret near (%rsp)
1f9d(3): nop (%rax)
1fa0(3): cmp %r15,%rbx
1fa3(2): jnbe 0x3d(%rip)
1fa5(a): mov $0x9223372036854775807,%rbx
1faf(2): jmp 0xffffff91(%rip)
1fb1(7): nop 0x0(%rax)
1fb8(5): call 0xfffff4a8(%rip)
1fbd(3): cmp $0x22,(%rax)
1fc0(2): jz 0xffffffa6(%rip)
1fc2(3): mov %rbp,%rdi
1fc5(2): xor %ebp,%ebp
1fc7(5): call 0xfffff479(%rip)
1fcc(2): jmp 0xffffffbf(%rip)
1fce(2): nop 
1fd0(6): mov $0x0,0x0(%rbp,%r12,1)
1fd6(2): jmp 0xffffffb5(%rip)
1fd8(8): nop 0x0(%rax,%rax,1)
1fe0(5): call 0xfffff480(%rip)
1fe5(2): xor %ebp,%ebp
1fe7(6): mov $0xc,(%rax)
1fed(2): jmp 0xffffff9e(%rip)

"canonicalize_filename_mode" :
1ff0(2): push %r15
1ff2(2): push %r14
1ff4(2): push %r13
1ff6(2): push %r12
1ff8(1): push %rbp
1ff9(1): push %rbx
1ffa(7): sub $0xe8,%rsp
2001(9): mov $0x28,%rax
200a(8): mov %rax,0xd8(%rsp)
2012(2): xor %eax,%eax
2014(2): mov %esi,%eax
2016(3): and $0x4,%eax
2019(5): setnz 0x1b(%rsp)
201e(3): and $0x3,%esi
2021(4): mov %eax,0x1c(%rsp)
2025(3): lea 0xffffffff(%rsi),%eax
2028(4): mov %esi,0x4(%rsp)
202c(2): test %eax,%esi
202e(6): jnz 0x552(%rip)
2034(3): test %rdi,%rdi
2037(3): mov %rdi,%r14
203a(6): jz 0x546(%rip)
2040(3): movzx (%rdi),%eax
2043(2): test %al,%al
2045(6): jz 0x57b(%rip)
204b(2): cmp $0x2f,%al
204d(6): jz 0x4c3(%rip)
2053(5): call 0x431d(%rip)
2058(3): test %rax,%rax
205b(3): mov %rax,%rbp
205e(6): jz 0x1b2(%rip)
2064(3): mov %rax,%rdi
2067(5): call 0xfffff499(%rip)
206c(6): cmp $0xfff,%rax
2072(3): mov %rax,%r15
2075(6): jbe 0x4bb(%rip)
207b(3): add %rbp,%r15
207e(3): mov %r15,%rbx
2081(5): lea 0x40(%rsp),%rax
2086(5): mov %r14,0x20(%rsp)
208b(9): mov $0x0,0x10(%rsp)
2094(9): mov $0x0,0x30(%rsp)
209d(9): mov $0x0,0x28(%rsp)
20a6(5): mov %rax,0x8(%rsp)
20ab(4): movzx (%r14),%eax
20af(2): test %al,%al
20b1(6): jz 0x10e(%rip)
20b7(9): nop 0x0(%rax,%rax,1)
20c0(2): cmp $0x2f,%al
20c2(2): jnz 0x1a(%rip)
20c4(4): nop 0x0(%rax)
20c8(4): add $0x1,%r14
20cc(4): movzx (%r14),%eax
20d0(2): cmp $0x2f,%al
20d2(2): jz 0xfffffff6(%rip)
20d4(2): test %al,%al
20d6(6): jz 0x2ca(%rip)
20dc(3): mov %r14,%r13
20df(2): jmp 0xe(%rip)
20e1(7): nop 0x0(%rax)
20e8(3): cmp $0x2f,%dl
20eb(2): jz 0xf(%rip)
20ed(4): add $0x1,%r13
20f1(5): movzx 0x0(%r13),%edx
20f6(2): test %dl,%dl
20f8(2): jnz 0xfffffff0(%rip)
20fa(3): cmp %r14,%r13
20fd(6): jz 0xc2(%rip)
2103(3): mov %r13,%r12
2106(3): sub %r14,%r12
2109(4): cmp $0x1,%r12
210d(6): jz 0x1d3(%rip)
2113(4): cmp $0x2,%r12
2117(2): jnz 0xa(%rip)
2119(2): cmp $0x2e,%al
211b(6): jz 0x295(%rip)
2121(5): cmp $0x2f,0xffffffff(%r15)
2126(2): jz 0xa(%rip)
2128(4): mov $0x2f,(%r15)
212c(4): add $0x1,%r15
2130(4): lea 0x0(%r15,%r12,1),%rax
2134(3): cmp %rax,%rbx
2137(2): jnbe 0x33(%rip)
2139(3): sub %rbp,%rbx
213c(3): sub %rbp,%r15
213f(3): mov %rbp,%rdi
2142(5): lea 0x1(%r12,%rbx,1),%rax
2147(7): add $0x1000,%rbx
214e(7): cmp $0x1000,%r12
2155(4): cmovnl %rax,%rbx
2159(3): mov %rbx,%rsi
215c(5): call 0x3fe4(%rip)
2161(3): mov %rax,%rbp
2164(3): add %rax,%rbx
2167(3): add %rax,%r15
216a(3): mov %r15,%rdi
216d(3): mov %r12,%rdx
2170(3): mov %r14,%rsi
2173(5): call 0xfffff48d(%rip)
2178(5): cmp $0x2,0x4(%rsp)
217d(4): lea 0x0(%r15,%r12,1),%r15
2181(4): mov $0x0,(%r15)
2185(6): jnz 0xbb(%rip)
218b(5): cmp $0x0,0x1b(%rsp)
2190(6): jz 0xb0(%rip)
2196(8): mov $0x0,0x58(%rsp)
219e(5): cmp $0x0,0x0(%r13)
21a3(2): jz 0xd(%rip)
21a5(5): cmp $0x2,0x4(%rsp)
21aa(6): jnz 0x45d(%rip)
21b0(3): mov %r13,%r14
21b3(4): movzx (%r14),%eax
21b7(2): test %al,%al
21b9(6): jnz 0xffffff07(%rip)
21bf(4): lea 0x1(%rbp),%rax
21c3(3): cmp %rax,%r15
21c6(2): jbe 0xd(%rip)
21c8(5): cmp $0x2f,0xffffffff(%r15)
21cd(2): jnz 0x6(%rip)
21cf(4): sub $0x1,%r15
21d3(4): lea 0x1(%r15),%rax
21d7(4): mov $0x0,(%r15)
21db(3): cmp %rax,%rbx
21de(2): jz 0x14(%rip)
21e0(3): sub %rbp,%r15
21e3(3): mov %rbp,%rdi
21e6(4): lea 0x1(%r15),%rsi
21ea(5): call 0x3f56(%rip)
21ef(3): mov %rax,%rbp
21f2(5): mov 0x28(%rsp),%rdi
21f7(5): call 0xfffff249(%rip)
21fc(5): mov 0x10(%rsp),%rax
2201(3): test %rax,%rax
2204(2): jz 0xc(%rip)
2206(3): mov %rax,%rdi
2209(5): call 0x10a7(%rip)
220e(2): nop 
2210(8): mov 0xd8(%rsp),%rcx
2218(9): xor $0x28,%rcx
2221(3): mov %rbp,%rax
2224(6): jnz 0x3fd(%rip)
222a(7): add $0xe8,%rsp
2231(1): pop %rbx
2232(1): pop %rbp
2233(2): pop %r12
2235(2): pop %r13
2237(2): pop %r14
2239(2): pop %r15
223b(1): ret near (%rsp)
223c(4): nop 0x0(%rax)
2240(4): mov 0x1c(%rsp),%eax
2244(5): mov 0x8(%rsp),%rdx
2249(3): mov %rbp,%rsi
224c(5): mov $0x1,%edi
2251(2): test %eax,%eax
2253(6): jz 0xbd(%rip)
2259(5): call 0xfffff3c7(%rip)
225e(2): test %eax,%eax
2260(3): setnz %al
2263(2): test %al,%al
2265(6): jz 0x8b(%rip)
226b(5): call 0xfffff1f5(%rip)
2270(3): mov %rax,%r14
2273(2): mov (%rax),%edx
2275(4): mov 0x4(%rsp),%eax
2279(2): test %eax,%eax
227b(2): jz 0x33(%rip)
227d(3): cmp $0x1,%eax
2280(6): jnz 0xffffff16(%rip)
2286(7): lea 0x4e41(%rip),%rsi
228d(3): mov %r13,%rdi
2290(4): mov %edx,0x38(%rsp)
2294(5): call 0xfffff31c(%rip)
2299(6): cmp $0x0,0x0(%r13,%rax,1)
229f(4): mov 0x38(%rsp),%edx
22a3(2): jnz 0xb(%rip)
22a5(3): cmp $0x2,%edx
22a8(6): jz 0xffffff08(%rip)
22ae(3): mov %r14,%r12
22b1(5): mov 0x28(%rsp),%rdi
22b6(4): mov %edx,0x4(%rsp)
22ba(5): call 0xfffff186(%rip)
22bf(3): mov %rbp,%rdi
22c2(5): call 0xfffff17e(%rip)
22c7(6): cmp $0x0,0x10(%rsp)
22cd(4): mov 0x4(%rsp),%edx
22d1(6): jz 0xbb(%rip)
22d7(5): jmp 0xa3(%rip)
22dc(4): nop 0x0(%rax)
22e0(2): cmp $0x2e,%al
22e2(6): jnz 0xfffffe3f(%rip)
22e8(5): jmp 0xfffffec8(%rip)
22ed(3): nop (%rax)
22f0(4): mov 0x58(%rsp),%eax
22f4(5): and $0xf000,%eax
22f9(5): cmp $0xa000,%eax
22fe(2): jz 0x22(%rip)
2300(5): cmp $0x4000,%eax
2305(6): jz 0xfffffeab(%rip)
230b(5): jmp 0xfffffe93(%rip)
2310(5): call 0xfffff200(%rip)
2315(2): test %eax,%eax
2317(3): setnz %al
231a(5): jmp 0xffffff49(%rip)
231f(1): nop 
2320(6): cmp $0x0,0x10(%rsp)
2326(6): jz 0x1b0(%rip)
232c(5): mov 0x8(%rsp),%rdx
2331(5): mov 0x20(%rsp),%rsi
2336(5): mov 0x10(%rsp),%rdi
233b(5): call 0x455(%rip)
2340(2): test %al,%al
2342(6): jz 0xbe(%rip)
2348(5): cmp $0x2,0x4(%rsp)
234d(6): jz 0xfffffe63(%rip)
2353(5): call 0xfffff10d(%rip)
2358(5): mov $0x28,%edx
235d(3): mov %rax,%r12
2360(5): mov 0x28(%rsp),%rdi
2365(4): mov %edx,0x4(%rsp)
2369(5): call 0xfffff0d7(%rip)
236e(3): mov %rbp,%rdi
2371(5): call 0xfffff0cf(%rip)
2376(4): mov 0x4(%rsp),%edx
237a(5): mov 0x10(%rsp),%rdi
237f(4): mov %edx,0x4(%rsp)
2383(5): call 0xf2d(%rip)
2388(4): mov 0x4(%rsp),%edx
238c(4): mov %edx,(%r12)
2390(2): xor %ebp,%ebp
2392(5): jmp 0xfffffe7e(%rip)
2397(9): nop 0x0(%rax,%rax,1)
23a0(3): mov %r14,%r13
23a3(5): jmp 0xfffffd57(%rip)
23a8(8): nop 0x0(%rax,%rax,1)
23b0(5): cmp $0x2e,0x1(%r14)
23b5(6): jnz 0xfffffd6c(%rip)
23bb(4): lea 0x1(%rbp),%rax
23bf(3): mov %r13,%r14
23c2(3): cmp %rax,%r15
23c5(6): jbe 0xfffffce6(%rip)
23cb(4): lea 0xffffffff(%r15),%rax
23cf(3): cmp %rax,%rbp
23d2(6): jnb 0x247(%rip)
23d8(5): cmp $0x2f,0xfffffffe(%r15)
23dd(3): mov %rax,%r15
23e0(6): jz 0xfffffccb(%rip)
23e6(4): sub $0x1,%r15
23ea(3): cmp %r15,%rbp
23ed(6): jz 0xfffffdc3(%rip)
23f3(5): cmp $0x2f,0xffffffff(%r15)
23f8(6): jz 0xfffffdb8(%rip)
23fe(2): jmp 0xffffffe8(%rip)
2400(5): mov 0x8(%rsp),%rdx
2405(5): mov 0x20(%rsp),%rsi
240a(5): mov 0x10(%rsp),%rdi
240f(5): call 0x2f1(%rip)
2414(5): mov 0x70(%rsp),%rsi
2419(3): mov %rbp,%rdi
241c(5): call 0xfffffae4(%rip)
2421(3): test %rax,%rax
2424(3): mov %rax,%r14
2427(6): jz 0x16b(%rip)
242d(3): mov %rax,%rdi
2430(5): call 0xfffff0d0(%rip)
2435(3): mov %r13,%rdi
2438(3): mov %rax,%r12
243b(5): mov %rax,0x20(%rsp)
2440(5): call 0xfffff0c0(%rip)
2445(6): cmp $0x0,0x30(%rsp)
244b(3): mov %rax,%rdx
244e(5): lea 0x1(%r12,%rdx,1),%rcx
2453(6): jz 0xfc(%rip)
2459(5): cmp %rcx,0x30(%rsp)
245e(2): jnb 0x23(%rip)
2460(5): mov 0x28(%rsp),%rdi
2465(3): mov %rcx,%rsi
2468(5): mov %rdx,0x38(%rsp)
246d(5): mov %rcx,0x30(%rsp)
2472(5): call 0x3cce(%rip)
2477(5): mov 0x38(%rsp),%rdx
247c(5): mov %rax,0x28(%rsp)
2481(5): mov 0x28(%rsp),%r12
2486(5): mov 0x20(%rsp),%rdi
248b(4): add $0x1,%rdx
248f(3): mov %r13,%rsi
2492(3): add %r12,%rdi
2495(3): mov %r12,%r13
2498(5): call 0xfffff208(%rip)
249d(5): mov 0x20(%rsp),%rdx
24a2(3): mov %r14,%rsi
24a5(3): mov %r12,%rdi
24a8(5): call 0xfffff158(%rip)
24ad(4): cmp $0x2f,(%r14)
24b1(5): mov %r12,0x20(%rsp)
24b6(4): lea 0x1(%rbp),%rax
24ba(6): jz 0xfa(%rip)
24c0(3): cmp %rax,%r15
24c3(6): jnbe 0x10f(%rip)
24c9(3): mov %r14,%rdi
24cc(5): call 0xffffef74(%rip)
24d1(5): jmp 0xfffffcdf(%rip)
24d6(7): lea 0x16a3(%rip),%r8
24dd(7): lea 0x165c(%rip),%rcx
24e4(2): xor %esi,%esi
24e6(7): lea 0x15e3(%rip),%rdx
24ed(5): mov $0x7,%edi
24f2(5): call 0xb6e(%rip)
24f7(3): test %rax,%rax
24fa(5): mov %rax,0x10(%rsp)
24ff(6): jnz 0xfffffe2d(%rip)
2505(5): call 0x3e2b(%rip)
250a(6): nop 0x0(%rax,%rax,1)
2510(5): mov $0x1000,%edi
2515(5): call 0x3bcb(%rip)
251a(3): mov %rax,%rbp
251d(7): lea 0x1000(%rax),%rbx
2524(4): lea 0x1(%rax),%r15
2528(3): mov $0x2f,(%rax)
252b(5): jmp 0xfffffb56(%rip)
2530(3): mov %rbp,%rdi
2533(5): mov $0x1000,%esi
2538(5): call 0x3c08(%rip)
253d(3): mov %rax,%rbp
2540(3): add %rax,%r15
2543(7): lea 0x1000(%rax),%rbx
254a(5): jmp 0xfffffb37(%rip)
254f(7): cmp $0x1000,%rcx
2556(5): mov $0x1000,%eax
255b(5): mov %rdx,0x38(%rsp)
2560(4): cmovnb %rcx,%rax
2564(3): mov %rax,%rdi
2567(5): mov %rax,0x30(%rsp)
256c(5): call 0x3b74(%rip)
2571(5): mov 0x38(%rsp),%rdx
2576(5): mov %rax,0x28(%rsp)
257b(5): jmp 0xffffff06(%rip)
2580(5): call 0xffffeee0(%rip)
2585(2): xor %ebp,%ebp
2587(6): mov $0x16,(%rax)
258d(5): jmp 0xfffffc83(%rip)
2592(5): call 0xffffeece(%rip)
2597(5): cmp $0x2,0x4(%rsp)
259c(3): mov %rax,%r14
259f(2): mov (%rax),%edx
25a1(2): jnz 0xb(%rip)
25a3(3): cmp $0xc,%edx
25a6(6): jnz 0xfffffc0a(%rip)
25ac(3): mov %r14,%r12
25af(5): jmp 0xfffffdb1(%rip)
25b4(4): mov $0x2f,0x0(%rbp)
25b8(3): mov %rax,%r15
25bb(5): jmp 0xffffff0e(%rip)
25c0(5): call 0xffffeea0(%rip)
25c5(2): xor %ebp,%ebp
25c7(6): mov $0x2,(%rax)
25cd(5): jmp 0xfffffc43(%rip)
25d2(4): lea 0xffffffff(%r15),%rax
25d6(3): cmp %rax,%rbp
25d9(2): jnb 0x9(%rip)
25db(5): cmp $0x2f,0xfffffffe(%r15)
25e0(2): jnz 0xd(%rip)
25e2(3): mov %rax,%r15
25e5(5): jmp 0xfffffee4(%rip)
25ea(3): mov %r15,%rax
25ed(4): lea 0xffffffff(%rax),%r15
25f1(3): cmp %r15,%rbp
25f4(6): jz 0xfffffed5(%rip)
25fa(5): cmp $0x2f,0xffffffff(%r15)
25ff(6): jz 0xfffffeca(%rip)
2605(2): jmp 0xffffffe5(%rip)
2607(5): call 0xffffee59(%rip)
260c(5): mov $0x14,%edx
2611(3): mov %rax,%r12
2614(5): jmp 0xfffffc9d(%rip)
2619(3): mov %rax,%r15
261c(5): jmp 0xfffffa8f(%rip)
2621(5): call 0xffffeeff(%rip)

"close_stdout_set_file_name" :
2630(7): mov %rdi,0x207a81(%rip)
2637(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2640(7): mov %dil,0x207a69(%rip)
2647(1): ret near (%rsp)

"close_stdout" :
2650(1): push %rbp
2651(1): push %rbx
2652(4): sub $0x8,%rsp
2656(7): mov 0x207a2b(%rip),%rdi
265d(5): call 0x3dd3(%rip)
2662(2): test %eax,%eax
2664(2): jz 0x18(%rip)
2666(5): call 0xffffedfa(%rip)
266b(7): cmp $0x0,0x207a3e(%rip)
2672(3): mov %rax,%rbx
2675(2): jz 0x1e(%rip)
2677(3): cmp $0x20,(%rax)
267a(2): jnz 0x19(%rip)
267c(7): mov 0x207a1d(%rip),%rdi
2683(5): call 0x3dad(%rip)
2688(2): test %eax,%eax
268a(2): jnz 0x48(%rip)
268c(4): add $0x8,%rsp
2690(1): pop %rbx
2691(1): pop %rbp
2692(1): ret near (%rsp)
2693(7): lea 0x4931(%rip),%rsi
269a(2): xor %edi,%edi
269c(5): mov $0x5,%edx
26a1(5): call 0xffffee3f(%rip)
26a6(7): mov 0x207a0b(%rip),%rdi
26ad(3): mov %rax,%rbp
26b0(3): test %rdi,%rdi
26b3(2): jz 0x2a(%rip)
26b5(5): call 0x2ffb(%rip)
26ba(2): mov (%rbx),%esi
26bc(7): lea 0x4914(%rip),%rdx
26c3(3): mov %rax,%rcx
26c6(3): mov %rbp,%r8
26c9(2): xor %edi,%edi
26cb(2): xor %eax,%eax
26cd(5): call 0xffffefe3(%rip)
26d2(6): mov 0x207940(%rip),%edi
26d8(5): call 0xffffeda8(%rip)
26dd(2): mov (%rbx),%esi
26df(7): lea 0x48f5(%rip),%rdx
26e6(3): mov %rax,%rcx
26e9(2): xor %edi,%edi
26eb(2): xor %eax,%eax
26ed(5): call 0xffffefc3(%rip)
26f2(2): jmp 0xffffffe0(%rip)

"record_file" :
2700(3): test %rdi,%rdi
2703(2): jz 0x7d(%rip)
2705(2): push %r13
2707(2): push %r12
2709(3): mov %rdi,%r13
270c(1): push %rbp
270d(1): push %rbx
270e(3): mov %rsi,%r12
2711(5): mov $0x18,%edi
2716(3): mov %rdx,%rbp
2719(4): sub $0x8,%rsp
271d(5): call 0x39c3(%rip)
2722(3): mov %r12,%rdi
2725(3): mov %rax,%rbx
2728(5): call 0x3be8(%rip)
272d(3): mov %rax,(%rbx)
2730(4): mov 0x8(%rbp),%rax
2734(3): mov %rbx,%rsi
2737(3): mov %r13,%rdi
273a(4): mov %rax,0x8(%rbx)
273e(4): mov 0x0(%rbp),%rax
2742(4): mov %rax,0x10(%rbx)
2746(5): call 0x111a(%rip)
274b(3): test %rax,%rax
274e(2): jz 0x34(%rip)
2750(3): cmp %rax,%rbx
2753(2): jz 0x1d(%rip)
2755(4): add $0x8,%rsp
2759(3): mov %rbx,%rdi
275c(1): pop %rbx
275d(1): pop %rbp
275e(2): pop %r12
2760(2): pop %r13
2762(5): jmp 0x141e(%rip)
2767(9): nop 0x0(%rax,%rax,1)
2770(4): add $0x8,%rsp
2774(1): pop %rbx
2775(1): pop %rbp
2776(2): pop %r12
2778(2): pop %r13
277a(1): ret near (%rsp)
277b(5): nop 0x0(%rax,%rax,1)
2780(2): REP ret near (%rsp)
2782(5): call 0x3bae(%rip)

"seen_file" :
2790(4): sub $0x28,%rsp
2794(9): mov $0x28,%rax
279d(5): mov %rax,0x18(%rsp)
27a2(2): xor %eax,%eax
27a4(3): test %rdi,%rdi
27a7(2): jz 0x25(%rip)
27a9(4): mov 0x8(%rdx),%rax
27ad(4): mov %rsi,(%rsp)
27b1(3): mov %rsp,%rsi
27b4(5): mov %rax,0x8(%rsp)
27b9(3): mov (%rdx),%rax
27bc(5): mov %rax,0x10(%rsp)
27c1(5): call 0x62f(%rip)
27c6(3): test %rax,%rax
27c9(3): setnz %al
27cc(5): mov 0x18(%rsp),%rcx
27d1(9): xor $0x28,%rcx
27da(2): jnz 0x7(%rip)
27dc(4): add $0x28,%rsp
27e0(1): ret near (%rsp)
27e1(5): call 0xffffed3f(%rip)

"next_prime" :
27f0(4): cmp $0xa,%rdi
27f4(5): mov $0xa,%eax
27f9(a): mov $0x-6148914691236517205,%r9
2803(4): cmovnae %rax,%rdi
2807(4): or $0x1,%rdi
280b(4): cmp $0xffffffff,%rdi
280f(2): jz 0x70(%rip)
2811(7): nop 0x0(%rax)
2818(3): mov %rdi,%rax
281b(3): mov %rdi,%rcx
281e(3): mul %rax,%r9,%rdx
2821(3): mov %rdx,%rax
2824(3): shr $0x1,%rax
2827(4): lea 0x0(%rax,%rax,2),%rax
282b(3): sub %rax,%rcx
282e(4): cmp $0x9,%rdi
2832(3): mov %rcx,%rax
2835(2): jbe 0x3b(%rip)
2837(3): test %rcx,%rcx
283a(2): jz 0x3b(%rip)
283c(6): mov $0x10,%r8d
2842(5): mov $0x9,%esi
2847(5): mov $0x3,%ecx
284c(2): jmp 0xd(%rip)
284e(2): nop 
2850(4): add $0x8,%r8
2854(3): test %rdx,%rdx
2857(2): jz 0x1e(%rip)
2859(4): add $0x2,%rcx
285d(2): xor %edx,%edx
285f(3): mov %rdi,%rax
2862(3): div %rcx,%rax
2865(3): add %r8,%rsi
2868(3): cmp %rdi,%rsi
286b(3): mov %rdx,%rax
286e(2): jb 0xffffffe2(%rip)
2870(3): test %rax,%rax
2873(2): jnz 0xc(%rip)
2875(4): add $0x2,%rdi
2879(4): cmp $0xffffffff,%rdi
287d(2): jnz 0xffffff9b(%rip)
287f(3): mov %rdi,%rax
2882(1): ret near (%rsp)

"raw_hasher" :
2890(3): mov %rdi,%rax
2893(2): xor %edx,%edx
2895(4): ror $0x3,%rax
2899(3): div %rsi,%rax
289c(3): mov %rdx,%rax
289f(1): ret near (%rsp)

"raw_comparator" :
28a0(3): cmp %rsi,%rdi
28a3(3): setz %al
28a6(1): ret near (%rsp)

"safe_hasher" :
28b0(1): push %rbx
28b1(3): mov %rdi,%rbx
28b4(3): mov %rsi,%rdi
28b7(4): mov 0x10(%rbx),%rsi
28bb(3): call 0x30(%rbx)
28be(4): cmp %rax,0x10(%rbx)
28c2(2): jbe 0xb(%rip)
28c4(4): shl/sal $0x4,%rax
28c8(3): add (%rbx),%rax
28cb(1): pop %rbx
28cc(1): ret near (%rsp)
28cd(5): call 0xffffeb83(%rip)

"hash_find_entry" :
28e0(2): push %r14
28e2(2): push %r13
28e4(3): mov %rdx,%r14
28e7(2): push %r12
28e9(1): push %rbp
28ea(3): mov %rdi,%r12
28ed(1): push %rbx
28ee(3): mov %rsi,%rbp
28f1(3): mov %ecx,%r13d
28f4(5): call 0xffffffbc(%rip)
28f9(3): mov %rax,(%r14)
28fc(3): mov (%rax),%rsi
28ff(3): test %rsi,%rsi
2902(6): jz 0xee(%rip)
2908(3): cmp %rbp,%rsi
290b(3): mov %rax,%rbx
290e(6): jz 0x95(%rip)
2914(3): mov %rbp,%rdi
2917(5): call 0x38(%r12)
291c(2): test %al,%al
291e(6): jnz 0x82(%rip)
2924(4): mov 0x8(%rbx),%rax
2928(3): test %rax,%rax
292b(6): jz 0xc5(%rip)
2931(3): mov (%rax),%rsi
2934(3): cmp %rsi,%rbp
2937(2): jnz 0x22(%rip)
2939(2): jmp 0x33(%rip)
293b(5): nop 0x0(%rax,%rax,1)
2940(4): mov 0x8(%rbx),%rbx
2944(4): mov 0x8(%rbx),%rax
2948(3): test %rax,%rax
294b(6): jz 0xa5(%rip)
2951(3): mov (%rax),%rsi
2954(3): cmp %rbp,%rsi
2957(2): jz 0x15(%rip)
2959(3): mov %rbp,%rdi
295c(5): call 0x38(%r12)
2961(2): test %al,%al
2963(2): jz 0xffffffdd(%rip)
2965(4): mov 0x8(%rbx),%rax
2969(3): mov (%rax),%rsi
296c(3): test %r13b,%r13b
296f(2): jz 0x1f(%rip)
2971(4): mov 0x8(%rax),%rdx
2975(4): mov %rdx,0x8(%rbx)
2979(7): mov $0x0,(%rax)
2980(5): mov 0x48(%r12),%rdx
2985(4): mov %rdx,0x8(%rax)
2989(5): mov %rax,0x48(%r12)
298e(1): pop %rbx
298f(3): mov %rsi,%rax
2992(1): pop %rbp
2993(2): pop %r12
2995(2): pop %r13
2997(2): pop %r14
2999(1): ret near (%rsp)
299a(6): nop 0x0(%rax,%rax,1)
29a0(3): mov (%rbx),%rsi
29a3(3): test %r13b,%r13b
29a6(2): jz 0xffffffe8(%rip)
29a8(4): mov 0x8(%rbx),%rax
29ac(3): test %rax,%rax
29af(2): jz 0x31(%rip)
29b1(4): movdqu (%rax),%xmm0
29b5(3): movups %xmm0,(%rbx)
29b8(7): mov $0x0,(%rax)
29bf(5): mov 0x48(%r12),%rdx
29c4(4): mov %rdx,0x8(%rax)
29c8(5): mov %rax,0x48(%r12)
29cd(3): mov %rsi,%rax
29d0(1): pop %rbx
29d1(1): pop %rbp
29d2(2): pop %r12
29d4(2): pop %r13
29d6(2): pop %r14
29d8(1): ret near (%rsp)
29d9(7): nop 0x0(%rax)
29e0(7): mov $0x0,(%rbx)
29e7(2): jmp 0xffffffa7(%rip)
29e9(7): nop 0x0(%rax)
29f0(2): xor %esi,%esi
29f2(1): pop %rbx
29f3(3): mov %rsi,%rax
29f6(1): pop %rbp
29f7(2): pop %r12
29f9(2): pop %r13
29fb(2): pop %r14
29fd(1): ret near (%rsp)

"check_tuning.isra.0" :
2a00(3): mov (%rdi),%rdx
2a03(7): lea 0x4646(%rip),%rcx
2a0a(5): mov $0x1,%eax
2a0f(3): cmp %rcx,%rdx
2a12(2): jz 0x63(%rip)
2a14(5): movss 0x8(%rdx),%xmm0
2a19(7): ucomiss 0x4644(%rip),%xmm0
2a20(2): jbe 0x50(%rip)
2a22(8): movss 0x463e(%rip),%xmm1
2a2a(3): ucomiss %xmm0,%xmm1
2a2d(2): jbe 0x43(%rip)
2a2f(5): movss 0xc(%rdx),%xmm1
2a34(7): ucomiss 0x4631(%rip),%xmm1
2a3b(2): jbe 0x35(%rip)
2a3d(4): movss (%rdx),%xmm1
2a41(7): ucomiss 0x4628(%rip),%xmm1
2a48(2): jb 0x28(%rip)
2a4a(8): addss 0x4612(%rip),%xmm1
2a52(5): movss 0x4(%rdx),%xmm2
2a57(3): ucomiss %xmm1,%xmm2
2a5a(2): jbe 0x16(%rip)
2a5c(8): movss 0x4610(%rip),%xmm3
2a64(3): ucomiss %xmm2,%xmm3
2a67(2): jb 0x9(%rip)
2a69(3): ucomiss %xmm1,%xmm0
2a6c(2): jnbe 0x9(%rip)
2a6e(2): nop 
2a70(3): mov %rcx,(%rdi)
2a73(2): xor %eax,%eax
2a75(2): REP ret near (%rsp)

"transfer_entries" :
2a80(2): push %r15
2a82(2): push %r14
2a84(2): push %r13
2a86(2): push %r12
2a88(1): push %rbp
2a89(1): push %rbx
2a8a(4): sub $0x8,%rsp
2a8e(3): mov (%rsi),%r12
2a91(4): cmp 0x8(%rsi),%r12
2a95(6): jnb 0xe3(%rip)
2a9b(3): mov %rdi,%rbp
2a9e(3): mov %rsi,%r13
2aa1(3): mov %edx,%r14d
2aa4(4): nop 0x0(%rax)
2aa8(4): mov (%r12),%r15
2aac(3): test %r15,%r15
2aaf(6): jz 0xbb(%rip)
2ab5(5): mov 0x8(%r12),%rbx
2aba(3): test %rbx,%rbx
2abd(2): jnz 0x1f(%rip)
2abf(2): jmp 0x5c(%rip)
2ac1(7): nop 0x0(%rax)
2ac8(4): mov 0x8(%rax),%rcx
2acc(3): test %rdx,%rdx
2acf(4): mov %rcx,0x8(%rbx)
2ad3(4): mov %rbx,0x8(%rax)
2ad7(3): mov %rdx,%rbx
2ada(2): jz 0x3d(%rip)
2adc(3): mov (%rbx),%r15
2adf(3): mov %rbp,%rdi
2ae2(3): mov %r15,%rsi
2ae5(5): call 0xfffffdcb(%rip)
2aea(4): cmp $0x0,(%rax)
2aee(4): mov 0x8(%rbx),%rdx
2af2(2): jnz 0xffffffd6(%rip)
2af4(3): mov %r15,(%rax)
2af7(5): add $0x1,0x18(%rbp)
2afc(3): test %rdx,%rdx
2aff(7): mov $0x0,(%rbx)
2b06(4): mov 0x48(%rbp),%rax
2b0a(4): mov %rax,0x8(%rbx)
2b0e(4): mov %rbx,0x48(%rbp)
2b12(3): mov %rdx,%rbx
2b15(2): jnz 0xffffffc7(%rip)
2b17(4): mov (%r12),%r15
2b1b(3): test %r14b,%r14b
2b1e(9): mov $0x0,0x8(%r12)
2b27(2): jnz 0x43(%rip)
2b29(3): mov %r15,%rsi
2b2c(3): mov %rbp,%rdi
2b2f(5): call 0xfffffd81(%rip)
2b34(4): cmp $0x0,(%rax)
2b38(3): mov %rax,%rbx
2b3b(2): jz 0x55(%rip)
2b3d(4): mov 0x48(%rbp),%rax
2b41(3): test %rax,%rax
2b44(2): jz 0x5c(%rip)
2b46(4): mov 0x8(%rax),%rdx
2b4a(4): mov %rdx,0x48(%rbp)
2b4e(4): mov 0x8(%rbx),%rdx
2b52(3): mov %r15,(%rax)
2b55(4): mov %rdx,0x8(%rax)
2b59(4): mov %rax,0x8(%rbx)
2b5d(8): mov $0x0,(%r12)
2b65(5): sub $0x1,0x18(%r13)
2b6a(4): add $0x10,%r12
2b6e(4): cmp %r12,0x8(%r13)
2b72(6): jnbe 0xffffff36(%rip)
2b78(4): add $0x8,%rsp
2b7c(5): mov $0x1,%eax
2b81(1): pop %rbx
2b82(1): pop %rbp
2b83(2): pop %r12
2b85(2): pop %r13
2b87(2): pop %r14
2b89(2): pop %r15
2b8b(1): ret near (%rsp)
2b8c(4): nop 0x0(%rax)
2b90(3): mov %r15,(%rax)
2b93(5): add $0x1,0x18(%rbp)
2b98(2): jmp 0xffffffc5(%rip)
2b9a(6): nop 0x0(%rax,%rax,1)
2ba0(5): mov $0x10,%edi
2ba5(5): call 0xffffea8b(%rip)
2baa(3): test %rax,%rax
2bad(2): jnz 0xffffffa1(%rip)
2baf(4): add $0x8,%rsp
2bb3(2): xor %eax,%eax
2bb5(1): pop %rbx
2bb6(1): pop %rbp
2bb7(2): pop %r12
2bb9(2): pop %r13
2bbb(2): pop %r14
2bbd(2): pop %r15
2bbf(1): ret near (%rsp)

"hash_get_n_buckets" :
2bc0(4): mov 0x10(%rdi),%rax
2bc4(1): ret near (%rsp)

"hash_get_n_buckets_used" :
2bd0(4): mov 0x18(%rdi),%rax
2bd4(1): ret near (%rsp)

"hash_get_n_entries" :
2be0(4): mov 0x20(%rdi),%rax
2be4(1): ret near (%rsp)

"hash_get_max_bucket_length" :
2bf0(3): mov (%rdi),%rsi
2bf3(4): mov 0x8(%rdi),%rdi
2bf7(2): xor %eax,%eax
2bf9(3): cmp %rdi,%rsi
2bfc(2): jnb 0x3b(%rip)
2bfe(2): nop 
2c00(4): cmp $0x0,(%rsi)
2c04(2): jz 0x28(%rip)
2c06(4): mov 0x8(%rsi),%rdx
2c0a(5): mov $0x1,%ecx
2c0f(3): test %rdx,%rdx
2c12(2): jz 0x13(%rip)
2c14(4): nop 0x0(%rax)
2c18(4): mov 0x8(%rdx),%rdx
2c1c(4): add $0x1,%rcx
2c20(3): test %rdx,%rdx
2c23(2): jnz 0xfffffff5(%rip)
2c25(3): cmp %rcx,%rax
2c28(4): cmovnae %rcx,%rax
2c2c(4): add $0x10,%rsi
2c30(3): cmp %rdi,%rsi
2c33(2): jb 0xffffffcd(%rip)
2c35(2): REP ret near (%rsp)
2c37(2): REP ret near (%rsp)

"hash_table_ok" :
2c40(3): mov (%rdi),%rcx
2c43(4): mov 0x8(%rdi),%r8
2c47(2): xor %edx,%edx
2c49(2): xor %esi,%esi
2c4b(3): cmp %r8,%rcx
2c4e(2): jnb 0x38(%rip)
2c50(4): cmp $0x0,(%rcx)
2c54(2): jz 0x29(%rip)
2c56(4): mov 0x8(%rcx),%rax
2c5a(4): add $0x1,%rsi
2c5e(4): add $0x1,%rdx
2c62(3): test %rax,%rax
2c65(2): jz 0x18(%rip)
2c67(9): nop 0x0(%rax,%rax,1)
2c70(4): mov 0x8(%rax),%rax
2c74(4): add $0x1,%rdx
2c78(3): test %rax,%rax
2c7b(2): jnz 0xfffffff5(%rip)
2c7d(4): add $0x10,%rcx
2c81(3): cmp %r8,%rcx
2c84(2): jb 0xffffffcc(%rip)
2c86(2): xor %eax,%eax
2c88(4): cmp %rsi,0x18(%rdi)
2c8c(2): jz 0x4(%rip)
2c8e(2): REP ret near (%rsp)
2c90(4): cmp %rdx,0x20(%rdi)
2c94(3): setz %al
2c97(1): ret near (%rsp)

"hash_print_statistics" :
2ca0(2): push %r13
2ca2(2): push %r12
2ca4(3): mov %rsi,%r12
2ca7(1): push %rbp
2ca8(1): push %rbx
2ca9(2): xor %ebx,%ebx
2cab(4): sub $0x8,%rsp
2caf(3): mov (%rdi),%rsi
2cb2(4): mov 0x20(%rdi),%rcx
2cb6(4): mov 0x10(%rdi),%rbp
2cba(4): mov 0x18(%rdi),%r13
2cbe(4): mov 0x8(%rdi),%rdi
2cc2(3): cmp %rdi,%rsi
2cc5(2): jnb 0x40(%rip)
2cc7(9): nop 0x0(%rax,%rax,1)
2cd0(4): cmp $0x0,(%rsi)
2cd4(2): jz 0x28(%rip)
2cd6(4): mov 0x8(%rsi),%rax
2cda(5): mov $0x1,%edx
2cdf(3): test %rax,%rax
2ce2(2): jz 0x13(%rip)
2ce4(4): nop 0x0(%rax)
2ce8(4): mov 0x8(%rax),%rax
2cec(4): add $0x1,%rdx
2cf0(3): test %rax,%rax
2cf3(2): jnz 0xfffffff5(%rip)
2cf5(3): cmp %rdx,%rbx
2cf8(4): cmovnae %rdx,%rbx
2cfc(4): add $0x10,%rsi
2d00(3): cmp %rdi,%rsi
2d03(2): jb 0xffffffcd(%rip)
2d05(7): lea 0x42d2(%rip),%rdx
2d0c(5): mov $0x1,%esi
2d11(3): mov %r12,%rdi
2d14(2): xor %eax,%eax
2d16(5): call 0xffffe9ea(%rip)
2d1b(7): lea 0x42d4(%rip),%rdx
2d22(2): xor %eax,%eax
2d24(3): mov %rbp,%rcx
2d27(5): mov $0x1,%esi
2d2c(3): mov %r12,%rdi
2d2f(5): call 0xffffe9d1(%rip)
2d34(3): test %r13,%r13
2d37(2): js 0x69(%rip)
2d39(4): pxor %xmm0,%xmm0
2d3d(3): test %rbp,%rbp
2d40(5): cvtsi2sd %r13,%xmm0
2d45(8): mulsd 0x433b(%rip),%xmm0
2d4d(2): js 0x7c(%rip)
2d4f(4): pxor %xmm1,%xmm1
2d53(5): cvtsi2sd %rbp,%xmm1
2d58(4): divsd %xmm1,%xmm0
2d5c(7): lea 0x42c5(%rip),%rdx
2d63(3): mov %r13,%rcx
2d66(3): mov %r12,%rdi
2d69(5): mov $0x1,%esi
2d6e(5): mov $0x1,%eax
2d73(5): call 0xffffe98d(%rip)
2d78(4): add $0x8,%rsp
2d7c(3): mov %rbx,%rcx
2d7f(3): mov %r12,%rdi
2d82(1): pop %rbx
2d83(1): pop %rbp
2d84(2): pop %r12
2d86(2): pop %r13
2d88(7): lea 0x427f(%rip),%rdx
2d8f(5): mov $0x1,%esi
2d94(2): xor %eax,%eax
2d96(5): jmp 0xffffe96a(%rip)
2d9b(5): nop 0x0(%rax,%rax,1)
2da0(3): mov %r13,%rax
2da3(3): mov %r13,%rdx
2da6(4): pxor %xmm0,%xmm0
2daa(3): shr $0x1,%rax
2dad(3): and $0x1,%edx
2db0(3): or %rdx,%rax
2db3(3): test %rbp,%rbp
2db6(5): cvtsi2sd %rax,%xmm0
2dbb(4): addsd %xmm0,%xmm0
2dbf(8): mulsd 0x42c1(%rip),%xmm0
2dc7(2): jns 0xffffff88(%rip)
2dc9(3): mov %rbp,%rax
2dcc(4): pxor %xmm1,%xmm1
2dd0(3): shr $0x1,%rax
2dd3(3): and $0x1,%ebp
2dd6(3): or %rbp,%rax
2dd9(5): cvtsi2sd %rax,%xmm1
2dde(4): addsd %xmm1,%xmm1
2de2(5): jmp 0xffffff76(%rip)

"hash_lookup" :
2df0(2): push %r12
2df2(1): push %rbp
2df3(3): mov %rdi,%r12
2df6(1): push %rbx
2df7(3): mov %rsi,%rbp
2dfa(5): call 0xfffffab6(%rip)
2dff(3): mov (%rax),%rsi
2e02(3): test %rsi,%rsi
2e05(2): jz 0x28(%rip)
2e07(3): mov %rax,%rbx
2e0a(2): jmp 0x9(%rip)
2e0c(4): nop 0x0(%rax)
2e10(3): mov (%rbx),%rsi
2e13(3): cmp %rbp,%rsi
2e16(2): jz 0x19(%rip)
2e18(3): mov %rbp,%rdi
2e1b(5): call 0x38(%r12)
2e20(2): test %al,%al
2e22(2): jnz 0x1e(%rip)
2e24(4): mov 0x8(%rbx),%rbx
2e28(3): test %rbx,%rbx
2e2b(2): jnz 0xffffffe5(%rip)
2e2d(2): xor %esi,%esi
2e2f(1): pop %rbx
2e30(3): mov %rsi,%rax
2e33(1): pop %rbp
2e34(2): pop %r12
2e36(1): ret near (%rsp)
2e37(9): nop 0x0(%rax,%rax,1)
2e40(3): mov (%rbx),%rsi
2e43(1): pop %rbx
2e44(1): pop %rbp
2e45(3): mov %rsi,%rax
2e48(2): pop %r12
2e4a(1): ret near (%rsp)

"hash_get_first" :
2e50(5): cmp $0x0,0x20(%rdi)
2e55(2): jz 0x2e(%rip)
2e57(3): mov (%rdi),%rdx
2e5a(4): mov 0x8(%rdi),%rcx
2e5e(3): cmp %rcx,%rdx
2e61(2): jnb 0x27(%rip)
2e63(3): mov (%rdx),%rax
2e66(3): test %rax,%rax
2e69(2): jnz 0x1d(%rip)
2e6b(5): nop 0x0(%rax,%rax,1)
2e70(4): add $0x10,%rdx
2e74(3): cmp %rcx,%rdx
2e77(2): jnb 0x11(%rip)
2e79(3): mov (%rdx),%rax
2e7c(3): test %rax,%rax
2e7f(2): jz 0xfffffff1(%rip)
2e81(2): REP ret near (%rsp)
2e83(2): xor %eax,%eax
2e85(1): ret near (%rsp)
2e86(2): REP ret near (%rsp)
2e88(4): sub $0x8,%rsp
2e8c(5): call 0xffffe5c4(%rip)

"hash_get_next" :
2ea0(1): push %rbp
2ea1(1): push %rbx
2ea2(3): mov %rdi,%rbp
2ea5(3): mov %rsi,%rbx
2ea8(4): sub $0x8,%rsp
2eac(5): call 0xfffffa04(%rip)
2eb1(3): mov %rax,%rdx
2eb4(3): mov %rax,%rcx
2eb7(3): mov (%rdx),%rax
2eba(4): mov 0x8(%rdx),%rdx
2ebe(3): cmp %rbx,%rax
2ec1(2): jz 0x18(%rip)
2ec3(5): nop 0x0(%rax,%rax,1)
2ec8(3): test %rdx,%rdx
2ecb(2): jz 0x13(%rip)
2ecd(3): mov (%rdx),%rax
2ed0(4): mov 0x8(%rdx),%rdx
2ed4(3): cmp %rbx,%rax
2ed7(2): jnz 0xfffffff1(%rip)
2ed9(3): test %rdx,%rdx
2edc(2): jnz 0x2c(%rip)
2ede(4): mov 0x8(%rbp),%rdx
2ee2(2): jmp 0xe(%rip)
2ee4(4): nop 0x0(%rax)
2ee8(3): mov (%rcx),%rax
2eeb(3): test %rax,%rax
2eee(2): jnz 0xd(%rip)
2ef0(4): add $0x10,%rcx
2ef4(3): cmp %rcx,%rdx
2ef7(2): jnbe 0xfffffff1(%rip)
2ef9(2): xor %eax,%eax
2efb(4): add $0x8,%rsp
2eff(1): pop %rbx
2f00(1): pop %rbp
2f01(1): ret near (%rsp)
2f02(6): nop 0x0(%rax,%rax,1)
2f08(3): mov (%rdx),%rax
2f0b(4): add $0x8,%rsp
2f0f(1): pop %rbx
2f10(1): pop %rbp
2f11(1): ret near (%rsp)

"hash_get_entries" :
2f20(3): mov (%rdi),%r9
2f23(4): cmp %r9,0x8(%rdi)
2f27(2): jbe 0x5b(%rip)
2f29(3): xor %r8d,%r8d
2f2c(3): mov (%r9),%rcx
2f2f(3): test %rcx,%rcx
2f32(2): jz 0x3b(%rip)
2f34(3): cmp %r8,%rdx
2f37(2): jbe 0x40(%rip)
2f39(4): mov %rcx,0x0(%rsi,%r8,8)
2f3d(4): mov 0x8(%r9),%rcx
2f41(4): lea 0x1(%r8),%rax
2f45(3): test %rcx,%rcx
2f48(2): jz 0x22(%rip)
2f4a(6): nop 0x0(%rax,%rax,1)
2f50(3): cmp %rax,%rdx
2f53(2): jz 0x2d(%rip)
2f55(3): mov (%rcx),%r8
2f58(4): add $0x1,%rax
2f5c(5): mov %r8,0xfffffff8(%rsi,%rax,8)
2f61(4): mov 0x8(%rcx),%rcx
2f65(3): test %rcx,%rcx
2f68(2): jnz 0xffffffe8(%rip)
2f6a(3): mov %rax,%r8
2f6d(4): add $0x10,%r9
2f71(4): cmp %r9,0x8(%rdi)
2f75(2): jnbe 0xffffffb7(%rip)
2f77(3): mov %r8,%rax
2f7a(1): ret near (%rsp)
2f7b(5): nop 0x0(%rax,%rax,1)
2f80(2): REP ret near (%rsp)
2f82(2): xor %eax,%eax
2f84(1): ret near (%rsp)

"hash_do_for_each" :
2f90(2): push %r15
2f92(2): push %r14
2f94(2): push %r13
2f96(2): push %r12
2f98(1): push %rbp
2f99(1): push %rbx
2f9a(4): sub $0x8,%rsp
2f9e(3): mov (%rdi),%r14
2fa1(4): cmp %r14,0x8(%rdi)
2fa5(2): jbe 0x51(%rip)
2fa7(3): mov %rdx,%r13
2faa(3): mov %rsi,%r12
2fad(3): mov %rdi,%r15
2fb0(2): xor %ebp,%ebp
2fb2(3): mov (%r14),%rdi
2fb5(3): test %rdi,%rdi
2fb8(2): jz 0x22(%rip)
2fba(3): mov %r14,%rbx
2fbd(2): jmp 0x6(%rip)
2fbf(1): nop 
2fc0(3): mov (%rbx),%rdi
2fc3(3): mov %r13,%rsi
2fc6(3): call %r12
2fc9(2): test %al,%al
2fcb(2): jz 0x19(%rip)
2fcd(4): mov 0x8(%rbx),%rbx
2fd1(4): add $0x1,%rbp
2fd5(3): test %rbx,%rbx
2fd8(2): jnz 0xffffffe8(%rip)
2fda(4): add $0x10,%r14
2fde(4): cmp %r14,0x8(%r15)
2fe2(2): jnbe 0xffffffd0(%rip)
2fe4(4): add $0x8,%rsp
2fe8(3): mov %rbp,%rax
2feb(1): pop %rbx
2fec(1): pop %rbp
2fed(2): pop %r12
2fef(2): pop %r13
2ff1(2): pop %r14
2ff3(2): pop %r15
2ff5(1): ret near (%rsp)
2ff6(2): xor %ebp,%ebp
2ff8(2): jmp 0xffffffec(%rip)

"hash_string" :
3000(3): movzx (%rdi),%ecx
3003(2): xor %edx,%edx
3005(2): test %cl,%cl
3007(2): jz 0x26(%rip)
3009(7): nop 0x0(%rax)
3010(3): mov %rdx,%rax
3013(4): add $0x1,%rdi
3017(4): shl/sal $0x5,%rax
301b(3): sub %rdx,%rax
301e(2): xor %edx,%edx
3020(3): add %rcx,%rax
3023(3): movzx (%rdi),%ecx
3026(3): div %rsi,%rax
3029(2): test %cl,%cl
302b(2): jnz 0xffffffe5(%rip)
302d(3): mov %rdx,%rax
3030(1): ret near (%rsp)

"hash_reset_tuning" :
3040(a): mov $0x4575657221408423936,%rax
304a(4): mov $0x0,0x10(%rdi)
304e(3): mov %rax,(%rdi)
3051(a): mov $0x4590573145673223373,%rax
305b(4): mov %rax,0x8(%rdi)
305f(1): ret near (%rsp)

"hash_initialize" :
3060(2): push %r15
3062(2): push %r14
3064(7): lea 0xfffff825(%rip),%rax
306b(2): push %r13
306d(2): push %r12
306f(3): mov %rdx,%r12
3072(1): push %rbp
3073(1): push %rbx
3074(3): mov %rcx,%r13
3077(3): mov %rdi,%rbp
307a(5): mov $0x50,%edi
307f(3): mov %rsi,%r15
3082(4): sub $0x8,%rsp
3086(3): test %rdx,%rdx
3089(3): mov %r8,%r14
308c(4): cmove %rax,%r12
3090(7): lea 0xfffff809(%rip),%rax
3097(3): test %rcx,%rcx
309a(4): cmove %rax,%r13
309e(5): call 0xffffe592(%rip)
30a3(3): test %rax,%rax
30a6(3): mov %rax,%rbx
30a9(6): jz 0xb1(%rip)
30af(3): test %r15,%r15
30b2(4): lea 0x28(%rax),%rdi
30b6(6): jz 0xba(%rip)
30bc(4): mov %r15,0x28(%rax)
30c0(5): call 0xfffff940(%rip)
30c5(2): test %al,%al
30c7(6): jz 0x89(%rip)
30cd(5): cmp $0x0,0x10(%r15)
30d2(6): jz 0xfe(%rip)
30d8(3): mov %rbp,%rdi
30db(5): call 0xfffff715(%rip)
30e0(5): mov $0x8,%edx
30e5(3): mov %rax,%rbp
30e8(2): xor %ecx,%ecx
30ea(3): mov %rdx,%rax
30ed(3): mul %rax,%rbp,%rdx
30f0(6): jo 0x11a(%rip)
30f6(3): test %rax,%rax
30f9(2): js 0x57(%rip)
30fb(3): test %rcx,%rcx
30fe(2): jnz 0x52(%rip)
3100(3): test %rbp,%rbp
3103(4): mov %rbp,0x10(%rbx)
3107(2): jz 0x49(%rip)
3109(5): mov $0x10,%esi
310e(3): mov %rbp,%rdi
3111(5): call 0xffffe4cf(%rip)
3116(3): test %rax,%rax
3119(3): mov %rax,(%rbx)
311c(2): jz 0x34(%rip)
311e(4): shl/sal $0x4,%rbp
3122(8): mov $0x0,0x18(%rbx)
312a(8): mov $0x0,0x20(%rbx)
3132(3): add %rax,%rbp
3135(4): mov %r12,0x30(%rbx)
3139(4): mov %r13,0x38(%rbx)
313d(4): mov %rbp,0x8(%rbx)
3141(4): mov %r14,0x40(%rbx)
3145(8): mov $0x0,0x48(%rbx)
314d(2): jmp 0xd(%rip)
314f(1): nop 
3150(3): mov %rbx,%rdi
3153(2): xor %ebx,%ebx
3155(5): call 0xffffe2eb(%rip)
315a(4): add $0x8,%rsp
315e(3): mov %rbx,%rax
3161(1): pop %rbx
3162(1): pop %rbp
3163(2): pop %r12
3165(2): pop %r13
3167(2): pop %r14
3169(2): pop %r15
316b(1): ret near (%rsp)
316c(4): nop 0x0(%rax)
3170(7): lea 0x3ed9(%rip),%rax
3177(4): mov %rax,0x28(%rbx)
317b(5): call 0xfffff885(%rip)
3180(2): test %al,%al
3182(8): movss 0x3eee(%rip),%xmm1
318a(2): jz 0xffffffc6(%rip)
318c(3): test %rbp,%rbp
318f(2): js 0x4c(%rip)
3191(4): pxor %xmm0,%xmm0
3195(5): cvtsi2ss %rbp,%xmm0
319a(4): divss %xmm1,%xmm0
319e(7): ucomiss 0x3ed7(%rip),%xmm0
31a5(2): jnb 0xffffffab(%rip)
31a7(7): ucomiss 0x3ed2(%rip),%xmm0
31ae(2): jb 0x52(%rip)
31b0(8): subss 0x3ec8(%rip),%xmm0
31b8(a): mov $0x-9223372036854775808,%rax
31c2(5): cvttss2si %xmm0,%rbp
31c7(3): xor %rax,%rbp
31ca(5): jmp 0xffffff0e(%rip)
31cf(1): nop 
31d0(3): test %rbp,%rbp
31d3(6): movss 0x8(%r15),%xmm1
31d9(2): jns 0xffffffb8(%rip)
31db(3): mov %rbp,%rax
31de(4): pxor %xmm0,%xmm0
31e2(3): shr $0x1,%rax
31e5(3): and $0x1,%ebp
31e8(3): or %rbp,%rax
31eb(5): cvtsi2ss %rax,%xmm0
31f0(4): addss %xmm0,%xmm0
31f4(2): jmp 0xffffffa6(%rip)
31f6(a): nop 0x0(%rax,%rax,1)
3200(5): cvttss2si %xmm0,%rbp
3205(5): jmp 0xfffffed3(%rip)
320a(5): mov $0x1,%ecx
320f(5): jmp 0xfffffee7(%rip)

"hash_clear" :
3220(2): push %r12
3222(1): push %rbp
3223(3): mov %rdi,%rbp
3226(1): push %rbx
3227(3): mov (%rdi),%r12
322a(4): cmp 0x8(%rdi),%r12
322e(2): jnb 0x6d(%rip)
3230(5): cmp $0x0,(%r12)
3235(2): jz 0x5c(%rip)
3237(5): mov 0x8(%r12),%rbx
323c(4): mov 0x40(%rbp),%rax
3240(3): test %rbx,%rbx
3243(2): jz 0x32(%rip)
3245(3): nop (%rax)
3248(3): test %rax,%rax
324b(2): jz 0xb(%rip)
324d(3): mov (%rbx),%rdi
3250(2): call %rax
3252(4): mov 0x40(%rbp),%rax
3256(4): mov 0x8(%rbx),%rdx
325a(4): mov 0x48(%rbp),%rcx
325e(7): mov $0x0,(%rbx)
3265(3): test %rdx,%rdx
3268(4): mov %rcx,0x8(%rbx)
326c(4): mov %rbx,0x48(%rbp)
3270(3): mov %rdx,%rbx
3273(2): jnz 0xffffffd5(%rip)
3275(3): test %rax,%rax
3278(2): jz 0x8(%rip)
327a(4): mov (%r12),%rdi
327e(2): call %rax
3280(8): mov $0x0,(%r12)
3288(9): mov $0x0,0x8(%r12)
3291(4): add $0x10,%r12
3295(4): cmp %r12,0x8(%rbp)
3299(2): jnbe 0xffffff97(%rip)
329b(8): mov $0x0,0x18(%rbp)
32a3(8): mov $0x0,0x20(%rbp)
32ab(1): pop %rbx
32ac(1): pop %rbp
32ad(2): pop %r12
32af(1): ret near (%rsp)

"hash_free" :
32b0(2): push %r12
32b2(1): push %rbp
32b3(3): mov %rdi,%r12
32b6(1): push %rbx
32b7(5): cmp $0x0,0x40(%rdi)
32bc(3): mov (%rdi),%rbp
32bf(4): mov 0x8(%rdi),%rax
32c3(2): jz 0x50(%rip)
32c5(5): cmp $0x0,0x20(%rdi)
32ca(2): jz 0x49(%rip)
32cc(3): cmp %rax,%rbp
32cf(2): jnb 0x7d(%rip)
32d1(7): nop 0x0(%rax)
32d8(4): mov 0x0(%rbp),%rdi
32dc(3): test %rdi,%rdi
32df(2): jz 0x27(%rip)
32e1(3): mov %rbp,%rbx
32e4(2): jmp 0xf(%rip)
32e6(a): nop 0x0(%rax,%rax,1)
32f0(3): mov (%rbx),%rdi
32f3(5): call 0x40(%r12)
32f8(4): mov 0x8(%rbx),%rbx
32fc(3): test %rbx,%rbx
32ff(2): jnz 0xfffffff1(%rip)
3301(5): mov 0x8(%r12),%rax
3306(4): add $0x10,%rbp
330a(3): cmp %rbp,%rax
330d(2): jnbe 0xffffffcb(%rip)
330f(4): mov (%r12),%rbp
3313(3): cmp %rax,%rbp
3316(2): jnb 0x36(%rip)
3318(8): nop 0x0(%rax,%rax,1)
3320(4): mov 0x8(%rbp),%rdi
3324(3): test %rdi,%rdi
3327(2): jz 0x1a(%rip)
3329(7): nop 0x0(%rax)
3330(4): mov 0x8(%rdi),%rbx
3334(5): call 0xffffe10c(%rip)
3339(3): test %rbx,%rbx
333c(3): mov %rbx,%rdi
333f(2): jnz 0xfffffff1(%rip)
3341(4): add $0x10,%rbp
3345(5): cmp %rbp,0x8(%r12)
334a(2): jnbe 0xffffffd6(%rip)
334c(5): mov 0x48(%r12),%rdi
3351(3): test %rdi,%rdi
3354(2): jz 0x1d(%rip)
3356(a): nop 0x0(%rax,%rax,1)
3360(4): mov 0x8(%rdi),%rbx
3364(5): call 0xffffe0dc(%rip)
3369(3): test %rbx,%rbx
336c(3): mov %rbx,%rdi
336f(2): jnz 0xfffffff1(%rip)
3371(4): mov (%r12),%rdi
3375(5): call 0xffffe0cb(%rip)
337a(1): pop %rbx
337b(3): mov %r12,%rdi
337e(1): pop %rbp
337f(2): pop %r12
3381(5): jmp 0xffffe0bf(%rip)

"hash_rehash" :
3390(2): push %r12
3392(1): push %rbp
3393(3): mov %rdi,%rbp
3396(1): push %rbx
3397(4): sub $0x60,%rsp
339b(4): mov 0x28(%rdi),%r12
339f(9): mov $0x28,%rax
33a8(5): mov %rax,0x58(%rsp)
33ad(2): xor %eax,%eax
33af(6): cmp $0x0,0x10(%r12)
33b5(2): jnz 0x53(%rip)
33b7(3): test %rsi,%rsi
33ba(6): js 0x17e(%rip)
33c0(4): pxor %xmm0,%xmm0
33c4(5): cvtsi2ss %rsi,%xmm0
33c9(7): divss 0x8(%r12),%xmm0
33d0(7): ucomiss 0x3ca5(%rip),%xmm0
33d7(6): jnb 0x139(%rip)
33dd(7): ucomiss 0x3c9c(%rip),%xmm0
33e4(6): jb 0x17c(%rip)
33ea(8): subss 0x3c8e(%rip),%xmm0
33f2(a): mov $0x-9223372036854775808,%rax
33fc(5): cvttss2si %xmm0,%rsi
3401(3): xor %rax,%rsi
3404(4): nop 0x0(%rax)
3408(3): mov %rsi,%rdi
340b(5): call 0xfffff3e5(%rip)
3410(5): mov $0x8,%edx
3415(3): mov %rax,%rbx
3418(2): xor %ecx,%ecx
341a(3): mov %rdx,%rax
341d(3): mul %rax,%rbx,%rdx
3420(6): jo 0x19f(%rip)
3426(3): test %rax,%rax
3429(5): mov $0x1,%eax
342e(4): cmovs %rax,%rcx
3432(3): test %rbx,%rbx
3435(6): jz 0xdb(%rip)
343b(3): and $0x1,%ecx
343e(6): jnz 0xd2(%rip)
3444(4): cmp %rbx,0x10(%rbp)
3448(6): jz 0x128(%rip)
344e(5): mov $0x10,%esi
3453(3): mov %rbx,%rdi
3456(5): call 0xffffe18a(%rip)
345b(3): test %rax,%rax
345e(4): mov %rax,(%rsp)
3462(6): jz 0xae(%rip)
3468(5): mov %rbx,0x10(%rsp)
346d(4): shl/sal $0x4,%rbx
3471(5): mov %r12,0x28(%rsp)
3476(3): add %rax,%rbx
3479(4): mov 0x30(%rbp),%rax
347d(3): mov %rsp,%r12
3480(2): xor %edx,%edx
3482(3): mov %rbp,%rsi
3485(3): mov %r12,%rdi
3488(5): mov %rbx,0x8(%rsp)
348d(9): mov $0x0,0x18(%rsp)
3496(5): mov %rax,0x30(%rsp)
349b(4): mov 0x38(%rbp),%rax
349f(9): mov $0x0,0x20(%rsp)
34a8(5): mov %rax,0x38(%rsp)
34ad(4): mov 0x40(%rbp),%rax
34b1(5): mov %rax,0x40(%rsp)
34b6(4): mov 0x48(%rbp),%rax
34ba(5): mov %rax,0x48(%rsp)
34bf(5): call 0xfffff5c1(%rip)
34c4(2): test %al,%al
34c6(2): mov %eax,%ebx
34c8(6): jnz 0xb8(%rip)
34ce(5): mov 0x48(%rsp),%rax
34d3(5): mov $0x1,%edx
34d8(3): mov %r12,%rsi
34db(3): mov %rbp,%rdi
34de(4): mov %rax,0x48(%rbp)
34e2(5): call 0xfffff59e(%rip)
34e7(2): test %al,%al
34e9(6): jz 0xe0(%rip)
34ef(2): xor %edx,%edx
34f1(3): mov %r12,%rsi
34f4(3): mov %rbp,%rdi
34f7(5): call 0xfffff589(%rip)
34fc(2): test %al,%al
34fe(6): jz 0xcb(%rip)
3504(4): mov (%rsp),%rdi
3508(5): call 0xffffdf38(%rip)
350d(2): jmp 0x5(%rip)
350f(1): nop 
3510(2): xor %ebx,%ebx
3512(5): mov 0x58(%rsp),%rcx
3517(9): xor $0x28,%rcx
3520(2): mov %ebx,%eax
3522(6): jnz 0x98(%rip)
3528(4): add $0x60,%rsp
352c(1): pop %rbx
352d(1): pop %rbp
352e(2): pop %r12
3530(1): ret near (%rsp)
3531(7): nop 0x0(%rax)
3538(3): mov %rsi,%rax
353b(4): pxor %xmm0,%xmm0
353f(3): shr $0x1,%rax
3542(3): and $0x1,%esi
3545(3): or %rsi,%rax
3548(5): cvtsi2ss %rax,%xmm0
354d(4): addss %xmm0,%xmm0
3551(5): jmp 0xfffffe78(%rip)
3556(a): nop 0x0(%rax,%rax,1)
3560(5): cvttss2si %xmm0,%rsi
3565(5): jmp 0xfffffea3(%rip)
356a(6): nop 0x0(%rax,%rax,1)
3570(5): mov $0x1,%ebx
3575(2): jmp 0xffffff9d(%rip)
3577(9): nop 0x0(%rax,%rax,1)
3580(4): mov 0x0(%rbp),%rdi
3584(5): call 0xffffdebc(%rip)
3589(4): mov (%rsp),%rax
358d(4): mov %rax,0x0(%rbp)
3591(5): mov 0x8(%rsp),%rax
3596(4): mov %rax,0x8(%rbp)
359a(5): mov 0x10(%rsp),%rax
359f(4): mov %rax,0x10(%rbp)
35a3(5): mov 0x18(%rsp),%rax
35a8(4): mov %rax,0x18(%rbp)
35ac(5): mov 0x48(%rsp),%rax
35b1(4): mov %rax,0x48(%rbp)
35b5(5): jmp 0xffffff5d(%rip)
35ba(5): call 0xffffdf66(%rip)
35bf(5): mov $0x1,%ecx
35c4(5): jmp 0xfffffe62(%rip)
35c9(5): call 0xffffde87(%rip)

"hash_insert_if_absent" :
35d0(2): push %r13
35d2(2): push %r12
35d4(1): push %rbp
35d5(1): push %rbx
35d6(4): sub $0x18,%rsp
35da(9): mov $0x28,%rax
35e3(5): mov %rax,0x8(%rsp)
35e8(2): xor %eax,%eax
35ea(3): test %rsi,%rsi
35ed(6): jz 0x1c0(%rip)
35f3(3): mov %rsp,%r12
35f6(2): xor %ecx,%ecx
35f8(3): mov %rdx,%r13
35fb(3): mov %r12,%rdx
35fe(3): mov %rdi,%rbx
3601(3): mov %rsi,%rbp
3604(5): call 0xfffff2dc(%rip)
3609(3): test %rax,%rax
360c(3): mov %rax,%rdx
360f(2): jz 0x31(%rip)
3611(2): xor %eax,%eax
3613(3): test %r13,%r13
3616(2): jz 0x6(%rip)
3618(4): mov %rdx,0x0(%r13)
361c(5): mov 0x8(%rsp),%rcx
3621(9): xor $0x28,%rcx
362a(6): jnz 0x225(%rip)
3630(4): add $0x18,%rsp
3634(1): pop %rbx
3635(1): pop %rbp
3636(2): pop %r12
3638(2): pop %r13
363a(1): ret near (%rsp)
363b(5): nop 0x0(%rax,%rax,1)
3640(4): mov 0x18(%rbx),%rax
3644(3): test %rax,%rax
3647(2): js 0x79(%rip)
3649(4): pxor %xmm1,%xmm1
364d(4): mov 0x28(%rbx),%rdx
3651(5): cvtsi2ss %rax,%xmm1
3656(4): mov 0x10(%rbx),%rax
365a(3): test %rax,%rax
365d(6): js 0x8d(%rip)
3663(4): pxor %xmm0,%xmm0
3667(5): cvtsi2ss %rax,%xmm0
366c(5): mulss 0x8(%rdx),%xmm0
3671(3): ucomiss %xmm0,%xmm1
3674(6): jnbe 0x9c(%rip)
367a(4): mov (%rsp),%r12
367e(5): cmp $0x0,(%r12)
3683(6): jz 0x135(%rip)
3689(4): mov 0x48(%rbx),%rax
368d(3): test %rax,%rax
3690(6): jz 0x140(%rip)
3696(4): mov 0x8(%rax),%rdx
369a(4): mov %rdx,0x48(%rbx)
369e(5): mov 0x8(%r12),%rdx
36a3(3): mov %rbp,(%rax)
36a6(4): mov %rdx,0x8(%rax)
36aa(5): mov %rax,0x8(%r12)
36af(5): mov $0x1,%eax
36b4(5): add $0x1,0x20(%rbx)
36b9(5): jmp 0xffffff63(%rip)
36be(2): nop 
36c0(3): mov %rax,%rdx
36c3(4): pxor %xmm1,%xmm1
36c7(3): and $0x1,%eax
36ca(3): shr $0x1,%rdx
36cd(3): or %rax,%rdx
36d0(4): mov 0x10(%rbx),%rax
36d4(5): cvtsi2ss %rdx,%xmm1
36d9(4): mov 0x28(%rbx),%rdx
36dd(3): test %rax,%rax
36e0(4): addss %xmm1,%xmm1
36e4(6): jns 0xffffff7f(%rip)
36ea(3): mov %rax,%rcx
36ed(4): pxor %xmm0,%xmm0
36f1(3): shr $0x1,%rcx
36f4(3): and $0x1,%eax
36f7(3): or %rax,%rcx
36fa(5): cvtsi2ss %rcx,%xmm0
36ff(4): addss %xmm0,%xmm0
3703(5): jmp 0xffffff69(%rip)
3708(8): nop 0x0(%rax,%rax,1)
3710(4): lea 0x28(%rbx),%rdi
3714(5): call 0xfffff2ec(%rip)
3719(4): mov 0x10(%rbx),%rax
371d(4): mov 0x28(%rbx),%rdx
3721(3): test %rax,%rax
3724(5): movss 0x8(%rdx),%xmm2
3729(6): js 0xc7(%rip)
372f(4): pxor %xmm0,%xmm0
3733(5): cvtsi2ss %rax,%xmm0
3738(4): mov 0x18(%rbx),%rax
373c(3): test %rax,%rax
373f(6): js 0xd1(%rip)
3745(4): pxor %xmm1,%xmm1
3749(5): cvtsi2ss %rax,%xmm1
374e(3): movaps %xmm2,%xmm3
3751(4): mulss %xmm0,%xmm3
3755(3): ucomiss %xmm3,%xmm1
3758(6): jbe 0xffffff22(%rip)
375e(4): cmp $0x0,0x10(%rdx)
3762(5): mulss 0xc(%rdx),%xmm0
3767(2): jnz 0x6(%rip)
3769(4): mulss %xmm2,%xmm0
376d(7): ucomiss 0x3908(%rip),%xmm0
3774(2): jnb 0x6f(%rip)
3776(7): ucomiss 0x3903(%rip),%xmm0
377d(6): jnb 0xb3(%rip)
3783(5): cvttss2si %xmm0,%rsi
3788(3): mov %rbx,%rdi
378b(5): call 0xfffffc05(%rip)
3790(2): test %al,%al
3792(2): jz 0x51(%rip)
3794(2): xor %ecx,%ecx
3796(3): mov %r12,%rdx
3799(3): mov %rbp,%rsi
379c(3): mov %rbx,%rdi
379f(5): call 0xfffff141(%rip)
37a4(3): test %rax,%rax
37a7(6): jz 0xfffffed3(%rip)
37ad(5): call 0xffffdca3(%rip)
37b2(6): nop 0x0(%rax,%rax,1)
37b8(4): mov %rbp,(%r12)
37bc(5): mov $0x1,%eax
37c1(5): add $0x1,0x20(%rbx)
37c6(5): add $0x1,0x18(%rbx)
37cb(5): jmp 0xfffffe51(%rip)
37d0(5): mov $0x10,%edi
37d5(5): call 0xffffde5b(%rip)
37da(3): test %rax,%rax
37dd(6): jnz 0xfffffec1(%rip)
37e3(5): mov $0xffffffff,%eax
37e8(5): jmp 0xfffffe34(%rip)
37ed(3): nop (%rax)
37f0(3): mov %rax,%rcx
37f3(4): pxor %xmm0,%xmm0
37f7(3): shr $0x1,%rcx
37fa(3): and $0x1,%eax
37fd(3): or %rax,%rcx
3800(5): cvtsi2ss %rcx,%xmm0
3805(4): addss %xmm0,%xmm0
3809(5): jmp 0xffffff2f(%rip)
380e(2): nop 
3810(3): mov %rax,%rcx
3813(4): pxor %xmm1,%xmm1
3817(3): shr $0x1,%rcx
381a(3): and $0x1,%eax
381d(3): or %rax,%rcx
3820(5): cvtsi2ss %rcx,%xmm1
3825(4): addss %xmm1,%xmm1
3829(5): jmp 0xffffff25(%rip)
382e(2): nop 
3830(8): subss 0x3848(%rip),%xmm0
3838(a): mov $0x-9223372036854775808,%rax
3842(5): cvttss2si %xmm0,%rsi
3847(3): xor %rax,%rsi
384a(5): jmp 0xffffff3e(%rip)
384f(5): call 0xffffdcd1(%rip)

"hash_insert" :
3860(1): push %rbx
3861(3): mov %rsi,%rbx
3864(4): sub $0x10,%rsp
3868(3): mov %rsp,%rdx
386b(9): mov $0x28,%rax
3874(5): mov %rax,0x8(%rsp)
3879(2): xor %eax,%eax
387b(5): call 0xfffffd55(%rip)
3880(3): cmp $0xff,%eax
3883(2): jz 0x2d(%rip)
3885(2): test %eax,%eax
3887(2): jnz 0x6(%rip)
3889(4): mov (%rsp),%rbx
388d(5): mov 0x8(%rsp),%rcx
3892(9): xor $0x28,%rcx
389b(3): mov %rbx,%rax
389e(2): jnz 0x16(%rip)
38a0(4): add $0x10,%rsp
38a4(1): pop %rbx
38a5(1): ret near (%rsp)
38a6(a): nop 0x0(%rax,%rax,1)
38b0(2): xor %ebx,%ebx
38b2(2): jmp 0xffffffdb(%rip)
38b4(5): call 0xffffdc6c(%rip)

"hash_delete" :
38c0(2): push %r12
38c2(1): push %rbp
38c3(5): mov $0x1,%ecx
38c8(1): push %rbx
38c9(3): mov %rdi,%rbx
38cc(4): sub $0x10,%rsp
38d0(3): mov %rsp,%rdx
38d3(9): mov $0x28,%rax
38dc(5): mov %rax,0x8(%rsp)
38e1(2): xor %eax,%eax
38e3(5): call 0xffffeffd(%rip)
38e8(3): test %rax,%rax
38eb(3): mov %rax,%rbp
38ee(2): jz 0x11(%rip)
38f0(4): mov (%rsp),%rax
38f4(5): sub $0x1,0x20(%rbx)
38f9(4): cmp $0x0,(%rax)
38fd(2): jz 0x23(%rip)
38ff(5): mov 0x8(%rsp),%rcx
3904(9): xor $0x28,%rcx
390d(3): mov %rbp,%rax
3910(6): jnz 0x1ae(%rip)
3916(4): add $0x10,%rsp
391a(1): pop %rbx
391b(1): pop %rbp
391c(2): pop %r12
391e(1): ret near (%rsp)
391f(1): nop 
3920(4): mov 0x18(%rbx),%rax
3924(4): sub $0x1,%rax
3928(3): test %rax,%rax
392b(4): mov %rax,0x18(%rbx)
392f(6): js 0x101(%rip)
3935(4): pxor %xmm0,%xmm0
3939(5): cvtsi2ss %rax,%xmm0
393e(4): mov 0x10(%rbx),%rax
3942(4): mov 0x28(%rbx),%rdx
3946(3): test %rax,%rax
3949(6): js 0xc7(%rip)
394f(4): pxor %xmm1,%xmm1
3953(5): cvtsi2ss %rax,%xmm1
3958(4): mulss (%rdx),%xmm1
395c(3): ucomiss %xmm0,%xmm1
395f(2): jbe 0xffffffa0(%rip)
3961(4): lea 0x28(%rbx),%rdi
3965(5): call 0xfffff09b(%rip)
396a(4): mov 0x10(%rbx),%rax
396e(4): mov 0x28(%rbx),%rdx
3972(3): test %rax,%rax
3975(6): js 0x12b(%rip)
397b(4): pxor %xmm0,%xmm0
397f(5): cvtsi2ss %rax,%xmm0
3984(4): mov 0x18(%rbx),%rax
3988(3): test %rax,%rax
398b(6): js 0xf5(%rip)
3991(4): pxor %xmm1,%xmm1
3995(5): cvtsi2ss %rax,%xmm1
399a(4): movss (%rdx),%xmm2
399e(4): mulss %xmm0,%xmm2
39a2(3): ucomiss %xmm1,%xmm2
39a5(6): jbe 0xffffff5a(%rip)
39ab(4): cmp $0x0,0x10(%rdx)
39af(5): mulss 0x4(%rdx),%xmm0
39b4(6): jz 0xbc(%rip)
39ba(7): ucomiss 0x36bf(%rip),%xmm0
39c1(6): jnb 0x8f(%rip)
39c7(5): cvttss2si %xmm0,%rsi
39cc(3): mov %rbx,%rdi
39cf(5): call 0xfffff9c1(%rip)
39d4(2): test %al,%al
39d6(6): jnz 0xffffff29(%rip)
39dc(4): mov 0x48(%rbx),%rdi
39e0(3): test %rdi,%rdi
39e3(2): jz 0x16(%rip)
39e5(3): nop (%rax)
39e8(4): mov 0x8(%rdi),%r12
39ec(5): call 0xffffda54(%rip)
39f1(3): test %r12,%r12
39f4(3): mov %r12,%rdi
39f7(2): jnz 0xfffffff1(%rip)
39f9(8): mov $0x0,0x48(%rbx)
3a01(5): jmp 0xfffffefe(%rip)
3a06(a): nop 0x0(%rax,%rax,1)
3a10(3): mov %rax,%rcx
3a13(4): pxor %xmm1,%xmm1
3a17(3): shr $0x1,%rcx
3a1a(3): and $0x1,%eax
3a1d(3): or %rax,%rcx
3a20(5): cvtsi2ss %rcx,%xmm1
3a25(4): addss %xmm1,%xmm1
3a29(5): jmp 0xffffff2f(%rip)
3a2e(2): nop 
3a30(3): mov %rax,%rdx
3a33(4): pxor %xmm0,%xmm0
3a37(3): shr $0x1,%rdx
3a3a(3): and $0x1,%eax
3a3d(3): or %rax,%rdx
3a40(5): cvtsi2ss %rdx,%xmm0
3a45(4): addss %xmm0,%xmm0
3a49(5): jmp 0xfffffef5(%rip)
3a4e(2): nop 
3a50(8): subss 0x3628(%rip),%xmm0
3a58(a): mov $0x-9223372036854775808,%rax
3a62(5): cvttss2si %xmm0,%rsi
3a67(3): xor %rax,%rsi
3a6a(5): jmp 0xffffff62(%rip)
3a6f(1): nop 
3a70(5): mulss 0x8(%rdx),%xmm0
3a75(5): jmp 0xffffff45(%rip)
3a7a(6): nop 0x0(%rax,%rax,1)
3a80(3): mov %rax,%rcx
3a83(4): pxor %xmm1,%xmm1
3a87(3): shr $0x1,%rcx
3a8a(3): and $0x1,%eax
3a8d(3): or %rax,%rcx
3a90(5): cvtsi2ss %rcx,%xmm1
3a95(4): addss %xmm1,%xmm1
3a99(5): jmp 0xffffff01(%rip)
3a9e(2): nop 
3aa0(3): mov %rax,%rcx
3aa3(4): pxor %xmm0,%xmm0
3aa7(3): shr $0x1,%rcx
3aaa(3): and $0x1,%eax
3aad(3): or %rax,%rcx
3ab0(5): cvtsi2ss %rcx,%xmm0
3ab5(4): addss %xmm0,%xmm0
3ab9(5): jmp 0xfffffecb(%rip)
3abe(5): call 0xffffda62(%rip)

"triple_hash" :
3ad0(1): push %rbp
3ad1(1): push %rbx
3ad2(3): mov %rdi,%rbp
3ad5(3): mov %rsi,%rbx
3ad8(4): sub $0x8,%rsp
3adc(3): mov (%rdi),%rdi
3adf(5): call 0x2bc1(%rip)
3ae4(4): xor 0x8(%rbp),%rax
3ae8(2): xor %edx,%edx
3aea(4): add $0x8,%rsp
3aee(3): div %rbx,%rax
3af1(1): pop %rbx
3af2(1): pop %rbp
3af3(3): mov %rdx,%rax
3af6(1): ret near (%rsp)

"triple_hash_no_name" :
3b00(4): mov 0x8(%rdi),%rax
3b04(2): xor %edx,%edx
3b06(3): div %rsi,%rax
3b09(3): mov %rdx,%rax
3b0c(1): ret near (%rsp)

"triple_compare" :
3b10(2): xor %eax,%eax
3b12(4): mov 0x8(%rsi),%rdx
3b16(4): cmp %rdx,0x8(%rdi)
3b1a(2): jz 0x6(%rip)
3b1c(2): REP ret near (%rsp)
3b1e(2): nop 
3b20(4): mov 0x10(%rsi),%rcx
3b24(4): cmp %rcx,0x10(%rdi)
3b28(2): jnz 0xfffffff4(%rip)
3b2a(4): sub $0x8,%rsp
3b2e(3): mov (%rsi),%rsi
3b31(3): mov (%rdi),%rdi
3b34(5): call 0x1f6c(%rip)
3b39(4): add $0x8,%rsp
3b3d(1): ret near (%rsp)

"triple_compare_ino_str" :
3b40(2): xor %eax,%eax
3b42(4): mov 0x8(%rsi),%rdx
3b46(4): cmp %rdx,0x8(%rdi)
3b4a(2): jz 0x6(%rip)
3b4c(2): REP ret near (%rsp)
3b4e(2): nop 
3b50(4): mov 0x10(%rsi),%rcx
3b54(4): cmp %rcx,0x10(%rdi)
3b58(2): jnz 0xfffffff4(%rip)
3b5a(4): sub $0x8,%rsp
3b5e(3): mov (%rsi),%rsi
3b61(3): mov (%rdi),%rdi
3b64(5): call 0xffffda8c(%rip)
3b69(2): test %eax,%eax
3b6b(3): setz %al
3b6e(4): add $0x8,%rsp
3b72(1): ret near (%rsp)

"triple_free" :
3b80(1): push %rbx
3b81(3): mov %rdi,%rbx
3b84(3): mov (%rdi),%rdi
3b87(5): call 0xffffd8b9(%rip)
3b8c(3): mov %rbx,%rdi
3b8f(1): pop %rbx
3b90(5): jmp 0xffffd8b0(%rip)

"set_program_name" :
3ba0(3): test %rdi,%rdi
3ba3(1): push %rbx
3ba4(2): jz 0x79(%rip)
3ba6(5): mov $0x2f,%esi
3bab(3): mov %rdi,%rbx
3bae(5): call 0xffffd9c2(%rip)
3bb3(3): test %rax,%rax
3bb6(2): jz 0x57(%rip)
3bb8(4): lea 0x1(%rax),%r8
3bbc(3): mov %r8,%rdx
3bbf(3): sub %rbx,%rdx
3bc2(4): cmp $0x6,%rdx
3bc6(2): jle 0x47(%rip)
3bc8(4): lea 0xfffffffa(%rax),%rsi
3bcc(7): lea 0x34f5(%rip),%rdi
3bd3(5): mov $0x7,%ecx
3bd8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3bda(3): setnbe %dl
3bdd(3): sbb $0x0,%dl
3be0(2): test %dl,%dl
3be2(2): jnz 0x2b(%rip)
3be4(7): lea 0x34e5(%rip),%rdi
3beb(5): mov $0x3,%ecx
3bf0(3): mov %r8,%rsi
3bf3(3): mov %r8,%rbx
3bf6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3bf8(3): setnbe %dl
3bfb(3): sbb $0x0,%dl
3bfe(2): test %dl,%dl
3c00(2): jnz 0xd(%rip)
3c02(4): lea 0x4(%rax),%rbx
3c06(7): mov %rbx,0x206473(%rip)
3c0d(7): mov %rbx,0x2064ac(%rip)
3c14(7): mov %rbx,0x20647d(%rip)
3c1b(1): pop %rbx
3c1c(1): ret near (%rsp)
3c1d(7): mov 0x20647c(%rip),%rcx
3c24(7): lea 0x3465(%rip),%rdi
3c2b(5): mov $0x37,%edx
3c30(5): mov $0x1,%esi
3c35(5): call 0xffffdabb(%rip)
3c3a(5): call 0xffffd816(%rip)

"gettext_quote.part.1" :
3c40(1): push %rbp
3c41(1): push %rbx
3c42(3): mov %rdi,%rbp
3c45(2): mov %esi,%ebx
3c47(4): sub $0x8,%rsp
3c4b(5): call 0x2a95(%rip)
3c50(3): movzx (%rax),%edx
3c53(3): and $0xdf,%edx
3c56(3): cmp $0x55,%dl
3c59(2): jz 0x77(%rip)
3c5b(3): cmp $0x47,%dl
3c5e(2): jz 0x22(%rip)
3c60(7): lea 0x347c(%rip),%rax
3c67(7): lea 0x3477(%rip),%rdx
3c6e(3): cmp $0x9,%ebx
3c71(4): cmovne %rdx,%rax
3c75(4): add $0x8,%rsp
3c79(1): pop %rbx
3c7a(1): pop %rbp
3c7b(1): ret near (%rsp)
3c7c(4): nop 0x0(%rax)
3c80(4): movzx 0x1(%rax),%edx
3c84(3): and $0xdf,%edx
3c87(3): cmp $0x42,%dl
3c8a(2): jnz 0xffffffd6(%rip)
3c8c(4): cmp $0x31,0x2(%rax)
3c90(2): jnz 0xffffffd0(%rip)
3c92(4): cmp $0x38,0x3(%rax)
3c96(2): jnz 0xffffffca(%rip)
3c98(4): cmp $0x30,0x4(%rax)
3c9c(2): jnz 0xffffffc4(%rip)
3c9e(4): cmp $0x33,0x5(%rax)
3ca2(2): jnz 0xffffffbe(%rip)
3ca4(4): cmp $0x30,0x6(%rax)
3ca8(2): jnz 0xffffffb8(%rip)
3caa(4): cmp $0x0,0x7(%rax)
3cae(2): jnz 0xffffffb2(%rip)
3cb0(4): cmp $0x60,0x0(%rbp)
3cb4(7): lea 0x3421(%rip),%rax
3cbb(7): lea 0x341e(%rip),%rdx
3cc2(4): cmovne %rdx,%rax
3cc6(4): add $0x8,%rsp
3cca(1): pop %rbx
3ccb(1): pop %rbp
3ccc(1): ret near (%rsp)
3ccd(3): nop (%rax)
3cd0(4): movzx 0x1(%rax),%edx
3cd4(3): and $0xdf,%edx
3cd7(3): cmp $0x54,%dl
3cda(2): jnz 0xffffff86(%rip)
3cdc(4): movzx 0x2(%rax),%edx
3ce0(3): and $0xdf,%edx
3ce3(3): cmp $0x46,%dl
3ce6(6): jnz 0xffffff7a(%rip)
3cec(4): cmp $0x2d,0x3(%rax)
3cf0(6): jnz 0xffffff70(%rip)
3cf6(4): cmp $0x38,0x4(%rax)
3cfa(6): jnz 0xffffff66(%rip)
3d00(4): cmp $0x0,0x5(%rax)
3d04(6): jnz 0xffffff5c(%rip)
3d0a(4): cmp $0x60,0x0(%rbp)
3d0e(7): lea 0x33bf(%rip),%rax
3d15(7): lea 0x33bc(%rip),%rdx
3d1c(4): cmovne %rdx,%rax
3d20(4): add $0x8,%rsp
3d24(1): pop %rbx
3d25(1): pop %rbp
3d26(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3d30(2): push %r15
3d32(2): push %r14
3d34(3): mov %r8d,%r15d
3d37(2): push %r13
3d39(2): push %r12
3d3b(3): mov %rdi,%r14
3d3e(1): push %rbp
3d3f(1): push %rbx
3d40(3): mov %r9d,%ebx
3d43(3): mov %rsi,%r13
3d46(3): mov %rcx,%rbp
3d49(3): and $0x2,%ebx
3d4c(7): sub $0xb8,%rsp
3d53(8): mov 0xf0(%rsp),%rax
3d5b(5): mov %rdx,0x10(%rsp)
3d60(5): mov %r8d,0x8(%rsp)
3d65(5): mov %r9d,0x78(%rsp)
3d6a(5): mov %rax,0x20(%rsp)
3d6f(8): mov 0xf8(%rsp),%rax
3d77(5): mov %rax,0x68(%rsp)
3d7c(8): mov 0x100(%rsp),%rax
3d84(5): mov %rax,0x60(%rsp)
3d89(9): mov $0x28,%rax
3d92(8): mov %rax,0xa8(%rsp)
3d9a(2): xor %eax,%eax
3d9c(5): call 0xffffd754(%rip)
3da1(4): cmp $0xa,%r15d
3da5(5): mov %rax,0x58(%rsp)
3daa(6): jnbe 0x11b5(%rip)
3db0(7): lea 0x3389(%rip),%rcx
3db7(3): mov %r15d,%edx
3dba(4): movsxd 0x0(%rcx,%rdx,4),%rax
3dbe(3): add %rcx,%rax
3dc1(2): jmp %rax
3dc3(5): mov $0x1,0xe(%rsp)
3dc8(5): mov $0x0,0x7c(%rsp)
3dcd(3): xor %r12d,%r12d
3dd0(9): mov $0x0,0x50(%rsp)
3dd9(5): mov $0x1,0xf(%rsp)
3dde(5): mov $0x0,0xd(%rsp)
3de3(7): lea 0x32fb(%rip),%rax
3dea(9): mov $0x1,0x18(%rsp)
3df3(3): xor %r15d,%r15d
3df6(8): mov $0x2,0x8(%rsp)
3dfe(5): mov %rax,0x48(%rsp)
3e03(3): xor %r11d,%r11d
3e06(3): mov %rbp,%rax
3e09(3): mov %r12d,%r8d
3e0c(3): mov %r11,%rbp
3e0f(3): mov %rax,%r11
3e12(6): nop 0x0(%rax,%rax,1)
3e18(3): cmp %rbp,%r11
3e1b(4): setnz %r12b
3e1f(4): cmp $0xffffffff,%r11
3e23(2): jnz 0xf(%rip)
3e25(5): mov 0x10(%rsp),%rax
3e2a(4): cmp $0x0,0x0(%rax,%rbp,1)
3e2e(4): setnz %r12b
3e32(3): test %r12b,%r12b
3e35(6): jz 0x65b(%rip)
3e3b(5): cmp $0x2,0x8(%rsp)
3e40(5): mov 0x10(%rsp),%rdi
3e45(4): lea 0x0(%rdi,%rbp,1),%r9
3e49(3): setnz %al
3e4c(4): and 0xd(%rsp),%al
3e50(3): mov %eax,%r10d
3e53(6): jz 0xad(%rip)
3e59(5): mov 0x18(%rsp),%rax
3e5e(3): test %rax,%rax
3e61(6): jz 0x42f(%rip)
3e67(4): cmp $0xffffffff,%r11
3e6b(5): lea 0x0(%rbp,%rax,1),%rbx
3e70(2): jnz 0x30(%rip)
3e72(4): cmp $0x1,%rax
3e76(2): jbe 0x2a(%rip)
3e78(5): mov %r8b,0x38(%rsp)
3e7d(5): mov %r10b,0x30(%rsp)
3e82(5): mov %r9,0x28(%rsp)
3e87(5): call 0xffffd679(%rip)
3e8c(6): movzx 0x38(%rsp),%r8d
3e92(6): movzx 0x30(%rsp),%r10d
3e98(3): mov %rax,%r11
3e9b(5): mov 0x28(%rsp),%r9
3ea0(3): cmp %r11,%rbx
3ea3(5): mov %r10b,0x28(%rsp)
3ea8(6): jnbe 0x5b8(%rip)
3eae(5): mov 0x18(%rsp),%rdx
3eb3(5): mov 0x48(%rsp),%rsi
3eb8(3): mov %r9,%rdi
3ebb(5): mov %r11,0x40(%rsp)
3ec0(5): mov %r8b,0x38(%rsp)
3ec5(5): mov %r9,0x30(%rsp)
3eca(5): call 0xffffd6f6(%rip)
3ecf(2): test %eax,%eax
3ed1(5): mov 0x30(%rsp),%r9
3ed6(6): movzx 0x38(%rsp),%r8d
3edc(5): mov 0x40(%rsp),%r11
3ee1(6): jnz 0x57f(%rip)
3ee7(5): cmp $0x0,0xf(%rsp)
3eec(6): movzx 0x28(%rsp),%r10d
3ef2(6): jnz 0xf83(%rip)
3ef8(8): nop 0x0(%rax,%rax,1)
3f00(4): movzx (%r9),%ebx
3f04(3): cmp $0x7e,%bl
3f07(6): jnbe 0x321(%rip)
3f0d(7): lea 0x3258(%rip),%rcx
3f14(3): movzx %bl,%edx
3f17(4): movsxd 0x0(%rcx,%rdx,4),%rax
3f1b(3): add %rcx,%rax
3f1e(2): jmp %rax
3f20(3): xor %r10d,%r10d
3f23(4): cmp $0x1,%r11
3f27(3): setnz %al
3f2a(4): cmp $0xffffffff,%r11
3f2e(2): jnz 0xe(%rip)
3f30(5): mov 0x10(%rsp),%rax
3f35(4): cmp $0x0,0x1(%rax)
3f39(3): setnz %al
3f3c(5): cmp $0x2,0x8(%rsp)
3f41(3): setz %dl
3f44(2): test %al,%al
3f46(6): jz 0x252(%rip)
3f4c(3): xor %r12d,%r12d
3f4f(2): xor %eax,%eax
3f51(7): nop 0x0(%rax)
3f58(5): cmp $0x1,0xd(%rsp)
3f5d(6): jnz 0x115(%rip)
3f63(2): test %dl,%dl
3f65(6): jnz 0x10d(%rip)
3f6b(5): mov 0x20(%rsp),%rsi
3f70(3): test %rsi,%rsi
3f73(2): jz 0x16(%rip)
3f75(2): mov %ebx,%edx
3f77(3): shr $0x5,%dl
3f7a(3): movzx %dl,%edx
3f7d(3): mov 0x0(%rsi,%rdx,4),%edx
3f80(3): bt %ebx,%edx
3f83(6): jb 0x150(%rip)
3f89(3): test %r10b,%r10b
3f8c(6): jnz 0x147(%rip)
3f92(3): xor $0x1,%eax
3f95(4): add $0x1,%rbp
3f99(3): and %r8d,%eax
3f9c(2): test %al,%al
3f9e(2): jz 0x22(%rip)
3fa0(3): cmp %r15,%r13
3fa3(2): jbe 0x7(%rip)
3fa5(5): mov $0x27,0x0(%r14,%r15,1)
3faa(4): lea 0x1(%r15),%rax
3fae(3): cmp %rax,%r13
3fb1(2): jbe 0x8(%rip)
3fb3(6): mov $0x27,0x1(%r14,%r15,1)
3fb9(4): add $0x2,%r15
3fbd(3): xor %r8d,%r8d
3fc0(3): cmp %r13,%r15
3fc3(2): jnb 0x6(%rip)
3fc5(4): mov %bl,0x0(%r14,%r15,1)
3fc9(5): movzx 0xe(%rsp),%edi
3fce(4): add $0x1,%r15
3fd2(5): mov $0x0,%eax
3fd7(3): test %r12b,%r12b
3fda(3): cmove %eax,%edi
3fdd(5): mov %dil,0xe(%rsp)
3fe2(5): jmp 0xfffffe36(%rip)
3fe7(9): nop 0x0(%rax,%rax,1)
3ff0(3): xor %r10d,%r10d
3ff3(4): mov 0x8(%rsp),%eax
3ff7(3): cmp $0x2,%eax
3ffa(6): jz 0x5be(%rip)
4000(3): cmp $0x5,%eax
4003(6): jz 0x575(%rip)
4009(3): cmp $0x2,%eax
400c(5): mov $0x3f,%ebx
4011(3): setz %dl
4014(3): xor %r12d,%r12d
4017(2): xor %eax,%eax
4019(5): jmp 0xffffff3f(%rip)
401e(2): nop 
4020(3): xor %r10d,%r10d
4023(5): cmp $0x2,0x8(%rsp)
4028(6): jz 0x508(%rip)
402e(5): mov %r12b,0x7c(%rsp)
4033(2): xor %edx,%edx
4035(2): xor %eax,%eax
4037(5): mov $0x27,%ebx
403c(5): jmp 0xffffff1c(%rip)
4041(7): nop 0x0(%rax)
4048(5): mov $0x9,%edx
404d(5): mov $0x74,%ebx
4052(5): cmp $0x2,0x8(%rsp)
4057(3): setz %al
405a(4): and 0xf(%rsp),%al
405e(6): jnz 0x150(%rip)
4064(5): cmp $0x0,0xd(%rsp)
4069(2): jnz 0x67(%rip)
406b(2): mov %edx,%ebx
406d(3): xor %r12d,%r12d
4070(2): xor %eax,%eax
4072(5): cmp $0x0,0xf(%rsp)
4077(6): jnz 0xfffffef4(%rip)
407d(5): jmp 0xffffff0c(%rip)
4082(6): nop 0x0(%rax,%rax,1)
4088(5): mov $0x8,%edx
408d(5): mov $0x62,%ebx
4092(2): jmp 0xffffffd2(%rip)
4094(4): nop 0x0(%rax)
4098(5): cmp $0x2,0x8(%rsp)
409d(6): jz 0x3d3(%rip)
40a3(5): cmp $0x0,0xd(%rsp)
40a8(6): jz 0x218(%rip)
40ae(5): cmp $0x0,0xf(%rsp)
40b3(6): jz 0x20d(%rip)
40b9(6): cmp $0x0,0x18(%rsp)
40bf(6): jnz 0x3bc(%rip)
40c5(5): mov $0x5c,%ebx
40ca(6): nop 0x0(%rax,%rax,1)
40d0(3): xor %r12d,%r12d
40d3(5): cmp $0x2,0x8(%rsp)
40d8(3): setz %dl
40db(5): cmp $0x0,0xf(%rsp)
40e0(2): mov %edx,%eax
40e2(6): jnz 0x856(%rip)
40e8(3): mov %r8d,%eax
40eb(3): xor $0x1,%eax
40ee(2): and %dl,%al
40f0(2): jz 0x31(%rip)
40f2(3): cmp %r15,%r13
40f5(2): jbe 0x7(%rip)
40f7(5): mov $0x27,0x0(%r14,%r15,1)
40fc(4): lea 0x1(%r15),%rdx
4100(3): cmp %rdx,%r13
4103(2): jbe 0x8(%rip)
4105(6): mov $0x24,0x1(%r14,%r15,1)
410b(4): lea 0x2(%r15),%rdx
410f(3): cmp %rdx,%r13
4112(2): jbe 0x8(%rip)
4114(6): mov $0x27,0x2(%r14,%r15,1)
411a(4): add $0x3,%r15
411e(3): mov %eax,%r8d
4121(3): cmp %r15,%r13
4124(2): jbe 0x7(%rip)
4126(5): mov $0x5c,0x0(%r14,%r15,1)
412b(4): add $0x1,%r15
412f(4): add $0x1,%rbp
4133(5): jmp 0xfffffe8d(%rip)
4138(8): nop 0x0(%rax,%rax,1)
4140(5): cmp $0x0,0xd(%rsp)
4145(6): jnz 0x1ce(%rip)
414b(2): xor %edx,%edx
414d(5): test $0x1,0x78(%rsp)
4152(6): jz 0xffffff19(%rip)
4158(4): add $0x1,%rbp
415c(5): jmp 0xfffffcbc(%rip)
4161(7): nop 0x0(%rax)
4168(5): cmp $0x2,0x8(%rsp)
416d(3): setz %dl
4170(2): xor %eax,%eax
4172(5): jmp 0xfffffde6(%rip)
4177(9): nop 0x0(%rax,%rax,1)
4180(5): mov $0x7,%edx
4185(5): mov $0x61,%ebx
418a(5): jmp 0xfffffeda(%rip)
418f(1): nop 
4190(5): cmp $0x2,0x8(%rsp)
4195(3): setz %dl
4198(3): test %rbp,%rbp
419b(6): jnz 0xfffffdb1(%rip)
41a1(5): movzx 0xf(%rsp),%eax
41a6(2): and %dl,%al
41a8(6): jz 0xfffffdb0(%rip)
41ae(3): mov %r11,%rbp
41b1(8): mov $0x2,0x8(%rsp)
41b9(5): jmp 0x700(%rip)
41be(2): nop 
41c0(5): cmp $0x2,0x8(%rsp)
41c5(3): setz %dl
41c8(3): xor %r12d,%r12d
41cb(2): jmp 0xffffffd6(%rip)
41cd(3): nop (%rax)
41d0(5): cmp $0x2,0x8(%rsp)
41d5(5): mov $0x20,%ebx
41da(3): setz %dl
41dd(2): jmp 0xffffffc4(%rip)
41df(1): nop 
41e0(5): mov $0xd,%edx
41e5(5): mov $0x72,%ebx
41ea(5): jmp 0xfffffe68(%rip)
41ef(1): nop 
41f0(5): mov $0xc,%edx
41f5(5): mov $0x66,%ebx
41fa(5): jmp 0xfffffe6a(%rip)
41ff(1): nop 
4200(5): mov $0xb,%edx
4205(5): mov $0x76,%ebx
420a(5): jmp 0xfffffe5a(%rip)
420f(1): nop 
4210(5): mov $0xa,%edx
4215(5): mov $0x6e,%ebx
421a(5): jmp 0xfffffe38(%rip)
421f(1): nop 
4220(3): xor %r10d,%r10d
4223(5): nop 0x0(%rax,%rax,1)
4228(6): cmp $0x1,0x58(%rsp)
422e(6): jnz 0x3aa(%rip)
4234(5): mov %r11,0x38(%rsp)
4239(5): mov %r8b,0x30(%rsp)
423e(5): mov %r10b,0x28(%rsp)
4243(5): call 0xffffd4ed(%rip)
4248(3): mov (%rax),%rcx
424b(3): movzx %bl,%edx
424e(6): movzx 0x28(%rsp),%r10d
4254(6): movzx 0x30(%rsp),%r8d
425a(5): mov 0x38(%rsp),%r11
425f(5): mov $0x1,%edi
4264(4): movzx 0x0(%rcx,%rdx,2),%eax
4268(4): and $0x4000,%ax
426c(4): setnz %r12b
4270(3): setz %al
4273(4): and 0xd(%rsp),%al
4277(2): test %al,%al
4279(6): jnz 0x998(%rip)
427f(5): cmp $0x2,0x8(%rsp)
4284(3): setz %dl
4287(5): jmp 0xfffffcd1(%rip)
428c(4): nop 0x0(%rax)
4290(4): movzx (%r9),%ebx
4294(3): cmp $0x7e,%bl
4297(2): jnbe 0xffffff89(%rip)
4299(7): lea 0x30c8(%rip),%rcx
42a0(3): movzx %bl,%edx
42a3(4): movsxd 0x0(%rcx,%rdx,4),%rax
42a7(3): add %rcx,%rax
42aa(2): jmp %rax
42ac(4): nop 0x0(%rax)
42b0(3): xor %r10d,%r10d
42b3(5): cmp $0x0,0xd(%rsp)
42b8(6): jnz 0xfffffdf6(%rip)
42be(2): nop 
42c0(5): mov $0x5c,%edx
42c5(5): mov $0x5c,%ebx
42ca(5): jmp 0xfffffd9a(%rip)
42cf(1): nop 
42d0(5): mov $0xc,%edx
42d5(3): xor %r10d,%r10d
42d8(5): mov $0x66,%ebx
42dd(5): jmp 0xfffffd87(%rip)
42e2(6): nop 0x0(%rax,%rax,1)
42e8(5): mov $0xa,%edx
42ed(3): xor %r10d,%r10d
42f0(5): mov $0x6e,%ebx
42f5(5): jmp 0xfffffd5d(%rip)
42fa(6): nop 0x0(%rax,%rax,1)
4300(5): mov $0x61,%ebx
4305(5): jmp 0xfffffdcb(%rip)
430a(6): nop 0x0(%rax,%rax,1)
4310(3): xor %r10d,%r10d
4313(5): cmp $0x2,0x8(%rsp)
4318(3): setz %dl
431b(5): cmp $0x0,0xf(%rsp)
4320(6): jnz 0xb9a(%rip)
4326(3): mov %r8d,%eax
4329(3): mov %r15,%rcx
432c(3): xor $0x1,%eax
432f(2): and %dl,%al
4331(2): jz 0x2f(%rip)
4333(3): cmp %r15,%r13
4336(2): jbe 0x7(%rip)
4338(5): mov $0x27,0x0(%r14,%r15,1)
433d(4): lea 0x1(%r15),%rcx
4341(3): cmp %rcx,%r13
4344(2): jbe 0x8(%rip)
4346(6): mov $0x24,0x1(%r14,%r15,1)
434c(4): lea 0x2(%r15),%rcx
4350(3): cmp %rcx,%r13
4353(6): jnbe 0x636(%rip)
4359(4): lea 0x3(%r15),%rcx
435d(3): mov %eax,%r8d
4360(3): cmp %rcx,%r13
4363(2): jbe 0x7(%rip)
4365(5): mov $0x5c,0x0(%r14,%rcx,1)
436a(5): cmp $0x2,0x8(%rsp)
436f(4): lea 0x1(%rcx),%r15
4373(6): jz 0x606(%rip)
4379(4): lea 0x1(%rbp),%rax
437d(3): cmp %r11,%rax
4380(2): jnb 0x1b(%rip)
4382(5): mov 0x10(%rsp),%rax
4387(5): movzx 0x1(%rax,%rbp,1),%eax
438c(4): mov %al,0x28(%rsp)
4390(3): sub $0x30,%eax
4393(2): cmp $0x9,%al
4395(6): jbe 0x834(%rip)
439b(3): mov %r12d,%eax
439e(5): mov $0x30,%ebx
43a3(3): xor %r12d,%r12d
43a6(5): jmp 0xfffffbb2(%rip)
43ab(5): nop 0x0(%rax,%rax,1)
43b0(5): cmp $0x2,0x8(%rsp)
43b5(3): mov %r10d,%r12d
43b8(3): setz %dl
43bb(3): xor %r10d,%r10d
43be(2): xor %eax,%eax
43c0(5): jmp 0xfffffb98(%rip)
43c5(3): nop (%rax)
43c8(5): cmp $0x2,0x8(%rsp)
43cd(3): setz %dl
43d0(3): xor %r10d,%r10d
43d3(5): jmp 0xfffffdc5(%rip)
43d8(8): nop 0x0(%rax,%rax,1)
43e0(5): cmp $0x2,0x8(%rsp)
43e5(3): setz %dl
43e8(3): xor %r10d,%r10d
43eb(3): xor %r12d,%r12d
43ee(5): jmp 0xfffffdb3(%rip)
43f3(5): nop 0x0(%rax,%rax,1)
43f8(5): cmp $0x2,0x8(%rsp)
43fd(3): mov %r10d,%r12d
4400(5): mov $0x20,%ebx
4405(3): setz %dl
4408(3): xor %r10d,%r10d
440b(5): jmp 0xfffffd96(%rip)
4410(5): mov $0xd,%edx
4415(3): xor %r10d,%r10d
4418(5): mov $0x72,%ebx
441d(5): jmp 0xfffffc35(%rip)
4422(6): nop 0x0(%rax,%rax,1)
4428(5): mov $0x76,%ebx
442d(5): jmp 0xfffffca3(%rip)
4432(6): nop 0x0(%rax,%rax,1)
4438(5): mov $0x9,%edx
443d(3): xor %r10d,%r10d
4440(5): mov $0x74,%ebx
4445(5): jmp 0xfffffc0d(%rip)
444a(6): nop 0x0(%rax,%rax,1)
4450(5): mov $0x62,%ebx
4455(5): jmp 0xfffffc7b(%rip)
445a(6): nop 0x0(%rax,%rax,1)
4460(3): xor %r10d,%r10d
4463(5): jmp 0xfffffa9d(%rip)
4468(8): nop 0x0(%rax,%rax,1)
4470(5): cmp $0x0,0xf(%rsp)
4475(6): jnz 0x96b(%rip)
447b(4): add $0x1,%rbp
447f(3): mov %r8d,%eax
4482(3): xor %r12d,%r12d
4485(5): mov $0x5c,%ebx
448a(5): jmp 0xfffffb12(%rip)
448f(1): nop 
4490(5): cmp $0x2,0x8(%rsp)
4495(5): movzx 0xf(%rsp),%ebx
449a(3): mov %r8d,%r12d
449d(3): mov %r11,%rbp
44a0(3): setz %dl
44a3(2): mov %ebx,%eax
44a5(3): test %r15,%r15
44a8(3): setz %cl
44ab(2): and %edx,%eax
44ad(2): and %cl,%al
44af(6): jnz 0xa67(%rip)
44b5(2): mov %ebx,%eax
44b7(3): xor $0x1,%eax
44ba(2): and %al,%dl
44bc(6): jz 0x970(%rip)
44c2(5): cmp $0x0,0x7c(%rsp)
44c7(6): jz 0x963(%rip)
44cd(5): cmp $0x0,0xe(%rsp)
44d2(6): jnz 0x9fb(%rip)
44d8(3): test %r13,%r13
44db(3): setz %al
44de(6): cmp $0x0,0x50(%rsp)
44e4(3): setnz %dl
44e7(2): and %dl,%al
44e9(6): jz 0xa23(%rip)
44ef(5): mov 0x50(%rsp),%r13
44f4(7): lea 0x2bea(%rip),%rbx
44fb(4): mov $0x27,(%r14)
44ff(8): mov $0x2,0x8(%rsp)
4507(6): mov $0x1,%r15d
450d(9): mov $0x1,0x18(%rsp)
4516(5): mov $0x0,0xf(%rsp)
451b(5): mov %rbx,0x48(%rsp)
4520(4): mov %al,0x7c(%rsp)
4524(5): jmp 0xfffff8df(%rip)
4529(7): nop 0x0(%rax)
4530(5): cmp $0x0,0xf(%rsp)
4535(6): jnz 0x8ab(%rip)
453b(3): test %r13,%r13
453e(6): jz 0x402(%rip)
4544(2): xor %edx,%edx
4546(6): cmp $0x0,0x50(%rsp)
454c(6): jnz 0x3f4(%rip)
4552(5): mov %r13,0x50(%rsp)
4557(4): add $0x3,%r15
455b(2): xor %eax,%eax
455d(5): mov %r12b,0x7c(%rsp)
4562(3): xor %r8d,%r8d
4565(3): mov %rdx,%r13
4568(5): mov $0x27,%ebx
456d(5): jmp 0xfffffa1c(%rip)
4572(6): nop 0x0(%rax,%rax,1)
4578(5): test $0x4,0x78(%rsp)
457d(2): jz 0x23(%rip)
457f(4): lea 0x2(%rbp),%rcx
4583(3): cmp %r11,%rcx
4586(2): jnb 0x1a(%rip)
4588(5): mov 0x10(%rsp),%rax
458d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4592(6): jz 0x790(%rip)
4598(8): nop 0x0(%rax,%rax,1)
45a0(2): xor %edx,%edx
45a2(3): xor %r12d,%r12d
45a5(2): xor %eax,%eax
45a7(5): mov $0x3f,%ebx
45ac(5): jmp 0xfffff9ac(%rip)
45b1(7): nop 0x0(%rax)
45b8(5): cmp $0x0,0xf(%rsp)
45bd(6): jnz 0x823(%rip)
45c3(3): xor %r12d,%r12d
45c6(2): xor %eax,%eax
45c8(5): mov $0x3f,%ebx
45cd(5): jmp 0xfffff9bc(%rip)
45d2(6): nop 0x0(%rax,%rax,1)
45d8(8): lea 0xa0(%rsp),%rax
45e0(4): cmp $0xffffffff,%r11
45e4(c): mov $0x0,0xa0(%rsp)
45f0(5): mov %rax,0x28(%rsp)
45f5(2): jnz 0x2f(%rip)
45f7(5): mov 0x10(%rsp),%rdi
45fc(5): mov %r8b,0x40(%rsp)
4601(5): mov %r10b,0x38(%rsp)
4606(5): mov %r9,0x30(%rsp)
460b(5): call 0xffffcef5(%rip)
4610(6): movzx 0x40(%rsp),%r8d
4616(6): movzx 0x38(%rsp),%r10d
461c(3): mov %rax,%r11
461f(5): mov 0x30(%rsp),%r9
4624(8): lea 0x9c(%rsp),%rax
462c(2): xor %ecx,%ecx
462e(4): mov %bl,0x7e(%rsp)
4632(5): mov %r8b,0x7d(%rsp)
4637(3): mov %rcx,%rbx
463a(8): mov %r9,0x88(%rsp)
4642(5): mov %rax,0x38(%rsp)
4647(5): mov %r10b,0x7f(%rsp)
464c(8): mov %r15,0x80(%rsp)
4654(5): mov %r14,0x40(%rsp)
4659(5): mov %r13,0x70(%rsp)
465e(5): mov %r11,0x30(%rsp)
4663(5): mov 0x10(%rsp),%rax
4668(5): lea 0x0(%rbp,%rbx,1),%r14
466d(5): mov 0x30(%rsp),%rdx
4672(5): mov 0x28(%rsp),%rcx
4677(5): mov 0x38(%rsp),%rdi
467c(4): lea 0x0(%rax,%r14,1),%r13
4680(3): sub %r14,%rdx
4683(3): mov %r13,%rsi
4686(5): call 0x1d1a(%rip)
468b(3): test %rax,%rax
468e(3): mov %rax,%r15
4691(2): jz 0x50(%rip)
4693(4): cmp $0xffffffff,%rax
4697(6): jz 0x61e(%rip)
469d(4): cmp $0xfffffffe,%rax
46a1(6): jz 0x5a0(%rip)
46a7(5): cmp $0x2,0x8(%rsp)
46ac(3): setz %al
46af(4): and 0xf(%rsp),%al
46b3(6): jnz 0x19d(%rip)
46b9(7): mov 0x9c(%rsp),%edi
46c0(5): call 0xffffd060(%rip)
46c5(5): mov 0x28(%rsp),%rdi
46ca(2): test %eax,%eax
46cc(5): mov $0x0,%eax
46d1(4): cmove %eax,%r12d
46d5(3): add %r15,%rbx
46d8(5): call 0xffffd038(%rip)
46dd(2): test %eax,%eax
46df(2): jz 0xffffff84(%rip)
46e1(3): mov %r12d,%edx
46e4(3): mov %rbx,%rdi
46e7(6): movzx 0x7d(%rsp),%r8d
46ed(3): xor $0x1,%edx
46f0(5): movzx 0x7e(%rsp),%ebx
46f5(6): movzx 0x7f(%rsp),%r10d
46fb(4): and 0xd(%rsp),%dl
46ff(8): mov 0x80(%rsp),%r15
4707(5): mov 0x40(%rsp),%r14
470c(5): mov 0x70(%rsp),%r13
4711(5): mov 0x30(%rsp),%r11
4716(4): cmp $0x1,%rdi
471a(6): jbe 0x601(%rip)
4720(3): mov %rdi,%rcx
4723(2): xor %esi,%esi
4725(6): movzx 0xf(%rsp),%r9d
472b(3): add %rbp,%rcx
472e(5): mov 0x10(%rsp),%rdi
4733(5): jmp 0xbb(%rip)
4738(8): nop 0x0(%rax,%rax,1)
4740(5): cmp $0x2,0x8(%rsp)
4745(3): setz %al
4748(3): test %r9b,%r9b
474b(6): jnz 0x4b5(%rip)
4751(3): mov %r8d,%esi
4754(3): xor $0x1,%esi
4757(3): and %sil,%al
475a(2): jz 0x31(%rip)
475c(3): cmp %r15,%r13
475f(2): jbe 0x7(%rip)
4761(5): mov $0x27,0x0(%r14,%r15,1)
4766(4): lea 0x1(%r15),%rsi
476a(3): cmp %rsi,%r13
476d(2): jbe 0x8(%rip)
476f(6): mov $0x24,0x1(%r14,%r15,1)
4775(4): lea 0x2(%r15),%rsi
4779(3): cmp %rsi,%r13
477c(2): jbe 0x8(%rip)
477e(6): mov $0x27,0x2(%r14,%r15,1)
4784(4): add $0x3,%r15
4788(3): mov %eax,%r8d
478b(3): cmp %r15,%r13
478e(2): jbe 0x7(%rip)
4790(5): mov $0x5c,0x0(%r14,%r15,1)
4795(4): lea 0x1(%r15),%rax
4799(3): cmp %rax,%r13
479c(2): jbe 0xf(%rip)
479e(2): mov %ebx,%eax
47a0(3): shr $0x6,%al
47a3(3): add $0x30,%eax
47a6(5): mov %al,0x1(%r14,%r15,1)
47ab(4): lea 0x2(%r15),%rax
47af(3): cmp %rax,%r13
47b2(2): jbe 0x12(%rip)
47b4(2): mov %ebx,%eax
47b6(3): shr $0x3,%al
47b9(3): and $0x7,%eax
47bc(3): add $0x30,%eax
47bf(5): mov %al,0x2(%r14,%r15,1)
47c4(3): and $0x7,%ebx
47c7(4): add $0x1,%rbp
47cb(4): add $0x3,%r15
47cf(3): add $0x30,%ebx
47d2(3): cmp %rcx,%rbp
47d5(6): jnb 0xfffff7eb(%rip)
47db(2): mov %edx,%esi
47dd(3): cmp %r15,%r13
47e0(2): jbe 0x6(%rip)
47e2(4): mov %bl,0x0(%r14,%r15,1)
47e6(4): movzx 0x0(%rdi,%rbp,1),%ebx
47ea(4): add $0x1,%r15
47ee(2): test %dl,%dl
47f0(6): jnz 0xffffff50(%rip)
47f6(2): mov %esi,%eax
47f8(3): xor $0x1,%eax
47fb(3): and %r8d,%eax
47fe(3): test %r10b,%r10b
4801(2): jz 0x10(%rip)
4803(3): cmp %r15,%r13
4806(2): jbe 0x7(%rip)
4808(5): mov $0x5c,0x0(%r14,%r15,1)
480d(4): add $0x1,%r15
4811(4): add $0x1,%rbp
4815(3): cmp %rcx,%rbp
4818(6): jnb 0xfffff784(%rip)
481e(2): test %al,%al
4820(6): jz 0x3fe(%rip)
4826(3): cmp %r15,%r13
4829(2): jbe 0x7(%rip)
482b(5): mov $0x27,0x0(%r14,%r15,1)
4830(4): lea 0x1(%r15),%rax
4834(3): cmp %rax,%r13
4837(2): jbe 0x8(%rip)
4839(6): mov $0x27,0x1(%r14,%r15,1)
483f(4): add $0x2,%r15
4843(3): xor %r10d,%r10d
4846(3): xor %r8d,%r8d
4849(2): jmp 0xffffff94(%rip)
484b(5): nop 0x0(%rax,%rax,1)
4850(4): cmp $0x1,%r15
4854(6): jz 0xfffffe65(%rip)
485a(5): mov 0x10(%rsp),%rdi
485f(4): lea 0x0(%rdi,%r15,1),%rcx
4863(5): lea 0x1(%rdi,%r14,1),%rdx
4868(4): lea 0x0(%rcx,%r14,1),%r8
486c(2): jmp 0x11(%rip)
486e(2): nop 
4870(4): add $0x1,%rdx
4874(3): cmp %rdx,%r8
4877(6): jz 0xfffffe42(%rip)
487d(3): movzx (%rdx),%ecx
4880(3): sub $0x5b,%ecx
4883(3): cmp $0x21,%cl
4886(2): jnbe 0xffffffea(%rip)
4888(5): mov $0x1,%esi
488d(3): shl/sal %cl,%rsi
4890(3): mov %rsi,%rcx
4893(a): mov $0x8589934635,%rsi
489d(3): test %rsi,%rcx
48a0(2): jz 0xffffffd0(%rip)
48a2(5): mov 0x40(%rsp),%r14
48a7(5): mov 0x70(%rsp),%r13
48ac(5): mov 0x30(%rsp),%rbp
48b1(8): mov $0x2,0x8(%rsp)
48b9(5): cmp $0x0,0xd(%rsp)
48be(2): jz 0x12(%rip)
48c0(2): test %al,%al
48c2(5): mov $0x4,%eax
48c7(5): cmove 0x8(%rsp),%eax
48cc(4): mov %eax,0x8(%rsp)
48d0(4): sub $0x8,%rsp
48d4(3): mov %rbp,%rcx
48d7(3): mov %r13,%rsi
48da(4): push 0x68(%rsp)
48de(4): push 0x78(%rsp)
48e2(3): mov %r14,%rdi
48e5(2): push $0x0
48e7(8): mov 0x98(%rsp),%r9d
48ef(5): mov 0x28(%rsp),%r8d
48f4(5): mov 0x30(%rsp),%rdx
48f9(4): and $0xfd,%r9d
48fd(5): call 0xfffff433(%rip)
4902(4): add $0x20,%rsp
4906(3): mov %rax,%r15
4909(8): mov 0xa8(%rsp),%rbx
4911(9): xor $0x28,%rbx
491a(3): mov %r15,%rax
491d(6): jnz 0x606(%rip)
4923(7): add $0xb8,%rsp
492a(1): pop %rbx
492b(1): pop %rbp
492c(2): pop %r12
492e(2): pop %r13
4930(2): pop %r14
4932(2): pop %r15
4934(1): ret near (%rsp)
4935(3): nop (%rax)
4938(3): mov %r11,%rbp
493b(5): jmp 0xffffff7e(%rip)
4940(3): cmp %r15,%r13
4943(2): jbe 0x7(%rip)
4945(5): mov $0x27,0x0(%r14,%r15,1)
494a(4): lea 0x1(%r15),%rax
494e(3): cmp %rax,%r13
4951(2): jbe 0x8(%rip)
4953(6): mov $0x5c,0x1(%r14,%r15,1)
4959(4): lea 0x2(%r15),%rax
495d(3): cmp %rax,%r13
4960(6): jbe 0x5f2(%rip)
4966(3): mov %r13,%rdx
4969(6): mov $0x27,0x2(%r14,%r15,1)
496f(5): mov 0x50(%rsp),%r13
4974(5): jmp 0xfffffbde(%rip)
4979(3): mov %r12d,%eax
497c(5): mov $0x30,%ebx
4981(3): xor %r12d,%r12d
4984(5): jmp 0xfffff605(%rip)
4989(6): mov $0x27,0x2(%r14,%r15,1)
498f(5): jmp 0xfffff9ca(%rip)
4994(2): test %ebx,%ebx
4996(6): jnz 0xfffff42d(%rip)
499c(5): mov $0x1,0xd(%rsp)
49a1(3): test %r13,%r13
49a4(6): jnz 0x596(%rip)
49aa(7): lea 0x2734(%rip),%rax
49b1(9): mov $0x0,0x50(%rsp)
49ba(5): mov $0x1,0xe(%rsp)
49bf(5): mov $0x0,0x7c(%rsp)
49c4(3): xor %r12d,%r12d
49c7(5): mov $0x0,0xf(%rsp)
49cc(9): mov $0x1,0x18(%rsp)
49d5(5): mov %rax,0x48(%rsp)
49da(6): mov $0x1,%r15d
49e0(8): mov $0x2,0x8(%rsp)
49e8(5): jmp 0xfffff41b(%rip)
49ed(3): nop (%rax)
49f0(2): test %ebx,%ebx
49f2(6): jnz 0x3fb(%rip)
49f8(3): test %r13,%r13
49fb(6): jz 0x22b(%rip)
4a01(4): mov $0x22,(%r14)
4a05(5): mov $0x1,0xe(%rsp)
4a0a(3): xor %r12d,%r12d
4a0d(5): mov $0x0,0x7c(%rsp)
4a12(9): mov $0x0,0x50(%rsp)
4a1b(7): lea 0x26c1(%rip),%rax
4a22(5): mov $0x0,0xf(%rsp)
4a27(5): mov $0x1,0xd(%rsp)
4a2c(9): mov $0x1,0x18(%rsp)
4a35(6): mov $0x1,%r15d
4a3b(5): mov %rax,0x48(%rsp)
4a40(5): jmp 0xfffff3c3(%rip)
4a45(7): lea 0x2697(%rip),%rax
4a4c(5): mov $0x1,0xe(%rsp)
4a51(5): mov $0x0,0x7c(%rsp)
4a56(3): xor %r12d,%r12d
4a59(9): mov $0x0,0x50(%rsp)
4a62(5): mov $0x1,0xf(%rsp)
4a67(5): mov $0x1,0xd(%rsp)
4a6c(9): mov $0x1,0x18(%rsp)
4a75(3): xor %r15d,%r15d
4a78(5): mov %rax,0x48(%rsp)
4a7d(8): mov $0x5,0x8(%rsp)
4a85(5): jmp 0xfffff37e(%rip)
4a8a(5): mov $0x1,0xe(%rsp)
4a8f(5): mov $0x0,0x7c(%rsp)
4a94(3): xor %r12d,%r12d
4a97(9): mov $0x0,0x50(%rsp)
4aa0(5): mov $0x0,0xf(%rsp)
4aa5(3): xor %r15d,%r15d
4aa8(5): mov $0x1,0xd(%rsp)
4aad(9): mov $0x0,0x18(%rsp)
4ab6(9): mov $0x0,0x48(%rsp)
4abf(5): jmp 0xfffff344(%rip)
4ac4(5): cmp $0xa,0x8(%rsp)
4ac9(2): jz 0x58(%rip)
4acb(7): lea 0x2615(%rip),%rsi
4ad2(2): xor %edi,%edi
4ad4(5): mov $0x5,%edx
4ad9(5): call 0xffffca07(%rip)
4ade(3): mov %rax,%rcx
4ae1(5): mov %rax,0x68(%rsp)
4ae6(7): lea 0x25fa(%rip),%rax
4aed(3): cmp %rax,%rcx
4af0(6): jz 0x39e(%rip)
4af6(7): lea 0x25e8(%rip),%rsi
4afd(2): xor %edi,%edi
4aff(5): mov $0x5,%edx
4b04(5): call 0xffffc9dc(%rip)
4b09(3): mov %rax,%rcx
4b0c(5): mov %rax,0x60(%rsp)
4b11(7): lea 0x25cd(%rip),%rax
4b18(3): cmp %rax,%rcx
4b1b(6): jz 0x389(%rip)
4b21(3): xor %r15d,%r15d
4b24(2): test %ebx,%ebx
4b26(6): jz 0x1c7(%rip)
4b2c(2): test %ebx,%ebx
4b2e(5): mov 0x60(%rsp),%rbx
4b33(5): setnz 0xf(%rsp)
4b38(3): xor %r12d,%r12d
4b3b(3): mov %rbx,%rdi
4b3e(5): call 0xffffc9c2(%rip)
4b43(5): mov %rbx,0x48(%rsp)
4b48(5): mov %rax,0x18(%rsp)
4b4d(5): mov $0x1,0xe(%rsp)
4b52(5): mov $0x0,0x7c(%rsp)
4b57(9): mov $0x0,0x50(%rsp)
4b60(5): mov $0x1,0xd(%rsp)
4b65(5): jmp 0xfffff29e(%rip)
4b6a(5): mov $0x1,0xe(%rsp)
4b6f(5): mov $0x0,0x7c(%rsp)
4b74(3): xor %r12d,%r12d
4b77(9): mov $0x0,0x50(%rsp)
4b80(5): mov $0x0,0xf(%rsp)
4b85(3): xor %r15d,%r15d
4b88(5): mov $0x0,0xd(%rsp)
4b8d(9): mov $0x0,0x18(%rsp)
4b96(9): mov $0x0,0x48(%rsp)
4b9f(5): jmp 0xfffff264(%rip)
4ba4(5): mov $0x1,0xe(%rsp)
4ba9(5): mov $0x0,0x7c(%rsp)
4bae(3): xor %r12d,%r12d
4bb1(9): mov $0x0,0x50(%rsp)
4bba(5): mov $0x1,0xf(%rsp)
4bbf(5): mov $0x1,0xd(%rsp)
4bc4(5): jmp 0xfffff21f(%rip)
4bc9(3): cmp %r15,%r13
4bcc(2): jbe 0x7(%rip)
4bce(5): mov $0x30,0x0(%r14,%r15,1)
4bd3(4): lea 0x2(%rcx),%rax
4bd7(3): cmp %rax,%r13
4bda(2): jbe 0x8(%rip)
4bdc(6): mov $0x30,0x2(%r14,%rcx,1)
4be2(3): mov %r12d,%eax
4be5(4): lea 0x3(%rcx),%r15
4be9(3): xor %r12d,%r12d
4bec(5): mov $0x30,%ebx
4bf1(5): jmp 0xfffff367(%rip)
4bf6(a): nop 0x0(%rax,%rax,1)
4c00(5): movzx 0xf(%rsp),%ebx
4c05(3): mov %r11,%rbp
4c08(4): mov %bl,0xd(%rsp)
4c0c(5): jmp 0xfffffcad(%rip)
4c11(5): movzx 0xd(%rsp),%edx
4c16(3): xor %r12d,%r12d
4c19(5): jmp 0xfffffb07(%rip)
4c1e(3): xor %r10d,%r10d
4c21(5): jmp 0xfffffbbc(%rip)
4c26(9): mov $0x0,0x50(%rsp)
4c2f(5): mov $0x1,0xe(%rsp)
4c34(3): xor %r12d,%r12d
4c37(5): mov $0x0,0x7c(%rsp)
4c3c(5): jmp 0xfffffddf(%rip)
4c41(5): mov 0x30(%rsp),%r11
4c46(3): mov %r14,%rsi
4c49(3): mov %r13,%rcx
4c4c(3): mov %rbx,%rax
4c4f(3): mov %rbx,%rdi
4c52(6): movzx 0x7d(%rsp),%r8d
4c58(5): movzx 0x7e(%rsp),%ebx
4c5d(8): mov 0x88(%rsp),%r9
4c65(3): cmp %r11,%rsi
4c68(6): movzx 0x7f(%rsp),%r10d
4c6e(8): mov 0x80(%rsp),%r15
4c76(5): mov 0x40(%rsp),%r14
4c7b(5): mov 0x70(%rsp),%r13
4c80(2): jnb 0x28(%rip)
4c82(3): cmp $0x0,(%rcx)
4c85(2): jnz 0x12(%rip)
4c87(2): jmp 0x21(%rip)
4c89(7): nop 0x0(%rax)
4c90(5): cmp $0x0,0x0(%r9,%rax,1)
4c95(2): jz 0x10(%rip)
4c97(4): add $0x1,%rax
4c9b(5): lea 0x0(%rbp,%rax,1),%rdx
4ca0(3): cmp %rdx,%r11
4ca3(2): jnbe 0xffffffed(%rip)
4ca5(3): mov %rax,%rdi
4ca8(5): movzx 0xd(%rsp),%edx
4cad(3): xor %r12d,%r12d
4cb0(5): jmp 0xfffffa66(%rip)
4cb5(3): mov %rbx,%rdi
4cb8(6): movzx 0x7d(%rsp),%r8d
4cbe(5): movzx 0x7e(%rsp),%ebx
4cc3(6): movzx 0x7f(%rsp),%r10d
4cc9(8): mov 0x80(%rsp),%r15
4cd1(3): xor %r12d,%r12d
4cd4(5): mov 0x40(%rsp),%r14
4cd9(5): mov 0x70(%rsp),%r13
4cde(5): mov 0x30(%rsp),%r11
4ce3(5): movzx 0xd(%rsp),%edx
4ce8(5): jmp 0xfffffa2e(%rip)
4ced(5): mov 0x68(%rsp),%rdx
4cf2(3): movzx (%rdx),%eax
4cf5(2): test %al,%al
4cf7(6): jz 0xfffffe35(%rip)
4cfd(3): nop (%rax)
4d00(3): cmp %r15,%r13
4d03(2): jbe 0x6(%rip)
4d05(4): mov %al,0x0(%r14,%r15,1)
4d09(4): add $0x1,%r15
4d0d(5): movzx 0x0(%rdx,%r15,1),%eax
4d12(2): test %al,%al
4d14(2): jnz 0xffffffec(%rip)
4d16(5): jmp 0xfffffe16(%rip)
4d1b(2): mov %edx,%eax
4d1d(5): jmp 0xfffff55a(%rip)
4d22(4): movzx 0x0(%rax,%rcx,1),%ebx
4d26(3): cmp $0x3e,%bl
4d29(6): jnbe 0xfffff877(%rip)
4d2f(a): mov $0x8070630310989004800,%rax
4d39(4): bt %rbx,%rax
4d3d(6): jnb 0xfffff863(%rip)
4d43(5): cmp $0x0,0xf(%rsp)
4d48(6): jnz 0x1ea(%rip)
4d4e(3): cmp %r15,%r13
4d51(2): jbe 0x7(%rip)
4d53(5): mov $0x3f,0x0(%r14,%r15,1)
4d58(4): lea 0x1(%r15),%rax
4d5c(3): cmp %rax,%r13
4d5f(2): jbe 0x8(%rip)
4d61(6): mov $0x22,0x1(%r14,%r15,1)
4d67(4): lea 0x2(%r15),%rax
4d6b(3): cmp %rax,%r13
4d6e(2): jbe 0x8(%rip)
4d70(6): mov $0x22,0x2(%r14,%r15,1)
4d76(4): lea 0x3(%r15),%rax
4d7a(3): cmp %rax,%r13
4d7d(2): jbe 0x8(%rip)
4d7f(6): mov $0x3f,0x3(%r14,%r15,1)
4d85(4): add $0x4,%r15
4d89(2): xor %edx,%edx
4d8b(3): xor %r12d,%r12d
4d8e(2): xor %eax,%eax
4d90(3): mov %rcx,%rbp
4d93(5): jmp 0xfffff1c5(%rip)
4d98(2): test %ebx,%ebx
4d9a(6): jz 0x18e(%rip)
4da0(7): lea 0x233e(%rip),%rax
4da7(5): mov $0x1,0xe(%rsp)
4dac(5): mov $0x0,0x7c(%rsp)
4db1(3): xor %r12d,%r12d
4db4(9): mov $0x0,0x50(%rsp)
4dbd(5): mov $0x1,0xf(%rsp)
4dc2(5): mov $0x0,0xd(%rsp)
4dc7(9): mov $0x1,0x18(%rsp)
4dd0(3): xor %r15d,%r15d
4dd3(5): mov %rax,0x48(%rsp)
4dd8(5): jmp 0xfffff02b(%rip)
4ddd(3): nop (%rax)
4de0(3): mov %r11,%rbp
4de3(5): movzx 0xf(%rsp),%eax
4de8(5): jmp 0xfffffad1(%rip)
4ded(7): lea 0x22ef(%rip),%rax
4df4(5): mov $0x1,0xe(%rsp)
4df9(5): mov $0x0,0x7c(%rsp)
4dfe(3): xor %r12d,%r12d
4e01(9): mov $0x0,0x50(%rsp)
4e0a(5): mov $0x1,0xf(%rsp)
4e0f(5): mov $0x1,0xd(%rsp)
4e14(9): mov $0x1,0x18(%rsp)
4e1d(3): xor %r15d,%r15d
4e20(5): mov %rax,0x48(%rsp)
4e25(5): jmp 0xffffefde(%rip)
4e2a(2): mov %edx,%eax
4e2c(5): mov 0x48(%rsp),%rbx
4e31(3): test %rbx,%rbx
4e34(2): jz 0x2e(%rip)
4e36(2): test %al,%al
4e38(2): jz 0x2a(%rip)
4e3a(3): movzx (%rbx),%ecx
4e3d(3): mov %rbx,%rax
4e40(2): test %cl,%cl
4e42(2): jz 0x20(%rip)
4e44(3): mov %r15,%rdx
4e47(3): sub %r15,%rax
4e4a(3): cmp %rdx,%r13
4e4d(2): jbe 0x6(%rip)
4e4f(4): mov %cl,0x0(%r14,%rdx,1)
4e53(4): add $0x1,%rdx
4e57(4): movzx 0x0(%rax,%rdx,1),%ecx
4e5b(2): test %cl,%cl
4e5d(2): jnz 0xffffffed(%rip)
4e5f(3): mov %rdx,%r15
4e62(3): cmp %r15,%r13
4e65(6): jbe 0xfffffaa4(%rip)
4e6b(5): mov $0x0,0x0(%r14,%r15,1)
4e70(5): jmp 0xfffffa99(%rip)
4e75(5): cmp $0x2,0x8(%rsp)
4e7a(5): movzx 0xf(%rsp),%ebx
4e7f(3): mov %r11,%rbp
4e82(3): setz %al
4e85(4): mov %bl,0xd(%rsp)
4e89(5): jmp 0xfffffa30(%rip)
4e8e(4): mov 0x8(%rsp),%esi
4e92(3): mov %rcx,%rdi
4e95(5): call 0xffffedab(%rip)
4e9a(5): mov %rax,0x68(%rsp)
4e9f(5): jmp 0xfffffc57(%rip)
4ea4(4): mov 0x8(%rsp),%esi
4ea8(3): mov %rcx,%rdi
4eab(5): call 0xffffed95(%rip)
4eb0(5): mov %rax,0x60(%rsp)
4eb5(5): jmp 0xfffffc6c(%rip)
4eba(5): movzx 0xf(%rsp),%ebx
4ebf(3): mov %r11,%rbp
4ec2(2): mov %edx,%eax
4ec4(4): mov %bl,0xd(%rsp)
4ec8(5): jmp 0xfffff9f1(%rip)
4ecd(4): sub $0x8,%rsp
4ed1(6): mov $0x5,%r8d
4ed7(3): mov %r11,%rcx
4eda(4): push 0x68(%rsp)
4ede(4): push 0x78(%rsp)
4ee2(3): mov %r14,%rdi
4ee5(4): push 0x38(%rsp)
4ee9(8): mov 0x98(%rsp),%r9d
4ef1(5): mov 0x30(%rsp),%rdx
4ef6(5): mov 0x70(%rsp),%rsi
4efb(5): call 0xffffee35(%rip)
4f00(4): add $0x20,%rsp
4f04(3): mov %rax,%r15
4f07(5): jmp 0xfffffa02(%rip)
4f0c(5): movzx 0x7c(%rsp),%eax
4f11(5): jmp 0xffffff1b(%rip)
4f16(8): mov $0x2,0x8(%rsp)
4f1e(5): jmp 0xfffff99b(%rip)
4f23(5): call 0xffffc5fd(%rip)
4f28(5): mov $0x0,0xd(%rsp)
4f2d(5): jmp 0xfffffa74(%rip)
4f32(3): mov %r11,%rbp
4f35(5): jmp 0xfffff99b(%rip)
4f3a(5): mov $0x1,0xe(%rsp)
4f3f(2): xor %eax,%eax
4f41(3): xor %r12d,%r12d
4f44(9): mov $0x0,0x50(%rsp)
4f4d(5): jmp 0xfffff5a7(%rip)
4f52(3): mov %r13,%rdx
4f55(5): mov 0x50(%rsp),%r13
4f5a(5): jmp 0xfffff5f8(%rip)
4f5f(5): call 0xffffc4f1(%rip)

"quotearg_n_options" :
4f70(2): push %r15
4f72(2): push %r14
4f74(3): movsxd %edi,%r15
4f77(2): push %r13
4f79(2): push %r12
4f7b(3): mov %rdx,%r14
4f7e(1): push %rbp
4f7f(1): push %rbx
4f80(3): mov %rcx,%rbp
4f83(4): sub $0x28,%rsp
4f87(5): mov %rsi,0x8(%rsp)
4f8c(5): call 0xffffc4d4(%rip)
4f91(3): mov %rax,%r13
4f94(2): mov (%rax),%eax
4f96(3): test %r15d,%r15d
4f99(7): mov 0x2050c0(%rip),%rbx
4fa0(4): mov %eax,0x18(%rsp)
4fa4(6): js 0x16d(%rip)
4faa(7): cmp %r15d,0x2050a7(%rip)
4fb1(2): jnle 0x64(%rip)
4fb3(7): cmp $0x7fffffff,%r15d
4fba(6): jz 0x15c(%rip)
4fc0(4): lea 0x1(%r15),%r12d
4fc4(7): lea 0x2050a5(%rip),%rax
4fcb(3): movsxd %r12d,%rsi
4fce(4): shl/sal $0x4,%rsi
4fd2(3): cmp %rax,%rbx
4fd5(6): jz 0x11b(%rip)
4fdb(3): mov %rbx,%rdi
4fde(5): call 0x1162(%rip)
4fe3(3): mov %rax,%rbx
4fe6(7): mov %rax,0x205073(%rip)
4fed(7): movsxd 0x205064(%rip),%rdi
4ff4(3): mov %r12d,%edx
4ff7(2): xor %esi,%esi
4ff9(2): sub %edi,%edx
4ffb(4): shl/sal $0x4,%rdi
4fff(3): movsxd %edx,%rdx
5002(3): add %rbx,%rdi
5005(4): shl/sal $0x4,%rdx
5009(5): call 0xffffc587(%rip)
500e(7): mov %r12d,0x205043(%rip)
5015(3): mov 0x4(%rbp),%eax
5018(4): shl/sal $0x4,%r15
501c(4): sub $0x8,%rsp
5020(3): add %r15,%rbx
5023(4): lea 0x8(%rbp),%r15
5027(4): mov 0x0(%rbp),%r8d
502b(3): mov (%rbx),%r11
502e(4): mov 0x8(%rbx),%r12
5032(3): mov %r14,%rcx
5035(3): or $0x1,%eax
5038(4): mov %eax,0x24(%rsp)
503c(3): push 0x30(%rbp)
503f(3): mov %eax,%r9d
5042(3): push 0x28(%rbp)
5045(2): push %r15
5047(3): mov %r11,%rsi
504a(5): mov 0x28(%rsp),%rdx
504f(3): mov %r12,%rdi
5052(5): mov %r11,0x30(%rsp)
5057(5): call 0xffffecd9(%rip)
505c(4): add $0x20,%rsp
5060(5): mov 0x10(%rsp),%r11
5065(3): cmp %rax,%r11
5068(2): jnbe 0x69(%rip)
506a(4): lea 0x1(%rax),%rsi
506e(7): lea 0x20506b(%rip),%rax
5075(3): cmp %rax,%r12
5078(3): mov %rsi,(%rbx)
507b(2): jz 0x14(%rip)
507d(3): mov %r12,%rdi
5080(5): mov %rsi,0x10(%rsp)
5085(5): call 0xffffc3bb(%rip)
508a(5): mov 0x10(%rsp),%rsi
508f(3): mov %rsi,%rdi
5092(5): mov %rsi,0x10(%rsp)
5097(5): call 0x1049(%rip)
509c(4): sub $0x8,%rsp
50a0(4): mov %rax,0x8(%rbx)
50a4(4): mov 0x0(%rbp),%r8d
50a8(3): push 0x30(%rbp)
50ab(3): push 0x28(%rbp)
50ae(3): mov %r14,%rcx
50b1(2): push %r15
50b3(5): mov 0x3c(%rsp),%r9d
50b8(3): mov %rax,%rdi
50bb(5): mov 0x28(%rsp),%rdx
50c0(5): mov 0x30(%rsp),%rsi
50c5(3): mov %rax,%r12
50c8(5): call 0xffffec68(%rip)
50cd(4): add $0x20,%rsp
50d1(4): mov 0x18(%rsp),%eax
50d5(4): mov %eax,0x0(%r13)
50d9(4): add $0x28,%rsp
50dd(3): mov %r12,%rax
50e0(1): pop %rbx
50e1(1): pop %rbp
50e2(2): pop %r12
50e4(2): pop %r13
50e6(2): pop %r14
50e8(2): pop %r15
50ea(1): ret near (%rsp)
50eb(5): nop 0x0(%rax,%rax,1)
50f0(2): xor %edi,%edi
50f2(5): call 0x104e(%rip)
50f7(8): movdqa 0x204f71(%rip),%xmm0
50ff(3): mov %rax,%rbx
5102(7): mov %rax,0x204f57(%rip)
5109(3): movups %xmm0,(%rax)
510c(5): jmp 0xfffffee1(%rip)
5111(5): call 0xffffc33f(%rip)
5116(5): call 0x121a(%rip)

"clone_quoting_options" :
5120(2): push %r12
5122(1): push %rbp
5123(1): push %rbx
5124(3): mov %rdi,%rbx
5127(5): call 0xffffc339(%rip)
512c(3): mov (%rax),%r12d
512f(3): mov %rax,%rbp
5132(7): lea 0x2050a7(%rip),%rax
5139(3): test %rbx,%rbx
513c(5): mov $0x38,%esi
5141(4): cmove %rax,%rbx
5145(3): mov %rbx,%rdi
5148(5): call 0x1198(%rip)
514d(4): mov %r12d,0x0(%rbp)
5151(1): pop %rbx
5152(1): pop %rbp
5153(2): pop %r12
5155(1): ret near (%rsp)

"get_quoting_style" :
5160(7): lea 0x205079(%rip),%rax
5167(3): test %rdi,%rdi
516a(4): cmove %rax,%rdi
516e(2): mov (%rdi),%eax
5170(1): ret near (%rsp)

"set_quoting_style" :
5180(7): lea 0x205059(%rip),%rax
5187(3): test %rdi,%rdi
518a(4): cmove %rax,%rdi
518e(2): mov %esi,(%rdi)
5190(1): ret near (%rsp)

"set_char_quoting" :
51a0(7): lea 0x205039(%rip),%rax
51a7(3): test %rdi,%rdi
51aa(2): mov %esi,%ecx
51ac(4): cmove %rax,%rdi
51b0(2): mov %esi,%eax
51b2(3): and $0x1f,%ecx
51b5(3): shr $0x5,%al
51b8(3): movzx %al,%eax
51bb(5): lea 0x8(%rdi,%rax,4),%rdi
51c0(2): mov (%rdi),%esi
51c2(2): mov %esi,%eax
51c4(2): shr %cl,%eax
51c6(2): xor %eax,%edx
51c8(3): and $0x1,%eax
51cb(3): and $0x1,%edx
51ce(2): shl/sal %cl,%edx
51d0(2): xor %esi,%edx
51d2(2): mov %edx,(%rdi)
51d4(1): ret near (%rsp)

"set_quoting_flags" :
51e0(7): lea 0x204ff9(%rip),%rax
51e7(3): test %rdi,%rdi
51ea(4): cmove %rax,%rdi
51ee(3): mov 0x4(%rdi),%eax
51f1(3): mov %esi,0x4(%rdi)
51f4(1): ret near (%rsp)

"set_custom_quoting" :
5200(7): lea 0x204fd9(%rip),%rax
5207(3): test %rdi,%rdi
520a(4): cmove %rax,%rdi
520e(3): test %rsi,%rsi
5211(6): mov $0xa,(%rdi)
5217(2): jz 0x10(%rip)
5219(3): test %rdx,%rdx
521c(2): jz 0xb(%rip)
521e(4): mov %rsi,0x28(%rdi)
5222(4): mov %rdx,0x30(%rdi)
5226(1): ret near (%rsp)
5227(4): sub $0x8,%rsp
522b(5): call 0xffffc225(%rip)

"quotearg_buffer" :
5230(2): push %r15
5232(2): push %r14
5234(7): lea 0x204fa5(%rip),%rax
523b(2): push %r13
523d(2): push %r12
523f(3): mov %rdi,%r13
5242(1): push %rbp
5243(1): push %rbx
5244(3): mov %r8,%rbx
5247(3): mov %rsi,%r14
524a(3): mov %rdx,%r15
524d(4): sub $0x18,%rsp
5251(3): test %r8,%r8
5254(4): cmove %rax,%rbx
5258(5): mov %rcx,0x8(%rsp)
525d(5): call 0xffffc203(%rip)
5262(3): mov (%rax),%r12d
5265(3): mov %rax,%rbp
5268(4): lea 0x8(%rbx),%rax
526c(4): sub $0x8,%rsp
5270(4): mov 0x4(%rbx),%r9d
5274(3): push 0x30(%rbx)
5277(3): mov (%rbx),%r8d
527a(3): push 0x28(%rbx)
527d(3): mov %r15,%rdx
5280(1): push %rax
5281(5): mov 0x28(%rsp),%rcx
5286(3): mov %r14,%rsi
5289(3): mov %r13,%rdi
528c(5): call 0xffffeaa4(%rip)
5291(4): mov %r12d,0x0(%rbp)
5295(4): add $0x38,%rsp
5299(1): pop %rbx
529a(1): pop %rbp
529b(2): pop %r12
529d(2): pop %r13
529f(2): pop %r14
52a1(2): pop %r15
52a3(1): ret near (%rsp)

"quotearg_alloc_mem" :
52b0(2): push %r15
52b2(2): push %r14
52b4(7): lea 0x204f25(%rip),%rax
52bb(2): push %r13
52bd(2): push %r12
52bf(3): mov %rdx,%r12
52c2(1): push %rbp
52c3(1): push %rbx
52c4(3): mov %rcx,%rbx
52c7(3): mov %rdi,%r14
52ca(3): mov %rsi,%r15
52cd(4): sub $0x38,%rsp
52d1(3): test %rcx,%rcx
52d4(4): cmove %rax,%rbx
52d8(2): xor %ebp,%ebp
52da(5): call 0xffffc186(%rip)
52df(3): test %r12,%r12
52e2(3): mov %rax,%r13
52e5(2): mov (%rax),%eax
52e7(4): setz %bpl
52eb(3): or 0x4(%rbx),%ebp
52ee(4): lea 0x8(%rbx),%r10
52f2(4): sub $0x8,%rsp
52f6(3): mov (%rbx),%r8d
52f9(3): mov %r15,%rcx
52fc(4): mov %eax,0x14(%rsp)
5300(3): push 0x30(%rbx)
5303(3): mov %r14,%rdx
5306(3): push 0x28(%rbx)
5309(2): push %r10
530b(2): xor %esi,%esi
530d(3): mov %ebp,%r9d
5310(2): xor %edi,%edi
5312(5): mov %r10,0x40(%rsp)
5317(5): call 0xffffea19(%rip)
531c(4): lea 0x1(%rax),%rsi
5320(5): mov %rax,0x48(%rsp)
5325(4): add $0x20,%rsp
5329(3): mov %rsi,%rdi
532c(5): mov %rsi,0x18(%rsp)
5331(5): call 0xdaf(%rip)
5336(5): mov %rax,0x10(%rsp)
533b(4): sub $0x8,%rsp
533f(3): push 0x30(%rbx)
5342(3): push 0x28(%rbx)
5345(5): mov 0x38(%rsp),%r10
534a(3): mov %ebp,%r9d
534d(3): mov (%rbx),%r8d
5350(3): mov %r15,%rcx
5353(3): mov %r14,%rdx
5356(3): mov %rax,%rdi
5359(2): push %r10
535b(5): mov 0x38(%rsp),%rsi
5360(5): call 0xffffe9d0(%rip)
5365(4): mov 0x2c(%rsp),%eax
5369(4): add $0x20,%rsp
536d(3): test %r12,%r12
5370(4): mov %eax,0x0(%r13)
5374(2): jz 0xb(%rip)
5376(5): mov 0x28(%rsp),%r11
537b(4): mov %r11,(%r12)
537f(5): mov 0x10(%rsp),%rax
5384(4): add $0x38,%rsp
5388(1): pop %rbx
5389(1): pop %rbp
538a(2): pop %r12
538c(2): pop %r13
538e(2): pop %r14
5390(2): pop %r15
5392(1): ret near (%rsp)

"quotearg_alloc" :
53a0(3): mov %rdx,%rcx
53a3(2): xor %edx,%edx
53a5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
53b0(6): mov 0x204ca2(%rip),%eax
53b6(2): push %r12
53b8(7): mov 0x204ca1(%rip),%r12
53bf(1): push %rbp
53c0(1): push %rbx
53c1(3): cmp $0x1,%eax
53c4(2): jle 0x2d(%rip)
53c6(3): sub $0x2,%eax
53c9(5): lea 0x18(%r12),%rbx
53ce(4): shl/sal $0x4,%rax
53d2(5): lea 0x28(%r12,%rax,1),%rbp
53d7(9): nop 0x0(%rax,%rax,1)
53e0(3): mov (%rbx),%rdi
53e3(4): add $0x10,%rbx
53e7(5): call 0xffffc059(%rip)
53ec(3): cmp %rbp,%rbx
53ef(2): jnz 0xfffffff1(%rip)
53f1(5): mov 0x8(%r12),%rdi
53f6(7): lea 0x204ce3(%rip),%rbx
53fd(3): cmp %rbx,%rdi
5400(2): jz 0x19(%rip)
5402(5): call 0xffffc03e(%rip)
5407(b): mov $0x100,0x204c5e(%rip)
5412(7): mov %rbx,0x204c5f(%rip)
5419(7): lea 0x204c50(%rip),%rbx
5420(3): cmp %rbx,%r12
5423(2): jz 0x11(%rip)
5425(3): mov %r12,%rdi
5428(5): call 0xffffc018(%rip)
542d(7): mov %rbx,0x204c2c(%rip)
5434(1): pop %rbx
5435(a): mov $0x1,0x204c19(%rip)
543f(1): pop %rbp
5440(2): pop %r12
5442(1): ret near (%rsp)

"quotearg_n" :
5450(7): lea 0x204d89(%rip),%rcx
5457(7): mov $0xffffffff,%rdx
545e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5470(7): lea 0x204d69(%rip),%rcx
5477(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5480(7): lea 0x204d59(%rip),%rcx
5487(3): mov %rdi,%rsi
548a(7): mov $0xffffffff,%rdx
5491(2): xor %edi,%edi
5493(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
54a0(7): lea 0x204d39(%rip),%rcx
54a7(3): mov %rsi,%rdx
54aa(3): mov %rdi,%rsi
54ad(2): xor %edi,%edi
54af(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
54c0(4): sub $0x48,%rsp
54c4(3): mov %rdx,%rax
54c7(9): mov $0x28,%rdx
54d0(5): mov %rdx,0x38(%rsp)
54d5(2): xor %edx,%edx
54d7(3): cmp $0xa,%esi
54da(2): jz 0x6a(%rip)
54dc(3): mov %esi,(%rsp)
54df(3): mov %rsp,%rcx
54e2(7): mov $0xffffffff,%rdx
54e9(3): mov %rax,%rsi
54ec(9): mov $0x0,0x4(%rsp)
54f5(9): mov $0x0,0xc(%rsp)
54fe(9): mov $0x0,0x14(%rsp)
5507(9): mov $0x0,0x1c(%rsp)
5510(9): mov $0x0,0x24(%rsp)
5519(9): mov $0x0,0x2c(%rsp)
5522(8): mov $0x0,0x34(%rsp)
552a(5): call 0xfffffa46(%rip)
552f(5): mov 0x38(%rsp),%rcx
5534(9): xor $0x28,%rcx
553d(2): jnz 0xc(%rip)
553f(4): add $0x48,%rsp
5543(1): ret near (%rsp)
5544(5): call 0xffffbf0c(%rip)
5549(5): call 0xffffbfd7(%rip)

"quotearg_n_style_mem" :
5550(4): sub $0x48,%rsp
5554(3): mov %rdx,%rax
5557(3): mov %rcx,%rdx
555a(9): mov $0x28,%rcx
5563(5): mov %rcx,0x38(%rsp)
5568(2): xor %ecx,%ecx
556a(3): cmp $0xa,%esi
556d(2): jz 0x63(%rip)
556f(3): mov %esi,(%rsp)
5572(3): mov %rsp,%rcx
5575(3): mov %rax,%rsi
5578(9): mov $0x0,0x4(%rsp)
5581(9): mov $0x0,0xc(%rsp)
558a(9): mov $0x0,0x14(%rsp)
5593(9): mov $0x0,0x1c(%rsp)
559c(9): mov $0x0,0x24(%rsp)
55a5(9): mov $0x0,0x2c(%rsp)
55ae(8): mov $0x0,0x34(%rsp)
55b6(5): call 0xfffff9ba(%rip)
55bb(5): mov 0x38(%rsp),%rdx
55c0(9): xor $0x28,%rdx
55c9(2): jnz 0xc(%rip)
55cb(4): add $0x48,%rsp
55cf(1): ret near (%rsp)
55d0(5): call 0xffffbe80(%rip)
55d5(5): call 0xffffbf4b(%rip)

"quotearg_style" :
55e0(3): mov %rsi,%rdx
55e3(2): mov %edi,%esi
55e5(2): xor %edi,%edi
55e7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
55f0(3): mov %rdx,%rcx
55f3(3): mov %rsi,%rdx
55f6(2): mov %edi,%esi
55f8(2): xor %edi,%edi
55fa(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5600(4): sub $0x48,%rsp
5604(2): mov %edx,%ecx
5606(9): mov $0x28,%rax
560f(5): mov %rax,0x38(%rsp)
5614(2): xor %eax,%eax
5616(7): mov 0x204bf3(%rip),%rax
561d(3): mov %rsp,%r8
5620(3): and $0x1f,%ecx
5623(8): movdqa 0x204bb5(%rip),%xmm0
562b(5): mov %rax,0x30(%rsp)
5630(2): mov %edx,%eax
5632(4): movaps %xmm0,(%rsp)
5636(3): shr $0x5,%al
5639(3): movzx %al,%eax
563c(5): lea 0x8(%r8,%rax,4),%r9
5641(8): movdqa 0x204ba7(%rip),%xmm0
5649(5): movaps %xmm0,0x10(%rsp)
564e(8): movdqa 0x204baa(%rip),%xmm0
5656(5): movaps %xmm0,0x20(%rsp)
565b(3): mov (%r9),%edx
565e(2): mov %edx,%eax
5660(2): shr %cl,%eax
5662(2): not %eax
5664(3): and $0x1,%eax
5667(2): shl/sal %cl,%eax
5669(3): mov %r8,%rcx
566c(2): xor %edx,%eax
566e(3): mov %rsi,%rdx
5671(3): mov %rdi,%rsi
5674(3): mov %eax,(%r9)
5677(2): xor %edi,%edi
5679(5): call 0xfffff8f7(%rip)
567e(5): mov 0x38(%rsp),%rsi
5683(9): xor $0x28,%rsi
568c(2): jnz 0x7(%rip)
568e(4): add $0x48,%rsp
5692(1): ret near (%rsp)
5693(5): call 0xffffbe8d(%rip)

"quotearg_char" :
56a0(4): movsx %sil,%edx
56a4(7): mov $0xffffffff,%rsi
56ab(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
56b0(5): mov $0x3a,%edx
56b5(7): mov $0xffffffff,%rsi
56bc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
56d0(5): mov $0x3a,%edx
56d5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
56e0(4): sub $0x48,%rsp
56e4(3): mov %rdx,%rax
56e7(9): mov $0x28,%rdx
56f0(5): mov %rdx,0x38(%rsp)
56f5(2): xor %edx,%edx
56f7(3): cmp $0xa,%esi
56fa(2): jz 0x6a(%rip)
56fc(3): mov %esi,(%rsp)
56ff(3): mov %rsp,%rcx
5702(7): mov $0xffffffff,%rdx
5709(3): mov %rax,%rsi
570c(9): mov $0x0,0x4(%rsp)
5715(9): mov $0x4000000,0xc(%rsp)
571e(9): mov $0x0,0x14(%rsp)
5727(9): mov $0x0,0x1c(%rsp)
5730(9): mov $0x0,0x24(%rsp)
5739(9): mov $0x0,0x2c(%rsp)
5742(8): mov $0x0,0x34(%rsp)
574a(5): call 0xfffff826(%rip)
574f(5): mov 0x38(%rsp),%rcx
5754(9): xor $0x28,%rcx
575d(2): jnz 0xc(%rip)
575f(4): add $0x48,%rsp
5763(1): ret near (%rsp)
5764(5): call 0xffffbcec(%rip)
5769(5): call 0xffffbdb7(%rip)

"quotearg_n_custom_mem" :
5770(4): sub $0x48,%rsp
5774(3): mov %rcx,%r9
5777(7): mov 0x204a92(%rip),%rcx
577e(8): movdqa 0x204a5a(%rip),%xmm0
5786(9): mov $0x28,%rax
578f(5): mov %rax,0x38(%rsp)
5794(2): xor %eax,%eax
5796(4): movaps %xmm0,(%rsp)
579a(3): test %rsi,%rsi
579d(5): mov %rcx,0x30(%rsp)
57a2(7): mov $0xa,(%rsp)
57a9(8): movdqa 0x204a3f(%rip),%xmm0
57b1(5): movaps %xmm0,0x10(%rsp)
57b6(8): movdqa 0x204a42(%rip),%xmm0
57be(5): movaps %xmm0,0x20(%rsp)
57c3(2): jz 0x34(%rip)
57c5(3): test %rdx,%rdx
57c8(2): jz 0x2f(%rip)
57ca(5): mov %rsi,0x28(%rsp)
57cf(5): mov %rdx,0x30(%rsp)
57d4(3): mov %rsp,%rcx
57d7(3): mov %r8,%rdx
57da(3): mov %r9,%rsi
57dd(5): call 0xfffff793(%rip)
57e2(5): mov 0x38(%rsp),%rdi
57e7(9): xor $0x28,%rdi
57f0(2): jnz 0xc(%rip)
57f2(4): add $0x48,%rsp
57f6(1): ret near (%rsp)
57f7(5): call 0xffffbc59(%rip)
57fc(5): call 0xffffbd24(%rip)

"quotearg_n_custom" :
5810(7): mov $0xffffffff,%r8
5817(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5820(3): mov %rdx,%rcx
5823(7): mov $0xffffffff,%r8
582a(3): mov %rsi,%rdx
582d(3): mov %rdi,%rsi
5830(2): xor %edi,%edi
5832(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5840(3): mov %rcx,%r8
5843(3): mov %rdx,%rcx
5846(3): mov %rsi,%rdx
5849(3): mov %rdi,%rsi
584c(2): xor %edi,%edi
584e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5860(7): lea 0x2047b9(%rip),%rcx
5867(5): jmp 0xfffff709(%rip)

"quote_mem" :
5870(7): lea 0x2047a9(%rip),%rcx
5877(3): mov %rsi,%rdx
587a(3): mov %rdi,%rsi
587d(2): xor %edi,%edi
587f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5890(7): lea 0x204789(%rip),%rcx
5897(7): mov $0xffffffff,%rdx
589e(5): jmp 0xfffff6d2(%rip)

"quote" :
58b0(7): lea 0x204769(%rip),%rcx
58b7(3): mov %rdi,%rsi
58ba(7): mov $0xffffffff,%rdx
58c1(2): xor %edi,%edi
58c3(5): jmp 0xfffff6ad(%rip)

"same_nameat.part.0" :
58d0(2): push %r13
58d2(2): push %r12
58d4(3): mov %edi,%r13d
58d7(1): push %rbp
58d8(1): push %rbx
58d9(3): mov %rsi,%rdi
58dc(2): mov %edx,%ebp
58de(3): mov %rcx,%r12
58e1(7): sub $0x138,%rsp
58e8(9): mov $0x28,%rax
58f1(8): mov %rax,0x128(%rsp)
58f9(2): xor %eax,%eax
58fb(5): call 0xbb5(%rip)
5900(3): mov %rsp,%rcx
5903(6): mov $0x100,%r8d
5909(3): mov %rax,%rdx
590c(3): mov %r13d,%esi
590f(5): mov $0x1,%edi
5914(3): mov %rax,%rbx
5917(5): call 0xffffbc39(%rip)
591c(2): test %eax,%eax
591e(6): jnz 0xb2(%rip)
5924(3): mov %rbx,%rdi
5927(5): call 0xffffbb19(%rip)
592c(3): mov %r12,%rdi
592f(5): call 0xb81(%rip)
5934(8): lea 0x90(%rsp),%rcx
593c(6): mov $0x100,%r8d
5942(3): mov %rax,%rdx
5945(2): mov %ebp,%esi
5947(5): mov $0x1,%edi
594c(3): mov %rax,%rbx
594f(5): call 0xffffbc01(%rip)
5954(2): test %eax,%eax
5956(2): jnz 0x52(%rip)
5958(2): xor %ebp,%ebp
595a(8): mov 0x98(%rsp),%rax
5962(5): cmp %rax,0x8(%rsp)
5967(2): jnz 0x12(%rip)
5969(8): mov 0x90(%rsp),%rax
5971(4): cmp %rax,(%rsp)
5975(4): setz %bpl
5979(3): mov %rbx,%rdi
597c(5): call 0xffffbac4(%rip)
5981(8): mov 0x128(%rsp),%rdx
5989(9): xor $0x28,%rdx
5992(2): mov %ebp,%eax
5994(2): jnz 0x5e(%rip)
5996(7): add $0x138,%rsp
599d(1): pop %rbx
599e(1): pop %rbp
599f(2): pop %r12
59a1(2): pop %r13
59a3(1): ret near (%rsp)
59a4(4): nop 0x0(%rax)
59a8(5): call 0xffffbab8(%rip)
59ad(2): mov (%rax),%esi
59af(7): lea 0x1625(%rip),%rdx
59b6(3): mov %rbx,%rcx
59b9(5): mov $0x1,%edi
59be(2): xor %eax,%eax
59c0(5): call 0xffffbcf0(%rip)
59c5(2): jmp 0xffffff93(%rip)
59c7(9): nop 0x0(%rax,%rax,1)
59d0(5): call 0xffffba90(%rip)
59d5(2): mov (%rax),%esi
59d7(7): lea 0x15fd(%rip),%rdx
59de(3): mov %rbx,%rcx
59e1(5): mov $0x1,%edi
59e6(2): xor %eax,%eax
59e8(5): call 0xffffbcc8(%rip)
59ed(5): jmp 0xffffff37(%rip)
59f2(5): call 0xffffbb2e(%rip)

"same_nameat" :
5a00(2): push %r15
5a02(2): push %r14
5a04(3): mov %edx,%r15d
5a07(2): push %r13
5a09(2): push %r12
5a0b(1): push %rbp
5a0c(1): push %rbx
5a0d(3): mov %rcx,%rbp
5a10(3): mov %rsi,%rbx
5a13(4): sub $0x18,%rsp
5a17(4): mov %edi,0xc(%rsp)
5a1b(3): mov %rsi,%rdi
5a1e(5): call 0xb72(%rip)
5a23(3): mov %rbp,%rdi
5a26(3): mov %rax,%r12
5a29(5): call 0xb67(%rip)
5a2e(3): mov %r12,%rdi
5a31(3): mov %rax,%r13
5a34(5): call 0xbbc(%rip)
5a39(3): mov %r13,%rdi
5a3c(3): mov %rax,%r14
5a3f(5): call 0xbb1(%rip)
5a44(3): cmp %rax,%r14
5a47(2): jz 0x19(%rip)
5a49(4): add $0x18,%rsp
5a4d(2): xor %eax,%eax
5a4f(1): pop %rbx
5a50(1): pop %rbp
5a51(2): pop %r12
5a53(2): pop %r13
5a55(2): pop %r14
5a57(2): pop %r15
5a59(1): ret near (%rsp)
5a5a(6): nop 0x0(%rax,%rax,1)
5a60(3): mov %r14,%rdx
5a63(3): mov %r13,%rsi
5a66(3): mov %r12,%rdi
5a69(5): call 0xffffbb57(%rip)
5a6e(2): test %eax,%eax
5a70(2): jnz 0xffffffd9(%rip)
5a72(4): mov 0xc(%rsp),%edi
5a76(4): add $0x18,%rsp
5a7a(3): mov %rbp,%rcx
5a7d(3): mov %r15d,%edx
5a80(3): mov %rbx,%rsi
5a83(1): pop %rbx
5a84(1): pop %rbp
5a85(2): pop %r12
5a87(2): pop %r13
5a89(2): pop %r14
5a8b(2): pop %r15
5a8d(5): jmp 0xfffffe43(%rip)

"same_name" :
5aa0(5): mov $0xffffff9c,%edx
5aa5(3): mov %rsi,%rcx
5aa8(3): mov %rdi,%rsi
5aab(2): mov %edx,%edi
5aad(5): jmp 0xffffff53(%rip)

"version_etc_arn" :
5ac0(2): push %r15
5ac2(2): push %r14
5ac4(2): push %r13
5ac6(2): push %r12
5ac8(3): mov %r9,%r12
5acb(1): push %rbp
5acc(1): push %rbx
5acd(3): mov %rdi,%rbp
5ad0(3): mov %r8,%rbx
5ad3(4): sub $0x28,%rsp
5ad7(3): test %rsi,%rsi
5ada(6): jz 0x11e(%rip)
5ae0(3): mov %rdx,%r8
5ae3(7): lea 0x1abe(%rip),%rdx
5aea(3): mov %rcx,%r9
5aed(2): xor %eax,%eax
5aef(3): mov %rsi,%rcx
5af2(5): mov $0x1,%esi
5af7(5): call 0xffffbc09(%rip)
5afc(7): lea 0x1ab8(%rip),%rsi
5b03(2): xor %edi,%edi
5b05(5): mov $0x5,%edx
5b0a(5): call 0xffffb9d6(%rip)
5b0f(7): lea 0x1dca(%rip),%rdx
5b16(3): mov %rax,%rcx
5b19(6): mov $0x7e3,%r8d
5b1f(5): mov $0x1,%esi
5b24(3): mov %rbp,%rdi
5b27(2): xor %eax,%eax
5b29(5): call 0xffffbbd7(%rip)
5b2e(7): lea 0x1b13(%rip),%rsi
5b35(2): xor %edi,%edi
5b37(5): mov $0x5,%edx
5b3c(5): call 0xffffb9a4(%rip)
5b41(3): mov %rbp,%rsi
5b44(3): mov %rax,%rdi
5b47(5): call 0xffffba89(%rip)
5b4c(4): cmp $0x9,%r12
5b50(6): jnbe 0x340(%rip)
5b56(7): lea 0x1d4b(%rip),%rdx
5b5d(4): movsxd 0x0(%rdx,%r12,4),%rax
5b61(3): add %rdx,%rax
5b64(2): jmp %rax
5b66(a): nop 0x0(%rax,%rax,1)
5b70(4): mov 0x38(%rbx),%r9
5b74(4): mov 0x10(%rbx),%rax
5b78(7): lea 0x1c39(%rip),%rsi
5b7f(4): mov 0x8(%rbx),%r8
5b83(5): mov $0x5,%edx
5b88(2): xor %edi,%edi
5b8a(4): mov 0x30(%rbx),%r13
5b8e(4): mov 0x28(%rbx),%r12
5b92(5): mov %r9,0x10(%rsp)
5b97(4): mov 0x20(%rbx),%r15
5b9b(4): mov 0x18(%rbx),%r14
5b9f(4): mov %rax,(%rsp)
5ba3(5): mov %r8,0x8(%rsp)
5ba8(3): mov (%rbx),%rbx
5bab(5): call 0xffffb935(%rip)
5bb0(4): sub $0x8,%rsp
5bb4(5): mov 0x18(%rsp),%r9
5bb9(3): mov %rax,%rdx
5bbc(3): mov %rbx,%rcx
5bbf(5): mov $0x1,%esi
5bc4(3): mov %rbp,%rdi
5bc7(2): xor %eax,%eax
5bc9(2): push %r9
5bcb(2): push %r13
5bcd(2): push %r12
5bcf(2): push %r15
5bd1(2): push %r14
5bd3(5): mov 0x30(%rsp),%r9
5bd8(5): mov 0x38(%rsp),%r8
5bdd(5): call 0xffffbb23(%rip)
5be2(4): add $0x30,%rsp
5be6(4): add $0x28,%rsp
5bea(1): pop %rbx
5beb(1): pop %rbp
5bec(2): pop %r12
5bee(2): pop %r13
5bf0(2): pop %r14
5bf2(2): pop %r15
5bf4(1): ret near (%rsp)
5bf5(3): nop (%rax)
5bf8(3): mov %rcx,%r8
5bfb(3): mov %rdx,%rcx
5bfe(7): lea 0x19af(%rip),%rdx
5c05(5): mov $0x1,%esi
5c0a(2): xor %eax,%eax
5c0c(5): call 0xffffbaf4(%rip)
5c11(5): jmp 0xfffffeeb(%rip)
5c16(a): nop 0x0(%rax,%rax,1)
5c20(4): mov 0x40(%rbx),%r10
5c24(4): mov 0x38(%rbx),%r9
5c28(7): lea 0x1bb9(%rip),%rsi
5c2f(4): mov 0x10(%rbx),%rax
5c33(4): mov 0x8(%rbx),%r8
5c37(5): mov $0x5,%edx
5c3c(4): mov 0x30(%rbx),%r13
5c40(4): mov 0x28(%rbx),%r12
5c44(4): mov 0x20(%rbx),%r15
5c48(4): mov 0x18(%rbx),%r14
5c4c(3): mov (%rbx),%rbx
5c4f(5): mov %r10,0x18(%rsp)
5c54(5): mov %r9,0x10(%rsp)
5c59(4): mov %rax,(%rsp)
5c5d(5): mov %r8,0x8(%rsp)
5c62(2): xor %edi,%edi
5c64(5): call 0xffffb87c(%rip)
5c69(5): mov 0x18(%rsp),%r10
5c6e(2): push %r10
5c70(5): jmp 0xffffff44(%rip)
5c75(3): nop (%rax)
5c78(3): mov (%rbx),%rbx
5c7b(7): lea 0x193d(%rip),%rsi
5c82(5): mov $0x5,%edx
5c87(2): xor %edi,%edi
5c89(5): call 0xffffb857(%rip)
5c8e(4): add $0x28,%rsp
5c92(3): mov %rbx,%rcx
5c95(3): mov %rbp,%rdi
5c98(1): pop %rbx
5c99(1): pop %rbp
5c9a(2): pop %r12
5c9c(2): pop %r13
5c9e(2): pop %r14
5ca0(2): pop %r15
5ca2(3): mov %rax,%rdx
5ca5(5): mov $0x1,%esi
5caa(2): xor %eax,%eax
5cac(5): jmp 0xffffba54(%rip)
5cb1(7): nop 0x0(%rax)
5cb8(4): mov 0x8(%rbx),%r12
5cbc(7): lea 0x190c(%rip),%rsi
5cc3(3): mov (%rbx),%rbx
5cc6(5): mov $0x5,%edx
5ccb(2): xor %edi,%edi
5ccd(5): call 0xffffb813(%rip)
5cd2(4): add $0x28,%rsp
5cd6(3): mov %r12,%r8
5cd9(3): mov %rbx,%rcx
5cdc(3): mov %rbp,%rdi
5cdf(3): mov %rax,%rdx
5ce2(5): mov $0x1,%esi
5ce7(1): pop %rbx
5ce8(1): pop %rbp
5ce9(2): pop %r12
5ceb(2): pop %r13
5ced(2): pop %r14
5cef(2): pop %r15
5cf1(2): xor %eax,%eax
5cf3(5): jmp 0xffffba0d(%rip)
5cf8(8): nop 0x0(%rax,%rax,1)
5d00(4): mov 0x10(%rbx),%r13
5d04(4): mov 0x8(%rbx),%r12
5d08(7): lea 0x18d7(%rip),%rsi
5d0f(3): mov (%rbx),%rbx
5d12(5): mov $0x5,%edx
5d17(2): xor %edi,%edi
5d19(5): call 0xffffb7c7(%rip)
5d1e(4): add $0x28,%rsp
5d22(3): mov %r13,%r9
5d25(3): mov %r12,%r8
5d28(3): mov %rbx,%rcx
5d2b(3): mov %rbp,%rdi
5d2e(3): mov %rax,%rdx
5d31(1): pop %rbx
5d32(1): pop %rbp
5d33(2): pop %r12
5d35(2): pop %r13
5d37(2): pop %r14
5d39(2): pop %r15
5d3b(5): mov $0x1,%esi
5d40(2): xor %eax,%eax
5d42(5): jmp 0xffffb9be(%rip)
5d47(9): nop 0x0(%rax,%rax,1)
5d50(7): lea 0x19c1(%rip),%rsi
5d57(5): mov $0x5,%edx
5d5c(2): xor %edi,%edi
5d5e(4): mov 0x18(%rbx),%r14
5d62(4): mov 0x10(%rbx),%r13
5d66(4): mov 0x8(%rbx),%r12
5d6a(3): mov (%rbx),%rbx
5d6d(5): call 0xffffb773(%rip)
5d72(4): sub $0x8,%rsp
5d76(2): push %r14
5d78(3): mov %rax,%rdx
5d7b(3): mov %r13,%r9
5d7e(3): mov %r12,%r8
5d81(3): mov %rbx,%rcx
5d84(3): mov %rbp,%rdi
5d87(5): mov $0x1,%esi
5d8c(2): xor %eax,%eax
5d8e(5): call 0xffffb972(%rip)
5d93(1): pop %rax
5d94(1): pop %rdx
5d95(4): add $0x28,%rsp
5d99(1): pop %rbx
5d9a(1): pop %rbp
5d9b(2): pop %r12
5d9d(2): pop %r13
5d9f(2): pop %r14
5da1(2): pop %r15
5da3(1): ret near (%rsp)
5da4(4): nop 0x0(%rax)
5da8(4): mov 0x20(%rbx),%r15
5dac(7): lea 0x1985(%rip),%rsi
5db3(5): mov $0x5,%edx
5db8(2): xor %edi,%edi
5dba(4): mov 0x18(%rbx),%r14
5dbe(4): mov 0x10(%rbx),%r13
5dc2(4): mov 0x8(%rbx),%r12
5dc6(3): mov (%rbx),%rbx
5dc9(5): call 0xffffb717(%rip)
5dce(2): push %r15
5dd0(2): jmp 0xffffffa6(%rip)
5dd2(6): nop 0x0(%rax,%rax,1)
5dd8(4): mov 0x8(%rbx),%r8
5ddc(4): mov 0x28(%rbx),%r12
5de0(7): lea 0x1979(%rip),%rsi
5de7(4): mov 0x20(%rbx),%r15
5deb(4): mov 0x18(%rbx),%r14
5def(5): mov $0x5,%edx
5df4(4): mov 0x10(%rbx),%r13
5df8(2): xor %edi,%edi
5dfa(3): mov (%rbx),%rbx
5dfd(4): mov %r8,(%rsp)
5e01(5): call 0xffffb6df(%rip)
5e06(4): sub $0x8,%rsp
5e0a(3): mov %r13,%r9
5e0d(2): push %r12
5e0f(2): push %r15
5e11(2): push %r14
5e13(5): mov 0x20(%rsp),%r8
5e18(3): mov %rbx,%rcx
5e1b(3): mov %rax,%rdx
5e1e(3): mov %rbp,%rdi
5e21(5): mov $0x1,%esi
5e26(2): xor %eax,%eax
5e28(5): call 0xffffb8d8(%rip)
5e2d(4): add $0x20,%rsp
5e31(4): add $0x28,%rsp
5e35(1): pop %rbx
5e36(1): pop %rbp
5e37(2): pop %r12
5e39(2): pop %r13
5e3b(2): pop %r14
5e3d(2): pop %r15
5e3f(1): ret near (%rsp)
5e40(4): mov 0x10(%rbx),%r9
5e44(4): mov 0x30(%rbx),%r13
5e48(7): lea 0x1939(%rip),%rsi
5e4f(4): mov 0x28(%rbx),%r12
5e53(4): mov 0x20(%rbx),%r15
5e57(5): mov $0x5,%edx
5e5c(4): mov 0x18(%rbx),%r14
5e60(4): mov 0x8(%rbx),%r8
5e64(2): xor %edi,%edi
5e66(5): mov %r9,0x8(%rsp)
5e6b(3): mov (%rbx),%rbx
5e6e(4): mov %r8,(%rsp)
5e72(5): call 0xffffb66e(%rip)
5e77(2): push %r13
5e79(2): push %r12
5e7b(2): push %r15
5e7d(2): push %r14
5e7f(5): mov 0x28(%rsp),%r9
5e84(2): jmp 0xffffff8f(%rip)
5e86(a): nop 0x0(%rax,%rax,1)
5e90(4): mov 0x40(%rbx),%r10
5e94(4): mov 0x38(%rbx),%r9
5e98(5): mov $0x5,%edx
5e9d(4): mov 0x10(%rbx),%rax
5ea1(4): mov 0x8(%rbx),%r8
5ea5(7): lea 0x1974(%rip),%rsi
5eac(4): mov 0x30(%rbx),%r13
5eb0(4): mov 0x28(%rbx),%r12
5eb4(4): mov 0x20(%rbx),%r15
5eb8(4): mov 0x18(%rbx),%r14
5ebc(5): mov %r10,0x18(%rsp)
5ec1(5): mov %r9,0x10(%rsp)
5ec6(4): mov %rax,(%rsp)
5eca(5): mov %r8,0x8(%rsp)
5ecf(3): mov (%rbx),%rbx
5ed2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5ee0(3): xor %r9d,%r9d
5ee3(4): cmp $0x0,(%r8)
5ee7(2): jz 0x14(%rip)
5ee9(7): nop 0x0(%rax)
5ef0(4): add $0x1,%r9
5ef4(5): cmp $0x0,0x0(%r8,%r9,8)
5ef9(2): jnz 0xfffffff7(%rip)
5efb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5f00(4): sub $0x68,%rsp
5f04(3): mov %r8,%r10
5f07(3): xor %r9d,%r9d
5f0a(9): mov $0x28,%rax
5f13(5): mov %rax,0x58(%rsp)
5f18(2): xor %eax,%eax
5f1a(3): mov %rsp,%r8
5f1d(3): nop (%rax)
5f20(3): mov (%r10),%eax
5f23(3): cmp $0x2f,%eax
5f26(2): jnbe 0x44(%rip)
5f28(3): mov %eax,%r11d
5f2b(4): add 0x10(%r10),%r11
5f2f(3): add $0x8,%eax
5f32(3): mov %eax,(%r10)
5f35(3): mov (%r11),%rax
5f38(3): test %rax,%rax
5f3b(4): mov %rax,0x0(%r8,%r9,8)
5f3f(2): jz 0xc(%rip)
5f41(4): add $0x1,%r9
5f45(4): cmp $0xa,%r9
5f49(2): jnz 0xffffffd7(%rip)
5f4b(5): call 0xfffffb75(%rip)
5f50(5): mov 0x58(%rsp),%rax
5f55(9): xor $0x28,%rax
5f5e(2): jnz 0x7(%rip)
5f60(4): add $0x68,%rsp
5f64(1): ret near (%rsp)
5f65(5): call 0xffffb5bb(%rip)
5f6a(4): mov 0x8(%r10),%r11
5f6e(4): lea 0x8(%r11),%rax
5f72(4): mov %rax,0x8(%r10)
5f76(2): jmp 0xffffffbf(%rip)

"version_etc" :
5f80(1): push %rbp
5f81(1): push %rbx
5f82(6): mov $0x20,%r10d
5f88(3): xor %r11d,%r11d
5f8b(7): sub $0xb8,%rsp
5f92(9): mov $0x28,%rax
5f9b(5): mov %rax,0x78(%rsp)
5fa0(2): xor %eax,%eax
5fa2(8): lea 0xd0(%rsp),%rax
5faa(8): mov %r8,0xa0(%rsp)
5fb2(8): lea 0xd0(%rsp),%rbx
5fba(5): lea 0x20(%rsp),%r8
5fbf(8): mov %r9,0xa8(%rsp)
5fc7(8): mov $0x20,0x8(%rsp)
5fcf(5): mov %rax,0x10(%rsp)
5fd4(8): lea 0x80(%rsp),%rax
5fdc(3): xor %r9d,%r9d
5fdf(5): mov %rax,0x18(%rsp)
5fe4(3): mov %rax,%rbp
5fe7(9): nop 0x0(%rax,%rax,1)
5ff0(4): cmp $0x2f,%r10d
5ff4(2): jnbe 0x58(%rip)
5ff6(3): mov %r10d,%eax
5ff9(6): mov $0x1,%r11d
5fff(4): add $0x8,%r10d
6003(3): add %rbp,%rax
6006(3): mov (%rax),%rax
6009(3): test %rax,%rax
600c(4): mov %rax,0x0(%r8,%r9,8)
6010(2): jz 0xc(%rip)
6012(4): add $0x1,%r9
6016(4): cmp $0xa,%r9
601a(2): jnz 0xffffffd6(%rip)
601c(3): test %r11b,%r11b
601f(2): jnz 0x26(%rip)
6021(5): call 0xfffffa9f(%rip)
6026(5): mov 0x78(%rsp),%rax
602b(9): xor $0x28,%rax
6034(2): jnz 0xc(%rip)
6036(7): add $0xb8,%rsp
603d(1): pop %rbx
603e(1): pop %rbp
603f(1): ret near (%rsp)
6040(5): call 0xffffb4e0(%rip)
6045(5): mov %r10d,0x8(%rsp)
604a(2): jmp 0xffffffd7(%rip)
604c(3): mov %rbx,%rax
604f(4): add $0x8,%rbx
6053(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6060(1): push %rbx
6061(7): lea 0x159a(%rip),%rsi
6068(5): mov $0x5,%edx
606d(2): xor %edi,%edi
606f(5): call 0xffffb471(%rip)
6074(7): lea 0x159c(%rip),%rdx
607b(3): mov %rax,%rsi
607e(5): mov $0x1,%edi
6083(2): xor %eax,%eax
6085(5): call 0xffffb60b(%rip)
608a(7): lea 0x159c(%rip),%rsi
6091(5): mov $0x5,%edx
6096(2): xor %edi,%edi
6098(5): call 0xffffb448(%rip)
609d(7): lea 0xe4c(%rip),%rcx
60a4(7): lea 0x8b8(%rip),%rdx
60ab(3): mov %rax,%rsi
60ae(5): mov $0x1,%edi
60b3(2): xor %eax,%eax
60b5(5): call 0xffffb5db(%rip)
60ba(7): mov 0x203fc7(%rip),%rbx
60c1(7): lea 0x1798(%rip),%rsi
60c8(2): xor %edi,%edi
60ca(5): mov $0x5,%edx
60cf(5): call 0xffffb411(%rip)
60d4(3): mov %rbx,%rsi
60d7(3): mov %rax,%rdi
60da(1): pop %rbx
60db(5): jmp 0xffffb4f5(%rip)

"xmalloc" :
60e0(1): push %rbx
60e1(3): mov %rdi,%rbx
60e4(5): call 0xffffb54c(%rip)
60e9(3): test %rax,%rax
60ec(2): jnz 0x7(%rip)
60ee(3): test %rbx,%rbx
60f1(2): jnz 0x4(%rip)
60f3(1): pop %rbx
60f4(1): ret near (%rsp)
60f5(5): call 0x23b(%rip)

"xnmalloc" :
6100(3): mov %rdi,%rax
6103(3): mul %rax,%rsi,%rdx
6106(3): mov %rax,%rdi
6109(3): seto %al
610c(3): test %rdi,%rdi
610f(2): js 0xc(%rip)
6111(3): movzx %al,%eax
6114(3): test %rax,%rax
6117(2): jnz 0x4(%rip)
6119(2): jmp 0xffffffc7(%rip)
611b(4): sub $0x8,%rsp
611f(5): call 0x211(%rip)

"xrealloc" :
6140(3): test %rsi,%rsi
6143(1): push %rbx
6144(3): mov %rsi,%rbx
6147(2): jnz 0x7(%rip)
6149(3): test %rdi,%rdi
614c(2): jnz 0x1c(%rip)
614e(3): mov %rbx,%rsi
6151(5): call 0xffffb51f(%rip)
6156(3): test %rax,%rax
6159(2): jnz 0x7(%rip)
615b(3): test %rbx,%rbx
615e(2): jnz 0x13(%rip)
6160(1): pop %rbx
6161(1): ret near (%rsp)
6162(6): nop 0x0(%rax,%rax,1)
6168(5): call 0xffffb2d8(%rip)
616d(2): xor %eax,%eax
616f(1): pop %rbx
6170(1): ret near (%rsp)
6171(5): call 0x1bf(%rip)

"xnrealloc" :
6180(3): mov %rsi,%rax
6183(3): mul %rax,%rdx,%rdx
6186(3): mov %rax,%rsi
6189(3): seto %al
618c(3): test %rsi,%rsi
618f(2): js 0xc(%rip)
6191(3): movzx %al,%eax
6194(3): test %rax,%rax
6197(2): jnz 0x4(%rip)
6199(2): jmp 0xffffffa7(%rip)
619b(4): sub $0x8,%rsp
619f(5): call 0x191(%rip)

"x2nrealloc" :
61b0(3): test %rdi,%rdi
61b3(3): mov %rdx,%r9
61b6(3): mov (%rsi),%rcx
61b9(2): jz 0x37(%rip)
61bb(2): xor %edx,%edx
61bd(a): mov $0x6148914691236517204,%rax
61c7(3): div %r9,%rax
61ca(3): cmp %rcx,%rax
61cd(2): jbe 0x3e(%rip)
61cf(3): mov %rcx,%rax
61d2(3): shr $0x1,%rax
61d5(5): lea 0x1(%rax,%rcx,1),%rcx
61da(3): mov %rcx,(%rsi)
61dd(4): imul %r9,%rcx
61e1(3): mov %rcx,%rsi
61e4(5): jmp 0xffffff5c(%rip)
61e9(7): nop 0x0(%rax)
61f0(3): test %rcx,%rcx
61f3(2): jz 0x25(%rip)
61f5(3): mov %rcx,%rax
61f8(3): mul %rax,%r9,%rdx
61fb(3): seto %dl
61fe(3): test %rax,%rax
6201(3): movzx %dl,%edx
6204(2): js 0x7(%rip)
6206(3): test %rdx,%rdx
6209(2): jz 0xffffffd1(%rip)
620b(4): sub $0x8,%rsp
620f(5): call 0x121(%rip)
6214(4): nop 0x0(%rax)
6218(2): xor %edx,%edx
621a(5): mov $0x80,%eax
621f(3): xor %r8d,%r8d
6222(3): div %r9,%rax
6225(3): test %rax,%rax
6228(4): setz %r8b
622c(4): lea 0x0(%r8,%rax,1),%rcx
6230(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6240(3): test %rdi,%rdi
6243(3): mov (%rsi),%rax
6246(2): jz 0x2a(%rip)
6248(a): mov $0x6148914691236517203,%rdx
6252(3): cmp %rdx,%rax
6255(2): jnbe 0x2c(%rip)
6257(3): mov %rax,%rdx
625a(3): shr $0x1,%rdx
625d(5): lea 0x1(%rdx,%rax,1),%rax
6262(3): mov %rax,(%rsi)
6265(3): mov %rax,%rsi
6268(5): jmp 0xfffffed8(%rip)
626d(3): nop (%rax)
6270(3): test %rax,%rax
6273(5): mov $0x80,%edx
6278(4): cmove %rdx,%rax
627c(3): test %rax,%rax
627f(2): jns 0xffffffe3(%rip)
6281(4): sub $0x8,%rsp
6285(5): call 0xab(%rip)

"xzalloc" :
6290(1): push %rbx
6291(3): mov %rdi,%rbx
6294(5): call 0xfffffe4c(%rip)
6299(3): mov %rbx,%rdx
629c(2): xor %esi,%esi
629e(3): mov %rax,%rdi
62a1(1): pop %rbx
62a2(5): jmp 0xffffb2ee(%rip)

"xcalloc" :
62b0(3): mov %rdi,%rax
62b3(4): sub $0x8,%rsp
62b7(3): mul %rax,%rsi,%rdx
62ba(3): seto %dl
62bd(3): test %rax,%rax
62c0(2): js 0x19(%rip)
62c2(3): movzx %dl,%edx
62c5(3): test %rdx,%rdx
62c8(2): jnz 0x11(%rip)
62ca(5): call 0xffffb316(%rip)
62cf(3): test %rax,%rax
62d2(2): jz 0x7(%rip)
62d4(4): add $0x8,%rsp
62d8(1): ret near (%rsp)
62d9(5): call 0x57(%rip)

"xmemdup" :
62e0(1): push %rbp
62e1(1): push %rbx
62e2(3): mov %rdi,%rbp
62e5(3): mov %rsi,%rdi
62e8(3): mov %rsi,%rbx
62eb(4): sub $0x8,%rsp
62ef(5): call 0xfffffdf1(%rip)
62f4(4): add $0x8,%rsp
62f8(3): mov %rbx,%rdx
62fb(3): mov %rbp,%rsi
62fe(1): pop %rbx
62ff(1): pop %rbp
6300(3): mov %rax,%rdi
6303(5): jmp 0xffffb2fd(%rip)

"xstrdup" :
6310(1): push %rbx
6311(3): mov %rdi,%rbx
6314(5): call 0xffffb1ec(%rip)
6319(3): mov %rbx,%rdi
631c(4): lea 0x1(%rax),%rsi
6320(1): pop %rbx
6321(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
6330(7): lea 0x15d8(%rip),%rsi
6337(4): sub $0x8,%rsp
633b(5): mov $0x5,%edx
6340(2): xor %edi,%edi
6342(5): call 0xffffb19e(%rip)
6347(6): mov 0x203ccb(%rip),%edi
634d(7): lea 0xc87(%rip),%rdx
6354(3): mov %rax,%rcx
6357(2): xor %esi,%esi
6359(2): xor %eax,%eax
635b(5): call 0xffffb355(%rip)
6360(5): call 0xffffb0f0(%rip)

"xgetcwd" :
6370(1): push %rbx
6371(2): xor %esi,%esi
6373(2): xor %edi,%edi
6375(5): call 0xffffb22b(%rip)
637a(3): test %rax,%rax
637d(3): mov %rax,%rbx
6380(2): jz 0x10(%rip)
6382(3): mov %rbx,%rax
6385(1): pop %rbx
6386(1): ret near (%rsp)
6387(9): nop 0x0(%rax,%rax,1)
6390(5): call 0xffffb0d0(%rip)
6395(3): cmp $0xc,(%rax)
6398(2): jnz 0xffffffea(%rip)
639a(5): call 0xffffff96(%rip)

"rpl_mbrtowc" :
63a0(2): push %r13
63a2(2): push %r12
63a4(3): mov %rsi,%r13
63a7(1): push %rbp
63a8(1): push %rbx
63a9(3): mov %rdi,%rbx
63ac(3): mov %rdx,%r12
63af(4): sub $0x18,%rsp
63b3(9): mov $0x28,%rax
63bc(5): mov %rax,0x8(%rsp)
63c1(2): xor %eax,%eax
63c3(5): lea 0x4(%rsp),%rax
63c8(3): test %rdi,%rdi
63cb(4): cmove %rax,%rbx
63cf(3): mov %rbx,%rdi
63d2(5): call 0xffffb16e(%rip)
63d7(4): cmp $0xfffffffd,%rax
63db(3): mov %rax,%rbp
63de(2): jbe 0x22(%rip)
63e0(3): test %r12,%r12
63e3(2): jz 0x1d(%rip)
63e5(2): xor %edi,%edi
63e7(5): call 0x259(%rip)
63ec(2): test %al,%al
63ee(2): jnz 0x12(%rip)
63f0(5): movzx 0x0(%r13),%eax
63f5(5): mov $0x1,%ebp
63fa(2): mov %eax,(%rbx)
63fc(4): nop 0x0(%rax)
6400(5): mov 0x8(%rsp),%rdx
6405(9): xor $0x28,%rdx
640e(3): mov %rbp,%rax
6411(2): jnz 0xd(%rip)
6413(4): add $0x18,%rsp
6417(1): pop %rbx
6418(1): pop %rbp
6419(2): pop %r12
641b(2): pop %r13
641d(1): ret near (%rsp)
641e(5): call 0xffffb102(%rip)

"close_stream" :
6430(2): push %r12
6432(1): push %rbp
6433(3): mov %rdi,%rbp
6436(1): push %rbx
6437(5): call 0xffffb059(%rip)
643c(3): mov 0x0(%rbp),%ebx
643f(3): mov %rbp,%rdi
6442(3): mov %rax,%r12
6445(5): call 0x2db(%rip)
644a(3): and $0x20,%ebx
644d(2): test %ebx,%ebx
644f(2): jnz 0x19(%rip)
6451(2): test %eax,%eax
6453(2): jz 0xc(%rip)
6455(3): test %r12,%r12
6458(5): mov $0xffffffff,%eax
645d(2): jz 0x3b(%rip)
645f(1): pop %rbx
6460(1): pop %rbp
6461(2): pop %r12
6463(1): ret near (%rsp)
6464(4): nop 0x0(%rax)
6468(2): test %eax,%eax
646a(2): jnz 0x1e(%rip)
646c(5): call 0xffffaff4(%rip)
6471(6): mov $0x0,(%rax)
6477(5): mov $0xffffffff,%eax
647c(1): pop %rbx
647d(1): pop %rbp
647e(2): pop %r12
6480(1): ret near (%rsp)
6481(7): nop 0x0(%rax)
6488(1): pop %rbx
6489(5): mov $0xffffffff,%eax
648e(1): pop %rbp
648f(2): pop %r12
6491(1): ret near (%rsp)
6492(6): nop 0x0(%rax,%rax,1)
6498(5): call 0xffffafc8(%rip)
649d(3): cmp $0x9,(%rax)
64a0(1): pop %rbx
64a1(1): pop %rbp
64a2(2): pop %r12
64a4(3): setnz %al
64a7(3): movzx %al,%eax
64aa(2): neg %eax
64ac(1): ret near (%rsp)

"dir_name" :
64b0(4): sub $0x8,%rsp
64b4(5): call 0x7c(%rip)
64b9(3): test %rax,%rax
64bc(2): jz 0x7(%rip)
64be(4): add $0x8,%rsp
64c2(1): ret near (%rsp)
64c3(5): call 0xfffffe6d(%rip)

"dir_len" :
64d0(1): push %rbp
64d1(1): push %rbx
64d2(2): xor %ebp,%ebp
64d4(3): mov %rdi,%rbx
64d7(4): sub $0x8,%rsp
64db(3): cmp $0x2f,(%rdi)
64de(4): setz %bpl
64e2(5): call 0xae(%rip)
64e7(3): mov %rax,%rcx
64ea(3): sub %rbx,%rcx
64ed(3): cmp %rbp,%rcx
64f0(2): jbe 0x30(%rip)
64f2(4): cmp $0x2f,0xffffffff(%rax)
64f6(4): lea 0xffffffff(%rcx),%rdx
64fa(2): jz 0x14(%rip)
64fc(2): jmp 0x24(%rip)
64fe(2): nop 
6500(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
6505(4): lea 0xffffffff(%rdx),%rax
6509(2): jnz 0xa(%rip)
650b(3): mov %rax,%rdx
650e(3): cmp %rdx,%rbp
6511(2): jnz 0xffffffef(%rip)
6513(4): add $0x8,%rsp
6517(3): mov %rdx,%rax
651a(1): pop %rbx
651b(1): pop %rbp
651c(1): ret near (%rsp)
651d(3): nop (%rax)
6520(4): add $0x8,%rsp
6524(3): mov %rcx,%rdx
6527(3): mov %rdx,%rax
652a(1): pop %rbx
652b(1): pop %rbp
652c(1): ret near (%rsp)

"mdir_name" :
6530(1): push %rbp
6531(1): push %rbx
6532(3): mov %rdi,%rbp
6535(4): sub $0x8,%rsp
6539(5): call 0xffffff97(%rip)
653e(3): test %rax,%rax
6541(3): mov %rax,%rbx
6544(3): setz %al
6547(3): movzx %al,%eax
654a(5): lea 0x1(%rbx,%rax,1),%rdi
654f(5): call 0xffffb0e1(%rip)
6554(3): test %rax,%rax
6557(3): mov %rax,%rcx
655a(2): jz 0x1c(%rip)
655c(3): mov %rbx,%rdx
655f(3): mov %rbp,%rsi
6562(3): mov %rax,%rdi
6565(5): call 0xffffb09b(%rip)
656a(3): test %rbx,%rbx
656d(3): mov %rax,%rcx
6570(2): jz 0x10(%rip)
6572(4): mov $0x0,0x0(%rcx,%rbx,1)
6576(4): add $0x8,%rsp
657a(3): mov %rcx,%rax
657d(1): pop %rbx
657e(1): pop %rbp
657f(1): ret near (%rsp)
6580(3): mov $0x2e,(%rax)
6583(5): mov $0x1,%ebx
6588(2): jmp 0xffffffea(%rip)

"last_component" :
6590(3): movzx (%rdi),%edx
6593(3): mov %rdi,%rax
6596(3): cmp $0x2f,%dl
6599(2): jnz 0x13(%rip)
659b(5): nop 0x0(%rax,%rax,1)
65a0(4): add $0x1,%rax
65a4(3): movzx (%rax),%edx
65a7(3): cmp $0x2f,%dl
65aa(2): jz 0xfffffff6(%rip)
65ac(2): test %dl,%dl
65ae(2): jz 0x3c(%rip)
65b0(3): mov %rax,%rcx
65b3(2): xor %esi,%esi
65b5(2): jmp 0x20(%rip)
65b7(9): nop 0x0(%rax,%rax,1)
65c0(3): test %sil,%sil
65c3(2): jz 0x7(%rip)
65c5(3): mov %rcx,%rax
65c8(2): xor %esi,%esi
65ca(4): add $0x1,%rcx
65ce(3): movzx (%rcx),%edx
65d1(2): test %dl,%dl
65d3(2): jz 0x17(%rip)
65d5(3): cmp $0x2f,%dl
65d8(2): jnz 0xffffffe8(%rip)
65da(4): add $0x1,%rcx
65de(3): movzx (%rcx),%edx
65e1(5): mov $0x1,%esi
65e6(2): test %dl,%dl
65e8(2): jnz 0xffffffed(%rip)
65ea(2): REP ret near (%rsp)

"base_len" :
65f0(1): push %rbx
65f1(3): mov %rdi,%rbx
65f4(5): call 0xffffaf0c(%rip)
65f9(4): cmp $0x1,%rax
65fd(2): jbe 0xd(%rip)
65ff(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
6604(4): lea 0xffffffff(%rax),%rdx
6608(2): jz 0x10(%rip)
660a(1): pop %rbx
660b(1): ret near (%rsp)
660c(4): nop 0x0(%rax)
6610(3): mov %rax,%rdx
6613(5): nop 0x0(%rax,%rax,1)
6618(4): cmp $0x1,%rdx
661c(2): jz 0x14(%rip)
661e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
6623(4): lea 0xffffffff(%rdx),%rax
6627(2): jz 0xffffffe9(%rip)
6629(3): mov %rdx,%rax
662c(1): pop %rbx
662d(1): ret near (%rsp)
662e(2): nop 
6630(5): mov $0x1,%eax
6635(1): pop %rbx
6636(1): ret near (%rsp)

"hard_locale" :
6640(4): sub $0x8,%rsp
6644(2): xor %esi,%esi
6646(5): call 0xffffb03a(%rip)
664b(3): mov %rax,%rdx
664e(5): mov $0x1,%eax
6653(3): test %rdx,%rdx
6656(2): jz 0x1f(%rip)
6658(7): lea 0x12c1(%rip),%rdi
665f(5): mov $0x2,%ecx
6664(3): mov %rdx,%rsi
6667(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6669(3): setnbe %cl
666c(3): sbb $0x0,%cl
666f(2): xor %eax,%eax
6671(2): test %cl,%cl
6673(2): jnz 0xd(%rip)
6675(4): add $0x8,%rsp
6679(1): ret near (%rsp)
667a(6): nop 0x0(%rax,%rax,1)
6680(7): lea 0x129b(%rip),%rdi
6687(5): mov $0x6,%ecx
668c(3): mov %rdx,%rsi
668f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6691(3): setnbe %al
6694(2): sbb $0x0,%al
6696(2): test %al,%al
6698(3): setnz %al
669b(4): add $0x8,%rsp
669f(1): ret near (%rsp)

"hash_pjw" :
66a0(4): movsx (%rdi),%rcx
66a4(2): test %cl,%cl
66a6(2): jz 0x2a(%rip)
66a8(2): xor %eax,%eax
66aa(6): nop 0x0(%rax,%rax,1)
66b0(4): rol $0x9,%rax
66b4(4): add $0x1,%rdi
66b8(3): add %rcx,%rax
66bb(4): movsx (%rdi),%rcx
66bf(2): test %cl,%cl
66c1(2): jnz 0xffffffef(%rip)
66c3(2): xor %edx,%edx
66c5(3): div %rsi,%rax
66c8(3): mov %rdx,%rax
66cb(1): ret near (%rsp)
66cc(4): nop 0x0(%rax)
66d0(2): xor %edx,%edx
66d2(3): mov %rdx,%rax
66d5(1): ret near (%rsp)

"locale_charset" :
66e0(4): sub $0x8,%rsp
66e4(5): mov $0xe,%edi
66e9(5): call 0xffffaf67(%rip)
66ee(3): test %rax,%rax
66f1(2): jz 0x1f(%rip)
66f3(3): cmp $0x0,(%rax)
66f6(7): lea 0x122b(%rip),%rdx
66fd(4): cmove %rdx,%rax
6701(4): add $0x8,%rsp
6705(1): ret near (%rsp)
6706(a): nop 0x0(%rax,%rax,1)
6710(7): lea 0x1211(%rip),%rax
6717(4): add $0x8,%rsp
671b(1): ret near (%rsp)

"rpl_fclose" :
6720(2): push %r12
6722(1): push %rbp
6723(1): push %rbx
6724(3): mov %rdi,%rbx
6727(5): call 0xffffaee9(%rip)
672c(2): test %eax,%eax
672e(3): mov %rbx,%rdi
6731(2): js 0x56(%rip)
6733(5): call 0xffffaf2d(%rip)
6738(2): test %eax,%eax
673a(2): jnz 0x2e(%rip)
673c(3): mov %rbx,%rdi
673f(5): call 0x61(%rip)
6744(2): test %eax,%eax
6746(2): jz 0x3e(%rip)
6748(5): call 0xffffad18(%rip)
674d(3): mov (%rax),%r12d
6750(3): mov %rbx,%rdi
6753(3): mov %rax,%rbp
6756(5): call 0xffffad6a(%rip)
675b(3): test %r12d,%r12d
675e(2): jnz 0x32(%rip)
6760(1): pop %rbx
6761(1): pop %rbp
6762(2): pop %r12
6764(1): ret near (%rsp)
6765(3): nop (%rax)
6768(3): mov %rbx,%rdi
676b(5): call 0xffffaea5(%rip)
6770(2): xor %esi,%esi
6772(5): mov $0x1,%edx
6777(2): mov %eax,%edi
6779(5): call 0xffffae07(%rip)
677e(4): cmp $0xffffffff,%rax
6782(2): jnz 0xffffffba(%rip)
6784(3): mov %rbx,%rdi
6787(1): pop %rbx
6788(1): pop %rbp
6789(2): pop %r12
678b(5): jmp 0xffffad35(%rip)
6790(4): mov %r12d,0x0(%rbp)
6794(5): mov $0xffffffff,%eax
6799(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
67a0(3): test %rdi,%rdi
67a3(1): push %rbx
67a4(3): mov %rdi,%rbx
67a7(2): jz 0x13(%rip)
67a9(5): call 0xffffaeb7(%rip)
67ae(2): test %eax,%eax
67b0(2): jz 0xa(%rip)
67b2(6): test $0x100,(%rbx)
67b8(2): jnz 0x10(%rip)
67ba(3): mov %rbx,%rdi
67bd(1): pop %rbx
67be(5): jmp 0xffffae82(%rip)
67c3(5): nop 0x0(%rax,%rax,1)
67c8(3): mov %rbx,%rdi
67cb(5): mov $0x1,%edx
67d0(2): xor %esi,%esi
67d2(5): call 0xe(%rip)
67d7(3): mov %rbx,%rdi
67da(1): pop %rbx
67db(5): jmp 0xffffae65(%rip)

"rpl_fseeko" :
67e0(4): mov 0x8(%rdi),%rax
67e4(4): cmp %rax,0x10(%rdi)
67e8(2): jz 0x8(%rip)
67ea(5): jmp 0xffffaed6(%rip)
67ef(1): nop 
67f0(4): mov 0x20(%rdi),%rax
67f4(4): cmp %rax,0x28(%rdi)
67f8(2): jnz 0xfffffff2(%rip)
67fa(5): cmp $0x0,0x48(%rdi)
67ff(2): jnz 0xffffffeb(%rip)
6801(2): push %r12
6803(1): push %rbp
6804(3): mov %edx,%r12d
6807(1): push %rbx
6808(3): mov %rsi,%rbp
680b(3): mov %rdi,%rbx
680e(5): call 0xffffae02(%rip)
6813(3): mov %r12d,%edx
6816(3): mov %rbp,%rsi
6819(2): mov %eax,%edi
681b(5): call 0xffffad65(%rip)
6820(4): cmp $0xffffffff,%rax
6824(2): jz 0xe(%rip)
6826(3): and $0xef,(%rbx)
6829(7): mov %rax,0x90(%rbx)
6830(2): xor %eax,%eax
6832(1): pop %rbx
6833(1): pop %rbp
6834(2): pop %r12
6836(1): ret near (%rsp)

"__libc_csu_init" :
6840(2): push %r15
6842(2): push %r14
6844(3): mov %rdx,%r15
6847(2): push %r13
6849(2): push %r12
684b(7): lea 0x20321e(%rip),%r12
6852(1): push %rbp
6853(7): lea 0x20321e(%rip),%rbp
685a(1): push %rbx
685b(3): mov %edi,%r13d
685e(3): mov %rsi,%r14
6861(3): sub %r12,%rbp
6864(4): sub $0x8,%rsp
6868(4): sar $0x3,%rbp
686c(5): call 0xffffaba4(%rip)
6871(3): test %rbp,%rbp
6874(2): jz 0x22(%rip)
6876(2): xor %ebx,%ebx
6878(8): nop 0x0(%rax,%rax,1)
6880(3): mov %r15,%rdx
6883(3): mov %r14,%rsi
6886(3): mov %r13d,%edi
6889(4): call 0x0(%r12,%rbx,8)
688d(4): add $0x1,%rbx
6891(3): cmp %rbx,%rbp
6894(2): jnz 0xffffffec(%rip)
6896(4): add $0x8,%rsp
689a(1): pop %rbx
689b(1): pop %rbp
689c(2): pop %r12
689e(2): pop %r13
68a0(2): pop %r14
68a2(2): pop %r15
68a4(1): ret near (%rsp)

"atexit" :
68c0(7): mov 0x203741(%rip),%rdx
68c7(2): xor %esi,%esi
68c9(5): jmp 0xffffae07(%rip)

"_fini" :
68d0(4): sub $0x8,%rsp
68d4(4): add $0x8,%rsp
68d8(1): ret near (%rsp)

