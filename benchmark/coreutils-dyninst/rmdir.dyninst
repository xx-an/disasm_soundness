
"__snprintf_chk@plt" :
13e0(6): jmp 0x208a5a(%rip)
13e6(5): push $0x0

"free@plt" :
13f0(6): jmp 0x208a52(%rip)
13f6(5): push $0x1

"abort@plt" :
1400(6): jmp 0x208a4a(%rip)
1406(5): push $0x2

"__errno_location@plt" :
1410(6): jmp 0x208a42(%rip)
1416(5): push $0x3

"strncmp@plt" :
1420(6): jmp 0x208a3a(%rip)
1426(5): push $0x4

"_exit@plt" :
1430(6): jmp 0x208a32(%rip)
1436(5): push $0x5

"__fpending@plt" :
1440(6): jmp 0x208a2a(%rip)
1446(5): push $0x6

"textdomain@plt" :
1450(6): jmp 0x208a22(%rip)
1456(5): push $0x7

"fclose@plt" :
1460(6): jmp 0x208a1a(%rip)
1466(5): push $0x8

"bindtextdomain@plt" :
1470(6): jmp 0x208a12(%rip)
1476(5): push $0x9

"rmdir@plt" :
1480(6): jmp 0x208a0a(%rip)
1486(5): push $0xa

"dcgettext@plt" :
1490(6): jmp 0x208a02(%rip)
1496(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
14a0(6): jmp 0x2089fa(%rip)
14a6(5): push $0xc

"strlen@plt" :
14b0(6): jmp 0x2089f2(%rip)
14b6(5): push $0xd

"openat@plt" :
14c0(6): jmp 0x2089ea(%rip)
14c6(5): push $0xe

"__stack_chk_fail@plt" :
14d0(6): jmp 0x2089e2(%rip)
14d6(5): push $0xf

"getopt_long@plt" :
14e0(6): jmp 0x2089da(%rip)
14e6(5): push $0x10

"mbrtowc@plt" :
14f0(6): jmp 0x2089d2(%rip)
14f6(5): push $0x11

"__overflow@plt" :
1500(6): jmp 0x2089ca(%rip)
1506(5): push $0x12

"strrchr@plt" :
1510(6): jmp 0x2089c2(%rip)
1516(5): push $0x13

"lseek@plt" :
1520(6): jmp 0x2089ba(%rip)
1526(5): push $0x14

"memset@plt" :
1530(6): jmp 0x2089b2(%rip)
1536(5): push $0x15

"close@plt" :
1540(6): jmp 0x2089aa(%rip)
1546(5): push $0x16

"closedir@plt" :
1550(6): jmp 0x2089a2(%rip)
1556(5): push $0x17

"memcmp@plt" :
1560(6): jmp 0x20899a(%rip)
1566(5): push $0x18

"fputs_unlocked@plt" :
1570(6): jmp 0x208992(%rip)
1576(5): push $0x19

"calloc@plt" :
1580(6): jmp 0x20898a(%rip)
1586(5): push $0x1a

"memcpy@plt" :
1590(6): jmp 0x208982(%rip)
1596(5): push $0x1b

"fileno@plt" :
15a0(6): jmp 0x20897a(%rip)
15a6(5): push $0x1c

"readdir@plt" :
15b0(6): jmp 0x208972(%rip)
15b6(5): push $0x1d

"malloc@plt" :
15c0(6): jmp 0x20896a(%rip)
15c6(5): push $0x1e

"fflush@plt" :
15d0(6): jmp 0x208962(%rip)
15d6(5): push $0x1f

"nl_langinfo@plt" :
15e0(6): jmp 0x20895a(%rip)
15e6(5): push $0x20

"__freading@plt" :
15f0(6): jmp 0x208952(%rip)
15f6(5): push $0x21

"fwrite_unlocked@plt" :
1600(6): jmp 0x20894a(%rip)
1606(5): push $0x22

"realloc@plt" :
1610(6): jmp 0x208942(%rip)
1616(5): push $0x23

"setlocale@plt" :
1620(6): jmp 0x20893a(%rip)
1626(5): push $0x24

"__printf_chk@plt" :
1630(6): jmp 0x208932(%rip)
1636(5): push $0x25

"error@plt" :
1640(6): jmp 0x20892a(%rip)
1646(5): push $0x26

"fseeko@plt" :
1650(6): jmp 0x208922(%rip)
1656(5): push $0x27

"fdopendir@plt" :
1660(6): jmp 0x20891a(%rip)
1666(5): push $0x28

"__cxa_atexit@plt" :
1670(6): jmp 0x208912(%rip)
1676(5): push $0x29

"exit@plt" :
1680(6): jmp 0x20890a(%rip)
1686(5): push $0x2a

"fwrite@plt" :
1690(6): jmp 0x208902(%rip)
1696(5): push $0x2b

"__fprintf_chk@plt" :
16a0(6): jmp 0x2088fa(%rip)
16a6(5): push $0x2c

"mbsinit@plt" :
16b0(6): jmp 0x2088f2(%rip)
16b6(5): push $0x2d

"iswprint@plt" :
16c0(6): jmp 0x2088ea(%rip)
16c6(5): push $0x2e

"__ctype_b_loc@plt" :
16d0(6): jmp 0x2088e2(%rip)
16d6(5): push $0x2f

".plt.got" :
16e0(6): jmp 0x2088fa(%rip)
16e6(2): nop 

"_init" :
13b8(4): sub $0x8,%rsp
13bc(7): mov 0x208c0d(%rip),%rax
13c3(3): test %rax,%rax
13c6(2): jz 0x4(%rip)
13c8(2): call %rax
13ca(4): add $0x8,%rsp
13ce(1): ret near (%rsp)

"main" :
16f0(2): push %r15
16f2(2): push %r14
16f4(2): push %r13
16f6(2): push %r12
16f8(7): lea 0x208401(%rip),%r12
16ff(1): push %rbp
1700(1): push %rbx
1701(2): mov %edi,%ebp
1703(3): mov %rsi,%rbx
1706(4): sub $0x8,%rsp
170a(3): mov (%rsi),%rdi
170d(5): call 0xaa3(%rip)
1712(7): lea 0x5fa8(%rip),%rsi
1719(5): mov $0x6,%edi
171e(5): call 0xffffff02(%rip)
1723(7): lea 0x5663(%rip),%rsi
172a(7): lea 0x5633(%rip),%rdi
1731(5): call 0xfffffd3f(%rip)
1736(7): lea 0x5627(%rip),%rdi
173d(5): call 0xfffffd13(%rip)
1742(7): lea 0x977(%rip),%rdi
1749(5): call 0x5567(%rip)
174e(7): mov $0x0,0x208956(%rip)
1755(7): lea 0x5659(%rip),%rdx
175c(3): xor %r8d,%r8d
175f(3): mov %r12,%rcx
1762(3): mov %rbx,%rsi
1765(2): mov %ebp,%edi
1767(5): call 0xfffffd79(%rip)
176c(3): cmp $0xff,%eax
176f(2): jz 0x7d(%rip)
1771(3): cmp $0x70,%eax
1774(2): jz 0x5c(%rip)
1776(2): jle 0x1a(%rip)
1778(3): cmp $0x76,%eax
177b(2): jz 0x65(%rip)
177d(3): add $0x80,%eax
1780(6): jnz 0x28c(%rip)
1786(7): mov $0x1,0x20891d(%rip)
178d(2): jmp 0xffffffc8(%rip)
178f(1): nop 
1790(5): cmp $0xffffff7d,%eax
1795(6): jnz 0x248(%rip)
179b(7): mov 0x2088e6(%rip),%rdi
17a2(7): mov 0x208867(%rip),%rcx
17a9(7): lea 0x55f5(%rip),%r8
17b0(7): lea 0x55a9(%rip),%rdx
17b7(7): lea 0x5526(%rip),%rsi
17be(3): xor %r9d,%r9d
17c1(2): xor %eax,%eax
17c3(5): call 0x2bdd(%rip)
17c8(2): xor %edi,%edi
17ca(5): call 0xfffffeb6(%rip)
17cf(1): nop 
17d0(7): mov $0x1,0x2088d4(%rip)
17d7(5): jmp 0xffffff7e(%rip)
17dc(4): nop 0x0(%rax)
17e0(7): mov $0x1,0x2088c2(%rip)
17e7(5): jmp 0xffffff6e(%rip)
17ec(6): mov 0x20889e(%rip),%eax
17f2(2): cmp %ebp,%eax
17f4(6): jz 0x1f7(%rip)
17fa(6): mov $0x1,%r12d
1800(2): jl 0x44(%rip)
1802(5): jmp 0x1c7(%rip)
1807(9): nop 0x0(%rax,%rax,1)
1810(3): mov %r14,%rdi
1813(5): call 0xfffffc6d(%rip)
1818(2): test %eax,%eax
181a(2): jnz 0x72(%rip)
181c(8): movzx 0x208887(%rip),%r13d
1824(3): test %r13b,%r13b
1827(6): jnz 0xb9(%rip)
182d(6): mov 0x20885d(%rip),%eax
1833(3): add $0x1,%eax
1836(2): cmp %ebp,%eax
1838(6): mov %eax,0x208852(%rip)
183e(6): jnl 0x18b(%rip)
1844(7): cmp $0x0,0x20885e(%rip)
184b(2): cwde 
184d(4): mov 0x0(%rbx,%rax,8),%r14
1851(2): jz 0xffffffbf(%rip)
1853(3): mov %r14,%rsi
1856(5): mov $0x4,%edi
185b(5): call 0x2395(%rip)
1860(7): lea 0x5561(%rip),%rsi
1867(2): xor %edi,%edi
1869(5): mov $0x5,%edx
186e(3): mov %rax,%r13
1871(5): call 0xfffffc1f(%rip)
1876(7): mov 0x20880b(%rip),%rdi
187d(3): mov %rax,%rsi
1880(3): mov %r13,%rdx
1883(2): xor %eax,%eax
1885(5): call 0x6fb(%rip)
188a(2): jmp 0xffffff86(%rip)
188c(5): call 0xfffffb84(%rip)
1891(2): mov (%rax),%edi
1893(3): mov %r14,%rsi
1896(3): mov %rax,%r13
1899(5): call 0x297(%rip)
189e(2): test %al,%al
18a0(2): jnz 0xffffff8d(%rip)
18a2(3): mov %r14,%rsi
18a5(5): mov $0x4,%edi
18aa(5): call 0x2346(%rip)
18af(7): lea 0x5529(%rip),%rsi
18b6(5): mov $0x5,%edx
18bb(2): xor %edi,%edi
18bd(3): mov %rax,%r12
18c0(5): call 0xfffffbd0(%rip)
18c5(4): mov 0x0(%r13),%esi
18c9(3): mov %r12,%rcx
18cc(3): mov %rax,%rdx
18cf(2): xor %edi,%edi
18d1(2): xor %eax,%eax
18d3(3): xor %r12d,%r12d
18d6(5): call 0xfffffd6a(%rip)
18db(5): jmp 0xffffff52(%rip)
18e0(3): mov %r14,%rdi
18e3(5): call 0x88d(%rip)
18e8(8): nop 0x0(%rax,%rax,1)
18f0(5): mov $0x2f,%esi
18f5(3): mov %r14,%rdi
18f8(5): call 0xfffffc18(%rip)
18fd(3): test %rax,%rax
1900(6): jz 0x85(%rip)
1906(3): cmp %rax,%r14
1909(2): jb 0x10(%rip)
190b(2): jmp 0x13(%rip)
190d(3): nop (%rax)
1910(4): sub $0x1,%rax
1914(3): cmp %rax,%r14
1917(2): jz 0x7(%rip)
1919(3): cmp $0x2f,(%rax)
191c(2): jz 0xfffffff4(%rip)
191e(7): cmp $0x0,0x208784(%rip)
1925(4): mov $0x0,0x1(%rax)
1929(2): jnz 0x64(%rip)
192b(3): mov %r14,%rdi
192e(5): call 0xfffffb52(%rip)
1933(2): test %eax,%eax
1935(2): jz 0xffffffbb(%rip)
1937(5): call 0xfffffad9(%rip)
193c(2): mov (%rax),%edi
193e(3): mov %r14,%rsi
1941(3): mov %rax,%r15
1944(5): call 0x1ec(%rip)
1949(2): test %al,%al
194b(2): jnz 0x3a(%rip)
194d(3): mov %r14,%rsi
1950(5): mov $0x4,%edi
1955(5): call 0x229b(%rip)
195a(7): lea 0x5492(%rip),%rsi
1961(5): mov $0x5,%edx
1966(2): xor %edi,%edi
1968(3): mov %rax,%r13
196b(5): call 0xfffffb25(%rip)
1970(3): mov (%r15),%esi
1973(3): mov %r13,%rcx
1976(3): mov %rax,%rdx
1979(2): xor %edi,%edi
197b(2): xor %eax,%eax
197d(3): xor %r13d,%r13d
1980(5): call 0xfffffcc0(%rip)
1985(3): and %r13d,%r12d
1988(5): jmp 0xfffffea5(%rip)
198d(3): mov %r14,%rsi
1990(5): mov $0x4,%edi
1995(5): call 0x225b(%rip)
199a(7): lea 0x5427(%rip),%rsi
19a1(2): xor %edi,%edi
19a3(5): mov $0x5,%edx
19a8(3): mov %rax,%r15
19ab(5): call 0xfffffae5(%rip)
19b0(7): mov 0x2086d1(%rip),%rdi
19b7(3): mov %rax,%rsi
19ba(3): mov %r15,%rdx
19bd(2): xor %eax,%eax
19bf(5): call 0x5c1(%rip)
19c4(5): jmp 0xffffff67(%rip)
19c9(4): xor $0x1,%r12d
19cd(1): pop %rdx
19ce(4): movzx %r12b,%eax
19d2(1): pop %rbx
19d3(1): pop %rbp
19d4(2): pop %r12
19d6(2): pop %r13
19d8(2): pop %r14
19da(2): pop %r15
19dc(1): ret near (%rsp)
19dd(5): cmp $0xffffff7e,%eax
19e2(2): jnz 0x2a(%rip)
19e4(2): xor %edi,%edi
19e6(5): call 0x22a(%rip)
19eb(7): lea 0x53c6(%rip),%rsi
19f2(5): mov $0x5,%edx
19f7(2): xor %edi,%edi
19f9(5): call 0xfffffa97(%rip)
19fe(2): xor %esi,%esi
1a00(3): mov %rax,%rdx
1a03(2): xor %edi,%edi
1a05(2): xor %eax,%eax
1a07(5): call 0xfffffc39(%rip)
1a0c(5): mov $0x1,%edi
1a11(5): call 0x1ff(%rip)

"_start" :
1a20(2): xor %ebp,%ebp
1a22(3): mov %rdx,%r9
1a25(1): pop %rsi
1a26(3): mov %rsp,%rdx
1a29(4): and $0xfffffff0,%rsp
1a2d(1): push %rax
1a2e(1): push %rsp
1a2f(7): lea 0x526a(%rip),%r8
1a36(7): lea 0x51f3(%rip),%rcx
1a3d(7): lea 0xfffffcac(%rip),%rdi
1a44(6): call 0x20857e(%rip)
1a4a(1): hlt 

"deregister_tm_clones" :
1a50(7): lea 0x208629(%rip),%rdi
1a57(1): push %rbp
1a58(7): lea 0x208621(%rip),%rax
1a5f(3): cmp %rdi,%rax
1a62(3): mov %rsp,%rbp
1a65(2): jz 0x1b(%rip)
1a67(7): mov 0x208552(%rip),%rax
1a6e(3): test %rax,%rax
1a71(2): jz 0xf(%rip)
1a73(1): pop %rbp
1a74(2): jmp %rax
1a76(a): nop 0x0(%rax,%rax,1)
1a80(1): pop %rbp
1a81(1): ret near (%rsp)

"register_tm_clones" :
1a90(7): lea 0x2085e9(%rip),%rdi
1a97(7): lea 0x2085e2(%rip),%rsi
1a9e(1): push %rbp
1a9f(3): sub %rdi,%rsi
1aa2(3): mov %rsp,%rbp
1aa5(4): sar $0x3,%rsi
1aa9(3): mov %rsi,%rax
1aac(4): shr $0x3f,%rax
1ab0(3): add %rax,%rsi
1ab3(3): sar $0x1,%rsi
1ab6(2): jz 0x1a(%rip)
1ab8(7): mov 0x208519(%rip),%rax
1abf(3): test %rax,%rax
1ac2(2): jz 0xe(%rip)
1ac4(1): pop %rbp
1ac5(2): jmp %rax
1ac7(9): nop 0x0(%rax,%rax,1)
1ad0(1): pop %rbp
1ad1(1): ret near (%rsp)

"__do_global_dtors_aux" :
1ae0(7): cmp $0x0,0x2085c1(%rip)
1ae7(2): jnz 0x31(%rip)
1ae9(8): cmp $0x0,0x2084ef(%rip)
1af1(1): push %rbp
1af2(3): mov %rsp,%rbp
1af5(2): jz 0xe(%rip)
1af7(7): mov 0x20850a(%rip),%rdi
1afe(5): call 0xfffffbe2(%rip)
1b03(5): call 0xffffff4d(%rip)
1b08(7): mov $0x1,0x208599(%rip)
1b0f(1): pop %rbp
1b10(1): ret near (%rsp)
1b11(7): nop 0x0(%rax)
1b18(2): REP ret near (%rsp)

"frame_dummy" :
1b20(1): push %rbp
1b21(3): mov %rsp,%rbp
1b24(1): pop %rbp
1b25(5): jmp 0xffffff6b(%rip)

"ignorable_failure" :
1b30(7): cmp $0x0,0x208573(%rip)
1b37(2): push %r12
1b39(1): push %rbp
1b3a(1): push %rbx
1b3b(6): jz 0xa5(%rip)
1b41(3): cmp $0x11,%edi
1b44(3): setz %bl
1b47(3): cmp $0x27,%edi
1b4a(3): setz %al
1b4d(2): or %al,%bl
1b4f(6): jnz 0x8a(%rip)
1b55(3): cmp $0x1e,%edi
1b58(6): jnbe 0x88(%rip)
1b5e(5): mov $0x1,%eax
1b63(2): mov %edi,%ecx
1b65(3): shl/sal %cl,%rax
1b68(5): test $0x40032002,%eax
1b6d(2): jz 0x73(%rip)
1b6f(2): xor %eax,%eax
1b71(5): mov $0x30900,%edx
1b76(5): mov $0xffffff9c,%edi
1b7b(5): call 0xfffff945(%rip)
1b80(2): test %eax,%eax
1b82(3): mov %eax,%r12d
1b85(2): js 0x5b(%rip)
1b87(2): mov %eax,%edi
1b89(5): call 0xfffffad7(%rip)
1b8e(3): test %rax,%rax
1b91(3): mov %rax,%rbp
1b94(2): jz 0x55(%rip)
1b96(5): call 0xfffff87a(%rip)
1b9b(3): mov %rax,%r12
1b9e(6): mov $0x0,(%rax)
1ba4(4): nop 0x0(%rax)
1ba8(3): mov %rbp,%rdi
1bab(5): call 0xfffffa05(%rip)
1bb0(3): test %rax,%rax
1bb3(2): jz 0x40(%rip)
1bb5(4): cmp $0x2e,0x13(%rax)
1bb9(2): jnz 0x18(%rip)
1bbb(2): xor %edx,%edx
1bbd(4): cmp $0x2e,0x14(%rax)
1bc1(3): setz %dl
1bc4(5): movzx 0x14(%rax,%rdx,1),%eax
1bc9(2): test %al,%al
1bcb(2): jz 0xffffffdd(%rip)
1bcd(2): cmp $0x2f,%al
1bcf(2): jz 0xffffffd9(%rip)
1bd1(3): mov %rbp,%rdi
1bd4(5): call 0xfffff97c(%rip)
1bd9(2): mov %ebx,%eax
1bdb(1): pop %rbx
1bdc(1): pop %rbp
1bdd(2): pop %r12
1bdf(1): ret near (%rsp)
1be0(2): xor %ebx,%ebx
1be2(2): mov %ebx,%eax
1be4(1): pop %rbx
1be5(1): pop %rbp
1be6(2): pop %r12
1be8(1): ret near (%rsp)
1be9(3): mov %r12d,%edi
1bec(5): call 0xfffff954(%rip)
1bf1(2): jmp 0xffffffe8(%rip)
1bf3(4): mov (%r12),%ebx
1bf7(3): mov %rbp,%rdi
1bfa(5): call 0xfffff956(%rip)
1bff(2): test %ebx,%ebx
1c01(3): setz %bl
1c04(2): jmp 0xffffffd5(%rip)

"usage" :
1c10(2): push %r13
1c12(2): push %r12
1c14(5): mov $0x5,%edx
1c19(1): push %rbp
1c1a(1): push %rbx
1c1b(2): mov %edi,%ebp
1c1d(7): sub $0x88,%rsp
1c24(7): mov 0x208495(%rip),%rbx
1c2b(9): mov $0x28,%rax
1c34(5): mov %rax,0x78(%rsp)
1c39(2): xor %eax,%eax
1c3b(2): test %edi,%edi
1c3d(2): jz 0x30(%rip)
1c3f(7): lea 0x520a(%rip),%rsi
1c46(2): xor %edi,%edi
1c48(5): call 0xfffff848(%rip)
1c4d(7): mov 0x20844c(%rip),%rdi
1c54(3): mov %rax,%rdx
1c57(3): mov %rbx,%rcx
1c5a(5): mov $0x1,%esi
1c5f(2): xor %eax,%eax
1c61(5): call 0xfffffa3f(%rip)
1c66(2): mov %ebp,%edi
1c68(5): call 0xfffffa18(%rip)
1c6d(7): lea 0x5204(%rip),%rsi
1c74(2): xor %edi,%edi
1c76(5): call 0xfffff81a(%rip)
1c7b(3): mov %rbx,%rdx
1c7e(3): mov %rax,%rsi
1c81(5): mov $0x1,%edi
1c86(2): xor %eax,%eax
1c88(5): call 0xfffff9a8(%rip)
1c8d(7): mov 0x2083f4(%rip),%rbx
1c94(7): lea 0x5205(%rip),%rsi
1c9b(5): mov $0x5,%edx
1ca0(2): xor %edi,%edi
1ca2(5): call 0xfffff7ee(%rip)
1ca7(3): mov %rbx,%rsi
1caa(3): mov %rax,%rdi
1cad(5): call 0xfffff8c3(%rip)
1cb2(7): mov 0x2083cf(%rip),%rbx
1cb9(7): lea 0x52a0(%rip),%rsi
1cc0(5): mov $0x5,%edx
1cc5(2): xor %edi,%edi
1cc7(5): call 0xfffff7c9(%rip)
1ccc(3): mov %rbx,%rsi
1ccf(3): mov %rax,%rdi
1cd2(5): call 0xfffff89e(%rip)
1cd7(7): mov 0x2083aa(%rip),%rbx
1cde(7): lea 0x5343(%rip),%rsi
1ce5(5): mov $0x5,%edx
1cea(2): xor %edi,%edi
1cec(5): call 0xfffff7a4(%rip)
1cf1(3): mov %rbx,%rsi
1cf4(3): mov %rax,%rdi
1cf7(5): call 0xfffff879(%rip)
1cfc(7): mov 0x208385(%rip),%rbx
1d03(7): lea 0x534e(%rip),%rsi
1d0a(5): mov $0x5,%edx
1d0f(2): xor %edi,%edi
1d11(5): call 0xfffff77f(%rip)
1d16(3): mov %rbx,%rsi
1d19(3): mov %rax,%rdi
1d1c(7): lea 0x4fc1(%rip),%rbx
1d23(5): call 0xfffff84d(%rip)
1d28(7): lea 0x4fbb(%rip),%rax
1d2f(7): lea 0x4ff5(%rip),%rcx
1d36(9): mov $0x0,0x60(%rsp)
1d3f(9): mov $0x0,0x68(%rsp)
1d48(3): mov %rsp,%rdx
1d4b(4): mov %rax,(%rsp)
1d4f(7): lea 0x4f96(%rip),%rax
1d56(5): mov %rcx,0x30(%rsp)
1d5b(7): lea 0x4fd3(%rip),%rcx
1d62(5): mov %rax,0x8(%rsp)
1d67(7): lea 0x4ff6(%rip),%rax
1d6e(5): mov %rcx,0x40(%rsp)
1d73(7): lea 0x4fc5(%rip),%rcx
1d7a(5): mov %rax,0x10(%rsp)
1d7f(7): lea 0x4f76(%rip),%rax
1d86(5): mov %rcx,0x50(%rsp)
1d8b(5): mov %rax,0x18(%rsp)
1d90(7): lea 0x4f7b(%rip),%rax
1d97(5): mov %rax,0x20(%rsp)
1d9c(7): lea 0x4f79(%rip),%rax
1da3(5): mov %rax,0x28(%rsp)
1da8(5): mov %rax,0x38(%rsp)
1dad(5): mov %rax,0x48(%rsp)
1db2(5): mov %rax,0x58(%rsp)
1db7(9): nop 0x0(%rax,%rax,1)
1dc0(4): add $0x10,%rdx
1dc4(3): mov (%rdx),%rdi
1dc7(3): test %rdi,%rdi
1dca(2): jz 0x15(%rip)
1dcc(5): mov $0x6,%ecx
1dd1(3): mov %rbx,%rsi
1dd4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1dd6(3): setnbe %al
1dd9(2): sbb $0x0,%al
1ddb(2): test %al,%al
1ddd(2): jnz 0xffffffe3(%rip)
1ddf(4): mov 0x8(%rdx),%r12
1de3(2): xor %edi,%edi
1de5(5): mov $0x5,%edx
1dea(7): lea 0x4f58(%rip),%rsi
1df1(3): test %r12,%r12
1df4(6): jz 0xc7(%rip)
1dfa(5): call 0xfffff696(%rip)
1dff(7): lea 0x528a(%rip),%rcx
1e06(7): lea 0x4f53(%rip),%rdx
1e0d(3): mov %rax,%rsi
1e10(5): mov $0x1,%edi
1e15(2): xor %eax,%eax
1e17(5): call 0xfffff819(%rip)
1e1c(2): xor %esi,%esi
1e1e(5): mov $0x5,%edi
1e23(5): call 0xfffff7fd(%rip)
1e28(3): test %rax,%rax
1e2b(2): jz 0x1e(%rip)
1e2d(7): lea 0x4f3a(%rip),%rsi
1e34(5): mov $0x3,%edx
1e39(3): mov %rax,%rdi
1e3c(5): call 0xfffff5e4(%rip)
1e41(2): test %eax,%eax
1e43(6): jnz 0x10d(%rip)
1e49(7): lea 0x4f22(%rip),%rsi
1e50(2): xor %edi,%edi
1e52(5): mov $0x5,%edx
1e57(5): call 0xfffff639(%rip)
1e5c(7): lea 0x4e81(%rip),%rcx
1e63(7): lea 0x5226(%rip),%rdx
1e6a(3): mov %rax,%rsi
1e6d(5): mov $0x1,%edi
1e72(2): xor %eax,%eax
1e74(5): call 0xfffff7bc(%rip)
1e79(3): cmp %rbx,%r12
1e7c(7): lea 0x4e83(%rip),%rcx
1e83(7): lea 0x5837(%rip),%rbx
1e8a(4): cmove %rcx,%rbx
1e8e(7): lea 0x526b(%rip),%rsi
1e95(2): xor %edi,%edi
1e97(5): mov $0x5,%edx
1e9c(5): call 0xfffff5f4(%rip)
1ea1(3): mov %rbx,%rcx
1ea4(3): mov %rax,%rsi
1ea7(3): mov %r12,%rdx
1eaa(5): mov $0x1,%edi
1eaf(2): xor %eax,%eax
1eb1(5): call 0xfffff77f(%rip)
1eb6(5): jmp 0xfffffdb0(%rip)
1ebb(5): call 0xfffff5d5(%rip)
1ec0(7): lea 0x51c9(%rip),%rcx
1ec7(7): lea 0x4e92(%rip),%rdx
1ece(3): mov %rax,%rsi
1ed1(5): mov $0x1,%edi
1ed6(2): xor %eax,%eax
1ed8(5): call 0xfffff758(%rip)
1edd(2): xor %esi,%esi
1edf(5): mov $0x5,%edi
1ee4(5): call 0xfffff73c(%rip)
1ee9(3): test %rax,%rax
1eec(2): jz 0x1a(%rip)
1eee(7): lea 0x4e79(%rip),%rsi
1ef5(5): mov $0x3,%edx
1efa(3): mov %rax,%rdi
1efd(5): call 0xfffff523(%rip)
1f02(2): test %eax,%eax
1f04(2): jnz 0x45(%rip)
1f06(7): lea 0x4e65(%rip),%rsi
1f0d(5): mov $0x5,%edx
1f12(2): xor %edi,%edi
1f14(7): lea 0x4dc9(%rip),%r12
1f1b(7): lea 0x4de4(%rip),%rbx
1f22(5): call 0xfffff56e(%rip)
1f27(7): lea 0x4db6(%rip),%rcx
1f2e(7): lea 0x515b(%rip),%rdx
1f35(3): mov %rax,%rsi
1f38(5): mov $0x1,%edi
1f3d(2): xor %eax,%eax
1f3f(5): call 0xfffff6f1(%rip)
1f44(5): jmp 0xffffff4a(%rip)
1f49(7): lea 0x4d94(%rip),%r12
1f50(7): mov 0x208131(%rip),%r13
1f57(7): lea 0x515a(%rip),%rsi
1f5e(2): xor %edi,%edi
1f60(5): mov $0x5,%edx
1f65(5): call 0xfffff52b(%rip)
1f6a(3): mov %r13,%rsi
1f6d(3): mov %rax,%rdi
1f70(5): call 0xfffff600(%rip)
1f75(5): jmp 0xfffffed4(%rip)

"prog_fprintf" :
1f80(1): push %rbp
1f81(1): push %rbx
1f82(3): mov %rsi,%rbp
1f85(3): mov %rdi,%rbx
1f88(7): sub $0xd8,%rsp
1f8f(2): test %al,%al
1f91(5): mov %rdx,0x30(%rsp)
1f96(5): mov %rcx,0x38(%rsp)
1f9b(5): mov %r8,0x40(%rsp)
1fa0(5): mov %r9,0x48(%rsp)
1fa5(2): jz 0x39(%rip)
1fa7(5): movaps %xmm0,0x50(%rsp)
1fac(5): movaps %xmm1,0x60(%rsp)
1fb1(5): movaps %xmm2,0x70(%rsp)
1fb6(8): movaps %xmm3,0x80(%rsp)
1fbe(8): movaps %xmm4,0x90(%rsp)
1fc6(8): movaps %xmm5,0xa0(%rsp)
1fce(8): movaps %xmm6,0xb0(%rsp)
1fd6(8): movaps %xmm7,0xc0(%rsp)
1fde(3): mov %rbx,%rsi
1fe1(9): mov $0x28,%rax
1fea(5): mov %rax,0x18(%rsp)
1fef(2): xor %eax,%eax
1ff1(7): mov 0x2080c8(%rip),%rdi
1ff8(5): call 0xfffff578(%rip)
1ffd(7): lea 0x512f(%rip),%rdi
2004(3): mov %rbx,%rcx
2007(5): mov $0x2,%edx
200c(5): mov $0x1,%esi
2011(5): call 0xfffff5ef(%rip)
2016(8): lea 0xf0(%rsp),%rax
201e(3): mov %rsp,%rdx
2021(3): mov %rbp,%rsi
2024(3): mov %rbx,%rdi
2027(7): mov $0x10,(%rsp)
202e(8): mov $0x30,0x4(%rsp)
2036(5): mov %rax,0x8(%rsp)
203b(5): lea 0x20(%rsp),%rax
2040(5): mov %rax,0x10(%rsp)
2045(5): call 0x27db(%rip)
204a(4): mov 0x28(%rbx),%rax
204e(4): cmp 0x30(%rbx),%rax
2052(2): jnb 0x2e(%rip)
2054(4): lea 0x1(%rax),%rdx
2058(4): mov %rdx,0x28(%rbx)
205c(3): mov $0xa,(%rax)
205f(5): mov 0x18(%rsp),%rax
2064(9): xor $0x28,%rax
206d(2): jnz 0x22(%rip)
206f(7): add $0xd8,%rsp
2076(1): pop %rbx
2077(1): pop %rbp
2078(1): ret near (%rsp)
2079(7): nop 0x0(%rax)
2080(5): mov $0xa,%esi
2085(3): mov %rbx,%rdi
2088(5): call 0xfffff478(%rip)
208d(2): jmp 0xffffffd2(%rip)
208f(5): call 0xfffff441(%rip)

"close_stdout_set_file_name" :
20a0(7): mov %rdi,0x208011(%rip)
20a7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
20b0(7): mov %dil,0x207ff9(%rip)
20b7(1): ret near (%rsp)

"close_stdout" :
20c0(1): push %rbp
20c1(1): push %rbx
20c2(4): sub $0x8,%rsp
20c6(7): mov 0x207fbb(%rip),%rdi
20cd(5): call 0x2853(%rip)
20d2(2): test %eax,%eax
20d4(2): jz 0x18(%rip)
20d6(5): call 0xfffff33a(%rip)
20db(7): cmp $0x0,0x207fce(%rip)
20e2(3): mov %rax,%rbx
20e5(2): jz 0x1e(%rip)
20e7(3): cmp $0x20,(%rax)
20ea(2): jnz 0x19(%rip)
20ec(7): mov 0x207fad(%rip),%rdi
20f3(5): call 0x282d(%rip)
20f8(2): test %eax,%eax
20fa(2): jnz 0x48(%rip)
20fc(4): add $0x8,%rsp
2100(1): pop %rbx
2101(1): pop %rbp
2102(1): ret near (%rsp)
2103(7): lea 0x5031(%rip),%rsi
210a(2): xor %edi,%edi
210c(5): mov $0x5,%edx
2111(5): call 0xfffff37f(%rip)
2116(7): mov 0x207f9b(%rip),%rdi
211d(3): mov %rax,%rbp
2120(3): test %rdi,%rdi
2123(2): jz 0x2a(%rip)
2125(5): call 0x1b9b(%rip)
212a(2): mov (%rbx),%esi
212c(7): lea 0x5014(%rip),%rdx
2133(3): mov %rax,%rcx
2136(3): mov %rbp,%r8
2139(2): xor %edi,%edi
213b(2): xor %eax,%eax
213d(5): call 0xfffff503(%rip)
2142(6): mov 0x207ed0(%rip),%edi
2148(5): call 0xfffff2e8(%rip)
214d(2): mov (%rbx),%esi
214f(7): lea 0x4c86(%rip),%rdx
2156(3): mov %rax,%rcx
2159(2): xor %edi,%edi
215b(2): xor %eax,%eax
215d(5): call 0xfffff4e3(%rip)
2162(2): jmp 0xffffffe0(%rip)

"strip_trailing_slashes" :
2170(1): push %rbp
2171(1): push %rbx
2172(3): mov %rdi,%rbp
2175(4): sub $0x8,%rsp
2179(5): call 0x2827(%rip)
217e(3): cmp $0x0,(%rax)
2181(3): mov %rax,%rbx
2184(4): cmove %rbp,%rbx
2188(3): mov %rbx,%rdi
218b(5): call 0x2875(%rip)
2190(3): add %rax,%rbx
2193(3): cmp $0x0,(%rbx)
2196(3): mov $0x0,(%rbx)
2199(3): setnz %al
219c(4): add $0x8,%rsp
21a0(1): pop %rbx
21a1(1): pop %rbp
21a2(1): ret near (%rsp)

"set_program_name" :
21b0(3): test %rdi,%rdi
21b3(1): push %rbx
21b4(2): jz 0x79(%rip)
21b6(5): mov $0x2f,%esi
21bb(3): mov %rdi,%rbx
21be(5): call 0xfffff352(%rip)
21c3(3): test %rax,%rax
21c6(2): jz 0x57(%rip)
21c8(4): lea 0x1(%rax),%r8
21cc(3): mov %r8,%rdx
21cf(3): sub %rbx,%rdx
21d2(4): cmp $0x6,%rdx
21d6(2): jle 0x47(%rip)
21d8(4): lea 0xfffffffa(%rax),%rsi
21dc(7): lea 0x4fa5(%rip),%rdi
21e3(5): mov $0x7,%ecx
21e8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
21ea(3): setnbe %dl
21ed(3): sbb $0x0,%dl
21f0(2): test %dl,%dl
21f2(2): jnz 0x2b(%rip)
21f4(7): lea 0x4f95(%rip),%rdi
21fb(5): mov $0x3,%ecx
2200(3): mov %r8,%rsi
2203(3): mov %r8,%rbx
2206(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2208(3): setnbe %dl
220b(3): sbb $0x0,%dl
220e(2): test %dl,%dl
2210(2): jnz 0xd(%rip)
2212(4): lea 0x4(%rax),%rbx
2216(7): mov %rbx,0x207e63(%rip)
221d(7): mov %rbx,0x207e9c(%rip)
2224(7): mov %rbx,0x207e6d(%rip)
222b(1): pop %rbx
222c(1): ret near (%rsp)
222d(7): mov 0x207e6c(%rip),%rcx
2234(7): lea 0x4f15(%rip),%rdi
223b(5): mov $0x37,%edx
2240(5): mov $0x1,%esi
2245(5): call 0xfffff44b(%rip)
224a(5): call 0xfffff1b6(%rip)

"gettext_quote.part.1" :
2250(1): push %rbp
2251(1): push %rbx
2252(3): mov %rdi,%rbp
2255(2): mov %esi,%ebx
2257(4): sub $0x8,%rsp
225b(5): call 0x2855(%rip)
2260(3): movzx (%rax),%edx
2263(3): and $0xdf,%edx
2266(3): cmp $0x55,%dl
2269(2): jz 0x77(%rip)
226b(3): cmp $0x47,%dl
226e(2): jz 0x22(%rip)
2270(7): lea 0x4f2c(%rip),%rax
2277(7): lea 0x4f27(%rip),%rdx
227e(3): cmp $0x9,%ebx
2281(4): cmovne %rdx,%rax
2285(4): add $0x8,%rsp
2289(1): pop %rbx
228a(1): pop %rbp
228b(1): ret near (%rsp)
228c(4): nop 0x0(%rax)
2290(4): movzx 0x1(%rax),%edx
2294(3): and $0xdf,%edx
2297(3): cmp $0x42,%dl
229a(2): jnz 0xffffffd6(%rip)
229c(4): cmp $0x31,0x2(%rax)
22a0(2): jnz 0xffffffd0(%rip)
22a2(4): cmp $0x38,0x3(%rax)
22a6(2): jnz 0xffffffca(%rip)
22a8(4): cmp $0x30,0x4(%rax)
22ac(2): jnz 0xffffffc4(%rip)
22ae(4): cmp $0x33,0x5(%rax)
22b2(2): jnz 0xffffffbe(%rip)
22b4(4): cmp $0x30,0x6(%rax)
22b8(2): jnz 0xffffffb8(%rip)
22ba(4): cmp $0x0,0x7(%rax)
22be(2): jnz 0xffffffb2(%rip)
22c0(4): cmp $0x60,0x0(%rbp)
22c4(7): lea 0x4ed1(%rip),%rax
22cb(7): lea 0x4ece(%rip),%rdx
22d2(4): cmovne %rdx,%rax
22d6(4): add $0x8,%rsp
22da(1): pop %rbx
22db(1): pop %rbp
22dc(1): ret near (%rsp)
22dd(3): nop (%rax)
22e0(4): movzx 0x1(%rax),%edx
22e4(3): and $0xdf,%edx
22e7(3): cmp $0x54,%dl
22ea(2): jnz 0xffffff86(%rip)
22ec(4): movzx 0x2(%rax),%edx
22f0(3): and $0xdf,%edx
22f3(3): cmp $0x46,%dl
22f6(6): jnz 0xffffff7a(%rip)
22fc(4): cmp $0x2d,0x3(%rax)
2300(6): jnz 0xffffff70(%rip)
2306(4): cmp $0x38,0x4(%rax)
230a(6): jnz 0xffffff66(%rip)
2310(4): cmp $0x0,0x5(%rax)
2314(6): jnz 0xffffff5c(%rip)
231a(4): cmp $0x60,0x0(%rbp)
231e(7): lea 0x4e6f(%rip),%rax
2325(7): lea 0x4e6c(%rip),%rdx
232c(4): cmovne %rdx,%rax
2330(4): add $0x8,%rsp
2334(1): pop %rbx
2335(1): pop %rbp
2336(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2340(2): push %r15
2342(2): push %r14
2344(3): mov %r8d,%r15d
2347(2): push %r13
2349(2): push %r12
234b(3): mov %rdi,%r14
234e(1): push %rbp
234f(1): push %rbx
2350(3): mov %r9d,%ebx
2353(3): mov %rsi,%r13
2356(3): mov %rcx,%rbp
2359(3): and $0x2,%ebx
235c(7): sub $0xb8,%rsp
2363(8): mov 0xf0(%rsp),%rax
236b(5): mov %rdx,0x10(%rsp)
2370(5): mov %r8d,0x8(%rsp)
2375(5): mov %r9d,0x78(%rsp)
237a(5): mov %rax,0x20(%rsp)
237f(8): mov 0xf8(%rsp),%rax
2387(5): mov %rax,0x68(%rsp)
238c(8): mov 0x100(%rsp),%rax
2394(5): mov %rax,0x60(%rsp)
2399(9): mov $0x28,%rax
23a2(8): mov %rax,0xa8(%rsp)
23aa(2): xor %eax,%eax
23ac(5): call 0xfffff0f4(%rip)
23b1(4): cmp $0xa,%r15d
23b5(5): mov %rax,0x58(%rsp)
23ba(6): jnbe 0x11b5(%rip)
23c0(7): lea 0x4e39(%rip),%rcx
23c7(3): mov %r15d,%edx
23ca(4): movsxd 0x0(%rcx,%rdx,4),%rax
23ce(3): add %rcx,%rax
23d1(2): jmp %rax
23d3(5): mov $0x1,0xe(%rsp)
23d8(5): mov $0x0,0x7c(%rsp)
23dd(3): xor %r12d,%r12d
23e0(9): mov $0x0,0x50(%rsp)
23e9(5): mov $0x1,0xf(%rsp)
23ee(5): mov $0x0,0xd(%rsp)
23f3(7): lea 0x4dab(%rip),%rax
23fa(9): mov $0x1,0x18(%rsp)
2403(3): xor %r15d,%r15d
2406(8): mov $0x2,0x8(%rsp)
240e(5): mov %rax,0x48(%rsp)
2413(3): xor %r11d,%r11d
2416(3): mov %rbp,%rax
2419(3): mov %r12d,%r8d
241c(3): mov %r11,%rbp
241f(3): mov %rax,%r11
2422(6): nop 0x0(%rax,%rax,1)
2428(3): cmp %rbp,%r11
242b(4): setnz %r12b
242f(4): cmp $0xffffffff,%r11
2433(2): jnz 0xf(%rip)
2435(5): mov 0x10(%rsp),%rax
243a(4): cmp $0x0,0x0(%rax,%rbp,1)
243e(4): setnz %r12b
2442(3): test %r12b,%r12b
2445(6): jz 0x65b(%rip)
244b(5): cmp $0x2,0x8(%rsp)
2450(5): mov 0x10(%rsp),%rdi
2455(4): lea 0x0(%rdi,%rbp,1),%r9
2459(3): setnz %al
245c(4): and 0xd(%rsp),%al
2460(3): mov %eax,%r10d
2463(6): jz 0xad(%rip)
2469(5): mov 0x18(%rsp),%rax
246e(3): test %rax,%rax
2471(6): jz 0x42f(%rip)
2477(4): cmp $0xffffffff,%r11
247b(5): lea 0x0(%rbp,%rax,1),%rbx
2480(2): jnz 0x30(%rip)
2482(4): cmp $0x1,%rax
2486(2): jbe 0x2a(%rip)
2488(5): mov %r8b,0x38(%rsp)
248d(5): mov %r10b,0x30(%rsp)
2492(5): mov %r9,0x28(%rsp)
2497(5): call 0xfffff019(%rip)
249c(6): movzx 0x38(%rsp),%r8d
24a2(6): movzx 0x30(%rsp),%r10d
24a8(3): mov %rax,%r11
24ab(5): mov 0x28(%rsp),%r9
24b0(3): cmp %r11,%rbx
24b3(5): mov %r10b,0x28(%rsp)
24b8(6): jnbe 0x5b8(%rip)
24be(5): mov 0x18(%rsp),%rdx
24c3(5): mov 0x48(%rsp),%rsi
24c8(3): mov %r9,%rdi
24cb(5): mov %r11,0x40(%rsp)
24d0(5): mov %r8b,0x38(%rsp)
24d5(5): mov %r9,0x30(%rsp)
24da(5): call 0xfffff086(%rip)
24df(2): test %eax,%eax
24e1(5): mov 0x30(%rsp),%r9
24e6(6): movzx 0x38(%rsp),%r8d
24ec(5): mov 0x40(%rsp),%r11
24f1(6): jnz 0x57f(%rip)
24f7(5): cmp $0x0,0xf(%rsp)
24fc(6): movzx 0x28(%rsp),%r10d
2502(6): jnz 0xf83(%rip)
2508(8): nop 0x0(%rax,%rax,1)
2510(4): movzx (%r9),%ebx
2514(3): cmp $0x7e,%bl
2517(6): jnbe 0x321(%rip)
251d(7): lea 0x4d08(%rip),%rcx
2524(3): movzx %bl,%edx
2527(4): movsxd 0x0(%rcx,%rdx,4),%rax
252b(3): add %rcx,%rax
252e(2): jmp %rax
2530(3): xor %r10d,%r10d
2533(4): cmp $0x1,%r11
2537(3): setnz %al
253a(4): cmp $0xffffffff,%r11
253e(2): jnz 0xe(%rip)
2540(5): mov 0x10(%rsp),%rax
2545(4): cmp $0x0,0x1(%rax)
2549(3): setnz %al
254c(5): cmp $0x2,0x8(%rsp)
2551(3): setz %dl
2554(2): test %al,%al
2556(6): jz 0x252(%rip)
255c(3): xor %r12d,%r12d
255f(2): xor %eax,%eax
2561(7): nop 0x0(%rax)
2568(5): cmp $0x1,0xd(%rsp)
256d(6): jnz 0x115(%rip)
2573(2): test %dl,%dl
2575(6): jnz 0x10d(%rip)
257b(5): mov 0x20(%rsp),%rsi
2580(3): test %rsi,%rsi
2583(2): jz 0x16(%rip)
2585(2): mov %ebx,%edx
2587(3): shr $0x5,%dl
258a(3): movzx %dl,%edx
258d(3): mov 0x0(%rsi,%rdx,4),%edx
2590(3): bt %ebx,%edx
2593(6): jb 0x150(%rip)
2599(3): test %r10b,%r10b
259c(6): jnz 0x147(%rip)
25a2(3): xor $0x1,%eax
25a5(4): add $0x1,%rbp
25a9(3): and %r8d,%eax
25ac(2): test %al,%al
25ae(2): jz 0x22(%rip)
25b0(3): cmp %r15,%r13
25b3(2): jbe 0x7(%rip)
25b5(5): mov $0x27,0x0(%r14,%r15,1)
25ba(4): lea 0x1(%r15),%rax
25be(3): cmp %rax,%r13
25c1(2): jbe 0x8(%rip)
25c3(6): mov $0x27,0x1(%r14,%r15,1)
25c9(4): add $0x2,%r15
25cd(3): xor %r8d,%r8d
25d0(3): cmp %r13,%r15
25d3(2): jnb 0x6(%rip)
25d5(4): mov %bl,0x0(%r14,%r15,1)
25d9(5): movzx 0xe(%rsp),%edi
25de(4): add $0x1,%r15
25e2(5): mov $0x0,%eax
25e7(3): test %r12b,%r12b
25ea(3): cmove %eax,%edi
25ed(5): mov %dil,0xe(%rsp)
25f2(5): jmp 0xfffffe36(%rip)
25f7(9): nop 0x0(%rax,%rax,1)
2600(3): xor %r10d,%r10d
2603(4): mov 0x8(%rsp),%eax
2607(3): cmp $0x2,%eax
260a(6): jz 0x5be(%rip)
2610(3): cmp $0x5,%eax
2613(6): jz 0x575(%rip)
2619(3): cmp $0x2,%eax
261c(5): mov $0x3f,%ebx
2621(3): setz %dl
2624(3): xor %r12d,%r12d
2627(2): xor %eax,%eax
2629(5): jmp 0xffffff3f(%rip)
262e(2): nop 
2630(3): xor %r10d,%r10d
2633(5): cmp $0x2,0x8(%rsp)
2638(6): jz 0x508(%rip)
263e(5): mov %r12b,0x7c(%rsp)
2643(2): xor %edx,%edx
2645(2): xor %eax,%eax
2647(5): mov $0x27,%ebx
264c(5): jmp 0xffffff1c(%rip)
2651(7): nop 0x0(%rax)
2658(5): mov $0x9,%edx
265d(5): mov $0x74,%ebx
2662(5): cmp $0x2,0x8(%rsp)
2667(3): setz %al
266a(4): and 0xf(%rsp),%al
266e(6): jnz 0x150(%rip)
2674(5): cmp $0x0,0xd(%rsp)
2679(2): jnz 0x67(%rip)
267b(2): mov %edx,%ebx
267d(3): xor %r12d,%r12d
2680(2): xor %eax,%eax
2682(5): cmp $0x0,0xf(%rsp)
2687(6): jnz 0xfffffef4(%rip)
268d(5): jmp 0xffffff0c(%rip)
2692(6): nop 0x0(%rax,%rax,1)
2698(5): mov $0x8,%edx
269d(5): mov $0x62,%ebx
26a2(2): jmp 0xffffffd2(%rip)
26a4(4): nop 0x0(%rax)
26a8(5): cmp $0x2,0x8(%rsp)
26ad(6): jz 0x3d3(%rip)
26b3(5): cmp $0x0,0xd(%rsp)
26b8(6): jz 0x218(%rip)
26be(5): cmp $0x0,0xf(%rsp)
26c3(6): jz 0x20d(%rip)
26c9(6): cmp $0x0,0x18(%rsp)
26cf(6): jnz 0x3bc(%rip)
26d5(5): mov $0x5c,%ebx
26da(6): nop 0x0(%rax,%rax,1)
26e0(3): xor %r12d,%r12d
26e3(5): cmp $0x2,0x8(%rsp)
26e8(3): setz %dl
26eb(5): cmp $0x0,0xf(%rsp)
26f0(2): mov %edx,%eax
26f2(6): jnz 0x856(%rip)
26f8(3): mov %r8d,%eax
26fb(3): xor $0x1,%eax
26fe(2): and %dl,%al
2700(2): jz 0x31(%rip)
2702(3): cmp %r15,%r13
2705(2): jbe 0x7(%rip)
2707(5): mov $0x27,0x0(%r14,%r15,1)
270c(4): lea 0x1(%r15),%rdx
2710(3): cmp %rdx,%r13
2713(2): jbe 0x8(%rip)
2715(6): mov $0x24,0x1(%r14,%r15,1)
271b(4): lea 0x2(%r15),%rdx
271f(3): cmp %rdx,%r13
2722(2): jbe 0x8(%rip)
2724(6): mov $0x27,0x2(%r14,%r15,1)
272a(4): add $0x3,%r15
272e(3): mov %eax,%r8d
2731(3): cmp %r15,%r13
2734(2): jbe 0x7(%rip)
2736(5): mov $0x5c,0x0(%r14,%r15,1)
273b(4): add $0x1,%r15
273f(4): add $0x1,%rbp
2743(5): jmp 0xfffffe8d(%rip)
2748(8): nop 0x0(%rax,%rax,1)
2750(5): cmp $0x0,0xd(%rsp)
2755(6): jnz 0x1ce(%rip)
275b(2): xor %edx,%edx
275d(5): test $0x1,0x78(%rsp)
2762(6): jz 0xffffff19(%rip)
2768(4): add $0x1,%rbp
276c(5): jmp 0xfffffcbc(%rip)
2771(7): nop 0x0(%rax)
2778(5): cmp $0x2,0x8(%rsp)
277d(3): setz %dl
2780(2): xor %eax,%eax
2782(5): jmp 0xfffffde6(%rip)
2787(9): nop 0x0(%rax,%rax,1)
2790(5): mov $0x7,%edx
2795(5): mov $0x61,%ebx
279a(5): jmp 0xfffffeda(%rip)
279f(1): nop 
27a0(5): cmp $0x2,0x8(%rsp)
27a5(3): setz %dl
27a8(3): test %rbp,%rbp
27ab(6): jnz 0xfffffdb1(%rip)
27b1(5): movzx 0xf(%rsp),%eax
27b6(2): and %dl,%al
27b8(6): jz 0xfffffdb0(%rip)
27be(3): mov %r11,%rbp
27c1(8): mov $0x2,0x8(%rsp)
27c9(5): jmp 0x700(%rip)
27ce(2): nop 
27d0(5): cmp $0x2,0x8(%rsp)
27d5(3): setz %dl
27d8(3): xor %r12d,%r12d
27db(2): jmp 0xffffffd6(%rip)
27dd(3): nop (%rax)
27e0(5): cmp $0x2,0x8(%rsp)
27e5(5): mov $0x20,%ebx
27ea(3): setz %dl
27ed(2): jmp 0xffffffc4(%rip)
27ef(1): nop 
27f0(5): mov $0xd,%edx
27f5(5): mov $0x72,%ebx
27fa(5): jmp 0xfffffe68(%rip)
27ff(1): nop 
2800(5): mov $0xc,%edx
2805(5): mov $0x66,%ebx
280a(5): jmp 0xfffffe6a(%rip)
280f(1): nop 
2810(5): mov $0xb,%edx
2815(5): mov $0x76,%ebx
281a(5): jmp 0xfffffe5a(%rip)
281f(1): nop 
2820(5): mov $0xa,%edx
2825(5): mov $0x6e,%ebx
282a(5): jmp 0xfffffe38(%rip)
282f(1): nop 
2830(3): xor %r10d,%r10d
2833(5): nop 0x0(%rax,%rax,1)
2838(6): cmp $0x1,0x58(%rsp)
283e(6): jnz 0x3aa(%rip)
2844(5): mov %r11,0x38(%rsp)
2849(5): mov %r8b,0x30(%rsp)
284e(5): mov %r10b,0x28(%rsp)
2853(5): call 0xffffee7d(%rip)
2858(3): mov (%rax),%rcx
285b(3): movzx %bl,%edx
285e(6): movzx 0x28(%rsp),%r10d
2864(6): movzx 0x30(%rsp),%r8d
286a(5): mov 0x38(%rsp),%r11
286f(5): mov $0x1,%edi
2874(4): movzx 0x0(%rcx,%rdx,2),%eax
2878(4): and $0x4000,%ax
287c(4): setnz %r12b
2880(3): setz %al
2883(4): and 0xd(%rsp),%al
2887(2): test %al,%al
2889(6): jnz 0x998(%rip)
288f(5): cmp $0x2,0x8(%rsp)
2894(3): setz %dl
2897(5): jmp 0xfffffcd1(%rip)
289c(4): nop 0x0(%rax)
28a0(4): movzx (%r9),%ebx
28a4(3): cmp $0x7e,%bl
28a7(2): jnbe 0xffffff89(%rip)
28a9(7): lea 0x4b78(%rip),%rcx
28b0(3): movzx %bl,%edx
28b3(4): movsxd 0x0(%rcx,%rdx,4),%rax
28b7(3): add %rcx,%rax
28ba(2): jmp %rax
28bc(4): nop 0x0(%rax)
28c0(3): xor %r10d,%r10d
28c3(5): cmp $0x0,0xd(%rsp)
28c8(6): jnz 0xfffffdf6(%rip)
28ce(2): nop 
28d0(5): mov $0x5c,%edx
28d5(5): mov $0x5c,%ebx
28da(5): jmp 0xfffffd9a(%rip)
28df(1): nop 
28e0(5): mov $0xc,%edx
28e5(3): xor %r10d,%r10d
28e8(5): mov $0x66,%ebx
28ed(5): jmp 0xfffffd87(%rip)
28f2(6): nop 0x0(%rax,%rax,1)
28f8(5): mov $0xa,%edx
28fd(3): xor %r10d,%r10d
2900(5): mov $0x6e,%ebx
2905(5): jmp 0xfffffd5d(%rip)
290a(6): nop 0x0(%rax,%rax,1)
2910(5): mov $0x61,%ebx
2915(5): jmp 0xfffffdcb(%rip)
291a(6): nop 0x0(%rax,%rax,1)
2920(3): xor %r10d,%r10d
2923(5): cmp $0x2,0x8(%rsp)
2928(3): setz %dl
292b(5): cmp $0x0,0xf(%rsp)
2930(6): jnz 0xb9a(%rip)
2936(3): mov %r8d,%eax
2939(3): mov %r15,%rcx
293c(3): xor $0x1,%eax
293f(2): and %dl,%al
2941(2): jz 0x2f(%rip)
2943(3): cmp %r15,%r13
2946(2): jbe 0x7(%rip)
2948(5): mov $0x27,0x0(%r14,%r15,1)
294d(4): lea 0x1(%r15),%rcx
2951(3): cmp %rcx,%r13
2954(2): jbe 0x8(%rip)
2956(6): mov $0x24,0x1(%r14,%r15,1)
295c(4): lea 0x2(%r15),%rcx
2960(3): cmp %rcx,%r13
2963(6): jnbe 0x636(%rip)
2969(4): lea 0x3(%r15),%rcx
296d(3): mov %eax,%r8d
2970(3): cmp %rcx,%r13
2973(2): jbe 0x7(%rip)
2975(5): mov $0x5c,0x0(%r14,%rcx,1)
297a(5): cmp $0x2,0x8(%rsp)
297f(4): lea 0x1(%rcx),%r15
2983(6): jz 0x606(%rip)
2989(4): lea 0x1(%rbp),%rax
298d(3): cmp %r11,%rax
2990(2): jnb 0x1b(%rip)
2992(5): mov 0x10(%rsp),%rax
2997(5): movzx 0x1(%rax,%rbp,1),%eax
299c(4): mov %al,0x28(%rsp)
29a0(3): sub $0x30,%eax
29a3(2): cmp $0x9,%al
29a5(6): jbe 0x834(%rip)
29ab(3): mov %r12d,%eax
29ae(5): mov $0x30,%ebx
29b3(3): xor %r12d,%r12d
29b6(5): jmp 0xfffffbb2(%rip)
29bb(5): nop 0x0(%rax,%rax,1)
29c0(5): cmp $0x2,0x8(%rsp)
29c5(3): mov %r10d,%r12d
29c8(3): setz %dl
29cb(3): xor %r10d,%r10d
29ce(2): xor %eax,%eax
29d0(5): jmp 0xfffffb98(%rip)
29d5(3): nop (%rax)
29d8(5): cmp $0x2,0x8(%rsp)
29dd(3): setz %dl
29e0(3): xor %r10d,%r10d
29e3(5): jmp 0xfffffdc5(%rip)
29e8(8): nop 0x0(%rax,%rax,1)
29f0(5): cmp $0x2,0x8(%rsp)
29f5(3): setz %dl
29f8(3): xor %r10d,%r10d
29fb(3): xor %r12d,%r12d
29fe(5): jmp 0xfffffdb3(%rip)
2a03(5): nop 0x0(%rax,%rax,1)
2a08(5): cmp $0x2,0x8(%rsp)
2a0d(3): mov %r10d,%r12d
2a10(5): mov $0x20,%ebx
2a15(3): setz %dl
2a18(3): xor %r10d,%r10d
2a1b(5): jmp 0xfffffd96(%rip)
2a20(5): mov $0xd,%edx
2a25(3): xor %r10d,%r10d
2a28(5): mov $0x72,%ebx
2a2d(5): jmp 0xfffffc35(%rip)
2a32(6): nop 0x0(%rax,%rax,1)
2a38(5): mov $0x76,%ebx
2a3d(5): jmp 0xfffffca3(%rip)
2a42(6): nop 0x0(%rax,%rax,1)
2a48(5): mov $0x9,%edx
2a4d(3): xor %r10d,%r10d
2a50(5): mov $0x74,%ebx
2a55(5): jmp 0xfffffc0d(%rip)
2a5a(6): nop 0x0(%rax,%rax,1)
2a60(5): mov $0x62,%ebx
2a65(5): jmp 0xfffffc7b(%rip)
2a6a(6): nop 0x0(%rax,%rax,1)
2a70(3): xor %r10d,%r10d
2a73(5): jmp 0xfffffa9d(%rip)
2a78(8): nop 0x0(%rax,%rax,1)
2a80(5): cmp $0x0,0xf(%rsp)
2a85(6): jnz 0x96b(%rip)
2a8b(4): add $0x1,%rbp
2a8f(3): mov %r8d,%eax
2a92(3): xor %r12d,%r12d
2a95(5): mov $0x5c,%ebx
2a9a(5): jmp 0xfffffb12(%rip)
2a9f(1): nop 
2aa0(5): cmp $0x2,0x8(%rsp)
2aa5(5): movzx 0xf(%rsp),%ebx
2aaa(3): mov %r8d,%r12d
2aad(3): mov %r11,%rbp
2ab0(3): setz %dl
2ab3(2): mov %ebx,%eax
2ab5(3): test %r15,%r15
2ab8(3): setz %cl
2abb(2): and %edx,%eax
2abd(2): and %cl,%al
2abf(6): jnz 0xa67(%rip)
2ac5(2): mov %ebx,%eax
2ac7(3): xor $0x1,%eax
2aca(2): and %al,%dl
2acc(6): jz 0x970(%rip)
2ad2(5): cmp $0x0,0x7c(%rsp)
2ad7(6): jz 0x963(%rip)
2add(5): cmp $0x0,0xe(%rsp)
2ae2(6): jnz 0x9fb(%rip)
2ae8(3): test %r13,%r13
2aeb(3): setz %al
2aee(6): cmp $0x0,0x50(%rsp)
2af4(3): setnz %dl
2af7(2): and %dl,%al
2af9(6): jz 0xa23(%rip)
2aff(5): mov 0x50(%rsp),%r13
2b04(7): lea 0x469a(%rip),%rbx
2b0b(4): mov $0x27,(%r14)
2b0f(8): mov $0x2,0x8(%rsp)
2b17(6): mov $0x1,%r15d
2b1d(9): mov $0x1,0x18(%rsp)
2b26(5): mov $0x0,0xf(%rsp)
2b2b(5): mov %rbx,0x48(%rsp)
2b30(4): mov %al,0x7c(%rsp)
2b34(5): jmp 0xfffff8df(%rip)
2b39(7): nop 0x0(%rax)
2b40(5): cmp $0x0,0xf(%rsp)
2b45(6): jnz 0x8ab(%rip)
2b4b(3): test %r13,%r13
2b4e(6): jz 0x402(%rip)
2b54(2): xor %edx,%edx
2b56(6): cmp $0x0,0x50(%rsp)
2b5c(6): jnz 0x3f4(%rip)
2b62(5): mov %r13,0x50(%rsp)
2b67(4): add $0x3,%r15
2b6b(2): xor %eax,%eax
2b6d(5): mov %r12b,0x7c(%rsp)
2b72(3): xor %r8d,%r8d
2b75(3): mov %rdx,%r13
2b78(5): mov $0x27,%ebx
2b7d(5): jmp 0xfffffa1c(%rip)
2b82(6): nop 0x0(%rax,%rax,1)
2b88(5): test $0x4,0x78(%rsp)
2b8d(2): jz 0x23(%rip)
2b8f(4): lea 0x2(%rbp),%rcx
2b93(3): cmp %r11,%rcx
2b96(2): jnb 0x1a(%rip)
2b98(5): mov 0x10(%rsp),%rax
2b9d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2ba2(6): jz 0x790(%rip)
2ba8(8): nop 0x0(%rax,%rax,1)
2bb0(2): xor %edx,%edx
2bb2(3): xor %r12d,%r12d
2bb5(2): xor %eax,%eax
2bb7(5): mov $0x3f,%ebx
2bbc(5): jmp 0xfffff9ac(%rip)
2bc1(7): nop 0x0(%rax)
2bc8(5): cmp $0x0,0xf(%rsp)
2bcd(6): jnz 0x823(%rip)
2bd3(3): xor %r12d,%r12d
2bd6(2): xor %eax,%eax
2bd8(5): mov $0x3f,%ebx
2bdd(5): jmp 0xfffff9bc(%rip)
2be2(6): nop 0x0(%rax,%rax,1)
2be8(8): lea 0xa0(%rsp),%rax
2bf0(4): cmp $0xffffffff,%r11
2bf4(c): mov $0x0,0xa0(%rsp)
2c00(5): mov %rax,0x28(%rsp)
2c05(2): jnz 0x2f(%rip)
2c07(5): mov 0x10(%rsp),%rdi
2c0c(5): mov %r8b,0x40(%rsp)
2c11(5): mov %r10b,0x38(%rsp)
2c16(5): mov %r9,0x30(%rsp)
2c1b(5): call 0xffffe895(%rip)
2c20(6): movzx 0x40(%rsp),%r8d
2c26(6): movzx 0x38(%rsp),%r10d
2c2c(3): mov %rax,%r11
2c2f(5): mov 0x30(%rsp),%r9
2c34(8): lea 0x9c(%rsp),%rax
2c3c(2): xor %ecx,%ecx
2c3e(4): mov %bl,0x7e(%rsp)
2c42(5): mov %r8b,0x7d(%rsp)
2c47(3): mov %rcx,%rbx
2c4a(8): mov %r9,0x88(%rsp)
2c52(5): mov %rax,0x38(%rsp)
2c57(5): mov %r10b,0x7f(%rsp)
2c5c(8): mov %r15,0x80(%rsp)
2c64(5): mov %r14,0x40(%rsp)
2c69(5): mov %r13,0x70(%rsp)
2c6e(5): mov %r11,0x30(%rsp)
2c73(5): mov 0x10(%rsp),%rax
2c78(5): lea 0x0(%rbp,%rbx,1),%r14
2c7d(5): mov 0x30(%rsp),%rdx
2c82(5): mov 0x28(%rsp),%rcx
2c87(5): mov 0x38(%rsp),%rdi
2c8c(4): lea 0x0(%rax,%r14,1),%r13
2c90(3): sub %r14,%rdx
2c93(3): mov %r13,%rsi
2c96(5): call 0x1afa(%rip)
2c9b(3): test %rax,%rax
2c9e(3): mov %rax,%r15
2ca1(2): jz 0x50(%rip)
2ca3(4): cmp $0xffffffff,%rax
2ca7(6): jz 0x61e(%rip)
2cad(4): cmp $0xfffffffe,%rax
2cb1(6): jz 0x5a0(%rip)
2cb7(5): cmp $0x2,0x8(%rsp)
2cbc(3): setz %al
2cbf(4): and 0xf(%rsp),%al
2cc3(6): jnz 0x19d(%rip)
2cc9(7): mov 0x9c(%rsp),%edi
2cd0(5): call 0xffffe9f0(%rip)
2cd5(5): mov 0x28(%rsp),%rdi
2cda(2): test %eax,%eax
2cdc(5): mov $0x0,%eax
2ce1(4): cmove %eax,%r12d
2ce5(3): add %r15,%rbx
2ce8(5): call 0xffffe9c8(%rip)
2ced(2): test %eax,%eax
2cef(2): jz 0xffffff84(%rip)
2cf1(3): mov %r12d,%edx
2cf4(3): mov %rbx,%rdi
2cf7(6): movzx 0x7d(%rsp),%r8d
2cfd(3): xor $0x1,%edx
2d00(5): movzx 0x7e(%rsp),%ebx
2d05(6): movzx 0x7f(%rsp),%r10d
2d0b(4): and 0xd(%rsp),%dl
2d0f(8): mov 0x80(%rsp),%r15
2d17(5): mov 0x40(%rsp),%r14
2d1c(5): mov 0x70(%rsp),%r13
2d21(5): mov 0x30(%rsp),%r11
2d26(4): cmp $0x1,%rdi
2d2a(6): jbe 0x601(%rip)
2d30(3): mov %rdi,%rcx
2d33(2): xor %esi,%esi
2d35(6): movzx 0xf(%rsp),%r9d
2d3b(3): add %rbp,%rcx
2d3e(5): mov 0x10(%rsp),%rdi
2d43(5): jmp 0xbb(%rip)
2d48(8): nop 0x0(%rax,%rax,1)
2d50(5): cmp $0x2,0x8(%rsp)
2d55(3): setz %al
2d58(3): test %r9b,%r9b
2d5b(6): jnz 0x4b5(%rip)
2d61(3): mov %r8d,%esi
2d64(3): xor $0x1,%esi
2d67(3): and %sil,%al
2d6a(2): jz 0x31(%rip)
2d6c(3): cmp %r15,%r13
2d6f(2): jbe 0x7(%rip)
2d71(5): mov $0x27,0x0(%r14,%r15,1)
2d76(4): lea 0x1(%r15),%rsi
2d7a(3): cmp %rsi,%r13
2d7d(2): jbe 0x8(%rip)
2d7f(6): mov $0x24,0x1(%r14,%r15,1)
2d85(4): lea 0x2(%r15),%rsi
2d89(3): cmp %rsi,%r13
2d8c(2): jbe 0x8(%rip)
2d8e(6): mov $0x27,0x2(%r14,%r15,1)
2d94(4): add $0x3,%r15
2d98(3): mov %eax,%r8d
2d9b(3): cmp %r15,%r13
2d9e(2): jbe 0x7(%rip)
2da0(5): mov $0x5c,0x0(%r14,%r15,1)
2da5(4): lea 0x1(%r15),%rax
2da9(3): cmp %rax,%r13
2dac(2): jbe 0xf(%rip)
2dae(2): mov %ebx,%eax
2db0(3): shr $0x6,%al
2db3(3): add $0x30,%eax
2db6(5): mov %al,0x1(%r14,%r15,1)
2dbb(4): lea 0x2(%r15),%rax
2dbf(3): cmp %rax,%r13
2dc2(2): jbe 0x12(%rip)
2dc4(2): mov %ebx,%eax
2dc6(3): shr $0x3,%al
2dc9(3): and $0x7,%eax
2dcc(3): add $0x30,%eax
2dcf(5): mov %al,0x2(%r14,%r15,1)
2dd4(3): and $0x7,%ebx
2dd7(4): add $0x1,%rbp
2ddb(4): add $0x3,%r15
2ddf(3): add $0x30,%ebx
2de2(3): cmp %rcx,%rbp
2de5(6): jnb 0xfffff7eb(%rip)
2deb(2): mov %edx,%esi
2ded(3): cmp %r15,%r13
2df0(2): jbe 0x6(%rip)
2df2(4): mov %bl,0x0(%r14,%r15,1)
2df6(4): movzx 0x0(%rdi,%rbp,1),%ebx
2dfa(4): add $0x1,%r15
2dfe(2): test %dl,%dl
2e00(6): jnz 0xffffff50(%rip)
2e06(2): mov %esi,%eax
2e08(3): xor $0x1,%eax
2e0b(3): and %r8d,%eax
2e0e(3): test %r10b,%r10b
2e11(2): jz 0x10(%rip)
2e13(3): cmp %r15,%r13
2e16(2): jbe 0x7(%rip)
2e18(5): mov $0x5c,0x0(%r14,%r15,1)
2e1d(4): add $0x1,%r15
2e21(4): add $0x1,%rbp
2e25(3): cmp %rcx,%rbp
2e28(6): jnb 0xfffff784(%rip)
2e2e(2): test %al,%al
2e30(6): jz 0x3fe(%rip)
2e36(3): cmp %r15,%r13
2e39(2): jbe 0x7(%rip)
2e3b(5): mov $0x27,0x0(%r14,%r15,1)
2e40(4): lea 0x1(%r15),%rax
2e44(3): cmp %rax,%r13
2e47(2): jbe 0x8(%rip)
2e49(6): mov $0x27,0x1(%r14,%r15,1)
2e4f(4): add $0x2,%r15
2e53(3): xor %r10d,%r10d
2e56(3): xor %r8d,%r8d
2e59(2): jmp 0xffffff94(%rip)
2e5b(5): nop 0x0(%rax,%rax,1)
2e60(4): cmp $0x1,%r15
2e64(6): jz 0xfffffe65(%rip)
2e6a(5): mov 0x10(%rsp),%rdi
2e6f(4): lea 0x0(%rdi,%r15,1),%rcx
2e73(5): lea 0x1(%rdi,%r14,1),%rdx
2e78(4): lea 0x0(%rcx,%r14,1),%r8
2e7c(2): jmp 0x11(%rip)
2e7e(2): nop 
2e80(4): add $0x1,%rdx
2e84(3): cmp %rdx,%r8
2e87(6): jz 0xfffffe42(%rip)
2e8d(3): movzx (%rdx),%ecx
2e90(3): sub $0x5b,%ecx
2e93(3): cmp $0x21,%cl
2e96(2): jnbe 0xffffffea(%rip)
2e98(5): mov $0x1,%esi
2e9d(3): shl/sal %cl,%rsi
2ea0(3): mov %rsi,%rcx
2ea3(a): mov $0x8589934635,%rsi
2ead(3): test %rsi,%rcx
2eb0(2): jz 0xffffffd0(%rip)
2eb2(5): mov 0x40(%rsp),%r14
2eb7(5): mov 0x70(%rsp),%r13
2ebc(5): mov 0x30(%rsp),%rbp
2ec1(8): mov $0x2,0x8(%rsp)
2ec9(5): cmp $0x0,0xd(%rsp)
2ece(2): jz 0x12(%rip)
2ed0(2): test %al,%al
2ed2(5): mov $0x4,%eax
2ed7(5): cmove 0x8(%rsp),%eax
2edc(4): mov %eax,0x8(%rsp)
2ee0(4): sub $0x8,%rsp
2ee4(3): mov %rbp,%rcx
2ee7(3): mov %r13,%rsi
2eea(4): push 0x68(%rsp)
2eee(4): push 0x78(%rsp)
2ef2(3): mov %r14,%rdi
2ef5(2): push $0x0
2ef7(8): mov 0x98(%rsp),%r9d
2eff(5): mov 0x28(%rsp),%r8d
2f04(5): mov 0x30(%rsp),%rdx
2f09(4): and $0xfd,%r9d
2f0d(5): call 0xfffff433(%rip)
2f12(4): add $0x20,%rsp
2f16(3): mov %rax,%r15
2f19(8): mov 0xa8(%rsp),%rbx
2f21(9): xor $0x28,%rbx
2f2a(3): mov %r15,%rax
2f2d(6): jnz 0x606(%rip)
2f33(7): add $0xb8,%rsp
2f3a(1): pop %rbx
2f3b(1): pop %rbp
2f3c(2): pop %r12
2f3e(2): pop %r13
2f40(2): pop %r14
2f42(2): pop %r15
2f44(1): ret near (%rsp)
2f45(3): nop (%rax)
2f48(3): mov %r11,%rbp
2f4b(5): jmp 0xffffff7e(%rip)
2f50(3): cmp %r15,%r13
2f53(2): jbe 0x7(%rip)
2f55(5): mov $0x27,0x0(%r14,%r15,1)
2f5a(4): lea 0x1(%r15),%rax
2f5e(3): cmp %rax,%r13
2f61(2): jbe 0x8(%rip)
2f63(6): mov $0x5c,0x1(%r14,%r15,1)
2f69(4): lea 0x2(%r15),%rax
2f6d(3): cmp %rax,%r13
2f70(6): jbe 0x5f2(%rip)
2f76(3): mov %r13,%rdx
2f79(6): mov $0x27,0x2(%r14,%r15,1)
2f7f(5): mov 0x50(%rsp),%r13
2f84(5): jmp 0xfffffbde(%rip)
2f89(3): mov %r12d,%eax
2f8c(5): mov $0x30,%ebx
2f91(3): xor %r12d,%r12d
2f94(5): jmp 0xfffff605(%rip)
2f99(6): mov $0x27,0x2(%r14,%r15,1)
2f9f(5): jmp 0xfffff9ca(%rip)
2fa4(2): test %ebx,%ebx
2fa6(6): jnz 0xfffff42d(%rip)
2fac(5): mov $0x1,0xd(%rsp)
2fb1(3): test %r13,%r13
2fb4(6): jnz 0x596(%rip)
2fba(7): lea 0x41e4(%rip),%rax
2fc1(9): mov $0x0,0x50(%rsp)
2fca(5): mov $0x1,0xe(%rsp)
2fcf(5): mov $0x0,0x7c(%rsp)
2fd4(3): xor %r12d,%r12d
2fd7(5): mov $0x0,0xf(%rsp)
2fdc(9): mov $0x1,0x18(%rsp)
2fe5(5): mov %rax,0x48(%rsp)
2fea(6): mov $0x1,%r15d
2ff0(8): mov $0x2,0x8(%rsp)
2ff8(5): jmp 0xfffff41b(%rip)
2ffd(3): nop (%rax)
3000(2): test %ebx,%ebx
3002(6): jnz 0x3fb(%rip)
3008(3): test %r13,%r13
300b(6): jz 0x22b(%rip)
3011(4): mov $0x22,(%r14)
3015(5): mov $0x1,0xe(%rsp)
301a(3): xor %r12d,%r12d
301d(5): mov $0x0,0x7c(%rsp)
3022(9): mov $0x0,0x50(%rsp)
302b(7): lea 0x4171(%rip),%rax
3032(5): mov $0x0,0xf(%rsp)
3037(5): mov $0x1,0xd(%rsp)
303c(9): mov $0x1,0x18(%rsp)
3045(6): mov $0x1,%r15d
304b(5): mov %rax,0x48(%rsp)
3050(5): jmp 0xfffff3c3(%rip)
3055(7): lea 0x4147(%rip),%rax
305c(5): mov $0x1,0xe(%rsp)
3061(5): mov $0x0,0x7c(%rsp)
3066(3): xor %r12d,%r12d
3069(9): mov $0x0,0x50(%rsp)
3072(5): mov $0x1,0xf(%rsp)
3077(5): mov $0x1,0xd(%rsp)
307c(9): mov $0x1,0x18(%rsp)
3085(3): xor %r15d,%r15d
3088(5): mov %rax,0x48(%rsp)
308d(8): mov $0x5,0x8(%rsp)
3095(5): jmp 0xfffff37e(%rip)
309a(5): mov $0x1,0xe(%rsp)
309f(5): mov $0x0,0x7c(%rsp)
30a4(3): xor %r12d,%r12d
30a7(9): mov $0x0,0x50(%rsp)
30b0(5): mov $0x0,0xf(%rsp)
30b5(3): xor %r15d,%r15d
30b8(5): mov $0x1,0xd(%rsp)
30bd(9): mov $0x0,0x18(%rsp)
30c6(9): mov $0x0,0x48(%rsp)
30cf(5): jmp 0xfffff344(%rip)
30d4(5): cmp $0xa,0x8(%rsp)
30d9(2): jz 0x58(%rip)
30db(7): lea 0x40c5(%rip),%rsi
30e2(2): xor %edi,%edi
30e4(5): mov $0x5,%edx
30e9(5): call 0xffffe3a7(%rip)
30ee(3): mov %rax,%rcx
30f1(5): mov %rax,0x68(%rsp)
30f6(7): lea 0x40aa(%rip),%rax
30fd(3): cmp %rax,%rcx
3100(6): jz 0x39e(%rip)
3106(7): lea 0x4098(%rip),%rsi
310d(2): xor %edi,%edi
310f(5): mov $0x5,%edx
3114(5): call 0xffffe37c(%rip)
3119(3): mov %rax,%rcx
311c(5): mov %rax,0x60(%rsp)
3121(7): lea 0x407d(%rip),%rax
3128(3): cmp %rax,%rcx
312b(6): jz 0x389(%rip)
3131(3): xor %r15d,%r15d
3134(2): test %ebx,%ebx
3136(6): jz 0x1c7(%rip)
313c(2): test %ebx,%ebx
313e(5): mov 0x60(%rsp),%rbx
3143(5): setnz 0xf(%rsp)
3148(3): xor %r12d,%r12d
314b(3): mov %rbx,%rdi
314e(5): call 0xffffe362(%rip)
3153(5): mov %rbx,0x48(%rsp)
3158(5): mov %rax,0x18(%rsp)
315d(5): mov $0x1,0xe(%rsp)
3162(5): mov $0x0,0x7c(%rsp)
3167(9): mov $0x0,0x50(%rsp)
3170(5): mov $0x1,0xd(%rsp)
3175(5): jmp 0xfffff29e(%rip)
317a(5): mov $0x1,0xe(%rsp)
317f(5): mov $0x0,0x7c(%rsp)
3184(3): xor %r12d,%r12d
3187(9): mov $0x0,0x50(%rsp)
3190(5): mov $0x0,0xf(%rsp)
3195(3): xor %r15d,%r15d
3198(5): mov $0x0,0xd(%rsp)
319d(9): mov $0x0,0x18(%rsp)
31a6(9): mov $0x0,0x48(%rsp)
31af(5): jmp 0xfffff264(%rip)
31b4(5): mov $0x1,0xe(%rsp)
31b9(5): mov $0x0,0x7c(%rsp)
31be(3): xor %r12d,%r12d
31c1(9): mov $0x0,0x50(%rsp)
31ca(5): mov $0x1,0xf(%rsp)
31cf(5): mov $0x1,0xd(%rsp)
31d4(5): jmp 0xfffff21f(%rip)
31d9(3): cmp %r15,%r13
31dc(2): jbe 0x7(%rip)
31de(5): mov $0x30,0x0(%r14,%r15,1)
31e3(4): lea 0x2(%rcx),%rax
31e7(3): cmp %rax,%r13
31ea(2): jbe 0x8(%rip)
31ec(6): mov $0x30,0x2(%r14,%rcx,1)
31f2(3): mov %r12d,%eax
31f5(4): lea 0x3(%rcx),%r15
31f9(3): xor %r12d,%r12d
31fc(5): mov $0x30,%ebx
3201(5): jmp 0xfffff367(%rip)
3206(a): nop 0x0(%rax,%rax,1)
3210(5): movzx 0xf(%rsp),%ebx
3215(3): mov %r11,%rbp
3218(4): mov %bl,0xd(%rsp)
321c(5): jmp 0xfffffcad(%rip)
3221(5): movzx 0xd(%rsp),%edx
3226(3): xor %r12d,%r12d
3229(5): jmp 0xfffffb07(%rip)
322e(3): xor %r10d,%r10d
3231(5): jmp 0xfffffbbc(%rip)
3236(9): mov $0x0,0x50(%rsp)
323f(5): mov $0x1,0xe(%rsp)
3244(3): xor %r12d,%r12d
3247(5): mov $0x0,0x7c(%rsp)
324c(5): jmp 0xfffffddf(%rip)
3251(5): mov 0x30(%rsp),%r11
3256(3): mov %r14,%rsi
3259(3): mov %r13,%rcx
325c(3): mov %rbx,%rax
325f(3): mov %rbx,%rdi
3262(6): movzx 0x7d(%rsp),%r8d
3268(5): movzx 0x7e(%rsp),%ebx
326d(8): mov 0x88(%rsp),%r9
3275(3): cmp %r11,%rsi
3278(6): movzx 0x7f(%rsp),%r10d
327e(8): mov 0x80(%rsp),%r15
3286(5): mov 0x40(%rsp),%r14
328b(5): mov 0x70(%rsp),%r13
3290(2): jnb 0x28(%rip)
3292(3): cmp $0x0,(%rcx)
3295(2): jnz 0x12(%rip)
3297(2): jmp 0x21(%rip)
3299(7): nop 0x0(%rax)
32a0(5): cmp $0x0,0x0(%r9,%rax,1)
32a5(2): jz 0x10(%rip)
32a7(4): add $0x1,%rax
32ab(5): lea 0x0(%rbp,%rax,1),%rdx
32b0(3): cmp %rdx,%r11
32b3(2): jnbe 0xffffffed(%rip)
32b5(3): mov %rax,%rdi
32b8(5): movzx 0xd(%rsp),%edx
32bd(3): xor %r12d,%r12d
32c0(5): jmp 0xfffffa66(%rip)
32c5(3): mov %rbx,%rdi
32c8(6): movzx 0x7d(%rsp),%r8d
32ce(5): movzx 0x7e(%rsp),%ebx
32d3(6): movzx 0x7f(%rsp),%r10d
32d9(8): mov 0x80(%rsp),%r15
32e1(3): xor %r12d,%r12d
32e4(5): mov 0x40(%rsp),%r14
32e9(5): mov 0x70(%rsp),%r13
32ee(5): mov 0x30(%rsp),%r11
32f3(5): movzx 0xd(%rsp),%edx
32f8(5): jmp 0xfffffa2e(%rip)
32fd(5): mov 0x68(%rsp),%rdx
3302(3): movzx (%rdx),%eax
3305(2): test %al,%al
3307(6): jz 0xfffffe35(%rip)
330d(3): nop (%rax)
3310(3): cmp %r15,%r13
3313(2): jbe 0x6(%rip)
3315(4): mov %al,0x0(%r14,%r15,1)
3319(4): add $0x1,%r15
331d(5): movzx 0x0(%rdx,%r15,1),%eax
3322(2): test %al,%al
3324(2): jnz 0xffffffec(%rip)
3326(5): jmp 0xfffffe16(%rip)
332b(2): mov %edx,%eax
332d(5): jmp 0xfffff55a(%rip)
3332(4): movzx 0x0(%rax,%rcx,1),%ebx
3336(3): cmp $0x3e,%bl
3339(6): jnbe 0xfffff877(%rip)
333f(a): mov $0x8070630310989004800,%rax
3349(4): bt %rbx,%rax
334d(6): jnb 0xfffff863(%rip)
3353(5): cmp $0x0,0xf(%rsp)
3358(6): jnz 0x1ea(%rip)
335e(3): cmp %r15,%r13
3361(2): jbe 0x7(%rip)
3363(5): mov $0x3f,0x0(%r14,%r15,1)
3368(4): lea 0x1(%r15),%rax
336c(3): cmp %rax,%r13
336f(2): jbe 0x8(%rip)
3371(6): mov $0x22,0x1(%r14,%r15,1)
3377(4): lea 0x2(%r15),%rax
337b(3): cmp %rax,%r13
337e(2): jbe 0x8(%rip)
3380(6): mov $0x22,0x2(%r14,%r15,1)
3386(4): lea 0x3(%r15),%rax
338a(3): cmp %rax,%r13
338d(2): jbe 0x8(%rip)
338f(6): mov $0x3f,0x3(%r14,%r15,1)
3395(4): add $0x4,%r15
3399(2): xor %edx,%edx
339b(3): xor %r12d,%r12d
339e(2): xor %eax,%eax
33a0(3): mov %rcx,%rbp
33a3(5): jmp 0xfffff1c5(%rip)
33a8(2): test %ebx,%ebx
33aa(6): jz 0x18e(%rip)
33b0(7): lea 0x3dee(%rip),%rax
33b7(5): mov $0x1,0xe(%rsp)
33bc(5): mov $0x0,0x7c(%rsp)
33c1(3): xor %r12d,%r12d
33c4(9): mov $0x0,0x50(%rsp)
33cd(5): mov $0x1,0xf(%rsp)
33d2(5): mov $0x0,0xd(%rsp)
33d7(9): mov $0x1,0x18(%rsp)
33e0(3): xor %r15d,%r15d
33e3(5): mov %rax,0x48(%rsp)
33e8(5): jmp 0xfffff02b(%rip)
33ed(3): nop (%rax)
33f0(3): mov %r11,%rbp
33f3(5): movzx 0xf(%rsp),%eax
33f8(5): jmp 0xfffffad1(%rip)
33fd(7): lea 0x3d9f(%rip),%rax
3404(5): mov $0x1,0xe(%rsp)
3409(5): mov $0x0,0x7c(%rsp)
340e(3): xor %r12d,%r12d
3411(9): mov $0x0,0x50(%rsp)
341a(5): mov $0x1,0xf(%rsp)
341f(5): mov $0x1,0xd(%rsp)
3424(9): mov $0x1,0x18(%rsp)
342d(3): xor %r15d,%r15d
3430(5): mov %rax,0x48(%rsp)
3435(5): jmp 0xffffefde(%rip)
343a(2): mov %edx,%eax
343c(5): mov 0x48(%rsp),%rbx
3441(3): test %rbx,%rbx
3444(2): jz 0x2e(%rip)
3446(2): test %al,%al
3448(2): jz 0x2a(%rip)
344a(3): movzx (%rbx),%ecx
344d(3): mov %rbx,%rax
3450(2): test %cl,%cl
3452(2): jz 0x20(%rip)
3454(3): mov %r15,%rdx
3457(3): sub %r15,%rax
345a(3): cmp %rdx,%r13
345d(2): jbe 0x6(%rip)
345f(4): mov %cl,0x0(%r14,%rdx,1)
3463(4): add $0x1,%rdx
3467(4): movzx 0x0(%rax,%rdx,1),%ecx
346b(2): test %cl,%cl
346d(2): jnz 0xffffffed(%rip)
346f(3): mov %rdx,%r15
3472(3): cmp %r15,%r13
3475(6): jbe 0xfffffaa4(%rip)
347b(5): mov $0x0,0x0(%r14,%r15,1)
3480(5): jmp 0xfffffa99(%rip)
3485(5): cmp $0x2,0x8(%rsp)
348a(5): movzx 0xf(%rsp),%ebx
348f(3): mov %r11,%rbp
3492(3): setz %al
3495(4): mov %bl,0xd(%rsp)
3499(5): jmp 0xfffffa30(%rip)
349e(4): mov 0x8(%rsp),%esi
34a2(3): mov %rcx,%rdi
34a5(5): call 0xffffedab(%rip)
34aa(5): mov %rax,0x68(%rsp)
34af(5): jmp 0xfffffc57(%rip)
34b4(4): mov 0x8(%rsp),%esi
34b8(3): mov %rcx,%rdi
34bb(5): call 0xffffed95(%rip)
34c0(5): mov %rax,0x60(%rsp)
34c5(5): jmp 0xfffffc6c(%rip)
34ca(5): movzx 0xf(%rsp),%ebx
34cf(3): mov %r11,%rbp
34d2(2): mov %edx,%eax
34d4(4): mov %bl,0xd(%rsp)
34d8(5): jmp 0xfffff9f1(%rip)
34dd(4): sub $0x8,%rsp
34e1(6): mov $0x5,%r8d
34e7(3): mov %r11,%rcx
34ea(4): push 0x68(%rsp)
34ee(4): push 0x78(%rsp)
34f2(3): mov %r14,%rdi
34f5(4): push 0x38(%rsp)
34f9(8): mov 0x98(%rsp),%r9d
3501(5): mov 0x30(%rsp),%rdx
3506(5): mov 0x70(%rsp),%rsi
350b(5): call 0xffffee35(%rip)
3510(4): add $0x20,%rsp
3514(3): mov %rax,%r15
3517(5): jmp 0xfffffa02(%rip)
351c(5): movzx 0x7c(%rsp),%eax
3521(5): jmp 0xffffff1b(%rip)
3526(8): mov $0x2,0x8(%rsp)
352e(5): jmp 0xfffff99b(%rip)
3533(5): call 0xffffdf9d(%rip)
3538(5): mov $0x0,0xd(%rsp)
353d(5): jmp 0xfffffa74(%rip)
3542(3): mov %r11,%rbp
3545(5): jmp 0xfffff99b(%rip)
354a(5): mov $0x1,0xe(%rsp)
354f(2): xor %eax,%eax
3551(3): xor %r12d,%r12d
3554(9): mov $0x0,0x50(%rsp)
355d(5): jmp 0xfffff5a7(%rip)
3562(3): mov %r13,%rdx
3565(5): mov 0x50(%rsp),%r13
356a(5): jmp 0xfffff5f8(%rip)
356f(5): call 0xffffde91(%rip)

"quotearg_n_options" :
3580(2): push %r15
3582(2): push %r14
3584(3): movsxd %edi,%r15
3587(2): push %r13
3589(2): push %r12
358b(3): mov %rdx,%r14
358e(1): push %rbp
358f(1): push %rbx
3590(3): mov %rcx,%rbp
3593(4): sub $0x28,%rsp
3597(5): mov %rsi,0x8(%rsp)
359c(5): call 0xffffde74(%rip)
35a1(3): mov %rax,%r13
35a4(2): mov (%rax),%eax
35a6(3): test %r15d,%r15d
35a9(7): mov 0x206ab0(%rip),%rbx
35b0(4): mov %eax,0x18(%rsp)
35b4(6): js 0x16d(%rip)
35ba(7): cmp %r15d,0x206a97(%rip)
35c1(2): jnle 0x64(%rip)
35c3(7): cmp $0x7fffffff,%r15d
35ca(6): jz 0x15c(%rip)
35d0(4): lea 0x1(%r15),%r12d
35d4(7): lea 0x206a95(%rip),%rax
35db(3): movsxd %r12d,%rsi
35de(4): shl/sal $0x4,%rsi
35e2(3): cmp %rax,%rbx
35e5(6): jz 0x11b(%rip)
35eb(3): mov %rbx,%rdi
35ee(5): call 0xf72(%rip)
35f3(3): mov %rax,%rbx
35f6(7): mov %rax,0x206a63(%rip)
35fd(7): movsxd 0x206a54(%rip),%rdi
3604(3): mov %r12d,%edx
3607(2): xor %esi,%esi
3609(2): sub %edi,%edx
360b(4): shl/sal $0x4,%rdi
360f(3): movsxd %edx,%rdx
3612(3): add %rbx,%rdi
3615(4): shl/sal $0x4,%rdx
3619(5): call 0xffffdf17(%rip)
361e(7): mov %r12d,0x206a33(%rip)
3625(3): mov 0x4(%rbp),%eax
3628(4): shl/sal $0x4,%r15
362c(4): sub $0x8,%rsp
3630(3): add %r15,%rbx
3633(4): lea 0x8(%rbp),%r15
3637(4): mov 0x0(%rbp),%r8d
363b(3): mov (%rbx),%r11
363e(4): mov 0x8(%rbx),%r12
3642(3): mov %r14,%rcx
3645(3): or $0x1,%eax
3648(4): mov %eax,0x24(%rsp)
364c(3): push 0x30(%rbp)
364f(3): mov %eax,%r9d
3652(3): push 0x28(%rbp)
3655(2): push %r15
3657(3): mov %r11,%rsi
365a(5): mov 0x28(%rsp),%rdx
365f(3): mov %r12,%rdi
3662(5): mov %r11,0x30(%rsp)
3667(5): call 0xffffecd9(%rip)
366c(4): add $0x20,%rsp
3670(5): mov 0x10(%rsp),%r11
3675(3): cmp %rax,%r11
3678(2): jnbe 0x69(%rip)
367a(4): lea 0x1(%rax),%rsi
367e(7): lea 0x206a5b(%rip),%rax
3685(3): cmp %rax,%r12
3688(3): mov %rsi,(%rbx)
368b(2): jz 0x14(%rip)
368d(3): mov %r12,%rdi
3690(5): mov %rsi,0x10(%rsp)
3695(5): call 0xffffdd5b(%rip)
369a(5): mov 0x10(%rsp),%rsi
369f(3): mov %rsi,%rdi
36a2(5): mov %rsi,0x10(%rsp)
36a7(5): call 0xe59(%rip)
36ac(4): sub $0x8,%rsp
36b0(4): mov %rax,0x8(%rbx)
36b4(4): mov 0x0(%rbp),%r8d
36b8(3): push 0x30(%rbp)
36bb(3): push 0x28(%rbp)
36be(3): mov %r14,%rcx
36c1(2): push %r15
36c3(5): mov 0x3c(%rsp),%r9d
36c8(3): mov %rax,%rdi
36cb(5): mov 0x28(%rsp),%rdx
36d0(5): mov 0x30(%rsp),%rsi
36d5(3): mov %rax,%r12
36d8(5): call 0xffffec68(%rip)
36dd(4): add $0x20,%rsp
36e1(4): mov 0x18(%rsp),%eax
36e5(4): mov %eax,0x0(%r13)
36e9(4): add $0x28,%rsp
36ed(3): mov %r12,%rax
36f0(1): pop %rbx
36f1(1): pop %rbp
36f2(2): pop %r12
36f4(2): pop %r13
36f6(2): pop %r14
36f8(2): pop %r15
36fa(1): ret near (%rsp)
36fb(5): nop 0x0(%rax,%rax,1)
3700(2): xor %edi,%edi
3702(5): call 0xe5e(%rip)
3707(8): movdqa 0x206961(%rip),%xmm0
370f(3): mov %rax,%rbx
3712(7): mov %rax,0x206947(%rip)
3719(3): movups %xmm0,(%rax)
371c(5): jmp 0xfffffee1(%rip)
3721(5): call 0xffffdcdf(%rip)
3726(5): call 0x102a(%rip)

"clone_quoting_options" :
3730(2): push %r12
3732(1): push %rbp
3733(1): push %rbx
3734(3): mov %rdi,%rbx
3737(5): call 0xffffdcd9(%rip)
373c(3): mov (%rax),%r12d
373f(3): mov %rax,%rbp
3742(7): lea 0x206a97(%rip),%rax
3749(3): test %rbx,%rbx
374c(5): mov $0x38,%esi
3751(4): cmove %rax,%rbx
3755(3): mov %rbx,%rdi
3758(5): call 0xfa8(%rip)
375d(4): mov %r12d,0x0(%rbp)
3761(1): pop %rbx
3762(1): pop %rbp
3763(2): pop %r12
3765(1): ret near (%rsp)

"get_quoting_style" :
3770(7): lea 0x206a69(%rip),%rax
3777(3): test %rdi,%rdi
377a(4): cmove %rax,%rdi
377e(2): mov (%rdi),%eax
3780(1): ret near (%rsp)

"set_quoting_style" :
3790(7): lea 0x206a49(%rip),%rax
3797(3): test %rdi,%rdi
379a(4): cmove %rax,%rdi
379e(2): mov %esi,(%rdi)
37a0(1): ret near (%rsp)

"set_char_quoting" :
37b0(7): lea 0x206a29(%rip),%rax
37b7(3): test %rdi,%rdi
37ba(2): mov %esi,%ecx
37bc(4): cmove %rax,%rdi
37c0(2): mov %esi,%eax
37c2(3): and $0x1f,%ecx
37c5(3): shr $0x5,%al
37c8(3): movzx %al,%eax
37cb(5): lea 0x8(%rdi,%rax,4),%rdi
37d0(2): mov (%rdi),%esi
37d2(2): mov %esi,%eax
37d4(2): shr %cl,%eax
37d6(2): xor %eax,%edx
37d8(3): and $0x1,%eax
37db(3): and $0x1,%edx
37de(2): shl/sal %cl,%edx
37e0(2): xor %esi,%edx
37e2(2): mov %edx,(%rdi)
37e4(1): ret near (%rsp)

"set_quoting_flags" :
37f0(7): lea 0x2069e9(%rip),%rax
37f7(3): test %rdi,%rdi
37fa(4): cmove %rax,%rdi
37fe(3): mov 0x4(%rdi),%eax
3801(3): mov %esi,0x4(%rdi)
3804(1): ret near (%rsp)

"set_custom_quoting" :
3810(7): lea 0x2069c9(%rip),%rax
3817(3): test %rdi,%rdi
381a(4): cmove %rax,%rdi
381e(3): test %rsi,%rsi
3821(6): mov $0xa,(%rdi)
3827(2): jz 0x10(%rip)
3829(3): test %rdx,%rdx
382c(2): jz 0xb(%rip)
382e(4): mov %rsi,0x28(%rdi)
3832(4): mov %rdx,0x30(%rdi)
3836(1): ret near (%rsp)
3837(4): sub $0x8,%rsp
383b(5): call 0xffffdbc5(%rip)

"quotearg_buffer" :
3840(2): push %r15
3842(2): push %r14
3844(7): lea 0x206995(%rip),%rax
384b(2): push %r13
384d(2): push %r12
384f(3): mov %rdi,%r13
3852(1): push %rbp
3853(1): push %rbx
3854(3): mov %r8,%rbx
3857(3): mov %rsi,%r14
385a(3): mov %rdx,%r15
385d(4): sub $0x18,%rsp
3861(3): test %r8,%r8
3864(4): cmove %rax,%rbx
3868(5): mov %rcx,0x8(%rsp)
386d(5): call 0xffffdba3(%rip)
3872(3): mov (%rax),%r12d
3875(3): mov %rax,%rbp
3878(4): lea 0x8(%rbx),%rax
387c(4): sub $0x8,%rsp
3880(4): mov 0x4(%rbx),%r9d
3884(3): push 0x30(%rbx)
3887(3): mov (%rbx),%r8d
388a(3): push 0x28(%rbx)
388d(3): mov %r15,%rdx
3890(1): push %rax
3891(5): mov 0x28(%rsp),%rcx
3896(3): mov %r14,%rsi
3899(3): mov %r13,%rdi
389c(5): call 0xffffeaa4(%rip)
38a1(4): mov %r12d,0x0(%rbp)
38a5(4): add $0x38,%rsp
38a9(1): pop %rbx
38aa(1): pop %rbp
38ab(2): pop %r12
38ad(2): pop %r13
38af(2): pop %r14
38b1(2): pop %r15
38b3(1): ret near (%rsp)

"quotearg_alloc_mem" :
38c0(2): push %r15
38c2(2): push %r14
38c4(7): lea 0x206915(%rip),%rax
38cb(2): push %r13
38cd(2): push %r12
38cf(3): mov %rdx,%r12
38d2(1): push %rbp
38d3(1): push %rbx
38d4(3): mov %rcx,%rbx
38d7(3): mov %rdi,%r14
38da(3): mov %rsi,%r15
38dd(4): sub $0x38,%rsp
38e1(3): test %rcx,%rcx
38e4(4): cmove %rax,%rbx
38e8(2): xor %ebp,%ebp
38ea(5): call 0xffffdb26(%rip)
38ef(3): test %r12,%r12
38f2(3): mov %rax,%r13
38f5(2): mov (%rax),%eax
38f7(4): setz %bpl
38fb(3): or 0x4(%rbx),%ebp
38fe(4): lea 0x8(%rbx),%r10
3902(4): sub $0x8,%rsp
3906(3): mov (%rbx),%r8d
3909(3): mov %r15,%rcx
390c(4): mov %eax,0x14(%rsp)
3910(3): push 0x30(%rbx)
3913(3): mov %r14,%rdx
3916(3): push 0x28(%rbx)
3919(2): push %r10
391b(2): xor %esi,%esi
391d(3): mov %ebp,%r9d
3920(2): xor %edi,%edi
3922(5): mov %r10,0x40(%rsp)
3927(5): call 0xffffea19(%rip)
392c(4): lea 0x1(%rax),%rsi
3930(5): mov %rax,0x48(%rsp)
3935(4): add $0x20,%rsp
3939(3): mov %rsi,%rdi
393c(5): mov %rsi,0x18(%rsp)
3941(5): call 0xbbf(%rip)
3946(5): mov %rax,0x10(%rsp)
394b(4): sub $0x8,%rsp
394f(3): push 0x30(%rbx)
3952(3): push 0x28(%rbx)
3955(5): mov 0x38(%rsp),%r10
395a(3): mov %ebp,%r9d
395d(3): mov (%rbx),%r8d
3960(3): mov %r15,%rcx
3963(3): mov %r14,%rdx
3966(3): mov %rax,%rdi
3969(2): push %r10
396b(5): mov 0x38(%rsp),%rsi
3970(5): call 0xffffe9d0(%rip)
3975(4): mov 0x2c(%rsp),%eax
3979(4): add $0x20,%rsp
397d(3): test %r12,%r12
3980(4): mov %eax,0x0(%r13)
3984(2): jz 0xb(%rip)
3986(5): mov 0x28(%rsp),%r11
398b(4): mov %r11,(%r12)
398f(5): mov 0x10(%rsp),%rax
3994(4): add $0x38,%rsp
3998(1): pop %rbx
3999(1): pop %rbp
399a(2): pop %r12
399c(2): pop %r13
399e(2): pop %r14
39a0(2): pop %r15
39a2(1): ret near (%rsp)

"quotearg_alloc" :
39b0(3): mov %rdx,%rcx
39b3(2): xor %edx,%edx
39b5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
39c0(6): mov 0x206692(%rip),%eax
39c6(2): push %r12
39c8(7): mov 0x206691(%rip),%r12
39cf(1): push %rbp
39d0(1): push %rbx
39d1(3): cmp $0x1,%eax
39d4(2): jle 0x2d(%rip)
39d6(3): sub $0x2,%eax
39d9(5): lea 0x18(%r12),%rbx
39de(4): shl/sal $0x4,%rax
39e2(5): lea 0x28(%r12,%rax,1),%rbp
39e7(9): nop 0x0(%rax,%rax,1)
39f0(3): mov (%rbx),%rdi
39f3(4): add $0x10,%rbx
39f7(5): call 0xffffd9f9(%rip)
39fc(3): cmp %rbp,%rbx
39ff(2): jnz 0xfffffff1(%rip)
3a01(5): mov 0x8(%r12),%rdi
3a06(7): lea 0x2066d3(%rip),%rbx
3a0d(3): cmp %rbx,%rdi
3a10(2): jz 0x19(%rip)
3a12(5): call 0xffffd9de(%rip)
3a17(b): mov $0x100,0x20664e(%rip)
3a22(7): mov %rbx,0x20664f(%rip)
3a29(7): lea 0x206640(%rip),%rbx
3a30(3): cmp %rbx,%r12
3a33(2): jz 0x11(%rip)
3a35(3): mov %r12,%rdi
3a38(5): call 0xffffd9b8(%rip)
3a3d(7): mov %rbx,0x20661c(%rip)
3a44(1): pop %rbx
3a45(a): mov $0x1,0x206609(%rip)
3a4f(1): pop %rbp
3a50(2): pop %r12
3a52(1): ret near (%rsp)

"quotearg_n" :
3a60(7): lea 0x206779(%rip),%rcx
3a67(7): mov $0xffffffff,%rdx
3a6e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3a80(7): lea 0x206759(%rip),%rcx
3a87(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3a90(7): lea 0x206749(%rip),%rcx
3a97(3): mov %rdi,%rsi
3a9a(7): mov $0xffffffff,%rdx
3aa1(2): xor %edi,%edi
3aa3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3ab0(7): lea 0x206729(%rip),%rcx
3ab7(3): mov %rsi,%rdx
3aba(3): mov %rdi,%rsi
3abd(2): xor %edi,%edi
3abf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3ad0(4): sub $0x48,%rsp
3ad4(3): mov %rdx,%rax
3ad7(9): mov $0x28,%rdx
3ae0(5): mov %rdx,0x38(%rsp)
3ae5(2): xor %edx,%edx
3ae7(3): cmp $0xa,%esi
3aea(2): jz 0x6a(%rip)
3aec(3): mov %esi,(%rsp)
3aef(3): mov %rsp,%rcx
3af2(7): mov $0xffffffff,%rdx
3af9(3): mov %rax,%rsi
3afc(9): mov $0x0,0x4(%rsp)
3b05(9): mov $0x0,0xc(%rsp)
3b0e(9): mov $0x0,0x14(%rsp)
3b17(9): mov $0x0,0x1c(%rsp)
3b20(9): mov $0x0,0x24(%rsp)
3b29(9): mov $0x0,0x2c(%rsp)
3b32(8): mov $0x0,0x34(%rsp)
3b3a(5): call 0xfffffa46(%rip)
3b3f(5): mov 0x38(%rsp),%rcx
3b44(9): xor $0x28,%rcx
3b4d(2): jnz 0xc(%rip)
3b4f(4): add $0x48,%rsp
3b53(1): ret near (%rsp)
3b54(5): call 0xffffd8ac(%rip)
3b59(5): call 0xffffd977(%rip)

"quotearg_n_style_mem" :
3b60(4): sub $0x48,%rsp
3b64(3): mov %rdx,%rax
3b67(3): mov %rcx,%rdx
3b6a(9): mov $0x28,%rcx
3b73(5): mov %rcx,0x38(%rsp)
3b78(2): xor %ecx,%ecx
3b7a(3): cmp $0xa,%esi
3b7d(2): jz 0x63(%rip)
3b7f(3): mov %esi,(%rsp)
3b82(3): mov %rsp,%rcx
3b85(3): mov %rax,%rsi
3b88(9): mov $0x0,0x4(%rsp)
3b91(9): mov $0x0,0xc(%rsp)
3b9a(9): mov $0x0,0x14(%rsp)
3ba3(9): mov $0x0,0x1c(%rsp)
3bac(9): mov $0x0,0x24(%rsp)
3bb5(9): mov $0x0,0x2c(%rsp)
3bbe(8): mov $0x0,0x34(%rsp)
3bc6(5): call 0xfffff9ba(%rip)
3bcb(5): mov 0x38(%rsp),%rdx
3bd0(9): xor $0x28,%rdx
3bd9(2): jnz 0xc(%rip)
3bdb(4): add $0x48,%rsp
3bdf(1): ret near (%rsp)
3be0(5): call 0xffffd820(%rip)
3be5(5): call 0xffffd8eb(%rip)

"quotearg_style" :
3bf0(3): mov %rsi,%rdx
3bf3(2): mov %edi,%esi
3bf5(2): xor %edi,%edi
3bf7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3c00(3): mov %rdx,%rcx
3c03(3): mov %rsi,%rdx
3c06(2): mov %edi,%esi
3c08(2): xor %edi,%edi
3c0a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3c10(4): sub $0x48,%rsp
3c14(2): mov %edx,%ecx
3c16(9): mov $0x28,%rax
3c1f(5): mov %rax,0x38(%rsp)
3c24(2): xor %eax,%eax
3c26(7): mov 0x2065e3(%rip),%rax
3c2d(3): mov %rsp,%r8
3c30(3): and $0x1f,%ecx
3c33(8): movdqa 0x2065a5(%rip),%xmm0
3c3b(5): mov %rax,0x30(%rsp)
3c40(2): mov %edx,%eax
3c42(4): movaps %xmm0,(%rsp)
3c46(3): shr $0x5,%al
3c49(3): movzx %al,%eax
3c4c(5): lea 0x8(%r8,%rax,4),%r9
3c51(8): movdqa 0x206597(%rip),%xmm0
3c59(5): movaps %xmm0,0x10(%rsp)
3c5e(8): movdqa 0x20659a(%rip),%xmm0
3c66(5): movaps %xmm0,0x20(%rsp)
3c6b(3): mov (%r9),%edx
3c6e(2): mov %edx,%eax
3c70(2): shr %cl,%eax
3c72(2): not %eax
3c74(3): and $0x1,%eax
3c77(2): shl/sal %cl,%eax
3c79(3): mov %r8,%rcx
3c7c(2): xor %edx,%eax
3c7e(3): mov %rsi,%rdx
3c81(3): mov %rdi,%rsi
3c84(3): mov %eax,(%r9)
3c87(2): xor %edi,%edi
3c89(5): call 0xfffff8f7(%rip)
3c8e(5): mov 0x38(%rsp),%rsi
3c93(9): xor $0x28,%rsi
3c9c(2): jnz 0x7(%rip)
3c9e(4): add $0x48,%rsp
3ca2(1): ret near (%rsp)
3ca3(5): call 0xffffd82d(%rip)

"quotearg_char" :
3cb0(4): movsx %sil,%edx
3cb4(7): mov $0xffffffff,%rsi
3cbb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3cc0(5): mov $0x3a,%edx
3cc5(7): mov $0xffffffff,%rsi
3ccc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3ce0(5): mov $0x3a,%edx
3ce5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3cf0(4): sub $0x48,%rsp
3cf4(3): mov %rdx,%rax
3cf7(9): mov $0x28,%rdx
3d00(5): mov %rdx,0x38(%rsp)
3d05(2): xor %edx,%edx
3d07(3): cmp $0xa,%esi
3d0a(2): jz 0x6a(%rip)
3d0c(3): mov %esi,(%rsp)
3d0f(3): mov %rsp,%rcx
3d12(7): mov $0xffffffff,%rdx
3d19(3): mov %rax,%rsi
3d1c(9): mov $0x0,0x4(%rsp)
3d25(9): mov $0x4000000,0xc(%rsp)
3d2e(9): mov $0x0,0x14(%rsp)
3d37(9): mov $0x0,0x1c(%rsp)
3d40(9): mov $0x0,0x24(%rsp)
3d49(9): mov $0x0,0x2c(%rsp)
3d52(8): mov $0x0,0x34(%rsp)
3d5a(5): call 0xfffff826(%rip)
3d5f(5): mov 0x38(%rsp),%rcx
3d64(9): xor $0x28,%rcx
3d6d(2): jnz 0xc(%rip)
3d6f(4): add $0x48,%rsp
3d73(1): ret near (%rsp)
3d74(5): call 0xffffd68c(%rip)
3d79(5): call 0xffffd757(%rip)

"quotearg_n_custom_mem" :
3d80(4): sub $0x48,%rsp
3d84(3): mov %rcx,%r9
3d87(7): mov 0x206482(%rip),%rcx
3d8e(8): movdqa 0x20644a(%rip),%xmm0
3d96(9): mov $0x28,%rax
3d9f(5): mov %rax,0x38(%rsp)
3da4(2): xor %eax,%eax
3da6(4): movaps %xmm0,(%rsp)
3daa(3): test %rsi,%rsi
3dad(5): mov %rcx,0x30(%rsp)
3db2(7): mov $0xa,(%rsp)
3db9(8): movdqa 0x20642f(%rip),%xmm0
3dc1(5): movaps %xmm0,0x10(%rsp)
3dc6(8): movdqa 0x206432(%rip),%xmm0
3dce(5): movaps %xmm0,0x20(%rsp)
3dd3(2): jz 0x34(%rip)
3dd5(3): test %rdx,%rdx
3dd8(2): jz 0x2f(%rip)
3dda(5): mov %rsi,0x28(%rsp)
3ddf(5): mov %rdx,0x30(%rsp)
3de4(3): mov %rsp,%rcx
3de7(3): mov %r8,%rdx
3dea(3): mov %r9,%rsi
3ded(5): call 0xfffff793(%rip)
3df2(5): mov 0x38(%rsp),%rdi
3df7(9): xor $0x28,%rdi
3e00(2): jnz 0xc(%rip)
3e02(4): add $0x48,%rsp
3e06(1): ret near (%rsp)
3e07(5): call 0xffffd5f9(%rip)
3e0c(5): call 0xffffd6c4(%rip)

"quotearg_n_custom" :
3e20(7): mov $0xffffffff,%r8
3e27(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3e30(3): mov %rdx,%rcx
3e33(7): mov $0xffffffff,%r8
3e3a(3): mov %rsi,%rdx
3e3d(3): mov %rdi,%rsi
3e40(2): xor %edi,%edi
3e42(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3e50(3): mov %rcx,%r8
3e53(3): mov %rdx,%rcx
3e56(3): mov %rsi,%rdx
3e59(3): mov %rdi,%rsi
3e5c(2): xor %edi,%edi
3e5e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3e70(7): lea 0x2061a9(%rip),%rcx
3e77(5): jmp 0xfffff709(%rip)

"quote_mem" :
3e80(7): lea 0x206199(%rip),%rcx
3e87(3): mov %rsi,%rdx
3e8a(3): mov %rdi,%rsi
3e8d(2): xor %edi,%edi
3e8f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3ea0(7): lea 0x206179(%rip),%rcx
3ea7(7): mov $0xffffffff,%rdx
3eae(5): jmp 0xfffff6d2(%rip)

"quote" :
3ec0(7): lea 0x206159(%rip),%rcx
3ec7(3): mov %rdi,%rsi
3eca(7): mov $0xffffffff,%rdx
3ed1(2): xor %edi,%edi
3ed3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3ee0(2): push %r15
3ee2(2): push %r14
3ee4(2): push %r13
3ee6(2): push %r12
3ee8(3): mov %r9,%r12
3eeb(1): push %rbp
3eec(1): push %rbx
3eed(3): mov %rdi,%rbp
3ef0(3): mov %r8,%rbx
3ef3(4): sub $0x28,%rsp
3ef7(3): test %rsi,%rsi
3efa(6): jz 0x11e(%rip)
3f00(3): mov %rdx,%r8
3f03(7): lea 0x375e(%rip),%rdx
3f0a(3): mov %rcx,%r9
3f0d(2): xor %eax,%eax
3f0f(3): mov %rsi,%rcx
3f12(5): mov $0x1,%esi
3f17(5): call 0xffffd789(%rip)
3f1c(7): lea 0x3758(%rip),%rsi
3f23(2): xor %edi,%edi
3f25(5): mov $0x5,%edx
3f2a(5): call 0xffffd566(%rip)
3f2f(7): lea 0x3a6a(%rip),%rdx
3f36(3): mov %rax,%rcx
3f39(6): mov $0x7e3,%r8d
3f3f(5): mov $0x1,%esi
3f44(3): mov %rbp,%rdi
3f47(2): xor %eax,%eax
3f49(5): call 0xffffd757(%rip)
3f4e(7): lea 0x37b3(%rip),%rsi
3f55(2): xor %edi,%edi
3f57(5): mov $0x5,%edx
3f5c(5): call 0xffffd534(%rip)
3f61(3): mov %rbp,%rsi
3f64(3): mov %rax,%rdi
3f67(5): call 0xffffd609(%rip)
3f6c(4): cmp $0x9,%r12
3f70(6): jnbe 0x340(%rip)
3f76(7): lea 0x39eb(%rip),%rdx
3f7d(4): movsxd 0x0(%rdx,%r12,4),%rax
3f81(3): add %rdx,%rax
3f84(2): jmp %rax
3f86(a): nop 0x0(%rax,%rax,1)
3f90(4): mov 0x38(%rbx),%r9
3f94(4): mov 0x10(%rbx),%rax
3f98(7): lea 0x38d9(%rip),%rsi
3f9f(4): mov 0x8(%rbx),%r8
3fa3(5): mov $0x5,%edx
3fa8(2): xor %edi,%edi
3faa(4): mov 0x30(%rbx),%r13
3fae(4): mov 0x28(%rbx),%r12
3fb2(5): mov %r9,0x10(%rsp)
3fb7(4): mov 0x20(%rbx),%r15
3fbb(4): mov 0x18(%rbx),%r14
3fbf(4): mov %rax,(%rsp)
3fc3(5): mov %r8,0x8(%rsp)
3fc8(3): mov (%rbx),%rbx
3fcb(5): call 0xffffd4c5(%rip)
3fd0(4): sub $0x8,%rsp
3fd4(5): mov 0x18(%rsp),%r9
3fd9(3): mov %rax,%rdx
3fdc(3): mov %rbx,%rcx
3fdf(5): mov $0x1,%esi
3fe4(3): mov %rbp,%rdi
3fe7(2): xor %eax,%eax
3fe9(2): push %r9
3feb(2): push %r13
3fed(2): push %r12
3fef(2): push %r15
3ff1(2): push %r14
3ff3(5): mov 0x30(%rsp),%r9
3ff8(5): mov 0x38(%rsp),%r8
3ffd(5): call 0xffffd6a3(%rip)
4002(4): add $0x30,%rsp
4006(4): add $0x28,%rsp
400a(1): pop %rbx
400b(1): pop %rbp
400c(2): pop %r12
400e(2): pop %r13
4010(2): pop %r14
4012(2): pop %r15
4014(1): ret near (%rsp)
4015(3): nop (%rax)
4018(3): mov %rcx,%r8
401b(3): mov %rdx,%rcx
401e(7): lea 0x364f(%rip),%rdx
4025(5): mov $0x1,%esi
402a(2): xor %eax,%eax
402c(5): call 0xffffd674(%rip)
4031(5): jmp 0xfffffeeb(%rip)
4036(a): nop 0x0(%rax,%rax,1)
4040(4): mov 0x40(%rbx),%r10
4044(4): mov 0x38(%rbx),%r9
4048(7): lea 0x3859(%rip),%rsi
404f(4): mov 0x10(%rbx),%rax
4053(4): mov 0x8(%rbx),%r8
4057(5): mov $0x5,%edx
405c(4): mov 0x30(%rbx),%r13
4060(4): mov 0x28(%rbx),%r12
4064(4): mov 0x20(%rbx),%r15
4068(4): mov 0x18(%rbx),%r14
406c(3): mov (%rbx),%rbx
406f(5): mov %r10,0x18(%rsp)
4074(5): mov %r9,0x10(%rsp)
4079(4): mov %rax,(%rsp)
407d(5): mov %r8,0x8(%rsp)
4082(2): xor %edi,%edi
4084(5): call 0xffffd40c(%rip)
4089(5): mov 0x18(%rsp),%r10
408e(2): push %r10
4090(5): jmp 0xffffff44(%rip)
4095(3): nop (%rax)
4098(3): mov (%rbx),%rbx
409b(7): lea 0x35dd(%rip),%rsi
40a2(5): mov $0x5,%edx
40a7(2): xor %edi,%edi
40a9(5): call 0xffffd3e7(%rip)
40ae(4): add $0x28,%rsp
40b2(3): mov %rbx,%rcx
40b5(3): mov %rbp,%rdi
40b8(1): pop %rbx
40b9(1): pop %rbp
40ba(2): pop %r12
40bc(2): pop %r13
40be(2): pop %r14
40c0(2): pop %r15
40c2(3): mov %rax,%rdx
40c5(5): mov $0x1,%esi
40ca(2): xor %eax,%eax
40cc(5): jmp 0xffffd5d4(%rip)
40d1(7): nop 0x0(%rax)
40d8(4): mov 0x8(%rbx),%r12
40dc(7): lea 0x35ac(%rip),%rsi
40e3(3): mov (%rbx),%rbx
40e6(5): mov $0x5,%edx
40eb(2): xor %edi,%edi
40ed(5): call 0xffffd3a3(%rip)
40f2(4): add $0x28,%rsp
40f6(3): mov %r12,%r8
40f9(3): mov %rbx,%rcx
40fc(3): mov %rbp,%rdi
40ff(3): mov %rax,%rdx
4102(5): mov $0x1,%esi
4107(1): pop %rbx
4108(1): pop %rbp
4109(2): pop %r12
410b(2): pop %r13
410d(2): pop %r14
410f(2): pop %r15
4111(2): xor %eax,%eax
4113(5): jmp 0xffffd58d(%rip)
4118(8): nop 0x0(%rax,%rax,1)
4120(4): mov 0x10(%rbx),%r13
4124(4): mov 0x8(%rbx),%r12
4128(7): lea 0x3577(%rip),%rsi
412f(3): mov (%rbx),%rbx
4132(5): mov $0x5,%edx
4137(2): xor %edi,%edi
4139(5): call 0xffffd357(%rip)
413e(4): add $0x28,%rsp
4142(3): mov %r13,%r9
4145(3): mov %r12,%r8
4148(3): mov %rbx,%rcx
414b(3): mov %rbp,%rdi
414e(3): mov %rax,%rdx
4151(1): pop %rbx
4152(1): pop %rbp
4153(2): pop %r12
4155(2): pop %r13
4157(2): pop %r14
4159(2): pop %r15
415b(5): mov $0x1,%esi
4160(2): xor %eax,%eax
4162(5): jmp 0xffffd53e(%rip)
4167(9): nop 0x0(%rax,%rax,1)
4170(7): lea 0x3661(%rip),%rsi
4177(5): mov $0x5,%edx
417c(2): xor %edi,%edi
417e(4): mov 0x18(%rbx),%r14
4182(4): mov 0x10(%rbx),%r13
4186(4): mov 0x8(%rbx),%r12
418a(3): mov (%rbx),%rbx
418d(5): call 0xffffd303(%rip)
4192(4): sub $0x8,%rsp
4196(2): push %r14
4198(3): mov %rax,%rdx
419b(3): mov %r13,%r9
419e(3): mov %r12,%r8
41a1(3): mov %rbx,%rcx
41a4(3): mov %rbp,%rdi
41a7(5): mov $0x1,%esi
41ac(2): xor %eax,%eax
41ae(5): call 0xffffd4f2(%rip)
41b3(1): pop %rax
41b4(1): pop %rdx
41b5(4): add $0x28,%rsp
41b9(1): pop %rbx
41ba(1): pop %rbp
41bb(2): pop %r12
41bd(2): pop %r13
41bf(2): pop %r14
41c1(2): pop %r15
41c3(1): ret near (%rsp)
41c4(4): nop 0x0(%rax)
41c8(4): mov 0x20(%rbx),%r15
41cc(7): lea 0x3625(%rip),%rsi
41d3(5): mov $0x5,%edx
41d8(2): xor %edi,%edi
41da(4): mov 0x18(%rbx),%r14
41de(4): mov 0x10(%rbx),%r13
41e2(4): mov 0x8(%rbx),%r12
41e6(3): mov (%rbx),%rbx
41e9(5): call 0xffffd2a7(%rip)
41ee(2): push %r15
41f0(2): jmp 0xffffffa6(%rip)
41f2(6): nop 0x0(%rax,%rax,1)
41f8(4): mov 0x8(%rbx),%r8
41fc(4): mov 0x28(%rbx),%r12
4200(7): lea 0x3619(%rip),%rsi
4207(4): mov 0x20(%rbx),%r15
420b(4): mov 0x18(%rbx),%r14
420f(5): mov $0x5,%edx
4214(4): mov 0x10(%rbx),%r13
4218(2): xor %edi,%edi
421a(3): mov (%rbx),%rbx
421d(4): mov %r8,(%rsp)
4221(5): call 0xffffd26f(%rip)
4226(4): sub $0x8,%rsp
422a(3): mov %r13,%r9
422d(2): push %r12
422f(2): push %r15
4231(2): push %r14
4233(5): mov 0x20(%rsp),%r8
4238(3): mov %rbx,%rcx
423b(3): mov %rax,%rdx
423e(3): mov %rbp,%rdi
4241(5): mov $0x1,%esi
4246(2): xor %eax,%eax
4248(5): call 0xffffd458(%rip)
424d(4): add $0x20,%rsp
4251(4): add $0x28,%rsp
4255(1): pop %rbx
4256(1): pop %rbp
4257(2): pop %r12
4259(2): pop %r13
425b(2): pop %r14
425d(2): pop %r15
425f(1): ret near (%rsp)
4260(4): mov 0x10(%rbx),%r9
4264(4): mov 0x30(%rbx),%r13
4268(7): lea 0x35d9(%rip),%rsi
426f(4): mov 0x28(%rbx),%r12
4273(4): mov 0x20(%rbx),%r15
4277(5): mov $0x5,%edx
427c(4): mov 0x18(%rbx),%r14
4280(4): mov 0x8(%rbx),%r8
4284(2): xor %edi,%edi
4286(5): mov %r9,0x8(%rsp)
428b(3): mov (%rbx),%rbx
428e(4): mov %r8,(%rsp)
4292(5): call 0xffffd1fe(%rip)
4297(2): push %r13
4299(2): push %r12
429b(2): push %r15
429d(2): push %r14
429f(5): mov 0x28(%rsp),%r9
42a4(2): jmp 0xffffff8f(%rip)
42a6(a): nop 0x0(%rax,%rax,1)
42b0(4): mov 0x40(%rbx),%r10
42b4(4): mov 0x38(%rbx),%r9
42b8(5): mov $0x5,%edx
42bd(4): mov 0x10(%rbx),%rax
42c1(4): mov 0x8(%rbx),%r8
42c5(7): lea 0x3614(%rip),%rsi
42cc(4): mov 0x30(%rbx),%r13
42d0(4): mov 0x28(%rbx),%r12
42d4(4): mov 0x20(%rbx),%r15
42d8(4): mov 0x18(%rbx),%r14
42dc(5): mov %r10,0x18(%rsp)
42e1(5): mov %r9,0x10(%rsp)
42e6(4): mov %rax,(%rsp)
42ea(5): mov %r8,0x8(%rsp)
42ef(3): mov (%rbx),%rbx
42f2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4300(3): xor %r9d,%r9d
4303(4): cmp $0x0,(%r8)
4307(2): jz 0x14(%rip)
4309(7): nop 0x0(%rax)
4310(4): add $0x1,%r9
4314(5): cmp $0x0,0x0(%r8,%r9,8)
4319(2): jnz 0xfffffff7(%rip)
431b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4320(4): sub $0x68,%rsp
4324(3): mov %r8,%r10
4327(3): xor %r9d,%r9d
432a(9): mov $0x28,%rax
4333(5): mov %rax,0x58(%rsp)
4338(2): xor %eax,%eax
433a(3): mov %rsp,%r8
433d(3): nop (%rax)
4340(3): mov (%r10),%eax
4343(3): cmp $0x2f,%eax
4346(2): jnbe 0x44(%rip)
4348(3): mov %eax,%r11d
434b(4): add 0x10(%r10),%r11
434f(3): add $0x8,%eax
4352(3): mov %eax,(%r10)
4355(3): mov (%r11),%rax
4358(3): test %rax,%rax
435b(4): mov %rax,0x0(%r8,%r9,8)
435f(2): jz 0xc(%rip)
4361(4): add $0x1,%r9
4365(4): cmp $0xa,%r9
4369(2): jnz 0xffffffd7(%rip)
436b(5): call 0xfffffb75(%rip)
4370(5): mov 0x58(%rsp),%rax
4375(9): xor $0x28,%rax
437e(2): jnz 0x7(%rip)
4380(4): add $0x68,%rsp
4384(1): ret near (%rsp)
4385(5): call 0xffffd14b(%rip)
438a(4): mov 0x8(%r10),%r11
438e(4): lea 0x8(%r11),%rax
4392(4): mov %rax,0x8(%r10)
4396(2): jmp 0xffffffbf(%rip)

"version_etc" :
43a0(1): push %rbp
43a1(1): push %rbx
43a2(6): mov $0x20,%r10d
43a8(3): xor %r11d,%r11d
43ab(7): sub $0xb8,%rsp
43b2(9): mov $0x28,%rax
43bb(5): mov %rax,0x78(%rsp)
43c0(2): xor %eax,%eax
43c2(8): lea 0xd0(%rsp),%rax
43ca(8): mov %r8,0xa0(%rsp)
43d2(8): lea 0xd0(%rsp),%rbx
43da(5): lea 0x20(%rsp),%r8
43df(8): mov %r9,0xa8(%rsp)
43e7(8): mov $0x20,0x8(%rsp)
43ef(5): mov %rax,0x10(%rsp)
43f4(8): lea 0x80(%rsp),%rax
43fc(3): xor %r9d,%r9d
43ff(5): mov %rax,0x18(%rsp)
4404(3): mov %rax,%rbp
4407(9): nop 0x0(%rax,%rax,1)
4410(4): cmp $0x2f,%r10d
4414(2): jnbe 0x58(%rip)
4416(3): mov %r10d,%eax
4419(6): mov $0x1,%r11d
441f(4): add $0x8,%r10d
4423(3): add %rbp,%rax
4426(3): mov (%rax),%rax
4429(3): test %rax,%rax
442c(4): mov %rax,0x0(%r8,%r9,8)
4430(2): jz 0xc(%rip)
4432(4): add $0x1,%r9
4436(4): cmp $0xa,%r9
443a(2): jnz 0xffffffd6(%rip)
443c(3): test %r11b,%r11b
443f(2): jnz 0x26(%rip)
4441(5): call 0xfffffa9f(%rip)
4446(5): mov 0x78(%rsp),%rax
444b(9): xor $0x28,%rax
4454(2): jnz 0xc(%rip)
4456(7): add $0xb8,%rsp
445d(1): pop %rbx
445e(1): pop %rbp
445f(1): ret near (%rsp)
4460(5): call 0xffffd070(%rip)
4465(5): mov %r10d,0x8(%rsp)
446a(2): jmp 0xffffffd7(%rip)
446c(3): mov %rbx,%rax
446f(4): add $0x8,%rbx
4473(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4480(1): push %rbx
4481(7): lea 0x323a(%rip),%rsi
4488(5): mov $0x5,%edx
448d(2): xor %edi,%edi
448f(5): call 0xffffd001(%rip)
4494(7): lea 0x323c(%rip),%rdx
449b(3): mov %rax,%rsi
449e(5): mov $0x1,%edi
44a3(2): xor %eax,%eax
44a5(5): call 0xffffd18b(%rip)
44aa(7): lea 0x323c(%rip),%rsi
44b1(5): mov $0x5,%edx
44b6(2): xor %edi,%edi
44b8(5): call 0xffffcfd8(%rip)
44bd(7): lea 0x2bcc(%rip),%rcx
44c4(7): lea 0x2895(%rip),%rdx
44cb(3): mov %rax,%rsi
44ce(5): mov $0x1,%edi
44d3(2): xor %eax,%eax
44d5(5): call 0xffffd15b(%rip)
44da(7): mov 0x205ba7(%rip),%rbx
44e1(7): lea 0x3438(%rip),%rsi
44e8(2): xor %edi,%edi
44ea(5): mov $0x5,%edx
44ef(5): call 0xffffcfa1(%rip)
44f4(3): mov %rbx,%rsi
44f7(3): mov %rax,%rdi
44fa(1): pop %rbx
44fb(5): jmp 0xffffd075(%rip)

"xmalloc" :
4500(1): push %rbx
4501(3): mov %rdi,%rbx
4504(5): call 0xffffd0bc(%rip)
4509(3): test %rax,%rax
450c(2): jnz 0x7(%rip)
450e(3): test %rbx,%rbx
4511(2): jnz 0x4(%rip)
4513(1): pop %rbx
4514(1): ret near (%rsp)
4515(5): call 0x23b(%rip)

"xnmalloc" :
4520(3): mov %rdi,%rax
4523(3): mul %rax,%rsi,%rdx
4526(3): mov %rax,%rdi
4529(3): seto %al
452c(3): test %rdi,%rdi
452f(2): js 0xc(%rip)
4531(3): movzx %al,%eax
4534(3): test %rax,%rax
4537(2): jnz 0x4(%rip)
4539(2): jmp 0xffffffc7(%rip)
453b(4): sub $0x8,%rsp
453f(5): call 0x211(%rip)

"xrealloc" :
4560(3): test %rsi,%rsi
4563(1): push %rbx
4564(3): mov %rsi,%rbx
4567(2): jnz 0x7(%rip)
4569(3): test %rdi,%rdi
456c(2): jnz 0x1c(%rip)
456e(3): mov %rbx,%rsi
4571(5): call 0xffffd09f(%rip)
4576(3): test %rax,%rax
4579(2): jnz 0x7(%rip)
457b(3): test %rbx,%rbx
457e(2): jnz 0x13(%rip)
4580(1): pop %rbx
4581(1): ret near (%rsp)
4582(6): nop 0x0(%rax,%rax,1)
4588(5): call 0xffffce68(%rip)
458d(2): xor %eax,%eax
458f(1): pop %rbx
4590(1): ret near (%rsp)
4591(5): call 0x1bf(%rip)

"xnrealloc" :
45a0(3): mov %rsi,%rax
45a3(3): mul %rax,%rdx,%rdx
45a6(3): mov %rax,%rsi
45a9(3): seto %al
45ac(3): test %rsi,%rsi
45af(2): js 0xc(%rip)
45b1(3): movzx %al,%eax
45b4(3): test %rax,%rax
45b7(2): jnz 0x4(%rip)
45b9(2): jmp 0xffffffa7(%rip)
45bb(4): sub $0x8,%rsp
45bf(5): call 0x191(%rip)

"x2nrealloc" :
45d0(3): test %rdi,%rdi
45d3(3): mov %rdx,%r9
45d6(3): mov (%rsi),%rcx
45d9(2): jz 0x37(%rip)
45db(2): xor %edx,%edx
45dd(a): mov $0x6148914691236517204,%rax
45e7(3): div %r9,%rax
45ea(3): cmp %rcx,%rax
45ed(2): jbe 0x3e(%rip)
45ef(3): mov %rcx,%rax
45f2(3): shr $0x1,%rax
45f5(5): lea 0x1(%rax,%rcx,1),%rcx
45fa(3): mov %rcx,(%rsi)
45fd(4): imul %r9,%rcx
4601(3): mov %rcx,%rsi
4604(5): jmp 0xffffff5c(%rip)
4609(7): nop 0x0(%rax)
4610(3): test %rcx,%rcx
4613(2): jz 0x25(%rip)
4615(3): mov %rcx,%rax
4618(3): mul %rax,%r9,%rdx
461b(3): seto %dl
461e(3): test %rax,%rax
4621(3): movzx %dl,%edx
4624(2): js 0x7(%rip)
4626(3): test %rdx,%rdx
4629(2): jz 0xffffffd1(%rip)
462b(4): sub $0x8,%rsp
462f(5): call 0x121(%rip)
4634(4): nop 0x0(%rax)
4638(2): xor %edx,%edx
463a(5): mov $0x80,%eax
463f(3): xor %r8d,%r8d
4642(3): div %r9,%rax
4645(3): test %rax,%rax
4648(4): setz %r8b
464c(4): lea 0x0(%r8,%rax,1),%rcx
4650(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4660(3): test %rdi,%rdi
4663(3): mov (%rsi),%rax
4666(2): jz 0x2a(%rip)
4668(a): mov $0x6148914691236517203,%rdx
4672(3): cmp %rdx,%rax
4675(2): jnbe 0x2c(%rip)
4677(3): mov %rax,%rdx
467a(3): shr $0x1,%rdx
467d(5): lea 0x1(%rdx,%rax,1),%rax
4682(3): mov %rax,(%rsi)
4685(3): mov %rax,%rsi
4688(5): jmp 0xfffffed8(%rip)
468d(3): nop (%rax)
4690(3): test %rax,%rax
4693(5): mov $0x80,%edx
4698(4): cmove %rdx,%rax
469c(3): test %rax,%rax
469f(2): jns 0xffffffe3(%rip)
46a1(4): sub $0x8,%rsp
46a5(5): call 0xab(%rip)

"xzalloc" :
46b0(1): push %rbx
46b1(3): mov %rdi,%rbx
46b4(5): call 0xfffffe4c(%rip)
46b9(3): mov %rbx,%rdx
46bc(2): xor %esi,%esi
46be(3): mov %rax,%rdi
46c1(1): pop %rbx
46c2(5): jmp 0xffffce6e(%rip)

"xcalloc" :
46d0(3): mov %rdi,%rax
46d3(4): sub $0x8,%rsp
46d7(3): mul %rax,%rsi,%rdx
46da(3): seto %dl
46dd(3): test %rax,%rax
46e0(2): js 0x19(%rip)
46e2(3): movzx %dl,%edx
46e5(3): test %rdx,%rdx
46e8(2): jnz 0x11(%rip)
46ea(5): call 0xffffce96(%rip)
46ef(3): test %rax,%rax
46f2(2): jz 0x7(%rip)
46f4(4): add $0x8,%rsp
46f8(1): ret near (%rsp)
46f9(5): call 0x57(%rip)

"xmemdup" :
4700(1): push %rbp
4701(1): push %rbx
4702(3): mov %rdi,%rbp
4705(3): mov %rsi,%rdi
4708(3): mov %rsi,%rbx
470b(4): sub $0x8,%rsp
470f(5): call 0xfffffdf1(%rip)
4714(4): add $0x8,%rsp
4718(3): mov %rbx,%rdx
471b(3): mov %rbp,%rsi
471e(1): pop %rbx
471f(1): pop %rbp
4720(3): mov %rax,%rdi
4723(5): jmp 0xffffce6d(%rip)

"xstrdup" :
4730(1): push %rbx
4731(3): mov %rdi,%rbx
4734(5): call 0xffffcd7c(%rip)
4739(3): mov %rbx,%rdi
473c(4): lea 0x1(%rax),%rsi
4740(1): pop %rbx
4741(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4750(7): lea 0x3278(%rip),%rsi
4757(4): sub $0x8,%rsp
475b(5): mov $0x5,%edx
4760(2): xor %edi,%edi
4762(5): call 0xffffcd2e(%rip)
4767(6): mov 0x2058ab(%rip),%edi
476d(7): lea 0x2668(%rip),%rdx
4774(3): mov %rax,%rcx
4777(2): xor %esi,%esi
4779(2): xor %eax,%eax
477b(5): call 0xffffcec5(%rip)
4780(5): call 0xffffcc80(%rip)

"rpl_mbrtowc" :
4790(2): push %r13
4792(2): push %r12
4794(3): mov %rsi,%r13
4797(1): push %rbp
4798(1): push %rbx
4799(3): mov %rdi,%rbx
479c(3): mov %rdx,%r12
479f(4): sub $0x18,%rsp
47a3(9): mov $0x28,%rax
47ac(5): mov %rax,0x8(%rsp)
47b1(2): xor %eax,%eax
47b3(5): lea 0x4(%rsp),%rax
47b8(3): test %rdi,%rdi
47bb(4): cmove %rax,%rbx
47bf(3): mov %rbx,%rdi
47c2(5): call 0xffffcd2e(%rip)
47c7(4): cmp $0xfffffffd,%rax
47cb(3): mov %rax,%rbp
47ce(2): jbe 0x22(%rip)
47d0(3): test %r12,%r12
47d3(2): jz 0x1d(%rip)
47d5(2): xor %edi,%edi
47d7(5): call 0x279(%rip)
47dc(2): test %al,%al
47de(2): jnz 0x12(%rip)
47e0(5): movzx 0x0(%r13),%eax
47e5(5): mov $0x1,%ebp
47ea(2): mov %eax,(%rbx)
47ec(4): nop 0x0(%rax)
47f0(5): mov 0x8(%rsp),%rdx
47f5(9): xor $0x28,%rdx
47fe(3): mov %rbp,%rax
4801(2): jnz 0xd(%rip)
4803(4): add $0x18,%rsp
4807(1): pop %rbx
4808(1): pop %rbp
4809(2): pop %r12
480b(2): pop %r13
480d(1): ret near (%rsp)
480e(5): call 0xffffccc2(%rip)

"rpl_vfprintf" :
4820(2): push %r13
4822(2): push %r12
4824(3): mov %rsi,%rax
4827(1): push %rbp
4828(1): push %rbx
4829(3): mov %rdi,%r13
482c(7): sub $0x7f8,%rsp
4833(5): lea 0x10(%rsp),%r12
4838(5): lea 0x8(%rsp),%rsi
483d(9): mov $0x7d0,0x8(%rsp)
4846(9): mov $0x28,%rcx
484f(8): mov %rcx,0x7e8(%rsp)
4857(2): xor %ecx,%ecx
4859(3): mov %r12,%rdi
485c(3): mov %rdx,%rcx
485f(3): mov %rax,%rdx
4862(5): call 0x3be(%rip)
4867(3): test %rax,%rax
486a(5): mov 0x8(%rsp),%rbx
486f(6): jz 0x8f(%rip)
4875(3): mov %r13,%rcx
4878(3): mov %rbx,%rdx
487b(5): mov $0x1,%esi
4880(3): mov %rax,%rdi
4883(3): mov %rax,%rbp
4886(5): call 0xffffce0a(%rip)
488b(3): cmp %rbx,%rax
488e(2): jb 0x42(%rip)
4890(3): cmp %r12,%rbp
4893(2): jz 0xa(%rip)
4895(3): mov %rbp,%rdi
4898(5): call 0xffffcb58(%rip)
489d(7): cmp $0x7fffffff,%rbx
48a4(2): jnbe 0x4f(%rip)
48a6(8): mov 0x7e8(%rsp),%rcx
48ae(9): xor $0x28,%rcx
48b7(2): mov %ebx,%eax
48b9(2): jnz 0x54(%rip)
48bb(7): add $0x7f8,%rsp
48c2(1): pop %rbx
48c3(1): pop %rbp
48c4(2): pop %r12
48c6(2): pop %r13
48c8(1): ret near (%rsp)
48c9(7): nop 0x0(%rax)
48d0(3): cmp %r12,%rbp
48d3(5): mov $0xffffffff,%ebx
48d8(2): jz 0xffffffce(%rip)
48da(5): call 0xffffcb36(%rip)
48df(3): mov (%rax),%r13d
48e2(3): mov %rax,%r12
48e5(3): mov %rbp,%rdi
48e8(5): call 0xffffcb08(%rip)
48ed(4): mov %r13d,(%r12)
48f1(2): jmp 0xffffffb5(%rip)
48f3(5): call 0xffffcb1d(%rip)
48f8(6): mov $0x4b,(%rax)
48fe(3): mov %r13,%rdi
4901(5): mov $0xffffffff,%ebx
4906(5): call 0x30a(%rip)
490b(2): jmp 0xffffff9b(%rip)
490d(5): call 0xffffcbc3(%rip)

"close_stream" :
4920(2): push %r12
4922(1): push %rbp
4923(3): mov %rdi,%rbp
4926(1): push %rbx
4927(5): call 0xffffcb19(%rip)
492c(3): mov 0x0(%rbp),%ebx
492f(3): mov %rbp,%rdi
4932(3): mov %rax,%r12
4935(5): call 0x1bb(%rip)
493a(3): and $0x20,%ebx
493d(2): test %ebx,%ebx
493f(2): jnz 0x19(%rip)
4941(2): test %eax,%eax
4943(2): jz 0xc(%rip)
4945(3): test %r12,%r12
4948(5): mov $0xffffffff,%eax
494d(2): jz 0x3b(%rip)
494f(1): pop %rbx
4950(1): pop %rbp
4951(2): pop %r12
4953(1): ret near (%rsp)
4954(4): nop 0x0(%rax)
4958(2): test %eax,%eax
495a(2): jnz 0x1e(%rip)
495c(5): call 0xffffcab4(%rip)
4961(6): mov $0x0,(%rax)
4967(5): mov $0xffffffff,%eax
496c(1): pop %rbx
496d(1): pop %rbp
496e(2): pop %r12
4970(1): ret near (%rsp)
4971(7): nop 0x0(%rax)
4978(1): pop %rbx
4979(5): mov $0xffffffff,%eax
497e(1): pop %rbp
497f(2): pop %r12
4981(1): ret near (%rsp)
4982(6): nop 0x0(%rax,%rax,1)
4988(5): call 0xffffca88(%rip)
498d(3): cmp $0x9,(%rax)
4990(1): pop %rbx
4991(1): pop %rbp
4992(2): pop %r12
4994(3): setnz %al
4997(3): movzx %al,%eax
499a(2): neg %eax
499c(1): ret near (%rsp)

"last_component" :
49a0(3): movzx (%rdi),%edx
49a3(3): mov %rdi,%rax
49a6(3): cmp $0x2f,%dl
49a9(2): jnz 0x13(%rip)
49ab(5): nop 0x0(%rax,%rax,1)
49b0(4): add $0x1,%rax
49b4(3): movzx (%rax),%edx
49b7(3): cmp $0x2f,%dl
49ba(2): jz 0xfffffff6(%rip)
49bc(2): test %dl,%dl
49be(2): jz 0x3c(%rip)
49c0(3): mov %rax,%rcx
49c3(2): xor %esi,%esi
49c5(2): jmp 0x20(%rip)
49c7(9): nop 0x0(%rax,%rax,1)
49d0(3): test %sil,%sil
49d3(2): jz 0x7(%rip)
49d5(3): mov %rcx,%rax
49d8(2): xor %esi,%esi
49da(4): add $0x1,%rcx
49de(3): movzx (%rcx),%edx
49e1(2): test %dl,%dl
49e3(2): jz 0x17(%rip)
49e5(3): cmp $0x2f,%dl
49e8(2): jnz 0xffffffe8(%rip)
49ea(4): add $0x1,%rcx
49ee(3): movzx (%rcx),%edx
49f1(5): mov $0x1,%esi
49f6(2): test %dl,%dl
49f8(2): jnz 0xffffffed(%rip)
49fa(2): REP ret near (%rsp)

"base_len" :
4a00(1): push %rbx
4a01(3): mov %rdi,%rbx
4a04(5): call 0xffffcaac(%rip)
4a09(4): cmp $0x1,%rax
4a0d(2): jbe 0xd(%rip)
4a0f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
4a14(4): lea 0xffffffff(%rax),%rdx
4a18(2): jz 0x10(%rip)
4a1a(1): pop %rbx
4a1b(1): ret near (%rsp)
4a1c(4): nop 0x0(%rax)
4a20(3): mov %rax,%rdx
4a23(5): nop 0x0(%rax,%rax,1)
4a28(4): cmp $0x1,%rdx
4a2c(2): jz 0x14(%rip)
4a2e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
4a33(4): lea 0xffffffff(%rdx),%rax
4a37(2): jz 0xffffffe9(%rip)
4a39(3): mov %rdx,%rax
4a3c(1): pop %rbx
4a3d(1): ret near (%rsp)
4a3e(2): nop 
4a40(5): mov $0x1,%eax
4a45(1): pop %rbx
4a46(1): ret near (%rsp)

"hard_locale" :
4a50(4): sub $0x8,%rsp
4a54(2): xor %esi,%esi
4a56(5): call 0xffffcbca(%rip)
4a5b(3): mov %rax,%rdx
4a5e(5): mov $0x1,%eax
4a63(3): test %rdx,%rdx
4a66(2): jz 0x1f(%rip)
4a68(7): lea 0x2f71(%rip),%rdi
4a6f(5): mov $0x2,%ecx
4a74(3): mov %rdx,%rsi
4a77(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4a79(3): setnbe %cl
4a7c(3): sbb $0x0,%cl
4a7f(2): xor %eax,%eax
4a81(2): test %cl,%cl
4a83(2): jnz 0xd(%rip)
4a85(4): add $0x8,%rsp
4a89(1): ret near (%rsp)
4a8a(6): nop 0x0(%rax,%rax,1)
4a90(7): lea 0x2f4b(%rip),%rdi
4a97(5): mov $0x6,%ecx
4a9c(3): mov %rdx,%rsi
4a9f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4aa1(3): setnbe %al
4aa4(2): sbb $0x0,%al
4aa6(2): test %al,%al
4aa8(3): setnz %al
4aab(4): add $0x8,%rsp
4aaf(1): ret near (%rsp)

"locale_charset" :
4ab0(4): sub $0x8,%rsp
4ab4(5): mov $0xe,%edi
4ab9(5): call 0xffffcb27(%rip)
4abe(3): test %rax,%rax
4ac1(2): jz 0x1f(%rip)
4ac3(3): cmp $0x0,(%rax)
4ac6(7): lea 0x2f1b(%rip),%rdx
4acd(4): cmove %rdx,%rax
4ad1(4): add $0x8,%rsp
4ad5(1): ret near (%rsp)
4ad6(a): nop 0x0(%rax,%rax,1)
4ae0(7): lea 0x2f01(%rip),%rax
4ae7(4): add $0x8,%rsp
4aeb(1): ret near (%rsp)

"rpl_fclose" :
4af0(2): push %r12
4af2(1): push %rbp
4af3(1): push %rbx
4af4(3): mov %rdi,%rbx
4af7(5): call 0xffffcaa9(%rip)
4afc(2): test %eax,%eax
4afe(3): mov %rbx,%rdi
4b01(2): js 0x56(%rip)
4b03(5): call 0xffffcaed(%rip)
4b08(2): test %eax,%eax
4b0a(2): jnz 0x2e(%rip)
4b0c(3): mov %rbx,%rdi
4b0f(5): call 0x61(%rip)
4b14(2): test %eax,%eax
4b16(2): jz 0x3e(%rip)
4b18(5): call 0xffffc8f8(%rip)
4b1d(3): mov (%rax),%r12d
4b20(3): mov %rbx,%rdi
4b23(3): mov %rax,%rbp
4b26(5): call 0xffffc93a(%rip)
4b2b(3): test %r12d,%r12d
4b2e(2): jnz 0x32(%rip)
4b30(1): pop %rbx
4b31(1): pop %rbp
4b32(2): pop %r12
4b34(1): ret near (%rsp)
4b35(3): nop (%rax)
4b38(3): mov %rbx,%rdi
4b3b(5): call 0xffffca65(%rip)
4b40(2): xor %esi,%esi
4b42(5): mov $0x1,%edx
4b47(2): mov %eax,%edi
4b49(5): call 0xffffc9d7(%rip)
4b4e(4): cmp $0xffffffff,%rax
4b52(2): jnz 0xffffffba(%rip)
4b54(3): mov %rbx,%rdi
4b57(1): pop %rbx
4b58(1): pop %rbp
4b59(2): pop %r12
4b5b(5): jmp 0xffffc905(%rip)
4b60(4): mov %r12d,0x0(%rbp)
4b64(5): mov $0xffffffff,%eax
4b69(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4b70(3): test %rdi,%rdi
4b73(1): push %rbx
4b74(3): mov %rdi,%rbx
4b77(2): jz 0x13(%rip)
4b79(5): call 0xffffca77(%rip)
4b7e(2): test %eax,%eax
4b80(2): jz 0xa(%rip)
4b82(6): test $0x100,(%rbx)
4b88(2): jnz 0x10(%rip)
4b8a(3): mov %rbx,%rdi
4b8d(1): pop %rbx
4b8e(5): jmp 0xffffca42(%rip)
4b93(5): nop 0x0(%rax,%rax,1)
4b98(3): mov %rbx,%rdi
4b9b(5): mov $0x1,%edx
4ba0(2): xor %esi,%esi
4ba2(5): call 0xe(%rip)
4ba7(3): mov %rbx,%rdi
4baa(1): pop %rbx
4bab(5): jmp 0xffffca25(%rip)

"rpl_fseeko" :
4bb0(4): mov 0x8(%rdi),%rax
4bb4(4): cmp %rax,0x10(%rdi)
4bb8(2): jz 0x8(%rip)
4bba(5): jmp 0xffffca96(%rip)
4bbf(1): nop 
4bc0(4): mov 0x20(%rdi),%rax
4bc4(4): cmp %rax,0x28(%rdi)
4bc8(2): jnz 0xfffffff2(%rip)
4bca(5): cmp $0x0,0x48(%rdi)
4bcf(2): jnz 0xffffffeb(%rip)
4bd1(2): push %r12
4bd3(1): push %rbp
4bd4(3): mov %edx,%r12d
4bd7(1): push %rbx
4bd8(3): mov %rsi,%rbp
4bdb(3): mov %rdi,%rbx
4bde(5): call 0xffffc9c2(%rip)
4be3(3): mov %r12d,%edx
4be6(3): mov %rbp,%rsi
4be9(2): mov %eax,%edi
4beb(5): call 0xffffc935(%rip)
4bf0(4): cmp $0xffffffff,%rax
4bf4(2): jz 0xe(%rip)
4bf6(3): and $0xef,(%rbx)
4bf9(7): mov %rax,0x90(%rbx)
4c00(2): xor %eax,%eax
4c02(1): pop %rbx
4c03(1): pop %rbp
4c04(2): pop %r12
4c06(1): ret near (%rsp)

"fseterr" :
4c10(3): or $0x20,(%rdi)
4c13(1): ret near (%rsp)

"vasnprintf" :
4c20(1): push %rbp
4c21(3): mov %rsp,%rbp
4c24(2): push %r15
4c26(2): push %r14
4c28(2): push %r13
4c2a(2): push %r12
4c2c(7): lea 0xfffffc50(%rbp),%r14
4c33(1): push %rbx
4c34(3): mov %rdx,%rbx
4c37(3): mov %rcx,%r12
4c3a(3): mov %r14,%rdx
4c3d(7): sub $0x408,%rsp
4c44(7): mov %rsi,0xfffffbe8(%rbp)
4c4b(7): lea 0xfffffd40(%rbp),%rsi
4c52(7): mov %rdi,0xfffffc18(%rbp)
4c59(3): mov %rbx,%rdi
4c5c(7): mov %r14,0xfffffbf0(%rbp)
4c63(9): mov $0x28,%rax
4c6c(4): mov %rax,0xffffffc8(%rbp)
4c70(2): xor %eax,%eax
4c72(7): mov %rsi,0xfffffbf8(%rbp)
4c79(5): call 0x12c7(%rip)
4c7e(2): test %eax,%eax
4c80(6): js 0xe68(%rip)
4c86(3): mov %r14,%rsi
4c89(3): mov %r12,%rdi
4c8c(5): call 0x10b4(%rip)
4c91(2): test %eax,%eax
4c93(6): js 0xebd(%rip)
4c99(7): mov 0xfffffd50(%rbp),%rax
4ca0(7): mov $0xffffffff,%rdx
4ca7(4): add $0x7,%rax
4cab(4): cmp $0x6,%rax
4caf(4): cmovbe %rdx,%rax
4cb3(7): add 0xfffffd58(%rbp),%rax
4cba(6): jb 0xa2e(%rip)
4cc0(3): mov %rax,%rdi
4cc3(3): xor %r8d,%r8d
4cc6(4): add $0x6,%rdi
4cca(4): setb %r8b
4cce(6): jb 0xa1a(%rip)
4cd4(7): cmp $0xf9f,%rdi
4cdb(6): jbe 0x14d(%rip)
4ce1(4): cmp $0xffffffff,%rdi
4ce5(7): mov %r8,0xfffffc38(%rbp)
4cec(6): jz 0x9fc(%rip)
4cf2(5): call 0xffffc8ce(%rip)
4cf7(3): test %rax,%rax
4cfa(7): mov %rax,0xfffffc28(%rbp)
4d01(6): jz 0x9e7(%rip)
4d07(7): mov 0xfffffc38(%rbp),%r8
4d0e(7): mov %rax,0xfffffbe0(%rbp)
4d15(3): xor %r12d,%r12d
4d18(8): cmp $0x0,0xfffffc18(%rbp)
4d20(2): jz 0xc(%rip)
4d22(7): mov 0xfffffbe8(%rbp),%rax
4d29(3): mov (%rax),%r12
4d2c(7): mov 0xfffffd48(%rbp),%r13
4d33(7): lea 0xfffffc44(%rbp),%rax
4d3a(7): mov 0xfffffc18(%rbp),%r15
4d41(b): mov $0x0,0xfffffc00(%rbp)
4d4c(7): mov %rax,0xfffffc10(%rbp)
4d53(3): mov %rbx,%rax
4d56(3): mov %r8,%rbx
4d59(4): mov 0x0(%r13),%rcx
4d5d(3): mov %rax,%r8
4d60(3): cmp %r8,%rcx
4d63(6): jz 0x96e(%rip)
4d69(3): sub %r8,%rcx
4d6c(3): mov %rbx,%rax
4d6f(3): add %rcx,%rax
4d72(3): mov %rax,%r14
4d75(6): jnb 0xe3(%rip)
4d7b(4): cmp $0xffffffff,%r12
4d7f(6): jz 0xad1(%rip)
4d85(5): call 0xffffc68b(%rip)
4d8a(7): mov %rax,0xfffffc38(%rbp)
4d91(7): cmp 0xfffffc18(%rbp),%r15
4d98(2): jz 0xb(%rip)
4d9a(3): test %r15,%r15
4d9d(6): jnz 0xae3(%rip)
4da3(7): mov 0xfffffbe0(%rbp),%rax
4daa(3): test %rax,%rax
4dad(2): jz 0xa(%rip)
4daf(3): mov %rax,%rdi
4db2(5): call 0xffffc63e(%rip)
4db7(7): mov 0xfffffbf8(%rbp),%rax
4dbe(7): mov 0xfffffd48(%rbp),%rdi
4dc5(4): add $0x20,%rax
4dc9(3): cmp %rax,%rdi
4dcc(2): jz 0x7(%rip)
4dce(5): call 0xffffc622(%rip)
4dd3(7): mov 0xfffffbf0(%rbp),%rax
4dda(7): mov 0xfffffc58(%rbp),%rdi
4de1(4): add $0x10,%rax
4de5(3): cmp %rax,%rdi
4de8(2): jz 0x7(%rip)
4dea(5): call 0xffffc606(%rip)
4def(7): mov 0xfffffc38(%rbp),%rax
4df6(3): xor %r15d,%r15d
4df9(6): mov $0xc,(%rax)
4dff(4): mov 0xffffffc8(%rbp),%rdi
4e03(9): xor $0x28,%rdi
4e0c(3): mov %r15,%rax
4e0f(6): jnz 0xf08(%rip)
4e15(4): lea 0xffffffd8(%rbp),%rsp
4e19(1): pop %rbx
4e1a(2): pop %r12
4e1c(2): pop %r13
4e1e(2): pop %r14
4e20(2): pop %r15
4e22(1): pop %rbp
4e23(1): ret near (%rsp)
4e24(4): nop 0x0(%rax)
4e28(4): add $0x24,%rax
4e2c(b): mov $0x0,0xfffffbe0(%rbp)
4e37(4): and $0xfffffff0,%rax
4e3b(3): sub %rax,%rsp
4e3e(5): lea 0xf(%rsp),%rax
4e43(4): and $0xfffffff0,%rax
4e47(7): mov %rax,0xfffffc28(%rbp)
4e4e(5): jmp 0xfffffec7(%rip)
4e53(5): nop 0x0(%rax,%rax,1)
4e58(3): cmp %rax,%r12
4e5b(2): jnb 0x69(%rip)
4e5d(3): test %r12,%r12
4e60(6): jnz 0x930(%rip)
4e66(4): cmp $0xc,%rax
4e6a(6): jnbe 0x938(%rip)
4e70(6): mov $0xc,%r12d
4e76(7): cmp 0xfffffc18(%rbp),%r15
4e7d(3): setz %dl
4e80(3): test %r15,%r15
4e83(6): jz 0x945(%rip)
4e89(2): test %dl,%dl
4e8b(6): jnz 0x93d(%rip)
4e91(3): mov %r12,%rsi
4e94(3): mov %r15,%rdi
4e97(7): mov %r8,0xfffffc30(%rbp)
4e9e(7): mov %rcx,0xfffffc38(%rbp)
4ea5(5): call 0xffffc76b(%rip)
4eaa(3): test %rax,%rax
4ead(7): mov 0xfffffc38(%rbp),%rcx
4eb4(7): mov 0xfffffc30(%rbp),%r8
4ebb(6): jz 0x9b0(%rip)
4ec1(3): mov %rax,%r15
4ec4(4): lea 0x0(%r15,%rbx,1),%rdi
4ec8(3): mov %rcx,%rdx
4ecb(3): mov %r8,%rsi
4ece(5): call 0xffffc6c2(%rip)
4ed3(7): mov 0xfffffc00(%rbp),%rax
4eda(7): cmp %rax,0xfffffd40(%rbp)
4ee1(6): jz 0xcba(%rip)
4ee7(5): movzx 0x48(%r13),%edx
4eec(4): mov 0x50(%r13),%rax
4ef0(3): cmp $0x25,%dl
4ef3(6): jz 0x795(%rip)
4ef9(4): cmp $0xffffffff,%rax
4efd(6): jz 0xc49(%rip)
4f03(7): mov 0xfffffc58(%rbp),%r8
4f0a(4): shl/sal $0x5,%rax
4f0e(3): add %r8,%rax
4f11(3): cmp $0x6e,%dl
4f14(2): mov (%rax),%edi
4f16(6): mov %edi,0xfffffc30(%rbp)
4f1c(6): jz 0x7e4(%rip)
4f22(4): mov 0x10(%r13),%eax
4f26(7): mov 0xfffffc28(%rbp),%rdi
4f2d(2): test $0x1,%al
4f2f(3): mov $0x25,(%rdi)
4f32(4): lea 0x1(%rdi),%rbx
4f36(2): jz 0x11(%rip)
4f38(7): mov 0xfffffc28(%rbp),%rdi
4f3f(4): lea 0x2(%rdi),%rbx
4f43(4): mov $0x27,0x1(%rdi)
4f47(2): test $0x2,%al
4f49(2): jz 0x9(%rip)
4f4b(3): mov $0x2d,(%rbx)
4f4e(4): add $0x1,%rbx
4f52(2): test $0x4,%al
4f54(2): jz 0x9(%rip)
4f56(3): mov $0x2b,(%rbx)
4f59(4): add $0x1,%rbx
4f5d(2): test $0x8,%al
4f5f(2): jz 0x9(%rip)
4f61(3): mov $0x20,(%rbx)
4f64(4): add $0x1,%rbx
4f68(2): test $0x10,%al
4f6a(2): jz 0x9(%rip)
4f6c(3): mov $0x23,(%rbx)
4f6f(4): add $0x1,%rbx
4f73(2): test $0x40,%al
4f75(2): jz 0x9(%rip)
4f77(3): mov $0x49,(%rbx)
4f7a(4): add $0x1,%rbx
4f7e(2): test $0x20,%al
4f80(2): jz 0x9(%rip)
4f82(3): mov $0x30,(%rbx)
4f85(4): add $0x1,%rbx
4f89(4): mov 0x18(%r13),%rsi
4f8d(4): mov 0x20(%r13),%rdx
4f91(3): cmp %rdx,%rsi
4f94(2): jz 0x32(%rip)
4f96(3): mov %rdx,%rcx
4f99(3): mov %rbx,%rdi
4f9c(7): mov %r8,0xfffffc20(%rbp)
4fa3(3): sub %rsi,%rcx
4fa6(3): mov %rcx,%rdx
4fa9(7): mov %rcx,0xfffffc38(%rbp)
4fb0(5): call 0xffffc5e0(%rip)
4fb5(7): mov 0xfffffc38(%rbp),%rcx
4fbc(7): mov 0xfffffc20(%rbp),%r8
4fc3(3): add %rcx,%rbx
4fc6(4): mov 0x30(%r13),%rsi
4fca(4): mov 0x38(%r13),%rdx
4fce(3): cmp %rdx,%rsi
4fd1(2): jz 0x32(%rip)
4fd3(3): mov %rdx,%rcx
4fd6(3): mov %rbx,%rdi
4fd9(7): mov %r8,0xfffffc20(%rbp)
4fe0(3): sub %rsi,%rcx
4fe3(3): mov %rcx,%rdx
4fe6(7): mov %rcx,0xfffffc38(%rbp)
4fed(5): call 0xffffc5a3(%rip)
4ff2(7): mov 0xfffffc38(%rbp),%rcx
4ff9(7): mov 0xfffffc20(%rbp),%r8
5000(3): add %rcx,%rbx
5003(6): mov 0xfffffc30(%rbp),%edi
5009(3): cmp $0x10,%edi
500c(2): jnbe 0x2f(%rip)
500e(5): mov $0x1,%eax
5013(2): mov %edi,%ecx
5015(3): shl/sal %cl,%rax
5018(5): test $0x14180,%eax
501d(2): jnz 0x17(%rip)
501f(3): test $0x10,%ah
5022(6): jnz 0x95e(%rip)
5028(3): test $0x6,%ah
502b(2): jz 0x10(%rip)
502d(3): mov $0x6c,(%rbx)
5030(4): add $0x1,%rbx
5034(3): mov $0x6c,(%rbx)
5037(4): add $0x1,%rbx
503b(5): movzx 0x48(%r13),%eax
5040(4): mov $0x0,0x1(%rbx)
5044(2): mov %al,(%rbx)
5046(4): mov 0x28(%r13),%rax
504a(4): cmp $0xffffffff,%rax
504e(6): jz 0x732(%rip)
5054(4): shl/sal $0x5,%rax
5058(3): add %r8,%rax
505b(3): cmp $0x5,(%rax)
505e(6): jnz 0xae8(%rip)
5064(3): mov 0x10(%rax),%eax
5067(a): mov $0x1,0xfffffc20(%rbp)
5071(6): mov %eax,0xfffffc48(%rbp)
5077(4): mov 0x40(%r13),%rax
507b(4): cmp $0xffffffff,%rax
507f(2): jz 0x2d(%rip)
5081(4): shl/sal $0x5,%rax
5085(3): add %rax,%r8
5088(4): cmp $0x5,(%r8)
508c(6): jnz 0xaba(%rip)
5092(6): mov 0xfffffc20(%rbp),%eax
5098(4): mov 0x10(%r8),%edx
509c(7): mov %edx,0xfffffc48(%rbp,%rax,4)
50a3(3): lea 0x1(%rax),%eax
50a6(6): mov %eax,0xfffffc20(%rbp)
50ac(3): mov %r14,%rax
50af(2): xor %edx,%edx
50b1(4): add $0x2,%rax
50b5(6): jb 0xc67(%rip)
50bb(3): cmp %rax,%r12
50be(2): jnb 0x4d(%rip)
50c0(3): test %r12,%r12
50c3(6): jnz 0x825(%rip)
50c9(4): cmp $0xc,%rax
50cd(6): jnbe 0x833(%rip)
50d3(6): mov $0xc,%r12d
50d9(7): cmp 0xfffffc18(%rbp),%r15
50e0(3): setz %dl
50e3(3): test %r15,%r15
50e6(6): jz 0x84a(%rip)
50ec(2): test %dl,%dl
50ee(6): jnz 0x842(%rip)
50f4(3): mov %r12,%rsi
50f7(3): mov %r15,%rdi
50fa(5): call 0xffffc516(%rip)
50ff(3): test %rax,%rax
5102(6): jz 0xfffffc83(%rip)
5108(3): mov %rax,%r15
510b(5): mov $0x0,0x0(%r15,%r14,1)
5110(5): call 0xffffc300(%rip)
5115(7): mov %rax,0xfffffc38(%rbp)
511c(2): mov (%rax),%eax
511e(7): mov %rbx,0xfffffc08(%rbp)
5125(6): mov %eax,0xfffffbdc(%rbp)
512b(5): nop 0x0(%rax,%rax,1)
5130(7): mov 0xfffffc38(%rbp),%rax
5137(3): mov %r12,%rbx
513a(6): mov $0x7fffffff,%r10d
5140(3): sub %r14,%rbx
5143(a): mov $0xffffffff,0xfffffc44(%rbp)
514d(7): cmp $0x7fffffff,%rbx
5154(6): mov $0x0,(%rax)
515a(6): mov 0xfffffc30(%rbp),%eax
5160(4): cmovbe %rbx,%r10
5164(3): cmp $0x11,%eax
5167(6): jnbe 0x9df(%rip)
516d(7): lea 0x287c(%rip),%rsi
5174(4): movsxd 0x0(%rsi,%rax,4),%rax
5178(3): add %rsi,%rax
517b(2): jmp %rax
517d(3): nop (%rax)
5180(4): mov 0x50(%r13),%rax
5184(4): lea 0x0(%r15,%r14,1),%rdi
5188(4): shl/sal $0x5,%rax
518c(7): add 0xfffffc58(%rbp),%rax
5193(4): mov 0x10(%rax),%r9
5197(6): mov 0xfffffc20(%rbp),%eax
519d(3): cmp $0x1,%eax
51a0(6): jz 0x4c8(%rip)
51a6(3): cmp $0x2,%eax
51a9(6): jz 0x4a7(%rip)
51af(4): sub $0x8,%rsp
51b3(6): push 0xfffffc10(%rbp)
51b9(7): mov 0xfffffc28(%rbp),%r8
51c0(3): mov %r10,%rsi
51c3(7): mov $0xffffffff,%rcx
51ca(5): mov $0x1,%edx
51cf(2): xor %eax,%eax
51d1(7): mov %r10,0xfffffbd0(%rbp)
51d8(5): call 0xffffc208(%rip)
51dd(1): pop %rsi
51de(1): pop %rdi
51df(7): mov 0xfffffbd0(%rbp),%r10
51e6(6): mov 0xfffffc44(%rbp),%ecx
51ec(2): test %ecx,%ecx
51ee(6): js 0x13e(%rip)
51f4(3): movsxd %ecx,%rdx
51f7(3): cmp %r10,%rdx
51fa(2): jnb 0x10(%rip)
51fc(3): add %r15,%rdx
51ff(5): cmp $0x0,0x0(%rdx,%r14,1)
5204(6): jnz 0x942(%rip)
520a(2): cmp %eax,%ecx
520c(2): jnl 0xa(%rip)
520e(6): mov %eax,0xfffffc44(%rbp)
5214(2): mov %eax,%ecx
5216(3): lea 0x1(%rcx),%eax
5219(3): cmp %r10,%rax
521c(6): jb 0x834(%rip)
5222(7): cmp $0x7ffffffe,%rbx
5229(6): jnbe 0x847(%rip)
522f(4): lea 0x0(%r12,%r12,1),%rsi
5233(3): lea 0x2(%rcx),%edx
5236(3): test %r12,%r12
5239(7): mov $0xffffffff,%rax
5240(4): cmovns %rsi,%rax
5244(3): add %r14,%rdx
5247(6): jb 0xac1(%rip)
524d(3): cmp %rdx,%rax
5250(4): cmovnae %rdx,%rax
5254(3): cmp %rax,%r12
5257(6): jnb 0xfffffed9(%rip)
525d(3): test %r12,%r12
5260(6): js 0xfffffb31(%rip)
5266(3): cmp %rax,%rsi
5269(3): mov %rsi,%r12
526c(2): jnb 0xf(%rip)
526e(4): cmp $0xffffffff,%rax
5272(6): jz 0xfffffb1f(%rip)
5278(3): mov %rax,%r12
527b(7): cmp 0xfffffc18(%rbp),%r15
5282(3): setz %bl
5285(3): test %r15,%r15
5288(6): jz 0x388(%rip)
528e(2): test %bl,%bl
5290(6): jnz 0x380(%rip)
5296(3): mov %r12,%rsi
5299(3): mov %r15,%rdi
529c(5): call 0xffffc374(%rip)
52a1(3): test %rax,%rax
52a4(6): jz 0xfffffaed(%rip)
52aa(3): mov %rax,%r15
52ad(5): jmp 0xfffffe83(%rip)
52b2(6): nop 0x0(%rax,%rax,1)
52b8(4): mov 0x50(%r13),%rax
52bc(4): lea 0x0(%r15,%r14,1),%rdi
52c0(4): shl/sal $0x5,%rax
52c4(7): add 0xfffffc58(%rbp),%rax
52cb(4): mov 0x10(%rax),%r9d
52cf(6): mov 0xfffffc20(%rbp),%eax
52d5(3): cmp $0x1,%eax
52d8(6): jz 0x238(%rip)
52de(3): cmp $0x2,%eax
52e1(6): jz 0x277(%rip)
52e7(4): sub $0x8,%rsp
52eb(6): push 0xfffffc10(%rbp)
52f1(7): mov 0xfffffc28(%rbp),%r8
52f8(7): mov $0xffffffff,%rcx
52ff(5): mov $0x1,%edx
5304(3): mov %r10,%rsi
5307(2): xor %eax,%eax
5309(7): mov %r10,0xfffffbd0(%rbp)
5310(5): call 0xffffc0d0(%rip)
5315(1): pop %rdx
5316(1): pop %rcx
5317(6): mov 0xfffffc44(%rbp),%ecx
531d(7): mov 0xfffffbd0(%rbp),%r10
5324(2): test %ecx,%ecx
5326(6): jns 0xfffffece(%rip)
532c(7): mov 0xfffffc08(%rbp),%rdi
5333(4): cmp $0x0,0x1(%rdi)
5337(6): jnz 0x341(%rip)
533d(2): test %eax,%eax
533f(6): jns 0xfffffecf(%rip)
5345(7): mov 0xfffffc38(%rbp),%rax
534c(2): mov (%rax),%ebx
534e(2): test %ebx,%ebx
5350(2): jnz 0x20(%rip)
5352(5): movzx 0x48(%r13),%eax
5357(5): mov $0x16,%ebx
535c(3): and $0xef,%eax
535f(2): cmp $0x63,%al
5361(5): mov $0x54,%eax
5366(3): cmove %eax,%ebx
5369(7): nop 0x0(%rax)
5370(7): cmp 0xfffffc18(%rbp),%r15
5377(2): jz 0xb(%rip)
5379(3): test %r15,%r15
537c(6): jnz 0x7b0(%rip)
5382(7): mov 0xfffffbe0(%rbp),%rax
5389(3): test %rax,%rax
538c(2): jz 0xa(%rip)
538e(3): mov %rax,%rdi
5391(5): call 0xffffc05f(%rip)
5396(7): mov 0xfffffbf8(%rbp),%rax
539d(7): mov 0xfffffd48(%rbp),%rdi
53a4(4): add $0x20,%rax
53a8(3): cmp %rax,%rdi
53ab(2): jz 0x7(%rip)
53ad(5): call 0xffffc043(%rip)
53b2(7): mov 0xfffffbf0(%rbp),%rax
53b9(7): mov 0xfffffc58(%rbp),%rdi
53c0(4): add $0x10,%rax
53c4(3): cmp %rax,%rdi
53c7(2): jz 0x7(%rip)
53c9(5): call 0xffffc027(%rip)
53ce(7): mov 0xfffffc38(%rbp),%rax
53d5(3): xor %r15d,%r15d
53d8(2): mov %ebx,(%rax)
53da(5): jmp 0xfffffa25(%rip)
53df(1): nop 
53e0(4): mov 0x50(%r13),%rax
53e4(4): lea 0x0(%r15,%r14,1),%rdi
53e8(4): shl/sal $0x5,%rax
53ec(7): add 0xfffffc58(%rbp),%rax
53f3(3): fld 0x10(%rax),%st0
53f6(6): mov 0xfffffc20(%rbp),%eax
53fc(3): cmp $0x1,%eax
53ff(6): jz 0x631(%rip)
5405(3): cmp $0x2,%eax
5408(6): jnz 0x4c8(%rip)
540e(6): mov 0xfffffc4c(%rbp),%eax
5414(4): sub $0x8,%rsp
5418(6): push 0xfffffc10(%rbp)
541e(7): mov 0xfffffc48(%rbp),%r9d
5425(7): mov 0xfffffc28(%rbp),%r8
542c(3): mov %r10,%rsi
542f(4): sub $0x18,%rsp
5433(7): mov $0xffffffff,%rcx
543a(5): mov $0x1,%edx
543f(4): fstp %st0,0x8(%rsp)
5443(1): push %rax
5444(2): xor %eax,%eax
5446(7): mov %r10,0xfffffbd0(%rbp)
544d(5): call 0xffffbf93(%rip)
5452(4): add $0x30,%rsp
5456(7): mov 0xfffffbd0(%rbp),%r10
545d(5): jmp 0xfffffd89(%rip)
5462(6): nop 0x0(%rax,%rax,1)
5468(4): mov 0x50(%r13),%rax
546c(4): lea 0x0(%r15,%r14,1),%rdi
5470(4): shl/sal $0x5,%rax
5474(7): add 0xfffffc58(%rbp),%rax
547b(5): movsd 0x10(%rax),%xmm0
5480(6): mov 0xfffffc20(%rbp),%eax
5486(3): cmp $0x1,%eax
5489(6): jz 0x597(%rip)
548f(3): cmp $0x2,%eax
5492(6): jnz 0x3fe(%rip)
5498(6): mov 0xfffffc4c(%rbp),%eax
549e(6): push 0xfffffc10(%rbp)
54a4(1): push %rax
54a5(7): mov 0xfffffc48(%rbp),%r9d
54ac(7): mov 0xfffffc28(%rbp),%r8
54b3(3): mov %r10,%rsi
54b6(7): mov $0xffffffff,%rcx
54bd(5): mov $0x1,%edx
54c2(5): mov $0x1,%eax
54c7(7): mov %r10,0xfffffbd0(%rbp)
54ce(5): call 0xffffbf12(%rip)
54d3(2): pop %r8
54d5(7): mov 0xfffffbd0(%rbp),%r10
54dc(2): pop %r9
54de(5): jmp 0xfffffd08(%rip)
54e3(5): nop 0x0(%rax,%rax,1)
54e8(4): mov 0x50(%r13),%rax
54ec(4): lea 0x0(%r15,%r14,1),%rdi
54f0(4): shl/sal $0x5,%rax
54f4(7): add 0xfffffc58(%rbp),%rax
54fb(5): movzx 0x10(%rax),%r9d
5500(6): mov 0xfffffc20(%rbp),%eax
5506(3): cmp $0x1,%eax
5509(6): jnz 0xfffffdd5(%rip)
550f(1): nop 
5510(6): push 0xfffffc10(%rbp)
5516(2): push %r9
5518(7): mov 0xfffffc48(%rbp),%r9d
551f(5): jmp 0xfffffdd2(%rip)
5524(4): nop 0x0(%rax)
5528(4): mov 0x50(%r13),%rax
552c(4): lea 0x0(%r15,%r14,1),%rdi
5530(4): shl/sal $0x5,%rax
5534(7): add 0xfffffc58(%rbp),%rax
553b(5): movsx 0x10(%rax),%r9d
5540(6): mov 0xfffffc20(%rbp),%eax
5546(3): cmp $0x1,%eax
5549(2): jz 0xffffffc7(%rip)
554b(3): cmp $0x2,%eax
554e(6): jnz 0xfffffd99(%rip)
5554(4): nop 0x0(%rax)
5558(4): sub $0x8,%rsp
555c(6): push 0xfffffc10(%rbp)
5562(2): push %r9
5564(6): mov 0xfffffc4c(%rbp),%eax
556a(1): push %rax
556b(7): mov 0xfffffc48(%rbp),%r9d
5572(7): mov 0xfffffc28(%rbp),%r8
5579(3): mov %r10,%rsi
557c(7): mov $0xffffffff,%rcx
5583(5): mov $0x1,%edx
5588(2): xor %eax,%eax
558a(7): mov %r10,0xfffffbd0(%rbp)
5591(5): call 0xffffbe4f(%rip)
5596(4): add $0x20,%rsp
559a(7): mov 0xfffffbd0(%rbp),%r10
55a1(5): jmp 0xfffffc45(%rip)
55a6(a): nop 0x0(%rax,%rax,1)
55b0(4): mov 0x50(%r13),%rax
55b4(4): lea 0x0(%r15,%r14,1),%rdi
55b8(4): shl/sal $0x5,%rax
55bc(7): add 0xfffffc58(%rbp),%rax
55c3(5): movzx 0x10(%rax),%r9d
55c8(6): mov 0xfffffc20(%rbp),%eax
55ce(3): cmp $0x1,%eax
55d1(6): jnz 0xfffffd0d(%rip)
55d7(5): jmp 0xffffff39(%rip)
55dc(4): nop 0x0(%rax)
55e0(4): mov 0x50(%r13),%rax
55e4(4): lea 0x0(%r15,%r14,1),%rdi
55e8(4): shl/sal $0x5,%rax
55ec(7): add 0xfffffc58(%rbp),%rax
55f3(5): movsx 0x10(%rax),%r9d
55f8(6): mov 0xfffffc20(%rbp),%eax
55fe(3): cmp $0x1,%eax
5601(6): jnz 0xfffffcdd(%rip)
5607(5): jmp 0xffffff09(%rip)
560c(4): nop 0x0(%rax)
5610(3): mov %r12,%rdi
5613(5): call 0xffffbfad(%rip)
5618(3): test %rax,%rax
561b(3): mov %rax,%rcx
561e(6): jz 0xfffff773(%rip)
5624(3): test %r14,%r14
5627(6): jz 0xb9(%rip)
562d(2): test %bl,%bl
562f(6): jz 0xb1(%rip)
5635(3): mov %r15,%rsi
5638(3): mov %r14,%rdx
563b(3): mov %rax,%rdi
563e(5): call 0xffffbf52(%rip)
5643(3): mov %rax,%r15
5646(5): jmp 0xfffffaea(%rip)
564b(5): nop 0x0(%rax,%rax,1)
5650(4): sub $0x8,%rsp
5654(6): push 0xfffffc10(%rbp)
565a(2): push %r9
565c(5): jmp 0xffffff08(%rip)
5661(7): nop 0x0(%rax)
5668(6): push 0xfffffc10(%rbp)
566e(2): push %r9
5670(5): jmp 0xfffffea8(%rip)
5675(3): nop (%rax)
5678(4): mov $0x0,0x1(%rdi)
567c(5): jmp 0xfffffab4(%rip)
5681(7): nop 0x0(%rax)
5688(4): cmp $0xffffffff,%rax
568c(6): jnz 0x4ba(%rip)
5692(3): mov %r14,%rax
5695(4): add $0x1,%rax
5699(3): mov %rax,%rbx
569c(6): jnb 0x8c(%rip)
56a2(4): cmp $0xffffffff,%r12
56a6(6): jnz 0xfffff6df(%rip)
56ac(3): mov %r12,%rbx
56af(5): mov $0x25,0x0(%r15,%r14,1)
56b4(4): mov 0x8(%r13),%r8
56b8(4): add $0x58,%r13
56bc(4): mov 0x0(%r13),%rcx
56c0(8): add $0x1,0xfffffc00(%rbp)
56c8(3): cmp %r8,%rcx
56cb(6): jnz 0xfffff69e(%rip)
56d1(3): mov %rbx,%r14
56d4(5): jmp 0xfffff7ff(%rip)
56d9(7): nop 0x0(%rax)
56e0(3): mov %rcx,%r15
56e3(5): jmp 0xfffffa4d(%rip)
56e8(5): call 0xffffbd28(%rip)
56ed(7): mov %rax,0xfffffc38(%rbp)
56f4(5): jmp 0xfffff6c3(%rip)
56f9(7): nop 0x0(%rax)
5700(2): mov %edi,%edx
5702(3): sub $0x12,%edx
5705(3): cmp $0x4,%edx
5708(6): jnbe 0x43e(%rip)
570e(7): lea 0x2323(%rip),%rdi
5715(4): mov 0x10(%rax),%rax
5719(4): movsxd 0x0(%rdi,%rdx,4),%rdx
571d(3): add %rdi,%rdx
5720(2): jmp %rdx
5722(6): nop 0x0(%rax,%rax,1)
5728(3): cmp %rax,%r12
572b(2): jnb 0xffffff84(%rip)
572d(3): test %r12,%r12
5730(6): jnz 0x3d0(%rip)
5736(4): cmp $0xc,%rax
573a(6): jnbe 0x3d8(%rip)
5740(6): mov $0xc,%r12d
5746(7): cmp 0xfffffc18(%rbp),%r15
574d(3): setz %dl
5750(3): test %r15,%r15
5753(6): jz 0x26d(%rip)
5759(2): test %dl,%dl
575b(6): jnz 0x265(%rip)
5761(3): mov %r12,%rsi
5764(3): mov %r15,%rdi
5767(5): call 0xffffbea9(%rip)
576c(3): test %rax,%rax
576f(6): jz 0xfc(%rip)
5775(3): mov %rax,%r15
5778(5): jmp 0xffffff37(%rip)
577d(3): nop (%rax)
5780(a): mov $0x0,0xfffffc20(%rbp)
578a(5): jmp 0xfffff8ed(%rip)
578f(1): nop 
5790(6): js 0xfffff5f5(%rip)
5796(3): add %r12,%r12
5799(3): cmp %rax,%r12
579c(6): jnb 0xfffff6da(%rip)
57a2(4): cmp $0xffffffff,%rax
57a6(6): jz 0xfffff5df(%rip)
57ac(7): cmp 0xfffffc18(%rbp),%r15
57b3(3): mov %rax,%r12
57b6(3): setz %dl
57b9(3): test %r15,%r15
57bc(6): jnz 0xfffff6cd(%rip)
57c2(6): nop 0x0(%rax,%rax,1)
57c8(3): mov %r12,%rdi
57cb(7): mov %r8,0xfffffc20(%rbp)
57d2(6): mov %dl,0xfffffc30(%rbp)
57d8(7): mov %rcx,0xfffffc38(%rbp)
57df(5): call 0xffffbde1(%rip)
57e4(3): test %rax,%rax
57e7(3): mov %rax,%r9
57ea(7): mov 0xfffffc38(%rbp),%rcx
57f1(7): movzx 0xfffffc30(%rbp),%edx
57f8(7): mov 0xfffffc20(%rbp),%r8
57ff(6): jz 0xfffff586(%rip)
5805(3): test %rbx,%rbx
5808(6): jz 0x208(%rip)
580e(2): test %dl,%dl
5810(6): jz 0x200(%rip)
5816(3): mov %r15,%rsi
5819(3): mov %rbx,%rdx
581c(3): mov %rax,%rdi
581f(7): mov %r8,0xfffffc30(%rbp)
5826(7): mov %rcx,0xfffffc38(%rbp)
582d(5): call 0xffffbd63(%rip)
5832(7): mov 0xfffffc38(%rbp),%rcx
5839(3): mov %rax,%r15
583c(7): mov 0xfffffc30(%rbp),%r8
5843(5): jmp 0xfffff681(%rip)
5848(8): nop 0x0(%rax,%rax,1)
5850(3): mov %r12,%r14
5853(5): jmp 0xfffff671(%rip)
5858(8): nop 0x0(%rax,%rax,1)
5860(3): mov %r14,(%rax)
5863(3): mov %r14,%rbx
5866(5): jmp 0xfffffe4e(%rip)
586b(5): call 0xffffbba5(%rip)
5870(7): mov %rax,0xfffffc38(%rbp)
5877(9): nop 0x0(%rax,%rax,1)
5880(3): mov %r15,%rdi
5883(5): call 0xffffbb6d(%rip)
5888(5): jmp 0xfffff51b(%rip)
588d(3): nop (%rax)
5890(7): mov 0xfffffc10(%rbp),%r9
5897(7): mov 0xfffffc28(%rbp),%r8
589e(3): mov %r10,%rsi
58a1(7): mov $0xffffffff,%rcx
58a8(5): mov $0x1,%edx
58ad(5): mov $0x1,%eax
58b2(7): mov %r10,0xfffffbd0(%rbp)
58b9(5): call 0xffffbb27(%rip)
58be(7): mov 0xfffffbd0(%rbp),%r10
58c5(5): jmp 0xfffff921(%rip)
58ca(6): nop 0x0(%rax,%rax,1)
58d0(4): sub $0x10,%rsp
58d4(7): mov 0xfffffc10(%rbp),%r9
58db(3): fstp %st0,(%rsp)
58de(5): jmp 0xfffff8db(%rip)
58e3(5): nop 0x0(%rax,%rax,1)
58e8(6): js 0xfffff49d(%rip)
58ee(3): add %r12,%r12
58f1(3): cmp %rax,%r12
58f4(6): jnb 0xfffff7e5(%rip)
58fa(6): nop 0x0(%rax,%rax,1)
5900(3): test %rdx,%rdx
5903(6): jnz 0xfffff482(%rip)
5909(4): cmp $0xffffffff,%rax
590d(6): jz 0xfffff478(%rip)
5913(7): cmp 0xfffffc18(%rbp),%r15
591a(3): mov %rax,%r12
591d(3): setz %dl
5920(3): test %r15,%r15
5923(6): jnz 0xfffff7c9(%rip)
5929(7): nop 0x0(%rax)
5930(3): mov %r12,%rdi
5933(6): mov %dl,0xfffffc38(%rbp)
5939(5): call 0xffffbc87(%rip)
593e(3): test %rax,%rax
5941(3): mov %rax,%rcx
5944(7): movzx 0xfffffc38(%rbp),%edx
594b(6): jz 0xfffff43a(%rip)
5951(3): test %r14,%r14
5954(6): jz 0x19c(%rip)
595a(2): test %dl,%dl
595c(6): jz 0x194(%rip)
5962(3): mov %r15,%rsi
5965(3): mov %r14,%rdx
5968(3): mov %rax,%rdi
596b(5): call 0xffffbc25(%rip)
5970(3): mov %rax,%r15
5973(5): jmp 0xfffff798(%rip)
5978(8): nop 0x0(%rax,%rax,1)
5980(3): mov $0x4c,(%rbx)
5983(4): add $0x1,%rbx
5987(5): jmp 0xfffff6b4(%rip)
598c(4): nop 0x0(%rax)
5990(3): mov %r14b,(%rax)
5993(3): mov %r14,%rbx
5996(5): jmp 0xfffffd1e(%rip)
599b(5): nop 0x0(%rax,%rax,1)
59a0(3): mov %r14d,(%rax)
59a3(3): mov %r14,%rbx
59a6(5): jmp 0xfffffd0e(%rip)
59ab(5): nop 0x0(%rax,%rax,1)
59b0(4): mov %r14w,(%rax)
59b4(3): mov %r14,%rbx
59b7(5): jmp 0xfffffcfd(%rip)
59bc(4): nop 0x0(%rax)
59c0(3): mov %r12,%rdi
59c3(6): mov %dl,0xfffffc38(%rbp)
59c9(5): call 0xffffbbf7(%rip)
59ce(3): test %rax,%rax
59d1(3): mov %rax,%rcx
59d4(7): movzx 0xfffffc38(%rbp),%edx
59db(6): jz 0xfffff3aa(%rip)
59e1(3): test %r14,%r14
59e4(6): jz 0x140(%rip)
59ea(2): test %dl,%dl
59ec(6): jz 0x138(%rip)
59f2(3): mov %r15,%rsi
59f5(3): mov %r14,%rdx
59f8(3): mov %rax,%rdi
59fb(5): call 0xffffbb95(%rip)
5a00(3): mov %rax,%r15
5a03(5): jmp 0xfffffcac(%rip)
5a08(8): nop 0x0(%rax,%rax,1)
5a10(3): mov %r9,%r15
5a13(5): jmp 0xfffff4b1(%rip)
5a18(8): nop 0x0(%rax,%rax,1)
5a20(4): sub $0x8,%rsp
5a24(6): push 0xfffffc10(%rbp)
5a2a(5): jmp 0xfffffa7b(%rip)
5a2f(1): nop 
5a30(4): sub $0x8,%rsp
5a34(6): push 0xfffffc10(%rbp)
5a3a(4): sub $0x10,%rsp
5a3e(3): fstp %st0,(%rsp)
5a41(5): jmp 0xfffffb2a(%rip)
5a46(a): nop 0x0(%rax,%rax,1)
5a50(7): mov 0xfffffc38(%rbp),%rax
5a57(6): mov 0xfffffbdc(%rbp),%edi
5a5d(3): movsxd %ecx,%rbx
5a60(3): add %r14,%rbx
5a63(2): mov %edi,(%rax)
5a65(5): jmp 0xfffffc4f(%rip)
5a6a(6): nop 0x0(%rax,%rax,1)
5a70(7): cmp 0xfffffc18(%rbp),%r15
5a77(2): jz 0xb(%rip)
5a79(3): test %r15,%r15
5a7c(6): jnz 0xbd(%rip)
5a82(7): mov 0xfffffbe0(%rbp),%rax
5a89(3): test %rax,%rax
5a8c(2): jz 0xa(%rip)
5a8e(3): mov %rax,%rdi
5a91(5): call 0xffffb95f(%rip)
5a96(7): mov 0xfffffbf8(%rbp),%rax
5a9d(7): mov 0xfffffd48(%rbp),%rdi
5aa4(4): add $0x20,%rax
5aa8(3): cmp %rax,%rdi
5aab(2): jz 0x7(%rip)
5aad(5): call 0xffffb943(%rip)
5ab2(7): mov 0xfffffbf0(%rbp),%rax
5ab9(7): mov 0xfffffc58(%rbp),%rdi
5ac0(4): add $0x10,%rax
5ac4(3): cmp %rax,%rdi
5ac7(2): jz 0x7(%rip)
5ac9(5): call 0xffffb927(%rip)
5ace(7): mov 0xfffffc38(%rbp),%rax
5ad5(3): xor %r15d,%r15d
5ad8(6): mov $0x4b,(%rax)
5ade(5): jmp 0xfffff321(%rip)
5ae3(5): nop 0x0(%rax,%rax,1)
5ae8(3): xor %r15d,%r15d
5aeb(5): jmp 0xfffff314(%rip)
5af0(3): mov %rcx,%r15
5af3(5): jmp 0xfffff618(%rip)
5af8(8): nop 0x0(%rax,%rax,1)
5b00(6): js 0xfffff285(%rip)
5b06(3): add %r12,%r12
5b09(3): cmp %rax,%r12
5b0c(6): jnb 0xfffffc3a(%rip)
5b12(4): cmp $0xffffffff,%rax
5b16(6): jz 0xfffff26f(%rip)
5b1c(3): mov %rax,%r12
5b1f(5): jmp 0xfffffc27(%rip)
5b24(3): mov %rcx,%r15
5b27(5): jmp 0xfffffb88(%rip)
5b2c(3): mov %r15,%rdi
5b2f(5): call 0xffffb8c1(%rip)
5b34(5): jmp 0xfffff84e(%rip)
5b39(3): mov %r15,%rdi
5b3c(5): call 0xffffb8b4(%rip)
5b41(5): jmp 0xffffff41(%rip)
5b46(5): call 0xffffb8ba(%rip)
5b4b(5): nop 0x0(%rax,%rax,1)
5b50(7): mov 0xfffffbf8(%rbp),%rax
5b57(7): mov 0xfffffd48(%rbp),%rdi
5b5e(4): add $0x20,%rax
5b62(3): cmp %rax,%rdi
5b65(2): jz 0x7(%rip)
5b67(5): call 0xffffb889(%rip)
5b6c(7): mov 0xfffffbf0(%rbp),%rax
5b73(7): mov 0xfffffc58(%rbp),%rdi
5b7a(4): add $0x10,%rax
5b7e(3): cmp %rax,%rdi
5b81(2): jz 0x7(%rip)
5b83(5): call 0xffffb86d(%rip)
5b88(5): call 0xffffb888(%rip)
5b8d(3): xor %r15d,%r15d
5b90(6): mov $0x16,(%rax)
5b96(5): jmp 0xfffff269(%rip)
5b9b(3): mov %r14,%rbx
5b9e(2): xor %eax,%eax
5ba0(4): add $0x1,%rbx
5ba4(6): jb 0x10c(%rip)
5baa(3): cmp %rbx,%r12
5bad(2): jnb 0x4f(%rip)
5baf(3): test %r12,%r12
5bb2(6): jnz 0x137(%rip)
5bb8(4): cmp $0xc,%rbx
5bbc(6): jnbe 0x112(%rip)
5bc2(6): mov $0xc,%r12d
5bc8(7): cmp 0xfffffc18(%rbp),%r15
5bcf(4): setz %r13b
5bd3(3): test %r15,%r15
5bd6(6): jz 0xa6(%rip)
5bdc(3): test %r13b,%r13b
5bdf(6): jnz 0x9d(%rip)
5be5(3): mov %r12,%rsi
5be8(3): mov %r15,%rdi
5beb(5): call 0xffffba25(%rip)
5bf0(3): test %rax,%rax
5bf3(6): jz 0xfffffc78(%rip)
5bf9(3): mov %rax,%r15
5bfc(7): cmp 0xfffffc18(%rbp),%r15
5c03(5): mov $0x0,0x0(%r15,%r14,1)
5c08(2): jz 0x19(%rip)
5c0a(3): cmp %rbx,%r12
5c0d(2): jbe 0x14(%rip)
5c0f(3): mov %r15,%rdi
5c12(3): mov %rbx,%rsi
5c15(5): call 0xffffb9fb(%rip)
5c1a(3): test %rax,%rax
5c1d(4): cmovne %rax,%r15
5c21(7): mov 0xfffffbe0(%rbp),%rax
5c28(3): test %rax,%rax
5c2b(2): jz 0xa(%rip)
5c2d(3): mov %rax,%rdi
5c30(5): call 0xffffb7c0(%rip)
5c35(7): mov 0xfffffbf8(%rbp),%rax
5c3c(7): mov 0xfffffd48(%rbp),%rdi
5c43(4): add $0x20,%rax
5c47(3): cmp %rax,%rdi
5c4a(2): jz 0x7(%rip)
5c4c(5): call 0xffffb7a4(%rip)
5c51(7): mov 0xfffffbf0(%rbp),%rax
5c58(7): mov 0xfffffc58(%rbp),%rdi
5c5f(4): add $0x10,%rax
5c63(3): cmp %rax,%rdi
5c66(2): jz 0x7(%rip)
5c68(5): call 0xffffb788(%rip)
5c6d(7): mov 0xfffffbe8(%rbp),%rax
5c74(3): mov %r14,(%rax)
5c77(5): jmp 0xfffff188(%rip)
5c7c(3): mov %r12,%rdi
5c7f(5): call 0xffffb941(%rip)
5c84(3): test %rax,%rax
5c87(3): mov %rax,%rcx
5c8a(6): jz 0xfffff0fb(%rip)
5c90(3): test %r14,%r14
5c93(2): jz 0x6d(%rip)
5c95(3): test %r13b,%r13b
5c98(2): jz 0x68(%rip)
5c9a(3): mov %r15,%rsi
5c9d(3): mov %r14,%rdx
5ca0(3): mov %rax,%rdi
5ca3(5): call 0xffffb8ed(%rip)
5ca8(3): mov %rax,%r15
5cab(5): jmp 0xffffff51(%rip)
5cb0(4): cmp $0xffffffff,%r12
5cb4(5): mov $0x1,%eax
5cb9(6): jz 0xffffff43(%rip)
5cbf(3): test %r12,%r12
5cc2(6): jz 0xfffff0c3(%rip)
5cc8(6): js 0xfffff0bd(%rip)
5cce(3): test %rax,%rax
5cd1(6): jnz 0xfffff0b4(%rip)
5cd7(4): cmp $0xffffffff,%rbx
5cdb(6): jz 0xfffff0aa(%rip)
5ce1(3): mov %rbx,%r12
5ce4(5): jmp 0xfffffee4(%rip)
5ce9(6): js 0xfffff09c(%rip)
5cef(3): add %r12,%r12
5cf2(3): cmp %rbx,%r12
5cf5(6): jnb 0xfffffed3(%rip)
5cfb(2): jmp 0xffffffd3(%rip)
5cfd(3): nop (%rax)
5d00(3): mov %rcx,%r15
5d03(5): jmp 0xfffffef9(%rip)
5d08(4): cmp $0xffffffff,%r12
5d0c(6): jz 0xfffff424(%rip)
5d12(5): jmp 0xfffff07f(%rip)
5d17(5): call 0xffffb7b9(%rip)
5d1c(4): cmp $0xffffffff,%r12
5d20(5): mov $0x1,%edx
5d25(6): jz 0xfffff3e6(%rip)
5d2b(3): test %r12,%r12
5d2e(6): jz 0xfffff057(%rip)
5d34(6): jns 0xfffffbcc(%rip)
5d3a(5): jmp 0xfffff04b(%rip)

"printf_fetchargs" :
5d40(4): cmp $0x0,(%rsi)
5d44(4): mov 0x8(%rsi),%rax
5d48(2): jz 0x65(%rip)
5d4a(7): lea 0x1d0f(%rip),%r8
5d51(7): lea 0x1d68(%rip),%r10
5d58(7): lea 0x1ced(%rip),%r9
5d5f(2): xor %ecx,%ecx
5d61(7): nop 0x0(%rax)
5d68(3): cmp $0x16,(%rax)
5d6b(2): jnbe 0x45(%rip)
5d6d(2): mov (%rax),%edx
5d6f(4): movsxd 0x0(%r8,%rdx,4),%rdx
5d73(3): add %r8,%rdx
5d76(2): jmp %rdx
5d78(8): nop 0x0(%rax,%rax,1)
5d80(4): mov 0x8(%rdi),%rdx
5d84(4): add $0xf,%rdx
5d88(4): and $0xfffffff0,%rdx
5d8c(4): lea 0x10(%rdx),%r11
5d90(4): mov %r11,0x8(%rdi)
5d94(2): fld (%rdx),%st0
5d96(3): fstp %st0,0x10(%rax)
5d99(7): nop 0x0(%rax)
5da0(4): add $0x1,%rcx
5da4(4): add $0x20,%rax
5da8(3): cmp %rcx,(%rsi)
5dab(2): jnbe 0xffffffbd(%rip)
5dad(2): xor %eax,%eax
5daf(1): ret near (%rsp)
5db0(5): mov $0xffffffff,%eax
5db5(1): ret near (%rsp)
5db6(3): mov (%rdi),%r11d
5db9(4): cmp $0x2f,%r11d
5dbd(6): jnbe 0x13d(%rip)
5dc3(3): mov %r11d,%edx
5dc6(4): add 0x10(%rdi),%rdx
5dca(4): add $0x8,%r11d
5dce(3): mov %r11d,(%rdi)
5dd1(3): mov (%rdx),%rdx
5dd4(4): mov %rdx,0x10(%rax)
5dd8(2): jmp 0xffffffc8(%rip)
5dda(3): mov (%rdi),%r11d
5ddd(4): cmp $0x2f,%r11d
5de1(6): jnbe 0x13b(%rip)
5de7(3): mov %r11d,%edx
5dea(4): add 0x10(%rdi),%rdx
5dee(4): add $0x8,%r11d
5df2(3): mov %r11d,(%rdi)
5df5(2): mov (%rdx),%edx
5df7(3): mov %edx,0x10(%rax)
5dfa(2): jmp 0xffffffa6(%rip)
5dfc(3): mov (%rdi),%r11d
5dff(4): cmp $0x2f,%r11d
5e03(6): jnbe 0x108(%rip)
5e09(3): mov %r11d,%edx
5e0c(4): add 0x10(%rdi),%rdx
5e10(4): add $0x8,%r11d
5e14(3): mov %r11d,(%rdi)
5e17(2): mov (%rdx),%edx
5e19(3): mov %dl,0x10(%rax)
5e1c(2): jmp 0xffffff84(%rip)
5e1e(3): mov (%rdi),%r11d
5e21(4): cmp $0x2f,%r11d
5e25(6): jnbe 0xa5(%rip)
5e2b(3): mov %r11d,%edx
5e2e(4): add 0x10(%rdi),%rdx
5e32(4): add $0x8,%r11d
5e36(3): mov %r11d,(%rdi)
5e39(2): mov (%rdx),%edx
5e3b(4): mov %dx,0x10(%rax)
5e3f(5): jmp 0xffffff61(%rip)
5e44(3): mov (%rdi),%r11d
5e47(4): cmp $0x2f,%r11d
5e4b(6): jnbe 0x90(%rip)
5e51(3): mov %r11d,%edx
5e54(4): add 0x10(%rdi),%rdx
5e58(4): add $0x8,%r11d
5e5c(3): mov %r11d,(%rdi)
5e5f(3): mov (%rdx),%rdx
5e62(3): test %rdx,%rdx
5e65(4): cmove %r9,%rdx
5e69(4): mov %rdx,0x10(%rax)
5e6d(5): jmp 0xffffff33(%rip)
5e72(4): mov 0x4(%rdi),%r11d
5e76(7): cmp $0xaf,%r11d
5e7d(6): jnbe 0xb0(%rip)
5e83(3): mov %r11d,%edx
5e86(4): add 0x10(%rdi),%rdx
5e8a(4): add $0x10,%r11d
5e8e(4): mov %r11d,0x4(%rdi)
5e92(4): movsd (%rdx),%xmm0
5e96(5): movsd %xmm0,0x10(%rax)
5e9b(5): jmp 0xffffff05(%rip)
5ea0(3): mov (%rdi),%r11d
5ea3(4): cmp $0x2f,%r11d
5ea7(2): jnbe 0x45(%rip)
5ea9(3): mov %r11d,%edx
5eac(4): add 0x10(%rdi),%rdx
5eb0(4): add $0x8,%r11d
5eb4(3): mov %r11d,(%rdi)
5eb7(3): mov (%rdx),%rdx
5eba(3): test %rdx,%rdx
5ebd(4): cmove %r10,%rdx
5ec1(4): mov %rdx,0x10(%rax)
5ec5(5): jmp 0xfffffedb(%rip)
5eca(4): mov 0x8(%rdi),%rdx
5ece(4): lea 0x8(%rdx),%r11
5ed2(4): mov %r11,0x8(%rdi)
5ed6(5): jmp 0xffffff63(%rip)
5edb(4): mov 0x8(%rdi),%rdx
5edf(4): lea 0x8(%rdx),%r11
5ee3(4): mov %r11,0x8(%rdi)
5ee7(5): jmp 0xffffff78(%rip)
5eec(4): mov 0x8(%rdi),%rdx
5ef0(4): lea 0x8(%rdx),%r11
5ef4(4): mov %r11,0x8(%rdi)
5ef8(2): jmp 0xffffffbf(%rip)
5efa(4): mov 0x8(%rdi),%rdx
5efe(4): lea 0x8(%rdx),%r11
5f02(4): mov %r11,0x8(%rdi)
5f06(5): jmp 0xfffffecb(%rip)
5f0b(4): mov 0x8(%rdi),%rdx
5f0f(4): lea 0x8(%rdx),%r11
5f13(4): mov %r11,0x8(%rdi)
5f17(5): jmp 0xffffff00(%rip)
5f1c(4): mov 0x8(%rdi),%rdx
5f20(4): lea 0x8(%rdx),%r11
5f24(4): mov %r11,0x8(%rdi)
5f28(5): jmp 0xfffffecd(%rip)
5f2d(4): mov 0x8(%rdi),%rdx
5f31(4): lea 0x8(%rdx),%r11
5f35(4): mov %r11,0x8(%rdi)
5f39(5): jmp 0xffffff59(%rip)

"printf_parse" :
5f40(2): push %r15
5f42(2): push %r14
5f44(4): lea 0x20(%rsi),%rcx
5f48(2): push %r13
5f4a(2): push %r12
5f4c(4): lea 0x10(%rdx),%rax
5f50(1): push %rbp
5f51(1): push %rbx
5f52(3): mov %rsi,%r14
5f55(3): mov %rdx,%r15
5f58(2): xor %ebx,%ebx
5f5a(6): mov $0x7,%r9d
5f60(4): sub $0x58,%rsp
5f64(6): mov $0x7,%r10d
5f6a(7): mov $0x0,(%rsi)
5f71(4): mov %rcx,0x8(%rsi)
5f75(5): mov %rcx,0x28(%rsp)
5f7a(7): mov $0xffffffff,%r8
5f81(7): mov $0x0,(%rdx)
5f88(5): mov %rax,0x8(%rsp)
5f8d(4): mov %rax,0x8(%rdx)
5f91(9): mov $0x0,0x18(%rsp)
5f9a(9): mov $0x0,0x10(%rsp)
5fa3(9): mov $0x0,0x20(%rsp)
5fac(2): jmp 0xf(%rip)
5fae(2): nop 
5fb0(2): cmp $0x25,%al
5fb2(4): lea 0x1(%rdi),%rbp
5fb6(2): jz 0x42(%rip)
5fb8(3): mov %rbp,%rdi
5fbb(3): movzx (%rdi),%eax
5fbe(2): test %al,%al
5fc0(2): jnz 0xfffffff0(%rip)
5fc2(4): lea 0x0(%rbx,%rbx,4),%rax
5fc6(4): lea 0x0(%rbx,%rax,2),%rax
5fca(4): mov %rdi,0x0(%rcx,%rax,8)
5fce(5): mov 0x10(%rsp),%rax
5fd3(4): mov %rax,0x10(%r14)
5fd7(5): mov 0x18(%rsp),%rax
5fdc(4): mov %rax,0x18(%r14)
5fe0(2): xor %eax,%eax
5fe2(4): add $0x58,%rsp
5fe6(1): pop %rbx
5fe7(1): pop %rbp
5fe8(2): pop %r12
5fea(2): pop %r13
5fec(2): pop %r14
5fee(2): pop %r15
5ff0(1): ret near (%rsp)
5ff1(7): nop 0x0(%rax)
5ff8(4): lea 0x0(%rbx,%rbx,4),%rax
5ffc(3): mov %r8,%r13
5fff(4): lea 0x0(%rbx,%rax,2),%rax
6003(4): lea 0x0(%rcx,%rax,8),%r12
6007(4): mov %rdi,(%r12)
600b(9): mov $0x0,0x10(%r12)
6014(9): mov $0x0,0x18(%r12)
601d(9): mov $0x0,0x20(%r12)
6026(5): mov %r8,0x28(%r12)
602b(9): mov $0x0,0x30(%r12)
6034(9): mov $0x0,0x38(%r12)
603d(5): mov %r8,0x40(%r12)
6042(5): mov %r8,0x50(%r12)
6047(4): movzx 0x1(%rdi),%ebx
604b(3): lea 0xffffffd0(%rbx),%eax
604e(2): cmp $0x9,%al
6050(2): jnbe 0x3e(%rip)
6052(5): jmp 0x438(%rip)
6057(9): nop 0x0(%rax,%rax,1)
6060(3): cmp $0x2d,%bl
6063(2): jz 0x45(%rip)
6065(3): cmp $0x2b,%bl
6068(2): jz 0x48(%rip)
606a(3): cmp $0x20,%bl
606d(2): jz 0x53(%rip)
606f(3): cmp $0x23,%bl
6072(2): jz 0x5e(%rip)
6074(3): cmp $0x30,%bl
6077(2): jz 0x69(%rip)
6079(3): cmp $0x49,%bl
607c(2): jnz 0x74(%rip)
607e(6): or $0x40,0x10(%r12)
6084(4): nop 0x0(%rax)
6088(3): movzx (%rax),%ebx
608b(3): mov %rax,%rbp
608e(4): lea 0x1(%rbp),%rax
6092(3): cmp $0x27,%bl
6095(3): mov %rax,%rdx
6098(2): jnz 0xffffffc8(%rip)
609a(6): or $0x1,0x10(%r12)
60a0(2): jmp 0xffffffe8(%rip)
60a2(6): nop 0x0(%rax,%rax,1)
60a8(6): or $0x2,0x10(%r12)
60ae(2): jmp 0xffffffda(%rip)
60b0(6): or $0x4,0x10(%r12)
60b6(2): jmp 0xffffffd2(%rip)
60b8(8): nop 0x0(%rax,%rax,1)
60c0(6): or $0x8,0x10(%r12)
60c6(2): jmp 0xffffffc2(%rip)
60c8(8): nop 0x0(%rax,%rax,1)
60d0(6): or $0x10,0x10(%r12)
60d6(2): jmp 0xffffffb2(%rip)
60d8(8): nop 0x0(%rax,%rax,1)
60e0(6): or $0x20,0x10(%r12)
60e6(2): jmp 0xffffffa2(%rip)
60e8(8): nop 0x0(%rax,%rax,1)
60f0(3): cmp $0x2a,%bl
60f3(6): jz 0x1b6(%rip)
60f9(3): lea 0xffffffd0(%rbx),%ecx
60fc(3): cmp $0x9,%cl
60ff(6): jbe 0x418(%rip)
6105(3): cmp $0x2e,%bl
6108(6): jz 0x2d7(%rip)
610e(2): xor %eax,%eax
6110(5): mov $0x1,%esi
6115(2): jmp 0x32(%rip)
6117(9): nop 0x0(%rax,%rax,1)
6120(3): cmp $0x4c,%bl
6123(2): jz 0x3d(%rip)
6125(3): cmp $0x6c,%bl
6128(2): jz 0x18(%rip)
612a(3): cmp $0x6a,%bl
612d(2): jz 0x13(%rip)
612f(2): mov %ebx,%edx
6131(3): and $0xdf,%edx
6134(3): cmp $0x5a,%dl
6137(2): jz 0x9(%rip)
6139(3): cmp $0x74,%bl
613c(2): jnz 0x2c(%rip)
613e(2): nop 
6140(3): add $0x8,%eax
6143(4): movzx 0x0(%rbp),%ebx
6147(4): add $0x1,%rbp
614b(3): cmp $0x68,%bl
614e(2): jnz 0xffffffd2(%rip)
6150(2): mov %eax,%ecx
6152(2): mov %esi,%edx
6154(3): and $0x1,%ecx
6157(2): shl/sal %cl,%edx
6159(2): or %edx,%eax
615b(2): jmp 0xffffffe8(%rip)
615d(3): nop (%rax)
6160(3): or $0x4,%eax
6163(2): jmp 0xffffffe0(%rip)
6165(3): nop (%rax)
6168(3): lea 0xffffffdb(%rbx),%edx
616b(3): cmp $0x53,%dl
616e(6): jnbe 0x61d(%rip)
6174(7): lea 0x1961(%rip),%rcx
617b(3): movzx %dl,%edx
617e(4): movsxd 0x0(%rcx,%rdx,4),%rdx
6182(3): add %rcx,%rdx
6185(2): jmp %rdx
6187(6): mov $0x10,%r11d
618d(5): mov $0x73,%ebx
6192(6): nop 0x0(%rax,%rax,1)
6198(4): cmp $0xffffffff,%r13
619c(6): jz 0x6bb(%rip)
61a2(5): mov %r13,0x50(%r12)
61a7(3): cmp %r13,%r9
61aa(4): mov 0x8(%r15),%rcx
61ae(6): jbe 0x622(%rip)
61b4(3): mov (%r15),%rax
61b7(3): mov %rax,%rdx
61ba(4): shl/sal $0x5,%rdx
61be(3): add %rcx,%rdx
61c1(3): cmp %r13,%rax
61c4(2): jnbe 0x22(%rip)
61c6(a): nop 0x0(%rax,%rax,1)
61d0(4): add $0x1,%rax
61d4(6): mov $0x0,(%rdx)
61da(4): add $0x20,%rdx
61de(3): cmp %r13,%rax
61e1(2): jbe 0xffffffef(%rip)
61e3(3): mov %rax,(%r15)
61e6(4): shl/sal $0x5,%r13
61ea(4): lea 0x0(%rcx,%r13,1),%rax
61ee(2): mov (%rax),%edx
61f0(2): test %edx,%edx
61f2(6): jnz 0x5d1(%rip)
61f8(3): mov %r11d,(%rax)
61fb(5): mov %bl,0x48(%r12)
6200(3): mov (%r14),%rax
6203(5): mov %rbp,0x8(%r12)
6208(4): lea 0x1(%rax),%rbx
620c(3): cmp %rbx,%r10
620f(3): mov %rbx,(%r14)
6212(6): jnbe 0x8e(%rip)
6218(3): test %r10,%r10
621b(6): js 0x9ac(%rip)
6221(3): add %r10,%r10
6224(a): mov $0x209622091746699450,%rax
622e(3): cmp %rax,%r10
6231(6): jnbe 0x996(%rip)
6237(4): lea 0x0(%r10,%r10,4),%rax
623b(4): mov 0x8(%r14),%rdi
623f(5): cmp %rdi,0x28(%rsp)
6244(5): mov %r9,0x40(%rsp)
6249(5): mov %r10,0x38(%rsp)
624e(4): lea 0x0(%r10,%rax,2),%rax
6252(5): mov %r8,0x30(%rsp)
6257(8): lea 0x0(,%rax,8),%rsi
625f(6): jz 0x6be(%rip)
6265(5): call 0xffffb3ab(%rip)
626a(3): test %rax,%rax
626d(3): mov %rax,%rcx
6270(5): mov 0x30(%rsp),%r8
6275(5): mov 0x38(%rsp),%r10
627a(5): mov 0x40(%rsp),%r9
627f(6): jz 0x948(%rip)
6285(5): mov 0x28(%rsp),%rax
628a(4): cmp 0x8(%r14),%rax
628e(3): mov (%r14),%rbx
6291(6): jz 0x6af(%rip)
6297(4): mov %rcx,0x8(%r14)
629b(5): jmp 0xfffffd1d(%rip)
62a0(4): mov 0x8(%r14),%rcx
62a4(5): jmp 0xfffffd14(%rip)
62a9(5): mov 0x10(%rsp),%rsi
62ae(5): mov $0x1,%ecx
62b3(5): mov %rbp,0x18(%r12)
62b8(5): mov %rax,0x20(%r12)
62bd(3): test %rsi,%rsi
62c0(4): cmovne %rsi,%rcx
62c4(5): mov %rcx,0x10(%rsp)
62c9(4): movzx 0x1(%rbp),%ecx
62cd(3): lea 0xffffffd0(%rcx),%esi
62d0(4): cmp $0x9,%sil
62d4(6): jbe 0x2e1(%rip)
62da(5): mov 0x20(%rsp),%rsi
62df(4): cmp $0xffffffff,%rsi
62e3(4): lea 0x1(%rsi),%rdx
62e7(5): mov %rsi,0x28(%r12)
62ec(6): jz 0x49f(%rip)
62f2(5): mov 0x20(%rsp),%rbx
62f7(3): mov %rax,%rbp
62fa(5): mov %rdx,0x20(%rsp)
62ff(3): cmp %rbx,%r9
6302(4): mov 0x8(%r15),%rcx
6306(6): jnbe 0x67c(%rip)
630c(3): add %r9,%r9
630f(4): lea 0x1(%rbx),%rax
6313(3): cmp %rbx,%r9
6316(4): cmovbe %rax,%r9
631a(a): mov $0x576460752303423487,%rax
6324(3): cmp %rax,%r9
6327(6): jnbe 0x8a4(%rip)
632d(3): mov %r9,%rsi
6330(5): mov %r9,0x40(%rsp)
6335(5): mov %r10,0x38(%rsp)
633a(4): shl/sal $0x5,%rsi
633e(5): cmp %rcx,0x8(%rsp)
6343(5): mov %r8,0x30(%rsp)
6348(6): jz 0x719(%rip)
634e(3): mov %rcx,%rdi
6351(5): call 0xffffb2bf(%rip)
6356(4): mov 0x8(%r15),%rdx
635a(5): mov 0x30(%rsp),%r8
635f(3): mov %rax,%rcx
6362(5): mov 0x38(%rsp),%r10
6367(5): mov 0x40(%rsp),%r9
636c(3): test %rcx,%rcx
636f(6): jz 0x8b8(%rip)
6375(5): cmp %rdx,0x8(%rsp)
637a(3): mov (%r15),%rax
637d(6): jz 0x7be(%rip)
6383(4): mov %rcx,0x8(%r15)
6387(3): mov %rax,%rdx
638a(4): shl/sal $0x5,%rdx
638e(3): add %rcx,%rdx
6391(3): cmp %rbx,%rax
6394(2): jnbe 0x22(%rip)
6396(a): nop 0x0(%rax,%rax,1)
63a0(4): add $0x1,%rax
63a4(6): mov $0x0,(%rdx)
63aa(4): add $0x20,%rdx
63ae(3): cmp %rbx,%rax
63b1(2): jbe 0xffffffef(%rip)
63b3(3): mov %rax,(%r15)
63b6(4): shl/sal $0x5,%rbx
63ba(4): lea 0x0(%rcx,%rbx,1),%rax
63be(2): mov (%rax),%edx
63c0(2): test %edx,%edx
63c2(6): jnz 0x4d9(%rip)
63c8(6): mov $0x5,(%rax)
63ce(4): movzx 0x0(%rbp),%ebx
63d2(4): lea 0x1(%rbp),%rdx
63d6(3): cmp $0x2e,%bl
63d9(6): jnz 0xfffffd35(%rip)
63df(4): cmp $0x2a,0x1(%rbp)
63e3(5): mov %rbp,0x30(%r12)
63e8(6): jnz 0x186(%rip)
63ee(5): mov 0x18(%rsp),%rsi
63f3(4): lea 0x2(%rbp),%r11
63f7(5): mov $0x2,%eax
63fc(5): mov %r11,0x38(%r12)
6401(4): cmp $0x2,%rsi
6405(4): cmovnb %rsi,%rax
6409(5): mov %rax,0x18(%rsp)
640e(4): movsx 0x2(%rbp),%eax
6412(3): lea 0xffffffd0(%rax),%edx
6415(3): cmp $0x9,%dl
6418(6): jbe 0x694(%rip)
641e(5): mov 0x40(%r12),%rbx
6423(4): cmp $0xffffffff,%rbx
6427(6): jz 0x65e(%rip)
642d(3): cmp %rbx,%r9
6430(4): mov 0x8(%r15),%rcx
6434(6): jbe 0x56b(%rip)
643a(3): mov (%r15),%rax
643d(3): mov %rax,%rdx
6440(4): shl/sal $0x5,%rdx
6444(3): add %rcx,%rdx
6447(3): cmp %rbx,%rax
644a(2): jnbe 0x1c(%rip)
644c(4): nop 0x0(%rax)
6450(4): add $0x1,%rax
6454(6): mov $0x0,(%rdx)
645a(4): add $0x20,%rdx
645e(3): cmp %rbx,%rax
6461(2): jbe 0xffffffef(%rip)
6463(3): mov %rax,(%r15)
6466(4): shl/sal $0x5,%rbx
646a(4): lea 0x0(%rcx,%rbx,1),%rax
646e(2): mov (%rax),%edx
6470(2): test %edx,%edx
6472(6): jnz 0x518(%rip)
6478(6): mov $0x5,(%rax)
647e(3): mov %r11,%rbp
6481(4): movzx (%r11),%ebx
6485(5): jmp 0xfffffc89(%rip)
648a(3): mov %rbp,%rax
648d(3): nop (%rax)
6490(4): add $0x1,%rax
6494(3): movzx (%rax),%edx
6497(3): lea 0xffffffd0(%rdx),%ecx
649a(3): cmp $0x9,%cl
649d(2): jbe 0xfffffff3(%rip)
649f(3): cmp $0x24,%dl
64a2(3): mov %r8,%r13
64a5(6): jnz 0xfffffbe9(%rip)
64ab(2): xor %edx,%edx
64ad(3): movsx %bl,%eax
64b0(a): mov $0x1844674407370955161,%rdi
64ba(3): mov %r8,%rsi
64bd(3): sub $0x30,%eax
64c0(3): cmp %rdi,%rdx
64c3(2): cwde 
64c5(2): jnbe 0x9(%rip)
64c7(4): lea 0x0(%rdx,%rdx,4),%rsi
64cb(3): add %rsi,%rsi
64ce(3): mov %rbp,%rcx
64d1(3): add %rsi,%rax
64d4(4): movzx 0x1(%rbp),%ebx
64d8(4): setb %sil
64dc(4): add $0x1,%rbp
64e0(3): mov %rax,%rdx
64e3(4): movzx %sil,%esi
64e7(3): test %rsi,%rsi
64ea(3): lea 0xffffffd0(%rbx),%edi
64ed(6): jnz 0x391(%rip)
64f3(4): cmp $0x9,%dil
64f7(2): jbe 0xffffffb6(%rip)
64f9(3): mov %rax,%r13
64fc(4): sub $0x1,%r13
6500(4): cmp $0xfffffffd,%r13
6504(6): jnbe 0x287(%rip)
650a(4): lea 0x2(%rcx),%rbp
650e(4): movzx 0x2(%rcx),%ebx
6512(5): jmp 0xfffffb7c(%rip)
6517(5): mov %rbp,0x18(%r12)
651c(4): movzx 0x0(%rbp),%edi
6520(3): mov %rbp,%rsi
6523(3): lea 0xffffffd0(%rdi),%ecx
6526(3): cmp $0x9,%cl
6529(2): jbe 0xe(%rip)
652b(2): jmp 0x35(%rip)
652d(3): nop (%rax)
6530(3): mov %rax,%rbp
6533(4): add $0x1,%rax
6537(3): movzx (%rax),%edi
653a(3): lea 0xffffffd0(%rdi),%edx
653d(3): cmp $0x9,%dl
6540(2): jbe 0xfffffff0(%rip)
6542(3): mov %rax,%rcx
6545(4): lea 0x2(%rbp),%rdx
6549(3): mov %rax,%rbp
654c(3): sub %rsi,%rcx
654f(5): mov 0x10(%rsp),%rsi
6554(3): cmp %rcx,%rsi
6557(4): cmovnb %rsi,%rcx
655b(5): mov %rcx,0x10(%rsp)
6560(5): mov %rbp,0x20(%r12)
6565(4): movzx 0x0(%rbp),%ebx
6569(5): jmp 0xfffffb9c(%rip)
656e(4): movzx 0x1(%rbp),%eax
6572(3): sub $0x30,%eax
6575(2): cmp $0x9,%al
6577(2): jnbe 0x17(%rip)
6579(7): nop 0x0(%rax)
6580(4): add $0x1,%rdx
6584(3): movzx (%rdx),%eax
6587(3): sub $0x30,%eax
658a(2): cmp $0x9,%al
658c(2): jbe 0xfffffff4(%rip)
658e(5): mov 0x18(%rsp),%rsi
6593(3): mov %rdx,%rax
6596(5): mov %rdx,0x38(%r12)
659b(3): sub %rbp,%rax
659e(3): movzx (%rdx),%ebx
65a1(3): mov %rdx,%rbp
65a4(3): cmp %rax,%rsi
65a7(4): cmovnb %rsi,%rax
65ab(5): mov %rax,0x18(%rsp)
65b0(5): jmp 0xfffffb5e(%rip)
65b5(3): mov %rax,%rsi
65b8(4): add $0x1,%rsi
65bc(3): movzx (%rsi),%edi
65bf(4): lea 0xffffffd0(%rdi),%r11d
65c3(4): cmp $0x9,%r11b
65c7(2): jbe 0xfffffff1(%rip)
65c9(4): cmp $0x24,%dil
65cd(6): jnz 0xfffffd0d(%rip)
65d3(2): xor %esi,%esi
65d5(3): movsx %cl,%eax
65d8(a): mov $0x1844674407370955161,%rdi
65e2(3): mov %r8,%rcx
65e5(3): sub $0x30,%eax
65e8(3): cmp %rdi,%rsi
65eb(2): cwde 
65ed(2): jnbe 0x9(%rip)
65ef(4): lea 0x0(%rsi,%rsi,4),%rcx
65f3(3): add %rcx,%rcx
65f6(3): mov %rdx,%rbp
65f9(3): xor %r11d,%r11d
65fc(3): add %rcx,%rax
65ff(4): movzx 0x1(%rdx),%ecx
6603(4): setb %r11b
6607(4): add $0x1,%rdx
660b(3): mov %rax,%rsi
660e(3): test %r11,%r11
6611(3): lea 0xffffffd0(%rcx),%edi
6614(6): jnz 0x50a(%rip)
661a(4): cmp $0x9,%dil
661e(2): jbe 0xffffffb7(%rip)
6620(4): lea 0xffffffff(%rax),%rbx
6624(4): cmp $0xfffffffd,%rbx
6628(6): jnbe 0x163(%rip)
662e(5): mov %rbx,0x28(%r12)
6633(4): add $0x2,%rbp
6637(5): jmp 0xfffffcc8(%rip)
663c(3): cmp $0xf,%eax
663f(6): mov $0x16,%r11d
6645(6): jnle 0xfffffb53(%rip)
664b(2): test $0x4,%al
664d(6): jnz 0xfffffb4b(%rip)
6653(3): cmp $0x7,%eax
6656(6): mov $0x15,%r11d
665c(6): jnle 0xfffffb3c(%rip)
6662(2): test $0x2,%al
6664(6): mov $0x12,%r11d
666a(6): jnz 0xfffffb2e(%rip)
6670(3): xor %r11d,%r11d
6673(2): test $0x1,%al
6675(4): setz %r11b
6679(4): add $0x13,%r11d
667d(5): jmp 0xfffffb1b(%rip)
6682(6): nop 0x0(%rax,%rax,1)
6688(3): xor %r11d,%r11d
668b(3): cmp $0x7,%eax
668e(4): setnle %r11b
6692(4): add $0xd,%r11d
6696(5): jmp 0xfffffb02(%rip)
669b(3): cmp $0xf,%eax
669e(6): mov $0x9,%r11d
66a4(6): jnle 0xfffffaf4(%rip)
66aa(2): test $0x4,%al
66ac(6): jnz 0xfffffaec(%rip)
66b2(3): cmp $0x7,%eax
66b5(6): mov $0x7,%r11d
66bb(6): jnle 0xfffffadd(%rip)
66c1(2): test $0x2,%al
66c3(6): mov $0x1,%r11d
66c9(6): jnz 0xfffffacf(%rip)
66cf(3): and $0x1,%eax
66d2(3): cmp $0x1,%eax
66d5(3): sbb %r11d,%r11d
66d8(4): and $0x2,%r11d
66dc(4): add $0x3,%r11d
66e0(5): jmp 0xfffffab8(%rip)
66e5(3): nop (%rax)
66e8(3): xor %r11d,%r11d
66eb(3): cmp $0x7,%eax
66ee(4): setnle %r11b
66f2(4): add $0xf,%r11d
66f6(5): jmp 0xfffffaa2(%rip)
66fb(3): cmp $0xf,%eax
66fe(6): mov $0xc,%r11d
6704(6): jnle 0xfffffa94(%rip)
670a(3): xor %r11d,%r11d
670d(2): test $0x4,%al
670f(4): setnz %r11b
6713(4): add $0xb,%r11d
6717(5): jmp 0xfffffa81(%rip)
671c(6): mov $0xe,%r11d
6722(5): mov $0x63,%ebx
6727(5): jmp 0xfffffa71(%rip)
672c(3): cmp $0xf,%eax
672f(6): mov $0xa,%r11d
6735(6): jnle 0xfffffa63(%rip)
673b(2): test $0x4,%al
673d(6): jnz 0xfffffa5b(%rip)
6743(3): cmp $0x7,%eax
6746(6): mov $0x8,%r11d
674c(6): jnle 0xfffffa4c(%rip)
6752(2): test $0x2,%al
6754(6): mov $0x2,%r11d
675a(6): jnz 0xfffffa3e(%rip)
6760(3): and $0x1,%eax
6763(3): cmp $0x1,%eax
6766(3): sbb %r11d,%r11d
6769(4): and $0x2,%r11d
676d(4): add $0x4,%r11d
6771(5): jmp 0xfffffa27(%rip)
6776(a): nop 0x0(%rax,%rax,1)
6780(6): mov $0x11,%r11d
6786(5): jmp 0xfffffa12(%rip)
678b(4): mov 0x8(%r15),%rcx
678f(5): cmp %rcx,0x8(%rsp)
6794(2): jz 0xa(%rip)
6796(3): mov %rcx,%rdi
6799(5): call 0xffffac57(%rip)
679e(4): mov 0x8(%r14),%rdi
67a2(5): cmp %rdi,0x28(%rsp)
67a7(2): jz 0x7(%rip)
67a9(5): call 0xffffac47(%rip)
67ae(5): call 0xffffac62(%rip)
67b3(6): mov $0x16,(%rax)
67b9(5): mov $0xffffffff,%eax
67be(5): jmp 0xfffff824(%rip)
67c3(3): cmp %r11d,%edx
67c6(6): jz 0xfffffa35(%rip)
67cc(2): jmp 0xffffffc3(%rip)
67ce(2): nop 
67d0(3): add %r9,%r9
67d3(4): lea 0x1(%r13),%rax
67d7(3): cmp %r13,%r9
67da(4): cmovbe %rax,%r9
67de(a): mov $0x576460752303423487,%rax
67e8(3): cmp %rax,%r9
67eb(6): jnbe 0x3e0(%rip)
67f1(3): mov %r9,%rsi
67f4(5): mov %r9,0x48(%rsp)
67f9(5): mov %r10,0x40(%rsp)
67fe(4): shl/sal $0x5,%rsi
6802(5): cmp %rcx,0x8(%rsp)
6807(5): mov %r8,0x38(%rsp)
680c(5): mov %r11d,0x30(%rsp)
6811(6): jz 0xa0(%rip)
6817(3): mov %rcx,%rdi
681a(5): call 0xffffadf6(%rip)
681f(3): test %rax,%rax
6822(3): mov %rax,%rcx
6825(5): mov 0x30(%rsp),%r11d
682a(5): mov 0x38(%rsp),%r8
682f(5): mov 0x40(%rsp),%r10
6834(5): mov 0x48(%rsp),%r9
6839(6): jz 0x38e(%rip)
683f(5): mov 0x8(%rsp),%rax
6844(4): cmp 0x8(%r15),%rax
6848(6): jz 0x91(%rip)
684e(4): mov %rcx,0x8(%r15)
6852(5): jmp 0xfffff962(%rip)
6857(5): mov 0x20(%rsp),%rsi
685c(4): cmp $0xffffffff,%rsi
6860(4): lea 0x1(%rsi),%rax
6864(5): mov %rsi,0x50(%r12)
6869(6): jz 0xffffff22(%rip)
686f(5): mov 0x20(%rsp),%r13
6874(5): mov %rax,0x20(%rsp)
6879(5): jmp 0xfffff92e(%rip)
687e(4): cmp $0x9,%dil
6882(6): jnbe 0xffffff09(%rip)
6888(3): movsx %bl,%eax
688b(3): mov %r8,%rsi
688e(3): mov %rbp,%rcx
6891(3): sub $0x30,%eax
6894(2): cwde 
6896(5): jmp 0xfffffc3b(%rip)
689b(3): cmp $0x5,%edx
689e(6): jnz 0xfffffef1(%rip)
68a4(4): movzx 0x0(%rbp),%ebx
68a8(4): lea 0x1(%rbp),%rdx
68ac(5): jmp 0xfffff859(%rip)
68b1(3): mov %rsi,%rdi
68b4(5): call 0xffffad0c(%rip)
68b9(3): test %rax,%rax
68bc(3): mov %rax,%rcx
68bf(5): mov 0x30(%rsp),%r11d
68c4(5): mov 0x38(%rsp),%r8
68c9(5): mov 0x40(%rsp),%r10
68ce(5): mov 0x48(%rsp),%r9
68d3(6): jz 0x169(%rip)
68d9(3): mov (%r15),%rdx
68dc(5): mov 0x8(%rsp),%rsi
68e1(3): mov %rcx,%rdi
68e4(5): mov %r9,0x48(%rsp)
68e9(5): mov %r10,0x40(%rsp)
68ee(5): mov %r8,0x38(%rsp)
68f3(5): mov %r11d,0x30(%rsp)
68f8(4): shl/sal $0x5,%rdx
68fc(5): call 0xffffac94(%rip)
6901(5): mov 0x48(%rsp),%r9
6906(5): mov 0x40(%rsp),%r10
690b(3): mov %rax,%rcx
690e(5): mov 0x38(%rsp),%r8
6913(5): mov 0x30(%rsp),%r11d
6918(5): jmp 0xffffff36(%rip)
691d(3): mov %rsi,%rdi
6920(5): call 0xffffaca0(%rip)
6925(3): test %rax,%rax
6928(3): mov %rax,%rcx
692b(5): mov 0x30(%rsp),%r8
6930(5): mov 0x38(%rsp),%r10
6935(5): mov 0x40(%rsp),%r9
693a(6): jz 0xef(%rip)
6940(4): lea 0x0(%rbx,%rbx,4),%rax
6944(5): mov 0x28(%rsp),%rsi
6949(3): mov %rcx,%rdi
694c(5): mov %r9,0x40(%rsp)
6951(5): mov %r10,0x38(%rsp)
6956(4): lea 0x0(%rbx,%rax,2),%rdx
695a(5): mov %r8,0x30(%rsp)
695f(4): shl/sal $0x3,%rdx
6963(5): call 0xffffac2d(%rip)
6968(3): mov (%r14),%rbx
696b(3): mov %rax,%rcx
696e(5): mov 0x40(%rsp),%r9
6973(5): mov 0x38(%rsp),%r10
6978(5): mov 0x30(%rsp),%r8
697d(5): jmp 0xfffff91a(%rip)
6982(3): mov (%r15),%rax
6985(5): jmp 0xfffffa02(%rip)
698a(3): cmp $0x5,%edx
698d(6): jnz 0xfffffe02(%rip)
6993(4): movzx (%r11),%ebx
6997(3): mov %r11,%rbp
699a(5): jmp 0xfffff774(%rip)
699f(3): add %r9,%r9
69a2(4): lea 0x1(%rbx),%rax
69a6(3): cmp %rbx,%r9
69a9(4): cmovbe %rax,%r9
69ad(a): mov $0x576460752303423487,%rax
69b7(3): cmp %rax,%r9
69ba(6): jnbe 0x211(%rip)
69c0(3): mov %r9,%rsi
69c3(5): mov %r9,0x48(%rsp)
69c8(5): mov %r10,0x40(%rsp)
69cd(4): shl/sal $0x5,%rsi
69d1(5): cmp %rcx,0x8(%rsp)
69d6(5): mov %r8,0x38(%rsp)
69db(5): mov %r11,0x30(%rsp)
69e0(6): jz 0x1be(%rip)
69e6(3): mov %rcx,%rdi
69e9(5): call 0xffffac27(%rip)
69ee(4): mov 0x8(%r15),%rdx
69f2(5): mov 0x30(%rsp),%r11
69f7(3): mov %rax,%rcx
69fa(5): mov 0x38(%rsp),%r8
69ff(5): mov 0x40(%rsp),%r10
6a04(5): mov 0x48(%rsp),%r9
6a09(3): test %rcx,%rcx
6a0c(6): jz 0x21b(%rip)
6a12(5): cmp %rdx,0x8(%rsp)
6a17(3): mov (%r15),%rax
6a1a(6): jz 0x1c6(%rip)
6a20(4): mov %rcx,0x8(%r15)
6a24(5): jmp 0xfffffa19(%rip)
6a29(4): mov 0x8(%r15),%rcx
6a2d(5): cmp %rcx,0x8(%rsp)
6a32(2): jz 0x1a(%rip)
6a34(3): mov %rcx,%rdi
6a37(5): call 0xffffa9b9(%rip)
6a3c(4): mov 0x8(%r14),%rdi
6a40(5): cmp %rdi,0x28(%rsp)
6a45(2): jz 0x7(%rip)
6a47(5): call 0xffffa9a9(%rip)
6a4c(5): call 0xffffa9c4(%rip)
6a51(6): mov $0xc,(%rax)
6a57(5): mov $0xffffffff,%eax
6a5c(5): jmp 0xfffff586(%rip)
6a61(3): mov %rsi,%rdi
6a64(5): call 0xffffab5c(%rip)
6a69(5): mov 0x8(%rsp),%rdx
6a6e(3): mov %rax,%rcx
6a71(5): mov 0x40(%rsp),%r9
6a76(5): mov 0x38(%rsp),%r10
6a7b(5): mov 0x30(%rsp),%r8
6a80(5): jmp 0xfffff8ec(%rip)
6a85(5): mov 0x20(%rsp),%rsi
6a8a(4): cmp $0xffffffff,%rsi
6a8e(4): lea 0x1(%rsi),%rax
6a92(5): mov %rsi,0x40(%r12)
6a97(6): jz 0xfffffcf4(%rip)
6a9d(5): mov 0x20(%rsp),%rbx
6aa2(5): mov %rax,0x20(%rsp)
6aa7(5): jmp 0xfffff986(%rip)
6aac(3): mov %r11,%rdx
6aaf(4): add $0x1,%rdx
6ab3(3): movzx (%rdx),%ecx
6ab6(3): lea 0xffffffd0(%rcx),%esi
6ab9(4): cmp $0x9,%sil
6abd(2): jbe 0xfffffff2(%rip)
6abf(3): cmp $0x24,%cl
6ac2(6): jnz 0xfffff95c(%rip)
6ac8(2): xor %ecx,%ecx
6aca(a): mov $0x1844674407370955161,%rsi
6ad4(3): sub $0x30,%eax
6ad7(3): mov %r8,%rdx
6ada(3): cmp %rsi,%rcx
6add(2): cwde 
6adf(2): jnbe 0x9(%rip)
6ae1(4): lea 0x0(%rcx,%rcx,4),%rdx
6ae5(3): add %rdx,%rdx
6ae8(3): mov %r11,%rsi
6aeb(2): xor %ebx,%ebx
6aed(3): add %rax,%rdx
6af0(5): movsx 0x1(%r11),%eax
6af5(3): setb %bl
6af8(4): add $0x1,%r11
6afc(3): mov %rdx,%rcx
6aff(3): test %rbx,%rbx
6b02(3): lea 0xffffffd0(%rax),%edi
6b05(2): jz 0x73(%rip)
6b07(4): cmp $0x9,%dil
6b0b(6): jnbe 0xfffffc80(%rip)
6b11(3): sub $0x30,%eax
6b14(3): mov %r8,%rdx
6b17(3): mov %r11,%rsi
6b1a(2): cwde 
6b1c(2): jmp 0xffffffcf(%rip)
6b1e(4): cmp $0x9,%dil
6b22(6): jnbe 0xfffffc69(%rip)
6b28(3): movsx %cl,%eax
6b2b(3): mov %rdx,%rbp
6b2e(3): mov %r8,%rcx
6b31(3): sub $0x30,%eax
6b34(2): cwde 
6b36(5): jmp 0xfffffac3(%rip)
6b3b(5): mov 0x8(%rsp),%rsi
6b40(4): shl/sal $0x5,%rax
6b44(3): mov %rcx,%rdi
6b47(3): mov %rax,%rdx
6b4a(5): mov %r9,0x40(%rsp)
6b4f(5): mov %r10,0x38(%rsp)
6b54(5): mov %r8,0x30(%rsp)
6b59(5): call 0xffffaa37(%rip)
6b5e(5): mov 0x40(%rsp),%r9
6b63(3): mov %rax,%rcx
6b66(5): mov 0x38(%rsp),%r10
6b6b(3): mov (%r15),%rax
6b6e(5): mov 0x30(%rsp),%r8
6b73(5): jmp 0xfffff810(%rip)
6b78(4): cmp $0x9,%dil
6b7c(6): jbe 0xffffff4e(%rip)
6b82(4): lea 0xffffffff(%rdx),%rbx
6b86(4): cmp $0xfffffffd,%rbx
6b8a(6): jnbe 0xfffffc01(%rip)
6b90(5): mov %rbx,0x40(%r12)
6b95(4): lea 0x2(%rsi),%r11
6b99(5): jmp 0xfffff894(%rip)
6b9e(3): mov %rsi,%rdi
6ba1(5): call 0xffffaa1f(%rip)
6ba6(5): mov 0x8(%rsp),%rdx
6bab(3): mov %rax,%rcx
6bae(5): mov 0x48(%rsp),%r9
6bb3(5): mov 0x40(%rsp),%r10
6bb8(5): mov 0x38(%rsp),%r8
6bbd(5): mov 0x30(%rsp),%r11
6bc2(5): jmp 0xfffffe47(%rip)
6bc7(4): mov 0x8(%r15),%rcx
6bcb(5): cmp %rcx,0x8(%rsp)
6bd0(6): jnz 0xfffffe64(%rip)
6bd6(5): jmp 0xfffffe66(%rip)
6bdb(5): nop 0x0(%rax,%rax,1)
6be0(5): mov 0x8(%rsp),%rsi
6be5(4): shl/sal $0x5,%rax
6be9(3): mov %rcx,%rdi
6bec(3): mov %rax,%rdx
6bef(5): mov %r9,0x48(%rsp)
6bf4(5): mov %r10,0x40(%rsp)
6bf9(5): mov %r8,0x38(%rsp)
6bfe(5): mov %r11,0x30(%rsp)
6c03(5): call 0xffffa98d(%rip)
6c08(5): mov 0x48(%rsp),%r9
6c0d(3): mov %rax,%rcx
6c10(5): mov 0x40(%rsp),%r10
6c15(3): mov (%r15),%rax
6c18(5): mov 0x38(%rsp),%r8
6c1d(5): mov 0x30(%rsp),%r11
6c22(5): jmp 0xfffffdfe(%rip)
6c27(3): mov %rdx,%rcx
6c2a(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
6c30(2): push %r15
6c32(2): push %r14
6c34(3): mov %rdx,%r15
6c37(2): push %r13
6c39(2): push %r12
6c3b(7): lea 0x202eae(%rip),%r12
6c42(1): push %rbp
6c43(7): lea 0x202eae(%rip),%rbp
6c4a(1): push %rbx
6c4b(3): mov %edi,%r13d
6c4e(3): mov %rsi,%r14
6c51(3): sub %r12,%rbp
6c54(4): sub $0x8,%rsp
6c58(4): sar $0x3,%rbp
6c5c(5): call 0xffffa75c(%rip)
6c61(3): test %rbp,%rbp
6c64(2): jz 0x22(%rip)
6c66(2): xor %ebx,%ebx
6c68(8): nop 0x0(%rax,%rax,1)
6c70(3): mov %r15,%rdx
6c73(3): mov %r14,%rsi
6c76(3): mov %r13d,%edi
6c79(4): call 0x0(%r12,%rbx,8)
6c7d(4): add $0x1,%rbx
6c81(3): cmp %rbx,%rbp
6c84(2): jnz 0xffffffec(%rip)
6c86(4): add $0x8,%rsp
6c8a(1): pop %rbx
6c8b(1): pop %rbp
6c8c(2): pop %r12
6c8e(2): pop %r13
6c90(2): pop %r14
6c92(2): pop %r15
6c94(1): ret near (%rsp)

"atexit" :
6cb0(7): mov 0x203351(%rip),%rdx
6cb7(2): xor %esi,%esi
6cb9(5): jmp 0xffffa9b7(%rip)

"_fini" :
6cc0(4): sub $0x8,%rsp
6cc4(4): add $0x8,%rsp
6cc8(1): ret near (%rsp)

