
"getenv@plt" :
2050(6): jmp 0x211cca(%rip)
2056(5): push $0x0

"__snprintf_chk@plt" :
2060(6): jmp 0x211cc2(%rip)
2066(5): push $0x1

"free@plt" :
2070(6): jmp 0x211cba(%rip)
2076(5): push $0x2

"endmntent@plt" :
2080(6): jmp 0x211cb2(%rip)
2086(5): push $0x3

"strverscmp@plt" :
2090(6): jmp 0x211caa(%rip)
2096(5): push $0x4

"abort@plt" :
20a0(6): jmp 0x211ca2(%rip)
20a6(5): push $0x5

"__errno_location@plt" :
20b0(6): jmp 0x211c9a(%rip)
20b6(5): push $0x6

"strncmp@plt" :
20c0(6): jmp 0x211c92(%rip)
20c6(5): push $0x7

"_exit@plt" :
20d0(6): jmp 0x211c8a(%rip)
20d6(5): push $0x8

"__fpending@plt" :
20e0(6): jmp 0x211c82(%rip)
20e6(5): push $0x9

"isatty@plt" :
20f0(6): jmp 0x211c7a(%rip)
20f6(5): push $0xa

"iswcntrl@plt" :
2100(6): jmp 0x211c72(%rip)
2106(5): push $0xb

"wcswidth@plt" :
2110(6): jmp 0x211c6a(%rip)
2116(5): push $0xc

"localeconv@plt" :
2120(6): jmp 0x211c62(%rip)
2126(5): push $0xd

"mbstowcs@plt" :
2130(6): jmp 0x211c5a(%rip)
2136(5): push $0xe

"readlink@plt" :
2140(6): jmp 0x211c52(%rip)
2146(5): push $0xf

"fcntl@plt" :
2150(6): jmp 0x211c4a(%rip)
2156(5): push $0x10

"textdomain@plt" :
2160(6): jmp 0x211c42(%rip)
2166(5): push $0x11

"fclose@plt" :
2170(6): jmp 0x211c3a(%rip)
2176(5): push $0x12

"bindtextdomain@plt" :
2180(6): jmp 0x211c32(%rip)
2186(5): push $0x13

"dcgettext@plt" :
2190(6): jmp 0x211c2a(%rip)
2196(5): push $0x14

"__ctype_get_mb_cur_max@plt" :
21a0(6): jmp 0x211c22(%rip)
21a6(5): push $0x15

"strlen@plt" :
21b0(6): jmp 0x211c1a(%rip)
21b6(5): push $0x16

"__lxstat@plt" :
21c0(6): jmp 0x211c12(%rip)
21c6(5): push $0x17

"openat@plt" :
21d0(6): jmp 0x211c0a(%rip)
21d6(5): push $0x18

"chdir@plt" :
21e0(6): jmp 0x211c02(%rip)
21e6(5): push $0x19

"__stack_chk_fail@plt" :
21f0(6): jmp 0x211bfa(%rip)
21f6(5): push $0x1a

"getopt_long@plt" :
2200(6): jmp 0x211bf2(%rip)
2206(5): push $0x1b

"mbrtowc@plt" :
2210(6): jmp 0x211bea(%rip)
2216(5): push $0x1c

"strchr@plt" :
2220(6): jmp 0x211be2(%rip)
2226(5): push $0x1d

"__fxstatat@plt" :
2230(6): jmp 0x211bda(%rip)
2236(5): push $0x1e

"__overflow@plt" :
2240(6): jmp 0x211bd2(%rip)
2246(5): push $0x1f

"strrchr@plt" :
2250(6): jmp 0x211bca(%rip)
2256(5): push $0x20

"uname@plt" :
2260(6): jmp 0x211bc2(%rip)
2266(5): push $0x21

"lseek@plt" :
2270(6): jmp 0x211bba(%rip)
2276(5): push $0x22

"__assert_fail@plt" :
2280(6): jmp 0x211bb2(%rip)
2286(5): push $0x23

"__strtoul_internal@plt" :
2290(6): jmp 0x211baa(%rip)
2296(5): push $0x24

"memset@plt" :
22a0(6): jmp 0x211ba2(%rip)
22a6(5): push $0x25

"getcwd@plt" :
22b0(6): jmp 0x211b9a(%rip)
22b6(5): push $0x26

"canonicalize_file_name@plt" :
22c0(6): jmp 0x211b92(%rip)
22c6(5): push $0x27

"close@plt" :
22d0(6): jmp 0x211b8a(%rip)
22d6(5): push $0x28

"strspn@plt" :
22e0(6): jmp 0x211b82(%rip)
22e6(5): push $0x29

"memchr@plt" :
22f0(6): jmp 0x211b7a(%rip)
22f6(5): push $0x2a

"memcmp@plt" :
2300(6): jmp 0x211b72(%rip)
2306(5): push $0x2b

"fputs_unlocked@plt" :
2310(6): jmp 0x211b6a(%rip)
2316(5): push $0x2c

"calloc@plt" :
2320(6): jmp 0x211b62(%rip)
2326(5): push $0x2d

"__getdelim@plt" :
2330(6): jmp 0x211b5a(%rip)
2336(5): push $0x2e

"strcmp@plt" :
2340(6): jmp 0x211b52(%rip)
2346(5): push $0x2f

"__memcpy_chk@plt" :
2350(6): jmp 0x211b4a(%rip)
2356(5): push $0x30

"memcpy@plt" :
2360(6): jmp 0x211b42(%rip)
2366(5): push $0x31

"fileno@plt" :
2370(6): jmp 0x211b3a(%rip)
2376(5): push $0x32

"statfs@plt" :
2380(6): jmp 0x211b32(%rip)
2386(5): push $0x33

"__xstat@plt" :
2390(6): jmp 0x211b2a(%rip)
2396(5): push $0x34

"sync@plt" :
23a0(6): jmp 0x211b22(%rip)
23a6(5): push $0x35

"wcwidth@plt" :
23b0(6): jmp 0x211b1a(%rip)
23b6(5): push $0x36

"malloc@plt" :
23c0(6): jmp 0x211b12(%rip)
23c6(5): push $0x37

"fflush@plt" :
23d0(6): jmp 0x211b0a(%rip)
23d6(5): push $0x38

"getmntent@plt" :
23e0(6): jmp 0x211b02(%rip)
23e6(5): push $0x39

"setmntent@plt" :
23f0(6): jmp 0x211afa(%rip)
23f6(5): push $0x3a

"nl_langinfo@plt" :
2400(6): jmp 0x211af2(%rip)
2406(5): push $0x3b

"sscanf@plt" :
2410(6): jmp 0x211aea(%rip)
2416(5): push $0x3c

"__freading@plt" :
2420(6): jmp 0x211ae2(%rip)
2426(5): push $0x3d

"statvfs@plt" :
2430(6): jmp 0x211ada(%rip)
2436(5): push $0x3e

"fchdir@plt" :
2440(6): jmp 0x211ad2(%rip)
2446(5): push $0x3f

"realloc@plt" :
2450(6): jmp 0x211aca(%rip)
2456(5): push $0x40

"setlocale@plt" :
2460(6): jmp 0x211ac2(%rip)
2466(5): push $0x41

"__printf_chk@plt" :
2470(6): jmp 0x211aba(%rip)
2476(5): push $0x42

"mempcpy@plt" :
2480(6): jmp 0x211ab2(%rip)
2486(5): push $0x43

"memmove@plt" :
2490(6): jmp 0x211aaa(%rip)
2496(5): push $0x44

"error@plt" :
24a0(6): jmp 0x211aa2(%rip)
24a6(5): push $0x45

"memrchr@plt" :
24b0(6): jmp 0x211a9a(%rip)
24b6(5): push $0x46

"open@plt" :
24c0(6): jmp 0x211a92(%rip)
24c6(5): push $0x47

"fseeko@plt" :
24d0(6): jmp 0x211a8a(%rip)
24d6(5): push $0x48

"fopen@plt" :
24e0(6): jmp 0x211a82(%rip)
24e6(5): push $0x49

"__cxa_atexit@plt" :
24f0(6): jmp 0x211a7a(%rip)
24f6(5): push $0x4a

"wcstombs@plt" :
2500(6): jmp 0x211a72(%rip)
2506(5): push $0x4b

"exit@plt" :
2510(6): jmp 0x211a6a(%rip)
2516(5): push $0x4c

"fwrite@plt" :
2520(6): jmp 0x211a62(%rip)
2526(5): push $0x4d

"__fprintf_chk@plt" :
2530(6): jmp 0x211a5a(%rip)
2536(5): push $0x4e

"strdup@plt" :
2540(6): jmp 0x211a52(%rip)
2546(5): push $0x4f

"mbsinit@plt" :
2550(6): jmp 0x211a4a(%rip)
2556(5): push $0x50

"iswprint@plt" :
2560(6): jmp 0x211a42(%rip)
2566(5): push $0x51

"hasmntopt@plt" :
2570(6): jmp 0x211a3a(%rip)
2576(5): push $0x52

"strstr@plt" :
2580(6): jmp 0x211a32(%rip)
2586(5): push $0x53

"__ctype_b_loc@plt" :
2590(6): jmp 0x211a2a(%rip)
2596(5): push $0x54

"__sprintf_chk@plt" :
25a0(6): jmp 0x211a22(%rip)
25a6(5): push $0x55

".plt.got" :
25b0(6): jmp 0x211a3a(%rip)
25b6(2): nop 

"_init" :
2020(4): sub $0x8,%rsp
2024(7): mov 0x211fb5(%rip),%rax
202b(3): test %rax,%rax
202e(2): jz 0x4(%rip)
2030(2): call %rax
2032(4): add $0x8,%rsp
2036(1): ret near (%rsp)

"main" :
25c0(2): push %r15
25c2(2): push %r14
25c4(3): mov %rsi,%r14
25c7(2): push %r13
25c9(2): push %r12
25cb(1): push %rbp
25cc(1): push %rbx
25cd(7): lea 0x2112ac(%rip),%rbx
25d4(2): xor %ebp,%ebp
25d6(7): sub $0x148,%rsp
25dd(4): mov %edi,0x8(%rsp)
25e1(3): mov (%rsi),%rdi
25e4(8): lea 0x80(%rsp),%r15
25ec(9): mov $0x28,%rax
25f5(8): mov %rax,0x138(%rsp)
25fd(2): xor %eax,%eax
25ff(5): call 0x6201(%rip)
2604(7): lea 0xdff6(%rip),%rsi
260b(5): mov $0x6,%edi
2610(5): call 0xfffffe50(%rip)
2615(7): lea 0xcb15(%rip),%rsi
261c(7): lea 0xcac9(%rip),%rdi
2623(5): call 0xfffffb5d(%rip)
2628(7): lea 0xcabd(%rip),%rdi
262f(5): call 0xfffffb31(%rip)
2634(7): lea 0x3765(%rip),%rdi
263b(5): call 0xc985(%rip)
2640(7): lea 0xd751(%rip),%rsi
2647(5): mov $0x5,%edx
264c(2): xor %edi,%edi
264e(b): mov $0x0,0x211d97(%rip)
2659(b): mov $0x0,0x211d84(%rip)
2664(7): mov $0x0,0x211da3(%rip)
266b(7): mov $0x0,0x211d9a(%rip)
2672(a): mov $0xffffffff,0x211d8c(%rip)
267c(7): mov $0x0,0x211d56(%rip)
2683(7): mov $0x0,0x211d73(%rip)
268a(a): mov $0x0,0x211d64(%rip)
2694(7): mov $0x0,0x211d3d(%rip)
269b(b): mov $0x1,0x211cfa(%rip)
26a6(5): call 0xfffffaea(%rip)
26ab(3): mov %rax,%r12
26ae(2): nop 
26b0(4): mov 0x8(%rsp),%edi
26b4(7): lea 0xca8e(%rip),%rdx
26bb(3): mov %r15,%r8
26be(3): mov %rbx,%rcx
26c1(3): mov %r14,%rsi
26c4(b): mov $0xffffffff,0x80(%rsp)
26cf(5): call 0xfffffb31(%rip)
26d4(3): cmp $0xff,%eax
26d7(6): jz 0x339(%rip)
26dd(3): cmp $0x69,%eax
26e0(6): jz 0x1a0(%rip)
26e6(2): jle 0x3a(%rip)
26e8(3): cmp $0x76,%eax
26eb(2): jz 0xffffffc5(%rip)
26ed(6): jle 0x83(%rip)
26f3(5): cmp $0x81,%eax
26f8(6): jz 0x240(%rip)
26fe(6): jnle 0x10a(%rip)
2704(3): cmp $0x78,%eax
2707(6): jz 0x251(%rip)
270d(3): add $0x80,%eax
2710(6): jnz 0x2f6(%rip)
2716(7): mov $0x0,0x211cdf(%rip)
271d(2): jmp 0xffffff93(%rip)
271f(1): nop 
2720(3): cmp $0x48,%eax
2723(6): jz 0x17d(%rip)
2729(2): jle 0x7f(%rip)
272b(3): cmp $0x54,%eax
272e(6): jz 0x1b2(%rip)
2734(6): jle 0x18c(%rip)
273a(3): cmp $0x61,%eax
273d(6): jz 0x20b(%rip)
2743(3): cmp $0x68,%eax
2746(6): jnz 0x2c0(%rip)
274c(a): mov $0xb0,0x211cb2(%rip)
2756(b): mov $0x1,0x211c9f(%rip)
2761(5): jmp 0xffffff4f(%rip)
2766(a): nop 0x0(%rax,%rax,1)
2770(3): cmp $0x6c,%eax
2773(6): jz 0x1b5(%rip)
2779(6): jle 0x187(%rip)
277f(3): cmp $0x6d,%eax
2782(6): jnz 0x27f(%rip)
2788(a): mov $0x0,0x211c76(%rip)
2792(b): mov $0x100000,0x211c63(%rip)
279d(5): jmp 0xffffff13(%rip)
27a2(6): nop 0x0(%rax,%rax,1)
27a8(5): cmp $0xffffff7e,%eax
27ad(6): jz 0x1310(%rip)
27b3(6): jle 0x1d5(%rip)
27b9(3): cmp $0x42,%eax
27bc(6): jnz 0x215(%rip)
27c2(7): mov 0x211b4f(%rip),%rdi
27c9(7): lea 0x211c30(%rip),%rdx
27d0(7): lea 0x211c31(%rip),%rsi
27d7(5): call 0x5789(%rip)
27dc(2): test %eax,%eax
27de(6): jz 0xfffffed2(%rip)
27e4(7): mov 0x211b2d(%rip),%r8
27eb(7): mov 0x80(%rsp),%esi
27f2(7): lea 0x211087(%rip),%rcx
27f9(5): mov $0x42,%edx
27fe(2): mov %eax,%edi
2800(5): call 0x8890(%rip)
2805(3): nop (%rax)
2808(5): cmp $0x82,%eax
280d(2): jz 0x63(%rip)
280f(5): cmp $0x83,%eax
2814(6): jnz 0x1f2(%rip)
281a(6): mov 0x211b60(%rip),%eax
2820(3): cmp $0x1,%eax
2823(6): jz 0x135b(%rip)
2829(2): test %eax,%eax
282b(2): jnz 0xb(%rip)
282d(3): test %bpl,%bpl
2830(6): jnz 0x12bf(%rip)
2836(7): cmp $0x0,0x211b9c(%rip)
283d(6): jnz 0x1331(%rip)
2843(7): mov 0x211ace(%rip),%rdi
284a(a): mov $0x4,0x211b2c(%rip)
2854(3): test %rdi,%rdi
2857(6): jz 0xfffffe59(%rip)
285d(5): call 0x29b3(%rip)
2862(5): jmp 0xfffffe4e(%rip)
2867(9): nop 0x0(%rax,%rax,1)
2870(7): mov $0x1,0x211b61(%rip)
2877(5): jmp 0xfffffe39(%rip)
287c(4): nop 0x0(%rax)
2880(7): cmp $0x4,0x211af9(%rip)
2887(6): jz 0x12f7(%rip)
288d(a): mov $0x1,0x211ae9(%rip)
2897(5): jmp 0xfffffe19(%rip)
289c(4): nop 0x0(%rax)
28a0(a): mov $0x90,0x211b5e(%rip)
28aa(b): mov $0x1,0x211b4b(%rip)
28b5(5): jmp 0xfffffdfb(%rip)
28ba(6): nop 0x0(%rax,%rax,1)
28c0(3): cmp $0x50,%eax
28c3(6): jnz 0x143(%rip)
28c9(7): cmp $0x4,0x211ab0(%rip)
28d0(6): jz 0x127d(%rip)
28d6(5): mov $0x1,%ebp
28db(5): jmp 0xfffffdd5(%rip)
28e0(7): cmp $0x4,0x211a99(%rip)
28e7(6): jz 0x1287(%rip)
28ed(7): mov $0x1,0x211ae5(%rip)
28f4(5): jmp 0xfffffdbc(%rip)
28f9(7): nop 0x0(%rax)
2900(3): cmp $0x6b,%eax
2903(6): jnz 0x103(%rip)
2909(a): mov $0x0,0x211af5(%rip)
2913(b): mov $0x400,0x211ae2(%rip)
291e(5): jmp 0xfffffd92(%rip)
2923(5): nop 0x0(%rax,%rax,1)
2928(7): mov $0x1,0x211ade(%rip)
292f(5): jmp 0xfffffd81(%rip)
2934(4): nop 0x0(%rax)
2938(7): mov $0x1,0x211abd(%rip)
293f(5): jmp 0xfffffd71(%rip)
2944(4): nop 0x0(%rax)
2948(7): mov $0x1,0x211abf(%rip)
294f(5): jmp 0xfffffd61(%rip)
2954(4): nop 0x0(%rax)
2958(5): mov $0x10,%edi
295d(7): mov 0x2119b4(%rip),%r13
2964(5): call 0x846c(%rip)
2969(7): mov 0x211a78(%rip),%rdx
2970(7): mov %rax,0x211a71(%rip)
2977(3): mov %r13,(%rax)
297a(4): mov %rdx,0x8(%rax)
297e(5): jmp 0xfffffd32(%rip)
2983(5): nop 0x0(%rax,%rax,1)
2988(5): cmp $0xffffff7d,%eax
298d(2): jnz 0x79(%rip)
298f(7): lea 0xc7fa(%rip),%rax
2996(7): mov 0x21196b(%rip),%rdi
299d(7): mov 0x2118bc(%rip),%rcx
29a4(2): push $0x0
29a6(7): lea 0xc7c1(%rip),%r9
29ad(7): lea 0xc7ca(%rip),%r8
29b4(1): push %rax
29b5(7): lea 0xc72c(%rip),%rdx
29bc(7): lea 0xc6a9(%rip),%rsi
29c3(2): xor %eax,%eax
29c5(5): call 0x82ab(%rip)
29ca(2): xor %edi,%edi
29cc(5): call 0xfffffb44(%rip)
29d1(3): cmp $0x46,%eax
29d4(2): jnz 0x32(%rip)
29d6(5): mov $0x10,%edi
29db(7): mov 0x211936(%rip),%r13
29e2(5): call 0x83ee(%rip)
29e7(7): mov 0x211a02(%rip),%rdx
29ee(7): mov %rax,0x2119fb(%rip)
29f5(3): mov %r13,(%rax)
29f8(4): mov %rdx,0x8(%rax)
29fc(5): jmp 0xfffffcb4(%rip)
2a01(3): cmp $0x74,%eax
2a04(2): jz 0xffffffd2(%rip)
2a06(5): mov $0x1,%edi
2a0b(5): call 0x2365(%rip)
2a10(7): cmp $0xff,0x2119f1(%rip)
2a17(6): jz 0x20d(%rip)
2a1d(6): mov 0x21195d(%rip),%eax
2a23(3): cmp $0x1,%eax
2a26(2): jz 0x1e(%rip)
2a28(3): cmp $0x4,%eax
2a2b(2): jz 0x19(%rip)
2a2d(7): test $0x10,0x2119d4(%rip)
2a34(6): jz 0x28e(%rip)
2a3a(a): mov $0x2,0x21193c(%rip)
2a44(7): mov 0x2119a5(%rip),%rbp
2a4b(3): xor %r12d,%r12d
2a4e(3): test %rbp,%rbp
2a51(6): jz 0xb0(%rip)
2a57(9): nop 0x0(%rax,%rax,1)
2a60(7): mov 0x211981(%rip),%rbx
2a67(3): test %rbx,%rbx
2a6a(2): jz 0x5b(%rip)
2a6c(4): mov 0x0(%rbp),%r13
2a70(2): jmp 0x11(%rip)
2a72(6): nop 0x0(%rax,%rax,1)
2a78(4): mov 0x8(%rbx),%rbx
2a7c(3): test %rbx,%rbx
2a7f(2): jz 0x46(%rip)
2a81(3): mov (%rbx),%rsi
2a84(3): mov %r13,%rdi
2a87(5): call 0xfffff8b9(%rip)
2a8c(2): test %eax,%eax
2a8e(2): jnz 0xffffffea(%rip)
2a90(3): mov %r13,%rdi
2a93(6): mov $0x1,%r12d
2a99(5): call 0x7a77(%rip)
2a9e(7): lea 0xd323(%rip),%rsi
2aa5(3): mov %rax,%rbx
2aa8(5): mov $0x5,%edx
2aad(2): xor %edi,%edi
2aaf(5): call 0xfffff6e1(%rip)
2ab4(3): mov %rbx,%rcx
2ab7(3): mov %rax,%rdx
2aba(2): xor %esi,%esi
2abc(2): xor %edi,%edi
2abe(2): xor %eax,%eax
2ac0(5): call 0xfffff9e0(%rip)
2ac5(4): mov 0x8(%rbp),%rbp
2ac9(3): test %rbp,%rbp
2acc(2): jnz 0xffffff94(%rip)
2ace(3): test %r12b,%r12b
2ad1(5): mov $0x1,%eax
2ad6(2): jz 0x2b(%rip)
2ad8(8): mov 0x138(%rsp),%rcx
2ae0(9): xor $0x28,%rcx
2ae9(6): jnz 0x10a5(%rip)
2aef(7): add $0x148,%rsp
2af6(1): pop %rbx
2af7(1): pop %rbp
2af8(2): pop %r12
2afa(2): pop %r13
2afc(2): pop %r14
2afe(2): pop %r15
2b00(1): ret near (%rsp)
2b01(6): mov 0x211809(%rip),%eax
2b07(4): cmp 0x8(%rsp),%eax
2b0b(6): jnl 0x15e(%rip)
2b11(4): mov 0x8(%rsp),%ecx
2b15(5): mov $0x90,%edx
2b1a(2): xor %esi,%esi
2b1c(2): sub %eax,%ecx
2b1e(3): mov %rdx,%rax
2b21(3): movsxd %ecx,%rcx
2b24(3): mul %rax,%rcx,%rdx
2b27(6): jo 0x101c(%rip)
2b2d(3): test %rax,%rax
2b30(6): js 0xfe3(%rip)
2b36(3): test %rsi,%rsi
2b39(6): jnz 0xfda(%rip)
2b3f(7): imul %rcx,$0x90,%rdi
2b46(7): lea 0xe12a(%rip),%rbp
2b4d(5): call 0x8283(%rip)
2b52(7): movsxd 0x2117b7(%rip),%r12
2b59(5): mov %r15,0x10(%rsp)
2b5e(3): mov %rax,%r13
2b61(3): mov %r14,%r15
2b64(5): mov %rax,0x60(%rsp)
2b69(3): mov %r12,%r14
2b6c(5): mov 0x8(%rsp),%r12d
2b71(2): jmp 0x42(%rip)
2b73(6): sub 0x211797(%rip),%ebx
2b79(3): movsxd %ebx,%rax
2b7c(7): imul %rax,$0x90,%rax
2b83(5): mov 0x18(%r13,%rax,1),%eax
2b88(5): and $0xf000,%eax
2b8d(5): cmp $0x1000,%eax
2b92(2): jz 0x1d(%rip)
2b94(4): mov 0x0(%r15,%r14,8),%rdi
2b98(2): xor %eax,%eax
2b9a(5): mov $0x100,%esi
2b9f(5): call 0xfffff921(%rip)
2ba4(2): test %eax,%eax
2ba6(2): js 0x9(%rip)
2ba8(2): mov %eax,%edi
2baa(5): call 0xfffff726(%rip)
2baf(4): add $0x1,%r14
2bb3(3): cmp %r12d,%r14d
2bb6(3): mov %r14d,%ebx
2bb9(6): jnl 0xa8(%rip)
2bbf(3): mov %r14d,%edx
2bc2(6): sub 0x211748(%rip),%edx
2bc8(4): mov 0x0(%r15,%r14,8),%rsi
2bcc(5): mov $0x1,%edi
2bd1(3): movsxd %edx,%rdx
2bd4(7): imul %rdx,$0x90,%rdx
2bdb(3): add %r13,%rdx
2bde(5): call 0xfffff7b2(%rip)
2be3(2): test %eax,%eax
2be5(2): jz 0xffffff8e(%rip)
2be7(4): mov 0x0(%r15,%r14,8),%rdx
2beb(5): mov $0x3,%esi
2bf0(2): xor %edi,%edi
2bf2(5): call 0x774e(%rip)
2bf7(3): mov %rax,%rbx
2bfa(5): call 0xfffff4b6(%rip)
2bff(2): mov (%rax),%esi
2c01(3): mov %rbx,%rcx
2c04(3): mov %rbp,%rdx
2c07(2): xor %edi,%edi
2c09(2): xor %eax,%eax
2c0b(5): call 0xfffff895(%rip)
2c10(a): mov $0x1,0x2117de(%rip)
2c1a(8): mov $0x0,0x0(%r15,%r14,8)
2c22(2): jmp 0xffffff8d(%rip)
2c24(3): test %bpl,%bpl
2c27(6): jz 0xb3(%rip)
2c2d(7): lea 0xc568(%rip),%rdi
2c34(a): mov $0x0,0x2117ca(%rip)
2c3e(5): call 0xfffff412(%rip)
2c43(4): cmp $0x1,%rax
2c47(3): sbb %rax,%rax
2c4a(5): and $0x200,%eax
2c4f(6): add $0x200,%rax
2c55(7): mov %rax,0x2117a4(%rip)
2c5c(5): jmp 0xfffffdc1(%rip)
2c61(3): mov %r15,%r14
2c64(5): mov 0x10(%rsp),%r15
2c69(8): cmp $0x0,0x21177f(%rip)
2c71(5): mov $0x1,%edi
2c76(6): jz 0xcec(%rip)
2c7c(5): call 0x8fa4(%rip)
2c81(3): test %rax,%rax
2c84(7): mov %rax,0x211755(%rip)
2c8b(6): jz 0xc5b(%rip)
2c91(7): cmp $0x0,0x211764(%rip)
2c98(2): jz 0x7(%rip)
2c9a(5): call 0xfffff706(%rip)
2c9f(7): cmp $0x4,0x2116da(%rip)
2ca6(6): jnbe 0xe7e(%rip)
2cac(6): mov 0x2116ce(%rip),%eax
2cb2(7): lea 0xc667(%rip),%rdx
2cb9(4): movsxd 0x0(%rdx,%rax,4),%rax
2cbd(3): add %rdx,%rax
2cc0(2): jmp %rax
2cc2(3): test %bpl,%bpl
2cc5(6): jz 0xfffffd7f(%rip)
2ccb(a): mov $0x3,0x2116ab(%rip)
2cd5(5): jmp 0xfffffd6f(%rip)
2cda(7): lea 0xc4cb(%rip),%rdi
2ce1(5): call 0xfffff36f(%rip)
2ce6(7): lea 0x211713(%rip),%rdx
2ced(7): lea 0x211714(%rip),%rsi
2cf4(3): mov %rax,%rdi
2cf7(5): call 0x5269(%rip)
2cfc(5): jmp 0xfffffd21(%rip)
2d01(2): xor %esi,%esi
2d03(2): xor %edi,%edi
2d05(5): call 0x149b(%rip)
2d0a(7): cmp $0x0,0x2116c8(%rip)
2d11(2): jz 0xe(%rip)
2d13(2): xor %esi,%esi
2d15(5): mov $0x1,%edi
2d1a(5): call 0x1486(%rip)
2d1f(2): xor %esi,%esi
2d21(5): mov $0x2,%edi
2d26(5): call 0x147a(%rip)
2d2b(2): xor %esi,%esi
2d2d(5): mov $0x3,%edi
2d32(5): call 0x146e(%rip)
2d37(2): xor %esi,%esi
2d39(5): mov $0x4,%edi
2d3e(5): call 0x1462(%rip)
2d43(7): lea 0xc47f(%rip),%rsi
2d4a(5): mov $0x5,%edi
2d4f(5): call 0x1451(%rip)
2d54(2): xor %esi,%esi
2d56(5): mov $0xa,%edi
2d5b(5): call 0x1445(%rip)
2d60(5): call 0x11b0(%rip)
2d65(7): movsxd 0x2115a4(%rip),%rax
2d6c(4): cmp 0x8(%rsp),%eax
2d70(6): jnl 0x848(%rip)
2d76(5): mov %rax,0x10(%rsp)
2d7b(8): lea 0xa0(%rsp),%rax
2d83(7): mov $0x1,0x211682(%rip)
2d8a(5): mov %r14,0x40(%rsp)
2d8f(5): mov %r15,0x78(%rsp)
2d94(5): mov %rax,0x48(%rsp)
2d99(5): mov 0x40(%rsp),%rcx
2d9e(5): mov 0x10(%rsp),%rax
2da3(4): mov 0x0(%rcx,%rax,8),%rcx
2da7(3): test %rcx,%rcx
2daa(3): mov %rcx,%rbx
2dad(5): mov %rcx,0x30(%rsp)
2db2(6): jz 0x3d0(%rip)
2db8(6): sub 0x211552(%rip),%eax
2dbe(2): cwde 
2dc0(7): imul %rax,$0x90,%rax
2dc7(5): add 0x60(%rsp),%rax
2dcc(5): mov %rax,0x50(%rsp)
2dd1(3): mov 0x18(%rax),%eax
2dd4(4): mov %eax,0x18(%rsp)
2dd8(5): and $0xb000,%eax
2ddd(5): cmp $0x2000,%eax
2de2(6): jnz 0x184(%rip)
2de8(3): mov %rcx,%rdi
2deb(5): call 0xfffff4d5(%rip)
2df0(3): test %rax,%rax
2df3(5): mov %rax,0x68(%rsp)
2df8(6): jz 0xadf(%rip)
2dfe(3): cmp $0x2f,(%rax)
2e01(4): cmove %rax,%rbx
2e05(5): mov %rbx,0x18(%rsp)
2e0a(7): mov 0x2115cf(%rip),%rbx
2e11(3): test %rbx,%rbx
2e14(6): jz 0xc64(%rip)
2e1a(3): xor %r14d,%r14d
2e1d(9): mov $0x0,0x58(%rsp)
2e26(9): mov $0xffffffff,0x38(%rsp)
2e2f(5): mov $0x0,0x20(%rsp)
2e34(4): nop 0x0(%rax)
2e38(3): mov (%rbx),%rbp
2e3b(3): mov %rbp,%rdi
2e3e(5): call 0xfffff482(%rip)
2e43(3): test %rax,%rax
2e46(3): mov %rax,%r12
2e49(2): jz 0x9(%rip)
2e4b(3): cmp $0x2f,(%rax)
2e4e(4): cmove %rax,%rbp
2e52(5): mov 0x18(%rsp),%rdi
2e57(3): mov %rbp,%rsi
2e5a(5): call 0xfffff4e6(%rip)
2e5f(2): test %eax,%eax
2e61(6): jnz 0xd1(%rip)
2e67(7): mov 0x211572(%rip),%r14
2e6e(3): xor %r15d,%r15d
2e71(4): mov 0x8(%rbx),%r13
2e75(3): test %r14,%r14
2e78(6): jz 0x49e(%rip)
2e7e(2): nop 
2e80(4): mov 0x8(%r14),%rdi
2e84(3): mov %r13,%rsi
2e87(5): call 0xfffff4b9(%rip)
2e8c(2): test %eax,%eax
2e8e(4): cmove %r14,%r15
2e92(4): mov 0x30(%r14),%r14
2e96(3): test %r14,%r14
2e99(2): jnz 0xffffffe7(%rip)
2e9b(3): test %r15,%r15
2e9e(6): jz 0x478(%rip)
2ea4(3): mov (%r15),%rdi
2ea7(5): call 0xfffff419(%rip)
2eac(3): test %rax,%rax
2eaf(3): mov %rax,%r8
2eb2(2): jz 0x7(%rip)
2eb4(3): cmp $0x2f,(%rax)
2eb7(2): jz 0x1e(%rip)
2eb9(3): mov %r8,%rdi
2ebc(5): call 0xfffff1b4(%rip)
2ec1(3): mov (%r15),%rdi
2ec4(5): call 0x813c(%rip)
2ec9(3): test %rax,%rax
2ecc(3): mov %rax,%r8
2ecf(6): jz 0x443(%rip)
2ed5(3): mov %r8,%rdi
2ed8(3): mov %rbp,%rsi
2edb(5): mov %r8,0x28(%rsp)
2ee0(5): call 0xfffff460(%rip)
2ee5(2): test %eax,%eax
2ee7(5): mov 0x28(%rsp),%r8
2eec(6): jnz 0x432(%rip)
2ef2(4): mov 0x8(%rbx),%r13
2ef6(4): or $0xffffffff,%rcx
2efa(2): xor %eax,%eax
2efc(3): mov %r13,%rdi
2eff(2): REPNZ scasb rdi(%es,10),%al
2f01(3): not %rcx
2f04(4): lea 0xffffffff(%rcx),%rbp
2f08(5): movzx 0x20(%rsp),%ecx
2f0d(3): xor $0x1,%ecx
2f10(5): cmp 0x38(%rsp),%rbp
2f15(3): mov %ecx,%r14d
2f18(4): setb %r9b
2f1c(3): or %r9b,%r14b
2f1f(6): jnz 0x40a(%rip)
2f25(5): mov $0x1,0x20(%rsp)
2f2a(3): mov %r8,%rdi
2f2d(5): call 0xfffff143(%rip)
2f32(3): mov %r12,%rdi
2f35(5): call 0xfffff13b(%rip)
2f3a(4): mov 0x30(%rbx),%rbx
2f3e(3): test %rbx,%rbx
2f41(6): jnz 0xfffffef7(%rip)
2f47(5): mov 0x68(%rsp),%rdi
2f4c(5): call 0xfffff124(%rip)
2f51(6): cmp $0x0,0x58(%rsp)
2f57(6): jnz 0x535(%rip)
2f5d(3): test %r14b,%r14b
2f60(6): jnz 0xa56(%rip)
2f66(5): mov 0x30(%rsp),%rdi
2f6b(5): call 0xfffff355(%rip)
2f70(3): test %rax,%rax
2f73(3): mov %rax,%r15
2f76(7): mov 0x211463(%rip),%r12
2f7d(2): jz 0xb(%rip)
2f7f(3): cmp $0x2f,(%rax)
2f82(6): jz 0x54c(%rip)
2f88(3): mov %r15,%rdi
2f8b(5): call 0xfffff0e5(%rip)
2f90(3): test %r12,%r12
2f93(6): jz 0x1aa(%rip)
2f99(2): xor %ebx,%ebx
2f9b(7): mov $0xfffffffe,%rbp
2fa2(5): mov 0x50(%rsp),%r13
2fa7(2): jmp 0x17(%rip)
2fa9(7): nop 0x0(%rax)
2fb0(5): mov 0x30(%r12),%r12
2fb5(3): test %r12,%r12
2fb8(6): jz 0x40f(%rip)
2fbe(6): cmp $0xffffffff,0x20(%r12)
2fc4(6): jz 0x3ce(%rip)
2fca(5): mov 0x20(%r12),%rax
2fcf(4): cmp %rax,0x0(%r13)
2fd3(2): jnz 0xffffffdd(%rip)
2fd5(5): mov 0x18(%r12),%rdi
2fda(7): lea 0xc208(%rip),%rsi
2fe1(5): call 0xfffff35f(%rip)
2fe6(2): test %eax,%eax
2fe8(2): jz 0xffffffc8(%rip)
2fea(3): test %rbx,%rbx
2fed(2): jz 0x10(%rip)
2fef(4): test $0x1,0x28(%rbx)
2ff3(2): jnz 0xa(%rip)
2ff5(6): test $0x1,0x28(%r12)
2ffb(2): jnz 0xffffffb5(%rip)
2ffd(5): mov 0x8(%r12),%rsi
3002(5): mov 0x48(%rsp),%rdx
3007(5): mov $0x1,%edi
300c(5): call 0xfffff384(%rip)
3011(2): test %eax,%eax
3013(2): jnz 0x15(%rip)
3015(5): mov 0x20(%r12),%rax
301a(8): cmp %rax,0xa0(%rsp)
3022(6): jz 0xa18(%rip)
3028(5): mov %rbp,0x20(%r12)
302d(2): jmp 0xffffff83(%rip)
302f(2): xor %esi,%esi
3031(2): xor %edi,%edi
3033(5): call 0x116d(%rip)
3038(7): cmp $0x0,0x21139a(%rip)
303f(2): jz 0xe(%rip)
3041(2): xor %esi,%esi
3043(5): mov $0x1,%edi
3048(5): call 0x1158(%rip)
304d(7): lea 0xc0c1(%rip),%rsi
3054(5): mov $0x2,%edi
3059(5): call 0x1147(%rip)
305e(2): xor %esi,%esi
3060(5): mov $0x3,%edi
3065(5): call 0x113b(%rip)
306a(7): lea 0xc0a9(%rip),%rsi
3071(5): mov $0x4,%edi
3076(5): call 0x112a(%rip)
307b(2): xor %esi,%esi
307d(5): jmp 0xfffffccd(%rip)
3082(2): xor %esi,%esi
3084(2): xor %edi,%edi
3086(5): call 0x111a(%rip)
308b(7): cmp $0x0,0x211347(%rip)
3092(2): jz 0xe(%rip)
3094(2): xor %esi,%esi
3096(5): mov $0x1,%edi
309b(5): call 0x1105(%rip)
30a0(2): xor %esi,%esi
30a2(5): mov $0x6,%edi
30a7(5): call 0x10f9(%rip)
30ac(2): xor %esi,%esi
30ae(5): mov $0x7,%edi
30b3(5): call 0x10ed(%rip)
30b8(2): xor %esi,%esi
30ba(5): mov $0x8,%edi
30bf(5): call 0x10e1(%rip)
30c4(2): xor %esi,%esi
30c6(5): mov $0x9,%edi
30cb(5): call 0x10d5(%rip)
30d0(2): xor %esi,%esi
30d2(5): mov $0xa,%edi
30d7(5): call 0x10c9(%rip)
30dc(5): jmp 0xfffffc84(%rip)
30e1(2): xor %esi,%esi
30e3(2): xor %edi,%edi
30e5(5): call 0x10bb(%rip)
30ea(7): cmp $0x0,0x2112e8(%rip)
30f1(2): jz 0xe(%rip)
30f3(2): xor %esi,%esi
30f5(5): mov $0x1,%edi
30fa(5): call 0x10a6(%rip)
30ff(2): xor %esi,%esi
3101(5): mov $0x2,%edi
3106(5): call 0x109a(%rip)
310b(2): xor %esi,%esi
310d(5): mov $0x3,%edi
3112(5): call 0x108e(%rip)
3117(2): xor %esi,%esi
3119(5): jmp 0xffffff58(%rip)
311e(8): cmp $0x0,0x21124a(%rip)
3126(6): jnz 0xfffffc3a(%rip)
312c(7): lea 0xccf5(%rip),%rdi
3133(5): call 0x20dd(%rip)
3138(5): jmp 0xfffffc28(%rip)
313d(5): mov 0x30(%rsp),%r15
3142(5): mov 0x50(%rsp),%rsi
3147(3): mov %r15,%rdi
314a(5): call 0x2236(%rip)
314f(3): test %rax,%rax
3152(3): mov %rax,%rbx
3155(2): jz 0x2d(%rip)
3157(4): sub $0x8,%rsp
315b(2): xor %edi,%edi
315d(3): xor %r9d,%r9d
3160(2): push $0x0
3162(2): push $0x0
3164(3): xor %r8d,%r8d
3167(2): push $0x0
3169(2): xor %ecx,%ecx
316b(3): mov %r15,%rdx
316e(3): mov %rax,%rsi
3171(5): call 0x11df(%rip)
3176(4): add $0x20,%rsp
317a(3): mov %rbx,%rdi
317d(5): call 0xffffeef3(%rip)
3182(6): add $0x1,0x10(%rsp)
3188(5): mov 0x10(%rsp),%rax
318d(4): cmp %eax,0x8(%rsp)
3191(6): jnle 0xfffffc08(%rip)
3197(5): mov 0x78(%rsp),%r15
319c(7): cmp $0x0,0x21125a(%rip)
31a3(6): jz 0x299(%rip)
31a9(7): cmp $0x0,0x211228(%rip)
31b0(2): jz 0x3e(%rip)
31b2(7): cmp $0x0,0x210e93(%rip)
31b9(7): lea 0xc0d8(%rip),%rdi
31c0(7): lea 0xd792(%rip),%rsi
31c7(7): lea 0x2111d2(%rip),%rax
31ce(4): cmove %rdi,%rsi
31d2(4): sub $0x8,%rsp
31d6(3): xor %r9d,%r9d
31d9(2): push $0x0
31db(1): push %rax
31dc(3): xor %r8d,%r8d
31df(2): push $0x0
31e1(2): xor %ecx,%ecx
31e3(2): xor %edx,%edx
31e5(5): call 0x116b(%rip)
31ea(4): add $0x20,%rsp
31ee(3): xor %r13d,%r13d
31f1(7): cmp 0x211168(%rip),%r13
31f8(6): jnb 0x1c4(%rip)
31fe(7): mov 0x21116b(%rip),%rax
3205(3): test %rax,%rax
3208(6): jz 0xe1(%rip)
320e(7): mov 0x211153(%rip),%rdx
3215(8): lea 0x0(,%r13,8),%r12
321d(2): xor %ebx,%ebx
321f(4): mov 0x0(%rdx,%r13,8),%rdx
3223(3): mov (%rdx),%r14
3226(a): nop 0x0(%rax,%rax,1)
3230(4): sub $0x1,%rax
3234(2): xor %ecx,%ecx
3236(3): mov %r14,%rdi
3239(3): cmp %rbx,%rax
323c(7): mov 0x211135(%rip),%rax
3243(3): mov %r15,%rsi
3246(3): setz %cl
3249(8): lea 0x0(,%rbx,8),%rbp
3251(3): shl/sal $0x3,%ecx
3254(4): mov 0x0(%rax,%rbx,8),%rax
3258(4): mov 0x20(%rax),%rdx
325c(8): mov %rdx,0x80(%rsp)
3264(3): mov 0x28(%rax),%edx
3267(5): call 0x5309(%rip)
326c(3): test %rax,%rax
326f(3): mov %rax,%r14
3272(7): mov 0x21108f(%rip),%rsi
3279(3): mov %rax,%rdi
327c(2): jz 0x5c(%rip)
327e(5): call 0xfffff092(%rip)
3283(3): mov %r14,%rdi
3286(4): add $0x1,%rbx
328a(5): call 0xffffede6(%rip)
328f(7): mov 0x2110da(%rip),%rax
3296(3): cmp %rax,%rbx
3299(2): jnb 0x50(%rip)
329b(7): mov 0x2110c6(%rip),%rdx
32a2(3): test %rbx,%rbx
32a5(4): mov 0x0(%rdx,%r12,1),%rdx
32a9(5): mov 0x8(%rdx,%rbp,1),%r14
32ae(2): jz 0xffffff82(%rip)
32b0(7): mov 0x211051(%rip),%rdi
32b7(4): mov 0x28(%rdi),%rdx
32bb(4): cmp 0x30(%rdi),%rdx
32bf(6): jnb 0x14c(%rip)
32c5(4): lea 0x1(%rdx),%rcx
32c9(4): mov %rcx,0x28(%rdi)
32cd(3): mov $0x20,(%rdx)
32d0(5): jmp 0xffffff60(%rip)
32d5(3): nop (%rax)
32d8(7): mov 0x211089(%rip),%rax
32df(4): mov 0x0(%rax,%r12,1),%rax
32e3(4): mov 0x0(%rax,%rbx,8),%rdi
32e7(2): jmp 0xffffff97(%rip)
32e9(7): mov 0x211018(%rip),%rdi
32f0(4): mov 0x28(%rdi),%rax
32f4(4): cmp 0x30(%rdi),%rax
32f8(6): jnb 0x69e(%rip)
32fe(4): lea 0x1(%rax),%rdx
3302(4): mov %rdx,0x28(%rdi)
3306(3): mov $0xa,(%rax)
3309(4): add $0x1,%r13
330d(5): jmp 0xfffffee4(%rip)
3312(4): mov 0x8(%rbx),%r13
3316(3): xor %r8d,%r8d
3319(5): jmp 0xfffffbdd(%rip)
331e(6): mov $0x1,%r14d
3324(5): jmp 0xfffffc06(%rip)
3329(5): mov 0x48(%rsp),%rdx
332e(3): mov %r13,%rsi
3331(5): mov $0x1,%edi
3336(5): mov %r8,0x28(%rsp)
333b(5): mov %r9b,0x77(%rsp)
3340(4): mov %cl,0x76(%rsp)
3344(5): call 0xfffff04c(%rip)
3349(2): test %eax,%eax
334b(5): mov 0x28(%rsp),%r8
3350(2): jz 0x21(%rip)
3352(5): movzx 0x76(%rsp),%ecx
3357(2): test %cl,%cl
3359(6): jz 0x573(%rip)
335f(6): movzx 0x77(%rsp),%r9d
3365(3): test %r9b,%r9b
3368(6): jz 0x564(%rip)
336e(3): xor %r14d,%r14d
3371(4): cmp $0x1,%rbp
3375(6): jz 0xf8(%rip)
337b(5): mov %rbp,0x38(%rsp)
3380(5): mov %rbx,0x58(%rsp)
3385(5): mov %r14b,0x20(%rsp)
338a(3): xor %r14d,%r14d
338d(5): jmp 0xfffffb9d(%rip)
3392(5): mov 0x8(%r12),%rsi
3397(5): mov 0x48(%rsp),%rdx
339c(5): mov $0x1,%edi
33a1(5): call 0xffffefef(%rip)
33a6(2): test %eax,%eax
33a8(2): jnz 0x79(%rip)
33aa(8): mov 0xa0(%rsp),%rax
33b2(5): mov %rax,0x20(%r12)
33b7(5): jmp 0xfffffc13(%rip)
33bc(6): mov 0x211036(%rip),%eax
33c2(5): jmp 0xfffff716(%rip)
33c7(3): test %rbx,%rbx
33ca(6): jz 0xfffffd73(%rip)
33d0(5): movzx 0x28(%rbx),%r9d
33d5(4): sub $0x8,%rsp
33d9(4): mov 0x8(%rbx),%rsi
33dd(2): push $0x0
33df(2): push $0x0
33e1(4): mov 0x18(%rbx),%r8
33e5(3): mov (%rbx),%rdi
33e8(3): mov %r9d,%eax
33eb(4): and $0x1,%r9d
33ef(2): shr $0x1,%al
33f1(3): and $0x1,%eax
33f4(1): push %rax
33f5(5): mov 0x50(%rsp),%rdx
33fa(3): mov %rdx,%rcx
33fd(5): call 0xf53(%rip)
3402(4): add $0x20,%rsp
3406(5): jmp 0xfffffd7c(%rip)
340b(5): mov $0x20,%esi
3410(5): call 0xffffee30(%rip)
3415(7): mov 0x210f54(%rip),%rax
341c(5): jmp 0xfffffe14(%rip)
3421(5): call 0xffffec8f(%rip)
3426(3): cmp $0x5,(%rax)
3429(3): mov %rax,%r14
342c(6): jz 0x616(%rip)
3432(5): mov %rbp,0x20(%r12)
3437(5): jmp 0xfffffb93(%rip)
343c(7): cmp $0x0,0x210fb5(%rip)
3443(6): jnz 0xffffff79(%rip)
3449(7): lea 0xbd9e(%rip),%rsi
3450(5): mov $0x5,%edx
3455(2): xor %edi,%edi
3457(5): call 0xffffed39(%rip)
345c(2): xor %esi,%esi
345e(3): mov %rax,%rdx
3461(5): mov $0x1,%edi
3466(2): xor %eax,%eax
3468(5): call 0xfffff038(%rip)
346d(3): mov %r8,%rdi
3470(5): call 0xffffec00(%rip)
3475(3): mov %r12,%rdi
3478(5): call 0xffffebf8(%rip)
347d(5): mov 0x68(%rsp),%rdi
3482(5): call 0xffffebee(%rip)
3487(5): mov %rbx,0x58(%rsp)
348c(5): mov 0x58(%rsp),%rcx
3491(4): sub $0x8,%rsp
3495(5): movzx 0x28(%rcx),%r9d
349a(4): mov 0x8(%rcx),%rsi
349e(2): push $0x0
34a0(2): push $0x0
34a2(4): mov 0x18(%rcx),%r8
34a6(3): mov %r9d,%eax
34a9(4): and $0x1,%r9d
34ad(2): shr $0x1,%al
34af(3): and $0x1,%eax
34b2(1): push %rax
34b3(3): mov %rcx,%rax
34b6(5): mov 0x50(%rsp),%rdx
34bb(3): mov (%rax),%rdi
34be(2): xor %ecx,%ecx
34c0(5): call 0xe90(%rip)
34c5(4): add $0x20,%rsp
34c9(5): jmp 0xfffffcb9(%rip)
34ce(4): or $0xffffffff,%r13
34d2(2): xor %eax,%eax
34d4(3): mov %r15,%rdi
34d7(3): mov %r13,%rcx
34da(3): mov %r12,%rbp
34dd(2): xor %ebx,%ebx
34df(2): REPNZ scasb rdi(%es,10),%al
34e1(3): xor %r14d,%r14d
34e4(9): mov $0x0,0x18(%rsp)
34ed(3): mov %rcx,%rax
34f0(3): not %rax
34f3(3): add %r13,%rax
34f6(5): mov %rax,0x20(%rsp)
34fb(2): jmp 0x71(%rip)
34fd(4): mov 0x18(%rbp),%rdi
3501(7): lea 0xbce1(%rip),%rsi
3508(5): call 0xffffee38(%rip)
350d(2): test %eax,%eax
350f(2): jz 0x59(%rip)
3511(3): test %rbx,%rbx
3514(2): jz 0xe(%rip)
3516(4): test $0x1,0x28(%rbx)
351a(2): jnz 0x8(%rip)
351c(4): test $0x1,0x28(%rbp)
3520(2): jnz 0x48(%rip)
3522(4): mov 0x8(%rbp),%r9
3526(3): mov %r13,%rcx
3529(3): mov %r14d,%eax
352c(3): mov %r9,%rdi
352f(2): REPNZ scasb rdi(%es,10),%al
3531(3): not %rcx
3534(4): lea 0xffffffff(%rcx),%r10
3538(5): cmp 0x18(%rsp),%r10
353d(2): jb 0x2b(%rip)
353f(5): mov 0x20(%rsp),%rax
3544(3): cmp %r10,%rax
3547(2): jb 0x21(%rip)
3549(4): cmp $0x1,%r10
354d(6): jz 0x4dc(%rip)
3553(3): cmp %r10,%rax
3556(6): jz 0x4a5(%rip)
355c(6): cmp $0x2f,0xffffffff(%r15,%rcx,1)
3562(6): jz 0x499(%rip)
3568(4): mov 0x30(%rbp),%rbp
356c(3): test %rbp,%rbp
356f(2): jnz 0xffffff8e(%rip)
3571(3): mov %r15,%rdi
3574(5): call 0xffffeafc(%rip)
3579(3): test %rbx,%rbx
357c(6): jz 0xfffffa14(%rip)
3582(4): mov 0x8(%rbx),%rsi
3586(5): mov 0x48(%rsp),%rdx
358b(5): mov $0x1,%edi
3590(5): call 0xffffee00(%rip)
3595(2): test %eax,%eax
3597(6): jnz 0xfffff9f9(%rip)
359d(5): mov 0x50(%rsp),%rax
35a2(3): mov (%rax),%rax
35a5(8): cmp %rax,0xa0(%rsp)
35ad(6): jnz 0xfffff9e3(%rip)
35b3(5): jmp 0xfffffe1d(%rip)
35b8(7): movzx 0x210e4f(%rip),%ebp
35bf(7): mov 0x210e1a(%rip),%rax
35c6(2): xor %edx,%edx
35c8(2): jmp 0x9(%rip)
35ca(4): mov 0x30(%rax),%rax
35ce(3): add $0x1,%edx
35d1(3): test %rax,%rax
35d4(2): jnz 0xfffffff6(%rip)
35d6(3): movsxd %edx,%rdi
35d9(7): lea 0x7d0(%rip),%r8
35e0(7): lea 0x709(%rip),%rcx
35e7(7): lea 0x6f2(%rip),%rdx
35ee(2): xor %esi,%esi
35f0(5): call 0x3350(%rip)
35f5(3): test %rax,%rax
35f8(7): mov %rax,0x210e11(%rip)
35ff(6): jz 0x514(%rip)
3605(8): lea 0xa0(%rsp),%rax
360d(7): mov 0x210dcc(%rip),%r13
3614(2): xor %ebx,%ebx
3616(5): mov %rax,0x8(%rsp)
361b(2): jmp 0x4f(%rip)
361d(4): mov 0x20(%r13),%rax
3621(8): mov %rax,0xa0(%rsp)
3629(5): mov $0x18,%edi
362e(5): call 0x77a2(%rip)
3633(3): mov %rax,%r12
3636(4): mov %r13,0x8(%rax)
363a(8): mov 0xa0(%rsp),%rax
3642(7): mov 0x210dc7(%rip),%rdi
3649(5): mov %rbx,0x10(%r12)
364e(3): mov %r12,%rsi
3651(4): mov %rax,(%r12)
3655(5): call 0x3aeb(%rip)
365a(3): test %rax,%rax
365d(6): jz 0x4b6(%rip)
3663(4): mov 0x30(%r13),%r13
3667(3): mov %r12,%rbx
366a(3): test %r13,%r13
366d(6): jz 0x1cb(%rip)
3673(5): movzx 0x28(%r13),%eax
3678(2): test $0x2,%al
367a(2): jz 0xb(%rip)
367c(7): cmp $0x0,0x210d8a(%rip)
3683(2): jnz 0xffffff9a(%rip)
3685(2): test $0x1,%al
3687(2): jz 0x14(%rip)
3689(7): cmp $0x0,0x210d7e(%rip)
3690(2): jnz 0xb(%rip)
3692(7): cmp $0x0,0x210d73(%rip)
3699(2): jz 0xffffff84(%rip)
369b(4): mov 0x18(%r13),%r12
369f(3): mov %r12,%rdi
36a2(5): call 0x65e(%rip)
36a7(2): test %al,%al
36a9(6): jz 0xffffff74(%rip)
36af(3): mov %r12,%rdi
36b2(5): call 0x69e(%rip)
36b7(2): test %al,%al
36b9(3): mov %eax,%r14d
36bc(6): jnz 0xffffff61(%rip)
36c2(4): mov 0x8(%r13),%rsi
36c6(5): mov 0x8(%rsp),%rdx
36cb(5): mov $0x1,%edi
36d0(5): call 0xffffecc0(%rip)
36d5(3): add $0x1,%eax
36d8(6): jz 0xffffff45(%rip)
36de(7): mov 0x210d2b(%rip),%rdi
36e5(3): test %rdi,%rdi
36e8(6): jz 0xffffff41(%rip)
36ee(8): mov 0xa0(%rsp),%rax
36f6(3): mov %r15,%rsi
36f9(8): mov %rax,0x80(%rsp)
3701(5): call 0x2fcf(%rip)
3706(3): test %rax,%rax
3709(5): mov %rax,0x10(%rsp)
370e(6): jz 0xffffff1b(%rip)
3714(4): mov 0x8(%rax),%r12
3718(4): or $0xffffffff,%rcx
371c(3): mov %r14d,%eax
371f(5): mov 0x8(%r12),%rdi
3724(5): mov %rdi,0x18(%rsp)
3729(2): REPNZ scasb rdi(%es,10),%al
372b(4): mov 0x8(%r13),%rdi
372f(3): not %rcx
3732(3): mov %rcx,%rdx
3735(4): or $0xffffffff,%rcx
3739(5): mov %rdi,0x20(%rsp)
373e(4): sub $0x1,%rdx
3742(2): REPNZ scasb rdi(%es,10),%al
3744(5): mov 0x10(%r12),%rdi
3749(3): mov %rcx,%rax
374c(3): not %rax
374f(4): sub $0x1,%rax
3753(3): cmp %rax,%rdx
3756(5): setnbe 0x28(%rsp)
375b(3): test %rdi,%rdi
375e(6): jz 0x329(%rip)
3764(4): mov 0x10(%r13),%rsi
3768(3): test %rsi,%rsi
376b(6): jz 0x31c(%rip)
3771(3): mov %r14d,%eax
3774(4): or $0xffffffff,%rcx
3778(2): REPNZ scasb rdi(%es,10),%al
377a(3): mov %rsi,%rdi
377d(3): not %rcx
3780(3): mov %rcx,%rdx
3783(4): or $0xffffffff,%rcx
3787(2): REPNZ scasb rdi(%es,10),%al
3789(4): sub $0x1,%rdx
378d(3): mov %rcx,%rax
3790(3): not %rax
3793(4): sub $0x1,%rax
3797(3): cmp %rax,%rdx
379a(3): setb %al
379d(3): movzx %al,%eax
37a0(3): and $0x1,%eax
37a3(7): cmp $0x0,0x210c2e(%rip)
37aa(4): mov %al,0x30(%rsp)
37ae(4): mov 0x0(%r13),%rax
37b2(3): mov %rax,%r14
37b5(2): jnz 0x25(%rip)
37b7(5): test $0x2,0x28(%r13)
37bc(2): jz 0x1e(%rip)
37be(6): test $0x2,0x28(%r12)
37c4(2): jz 0x16(%rip)
37c6(4): mov (%r12),%rdi
37ca(3): mov %rax,%rsi
37cd(5): call 0xffffeb73(%rip)
37d2(2): test %eax,%eax
37d4(6): jnz 0xfffffe55(%rip)
37da(5): mov $0x2f,%esi
37df(3): mov %r14,%rdi
37e2(5): call 0xffffea3e(%rip)
37e7(3): test %rax,%rax
37ea(2): jz 0x15(%rip)
37ec(4): mov (%r12),%rdi
37f0(5): mov $0x2f,%esi
37f5(5): call 0xffffea2b(%rip)
37fa(3): test %rax,%rax
37fd(2): jz 0x18(%rip)
37ff(5): cmp $0x0,0x30(%rsp)
3804(6): jnz 0x28a(%rip)
380a(5): cmp $0x0,0x28(%rsp)
380f(6): jz 0x27f(%rip)
3815(5): mov 0x10(%rsp),%rax
381a(4): mov %r13,0x8(%rax)
381e(3): test %bpl,%bpl
3821(4): mov 0x30(%r13),%r13
3825(6): jnz 0xfffffe45(%rip)
382b(3): mov %r12,%rdi
382e(5): call 0x83b2(%rip)
3833(5): jmp 0xfffffe37(%rip)
3838(3): test %bpl,%bpl
383b(2): jnz 0x48(%rip)
383d(b): mov $0x0,0x210b98(%rip)
3848(2): jmp 0x16(%rip)
384a(4): mov 0x8(%rbx),%rax
384e(4): mov 0x10(%rbx),%rbx
3852(5): mov $0x1,%ebp
3857(4): mov %r13,0x30(%rax)
385b(3): mov %rax,%r13
385e(3): test %rbx,%rbx
3861(2): jnz 0xffffffe9(%rip)
3863(3): test %bpl,%bpl
3866(6): jnz 0x2b2(%rip)
386c(7): mov 0x210b9d(%rip),%rdi
3873(5): call 0x331d(%rip)
3878(b): mov $0x0,0x210b8d(%rip)
3883(7): mov 0x210b56(%rip),%rbx
388a(2): jmp 0x38(%rip)
388c(5): movzx 0x28(%rbx),%r9d
3891(4): mov 0x8(%rbx),%rsi
3895(4): sub $0x8,%rsp
3899(4): mov 0x18(%rbx),%r8
389d(3): mov (%rbx),%rdi
38a0(2): xor %ecx,%ecx
38a2(2): push $0x1
38a4(2): push $0x0
38a6(2): xor %edx,%edx
38a8(3): mov %r9d,%eax
38ab(4): and $0x1,%r9d
38af(2): shr $0x1,%al
38b1(3): and $0x1,%eax
38b4(1): push %rax
38b5(5): call 0xa9b(%rip)
38ba(4): mov 0x30(%rbx),%rbx
38be(4): add $0x20,%rsp
38c2(3): test %rbx,%rbx
38c5(2): jnz 0xffffffc7(%rip)
38c7(5): jmp 0xfffff8d5(%rip)
38cc(6): movzx 0x20(%rsp),%r14d
38d2(5): jmp 0xfffffab3(%rip)
38d7(5): mov 0x30(%rsp),%rax
38dc(5): mov %rax,0x18(%rsp)
38e1(5): jmp 0xfffff529(%rip)
38e6(4): mov 0x8(%rsp),%eax
38ea(6): cmp %eax,0x210a20(%rip)
38f0(6): jnl 0xb5(%rip)
38f6(7): cmp $0x0,0x210b11(%rip)
38fd(6): jnz 0xa8(%rip)
3903(7): cmp $0x0,0x210b03(%rip)
390a(6): jnz 0x9b(%rip)
3910(8): cmp $0x0,0x210ad8(%rip)
3918(5): mov $0x1,%ebx
391d(7): lea 0xccdd(%rip),%rbp
3924(6): jz 0x1a0(%rip)
392a(7): lea 0xc4c7(%rip),%rsi
3931(2): xor %edi,%edi
3933(5): mov $0x5,%edx
3938(5): call 0xffffe858(%rip)
393d(3): mov %rax,%r12
3940(5): call 0xffffe770(%rip)
3945(2): mov (%rax),%esi
3947(7): lea 0xb876(%rip),%rdx
394e(3): mov %r12,%r8
3951(3): mov %rbp,%rcx
3954(2): mov %ebx,%edi
3956(2): xor %eax,%eax
3958(5): call 0xffffeb48(%rip)
395d(5): jmp 0xfffff334(%rip)
3962(8): cmp $0x0,0x210a7e(%rip)
396a(6): jnz 0xfffff312(%rip)
3970(7): cmp $0x0,0x210a62(%rip)
3977(6): jnz 0xfffff305(%rip)
397d(7): cmp $0x0,0x2106f8(%rip)
3984(6): jnz 0xfffff2f8(%rip)
398a(7): movzx 0x210a7c(%rip),%edi
3991(5): jmp 0xfffff2eb(%rip)
3996(5): mov $0xa,%esi
399b(5): call 0xffffe8a5(%rip)
39a0(5): jmp 0xfffff969(%rip)
39a5(5): mov $0x1,%ebx
39aa(7): lea 0xcc50(%rip),%rbp
39b1(5): jmp 0xffffff79(%rip)
39b6(5): mov 0x30(%rsp),%rsi
39bb(5): mov $0x4,%edi
39c0(5): call 0x6880(%rip)
39c5(7): lea 0xc4ac(%rip),%rsi
39cc(3): mov %rax,%rbx
39cf(5): mov $0x5,%edx
39d4(2): xor %edi,%edi
39d6(5): call 0xffffe7ba(%rip)
39db(3): mov %rbx,%rcx
39de(3): mov %rax,%rdx
39e1(2): xor %esi,%esi
39e3(2): xor %edi,%edi
39e5(2): xor %eax,%eax
39e7(5): call 0xffffeab9(%rip)
39ec(a): mov $0x1,0x210a02(%rip)
39f6(5): jmp 0xfffff78c(%rip)
39fb(3): mov %r10,%rdx
39fe(3): mov %r15,%rsi
3a01(3): mov %r9,%rdi
3a04(5): mov %r10,0x28(%rsp)
3a09(5): call 0xffffe6b7(%rip)
3a0e(5): mov 0x28(%rsp),%r10
3a13(2): test %eax,%eax
3a15(6): cmovne 0x18(%rsp),%r10
3a1b(4): cmove %rbp,%rbx
3a1f(5): mov %r10,0x18(%rsp)
3a24(5): jmp 0xfffffb44(%rip)
3a29(9): mov $0x1,0x18(%rsp)
3a32(3): mov %rbp,%rbx
3a35(5): jmp 0xfffffb33(%rip)
3a3a(3): mov %r12,%rbx
3a3d(5): jmp 0xfffff573(%rip)
3a42(5): mov 0x8(%r12),%rdx
3a47(5): mov $0x3,%esi
3a4c(2): xor %edi,%edi
3a4e(5): call 0x68f2(%rip)
3a53(3): mov (%r14),%esi
3a56(7): lea 0xd21a(%rip),%rdx
3a5d(3): mov %rax,%rcx
3a60(2): xor %edi,%edi
3a62(2): xor %eax,%eax
3a64(5): call 0xffffea3c(%rip)
3a69(a): mov $0x1,0x210985(%rip)
3a73(5): jmp 0xfffff9bf(%rip)
3a78(5): mov 0x68(%rsp),%rdi
3a7d(5): call 0xffffe5f3(%rip)
3a82(5): jmp 0xfffff4e4(%rip)
3a87(2): xor %eax,%eax
3a89(5): jmp 0xfffffd17(%rip)
3a8e(4): mov (%r12),%rdi
3a92(3): mov %r14,%rsi
3a95(5): call 0xffffe8ab(%rip)
3a9a(2): test %eax,%eax
3a9c(2): jz 0x19(%rip)
3a9e(5): mov 0x18(%rsp),%rsi
3aa3(5): mov 0x20(%rsp),%rdi
3aa8(5): call 0xffffe898(%rip)
3aad(2): test %eax,%eax
3aaf(6): jz 0xfffffd66(%rip)
3ab5(3): mov %r13,%r12
3ab8(5): jmp 0xfffffd66(%rip)
3abd(2): xor %edi,%edi
3abf(5): call 0x12b1(%rip)
3ac4(8): cmp $0x0,0x21091c(%rip)
3acc(6): jnz 0xfffffe5e(%rip)
3ad2(7): lea 0xb6e1(%rip),%rsi
3ad9(5): mov $0x5,%edx
3ade(2): xor %edi,%edi
3ae0(2): xor %ebx,%ebx
3ae2(5): call 0xffffe6ae(%rip)
3ae7(3): mov %rax,%rbp
3aea(5): jmp 0xfffffe40(%rip)
3aef(7): lea 0xb666(%rip),%r8
3af6(7): lea 0xb66e(%rip),%rcx
3afd(2): xor %edi,%edi
3aff(3): mov %r12,%rdx
3b02(2): xor %esi,%esi
3b04(5): call 0xffffe99c(%rip)
3b09(5): mov $0x1,%edi
3b0e(5): call 0x1262(%rip)
3b13(5): call 0x750d(%rip)
3b18(7): mov %r13,0x2108c1(%rip)
3b1f(5): jmp 0xfffffd4d(%rip)
3b24(7): lea 0xb815(%rip),%rcx
3b2b(7): lea 0xb4bf(%rip),%rsi
3b32(7): lea 0xb699(%rip),%rdi
3b39(5): mov $0x222,%edx
3b3e(5): call 0xffffe742(%rip)
3b43(5): mov $0x1,%esi
3b48(5): jmp 0xffffefe5(%rip)
3b4d(7): lea 0xb608(%rip),%r8
3b54(7): lea 0xb610(%rip),%rcx
3b5b(3): mov %r12,%rdx
3b5e(2): xor %esi,%esi
3b60(2): xor %edi,%edi
3b62(2): xor %eax,%eax
3b64(5): call 0xffffe93c(%rip)
3b69(5): jmp 0xffffee9d(%rip)
3b6e(7): lea 0xb5e7(%rip),%r8
3b75(7): lea 0xb5ec(%rip),%rcx
3b7c(2): jmp 0xffffffdf(%rip)
3b7e(7): lea 0xb5d7(%rip),%r8
3b85(7): lea 0xb5d9(%rip),%rcx
3b8c(2): jmp 0xffffffcf(%rip)
3b8e(5): call 0xffffe662(%rip)

"_start" :
3ba0(2): xor %ebp,%ebp
3ba2(3): mov %rdx,%r9
3ba5(1): pop %rsi
3ba6(3): mov %rsp,%rdx
3ba9(4): and $0xfffffff0,%rsp
3bad(1): push %rax
3bae(1): push %rsp
3baf(7): lea 0xb3fa(%rip),%r8
3bb6(7): lea 0xb383(%rip),%rcx
3bbd(7): lea 0xffffe9fc(%rip),%rdi
3bc4(6): call 0x21040e(%rip)
3bca(1): hlt 

"deregister_tm_clones" :
3bd0(7): lea 0x210719(%rip),%rdi
3bd7(1): push %rbp
3bd8(7): lea 0x210711(%rip),%rax
3bdf(3): cmp %rdi,%rax
3be2(3): mov %rsp,%rbp
3be5(2): jz 0x1b(%rip)
3be7(7): mov 0x2103e2(%rip),%rax
3bee(3): test %rax,%rax
3bf1(2): jz 0xf(%rip)
3bf3(1): pop %rbp
3bf4(2): jmp %rax
3bf6(a): nop 0x0(%rax,%rax,1)
3c00(1): pop %rbp
3c01(1): ret near (%rsp)

"register_tm_clones" :
3c10(7): lea 0x2106d9(%rip),%rdi
3c17(7): lea 0x2106d2(%rip),%rsi
3c1e(1): push %rbp
3c1f(3): sub %rdi,%rsi
3c22(3): mov %rsp,%rbp
3c25(4): sar $0x3,%rsi
3c29(3): mov %rsi,%rax
3c2c(4): shr $0x3f,%rax
3c30(3): add %rax,%rsi
3c33(3): sar $0x1,%rsi
3c36(2): jz 0x1a(%rip)
3c38(7): mov 0x2103a9(%rip),%rax
3c3f(3): test %rax,%rax
3c42(2): jz 0xe(%rip)
3c44(1): pop %rbp
3c45(2): jmp %rax
3c47(9): nop 0x0(%rax,%rax,1)
3c50(1): pop %rbp
3c51(1): ret near (%rsp)

"__do_global_dtors_aux" :
3c60(7): cmp $0x0,0x2106e1(%rip)
3c67(2): jnz 0x31(%rip)
3c69(8): cmp $0x0,0x21037f(%rip)
3c71(1): push %rbp
3c72(3): mov %rsp,%rbp
3c75(2): jz 0xe(%rip)
3c77(7): mov 0x21038a(%rip),%rdi
3c7e(5): call 0xffffe932(%rip)
3c83(5): call 0xffffff4d(%rip)
3c88(7): mov $0x1,0x2106b9(%rip)
3c8f(1): pop %rbp
3c90(1): ret near (%rsp)
3c91(7): nop 0x0(%rax)
3c98(2): REP ret near (%rsp)

"frame_dummy" :
3ca0(1): push %rbp
3ca1(3): mov %rsp,%rbp
3ca4(1): pop %rbp
3ca5(5): jmp 0xffffff6b(%rip)

"targ3ccb" :
3ccb(3): movzx (%rdi),%eax
3cce(2): test %al,%al
3cd0(2): jnz 0xffffffe8(%rip)
3cd2(2): REP ret near (%rsp)

"devlist_hash" :
3ce0(3): mov (%rdi),%rax
3ce3(2): xor %edx,%edx
3ce5(3): div %rsi,%rax
3ce8(3): mov %rdx,%rax
3ceb(1): ret near (%rsp)

"devlist_compare" :
3cf0(3): mov (%rsi),%rax
3cf3(3): cmp %rax,(%rdi)
3cf6(3): setz %al
3cf9(1): ret near (%rsp)

"selected_fstype" :
3d00(2): push %r12
3d02(1): push %rbp
3d03(1): push %rbx
3d04(7): mov 0x2106e5(%rip),%rbx
3d0b(3): test %rbx,%rbx
3d0e(3): setz %al
3d11(3): test %rdi,%rdi
3d14(4): setz %r12b
3d18(3): or %al,%r12b
3d1b(2): jnz 0x1d(%rip)
3d1d(3): mov %rdi,%rbp
3d20(3): mov (%rbx),%rsi
3d23(3): mov %rbp,%rdi
3d26(5): call 0xffffe61a(%rip)
3d2b(2): test %eax,%eax
3d2d(2): jz 0x13(%rip)
3d2f(4): mov 0x8(%rbx),%rbx
3d33(3): test %rbx,%rbx
3d36(2): jnz 0xffffffea(%rip)
3d38(3): mov %r12d,%eax
3d3b(1): pop %rbx
3d3c(1): pop %rbp
3d3d(2): pop %r12
3d3f(1): ret near (%rsp)
3d40(6): mov $0x1,%r12d
3d46(3): mov %r12d,%eax
3d49(1): pop %rbx
3d4a(1): pop %rbp
3d4b(2): pop %r12
3d4d(1): ret near (%rsp)

"excluded_fstype" :
3d50(2): push %r12
3d52(1): push %rbp
3d53(1): push %rbx
3d54(7): mov 0x21068d(%rip),%rbx
3d5b(3): test %rbx,%rbx
3d5e(3): setz %al
3d61(3): test %rdi,%rdi
3d64(4): setz %bpl
3d68(3): or %al,%bpl
3d6b(2): jnz 0x25(%rip)
3d6d(3): mov %rdi,%r12
3d70(3): mov (%rbx),%rsi
3d73(3): mov %r12,%rdi
3d76(5): call 0xffffe5ca(%rip)
3d7b(2): test %eax,%eax
3d7d(2): jz 0x23(%rip)
3d7f(4): mov 0x8(%rbx),%rbx
3d83(3): test %rbx,%rbx
3d86(2): jnz 0xffffffea(%rip)
3d88(2): mov %ebp,%eax
3d8a(1): pop %rbx
3d8b(1): pop %rbp
3d8c(2): pop %r12
3d8e(1): ret near (%rsp)
3d8f(1): nop 
3d90(2): xor %ebp,%ebp
3d92(2): mov %ebp,%eax
3d94(1): pop %rbx
3d95(1): pop %rbp
3d96(2): pop %r12
3d98(1): ret near (%rsp)
3d99(7): nop 0x0(%rax)
3da0(5): mov $0x1,%ebp
3da5(2): mov %ebp,%eax
3da7(1): pop %rbx
3da8(1): pop %rbp
3da9(2): pop %r12
3dab(1): ret near (%rsp)

"alloc_table_row" :
3dc0(7): mov 0x210599(%rip),%rax
3dc7(5): mov $0x8,%edx
3dcc(1): push %rbx
3dcd(7): mov 0x210594(%rip),%rdi
3dd4(4): lea 0x1(%rax),%rsi
3dd8(3): mov %rdx,%rax
3ddb(3): mul %rax,%rsi,%rdx
3dde(7): mov %rsi,0x21057b(%rip)
3de5(2): jo 0x5d(%rip)
3de7(2): xor %ecx,%ecx
3de9(3): test %rax,%rax
3dec(2): js 0x51(%rip)
3dee(3): test %rcx,%rcx
3df1(2): jnz 0x4c(%rip)
3df3(4): shl/sal $0x3,%rsi
3df7(5): call 0x7039(%rip)
3dfc(7): mov 0x21055d(%rip),%rdx
3e03(7): mov 0x210566(%rip),%rdi
3e0a(2): xor %ecx,%ecx
3e0c(7): mov %rax,0x210555(%rip)
3e13(5): lea 0xfffffff8(%rax,%rdx,8),%rbx
3e18(5): mov $0x8,%edx
3e1d(3): mov %rdx,%rax
3e20(3): mul %rax,%rdi,%rdx
3e23(2): jo 0x26(%rip)
3e25(3): test %rax,%rax
3e28(2): js 0x15(%rip)
3e2a(3): test %rcx,%rcx
3e2d(2): jnz 0x10(%rip)
3e2f(4): shl/sal $0x3,%rdi
3e33(5): call 0x6f9d(%rip)
3e38(3): mov %rax,(%rbx)
3e3b(1): pop %rbx
3e3c(1): ret near (%rsp)
3e3d(5): call 0x71e3(%rip)
3e42(5): mov $0x1,%ecx
3e47(2): jmp 0xffffffa2(%rip)
3e49(5): mov $0x1,%ecx
3e4e(2): jmp 0xffffffd7(%rip)

"df_readable" :
3e50(3): mov %rsi,%rax
3e53(3): mov %rdx,%rsi
3e56(4): cmp $0xfffffffd,%rax
3e5a(2): jbe 0x36(%rip)
3e5c(3): test %dil,%dil
3e5f(2): jz 0x51(%rip)
3e61(6): mov 0x2105a1(%rip),%edx
3e67(4): add $0x1,%rsi
3e6b(3): mov %rax,%rdi
3e6e(4): sub $0x8,%rsp
3e72(3): neg %rdi
3e75(5): call 0x36db(%rip)
3e7a(4): lea 0xffffffff(%rax),%rdx
3e7e(4): mov $0x2d,0xffffffff(%rax)
3e82(4): add $0x8,%rsp
3e86(3): mov %rdx,%rax
3e89(1): ret near (%rsp)
3e8a(6): nop 0x0(%rax,%rax,1)
3e90(4): movzx %dil,%r9d
3e94(6): mov 0x21056e(%rip),%edx
3e9a(3): add %r9,%rsi
3e9d(3): test %dil,%dil
3ea0(2): jnz 0xffffffcb(%rip)
3ea2(3): mov %rax,%rdi
3ea5(5): jmp 0x36ab(%rip)
3eaa(6): nop 0x0(%rax,%rax,1)
3eb0(7): lea 0xcaa2(%rip),%rdx
3eb7(3): mov %rdx,%rax
3eba(1): ret near (%rsp)

"replace_problematic_chars" :
3ec0(6): mov 0x21014a(%rip),%eax
3ec6(1): push %rbx
3ec7(3): mov %rdi,%rbx
3eca(2): test %eax,%eax
3ecc(2): js 0x24(%rip)
3ece(2): test %eax,%eax
3ed0(7): lea 0x399(%rip),%rdx
3ed7(7): lea 0xfffffdd2(%rip),%rax
3ede(3): mov %rbx,%rdi
3ee1(1): pop %rbx
3ee2(4): cmovne %rdx,%rax
3ee6(2): jmp %rax
3ee8(8): nop 0x0(%rax,%rax,1)
3ef0(5): mov $0x1,%edi
3ef5(5): call 0xffffe1fb(%rip)
3efa(6): mov %eax,0x210110(%rip)
3f00(2): jmp 0xffffffce(%rip)

"get_header" :
3f10(2): push %r15
3f12(2): push %r14
3f14(2): push %r13
3f16(2): push %r12
3f18(1): push %rbp
3f19(1): push %rbx
3f1a(7): sub $0x2c8,%rsp
3f21(9): mov $0x28,%rax
3f2a(8): mov %rax,0x2b8(%rsp)
3f32(2): xor %eax,%eax
3f34(5): call 0xfffffe8c(%rip)
3f39(8): cmp $0x0,0x21042f(%rip)
3f41(6): jz 0x207(%rip)
3f47(7): mov 0x21042a(%rip),%rdx
3f4e(2): xor %ebx,%ebx
3f50(a): mov $0x2361183241434822607,%r12
3f5a(5): lea 0x20(%rsp),%r14
3f5f(5): lea 0x18(%rsp),%r13
3f64(2): jmp 0x7d(%rip)
3f66(a): nop 0x0(%rax,%rax,1)
3f70(3): mov %rcx,%rdi
3f73(5): call 0xffffe5cd(%rip)
3f78(3): mov %rax,%rdi
3f7b(5): mov %rax,0x18(%rsp)
3f80(3): test %rdi,%rdi
3f83(6): jz 0x200(%rip)
3f89(5): call 0xffffff37(%rip)
3f8e(7): mov 0x2103cb(%rip),%rdx
3f95(7): mov 0x2103cc(%rip),%rax
3f9c(2): xor %esi,%esi
3f9e(5): mov 0xfffffff8(%rax,%rdx,8),%rax
3fa3(5): mov 0x18(%rsp),%rdx
3fa8(4): mov %rdx,0x0(%rax,%rbp,1)
3fac(5): mov 0x18(%rsp),%rdi
3fb1(5): call 0x481f(%rip)
3fb6(7): mov 0x2103bb(%rip),%rdx
3fbd(2): cwde 
3fbf(4): mov 0x0(%rdx,%rbp,1),%rcx
3fc3(4): cmp %rax,0x20(%rcx)
3fc7(5): cmovnb 0x20(%rcx),%rax
3fcc(4): add $0x1,%rbx
3fd0(7): cmp %rbx,0x210399(%rip)
3fd7(4): mov %rax,0x20(%rcx)
3fdb(6): jbe 0x16d(%rip)
3fe1(8): lea 0x0(,%rbx,8),%rbp
3fe9(2): xor %edi,%edi
3feb(9): mov $0x0,0x18(%rsp)
3ff4(4): lea 0x0(%rdx,%rbp,1),%r15
3ff8(5): mov $0x5,%edx
3ffd(3): mov (%r15),%rax
4000(4): mov 0x18(%rax),%rsi
4004(5): call 0xffffe18c(%rip)
4009(3): mov %rax,%rcx
400c(3): mov (%r15),%rax
400f(3): cmp $0x2,(%rax)
4012(6): jnz 0xffffff5e(%rip)
4018(6): mov 0x210362(%rip),%eax
401e(7): mov 0x2103e3(%rip),%r10d
4025(2): test %eax,%eax
4027(2): jz 0x81(%rip)
4029(3): cmp $0x4,%eax
402c(2): jz 0x64(%rip)
402e(3): cmp $0x3,%eax
4031(6): jnz 0xffffff3f(%rip)
4037(7): mov 0x2103c2(%rip),%rdi
403e(3): mov %r14,%rsi
4041(5): mov %rcx,0x8(%rsp)
4046(5): call 0x410a(%rip)
404b(3): mov %rax,%r15
404e(7): lea 0xaf96(%rip),%rsi
4055(2): xor %edi,%edi
4057(5): mov $0x5,%edx
405c(5): call 0xffffe134(%rip)
4061(5): mov 0x8(%rsp),%rcx
4066(3): mov %rax,%rsi
4069(3): mov %r15,%rdx
406c(2): xor %eax,%eax
406e(3): mov %r13,%rdi
4071(5): call 0x74ef(%rip)
4076(3): cmp $0xff,%eax
4079(2): jnz 0xb(%rip)
407b(9): mov $0x0,0x18(%rsp)
4084(5): mov 0x18(%rsp),%rdi
4089(5): jmp 0xfffffef7(%rip)
408e(2): nop 
4090(7): mov 0x210371(%rip),%r10d
4097(4): test $0x10,%r10b
409b(6): jnz 0xfffffed5(%rip)
40a1(7): nop 0x0(%rax)
40a8(7): mov 0x210351(%rip),%rdi
40af(3): mov %r10d,%r9d
40b2(7): and $0x124,%r9d
40b9(3): mov %rdi,%r8
40bc(3): mov %rdi,%rsi
40bf(1): nop 
40c0(3): mov %rsi,%rdx
40c3(4): shr $0x3,%rdx
40c7(3): mov %rdx,%rax
40ca(3): mul %rax,%r12,%rdx
40cd(3): mov %r8,%rax
40d0(4): shr $0xa,%r8
40d4(5): and $0x3ff,%eax
40d9(3): mov %rdx,%rcx
40dc(4): shr $0x4,%rcx
40e0(7): imul %rcx,$0x3e8,%rcx
40e7(3): sub %rcx,%rsi
40ea(3): mov %rsi,%rcx
40ed(3): mov %rdx,%rsi
40f0(3): mov %rcx,%rdx
40f3(4): shr $0x4,%rsi
40f7(3): or %rax,%rdx
40fa(2): jz 0xffffffc6(%rip)
40fc(3): test %rcx,%rcx
40ff(3): setz %dl
4102(3): test %rax,%rax
4105(3): setz %al
4108(2): cmp %al,%dl
410a(2): jnb 0x66(%rip)
410c(3): mov %r9d,%edx
410f(3): or $0xb8,%dl
4112(6): mov $0x1,%r8d
4118(5): mov $0x1,%ecx
411d(3): mov %r14,%rsi
4120(5): call 0x3430(%rip)
4125(7): lea 0xaeb8(%rip),%rsi
412c(5): mov $0x5,%edx
4131(2): xor %edi,%edi
4133(3): mov %rax,%r15
4136(5): call 0xffffe05a(%rip)
413b(5): mov %rax,0x8(%rsp)
4140(5): jmp 0xffffff0e(%rip)
4145(3): nop (%rax)
4148(8): mov 0x2b8(%rsp),%rax
4150(9): xor $0x28,%rax
4159(2): jnz 0x41(%rip)
415b(7): add $0x2c8,%rsp
4162(1): pop %rbx
4163(1): pop %rbp
4164(2): pop %r12
4166(2): pop %r13
4168(2): pop %r14
416a(2): pop %r15
416c(1): ret near (%rsp)
416d(3): nop (%rax)
4170(2): jbe 0x18(%rip)
4172(3): mov %r10d,%edx
4175(6): and $0x104,%edx
417b(3): or $0x98,%dl
417e(3): or $0x1,%dh
4181(2): jmp 0xffffff91(%rip)
4183(5): call 0x6e9d(%rip)
4188(3): mov %r9d,%edx
418b(3): or $0x98,%dl
418e(4): and $0x20,%r10b
4192(6): jnz 0xffffff80(%rip)
4198(2): jmp 0xffffffe6(%rip)
419a(5): call 0xffffe056(%rip)

"alloc_field" :
41a0(1): push %rbp
41a1(1): push %rbx
41a2(5): mov $0x8,%edx
41a7(3): mov %rsi,%rbp
41aa(2): mov %edi,%ebx
41ac(4): sub $0x8,%rsp
41b0(7): mov 0x2101b9(%rip),%rax
41b7(7): mov 0x2101ba(%rip),%rdi
41be(4): lea 0x1(%rax),%rsi
41c2(3): mov %rdx,%rax
41c5(3): mul %rax,%rsi,%rdx
41c8(7): mov %rsi,0x2101a1(%rip)
41cf(2): jo 0x68(%rip)
41d1(2): xor %ecx,%ecx
41d3(3): test %rax,%rax
41d6(6): js 0x87(%rip)
41dc(3): test %rcx,%rcx
41df(2): jnz 0x7e(%rip)
41e1(4): shl/sal $0x3,%rsi
41e5(5): call 0x6c4b(%rip)
41ea(3): movsxd %ebx,%rdi
41ed(7): lea 0x20fe2c(%rip),%rcx
41f4(7): mov 0x210175(%rip),%rsi
41fb(4): lea 0x0(%rdi,%rdi,2),%rdx
41ff(7): mov %rax,0x210172(%rip)
4206(4): shl/sal $0x4,%rdx
420a(3): add %rcx,%rdx
420d(3): test %rbp,%rbp
4210(5): mov %rdx,0xfffffff8(%rax,%rsi,8)
4215(2): jz 0x6(%rip)
4217(4): mov %rbp,0x18(%rdx)
421b(4): lea 0x0(%rdi,%rdi,2),%rax
421f(4): shl/sal $0x4,%rax
4223(3): add %rcx,%rax
4226(4): cmp $0x0,0x2c(%rax)
422a(2): jnz 0x14(%rip)
422c(4): mov $0x1,0x2c(%rax)
4230(4): add $0x8,%rsp
4234(1): pop %rbx
4235(1): pop %rbp
4236(1): ret near (%rsp)
4237(5): mov $0x1,%ecx
423c(2): jmp 0xffffff97(%rip)
423e(7): lea 0xb10b(%rip),%rcx
4245(7): lea 0xada5(%rip),%rsi
424c(7): lea 0xadb9(%rip),%rdi
4253(5): mov $0x196,%edx
4258(5): call 0xffffe028(%rip)
425d(5): call 0x6dc3(%rip)

"replace_invalid_chars" :
4270(2): push %r15
4272(2): push %r14
4274(2): push %r13
4276(2): push %r12
4278(3): mov %rdi,%r12
427b(1): push %rbp
427c(1): push %rbx
427d(4): sub $0x38,%rsp
4281(9): mov $0x28,%rax
428a(5): mov %rax,0x28(%rsp)
428f(2): xor %eax,%eax
4291(5): call 0xffffdf1f(%rip)
4296(4): lea 0x0(%r12,%rax,1),%r13
429a(9): mov $0x0,0x20(%rsp)
42a3(3): cmp %r13,%r12
42a6(2): jz 0x7e(%rip)
42a8(5): lea 0x1c(%rsp),%rax
42ad(3): mov %r12,%rbx
42b0(5): lea 0x20(%rsp),%r14
42b5(5): mov %rax,0x8(%rsp)
42ba(2): jmp 0x2c(%rip)
42bc(4): nop 0x0(%rax)
42c0(4): mov 0x1c(%rsp),%edi
42c4(5): call 0xffffde3c(%rip)
42c9(2): test %eax,%eax
42cb(2): jnz 0x41(%rip)
42cd(3): mov %rbx,%rsi
42d0(3): mov %r12,%rdi
42d3(3): mov %rbp,%rdx
42d6(3): add %rbp,%rbx
42d9(3): add %rbp,%r12
42dc(5): call 0xffffe1b4(%rip)
42e1(3): cmp %rbx,%r13
42e4(2): jz 0x40(%rip)
42e6(3): mov %r13,%r15
42e9(5): mov 0x8(%rsp),%rdi
42ee(3): mov %r14,%rcx
42f1(3): sub %rbx,%r15
42f4(3): mov %rbx,%rsi
42f7(3): mov %r15,%rdx
42fa(5): call 0x77c6(%rip)
42ff(3): cmp %rax,%r15
4302(3): mov %rax,%rbp
4305(2): jnb 0xffffffbb(%rip)
4307(5): mov $0x1,%ebp
430c(3): add %rbp,%rbx
430f(5): mov $0x3f,(%r12)
4314(4): add $0x1,%r12
4318(3): cmp %rbx,%r13
431b(7): mov $0x0,(%r14)
4322(2): jnz 0xffffffc4(%rip)
4324(5): mov 0x28(%rsp),%rax
4329(9): xor $0x28,%rax
4332(5): mov $0x0,(%r12)
4337(2): jnz 0x11(%rip)
4339(4): add $0x38,%rsp
433d(1): pop %rbx
433e(1): pop %rbp
433f(2): pop %r12
4341(2): pop %r13
4343(2): pop %r14
4345(2): pop %r15
4347(1): ret near (%rsp)
4348(5): call 0xffffdea8(%rip)

"get_dev" :
4350(2): push %r15
4352(2): push %r14
4354(3): mov %rdi,%r14
4357(2): push %r13
4359(2): push %r12
435b(3): mov %rdx,%r13
435e(1): push %rbp
435f(1): push %rbx
4360(3): mov %rsi,%r12
4363(3): mov %r8,%rbx
4366(7): sub $0x418,%rsp
436d(7): mov 0x460(%rsp),%eax
4374(7): mov 0x450(%rsp),%ebp
437b(4): mov %rcx,(%rsp)
437f(8): mov 0x458(%rsp),%r15
4387(4): mov %eax,0x8(%rsp)
438b(9): mov $0x28,%rax
4394(8): mov %rax,0x408(%rsp)
439c(2): xor %eax,%eax
439e(3): test %bpl,%bpl
43a1(2): jz 0x37(%rip)
43a3(7): cmp $0x0,0x210063(%rip)
43aa(2): jz 0x2e(%rip)
43ac(8): mov 0x408(%rsp),%rax
43b4(9): xor $0x28,%rax
43bd(6): jnz 0x9a9(%rip)
43c3(7): add $0x418,%rsp
43ca(1): pop %rbx
43cb(1): pop %rbp
43cc(2): pop %r12
43ce(2): pop %r13
43d0(2): pop %r14
43d2(2): pop %r15
43d4(1): ret near (%rsp)
43d5(3): nop (%rax)
43d8(3): test %r9b,%r9b
43db(2): jz 0x15(%rip)
43dd(7): cmp $0x0,0x21002a(%rip)
43e4(2): jnz 0xc(%rip)
43e6(7): cmp $0x0,0x21001f(%rip)
43ed(2): jz 0xffffffbf(%rip)
43ef(1): nop 
43f0(3): mov %rbx,%rdi
43f3(5): call 0xfffff90d(%rip)
43f8(2): test %al,%al
43fa(2): jz 0xffffffb2(%rip)
43fc(3): mov %rbx,%rdi
43ff(5): call 0xfffff951(%rip)
4404(2): test %al,%al
4406(2): jnz 0xffffffa6(%rip)
4408(3): test %r15,%r15
440b(5): setz 0xf(%rsp)
4410(3): test %r12,%r12
4413(5): movzx 0xf(%rsp),%eax
4418(6): jz 0x98(%rip)
441e(2): test %al,%al
4420(6): jz 0x90(%rip)
4426(5): cmp $0x2f,(%r12)
442b(6): jnz 0xffffff81(%rip)
4431(4): mov (%rsp),%rax
4435(3): test %rax,%rax
4438(4): cmove %r12,%rax
443c(4): mov %rax,(%rsp)
4440(4): mov (%rsp),%rdi
4444(5): lea 0x20(%rsp),%rdx
4449(3): mov %r14,%rsi
444c(5): call 0x7544(%rip)
4451(2): test %eax,%eax
4453(6): jz 0x6cb(%rip)
4459(5): call 0xffffdc57(%rip)
445e(5): cmp $0x0,0x8(%rsp)
4463(3): mov %rax,%rbx
4466(2): jz 0x16(%rip)
4468(2): mov (%rax),%eax
446a(3): cmp $0xd,%eax
446d(6): jz 0x738(%rip)
4473(3): cmp $0x2,%eax
4476(6): jz 0x72f(%rip)
447c(4): mov (%rsp),%rdx
4480(5): mov $0x3,%esi
4485(2): xor %edi,%edi
4487(5): call 0x5eb9(%rip)
448c(2): mov (%rbx),%esi
448e(7): lea 0xc7e2(%rip),%rdx
4495(3): mov %rax,%rcx
4498(2): xor %edi,%edi
449a(2): xor %eax,%eax
449c(5): call 0xffffe004(%rip)
44a1(a): mov $0x1,0x20ff4d(%rip)
44ab(5): jmp 0xffffff01(%rip)
44b0(5): cmp $0x0,(%rsp)
44b5(6): jz 0x5de(%rip)
44bb(3): test %r15,%r15
44be(6): jz 0xffffff82(%rip)
44c4(5): movdqa (%r15),%xmm0
44c9(4): mov 0x30(%r15),%rax
44cd(5): movaps %xmm0,0x20(%rsp)
44d2(6): cmp $0x0,0x28(%rsp)
44d8(6): movdqa 0x10(%r15),%xmm0
44de(5): mov %rax,0x50(%rsp)
44e3(5): movaps %xmm0,0x30(%rsp)
44e8(6): movdqa 0x20(%r15),%xmm0
44ee(5): movaps %xmm0,0x40(%rsp)
44f3(6): jz 0x4fd(%rip)
44f9(5): call 0xfffff8c7(%rip)
44fe(7): lea 0xc454(%rip),%rax
4505(3): test %r14,%r14
4508(4): cmove %rax,%r14
450c(3): test %r13,%r13
450f(3): mov %r14,%rdi
4512(4): cmove %rax,%r13
4516(5): call 0x6aea(%rip)
451b(5): cmp $0x0,0x8(%rsp)
4520(3): mov %rax,%r15
4523(4): mov %rax,(%rsp)
4527(2): jz 0x49(%rip)
4529(3): mov %rax,%rdi
452c(5): call 0xffffdc84(%rip)
4531(4): cmp $0x24,%rax
4535(2): jbe 0x3b(%rip)
4537(5): lea 0xffffffdc(%r15,%rax,1),%rdi
453c(7): lea 0xaad7(%rip),%rsi
4543(5): call 0xffffdd9d(%rip)
4548(4): cmp $0x24,%rax
454c(2): jnz 0x24(%rip)
454e(4): mov (%rsp),%rdi
4552(2): xor %esi,%esi
4554(5): call 0x11ec(%rip)
4559(3): test %rax,%rax
455c(3): mov %rax,%r14
455f(2): jz 0x11(%rip)
4561(4): mov (%rsp),%rdi
4565(5): call 0xffffdb0b(%rip)
456a(4): mov %r14,(%rsp)
456e(2): nop 
4570(7): lea 0xc3e2(%rip),%rax
4577(3): test %rbx,%rbx
457a(5): mov 0x48(%rsp),%rsi
457f(c): mov $0x1,0xa8(%rsp)
458b(c): mov $0x1,0xa0(%rsp)
4597(4): cmove %rax,%rbx
459b(5): mov 0x50(%rsp),%rax
45a0(8): mov $0x0,0xc0(%rsp)
45a8(4): cmp $0xfffffffd,%rsi
45ac(8): mov %rsi,0xb0(%rsp)
45b4(c): mov $0xffffffff,0xd0(%rsp)
45c0(8): mov $0x0,0xd8(%rsp)
45c8(8): mov %rax,0xc8(%rsp)
45d0(8): mov %rax,0xb8(%rsp)
45d8(2): jnbe 0xc(%rip)
45da(4): cmp $0xfffffffd,%rax
45de(6): jbe 0x472(%rip)
45e4(5): mov 0x38(%rsp),%r8
45e9(7): mov 0x20fe10(%rip),%rdx
45f0(5): mov 0x30(%rsp),%rcx
45f5(5): mov 0x20(%rsp),%r9
45fa(5): mov 0x28(%rsp),%rdi
45ff(c): mov $0xffffffff,0x90(%rsp)
460b(4): cmp $0xfffffffd,%r8
460f(5): mov %rdx,0x68(%rsp)
4614(5): mov %r8,0x78(%rsp)
4619(3): setbe %dl
461c(4): and 0x40(%rsp),%dl
4620(4): cmp $0xfffffffd,%rcx
4624(5): mov %r9,0x60(%rsp)
4629(5): mov %rdi,0x70(%rsp)
462e(8): mov %rcx,0x88(%rsp)
4636(8): mov $0x0,0x98(%rsp)
463e(7): mov %dl,0x80(%rsp)
4645(2): jnbe 0xc(%rip)
4647(4): cmp $0xfffffffd,%rdi
464b(6): jbe 0x3e7(%rip)
4651(7): cmp $0x0,0x20fd80(%rip)
4658(2): jz 0x78(%rip)
465a(5): cmp $0x0,0xf(%rsp)
465f(2): jz 0x71(%rip)
4661(4): cmp $0xfffffffd,%rsi
4665(2): jnbe 0x9(%rip)
4667(7): add %rsi,0x20fd5a(%rip)
466e(4): cmp $0xfffffffd,%rax
4672(2): jnbe 0x9(%rip)
4674(7): add %rax,0x20fd55(%rip)
467b(4): cmp $0xfffffffd,%rdi
467f(2): jnbe 0xd(%rip)
4681(4): imul %r9,%rdi
4685(7): add %rdi,0x20fd1c(%rip)
468c(4): cmp $0xfffffffd,%rcx
4690(2): jnbe 0xd(%rip)
4692(4): imul %r9,%rcx
4696(7): add %rcx,0x20fd13(%rip)
469d(4): cmp $0xfffffffd,%r8
46a1(2): jnbe 0x2f(%rip)
46a3(7): movzx 0x20fd16(%rip),%edi
46aa(3): mov %r9,%rax
46ad(4): imul %r8,%rax
46b1(7): mov 0x20fd00(%rip),%rcx
46b8(2): mov %edi,%esi
46ba(3): xor $0x1,%esi
46bd(3): cmp %dl,%sil
46c0(6): jz 0x620(%rip)
46c6(3): add %rcx,%rax
46c9(7): mov %rax,0x20fce8(%rip)
46d0(2): xor %ebp,%ebp
46d2(8): cmp $0x0,0x20fc96(%rip)
46da(7): mov 0x20fc97(%rip),%rcx
46e1(6): jz 0xc0(%rip)
46e7(7): lea 0xac02(%rip),%r15
46ee(2): nop 
46f0(4): mov 0x0(%rcx,%rbp,8),%rax
46f4(8): lea 0x0(,%rbp,8),%r14
46fc(3): mov 0x10(%rax),%edx
46ff(3): cmp $0x1,%edx
4702(6): jz 0x1be(%rip)
4708(6): jb 0x1a8(%rip)
470e(3): cmp $0x2,%edx
4711(6): jnz 0x61e(%rip)
4717(2): xor %ecx,%ecx
4719(3): cmp $0xb,(%rax)
471c(6): jnbe 0x5f4(%rip)
4722(2): mov (%rax),%eax
4724(4): movsxd 0x0(%r15,%rax,4),%rax
4728(3): add %r15,%rax
472b(2): jmp %rax
472d(3): nop (%rax)
4730(3): mov %r12,%rdi
4733(5): call 0x68cd(%rip)
4738(3): mov %rax,%rdi
473b(5): mov %rax,0x18(%rsp)
4740(3): test %rdi,%rdi
4743(6): jz 0x57e(%rip)
4749(5): call 0xfffff777(%rip)
474e(5): mov 0x18(%rsp),%rdi
4753(2): xor %esi,%esi
4755(5): call 0x407b(%rip)
475a(7): mov 0x20fc17(%rip),%rcx
4761(2): cwde 
4763(4): mov 0x0(%rcx,%r14,1),%rdx
4767(4): cmp %rax,0x20(%rdx)
476b(5): cmovnb 0x20(%rdx),%rax
4770(4): add $0x1,%rbp
4774(7): cmp %rbp,0x20fbf5(%rip)
477b(4): mov %rax,0x20(%rdx)
477f(7): mov 0x20fbda(%rip),%rdx
4786(7): mov 0x20fbdb(%rip),%rax
478d(5): mov 0xfffffff8(%rax,%rdx,8),%rax
4792(5): mov 0x18(%rsp),%rdx
4797(4): mov %rdx,0x0(%rax,%r14,1)
479b(6): jnbe 0xffffff55(%rip)
47a1(4): mov (%rsp),%rdi
47a5(5): call 0xffffd8cb(%rip)
47aa(5): jmp 0xfffffc02(%rip)
47af(1): nop 
47b0(4): mov 0x30(%rcx),%rax
47b4(4): cmp $0xfffffffd,%rax
47b8(6): jbe 0x118(%rip)
47be(7): lea 0xc194(%rip),%rdi
47c5(5): call 0xffffdd7b(%rip)
47ca(3): mov %rax,%rdi
47cd(5): mov %rax,0x18(%rsp)
47d2(3): test %rdi,%rdi
47d5(6): jnz 0xffffff74(%rip)
47db(5): jmp 0x29e(%rip)
47e0(4): movzx 0x20(%rcx),%edi
47e4(4): mov 0x18(%rcx),%rsi
47e8(8): lea 0x170(%rsp),%rdx
47f0(4): mov 0x8(%rcx),%r8
47f4(3): mov (%rcx),%rcx
47f7(5): call 0xfffff659(%rip)
47fc(3): mov %rax,%rdi
47ff(5): call 0x6801(%rip)
4804(3): mov %rax,%rdi
4807(5): mov %rax,0x18(%rsp)
480c(5): jmp 0xffffff34(%rip)
4811(7): nop 0x0(%rax)
4818(8): lea 0x170(%rsp),%rdx
4820(4): mov 0x30(%rcx),%rsi
4824(4): movzx 0x38(%rcx),%edi
4828(2): jmp 0xffffffc8(%rip)
482a(6): nop 0x0(%rax,%rax,1)
4830(4): mov 0x10(%rcx),%rax
4834(7): lea 0xc11e(%rip),%rdi
483b(4): cmp $0xfffffffd,%rax
483f(2): jnbe 0xffffffc0(%rip)
4841(4): mov 0x8(%rcx),%r8
4845(6): mov 0x20fbbd(%rip),%edx
484b(8): lea 0x170(%rsp),%rsi
4853(3): mov (%rcx),%rcx
4856(3): mov %rax,%rdi
4859(5): call 0x2cf7(%rip)
485e(3): mov %rax,%rdi
4861(2): jmp 0xffffff9e(%rip)
4863(5): nop 0x0(%rax,%rax,1)
4868(3): mov %rbx,%rdi
486b(5): call 0x6795(%rip)
4870(3): mov %rax,%rdi
4873(5): mov %rax,0x18(%rsp)
4878(5): jmp 0xfffffec8(%rip)
487d(3): nop (%rax)
4880(4): mov (%rsp),%rdi
4884(5): call 0x677c(%rip)
4889(3): mov %rax,%rdi
488c(5): mov %rax,0x18(%rsp)
4891(5): jmp 0xfffffeaf(%rip)
4896(a): nop 0x0(%rax,%rax,1)
48a0(3): mov %r13,%rdi
48a3(5): jmp 0xffffff5c(%rip)
48a8(8): nop 0x0(%rax,%rax,1)
48b0(5): lea 0x60(%rsp),%rcx
48b5(5): jmp 0xfffffe64(%rip)
48ba(6): nop 0x0(%rax,%rax,1)
48c0(8): lea 0xa0(%rsp),%rcx
48c8(5): jmp 0xfffffe51(%rip)
48cd(3): nop (%rax)
48d0(4): mov 0x18(%rcx),%rsi
48d4(4): cmp $0xfffffffd,%rsi
48d8(6): jnbe 0xfffffee6(%rip)
48de(4): cmp $0x0,0x38(%rcx)
48e2(4): movzx 0x20(%rcx),%edi
48e6(6): jnz 0x12a(%rip)
48ec(a): mov $0x184467440737095516,%rdx
48f6(3): cmp %rdx,%rax
48f9(2): jnbe 0x1f(%rip)
48fb(3): mov %rax,%rcx
48fe(2): xor %edx,%edx
4900(3): add %rsi,%rcx
4903(3): setb %dl
4906(3): test %rcx,%rcx
4909(2): jz 0xf(%rip)
490b(3): cmp %dl,%dil
490e(6): jz 0x262(%rip)
4914(4): nop 0x0(%rax)
4918(3): test %rax,%rax
491b(6): js 0x1c7(%rip)
4921(4): pxor %xmm0,%xmm0
4925(5): cvtsi2sd %rax,%xmm0
492a(3): test %dil,%dil
492d(6): jz 0x153(%rip)
4933(3): neg %rsi
4936(3): test %rsi,%rsi
4939(6): js 0x18b(%rip)
493f(4): pxor %xmm1,%xmm1
4943(5): cvtsi2sd %rsi,%xmm1
4948(8): xorpd 0xb560(%rip),%xmm1
4950(4): addsd %xmm0,%xmm1
4954(4): pxor %xmm5,%xmm5
4958(4): pxor %xmm3,%xmm3
495c(4): ucomisd %xmm5,%xmm1
4960(2): jp 0x8(%rip)
4962(6): jz 0xfffffe5c(%rip)
4968(8): mulsd 0xb550(%rip),%xmm0
4970(8): movsd 0xb550(%rip),%xmm2
4978(4): divsd %xmm1,%xmm0
497c(4): pxor %xmm1,%xmm1
4980(5): cvttsd2si %xmm0,%rax
4985(5): cvtsi2sd %rax,%xmm1
498a(4): movapd %xmm1,%xmm4
498e(4): subsd %xmm2,%xmm4
4992(4): ucomisd %xmm4,%xmm0
4996(2): jbe 0x22(%rip)
4998(4): addsd %xmm1,%xmm2
499c(4): ucomisd %xmm0,%xmm2
49a0(2): jb 0x18(%rip)
49a2(4): ucomisd %xmm1,%xmm0
49a6(6): jnbe 0x1b6(%rip)
49ac(4): pxor %xmm0,%xmm0
49b0(4): addsd %xmm1,%xmm0
49b4(4): nop 0x0(%rax)
49b8(4): ucomisd %xmm3,%xmm0
49bc(6): jb 0xfffffe02(%rip)
49c2(5): lea 0x18(%rsp),%rdi
49c7(7): lea 0xa676(%rip),%rsi
49ce(5): mov $0x1,%eax
49d3(5): call 0x6b8d(%rip)
49d8(3): cmp $0xff,%eax
49db(6): jz 0x95(%rip)
49e1(5): mov 0x18(%rsp),%rdi
49e6(5): jmp 0xfffffdec(%rip)
49eb(5): nop 0x0(%rax,%rax,1)
49f0(7): cmp $0x0,0x20fa17(%rip)
49f7(6): jnz 0xfffffb02(%rip)
49fd(7): cmp $0x0,0x20fa08(%rip)
4a04(6): jnz 0xfffffaf5(%rip)
4a0a(5): jmp 0xfffff9a2(%rip)
4a0f(1): nop 
4a10(3): neg %rax
4a13(3): test %rax,%rax
4a16(6): js 0x90(%rip)
4a1c(4): pxor %xmm0,%xmm0
4a20(5): cvtsi2sd %rax,%xmm0
4a25(8): xorpd 0xb483(%rip),%xmm0
4a2d(5): jmp 0xfffffefd(%rip)
4a32(3): mov %rdi,%r10
4a35(3): sub %rcx,%r10
4a38(3): cmp %rcx,%rdi
4a3b(8): mov %r10,0x90(%rsp)
4a43(8): setb 0x98(%rsp)
4a4b(5): jmp 0xfffffc06(%rip)
4a50(3): mov %rsi,%rdx
4a53(3): sub %rax,%rdx
4a56(3): cmp %rax,%rsi
4a59(8): mov %rdx,0xd0(%rsp)
4a61(8): setb 0xd8(%rsp)
4a69(5): jmp 0xfffffb7b(%rip)
4a6e(2): nop 
4a70(9): mov $0x0,0x18(%rsp)
4a79(5): call 0x65a7(%rip)
4a7e(2): nop 
4a80(3): test %rsi,%rsi
4a83(2): js 0x7d(%rip)
4a85(4): pxor %xmm1,%xmm1
4a89(5): cvtsi2sd %rsi,%xmm1
4a8e(5): jmp 0xfffffec2(%rip)
4a93(3): test %r12,%r12
4a96(3): mov %r12,%rax
4a99(4): cmove %r14,%rax
4a9d(4): mov %rax,(%rsp)
4aa1(5): jmp 0xfffffa1a(%rip)
4aa6(3): mov %rax,%rdx
4aa9(4): pxor %xmm0,%xmm0
4aad(3): shr $0x1,%rdx
4ab0(3): and $0x1,%eax
4ab3(3): or %rax,%rdx
4ab6(5): cvtsi2sd %rdx,%xmm0
4abb(4): addsd %xmm0,%xmm0
4abf(5): jmp 0xffffff66(%rip)
4ac4(3): mov %rsi,%rax
4ac7(4): pxor %xmm1,%xmm1
4acb(3): shr $0x1,%rax
4ace(3): and $0x1,%esi
4ad1(3): or %rsi,%rax
4ad4(5): cvtsi2sd %rax,%xmm1
4ad9(4): addsd %xmm1,%xmm1
4add(5): jmp 0xfffffe6b(%rip)
4ae2(3): mov %rax,%rdx
4ae5(4): pxor %xmm0,%xmm0
4ae9(3): shr $0x1,%rdx
4aec(3): and $0x1,%eax
4aef(3): or %rax,%rdx
4af2(5): cvtsi2sd %rdx,%xmm0
4af7(4): addsd %xmm0,%xmm0
4afb(5): jmp 0xfffffe2f(%rip)
4b00(3): mov %rsi,%rax
4b03(4): pxor %xmm1,%xmm1
4b07(3): shr $0x1,%rax
4b0a(3): and $0x1,%esi
4b0d(3): or %rsi,%rax
4b10(5): cvtsi2sd %rax,%xmm1
4b15(4): addsd %xmm1,%xmm1
4b19(5): jmp 0xfffffe37(%rip)
4b1e(5): cmp $0x0,0x8(%rsp)
4b23(2): jz 0x42(%rip)
4b25(7): cmp $0x0,0x20f8e2(%rip)
4b2c(6): jnz 0xbc(%rip)
4b32(6): cmp $0x0,0x28(%rsp)
4b38(2): jnz 0x18(%rip)
4b3a(7): cmp $0x0,0x20f8cd(%rip)
4b41(2): jnz 0xf(%rip)
4b43(7): cmp $0x0,0x20f8c2(%rip)
4b4a(6): jz 0xfffff862(%rip)
4b50(7): mov $0x1,0x20f8a6(%rip)
4b57(5): jmp 0xfffff9a2(%rip)
4b5c(4): movapd %xmm2,%xmm0
4b60(5): jmp 0xfffffe58(%rip)
4b65(6): cmp $0x0,0x28(%rsp)
4b6b(2): jnz 0xffffffe5(%rip)
4b6d(2): jmp 0xffffffcd(%rip)
4b6f(1): nop 
4b70(4): lea 0x0(%rax,%rax,4),%rax
4b74(2): xor %edx,%edx
4b76(4): lea 0x0(%rax,%rax,4),%rax
4b7a(4): shl/sal $0x2,%rax
4b7e(3): div %rcx,%rax
4b81(3): test %rdx,%rdx
4b84(3): setnz %dl
4b87(3): movzx %dl,%edx
4b8a(3): add %rax,%rdx
4b8d(6): js 0x112(%rip)
4b93(4): pxor %xmm0,%xmm0
4b97(4): pxor %xmm3,%xmm3
4b9b(5): cvtsi2sd %rdx,%xmm0
4ba0(5): jmp 0xfffffe18(%rip)
4ba5(7): cmp $0x0,0x20f862(%rip)
4bac(6): jz 0xfffff800(%rip)
4bb2(7): mov $0xffffffff,%rax
4bb9(5): mov $0x0,0x40(%rsp)
4bbe(7): lea 0xbd94(%rip),%rbx
4bc5(5): mov %rax,0x50(%rsp)
4bca(5): mov %rax,0x48(%rsp)
4bcf(5): mov %rax,0x38(%rsp)
4bd4(5): mov %rax,0x30(%rsp)
4bd9(5): mov %rax,0x28(%rsp)
4bde(5): mov %rax,0x20(%rsp)
4be3(5): jmp 0xffffff6d(%rip)
4be8(4): mov (%rsp),%rsi
4bec(8): lea 0xe0(%rsp),%rdx
4bf4(5): mov $0x1,%edi
4bf9(5): call 0xffffd797(%rip)
4bfe(2): test %eax,%eax
4c00(6): jnz 0xffffff32(%rip)
4c06(7): mov 0x20f803(%rip),%rdi
4c0d(3): test %rdi,%rdi
4c10(6): jz 0xffffff22(%rip)
4c16(8): mov 0xe0(%rsp),%rax
4c1e(8): lea 0xa0(%rsp),%rsi
4c26(8): mov %rax,0xa0(%rsp)
4c2e(5): call 0x1aa2(%rip)
4c33(3): test %rax,%rax
4c36(6): jz 0xfffffefc(%rip)
4c3c(4): mov 0x8(%rax),%r15
4c40(3): test %r15,%r15
4c43(6): jz 0xfffffeef(%rip)
4c49(3): mov (%r15),%rdi
4c4c(3): mov %r14,%rsi
4c4f(5): call 0xffffd6f1(%rip)
4c54(2): test %eax,%eax
4c56(6): jz 0xfffffedc(%rip)
4c5c(5): test $0x2,0x28(%r15)
4c61(2): jz 0xb(%rip)
4c63(3): test %bpl,%bpl
4c66(6): jnz 0xfffffecc(%rip)
4c6c(4): or $0xffffffff,%rax
4c70(5): mov $0x0,0x40(%rsp)
4c75(7): lea 0xbcdd(%rip),%rbx
4c7c(5): mov %rax,0x50(%rsp)
4c81(5): mov %rax,0x48(%rsp)
4c86(5): mov %rax,0x38(%rsp)
4c8b(5): mov %rax,0x30(%rsp)
4c90(5): mov %rax,0x28(%rsp)
4c95(5): mov %rax,0x20(%rsp)
4c9a(5): jmp 0xfffffe98(%rip)
4c9f(3): mov %rdx,%rax
4ca2(4): pxor %xmm0,%xmm0
4ca6(3): shr $0x1,%rax
4ca9(3): and $0x1,%edx
4cac(3): or %rdx,%rax
4caf(4): pxor %xmm3,%xmm3
4cb3(5): cvtsi2sd %rax,%xmm0
4cb8(4): addsd %xmm0,%xmm0
4cbc(5): jmp 0xfffffcfc(%rip)
4cc1(7): lea 0xa670(%rip),%rcx
4cc8(7): lea 0xa322(%rip),%rsi
4ccf(7): lea 0xa388(%rip),%rdi
4cd6(5): mov $0x4d2,%edx
4cdb(5): call 0xffffd5a5(%rip)
4ce0(3): test %dil,%dil
4ce3(2): jz 0x7e(%rip)
4ce5(3): neg %rcx
4ce8(3): cmp %rax,%rcx
4ceb(2): jbe 0x63(%rip)
4ced(3): sub %rax,%rcx
4cf0(7): mov %rcx,0x20f6c1(%rip)
4cf7(7): cmp $0x0,0x20f6c2(%rip)
4cfe(6): jz 0xfffff9d2(%rip)
4d04(7): neg 0x20f6ad(%rip)
4d0b(5): jmp 0xfffff9c5(%rip)
4d10(7): lea 0xa621(%rip),%rcx
4d17(7): lea 0xa2d3(%rip),%rsi
4d1e(7): lea 0xa326(%rip),%rdi
4d25(5): mov $0x4ce,%edx
4d2a(5): call 0xffffd556(%rip)
4d2f(7): lea 0xa602(%rip),%rcx
4d36(7): lea 0xa2b4(%rip),%rsi
4d3d(7): lea 0xa2ee(%rip),%rdi
4d44(5): mov $0x468,%edx
4d49(5): call 0xffffd537(%rip)
4d4e(3): sub %rcx,%rax
4d51(7): mov %sil,0x20f668(%rip)
4d58(7): mov %rax,0x20f659(%rip)
4d5f(2): jmp 0xffffff98(%rip)
4d61(3): neg %rax
4d64(2): jmp 0xffffff84(%rip)
4d66(5): call 0xffffd48a(%rip)

"usage" :
4d70(2): push %r13
4d72(2): push %r12
4d74(5): mov $0x5,%edx
4d79(1): push %rbp
4d7a(1): push %rbx
4d7b(2): mov %edi,%ebp
4d7d(7): sub $0x88,%rsp
4d84(7): mov 0x20f69d(%rip),%rbx
4d8b(9): mov $0x28,%rax
4d94(5): mov %rax,0x78(%rsp)
4d99(2): xor %eax,%eax
4d9b(2): test %edi,%edi
4d9d(2): jz 0x30(%rip)
4d9f(7): lea 0xa5d2(%rip),%rsi
4da6(2): xor %edi,%edi
4da8(5): call 0xffffd3e8(%rip)
4dad(7): mov 0x20f58c(%rip),%rdi
4db4(3): mov %rax,%rdx
4db7(3): mov %rbx,%rcx
4dba(5): mov $0x1,%esi
4dbf(2): xor %eax,%eax
4dc1(5): call 0xffffd76f(%rip)
4dc6(2): mov %ebp,%edi
4dc8(5): call 0xffffd748(%rip)
4dcd(7): lea 0xa5cc(%rip),%rsi
4dd4(2): xor %edi,%edi
4dd6(5): call 0xffffd3ba(%rip)
4ddb(3): mov %rbx,%rdx
4dde(3): mov %rax,%rsi
4de1(5): mov $0x1,%edi
4de6(2): xor %eax,%eax
4de8(5): call 0xffffd688(%rip)
4ded(7): mov 0x20f514(%rip),%rbx
4df4(7): lea 0xa5cd(%rip),%rsi
4dfb(5): mov $0x5,%edx
4e00(2): xor %edi,%edi
4e02(5): call 0xffffd38e(%rip)
4e07(3): mov %rbx,%rsi
4e0a(3): mov %rax,%rdi
4e0d(5): call 0xffffd503(%rip)
4e12(7): mov 0x20f4ef(%rip),%rbx
4e19(7): lea 0xa610(%rip),%rsi
4e20(5): mov $0x5,%edx
4e25(2): xor %edi,%edi
4e27(5): call 0xffffd369(%rip)
4e2c(3): mov %rbx,%rsi
4e2f(3): mov %rax,%rdi
4e32(5): call 0xffffd4de(%rip)
4e37(7): mov 0x20f4ca(%rip),%rbx
4e3e(7): lea 0xa63b(%rip),%rsi
4e45(5): mov $0x5,%edx
4e4a(2): xor %edi,%edi
4e4c(5): call 0xffffd344(%rip)
4e51(3): mov %rbx,%rsi
4e54(3): mov %rax,%rdi
4e57(5): call 0xffffd4b9(%rip)
4e5c(7): mov 0x20f4a5(%rip),%rbx
4e63(7): lea 0xa7b6(%rip),%rsi
4e6a(5): mov $0x5,%edx
4e6f(2): xor %edi,%edi
4e71(5): call 0xffffd31f(%rip)
4e76(3): mov %rbx,%rsi
4e79(3): mov %rax,%rdi
4e7c(5): call 0xffffd494(%rip)
4e81(7): mov 0x20f480(%rip),%rbx
4e88(7): lea 0xa891(%rip),%rsi
4e8f(5): mov $0x5,%edx
4e94(2): xor %edi,%edi
4e96(5): call 0xffffd2fa(%rip)
4e9b(3): mov %rbx,%rsi
4e9e(3): mov %rax,%rdi
4ea1(5): call 0xffffd46f(%rip)
4ea6(7): mov 0x20f45b(%rip),%rbx
4ead(7): lea 0xa97c(%rip),%rsi
4eb4(5): mov $0x5,%edx
4eb9(2): xor %edi,%edi
4ebb(5): call 0xffffd2d5(%rip)
4ec0(3): mov %rbx,%rsi
4ec3(3): mov %rax,%rdi
4ec6(5): call 0xffffd44a(%rip)
4ecb(7): mov 0x20f436(%rip),%rbx
4ed2(7): lea 0xa9df(%rip),%rsi
4ed9(5): mov $0x5,%edx
4ede(2): xor %edi,%edi
4ee0(5): call 0xffffd2b0(%rip)
4ee5(3): mov %rbx,%rsi
4ee8(3): mov %rax,%rdi
4eeb(5): call 0xffffd425(%rip)
4ef0(7): mov 0x20f411(%rip),%rbx
4ef7(7): lea 0xaa9a(%rip),%rsi
4efe(5): mov $0x5,%edx
4f03(2): xor %edi,%edi
4f05(5): call 0xffffd28b(%rip)
4f0a(3): mov %rbx,%rsi
4f0d(3): mov %rax,%rdi
4f10(5): call 0xffffd400(%rip)
4f15(7): mov 0x20f3ec(%rip),%rbx
4f1c(7): lea 0xaaa5(%rip),%rsi
4f23(5): mov $0x5,%edx
4f28(2): xor %edi,%edi
4f2a(5): call 0xffffd266(%rip)
4f2f(3): mov %rbx,%rsi
4f32(3): mov %rax,%rdi
4f35(5): call 0xffffd3db(%rip)
4f3a(7): lea 0xaabf(%rip),%rsi
4f41(5): mov $0x5,%edx
4f46(2): xor %edi,%edi
4f48(5): call 0xffffd248(%rip)
4f4d(7): lea 0xa11b(%rip),%rdx
4f54(3): mov %rax,%rsi
4f57(5): mov $0x1,%edi
4f5c(2): xor %eax,%eax
4f5e(5): call 0xffffd512(%rip)
4f63(7): mov 0x20f39e(%rip),%rbx
4f6a(7): lea 0xab6f(%rip),%rsi
4f71(5): mov $0x5,%edx
4f76(2): xor %edi,%edi
4f78(5): call 0xffffd218(%rip)
4f7d(3): mov %rbx,%rsi
4f80(3): mov %rax,%rdi
4f83(5): call 0xffffd38d(%rip)
4f88(7): mov 0x20f379(%rip),%rbx
4f8f(7): lea 0xac22(%rip),%rsi
4f96(5): mov $0x5,%edx
4f9b(2): xor %edi,%edi
4f9d(5): call 0xffffd1f3(%rip)
4fa2(3): mov %rbx,%rsi
4fa5(3): mov %rax,%rdi
4fa8(7): lea 0xa0bd(%rip),%rbx
4faf(5): call 0xffffd361(%rip)
4fb4(7): lea 0xa0b7(%rip),%rax
4fbb(7): lea 0xa0f1(%rip),%rcx
4fc2(9): mov $0x0,0x60(%rsp)
4fcb(9): mov $0x0,0x68(%rsp)
4fd4(3): mov %rsp,%rdx
4fd7(4): mov %rax,(%rsp)
4fdb(7): lea 0xa092(%rip),%rax
4fe2(5): mov %rcx,0x30(%rsp)
4fe7(7): lea 0xa0cf(%rip),%rcx
4fee(5): mov %rax,0x8(%rsp)
4ff3(7): lea 0xa0f2(%rip),%rax
4ffa(5): mov %rcx,0x40(%rsp)
4fff(7): lea 0xa0c1(%rip),%rcx
5006(5): mov %rax,0x10(%rsp)
500b(7): lea 0xa072(%rip),%rax
5012(5): mov %rcx,0x50(%rsp)
5017(5): mov %rax,0x18(%rsp)
501c(7): lea 0xa077(%rip),%rax
5023(5): mov %rax,0x20(%rsp)
5028(7): lea 0xa075(%rip),%rax
502f(5): mov %rax,0x28(%rsp)
5034(5): mov %rax,0x38(%rsp)
5039(5): mov %rax,0x48(%rsp)
503e(5): mov %rax,0x58(%rsp)
5043(5): nop 0x0(%rax,%rax,1)
5048(4): add $0x10,%rdx
504c(3): mov (%rdx),%rdi
504f(3): test %rdi,%rdi
5052(2): jz 0x15(%rip)
5054(5): mov $0x3,%ecx
5059(3): mov %rbx,%rsi
505c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
505e(3): setnbe %al
5061(2): sbb $0x0,%al
5063(2): test %al,%al
5065(2): jnz 0xffffffe3(%rip)
5067(4): mov 0x8(%rdx),%r12
506b(2): xor %edi,%edi
506d(5): mov $0x5,%edx
5072(7): lea 0xa058(%rip),%rsi
5079(3): test %r12,%r12
507c(6): jz 0xc7(%rip)
5082(5): call 0xffffd10e(%rip)
5087(7): lea 0xac0a(%rip),%rcx
508e(7): lea 0xa053(%rip),%rdx
5095(3): mov %rax,%rsi
5098(5): mov $0x1,%edi
509d(2): xor %eax,%eax
509f(5): call 0xffffd3d1(%rip)
50a4(2): xor %esi,%esi
50a6(5): mov $0x5,%edi
50ab(5): call 0xffffd3b5(%rip)
50b0(3): test %rax,%rax
50b3(2): jz 0x1e(%rip)
50b5(7): lea 0xa03a(%rip),%rsi
50bc(5): mov $0x3,%edx
50c1(3): mov %rax,%rdi
50c4(5): call 0xffffcffc(%rip)
50c9(2): test %eax,%eax
50cb(6): jnz 0x10d(%rip)
50d1(7): lea 0xa022(%rip),%rsi
50d8(2): xor %edi,%edi
50da(5): mov $0x5,%edx
50df(5): call 0xffffd0b1(%rip)
50e4(7): lea 0x9f81(%rip),%rcx
50eb(7): lea 0xaba6(%rip),%rdx
50f2(3): mov %rax,%rsi
50f5(5): mov $0x1,%edi
50fa(2): xor %eax,%eax
50fc(5): call 0xffffd374(%rip)
5101(3): cmp %rbx,%r12
5104(7): lea 0x9f83(%rip),%rcx
510b(7): lea 0xb4ef(%rip),%rbx
5112(4): cmove %rcx,%rbx
5116(7): lea 0xabeb(%rip),%rsi
511d(2): xor %edi,%edi
511f(5): mov $0x5,%edx
5124(5): call 0xffffd06c(%rip)
5129(3): mov %rbx,%rcx
512c(3): mov %rax,%rsi
512f(3): mov %r12,%rdx
5132(5): mov $0x1,%edi
5137(2): xor %eax,%eax
5139(5): call 0xffffd337(%rip)
513e(5): jmp 0xfffffc88(%rip)
5143(5): call 0xffffd04d(%rip)
5148(7): lea 0xab49(%rip),%rcx
514f(7): lea 0x9f92(%rip),%rdx
5156(3): mov %rax,%rsi
5159(5): mov $0x1,%edi
515e(2): xor %eax,%eax
5160(5): call 0xffffd310(%rip)
5165(2): xor %esi,%esi
5167(5): mov $0x5,%edi
516c(5): call 0xffffd2f4(%rip)
5171(3): test %rax,%rax
5174(2): jz 0x1a(%rip)
5176(7): lea 0x9f79(%rip),%rsi
517d(5): mov $0x3,%edx
5182(3): mov %rax,%rdi
5185(5): call 0xffffcf3b(%rip)
518a(2): test %eax,%eax
518c(2): jnz 0x45(%rip)
518e(7): lea 0x9f65(%rip),%rsi
5195(5): mov $0x5,%edx
519a(2): xor %edi,%edi
519c(7): lea 0x9ec9(%rip),%r12
51a3(7): lea 0x9ee4(%rip),%rbx
51aa(5): call 0xffffcfe6(%rip)
51af(7): lea 0x9eb6(%rip),%rcx
51b6(7): lea 0xaadb(%rip),%rdx
51bd(3): mov %rax,%rsi
51c0(5): mov $0x1,%edi
51c5(2): xor %eax,%eax
51c7(5): call 0xffffd2a9(%rip)
51cc(5): jmp 0xffffff4a(%rip)
51d1(7): lea 0x9e94(%rip),%r12
51d8(7): mov 0x20f129(%rip),%r13
51df(7): lea 0xaada(%rip),%rsi
51e6(2): xor %edi,%edi
51e8(5): mov $0x5,%edx
51ed(5): call 0xffffcfa3(%rip)
51f2(3): mov %r13,%rsi
51f5(3): mov %rax,%rdi
51f8(5): call 0xffffd118(%rip)
51fd(5): jmp 0xfffffed4(%rip)

"decode_output_arg" :
5210(2): push %r15
5212(2): push %r14
5214(7): lea 0x20ee05(%rip),%r14
521b(2): push %r13
521d(2): push %r12
521f(1): push %rbp
5220(1): push %rbx
5221(4): sub $0x18,%rsp
5225(5): call 0x5ddb(%rip)
522a(5): mov %rax,0x8(%rsp)
522f(3): mov %rax,%r12
5232(6): nop 0x0(%rax,%rax,1)
5238(5): mov $0x2c,%esi
523d(3): mov %r12,%rdi
5240(3): xor %r13d,%r13d
5243(5): call 0xffffcfdd(%rip)
5248(3): test %rax,%rax
524b(2): jz 0x9(%rip)
524d(4): lea 0x1(%rax),%r13
5251(3): mov $0x0,(%rax)
5254(7): lea 0x20edcd(%rip),%r15
525b(2): xor %ebx,%ebx
525d(3): nop (%rax)
5260(3): mov (%r15),%rbp
5263(3): mov %r12,%rsi
5266(3): mov %rbp,%rdi
5269(5): call 0xffffd0d7(%rip)
526e(2): test %eax,%eax
5270(2): jz 0x50(%rip)
5272(3): add $0x1,%ebx
5275(4): add $0x30,%r15
5279(3): cmp $0xc,%ebx
527c(2): jnz 0xffffffe4(%rip)
527e(3): mov %r12,%rdi
5281(5): call 0x528f(%rip)
5286(7): lea 0xaae3(%rip),%rsi
528d(3): mov %rax,%rbx
5290(5): mov $0x5,%edx
5295(2): xor %edi,%edi
5297(5): call 0xffffcef9(%rip)
529c(2): xor %edi,%edi
529e(3): mov %rax,%rdx
52a1(3): mov %rbx,%rcx
52a4(2): xor %esi,%esi
52a6(2): xor %eax,%eax
52a8(5): call 0xffffd1f8(%rip)
52ad(5): mov $0x1,%edi
52b2(5): call 0xfffffabe(%rip)
52b7(9): nop 0x0(%rax,%rax,1)
52c0(2): mov %ebx,%eax
52c2(4): lea 0x0(%rax,%rax,2),%rax
52c6(4): shl/sal $0x4,%rax
52ca(6): cmp $0x0,0x2c(%r14,%rax,1)
52d0(2): jnz 0x70(%rip)
52d2(5): mov $0x1,%eax
52d7(2): mov %ebx,%ecx
52d9(3): shl/sal %cl,%rax
52dc(5): test $0xfeb,%eax
52e1(2): jnz 0x3f(%rip)
52e3(2): test $0x10,%al
52e5(2): jnz 0x4b(%rip)
52e7(2): test $0x4,%al
52e9(2): jz 0x73(%rip)
52eb(7): lea 0x9e23(%rip),%rsi
52f2(2): mov %ebx,%edi
52f4(5): call 0xffffeeac(%rip)
52f9(3): test %r13,%r13
52fc(3): mov %r13,%r12
52ff(6): jnz 0xffffff39(%rip)
5305(5): mov 0x8(%rsp),%rdi
530a(4): add $0x18,%rsp
530e(1): pop %rbx
530f(1): pop %rbp
5310(2): pop %r12
5312(2): pop %r13
5314(2): pop %r14
5316(2): pop %r15
5318(5): jmp 0xffffcd58(%rip)
531d(3): nop (%rax)
5320(2): xor %esi,%esi
5322(2): mov %ebx,%edi
5324(5): call 0xffffee7c(%rip)
5329(2): jmp 0xffffffd0(%rip)
532b(5): nop 0x0(%rax,%rax,1)
5330(7): lea 0x9de3(%rip),%rsi
5337(2): mov %ebx,%edi
5339(5): call 0xffffee67(%rip)
533e(2): jmp 0xffffffbb(%rip)
5340(3): mov %rbp,%rdi
5343(5): call 0x51cd(%rip)
5348(5): mov $0x5,%edx
534d(3): mov %rax,%rbx
5350(7): lea 0xa9e9(%rip),%rsi
5357(5): jmp 0xffffff3e(%rip)
535c(7): lea 0x9ffd(%rip),%rcx
5363(7): lea 0x9c87(%rip),%rsi
536a(7): lea 0x9daf(%rip),%rdi
5371(5): mov $0x1dd,%edx
5376(5): call 0xffffcf0a(%rip)

"find_mount_point" :
5380(1): push %rbp
5381(3): mov %rsp,%rbp
5384(2): push %r15
5386(2): push %r14
5388(2): push %r13
538a(7): lea 0xfffffe90(%rbp),%r13
5391(2): push %r12
5393(1): push %rbx
5394(3): mov %rdi,%r12
5397(3): mov %rsi,%rbx
539a(3): mov %r13,%rdi
539d(7): sub $0x148,%rsp
53a4(9): mov $0x28,%rax
53ad(4): mov %rax,0xffffffc8(%rbp)
53b1(2): xor %eax,%eax
53b3(5): call 0x536d(%rip)
53b8(3): mov %eax,%r15d
53bb(5): call 0xffffccf5(%rip)
53c0(3): test %r15d,%r15d
53c3(3): mov %rax,%r14
53c6(6): jnz 0x31f(%rip)
53cc(3): mov 0x18(%rbx),%eax
53cf(5): and $0xf000,%eax
53d4(5): cmp $0x4000,%eax
53d9(6): jz 0x1e7(%rip)
53df(3): mov %r12,%rdi
53e2(5): call 0xa6e(%rip)
53e7(3): mov %rax,%rdi
53ea(3): mov %rax,%rbx
53ed(5): call 0xffffcdc3(%rip)
53f2(4): lea 0x1(%rax),%rdx
53f6(4): add $0x1f,%rax
53fa(3): mov %rbx,%rsi
53fd(4): and $0xfffffff0,%rax
5401(3): sub %rax,%rsp
5404(5): lea 0xf(%rsp),%rdi
5409(4): and $0xfffffff0,%rdi
540d(5): call 0xffffcf53(%rip)
5412(3): mov %rbx,%rdi
5415(3): mov %rax,%r12
5418(5): call 0xffffcc58(%rip)
541d(3): mov %r12,%rdi
5420(5): call 0xffffcdc0(%rip)
5425(2): test %eax,%eax
5427(6): js 0x217(%rip)
542d(7): lea 0xfffffea0(%rbp),%rdx
5434(7): lea 0xaad1(%rip),%rsi
543b(5): mov $0x1,%edi
5440(5): call 0xffffcf50(%rip)
5445(2): test %eax,%eax
5447(6): js 0x239(%rip)
544d(7): lea 0xffffff30(%rbp),%r12
5454(7): lea 0xaab0(%rip),%rbx
545b(5): jmp 0xb8(%rip)
5460(7): mov 0xfffffea0(%rbp),%rax
5467(7): cmp %rax,0xffffff30(%rbp)
546e(6): jnz 0x142(%rip)
5474(7): mov 0xfffffea8(%rbp),%rax
547b(7): cmp %rax,0xffffff38(%rbp)
5482(6): jz 0x12e(%rip)
5488(3): mov %rbx,%rdi
548b(5): call 0xffffcd55(%rip)
5490(2): test %eax,%eax
5492(6): js 0x22e(%rip)
5498(8): movdqa 0xffffff30(%rbp),%xmm0
54a0(7): movaps %xmm0,0xfffffea0(%rbp)
54a7(8): movdqa 0xffffff40(%rbp),%xmm0
54af(7): movaps %xmm0,0xfffffeb0(%rbp)
54b6(8): movdqa 0xffffff50(%rbp),%xmm0
54be(7): movaps %xmm0,0xfffffec0(%rbp)
54c5(8): movdqa 0xffffff60(%rbp),%xmm0
54cd(7): movaps %xmm0,0xfffffed0(%rbp)
54d4(8): movdqa 0xffffff70(%rbp),%xmm0
54dc(7): movaps %xmm0,0xfffffee0(%rbp)
54e3(5): movdqa 0xffffff80(%rbp),%xmm0
54e8(7): movaps %xmm0,0xfffffef0(%rbp)
54ef(5): movdqa 0xffffff90(%rbp),%xmm0
54f4(7): movaps %xmm0,0xffffff00(%rbp)
54fb(5): movdqa 0xffffffa0(%rbp),%xmm0
5500(7): movaps %xmm0,0xffffff10(%rbp)
5507(5): movdqa 0xffffffb0(%rbp),%xmm0
550c(7): movaps %xmm0,0xffffff20(%rbp)
5513(3): mov %r12,%rdx
5516(3): mov %rbx,%rsi
5519(5): mov $0x1,%edi
551e(5): call 0xffffce72(%rip)
5523(2): test %eax,%eax
5525(6): jns 0xffffff3b(%rip)
552b(7): lea 0xa9d9(%rip),%rsi
5532(5): mov $0x4,%edi
5537(5): call 0x4d09(%rip)
553c(7): lea 0xa9cb(%rip),%rsi
5543(3): mov %rax,%rbx
5546(5): mov $0x5,%edx
554b(2): xor %edi,%edi
554d(5): call 0xffffcc43(%rip)
5552(3): mov (%r14),%esi
5555(3): mov %rbx,%rcx
5558(3): mov %rax,%rdx
555b(2): xor %edi,%edi
555d(2): xor %eax,%eax
555f(2): xor %ebx,%ebx
5561(5): call 0xffffcf3f(%rip)
5566(3): mov %r13,%rdi
5569(3): mov (%r14),%r12d
556c(5): call 0x5204(%rip)
5571(2): test %eax,%eax
5573(6): jnz 0x19b(%rip)
5579(3): mov %r13,%rdi
557c(5): call 0x5214(%rip)
5581(3): mov %r12d,(%r14)
5584(4): mov 0xffffffc8(%rbp),%rcx
5588(9): xor $0x28,%rcx
5591(3): mov %rbx,%rax
5594(6): jnz 0x19f(%rip)
559a(4): lea 0xffffffd8(%rbp),%rsp
559e(1): pop %rbx
559f(2): pop %r12
55a1(2): pop %r13
55a3(2): pop %r14
55a5(2): pop %r15
55a7(1): pop %rbp
55a8(1): ret near (%rsp)
55a9(7): nop 0x0(%rax)
55b0(5): call 0x5ab0(%rip)
55b5(3): mov %rax,%rbx
55b8(2): jmp 0xffffffae(%rip)
55ba(6): nop 0x0(%rax,%rax,1)
55c0(4): movdqu (%rbx),%xmm0
55c4(3): mov %r12,%rdi
55c7(7): movaps %xmm0,0xfffffea0(%rbp)
55ce(5): movdqu 0x10(%rbx),%xmm0
55d3(7): movaps %xmm0,0xfffffeb0(%rbp)
55da(5): movdqu 0x20(%rbx),%xmm0
55df(7): movaps %xmm0,0xfffffec0(%rbp)
55e6(5): movdqu 0x30(%rbx),%xmm0
55eb(7): movaps %xmm0,0xfffffed0(%rbp)
55f2(5): movdqu 0x40(%rbx),%xmm0
55f7(7): movaps %xmm0,0xfffffee0(%rbp)
55fe(5): movdqu 0x50(%rbx),%xmm0
5603(7): movaps %xmm0,0xfffffef0(%rbp)
560a(5): movdqu 0x60(%rbx),%xmm0
560f(7): movaps %xmm0,0xffffff00(%rbp)
5616(5): movdqu 0x70(%rbx),%xmm0
561b(7): movaps %xmm0,0xffffff10(%rbp)
5622(8): movdqu 0x80(%rbx),%xmm0
562a(7): movaps %xmm0,0xffffff20(%rbp)
5631(5): call 0xffffcbaf(%rip)
5636(2): test %eax,%eax
5638(6): jns 0xfffffe15(%rip)
563e(3): mov %r12,%rsi
5641(5): mov $0x4,%edi
5646(5): call 0x4bfa(%rip)
564b(7): lea 0xa89b(%rip),%rsi
5652(5): mov $0x5,%edx
5657(2): xor %edi,%edi
5659(3): mov %rax,%rbx
565c(5): call 0xffffcb34(%rip)
5661(3): mov (%r14),%esi
5664(3): mov %rbx,%rcx
5667(3): mov %rax,%rdx
566a(2): xor %edi,%edi
566c(2): xor %eax,%eax
566e(2): xor %ebx,%ebx
5670(5): call 0xffffce30(%rip)
5675(5): jmp 0xffffff0f(%rip)
567a(6): nop 0x0(%rax,%rax,1)
5680(3): mov %r12,%rsi
5683(5): mov $0x4,%edi
5688(5): call 0x4bb8(%rip)
568d(7): lea 0xa88c(%rip),%rsi
5694(5): mov $0x5,%edx
5699(2): xor %edi,%edi
569b(3): mov %rax,%rbx
569e(5): call 0xffffcaf2(%rip)
56a3(3): mov (%r14),%esi
56a6(3): mov %rbx,%rcx
56a9(3): mov %rax,%rdx
56ac(2): xor %edi,%edi
56ae(2): xor %eax,%eax
56b0(2): xor %ebx,%ebx
56b2(5): call 0xffffcdee(%rip)
56b7(5): jmp 0xfffffeaf(%rip)
56bc(4): nop 0x0(%rax)
56c0(7): lea 0xa844(%rip),%rsi
56c7(5): mov $0x4,%edi
56cc(5): call 0x4b74(%rip)
56d1(5): mov $0x5,%edx
56d6(3): mov %rax,%rbx
56d9(7): lea 0xa80d(%rip),%rsi
56e0(5): jmp 0xfffffe6b(%rip)
56e5(7): lea 0xa7e4(%rip),%rsi
56ec(5): mov $0x5,%edx
56f1(2): xor %edi,%edi
56f3(2): xor %ebx,%ebx
56f5(5): call 0xffffca9b(%rip)
56fa(3): mov (%r14),%esi
56fd(3): mov %rax,%rdx
5700(2): xor %edi,%edi
5702(2): xor %eax,%eax
5704(5): call 0xffffcd9c(%rip)
5709(5): jmp 0xfffffe7b(%rip)
570e(7): lea 0xa833(%rip),%rsi
5715(5): mov $0x5,%edx
571a(2): xor %edi,%edi
571c(5): call 0xffffca74(%rip)
5721(3): mov (%r14),%esi
5724(3): mov %rax,%rdx
5727(5): mov $0x1,%edi
572c(2): xor %eax,%eax
572e(5): call 0xffffcd72(%rip)
5733(5): call 0xffffcabd(%rip)

"canonicalize_filename_mode" :
5740(2): push %r15
5742(2): push %r14
5744(2): push %r13
5746(2): push %r12
5748(1): push %rbp
5749(1): push %rbx
574a(7): sub $0xe8,%rsp
5751(9): mov $0x28,%rax
575a(8): mov %rax,0xd8(%rsp)
5762(2): xor %eax,%eax
5764(2): mov %esi,%eax
5766(3): and $0x4,%eax
5769(5): setnz 0x1b(%rsp)
576e(3): and $0x3,%esi
5771(4): mov %eax,0x1c(%rsp)
5775(3): lea 0xffffffff(%rsi),%eax
5778(4): mov %esi,0x4(%rsp)
577c(2): test %eax,%esi
577e(6): jnz 0x552(%rip)
5784(3): test %rdi,%rdi
5787(3): mov %rdi,%r14
578a(6): jz 0x546(%rip)
5790(3): movzx (%rdi),%eax
5793(2): test %al,%al
5795(6): jz 0x57b(%rip)
579b(2): cmp $0x2f,%al
579d(6): jz 0x4c3(%rip)
57a3(5): call 0x58bd(%rip)
57a8(3): test %rax,%rax
57ab(3): mov %rax,%rbp
57ae(6): jz 0x1b2(%rip)
57b4(3): mov %rax,%rdi
57b7(5): call 0xffffc9f9(%rip)
57bc(6): cmp $0xfff,%rax
57c2(3): mov %rax,%r15
57c5(6): jbe 0x4bb(%rip)
57cb(3): add %rbp,%r15
57ce(3): mov %r15,%rbx
57d1(5): lea 0x40(%rsp),%rax
57d6(5): mov %r14,0x20(%rsp)
57db(9): mov $0x0,0x10(%rsp)
57e4(9): mov $0x0,0x30(%rsp)
57ed(9): mov $0x0,0x28(%rsp)
57f6(5): mov %rax,0x8(%rsp)
57fb(4): movzx (%r14),%eax
57ff(2): test %al,%al
5801(6): jz 0x10e(%rip)
5807(9): nop 0x0(%rax,%rax,1)
5810(2): cmp $0x2f,%al
5812(2): jnz 0x1a(%rip)
5814(4): nop 0x0(%rax)
5818(4): add $0x1,%r14
581c(4): movzx (%r14),%eax
5820(2): cmp $0x2f,%al
5822(2): jz 0xfffffff6(%rip)
5824(2): test %al,%al
5826(6): jz 0x2ca(%rip)
582c(3): mov %r14,%r13
582f(2): jmp 0xe(%rip)
5831(7): nop 0x0(%rax)
5838(3): cmp $0x2f,%dl
583b(2): jz 0xf(%rip)
583d(4): add $0x1,%r13
5841(5): movzx 0x0(%r13),%edx
5846(2): test %dl,%dl
5848(2): jnz 0xfffffff0(%rip)
584a(3): cmp %r14,%r13
584d(6): jz 0xc2(%rip)
5853(3): mov %r13,%r12
5856(3): sub %r14,%r12
5859(4): cmp $0x1,%r12
585d(6): jz 0x1d3(%rip)
5863(4): cmp $0x2,%r12
5867(2): jnz 0xa(%rip)
5869(2): cmp $0x2e,%al
586b(6): jz 0x295(%rip)
5871(5): cmp $0x2f,0xffffffff(%r15)
5876(2): jz 0xa(%rip)
5878(4): mov $0x2f,(%r15)
587c(4): add $0x1,%r15
5880(4): lea 0x0(%r15,%r12,1),%rax
5884(3): cmp %rax,%rbx
5887(2): jnbe 0x33(%rip)
5889(3): sub %rbp,%rbx
588c(3): sub %rbp,%r15
588f(3): mov %rbp,%rdi
5892(5): lea 0x1(%r12,%rbx,1),%rax
5897(7): add $0x1000,%rbx
589e(7): cmp $0x1000,%r12
58a5(4): cmovnl %rax,%rbx
58a9(3): mov %rbx,%rsi
58ac(5): call 0x5584(%rip)
58b1(3): mov %rax,%rbp
58b4(3): add %rax,%rbx
58b7(3): add %rax,%r15
58ba(3): mov %r15,%rdi
58bd(3): mov %r12,%rdx
58c0(3): mov %r14,%rsi
58c3(5): call 0xffffca9d(%rip)
58c8(5): cmp $0x2,0x4(%rsp)
58cd(4): lea 0x0(%r15,%r12,1),%r15
58d1(4): mov $0x0,(%r15)
58d5(6): jnz 0xbb(%rip)
58db(5): cmp $0x0,0x1b(%rsp)
58e0(6): jz 0xb0(%rip)
58e6(8): mov $0x0,0x58(%rsp)
58ee(5): cmp $0x0,0x0(%r13)
58f3(2): jz 0xd(%rip)
58f5(5): cmp $0x2,0x4(%rsp)
58fa(6): jnz 0x45d(%rip)
5900(3): mov %r13,%r14
5903(4): movzx (%r14),%eax
5907(2): test %al,%al
5909(6): jnz 0xffffff07(%rip)
590f(4): lea 0x1(%rbp),%rax
5913(3): cmp %rax,%r15
5916(2): jbe 0xd(%rip)
5918(5): cmp $0x2f,0xffffffff(%r15)
591d(2): jnz 0x6(%rip)
591f(4): sub $0x1,%r15
5923(4): lea 0x1(%r15),%rax
5927(4): mov $0x0,(%r15)
592b(3): cmp %rax,%rbx
592e(2): jz 0x14(%rip)
5930(3): sub %rbp,%r15
5933(3): mov %rbp,%rdi
5936(4): lea 0x1(%r15),%rsi
593a(5): call 0x54f6(%rip)
593f(3): mov %rax,%rbp
5942(5): mov 0x28(%rsp),%rdi
5947(5): call 0xffffc729(%rip)
594c(5): mov 0x10(%rsp),%rax
5951(3): test %rax,%rax
5954(2): jz 0xc(%rip)
5956(3): mov %rax,%rdi
5959(5): call 0x1237(%rip)
595e(2): nop 
5960(8): mov 0xd8(%rsp),%rcx
5968(9): xor $0x28,%rcx
5971(3): mov %rbp,%rax
5974(6): jnz 0x3fd(%rip)
597a(7): add $0xe8,%rsp
5981(1): pop %rbx
5982(1): pop %rbp
5983(2): pop %r12
5985(2): pop %r13
5987(2): pop %r14
5989(2): pop %r15
598b(1): ret near (%rsp)
598c(4): nop 0x0(%rax)
5990(4): mov 0x1c(%rsp),%eax
5994(5): mov 0x8(%rsp),%rdx
5999(3): mov %rbp,%rsi
599c(5): mov $0x1,%edi
59a1(2): test %eax,%eax
59a3(6): jz 0xbd(%rip)
59a9(5): call 0xffffc9e7(%rip)
59ae(2): test %eax,%eax
59b0(3): setnz %al
59b3(2): test %al,%al
59b5(6): jz 0x8b(%rip)
59bb(5): call 0xffffc6f5(%rip)
59c0(3): mov %rax,%r14
59c3(2): mov (%rax),%edx
59c5(4): mov 0x4(%rsp),%eax
59c9(2): test %eax,%eax
59cb(2): jz 0x33(%rip)
59cd(3): cmp $0x1,%eax
59d0(6): jnz 0xffffff16(%rip)
59d6(7): lea 0xa6f1(%rip),%rsi
59dd(3): mov %r13,%rdi
59e0(4): mov %edx,0x38(%rsp)
59e4(5): call 0xffffc8fc(%rip)
59e9(6): cmp $0x0,0x0(%r13,%rax,1)
59ef(4): mov 0x38(%rsp),%edx
59f3(2): jnz 0xb(%rip)
59f5(3): cmp $0x2,%edx
59f8(6): jz 0xffffff08(%rip)
59fe(3): mov %r14,%r12
5a01(5): mov 0x28(%rsp),%rdi
5a06(4): mov %edx,0x4(%rsp)
5a0a(5): call 0xffffc666(%rip)
5a0f(3): mov %rbp,%rdi
5a12(5): call 0xffffc65e(%rip)
5a17(6): cmp $0x0,0x10(%rsp)
5a1d(4): mov 0x4(%rsp),%edx
5a21(6): jz 0xbb(%rip)
5a27(5): jmp 0xa3(%rip)
5a2c(4): nop 0x0(%rax)
5a30(2): cmp $0x2e,%al
5a32(6): jnz 0xfffffe3f(%rip)
5a38(5): jmp 0xfffffec8(%rip)
5a3d(3): nop (%rax)
5a40(4): mov 0x58(%rsp),%eax
5a44(5): and $0xf000,%eax
5a49(5): cmp $0xa000,%eax
5a4e(2): jz 0x22(%rip)
5a50(5): cmp $0x4000,%eax
5a55(6): jz 0xfffffeab(%rip)
5a5b(5): jmp 0xfffffe93(%rip)
5a60(5): call 0xffffc760(%rip)
5a65(2): test %eax,%eax
5a67(3): setnz %al
5a6a(5): jmp 0xffffff49(%rip)
5a6f(1): nop 
5a70(6): cmp $0x0,0x10(%rsp)
5a76(6): jz 0x1b0(%rip)
5a7c(5): mov 0x8(%rsp),%rdx
5a81(5): mov 0x20(%rsp),%rsi
5a86(5): mov 0x10(%rsp),%rdi
5a8b(5): call 0x5e5(%rip)
5a90(2): test %al,%al
5a92(6): jz 0xbe(%rip)
5a98(5): cmp $0x2,0x4(%rsp)
5a9d(6): jz 0xfffffe63(%rip)
5aa3(5): call 0xffffc60d(%rip)
5aa8(5): mov $0x28,%edx
5aad(3): mov %rax,%r12
5ab0(5): mov 0x28(%rsp),%rdi
5ab5(4): mov %edx,0x4(%rsp)
5ab9(5): call 0xffffc5b7(%rip)
5abe(3): mov %rbp,%rdi
5ac1(5): call 0xffffc5af(%rip)
5ac6(4): mov 0x4(%rsp),%edx
5aca(5): mov 0x10(%rsp),%rdi
5acf(4): mov %edx,0x4(%rsp)
5ad3(5): call 0x10bd(%rip)
5ad8(4): mov 0x4(%rsp),%edx
5adc(4): mov %edx,(%r12)
5ae0(2): xor %ebp,%ebp
5ae2(5): jmp 0xfffffe7e(%rip)
5ae7(9): nop 0x0(%rax,%rax,1)
5af0(3): mov %r14,%r13
5af3(5): jmp 0xfffffd57(%rip)
5af8(8): nop 0x0(%rax,%rax,1)
5b00(5): cmp $0x2e,0x1(%r14)
5b05(6): jnz 0xfffffd6c(%rip)
5b0b(4): lea 0x1(%rbp),%rax
5b0f(3): mov %r13,%r14
5b12(3): cmp %rax,%r15
5b15(6): jbe 0xfffffce6(%rip)
5b1b(4): lea 0xffffffff(%r15),%rax
5b1f(3): cmp %rax,%rbp
5b22(6): jnb 0x247(%rip)
5b28(5): cmp $0x2f,0xfffffffe(%r15)
5b2d(3): mov %rax,%r15
5b30(6): jz 0xfffffccb(%rip)
5b36(4): sub $0x1,%r15
5b3a(3): cmp %r15,%rbp
5b3d(6): jz 0xfffffdc3(%rip)
5b43(5): cmp $0x2f,0xffffffff(%r15)
5b48(6): jz 0xfffffdb8(%rip)
5b4e(2): jmp 0xffffffe8(%rip)
5b50(5): mov 0x8(%rsp),%rdx
5b55(5): mov 0x20(%rsp),%rsi
5b5a(5): mov 0x10(%rsp),%rdi
5b5f(5): call 0x481(%rip)
5b64(5): mov 0x70(%rsp),%rsi
5b69(3): mov %rbp,%rdi
5b6c(5): call 0x6984(%rip)
5b71(3): test %rax,%rax
5b74(3): mov %rax,%r14
5b77(6): jz 0x16b(%rip)
5b7d(3): mov %rax,%rdi
5b80(5): call 0xffffc630(%rip)
5b85(3): mov %r13,%rdi
5b88(3): mov %rax,%r12
5b8b(5): mov %rax,0x20(%rsp)
5b90(5): call 0xffffc620(%rip)
5b95(6): cmp $0x0,0x30(%rsp)
5b9b(3): mov %rax,%rdx
5b9e(5): lea 0x1(%r12,%rdx,1),%rcx
5ba3(6): jz 0xfc(%rip)
5ba9(5): cmp %rcx,0x30(%rsp)
5bae(2): jnb 0x23(%rip)
5bb0(5): mov 0x28(%rsp),%rdi
5bb5(3): mov %rcx,%rsi
5bb8(5): mov %rdx,0x38(%rsp)
5bbd(5): mov %rcx,0x30(%rsp)
5bc2(5): call 0x526e(%rip)
5bc7(5): mov 0x38(%rsp),%rdx
5bcc(5): mov %rax,0x28(%rsp)
5bd1(5): mov 0x28(%rsp),%r12
5bd6(5): mov 0x20(%rsp),%rdi
5bdb(4): add $0x1,%rdx
5bdf(3): mov %r13,%rsi
5be2(3): add %r12,%rdi
5be5(3): mov %r12,%r13
5be8(5): call 0xffffc8a8(%rip)
5bed(5): mov 0x20(%rsp),%rdx
5bf2(3): mov %r14,%rsi
5bf5(3): mov %r12,%rdi
5bf8(5): call 0xffffc768(%rip)
5bfd(4): cmp $0x2f,(%r14)
5c01(5): mov %r12,0x20(%rsp)
5c06(4): lea 0x1(%rbp),%rax
5c0a(6): jz 0xfa(%rip)
5c10(3): cmp %rax,%r15
5c13(6): jnbe 0x10f(%rip)
5c19(3): mov %r14,%rdi
5c1c(5): call 0xffffc454(%rip)
5c21(5): jmp 0xfffffcdf(%rip)
5c26(7): lea 0x1833(%rip),%r8
5c2d(7): lea 0x17ec(%rip),%rcx
5c34(2): xor %esi,%esi
5c36(7): lea 0x1773(%rip),%rdx
5c3d(5): mov $0x7,%edi
5c42(5): call 0xcfe(%rip)
5c47(3): test %rax,%rax
5c4a(5): mov %rax,0x10(%rsp)
5c4f(6): jnz 0xfffffe2d(%rip)
5c55(5): call 0x53cb(%rip)
5c5a(6): nop 0x0(%rax,%rax,1)
5c60(5): mov $0x1000,%edi
5c65(5): call 0x516b(%rip)
5c6a(3): mov %rax,%rbp
5c6d(7): lea 0x1000(%rax),%rbx
5c74(4): lea 0x1(%rax),%r15
5c78(3): mov $0x2f,(%rax)
5c7b(5): jmp 0xfffffb56(%rip)
5c80(3): mov %rbp,%rdi
5c83(5): mov $0x1000,%esi
5c88(5): call 0x51a8(%rip)
5c8d(3): mov %rax,%rbp
5c90(3): add %rax,%r15
5c93(7): lea 0x1000(%rax),%rbx
5c9a(5): jmp 0xfffffb37(%rip)
5c9f(7): cmp $0x1000,%rcx
5ca6(5): mov $0x1000,%eax
5cab(5): mov %rdx,0x38(%rsp)
5cb0(4): cmovnb %rcx,%rax
5cb4(3): mov %rax,%rdi
5cb7(5): mov %rax,0x30(%rsp)
5cbc(5): call 0x5114(%rip)
5cc1(5): mov 0x38(%rsp),%rdx
5cc6(5): mov %rax,0x28(%rsp)
5ccb(5): jmp 0xffffff06(%rip)
5cd0(5): call 0xffffc3e0(%rip)
5cd5(2): xor %ebp,%ebp
5cd7(6): mov $0x16,(%rax)
5cdd(5): jmp 0xfffffc83(%rip)
5ce2(5): call 0xffffc3ce(%rip)
5ce7(5): cmp $0x2,0x4(%rsp)
5cec(3): mov %rax,%r14
5cef(2): mov (%rax),%edx
5cf1(2): jnz 0xb(%rip)
5cf3(3): cmp $0xc,%edx
5cf6(6): jnz 0xfffffc0a(%rip)
5cfc(3): mov %r14,%r12
5cff(5): jmp 0xfffffdb1(%rip)
5d04(4): mov $0x2f,0x0(%rbp)
5d08(3): mov %rax,%r15
5d0b(5): jmp 0xffffff0e(%rip)
5d10(5): call 0xffffc3a0(%rip)
5d15(2): xor %ebp,%ebp
5d17(6): mov $0x2,(%rax)
5d1d(5): jmp 0xfffffc43(%rip)
5d22(4): lea 0xffffffff(%r15),%rax
5d26(3): cmp %rax,%rbp
5d29(2): jnb 0x9(%rip)
5d2b(5): cmp $0x2f,0xfffffffe(%r15)
5d30(2): jnz 0xd(%rip)
5d32(3): mov %rax,%r15
5d35(5): jmp 0xfffffee4(%rip)
5d3a(3): mov %r15,%rax
5d3d(4): lea 0xffffffff(%rax),%r15
5d41(3): cmp %r15,%rbp
5d44(6): jz 0xfffffed5(%rip)
5d4a(5): cmp $0x2f,0xffffffff(%r15)
5d4f(6): jz 0xfffffeca(%rip)
5d55(2): jmp 0xffffffe5(%rip)
5d57(5): call 0xffffc359(%rip)
5d5c(5): mov $0x14,%edx
5d61(3): mov %rax,%r12
5d64(5): jmp 0xfffffc9d(%rip)
5d69(3): mov %rax,%r15
5d6c(5): jmp 0xfffffa8f(%rip)
5d71(5): call 0xffffc47f(%rip)

"close_stdout_set_file_name" :
5d80(7): mov %rdi,0x20e699(%rip)
5d87(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
5d90(7): mov %dil,0x20e681(%rip)
5d97(1): ret near (%rsp)

"close_stdout" :
5da0(1): push %rbp
5da1(1): push %rbx
5da2(4): sub $0x8,%rsp
5da6(7): mov 0x20e55b(%rip),%rdi
5dad(5): call 0x6bc3(%rip)
5db2(2): test %eax,%eax
5db4(2): jz 0x18(%rip)
5db6(5): call 0xffffc2fa(%rip)
5dbb(7): cmp $0x0,0x20e656(%rip)
5dc2(3): mov %rax,%rbx
5dc5(2): jz 0x1e(%rip)
5dc7(3): cmp $0x20,(%rax)
5dca(2): jnz 0x19(%rip)
5dcc(7): mov 0x20e56d(%rip),%rdi
5dd3(5): call 0x6b9d(%rip)
5dd8(2): test %eax,%eax
5dda(2): jnz 0x48(%rip)
5ddc(4): add $0x8,%rsp
5de0(1): pop %rbx
5de1(1): pop %rbp
5de2(1): ret near (%rsp)
5de3(7): lea 0xa191(%rip),%rsi
5dea(2): xor %edi,%edi
5dec(5): mov $0x5,%edx
5df1(5): call 0xffffc39f(%rip)
5df6(7): mov 0x20e623(%rip),%rdi
5dfd(3): mov %rax,%rbp
5e00(3): test %rdi,%rdi
5e03(2): jz 0x2a(%rip)
5e05(5): call 0x450b(%rip)
5e0a(2): mov (%rbx),%esi
5e0c(7): lea 0xa174(%rip),%rdx
5e13(3): mov %rax,%rcx
5e16(3): mov %rbp,%r8
5e19(2): xor %edi,%edi
5e1b(2): xor %eax,%eax
5e1d(5): call 0xffffc683(%rip)
5e22(6): mov 0x20e440(%rip),%edi
5e28(5): call 0xffffc2a8(%rip)
5e2d(2): mov (%rbx),%esi
5e2f(7): lea 0xae41(%rip),%rdx
5e36(3): mov %rax,%rcx
5e39(2): xor %edi,%edi
5e3b(2): xor %eax,%eax
5e3d(5): call 0xffffc663(%rip)
5e42(2): jmp 0xffffffe0(%rip)

"dir_name" :
5e50(4): sub $0x8,%rsp
5e54(5): call 0x7c(%rip)
5e59(3): test %rax,%rax
5e5c(2): jz 0x7(%rip)
5e5e(4): add $0x8,%rsp
5e62(1): ret near (%rsp)
5e63(5): call 0x51bd(%rip)

"dir_len" :
5e70(1): push %rbp
5e71(1): push %rbx
5e72(2): xor %ebp,%ebp
5e74(3): mov %rdi,%rbx
5e77(4): sub $0x8,%rsp
5e7b(3): cmp $0x2f,(%rdi)
5e7e(4): setz %bpl
5e82(5): call 0xae(%rip)
5e87(3): mov %rax,%rcx
5e8a(3): sub %rbx,%rcx
5e8d(3): cmp %rbp,%rcx
5e90(2): jbe 0x30(%rip)
5e92(4): cmp $0x2f,0xffffffff(%rax)
5e96(4): lea 0xffffffff(%rcx),%rdx
5e9a(2): jz 0x14(%rip)
5e9c(2): jmp 0x24(%rip)
5e9e(2): nop 
5ea0(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
5ea5(4): lea 0xffffffff(%rdx),%rax
5ea9(2): jnz 0xa(%rip)
5eab(3): mov %rax,%rdx
5eae(3): cmp %rdx,%rbp
5eb1(2): jnz 0xffffffef(%rip)
5eb3(4): add $0x8,%rsp
5eb7(3): mov %rdx,%rax
5eba(1): pop %rbx
5ebb(1): pop %rbp
5ebc(1): ret near (%rsp)
5ebd(3): nop (%rax)
5ec0(4): add $0x8,%rsp
5ec4(3): mov %rcx,%rdx
5ec7(3): mov %rdx,%rax
5eca(1): pop %rbx
5ecb(1): pop %rbp
5ecc(1): ret near (%rsp)

"mdir_name" :
5ed0(1): push %rbp
5ed1(1): push %rbx
5ed2(3): mov %rdi,%rbp
5ed5(4): sub $0x8,%rsp
5ed9(5): call 0xffffff97(%rip)
5ede(3): test %rax,%rax
5ee1(3): mov %rax,%rbx
5ee4(3): setz %al
5ee7(3): movzx %al,%eax
5eea(5): lea 0x1(%rbx,%rax,1),%rdi
5eef(5): call 0xffffc4d1(%rip)
5ef4(3): test %rax,%rax
5ef7(3): mov %rax,%rcx
5efa(2): jz 0x1c(%rip)
5efc(3): mov %rbx,%rdx
5eff(3): mov %rbp,%rsi
5f02(3): mov %rax,%rdi
5f05(5): call 0xffffc45b(%rip)
5f0a(3): test %rbx,%rbx
5f0d(3): mov %rax,%rcx
5f10(2): jz 0x10(%rip)
5f12(4): mov $0x0,0x0(%rcx,%rbx,1)
5f16(4): add $0x8,%rsp
5f1a(3): mov %rcx,%rax
5f1d(1): pop %rbx
5f1e(1): pop %rbp
5f1f(1): ret near (%rsp)
5f20(3): mov $0x2e,(%rax)
5f23(5): mov $0x1,%ebx
5f28(2): jmp 0xffffffea(%rip)

"last_component" :
5f30(3): movzx (%rdi),%edx
5f33(3): mov %rdi,%rax
5f36(3): cmp $0x2f,%dl
5f39(2): jnz 0x13(%rip)
5f3b(5): nop 0x0(%rax,%rax,1)
5f40(4): add $0x1,%rax
5f44(3): movzx (%rax),%edx
5f47(3): cmp $0x2f,%dl
5f4a(2): jz 0xfffffff6(%rip)
5f4c(2): test %dl,%dl
5f4e(2): jz 0x3c(%rip)
5f50(3): mov %rax,%rcx
5f53(2): xor %esi,%esi
5f55(2): jmp 0x20(%rip)
5f57(9): nop 0x0(%rax,%rax,1)
5f60(3): test %sil,%sil
5f63(2): jz 0x7(%rip)
5f65(3): mov %rcx,%rax
5f68(2): xor %esi,%esi
5f6a(4): add $0x1,%rcx
5f6e(3): movzx (%rcx),%edx
5f71(2): test %dl,%dl
5f73(2): jz 0x17(%rip)
5f75(3): cmp $0x2f,%dl
5f78(2): jnz 0xffffffe8(%rip)
5f7a(4): add $0x1,%rcx
5f7e(3): movzx (%rcx),%edx
5f81(5): mov $0x1,%esi
5f86(2): test %dl,%dl
5f88(2): jnz 0xffffffed(%rip)
5f8a(2): REP ret near (%rsp)

"base_len" :
5f90(1): push %rbx
5f91(3): mov %rdi,%rbx
5f94(5): call 0xffffc21c(%rip)
5f99(4): cmp $0x1,%rax
5f9d(2): jbe 0xd(%rip)
5f9f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
5fa4(4): lea 0xffffffff(%rax),%rdx
5fa8(2): jz 0x10(%rip)
5faa(1): pop %rbx
5fab(1): ret near (%rsp)
5fac(4): nop 0x0(%rax)
5fb0(3): mov %rax,%rdx
5fb3(5): nop 0x0(%rax,%rax,1)
5fb8(4): cmp $0x1,%rdx
5fbc(2): jz 0x14(%rip)
5fbe(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
5fc3(4): lea 0xffffffff(%rdx),%rax
5fc7(2): jz 0xffffffe9(%rip)
5fc9(3): mov %rdx,%rax
5fcc(1): pop %rbx
5fcd(1): ret near (%rsp)
5fce(2): nop 
5fd0(5): mov $0x1,%eax
5fd5(1): pop %rbx
5fd6(1): ret near (%rsp)

"record_file" :
5fe0(3): test %rdi,%rdi
5fe3(2): jz 0x7d(%rip)
5fe5(2): push %r13
5fe7(2): push %r12
5fe9(3): mov %rdi,%r13
5fec(1): push %rbp
5fed(1): push %rbx
5fee(3): mov %rsi,%r12
5ff1(5): mov $0x18,%edi
5ff6(3): mov %rdx,%rbp
5ff9(4): sub $0x8,%rsp
5ffd(5): call 0x4dd3(%rip)
6002(3): mov %r12,%rdi
6005(3): mov %rax,%rbx
6008(5): call 0x4ff8(%rip)
600d(3): mov %rax,(%rbx)
6010(4): mov 0x8(%rbp),%rax
6014(3): mov %rbx,%rsi
6017(3): mov %r13,%rdi
601a(4): mov %rax,0x8(%rbx)
601e(4): mov 0x0(%rbp),%rax
6022(4): mov %rax,0x10(%rbx)
6026(5): call 0x111a(%rip)
602b(3): test %rax,%rax
602e(2): jz 0x34(%rip)
6030(3): cmp %rax,%rbx
6033(2): jz 0x1d(%rip)
6035(4): add $0x8,%rsp
6039(3): mov %rbx,%rdi
603c(1): pop %rbx
603d(1): pop %rbp
603e(2): pop %r12
6040(2): pop %r13
6042(5): jmp 0x141e(%rip)
6047(9): nop 0x0(%rax,%rax,1)
6050(4): add $0x8,%rsp
6054(1): pop %rbx
6055(1): pop %rbp
6056(2): pop %r12
6058(2): pop %r13
605a(1): ret near (%rsp)
605b(5): nop 0x0(%rax,%rax,1)
6060(2): REP ret near (%rsp)
6062(5): call 0x4fbe(%rip)

"seen_file" :
6070(4): sub $0x28,%rsp
6074(9): mov $0x28,%rax
607d(5): mov %rax,0x18(%rsp)
6082(2): xor %eax,%eax
6084(3): test %rdi,%rdi
6087(2): jz 0x25(%rip)
6089(4): mov 0x8(%rdx),%rax
608d(4): mov %rsi,(%rsp)
6091(3): mov %rsp,%rsi
6094(5): mov %rax,0x8(%rsp)
6099(3): mov (%rdx),%rax
609c(5): mov %rax,0x10(%rsp)
60a1(5): call 0x62f(%rip)
60a6(3): test %rax,%rax
60a9(3): setnz %al
60ac(5): mov 0x18(%rsp),%rcx
60b1(9): xor $0x28,%rcx
60ba(2): jnz 0x7(%rip)
60bc(4): add $0x28,%rsp
60c0(1): ret near (%rsp)
60c1(5): call 0xffffc12f(%rip)

"next_prime" :
60d0(4): cmp $0xa,%rdi
60d4(5): mov $0xa,%eax
60d9(a): mov $0x-6148914691236517205,%r9
60e3(4): cmovnae %rax,%rdi
60e7(4): or $0x1,%rdi
60eb(4): cmp $0xffffffff,%rdi
60ef(2): jz 0x70(%rip)
60f1(7): nop 0x0(%rax)
60f8(3): mov %rdi,%rax
60fb(3): mov %rdi,%rcx
60fe(3): mul %rax,%r9,%rdx
6101(3): mov %rdx,%rax
6104(3): shr $0x1,%rax
6107(4): lea 0x0(%rax,%rax,2),%rax
610b(3): sub %rax,%rcx
610e(4): cmp $0x9,%rdi
6112(3): mov %rcx,%rax
6115(2): jbe 0x3b(%rip)
6117(3): test %rcx,%rcx
611a(2): jz 0x3b(%rip)
611c(6): mov $0x10,%r8d
6122(5): mov $0x9,%esi
6127(5): mov $0x3,%ecx
612c(2): jmp 0xd(%rip)
612e(2): nop 
6130(4): add $0x8,%r8
6134(3): test %rdx,%rdx
6137(2): jz 0x1e(%rip)
6139(4): add $0x2,%rcx
613d(2): xor %edx,%edx
613f(3): mov %rdi,%rax
6142(3): div %rcx,%rax
6145(3): add %r8,%rsi
6148(3): cmp %rdi,%rsi
614b(3): mov %rdx,%rax
614e(2): jb 0xffffffe2(%rip)
6150(3): test %rax,%rax
6153(2): jnz 0xc(%rip)
6155(4): add $0x2,%rdi
6159(4): cmp $0xffffffff,%rdi
615d(2): jnz 0xffffff9b(%rip)
615f(3): mov %rdi,%rax
6162(1): ret near (%rsp)

"raw_hasher" :
6170(3): mov %rdi,%rax
6173(2): xor %edx,%edx
6175(4): ror $0x3,%rax
6179(3): div %rsi,%rax
617c(3): mov %rdx,%rax
617f(1): ret near (%rsp)

"raw_comparator" :
6180(3): cmp %rsi,%rdi
6183(3): setz %al
6186(1): ret near (%rsp)

"safe_hasher" :
6190(1): push %rbx
6191(3): mov %rdi,%rbx
6194(3): mov %rsi,%rdi
6197(4): mov 0x10(%rbx),%rsi
619b(3): call 0x30(%rbx)
619e(4): cmp %rax,0x10(%rbx)
61a2(2): jbe 0xb(%rip)
61a4(4): shl/sal $0x4,%rax
61a8(3): add (%rbx),%rax
61ab(1): pop %rbx
61ac(1): ret near (%rsp)
61ad(5): call 0xffffbef3(%rip)

"hash_find_entry" :
61c0(2): push %r14
61c2(2): push %r13
61c4(3): mov %rdx,%r14
61c7(2): push %r12
61c9(1): push %rbp
61ca(3): mov %rdi,%r12
61cd(1): push %rbx
61ce(3): mov %rsi,%rbp
61d1(3): mov %ecx,%r13d
61d4(5): call 0xffffffbc(%rip)
61d9(3): mov %rax,(%r14)
61dc(3): mov (%rax),%rsi
61df(3): test %rsi,%rsi
61e2(6): jz 0xee(%rip)
61e8(3): cmp %rbp,%rsi
61eb(3): mov %rax,%rbx
61ee(6): jz 0x95(%rip)
61f4(3): mov %rbp,%rdi
61f7(5): call 0x38(%r12)
61fc(2): test %al,%al
61fe(6): jnz 0x82(%rip)
6204(4): mov 0x8(%rbx),%rax
6208(3): test %rax,%rax
620b(6): jz 0xc5(%rip)
6211(3): mov (%rax),%rsi
6214(3): cmp %rsi,%rbp
6217(2): jnz 0x22(%rip)
6219(2): jmp 0x33(%rip)
621b(5): nop 0x0(%rax,%rax,1)
6220(4): mov 0x8(%rbx),%rbx
6224(4): mov 0x8(%rbx),%rax
6228(3): test %rax,%rax
622b(6): jz 0xa5(%rip)
6231(3): mov (%rax),%rsi
6234(3): cmp %rbp,%rsi
6237(2): jz 0x15(%rip)
6239(3): mov %rbp,%rdi
623c(5): call 0x38(%r12)
6241(2): test %al,%al
6243(2): jz 0xffffffdd(%rip)
6245(4): mov 0x8(%rbx),%rax
6249(3): mov (%rax),%rsi
624c(3): test %r13b,%r13b
624f(2): jz 0x1f(%rip)
6251(4): mov 0x8(%rax),%rdx
6255(4): mov %rdx,0x8(%rbx)
6259(7): mov $0x0,(%rax)
6260(5): mov 0x48(%r12),%rdx
6265(4): mov %rdx,0x8(%rax)
6269(5): mov %rax,0x48(%r12)
626e(1): pop %rbx
626f(3): mov %rsi,%rax
6272(1): pop %rbp
6273(2): pop %r12
6275(2): pop %r13
6277(2): pop %r14
6279(1): ret near (%rsp)
627a(6): nop 0x0(%rax,%rax,1)
6280(3): mov (%rbx),%rsi
6283(3): test %r13b,%r13b
6286(2): jz 0xffffffe8(%rip)
6288(4): mov 0x8(%rbx),%rax
628c(3): test %rax,%rax
628f(2): jz 0x31(%rip)
6291(4): movdqu (%rax),%xmm0
6295(3): movups %xmm0,(%rbx)
6298(7): mov $0x0,(%rax)
629f(5): mov 0x48(%r12),%rdx
62a4(4): mov %rdx,0x8(%rax)
62a8(5): mov %rax,0x48(%r12)
62ad(3): mov %rsi,%rax
62b0(1): pop %rbx
62b1(1): pop %rbp
62b2(2): pop %r12
62b4(2): pop %r13
62b6(2): pop %r14
62b8(1): ret near (%rsp)
62b9(7): nop 0x0(%rax)
62c0(7): mov $0x0,(%rbx)
62c7(2): jmp 0xffffffa7(%rip)
62c9(7): nop 0x0(%rax)
62d0(2): xor %esi,%esi
62d2(1): pop %rbx
62d3(3): mov %rsi,%rax
62d6(1): pop %rbp
62d7(2): pop %r12
62d9(2): pop %r13
62db(2): pop %r14
62dd(1): ret near (%rsp)

"check_tuning.isra.0" :
62e0(3): mov (%rdi),%rdx
62e3(7): lea 0x9d16(%rip),%rcx
62ea(5): mov $0x1,%eax
62ef(3): cmp %rcx,%rdx
62f2(2): jz 0x63(%rip)
62f4(5): movss 0x8(%rdx),%xmm0
62f9(7): ucomiss 0x9d14(%rip),%xmm0
6300(2): jbe 0x50(%rip)
6302(8): movss 0x9d0e(%rip),%xmm1
630a(3): ucomiss %xmm0,%xmm1
630d(2): jbe 0x43(%rip)
630f(5): movss 0xc(%rdx),%xmm1
6314(7): ucomiss 0x9d01(%rip),%xmm1
631b(2): jbe 0x35(%rip)
631d(4): movss (%rdx),%xmm1
6321(7): ucomiss 0x9cf8(%rip),%xmm1
6328(2): jb 0x28(%rip)
632a(8): addss 0x9ce2(%rip),%xmm1
6332(5): movss 0x4(%rdx),%xmm2
6337(3): ucomiss %xmm1,%xmm2
633a(2): jbe 0x16(%rip)
633c(8): movss 0x9ce0(%rip),%xmm3
6344(3): ucomiss %xmm2,%xmm3
6347(2): jb 0x9(%rip)
6349(3): ucomiss %xmm1,%xmm0
634c(2): jnbe 0x9(%rip)
634e(2): nop 
6350(3): mov %rcx,(%rdi)
6353(2): xor %eax,%eax
6355(2): REP ret near (%rsp)

"transfer_entries" :
6360(2): push %r15
6362(2): push %r14
6364(2): push %r13
6366(2): push %r12
6368(1): push %rbp
6369(1): push %rbx
636a(4): sub $0x8,%rsp
636e(3): mov (%rsi),%r12
6371(4): cmp 0x8(%rsi),%r12
6375(6): jnb 0xe3(%rip)
637b(3): mov %rdi,%rbp
637e(3): mov %rsi,%r13
6381(3): mov %edx,%r14d
6384(4): nop 0x0(%rax)
6388(4): mov (%r12),%r15
638c(3): test %r15,%r15
638f(6): jz 0xbb(%rip)
6395(5): mov 0x8(%r12),%rbx
639a(3): test %rbx,%rbx
639d(2): jnz 0x1f(%rip)
639f(2): jmp 0x5c(%rip)
63a1(7): nop 0x0(%rax)
63a8(4): mov 0x8(%rax),%rcx
63ac(3): test %rdx,%rdx
63af(4): mov %rcx,0x8(%rbx)
63b3(4): mov %rbx,0x8(%rax)
63b7(3): mov %rdx,%rbx
63ba(2): jz 0x3d(%rip)
63bc(3): mov (%rbx),%r15
63bf(3): mov %rbp,%rdi
63c2(3): mov %r15,%rsi
63c5(5): call 0xfffffdcb(%rip)
63ca(4): cmp $0x0,(%rax)
63ce(4): mov 0x8(%rbx),%rdx
63d2(2): jnz 0xffffffd6(%rip)
63d4(3): mov %r15,(%rax)
63d7(5): add $0x1,0x18(%rbp)
63dc(3): test %rdx,%rdx
63df(7): mov $0x0,(%rbx)
63e6(4): mov 0x48(%rbp),%rax
63ea(4): mov %rax,0x8(%rbx)
63ee(4): mov %rbx,0x48(%rbp)
63f2(3): mov %rdx,%rbx
63f5(2): jnz 0xffffffc7(%rip)
63f7(4): mov (%r12),%r15
63fb(3): test %r14b,%r14b
63fe(9): mov $0x0,0x8(%r12)
6407(2): jnz 0x43(%rip)
6409(3): mov %r15,%rsi
640c(3): mov %rbp,%rdi
640f(5): call 0xfffffd81(%rip)
6414(4): cmp $0x0,(%rax)
6418(3): mov %rax,%rbx
641b(2): jz 0x55(%rip)
641d(4): mov 0x48(%rbp),%rax
6421(3): test %rax,%rax
6424(2): jz 0x5c(%rip)
6426(4): mov 0x8(%rax),%rdx
642a(4): mov %rdx,0x48(%rbp)
642e(4): mov 0x8(%rbx),%rdx
6432(3): mov %r15,(%rax)
6435(4): mov %rdx,0x8(%rax)
6439(4): mov %rax,0x8(%rbx)
643d(8): mov $0x0,(%r12)
6445(5): sub $0x1,0x18(%r13)
644a(4): add $0x10,%r12
644e(4): cmp %r12,0x8(%r13)
6452(6): jnbe 0xffffff36(%rip)
6458(4): add $0x8,%rsp
645c(5): mov $0x1,%eax
6461(1): pop %rbx
6462(1): pop %rbp
6463(2): pop %r12
6465(2): pop %r13
6467(2): pop %r14
6469(2): pop %r15
646b(1): ret near (%rsp)
646c(4): nop 0x0(%rax)
6470(3): mov %r15,(%rax)
6473(5): add $0x1,0x18(%rbp)
6478(2): jmp 0xffffffc5(%rip)
647a(6): nop 0x0(%rax,%rax,1)
6480(5): mov $0x10,%edi
6485(5): call 0xffffbf3b(%rip)
648a(3): test %rax,%rax
648d(2): jnz 0xffffffa1(%rip)
648f(4): add $0x8,%rsp
6493(2): xor %eax,%eax
6495(1): pop %rbx
6496(1): pop %rbp
6497(2): pop %r12
6499(2): pop %r13
649b(2): pop %r14
649d(2): pop %r15
649f(1): ret near (%rsp)

"hash_get_n_buckets" :
64a0(4): mov 0x10(%rdi),%rax
64a4(1): ret near (%rsp)

"hash_get_n_buckets_used" :
64b0(4): mov 0x18(%rdi),%rax
64b4(1): ret near (%rsp)

"hash_get_n_entries" :
64c0(4): mov 0x20(%rdi),%rax
64c4(1): ret near (%rsp)

"hash_get_max_bucket_length" :
64d0(3): mov (%rdi),%rsi
64d3(4): mov 0x8(%rdi),%rdi
64d7(2): xor %eax,%eax
64d9(3): cmp %rdi,%rsi
64dc(2): jnb 0x3b(%rip)
64de(2): nop 
64e0(4): cmp $0x0,(%rsi)
64e4(2): jz 0x28(%rip)
64e6(4): mov 0x8(%rsi),%rdx
64ea(5): mov $0x1,%ecx
64ef(3): test %rdx,%rdx
64f2(2): jz 0x13(%rip)
64f4(4): nop 0x0(%rax)
64f8(4): mov 0x8(%rdx),%rdx
64fc(4): add $0x1,%rcx
6500(3): test %rdx,%rdx
6503(2): jnz 0xfffffff5(%rip)
6505(3): cmp %rcx,%rax
6508(4): cmovnae %rcx,%rax
650c(4): add $0x10,%rsi
6510(3): cmp %rdi,%rsi
6513(2): jb 0xffffffcd(%rip)
6515(2): REP ret near (%rsp)
6517(2): REP ret near (%rsp)

"hash_table_ok" :
6520(3): mov (%rdi),%rcx
6523(4): mov 0x8(%rdi),%r8
6527(2): xor %edx,%edx
6529(2): xor %esi,%esi
652b(3): cmp %r8,%rcx
652e(2): jnb 0x38(%rip)
6530(4): cmp $0x0,(%rcx)
6534(2): jz 0x29(%rip)
6536(4): mov 0x8(%rcx),%rax
653a(4): add $0x1,%rsi
653e(4): add $0x1,%rdx
6542(3): test %rax,%rax
6545(2): jz 0x18(%rip)
6547(9): nop 0x0(%rax,%rax,1)
6550(4): mov 0x8(%rax),%rax
6554(4): add $0x1,%rdx
6558(3): test %rax,%rax
655b(2): jnz 0xfffffff5(%rip)
655d(4): add $0x10,%rcx
6561(3): cmp %r8,%rcx
6564(2): jb 0xffffffcc(%rip)
6566(2): xor %eax,%eax
6568(4): cmp %rsi,0x18(%rdi)
656c(2): jz 0x4(%rip)
656e(2): REP ret near (%rsp)
6570(4): cmp %rdx,0x20(%rdi)
6574(3): setz %al
6577(1): ret near (%rsp)

"hash_print_statistics" :
6580(2): push %r13
6582(2): push %r12
6584(3): mov %rsi,%r12
6587(1): push %rbp
6588(1): push %rbx
6589(2): xor %ebx,%ebx
658b(4): sub $0x8,%rsp
658f(3): mov (%rdi),%rsi
6592(4): mov 0x20(%rdi),%rcx
6596(4): mov 0x10(%rdi),%rbp
659a(4): mov 0x18(%rdi),%r13
659e(4): mov 0x8(%rdi),%rdi
65a2(3): cmp %rdi,%rsi
65a5(2): jnb 0x40(%rip)
65a7(9): nop 0x0(%rax,%rax,1)
65b0(4): cmp $0x0,(%rsi)
65b4(2): jz 0x28(%rip)
65b6(4): mov 0x8(%rsi),%rax
65ba(5): mov $0x1,%edx
65bf(3): test %rax,%rax
65c2(2): jz 0x13(%rip)
65c4(4): nop 0x0(%rax)
65c8(4): mov 0x8(%rax),%rax
65cc(4): add $0x1,%rdx
65d0(3): test %rax,%rax
65d3(2): jnz 0xfffffff5(%rip)
65d5(3): cmp %rdx,%rbx
65d8(4): cmovnae %rdx,%rbx
65dc(4): add $0x10,%rsi
65e0(3): cmp %rdi,%rsi
65e3(2): jb 0xffffffcd(%rip)
65e5(7): lea 0x99a2(%rip),%rdx
65ec(5): mov $0x1,%esi
65f1(3): mov %r12,%rdi
65f4(2): xor %eax,%eax
65f6(5): call 0xffffbf3a(%rip)
65fb(7): lea 0x99a4(%rip),%rdx
6602(2): xor %eax,%eax
6604(3): mov %rbp,%rcx
6607(5): mov $0x1,%esi
660c(3): mov %r12,%rdi
660f(5): call 0xffffbf21(%rip)
6614(3): test %r13,%r13
6617(2): js 0x69(%rip)
6619(4): pxor %xmm0,%xmm0
661d(3): test %rbp,%rbp
6620(5): cvtsi2sd %r13,%xmm0
6625(8): mulsd 0x9893(%rip),%xmm0
662d(2): js 0x7c(%rip)
662f(4): pxor %xmm1,%xmm1
6633(5): cvtsi2sd %rbp,%xmm1
6638(4): divsd %xmm1,%xmm0
663c(7): lea 0x9995(%rip),%rdx
6643(3): mov %r13,%rcx
6646(3): mov %r12,%rdi
6649(5): mov $0x1,%esi
664e(5): mov $0x1,%eax
6653(5): call 0xffffbedd(%rip)
6658(4): add $0x8,%rsp
665c(3): mov %rbx,%rcx
665f(3): mov %r12,%rdi
6662(1): pop %rbx
6663(1): pop %rbp
6664(2): pop %r12
6666(2): pop %r13
6668(7): lea 0x994f(%rip),%rdx
666f(5): mov $0x1,%esi
6674(2): xor %eax,%eax
6676(5): jmp 0xffffbeba(%rip)
667b(5): nop 0x0(%rax,%rax,1)
6680(3): mov %r13,%rax
6683(3): mov %r13,%rdx
6686(4): pxor %xmm0,%xmm0
668a(3): shr $0x1,%rax
668d(3): and $0x1,%edx
6690(3): or %rdx,%rax
6693(3): test %rbp,%rbp
6696(5): cvtsi2sd %rax,%xmm0
669b(4): addsd %xmm0,%xmm0
669f(8): mulsd 0x9819(%rip),%xmm0
66a7(2): jns 0xffffff88(%rip)
66a9(3): mov %rbp,%rax
66ac(4): pxor %xmm1,%xmm1
66b0(3): shr $0x1,%rax
66b3(3): and $0x1,%ebp
66b6(3): or %rbp,%rax
66b9(5): cvtsi2sd %rax,%xmm1
66be(4): addsd %xmm1,%xmm1
66c2(5): jmp 0xffffff76(%rip)

"hash_lookup" :
66d0(2): push %r12
66d2(1): push %rbp
66d3(3): mov %rdi,%r12
66d6(1): push %rbx
66d7(3): mov %rsi,%rbp
66da(5): call 0xfffffab6(%rip)
66df(3): mov (%rax),%rsi
66e2(3): test %rsi,%rsi
66e5(2): jz 0x28(%rip)
66e7(3): mov %rax,%rbx
66ea(2): jmp 0x9(%rip)
66ec(4): nop 0x0(%rax)
66f0(3): mov (%rbx),%rsi
66f3(3): cmp %rbp,%rsi
66f6(2): jz 0x19(%rip)
66f8(3): mov %rbp,%rdi
66fb(5): call 0x38(%r12)
6700(2): test %al,%al
6702(2): jnz 0x1e(%rip)
6704(4): mov 0x8(%rbx),%rbx
6708(3): test %rbx,%rbx
670b(2): jnz 0xffffffe5(%rip)
670d(2): xor %esi,%esi
670f(1): pop %rbx
6710(3): mov %rsi,%rax
6713(1): pop %rbp
6714(2): pop %r12
6716(1): ret near (%rsp)
6717(9): nop 0x0(%rax,%rax,1)
6720(3): mov (%rbx),%rsi
6723(1): pop %rbx
6724(1): pop %rbp
6725(3): mov %rsi,%rax
6728(2): pop %r12
672a(1): ret near (%rsp)

"hash_get_first" :
6730(5): cmp $0x0,0x20(%rdi)
6735(2): jz 0x2e(%rip)
6737(3): mov (%rdi),%rdx
673a(4): mov 0x8(%rdi),%rcx
673e(3): cmp %rcx,%rdx
6741(2): jnb 0x27(%rip)
6743(3): mov (%rdx),%rax
6746(3): test %rax,%rax
6749(2): jnz 0x1d(%rip)
674b(5): nop 0x0(%rax,%rax,1)
6750(4): add $0x10,%rdx
6754(3): cmp %rcx,%rdx
6757(2): jnb 0x11(%rip)
6759(3): mov (%rdx),%rax
675c(3): test %rax,%rax
675f(2): jz 0xfffffff1(%rip)
6761(2): REP ret near (%rsp)
6763(2): xor %eax,%eax
6765(1): ret near (%rsp)
6766(2): REP ret near (%rsp)
6768(4): sub $0x8,%rsp
676c(5): call 0xffffb934(%rip)

"hash_get_next" :
6780(1): push %rbp
6781(1): push %rbx
6782(3): mov %rdi,%rbp
6785(3): mov %rsi,%rbx
6788(4): sub $0x8,%rsp
678c(5): call 0xfffffa04(%rip)
6791(3): mov %rax,%rdx
6794(3): mov %rax,%rcx
6797(3): mov (%rdx),%rax
679a(4): mov 0x8(%rdx),%rdx
679e(3): cmp %rbx,%rax
67a1(2): jz 0x18(%rip)
67a3(5): nop 0x0(%rax,%rax,1)
67a8(3): test %rdx,%rdx
67ab(2): jz 0x13(%rip)
67ad(3): mov (%rdx),%rax
67b0(4): mov 0x8(%rdx),%rdx
67b4(3): cmp %rbx,%rax
67b7(2): jnz 0xfffffff1(%rip)
67b9(3): test %rdx,%rdx
67bc(2): jnz 0x2c(%rip)
67be(4): mov 0x8(%rbp),%rdx
67c2(2): jmp 0xe(%rip)
67c4(4): nop 0x0(%rax)
67c8(3): mov (%rcx),%rax
67cb(3): test %rax,%rax
67ce(2): jnz 0xd(%rip)
67d0(4): add $0x10,%rcx
67d4(3): cmp %rcx,%rdx
67d7(2): jnbe 0xfffffff1(%rip)
67d9(2): xor %eax,%eax
67db(4): add $0x8,%rsp
67df(1): pop %rbx
67e0(1): pop %rbp
67e1(1): ret near (%rsp)
67e2(6): nop 0x0(%rax,%rax,1)
67e8(3): mov (%rdx),%rax
67eb(4): add $0x8,%rsp
67ef(1): pop %rbx
67f0(1): pop %rbp
67f1(1): ret near (%rsp)

"hash_get_entries" :
6800(3): mov (%rdi),%r9
6803(4): cmp %r9,0x8(%rdi)
6807(2): jbe 0x5b(%rip)
6809(3): xor %r8d,%r8d
680c(3): mov (%r9),%rcx
680f(3): test %rcx,%rcx
6812(2): jz 0x3b(%rip)
6814(3): cmp %r8,%rdx
6817(2): jbe 0x40(%rip)
6819(4): mov %rcx,0x0(%rsi,%r8,8)
681d(4): mov 0x8(%r9),%rcx
6821(4): lea 0x1(%r8),%rax
6825(3): test %rcx,%rcx
6828(2): jz 0x22(%rip)
682a(6): nop 0x0(%rax,%rax,1)
6830(3): cmp %rax,%rdx
6833(2): jz 0x2d(%rip)
6835(3): mov (%rcx),%r8
6838(4): add $0x1,%rax
683c(5): mov %r8,0xfffffff8(%rsi,%rax,8)
6841(4): mov 0x8(%rcx),%rcx
6845(3): test %rcx,%rcx
6848(2): jnz 0xffffffe8(%rip)
684a(3): mov %rax,%r8
684d(4): add $0x10,%r9
6851(4): cmp %r9,0x8(%rdi)
6855(2): jnbe 0xffffffb7(%rip)
6857(3): mov %r8,%rax
685a(1): ret near (%rsp)
685b(5): nop 0x0(%rax,%rax,1)
6860(2): REP ret near (%rsp)
6862(2): xor %eax,%eax
6864(1): ret near (%rsp)

"hash_do_for_each" :
6870(2): push %r15
6872(2): push %r14
6874(2): push %r13
6876(2): push %r12
6878(1): push %rbp
6879(1): push %rbx
687a(4): sub $0x8,%rsp
687e(3): mov (%rdi),%r14
6881(4): cmp %r14,0x8(%rdi)
6885(2): jbe 0x51(%rip)
6887(3): mov %rdx,%r13
688a(3): mov %rsi,%r12
688d(3): mov %rdi,%r15
6890(2): xor %ebp,%ebp
6892(3): mov (%r14),%rdi
6895(3): test %rdi,%rdi
6898(2): jz 0x22(%rip)
689a(3): mov %r14,%rbx
689d(2): jmp 0x6(%rip)
689f(1): nop 
68a0(3): mov (%rbx),%rdi
68a3(3): mov %r13,%rsi
68a6(3): call %r12
68a9(2): test %al,%al
68ab(2): jz 0x19(%rip)
68ad(4): mov 0x8(%rbx),%rbx
68b1(4): add $0x1,%rbp
68b5(3): test %rbx,%rbx
68b8(2): jnz 0xffffffe8(%rip)
68ba(4): add $0x10,%r14
68be(4): cmp %r14,0x8(%r15)
68c2(2): jnbe 0xffffffd0(%rip)
68c4(4): add $0x8,%rsp
68c8(3): mov %rbp,%rax
68cb(1): pop %rbx
68cc(1): pop %rbp
68cd(2): pop %r12
68cf(2): pop %r13
68d1(2): pop %r14
68d3(2): pop %r15
68d5(1): ret near (%rsp)
68d6(2): xor %ebp,%ebp
68d8(2): jmp 0xffffffec(%rip)

"hash_string" :
68e0(3): movzx (%rdi),%ecx
68e3(2): xor %edx,%edx
68e5(2): test %cl,%cl
68e7(2): jz 0x26(%rip)
68e9(7): nop 0x0(%rax)
68f0(3): mov %rdx,%rax
68f3(4): add $0x1,%rdi
68f7(4): shl/sal $0x5,%rax
68fb(3): sub %rdx,%rax
68fe(2): xor %edx,%edx
6900(3): add %rcx,%rax
6903(3): movzx (%rdi),%ecx
6906(3): div %rsi,%rax
6909(2): test %cl,%cl
690b(2): jnz 0xffffffe5(%rip)
690d(3): mov %rdx,%rax
6910(1): ret near (%rsp)

"hash_reset_tuning" :
6920(a): mov $0x4575657221408423936,%rax
692a(4): mov $0x0,0x10(%rdi)
692e(3): mov %rax,(%rdi)
6931(a): mov $0x4590573145673223373,%rax
693b(4): mov %rax,0x8(%rdi)
693f(1): ret near (%rsp)

"hash_initialize" :
6940(2): push %r15
6942(2): push %r14
6944(7): lea 0xfffff825(%rip),%rax
694b(2): push %r13
694d(2): push %r12
694f(3): mov %rdx,%r12
6952(1): push %rbp
6953(1): push %rbx
6954(3): mov %rcx,%r13
6957(3): mov %rdi,%rbp
695a(5): mov $0x50,%edi
695f(3): mov %rsi,%r15
6962(4): sub $0x8,%rsp
6966(3): test %rdx,%rdx
6969(3): mov %r8,%r14
696c(4): cmove %rax,%r12
6970(7): lea 0xfffff809(%rip),%rax
6977(3): test %rcx,%rcx
697a(4): cmove %rax,%r13
697e(5): call 0xffffba42(%rip)
6983(3): test %rax,%rax
6986(3): mov %rax,%rbx
6989(6): jz 0xb1(%rip)
698f(3): test %r15,%r15
6992(4): lea 0x28(%rax),%rdi
6996(6): jz 0xba(%rip)
699c(4): mov %r15,0x28(%rax)
69a0(5): call 0xfffff940(%rip)
69a5(2): test %al,%al
69a7(6): jz 0x89(%rip)
69ad(5): cmp $0x0,0x10(%r15)
69b2(6): jz 0xfe(%rip)
69b8(3): mov %rbp,%rdi
69bb(5): call 0xfffff715(%rip)
69c0(5): mov $0x8,%edx
69c5(3): mov %rax,%rbp
69c8(2): xor %ecx,%ecx
69ca(3): mov %rdx,%rax
69cd(3): mul %rax,%rbp,%rdx
69d0(6): jo 0x11a(%rip)
69d6(3): test %rax,%rax
69d9(2): js 0x57(%rip)
69db(3): test %rcx,%rcx
69de(2): jnz 0x52(%rip)
69e0(3): test %rbp,%rbp
69e3(4): mov %rbp,0x10(%rbx)
69e7(2): jz 0x49(%rip)
69e9(5): mov $0x10,%esi
69ee(3): mov %rbp,%rdi
69f1(5): call 0xffffb92f(%rip)
69f6(3): test %rax,%rax
69f9(3): mov %rax,(%rbx)
69fc(2): jz 0x34(%rip)
69fe(4): shl/sal $0x4,%rbp
6a02(8): mov $0x0,0x18(%rbx)
6a0a(8): mov $0x0,0x20(%rbx)
6a12(3): add %rax,%rbp
6a15(4): mov %r12,0x30(%rbx)
6a19(4): mov %r13,0x38(%rbx)
6a1d(4): mov %rbp,0x8(%rbx)
6a21(4): mov %r14,0x40(%rbx)
6a25(8): mov $0x0,0x48(%rbx)
6a2d(2): jmp 0xd(%rip)
6a2f(1): nop 
6a30(3): mov %rbx,%rdi
6a33(2): xor %ebx,%ebx
6a35(5): call 0xffffb63b(%rip)
6a3a(4): add $0x8,%rsp
6a3e(3): mov %rbx,%rax
6a41(1): pop %rbx
6a42(1): pop %rbp
6a43(2): pop %r12
6a45(2): pop %r13
6a47(2): pop %r14
6a49(2): pop %r15
6a4b(1): ret near (%rsp)
6a4c(4): nop 0x0(%rax)
6a50(7): lea 0x95a9(%rip),%rax
6a57(4): mov %rax,0x28(%rbx)
6a5b(5): call 0xfffff885(%rip)
6a60(2): test %al,%al
6a62(8): movss 0x95be(%rip),%xmm1
6a6a(2): jz 0xffffffc6(%rip)
6a6c(3): test %rbp,%rbp
6a6f(2): js 0x4c(%rip)
6a71(4): pxor %xmm0,%xmm0
6a75(5): cvtsi2ss %rbp,%xmm0
6a7a(4): divss %xmm1,%xmm0
6a7e(7): ucomiss 0x95a7(%rip),%xmm0
6a85(2): jnb 0xffffffab(%rip)
6a87(7): ucomiss 0x95a2(%rip),%xmm0
6a8e(2): jb 0x52(%rip)
6a90(8): subss 0x9598(%rip),%xmm0
6a98(a): mov $0x-9223372036854775808,%rax
6aa2(5): cvttss2si %xmm0,%rbp
6aa7(3): xor %rax,%rbp
6aaa(5): jmp 0xffffff0e(%rip)
6aaf(1): nop 
6ab0(3): test %rbp,%rbp
6ab3(6): movss 0x8(%r15),%xmm1
6ab9(2): jns 0xffffffb8(%rip)
6abb(3): mov %rbp,%rax
6abe(4): pxor %xmm0,%xmm0
6ac2(3): shr $0x1,%rax
6ac5(3): and $0x1,%ebp
6ac8(3): or %rbp,%rax
6acb(5): cvtsi2ss %rax,%xmm0
6ad0(4): addss %xmm0,%xmm0
6ad4(2): jmp 0xffffffa6(%rip)
6ad6(a): nop 0x0(%rax,%rax,1)
6ae0(5): cvttss2si %xmm0,%rbp
6ae5(5): jmp 0xfffffed3(%rip)
6aea(5): mov $0x1,%ecx
6aef(5): jmp 0xfffffee7(%rip)

"hash_clear" :
6b00(2): push %r12
6b02(1): push %rbp
6b03(3): mov %rdi,%rbp
6b06(1): push %rbx
6b07(3): mov (%rdi),%r12
6b0a(4): cmp 0x8(%rdi),%r12
6b0e(2): jnb 0x6d(%rip)
6b10(5): cmp $0x0,(%r12)
6b15(2): jz 0x5c(%rip)
6b17(5): mov 0x8(%r12),%rbx
6b1c(4): mov 0x40(%rbp),%rax
6b20(3): test %rbx,%rbx
6b23(2): jz 0x32(%rip)
6b25(3): nop (%rax)
6b28(3): test %rax,%rax
6b2b(2): jz 0xb(%rip)
6b2d(3): mov (%rbx),%rdi
6b30(2): call %rax
6b32(4): mov 0x40(%rbp),%rax
6b36(4): mov 0x8(%rbx),%rdx
6b3a(4): mov 0x48(%rbp),%rcx
6b3e(7): mov $0x0,(%rbx)
6b45(3): test %rdx,%rdx
6b48(4): mov %rcx,0x8(%rbx)
6b4c(4): mov %rbx,0x48(%rbp)
6b50(3): mov %rdx,%rbx
6b53(2): jnz 0xffffffd5(%rip)
6b55(3): test %rax,%rax
6b58(2): jz 0x8(%rip)
6b5a(4): mov (%r12),%rdi
6b5e(2): call %rax
6b60(8): mov $0x0,(%r12)
6b68(9): mov $0x0,0x8(%r12)
6b71(4): add $0x10,%r12
6b75(4): cmp %r12,0x8(%rbp)
6b79(2): jnbe 0xffffff97(%rip)
6b7b(8): mov $0x0,0x18(%rbp)
6b83(8): mov $0x0,0x20(%rbp)
6b8b(1): pop %rbx
6b8c(1): pop %rbp
6b8d(2): pop %r12
6b8f(1): ret near (%rsp)

"hash_free" :
6b90(2): push %r12
6b92(1): push %rbp
6b93(3): mov %rdi,%r12
6b96(1): push %rbx
6b97(5): cmp $0x0,0x40(%rdi)
6b9c(3): mov (%rdi),%rbp
6b9f(4): mov 0x8(%rdi),%rax
6ba3(2): jz 0x50(%rip)
6ba5(5): cmp $0x0,0x20(%rdi)
6baa(2): jz 0x49(%rip)
6bac(3): cmp %rax,%rbp
6baf(2): jnb 0x7d(%rip)
6bb1(7): nop 0x0(%rax)
6bb8(4): mov 0x0(%rbp),%rdi
6bbc(3): test %rdi,%rdi
6bbf(2): jz 0x27(%rip)
6bc1(3): mov %rbp,%rbx
6bc4(2): jmp 0xf(%rip)
6bc6(a): nop 0x0(%rax,%rax,1)
6bd0(3): mov (%rbx),%rdi
6bd3(5): call 0x40(%r12)
6bd8(4): mov 0x8(%rbx),%rbx
6bdc(3): test %rbx,%rbx
6bdf(2): jnz 0xfffffff1(%rip)
6be1(5): mov 0x8(%r12),%rax
6be6(4): add $0x10,%rbp
6bea(3): cmp %rbp,%rax
6bed(2): jnbe 0xffffffcb(%rip)
6bef(4): mov (%r12),%rbp
6bf3(3): cmp %rax,%rbp
6bf6(2): jnb 0x36(%rip)
6bf8(8): nop 0x0(%rax,%rax,1)
6c00(4): mov 0x8(%rbp),%rdi
6c04(3): test %rdi,%rdi
6c07(2): jz 0x1a(%rip)
6c09(7): nop 0x0(%rax)
6c10(4): mov 0x8(%rdi),%rbx
6c14(5): call 0xffffb45c(%rip)
6c19(3): test %rbx,%rbx
6c1c(3): mov %rbx,%rdi
6c1f(2): jnz 0xfffffff1(%rip)
6c21(4): add $0x10,%rbp
6c25(5): cmp %rbp,0x8(%r12)
6c2a(2): jnbe 0xffffffd6(%rip)
6c2c(5): mov 0x48(%r12),%rdi
6c31(3): test %rdi,%rdi
6c34(2): jz 0x1d(%rip)
6c36(a): nop 0x0(%rax,%rax,1)
6c40(4): mov 0x8(%rdi),%rbx
6c44(5): call 0xffffb42c(%rip)
6c49(3): test %rbx,%rbx
6c4c(3): mov %rbx,%rdi
6c4f(2): jnz 0xfffffff1(%rip)
6c51(4): mov (%r12),%rdi
6c55(5): call 0xffffb41b(%rip)
6c5a(1): pop %rbx
6c5b(3): mov %r12,%rdi
6c5e(1): pop %rbp
6c5f(2): pop %r12
6c61(5): jmp 0xffffb40f(%rip)

"hash_rehash" :
6c70(2): push %r12
6c72(1): push %rbp
6c73(3): mov %rdi,%rbp
6c76(1): push %rbx
6c77(4): sub $0x60,%rsp
6c7b(4): mov 0x28(%rdi),%r12
6c7f(9): mov $0x28,%rax
6c88(5): mov %rax,0x58(%rsp)
6c8d(2): xor %eax,%eax
6c8f(6): cmp $0x0,0x10(%r12)
6c95(2): jnz 0x53(%rip)
6c97(3): test %rsi,%rsi
6c9a(6): js 0x17e(%rip)
6ca0(4): pxor %xmm0,%xmm0
6ca4(5): cvtsi2ss %rsi,%xmm0
6ca9(7): divss 0x8(%r12),%xmm0
6cb0(7): ucomiss 0x9375(%rip),%xmm0
6cb7(6): jnb 0x139(%rip)
6cbd(7): ucomiss 0x936c(%rip),%xmm0
6cc4(6): jb 0x17c(%rip)
6cca(8): subss 0x935e(%rip),%xmm0
6cd2(a): mov $0x-9223372036854775808,%rax
6cdc(5): cvttss2si %xmm0,%rsi
6ce1(3): xor %rax,%rsi
6ce4(4): nop 0x0(%rax)
6ce8(3): mov %rsi,%rdi
6ceb(5): call 0xfffff3e5(%rip)
6cf0(5): mov $0x8,%edx
6cf5(3): mov %rax,%rbx
6cf8(2): xor %ecx,%ecx
6cfa(3): mov %rdx,%rax
6cfd(3): mul %rax,%rbx,%rdx
6d00(6): jo 0x19f(%rip)
6d06(3): test %rax,%rax
6d09(5): mov $0x1,%eax
6d0e(4): cmovs %rax,%rcx
6d12(3): test %rbx,%rbx
6d15(6): jz 0xdb(%rip)
6d1b(3): and $0x1,%ecx
6d1e(6): jnz 0xd2(%rip)
6d24(4): cmp %rbx,0x10(%rbp)
6d28(6): jz 0x128(%rip)
6d2e(5): mov $0x10,%esi
6d33(3): mov %rbx,%rdi
6d36(5): call 0xffffb5ea(%rip)
6d3b(3): test %rax,%rax
6d3e(4): mov %rax,(%rsp)
6d42(6): jz 0xae(%rip)
6d48(5): mov %rbx,0x10(%rsp)
6d4d(4): shl/sal $0x4,%rbx
6d51(5): mov %r12,0x28(%rsp)
6d56(3): add %rax,%rbx
6d59(4): mov 0x30(%rbp),%rax
6d5d(3): mov %rsp,%r12
6d60(2): xor %edx,%edx
6d62(3): mov %rbp,%rsi
6d65(3): mov %r12,%rdi
6d68(5): mov %rbx,0x8(%rsp)
6d6d(9): mov $0x0,0x18(%rsp)
6d76(5): mov %rax,0x30(%rsp)
6d7b(4): mov 0x38(%rbp),%rax
6d7f(9): mov $0x0,0x20(%rsp)
6d88(5): mov %rax,0x38(%rsp)
6d8d(4): mov 0x40(%rbp),%rax
6d91(5): mov %rax,0x40(%rsp)
6d96(4): mov 0x48(%rbp),%rax
6d9a(5): mov %rax,0x48(%rsp)
6d9f(5): call 0xfffff5c1(%rip)
6da4(2): test %al,%al
6da6(2): mov %eax,%ebx
6da8(6): jnz 0xb8(%rip)
6dae(5): mov 0x48(%rsp),%rax
6db3(5): mov $0x1,%edx
6db8(3): mov %r12,%rsi
6dbb(3): mov %rbp,%rdi
6dbe(4): mov %rax,0x48(%rbp)
6dc2(5): call 0xfffff59e(%rip)
6dc7(2): test %al,%al
6dc9(6): jz 0xe0(%rip)
6dcf(2): xor %edx,%edx
6dd1(3): mov %r12,%rsi
6dd4(3): mov %rbp,%rdi
6dd7(5): call 0xfffff589(%rip)
6ddc(2): test %al,%al
6dde(6): jz 0xcb(%rip)
6de4(4): mov (%rsp),%rdi
6de8(5): call 0xffffb288(%rip)
6ded(2): jmp 0x5(%rip)
6def(1): nop 
6df0(2): xor %ebx,%ebx
6df2(5): mov 0x58(%rsp),%rcx
6df7(9): xor $0x28,%rcx
6e00(2): mov %ebx,%eax
6e02(6): jnz 0x98(%rip)
6e08(4): add $0x60,%rsp
6e0c(1): pop %rbx
6e0d(1): pop %rbp
6e0e(2): pop %r12
6e10(1): ret near (%rsp)
6e11(7): nop 0x0(%rax)
6e18(3): mov %rsi,%rax
6e1b(4): pxor %xmm0,%xmm0
6e1f(3): shr $0x1,%rax
6e22(3): and $0x1,%esi
6e25(3): or %rsi,%rax
6e28(5): cvtsi2ss %rax,%xmm0
6e2d(4): addss %xmm0,%xmm0
6e31(5): jmp 0xfffffe78(%rip)
6e36(a): nop 0x0(%rax,%rax,1)
6e40(5): cvttss2si %xmm0,%rsi
6e45(5): jmp 0xfffffea3(%rip)
6e4a(6): nop 0x0(%rax,%rax,1)
6e50(5): mov $0x1,%ebx
6e55(2): jmp 0xffffff9d(%rip)
6e57(9): nop 0x0(%rax,%rax,1)
6e60(4): mov 0x0(%rbp),%rdi
6e64(5): call 0xffffb20c(%rip)
6e69(4): mov (%rsp),%rax
6e6d(4): mov %rax,0x0(%rbp)
6e71(5): mov 0x8(%rsp),%rax
6e76(4): mov %rax,0x8(%rbp)
6e7a(5): mov 0x10(%rsp),%rax
6e7f(4): mov %rax,0x10(%rbp)
6e83(5): mov 0x18(%rsp),%rax
6e88(4): mov %rax,0x18(%rbp)
6e8c(5): mov 0x48(%rsp),%rax
6e91(4): mov %rax,0x48(%rbp)
6e95(5): jmp 0xffffff5d(%rip)
6e9a(5): call 0xffffb356(%rip)
6e9f(5): mov $0x1,%ecx
6ea4(5): jmp 0xfffffe62(%rip)
6ea9(5): call 0xffffb1f7(%rip)

"hash_insert_if_absent" :
6eb0(2): push %r13
6eb2(2): push %r12
6eb4(1): push %rbp
6eb5(1): push %rbx
6eb6(4): sub $0x18,%rsp
6eba(9): mov $0x28,%rax
6ec3(5): mov %rax,0x8(%rsp)
6ec8(2): xor %eax,%eax
6eca(3): test %rsi,%rsi
6ecd(6): jz 0x1c0(%rip)
6ed3(3): mov %rsp,%r12
6ed6(2): xor %ecx,%ecx
6ed8(3): mov %rdx,%r13
6edb(3): mov %r12,%rdx
6ede(3): mov %rdi,%rbx
6ee1(3): mov %rsi,%rbp
6ee4(5): call 0xfffff2dc(%rip)
6ee9(3): test %rax,%rax
6eec(3): mov %rax,%rdx
6eef(2): jz 0x31(%rip)
6ef1(2): xor %eax,%eax
6ef3(3): test %r13,%r13
6ef6(2): jz 0x6(%rip)
6ef8(4): mov %rdx,0x0(%r13)
6efc(5): mov 0x8(%rsp),%rcx
6f01(9): xor $0x28,%rcx
6f0a(6): jnz 0x225(%rip)
6f10(4): add $0x18,%rsp
6f14(1): pop %rbx
6f15(1): pop %rbp
6f16(2): pop %r12
6f18(2): pop %r13
6f1a(1): ret near (%rsp)
6f1b(5): nop 0x0(%rax,%rax,1)
6f20(4): mov 0x18(%rbx),%rax
6f24(3): test %rax,%rax
6f27(2): js 0x79(%rip)
6f29(4): pxor %xmm1,%xmm1
6f2d(4): mov 0x28(%rbx),%rdx
6f31(5): cvtsi2ss %rax,%xmm1
6f36(4): mov 0x10(%rbx),%rax
6f3a(3): test %rax,%rax
6f3d(6): js 0x8d(%rip)
6f43(4): pxor %xmm0,%xmm0
6f47(5): cvtsi2ss %rax,%xmm0
6f4c(5): mulss 0x8(%rdx),%xmm0
6f51(3): ucomiss %xmm0,%xmm1
6f54(6): jnbe 0x9c(%rip)
6f5a(4): mov (%rsp),%r12
6f5e(5): cmp $0x0,(%r12)
6f63(6): jz 0x135(%rip)
6f69(4): mov 0x48(%rbx),%rax
6f6d(3): test %rax,%rax
6f70(6): jz 0x140(%rip)
6f76(4): mov 0x8(%rax),%rdx
6f7a(4): mov %rdx,0x48(%rbx)
6f7e(5): mov 0x8(%r12),%rdx
6f83(3): mov %rbp,(%rax)
6f86(4): mov %rdx,0x8(%rax)
6f8a(5): mov %rax,0x8(%r12)
6f8f(5): mov $0x1,%eax
6f94(5): add $0x1,0x20(%rbx)
6f99(5): jmp 0xffffff63(%rip)
6f9e(2): nop 
6fa0(3): mov %rax,%rdx
6fa3(4): pxor %xmm1,%xmm1
6fa7(3): and $0x1,%eax
6faa(3): shr $0x1,%rdx
6fad(3): or %rax,%rdx
6fb0(4): mov 0x10(%rbx),%rax
6fb4(5): cvtsi2ss %rdx,%xmm1
6fb9(4): mov 0x28(%rbx),%rdx
6fbd(3): test %rax,%rax
6fc0(4): addss %xmm1,%xmm1
6fc4(6): jns 0xffffff7f(%rip)
6fca(3): mov %rax,%rcx
6fcd(4): pxor %xmm0,%xmm0
6fd1(3): shr $0x1,%rcx
6fd4(3): and $0x1,%eax
6fd7(3): or %rax,%rcx
6fda(5): cvtsi2ss %rcx,%xmm0
6fdf(4): addss %xmm0,%xmm0
6fe3(5): jmp 0xffffff69(%rip)
6fe8(8): nop 0x0(%rax,%rax,1)
6ff0(4): lea 0x28(%rbx),%rdi
6ff4(5): call 0xfffff2ec(%rip)
6ff9(4): mov 0x10(%rbx),%rax
6ffd(4): mov 0x28(%rbx),%rdx
7001(3): test %rax,%rax
7004(5): movss 0x8(%rdx),%xmm2
7009(6): js 0xc7(%rip)
700f(4): pxor %xmm0,%xmm0
7013(5): cvtsi2ss %rax,%xmm0
7018(4): mov 0x18(%rbx),%rax
701c(3): test %rax,%rax
701f(6): js 0xd1(%rip)
7025(4): pxor %xmm1,%xmm1
7029(5): cvtsi2ss %rax,%xmm1
702e(3): movaps %xmm2,%xmm3
7031(4): mulss %xmm0,%xmm3
7035(3): ucomiss %xmm3,%xmm1
7038(6): jbe 0xffffff22(%rip)
703e(4): cmp $0x0,0x10(%rdx)
7042(5): mulss 0xc(%rdx),%xmm0
7047(2): jnz 0x6(%rip)
7049(4): mulss %xmm2,%xmm0
704d(7): ucomiss 0x8fd8(%rip),%xmm0
7054(2): jnb 0x6f(%rip)
7056(7): ucomiss 0x8fd3(%rip),%xmm0
705d(6): jnb 0xb3(%rip)
7063(5): cvttss2si %xmm0,%rsi
7068(3): mov %rbx,%rdi
706b(5): call 0xfffffc05(%rip)
7070(2): test %al,%al
7072(2): jz 0x51(%rip)
7074(2): xor %ecx,%ecx
7076(3): mov %r12,%rdx
7079(3): mov %rbp,%rsi
707c(3): mov %rbx,%rdi
707f(5): call 0xfffff141(%rip)
7084(3): test %rax,%rax
7087(6): jz 0xfffffed3(%rip)
708d(5): call 0xffffb013(%rip)
7092(6): nop 0x0(%rax,%rax,1)
7098(4): mov %rbp,(%r12)
709c(5): mov $0x1,%eax
70a1(5): add $0x1,0x20(%rbx)
70a6(5): add $0x1,0x18(%rbx)
70ab(5): jmp 0xfffffe51(%rip)
70b0(5): mov $0x10,%edi
70b5(5): call 0xffffb30b(%rip)
70ba(3): test %rax,%rax
70bd(6): jnz 0xfffffec1(%rip)
70c3(5): mov $0xffffffff,%eax
70c8(5): jmp 0xfffffe34(%rip)
70cd(3): nop (%rax)
70d0(3): mov %rax,%rcx
70d3(4): pxor %xmm0,%xmm0
70d7(3): shr $0x1,%rcx
70da(3): and $0x1,%eax
70dd(3): or %rax,%rcx
70e0(5): cvtsi2ss %rcx,%xmm0
70e5(4): addss %xmm0,%xmm0
70e9(5): jmp 0xffffff2f(%rip)
70ee(2): nop 
70f0(3): mov %rax,%rcx
70f3(4): pxor %xmm1,%xmm1
70f7(3): shr $0x1,%rcx
70fa(3): and $0x1,%eax
70fd(3): or %rax,%rcx
7100(5): cvtsi2ss %rcx,%xmm1
7105(4): addss %xmm1,%xmm1
7109(5): jmp 0xffffff25(%rip)
710e(2): nop 
7110(8): subss 0x8f18(%rip),%xmm0
7118(a): mov $0x-9223372036854775808,%rax
7122(5): cvttss2si %xmm0,%rsi
7127(3): xor %rax,%rsi
712a(5): jmp 0xffffff3e(%rip)
712f(5): call 0xffffb0c1(%rip)

"hash_insert" :
7140(1): push %rbx
7141(3): mov %rsi,%rbx
7144(4): sub $0x10,%rsp
7148(3): mov %rsp,%rdx
714b(9): mov $0x28,%rax
7154(5): mov %rax,0x8(%rsp)
7159(2): xor %eax,%eax
715b(5): call 0xfffffd55(%rip)
7160(3): cmp $0xff,%eax
7163(2): jz 0x2d(%rip)
7165(2): test %eax,%eax
7167(2): jnz 0x6(%rip)
7169(4): mov (%rsp),%rbx
716d(5): mov 0x8(%rsp),%rcx
7172(9): xor $0x28,%rcx
717b(3): mov %rbx,%rax
717e(2): jnz 0x16(%rip)
7180(4): add $0x10,%rsp
7184(1): pop %rbx
7185(1): ret near (%rsp)
7186(a): nop 0x0(%rax,%rax,1)
7190(2): xor %ebx,%ebx
7192(2): jmp 0xffffffdb(%rip)
7194(5): call 0xffffb05c(%rip)

"hash_delete" :
71a0(2): push %r12
71a2(1): push %rbp
71a3(5): mov $0x1,%ecx
71a8(1): push %rbx
71a9(3): mov %rdi,%rbx
71ac(4): sub $0x10,%rsp
71b0(3): mov %rsp,%rdx
71b3(9): mov $0x28,%rax
71bc(5): mov %rax,0x8(%rsp)
71c1(2): xor %eax,%eax
71c3(5): call 0xffffeffd(%rip)
71c8(3): test %rax,%rax
71cb(3): mov %rax,%rbp
71ce(2): jz 0x11(%rip)
71d0(4): mov (%rsp),%rax
71d4(5): sub $0x1,0x20(%rbx)
71d9(4): cmp $0x0,(%rax)
71dd(2): jz 0x23(%rip)
71df(5): mov 0x8(%rsp),%rcx
71e4(9): xor $0x28,%rcx
71ed(3): mov %rbp,%rax
71f0(6): jnz 0x1ae(%rip)
71f6(4): add $0x10,%rsp
71fa(1): pop %rbx
71fb(1): pop %rbp
71fc(2): pop %r12
71fe(1): ret near (%rsp)
71ff(1): nop 
7200(4): mov 0x18(%rbx),%rax
7204(4): sub $0x1,%rax
7208(3): test %rax,%rax
720b(4): mov %rax,0x18(%rbx)
720f(6): js 0x101(%rip)
7215(4): pxor %xmm0,%xmm0
7219(5): cvtsi2ss %rax,%xmm0
721e(4): mov 0x10(%rbx),%rax
7222(4): mov 0x28(%rbx),%rdx
7226(3): test %rax,%rax
7229(6): js 0xc7(%rip)
722f(4): pxor %xmm1,%xmm1
7233(5): cvtsi2ss %rax,%xmm1
7238(4): mulss (%rdx),%xmm1
723c(3): ucomiss %xmm0,%xmm1
723f(2): jbe 0xffffffa0(%rip)
7241(4): lea 0x28(%rbx),%rdi
7245(5): call 0xfffff09b(%rip)
724a(4): mov 0x10(%rbx),%rax
724e(4): mov 0x28(%rbx),%rdx
7252(3): test %rax,%rax
7255(6): js 0x12b(%rip)
725b(4): pxor %xmm0,%xmm0
725f(5): cvtsi2ss %rax,%xmm0
7264(4): mov 0x18(%rbx),%rax
7268(3): test %rax,%rax
726b(6): js 0xf5(%rip)
7271(4): pxor %xmm1,%xmm1
7275(5): cvtsi2ss %rax,%xmm1
727a(4): movss (%rdx),%xmm2
727e(4): mulss %xmm0,%xmm2
7282(3): ucomiss %xmm1,%xmm2
7285(6): jbe 0xffffff5a(%rip)
728b(4): cmp $0x0,0x10(%rdx)
728f(5): mulss 0x4(%rdx),%xmm0
7294(6): jz 0xbc(%rip)
729a(7): ucomiss 0x8d8f(%rip),%xmm0
72a1(6): jnb 0x8f(%rip)
72a7(5): cvttss2si %xmm0,%rsi
72ac(3): mov %rbx,%rdi
72af(5): call 0xfffff9c1(%rip)
72b4(2): test %al,%al
72b6(6): jnz 0xffffff29(%rip)
72bc(4): mov 0x48(%rbx),%rdi
72c0(3): test %rdi,%rdi
72c3(2): jz 0x16(%rip)
72c5(3): nop (%rax)
72c8(4): mov 0x8(%rdi),%r12
72cc(5): call 0xffffada4(%rip)
72d1(3): test %r12,%r12
72d4(3): mov %r12,%rdi
72d7(2): jnz 0xfffffff1(%rip)
72d9(8): mov $0x0,0x48(%rbx)
72e1(5): jmp 0xfffffefe(%rip)
72e6(a): nop 0x0(%rax,%rax,1)
72f0(3): mov %rax,%rcx
72f3(4): pxor %xmm1,%xmm1
72f7(3): shr $0x1,%rcx
72fa(3): and $0x1,%eax
72fd(3): or %rax,%rcx
7300(5): cvtsi2ss %rcx,%xmm1
7305(4): addss %xmm1,%xmm1
7309(5): jmp 0xffffff2f(%rip)
730e(2): nop 
7310(3): mov %rax,%rdx
7313(4): pxor %xmm0,%xmm0
7317(3): shr $0x1,%rdx
731a(3): and $0x1,%eax
731d(3): or %rax,%rdx
7320(5): cvtsi2ss %rdx,%xmm0
7325(4): addss %xmm0,%xmm0
7329(5): jmp 0xfffffef5(%rip)
732e(2): nop 
7330(8): subss 0x8cf8(%rip),%xmm0
7338(a): mov $0x-9223372036854775808,%rax
7342(5): cvttss2si %xmm0,%rsi
7347(3): xor %rax,%rsi
734a(5): jmp 0xffffff62(%rip)
734f(1): nop 
7350(5): mulss 0x8(%rdx),%xmm0
7355(5): jmp 0xffffff45(%rip)
735a(6): nop 0x0(%rax,%rax,1)
7360(3): mov %rax,%rcx
7363(4): pxor %xmm1,%xmm1
7367(3): shr $0x1,%rcx
736a(3): and $0x1,%eax
736d(3): or %rax,%rcx
7370(5): cvtsi2ss %rcx,%xmm1
7375(4): addss %xmm1,%xmm1
7379(5): jmp 0xffffff01(%rip)
737e(2): nop 
7380(3): mov %rax,%rcx
7383(4): pxor %xmm0,%xmm0
7387(3): shr $0x1,%rcx
738a(3): and $0x1,%eax
738d(3): or %rax,%rcx
7390(5): cvtsi2ss %rcx,%xmm0
7395(4): addss %xmm0,%xmm0
7399(5): jmp 0xfffffecb(%rip)
739e(5): call 0xffffae52(%rip)

"triple_hash" :
73b0(1): push %rbp
73b1(1): push %rbx
73b2(3): mov %rdi,%rbp
73b5(3): mov %rsi,%rbx
73b8(4): sub $0x8,%rsp
73bc(3): mov (%rdi),%rdi
73bf(5): call 0x5701(%rip)
73c4(4): xor 0x8(%rbp),%rax
73c8(2): xor %edx,%edx
73ca(4): add $0x8,%rsp
73ce(3): div %rbx,%rax
73d1(1): pop %rbx
73d2(1): pop %rbp
73d3(3): mov %rdx,%rax
73d6(1): ret near (%rsp)

"triple_hash_no_name" :
73e0(4): mov 0x8(%rdi),%rax
73e4(2): xor %edx,%edx
73e6(3): div %rsi,%rax
73e9(3): mov %rdx,%rax
73ec(1): ret near (%rsp)

"triple_compare" :
73f0(2): xor %eax,%eax
73f2(4): mov 0x8(%rsi),%rdx
73f6(4): cmp %rdx,0x8(%rdi)
73fa(2): jz 0x6(%rip)
73fc(2): REP ret near (%rsp)
73fe(2): nop 
7400(4): mov 0x10(%rsi),%rcx
7404(4): cmp %rcx,0x10(%rdi)
7408(2): jnz 0xfffffff4(%rip)
740a(4): sub $0x8,%rsp
740e(3): mov (%rsi),%rsi
7411(3): mov (%rdi),%rdi
7414(5): call 0x32ec(%rip)
7419(4): add $0x8,%rsp
741d(1): ret near (%rsp)

"triple_compare_ino_str" :
7420(2): xor %eax,%eax
7422(4): mov 0x8(%rsi),%rdx
7426(4): cmp %rdx,0x8(%rdi)
742a(2): jz 0x6(%rip)
742c(2): REP ret near (%rsp)
742e(2): nop 
7430(4): mov 0x10(%rsi),%rcx
7434(4): cmp %rcx,0x10(%rdi)
7438(2): jnz 0xfffffff4(%rip)
743a(4): sub $0x8,%rsp
743e(3): mov (%rsi),%rsi
7441(3): mov (%rdi),%rdi
7444(5): call 0xffffaefc(%rip)
7449(2): test %eax,%eax
744b(3): setz %al
744e(4): add $0x8,%rsp
7452(1): ret near (%rsp)

"triple_free" :
7460(1): push %rbx
7461(3): mov %rdi,%rbx
7464(3): mov (%rdi),%rdi
7467(5): call 0xffffac09(%rip)
746c(3): mov %rbx,%rdi
746f(1): pop %rbx
7470(5): jmp 0xffffac00(%rip)

"adjust_value.part.0" :
7480(6): fld 0x8baa(%rip),%st0
7486(4): fld 0x8(%rsp),%st0
748a(2): fucomi %st1,%st0
748c(2): jnb 0x74(%rip)
748e(2): fstp %st0,%st1
7490(4): fstcw 0xfffffff6(%rsp)
7494(5): movzx 0xfffffff6(%rsp),%eax
7499(3): or $0xc,%ah
749c(5): mov %ax,0xfffffff4(%rsp)
74a1(2): fld %st0,%st0
74a3(4): fldcw 0xfffffff4(%rsp)
74a7(4): fistp %st0,0xffffffe8(%rsp)
74ab(4): fldcw 0xfffffff6(%rsp)
74af(5): mov 0xffffffe8(%rsp),%rax
74b4(5): mov %rax,0xffffffe0(%rsp)
74b9(3): test %rax,%rax
74bc(4): fild 0xffffffe0(%rsp),%st0
74c0(2): jns 0x8(%rip)
74c2(6): fadd 0x8b64(%rip)
74c8(2): test %edi,%edi
74ca(2): jnz 0x2e(%rip)
74cc(2): fxch %st1,%st0
74ce(2): fucomip %st1,%st0
74d0(2): jp 0x8(%rip)
74d2(2): jz 0x28(%rip)
74d4(2): fstp %st0,%st0
74d6(2): jmp 0xa(%rip)
74d8(2): fstp %st0,%st0
74da(6): nop 0x0(%rax,%rax,1)
74e0(4): add $0x1,%rax
74e4(5): mov %rax,0xffffffe0(%rsp)
74e9(3): test %rax,%rax
74ec(4): fild 0xffffffe0(%rsp),%st0
74f0(2): js 0x50(%rip)
74f2(2): jmp 0x8(%rip)
74f4(4): nop 0x0(%rax)
74f8(2): fstp %st0,%st1
74fa(2): REP ret near (%rsp)
74fc(4): nop 0x0(%rax)
7500(4): fstcw 0xfffffff6(%rsp)
7504(5): movzx 0xfffffff6(%rsp),%eax
7509(2): fsubr %st0,%st1
750b(2): fxch %st1,%st0
750d(a): mov $0x-9223372036854775808,%rdx
7517(3): or $0xc,%ah
751a(5): mov %ax,0xfffffff4(%rsp)
751f(4): fldcw 0xfffffff4(%rsp)
7523(4): fistp %st0,0xffffffe8(%rsp)
7527(4): fldcw 0xfffffff6(%rsp)
752b(5): mov 0xffffffe8(%rsp),%rax
7530(3): xor %rdx,%rax
7533(5): jmp 0xffffff81(%rip)
7538(8): nop 0x0(%rax,%rax,1)
7540(6): fadd 0x8ae6(%rip)
7546(1): ret near (%rsp)

"human_readable" :
7550(2): push %r15
7552(2): push %r14
7554(2): mov %edx,%eax
7556(2): push %r13
7558(2): push %r12
755a(3): mov %edx,%r15d
755d(1): push %rbp
755e(1): push %rbx
755f(3): and $0x20,%eax
7562(4): and $0x3,%r15d
7566(3): mov %edx,%r12d
7569(3): mov %rdi,%rbx
756c(7): sub $0x98,%rsp
7573(5): mov %rcx,0x18(%rsp)
7578(4): mov %eax,0x30(%rsp)
757c(9): mov $0x28,%rcx
7585(8): mov %rcx,0x88(%rsp)
758d(2): xor %ecx,%ecx
758f(3): cmp $0x1,%eax
7592(4): mov %rsi,(%rsp)
7596(5): mov %r8,0x10(%rsp)
759b(2): sbb %eax,%eax
759d(3): and $0xe8,%eax
75a0(5): add $0x400,%eax
75a5(4): mov %eax,0x34(%rsp)
75a9(5): call 0xffffab77(%rip)
75ae(3): mov (%rax),%r14
75b1(3): mov %rax,%r13
75b4(3): mov %r14,%rdi
75b7(5): call 0xffffabf9(%rip)
75bc(4): mov 0x10(%r13),%rcx
75c0(4): mov 0x8(%r13),%r13
75c4(3): mov %rax,%rbp
75c7(4): sub $0x1,%rax
75cb(5): mov $0x1,%edx
75d0(4): cmp $0x10,%rax
75d4(7): lea 0x8931(%rip),%rax
75db(3): mov %r13,%rdi
75de(4): cmovnb %rdx,%rbp
75e2(5): mov %rcx,0x38(%rsp)
75e7(4): cmovnb %rax,%r14
75eb(5): call 0xffffabc5(%rip)
75f0(4): cmp $0x11,%rax
75f4(7): lea 0x9006(%rip),%rax
75fb(5): mov 0x10(%rsp),%rdi
7600(5): mov 0x18(%rsp),%rcx
7605(4): cmovnb %rax,%r13
7609(4): mov (%rsp),%rax
760d(6): add $0x287,%rax
7613(3): cmp %rcx,%rdi
7616(5): mov %rax,0x8(%rsp)
761b(6): jnbe 0x14d(%rip)
7621(2): xor %edx,%edx
7623(3): mov %rcx,%rax
7626(3): div %rdi,%rax
7629(3): test %rdx,%rdx
762c(3): mov %rax,%rdi
762f(6): jz 0x361(%rip)
7635(5): mov %rcx,0x18(%rsp)
763a(3): test %rcx,%rcx
763d(4): fild 0x18(%rsp),%st0
7641(2): jns 0x8(%rip)
7643(6): fadd 0x89e3(%rip)
7649(5): mov 0x10(%rsp),%rax
764e(5): mov %rax,0x18(%rsp)
7653(3): test %rax,%rax
7656(4): fild 0x18(%rsp),%st0
765a(2): jns 0x8(%rip)
765c(6): fadd 0x89ca(%rip)
7662(2): fdivp %st0,%st1
7664(5): mov %rbx,0x18(%rsp)
7669(3): test %rbx,%rbx
766c(4): fild 0x18(%rsp),%st0
7670(2): jns 0x8(%rip)
7672(6): fadd 0x89b4(%rip)
7678(4): test $0x10,%r12b
767c(2): fmulp %st0,%st1
767e(6): jz 0x1ca(%rip)
7684(4): fild 0x34(%rsp),%st0
7688(2): xor %ebx,%ebx
768a(2): fld %st0,%st0
768c(2): jmp 0x8(%rip)
768e(2): nop 
7690(2): fstp %st0,%st1
7692(2): fxch %st2,%st0
7694(2): fld %st0,%st0
7696(3): add $0x1,%ebx
7699(2): fmul %st2
769b(2): fxch %st3,%st0
769d(2): fucomi %st3,%st0
769f(2): jb 0x11(%rip)
76a1(3): cmp $0x8,%ebx
76a4(2): jnz 0xffffffec(%rip)
76a6(2): fstp %st0,%st2
76a8(2): fstp %st0,%st2
76aa(2): jmp 0xa(%rip)
76ac(4): nop 0x0(%rax)
76b0(2): fstp %st0,%st2
76b2(2): fstp %st0,%st2
76b4(4): mov 0x30(%rsp),%ecx
76b8(4): add $0x1,%rbp
76bc(2): xor %eax,%eax
76be(2): fdivrp %st0,%st1
76c0(2): test %ecx,%ecx
76c2(3): setz %al
76c5(4): cmp $0x1,%r15d
76c9(5): lea 0x1(%rbp,%rax,1),%rax
76ce(5): mov %rax,0x18(%rsp)
76d3(6): jz 0x56d(%rip)
76d9(6): fld 0x89a1(%rip),%st0
76df(2): fucomip %st1,%st0
76e1(6): jnbe 0x3d7(%rip)
76e7(2): fld %st0,%st0
76e9(4): fstp %st0,0x20(%rsp)
76ed(4): sub $0x10,%rsp
76f1(7): lea 0x8942(%rip),%rcx
76f8(5): mov $0x1,%esi
76fd(7): mov $0xffffffff,%rdx
7704(2): xor %eax,%eax
7706(5): mov 0x10(%rsp),%r14
770b(3): mov %r14,%rdi
770e(3): fstp %st0,(%rsp)
7711(5): call 0xffffae8f(%rip)
7716(3): mov %r14,%rdi
7719(5): call 0xffffaa97(%rip)
771e(1): pop %rcx
771f(1): pop %rsi
7720(5): cmp 0x18(%rsp),%rax
7725(3): mov %rax,%r14
7728(4): fld 0x20(%rsp),%st0
772c(6): jnbe 0x5ac(%rip)
7732(4): test $0x8,%r12b
7736(6): jz 0x16a(%rip)
773c(4): mov (%rsp),%rax
7740(6): cmp $0x30,0xffffffff(%rax,%r14,1)
7746(6): jnz 0x162(%rip)
774c(6): fld 0x8922(%rip),%st0
7752(4): cmp $0x1,%r15d
7756(2): fmul %st0,%st1
7758(6): jnz 0x588(%rip)
775e(5): jmp 0x535(%rip)
7763(5): nop 0x0(%rax,%rax,1)
7768(3): test %rcx,%rcx
776b(6): jz 0xfffffeca(%rip)
7771(5): mov 0x10(%rsp),%rax
7776(2): xor %edx,%edx
7778(3): div %rcx,%rax
777b(3): test %rdx,%rdx
777e(3): mov %rax,%r8
7781(6): jnz 0xfffffeb4(%rip)
7787(3): mov %rbx,%rax
778a(2): xor %edx,%edx
778c(3): div %r8,%rax
778f(3): mov %rax,%rbx
7792(4): lea 0x0(%rdx,%rdx,4),%rax
7796(2): xor %edx,%edx
7798(3): mov %rbx,%rsi
779b(3): add %rax,%rax
779e(3): div %r8,%rax
77a1(3): add %rdx,%rdx
77a4(3): mov %eax,%r9d
77a7(3): cmp %rdx,%r8
77aa(6): jbe 0x58e(%rip)
77b0(2): xor %edi,%edi
77b2(3): test %rdx,%rdx
77b5(4): setnz %dil
77b9(3): mov %r12d,%ecx
77bc(5): mov 0x8(%rsp),%r8
77c1(5): mov $0xffffffff,%ebx
77c6(3): and $0x10,%ecx
77c9(6): jz 0x3c7(%rip)
77cf(5): mov 0x34(%rsp),%r8d
77d4(3): cmp %rsi,%r8
77d7(3): mov %r8,%r11
77da(6): jnbe 0x576(%rip)
77e0(2): xor %ebx,%ebx
77e2(2): jmp 0x25(%rip)
77e4(4): nop 0x0(%rax)
77e8(2): test %edi,%edi
77ea(4): setnz %dil
77ee(4): movzx %dil,%edi
77f2(3): add $0x1,%ebx
77f5(3): cmp %r10,%r8
77f8(6): jnbe 0x315(%rip)
77fe(3): cmp $0x8,%ebx
7801(6): jz 0x5a7(%rip)
7807(3): mov %rsi,%rax
780a(2): xor %edx,%edx
780c(2): mov %edi,%esi
780e(3): div %r8,%rax
7811(2): sar $0x1,%esi
7813(3): mov %rax,%r10
7816(3): lea 0x0(%rdx,%rdx,4),%eax
7819(2): xor %edx,%edx
781b(4): lea 0x0(%r9,%rax,2),%eax
781f(3): div %r11d,%eax
7822(3): lea 0x0(%rsi,%rdx,2),%edx
7825(3): mov %eax,%r9d
7828(3): mov %r10,%rsi
782b(2): add %edx,%edi
782d(3): cmp %edx,%r11d
7830(2): jnbe 0xffffffb8(%rip)
7832(3): cmp %edi,%r11d
7835(4): setb %dil
7839(4): movzx %dil,%edi
783d(3): add $0x2,%edi
7840(2): jmp 0xffffffb2(%rip)
7842(6): nop 0x0(%rax,%rax,1)
7848(4): cmp $0x1,%r15d
784c(2): jz 0x10(%rip)
784e(6): fld 0x882c(%rip),%st0
7854(2): fucomip %st1,%st0
7856(6): jnbe 0x28a(%rip)
785c(4): sub $0x10,%rsp
7860(7): lea 0x87cd(%rip),%rcx
7867(5): mov $0x1,%esi
786c(5): mov 0x10(%rsp),%rbx
7871(7): mov $0xffffffff,%rdx
7878(2): xor %eax,%eax
787a(3): fstp %st0,(%rsp)
787d(2): xor %ebp,%ebp
787f(3): mov %rbx,%rdi
7882(5): call 0xffffad1e(%rip)
7887(3): mov %rbx,%rdi
788a(5): mov $0xffffffff,%ebx
788f(5): call 0xffffa921(%rip)
7894(1): pop %rsi
7895(1): pop %rdi
7896(3): mov %rax,%r14
7899(2): jmp 0x17(%rip)
789b(5): nop 0x0(%rax,%rax,1)
78a0(2): fstp %st0,%st0
78a2(2): jmp 0xe(%rip)
78a4(4): nop 0x0(%rax)
78a8(2): fstp %st0,%st0
78aa(6): nop 0x0(%rax,%rax,1)
78b0(5): mov 0x8(%rsp),%r15
78b5(4): mov (%rsp),%rsi
78b9(3): mov %r14,%rdx
78bc(3): sub %r14,%r15
78bf(3): sub %rbp,%r14
78c2(3): mov %r15,%rdi
78c5(5): call 0xffffabcb(%rip)
78ca(3): mov %r14,%r8
78cd(3): add %r15,%r8
78d0(4): test $0x4,%r12b
78d4(6): jnz 0xe4(%rip)
78da(4): test $0x80,%r12b
78de(2): jz 0x79(%rip)
78e0(3): cmp $0xff,%ebx
78e3(6): jz 0x31d(%rip)
78e9(3): mov %r12d,%eax
78ec(5): and $0x100,%eax
78f1(2): mov %eax,%ecx
78f3(2): or %ebx,%ecx
78f5(2): jz 0x62(%rip)
78f7(4): and $0x40,%r12d
78fb(6): jnz 0x19d(%rip)
7901(2): test %ebx,%ebx
7903(6): jz 0x633(%rip)
7909(3): cmp $0x1,%ebx
790c(2): jnz 0x10(%rip)
790e(5): mov 0x30(%rsp),%r9d
7913(3): test %r9d,%r9d
7916(6): jz 0x44a(%rip)
791c(7): lea 0x8745(%rip),%rcx
7923(3): movsxd %ebx,%rbx
7926(5): mov 0x8(%rsp),%rdi
792b(2): test %eax,%eax
792d(4): movzx 0x0(%rcx,%rbx,1),%ecx
7931(4): lea 0x1(%rdi),%rdx
7935(2): mov %cl,(%rdi)
7937(6): jz 0x43d(%rip)
793d(5): mov 0x30(%rsp),%r8d
7942(3): test %r8d,%r8d
7945(6): jnz 0x1bb(%rip)
794b(4): lea 0x1(%rdx),%rax
794f(3): mov $0x42,(%rdx)
7952(5): mov %rax,0x8(%rsp)
7957(5): mov 0x8(%rsp),%rax
795c(8): mov 0x88(%rsp),%rcx
7964(9): xor $0x28,%rcx
796d(3): mov $0x0,(%rax)
7970(3): mov %r15,%rax
7973(6): jnz 0x598(%rip)
7979(7): add $0x98,%rsp
7980(1): pop %rbx
7981(1): pop %rbp
7982(2): pop %r12
7984(2): pop %r13
7986(2): pop %r14
7988(2): pop %r15
798a(1): ret near (%rsp)
798b(5): nop 0x0(%rax,%rax,1)
7990(3): mov %rbx,%rsi
7993(2): xor %edx,%edx
7995(4): imul %rax,%rsi
7999(3): mov %rsi,%rax
799c(3): div %rdi,%rax
799f(3): cmp %rbx,%rax
79a2(6): jnz 0xfffffc93(%rip)
79a8(2): xor %edi,%edi
79aa(3): xor %r9d,%r9d
79ad(5): jmp 0xfffffe0c(%rip)
79b2(6): nop 0x0(%rax,%rax,1)
79b8(3): mov %r8,%r14
79bb(3): mov %r13,%rdi
79be(5): mov %r8,0x48(%rsp)
79c3(3): sub %r15,%r14
79c6(7): mov $0xffffffff,%rbp
79cd(5): call 0xffffa7e3(%rip)
79d2(5): lea 0x50(%rsp),%rdi
79d7(5): mov $0x29,%ecx
79dc(3): mov %r14,%rdx
79df(3): mov %r15,%rsi
79e2(5): mov %rax,0x40(%rsp)
79e7(5): mov %rdi,0x18(%rsp)
79ec(5): call 0xffffa964(%rip)
79f1(3): mov %r12d,%ecx
79f4(4): mov %ebx,0x20(%rsp)
79f8(3): mov %r14,%r12
79fb(3): mov %r13,%rbx
79fe(5): mov 0x48(%rsp),%r8
7a03(5): mov 0x38(%rsp),%r15
7a08(5): mov 0x40(%rsp),%r13
7a0d(3): mov %ecx,%r14d
7a10(2): jmp 0x42(%rip)
7a12(6): nop 0x0(%rax,%rax,1)
7a18(5): mov 0x18(%rsp),%rax
7a1d(3): sub %rbp,%r12
7a20(3): sub %rbp,%r8
7a23(3): mov %r8,%rdi
7a26(3): mov %rbp,%rdx
7a29(4): lea 0x0(%rax,%r12,1),%rsi
7a2d(5): call 0xffffa933(%rip)
7a32(3): test %r12,%r12
7a35(3): mov %rax,%r8
7a38(6): jz 0x510(%rip)
7a3e(3): sub %r13,%r8
7a41(3): mov %r13,%rdx
7a44(3): mov %rbx,%rsi
7a47(3): mov %r8,%rdi
7a4a(5): call 0xffffa916(%rip)
7a4f(3): mov %rax,%r8
7a52(4): movzx (%r15),%eax
7a56(2): test %al,%al
7a58(2): jz 0xf(%rip)
7a5a(2): cmp $0x7f,%al
7a5c(3): movzx %al,%ebp
7a5f(4): cmovnb %r12,%rbp
7a63(4): add $0x1,%r15
7a67(3): cmp %r12,%rbp
7a6a(2): jbe 0xffffffae(%rip)
7a6c(3): mov %r14d,%eax
7a6f(3): mov %r8,%r15
7a72(3): mov %r12,%r14
7a75(5): mov 0x18(%rsp),%rsi
7a7a(3): sub %r14,%r15
7a7d(3): mov %r14,%rdx
7a80(3): mov %r15,%rdi
7a83(4): mov 0x20(%rsp),%ebx
7a87(3): mov %eax,%r12d
7a8a(5): call 0xffffa8d6(%rip)
7a8f(5): jmp 0xfffffe4b(%rip)
7a94(4): nop 0x0(%rax)
7a98(4): mov (%rsp),%rcx
7a9c(7): lea 0x288(%rcx),%rdi
7aa3(7): mov $0x20,0x287(%rcx)
7aaa(5): mov %rdi,0x8(%rsp)
7aaf(5): jmp 0xfffffe52(%rip)
7ab4(4): nop 0x0(%rax)
7ab8(4): sub $0x10,%rsp
7abc(3): mov %r15d,%edi
7abf(2): fld %st0,%st0
7ac1(3): fstp %st0,(%rsp)
7ac4(4): fstp %st0,0x30(%rsp)
7ac8(5): call 0xfffff9b8(%rip)
7acd(1): pop %rax
7ace(1): pop %rdx
7acf(4): fld 0x20(%rsp),%st0
7ad3(5): jmp 0xfffffc16(%rip)
7ad8(8): nop 0x0(%rax,%rax,1)
7ae0(4): sub $0x10,%rsp
7ae4(3): mov %r15d,%edi
7ae7(3): fstp %st0,(%rsp)
7aea(5): call 0xfffff996(%rip)
7aef(2): pop %r8
7af1(2): pop %r9
7af3(5): jmp 0xfffffd69(%rip)
7af8(8): nop 0x0(%rax,%rax,1)
7b00(4): lea 0x2(%rdi),%rdx
7b04(4): mov $0x69,0x1(%rdi)
7b08(5): jmp 0xfffffe43(%rip)
7b0d(4): cmp $0x9,%r10
7b11(6): jnbe 0x297(%rip)
7b17(4): cmp $0x1,%r15d
7b1b(6): jz 0x2b7(%rip)
7b21(3): test %r15d,%r15d
7b24(3): setz %dl
7b27(2): test %edi,%edi
7b29(4): setnle %r8b
7b2d(3): and %r8d,%edx
7b30(2): test %dl,%dl
7b32(6): jz 0x287(%rip)
7b38(4): lea 0x1(%rax),%r9d
7b3c(4): cmp $0xa,%r9d
7b40(6): jz 0x301(%rip)
7b46(4): add $0x30,%r9d
7b4a(4): mov (%rsp),%rax
7b4e(7): lea 0x286(%rax),%r8
7b55(7): mov %r9b,0x286(%rax)
7b5c(2): mov %ebp,%eax
7b5e(3): sub %rbp,%r8
7b61(3): cmp $0x8,%ebp
7b64(6): jnb 0x28d(%rip)
7b6a(4): test $0x4,%bpl
7b6e(6): jnz 0x388(%rip)
7b74(2): test %eax,%eax
7b76(2): jz 0x11(%rip)
7b78(4): movzx (%r14),%edx
7b7c(2): test $0x2,%al
7b7e(3): mov %dl,(%r8)
7b81(6): jnz 0x38f(%rip)
7b87(2): xor %edi,%edi
7b89(3): xor %r9d,%r9d
7b8c(4): nop 0x0(%rax)
7b90(4): cmp $0x1,%r15d
7b94(6): jz 0x17c(%rip)
7b9a(3): test %r15d,%r15d
7b9d(2): jnz 0x23(%rip)
7b9f(3): add %r9d,%edi
7ba2(2): test %edi,%edi
7ba4(2): jle 0x1c(%rip)
7ba6(4): add $0x1,%rsi
7baa(2): test %ecx,%ecx
7bac(2): jz 0x14(%rip)
7bae(4): mov 0x34(%rsp),%eax
7bb2(3): cmp %rsi,%rax
7bb5(6): jz 0x1cb(%rip)
7bbb(5): nop 0x0(%rax,%rax,1)
7bc0(3): mov %r8,%r15
7bc3(a): mov $0x-3689348814741910323,%rcx
7bcd(3): nop (%rax)
7bd0(3): mov %rsi,%rax
7bd3(4): sub $0x1,%r15
7bd7(3): mul %rax,%rcx,%rdx
7bda(4): shr $0x3,%rdx
7bde(4): lea 0x0(%rdx,%rdx,4),%rax
7be2(3): add %rax,%rax
7be5(3): sub %rax,%rsi
7be8(3): add $0x30,%esi
7beb(3): test %rdx,%rdx
7bee(3): mov %sil,(%r15)
7bf1(3): mov %rdx,%rsi
7bf4(2): jnz 0xffffffdc(%rip)
7bf6(5): jmp 0xfffffcda(%rip)
7bfb(5): nop 0x0(%rax,%rax,1)
7c00(5): mov 0x10(%rsp),%rcx
7c05(4): cmp $0x1,%rcx
7c09(6): jbe 0x1a9(%rip)
7c0f(4): mov 0x34(%rsp),%edx
7c13(5): mov $0x1,%ebx
7c18(5): mov $0x1,%eax
7c1d(4): imul %rdx,%rax
7c21(3): cmp %rax,%rcx
7c24(6): jbe 0xfffffcc5(%rip)
7c2a(3): add $0x1,%ebx
7c2d(3): cmp $0x8,%ebx
7c30(2): jnz 0xffffffed(%rip)
7c32(5): jmp 0xfffffcb7(%rip)
7c37(9): nop 0x0(%rax,%rax,1)
7c40(4): sub $0x10,%rsp
7c44(7): lea 0x83ef(%rip),%rcx
7c4b(7): mov $0xffffffff,%rdx
7c52(2): fld %st0,%st0
7c54(3): fstp %st0,(%rsp)
7c57(5): mov 0x10(%rsp),%r14
7c5c(5): mov $0x1,%esi
7c61(2): xor %eax,%eax
7c63(3): mov %r14,%rdi
7c66(4): fstp %st0,0x30(%rsp)
7c6a(5): call 0xffffa936(%rip)
7c6f(3): mov %r14,%rdi
7c72(5): call 0xffffa53e(%rip)
7c77(3): mov %rax,%r14
7c7a(1): pop %rax
7c7b(1): pop %rdx
7c7c(5): cmp 0x18(%rsp),%r14
7c81(4): fld 0x20(%rsp),%st0
7c85(6): jbe 0xfffffaad(%rip)
7c8b(6): fld 0x83e3(%rip),%st0
7c91(2): fmul %st0,%st1
7c93(2): fdivp %st0,%st1
7c95(4): sub $0x10,%rsp
7c99(7): lea 0x8394(%rip),%rcx
7ca0(5): mov 0x10(%rsp),%r14
7ca5(7): mov $0xffffffff,%rdx
7cac(5): mov $0x1,%esi
7cb1(2): xor %eax,%eax
7cb3(2): xor %ebp,%ebp
7cb5(3): mov %r14,%rdi
7cb8(3): fstp %st0,(%rsp)
7cbb(5): call 0xffffa8e5(%rip)
7cc0(3): mov %r14,%rdi
7cc3(5): call 0xffffa4ed(%rip)
7cc8(2): pop %r10
7cca(3): mov %rax,%r14
7ccd(2): pop %r11
7ccf(5): jmp 0xfffffbe1(%rip)
7cd4(4): nop 0x0(%rax)
7cd8(6): fld 0x8396(%rip),%st0
7cde(2): fmul %st0,%st1
7ce0(6): fld 0x839a(%rip),%st0
7ce6(2): fucomip %st2,%st0
7ce8(2): jbe 0xffffffab(%rip)
7cea(4): fstp %st0,0x18(%rsp)
7cee(4): sub $0x10,%rsp
7cf2(3): mov %r15d,%edi
7cf5(3): fstp %st0,(%rsp)
7cf8(5): call 0xfffff788(%rip)
7cfd(1): pop %rbp
7cfe(2): pop %r14
7d00(4): fld 0x18(%rsp),%st0
7d04(2): jmp 0xffffff8f(%rip)
7d06(a): nop 0x0(%rax,%rax,1)
7d10(3): mov %rsi,%rax
7d13(3): movsxd %edi,%rdi
7d16(3): and $0x1,%eax
7d19(3): add %rdi,%rax
7d1c(3): setnz %al
7d1f(3): movzx %al,%eax
7d22(3): add %eax,%r9d
7d25(4): cmp $0x5,%r9d
7d29(6): jnle 0xfffffe7d(%rip)
7d2f(5): jmp 0xfffffe91(%rip)
7d34(4): nop 0x0(%rax)
7d38(4): setb %dil
7d3c(4): movzx %dil,%edi
7d40(3): add $0x2,%edi
7d43(5): jmp 0xfffffa76(%rip)
7d48(8): nop 0x0(%rax,%rax,1)
7d50(5): mov 0x8(%rsp),%r8
7d55(2): xor %ebx,%ebx
7d57(5): jmp 0xfffffe39(%rip)
7d5c(4): nop 0x0(%rax)
7d60(5): mov 0x8(%rsp),%rbx
7d65(2): test %eax,%eax
7d67(4): lea 0x1(%rbx),%rdx
7d6b(3): mov $0x6b,(%rbx)
7d6e(6): jnz 0xfffffbdd(%rip)
7d74(5): mov %rdx,0x8(%rsp)
7d79(5): jmp 0xfffffbde(%rip)
7d7e(2): nop 
7d80(3): cmp $0x8,%ebx
7d83(6): jz 0xfffffe3d(%rip)
7d89(3): add $0x1,%ebx
7d8c(4): test $0x8,%r12b
7d90(6): jz 0xc2(%rip)
7d96(4): lea 0xffffffff(%r8),%r15
7d9a(5): mov $0x31,0xffffffff(%r8)
7d9f(5): jmp 0xfffffb31(%rip)
7da4(4): nop 0x0(%rax)
7da8(5): mov 0x8(%rsp),%r8
7dad(5): jmp 0xfffffde3(%rip)
7db2(2): xor %ebx,%ebx
7db4(5): jmp 0xfffffb35(%rip)
7db9(2): test %eax,%eax
7dbb(6): jnz 0xfffffd8b(%rip)
7dc1(4): test $0x8,%r12b
7dc5(2): jnz 0x1f(%rip)
7dc7(6): mov $0x30,%r9d
7dcd(5): jmp 0xfffffd7d(%rip)
7dd2(2): mov %eax,%edx
7dd4(3): and $0x1,%edx
7dd7(2): add %edi,%edx
7dd9(3): cmp $0x2,%edx
7ddc(3): setnle %dl
7ddf(5): jmp 0xfffffd51(%rip)
7de4(5): mov 0x8(%rsp),%r8
7de9(3): xor %r9d,%r9d
7dec(5): jmp 0xfffffda4(%rip)
7df1(3): mov (%r14),%rax
7df4(3): mov %r14,%r9
7df7(3): mov %rax,(%r8)
7dfa(2): mov %ebp,%eax
7dfc(5): mov 0xfffffff8(%r14,%rax,1),%rdx
7e01(5): mov %rdx,0xfffffff8(%r8,%rax,1)
7e06(4): lea 0x8(%r8),%rdx
7e0a(3): mov %r8,%rax
7e0d(4): and $0xfffffff8,%rdx
7e11(3): sub %rdx,%rax
7e14(3): sub %rax,%r9
7e17(2): add %ebp,%eax
7e19(3): and $0xf8,%eax
7e1c(3): cmp $0x8,%eax
7e1f(6): jb 0xfffffd68(%rip)
7e25(3): and $0xf8,%eax
7e28(2): xor %edi,%edi
7e2a(3): mov %edi,%r10d
7e2d(3): add $0x8,%edi
7e30(4): mov 0x0(%r9,%r10,1),%r11
7e34(2): cmp %eax,%edi
7e36(4): mov %r11,0x0(%rdx,%r10,1)
7e3a(2): jb 0xfffffff0(%rip)
7e3c(5): jmp 0xfffffd4b(%rip)
7e41(4): lea 0x1(%r10),%rsi
7e45(4): cmp $0xa,%rsi
7e49(2): jz 0x57(%rip)
7e4b(2): xor %edi,%edi
7e4d(5): jmp 0xffffff74(%rip)
7e52(3): mov %rbp,%rax
7e55(5): mov $0x30,0xffffffff(%r8)
7e5a(3): not %rax
7e5d(3): add %rax,%r8
7e60(3): cmp $0x8,%ebp
7e63(2): mov %ebp,%eax
7e65(2): jnb 0x45(%rip)
7e67(3): and $0x4,%ebp
7e6a(6): jnz 0xb7(%rip)
7e70(2): test %eax,%eax
7e72(6): jz 0xffffff24(%rip)
7e78(4): movzx (%r14),%edx
7e7c(2): test $0x2,%al
7e7e(3): mov %dl,(%r8)
7e81(6): jz 0xffffff15(%rip)
7e87(6): movzx 0xfffffffe(%r14,%rax,1),%edx
7e8d(6): mov %dx,0xfffffffe(%r8,%rax,1)
7e93(5): jmp 0xffffff03(%rip)
7e98(8): nop 0x0(%rax,%rax,1)
7ea0(5): mov 0x8(%rsp),%r8
7ea5(5): jmp 0xfffffce2(%rip)
7eaa(3): mov (%r14),%rax
7ead(4): lea 0x8(%r8),%rcx
7eb1(4): and $0xfffffff8,%rcx
7eb5(3): mov %rax,(%r8)
7eb8(2): mov %ebp,%eax
7eba(5): mov 0xfffffff8(%r14,%rax,1),%rdx
7ebf(5): mov %rdx,0xfffffff8(%r8,%rax,1)
7ec4(3): mov %r8,%rax
7ec7(3): sub %rcx,%rax
7eca(3): sub %rax,%r14
7ecd(2): add %ebp,%eax
7ecf(3): and $0xf8,%eax
7ed2(3): cmp $0x8,%eax
7ed5(6): jb 0xfffffec1(%rip)
7edb(3): and $0xf8,%eax
7ede(2): xor %edx,%edx
7ee0(2): mov %edx,%esi
7ee2(3): add $0x8,%edx
7ee5(4): mov 0x0(%r14,%rsi,1),%rdi
7ee9(2): cmp %eax,%edx
7eeb(4): mov %rdi,0x0(%rcx,%rsi,1)
7eef(2): jb 0xfffffff1(%rip)
7ef1(5): jmp 0xfffffea5(%rip)
7ef6(3): mov (%r14),%edx
7ef9(3): mov %edx,(%r8)
7efc(5): mov 0xfffffffc(%r14,%rax,1),%edx
7f01(5): mov %edx,0xfffffffc(%r8,%rax,1)
7f06(5): jmp 0xfffffc81(%rip)
7f0b(5): call 0xffffa2e5(%rip)
7f10(6): movzx 0xfffffffe(%r14,%rax,1),%edx
7f16(6): mov %dx,0xfffffffe(%r8,%rax,1)
7f1c(5): jmp 0xfffffc6b(%rip)
7f21(3): mov (%r14),%edx
7f24(3): mov %edx,(%r8)
7f27(5): mov 0xfffffffc(%r14,%rax,1),%edx
7f2c(5): mov %edx,0xfffffffc(%r8,%rax,1)
7f31(5): jmp 0xfffffe65(%rip)
7f36(2): test %eax,%eax
7f38(5): mov 0x8(%rsp),%rdx
7f3d(6): jnz 0xfffffa0e(%rip)
7f43(5): jmp 0xfffffa14(%rip)
7f48(4): mov 0x20(%rsp),%ebx
7f4c(3): mov %rax,%r15
7f4f(3): mov %r14d,%r12d
7f52(5): jmp 0xfffff988(%rip)

"human_options" :
7f60(2): push %r13
7f62(2): push %r12
7f64(3): mov %rsi,%r13
7f67(1): push %rbp
7f68(1): push %rbx
7f69(3): mov %rdx,%r12
7f6c(3): mov %rdi,%rbx
7f6f(4): sub $0x18,%rsp
7f73(9): mov $0x28,%rax
7f7c(5): mov %rax,0x8(%rsp)
7f81(2): xor %eax,%eax
7f83(3): test %rdi,%rdi
7f86(6): jz 0x11a(%rip)
7f8c(2): xor %ebp,%ebp
7f8e(3): cmp $0x27,(%rbx)
7f91(2): jnz 0xb(%rip)
7f93(4): add $0x1,%rbx
7f97(5): mov $0x4,%ebp
7f9c(7): lea 0x80bd(%rip),%rdx
7fa3(7): lea 0x20baf6(%rip),%rsi
7faa(5): mov $0x4,%ecx
7faf(3): mov %rbx,%rdi
7fb2(5): call 0x463e(%rip)
7fb7(2): test %eax,%eax
7fb9(2): js 0x3f(%rip)
7fbb(7): lea 0x809e(%rip),%rdx
7fc2(2): cwde 
7fc4(8): mov $0x1,(%r12)
7fcc(3): or 0x0(%rdx,%rax,4),%ebp
7fcf(2): xor %eax,%eax
7fd1(4): mov %ebp,0x0(%r13)
7fd5(5): mov 0x8(%rsp),%rcx
7fda(9): xor $0x28,%rcx
7fe3(6): jnz 0x15e(%rip)
7fe9(4): add $0x18,%rsp
7fed(1): pop %rbx
7fee(1): pop %rbp
7fef(2): pop %r12
7ff1(2): pop %r13
7ff3(1): ret near (%rsp)
7ff4(4): nop 0x0(%rax)
7ff8(7): lea 0x804b(%rip),%r8
7fff(2): xor %edx,%edx
8001(3): mov %rsp,%rsi
8004(3): mov %r12,%rcx
8007(3): mov %rbx,%rdi
800a(5): call 0x3136(%rip)
800f(2): test %eax,%eax
8011(2): jnz 0x47(%rip)
8013(3): movzx (%rbx),%esi
8016(3): lea 0xffffffd0(%rsi),%edx
8019(3): cmp $0x9,%dl
801c(2): jbe 0x2c(%rip)
801e(4): mov (%rsp),%rcx
8022(3): cmp %rcx,%rbx
8025(2): jnz 0x14(%rip)
8027(5): jmp 0xd9(%rip)
802c(4): nop 0x0(%rax)
8030(3): cmp %rcx,%rbx
8033(6): jz 0xcd(%rip)
8039(4): add $0x1,%rbx
803d(3): movzx (%rbx),%edi
8040(3): lea 0xffffffd0(%rdi),%edx
8043(3): cmp $0x9,%dl
8046(2): jnbe 0xffffffea(%rip)
8048(4): mov (%r12),%rdx
804c(4): mov %ebp,0x0(%r13)
8050(2): jmp 0x14(%rip)
8052(6): nop 0x0(%rax,%rax,1)
8058(4): mov (%r12),%rdx
805c(8): mov $0x0,0x0(%r13)
8064(3): test %rdx,%rdx
8067(6): jnz 0xffffff6e(%rip)
806d(7): lea 0x7128(%rip),%rdi
8074(5): call 0xffff9fdc(%rip)
8079(4): cmp $0x1,%rax
807d(3): sbb %rax,%rax
8080(5): and $0x200,%eax
8085(6): add $0x200,%rax
808b(4): mov %rax,(%r12)
808f(5): mov $0x4,%eax
8094(5): jmp 0xffffff41(%rip)
8099(7): nop 0x0(%rax)
80a0(7): lea 0x7108(%rip),%rdi
80a7(5): call 0xffff9fa9(%rip)
80ac(3): test %rax,%rax
80af(3): mov %rax,%rbx
80b2(6): jnz 0xfffffeda(%rip)
80b8(7): lea 0x7f81(%rip),%rdi
80bf(5): call 0xffff9f91(%rip)
80c4(3): test %rax,%rax
80c7(3): mov %rax,%rbx
80ca(6): jnz 0xfffffec2(%rip)
80d0(7): lea 0x70c5(%rip),%rdi
80d7(5): call 0xffff9f79(%rip)
80dc(3): test %rax,%rax
80df(2): jz 0x4b(%rip)
80e1(8): mov $0x200,(%r12)
80e9(2): xor %eax,%eax
80eb(8): mov $0x0,0x0(%r13)
80f3(5): jmp 0xfffffee2(%rip)
80f8(8): nop 0x0(%rax,%rax,1)
8100(4): cmp $0x42,0xffffffff(%rcx)
8104(2): jz 0x14(%rip)
8106(4): or $0x80,%bpl
810a(3): or $0x20,%ebp
810d(5): jmp 0xffffff3b(%rip)
8112(6): nop 0x0(%rax,%rax,1)
8118(6): or $0x180,%ebp
811e(4): cmp $0x69,0xfffffffe(%rcx)
8122(6): jnz 0xffffff26(%rip)
8128(2): jmp 0xffffffe2(%rip)
812a(8): mov $0x400,(%r12)
8132(2): xor %eax,%eax
8134(8): mov $0x0,0x0(%r13)
813c(5): jmp 0xfffffe99(%rip)
8141(5): call 0xffffa0af(%rip)

"umaxtostr" :
8150(4): lea 0x14(%rsi),%rcx
8154(4): mov $0x0,0x14(%rsi)
8158(a): mov $0x-3689348814741910323,%rsi
8162(6): nop 0x0(%rax,%rax,1)
8168(3): mov %rdi,%rax
816b(4): sub $0x1,%rcx
816f(3): mul %rax,%rsi,%rdx
8172(4): shr $0x3,%rdx
8176(4): lea 0x0(%rdx,%rdx,4),%rax
817a(3): add %rax,%rax
817d(3): sub %rax,%rdi
8180(3): add $0x30,%edi
8183(3): test %rdx,%rdx
8186(3): mov %dil,(%rcx)
8189(3): mov %rdx,%rdi
818c(2): jnz 0xffffffdc(%rip)
818e(3): mov %rcx,%rax
8191(1): ret near (%rsp)

"mbsalign" :
81a0(2): push %r15
81a2(2): push %r14
81a4(3): mov %rdi,%r14
81a7(2): push %r13
81a9(2): push %r12
81ab(3): mov %rsi,%r13
81ae(1): push %rbp
81af(1): push %rbx
81b0(3): mov %r9d,%ebx
81b3(3): mov %rcx,%r12
81b6(4): sub $0x38,%rsp
81ba(5): mov %rdx,0x10(%rsp)
81bf(5): mov %r8d,0x1c(%rsp)
81c4(5): call 0xffff9fec(%rip)
81c9(3): test $0x2,%bl
81cc(3): mov %rax,%r15
81cf(5): mov %rax,0x8(%rsp)
81d4(6): jz 0x16c(%rip)
81da(3): mov %r15,%rbp
81dd(8): mov $0x0,(%rsp)
81e5(9): mov $0x0,0x8(%rsp)
81ee(4): mov (%r12),%rax
81f2(3): cmp %rbp,%rax
81f5(6): jnb 0x114(%rip)
81fb(3): mov %rax,%r15
81fe(2): xor %edx,%edx
8200(4): mov %rax,(%r12)
8204(4): mov 0x1c(%rsp),%eax
8208(2): test %eax,%eax
820a(6): jz 0x121(%rip)
8210(2): xor %ebp,%ebp
8212(3): cmp $0x1,%eax
8215(2): jz 0xe(%rip)
8217(3): mov %rdx,%rbp
821a(3): and $0x1,%edx
821d(3): shr $0x1,%rbp
8220(3): add %rbp,%rdx
8223(3): test $0x4,%bl
8226(4): lea 0x0(%rdx,%r15,1),%r12
822a(2): jz 0x7(%rip)
822c(3): mov %r15,%r12
822f(2): xor %edx,%edx
8231(3): and $0x8,%ebx
8234(6): jnz 0x104(%rip)
823a(3): add %rbp,%r12
823d(5): mov 0x10(%rsp),%rax
8242(3): test %rax,%rax
8245(6): jz 0x8c(%rip)
824b(5): lea 0xffffffff(%r13,%rax,1),%rbx
8250(4): lea 0xffffffff(%rdx),%rax
8254(3): cmp %rbx,%r13
8257(2): jnb 0x28(%rip)
8259(3): test %rdx,%rdx
825c(2): jz 0x23(%rip)
825e(2): nop 
8260(4): add $0x1,%r13
8264(5): mov $0x20,0xffffffff(%r13)
8269(3): cmp %r13,%rbx
826c(4): setnbe %sil
8270(3): test %rax,%rax
8273(3): setnz %dl
8276(4): sub $0x1,%rax
827a(3): test %dl,%sil
827d(2): jnz 0xffffffe3(%rip)
827f(3): mov %rbx,%rdx
8282(5): mov $0x0,0x0(%r13)
8287(3): mov %r14,%rsi
828a(3): sub %r13,%rdx
828d(3): mov %r13,%rdi
8290(3): cmp %r15,%rdx
8293(4): cmovnbe %r15,%rdx
8297(5): call 0xffffa1e9(%rip)
829c(3): cmp %rax,%rbx
829f(4): lea 0xffffffff(%rbp),%rdx
82a3(2): jbe 0x2b(%rip)
82a5(3): test %rbp,%rbp
82a8(2): jz 0x26(%rip)
82aa(6): nop 0x0(%rax,%rax,1)
82b0(4): add $0x1,%rax
82b4(3): test %rdx,%rdx
82b7(4): mov $0x20,0xffffffff(%rax)
82bb(4): setnz %sil
82bf(3): cmp %rax,%rbx
82c2(3): setnbe %cl
82c5(4): sub $0x1,%rdx
82c9(3): test %cl,%sil
82cc(2): jnz 0xffffffe4(%rip)
82ce(3): mov $0x0,(%rax)
82d1(4): mov (%rsp),%rdi
82d5(5): call 0xffff9d9b(%rip)
82da(5): mov 0x8(%rsp),%rdi
82df(5): call 0xffff9d91(%rip)
82e4(4): add $0x38,%rsp
82e8(3): mov %r12,%rax
82eb(1): pop %rbx
82ec(1): pop %rbp
82ed(2): pop %r12
82ef(2): pop %r13
82f1(2): pop %r14
82f3(2): pop %r15
82f5(1): ret near (%rsp)
82f6(a): nop 0x0(%rax,%rax,1)
8300(9): mov $0x0,0x8(%rsp)
8309(3): cmp %rax,%rbp
830c(6): jnb 0x24e(%rip)
8312(3): sub %rbp,%rax
8315(3): mov %rax,%rdx
8318(3): mov %rbp,%rax
831b(4): mov %rax,(%r12)
831f(4): mov 0x1c(%rsp),%eax
8323(2): test %eax,%eax
8325(6): jnz 0xfffffeeb(%rip)
832b(3): mov %rdx,%rbp
832e(2): xor %edx,%edx
8330(5): jmp 0xfffffef3(%rip)
8335(3): nop (%rax)
8338(2): xor %ebp,%ebp
833a(5): jmp 0xffffff03(%rip)
833f(1): nop 
8340(5): call 0xffff9e60(%rip)
8345(4): cmp $0x1,%rax
8349(6): jbe 0xfffffe91(%rip)
834f(2): xor %edx,%edx
8351(2): xor %edi,%edi
8353(3): mov %r14,%rsi
8356(5): call 0xffff9dda(%rip)
835b(4): cmp $0xffffffff,%rax
835f(2): jnz 0x31(%rip)
8361(3): test $0x1,%bl
8364(6): jnz 0xfffffe76(%rip)
836a(8): mov $0x0,(%rsp)
8372(9): mov $0x0,0x8(%rsp)
837b(7): mov $0xffffffff,%r12
8382(5): jmp 0xffffff4f(%rip)
8387(9): nop 0x0(%rax,%rax,1)
8390(4): lea 0x1(%rax),%rbp
8394(8): lea 0x0(,%rbp,4),%rax
839c(3): mov %rax,%rdi
839f(5): mov %rax,0x20(%rsp)
83a4(5): call 0xffffa01c(%rip)
83a9(3): test %rax,%rax
83ac(4): mov %rax,(%rsp)
83b0(6): jz 0x185(%rip)
83b6(4): mov (%rsp),%rdi
83ba(3): mov %rbp,%rdx
83bd(3): mov %r14,%rsi
83c0(5): call 0xffff9d70(%rip)
83c5(3): test %rax,%rax
83c8(6): jz 0x10c(%rip)
83ce(4): mov (%rsp),%rax
83d2(5): mov 0x20(%rsp),%rcx
83d7(8): mov $0x0,0xfffffffc(%rax,%rcx,1)
83df(2): mov (%rax),%edi
83e1(3): mov %rax,%rdx
83e4(2): test %edi,%edi
83e6(6): jz 0xff(%rip)
83ec(5): mov $0x0,0x20(%rsp)
83f1(7): nop 0x0(%rax)
83f8(5): mov %rdx,0x28(%rsp)
83fd(5): call 0xffffa163(%rip)
8402(2): test %eax,%eax
8404(5): mov 0x28(%rsp),%rdx
8409(2): jnz 0xd(%rip)
840b(6): mov $0xfffd,(%rdx)
8411(5): mov $0x1,0x20(%rsp)
8416(4): add $0x4,%rdx
841a(2): mov (%rdx),%edi
841c(2): test %edi,%edi
841e(2): jnz 0xffffffda(%rip)
8420(4): mov (%rsp),%rdi
8424(3): mov %rbp,%rsi
8427(5): call 0xffff9ce9(%rip)
842c(5): cmp $0x0,0x20(%rsp)
8431(3): movsxd %eax,%rbp
8434(6): jz 0xc4(%rip)
843a(4): mov (%rsp),%rsi
843e(2): xor %edx,%edx
8440(2): xor %edi,%edi
8442(5): call 0xffffa0be(%rip)
8447(4): add $0x1,%rax
844b(5): mov %rax,0x20(%rsp)
8450(5): mov 0x20(%rsp),%rdi
8455(5): call 0xffff9f6b(%rip)
845a(3): test %rax,%rax
845d(5): mov %rax,0x8(%rsp)
8462(6): jz 0xbe(%rip)
8468(4): mov (%rsp),%r15
846c(4): mov (%r12),%r14
8470(3): mov (%r15),%edi
8473(2): test %edi,%edi
8475(6): jz 0xda(%rip)
847b(2): xor %ebp,%ebp
847d(2): jmp 0x11(%rip)
847f(1): nop 
8480(4): add $0x4,%r15
8484(3): mov (%r15),%edi
8487(3): mov %rdx,%rbp
848a(2): test %edi,%edi
848c(2): jz 0x23(%rip)
848e(5): call 0xffff9f22(%rip)
8493(3): cmp $0xff,%eax
8496(3): movsxd %eax,%rdx
8499(2): jnz 0xe(%rip)
849b(7): mov $0xfffd,(%r15)
84a2(5): mov $0x1,%edx
84a7(3): add %rbp,%rdx
84aa(3): cmp %rdx,%r14
84ad(2): jnb 0xffffffd3(%rip)
84af(5): mov 0x8(%rsp),%r14
84b4(5): mov 0x20(%rsp),%rdx
84b9(4): mov (%rsp),%rsi
84bd(7): mov $0x0,(%r15)
84c4(3): mov %r14,%rdi
84c7(5): call 0xffffa039(%rip)
84cc(3): mov %rax,%r15
84cf(5): jmp 0xfffffd1f(%rip)
84d4(3): mov %r15,%rbp
84d7(9): mov $0x0,0x8(%rsp)
84e0(5): jmp 0xfffffd0e(%rip)
84e5(4): mov (%rsp),%rdi
84e9(3): mov %rbp,%rsi
84ec(5): call 0xffff9c24(%rip)
84f1(3): movsxd %eax,%rbp
84f4(4): nop 0x0(%rax)
84f8(4): mov (%r12),%rax
84fc(3): cmp %rbp,%rax
84ff(6): jnb 0xfffffe01(%rip)
8505(5): mov 0x8(%rsp),%rax
850a(4): add $0x1,%rax
850e(5): mov %rax,0x20(%rsp)
8513(5): jmp 0xffffff3d(%rip)
8518(8): nop 0x0(%rax,%rax,1)
8520(3): test $0x1,%bl
8523(6): jnz 0xfffffccb(%rip)
8529(7): mov $0xffffffff,%r12
8530(5): jmp 0xfffffda1(%rip)
8535(3): test $0x1,%bl
8538(3): mov %r15,%rbp
853b(9): mov $0x0,0x8(%rsp)
8544(6): jnz 0xfffffcaa(%rip)
854a(5): jmp 0xfffffe20(%rip)
854f(4): mov (%rsp),%r15
8553(2): xor %ebp,%ebp
8555(5): jmp 0xffffff5a(%rip)
855a(3): mov %rbp,%rax
855d(2): xor %edx,%edx
855f(5): jmp 0xfffffca1(%rip)

"ambsalign" :
8570(2): push %r15
8572(2): push %r14
8574(3): mov %rdi,%r15
8577(2): push %r13
8579(2): push %r12
857b(3): xor %r12d,%r12d
857e(1): push %rbp
857f(1): push %rbx
8580(3): mov %rsi,%rbp
8583(4): sub $0x18,%rsp
8587(3): mov (%rsi),%r13
858a(4): mov %edx,0x8(%rsp)
858e(4): mov %ecx,0xc(%rsp)
8592(3): mov %r13,%rax
8595(3): nop (%rax)
8598(4): lea 0x1(%rax),%rbx
859c(3): mov %r12,%rdi
859f(3): mov %rbx,%rsi
85a2(5): call 0xffff9eae(%rip)
85a7(3): test %rax,%rax
85aa(3): mov %rax,%r14
85ad(2): jz 0x43(%rip)
85af(5): mov 0xc(%rsp),%r9d
85b4(5): mov 0x8(%rsp),%r8d
85b9(3): mov %rbp,%rcx
85bc(4): mov %r13,0x0(%rbp)
85c0(3): mov %rbx,%rdx
85c3(3): mov %rax,%rsi
85c6(3): mov %r15,%rdi
85c9(5): call 0xfffffbd7(%rip)
85ce(4): cmp $0xffffffff,%rax
85d2(2): jz 0x2e(%rip)
85d4(3): cmp %rax,%rbx
85d7(3): mov %r14,%r12
85da(2): jbe 0xffffffbe(%rip)
85dc(4): add $0x18,%rsp
85e0(3): mov %r14,%rax
85e3(1): pop %rbx
85e4(1): pop %rbp
85e5(2): pop %r12
85e7(2): pop %r13
85e9(2): pop %r14
85eb(2): pop %r15
85ed(1): ret near (%rsp)
85ee(2): nop 
85f0(3): mov %r12,%rdi
85f3(5): call 0xffff9a7d(%rip)
85f8(2): jmp 0xffffffe4(%rip)
85fa(6): nop 0x0(%rax,%rax,1)
8600(3): mov %r14,%rdi
8603(3): xor %r14d,%r14d
8606(5): call 0xffff9a6a(%rip)
860b(2): jmp 0xffffffd1(%rip)

"mbsnwidth" :
8610(2): push %r15
8612(2): push %r14
8614(2): push %r13
8616(2): push %r12
8618(4): lea 0x0(%rdi,%rsi,1),%r13
861c(1): push %rbp
861d(1): push %rbx
861e(3): mov %rdi,%rbx
8621(4): sub $0x38,%rsp
8625(9): mov $0x28,%rax
862e(5): mov %rax,0x28(%rsp)
8633(2): xor %eax,%eax
8635(4): mov %edx,0xc(%rsp)
8639(5): call 0xffff9b67(%rip)
863e(4): cmp $0x1,%rax
8642(6): jbe 0x136(%rip)
8648(2): xor %ebp,%ebp
864a(3): cmp %r13,%rbx
864d(6): jnb 0xf0(%rip)
8653(5): lea 0x20(%rsp),%r12
8658(5): lea 0x1c(%rsp),%r14
865d(2): jmp 0x1e(%rip)
865f(1): nop 
8660(2): cmp $0x25,%al
8662(2): jnl 0x9(%rip)
8664(3): sub $0x20,%eax
8667(2): cmp $0x3,%al
8669(2): jnbe 0x28(%rip)
866b(4): add $0x1,%rbx
866f(3): add $0x1,%ebp
8672(3): cmp %r13,%rbx
8675(6): jnb 0xc8(%rip)
867b(3): movzx (%rbx),%eax
867e(2): cmp $0x3f,%al
8680(2): jle 0xffffffe0(%rip)
8682(2): cmp $0x41,%al
8684(2): jl 0xd(%rip)
8686(2): cmp $0x5f,%al
8688(2): jle 0xffffffe3(%rip)
868a(3): sub $0x61,%eax
868d(2): cmp $0x1d,%al
868f(2): jbe 0xffffffdc(%rip)
8691(8): mov $0x0,(%r12)
8699(2): jmp 0x27(%rip)
869b(5): nop 0x0(%rax,%rax,1)
86a0(5): mov $0x7fffffff,%ecx
86a5(2): sub %ebp,%ecx
86a7(2): cmp %eax,%ecx
86a9(6): jl 0x117(%rip)
86af(2): add %eax,%ebp
86b1(3): mov %r12,%rdi
86b4(3): add %r15,%rbx
86b7(5): call 0xffff9e99(%rip)
86bc(2): test %eax,%eax
86be(2): jnz 0xffffffb4(%rip)
86c0(3): mov %r13,%rdx
86c3(3): mov %r12,%rcx
86c6(3): mov %rbx,%rsi
86c9(3): sub %rbx,%rdx
86cc(3): mov %r14,%rdi
86cf(5): call 0x33f1(%rip)
86d4(4): cmp $0xffffffff,%rax
86d8(3): mov %rax,%r15
86db(2): jz 0x4d(%rip)
86dd(4): cmp $0xfffffffe,%rax
86e1(2): jz 0x7f(%rip)
86e3(4): mov 0x1c(%rsp),%edi
86e7(3): test %rax,%rax
86ea(5): mov $0x1,%eax
86ef(4): cmove %rax,%r15
86f3(5): call 0xffff9cbd(%rip)
86f8(2): test %eax,%eax
86fa(2): jns 0xffffffa6(%rip)
86fc(5): test $0x2,0xc(%rsp)
8701(2): jnz 0x37(%rip)
8703(4): mov 0x1c(%rsp),%edi
8707(5): call 0xffff99f9(%rip)
870c(2): test %eax,%eax
870e(2): jnz 0xffffffa3(%rip)
8710(6): cmp $0x7fffffff,%ebp
8716(6): jz 0xaa(%rip)
871c(3): add $0x1,%ebp
871f(2): jmp 0xffffff92(%rip)
8721(7): nop 0x0(%rax)
8728(5): test $0x1,0xc(%rsp)
872d(6): jz 0xffffff3e(%rip)
8733(5): nop 0x0(%rax,%rax,1)
8738(5): mov $0xffffffff,%ebp
873d(5): mov 0x28(%rsp),%rsi
8742(9): xor $0x28,%rsi
874b(2): mov %ebp,%eax
874d(2): jnz 0x7d(%rip)
874f(4): add $0x38,%rsp
8753(1): pop %rbx
8754(1): pop %rbp
8755(2): pop %r12
8757(2): pop %r13
8759(2): pop %r14
875b(2): pop %r15
875d(1): ret near (%rsp)
875e(2): nop 
8760(5): test $0x1,0xc(%rsp)
8765(2): jnz 0xffffffd3(%rip)
8767(3): add $0x1,%ebp
876a(3): mov %r13,%rbx
876d(5): jmp 0xffffff05(%rip)
8772(6): nop 0x0(%rax,%rax,1)
8778(2): xor %ebp,%ebp
877a(3): cmp %r13,%rbx
877d(2): jnb 0xffffffc0(%rip)
877f(5): call 0xffff9e11(%rip)
8784(4): mov 0xc(%rsp),%edx
8788(3): mov (%rax),%rcx
878b(2): xor %ebp,%ebp
878d(3): and $0x2,%edx
8790(4): add $0x1,%rbx
8794(4): movzx 0xffffffff(%rbx),%eax
8798(4): movzx 0x0(%rcx,%rax,2),%eax
879c(3): test $0x40,%ah
879f(2): jnz 0xa(%rip)
87a1(2): test %edx,%edx
87a3(2): jnz 0xffffff95(%rip)
87a5(2): test $0x2,%al
87a7(2): jnz 0xd(%rip)
87a9(6): cmp $0x7fffffff,%ebp
87af(2): jz 0xffffff8e(%rip)
87b1(3): add $0x1,%ebp
87b4(3): cmp %rbx,%r13
87b7(2): jnz 0xffffffd9(%rip)
87b9(2): jmp 0xffffff84(%rip)
87bb(5): nop 0x0(%rax,%rax,1)
87c0(5): mov $0x7fffffff,%ebp
87c5(5): jmp 0xffffff78(%rip)
87ca(5): call 0xffff9a26(%rip)

"gnu_mbswidth" :
87d0(1): push %rbp
87d1(1): push %rbx
87d2(2): mov %esi,%ebp
87d4(3): mov %rdi,%rbx
87d7(4): sub $0x8,%rsp
87db(5): call 0xffff99d5(%rip)
87e0(4): add $0x8,%rsp
87e4(2): mov %ebp,%edx
87e6(3): mov %rbx,%rdi
87e9(1): pop %rbx
87ea(1): pop %rbp
87eb(3): mov %rax,%rsi
87ee(5): jmp 0xfffffe22(%rip)

"set_program_name" :
8800(3): test %rdi,%rdi
8803(1): push %rbx
8804(2): jz 0x79(%rip)
8806(5): mov $0x2f,%esi
880b(3): mov %rdi,%rbx
880e(5): call 0xffff9a42(%rip)
8813(3): test %rax,%rax
8816(2): jz 0x57(%rip)
8818(4): lea 0x1(%rax),%r8
881c(3): mov %r8,%rdx
881f(3): sub %rbx,%rdx
8822(4): cmp $0x6,%rdx
8826(2): jle 0x47(%rip)
8828(4): lea 0xfffffffa(%rax),%rsi
882c(7): lea 0x7895(%rip),%rdi
8833(5): mov $0x7,%ecx
8838(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
883a(3): setnbe %dl
883d(3): sbb $0x0,%dl
8840(2): test %dl,%dl
8842(2): jnz 0x2b(%rip)
8844(7): lea 0x7885(%rip),%rdi
884b(5): mov $0x3,%ecx
8850(3): mov %r8,%rsi
8853(3): mov %r8,%rbx
8856(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8858(3): setnbe %dl
885b(3): sbb $0x0,%dl
885e(2): test %dl,%dl
8860(2): jnz 0xd(%rip)
8862(4): lea 0x4(%rax),%rbx
8866(7): mov %rbx,0x20ba93(%rip)
886d(7): mov %rbx,0x20bbb4(%rip)
8874(7): mov %rbx,0x20baa5(%rip)
887b(1): pop %rbx
887c(1): ret near (%rsp)
887d(7): mov 0x20babc(%rip),%rcx
8884(7): lea 0x7805(%rip),%rdi
888b(5): mov $0x37,%edx
8890(5): mov $0x1,%esi
8895(5): call 0xffff9c8b(%rip)
889a(5): call 0xffff9806(%rip)

"gettext_quote.part.1" :
88a0(1): push %rbp
88a1(1): push %rbx
88a2(3): mov %rdi,%rbp
88a5(2): mov %esi,%ebx
88a7(4): sub $0x8,%rsp
88ab(5): call 0x4255(%rip)
88b0(3): movzx (%rax),%edx
88b3(3): and $0xdf,%edx
88b6(3): cmp $0x55,%dl
88b9(2): jz 0x77(%rip)
88bb(3): cmp $0x47,%dl
88be(2): jz 0x22(%rip)
88c0(7): lea 0x6751(%rip),%rax
88c7(7): lea 0x8238(%rip),%rdx
88ce(3): cmp $0x9,%ebx
88d1(4): cmovne %rdx,%rax
88d5(4): add $0x8,%rsp
88d9(1): pop %rbx
88da(1): pop %rbp
88db(1): ret near (%rsp)
88dc(4): nop 0x0(%rax)
88e0(4): movzx 0x1(%rax),%edx
88e4(3): and $0xdf,%edx
88e7(3): cmp $0x42,%dl
88ea(2): jnz 0xffffffd6(%rip)
88ec(4): cmp $0x31,0x2(%rax)
88f0(2): jnz 0xffffffd0(%rip)
88f2(4): cmp $0x38,0x3(%rax)
88f6(2): jnz 0xffffffca(%rip)
88f8(4): cmp $0x30,0x4(%rax)
88fc(2): jnz 0xffffffc4(%rip)
88fe(4): cmp $0x33,0x5(%rax)
8902(2): jnz 0xffffffbe(%rip)
8904(4): cmp $0x30,0x6(%rax)
8908(2): jnz 0xffffffb8(%rip)
890a(4): cmp $0x0,0x7(%rax)
890e(2): jnz 0xffffffb2(%rip)
8910(4): cmp $0x60,0x0(%rbp)
8914(7): lea 0x77c1(%rip),%rax
891b(7): lea 0x77be(%rip),%rdx
8922(4): cmovne %rdx,%rax
8926(4): add $0x8,%rsp
892a(1): pop %rbx
892b(1): pop %rbp
892c(1): ret near (%rsp)
892d(3): nop (%rax)
8930(4): movzx 0x1(%rax),%edx
8934(3): and $0xdf,%edx
8937(3): cmp $0x54,%dl
893a(2): jnz 0xffffff86(%rip)
893c(4): movzx 0x2(%rax),%edx
8940(3): and $0xdf,%edx
8943(3): cmp $0x46,%dl
8946(6): jnz 0xffffff7a(%rip)
894c(4): cmp $0x2d,0x3(%rax)
8950(6): jnz 0xffffff70(%rip)
8956(4): cmp $0x38,0x4(%rax)
895a(6): jnz 0xffffff66(%rip)
8960(4): cmp $0x0,0x5(%rax)
8964(6): jnz 0xffffff5c(%rip)
896a(4): cmp $0x60,0x0(%rbp)
896e(7): lea 0x775f(%rip),%rax
8975(7): lea 0x775c(%rip),%rdx
897c(4): cmovne %rdx,%rax
8980(4): add $0x8,%rsp
8984(1): pop %rbx
8985(1): pop %rbp
8986(1): ret near (%rsp)

"quotearg_buffer_restyled" :
8990(2): push %r15
8992(2): push %r14
8994(3): mov %r8d,%r15d
8997(2): push %r13
8999(2): push %r12
899b(3): mov %rdi,%r14
899e(1): push %rbp
899f(1): push %rbx
89a0(3): mov %r9d,%ebx
89a3(3): mov %rsi,%r13
89a6(3): mov %rcx,%rbp
89a9(3): and $0x2,%ebx
89ac(7): sub $0xb8,%rsp
89b3(8): mov 0xf0(%rsp),%rax
89bb(5): mov %rdx,0x10(%rsp)
89c0(5): mov %r8d,0x8(%rsp)
89c5(5): mov %r9d,0x78(%rsp)
89ca(5): mov %rax,0x20(%rsp)
89cf(8): mov 0xf8(%rsp),%rax
89d7(5): mov %rax,0x68(%rsp)
89dc(8): mov 0x100(%rsp),%rax
89e4(5): mov %rax,0x60(%rsp)
89e9(9): mov $0x28,%rax
89f2(8): mov %rax,0xa8(%rsp)
89fa(2): xor %eax,%eax
89fc(5): call 0xffff97a4(%rip)
8a01(4): cmp $0xa,%r15d
8a05(5): mov %rax,0x58(%rsp)
8a0a(6): jnbe 0x11b5(%rip)
8a10(7): lea 0x7729(%rip),%rcx
8a17(3): mov %r15d,%edx
8a1a(4): movsxd 0x0(%rcx,%rdx,4),%rax
8a1e(3): add %rcx,%rax
8a21(2): jmp %rax
8a23(5): mov $0x1,0xe(%rsp)
8a28(5): mov $0x0,0x7c(%rsp)
8a2d(3): xor %r12d,%r12d
8a30(9): mov $0x0,0x50(%rsp)
8a39(5): mov $0x1,0xf(%rsp)
8a3e(5): mov $0x0,0xd(%rsp)
8a43(7): lea 0x80bc(%rip),%rax
8a4a(9): mov $0x1,0x18(%rsp)
8a53(3): xor %r15d,%r15d
8a56(8): mov $0x2,0x8(%rsp)
8a5e(5): mov %rax,0x48(%rsp)
8a63(3): xor %r11d,%r11d
8a66(3): mov %rbp,%rax
8a69(3): mov %r12d,%r8d
8a6c(3): mov %r11,%rbp
8a6f(3): mov %rax,%r11
8a72(6): nop 0x0(%rax,%rax,1)
8a78(3): cmp %rbp,%r11
8a7b(4): setnz %r12b
8a7f(4): cmp $0xffffffff,%r11
8a83(2): jnz 0xf(%rip)
8a85(5): mov 0x10(%rsp),%rax
8a8a(4): cmp $0x0,0x0(%rax,%rbp,1)
8a8e(4): setnz %r12b
8a92(3): test %r12b,%r12b
8a95(6): jz 0x65b(%rip)
8a9b(5): cmp $0x2,0x8(%rsp)
8aa0(5): mov 0x10(%rsp),%rdi
8aa5(4): lea 0x0(%rdi,%rbp,1),%r9
8aa9(3): setnz %al
8aac(4): and 0xd(%rsp),%al
8ab0(3): mov %eax,%r10d
8ab3(6): jz 0xad(%rip)
8ab9(5): mov 0x18(%rsp),%rax
8abe(3): test %rax,%rax
8ac1(6): jz 0x42f(%rip)
8ac7(4): cmp $0xffffffff,%r11
8acb(5): lea 0x0(%rbp,%rax,1),%rbx
8ad0(2): jnz 0x30(%rip)
8ad2(4): cmp $0x1,%rax
8ad6(2): jbe 0x2a(%rip)
8ad8(5): mov %r8b,0x38(%rsp)
8add(5): mov %r10b,0x30(%rsp)
8ae2(5): mov %r9,0x28(%rsp)
8ae7(5): call 0xffff96c9(%rip)
8aec(6): movzx 0x38(%rsp),%r8d
8af2(6): movzx 0x30(%rsp),%r10d
8af8(3): mov %rax,%r11
8afb(5): mov 0x28(%rsp),%r9
8b00(3): cmp %r11,%rbx
8b03(5): mov %r10b,0x28(%rsp)
8b08(6): jnbe 0x5b8(%rip)
8b0e(5): mov 0x18(%rsp),%rdx
8b13(5): mov 0x48(%rsp),%rsi
8b18(3): mov %r9,%rdi
8b1b(5): mov %r11,0x40(%rsp)
8b20(5): mov %r8b,0x38(%rsp)
8b25(5): mov %r9,0x30(%rsp)
8b2a(5): call 0xffff97d6(%rip)
8b2f(2): test %eax,%eax
8b31(5): mov 0x30(%rsp),%r9
8b36(6): movzx 0x38(%rsp),%r8d
8b3c(5): mov 0x40(%rsp),%r11
8b41(6): jnz 0x57f(%rip)
8b47(5): cmp $0x0,0xf(%rsp)
8b4c(6): movzx 0x28(%rsp),%r10d
8b52(6): jnz 0xf83(%rip)
8b58(8): nop 0x0(%rax,%rax,1)
8b60(4): movzx (%r9),%ebx
8b64(3): cmp $0x7e,%bl
8b67(6): jnbe 0x321(%rip)
8b6d(7): lea 0x75f8(%rip),%rcx
8b74(3): movzx %bl,%edx
8b77(4): movsxd 0x0(%rcx,%rdx,4),%rax
8b7b(3): add %rcx,%rax
8b7e(2): jmp %rax
8b80(3): xor %r10d,%r10d
8b83(4): cmp $0x1,%r11
8b87(3): setnz %al
8b8a(4): cmp $0xffffffff,%r11
8b8e(2): jnz 0xe(%rip)
8b90(5): mov 0x10(%rsp),%rax
8b95(4): cmp $0x0,0x1(%rax)
8b99(3): setnz %al
8b9c(5): cmp $0x2,0x8(%rsp)
8ba1(3): setz %dl
8ba4(2): test %al,%al
8ba6(6): jz 0x252(%rip)
8bac(3): xor %r12d,%r12d
8baf(2): xor %eax,%eax
8bb1(7): nop 0x0(%rax)
8bb8(5): cmp $0x1,0xd(%rsp)
8bbd(6): jnz 0x115(%rip)
8bc3(2): test %dl,%dl
8bc5(6): jnz 0x10d(%rip)
8bcb(5): mov 0x20(%rsp),%rsi
8bd0(3): test %rsi,%rsi
8bd3(2): jz 0x16(%rip)
8bd5(2): mov %ebx,%edx
8bd7(3): shr $0x5,%dl
8bda(3): movzx %dl,%edx
8bdd(3): mov 0x0(%rsi,%rdx,4),%edx
8be0(3): bt %ebx,%edx
8be3(6): jb 0x150(%rip)
8be9(3): test %r10b,%r10b
8bec(6): jnz 0x147(%rip)
8bf2(3): xor $0x1,%eax
8bf5(4): add $0x1,%rbp
8bf9(3): and %r8d,%eax
8bfc(2): test %al,%al
8bfe(2): jz 0x22(%rip)
8c00(3): cmp %r15,%r13
8c03(2): jbe 0x7(%rip)
8c05(5): mov $0x27,0x0(%r14,%r15,1)
8c0a(4): lea 0x1(%r15),%rax
8c0e(3): cmp %rax,%r13
8c11(2): jbe 0x8(%rip)
8c13(6): mov $0x27,0x1(%r14,%r15,1)
8c19(4): add $0x2,%r15
8c1d(3): xor %r8d,%r8d
8c20(3): cmp %r13,%r15
8c23(2): jnb 0x6(%rip)
8c25(4): mov %bl,0x0(%r14,%r15,1)
8c29(5): movzx 0xe(%rsp),%edi
8c2e(4): add $0x1,%r15
8c32(5): mov $0x0,%eax
8c37(3): test %r12b,%r12b
8c3a(3): cmove %eax,%edi
8c3d(5): mov %dil,0xe(%rsp)
8c42(5): jmp 0xfffffe36(%rip)
8c47(9): nop 0x0(%rax,%rax,1)
8c50(3): xor %r10d,%r10d
8c53(4): mov 0x8(%rsp),%eax
8c57(3): cmp $0x2,%eax
8c5a(6): jz 0x5be(%rip)
8c60(3): cmp $0x5,%eax
8c63(6): jz 0x575(%rip)
8c69(3): cmp $0x2,%eax
8c6c(5): mov $0x3f,%ebx
8c71(3): setz %dl
8c74(3): xor %r12d,%r12d
8c77(2): xor %eax,%eax
8c79(5): jmp 0xffffff3f(%rip)
8c7e(2): nop 
8c80(3): xor %r10d,%r10d
8c83(5): cmp $0x2,0x8(%rsp)
8c88(6): jz 0x508(%rip)
8c8e(5): mov %r12b,0x7c(%rsp)
8c93(2): xor %edx,%edx
8c95(2): xor %eax,%eax
8c97(5): mov $0x27,%ebx
8c9c(5): jmp 0xffffff1c(%rip)
8ca1(7): nop 0x0(%rax)
8ca8(5): mov $0x9,%edx
8cad(5): mov $0x74,%ebx
8cb2(5): cmp $0x2,0x8(%rsp)
8cb7(3): setz %al
8cba(4): and 0xf(%rsp),%al
8cbe(6): jnz 0x150(%rip)
8cc4(5): cmp $0x0,0xd(%rsp)
8cc9(2): jnz 0x67(%rip)
8ccb(2): mov %edx,%ebx
8ccd(3): xor %r12d,%r12d
8cd0(2): xor %eax,%eax
8cd2(5): cmp $0x0,0xf(%rsp)
8cd7(6): jnz 0xfffffef4(%rip)
8cdd(5): jmp 0xffffff0c(%rip)
8ce2(6): nop 0x0(%rax,%rax,1)
8ce8(5): mov $0x8,%edx
8ced(5): mov $0x62,%ebx
8cf2(2): jmp 0xffffffd2(%rip)
8cf4(4): nop 0x0(%rax)
8cf8(5): cmp $0x2,0x8(%rsp)
8cfd(6): jz 0x3d3(%rip)
8d03(5): cmp $0x0,0xd(%rsp)
8d08(6): jz 0x218(%rip)
8d0e(5): cmp $0x0,0xf(%rsp)
8d13(6): jz 0x20d(%rip)
8d19(6): cmp $0x0,0x18(%rsp)
8d1f(6): jnz 0x3bc(%rip)
8d25(5): mov $0x5c,%ebx
8d2a(6): nop 0x0(%rax,%rax,1)
8d30(3): xor %r12d,%r12d
8d33(5): cmp $0x2,0x8(%rsp)
8d38(3): setz %dl
8d3b(5): cmp $0x0,0xf(%rsp)
8d40(2): mov %edx,%eax
8d42(6): jnz 0x856(%rip)
8d48(3): mov %r8d,%eax
8d4b(3): xor $0x1,%eax
8d4e(2): and %dl,%al
8d50(2): jz 0x31(%rip)
8d52(3): cmp %r15,%r13
8d55(2): jbe 0x7(%rip)
8d57(5): mov $0x27,0x0(%r14,%r15,1)
8d5c(4): lea 0x1(%r15),%rdx
8d60(3): cmp %rdx,%r13
8d63(2): jbe 0x8(%rip)
8d65(6): mov $0x24,0x1(%r14,%r15,1)
8d6b(4): lea 0x2(%r15),%rdx
8d6f(3): cmp %rdx,%r13
8d72(2): jbe 0x8(%rip)
8d74(6): mov $0x27,0x2(%r14,%r15,1)
8d7a(4): add $0x3,%r15
8d7e(3): mov %eax,%r8d
8d81(3): cmp %r15,%r13
8d84(2): jbe 0x7(%rip)
8d86(5): mov $0x5c,0x0(%r14,%r15,1)
8d8b(4): add $0x1,%r15
8d8f(4): add $0x1,%rbp
8d93(5): jmp 0xfffffe8d(%rip)
8d98(8): nop 0x0(%rax,%rax,1)
8da0(5): cmp $0x0,0xd(%rsp)
8da5(6): jnz 0x1ce(%rip)
8dab(2): xor %edx,%edx
8dad(5): test $0x1,0x78(%rsp)
8db2(6): jz 0xffffff19(%rip)
8db8(4): add $0x1,%rbp
8dbc(5): jmp 0xfffffcbc(%rip)
8dc1(7): nop 0x0(%rax)
8dc8(5): cmp $0x2,0x8(%rsp)
8dcd(3): setz %dl
8dd0(2): xor %eax,%eax
8dd2(5): jmp 0xfffffde6(%rip)
8dd7(9): nop 0x0(%rax,%rax,1)
8de0(5): mov $0x7,%edx
8de5(5): mov $0x61,%ebx
8dea(5): jmp 0xfffffeda(%rip)
8def(1): nop 
8df0(5): cmp $0x2,0x8(%rsp)
8df5(3): setz %dl
8df8(3): test %rbp,%rbp
8dfb(6): jnz 0xfffffdb1(%rip)
8e01(5): movzx 0xf(%rsp),%eax
8e06(2): and %dl,%al
8e08(6): jz 0xfffffdb0(%rip)
8e0e(3): mov %r11,%rbp
8e11(8): mov $0x2,0x8(%rsp)
8e19(5): jmp 0x700(%rip)
8e1e(2): nop 
8e20(5): cmp $0x2,0x8(%rsp)
8e25(3): setz %dl
8e28(3): xor %r12d,%r12d
8e2b(2): jmp 0xffffffd6(%rip)
8e2d(3): nop (%rax)
8e30(5): cmp $0x2,0x8(%rsp)
8e35(5): mov $0x20,%ebx
8e3a(3): setz %dl
8e3d(2): jmp 0xffffffc4(%rip)
8e3f(1): nop 
8e40(5): mov $0xd,%edx
8e45(5): mov $0x72,%ebx
8e4a(5): jmp 0xfffffe68(%rip)
8e4f(1): nop 
8e50(5): mov $0xc,%edx
8e55(5): mov $0x66,%ebx
8e5a(5): jmp 0xfffffe6a(%rip)
8e5f(1): nop 
8e60(5): mov $0xb,%edx
8e65(5): mov $0x76,%ebx
8e6a(5): jmp 0xfffffe5a(%rip)
8e6f(1): nop 
8e70(5): mov $0xa,%edx
8e75(5): mov $0x6e,%ebx
8e7a(5): jmp 0xfffffe38(%rip)
8e7f(1): nop 
8e80(3): xor %r10d,%r10d
8e83(5): nop 0x0(%rax,%rax,1)
8e88(6): cmp $0x1,0x58(%rsp)
8e8e(6): jnz 0x3aa(%rip)
8e94(5): mov %r11,0x38(%rsp)
8e99(5): mov %r8b,0x30(%rsp)
8e9e(5): mov %r10b,0x28(%rsp)
8ea3(5): call 0xffff96ed(%rip)
8ea8(3): mov (%rax),%rcx
8eab(3): movzx %bl,%edx
8eae(6): movzx 0x28(%rsp),%r10d
8eb4(6): movzx 0x30(%rsp),%r8d
8eba(5): mov 0x38(%rsp),%r11
8ebf(5): mov $0x1,%edi
8ec4(4): movzx 0x0(%rcx,%rdx,2),%eax
8ec8(4): and $0x4000,%ax
8ecc(4): setnz %r12b
8ed0(3): setz %al
8ed3(4): and 0xd(%rsp),%al
8ed7(2): test %al,%al
8ed9(6): jnz 0x998(%rip)
8edf(5): cmp $0x2,0x8(%rsp)
8ee4(3): setz %dl
8ee7(5): jmp 0xfffffcd1(%rip)
8eec(4): nop 0x0(%rax)
8ef0(4): movzx (%r9),%ebx
8ef4(3): cmp $0x7e,%bl
8ef7(2): jnbe 0xffffff89(%rip)
8ef9(7): lea 0x7468(%rip),%rcx
8f00(3): movzx %bl,%edx
8f03(4): movsxd 0x0(%rcx,%rdx,4),%rax
8f07(3): add %rcx,%rax
8f0a(2): jmp %rax
8f0c(4): nop 0x0(%rax)
8f10(3): xor %r10d,%r10d
8f13(5): cmp $0x0,0xd(%rsp)
8f18(6): jnz 0xfffffdf6(%rip)
8f1e(2): nop 
8f20(5): mov $0x5c,%edx
8f25(5): mov $0x5c,%ebx
8f2a(5): jmp 0xfffffd9a(%rip)
8f2f(1): nop 
8f30(5): mov $0xc,%edx
8f35(3): xor %r10d,%r10d
8f38(5): mov $0x66,%ebx
8f3d(5): jmp 0xfffffd87(%rip)
8f42(6): nop 0x0(%rax,%rax,1)
8f48(5): mov $0xa,%edx
8f4d(3): xor %r10d,%r10d
8f50(5): mov $0x6e,%ebx
8f55(5): jmp 0xfffffd5d(%rip)
8f5a(6): nop 0x0(%rax,%rax,1)
8f60(5): mov $0x61,%ebx
8f65(5): jmp 0xfffffdcb(%rip)
8f6a(6): nop 0x0(%rax,%rax,1)
8f70(3): xor %r10d,%r10d
8f73(5): cmp $0x2,0x8(%rsp)
8f78(3): setz %dl
8f7b(5): cmp $0x0,0xf(%rsp)
8f80(6): jnz 0xb9a(%rip)
8f86(3): mov %r8d,%eax
8f89(3): mov %r15,%rcx
8f8c(3): xor $0x1,%eax
8f8f(2): and %dl,%al
8f91(2): jz 0x2f(%rip)
8f93(3): cmp %r15,%r13
8f96(2): jbe 0x7(%rip)
8f98(5): mov $0x27,0x0(%r14,%r15,1)
8f9d(4): lea 0x1(%r15),%rcx
8fa1(3): cmp %rcx,%r13
8fa4(2): jbe 0x8(%rip)
8fa6(6): mov $0x24,0x1(%r14,%r15,1)
8fac(4): lea 0x2(%r15),%rcx
8fb0(3): cmp %rcx,%r13
8fb3(6): jnbe 0x636(%rip)
8fb9(4): lea 0x3(%r15),%rcx
8fbd(3): mov %eax,%r8d
8fc0(3): cmp %rcx,%r13
8fc3(2): jbe 0x7(%rip)
8fc5(5): mov $0x5c,0x0(%r14,%rcx,1)
8fca(5): cmp $0x2,0x8(%rsp)
8fcf(4): lea 0x1(%rcx),%r15
8fd3(6): jz 0x606(%rip)
8fd9(4): lea 0x1(%rbp),%rax
8fdd(3): cmp %r11,%rax
8fe0(2): jnb 0x1b(%rip)
8fe2(5): mov 0x10(%rsp),%rax
8fe7(5): movzx 0x1(%rax,%rbp,1),%eax
8fec(4): mov %al,0x28(%rsp)
8ff0(3): sub $0x30,%eax
8ff3(2): cmp $0x9,%al
8ff5(6): jbe 0x834(%rip)
8ffb(3): mov %r12d,%eax
8ffe(5): mov $0x30,%ebx
9003(3): xor %r12d,%r12d
9006(5): jmp 0xfffffbb2(%rip)
900b(5): nop 0x0(%rax,%rax,1)
9010(5): cmp $0x2,0x8(%rsp)
9015(3): mov %r10d,%r12d
9018(3): setz %dl
901b(3): xor %r10d,%r10d
901e(2): xor %eax,%eax
9020(5): jmp 0xfffffb98(%rip)
9025(3): nop (%rax)
9028(5): cmp $0x2,0x8(%rsp)
902d(3): setz %dl
9030(3): xor %r10d,%r10d
9033(5): jmp 0xfffffdc5(%rip)
9038(8): nop 0x0(%rax,%rax,1)
9040(5): cmp $0x2,0x8(%rsp)
9045(3): setz %dl
9048(3): xor %r10d,%r10d
904b(3): xor %r12d,%r12d
904e(5): jmp 0xfffffdb3(%rip)
9053(5): nop 0x0(%rax,%rax,1)
9058(5): cmp $0x2,0x8(%rsp)
905d(3): mov %r10d,%r12d
9060(5): mov $0x20,%ebx
9065(3): setz %dl
9068(3): xor %r10d,%r10d
906b(5): jmp 0xfffffd96(%rip)
9070(5): mov $0xd,%edx
9075(3): xor %r10d,%r10d
9078(5): mov $0x72,%ebx
907d(5): jmp 0xfffffc35(%rip)
9082(6): nop 0x0(%rax,%rax,1)
9088(5): mov $0x76,%ebx
908d(5): jmp 0xfffffca3(%rip)
9092(6): nop 0x0(%rax,%rax,1)
9098(5): mov $0x9,%edx
909d(3): xor %r10d,%r10d
90a0(5): mov $0x74,%ebx
90a5(5): jmp 0xfffffc0d(%rip)
90aa(6): nop 0x0(%rax,%rax,1)
90b0(5): mov $0x62,%ebx
90b5(5): jmp 0xfffffc7b(%rip)
90ba(6): nop 0x0(%rax,%rax,1)
90c0(3): xor %r10d,%r10d
90c3(5): jmp 0xfffffa9d(%rip)
90c8(8): nop 0x0(%rax,%rax,1)
90d0(5): cmp $0x0,0xf(%rsp)
90d5(6): jnz 0x96b(%rip)
90db(4): add $0x1,%rbp
90df(3): mov %r8d,%eax
90e2(3): xor %r12d,%r12d
90e5(5): mov $0x5c,%ebx
90ea(5): jmp 0xfffffb12(%rip)
90ef(1): nop 
90f0(5): cmp $0x2,0x8(%rsp)
90f5(5): movzx 0xf(%rsp),%ebx
90fa(3): mov %r8d,%r12d
90fd(3): mov %r11,%rbp
9100(3): setz %dl
9103(2): mov %ebx,%eax
9105(3): test %r15,%r15
9108(3): setz %cl
910b(2): and %edx,%eax
910d(2): and %cl,%al
910f(6): jnz 0xa67(%rip)
9115(2): mov %ebx,%eax
9117(3): xor $0x1,%eax
911a(2): and %al,%dl
911c(6): jz 0x970(%rip)
9122(5): cmp $0x0,0x7c(%rsp)
9127(6): jz 0x963(%rip)
912d(5): cmp $0x0,0xe(%rsp)
9132(6): jnz 0x9fb(%rip)
9138(3): test %r13,%r13
913b(3): setz %al
913e(6): cmp $0x0,0x50(%rsp)
9144(3): setnz %dl
9147(2): and %dl,%al
9149(6): jz 0xa23(%rip)
914f(5): mov 0x50(%rsp),%r13
9154(7): lea 0x79ab(%rip),%rbx
915b(4): mov $0x27,(%r14)
915f(8): mov $0x2,0x8(%rsp)
9167(6): mov $0x1,%r15d
916d(9): mov $0x1,0x18(%rsp)
9176(5): mov $0x0,0xf(%rsp)
917b(5): mov %rbx,0x48(%rsp)
9180(4): mov %al,0x7c(%rsp)
9184(5): jmp 0xfffff8df(%rip)
9189(7): nop 0x0(%rax)
9190(5): cmp $0x0,0xf(%rsp)
9195(6): jnz 0x8ab(%rip)
919b(3): test %r13,%r13
919e(6): jz 0x402(%rip)
91a4(2): xor %edx,%edx
91a6(6): cmp $0x0,0x50(%rsp)
91ac(6): jnz 0x3f4(%rip)
91b2(5): mov %r13,0x50(%rsp)
91b7(4): add $0x3,%r15
91bb(2): xor %eax,%eax
91bd(5): mov %r12b,0x7c(%rsp)
91c2(3): xor %r8d,%r8d
91c5(3): mov %rdx,%r13
91c8(5): mov $0x27,%ebx
91cd(5): jmp 0xfffffa1c(%rip)
91d2(6): nop 0x0(%rax,%rax,1)
91d8(5): test $0x4,0x78(%rsp)
91dd(2): jz 0x23(%rip)
91df(4): lea 0x2(%rbp),%rcx
91e3(3): cmp %r11,%rcx
91e6(2): jnb 0x1a(%rip)
91e8(5): mov 0x10(%rsp),%rax
91ed(5): cmp $0x3f,0x1(%rax,%rbp,1)
91f2(6): jz 0x790(%rip)
91f8(8): nop 0x0(%rax,%rax,1)
9200(2): xor %edx,%edx
9202(3): xor %r12d,%r12d
9205(2): xor %eax,%eax
9207(5): mov $0x3f,%ebx
920c(5): jmp 0xfffff9ac(%rip)
9211(7): nop 0x0(%rax)
9218(5): cmp $0x0,0xf(%rsp)
921d(6): jnz 0x823(%rip)
9223(3): xor %r12d,%r12d
9226(2): xor %eax,%eax
9228(5): mov $0x3f,%ebx
922d(5): jmp 0xfffff9bc(%rip)
9232(6): nop 0x0(%rax,%rax,1)
9238(8): lea 0xa0(%rsp),%rax
9240(4): cmp $0xffffffff,%r11
9244(c): mov $0x0,0xa0(%rsp)
9250(5): mov %rax,0x28(%rsp)
9255(2): jnz 0x2f(%rip)
9257(5): mov 0x10(%rsp),%rdi
925c(5): mov %r8b,0x40(%rsp)
9261(5): mov %r10b,0x38(%rsp)
9266(5): mov %r9,0x30(%rsp)
926b(5): call 0xffff8f45(%rip)
9270(6): movzx 0x40(%rsp),%r8d
9276(6): movzx 0x38(%rsp),%r10d
927c(3): mov %rax,%r11
927f(5): mov 0x30(%rsp),%r9
9284(8): lea 0x9c(%rsp),%rax
928c(2): xor %ecx,%ecx
928e(4): mov %bl,0x7e(%rsp)
9292(5): mov %r8b,0x7d(%rsp)
9297(3): mov %rcx,%rbx
929a(8): mov %r9,0x88(%rsp)
92a2(5): mov %rax,0x38(%rsp)
92a7(5): mov %r10b,0x7f(%rsp)
92ac(8): mov %r15,0x80(%rsp)
92b4(5): mov %r14,0x40(%rsp)
92b9(5): mov %r13,0x70(%rsp)
92be(5): mov %r11,0x30(%rsp)
92c3(5): mov 0x10(%rsp),%rax
92c8(5): lea 0x0(%rbp,%rbx,1),%r14
92cd(5): mov 0x30(%rsp),%rdx
92d2(5): mov 0x28(%rsp),%rcx
92d7(5): mov 0x38(%rsp),%rdi
92dc(4): lea 0x0(%rax,%r14,1),%r13
92e0(3): sub %r14,%rdx
92e3(3): mov %r13,%rsi
92e6(5): call 0x27da(%rip)
92eb(3): test %rax,%rax
92ee(3): mov %rax,%r15
92f1(2): jz 0x50(%rip)
92f3(4): cmp $0xffffffff,%rax
92f7(6): jz 0x61e(%rip)
92fd(4): cmp $0xfffffffe,%rax
9301(6): jz 0x5a0(%rip)
9307(5): cmp $0x2,0x8(%rsp)
930c(3): setz %al
930f(4): and 0xf(%rsp),%al
9313(6): jnz 0x19d(%rip)
9319(7): mov 0x9c(%rsp),%edi
9320(5): call 0xffff9240(%rip)
9325(5): mov 0x28(%rsp),%rdi
932a(2): test %eax,%eax
932c(5): mov $0x0,%eax
9331(4): cmove %eax,%r12d
9335(3): add %r15,%rbx
9338(5): call 0xffff9218(%rip)
933d(2): test %eax,%eax
933f(2): jz 0xffffff84(%rip)
9341(3): mov %r12d,%edx
9344(3): mov %rbx,%rdi
9347(6): movzx 0x7d(%rsp),%r8d
934d(3): xor $0x1,%edx
9350(5): movzx 0x7e(%rsp),%ebx
9355(6): movzx 0x7f(%rsp),%r10d
935b(4): and 0xd(%rsp),%dl
935f(8): mov 0x80(%rsp),%r15
9367(5): mov 0x40(%rsp),%r14
936c(5): mov 0x70(%rsp),%r13
9371(5): mov 0x30(%rsp),%r11
9376(4): cmp $0x1,%rdi
937a(6): jbe 0x601(%rip)
9380(3): mov %rdi,%rcx
9383(2): xor %esi,%esi
9385(6): movzx 0xf(%rsp),%r9d
938b(3): add %rbp,%rcx
938e(5): mov 0x10(%rsp),%rdi
9393(5): jmp 0xbb(%rip)
9398(8): nop 0x0(%rax,%rax,1)
93a0(5): cmp $0x2,0x8(%rsp)
93a5(3): setz %al
93a8(3): test %r9b,%r9b
93ab(6): jnz 0x4b5(%rip)
93b1(3): mov %r8d,%esi
93b4(3): xor $0x1,%esi
93b7(3): and %sil,%al
93ba(2): jz 0x31(%rip)
93bc(3): cmp %r15,%r13
93bf(2): jbe 0x7(%rip)
93c1(5): mov $0x27,0x0(%r14,%r15,1)
93c6(4): lea 0x1(%r15),%rsi
93ca(3): cmp %rsi,%r13
93cd(2): jbe 0x8(%rip)
93cf(6): mov $0x24,0x1(%r14,%r15,1)
93d5(4): lea 0x2(%r15),%rsi
93d9(3): cmp %rsi,%r13
93dc(2): jbe 0x8(%rip)
93de(6): mov $0x27,0x2(%r14,%r15,1)
93e4(4): add $0x3,%r15
93e8(3): mov %eax,%r8d
93eb(3): cmp %r15,%r13
93ee(2): jbe 0x7(%rip)
93f0(5): mov $0x5c,0x0(%r14,%r15,1)
93f5(4): lea 0x1(%r15),%rax
93f9(3): cmp %rax,%r13
93fc(2): jbe 0xf(%rip)
93fe(2): mov %ebx,%eax
9400(3): shr $0x6,%al
9403(3): add $0x30,%eax
9406(5): mov %al,0x1(%r14,%r15,1)
940b(4): lea 0x2(%r15),%rax
940f(3): cmp %rax,%r13
9412(2): jbe 0x12(%rip)
9414(2): mov %ebx,%eax
9416(3): shr $0x3,%al
9419(3): and $0x7,%eax
941c(3): add $0x30,%eax
941f(5): mov %al,0x2(%r14,%r15,1)
9424(3): and $0x7,%ebx
9427(4): add $0x1,%rbp
942b(4): add $0x3,%r15
942f(3): add $0x30,%ebx
9432(3): cmp %rcx,%rbp
9435(6): jnb 0xfffff7eb(%rip)
943b(2): mov %edx,%esi
943d(3): cmp %r15,%r13
9440(2): jbe 0x6(%rip)
9442(4): mov %bl,0x0(%r14,%r15,1)
9446(4): movzx 0x0(%rdi,%rbp,1),%ebx
944a(4): add $0x1,%r15
944e(2): test %dl,%dl
9450(6): jnz 0xffffff50(%rip)
9456(2): mov %esi,%eax
9458(3): xor $0x1,%eax
945b(3): and %r8d,%eax
945e(3): test %r10b,%r10b
9461(2): jz 0x10(%rip)
9463(3): cmp %r15,%r13
9466(2): jbe 0x7(%rip)
9468(5): mov $0x5c,0x0(%r14,%r15,1)
946d(4): add $0x1,%r15
9471(4): add $0x1,%rbp
9475(3): cmp %rcx,%rbp
9478(6): jnb 0xfffff784(%rip)
947e(2): test %al,%al
9480(6): jz 0x3fe(%rip)
9486(3): cmp %r15,%r13
9489(2): jbe 0x7(%rip)
948b(5): mov $0x27,0x0(%r14,%r15,1)
9490(4): lea 0x1(%r15),%rax
9494(3): cmp %rax,%r13
9497(2): jbe 0x8(%rip)
9499(6): mov $0x27,0x1(%r14,%r15,1)
949f(4): add $0x2,%r15
94a3(3): xor %r10d,%r10d
94a6(3): xor %r8d,%r8d
94a9(2): jmp 0xffffff94(%rip)
94ab(5): nop 0x0(%rax,%rax,1)
94b0(4): cmp $0x1,%r15
94b4(6): jz 0xfffffe65(%rip)
94ba(5): mov 0x10(%rsp),%rdi
94bf(4): lea 0x0(%rdi,%r15,1),%rcx
94c3(5): lea 0x1(%rdi,%r14,1),%rdx
94c8(4): lea 0x0(%rcx,%r14,1),%r8
94cc(2): jmp 0x11(%rip)
94ce(2): nop 
94d0(4): add $0x1,%rdx
94d4(3): cmp %rdx,%r8
94d7(6): jz 0xfffffe42(%rip)
94dd(3): movzx (%rdx),%ecx
94e0(3): sub $0x5b,%ecx
94e3(3): cmp $0x21,%cl
94e6(2): jnbe 0xffffffea(%rip)
94e8(5): mov $0x1,%esi
94ed(3): shl/sal %cl,%rsi
94f0(3): mov %rsi,%rcx
94f3(a): mov $0x8589934635,%rsi
94fd(3): test %rsi,%rcx
9500(2): jz 0xffffffd0(%rip)
9502(5): mov 0x40(%rsp),%r14
9507(5): mov 0x70(%rsp),%r13
950c(5): mov 0x30(%rsp),%rbp
9511(8): mov $0x2,0x8(%rsp)
9519(5): cmp $0x0,0xd(%rsp)
951e(2): jz 0x12(%rip)
9520(2): test %al,%al
9522(5): mov $0x4,%eax
9527(5): cmove 0x8(%rsp),%eax
952c(4): mov %eax,0x8(%rsp)
9530(4): sub $0x8,%rsp
9534(3): mov %rbp,%rcx
9537(3): mov %r13,%rsi
953a(4): push 0x68(%rsp)
953e(4): push 0x78(%rsp)
9542(3): mov %r14,%rdi
9545(2): push $0x0
9547(8): mov 0x98(%rsp),%r9d
954f(5): mov 0x28(%rsp),%r8d
9554(5): mov 0x30(%rsp),%rdx
9559(4): and $0xfd,%r9d
955d(5): call 0xfffff433(%rip)
9562(4): add $0x20,%rsp
9566(3): mov %rax,%r15
9569(8): mov 0xa8(%rsp),%rbx
9571(9): xor $0x28,%rbx
957a(3): mov %r15,%rax
957d(6): jnz 0x606(%rip)
9583(7): add $0xb8,%rsp
958a(1): pop %rbx
958b(1): pop %rbp
958c(2): pop %r12
958e(2): pop %r13
9590(2): pop %r14
9592(2): pop %r15
9594(1): ret near (%rsp)
9595(3): nop (%rax)
9598(3): mov %r11,%rbp
959b(5): jmp 0xffffff7e(%rip)
95a0(3): cmp %r15,%r13
95a3(2): jbe 0x7(%rip)
95a5(5): mov $0x27,0x0(%r14,%r15,1)
95aa(4): lea 0x1(%r15),%rax
95ae(3): cmp %rax,%r13
95b1(2): jbe 0x8(%rip)
95b3(6): mov $0x5c,0x1(%r14,%r15,1)
95b9(4): lea 0x2(%r15),%rax
95bd(3): cmp %rax,%r13
95c0(6): jbe 0x5f2(%rip)
95c6(3): mov %r13,%rdx
95c9(6): mov $0x27,0x2(%r14,%r15,1)
95cf(5): mov 0x50(%rsp),%r13
95d4(5): jmp 0xfffffbde(%rip)
95d9(3): mov %r12d,%eax
95dc(5): mov $0x30,%ebx
95e1(3): xor %r12d,%r12d
95e4(5): jmp 0xfffff605(%rip)
95e9(6): mov $0x27,0x2(%r14,%r15,1)
95ef(5): jmp 0xfffff9ca(%rip)
95f4(2): test %ebx,%ebx
95f6(6): jnz 0xfffff42d(%rip)
95fc(5): mov $0x1,0xd(%rsp)
9601(3): test %r13,%r13
9604(6): jnz 0x596(%rip)
960a(7): lea 0x74f5(%rip),%rax
9611(9): mov $0x0,0x50(%rsp)
961a(5): mov $0x1,0xe(%rsp)
961f(5): mov $0x0,0x7c(%rsp)
9624(3): xor %r12d,%r12d
9627(5): mov $0x0,0xf(%rsp)
962c(9): mov $0x1,0x18(%rsp)
9635(5): mov %rax,0x48(%rsp)
963a(6): mov $0x1,%r15d
9640(8): mov $0x2,0x8(%rsp)
9648(5): jmp 0xfffff41b(%rip)
964d(3): nop (%rax)
9650(2): test %ebx,%ebx
9652(6): jnz 0x3fb(%rip)
9658(3): test %r13,%r13
965b(6): jz 0x22b(%rip)
9661(4): mov $0x22,(%r14)
9665(5): mov $0x1,0xe(%rsp)
966a(3): xor %r12d,%r12d
966d(5): mov $0x0,0x7c(%rsp)
9672(9): mov $0x0,0x50(%rsp)
967b(7): lea 0x5996(%rip),%rax
9682(5): mov $0x0,0xf(%rsp)
9687(5): mov $0x1,0xd(%rsp)
968c(9): mov $0x1,0x18(%rsp)
9695(6): mov $0x1,%r15d
969b(5): mov %rax,0x48(%rsp)
96a0(5): jmp 0xfffff3c3(%rip)
96a5(7): lea 0x596c(%rip),%rax
96ac(5): mov $0x1,0xe(%rsp)
96b1(5): mov $0x0,0x7c(%rsp)
96b6(3): xor %r12d,%r12d
96b9(9): mov $0x0,0x50(%rsp)
96c2(5): mov $0x1,0xf(%rsp)
96c7(5): mov $0x1,0xd(%rsp)
96cc(9): mov $0x1,0x18(%rsp)
96d5(3): xor %r15d,%r15d
96d8(5): mov %rax,0x48(%rsp)
96dd(8): mov $0x5,0x8(%rsp)
96e5(5): jmp 0xfffff37e(%rip)
96ea(5): mov $0x1,0xe(%rsp)
96ef(5): mov $0x0,0x7c(%rsp)
96f4(3): xor %r12d,%r12d
96f7(9): mov $0x0,0x50(%rsp)
9700(5): mov $0x0,0xf(%rsp)
9705(3): xor %r15d,%r15d
9708(5): mov $0x1,0xd(%rsp)
970d(9): mov $0x0,0x18(%rsp)
9716(9): mov $0x0,0x48(%rsp)
971f(5): jmp 0xfffff344(%rip)
9724(5): cmp $0xa,0x8(%rsp)
9729(2): jz 0x58(%rip)
972b(7): lea 0x69b1(%rip),%rsi
9732(2): xor %edi,%edi
9734(5): mov $0x5,%edx
9739(5): call 0xffff8a57(%rip)
973e(3): mov %rax,%rcx
9741(5): mov %rax,0x68(%rsp)
9746(7): lea 0x6996(%rip),%rax
974d(3): cmp %rax,%rcx
9750(6): jz 0x39e(%rip)
9756(7): lea 0x73a9(%rip),%rsi
975d(2): xor %edi,%edi
975f(5): mov $0x5,%edx
9764(5): call 0xffff8a2c(%rip)
9769(3): mov %rax,%rcx
976c(5): mov %rax,0x60(%rsp)
9771(7): lea 0x738e(%rip),%rax
9778(3): cmp %rax,%rcx
977b(6): jz 0x389(%rip)
9781(3): xor %r15d,%r15d
9784(2): test %ebx,%ebx
9786(6): jz 0x1c7(%rip)
978c(2): test %ebx,%ebx
978e(5): mov 0x60(%rsp),%rbx
9793(5): setnz 0xf(%rsp)
9798(3): xor %r12d,%r12d
979b(3): mov %rbx,%rdi
979e(5): call 0xffff8a12(%rip)
97a3(5): mov %rbx,0x48(%rsp)
97a8(5): mov %rax,0x18(%rsp)
97ad(5): mov $0x1,0xe(%rsp)
97b2(5): mov $0x0,0x7c(%rsp)
97b7(9): mov $0x0,0x50(%rsp)
97c0(5): mov $0x1,0xd(%rsp)
97c5(5): jmp 0xfffff29e(%rip)
97ca(5): mov $0x1,0xe(%rsp)
97cf(5): mov $0x0,0x7c(%rsp)
97d4(3): xor %r12d,%r12d
97d7(9): mov $0x0,0x50(%rsp)
97e0(5): mov $0x0,0xf(%rsp)
97e5(3): xor %r15d,%r15d
97e8(5): mov $0x0,0xd(%rsp)
97ed(9): mov $0x0,0x18(%rsp)
97f6(9): mov $0x0,0x48(%rsp)
97ff(5): jmp 0xfffff264(%rip)
9804(5): mov $0x1,0xe(%rsp)
9809(5): mov $0x0,0x7c(%rsp)
980e(3): xor %r12d,%r12d
9811(9): mov $0x0,0x50(%rsp)
981a(5): mov $0x1,0xf(%rsp)
981f(5): mov $0x1,0xd(%rsp)
9824(5): jmp 0xfffff21f(%rip)
9829(3): cmp %r15,%r13
982c(2): jbe 0x7(%rip)
982e(5): mov $0x30,0x0(%r14,%r15,1)
9833(4): lea 0x2(%rcx),%rax
9837(3): cmp %rax,%r13
983a(2): jbe 0x8(%rip)
983c(6): mov $0x30,0x2(%r14,%rcx,1)
9842(3): mov %r12d,%eax
9845(4): lea 0x3(%rcx),%r15
9849(3): xor %r12d,%r12d
984c(5): mov $0x30,%ebx
9851(5): jmp 0xfffff367(%rip)
9856(a): nop 0x0(%rax,%rax,1)
9860(5): movzx 0xf(%rsp),%ebx
9865(3): mov %r11,%rbp
9868(4): mov %bl,0xd(%rsp)
986c(5): jmp 0xfffffcad(%rip)
9871(5): movzx 0xd(%rsp),%edx
9876(3): xor %r12d,%r12d
9879(5): jmp 0xfffffb07(%rip)
987e(3): xor %r10d,%r10d
9881(5): jmp 0xfffffbbc(%rip)
9886(9): mov $0x0,0x50(%rsp)
988f(5): mov $0x1,0xe(%rsp)
9894(3): xor %r12d,%r12d
9897(5): mov $0x0,0x7c(%rsp)
989c(5): jmp 0xfffffddf(%rip)
98a1(5): mov 0x30(%rsp),%r11
98a6(3): mov %r14,%rsi
98a9(3): mov %r13,%rcx
98ac(3): mov %rbx,%rax
98af(3): mov %rbx,%rdi
98b2(6): movzx 0x7d(%rsp),%r8d
98b8(5): movzx 0x7e(%rsp),%ebx
98bd(8): mov 0x88(%rsp),%r9
98c5(3): cmp %r11,%rsi
98c8(6): movzx 0x7f(%rsp),%r10d
98ce(8): mov 0x80(%rsp),%r15
98d6(5): mov 0x40(%rsp),%r14
98db(5): mov 0x70(%rsp),%r13
98e0(2): jnb 0x28(%rip)
98e2(3): cmp $0x0,(%rcx)
98e5(2): jnz 0x12(%rip)
98e7(2): jmp 0x21(%rip)
98e9(7): nop 0x0(%rax)
98f0(5): cmp $0x0,0x0(%r9,%rax,1)
98f5(2): jz 0x10(%rip)
98f7(4): add $0x1,%rax
98fb(5): lea 0x0(%rbp,%rax,1),%rdx
9900(3): cmp %rdx,%r11
9903(2): jnbe 0xffffffed(%rip)
9905(3): mov %rax,%rdi
9908(5): movzx 0xd(%rsp),%edx
990d(3): xor %r12d,%r12d
9910(5): jmp 0xfffffa66(%rip)
9915(3): mov %rbx,%rdi
9918(6): movzx 0x7d(%rsp),%r8d
991e(5): movzx 0x7e(%rsp),%ebx
9923(6): movzx 0x7f(%rsp),%r10d
9929(8): mov 0x80(%rsp),%r15
9931(3): xor %r12d,%r12d
9934(5): mov 0x40(%rsp),%r14
9939(5): mov 0x70(%rsp),%r13
993e(5): mov 0x30(%rsp),%r11
9943(5): movzx 0xd(%rsp),%edx
9948(5): jmp 0xfffffa2e(%rip)
994d(5): mov 0x68(%rsp),%rdx
9952(3): movzx (%rdx),%eax
9955(2): test %al,%al
9957(6): jz 0xfffffe35(%rip)
995d(3): nop (%rax)
9960(3): cmp %r15,%r13
9963(2): jbe 0x6(%rip)
9965(4): mov %al,0x0(%r14,%r15,1)
9969(4): add $0x1,%r15
996d(5): movzx 0x0(%rdx,%r15,1),%eax
9972(2): test %al,%al
9974(2): jnz 0xffffffec(%rip)
9976(5): jmp 0xfffffe16(%rip)
997b(2): mov %edx,%eax
997d(5): jmp 0xfffff55a(%rip)
9982(4): movzx 0x0(%rax,%rcx,1),%ebx
9986(3): cmp $0x3e,%bl
9989(6): jnbe 0xfffff877(%rip)
998f(a): mov $0x8070630310989004800,%rax
9999(4): bt %rbx,%rax
999d(6): jnb 0xfffff863(%rip)
99a3(5): cmp $0x0,0xf(%rsp)
99a8(6): jnz 0x1ea(%rip)
99ae(3): cmp %r15,%r13
99b1(2): jbe 0x7(%rip)
99b3(5): mov $0x3f,0x0(%r14,%r15,1)
99b8(4): lea 0x1(%r15),%rax
99bc(3): cmp %rax,%r13
99bf(2): jbe 0x8(%rip)
99c1(6): mov $0x22,0x1(%r14,%r15,1)
99c7(4): lea 0x2(%r15),%rax
99cb(3): cmp %rax,%r13
99ce(2): jbe 0x8(%rip)
99d0(6): mov $0x22,0x2(%r14,%r15,1)
99d6(4): lea 0x3(%r15),%rax
99da(3): cmp %rax,%r13
99dd(2): jbe 0x8(%rip)
99df(6): mov $0x3f,0x3(%r14,%r15,1)
99e5(4): add $0x4,%r15
99e9(2): xor %edx,%edx
99eb(3): xor %r12d,%r12d
99ee(2): xor %eax,%eax
99f0(3): mov %rcx,%rbp
99f3(5): jmp 0xfffff1c5(%rip)
99f8(2): test %ebx,%ebx
99fa(6): jz 0x18e(%rip)
9a00(7): lea 0x70ff(%rip),%rax
9a07(5): mov $0x1,0xe(%rsp)
9a0c(5): mov $0x0,0x7c(%rsp)
9a11(3): xor %r12d,%r12d
9a14(9): mov $0x0,0x50(%rsp)
9a1d(5): mov $0x1,0xf(%rsp)
9a22(5): mov $0x0,0xd(%rsp)
9a27(9): mov $0x1,0x18(%rsp)
9a30(3): xor %r15d,%r15d
9a33(5): mov %rax,0x48(%rsp)
9a38(5): jmp 0xfffff02b(%rip)
9a3d(3): nop (%rax)
9a40(3): mov %r11,%rbp
9a43(5): movzx 0xf(%rsp),%eax
9a48(5): jmp 0xfffffad1(%rip)
9a4d(7): lea 0x55c4(%rip),%rax
9a54(5): mov $0x1,0xe(%rsp)
9a59(5): mov $0x0,0x7c(%rsp)
9a5e(3): xor %r12d,%r12d
9a61(9): mov $0x0,0x50(%rsp)
9a6a(5): mov $0x1,0xf(%rsp)
9a6f(5): mov $0x1,0xd(%rsp)
9a74(9): mov $0x1,0x18(%rsp)
9a7d(3): xor %r15d,%r15d
9a80(5): mov %rax,0x48(%rsp)
9a85(5): jmp 0xffffefde(%rip)
9a8a(2): mov %edx,%eax
9a8c(5): mov 0x48(%rsp),%rbx
9a91(3): test %rbx,%rbx
9a94(2): jz 0x2e(%rip)
9a96(2): test %al,%al
9a98(2): jz 0x2a(%rip)
9a9a(3): movzx (%rbx),%ecx
9a9d(3): mov %rbx,%rax
9aa0(2): test %cl,%cl
9aa2(2): jz 0x20(%rip)
9aa4(3): mov %r15,%rdx
9aa7(3): sub %r15,%rax
9aaa(3): cmp %rdx,%r13
9aad(2): jbe 0x6(%rip)
9aaf(4): mov %cl,0x0(%r14,%rdx,1)
9ab3(4): add $0x1,%rdx
9ab7(4): movzx 0x0(%rax,%rdx,1),%ecx
9abb(2): test %cl,%cl
9abd(2): jnz 0xffffffed(%rip)
9abf(3): mov %rdx,%r15
9ac2(3): cmp %r15,%r13
9ac5(6): jbe 0xfffffaa4(%rip)
9acb(5): mov $0x0,0x0(%r14,%r15,1)
9ad0(5): jmp 0xfffffa99(%rip)
9ad5(5): cmp $0x2,0x8(%rsp)
9ada(5): movzx 0xf(%rsp),%ebx
9adf(3): mov %r11,%rbp
9ae2(3): setz %al
9ae5(4): mov %bl,0xd(%rsp)
9ae9(5): jmp 0xfffffa30(%rip)
9aee(4): mov 0x8(%rsp),%esi
9af2(3): mov %rcx,%rdi
9af5(5): call 0xffffedab(%rip)
9afa(5): mov %rax,0x68(%rsp)
9aff(5): jmp 0xfffffc57(%rip)
9b04(4): mov 0x8(%rsp),%esi
9b08(3): mov %rcx,%rdi
9b0b(5): call 0xffffed95(%rip)
9b10(5): mov %rax,0x60(%rsp)
9b15(5): jmp 0xfffffc6c(%rip)
9b1a(5): movzx 0xf(%rsp),%ebx
9b1f(3): mov %r11,%rbp
9b22(2): mov %edx,%eax
9b24(4): mov %bl,0xd(%rsp)
9b28(5): jmp 0xfffff9f1(%rip)
9b2d(4): sub $0x8,%rsp
9b31(6): mov $0x5,%r8d
9b37(3): mov %r11,%rcx
9b3a(4): push 0x68(%rsp)
9b3e(4): push 0x78(%rsp)
9b42(3): mov %r14,%rdi
9b45(4): push 0x38(%rsp)
9b49(8): mov 0x98(%rsp),%r9d
9b51(5): mov 0x30(%rsp),%rdx
9b56(5): mov 0x70(%rsp),%rsi
9b5b(5): call 0xffffee35(%rip)
9b60(4): add $0x20,%rsp
9b64(3): mov %rax,%r15
9b67(5): jmp 0xfffffa02(%rip)
9b6c(5): movzx 0x7c(%rsp),%eax
9b71(5): jmp 0xffffff1b(%rip)
9b76(8): mov $0x2,0x8(%rsp)
9b7e(5): jmp 0xfffff99b(%rip)
9b83(5): call 0xffff866d(%rip)
9b88(5): mov $0x0,0xd(%rsp)
9b8d(5): jmp 0xfffffa74(%rip)
9b92(3): mov %r11,%rbp
9b95(5): jmp 0xfffff99b(%rip)
9b9a(5): mov $0x1,0xe(%rsp)
9b9f(2): xor %eax,%eax
9ba1(3): xor %r12d,%r12d
9ba4(9): mov $0x0,0x50(%rsp)
9bad(5): jmp 0xfffff5a7(%rip)
9bb2(3): mov %r13,%rdx
9bb5(5): mov 0x50(%rsp),%r13
9bba(5): jmp 0xfffff5f8(%rip)
9bbf(5): call 0xffff84e1(%rip)

"quotearg_n_options" :
9bd0(2): push %r15
9bd2(2): push %r14
9bd4(3): movsxd %edi,%r15
9bd7(2): push %r13
9bd9(2): push %r12
9bdb(3): mov %rdx,%r14
9bde(1): push %rbp
9bdf(1): push %rbx
9be0(3): mov %rcx,%rbp
9be3(4): sub $0x28,%rsp
9be7(5): mov %rsi,0x8(%rsp)
9bec(5): call 0xffff84c4(%rip)
9bf1(3): mov %rax,%r13
9bf4(2): mov (%rax),%eax
9bf6(3): test %r15d,%r15d
9bf9(7): mov 0x20a6c0(%rip),%rbx
9c00(4): mov %eax,0x18(%rsp)
9c04(6): js 0x16d(%rip)
9c0a(7): cmp %r15d,0x20a6a7(%rip)
9c11(2): jnle 0x64(%rip)
9c13(7): cmp $0x7fffffff,%r15d
9c1a(6): jz 0x15c(%rip)
9c20(4): lea 0x1(%r15),%r12d
9c24(7): lea 0x20a6a5(%rip),%rax
9c2b(3): movsxd %r12d,%rsi
9c2e(4): shl/sal $0x4,%rsi
9c32(3): cmp %rax,%rbx
9c35(6): jz 0x11b(%rip)
9c3b(3): mov %rbx,%rdi
9c3e(5): call 0x11f2(%rip)
9c43(3): mov %rax,%rbx
9c46(7): mov %rax,0x20a673(%rip)
9c4d(7): movsxd 0x20a664(%rip),%rdi
9c54(3): mov %r12d,%edx
9c57(2): xor %esi,%esi
9c59(2): sub %edi,%edx
9c5b(4): shl/sal $0x4,%rdi
9c5f(3): movsxd %edx,%rdx
9c62(3): add %rbx,%rdi
9c65(4): shl/sal $0x4,%rdx
9c69(5): call 0xffff8637(%rip)
9c6e(7): mov %r12d,0x20a643(%rip)
9c75(3): mov 0x4(%rbp),%eax
9c78(4): shl/sal $0x4,%r15
9c7c(4): sub $0x8,%rsp
9c80(3): add %r15,%rbx
9c83(4): lea 0x8(%rbp),%r15
9c87(4): mov 0x0(%rbp),%r8d
9c8b(3): mov (%rbx),%r11
9c8e(4): mov 0x8(%rbx),%r12
9c92(3): mov %r14,%rcx
9c95(3): or $0x1,%eax
9c98(4): mov %eax,0x24(%rsp)
9c9c(3): push 0x30(%rbp)
9c9f(3): mov %eax,%r9d
9ca2(3): push 0x28(%rbp)
9ca5(2): push %r15
9ca7(3): mov %r11,%rsi
9caa(5): mov 0x28(%rsp),%rdx
9caf(3): mov %r12,%rdi
9cb2(5): mov %r11,0x30(%rsp)
9cb7(5): call 0xffffecd9(%rip)
9cbc(4): add $0x20,%rsp
9cc0(5): mov 0x10(%rsp),%r11
9cc5(3): cmp %rax,%r11
9cc8(2): jnbe 0x69(%rip)
9cca(4): lea 0x1(%rax),%rsi
9cce(7): lea 0x20a76b(%rip),%rax
9cd5(3): cmp %rax,%r12
9cd8(3): mov %rsi,(%rbx)
9cdb(2): jz 0x14(%rip)
9cdd(3): mov %r12,%rdi
9ce0(5): mov %rsi,0x10(%rsp)
9ce5(5): call 0xffff838b(%rip)
9cea(5): mov 0x10(%rsp),%rsi
9cef(3): mov %rsi,%rdi
9cf2(5): mov %rsi,0x10(%rsp)
9cf7(5): call 0x10d9(%rip)
9cfc(4): sub $0x8,%rsp
9d00(4): mov %rax,0x8(%rbx)
9d04(4): mov 0x0(%rbp),%r8d
9d08(3): push 0x30(%rbp)
9d0b(3): push 0x28(%rbp)
9d0e(3): mov %r14,%rcx
9d11(2): push %r15
9d13(5): mov 0x3c(%rsp),%r9d
9d18(3): mov %rax,%rdi
9d1b(5): mov 0x28(%rsp),%rdx
9d20(5): mov 0x30(%rsp),%rsi
9d25(3): mov %rax,%r12
9d28(5): call 0xffffec68(%rip)
9d2d(4): add $0x20,%rsp
9d31(4): mov 0x18(%rsp),%eax
9d35(4): mov %eax,0x0(%r13)
9d39(4): add $0x28,%rsp
9d3d(3): mov %r12,%rax
9d40(1): pop %rbx
9d41(1): pop %rbp
9d42(2): pop %r12
9d44(2): pop %r13
9d46(2): pop %r14
9d48(2): pop %r15
9d4a(1): ret near (%rsp)
9d4b(5): nop 0x0(%rax,%rax,1)
9d50(2): xor %edi,%edi
9d52(5): call 0x10de(%rip)
9d57(8): movdqa 0x20a571(%rip),%xmm0
9d5f(3): mov %rax,%rbx
9d62(7): mov %rax,0x20a557(%rip)
9d69(3): movups %xmm0,(%rax)
9d6c(5): jmp 0xfffffee1(%rip)
9d71(5): call 0xffff832f(%rip)
9d76(5): call 0x12aa(%rip)

"clone_quoting_options" :
9d80(2): push %r12
9d82(1): push %rbp
9d83(1): push %rbx
9d84(3): mov %rdi,%rbx
9d87(5): call 0xffff8329(%rip)
9d8c(3): mov (%rax),%r12d
9d8f(3): mov %rax,%rbp
9d92(7): lea 0x20a7a7(%rip),%rax
9d99(3): test %rbx,%rbx
9d9c(5): mov $0x38,%esi
9da1(4): cmove %rax,%rbx
9da5(3): mov %rbx,%rdi
9da8(5): call 0x1228(%rip)
9dad(4): mov %r12d,0x0(%rbp)
9db1(1): pop %rbx
9db2(1): pop %rbp
9db3(2): pop %r12
9db5(1): ret near (%rsp)

"get_quoting_style" :
9dc0(7): lea 0x20a779(%rip),%rax
9dc7(3): test %rdi,%rdi
9dca(4): cmove %rax,%rdi
9dce(2): mov (%rdi),%eax
9dd0(1): ret near (%rsp)

"set_quoting_style" :
9de0(7): lea 0x20a759(%rip),%rax
9de7(3): test %rdi,%rdi
9dea(4): cmove %rax,%rdi
9dee(2): mov %esi,(%rdi)
9df0(1): ret near (%rsp)

"set_char_quoting" :
9e00(7): lea 0x20a739(%rip),%rax
9e07(3): test %rdi,%rdi
9e0a(2): mov %esi,%ecx
9e0c(4): cmove %rax,%rdi
9e10(2): mov %esi,%eax
9e12(3): and $0x1f,%ecx
9e15(3): shr $0x5,%al
9e18(3): movzx %al,%eax
9e1b(5): lea 0x8(%rdi,%rax,4),%rdi
9e20(2): mov (%rdi),%esi
9e22(2): mov %esi,%eax
9e24(2): shr %cl,%eax
9e26(2): xor %eax,%edx
9e28(3): and $0x1,%eax
9e2b(3): and $0x1,%edx
9e2e(2): shl/sal %cl,%edx
9e30(2): xor %esi,%edx
9e32(2): mov %edx,(%rdi)
9e34(1): ret near (%rsp)

"set_quoting_flags" :
9e40(7): lea 0x20a6f9(%rip),%rax
9e47(3): test %rdi,%rdi
9e4a(4): cmove %rax,%rdi
9e4e(3): mov 0x4(%rdi),%eax
9e51(3): mov %esi,0x4(%rdi)
9e54(1): ret near (%rsp)

"set_custom_quoting" :
9e60(7): lea 0x20a6d9(%rip),%rax
9e67(3): test %rdi,%rdi
9e6a(4): cmove %rax,%rdi
9e6e(3): test %rsi,%rsi
9e71(6): mov $0xa,(%rdi)
9e77(2): jz 0x10(%rip)
9e79(3): test %rdx,%rdx
9e7c(2): jz 0xb(%rip)
9e7e(4): mov %rsi,0x28(%rdi)
9e82(4): mov %rdx,0x30(%rdi)
9e86(1): ret near (%rsp)
9e87(4): sub $0x8,%rsp
9e8b(5): call 0xffff8215(%rip)

"quotearg_buffer" :
9e90(2): push %r15
9e92(2): push %r14
9e94(7): lea 0x20a6a5(%rip),%rax
9e9b(2): push %r13
9e9d(2): push %r12
9e9f(3): mov %rdi,%r13
9ea2(1): push %rbp
9ea3(1): push %rbx
9ea4(3): mov %r8,%rbx
9ea7(3): mov %rsi,%r14
9eaa(3): mov %rdx,%r15
9ead(4): sub $0x18,%rsp
9eb1(3): test %r8,%r8
9eb4(4): cmove %rax,%rbx
9eb8(5): mov %rcx,0x8(%rsp)
9ebd(5): call 0xffff81f3(%rip)
9ec2(3): mov (%rax),%r12d
9ec5(3): mov %rax,%rbp
9ec8(4): lea 0x8(%rbx),%rax
9ecc(4): sub $0x8,%rsp
9ed0(4): mov 0x4(%rbx),%r9d
9ed4(3): push 0x30(%rbx)
9ed7(3): mov (%rbx),%r8d
9eda(3): push 0x28(%rbx)
9edd(3): mov %r15,%rdx
9ee0(1): push %rax
9ee1(5): mov 0x28(%rsp),%rcx
9ee6(3): mov %r14,%rsi
9ee9(3): mov %r13,%rdi
9eec(5): call 0xffffeaa4(%rip)
9ef1(4): mov %r12d,0x0(%rbp)
9ef5(4): add $0x38,%rsp
9ef9(1): pop %rbx
9efa(1): pop %rbp
9efb(2): pop %r12
9efd(2): pop %r13
9eff(2): pop %r14
9f01(2): pop %r15
9f03(1): ret near (%rsp)

"quotearg_alloc_mem" :
9f10(2): push %r15
9f12(2): push %r14
9f14(7): lea 0x20a625(%rip),%rax
9f1b(2): push %r13
9f1d(2): push %r12
9f1f(3): mov %rdx,%r12
9f22(1): push %rbp
9f23(1): push %rbx
9f24(3): mov %rcx,%rbx
9f27(3): mov %rdi,%r14
9f2a(3): mov %rsi,%r15
9f2d(4): sub $0x38,%rsp
9f31(3): test %rcx,%rcx
9f34(4): cmove %rax,%rbx
9f38(2): xor %ebp,%ebp
9f3a(5): call 0xffff8176(%rip)
9f3f(3): test %r12,%r12
9f42(3): mov %rax,%r13
9f45(2): mov (%rax),%eax
9f47(4): setz %bpl
9f4b(3): or 0x4(%rbx),%ebp
9f4e(4): lea 0x8(%rbx),%r10
9f52(4): sub $0x8,%rsp
9f56(3): mov (%rbx),%r8d
9f59(3): mov %r15,%rcx
9f5c(4): mov %eax,0x14(%rsp)
9f60(3): push 0x30(%rbx)
9f63(3): mov %r14,%rdx
9f66(3): push 0x28(%rbx)
9f69(2): push %r10
9f6b(2): xor %esi,%esi
9f6d(3): mov %ebp,%r9d
9f70(2): xor %edi,%edi
9f72(5): mov %r10,0x40(%rsp)
9f77(5): call 0xffffea19(%rip)
9f7c(4): lea 0x1(%rax),%rsi
9f80(5): mov %rax,0x48(%rsp)
9f85(4): add $0x20,%rsp
9f89(3): mov %rsi,%rdi
9f8c(5): mov %rsi,0x18(%rsp)
9f91(5): call 0xe3f(%rip)
9f96(5): mov %rax,0x10(%rsp)
9f9b(4): sub $0x8,%rsp
9f9f(3): push 0x30(%rbx)
9fa2(3): push 0x28(%rbx)
9fa5(5): mov 0x38(%rsp),%r10
9faa(3): mov %ebp,%r9d
9fad(3): mov (%rbx),%r8d
9fb0(3): mov %r15,%rcx
9fb3(3): mov %r14,%rdx
9fb6(3): mov %rax,%rdi
9fb9(2): push %r10
9fbb(5): mov 0x38(%rsp),%rsi
9fc0(5): call 0xffffe9d0(%rip)
9fc5(4): mov 0x2c(%rsp),%eax
9fc9(4): add $0x20,%rsp
9fcd(3): test %r12,%r12
9fd0(4): mov %eax,0x0(%r13)
9fd4(2): jz 0xb(%rip)
9fd6(5): mov 0x28(%rsp),%r11
9fdb(4): mov %r11,(%r12)
9fdf(5): mov 0x10(%rsp),%rax
9fe4(4): add $0x38,%rsp
9fe8(1): pop %rbx
9fe9(1): pop %rbp
9fea(2): pop %r12
9fec(2): pop %r13
9fee(2): pop %r14
9ff0(2): pop %r15
9ff2(1): ret near (%rsp)

"quotearg_alloc" :
a000(3): mov %rdx,%rcx
a003(2): xor %edx,%edx
a005(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
a010(6): mov 0x20a2a2(%rip),%eax
a016(2): push %r12
a018(7): mov 0x20a2a1(%rip),%r12
a01f(1): push %rbp
a020(1): push %rbx
a021(3): cmp $0x1,%eax
a024(2): jle 0x2d(%rip)
a026(3): sub $0x2,%eax
a029(5): lea 0x18(%r12),%rbx
a02e(4): shl/sal $0x4,%rax
a032(5): lea 0x28(%r12,%rax,1),%rbp
a037(9): nop 0x0(%rax,%rax,1)
a040(3): mov (%rbx),%rdi
a043(4): add $0x10,%rbx
a047(5): call 0xffff8029(%rip)
a04c(3): cmp %rbp,%rbx
a04f(2): jnz 0xfffffff1(%rip)
a051(5): mov 0x8(%r12),%rdi
a056(7): lea 0x20a3e3(%rip),%rbx
a05d(3): cmp %rbx,%rdi
a060(2): jz 0x19(%rip)
a062(5): call 0xffff800e(%rip)
a067(b): mov $0x100,0x20a25e(%rip)
a072(7): mov %rbx,0x20a25f(%rip)
a079(7): lea 0x20a250(%rip),%rbx
a080(3): cmp %rbx,%r12
a083(2): jz 0x11(%rip)
a085(3): mov %r12,%rdi
a088(5): call 0xffff7fe8(%rip)
a08d(7): mov %rbx,0x20a22c(%rip)
a094(1): pop %rbx
a095(a): mov $0x1,0x20a219(%rip)
a09f(1): pop %rbp
a0a0(2): pop %r12
a0a2(1): ret near (%rsp)

"quotearg_n" :
a0b0(7): lea 0x20a489(%rip),%rcx
a0b7(7): mov $0xffffffff,%rdx
a0be(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
a0d0(7): lea 0x20a469(%rip),%rcx
a0d7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
a0e0(7): lea 0x20a459(%rip),%rcx
a0e7(3): mov %rdi,%rsi
a0ea(7): mov $0xffffffff,%rdx
a0f1(2): xor %edi,%edi
a0f3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
a100(7): lea 0x20a439(%rip),%rcx
a107(3): mov %rsi,%rdx
a10a(3): mov %rdi,%rsi
a10d(2): xor %edi,%edi
a10f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
a120(4): sub $0x48,%rsp
a124(3): mov %rdx,%rax
a127(9): mov $0x28,%rdx
a130(5): mov %rdx,0x38(%rsp)
a135(2): xor %edx,%edx
a137(3): cmp $0xa,%esi
a13a(2): jz 0x6a(%rip)
a13c(3): mov %esi,(%rsp)
a13f(3): mov %rsp,%rcx
a142(7): mov $0xffffffff,%rdx
a149(3): mov %rax,%rsi
a14c(9): mov $0x0,0x4(%rsp)
a155(9): mov $0x0,0xc(%rsp)
a15e(9): mov $0x0,0x14(%rsp)
a167(9): mov $0x0,0x1c(%rsp)
a170(9): mov $0x0,0x24(%rsp)
a179(9): mov $0x0,0x2c(%rsp)
a182(8): mov $0x0,0x34(%rsp)
a18a(5): call 0xfffffa46(%rip)
a18f(5): mov 0x38(%rsp),%rcx
a194(9): xor $0x28,%rcx
a19d(2): jnz 0xc(%rip)
a19f(4): add $0x48,%rsp
a1a3(1): ret near (%rsp)
a1a4(5): call 0xffff7efc(%rip)
a1a9(5): call 0xffff8047(%rip)

"quotearg_n_style_mem" :
a1b0(4): sub $0x48,%rsp
a1b4(3): mov %rdx,%rax
a1b7(3): mov %rcx,%rdx
a1ba(9): mov $0x28,%rcx
a1c3(5): mov %rcx,0x38(%rsp)
a1c8(2): xor %ecx,%ecx
a1ca(3): cmp $0xa,%esi
a1cd(2): jz 0x63(%rip)
a1cf(3): mov %esi,(%rsp)
a1d2(3): mov %rsp,%rcx
a1d5(3): mov %rax,%rsi
a1d8(9): mov $0x0,0x4(%rsp)
a1e1(9): mov $0x0,0xc(%rsp)
a1ea(9): mov $0x0,0x14(%rsp)
a1f3(9): mov $0x0,0x1c(%rsp)
a1fc(9): mov $0x0,0x24(%rsp)
a205(9): mov $0x0,0x2c(%rsp)
a20e(8): mov $0x0,0x34(%rsp)
a216(5): call 0xfffff9ba(%rip)
a21b(5): mov 0x38(%rsp),%rdx
a220(9): xor $0x28,%rdx
a229(2): jnz 0xc(%rip)
a22b(4): add $0x48,%rsp
a22f(1): ret near (%rsp)
a230(5): call 0xffff7e70(%rip)
a235(5): call 0xffff7fbb(%rip)

"quotearg_style" :
a240(3): mov %rsi,%rdx
a243(2): mov %edi,%esi
a245(2): xor %edi,%edi
a247(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
a250(3): mov %rdx,%rcx
a253(3): mov %rsi,%rdx
a256(2): mov %edi,%esi
a258(2): xor %edi,%edi
a25a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
a260(4): sub $0x48,%rsp
a264(2): mov %edx,%ecx
a266(9): mov $0x28,%rax
a26f(5): mov %rax,0x38(%rsp)
a274(2): xor %eax,%eax
a276(7): mov 0x20a2f3(%rip),%rax
a27d(3): mov %rsp,%r8
a280(3): and $0x1f,%ecx
a283(8): movdqa 0x20a2b5(%rip),%xmm0
a28b(5): mov %rax,0x30(%rsp)
a290(2): mov %edx,%eax
a292(4): movaps %xmm0,(%rsp)
a296(3): shr $0x5,%al
a299(3): movzx %al,%eax
a29c(5): lea 0x8(%r8,%rax,4),%r9
a2a1(8): movdqa 0x20a2a7(%rip),%xmm0
a2a9(5): movaps %xmm0,0x10(%rsp)
a2ae(8): movdqa 0x20a2aa(%rip),%xmm0
a2b6(5): movaps %xmm0,0x20(%rsp)
a2bb(3): mov (%r9),%edx
a2be(2): mov %edx,%eax
a2c0(2): shr %cl,%eax
a2c2(2): not %eax
a2c4(3): and $0x1,%eax
a2c7(2): shl/sal %cl,%eax
a2c9(3): mov %r8,%rcx
a2cc(2): xor %edx,%eax
a2ce(3): mov %rsi,%rdx
a2d1(3): mov %rdi,%rsi
a2d4(3): mov %eax,(%r9)
a2d7(2): xor %edi,%edi
a2d9(5): call 0xfffff8f7(%rip)
a2de(5): mov 0x38(%rsp),%rsi
a2e3(9): xor $0x28,%rsi
a2ec(2): jnz 0x7(%rip)
a2ee(4): add $0x48,%rsp
a2f2(1): ret near (%rsp)
a2f3(5): call 0xffff7efd(%rip)

"quotearg_char" :
a300(4): movsx %sil,%edx
a304(7): mov $0xffffffff,%rsi
a30b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
a310(5): mov $0x3a,%edx
a315(7): mov $0xffffffff,%rsi
a31c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
a330(5): mov $0x3a,%edx
a335(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
a340(4): sub $0x48,%rsp
a344(3): mov %rdx,%rax
a347(9): mov $0x28,%rdx
a350(5): mov %rdx,0x38(%rsp)
a355(2): xor %edx,%edx
a357(3): cmp $0xa,%esi
a35a(2): jz 0x6a(%rip)
a35c(3): mov %esi,(%rsp)
a35f(3): mov %rsp,%rcx
a362(7): mov $0xffffffff,%rdx
a369(3): mov %rax,%rsi
a36c(9): mov $0x0,0x4(%rsp)
a375(9): mov $0x4000000,0xc(%rsp)
a37e(9): mov $0x0,0x14(%rsp)
a387(9): mov $0x0,0x1c(%rsp)
a390(9): mov $0x0,0x24(%rsp)
a399(9): mov $0x0,0x2c(%rsp)
a3a2(8): mov $0x0,0x34(%rsp)
a3aa(5): call 0xfffff826(%rip)
a3af(5): mov 0x38(%rsp),%rcx
a3b4(9): xor $0x28,%rcx
a3bd(2): jnz 0xc(%rip)
a3bf(4): add $0x48,%rsp
a3c3(1): ret near (%rsp)
a3c4(5): call 0xffff7cdc(%rip)
a3c9(5): call 0xffff7e27(%rip)

"quotearg_n_custom_mem" :
a3d0(4): sub $0x48,%rsp
a3d4(3): mov %rcx,%r9
a3d7(7): mov 0x20a192(%rip),%rcx
a3de(8): movdqa 0x20a15a(%rip),%xmm0
a3e6(9): mov $0x28,%rax
a3ef(5): mov %rax,0x38(%rsp)
a3f4(2): xor %eax,%eax
a3f6(4): movaps %xmm0,(%rsp)
a3fa(3): test %rsi,%rsi
a3fd(5): mov %rcx,0x30(%rsp)
a402(7): mov $0xa,(%rsp)
a409(8): movdqa 0x20a13f(%rip),%xmm0
a411(5): movaps %xmm0,0x10(%rsp)
a416(8): movdqa 0x20a142(%rip),%xmm0
a41e(5): movaps %xmm0,0x20(%rsp)
a423(2): jz 0x34(%rip)
a425(3): test %rdx,%rdx
a428(2): jz 0x2f(%rip)
a42a(5): mov %rsi,0x28(%rsp)
a42f(5): mov %rdx,0x30(%rsp)
a434(3): mov %rsp,%rcx
a437(3): mov %r8,%rdx
a43a(3): mov %r9,%rsi
a43d(5): call 0xfffff793(%rip)
a442(5): mov 0x38(%rsp),%rdi
a447(9): xor $0x28,%rdi
a450(2): jnz 0xc(%rip)
a452(4): add $0x48,%rsp
a456(1): ret near (%rsp)
a457(5): call 0xffff7c49(%rip)
a45c(5): call 0xffff7d94(%rip)

"quotearg_n_custom" :
a470(7): mov $0xffffffff,%r8
a477(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
a480(3): mov %rdx,%rcx
a483(7): mov $0xffffffff,%r8
a48a(3): mov %rsi,%rdx
a48d(3): mov %rdi,%rsi
a490(2): xor %edi,%edi
a492(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
a4a0(3): mov %rcx,%r8
a4a3(3): mov %rdx,%rcx
a4a6(3): mov %rsi,%rdx
a4a9(3): mov %rdi,%rsi
a4ac(2): xor %edi,%edi
a4ae(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
a4c0(7): lea 0x209db9(%rip),%rcx
a4c7(5): jmp 0xfffff709(%rip)

"quote_mem" :
a4d0(7): lea 0x209da9(%rip),%rcx
a4d7(3): mov %rsi,%rdx
a4da(3): mov %rdi,%rsi
a4dd(2): xor %edi,%edi
a4df(5): jmp 0xfffff6f1(%rip)

"quote_n" :
a4f0(7): lea 0x209d89(%rip),%rcx
a4f7(7): mov $0xffffffff,%rdx
a4fe(5): jmp 0xfffff6d2(%rip)

"quote" :
a510(7): lea 0x209d69(%rip),%rcx
a517(3): mov %rdi,%rsi
a51a(7): mov $0xffffffff,%rdx
a521(2): xor %edi,%edi
a523(5): jmp 0xfffff6ad(%rip)

"same_nameat.part.0" :
a530(2): push %r13
a532(2): push %r12
a534(3): mov %edi,%r13d
a537(1): push %rbp
a538(1): push %rbx
a539(3): mov %rsi,%rdi
a53c(2): mov %edx,%ebp
a53e(3): mov %rcx,%r12
a541(7): sub $0x138,%rsp
a548(9): mov $0x28,%rax
a551(8): mov %rax,0x128(%rsp)
a559(2): xor %eax,%eax
a55b(5): call 0xffffb8f5(%rip)
a560(3): mov %rsp,%rcx
a563(6): mov $0x100,%r8d
a569(3): mov %rax,%rdx
a56c(3): mov %r13d,%esi
a56f(5): mov $0x1,%edi
a574(3): mov %rax,%rbx
a577(5): call 0xffff7cb9(%rip)
a57c(2): test %eax,%eax
a57e(6): jnz 0xb2(%rip)
a584(3): mov %rbx,%rdi
a587(5): call 0xffff7ae9(%rip)
a58c(3): mov %r12,%rdi
a58f(5): call 0xffffb8c1(%rip)
a594(8): lea 0x90(%rsp),%rcx
a59c(6): mov $0x100,%r8d
a5a2(3): mov %rax,%rdx
a5a5(2): mov %ebp,%esi
a5a7(5): mov $0x1,%edi
a5ac(3): mov %rax,%rbx
a5af(5): call 0xffff7c81(%rip)
a5b4(2): test %eax,%eax
a5b6(2): jnz 0x52(%rip)
a5b8(2): xor %ebp,%ebp
a5ba(8): mov 0x98(%rsp),%rax
a5c2(5): cmp %rax,0x8(%rsp)
a5c7(2): jnz 0x12(%rip)
a5c9(8): mov 0x90(%rsp),%rax
a5d1(4): cmp %rax,(%rsp)
a5d5(4): setz %bpl
a5d9(3): mov %rbx,%rdi
a5dc(5): call 0xffff7a94(%rip)
a5e1(8): mov 0x128(%rsp),%rdx
a5e9(9): xor $0x28,%rdx
a5f2(2): mov %ebp,%eax
a5f4(2): jnz 0x5e(%rip)
a5f6(7): add $0x138,%rsp
a5fd(1): pop %rbx
a5fe(1): pop %rbp
a5ff(2): pop %r12
a601(2): pop %r13
a603(1): ret near (%rsp)
a604(4): nop 0x0(%rax)
a608(5): call 0xffff7aa8(%rip)
a60d(2): mov (%rax),%esi
a60f(7): lea 0x6661(%rip),%rdx
a616(3): mov %rbx,%rcx
a619(5): mov $0x1,%edi
a61e(2): xor %eax,%eax
a620(5): call 0xffff7e80(%rip)
a625(2): jmp 0xffffff93(%rip)
a627(9): nop 0x0(%rax,%rax,1)
a630(5): call 0xffff7a80(%rip)
a635(2): mov (%rax),%esi
a637(7): lea 0x6639(%rip),%rdx
a63e(3): mov %rbx,%rcx
a641(5): mov $0x1,%edi
a646(2): xor %eax,%eax
a648(5): call 0xffff7e58(%rip)
a64d(5): jmp 0xffffff37(%rip)
a652(5): call 0xffff7b9e(%rip)

"same_nameat" :
a660(2): push %r15
a662(2): push %r14
a664(3): mov %edx,%r15d
a667(2): push %r13
a669(2): push %r12
a66b(1): push %rbp
a66c(1): push %rbx
a66d(3): mov %rcx,%rbp
a670(3): mov %rsi,%rbx
a673(4): sub $0x18,%rsp
a677(4): mov %edi,0xc(%rsp)
a67b(3): mov %rsi,%rdi
a67e(5): call 0xffffb8b2(%rip)
a683(3): mov %rbp,%rdi
a686(3): mov %rax,%r12
a689(5): call 0xffffb8a7(%rip)
a68e(3): mov %r12,%rdi
a691(3): mov %rax,%r13
a694(5): call 0xffffb8fc(%rip)
a699(3): mov %r13,%rdi
a69c(3): mov %rax,%r14
a69f(5): call 0xffffb8f1(%rip)
a6a4(3): cmp %rax,%r14
a6a7(2): jz 0x19(%rip)
a6a9(4): add $0x18,%rsp
a6ad(2): xor %eax,%eax
a6af(1): pop %rbx
a6b0(1): pop %rbp
a6b1(2): pop %r12
a6b3(2): pop %r13
a6b5(2): pop %r14
a6b7(2): pop %r15
a6b9(1): ret near (%rsp)
a6ba(6): nop 0x0(%rax,%rax,1)
a6c0(3): mov %r14,%rdx
a6c3(3): mov %r13,%rsi
a6c6(3): mov %r12,%rdi
a6c9(5): call 0xffff7c37(%rip)
a6ce(2): test %eax,%eax
a6d0(2): jnz 0xffffffd9(%rip)
a6d2(4): mov 0xc(%rsp),%edi
a6d6(4): add $0x18,%rsp
a6da(3): mov %rbp,%rcx
a6dd(3): mov %r15d,%edx
a6e0(3): mov %rbx,%rsi
a6e3(1): pop %rbx
a6e4(1): pop %rbp
a6e5(2): pop %r12
a6e7(2): pop %r13
a6e9(2): pop %r14
a6eb(2): pop %r15
a6ed(5): jmp 0xfffffe43(%rip)

"same_name" :
a700(5): mov $0xffffff9c,%edx
a705(3): mov %rsi,%rcx
a708(3): mov %rdi,%rsi
a70b(2): mov %edx,%edi
a70d(5): jmp 0xffffff53(%rip)

"save_cwd" :
a720(1): push %rbx
a721(3): mov %rdi,%rbx
a724(8): mov $0x0,0x8(%rdi)
a72c(7): lea 0x57d9(%rip),%rdi
a733(2): xor %eax,%eax
a735(5): mov $0x80000,%esi
a73a(5): call 0x22b6(%rip)
a73f(2): mov %eax,%edx
a741(2): mov %eax,(%rbx)
a743(2): xor %eax,%eax
a745(2): test %edx,%edx
a747(2): js 0x9(%rip)
a749(1): pop %rbx
a74a(1): ret near (%rsp)
a74b(5): nop 0x0(%rax,%rax,1)
a750(2): xor %esi,%esi
a752(2): xor %edi,%edi
a754(5): call 0xffff7b5c(%rip)
a759(3): test %rax,%rax
a75c(4): mov %rax,0x8(%rbx)
a760(3): setz %al
a763(3): movzx %al,%eax
a766(2): neg %eax
a768(1): pop %rbx
a769(1): ret near (%rsp)

"restore_cwd" :
a770(2): mov (%rdi),%eax
a772(2): test %eax,%eax
a774(2): js 0xc(%rip)
a776(2): mov %eax,%edi
a778(5): jmp 0xffff7cc8(%rip)
a77d(3): nop (%rax)
a780(4): mov 0x8(%rdi),%rdi
a784(5): jmp 0xf2c(%rip)

"free_cwd" :
a790(1): push %rbx
a791(3): mov %rdi,%rbx
a794(2): mov (%rdi),%edi
a796(2): test %edi,%edi
a798(2): js 0x7(%rip)
a79a(5): call 0xffff7b36(%rip)
a79f(4): mov 0x8(%rbx),%rdi
a7a3(1): pop %rbx
a7a4(5): jmp 0xffff78cc(%rip)

"version_etc_arn" :
a7b0(2): push %r15
a7b2(2): push %r14
a7b4(2): push %r13
a7b6(2): push %r12
a7b8(3): mov %r9,%r12
a7bb(1): push %rbp
a7bc(1): push %rbx
a7bd(3): mov %rdi,%rbp
a7c0(3): mov %r8,%rbx
a7c3(4): sub $0x28,%rsp
a7c7(3): test %rsi,%rsi
a7ca(6): jz 0x11e(%rip)
a7d0(3): mov %rdx,%r8
a7d3(7): lea 0x5dce(%rip),%rdx
a7da(3): mov %rcx,%r9
a7dd(2): xor %eax,%eax
a7df(3): mov %rsi,%rcx
a7e2(5): mov $0x1,%esi
a7e7(5): call 0xffff7d49(%rip)
a7ec(7): lea 0x5dc8(%rip),%rsi
a7f3(2): xor %edi,%edi
a7f5(5): mov $0x5,%edx
a7fa(5): call 0xffff7996(%rip)
a7ff(7): lea 0x60da(%rip),%rdx
a806(3): mov %rax,%rcx
a809(6): mov $0x7e3,%r8d
a80f(5): mov $0x1,%esi
a814(3): mov %rbp,%rdi
a817(2): xor %eax,%eax
a819(5): call 0xffff7d17(%rip)
a81e(7): lea 0x5e23(%rip),%rsi
a825(2): xor %edi,%edi
a827(5): mov $0x5,%edx
a82c(5): call 0xffff7964(%rip)
a831(3): mov %rbp,%rsi
a834(3): mov %rax,%rdi
a837(5): call 0xffff7ad9(%rip)
a83c(4): cmp $0x9,%r12
a840(6): jnbe 0x340(%rip)
a846(7): lea 0x6057(%rip),%rdx
a84d(4): movsxd 0x0(%rdx,%r12,4),%rax
a851(3): add %rdx,%rax
a854(2): jmp %rax
a856(a): nop 0x0(%rax,%rax,1)
a860(4): mov 0x38(%rbx),%r9
a864(4): mov 0x10(%rbx),%rax
a868(7): lea 0x5f49(%rip),%rsi
a86f(4): mov 0x8(%rbx),%r8
a873(5): mov $0x5,%edx
a878(2): xor %edi,%edi
a87a(4): mov 0x30(%rbx),%r13
a87e(4): mov 0x28(%rbx),%r12
a882(5): mov %r9,0x10(%rsp)
a887(4): mov 0x20(%rbx),%r15
a88b(4): mov 0x18(%rbx),%r14
a88f(4): mov %rax,(%rsp)
a893(5): mov %r8,0x8(%rsp)
a898(3): mov (%rbx),%rbx
a89b(5): call 0xffff78f5(%rip)
a8a0(4): sub $0x8,%rsp
a8a4(5): mov 0x18(%rsp),%r9
a8a9(3): mov %rax,%rdx
a8ac(3): mov %rbx,%rcx
a8af(5): mov $0x1,%esi
a8b4(3): mov %rbp,%rdi
a8b7(2): xor %eax,%eax
a8b9(2): push %r9
a8bb(2): push %r13
a8bd(2): push %r12
a8bf(2): push %r15
a8c1(2): push %r14
a8c3(5): mov 0x30(%rsp),%r9
a8c8(5): mov 0x38(%rsp),%r8
a8cd(5): call 0xffff7c63(%rip)
a8d2(4): add $0x30,%rsp
a8d6(4): add $0x28,%rsp
a8da(1): pop %rbx
a8db(1): pop %rbp
a8dc(2): pop %r12
a8de(2): pop %r13
a8e0(2): pop %r14
a8e2(2): pop %r15
a8e4(1): ret near (%rsp)
a8e5(3): nop (%rax)
a8e8(3): mov %rcx,%r8
a8eb(3): mov %rdx,%rcx
a8ee(7): lea 0x5cbf(%rip),%rdx
a8f5(5): mov $0x1,%esi
a8fa(2): xor %eax,%eax
a8fc(5): call 0xffff7c34(%rip)
a901(5): jmp 0xfffffeeb(%rip)
a906(a): nop 0x0(%rax,%rax,1)
a910(4): mov 0x40(%rbx),%r10
a914(4): mov 0x38(%rbx),%r9
a918(7): lea 0x5ec9(%rip),%rsi
a91f(4): mov 0x10(%rbx),%rax
a923(4): mov 0x8(%rbx),%r8
a927(5): mov $0x5,%edx
a92c(4): mov 0x30(%rbx),%r13
a930(4): mov 0x28(%rbx),%r12
a934(4): mov 0x20(%rbx),%r15
a938(4): mov 0x18(%rbx),%r14
a93c(3): mov (%rbx),%rbx
a93f(5): mov %r10,0x18(%rsp)
a944(5): mov %r9,0x10(%rsp)
a949(4): mov %rax,(%rsp)
a94d(5): mov %r8,0x8(%rsp)
a952(2): xor %edi,%edi
a954(5): call 0xffff783c(%rip)
a959(5): mov 0x18(%rsp),%r10
a95e(2): push %r10
a960(5): jmp 0xffffff44(%rip)
a965(3): nop (%rax)
a968(3): mov (%rbx),%rbx
a96b(7): lea 0x5c4d(%rip),%rsi
a972(5): mov $0x5,%edx
a977(2): xor %edi,%edi
a979(5): call 0xffff7817(%rip)
a97e(4): add $0x28,%rsp
a982(3): mov %rbx,%rcx
a985(3): mov %rbp,%rdi
a988(1): pop %rbx
a989(1): pop %rbp
a98a(2): pop %r12
a98c(2): pop %r13
a98e(2): pop %r14
a990(2): pop %r15
a992(3): mov %rax,%rdx
a995(5): mov $0x1,%esi
a99a(2): xor %eax,%eax
a99c(5): jmp 0xffff7b94(%rip)
a9a1(7): nop 0x0(%rax)
a9a8(4): mov 0x8(%rbx),%r12
a9ac(7): lea 0x5c1c(%rip),%rsi
a9b3(3): mov (%rbx),%rbx
a9b6(5): mov $0x5,%edx
a9bb(2): xor %edi,%edi
a9bd(5): call 0xffff77d3(%rip)
a9c2(4): add $0x28,%rsp
a9c6(3): mov %r12,%r8
a9c9(3): mov %rbx,%rcx
a9cc(3): mov %rbp,%rdi
a9cf(3): mov %rax,%rdx
a9d2(5): mov $0x1,%esi
a9d7(1): pop %rbx
a9d8(1): pop %rbp
a9d9(2): pop %r12
a9db(2): pop %r13
a9dd(2): pop %r14
a9df(2): pop %r15
a9e1(2): xor %eax,%eax
a9e3(5): jmp 0xffff7b4d(%rip)
a9e8(8): nop 0x0(%rax,%rax,1)
a9f0(4): mov 0x10(%rbx),%r13
a9f4(4): mov 0x8(%rbx),%r12
a9f8(7): lea 0x5be7(%rip),%rsi
a9ff(3): mov (%rbx),%rbx
aa02(5): mov $0x5,%edx
aa07(2): xor %edi,%edi
aa09(5): call 0xffff7787(%rip)
aa0e(4): add $0x28,%rsp
aa12(3): mov %r13,%r9
aa15(3): mov %r12,%r8
aa18(3): mov %rbx,%rcx
aa1b(3): mov %rbp,%rdi
aa1e(3): mov %rax,%rdx
aa21(1): pop %rbx
aa22(1): pop %rbp
aa23(2): pop %r12
aa25(2): pop %r13
aa27(2): pop %r14
aa29(2): pop %r15
aa2b(5): mov $0x1,%esi
aa30(2): xor %eax,%eax
aa32(5): jmp 0xffff7afe(%rip)
aa37(9): nop 0x0(%rax,%rax,1)
aa40(7): lea 0x5cd1(%rip),%rsi
aa47(5): mov $0x5,%edx
aa4c(2): xor %edi,%edi
aa4e(4): mov 0x18(%rbx),%r14
aa52(4): mov 0x10(%rbx),%r13
aa56(4): mov 0x8(%rbx),%r12
aa5a(3): mov (%rbx),%rbx
aa5d(5): call 0xffff7733(%rip)
aa62(4): sub $0x8,%rsp
aa66(2): push %r14
aa68(3): mov %rax,%rdx
aa6b(3): mov %r13,%r9
aa6e(3): mov %r12,%r8
aa71(3): mov %rbx,%rcx
aa74(3): mov %rbp,%rdi
aa77(5): mov $0x1,%esi
aa7c(2): xor %eax,%eax
aa7e(5): call 0xffff7ab2(%rip)
aa83(1): pop %rax
aa84(1): pop %rdx
aa85(4): add $0x28,%rsp
aa89(1): pop %rbx
aa8a(1): pop %rbp
aa8b(2): pop %r12
aa8d(2): pop %r13
aa8f(2): pop %r14
aa91(2): pop %r15
aa93(1): ret near (%rsp)
aa94(4): nop 0x0(%rax)
aa98(4): mov 0x20(%rbx),%r15
aa9c(7): lea 0x5c95(%rip),%rsi
aaa3(5): mov $0x5,%edx
aaa8(2): xor %edi,%edi
aaaa(4): mov 0x18(%rbx),%r14
aaae(4): mov 0x10(%rbx),%r13
aab2(4): mov 0x8(%rbx),%r12
aab6(3): mov (%rbx),%rbx
aab9(5): call 0xffff76d7(%rip)
aabe(2): push %r15
aac0(2): jmp 0xffffffa6(%rip)
aac2(6): nop 0x0(%rax,%rax,1)
aac8(4): mov 0x8(%rbx),%r8
aacc(4): mov 0x28(%rbx),%r12
aad0(7): lea 0x5c89(%rip),%rsi
aad7(4): mov 0x20(%rbx),%r15
aadb(4): mov 0x18(%rbx),%r14
aadf(5): mov $0x5,%edx
aae4(4): mov 0x10(%rbx),%r13
aae8(2): xor %edi,%edi
aaea(3): mov (%rbx),%rbx
aaed(4): mov %r8,(%rsp)
aaf1(5): call 0xffff769f(%rip)
aaf6(4): sub $0x8,%rsp
aafa(3): mov %r13,%r9
aafd(2): push %r12
aaff(2): push %r15
ab01(2): push %r14
ab03(5): mov 0x20(%rsp),%r8
ab08(3): mov %rbx,%rcx
ab0b(3): mov %rax,%rdx
ab0e(3): mov %rbp,%rdi
ab11(5): mov $0x1,%esi
ab16(2): xor %eax,%eax
ab18(5): call 0xffff7a18(%rip)
ab1d(4): add $0x20,%rsp
ab21(4): add $0x28,%rsp
ab25(1): pop %rbx
ab26(1): pop %rbp
ab27(2): pop %r12
ab29(2): pop %r13
ab2b(2): pop %r14
ab2d(2): pop %r15
ab2f(1): ret near (%rsp)
ab30(4): mov 0x10(%rbx),%r9
ab34(4): mov 0x30(%rbx),%r13
ab38(7): lea 0x5c49(%rip),%rsi
ab3f(4): mov 0x28(%rbx),%r12
ab43(4): mov 0x20(%rbx),%r15
ab47(5): mov $0x5,%edx
ab4c(4): mov 0x18(%rbx),%r14
ab50(4): mov 0x8(%rbx),%r8
ab54(2): xor %edi,%edi
ab56(5): mov %r9,0x8(%rsp)
ab5b(3): mov (%rbx),%rbx
ab5e(4): mov %r8,(%rsp)
ab62(5): call 0xffff762e(%rip)
ab67(2): push %r13
ab69(2): push %r12
ab6b(2): push %r15
ab6d(2): push %r14
ab6f(5): mov 0x28(%rsp),%r9
ab74(2): jmp 0xffffff8f(%rip)
ab76(a): nop 0x0(%rax,%rax,1)
ab80(4): mov 0x40(%rbx),%r10
ab84(4): mov 0x38(%rbx),%r9
ab88(5): mov $0x5,%edx
ab8d(4): mov 0x10(%rbx),%rax
ab91(4): mov 0x8(%rbx),%r8
ab95(7): lea 0x5c84(%rip),%rsi
ab9c(4): mov 0x30(%rbx),%r13
aba0(4): mov 0x28(%rbx),%r12
aba4(4): mov 0x20(%rbx),%r15
aba8(4): mov 0x18(%rbx),%r14
abac(5): mov %r10,0x18(%rsp)
abb1(5): mov %r9,0x10(%rsp)
abb6(4): mov %rax,(%rsp)
abba(5): mov %r8,0x8(%rsp)
abbf(3): mov (%rbx),%rbx
abc2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
abd0(3): xor %r9d,%r9d
abd3(4): cmp $0x0,(%r8)
abd7(2): jz 0x14(%rip)
abd9(7): nop 0x0(%rax)
abe0(4): add $0x1,%r9
abe4(5): cmp $0x0,0x0(%r8,%r9,8)
abe9(2): jnz 0xfffffff7(%rip)
abeb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
abf0(4): sub $0x68,%rsp
abf4(3): mov %r8,%r10
abf7(3): xor %r9d,%r9d
abfa(9): mov $0x28,%rax
ac03(5): mov %rax,0x58(%rsp)
ac08(2): xor %eax,%eax
ac0a(3): mov %rsp,%r8
ac0d(3): nop (%rax)
ac10(3): mov (%r10),%eax
ac13(3): cmp $0x2f,%eax
ac16(2): jnbe 0x44(%rip)
ac18(3): mov %eax,%r11d
ac1b(4): add 0x10(%r10),%r11
ac1f(3): add $0x8,%eax
ac22(3): mov %eax,(%r10)
ac25(3): mov (%r11),%rax
ac28(3): test %rax,%rax
ac2b(4): mov %rax,0x0(%r8,%r9,8)
ac2f(2): jz 0xc(%rip)
ac31(4): add $0x1,%r9
ac35(4): cmp $0xa,%r9
ac39(2): jnz 0xffffffd7(%rip)
ac3b(5): call 0xfffffb75(%rip)
ac40(5): mov 0x58(%rsp),%rax
ac45(9): xor $0x28,%rax
ac4e(2): jnz 0x7(%rip)
ac50(4): add $0x68,%rsp
ac54(1): ret near (%rsp)
ac55(5): call 0xffff759b(%rip)
ac5a(4): mov 0x8(%r10),%r11
ac5e(4): lea 0x8(%r11),%rax
ac62(4): mov %rax,0x8(%r10)
ac66(2): jmp 0xffffffbf(%rip)

"version_etc" :
ac70(1): push %rbp
ac71(1): push %rbx
ac72(6): mov $0x20,%r10d
ac78(3): xor %r11d,%r11d
ac7b(7): sub $0xb8,%rsp
ac82(9): mov $0x28,%rax
ac8b(5): mov %rax,0x78(%rsp)
ac90(2): xor %eax,%eax
ac92(8): lea 0xd0(%rsp),%rax
ac9a(8): mov %r8,0xa0(%rsp)
aca2(8): lea 0xd0(%rsp),%rbx
acaa(5): lea 0x20(%rsp),%r8
acaf(8): mov %r9,0xa8(%rsp)
acb7(8): mov $0x20,0x8(%rsp)
acbf(5): mov %rax,0x10(%rsp)
acc4(8): lea 0x80(%rsp),%rax
accc(3): xor %r9d,%r9d
accf(5): mov %rax,0x18(%rsp)
acd4(3): mov %rax,%rbp
acd7(9): nop 0x0(%rax,%rax,1)
ace0(4): cmp $0x2f,%r10d
ace4(2): jnbe 0x58(%rip)
ace6(3): mov %r10d,%eax
ace9(6): mov $0x1,%r11d
acef(4): add $0x8,%r10d
acf3(3): add %rbp,%rax
acf6(3): mov (%rax),%rax
acf9(3): test %rax,%rax
acfc(4): mov %rax,0x0(%r8,%r9,8)
ad00(2): jz 0xc(%rip)
ad02(4): add $0x1,%r9
ad06(4): cmp $0xa,%r9
ad0a(2): jnz 0xffffffd6(%rip)
ad0c(3): test %r11b,%r11b
ad0f(2): jnz 0x26(%rip)
ad11(5): call 0xfffffa9f(%rip)
ad16(5): mov 0x78(%rsp),%rax
ad1b(9): xor $0x28,%rax
ad24(2): jnz 0xc(%rip)
ad26(7): add $0xb8,%rsp
ad2d(1): pop %rbx
ad2e(1): pop %rbp
ad2f(1): ret near (%rsp)
ad30(5): call 0xffff74c0(%rip)
ad35(5): mov %r10d,0x8(%rsp)
ad3a(2): jmp 0xffffffd7(%rip)
ad3c(3): mov %rbx,%rax
ad3f(4): add $0x8,%rbx
ad43(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
ad50(1): push %rbx
ad51(7): lea 0x58aa(%rip),%rsi
ad58(5): mov $0x5,%edx
ad5d(2): xor %edi,%edi
ad5f(5): call 0xffff7431(%rip)
ad64(7): lea 0x58ac(%rip),%rdx
ad6b(3): mov %rax,%rsi
ad6e(5): mov $0x1,%edi
ad73(2): xor %eax,%eax
ad75(5): call 0xffff76fb(%rip)
ad7a(7): lea 0x58ac(%rip),%rsi
ad81(5): mov $0x5,%edx
ad86(2): xor %edi,%edi
ad88(5): call 0xffff7408(%rip)
ad8d(7): lea 0x4f04(%rip),%rcx
ad94(7): lea 0x434d(%rip),%rdx
ad9b(3): mov %rax,%rsi
ad9e(5): mov $0x1,%edi
ada3(2): xor %eax,%eax
ada5(5): call 0xffff76cb(%rip)
adaa(7): mov 0x209557(%rip),%rbx
adb1(7): lea 0x5aa8(%rip),%rsi
adb8(2): xor %edi,%edi
adba(5): mov $0x5,%edx
adbf(5): call 0xffff73d1(%rip)
adc4(3): mov %rbx,%rsi
adc7(3): mov %rax,%rdi
adca(1): pop %rbx
adcb(5): jmp 0xffff7545(%rip)

"xmalloc" :
add0(1): push %rbx
add1(3): mov %rdi,%rbx
add4(5): call 0xffff75ec(%rip)
add9(3): test %rax,%rax
addc(2): jnz 0x7(%rip)
adde(3): test %rbx,%rbx
ade1(2): jnz 0x4(%rip)
ade3(1): pop %rbx
ade4(1): ret near (%rsp)
ade5(5): call 0x23b(%rip)

"xnmalloc" :
adf0(3): mov %rdi,%rax
adf3(3): mul %rax,%rsi,%rdx
adf6(3): mov %rax,%rdi
adf9(3): seto %al
adfc(3): test %rdi,%rdi
adff(2): js 0xc(%rip)
ae01(3): movzx %al,%eax
ae04(3): test %rax,%rax
ae07(2): jnz 0x4(%rip)
ae09(2): jmp 0xffffffc7(%rip)
ae0b(4): sub $0x8,%rsp
ae0f(5): call 0x211(%rip)

"xrealloc" :
ae30(3): test %rsi,%rsi
ae33(1): push %rbx
ae34(3): mov %rsi,%rbx
ae37(2): jnz 0x7(%rip)
ae39(3): test %rdi,%rdi
ae3c(2): jnz 0x1c(%rip)
ae3e(3): mov %rbx,%rsi
ae41(5): call 0xffff760f(%rip)
ae46(3): test %rax,%rax
ae49(2): jnz 0x7(%rip)
ae4b(3): test %rbx,%rbx
ae4e(2): jnz 0x13(%rip)
ae50(1): pop %rbx
ae51(1): ret near (%rsp)
ae52(6): nop 0x0(%rax,%rax,1)
ae58(5): call 0xffff7218(%rip)
ae5d(2): xor %eax,%eax
ae5f(1): pop %rbx
ae60(1): ret near (%rsp)
ae61(5): call 0x1bf(%rip)

"xnrealloc" :
ae70(3): mov %rsi,%rax
ae73(3): mul %rax,%rdx,%rdx
ae76(3): mov %rax,%rsi
ae79(3): seto %al
ae7c(3): test %rsi,%rsi
ae7f(2): js 0xc(%rip)
ae81(3): movzx %al,%eax
ae84(3): test %rax,%rax
ae87(2): jnz 0x4(%rip)
ae89(2): jmp 0xffffffa7(%rip)
ae8b(4): sub $0x8,%rsp
ae8f(5): call 0x191(%rip)

"x2nrealloc" :
aea0(3): test %rdi,%rdi
aea3(3): mov %rdx,%r9
aea6(3): mov (%rsi),%rcx
aea9(2): jz 0x37(%rip)
aeab(2): xor %edx,%edx
aead(a): mov $0x6148914691236517204,%rax
aeb7(3): div %r9,%rax
aeba(3): cmp %rcx,%rax
aebd(2): jbe 0x3e(%rip)
aebf(3): mov %rcx,%rax
aec2(3): shr $0x1,%rax
aec5(5): lea 0x1(%rax,%rcx,1),%rcx
aeca(3): mov %rcx,(%rsi)
aecd(4): imul %r9,%rcx
aed1(3): mov %rcx,%rsi
aed4(5): jmp 0xffffff5c(%rip)
aed9(7): nop 0x0(%rax)
aee0(3): test %rcx,%rcx
aee3(2): jz 0x25(%rip)
aee5(3): mov %rcx,%rax
aee8(3): mul %rax,%r9,%rdx
aeeb(3): seto %dl
aeee(3): test %rax,%rax
aef1(3): movzx %dl,%edx
aef4(2): js 0x7(%rip)
aef6(3): test %rdx,%rdx
aef9(2): jz 0xffffffd1(%rip)
aefb(4): sub $0x8,%rsp
aeff(5): call 0x121(%rip)
af04(4): nop 0x0(%rax)
af08(2): xor %edx,%edx
af0a(5): mov $0x80,%eax
af0f(3): xor %r8d,%r8d
af12(3): div %r9,%rax
af15(3): test %rax,%rax
af18(4): setz %r8b
af1c(4): lea 0x0(%r8,%rax,1),%rcx
af20(2): jmp 0xffffffc5(%rip)

"x2realloc" :
af30(3): test %rdi,%rdi
af33(3): mov (%rsi),%rax
af36(2): jz 0x2a(%rip)
af38(a): mov $0x6148914691236517203,%rdx
af42(3): cmp %rdx,%rax
af45(2): jnbe 0x2c(%rip)
af47(3): mov %rax,%rdx
af4a(3): shr $0x1,%rdx
af4d(5): lea 0x1(%rdx,%rax,1),%rax
af52(3): mov %rax,(%rsi)
af55(3): mov %rax,%rsi
af58(5): jmp 0xfffffed8(%rip)
af5d(3): nop (%rax)
af60(3): test %rax,%rax
af63(5): mov $0x80,%edx
af68(4): cmove %rdx,%rax
af6c(3): test %rax,%rax
af6f(2): jns 0xffffffe3(%rip)
af71(4): sub $0x8,%rsp
af75(5): call 0xab(%rip)

"xzalloc" :
af80(1): push %rbx
af81(3): mov %rdi,%rbx
af84(5): call 0xfffffe4c(%rip)
af89(3): mov %rbx,%rdx
af8c(2): xor %esi,%esi
af8e(3): mov %rax,%rdi
af91(1): pop %rbx
af92(5): jmp 0xffff730e(%rip)

"xcalloc" :
afa0(3): mov %rdi,%rax
afa3(4): sub $0x8,%rsp
afa7(3): mul %rax,%rsi,%rdx
afaa(3): seto %dl
afad(3): test %rax,%rax
afb0(2): js 0x19(%rip)
afb2(3): movzx %dl,%edx
afb5(3): test %rdx,%rdx
afb8(2): jnz 0x11(%rip)
afba(5): call 0xffff7366(%rip)
afbf(3): test %rax,%rax
afc2(2): jz 0x7(%rip)
afc4(4): add $0x8,%rsp
afc8(1): ret near (%rsp)
afc9(5): call 0x57(%rip)

"xmemdup" :
afd0(1): push %rbp
afd1(1): push %rbx
afd2(3): mov %rdi,%rbp
afd5(3): mov %rsi,%rdi
afd8(3): mov %rsi,%rbx
afdb(4): sub $0x8,%rsp
afdf(5): call 0xfffffdf1(%rip)
afe4(4): add $0x8,%rsp
afe8(3): mov %rbx,%rdx
afeb(3): mov %rbp,%rsi
afee(1): pop %rbx
afef(1): pop %rbp
aff0(3): mov %rax,%rdi
aff3(5): jmp 0xffff736d(%rip)

"xstrdup" :
b000(1): push %rbx
b001(3): mov %rdi,%rbx
b004(5): call 0xffff71ac(%rip)
b009(3): mov %rbx,%rdi
b00c(4): lea 0x1(%rax),%rsi
b010(1): pop %rbx
b011(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
b020(7): lea 0x58e8(%rip),%rsi
b027(4): sub $0x8,%rsp
b02b(5): mov $0x5,%edx
b030(2): xor %edi,%edi
b032(5): call 0xffff715e(%rip)
b037(6): mov 0x20922b(%rip),%edi
b03d(7): lea 0x5c33(%rip),%rdx
b044(3): mov %rax,%rcx
b047(2): xor %esi,%esi
b049(2): xor %eax,%eax
b04b(5): call 0xffff7455(%rip)
b050(5): call 0xffff7050(%rip)

"xgetcwd" :
b060(1): push %rbx
b061(2): xor %esi,%esi
b063(2): xor %edi,%edi
b065(5): call 0xffff724b(%rip)
b06a(3): test %rax,%rax
b06d(3): mov %rax,%rbx
b070(2): jz 0x10(%rip)
b072(3): mov %rbx,%rax
b075(1): pop %rbx
b076(1): ret near (%rsp)
b077(9): nop 0x0(%rax,%rax,1)
b080(5): call 0xffff7030(%rip)
b085(3): cmp $0xc,(%rax)
b088(2): jnz 0xffffffea(%rip)
b08a(5): call 0xffffff96(%rip)

"xstrtol_fatal" :
b090(2): push %r13
b092(2): push %r12
b094(3): mov %esi,%r10d
b097(1): push %rbp
b098(1): push %rbx
b099(3): mov %r8,%r12
b09c(4): sub $0x18,%rsp
b0a0(9): mov $0x28,%rax
b0a9(5): mov %rax,0x8(%rsp)
b0ae(2): xor %eax,%eax
b0b0(3): cmp $0x3,%edi
b0b3(6): mov 0x2091af(%rip),%ebp
b0b9(2): jnbe 0x5b(%rip)
b0bb(3): cmp $0x2,%edi
b0be(2): jnb 0x4d(%rip)
b0c0(3): sub $0x1,%edi
b0c3(7): lea 0x5871(%rip),%rsi
b0ca(2): jnz 0x3c(%rip)
b0cc(3): test %r10d,%r10d
b0cf(3): movsxd %r10d,%rax
b0d2(2): js 0x50(%rip)
b0d4(4): shl/sal $0x5,%rax
b0d8(7): lea 0x5879(%rip),%rbx
b0df(4): mov 0x0(%rcx,%rax,1),%r13
b0e3(5): mov $0x5,%edx
b0e8(2): xor %edi,%edi
b0ea(5): call 0xffff70a6(%rip)
b0ef(3): mov %r12,%r9
b0f2(3): mov %rax,%rdx
b0f5(3): mov %r13,%r8
b0f8(3): mov %rbx,%rcx
b0fb(2): xor %esi,%esi
b0fd(2): mov %ebp,%edi
b0ff(2): xor %eax,%eax
b101(5): call 0xffff739f(%rip)
b106(5): call 0xffff6f9a(%rip)
b10b(7): lea 0x584e(%rip),%rsi
b112(2): jmp 0xffffffba(%rip)
b114(3): cmp $0x4,%edi
b117(7): lea 0x5802(%rip),%rsi
b11e(2): jz 0xffffffae(%rip)
b120(2): jmp 0xffffffe6(%rip)
b122(7): lea 0x582f(%rip),%rbx
b129(4): mov %dl,0x6(%rsp)
b12d(5): mov $0x0,0x7(%rsp)
b132(5): lea 0x6(%rsp),%r13
b137(3): sub %rax,%rbx
b13a(2): jmp 0xffffffa9(%rip)

"xstrtoumax" :
b140(2): push %r15
b142(2): push %r14
b144(2): push %r13
b146(2): push %r12
b148(1): push %rbp
b149(1): push %rbx
b14a(4): sub $0x28,%rsp
b14e(9): mov $0x28,%rax
b157(5): mov %rax,0x18(%rsp)
b15c(2): xor %eax,%eax
b15e(3): cmp $0x24,%edx
b161(6): jnbe 0x364(%rip)
b167(5): lea 0x10(%rsp),%rax
b16c(3): mov %rsi,%r15
b16f(3): test %rsi,%rsi
b172(3): mov %rdi,%rbp
b175(4): mov %edx,0x8(%rsp)
b179(3): mov %rcx,%r14
b17c(3): mov %r8,%r13
b17f(4): cmove %rax,%r15
b183(5): call 0xffff6f2d(%rip)
b188(6): mov $0x0,(%rax)
b18e(3): mov %rax,%r12
b191(4): movzx 0x0(%rbp),%ebx
b195(5): call 0xffff73fb(%rip)
b19a(4): mov 0x8(%rsp),%edx
b19e(3): mov (%rax),%rsi
b1a1(3): mov %rbp,%rax
b1a4(2): jmp 0x13(%rip)
b1a6(a): nop 0x0(%rax,%rax,1)
b1b0(4): add $0x1,%rax
b1b4(3): movzx (%rax),%ebx
b1b7(3): movzx %bl,%ecx
b1ba(5): test $0x20,0x1(%rsi,%rcx,2)
b1bf(2): jnz 0xfffffff1(%rip)
b1c1(3): cmp $0x2d,%bl
b1c4(2): jz 0x54(%rip)
b1c6(2): xor %ecx,%ecx
b1c8(3): mov %r15,%rsi
b1cb(3): mov %rbp,%rdi
b1ce(5): call 0xffff70c2(%rip)
b1d3(3): mov (%r15),%rcx
b1d6(3): mov %rax,%rbx
b1d9(3): cmp %rbp,%rcx
b1dc(2): jz 0x2c(%rip)
b1de(4): mov (%r12),%eax
b1e2(2): test %eax,%eax
b1e4(2): jz 0x64(%rip)
b1e6(3): cmp $0x22,%eax
b1e9(5): mov $0x1,%ebp
b1ee(2): jnz 0x2a(%rip)
b1f0(3): test %r13,%r13
b1f3(2): jz 0xb(%rip)
b1f5(4): movzx (%rcx),%r12d
b1f9(3): test %r12b,%r12b
b1fc(2): jnz 0x7b(%rip)
b1fe(3): mov %rbx,(%r14)
b201(2): jmp 0x1c(%rip)
b203(5): nop 0x0(%rax,%rax,1)
b208(3): test %r13,%r13
b20b(5): mov %rcx,0x8(%rsp)
b210(2): jnz 0x40(%rip)
b212(6): nop 0x0(%rax,%rax,1)
b218(5): mov $0x4,%ebp
b21d(5): mov 0x18(%rsp),%rdi
b222(9): xor $0x28,%rdi
b22b(2): mov %ebp,%eax
b22d(6): jnz 0x293(%rip)
b233(4): add $0x28,%rsp
b237(1): pop %rbx
b238(1): pop %rbp
b239(2): pop %r12
b23b(2): pop %r13
b23d(2): pop %r14
b23f(2): pop %r15
b241(1): ret near (%rsp)
b242(6): nop 0x0(%rax,%rax,1)
b248(2): xor %ebp,%ebp
b24a(2): jmp 0xffffffa6(%rip)
b24c(4): nop 0x0(%rax)
b250(5): movzx 0x0(%rbp),%r12d
b255(3): test %r12b,%r12b
b258(2): jz 0xffffffc0(%rip)
b25a(4): movsx %r12b,%esi
b25e(3): mov %r13,%rdi
b261(2): xor %ebp,%ebp
b263(5): call 0xffff6fbd(%rip)
b268(3): test %rax,%rax
b26b(5): mov $0x1,%ebx
b270(5): mov 0x8(%rsp),%rcx
b275(2): jz 0xffffffa3(%rip)
b277(4): movsx %r12b,%esi
b27b(3): mov %r13,%rdi
b27e(5): mov %rcx,0x8(%rsp)
b283(5): call 0xffff6f9d(%rip)
b288(3): test %rax,%rax
b28b(5): mov 0x8(%rsp),%rcx
b290(6): jz 0xcc(%rip)
b296(5): lea 0xffffffbb(%r12),%eax
b29b(2): cmp $0x2f,%al
b29d(2): jnbe 0x53(%rip)
b29f(a): mov $0x142129060940101,%rdx
b2a9(4): bt %rax,%rdx
b2ad(2): jnb 0x43(%rip)
b2af(5): mov $0x30,%esi
b2b4(3): mov %r13,%rdi
b2b7(5): mov %rcx,0x8(%rsp)
b2bc(5): call 0xffff6f64(%rip)
b2c1(3): test %rax,%rax
b2c4(5): mov 0x8(%rsp),%rcx
b2c9(2): jz 0x27(%rip)
b2cb(4): movzx 0x1(%rcx),%eax
b2cf(2): cmp $0x44,%al
b2d1(2): jz 0xe(%rip)
b2d3(2): cmp $0x69,%al
b2d5(6): jz 0x1d3(%rip)
b2db(2): cmp $0x42,%al
b2dd(2): jnz 0x13(%rip)
b2df(5): mov $0x2,%edi
b2e4(5): mov $0x3e8,%esi
b2e9(2): jmp 0x11(%rip)
b2eb(5): nop 0x0(%rax,%rax,1)
b2f0(5): mov $0x1,%edi
b2f5(5): mov $0x400,%esi
b2fa(4): sub $0x42,%r12d
b2fe(4): cmp $0x35,%r12b
b302(2): jnbe 0x5a(%rip)
b304(7): lea 0x56c5(%rip),%rdx
b30b(4): movzx %r12b,%r12d
b30f(4): movsxd 0x0(%rdx,%r12,4),%rax
b313(3): add %rdx,%rax
b316(2): jmp %rax
b318(3): mov %rbx,%rax
b31b(3): mul %rax,%rsi,%rdx
b31e(6): jo 0x1f3(%rip)
b324(3): xor %r8d,%r8d
b327(3): mul %rax,%rsi,%rdx
b32a(6): jo 0x1d8(%rip)
b330(3): mov %rax,%rbx
b333(3): or %r8d,%ebp
b336(a): nop 0x0(%rax,%rax,1)
b340(3): movsxd %edi,%rdi
b343(2): mov %ebp,%eax
b345(3): add %rdi,%rcx
b348(3): or $0x2,%eax
b34b(3): mov %rcx,(%r15)
b34e(3): cmp $0x0,(%rcx)
b351(3): mov %rbx,(%r14)
b354(3): cmovne %eax,%ebp
b357(5): jmp 0xfffffec6(%rip)
b35c(3): mov %rbx,(%r14)
b35f(3): or $0x2,%ebp
b362(5): jmp 0xfffffebb(%rip)
b367(5): mov $0x2,%edx
b36c(3): mov %rdx,%rax
b36f(3): mul %rax,%rbx,%rdx
b372(6): jo 0x9c(%rip)
b378(3): add %rbx,%rbx
b37b(2): jmp 0xffffffc5(%rip)
b37d(5): mov $0x200,%edx
b382(3): mov %rdx,%rax
b385(3): mul %rax,%rbx,%rdx
b388(6): jo 0x86(%rip)
b38e(4): shl/sal $0x9,%rbx
b392(2): jmp 0xffffffae(%rip)
b394(6): mov $0x7,%r8d
b39a(3): xor %r9d,%r9d
b39d(3): nop (%rax)
b3a0(3): mov %rbx,%rax
b3a3(3): mul %rax,%rsi,%rdx
b3a6(3): mov %rax,%rbx
b3a9(6): jo 0x195(%rip)
b3af(4): sub $0x1,%r8d
b3b3(2): jnz 0xffffffed(%rip)
b3b5(3): or %r9d,%ebp
b3b8(2): jmp 0xffffff88(%rip)
b3ba(6): mov $0x8,%r8d
b3c0(3): xor %r9d,%r9d
b3c3(5): nop 0x0(%rax,%rax,1)
b3c8(3): mov %rbx,%rax
b3cb(3): mul %rax,%rsi,%rdx
b3ce(3): mov %rax,%rbx
b3d1(6): jo 0x14f(%rip)
b3d7(4): sub $0x1,%r8d
b3db(2): jnz 0xffffffed(%rip)
b3dd(2): jmp 0xffffffd8(%rip)
b3df(6): mov $0x4,%r8d
b3e5(3): xor %r9d,%r9d
b3e8(3): mov %rbx,%rax
b3eb(3): mul %rax,%rsi,%rdx
b3ee(3): mov %rax,%rbx
b3f1(6): jo 0x102(%rip)
b3f7(4): sub $0x1,%r8d
b3fb(2): jnz 0xffffffed(%rip)
b3fd(2): jmp 0xffffffb8(%rip)
b3ff(3): mov %rbx,%rax
b402(3): mul %rax,%rsi,%rdx
b405(3): mov %rax,%rbx
b408(6): jno 0xffffff38(%rip)
b40e(5): mov $0x1,%ebp
b413(4): or $0xffffffff,%rbx
b417(5): jmp 0xffffff29(%rip)
b41c(4): nop 0x0(%rax)
b420(6): mov $0x5,%r8d
b426(3): xor %r9d,%r9d
b429(3): mov %rbx,%rax
b42c(3): mul %rax,%rsi,%rdx
b42f(3): mov %rax,%rbx
b432(6): jo 0xfd(%rip)
b438(4): sub $0x1,%r8d
b43c(2): jnz 0xffffffed(%rip)
b43e(5): jmp 0xffffff77(%rip)
b443(6): mov $0x6,%r8d
b449(3): xor %r9d,%r9d
b44c(3): mov %rbx,%rax
b44f(3): mul %rax,%rsi,%rdx
b452(3): mov %rax,%rbx
b455(6): jo 0x8f(%rip)
b45b(4): sub $0x1,%r8d
b45f(2): jnz 0xffffffed(%rip)
b461(5): jmp 0xffffff54(%rip)
b466(5): mov $0x400,%edx
b46b(3): mov %rdx,%rax
b46e(3): mul %rax,%rbx,%rdx
b471(2): jo 0xffffff9d(%rip)
b473(4): shl/sal $0xa,%rbx
b477(5): jmp 0xfffffec9(%rip)
b47c(3): mov %rbx,%rax
b47f(3): mul %rax,%rsi,%rdx
b482(6): jo 0xcb(%rip)
b488(3): xor %r8d,%r8d
b48b(3): mul %rax,%rsi,%rdx
b48e(6): jno 0xfffffe99(%rip)
b494(6): mov $0x1,%r8d
b49a(4): or $0xffffffff,%rax
b49e(5): jmp 0xfffffe89(%rip)
b4a3(5): nop 0x0(%rax,%rax,1)
b4a8(2): xor %edi,%edi
b4aa(4): cmp $0x42,0x2(%rcx)
b4ae(5): mov $0x400,%esi
b4b3(4): setz %dil
b4b7(4): lea 0x1(%rdi,%rdi,1),%edi
b4bb(5): jmp 0xfffffe3f(%rip)
b4c0(5): call 0xffff6d30(%rip)
b4c5(7): lea 0x55dc(%rip),%rcx
b4cc(7): lea 0x54b5(%rip),%rsi
b4d3(7): lea 0x54ce(%rip),%rdi
b4da(5): mov $0x54,%edx
b4df(5): call 0xffff6da1(%rip)
b4e4(6): mov $0x1,%r9d
b4ea(4): or $0xffffffff,%rbx
b4ee(5): jmp 0xffffff6d(%rip)
b4f3(6): mov $0x1,%r9d
b4f9(4): or $0xffffffff,%rbx
b4fd(5): jmp 0xfffffefa(%rip)
b502(6): mov $0x1,%r8d
b508(4): or $0xffffffff,%rbx
b50c(5): jmp 0xfffffe27(%rip)
b511(4): or $0xffffffff,%rax
b515(6): mov $0x1,%r8d
b51b(5): jmp 0xfffffe0c(%rip)
b520(6): mov $0x1,%r9d
b526(4): or $0xffffffff,%rbx
b52a(5): jmp 0xfffffead(%rip)
b52f(6): mov $0x1,%r9d
b535(4): or $0xffffffff,%rbx
b539(5): jmp 0xfffffeff(%rip)
b53e(6): mov $0x1,%r9d
b544(4): or $0xffffffff,%rbx
b548(5): jmp 0xfffffe67(%rip)
b54d(6): mov $0x1,%r8d
b553(4): or $0xffffffff,%rax
b557(5): jmp 0xffffff34(%rip)

"rpl_asprintf" :
b560(7): sub $0xd8,%rsp
b567(2): test %al,%al
b569(5): mov %rdx,0x30(%rsp)
b56e(5): mov %rcx,0x38(%rsp)
b573(5): mov %r8,0x40(%rsp)
b578(5): mov %r9,0x48(%rsp)
b57d(2): jz 0x39(%rip)
b57f(5): movaps %xmm0,0x50(%rsp)
b584(5): movaps %xmm1,0x60(%rsp)
b589(5): movaps %xmm2,0x70(%rsp)
b58e(8): movaps %xmm3,0x80(%rsp)
b596(8): movaps %xmm4,0x90(%rsp)
b59e(8): movaps %xmm5,0xa0(%rsp)
b5a6(8): movaps %xmm6,0xb0(%rsp)
b5ae(8): movaps %xmm7,0xc0(%rsp)
b5b6(9): mov $0x28,%rax
b5bf(5): mov %rax,0x18(%rsp)
b5c4(2): xor %eax,%eax
b5c6(8): lea 0xe0(%rsp),%rax
b5ce(3): mov %rsp,%rdx
b5d1(5): mov %rax,0x8(%rsp)
b5d6(5): lea 0x20(%rsp),%rax
b5db(7): mov $0x10,(%rsp)
b5e2(8): mov $0x30,0x4(%rsp)
b5ea(5): mov %rax,0x10(%rsp)
b5ef(5): call 0xe81(%rip)
b5f4(5): mov 0x18(%rsp),%rcx
b5f9(9): xor $0x28,%rcx
b602(2): jnz 0xa(%rip)
b604(7): add $0xd8,%rsp
b60b(1): ret near (%rsp)
b60c(5): call 0xffff6be4(%rip)

"cdb_free" :
b620(2): mov (%rdi),%edi
b622(2): test %edi,%edi
b624(2): js 0x1c(%rip)
b626(4): sub $0x8,%rsp
b62a(5): call 0xffff6ca6(%rip)
b62f(2): test %eax,%eax
b631(2): jnz 0x11(%rip)
b633(4): add $0x8,%rsp
b637(1): ret near (%rsp)
b638(8): nop 0x0(%rax,%rax,1)
b640(2): REP ret near (%rsp)
b642(7): lea 0x54e7(%rip),%rcx
b649(7): lea 0x5468(%rip),%rsi
b650(7): lea 0x5484(%rip),%rdi
b657(5): mov $0x40,%edx
b65c(5): call 0xffff6c24(%rip)

"cdb_advance_fd" :
b670(1): push %rbp
b671(1): push %rbx
b672(3): mov %rdi,%rbx
b675(2): xor %eax,%eax
b677(5): mov $0x10900,%edx
b67c(4): sub $0x8,%rsp
b680(2): mov (%rdi),%edi
b682(5): call 0xffff6b4e(%rip)
b687(2): test %eax,%eax
b689(2): js 0x17(%rip)
b68b(2): mov %eax,%ebp
b68d(3): mov %rbx,%rdi
b690(5): call 0xffffff90(%rip)
b695(2): mov %ebp,(%rbx)
b697(2): xor %eax,%eax
b699(4): add $0x8,%rsp
b69d(1): pop %rbx
b69e(1): pop %rbp
b69f(1): ret near (%rsp)
b6a0(5): mov $0xffffffff,%eax
b6a5(2): jmp 0xfffffff4(%rip)

"chdir_long" :
b6b0(2): push %r15
b6b2(2): push %r14
b6b4(2): push %r13
b6b6(2): push %r12
b6b8(1): push %rbp
b6b9(1): push %rbx
b6ba(3): mov %rdi,%rbp
b6bd(4): sub $0x18,%rsp
b6c1(9): mov $0x28,%rax
b6ca(5): mov %rax,0x8(%rsp)
b6cf(2): xor %eax,%eax
b6d1(5): call 0xffff6b0f(%rip)
b6d6(2): test %eax,%eax
b6d8(2): mov %eax,%ebx
b6da(2): jz 0xf(%rip)
b6dc(5): call 0xffff69d4(%rip)
b6e1(3): cmp $0x24,(%rax)
b6e4(3): mov %rax,%r14
b6e7(2): jz 0x29(%rip)
b6e9(5): mov 0x8(%rsp),%rcx
b6ee(9): xor $0x28,%rcx
b6f7(2): mov %ebx,%eax
b6f9(6): jnz 0x208(%rip)
b6ff(4): add $0x18,%rsp
b703(1): pop %rbx
b704(1): pop %rbp
b705(2): pop %r12
b707(2): pop %r13
b709(2): pop %r14
b70b(2): pop %r15
b70d(1): ret near (%rsp)
b70e(2): nop 
b710(3): mov %rbp,%rdi
b713(5): call 0xffff6a9d(%rip)
b718(3): test %rax,%rax
b71b(3): mov %rax,%r12
b71e(8): mov $0xffffff9c,0x4(%rsp)
b726(6): jz 0x1e0(%rip)
b72c(6): cmp $0xfff,%rax
b732(6): jbe 0x1f3(%rip)
b738(7): lea 0x498f(%rip),%rsi
b73f(3): mov %rbp,%rdi
b742(5): call 0xffff6b9e(%rip)
b747(4): cmp $0x2,%rax
b74b(3): mov %rax,%rbx
b74e(6): jz 0xd2(%rip)
b754(3): test %rax,%rax
b757(3): mov %rbp,%r15
b75a(6): jnz 0x166(%rip)
b760(4): cmp $0x2f,(%r15)
b764(6): jz 0x1ff(%rip)
b76a(3): add %r12,%rbp
b76d(3): cmp %rbp,%r15
b770(6): jnbe 0x1d4(%rip)
b776(3): mov %rbp,%rax
b779(5): lea 0x4(%rsp),%r12
b77e(3): sub %r15,%rax
b781(6): cmp $0xfff,%rax
b787(3): mov %r12,%r13
b78a(2): jnle 0x62(%rip)
b78c(5): jmp 0x104(%rip)
b791(7): nop 0x0(%rax)
b798(3): mov $0x0,(%rax)
b79b(3): sub %r15,%rax
b79e(6): cmp $0xfff,%rax
b7a4(6): jnle 0x13e(%rip)
b7aa(3): mov %r15,%rsi
b7ad(3): mov %r12,%rdi
b7b0(3): mov %r12,%r13
b7b3(5): call 0xfffffebd(%rip)
b7b8(2): test %eax,%eax
b7ba(3): mov $0x2f,(%rbx)
b7bd(6): jnz 0xbb(%rip)
b7c3(4): add $0x1,%rbx
b7c7(7): lea 0x4900(%rip),%rsi
b7ce(3): mov %rbx,%rdi
b7d1(5): call 0xffff6b0f(%rip)
b7d6(4): lea 0x0(%rbx,%rax,1),%r15
b7da(3): mov %rbp,%rax
b7dd(3): sub %r15,%rax
b7e0(6): cmp $0xfff,%rax
b7e6(6): jle 0xaa(%rip)
b7ec(5): mov $0x1000,%edx
b7f1(5): mov $0x2f,%esi
b7f6(3): mov %r15,%rdi
b7f9(5): call 0xffff6cb7(%rip)
b7fe(3): test %rax,%rax
b801(3): mov %rax,%rbx
b804(2): jnz 0xffffff94(%rip)
b806(7): mov $0x24,(%r14)
b80d(5): mov $0xffffffff,%ebx
b812(5): jmp 0xfffffed7(%rip)
b817(9): nop 0x0(%rax,%rax,1)
b820(5): lea 0xfffffffd(%r12),%rdx
b825(4): lea 0x3(%rbp),%rdi
b829(5): mov $0x2f,%esi
b82e(5): call 0xffff6ac2(%rip)
b833(3): test %rax,%rax
b836(3): mov %rax,%rbx
b839(2): jz 0x4d(%rip)
b83b(5): lea 0x4(%rsp),%r13
b840(3): mov $0x0,(%rax)
b843(3): mov %rbp,%rsi
b846(3): mov %r13,%rdi
b849(5): call 0xfffffe27(%rip)
b84e(2): test %eax,%eax
b850(3): mov $0x2f,(%rbx)
b853(2): jnz 0x25(%rip)
b855(4): add $0x1,%rbx
b859(7): lea 0x486e(%rip),%rsi
b860(3): mov %rbx,%rdi
b863(5): call 0xffff6a7d(%rip)
b868(4): lea 0x0(%rbx,%rax,1),%r15
b86c(5): jmp 0xfffffef4(%rip)
b871(7): nop 0x0(%rax)
b878(3): mov (%r14),%ebx
b87b(3): mov %r13,%rdi
b87e(5): call 0xfffffda2(%rip)
b883(3): mov %ebx,(%r14)
b886(5): mov $0xffffffff,%ebx
b88b(5): jmp 0xfffffe5e(%rip)
b890(3): cmp %r15,%rbp
b893(2): jbe 0x11(%rip)
b895(3): mov %r15,%rsi
b898(3): mov %r13,%rdi
b89b(5): call 0xfffffdd5(%rip)
b8a0(2): test %eax,%eax
b8a2(2): jnz 0xffffffd6(%rip)
b8a4(4): mov 0x4(%rsp),%edi
b8a8(5): call 0xffff6b98(%rip)
b8ad(2): test %eax,%eax
b8af(2): mov %eax,%ebx
b8b1(2): jnz 0xffffffc7(%rip)
b8b3(3): mov %r13,%rdi
b8b6(5): call 0xfffffd6a(%rip)
b8bb(5): jmp 0xfffffe2e(%rip)
b8c0(5): lea 0x4(%rsp),%r13
b8c5(7): lea 0x4802(%rip),%rsi
b8cc(3): mov %r13,%rdi
b8cf(5): call 0xfffffda1(%rip)
b8d4(2): test %eax,%eax
b8d6(2): jnz 0xffffffa2(%rip)
b8d8(5): lea 0x0(%rbp,%rbx,1),%r15
b8dd(5): jmp 0xfffffe83(%rip)
b8e2(7): lea 0x5257(%rip),%rcx
b8e9(7): lea 0x51c8(%rip),%rsi
b8f0(7): lea 0x5220(%rip),%rdi
b8f7(5): mov $0xb3,%edx
b8fc(5): call 0xffff6984(%rip)
b901(5): call 0xffff68ef(%rip)
b906(7): lea 0x5233(%rip),%rcx
b90d(7): lea 0x51a4(%rip),%rsi
b914(7): lea 0x51cd(%rip),%rdi
b91b(5): mov $0x7e,%edx
b920(5): call 0xffff6960(%rip)
b925(7): lea 0x5214(%rip),%rcx
b92c(7): lea 0x5185(%rip),%rsi
b933(7): lea 0x51b6(%rip),%rdi
b93a(5): mov $0x7f,%edx
b93f(5): call 0xffff6941(%rip)
b944(7): lea 0x51f5(%rip),%rcx
b94b(7): lea 0x5166(%rip),%rsi
b952(7): lea 0x51af(%rip),%rdi
b959(5): mov $0xa3,%edx
b95e(5): call 0xffff6922(%rip)
b963(7): lea 0x51d6(%rip),%rcx
b96a(7): lea 0x5147(%rip),%rsi
b971(7): lea 0x5184(%rip),%rdi
b978(5): mov $0xa2,%edx
b97d(5): call 0xffff6903(%rip)

"get_fs_usage" :
b990(2): push %r12
b992(1): push %rbp
b993(3): mov %rdi,%r12
b996(1): push %rbx
b997(3): mov %rdx,%rbx
b99a(7): sub $0x190,%rsp
b9a1(9): mov $0x28,%rax
b9aa(8): mov %rax,0x188(%rsp)
b9b2(2): xor %eax,%eax
b9b4(6): mov 0x208926(%rip),%eax
b9ba(3): mov %rsp,%rbp
b9bd(2): test %eax,%eax
b9bf(2): js 0x31(%rip)
b9c1(2): jz 0x49(%rip)
b9c3(3): mov %rbp,%rsi
b9c6(3): mov %r12,%rdi
b9c9(5): call 0xffff6a67(%rip)
b9ce(2): mov %eax,%edx
b9d0(5): mov $0xffffffff,%eax
b9d5(2): test %edx,%edx
b9d7(6): js 0x84(%rip)
b9dd(5): mov 0x8(%rsp),%rax
b9e2(3): test %rax,%rax
b9e5(2): jnz 0x3d(%rip)
b9e7(4): mov (%rsp),%rax
b9eb(2): jmp 0x37(%rip)
b9ed(3): nop (%rax)
b9f0(3): mov %rbp,%rdi
b9f3(5): call 0xffff686d(%rip)
b9f8(2): test %eax,%eax
b9fa(6): jz 0x86(%rip)
ba00(a): mov $0x0,0x2088d6(%rip)
ba0a(3): mov %rbp,%rsi
ba0d(3): mov %r12,%rdi
ba10(5): call 0xffff6970(%rip)
ba15(2): test %eax,%eax
ba17(6): js 0x93(%rip)
ba1d(5): mov 0x48(%rsp),%rax
ba22(3): mov %rax,(%rbx)
ba25(5): mov 0x10(%rsp),%rax
ba2a(4): mov %rax,0x8(%rbx)
ba2e(5): mov 0x18(%rsp),%rax
ba33(4): mov %rax,0x10(%rbx)
ba37(5): mov 0x20(%rsp),%rax
ba3c(4): mov %rax,0x18(%rbx)
ba40(4): shr $0x3f,%rax
ba44(3): mov %al,0x20(%rbx)
ba47(5): mov 0x28(%rsp),%rax
ba4c(4): mov %rax,0x28(%rbx)
ba50(5): mov 0x30(%rsp),%rax
ba55(4): mov %rax,0x30(%rbx)
ba59(2): xor %eax,%eax
ba5b(8): mov 0x188(%rsp),%rcx
ba63(9): xor $0x28,%rcx
ba6c(2): jnz 0x45(%rip)
ba6e(7): add $0x190,%rsp
ba75(1): pop %rbx
ba76(1): pop %rbp
ba77(2): pop %r12
ba79(1): ret near (%rsp)
ba7a(6): nop 0x0(%rax,%rax,1)
ba80(7): lea 0x82(%rbp),%rdi
ba87(7): lea 0x50bd(%rip),%rsi
ba8e(5): call 0xffff6602(%rip)
ba93(2): test %eax,%eax
ba95(6): js 0xffffff6b(%rip)
ba9b(a): mov $0x1,0x20883b(%rip)
baa5(5): jmp 0xffffff1e(%rip)
baaa(5): mov $0xffffffff,%eax
baaf(2): jmp 0xffffffac(%rip)
bab1(5): call 0xffff673f(%rip)

"rpl_mbrtowc" :
bac0(2): push %r13
bac2(2): push %r12
bac4(3): mov %rsi,%r13
bac7(1): push %rbp
bac8(1): push %rbx
bac9(3): mov %rdi,%rbx
bacc(3): mov %rdx,%r12
bacf(4): sub $0x18,%rsp
bad3(9): mov $0x28,%rax
badc(5): mov %rax,0x8(%rsp)
bae1(2): xor %eax,%eax
bae3(5): lea 0x4(%rsp),%rax
bae8(3): test %rdi,%rdi
baeb(4): cmove %rax,%rbx
baef(3): mov %rbx,%rdi
baf2(5): call 0xffff671e(%rip)
baf7(4): cmp $0xfffffffd,%rax
bafb(3): mov %rax,%rbp
bafe(2): jbe 0x22(%rip)
bb00(3): test %r12,%r12
bb03(2): jz 0x1d(%rip)
bb05(2): xor %edi,%edi
bb07(5): call 0xf59(%rip)
bb0c(2): test %al,%al
bb0e(2): jnz 0x12(%rip)
bb10(5): movzx 0x0(%r13),%eax
bb15(5): mov $0x1,%ebp
bb1a(2): mov %eax,(%rbx)
bb1c(4): nop 0x0(%rax)
bb20(5): mov 0x8(%rsp),%rdx
bb25(9): xor $0x28,%rdx
bb2e(3): mov %rbp,%rax
bb31(2): jnz 0xd(%rip)
bb33(4): add $0x18,%rsp
bb37(1): pop %rbx
bb38(1): pop %rbp
bb39(2): pop %r12
bb3b(2): pop %r13
bb3d(1): ret near (%rsp)
bb3e(5): call 0xffff66b2(%rip)

"unescape_tab" :
bb50(1): push %rbx
bb51(3): mov %rdi,%rbx
bb54(5): call 0xffff665c(%rip)
bb59(3): mov %rbx,%rcx
bb5c(4): add $0x1,%rax
bb60(2): xor %edx,%edx
bb62(2): jmp 0x15(%rip)
bb64(4): nop 0x0(%rax)
bb68(3): mov %sil,(%rcx)
bb6b(3): mov %rdi,%rdx
bb6e(4): add $0x1,%rcx
bb72(3): cmp %rdx,%rax
bb75(2): jbe 0x5b(%rip)
bb77(4): movzx 0x0(%rbx,%rdx,1),%esi
bb7b(4): lea 0x1(%rdx),%rdi
bb7f(4): cmp $0x5c,%sil
bb83(2): jnz 0xffffffe5(%rip)
bb85(4): lea 0x4(%rdx),%r8
bb89(3): cmp %rax,%r8
bb8c(2): jnb 0xffffffdc(%rip)
bb8e(5): movzx 0x0(%rbx,%rdi,1),%r9d
bb93(4): lea 0xffffffd0(%r9),%r10d
bb97(4): cmp $0x3,%r10b
bb9b(2): jnbe 0xffffffcd(%rip)
bb9d(6): movzx 0x2(%rbx,%rdx,1),%r10d
bba3(4): lea 0xffffffd0(%r10),%r11d
bba7(4): cmp $0x7,%r11b
bbab(2): jnbe 0xffffffbd(%rip)
bbad(5): movzx 0x3(%rbx,%rdx,1),%edx
bbb2(4): lea 0xffffffd0(%rdx),%r11d
bbb6(4): cmp $0x7,%r11b
bbba(2): jnbe 0xffffffae(%rip)
bbbc(4): lea 0x0(%r10,%r9,8),%edx
bbc0(5): lea 0xffffff80(%r11,%rdx,8),%edx
bbc5(2): mov %dl,(%rcx)
bbc7(3): mov %r8,%rdx
bbca(2): jmp 0xffffffa4(%rip)
bbcc(4): nop 0x0(%rax)
bbd0(1): pop %rbx
bbd1(1): ret near (%rsp)

"free_mount_entry" :
bbe0(1): push %rbx
bbe1(3): mov %rdi,%rbx
bbe4(3): mov (%rdi),%rdi
bbe7(5): call 0xffff6489(%rip)
bbec(4): mov 0x8(%rbx),%rdi
bbf0(5): call 0xffff6480(%rip)
bbf5(4): mov 0x10(%rbx),%rdi
bbf9(5): call 0xffff6477(%rip)
bbfe(4): test $0x4,0x28(%rbx)
bc02(2): jz 0xb(%rip)
bc04(4): mov 0x18(%rbx),%rdi
bc08(5): call 0xffff6468(%rip)
bc0d(3): mov %rbx,%rdi
bc10(1): pop %rbx
bc11(5): jmp 0xffff645f(%rip)

"read_file_system_list" :
bc20(2): push %r15
bc22(2): push %r14
bc24(7): lea 0x435a(%rip),%rsi
bc2b(2): push %r13
bc2d(2): push %r12
bc2f(7): lea 0x4f1c(%rip),%rdi
bc36(1): push %rbp
bc37(1): push %rbx
bc38(4): sub $0x68,%rsp
bc3c(9): mov $0x28,%rax
bc45(5): mov %rax,0x58(%rsp)
bc4a(2): xor %eax,%eax
bc4c(5): call 0xffff6894(%rip)
bc51(3): test %rax,%rax
bc54(6): jz 0x44c(%rip)
bc5a(5): lea 0x40(%rsp),%r14
bc5f(5): lea 0x50(%rsp),%r13
bc64(5): lea 0x48(%rsp),%r12
bc69(3): mov %rax,%rbp
bc6c(9): mov $0x0,0x48(%rsp)
bc75(9): mov $0x0,0x50(%rsp)
bc7e(2): nop 
bc80(3): mov %rbp,%rcx
bc83(5): mov $0xa,%edx
bc88(3): mov %r13,%rsi
bc8b(3): mov %r12,%rdi
bc8e(5): call 0xffff66a2(%rip)
bc93(4): cmp $0xffffffff,%rax
bc97(6): jz 0x239(%rip)
bc9d(5): lea 0x1c(%rsp),%rcx
bca2(5): lea 0x18(%rsp),%rdx
bca7(4): sub $0x8,%rsp
bcab(5): lea 0x1f(%rsp),%rbx
bcb0(7): lea 0x4f49(%rip),%rsi
bcb7(1): push %rbx
bcb8(5): lea 0x34(%rsp),%rax
bcbd(1): push %rax
bcbe(5): lea 0x38(%rsp),%rax
bcc3(1): push %rax
bcc4(5): mov 0x68(%rsp),%rdi
bcc9(2): xor %eax,%eax
bccb(5): lea 0x5c(%rsp),%r9
bcd0(5): lea 0x58(%rsp),%r8
bcd5(5): call 0xffff673b(%rip)
bcda(3): and $0xfb,%eax
bcdd(4): add $0x20,%rsp
bce1(3): cmp $0x3,%eax
bce4(2): jnz 0xffffff9c(%rip)
bce6(5): movsxd 0x24(%rsp),%rdi
bceb(7): lea 0x4e75(%rip),%rsi
bcf2(5): add 0x48(%rsp),%rdi
bcf7(5): call 0xffff6889(%rip)
bcfc(3): test %rax,%rax
bcff(3): mov %rax,%r15
bd02(6): jz 0xffffff7e(%rip)
bd08(5): lea 0x2c(%rsp),%rcx
bd0d(5): lea 0x28(%rsp),%rdx
bd12(4): sub $0x8,%rsp
bd16(1): push %rbx
bd17(7): lea 0x4e4d(%rip),%rsi
bd1e(3): mov %rax,%rdi
bd21(2): xor %eax,%eax
bd23(5): lea 0x44(%rsp),%r9
bd28(5): lea 0x40(%rsp),%r8
bd2d(5): call 0xffff66e3(%rip)
bd32(3): and $0xfb,%eax
bd35(3): cmp $0x1,%eax
bd38(1): pop %rdx
bd39(1): pop %rcx
bd3a(6): jnz 0xffffff46(%rip)
bd40(5): movsxd 0x3c(%rsp),%rax
bd45(5): mov 0x48(%rsp),%rdx
bd4a(4): mov $0x0,0x0(%rdx,%rax,1)
bd4e(5): movsxd 0x24(%rsp),%rax
bd53(5): mov 0x48(%rsp),%rdx
bd58(4): mov $0x0,0x0(%rdx,%rax,1)
bd5c(5): movsxd 0x2c(%rsp),%rax
bd61(5): mov $0x0,0x0(%r15,%rax,1)
bd66(5): movsxd 0x34(%rsp),%rax
bd6b(5): mov $0x0,0x0(%r15,%rax,1)
bd70(5): movsxd 0x30(%rsp),%rdi
bd75(3): add %r15,%rdi
bd78(5): call 0xfffffdd8(%rip)
bd7d(5): movsxd 0x20(%rsp),%rdi
bd82(5): add 0x48(%rsp),%rdi
bd87(5): call 0xfffffdc9(%rip)
bd8c(5): movsxd 0x38(%rsp),%rdi
bd91(5): add 0x48(%rsp),%rdi
bd96(5): call 0xfffffdba(%rip)
bd9b(5): mov $0x38,%edi
bda0(5): call 0xfffff030(%rip)
bda5(5): movsxd 0x30(%rsp),%rdi
bdaa(3): mov %rax,%rbx
bdad(3): add %r15,%rdi
bdb0(5): call 0xfffff250(%rip)
bdb5(5): movsxd 0x20(%rsp),%rdi
bdba(3): mov %rax,(%rbx)
bdbd(5): add 0x48(%rsp),%rdi
bdc2(5): call 0xfffff23e(%rip)
bdc7(5): movsxd 0x38(%rsp),%rdi
bdcc(4): mov %rax,0x8(%rbx)
bdd0(5): add 0x48(%rsp),%rdi
bdd5(5): call 0xfffff22b(%rip)
bdda(5): movsxd 0x28(%rsp),%rdi
bddf(4): mov %rax,0x10(%rbx)
bde3(3): add %r15,%rdi
bde6(5): call 0xfffff21a(%rip)
bdeb(4): mov 0x18(%rsp),%edx
bdef(3): mov %rax,%r15
bdf2(4): mov %rax,0x18(%rbx)
bdf6(4): mov 0x1c(%rsp),%eax
bdfa(a): mov $0x-17592186044416,%rsi
be04(7): lea 0x4d76(%rip),%rdi
be0b(4): or $0x4,0x28(%rbx)
be0f(3): mov %rdx,%rcx
be12(4): shl/sal $0x20,%rdx
be16(4): shl/sal $0x8,%rcx
be1a(3): and %rsi,%rdx
be1d(a): mov $0x17592184995840,%rsi
be27(6): and $0xfff00,%ecx
be2d(3): or %rcx,%rdx
be30(3): movzx %al,%ecx
be33(4): shl/sal $0xc,%rax
be37(3): or %rcx,%rdx
be3a(3): and %rsi,%rax
be3d(5): mov $0x7,%ecx
be42(3): mov %r15,%rsi
be45(3): or %rdx,%rax
be48(5): mov $0x1,%edx
be4d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
be4f(4): mov %rax,0x20(%rbx)
be53(3): setnbe %al
be56(2): sbb $0x0,%al
be58(2): test %al,%al
be5a(2): jz 0x20(%rip)
be5c(7): lea 0x4d25(%rip),%rdi
be63(5): mov $0x5,%ecx
be68(3): mov %r15,%rsi
be6b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
be6d(3): setnbe %al
be70(2): sbb $0x0,%al
be72(2): test %al,%al
be74(6): jnz 0xb4(%rip)
be7a(4): movzx 0x28(%rbx),%eax
be7e(3): mov (%rbx),%r8
be81(5): mov $0x3a,%esi
be86(3): mov %r8,%rdi
be89(5): mov %r8,0x8(%rsp)
be8e(3): and $0xfe,%eax
be91(2): or %edx,%eax
be93(3): mov %al,0x28(%rbx)
be96(5): call 0xffff638a(%rip)
be9b(3): test %rax,%rax
be9e(5): mov $0x1,%edx
bea3(5): mov 0x8(%rsp),%r8
bea8(6): jz 0x1c8(%rip)
beae(4): movzx 0x28(%rbx),%eax
beb2(2): add %edx,%edx
beb4(3): and $0xfd,%eax
beb7(2): or %edx,%eax
beb9(3): mov %al,0x28(%rbx)
bebc(3): mov %rbx,(%r14)
bebf(4): lea 0x30(%rbx),%r14
bec3(5): jmp 0xfffffdbd(%rip)
bec8(8): nop 0x0(%rax,%rax,1)
bed0(5): mov 0x48(%rsp),%rdi
bed5(5): call 0xffff619b(%rip)
beda(4): test $0x20,0x0(%rbp)
bede(6): jnz 0x562(%rip)
bee4(3): mov %rbp,%rdi
bee7(5): call 0xc99(%rip)
beec(3): cmp $0xff,%eax
beef(6): jz 0x43f(%rip)
bef5(7): mov $0x0,(%r14)
befc(5): mov 0x40(%rsp),%rax
bf01(5): mov 0x58(%rsp),%rbx
bf06(9): xor $0x28,%rbx
bf0f(6): jnz 0x554(%rip)
bf15(4): add $0x68,%rsp
bf19(1): pop %rbx
bf1a(1): pop %rbp
bf1b(2): pop %r12
bf1d(2): pop %r13
bf1f(2): pop %r14
bf21(2): pop %r15
bf23(1): ret near (%rsp)
bf24(4): nop 0x0(%rax)
bf28(7): lea 0x4c5e(%rip),%rdi
bf2f(5): mov $0x6,%ecx
bf34(3): mov %r15,%rsi
bf37(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
bf39(3): setnbe %al
bf3c(2): sbb $0x0,%al
bf3e(2): test %al,%al
bf40(6): jz 0xffffff3a(%rip)
bf46(7): lea 0x4c46(%rip),%rdi
bf4d(5): mov $0x8,%ecx
bf52(3): mov %r15,%rsi
bf55(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
bf57(3): setnbe %al
bf5a(2): sbb $0x0,%al
bf5c(2): test %al,%al
bf5e(6): jz 0xffffff1c(%rip)
bf64(7): lea 0x4c30(%rip),%rdi
bf6b(5): mov $0x7,%ecx
bf70(3): mov %r15,%rsi
bf73(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
bf75(3): setnbe %al
bf78(2): sbb $0x0,%al
bf7a(2): test %al,%al
bf7c(6): jz 0xfffffefe(%rip)
bf82(7): lea 0x4c19(%rip),%rdi
bf89(5): mov $0x8,%ecx
bf8e(3): mov %r15,%rsi
bf91(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
bf93(3): setnbe %al
bf96(2): sbb $0x0,%al
bf98(2): test %al,%al
bf9a(6): jz 0xfffffee0(%rip)
bfa0(7): lea 0x4c03(%rip),%rdi
bfa7(5): mov $0x7,%ecx
bfac(3): mov %r15,%rsi
bfaf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
bfb1(3): setnbe %al
bfb4(2): sbb $0x0,%al
bfb6(2): test %al,%al
bfb8(6): jz 0xfffffec2(%rip)
bfbe(7): lea 0x4bec(%rip),%rdi
bfc5(5): mov $0xb,%ecx
bfca(3): mov %r15,%rsi
bfcd(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
bfcf(3): setnbe %al
bfd2(2): sbb $0x0,%al
bfd4(2): test %al,%al
bfd6(6): jz 0xfffffea4(%rip)
bfdc(7): lea 0x4bd9(%rip),%rdi
bfe3(5): mov $0x6,%ecx
bfe8(3): mov %r15,%rsi
bfeb(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
bfed(3): setnbe %al
bff0(2): sbb $0x0,%al
bff2(2): test %al,%al
bff4(6): jz 0xfffffe86(%rip)
bffa(7): lea 0x4bc1(%rip),%rdi
c001(5): mov $0x6,%ecx
c006(3): mov %r15,%rsi
c009(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c00b(3): setnbe %al
c00e(2): sbb $0x0,%al
c010(2): test %al,%al
c012(6): jz 0xfffffe68(%rip)
c018(7): lea 0x4ba9(%rip),%rdi
c01f(5): mov $0x7,%ecx
c024(3): mov %r15,%rsi
c027(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c029(3): setnbe %al
c02c(2): sbb $0x0,%al
c02e(2): test %al,%al
c030(6): jz 0xfffffe4a(%rip)
c036(7): lea 0x4b92(%rip),%rsi
c03d(3): mov %r15,%rdi
c040(4): mov %dl,0x8(%rsp)
c044(5): call 0xffff62fc(%rip)
c049(2): test %eax,%eax
c04b(5): movzx 0x8(%rsp),%edx
c050(6): jz 0xfffffe2a(%rip)
c056(7): lea 0x4b79(%rip),%rsi
c05d(3): mov %r15,%rdi
c060(5): call 0xffff62e0(%rip)
c065(2): test %eax,%eax
c067(3): setz %dl
c06a(5): jmp 0xfffffe10(%rip)
c06f(1): nop 
c070(4): cmp $0x2f,(%r8)
c074(6): jz 0x32c(%rip)
c07a(7): lea 0x4b65(%rip),%rsi
c081(5): mov $0x7,%ecx
c086(3): mov %r8,%rdi
c089(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c08b(3): setnbe %al
c08e(2): sbb $0x0,%al
c090(2): test %al,%al
c092(3): setz %dl
c095(5): jmp 0xfffffe19(%rip)
c09a(6): nop 0x0(%rax,%rax,1)
c0a0(7): lea 0x3ede(%rip),%rsi
c0a7(7): lea 0x4b3f(%rip),%rdi
c0ae(5): call 0xffff6342(%rip)
c0b3(3): test %rax,%rax
c0b6(3): mov %rax,%rbx
c0b9(6): jz 0x3a3(%rip)
c0bf(3): mov %rbx,%rdi
c0c2(5): lea 0x40(%rsp),%r14
c0c7(7): lea 0x4ab3(%rip),%rbp
c0ce(5): call 0xffff6312(%rip)
c0d3(3): test %rax,%rax
c0d6(3): mov %rax,%r13
c0d9(6): jz 0x245(%rip)
c0df(1): nop 
c0e0(7): lea 0x4b10(%rip),%rsi
c0e7(3): mov %r13,%rdi
c0ea(5): call 0xffff6486(%rip)
c0ef(5): mov $0x38,%edi
c0f4(3): mov %rax,%r15
c0f7(5): call 0xffffecd9(%rip)
c0fc(4): mov 0x0(%r13),%rdi
c100(3): mov %rax,%r12
c103(5): call 0xffffeefd(%rip)
c108(4): mov 0x8(%r13),%rdi
c10c(4): mov %rax,(%r12)
c110(5): call 0xffffeef0(%rip)
c115(4): mov 0x10(%r13),%rdi
c119(5): mov %rax,0x8(%r12)
c11e(9): mov $0x0,0x10(%r12)
c127(5): call 0xffffeed9(%rip)
c12c(5): mov $0x7,%ecx
c131(3): mov %rax,%rsi
c134(3): mov %rbp,%rdi
c137(6): or $0x4,0x28(%r12)
c13d(3): mov %rax,%r13
c140(5): mov %rax,0x18(%r12)
c145(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c147(5): mov $0x1,%edx
c14c(3): setnbe %al
c14f(2): sbb $0x0,%al
c151(2): test %al,%al
c153(6): jz 0x165(%rip)
c159(7): lea 0x4a28(%rip),%rdi
c160(5): mov $0x5,%ecx
c165(3): mov %r13,%rsi
c168(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c16a(3): setnbe %al
c16d(2): sbb $0x0,%al
c16f(2): test %al,%al
c171(6): jz 0x147(%rip)
c177(7): lea 0x4a0f(%rip),%rdi
c17e(5): mov $0x6,%ecx
c183(3): mov %r13,%rsi
c186(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c188(3): setnbe %al
c18b(2): sbb $0x0,%al
c18d(2): test %al,%al
c18f(6): jz 0x129(%rip)
c195(7): lea 0x49f7(%rip),%rdi
c19c(5): mov $0x8,%ecx
c1a1(3): mov %r13,%rsi
c1a4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c1a6(3): setnbe %al
c1a9(2): sbb $0x0,%al
c1ab(2): test %al,%al
c1ad(6): jz 0x10b(%rip)
c1b3(7): lea 0x49e1(%rip),%rdi
c1ba(5): mov $0x7,%ecx
c1bf(3): mov %r13,%rsi
c1c2(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c1c4(3): setnbe %al
c1c7(2): sbb $0x0,%al
c1c9(2): test %al,%al
c1cb(6): jz 0xed(%rip)
c1d1(7): lea 0x49ca(%rip),%rdi
c1d8(5): mov $0x8,%ecx
c1dd(3): mov %r13,%rsi
c1e0(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c1e2(3): setnbe %al
c1e5(2): sbb $0x0,%al
c1e7(2): test %al,%al
c1e9(6): jz 0xcf(%rip)
c1ef(7): lea 0x49b4(%rip),%rdi
c1f6(5): mov $0x7,%ecx
c1fb(3): mov %r13,%rsi
c1fe(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c200(3): setnbe %al
c203(2): sbb $0x0,%al
c205(2): test %al,%al
c207(6): jz 0xb1(%rip)
c20d(7): lea 0x499d(%rip),%rdi
c214(5): mov $0xb,%ecx
c219(3): mov %r13,%rsi
c21c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c21e(3): setnbe %al
c221(2): sbb $0x0,%al
c223(2): test %al,%al
c225(6): jz 0x93(%rip)
c22b(7): lea 0x498a(%rip),%rdi
c232(5): mov $0x6,%ecx
c237(3): mov %r13,%rsi
c23a(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c23c(3): setnbe %al
c23f(2): sbb $0x0,%al
c241(2): test %al,%al
c243(2): jz 0x75(%rip)
c245(7): lea 0x4976(%rip),%rdi
c24c(5): mov $0x6,%ecx
c251(3): mov %r13,%rsi
c254(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c256(3): setnbe %al
c259(2): sbb $0x0,%al
c25b(2): test %al,%al
c25d(2): jz 0x5b(%rip)
c25f(7): lea 0x4962(%rip),%rdi
c266(5): mov $0x7,%ecx
c26b(3): mov %r13,%rsi
c26e(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c270(3): setnbe %al
c273(2): sbb $0x0,%al
c275(2): test %al,%al
c277(2): jz 0x41(%rip)
c279(7): lea 0x494f(%rip),%rsi
c280(3): mov %r13,%rdi
c283(4): mov %dl,0x8(%rsp)
c287(5): call 0xffff60b9(%rip)
c28c(2): test %eax,%eax
c28e(5): movzx 0x8(%rsp),%edx
c293(2): jz 0x25(%rip)
c295(7): lea 0x493a(%rip),%rsi
c29c(3): mov %r13,%rdi
c29f(5): call 0xffff60a1(%rip)
c2a4(3): test %r15,%r15
c2a7(3): setz %dl
c2aa(2): test %eax,%eax
c2ac(3): setz %al
c2af(2): and %eax,%edx
c2b1(7): nop 0x0(%rax)
c2b8(6): movzx 0x28(%r12),%eax
c2be(4): mov (%r12),%r15
c2c2(5): mov $0x3a,%esi
c2c7(3): mov %r15,%rdi
c2ca(3): and $0xfe,%eax
c2cd(2): or %edx,%eax
c2cf(5): mov %al,0x28(%r12)
c2d4(5): call 0xffff5f4c(%rip)
c2d9(3): test %rax,%rax
c2dc(5): mov $0x1,%edx
c2e1(6): jz 0x97(%rip)
c2e7(6): movzx 0x28(%r12),%eax
c2ed(2): add %edx,%edx
c2ef(9): mov $0xffffffff,0x20(%r12)
c2f8(3): mov %rbx,%rdi
c2fb(3): and $0xfd,%eax
c2fe(2): or %edx,%eax
c300(5): mov %al,0x28(%r12)
c305(3): mov %r12,(%r14)
c308(5): lea 0x30(%r12),%r14
c30d(5): call 0xffff60d3(%rip)
c312(3): test %rax,%rax
c315(3): mov %rax,%r13
c318(6): jnz 0xfffffdc8(%rip)
c31e(3): mov %rbx,%rdi
c321(5): call 0xffff5d5f(%rip)
c326(2): test %eax,%eax
c328(6): jnz 0xfffffbcd(%rip)
c32e(5): call 0xffff5d82(%rip)
c333(3): mov (%rax),%r13d
c336(3): mov %rax,%r12
c339(7): mov $0x0,(%r14)
c340(5): mov 0x40(%rsp),%rdi
c345(3): test %rdi,%rdi
c348(2): jz 0x1e(%rip)
c34a(6): nop 0x0(%rax,%rax,1)
c350(4): mov 0x30(%rdi),%rbx
c354(5): call 0xfffff88c(%rip)
c359(3): test %rbx,%rbx
c35c(5): mov %rbx,0x40(%rsp)
c361(3): mov %rbx,%rdi
c364(2): jnz 0xffffffec(%rip)
c366(4): mov %r13d,(%r12)
c36a(2): xor %eax,%eax
c36c(5): jmp 0xfffffb95(%rip)
c371(7): nop 0x0(%rax)
c378(4): cmp $0x2f,(%r15)
c37c(2): jz 0x74(%rip)
c37e(7): lea 0x4861(%rip),%rsi
c385(5): mov $0x7,%ecx
c38a(3): mov %r15,%rdi
c38d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c38f(3): setnbe %al
c392(2): sbb $0x0,%al
c394(2): test %al,%al
c396(3): setz %dl
c399(5): jmp 0xffffff4e(%rip)
c39e(2): nop 
c3a0(5): cmp $0x2f,0x1(%r8)
c3a5(6): jnz 0xfffffcd5(%rip)
c3ab(7): lea 0x4829(%rip),%rdi
c3b2(5): mov $0x6,%ecx
c3b7(3): mov %r15,%rsi
c3ba(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c3bc(3): setnbe %al
c3bf(2): sbb $0x0,%al
c3c1(2): test %al,%al
c3c3(6): jz 0xfffffaeb(%rip)
c3c9(7): lea 0x4811(%rip),%rdi
c3d0(5): mov $0x5,%ecx
c3d5(3): mov %r15,%rsi
c3d8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c3da(3): setnbe %al
c3dd(2): sbb $0x0,%al
c3df(2): test %al,%al
c3e1(6): jz 0xfffffacd(%rip)
c3e7(5): jmp 0xfffffc93(%rip)
c3ec(4): nop 0x0(%rax)
c3f0(5): cmp $0x2f,0x1(%r15)
c3f5(2): jnz 0xffffff89(%rip)
c3f7(7): lea 0x47dd(%rip),%rdi
c3fe(5): mov $0x6,%ecx
c403(3): mov %r13,%rsi
c406(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c408(3): setnbe %al
c40b(2): sbb $0x0,%al
c40d(2): test %al,%al
c40f(6): jz 0xfffffed8(%rip)
c415(7): lea 0x47c5(%rip),%rdi
c41c(5): mov $0x5,%ecx
c421(3): mov %r13,%rsi
c424(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
c426(3): setnbe %al
c429(2): sbb $0x0,%al
c42b(2): test %al,%al
c42d(6): jz 0xfffffeba(%rip)
c433(5): jmp 0xffffff4b(%rip)
c438(8): nop 0x0(%rax,%rax,1)
c440(5): call 0xffff5c70(%rip)
c445(3): mov (%rax),%r13d
c448(3): mov %rax,%r12
c44b(3): mov %rbp,%rdi
c44e(5): call 0x732(%rip)
c453(4): mov %r13d,(%r12)
c457(5): jmp 0xfffffee2(%rip)
c45c(2): xor %eax,%eax
c45e(5): jmp 0xfffffaa3(%rip)
c463(5): call 0xffff5d8d(%rip)

"rpl_vasprintf" :
c470(1): push %rbx
c471(3): mov %rsi,%rax
c474(3): mov %rdi,%rbx
c477(2): xor %edi,%edi
c479(4): sub $0x10,%rsp
c47d(9): mov $0x28,%rcx
c486(5): mov %rcx,0x8(%rsp)
c48b(2): xor %ecx,%ecx
c48d(3): mov %rsp,%rsi
c490(3): mov %rdx,%rcx
c493(3): mov %rax,%rdx
c496(5): call 0x80a(%rip)
c49b(3): test %rax,%rax
c49e(2): jz 0x44(%rip)
c4a0(4): mov (%rsp),%rdx
c4a4(7): cmp $0x7fffffff,%rdx
c4ab(2): jnbe 0x1d(%rip)
c4ad(3): mov %rax,(%rbx)
c4b0(2): mov %edx,%eax
c4b2(5): mov 0x8(%rsp),%rbx
c4b7(9): xor $0x28,%rbx
c4c0(2): jnz 0x29(%rip)
c4c2(4): add $0x10,%rsp
c4c6(1): pop %rbx
c4c7(1): ret near (%rsp)
c4c8(3): mov %rax,%rdi
c4cb(5): call 0xffff5ba5(%rip)
c4d0(5): call 0xffff5be0(%rip)
c4d5(6): mov $0x4b,(%rax)
c4db(5): mov $0xffffffff,%eax
c4e0(2): jmp 0xffffffd2(%rip)
c4e2(5): mov $0xffffffff,%eax
c4e7(2): jmp 0xffffffcb(%rip)
c4e9(5): call 0xffff5d07(%rip)

"areadlink_with_size" :
c4f0(2): push %r15
c4f2(2): push %r14
c4f4(5): mov $0x401,%eax
c4f9(2): push %r13
c4fb(2): push %r12
c4fd(3): mov %rdi,%r13
c500(1): push %rbp
c501(1): push %rbx
c502(4): lea 0x1(%rsi),%rbx
c506(a): mov $0x4611686018427387903,%r14
c510(a): mov $0x9223372036854775806,%r15
c51a(4): sub $0x8,%rsp
c51e(7): cmp $0x401,%rsi
c525(4): cmovnb %rax,%rbx
c529(7): nop 0x0(%rax)
c530(3): mov %rbx,%rdi
c533(5): call 0xffff5e8d(%rip)
c538(3): test %rax,%rax
c53b(3): mov %rax,%rbp
c53e(2): jz 0x3d(%rip)
c540(3): mov %rbx,%rdx
c543(3): mov %rax,%rsi
c546(3): mov %r13,%rdi
c549(5): call 0xffff5bf7(%rip)
c54e(3): test %rax,%rax
c551(3): mov %rax,%r12
c554(2): js 0x54(%rip)
c556(3): cmp %r12,%rbx
c559(2): jnbe 0x67(%rip)
c55b(3): mov %rbp,%rdi
c55e(5): call 0xffff5b12(%rip)
c563(3): cmp %r14,%rbx
c566(2): jnbe 0x2a(%rip)
c568(3): add %rbx,%rbx
c56b(3): mov %rbx,%rdi
c56e(5): call 0xffff5e52(%rip)
c573(3): test %rax,%rax
c576(3): mov %rax,%rbp
c579(2): jnz 0xffffffc7(%rip)
c57b(4): add $0x8,%rsp
c57f(3): mov %rbp,%rax
c582(1): pop %rbx
c583(1): pop %rbp
c584(2): pop %r12
c586(2): pop %r13
c588(2): pop %r14
c58a(2): pop %r15
c58c(1): ret near (%rsp)
c58d(3): nop (%rax)
c590(3): cmp %r15,%rbx
c593(2): jnbe 0x3d(%rip)
c595(a): mov $0x9223372036854775807,%rbx
c59f(2): jmp 0xffffff91(%rip)
c5a1(7): nop 0x0(%rax)
c5a8(5): call 0xffff5b08(%rip)
c5ad(3): cmp $0x22,(%rax)
c5b0(2): jz 0xffffffa6(%rip)
c5b2(3): mov %rbp,%rdi
c5b5(2): xor %ebp,%ebp
c5b7(5): call 0xffff5ab9(%rip)
c5bc(2): jmp 0xffffffbf(%rip)
c5be(2): nop 
c5c0(6): mov $0x0,0x0(%rbp,%r12,1)
c5c6(2): jmp 0xffffffb5(%rip)
c5c8(8): nop 0x0(%rax,%rax,1)
c5d0(5): call 0xffff5ae0(%rip)
c5d5(2): xor %ebp,%ebp
c5d7(6): mov $0xc,(%rax)
c5dd(2): jmp 0xffffff9e(%rip)

"__argmatch_die" :
c5e0(5): mov $0x1,%edi
c5e5(5): jmp 0xffff878b(%rip)

"argmatch" :
c5f0(2): push %r15
c5f2(2): push %r14
c5f4(3): mov %rsi,%r15
c5f7(2): push %r13
c5f9(2): push %r12
c5fb(3): mov %rcx,%r13
c5fe(1): push %rbp
c5ff(1): push %rbx
c600(3): mov %rdx,%rbp
c603(4): sub $0x28,%rsp
c607(5): mov %rdi,0x8(%rsp)
c60c(5): mov %rdx,0x18(%rsp)
c611(5): call 0xffff5b9f(%rip)
c616(3): mov (%r15),%r14
c619(8): mov $0xffffffff,(%rsp)
c621(3): test %r14,%r14
c624(6): jz 0xb9(%rip)
c62a(3): mov %rax,%r12
c62d(5): mov $0x0,0x17(%rsp)
c632(2): xor %ebx,%ebx
c634(2): jmp 0x53(%rip)
c636(a): nop 0x0(%rax,%rax,1)
c640(5): mov 0x18(%rsp),%rax
c645(3): test %rax,%rax
c648(6): jz 0xa8(%rip)
c64e(4): mov (%rsp),%rdi
c652(3): mov %r13,%rdx
c655(3): mov %rbp,%rsi
c658(4): imul %r13,%rdi
c65c(3): add %rax,%rdi
c65f(5): call 0xffff5ca1(%rip)
c664(2): test %eax,%eax
c666(5): movzx 0x17(%rsp),%eax
c66b(5): mov $0x1,%ecx
c670(3): cmovne %ecx,%eax
c673(4): mov %al,0x17(%rsp)
c677(4): add $0x1,%rbx
c67b(3): add %r13,%rbp
c67e(4): mov 0x0(%r15,%rbx,8),%r14
c682(3): test %r14,%r14
c685(2): jz 0x43(%rip)
c687(5): mov 0x8(%rsp),%rsi
c68c(3): mov %r12,%rdx
c68f(3): mov %r14,%rdi
c692(5): call 0xffff5a2e(%rip)
c697(2): test %eax,%eax
c699(2): jnz 0xffffffde(%rip)
c69b(3): mov %r14,%rdi
c69e(5): call 0xffff5b12(%rip)
c6a3(3): cmp %r12,%rax
c6a6(2): jz 0x5a(%rip)
c6a8(5): cmp $0xffffffff,(%rsp)
c6ad(2): jnz 0xffffff93(%rip)
c6af(4): mov %rbx,(%rsp)
c6b3(4): add $0x1,%rbx
c6b7(3): add %r13,%rbp
c6ba(4): mov 0x0(%r15,%rbx,8),%r14
c6be(3): test %r14,%r14
c6c1(2): jnz 0xffffffc6(%rip)
c6c3(5): nop 0x0(%rax,%rax,1)
c6c8(5): cmp $0x0,0x17(%rsp)
c6cd(7): mov $0xfffffffe,%rax
c6d4(5): cmove (%rsp),%rax
c6d9(4): mov %rax,(%rsp)
c6dd(4): mov (%rsp),%rax
c6e1(4): add $0x28,%rsp
c6e5(1): pop %rbx
c6e6(1): pop %rbp
c6e7(2): pop %r12
c6e9(2): pop %r13
c6eb(2): pop %r14
c6ed(2): pop %r15
c6ef(1): ret near (%rsp)
c6f0(5): mov $0x1,0x17(%rsp)
c6f5(2): jmp 0xffffff82(%rip)
c6f7(9): nop 0x0(%rax,%rax,1)
c700(4): mov %rbx,(%rsp)
c704(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
c710(4): cmp $0xffffffff,%rdx
c714(2): push %r12
c716(5): mov $0x5,%edx
c71b(1): push %rbp
c71c(3): mov %rsi,%r12
c71f(1): push %rbx
c720(3): mov %rdi,%rbp
c723(2): jz 0x4d(%rip)
c725(7): lea 0x450f(%rip),%rsi
c72c(2): xor %edi,%edi
c72e(5): call 0xffff5a62(%rip)
c733(3): mov %rax,%rbx
c736(3): mov %rbp,%rsi
c739(5): mov $0x1,%edi
c73e(5): call 0xffffddb2(%rip)
c743(3): mov %r12,%rdx
c746(3): mov %rax,%rbp
c749(5): mov $0x8,%esi
c74e(2): xor %edi,%edi
c750(5): call 0xffffd9d0(%rip)
c755(3): mov %rbp,%r8
c758(3): mov %rbx,%rdx
c75b(3): mov %rax,%rcx
c75e(1): pop %rbx
c75f(1): pop %rbp
c760(2): pop %r12
c762(2): xor %esi,%esi
c764(2): xor %edi,%edi
c766(2): xor %eax,%eax
c768(5): jmp 0xffff5d38(%rip)
c76d(3): nop (%rax)
c770(7): lea 0x44a9(%rip),%rsi
c777(2): xor %edi,%edi
c779(5): call 0xffff5a17(%rip)
c77e(3): mov %rax,%rbx
c781(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
c790(2): push %r15
c792(2): push %r14
c794(3): mov %rdi,%r14
c797(2): push %r13
c799(2): push %r12
c79b(2): xor %edi,%edi
c79d(1): push %rbp
c79e(1): push %rbx
c79f(3): mov %rsi,%rbp
c7a2(7): lea 0x44af(%rip),%rsi
c7a9(3): mov %rdx,%r12
c7ac(5): mov $0x5,%edx
c7b1(4): sub $0x8,%rsp
c7b5(7): mov 0x207b84(%rip),%rbx
c7bc(5): call 0xffff59d4(%rip)
c7c1(3): mov %rax,%rdi
c7c4(3): mov %rbx,%rsi
c7c7(5): call 0xffff5b49(%rip)
c7cc(3): mov (%r14),%r15
c7cf(3): test %r15,%r15
c7d2(6): jz 0x96(%rip)
c7d8(3): xor %r13d,%r13d
c7db(2): xor %ebx,%ebx
c7dd(2): jmp 0x3b(%rip)
c7df(1): nop 
c7e0(3): mov %r15,%rdi
c7e3(4): add $0x1,%rbx
c7e7(3): mov %rbp,%r13
c7ea(5): call 0xffffdd26(%rip)
c7ef(7): mov 0x207b4a(%rip),%rdi
c7f6(7): lea 0x4470(%rip),%rdx
c7fd(3): mov %rax,%rcx
c800(5): mov $0x1,%esi
c805(2): xor %eax,%eax
c807(3): add %r12,%rbp
c80a(5): call 0xffff5d26(%rip)
c80f(4): mov 0x0(%r14,%rbx,8),%r15
c813(3): test %r15,%r15
c816(2): jz 0x52(%rip)
c818(3): test %rbx,%rbx
c81b(2): jz 0xffffffc5(%rip)
c81d(3): mov %r12,%rdx
c820(3): mov %rbp,%rsi
c823(3): mov %r13,%rdi
c826(5): call 0xffff5ada(%rip)
c82b(2): test %eax,%eax
c82d(2): jnz 0xffffffb3(%rip)
c82f(3): mov %r15,%rdi
c832(4): add $0x1,%rbx
c836(3): add %r12,%rbp
c839(5): call 0xffffdcd7(%rip)
c83e(7): mov 0x207afb(%rip),%rdi
c845(7): lea 0x4429(%rip),%rdx
c84c(3): mov %rax,%rcx
c84f(5): mov $0x1,%esi
c854(2): xor %eax,%eax
c856(5): call 0xffff5cda(%rip)
c85b(4): mov 0x0(%r14,%rbx,8),%r15
c85f(3): test %r15,%r15
c862(2): jnz 0xffffffb6(%rip)
c864(4): nop 0x0(%rax)
c868(7): mov 0x207ad1(%rip),%rdi
c86f(4): mov 0x28(%rdi),%rax
c873(4): cmp 0x30(%rdi),%rax
c877(2): jnb 0x21(%rip)
c879(4): lea 0x1(%rax),%rdx
c87d(4): mov %rdx,0x28(%rdi)
c881(3): mov $0xa,(%rax)
c884(4): add $0x8,%rsp
c888(1): pop %rbx
c889(1): pop %rbp
c88a(2): pop %r12
c88c(2): pop %r13
c88e(2): pop %r14
c890(2): pop %r15
c892(1): ret near (%rsp)
c893(5): nop 0x0(%rax,%rax,1)
c898(4): add $0x8,%rsp
c89c(5): mov $0xa,%esi
c8a1(1): pop %rbx
c8a2(1): pop %rbp
c8a3(2): pop %r12
c8a5(2): pop %r13
c8a7(2): pop %r14
c8a9(2): pop %r15
c8ab(5): jmp 0xffff5995(%rip)

"__xargmatch_internal" :
c8b0(2): push %r15
c8b2(2): push %r14
c8b4(3): mov %rdi,%r14
c8b7(2): push %r13
c8b9(2): push %r12
c8bb(3): mov %rsi,%r12
c8be(1): push %rbp
c8bf(1): push %rbx
c8c0(3): mov %rcx,%rbp
c8c3(3): mov %rdx,%rbx
c8c6(3): mov %r8,%rcx
c8c9(3): mov %rbp,%rdx
c8cc(4): sub $0x8,%rsp
c8d0(3): mov %rbx,%rsi
c8d3(3): mov %r12,%rdi
c8d6(3): mov %r8,%r15
c8d9(3): mov %r9,%r13
c8dc(5): call 0xfffffd14(%rip)
c8e1(3): test %rax,%rax
c8e4(2): js 0x11(%rip)
c8e6(4): add $0x8,%rsp
c8ea(1): pop %rbx
c8eb(1): pop %rbp
c8ec(2): pop %r12
c8ee(2): pop %r13
c8f0(2): pop %r14
c8f2(2): pop %r15
c8f4(1): ret near (%rsp)
c8f5(3): mov %rax,%rdx
c8f8(3): mov %r12,%rsi
c8fb(3): mov %r14,%rdi
c8fe(5): call 0xfffffe12(%rip)
c903(3): mov %r15,%rdx
c906(3): mov %rbp,%rsi
c909(3): mov %rbx,%rdi
c90c(5): call 0xfffffe84(%rip)
c911(3): call %r13
c914(7): mov $0xffffffff,%rax
c91b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
c920(2): push %r14
c922(2): push %r13
c924(2): push %r12
c926(1): push %rbp
c927(1): push %rbx
c928(3): mov (%rsi),%r14
c92b(3): test %r14,%r14
c92e(2): jz 0x33(%rip)
c930(3): mov %rcx,%r12
c933(3): mov %rdi,%r13
c936(3): mov %rdx,%rbp
c939(4): lea 0x8(%rsi),%rbx
c93d(2): jmp 0x12(%rip)
c93f(1): nop 
c940(3): mov (%rbx),%r14
c943(3): add %r12,%rbp
c946(4): add $0x8,%rbx
c94a(3): test %r14,%r14
c94d(2): jz 0x14(%rip)
c94f(3): mov %r12,%rdx
c952(3): mov %rbp,%rsi
c955(3): mov %r13,%rdi
c958(5): call 0xffff59a8(%rip)
c95d(2): test %eax,%eax
c95f(2): jnz 0xffffffe1(%rip)
c961(1): pop %rbx
c962(3): mov %r14,%rax
c965(1): pop %rbp
c966(2): pop %r12
c968(2): pop %r13
c96a(2): pop %r14
c96c(1): ret near (%rsp)

"close_stream" :
c970(2): push %r12
c972(1): push %rbp
c973(3): mov %rdi,%rbp
c976(1): push %rbx
c977(5): call 0xffff5769(%rip)
c97c(3): mov 0x0(%rbp),%ebx
c97f(3): mov %rbp,%rdi
c982(3): mov %rax,%r12
c985(5): call 0x1fb(%rip)
c98a(3): and $0x20,%ebx
c98d(2): test %ebx,%ebx
c98f(2): jnz 0x19(%rip)
c991(2): test %eax,%eax
c993(2): jz 0xc(%rip)
c995(3): test %r12,%r12
c998(5): mov $0xffffffff,%eax
c99d(2): jz 0x3b(%rip)
c99f(1): pop %rbx
c9a0(1): pop %rbp
c9a1(2): pop %r12
c9a3(1): ret near (%rsp)
c9a4(4): nop 0x0(%rax)
c9a8(2): test %eax,%eax
c9aa(2): jnz 0x1e(%rip)
c9ac(5): call 0xffff5704(%rip)
c9b1(6): mov $0x0,(%rax)
c9b7(5): mov $0xffffffff,%eax
c9bc(1): pop %rbx
c9bd(1): pop %rbp
c9be(2): pop %r12
c9c0(1): ret near (%rsp)
c9c1(7): nop 0x0(%rax)
c9c8(1): pop %rbx
c9c9(5): mov $0xffffffff,%eax
c9ce(1): pop %rbp
c9cf(2): pop %r12
c9d1(1): ret near (%rsp)
c9d2(6): nop 0x0(%rax,%rax,1)
c9d8(5): call 0xffff56d8(%rip)
c9dd(3): cmp $0x9,(%rax)
c9e0(1): pop %rbx
c9e1(1): pop %rbp
c9e2(2): pop %r12
c9e4(3): setnz %al
c9e7(3): movzx %al,%eax
c9ea(2): neg %eax
c9ec(1): ret near (%rsp)

"open_safer" :
c9f0(4): sub $0x58,%rsp
c9f4(5): mov %rdx,0x30(%rsp)
c9f9(2): xor %edx,%edx
c9fb(9): mov $0x28,%rax
ca04(5): mov %rax,0x18(%rsp)
ca09(2): xor %eax,%eax
ca0b(4): test $0x40,%sil
ca0f(2): jnz 0x29(%rip)
ca11(2): xor %eax,%eax
ca13(5): call 0xffff5aad(%rip)
ca18(2): mov %eax,%edi
ca1a(5): call 0x126(%rip)
ca1f(5): mov 0x18(%rsp),%rcx
ca24(9): xor $0x28,%rcx
ca2d(2): jnz 0x2c(%rip)
ca2f(4): add $0x58,%rsp
ca33(1): ret near (%rsp)
ca34(4): nop 0x0(%rax)
ca38(5): lea 0x60(%rsp),%rax
ca3d(7): mov $0x10,(%rsp)
ca44(4): mov 0x30(%rsp),%edx
ca48(5): mov %rax,0x8(%rsp)
ca4d(5): lea 0x20(%rsp),%rax
ca52(5): mov %rax,0x10(%rsp)
ca57(2): jmp 0xffffffba(%rip)
ca59(5): call 0xffff5797(%rip)

"hard_locale" :
ca60(4): sub $0x8,%rsp
ca64(2): xor %esi,%esi
ca66(5): call 0xffff59fa(%rip)
ca6b(3): mov %rax,%rdx
ca6e(5): mov $0x1,%eax
ca73(3): test %rdx,%rdx
ca76(2): jz 0x1f(%rip)
ca78(7): lea 0x41fb(%rip),%rdi
ca7f(5): mov $0x2,%ecx
ca84(3): mov %rdx,%rsi
ca87(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
ca89(3): setnbe %cl
ca8c(3): sbb $0x0,%cl
ca8f(2): xor %eax,%eax
ca91(2): test %cl,%cl
ca93(2): jnz 0xd(%rip)
ca95(4): add $0x8,%rsp
ca99(1): ret near (%rsp)
ca9a(6): nop 0x0(%rax,%rax,1)
caa0(7): lea 0x41d5(%rip),%rdi
caa7(5): mov $0x6,%ecx
caac(3): mov %rdx,%rsi
caaf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
cab1(3): setnbe %al
cab4(2): sbb $0x0,%al
cab6(2): test %al,%al
cab8(3): setnz %al
cabb(4): add $0x8,%rsp
cabf(1): ret near (%rsp)

"hash_pjw" :
cac0(4): movsx (%rdi),%rcx
cac4(2): test %cl,%cl
cac6(2): jz 0x2a(%rip)
cac8(2): xor %eax,%eax
caca(6): nop 0x0(%rax,%rax,1)
cad0(4): rol $0x9,%rax
cad4(4): add $0x1,%rdi
cad8(3): add %rcx,%rax
cadb(4): movsx (%rdi),%rcx
cadf(2): test %cl,%cl
cae1(2): jnz 0xffffffef(%rip)
cae3(2): xor %edx,%edx
cae5(3): div %rsi,%rax
cae8(3): mov %rdx,%rax
caeb(1): ret near (%rsp)
caec(4): nop 0x0(%rax)
caf0(2): xor %edx,%edx
caf2(3): mov %rdx,%rax
caf5(1): ret near (%rsp)

"locale_charset" :
cb00(4): sub $0x8,%rsp
cb04(5): mov $0xe,%edi
cb09(5): call 0xffff58f7(%rip)
cb0e(3): test %rax,%rax
cb11(2): jz 0x1f(%rip)
cb13(3): cmp $0x0,(%rax)
cb16(7): lea 0x4165(%rip),%rdx
cb1d(4): cmove %rdx,%rax
cb21(4): add $0x8,%rsp
cb25(1): ret near (%rsp)
cb26(a): nop 0x0(%rax,%rax,1)
cb30(7): lea 0x414b(%rip),%rax
cb37(4): add $0x8,%rsp
cb3b(1): ret near (%rsp)

"fd_safer" :
cb40(2): push %r13
cb42(2): push %r12
cb44(1): push %rbp
cb45(1): push %rbx
cb46(2): mov %edi,%ebx
cb48(4): sub $0x8,%rsp
cb4c(3): cmp $0x2,%edi
cb4f(2): jnbe 0x23(%rip)
cb51(5): call 0x126f(%rip)
cb56(3): mov %eax,%r12d
cb59(5): call 0xffff5557(%rip)
cb5e(3): mov (%rax),%r13d
cb61(3): mov %rax,%rbp
cb64(2): mov %ebx,%edi
cb66(5): call 0xffff576a(%rip)
cb6b(3): mov %r12d,%ebx
cb6e(4): mov %r13d,0x0(%rbp)
cb72(4): add $0x8,%rsp
cb76(2): mov %ebx,%eax
cb78(1): pop %rbx
cb79(1): pop %rbp
cb7a(2): pop %r12
cb7c(2): pop %r13
cb7e(1): ret near (%rsp)

"rpl_fclose" :
cb80(2): push %r12
cb82(1): push %rbp
cb83(1): push %rbx
cb84(3): mov %rdi,%rbx
cb87(5): call 0xffff57e9(%rip)
cb8c(2): test %eax,%eax
cb8e(3): mov %rbx,%rdi
cb91(2): js 0x56(%rip)
cb93(5): call 0xffff588d(%rip)
cb98(2): test %eax,%eax
cb9a(2): jnz 0x2e(%rip)
cb9c(3): mov %rbx,%rdi
cb9f(5): call 0x61(%rip)
cba4(2): test %eax,%eax
cba6(2): jz 0x3e(%rip)
cba8(5): call 0xffff5508(%rip)
cbad(3): mov (%rax),%r12d
cbb0(3): mov %rbx,%rdi
cbb3(3): mov %rax,%rbp
cbb6(5): call 0xffff55ba(%rip)
cbbb(3): test %r12d,%r12d
cbbe(2): jnz 0x32(%rip)
cbc0(1): pop %rbx
cbc1(1): pop %rbp
cbc2(2): pop %r12
cbc4(1): ret near (%rsp)
cbc5(3): nop (%rax)
cbc8(3): mov %rbx,%rdi
cbcb(5): call 0xffff57a5(%rip)
cbd0(2): xor %esi,%esi
cbd2(5): mov $0x1,%edx
cbd7(2): mov %eax,%edi
cbd9(5): call 0xffff5697(%rip)
cbde(4): cmp $0xffffffff,%rax
cbe2(2): jnz 0xffffffba(%rip)
cbe4(3): mov %rbx,%rdi
cbe7(1): pop %rbx
cbe8(1): pop %rbp
cbe9(2): pop %r12
cbeb(5): jmp 0xffff5585(%rip)
cbf0(4): mov %r12d,0x0(%rbp)
cbf4(5): mov $0xffffffff,%eax
cbf9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
cc00(3): test %rdi,%rdi
cc03(1): push %rbx
cc04(3): mov %rdi,%rbx
cc07(2): jz 0x13(%rip)
cc09(5): call 0xffff5817(%rip)
cc0e(2): test %eax,%eax
cc10(2): jz 0xa(%rip)
cc12(6): test $0x100,(%rbx)
cc18(2): jnz 0x10(%rip)
cc1a(3): mov %rbx,%rdi
cc1d(1): pop %rbx
cc1e(5): jmp 0xffff57b2(%rip)
cc23(5): nop 0x0(%rax,%rax,1)
cc28(3): mov %rbx,%rdi
cc2b(5): mov $0x1,%edx
cc30(2): xor %esi,%esi
cc32(5): call 0xe(%rip)
cc37(3): mov %rbx,%rdi
cc3a(1): pop %rbx
cc3b(5): jmp 0xffff5795(%rip)

"rpl_fseeko" :
cc40(4): mov 0x8(%rdi),%rax
cc44(4): cmp %rax,0x10(%rdi)
cc48(2): jz 0x8(%rip)
cc4a(5): jmp 0xffff5886(%rip)
cc4f(1): nop 
cc50(4): mov 0x20(%rdi),%rax
cc54(4): cmp %rax,0x28(%rdi)
cc58(2): jnz 0xfffffff2(%rip)
cc5a(5): cmp $0x0,0x48(%rdi)
cc5f(2): jnz 0xffffffeb(%rip)
cc61(2): push %r12
cc63(1): push %rbp
cc64(3): mov %edx,%r12d
cc67(1): push %rbx
cc68(3): mov %rsi,%rbp
cc6b(3): mov %rdi,%rbx
cc6e(5): call 0xffff5702(%rip)
cc73(3): mov %r12d,%edx
cc76(3): mov %rbp,%rsi
cc79(2): mov %eax,%edi
cc7b(5): call 0xffff55f5(%rip)
cc80(4): cmp $0xffffffff,%rax
cc84(2): jz 0xe(%rip)
cc86(3): and $0xef,(%rbx)
cc89(7): mov %rax,0x90(%rbx)
cc90(2): xor %eax,%eax
cc92(1): pop %rbx
cc93(1): pop %rbp
cc94(2): pop %r12
cc96(1): ret near (%rsp)

"vasnprintf" :
cca0(1): push %rbp
cca1(3): mov %rsp,%rbp
cca4(2): push %r15
cca6(2): push %r14
cca8(2): push %r13
ccaa(2): push %r12
ccac(7): lea 0xfffffc50(%rbp),%r14
ccb3(1): push %rbx
ccb4(3): mov %rdx,%rbx
ccb7(3): mov %rcx,%r12
ccba(3): mov %r14,%rdx
ccbd(7): sub $0x408,%rsp
ccc4(7): mov %rsi,0xfffffbe8(%rbp)
cccb(7): lea 0xfffffd40(%rbp),%rsi
ccd2(7): mov %rdi,0xfffffc18(%rbp)
ccd9(3): mov %rbx,%rdi
ccdc(7): mov %r14,0xfffffbf0(%rbp)
cce3(9): mov $0x28,%rax
ccec(4): mov %rax,0xffffffc8(%rbp)
ccf0(2): xor %eax,%eax
ccf2(7): mov %rsi,0xfffffbf8(%rbp)
ccf9(5): call 0x1557(%rip)
ccfe(2): test %eax,%eax
cd00(6): js 0xe68(%rip)
cd06(3): mov %r14,%rsi
cd09(3): mov %r12,%rdi
cd0c(5): call 0x1344(%rip)
cd11(2): test %eax,%eax
cd13(6): js 0xebd(%rip)
cd19(7): mov 0xfffffd50(%rbp),%rax
cd20(7): mov $0xffffffff,%rdx
cd27(4): add $0x7,%rax
cd2b(4): cmp $0x6,%rax
cd2f(4): cmovbe %rdx,%rax
cd33(7): add 0xfffffd58(%rbp),%rax
cd3a(6): jb 0xa2e(%rip)
cd40(3): mov %rax,%rdi
cd43(3): xor %r8d,%r8d
cd46(4): add $0x6,%rdi
cd4a(4): setb %r8b
cd4e(6): jb 0xa1a(%rip)
cd54(7): cmp $0xf9f,%rdi
cd5b(6): jbe 0x14d(%rip)
cd61(4): cmp $0xffffffff,%rdi
cd65(7): mov %r8,0xfffffc38(%rbp)
cd6c(6): jz 0x9fc(%rip)
cd72(5): call 0xffff564e(%rip)
cd77(3): test %rax,%rax
cd7a(7): mov %rax,0xfffffc28(%rbp)
cd81(6): jz 0x9e7(%rip)
cd87(7): mov 0xfffffc38(%rbp),%r8
cd8e(7): mov %rax,0xfffffbe0(%rbp)
cd95(3): xor %r12d,%r12d
cd98(8): cmp $0x0,0xfffffc18(%rbp)
cda0(2): jz 0xc(%rip)
cda2(7): mov 0xfffffbe8(%rbp),%rax
cda9(3): mov (%rax),%r12
cdac(7): mov 0xfffffd48(%rbp),%r13
cdb3(7): lea 0xfffffc44(%rbp),%rax
cdba(7): mov 0xfffffc18(%rbp),%r15
cdc1(b): mov $0x0,0xfffffc00(%rbp)
cdcc(7): mov %rax,0xfffffc10(%rbp)
cdd3(3): mov %rbx,%rax
cdd6(3): mov %r8,%rbx
cdd9(4): mov 0x0(%r13),%rcx
cddd(3): mov %rax,%r8
cde0(3): cmp %r8,%rcx
cde3(6): jz 0x96e(%rip)
cde9(3): sub %r8,%rcx
cdec(3): mov %rbx,%rax
cdef(3): add %rcx,%rax
cdf2(3): mov %rax,%r14
cdf5(6): jnb 0xe3(%rip)
cdfb(4): cmp $0xffffffff,%r12
cdff(6): jz 0xad1(%rip)
ce05(5): call 0xffff52ab(%rip)
ce0a(7): mov %rax,0xfffffc38(%rbp)
ce11(7): cmp 0xfffffc18(%rbp),%r15
ce18(2): jz 0xb(%rip)
ce1a(3): test %r15,%r15
ce1d(6): jnz 0xae3(%rip)
ce23(7): mov 0xfffffbe0(%rbp),%rax
ce2a(3): test %rax,%rax
ce2d(2): jz 0xa(%rip)
ce2f(3): mov %rax,%rdi
ce32(5): call 0xffff523e(%rip)
ce37(7): mov 0xfffffbf8(%rbp),%rax
ce3e(7): mov 0xfffffd48(%rbp),%rdi
ce45(4): add $0x20,%rax
ce49(3): cmp %rax,%rdi
ce4c(2): jz 0x7(%rip)
ce4e(5): call 0xffff5222(%rip)
ce53(7): mov 0xfffffbf0(%rbp),%rax
ce5a(7): mov 0xfffffc58(%rbp),%rdi
ce61(4): add $0x10,%rax
ce65(3): cmp %rax,%rdi
ce68(2): jz 0x7(%rip)
ce6a(5): call 0xffff5206(%rip)
ce6f(7): mov 0xfffffc38(%rbp),%rax
ce76(3): xor %r15d,%r15d
ce79(6): mov $0xc,(%rax)
ce7f(4): mov 0xffffffc8(%rbp),%rdi
ce83(9): xor $0x28,%rdi
ce8c(3): mov %r15,%rax
ce8f(6): jnz 0xf08(%rip)
ce95(4): lea 0xffffffd8(%rbp),%rsp
ce99(1): pop %rbx
ce9a(2): pop %r12
ce9c(2): pop %r13
ce9e(2): pop %r14
cea0(2): pop %r15
cea2(1): pop %rbp
cea3(1): ret near (%rsp)
cea4(4): nop 0x0(%rax)
cea8(4): add $0x24,%rax
ceac(b): mov $0x0,0xfffffbe0(%rbp)
ceb7(4): and $0xfffffff0,%rax
cebb(3): sub %rax,%rsp
cebe(5): lea 0xf(%rsp),%rax
cec3(4): and $0xfffffff0,%rax
cec7(7): mov %rax,0xfffffc28(%rbp)
cece(5): jmp 0xfffffec7(%rip)
ced3(5): nop 0x0(%rax,%rax,1)
ced8(3): cmp %rax,%r12
cedb(2): jnb 0x69(%rip)
cedd(3): test %r12,%r12
cee0(6): jnz 0x930(%rip)
cee6(4): cmp $0xc,%rax
ceea(6): jnbe 0x938(%rip)
cef0(6): mov $0xc,%r12d
cef6(7): cmp 0xfffffc18(%rbp),%r15
cefd(3): setz %dl
cf00(3): test %r15,%r15
cf03(6): jz 0x945(%rip)
cf09(2): test %dl,%dl
cf0b(6): jnz 0x93d(%rip)
cf11(3): mov %r12,%rsi
cf14(3): mov %r15,%rdi
cf17(7): mov %r8,0xfffffc30(%rbp)
cf1e(7): mov %rcx,0xfffffc38(%rbp)
cf25(5): call 0xffff552b(%rip)
cf2a(3): test %rax,%rax
cf2d(7): mov 0xfffffc38(%rbp),%rcx
cf34(7): mov 0xfffffc30(%rbp),%r8
cf3b(6): jz 0x9b0(%rip)
cf41(3): mov %rax,%r15
cf44(4): lea 0x0(%r15,%rbx,1),%rdi
cf48(3): mov %rcx,%rdx
cf4b(3): mov %r8,%rsi
cf4e(5): call 0xffff5412(%rip)
cf53(7): mov 0xfffffc00(%rbp),%rax
cf5a(7): cmp %rax,0xfffffd40(%rbp)
cf61(6): jz 0xcba(%rip)
cf67(5): movzx 0x48(%r13),%edx
cf6c(4): mov 0x50(%r13),%rax
cf70(3): cmp $0x25,%dl
cf73(6): jz 0x795(%rip)
cf79(4): cmp $0xffffffff,%rax
cf7d(6): jz 0xc49(%rip)
cf83(7): mov 0xfffffc58(%rbp),%r8
cf8a(4): shl/sal $0x5,%rax
cf8e(3): add %r8,%rax
cf91(3): cmp $0x6e,%dl
cf94(2): mov (%rax),%edi
cf96(6): mov %edi,0xfffffc30(%rbp)
cf9c(6): jz 0x7e4(%rip)
cfa2(4): mov 0x10(%r13),%eax
cfa6(7): mov 0xfffffc28(%rbp),%rdi
cfad(2): test $0x1,%al
cfaf(3): mov $0x25,(%rdi)
cfb2(4): lea 0x1(%rdi),%rbx
cfb6(2): jz 0x11(%rip)
cfb8(7): mov 0xfffffc28(%rbp),%rdi
cfbf(4): lea 0x2(%rdi),%rbx
cfc3(4): mov $0x27,0x1(%rdi)
cfc7(2): test $0x2,%al
cfc9(2): jz 0x9(%rip)
cfcb(3): mov $0x2d,(%rbx)
cfce(4): add $0x1,%rbx
cfd2(2): test $0x4,%al
cfd4(2): jz 0x9(%rip)
cfd6(3): mov $0x2b,(%rbx)
cfd9(4): add $0x1,%rbx
cfdd(2): test $0x8,%al
cfdf(2): jz 0x9(%rip)
cfe1(3): mov $0x20,(%rbx)
cfe4(4): add $0x1,%rbx
cfe8(2): test $0x10,%al
cfea(2): jz 0x9(%rip)
cfec(3): mov $0x23,(%rbx)
cfef(4): add $0x1,%rbx
cff3(2): test $0x40,%al
cff5(2): jz 0x9(%rip)
cff7(3): mov $0x49,(%rbx)
cffa(4): add $0x1,%rbx
cffe(2): test $0x20,%al
d000(2): jz 0x9(%rip)
d002(3): mov $0x30,(%rbx)
d005(4): add $0x1,%rbx
d009(4): mov 0x18(%r13),%rsi
d00d(4): mov 0x20(%r13),%rdx
d011(3): cmp %rdx,%rsi
d014(2): jz 0x32(%rip)
d016(3): mov %rdx,%rcx
d019(3): mov %rbx,%rdi
d01c(7): mov %r8,0xfffffc20(%rbp)
d023(3): sub %rsi,%rcx
d026(3): mov %rcx,%rdx
d029(7): mov %rcx,0xfffffc38(%rbp)
d030(5): call 0xffff5330(%rip)
d035(7): mov 0xfffffc38(%rbp),%rcx
d03c(7): mov 0xfffffc20(%rbp),%r8
d043(3): add %rcx,%rbx
d046(4): mov 0x30(%r13),%rsi
d04a(4): mov 0x38(%r13),%rdx
d04e(3): cmp %rdx,%rsi
d051(2): jz 0x32(%rip)
d053(3): mov %rdx,%rcx
d056(3): mov %rbx,%rdi
d059(7): mov %r8,0xfffffc20(%rbp)
d060(3): sub %rsi,%rcx
d063(3): mov %rcx,%rdx
d066(7): mov %rcx,0xfffffc38(%rbp)
d06d(5): call 0xffff52f3(%rip)
d072(7): mov 0xfffffc38(%rbp),%rcx
d079(7): mov 0xfffffc20(%rbp),%r8
d080(3): add %rcx,%rbx
d083(6): mov 0xfffffc30(%rbp),%edi
d089(3): cmp $0x10,%edi
d08c(2): jnbe 0x2f(%rip)
d08e(5): mov $0x1,%eax
d093(2): mov %edi,%ecx
d095(3): shl/sal %cl,%rax
d098(5): test $0x14180,%eax
d09d(2): jnz 0x17(%rip)
d09f(3): test $0x10,%ah
d0a2(6): jnz 0x95e(%rip)
d0a8(3): test $0x6,%ah
d0ab(2): jz 0x10(%rip)
d0ad(3): mov $0x6c,(%rbx)
d0b0(4): add $0x1,%rbx
d0b4(3): mov $0x6c,(%rbx)
d0b7(4): add $0x1,%rbx
d0bb(5): movzx 0x48(%r13),%eax
d0c0(4): mov $0x0,0x1(%rbx)
d0c4(2): mov %al,(%rbx)
d0c6(4): mov 0x28(%r13),%rax
d0ca(4): cmp $0xffffffff,%rax
d0ce(6): jz 0x732(%rip)
d0d4(4): shl/sal $0x5,%rax
d0d8(3): add %r8,%rax
d0db(3): cmp $0x5,(%rax)
d0de(6): jnz 0xae8(%rip)
d0e4(3): mov 0x10(%rax),%eax
d0e7(a): mov $0x1,0xfffffc20(%rbp)
d0f1(6): mov %eax,0xfffffc48(%rbp)
d0f7(4): mov 0x40(%r13),%rax
d0fb(4): cmp $0xffffffff,%rax
d0ff(2): jz 0x2d(%rip)
d101(4): shl/sal $0x5,%rax
d105(3): add %rax,%r8
d108(4): cmp $0x5,(%r8)
d10c(6): jnz 0xaba(%rip)
d112(6): mov 0xfffffc20(%rbp),%eax
d118(4): mov 0x10(%r8),%edx
d11c(7): mov %edx,0xfffffc48(%rbp,%rax,4)
d123(3): lea 0x1(%rax),%eax
d126(6): mov %eax,0xfffffc20(%rbp)
d12c(3): mov %r14,%rax
d12f(2): xor %edx,%edx
d131(4): add $0x2,%rax
d135(6): jb 0xc67(%rip)
d13b(3): cmp %rax,%r12
d13e(2): jnb 0x4d(%rip)
d140(3): test %r12,%r12
d143(6): jnz 0x825(%rip)
d149(4): cmp $0xc,%rax
d14d(6): jnbe 0x833(%rip)
d153(6): mov $0xc,%r12d
d159(7): cmp 0xfffffc18(%rbp),%r15
d160(3): setz %dl
d163(3): test %r15,%r15
d166(6): jz 0x84a(%rip)
d16c(2): test %dl,%dl
d16e(6): jnz 0x842(%rip)
d174(3): mov %r12,%rsi
d177(3): mov %r15,%rdi
d17a(5): call 0xffff52d6(%rip)
d17f(3): test %rax,%rax
d182(6): jz 0xfffffc83(%rip)
d188(3): mov %rax,%r15
d18b(5): mov $0x0,0x0(%r15,%r14,1)
d190(5): call 0xffff4f20(%rip)
d195(7): mov %rax,0xfffffc38(%rbp)
d19c(2): mov (%rax),%eax
d19e(7): mov %rbx,0xfffffc08(%rbp)
d1a5(6): mov %eax,0xfffffbdc(%rbp)
d1ab(5): nop 0x0(%rax,%rax,1)
d1b0(7): mov 0xfffffc38(%rbp),%rax
d1b7(3): mov %r12,%rbx
d1ba(6): mov $0x7fffffff,%r10d
d1c0(3): sub %r14,%rbx
d1c3(a): mov $0xffffffff,0xfffffc44(%rbp)
d1cd(7): cmp $0x7fffffff,%rbx
d1d4(6): mov $0x0,(%rax)
d1da(6): mov 0xfffffc30(%rbp),%eax
d1e0(4): cmovbe %rbx,%r10
d1e4(3): cmp $0x11,%eax
d1e7(6): jnbe 0x9df(%rip)
d1ed(7): lea 0x3a94(%rip),%rsi
d1f4(4): movsxd 0x0(%rsi,%rax,4),%rax
d1f8(3): add %rsi,%rax
d1fb(2): jmp %rax
d1fd(3): nop (%rax)
d200(4): mov 0x50(%r13),%rax
d204(4): lea 0x0(%r15,%r14,1),%rdi
d208(4): shl/sal $0x5,%rax
d20c(7): add 0xfffffc58(%rbp),%rax
d213(4): mov 0x10(%rax),%r9
d217(6): mov 0xfffffc20(%rbp),%eax
d21d(3): cmp $0x1,%eax
d220(6): jz 0x4c8(%rip)
d226(3): cmp $0x2,%eax
d229(6): jz 0x4a7(%rip)
d22f(4): sub $0x8,%rsp
d233(6): push 0xfffffc10(%rbp)
d239(7): mov 0xfffffc28(%rbp),%r8
d240(3): mov %r10,%rsi
d243(7): mov $0xffffffff,%rcx
d24a(5): mov $0x1,%edx
d24f(2): xor %eax,%eax
d251(7): mov %r10,0xfffffbd0(%rbp)
d258(5): call 0xffff4e08(%rip)
d25d(1): pop %rsi
d25e(1): pop %rdi
d25f(7): mov 0xfffffbd0(%rbp),%r10
d266(6): mov 0xfffffc44(%rbp),%ecx
d26c(2): test %ecx,%ecx
d26e(6): js 0x13e(%rip)
d274(3): movsxd %ecx,%rdx
d277(3): cmp %r10,%rdx
d27a(2): jnb 0x10(%rip)
d27c(3): add %r15,%rdx
d27f(5): cmp $0x0,0x0(%rdx,%r14,1)
d284(6): jnz 0x942(%rip)
d28a(2): cmp %eax,%ecx
d28c(2): jnl 0xa(%rip)
d28e(6): mov %eax,0xfffffc44(%rbp)
d294(2): mov %eax,%ecx
d296(3): lea 0x1(%rcx),%eax
d299(3): cmp %r10,%rax
d29c(6): jb 0x834(%rip)
d2a2(7): cmp $0x7ffffffe,%rbx
d2a9(6): jnbe 0x847(%rip)
d2af(4): lea 0x0(%r12,%r12,1),%rsi
d2b3(3): lea 0x2(%rcx),%edx
d2b6(3): test %r12,%r12
d2b9(7): mov $0xffffffff,%rax
d2c0(4): cmovns %rsi,%rax
d2c4(3): add %r14,%rdx
d2c7(6): jb 0xac1(%rip)
d2cd(3): cmp %rdx,%rax
d2d0(4): cmovnae %rdx,%rax
d2d4(3): cmp %rax,%r12
d2d7(6): jnb 0xfffffed9(%rip)
d2dd(3): test %r12,%r12
d2e0(6): js 0xfffffb31(%rip)
d2e6(3): cmp %rax,%rsi
d2e9(3): mov %rsi,%r12
d2ec(2): jnb 0xf(%rip)
d2ee(4): cmp $0xffffffff,%rax
d2f2(6): jz 0xfffffb1f(%rip)
d2f8(3): mov %rax,%r12
d2fb(7): cmp 0xfffffc18(%rbp),%r15
d302(3): setz %bl
d305(3): test %r15,%r15
d308(6): jz 0x388(%rip)
d30e(2): test %bl,%bl
d310(6): jnz 0x380(%rip)
d316(3): mov %r12,%rsi
d319(3): mov %r15,%rdi
d31c(5): call 0xffff5134(%rip)
d321(3): test %rax,%rax
d324(6): jz 0xfffffaed(%rip)
d32a(3): mov %rax,%r15
d32d(5): jmp 0xfffffe83(%rip)
d332(6): nop 0x0(%rax,%rax,1)
d338(4): mov 0x50(%r13),%rax
d33c(4): lea 0x0(%r15,%r14,1),%rdi
d340(4): shl/sal $0x5,%rax
d344(7): add 0xfffffc58(%rbp),%rax
d34b(4): mov 0x10(%rax),%r9d
d34f(6): mov 0xfffffc20(%rbp),%eax
d355(3): cmp $0x1,%eax
d358(6): jz 0x238(%rip)
d35e(3): cmp $0x2,%eax
d361(6): jz 0x277(%rip)
d367(4): sub $0x8,%rsp
d36b(6): push 0xfffffc10(%rbp)
d371(7): mov 0xfffffc28(%rbp),%r8
d378(7): mov $0xffffffff,%rcx
d37f(5): mov $0x1,%edx
d384(3): mov %r10,%rsi
d387(2): xor %eax,%eax
d389(7): mov %r10,0xfffffbd0(%rbp)
d390(5): call 0xffff4cd0(%rip)
d395(1): pop %rdx
d396(1): pop %rcx
d397(6): mov 0xfffffc44(%rbp),%ecx
d39d(7): mov 0xfffffbd0(%rbp),%r10
d3a4(2): test %ecx,%ecx
d3a6(6): jns 0xfffffece(%rip)
d3ac(7): mov 0xfffffc08(%rbp),%rdi
d3b3(4): cmp $0x0,0x1(%rdi)
d3b7(6): jnz 0x341(%rip)
d3bd(2): test %eax,%eax
d3bf(6): jns 0xfffffecf(%rip)
d3c5(7): mov 0xfffffc38(%rbp),%rax
d3cc(2): mov (%rax),%ebx
d3ce(2): test %ebx,%ebx
d3d0(2): jnz 0x20(%rip)
d3d2(5): movzx 0x48(%r13),%eax
d3d7(5): mov $0x16,%ebx
d3dc(3): and $0xef,%eax
d3df(2): cmp $0x63,%al
d3e1(5): mov $0x54,%eax
d3e6(3): cmove %eax,%ebx
d3e9(7): nop 0x0(%rax)
d3f0(7): cmp 0xfffffc18(%rbp),%r15
d3f7(2): jz 0xb(%rip)
d3f9(3): test %r15,%r15
d3fc(6): jnz 0x7b0(%rip)
d402(7): mov 0xfffffbe0(%rbp),%rax
d409(3): test %rax,%rax
d40c(2): jz 0xa(%rip)
d40e(3): mov %rax,%rdi
d411(5): call 0xffff4c5f(%rip)
d416(7): mov 0xfffffbf8(%rbp),%rax
d41d(7): mov 0xfffffd48(%rbp),%rdi
d424(4): add $0x20,%rax
d428(3): cmp %rax,%rdi
d42b(2): jz 0x7(%rip)
d42d(5): call 0xffff4c43(%rip)
d432(7): mov 0xfffffbf0(%rbp),%rax
d439(7): mov 0xfffffc58(%rbp),%rdi
d440(4): add $0x10,%rax
d444(3): cmp %rax,%rdi
d447(2): jz 0x7(%rip)
d449(5): call 0xffff4c27(%rip)
d44e(7): mov 0xfffffc38(%rbp),%rax
d455(3): xor %r15d,%r15d
d458(2): mov %ebx,(%rax)
d45a(5): jmp 0xfffffa25(%rip)
d45f(1): nop 
d460(4): mov 0x50(%r13),%rax
d464(4): lea 0x0(%r15,%r14,1),%rdi
d468(4): shl/sal $0x5,%rax
d46c(7): add 0xfffffc58(%rbp),%rax
d473(3): fld 0x10(%rax),%st0
d476(6): mov 0xfffffc20(%rbp),%eax
d47c(3): cmp $0x1,%eax
d47f(6): jz 0x631(%rip)
d485(3): cmp $0x2,%eax
d488(6): jnz 0x4c8(%rip)
d48e(6): mov 0xfffffc4c(%rbp),%eax
d494(4): sub $0x8,%rsp
d498(6): push 0xfffffc10(%rbp)
d49e(7): mov 0xfffffc48(%rbp),%r9d
d4a5(7): mov 0xfffffc28(%rbp),%r8
d4ac(3): mov %r10,%rsi
d4af(4): sub $0x18,%rsp
d4b3(7): mov $0xffffffff,%rcx
d4ba(5): mov $0x1,%edx
d4bf(4): fstp %st0,0x8(%rsp)
d4c3(1): push %rax
d4c4(2): xor %eax,%eax
d4c6(7): mov %r10,0xfffffbd0(%rbp)
d4cd(5): call 0xffff4b93(%rip)
d4d2(4): add $0x30,%rsp
d4d6(7): mov 0xfffffbd0(%rbp),%r10
d4dd(5): jmp 0xfffffd89(%rip)
d4e2(6): nop 0x0(%rax,%rax,1)
d4e8(4): mov 0x50(%r13),%rax
d4ec(4): lea 0x0(%r15,%r14,1),%rdi
d4f0(4): shl/sal $0x5,%rax
d4f4(7): add 0xfffffc58(%rbp),%rax
d4fb(5): movsd 0x10(%rax),%xmm0
d500(6): mov 0xfffffc20(%rbp),%eax
d506(3): cmp $0x1,%eax
d509(6): jz 0x597(%rip)
d50f(3): cmp $0x2,%eax
d512(6): jnz 0x3fe(%rip)
d518(6): mov 0xfffffc4c(%rbp),%eax
d51e(6): push 0xfffffc10(%rbp)
d524(1): push %rax
d525(7): mov 0xfffffc48(%rbp),%r9d
d52c(7): mov 0xfffffc28(%rbp),%r8
d533(3): mov %r10,%rsi
d536(7): mov $0xffffffff,%rcx
d53d(5): mov $0x1,%edx
d542(5): mov $0x1,%eax
d547(7): mov %r10,0xfffffbd0(%rbp)
d54e(5): call 0xffff4b12(%rip)
d553(2): pop %r8
d555(7): mov 0xfffffbd0(%rbp),%r10
d55c(2): pop %r9
d55e(5): jmp 0xfffffd08(%rip)
d563(5): nop 0x0(%rax,%rax,1)
d568(4): mov 0x50(%r13),%rax
d56c(4): lea 0x0(%r15,%r14,1),%rdi
d570(4): shl/sal $0x5,%rax
d574(7): add 0xfffffc58(%rbp),%rax
d57b(5): movzx 0x10(%rax),%r9d
d580(6): mov 0xfffffc20(%rbp),%eax
d586(3): cmp $0x1,%eax
d589(6): jnz 0xfffffdd5(%rip)
d58f(1): nop 
d590(6): push 0xfffffc10(%rbp)
d596(2): push %r9
d598(7): mov 0xfffffc48(%rbp),%r9d
d59f(5): jmp 0xfffffdd2(%rip)
d5a4(4): nop 0x0(%rax)
d5a8(4): mov 0x50(%r13),%rax
d5ac(4): lea 0x0(%r15,%r14,1),%rdi
d5b0(4): shl/sal $0x5,%rax
d5b4(7): add 0xfffffc58(%rbp),%rax
d5bb(5): movsx 0x10(%rax),%r9d
d5c0(6): mov 0xfffffc20(%rbp),%eax
d5c6(3): cmp $0x1,%eax
d5c9(2): jz 0xffffffc7(%rip)
d5cb(3): cmp $0x2,%eax
d5ce(6): jnz 0xfffffd99(%rip)
d5d4(4): nop 0x0(%rax)
d5d8(4): sub $0x8,%rsp
d5dc(6): push 0xfffffc10(%rbp)
d5e2(2): push %r9
d5e4(6): mov 0xfffffc4c(%rbp),%eax
d5ea(1): push %rax
d5eb(7): mov 0xfffffc48(%rbp),%r9d
d5f2(7): mov 0xfffffc28(%rbp),%r8
d5f9(3): mov %r10,%rsi
d5fc(7): mov $0xffffffff,%rcx
d603(5): mov $0x1,%edx
d608(2): xor %eax,%eax
d60a(7): mov %r10,0xfffffbd0(%rbp)
d611(5): call 0xffff4a4f(%rip)
d616(4): add $0x20,%rsp
d61a(7): mov 0xfffffbd0(%rbp),%r10
d621(5): jmp 0xfffffc45(%rip)
d626(a): nop 0x0(%rax,%rax,1)
d630(4): mov 0x50(%r13),%rax
d634(4): lea 0x0(%r15,%r14,1),%rdi
d638(4): shl/sal $0x5,%rax
d63c(7): add 0xfffffc58(%rbp),%rax
d643(5): movzx 0x10(%rax),%r9d
d648(6): mov 0xfffffc20(%rbp),%eax
d64e(3): cmp $0x1,%eax
d651(6): jnz 0xfffffd0d(%rip)
d657(5): jmp 0xffffff39(%rip)
d65c(4): nop 0x0(%rax)
d660(4): mov 0x50(%r13),%rax
d664(4): lea 0x0(%r15,%r14,1),%rdi
d668(4): shl/sal $0x5,%rax
d66c(7): add 0xfffffc58(%rbp),%rax
d673(5): movsx 0x10(%rax),%r9d
d678(6): mov 0xfffffc20(%rbp),%eax
d67e(3): cmp $0x1,%eax
d681(6): jnz 0xfffffcdd(%rip)
d687(5): jmp 0xffffff09(%rip)
d68c(4): nop 0x0(%rax)
d690(3): mov %r12,%rdi
d693(5): call 0xffff4d2d(%rip)
d698(3): test %rax,%rax
d69b(3): mov %rax,%rcx
d69e(6): jz 0xfffff773(%rip)
d6a4(3): test %r14,%r14
d6a7(6): jz 0xb9(%rip)
d6ad(2): test %bl,%bl
d6af(6): jz 0xb1(%rip)
d6b5(3): mov %r15,%rsi
d6b8(3): mov %r14,%rdx
d6bb(3): mov %rax,%rdi
d6be(5): call 0xffff4ca2(%rip)
d6c3(3): mov %rax,%r15
d6c6(5): jmp 0xfffffaea(%rip)
d6cb(5): nop 0x0(%rax,%rax,1)
d6d0(4): sub $0x8,%rsp
d6d4(6): push 0xfffffc10(%rbp)
d6da(2): push %r9
d6dc(5): jmp 0xffffff08(%rip)
d6e1(7): nop 0x0(%rax)
d6e8(6): push 0xfffffc10(%rbp)
d6ee(2): push %r9
d6f0(5): jmp 0xfffffea8(%rip)
d6f5(3): nop (%rax)
d6f8(4): mov $0x0,0x1(%rdi)
d6fc(5): jmp 0xfffffab4(%rip)
d701(7): nop 0x0(%rax)
d708(4): cmp $0xffffffff,%rax
d70c(6): jnz 0x4ba(%rip)
d712(3): mov %r14,%rax
d715(4): add $0x1,%rax
d719(3): mov %rax,%rbx
d71c(6): jnb 0x8c(%rip)
d722(4): cmp $0xffffffff,%r12
d726(6): jnz 0xfffff6df(%rip)
d72c(3): mov %r12,%rbx
d72f(5): mov $0x25,0x0(%r15,%r14,1)
d734(4): mov 0x8(%r13),%r8
d738(4): add $0x58,%r13
d73c(4): mov 0x0(%r13),%rcx
d740(8): add $0x1,0xfffffc00(%rbp)
d748(3): cmp %r8,%rcx
d74b(6): jnz 0xfffff69e(%rip)
d751(3): mov %rbx,%r14
d754(5): jmp 0xfffff7ff(%rip)
d759(7): nop 0x0(%rax)
d760(3): mov %rcx,%r15
d763(5): jmp 0xfffffa4d(%rip)
d768(5): call 0xffff4948(%rip)
d76d(7): mov %rax,0xfffffc38(%rbp)
d774(5): jmp 0xfffff6c3(%rip)
d779(7): nop 0x0(%rax)
d780(2): mov %edi,%edx
d782(3): sub $0x12,%edx
d785(3): cmp $0x4,%edx
d788(6): jnbe 0x43e(%rip)
d78e(7): lea 0x353b(%rip),%rdi
d795(4): mov 0x10(%rax),%rax
d799(4): movsxd 0x0(%rdi,%rdx,4),%rdx
d79d(3): add %rdi,%rdx
d7a0(2): jmp %rdx
d7a2(6): nop 0x0(%rax,%rax,1)
d7a8(3): cmp %rax,%r12
d7ab(2): jnb 0xffffff84(%rip)
d7ad(3): test %r12,%r12
d7b0(6): jnz 0x3d0(%rip)
d7b6(4): cmp $0xc,%rax
d7ba(6): jnbe 0x3d8(%rip)
d7c0(6): mov $0xc,%r12d
d7c6(7): cmp 0xfffffc18(%rbp),%r15
d7cd(3): setz %dl
d7d0(3): test %r15,%r15
d7d3(6): jz 0x26d(%rip)
d7d9(2): test %dl,%dl
d7db(6): jnz 0x265(%rip)
d7e1(3): mov %r12,%rsi
d7e4(3): mov %r15,%rdi
d7e7(5): call 0xffff4c69(%rip)
d7ec(3): test %rax,%rax
d7ef(6): jz 0xfc(%rip)
d7f5(3): mov %rax,%r15
d7f8(5): jmp 0xffffff37(%rip)
d7fd(3): nop (%rax)
d800(a): mov $0x0,0xfffffc20(%rbp)
d80a(5): jmp 0xfffff8ed(%rip)
d80f(1): nop 
d810(6): js 0xfffff5f5(%rip)
d816(3): add %r12,%r12
d819(3): cmp %rax,%r12
d81c(6): jnb 0xfffff6da(%rip)
d822(4): cmp $0xffffffff,%rax
d826(6): jz 0xfffff5df(%rip)
d82c(7): cmp 0xfffffc18(%rbp),%r15
d833(3): mov %rax,%r12
d836(3): setz %dl
d839(3): test %r15,%r15
d83c(6): jnz 0xfffff6cd(%rip)
d842(6): nop 0x0(%rax,%rax,1)
d848(3): mov %r12,%rdi
d84b(7): mov %r8,0xfffffc20(%rbp)
d852(6): mov %dl,0xfffffc30(%rbp)
d858(7): mov %rcx,0xfffffc38(%rbp)
d85f(5): call 0xffff4b61(%rip)
d864(3): test %rax,%rax
d867(3): mov %rax,%r9
d86a(7): mov 0xfffffc38(%rbp),%rcx
d871(7): movzx 0xfffffc30(%rbp),%edx
d878(7): mov 0xfffffc20(%rbp),%r8
d87f(6): jz 0xfffff586(%rip)
d885(3): test %rbx,%rbx
d888(6): jz 0x208(%rip)
d88e(2): test %dl,%dl
d890(6): jz 0x200(%rip)
d896(3): mov %r15,%rsi
d899(3): mov %rbx,%rdx
d89c(3): mov %rax,%rdi
d89f(7): mov %r8,0xfffffc30(%rbp)
d8a6(7): mov %rcx,0xfffffc38(%rbp)
d8ad(5): call 0xffff4ab3(%rip)
d8b2(7): mov 0xfffffc38(%rbp),%rcx
d8b9(3): mov %rax,%r15
d8bc(7): mov 0xfffffc30(%rbp),%r8
d8c3(5): jmp 0xfffff681(%rip)
d8c8(8): nop 0x0(%rax,%rax,1)
d8d0(3): mov %r12,%r14
d8d3(5): jmp 0xfffff671(%rip)
d8d8(8): nop 0x0(%rax,%rax,1)
d8e0(3): mov %r14,(%rax)
d8e3(3): mov %r14,%rbx
d8e6(5): jmp 0xfffffe4e(%rip)
d8eb(5): call 0xffff47c5(%rip)
d8f0(7): mov %rax,0xfffffc38(%rbp)
d8f7(9): nop 0x0(%rax,%rax,1)
d900(3): mov %r15,%rdi
d903(5): call 0xffff476d(%rip)
d908(5): jmp 0xfffff51b(%rip)
d90d(3): nop (%rax)
d910(7): mov 0xfffffc10(%rbp),%r9
d917(7): mov 0xfffffc28(%rbp),%r8
d91e(3): mov %r10,%rsi
d921(7): mov $0xffffffff,%rcx
d928(5): mov $0x1,%edx
d92d(5): mov $0x1,%eax
d932(7): mov %r10,0xfffffbd0(%rbp)
d939(5): call 0xffff4727(%rip)
d93e(7): mov 0xfffffbd0(%rbp),%r10
d945(5): jmp 0xfffff921(%rip)
d94a(6): nop 0x0(%rax,%rax,1)
d950(4): sub $0x10,%rsp
d954(7): mov 0xfffffc10(%rbp),%r9
d95b(3): fstp %st0,(%rsp)
d95e(5): jmp 0xfffff8db(%rip)
d963(5): nop 0x0(%rax,%rax,1)
d968(6): js 0xfffff49d(%rip)
d96e(3): add %r12,%r12
d971(3): cmp %rax,%r12
d974(6): jnb 0xfffff7e5(%rip)
d97a(6): nop 0x0(%rax,%rax,1)
d980(3): test %rdx,%rdx
d983(6): jnz 0xfffff482(%rip)
d989(4): cmp $0xffffffff,%rax
d98d(6): jz 0xfffff478(%rip)
d993(7): cmp 0xfffffc18(%rbp),%r15
d99a(3): mov %rax,%r12
d99d(3): setz %dl
d9a0(3): test %r15,%r15
d9a3(6): jnz 0xfffff7c9(%rip)
d9a9(7): nop 0x0(%rax)
d9b0(3): mov %r12,%rdi
d9b3(6): mov %dl,0xfffffc38(%rbp)
d9b9(5): call 0xffff4a07(%rip)
d9be(3): test %rax,%rax
d9c1(3): mov %rax,%rcx
d9c4(7): movzx 0xfffffc38(%rbp),%edx
d9cb(6): jz 0xfffff43a(%rip)
d9d1(3): test %r14,%r14
d9d4(6): jz 0x19c(%rip)
d9da(2): test %dl,%dl
d9dc(6): jz 0x194(%rip)
d9e2(3): mov %r15,%rsi
d9e5(3): mov %r14,%rdx
d9e8(3): mov %rax,%rdi
d9eb(5): call 0xffff4975(%rip)
d9f0(3): mov %rax,%r15
d9f3(5): jmp 0xfffff798(%rip)
d9f8(8): nop 0x0(%rax,%rax,1)
da00(3): mov $0x4c,(%rbx)
da03(4): add $0x1,%rbx
da07(5): jmp 0xfffff6b4(%rip)
da0c(4): nop 0x0(%rax)
da10(3): mov %r14b,(%rax)
da13(3): mov %r14,%rbx
da16(5): jmp 0xfffffd1e(%rip)
da1b(5): nop 0x0(%rax,%rax,1)
da20(3): mov %r14d,(%rax)
da23(3): mov %r14,%rbx
da26(5): jmp 0xfffffd0e(%rip)
da2b(5): nop 0x0(%rax,%rax,1)
da30(4): mov %r14w,(%rax)
da34(3): mov %r14,%rbx
da37(5): jmp 0xfffffcfd(%rip)
da3c(4): nop 0x0(%rax)
da40(3): mov %r12,%rdi
da43(6): mov %dl,0xfffffc38(%rbp)
da49(5): call 0xffff4977(%rip)
da4e(3): test %rax,%rax
da51(3): mov %rax,%rcx
da54(7): movzx 0xfffffc38(%rbp),%edx
da5b(6): jz 0xfffff3aa(%rip)
da61(3): test %r14,%r14
da64(6): jz 0x140(%rip)
da6a(2): test %dl,%dl
da6c(6): jz 0x138(%rip)
da72(3): mov %r15,%rsi
da75(3): mov %r14,%rdx
da78(3): mov %rax,%rdi
da7b(5): call 0xffff48e5(%rip)
da80(3): mov %rax,%r15
da83(5): jmp 0xfffffcac(%rip)
da88(8): nop 0x0(%rax,%rax,1)
da90(3): mov %r9,%r15
da93(5): jmp 0xfffff4b1(%rip)
da98(8): nop 0x0(%rax,%rax,1)
daa0(4): sub $0x8,%rsp
daa4(6): push 0xfffffc10(%rbp)
daaa(5): jmp 0xfffffa7b(%rip)
daaf(1): nop 
dab0(4): sub $0x8,%rsp
dab4(6): push 0xfffffc10(%rbp)
daba(4): sub $0x10,%rsp
dabe(3): fstp %st0,(%rsp)
dac1(5): jmp 0xfffffb2a(%rip)
dac6(a): nop 0x0(%rax,%rax,1)
dad0(7): mov 0xfffffc38(%rbp),%rax
dad7(6): mov 0xfffffbdc(%rbp),%edi
dadd(3): movsxd %ecx,%rbx
dae0(3): add %r14,%rbx
dae3(2): mov %edi,(%rax)
dae5(5): jmp 0xfffffc4f(%rip)
daea(6): nop 0x0(%rax,%rax,1)
daf0(7): cmp 0xfffffc18(%rbp),%r15
daf7(2): jz 0xb(%rip)
daf9(3): test %r15,%r15
dafc(6): jnz 0xbd(%rip)
db02(7): mov 0xfffffbe0(%rbp),%rax
db09(3): test %rax,%rax
db0c(2): jz 0xa(%rip)
db0e(3): mov %rax,%rdi
db11(5): call 0xffff455f(%rip)
db16(7): mov 0xfffffbf8(%rbp),%rax
db1d(7): mov 0xfffffd48(%rbp),%rdi
db24(4): add $0x20,%rax
db28(3): cmp %rax,%rdi
db2b(2): jz 0x7(%rip)
db2d(5): call 0xffff4543(%rip)
db32(7): mov 0xfffffbf0(%rbp),%rax
db39(7): mov 0xfffffc58(%rbp),%rdi
db40(4): add $0x10,%rax
db44(3): cmp %rax,%rdi
db47(2): jz 0x7(%rip)
db49(5): call 0xffff4527(%rip)
db4e(7): mov 0xfffffc38(%rbp),%rax
db55(3): xor %r15d,%r15d
db58(6): mov $0x4b,(%rax)
db5e(5): jmp 0xfffff321(%rip)
db63(5): nop 0x0(%rax,%rax,1)
db68(3): xor %r15d,%r15d
db6b(5): jmp 0xfffff314(%rip)
db70(3): mov %rcx,%r15
db73(5): jmp 0xfffff618(%rip)
db78(8): nop 0x0(%rax,%rax,1)
db80(6): js 0xfffff285(%rip)
db86(3): add %r12,%r12
db89(3): cmp %rax,%r12
db8c(6): jnb 0xfffffc3a(%rip)
db92(4): cmp $0xffffffff,%rax
db96(6): jz 0xfffff26f(%rip)
db9c(3): mov %rax,%r12
db9f(5): jmp 0xfffffc27(%rip)
dba4(3): mov %rcx,%r15
dba7(5): jmp 0xfffffb88(%rip)
dbac(3): mov %r15,%rdi
dbaf(5): call 0xffff44c1(%rip)
dbb4(5): jmp 0xfffff84e(%rip)
dbb9(3): mov %r15,%rdi
dbbc(5): call 0xffff44b4(%rip)
dbc1(5): jmp 0xffffff41(%rip)
dbc6(5): call 0xffff44da(%rip)
dbcb(5): nop 0x0(%rax,%rax,1)
dbd0(7): mov 0xfffffbf8(%rbp),%rax
dbd7(7): mov 0xfffffd48(%rbp),%rdi
dbde(4): add $0x20,%rax
dbe2(3): cmp %rax,%rdi
dbe5(2): jz 0x7(%rip)
dbe7(5): call 0xffff4489(%rip)
dbec(7): mov 0xfffffbf0(%rbp),%rax
dbf3(7): mov 0xfffffc58(%rbp),%rdi
dbfa(4): add $0x10,%rax
dbfe(3): cmp %rax,%rdi
dc01(2): jz 0x7(%rip)
dc03(5): call 0xffff446d(%rip)
dc08(5): call 0xffff44a8(%rip)
dc0d(3): xor %r15d,%r15d
dc10(6): mov $0x16,(%rax)
dc16(5): jmp 0xfffff269(%rip)
dc1b(3): mov %r14,%rbx
dc1e(2): xor %eax,%eax
dc20(4): add $0x1,%rbx
dc24(6): jb 0x10c(%rip)
dc2a(3): cmp %rbx,%r12
dc2d(2): jnb 0x4f(%rip)
dc2f(3): test %r12,%r12
dc32(6): jnz 0x137(%rip)
dc38(4): cmp $0xc,%rbx
dc3c(6): jnbe 0x112(%rip)
dc42(6): mov $0xc,%r12d
dc48(7): cmp 0xfffffc18(%rbp),%r15
dc4f(4): setz %r13b
dc53(3): test %r15,%r15
dc56(6): jz 0xa6(%rip)
dc5c(3): test %r13b,%r13b
dc5f(6): jnz 0x9d(%rip)
dc65(3): mov %r12,%rsi
dc68(3): mov %r15,%rdi
dc6b(5): call 0xffff47e5(%rip)
dc70(3): test %rax,%rax
dc73(6): jz 0xfffffc78(%rip)
dc79(3): mov %rax,%r15
dc7c(7): cmp 0xfffffc18(%rbp),%r15
dc83(5): mov $0x0,0x0(%r15,%r14,1)
dc88(2): jz 0x19(%rip)
dc8a(3): cmp %rbx,%r12
dc8d(2): jbe 0x14(%rip)
dc8f(3): mov %r15,%rdi
dc92(3): mov %rbx,%rsi
dc95(5): call 0xffff47bb(%rip)
dc9a(3): test %rax,%rax
dc9d(4): cmovne %rax,%r15
dca1(7): mov 0xfffffbe0(%rbp),%rax
dca8(3): test %rax,%rax
dcab(2): jz 0xa(%rip)
dcad(3): mov %rax,%rdi
dcb0(5): call 0xffff43c0(%rip)
dcb5(7): mov 0xfffffbf8(%rbp),%rax
dcbc(7): mov 0xfffffd48(%rbp),%rdi
dcc3(4): add $0x20,%rax
dcc7(3): cmp %rax,%rdi
dcca(2): jz 0x7(%rip)
dccc(5): call 0xffff43a4(%rip)
dcd1(7): mov 0xfffffbf0(%rbp),%rax
dcd8(7): mov 0xfffffc58(%rbp),%rdi
dcdf(4): add $0x10,%rax
dce3(3): cmp %rax,%rdi
dce6(2): jz 0x7(%rip)
dce8(5): call 0xffff4388(%rip)
dced(7): mov 0xfffffbe8(%rbp),%rax
dcf4(3): mov %r14,(%rax)
dcf7(5): jmp 0xfffff188(%rip)
dcfc(3): mov %r12,%rdi
dcff(5): call 0xffff46c1(%rip)
dd04(3): test %rax,%rax
dd07(3): mov %rax,%rcx
dd0a(6): jz 0xfffff0fb(%rip)
dd10(3): test %r14,%r14
dd13(2): jz 0x6d(%rip)
dd15(3): test %r13b,%r13b
dd18(2): jz 0x68(%rip)
dd1a(3): mov %r15,%rsi
dd1d(3): mov %r14,%rdx
dd20(3): mov %rax,%rdi
dd23(5): call 0xffff463d(%rip)
dd28(3): mov %rax,%r15
dd2b(5): jmp 0xffffff51(%rip)
dd30(4): cmp $0xffffffff,%r12
dd34(5): mov $0x1,%eax
dd39(6): jz 0xffffff43(%rip)
dd3f(3): test %r12,%r12
dd42(6): jz 0xfffff0c3(%rip)
dd48(6): js 0xfffff0bd(%rip)
dd4e(3): test %rax,%rax
dd51(6): jnz 0xfffff0b4(%rip)
dd57(4): cmp $0xffffffff,%rbx
dd5b(6): jz 0xfffff0aa(%rip)
dd61(3): mov %rbx,%r12
dd64(5): jmp 0xfffffee4(%rip)
dd69(6): js 0xfffff09c(%rip)
dd6f(3): add %r12,%r12
dd72(3): cmp %rbx,%r12
dd75(6): jnb 0xfffffed3(%rip)
dd7b(2): jmp 0xffffffd3(%rip)
dd7d(3): nop (%rax)
dd80(3): mov %rcx,%r15
dd83(5): jmp 0xfffffef9(%rip)
dd88(4): cmp $0xffffffff,%r12
dd8c(6): jz 0xfffff424(%rip)
dd92(5): jmp 0xfffff07f(%rip)
dd97(5): call 0xffff4459(%rip)
dd9c(4): cmp $0xffffffff,%r12
dda0(5): mov $0x1,%edx
dda5(6): jz 0xfffff3e6(%rip)
ddab(3): test %r12,%r12
ddae(6): jz 0xfffff057(%rip)
ddb4(6): jns 0xfffffbcc(%rip)
ddba(5): jmp 0xfffff04b(%rip)

"dup_safer" :
ddc0(5): mov $0x3,%edx
ddc5(2): xor %esi,%esi
ddc7(2): xor %eax,%eax
ddc9(5): jmp 0x7(%rip)

"rpl_fcntl" :
ddd0(2): push %r12
ddd2(1): push %rbp
ddd3(2): mov %edi,%ebp
ddd5(1): push %rbx
ddd6(4): sub $0x50,%rsp
ddda(9): mov $0x28,%rax
dde3(5): mov %rax,0x18(%rsp)
dde8(2): xor %eax,%eax
ddea(5): lea 0x70(%rsp),%rax
ddef(2): test %esi,%esi
ddf1(5): mov %rdx,0x30(%rsp)
ddf6(5): mov %rcx,0x38(%rsp)
ddfb(5): mov %r8,0x40(%rsp)
de00(5): mov %rax,0x8(%rsp)
de05(5): lea 0x20(%rsp),%rax
de0a(5): mov %r9,0x48(%rsp)
de0f(7): mov $0x10,(%rsp)
de16(5): mov %rax,0x10(%rsp)
de1b(6): jz 0x207(%rip)
de21(6): cmp $0x406,%esi
de27(2): jnz 0x49(%rip)
de29(5): mov 0x10(%rsp),%rax
de2e(7): cmp $0x0,0x206743(%rip)
de35(7): mov $0x18,(%rsp)
de3c(4): mov 0x10(%rax),%r12d
de40(3): mov %r12d,%edx
de43(6): js 0x130(%rip)
de49(2): xor %eax,%eax
de4b(5): mov $0x406,%esi
de50(5): call 0xffff4300(%rip)
de55(2): test %eax,%eax
de57(2): mov %eax,%ebx
de59(6): js 0x18f(%rip)
de5f(a): mov $0x1,0x20670f(%rip)
de69(2): jmp 0x47(%rip)
de6b(5): nop 0x0(%rax,%rax,1)
de70(3): cmp $0xb,%esi
de73(2): jz 0x2d(%rip)
de75(2): jnle 0x5b(%rip)
de77(3): cmp $0x4,%esi
de7a(6): jz 0xd6(%rip)
de80(6): jnle 0xc0(%rip)
de86(3): cmp $0x2,%esi
de89(6): jz 0xc7(%rip)
de8f(2): jnle 0x11(%rip)
de91(3): cmp $0x1,%esi
de94(2): jnz 0x64(%rip)
de96(a): nop 0x0(%rax,%rax,1)
dea0(2): mov %ebp,%edi
dea2(2): xor %eax,%eax
dea4(5): call 0xffff42ac(%rip)
dea9(2): mov %eax,%ebx
deab(5): nop 0x0(%rax,%rax,1)
deb0(5): mov 0x18(%rsp),%rcx
deb5(9): xor $0x28,%rcx
debe(2): mov %ebx,%eax
dec0(6): jnz 0x15d(%rip)
dec6(4): add $0x50,%rsp
deca(1): pop %rbx
decb(1): pop %rbp
decc(2): pop %r12
dece(1): ret near (%rsp)
decf(1): nop 
ded0(6): cmp $0x407,%esi
ded6(2): jnle 0x4a(%rip)
ded8(6): cmp $0x406,%esi
dede(2): jnl 0x72(%rip)
dee0(6): cmp $0x401,%esi
dee6(2): jz 0xffffffba(%rip)
dee8(6): cmp $0x402,%esi
deee(2): jz 0x62(%rip)
def0(6): cmp $0x400,%esi
def6(2): jz 0x5a(%rip)
def8(3): mov (%rsp),%eax
defb(3): cmp $0x2f,%eax
defe(6): jnbe 0x13c(%rip)
df04(5): add 0x10(%rsp),%rax
df09(3): mov (%rax),%rdx
df0c(2): mov %ebp,%edi
df0e(2): xor %eax,%eax
df10(5): call 0xffff4240(%rip)
df15(2): mov %eax,%ebx
df17(2): jmp 0xffffff99(%rip)
df19(7): nop 0x0(%rax)
df20(6): cmp $0x409,%esi
df26(2): jz 0x2a(%rip)
df28(6): jl 0xffffff78(%rip)
df2e(6): cmp $0x40a,%esi
df34(2): jnz 0xffffffc4(%rip)
df36(5): jmp 0xffffff6a(%rip)
df3b(5): nop 0x0(%rax,%rax,1)
df40(3): cmp $0x9,%esi
df43(6): jz 0xffffff5d(%rip)
df49(2): jnle 0x7(%rip)
df4b(3): cmp $0x8,%esi
df4e(2): jnz 0xffffffaa(%rip)
df50(3): mov (%rsp),%eax
df53(3): cmp $0x2f,%eax
df56(6): jnbe 0xee(%rip)
df5c(5): add 0x10(%rsp),%rax
df61(2): mov (%rax),%edx
df63(2): mov %ebp,%edi
df65(2): xor %eax,%eax
df67(5): call 0xffff41e9(%rip)
df6c(2): mov %eax,%ebx
df6e(5): jmp 0xffffff42(%rip)
df73(2): xor %esi,%esi
df75(2): xor %eax,%eax
df77(5): call 0xffff41d9(%rip)
df7c(2): test %eax,%eax
df7e(2): mov %eax,%ebx
df80(6): js 0xffffff30(%rip)
df86(7): cmp $0xff,0x2065eb(%rip)
df8d(6): jnz 0xffffff23(%rip)
df93(2): xor %eax,%eax
df95(5): mov $0x1,%esi
df9a(2): mov %ebx,%edi
df9c(5): call 0xffff41b4(%rip)
dfa1(2): test %eax,%eax
dfa3(2): js 0x1e(%rip)
dfa5(3): or $0x1,%eax
dfa8(5): mov $0x2,%esi
dfad(2): mov %ebx,%edi
dfaf(2): mov %eax,%edx
dfb1(2): xor %eax,%eax
dfb3(5): call 0xffff419d(%rip)
dfb8(3): cmp $0xff,%eax
dfbb(6): jnz 0xfffffef5(%rip)
dfc1(5): call 0xffff40ef(%rip)
dfc6(3): mov (%rax),%r12d
dfc9(3): mov %rax,%rbp
dfcc(2): mov %ebx,%edi
dfce(5): call 0xffff4302(%rip)
dfd3(5): mov $0xffffffff,%ebx
dfd8(4): mov %r12d,0x0(%rbp)
dfdc(5): jmp 0xfffffed4(%rip)
dfe1(7): nop 0x0(%rax)
dfe8(5): call 0xffff40c8(%rip)
dfed(3): cmp $0x16,(%rax)
dff0(6): jnz 0xfffffe6f(%rip)
dff6(2): xor %esi,%esi
dff8(2): xor %eax,%eax
dffa(3): mov %r12d,%edx
dffd(2): mov %ebp,%edi
dfff(5): call 0xffff4151(%rip)
e004(2): test %eax,%eax
e006(2): mov %eax,%ebx
e008(6): js 0xfffffea8(%rip)
e00e(a): mov $0xffffffff,0x206560(%rip)
e018(5): jmp 0xffffff7b(%rip)
e01d(5): call 0xffff41d3(%rip)
e022(5): mov 0x10(%rsp),%rax
e027(2): xor %esi,%esi
e029(3): mov 0x10(%rax),%edx
e02c(2): xor %eax,%eax
e02e(5): call 0xffff4122(%rip)
e033(2): mov %eax,%ebx
e035(5): jmp 0xfffffe7b(%rip)
e03a(5): mov 0x8(%rsp),%rax
e03f(5): jmp 0xfffffeca(%rip)
e044(5): mov 0x8(%rsp),%rax
e049(5): jmp 0xffffff18(%rip)

"printf_fetchargs" :
e050(4): cmp $0x0,(%rsi)
e054(4): mov 0x8(%rsi),%rax
e058(2): jz 0x65(%rip)
e05a(7): lea 0x2c8f(%rip),%r8
e061(7): lea 0x2ce8(%rip),%r10
e068(7): lea 0x2c75(%rip),%r9
e06f(2): xor %ecx,%ecx
e071(7): nop 0x0(%rax)
e078(3): cmp $0x16,(%rax)
e07b(2): jnbe 0x45(%rip)
e07d(2): mov (%rax),%edx
e07f(4): movsxd 0x0(%r8,%rdx,4),%rdx
e083(3): add %r8,%rdx
e086(2): jmp %rdx
e088(8): nop 0x0(%rax,%rax,1)
e090(4): mov 0x8(%rdi),%rdx
e094(4): add $0xf,%rdx
e098(4): and $0xfffffff0,%rdx
e09c(4): lea 0x10(%rdx),%r11
e0a0(4): mov %r11,0x8(%rdi)
e0a4(2): fld (%rdx),%st0
e0a6(3): fstp %st0,0x10(%rax)
e0a9(7): nop 0x0(%rax)
e0b0(4): add $0x1,%rcx
e0b4(4): add $0x20,%rax
e0b8(3): cmp %rcx,(%rsi)
e0bb(2): jnbe 0xffffffbd(%rip)
e0bd(2): xor %eax,%eax
e0bf(1): ret near (%rsp)
e0c0(5): mov $0xffffffff,%eax
e0c5(1): ret near (%rsp)
e0c6(3): mov (%rdi),%r11d
e0c9(4): cmp $0x2f,%r11d
e0cd(6): jnbe 0x13d(%rip)
e0d3(3): mov %r11d,%edx
e0d6(4): add 0x10(%rdi),%rdx
e0da(4): add $0x8,%r11d
e0de(3): mov %r11d,(%rdi)
e0e1(3): mov (%rdx),%rdx
e0e4(4): mov %rdx,0x10(%rax)
e0e8(2): jmp 0xffffffc8(%rip)
e0ea(3): mov (%rdi),%r11d
e0ed(4): cmp $0x2f,%r11d
e0f1(6): jnbe 0x13b(%rip)
e0f7(3): mov %r11d,%edx
e0fa(4): add 0x10(%rdi),%rdx
e0fe(4): add $0x8,%r11d
e102(3): mov %r11d,(%rdi)
e105(2): mov (%rdx),%edx
e107(3): mov %edx,0x10(%rax)
e10a(2): jmp 0xffffffa6(%rip)
e10c(3): mov (%rdi),%r11d
e10f(4): cmp $0x2f,%r11d
e113(6): jnbe 0x108(%rip)
e119(3): mov %r11d,%edx
e11c(4): add 0x10(%rdi),%rdx
e120(4): add $0x8,%r11d
e124(3): mov %r11d,(%rdi)
e127(2): mov (%rdx),%edx
e129(3): mov %dl,0x10(%rax)
e12c(2): jmp 0xffffff84(%rip)
e12e(3): mov (%rdi),%r11d
e131(4): cmp $0x2f,%r11d
e135(6): jnbe 0xa5(%rip)
e13b(3): mov %r11d,%edx
e13e(4): add 0x10(%rdi),%rdx
e142(4): add $0x8,%r11d
e146(3): mov %r11d,(%rdi)
e149(2): mov (%rdx),%edx
e14b(4): mov %dx,0x10(%rax)
e14f(5): jmp 0xffffff61(%rip)
e154(3): mov (%rdi),%r11d
e157(4): cmp $0x2f,%r11d
e15b(6): jnbe 0x90(%rip)
e161(3): mov %r11d,%edx
e164(4): add 0x10(%rdi),%rdx
e168(4): add $0x8,%r11d
e16c(3): mov %r11d,(%rdi)
e16f(3): mov (%rdx),%rdx
e172(3): test %rdx,%rdx
e175(4): cmove %r9,%rdx
e179(4): mov %rdx,0x10(%rax)
e17d(5): jmp 0xffffff33(%rip)
e182(4): mov 0x4(%rdi),%r11d
e186(7): cmp $0xaf,%r11d
e18d(6): jnbe 0xb0(%rip)
e193(3): mov %r11d,%edx
e196(4): add 0x10(%rdi),%rdx
e19a(4): add $0x10,%r11d
e19e(4): mov %r11d,0x4(%rdi)
e1a2(4): movsd (%rdx),%xmm0
e1a6(5): movsd %xmm0,0x10(%rax)
e1ab(5): jmp 0xffffff05(%rip)
e1b0(3): mov (%rdi),%r11d
e1b3(4): cmp $0x2f,%r11d
e1b7(2): jnbe 0x45(%rip)
e1b9(3): mov %r11d,%edx
e1bc(4): add 0x10(%rdi),%rdx
e1c0(4): add $0x8,%r11d
e1c4(3): mov %r11d,(%rdi)
e1c7(3): mov (%rdx),%rdx
e1ca(3): test %rdx,%rdx
e1cd(4): cmove %r10,%rdx
e1d1(4): mov %rdx,0x10(%rax)
e1d5(5): jmp 0xfffffedb(%rip)
e1da(4): mov 0x8(%rdi),%rdx
e1de(4): lea 0x8(%rdx),%r11
e1e2(4): mov %r11,0x8(%rdi)
e1e6(5): jmp 0xffffff63(%rip)
e1eb(4): mov 0x8(%rdi),%rdx
e1ef(4): lea 0x8(%rdx),%r11
e1f3(4): mov %r11,0x8(%rdi)
e1f7(5): jmp 0xffffff78(%rip)
e1fc(4): mov 0x8(%rdi),%rdx
e200(4): lea 0x8(%rdx),%r11
e204(4): mov %r11,0x8(%rdi)
e208(2): jmp 0xffffffbf(%rip)
e20a(4): mov 0x8(%rdi),%rdx
e20e(4): lea 0x8(%rdx),%r11
e212(4): mov %r11,0x8(%rdi)
e216(5): jmp 0xfffffecb(%rip)
e21b(4): mov 0x8(%rdi),%rdx
e21f(4): lea 0x8(%rdx),%r11
e223(4): mov %r11,0x8(%rdi)
e227(5): jmp 0xffffff00(%rip)
e22c(4): mov 0x8(%rdi),%rdx
e230(4): lea 0x8(%rdx),%r11
e234(4): mov %r11,0x8(%rdi)
e238(5): jmp 0xfffffecd(%rip)
e23d(4): mov 0x8(%rdi),%rdx
e241(4): lea 0x8(%rdx),%r11
e245(4): mov %r11,0x8(%rdi)
e249(5): jmp 0xffffff59(%rip)

"printf_parse" :
e250(2): push %r15
e252(2): push %r14
e254(4): lea 0x20(%rsi),%rcx
e258(2): push %r13
e25a(2): push %r12
e25c(4): lea 0x10(%rdx),%rax
e260(1): push %rbp
e261(1): push %rbx
e262(3): mov %rsi,%r14
e265(3): mov %rdx,%r15
e268(2): xor %ebx,%ebx
e26a(6): mov $0x7,%r9d
e270(4): sub $0x58,%rsp
e274(6): mov $0x7,%r10d
e27a(7): mov $0x0,(%rsi)
e281(4): mov %rcx,0x8(%rsi)
e285(5): mov %rcx,0x28(%rsp)
e28a(7): mov $0xffffffff,%r8
e291(7): mov $0x0,(%rdx)
e298(5): mov %rax,0x8(%rsp)
e29d(4): mov %rax,0x8(%rdx)
e2a1(9): mov $0x0,0x18(%rsp)
e2aa(9): mov $0x0,0x10(%rsp)
e2b3(9): mov $0x0,0x20(%rsp)
e2bc(2): jmp 0xf(%rip)
e2be(2): nop 
e2c0(2): cmp $0x25,%al
e2c2(4): lea 0x1(%rdi),%rbp
e2c6(2): jz 0x42(%rip)
e2c8(3): mov %rbp,%rdi
e2cb(3): movzx (%rdi),%eax
e2ce(2): test %al,%al
e2d0(2): jnz 0xfffffff0(%rip)
e2d2(4): lea 0x0(%rbx,%rbx,4),%rax
e2d6(4): lea 0x0(%rbx,%rax,2),%rax
e2da(4): mov %rdi,0x0(%rcx,%rax,8)
e2de(5): mov 0x10(%rsp),%rax
e2e3(4): mov %rax,0x10(%r14)
e2e7(5): mov 0x18(%rsp),%rax
e2ec(4): mov %rax,0x18(%r14)
e2f0(2): xor %eax,%eax
e2f2(4): add $0x58,%rsp
e2f6(1): pop %rbx
e2f7(1): pop %rbp
e2f8(2): pop %r12
e2fa(2): pop %r13
e2fc(2): pop %r14
e2fe(2): pop %r15
e300(1): ret near (%rsp)
e301(7): nop 0x0(%rax)
e308(4): lea 0x0(%rbx,%rbx,4),%rax
e30c(3): mov %r8,%r13
e30f(4): lea 0x0(%rbx,%rax,2),%rax
e313(4): lea 0x0(%rcx,%rax,8),%r12
e317(4): mov %rdi,(%r12)
e31b(9): mov $0x0,0x10(%r12)
e324(9): mov $0x0,0x18(%r12)
e32d(9): mov $0x0,0x20(%r12)
e336(5): mov %r8,0x28(%r12)
e33b(9): mov $0x0,0x30(%r12)
e344(9): mov $0x0,0x38(%r12)
e34d(5): mov %r8,0x40(%r12)
e352(5): mov %r8,0x50(%r12)
e357(4): movzx 0x1(%rdi),%ebx
e35b(3): lea 0xffffffd0(%rbx),%eax
e35e(2): cmp $0x9,%al
e360(2): jnbe 0x3e(%rip)
e362(5): jmp 0x438(%rip)
e367(9): nop 0x0(%rax,%rax,1)
e370(3): cmp $0x2d,%bl
e373(2): jz 0x45(%rip)
e375(3): cmp $0x2b,%bl
e378(2): jz 0x48(%rip)
e37a(3): cmp $0x20,%bl
e37d(2): jz 0x53(%rip)
e37f(3): cmp $0x23,%bl
e382(2): jz 0x5e(%rip)
e384(3): cmp $0x30,%bl
e387(2): jz 0x69(%rip)
e389(3): cmp $0x49,%bl
e38c(2): jnz 0x74(%rip)
e38e(6): or $0x40,0x10(%r12)
e394(4): nop 0x0(%rax)
e398(3): movzx (%rax),%ebx
e39b(3): mov %rax,%rbp
e39e(4): lea 0x1(%rbp),%rax
e3a2(3): cmp $0x27,%bl
e3a5(3): mov %rax,%rdx
e3a8(2): jnz 0xffffffc8(%rip)
e3aa(6): or $0x1,0x10(%r12)
e3b0(2): jmp 0xffffffe8(%rip)
e3b2(6): nop 0x0(%rax,%rax,1)
e3b8(6): or $0x2,0x10(%r12)
e3be(2): jmp 0xffffffda(%rip)
e3c0(6): or $0x4,0x10(%r12)
e3c6(2): jmp 0xffffffd2(%rip)
e3c8(8): nop 0x0(%rax,%rax,1)
e3d0(6): or $0x8,0x10(%r12)
e3d6(2): jmp 0xffffffc2(%rip)
e3d8(8): nop 0x0(%rax,%rax,1)
e3e0(6): or $0x10,0x10(%r12)
e3e6(2): jmp 0xffffffb2(%rip)
e3e8(8): nop 0x0(%rax,%rax,1)
e3f0(6): or $0x20,0x10(%r12)
e3f6(2): jmp 0xffffffa2(%rip)
e3f8(8): nop 0x0(%rax,%rax,1)
e400(3): cmp $0x2a,%bl
e403(6): jz 0x1b6(%rip)
e409(3): lea 0xffffffd0(%rbx),%ecx
e40c(3): cmp $0x9,%cl
e40f(6): jbe 0x418(%rip)
e415(3): cmp $0x2e,%bl
e418(6): jz 0x2d7(%rip)
e41e(2): xor %eax,%eax
e420(5): mov $0x1,%esi
e425(2): jmp 0x32(%rip)
e427(9): nop 0x0(%rax,%rax,1)
e430(3): cmp $0x4c,%bl
e433(2): jz 0x3d(%rip)
e435(3): cmp $0x6c,%bl
e438(2): jz 0x18(%rip)
e43a(3): cmp $0x6a,%bl
e43d(2): jz 0x13(%rip)
e43f(2): mov %ebx,%edx
e441(3): and $0xdf,%edx
e444(3): cmp $0x5a,%dl
e447(2): jz 0x9(%rip)
e449(3): cmp $0x74,%bl
e44c(2): jnz 0x2c(%rip)
e44e(2): nop 
e450(3): add $0x8,%eax
e453(4): movzx 0x0(%rbp),%ebx
e457(4): add $0x1,%rbp
e45b(3): cmp $0x68,%bl
e45e(2): jnz 0xffffffd2(%rip)
e460(2): mov %eax,%ecx
e462(2): mov %esi,%edx
e464(3): and $0x1,%ecx
e467(2): shl/sal %cl,%edx
e469(2): or %edx,%eax
e46b(2): jmp 0xffffffe8(%rip)
e46d(3): nop (%rax)
e470(3): or $0x4,%eax
e473(2): jmp 0xffffffe0(%rip)
e475(3): nop (%rax)
e478(3): lea 0xffffffdb(%rbx),%edx
e47b(3): cmp $0x53,%dl
e47e(6): jnbe 0x61d(%rip)
e484(7): lea 0x28e1(%rip),%rcx
e48b(3): movzx %dl,%edx
e48e(4): movsxd 0x0(%rcx,%rdx,4),%rdx
e492(3): add %rcx,%rdx
e495(2): jmp %rdx
e497(6): mov $0x10,%r11d
e49d(5): mov $0x73,%ebx
e4a2(6): nop 0x0(%rax,%rax,1)
e4a8(4): cmp $0xffffffff,%r13
e4ac(6): jz 0x6bb(%rip)
e4b2(5): mov %r13,0x50(%r12)
e4b7(3): cmp %r13,%r9
e4ba(4): mov 0x8(%r15),%rcx
e4be(6): jbe 0x622(%rip)
e4c4(3): mov (%r15),%rax
e4c7(3): mov %rax,%rdx
e4ca(4): shl/sal $0x5,%rdx
e4ce(3): add %rcx,%rdx
e4d1(3): cmp %r13,%rax
e4d4(2): jnbe 0x22(%rip)
e4d6(a): nop 0x0(%rax,%rax,1)
e4e0(4): add $0x1,%rax
e4e4(6): mov $0x0,(%rdx)
e4ea(4): add $0x20,%rdx
e4ee(3): cmp %r13,%rax
e4f1(2): jbe 0xffffffef(%rip)
e4f3(3): mov %rax,(%r15)
e4f6(4): shl/sal $0x5,%r13
e4fa(4): lea 0x0(%rcx,%r13,1),%rax
e4fe(2): mov (%rax),%edx
e500(2): test %edx,%edx
e502(6): jnz 0x5d1(%rip)
e508(3): mov %r11d,(%rax)
e50b(5): mov %bl,0x48(%r12)
e510(3): mov (%r14),%rax
e513(5): mov %rbp,0x8(%r12)
e518(4): lea 0x1(%rax),%rbx
e51c(3): cmp %rbx,%r10
e51f(3): mov %rbx,(%r14)
e522(6): jnbe 0x8e(%rip)
e528(3): test %r10,%r10
e52b(6): js 0x9ac(%rip)
e531(3): add %r10,%r10
e534(a): mov $0x209622091746699450,%rax
e53e(3): cmp %rax,%r10
e541(6): jnbe 0x996(%rip)
e547(4): lea 0x0(%r10,%r10,4),%rax
e54b(4): mov 0x8(%r14),%rdi
e54f(5): cmp %rdi,0x28(%rsp)
e554(5): mov %r9,0x40(%rsp)
e559(5): mov %r10,0x38(%rsp)
e55e(4): lea 0x0(%r10,%rax,2),%rax
e562(5): mov %r8,0x30(%rsp)
e567(8): lea 0x0(,%rax,8),%rsi
e56f(6): jz 0x6be(%rip)
e575(5): call 0xffff3edb(%rip)
e57a(3): test %rax,%rax
e57d(3): mov %rax,%rcx
e580(5): mov 0x30(%rsp),%r8
e585(5): mov 0x38(%rsp),%r10
e58a(5): mov 0x40(%rsp),%r9
e58f(6): jz 0x948(%rip)
e595(5): mov 0x28(%rsp),%rax
e59a(4): cmp 0x8(%r14),%rax
e59e(3): mov (%r14),%rbx
e5a1(6): jz 0x6af(%rip)
e5a7(4): mov %rcx,0x8(%r14)
e5ab(5): jmp 0xfffffd1d(%rip)
e5b0(4): mov 0x8(%r14),%rcx
e5b4(5): jmp 0xfffffd14(%rip)
e5b9(5): mov 0x10(%rsp),%rsi
e5be(5): mov $0x1,%ecx
e5c3(5): mov %rbp,0x18(%r12)
e5c8(5): mov %rax,0x20(%r12)
e5cd(3): test %rsi,%rsi
e5d0(4): cmovne %rsi,%rcx
e5d4(5): mov %rcx,0x10(%rsp)
e5d9(4): movzx 0x1(%rbp),%ecx
e5dd(3): lea 0xffffffd0(%rcx),%esi
e5e0(4): cmp $0x9,%sil
e5e4(6): jbe 0x2e1(%rip)
e5ea(5): mov 0x20(%rsp),%rsi
e5ef(4): cmp $0xffffffff,%rsi
e5f3(4): lea 0x1(%rsi),%rdx
e5f7(5): mov %rsi,0x28(%r12)
e5fc(6): jz 0x49f(%rip)
e602(5): mov 0x20(%rsp),%rbx
e607(3): mov %rax,%rbp
e60a(5): mov %rdx,0x20(%rsp)
e60f(3): cmp %rbx,%r9
e612(4): mov 0x8(%r15),%rcx
e616(6): jnbe 0x67c(%rip)
e61c(3): add %r9,%r9
e61f(4): lea 0x1(%rbx),%rax
e623(3): cmp %rbx,%r9
e626(4): cmovbe %rax,%r9
e62a(a): mov $0x576460752303423487,%rax
e634(3): cmp %rax,%r9
e637(6): jnbe 0x8a4(%rip)
e63d(3): mov %r9,%rsi
e640(5): mov %r9,0x40(%rsp)
e645(5): mov %r10,0x38(%rsp)
e64a(4): shl/sal $0x5,%rsi
e64e(5): cmp %rcx,0x8(%rsp)
e653(5): mov %r8,0x30(%rsp)
e658(6): jz 0x719(%rip)
e65e(3): mov %rcx,%rdi
e661(5): call 0xffff3def(%rip)
e666(4): mov 0x8(%r15),%rdx
e66a(5): mov 0x30(%rsp),%r8
e66f(3): mov %rax,%rcx
e672(5): mov 0x38(%rsp),%r10
e677(5): mov 0x40(%rsp),%r9
e67c(3): test %rcx,%rcx
e67f(6): jz 0x8b8(%rip)
e685(5): cmp %rdx,0x8(%rsp)
e68a(3): mov (%r15),%rax
e68d(6): jz 0x7be(%rip)
e693(4): mov %rcx,0x8(%r15)
e697(3): mov %rax,%rdx
e69a(4): shl/sal $0x5,%rdx
e69e(3): add %rcx,%rdx
e6a1(3): cmp %rbx,%rax
e6a4(2): jnbe 0x22(%rip)
e6a6(a): nop 0x0(%rax,%rax,1)
e6b0(4): add $0x1,%rax
e6b4(6): mov $0x0,(%rdx)
e6ba(4): add $0x20,%rdx
e6be(3): cmp %rbx,%rax
e6c1(2): jbe 0xffffffef(%rip)
e6c3(3): mov %rax,(%r15)
e6c6(4): shl/sal $0x5,%rbx
e6ca(4): lea 0x0(%rcx,%rbx,1),%rax
e6ce(2): mov (%rax),%edx
e6d0(2): test %edx,%edx
e6d2(6): jnz 0x4d9(%rip)
e6d8(6): mov $0x5,(%rax)
e6de(4): movzx 0x0(%rbp),%ebx
e6e2(4): lea 0x1(%rbp),%rdx
e6e6(3): cmp $0x2e,%bl
e6e9(6): jnz 0xfffffd35(%rip)
e6ef(4): cmp $0x2a,0x1(%rbp)
e6f3(5): mov %rbp,0x30(%r12)
e6f8(6): jnz 0x186(%rip)
e6fe(5): mov 0x18(%rsp),%rsi
e703(4): lea 0x2(%rbp),%r11
e707(5): mov $0x2,%eax
e70c(5): mov %r11,0x38(%r12)
e711(4): cmp $0x2,%rsi
e715(4): cmovnb %rsi,%rax
e719(5): mov %rax,0x18(%rsp)
e71e(4): movsx 0x2(%rbp),%eax
e722(3): lea 0xffffffd0(%rax),%edx
e725(3): cmp $0x9,%dl
e728(6): jbe 0x694(%rip)
e72e(5): mov 0x40(%r12),%rbx
e733(4): cmp $0xffffffff,%rbx
e737(6): jz 0x65e(%rip)
e73d(3): cmp %rbx,%r9
e740(4): mov 0x8(%r15),%rcx
e744(6): jbe 0x56b(%rip)
e74a(3): mov (%r15),%rax
e74d(3): mov %rax,%rdx
e750(4): shl/sal $0x5,%rdx
e754(3): add %rcx,%rdx
e757(3): cmp %rbx,%rax
e75a(2): jnbe 0x1c(%rip)
e75c(4): nop 0x0(%rax)
e760(4): add $0x1,%rax
e764(6): mov $0x0,(%rdx)
e76a(4): add $0x20,%rdx
e76e(3): cmp %rbx,%rax
e771(2): jbe 0xffffffef(%rip)
e773(3): mov %rax,(%r15)
e776(4): shl/sal $0x5,%rbx
e77a(4): lea 0x0(%rcx,%rbx,1),%rax
e77e(2): mov (%rax),%edx
e780(2): test %edx,%edx
e782(6): jnz 0x518(%rip)
e788(6): mov $0x5,(%rax)
e78e(3): mov %r11,%rbp
e791(4): movzx (%r11),%ebx
e795(5): jmp 0xfffffc89(%rip)
e79a(3): mov %rbp,%rax
e79d(3): nop (%rax)
e7a0(4): add $0x1,%rax
e7a4(3): movzx (%rax),%edx
e7a7(3): lea 0xffffffd0(%rdx),%ecx
e7aa(3): cmp $0x9,%cl
e7ad(2): jbe 0xfffffff3(%rip)
e7af(3): cmp $0x24,%dl
e7b2(3): mov %r8,%r13
e7b5(6): jnz 0xfffffbe9(%rip)
e7bb(2): xor %edx,%edx
e7bd(3): movsx %bl,%eax
e7c0(a): mov $0x1844674407370955161,%rdi
e7ca(3): mov %r8,%rsi
e7cd(3): sub $0x30,%eax
e7d0(3): cmp %rdi,%rdx
e7d3(2): cwde 
e7d5(2): jnbe 0x9(%rip)
e7d7(4): lea 0x0(%rdx,%rdx,4),%rsi
e7db(3): add %rsi,%rsi
e7de(3): mov %rbp,%rcx
e7e1(3): add %rsi,%rax
e7e4(4): movzx 0x1(%rbp),%ebx
e7e8(4): setb %sil
e7ec(4): add $0x1,%rbp
e7f0(3): mov %rax,%rdx
e7f3(4): movzx %sil,%esi
e7f7(3): test %rsi,%rsi
e7fa(3): lea 0xffffffd0(%rbx),%edi
e7fd(6): jnz 0x391(%rip)
e803(4): cmp $0x9,%dil
e807(2): jbe 0xffffffb6(%rip)
e809(3): mov %rax,%r13
e80c(4): sub $0x1,%r13
e810(4): cmp $0xfffffffd,%r13
e814(6): jnbe 0x287(%rip)
e81a(4): lea 0x2(%rcx),%rbp
e81e(4): movzx 0x2(%rcx),%ebx
e822(5): jmp 0xfffffb7c(%rip)
e827(5): mov %rbp,0x18(%r12)
e82c(4): movzx 0x0(%rbp),%edi
e830(3): mov %rbp,%rsi
e833(3): lea 0xffffffd0(%rdi),%ecx
e836(3): cmp $0x9,%cl
e839(2): jbe 0xe(%rip)
e83b(2): jmp 0x35(%rip)
e83d(3): nop (%rax)
e840(3): mov %rax,%rbp
e843(4): add $0x1,%rax
e847(3): movzx (%rax),%edi
e84a(3): lea 0xffffffd0(%rdi),%edx
e84d(3): cmp $0x9,%dl
e850(2): jbe 0xfffffff0(%rip)
e852(3): mov %rax,%rcx
e855(4): lea 0x2(%rbp),%rdx
e859(3): mov %rax,%rbp
e85c(3): sub %rsi,%rcx
e85f(5): mov 0x10(%rsp),%rsi
e864(3): cmp %rcx,%rsi
e867(4): cmovnb %rsi,%rcx
e86b(5): mov %rcx,0x10(%rsp)
e870(5): mov %rbp,0x20(%r12)
e875(4): movzx 0x0(%rbp),%ebx
e879(5): jmp 0xfffffb9c(%rip)
e87e(4): movzx 0x1(%rbp),%eax
e882(3): sub $0x30,%eax
e885(2): cmp $0x9,%al
e887(2): jnbe 0x17(%rip)
e889(7): nop 0x0(%rax)
e890(4): add $0x1,%rdx
e894(3): movzx (%rdx),%eax
e897(3): sub $0x30,%eax
e89a(2): cmp $0x9,%al
e89c(2): jbe 0xfffffff4(%rip)
e89e(5): mov 0x18(%rsp),%rsi
e8a3(3): mov %rdx,%rax
e8a6(5): mov %rdx,0x38(%r12)
e8ab(3): sub %rbp,%rax
e8ae(3): movzx (%rdx),%ebx
e8b1(3): mov %rdx,%rbp
e8b4(3): cmp %rax,%rsi
e8b7(4): cmovnb %rsi,%rax
e8bb(5): mov %rax,0x18(%rsp)
e8c0(5): jmp 0xfffffb5e(%rip)
e8c5(3): mov %rax,%rsi
e8c8(4): add $0x1,%rsi
e8cc(3): movzx (%rsi),%edi
e8cf(4): lea 0xffffffd0(%rdi),%r11d
e8d3(4): cmp $0x9,%r11b
e8d7(2): jbe 0xfffffff1(%rip)
e8d9(4): cmp $0x24,%dil
e8dd(6): jnz 0xfffffd0d(%rip)
e8e3(2): xor %esi,%esi
e8e5(3): movsx %cl,%eax
e8e8(a): mov $0x1844674407370955161,%rdi
e8f2(3): mov %r8,%rcx
e8f5(3): sub $0x30,%eax
e8f8(3): cmp %rdi,%rsi
e8fb(2): cwde 
e8fd(2): jnbe 0x9(%rip)
e8ff(4): lea 0x0(%rsi,%rsi,4),%rcx
e903(3): add %rcx,%rcx
e906(3): mov %rdx,%rbp
e909(3): xor %r11d,%r11d
e90c(3): add %rcx,%rax
e90f(4): movzx 0x1(%rdx),%ecx
e913(4): setb %r11b
e917(4): add $0x1,%rdx
e91b(3): mov %rax,%rsi
e91e(3): test %r11,%r11
e921(3): lea 0xffffffd0(%rcx),%edi
e924(6): jnz 0x50a(%rip)
e92a(4): cmp $0x9,%dil
e92e(2): jbe 0xffffffb7(%rip)
e930(4): lea 0xffffffff(%rax),%rbx
e934(4): cmp $0xfffffffd,%rbx
e938(6): jnbe 0x163(%rip)
e93e(5): mov %rbx,0x28(%r12)
e943(4): add $0x2,%rbp
e947(5): jmp 0xfffffcc8(%rip)
e94c(3): cmp $0xf,%eax
e94f(6): mov $0x16,%r11d
e955(6): jnle 0xfffffb53(%rip)
e95b(2): test $0x4,%al
e95d(6): jnz 0xfffffb4b(%rip)
e963(3): cmp $0x7,%eax
e966(6): mov $0x15,%r11d
e96c(6): jnle 0xfffffb3c(%rip)
e972(2): test $0x2,%al
e974(6): mov $0x12,%r11d
e97a(6): jnz 0xfffffb2e(%rip)
e980(3): xor %r11d,%r11d
e983(2): test $0x1,%al
e985(4): setz %r11b
e989(4): add $0x13,%r11d
e98d(5): jmp 0xfffffb1b(%rip)
e992(6): nop 0x0(%rax,%rax,1)
e998(3): xor %r11d,%r11d
e99b(3): cmp $0x7,%eax
e99e(4): setnle %r11b
e9a2(4): add $0xd,%r11d
e9a6(5): jmp 0xfffffb02(%rip)
e9ab(3): cmp $0xf,%eax
e9ae(6): mov $0x9,%r11d
e9b4(6): jnle 0xfffffaf4(%rip)
e9ba(2): test $0x4,%al
e9bc(6): jnz 0xfffffaec(%rip)
e9c2(3): cmp $0x7,%eax
e9c5(6): mov $0x7,%r11d
e9cb(6): jnle 0xfffffadd(%rip)
e9d1(2): test $0x2,%al
e9d3(6): mov $0x1,%r11d
e9d9(6): jnz 0xfffffacf(%rip)
e9df(3): and $0x1,%eax
e9e2(3): cmp $0x1,%eax
e9e5(3): sbb %r11d,%r11d
e9e8(4): and $0x2,%r11d
e9ec(4): add $0x3,%r11d
e9f0(5): jmp 0xfffffab8(%rip)
e9f5(3): nop (%rax)
e9f8(3): xor %r11d,%r11d
e9fb(3): cmp $0x7,%eax
e9fe(4): setnle %r11b
ea02(4): add $0xf,%r11d
ea06(5): jmp 0xfffffaa2(%rip)
ea0b(3): cmp $0xf,%eax
ea0e(6): mov $0xc,%r11d
ea14(6): jnle 0xfffffa94(%rip)
ea1a(3): xor %r11d,%r11d
ea1d(2): test $0x4,%al
ea1f(4): setnz %r11b
ea23(4): add $0xb,%r11d
ea27(5): jmp 0xfffffa81(%rip)
ea2c(6): mov $0xe,%r11d
ea32(5): mov $0x63,%ebx
ea37(5): jmp 0xfffffa71(%rip)
ea3c(3): cmp $0xf,%eax
ea3f(6): mov $0xa,%r11d
ea45(6): jnle 0xfffffa63(%rip)
ea4b(2): test $0x4,%al
ea4d(6): jnz 0xfffffa5b(%rip)
ea53(3): cmp $0x7,%eax
ea56(6): mov $0x8,%r11d
ea5c(6): jnle 0xfffffa4c(%rip)
ea62(2): test $0x2,%al
ea64(6): mov $0x2,%r11d
ea6a(6): jnz 0xfffffa3e(%rip)
ea70(3): and $0x1,%eax
ea73(3): cmp $0x1,%eax
ea76(3): sbb %r11d,%r11d
ea79(4): and $0x2,%r11d
ea7d(4): add $0x4,%r11d
ea81(5): jmp 0xfffffa27(%rip)
ea86(a): nop 0x0(%rax,%rax,1)
ea90(6): mov $0x11,%r11d
ea96(5): jmp 0xfffffa12(%rip)
ea9b(4): mov 0x8(%r15),%rcx
ea9f(5): cmp %rcx,0x8(%rsp)
eaa4(2): jz 0xa(%rip)
eaa6(3): mov %rcx,%rdi
eaa9(5): call 0xffff35c7(%rip)
eaae(4): mov 0x8(%r14),%rdi
eab2(5): cmp %rdi,0x28(%rsp)
eab7(2): jz 0x7(%rip)
eab9(5): call 0xffff35b7(%rip)
eabe(5): call 0xffff35f2(%rip)
eac3(6): mov $0x16,(%rax)
eac9(5): mov $0xffffffff,%eax
eace(5): jmp 0xfffff824(%rip)
ead3(3): cmp %r11d,%edx
ead6(6): jz 0xfffffa35(%rip)
eadc(2): jmp 0xffffffc3(%rip)
eade(2): nop 
eae0(3): add %r9,%r9
eae3(4): lea 0x1(%r13),%rax
eae7(3): cmp %r13,%r9
eaea(4): cmovbe %rax,%r9
eaee(a): mov $0x576460752303423487,%rax
eaf8(3): cmp %rax,%r9
eafb(6): jnbe 0x3e0(%rip)
eb01(3): mov %r9,%rsi
eb04(5): mov %r9,0x48(%rsp)
eb09(5): mov %r10,0x40(%rsp)
eb0e(4): shl/sal $0x5,%rsi
eb12(5): cmp %rcx,0x8(%rsp)
eb17(5): mov %r8,0x38(%rsp)
eb1c(5): mov %r11d,0x30(%rsp)
eb21(6): jz 0xa0(%rip)
eb27(3): mov %rcx,%rdi
eb2a(5): call 0xffff3926(%rip)
eb2f(3): test %rax,%rax
eb32(3): mov %rax,%rcx
eb35(5): mov 0x30(%rsp),%r11d
eb3a(5): mov 0x38(%rsp),%r8
eb3f(5): mov 0x40(%rsp),%r10
eb44(5): mov 0x48(%rsp),%r9
eb49(6): jz 0x38e(%rip)
eb4f(5): mov 0x8(%rsp),%rax
eb54(4): cmp 0x8(%r15),%rax
eb58(6): jz 0x91(%rip)
eb5e(4): mov %rcx,0x8(%r15)
eb62(5): jmp 0xfffff962(%rip)
eb67(5): mov 0x20(%rsp),%rsi
eb6c(4): cmp $0xffffffff,%rsi
eb70(4): lea 0x1(%rsi),%rax
eb74(5): mov %rsi,0x50(%r12)
eb79(6): jz 0xffffff22(%rip)
eb7f(5): mov 0x20(%rsp),%r13
eb84(5): mov %rax,0x20(%rsp)
eb89(5): jmp 0xfffff92e(%rip)
eb8e(4): cmp $0x9,%dil
eb92(6): jnbe 0xffffff09(%rip)
eb98(3): movsx %bl,%eax
eb9b(3): mov %r8,%rsi
eb9e(3): mov %rbp,%rcx
eba1(3): sub $0x30,%eax
eba4(2): cwde 
eba6(5): jmp 0xfffffc3b(%rip)
ebab(3): cmp $0x5,%edx
ebae(6): jnz 0xfffffef1(%rip)
ebb4(4): movzx 0x0(%rbp),%ebx
ebb8(4): lea 0x1(%rbp),%rdx
ebbc(5): jmp 0xfffff859(%rip)
ebc1(3): mov %rsi,%rdi
ebc4(5): call 0xffff37fc(%rip)
ebc9(3): test %rax,%rax
ebcc(3): mov %rax,%rcx
ebcf(5): mov 0x30(%rsp),%r11d
ebd4(5): mov 0x38(%rsp),%r8
ebd9(5): mov 0x40(%rsp),%r10
ebde(5): mov 0x48(%rsp),%r9
ebe3(6): jz 0x169(%rip)
ebe9(3): mov (%r15),%rdx
ebec(5): mov 0x8(%rsp),%rsi
ebf1(3): mov %rcx,%rdi
ebf4(5): mov %r9,0x48(%rsp)
ebf9(5): mov %r10,0x40(%rsp)
ebfe(5): mov %r8,0x38(%rsp)
ec03(5): mov %r11d,0x30(%rsp)
ec08(4): shl/sal $0x5,%rdx
ec0c(5): call 0xffff3754(%rip)
ec11(5): mov 0x48(%rsp),%r9
ec16(5): mov 0x40(%rsp),%r10
ec1b(3): mov %rax,%rcx
ec1e(5): mov 0x38(%rsp),%r8
ec23(5): mov 0x30(%rsp),%r11d
ec28(5): jmp 0xffffff36(%rip)
ec2d(3): mov %rsi,%rdi
ec30(5): call 0xffff3790(%rip)
ec35(3): test %rax,%rax
ec38(3): mov %rax,%rcx
ec3b(5): mov 0x30(%rsp),%r8
ec40(5): mov 0x38(%rsp),%r10
ec45(5): mov 0x40(%rsp),%r9
ec4a(6): jz 0xef(%rip)
ec50(4): lea 0x0(%rbx,%rbx,4),%rax
ec54(5): mov 0x28(%rsp),%rsi
ec59(3): mov %rcx,%rdi
ec5c(5): mov %r9,0x40(%rsp)
ec61(5): mov %r10,0x38(%rsp)
ec66(4): lea 0x0(%rbx,%rax,2),%rdx
ec6a(5): mov %r8,0x30(%rsp)
ec6f(4): shl/sal $0x3,%rdx
ec73(5): call 0xffff36ed(%rip)
ec78(3): mov (%r14),%rbx
ec7b(3): mov %rax,%rcx
ec7e(5): mov 0x40(%rsp),%r9
ec83(5): mov 0x38(%rsp),%r10
ec88(5): mov 0x30(%rsp),%r8
ec8d(5): jmp 0xfffff91a(%rip)
ec92(3): mov (%r15),%rax
ec95(5): jmp 0xfffffa02(%rip)
ec9a(3): cmp $0x5,%edx
ec9d(6): jnz 0xfffffe02(%rip)
eca3(4): movzx (%r11),%ebx
eca7(3): mov %r11,%rbp
ecaa(5): jmp 0xfffff774(%rip)
ecaf(3): add %r9,%r9
ecb2(4): lea 0x1(%rbx),%rax
ecb6(3): cmp %rbx,%r9
ecb9(4): cmovbe %rax,%r9
ecbd(a): mov $0x576460752303423487,%rax
ecc7(3): cmp %rax,%r9
ecca(6): jnbe 0x211(%rip)
ecd0(3): mov %r9,%rsi
ecd3(5): mov %r9,0x48(%rsp)
ecd8(5): mov %r10,0x40(%rsp)
ecdd(4): shl/sal $0x5,%rsi
ece1(5): cmp %rcx,0x8(%rsp)
ece6(5): mov %r8,0x38(%rsp)
eceb(5): mov %r11,0x30(%rsp)
ecf0(6): jz 0x1be(%rip)
ecf6(3): mov %rcx,%rdi
ecf9(5): call 0xffff3757(%rip)
ecfe(4): mov 0x8(%r15),%rdx
ed02(5): mov 0x30(%rsp),%r11
ed07(3): mov %rax,%rcx
ed0a(5): mov 0x38(%rsp),%r8
ed0f(5): mov 0x40(%rsp),%r10
ed14(5): mov 0x48(%rsp),%r9
ed19(3): test %rcx,%rcx
ed1c(6): jz 0x21b(%rip)
ed22(5): cmp %rdx,0x8(%rsp)
ed27(3): mov (%r15),%rax
ed2a(6): jz 0x1c6(%rip)
ed30(4): mov %rcx,0x8(%r15)
ed34(5): jmp 0xfffffa19(%rip)
ed39(4): mov 0x8(%r15),%rcx
ed3d(5): cmp %rcx,0x8(%rsp)
ed42(2): jz 0x1a(%rip)
ed44(3): mov %rcx,%rdi
ed47(5): call 0xffff3329(%rip)
ed4c(4): mov 0x8(%r14),%rdi
ed50(5): cmp %rdi,0x28(%rsp)
ed55(2): jz 0x7(%rip)
ed57(5): call 0xffff3319(%rip)
ed5c(5): call 0xffff3354(%rip)
ed61(6): mov $0xc,(%rax)
ed67(5): mov $0xffffffff,%eax
ed6c(5): jmp 0xfffff586(%rip)
ed71(3): mov %rsi,%rdi
ed74(5): call 0xffff364c(%rip)
ed79(5): mov 0x8(%rsp),%rdx
ed7e(3): mov %rax,%rcx
ed81(5): mov 0x40(%rsp),%r9
ed86(5): mov 0x38(%rsp),%r10
ed8b(5): mov 0x30(%rsp),%r8
ed90(5): jmp 0xfffff8ec(%rip)
ed95(5): mov 0x20(%rsp),%rsi
ed9a(4): cmp $0xffffffff,%rsi
ed9e(4): lea 0x1(%rsi),%rax
eda2(5): mov %rsi,0x40(%r12)
eda7(6): jz 0xfffffcf4(%rip)
edad(5): mov 0x20(%rsp),%rbx
edb2(5): mov %rax,0x20(%rsp)
edb7(5): jmp 0xfffff986(%rip)
edbc(3): mov %r11,%rdx
edbf(4): add $0x1,%rdx
edc3(3): movzx (%rdx),%ecx
edc6(3): lea 0xffffffd0(%rcx),%esi
edc9(4): cmp $0x9,%sil
edcd(2): jbe 0xfffffff2(%rip)
edcf(3): cmp $0x24,%cl
edd2(6): jnz 0xfffff95c(%rip)
edd8(2): xor %ecx,%ecx
edda(a): mov $0x1844674407370955161,%rsi
ede4(3): sub $0x30,%eax
ede7(3): mov %r8,%rdx
edea(3): cmp %rsi,%rcx
eded(2): cwde 
edef(2): jnbe 0x9(%rip)
edf1(4): lea 0x0(%rcx,%rcx,4),%rdx
edf5(3): add %rdx,%rdx
edf8(3): mov %r11,%rsi
edfb(2): xor %ebx,%ebx
edfd(3): add %rax,%rdx
ee00(5): movsx 0x1(%r11),%eax
ee05(3): setb %bl
ee08(4): add $0x1,%r11
ee0c(3): mov %rdx,%rcx
ee0f(3): test %rbx,%rbx
ee12(3): lea 0xffffffd0(%rax),%edi
ee15(2): jz 0x73(%rip)
ee17(4): cmp $0x9,%dil
ee1b(6): jnbe 0xfffffc80(%rip)
ee21(3): sub $0x30,%eax
ee24(3): mov %r8,%rdx
ee27(3): mov %r11,%rsi
ee2a(2): cwde 
ee2c(2): jmp 0xffffffcf(%rip)
ee2e(4): cmp $0x9,%dil
ee32(6): jnbe 0xfffffc69(%rip)
ee38(3): movsx %cl,%eax
ee3b(3): mov %rdx,%rbp
ee3e(3): mov %r8,%rcx
ee41(3): sub $0x30,%eax
ee44(2): cwde 
ee46(5): jmp 0xfffffac3(%rip)
ee4b(5): mov 0x8(%rsp),%rsi
ee50(4): shl/sal $0x5,%rax
ee54(3): mov %rcx,%rdi
ee57(3): mov %rax,%rdx
ee5a(5): mov %r9,0x40(%rsp)
ee5f(5): mov %r10,0x38(%rsp)
ee64(5): mov %r8,0x30(%rsp)
ee69(5): call 0xffff34f7(%rip)
ee6e(5): mov 0x40(%rsp),%r9
ee73(3): mov %rax,%rcx
ee76(5): mov 0x38(%rsp),%r10
ee7b(3): mov (%r15),%rax
ee7e(5): mov 0x30(%rsp),%r8
ee83(5): jmp 0xfffff810(%rip)
ee88(4): cmp $0x9,%dil
ee8c(6): jbe 0xffffff4e(%rip)
ee92(4): lea 0xffffffff(%rdx),%rbx
ee96(4): cmp $0xfffffffd,%rbx
ee9a(6): jnbe 0xfffffc01(%rip)
eea0(5): mov %rbx,0x40(%r12)
eea5(4): lea 0x2(%rsi),%r11
eea9(5): jmp 0xfffff894(%rip)
eeae(3): mov %rsi,%rdi
eeb1(5): call 0xffff350f(%rip)
eeb6(5): mov 0x8(%rsp),%rdx
eebb(3): mov %rax,%rcx
eebe(5): mov 0x48(%rsp),%r9
eec3(5): mov 0x40(%rsp),%r10
eec8(5): mov 0x38(%rsp),%r8
eecd(5): mov 0x30(%rsp),%r11
eed2(5): jmp 0xfffffe47(%rip)
eed7(4): mov 0x8(%r15),%rcx
eedb(5): cmp %rcx,0x8(%rsp)
eee0(6): jnz 0xfffffe64(%rip)
eee6(5): jmp 0xfffffe66(%rip)
eeeb(5): nop 0x0(%rax,%rax,1)
eef0(5): mov 0x8(%rsp),%rsi
eef5(4): shl/sal $0x5,%rax
eef9(3): mov %rcx,%rdi
eefc(3): mov %rax,%rdx
eeff(5): mov %r9,0x48(%rsp)
ef04(5): mov %r10,0x40(%rsp)
ef09(5): mov %r8,0x38(%rsp)
ef0e(5): mov %r11,0x30(%rsp)
ef13(5): call 0xffff344d(%rip)
ef18(5): mov 0x48(%rsp),%r9
ef1d(3): mov %rax,%rcx
ef20(5): mov 0x40(%rsp),%r10
ef25(3): mov (%r15),%rax
ef28(5): mov 0x38(%rsp),%r8
ef2d(5): mov 0x30(%rsp),%r11
ef32(5): jmp 0xfffffdfe(%rip)
ef37(3): mov %rdx,%rcx
ef3a(2): jmp 0xffffffa1(%rip)

"__libc_csu_init" :
ef40(2): push %r15
ef42(2): push %r14
ef44(3): mov %rdx,%r15
ef47(2): push %r13
ef49(2): push %r12
ef4b(7): lea 0x20491e(%rip),%r12
ef52(1): push %rbp
ef53(7): lea 0x20491e(%rip),%rbp
ef5a(1): push %rbx
ef5b(3): mov %edi,%r13d
ef5e(3): mov %rsi,%r14
ef61(3): sub %r12,%rbp
ef64(4): sub $0x8,%rsp
ef68(4): sar $0x3,%rbp
ef6c(5): call 0xffff30b4(%rip)
ef71(3): test %rbp,%rbp
ef74(2): jz 0x22(%rip)
ef76(2): xor %ebx,%ebx
ef78(8): nop 0x0(%rax,%rax,1)
ef80(3): mov %r15,%rdx
ef83(3): mov %r14,%rsi
ef86(3): mov %r13d,%edi
ef89(4): call 0x0(%r12,%rbx,8)
ef8d(4): add $0x1,%rbx
ef91(3): cmp %rbx,%rbp
ef94(2): jnz 0xffffffec(%rip)
ef96(4): add $0x8,%rsp
ef9a(1): pop %rbx
ef9b(1): pop %rbp
ef9c(2): pop %r12
ef9e(2): pop %r13
efa0(2): pop %r14
efa2(2): pop %r15
efa4(1): ret near (%rsp)

"atexit" :
efc0(7): mov 0x205041(%rip),%rdx
efc7(2): xor %esi,%esi
efc9(5): jmp 0xffff3527(%rip)

"_fini" :
efd0(4): sub $0x8,%rsp
efd4(4): add $0x8,%rsp
efd8(1): ret near (%rsp)

