
"free@plt" :
1100(6): jmp 0x204d9a(%rip)
1106(5): push $0x0

"abort@plt" :
1110(6): jmp 0x204d92(%rip)
1116(5): push $0x1

"__errno_location@plt" :
1120(6): jmp 0x204d8a(%rip)
1126(5): push $0x2

"strncmp@plt" :
1130(6): jmp 0x204d82(%rip)
1136(5): push $0x3

"_exit@plt" :
1140(6): jmp 0x204d7a(%rip)
1146(5): push $0x4

"__fpending@plt" :
1150(6): jmp 0x204d72(%rip)
1156(5): push $0x5

"textdomain@plt" :
1160(6): jmp 0x204d6a(%rip)
1166(5): push $0x6

"fclose@plt" :
1170(6): jmp 0x204d62(%rip)
1176(5): push $0x7

"bindtextdomain@plt" :
1180(6): jmp 0x204d5a(%rip)
1186(5): push $0x8

"dcgettext@plt" :
1190(6): jmp 0x204d52(%rip)
1196(5): push $0x9

"__ctype_get_mb_cur_max@plt" :
11a0(6): jmp 0x204d4a(%rip)
11a6(5): push $0xa

"strlen@plt" :
11b0(6): jmp 0x204d42(%rip)
11b6(5): push $0xb

"__stack_chk_fail@plt" :
11c0(6): jmp 0x204d3a(%rip)
11c6(5): push $0xc

"mbrtowc@plt" :
11d0(6): jmp 0x204d32(%rip)
11d6(5): push $0xd

"strrchr@plt" :
11e0(6): jmp 0x204d2a(%rip)
11e6(5): push $0xe

"lseek@plt" :
11f0(6): jmp 0x204d22(%rip)
11f6(5): push $0xf

"memset@plt" :
1200(6): jmp 0x204d1a(%rip)
1206(5): push $0x10

"memcmp@plt" :
1210(6): jmp 0x204d12(%rip)
1216(5): push $0x11

"fputs_unlocked@plt" :
1220(6): jmp 0x204d0a(%rip)
1226(5): push $0x12

"calloc@plt" :
1230(6): jmp 0x204d02(%rip)
1236(5): push $0x13

"strcmp@plt" :
1240(6): jmp 0x204cfa(%rip)
1246(5): push $0x14

"memcpy@plt" :
1250(6): jmp 0x204cf2(%rip)
1256(5): push $0x15

"fileno@plt" :
1260(6): jmp 0x204cea(%rip)
1266(5): push $0x16

"malloc@plt" :
1270(6): jmp 0x204ce2(%rip)
1276(5): push $0x17

"fflush@plt" :
1280(6): jmp 0x204cda(%rip)
1286(5): push $0x18

"nl_langinfo@plt" :
1290(6): jmp 0x204cd2(%rip)
1296(5): push $0x19

"__freading@plt" :
12a0(6): jmp 0x204cca(%rip)
12a6(5): push $0x1a

"realloc@plt" :
12b0(6): jmp 0x204cc2(%rip)
12b6(5): push $0x1b

"setlocale@plt" :
12c0(6): jmp 0x204cba(%rip)
12c6(5): push $0x1c

"__printf_chk@plt" :
12d0(6): jmp 0x204cb2(%rip)
12d6(5): push $0x1d

"error@plt" :
12e0(6): jmp 0x204caa(%rip)
12e6(5): push $0x1e

"fseeko@plt" :
12f0(6): jmp 0x204ca2(%rip)
12f6(5): push $0x1f

"__cxa_atexit@plt" :
1300(6): jmp 0x204c9a(%rip)
1306(5): push $0x20

"exit@plt" :
1310(6): jmp 0x204c92(%rip)
1316(5): push $0x21

"fwrite@plt" :
1320(6): jmp 0x204c8a(%rip)
1326(5): push $0x22

"__fprintf_chk@plt" :
1330(6): jmp 0x204c82(%rip)
1336(5): push $0x23

"mbsinit@plt" :
1340(6): jmp 0x204c7a(%rip)
1346(5): push $0x24

"iswprint@plt" :
1350(6): jmp 0x204c72(%rip)
1356(5): push $0x25

"__ctype_b_loc@plt" :
1360(6): jmp 0x204c6a(%rip)
1366(5): push $0x26

".plt.got" :
1370(6): jmp 0x204c82(%rip)
1376(2): nop 

"_init" :
10d8(4): sub $0x8,%rsp
10dc(7): mov 0x204f05(%rip),%rax
10e3(3): test %rax,%rax
10e6(2): jz 0x4(%rip)
10e8(2): call %rax
10ea(4): add $0x8,%rsp
10ee(1): ret near (%rsp)

"main" :
1380(3): cmp $0x2,%edi
1383(2): jz 0x8(%rip)
1385(5): mov $0x1,%eax
138a(1): ret near (%rsp)
138b(1): push %rbx
138c(3): mov (%rsi),%rdi
138f(3): mov %rsi,%rbx
1392(5): call 0x5de(%rip)
1397(7): lea 0x2f30(%rip),%rsi
139e(5): mov $0x6,%edi
13a3(5): call 0xffffff1d(%rip)
13a8(7): lea 0x2fc3(%rip),%rsi
13af(7): lea 0x2f93(%rip),%rdi
13b6(5): call 0xfffffdca(%rip)
13bb(7): lea 0x2f87(%rip),%rdi
13c2(5): call 0xfffffd9e(%rip)
13c7(7): lea 0x4f2(%rip),%rdi
13ce(5): call 0x2ed2(%rip)
13d3(4): mov 0x8(%rbx),%rbx
13d7(7): lea 0x2fac(%rip),%rsi
13de(3): mov %rbx,%rdi
13e1(5): call 0xfffffe5f(%rip)
13e6(2): test %eax,%eax
13e8(2): jz 0x49(%rip)
13ea(7): lea 0x2fa0(%rip),%rsi
13f1(3): mov %rbx,%rdi
13f4(5): call 0xfffffe4c(%rip)
13f9(2): test %eax,%eax
13fb(2): jz 0x9(%rip)
13fd(5): mov $0x1,%eax
1402(1): pop %rbx
1403(1): ret near (%rsp)
1404(7): mov 0x204c05(%rip),%rcx
140b(7): mov 0x204c76(%rip),%rdi
1412(7): lea 0x2f82(%rip),%r8
1419(7): lea 0x2f25(%rip),%rdx
1420(7): lea 0x2e9d(%rip),%rsi
1427(3): xor %r9d,%r9d
142a(5): call 0x2736(%rip)
142f(2): jmp 0xffffffce(%rip)
1431(5): mov $0x1,%edi
1436(5): call 0x11a(%rip)

"_start" :
1440(2): xor %ebp,%ebp
1442(3): mov %rdx,%r9
1445(1): pop %rsi
1446(3): mov %rsp,%rdx
1449(4): and $0xfffffff0,%rsp
144d(1): push %rax
144e(1): push %rsp
144f(7): lea 0x2e3a(%rip),%r8
1456(7): lea 0x2dc3(%rip),%rcx
145d(7): lea 0xffffff1c(%rip),%rdi
1464(6): call 0x204b76(%rip)
146a(1): hlt 

"deregister_tm_clones" :
1470(7): lea 0x204c09(%rip),%rdi
1477(1): push %rbp
1478(7): lea 0x204c01(%rip),%rax
147f(3): cmp %rdi,%rax
1482(3): mov %rsp,%rbp
1485(2): jz 0x1b(%rip)
1487(7): mov 0x204b4a(%rip),%rax
148e(3): test %rax,%rax
1491(2): jz 0xf(%rip)
1493(1): pop %rbp
1494(2): jmp %rax
1496(a): nop 0x0(%rax,%rax,1)
14a0(1): pop %rbp
14a1(1): ret near (%rsp)

"register_tm_clones" :
14b0(7): lea 0x204bc9(%rip),%rdi
14b7(7): lea 0x204bc2(%rip),%rsi
14be(1): push %rbp
14bf(3): sub %rdi,%rsi
14c2(3): mov %rsp,%rbp
14c5(4): sar $0x3,%rsi
14c9(3): mov %rsi,%rax
14cc(4): shr $0x3f,%rax
14d0(3): add %rax,%rsi
14d3(3): sar $0x1,%rsi
14d6(2): jz 0x1a(%rip)
14d8(7): mov 0x204b11(%rip),%rax
14df(3): test %rax,%rax
14e2(2): jz 0xe(%rip)
14e4(1): pop %rbp
14e5(2): jmp %rax
14e7(9): nop 0x0(%rax,%rax,1)
14f0(1): pop %rbp
14f1(1): ret near (%rsp)

"__do_global_dtors_aux" :
1500(7): cmp $0x0,0x204ba1(%rip)
1507(2): jnz 0x31(%rip)
1509(8): cmp $0x0,0x204ae7(%rip)
1511(1): push %rbp
1512(3): mov %rsp,%rbp
1515(2): jz 0xe(%rip)
1517(7): mov 0x204aea(%rip),%rdi
151e(5): call 0xfffffe52(%rip)
1523(5): call 0xffffff4d(%rip)
1528(7): mov $0x1,0x204b79(%rip)
152f(1): pop %rbp
1530(1): ret near (%rsp)
1531(7): nop 0x0(%rax)
1538(2): REP ret near (%rsp)

"frame_dummy" :
1540(1): push %rbp
1541(3): mov %rsp,%rbp
1544(1): pop %rbp
1545(5): jmp 0xffffff6b(%rip)

"usage" :
1550(2): push %r13
1552(2): push %r12
1554(7): lea 0x2e4d(%rip),%rsi
155b(1): push %rbp
155c(1): push %rbx
155d(5): mov $0x5,%edx
1562(2): mov %edi,%ebx
1564(2): xor %edi,%edi
1566(7): sub $0x88,%rsp
156d(7): mov 0x204b4c(%rip),%rbp
1574(9): mov $0x28,%rax
157d(5): mov %rax,0x78(%rsp)
1582(2): xor %eax,%eax
1584(5): call 0xfffffc0c(%rip)
1589(3): mov %rbp,%rcx
158c(3): mov %rbp,%rdx
158f(3): mov %rax,%rsi
1592(5): mov $0x1,%edi
1597(2): xor %eax,%eax
1599(5): call 0xfffffd37(%rip)
159e(7): lea 0x2e43(%rip),%rsi
15a5(5): mov $0x5,%edx
15aa(2): xor %edi,%edi
15ac(5): call 0xfffffbe4(%rip)
15b1(7): lea 0x2d12(%rip),%rsi
15b8(3): mov %rax,%rdx
15bb(5): mov $0x1,%edi
15c0(2): xor %eax,%eax
15c2(5): call 0xfffffd0e(%rip)
15c7(7): mov 0x204aba(%rip),%rbp
15ce(7): lea 0x2e43(%rip),%rsi
15d5(5): mov $0x5,%edx
15da(2): xor %edi,%edi
15dc(5): call 0xfffffbb4(%rip)
15e1(3): mov %rbp,%rsi
15e4(3): mov %rax,%rdi
15e7(5): call 0xfffffc39(%rip)
15ec(7): mov 0x204a95(%rip),%rbp
15f3(7): lea 0x2e4e(%rip),%rsi
15fa(5): mov $0x5,%edx
15ff(2): xor %edi,%edi
1601(5): call 0xfffffb8f(%rip)
1606(3): mov %rbp,%rsi
1609(3): mov %rax,%rdi
160c(7): lea 0x2cb1(%rip),%rbp
1613(5): call 0xfffffc0d(%rip)
1618(7): lea 0x2e61(%rip),%rsi
161f(5): mov $0x5,%edx
1624(2): xor %edi,%edi
1626(5): call 0xfffffb6a(%rip)
162b(7): lea 0x2c92(%rip),%rdx
1632(3): mov %rax,%rsi
1635(5): mov $0x1,%edi
163a(2): xor %eax,%eax
163c(5): call 0xfffffc94(%rip)
1641(7): lea 0x2c87(%rip),%rax
1648(7): lea 0x2cc1(%rip),%rcx
164f(7): lea 0x2cf3(%rip),%rdi
1656(9): mov $0x0,0x60(%rsp)
165f(9): mov $0x0,0x68(%rsp)
1668(3): mov %rsp,%rdx
166b(4): mov %rax,(%rsp)
166f(7): lea 0x2c5b(%rip),%rax
1676(5): mov %rcx,0x30(%rsp)
167b(7): lea 0x2c98(%rip),%rcx
1682(5): mov %rdi,0x10(%rsp)
1687(5): mov %rax,0x8(%rsp)
168c(7): lea 0x2c4e(%rip),%rax
1693(5): mov %rcx,0x40(%rsp)
1698(7): lea 0x2c85(%rip),%rcx
169f(5): mov %rax,0x18(%rsp)
16a4(7): lea 0x2c4c(%rip),%rax
16ab(5): mov %rcx,0x50(%rsp)
16b0(5): mov %rax,0x20(%rsp)
16b5(7): lea 0x2c45(%rip),%rax
16bc(5): mov %rax,0x28(%rsp)
16c1(5): mov %rax,0x38(%rsp)
16c6(5): mov %rax,0x48(%rsp)
16cb(5): mov %rax,0x58(%rsp)
16d0(2): jmp 0xc(%rip)
16d2(6): nop 0x0(%rax,%rax,1)
16d8(4): mov 0x10(%rdx),%rdi
16dc(4): add $0x10,%rdx
16e0(3): test %rdi,%rdi
16e3(2): jz 0x15(%rip)
16e5(5): mov $0x6,%ecx
16ea(3): mov %rbp,%rsi
16ed(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
16ef(3): setnbe %al
16f2(2): sbb $0x0,%al
16f4(2): test %al,%al
16f6(2): jnz 0xffffffe2(%rip)
16f8(4): mov 0x8(%rdx),%r12
16fc(2): xor %edi,%edi
16fe(5): mov $0x5,%edx
1703(7): lea 0x2c24(%rip),%rsi
170a(3): test %r12,%r12
170d(6): jz 0xc9(%rip)
1713(5): call 0xfffffa7d(%rip)
1718(7): lea 0x2e21(%rip),%rcx
171f(7): lea 0x2c1f(%rip),%rdx
1726(3): mov %rax,%rsi
1729(5): mov $0x1,%edi
172e(2): xor %eax,%eax
1730(5): call 0xfffffba0(%rip)
1735(2): xor %esi,%esi
1737(5): mov $0x5,%edi
173c(5): call 0xfffffb84(%rip)
1741(3): test %rax,%rax
1744(2): jz 0x1e(%rip)
1746(7): lea 0x2c06(%rip),%rsi
174d(5): mov $0x3,%edx
1752(3): mov %rax,%rdi
1755(5): call 0xfffff9db(%rip)
175a(2): test %eax,%eax
175c(6): jnz 0xcc(%rip)
1762(7): lea 0x2bee(%rip),%rsi
1769(2): xor %edi,%edi
176b(5): mov $0x5,%edx
1770(5): call 0xfffffa20(%rip)
1775(7): lea 0x2b48(%rip),%rcx
177c(7): lea 0x2dbd(%rip),%rdx
1783(3): mov %rax,%rsi
1786(5): mov $0x1,%edi
178b(2): xor %eax,%eax
178d(5): call 0xfffffb43(%rip)
1792(3): cmp %rbp,%r12
1795(7): lea 0x2b4f(%rip),%rcx
179c(7): lea 0x2b2b(%rip),%rbp
17a3(4): cmove %rcx,%rbp
17a7(7): lea 0x2e02(%rip),%rsi
17ae(5): mov $0x5,%edx
17b3(2): xor %edi,%edi
17b5(5): call 0xfffff9db(%rip)
17ba(5): mov $0x1,%edi
17bf(3): mov %rax,%rsi
17c2(3): mov %rbp,%rcx
17c5(3): mov %r12,%rdx
17c8(2): xor %eax,%eax
17ca(5): call 0xfffffb06(%rip)
17cf(2): mov %ebx,%edi
17d1(5): call 0xfffffb3f(%rip)
17d6(5): call 0xfffff9ba(%rip)
17db(7): lea 0x2d5e(%rip),%rcx
17e2(7): lea 0x2b5c(%rip),%rdx
17e9(3): mov %rax,%rsi
17ec(5): mov $0x1,%edi
17f1(2): xor %eax,%eax
17f3(5): call 0xfffffadd(%rip)
17f8(2): xor %esi,%esi
17fa(5): mov $0x5,%edi
17ff(5): call 0xfffffac1(%rip)
1804(3): test %rax,%rax
1807(2): jz 0x4b(%rip)
1809(7): lea 0x2b43(%rip),%rsi
1810(5): mov $0x3,%edx
1815(3): mov %rax,%rdi
1818(5): call 0xfffff918(%rip)
181d(2): test %eax,%eax
181f(2): jz 0x33(%rip)
1821(7): lea 0x2a9c(%rip),%r12
1828(7): mov 0x204859(%rip),%r13
182f(7): lea 0x2d32(%rip),%rsi
1836(2): xor %edi,%edi
1838(5): mov $0x5,%edx
183d(5): call 0xfffff953(%rip)
1842(3): mov %r13,%rsi
1845(3): mov %rax,%rdi
1848(5): call 0xfffff9d8(%rip)
184d(5): jmp 0xffffff15(%rip)
1852(7): lea 0x2afe(%rip),%rsi
1859(5): mov $0x5,%edx
185e(2): xor %edi,%edi
1860(7): lea 0x2a5d(%rip),%r12
1867(7): lea 0x2a7d(%rip),%rbp
186e(5): call 0xfffff922(%rip)
1873(7): lea 0x2a4a(%rip),%rcx
187a(7): lea 0x2cbf(%rip),%rdx
1881(3): mov %rax,%rsi
1884(5): mov $0x1,%edi
1889(2): xor %eax,%eax
188b(5): call 0xfffffa45(%rip)
1890(5): jmp 0xffffff17(%rip)

"close_stdout_set_file_name" :
18a0(7): mov %rdi,0x204811(%rip)
18a7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
18b0(7): mov %dil,0x2047f9(%rip)
18b7(1): ret near (%rsp)

"close_stdout" :
18c0(1): push %rbp
18c1(1): push %rbx
18c2(4): sub $0x8,%rsp
18c6(7): mov 0x2047bb(%rip),%rdi
18cd(5): call 0x2713(%rip)
18d2(2): test %eax,%eax
18d4(2): jz 0x18(%rip)
18d6(5): call 0xfffff84a(%rip)
18db(7): cmp $0x0,0x2047ce(%rip)
18e2(3): mov %rax,%rbx
18e5(2): jz 0x1e(%rip)
18e7(3): cmp $0x20,(%rax)
18ea(2): jnz 0x19(%rip)
18ec(7): mov 0x2047ad(%rip),%rdi
18f3(5): call 0x26ed(%rip)
18f8(2): test %eax,%eax
18fa(2): jnz 0x48(%rip)
18fc(4): add $0x8,%rsp
1900(1): pop %rbx
1901(1): pop %rbp
1902(1): ret near (%rsp)
1903(7): lea 0x2cde(%rip),%rsi
190a(2): xor %edi,%edi
190c(5): mov $0x5,%edx
1911(5): call 0xfffff87f(%rip)
1916(7): mov 0x20479b(%rip),%rdi
191d(3): mov %rax,%rbp
1920(3): test %rdi,%rdi
1923(2): jz 0x2a(%rip)
1925(5): call 0x1b5b(%rip)
192a(2): mov (%rbx),%esi
192c(7): lea 0x2cc1(%rip),%rdx
1933(3): mov %rax,%rcx
1936(3): mov %rbp,%r8
1939(2): xor %edi,%edi
193b(2): xor %eax,%eax
193d(5): call 0xfffff9a3(%rip)
1942(6): mov 0x2046d0(%rip),%edi
1948(5): call 0xfffff7f8(%rip)
194d(2): mov (%rbx),%esi
194f(7): lea 0x2ca2(%rip),%rdx
1956(3): mov %rax,%rcx
1959(2): xor %edi,%edi
195b(2): xor %eax,%eax
195d(5): call 0xfffff983(%rip)
1962(2): jmp 0xffffffe0(%rip)

"set_program_name" :
1970(3): test %rdi,%rdi
1973(1): push %rbx
1974(2): jz 0x79(%rip)
1976(5): mov $0x2f,%esi
197b(3): mov %rdi,%rbx
197e(5): call 0xfffff862(%rip)
1983(3): test %rax,%rax
1986(2): jz 0x57(%rip)
1988(4): lea 0x1(%rax),%r8
198c(3): mov %r8,%rdx
198f(3): sub %rbx,%rdx
1992(4): cmp $0x6,%rdx
1996(2): jle 0x47(%rip)
1998(4): lea 0xfffffffa(%rax),%rsi
199c(7): lea 0x2c95(%rip),%rdi
19a3(5): mov $0x7,%ecx
19a8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
19aa(3): setnbe %dl
19ad(3): sbb $0x0,%dl
19b0(2): test %dl,%dl
19b2(2): jnz 0x2b(%rip)
19b4(7): lea 0x2c85(%rip),%rdi
19bb(5): mov $0x3,%ecx
19c0(3): mov %r8,%rsi
19c3(3): mov %r8,%rbx
19c6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
19c8(3): setnbe %dl
19cb(3): sbb $0x0,%dl
19ce(2): test %dl,%dl
19d0(2): jnz 0xd(%rip)
19d2(4): lea 0x4(%rax),%rbx
19d6(7): mov %rbx,0x2046a3(%rip)
19dd(7): mov %rbx,0x2046dc(%rip)
19e4(7): mov %rbx,0x2046a5(%rip)
19eb(1): pop %rbx
19ec(1): ret near (%rsp)
19ed(7): mov 0x2046ac(%rip),%rcx
19f4(7): lea 0x2c05(%rip),%rdi
19fb(5): mov $0x37,%edx
1a00(5): mov $0x1,%esi
1a05(5): call 0xfffff91b(%rip)
1a0a(5): call 0xfffff706(%rip)

"gettext_quote.part.1" :
1a10(1): push %rbp
1a11(1): push %rbx
1a12(3): mov %rdi,%rbp
1a15(2): mov %esi,%ebx
1a17(4): sub $0x8,%rsp
1a1b(5): call 0x26a5(%rip)
1a20(3): movzx (%rax),%edx
1a23(3): and $0xdf,%edx
1a26(3): cmp $0x55,%dl
1a29(2): jz 0x77(%rip)
1a2b(3): cmp $0x47,%dl
1a2e(2): jz 0x22(%rip)
1a30(7): lea 0x2c1c(%rip),%rax
1a37(7): lea 0x2c17(%rip),%rdx
1a3e(3): cmp $0x9,%ebx
1a41(4): cmovne %rdx,%rax
1a45(4): add $0x8,%rsp
1a49(1): pop %rbx
1a4a(1): pop %rbp
1a4b(1): ret near (%rsp)
1a4c(4): nop 0x0(%rax)
1a50(4): movzx 0x1(%rax),%edx
1a54(3): and $0xdf,%edx
1a57(3): cmp $0x42,%dl
1a5a(2): jnz 0xffffffd6(%rip)
1a5c(4): cmp $0x31,0x2(%rax)
1a60(2): jnz 0xffffffd0(%rip)
1a62(4): cmp $0x38,0x3(%rax)
1a66(2): jnz 0xffffffca(%rip)
1a68(4): cmp $0x30,0x4(%rax)
1a6c(2): jnz 0xffffffc4(%rip)
1a6e(4): cmp $0x33,0x5(%rax)
1a72(2): jnz 0xffffffbe(%rip)
1a74(4): cmp $0x30,0x6(%rax)
1a78(2): jnz 0xffffffb8(%rip)
1a7a(4): cmp $0x0,0x7(%rax)
1a7e(2): jnz 0xffffffb2(%rip)
1a80(4): cmp $0x60,0x0(%rbp)
1a84(7): lea 0x2bc1(%rip),%rax
1a8b(7): lea 0x2bbe(%rip),%rdx
1a92(4): cmovne %rdx,%rax
1a96(4): add $0x8,%rsp
1a9a(1): pop %rbx
1a9b(1): pop %rbp
1a9c(1): ret near (%rsp)
1a9d(3): nop (%rax)
1aa0(4): movzx 0x1(%rax),%edx
1aa4(3): and $0xdf,%edx
1aa7(3): cmp $0x54,%dl
1aaa(2): jnz 0xffffff86(%rip)
1aac(4): movzx 0x2(%rax),%edx
1ab0(3): and $0xdf,%edx
1ab3(3): cmp $0x46,%dl
1ab6(6): jnz 0xffffff7a(%rip)
1abc(4): cmp $0x2d,0x3(%rax)
1ac0(6): jnz 0xffffff70(%rip)
1ac6(4): cmp $0x38,0x4(%rax)
1aca(6): jnz 0xffffff66(%rip)
1ad0(4): cmp $0x0,0x5(%rax)
1ad4(6): jnz 0xffffff5c(%rip)
1ada(4): cmp $0x60,0x0(%rbp)
1ade(7): lea 0x2b5f(%rip),%rax
1ae5(7): lea 0x2b5c(%rip),%rdx
1aec(4): cmovne %rdx,%rax
1af0(4): add $0x8,%rsp
1af4(1): pop %rbx
1af5(1): pop %rbp
1af6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
1b00(2): push %r15
1b02(2): push %r14
1b04(3): mov %r8d,%r15d
1b07(2): push %r13
1b09(2): push %r12
1b0b(3): mov %rdi,%r14
1b0e(1): push %rbp
1b0f(1): push %rbx
1b10(3): mov %r9d,%ebx
1b13(3): mov %rsi,%r13
1b16(3): mov %rcx,%rbp
1b19(3): and $0x2,%ebx
1b1c(7): sub $0xb8,%rsp
1b23(8): mov 0xf0(%rsp),%rax
1b2b(5): mov %rdx,0x10(%rsp)
1b30(5): mov %r8d,0x8(%rsp)
1b35(5): mov %r9d,0x78(%rsp)
1b3a(5): mov %rax,0x20(%rsp)
1b3f(8): mov 0xf8(%rsp),%rax
1b47(5): mov %rax,0x68(%rsp)
1b4c(8): mov 0x100(%rsp),%rax
1b54(5): mov %rax,0x60(%rsp)
1b59(9): mov $0x28,%rax
1b62(8): mov %rax,0xa8(%rsp)
1b6a(2): xor %eax,%eax
1b6c(5): call 0xfffff634(%rip)
1b71(4): cmp $0xa,%r15d
1b75(5): mov %rax,0x58(%rsp)
1b7a(6): jnbe 0x11b5(%rip)
1b80(7): lea 0x2b39(%rip),%rcx
1b87(3): mov %r15d,%edx
1b8a(4): movsxd 0x0(%rcx,%rdx,4),%rax
1b8e(3): add %rcx,%rax
1b91(2): jmp %rax
1b93(5): mov $0x1,0xe(%rsp)
1b98(5): mov $0x0,0x7c(%rsp)
1b9d(3): xor %r12d,%r12d
1ba0(9): mov $0x0,0x50(%rsp)
1ba9(5): mov $0x1,0xf(%rsp)
1bae(5): mov $0x0,0xd(%rsp)
1bb3(7): lea 0x2a9b(%rip),%rax
1bba(9): mov $0x1,0x18(%rsp)
1bc3(3): xor %r15d,%r15d
1bc6(8): mov $0x2,0x8(%rsp)
1bce(5): mov %rax,0x48(%rsp)
1bd3(3): xor %r11d,%r11d
1bd6(3): mov %rbp,%rax
1bd9(3): mov %r12d,%r8d
1bdc(3): mov %r11,%rbp
1bdf(3): mov %rax,%r11
1be2(6): nop 0x0(%rax,%rax,1)
1be8(3): cmp %rbp,%r11
1beb(4): setnz %r12b
1bef(4): cmp $0xffffffff,%r11
1bf3(2): jnz 0xf(%rip)
1bf5(5): mov 0x10(%rsp),%rax
1bfa(4): cmp $0x0,0x0(%rax,%rbp,1)
1bfe(4): setnz %r12b
1c02(3): test %r12b,%r12b
1c05(6): jz 0x65b(%rip)
1c0b(5): cmp $0x2,0x8(%rsp)
1c10(5): mov 0x10(%rsp),%rdi
1c15(4): lea 0x0(%rdi,%rbp,1),%r9
1c19(3): setnz %al
1c1c(4): and 0xd(%rsp),%al
1c20(3): mov %eax,%r10d
1c23(6): jz 0xad(%rip)
1c29(5): mov 0x18(%rsp),%rax
1c2e(3): test %rax,%rax
1c31(6): jz 0x42f(%rip)
1c37(4): cmp $0xffffffff,%r11
1c3b(5): lea 0x0(%rbp,%rax,1),%rbx
1c40(2): jnz 0x30(%rip)
1c42(4): cmp $0x1,%rax
1c46(2): jbe 0x2a(%rip)
1c48(5): mov %r8b,0x38(%rsp)
1c4d(5): mov %r10b,0x30(%rsp)
1c52(5): mov %r9,0x28(%rsp)
1c57(5): call 0xfffff559(%rip)
1c5c(6): movzx 0x38(%rsp),%r8d
1c62(6): movzx 0x30(%rsp),%r10d
1c68(3): mov %rax,%r11
1c6b(5): mov 0x28(%rsp),%r9
1c70(3): cmp %r11,%rbx
1c73(5): mov %r10b,0x28(%rsp)
1c78(6): jnbe 0x5b8(%rip)
1c7e(5): mov 0x18(%rsp),%rdx
1c83(5): mov 0x48(%rsp),%rsi
1c88(3): mov %r9,%rdi
1c8b(5): mov %r11,0x40(%rsp)
1c90(5): mov %r8b,0x38(%rsp)
1c95(5): mov %r9,0x30(%rsp)
1c9a(5): call 0xfffff576(%rip)
1c9f(2): test %eax,%eax
1ca1(5): mov 0x30(%rsp),%r9
1ca6(6): movzx 0x38(%rsp),%r8d
1cac(5): mov 0x40(%rsp),%r11
1cb1(6): jnz 0x57f(%rip)
1cb7(5): cmp $0x0,0xf(%rsp)
1cbc(6): movzx 0x28(%rsp),%r10d
1cc2(6): jnz 0xf83(%rip)
1cc8(8): nop 0x0(%rax,%rax,1)
1cd0(4): movzx (%r9),%ebx
1cd4(3): cmp $0x7e,%bl
1cd7(6): jnbe 0x321(%rip)
1cdd(7): lea 0x2a08(%rip),%rcx
1ce4(3): movzx %bl,%edx
1ce7(4): movsxd 0x0(%rcx,%rdx,4),%rax
1ceb(3): add %rcx,%rax
1cee(2): jmp %rax
1cf0(3): xor %r10d,%r10d
1cf3(4): cmp $0x1,%r11
1cf7(3): setnz %al
1cfa(4): cmp $0xffffffff,%r11
1cfe(2): jnz 0xe(%rip)
1d00(5): mov 0x10(%rsp),%rax
1d05(4): cmp $0x0,0x1(%rax)
1d09(3): setnz %al
1d0c(5): cmp $0x2,0x8(%rsp)
1d11(3): setz %dl
1d14(2): test %al,%al
1d16(6): jz 0x252(%rip)
1d1c(3): xor %r12d,%r12d
1d1f(2): xor %eax,%eax
1d21(7): nop 0x0(%rax)
1d28(5): cmp $0x1,0xd(%rsp)
1d2d(6): jnz 0x115(%rip)
1d33(2): test %dl,%dl
1d35(6): jnz 0x10d(%rip)
1d3b(5): mov 0x20(%rsp),%rsi
1d40(3): test %rsi,%rsi
1d43(2): jz 0x16(%rip)
1d45(2): mov %ebx,%edx
1d47(3): shr $0x5,%dl
1d4a(3): movzx %dl,%edx
1d4d(3): mov 0x0(%rsi,%rdx,4),%edx
1d50(3): bt %ebx,%edx
1d53(6): jb 0x150(%rip)
1d59(3): test %r10b,%r10b
1d5c(6): jnz 0x147(%rip)
1d62(3): xor $0x1,%eax
1d65(4): add $0x1,%rbp
1d69(3): and %r8d,%eax
1d6c(2): test %al,%al
1d6e(2): jz 0x22(%rip)
1d70(3): cmp %r15,%r13
1d73(2): jbe 0x7(%rip)
1d75(5): mov $0x27,0x0(%r14,%r15,1)
1d7a(4): lea 0x1(%r15),%rax
1d7e(3): cmp %rax,%r13
1d81(2): jbe 0x8(%rip)
1d83(6): mov $0x27,0x1(%r14,%r15,1)
1d89(4): add $0x2,%r15
1d8d(3): xor %r8d,%r8d
1d90(3): cmp %r13,%r15
1d93(2): jnb 0x6(%rip)
1d95(4): mov %bl,0x0(%r14,%r15,1)
1d99(5): movzx 0xe(%rsp),%edi
1d9e(4): add $0x1,%r15
1da2(5): mov $0x0,%eax
1da7(3): test %r12b,%r12b
1daa(3): cmove %eax,%edi
1dad(5): mov %dil,0xe(%rsp)
1db2(5): jmp 0xfffffe36(%rip)
1db7(9): nop 0x0(%rax,%rax,1)
1dc0(3): xor %r10d,%r10d
1dc3(4): mov 0x8(%rsp),%eax
1dc7(3): cmp $0x2,%eax
1dca(6): jz 0x5be(%rip)
1dd0(3): cmp $0x5,%eax
1dd3(6): jz 0x575(%rip)
1dd9(3): cmp $0x2,%eax
1ddc(5): mov $0x3f,%ebx
1de1(3): setz %dl
1de4(3): xor %r12d,%r12d
1de7(2): xor %eax,%eax
1de9(5): jmp 0xffffff3f(%rip)
1dee(2): nop 
1df0(3): xor %r10d,%r10d
1df3(5): cmp $0x2,0x8(%rsp)
1df8(6): jz 0x508(%rip)
1dfe(5): mov %r12b,0x7c(%rsp)
1e03(2): xor %edx,%edx
1e05(2): xor %eax,%eax
1e07(5): mov $0x27,%ebx
1e0c(5): jmp 0xffffff1c(%rip)
1e11(7): nop 0x0(%rax)
1e18(5): mov $0x9,%edx
1e1d(5): mov $0x74,%ebx
1e22(5): cmp $0x2,0x8(%rsp)
1e27(3): setz %al
1e2a(4): and 0xf(%rsp),%al
1e2e(6): jnz 0x150(%rip)
1e34(5): cmp $0x0,0xd(%rsp)
1e39(2): jnz 0x67(%rip)
1e3b(2): mov %edx,%ebx
1e3d(3): xor %r12d,%r12d
1e40(2): xor %eax,%eax
1e42(5): cmp $0x0,0xf(%rsp)
1e47(6): jnz 0xfffffef4(%rip)
1e4d(5): jmp 0xffffff0c(%rip)
1e52(6): nop 0x0(%rax,%rax,1)
1e58(5): mov $0x8,%edx
1e5d(5): mov $0x62,%ebx
1e62(2): jmp 0xffffffd2(%rip)
1e64(4): nop 0x0(%rax)
1e68(5): cmp $0x2,0x8(%rsp)
1e6d(6): jz 0x3d3(%rip)
1e73(5): cmp $0x0,0xd(%rsp)
1e78(6): jz 0x218(%rip)
1e7e(5): cmp $0x0,0xf(%rsp)
1e83(6): jz 0x20d(%rip)
1e89(6): cmp $0x0,0x18(%rsp)
1e8f(6): jnz 0x3bc(%rip)
1e95(5): mov $0x5c,%ebx
1e9a(6): nop 0x0(%rax,%rax,1)
1ea0(3): xor %r12d,%r12d
1ea3(5): cmp $0x2,0x8(%rsp)
1ea8(3): setz %dl
1eab(5): cmp $0x0,0xf(%rsp)
1eb0(2): mov %edx,%eax
1eb2(6): jnz 0x856(%rip)
1eb8(3): mov %r8d,%eax
1ebb(3): xor $0x1,%eax
1ebe(2): and %dl,%al
1ec0(2): jz 0x31(%rip)
1ec2(3): cmp %r15,%r13
1ec5(2): jbe 0x7(%rip)
1ec7(5): mov $0x27,0x0(%r14,%r15,1)
1ecc(4): lea 0x1(%r15),%rdx
1ed0(3): cmp %rdx,%r13
1ed3(2): jbe 0x8(%rip)
1ed5(6): mov $0x24,0x1(%r14,%r15,1)
1edb(4): lea 0x2(%r15),%rdx
1edf(3): cmp %rdx,%r13
1ee2(2): jbe 0x8(%rip)
1ee4(6): mov $0x27,0x2(%r14,%r15,1)
1eea(4): add $0x3,%r15
1eee(3): mov %eax,%r8d
1ef1(3): cmp %r15,%r13
1ef4(2): jbe 0x7(%rip)
1ef6(5): mov $0x5c,0x0(%r14,%r15,1)
1efb(4): add $0x1,%r15
1eff(4): add $0x1,%rbp
1f03(5): jmp 0xfffffe8d(%rip)
1f08(8): nop 0x0(%rax,%rax,1)
1f10(5): cmp $0x0,0xd(%rsp)
1f15(6): jnz 0x1ce(%rip)
1f1b(2): xor %edx,%edx
1f1d(5): test $0x1,0x78(%rsp)
1f22(6): jz 0xffffff19(%rip)
1f28(4): add $0x1,%rbp
1f2c(5): jmp 0xfffffcbc(%rip)
1f31(7): nop 0x0(%rax)
1f38(5): cmp $0x2,0x8(%rsp)
1f3d(3): setz %dl
1f40(2): xor %eax,%eax
1f42(5): jmp 0xfffffde6(%rip)
1f47(9): nop 0x0(%rax,%rax,1)
1f50(5): mov $0x7,%edx
1f55(5): mov $0x61,%ebx
1f5a(5): jmp 0xfffffeda(%rip)
1f5f(1): nop 
1f60(5): cmp $0x2,0x8(%rsp)
1f65(3): setz %dl
1f68(3): test %rbp,%rbp
1f6b(6): jnz 0xfffffdb1(%rip)
1f71(5): movzx 0xf(%rsp),%eax
1f76(2): and %dl,%al
1f78(6): jz 0xfffffdb0(%rip)
1f7e(3): mov %r11,%rbp
1f81(8): mov $0x2,0x8(%rsp)
1f89(5): jmp 0x700(%rip)
1f8e(2): nop 
1f90(5): cmp $0x2,0x8(%rsp)
1f95(3): setz %dl
1f98(3): xor %r12d,%r12d
1f9b(2): jmp 0xffffffd6(%rip)
1f9d(3): nop (%rax)
1fa0(5): cmp $0x2,0x8(%rsp)
1fa5(5): mov $0x20,%ebx
1faa(3): setz %dl
1fad(2): jmp 0xffffffc4(%rip)
1faf(1): nop 
1fb0(5): mov $0xd,%edx
1fb5(5): mov $0x72,%ebx
1fba(5): jmp 0xfffffe68(%rip)
1fbf(1): nop 
1fc0(5): mov $0xc,%edx
1fc5(5): mov $0x66,%ebx
1fca(5): jmp 0xfffffe6a(%rip)
1fcf(1): nop 
1fd0(5): mov $0xb,%edx
1fd5(5): mov $0x76,%ebx
1fda(5): jmp 0xfffffe5a(%rip)
1fdf(1): nop 
1fe0(5): mov $0xa,%edx
1fe5(5): mov $0x6e,%ebx
1fea(5): jmp 0xfffffe38(%rip)
1fef(1): nop 
1ff0(3): xor %r10d,%r10d
1ff3(5): nop 0x0(%rax,%rax,1)
1ff8(6): cmp $0x1,0x58(%rsp)
1ffe(6): jnz 0x3aa(%rip)
2004(5): mov %r11,0x38(%rsp)
2009(5): mov %r8b,0x30(%rsp)
200e(5): mov %r10b,0x28(%rsp)
2013(5): call 0xfffff34d(%rip)
2018(3): mov (%rax),%rcx
201b(3): movzx %bl,%edx
201e(6): movzx 0x28(%rsp),%r10d
2024(6): movzx 0x30(%rsp),%r8d
202a(5): mov 0x38(%rsp),%r11
202f(5): mov $0x1,%edi
2034(4): movzx 0x0(%rcx,%rdx,2),%eax
2038(4): and $0x4000,%ax
203c(4): setnz %r12b
2040(3): setz %al
2043(4): and 0xd(%rsp),%al
2047(2): test %al,%al
2049(6): jnz 0x998(%rip)
204f(5): cmp $0x2,0x8(%rsp)
2054(3): setz %dl
2057(5): jmp 0xfffffcd1(%rip)
205c(4): nop 0x0(%rax)
2060(4): movzx (%r9),%ebx
2064(3): cmp $0x7e,%bl
2067(2): jnbe 0xffffff89(%rip)
2069(7): lea 0x2878(%rip),%rcx
2070(3): movzx %bl,%edx
2073(4): movsxd 0x0(%rcx,%rdx,4),%rax
2077(3): add %rcx,%rax
207a(2): jmp %rax
207c(4): nop 0x0(%rax)
2080(3): xor %r10d,%r10d
2083(5): cmp $0x0,0xd(%rsp)
2088(6): jnz 0xfffffdf6(%rip)
208e(2): nop 
2090(5): mov $0x5c,%edx
2095(5): mov $0x5c,%ebx
209a(5): jmp 0xfffffd9a(%rip)
209f(1): nop 
20a0(5): mov $0xc,%edx
20a5(3): xor %r10d,%r10d
20a8(5): mov $0x66,%ebx
20ad(5): jmp 0xfffffd87(%rip)
20b2(6): nop 0x0(%rax,%rax,1)
20b8(5): mov $0xa,%edx
20bd(3): xor %r10d,%r10d
20c0(5): mov $0x6e,%ebx
20c5(5): jmp 0xfffffd5d(%rip)
20ca(6): nop 0x0(%rax,%rax,1)
20d0(5): mov $0x61,%ebx
20d5(5): jmp 0xfffffdcb(%rip)
20da(6): nop 0x0(%rax,%rax,1)
20e0(3): xor %r10d,%r10d
20e3(5): cmp $0x2,0x8(%rsp)
20e8(3): setz %dl
20eb(5): cmp $0x0,0xf(%rsp)
20f0(6): jnz 0xb9a(%rip)
20f6(3): mov %r8d,%eax
20f9(3): mov %r15,%rcx
20fc(3): xor $0x1,%eax
20ff(2): and %dl,%al
2101(2): jz 0x2f(%rip)
2103(3): cmp %r15,%r13
2106(2): jbe 0x7(%rip)
2108(5): mov $0x27,0x0(%r14,%r15,1)
210d(4): lea 0x1(%r15),%rcx
2111(3): cmp %rcx,%r13
2114(2): jbe 0x8(%rip)
2116(6): mov $0x24,0x1(%r14,%r15,1)
211c(4): lea 0x2(%r15),%rcx
2120(3): cmp %rcx,%r13
2123(6): jnbe 0x636(%rip)
2129(4): lea 0x3(%r15),%rcx
212d(3): mov %eax,%r8d
2130(3): cmp %rcx,%r13
2133(2): jbe 0x7(%rip)
2135(5): mov $0x5c,0x0(%r14,%rcx,1)
213a(5): cmp $0x2,0x8(%rsp)
213f(4): lea 0x1(%rcx),%r15
2143(6): jz 0x606(%rip)
2149(4): lea 0x1(%rbp),%rax
214d(3): cmp %r11,%rax
2150(2): jnb 0x1b(%rip)
2152(5): mov 0x10(%rsp),%rax
2157(5): movzx 0x1(%rax,%rbp,1),%eax
215c(4): mov %al,0x28(%rsp)
2160(3): sub $0x30,%eax
2163(2): cmp $0x9,%al
2165(6): jbe 0x834(%rip)
216b(3): mov %r12d,%eax
216e(5): mov $0x30,%ebx
2173(3): xor %r12d,%r12d
2176(5): jmp 0xfffffbb2(%rip)
217b(5): nop 0x0(%rax,%rax,1)
2180(5): cmp $0x2,0x8(%rsp)
2185(3): mov %r10d,%r12d
2188(3): setz %dl
218b(3): xor %r10d,%r10d
218e(2): xor %eax,%eax
2190(5): jmp 0xfffffb98(%rip)
2195(3): nop (%rax)
2198(5): cmp $0x2,0x8(%rsp)
219d(3): setz %dl
21a0(3): xor %r10d,%r10d
21a3(5): jmp 0xfffffdc5(%rip)
21a8(8): nop 0x0(%rax,%rax,1)
21b0(5): cmp $0x2,0x8(%rsp)
21b5(3): setz %dl
21b8(3): xor %r10d,%r10d
21bb(3): xor %r12d,%r12d
21be(5): jmp 0xfffffdb3(%rip)
21c3(5): nop 0x0(%rax,%rax,1)
21c8(5): cmp $0x2,0x8(%rsp)
21cd(3): mov %r10d,%r12d
21d0(5): mov $0x20,%ebx
21d5(3): setz %dl
21d8(3): xor %r10d,%r10d
21db(5): jmp 0xfffffd96(%rip)
21e0(5): mov $0xd,%edx
21e5(3): xor %r10d,%r10d
21e8(5): mov $0x72,%ebx
21ed(5): jmp 0xfffffc35(%rip)
21f2(6): nop 0x0(%rax,%rax,1)
21f8(5): mov $0x76,%ebx
21fd(5): jmp 0xfffffca3(%rip)
2202(6): nop 0x0(%rax,%rax,1)
2208(5): mov $0x9,%edx
220d(3): xor %r10d,%r10d
2210(5): mov $0x74,%ebx
2215(5): jmp 0xfffffc0d(%rip)
221a(6): nop 0x0(%rax,%rax,1)
2220(5): mov $0x62,%ebx
2225(5): jmp 0xfffffc7b(%rip)
222a(6): nop 0x0(%rax,%rax,1)
2230(3): xor %r10d,%r10d
2233(5): jmp 0xfffffa9d(%rip)
2238(8): nop 0x0(%rax,%rax,1)
2240(5): cmp $0x0,0xf(%rsp)
2245(6): jnz 0x96b(%rip)
224b(4): add $0x1,%rbp
224f(3): mov %r8d,%eax
2252(3): xor %r12d,%r12d
2255(5): mov $0x5c,%ebx
225a(5): jmp 0xfffffb12(%rip)
225f(1): nop 
2260(5): cmp $0x2,0x8(%rsp)
2265(5): movzx 0xf(%rsp),%ebx
226a(3): mov %r8d,%r12d
226d(3): mov %r11,%rbp
2270(3): setz %dl
2273(2): mov %ebx,%eax
2275(3): test %r15,%r15
2278(3): setz %cl
227b(2): and %edx,%eax
227d(2): and %cl,%al
227f(6): jnz 0xa67(%rip)
2285(2): mov %ebx,%eax
2287(3): xor $0x1,%eax
228a(2): and %al,%dl
228c(6): jz 0x970(%rip)
2292(5): cmp $0x0,0x7c(%rsp)
2297(6): jz 0x963(%rip)
229d(5): cmp $0x0,0xe(%rsp)
22a2(6): jnz 0x9fb(%rip)
22a8(3): test %r13,%r13
22ab(3): setz %al
22ae(6): cmp $0x0,0x50(%rsp)
22b4(3): setnz %dl
22b7(2): and %dl,%al
22b9(6): jz 0xa23(%rip)
22bf(5): mov 0x50(%rsp),%r13
22c4(7): lea 0x238a(%rip),%rbx
22cb(4): mov $0x27,(%r14)
22cf(8): mov $0x2,0x8(%rsp)
22d7(6): mov $0x1,%r15d
22dd(9): mov $0x1,0x18(%rsp)
22e6(5): mov $0x0,0xf(%rsp)
22eb(5): mov %rbx,0x48(%rsp)
22f0(4): mov %al,0x7c(%rsp)
22f4(5): jmp 0xfffff8df(%rip)
22f9(7): nop 0x0(%rax)
2300(5): cmp $0x0,0xf(%rsp)
2305(6): jnz 0x8ab(%rip)
230b(3): test %r13,%r13
230e(6): jz 0x402(%rip)
2314(2): xor %edx,%edx
2316(6): cmp $0x0,0x50(%rsp)
231c(6): jnz 0x3f4(%rip)
2322(5): mov %r13,0x50(%rsp)
2327(4): add $0x3,%r15
232b(2): xor %eax,%eax
232d(5): mov %r12b,0x7c(%rsp)
2332(3): xor %r8d,%r8d
2335(3): mov %rdx,%r13
2338(5): mov $0x27,%ebx
233d(5): jmp 0xfffffa1c(%rip)
2342(6): nop 0x0(%rax,%rax,1)
2348(5): test $0x4,0x78(%rsp)
234d(2): jz 0x23(%rip)
234f(4): lea 0x2(%rbp),%rcx
2353(3): cmp %r11,%rcx
2356(2): jnb 0x1a(%rip)
2358(5): mov 0x10(%rsp),%rax
235d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2362(6): jz 0x790(%rip)
2368(8): nop 0x0(%rax,%rax,1)
2370(2): xor %edx,%edx
2372(3): xor %r12d,%r12d
2375(2): xor %eax,%eax
2377(5): mov $0x3f,%ebx
237c(5): jmp 0xfffff9ac(%rip)
2381(7): nop 0x0(%rax)
2388(5): cmp $0x0,0xf(%rsp)
238d(6): jnz 0x823(%rip)
2393(3): xor %r12d,%r12d
2396(2): xor %eax,%eax
2398(5): mov $0x3f,%ebx
239d(5): jmp 0xfffff9bc(%rip)
23a2(6): nop 0x0(%rax,%rax,1)
23a8(8): lea 0xa0(%rsp),%rax
23b0(4): cmp $0xffffffff,%r11
23b4(c): mov $0x0,0xa0(%rsp)
23c0(5): mov %rax,0x28(%rsp)
23c5(2): jnz 0x2f(%rip)
23c7(5): mov 0x10(%rsp),%rdi
23cc(5): mov %r8b,0x40(%rsp)
23d1(5): mov %r10b,0x38(%rsp)
23d6(5): mov %r9,0x30(%rsp)
23db(5): call 0xffffedd5(%rip)
23e0(6): movzx 0x40(%rsp),%r8d
23e6(6): movzx 0x38(%rsp),%r10d
23ec(3): mov %rax,%r11
23ef(5): mov 0x30(%rsp),%r9
23f4(8): lea 0x9c(%rsp),%rax
23fc(2): xor %ecx,%ecx
23fe(4): mov %bl,0x7e(%rsp)
2402(5): mov %r8b,0x7d(%rsp)
2407(3): mov %rcx,%rbx
240a(8): mov %r9,0x88(%rsp)
2412(5): mov %rax,0x38(%rsp)
2417(5): mov %r10b,0x7f(%rsp)
241c(8): mov %r15,0x80(%rsp)
2424(5): mov %r14,0x40(%rsp)
2429(5): mov %r13,0x70(%rsp)
242e(5): mov %r11,0x30(%rsp)
2433(5): mov 0x10(%rsp),%rax
2438(5): lea 0x0(%rbp,%rbx,1),%r14
243d(5): mov 0x30(%rsp),%rdx
2442(5): mov 0x28(%rsp),%rcx
2447(5): mov 0x38(%rsp),%rdi
244c(4): lea 0x0(%rax,%r14,1),%r13
2450(3): sub %r14,%rdx
2453(3): mov %r13,%rsi
2456(5): call 0x1afa(%rip)
245b(3): test %rax,%rax
245e(3): mov %rax,%r15
2461(2): jz 0x50(%rip)
2463(4): cmp $0xffffffff,%rax
2467(6): jz 0x61e(%rip)
246d(4): cmp $0xfffffffe,%rax
2471(6): jz 0x5a0(%rip)
2477(5): cmp $0x2,0x8(%rsp)
247c(3): setz %al
247f(4): and 0xf(%rsp),%al
2483(6): jnz 0x19d(%rip)
2489(7): mov 0x9c(%rsp),%edi
2490(5): call 0xffffeec0(%rip)
2495(5): mov 0x28(%rsp),%rdi
249a(2): test %eax,%eax
249c(5): mov $0x0,%eax
24a1(4): cmove %eax,%r12d
24a5(3): add %r15,%rbx
24a8(5): call 0xffffee98(%rip)
24ad(2): test %eax,%eax
24af(2): jz 0xffffff84(%rip)
24b1(3): mov %r12d,%edx
24b4(3): mov %rbx,%rdi
24b7(6): movzx 0x7d(%rsp),%r8d
24bd(3): xor $0x1,%edx
24c0(5): movzx 0x7e(%rsp),%ebx
24c5(6): movzx 0x7f(%rsp),%r10d
24cb(4): and 0xd(%rsp),%dl
24cf(8): mov 0x80(%rsp),%r15
24d7(5): mov 0x40(%rsp),%r14
24dc(5): mov 0x70(%rsp),%r13
24e1(5): mov 0x30(%rsp),%r11
24e6(4): cmp $0x1,%rdi
24ea(6): jbe 0x601(%rip)
24f0(3): mov %rdi,%rcx
24f3(2): xor %esi,%esi
24f5(6): movzx 0xf(%rsp),%r9d
24fb(3): add %rbp,%rcx
24fe(5): mov 0x10(%rsp),%rdi
2503(5): jmp 0xbb(%rip)
2508(8): nop 0x0(%rax,%rax,1)
2510(5): cmp $0x2,0x8(%rsp)
2515(3): setz %al
2518(3): test %r9b,%r9b
251b(6): jnz 0x4b5(%rip)
2521(3): mov %r8d,%esi
2524(3): xor $0x1,%esi
2527(3): and %sil,%al
252a(2): jz 0x31(%rip)
252c(3): cmp %r15,%r13
252f(2): jbe 0x7(%rip)
2531(5): mov $0x27,0x0(%r14,%r15,1)
2536(4): lea 0x1(%r15),%rsi
253a(3): cmp %rsi,%r13
253d(2): jbe 0x8(%rip)
253f(6): mov $0x24,0x1(%r14,%r15,1)
2545(4): lea 0x2(%r15),%rsi
2549(3): cmp %rsi,%r13
254c(2): jbe 0x8(%rip)
254e(6): mov $0x27,0x2(%r14,%r15,1)
2554(4): add $0x3,%r15
2558(3): mov %eax,%r8d
255b(3): cmp %r15,%r13
255e(2): jbe 0x7(%rip)
2560(5): mov $0x5c,0x0(%r14,%r15,1)
2565(4): lea 0x1(%r15),%rax
2569(3): cmp %rax,%r13
256c(2): jbe 0xf(%rip)
256e(2): mov %ebx,%eax
2570(3): shr $0x6,%al
2573(3): add $0x30,%eax
2576(5): mov %al,0x1(%r14,%r15,1)
257b(4): lea 0x2(%r15),%rax
257f(3): cmp %rax,%r13
2582(2): jbe 0x12(%rip)
2584(2): mov %ebx,%eax
2586(3): shr $0x3,%al
2589(3): and $0x7,%eax
258c(3): add $0x30,%eax
258f(5): mov %al,0x2(%r14,%r15,1)
2594(3): and $0x7,%ebx
2597(4): add $0x1,%rbp
259b(4): add $0x3,%r15
259f(3): add $0x30,%ebx
25a2(3): cmp %rcx,%rbp
25a5(6): jnb 0xfffff7eb(%rip)
25ab(2): mov %edx,%esi
25ad(3): cmp %r15,%r13
25b0(2): jbe 0x6(%rip)
25b2(4): mov %bl,0x0(%r14,%r15,1)
25b6(4): movzx 0x0(%rdi,%rbp,1),%ebx
25ba(4): add $0x1,%r15
25be(2): test %dl,%dl
25c0(6): jnz 0xffffff50(%rip)
25c6(2): mov %esi,%eax
25c8(3): xor $0x1,%eax
25cb(3): and %r8d,%eax
25ce(3): test %r10b,%r10b
25d1(2): jz 0x10(%rip)
25d3(3): cmp %r15,%r13
25d6(2): jbe 0x7(%rip)
25d8(5): mov $0x5c,0x0(%r14,%r15,1)
25dd(4): add $0x1,%r15
25e1(4): add $0x1,%rbp
25e5(3): cmp %rcx,%rbp
25e8(6): jnb 0xfffff784(%rip)
25ee(2): test %al,%al
25f0(6): jz 0x3fe(%rip)
25f6(3): cmp %r15,%r13
25f9(2): jbe 0x7(%rip)
25fb(5): mov $0x27,0x0(%r14,%r15,1)
2600(4): lea 0x1(%r15),%rax
2604(3): cmp %rax,%r13
2607(2): jbe 0x8(%rip)
2609(6): mov $0x27,0x1(%r14,%r15,1)
260f(4): add $0x2,%r15
2613(3): xor %r10d,%r10d
2616(3): xor %r8d,%r8d
2619(2): jmp 0xffffff94(%rip)
261b(5): nop 0x0(%rax,%rax,1)
2620(4): cmp $0x1,%r15
2624(6): jz 0xfffffe65(%rip)
262a(5): mov 0x10(%rsp),%rdi
262f(4): lea 0x0(%rdi,%r15,1),%rcx
2633(5): lea 0x1(%rdi,%r14,1),%rdx
2638(4): lea 0x0(%rcx,%r14,1),%r8
263c(2): jmp 0x11(%rip)
263e(2): nop 
2640(4): add $0x1,%rdx
2644(3): cmp %rdx,%r8
2647(6): jz 0xfffffe42(%rip)
264d(3): movzx (%rdx),%ecx
2650(3): sub $0x5b,%ecx
2653(3): cmp $0x21,%cl
2656(2): jnbe 0xffffffea(%rip)
2658(5): mov $0x1,%esi
265d(3): shl/sal %cl,%rsi
2660(3): mov %rsi,%rcx
2663(a): mov $0x8589934635,%rsi
266d(3): test %rsi,%rcx
2670(2): jz 0xffffffd0(%rip)
2672(5): mov 0x40(%rsp),%r14
2677(5): mov 0x70(%rsp),%r13
267c(5): mov 0x30(%rsp),%rbp
2681(8): mov $0x2,0x8(%rsp)
2689(5): cmp $0x0,0xd(%rsp)
268e(2): jz 0x12(%rip)
2690(2): test %al,%al
2692(5): mov $0x4,%eax
2697(5): cmove 0x8(%rsp),%eax
269c(4): mov %eax,0x8(%rsp)
26a0(4): sub $0x8,%rsp
26a4(3): mov %rbp,%rcx
26a7(3): mov %r13,%rsi
26aa(4): push 0x68(%rsp)
26ae(4): push 0x78(%rsp)
26b2(3): mov %r14,%rdi
26b5(2): push $0x0
26b7(8): mov 0x98(%rsp),%r9d
26bf(5): mov 0x28(%rsp),%r8d
26c4(5): mov 0x30(%rsp),%rdx
26c9(4): and $0xfd,%r9d
26cd(5): call 0xfffff433(%rip)
26d2(4): add $0x20,%rsp
26d6(3): mov %rax,%r15
26d9(8): mov 0xa8(%rsp),%rbx
26e1(9): xor $0x28,%rbx
26ea(3): mov %r15,%rax
26ed(6): jnz 0x606(%rip)
26f3(7): add $0xb8,%rsp
26fa(1): pop %rbx
26fb(1): pop %rbp
26fc(2): pop %r12
26fe(2): pop %r13
2700(2): pop %r14
2702(2): pop %r15
2704(1): ret near (%rsp)
2705(3): nop (%rax)
2708(3): mov %r11,%rbp
270b(5): jmp 0xffffff7e(%rip)
2710(3): cmp %r15,%r13
2713(2): jbe 0x7(%rip)
2715(5): mov $0x27,0x0(%r14,%r15,1)
271a(4): lea 0x1(%r15),%rax
271e(3): cmp %rax,%r13
2721(2): jbe 0x8(%rip)
2723(6): mov $0x5c,0x1(%r14,%r15,1)
2729(4): lea 0x2(%r15),%rax
272d(3): cmp %rax,%r13
2730(6): jbe 0x5f2(%rip)
2736(3): mov %r13,%rdx
2739(6): mov $0x27,0x2(%r14,%r15,1)
273f(5): mov 0x50(%rsp),%r13
2744(5): jmp 0xfffffbde(%rip)
2749(3): mov %r12d,%eax
274c(5): mov $0x30,%ebx
2751(3): xor %r12d,%r12d
2754(5): jmp 0xfffff605(%rip)
2759(6): mov $0x27,0x2(%r14,%r15,1)
275f(5): jmp 0xfffff9ca(%rip)
2764(2): test %ebx,%ebx
2766(6): jnz 0xfffff42d(%rip)
276c(5): mov $0x1,0xd(%rsp)
2771(3): test %r13,%r13
2774(6): jnz 0x596(%rip)
277a(7): lea 0x1ed4(%rip),%rax
2781(9): mov $0x0,0x50(%rsp)
278a(5): mov $0x1,0xe(%rsp)
278f(5): mov $0x0,0x7c(%rsp)
2794(3): xor %r12d,%r12d
2797(5): mov $0x0,0xf(%rsp)
279c(9): mov $0x1,0x18(%rsp)
27a5(5): mov %rax,0x48(%rsp)
27aa(6): mov $0x1,%r15d
27b0(8): mov $0x2,0x8(%rsp)
27b8(5): jmp 0xfffff41b(%rip)
27bd(3): nop (%rax)
27c0(2): test %ebx,%ebx
27c2(6): jnz 0x3fb(%rip)
27c8(3): test %r13,%r13
27cb(6): jz 0x22b(%rip)
27d1(4): mov $0x22,(%r14)
27d5(5): mov $0x1,0xe(%rsp)
27da(3): xor %r12d,%r12d
27dd(5): mov $0x0,0x7c(%rsp)
27e2(9): mov $0x0,0x50(%rsp)
27eb(7): lea 0x1e61(%rip),%rax
27f2(5): mov $0x0,0xf(%rsp)
27f7(5): mov $0x1,0xd(%rsp)
27fc(9): mov $0x1,0x18(%rsp)
2805(6): mov $0x1,%r15d
280b(5): mov %rax,0x48(%rsp)
2810(5): jmp 0xfffff3c3(%rip)
2815(7): lea 0x1e37(%rip),%rax
281c(5): mov $0x1,0xe(%rsp)
2821(5): mov $0x0,0x7c(%rsp)
2826(3): xor %r12d,%r12d
2829(9): mov $0x0,0x50(%rsp)
2832(5): mov $0x1,0xf(%rsp)
2837(5): mov $0x1,0xd(%rsp)
283c(9): mov $0x1,0x18(%rsp)
2845(3): xor %r15d,%r15d
2848(5): mov %rax,0x48(%rsp)
284d(8): mov $0x5,0x8(%rsp)
2855(5): jmp 0xfffff37e(%rip)
285a(5): mov $0x1,0xe(%rsp)
285f(5): mov $0x0,0x7c(%rsp)
2864(3): xor %r12d,%r12d
2867(9): mov $0x0,0x50(%rsp)
2870(5): mov $0x0,0xf(%rsp)
2875(3): xor %r15d,%r15d
2878(5): mov $0x1,0xd(%rsp)
287d(9): mov $0x0,0x18(%rsp)
2886(9): mov $0x0,0x48(%rsp)
288f(5): jmp 0xfffff344(%rip)
2894(5): cmp $0xa,0x8(%rsp)
2899(2): jz 0x58(%rip)
289b(7): lea 0x1db5(%rip),%rsi
28a2(2): xor %edi,%edi
28a4(5): mov $0x5,%edx
28a9(5): call 0xffffe8e7(%rip)
28ae(3): mov %rax,%rcx
28b1(5): mov %rax,0x68(%rsp)
28b6(7): lea 0x1d9a(%rip),%rax
28bd(3): cmp %rax,%rcx
28c0(6): jz 0x39e(%rip)
28c6(7): lea 0x1d88(%rip),%rsi
28cd(2): xor %edi,%edi
28cf(5): mov $0x5,%edx
28d4(5): call 0xffffe8bc(%rip)
28d9(3): mov %rax,%rcx
28dc(5): mov %rax,0x60(%rsp)
28e1(7): lea 0x1d6d(%rip),%rax
28e8(3): cmp %rax,%rcx
28eb(6): jz 0x389(%rip)
28f1(3): xor %r15d,%r15d
28f4(2): test %ebx,%ebx
28f6(6): jz 0x1c7(%rip)
28fc(2): test %ebx,%ebx
28fe(5): mov 0x60(%rsp),%rbx
2903(5): setnz 0xf(%rsp)
2908(3): xor %r12d,%r12d
290b(3): mov %rbx,%rdi
290e(5): call 0xffffe8a2(%rip)
2913(5): mov %rbx,0x48(%rsp)
2918(5): mov %rax,0x18(%rsp)
291d(5): mov $0x1,0xe(%rsp)
2922(5): mov $0x0,0x7c(%rsp)
2927(9): mov $0x0,0x50(%rsp)
2930(5): mov $0x1,0xd(%rsp)
2935(5): jmp 0xfffff29e(%rip)
293a(5): mov $0x1,0xe(%rsp)
293f(5): mov $0x0,0x7c(%rsp)
2944(3): xor %r12d,%r12d
2947(9): mov $0x0,0x50(%rsp)
2950(5): mov $0x0,0xf(%rsp)
2955(3): xor %r15d,%r15d
2958(5): mov $0x0,0xd(%rsp)
295d(9): mov $0x0,0x18(%rsp)
2966(9): mov $0x0,0x48(%rsp)
296f(5): jmp 0xfffff264(%rip)
2974(5): mov $0x1,0xe(%rsp)
2979(5): mov $0x0,0x7c(%rsp)
297e(3): xor %r12d,%r12d
2981(9): mov $0x0,0x50(%rsp)
298a(5): mov $0x1,0xf(%rsp)
298f(5): mov $0x1,0xd(%rsp)
2994(5): jmp 0xfffff21f(%rip)
2999(3): cmp %r15,%r13
299c(2): jbe 0x7(%rip)
299e(5): mov $0x30,0x0(%r14,%r15,1)
29a3(4): lea 0x2(%rcx),%rax
29a7(3): cmp %rax,%r13
29aa(2): jbe 0x8(%rip)
29ac(6): mov $0x30,0x2(%r14,%rcx,1)
29b2(3): mov %r12d,%eax
29b5(4): lea 0x3(%rcx),%r15
29b9(3): xor %r12d,%r12d
29bc(5): mov $0x30,%ebx
29c1(5): jmp 0xfffff367(%rip)
29c6(a): nop 0x0(%rax,%rax,1)
29d0(5): movzx 0xf(%rsp),%ebx
29d5(3): mov %r11,%rbp
29d8(4): mov %bl,0xd(%rsp)
29dc(5): jmp 0xfffffcad(%rip)
29e1(5): movzx 0xd(%rsp),%edx
29e6(3): xor %r12d,%r12d
29e9(5): jmp 0xfffffb07(%rip)
29ee(3): xor %r10d,%r10d
29f1(5): jmp 0xfffffbbc(%rip)
29f6(9): mov $0x0,0x50(%rsp)
29ff(5): mov $0x1,0xe(%rsp)
2a04(3): xor %r12d,%r12d
2a07(5): mov $0x0,0x7c(%rsp)
2a0c(5): jmp 0xfffffddf(%rip)
2a11(5): mov 0x30(%rsp),%r11
2a16(3): mov %r14,%rsi
2a19(3): mov %r13,%rcx
2a1c(3): mov %rbx,%rax
2a1f(3): mov %rbx,%rdi
2a22(6): movzx 0x7d(%rsp),%r8d
2a28(5): movzx 0x7e(%rsp),%ebx
2a2d(8): mov 0x88(%rsp),%r9
2a35(3): cmp %r11,%rsi
2a38(6): movzx 0x7f(%rsp),%r10d
2a3e(8): mov 0x80(%rsp),%r15
2a46(5): mov 0x40(%rsp),%r14
2a4b(5): mov 0x70(%rsp),%r13
2a50(2): jnb 0x28(%rip)
2a52(3): cmp $0x0,(%rcx)
2a55(2): jnz 0x12(%rip)
2a57(2): jmp 0x21(%rip)
2a59(7): nop 0x0(%rax)
2a60(5): cmp $0x0,0x0(%r9,%rax,1)
2a65(2): jz 0x10(%rip)
2a67(4): add $0x1,%rax
2a6b(5): lea 0x0(%rbp,%rax,1),%rdx
2a70(3): cmp %rdx,%r11
2a73(2): jnbe 0xffffffed(%rip)
2a75(3): mov %rax,%rdi
2a78(5): movzx 0xd(%rsp),%edx
2a7d(3): xor %r12d,%r12d
2a80(5): jmp 0xfffffa66(%rip)
2a85(3): mov %rbx,%rdi
2a88(6): movzx 0x7d(%rsp),%r8d
2a8e(5): movzx 0x7e(%rsp),%ebx
2a93(6): movzx 0x7f(%rsp),%r10d
2a99(8): mov 0x80(%rsp),%r15
2aa1(3): xor %r12d,%r12d
2aa4(5): mov 0x40(%rsp),%r14
2aa9(5): mov 0x70(%rsp),%r13
2aae(5): mov 0x30(%rsp),%r11
2ab3(5): movzx 0xd(%rsp),%edx
2ab8(5): jmp 0xfffffa2e(%rip)
2abd(5): mov 0x68(%rsp),%rdx
2ac2(3): movzx (%rdx),%eax
2ac5(2): test %al,%al
2ac7(6): jz 0xfffffe35(%rip)
2acd(3): nop (%rax)
2ad0(3): cmp %r15,%r13
2ad3(2): jbe 0x6(%rip)
2ad5(4): mov %al,0x0(%r14,%r15,1)
2ad9(4): add $0x1,%r15
2add(5): movzx 0x0(%rdx,%r15,1),%eax
2ae2(2): test %al,%al
2ae4(2): jnz 0xffffffec(%rip)
2ae6(5): jmp 0xfffffe16(%rip)
2aeb(2): mov %edx,%eax
2aed(5): jmp 0xfffff55a(%rip)
2af2(4): movzx 0x0(%rax,%rcx,1),%ebx
2af6(3): cmp $0x3e,%bl
2af9(6): jnbe 0xfffff877(%rip)
2aff(a): mov $0x8070630310989004800,%rax
2b09(4): bt %rbx,%rax
2b0d(6): jnb 0xfffff863(%rip)
2b13(5): cmp $0x0,0xf(%rsp)
2b18(6): jnz 0x1ea(%rip)
2b1e(3): cmp %r15,%r13
2b21(2): jbe 0x7(%rip)
2b23(5): mov $0x3f,0x0(%r14,%r15,1)
2b28(4): lea 0x1(%r15),%rax
2b2c(3): cmp %rax,%r13
2b2f(2): jbe 0x8(%rip)
2b31(6): mov $0x22,0x1(%r14,%r15,1)
2b37(4): lea 0x2(%r15),%rax
2b3b(3): cmp %rax,%r13
2b3e(2): jbe 0x8(%rip)
2b40(6): mov $0x22,0x2(%r14,%r15,1)
2b46(4): lea 0x3(%r15),%rax
2b4a(3): cmp %rax,%r13
2b4d(2): jbe 0x8(%rip)
2b4f(6): mov $0x3f,0x3(%r14,%r15,1)
2b55(4): add $0x4,%r15
2b59(2): xor %edx,%edx
2b5b(3): xor %r12d,%r12d
2b5e(2): xor %eax,%eax
2b60(3): mov %rcx,%rbp
2b63(5): jmp 0xfffff1c5(%rip)
2b68(2): test %ebx,%ebx
2b6a(6): jz 0x18e(%rip)
2b70(7): lea 0x1ade(%rip),%rax
2b77(5): mov $0x1,0xe(%rsp)
2b7c(5): mov $0x0,0x7c(%rsp)
2b81(3): xor %r12d,%r12d
2b84(9): mov $0x0,0x50(%rsp)
2b8d(5): mov $0x1,0xf(%rsp)
2b92(5): mov $0x0,0xd(%rsp)
2b97(9): mov $0x1,0x18(%rsp)
2ba0(3): xor %r15d,%r15d
2ba3(5): mov %rax,0x48(%rsp)
2ba8(5): jmp 0xfffff02b(%rip)
2bad(3): nop (%rax)
2bb0(3): mov %r11,%rbp
2bb3(5): movzx 0xf(%rsp),%eax
2bb8(5): jmp 0xfffffad1(%rip)
2bbd(7): lea 0x1a8f(%rip),%rax
2bc4(5): mov $0x1,0xe(%rsp)
2bc9(5): mov $0x0,0x7c(%rsp)
2bce(3): xor %r12d,%r12d
2bd1(9): mov $0x0,0x50(%rsp)
2bda(5): mov $0x1,0xf(%rsp)
2bdf(5): mov $0x1,0xd(%rsp)
2be4(9): mov $0x1,0x18(%rsp)
2bed(3): xor %r15d,%r15d
2bf0(5): mov %rax,0x48(%rsp)
2bf5(5): jmp 0xffffefde(%rip)
2bfa(2): mov %edx,%eax
2bfc(5): mov 0x48(%rsp),%rbx
2c01(3): test %rbx,%rbx
2c04(2): jz 0x2e(%rip)
2c06(2): test %al,%al
2c08(2): jz 0x2a(%rip)
2c0a(3): movzx (%rbx),%ecx
2c0d(3): mov %rbx,%rax
2c10(2): test %cl,%cl
2c12(2): jz 0x20(%rip)
2c14(3): mov %r15,%rdx
2c17(3): sub %r15,%rax
2c1a(3): cmp %rdx,%r13
2c1d(2): jbe 0x6(%rip)
2c1f(4): mov %cl,0x0(%r14,%rdx,1)
2c23(4): add $0x1,%rdx
2c27(4): movzx 0x0(%rax,%rdx,1),%ecx
2c2b(2): test %cl,%cl
2c2d(2): jnz 0xffffffed(%rip)
2c2f(3): mov %rdx,%r15
2c32(3): cmp %r15,%r13
2c35(6): jbe 0xfffffaa4(%rip)
2c3b(5): mov $0x0,0x0(%r14,%r15,1)
2c40(5): jmp 0xfffffa99(%rip)
2c45(5): cmp $0x2,0x8(%rsp)
2c4a(5): movzx 0xf(%rsp),%ebx
2c4f(3): mov %r11,%rbp
2c52(3): setz %al
2c55(4): mov %bl,0xd(%rsp)
2c59(5): jmp 0xfffffa30(%rip)
2c5e(4): mov 0x8(%rsp),%esi
2c62(3): mov %rcx,%rdi
2c65(5): call 0xffffedab(%rip)
2c6a(5): mov %rax,0x68(%rsp)
2c6f(5): jmp 0xfffffc57(%rip)
2c74(4): mov 0x8(%rsp),%esi
2c78(3): mov %rcx,%rdi
2c7b(5): call 0xffffed95(%rip)
2c80(5): mov %rax,0x60(%rsp)
2c85(5): jmp 0xfffffc6c(%rip)
2c8a(5): movzx 0xf(%rsp),%ebx
2c8f(3): mov %r11,%rbp
2c92(2): mov %edx,%eax
2c94(4): mov %bl,0xd(%rsp)
2c98(5): jmp 0xfffff9f1(%rip)
2c9d(4): sub $0x8,%rsp
2ca1(6): mov $0x5,%r8d
2ca7(3): mov %r11,%rcx
2caa(4): push 0x68(%rsp)
2cae(4): push 0x78(%rsp)
2cb2(3): mov %r14,%rdi
2cb5(4): push 0x38(%rsp)
2cb9(8): mov 0x98(%rsp),%r9d
2cc1(5): mov 0x30(%rsp),%rdx
2cc6(5): mov 0x70(%rsp),%rsi
2ccb(5): call 0xffffee35(%rip)
2cd0(4): add $0x20,%rsp
2cd4(3): mov %rax,%r15
2cd7(5): jmp 0xfffffa02(%rip)
2cdc(5): movzx 0x7c(%rsp),%eax
2ce1(5): jmp 0xffffff1b(%rip)
2ce6(8): mov $0x2,0x8(%rsp)
2cee(5): jmp 0xfffff99b(%rip)
2cf3(5): call 0xffffe4cd(%rip)
2cf8(5): mov $0x0,0xd(%rsp)
2cfd(5): jmp 0xfffffa74(%rip)
2d02(3): mov %r11,%rbp
2d05(5): jmp 0xfffff99b(%rip)
2d0a(5): mov $0x1,0xe(%rsp)
2d0f(2): xor %eax,%eax
2d11(3): xor %r12d,%r12d
2d14(9): mov $0x0,0x50(%rsp)
2d1d(5): jmp 0xfffff5a7(%rip)
2d22(3): mov %r13,%rdx
2d25(5): mov 0x50(%rsp),%r13
2d2a(5): jmp 0xfffff5f8(%rip)
2d2f(5): call 0xffffe3e1(%rip)

"quotearg_n_options" :
2d40(2): push %r15
2d42(2): push %r14
2d44(3): movsxd %edi,%r15
2d47(2): push %r13
2d49(2): push %r12
2d4b(3): mov %rdx,%r14
2d4e(1): push %rbp
2d4f(1): push %rbx
2d50(3): mov %rcx,%rbp
2d53(4): sub $0x28,%rsp
2d57(5): mov %rsi,0x8(%rsp)
2d5c(5): call 0xffffe3c4(%rip)
2d61(3): mov %rax,%r13
2d64(2): mov (%rax),%eax
2d66(3): test %r15d,%r15d
2d69(7): mov 0x2032f0(%rip),%rbx
2d70(4): mov %eax,0x18(%rsp)
2d74(6): js 0x16d(%rip)
2d7a(7): cmp %r15d,0x2032d7(%rip)
2d81(2): jnle 0x64(%rip)
2d83(7): cmp $0x7fffffff,%r15d
2d8a(6): jz 0x15c(%rip)
2d90(4): lea 0x1(%r15),%r12d
2d94(7): lea 0x2032d5(%rip),%rax
2d9b(3): movsxd %r12d,%rsi
2d9e(4): shl/sal $0x4,%rsi
2da2(3): cmp %rax,%rbx
2da5(6): jz 0x11b(%rip)
2dab(3): mov %rbx,%rdi
2dae(5): call 0xf72(%rip)
2db3(3): mov %rax,%rbx
2db6(7): mov %rax,0x2032a3(%rip)
2dbd(7): movsxd 0x203294(%rip),%rdi
2dc4(3): mov %r12d,%edx
2dc7(2): xor %esi,%esi
2dc9(2): sub %edi,%edx
2dcb(4): shl/sal $0x4,%rdi
2dcf(3): movsxd %edx,%rdx
2dd2(3): add %rbx,%rdi
2dd5(4): shl/sal $0x4,%rdx
2dd9(5): call 0xffffe427(%rip)
2dde(7): mov %r12d,0x203273(%rip)
2de5(3): mov 0x4(%rbp),%eax
2de8(4): shl/sal $0x4,%r15
2dec(4): sub $0x8,%rsp
2df0(3): add %r15,%rbx
2df3(4): lea 0x8(%rbp),%r15
2df7(4): mov 0x0(%rbp),%r8d
2dfb(3): mov (%rbx),%r11
2dfe(4): mov 0x8(%rbx),%r12
2e02(3): mov %r14,%rcx
2e05(3): or $0x1,%eax
2e08(4): mov %eax,0x24(%rsp)
2e0c(3): push 0x30(%rbp)
2e0f(3): mov %eax,%r9d
2e12(3): push 0x28(%rbp)
2e15(2): push %r15
2e17(3): mov %r11,%rsi
2e1a(5): mov 0x28(%rsp),%rdx
2e1f(3): mov %r12,%rdi
2e22(5): mov %r11,0x30(%rsp)
2e27(5): call 0xffffecd9(%rip)
2e2c(4): add $0x20,%rsp
2e30(5): mov 0x10(%rsp),%r11
2e35(3): cmp %rax,%r11
2e38(2): jnbe 0x69(%rip)
2e3a(4): lea 0x1(%rax),%rsi
2e3e(7): lea 0x20329b(%rip),%rax
2e45(3): cmp %rax,%r12
2e48(3): mov %rsi,(%rbx)
2e4b(2): jz 0x14(%rip)
2e4d(3): mov %r12,%rdi
2e50(5): mov %rsi,0x10(%rsp)
2e55(5): call 0xffffe2ab(%rip)
2e5a(5): mov 0x10(%rsp),%rsi
2e5f(3): mov %rsi,%rdi
2e62(5): mov %rsi,0x10(%rsp)
2e67(5): call 0xe59(%rip)
2e6c(4): sub $0x8,%rsp
2e70(4): mov %rax,0x8(%rbx)
2e74(4): mov 0x0(%rbp),%r8d
2e78(3): push 0x30(%rbp)
2e7b(3): push 0x28(%rbp)
2e7e(3): mov %r14,%rcx
2e81(2): push %r15
2e83(5): mov 0x3c(%rsp),%r9d
2e88(3): mov %rax,%rdi
2e8b(5): mov 0x28(%rsp),%rdx
2e90(5): mov 0x30(%rsp),%rsi
2e95(3): mov %rax,%r12
2e98(5): call 0xffffec68(%rip)
2e9d(4): add $0x20,%rsp
2ea1(4): mov 0x18(%rsp),%eax
2ea5(4): mov %eax,0x0(%r13)
2ea9(4): add $0x28,%rsp
2ead(3): mov %r12,%rax
2eb0(1): pop %rbx
2eb1(1): pop %rbp
2eb2(2): pop %r12
2eb4(2): pop %r13
2eb6(2): pop %r14
2eb8(2): pop %r15
2eba(1): ret near (%rsp)
2ebb(5): nop 0x0(%rax,%rax,1)
2ec0(2): xor %edi,%edi
2ec2(5): call 0xe5e(%rip)
2ec7(8): movdqa 0x2031a1(%rip),%xmm0
2ecf(3): mov %rax,%rbx
2ed2(7): mov %rax,0x203187(%rip)
2ed9(3): movups %xmm0,(%rax)
2edc(5): jmp 0xfffffee1(%rip)
2ee1(5): call 0xffffe22f(%rip)
2ee6(5): call 0x102a(%rip)

"clone_quoting_options" :
2ef0(2): push %r12
2ef2(1): push %rbp
2ef3(1): push %rbx
2ef4(3): mov %rdi,%rbx
2ef7(5): call 0xffffe229(%rip)
2efc(3): mov (%rax),%r12d
2eff(3): mov %rax,%rbp
2f02(7): lea 0x2032d7(%rip),%rax
2f09(3): test %rbx,%rbx
2f0c(5): mov $0x38,%esi
2f11(4): cmove %rax,%rbx
2f15(3): mov %rbx,%rdi
2f18(5): call 0xfa8(%rip)
2f1d(4): mov %r12d,0x0(%rbp)
2f21(1): pop %rbx
2f22(1): pop %rbp
2f23(2): pop %r12
2f25(1): ret near (%rsp)

"get_quoting_style" :
2f30(7): lea 0x2032a9(%rip),%rax
2f37(3): test %rdi,%rdi
2f3a(4): cmove %rax,%rdi
2f3e(2): mov (%rdi),%eax
2f40(1): ret near (%rsp)

"set_quoting_style" :
2f50(7): lea 0x203289(%rip),%rax
2f57(3): test %rdi,%rdi
2f5a(4): cmove %rax,%rdi
2f5e(2): mov %esi,(%rdi)
2f60(1): ret near (%rsp)

"set_char_quoting" :
2f70(7): lea 0x203269(%rip),%rax
2f77(3): test %rdi,%rdi
2f7a(2): mov %esi,%ecx
2f7c(4): cmove %rax,%rdi
2f80(2): mov %esi,%eax
2f82(3): and $0x1f,%ecx
2f85(3): shr $0x5,%al
2f88(3): movzx %al,%eax
2f8b(5): lea 0x8(%rdi,%rax,4),%rdi
2f90(2): mov (%rdi),%esi
2f92(2): mov %esi,%eax
2f94(2): shr %cl,%eax
2f96(2): xor %eax,%edx
2f98(3): and $0x1,%eax
2f9b(3): and $0x1,%edx
2f9e(2): shl/sal %cl,%edx
2fa0(2): xor %esi,%edx
2fa2(2): mov %edx,(%rdi)
2fa4(1): ret near (%rsp)

"set_quoting_flags" :
2fb0(7): lea 0x203229(%rip),%rax
2fb7(3): test %rdi,%rdi
2fba(4): cmove %rax,%rdi
2fbe(3): mov 0x4(%rdi),%eax
2fc1(3): mov %esi,0x4(%rdi)
2fc4(1): ret near (%rsp)

"set_custom_quoting" :
2fd0(7): lea 0x203209(%rip),%rax
2fd7(3): test %rdi,%rdi
2fda(4): cmove %rax,%rdi
2fde(3): test %rsi,%rsi
2fe1(6): mov $0xa,(%rdi)
2fe7(2): jz 0x10(%rip)
2fe9(3): test %rdx,%rdx
2fec(2): jz 0xb(%rip)
2fee(4): mov %rsi,0x28(%rdi)
2ff2(4): mov %rdx,0x30(%rdi)
2ff6(1): ret near (%rsp)
2ff7(4): sub $0x8,%rsp
2ffb(5): call 0xffffe115(%rip)

"quotearg_buffer" :
3000(2): push %r15
3002(2): push %r14
3004(7): lea 0x2031d5(%rip),%rax
300b(2): push %r13
300d(2): push %r12
300f(3): mov %rdi,%r13
3012(1): push %rbp
3013(1): push %rbx
3014(3): mov %r8,%rbx
3017(3): mov %rsi,%r14
301a(3): mov %rdx,%r15
301d(4): sub $0x18,%rsp
3021(3): test %r8,%r8
3024(4): cmove %rax,%rbx
3028(5): mov %rcx,0x8(%rsp)
302d(5): call 0xffffe0f3(%rip)
3032(3): mov (%rax),%r12d
3035(3): mov %rax,%rbp
3038(4): lea 0x8(%rbx),%rax
303c(4): sub $0x8,%rsp
3040(4): mov 0x4(%rbx),%r9d
3044(3): push 0x30(%rbx)
3047(3): mov (%rbx),%r8d
304a(3): push 0x28(%rbx)
304d(3): mov %r15,%rdx
3050(1): push %rax
3051(5): mov 0x28(%rsp),%rcx
3056(3): mov %r14,%rsi
3059(3): mov %r13,%rdi
305c(5): call 0xffffeaa4(%rip)
3061(4): mov %r12d,0x0(%rbp)
3065(4): add $0x38,%rsp
3069(1): pop %rbx
306a(1): pop %rbp
306b(2): pop %r12
306d(2): pop %r13
306f(2): pop %r14
3071(2): pop %r15
3073(1): ret near (%rsp)

"quotearg_alloc_mem" :
3080(2): push %r15
3082(2): push %r14
3084(7): lea 0x203155(%rip),%rax
308b(2): push %r13
308d(2): push %r12
308f(3): mov %rdx,%r12
3092(1): push %rbp
3093(1): push %rbx
3094(3): mov %rcx,%rbx
3097(3): mov %rdi,%r14
309a(3): mov %rsi,%r15
309d(4): sub $0x38,%rsp
30a1(3): test %rcx,%rcx
30a4(4): cmove %rax,%rbx
30a8(2): xor %ebp,%ebp
30aa(5): call 0xffffe076(%rip)
30af(3): test %r12,%r12
30b2(3): mov %rax,%r13
30b5(2): mov (%rax),%eax
30b7(4): setz %bpl
30bb(3): or 0x4(%rbx),%ebp
30be(4): lea 0x8(%rbx),%r10
30c2(4): sub $0x8,%rsp
30c6(3): mov (%rbx),%r8d
30c9(3): mov %r15,%rcx
30cc(4): mov %eax,0x14(%rsp)
30d0(3): push 0x30(%rbx)
30d3(3): mov %r14,%rdx
30d6(3): push 0x28(%rbx)
30d9(2): push %r10
30db(2): xor %esi,%esi
30dd(3): mov %ebp,%r9d
30e0(2): xor %edi,%edi
30e2(5): mov %r10,0x40(%rsp)
30e7(5): call 0xffffea19(%rip)
30ec(4): lea 0x1(%rax),%rsi
30f0(5): mov %rax,0x48(%rsp)
30f5(4): add $0x20,%rsp
30f9(3): mov %rsi,%rdi
30fc(5): mov %rsi,0x18(%rsp)
3101(5): call 0xbbf(%rip)
3106(5): mov %rax,0x10(%rsp)
310b(4): sub $0x8,%rsp
310f(3): push 0x30(%rbx)
3112(3): push 0x28(%rbx)
3115(5): mov 0x38(%rsp),%r10
311a(3): mov %ebp,%r9d
311d(3): mov (%rbx),%r8d
3120(3): mov %r15,%rcx
3123(3): mov %r14,%rdx
3126(3): mov %rax,%rdi
3129(2): push %r10
312b(5): mov 0x38(%rsp),%rsi
3130(5): call 0xffffe9d0(%rip)
3135(4): mov 0x2c(%rsp),%eax
3139(4): add $0x20,%rsp
313d(3): test %r12,%r12
3140(4): mov %eax,0x0(%r13)
3144(2): jz 0xb(%rip)
3146(5): mov 0x28(%rsp),%r11
314b(4): mov %r11,(%r12)
314f(5): mov 0x10(%rsp),%rax
3154(4): add $0x38,%rsp
3158(1): pop %rbx
3159(1): pop %rbp
315a(2): pop %r12
315c(2): pop %r13
315e(2): pop %r14
3160(2): pop %r15
3162(1): ret near (%rsp)

"quotearg_alloc" :
3170(3): mov %rdx,%rcx
3173(2): xor %edx,%edx
3175(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3180(6): mov 0x202ed2(%rip),%eax
3186(2): push %r12
3188(7): mov 0x202ed1(%rip),%r12
318f(1): push %rbp
3190(1): push %rbx
3191(3): cmp $0x1,%eax
3194(2): jle 0x2d(%rip)
3196(3): sub $0x2,%eax
3199(5): lea 0x18(%r12),%rbx
319e(4): shl/sal $0x4,%rax
31a2(5): lea 0x28(%r12,%rax,1),%rbp
31a7(9): nop 0x0(%rax,%rax,1)
31b0(3): mov (%rbx),%rdi
31b3(4): add $0x10,%rbx
31b7(5): call 0xffffdf49(%rip)
31bc(3): cmp %rbp,%rbx
31bf(2): jnz 0xfffffff1(%rip)
31c1(5): mov 0x8(%r12),%rdi
31c6(7): lea 0x202f13(%rip),%rbx
31cd(3): cmp %rbx,%rdi
31d0(2): jz 0x19(%rip)
31d2(5): call 0xffffdf2e(%rip)
31d7(b): mov $0x100,0x202e8e(%rip)
31e2(7): mov %rbx,0x202e8f(%rip)
31e9(7): lea 0x202e80(%rip),%rbx
31f0(3): cmp %rbx,%r12
31f3(2): jz 0x11(%rip)
31f5(3): mov %r12,%rdi
31f8(5): call 0xffffdf08(%rip)
31fd(7): mov %rbx,0x202e5c(%rip)
3204(1): pop %rbx
3205(a): mov $0x1,0x202e49(%rip)
320f(1): pop %rbp
3210(2): pop %r12
3212(1): ret near (%rsp)

"quotearg_n" :
3220(7): lea 0x202fb9(%rip),%rcx
3227(7): mov $0xffffffff,%rdx
322e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3240(7): lea 0x202f99(%rip),%rcx
3247(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3250(7): lea 0x202f89(%rip),%rcx
3257(3): mov %rdi,%rsi
325a(7): mov $0xffffffff,%rdx
3261(2): xor %edi,%edi
3263(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3270(7): lea 0x202f69(%rip),%rcx
3277(3): mov %rsi,%rdx
327a(3): mov %rdi,%rsi
327d(2): xor %edi,%edi
327f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3290(4): sub $0x48,%rsp
3294(3): mov %rdx,%rax
3297(9): mov $0x28,%rdx
32a0(5): mov %rdx,0x38(%rsp)
32a5(2): xor %edx,%edx
32a7(3): cmp $0xa,%esi
32aa(2): jz 0x6a(%rip)
32ac(3): mov %esi,(%rsp)
32af(3): mov %rsp,%rcx
32b2(7): mov $0xffffffff,%rdx
32b9(3): mov %rax,%rsi
32bc(9): mov $0x0,0x4(%rsp)
32c5(9): mov $0x0,0xc(%rsp)
32ce(9): mov $0x0,0x14(%rsp)
32d7(9): mov $0x0,0x1c(%rsp)
32e0(9): mov $0x0,0x24(%rsp)
32e9(9): mov $0x0,0x2c(%rsp)
32f2(8): mov $0x0,0x34(%rsp)
32fa(5): call 0xfffffa46(%rip)
32ff(5): mov 0x38(%rsp),%rcx
3304(9): xor $0x28,%rcx
330d(2): jnz 0xc(%rip)
330f(4): add $0x48,%rsp
3313(1): ret near (%rsp)
3314(5): call 0xffffddfc(%rip)
3319(5): call 0xffffdea7(%rip)

"quotearg_n_style_mem" :
3320(4): sub $0x48,%rsp
3324(3): mov %rdx,%rax
3327(3): mov %rcx,%rdx
332a(9): mov $0x28,%rcx
3333(5): mov %rcx,0x38(%rsp)
3338(2): xor %ecx,%ecx
333a(3): cmp $0xa,%esi
333d(2): jz 0x63(%rip)
333f(3): mov %esi,(%rsp)
3342(3): mov %rsp,%rcx
3345(3): mov %rax,%rsi
3348(9): mov $0x0,0x4(%rsp)
3351(9): mov $0x0,0xc(%rsp)
335a(9): mov $0x0,0x14(%rsp)
3363(9): mov $0x0,0x1c(%rsp)
336c(9): mov $0x0,0x24(%rsp)
3375(9): mov $0x0,0x2c(%rsp)
337e(8): mov $0x0,0x34(%rsp)
3386(5): call 0xfffff9ba(%rip)
338b(5): mov 0x38(%rsp),%rdx
3390(9): xor $0x28,%rdx
3399(2): jnz 0xc(%rip)
339b(4): add $0x48,%rsp
339f(1): ret near (%rsp)
33a0(5): call 0xffffdd70(%rip)
33a5(5): call 0xffffde1b(%rip)

"quotearg_style" :
33b0(3): mov %rsi,%rdx
33b3(2): mov %edi,%esi
33b5(2): xor %edi,%edi
33b7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
33c0(3): mov %rdx,%rcx
33c3(3): mov %rsi,%rdx
33c6(2): mov %edi,%esi
33c8(2): xor %edi,%edi
33ca(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
33d0(4): sub $0x48,%rsp
33d4(2): mov %edx,%ecx
33d6(9): mov $0x28,%rax
33df(5): mov %rax,0x38(%rsp)
33e4(2): xor %eax,%eax
33e6(7): mov 0x202e23(%rip),%rax
33ed(3): mov %rsp,%r8
33f0(3): and $0x1f,%ecx
33f3(8): movdqa 0x202de5(%rip),%xmm0
33fb(5): mov %rax,0x30(%rsp)
3400(2): mov %edx,%eax
3402(4): movaps %xmm0,(%rsp)
3406(3): shr $0x5,%al
3409(3): movzx %al,%eax
340c(5): lea 0x8(%r8,%rax,4),%r9
3411(8): movdqa 0x202dd7(%rip),%xmm0
3419(5): movaps %xmm0,0x10(%rsp)
341e(8): movdqa 0x202dda(%rip),%xmm0
3426(5): movaps %xmm0,0x20(%rsp)
342b(3): mov (%r9),%edx
342e(2): mov %edx,%eax
3430(2): shr %cl,%eax
3432(2): not %eax
3434(3): and $0x1,%eax
3437(2): shl/sal %cl,%eax
3439(3): mov %r8,%rcx
343c(2): xor %edx,%eax
343e(3): mov %rsi,%rdx
3441(3): mov %rdi,%rsi
3444(3): mov %eax,(%r9)
3447(2): xor %edi,%edi
3449(5): call 0xfffff8f7(%rip)
344e(5): mov 0x38(%rsp),%rsi
3453(9): xor $0x28,%rsi
345c(2): jnz 0x7(%rip)
345e(4): add $0x48,%rsp
3462(1): ret near (%rsp)
3463(5): call 0xffffdd5d(%rip)

"quotearg_char" :
3470(4): movsx %sil,%edx
3474(7): mov $0xffffffff,%rsi
347b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3480(5): mov $0x3a,%edx
3485(7): mov $0xffffffff,%rsi
348c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
34a0(5): mov $0x3a,%edx
34a5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
34b0(4): sub $0x48,%rsp
34b4(3): mov %rdx,%rax
34b7(9): mov $0x28,%rdx
34c0(5): mov %rdx,0x38(%rsp)
34c5(2): xor %edx,%edx
34c7(3): cmp $0xa,%esi
34ca(2): jz 0x6a(%rip)
34cc(3): mov %esi,(%rsp)
34cf(3): mov %rsp,%rcx
34d2(7): mov $0xffffffff,%rdx
34d9(3): mov %rax,%rsi
34dc(9): mov $0x0,0x4(%rsp)
34e5(9): mov $0x4000000,0xc(%rsp)
34ee(9): mov $0x0,0x14(%rsp)
34f7(9): mov $0x0,0x1c(%rsp)
3500(9): mov $0x0,0x24(%rsp)
3509(9): mov $0x0,0x2c(%rsp)
3512(8): mov $0x0,0x34(%rsp)
351a(5): call 0xfffff826(%rip)
351f(5): mov 0x38(%rsp),%rcx
3524(9): xor $0x28,%rcx
352d(2): jnz 0xc(%rip)
352f(4): add $0x48,%rsp
3533(1): ret near (%rsp)
3534(5): call 0xffffdbdc(%rip)
3539(5): call 0xffffdc87(%rip)

"quotearg_n_custom_mem" :
3540(4): sub $0x48,%rsp
3544(3): mov %rcx,%r9
3547(7): mov 0x202cc2(%rip),%rcx
354e(8): movdqa 0x202c8a(%rip),%xmm0
3556(9): mov $0x28,%rax
355f(5): mov %rax,0x38(%rsp)
3564(2): xor %eax,%eax
3566(4): movaps %xmm0,(%rsp)
356a(3): test %rsi,%rsi
356d(5): mov %rcx,0x30(%rsp)
3572(7): mov $0xa,(%rsp)
3579(8): movdqa 0x202c6f(%rip),%xmm0
3581(5): movaps %xmm0,0x10(%rsp)
3586(8): movdqa 0x202c72(%rip),%xmm0
358e(5): movaps %xmm0,0x20(%rsp)
3593(2): jz 0x34(%rip)
3595(3): test %rdx,%rdx
3598(2): jz 0x2f(%rip)
359a(5): mov %rsi,0x28(%rsp)
359f(5): mov %rdx,0x30(%rsp)
35a4(3): mov %rsp,%rcx
35a7(3): mov %r8,%rdx
35aa(3): mov %r9,%rsi
35ad(5): call 0xfffff793(%rip)
35b2(5): mov 0x38(%rsp),%rdi
35b7(9): xor $0x28,%rdi
35c0(2): jnz 0xc(%rip)
35c2(4): add $0x48,%rsp
35c6(1): ret near (%rsp)
35c7(5): call 0xffffdb49(%rip)
35cc(5): call 0xffffdbf4(%rip)

"quotearg_n_custom" :
35e0(7): mov $0xffffffff,%r8
35e7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
35f0(3): mov %rdx,%rcx
35f3(7): mov $0xffffffff,%r8
35fa(3): mov %rsi,%rdx
35fd(3): mov %rdi,%rsi
3600(2): xor %edi,%edi
3602(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3610(3): mov %rcx,%r8
3613(3): mov %rdx,%rcx
3616(3): mov %rsi,%rdx
3619(3): mov %rdi,%rsi
361c(2): xor %edi,%edi
361e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3630(7): lea 0x2029e9(%rip),%rcx
3637(5): jmp 0xfffff709(%rip)

"quote_mem" :
3640(7): lea 0x2029d9(%rip),%rcx
3647(3): mov %rsi,%rdx
364a(3): mov %rdi,%rsi
364d(2): xor %edi,%edi
364f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3660(7): lea 0x2029b9(%rip),%rcx
3667(7): mov $0xffffffff,%rdx
366e(5): jmp 0xfffff6d2(%rip)

"quote" :
3680(7): lea 0x202999(%rip),%rcx
3687(3): mov %rdi,%rsi
368a(7): mov $0xffffffff,%rdx
3691(2): xor %edi,%edi
3693(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
36a0(2): push %r15
36a2(2): push %r14
36a4(2): push %r13
36a6(2): push %r12
36a8(3): mov %r9,%r12
36ab(1): push %rbp
36ac(1): push %rbx
36ad(3): mov %rdi,%rbp
36b0(3): mov %r8,%rbx
36b3(4): sub $0x28,%rsp
36b7(3): test %rsi,%rsi
36ba(6): jz 0x11e(%rip)
36c0(3): mov %rdx,%r8
36c3(7): lea 0x145e(%rip),%rdx
36ca(3): mov %rcx,%r9
36cd(2): xor %eax,%eax
36cf(3): mov %rsi,%rcx
36d2(5): mov $0x1,%esi
36d7(5): call 0xffffdc59(%rip)
36dc(7): lea 0x1458(%rip),%rsi
36e3(2): xor %edi,%edi
36e5(5): mov $0x5,%edx
36ea(5): call 0xffffdaa6(%rip)
36ef(7): lea 0x176a(%rip),%rdx
36f6(3): mov %rax,%rcx
36f9(6): mov $0x7e3,%r8d
36ff(5): mov $0x1,%esi
3704(3): mov %rbp,%rdi
3707(2): xor %eax,%eax
3709(5): call 0xffffdc27(%rip)
370e(7): lea 0x14b3(%rip),%rsi
3715(2): xor %edi,%edi
3717(5): mov $0x5,%edx
371c(5): call 0xffffda74(%rip)
3721(3): mov %rbp,%rsi
3724(3): mov %rax,%rdi
3727(5): call 0xffffdaf9(%rip)
372c(4): cmp $0x9,%r12
3730(6): jnbe 0x340(%rip)
3736(7): lea 0x16eb(%rip),%rdx
373d(4): movsxd 0x0(%rdx,%r12,4),%rax
3741(3): add %rdx,%rax
3744(2): jmp %rax
3746(a): nop 0x0(%rax,%rax,1)
3750(4): mov 0x38(%rbx),%r9
3754(4): mov 0x10(%rbx),%rax
3758(7): lea 0x15d9(%rip),%rsi
375f(4): mov 0x8(%rbx),%r8
3763(5): mov $0x5,%edx
3768(2): xor %edi,%edi
376a(4): mov 0x30(%rbx),%r13
376e(4): mov 0x28(%rbx),%r12
3772(5): mov %r9,0x10(%rsp)
3777(4): mov 0x20(%rbx),%r15
377b(4): mov 0x18(%rbx),%r14
377f(4): mov %rax,(%rsp)
3783(5): mov %r8,0x8(%rsp)
3788(3): mov (%rbx),%rbx
378b(5): call 0xffffda05(%rip)
3790(4): sub $0x8,%rsp
3794(5): mov 0x18(%rsp),%r9
3799(3): mov %rax,%rdx
379c(3): mov %rbx,%rcx
379f(5): mov $0x1,%esi
37a4(3): mov %rbp,%rdi
37a7(2): xor %eax,%eax
37a9(2): push %r9
37ab(2): push %r13
37ad(2): push %r12
37af(2): push %r15
37b1(2): push %r14
37b3(5): mov 0x30(%rsp),%r9
37b8(5): mov 0x38(%rsp),%r8
37bd(5): call 0xffffdb73(%rip)
37c2(4): add $0x30,%rsp
37c6(4): add $0x28,%rsp
37ca(1): pop %rbx
37cb(1): pop %rbp
37cc(2): pop %r12
37ce(2): pop %r13
37d0(2): pop %r14
37d2(2): pop %r15
37d4(1): ret near (%rsp)
37d5(3): nop (%rax)
37d8(3): mov %rcx,%r8
37db(3): mov %rdx,%rcx
37de(7): lea 0x134f(%rip),%rdx
37e5(5): mov $0x1,%esi
37ea(2): xor %eax,%eax
37ec(5): call 0xffffdb44(%rip)
37f1(5): jmp 0xfffffeeb(%rip)
37f6(a): nop 0x0(%rax,%rax,1)
3800(4): mov 0x40(%rbx),%r10
3804(4): mov 0x38(%rbx),%r9
3808(7): lea 0x1559(%rip),%rsi
380f(4): mov 0x10(%rbx),%rax
3813(4): mov 0x8(%rbx),%r8
3817(5): mov $0x5,%edx
381c(4): mov 0x30(%rbx),%r13
3820(4): mov 0x28(%rbx),%r12
3824(4): mov 0x20(%rbx),%r15
3828(4): mov 0x18(%rbx),%r14
382c(3): mov (%rbx),%rbx
382f(5): mov %r10,0x18(%rsp)
3834(5): mov %r9,0x10(%rsp)
3839(4): mov %rax,(%rsp)
383d(5): mov %r8,0x8(%rsp)
3842(2): xor %edi,%edi
3844(5): call 0xffffd94c(%rip)
3849(5): mov 0x18(%rsp),%r10
384e(2): push %r10
3850(5): jmp 0xffffff44(%rip)
3855(3): nop (%rax)
3858(3): mov (%rbx),%rbx
385b(7): lea 0x12dd(%rip),%rsi
3862(5): mov $0x5,%edx
3867(2): xor %edi,%edi
3869(5): call 0xffffd927(%rip)
386e(4): add $0x28,%rsp
3872(3): mov %rbx,%rcx
3875(3): mov %rbp,%rdi
3878(1): pop %rbx
3879(1): pop %rbp
387a(2): pop %r12
387c(2): pop %r13
387e(2): pop %r14
3880(2): pop %r15
3882(3): mov %rax,%rdx
3885(5): mov $0x1,%esi
388a(2): xor %eax,%eax
388c(5): jmp 0xffffdaa4(%rip)
3891(7): nop 0x0(%rax)
3898(4): mov 0x8(%rbx),%r12
389c(7): lea 0x12ac(%rip),%rsi
38a3(3): mov (%rbx),%rbx
38a6(5): mov $0x5,%edx
38ab(2): xor %edi,%edi
38ad(5): call 0xffffd8e3(%rip)
38b2(4): add $0x28,%rsp
38b6(3): mov %r12,%r8
38b9(3): mov %rbx,%rcx
38bc(3): mov %rbp,%rdi
38bf(3): mov %rax,%rdx
38c2(5): mov $0x1,%esi
38c7(1): pop %rbx
38c8(1): pop %rbp
38c9(2): pop %r12
38cb(2): pop %r13
38cd(2): pop %r14
38cf(2): pop %r15
38d1(2): xor %eax,%eax
38d3(5): jmp 0xffffda5d(%rip)
38d8(8): nop 0x0(%rax,%rax,1)
38e0(4): mov 0x10(%rbx),%r13
38e4(4): mov 0x8(%rbx),%r12
38e8(7): lea 0x1277(%rip),%rsi
38ef(3): mov (%rbx),%rbx
38f2(5): mov $0x5,%edx
38f7(2): xor %edi,%edi
38f9(5): call 0xffffd897(%rip)
38fe(4): add $0x28,%rsp
3902(3): mov %r13,%r9
3905(3): mov %r12,%r8
3908(3): mov %rbx,%rcx
390b(3): mov %rbp,%rdi
390e(3): mov %rax,%rdx
3911(1): pop %rbx
3912(1): pop %rbp
3913(2): pop %r12
3915(2): pop %r13
3917(2): pop %r14
3919(2): pop %r15
391b(5): mov $0x1,%esi
3920(2): xor %eax,%eax
3922(5): jmp 0xffffda0e(%rip)
3927(9): nop 0x0(%rax,%rax,1)
3930(7): lea 0x1361(%rip),%rsi
3937(5): mov $0x5,%edx
393c(2): xor %edi,%edi
393e(4): mov 0x18(%rbx),%r14
3942(4): mov 0x10(%rbx),%r13
3946(4): mov 0x8(%rbx),%r12
394a(3): mov (%rbx),%rbx
394d(5): call 0xffffd843(%rip)
3952(4): sub $0x8,%rsp
3956(2): push %r14
3958(3): mov %rax,%rdx
395b(3): mov %r13,%r9
395e(3): mov %r12,%r8
3961(3): mov %rbx,%rcx
3964(3): mov %rbp,%rdi
3967(5): mov $0x1,%esi
396c(2): xor %eax,%eax
396e(5): call 0xffffd9c2(%rip)
3973(1): pop %rax
3974(1): pop %rdx
3975(4): add $0x28,%rsp
3979(1): pop %rbx
397a(1): pop %rbp
397b(2): pop %r12
397d(2): pop %r13
397f(2): pop %r14
3981(2): pop %r15
3983(1): ret near (%rsp)
3984(4): nop 0x0(%rax)
3988(4): mov 0x20(%rbx),%r15
398c(7): lea 0x1325(%rip),%rsi
3993(5): mov $0x5,%edx
3998(2): xor %edi,%edi
399a(4): mov 0x18(%rbx),%r14
399e(4): mov 0x10(%rbx),%r13
39a2(4): mov 0x8(%rbx),%r12
39a6(3): mov (%rbx),%rbx
39a9(5): call 0xffffd7e7(%rip)
39ae(2): push %r15
39b0(2): jmp 0xffffffa6(%rip)
39b2(6): nop 0x0(%rax,%rax,1)
39b8(4): mov 0x8(%rbx),%r8
39bc(4): mov 0x28(%rbx),%r12
39c0(7): lea 0x1319(%rip),%rsi
39c7(4): mov 0x20(%rbx),%r15
39cb(4): mov 0x18(%rbx),%r14
39cf(5): mov $0x5,%edx
39d4(4): mov 0x10(%rbx),%r13
39d8(2): xor %edi,%edi
39da(3): mov (%rbx),%rbx
39dd(4): mov %r8,(%rsp)
39e1(5): call 0xffffd7af(%rip)
39e6(4): sub $0x8,%rsp
39ea(3): mov %r13,%r9
39ed(2): push %r12
39ef(2): push %r15
39f1(2): push %r14
39f3(5): mov 0x20(%rsp),%r8
39f8(3): mov %rbx,%rcx
39fb(3): mov %rax,%rdx
39fe(3): mov %rbp,%rdi
3a01(5): mov $0x1,%esi
3a06(2): xor %eax,%eax
3a08(5): call 0xffffd928(%rip)
3a0d(4): add $0x20,%rsp
3a11(4): add $0x28,%rsp
3a15(1): pop %rbx
3a16(1): pop %rbp
3a17(2): pop %r12
3a19(2): pop %r13
3a1b(2): pop %r14
3a1d(2): pop %r15
3a1f(1): ret near (%rsp)
3a20(4): mov 0x10(%rbx),%r9
3a24(4): mov 0x30(%rbx),%r13
3a28(7): lea 0x12d9(%rip),%rsi
3a2f(4): mov 0x28(%rbx),%r12
3a33(4): mov 0x20(%rbx),%r15
3a37(5): mov $0x5,%edx
3a3c(4): mov 0x18(%rbx),%r14
3a40(4): mov 0x8(%rbx),%r8
3a44(2): xor %edi,%edi
3a46(5): mov %r9,0x8(%rsp)
3a4b(3): mov (%rbx),%rbx
3a4e(4): mov %r8,(%rsp)
3a52(5): call 0xffffd73e(%rip)
3a57(2): push %r13
3a59(2): push %r12
3a5b(2): push %r15
3a5d(2): push %r14
3a5f(5): mov 0x28(%rsp),%r9
3a64(2): jmp 0xffffff8f(%rip)
3a66(a): nop 0x0(%rax,%rax,1)
3a70(4): mov 0x40(%rbx),%r10
3a74(4): mov 0x38(%rbx),%r9
3a78(5): mov $0x5,%edx
3a7d(4): mov 0x10(%rbx),%rax
3a81(4): mov 0x8(%rbx),%r8
3a85(7): lea 0x1314(%rip),%rsi
3a8c(4): mov 0x30(%rbx),%r13
3a90(4): mov 0x28(%rbx),%r12
3a94(4): mov 0x20(%rbx),%r15
3a98(4): mov 0x18(%rbx),%r14
3a9c(5): mov %r10,0x18(%rsp)
3aa1(5): mov %r9,0x10(%rsp)
3aa6(4): mov %rax,(%rsp)
3aaa(5): mov %r8,0x8(%rsp)
3aaf(3): mov (%rbx),%rbx
3ab2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
3ac0(3): xor %r9d,%r9d
3ac3(4): cmp $0x0,(%r8)
3ac7(2): jz 0x14(%rip)
3ac9(7): nop 0x0(%rax)
3ad0(4): add $0x1,%r9
3ad4(5): cmp $0x0,0x0(%r8,%r9,8)
3ad9(2): jnz 0xfffffff7(%rip)
3adb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
3ae0(4): sub $0x68,%rsp
3ae4(3): mov %r8,%r10
3ae7(3): xor %r9d,%r9d
3aea(9): mov $0x28,%rax
3af3(5): mov %rax,0x58(%rsp)
3af8(2): xor %eax,%eax
3afa(3): mov %rsp,%r8
3afd(3): nop (%rax)
3b00(3): mov (%r10),%eax
3b03(3): cmp $0x2f,%eax
3b06(2): jnbe 0x44(%rip)
3b08(3): mov %eax,%r11d
3b0b(4): add 0x10(%r10),%r11
3b0f(3): add $0x8,%eax
3b12(3): mov %eax,(%r10)
3b15(3): mov (%r11),%rax
3b18(3): test %rax,%rax
3b1b(4): mov %rax,0x0(%r8,%r9,8)
3b1f(2): jz 0xc(%rip)
3b21(4): add $0x1,%r9
3b25(4): cmp $0xa,%r9
3b29(2): jnz 0xffffffd7(%rip)
3b2b(5): call 0xfffffb75(%rip)
3b30(5): mov 0x58(%rsp),%rax
3b35(9): xor $0x28,%rax
3b3e(2): jnz 0x7(%rip)
3b40(4): add $0x68,%rsp
3b44(1): ret near (%rsp)
3b45(5): call 0xffffd67b(%rip)
3b4a(4): mov 0x8(%r10),%r11
3b4e(4): lea 0x8(%r11),%rax
3b52(4): mov %rax,0x8(%r10)
3b56(2): jmp 0xffffffbf(%rip)

"version_etc" :
3b60(1): push %rbp
3b61(1): push %rbx
3b62(6): mov $0x20,%r10d
3b68(3): xor %r11d,%r11d
3b6b(7): sub $0xb8,%rsp
3b72(9): mov $0x28,%rax
3b7b(5): mov %rax,0x78(%rsp)
3b80(2): xor %eax,%eax
3b82(8): lea 0xd0(%rsp),%rax
3b8a(8): mov %r8,0xa0(%rsp)
3b92(8): lea 0xd0(%rsp),%rbx
3b9a(5): lea 0x20(%rsp),%r8
3b9f(8): mov %r9,0xa8(%rsp)
3ba7(8): mov $0x20,0x8(%rsp)
3baf(5): mov %rax,0x10(%rsp)
3bb4(8): lea 0x80(%rsp),%rax
3bbc(3): xor %r9d,%r9d
3bbf(5): mov %rax,0x18(%rsp)
3bc4(3): mov %rax,%rbp
3bc7(9): nop 0x0(%rax,%rax,1)
3bd0(4): cmp $0x2f,%r10d
3bd4(2): jnbe 0x58(%rip)
3bd6(3): mov %r10d,%eax
3bd9(6): mov $0x1,%r11d
3bdf(4): add $0x8,%r10d
3be3(3): add %rbp,%rax
3be6(3): mov (%rax),%rax
3be9(3): test %rax,%rax
3bec(4): mov %rax,0x0(%r8,%r9,8)
3bf0(2): jz 0xc(%rip)
3bf2(4): add $0x1,%r9
3bf6(4): cmp $0xa,%r9
3bfa(2): jnz 0xffffffd6(%rip)
3bfc(3): test %r11b,%r11b
3bff(2): jnz 0x26(%rip)
3c01(5): call 0xfffffa9f(%rip)
3c06(5): mov 0x78(%rsp),%rax
3c0b(9): xor $0x28,%rax
3c14(2): jnz 0xc(%rip)
3c16(7): add $0xb8,%rsp
3c1d(1): pop %rbx
3c1e(1): pop %rbp
3c1f(1): ret near (%rsp)
3c20(5): call 0xffffd5a0(%rip)
3c25(5): mov %r10d,0x8(%rsp)
3c2a(2): jmp 0xffffffd7(%rip)
3c2c(3): mov %rbx,%rax
3c2f(4): add $0x8,%rbx
3c33(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
3c40(1): push %rbx
3c41(7): lea 0xf3a(%rip),%rsi
3c48(5): mov $0x5,%edx
3c4d(2): xor %edi,%edi
3c4f(5): call 0xffffd541(%rip)
3c54(7): lea 0xf3c(%rip),%rdx
3c5b(3): mov %rax,%rsi
3c5e(5): mov $0x1,%edi
3c63(2): xor %eax,%eax
3c65(5): call 0xffffd66b(%rip)
3c6a(7): lea 0xf3c(%rip),%rsi
3c71(5): mov $0x5,%edx
3c76(2): xor %edi,%edi
3c78(5): call 0xffffd518(%rip)
3c7d(7): lea 0x8bc(%rip),%rcx
3c84(7): lea 0x6ba(%rip),%rdx
3c8b(3): mov %rax,%rsi
3c8e(5): mov $0x1,%edi
3c93(2): xor %eax,%eax
3c95(5): call 0xffffd63b(%rip)
3c9a(7): mov 0x2023e7(%rip),%rbx
3ca1(7): lea 0x1138(%rip),%rsi
3ca8(2): xor %edi,%edi
3caa(5): mov $0x5,%edx
3caf(5): call 0xffffd4e1(%rip)
3cb4(3): mov %rbx,%rsi
3cb7(3): mov %rax,%rdi
3cba(1): pop %rbx
3cbb(5): jmp 0xffffd565(%rip)

"xmalloc" :
3cc0(1): push %rbx
3cc1(3): mov %rdi,%rbx
3cc4(5): call 0xffffd5ac(%rip)
3cc9(3): test %rax,%rax
3ccc(2): jnz 0x7(%rip)
3cce(3): test %rbx,%rbx
3cd1(2): jnz 0x4(%rip)
3cd3(1): pop %rbx
3cd4(1): ret near (%rsp)
3cd5(5): call 0x23b(%rip)

"xnmalloc" :
3ce0(3): mov %rdi,%rax
3ce3(3): mul %rax,%rsi,%rdx
3ce6(3): mov %rax,%rdi
3ce9(3): seto %al
3cec(3): test %rdi,%rdi
3cef(2): js 0xc(%rip)
3cf1(3): movzx %al,%eax
3cf4(3): test %rax,%rax
3cf7(2): jnz 0x4(%rip)
3cf9(2): jmp 0xffffffc7(%rip)
3cfb(4): sub $0x8,%rsp
3cff(5): call 0x211(%rip)

"xrealloc" :
3d20(3): test %rsi,%rsi
3d23(1): push %rbx
3d24(3): mov %rsi,%rbx
3d27(2): jnz 0x7(%rip)
3d29(3): test %rdi,%rdi
3d2c(2): jnz 0x1c(%rip)
3d2e(3): mov %rbx,%rsi
3d31(5): call 0xffffd57f(%rip)
3d36(3): test %rax,%rax
3d39(2): jnz 0x7(%rip)
3d3b(3): test %rbx,%rbx
3d3e(2): jnz 0x13(%rip)
3d40(1): pop %rbx
3d41(1): ret near (%rsp)
3d42(6): nop 0x0(%rax,%rax,1)
3d48(5): call 0xffffd3b8(%rip)
3d4d(2): xor %eax,%eax
3d4f(1): pop %rbx
3d50(1): ret near (%rsp)
3d51(5): call 0x1bf(%rip)

"xnrealloc" :
3d60(3): mov %rsi,%rax
3d63(3): mul %rax,%rdx,%rdx
3d66(3): mov %rax,%rsi
3d69(3): seto %al
3d6c(3): test %rsi,%rsi
3d6f(2): js 0xc(%rip)
3d71(3): movzx %al,%eax
3d74(3): test %rax,%rax
3d77(2): jnz 0x4(%rip)
3d79(2): jmp 0xffffffa7(%rip)
3d7b(4): sub $0x8,%rsp
3d7f(5): call 0x191(%rip)

"x2nrealloc" :
3d90(3): test %rdi,%rdi
3d93(3): mov %rdx,%r9
3d96(3): mov (%rsi),%rcx
3d99(2): jz 0x37(%rip)
3d9b(2): xor %edx,%edx
3d9d(a): mov $0x6148914691236517204,%rax
3da7(3): div %r9,%rax
3daa(3): cmp %rcx,%rax
3dad(2): jbe 0x3e(%rip)
3daf(3): mov %rcx,%rax
3db2(3): shr $0x1,%rax
3db5(5): lea 0x1(%rax,%rcx,1),%rcx
3dba(3): mov %rcx,(%rsi)
3dbd(4): imul %r9,%rcx
3dc1(3): mov %rcx,%rsi
3dc4(5): jmp 0xffffff5c(%rip)
3dc9(7): nop 0x0(%rax)
3dd0(3): test %rcx,%rcx
3dd3(2): jz 0x25(%rip)
3dd5(3): mov %rcx,%rax
3dd8(3): mul %rax,%r9,%rdx
3ddb(3): seto %dl
3dde(3): test %rax,%rax
3de1(3): movzx %dl,%edx
3de4(2): js 0x7(%rip)
3de6(3): test %rdx,%rdx
3de9(2): jz 0xffffffd1(%rip)
3deb(4): sub $0x8,%rsp
3def(5): call 0x121(%rip)
3df4(4): nop 0x0(%rax)
3df8(2): xor %edx,%edx
3dfa(5): mov $0x80,%eax
3dff(3): xor %r8d,%r8d
3e02(3): div %r9,%rax
3e05(3): test %rax,%rax
3e08(4): setz %r8b
3e0c(4): lea 0x0(%r8,%rax,1),%rcx
3e10(2): jmp 0xffffffc5(%rip)

"x2realloc" :
3e20(3): test %rdi,%rdi
3e23(3): mov (%rsi),%rax
3e26(2): jz 0x2a(%rip)
3e28(a): mov $0x6148914691236517203,%rdx
3e32(3): cmp %rdx,%rax
3e35(2): jnbe 0x2c(%rip)
3e37(3): mov %rax,%rdx
3e3a(3): shr $0x1,%rdx
3e3d(5): lea 0x1(%rdx,%rax,1),%rax
3e42(3): mov %rax,(%rsi)
3e45(3): mov %rax,%rsi
3e48(5): jmp 0xfffffed8(%rip)
3e4d(3): nop (%rax)
3e50(3): test %rax,%rax
3e53(5): mov $0x80,%edx
3e58(4): cmove %rdx,%rax
3e5c(3): test %rax,%rax
3e5f(2): jns 0xffffffe3(%rip)
3e61(4): sub $0x8,%rsp
3e65(5): call 0xab(%rip)

"xzalloc" :
3e70(1): push %rbx
3e71(3): mov %rdi,%rbx
3e74(5): call 0xfffffe4c(%rip)
3e79(3): mov %rbx,%rdx
3e7c(2): xor %esi,%esi
3e7e(3): mov %rax,%rdi
3e81(1): pop %rbx
3e82(5): jmp 0xffffd37e(%rip)

"xcalloc" :
3e90(3): mov %rdi,%rax
3e93(4): sub $0x8,%rsp
3e97(3): mul %rax,%rsi,%rdx
3e9a(3): seto %dl
3e9d(3): test %rax,%rax
3ea0(2): js 0x19(%rip)
3ea2(3): movzx %dl,%edx
3ea5(3): test %rdx,%rdx
3ea8(2): jnz 0x11(%rip)
3eaa(5): call 0xffffd386(%rip)
3eaf(3): test %rax,%rax
3eb2(2): jz 0x7(%rip)
3eb4(4): add $0x8,%rsp
3eb8(1): ret near (%rsp)
3eb9(5): call 0x57(%rip)

"xmemdup" :
3ec0(1): push %rbp
3ec1(1): push %rbx
3ec2(3): mov %rdi,%rbp
3ec5(3): mov %rsi,%rdi
3ec8(3): mov %rsi,%rbx
3ecb(4): sub $0x8,%rsp
3ecf(5): call 0xfffffdf1(%rip)
3ed4(4): add $0x8,%rsp
3ed8(3): mov %rbx,%rdx
3edb(3): mov %rbp,%rsi
3ede(1): pop %rbx
3edf(1): pop %rbp
3ee0(3): mov %rax,%rdi
3ee3(5): jmp 0xffffd36d(%rip)

"xstrdup" :
3ef0(1): push %rbx
3ef1(3): mov %rdi,%rbx
3ef4(5): call 0xffffd2bc(%rip)
3ef9(3): mov %rbx,%rdi
3efc(4): lea 0x1(%rax),%rsi
3f00(1): pop %rbx
3f01(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
3f10(7): lea 0xf78(%rip),%rsi
3f17(4): sub $0x8,%rsp
3f1b(5): mov $0x5,%edx
3f20(2): xor %edi,%edi
3f22(5): call 0xffffd26e(%rip)
3f27(6): mov 0x2020eb(%rip),%edi
3f2d(7): lea 0x6c4(%rip),%rdx
3f34(3): mov %rax,%rcx
3f37(2): xor %esi,%esi
3f39(2): xor %eax,%eax
3f3b(5): call 0xffffd3a5(%rip)
3f40(5): call 0xffffd1d0(%rip)

"rpl_mbrtowc" :
3f50(2): push %r13
3f52(2): push %r12
3f54(3): mov %rsi,%r13
3f57(1): push %rbp
3f58(1): push %rbx
3f59(3): mov %rdi,%rbx
3f5c(3): mov %rdx,%r12
3f5f(4): sub $0x18,%rsp
3f63(9): mov $0x28,%rax
3f6c(5): mov %rax,0x8(%rsp)
3f71(2): xor %eax,%eax
3f73(5): lea 0x4(%rsp),%rax
3f78(3): test %rdi,%rdi
3f7b(4): cmove %rax,%rbx
3f7f(3): mov %rbx,%rdi
3f82(5): call 0xffffd24e(%rip)
3f87(4): cmp $0xfffffffd,%rax
3f8b(3): mov %rax,%rbp
3f8e(2): jbe 0x22(%rip)
3f90(3): test %r12,%r12
3f93(2): jz 0x1d(%rip)
3f95(2): xor %edi,%edi
3f97(5): call 0xc9(%rip)
3f9c(2): test %al,%al
3f9e(2): jnz 0x12(%rip)
3fa0(5): movzx 0x0(%r13),%eax
3fa5(5): mov $0x1,%ebp
3faa(2): mov %eax,(%rbx)
3fac(4): nop 0x0(%rax)
3fb0(5): mov 0x8(%rsp),%rdx
3fb5(9): xor $0x28,%rdx
3fbe(3): mov %rbp,%rax
3fc1(2): jnz 0xd(%rip)
3fc3(4): add $0x18,%rsp
3fc7(1): pop %rbx
3fc8(1): pop %rbp
3fc9(2): pop %r12
3fcb(2): pop %r13
3fcd(1): ret near (%rsp)
3fce(5): call 0xffffd1f2(%rip)

"close_stream" :
3fe0(2): push %r12
3fe2(1): push %rbp
3fe3(3): mov %rdi,%rbp
3fe6(1): push %rbx
3fe7(5): call 0xffffd169(%rip)
3fec(3): mov 0x0(%rbp),%ebx
3fef(3): mov %rbp,%rdi
3ff2(3): mov %rax,%r12
3ff5(5): call 0x10b(%rip)
3ffa(3): and $0x20,%ebx
3ffd(2): test %ebx,%ebx
3fff(2): jnz 0x19(%rip)
4001(2): test %eax,%eax
4003(2): jz 0xc(%rip)
4005(3): test %r12,%r12
4008(5): mov $0xffffffff,%eax
400d(2): jz 0x3b(%rip)
400f(1): pop %rbx
4010(1): pop %rbp
4011(2): pop %r12
4013(1): ret near (%rsp)
4014(4): nop 0x0(%rax)
4018(2): test %eax,%eax
401a(2): jnz 0x1e(%rip)
401c(5): call 0xffffd104(%rip)
4021(6): mov $0x0,(%rax)
4027(5): mov $0xffffffff,%eax
402c(1): pop %rbx
402d(1): pop %rbp
402e(2): pop %r12
4030(1): ret near (%rsp)
4031(7): nop 0x0(%rax)
4038(1): pop %rbx
4039(5): mov $0xffffffff,%eax
403e(1): pop %rbp
403f(2): pop %r12
4041(1): ret near (%rsp)
4042(6): nop 0x0(%rax,%rax,1)
4048(5): call 0xffffd0d8(%rip)
404d(3): cmp $0x9,(%rax)
4050(1): pop %rbx
4051(1): pop %rbp
4052(2): pop %r12
4054(3): setnz %al
4057(3): movzx %al,%eax
405a(2): neg %eax
405c(1): ret near (%rsp)

"hard_locale" :
4060(4): sub $0x8,%rsp
4064(2): xor %esi,%esi
4066(5): call 0xffffd25a(%rip)
406b(3): mov %rax,%rdx
406e(5): mov $0x1,%eax
4073(3): test %rdx,%rdx
4076(2): jz 0x1f(%rip)
4078(7): lea 0xe21(%rip),%rdi
407f(5): mov $0x2,%ecx
4084(3): mov %rdx,%rsi
4087(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4089(3): setnbe %cl
408c(3): sbb $0x0,%cl
408f(2): xor %eax,%eax
4091(2): test %cl,%cl
4093(2): jnz 0xd(%rip)
4095(4): add $0x8,%rsp
4099(1): ret near (%rsp)
409a(6): nop 0x0(%rax,%rax,1)
40a0(7): lea 0xdfb(%rip),%rdi
40a7(5): mov $0x6,%ecx
40ac(3): mov %rdx,%rsi
40af(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
40b1(3): setnbe %al
40b4(2): sbb $0x0,%al
40b6(2): test %al,%al
40b8(3): setnz %al
40bb(4): add $0x8,%rsp
40bf(1): ret near (%rsp)

"locale_charset" :
40c0(4): sub $0x8,%rsp
40c4(5): mov $0xe,%edi
40c9(5): call 0xffffd1c7(%rip)
40ce(3): test %rax,%rax
40d1(2): jz 0x1f(%rip)
40d3(3): cmp $0x0,(%rax)
40d6(7): lea 0xdcb(%rip),%rdx
40dd(4): cmove %rdx,%rax
40e1(4): add $0x8,%rsp
40e5(1): ret near (%rsp)
40e6(a): nop 0x0(%rax,%rax,1)
40f0(7): lea 0xdb1(%rip),%rax
40f7(4): add $0x8,%rsp
40fb(1): ret near (%rsp)

"rpl_fclose" :
4100(2): push %r12
4102(1): push %rbp
4103(1): push %rbx
4104(3): mov %rdi,%rbx
4107(5): call 0xffffd159(%rip)
410c(2): test %eax,%eax
410e(3): mov %rbx,%rdi
4111(2): js 0x56(%rip)
4113(5): call 0xffffd18d(%rip)
4118(2): test %eax,%eax
411a(2): jnz 0x2e(%rip)
411c(3): mov %rbx,%rdi
411f(5): call 0x61(%rip)
4124(2): test %eax,%eax
4126(2): jz 0x3e(%rip)
4128(5): call 0xffffcff8(%rip)
412d(3): mov (%rax),%r12d
4130(3): mov %rbx,%rdi
4133(3): mov %rax,%rbp
4136(5): call 0xffffd03a(%rip)
413b(3): test %r12d,%r12d
413e(2): jnz 0x32(%rip)
4140(1): pop %rbx
4141(1): pop %rbp
4142(2): pop %r12
4144(1): ret near (%rsp)
4145(3): nop (%rax)
4148(3): mov %rbx,%rdi
414b(5): call 0xffffd115(%rip)
4150(2): xor %esi,%esi
4152(5): mov $0x1,%edx
4157(2): mov %eax,%edi
4159(5): call 0xffffd097(%rip)
415e(4): cmp $0xffffffff,%rax
4162(2): jnz 0xffffffba(%rip)
4164(3): mov %rbx,%rdi
4167(1): pop %rbx
4168(1): pop %rbp
4169(2): pop %r12
416b(5): jmp 0xffffd005(%rip)
4170(4): mov %r12d,0x0(%rbp)
4174(5): mov $0xffffffff,%eax
4179(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4180(3): test %rdi,%rdi
4183(1): push %rbx
4184(3): mov %rdi,%rbx
4187(2): jz 0x13(%rip)
4189(5): call 0xffffd117(%rip)
418e(2): test %eax,%eax
4190(2): jz 0xa(%rip)
4192(6): test $0x100,(%rbx)
4198(2): jnz 0x10(%rip)
419a(3): mov %rbx,%rdi
419d(1): pop %rbx
419e(5): jmp 0xffffd0e2(%rip)
41a3(5): nop 0x0(%rax,%rax,1)
41a8(3): mov %rbx,%rdi
41ab(5): mov $0x1,%edx
41b0(2): xor %esi,%esi
41b2(5): call 0xe(%rip)
41b7(3): mov %rbx,%rdi
41ba(1): pop %rbx
41bb(5): jmp 0xffffd0c5(%rip)

"rpl_fseeko" :
41c0(4): mov 0x8(%rdi),%rax
41c4(4): cmp %rax,0x10(%rdi)
41c8(2): jz 0x8(%rip)
41ca(5): jmp 0xffffd126(%rip)
41cf(1): nop 
41d0(4): mov 0x20(%rdi),%rax
41d4(4): cmp %rax,0x28(%rdi)
41d8(2): jnz 0xfffffff2(%rip)
41da(5): cmp $0x0,0x48(%rdi)
41df(2): jnz 0xffffffeb(%rip)
41e1(2): push %r12
41e3(1): push %rbp
41e4(3): mov %edx,%r12d
41e7(1): push %rbx
41e8(3): mov %rsi,%rbp
41eb(3): mov %rdi,%rbx
41ee(5): call 0xffffd072(%rip)
41f3(3): mov %r12d,%edx
41f6(3): mov %rbp,%rsi
41f9(2): mov %eax,%edi
41fb(5): call 0xffffcff5(%rip)
4200(4): cmp $0xffffffff,%rax
4204(2): jz 0xe(%rip)
4206(3): and $0xef,(%rbx)
4209(7): mov %rax,0x90(%rbx)
4210(2): xor %eax,%eax
4212(1): pop %rbx
4213(1): pop %rbp
4214(2): pop %r12
4216(1): ret near (%rsp)

"__libc_csu_init" :
4220(2): push %r15
4222(2): push %r14
4224(3): mov %rdx,%r15
4227(2): push %r13
4229(2): push %r12
422b(7): lea 0x2019fe(%rip),%r12
4232(1): push %rbp
4233(7): lea 0x2019fe(%rip),%rbp
423a(1): push %rbx
423b(3): mov %edi,%r13d
423e(3): mov %rsi,%r14
4241(3): sub %r12,%rbp
4244(4): sub $0x8,%rsp
4248(4): sar $0x3,%rbp
424c(5): call 0xffffce8c(%rip)
4251(3): test %rbp,%rbp
4254(2): jz 0x22(%rip)
4256(2): xor %ebx,%ebx
4258(8): nop 0x0(%rax,%rax,1)
4260(3): mov %r15,%rdx
4263(3): mov %r14,%rsi
4266(3): mov %r13d,%edi
4269(4): call 0x0(%r12,%rbx,8)
426d(4): add $0x1,%rbx
4271(3): cmp %rbx,%rbp
4274(2): jnz 0xffffffec(%rip)
4276(4): add $0x8,%rsp
427a(1): pop %rbx
427b(1): pop %rbp
427c(2): pop %r12
427e(2): pop %r13
4280(2): pop %r14
4282(2): pop %r15
4284(1): ret near (%rsp)

"atexit" :
42a0(7): mov 0x201d61(%rip),%rdx
42a7(2): xor %esi,%esi
42a9(5): jmp 0xffffd057(%rip)

"_fini" :
42b0(4): sub $0x8,%rsp
42b4(4): add $0x8,%rsp
42b8(1): ret near (%rsp)

