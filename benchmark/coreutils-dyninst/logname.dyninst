
"free@plt" :
1220(6): jmp 0x205c5a(%rip)
1226(5): push $0x0

"abort@plt" :
1230(6): jmp 0x205c52(%rip)
1236(5): push $0x1

"__errno_location@plt" :
1240(6): jmp 0x205c4a(%rip)
1246(5): push $0x2

"strncmp@plt" :
1250(6): jmp 0x205c42(%rip)
1256(5): push $0x3

"_exit@plt" :
1260(6): jmp 0x205c3a(%rip)
1266(5): push $0x4

"__fpending@plt" :
1270(6): jmp 0x205c32(%rip)
1276(5): push $0x5

"puts@plt" :
1280(6): jmp 0x205c2a(%rip)
1286(5): push $0x6

"textdomain@plt" :
1290(6): jmp 0x205c22(%rip)
1296(5): push $0x7

"fclose@plt" :
12a0(6): jmp 0x205c1a(%rip)
12a6(5): push $0x8

"bindtextdomain@plt" :
12b0(6): jmp 0x205c12(%rip)
12b6(5): push $0x9

"dcgettext@plt" :
12c0(6): jmp 0x205c0a(%rip)
12c6(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
12d0(6): jmp 0x205c02(%rip)
12d6(5): push $0xb

"strlen@plt" :
12e0(6): jmp 0x205bfa(%rip)
12e6(5): push $0xc

"__stack_chk_fail@plt" :
12f0(6): jmp 0x205bf2(%rip)
12f6(5): push $0xd

"getopt_long@plt" :
1300(6): jmp 0x205bea(%rip)
1306(5): push $0xe

"mbrtowc@plt" :
1310(6): jmp 0x205be2(%rip)
1316(5): push $0xf

"strrchr@plt" :
1320(6): jmp 0x205bda(%rip)
1326(5): push $0x10

"lseek@plt" :
1330(6): jmp 0x205bd2(%rip)
1336(5): push $0x11

"memset@plt" :
1340(6): jmp 0x205bca(%rip)
1346(5): push $0x12

"memcmp@plt" :
1350(6): jmp 0x205bc2(%rip)
1356(5): push $0x13

"fputs_unlocked@plt" :
1360(6): jmp 0x205bba(%rip)
1366(5): push $0x14

"calloc@plt" :
1370(6): jmp 0x205bb2(%rip)
1376(5): push $0x15

"memcpy@plt" :
1380(6): jmp 0x205baa(%rip)
1386(5): push $0x16

"fileno@plt" :
1390(6): jmp 0x205ba2(%rip)
1396(5): push $0x17

"malloc@plt" :
13a0(6): jmp 0x205b9a(%rip)
13a6(5): push $0x18

"fflush@plt" :
13b0(6): jmp 0x205b92(%rip)
13b6(5): push $0x19

"nl_langinfo@plt" :
13c0(6): jmp 0x205b8a(%rip)
13c6(5): push $0x1a

"getlogin@plt" :
13d0(6): jmp 0x205b82(%rip)
13d6(5): push $0x1b

"__freading@plt" :
13e0(6): jmp 0x205b7a(%rip)
13e6(5): push $0x1c

"realloc@plt" :
13f0(6): jmp 0x205b72(%rip)
13f6(5): push $0x1d

"setlocale@plt" :
1400(6): jmp 0x205b6a(%rip)
1406(5): push $0x1e

"__printf_chk@plt" :
1410(6): jmp 0x205b62(%rip)
1416(5): push $0x1f

"error@plt" :
1420(6): jmp 0x205b5a(%rip)
1426(5): push $0x20

"fseeko@plt" :
1430(6): jmp 0x205b52(%rip)
1436(5): push $0x21

"__cxa_atexit@plt" :
1440(6): jmp 0x205b4a(%rip)
1446(5): push $0x22

"exit@plt" :
1450(6): jmp 0x205b42(%rip)
1456(5): push $0x23

"fwrite@plt" :
1460(6): jmp 0x205b3a(%rip)
1466(5): push $0x24

"__fprintf_chk@plt" :
1470(6): jmp 0x205b32(%rip)
1476(5): push $0x25

"mbsinit@plt" :
1480(6): jmp 0x205b2a(%rip)
1486(5): push $0x26

"iswprint@plt" :
1490(6): jmp 0x205b22(%rip)
1496(5): push $0x27

"__ctype_b_loc@plt" :
14a0(6): jmp 0x205b1a(%rip)
14a6(5): push $0x28

".plt.got" :
14b0(6): jmp 0x205b32(%rip)
14b6(2): nop 

"_init" :
11f8(4): sub $0x8,%rsp
11fc(7): mov 0x205dd5(%rip),%rax
1203(3): test %rax,%rax
1206(2): jz 0x4(%rip)
1208(2): call %rax
120a(4): add $0x8,%rsp
120e(1): ret near (%rsp)

"main" :
14c0(1): push %rbp
14c1(1): push %rbx
14c2(2): mov %edi,%ebp
14c4(3): mov %rsi,%rbx
14c7(4): sub $0x8,%rsp
14cb(3): mov (%rsi),%rdi
14ce(5): call 0x8c2(%rip)
14d3(7): lea 0x3a07(%rip),%rsi
14da(5): mov $0x6,%edi
14df(5): call 0xffffff21(%rip)
14e4(7): lea 0x32b8(%rip),%rsi
14eb(7): lea 0x3288(%rip),%rdi
14f2(5): call 0xfffffdbe(%rip)
14f7(7): lea 0x327c(%rip),%rdi
14fe(5): call 0xfffffd92(%rip)
1503(7): lea 0x556(%rip),%rdi
150a(5): call 0x31b6(%rip)
150f(7): lea 0x32a5(%rip),%rax
1516(4): sub $0x8,%rsp
151a(7): mov 0x205aef(%rip),%r8
1521(2): push $0x0
1523(7): lea 0x324c(%rip),%rcx
152a(7): lea 0x31b3(%rip),%rdx
1531(1): push %rax
1532(7): lea 0x1b7(%rip),%rax
1539(6): mov $0x1,%r9d
153f(3): mov %rbx,%rsi
1542(2): mov %ebp,%edi
1544(1): push %rax
1545(2): xor %eax,%eax
1547(5): call 0x709(%rip)
154c(7): movsxd 0x205b3d(%rip),%rax
1553(4): add $0x20,%rsp
1557(2): cmp %ebp,%eax
1559(2): jl 0x1d(%rip)
155b(5): call 0xfffffe75(%rip)
1560(3): test %rax,%rax
1563(2): jz 0x4d(%rip)
1565(3): mov %rax,%rdi
1568(5): call 0xfffffd18(%rip)
156d(4): add $0x8,%rsp
1571(2): xor %eax,%eax
1573(1): pop %rbx
1574(1): pop %rbp
1575(1): ret near (%rsp)
1576(4): mov 0x0(%rbx,%rax,8),%rdi
157a(5): call 0x2526(%rip)
157f(7): lea 0x3244(%rip),%rsi
1586(3): mov %rax,%rbx
1589(5): mov $0x5,%edx
158e(2): xor %edi,%edi
1590(5): call 0xfffffd30(%rip)
1595(2): xor %edi,%edi
1597(3): mov %rax,%rdx
159a(3): mov %rbx,%rcx
159d(2): xor %esi,%esi
159f(2): xor %eax,%eax
15a1(5): call 0xfffffe7f(%rip)
15a6(5): mov $0x1,%edi
15ab(5): call 0x145(%rip)
15b0(7): lea 0x3224(%rip),%rsi
15b7(5): mov $0x5,%edx
15bc(2): xor %edi,%edi
15be(5): call 0xfffffd02(%rip)
15c3(2): xor %esi,%esi
15c5(3): mov %rax,%rdx
15c8(5): mov $0x1,%edi
15cd(2): xor %eax,%eax
15cf(5): call 0xfffffe51(%rip)
15d4(a): nop 0x0(%rax,%rax,1)
15de(2): nop 
15e0(2): xor %ebp,%ebp
15e2(3): mov %rdx,%r9
15e5(1): pop %rsi
15e6(3): mov %rsp,%rdx
15e9(4): and $0xfffffff0,%rsp
15ed(1): push %rax
15ee(1): push %rsp
15ef(7): lea 0x30ba(%rip),%r8
15f6(7): lea 0x3043(%rip),%rcx
15fd(7): lea 0xfffffebc(%rip),%rdi
1604(6): call 0x2059c6(%rip)
160a(1): hlt 

"_start" :
15e0(2): xor %ebp,%ebp
15e2(3): mov %rdx,%r9
15e5(1): pop %rsi
15e6(3): mov %rsp,%rdx
15e9(4): and $0xfffffff0,%rsp
15ed(1): push %rax
15ee(1): push %rsp
15ef(7): lea 0x30ba(%rip),%r8
15f6(7): lea 0x3043(%rip),%rcx
15fd(7): lea 0xfffffebc(%rip),%rdi
1604(6): call 0x2059c6(%rip)
160a(1): hlt 

"deregister_tm_clones" :
1610(7): lea 0x205a69(%rip),%rdi
1617(1): push %rbp
1618(7): lea 0x205a61(%rip),%rax
161f(3): cmp %rdi,%rax
1622(3): mov %rsp,%rbp
1625(2): jz 0x1b(%rip)
1627(7): mov 0x20599a(%rip),%rax
162e(3): test %rax,%rax
1631(2): jz 0xf(%rip)
1633(1): pop %rbp
1634(2): jmp %rax
1636(a): nop 0x0(%rax,%rax,1)
1640(1): pop %rbp
1641(1): ret near (%rsp)

"register_tm_clones" :
1650(7): lea 0x205a29(%rip),%rdi
1657(7): lea 0x205a22(%rip),%rsi
165e(1): push %rbp
165f(3): sub %rdi,%rsi
1662(3): mov %rsp,%rbp
1665(4): sar $0x3,%rsi
1669(3): mov %rsi,%rax
166c(4): shr $0x3f,%rax
1670(3): add %rax,%rsi
1673(3): sar $0x1,%rsi
1676(2): jz 0x1a(%rip)
1678(7): mov 0x205961(%rip),%rax
167f(3): test %rax,%rax
1682(2): jz 0xe(%rip)
1684(1): pop %rbp
1685(2): jmp %rax
1687(9): nop 0x0(%rax,%rax,1)
1690(1): pop %rbp
1691(1): ret near (%rsp)

"__do_global_dtors_aux" :
16a0(7): cmp $0x0,0x205a21(%rip)
16a7(2): jnz 0x31(%rip)
16a9(8): cmp $0x0,0x205937(%rip)
16b1(1): push %rbp
16b2(3): mov %rsp,%rbp
16b5(2): jz 0xe(%rip)
16b7(7): mov 0x20594a(%rip),%rdi
16be(5): call 0xfffffdf2(%rip)
16c3(5): call 0xffffff4d(%rip)
16c8(7): mov $0x1,0x2059f9(%rip)
16cf(1): pop %rbp
16d0(1): ret near (%rsp)
16d1(7): nop 0x0(%rax)
16d8(2): REP ret near (%rsp)

"frame_dummy" :
16e0(1): push %rbp
16e1(3): mov %rsp,%rbp
16e4(1): pop %rbp
16e5(5): jmp 0xffffff6b(%rip)

"usage" :
16f0(2): push %r13
16f2(2): push %r12
16f4(5): mov $0x5,%edx
16f9(1): push %rbp
16fa(1): push %rbx
16fb(2): mov %edi,%ebp
16fd(7): sub $0x88,%rsp
1704(7): mov 0x2059d5(%rip),%rbx
170b(9): mov $0x28,%rax
1714(5): mov %rax,0x78(%rsp)
1719(2): xor %eax,%eax
171b(2): test %edi,%edi
171d(2): jz 0x30(%rip)
171f(7): lea 0x30ca(%rip),%rsi
1726(2): xor %edi,%edi
1728(5): call 0xfffffb98(%rip)
172d(7): mov 0x20598c(%rip),%rdi
1734(3): mov %rax,%rdx
1737(3): mov %rbx,%rcx
173a(5): mov $0x1,%esi
173f(2): xor %eax,%eax
1741(5): call 0xfffffd2f(%rip)
1746(2): mov %ebp,%edi
1748(5): call 0xfffffd08(%rip)
174d(7): lea 0x2f98(%rip),%rsi
1754(2): xor %edi,%edi
1756(5): call 0xfffffb6a(%rip)
175b(3): mov %rbx,%rdx
175e(3): mov %rax,%rsi
1761(5): mov $0x1,%edi
1766(2): xor %eax,%eax
1768(5): call 0xfffffca8(%rip)
176d(7): mov 0x205914(%rip),%rbx
1774(7): lea 0x309d(%rip),%rsi
177b(5): mov $0x5,%edx
1780(2): xor %edi,%edi
1782(5): call 0xfffffb3e(%rip)
1787(3): mov %rbx,%rsi
178a(3): mov %rax,%rdi
178d(5): call 0xfffffbd3(%rip)
1792(7): mov 0x2058ef(%rip),%rbx
1799(7): lea 0x30a0(%rip),%rsi
17a0(5): mov $0x5,%edx
17a5(2): xor %edi,%edi
17a7(5): call 0xfffffb19(%rip)
17ac(3): mov %rbx,%rsi
17af(3): mov %rax,%rdi
17b2(5): call 0xfffffbae(%rip)
17b7(7): mov 0x2058ca(%rip),%rbx
17be(7): lea 0x30ab(%rip),%rsi
17c5(5): mov $0x5,%edx
17ca(2): xor %edi,%edi
17cc(5): call 0xfffffaf4(%rip)
17d1(3): mov %rbx,%rsi
17d4(3): mov %rax,%rdi
17d7(7): lea 0x2f06(%rip),%rbx
17de(5): call 0xfffffb82(%rip)
17e3(7): lea 0x2f16(%rip),%rax
17ea(7): lea 0x2f50(%rip),%rcx
17f1(9): mov $0x0,0x60(%rsp)
17fa(9): mov $0x0,0x68(%rsp)
1803(3): mov %rsp,%rdx
1806(4): mov %rax,(%rsp)
180a(7): lea 0x2ef1(%rip),%rax
1811(5): mov %rcx,0x30(%rsp)
1816(7): lea 0x2f2e(%rip),%rcx
181d(5): mov %rax,0x8(%rsp)
1822(7): lea 0x2f51(%rip),%rax
1829(5): mov %rcx,0x40(%rsp)
182e(7): lea 0x2f20(%rip),%rcx
1835(5): mov %rax,0x10(%rsp)
183a(7): lea 0x2ed1(%rip),%rax
1841(5): mov %rcx,0x50(%rsp)
1846(5): mov %rax,0x18(%rsp)
184b(7): lea 0x2ed6(%rip),%rax
1852(5): mov %rax,0x20(%rsp)
1857(7): lea 0x2ed4(%rip),%rax
185e(5): mov %rax,0x28(%rsp)
1863(5): mov %rax,0x38(%rsp)
1868(5): mov %rax,0x48(%rsp)
186d(5): mov %rax,0x58(%rsp)
1872(6): nop 0x0(%rax,%rax,1)
1878(4): add $0x10,%rdx
187c(3): mov (%rdx),%rdi
187f(3): test %rdi,%rdi
1882(2): jz 0x15(%rip)
1884(5): mov $0x8,%ecx
1889(3): mov %rbx,%rsi
188c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
188e(3): setnbe %al
1891(2): sbb $0x0,%al
1893(2): test %al,%al
1895(2): jnz 0xffffffe3(%rip)
1897(4): mov 0x8(%rdx),%r12
189b(2): xor %edi,%edi
189d(5): mov $0x5,%edx
18a2(7): lea 0x2eb6(%rip),%rsi
18a9(3): test %r12,%r12
18ac(6): jz 0xc7(%rip)
18b2(5): call 0xfffffa0e(%rip)
18b7(7): lea 0x2fea(%rip),%rcx
18be(7): lea 0x2eb1(%rip),%rdx
18c5(3): mov %rax,%rsi
18c8(5): mov $0x1,%edi
18cd(2): xor %eax,%eax
18cf(5): call 0xfffffb41(%rip)
18d4(2): xor %esi,%esi
18d6(5): mov $0x5,%edi
18db(5): call 0xfffffb25(%rip)
18e0(3): test %rax,%rax
18e3(2): jz 0x1e(%rip)
18e5(7): lea 0x2e98(%rip),%rsi
18ec(5): mov $0x3,%edx
18f1(3): mov %rax,%rdi
18f4(5): call 0xfffff95c(%rip)
18f9(2): test %eax,%eax
18fb(6): jnz 0x10d(%rip)
1901(7): lea 0x2e80(%rip),%rsi
1908(2): xor %edi,%edi
190a(5): mov $0x5,%edx
190f(5): call 0xfffff9b1(%rip)
1914(7): lea 0x2dc9(%rip),%rcx
191b(7): lea 0x2f86(%rip),%rdx
1922(3): mov %rax,%rsi
1925(5): mov $0x1,%edi
192a(2): xor %eax,%eax
192c(5): call 0xfffffae4(%rip)
1931(3): cmp %rbx,%r12
1934(7): lea 0x2de1(%rip),%rcx
193b(7): lea 0x359f(%rip),%rbx
1942(4): cmove %rcx,%rbx
1946(7): lea 0x2fcb(%rip),%rsi
194d(2): xor %edi,%edi
194f(5): mov $0x5,%edx
1954(5): call 0xfffff96c(%rip)
1959(3): mov %rbx,%rcx
195c(3): mov %rax,%rsi
195f(3): mov %r12,%rdx
1962(5): mov $0x1,%edi
1967(2): xor %eax,%eax
1969(5): call 0xfffffaa7(%rip)
196e(5): jmp 0xfffffdd8(%rip)
1973(5): call 0xfffff94d(%rip)
1978(7): lea 0x2f29(%rip),%rcx
197f(7): lea 0x2df0(%rip),%rdx
1986(3): mov %rax,%rsi
1989(5): mov $0x1,%edi
198e(2): xor %eax,%eax
1990(5): call 0xfffffa80(%rip)
1995(2): xor %esi,%esi
1997(5): mov $0x5,%edi
199c(5): call 0xfffffa64(%rip)
19a1(3): test %rax,%rax
19a4(2): jz 0x1a(%rip)
19a6(7): lea 0x2dd7(%rip),%rsi
19ad(5): mov $0x3,%edx
19b2(3): mov %rax,%rdi
19b5(5): call 0xfffff89b(%rip)
19ba(2): test %eax,%eax
19bc(2): jnz 0x45(%rip)
19be(7): lea 0x2dc3(%rip),%rsi
19c5(5): mov $0x5,%edx
19ca(2): xor %edi,%edi
19cc(7): lea 0x2d11(%rip),%r12
19d3(7): lea 0x2d42(%rip),%rbx
19da(5): call 0xfffff8e6(%rip)
19df(7): lea 0x2cfe(%rip),%rcx
19e6(7): lea 0x2ebb(%rip),%rdx
19ed(3): mov %rax,%rsi
19f0(5): mov $0x1,%edi
19f5(2): xor %eax,%eax
19f7(5): call 0xfffffa19(%rip)
19fc(5): jmp 0xffffff4a(%rip)
1a01(7): lea 0x2cdc(%rip),%r12
1a08(7): mov 0x205679(%rip),%r13
1a0f(7): lea 0x2eba(%rip),%rsi
1a16(2): xor %edi,%edi
1a18(5): mov $0x5,%edx
1a1d(5): call 0xfffff8a3(%rip)
1a22(3): mov %r13,%rsi
1a25(3): mov %rax,%rdi
1a28(5): call 0xfffff938(%rip)
1a2d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1a40(7): mov %rdi,0x205691(%rip)
1a47(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1a50(7): mov %dil,0x205679(%rip)
1a57(1): ret near (%rsp)

"close_stdout" :
1a60(1): push %rbp
1a61(1): push %rbx
1a62(4): sub $0x8,%rsp
1a66(7): mov 0x20561b(%rip),%rdi
1a6d(5): call 0x2993(%rip)
1a72(2): test %eax,%eax
1a74(2): jz 0x18(%rip)
1a76(5): call 0xfffff7ca(%rip)
1a7b(7): cmp $0x0,0x20564e(%rip)
1a82(3): mov %rax,%rbx
1a85(2): jz 0x1e(%rip)
1a87(3): cmp $0x20,(%rax)
1a8a(2): jnz 0x19(%rip)
1a8c(7): mov 0x20562d(%rip),%rdi
1a93(5): call 0x296d(%rip)
1a98(2): test %eax,%eax
1a9a(2): jnz 0x48(%rip)
1a9c(4): add $0x8,%rsp
1aa0(1): pop %rbx
1aa1(1): pop %rbp
1aa2(1): ret near (%rsp)
1aa3(7): lea 0x2ea6(%rip),%rsi
1aaa(2): xor %edi,%edi
1aac(5): mov $0x5,%edx
1ab1(5): call 0xfffff80f(%rip)
1ab6(7): mov 0x20561b(%rip),%rdi
1abd(3): mov %rax,%rbp
1ac0(3): test %rdi,%rdi
1ac3(2): jz 0x2a(%rip)
1ac5(5): call 0x1ddb(%rip)
1aca(2): mov (%rbx),%esi
1acc(7): lea 0x2e89(%rip),%rdx
1ad3(3): mov %rax,%rcx
1ad6(3): mov %rbp,%r8
1ad9(2): xor %edi,%edi
1adb(2): xor %eax,%eax
1add(5): call 0xfffff943(%rip)
1ae2(6): mov 0x205530(%rip),%edi
1ae8(5): call 0xfffff778(%rip)
1aed(2): mov (%rbx),%esi
1aef(7): lea 0x2e6a(%rip),%rdx
1af6(3): mov %rax,%rcx
1af9(2): xor %edi,%edi
1afb(2): xor %eax,%eax
1afd(5): call 0xfffff923(%rip)
1b02(2): jmp 0xffffffe0(%rip)

"parse_long_options" :
1b10(2): push %r13
1b12(2): push %r12
1b14(3): mov %r8,%r13
1b17(1): push %rbp
1b18(1): push %rbx
1b19(3): mov %rdx,%rbp
1b1c(3): mov %rcx,%r12
1b1f(7): sub $0xe8,%rsp
1b26(2): test %al,%al
1b28(2): jz 0x3c(%rip)
1b2a(5): movaps %xmm0,0x60(%rsp)
1b2f(5): movaps %xmm1,0x70(%rsp)
1b34(8): movaps %xmm2,0x80(%rsp)
1b3c(8): movaps %xmm3,0x90(%rsp)
1b44(8): movaps %xmm4,0xa0(%rsp)
1b4c(8): movaps %xmm5,0xb0(%rsp)
1b54(8): movaps %xmm6,0xc0(%rsp)
1b5c(8): movaps %xmm7,0xd0(%rsp)
1b64(9): mov $0x28,%rax
1b6d(5): mov %rax,0x28(%rsp)
1b72(2): xor %eax,%eax
1b74(3): cmp $0x2,%edi
1b77(6): mov 0x205523(%rip),%ebx
1b7d(a): mov $0x0,0x205519(%rip)
1b87(2): jz 0x39(%rip)
1b89(5): mov 0x28(%rsp),%rax
1b8e(9): xor $0x28,%rax
1b97(6): mov %ebx,0x205503(%rip)
1b9d(a): mov $0x0,0x2054e9(%rip)
1ba7(6): jnz 0xa3(%rip)
1bad(7): add $0xe8,%rsp
1bb4(1): pop %rbx
1bb5(1): pop %rbp
1bb6(2): pop %r12
1bb8(2): pop %r13
1bba(1): ret near (%rsp)
1bbb(5): nop 0x0(%rax,%rax,1)
1bc0(7): lea 0x204ff9(%rip),%rcx
1bc7(7): lea 0x2d95(%rip),%rdx
1bce(3): xor %r8d,%r8d
1bd1(5): mov %r9,0x8(%rsp)
1bd6(5): call 0xfffff72a(%rip)
1bdb(3): cmp $0xff,%eax
1bde(2): jz 0xffffffab(%rip)
1be0(3): cmp $0x68,%eax
1be3(5): mov 0x8(%rsp),%r9
1be8(2): jz 0x58(%rip)
1bea(3): cmp $0x76,%eax
1bed(2): jnz 0xffffff9c(%rip)
1bef(8): lea 0x110(%rsp),%rax
1bf7(7): mov 0x20548a(%rip),%rdi
1bfe(5): lea 0x10(%rsp),%r8
1c03(3): mov %r13,%rcx
1c06(3): mov %r12,%rdx
1c09(3): mov %rbp,%rsi
1c0c(5): mov %rax,0x18(%rsp)
1c11(5): lea 0x30(%rsp),%rax
1c16(8): mov $0x30,0x10(%rsp)
1c1e(8): mov $0x30,0x14(%rsp)
1c26(5): mov %rax,0x20(%rsp)
1c2b(5): call 0x22d5(%rip)
1c30(2): xor %edi,%edi
1c32(5): call 0xfffff81e(%rip)
1c37(9): nop 0x0(%rax,%rax,1)
1c40(2): xor %edi,%edi
1c42(3): call %r9
1c45(5): jmp 0xffffff44(%rip)
1c4a(5): call 0xfffff6a6(%rip)

"parse_gnu_standard_options_only" :
1c50(2): push %r14
1c52(2): push %r13
1c54(3): mov %r8,%r14
1c57(2): push %r12
1c59(1): push %rbp
1c5a(3): mov %rdx,%r12
1c5d(1): push %rbx
1c5e(3): mov %rcx,%r13
1c61(7): sub $0xd0,%rsp
1c68(2): test %al,%al
1c6a(8): mov 0x100(%rsp),%rbp
1c72(2): jz 0x39(%rip)
1c74(5): movaps %xmm0,0x50(%rsp)
1c79(5): movaps %xmm1,0x60(%rsp)
1c7e(5): movaps %xmm2,0x70(%rsp)
1c83(8): movaps %xmm3,0x80(%rsp)
1c8b(8): movaps %xmm4,0x90(%rsp)
1c93(8): movaps %xmm5,0xa0(%rsp)
1c9b(8): movaps %xmm6,0xb0(%rsp)
1ca3(8): movaps %xmm7,0xc0(%rsp)
1cab(9): mov $0x28,%rax
1cb4(5): mov %rax,0x18(%rsp)
1cb9(2): xor %eax,%eax
1cbb(7): lea 0x321f(%rip),%rdx
1cc2(7): lea 0x2c9a(%rip),%rax
1cc9(3): test %r9b,%r9b
1ccc(7): lea 0x204eed(%rip),%rcx
1cd3(4): cmove %rax,%rdx
1cd7(3): xor %r8d,%r8d
1cda(6): mov 0x2053c0(%rip),%ebx
1ce0(a): mov $0x1,0x2053b6(%rip)
1cea(5): call 0xfffff616(%rip)
1cef(3): cmp $0xff,%eax
1cf2(2): jz 0x66(%rip)
1cf4(3): cmp $0x68,%eax
1cf7(6): jz 0x89(%rip)
1cfd(3): cmp $0x76,%eax
1d00(2): jnz 0x50(%rip)
1d02(8): lea 0x108(%rsp),%rax
1d0a(7): mov 0x205377(%rip),%rdi
1d11(3): mov %rsp,%r8
1d14(3): mov %r14,%rcx
1d17(3): mov %r13,%rdx
1d1a(3): mov %r12,%rsi
1d1d(5): mov %rax,0x8(%rsp)
1d22(5): lea 0x20(%rsp),%rax
1d27(7): mov $0x30,(%rsp)
1d2e(8): mov $0x30,0x4(%rsp)
1d36(5): mov %rax,0x10(%rsp)
1d3b(5): call 0x21c5(%rip)
1d40(2): xor %edi,%edi
1d42(5): call 0xfffff70e(%rip)
1d47(9): nop 0x0(%rax,%rax,1)
1d50(6): mov 0x2052c2(%rip),%edi
1d56(2): call %rbp
1d58(5): mov 0x18(%rsp),%rax
1d5d(9): xor $0x28,%rax
1d66(6): mov %ebx,0x205334(%rip)
1d6c(2): jnz 0x1a(%rip)
1d6e(7): add $0xd0,%rsp
1d75(1): pop %rbx
1d76(1): pop %rbp
1d77(2): pop %r12
1d79(2): pop %r13
1d7b(2): pop %r14
1d7d(1): ret near (%rsp)
1d7e(2): nop 
1d80(2): xor %edi,%edi
1d82(2): call %rbp
1d84(2): jmp 0xffffffd4(%rip)
1d86(5): call 0xfffff56a(%rip)

"set_program_name" :
1d90(3): test %rdi,%rdi
1d93(1): push %rbx
1d94(2): jz 0x79(%rip)
1d96(5): mov $0x2f,%esi
1d9b(3): mov %rdi,%rbx
1d9e(5): call 0xfffff582(%rip)
1da3(3): test %rax,%rax
1da6(2): jz 0x57(%rip)
1da8(4): lea 0x1(%rax),%r8
1dac(3): mov %r8,%rdx
1daf(3): sub %rbx,%rdx
1db2(4): cmp $0x6,%rdx
1db6(2): jle 0x47(%rip)
1db8(4): lea 0xfffffffa(%rax),%rsi
1dbc(7): lea 0x2bed(%rip),%rdi
1dc3(5): mov $0x7,%ecx
1dc8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1dca(3): setnbe %dl
1dcd(3): sbb $0x0,%dl
1dd0(2): test %dl,%dl
1dd2(2): jnz 0x2b(%rip)
1dd4(7): lea 0x2bdd(%rip),%rdi
1ddb(5): mov $0x3,%ecx
1de0(3): mov %r8,%rsi
1de3(3): mov %r8,%rbx
1de6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1de8(3): setnbe %dl
1deb(3): sbb $0x0,%dl
1dee(2): test %dl,%dl
1df0(2): jnz 0xd(%rip)
1df2(4): lea 0x4(%rax),%rbx
1df6(7): mov %rbx,0x205283(%rip)
1dfd(7): mov %rbx,0x2052dc(%rip)
1e04(7): mov %rbx,0x20528d(%rip)
1e0b(1): pop %rbx
1e0c(1): ret near (%rsp)
1e0d(7): mov 0x2052ac(%rip),%rcx
1e14(7): lea 0x2b5d(%rip),%rdi
1e1b(5): mov $0x37,%edx
1e20(5): mov $0x1,%esi
1e25(5): call 0xfffff63b(%rip)
1e2a(5): call 0xfffff406(%rip)

"gettext_quote.part.1" :
1e30(1): push %rbp
1e31(1): push %rbx
1e32(3): mov %rdi,%rbp
1e35(2): mov %esi,%ebx
1e37(4): sub $0x8,%rsp
1e3b(5): call 0x26a5(%rip)
1e40(3): movzx (%rax),%edx
1e43(3): and $0xdf,%edx
1e46(3): cmp $0x55,%dl
1e49(2): jz 0x77(%rip)
1e4b(3): cmp $0x47,%dl
1e4e(2): jz 0x22(%rip)
1e50(7): lea 0x2b74(%rip),%rax
1e57(7): lea 0x2b6f(%rip),%rdx
1e5e(3): cmp $0x9,%ebx
1e61(4): cmovne %rdx,%rax
1e65(4): add $0x8,%rsp
1e69(1): pop %rbx
1e6a(1): pop %rbp
1e6b(1): ret near (%rsp)
1e6c(4): nop 0x0(%rax)
1e70(4): movzx 0x1(%rax),%edx
1e74(3): and $0xdf,%edx
1e77(3): cmp $0x42,%dl
1e7a(2): jnz 0xffffffd6(%rip)
1e7c(4): cmp $0x31,0x2(%rax)
1e80(2): jnz 0xffffffd0(%rip)
1e82(4): cmp $0x38,0x3(%rax)
1e86(2): jnz 0xffffffca(%rip)
1e88(4): cmp $0x30,0x4(%rax)
1e8c(2): jnz 0xffffffc4(%rip)
1e8e(4): cmp $0x33,0x5(%rax)
1e92(2): jnz 0xffffffbe(%rip)
1e94(4): cmp $0x30,0x6(%rax)
1e98(2): jnz 0xffffffb8(%rip)
1e9a(4): cmp $0x0,0x7(%rax)
1e9e(2): jnz 0xffffffb2(%rip)
1ea0(4): cmp $0x60,0x0(%rbp)
1ea4(7): lea 0x2b19(%rip),%rax
1eab(7): lea 0x2b16(%rip),%rdx
1eb2(4): cmovne %rdx,%rax
1eb6(4): add $0x8,%rsp
1eba(1): pop %rbx
1ebb(1): pop %rbp
1ebc(1): ret near (%rsp)
1ebd(3): nop (%rax)
1ec0(4): movzx 0x1(%rax),%edx
1ec4(3): and $0xdf,%edx
1ec7(3): cmp $0x54,%dl
1eca(2): jnz 0xffffff86(%rip)
1ecc(4): movzx 0x2(%rax),%edx
1ed0(3): and $0xdf,%edx
1ed3(3): cmp $0x46,%dl
1ed6(6): jnz 0xffffff7a(%rip)
1edc(4): cmp $0x2d,0x3(%rax)
1ee0(6): jnz 0xffffff70(%rip)
1ee6(4): cmp $0x38,0x4(%rax)
1eea(6): jnz 0xffffff66(%rip)
1ef0(4): cmp $0x0,0x5(%rax)
1ef4(6): jnz 0xffffff5c(%rip)
1efa(4): cmp $0x60,0x0(%rbp)
1efe(7): lea 0x2ab7(%rip),%rax
1f05(7): lea 0x2ab4(%rip),%rdx
1f0c(4): cmovne %rdx,%rax
1f10(4): add $0x8,%rsp
1f14(1): pop %rbx
1f15(1): pop %rbp
1f16(1): ret near (%rsp)

"quotearg_buffer_restyled" :
1f20(2): push %r15
1f22(2): push %r14
1f24(3): mov %r8d,%r15d
1f27(2): push %r13
1f29(2): push %r12
1f2b(3): mov %rdi,%r14
1f2e(1): push %rbp
1f2f(1): push %rbx
1f30(3): mov %r9d,%ebx
1f33(3): mov %rsi,%r13
1f36(3): mov %rcx,%rbp
1f39(3): and $0x2,%ebx
1f3c(7): sub $0xb8,%rsp
1f43(8): mov 0xf0(%rsp),%rax
1f4b(5): mov %rdx,0x10(%rsp)
1f50(5): mov %r8d,0x8(%rsp)
1f55(5): mov %r9d,0x78(%rsp)
1f5a(5): mov %rax,0x20(%rsp)
1f5f(8): mov 0xf8(%rsp),%rax
1f67(5): mov %rax,0x68(%rsp)
1f6c(8): mov 0x100(%rsp),%rax
1f74(5): mov %rax,0x60(%rsp)
1f79(9): mov $0x28,%rax
1f82(8): mov %rax,0xa8(%rsp)
1f8a(2): xor %eax,%eax
1f8c(5): call 0xfffff344(%rip)
1f91(4): cmp $0xa,%r15d
1f95(5): mov %rax,0x58(%rsp)
1f9a(6): jnbe 0x11b5(%rip)
1fa0(7): lea 0x2a79(%rip),%rcx
1fa7(3): mov %r15d,%edx
1faa(4): movsxd 0x0(%rcx,%rdx,4),%rax
1fae(3): add %rcx,%rax
1fb1(2): jmp %rax
1fb3(5): mov $0x1,0xe(%rsp)
1fb8(5): mov $0x0,0x7c(%rsp)
1fbd(3): xor %r12d,%r12d
1fc0(9): mov $0x0,0x50(%rsp)
1fc9(5): mov $0x1,0xf(%rsp)
1fce(5): mov $0x0,0xd(%rsp)
1fd3(7): lea 0x29f3(%rip),%rax
1fda(9): mov $0x1,0x18(%rsp)
1fe3(3): xor %r15d,%r15d
1fe6(8): mov $0x2,0x8(%rsp)
1fee(5): mov %rax,0x48(%rsp)
1ff3(3): xor %r11d,%r11d
1ff6(3): mov %rbp,%rax
1ff9(3): mov %r12d,%r8d
1ffc(3): mov %r11,%rbp
1fff(3): mov %rax,%r11
2002(6): nop 0x0(%rax,%rax,1)
2008(3): cmp %rbp,%r11
200b(4): setnz %r12b
200f(4): cmp $0xffffffff,%r11
2013(2): jnz 0xf(%rip)
2015(5): mov 0x10(%rsp),%rax
201a(4): cmp $0x0,0x0(%rax,%rbp,1)
201e(4): setnz %r12b
2022(3): test %r12b,%r12b
2025(6): jz 0x65b(%rip)
202b(5): cmp $0x2,0x8(%rsp)
2030(5): mov 0x10(%rsp),%rdi
2035(4): lea 0x0(%rdi,%rbp,1),%r9
2039(3): setnz %al
203c(4): and 0xd(%rsp),%al
2040(3): mov %eax,%r10d
2043(6): jz 0xad(%rip)
2049(5): mov 0x18(%rsp),%rax
204e(3): test %rax,%rax
2051(6): jz 0x42f(%rip)
2057(4): cmp $0xffffffff,%r11
205b(5): lea 0x0(%rbp,%rax,1),%rbx
2060(2): jnz 0x30(%rip)
2062(4): cmp $0x1,%rax
2066(2): jbe 0x2a(%rip)
2068(5): mov %r8b,0x38(%rsp)
206d(5): mov %r10b,0x30(%rsp)
2072(5): mov %r9,0x28(%rsp)
2077(5): call 0xfffff269(%rip)
207c(6): movzx 0x38(%rsp),%r8d
2082(6): movzx 0x30(%rsp),%r10d
2088(3): mov %rax,%r11
208b(5): mov 0x28(%rsp),%r9
2090(3): cmp %r11,%rbx
2093(5): mov %r10b,0x28(%rsp)
2098(6): jnbe 0x5b8(%rip)
209e(5): mov 0x18(%rsp),%rdx
20a3(5): mov 0x48(%rsp),%rsi
20a8(3): mov %r9,%rdi
20ab(5): mov %r11,0x40(%rsp)
20b0(5): mov %r8b,0x38(%rsp)
20b5(5): mov %r9,0x30(%rsp)
20ba(5): call 0xfffff296(%rip)
20bf(2): test %eax,%eax
20c1(5): mov 0x30(%rsp),%r9
20c6(6): movzx 0x38(%rsp),%r8d
20cc(5): mov 0x40(%rsp),%r11
20d1(6): jnz 0x57f(%rip)
20d7(5): cmp $0x0,0xf(%rsp)
20dc(6): movzx 0x28(%rsp),%r10d
20e2(6): jnz 0xf83(%rip)
20e8(8): nop 0x0(%rax,%rax,1)
20f0(4): movzx (%r9),%ebx
20f4(3): cmp $0x7e,%bl
20f7(6): jnbe 0x321(%rip)
20fd(7): lea 0x2948(%rip),%rcx
2104(3): movzx %bl,%edx
2107(4): movsxd 0x0(%rcx,%rdx,4),%rax
210b(3): add %rcx,%rax
210e(2): jmp %rax
2110(3): xor %r10d,%r10d
2113(4): cmp $0x1,%r11
2117(3): setnz %al
211a(4): cmp $0xffffffff,%r11
211e(2): jnz 0xe(%rip)
2120(5): mov 0x10(%rsp),%rax
2125(4): cmp $0x0,0x1(%rax)
2129(3): setnz %al
212c(5): cmp $0x2,0x8(%rsp)
2131(3): setz %dl
2134(2): test %al,%al
2136(6): jz 0x252(%rip)
213c(3): xor %r12d,%r12d
213f(2): xor %eax,%eax
2141(7): nop 0x0(%rax)
2148(5): cmp $0x1,0xd(%rsp)
214d(6): jnz 0x115(%rip)
2153(2): test %dl,%dl
2155(6): jnz 0x10d(%rip)
215b(5): mov 0x20(%rsp),%rsi
2160(3): test %rsi,%rsi
2163(2): jz 0x16(%rip)
2165(2): mov %ebx,%edx
2167(3): shr $0x5,%dl
216a(3): movzx %dl,%edx
216d(3): mov 0x0(%rsi,%rdx,4),%edx
2170(3): bt %ebx,%edx
2173(6): jb 0x150(%rip)
2179(3): test %r10b,%r10b
217c(6): jnz 0x147(%rip)
2182(3): xor $0x1,%eax
2185(4): add $0x1,%rbp
2189(3): and %r8d,%eax
218c(2): test %al,%al
218e(2): jz 0x22(%rip)
2190(3): cmp %r15,%r13
2193(2): jbe 0x7(%rip)
2195(5): mov $0x27,0x0(%r14,%r15,1)
219a(4): lea 0x1(%r15),%rax
219e(3): cmp %rax,%r13
21a1(2): jbe 0x8(%rip)
21a3(6): mov $0x27,0x1(%r14,%r15,1)
21a9(4): add $0x2,%r15
21ad(3): xor %r8d,%r8d
21b0(3): cmp %r13,%r15
21b3(2): jnb 0x6(%rip)
21b5(4): mov %bl,0x0(%r14,%r15,1)
21b9(5): movzx 0xe(%rsp),%edi
21be(4): add $0x1,%r15
21c2(5): mov $0x0,%eax
21c7(3): test %r12b,%r12b
21ca(3): cmove %eax,%edi
21cd(5): mov %dil,0xe(%rsp)
21d2(5): jmp 0xfffffe36(%rip)
21d7(9): nop 0x0(%rax,%rax,1)
21e0(3): xor %r10d,%r10d
21e3(4): mov 0x8(%rsp),%eax
21e7(3): cmp $0x2,%eax
21ea(6): jz 0x5be(%rip)
21f0(3): cmp $0x5,%eax
21f3(6): jz 0x575(%rip)
21f9(3): cmp $0x2,%eax
21fc(5): mov $0x3f,%ebx
2201(3): setz %dl
2204(3): xor %r12d,%r12d
2207(2): xor %eax,%eax
2209(5): jmp 0xffffff3f(%rip)
220e(2): nop 
2210(3): xor %r10d,%r10d
2213(5): cmp $0x2,0x8(%rsp)
2218(6): jz 0x508(%rip)
221e(5): mov %r12b,0x7c(%rsp)
2223(2): xor %edx,%edx
2225(2): xor %eax,%eax
2227(5): mov $0x27,%ebx
222c(5): jmp 0xffffff1c(%rip)
2231(7): nop 0x0(%rax)
2238(5): mov $0x9,%edx
223d(5): mov $0x74,%ebx
2242(5): cmp $0x2,0x8(%rsp)
2247(3): setz %al
224a(4): and 0xf(%rsp),%al
224e(6): jnz 0x150(%rip)
2254(5): cmp $0x0,0xd(%rsp)
2259(2): jnz 0x67(%rip)
225b(2): mov %edx,%ebx
225d(3): xor %r12d,%r12d
2260(2): xor %eax,%eax
2262(5): cmp $0x0,0xf(%rsp)
2267(6): jnz 0xfffffef4(%rip)
226d(5): jmp 0xffffff0c(%rip)
2272(6): nop 0x0(%rax,%rax,1)
2278(5): mov $0x8,%edx
227d(5): mov $0x62,%ebx
2282(2): jmp 0xffffffd2(%rip)
2284(4): nop 0x0(%rax)
2288(5): cmp $0x2,0x8(%rsp)
228d(6): jz 0x3d3(%rip)
2293(5): cmp $0x0,0xd(%rsp)
2298(6): jz 0x218(%rip)
229e(5): cmp $0x0,0xf(%rsp)
22a3(6): jz 0x20d(%rip)
22a9(6): cmp $0x0,0x18(%rsp)
22af(6): jnz 0x3bc(%rip)
22b5(5): mov $0x5c,%ebx
22ba(6): nop 0x0(%rax,%rax,1)
22c0(3): xor %r12d,%r12d
22c3(5): cmp $0x2,0x8(%rsp)
22c8(3): setz %dl
22cb(5): cmp $0x0,0xf(%rsp)
22d0(2): mov %edx,%eax
22d2(6): jnz 0x856(%rip)
22d8(3): mov %r8d,%eax
22db(3): xor $0x1,%eax
22de(2): and %dl,%al
22e0(2): jz 0x31(%rip)
22e2(3): cmp %r15,%r13
22e5(2): jbe 0x7(%rip)
22e7(5): mov $0x27,0x0(%r14,%r15,1)
22ec(4): lea 0x1(%r15),%rdx
22f0(3): cmp %rdx,%r13
22f3(2): jbe 0x8(%rip)
22f5(6): mov $0x24,0x1(%r14,%r15,1)
22fb(4): lea 0x2(%r15),%rdx
22ff(3): cmp %rdx,%r13
2302(2): jbe 0x8(%rip)
2304(6): mov $0x27,0x2(%r14,%r15,1)
230a(4): add $0x3,%r15
230e(3): mov %eax,%r8d
2311(3): cmp %r15,%r13
2314(2): jbe 0x7(%rip)
2316(5): mov $0x5c,0x0(%r14,%r15,1)
231b(4): add $0x1,%r15
231f(4): add $0x1,%rbp
2323(5): jmp 0xfffffe8d(%rip)
2328(8): nop 0x0(%rax,%rax,1)
2330(5): cmp $0x0,0xd(%rsp)
2335(6): jnz 0x1ce(%rip)
233b(2): xor %edx,%edx
233d(5): test $0x1,0x78(%rsp)
2342(6): jz 0xffffff19(%rip)
2348(4): add $0x1,%rbp
234c(5): jmp 0xfffffcbc(%rip)
2351(7): nop 0x0(%rax)
2358(5): cmp $0x2,0x8(%rsp)
235d(3): setz %dl
2360(2): xor %eax,%eax
2362(5): jmp 0xfffffde6(%rip)
2367(9): nop 0x0(%rax,%rax,1)
2370(5): mov $0x7,%edx
2375(5): mov $0x61,%ebx
237a(5): jmp 0xfffffeda(%rip)
237f(1): nop 
2380(5): cmp $0x2,0x8(%rsp)
2385(3): setz %dl
2388(3): test %rbp,%rbp
238b(6): jnz 0xfffffdb1(%rip)
2391(5): movzx 0xf(%rsp),%eax
2396(2): and %dl,%al
2398(6): jz 0xfffffdb0(%rip)
239e(3): mov %r11,%rbp
23a1(8): mov $0x2,0x8(%rsp)
23a9(5): jmp 0x700(%rip)
23ae(2): nop 
23b0(5): cmp $0x2,0x8(%rsp)
23b5(3): setz %dl
23b8(3): xor %r12d,%r12d
23bb(2): jmp 0xffffffd6(%rip)
23bd(3): nop (%rax)
23c0(5): cmp $0x2,0x8(%rsp)
23c5(5): mov $0x20,%ebx
23ca(3): setz %dl
23cd(2): jmp 0xffffffc4(%rip)
23cf(1): nop 
23d0(5): mov $0xd,%edx
23d5(5): mov $0x72,%ebx
23da(5): jmp 0xfffffe68(%rip)
23df(1): nop 
23e0(5): mov $0xc,%edx
23e5(5): mov $0x66,%ebx
23ea(5): jmp 0xfffffe6a(%rip)
23ef(1): nop 
23f0(5): mov $0xb,%edx
23f5(5): mov $0x76,%ebx
23fa(5): jmp 0xfffffe5a(%rip)
23ff(1): nop 
2400(5): mov $0xa,%edx
2405(5): mov $0x6e,%ebx
240a(5): jmp 0xfffffe38(%rip)
240f(1): nop 
2410(3): xor %r10d,%r10d
2413(5): nop 0x0(%rax,%rax,1)
2418(6): cmp $0x1,0x58(%rsp)
241e(6): jnz 0x3aa(%rip)
2424(5): mov %r11,0x38(%rsp)
2429(5): mov %r8b,0x30(%rsp)
242e(5): mov %r10b,0x28(%rsp)
2433(5): call 0xfffff06d(%rip)
2438(3): mov (%rax),%rcx
243b(3): movzx %bl,%edx
243e(6): movzx 0x28(%rsp),%r10d
2444(6): movzx 0x30(%rsp),%r8d
244a(5): mov 0x38(%rsp),%r11
244f(5): mov $0x1,%edi
2454(4): movzx 0x0(%rcx,%rdx,2),%eax
2458(4): and $0x4000,%ax
245c(4): setnz %r12b
2460(3): setz %al
2463(4): and 0xd(%rsp),%al
2467(2): test %al,%al
2469(6): jnz 0x998(%rip)
246f(5): cmp $0x2,0x8(%rsp)
2474(3): setz %dl
2477(5): jmp 0xfffffcd1(%rip)
247c(4): nop 0x0(%rax)
2480(4): movzx (%r9),%ebx
2484(3): cmp $0x7e,%bl
2487(2): jnbe 0xffffff89(%rip)
2489(7): lea 0x27b8(%rip),%rcx
2490(3): movzx %bl,%edx
2493(4): movsxd 0x0(%rcx,%rdx,4),%rax
2497(3): add %rcx,%rax
249a(2): jmp %rax
249c(4): nop 0x0(%rax)
24a0(3): xor %r10d,%r10d
24a3(5): cmp $0x0,0xd(%rsp)
24a8(6): jnz 0xfffffdf6(%rip)
24ae(2): nop 
24b0(5): mov $0x5c,%edx
24b5(5): mov $0x5c,%ebx
24ba(5): jmp 0xfffffd9a(%rip)
24bf(1): nop 
24c0(5): mov $0xc,%edx
24c5(3): xor %r10d,%r10d
24c8(5): mov $0x66,%ebx
24cd(5): jmp 0xfffffd87(%rip)
24d2(6): nop 0x0(%rax,%rax,1)
24d8(5): mov $0xa,%edx
24dd(3): xor %r10d,%r10d
24e0(5): mov $0x6e,%ebx
24e5(5): jmp 0xfffffd5d(%rip)
24ea(6): nop 0x0(%rax,%rax,1)
24f0(5): mov $0x61,%ebx
24f5(5): jmp 0xfffffdcb(%rip)
24fa(6): nop 0x0(%rax,%rax,1)
2500(3): xor %r10d,%r10d
2503(5): cmp $0x2,0x8(%rsp)
2508(3): setz %dl
250b(5): cmp $0x0,0xf(%rsp)
2510(6): jnz 0xb9a(%rip)
2516(3): mov %r8d,%eax
2519(3): mov %r15,%rcx
251c(3): xor $0x1,%eax
251f(2): and %dl,%al
2521(2): jz 0x2f(%rip)
2523(3): cmp %r15,%r13
2526(2): jbe 0x7(%rip)
2528(5): mov $0x27,0x0(%r14,%r15,1)
252d(4): lea 0x1(%r15),%rcx
2531(3): cmp %rcx,%r13
2534(2): jbe 0x8(%rip)
2536(6): mov $0x24,0x1(%r14,%r15,1)
253c(4): lea 0x2(%r15),%rcx
2540(3): cmp %rcx,%r13
2543(6): jnbe 0x636(%rip)
2549(4): lea 0x3(%r15),%rcx
254d(3): mov %eax,%r8d
2550(3): cmp %rcx,%r13
2553(2): jbe 0x7(%rip)
2555(5): mov $0x5c,0x0(%r14,%rcx,1)
255a(5): cmp $0x2,0x8(%rsp)
255f(4): lea 0x1(%rcx),%r15
2563(6): jz 0x606(%rip)
2569(4): lea 0x1(%rbp),%rax
256d(3): cmp %r11,%rax
2570(2): jnb 0x1b(%rip)
2572(5): mov 0x10(%rsp),%rax
2577(5): movzx 0x1(%rax,%rbp,1),%eax
257c(4): mov %al,0x28(%rsp)
2580(3): sub $0x30,%eax
2583(2): cmp $0x9,%al
2585(6): jbe 0x834(%rip)
258b(3): mov %r12d,%eax
258e(5): mov $0x30,%ebx
2593(3): xor %r12d,%r12d
2596(5): jmp 0xfffffbb2(%rip)
259b(5): nop 0x0(%rax,%rax,1)
25a0(5): cmp $0x2,0x8(%rsp)
25a5(3): mov %r10d,%r12d
25a8(3): setz %dl
25ab(3): xor %r10d,%r10d
25ae(2): xor %eax,%eax
25b0(5): jmp 0xfffffb98(%rip)
25b5(3): nop (%rax)
25b8(5): cmp $0x2,0x8(%rsp)
25bd(3): setz %dl
25c0(3): xor %r10d,%r10d
25c3(5): jmp 0xfffffdc5(%rip)
25c8(8): nop 0x0(%rax,%rax,1)
25d0(5): cmp $0x2,0x8(%rsp)
25d5(3): setz %dl
25d8(3): xor %r10d,%r10d
25db(3): xor %r12d,%r12d
25de(5): jmp 0xfffffdb3(%rip)
25e3(5): nop 0x0(%rax,%rax,1)
25e8(5): cmp $0x2,0x8(%rsp)
25ed(3): mov %r10d,%r12d
25f0(5): mov $0x20,%ebx
25f5(3): setz %dl
25f8(3): xor %r10d,%r10d
25fb(5): jmp 0xfffffd96(%rip)
2600(5): mov $0xd,%edx
2605(3): xor %r10d,%r10d
2608(5): mov $0x72,%ebx
260d(5): jmp 0xfffffc35(%rip)
2612(6): nop 0x0(%rax,%rax,1)
2618(5): mov $0x76,%ebx
261d(5): jmp 0xfffffca3(%rip)
2622(6): nop 0x0(%rax,%rax,1)
2628(5): mov $0x9,%edx
262d(3): xor %r10d,%r10d
2630(5): mov $0x74,%ebx
2635(5): jmp 0xfffffc0d(%rip)
263a(6): nop 0x0(%rax,%rax,1)
2640(5): mov $0x62,%ebx
2645(5): jmp 0xfffffc7b(%rip)
264a(6): nop 0x0(%rax,%rax,1)
2650(3): xor %r10d,%r10d
2653(5): jmp 0xfffffa9d(%rip)
2658(8): nop 0x0(%rax,%rax,1)
2660(5): cmp $0x0,0xf(%rsp)
2665(6): jnz 0x96b(%rip)
266b(4): add $0x1,%rbp
266f(3): mov %r8d,%eax
2672(3): xor %r12d,%r12d
2675(5): mov $0x5c,%ebx
267a(5): jmp 0xfffffb12(%rip)
267f(1): nop 
2680(5): cmp $0x2,0x8(%rsp)
2685(5): movzx 0xf(%rsp),%ebx
268a(3): mov %r8d,%r12d
268d(3): mov %r11,%rbp
2690(3): setz %dl
2693(2): mov %ebx,%eax
2695(3): test %r15,%r15
2698(3): setz %cl
269b(2): and %edx,%eax
269d(2): and %cl,%al
269f(6): jnz 0xa67(%rip)
26a5(2): mov %ebx,%eax
26a7(3): xor $0x1,%eax
26aa(2): and %al,%dl
26ac(6): jz 0x970(%rip)
26b2(5): cmp $0x0,0x7c(%rsp)
26b7(6): jz 0x963(%rip)
26bd(5): cmp $0x0,0xe(%rsp)
26c2(6): jnz 0x9fb(%rip)
26c8(3): test %r13,%r13
26cb(3): setz %al
26ce(6): cmp $0x0,0x50(%rsp)
26d4(3): setnz %dl
26d7(2): and %dl,%al
26d9(6): jz 0xa23(%rip)
26df(5): mov 0x50(%rsp),%r13
26e4(7): lea 0x22e2(%rip),%rbx
26eb(4): mov $0x27,(%r14)
26ef(8): mov $0x2,0x8(%rsp)
26f7(6): mov $0x1,%r15d
26fd(9): mov $0x1,0x18(%rsp)
2706(5): mov $0x0,0xf(%rsp)
270b(5): mov %rbx,0x48(%rsp)
2710(4): mov %al,0x7c(%rsp)
2714(5): jmp 0xfffff8df(%rip)
2719(7): nop 0x0(%rax)
2720(5): cmp $0x0,0xf(%rsp)
2725(6): jnz 0x8ab(%rip)
272b(3): test %r13,%r13
272e(6): jz 0x402(%rip)
2734(2): xor %edx,%edx
2736(6): cmp $0x0,0x50(%rsp)
273c(6): jnz 0x3f4(%rip)
2742(5): mov %r13,0x50(%rsp)
2747(4): add $0x3,%r15
274b(2): xor %eax,%eax
274d(5): mov %r12b,0x7c(%rsp)
2752(3): xor %r8d,%r8d
2755(3): mov %rdx,%r13
2758(5): mov $0x27,%ebx
275d(5): jmp 0xfffffa1c(%rip)
2762(6): nop 0x0(%rax,%rax,1)
2768(5): test $0x4,0x78(%rsp)
276d(2): jz 0x23(%rip)
276f(4): lea 0x2(%rbp),%rcx
2773(3): cmp %r11,%rcx
2776(2): jnb 0x1a(%rip)
2778(5): mov 0x10(%rsp),%rax
277d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2782(6): jz 0x790(%rip)
2788(8): nop 0x0(%rax,%rax,1)
2790(2): xor %edx,%edx
2792(3): xor %r12d,%r12d
2795(2): xor %eax,%eax
2797(5): mov $0x3f,%ebx
279c(5): jmp 0xfffff9ac(%rip)
27a1(7): nop 0x0(%rax)
27a8(5): cmp $0x0,0xf(%rsp)
27ad(6): jnz 0x823(%rip)
27b3(3): xor %r12d,%r12d
27b6(2): xor %eax,%eax
27b8(5): mov $0x3f,%ebx
27bd(5): jmp 0xfffff9bc(%rip)
27c2(6): nop 0x0(%rax,%rax,1)
27c8(8): lea 0xa0(%rsp),%rax
27d0(4): cmp $0xffffffff,%r11
27d4(c): mov $0x0,0xa0(%rsp)
27e0(5): mov %rax,0x28(%rsp)
27e5(2): jnz 0x2f(%rip)
27e7(5): mov 0x10(%rsp),%rdi
27ec(5): mov %r8b,0x40(%rsp)
27f1(5): mov %r10b,0x38(%rsp)
27f6(5): mov %r9,0x30(%rsp)
27fb(5): call 0xffffeae5(%rip)
2800(6): movzx 0x40(%rsp),%r8d
2806(6): movzx 0x38(%rsp),%r10d
280c(3): mov %rax,%r11
280f(5): mov 0x30(%rsp),%r9
2814(8): lea 0x9c(%rsp),%rax
281c(2): xor %ecx,%ecx
281e(4): mov %bl,0x7e(%rsp)
2822(5): mov %r8b,0x7d(%rsp)
2827(3): mov %rcx,%rbx
282a(8): mov %r9,0x88(%rsp)
2832(5): mov %rax,0x38(%rsp)
2837(5): mov %r10b,0x7f(%rsp)
283c(8): mov %r15,0x80(%rsp)
2844(5): mov %r14,0x40(%rsp)
2849(5): mov %r13,0x70(%rsp)
284e(5): mov %r11,0x30(%rsp)
2853(5): mov 0x10(%rsp),%rax
2858(5): lea 0x0(%rbp,%rbx,1),%r14
285d(5): mov 0x30(%rsp),%rdx
2862(5): mov 0x28(%rsp),%rcx
2867(5): mov 0x38(%rsp),%rdi
286c(4): lea 0x0(%rax,%r14,1),%r13
2870(3): sub %r14,%rdx
2873(3): mov %r13,%rsi
2876(5): call 0x1afa(%rip)
287b(3): test %rax,%rax
287e(3): mov %rax,%r15
2881(2): jz 0x50(%rip)
2883(4): cmp $0xffffffff,%rax
2887(6): jz 0x61e(%rip)
288d(4): cmp $0xfffffffe,%rax
2891(6): jz 0x5a0(%rip)
2897(5): cmp $0x2,0x8(%rsp)
289c(3): setz %al
289f(4): and 0xf(%rsp),%al
28a3(6): jnz 0x19d(%rip)
28a9(7): mov 0x9c(%rsp),%edi
28b0(5): call 0xffffebe0(%rip)
28b5(5): mov 0x28(%rsp),%rdi
28ba(2): test %eax,%eax
28bc(5): mov $0x0,%eax
28c1(4): cmove %eax,%r12d
28c5(3): add %r15,%rbx
28c8(5): call 0xffffebb8(%rip)
28cd(2): test %eax,%eax
28cf(2): jz 0xffffff84(%rip)
28d1(3): mov %r12d,%edx
28d4(3): mov %rbx,%rdi
28d7(6): movzx 0x7d(%rsp),%r8d
28dd(3): xor $0x1,%edx
28e0(5): movzx 0x7e(%rsp),%ebx
28e5(6): movzx 0x7f(%rsp),%r10d
28eb(4): and 0xd(%rsp),%dl
28ef(8): mov 0x80(%rsp),%r15
28f7(5): mov 0x40(%rsp),%r14
28fc(5): mov 0x70(%rsp),%r13
2901(5): mov 0x30(%rsp),%r11
2906(4): cmp $0x1,%rdi
290a(6): jbe 0x601(%rip)
2910(3): mov %rdi,%rcx
2913(2): xor %esi,%esi
2915(6): movzx 0xf(%rsp),%r9d
291b(3): add %rbp,%rcx
291e(5): mov 0x10(%rsp),%rdi
2923(5): jmp 0xbb(%rip)
2928(8): nop 0x0(%rax,%rax,1)
2930(5): cmp $0x2,0x8(%rsp)
2935(3): setz %al
2938(3): test %r9b,%r9b
293b(6): jnz 0x4b5(%rip)
2941(3): mov %r8d,%esi
2944(3): xor $0x1,%esi
2947(3): and %sil,%al
294a(2): jz 0x31(%rip)
294c(3): cmp %r15,%r13
294f(2): jbe 0x7(%rip)
2951(5): mov $0x27,0x0(%r14,%r15,1)
2956(4): lea 0x1(%r15),%rsi
295a(3): cmp %rsi,%r13
295d(2): jbe 0x8(%rip)
295f(6): mov $0x24,0x1(%r14,%r15,1)
2965(4): lea 0x2(%r15),%rsi
2969(3): cmp %rsi,%r13
296c(2): jbe 0x8(%rip)
296e(6): mov $0x27,0x2(%r14,%r15,1)
2974(4): add $0x3,%r15
2978(3): mov %eax,%r8d
297b(3): cmp %r15,%r13
297e(2): jbe 0x7(%rip)
2980(5): mov $0x5c,0x0(%r14,%r15,1)
2985(4): lea 0x1(%r15),%rax
2989(3): cmp %rax,%r13
298c(2): jbe 0xf(%rip)
298e(2): mov %ebx,%eax
2990(3): shr $0x6,%al
2993(3): add $0x30,%eax
2996(5): mov %al,0x1(%r14,%r15,1)
299b(4): lea 0x2(%r15),%rax
299f(3): cmp %rax,%r13
29a2(2): jbe 0x12(%rip)
29a4(2): mov %ebx,%eax
29a6(3): shr $0x3,%al
29a9(3): and $0x7,%eax
29ac(3): add $0x30,%eax
29af(5): mov %al,0x2(%r14,%r15,1)
29b4(3): and $0x7,%ebx
29b7(4): add $0x1,%rbp
29bb(4): add $0x3,%r15
29bf(3): add $0x30,%ebx
29c2(3): cmp %rcx,%rbp
29c5(6): jnb 0xfffff7eb(%rip)
29cb(2): mov %edx,%esi
29cd(3): cmp %r15,%r13
29d0(2): jbe 0x6(%rip)
29d2(4): mov %bl,0x0(%r14,%r15,1)
29d6(4): movzx 0x0(%rdi,%rbp,1),%ebx
29da(4): add $0x1,%r15
29de(2): test %dl,%dl
29e0(6): jnz 0xffffff50(%rip)
29e6(2): mov %esi,%eax
29e8(3): xor $0x1,%eax
29eb(3): and %r8d,%eax
29ee(3): test %r10b,%r10b
29f1(2): jz 0x10(%rip)
29f3(3): cmp %r15,%r13
29f6(2): jbe 0x7(%rip)
29f8(5): mov $0x5c,0x0(%r14,%r15,1)
29fd(4): add $0x1,%r15
2a01(4): add $0x1,%rbp
2a05(3): cmp %rcx,%rbp
2a08(6): jnb 0xfffff784(%rip)
2a0e(2): test %al,%al
2a10(6): jz 0x3fe(%rip)
2a16(3): cmp %r15,%r13
2a19(2): jbe 0x7(%rip)
2a1b(5): mov $0x27,0x0(%r14,%r15,1)
2a20(4): lea 0x1(%r15),%rax
2a24(3): cmp %rax,%r13
2a27(2): jbe 0x8(%rip)
2a29(6): mov $0x27,0x1(%r14,%r15,1)
2a2f(4): add $0x2,%r15
2a33(3): xor %r10d,%r10d
2a36(3): xor %r8d,%r8d
2a39(2): jmp 0xffffff94(%rip)
2a3b(5): nop 0x0(%rax,%rax,1)
2a40(4): cmp $0x1,%r15
2a44(6): jz 0xfffffe65(%rip)
2a4a(5): mov 0x10(%rsp),%rdi
2a4f(4): lea 0x0(%rdi,%r15,1),%rcx
2a53(5): lea 0x1(%rdi,%r14,1),%rdx
2a58(4): lea 0x0(%rcx,%r14,1),%r8
2a5c(2): jmp 0x11(%rip)
2a5e(2): nop 
2a60(4): add $0x1,%rdx
2a64(3): cmp %rdx,%r8
2a67(6): jz 0xfffffe42(%rip)
2a6d(3): movzx (%rdx),%ecx
2a70(3): sub $0x5b,%ecx
2a73(3): cmp $0x21,%cl
2a76(2): jnbe 0xffffffea(%rip)
2a78(5): mov $0x1,%esi
2a7d(3): shl/sal %cl,%rsi
2a80(3): mov %rsi,%rcx
2a83(a): mov $0x8589934635,%rsi
2a8d(3): test %rsi,%rcx
2a90(2): jz 0xffffffd0(%rip)
2a92(5): mov 0x40(%rsp),%r14
2a97(5): mov 0x70(%rsp),%r13
2a9c(5): mov 0x30(%rsp),%rbp
2aa1(8): mov $0x2,0x8(%rsp)
2aa9(5): cmp $0x0,0xd(%rsp)
2aae(2): jz 0x12(%rip)
2ab0(2): test %al,%al
2ab2(5): mov $0x4,%eax
2ab7(5): cmove 0x8(%rsp),%eax
2abc(4): mov %eax,0x8(%rsp)
2ac0(4): sub $0x8,%rsp
2ac4(3): mov %rbp,%rcx
2ac7(3): mov %r13,%rsi
2aca(4): push 0x68(%rsp)
2ace(4): push 0x78(%rsp)
2ad2(3): mov %r14,%rdi
2ad5(2): push $0x0
2ad7(8): mov 0x98(%rsp),%r9d
2adf(5): mov 0x28(%rsp),%r8d
2ae4(5): mov 0x30(%rsp),%rdx
2ae9(4): and $0xfd,%r9d
2aed(5): call 0xfffff433(%rip)
2af2(4): add $0x20,%rsp
2af6(3): mov %rax,%r15
2af9(8): mov 0xa8(%rsp),%rbx
2b01(9): xor $0x28,%rbx
2b0a(3): mov %r15,%rax
2b0d(6): jnz 0x606(%rip)
2b13(7): add $0xb8,%rsp
2b1a(1): pop %rbx
2b1b(1): pop %rbp
2b1c(2): pop %r12
2b1e(2): pop %r13
2b20(2): pop %r14
2b22(2): pop %r15
2b24(1): ret near (%rsp)
2b25(3): nop (%rax)
2b28(3): mov %r11,%rbp
2b2b(5): jmp 0xffffff7e(%rip)
2b30(3): cmp %r15,%r13
2b33(2): jbe 0x7(%rip)
2b35(5): mov $0x27,0x0(%r14,%r15,1)
2b3a(4): lea 0x1(%r15),%rax
2b3e(3): cmp %rax,%r13
2b41(2): jbe 0x8(%rip)
2b43(6): mov $0x5c,0x1(%r14,%r15,1)
2b49(4): lea 0x2(%r15),%rax
2b4d(3): cmp %rax,%r13
2b50(6): jbe 0x5f2(%rip)
2b56(3): mov %r13,%rdx
2b59(6): mov $0x27,0x2(%r14,%r15,1)
2b5f(5): mov 0x50(%rsp),%r13
2b64(5): jmp 0xfffffbde(%rip)
2b69(3): mov %r12d,%eax
2b6c(5): mov $0x30,%ebx
2b71(3): xor %r12d,%r12d
2b74(5): jmp 0xfffff605(%rip)
2b79(6): mov $0x27,0x2(%r14,%r15,1)
2b7f(5): jmp 0xfffff9ca(%rip)
2b84(2): test %ebx,%ebx
2b86(6): jnz 0xfffff42d(%rip)
2b8c(5): mov $0x1,0xd(%rsp)
2b91(3): test %r13,%r13
2b94(6): jnz 0x596(%rip)
2b9a(7): lea 0x1e2c(%rip),%rax
2ba1(9): mov $0x0,0x50(%rsp)
2baa(5): mov $0x1,0xe(%rsp)
2baf(5): mov $0x0,0x7c(%rsp)
2bb4(3): xor %r12d,%r12d
2bb7(5): mov $0x0,0xf(%rsp)
2bbc(9): mov $0x1,0x18(%rsp)
2bc5(5): mov %rax,0x48(%rsp)
2bca(6): mov $0x1,%r15d
2bd0(8): mov $0x2,0x8(%rsp)
2bd8(5): jmp 0xfffff41b(%rip)
2bdd(3): nop (%rax)
2be0(2): test %ebx,%ebx
2be2(6): jnz 0x3fb(%rip)
2be8(3): test %r13,%r13
2beb(6): jz 0x22b(%rip)
2bf1(4): mov $0x22,(%r14)
2bf5(5): mov $0x1,0xe(%rsp)
2bfa(3): xor %r12d,%r12d
2bfd(5): mov $0x0,0x7c(%rsp)
2c02(9): mov $0x0,0x50(%rsp)
2c0b(7): lea 0x1db9(%rip),%rax
2c12(5): mov $0x0,0xf(%rsp)
2c17(5): mov $0x1,0xd(%rsp)
2c1c(9): mov $0x1,0x18(%rsp)
2c25(6): mov $0x1,%r15d
2c2b(5): mov %rax,0x48(%rsp)
2c30(5): jmp 0xfffff3c3(%rip)
2c35(7): lea 0x1d8f(%rip),%rax
2c3c(5): mov $0x1,0xe(%rsp)
2c41(5): mov $0x0,0x7c(%rsp)
2c46(3): xor %r12d,%r12d
2c49(9): mov $0x0,0x50(%rsp)
2c52(5): mov $0x1,0xf(%rsp)
2c57(5): mov $0x1,0xd(%rsp)
2c5c(9): mov $0x1,0x18(%rsp)
2c65(3): xor %r15d,%r15d
2c68(5): mov %rax,0x48(%rsp)
2c6d(8): mov $0x5,0x8(%rsp)
2c75(5): jmp 0xfffff37e(%rip)
2c7a(5): mov $0x1,0xe(%rsp)
2c7f(5): mov $0x0,0x7c(%rsp)
2c84(3): xor %r12d,%r12d
2c87(9): mov $0x0,0x50(%rsp)
2c90(5): mov $0x0,0xf(%rsp)
2c95(3): xor %r15d,%r15d
2c98(5): mov $0x1,0xd(%rsp)
2c9d(9): mov $0x0,0x18(%rsp)
2ca6(9): mov $0x0,0x48(%rsp)
2caf(5): jmp 0xfffff344(%rip)
2cb4(5): cmp $0xa,0x8(%rsp)
2cb9(2): jz 0x58(%rip)
2cbb(7): lea 0x1d0d(%rip),%rsi
2cc2(2): xor %edi,%edi
2cc4(5): mov $0x5,%edx
2cc9(5): call 0xffffe5f7(%rip)
2cce(3): mov %rax,%rcx
2cd1(5): mov %rax,0x68(%rsp)
2cd6(7): lea 0x1cf2(%rip),%rax
2cdd(3): cmp %rax,%rcx
2ce0(6): jz 0x39e(%rip)
2ce6(7): lea 0x1ce0(%rip),%rsi
2ced(2): xor %edi,%edi
2cef(5): mov $0x5,%edx
2cf4(5): call 0xffffe5cc(%rip)
2cf9(3): mov %rax,%rcx
2cfc(5): mov %rax,0x60(%rsp)
2d01(7): lea 0x1cc5(%rip),%rax
2d08(3): cmp %rax,%rcx
2d0b(6): jz 0x389(%rip)
2d11(3): xor %r15d,%r15d
2d14(2): test %ebx,%ebx
2d16(6): jz 0x1c7(%rip)
2d1c(2): test %ebx,%ebx
2d1e(5): mov 0x60(%rsp),%rbx
2d23(5): setnz 0xf(%rsp)
2d28(3): xor %r12d,%r12d
2d2b(3): mov %rbx,%rdi
2d2e(5): call 0xffffe5b2(%rip)
2d33(5): mov %rbx,0x48(%rsp)
2d38(5): mov %rax,0x18(%rsp)
2d3d(5): mov $0x1,0xe(%rsp)
2d42(5): mov $0x0,0x7c(%rsp)
2d47(9): mov $0x0,0x50(%rsp)
2d50(5): mov $0x1,0xd(%rsp)
2d55(5): jmp 0xfffff29e(%rip)
2d5a(5): mov $0x1,0xe(%rsp)
2d5f(5): mov $0x0,0x7c(%rsp)
2d64(3): xor %r12d,%r12d
2d67(9): mov $0x0,0x50(%rsp)
2d70(5): mov $0x0,0xf(%rsp)
2d75(3): xor %r15d,%r15d
2d78(5): mov $0x0,0xd(%rsp)
2d7d(9): mov $0x0,0x18(%rsp)
2d86(9): mov $0x0,0x48(%rsp)
2d8f(5): jmp 0xfffff264(%rip)
2d94(5): mov $0x1,0xe(%rsp)
2d99(5): mov $0x0,0x7c(%rsp)
2d9e(3): xor %r12d,%r12d
2da1(9): mov $0x0,0x50(%rsp)
2daa(5): mov $0x1,0xf(%rsp)
2daf(5): mov $0x1,0xd(%rsp)
2db4(5): jmp 0xfffff21f(%rip)
2db9(3): cmp %r15,%r13
2dbc(2): jbe 0x7(%rip)
2dbe(5): mov $0x30,0x0(%r14,%r15,1)
2dc3(4): lea 0x2(%rcx),%rax
2dc7(3): cmp %rax,%r13
2dca(2): jbe 0x8(%rip)
2dcc(6): mov $0x30,0x2(%r14,%rcx,1)
2dd2(3): mov %r12d,%eax
2dd5(4): lea 0x3(%rcx),%r15
2dd9(3): xor %r12d,%r12d
2ddc(5): mov $0x30,%ebx
2de1(5): jmp 0xfffff367(%rip)
2de6(a): nop 0x0(%rax,%rax,1)
2df0(5): movzx 0xf(%rsp),%ebx
2df5(3): mov %r11,%rbp
2df8(4): mov %bl,0xd(%rsp)
2dfc(5): jmp 0xfffffcad(%rip)
2e01(5): movzx 0xd(%rsp),%edx
2e06(3): xor %r12d,%r12d
2e09(5): jmp 0xfffffb07(%rip)
2e0e(3): xor %r10d,%r10d
2e11(5): jmp 0xfffffbbc(%rip)
2e16(9): mov $0x0,0x50(%rsp)
2e1f(5): mov $0x1,0xe(%rsp)
2e24(3): xor %r12d,%r12d
2e27(5): mov $0x0,0x7c(%rsp)
2e2c(5): jmp 0xfffffddf(%rip)
2e31(5): mov 0x30(%rsp),%r11
2e36(3): mov %r14,%rsi
2e39(3): mov %r13,%rcx
2e3c(3): mov %rbx,%rax
2e3f(3): mov %rbx,%rdi
2e42(6): movzx 0x7d(%rsp),%r8d
2e48(5): movzx 0x7e(%rsp),%ebx
2e4d(8): mov 0x88(%rsp),%r9
2e55(3): cmp %r11,%rsi
2e58(6): movzx 0x7f(%rsp),%r10d
2e5e(8): mov 0x80(%rsp),%r15
2e66(5): mov 0x40(%rsp),%r14
2e6b(5): mov 0x70(%rsp),%r13
2e70(2): jnb 0x28(%rip)
2e72(3): cmp $0x0,(%rcx)
2e75(2): jnz 0x12(%rip)
2e77(2): jmp 0x21(%rip)
2e79(7): nop 0x0(%rax)
2e80(5): cmp $0x0,0x0(%r9,%rax,1)
2e85(2): jz 0x10(%rip)
2e87(4): add $0x1,%rax
2e8b(5): lea 0x0(%rbp,%rax,1),%rdx
2e90(3): cmp %rdx,%r11
2e93(2): jnbe 0xffffffed(%rip)
2e95(3): mov %rax,%rdi
2e98(5): movzx 0xd(%rsp),%edx
2e9d(3): xor %r12d,%r12d
2ea0(5): jmp 0xfffffa66(%rip)
2ea5(3): mov %rbx,%rdi
2ea8(6): movzx 0x7d(%rsp),%r8d
2eae(5): movzx 0x7e(%rsp),%ebx
2eb3(6): movzx 0x7f(%rsp),%r10d
2eb9(8): mov 0x80(%rsp),%r15
2ec1(3): xor %r12d,%r12d
2ec4(5): mov 0x40(%rsp),%r14
2ec9(5): mov 0x70(%rsp),%r13
2ece(5): mov 0x30(%rsp),%r11
2ed3(5): movzx 0xd(%rsp),%edx
2ed8(5): jmp 0xfffffa2e(%rip)
2edd(5): mov 0x68(%rsp),%rdx
2ee2(3): movzx (%rdx),%eax
2ee5(2): test %al,%al
2ee7(6): jz 0xfffffe35(%rip)
2eed(3): nop (%rax)
2ef0(3): cmp %r15,%r13
2ef3(2): jbe 0x6(%rip)
2ef5(4): mov %al,0x0(%r14,%r15,1)
2ef9(4): add $0x1,%r15
2efd(5): movzx 0x0(%rdx,%r15,1),%eax
2f02(2): test %al,%al
2f04(2): jnz 0xffffffec(%rip)
2f06(5): jmp 0xfffffe16(%rip)
2f0b(2): mov %edx,%eax
2f0d(5): jmp 0xfffff55a(%rip)
2f12(4): movzx 0x0(%rax,%rcx,1),%ebx
2f16(3): cmp $0x3e,%bl
2f19(6): jnbe 0xfffff877(%rip)
2f1f(a): mov $0x8070630310989004800,%rax
2f29(4): bt %rbx,%rax
2f2d(6): jnb 0xfffff863(%rip)
2f33(5): cmp $0x0,0xf(%rsp)
2f38(6): jnz 0x1ea(%rip)
2f3e(3): cmp %r15,%r13
2f41(2): jbe 0x7(%rip)
2f43(5): mov $0x3f,0x0(%r14,%r15,1)
2f48(4): lea 0x1(%r15),%rax
2f4c(3): cmp %rax,%r13
2f4f(2): jbe 0x8(%rip)
2f51(6): mov $0x22,0x1(%r14,%r15,1)
2f57(4): lea 0x2(%r15),%rax
2f5b(3): cmp %rax,%r13
2f5e(2): jbe 0x8(%rip)
2f60(6): mov $0x22,0x2(%r14,%r15,1)
2f66(4): lea 0x3(%r15),%rax
2f6a(3): cmp %rax,%r13
2f6d(2): jbe 0x8(%rip)
2f6f(6): mov $0x3f,0x3(%r14,%r15,1)
2f75(4): add $0x4,%r15
2f79(2): xor %edx,%edx
2f7b(3): xor %r12d,%r12d
2f7e(2): xor %eax,%eax
2f80(3): mov %rcx,%rbp
2f83(5): jmp 0xfffff1c5(%rip)
2f88(2): test %ebx,%ebx
2f8a(6): jz 0x18e(%rip)
2f90(7): lea 0x1a36(%rip),%rax
2f97(5): mov $0x1,0xe(%rsp)
2f9c(5): mov $0x0,0x7c(%rsp)
2fa1(3): xor %r12d,%r12d
2fa4(9): mov $0x0,0x50(%rsp)
2fad(5): mov $0x1,0xf(%rsp)
2fb2(5): mov $0x0,0xd(%rsp)
2fb7(9): mov $0x1,0x18(%rsp)
2fc0(3): xor %r15d,%r15d
2fc3(5): mov %rax,0x48(%rsp)
2fc8(5): jmp 0xfffff02b(%rip)
2fcd(3): nop (%rax)
2fd0(3): mov %r11,%rbp
2fd3(5): movzx 0xf(%rsp),%eax
2fd8(5): jmp 0xfffffad1(%rip)
2fdd(7): lea 0x19e7(%rip),%rax
2fe4(5): mov $0x1,0xe(%rsp)
2fe9(5): mov $0x0,0x7c(%rsp)
2fee(3): xor %r12d,%r12d
2ff1(9): mov $0x0,0x50(%rsp)
2ffa(5): mov $0x1,0xf(%rsp)
2fff(5): mov $0x1,0xd(%rsp)
3004(9): mov $0x1,0x18(%rsp)
300d(3): xor %r15d,%r15d
3010(5): mov %rax,0x48(%rsp)
3015(5): jmp 0xffffefde(%rip)
301a(2): mov %edx,%eax
301c(5): mov 0x48(%rsp),%rbx
3021(3): test %rbx,%rbx
3024(2): jz 0x2e(%rip)
3026(2): test %al,%al
3028(2): jz 0x2a(%rip)
302a(3): movzx (%rbx),%ecx
302d(3): mov %rbx,%rax
3030(2): test %cl,%cl
3032(2): jz 0x20(%rip)
3034(3): mov %r15,%rdx
3037(3): sub %r15,%rax
303a(3): cmp %rdx,%r13
303d(2): jbe 0x6(%rip)
303f(4): mov %cl,0x0(%r14,%rdx,1)
3043(4): add $0x1,%rdx
3047(4): movzx 0x0(%rax,%rdx,1),%ecx
304b(2): test %cl,%cl
304d(2): jnz 0xffffffed(%rip)
304f(3): mov %rdx,%r15
3052(3): cmp %r15,%r13
3055(6): jbe 0xfffffaa4(%rip)
305b(5): mov $0x0,0x0(%r14,%r15,1)
3060(5): jmp 0xfffffa99(%rip)
3065(5): cmp $0x2,0x8(%rsp)
306a(5): movzx 0xf(%rsp),%ebx
306f(3): mov %r11,%rbp
3072(3): setz %al
3075(4): mov %bl,0xd(%rsp)
3079(5): jmp 0xfffffa30(%rip)
307e(4): mov 0x8(%rsp),%esi
3082(3): mov %rcx,%rdi
3085(5): call 0xffffedab(%rip)
308a(5): mov %rax,0x68(%rsp)
308f(5): jmp 0xfffffc57(%rip)
3094(4): mov 0x8(%rsp),%esi
3098(3): mov %rcx,%rdi
309b(5): call 0xffffed95(%rip)
30a0(5): mov %rax,0x60(%rsp)
30a5(5): jmp 0xfffffc6c(%rip)
30aa(5): movzx 0xf(%rsp),%ebx
30af(3): mov %r11,%rbp
30b2(2): mov %edx,%eax
30b4(4): mov %bl,0xd(%rsp)
30b8(5): jmp 0xfffff9f1(%rip)
30bd(4): sub $0x8,%rsp
30c1(6): mov $0x5,%r8d
30c7(3): mov %r11,%rcx
30ca(4): push 0x68(%rsp)
30ce(4): push 0x78(%rsp)
30d2(3): mov %r14,%rdi
30d5(4): push 0x38(%rsp)
30d9(8): mov 0x98(%rsp),%r9d
30e1(5): mov 0x30(%rsp),%rdx
30e6(5): mov 0x70(%rsp),%rsi
30eb(5): call 0xffffee35(%rip)
30f0(4): add $0x20,%rsp
30f4(3): mov %rax,%r15
30f7(5): jmp 0xfffffa02(%rip)
30fc(5): movzx 0x7c(%rsp),%eax
3101(5): jmp 0xffffff1b(%rip)
3106(8): mov $0x2,0x8(%rsp)
310e(5): jmp 0xfffff99b(%rip)
3113(5): call 0xffffe1dd(%rip)
3118(5): mov $0x0,0xd(%rsp)
311d(5): jmp 0xfffffa74(%rip)
3122(3): mov %r11,%rbp
3125(5): jmp 0xfffff99b(%rip)
312a(5): mov $0x1,0xe(%rsp)
312f(2): xor %eax,%eax
3131(3): xor %r12d,%r12d
3134(9): mov $0x0,0x50(%rsp)
313d(5): jmp 0xfffff5a7(%rip)
3142(3): mov %r13,%rdx
3145(5): mov 0x50(%rsp),%r13
314a(5): jmp 0xfffff5f8(%rip)
314f(5): call 0xffffe0e1(%rip)

"quotearg_n_options" :
3160(2): push %r15
3162(2): push %r14
3164(3): movsxd %edi,%r15
3167(2): push %r13
3169(2): push %r12
316b(3): mov %rdx,%r14
316e(1): push %rbp
316f(1): push %rbx
3170(3): mov %rcx,%rbp
3173(4): sub $0x28,%rsp
3177(5): mov %rsi,0x8(%rsp)
317c(5): call 0xffffe0c4(%rip)
3181(3): mov %rax,%r13
3184(2): mov (%rax),%eax
3186(3): test %r15d,%r15d
3189(7): mov 0x203ed0(%rip),%rbx
3190(4): mov %eax,0x18(%rsp)
3194(6): js 0x16d(%rip)
319a(7): cmp %r15d,0x203eb7(%rip)
31a1(2): jnle 0x64(%rip)
31a3(7): cmp $0x7fffffff,%r15d
31aa(6): jz 0x15c(%rip)
31b0(4): lea 0x1(%r15),%r12d
31b4(7): lea 0x203eb5(%rip),%rax
31bb(3): movsxd %r12d,%rsi
31be(4): shl/sal $0x4,%rsi
31c2(3): cmp %rax,%rbx
31c5(6): jz 0x11b(%rip)
31cb(3): mov %rbx,%rdi
31ce(5): call 0xf72(%rip)
31d3(3): mov %rax,%rbx
31d6(7): mov %rax,0x203e83(%rip)
31dd(7): movsxd 0x203e74(%rip),%rdi
31e4(3): mov %r12d,%edx
31e7(2): xor %esi,%esi
31e9(2): sub %edi,%edx
31eb(4): shl/sal $0x4,%rdi
31ef(3): movsxd %edx,%rdx
31f2(3): add %rbx,%rdi
31f5(4): shl/sal $0x4,%rdx
31f9(5): call 0xffffe147(%rip)
31fe(7): mov %r12d,0x203e53(%rip)
3205(3): mov 0x4(%rbp),%eax
3208(4): shl/sal $0x4,%r15
320c(4): sub $0x8,%rsp
3210(3): add %r15,%rbx
3213(4): lea 0x8(%rbp),%r15
3217(4): mov 0x0(%rbp),%r8d
321b(3): mov (%rbx),%r11
321e(4): mov 0x8(%rbx),%r12
3222(3): mov %r14,%rcx
3225(3): or $0x1,%eax
3228(4): mov %eax,0x24(%rsp)
322c(3): push 0x30(%rbp)
322f(3): mov %eax,%r9d
3232(3): push 0x28(%rbp)
3235(2): push %r15
3237(3): mov %r11,%rsi
323a(5): mov 0x28(%rsp),%rdx
323f(3): mov %r12,%rdi
3242(5): mov %r11,0x30(%rsp)
3247(5): call 0xffffecd9(%rip)
324c(4): add $0x20,%rsp
3250(5): mov 0x10(%rsp),%r11
3255(3): cmp %rax,%r11
3258(2): jnbe 0x69(%rip)
325a(4): lea 0x1(%rax),%rsi
325e(7): lea 0x203e9b(%rip),%rax
3265(3): cmp %rax,%r12
3268(3): mov %rsi,(%rbx)
326b(2): jz 0x14(%rip)
326d(3): mov %r12,%rdi
3270(5): mov %rsi,0x10(%rsp)
3275(5): call 0xffffdfab(%rip)
327a(5): mov 0x10(%rsp),%rsi
327f(3): mov %rsi,%rdi
3282(5): mov %rsi,0x10(%rsp)
3287(5): call 0xe59(%rip)
328c(4): sub $0x8,%rsp
3290(4): mov %rax,0x8(%rbx)
3294(4): mov 0x0(%rbp),%r8d
3298(3): push 0x30(%rbp)
329b(3): push 0x28(%rbp)
329e(3): mov %r14,%rcx
32a1(2): push %r15
32a3(5): mov 0x3c(%rsp),%r9d
32a8(3): mov %rax,%rdi
32ab(5): mov 0x28(%rsp),%rdx
32b0(5): mov 0x30(%rsp),%rsi
32b5(3): mov %rax,%r12
32b8(5): call 0xffffec68(%rip)
32bd(4): add $0x20,%rsp
32c1(4): mov 0x18(%rsp),%eax
32c5(4): mov %eax,0x0(%r13)
32c9(4): add $0x28,%rsp
32cd(3): mov %r12,%rax
32d0(1): pop %rbx
32d1(1): pop %rbp
32d2(2): pop %r12
32d4(2): pop %r13
32d6(2): pop %r14
32d8(2): pop %r15
32da(1): ret near (%rsp)
32db(5): nop 0x0(%rax,%rax,1)
32e0(2): xor %edi,%edi
32e2(5): call 0xe5e(%rip)
32e7(8): movdqa 0x203d81(%rip),%xmm0
32ef(3): mov %rax,%rbx
32f2(7): mov %rax,0x203d67(%rip)
32f9(3): movups %xmm0,(%rax)
32fc(5): jmp 0xfffffee1(%rip)
3301(5): call 0xffffdf2f(%rip)
3306(5): call 0x102a(%rip)

"clone_quoting_options" :
3310(2): push %r12
3312(1): push %rbp
3313(1): push %rbx
3314(3): mov %rdi,%rbx
3317(5): call 0xffffdf29(%rip)
331c(3): mov (%rax),%r12d
331f(3): mov %rax,%rbp
3322(7): lea 0x203ed7(%rip),%rax
3329(3): test %rbx,%rbx
332c(5): mov $0x38,%esi
3331(4): cmove %rax,%rbx
3335(3): mov %rbx,%rdi
3338(5): call 0xfa8(%rip)
333d(4): mov %r12d,0x0(%rbp)
3341(1): pop %rbx
3342(1): pop %rbp
3343(2): pop %r12
3345(1): ret near (%rsp)

"get_quoting_style" :
3350(7): lea 0x203ea9(%rip),%rax
3357(3): test %rdi,%rdi
335a(4): cmove %rax,%rdi
335e(2): mov (%rdi),%eax
3360(1): ret near (%rsp)

"set_quoting_style" :
3370(7): lea 0x203e89(%rip),%rax
3377(3): test %rdi,%rdi
337a(4): cmove %rax,%rdi
337e(2): mov %esi,(%rdi)
3380(1): ret near (%rsp)

"set_char_quoting" :
3390(7): lea 0x203e69(%rip),%rax
3397(3): test %rdi,%rdi
339a(2): mov %esi,%ecx
339c(4): cmove %rax,%rdi
33a0(2): mov %esi,%eax
33a2(3): and $0x1f,%ecx
33a5(3): shr $0x5,%al
33a8(3): movzx %al,%eax
33ab(5): lea 0x8(%rdi,%rax,4),%rdi
33b0(2): mov (%rdi),%esi
33b2(2): mov %esi,%eax
33b4(2): shr %cl,%eax
33b6(2): xor %eax,%edx
33b8(3): and $0x1,%eax
33bb(3): and $0x1,%edx
33be(2): shl/sal %cl,%edx
33c0(2): xor %esi,%edx
33c2(2): mov %edx,(%rdi)
33c4(1): ret near (%rsp)

"set_quoting_flags" :
33d0(7): lea 0x203e29(%rip),%rax
33d7(3): test %rdi,%rdi
33da(4): cmove %rax,%rdi
33de(3): mov 0x4(%rdi),%eax
33e1(3): mov %esi,0x4(%rdi)
33e4(1): ret near (%rsp)

"set_custom_quoting" :
33f0(7): lea 0x203e09(%rip),%rax
33f7(3): test %rdi,%rdi
33fa(4): cmove %rax,%rdi
33fe(3): test %rsi,%rsi
3401(6): mov $0xa,(%rdi)
3407(2): jz 0x10(%rip)
3409(3): test %rdx,%rdx
340c(2): jz 0xb(%rip)
340e(4): mov %rsi,0x28(%rdi)
3412(4): mov %rdx,0x30(%rdi)
3416(1): ret near (%rsp)
3417(4): sub $0x8,%rsp
341b(5): call 0xffffde15(%rip)

"quotearg_buffer" :
3420(2): push %r15
3422(2): push %r14
3424(7): lea 0x203dd5(%rip),%rax
342b(2): push %r13
342d(2): push %r12
342f(3): mov %rdi,%r13
3432(1): push %rbp
3433(1): push %rbx
3434(3): mov %r8,%rbx
3437(3): mov %rsi,%r14
343a(3): mov %rdx,%r15
343d(4): sub $0x18,%rsp
3441(3): test %r8,%r8
3444(4): cmove %rax,%rbx
3448(5): mov %rcx,0x8(%rsp)
344d(5): call 0xffffddf3(%rip)
3452(3): mov (%rax),%r12d
3455(3): mov %rax,%rbp
3458(4): lea 0x8(%rbx),%rax
345c(4): sub $0x8,%rsp
3460(4): mov 0x4(%rbx),%r9d
3464(3): push 0x30(%rbx)
3467(3): mov (%rbx),%r8d
346a(3): push 0x28(%rbx)
346d(3): mov %r15,%rdx
3470(1): push %rax
3471(5): mov 0x28(%rsp),%rcx
3476(3): mov %r14,%rsi
3479(3): mov %r13,%rdi
347c(5): call 0xffffeaa4(%rip)
3481(4): mov %r12d,0x0(%rbp)
3485(4): add $0x38,%rsp
3489(1): pop %rbx
348a(1): pop %rbp
348b(2): pop %r12
348d(2): pop %r13
348f(2): pop %r14
3491(2): pop %r15
3493(1): ret near (%rsp)

"quotearg_alloc_mem" :
34a0(2): push %r15
34a2(2): push %r14
34a4(7): lea 0x203d55(%rip),%rax
34ab(2): push %r13
34ad(2): push %r12
34af(3): mov %rdx,%r12
34b2(1): push %rbp
34b3(1): push %rbx
34b4(3): mov %rcx,%rbx
34b7(3): mov %rdi,%r14
34ba(3): mov %rsi,%r15
34bd(4): sub $0x38,%rsp
34c1(3): test %rcx,%rcx
34c4(4): cmove %rax,%rbx
34c8(2): xor %ebp,%ebp
34ca(5): call 0xffffdd76(%rip)
34cf(3): test %r12,%r12
34d2(3): mov %rax,%r13
34d5(2): mov (%rax),%eax
34d7(4): setz %bpl
34db(3): or 0x4(%rbx),%ebp
34de(4): lea 0x8(%rbx),%r10
34e2(4): sub $0x8,%rsp
34e6(3): mov (%rbx),%r8d
34e9(3): mov %r15,%rcx
34ec(4): mov %eax,0x14(%rsp)
34f0(3): push 0x30(%rbx)
34f3(3): mov %r14,%rdx
34f6(3): push 0x28(%rbx)
34f9(2): push %r10
34fb(2): xor %esi,%esi
34fd(3): mov %ebp,%r9d
3500(2): xor %edi,%edi
3502(5): mov %r10,0x40(%rsp)
3507(5): call 0xffffea19(%rip)
350c(4): lea 0x1(%rax),%rsi
3510(5): mov %rax,0x48(%rsp)
3515(4): add $0x20,%rsp
3519(3): mov %rsi,%rdi
351c(5): mov %rsi,0x18(%rsp)
3521(5): call 0xbbf(%rip)
3526(5): mov %rax,0x10(%rsp)
352b(4): sub $0x8,%rsp
352f(3): push 0x30(%rbx)
3532(3): push 0x28(%rbx)
3535(5): mov 0x38(%rsp),%r10
353a(3): mov %ebp,%r9d
353d(3): mov (%rbx),%r8d
3540(3): mov %r15,%rcx
3543(3): mov %r14,%rdx
3546(3): mov %rax,%rdi
3549(2): push %r10
354b(5): mov 0x38(%rsp),%rsi
3550(5): call 0xffffe9d0(%rip)
3555(4): mov 0x2c(%rsp),%eax
3559(4): add $0x20,%rsp
355d(3): test %r12,%r12
3560(4): mov %eax,0x0(%r13)
3564(2): jz 0xb(%rip)
3566(5): mov 0x28(%rsp),%r11
356b(4): mov %r11,(%r12)
356f(5): mov 0x10(%rsp),%rax
3574(4): add $0x38,%rsp
3578(1): pop %rbx
3579(1): pop %rbp
357a(2): pop %r12
357c(2): pop %r13
357e(2): pop %r14
3580(2): pop %r15
3582(1): ret near (%rsp)

"quotearg_alloc" :
3590(3): mov %rdx,%rcx
3593(2): xor %edx,%edx
3595(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
35a0(6): mov 0x203ab2(%rip),%eax
35a6(2): push %r12
35a8(7): mov 0x203ab1(%rip),%r12
35af(1): push %rbp
35b0(1): push %rbx
35b1(3): cmp $0x1,%eax
35b4(2): jle 0x2d(%rip)
35b6(3): sub $0x2,%eax
35b9(5): lea 0x18(%r12),%rbx
35be(4): shl/sal $0x4,%rax
35c2(5): lea 0x28(%r12,%rax,1),%rbp
35c7(9): nop 0x0(%rax,%rax,1)
35d0(3): mov (%rbx),%rdi
35d3(4): add $0x10,%rbx
35d7(5): call 0xffffdc49(%rip)
35dc(3): cmp %rbp,%rbx
35df(2): jnz 0xfffffff1(%rip)
35e1(5): mov 0x8(%r12),%rdi
35e6(7): lea 0x203b13(%rip),%rbx
35ed(3): cmp %rbx,%rdi
35f0(2): jz 0x19(%rip)
35f2(5): call 0xffffdc2e(%rip)
35f7(b): mov $0x100,0x203a6e(%rip)
3602(7): mov %rbx,0x203a6f(%rip)
3609(7): lea 0x203a60(%rip),%rbx
3610(3): cmp %rbx,%r12
3613(2): jz 0x11(%rip)
3615(3): mov %r12,%rdi
3618(5): call 0xffffdc08(%rip)
361d(7): mov %rbx,0x203a3c(%rip)
3624(1): pop %rbx
3625(a): mov $0x1,0x203a29(%rip)
362f(1): pop %rbp
3630(2): pop %r12
3632(1): ret near (%rsp)

"quotearg_n" :
3640(7): lea 0x203bb9(%rip),%rcx
3647(7): mov $0xffffffff,%rdx
364e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3660(7): lea 0x203b99(%rip),%rcx
3667(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3670(7): lea 0x203b89(%rip),%rcx
3677(3): mov %rdi,%rsi
367a(7): mov $0xffffffff,%rdx
3681(2): xor %edi,%edi
3683(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3690(7): lea 0x203b69(%rip),%rcx
3697(3): mov %rsi,%rdx
369a(3): mov %rdi,%rsi
369d(2): xor %edi,%edi
369f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
36b0(4): sub $0x48,%rsp
36b4(3): mov %rdx,%rax
36b7(9): mov $0x28,%rdx
36c0(5): mov %rdx,0x38(%rsp)
36c5(2): xor %edx,%edx
36c7(3): cmp $0xa,%esi
36ca(2): jz 0x6a(%rip)
36cc(3): mov %esi,(%rsp)
36cf(3): mov %rsp,%rcx
36d2(7): mov $0xffffffff,%rdx
36d9(3): mov %rax,%rsi
36dc(9): mov $0x0,0x4(%rsp)
36e5(9): mov $0x0,0xc(%rsp)
36ee(9): mov $0x0,0x14(%rsp)
36f7(9): mov $0x0,0x1c(%rsp)
3700(9): mov $0x0,0x24(%rsp)
3709(9): mov $0x0,0x2c(%rsp)
3712(8): mov $0x0,0x34(%rsp)
371a(5): call 0xfffffa46(%rip)
371f(5): mov 0x38(%rsp),%rcx
3724(9): xor $0x28,%rcx
372d(2): jnz 0xc(%rip)
372f(4): add $0x48,%rsp
3733(1): ret near (%rsp)
3734(5): call 0xffffdafc(%rip)
3739(5): call 0xffffdbb7(%rip)

"quotearg_n_style_mem" :
3740(4): sub $0x48,%rsp
3744(3): mov %rdx,%rax
3747(3): mov %rcx,%rdx
374a(9): mov $0x28,%rcx
3753(5): mov %rcx,0x38(%rsp)
3758(2): xor %ecx,%ecx
375a(3): cmp $0xa,%esi
375d(2): jz 0x63(%rip)
375f(3): mov %esi,(%rsp)
3762(3): mov %rsp,%rcx
3765(3): mov %rax,%rsi
3768(9): mov $0x0,0x4(%rsp)
3771(9): mov $0x0,0xc(%rsp)
377a(9): mov $0x0,0x14(%rsp)
3783(9): mov $0x0,0x1c(%rsp)
378c(9): mov $0x0,0x24(%rsp)
3795(9): mov $0x0,0x2c(%rsp)
379e(8): mov $0x0,0x34(%rsp)
37a6(5): call 0xfffff9ba(%rip)
37ab(5): mov 0x38(%rsp),%rdx
37b0(9): xor $0x28,%rdx
37b9(2): jnz 0xc(%rip)
37bb(4): add $0x48,%rsp
37bf(1): ret near (%rsp)
37c0(5): call 0xffffda70(%rip)
37c5(5): call 0xffffdb2b(%rip)

"quotearg_style" :
37d0(3): mov %rsi,%rdx
37d3(2): mov %edi,%esi
37d5(2): xor %edi,%edi
37d7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
37e0(3): mov %rdx,%rcx
37e3(3): mov %rsi,%rdx
37e6(2): mov %edi,%esi
37e8(2): xor %edi,%edi
37ea(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
37f0(4): sub $0x48,%rsp
37f4(2): mov %edx,%ecx
37f6(9): mov $0x28,%rax
37ff(5): mov %rax,0x38(%rsp)
3804(2): xor %eax,%eax
3806(7): mov 0x203a23(%rip),%rax
380d(3): mov %rsp,%r8
3810(3): and $0x1f,%ecx
3813(8): movdqa 0x2039e5(%rip),%xmm0
381b(5): mov %rax,0x30(%rsp)
3820(2): mov %edx,%eax
3822(4): movaps %xmm0,(%rsp)
3826(3): shr $0x5,%al
3829(3): movzx %al,%eax
382c(5): lea 0x8(%r8,%rax,4),%r9
3831(8): movdqa 0x2039d7(%rip),%xmm0
3839(5): movaps %xmm0,0x10(%rsp)
383e(8): movdqa 0x2039da(%rip),%xmm0
3846(5): movaps %xmm0,0x20(%rsp)
384b(3): mov (%r9),%edx
384e(2): mov %edx,%eax
3850(2): shr %cl,%eax
3852(2): not %eax
3854(3): and $0x1,%eax
3857(2): shl/sal %cl,%eax
3859(3): mov %r8,%rcx
385c(2): xor %edx,%eax
385e(3): mov %rsi,%rdx
3861(3): mov %rdi,%rsi
3864(3): mov %eax,(%r9)
3867(2): xor %edi,%edi
3869(5): call 0xfffff8f7(%rip)
386e(5): mov 0x38(%rsp),%rsi
3873(9): xor $0x28,%rsi
387c(2): jnz 0x7(%rip)
387e(4): add $0x48,%rsp
3882(1): ret near (%rsp)
3883(5): call 0xffffda6d(%rip)

"quotearg_char" :
3890(4): movsx %sil,%edx
3894(7): mov $0xffffffff,%rsi
389b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
38a0(5): mov $0x3a,%edx
38a5(7): mov $0xffffffff,%rsi
38ac(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
38c0(5): mov $0x3a,%edx
38c5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
38d0(4): sub $0x48,%rsp
38d4(3): mov %rdx,%rax
38d7(9): mov $0x28,%rdx
38e0(5): mov %rdx,0x38(%rsp)
38e5(2): xor %edx,%edx
38e7(3): cmp $0xa,%esi
38ea(2): jz 0x6a(%rip)
38ec(3): mov %esi,(%rsp)
38ef(3): mov %rsp,%rcx
38f2(7): mov $0xffffffff,%rdx
38f9(3): mov %rax,%rsi
38fc(9): mov $0x0,0x4(%rsp)
3905(9): mov $0x4000000,0xc(%rsp)
390e(9): mov $0x0,0x14(%rsp)
3917(9): mov $0x0,0x1c(%rsp)
3920(9): mov $0x0,0x24(%rsp)
3929(9): mov $0x0,0x2c(%rsp)
3932(8): mov $0x0,0x34(%rsp)
393a(5): call 0xfffff826(%rip)
393f(5): mov 0x38(%rsp),%rcx
3944(9): xor $0x28,%rcx
394d(2): jnz 0xc(%rip)
394f(4): add $0x48,%rsp
3953(1): ret near (%rsp)
3954(5): call 0xffffd8dc(%rip)
3959(5): call 0xffffd997(%rip)

"quotearg_n_custom_mem" :
3960(4): sub $0x48,%rsp
3964(3): mov %rcx,%r9
3967(7): mov 0x2038c2(%rip),%rcx
396e(8): movdqa 0x20388a(%rip),%xmm0
3976(9): mov $0x28,%rax
397f(5): mov %rax,0x38(%rsp)
3984(2): xor %eax,%eax
3986(4): movaps %xmm0,(%rsp)
398a(3): test %rsi,%rsi
398d(5): mov %rcx,0x30(%rsp)
3992(7): mov $0xa,(%rsp)
3999(8): movdqa 0x20386f(%rip),%xmm0
39a1(5): movaps %xmm0,0x10(%rsp)
39a6(8): movdqa 0x203872(%rip),%xmm0
39ae(5): movaps %xmm0,0x20(%rsp)
39b3(2): jz 0x34(%rip)
39b5(3): test %rdx,%rdx
39b8(2): jz 0x2f(%rip)
39ba(5): mov %rsi,0x28(%rsp)
39bf(5): mov %rdx,0x30(%rsp)
39c4(3): mov %rsp,%rcx
39c7(3): mov %r8,%rdx
39ca(3): mov %r9,%rsi
39cd(5): call 0xfffff793(%rip)
39d2(5): mov 0x38(%rsp),%rdi
39d7(9): xor $0x28,%rdi
39e0(2): jnz 0xc(%rip)
39e2(4): add $0x48,%rsp
39e6(1): ret near (%rsp)
39e7(5): call 0xffffd849(%rip)
39ec(5): call 0xffffd904(%rip)

"quotearg_n_custom" :
3a00(7): mov $0xffffffff,%r8
3a07(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3a10(3): mov %rdx,%rcx
3a13(7): mov $0xffffffff,%r8
3a1a(3): mov %rsi,%rdx
3a1d(3): mov %rdi,%rsi
3a20(2): xor %edi,%edi
3a22(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3a30(3): mov %rcx,%r8
3a33(3): mov %rdx,%rcx
3a36(3): mov %rsi,%rdx
3a39(3): mov %rdi,%rsi
3a3c(2): xor %edi,%edi
3a3e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3a50(7): lea 0x2035c9(%rip),%rcx
3a57(5): jmp 0xfffff709(%rip)

"quote_mem" :
3a60(7): lea 0x2035b9(%rip),%rcx
3a67(3): mov %rsi,%rdx
3a6a(3): mov %rdi,%rsi
3a6d(2): xor %edi,%edi
3a6f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3a80(7): lea 0x203599(%rip),%rcx
3a87(7): mov $0xffffffff,%rdx
3a8e(5): jmp 0xfffff6d2(%rip)

"quote" :
3aa0(7): lea 0x203579(%rip),%rcx
3aa7(3): mov %rdi,%rsi
3aaa(7): mov $0xffffffff,%rdx
3ab1(2): xor %edi,%edi
3ab3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3ac0(2): push %r15
3ac2(2): push %r14
3ac4(2): push %r13
3ac6(2): push %r12
3ac8(3): mov %r9,%r12
3acb(1): push %rbp
3acc(1): push %rbx
3acd(3): mov %rdi,%rbp
3ad0(3): mov %r8,%rbx
3ad3(4): sub $0x28,%rsp
3ad7(3): test %rsi,%rsi
3ada(6): jz 0x11e(%rip)
3ae0(3): mov %rdx,%r8
3ae3(7): lea 0x139e(%rip),%rdx
3aea(3): mov %rcx,%r9
3aed(2): xor %eax,%eax
3aef(3): mov %rsi,%rcx
3af2(5): mov $0x1,%esi
3af7(5): call 0xffffd979(%rip)
3afc(7): lea 0x1398(%rip),%rsi
3b03(2): xor %edi,%edi
3b05(5): mov $0x5,%edx
3b0a(5): call 0xffffd7b6(%rip)
3b0f(7): lea 0x16aa(%rip),%rdx
3b16(3): mov %rax,%rcx
3b19(6): mov $0x7e3,%r8d
3b1f(5): mov $0x1,%esi
3b24(3): mov %rbp,%rdi
3b27(2): xor %eax,%eax
3b29(5): call 0xffffd947(%rip)
3b2e(7): lea 0x13f3(%rip),%rsi
3b35(2): xor %edi,%edi
3b37(5): mov $0x5,%edx
3b3c(5): call 0xffffd784(%rip)
3b41(3): mov %rbp,%rsi
3b44(3): mov %rax,%rdi
3b47(5): call 0xffffd819(%rip)
3b4c(4): cmp $0x9,%r12
3b50(6): jnbe 0x340(%rip)
3b56(7): lea 0x162b(%rip),%rdx
3b5d(4): movsxd 0x0(%rdx,%r12,4),%rax
3b61(3): add %rdx,%rax
3b64(2): jmp %rax
3b66(a): nop 0x0(%rax,%rax,1)
3b70(4): mov 0x38(%rbx),%r9
3b74(4): mov 0x10(%rbx),%rax
3b78(7): lea 0x1519(%rip),%rsi
3b7f(4): mov 0x8(%rbx),%r8
3b83(5): mov $0x5,%edx
3b88(2): xor %edi,%edi
3b8a(4): mov 0x30(%rbx),%r13
3b8e(4): mov 0x28(%rbx),%r12
3b92(5): mov %r9,0x10(%rsp)
3b97(4): mov 0x20(%rbx),%r15
3b9b(4): mov 0x18(%rbx),%r14
3b9f(4): mov %rax,(%rsp)
3ba3(5): mov %r8,0x8(%rsp)
3ba8(3): mov (%rbx),%rbx
3bab(5): call 0xffffd715(%rip)
3bb0(4): sub $0x8,%rsp
3bb4(5): mov 0x18(%rsp),%r9
3bb9(3): mov %rax,%rdx
3bbc(3): mov %rbx,%rcx
3bbf(5): mov $0x1,%esi
3bc4(3): mov %rbp,%rdi
3bc7(2): xor %eax,%eax
3bc9(2): push %r9
3bcb(2): push %r13
3bcd(2): push %r12
3bcf(2): push %r15
3bd1(2): push %r14
3bd3(5): mov 0x30(%rsp),%r9
3bd8(5): mov 0x38(%rsp),%r8
3bdd(5): call 0xffffd893(%rip)
3be2(4): add $0x30,%rsp
3be6(4): add $0x28,%rsp
3bea(1): pop %rbx
3beb(1): pop %rbp
3bec(2): pop %r12
3bee(2): pop %r13
3bf0(2): pop %r14
3bf2(2): pop %r15
3bf4(1): ret near (%rsp)
3bf5(3): nop (%rax)
3bf8(3): mov %rcx,%r8
3bfb(3): mov %rdx,%rcx
3bfe(7): lea 0x128f(%rip),%rdx
3c05(5): mov $0x1,%esi
3c0a(2): xor %eax,%eax
3c0c(5): call 0xffffd864(%rip)
3c11(5): jmp 0xfffffeeb(%rip)
3c16(a): nop 0x0(%rax,%rax,1)
3c20(4): mov 0x40(%rbx),%r10
3c24(4): mov 0x38(%rbx),%r9
3c28(7): lea 0x1499(%rip),%rsi
3c2f(4): mov 0x10(%rbx),%rax
3c33(4): mov 0x8(%rbx),%r8
3c37(5): mov $0x5,%edx
3c3c(4): mov 0x30(%rbx),%r13
3c40(4): mov 0x28(%rbx),%r12
3c44(4): mov 0x20(%rbx),%r15
3c48(4): mov 0x18(%rbx),%r14
3c4c(3): mov (%rbx),%rbx
3c4f(5): mov %r10,0x18(%rsp)
3c54(5): mov %r9,0x10(%rsp)
3c59(4): mov %rax,(%rsp)
3c5d(5): mov %r8,0x8(%rsp)
3c62(2): xor %edi,%edi
3c64(5): call 0xffffd65c(%rip)
3c69(5): mov 0x18(%rsp),%r10
3c6e(2): push %r10
3c70(5): jmp 0xffffff44(%rip)
3c75(3): nop (%rax)
3c78(3): mov (%rbx),%rbx
3c7b(7): lea 0x121d(%rip),%rsi
3c82(5): mov $0x5,%edx
3c87(2): xor %edi,%edi
3c89(5): call 0xffffd637(%rip)
3c8e(4): add $0x28,%rsp
3c92(3): mov %rbx,%rcx
3c95(3): mov %rbp,%rdi
3c98(1): pop %rbx
3c99(1): pop %rbp
3c9a(2): pop %r12
3c9c(2): pop %r13
3c9e(2): pop %r14
3ca0(2): pop %r15
3ca2(3): mov %rax,%rdx
3ca5(5): mov $0x1,%esi
3caa(2): xor %eax,%eax
3cac(5): jmp 0xffffd7c4(%rip)
3cb1(7): nop 0x0(%rax)
3cb8(4): mov 0x8(%rbx),%r12
3cbc(7): lea 0x11ec(%rip),%rsi
3cc3(3): mov (%rbx),%rbx
3cc6(5): mov $0x5,%edx
3ccb(2): xor %edi,%edi
3ccd(5): call 0xffffd5f3(%rip)
3cd2(4): add $0x28,%rsp
3cd6(3): mov %r12,%r8
3cd9(3): mov %rbx,%rcx
3cdc(3): mov %rbp,%rdi
3cdf(3): mov %rax,%rdx
3ce2(5): mov $0x1,%esi
3ce7(1): pop %rbx
3ce8(1): pop %rbp
3ce9(2): pop %r12
3ceb(2): pop %r13
3ced(2): pop %r14
3cef(2): pop %r15
3cf1(2): xor %eax,%eax
3cf3(5): jmp 0xffffd77d(%rip)
3cf8(8): nop 0x0(%rax,%rax,1)
3d00(4): mov 0x10(%rbx),%r13
3d04(4): mov 0x8(%rbx),%r12
3d08(7): lea 0x11b7(%rip),%rsi
3d0f(3): mov (%rbx),%rbx
3d12(5): mov $0x5,%edx
3d17(2): xor %edi,%edi
3d19(5): call 0xffffd5a7(%rip)
3d1e(4): add $0x28,%rsp
3d22(3): mov %r13,%r9
3d25(3): mov %r12,%r8
3d28(3): mov %rbx,%rcx
3d2b(3): mov %rbp,%rdi
3d2e(3): mov %rax,%rdx
3d31(1): pop %rbx
3d32(1): pop %rbp
3d33(2): pop %r12
3d35(2): pop %r13
3d37(2): pop %r14
3d39(2): pop %r15
3d3b(5): mov $0x1,%esi
3d40(2): xor %eax,%eax
3d42(5): jmp 0xffffd72e(%rip)
3d47(9): nop 0x0(%rax,%rax,1)
3d50(7): lea 0x12a1(%rip),%rsi
3d57(5): mov $0x5,%edx
3d5c(2): xor %edi,%edi
3d5e(4): mov 0x18(%rbx),%r14
3d62(4): mov 0x10(%rbx),%r13
3d66(4): mov 0x8(%rbx),%r12
3d6a(3): mov (%rbx),%rbx
3d6d(5): call 0xffffd553(%rip)
3d72(4): sub $0x8,%rsp
3d76(2): push %r14
3d78(3): mov %rax,%rdx
3d7b(3): mov %r13,%r9
3d7e(3): mov %r12,%r8
3d81(3): mov %rbx,%rcx
3d84(3): mov %rbp,%rdi
3d87(5): mov $0x1,%esi
3d8c(2): xor %eax,%eax
3d8e(5): call 0xffffd6e2(%rip)
3d93(1): pop %rax
3d94(1): pop %rdx
3d95(4): add $0x28,%rsp
3d99(1): pop %rbx
3d9a(1): pop %rbp
3d9b(2): pop %r12
3d9d(2): pop %r13
3d9f(2): pop %r14
3da1(2): pop %r15
3da3(1): ret near (%rsp)
3da4(4): nop 0x0(%rax)
3da8(4): mov 0x20(%rbx),%r15
3dac(7): lea 0x1265(%rip),%rsi
3db3(5): mov $0x5,%edx
3db8(2): xor %edi,%edi
3dba(4): mov 0x18(%rbx),%r14
3dbe(4): mov 0x10(%rbx),%r13
3dc2(4): mov 0x8(%rbx),%r12
3dc6(3): mov (%rbx),%rbx
3dc9(5): call 0xffffd4f7(%rip)
3dce(2): push %r15
3dd0(2): jmp 0xffffffa6(%rip)
3dd2(6): nop 0x0(%rax,%rax,1)
3dd8(4): mov 0x8(%rbx),%r8
3ddc(4): mov 0x28(%rbx),%r12
3de0(7): lea 0x1259(%rip),%rsi
3de7(4): mov 0x20(%rbx),%r15
3deb(4): mov 0x18(%rbx),%r14
3def(5): mov $0x5,%edx
3df4(4): mov 0x10(%rbx),%r13
3df8(2): xor %edi,%edi
3dfa(3): mov (%rbx),%rbx
3dfd(4): mov %r8,(%rsp)
3e01(5): call 0xffffd4bf(%rip)
3e06(4): sub $0x8,%rsp
3e0a(3): mov %r13,%r9
3e0d(2): push %r12
3e0f(2): push %r15
3e11(2): push %r14
3e13(5): mov 0x20(%rsp),%r8
3e18(3): mov %rbx,%rcx
3e1b(3): mov %rax,%rdx
3e1e(3): mov %rbp,%rdi
3e21(5): mov $0x1,%esi
3e26(2): xor %eax,%eax
3e28(5): call 0xffffd648(%rip)
3e2d(4): add $0x20,%rsp
3e31(4): add $0x28,%rsp
3e35(1): pop %rbx
3e36(1): pop %rbp
3e37(2): pop %r12
3e39(2): pop %r13
3e3b(2): pop %r14
3e3d(2): pop %r15
3e3f(1): ret near (%rsp)
3e40(4): mov 0x10(%rbx),%r9
3e44(4): mov 0x30(%rbx),%r13
3e48(7): lea 0x1219(%rip),%rsi
3e4f(4): mov 0x28(%rbx),%r12
3e53(4): mov 0x20(%rbx),%r15
3e57(5): mov $0x5,%edx
3e5c(4): mov 0x18(%rbx),%r14
3e60(4): mov 0x8(%rbx),%r8
3e64(2): xor %edi,%edi
3e66(5): mov %r9,0x8(%rsp)
3e6b(3): mov (%rbx),%rbx
3e6e(4): mov %r8,(%rsp)
3e72(5): call 0xffffd44e(%rip)
3e77(2): push %r13
3e79(2): push %r12
3e7b(2): push %r15
3e7d(2): push %r14
3e7f(5): mov 0x28(%rsp),%r9
3e84(2): jmp 0xffffff8f(%rip)
3e86(a): nop 0x0(%rax,%rax,1)
3e90(4): mov 0x40(%rbx),%r10
3e94(4): mov 0x38(%rbx),%r9
3e98(5): mov $0x5,%edx
3e9d(4): mov 0x10(%rbx),%rax
3ea1(4): mov 0x8(%rbx),%r8
3ea5(7): lea 0x1254(%rip),%rsi
3eac(4): mov 0x30(%rbx),%r13
3eb0(4): mov 0x28(%rbx),%r12
3eb4(4): mov 0x20(%rbx),%r15
3eb8(4): mov 0x18(%rbx),%r14
3ebc(5): mov %r10,0x18(%rsp)
3ec1(5): mov %r9,0x10(%rsp)
3ec6(4): mov %rax,(%rsp)
3eca(5): mov %r8,0x8(%rsp)
3ecf(3): mov (%rbx),%rbx
3ed2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
3ee0(3): xor %r9d,%r9d
3ee3(4): cmp $0x0,(%r8)
3ee7(2): jz 0x14(%rip)
3ee9(7): nop 0x0(%rax)
3ef0(4): add $0x1,%r9
3ef4(5): cmp $0x0,0x0(%r8,%r9,8)
3ef9(2): jnz 0xfffffff7(%rip)
3efb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
3f00(4): sub $0x68,%rsp
3f04(3): mov %r8,%r10
3f07(3): xor %r9d,%r9d
3f0a(9): mov $0x28,%rax
3f13(5): mov %rax,0x58(%rsp)
3f18(2): xor %eax,%eax
3f1a(3): mov %rsp,%r8
3f1d(3): nop (%rax)
3f20(3): mov (%r10),%eax
3f23(3): cmp $0x2f,%eax
3f26(2): jnbe 0x44(%rip)
3f28(3): mov %eax,%r11d
3f2b(4): add 0x10(%r10),%r11
3f2f(3): add $0x8,%eax
3f32(3): mov %eax,(%r10)
3f35(3): mov (%r11),%rax
3f38(3): test %rax,%rax
3f3b(4): mov %rax,0x0(%r8,%r9,8)
3f3f(2): jz 0xc(%rip)
3f41(4): add $0x1,%r9
3f45(4): cmp $0xa,%r9
3f49(2): jnz 0xffffffd7(%rip)
3f4b(5): call 0xfffffb75(%rip)
3f50(5): mov 0x58(%rsp),%rax
3f55(9): xor $0x28,%rax
3f5e(2): jnz 0x7(%rip)
3f60(4): add $0x68,%rsp
3f64(1): ret near (%rsp)
3f65(5): call 0xffffd38b(%rip)
3f6a(4): mov 0x8(%r10),%r11
3f6e(4): lea 0x8(%r11),%rax
3f72(4): mov %rax,0x8(%r10)
3f76(2): jmp 0xffffffbf(%rip)

"version_etc" :
3f80(1): push %rbp
3f81(1): push %rbx
3f82(6): mov $0x20,%r10d
3f88(3): xor %r11d,%r11d
3f8b(7): sub $0xb8,%rsp
3f92(9): mov $0x28,%rax
3f9b(5): mov %rax,0x78(%rsp)
3fa0(2): xor %eax,%eax
3fa2(8): lea 0xd0(%rsp),%rax
3faa(8): mov %r8,0xa0(%rsp)
3fb2(8): lea 0xd0(%rsp),%rbx
3fba(5): lea 0x20(%rsp),%r8
3fbf(8): mov %r9,0xa8(%rsp)
3fc7(8): mov $0x20,0x8(%rsp)
3fcf(5): mov %rax,0x10(%rsp)
3fd4(8): lea 0x80(%rsp),%rax
3fdc(3): xor %r9d,%r9d
3fdf(5): mov %rax,0x18(%rsp)
3fe4(3): mov %rax,%rbp
3fe7(9): nop 0x0(%rax,%rax,1)
3ff0(4): cmp $0x2f,%r10d
3ff4(2): jnbe 0x58(%rip)
3ff6(3): mov %r10d,%eax
3ff9(6): mov $0x1,%r11d
3fff(4): add $0x8,%r10d
4003(3): add %rbp,%rax
4006(3): mov (%rax),%rax
4009(3): test %rax,%rax
400c(4): mov %rax,0x0(%r8,%r9,8)
4010(2): jz 0xc(%rip)
4012(4): add $0x1,%r9
4016(4): cmp $0xa,%r9
401a(2): jnz 0xffffffd6(%rip)
401c(3): test %r11b,%r11b
401f(2): jnz 0x26(%rip)
4021(5): call 0xfffffa9f(%rip)
4026(5): mov 0x78(%rsp),%rax
402b(9): xor $0x28,%rax
4034(2): jnz 0xc(%rip)
4036(7): add $0xb8,%rsp
403d(1): pop %rbx
403e(1): pop %rbp
403f(1): ret near (%rsp)
4040(5): call 0xffffd2b0(%rip)
4045(5): mov %r10d,0x8(%rsp)
404a(2): jmp 0xffffffd7(%rip)
404c(3): mov %rbx,%rax
404f(4): add $0x8,%rbx
4053(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4060(1): push %rbx
4061(7): lea 0xe7a(%rip),%rsi
4068(5): mov $0x5,%edx
406d(2): xor %edi,%edi
406f(5): call 0xffffd251(%rip)
4074(7): lea 0xe7c(%rip),%rdx
407b(3): mov %rax,%rsi
407e(5): mov $0x1,%edi
4083(2): xor %eax,%eax
4085(5): call 0xffffd38b(%rip)
408a(7): lea 0xe7c(%rip),%rsi
4091(5): mov $0x5,%edx
4096(2): xor %edi,%edi
4098(5): call 0xffffd228(%rip)
409d(7): lea 0x804(%rip),%rcx
40a4(7): lea 0x6cb(%rip),%rdx
40ab(3): mov %rax,%rsi
40ae(5): mov $0x1,%edi
40b3(2): xor %eax,%eax
40b5(5): call 0xffffd35b(%rip)
40ba(7): mov 0x202fc7(%rip),%rbx
40c1(7): lea 0x1078(%rip),%rsi
40c8(2): xor %edi,%edi
40ca(5): mov $0x5,%edx
40cf(5): call 0xffffd1f1(%rip)
40d4(3): mov %rbx,%rsi
40d7(3): mov %rax,%rdi
40da(1): pop %rbx
40db(5): jmp 0xffffd285(%rip)

"xmalloc" :
40e0(1): push %rbx
40e1(3): mov %rdi,%rbx
40e4(5): call 0xffffd2bc(%rip)
40e9(3): test %rax,%rax
40ec(2): jnz 0x7(%rip)
40ee(3): test %rbx,%rbx
40f1(2): jnz 0x4(%rip)
40f3(1): pop %rbx
40f4(1): ret near (%rsp)
40f5(5): call 0x23b(%rip)

"xnmalloc" :
4100(3): mov %rdi,%rax
4103(3): mul %rax,%rsi,%rdx
4106(3): mov %rax,%rdi
4109(3): seto %al
410c(3): test %rdi,%rdi
410f(2): js 0xc(%rip)
4111(3): movzx %al,%eax
4114(3): test %rax,%rax
4117(2): jnz 0x4(%rip)
4119(2): jmp 0xffffffc7(%rip)
411b(4): sub $0x8,%rsp
411f(5): call 0x211(%rip)

"xrealloc" :
4140(3): test %rsi,%rsi
4143(1): push %rbx
4144(3): mov %rsi,%rbx
4147(2): jnz 0x7(%rip)
4149(3): test %rdi,%rdi
414c(2): jnz 0x1c(%rip)
414e(3): mov %rbx,%rsi
4151(5): call 0xffffd29f(%rip)
4156(3): test %rax,%rax
4159(2): jnz 0x7(%rip)
415b(3): test %rbx,%rbx
415e(2): jnz 0x13(%rip)
4160(1): pop %rbx
4161(1): ret near (%rsp)
4162(6): nop 0x0(%rax,%rax,1)
4168(5): call 0xffffd0b8(%rip)
416d(2): xor %eax,%eax
416f(1): pop %rbx
4170(1): ret near (%rsp)
4171(5): call 0x1bf(%rip)

"xnrealloc" :
4180(3): mov %rsi,%rax
4183(3): mul %rax,%rdx,%rdx
4186(3): mov %rax,%rsi
4189(3): seto %al
418c(3): test %rsi,%rsi
418f(2): js 0xc(%rip)
4191(3): movzx %al,%eax
4194(3): test %rax,%rax
4197(2): jnz 0x4(%rip)
4199(2): jmp 0xffffffa7(%rip)
419b(4): sub $0x8,%rsp
419f(5): call 0x191(%rip)

"x2nrealloc" :
41b0(3): test %rdi,%rdi
41b3(3): mov %rdx,%r9
41b6(3): mov (%rsi),%rcx
41b9(2): jz 0x37(%rip)
41bb(2): xor %edx,%edx
41bd(a): mov $0x6148914691236517204,%rax
41c7(3): div %r9,%rax
41ca(3): cmp %rcx,%rax
41cd(2): jbe 0x3e(%rip)
41cf(3): mov %rcx,%rax
41d2(3): shr $0x1,%rax
41d5(5): lea 0x1(%rax,%rcx,1),%rcx
41da(3): mov %rcx,(%rsi)
41dd(4): imul %r9,%rcx
41e1(3): mov %rcx,%rsi
41e4(5): jmp 0xffffff5c(%rip)
41e9(7): nop 0x0(%rax)
41f0(3): test %rcx,%rcx
41f3(2): jz 0x25(%rip)
41f5(3): mov %rcx,%rax
41f8(3): mul %rax,%r9,%rdx
41fb(3): seto %dl
41fe(3): test %rax,%rax
4201(3): movzx %dl,%edx
4204(2): js 0x7(%rip)
4206(3): test %rdx,%rdx
4209(2): jz 0xffffffd1(%rip)
420b(4): sub $0x8,%rsp
420f(5): call 0x121(%rip)
4214(4): nop 0x0(%rax)
4218(2): xor %edx,%edx
421a(5): mov $0x80,%eax
421f(3): xor %r8d,%r8d
4222(3): div %r9,%rax
4225(3): test %rax,%rax
4228(4): setz %r8b
422c(4): lea 0x0(%r8,%rax,1),%rcx
4230(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4240(3): test %rdi,%rdi
4243(3): mov (%rsi),%rax
4246(2): jz 0x2a(%rip)
4248(a): mov $0x6148914691236517203,%rdx
4252(3): cmp %rdx,%rax
4255(2): jnbe 0x2c(%rip)
4257(3): mov %rax,%rdx
425a(3): shr $0x1,%rdx
425d(5): lea 0x1(%rdx,%rax,1),%rax
4262(3): mov %rax,(%rsi)
4265(3): mov %rax,%rsi
4268(5): jmp 0xfffffed8(%rip)
426d(3): nop (%rax)
4270(3): test %rax,%rax
4273(5): mov $0x80,%edx
4278(4): cmove %rdx,%rax
427c(3): test %rax,%rax
427f(2): jns 0xffffffe3(%rip)
4281(4): sub $0x8,%rsp
4285(5): call 0xab(%rip)

"xzalloc" :
4290(1): push %rbx
4291(3): mov %rdi,%rbx
4294(5): call 0xfffffe4c(%rip)
4299(3): mov %rbx,%rdx
429c(2): xor %esi,%esi
429e(3): mov %rax,%rdi
42a1(1): pop %rbx
42a2(5): jmp 0xffffd09e(%rip)

"xcalloc" :
42b0(3): mov %rdi,%rax
42b3(4): sub $0x8,%rsp
42b7(3): mul %rax,%rsi,%rdx
42ba(3): seto %dl
42bd(3): test %rax,%rax
42c0(2): js 0x19(%rip)
42c2(3): movzx %dl,%edx
42c5(3): test %rdx,%rdx
42c8(2): jnz 0x11(%rip)
42ca(5): call 0xffffd0a6(%rip)
42cf(3): test %rax,%rax
42d2(2): jz 0x7(%rip)
42d4(4): add $0x8,%rsp
42d8(1): ret near (%rsp)
42d9(5): call 0x57(%rip)

"xmemdup" :
42e0(1): push %rbp
42e1(1): push %rbx
42e2(3): mov %rdi,%rbp
42e5(3): mov %rsi,%rdi
42e8(3): mov %rsi,%rbx
42eb(4): sub $0x8,%rsp
42ef(5): call 0xfffffdf1(%rip)
42f4(4): add $0x8,%rsp
42f8(3): mov %rbx,%rdx
42fb(3): mov %rbp,%rsi
42fe(1): pop %rbx
42ff(1): pop %rbp
4300(3): mov %rax,%rdi
4303(5): jmp 0xffffd07d(%rip)

"xstrdup" :
4310(1): push %rbx
4311(3): mov %rdi,%rbx
4314(5): call 0xffffcfcc(%rip)
4319(3): mov %rbx,%rdi
431c(4): lea 0x1(%rax),%rsi
4320(1): pop %rbx
4321(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4330(7): lea 0xeb8(%rip),%rsi
4337(4): sub $0x8,%rsp
433b(5): mov $0x5,%edx
4340(2): xor %edi,%edi
4342(5): call 0xffffcf7e(%rip)
4347(6): mov 0x202ccb(%rip),%edi
434d(7): lea 0x60c(%rip),%rdx
4354(3): mov %rax,%rcx
4357(2): xor %esi,%esi
4359(2): xor %eax,%eax
435b(5): call 0xffffd0c5(%rip)
4360(5): call 0xffffced0(%rip)

"rpl_mbrtowc" :
4370(2): push %r13
4372(2): push %r12
4374(3): mov %rsi,%r13
4377(1): push %rbp
4378(1): push %rbx
4379(3): mov %rdi,%rbx
437c(3): mov %rdx,%r12
437f(4): sub $0x18,%rsp
4383(9): mov $0x28,%rax
438c(5): mov %rax,0x8(%rsp)
4391(2): xor %eax,%eax
4393(5): lea 0x4(%rsp),%rax
4398(3): test %rdi,%rdi
439b(4): cmove %rax,%rbx
439f(3): mov %rbx,%rdi
43a2(5): call 0xffffcf6e(%rip)
43a7(4): cmp $0xfffffffd,%rax
43ab(3): mov %rax,%rbp
43ae(2): jbe 0x22(%rip)
43b0(3): test %r12,%r12
43b3(2): jz 0x1d(%rip)
43b5(2): xor %edi,%edi
43b7(5): call 0xc9(%rip)
43bc(2): test %al,%al
43be(2): jnz 0x12(%rip)
43c0(5): movzx 0x0(%r13),%eax
43c5(5): mov $0x1,%ebp
43ca(2): mov %eax,(%rbx)
43cc(4): nop 0x0(%rax)
43d0(5): mov 0x8(%rsp),%rdx
43d5(9): xor $0x28,%rdx
43de(3): mov %rbp,%rax
43e1(2): jnz 0xd(%rip)
43e3(4): add $0x18,%rsp
43e7(1): pop %rbx
43e8(1): pop %rbp
43e9(2): pop %r12
43eb(2): pop %r13
43ed(1): ret near (%rsp)
43ee(5): call 0xffffcf02(%rip)

"close_stream" :
4400(2): push %r12
4402(1): push %rbp
4403(3): mov %rdi,%rbp
4406(1): push %rbx
4407(5): call 0xffffce69(%rip)
440c(3): mov 0x0(%rbp),%ebx
440f(3): mov %rbp,%rdi
4412(3): mov %rax,%r12
4415(5): call 0x10b(%rip)
441a(3): and $0x20,%ebx
441d(2): test %ebx,%ebx
441f(2): jnz 0x19(%rip)
4421(2): test %eax,%eax
4423(2): jz 0xc(%rip)
4425(3): test %r12,%r12
4428(5): mov $0xffffffff,%eax
442d(2): jz 0x3b(%rip)
442f(1): pop %rbx
4430(1): pop %rbp
4431(2): pop %r12
4433(1): ret near (%rsp)
4434(4): nop 0x0(%rax)
4438(2): test %eax,%eax
443a(2): jnz 0x1e(%rip)
443c(5): call 0xffffce04(%rip)
4441(6): mov $0x0,(%rax)
4447(5): mov $0xffffffff,%eax
444c(1): pop %rbx
444d(1): pop %rbp
444e(2): pop %r12
4450(1): ret near (%rsp)
4451(7): nop 0x0(%rax)
4458(1): pop %rbx
4459(5): mov $0xffffffff,%eax
445e(1): pop %rbp
445f(2): pop %r12
4461(1): ret near (%rsp)
4462(6): nop 0x0(%rax,%rax,1)
4468(5): call 0xffffcdd8(%rip)
446d(3): cmp $0x9,(%rax)
4470(1): pop %rbx
4471(1): pop %rbp
4472(2): pop %r12
4474(3): setnz %al
4477(3): movzx %al,%eax
447a(2): neg %eax
447c(1): ret near (%rsp)

"hard_locale" :
4480(4): sub $0x8,%rsp
4484(2): xor %esi,%esi
4486(5): call 0xffffcf7a(%rip)
448b(3): mov %rax,%rdx
448e(5): mov $0x1,%eax
4493(3): test %rdx,%rdx
4496(2): jz 0x1f(%rip)
4498(7): lea 0xd61(%rip),%rdi
449f(5): mov $0x2,%ecx
44a4(3): mov %rdx,%rsi
44a7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
44a9(3): setnbe %cl
44ac(3): sbb $0x0,%cl
44af(2): xor %eax,%eax
44b1(2): test %cl,%cl
44b3(2): jnz 0xd(%rip)
44b5(4): add $0x8,%rsp
44b9(1): ret near (%rsp)
44ba(6): nop 0x0(%rax,%rax,1)
44c0(7): lea 0xd3b(%rip),%rdi
44c7(5): mov $0x6,%ecx
44cc(3): mov %rdx,%rsi
44cf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
44d1(3): setnbe %al
44d4(2): sbb $0x0,%al
44d6(2): test %al,%al
44d8(3): setnz %al
44db(4): add $0x8,%rsp
44df(1): ret near (%rsp)

"locale_charset" :
44e0(4): sub $0x8,%rsp
44e4(5): mov $0xe,%edi
44e9(5): call 0xffffced7(%rip)
44ee(3): test %rax,%rax
44f1(2): jz 0x1f(%rip)
44f3(3): cmp $0x0,(%rax)
44f6(7): lea 0xd0b(%rip),%rdx
44fd(4): cmove %rdx,%rax
4501(4): add $0x8,%rsp
4505(1): ret near (%rsp)
4506(a): nop 0x0(%rax,%rax,1)
4510(7): lea 0xcf1(%rip),%rax
4517(4): add $0x8,%rsp
451b(1): ret near (%rsp)

"rpl_fclose" :
4520(2): push %r12
4522(1): push %rbp
4523(1): push %rbx
4524(3): mov %rdi,%rbx
4527(5): call 0xffffce69(%rip)
452c(2): test %eax,%eax
452e(3): mov %rbx,%rdi
4531(2): js 0x56(%rip)
4533(5): call 0xffffcead(%rip)
4538(2): test %eax,%eax
453a(2): jnz 0x2e(%rip)
453c(3): mov %rbx,%rdi
453f(5): call 0x61(%rip)
4544(2): test %eax,%eax
4546(2): jz 0x3e(%rip)
4548(5): call 0xffffccf8(%rip)
454d(3): mov (%rax),%r12d
4550(3): mov %rbx,%rdi
4553(3): mov %rax,%rbp
4556(5): call 0xffffcd4a(%rip)
455b(3): test %r12d,%r12d
455e(2): jnz 0x32(%rip)
4560(1): pop %rbx
4561(1): pop %rbp
4562(2): pop %r12
4564(1): ret near (%rsp)
4565(3): nop (%rax)
4568(3): mov %rbx,%rdi
456b(5): call 0xffffce25(%rip)
4570(2): xor %esi,%esi
4572(5): mov $0x1,%edx
4577(2): mov %eax,%edi
4579(5): call 0xffffcdb7(%rip)
457e(4): cmp $0xffffffff,%rax
4582(2): jnz 0xffffffba(%rip)
4584(3): mov %rbx,%rdi
4587(1): pop %rbx
4588(1): pop %rbp
4589(2): pop %r12
458b(5): jmp 0xffffcd15(%rip)
4590(4): mov %r12d,0x0(%rbp)
4594(5): mov $0xffffffff,%eax
4599(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
45a0(3): test %rdi,%rdi
45a3(1): push %rbx
45a4(3): mov %rdi,%rbx
45a7(2): jz 0x13(%rip)
45a9(5): call 0xffffce37(%rip)
45ae(2): test %eax,%eax
45b0(2): jz 0xa(%rip)
45b2(6): test $0x100,(%rbx)
45b8(2): jnz 0x10(%rip)
45ba(3): mov %rbx,%rdi
45bd(1): pop %rbx
45be(5): jmp 0xffffcdf2(%rip)
45c3(5): nop 0x0(%rax,%rax,1)
45c8(3): mov %rbx,%rdi
45cb(5): mov $0x1,%edx
45d0(2): xor %esi,%esi
45d2(5): call 0xe(%rip)
45d7(3): mov %rbx,%rdi
45da(1): pop %rbx
45db(5): jmp 0xffffcdd5(%rip)

"rpl_fseeko" :
45e0(4): mov 0x8(%rdi),%rax
45e4(4): cmp %rax,0x10(%rdi)
45e8(2): jz 0x8(%rip)
45ea(5): jmp 0xffffce46(%rip)
45ef(1): nop 
45f0(4): mov 0x20(%rdi),%rax
45f4(4): cmp %rax,0x28(%rdi)
45f8(2): jnz 0xfffffff2(%rip)
45fa(5): cmp $0x0,0x48(%rdi)
45ff(2): jnz 0xffffffeb(%rip)
4601(2): push %r12
4603(1): push %rbp
4604(3): mov %edx,%r12d
4607(1): push %rbx
4608(3): mov %rsi,%rbp
460b(3): mov %rdi,%rbx
460e(5): call 0xffffcd82(%rip)
4613(3): mov %r12d,%edx
4616(3): mov %rbp,%rsi
4619(2): mov %eax,%edi
461b(5): call 0xffffcd15(%rip)
4620(4): cmp $0xffffffff,%rax
4624(2): jz 0xe(%rip)
4626(3): and $0xef,(%rbx)
4629(7): mov %rax,0x90(%rbx)
4630(2): xor %eax,%eax
4632(1): pop %rbx
4633(1): pop %rbp
4634(2): pop %r12
4636(1): ret near (%rsp)

"__libc_csu_init" :
4640(2): push %r15
4642(2): push %r14
4644(3): mov %rdx,%r15
4647(2): push %r13
4649(2): push %r12
464b(7): lea 0x20255e(%rip),%r12
4652(1): push %rbp
4653(7): lea 0x20255e(%rip),%rbp
465a(1): push %rbx
465b(3): mov %edi,%r13d
465e(3): mov %rsi,%r14
4661(3): sub %r12,%rbp
4664(4): sub $0x8,%rsp
4668(4): sar $0x3,%rbp
466c(5): call 0xffffcb8c(%rip)
4671(3): test %rbp,%rbp
4674(2): jz 0x22(%rip)
4676(2): xor %ebx,%ebx
4678(8): nop 0x0(%rax,%rax,1)
4680(3): mov %r15,%rdx
4683(3): mov %r14,%rsi
4686(3): mov %r13d,%edi
4689(4): call 0x0(%r12,%rbx,8)
468d(4): add $0x1,%rbx
4691(3): cmp %rbx,%rbp
4694(2): jnz 0xffffffec(%rip)
4696(4): add $0x8,%rsp
469a(1): pop %rbx
469b(1): pop %rbp
469c(2): pop %r12
469e(2): pop %r13
46a0(2): pop %r14
46a2(2): pop %r15
46a4(1): ret near (%rsp)

"atexit" :
46c0(7): mov 0x202941(%rip),%rdx
46c7(2): xor %esi,%esi
46c9(5): jmp 0xffffcd77(%rip)

"_fini" :
46d0(4): sub $0x8,%rsp
46d4(4): add $0x8,%rsp
46d8(1): ret near (%rsp)

