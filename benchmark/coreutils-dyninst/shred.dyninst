
"getenv@plt" :
1c40(6): jmp 0x20c11a(%rip)
1c46(5): push $0x0

"free@plt" :
1c50(6): jmp 0x20c112(%rip)
1c56(5): push $0x1

"abort@plt" :
1c60(6): jmp 0x20c10a(%rip)
1c66(5): push $0x2

"__errno_location@plt" :
1c70(6): jmp 0x20c102(%rip)
1c76(5): push $0x3

"fdatasync@plt" :
1c80(6): jmp 0x20c0fa(%rip)
1c86(5): push $0x4

"unlink@plt" :
1c90(6): jmp 0x20c0f2(%rip)
1c96(5): push $0x5

"strncmp@plt" :
1ca0(6): jmp 0x20c0ea(%rip)
1ca6(5): push $0x6

"_exit@plt" :
1cb0(6): jmp 0x20c0e2(%rip)
1cb6(5): push $0x7

"__fpending@plt" :
1cc0(6): jmp 0x20c0da(%rip)
1cc6(5): push $0x8

"__read_chk@plt" :
1cd0(6): jmp 0x20c0d2(%rip)
1cd6(5): push $0x9

"isatty@plt" :
1ce0(6): jmp 0x20c0ca(%rip)
1ce6(5): push $0xa

"localeconv@plt" :
1cf0(6): jmp 0x20c0c2(%rip)
1cf6(5): push $0xb

"fcntl@plt" :
1d00(6): jmp 0x20c0ba(%rip)
1d06(5): push $0xc

"write@plt" :
1d10(6): jmp 0x20c0b2(%rip)
1d16(5): push $0xd

"getpid@plt" :
1d20(6): jmp 0x20c0aa(%rip)
1d26(5): push $0xe

"fread_unlocked@plt" :
1d30(6): jmp 0x20c0a2(%rip)
1d36(5): push $0xf

"textdomain@plt" :
1d40(6): jmp 0x20c09a(%rip)
1d46(5): push $0x10

"fclose@plt" :
1d50(6): jmp 0x20c092(%rip)
1d56(5): push $0x11

"bindtextdomain@plt" :
1d60(6): jmp 0x20c08a(%rip)
1d66(5): push $0x12

"dcgettext@plt" :
1d70(6): jmp 0x20c082(%rip)
1d76(5): push $0x13

"__ctype_get_mb_cur_max@plt" :
1d80(6): jmp 0x20c07a(%rip)
1d86(5): push $0x14

"strlen@plt" :
1d90(6): jmp 0x20c072(%rip)
1d96(5): push $0x15

"__stack_chk_fail@plt" :
1da0(6): jmp 0x20c06a(%rip)
1da6(5): push $0x16

"getuid@plt" :
1db0(6): jmp 0x20c062(%rip)
1db6(5): push $0x17

"getopt_long@plt" :
1dc0(6): jmp 0x20c05a(%rip)
1dc6(5): push $0x18

"mbrtowc@plt" :
1dd0(6): jmp 0x20c052(%rip)
1dd6(5): push $0x19

"strchr@plt" :
1de0(6): jmp 0x20c04a(%rip)
1de6(5): push $0x1a

"__fxstatat@plt" :
1df0(6): jmp 0x20c042(%rip)
1df6(5): push $0x1b

"__overflow@plt" :
1e00(6): jmp 0x20c03a(%rip)
1e06(5): push $0x1c

"strrchr@plt" :
1e10(6): jmp 0x20c032(%rip)
1e16(5): push $0x1d

"ftruncate@plt" :
1e20(6): jmp 0x20c02a(%rip)
1e26(5): push $0x1e

"lseek@plt" :
1e30(6): jmp 0x20c022(%rip)
1e36(5): push $0x1f

"gettimeofday@plt" :
1e40(6): jmp 0x20c01a(%rip)
1e46(5): push $0x20

"__assert_fail@plt" :
1e50(6): jmp 0x20c012(%rip)
1e56(5): push $0x21

"__strtoul_internal@plt" :
1e60(6): jmp 0x20c00a(%rip)
1e66(5): push $0x22

"memset@plt" :
1e70(6): jmp 0x20c002(%rip)
1e76(5): push $0x23

"ioctl@plt" :
1e80(6): jmp 0x20bffa(%rip)
1e86(5): push $0x24

"close@plt" :
1e90(6): jmp 0x20bff2(%rip)
1e96(5): push $0x25

"memcmp@plt" :
1ea0(6): jmp 0x20bfea(%rip)
1ea6(5): push $0x26

"fputs_unlocked@plt" :
1eb0(6): jmp 0x20bfe2(%rip)
1eb6(5): push $0x27

"calloc@plt" :
1ec0(6): jmp 0x20bfda(%rip)
1ec6(5): push $0x28

"strcmp@plt" :
1ed0(6): jmp 0x20bfd2(%rip)
1ed6(5): push $0x29

"__memcpy_chk@plt" :
1ee0(6): jmp 0x20bfca(%rip)
1ee6(5): push $0x2a

"syscall@plt" :
1ef0(6): jmp 0x20bfc2(%rip)
1ef6(5): push $0x2b

"memcpy@plt" :
1f00(6): jmp 0x20bfba(%rip)
1f06(5): push $0x2c

"time@plt" :
1f10(6): jmp 0x20bfb2(%rip)
1f16(5): push $0x2d

"fileno@plt" :
1f20(6): jmp 0x20bfaa(%rip)
1f26(5): push $0x2e

"getgid@plt" :
1f30(6): jmp 0x20bfa2(%rip)
1f36(5): push $0x2f

"sync@plt" :
1f40(6): jmp 0x20bf9a(%rip)
1f46(5): push $0x30

"malloc@plt" :
1f50(6): jmp 0x20bf92(%rip)
1f56(5): push $0x31

"fflush@plt" :
1f60(6): jmp 0x20bf8a(%rip)
1f66(5): push $0x32

"nl_langinfo@plt" :
1f70(6): jmp 0x20bf82(%rip)
1f76(5): push $0x33

"__fxstat@plt" :
1f80(6): jmp 0x20bf7a(%rip)
1f86(5): push $0x34

"__freading@plt" :
1f90(6): jmp 0x20bf72(%rip)
1f96(5): push $0x35

"realloc@plt" :
1fa0(6): jmp 0x20bf6a(%rip)
1fa6(5): push $0x36

"__strcpy_chk@plt" :
1fb0(6): jmp 0x20bf62(%rip)
1fb6(5): push $0x37

"fdopen@plt" :
1fc0(6): jmp 0x20bf5a(%rip)
1fc6(5): push $0x38

"setlocale@plt" :
1fd0(6): jmp 0x20bf52(%rip)
1fd6(5): push $0x39

"__printf_chk@plt" :
1fe0(6): jmp 0x20bf4a(%rip)
1fe6(5): push $0x3a

"setvbuf@plt" :
1ff0(6): jmp 0x20bf42(%rip)
1ff6(5): push $0x3b

"chmod@plt" :
2000(6): jmp 0x20bf3a(%rip)
2006(5): push $0x3c

"memmove@plt" :
2010(6): jmp 0x20bf32(%rip)
2016(5): push $0x3d

"error@plt" :
2020(6): jmp 0x20bf2a(%rip)
2026(5): push $0x3e

"fsync@plt" :
2030(6): jmp 0x20bf22(%rip)
2036(5): push $0x3f

"__explicit_bzero_chk@plt" :
2040(6): jmp 0x20bf1a(%rip)
2046(5): push $0x40

"open@plt" :
2050(6): jmp 0x20bf12(%rip)
2056(5): push $0x41

"fseeko@plt" :
2060(6): jmp 0x20bf0a(%rip)
2066(5): push $0x42

"fopen@plt" :
2070(6): jmp 0x20bf02(%rip)
2076(5): push $0x43

"__cxa_atexit@plt" :
2080(6): jmp 0x20befa(%rip)
2086(5): push $0x44

"renameat@plt" :
2090(6): jmp 0x20bef2(%rip)
2096(5): push $0x45

"getpagesize@plt" :
20a0(6): jmp 0x20beea(%rip)
20a6(5): push $0x46

"getppid@plt" :
20b0(6): jmp 0x20bee2(%rip)
20b6(5): push $0x47

"exit@plt" :
20c0(6): jmp 0x20beda(%rip)
20c6(5): push $0x48

"fwrite@plt" :
20d0(6): jmp 0x20bed2(%rip)
20d6(5): push $0x49

"__fprintf_chk@plt" :
20e0(6): jmp 0x20beca(%rip)
20e6(5): push $0x4a

"mbsinit@plt" :
20f0(6): jmp 0x20bec2(%rip)
20f6(5): push $0x4b

"iswprint@plt" :
2100(6): jmp 0x20beba(%rip)
2106(5): push $0x4c

"__ctype_b_loc@plt" :
2110(6): jmp 0x20beb2(%rip)
2116(5): push $0x4d

"__sprintf_chk@plt" :
2120(6): jmp 0x20beaa(%rip)
2126(5): push $0x4e

".plt.got" :
2130(6): jmp 0x20bec2(%rip)
2136(2): nop 

"_init" :
1c18(4): sub $0x8,%rsp
1c1c(7): mov 0x20c3c5(%rip),%rax
1c23(3): test %rax,%rax
1c26(2): jz 0x4(%rip)
1c28(2): call %rax
1c2a(4): add $0x8,%rsp
1c2e(1): ret near (%rsp)

"main" :
2140(2): push %r15
2142(2): push %r14
2144(2): push %r13
2146(2): push %r12
2148(7): lea 0x20b811(%rip),%r12
214f(1): push %rbp
2150(1): push %rbx
2151(2): mov %edi,%ebp
2153(4): pxor %xmm0,%xmm0
2157(3): mov %rsi,%rbx
215a(7): sub $0x88,%rsp
2161(3): mov (%rsi),%rdi
2164(3): xor %r13d,%r13d
2167(9): mov $0x28,%rax
2170(5): mov %rax,0x78(%rsp)
2175(2): xor %eax,%eax
2177(5): movaps %xmm0,0x50(%rsp)
217c(5): movaps %xmm0,0x60(%rsp)
2181(5): call 0x32df(%rip)
2186(7): lea 0x8c23(%rip),%rsi
218d(5): mov $0x6,%edi
2192(5): call 0xfffffe3e(%rip)
2197(7): lea 0x7583(%rip),%rsi
219e(7): lea 0x7553(%rip),%rdi
21a5(5): call 0xfffffbbb(%rip)
21aa(7): lea 0x7547(%rip),%rdi
21b1(5): call 0xfffffb8f(%rip)
21b6(7): lea 0x22d3(%rip),%rdi
21bd(5): call 0x7393(%rip)
21c2(9): mov $0x3,0x58(%rsp)
21cb(9): mov $0xffffffff,0x60(%rsp)
21d4(4): nop 0x0(%rax)
21d8(7): lea 0x75a8(%rip),%rdx
21df(3): xor %r8d,%r8d
21e2(3): mov %r12,%rcx
21e5(3): mov %rbx,%rsi
21e8(2): mov %ebp,%edi
21ea(5): call 0xfffffbd6(%rip)
21ef(3): cmp $0xff,%eax
21f2(6): jz 0x1fa(%rip)
21f8(3): cmp $0x73,%eax
21fb(6): jz 0xf5(%rip)
2201(2): jle 0x2f(%rip)
2203(3): cmp $0x78,%eax
2206(6): jz 0xda(%rip)
220c(6): jnle 0x8c(%rip)
2212(3): cmp $0x75,%eax
2215(6): jz 0x12b(%rip)
221b(3): cmp $0x76,%eax
221e(6): jnz 0x79f(%rip)
2224(5): mov $0x1,0x6c(%rsp)
2229(2): jmp 0xffffffaf(%rip)
222b(5): nop 0x0(%rax,%rax,1)
2230(5): cmp $0xffffff7e,%eax
2235(6): jz 0x760(%rip)
223b(6): jle 0x165(%rip)
2241(3): cmp $0x66,%eax
2244(6): jz 0x14c(%rip)
224a(3): cmp $0x6e,%eax
224d(6): jnz 0x770(%rip)
2253(7): lea 0x74df(%rip),%rsi
225a(5): mov $0x5,%edx
225f(2): xor %edi,%edi
2261(5): call 0xfffffb0f(%rip)
2266(7): mov 0x20be4b(%rip),%rdi
226d(7): lea 0x8b3c(%rip),%rcx
2274(3): mov %rax,%r8
2277(3): xor %r9d,%r9d
227a(a): mov $0x4611686018427387903,%rdx
2284(2): xor %esi,%esi
2286(5): call 0x67fa(%rip)
228b(5): mov %rax,0x58(%rsp)
2290(5): jmp 0xffffff48(%rip)
2295(3): nop (%rax)
2298(3): cmp $0x7a,%eax
229b(2): jz 0x35(%rip)
229d(3): add $0x80,%eax
22a0(6): jnz 0x71d(%rip)
22a6(3): test %r13,%r13
22a9(7): mov 0x20be08(%rip),%r14
22b0(2): jz 0x15(%rip)
22b2(3): mov %r14,%rsi
22b5(3): mov %r13,%rdi
22b8(5): call 0xfffffc18(%rip)
22bd(2): test %eax,%eax
22bf(6): jnz 0x75b(%rip)
22c5(3): mov %r14,%r13
22c8(5): jmp 0xffffff10(%rip)
22cd(3): nop (%rax)
22d0(5): mov $0x1,0x6e(%rsp)
22d5(5): jmp 0xffffff03(%rip)
22da(6): nop 0x0(%rax,%rax,1)
22e0(5): mov $0x1,0x6d(%rsp)
22e5(5): jmp 0xfffffef3(%rip)
22ea(6): nop 0x0(%rax,%rax,1)
22f0(7): lea 0x7464(%rip),%rsi
22f7(5): mov $0x5,%edx
22fc(2): xor %edi,%edi
22fe(5): call 0xfffffa72(%rip)
2303(4): sub $0x8,%rsp
2307(7): mov 0x20bdaa(%rip),%rdi
230e(7): lea 0x7458(%rip),%r8
2315(2): push $0x0
2317(2): xor %edx,%edx
2319(3): mov %rax,%r9
231c(a): mov $0x9223372036854775807,%rcx
2326(2): xor %esi,%esi
2328(5): call 0x6658(%rip)
232d(5): mov %rax,0x70(%rsp)
2332(1): pop %rax
2333(1): pop %rdx
2334(5): jmp 0xfffffea4(%rip)
2339(7): nop 0x0(%rax)
2340(7): mov 0x20bd71(%rip),%rsi
2347(3): test %rsi,%rsi
234a(6): jz 0x95(%rip)
2350(7): mov 0x20bcc1(%rip),%r9
2357(7): lea 0x20b762(%rip),%rdx
235e(7): lea 0x839b(%rip),%rcx
2365(7): lea 0x73e6(%rip),%rdi
236c(6): mov $0x4,%r8d
2372(5): call 0x203e(%rip)
2377(7): lea 0x8382(%rip),%rdx
237e(3): mov 0x0(%rdx,%rax,4),%eax
2381(4): mov %eax,0x68(%rsp)
2385(5): jmp 0xfffffe53(%rip)
238a(6): nop 0x0(%rax,%rax,1)
2390(5): mov $0x1,0x50(%rsp)
2395(5): jmp 0xfffffe43(%rip)
239a(6): nop 0x0(%rax,%rax,1)
23a0(5): cmp $0xffffff7d,%eax
23a5(6): jnz 0x618(%rip)
23ab(7): mov 0x20bcf6(%rip),%rdi
23b2(7): mov 0x20bc57(%rip),%rcx
23b9(7): lea 0x73bb(%rip),%r8
23c0(7): lea 0x732d(%rip),%rdx
23c7(7): lea 0x72aa(%rip),%rsi
23ce(3): xor %r9d,%r9d
23d1(2): xor %eax,%eax
23d3(5): call 0x61bd(%rip)
23d8(2): xor %edi,%edi
23da(5): call 0xfffffce6(%rip)
23df(8): mov $0x3,0x68(%rsp)
23e7(5): jmp 0xfffffdf1(%rip)
23ec(7): movsxd 0x20bcbd(%rip),%r12
23f3(3): mov %eax,%r14d
23f6(3): mov %r12,%rax
23f9(4): shl/sal $0x3,%r12
23fd(2): sub %eax,%ebp
23ff(6): jz 0x59d(%rip)
2405(4): or $0xffffffff,%rsi
2409(3): mov %r13,%rdi
240c(5): call 0x4db4(%rip)
2411(3): test %rax,%rax
2414(7): mov %rax,0x20bcd5(%rip)
241b(6): jz 0x5d0(%rip)
2421(7): lea 0x728(%rip),%rdi
2428(5): call 0x7128(%rip)
242d(2): test %ebp,%ebp
242f(6): jle 0x185(%rip)
2435(5): lea 0x8(%rbx,%r12,1),%rax
243a(3): lea 0xffffffff(%rbp),%edx
243d(4): lea 0x0(%rbx,%r12,1),%r15
2441(5): mov $0x1,0x13(%rsp)
2446(5): mov %r14d,0x20(%rsp)
244b(4): lea 0x0(%rax,%rdx,8),%rax
244f(4): mov %rax,(%rsp)
2453(5): lea 0x50(%rsp),%rax
2458(5): mov %rax,0x8(%rsp)
245d(2): jmp 0x58(%rip)
245f(5): mov $0x3,%esi
2464(5): mov $0x1,%edi
2469(7): mov 0x20bc80(%rip),%rbp
2470(5): call 0x6ae0(%rip)
2475(2): test %eax,%eax
2477(6): js 0x1a7(%rip)
247d(3): test $0x4,%ah
2480(6): jnz 0xcd(%rip)
2486(5): mov 0x8(%rsp),%rcx
248b(3): mov %rbp,%rdx
248e(3): mov %rbx,%rsi
2491(5): mov $0x1,%edi
2496(5): call 0x107a(%rip)
249b(4): and %al,0x13(%rsp)
249f(3): mov %rbx,%rdi
24a2(4): add $0x8,%r15
24a6(5): call 0xfffff7aa(%rip)
24ab(4): cmp (%rsp),%r15
24af(6): jz 0x10a(%rip)
24b5(3): mov (%r15),%rdx
24b8(5): mov $0x3,%esi
24bd(2): xor %edi,%edi
24bf(5): call 0x4ae1(%rip)
24c4(3): mov %rax,%rdi
24c7(5): call 0x6459(%rip)
24cc(3): mov (%r15),%rbp
24cf(7): lea 0x837c(%rip),%rdi
24d6(5): mov $0x2,%ecx
24db(3): mov %rax,%rbx
24de(3): mov %rbp,%rsi
24e1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
24e3(3): setnbe %al
24e6(2): sbb $0x0,%al
24e8(2): test %al,%al
24ea(6): jz 0xffffff75(%rip)
24f0(2): xor %eax,%eax
24f2(5): mov $0x101,%esi
24f7(3): mov %rbp,%rdi
24fa(7): mov 0x20bbef(%rip),%r12
2501(5): call 0x21cf(%rip)
2506(2): test %eax,%eax
2508(3): mov %eax,%r14d
250b(2): js 0x6d(%rip)
250d(5): mov 0x8(%rsp),%rcx
2512(3): mov %r12,%rdx
2515(3): mov %rbx,%rsi
2518(3): mov %r14d,%edi
251b(5): call 0xff5(%rip)
2520(3): mov %r14d,%edi
2523(3): mov %eax,%r13d
2526(5): call 0xfffff96a(%rip)
252b(2): test %eax,%eax
252d(6): jnz 0xbd(%rip)
2533(3): test %r13b,%r13b
2536(2): jz 0xd(%rip)
2538(5): cmp $0x0,0x68(%rsp)
253d(6): jnz 0x151(%rip)
2543(5): and %r13b,0x13(%rsp)
2548(5): jmp 0xffffff57(%rip)
254d(7): lea 0x7fec(%rip),%rsi
2554(5): mov $0x5,%edx
2559(2): xor %edi,%edi
255b(5): call 0xfffff815(%rip)
2560(3): mov %rbx,%rcx
2563(3): mov %rax,%rdx
2566(2): xor %esi,%esi
2568(2): xor %eax,%eax
256a(2): xor %edi,%edi
256c(5): call 0xfffffab4(%rip)
2571(2): xor %eax,%eax
2573(5): jmp 0xffffff28(%rip)
2578(5): call 0xfffff6f8(%rip)
257d(3): cmp $0xd,(%rax)
2580(3): mov %rax,%r13
2583(6): jz 0xce(%rip)
2589(7): lea 0x7fe0(%rip),%rsi
2590(5): mov $0x5,%edx
2595(2): xor %edi,%edi
2597(5): call 0xfffff7d9(%rip)
259c(4): mov 0x0(%r13),%esi
25a0(3): mov %rax,%rdx
25a3(3): mov %rbx,%rcx
25a6(2): xor %edi,%edi
25a8(2): xor %eax,%eax
25aa(3): xor %r13d,%r13d
25ad(5): call 0xfffffa73(%rip)
25b2(2): jmp 0xffffff91(%rip)
25b4(5): mov $0x1,0x13(%rsp)
25b9(5): movzx 0x13(%rsp),%eax
25be(3): xor $0x1,%eax
25c1(5): mov 0x78(%rsp),%rcx
25c6(9): xor $0x28,%rcx
25cf(3): movzx %al,%eax
25d2(6): jnz 0x414(%rip)
25d8(7): add $0x88,%rsp
25df(1): pop %rbx
25e0(1): pop %rbp
25e1(2): pop %r12
25e3(2): pop %r13
25e5(2): pop %r14
25e7(2): pop %r15
25e9(1): ret near (%rsp)
25ea(7): lea 0x71c6(%rip),%rsi
25f1(5): mov $0x5,%edx
25f6(2): xor %edi,%edi
25f8(3): xor %r13d,%r13d
25fb(5): call 0xfffff775(%rip)
2600(3): mov %rax,%rbp
2603(5): call 0xfffff66d(%rip)
2608(2): mov (%rax),%esi
260a(3): mov %rbx,%rcx
260d(3): mov %rbp,%rdx
2610(2): xor %edi,%edi
2612(2): xor %eax,%eax
2614(5): call 0xfffffa0c(%rip)
2619(5): jmp 0xffffff2a(%rip)
261e(7): lea 0x7181(%rip),%rsi
2625(5): mov $0x5,%edx
262a(2): xor %edi,%edi
262c(5): call 0xfffff744(%rip)
2631(3): mov %rax,%rbp
2634(5): call 0xfffff63c(%rip)
2639(2): mov (%rax),%esi
263b(3): mov %rbx,%rcx
263e(2): xor %eax,%eax
2640(3): mov %rbp,%rdx
2643(2): xor %edi,%edi
2645(5): call 0xfffff9db(%rip)
264a(2): xor %eax,%eax
264c(5): jmp 0xfffffe4f(%rip)
2651(5): cmp $0x0,0x50(%rsp)
2656(6): jz 0xffffff33(%rip)
265c(5): mov $0x80,%esi
2661(3): mov %rbp,%rdi
2664(5): call 0xfffff99c(%rip)
2669(2): test %eax,%eax
266b(6): jnz 0xffffff1e(%rip)
2671(5): mov $0x101,%esi
2676(3): mov %rbp,%rdi
2679(5): call 0x2057(%rip)
267e(2): test %eax,%eax
2680(3): mov %eax,%r14d
2683(6): jns 0xfffffe8a(%rip)
2689(5): jmp 0xffffff00(%rip)
268e(3): mov %rbp,%rdi
2691(5): call 0x628f(%rip)
2696(3): mov %rax,%r14
2699(3): mov %rax,%rdi
269c(5): mov %rax,0x28(%rsp)
26a1(5): call 0x1f7f(%rip)
26a6(3): mov %r14,%rdi
26a9(3): mov %rax,%r12
26ac(5): call 0x1e94(%rip)
26b1(2): xor %edi,%edi
26b3(3): mov %rax,%rdx
26b6(5): mov $0x3,%esi
26bb(5): mov %rax,0x40(%rsp)
26c0(5): call 0x48e0(%rip)
26c5(3): mov %rax,%rdi
26c8(5): call 0x6258(%rip)
26cd(5): cmp $0x3,0x68(%rsp)
26d2(5): mov %rax,0x18(%rsp)
26d7(4): mov 0x20(%rsp),%eax
26db(4): mov %eax,0x14(%rsp)
26df(6): jz 0x1e5(%rip)
26e5(5): cmp $0x0,0x6c(%rsp)
26ea(6): jnz 0x1b1(%rip)
26f0(5): cmp $0x1,0x68(%rsp)
26f5(6): jz 0xd5(%rip)
26fb(3): mov %r12,%rdi
26fe(3): mov %r12,%r14
2701(5): lea 0xffffffff(%r12),%r12
2706(5): call 0x1f7a(%rip)
270b(5): mov %r15,0x48(%rsp)
2710(5): mov 0x28(%rsp),%r15
2715(4): sub $0x1,%rax
2719(5): mov %rbx,0x38(%rsp)
271e(5): mov %r13b,0x30(%rsp)
2723(3): mov %rax,%rbx
2726(5): mov %r13b,0x27(%rsp)
272b(4): cmp $0xffffffff,%rbx
272f(4): lea 0x1(%rbx),%rdx
2733(6): jz 0x87(%rip)
2739(5): mov $0x30,%esi
273e(3): mov %r14,%rdi
2741(5): call 0xfffff72f(%rip)
2746(6): mov $0x0,0x1(%r14,%rbx,1)
274c(5): mov $0xffffff9c,%edx
2751(6): mov $0x1,%r8d
2757(3): mov %r15,%rcx
275a(3): mov %rbp,%rsi
275d(2): mov %edx,%edi
275f(5): call 0x56c1(%rip)
2764(2): test %eax,%eax
2766(6): jz 0x178(%rip)
276c(5): call 0xfffff504(%rip)
2771(3): cmp $0x11,(%rax)
2774(6): jnz 0x1ef(%rip)
277a(4): lea 0x0(%r14,%rbx,1),%r13
277e(2): jmp 0x14(%rip)
2780(5): mov $0x30,0x0(%r13)
2785(4): sub $0x1,%r13
2789(3): cmp %r13,%r12
278c(6): jz 0x1d7(%rip)
2792(5): movsx 0x0(%r13),%esi
2797(7): lea 0x7e22(%rip),%rdi
279e(5): call 0xfffff642(%rip)
27a3(3): test %rax,%rax
27a6(6): jz 0x221(%rip)
27ac(4): movzx 0x1(%rax),%eax
27b0(2): test %al,%al
27b2(2): jz 0xffffffce(%rip)
27b4(4): mov %al,0x0(%r13)
27b8(2): jmp 0xffffff94(%rip)
27ba(6): movzx 0x27(%rsp),%r13d
27c0(5): mov 0x38(%rsp),%rbx
27c5(5): mov 0x48(%rsp),%r15
27ca(3): mov %rbp,%rdi
27cd(5): call 0xfffff4c3(%rip)
27d2(2): test %eax,%eax
27d4(6): jnz 0x93(%rip)
27da(5): cmp $0x0,0x6c(%rsp)
27df(6): jnz 0x18d(%rip)
27e5(5): mov 0x14(%rsp),%r14d
27ea(3): test %r14d,%r14d
27ed(2): js 0x57(%rip)
27ef(5): mov 0x18(%rsp),%rsi
27f4(3): mov %r14d,%edi
27f7(5): call 0x3b9(%rip)
27fc(3): mov %r14d,%edi
27ff(2): test %eax,%eax
2801(5): mov $0x0,%eax
2806(4): cmovne %eax,%r13d
280a(5): call 0xfffff686(%rip)
280f(2): test %eax,%eax
2811(2): jz 0x33(%rip)
2813(7): lea 0x6f9d(%rip),%rsi
281a(5): mov $0x5,%edx
281f(2): xor %edi,%edi
2821(3): xor %r13d,%r13d
2824(5): call 0xfffff54c(%rip)
2829(3): mov %rax,%rbp
282c(5): call 0xfffff444(%rip)
2831(5): mov 0x18(%rsp),%rcx
2836(2): mov (%rax),%esi
2838(3): mov %rbp,%rdx
283b(2): xor %edi,%edi
283d(2): xor %eax,%eax
283f(5): call 0xfffff7e1(%rip)
2844(5): mov 0x28(%rsp),%rdi
2849(5): call 0xfffff407(%rip)
284e(5): mov 0x40(%rsp),%rdi
2853(5): call 0xfffff3fd(%rip)
2858(5): mov 0x18(%rsp),%rdi
285d(5): call 0xfffff3f3(%rip)
2862(5): jmp 0xfffffce1(%rip)
2867(7): lea 0x6f9a(%rip),%rsi
286e(5): mov $0x5,%edx
2873(2): xor %edi,%edi
2875(3): xor %r13d,%r13d
2878(5): call 0xfffff4f8(%rip)
287d(3): mov %rax,%rbp
2880(5): call 0xfffff3f0(%rip)
2885(2): mov (%rax),%esi
2887(3): mov %rbx,%rcx
288a(3): mov %rbp,%rdx
288d(2): xor %edi,%edi
288f(2): xor %eax,%eax
2891(5): call 0xfffff78f(%rip)
2896(5): jmp 0xffffff4f(%rip)
289b(7): lea 0x6f29(%rip),%rsi
28a2(2): xor %edi,%edi
28a4(5): mov $0x5,%edx
28a9(5): call 0xfffff4c7(%rip)
28ae(3): mov %rbx,%rcx
28b1(3): mov %rax,%rdx
28b4(2): xor %esi,%esi
28b6(2): xor %edi,%edi
28b8(2): xor %eax,%eax
28ba(5): call 0xfffff766(%rip)
28bf(5): jmp 0xfffffe31(%rip)
28c4(5): mov 0x40(%rsp),%rdi
28c9(5): mov $0x10900,%esi
28ce(2): xor %eax,%eax
28d0(5): call 0x1e00(%rip)
28d5(4): mov %eax,0x14(%rsp)
28d9(5): jmp 0xfffffe0c(%rip)
28de(5): cmp $0x0,0x14(%rsp)
28e3(2): js 0x23(%rip)
28e5(5): mov 0x18(%rsp),%rsi
28ea(4): mov 0x14(%rsp),%edi
28ee(5): call 0x2c2(%rip)
28f3(5): movzx 0x27(%rsp),%ecx
28f8(2): test %eax,%eax
28fa(5): mov $0x0,%eax
28ff(3): cmovne %eax,%ecx
2902(4): mov %cl,0x27(%rsp)
2906(5): cmp $0x0,0x6c(%rsp)
290b(2): jz 0x43(%rip)
290d(5): cmp $0x0,0x30(%rsp)
2912(5): mov 0x38(%rsp),%rcx
2917(7): lea 0x6ed8(%rip),%rsi
291e(5): mov $0x5,%edx
2923(4): cmove %rbp,%rcx
2927(2): xor %edi,%edi
2929(5): mov %rcx,0x30(%rsp)
292e(5): call 0xfffff442(%rip)
2933(5): mov 0x30(%rsp),%rcx
2938(3): mov %rax,%rdx
293b(3): mov %r15,%r8
293e(2): xor %esi,%esi
2940(2): xor %edi,%edi
2942(2): xor %eax,%eax
2944(5): call 0xfffff6dc(%rip)
2949(5): mov $0x0,0x30(%rsp)
294e(3): mov %r14,%rdi
2951(4): lea 0x2(%rbx),%rdx
2955(3): mov %r14,%rsi
2958(3): sub %r15,%rdi
295b(3): add %rbp,%rdi
295e(5): call 0xfffff5a2(%rip)
2963(4): sub $0x1,%rbx
2967(5): jmp 0xfffffdc4(%rip)
296c(7): lea 0x6eaa(%rip),%rsi
2973(2): xor %edi,%edi
2975(5): mov $0x5,%edx
297a(5): call 0xfffff3f6(%rip)
297f(3): mov %rbx,%rcx
2982(3): mov %rax,%rdx
2985(2): xor %esi,%esi
2987(2): xor %edi,%edi
2989(2): xor %eax,%eax
298b(5): call 0xfffff695(%rip)
2990(5): jmp 0xfffffe55(%rip)
2995(2): xor %edi,%edi
2997(5): call 0x1289(%rip)
299c(7): lea 0x6dee(%rip),%rsi
29a3(5): mov $0x5,%edx
29a8(2): xor %edi,%edi
29aa(5): call 0xfffff3c6(%rip)
29af(2): xor %esi,%esi
29b1(3): mov %rax,%rdx
29b4(2): xor %edi,%edi
29b6(2): xor %eax,%eax
29b8(5): call 0xfffff668(%rip)
29bd(5): mov $0x1,%edi
29c2(5): call 0x125e(%rip)
29c7(7): lea 0x7bd2(%rip),%rcx
29ce(7): lea 0x6e03(%rip),%rsi
29d5(7): lea 0x6e82(%rip),%rdi
29dc(5): mov $0x40c,%edx
29e1(5): call 0xfffff46f(%rip)
29e6(5): call 0xfffff3ba(%rip)
29eb(3): mov %r13,%rdx
29ee(5): mov $0x3,%esi
29f3(2): xor %edi,%edi
29f5(5): call 0x45ab(%rip)
29fa(3): mov %rax,%rbx
29fd(5): call 0xfffff273(%rip)
2a02(2): mov (%rax),%esi
2a04(7): lea 0x7d5d(%rip),%rdx
2a0b(3): mov %rbx,%rcx
2a0e(5): mov $0x1,%edi
2a13(2): xor %eax,%eax
2a15(5): call 0xfffff60b(%rip)
2a1a(7): lea 0x7af7(%rip),%rsi
2a21(5): mov $0x5,%edx
2a26(2): xor %edi,%edi
2a28(5): call 0xfffff348(%rip)
2a2d(2): xor %esi,%esi
2a2f(3): mov %rax,%rdx
2a32(5): mov $0x1,%edi
2a37(2): xor %eax,%eax
2a39(5): call 0xfffff5e7(%rip)
2a3e(2): nop 
2a40(2): xor %ebp,%ebp
2a42(3): mov %rdx,%r9
2a45(1): pop %rsi
2a46(3): mov %rsp,%rdx
2a49(4): and $0xfffffff0,%rsp
2a4d(1): push %rax
2a4e(1): push %rsp
2a4f(7): lea 0x6aea(%rip),%r8
2a56(7): lea 0x6a73(%rip),%rcx
2a5d(7): lea 0xfffff6dc(%rip),%rdi
2a64(6): call 0x20b576(%rip)
2a6a(1): hlt 

"_start" :
2a40(2): xor %ebp,%ebp
2a42(3): mov %rdx,%r9
2a45(1): pop %rsi
2a46(3): mov %rsp,%rdx
2a49(4): and $0xfffffff0,%rsp
2a4d(1): push %rax
2a4e(1): push %rsp
2a4f(7): lea 0x6aea(%rip),%r8
2a56(7): lea 0x6a73(%rip),%rcx
2a5d(7): lea 0xfffff6dc(%rip),%rdi
2a64(6): call 0x20b576(%rip)
2a6a(1): hlt 

"deregister_tm_clones" :
2a70(7): lea 0x20b629(%rip),%rdi
2a77(1): push %rbp
2a78(7): lea 0x20b621(%rip),%rax
2a7f(3): cmp %rdi,%rax
2a82(3): mov %rsp,%rbp
2a85(2): jz 0x1b(%rip)
2a87(7): mov 0x20b54a(%rip),%rax
2a8e(3): test %rax,%rax
2a91(2): jz 0xf(%rip)
2a93(1): pop %rbp
2a94(2): jmp %rax
2a96(a): nop 0x0(%rax,%rax,1)
2aa0(1): pop %rbp
2aa1(1): ret near (%rsp)

"register_tm_clones" :
2ab0(7): lea 0x20b5e9(%rip),%rdi
2ab7(7): lea 0x20b5e2(%rip),%rsi
2abe(1): push %rbp
2abf(3): sub %rdi,%rsi
2ac2(3): mov %rsp,%rbp
2ac5(4): sar $0x3,%rsi
2ac9(3): mov %rsi,%rax
2acc(4): shr $0x3f,%rax
2ad0(3): add %rax,%rsi
2ad3(3): sar $0x1,%rsi
2ad6(2): jz 0x1a(%rip)
2ad8(7): mov 0x20b511(%rip),%rax
2adf(3): test %rax,%rax
2ae2(2): jz 0xe(%rip)
2ae4(1): pop %rbp
2ae5(2): jmp %rax
2ae7(9): nop 0x0(%rax,%rax,1)
2af0(1): pop %rbp
2af1(1): ret near (%rsp)

"__do_global_dtors_aux" :
2b00(7): cmp $0x0,0x20b5e1(%rip)
2b07(2): jnz 0x31(%rip)
2b09(8): cmp $0x0,0x20b4e7(%rip)
2b11(1): push %rbp
2b12(3): mov %rsp,%rbp
2b15(2): jz 0xe(%rip)
2b17(7): mov 0x20b4ea(%rip),%rdi
2b1e(5): call 0xfffff612(%rip)
2b23(5): call 0xffffff4d(%rip)
2b28(7): mov $0x1,0x20b5b9(%rip)
2b2f(1): pop %rbp
2b30(1): ret near (%rsp)
2b31(7): nop 0x0(%rax)
2b38(2): REP ret near (%rsp)

"frame_dummy" :
2b40(1): push %rbp
2b41(3): mov %rsp,%rbp
2b44(1): pop %rbp
2b45(5): jmp 0xffffff6b(%rip)

"clear_random_data" :
2b50(7): mov 0x20b599(%rip),%rdi
2b57(5): jmp 0x47f9(%rip)

"direct_mode" :
2b60(1): push %rbp
2b61(1): push %rbx
2b62(2): xor %eax,%eax
2b64(2): mov %esi,%ebp
2b66(5): mov $0x3,%esi
2b6b(2): mov %edi,%ebx
2b6d(4): sub $0x8,%rsp
2b71(5): call 0x63df(%rip)
2b76(2): test %eax,%eax
2b78(2): jle 0x30(%rip)
2b7a(2): mov %eax,%ecx
2b7c(2): mov %eax,%edx
2b7e(3): or $0x40,%ch
2b81(3): and $0xbf,%dh
2b84(3): test %bpl,%bpl
2b87(3): cmovne %ecx,%edx
2b8a(2): cmp %eax,%edx
2b8c(2): jz 0x1c(%rip)
2b8e(4): add $0x8,%rsp
2b92(2): mov %ebx,%edi
2b94(5): mov $0x4,%esi
2b99(1): pop %rbx
2b9a(1): pop %rbp
2b9b(2): xor %eax,%eax
2b9d(5): jmp 0x63b3(%rip)
2ba2(6): nop 0x0(%rax,%rax,1)
2ba8(4): add $0x8,%rsp
2bac(1): pop %rbx
2bad(1): pop %rbp
2bae(1): ret near (%rsp)

"dosync" :
2bb0(2): push %r13
2bb2(2): push %r12
2bb4(3): mov %rsi,%r13
2bb7(1): push %rbp
2bb8(1): push %rbx
2bb9(2): mov %edi,%ebx
2bbb(4): sub $0x8,%rsp
2bbf(5): call 0xfffff0c1(%rip)
2bc4(2): test %eax,%eax
2bc6(2): jz 0x6f(%rip)
2bc8(5): call 0xfffff0a8(%rip)
2bcd(2): mov (%rax),%ebp
2bcf(3): mov %rax,%r12
2bd2(3): lea 0xffffffeb(%rbp),%eax
2bd5(3): cmp $0x1,%eax
2bd8(2): jbe 0x7(%rip)
2bda(3): cmp $0x9,%ebp
2bdd(2): jnz 0x6b(%rip)
2bdf(2): mov %ebx,%edi
2be1(5): call 0xfffff44f(%rip)
2be6(2): test %eax,%eax
2be8(2): jz 0x4d(%rip)
2bea(4): mov (%r12),%ebx
2bee(3): lea 0xffffffeb(%rbx),%eax
2bf1(3): cmp $0x1,%eax
2bf4(2): jbe 0x3c(%rip)
2bf6(3): cmp $0x9,%ebx
2bf9(2): jz 0x37(%rip)
2bfb(7): lea 0x6997(%rip),%rsi
2c02(5): mov $0x5,%edx
2c07(2): xor %edi,%edi
2c09(5): call 0xfffff167(%rip)
2c0e(3): mov %r13,%rcx
2c11(3): mov %rax,%rdx
2c14(2): mov %ebx,%esi
2c16(2): xor %eax,%eax
2c18(2): xor %edi,%edi
2c1a(5): call 0xfffff406(%rip)
2c1f(4): mov %ebx,(%r12)
2c23(5): mov $0xffffffff,%eax
2c28(2): jmp 0xf(%rip)
2c2a(6): nop 0x0(%rax,%rax,1)
2c30(5): call 0xfffff310(%rip)
2c35(2): xor %eax,%eax
2c37(4): add $0x8,%rsp
2c3b(1): pop %rbx
2c3c(1): pop %rbp
2c3d(2): pop %r12
2c3f(2): pop %r13
2c41(1): ret near (%rsp)
2c42(6): nop 0x0(%rax,%rax,1)
2c48(7): lea 0x6935(%rip),%rsi
2c4f(5): mov $0x5,%edx
2c54(2): xor %edi,%edi
2c56(5): call 0xfffff11a(%rip)
2c5b(3): mov %r13,%rcx
2c5e(3): mov %rax,%rdx
2c61(2): mov %ebp,%esi
2c63(2): xor %eax,%eax
2c65(2): xor %edi,%edi
2c67(5): call 0xfffff3b9(%rip)
2c6c(4): mov %ebp,(%r12)
2c70(4): add $0x8,%rsp
2c74(5): mov $0xffffffff,%eax
2c79(1): pop %rbx
2c7a(1): pop %rbp
2c7b(2): pop %r12
2c7d(2): pop %r13
2c7f(1): ret near (%rsp)

"dopass" :
2c80(2): push %r15
2c82(2): push %r14
2c84(3): mov %rcx,%rax
2c87(2): push %r13
2c89(2): push %r12
2c8b(3): mov %edi,%r14d
2c8e(1): push %rbp
2c8f(1): push %rbx
2c90(3): mov %r8d,%ebx
2c93(7): sub $0x848,%rsp
2c9a(3): mov (%rax),%r15
2c9d(5): mov %rcx,0x50(%rsp)
2ca2(4): mov %rsi,(%rsp)
2ca6(9): mov $0x28,%rcx
2caf(8): mov %rcx,0x838(%rsp)
2cb7(2): xor %ecx,%ecx
2cb9(5): mov %rdx,0x8(%rsp)
2cbe(5): mov %r8d,0x20(%rsp)
2cc3(5): mov %r9,0x48(%rsp)
2cc8(5): call 0xfffff3d8(%rip)
2ccd(2): test %ebx,%ebx
2ccf(3): movsxd %eax,%rbp
2cd2(6): jle 0xfe(%rip)
2cd8(2): mov %ebx,%edx
2cda(6): and $0xfff,%edx
2ce0(2): mov %edx,%eax
2ce2(3): shl/sal $0xc,%eax
2ce5(2): or %edx,%eax
2ce7(2): mov %eax,%edx
2ce9(3): shr $0x4,%edx
2cec(2): cmp %dl,%ah
2cee(2): jnz 0xa(%rip)
2cf0(2): cmp %al,%dl
2cf2(6): jz 0xde(%rip)
2cf8(6): mov $0xf000,%r13d
2cfe(9): mov $0xf000,0x18(%rsp)
2d07(4): lea 0xffffffff(%rbp),%rbx
2d0b(3): mov %r15,%r12
2d0e(5): lea 0x0(%r13,%rbx,1),%rdi
2d13(5): call 0x59dd(%rip)
2d18(3): test %r15,%r15
2d1b(5): mov %rax,0x30(%rsp)
2d20(3): setnle %dl
2d23(5): cmp 0x18(%rsp),%r15
2d28(3): setb %al
2d2b(2): and %al,%dl
2d2d(4): mov %dl,0x27(%rsp)
2d31(6): jz 0x3ef(%rip)
2d37(4): mov (%rsp),%rax
2d3b(3): mov 0x18(%rax),%eax
2d3e(5): and $0xf000,%eax
2d43(5): cmp $0x2000,%eax
2d48(6): jz 0xa0(%rip)
2d4e(2): xor %edx,%edx
2d50(2): xor %esi,%esi
2d52(3): mov %r14d,%edi
2d55(5): call 0xfffff0db(%rip)
2d5a(4): cmp $0x0,%rax
2d5e(6): jle 0x3da(%rip)
2d64(5): call 0xffffef0c(%rip)
2d69(3): mov %rax,%rbx
2d6c(6): mov $0x16,(%rax)
2d72(7): lea 0x6831(%rip),%rsi
2d79(5): mov $0x5,%edx
2d7e(2): xor %edi,%edi
2d80(5): call 0xffffeff0(%rip)
2d85(5): mov 0x8(%rsp),%rcx
2d8a(2): mov (%rbx),%esi
2d8c(3): mov %rax,%rdx
2d8f(2): xor %edi,%edi
2d91(2): xor %eax,%eax
2d93(5): call 0xfffff28d(%rip)
2d98(5): mov 0x30(%rsp),%rdi
2d9d(5): call 0xffffeeb3(%rip)
2da2(5): mov $0xffffffff,%eax
2da7(8): mov 0x838(%rsp),%rcx
2daf(9): xor $0x28,%rcx
2db8(6): jnz 0x744(%rip)
2dbe(7): add $0x848,%rsp
2dc5(1): pop %rbx
2dc6(1): pop %rbp
2dc7(2): pop %r12
2dc9(2): pop %r13
2dcb(2): pop %r14
2dcd(2): pop %r15
2dcf(1): ret near (%rsp)
2dd0(6): mov $0x10002,%r13d
2dd6(9): mov $0x10000,0x18(%rsp)
2ddf(5): jmp 0xffffff28(%rip)
2de4(4): nop 0x0(%rax)
2de8(5): mov $0x6,%eax
2ded(5): lea 0x70(%rsp),%rdx
2df2(5): mov $0x40086d01,%esi
2df7(5): mov %ax,0x70(%rsp)
2dfc(3): mov %r14d,%edi
2dff(2): xor %eax,%eax
2e01(8): mov $0x1,0x74(%rsp)
2e09(5): call 0xfffff077(%rip)
2e0e(2): test %eax,%eax
2e10(6): jnz 0xffffff3e(%rip)
2e16(5): add 0x30(%rsp),%rbx
2e1b(2): xor %edx,%edx
2e1d(5): mov 0x20(%rsp),%r11d
2e22(3): mov %rbx,%rax
2e25(3): div %rbp,%rax
2e28(3): sub %rdx,%rbx
2e2b(3): test %r11d,%r11d
2e2e(6): js 0x3b2(%rip)
2e34(3): cmp %r13,%r15
2e37(6): jnb 0x399(%rip)
2e3d(3): test %r15,%r15
2e40(6): js 0x390(%rip)
2e46(4): mov 0x20(%rsp),%eax
2e4a(3): mov %r12,%rbp
2e4d(6): mov $0x3,%r13d
2e53(3): shr $0x1,%rbp
2e56(5): and $0xfff,%eax
2e5b(2): mov %eax,%edx
2e5d(3): shl/sal $0xc,%edx
2e60(2): or %edx,%eax
2e62(2): mov %eax,%edx
2e64(3): mov %ah,0x1(%rbx)
2e67(3): mov %al,0x2(%rbx)
2e6a(3): shr $0x4,%edx
2e6d(4): cmp $0x2,%rbp
2e71(2): mov %dl,(%rbx)
2e73(2): jbe 0x1c(%rip)
2e75(3): nop (%rax)
2e78(4): lea 0x0(%rbx,%r13,1),%rdi
2e7c(3): mov %r13,%rdx
2e7f(3): mov %rbx,%rsi
2e82(3): add %r13,%r13
2e85(5): call 0xfffff07b(%rip)
2e8a(3): cmp %r13,%rbp
2e8d(2): jnb 0xffffffeb(%rip)
2e8f(3): cmp %r13,%r12
2e92(6): jnbe 0x31e(%rip)
2e98(8): test $0x1000,0x20(%rsp)
2ea0(2): jz 0x1f(%rip)
2ea2(3): test %r12,%r12
2ea5(2): jz 0x1a(%rip)
2ea7(2): xor %eax,%eax
2ea9(7): nop 0x0(%rax)
2eb0(4): add $0x80,0x0(%rbx,%rax,1)
2eb4(6): add $0x200,%rax
2eba(3): cmp %rax,%r12
2ebd(2): jnbe 0xfffffff3(%rip)
2ebf(4): movzx 0x2(%rbx),%eax
2ec3(5): lea 0x79(%rsp),%rdi
2ec8(4): sub $0x8,%rsp
2ecc(7): lea 0x6741(%rip),%rcx
2ed3(5): mov $0x7,%edx
2ed8(5): mov $0x1,%esi
2edd(1): push %rax
2ede(5): movzx 0x1(%rbx),%r9d
2ee3(2): xor %eax,%eax
2ee5(4): movzx (%rbx),%r8d
2ee9(5): call 0xfffff237(%rip)
2eee(1): pop %rax
2eef(1): pop %rdx
2ef0(9): cmp $0x0,0x888(%rsp)
2ef9(6): jnz 0x257(%rip)
2eff(7): lea 0x7eaa(%rip),%rax
2f06(5): mov $0x0,0x10(%rsp)
2f0b(9): mov $0x0,0x60(%rsp)
2f14(8): mov $0x0,(%rsp)
2f1c(3): mov %r15,%r13
2f1f(5): mov %rax,0x58(%rsp)
2f24(3): test %r13,%r13
2f27(6): js 0x1d1(%rip)
2f2d(4): mov (%rsp),%rax
2f31(3): mov %r13,%rbp
2f34(3): sub %rax,%rbp
2f37(5): cmp 0x18(%rsp),%rbp
2f3c(6): jnb 0x1bc(%rip)
2f42(3): test %rbp,%rbp
2f45(6): jz 0x4f5(%rip)
2f4b(3): cmp %rax,%r13
2f4e(6): jl 0x4ec(%rip)
2f54(4): mov 0x20(%rsp),%edi
2f58(2): test %edi,%edi
2f5a(6): js 0x1af(%rip)
2f60(8): lea 0x5a0(%rsp),%rax
2f68(3): xor %r15d,%r15d
2f6b(5): mov %r13,0x28(%rsp)
2f70(5): mov %rax,0x38(%rsp)
2f75(3): mov %r13,%rax
2f78(3): not %rax
2f7b(4): shr $0x3f,%rax
2f7f(5): mov %rax,0x40(%rsp)
2f84(2): jmp 0x18(%rip)
2f86(a): nop 0x0(%rax,%rax,1)
2f90(3): add %rax,%r15
2f93(3): cmp %r15,%rbp
2f96(6): jbe 0x28a(%rip)
2f9c(3): mov %rbp,%rdx
2f9f(4): lea 0x0(%rbx,%r15,1),%rsi
2fa3(3): mov %r14d,%edi
2fa6(3): sub %r15,%rdx
2fa9(5): call 0xffffed67(%rip)
2fae(3): test %rax,%rax
2fb1(2): jnle 0xffffffdf(%rip)
2fb3(6): cmp $0x0,0x28(%rsp)
2fb9(6): js 0xe7(%rip)
2fbf(5): call 0xffffecb1(%rip)
2fc4(3): mov (%rax),%r12d
2fc7(3): mov %rax,%r13
2fca(5): movzx 0x27(%rsp),%eax
2fcf(3): xor $0x1,%eax
2fd2(4): cmp $0x16,%r12d
2fd6(3): setz %dl
2fd9(2): and %dl,%al
2fdb(6): jnz 0x225(%rip)
2fe1(4): mov (%rsp),%rax
2fe5(5): mov 0x38(%rsp),%rsi
2fea(4): lea 0x0(%rax,%r15,1),%rdi
2fee(5): call 0x2422(%rip)
2ff3(7): lea 0x6886(%rip),%rsi
2ffa(2): xor %edi,%edi
2ffc(5): mov $0x5,%edx
3001(5): mov %rax,0x10(%rsp)
3006(5): call 0xffffed6a(%rip)
300b(5): mov 0x10(%rsp),%r8
3010(5): mov 0x8(%rsp),%rcx
3015(3): mov %rax,%rdx
3018(2): xor %edi,%edi
301a(2): xor %eax,%eax
301c(3): mov %r12d,%esi
301f(5): call 0xfffff001(%rip)
3024(4): cmp $0x5,%r12d
3028(3): setz %al
302b(4): and 0x40(%rsp),%al
302f(4): mov %al,0x10(%rsp)
3033(6): jz 0xfffffd65(%rip)
3039(3): mov %r15,%r9
303c(7): or $0x1ff,%r9
3043(3): cmp %rbp,%r9
3046(6): jnb 0xfffffd52(%rip)
304c(4): mov (%rsp),%rax
3050(4): lea 0x1(%r9),%r15
3054(2): xor %edx,%edx
3056(3): mov %r14d,%edi
3059(4): lea 0x0(%rax,%r15,1),%rsi
305d(5): call 0xffffedd3(%rip)
3062(4): cmp $0xffffffff,%rax
3066(6): jnz 0xffffff2d(%rip)
306c(7): lea 0x6575(%rip),%rsi
3073(2): xor %edi,%edi
3075(5): mov $0x5,%edx
307a(5): call 0xffffecf6(%rip)
307f(5): mov 0x8(%rsp),%rcx
3084(4): mov 0x0(%r13),%esi
3088(3): mov %rax,%rdx
308b(2): xor %edi,%edi
308d(2): xor %eax,%eax
308f(5): call 0xffffef91(%rip)
3094(5): jmp 0xfffffd04(%rip)
3099(7): nop 0x0(%rax)
30a0(3): test %rax,%rax
30a3(2): jz 0x17(%rip)
30a5(5): call 0xffffebcb(%rip)
30aa(3): mov (%rax),%r12d
30ad(3): mov %rax,%r13
30b0(4): cmp $0x1c,%r12d
30b4(6): jnz 0xffffff16(%rip)
30ba(a): mov $0x9223372036854775807,%rax
30c4(4): sub (%rsp),%rax
30c8(3): cmp %r15,%rax
30cb(6): jnb 0x2f0(%rip)
30d1(7): lea 0x64fd(%rip),%rsi
30d8(5): mov $0x5,%edx
30dd(2): xor %edi,%edi
30df(5): call 0xffffec91(%rip)
30e4(5): mov 0x8(%rsp),%rcx
30e9(3): mov %rax,%rdx
30ec(2): xor %esi,%esi
30ee(5): jmp 0xfffffca1(%rip)
30f3(5): nop 0x0(%rax,%rax,1)
30f8(4): mov 0x20(%rsp),%edi
30fc(5): mov 0x18(%rsp),%rbp
3101(2): test %edi,%edi
3103(6): jns 0xfffffe5d(%rip)
3109(5): mov 0x48(%rsp),%rdi
310e(3): mov %rbp,%rdx
3111(3): mov %rbx,%rsi
3114(5): call 0x464c(%rip)
3119(5): jmp 0xfffffe47(%rip)
311e(2): nop 
3120(5): mov $0x1,%esi
3125(3): mov %r14d,%edi
3128(5): call 0xfffffa38(%rip)
312d(5): jmp 0xfffffc0a(%rip)
3132(6): nop 0x0(%rax,%rax,1)
3138(6): jz 0xfffffcde(%rip)
313e(5): call 0xffffeb32(%rip)
3143(3): mov %rax,%rbx
3146(5): jmp 0xfffffc2c(%rip)
314b(5): nop 0x0(%rax,%rax,1)
3150(7): lea 0x6465(%rip),%rsi
3157(5): mov $0x5,%edx
315c(2): xor %edi,%edi
315e(5): call 0xffffec12(%rip)
3163(4): sub $0x8,%rsp
3167(2): xor %esi,%esi
3169(2): xor %edi,%edi
316b(8): lea 0x81(%rsp),%rdx
3173(1): push %rdx
3174(8): mov 0x898(%rsp),%r9
317c(3): mov %rax,%rdx
317f(8): mov 0x890(%rsp),%r8
3187(5): mov 0x18(%rsp),%rcx
318c(2): xor %eax,%eax
318e(5): call 0xffffee92(%rip)
3193(2): xor %edi,%edi
3195(5): call 0xffffed7b(%rip)
319a(4): add $0x5,%rax
319e(5): mov %rax,0x78(%rsp)
31a3(2): pop %r8
31a5(2): pop %r9
31a7(5): jmp 0xfffffd58(%rip)
31ac(4): nop 0x0(%rax)
31b0(3): mov %r12,%rdx
31b3(4): lea 0x0(%rbx,%r13,1),%rdi
31b7(3): mov %rbx,%rsi
31ba(3): sub %r13,%rdx
31bd(5): call 0xffffed43(%rip)
31c2(5): jmp 0xfffffcd6(%rip)
31c7(9): nop 0x0(%rax,%rax,1)
31d0(3): mov %r13,%r12
31d3(5): jmp 0xfffffc73(%rip)
31d8(8): nop 0x0(%rax,%rax,1)
31e0(6): mov $0x6d6f,%r10d
31e6(8): mov $0x646e6172,0x79(%rsp)
31ee(5): mov $0x0,0x7f(%rsp)
31f3(6): mov %r10w,0x7d(%rsp)
31f9(5): jmp 0xfffffcf7(%rip)
31fe(2): nop 
3200(2): xor %esi,%esi
3202(3): mov %r14d,%edi
3205(4): mov %al,0x27(%rsp)
3209(5): call 0xfffff957(%rip)
320e(3): cmp %r15,%rbp
3211(6): jnbe 0xfffffd8b(%rip)
3217(9): nop 0x0(%rax,%rax,1)
3220(4): mov (%rsp),%rcx
3224(a): mov $0x9223372036854775807,%rax
322e(5): mov 0x28(%rsp),%r13
3233(3): sub %rcx,%rax
3236(3): cmp %r15,%rax
3239(6): jb 0xfffffe98(%rip)
323f(3): add %r15,%rcx
3242(9): cmp $0x0,0x888(%rsp)
324b(3): mov %rcx,%rbp
324e(4): mov %rcx,(%rsp)
3252(6): jz 0xfffffcd2(%rip)
3258(3): cmp %rcx,%r13
325b(6): jz 0x185(%rip)
3261(2): xor %edi,%edi
3263(5): call 0xffffecad(%rip)
3268(5): cmp %rax,0x68(%rsp)
326d(5): mov %rax,0x60(%rsp)
3272(6): jnle 0xfffffcb2(%rip)
3278(4): mov (%rsp),%rdi
327c(8): lea 0x310(%rsp),%rsi
3284(6): mov $0x1,%r8d
328a(5): mov $0x1,%ecx
328f(5): mov $0x1b2,%edx
3294(5): call 0x157c(%rip)
3299(5): mov 0x58(%rsp),%rdi
329e(3): mov %rax,%rsi
32a1(3): mov %rax,%r12
32a4(5): call 0xffffec2c(%rip)
32a9(2): test %eax,%eax
32ab(6): jz 0xfffffc79(%rip)
32b1(3): test %r13,%r13
32b4(6): js 0x1bd(%rip)
32ba(6): mov $0x64,%r15d
32c0(2): jz 0x2a(%rip)
32c2(a): mov $0x184467440737095516,%rax
32cc(3): cmp %rax,%rbp
32cf(6): jnbe 0x1ea(%rip)
32d5(5): lea 0x0(%rbp,%rbp,4),%rax
32da(2): xor %edx,%edx
32dc(4): lea 0x0(%rax,%rax,4),%rax
32e0(4): shl/sal $0x2,%rax
32e4(3): div %r13,%rax
32e7(3): mov %eax,%r15d
32ea(8): lea 0x5a0(%rsp),%rsi
32f2(6): mov $0x1,%r8d
32f8(5): mov $0x1,%ecx
32fd(5): mov $0x1b0,%edx
3302(3): mov %r13,%rdi
3305(5): call 0x150b(%rip)
330a(3): cmp %r13,%rbp
330d(7): lea 0x658c(%rip),%rsi
3314(5): mov $0x5,%edx
3319(4): cmove %rax,%r12
331d(2): xor %edi,%edi
331f(5): mov %rax,0x28(%rsp)
3324(5): call 0xffffea4c(%rip)
3329(2): push %r15
332b(5): mov 0x30(%rsp),%rcx
3330(2): xor %esi,%esi
3332(2): xor %edi,%edi
3334(1): push %rcx
3335(2): push %r12
3337(8): lea 0x91(%rsp),%rdx
333f(1): push %rdx
3340(8): mov 0x8a8(%rsp),%r9
3348(3): mov %rax,%rdx
334b(8): mov 0x8a0(%rsp),%r8
3353(5): mov 0x28(%rsp),%rcx
3358(2): xor %eax,%eax
335a(5): call 0xffffecc6(%rip)
335f(4): add $0x20,%rsp
3363(8): lea 0x80(%rsp),%rbp
336b(5): mov $0x28c,%edx
3370(3): mov %r12,%rsi
3373(3): mov %rbp,%rdi
3376(5): call 0xffffec3a(%rip)
337b(5): mov 0x60(%rsp),%rax
3380(5): mov 0x8(%rsp),%rsi
3385(3): mov %r14d,%edi
3388(4): add $0x5,%rax
338c(5): mov %rax,0x68(%rsp)
3391(5): call 0xfffff81f(%rip)
3396(2): test %eax,%eax
3398(6): jz 0x98(%rip)
339e(5): call 0xffffe8d2(%rip)
33a3(3): cmp $0x5,(%rax)
33a6(6): jnz 0xfffff9f2(%rip)
33ac(5): mov %rbp,0x58(%rsp)
33b1(5): mov $0x1,0x10(%rsp)
33b6(5): jmp 0xfffffb6e(%rip)
33bb(4): mov (%rsp),%rbp
33bf(5): mov 0x50(%rsp),%rax
33c4(3): add %r15,%rbp
33c7(9): cmp $0x0,0x888(%rsp)
33d0(3): mov %rbp,%r13
33d3(4): mov %rbp,(%rsp)
33d7(3): mov %rbp,(%rax)
33da(6): jz 0xfffffb4a(%rip)
33e0(5): mov 0x58(%rsp),%rax
33e5(3): cmp $0x0,(%rax)
33e8(2): jz 0x2a(%rip)
33ea(8): lea 0x310(%rsp),%rsi
33f2(6): mov $0x1,%r8d
33f8(5): mov $0x1,%ecx
33fd(5): mov $0x1b2,%edx
3402(3): mov %rbp,%rdi
3405(5): call 0x140b(%rip)
340a(3): mov %rax,%r12
340d(5): jmp 0xfffffea4(%rip)
3412(2): xor %edi,%edi
3414(5): call 0xffffeafc(%rip)
3419(5): cmp %rax,0x68(%rsp)
341e(5): mov %rax,0x60(%rsp)
3423(6): jnle 0xfffffb01(%rip)
3429(2): jmp 0xffffffc1(%rip)
342b(5): nop 0x0(%rax,%rax,1)
3430(5): mov %rbp,0x58(%rsp)
3435(5): jmp 0xfffffaef(%rip)
343a(5): mov 0x8(%rsp),%rsi
343f(3): mov %r14d,%edi
3442(5): call 0xfffff76e(%rip)
3447(2): test %eax,%eax
3449(6): jz 0x9f(%rip)
344f(5): call 0xffffe821(%rip)
3454(3): cmp $0x5,(%rax)
3457(5): mov 0x30(%rsp),%rdi
345c(6): jnz 0xfffff941(%rip)
3462(5): call 0xffffe7ee(%rip)
3467(5): mov $0x1,%eax
346c(5): jmp 0xfffff93b(%rip)
3471(7): lea 0x6181(%rip),%rsi
3478(5): mov $0x5,%edx
347d(2): xor %edi,%edi
347f(5): call 0xffffe8f1(%rip)
3484(2): push %r12
3486(2): xor %esi,%esi
3488(2): xor %edi,%edi
348a(8): lea 0x81(%rsp),%rdx
3492(1): push %rdx
3493(8): mov 0x898(%rsp),%r9
349b(3): mov %rax,%rdx
349e(8): mov 0x890(%rsp),%r8
34a6(5): mov 0x18(%rsp),%rcx
34ab(2): xor %eax,%eax
34ad(5): call 0xffffeb73(%rip)
34b2(1): pop %rcx
34b3(1): pop %rsi
34b4(5): jmp 0xfffffeaf(%rip)
34b9(a): mov $0x-6640827866535438581,%rax
34c3(3): imul %rax,%r13,%rdx
34c6(3): mov %r13,%rax
34c9(4): sar $0x3f,%rax
34cd(4): lea 0x0(%rdx,%r13,1),%rcx
34d1(2): xor %edx,%edx
34d3(4): sar $0x6,%rcx
34d7(3): sub %rax,%rcx
34da(3): mov %rbp,%rax
34dd(3): div %rcx,%rax
34e0(3): mov %eax,%r15d
34e3(5): jmp 0xfffffe07(%rip)
34e8(5): mov 0x30(%rsp),%rdi
34ed(5): call 0xffffe763(%rip)
34f2(5): movzx 0x10(%rsp),%eax
34f7(5): jmp 0xfffff8b0(%rip)
34fc(5): call 0xffffe8a4(%rip)

"do_wipefd" :
3510(2): push %r15
3512(2): push %r14
3514(2): push %r13
3516(2): push %r12
3518(1): push %rbp
3519(1): push %rbx
351a(2): mov %edi,%ebp
351c(3): mov %rcx,%rbx
351f(7): sub $0x118,%rsp
3526(9): mov $0x28,%rax
352f(8): mov %rax,0x108(%rsp)
3537(2): xor %eax,%eax
3539(4): cmp $0x0,0x1c(%rcx)
353d(4): mov %rsi,(%rsp)
3541(5): mov %rdx,0x30(%rsp)
3546(9): mov $0x0,0x28(%rsp)
354f(2): jz 0xf(%rip)
3551(4): movzx 0x1e(%rcx),%eax
3555(4): add 0x8(%rcx),%rax
3559(5): mov %rax,0x28(%rsp)
355e(5): lea 0x70(%rsp),%rax
3563(2): mov %ebp,%esi
3565(5): mov $0x1,%edi
356a(3): mov %rax,%rdx
356d(5): mov %rax,0x8(%rsp)
3572(5): call 0xffffea0e(%rip)
3577(2): test %eax,%eax
3579(6): jnz 0x1a7(%rip)
357f(7): mov 0x88(%rsp),%eax
3586(5): and $0xf000,%eax
358b(5): cmp $0x2000,%eax
3590(6): jz 0x2c8(%rip)
3596(5): cmp $0xc000,%eax
359b(3): setz %cl
359e(5): cmp $0x1000,%eax
35a3(3): setz %dl
35a6(2): or %dl,%cl
35a8(4): mov %cl,0x27(%rsp)
35ac(2): jz 0x64(%rip)
35ae(7): lea 0x607d(%rip),%rsi
35b5(5): mov $0x5,%edx
35ba(2): xor %edi,%edi
35bc(5): call 0xffffe7b4(%rip)
35c1(4): mov (%rsp),%rcx
35c5(3): mov %rax,%rdx
35c8(2): xor %esi,%esi
35ca(2): xor %edi,%edi
35cc(2): xor %eax,%eax
35ce(5): call 0xffffea52(%rip)
35d3(5): mov $0x0,0x27(%rsp)
35d8(8): mov 0x108(%rsp),%rcx
35e0(9): xor $0x28,%rcx
35e9(5): movzx 0x27(%rsp),%eax
35ee(6): jnz 0x623(%rip)
35f4(7): add $0x118,%rsp
35fb(1): pop %rbx
35fc(1): pop %rbp
35fd(2): pop %r12
35ff(2): pop %r13
3601(2): pop %r14
3603(2): pop %r15
3605(1): ret near (%rsp)
3606(a): nop 0x0(%rax,%rax,1)
3610(5): cmp $0x8000,%eax
3615(6): jz 0x26b(%rip)
361b(4): mov 0x8(%rbx),%rdi
361f(5): mov $0x4,%edx
3624(2): xor %ecx,%ecx
3626(3): mov %rdx,%rax
3629(3): mul %rax,%rdi,%rdx
362c(6): jo 0x5db(%rip)
3632(3): test %rax,%rax
3635(6): js 0x5e1(%rip)
363b(3): test %rcx,%rcx
363e(6): jnz 0x5d8(%rip)
3644(4): shl/sal $0x2,%rdi
3648(5): call 0x50a8(%rip)
364d(5): mov %rax,0x10(%rsp)
3652(4): mov 0x10(%rbx),%rax
3656(4): cmp $0xffffffff,%rax
365a(5): mov %rax,0x40(%rsp)
365f(6): jz 0x101(%rip)
3665(4): mov 0x8(%rbx),%rax
3669(5): mov %rax,0x38(%rsp)
366e(7): mov 0x88(%rsp),%eax
3675(5): and $0xf000,%eax
367a(5): cmp $0x8000,%eax
367f(6): jz 0x350(%rip)
3685(6): cmp $0x0,0x38(%rsp)
368b(9): mov $0x0,0x48(%rsp)
3694(6): jz 0x225(%rip)
369a(5): mov 0x10(%rsp),%r12
369f(2): xor %ecx,%ecx
36a1(5): mov 0x38(%rsp),%r14
36a6(5): mov $0xfffffffe,%eax
36ab(7): lea 0x6f6e(%rip),%r13
36b2(5): mov %rbx,0x50(%rsp)
36b7(3): mov %r12,%r8
36ba(3): mov %rcx,%r12
36bd(2): jmp 0x26(%rip)
36bf(1): nop 
36c0(7): lea 0x6f5d(%rip),%r13
36c7(5): mov $0xfffffffe,%eax
36cc(2): neg %eax
36ce(2): cwde 
36d0(3): cmp %r14,%rax
36d3(6): jnb 0x345(%rip)
36d9(3): add %rax,%r12
36dc(3): sub %rax,%r14
36df(4): mov 0x0(%r13),%eax
36e3(2): test %eax,%eax
36e5(2): jz 0xffffffdb(%rip)
36e7(4): add $0x4,%r13
36eb(2): test %eax,%eax
36ed(2): js 0xffffffdf(%rip)
36ef(3): movsxd %eax,%r15
36f2(3): cmp %r14,%r15
36f5(6): jnbe 0x403(%rip)
36fb(8): lea 0x0(,%r15,4),%rbx
3703(3): mov %r13,%rsi
3706(3): mov %r8,%rdi
3709(3): sub %r15,%r14
370c(3): mov %rbx,%rdx
370f(3): add %rbx,%r13
3712(5): call 0xffffe7ee(%rip)
3717(3): mov %rax,%r8
371a(3): add %rbx,%r8
371d(2): jmp 0xffffffc2(%rip)
371f(1): nop 
3720(7): lea 0x5efa(%rip),%rsi
3727(5): mov $0x5,%edx
372c(2): xor %edi,%edi
372e(5): call 0xffffe642(%rip)
3733(3): mov %rax,%rbx
3736(5): call 0xffffe53a(%rip)
373b(4): mov (%rsp),%rcx
373f(2): mov (%rax),%esi
3741(3): mov %rbx,%rdx
3744(2): xor %edi,%edi
3746(2): xor %eax,%eax
3748(5): call 0xffffe8d8(%rip)
374d(5): mov $0x0,0x27(%rsp)
3752(5): jmp 0xfffffe86(%rip)
3757(9): nop 0x0(%rax,%rax,1)
3760(7): mov 0x88(%rsp),%eax
3767(5): and $0xf000,%eax
376c(5): cmp $0x8000,%eax
3771(6): jnz 0x3fc(%rip)
3777(8): mov 0xa0(%rsp),%rax
377f(4): mov 0x8(%rbx),%rcx
3783(5): mov %rax,0x40(%rsp)
3788(4): movzx 0x1d(%rbx),%eax
378c(5): mov %rcx,0x38(%rsp)
3791(2): test %al,%al
3793(4): mov %al,0x18(%rsp)
3797(6): jnz 0x33a(%rip)
379d(8): mov 0xa8(%rsp),%rcx
37a5(a): mov $0x2305843009213693951,%rax
37af(4): lea 0xffffffff(%rcx),%rdx
37b3(3): cmp %rax,%rdx
37b6(5): mov $0x200,%eax
37bb(4): cmovnbe %rax,%rcx
37bf(5): mov 0x40(%rsp),%rax
37c4(2): cdq %rax
37c6(3): idiv %rcx,%rax
37c9(5): mov 0x40(%rsp),%rax
37ce(3): cmp %rax,%rcx
37d1(6): jle 0x41e(%rip)
37d7(3): test %rax,%rax
37da(5): mov %rax,0x48(%rsp)
37df(6): jz 0x410(%rip)
37e5(3): test %rdx,%rdx
37e8(2): jz 0x26(%rip)
37ea(5): mov 0x40(%rsp),%rdi
37ef(a): mov $0x9223372036854775807,%rax
37f9(3): sub %rdx,%rcx
37fc(3): sub %rdi,%rax
37ff(3): cmp %rcx,%rax
3802(4): cmovng %rax,%rcx
3806(3): add %rcx,%rdi
3809(5): mov %rdi,0x40(%rsp)
380e(6): cmp $0x0,0x38(%rsp)
3814(6): jnz 0xfffffe86(%rip)
381a(6): nop 0x0(%rax,%rax,1)
3820(5): mov 0x30(%rsp),%rdi
3825(5): call 0x39db(%rip)
382a(3): mov %rax,%r14
382d(5): mov 0x48(%rsp),%rax
3832(3): test %rax,%rax
3835(6): jz 0x3c8(%rip)
383b(5): mov %rax,0x68(%rsp)
3840(4): mov 0x8(%rbx),%rdx
3844(3): xor %r13d,%r13d
3847(5): mov $0x1,0x18(%rsp)
384c(5): jmp 0xac(%rip)
3851(7): nop 0x0(%rax)
3858(2): mov %ebp,%edi
385a(5): call 0xffffe486(%rip)
385f(2): test %eax,%eax
3861(6): jnz 0xfffffd4d(%rip)
3867(7): mov 0x88(%rsp),%eax
386e(5): and $0xf000,%eax
3873(5): jmp 0xfffffd23(%rip)
3878(8): nop 0x0(%rax,%rax,1)
3880(9): cmp $0x0,0xa0(%rsp)
3889(6): jns 0xfffffd92(%rip)
388f(7): lea 0x5db2(%rip),%rsi
3896(2): xor %edi,%edi
3898(5): mov $0x5,%edx
389d(5): call 0xffffe4d3(%rip)
38a2(4): mov (%rsp),%rcx
38a6(3): mov %rax,%rdx
38a9(2): xor %esi,%esi
38ab(2): xor %edi,%edi
38ad(2): xor %eax,%eax
38af(5): call 0xffffe771(%rip)
38b4(5): jmp 0xfffffd24(%rip)
38b9(5): mov 0x30(%rsp),%rdi
38be(5): call 0x3942(%rip)
38c3(5): mov $0x1,0x18(%rsp)
38c8(3): mov %rax,%r14
38cb(5): nop 0x0(%rax,%rax,1)
38d0(6): cmp $0x0,0x40(%rsp)
38d6(6): jz 0x2ce(%rip)
38dc(4): mov 0x8(%rbx),%rdx
38e0(5): mov 0x40(%rsp),%rax
38e5(5): mov 0x28(%rsp),%r13
38ea(9): mov $0x0,0x40(%rsp)
38f3(5): mov %rax,0x68(%rsp)
38f8(5): lea 0x68(%rsp),%r12
38fd(3): xor %r15d,%r15d
3900(3): mov %r12,%rax
3903(3): mov %r15,%r12
3906(3): mov %rbx,%r15
3909(3): mov %rax,%rbx
390c(2): jmp 0x45(%rip)
390e(2): nop 
3910(3): xor %r8d,%r8d
3913(3): cmp %rdx,%r12
3916(2): jnb 0xb(%rip)
3918(5): mov 0x10(%rsp),%rax
391d(4): mov 0x0(%rax,%r12,4),%r8d
3921(4): add $0x1,%r12
3925(2): push %r13
3927(3): mov %rbx,%rcx
392a(2): push %r12
392c(5): mov 0x10(%rsp),%rdx
3931(3): mov %r14,%r9
3934(5): mov 0x18(%rsp),%rsi
3939(2): mov %ebp,%edi
393b(5): call 0xfffff345(%rip)
3940(2): test %eax,%eax
3942(1): pop %rdx
3943(1): pop %rcx
3944(2): jz 0x9(%rip)
3946(2): js 0x7a(%rip)
3948(5): mov $0x0,0x18(%rsp)
394d(4): mov 0x8(%r15),%rdx
3951(5): movzx 0x1e(%r15),%eax
3956(3): add %rdx,%rax
3959(3): cmp %r12,%rax
395c(2): jnbe 0xffffffb4(%rip)
395e(3): mov %r15,%rbx
3961(5): jmp 0xffffff6f(%rip)
3966(2): xor %esi,%esi
3968(2): mov %ebp,%edi
396a(5): call 0xffffe4b6(%rip)
396f(2): test %eax,%eax
3971(6): jz 0x23e(%rip)
3977(7): mov 0x88(%rsp),%eax
397e(5): and $0xf000,%eax
3983(5): cmp $0x8000,%eax
3988(6): jnz 0x227(%rip)
398e(7): lea 0x5cce(%rip),%rsi
3995(5): mov $0x5,%edx
399a(2): xor %edi,%edi
399c(5): call 0xffffe3d4(%rip)
39a1(3): mov %rax,%rbx
39a4(5): call 0xffffe2cc(%rip)
39a9(4): mov (%rsp),%rcx
39ad(2): mov (%rax),%esi
39af(3): mov %rbx,%rdx
39b2(2): xor %edi,%edi
39b4(2): xor %eax,%eax
39b6(5): call 0xffffe66a(%rip)
39bb(5): nop 0x0(%rax,%rax,1)
39c0(5): mov 0x10(%rsp),%rdi
39c5(5): call 0xffffe28b(%rip)
39ca(5): jmp 0xfffffc0e(%rip)
39cf(8): mov 0xa8(%rsp),%rax
39d7(a): mov $0x2305843009213693951,%rdx
39e1(8): mov 0xa0(%rsp),%rdi
39e9(4): lea 0xffffffff(%rax),%rcx
39ed(5): mov %rdi,0x48(%rsp)
39f2(3): cmp %rdx,%rcx
39f5(5): mov 0x40(%rsp),%rcx
39fa(5): mov $0x200,%edx
39ff(4): cmovnbe %rdx,%rax
3a03(3): cmp %rcx,%rax
3a06(4): cmovnl %rcx,%rax
3a0a(3): cmp %rax,%rdi
3a0d(6): jl 0xfffffe01(%rip)
3a13(5): jmp 0xfffffc72(%rip)
3a18(5): mov 0x50(%rsp),%rbx
3a1d(3): add %r14,%r12
3a20(5): mov %r12,0x18(%rsp)
3a25(5): mov 0x38(%rsp),%rax
3a2a(5): mov 0x18(%rsp),%rsi
3a2f(3): xor %r12d,%r12d
3a32(4): mov %ebp,0x50(%rsp)
3a36(5): mov %rbx,0x58(%rsp)
3a3b(5): mov 0x10(%rsp),%r14
3a40(4): lea 0xffffffff(%rsi),%rdx
3a44(3): mov %rax,%r15
3a47(4): lea 0xffffffff(%rax),%r8
3a4b(3): sub %rsi,%r15
3a4e(3): mov %r15,%rbx
3a51(3): mov %rdx,%r13
3a54(3): mov %rdx,%rbp
3a57(3): mov %r8,%r15
3a5a(2): jmp 0x27(%rip)
3a5c(4): nop 0x0(%rax)
3a60(3): add %r15,%r13
3a63(4): mov %r9d,0x0(%r14,%rbx,4)
3a67(8): mov $0xffffffff,0x0(%r14,%r12,4)
3a6f(4): add $0x1,%rbx
3a73(3): sub %rbp,%r13
3a76(4): add $0x1,%r12
3a7a(5): cmp 0x38(%rsp),%r12
3a7f(2): jz 0x44(%rip)
3a81(3): cmp %rbp,%r13
3a84(4): mov 0x0(%r14,%r12,4),%r9d
3a88(2): jbe 0xffffffd8(%rip)
3a8a(4): lea 0xffffffff(%rbx),%rsi
3a8e(5): mov 0x30(%rsp),%rdi
3a93(5): mov %r9d,0x18(%rsp)
3a98(3): sub %rbp,%r13
3a9b(3): sub %r12,%rsi
3a9e(5): call 0x3772(%rip)
3aa3(3): add %r12,%rax
3aa6(5): mov 0x18(%rsp),%r9d
3aab(4): lea 0x0(%r14,%rax,4),%rax
3aaf(2): mov (%rax),%esi
3ab1(4): mov %esi,0x0(%r14,%r12,4)
3ab5(4): add $0x1,%r12
3ab9(5): cmp 0x38(%rsp),%r12
3abe(3): mov %r9d,(%rax)
3ac1(2): jnz 0xffffffc0(%rip)
3ac3(4): mov 0x50(%rsp),%ebp
3ac7(5): mov 0x58(%rsp),%rbx
3acc(5): jmp 0xfffffd54(%rip)
3ad1(3): test %rcx,%rcx
3ad4(9): mov $0x0,0x48(%rsp)
3add(6): jnz 0xfffffbbd(%rip)
3ae3(5): mov 0x30(%rsp),%rdi
3ae8(5): call 0x3718(%rip)
3aed(3): mov %rax,%r14
3af0(5): jmp 0xfffffde0(%rip)
3af5(3): nop (%rax)
3af8(4): cmp $0x1,%r14
3afc(5): mov %r12,0x18(%rsp)
3b01(5): mov 0x50(%rsp),%rbx
3b06(2): jbe 0x5d(%rip)
3b08(4): lea 0x0(%r14,%r14,2),%rax
3b0c(3): cmp %rax,%r15
3b0f(2): jnbe 0x54(%rip)
3b11(5): mov %rbx,0x50(%rsp)
3b16(3): mov %r8,%rbx
3b19(2): jmp 0x11(%rip)
3b1b(5): nop 0x0(%rax,%rax,1)
3b20(4): lea 0xffffffff(%r15),%r12
3b24(3): mov %rcx,%rbx
3b27(3): mov %r12,%r15
3b2a(4): add $0x4,%r13
3b2e(3): cmp %r15,%r14
3b31(2): jz 0x18(%rip)
3b33(4): lea 0xffffffff(%r15),%r12
3b37(5): mov 0x30(%rsp),%rdi
3b3c(3): mov %r12,%rsi
3b3f(5): call 0x36d1(%rip)
3b44(3): cmp %rax,%r14
3b47(2): jbe 0xffffffe0(%rip)
3b49(4): mov 0xfffffffc(%r13),%eax
3b4d(4): sub $0x1,%r14
3b51(4): lea 0x4(%rbx),%rcx
3b55(2): mov %eax,(%rbx)
3b57(2): jnz 0xffffffc9(%rip)
3b59(5): mov 0x50(%rsp),%rbx
3b5e(5): jmp 0xfffffec7(%rip)
3b63(5): add %r14,0x18(%rsp)
3b68(5): jmp 0xfffffebd(%rip)
3b6d(2): xor %esi,%esi
3b6f(5): mov $0x2,%edx
3b74(2): mov %ebp,%edi
3b76(5): call 0xffffe2ba(%rip)
3b7b(3): mov %rax,%r12
3b7e(4): mov 0x8(%rbx),%rax
3b82(3): test %r12,%r12
3b85(5): mov %rax,0x38(%rsp)
3b8a(2): jle 0x33(%rip)
3b8c(3): test %rax,%rax
3b8f(2): jz 0x4c(%rip)
3b91(5): mov %r12,0x40(%rsp)
3b96(9): mov $0x0,0x48(%rsp)
3b9f(5): jmp 0xfffffafb(%rip)
3ba4(3): mov 0x18(%rbx),%eax
3ba7(2): test %eax,%eax
3ba9(6): jnz 0xfffffdbd(%rip)
3baf(5): movzx 0x18(%rsp),%eax
3bb4(4): mov %al,0x27(%rsp)
3bb8(5): jmp 0xfffffe08(%rip)
3bbd(3): test %rax,%rax
3bc0(2): jnz 0xffffffd6(%rip)
3bc2(5): mov 0x30(%rsp),%rdi
3bc7(5): call 0x3639(%rip)
3bcc(3): mov %rax,%r14
3bcf(2): xor %edx,%edx
3bd1(5): mov $0x1,0x18(%rsp)
3bd6(5): jmp 0xfffffd0a(%rip)
3bdb(5): mov 0x30(%rsp),%rdi
3be0(5): call 0x3620(%rip)
3be5(5): mov %r12,0x40(%rsp)
3bea(3): mov %rax,%r14
3bed(2): jmp 0xffffffe2(%rip)
3bef(9): mov $0x0,0x48(%rsp)
3bf8(5): jmp 0xfffffbed(%rip)
3bfd(5): mov $0x1,0x18(%rsp)
3c02(5): jmp 0xfffffcce(%rip)
3c07(5): mov $0x1,%ecx
3c0c(5): jmp 0xfffffa26(%rip)
3c11(5): call 0xffffe18f(%rip)
3c16(5): call 0x4d2a(%rip)

"usage" :
3c20(2): push %r13
3c22(2): push %r12
3c24(5): mov $0x5,%edx
3c29(1): push %rbp
3c2a(1): push %rbx
3c2b(2): mov %edi,%ebp
3c2d(7): sub $0x88,%rsp
3c34(7): mov 0x20a4cd(%rip),%rbx
3c3b(9): mov $0x28,%rax
3c44(5): mov %rax,0x78(%rsp)
3c49(2): xor %eax,%eax
3c4b(2): test %edi,%edi
3c4d(2): jz 0x30(%rip)
3c4f(7): lea 0x5c72(%rip),%rsi
3c56(2): xor %edi,%edi
3c58(5): call 0xffffe118(%rip)
3c5d(7): mov 0x20a47c(%rip),%rdi
3c64(3): mov %rax,%rdx
3c67(3): mov %rbx,%rcx
3c6a(5): mov $0x1,%esi
3c6f(2): xor %eax,%eax
3c71(5): call 0xffffe46f(%rip)
3c76(2): mov %ebp,%edi
3c78(5): call 0xffffe448(%rip)
3c7d(7): lea 0x5c6c(%rip),%rsi
3c84(2): xor %edi,%edi
3c86(5): call 0xffffe0ea(%rip)
3c8b(3): mov %rbx,%rdx
3c8e(3): mov %rax,%rsi
3c91(5): mov $0x1,%edi
3c96(2): xor %eax,%eax
3c98(5): call 0xffffe348(%rip)
3c9d(7): mov 0x20a404(%rip),%rbx
3ca4(7): lea 0x5c65(%rip),%rsi
3cab(5): mov $0x5,%edx
3cb0(2): xor %edi,%edi
3cb2(5): call 0xffffe0be(%rip)
3cb7(3): mov %rbx,%rsi
3cba(3): mov %rax,%rdi
3cbd(5): call 0xffffe1f3(%rip)
3cc2(7): mov 0x20a3df(%rip),%rbx
3cc9(7): lea 0x5cc8(%rip),%rsi
3cd0(5): mov $0x5,%edx
3cd5(2): xor %edi,%edi
3cd7(5): call 0xffffe099(%rip)
3cdc(3): mov %rbx,%rsi
3cdf(3): mov %rax,%rdi
3ce2(5): call 0xffffe1ce(%rip)
3ce7(7): mov 0x20a3ba(%rip),%rbx
3cee(7): lea 0x5ccb(%rip),%rsi
3cf5(5): mov $0x5,%edx
3cfa(2): xor %edi,%edi
3cfc(5): call 0xffffe074(%rip)
3d01(3): mov %rbx,%rsi
3d04(3): mov %rax,%rdi
3d07(5): call 0xffffe1a9(%rip)
3d0c(7): lea 0x5cfd(%rip),%rsi
3d13(2): xor %edi,%edi
3d15(5): mov $0x5,%edx
3d1a(5): call 0xffffe056(%rip)
3d1f(5): mov $0x3,%edx
3d24(3): mov %rax,%rsi
3d27(5): mov $0x1,%edi
3d2c(2): xor %eax,%eax
3d2e(5): call 0xffffe2b2(%rip)
3d33(7): mov 0x20a36e(%rip),%rbx
3d3a(7): lea 0x5dd7(%rip),%rsi
3d41(5): mov $0x5,%edx
3d46(2): xor %edi,%edi
3d48(5): call 0xffffe028(%rip)
3d4d(3): mov %rbx,%rsi
3d50(3): mov %rax,%rdi
3d53(5): call 0xffffe15d(%rip)
3d58(7): mov 0x20a349(%rip),%rbx
3d5f(7): lea 0x5f22(%rip),%rsi
3d66(5): mov $0x5,%edx
3d6b(2): xor %edi,%edi
3d6d(5): call 0xffffe003(%rip)
3d72(3): mov %rbx,%rsi
3d75(3): mov %rax,%rdi
3d78(5): call 0xffffe138(%rip)
3d7d(7): mov 0x20a324(%rip),%rbx
3d84(7): lea 0x5f2d(%rip),%rsi
3d8b(5): mov $0x5,%edx
3d90(2): xor %edi,%edi
3d92(5): call 0xffffdfde(%rip)
3d97(3): mov %rbx,%rsi
3d9a(3): mov %rax,%rdi
3d9d(5): call 0xffffe113(%rip)
3da2(7): mov 0x20a2ff(%rip),%rbx
3da9(7): lea 0x5f40(%rip),%rsi
3db0(5): mov $0x5,%edx
3db5(2): xor %edi,%edi
3db7(5): call 0xffffdfb9(%rip)
3dbc(3): mov %rbx,%rsi
3dbf(3): mov %rax,%rdi
3dc2(5): call 0xffffe0ee(%rip)
3dc7(7): mov 0x20a2da(%rip),%rbx
3dce(7): lea 0x60fb(%rip),%rsi
3dd5(5): mov $0x5,%edx
3dda(2): xor %edi,%edi
3ddc(5): call 0xffffdf94(%rip)
3de1(3): mov %rbx,%rsi
3de4(3): mov %rax,%rdi
3de7(5): call 0xffffe0c9(%rip)
3dec(7): mov 0x20a2b5(%rip),%rbx
3df3(7): lea 0x6246(%rip),%rsi
3dfa(2): xor %edi,%edi
3dfc(5): mov $0x5,%edx
3e01(5): call 0xffffdf6f(%rip)
3e06(3): mov %rbx,%rsi
3e09(3): mov %rax,%rdi
3e0c(5): call 0xffffe0a4(%rip)
3e11(7): mov 0x20a290(%rip),%rbx
3e18(7): lea 0x6361(%rip),%rsi
3e1f(5): mov $0x5,%edx
3e24(2): xor %edi,%edi
3e26(5): call 0xffffdf4a(%rip)
3e2b(3): mov %rbx,%rsi
3e2e(3): mov %rax,%rdi
3e31(5): call 0xffffe07f(%rip)
3e36(7): mov 0x20a26b(%rip),%rbx
3e3d(7): lea 0x63ac(%rip),%rsi
3e44(5): mov $0x5,%edx
3e49(2): xor %edi,%edi
3e4b(5): call 0xffffdf25(%rip)
3e50(3): mov %rbx,%rsi
3e53(3): mov %rax,%rdi
3e56(5): call 0xffffe05a(%rip)
3e5b(7): mov 0x20a246(%rip),%rbx
3e62(7): lea 0x655f(%rip),%rsi
3e69(5): mov $0x5,%edx
3e6e(2): xor %edi,%edi
3e70(5): call 0xffffdf00(%rip)
3e75(3): mov %rbx,%rsi
3e78(3): mov %rax,%rdi
3e7b(7): lea 0x57f6(%rip),%rbx
3e82(5): call 0xffffe02e(%rip)
3e87(7): lea 0x57f0(%rip),%rax
3e8e(7): lea 0x582a(%rip),%rcx
3e95(9): mov $0x0,0x60(%rsp)
3e9e(9): mov $0x0,0x68(%rsp)
3ea7(3): mov %rsp,%rdx
3eaa(4): mov %rax,(%rsp)
3eae(7): lea 0x57cb(%rip),%rax
3eb5(5): mov %rcx,0x30(%rsp)
3eba(7): lea 0x5808(%rip),%rcx
3ec1(5): mov %rax,0x8(%rsp)
3ec6(7): lea 0x582b(%rip),%rax
3ecd(5): mov %rcx,0x40(%rsp)
3ed2(7): lea 0x57fa(%rip),%rcx
3ed9(5): mov %rax,0x10(%rsp)
3ede(7): lea 0x57ab(%rip),%rax
3ee5(5): mov %rcx,0x50(%rsp)
3eea(5): mov %rax,0x18(%rsp)
3eef(7): lea 0x57b0(%rip),%rax
3ef6(5): mov %rax,0x20(%rsp)
3efb(7): lea 0x57ae(%rip),%rax
3f02(5): mov %rax,0x28(%rsp)
3f07(5): mov %rax,0x38(%rsp)
3f0c(5): mov %rax,0x48(%rsp)
3f11(5): mov %rax,0x58(%rsp)
3f16(a): nop 0x0(%rax,%rax,1)
3f20(4): add $0x10,%rdx
3f24(3): mov (%rdx),%rdi
3f27(3): test %rdi,%rdi
3f2a(2): jz 0x15(%rip)
3f2c(5): mov $0x6,%ecx
3f31(3): mov %rbx,%rsi
3f34(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3f36(3): setnbe %al
3f39(2): sbb $0x0,%al
3f3b(2): test %al,%al
3f3d(2): jnz 0xffffffe3(%rip)
3f3f(4): mov 0x8(%rdx),%r12
3f43(2): xor %edi,%edi
3f45(5): mov $0x5,%edx
3f4a(7): lea 0x578c(%rip),%rsi
3f51(3): test %r12,%r12
3f54(6): jz 0xc7(%rip)
3f5a(5): call 0xffffde16(%rip)
3f5f(7): lea 0x650a(%rip),%rcx
3f66(7): lea 0x5787(%rip),%rdx
3f6d(3): mov %rax,%rsi
3f70(5): mov $0x1,%edi
3f75(2): xor %eax,%eax
3f77(5): call 0xffffe069(%rip)
3f7c(2): xor %esi,%esi
3f7e(5): mov $0x5,%edi
3f83(5): call 0xffffe04d(%rip)
3f88(3): test %rax,%rax
3f8b(2): jz 0x1e(%rip)
3f8d(7): lea 0x576e(%rip),%rsi
3f94(5): mov $0x3,%edx
3f99(3): mov %rax,%rdi
3f9c(5): call 0xffffdd04(%rip)
3fa1(2): test %eax,%eax
3fa3(6): jnz 0x10d(%rip)
3fa9(7): lea 0x5756(%rip),%rsi
3fb0(2): xor %edi,%edi
3fb2(5): mov $0x5,%edx
3fb7(5): call 0xffffddb9(%rip)
3fbc(7): lea 0x56b5(%rip),%rcx
3fc3(7): lea 0x64a6(%rip),%rdx
3fca(3): mov %rax,%rsi
3fcd(5): mov $0x1,%edi
3fd2(2): xor %eax,%eax
3fd4(5): call 0xffffe00c(%rip)
3fd9(3): cmp %rbx,%r12
3fdc(7): lea 0x56b7(%rip),%rcx
3fe3(7): lea 0x6dc6(%rip),%rbx
3fea(4): cmove %rcx,%rbx
3fee(7): lea 0x64eb(%rip),%rsi
3ff5(2): xor %edi,%edi
3ff7(5): mov $0x5,%edx
3ffc(5): call 0xffffdd74(%rip)
4001(3): mov %rbx,%rcx
4004(3): mov %rax,%rsi
4007(3): mov %r12,%rdx
400a(5): mov $0x1,%edi
400f(2): xor %eax,%eax
4011(5): call 0xffffdfcf(%rip)
4016(5): jmp 0xfffffc60(%rip)
401b(5): call 0xffffdd55(%rip)
4020(7): lea 0x6449(%rip),%rcx
4027(7): lea 0x56c6(%rip),%rdx
402e(3): mov %rax,%rsi
4031(5): mov $0x1,%edi
4036(2): xor %eax,%eax
4038(5): call 0xffffdfa8(%rip)
403d(2): xor %esi,%esi
403f(5): mov $0x5,%edi
4044(5): call 0xffffdf8c(%rip)
4049(3): test %rax,%rax
404c(2): jz 0x1a(%rip)
404e(7): lea 0x56ad(%rip),%rsi
4055(5): mov $0x3,%edx
405a(3): mov %rax,%rdi
405d(5): call 0xffffdc43(%rip)
4062(2): test %eax,%eax
4064(2): jnz 0x45(%rip)
4066(7): lea 0x5699(%rip),%rsi
406d(5): mov $0x5,%edx
4072(2): xor %edi,%edi
4074(7): lea 0x55fd(%rip),%r12
407b(7): lea 0x5618(%rip),%rbx
4082(5): call 0xffffdcee(%rip)
4087(7): lea 0x55ea(%rip),%rcx
408e(7): lea 0x63db(%rip),%rdx
4095(3): mov %rax,%rsi
4098(5): mov $0x1,%edi
409d(2): xor %eax,%eax
409f(5): call 0xffffdf41(%rip)
40a4(5): jmp 0xffffff4a(%rip)
40a9(7): lea 0x55c8(%rip),%r12
40b0(7): mov 0x209ff1(%rip),%r13
40b7(7): lea 0x63da(%rip),%rsi
40be(2): xor %edi,%edi
40c0(5): mov $0x5,%edx
40c5(5): call 0xffffdcab(%rip)
40ca(3): mov %r13,%rsi
40cd(3): mov %rax,%rdi
40d0(5): call 0xffffdde0(%rip)
40d5(5): jmp 0xfffffed4(%rip)

"__argmatch_die" :
40e0(5): mov $0x1,%edi
40e5(5): jmp 0xfffffb3b(%rip)

"argmatch" :
40f0(2): push %r15
40f2(2): push %r14
40f4(3): mov %rsi,%r15
40f7(2): push %r13
40f9(2): push %r12
40fb(3): mov %rcx,%r13
40fe(1): push %rbp
40ff(1): push %rbx
4100(3): mov %rdx,%rbp
4103(4): sub $0x28,%rsp
4107(5): mov %rdi,0x8(%rsp)
410c(5): mov %rdx,0x18(%rsp)
4111(5): call 0xffffdc7f(%rip)
4116(3): mov (%r15),%r14
4119(8): mov $0xffffffff,(%rsp)
4121(3): test %r14,%r14
4124(6): jz 0xb9(%rip)
412a(3): mov %rax,%r12
412d(5): mov $0x0,0x17(%rsp)
4132(2): xor %ebx,%ebx
4134(2): jmp 0x53(%rip)
4136(a): nop 0x0(%rax,%rax,1)
4140(5): mov 0x18(%rsp),%rax
4145(3): test %rax,%rax
4148(6): jz 0xa8(%rip)
414e(4): mov (%rsp),%rdi
4152(3): mov %r13,%rdx
4155(3): mov %rbp,%rsi
4158(4): imul %r13,%rdi
415c(3): add %rax,%rdi
415f(5): call 0xffffdd41(%rip)
4164(2): test %eax,%eax
4166(5): movzx 0x17(%rsp),%eax
416b(5): mov $0x1,%ecx
4170(3): cmovne %ecx,%eax
4173(4): mov %al,0x17(%rsp)
4177(4): add $0x1,%rbx
417b(3): add %r13,%rbp
417e(4): mov 0x0(%r15,%rbx,8),%r14
4182(3): test %r14,%r14
4185(2): jz 0x43(%rip)
4187(5): mov 0x8(%rsp),%rsi
418c(3): mov %r12,%rdx
418f(3): mov %r14,%rdi
4192(5): call 0xffffdb0e(%rip)
4197(2): test %eax,%eax
4199(2): jnz 0xffffffde(%rip)
419b(3): mov %r14,%rdi
419e(5): call 0xffffdbf2(%rip)
41a3(3): cmp %r12,%rax
41a6(2): jz 0x5a(%rip)
41a8(5): cmp $0xffffffff,(%rsp)
41ad(2): jnz 0xffffff93(%rip)
41af(4): mov %rbx,(%rsp)
41b3(4): add $0x1,%rbx
41b7(3): add %r13,%rbp
41ba(4): mov 0x0(%r15,%rbx,8),%r14
41be(3): test %r14,%r14
41c1(2): jnz 0xffffffc6(%rip)
41c3(5): nop 0x0(%rax,%rax,1)
41c8(5): cmp $0x0,0x17(%rsp)
41cd(7): mov $0xfffffffe,%rax
41d4(5): cmove (%rsp),%rax
41d9(4): mov %rax,(%rsp)
41dd(4): mov (%rsp),%rax
41e1(4): add $0x28,%rsp
41e5(1): pop %rbx
41e6(1): pop %rbp
41e7(2): pop %r12
41e9(2): pop %r13
41eb(2): pop %r14
41ed(2): pop %r15
41ef(1): ret near (%rsp)
41f0(5): mov $0x1,0x17(%rsp)
41f5(2): jmp 0xffffff82(%rip)
41f7(9): nop 0x0(%rax,%rax,1)
4200(4): mov %rbx,(%rsp)
4204(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
4210(4): cmp $0xffffffff,%rdx
4214(2): push %r12
4216(5): mov $0x5,%edx
421b(1): push %rbp
421c(3): mov %rsi,%r12
421f(1): push %rbx
4220(3): mov %rdi,%rbp
4223(2): jz 0x4d(%rip)
4225(7): lea 0x6500(%rip),%rsi
422c(2): xor %edi,%edi
422e(5): call 0xffffdb42(%rip)
4233(3): mov %rax,%rbx
4236(3): mov %rbp,%rsi
4239(5): mov $0x1,%edi
423e(5): call 0x2f12(%rip)
4243(3): mov %r12,%rdx
4246(3): mov %rax,%rbp
4249(5): mov $0x8,%esi
424e(2): xor %edi,%edi
4250(5): call 0x2b30(%rip)
4255(3): mov %rbp,%r8
4258(3): mov %rbx,%rdx
425b(3): mov %rax,%rcx
425e(1): pop %rbx
425f(1): pop %rbp
4260(2): pop %r12
4262(2): xor %esi,%esi
4264(2): xor %edi,%edi
4266(2): xor %eax,%eax
4268(5): jmp 0xffffddb8(%rip)
426d(3): nop (%rax)
4270(7): lea 0x649a(%rip),%rsi
4277(2): xor %edi,%edi
4279(5): call 0xffffdaf7(%rip)
427e(3): mov %rax,%rbx
4281(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
4290(2): push %r15
4292(2): push %r14
4294(3): mov %rdi,%r14
4297(2): push %r13
4299(2): push %r12
429b(2): xor %edi,%edi
429d(1): push %rbp
429e(1): push %rbx
429f(3): mov %rsi,%rbp
42a2(7): lea 0x64a0(%rip),%rsi
42a9(3): mov %rdx,%r12
42ac(5): mov $0x5,%edx
42b1(4): sub $0x8,%rsp
42b5(7): mov 0x209e24(%rip),%rbx
42bc(5): call 0xffffdab4(%rip)
42c1(3): mov %rax,%rdi
42c4(3): mov %rbx,%rsi
42c7(5): call 0xffffdbe9(%rip)
42cc(3): mov (%r14),%r15
42cf(3): test %r15,%r15
42d2(6): jz 0x96(%rip)
42d8(3): xor %r13d,%r13d
42db(2): xor %ebx,%ebx
42dd(2): jmp 0x3b(%rip)
42df(1): nop 
42e0(3): mov %r15,%rdi
42e3(4): add $0x1,%rbx
42e7(3): mov %rbp,%r13
42ea(5): call 0x2e86(%rip)
42ef(7): mov 0x209dea(%rip),%rdi
42f6(7): lea 0x6461(%rip),%rdx
42fd(3): mov %rax,%rcx
4300(5): mov $0x1,%esi
4305(2): xor %eax,%eax
4307(3): add %r12,%rbp
430a(5): call 0xffffddd6(%rip)
430f(4): mov 0x0(%r14,%rbx,8),%r15
4313(3): test %r15,%r15
4316(2): jz 0x52(%rip)
4318(3): test %rbx,%rbx
431b(2): jz 0xffffffc5(%rip)
431d(3): mov %r12,%rdx
4320(3): mov %rbp,%rsi
4323(3): mov %r13,%rdi
4326(5): call 0xffffdb7a(%rip)
432b(2): test %eax,%eax
432d(2): jnz 0xffffffb3(%rip)
432f(3): mov %r15,%rdi
4332(4): add $0x1,%rbx
4336(3): add %r12,%rbp
4339(5): call 0x2e37(%rip)
433e(7): mov 0x209d9b(%rip),%rdi
4345(7): lea 0x641a(%rip),%rdx
434c(3): mov %rax,%rcx
434f(5): mov $0x1,%esi
4354(2): xor %eax,%eax
4356(5): call 0xffffdd8a(%rip)
435b(4): mov 0x0(%r14,%rbx,8),%r15
435f(3): test %r15,%r15
4362(2): jnz 0xffffffb6(%rip)
4364(4): nop 0x0(%rax)
4368(7): mov 0x209d71(%rip),%rdi
436f(4): mov 0x28(%rdi),%rax
4373(4): cmp 0x30(%rdi),%rax
4377(2): jnb 0x21(%rip)
4379(4): lea 0x1(%rax),%rdx
437d(4): mov %rdx,0x28(%rdi)
4381(3): mov $0xa,(%rax)
4384(4): add $0x8,%rsp
4388(1): pop %rbx
4389(1): pop %rbp
438a(2): pop %r12
438c(2): pop %r13
438e(2): pop %r14
4390(2): pop %r15
4392(1): ret near (%rsp)
4393(5): nop 0x0(%rax,%rax,1)
4398(4): add $0x8,%rsp
439c(5): mov $0xa,%esi
43a1(1): pop %rbx
43a2(1): pop %rbp
43a3(2): pop %r12
43a5(2): pop %r13
43a7(2): pop %r14
43a9(2): pop %r15
43ab(5): jmp 0xffffda55(%rip)

"__xargmatch_internal" :
43b0(2): push %r15
43b2(2): push %r14
43b4(3): mov %rdi,%r14
43b7(2): push %r13
43b9(2): push %r12
43bb(3): mov %rsi,%r12
43be(1): push %rbp
43bf(1): push %rbx
43c0(3): mov %rcx,%rbp
43c3(3): mov %rdx,%rbx
43c6(3): mov %r8,%rcx
43c9(3): mov %rbp,%rdx
43cc(4): sub $0x8,%rsp
43d0(3): mov %rbx,%rsi
43d3(3): mov %r12,%rdi
43d6(3): mov %r8,%r15
43d9(3): mov %r9,%r13
43dc(5): call 0xfffffd14(%rip)
43e1(3): test %rax,%rax
43e4(2): js 0x11(%rip)
43e6(4): add $0x8,%rsp
43ea(1): pop %rbx
43eb(1): pop %rbp
43ec(2): pop %r12
43ee(2): pop %r13
43f0(2): pop %r14
43f2(2): pop %r15
43f4(1): ret near (%rsp)
43f5(3): mov %rax,%rdx
43f8(3): mov %r12,%rsi
43fb(3): mov %r14,%rdi
43fe(5): call 0xfffffe12(%rip)
4403(3): mov %r15,%rdx
4406(3): mov %rbp,%rsi
4409(3): mov %rbx,%rdi
440c(5): call 0xfffffe84(%rip)
4411(3): call %r13
4414(7): mov $0xffffffff,%rax
441b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
4420(2): push %r14
4422(2): push %r13
4424(2): push %r12
4426(1): push %rbp
4427(1): push %rbx
4428(3): mov (%rsi),%r14
442b(3): test %r14,%r14
442e(2): jz 0x33(%rip)
4430(3): mov %rcx,%r12
4433(3): mov %rdi,%r13
4436(3): mov %rdx,%rbp
4439(4): lea 0x8(%rsi),%rbx
443d(2): jmp 0x12(%rip)
443f(1): nop 
4440(3): mov (%rbx),%r14
4443(3): add %r12,%rbp
4446(4): add $0x8,%rbx
444a(3): test %r14,%r14
444d(2): jz 0x14(%rip)
444f(3): mov %r12,%rdx
4452(3): mov %rbp,%rsi
4455(3): mov %r13,%rdi
4458(5): call 0xffffda48(%rip)
445d(2): test %eax,%eax
445f(2): jnz 0xffffffe1(%rip)
4461(1): pop %rbx
4462(3): mov %r14,%rax
4465(1): pop %rbp
4466(2): pop %r12
4468(2): pop %r13
446a(2): pop %r14
446c(1): ret near (%rsp)

"close_stdout_set_file_name" :
4470(7): mov %rdi,0x209c89(%rip)
4477(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
4480(7): mov %dil,0x209c71(%rip)
4487(1): ret near (%rsp)

"close_stdout" :
4490(1): push %rbp
4491(1): push %rbx
4492(4): sub $0x8,%rsp
4496(7): mov 0x209c0b(%rip),%rdi
449d(5): call 0x4e63(%rip)
44a2(2): test %eax,%eax
44a4(2): jz 0x18(%rip)
44a6(5): call 0xffffd7ca(%rip)
44ab(7): cmp $0x0,0x209c46(%rip)
44b2(3): mov %rax,%rbx
44b5(2): jz 0x1e(%rip)
44b7(3): cmp $0x20,(%rax)
44ba(2): jnz 0x19(%rip)
44bc(7): mov 0x209c1d(%rip),%rdi
44c3(5): call 0x4e3d(%rip)
44c8(2): test %eax,%eax
44ca(2): jnz 0x48(%rip)
44cc(4): add $0x8,%rsp
44d0(1): pop %rbx
44d1(1): pop %rbp
44d2(1): ret near (%rsp)
44d3(7): lea 0x6291(%rip),%rsi
44da(2): xor %edi,%edi
44dc(5): mov $0x5,%edx
44e1(5): call 0xffffd88f(%rip)
44e6(7): mov 0x209c13(%rip),%rdi
44ed(3): mov %rax,%rbp
44f0(3): test %rdi,%rdi
44f3(2): jz 0x2a(%rip)
44f5(5): call 0x2a7b(%rip)
44fa(2): mov (%rbx),%esi
44fc(7): lea 0x6274(%rip),%rdx
4503(3): mov %rax,%rcx
4506(3): mov %rbp,%r8
4509(2): xor %edi,%edi
450b(2): xor %eax,%eax
450d(5): call 0xffffdb13(%rip)
4512(6): mov 0x209b08(%rip),%edi
4518(5): call 0xffffd798(%rip)
451d(2): mov (%rbx),%esi
451f(7): lea 0x6242(%rip),%rdx
4526(3): mov %rax,%rcx
4529(2): xor %edi,%edi
452b(2): xor %eax,%eax
452d(5): call 0xffffdaf3(%rip)
4532(2): jmp 0xffffffe0(%rip)

"dir_name" :
4540(4): sub $0x8,%rsp
4544(5): call 0x7c(%rip)
4549(3): test %rax,%rax
454c(2): jz 0x7(%rip)
454e(4): add $0x8,%rsp
4552(1): ret near (%rsp)
4553(5): call 0x43ed(%rip)

"dir_len" :
4560(1): push %rbp
4561(1): push %rbx
4562(2): xor %ebp,%ebp
4564(3): mov %rdi,%rbx
4567(4): sub $0x8,%rsp
456b(3): cmp $0x2f,(%rdi)
456e(4): setz %bpl
4572(5): call 0xae(%rip)
4577(3): mov %rax,%rcx
457a(3): sub %rbx,%rcx
457d(3): cmp %rbp,%rcx
4580(2): jbe 0x30(%rip)
4582(4): cmp $0x2f,0xffffffff(%rax)
4586(4): lea 0xffffffff(%rcx),%rdx
458a(2): jz 0x14(%rip)
458c(2): jmp 0x24(%rip)
458e(2): nop 
4590(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
4595(4): lea 0xffffffff(%rdx),%rax
4599(2): jnz 0xa(%rip)
459b(3): mov %rax,%rdx
459e(3): cmp %rdx,%rbp
45a1(2): jnz 0xffffffef(%rip)
45a3(4): add $0x8,%rsp
45a7(3): mov %rdx,%rax
45aa(1): pop %rbx
45ab(1): pop %rbp
45ac(1): ret near (%rsp)
45ad(3): nop (%rax)
45b0(4): add $0x8,%rsp
45b4(3): mov %rcx,%rdx
45b7(3): mov %rdx,%rax
45ba(1): pop %rbx
45bb(1): pop %rbp
45bc(1): ret near (%rsp)

"mdir_name" :
45c0(1): push %rbp
45c1(1): push %rbx
45c2(3): mov %rdi,%rbp
45c5(4): sub $0x8,%rsp
45c9(5): call 0xffffff97(%rip)
45ce(3): test %rax,%rax
45d1(3): mov %rax,%rbx
45d4(3): setz %al
45d7(3): movzx %al,%eax
45da(5): lea 0x1(%rbx,%rax,1),%rdi
45df(5): call 0xffffd971(%rip)
45e4(3): test %rax,%rax
45e7(3): mov %rax,%rcx
45ea(2): jz 0x1c(%rip)
45ec(3): mov %rbx,%rdx
45ef(3): mov %rbp,%rsi
45f2(3): mov %rax,%rdi
45f5(5): call 0xffffd90b(%rip)
45fa(3): test %rbx,%rbx
45fd(3): mov %rax,%rcx
4600(2): jz 0x10(%rip)
4602(4): mov $0x0,0x0(%rcx,%rbx,1)
4606(4): add $0x8,%rsp
460a(3): mov %rcx,%rax
460d(1): pop %rbx
460e(1): pop %rbp
460f(1): ret near (%rsp)
4610(3): mov $0x2e,(%rax)
4613(5): mov $0x1,%ebx
4618(2): jmp 0xffffffea(%rip)

"last_component" :
4620(3): movzx (%rdi),%edx
4623(3): mov %rdi,%rax
4626(3): cmp $0x2f,%dl
4629(2): jnz 0x13(%rip)
462b(5): nop 0x0(%rax,%rax,1)
4630(4): add $0x1,%rax
4634(3): movzx (%rax),%edx
4637(3): cmp $0x2f,%dl
463a(2): jz 0xfffffff6(%rip)
463c(2): test %dl,%dl
463e(2): jz 0x3c(%rip)
4640(3): mov %rax,%rcx
4643(2): xor %esi,%esi
4645(2): jmp 0x20(%rip)
4647(9): nop 0x0(%rax,%rax,1)
4650(3): test %sil,%sil
4653(2): jz 0x7(%rip)
4655(3): mov %rcx,%rax
4658(2): xor %esi,%esi
465a(4): add $0x1,%rcx
465e(3): movzx (%rcx),%edx
4661(2): test %dl,%dl
4663(2): jz 0x17(%rip)
4665(3): cmp $0x2f,%dl
4668(2): jnz 0xffffffe8(%rip)
466a(4): add $0x1,%rcx
466e(3): movzx (%rcx),%edx
4671(5): mov $0x1,%esi
4676(2): test %dl,%dl
4678(2): jnz 0xffffffed(%rip)
467a(2): REP ret near (%rsp)

"base_len" :
4680(1): push %rbx
4681(3): mov %rdi,%rbx
4684(5): call 0xffffd70c(%rip)
4689(4): cmp $0x1,%rax
468d(2): jbe 0xd(%rip)
468f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
4694(4): lea 0xffffffff(%rax),%rdx
4698(2): jz 0x10(%rip)
469a(1): pop %rbx
469b(1): ret near (%rsp)
469c(4): nop 0x0(%rax)
46a0(3): mov %rax,%rdx
46a3(5): nop 0x0(%rax,%rax,1)
46a8(4): cmp $0x1,%rdx
46ac(2): jz 0x14(%rip)
46ae(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
46b3(4): lea 0xffffffff(%rdx),%rax
46b7(2): jz 0xffffffe9(%rip)
46b9(3): mov %rdx,%rax
46bc(1): pop %rbx
46bd(1): ret near (%rsp)
46be(2): nop 
46c0(5): mov $0x1,%eax
46c5(1): pop %rbx
46c6(1): ret near (%rsp)

"open_safer" :
46d0(4): sub $0x58,%rsp
46d4(5): mov %rdx,0x30(%rsp)
46d9(2): xor %edx,%edx
46db(9): mov $0x28,%rax
46e4(5): mov %rax,0x18(%rsp)
46e9(2): xor %eax,%eax
46eb(4): test $0x40,%sil
46ef(2): jnz 0x29(%rip)
46f1(2): xor %eax,%eax
46f3(5): call 0xffffd95d(%rip)
46f8(2): mov %eax,%edi
46fa(5): call 0x3996(%rip)
46ff(5): mov 0x18(%rsp),%rcx
4704(9): xor $0x28,%rcx
470d(2): jnz 0x2c(%rip)
470f(4): add $0x58,%rsp
4713(1): ret near (%rsp)
4714(4): nop 0x0(%rax)
4718(5): lea 0x60(%rsp),%rax
471d(7): mov $0x10,(%rsp)
4724(4): mov 0x30(%rsp),%edx
4728(5): mov %rax,0x8(%rsp)
472d(5): lea 0x20(%rsp),%rax
4732(5): mov %rax,0x10(%rsp)
4737(2): jmp 0xffffffba(%rip)
4739(5): call 0xffffd667(%rip)

"adjust_value.part.0" :
4740(6): fld 0x60a6(%rip),%st0
4746(4): fld 0x8(%rsp),%st0
474a(2): fucomi %st1,%st0
474c(2): jnb 0x74(%rip)
474e(2): fstp %st0,%st1
4750(4): fstcw 0xfffffff6(%rsp)
4754(5): movzx 0xfffffff6(%rsp),%eax
4759(3): or $0xc,%ah
475c(5): mov %ax,0xfffffff4(%rsp)
4761(2): fld %st0,%st0
4763(4): fldcw 0xfffffff4(%rsp)
4767(4): fistp %st0,0xffffffe8(%rsp)
476b(4): fldcw 0xfffffff6(%rsp)
476f(5): mov 0xffffffe8(%rsp),%rax
4774(5): mov %rax,0xffffffe0(%rsp)
4779(3): test %rax,%rax
477c(4): fild 0xffffffe0(%rsp),%st0
4780(2): jns 0x8(%rip)
4782(6): fadd 0x6068(%rip)
4788(2): test %edi,%edi
478a(2): jnz 0x2e(%rip)
478c(2): fxch %st1,%st0
478e(2): fucomip %st1,%st0
4790(2): jp 0x8(%rip)
4792(2): jz 0x28(%rip)
4794(2): fstp %st0,%st0
4796(2): jmp 0xa(%rip)
4798(2): fstp %st0,%st0
479a(6): nop 0x0(%rax,%rax,1)
47a0(4): add $0x1,%rax
47a4(5): mov %rax,0xffffffe0(%rsp)
47a9(3): test %rax,%rax
47ac(4): fild 0xffffffe0(%rsp),%st0
47b0(2): js 0x50(%rip)
47b2(2): jmp 0x8(%rip)
47b4(4): nop 0x0(%rax)
47b8(2): fstp %st0,%st1
47ba(2): REP ret near (%rsp)
47bc(4): nop 0x0(%rax)
47c0(4): fstcw 0xfffffff6(%rsp)
47c4(5): movzx 0xfffffff6(%rsp),%eax
47c9(2): fsubr %st0,%st1
47cb(2): fxch %st1,%st0
47cd(a): mov $0x-9223372036854775808,%rdx
47d7(3): or $0xc,%ah
47da(5): mov %ax,0xfffffff4(%rsp)
47df(4): fldcw 0xfffffff4(%rsp)
47e3(4): fistp %st0,0xffffffe8(%rsp)
47e7(4): fldcw 0xfffffff6(%rsp)
47eb(5): mov 0xffffffe8(%rsp),%rax
47f0(3): xor %rdx,%rax
47f3(5): jmp 0xffffff81(%rip)
47f8(8): nop 0x0(%rax,%rax,1)
4800(6): fadd 0x5fea(%rip)
4806(1): ret near (%rsp)

"human_readable" :
4810(2): push %r15
4812(2): push %r14
4814(2): mov %edx,%eax
4816(2): push %r13
4818(2): push %r12
481a(3): mov %edx,%r15d
481d(1): push %rbp
481e(1): push %rbx
481f(3): and $0x20,%eax
4822(4): and $0x3,%r15d
4826(3): mov %edx,%r12d
4829(3): mov %rdi,%rbx
482c(7): sub $0x98,%rsp
4833(5): mov %rcx,0x18(%rsp)
4838(4): mov %eax,0x30(%rsp)
483c(9): mov $0x28,%rcx
4845(8): mov %rcx,0x88(%rsp)
484d(2): xor %ecx,%ecx
484f(3): cmp $0x1,%eax
4852(4): mov %rsi,(%rsp)
4856(5): mov %r8,0x10(%rsp)
485b(2): sbb %eax,%eax
485d(3): and $0xe8,%eax
4860(5): add $0x400,%eax
4865(4): mov %eax,0x34(%rsp)
4869(5): call 0xffffd487(%rip)
486e(3): mov (%rax),%r14
4871(3): mov %rax,%r13
4874(3): mov %r14,%rdi
4877(5): call 0xffffd519(%rip)
487c(4): mov 0x10(%r13),%rcx
4880(4): mov 0x8(%r13),%r13
4884(3): mov %rax,%rbp
4887(4): sub $0x1,%rax
488b(5): mov $0x1,%edx
4890(4): cmp $0x10,%rax
4894(7): lea 0x4d38(%rip),%rax
489b(3): mov %r13,%rdi
489e(4): cmovnb %rdx,%rbp
48a2(5): mov %rcx,0x38(%rsp)
48a7(4): cmovnb %rax,%r14
48ab(5): call 0xffffd4e5(%rip)
48b0(4): cmp $0x11,%rax
48b4(7): lea 0x64f5(%rip),%rax
48bb(5): mov 0x10(%rsp),%rdi
48c0(5): mov 0x18(%rsp),%rcx
48c5(4): cmovnb %rax,%r13
48c9(4): mov (%rsp),%rax
48cd(6): add $0x287,%rax
48d3(3): cmp %rcx,%rdi
48d6(5): mov %rax,0x8(%rsp)
48db(6): jnbe 0x14d(%rip)
48e1(2): xor %edx,%edx
48e3(3): mov %rcx,%rax
48e6(3): div %rdi,%rax
48e9(3): test %rdx,%rdx
48ec(3): mov %rax,%rdi
48ef(6): jz 0x361(%rip)
48f5(5): mov %rcx,0x18(%rsp)
48fa(3): test %rcx,%rcx
48fd(4): fild 0x18(%rsp),%st0
4901(2): jns 0x8(%rip)
4903(6): fadd 0x5ee7(%rip)
4909(5): mov 0x10(%rsp),%rax
490e(5): mov %rax,0x18(%rsp)
4913(3): test %rax,%rax
4916(4): fild 0x18(%rsp),%st0
491a(2): jns 0x8(%rip)
491c(6): fadd 0x5ece(%rip)
4922(2): fdivp %st0,%st1
4924(5): mov %rbx,0x18(%rsp)
4929(3): test %rbx,%rbx
492c(4): fild 0x18(%rsp),%st0
4930(2): jns 0x8(%rip)
4932(6): fadd 0x5eb8(%rip)
4938(4): test $0x10,%r12b
493c(2): fmulp %st0,%st1
493e(6): jz 0x1ca(%rip)
4944(4): fild 0x34(%rsp),%st0
4948(2): xor %ebx,%ebx
494a(2): fld %st0,%st0
494c(2): jmp 0x8(%rip)
494e(2): nop 
4950(2): fstp %st0,%st1
4952(2): fxch %st2,%st0
4954(2): fld %st0,%st0
4956(3): add $0x1,%ebx
4959(2): fmul %st2
495b(2): fxch %st3,%st0
495d(2): fucomi %st3,%st0
495f(2): jb 0x11(%rip)
4961(3): cmp $0x8,%ebx
4964(2): jnz 0xffffffec(%rip)
4966(2): fstp %st0,%st2
4968(2): fstp %st0,%st2
496a(2): jmp 0xa(%rip)
496c(4): nop 0x0(%rax)
4970(2): fstp %st0,%st2
4972(2): fstp %st0,%st2
4974(4): mov 0x30(%rsp),%ecx
4978(4): add $0x1,%rbp
497c(2): xor %eax,%eax
497e(2): fdivrp %st0,%st1
4980(2): test %ecx,%ecx
4982(3): setz %al
4985(4): cmp $0x1,%r15d
4989(5): lea 0x1(%rbp,%rax,1),%rax
498e(5): mov %rax,0x18(%rsp)
4993(6): jz 0x56d(%rip)
4999(6): fld 0x5e61(%rip),%st0
499f(2): fucomip %st1,%st0
49a1(6): jnbe 0x3d7(%rip)
49a7(2): fld %st0,%st0
49a9(4): fstp %st0,0x20(%rsp)
49ad(4): sub $0x10,%rsp
49b1(7): lea 0x5dcc(%rip),%rcx
49b8(5): mov $0x1,%esi
49bd(7): mov $0xffffffff,%rdx
49c4(2): xor %eax,%eax
49c6(5): mov 0x10(%rsp),%r14
49cb(3): mov %r14,%rdi
49ce(3): fstp %st0,(%rsp)
49d1(5): call 0xffffd74f(%rip)
49d6(3): mov %r14,%rdi
49d9(5): call 0xffffd3b7(%rip)
49de(1): pop %rcx
49df(1): pop %rsi
49e0(5): cmp 0x18(%rsp),%rax
49e5(3): mov %rax,%r14
49e8(4): fld 0x20(%rsp),%st0
49ec(6): jnbe 0x5ac(%rip)
49f2(4): test $0x8,%r12b
49f6(6): jz 0x16a(%rip)
49fc(4): mov (%rsp),%rax
4a00(6): cmp $0x30,0xffffffff(%rax,%r14,1)
4a06(6): jnz 0x162(%rip)
4a0c(6): fld 0x5de2(%rip),%st0
4a12(4): cmp $0x1,%r15d
4a16(2): fmul %st0,%st1
4a18(6): jnz 0x588(%rip)
4a1e(5): jmp 0x535(%rip)
4a23(5): nop 0x0(%rax,%rax,1)
4a28(3): test %rcx,%rcx
4a2b(6): jz 0xfffffeca(%rip)
4a31(5): mov 0x10(%rsp),%rax
4a36(2): xor %edx,%edx
4a38(3): div %rcx,%rax
4a3b(3): test %rdx,%rdx
4a3e(3): mov %rax,%r8
4a41(6): jnz 0xfffffeb4(%rip)
4a47(3): mov %rbx,%rax
4a4a(2): xor %edx,%edx
4a4c(3): div %r8,%rax
4a4f(3): mov %rax,%rbx
4a52(4): lea 0x0(%rdx,%rdx,4),%rax
4a56(2): xor %edx,%edx
4a58(3): mov %rbx,%rsi
4a5b(3): add %rax,%rax
4a5e(3): div %r8,%rax
4a61(3): add %rdx,%rdx
4a64(3): mov %eax,%r9d
4a67(3): cmp %rdx,%r8
4a6a(6): jbe 0x58e(%rip)
4a70(2): xor %edi,%edi
4a72(3): test %rdx,%rdx
4a75(4): setnz %dil
4a79(3): mov %r12d,%ecx
4a7c(5): mov 0x8(%rsp),%r8
4a81(5): mov $0xffffffff,%ebx
4a86(3): and $0x10,%ecx
4a89(6): jz 0x3c7(%rip)
4a8f(5): mov 0x34(%rsp),%r8d
4a94(3): cmp %rsi,%r8
4a97(3): mov %r8,%r11
4a9a(6): jnbe 0x576(%rip)
4aa0(2): xor %ebx,%ebx
4aa2(2): jmp 0x25(%rip)
4aa4(4): nop 0x0(%rax)
4aa8(2): test %edi,%edi
4aaa(4): setnz %dil
4aae(4): movzx %dil,%edi
4ab2(3): add $0x1,%ebx
4ab5(3): cmp %r10,%r8
4ab8(6): jnbe 0x315(%rip)
4abe(3): cmp $0x8,%ebx
4ac1(6): jz 0x5a7(%rip)
4ac7(3): mov %rsi,%rax
4aca(2): xor %edx,%edx
4acc(2): mov %edi,%esi
4ace(3): div %r8,%rax
4ad1(2): sar $0x1,%esi
4ad3(3): mov %rax,%r10
4ad6(3): lea 0x0(%rdx,%rdx,4),%eax
4ad9(2): xor %edx,%edx
4adb(4): lea 0x0(%r9,%rax,2),%eax
4adf(3): div %r11d,%eax
4ae2(3): lea 0x0(%rsi,%rdx,2),%edx
4ae5(3): mov %eax,%r9d
4ae8(3): mov %r10,%rsi
4aeb(2): add %edx,%edi
4aed(3): cmp %edx,%r11d
4af0(2): jnbe 0xffffffb8(%rip)
4af2(3): cmp %edi,%r11d
4af5(4): setb %dil
4af9(4): movzx %dil,%edi
4afd(3): add $0x2,%edi
4b00(2): jmp 0xffffffb2(%rip)
4b02(6): nop 0x0(%rax,%rax,1)
4b08(4): cmp $0x1,%r15d
4b0c(2): jz 0x10(%rip)
4b0e(6): fld 0x5cec(%rip),%st0
4b14(2): fucomip %st1,%st0
4b16(6): jnbe 0x28a(%rip)
4b1c(4): sub $0x10,%rsp
4b20(7): lea 0x5c57(%rip),%rcx
4b27(5): mov $0x1,%esi
4b2c(5): mov 0x10(%rsp),%rbx
4b31(7): mov $0xffffffff,%rdx
4b38(2): xor %eax,%eax
4b3a(3): fstp %st0,(%rsp)
4b3d(2): xor %ebp,%ebp
4b3f(3): mov %rbx,%rdi
4b42(5): call 0xffffd5de(%rip)
4b47(3): mov %rbx,%rdi
4b4a(5): mov $0xffffffff,%ebx
4b4f(5): call 0xffffd241(%rip)
4b54(1): pop %rsi
4b55(1): pop %rdi
4b56(3): mov %rax,%r14
4b59(2): jmp 0x17(%rip)
4b5b(5): nop 0x0(%rax,%rax,1)
4b60(2): fstp %st0,%st0
4b62(2): jmp 0xe(%rip)
4b64(4): nop 0x0(%rax)
4b68(2): fstp %st0,%st0
4b6a(6): nop 0x0(%rax,%rax,1)
4b70(5): mov 0x8(%rsp),%r15
4b75(4): mov (%rsp),%rsi
4b79(3): mov %r14,%rdx
4b7c(3): sub %r14,%r15
4b7f(3): sub %rbp,%r14
4b82(3): mov %r15,%rdi
4b85(5): call 0xffffd48b(%rip)
4b8a(3): mov %r14,%r8
4b8d(3): add %r15,%r8
4b90(4): test $0x4,%r12b
4b94(6): jnz 0xe4(%rip)
4b9a(4): test $0x80,%r12b
4b9e(2): jz 0x79(%rip)
4ba0(3): cmp $0xff,%ebx
4ba3(6): jz 0x31d(%rip)
4ba9(3): mov %r12d,%eax
4bac(5): and $0x100,%eax
4bb1(2): mov %eax,%ecx
4bb3(2): or %ebx,%ecx
4bb5(2): jz 0x62(%rip)
4bb7(4): and $0x40,%r12d
4bbb(6): jnz 0x19d(%rip)
4bc1(2): test %ebx,%ebx
4bc3(6): jz 0x633(%rip)
4bc9(3): cmp $0x1,%ebx
4bcc(2): jnz 0x10(%rip)
4bce(5): mov 0x30(%rsp),%r9d
4bd3(3): test %r9d,%r9d
4bd6(6): jz 0x44a(%rip)
4bdc(7): lea 0x5bfd(%rip),%rcx
4be3(3): movsxd %ebx,%rbx
4be6(5): mov 0x8(%rsp),%rdi
4beb(2): test %eax,%eax
4bed(4): movzx 0x0(%rcx,%rbx,1),%ecx
4bf1(4): lea 0x1(%rdi),%rdx
4bf5(2): mov %cl,(%rdi)
4bf7(6): jz 0x43d(%rip)
4bfd(5): mov 0x30(%rsp),%r8d
4c02(3): test %r8d,%r8d
4c05(6): jnz 0x1bb(%rip)
4c0b(4): lea 0x1(%rdx),%rax
4c0f(3): mov $0x42,(%rdx)
4c12(5): mov %rax,0x8(%rsp)
4c17(5): mov 0x8(%rsp),%rax
4c1c(8): mov 0x88(%rsp),%rcx
4c24(9): xor $0x28,%rcx
4c2d(3): mov $0x0,(%rax)
4c30(3): mov %r15,%rax
4c33(6): jnz 0x598(%rip)
4c39(7): add $0x98,%rsp
4c40(1): pop %rbx
4c41(1): pop %rbp
4c42(2): pop %r12
4c44(2): pop %r13
4c46(2): pop %r14
4c48(2): pop %r15
4c4a(1): ret near (%rsp)
4c4b(5): nop 0x0(%rax,%rax,1)
4c50(3): mov %rbx,%rsi
4c53(2): xor %edx,%edx
4c55(4): imul %rax,%rsi
4c59(3): mov %rsi,%rax
4c5c(3): div %rdi,%rax
4c5f(3): cmp %rbx,%rax
4c62(6): jnz 0xfffffc93(%rip)
4c68(2): xor %edi,%edi
4c6a(3): xor %r9d,%r9d
4c6d(5): jmp 0xfffffe0c(%rip)
4c72(6): nop 0x0(%rax,%rax,1)
4c78(3): mov %r8,%r14
4c7b(3): mov %r13,%rdi
4c7e(5): mov %r8,0x48(%rsp)
4c83(3): sub %r15,%r14
4c86(7): mov $0xffffffff,%rbp
4c8d(5): call 0xffffd103(%rip)
4c92(5): lea 0x50(%rsp),%rdi
4c97(5): mov $0x29,%ecx
4c9c(3): mov %r14,%rdx
4c9f(3): mov %r15,%rsi
4ca2(5): mov %rax,0x40(%rsp)
4ca7(5): mov %rdi,0x18(%rsp)
4cac(5): call 0xffffd234(%rip)
4cb1(3): mov %r12d,%ecx
4cb4(4): mov %ebx,0x20(%rsp)
4cb8(3): mov %r14,%r12
4cbb(3): mov %r13,%rbx
4cbe(5): mov 0x48(%rsp),%r8
4cc3(5): mov 0x38(%rsp),%r15
4cc8(5): mov 0x40(%rsp),%r13
4ccd(3): mov %ecx,%r14d
4cd0(2): jmp 0x42(%rip)
4cd2(6): nop 0x0(%rax,%rax,1)
4cd8(5): mov 0x18(%rsp),%rax
4cdd(3): sub %rbp,%r12
4ce0(3): sub %rbp,%r8
4ce3(3): mov %r8,%rdi
4ce6(3): mov %rbp,%rdx
4ce9(4): lea 0x0(%rax,%r12,1),%rsi
4ced(5): call 0xffffd213(%rip)
4cf2(3): test %r12,%r12
4cf5(3): mov %rax,%r8
4cf8(6): jz 0x510(%rip)
4cfe(3): sub %r13,%r8
4d01(3): mov %r13,%rdx
4d04(3): mov %rbx,%rsi
4d07(3): mov %r8,%rdi
4d0a(5): call 0xffffd1f6(%rip)
4d0f(3): mov %rax,%r8
4d12(4): movzx (%r15),%eax
4d16(2): test %al,%al
4d18(2): jz 0xf(%rip)
4d1a(2): cmp $0x7f,%al
4d1c(3): movzx %al,%ebp
4d1f(4): cmovnb %r12,%rbp
4d23(4): add $0x1,%r15
4d27(3): cmp %r12,%rbp
4d2a(2): jbe 0xffffffae(%rip)
4d2c(3): mov %r14d,%eax
4d2f(3): mov %r8,%r15
4d32(3): mov %r12,%r14
4d35(5): mov 0x18(%rsp),%rsi
4d3a(3): sub %r14,%r15
4d3d(3): mov %r14,%rdx
4d40(3): mov %r15,%rdi
4d43(4): mov 0x20(%rsp),%ebx
4d47(3): mov %eax,%r12d
4d4a(5): call 0xffffd1b6(%rip)
4d4f(5): jmp 0xfffffe4b(%rip)
4d54(4): nop 0x0(%rax)
4d58(4): mov (%rsp),%rcx
4d5c(7): lea 0x288(%rcx),%rdi
4d63(7): mov $0x20,0x287(%rcx)
4d6a(5): mov %rdi,0x8(%rsp)
4d6f(5): jmp 0xfffffe52(%rip)
4d74(4): nop 0x0(%rax)
4d78(4): sub $0x10,%rsp
4d7c(3): mov %r15d,%edi
4d7f(2): fld %st0,%st0
4d81(3): fstp %st0,(%rsp)
4d84(4): fstp %st0,0x30(%rsp)
4d88(5): call 0xfffff9b8(%rip)
4d8d(1): pop %rax
4d8e(1): pop %rdx
4d8f(4): fld 0x20(%rsp),%st0
4d93(5): jmp 0xfffffc16(%rip)
4d98(8): nop 0x0(%rax,%rax,1)
4da0(4): sub $0x10,%rsp
4da4(3): mov %r15d,%edi
4da7(3): fstp %st0,(%rsp)
4daa(5): call 0xfffff996(%rip)
4daf(2): pop %r8
4db1(2): pop %r9
4db3(5): jmp 0xfffffd69(%rip)
4db8(8): nop 0x0(%rax,%rax,1)
4dc0(4): lea 0x2(%rdi),%rdx
4dc4(4): mov $0x69,0x1(%rdi)
4dc8(5): jmp 0xfffffe43(%rip)
4dcd(4): cmp $0x9,%r10
4dd1(6): jnbe 0x297(%rip)
4dd7(4): cmp $0x1,%r15d
4ddb(6): jz 0x2b7(%rip)
4de1(3): test %r15d,%r15d
4de4(3): setz %dl
4de7(2): test %edi,%edi
4de9(4): setnle %r8b
4ded(3): and %r8d,%edx
4df0(2): test %dl,%dl
4df2(6): jz 0x287(%rip)
4df8(4): lea 0x1(%rax),%r9d
4dfc(4): cmp $0xa,%r9d
4e00(6): jz 0x301(%rip)
4e06(4): add $0x30,%r9d
4e0a(4): mov (%rsp),%rax
4e0e(7): lea 0x286(%rax),%r8
4e15(7): mov %r9b,0x286(%rax)
4e1c(2): mov %ebp,%eax
4e1e(3): sub %rbp,%r8
4e21(3): cmp $0x8,%ebp
4e24(6): jnb 0x28d(%rip)
4e2a(4): test $0x4,%bpl
4e2e(6): jnz 0x388(%rip)
4e34(2): test %eax,%eax
4e36(2): jz 0x11(%rip)
4e38(4): movzx (%r14),%edx
4e3c(2): test $0x2,%al
4e3e(3): mov %dl,(%r8)
4e41(6): jnz 0x38f(%rip)
4e47(2): xor %edi,%edi
4e49(3): xor %r9d,%r9d
4e4c(4): nop 0x0(%rax)
4e50(4): cmp $0x1,%r15d
4e54(6): jz 0x17c(%rip)
4e5a(3): test %r15d,%r15d
4e5d(2): jnz 0x23(%rip)
4e5f(3): add %r9d,%edi
4e62(2): test %edi,%edi
4e64(2): jle 0x1c(%rip)
4e66(4): add $0x1,%rsi
4e6a(2): test %ecx,%ecx
4e6c(2): jz 0x14(%rip)
4e6e(4): mov 0x34(%rsp),%eax
4e72(3): cmp %rsi,%rax
4e75(6): jz 0x1cb(%rip)
4e7b(5): nop 0x0(%rax,%rax,1)
4e80(3): mov %r8,%r15
4e83(a): mov $0x-3689348814741910323,%rcx
4e8d(3): nop (%rax)
4e90(3): mov %rsi,%rax
4e93(4): sub $0x1,%r15
4e97(3): mul %rax,%rcx,%rdx
4e9a(4): shr $0x3,%rdx
4e9e(4): lea 0x0(%rdx,%rdx,4),%rax
4ea2(3): add %rax,%rax
4ea5(3): sub %rax,%rsi
4ea8(3): add $0x30,%esi
4eab(3): test %rdx,%rdx
4eae(3): mov %sil,(%r15)
4eb1(3): mov %rdx,%rsi
4eb4(2): jnz 0xffffffdc(%rip)
4eb6(5): jmp 0xfffffcda(%rip)
4ebb(5): nop 0x0(%rax,%rax,1)
4ec0(5): mov 0x10(%rsp),%rcx
4ec5(4): cmp $0x1,%rcx
4ec9(6): jbe 0x1a9(%rip)
4ecf(4): mov 0x34(%rsp),%edx
4ed3(5): mov $0x1,%ebx
4ed8(5): mov $0x1,%eax
4edd(4): imul %rdx,%rax
4ee1(3): cmp %rax,%rcx
4ee4(6): jbe 0xfffffcc5(%rip)
4eea(3): add $0x1,%ebx
4eed(3): cmp $0x8,%ebx
4ef0(2): jnz 0xffffffed(%rip)
4ef2(5): jmp 0xfffffcb7(%rip)
4ef7(9): nop 0x0(%rax,%rax,1)
4f00(4): sub $0x10,%rsp
4f04(7): lea 0x5879(%rip),%rcx
4f0b(7): mov $0xffffffff,%rdx
4f12(2): fld %st0,%st0
4f14(3): fstp %st0,(%rsp)
4f17(5): mov 0x10(%rsp),%r14
4f1c(5): mov $0x1,%esi
4f21(2): xor %eax,%eax
4f23(3): mov %r14,%rdi
4f26(4): fstp %st0,0x30(%rsp)
4f2a(5): call 0xffffd1f6(%rip)
4f2f(3): mov %r14,%rdi
4f32(5): call 0xffffce5e(%rip)
4f37(3): mov %rax,%r14
4f3a(1): pop %rax
4f3b(1): pop %rdx
4f3c(5): cmp 0x18(%rsp),%r14
4f41(4): fld 0x20(%rsp),%st0
4f45(6): jbe 0xfffffaad(%rip)
4f4b(6): fld 0x58a3(%rip),%st0
4f51(2): fmul %st0,%st1
4f53(2): fdivp %st0,%st1
4f55(4): sub $0x10,%rsp
4f59(7): lea 0x581e(%rip),%rcx
4f60(5): mov 0x10(%rsp),%r14
4f65(7): mov $0xffffffff,%rdx
4f6c(5): mov $0x1,%esi
4f71(2): xor %eax,%eax
4f73(2): xor %ebp,%ebp
4f75(3): mov %r14,%rdi
4f78(3): fstp %st0,(%rsp)
4f7b(5): call 0xffffd1a5(%rip)
4f80(3): mov %r14,%rdi
4f83(5): call 0xffffce0d(%rip)
4f88(2): pop %r10
4f8a(3): mov %rax,%r14
4f8d(2): pop %r11
4f8f(5): jmp 0xfffffbe1(%rip)
4f94(4): nop 0x0(%rax)
4f98(6): fld 0x5856(%rip),%st0
4f9e(2): fmul %st0,%st1
4fa0(6): fld 0x585a(%rip),%st0
4fa6(2): fucomip %st2,%st0
4fa8(2): jbe 0xffffffab(%rip)
4faa(4): fstp %st0,0x18(%rsp)
4fae(4): sub $0x10,%rsp
4fb2(3): mov %r15d,%edi
4fb5(3): fstp %st0,(%rsp)
4fb8(5): call 0xfffff788(%rip)
4fbd(1): pop %rbp
4fbe(2): pop %r14
4fc0(4): fld 0x18(%rsp),%st0
4fc4(2): jmp 0xffffff8f(%rip)
4fc6(a): nop 0x0(%rax,%rax,1)
4fd0(3): mov %rsi,%rax
4fd3(3): movsxd %edi,%rdi
4fd6(3): and $0x1,%eax
4fd9(3): add %rdi,%rax
4fdc(3): setnz %al
4fdf(3): movzx %al,%eax
4fe2(3): add %eax,%r9d
4fe5(4): cmp $0x5,%r9d
4fe9(6): jnle 0xfffffe7d(%rip)
4fef(5): jmp 0xfffffe91(%rip)
4ff4(4): nop 0x0(%rax)
4ff8(4): setb %dil
4ffc(4): movzx %dil,%edi
5000(3): add $0x2,%edi
5003(5): jmp 0xfffffa76(%rip)
5008(8): nop 0x0(%rax,%rax,1)
5010(5): mov 0x8(%rsp),%r8
5015(2): xor %ebx,%ebx
5017(5): jmp 0xfffffe39(%rip)
501c(4): nop 0x0(%rax)
5020(5): mov 0x8(%rsp),%rbx
5025(2): test %eax,%eax
5027(4): lea 0x1(%rbx),%rdx
502b(3): mov $0x6b,(%rbx)
502e(6): jnz 0xfffffbdd(%rip)
5034(5): mov %rdx,0x8(%rsp)
5039(5): jmp 0xfffffbde(%rip)
503e(2): nop 
5040(3): cmp $0x8,%ebx
5043(6): jz 0xfffffe3d(%rip)
5049(3): add $0x1,%ebx
504c(4): test $0x8,%r12b
5050(6): jz 0xc2(%rip)
5056(4): lea 0xffffffff(%r8),%r15
505a(5): mov $0x31,0xffffffff(%r8)
505f(5): jmp 0xfffffb31(%rip)
5064(4): nop 0x0(%rax)
5068(5): mov 0x8(%rsp),%r8
506d(5): jmp 0xfffffde3(%rip)
5072(2): xor %ebx,%ebx
5074(5): jmp 0xfffffb35(%rip)
5079(2): test %eax,%eax
507b(6): jnz 0xfffffd8b(%rip)
5081(4): test $0x8,%r12b
5085(2): jnz 0x1f(%rip)
5087(6): mov $0x30,%r9d
508d(5): jmp 0xfffffd7d(%rip)
5092(2): mov %eax,%edx
5094(3): and $0x1,%edx
5097(2): add %edi,%edx
5099(3): cmp $0x2,%edx
509c(3): setnle %dl
509f(5): jmp 0xfffffd51(%rip)
50a4(5): mov 0x8(%rsp),%r8
50a9(3): xor %r9d,%r9d
50ac(5): jmp 0xfffffda4(%rip)
50b1(3): mov (%r14),%rax
50b4(3): mov %r14,%r9
50b7(3): mov %rax,(%r8)
50ba(2): mov %ebp,%eax
50bc(5): mov 0xfffffff8(%r14,%rax,1),%rdx
50c1(5): mov %rdx,0xfffffff8(%r8,%rax,1)
50c6(4): lea 0x8(%r8),%rdx
50ca(3): mov %r8,%rax
50cd(4): and $0xfffffff8,%rdx
50d1(3): sub %rdx,%rax
50d4(3): sub %rax,%r9
50d7(2): add %ebp,%eax
50d9(3): and $0xf8,%eax
50dc(3): cmp $0x8,%eax
50df(6): jb 0xfffffd68(%rip)
50e5(3): and $0xf8,%eax
50e8(2): xor %edi,%edi
50ea(3): mov %edi,%r10d
50ed(3): add $0x8,%edi
50f0(4): mov 0x0(%r9,%r10,1),%r11
50f4(2): cmp %eax,%edi
50f6(4): mov %r11,0x0(%rdx,%r10,1)
50fa(2): jb 0xfffffff0(%rip)
50fc(5): jmp 0xfffffd4b(%rip)
5101(4): lea 0x1(%r10),%rsi
5105(4): cmp $0xa,%rsi
5109(2): jz 0x57(%rip)
510b(2): xor %edi,%edi
510d(5): jmp 0xffffff74(%rip)
5112(3): mov %rbp,%rax
5115(5): mov $0x30,0xffffffff(%r8)
511a(3): not %rax
511d(3): add %rax,%r8
5120(3): cmp $0x8,%ebp
5123(2): mov %ebp,%eax
5125(2): jnb 0x45(%rip)
5127(3): and $0x4,%ebp
512a(6): jnz 0xb7(%rip)
5130(2): test %eax,%eax
5132(6): jz 0xffffff24(%rip)
5138(4): movzx (%r14),%edx
513c(2): test $0x2,%al
513e(3): mov %dl,(%r8)
5141(6): jz 0xffffff15(%rip)
5147(6): movzx 0xfffffffe(%r14,%rax,1),%edx
514d(6): mov %dx,0xfffffffe(%r8,%rax,1)
5153(5): jmp 0xffffff03(%rip)
5158(8): nop 0x0(%rax,%rax,1)
5160(5): mov 0x8(%rsp),%r8
5165(5): jmp 0xfffffce2(%rip)
516a(3): mov (%r14),%rax
516d(4): lea 0x8(%r8),%rcx
5171(4): and $0xfffffff8,%rcx
5175(3): mov %rax,(%r8)
5178(2): mov %ebp,%eax
517a(5): mov 0xfffffff8(%r14,%rax,1),%rdx
517f(5): mov %rdx,0xfffffff8(%r8,%rax,1)
5184(3): mov %r8,%rax
5187(3): sub %rcx,%rax
518a(3): sub %rax,%r14
518d(2): add %ebp,%eax
518f(3): and $0xf8,%eax
5192(3): cmp $0x8,%eax
5195(6): jb 0xfffffec1(%rip)
519b(3): and $0xf8,%eax
519e(2): xor %edx,%edx
51a0(2): mov %edx,%esi
51a2(3): add $0x8,%edx
51a5(4): mov 0x0(%r14,%rsi,1),%rdi
51a9(2): cmp %eax,%edx
51ab(4): mov %rdi,0x0(%rcx,%rsi,1)
51af(2): jb 0xfffffff1(%rip)
51b1(5): jmp 0xfffffea5(%rip)
51b6(3): mov (%r14),%edx
51b9(3): mov %edx,(%r8)
51bc(5): mov 0xfffffffc(%r14,%rax,1),%edx
51c1(5): mov %edx,0xfffffffc(%r8,%rax,1)
51c6(5): jmp 0xfffffc81(%rip)
51cb(5): call 0xffffcbd5(%rip)
51d0(6): movzx 0xfffffffe(%r14,%rax,1),%edx
51d6(6): mov %dx,0xfffffffe(%r8,%rax,1)
51dc(5): jmp 0xfffffc6b(%rip)
51e1(3): mov (%r14),%edx
51e4(3): mov %edx,(%r8)
51e7(5): mov 0xfffffffc(%r14,%rax,1),%edx
51ec(5): mov %edx,0xfffffffc(%r8,%rax,1)
51f1(5): jmp 0xfffffe65(%rip)
51f6(2): test %eax,%eax
51f8(5): mov 0x8(%rsp),%rdx
51fd(6): jnz 0xfffffa0e(%rip)
5203(5): jmp 0xfffffa14(%rip)
5208(4): mov 0x20(%rsp),%ebx
520c(3): mov %rax,%r15
520f(3): mov %r14d,%r12d
5212(5): jmp 0xfffff988(%rip)

"human_options" :
5220(2): push %r13
5222(2): push %r12
5224(3): mov %rsi,%r13
5227(1): push %rbp
5228(1): push %rbx
5229(3): mov %rdx,%r12
522c(3): mov %rdi,%rbx
522f(4): sub $0x18,%rsp
5233(9): mov $0x28,%rax
523c(5): mov %rax,0x8(%rsp)
5241(2): xor %eax,%eax
5243(3): test %rdi,%rdi
5246(6): jz 0x11a(%rip)
524c(2): xor %ebp,%ebp
524e(3): cmp $0x27,(%rbx)
5251(2): jnz 0xb(%rip)
5253(4): add $0x1,%rbx
5257(5): mov $0x4,%ebp
525c(7): lea 0x5575(%rip),%rdx
5263(7): lea 0x208876(%rip),%rsi
526a(5): mov $0x4,%ecx
526f(3): mov %rbx,%rdi
5272(5): call 0xffffee7e(%rip)
5277(2): test %eax,%eax
5279(2): js 0x3f(%rip)
527b(7): lea 0x5556(%rip),%rdx
5282(2): cwde 
5284(8): mov $0x1,(%r12)
528c(3): or 0x0(%rdx,%rax,4),%ebp
528f(2): xor %eax,%eax
5291(4): mov %ebp,0x0(%r13)
5295(5): mov 0x8(%rsp),%rcx
529a(9): xor $0x28,%rcx
52a3(6): jnz 0x15e(%rip)
52a9(4): add $0x18,%rsp
52ad(1): pop %rbx
52ae(1): pop %rbp
52af(2): pop %r12
52b1(2): pop %r13
52b3(1): ret near (%rsp)
52b4(4): nop 0x0(%rax)
52b8(7): lea 0x54f0(%rip),%r8
52bf(2): xor %edx,%edx
52c1(3): mov %rsp,%rsi
52c4(3): mov %r12,%rcx
52c7(3): mov %rbx,%rdi
52ca(5): call 0x37e6(%rip)
52cf(2): test %eax,%eax
52d1(2): jnz 0x47(%rip)
52d3(3): movzx (%rbx),%esi
52d6(3): lea 0xffffffd0(%rsi),%edx
52d9(3): cmp $0x9,%dl
52dc(2): jbe 0x2c(%rip)
52de(4): mov (%rsp),%rcx
52e2(3): cmp %rcx,%rbx
52e5(2): jnz 0x14(%rip)
52e7(5): jmp 0xd9(%rip)
52ec(4): nop 0x0(%rax)
52f0(3): cmp %rcx,%rbx
52f3(6): jz 0xcd(%rip)
52f9(4): add $0x1,%rbx
52fd(3): movzx (%rbx),%edi
5300(3): lea 0xffffffd0(%rdi),%edx
5303(3): cmp $0x9,%dl
5306(2): jnbe 0xffffffea(%rip)
5308(4): mov (%r12),%rdx
530c(4): mov %ebp,0x0(%r13)
5310(2): jmp 0x14(%rip)
5312(6): nop 0x0(%rax,%rax,1)
5318(4): mov (%r12),%rdx
531c(8): mov $0x0,0x0(%r13)
5324(3): test %rdx,%rdx
5327(6): jnz 0xffffff6e(%rip)
532d(7): lea 0x546b(%rip),%rdi
5334(5): call 0xffffc90c(%rip)
5339(4): cmp $0x1,%rax
533d(3): sbb %rax,%rax
5340(5): and $0x200,%eax
5345(6): add $0x200,%rax
534b(4): mov %rax,(%r12)
534f(5): mov $0x4,%eax
5354(5): jmp 0xffffff41(%rip)
5359(7): nop 0x0(%rax)
5360(7): lea 0x5423(%rip),%rdi
5367(5): call 0xffffc8d9(%rip)
536c(3): test %rax,%rax
536f(3): mov %rax,%rbx
5372(6): jnz 0xfffffeda(%rip)
5378(7): lea 0x5416(%rip),%rdi
537f(5): call 0xffffc8c1(%rip)
5384(3): test %rax,%rax
5387(3): mov %rax,%rbx
538a(6): jnz 0xfffffec2(%rip)
5390(7): lea 0x5408(%rip),%rdi
5397(5): call 0xffffc8a9(%rip)
539c(3): test %rax,%rax
539f(2): jz 0x4b(%rip)
53a1(8): mov $0x200,(%r12)
53a9(2): xor %eax,%eax
53ab(8): mov $0x0,0x0(%r13)
53b3(5): jmp 0xfffffee2(%rip)
53b8(8): nop 0x0(%rax,%rax,1)
53c0(4): cmp $0x42,0xffffffff(%rcx)
53c4(2): jz 0x14(%rip)
53c6(4): or $0x80,%bpl
53ca(3): or $0x20,%ebp
53cd(5): jmp 0xffffff3b(%rip)
53d2(6): nop 0x0(%rax,%rax,1)
53d8(6): or $0x180,%ebp
53de(4): cmp $0x69,0xfffffffe(%rcx)
53e2(6): jnz 0xffffff26(%rip)
53e8(2): jmp 0xffffffe2(%rip)
53ea(8): mov $0x400,(%r12)
53f2(2): xor %eax,%eax
53f4(8): mov $0x0,0x0(%r13)
53fc(5): jmp 0xfffffe99(%rip)
5401(5): call 0xffffc99f(%rip)

"umaxtostr" :
5410(4): lea 0x14(%rsi),%rcx
5414(4): mov $0x0,0x14(%rsi)
5418(a): mov $0x-3689348814741910323,%rsi
5422(6): nop 0x0(%rax,%rax,1)
5428(3): mov %rdi,%rax
542b(4): sub $0x1,%rcx
542f(3): mul %rax,%rsi,%rdx
5432(4): shr $0x3,%rdx
5436(4): lea 0x0(%rdx,%rdx,4),%rax
543a(3): add %rax,%rax
543d(3): sub %rax,%rdi
5440(3): add $0x30,%edi
5443(3): test %rdx,%rdx
5446(3): mov %dil,(%rcx)
5449(3): mov %rdx,%rdi
544c(2): jnz 0xffffffdc(%rip)
544e(3): mov %rcx,%rax
5451(1): ret near (%rsp)

"set_program_name" :
5460(3): test %rdi,%rdi
5463(1): push %rbx
5464(2): jz 0x79(%rip)
5466(5): mov $0x2f,%esi
546b(3): mov %rdi,%rbx
546e(5): call 0xffffc9a2(%rip)
5473(3): test %rax,%rax
5476(2): jz 0x57(%rip)
5478(4): lea 0x1(%rax),%r8
547c(3): mov %r8,%rdx
547f(3): sub %rbx,%rdx
5482(4): cmp $0x6,%rdx
5486(2): jle 0x47(%rip)
5488(4): lea 0xfffffffa(%rax),%rsi
548c(7): lea 0x53b5(%rip),%rdi
5493(5): mov $0x7,%ecx
5498(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
549a(3): setnbe %dl
549d(3): sbb $0x0,%dl
54a0(2): test %dl,%dl
54a2(2): jnz 0x2b(%rip)
54a4(7): lea 0x53a5(%rip),%rdi
54ab(5): mov $0x3,%ecx
54b0(3): mov %r8,%rsi
54b3(3): mov %r8,%rbx
54b6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
54b8(3): setnbe %dl
54bb(3): sbb $0x0,%dl
54be(2): test %dl,%dl
54c0(2): jnz 0xd(%rip)
54c2(4): lea 0x4(%rax),%rbx
54c6(7): mov %rbx,0x208bd3(%rip)
54cd(7): mov %rbx,0x208c34(%rip)
54d4(7): mov %rbx,0x208be5(%rip)
54db(1): pop %rbx
54dc(1): ret near (%rsp)
54dd(7): mov 0x208bfc(%rip),%rcx
54e4(7): lea 0x5325(%rip),%rdi
54eb(5): mov $0x37,%edx
54f0(5): mov $0x1,%esi
54f5(5): call 0xffffcbdb(%rip)
54fa(5): call 0xffffc766(%rip)

"gettext_quote.part.1" :
5500(1): push %rbp
5501(1): push %rbx
5502(3): mov %rdi,%rbp
5505(2): mov %esi,%ebx
5507(4): sub $0x8,%rsp
550b(5): call 0x3f75(%rip)
5510(3): movzx (%rax),%edx
5513(3): and $0xdf,%edx
5516(3): cmp $0x55,%dl
5519(2): jz 0x77(%rip)
551b(3): cmp $0x47,%dl
551e(2): jz 0x22(%rip)
5520(7): lea 0x533c(%rip),%rax
5527(7): lea 0x5337(%rip),%rdx
552e(3): cmp $0x9,%ebx
5531(4): cmovne %rdx,%rax
5535(4): add $0x8,%rsp
5539(1): pop %rbx
553a(1): pop %rbp
553b(1): ret near (%rsp)
553c(4): nop 0x0(%rax)
5540(4): movzx 0x1(%rax),%edx
5544(3): and $0xdf,%edx
5547(3): cmp $0x42,%dl
554a(2): jnz 0xffffffd6(%rip)
554c(4): cmp $0x31,0x2(%rax)
5550(2): jnz 0xffffffd0(%rip)
5552(4): cmp $0x38,0x3(%rax)
5556(2): jnz 0xffffffca(%rip)
5558(4): cmp $0x30,0x4(%rax)
555c(2): jnz 0xffffffc4(%rip)
555e(4): cmp $0x33,0x5(%rax)
5562(2): jnz 0xffffffbe(%rip)
5564(4): cmp $0x30,0x6(%rax)
5568(2): jnz 0xffffffb8(%rip)
556a(4): cmp $0x0,0x7(%rax)
556e(2): jnz 0xffffffb2(%rip)
5570(4): cmp $0x60,0x0(%rbp)
5574(7): lea 0x52e1(%rip),%rax
557b(7): lea 0x52de(%rip),%rdx
5582(4): cmovne %rdx,%rax
5586(4): add $0x8,%rsp
558a(1): pop %rbx
558b(1): pop %rbp
558c(1): ret near (%rsp)
558d(3): nop (%rax)
5590(4): movzx 0x1(%rax),%edx
5594(3): and $0xdf,%edx
5597(3): cmp $0x54,%dl
559a(2): jnz 0xffffff86(%rip)
559c(4): movzx 0x2(%rax),%edx
55a0(3): and $0xdf,%edx
55a3(3): cmp $0x46,%dl
55a6(6): jnz 0xffffff7a(%rip)
55ac(4): cmp $0x2d,0x3(%rax)
55b0(6): jnz 0xffffff70(%rip)
55b6(4): cmp $0x38,0x4(%rax)
55ba(6): jnz 0xffffff66(%rip)
55c0(4): cmp $0x0,0x5(%rax)
55c4(6): jnz 0xffffff5c(%rip)
55ca(4): cmp $0x60,0x0(%rbp)
55ce(7): lea 0x527f(%rip),%rax
55d5(7): lea 0x527c(%rip),%rdx
55dc(4): cmovne %rdx,%rax
55e0(4): add $0x8,%rsp
55e4(1): pop %rbx
55e5(1): pop %rbp
55e6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
55f0(2): push %r15
55f2(2): push %r14
55f4(3): mov %r8d,%r15d
55f7(2): push %r13
55f9(2): push %r12
55fb(3): mov %rdi,%r14
55fe(1): push %rbp
55ff(1): push %rbx
5600(3): mov %r9d,%ebx
5603(3): mov %rsi,%r13
5606(3): mov %rcx,%rbp
5609(3): and $0x2,%ebx
560c(7): sub $0xb8,%rsp
5613(8): mov 0xf0(%rsp),%rax
561b(5): mov %rdx,0x10(%rsp)
5620(5): mov %r8d,0x8(%rsp)
5625(5): mov %r9d,0x78(%rsp)
562a(5): mov %rax,0x20(%rsp)
562f(8): mov 0xf8(%rsp),%rax
5637(5): mov %rax,0x68(%rsp)
563c(8): mov 0x100(%rsp),%rax
5644(5): mov %rax,0x60(%rsp)
5649(9): mov $0x28,%rax
5652(8): mov %rax,0xa8(%rsp)
565a(2): xor %eax,%eax
565c(5): call 0xffffc724(%rip)
5661(4): cmp $0xa,%r15d
5665(5): mov %rax,0x58(%rsp)
566a(6): jnbe 0x11b5(%rip)
5670(7): lea 0x5249(%rip),%rcx
5677(3): mov %r15d,%edx
567a(4): movsxd 0x0(%rcx,%rdx,4),%rax
567e(3): add %rcx,%rax
5681(2): jmp %rax
5683(5): mov $0x1,0xe(%rsp)
5688(5): mov $0x0,0x7c(%rsp)
568d(3): xor %r12d,%r12d
5690(9): mov $0x0,0x50(%rsp)
5699(5): mov $0x1,0xf(%rsp)
569e(5): mov $0x0,0xd(%rsp)
56a3(7): lea 0x51bb(%rip),%rax
56aa(9): mov $0x1,0x18(%rsp)
56b3(3): xor %r15d,%r15d
56b6(8): mov $0x2,0x8(%rsp)
56be(5): mov %rax,0x48(%rsp)
56c3(3): xor %r11d,%r11d
56c6(3): mov %rbp,%rax
56c9(3): mov %r12d,%r8d
56cc(3): mov %r11,%rbp
56cf(3): mov %rax,%r11
56d2(6): nop 0x0(%rax,%rax,1)
56d8(3): cmp %rbp,%r11
56db(4): setnz %r12b
56df(4): cmp $0xffffffff,%r11
56e3(2): jnz 0xf(%rip)
56e5(5): mov 0x10(%rsp),%rax
56ea(4): cmp $0x0,0x0(%rax,%rbp,1)
56ee(4): setnz %r12b
56f2(3): test %r12b,%r12b
56f5(6): jz 0x65b(%rip)
56fb(5): cmp $0x2,0x8(%rsp)
5700(5): mov 0x10(%rsp),%rdi
5705(4): lea 0x0(%rdi,%rbp,1),%r9
5709(3): setnz %al
570c(4): and 0xd(%rsp),%al
5710(3): mov %eax,%r10d
5713(6): jz 0xad(%rip)
5719(5): mov 0x18(%rsp),%rax
571e(3): test %rax,%rax
5721(6): jz 0x42f(%rip)
5727(4): cmp $0xffffffff,%r11
572b(5): lea 0x0(%rbp,%rax,1),%rbx
5730(2): jnz 0x30(%rip)
5732(4): cmp $0x1,%rax
5736(2): jbe 0x2a(%rip)
5738(5): mov %r8b,0x38(%rsp)
573d(5): mov %r10b,0x30(%rsp)
5742(5): mov %r9,0x28(%rsp)
5747(5): call 0xffffc649(%rip)
574c(6): movzx 0x38(%rsp),%r8d
5752(6): movzx 0x30(%rsp),%r10d
5758(3): mov %rax,%r11
575b(5): mov 0x28(%rsp),%r9
5760(3): cmp %r11,%rbx
5763(5): mov %r10b,0x28(%rsp)
5768(6): jnbe 0x5b8(%rip)
576e(5): mov 0x18(%rsp),%rdx
5773(5): mov 0x48(%rsp),%rsi
5778(3): mov %r9,%rdi
577b(5): mov %r11,0x40(%rsp)
5780(5): mov %r8b,0x38(%rsp)
5785(5): mov %r9,0x30(%rsp)
578a(5): call 0xffffc716(%rip)
578f(2): test %eax,%eax
5791(5): mov 0x30(%rsp),%r9
5796(6): movzx 0x38(%rsp),%r8d
579c(5): mov 0x40(%rsp),%r11
57a1(6): jnz 0x57f(%rip)
57a7(5): cmp $0x0,0xf(%rsp)
57ac(6): movzx 0x28(%rsp),%r10d
57b2(6): jnz 0xf83(%rip)
57b8(8): nop 0x0(%rax,%rax,1)
57c0(4): movzx (%r9),%ebx
57c4(3): cmp $0x7e,%bl
57c7(6): jnbe 0x321(%rip)
57cd(7): lea 0x5118(%rip),%rcx
57d4(3): movzx %bl,%edx
57d7(4): movsxd 0x0(%rcx,%rdx,4),%rax
57db(3): add %rcx,%rax
57de(2): jmp %rax
57e0(3): xor %r10d,%r10d
57e3(4): cmp $0x1,%r11
57e7(3): setnz %al
57ea(4): cmp $0xffffffff,%r11
57ee(2): jnz 0xe(%rip)
57f0(5): mov 0x10(%rsp),%rax
57f5(4): cmp $0x0,0x1(%rax)
57f9(3): setnz %al
57fc(5): cmp $0x2,0x8(%rsp)
5801(3): setz %dl
5804(2): test %al,%al
5806(6): jz 0x252(%rip)
580c(3): xor %r12d,%r12d
580f(2): xor %eax,%eax
5811(7): nop 0x0(%rax)
5818(5): cmp $0x1,0xd(%rsp)
581d(6): jnz 0x115(%rip)
5823(2): test %dl,%dl
5825(6): jnz 0x10d(%rip)
582b(5): mov 0x20(%rsp),%rsi
5830(3): test %rsi,%rsi
5833(2): jz 0x16(%rip)
5835(2): mov %ebx,%edx
5837(3): shr $0x5,%dl
583a(3): movzx %dl,%edx
583d(3): mov 0x0(%rsi,%rdx,4),%edx
5840(3): bt %ebx,%edx
5843(6): jb 0x150(%rip)
5849(3): test %r10b,%r10b
584c(6): jnz 0x147(%rip)
5852(3): xor $0x1,%eax
5855(4): add $0x1,%rbp
5859(3): and %r8d,%eax
585c(2): test %al,%al
585e(2): jz 0x22(%rip)
5860(3): cmp %r15,%r13
5863(2): jbe 0x7(%rip)
5865(5): mov $0x27,0x0(%r14,%r15,1)
586a(4): lea 0x1(%r15),%rax
586e(3): cmp %rax,%r13
5871(2): jbe 0x8(%rip)
5873(6): mov $0x27,0x1(%r14,%r15,1)
5879(4): add $0x2,%r15
587d(3): xor %r8d,%r8d
5880(3): cmp %r13,%r15
5883(2): jnb 0x6(%rip)
5885(4): mov %bl,0x0(%r14,%r15,1)
5889(5): movzx 0xe(%rsp),%edi
588e(4): add $0x1,%r15
5892(5): mov $0x0,%eax
5897(3): test %r12b,%r12b
589a(3): cmove %eax,%edi
589d(5): mov %dil,0xe(%rsp)
58a2(5): jmp 0xfffffe36(%rip)
58a7(9): nop 0x0(%rax,%rax,1)
58b0(3): xor %r10d,%r10d
58b3(4): mov 0x8(%rsp),%eax
58b7(3): cmp $0x2,%eax
58ba(6): jz 0x5be(%rip)
58c0(3): cmp $0x5,%eax
58c3(6): jz 0x575(%rip)
58c9(3): cmp $0x2,%eax
58cc(5): mov $0x3f,%ebx
58d1(3): setz %dl
58d4(3): xor %r12d,%r12d
58d7(2): xor %eax,%eax
58d9(5): jmp 0xffffff3f(%rip)
58de(2): nop 
58e0(3): xor %r10d,%r10d
58e3(5): cmp $0x2,0x8(%rsp)
58e8(6): jz 0x508(%rip)
58ee(5): mov %r12b,0x7c(%rsp)
58f3(2): xor %edx,%edx
58f5(2): xor %eax,%eax
58f7(5): mov $0x27,%ebx
58fc(5): jmp 0xffffff1c(%rip)
5901(7): nop 0x0(%rax)
5908(5): mov $0x9,%edx
590d(5): mov $0x74,%ebx
5912(5): cmp $0x2,0x8(%rsp)
5917(3): setz %al
591a(4): and 0xf(%rsp),%al
591e(6): jnz 0x150(%rip)
5924(5): cmp $0x0,0xd(%rsp)
5929(2): jnz 0x67(%rip)
592b(2): mov %edx,%ebx
592d(3): xor %r12d,%r12d
5930(2): xor %eax,%eax
5932(5): cmp $0x0,0xf(%rsp)
5937(6): jnz 0xfffffef4(%rip)
593d(5): jmp 0xffffff0c(%rip)
5942(6): nop 0x0(%rax,%rax,1)
5948(5): mov $0x8,%edx
594d(5): mov $0x62,%ebx
5952(2): jmp 0xffffffd2(%rip)
5954(4): nop 0x0(%rax)
5958(5): cmp $0x2,0x8(%rsp)
595d(6): jz 0x3d3(%rip)
5963(5): cmp $0x0,0xd(%rsp)
5968(6): jz 0x218(%rip)
596e(5): cmp $0x0,0xf(%rsp)
5973(6): jz 0x20d(%rip)
5979(6): cmp $0x0,0x18(%rsp)
597f(6): jnz 0x3bc(%rip)
5985(5): mov $0x5c,%ebx
598a(6): nop 0x0(%rax,%rax,1)
5990(3): xor %r12d,%r12d
5993(5): cmp $0x2,0x8(%rsp)
5998(3): setz %dl
599b(5): cmp $0x0,0xf(%rsp)
59a0(2): mov %edx,%eax
59a2(6): jnz 0x856(%rip)
59a8(3): mov %r8d,%eax
59ab(3): xor $0x1,%eax
59ae(2): and %dl,%al
59b0(2): jz 0x31(%rip)
59b2(3): cmp %r15,%r13
59b5(2): jbe 0x7(%rip)
59b7(5): mov $0x27,0x0(%r14,%r15,1)
59bc(4): lea 0x1(%r15),%rdx
59c0(3): cmp %rdx,%r13
59c3(2): jbe 0x8(%rip)
59c5(6): mov $0x24,0x1(%r14,%r15,1)
59cb(4): lea 0x2(%r15),%rdx
59cf(3): cmp %rdx,%r13
59d2(2): jbe 0x8(%rip)
59d4(6): mov $0x27,0x2(%r14,%r15,1)
59da(4): add $0x3,%r15
59de(3): mov %eax,%r8d
59e1(3): cmp %r15,%r13
59e4(2): jbe 0x7(%rip)
59e6(5): mov $0x5c,0x0(%r14,%r15,1)
59eb(4): add $0x1,%r15
59ef(4): add $0x1,%rbp
59f3(5): jmp 0xfffffe8d(%rip)
59f8(8): nop 0x0(%rax,%rax,1)
5a00(5): cmp $0x0,0xd(%rsp)
5a05(6): jnz 0x1ce(%rip)
5a0b(2): xor %edx,%edx
5a0d(5): test $0x1,0x78(%rsp)
5a12(6): jz 0xffffff19(%rip)
5a18(4): add $0x1,%rbp
5a1c(5): jmp 0xfffffcbc(%rip)
5a21(7): nop 0x0(%rax)
5a28(5): cmp $0x2,0x8(%rsp)
5a2d(3): setz %dl
5a30(2): xor %eax,%eax
5a32(5): jmp 0xfffffde6(%rip)
5a37(9): nop 0x0(%rax,%rax,1)
5a40(5): mov $0x7,%edx
5a45(5): mov $0x61,%ebx
5a4a(5): jmp 0xfffffeda(%rip)
5a4f(1): nop 
5a50(5): cmp $0x2,0x8(%rsp)
5a55(3): setz %dl
5a58(3): test %rbp,%rbp
5a5b(6): jnz 0xfffffdb1(%rip)
5a61(5): movzx 0xf(%rsp),%eax
5a66(2): and %dl,%al
5a68(6): jz 0xfffffdb0(%rip)
5a6e(3): mov %r11,%rbp
5a71(8): mov $0x2,0x8(%rsp)
5a79(5): jmp 0x700(%rip)
5a7e(2): nop 
5a80(5): cmp $0x2,0x8(%rsp)
5a85(3): setz %dl
5a88(3): xor %r12d,%r12d
5a8b(2): jmp 0xffffffd6(%rip)
5a8d(3): nop (%rax)
5a90(5): cmp $0x2,0x8(%rsp)
5a95(5): mov $0x20,%ebx
5a9a(3): setz %dl
5a9d(2): jmp 0xffffffc4(%rip)
5a9f(1): nop 
5aa0(5): mov $0xd,%edx
5aa5(5): mov $0x72,%ebx
5aaa(5): jmp 0xfffffe68(%rip)
5aaf(1): nop 
5ab0(5): mov $0xc,%edx
5ab5(5): mov $0x66,%ebx
5aba(5): jmp 0xfffffe6a(%rip)
5abf(1): nop 
5ac0(5): mov $0xb,%edx
5ac5(5): mov $0x76,%ebx
5aca(5): jmp 0xfffffe5a(%rip)
5acf(1): nop 
5ad0(5): mov $0xa,%edx
5ad5(5): mov $0x6e,%ebx
5ada(5): jmp 0xfffffe38(%rip)
5adf(1): nop 
5ae0(3): xor %r10d,%r10d
5ae3(5): nop 0x0(%rax,%rax,1)
5ae8(6): cmp $0x1,0x58(%rsp)
5aee(6): jnz 0x3aa(%rip)
5af4(5): mov %r11,0x38(%rsp)
5af9(5): mov %r8b,0x30(%rsp)
5afe(5): mov %r10b,0x28(%rsp)
5b03(5): call 0xffffc60d(%rip)
5b08(3): mov (%rax),%rcx
5b0b(3): movzx %bl,%edx
5b0e(6): movzx 0x28(%rsp),%r10d
5b14(6): movzx 0x30(%rsp),%r8d
5b1a(5): mov 0x38(%rsp),%r11
5b1f(5): mov $0x1,%edi
5b24(4): movzx 0x0(%rcx,%rdx,2),%eax
5b28(4): and $0x4000,%ax
5b2c(4): setnz %r12b
5b30(3): setz %al
5b33(4): and 0xd(%rsp),%al
5b37(2): test %al,%al
5b39(6): jnz 0x998(%rip)
5b3f(5): cmp $0x2,0x8(%rsp)
5b44(3): setz %dl
5b47(5): jmp 0xfffffcd1(%rip)
5b4c(4): nop 0x0(%rax)
5b50(4): movzx (%r9),%ebx
5b54(3): cmp $0x7e,%bl
5b57(2): jnbe 0xffffff89(%rip)
5b59(7): lea 0x4f88(%rip),%rcx
5b60(3): movzx %bl,%edx
5b63(4): movsxd 0x0(%rcx,%rdx,4),%rax
5b67(3): add %rcx,%rax
5b6a(2): jmp %rax
5b6c(4): nop 0x0(%rax)
5b70(3): xor %r10d,%r10d
5b73(5): cmp $0x0,0xd(%rsp)
5b78(6): jnz 0xfffffdf6(%rip)
5b7e(2): nop 
5b80(5): mov $0x5c,%edx
5b85(5): mov $0x5c,%ebx
5b8a(5): jmp 0xfffffd9a(%rip)
5b8f(1): nop 
5b90(5): mov $0xc,%edx
5b95(3): xor %r10d,%r10d
5b98(5): mov $0x66,%ebx
5b9d(5): jmp 0xfffffd87(%rip)
5ba2(6): nop 0x0(%rax,%rax,1)
5ba8(5): mov $0xa,%edx
5bad(3): xor %r10d,%r10d
5bb0(5): mov $0x6e,%ebx
5bb5(5): jmp 0xfffffd5d(%rip)
5bba(6): nop 0x0(%rax,%rax,1)
5bc0(5): mov $0x61,%ebx
5bc5(5): jmp 0xfffffdcb(%rip)
5bca(6): nop 0x0(%rax,%rax,1)
5bd0(3): xor %r10d,%r10d
5bd3(5): cmp $0x2,0x8(%rsp)
5bd8(3): setz %dl
5bdb(5): cmp $0x0,0xf(%rsp)
5be0(6): jnz 0xb9a(%rip)
5be6(3): mov %r8d,%eax
5be9(3): mov %r15,%rcx
5bec(3): xor $0x1,%eax
5bef(2): and %dl,%al
5bf1(2): jz 0x2f(%rip)
5bf3(3): cmp %r15,%r13
5bf6(2): jbe 0x7(%rip)
5bf8(5): mov $0x27,0x0(%r14,%r15,1)
5bfd(4): lea 0x1(%r15),%rcx
5c01(3): cmp %rcx,%r13
5c04(2): jbe 0x8(%rip)
5c06(6): mov $0x24,0x1(%r14,%r15,1)
5c0c(4): lea 0x2(%r15),%rcx
5c10(3): cmp %rcx,%r13
5c13(6): jnbe 0x636(%rip)
5c19(4): lea 0x3(%r15),%rcx
5c1d(3): mov %eax,%r8d
5c20(3): cmp %rcx,%r13
5c23(2): jbe 0x7(%rip)
5c25(5): mov $0x5c,0x0(%r14,%rcx,1)
5c2a(5): cmp $0x2,0x8(%rsp)
5c2f(4): lea 0x1(%rcx),%r15
5c33(6): jz 0x606(%rip)
5c39(4): lea 0x1(%rbp),%rax
5c3d(3): cmp %r11,%rax
5c40(2): jnb 0x1b(%rip)
5c42(5): mov 0x10(%rsp),%rax
5c47(5): movzx 0x1(%rax,%rbp,1),%eax
5c4c(4): mov %al,0x28(%rsp)
5c50(3): sub $0x30,%eax
5c53(2): cmp $0x9,%al
5c55(6): jbe 0x834(%rip)
5c5b(3): mov %r12d,%eax
5c5e(5): mov $0x30,%ebx
5c63(3): xor %r12d,%r12d
5c66(5): jmp 0xfffffbb2(%rip)
5c6b(5): nop 0x0(%rax,%rax,1)
5c70(5): cmp $0x2,0x8(%rsp)
5c75(3): mov %r10d,%r12d
5c78(3): setz %dl
5c7b(3): xor %r10d,%r10d
5c7e(2): xor %eax,%eax
5c80(5): jmp 0xfffffb98(%rip)
5c85(3): nop (%rax)
5c88(5): cmp $0x2,0x8(%rsp)
5c8d(3): setz %dl
5c90(3): xor %r10d,%r10d
5c93(5): jmp 0xfffffdc5(%rip)
5c98(8): nop 0x0(%rax,%rax,1)
5ca0(5): cmp $0x2,0x8(%rsp)
5ca5(3): setz %dl
5ca8(3): xor %r10d,%r10d
5cab(3): xor %r12d,%r12d
5cae(5): jmp 0xfffffdb3(%rip)
5cb3(5): nop 0x0(%rax,%rax,1)
5cb8(5): cmp $0x2,0x8(%rsp)
5cbd(3): mov %r10d,%r12d
5cc0(5): mov $0x20,%ebx
5cc5(3): setz %dl
5cc8(3): xor %r10d,%r10d
5ccb(5): jmp 0xfffffd96(%rip)
5cd0(5): mov $0xd,%edx
5cd5(3): xor %r10d,%r10d
5cd8(5): mov $0x72,%ebx
5cdd(5): jmp 0xfffffc35(%rip)
5ce2(6): nop 0x0(%rax,%rax,1)
5ce8(5): mov $0x76,%ebx
5ced(5): jmp 0xfffffca3(%rip)
5cf2(6): nop 0x0(%rax,%rax,1)
5cf8(5): mov $0x9,%edx
5cfd(3): xor %r10d,%r10d
5d00(5): mov $0x74,%ebx
5d05(5): jmp 0xfffffc0d(%rip)
5d0a(6): nop 0x0(%rax,%rax,1)
5d10(5): mov $0x62,%ebx
5d15(5): jmp 0xfffffc7b(%rip)
5d1a(6): nop 0x0(%rax,%rax,1)
5d20(3): xor %r10d,%r10d
5d23(5): jmp 0xfffffa9d(%rip)
5d28(8): nop 0x0(%rax,%rax,1)
5d30(5): cmp $0x0,0xf(%rsp)
5d35(6): jnz 0x96b(%rip)
5d3b(4): add $0x1,%rbp
5d3f(3): mov %r8d,%eax
5d42(3): xor %r12d,%r12d
5d45(5): mov $0x5c,%ebx
5d4a(5): jmp 0xfffffb12(%rip)
5d4f(1): nop 
5d50(5): cmp $0x2,0x8(%rsp)
5d55(5): movzx 0xf(%rsp),%ebx
5d5a(3): mov %r8d,%r12d
5d5d(3): mov %r11,%rbp
5d60(3): setz %dl
5d63(2): mov %ebx,%eax
5d65(3): test %r15,%r15
5d68(3): setz %cl
5d6b(2): and %edx,%eax
5d6d(2): and %cl,%al
5d6f(6): jnz 0xa67(%rip)
5d75(2): mov %ebx,%eax
5d77(3): xor $0x1,%eax
5d7a(2): and %al,%dl
5d7c(6): jz 0x970(%rip)
5d82(5): cmp $0x0,0x7c(%rsp)
5d87(6): jz 0x963(%rip)
5d8d(5): cmp $0x0,0xe(%rsp)
5d92(6): jnz 0x9fb(%rip)
5d98(3): test %r13,%r13
5d9b(3): setz %al
5d9e(6): cmp $0x0,0x50(%rsp)
5da4(3): setnz %dl
5da7(2): and %dl,%al
5da9(6): jz 0xa23(%rip)
5daf(5): mov 0x50(%rsp),%r13
5db4(7): lea 0x4aaa(%rip),%rbx
5dbb(4): mov $0x27,(%r14)
5dbf(8): mov $0x2,0x8(%rsp)
5dc7(6): mov $0x1,%r15d
5dcd(9): mov $0x1,0x18(%rsp)
5dd6(5): mov $0x0,0xf(%rsp)
5ddb(5): mov %rbx,0x48(%rsp)
5de0(4): mov %al,0x7c(%rsp)
5de4(5): jmp 0xfffff8df(%rip)
5de9(7): nop 0x0(%rax)
5df0(5): cmp $0x0,0xf(%rsp)
5df5(6): jnz 0x8ab(%rip)
5dfb(3): test %r13,%r13
5dfe(6): jz 0x402(%rip)
5e04(2): xor %edx,%edx
5e06(6): cmp $0x0,0x50(%rsp)
5e0c(6): jnz 0x3f4(%rip)
5e12(5): mov %r13,0x50(%rsp)
5e17(4): add $0x3,%r15
5e1b(2): xor %eax,%eax
5e1d(5): mov %r12b,0x7c(%rsp)
5e22(3): xor %r8d,%r8d
5e25(3): mov %rdx,%r13
5e28(5): mov $0x27,%ebx
5e2d(5): jmp 0xfffffa1c(%rip)
5e32(6): nop 0x0(%rax,%rax,1)
5e38(5): test $0x4,0x78(%rsp)
5e3d(2): jz 0x23(%rip)
5e3f(4): lea 0x2(%rbp),%rcx
5e43(3): cmp %r11,%rcx
5e46(2): jnb 0x1a(%rip)
5e48(5): mov 0x10(%rsp),%rax
5e4d(5): cmp $0x3f,0x1(%rax,%rbp,1)
5e52(6): jz 0x790(%rip)
5e58(8): nop 0x0(%rax,%rax,1)
5e60(2): xor %edx,%edx
5e62(3): xor %r12d,%r12d
5e65(2): xor %eax,%eax
5e67(5): mov $0x3f,%ebx
5e6c(5): jmp 0xfffff9ac(%rip)
5e71(7): nop 0x0(%rax)
5e78(5): cmp $0x0,0xf(%rsp)
5e7d(6): jnz 0x823(%rip)
5e83(3): xor %r12d,%r12d
5e86(2): xor %eax,%eax
5e88(5): mov $0x3f,%ebx
5e8d(5): jmp 0xfffff9bc(%rip)
5e92(6): nop 0x0(%rax,%rax,1)
5e98(8): lea 0xa0(%rsp),%rax
5ea0(4): cmp $0xffffffff,%r11
5ea4(c): mov $0x0,0xa0(%rsp)
5eb0(5): mov %rax,0x28(%rsp)
5eb5(2): jnz 0x2f(%rip)
5eb7(5): mov 0x10(%rsp),%rdi
5ebc(5): mov %r8b,0x40(%rsp)
5ec1(5): mov %r10b,0x38(%rsp)
5ec6(5): mov %r9,0x30(%rsp)
5ecb(5): call 0xffffbec5(%rip)
5ed0(6): movzx 0x40(%rsp),%r8d
5ed6(6): movzx 0x38(%rsp),%r10d
5edc(3): mov %rax,%r11
5edf(5): mov 0x30(%rsp),%r9
5ee4(8): lea 0x9c(%rsp),%rax
5eec(2): xor %ecx,%ecx
5eee(4): mov %bl,0x7e(%rsp)
5ef2(5): mov %r8b,0x7d(%rsp)
5ef7(3): mov %rcx,%rbx
5efa(8): mov %r9,0x88(%rsp)
5f02(5): mov %rax,0x38(%rsp)
5f07(5): mov %r10b,0x7f(%rsp)
5f0c(8): mov %r15,0x80(%rsp)
5f14(5): mov %r14,0x40(%rsp)
5f19(5): mov %r13,0x70(%rsp)
5f1e(5): mov %r11,0x30(%rsp)
5f23(5): mov 0x10(%rsp),%rax
5f28(5): lea 0x0(%rbp,%rbx,1),%r14
5f2d(5): mov 0x30(%rsp),%rdx
5f32(5): mov 0x28(%rsp),%rcx
5f37(5): mov 0x38(%rsp),%rdi
5f3c(4): lea 0x0(%rax,%r14,1),%r13
5f40(3): sub %r14,%rdx
5f43(3): mov %r13,%rsi
5f46(5): call 0x332a(%rip)
5f4b(3): test %rax,%rax
5f4e(3): mov %rax,%r15
5f51(2): jz 0x50(%rip)
5f53(4): cmp $0xffffffff,%rax
5f57(6): jz 0x61e(%rip)
5f5d(4): cmp $0xfffffffe,%rax
5f61(6): jz 0x5a0(%rip)
5f67(5): cmp $0x2,0x8(%rsp)
5f6c(3): setz %al
5f6f(4): and 0xf(%rsp),%al
5f73(6): jnz 0x19d(%rip)
5f79(7): mov 0x9c(%rsp),%edi
5f80(5): call 0xffffc180(%rip)
5f85(5): mov 0x28(%rsp),%rdi
5f8a(2): test %eax,%eax
5f8c(5): mov $0x0,%eax
5f91(4): cmove %eax,%r12d
5f95(3): add %r15,%rbx
5f98(5): call 0xffffc158(%rip)
5f9d(2): test %eax,%eax
5f9f(2): jz 0xffffff84(%rip)
5fa1(3): mov %r12d,%edx
5fa4(3): mov %rbx,%rdi
5fa7(6): movzx 0x7d(%rsp),%r8d
5fad(3): xor $0x1,%edx
5fb0(5): movzx 0x7e(%rsp),%ebx
5fb5(6): movzx 0x7f(%rsp),%r10d
5fbb(4): and 0xd(%rsp),%dl
5fbf(8): mov 0x80(%rsp),%r15
5fc7(5): mov 0x40(%rsp),%r14
5fcc(5): mov 0x70(%rsp),%r13
5fd1(5): mov 0x30(%rsp),%r11
5fd6(4): cmp $0x1,%rdi
5fda(6): jbe 0x601(%rip)
5fe0(3): mov %rdi,%rcx
5fe3(2): xor %esi,%esi
5fe5(6): movzx 0xf(%rsp),%r9d
5feb(3): add %rbp,%rcx
5fee(5): mov 0x10(%rsp),%rdi
5ff3(5): jmp 0xbb(%rip)
5ff8(8): nop 0x0(%rax,%rax,1)
6000(5): cmp $0x2,0x8(%rsp)
6005(3): setz %al
6008(3): test %r9b,%r9b
600b(6): jnz 0x4b5(%rip)
6011(3): mov %r8d,%esi
6014(3): xor $0x1,%esi
6017(3): and %sil,%al
601a(2): jz 0x31(%rip)
601c(3): cmp %r15,%r13
601f(2): jbe 0x7(%rip)
6021(5): mov $0x27,0x0(%r14,%r15,1)
6026(4): lea 0x1(%r15),%rsi
602a(3): cmp %rsi,%r13
602d(2): jbe 0x8(%rip)
602f(6): mov $0x24,0x1(%r14,%r15,1)
6035(4): lea 0x2(%r15),%rsi
6039(3): cmp %rsi,%r13
603c(2): jbe 0x8(%rip)
603e(6): mov $0x27,0x2(%r14,%r15,1)
6044(4): add $0x3,%r15
6048(3): mov %eax,%r8d
604b(3): cmp %r15,%r13
604e(2): jbe 0x7(%rip)
6050(5): mov $0x5c,0x0(%r14,%r15,1)
6055(4): lea 0x1(%r15),%rax
6059(3): cmp %rax,%r13
605c(2): jbe 0xf(%rip)
605e(2): mov %ebx,%eax
6060(3): shr $0x6,%al
6063(3): add $0x30,%eax
6066(5): mov %al,0x1(%r14,%r15,1)
606b(4): lea 0x2(%r15),%rax
606f(3): cmp %rax,%r13
6072(2): jbe 0x12(%rip)
6074(2): mov %ebx,%eax
6076(3): shr $0x3,%al
6079(3): and $0x7,%eax
607c(3): add $0x30,%eax
607f(5): mov %al,0x2(%r14,%r15,1)
6084(3): and $0x7,%ebx
6087(4): add $0x1,%rbp
608b(4): add $0x3,%r15
608f(3): add $0x30,%ebx
6092(3): cmp %rcx,%rbp
6095(6): jnb 0xfffff7eb(%rip)
609b(2): mov %edx,%esi
609d(3): cmp %r15,%r13
60a0(2): jbe 0x6(%rip)
60a2(4): mov %bl,0x0(%r14,%r15,1)
60a6(4): movzx 0x0(%rdi,%rbp,1),%ebx
60aa(4): add $0x1,%r15
60ae(2): test %dl,%dl
60b0(6): jnz 0xffffff50(%rip)
60b6(2): mov %esi,%eax
60b8(3): xor $0x1,%eax
60bb(3): and %r8d,%eax
60be(3): test %r10b,%r10b
60c1(2): jz 0x10(%rip)
60c3(3): cmp %r15,%r13
60c6(2): jbe 0x7(%rip)
60c8(5): mov $0x5c,0x0(%r14,%r15,1)
60cd(4): add $0x1,%r15
60d1(4): add $0x1,%rbp
60d5(3): cmp %rcx,%rbp
60d8(6): jnb 0xfffff784(%rip)
60de(2): test %al,%al
60e0(6): jz 0x3fe(%rip)
60e6(3): cmp %r15,%r13
60e9(2): jbe 0x7(%rip)
60eb(5): mov $0x27,0x0(%r14,%r15,1)
60f0(4): lea 0x1(%r15),%rax
60f4(3): cmp %rax,%r13
60f7(2): jbe 0x8(%rip)
60f9(6): mov $0x27,0x1(%r14,%r15,1)
60ff(4): add $0x2,%r15
6103(3): xor %r10d,%r10d
6106(3): xor %r8d,%r8d
6109(2): jmp 0xffffff94(%rip)
610b(5): nop 0x0(%rax,%rax,1)
6110(4): cmp $0x1,%r15
6114(6): jz 0xfffffe65(%rip)
611a(5): mov 0x10(%rsp),%rdi
611f(4): lea 0x0(%rdi,%r15,1),%rcx
6123(5): lea 0x1(%rdi,%r14,1),%rdx
6128(4): lea 0x0(%rcx,%r14,1),%r8
612c(2): jmp 0x11(%rip)
612e(2): nop 
6130(4): add $0x1,%rdx
6134(3): cmp %rdx,%r8
6137(6): jz 0xfffffe42(%rip)
613d(3): movzx (%rdx),%ecx
6140(3): sub $0x5b,%ecx
6143(3): cmp $0x21,%cl
6146(2): jnbe 0xffffffea(%rip)
6148(5): mov $0x1,%esi
614d(3): shl/sal %cl,%rsi
6150(3): mov %rsi,%rcx
6153(a): mov $0x8589934635,%rsi
615d(3): test %rsi,%rcx
6160(2): jz 0xffffffd0(%rip)
6162(5): mov 0x40(%rsp),%r14
6167(5): mov 0x70(%rsp),%r13
616c(5): mov 0x30(%rsp),%rbp
6171(8): mov $0x2,0x8(%rsp)
6179(5): cmp $0x0,0xd(%rsp)
617e(2): jz 0x12(%rip)
6180(2): test %al,%al
6182(5): mov $0x4,%eax
6187(5): cmove 0x8(%rsp),%eax
618c(4): mov %eax,0x8(%rsp)
6190(4): sub $0x8,%rsp
6194(3): mov %rbp,%rcx
6197(3): mov %r13,%rsi
619a(4): push 0x68(%rsp)
619e(4): push 0x78(%rsp)
61a2(3): mov %r14,%rdi
61a5(2): push $0x0
61a7(8): mov 0x98(%rsp),%r9d
61af(5): mov 0x28(%rsp),%r8d
61b4(5): mov 0x30(%rsp),%rdx
61b9(4): and $0xfd,%r9d
61bd(5): call 0xfffff433(%rip)
61c2(4): add $0x20,%rsp
61c6(3): mov %rax,%r15
61c9(8): mov 0xa8(%rsp),%rbx
61d1(9): xor $0x28,%rbx
61da(3): mov %r15,%rax
61dd(6): jnz 0x606(%rip)
61e3(7): add $0xb8,%rsp
61ea(1): pop %rbx
61eb(1): pop %rbp
61ec(2): pop %r12
61ee(2): pop %r13
61f0(2): pop %r14
61f2(2): pop %r15
61f4(1): ret near (%rsp)
61f5(3): nop (%rax)
61f8(3): mov %r11,%rbp
61fb(5): jmp 0xffffff7e(%rip)
6200(3): cmp %r15,%r13
6203(2): jbe 0x7(%rip)
6205(5): mov $0x27,0x0(%r14,%r15,1)
620a(4): lea 0x1(%r15),%rax
620e(3): cmp %rax,%r13
6211(2): jbe 0x8(%rip)
6213(6): mov $0x5c,0x1(%r14,%r15,1)
6219(4): lea 0x2(%r15),%rax
621d(3): cmp %rax,%r13
6220(6): jbe 0x5f2(%rip)
6226(3): mov %r13,%rdx
6229(6): mov $0x27,0x2(%r14,%r15,1)
622f(5): mov 0x50(%rsp),%r13
6234(5): jmp 0xfffffbde(%rip)
6239(3): mov %r12d,%eax
623c(5): mov $0x30,%ebx
6241(3): xor %r12d,%r12d
6244(5): jmp 0xfffff605(%rip)
6249(6): mov $0x27,0x2(%r14,%r15,1)
624f(5): jmp 0xfffff9ca(%rip)
6254(2): test %ebx,%ebx
6256(6): jnz 0xfffff42d(%rip)
625c(5): mov $0x1,0xd(%rsp)
6261(3): test %r13,%r13
6264(6): jnz 0x596(%rip)
626a(7): lea 0x45f4(%rip),%rax
6271(9): mov $0x0,0x50(%rsp)
627a(5): mov $0x1,0xe(%rsp)
627f(5): mov $0x0,0x7c(%rsp)
6284(3): xor %r12d,%r12d
6287(5): mov $0x0,0xf(%rsp)
628c(9): mov $0x1,0x18(%rsp)
6295(5): mov %rax,0x48(%rsp)
629a(6): mov $0x1,%r15d
62a0(8): mov $0x2,0x8(%rsp)
62a8(5): jmp 0xfffff41b(%rip)
62ad(3): nop (%rax)
62b0(2): test %ebx,%ebx
62b2(6): jnz 0x3fb(%rip)
62b8(3): test %r13,%r13
62bb(6): jz 0x22b(%rip)
62c1(4): mov $0x22,(%r14)
62c5(5): mov $0x1,0xe(%rsp)
62ca(3): xor %r12d,%r12d
62cd(5): mov $0x0,0x7c(%rsp)
62d2(9): mov $0x0,0x50(%rsp)
62db(7): lea 0x4581(%rip),%rax
62e2(5): mov $0x0,0xf(%rsp)
62e7(5): mov $0x1,0xd(%rsp)
62ec(9): mov $0x1,0x18(%rsp)
62f5(6): mov $0x1,%r15d
62fb(5): mov %rax,0x48(%rsp)
6300(5): jmp 0xfffff3c3(%rip)
6305(7): lea 0x4557(%rip),%rax
630c(5): mov $0x1,0xe(%rsp)
6311(5): mov $0x0,0x7c(%rsp)
6316(3): xor %r12d,%r12d
6319(9): mov $0x0,0x50(%rsp)
6322(5): mov $0x1,0xf(%rsp)
6327(5): mov $0x1,0xd(%rsp)
632c(9): mov $0x1,0x18(%rsp)
6335(3): xor %r15d,%r15d
6338(5): mov %rax,0x48(%rsp)
633d(8): mov $0x5,0x8(%rsp)
6345(5): jmp 0xfffff37e(%rip)
634a(5): mov $0x1,0xe(%rsp)
634f(5): mov $0x0,0x7c(%rsp)
6354(3): xor %r12d,%r12d
6357(9): mov $0x0,0x50(%rsp)
6360(5): mov $0x0,0xf(%rsp)
6365(3): xor %r15d,%r15d
6368(5): mov $0x1,0xd(%rsp)
636d(9): mov $0x0,0x18(%rsp)
6376(9): mov $0x0,0x48(%rsp)
637f(5): jmp 0xfffff344(%rip)
6384(5): cmp $0xa,0x8(%rsp)
6389(2): jz 0x58(%rip)
638b(7): lea 0x44d5(%rip),%rsi
6392(2): xor %edi,%edi
6394(5): mov $0x5,%edx
6399(5): call 0xffffb9d7(%rip)
639e(3): mov %rax,%rcx
63a1(5): mov %rax,0x68(%rsp)
63a6(7): lea 0x44ba(%rip),%rax
63ad(3): cmp %rax,%rcx
63b0(6): jz 0x39e(%rip)
63b6(7): lea 0x44a8(%rip),%rsi
63bd(2): xor %edi,%edi
63bf(5): mov $0x5,%edx
63c4(5): call 0xffffb9ac(%rip)
63c9(3): mov %rax,%rcx
63cc(5): mov %rax,0x60(%rsp)
63d1(7): lea 0x448d(%rip),%rax
63d8(3): cmp %rax,%rcx
63db(6): jz 0x389(%rip)
63e1(3): xor %r15d,%r15d
63e4(2): test %ebx,%ebx
63e6(6): jz 0x1c7(%rip)
63ec(2): test %ebx,%ebx
63ee(5): mov 0x60(%rsp),%rbx
63f3(5): setnz 0xf(%rsp)
63f8(3): xor %r12d,%r12d
63fb(3): mov %rbx,%rdi
63fe(5): call 0xffffb992(%rip)
6403(5): mov %rbx,0x48(%rsp)
6408(5): mov %rax,0x18(%rsp)
640d(5): mov $0x1,0xe(%rsp)
6412(5): mov $0x0,0x7c(%rsp)
6417(9): mov $0x0,0x50(%rsp)
6420(5): mov $0x1,0xd(%rsp)
6425(5): jmp 0xfffff29e(%rip)
642a(5): mov $0x1,0xe(%rsp)
642f(5): mov $0x0,0x7c(%rsp)
6434(3): xor %r12d,%r12d
6437(9): mov $0x0,0x50(%rsp)
6440(5): mov $0x0,0xf(%rsp)
6445(3): xor %r15d,%r15d
6448(5): mov $0x0,0xd(%rsp)
644d(9): mov $0x0,0x18(%rsp)
6456(9): mov $0x0,0x48(%rsp)
645f(5): jmp 0xfffff264(%rip)
6464(5): mov $0x1,0xe(%rsp)
6469(5): mov $0x0,0x7c(%rsp)
646e(3): xor %r12d,%r12d
6471(9): mov $0x0,0x50(%rsp)
647a(5): mov $0x1,0xf(%rsp)
647f(5): mov $0x1,0xd(%rsp)
6484(5): jmp 0xfffff21f(%rip)
6489(3): cmp %r15,%r13
648c(2): jbe 0x7(%rip)
648e(5): mov $0x30,0x0(%r14,%r15,1)
6493(4): lea 0x2(%rcx),%rax
6497(3): cmp %rax,%r13
649a(2): jbe 0x8(%rip)
649c(6): mov $0x30,0x2(%r14,%rcx,1)
64a2(3): mov %r12d,%eax
64a5(4): lea 0x3(%rcx),%r15
64a9(3): xor %r12d,%r12d
64ac(5): mov $0x30,%ebx
64b1(5): jmp 0xfffff367(%rip)
64b6(a): nop 0x0(%rax,%rax,1)
64c0(5): movzx 0xf(%rsp),%ebx
64c5(3): mov %r11,%rbp
64c8(4): mov %bl,0xd(%rsp)
64cc(5): jmp 0xfffffcad(%rip)
64d1(5): movzx 0xd(%rsp),%edx
64d6(3): xor %r12d,%r12d
64d9(5): jmp 0xfffffb07(%rip)
64de(3): xor %r10d,%r10d
64e1(5): jmp 0xfffffbbc(%rip)
64e6(9): mov $0x0,0x50(%rsp)
64ef(5): mov $0x1,0xe(%rsp)
64f4(3): xor %r12d,%r12d
64f7(5): mov $0x0,0x7c(%rsp)
64fc(5): jmp 0xfffffddf(%rip)
6501(5): mov 0x30(%rsp),%r11
6506(3): mov %r14,%rsi
6509(3): mov %r13,%rcx
650c(3): mov %rbx,%rax
650f(3): mov %rbx,%rdi
6512(6): movzx 0x7d(%rsp),%r8d
6518(5): movzx 0x7e(%rsp),%ebx
651d(8): mov 0x88(%rsp),%r9
6525(3): cmp %r11,%rsi
6528(6): movzx 0x7f(%rsp),%r10d
652e(8): mov 0x80(%rsp),%r15
6536(5): mov 0x40(%rsp),%r14
653b(5): mov 0x70(%rsp),%r13
6540(2): jnb 0x28(%rip)
6542(3): cmp $0x0,(%rcx)
6545(2): jnz 0x12(%rip)
6547(2): jmp 0x21(%rip)
6549(7): nop 0x0(%rax)
6550(5): cmp $0x0,0x0(%r9,%rax,1)
6555(2): jz 0x10(%rip)
6557(4): add $0x1,%rax
655b(5): lea 0x0(%rbp,%rax,1),%rdx
6560(3): cmp %rdx,%r11
6563(2): jnbe 0xffffffed(%rip)
6565(3): mov %rax,%rdi
6568(5): movzx 0xd(%rsp),%edx
656d(3): xor %r12d,%r12d
6570(5): jmp 0xfffffa66(%rip)
6575(3): mov %rbx,%rdi
6578(6): movzx 0x7d(%rsp),%r8d
657e(5): movzx 0x7e(%rsp),%ebx
6583(6): movzx 0x7f(%rsp),%r10d
6589(8): mov 0x80(%rsp),%r15
6591(3): xor %r12d,%r12d
6594(5): mov 0x40(%rsp),%r14
6599(5): mov 0x70(%rsp),%r13
659e(5): mov 0x30(%rsp),%r11
65a3(5): movzx 0xd(%rsp),%edx
65a8(5): jmp 0xfffffa2e(%rip)
65ad(5): mov 0x68(%rsp),%rdx
65b2(3): movzx (%rdx),%eax
65b5(2): test %al,%al
65b7(6): jz 0xfffffe35(%rip)
65bd(3): nop (%rax)
65c0(3): cmp %r15,%r13
65c3(2): jbe 0x6(%rip)
65c5(4): mov %al,0x0(%r14,%r15,1)
65c9(4): add $0x1,%r15
65cd(5): movzx 0x0(%rdx,%r15,1),%eax
65d2(2): test %al,%al
65d4(2): jnz 0xffffffec(%rip)
65d6(5): jmp 0xfffffe16(%rip)
65db(2): mov %edx,%eax
65dd(5): jmp 0xfffff55a(%rip)
65e2(4): movzx 0x0(%rax,%rcx,1),%ebx
65e6(3): cmp $0x3e,%bl
65e9(6): jnbe 0xfffff877(%rip)
65ef(a): mov $0x8070630310989004800,%rax
65f9(4): bt %rbx,%rax
65fd(6): jnb 0xfffff863(%rip)
6603(5): cmp $0x0,0xf(%rsp)
6608(6): jnz 0x1ea(%rip)
660e(3): cmp %r15,%r13
6611(2): jbe 0x7(%rip)
6613(5): mov $0x3f,0x0(%r14,%r15,1)
6618(4): lea 0x1(%r15),%rax
661c(3): cmp %rax,%r13
661f(2): jbe 0x8(%rip)
6621(6): mov $0x22,0x1(%r14,%r15,1)
6627(4): lea 0x2(%r15),%rax
662b(3): cmp %rax,%r13
662e(2): jbe 0x8(%rip)
6630(6): mov $0x22,0x2(%r14,%r15,1)
6636(4): lea 0x3(%r15),%rax
663a(3): cmp %rax,%r13
663d(2): jbe 0x8(%rip)
663f(6): mov $0x3f,0x3(%r14,%r15,1)
6645(4): add $0x4,%r15
6649(2): xor %edx,%edx
664b(3): xor %r12d,%r12d
664e(2): xor %eax,%eax
6650(3): mov %rcx,%rbp
6653(5): jmp 0xfffff1c5(%rip)
6658(2): test %ebx,%ebx
665a(6): jz 0x18e(%rip)
6660(7): lea 0x41fe(%rip),%rax
6667(5): mov $0x1,0xe(%rsp)
666c(5): mov $0x0,0x7c(%rsp)
6671(3): xor %r12d,%r12d
6674(9): mov $0x0,0x50(%rsp)
667d(5): mov $0x1,0xf(%rsp)
6682(5): mov $0x0,0xd(%rsp)
6687(9): mov $0x1,0x18(%rsp)
6690(3): xor %r15d,%r15d
6693(5): mov %rax,0x48(%rsp)
6698(5): jmp 0xfffff02b(%rip)
669d(3): nop (%rax)
66a0(3): mov %r11,%rbp
66a3(5): movzx 0xf(%rsp),%eax
66a8(5): jmp 0xfffffad1(%rip)
66ad(7): lea 0x41af(%rip),%rax
66b4(5): mov $0x1,0xe(%rsp)
66b9(5): mov $0x0,0x7c(%rsp)
66be(3): xor %r12d,%r12d
66c1(9): mov $0x0,0x50(%rsp)
66ca(5): mov $0x1,0xf(%rsp)
66cf(5): mov $0x1,0xd(%rsp)
66d4(9): mov $0x1,0x18(%rsp)
66dd(3): xor %r15d,%r15d
66e0(5): mov %rax,0x48(%rsp)
66e5(5): jmp 0xffffefde(%rip)
66ea(2): mov %edx,%eax
66ec(5): mov 0x48(%rsp),%rbx
66f1(3): test %rbx,%rbx
66f4(2): jz 0x2e(%rip)
66f6(2): test %al,%al
66f8(2): jz 0x2a(%rip)
66fa(3): movzx (%rbx),%ecx
66fd(3): mov %rbx,%rax
6700(2): test %cl,%cl
6702(2): jz 0x20(%rip)
6704(3): mov %r15,%rdx
6707(3): sub %r15,%rax
670a(3): cmp %rdx,%r13
670d(2): jbe 0x6(%rip)
670f(4): mov %cl,0x0(%r14,%rdx,1)
6713(4): add $0x1,%rdx
6717(4): movzx 0x0(%rax,%rdx,1),%ecx
671b(2): test %cl,%cl
671d(2): jnz 0xffffffed(%rip)
671f(3): mov %rdx,%r15
6722(3): cmp %r15,%r13
6725(6): jbe 0xfffffaa4(%rip)
672b(5): mov $0x0,0x0(%r14,%r15,1)
6730(5): jmp 0xfffffa99(%rip)
6735(5): cmp $0x2,0x8(%rsp)
673a(5): movzx 0xf(%rsp),%ebx
673f(3): mov %r11,%rbp
6742(3): setz %al
6745(4): mov %bl,0xd(%rsp)
6749(5): jmp 0xfffffa30(%rip)
674e(4): mov 0x8(%rsp),%esi
6752(3): mov %rcx,%rdi
6755(5): call 0xffffedab(%rip)
675a(5): mov %rax,0x68(%rsp)
675f(5): jmp 0xfffffc57(%rip)
6764(4): mov 0x8(%rsp),%esi
6768(3): mov %rcx,%rdi
676b(5): call 0xffffed95(%rip)
6770(5): mov %rax,0x60(%rsp)
6775(5): jmp 0xfffffc6c(%rip)
677a(5): movzx 0xf(%rsp),%ebx
677f(3): mov %r11,%rbp
6782(2): mov %edx,%eax
6784(4): mov %bl,0xd(%rsp)
6788(5): jmp 0xfffff9f1(%rip)
678d(4): sub $0x8,%rsp
6791(6): mov $0x5,%r8d
6797(3): mov %r11,%rcx
679a(4): push 0x68(%rsp)
679e(4): push 0x78(%rsp)
67a2(3): mov %r14,%rdi
67a5(4): push 0x38(%rsp)
67a9(8): mov 0x98(%rsp),%r9d
67b1(5): mov 0x30(%rsp),%rdx
67b6(5): mov 0x70(%rsp),%rsi
67bb(5): call 0xffffee35(%rip)
67c0(4): add $0x20,%rsp
67c4(3): mov %rax,%r15
67c7(5): jmp 0xfffffa02(%rip)
67cc(5): movzx 0x7c(%rsp),%eax
67d1(5): jmp 0xffffff1b(%rip)
67d6(8): mov $0x2,0x8(%rsp)
67de(5): jmp 0xfffff99b(%rip)
67e3(5): call 0xffffb5bd(%rip)
67e8(5): mov $0x0,0xd(%rsp)
67ed(5): jmp 0xfffffa74(%rip)
67f2(3): mov %r11,%rbp
67f5(5): jmp 0xfffff99b(%rip)
67fa(5): mov $0x1,0xe(%rsp)
67ff(2): xor %eax,%eax
6801(3): xor %r12d,%r12d
6804(9): mov $0x0,0x50(%rsp)
680d(5): jmp 0xfffff5a7(%rip)
6812(3): mov %r13,%rdx
6815(5): mov 0x50(%rsp),%r13
681a(5): jmp 0xfffff5f8(%rip)
681f(5): call 0xffffb441(%rip)

"quotearg_n_options" :
6830(2): push %r15
6832(2): push %r14
6834(3): movsxd %edi,%r15
6837(2): push %r13
6839(2): push %r12
683b(3): mov %rdx,%r14
683e(1): push %rbp
683f(1): push %rbx
6840(3): mov %rcx,%rbp
6843(4): sub $0x28,%rsp
6847(5): mov %rsi,0x8(%rsp)
684c(5): call 0xffffb424(%rip)
6851(3): mov %rax,%r13
6854(2): mov (%rax),%eax
6856(3): test %r15d,%r15d
6859(7): mov 0x207820(%rip),%rbx
6860(4): mov %eax,0x18(%rsp)
6864(6): js 0x16d(%rip)
686a(7): cmp %r15d,0x207807(%rip)
6871(2): jnle 0x64(%rip)
6873(7): cmp $0x7fffffff,%r15d
687a(6): jz 0x15c(%rip)
6880(4): lea 0x1(%r15),%r12d
6884(7): lea 0x207805(%rip),%rax
688b(3): movsxd %r12d,%rsi
688e(4): shl/sal $0x4,%rsi
6892(3): cmp %rax,%rbx
6895(6): jz 0x11b(%rip)
689b(3): mov %rbx,%rdi
689e(5): call 0x1eb2(%rip)
68a3(3): mov %rax,%rbx
68a6(7): mov %rax,0x2077d3(%rip)
68ad(7): movsxd 0x2077c4(%rip),%rdi
68b4(3): mov %r12d,%edx
68b7(2): xor %esi,%esi
68b9(2): sub %edi,%edx
68bb(4): shl/sal $0x4,%rdi
68bf(3): movsxd %edx,%rdx
68c2(3): add %rbx,%rdi
68c5(4): shl/sal $0x4,%rdx
68c9(5): call 0xffffb5a7(%rip)
68ce(7): mov %r12d,0x2077a3(%rip)
68d5(3): mov 0x4(%rbp),%eax
68d8(4): shl/sal $0x4,%r15
68dc(4): sub $0x8,%rsp
68e0(3): add %r15,%rbx
68e3(4): lea 0x8(%rbp),%r15
68e7(4): mov 0x0(%rbp),%r8d
68eb(3): mov (%rbx),%r11
68ee(4): mov 0x8(%rbx),%r12
68f2(3): mov %r14,%rcx
68f5(3): or $0x1,%eax
68f8(4): mov %eax,0x24(%rsp)
68fc(3): push 0x30(%rbp)
68ff(3): mov %eax,%r9d
6902(3): push 0x28(%rbp)
6905(2): push %r15
6907(3): mov %r11,%rsi
690a(5): mov 0x28(%rsp),%rdx
690f(3): mov %r12,%rdi
6912(5): mov %r11,0x30(%rsp)
6917(5): call 0xffffecd9(%rip)
691c(4): add $0x20,%rsp
6920(5): mov 0x10(%rsp),%r11
6925(3): cmp %rax,%r11
6928(2): jnbe 0x69(%rip)
692a(4): lea 0x1(%rax),%rsi
692e(7): lea 0x2077eb(%rip),%rax
6935(3): cmp %rax,%r12
6938(3): mov %rsi,(%rbx)
693b(2): jz 0x14(%rip)
693d(3): mov %r12,%rdi
6940(5): mov %rsi,0x10(%rsp)
6945(5): call 0xffffb30b(%rip)
694a(5): mov 0x10(%rsp),%rsi
694f(3): mov %rsi,%rdi
6952(5): mov %rsi,0x10(%rsp)
6957(5): call 0x1d99(%rip)
695c(4): sub $0x8,%rsp
6960(4): mov %rax,0x8(%rbx)
6964(4): mov 0x0(%rbp),%r8d
6968(3): push 0x30(%rbp)
696b(3): push 0x28(%rbp)
696e(3): mov %r14,%rcx
6971(2): push %r15
6973(5): mov 0x3c(%rsp),%r9d
6978(3): mov %rax,%rdi
697b(5): mov 0x28(%rsp),%rdx
6980(5): mov 0x30(%rsp),%rsi
6985(3): mov %rax,%r12
6988(5): call 0xffffec68(%rip)
698d(4): add $0x20,%rsp
6991(4): mov 0x18(%rsp),%eax
6995(4): mov %eax,0x0(%r13)
6999(4): add $0x28,%rsp
699d(3): mov %r12,%rax
69a0(1): pop %rbx
69a1(1): pop %rbp
69a2(2): pop %r12
69a4(2): pop %r13
69a6(2): pop %r14
69a8(2): pop %r15
69aa(1): ret near (%rsp)
69ab(5): nop 0x0(%rax,%rax,1)
69b0(2): xor %edi,%edi
69b2(5): call 0x1d9e(%rip)
69b7(8): movdqa 0x2076d1(%rip),%xmm0
69bf(3): mov %rax,%rbx
69c2(7): mov %rax,0x2076b7(%rip)
69c9(3): movups %xmm0,(%rax)
69cc(5): jmp 0xfffffee1(%rip)
69d1(5): call 0xffffb28f(%rip)
69d6(5): call 0x1f6a(%rip)

"clone_quoting_options" :
69e0(2): push %r12
69e2(1): push %rbp
69e3(1): push %rbx
69e4(3): mov %rdi,%rbx
69e7(5): call 0xffffb289(%rip)
69ec(3): mov (%rax),%r12d
69ef(3): mov %rax,%rbp
69f2(7): lea 0x207827(%rip),%rax
69f9(3): test %rbx,%rbx
69fc(5): mov $0x38,%esi
6a01(4): cmove %rax,%rbx
6a05(3): mov %rbx,%rdi
6a08(5): call 0x1ee8(%rip)
6a0d(4): mov %r12d,0x0(%rbp)
6a11(1): pop %rbx
6a12(1): pop %rbp
6a13(2): pop %r12
6a15(1): ret near (%rsp)

"get_quoting_style" :
6a20(7): lea 0x2077f9(%rip),%rax
6a27(3): test %rdi,%rdi
6a2a(4): cmove %rax,%rdi
6a2e(2): mov (%rdi),%eax
6a30(1): ret near (%rsp)

"set_quoting_style" :
6a40(7): lea 0x2077d9(%rip),%rax
6a47(3): test %rdi,%rdi
6a4a(4): cmove %rax,%rdi
6a4e(2): mov %esi,(%rdi)
6a50(1): ret near (%rsp)

"set_char_quoting" :
6a60(7): lea 0x2077b9(%rip),%rax
6a67(3): test %rdi,%rdi
6a6a(2): mov %esi,%ecx
6a6c(4): cmove %rax,%rdi
6a70(2): mov %esi,%eax
6a72(3): and $0x1f,%ecx
6a75(3): shr $0x5,%al
6a78(3): movzx %al,%eax
6a7b(5): lea 0x8(%rdi,%rax,4),%rdi
6a80(2): mov (%rdi),%esi
6a82(2): mov %esi,%eax
6a84(2): shr %cl,%eax
6a86(2): xor %eax,%edx
6a88(3): and $0x1,%eax
6a8b(3): and $0x1,%edx
6a8e(2): shl/sal %cl,%edx
6a90(2): xor %esi,%edx
6a92(2): mov %edx,(%rdi)
6a94(1): ret near (%rsp)

"set_quoting_flags" :
6aa0(7): lea 0x207779(%rip),%rax
6aa7(3): test %rdi,%rdi
6aaa(4): cmove %rax,%rdi
6aae(3): mov 0x4(%rdi),%eax
6ab1(3): mov %esi,0x4(%rdi)
6ab4(1): ret near (%rsp)

"set_custom_quoting" :
6ac0(7): lea 0x207759(%rip),%rax
6ac7(3): test %rdi,%rdi
6aca(4): cmove %rax,%rdi
6ace(3): test %rsi,%rsi
6ad1(6): mov $0xa,(%rdi)
6ad7(2): jz 0x10(%rip)
6ad9(3): test %rdx,%rdx
6adc(2): jz 0xb(%rip)
6ade(4): mov %rsi,0x28(%rdi)
6ae2(4): mov %rdx,0x30(%rdi)
6ae6(1): ret near (%rsp)
6ae7(4): sub $0x8,%rsp
6aeb(5): call 0xffffb175(%rip)

"quotearg_buffer" :
6af0(2): push %r15
6af2(2): push %r14
6af4(7): lea 0x207725(%rip),%rax
6afb(2): push %r13
6afd(2): push %r12
6aff(3): mov %rdi,%r13
6b02(1): push %rbp
6b03(1): push %rbx
6b04(3): mov %r8,%rbx
6b07(3): mov %rsi,%r14
6b0a(3): mov %rdx,%r15
6b0d(4): sub $0x18,%rsp
6b11(3): test %r8,%r8
6b14(4): cmove %rax,%rbx
6b18(5): mov %rcx,0x8(%rsp)
6b1d(5): call 0xffffb153(%rip)
6b22(3): mov (%rax),%r12d
6b25(3): mov %rax,%rbp
6b28(4): lea 0x8(%rbx),%rax
6b2c(4): sub $0x8,%rsp
6b30(4): mov 0x4(%rbx),%r9d
6b34(3): push 0x30(%rbx)
6b37(3): mov (%rbx),%r8d
6b3a(3): push 0x28(%rbx)
6b3d(3): mov %r15,%rdx
6b40(1): push %rax
6b41(5): mov 0x28(%rsp),%rcx
6b46(3): mov %r14,%rsi
6b49(3): mov %r13,%rdi
6b4c(5): call 0xffffeaa4(%rip)
6b51(4): mov %r12d,0x0(%rbp)
6b55(4): add $0x38,%rsp
6b59(1): pop %rbx
6b5a(1): pop %rbp
6b5b(2): pop %r12
6b5d(2): pop %r13
6b5f(2): pop %r14
6b61(2): pop %r15
6b63(1): ret near (%rsp)

"quotearg_alloc_mem" :
6b70(2): push %r15
6b72(2): push %r14
6b74(7): lea 0x2076a5(%rip),%rax
6b7b(2): push %r13
6b7d(2): push %r12
6b7f(3): mov %rdx,%r12
6b82(1): push %rbp
6b83(1): push %rbx
6b84(3): mov %rcx,%rbx
6b87(3): mov %rdi,%r14
6b8a(3): mov %rsi,%r15
6b8d(4): sub $0x38,%rsp
6b91(3): test %rcx,%rcx
6b94(4): cmove %rax,%rbx
6b98(2): xor %ebp,%ebp
6b9a(5): call 0xffffb0d6(%rip)
6b9f(3): test %r12,%r12
6ba2(3): mov %rax,%r13
6ba5(2): mov (%rax),%eax
6ba7(4): setz %bpl
6bab(3): or 0x4(%rbx),%ebp
6bae(4): lea 0x8(%rbx),%r10
6bb2(4): sub $0x8,%rsp
6bb6(3): mov (%rbx),%r8d
6bb9(3): mov %r15,%rcx
6bbc(4): mov %eax,0x14(%rsp)
6bc0(3): push 0x30(%rbx)
6bc3(3): mov %r14,%rdx
6bc6(3): push 0x28(%rbx)
6bc9(2): push %r10
6bcb(2): xor %esi,%esi
6bcd(3): mov %ebp,%r9d
6bd0(2): xor %edi,%edi
6bd2(5): mov %r10,0x40(%rsp)
6bd7(5): call 0xffffea19(%rip)
6bdc(4): lea 0x1(%rax),%rsi
6be0(5): mov %rax,0x48(%rsp)
6be5(4): add $0x20,%rsp
6be9(3): mov %rsi,%rdi
6bec(5): mov %rsi,0x18(%rsp)
6bf1(5): call 0x1aff(%rip)
6bf6(5): mov %rax,0x10(%rsp)
6bfb(4): sub $0x8,%rsp
6bff(3): push 0x30(%rbx)
6c02(3): push 0x28(%rbx)
6c05(5): mov 0x38(%rsp),%r10
6c0a(3): mov %ebp,%r9d
6c0d(3): mov (%rbx),%r8d
6c10(3): mov %r15,%rcx
6c13(3): mov %r14,%rdx
6c16(3): mov %rax,%rdi
6c19(2): push %r10
6c1b(5): mov 0x38(%rsp),%rsi
6c20(5): call 0xffffe9d0(%rip)
6c25(4): mov 0x2c(%rsp),%eax
6c29(4): add $0x20,%rsp
6c2d(3): test %r12,%r12
6c30(4): mov %eax,0x0(%r13)
6c34(2): jz 0xb(%rip)
6c36(5): mov 0x28(%rsp),%r11
6c3b(4): mov %r11,(%r12)
6c3f(5): mov 0x10(%rsp),%rax
6c44(4): add $0x38,%rsp
6c48(1): pop %rbx
6c49(1): pop %rbp
6c4a(2): pop %r12
6c4c(2): pop %r13
6c4e(2): pop %r14
6c50(2): pop %r15
6c52(1): ret near (%rsp)

"quotearg_alloc" :
6c60(3): mov %rdx,%rcx
6c63(2): xor %edx,%edx
6c65(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
6c70(6): mov 0x207402(%rip),%eax
6c76(2): push %r12
6c78(7): mov 0x207401(%rip),%r12
6c7f(1): push %rbp
6c80(1): push %rbx
6c81(3): cmp $0x1,%eax
6c84(2): jle 0x2d(%rip)
6c86(3): sub $0x2,%eax
6c89(5): lea 0x18(%r12),%rbx
6c8e(4): shl/sal $0x4,%rax
6c92(5): lea 0x28(%r12,%rax,1),%rbp
6c97(9): nop 0x0(%rax,%rax,1)
6ca0(3): mov (%rbx),%rdi
6ca3(4): add $0x10,%rbx
6ca7(5): call 0xffffafa9(%rip)
6cac(3): cmp %rbp,%rbx
6caf(2): jnz 0xfffffff1(%rip)
6cb1(5): mov 0x8(%r12),%rdi
6cb6(7): lea 0x207463(%rip),%rbx
6cbd(3): cmp %rbx,%rdi
6cc0(2): jz 0x19(%rip)
6cc2(5): call 0xffffaf8e(%rip)
6cc7(b): mov $0x100,0x2073be(%rip)
6cd2(7): mov %rbx,0x2073bf(%rip)
6cd9(7): lea 0x2073b0(%rip),%rbx
6ce0(3): cmp %rbx,%r12
6ce3(2): jz 0x11(%rip)
6ce5(3): mov %r12,%rdi
6ce8(5): call 0xffffaf68(%rip)
6ced(7): mov %rbx,0x20738c(%rip)
6cf4(1): pop %rbx
6cf5(a): mov $0x1,0x207379(%rip)
6cff(1): pop %rbp
6d00(2): pop %r12
6d02(1): ret near (%rsp)

"quotearg_n" :
6d10(7): lea 0x207509(%rip),%rcx
6d17(7): mov $0xffffffff,%rdx
6d1e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
6d30(7): lea 0x2074e9(%rip),%rcx
6d37(5): jmp 0xfffffaf9(%rip)

"quotearg" :
6d40(7): lea 0x2074d9(%rip),%rcx
6d47(3): mov %rdi,%rsi
6d4a(7): mov $0xffffffff,%rdx
6d51(2): xor %edi,%edi
6d53(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
6d60(7): lea 0x2074b9(%rip),%rcx
6d67(3): mov %rsi,%rdx
6d6a(3): mov %rdi,%rsi
6d6d(2): xor %edi,%edi
6d6f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
6d80(4): sub $0x48,%rsp
6d84(3): mov %rdx,%rax
6d87(9): mov $0x28,%rdx
6d90(5): mov %rdx,0x38(%rsp)
6d95(2): xor %edx,%edx
6d97(3): cmp $0xa,%esi
6d9a(2): jz 0x6a(%rip)
6d9c(3): mov %esi,(%rsp)
6d9f(3): mov %rsp,%rcx
6da2(7): mov $0xffffffff,%rdx
6da9(3): mov %rax,%rsi
6dac(9): mov $0x0,0x4(%rsp)
6db5(9): mov $0x0,0xc(%rsp)
6dbe(9): mov $0x0,0x14(%rsp)
6dc7(9): mov $0x0,0x1c(%rsp)
6dd0(9): mov $0x0,0x24(%rsp)
6dd9(9): mov $0x0,0x2c(%rsp)
6de2(8): mov $0x0,0x34(%rsp)
6dea(5): call 0xfffffa46(%rip)
6def(5): mov 0x38(%rsp),%rcx
6df4(9): xor $0x28,%rcx
6dfd(2): jnz 0xc(%rip)
6dff(4): add $0x48,%rsp
6e03(1): ret near (%rsp)
6e04(5): call 0xffffae5c(%rip)
6e09(5): call 0xffffaf97(%rip)

"quotearg_n_style_mem" :
6e10(4): sub $0x48,%rsp
6e14(3): mov %rdx,%rax
6e17(3): mov %rcx,%rdx
6e1a(9): mov $0x28,%rcx
6e23(5): mov %rcx,0x38(%rsp)
6e28(2): xor %ecx,%ecx
6e2a(3): cmp $0xa,%esi
6e2d(2): jz 0x63(%rip)
6e2f(3): mov %esi,(%rsp)
6e32(3): mov %rsp,%rcx
6e35(3): mov %rax,%rsi
6e38(9): mov $0x0,0x4(%rsp)
6e41(9): mov $0x0,0xc(%rsp)
6e4a(9): mov $0x0,0x14(%rsp)
6e53(9): mov $0x0,0x1c(%rsp)
6e5c(9): mov $0x0,0x24(%rsp)
6e65(9): mov $0x0,0x2c(%rsp)
6e6e(8): mov $0x0,0x34(%rsp)
6e76(5): call 0xfffff9ba(%rip)
6e7b(5): mov 0x38(%rsp),%rdx
6e80(9): xor $0x28,%rdx
6e89(2): jnz 0xc(%rip)
6e8b(4): add $0x48,%rsp
6e8f(1): ret near (%rsp)
6e90(5): call 0xffffadd0(%rip)
6e95(5): call 0xffffaf0b(%rip)

"quotearg_style" :
6ea0(3): mov %rsi,%rdx
6ea3(2): mov %edi,%esi
6ea5(2): xor %edi,%edi
6ea7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
6eb0(3): mov %rdx,%rcx
6eb3(3): mov %rsi,%rdx
6eb6(2): mov %edi,%esi
6eb8(2): xor %edi,%edi
6eba(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
6ec0(4): sub $0x48,%rsp
6ec4(2): mov %edx,%ecx
6ec6(9): mov $0x28,%rax
6ecf(5): mov %rax,0x38(%rsp)
6ed4(2): xor %eax,%eax
6ed6(7): mov 0x207373(%rip),%rax
6edd(3): mov %rsp,%r8
6ee0(3): and $0x1f,%ecx
6ee3(8): movdqa 0x207335(%rip),%xmm0
6eeb(5): mov %rax,0x30(%rsp)
6ef0(2): mov %edx,%eax
6ef2(4): movaps %xmm0,(%rsp)
6ef6(3): shr $0x5,%al
6ef9(3): movzx %al,%eax
6efc(5): lea 0x8(%r8,%rax,4),%r9
6f01(8): movdqa 0x207327(%rip),%xmm0
6f09(5): movaps %xmm0,0x10(%rsp)
6f0e(8): movdqa 0x20732a(%rip),%xmm0
6f16(5): movaps %xmm0,0x20(%rsp)
6f1b(3): mov (%r9),%edx
6f1e(2): mov %edx,%eax
6f20(2): shr %cl,%eax
6f22(2): not %eax
6f24(3): and $0x1,%eax
6f27(2): shl/sal %cl,%eax
6f29(3): mov %r8,%rcx
6f2c(2): xor %edx,%eax
6f2e(3): mov %rsi,%rdx
6f31(3): mov %rdi,%rsi
6f34(3): mov %eax,(%r9)
6f37(2): xor %edi,%edi
6f39(5): call 0xfffff8f7(%rip)
6f3e(5): mov 0x38(%rsp),%rsi
6f43(9): xor $0x28,%rsi
6f4c(2): jnz 0x7(%rip)
6f4e(4): add $0x48,%rsp
6f52(1): ret near (%rsp)
6f53(5): call 0xffffae4d(%rip)

"quotearg_char" :
6f60(4): movsx %sil,%edx
6f64(7): mov $0xffffffff,%rsi
6f6b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
6f70(5): mov $0x3a,%edx
6f75(7): mov $0xffffffff,%rsi
6f7c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
6f90(5): mov $0x3a,%edx
6f95(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
6fa0(4): sub $0x48,%rsp
6fa4(3): mov %rdx,%rax
6fa7(9): mov $0x28,%rdx
6fb0(5): mov %rdx,0x38(%rsp)
6fb5(2): xor %edx,%edx
6fb7(3): cmp $0xa,%esi
6fba(2): jz 0x6a(%rip)
6fbc(3): mov %esi,(%rsp)
6fbf(3): mov %rsp,%rcx
6fc2(7): mov $0xffffffff,%rdx
6fc9(3): mov %rax,%rsi
6fcc(9): mov $0x0,0x4(%rsp)
6fd5(9): mov $0x4000000,0xc(%rsp)
6fde(9): mov $0x0,0x14(%rsp)
6fe7(9): mov $0x0,0x1c(%rsp)
6ff0(9): mov $0x0,0x24(%rsp)
6ff9(9): mov $0x0,0x2c(%rsp)
7002(8): mov $0x0,0x34(%rsp)
700a(5): call 0xfffff826(%rip)
700f(5): mov 0x38(%rsp),%rcx
7014(9): xor $0x28,%rcx
701d(2): jnz 0xc(%rip)
701f(4): add $0x48,%rsp
7023(1): ret near (%rsp)
7024(5): call 0xffffac3c(%rip)
7029(5): call 0xffffad77(%rip)

"quotearg_n_custom_mem" :
7030(4): sub $0x48,%rsp
7034(3): mov %rcx,%r9
7037(7): mov 0x207212(%rip),%rcx
703e(8): movdqa 0x2071da(%rip),%xmm0
7046(9): mov $0x28,%rax
704f(5): mov %rax,0x38(%rsp)
7054(2): xor %eax,%eax
7056(4): movaps %xmm0,(%rsp)
705a(3): test %rsi,%rsi
705d(5): mov %rcx,0x30(%rsp)
7062(7): mov $0xa,(%rsp)
7069(8): movdqa 0x2071bf(%rip),%xmm0
7071(5): movaps %xmm0,0x10(%rsp)
7076(8): movdqa 0x2071c2(%rip),%xmm0
707e(5): movaps %xmm0,0x20(%rsp)
7083(2): jz 0x34(%rip)
7085(3): test %rdx,%rdx
7088(2): jz 0x2f(%rip)
708a(5): mov %rsi,0x28(%rsp)
708f(5): mov %rdx,0x30(%rsp)
7094(3): mov %rsp,%rcx
7097(3): mov %r8,%rdx
709a(3): mov %r9,%rsi
709d(5): call 0xfffff793(%rip)
70a2(5): mov 0x38(%rsp),%rdi
70a7(9): xor $0x28,%rdi
70b0(2): jnz 0xc(%rip)
70b2(4): add $0x48,%rsp
70b6(1): ret near (%rsp)
70b7(5): call 0xffffaba9(%rip)
70bc(5): call 0xfffface4(%rip)

"quotearg_n_custom" :
70d0(7): mov $0xffffffff,%r8
70d7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
70e0(3): mov %rdx,%rcx
70e3(7): mov $0xffffffff,%r8
70ea(3): mov %rsi,%rdx
70ed(3): mov %rdi,%rsi
70f0(2): xor %edi,%edi
70f2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
7100(3): mov %rcx,%r8
7103(3): mov %rdx,%rcx
7106(3): mov %rsi,%rdx
7109(3): mov %rdi,%rsi
710c(2): xor %edi,%edi
710e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
7120(7): lea 0x206f19(%rip),%rcx
7127(5): jmp 0xfffff709(%rip)

"quote_mem" :
7130(7): lea 0x206f09(%rip),%rcx
7137(3): mov %rsi,%rdx
713a(3): mov %rdi,%rsi
713d(2): xor %edi,%edi
713f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
7150(7): lea 0x206ee9(%rip),%rcx
7157(7): mov $0xffffffff,%rdx
715e(5): jmp 0xfffff6d2(%rip)

"quote" :
7170(7): lea 0x206ec9(%rip),%rcx
7177(3): mov %rdi,%rsi
717a(7): mov $0xffffffff,%rdx
7181(2): xor %edi,%edi
7183(5): jmp 0xfffff6ad(%rip)

"randint_new" :
7190(1): push %rbx
7191(3): mov %rdi,%rbx
7194(5): mov $0x18,%edi
7199(5): call 0x1557(%rip)
719e(3): mov %rbx,(%rax)
71a1(8): mov $0x0,0x10(%rax)
71a9(8): mov $0x0,0x8(%rax)
71b1(1): pop %rbx
71b2(1): ret near (%rsp)

"randint_all_new" :
71c0(1): push %rbx
71c1(5): call 0x24f(%rip)
71c6(3): test %rax,%rax
71c9(2): jz 0x27(%rip)
71cb(3): mov %rax,%rbx
71ce(5): mov $0x18,%edi
71d3(5): call 0x151d(%rip)
71d8(3): mov %rbx,(%rax)
71db(8): mov $0x0,0x10(%rax)
71e3(8): mov $0x0,0x8(%rax)
71eb(1): pop %rbx
71ec(1): ret near (%rsp)
71ed(3): nop (%rax)
71f0(2): xor %eax,%eax
71f2(1): pop %rbx
71f3(1): ret near (%rsp)

"randint_get_source" :
7200(3): mov (%rdi),%rax
7203(1): ret near (%rsp)

"randint_genmax" :
7210(2): push %r15
7212(2): push %r14
7214(4): lea 0x1(%rsi),%r15
7218(2): push %r13
721a(2): push %r12
721c(3): mov %rdi,%r13
721f(1): push %rbp
7220(1): push %rbx
7221(3): mov %rsi,%r14
7224(4): sub $0x28,%rsp
7228(4): mov 0x8(%rdi),%rbp
722c(4): mov 0x10(%rdi),%rbx
7230(9): mov $0x28,%rax
7239(5): mov %rax,0x18(%rsp)
723e(2): xor %eax,%eax
7240(3): mov (%rdi),%rax
7243(5): lea 0x10(%rsp),%r12
7248(5): mov %rax,0x8(%rsp)
724d(2): jmp 0x38(%rip)
724f(1): nop 
7250(3): cmp %r14,%rbx
7253(6): jz 0x8c(%rip)
7259(3): mov %rbx,%rax
725c(2): xor %edx,%edx
725e(3): sub %r14,%rax
7261(3): div %r15,%rax
7264(3): sub %rdx,%rbx
7267(3): mov %rdx,%rdi
726a(3): mov %rax,%rsi
726d(2): xor %edx,%edx
726f(3): mov %rbp,%rax
7272(3): div %r15,%rax
7275(3): cmp %rbx,%rbp
7278(6): jbe 0xa0(%rip)
727e(4): lea 0xffffffff(%rdi),%rbx
7282(3): mov %rdx,%rbp
7285(3): cmp %r14,%rbx
7288(2): jnb 0xffffffc8(%rip)
728a(3): mov %rbx,%rax
728d(2): xor %edx,%edx
728f(1): nop 
7290(4): shl/sal $0x8,%rax
7294(4): add $0x1,%rdx
7298(6): add $0xff,%rax
729e(3): cmp %rax,%r14
72a1(2): jnbe 0xffffffef(%rip)
72a3(5): mov 0x8(%rsp),%rdi
72a8(3): mov %r12,%rsi
72ab(5): call 0x4b5(%rip)
72b0(3): mov %r12,%rax
72b3(5): nop 0x0(%rax,%rax,1)
72b8(3): movzx (%rax),%edx
72bb(4): shl/sal $0x8,%rbx
72bf(4): shl/sal $0x8,%rbp
72c3(7): add $0xff,%rbx
72ca(4): add $0x1,%rax
72ce(3): add %rdx,%rbp
72d1(3): cmp %rbx,%r14
72d4(2): jnbe 0xffffffe4(%rip)
72d6(3): cmp %r14,%rbx
72d9(6): jnz 0xffffff80(%rip)
72df(8): mov $0x0,0x10(%r13)
72e7(8): mov $0x0,0x8(%r13)
72ef(5): mov 0x18(%rsp),%rcx
72f4(9): xor $0x28,%rcx
72fd(3): mov %rbp,%rax
7300(2): jnz 0x25(%rip)
7302(4): add $0x28,%rsp
7306(1): pop %rbx
7307(1): pop %rbp
7308(2): pop %r12
730a(2): pop %r13
730c(2): pop %r14
730e(2): pop %r15
7310(1): ret near (%rsp)
7311(7): nop 0x0(%rax)
7318(4): mov %rax,0x8(%r13)
731c(4): mov %rsi,0x10(%r13)
7320(3): mov %rdx,%rbp
7323(2): jmp 0xffffffcc(%rip)
7325(5): call 0xffffaa7b(%rip)

"randint_free" :
7330(1): push %rbx
7331(7): mov $0xffffffff,%rdx
7338(3): mov %rdi,%rbx
733b(5): mov $0x18,%esi
7340(5): call 0xffffad00(%rip)
7345(3): mov %rbx,%rdi
7348(1): pop %rbx
7349(5): jmp 0xffffa907(%rip)

"randint_all_free" :
7350(2): push %r13
7352(2): push %r12
7354(1): push %rbp
7355(1): push %rbx
7356(3): mov %rdi,%rbx
7359(4): sub $0x8,%rsp
735d(3): mov (%rdi),%rdi
7360(5): call 0x5a0(%rip)
7365(3): mov %eax,%r12d
7368(5): call 0xffffa908(%rip)
736d(3): mov (%rax),%r13d
7370(3): mov %rbx,%rdi
7373(7): mov $0xffffffff,%rdx
737a(5): mov $0x18,%esi
737f(3): mov %rax,%rbp
7382(5): call 0xffffacbe(%rip)
7387(3): mov %rbx,%rdi
738a(5): call 0xffffa8c6(%rip)
738f(4): mov %r13d,0x0(%rbp)
7393(4): add $0x8,%rsp
7397(3): mov %r12d,%eax
739a(1): pop %rbx
739b(1): pop %rbp
739c(2): pop %r12
739e(2): pop %r13
73a0(1): ret near (%rsp)

"randread_error" :
73b0(1): push %rbp
73b1(1): push %rbx
73b2(4): sub $0x8,%rsp
73b6(3): test %rdi,%rdi
73b9(2): jz 0x3f(%rip)
73bb(5): call 0xfffffdb5(%rip)
73c0(3): mov %rax,%rbp
73c3(5): call 0xffffa8ad(%rip)
73c8(3): cmp $0x0,(%rax)
73cb(3): mov %rax,%rbx
73ce(5): mov $0x5,%edx
73d3(2): jz 0x2a(%rip)
73d5(7): lea 0x395c(%rip),%rsi
73dc(2): xor %edi,%edi
73de(5): call 0xffffa992(%rip)
73e3(6): mov 0x206c37(%rip),%edi
73e9(2): mov (%rbx),%esi
73eb(3): mov %rax,%rdx
73ee(3): mov %rbp,%rcx
73f1(2): xor %eax,%eax
73f3(5): call 0xffffac2d(%rip)
73f8(5): call 0xffffa868(%rip)
73fd(7): lea 0x3924(%rip),%rsi
7404(2): xor %edi,%edi
7406(5): call 0xffffa96a(%rip)
740b(2): jmp 0xffffffd8(%rip)

"randread_new" :
7410(2): push %r15
7412(2): push %r14
7414(2): push %r13
7416(2): push %r12
7418(1): push %rbp
7419(1): push %rbx
741a(4): sub $0x38,%rsp
741e(9): mov $0x28,%rax
7427(5): mov %rax,0x28(%rsp)
742c(2): xor %eax,%eax
742e(3): test %rsi,%rsi
7431(6): jz 0x127(%rip)
7437(3): test %rdi,%rdi
743a(3): mov %rdi,%r12
743d(3): mov %rsi,%rbp
7440(2): jz 0x80(%rip)
7442(7): lea 0x390b(%rip),%rsi
7449(5): call 0x1f37(%rip)
744e(3): test %rax,%rax
7451(3): mov %rax,%r13
7454(6): jz 0x204(%rip)
745a(5): mov $0x1038,%edi
745f(5): call 0x1291(%rip)
7464(3): mov %rax,%rbx
7467(3): mov %r13,(%rax)
746a(7): lea 0xffffff3f(%rip),%rax
7471(7): cmp $0x1000,%rbp
7478(5): mov $0x1000,%ecx
747d(4): lea 0x18(%rbx),%rsi
7481(4): cmovbe %rbp,%rcx
7485(4): mov %rax,0x8(%rbx)
7489(4): mov %r12,0x10(%rbx)
748d(2): xor %edx,%edx
748f(3): mov %r13,%rdi
7492(5): call 0xffffab5e(%rip)
7497(5): mov 0x28(%rsp),%rdx
749c(9): xor $0x28,%rdx
74a5(3): mov %rbx,%rax
74a8(6): jnz 0x1b7(%rip)
74ae(4): add $0x38,%rsp
74b2(1): pop %rbx
74b3(1): pop %rbp
74b4(2): pop %r12
74b6(2): pop %r13
74b8(2): pop %r14
74ba(2): pop %r15
74bc(1): ret near (%rsp)
74bd(3): nop (%rax)
74c0(5): mov $0x1038,%edi
74c5(5): call 0x122b(%rip)
74ca(3): mov %rax,%rbx
74cd(7): mov $0x0,(%rax)
74d4(7): lea 0xfffffed5(%rip),%rax
74db(7): lea 0x3865(%rip),%rdi
74e2(2): xor %esi,%esi
74e4(8): mov $0x0,0x10(%rbx)
74ec(4): mov %rax,0x8(%rbx)
74f0(8): mov $0x0,0x18(%rbx)
74f8(2): xor %eax,%eax
74fa(5): call 0xffffab56(%rip)
74ff(2): test %eax,%eax
7501(4): lea 0x20(%rbx),%r13
7505(3): mov %eax,%r15d
7508(2): js 0x80(%rip)
750a(7): cmp $0x800,%rbp
7511(3): mov %rbp,%rdx
7514(6): mov $0x800,%r14d
751a(4): cmovnbe %r14,%rdx
751e(5): mov $0x1018,%ecx
7523(3): mov %r13,%rsi
7526(2): mov %eax,%edi
7528(5): call 0xffffa7a8(%rip)
752d(3): mov %r15d,%edi
7530(3): mov %rax,%rbp
7533(5): call 0xffffa95d(%rip)
7538(7): cmp $0x7ff,%rbp
753f(6): jle 0x125(%rip)
7545(3): mov %r13,%rdi
7548(5): call 0x698(%rip)
754d(5): jmp 0xffffff4a(%rip)
7552(6): nop 0x0(%rax,%rax,1)
7558(5): mov $0x1038,%edi
755d(5): call 0x1193(%rip)
7562(3): mov %rax,%rbx
7565(7): mov $0x0,(%rax)
756c(7): lea 0xfffffe3d(%rip),%rax
7573(8): mov $0x0,0x10(%rbx)
757b(4): mov %rax,0x8(%rbx)
757f(5): jmp 0xffffff18(%rip)
7584(4): nop 0x0(%rax)
7588(5): lea 0x10(%rsp),%r12
758d(2): xor %esi,%esi
758f(6): mov $0x18,%r14d
7595(3): mov %r12,%rdi
7598(5): call 0xffffa8a8(%rip)
759d(6): movdqa 0x10(%rsp),%xmm0
75a3(4): movups %xmm0,0x20(%rbx)
75a7(5): call 0xffffa779(%rip)
75ac(3): mov %eax,0x30(%rbx)
75af(4): mov %eax,0x10(%rsp)
75b3(5): call 0xffffaafd(%rip)
75b8(4): mov %eax,0x10(%rsp)
75bc(3): mov %eax,0x34(%rbx)
75bf(5): mov $0x800,%ebp
75c4(5): mov $0x4,%eax
75c9(3): sub %r14,%rbp
75cc(4): cmp $0x4,%rbp
75d0(4): cmovnbe %rax,%rbp
75d4(5): call 0xffffa7dc(%rip)
75d9(2): test %ebp,%ebp
75db(4): mov %eax,0x10(%rsp)
75df(5): lea 0x0(%r13,%r14,1),%rcx
75e4(2): mov %ebp,%esi
75e6(2): jz 0x16(%rip)
75e8(2): xor %eax,%eax
75ea(2): mov %eax,%edx
75ec(3): add $0x1,%eax
75ef(5): movzx 0x0(%r12,%rdx,1),%edi
75f4(2): cmp %esi,%eax
75f6(4): mov %dil,0x0(%rcx,%rdx,1)
75fa(2): jb 0xfffffff0(%rip)
75fc(3): add %r14,%rbp
75ff(7): cmp $0x7ff,%rbp
7606(6): jnbe 0xffffff3f(%rip)
760c(5): call 0xffffa924(%rip)
7611(4): mov %eax,0x10(%rsp)
7615(5): mov $0x800,%eax
761a(5): mov $0x4,%edx
761f(3): sub %rbp,%rax
7622(5): lea 0x0(%r13,%rbp,1),%rcx
7627(4): cmp $0x4,%rax
762b(4): cmovnbe %rdx,%rax
762f(2): test %eax,%eax
7631(2): mov %eax,%esi
7633(6): jz 0xffffff12(%rip)
7639(2): xor %eax,%eax
763b(2): mov %eax,%edx
763d(3): add $0x1,%eax
7640(5): movzx 0x0(%r12,%rdx,1),%edi
7645(2): cmp %esi,%eax
7647(4): mov %dil,0x0(%rcx,%rdx,1)
764b(2): jb 0xfffffff0(%rip)
764d(5): jmp 0xfffffef8(%rip)
7652(6): nop 0x0(%rax,%rax,1)
7658(2): xor %ebx,%ebx
765a(5): jmp 0xfffffe3d(%rip)
765f(5): call 0xffffa741(%rip)
7664(3): test %rbp,%rbp
7667(3): mov %r14,%r15
766a(5): mov $0x10,%eax
766f(4): cmovs %r12,%rbp
7673(5): lea 0x10(%rsp),%r12
7678(3): sub %rbp,%r15
767b(4): cmp $0x10,%r15
767f(3): mov %r12,%rdi
7682(4): cmovnbe %rax,%r15
7686(2): xor %esi,%esi
7688(5): call 0xffffa7b8(%rip)
768d(5): lea 0x0(%r13,%rbp,1),%rax
7692(3): add %r15,%rbp
7695(3): mov %r15d,%ecx
7698(7): cmp $0x7ff,%rbp
769f(3): mov %r12,%rsi
76a2(3): mov %rax,%rdi
76a5(2): REP movsb rsi(%ds,10),rdi(%es,10)
76a7(6): jnbe 0xfffffe9e(%rip)
76ad(3): mov %r14,%r15
76b0(6): mov $0x4,%r8d
76b6(3): sub %rbp,%r15
76b9(5): mov %r8,0x8(%rsp)
76be(4): cmp $0x4,%r15
76c2(4): cmovnbe %r8,%r15
76c6(5): lea 0x0(%rbp,%r15,1),%rdx
76cb(3): add %r13,%rbp
76ce(4): mov %rdx,(%rsp)
76d2(5): call 0xffffa64e(%rip)
76d7(4): mov (%rsp),%rdx
76db(4): mov %eax,0x10(%rsp)
76df(3): mov %r15d,%ecx
76e2(3): mov %rbp,%rdi
76e5(3): mov %r12,%rsi
76e8(5): mov 0x8(%rsp),%r8
76ed(2): REP movsb rsi(%ds,10),rdi(%es,10)
76ef(7): cmp $0x7ff,%rdx
76f6(6): jnle 0xfffffe4f(%rip)
76fc(3): sub %rdx,%r14
76ff(4): cmp $0x4,%r14
7703(4): cmovnbe %r8,%r14
7707(5): call 0xffffa9a9(%rip)
770c(4): mov (%rsp),%rdx
7710(4): mov %eax,0x10(%rsp)
7714(3): mov %r14d,%ecx
7717(3): mov %r12,%rsi
771a(5): lea 0x0(%r13,%rdx,1),%rax
771f(3): add %rdx,%r14
7722(7): cmp $0x7ff,%r14
7729(3): mov %rax,%rdi
772c(2): REP movsb rsi(%ds,10),rdi(%es,10)
772e(6): jnbe 0xfffffe17(%rip)
7734(5): jmp 0xfffffe8b(%rip)

"randread_set_handler" :
7740(4): mov %rsi,0x8(%rdi)
7744(1): ret near (%rsp)

"randread_set_handler_arg" :
7750(4): mov %rsi,0x10(%rdi)
7754(1): ret near (%rsp)

"randread" :
7760(2): push %r15
7762(2): push %r14
7764(2): push %r13
7766(2): push %r12
7768(3): mov %rdi,%r12
776b(1): push %rbp
776c(1): push %rbx
776d(3): mov %rdx,%rbp
7770(3): mov %rsi,%rbx
7773(4): sub $0x18,%rsp
7777(3): mov (%rdi),%rcx
777a(3): test %rcx,%rcx
777d(5): mov %rcx,0x8(%rsp)
7782(2): jz 0x66(%rip)
7784(5): call 0xffffa4ec(%rip)
7789(5): mov 0x8(%rsp),%rcx
778e(3): mov %rax,%r13
7791(2): jmp 0x25(%rip)
7793(5): nop 0x0(%rax,%rax,1)
7798(4): mov (%r12),%rax
779c(5): mov 0x10(%r12),%rdi
77a1(2): mov (%rax),%eax
77a3(3): and $0x20,%eax
77a6(3): cmovne %edx,%eax
77a9(4): mov %eax,0x0(%r13)
77ad(5): call 0x8(%r12)
77b2(4): mov (%r12),%rcx
77b6(3): mov %rbp,%rdx
77b9(3): mov %rbx,%rdi
77bc(5): mov $0x1,%esi
77c1(5): call 0xffffa56f(%rip)
77c6(3): add %rax,%rbx
77c9(3): sub %rax,%rbp
77cc(4): mov 0x0(%r13),%edx
77d0(2): jnz 0xffffffc8(%rip)
77d2(4): add $0x18,%rsp
77d6(1): pop %rbx
77d7(1): pop %rbp
77d8(2): pop %r12
77da(2): pop %r13
77dc(2): pop %r14
77de(2): pop %r15
77e0(1): ret near (%rsp)
77e1(7): nop 0x0(%rax)
77e8(4): mov 0x18(%rdi),%r14
77ec(7): lea 0x838(%rdi),%rax
77f3(4): lea 0x20(%rdi),%r13
77f7(5): mov %rax,0x8(%rsp)
77fc(3): cmp %r14,%rdx
77ff(6): jbe 0xe3(%rip)
7805(5): mov $0x800,%esi
780a(3): mov %rbx,%rdi
780d(3): mov %r14,%rdx
7810(3): sub %r14,%rsi
7813(5): add 0x8(%rsp),%rsi
7818(3): add %r14,%rbx
781b(3): sub %r14,%rbp
781e(5): call 0xffffa6e2(%rip)
7823(3): test $0x7,%bl
7826(2): jnz 0x6a(%rip)
7828(7): cmp $0x7ff,%rbp
782f(6): jbe 0xa4(%rip)
7835(7): lea 0xfffff800(%rbp),%r15
783c(3): mov %r15,%r14
783f(7): and $0x7ff,%r14d
7846(2): jmp 0x16(%rip)
7848(8): nop 0x0(%rax,%rax,1)
7850(3): cmp %r14,%r15
7853(2): jz 0x3d(%rip)
7855(7): sub $0x800,%r15
785c(3): mov %rbx,%rsi
785f(3): mov %r13,%rdi
7862(7): add $0x800,%rbx
7869(5): call 0xe7(%rip)
786e(3): test %r15,%r15
7871(3): mov %r15,%rbp
7874(2): jnz 0xffffffdc(%rip)
7876(9): mov $0x0,0x18(%r12)
787f(4): add $0x18,%rsp
7883(1): pop %rbx
7884(1): pop %rbp
7885(2): pop %r12
7887(2): pop %r13
7889(2): pop %r14
788b(2): pop %r15
788d(1): ret near (%rsp)
788e(2): nop 
7890(5): mov 0x8(%rsp),%rsi
7895(3): mov %r13,%rdi
7898(6): mov $0x800,%r14d
789e(5): call 0xb2(%rip)
78a3(7): cmp $0x800,%rbp
78aa(6): jnbe 0xffffff5b(%rip)
78b0(6): mov $0x800,%r14d
78b6(5): mov 0x8(%rsp),%rsi
78bb(3): mov %rbp,%rdx
78be(3): mov %rbx,%rdi
78c1(3): sub %rbp,%r14
78c4(5): call 0xffffa63c(%rip)
78c9(5): mov %r14,0x18(%r12)
78ce(5): jmp 0xffffff04(%rip)
78d3(5): mov 0x8(%rsp),%rsi
78d8(3): mov %r13,%rdi
78db(5): call 0x75(%rip)
78e0(2): jmp 0xffffffd0(%rip)
78e2(3): mov %rax,%r15
78e5(3): sub %r14,%r15
78e8(7): lea 0x800(%r15),%rax
78ef(5): mov %rax,0x8(%rsp)
78f4(2): jmp 0xffffffc2(%rip)

"randread_free" :
7900(1): push %rbp
7901(1): push %rbx
7902(7): mov $0xffffffff,%rdx
7909(3): mov %rdi,%rbx
790c(5): mov $0x1038,%esi
7911(4): sub $0x8,%rsp
7915(3): mov (%rdi),%rbp
7918(5): call 0xffffa728(%rip)
791d(3): mov %rbx,%rdi
7920(5): call 0xffffa330(%rip)
7925(3): test %rbp,%rbp
7928(2): jz 0x18(%rip)
792a(4): add $0x8,%rsp
792e(3): mov %rbp,%rdi
7931(1): pop %rbx
7932(1): pop %rbp
7933(5): jmp 0x159d(%rip)
7938(8): nop 0x0(%rax,%rax,1)
7940(4): add $0x8,%rsp
7944(2): xor %eax,%eax
7946(1): pop %rbx
7947(1): pop %rbp
7948(1): ret near (%rsp)

"isaac_refill" :
7950(7): mov 0x810(%rdi),%rax
7957(7): mov 0x800(%rdi),%rdx
795e(7): lea 0x400(%rdi),%r9
7965(4): lea 0x1(%rax),%rcx
7969(3): mov %rdi,%rax
796c(7): mov %rcx,0x810(%rdi)
7973(7): add 0x808(%rdi),%rcx
797a(6): nop 0x0(%rax,%rax,1)
7980(3): mov %rdx,%r8
7983(4): shl/sal $0x15,%r8
7987(3): xor %r8,%rdx
798a(3): mov (%rax),%r8
798d(3): not %rdx
7990(7): add 0x400(%rax),%rdx
7997(3): mov %r8,%r10
799a(7): and $0x7f8,%r10d
79a1(4): mov 0x0(%rdi,%r10,1),%r11
79a5(3): mov %rdx,%r10
79a8(4): shr $0x5,%r10
79ac(3): add %rdx,%r11
79af(3): xor %r10,%rdx
79b2(3): add %r11,%rcx
79b5(3): mov %rcx,(%rax)
79b8(4): shr $0x8,%rcx
79bc(6): and $0x7f8,%ecx
79c2(4): mov 0x0(%rdi,%rcx,1),%r11
79c6(3): add %r8,%r11
79c9(3): mov %r11,(%rsi)
79cc(7): add 0x408(%rax),%rdx
79d3(4): mov 0x8(%rax),%rcx
79d7(3): mov %rdx,%r10
79da(3): mov %rcx,%rdx
79dd(6): and $0x7f8,%edx
79e3(4): mov 0x0(%rdi,%rdx,1),%r8
79e7(3): mov %r10,%rdx
79ea(4): shl/sal $0xc,%rdx
79ee(3): xor %r10,%rdx
79f1(3): add %r10,%r8
79f4(3): add %r11,%r8
79f7(4): mov %r8,0x8(%rax)
79fb(4): shr $0x8,%r8
79ff(7): and $0x7f8,%r8d
7a06(4): add 0x0(%rdi,%r8,1),%rcx
7a0a(4): mov %rcx,0x8(%rsi)
7a0e(4): mov 0x10(%rax),%r8
7a12(3): mov %rcx,%r11
7a15(7): add 0x410(%rax),%rdx
7a1c(3): mov %r8,%rcx
7a1f(6): and $0x7f8,%ecx
7a25(4): mov 0x0(%rdi,%rcx,1),%r10
7a29(3): add %rdx,%r10
7a2c(3): mov %r10,%rcx
7a2f(3): add %r11,%rcx
7a32(4): mov %rcx,0x10(%rax)
7a36(4): shr $0x8,%rcx
7a3a(6): and $0x7f8,%ecx
7a40(4): mov 0x0(%rdi,%rcx,1),%r10
7a44(3): mov %rdx,%rcx
7a47(4): shr $0x21,%rcx
7a4b(3): xor %rcx,%rdx
7a4e(3): add %r8,%r10
7a51(4): mov %r10,0x10(%rsi)
7a55(4): mov 0x18(%rax),%rcx
7a59(7): add 0x418(%rax),%rdx
7a60(3): mov %rcx,%r8
7a63(7): and $0x7f8,%r8d
7a6a(4): mov 0x0(%rdi,%r8,1),%r11
7a6e(3): add %rdx,%r11
7a71(3): mov %r11,%r8
7a74(3): add %r10,%r8
7a77(4): add $0x20,%rax
7a7b(4): add $0x20,%rsi
7a7f(4): mov %r8,0xfffffff8(%rax)
7a83(4): shr $0x8,%r8
7a87(7): and $0x7f8,%r8d
7a8e(4): add 0x0(%rdi,%r8,1),%rcx
7a92(4): mov %rcx,0xfffffff8(%rsi)
7a96(3): cmp %r9,%rax
7a99(6): jb 0xfffffee7(%rip)
7a9f(7): lea 0x800(%rdi),%r9
7aa6(a): nop 0x0(%rax,%rax,1)
7ab0(3): mov %rdx,%r8
7ab3(4): shl/sal $0x15,%r8
7ab7(3): xor %r8,%rdx
7aba(3): mov (%rax),%r8
7abd(3): not %rdx
7ac0(7): add 0xfffffc00(%rax),%rdx
7ac7(3): mov %r8,%r10
7aca(7): and $0x7f8,%r10d
7ad1(4): mov 0x0(%rdi,%r10,1),%r11
7ad5(3): mov %rdx,%r10
7ad8(4): shr $0x5,%r10
7adc(3): add %rdx,%r11
7adf(3): xor %r10,%rdx
7ae2(3): add %r11,%rcx
7ae5(3): mov %rcx,(%rax)
7ae8(4): shr $0x8,%rcx
7aec(6): and $0x7f8,%ecx
7af2(4): mov 0x0(%rdi,%rcx,1),%r11
7af6(3): add %r8,%r11
7af9(3): mov %r11,(%rsi)
7afc(7): add 0xfffffc08(%rax),%rdx
7b03(4): mov 0x8(%rax),%rcx
7b07(3): mov %rdx,%r10
7b0a(3): mov %rcx,%rdx
7b0d(6): and $0x7f8,%edx
7b13(4): mov 0x0(%rdi,%rdx,1),%r8
7b17(3): mov %r10,%rdx
7b1a(4): shl/sal $0xc,%rdx
7b1e(3): xor %r10,%rdx
7b21(3): add %r10,%r8
7b24(3): add %r11,%r8
7b27(4): mov %r8,0x8(%rax)
7b2b(4): shr $0x8,%r8
7b2f(7): and $0x7f8,%r8d
7b36(4): add 0x0(%rdi,%r8,1),%rcx
7b3a(4): mov %rcx,0x8(%rsi)
7b3e(4): mov 0x10(%rax),%r8
7b42(3): mov %rcx,%r11
7b45(7): add 0xfffffc10(%rax),%rdx
7b4c(3): mov %r8,%rcx
7b4f(6): and $0x7f8,%ecx
7b55(4): mov 0x0(%rdi,%rcx,1),%r10
7b59(3): add %rdx,%r10
7b5c(3): mov %r10,%rcx
7b5f(3): add %r11,%rcx
7b62(4): mov %rcx,0x10(%rax)
7b66(4): shr $0x8,%rcx
7b6a(6): and $0x7f8,%ecx
7b70(4): mov 0x0(%rdi,%rcx,1),%r10
7b74(3): mov %rdx,%rcx
7b77(4): shr $0x21,%rcx
7b7b(3): xor %rcx,%rdx
7b7e(3): add %r8,%r10
7b81(4): mov %r10,0x10(%rsi)
7b85(4): mov 0x18(%rax),%rcx
7b89(7): add 0xfffffc18(%rax),%rdx
7b90(3): mov %rcx,%r8
7b93(7): and $0x7f8,%r8d
7b9a(4): mov 0x0(%rdi,%r8,1),%r11
7b9e(3): add %rdx,%r11
7ba1(3): mov %r11,%r8
7ba4(3): add %r10,%r8
7ba7(4): add $0x20,%rax
7bab(4): add $0x20,%rsi
7baf(4): mov %r8,0xfffffff8(%rax)
7bb3(4): shr $0x8,%r8
7bb7(7): and $0x7f8,%r8d
7bbe(4): add 0x0(%rdi,%r8,1),%rcx
7bc2(4): mov %rcx,0xfffffff8(%rsi)
7bc6(3): cmp %r9,%rax
7bc9(6): jb 0xfffffee7(%rip)
7bcf(7): mov %rdx,0x800(%rdi)
7bd6(7): mov %rcx,0x808(%rdi)
7bdd(1): ret near (%rsp)

"isaac_seed" :
7be0(2): push %r13
7be2(2): push %r12
7be4(7): lea 0x800(%rdi),%r12
7beb(1): push %rbp
7bec(3): mov %rdi,%rdx
7bef(1): push %rbx
7bf0(3): mov %rdi,%rax
7bf3(a): mov $0x-7424904924229222229,%rcx
7bfd(a): mov $0x-5865837416287532563,%r10
7c07(a): mov $0x5259722845879046933,%rbp
7c11(a): mov $0x-9011610652101975858,%rsi
7c1b(a): mov $0x-5576812576440232668,%r8
7c25(a): mov $0x-8354558816804203872,%rbx
7c2f(a): mov $0x-5046086420515862430,%r11
7c39(a): mov $0x7240739780546808700,%r9
7c43(5): nop 0x0(%rax,%rax,1)
7c48(4): add 0x20(%rax),%rsi
7c4c(4): add 0x38(%rax),%rcx
7c50(3): mov (%rax),%r13
7c53(4): add 0x28(%rax),%rbp
7c57(4): add 0x30(%rax),%r10
7c5b(3): sub %rsi,%r13
7c5e(3): add %r13,%r9
7c61(3): mov %rcx,%r13
7c64(4): shr $0x9,%r13
7c68(3): add %r9,%rcx
7c6b(3): xor %r13,%rbp
7c6e(4): mov 0x8(%rax),%r13
7c72(3): sub %rbp,%r13
7c75(3): add %r13,%r11
7c78(3): mov %r9,%r13
7c7b(4): shl/sal $0x9,%r13
7c7f(3): add %r11,%r9
7c82(3): xor %r13,%r10
7c85(4): mov 0x10(%rax),%r13
7c89(3): sub %r10,%r13
7c8c(3): add %r13,%rbx
7c8f(3): mov %r11,%r13
7c92(4): shr $0x17,%r13
7c96(3): add %rbx,%r11
7c99(3): xor %r13,%rcx
7c9c(4): mov 0x18(%rax),%r13
7ca0(3): sub %rcx,%r13
7ca3(3): add %r13,%r8
7ca6(3): mov %rbx,%r13
7ca9(4): shl/sal $0xf,%r13
7cad(3): add %r8,%rbx
7cb0(3): xor %r13,%r9
7cb3(3): mov %r8,%r13
7cb6(3): sub %r9,%rsi
7cb9(4): shr $0xe,%r13
7cbd(3): mov %r9,(%rax)
7cc0(3): xor %r13,%r11
7cc3(3): mov %rsi,%r13
7cc6(3): add %rsi,%r8
7cc9(3): sub %r11,%rbp
7ccc(4): shl/sal $0x14,%r13
7cd0(4): mov %r11,0x8(%rax)
7cd4(3): xor %r13,%rbx
7cd7(4): lea 0x0(%rsi,%rbp,1),%r13
7cdb(3): mov %rbp,%rsi
7cde(3): sub %rbx,%r10
7ce1(4): shr $0x11,%rsi
7ce5(4): mov %rbx,0x10(%rax)
7ce9(3): xor %rsi,%r8
7cec(3): mov %r10,%rsi
7cef(3): add %r10,%rbp
7cf2(3): sub %r8,%rcx
7cf5(4): shl/sal $0xe,%rsi
7cf9(4): mov %r8,0x18(%rax)
7cfd(3): xor %r13,%rsi
7d00(3): add %rcx,%r10
7d03(4): mov %rbp,0x28(%rax)
7d07(4): mov %rsi,0x20(%rax)
7d0b(4): mov %r10,0x30(%rax)
7d0f(4): add $0x40,%rax
7d13(4): mov %rcx,0xfffffff8(%rax)
7d17(3): cmp %rax,%r12
7d1a(6): jnz 0xffffff2e(%rip)
7d20(4): add 0x20(%rdx),%rsi
7d24(4): add 0x38(%rdx),%rcx
7d28(3): mov (%rdx),%r12
7d2b(4): add 0x28(%rdx),%rbp
7d2f(4): add 0x30(%rdx),%r10
7d33(3): sub %rsi,%r12
7d36(3): add %r12,%r9
7d39(3): mov %rcx,%r12
7d3c(4): shr $0x9,%r12
7d40(3): add %r9,%rcx
7d43(3): xor %r12,%rbp
7d46(4): mov 0x8(%rdx),%r12
7d4a(3): sub %rbp,%r12
7d4d(3): add %r12,%r11
7d50(3): mov %r9,%r12
7d53(4): shl/sal $0x9,%r12
7d57(3): add %r11,%r9
7d5a(3): xor %r12,%r10
7d5d(4): mov 0x10(%rdx),%r12
7d61(3): sub %r10,%r12
7d64(3): add %r12,%rbx
7d67(3): mov %r11,%r12
7d6a(4): shr $0x17,%r12
7d6e(3): add %rbx,%r11
7d71(3): xor %r12,%rcx
7d74(4): mov 0x18(%rdx),%r12
7d78(3): sub %rcx,%r12
7d7b(3): add %r12,%r8
7d7e(3): mov %rbx,%r12
7d81(4): shl/sal $0xf,%r12
7d85(3): add %r8,%rbx
7d88(3): xor %r12,%r9
7d8b(3): mov %r8,%r12
7d8e(3): sub %r9,%rsi
7d91(4): shr $0xe,%r12
7d95(3): mov %r9,(%rdx)
7d98(3): xor %r12,%r11
7d9b(3): mov %rsi,%r12
7d9e(3): add %rsi,%r8
7da1(3): sub %r11,%rbp
7da4(4): shl/sal $0x14,%r12
7da8(4): mov %r11,0x8(%rdx)
7dac(3): xor %r12,%rbx
7daf(4): lea 0x0(%rsi,%rbp,1),%r12
7db3(3): mov %rbp,%rsi
7db6(3): sub %rbx,%r10
7db9(4): shr $0x11,%rsi
7dbd(4): mov %rbx,0x10(%rdx)
7dc1(3): xor %rsi,%r8
7dc4(3): mov %r10,%rsi
7dc7(3): add %r10,%rbp
7dca(3): sub %r8,%rcx
7dcd(4): shl/sal $0xe,%rsi
7dd1(4): mov %r8,0x18(%rdx)
7dd5(3): xor %r12,%rsi
7dd8(3): add %rcx,%r10
7ddb(4): mov %rbp,0x28(%rdx)
7ddf(4): mov %rsi,0x20(%rdx)
7de3(4): mov %r10,0x30(%rdx)
7de7(4): add $0x40,%rdx
7deb(4): mov %rcx,0xfffffff8(%rdx)
7def(3): cmp %rdx,%rax
7df2(6): jnz 0xffffff2e(%rip)
7df8(1): pop %rbx
7df9(b): mov $0x0,0x810(%rdi)
7e04(b): mov $0x0,0x808(%rdi)
7e0f(1): pop %rbp
7e10(b): mov $0x0,0x800(%rdi)
7e1b(2): pop %r12
7e1d(2): pop %r13
7e1f(1): ret near (%rsp)

"renameatu" :
7e20(2): push %r15
7e22(2): push %r14
7e24(3): mov %r8d,%r9d
7e27(2): push %r13
7e29(2): push %r12
7e2b(3): mov %edx,%r14d
7e2e(1): push %rbp
7e2f(1): push %rbx
7e30(3): mov %rsi,%r12
7e33(3): mov %rcx,%r13
7e36(3): mov %r8d,%ebp
7e39(3): mov %rcx,%r8
7e3c(7): sub $0x148,%rsp
7e43(2): mov %edx,%ecx
7e45(3): mov %rsi,%rdx
7e48(9): mov $0x28,%rax
7e51(8): mov %rax,0x138(%rsp)
7e59(2): xor %eax,%eax
7e5b(2): mov %edi,%esi
7e5d(4): mov %edi,0x4(%rsp)
7e61(5): mov $0x13c,%edi
7e66(5): call 0xffffa08a(%rip)
7e6b(3): mov %rax,%rbx
7e6e(3): mov %eax,%r15d
7e71(5): call 0xffff9dff(%rip)
7e76(2): test %ebx,%ebx
7e78(2): js 0x38(%rip)
7e7a(8): mov 0x138(%rsp),%rdx
7e82(9): xor $0x28,%rdx
7e8b(3): mov %r15d,%eax
7e8e(6): jnz 0x1f7(%rip)
7e94(7): add $0x148,%rsp
7e9b(1): pop %rbx
7e9c(1): pop %rbp
7e9d(2): pop %r12
7e9f(2): pop %r13
7ea1(2): pop %r14
7ea3(2): pop %r15
7ea5(1): ret near (%rsp)
7ea6(a): nop 0x0(%rax,%rax,1)
7eb0(3): mov %rax,%r9
7eb3(2): mov (%rax),%eax
7eb5(3): lea 0xffffffea(%rax),%ecx
7eb8(3): and $0xef,%ecx
7ebb(3): setnz %bl
7ebe(3): cmp $0x5f,%eax
7ec1(3): setnz %al
7ec4(2): and %al,%bl
7ec6(2): jnz 0xffffffb4(%rip)
7ec8(2): test %ebp,%ebp
7eca(2): jnz 0x56(%rip)
7ecc(3): mov %r12,%rdi
7ecf(5): mov %r9,0x8(%rsp)
7ed4(5): call 0xffff9ebc(%rip)
7ed9(3): mov %r13,%rdi
7edc(3): mov %rax,%rbp
7edf(5): call 0xffff9eb1(%rip)
7ee4(3): test %rbp,%rbp
7ee7(2): jz 0x1c(%rip)
7ee9(3): test %rax,%rax
7eec(5): mov 0x8(%rsp),%r9
7ef1(2): jz 0x12(%rip)
7ef3(6): cmp $0x2f,0xffffffff(%r12,%rbp,1)
7ef9(2): jz 0x47(%rip)
7efb(6): cmp $0x2f,0xffffffff(%r13,%rax,1)
7f01(2): jz 0x3f(%rip)
7f03(4): mov 0x4(%rsp),%edi
7f07(3): mov %r13,%rcx
7f0a(3): mov %r14d,%edx
7f0d(3): mov %r12,%rsi
7f10(5): call 0xffffa180(%rip)
7f15(3): mov %eax,%r15d
7f18(5): jmp 0xffffff62(%rip)
7f1d(3): nop (%rax)
7f20(3): and $0xfe,%ebp
7f23(2): jz 0x6d(%rip)
7f25(7): mov $0x5f,(%r9)
7f2c(6): mov $0xffffffff,%r15d
7f32(5): jmp 0xffffff48(%rip)
7f37(9): nop 0x0(%rax,%rax,1)
7f40(4): mov 0x4(%rsp),%esi
7f44(5): lea 0x10(%rsp),%rcx
7f49(6): mov $0x100,%r8d
7f4f(3): mov %r12,%rdx
7f52(5): mov $0x1,%edi
7f57(5): mov %r9,0x8(%rsp)
7f5c(5): call 0xffff9e94(%rip)
7f61(2): test %eax,%eax
7f63(2): jnz 0x66(%rip)
7f65(2): test %bl,%bl
7f67(5): mov 0x8(%rsp),%r9
7f6c(2): jz 0x7e(%rip)
7f6e(4): mov 0x28(%rsp),%eax
7f72(5): and $0xf000,%eax
7f77(5): cmp $0x4000,%eax
7f7c(2): jz 0xffffff87(%rip)
7f7e(7): mov $0x2,(%r9)
7f85(6): mov $0xffffffff,%r15d
7f8b(5): jmp 0xfffffeef(%rip)
7f90(8): lea 0xa0(%rsp),%rcx
7f98(6): mov $0x100,%r8d
7f9e(3): mov %r13,%rdx
7fa1(3): mov %r14d,%esi
7fa4(5): mov $0x1,%edi
7fa9(5): mov %r9,0x8(%rsp)
7fae(5): call 0xffff9e42(%rip)
7fb3(2): test %eax,%eax
7fb5(5): mov 0x8(%rsp),%r9
7fba(2): jz 0x1e(%rip)
7fbc(3): mov (%r9),%eax
7fbf(3): cmp $0x4b,%eax
7fc2(2): jz 0x16(%rip)
7fc4(3): cmp $0x2,%eax
7fc7(2): jz 0x71(%rip)
7fc9(6): mov $0xffffffff,%r15d
7fcf(5): jmp 0xfffffeab(%rip)
7fd4(4): nop 0x0(%rax)
7fd8(7): mov $0x11,(%r9)
7fdf(6): mov $0xffffffff,%r15d
7fe5(5): jmp 0xfffffe95(%rip)
7fea(8): lea 0xa0(%rsp),%rcx
7ff2(6): mov $0x100,%r8d
7ff8(3): mov %r13,%rdx
7ffb(3): mov %r14d,%esi
7ffe(5): mov $0x1,%edi
8003(5): mov %r9,0x8(%rsp)
8008(5): call 0xffff9de8(%rip)
800d(2): test %eax,%eax
800f(5): mov 0x8(%rsp),%r9
8014(2): jz 0x2e(%rip)
8016(4): cmp $0x2,(%r9)
801a(2): jnz 0xffffffaf(%rip)
801c(4): mov 0x28(%rsp),%eax
8020(5): and $0xf000,%eax
8025(5): cmp $0x4000,%eax
802a(2): jnz 0xffffff9f(%rip)
802c(5): jmp 0xfffffed7(%rip)
8031(7): nop 0x0(%rax)
8038(5): mov $0x1,%ebx
803d(5): jmp 0xfffffe8f(%rip)
8042(7): mov 0xb8(%rsp),%eax
8049(5): and $0xf000,%eax
804e(5): cmp $0x4000,%eax
8053(2): jz 0xe(%rip)
8055(7): mov $0x14,(%r9)
805c(5): jmp 0xffffff6d(%rip)
8061(4): mov 0x28(%rsp),%eax
8065(5): and $0xf000,%eax
806a(5): cmp $0x4000,%eax
806f(6): jz 0xfffffe94(%rip)
8075(7): mov $0x15,(%r9)
807c(4): or $0xff,%r15d
8080(5): jmp 0xfffffdfa(%rip)
8085(5): call 0xffff9d1b(%rip)

"fd_safer" :
8090(2): push %r13
8092(2): push %r12
8094(1): push %rbp
8095(1): push %rbx
8096(2): mov %edi,%ebx
8098(4): sub $0x8,%rsp
809c(3): cmp $0x2,%edi
809f(2): jnbe 0x23(%rip)
80a1(5): call 0x141f(%rip)
80a6(3): mov %eax,%r12d
80a9(5): call 0xffff9bc7(%rip)
80ae(3): mov (%rax),%r13d
80b1(3): mov %rax,%rbp
80b4(2): mov %ebx,%edi
80b6(5): call 0xffff9dda(%rip)
80bb(3): mov %r12d,%ebx
80be(4): mov %r13d,0x0(%rbp)
80c2(4): add $0x8,%rsp
80c6(2): mov %ebx,%eax
80c8(1): pop %rbx
80c9(1): pop %rbp
80ca(2): pop %r12
80cc(2): pop %r13
80ce(1): ret near (%rsp)

"version_etc_arn" :
80d0(2): push %r15
80d2(2): push %r14
80d4(2): push %r13
80d6(2): push %r12
80d8(3): mov %r9,%r12
80db(1): push %rbp
80dc(1): push %rbx
80dd(3): mov %rdi,%rbp
80e0(3): mov %r8,%rbx
80e3(4): sub $0x28,%rsp
80e7(3): test %rsi,%rsi
80ea(6): jz 0x11e(%rip)
80f0(3): mov %rdx,%r8
80f3(7): lea 0x2c5d(%rip),%rdx
80fa(3): mov %rcx,%r9
80fd(2): xor %eax,%eax
80ff(3): mov %rsi,%rcx
8102(5): mov $0x1,%esi
8107(5): call 0xffff9fd9(%rip)
810c(7): lea 0x2c57(%rip),%rsi
8113(2): xor %edi,%edi
8115(5): mov $0x5,%edx
811a(5): call 0xffff9c56(%rip)
811f(7): lea 0x2f5a(%rip),%rdx
8126(3): mov %rax,%rcx
8129(6): mov $0x7e3,%r8d
812f(5): mov $0x1,%esi
8134(3): mov %rbp,%rdi
8137(2): xor %eax,%eax
8139(5): call 0xffff9fa7(%rip)
813e(7): lea 0x2cab(%rip),%rsi
8145(2): xor %edi,%edi
8147(5): mov $0x5,%edx
814c(5): call 0xffff9c24(%rip)
8151(3): mov %rbp,%rsi
8154(3): mov %rax,%rdi
8157(5): call 0xffff9d59(%rip)
815c(4): cmp $0x9,%r12
8160(6): jnbe 0x340(%rip)
8166(7): lea 0x2edf(%rip),%rdx
816d(4): movsxd 0x0(%rdx,%r12,4),%rax
8171(3): add %rdx,%rax
8174(2): jmp %rax
8176(a): nop 0x0(%rax,%rax,1)
8180(4): mov 0x38(%rbx),%r9
8184(4): mov 0x10(%rbx),%rax
8188(7): lea 0x2dd1(%rip),%rsi
818f(4): mov 0x8(%rbx),%r8
8193(5): mov $0x5,%edx
8198(2): xor %edi,%edi
819a(4): mov 0x30(%rbx),%r13
819e(4): mov 0x28(%rbx),%r12
81a2(5): mov %r9,0x10(%rsp)
81a7(4): mov 0x20(%rbx),%r15
81ab(4): mov 0x18(%rbx),%r14
81af(4): mov %rax,(%rsp)
81b3(5): mov %r8,0x8(%rsp)
81b8(3): mov (%rbx),%rbx
81bb(5): call 0xffff9bb5(%rip)
81c0(4): sub $0x8,%rsp
81c4(5): mov 0x18(%rsp),%r9
81c9(3): mov %rax,%rdx
81cc(3): mov %rbx,%rcx
81cf(5): mov $0x1,%esi
81d4(3): mov %rbp,%rdi
81d7(2): xor %eax,%eax
81d9(2): push %r9
81db(2): push %r13
81dd(2): push %r12
81df(2): push %r15
81e1(2): push %r14
81e3(5): mov 0x30(%rsp),%r9
81e8(5): mov 0x38(%rsp),%r8
81ed(5): call 0xffff9ef3(%rip)
81f2(4): add $0x30,%rsp
81f6(4): add $0x28,%rsp
81fa(1): pop %rbx
81fb(1): pop %rbp
81fc(2): pop %r12
81fe(2): pop %r13
8200(2): pop %r14
8202(2): pop %r15
8204(1): ret near (%rsp)
8205(3): nop (%rax)
8208(3): mov %rcx,%r8
820b(3): mov %rdx,%rcx
820e(7): lea 0x2b4e(%rip),%rdx
8215(5): mov $0x1,%esi
821a(2): xor %eax,%eax
821c(5): call 0xffff9ec4(%rip)
8221(5): jmp 0xfffffeeb(%rip)
8226(a): nop 0x0(%rax,%rax,1)
8230(4): mov 0x40(%rbx),%r10
8234(4): mov 0x38(%rbx),%r9
8238(7): lea 0x2d51(%rip),%rsi
823f(4): mov 0x10(%rbx),%rax
8243(4): mov 0x8(%rbx),%r8
8247(5): mov $0x5,%edx
824c(4): mov 0x30(%rbx),%r13
8250(4): mov 0x28(%rbx),%r12
8254(4): mov 0x20(%rbx),%r15
8258(4): mov 0x18(%rbx),%r14
825c(3): mov (%rbx),%rbx
825f(5): mov %r10,0x18(%rsp)
8264(5): mov %r9,0x10(%rsp)
8269(4): mov %rax,(%rsp)
826d(5): mov %r8,0x8(%rsp)
8272(2): xor %edi,%edi
8274(5): call 0xffff9afc(%rip)
8279(5): mov 0x18(%rsp),%r10
827e(2): push %r10
8280(5): jmp 0xffffff44(%rip)
8285(3): nop (%rax)
8288(3): mov (%rbx),%rbx
828b(7): lea 0x2adc(%rip),%rsi
8292(5): mov $0x5,%edx
8297(2): xor %edi,%edi
8299(5): call 0xffff9ad7(%rip)
829e(4): add $0x28,%rsp
82a2(3): mov %rbx,%rcx
82a5(3): mov %rbp,%rdi
82a8(1): pop %rbx
82a9(1): pop %rbp
82aa(2): pop %r12
82ac(2): pop %r13
82ae(2): pop %r14
82b0(2): pop %r15
82b2(3): mov %rax,%rdx
82b5(5): mov $0x1,%esi
82ba(2): xor %eax,%eax
82bc(5): jmp 0xffff9e24(%rip)
82c1(7): nop 0x0(%rax)
82c8(4): mov 0x8(%rbx),%r12
82cc(7): lea 0x2aab(%rip),%rsi
82d3(3): mov (%rbx),%rbx
82d6(5): mov $0x5,%edx
82db(2): xor %edi,%edi
82dd(5): call 0xffff9a93(%rip)
82e2(4): add $0x28,%rsp
82e6(3): mov %r12,%r8
82e9(3): mov %rbx,%rcx
82ec(3): mov %rbp,%rdi
82ef(3): mov %rax,%rdx
82f2(5): mov $0x1,%esi
82f7(1): pop %rbx
82f8(1): pop %rbp
82f9(2): pop %r12
82fb(2): pop %r13
82fd(2): pop %r14
82ff(2): pop %r15
8301(2): xor %eax,%eax
8303(5): jmp 0xffff9ddd(%rip)
8308(8): nop 0x0(%rax,%rax,1)
8310(4): mov 0x10(%rbx),%r13
8314(4): mov 0x8(%rbx),%r12
8318(7): lea 0x2a76(%rip),%rsi
831f(3): mov (%rbx),%rbx
8322(5): mov $0x5,%edx
8327(2): xor %edi,%edi
8329(5): call 0xffff9a47(%rip)
832e(4): add $0x28,%rsp
8332(3): mov %r13,%r9
8335(3): mov %r12,%r8
8338(3): mov %rbx,%rcx
833b(3): mov %rbp,%rdi
833e(3): mov %rax,%rdx
8341(1): pop %rbx
8342(1): pop %rbp
8343(2): pop %r12
8345(2): pop %r13
8347(2): pop %r14
8349(2): pop %r15
834b(5): mov $0x1,%esi
8350(2): xor %eax,%eax
8352(5): jmp 0xffff9d8e(%rip)
8357(9): nop 0x0(%rax,%rax,1)
8360(7): lea 0x2b59(%rip),%rsi
8367(5): mov $0x5,%edx
836c(2): xor %edi,%edi
836e(4): mov 0x18(%rbx),%r14
8372(4): mov 0x10(%rbx),%r13
8376(4): mov 0x8(%rbx),%r12
837a(3): mov (%rbx),%rbx
837d(5): call 0xffff99f3(%rip)
8382(4): sub $0x8,%rsp
8386(2): push %r14
8388(3): mov %rax,%rdx
838b(3): mov %r13,%r9
838e(3): mov %r12,%r8
8391(3): mov %rbx,%rcx
8394(3): mov %rbp,%rdi
8397(5): mov $0x1,%esi
839c(2): xor %eax,%eax
839e(5): call 0xffff9d42(%rip)
83a3(1): pop %rax
83a4(1): pop %rdx
83a5(4): add $0x28,%rsp
83a9(1): pop %rbx
83aa(1): pop %rbp
83ab(2): pop %r12
83ad(2): pop %r13
83af(2): pop %r14
83b1(2): pop %r15
83b3(1): ret near (%rsp)
83b4(4): nop 0x0(%rax)
83b8(4): mov 0x20(%rbx),%r15
83bc(7): lea 0x2b1d(%rip),%rsi
83c3(5): mov $0x5,%edx
83c8(2): xor %edi,%edi
83ca(4): mov 0x18(%rbx),%r14
83ce(4): mov 0x10(%rbx),%r13
83d2(4): mov 0x8(%rbx),%r12
83d6(3): mov (%rbx),%rbx
83d9(5): call 0xffff9997(%rip)
83de(2): push %r15
83e0(2): jmp 0xffffffa6(%rip)
83e2(6): nop 0x0(%rax,%rax,1)
83e8(4): mov 0x8(%rbx),%r8
83ec(4): mov 0x28(%rbx),%r12
83f0(7): lea 0x2b11(%rip),%rsi
83f7(4): mov 0x20(%rbx),%r15
83fb(4): mov 0x18(%rbx),%r14
83ff(5): mov $0x5,%edx
8404(4): mov 0x10(%rbx),%r13
8408(2): xor %edi,%edi
840a(3): mov (%rbx),%rbx
840d(4): mov %r8,(%rsp)
8411(5): call 0xffff995f(%rip)
8416(4): sub $0x8,%rsp
841a(3): mov %r13,%r9
841d(2): push %r12
841f(2): push %r15
8421(2): push %r14
8423(5): mov 0x20(%rsp),%r8
8428(3): mov %rbx,%rcx
842b(3): mov %rax,%rdx
842e(3): mov %rbp,%rdi
8431(5): mov $0x1,%esi
8436(2): xor %eax,%eax
8438(5): call 0xffff9ca8(%rip)
843d(4): add $0x20,%rsp
8441(4): add $0x28,%rsp
8445(1): pop %rbx
8446(1): pop %rbp
8447(2): pop %r12
8449(2): pop %r13
844b(2): pop %r14
844d(2): pop %r15
844f(1): ret near (%rsp)
8450(4): mov 0x10(%rbx),%r9
8454(4): mov 0x30(%rbx),%r13
8458(7): lea 0x2ad1(%rip),%rsi
845f(4): mov 0x28(%rbx),%r12
8463(4): mov 0x20(%rbx),%r15
8467(5): mov $0x5,%edx
846c(4): mov 0x18(%rbx),%r14
8470(4): mov 0x8(%rbx),%r8
8474(2): xor %edi,%edi
8476(5): mov %r9,0x8(%rsp)
847b(3): mov (%rbx),%rbx
847e(4): mov %r8,(%rsp)
8482(5): call 0xffff98ee(%rip)
8487(2): push %r13
8489(2): push %r12
848b(2): push %r15
848d(2): push %r14
848f(5): mov 0x28(%rsp),%r9
8494(2): jmp 0xffffff8f(%rip)
8496(a): nop 0x0(%rax,%rax,1)
84a0(4): mov 0x40(%rbx),%r10
84a4(4): mov 0x38(%rbx),%r9
84a8(5): mov $0x5,%edx
84ad(4): mov 0x10(%rbx),%rax
84b1(4): mov 0x8(%rbx),%r8
84b5(7): lea 0x2b0c(%rip),%rsi
84bc(4): mov 0x30(%rbx),%r13
84c0(4): mov 0x28(%rbx),%r12
84c4(4): mov 0x20(%rbx),%r15
84c8(4): mov 0x18(%rbx),%r14
84cc(5): mov %r10,0x18(%rsp)
84d1(5): mov %r9,0x10(%rsp)
84d6(4): mov %rax,(%rsp)
84da(5): mov %r8,0x8(%rsp)
84df(3): mov (%rbx),%rbx
84e2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
84f0(3): xor %r9d,%r9d
84f3(4): cmp $0x0,(%r8)
84f7(2): jz 0x14(%rip)
84f9(7): nop 0x0(%rax)
8500(4): add $0x1,%r9
8504(5): cmp $0x0,0x0(%r8,%r9,8)
8509(2): jnz 0xfffffff7(%rip)
850b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
8510(4): sub $0x68,%rsp
8514(3): mov %r8,%r10
8517(3): xor %r9d,%r9d
851a(9): mov $0x28,%rax
8523(5): mov %rax,0x58(%rsp)
8528(2): xor %eax,%eax
852a(3): mov %rsp,%r8
852d(3): nop (%rax)
8530(3): mov (%r10),%eax
8533(3): cmp $0x2f,%eax
8536(2): jnbe 0x44(%rip)
8538(3): mov %eax,%r11d
853b(4): add 0x10(%r10),%r11
853f(3): add $0x8,%eax
8542(3): mov %eax,(%r10)
8545(3): mov (%r11),%rax
8548(3): test %rax,%rax
854b(4): mov %rax,0x0(%r8,%r9,8)
854f(2): jz 0xc(%rip)
8551(4): add $0x1,%r9
8555(4): cmp $0xa,%r9
8559(2): jnz 0xffffffd7(%rip)
855b(5): call 0xfffffb75(%rip)
8560(5): mov 0x58(%rsp),%rax
8565(9): xor $0x28,%rax
856e(2): jnz 0x7(%rip)
8570(4): add $0x68,%rsp
8574(1): ret near (%rsp)
8575(5): call 0xffff982b(%rip)
857a(4): mov 0x8(%r10),%r11
857e(4): lea 0x8(%r11),%rax
8582(4): mov %rax,0x8(%r10)
8586(2): jmp 0xffffffbf(%rip)

"version_etc" :
8590(1): push %rbp
8591(1): push %rbx
8592(6): mov $0x20,%r10d
8598(3): xor %r11d,%r11d
859b(7): sub $0xb8,%rsp
85a2(9): mov $0x28,%rax
85ab(5): mov %rax,0x78(%rsp)
85b0(2): xor %eax,%eax
85b2(8): lea 0xd0(%rsp),%rax
85ba(8): mov %r8,0xa0(%rsp)
85c2(8): lea 0xd0(%rsp),%rbx
85ca(5): lea 0x20(%rsp),%r8
85cf(8): mov %r9,0xa8(%rsp)
85d7(8): mov $0x20,0x8(%rsp)
85df(5): mov %rax,0x10(%rsp)
85e4(8): lea 0x80(%rsp),%rax
85ec(3): xor %r9d,%r9d
85ef(5): mov %rax,0x18(%rsp)
85f4(3): mov %rax,%rbp
85f7(9): nop 0x0(%rax,%rax,1)
8600(4): cmp $0x2f,%r10d
8604(2): jnbe 0x58(%rip)
8606(3): mov %r10d,%eax
8609(6): mov $0x1,%r11d
860f(4): add $0x8,%r10d
8613(3): add %rbp,%rax
8616(3): mov (%rax),%rax
8619(3): test %rax,%rax
861c(4): mov %rax,0x0(%r8,%r9,8)
8620(2): jz 0xc(%rip)
8622(4): add $0x1,%r9
8626(4): cmp $0xa,%r9
862a(2): jnz 0xffffffd6(%rip)
862c(3): test %r11b,%r11b
862f(2): jnz 0x26(%rip)
8631(5): call 0xfffffa9f(%rip)
8636(5): mov 0x78(%rsp),%rax
863b(9): xor $0x28,%rax
8644(2): jnz 0xc(%rip)
8646(7): add $0xb8,%rsp
864d(1): pop %rbx
864e(1): pop %rbp
864f(1): ret near (%rsp)
8650(5): call 0xffff9750(%rip)
8655(5): mov %r10d,0x8(%rsp)
865a(2): jmp 0xffffffd7(%rip)
865c(3): mov %rbx,%rax
865f(4): add $0x8,%rbx
8663(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
8670(1): push %rbx
8671(7): lea 0x2739(%rip),%rsi
8678(5): mov $0x5,%edx
867d(2): xor %edi,%edi
867f(5): call 0xffff96f1(%rip)
8684(7): lea 0x273b(%rip),%rdx
868b(3): mov %rax,%rsi
868e(5): mov $0x1,%edi
8693(2): xor %eax,%eax
8695(5): call 0xffff994b(%rip)
869a(7): lea 0x273b(%rip),%rsi
86a1(5): mov $0x5,%edx
86a6(2): xor %edi,%edi
86a8(5): call 0xffff96c8(%rip)
86ad(7): lea 0x1dbc(%rip),%rcx
86b4(7): lea 0x1039(%rip),%rdx
86bb(3): mov %rax,%rsi
86be(5): mov $0x1,%edi
86c3(2): xor %eax,%eax
86c5(5): call 0xffff991b(%rip)
86ca(7): mov 0x2059d7(%rip),%rbx
86d1(7): lea 0x2930(%rip),%rsi
86d8(2): xor %edi,%edi
86da(5): mov $0x5,%edx
86df(5): call 0xffff9691(%rip)
86e4(3): mov %rbx,%rsi
86e7(3): mov %rax,%rdi
86ea(1): pop %rbx
86eb(5): jmp 0xffff97c5(%rip)

"xmalloc" :
86f0(1): push %rbx
86f1(3): mov %rdi,%rbx
86f4(5): call 0xffff985c(%rip)
86f9(3): test %rax,%rax
86fc(2): jnz 0x7(%rip)
86fe(3): test %rbx,%rbx
8701(2): jnz 0x4(%rip)
8703(1): pop %rbx
8704(1): ret near (%rsp)
8705(5): call 0x23b(%rip)

"xnmalloc" :
8710(3): mov %rdi,%rax
8713(3): mul %rax,%rsi,%rdx
8716(3): mov %rax,%rdi
8719(3): seto %al
871c(3): test %rdi,%rdi
871f(2): js 0xc(%rip)
8721(3): movzx %al,%eax
8724(3): test %rax,%rax
8727(2): jnz 0x4(%rip)
8729(2): jmp 0xffffffc7(%rip)
872b(4): sub $0x8,%rsp
872f(5): call 0x211(%rip)

"xrealloc" :
8750(3): test %rsi,%rsi
8753(1): push %rbx
8754(3): mov %rsi,%rbx
8757(2): jnz 0x7(%rip)
8759(3): test %rdi,%rdi
875c(2): jnz 0x1c(%rip)
875e(3): mov %rbx,%rsi
8761(5): call 0xffff983f(%rip)
8766(3): test %rax,%rax
8769(2): jnz 0x7(%rip)
876b(3): test %rbx,%rbx
876e(2): jnz 0x13(%rip)
8770(1): pop %rbx
8771(1): ret near (%rsp)
8772(6): nop 0x0(%rax,%rax,1)
8778(5): call 0xffff94d8(%rip)
877d(2): xor %eax,%eax
877f(1): pop %rbx
8780(1): ret near (%rsp)
8781(5): call 0x1bf(%rip)

"xnrealloc" :
8790(3): mov %rsi,%rax
8793(3): mul %rax,%rdx,%rdx
8796(3): mov %rax,%rsi
8799(3): seto %al
879c(3): test %rsi,%rsi
879f(2): js 0xc(%rip)
87a1(3): movzx %al,%eax
87a4(3): test %rax,%rax
87a7(2): jnz 0x4(%rip)
87a9(2): jmp 0xffffffa7(%rip)
87ab(4): sub $0x8,%rsp
87af(5): call 0x191(%rip)

"x2nrealloc" :
87c0(3): test %rdi,%rdi
87c3(3): mov %rdx,%r9
87c6(3): mov (%rsi),%rcx
87c9(2): jz 0x37(%rip)
87cb(2): xor %edx,%edx
87cd(a): mov $0x6148914691236517204,%rax
87d7(3): div %r9,%rax
87da(3): cmp %rcx,%rax
87dd(2): jbe 0x3e(%rip)
87df(3): mov %rcx,%rax
87e2(3): shr $0x1,%rax
87e5(5): lea 0x1(%rax,%rcx,1),%rcx
87ea(3): mov %rcx,(%rsi)
87ed(4): imul %r9,%rcx
87f1(3): mov %rcx,%rsi
87f4(5): jmp 0xffffff5c(%rip)
87f9(7): nop 0x0(%rax)
8800(3): test %rcx,%rcx
8803(2): jz 0x25(%rip)
8805(3): mov %rcx,%rax
8808(3): mul %rax,%r9,%rdx
880b(3): seto %dl
880e(3): test %rax,%rax
8811(3): movzx %dl,%edx
8814(2): js 0x7(%rip)
8816(3): test %rdx,%rdx
8819(2): jz 0xffffffd1(%rip)
881b(4): sub $0x8,%rsp
881f(5): call 0x121(%rip)
8824(4): nop 0x0(%rax)
8828(2): xor %edx,%edx
882a(5): mov $0x80,%eax
882f(3): xor %r8d,%r8d
8832(3): div %r9,%rax
8835(3): test %rax,%rax
8838(4): setz %r8b
883c(4): lea 0x0(%r8,%rax,1),%rcx
8840(2): jmp 0xffffffc5(%rip)

"x2realloc" :
8850(3): test %rdi,%rdi
8853(3): mov (%rsi),%rax
8856(2): jz 0x2a(%rip)
8858(a): mov $0x6148914691236517203,%rdx
8862(3): cmp %rdx,%rax
8865(2): jnbe 0x2c(%rip)
8867(3): mov %rax,%rdx
886a(3): shr $0x1,%rdx
886d(5): lea 0x1(%rdx,%rax,1),%rax
8872(3): mov %rax,(%rsi)
8875(3): mov %rax,%rsi
8878(5): jmp 0xfffffed8(%rip)
887d(3): nop (%rax)
8880(3): test %rax,%rax
8883(5): mov $0x80,%edx
8888(4): cmove %rdx,%rax
888c(3): test %rax,%rax
888f(2): jns 0xffffffe3(%rip)
8891(4): sub $0x8,%rsp
8895(5): call 0xab(%rip)

"xzalloc" :
88a0(1): push %rbx
88a1(3): mov %rdi,%rbx
88a4(5): call 0xfffffe4c(%rip)
88a9(3): mov %rbx,%rdx
88ac(2): xor %esi,%esi
88ae(3): mov %rax,%rdi
88b1(1): pop %rbx
88b2(5): jmp 0xffff95be(%rip)

"xcalloc" :
88c0(3): mov %rdi,%rax
88c3(4): sub $0x8,%rsp
88c7(3): mul %rax,%rsi,%rdx
88ca(3): seto %dl
88cd(3): test %rax,%rax
88d0(2): js 0x19(%rip)
88d2(3): movzx %dl,%edx
88d5(3): test %rdx,%rdx
88d8(2): jnz 0x11(%rip)
88da(5): call 0xffff95e6(%rip)
88df(3): test %rax,%rax
88e2(2): jz 0x7(%rip)
88e4(4): add $0x8,%rsp
88e8(1): ret near (%rsp)
88e9(5): call 0x57(%rip)

"xmemdup" :
88f0(1): push %rbp
88f1(1): push %rbx
88f2(3): mov %rdi,%rbp
88f5(3): mov %rsi,%rdi
88f8(3): mov %rsi,%rbx
88fb(4): sub $0x8,%rsp
88ff(5): call 0xfffffdf1(%rip)
8904(4): add $0x8,%rsp
8908(3): mov %rbx,%rdx
890b(3): mov %rbp,%rsi
890e(1): pop %rbx
890f(1): pop %rbp
8910(3): mov %rax,%rdi
8913(5): jmp 0xffff95ed(%rip)

"xstrdup" :
8920(1): push %rbx
8921(3): mov %rdi,%rbx
8924(5): call 0xffff946c(%rip)
8929(3): mov %rbx,%rdi
892c(4): lea 0x1(%rax),%rsi
8930(1): pop %rbx
8931(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
8940(7): lea 0x2768(%rip),%rsi
8947(4): sub $0x8,%rsp
894b(5): mov $0x5,%edx
8950(2): xor %edi,%edi
8952(5): call 0xffff941e(%rip)
8957(6): mov 0x2056c3(%rip),%edi
895d(7): lea 0x1e04(%rip),%rdx
8964(3): mov %rax,%rcx
8967(2): xor %esi,%esi
8969(2): xor %eax,%eax
896b(5): call 0xffff96b5(%rip)
8970(5): call 0xffff92f0(%rip)

"xnumtoumax" :
8980(2): push %r15
8982(2): push %r14
8984(3): mov %rcx,%r15
8987(2): push %r13
8989(2): push %r12
898b(3): mov %rdx,%r14
898e(1): push %rbp
898f(1): push %rbx
8990(2): mov %esi,%edx
8992(2): xor %esi,%esi
8994(3): mov %rdi,%r12
8997(3): mov %r9,%r13
899a(4): sub $0x18,%rsp
899e(3): mov %rsp,%rcx
89a1(4): mov 0x50(%rsp),%ebx
89a5(9): mov $0x28,%rax
89ae(5): mov %rax,0x8(%rsp)
89b3(2): xor %eax,%eax
89b5(5): call 0xfb(%rip)
89ba(2): test %eax,%eax
89bc(6): jnz 0x94(%rip)
89c2(4): mov (%rsp),%rbp
89c6(3): cmp %r14,%rbp
89c9(2): jb 0x7(%rip)
89cb(3): cmp %r15,%rbp
89ce(2): jbe 0x56(%rip)
89d0(5): call 0xffff92a0(%rip)
89d5(7): cmp $0x40000000,%rbp
89dc(3): mov %rax,%r14
89df(2): sbb %eax,%eax
89e1(3): and $0xd7,%eax
89e4(3): add $0x4b,%eax
89e7(3): mov %eax,(%r14)
89ea(3): mov %r12,%rdi
89ed(5): call 0xffffe783(%rip)
89f2(3): mov (%r14),%esi
89f5(3): mov %rax,%r8
89f8(5): mov $0x0,%eax
89fd(7): lea 0x1d73(%rip),%rdx
8a04(3): mov %r13,%rcx
8a07(3): cmp $0x16,%esi
8a0a(3): cmove %eax,%esi
8a0d(2): test %ebx,%ebx
8a0f(5): mov $0x1,%eax
8a14(3): cmove %eax,%ebx
8a17(2): xor %eax,%eax
8a19(2): mov %ebx,%edi
8a1b(5): call 0xffff9605(%rip)
8a20(4): mov (%rsp),%rbp
8a24(5): mov 0x8(%rsp),%rdx
8a29(9): xor $0x28,%rdx
8a32(3): mov %rbp,%rax
8a35(2): jnz 0x46(%rip)
8a37(4): add $0x18,%rsp
8a3b(1): pop %rbx
8a3c(1): pop %rbp
8a3d(2): pop %r12
8a3f(2): pop %r13
8a41(2): pop %r14
8a43(2): pop %r15
8a45(1): ret near (%rsp)
8a46(a): nop 0x0(%rax,%rax,1)
8a50(2): mov %eax,%ebp
8a52(5): call 0xffff921e(%rip)
8a57(3): cmp $0x1,%ebp
8a5a(3): mov %rax,%r14
8a5d(2): jz 0x13(%rip)
8a5f(3): cmp $0x3,%ebp
8a62(2): jnz 0xffffff88(%rip)
8a64(6): mov $0x0,(%rax)
8a6a(5): jmp 0xffffff80(%rip)
8a6f(1): nop 
8a70(6): mov $0x4b,(%rax)
8a76(5): jmp 0xffffff74(%rip)
8a7b(5): call 0xffff9325(%rip)

"xdectoumax" :
8a80(4): sub $0x10,%rsp
8a84(2): push %r9
8a86(3): mov %r8,%r9
8a89(3): mov %rcx,%r8
8a8c(3): mov %rdx,%rcx
8a8f(3): mov %rsi,%rdx
8a92(5): mov $0xa,%esi
8a97(5): call 0xfffffee9(%rip)
8a9c(4): add $0x18,%rsp
8aa0(1): ret near (%rsp)

"xstrtoumax" :
8ab0(2): push %r15
8ab2(2): push %r14
8ab4(2): push %r13
8ab6(2): push %r12
8ab8(1): push %rbp
8ab9(1): push %rbx
8aba(4): sub $0x28,%rsp
8abe(9): mov $0x28,%rax
8ac7(5): mov %rax,0x18(%rsp)
8acc(2): xor %eax,%eax
8ace(3): cmp $0x24,%edx
8ad1(6): jnbe 0x364(%rip)
8ad7(5): lea 0x10(%rsp),%rax
8adc(3): mov %rsi,%r15
8adf(3): test %rsi,%rsi
8ae2(3): mov %rdi,%rbp
8ae5(4): mov %edx,0x8(%rsp)
8ae9(3): mov %rcx,%r14
8aec(3): mov %r8,%r13
8aef(4): cmove %rax,%r15
8af3(5): call 0xffff917d(%rip)
8af8(6): mov $0x0,(%rax)
8afe(3): mov %rax,%r12
8b01(4): movzx 0x0(%rbp),%ebx
8b05(5): call 0xffff960b(%rip)
8b0a(4): mov 0x8(%rsp),%edx
8b0e(3): mov (%rax),%rsi
8b11(3): mov %rbp,%rax
8b14(2): jmp 0x13(%rip)
8b16(a): nop 0x0(%rax,%rax,1)
8b20(4): add $0x1,%rax
8b24(3): movzx (%rax),%ebx
8b27(3): movzx %bl,%ecx
8b2a(5): test $0x20,0x1(%rsi,%rcx,2)
8b2f(2): jnz 0xfffffff1(%rip)
8b31(3): cmp $0x2d,%bl
8b34(2): jz 0x54(%rip)
8b36(2): xor %ecx,%ecx
8b38(3): mov %r15,%rsi
8b3b(3): mov %rbp,%rdi
8b3e(5): call 0xffff9322(%rip)
8b43(3): mov (%r15),%rcx
8b46(3): mov %rax,%rbx
8b49(3): cmp %rbp,%rcx
8b4c(2): jz 0x2c(%rip)
8b4e(4): mov (%r12),%eax
8b52(2): test %eax,%eax
8b54(2): jz 0x64(%rip)
8b56(3): cmp $0x22,%eax
8b59(5): mov $0x1,%ebp
8b5e(2): jnz 0x2a(%rip)
8b60(3): test %r13,%r13
8b63(2): jz 0xb(%rip)
8b65(4): movzx (%rcx),%r12d
8b69(3): test %r12b,%r12b
8b6c(2): jnz 0x7b(%rip)
8b6e(3): mov %rbx,(%r14)
8b71(2): jmp 0x1c(%rip)
8b73(5): nop 0x0(%rax,%rax,1)
8b78(3): test %r13,%r13
8b7b(5): mov %rcx,0x8(%rsp)
8b80(2): jnz 0x40(%rip)
8b82(6): nop 0x0(%rax,%rax,1)
8b88(5): mov $0x4,%ebp
8b8d(5): mov 0x18(%rsp),%rdi
8b92(9): xor $0x28,%rdi
8b9b(2): mov %ebp,%eax
8b9d(6): jnz 0x293(%rip)
8ba3(4): add $0x28,%rsp
8ba7(1): pop %rbx
8ba8(1): pop %rbp
8ba9(2): pop %r12
8bab(2): pop %r13
8bad(2): pop %r14
8baf(2): pop %r15
8bb1(1): ret near (%rsp)
8bb2(6): nop 0x0(%rax,%rax,1)
8bb8(2): xor %ebp,%ebp
8bba(2): jmp 0xffffffa6(%rip)
8bbc(4): nop 0x0(%rax)
8bc0(5): movzx 0x0(%rbp),%r12d
8bc5(3): test %r12b,%r12b
8bc8(2): jz 0xffffffc0(%rip)
8bca(4): movsx %r12b,%esi
8bce(3): mov %r13,%rdi
8bd1(2): xor %ebp,%ebp
8bd3(5): call 0xffff920d(%rip)
8bd8(3): test %rax,%rax
8bdb(5): mov $0x1,%ebx
8be0(5): mov 0x8(%rsp),%rcx
8be5(2): jz 0xffffffa3(%rip)
8be7(4): movsx %r12b,%esi
8beb(3): mov %r13,%rdi
8bee(5): mov %rcx,0x8(%rsp)
8bf3(5): call 0xffff91ed(%rip)
8bf8(3): test %rax,%rax
8bfb(5): mov 0x8(%rsp),%rcx
8c00(6): jz 0xcc(%rip)
8c06(5): lea 0xffffffbb(%r12),%eax
8c0b(2): cmp $0x2f,%al
8c0d(2): jnbe 0x53(%rip)
8c0f(a): mov $0x142129060940101,%rdx
8c19(4): bt %rax,%rdx
8c1d(2): jnb 0x43(%rip)
8c1f(5): mov $0x30,%esi
8c24(3): mov %r13,%rdi
8c27(5): mov %rcx,0x8(%rsp)
8c2c(5): call 0xffff91b4(%rip)
8c31(3): test %rax,%rax
8c34(5): mov 0x8(%rsp),%rcx
8c39(2): jz 0x27(%rip)
8c3b(4): movzx 0x1(%rcx),%eax
8c3f(2): cmp $0x44,%al
8c41(2): jz 0xe(%rip)
8c43(2): cmp $0x69,%al
8c45(6): jz 0x1d3(%rip)
8c4b(2): cmp $0x42,%al
8c4d(2): jnz 0x13(%rip)
8c4f(5): mov $0x2,%edi
8c54(5): mov $0x3e8,%esi
8c59(2): jmp 0x11(%rip)
8c5b(5): nop 0x0(%rax,%rax,1)
8c60(5): mov $0x1,%edi
8c65(5): mov $0x400,%esi
8c6a(4): sub $0x42,%r12d
8c6e(4): cmp $0x35,%r12b
8c72(2): jnbe 0x5a(%rip)
8c74(7): lea 0x248d(%rip),%rdx
8c7b(4): movzx %r12b,%r12d
8c7f(4): movsxd 0x0(%rdx,%r12,4),%rax
8c83(3): add %rdx,%rax
8c86(2): jmp %rax
8c88(3): mov %rbx,%rax
8c8b(3): mul %rax,%rsi,%rdx
8c8e(6): jo 0x1f3(%rip)
8c94(3): xor %r8d,%r8d
8c97(3): mul %rax,%rsi,%rdx
8c9a(6): jo 0x1d8(%rip)
8ca0(3): mov %rax,%rbx
8ca3(3): or %r8d,%ebp
8ca6(a): nop 0x0(%rax,%rax,1)
8cb0(3): movsxd %edi,%rdi
8cb3(2): mov %ebp,%eax
8cb5(3): add %rdi,%rcx
8cb8(3): or $0x2,%eax
8cbb(3): mov %rcx,(%r15)
8cbe(3): cmp $0x0,(%rcx)
8cc1(3): mov %rbx,(%r14)
8cc4(3): cmovne %eax,%ebp
8cc7(5): jmp 0xfffffec6(%rip)
8ccc(3): mov %rbx,(%r14)
8ccf(3): or $0x2,%ebp
8cd2(5): jmp 0xfffffebb(%rip)
8cd7(5): mov $0x2,%edx
8cdc(3): mov %rdx,%rax
8cdf(3): mul %rax,%rbx,%rdx
8ce2(6): jo 0x9c(%rip)
8ce8(3): add %rbx,%rbx
8ceb(2): jmp 0xffffffc5(%rip)
8ced(5): mov $0x200,%edx
8cf2(3): mov %rdx,%rax
8cf5(3): mul %rax,%rbx,%rdx
8cf8(6): jo 0x86(%rip)
8cfe(4): shl/sal $0x9,%rbx
8d02(2): jmp 0xffffffae(%rip)
8d04(6): mov $0x7,%r8d
8d0a(3): xor %r9d,%r9d
8d0d(3): nop (%rax)
8d10(3): mov %rbx,%rax
8d13(3): mul %rax,%rsi,%rdx
8d16(3): mov %rax,%rbx
8d19(6): jo 0x195(%rip)
8d1f(4): sub $0x1,%r8d
8d23(2): jnz 0xffffffed(%rip)
8d25(3): or %r9d,%ebp
8d28(2): jmp 0xffffff88(%rip)
8d2a(6): mov $0x8,%r8d
8d30(3): xor %r9d,%r9d
8d33(5): nop 0x0(%rax,%rax,1)
8d38(3): mov %rbx,%rax
8d3b(3): mul %rax,%rsi,%rdx
8d3e(3): mov %rax,%rbx
8d41(6): jo 0x14f(%rip)
8d47(4): sub $0x1,%r8d
8d4b(2): jnz 0xffffffed(%rip)
8d4d(2): jmp 0xffffffd8(%rip)
8d4f(6): mov $0x4,%r8d
8d55(3): xor %r9d,%r9d
8d58(3): mov %rbx,%rax
8d5b(3): mul %rax,%rsi,%rdx
8d5e(3): mov %rax,%rbx
8d61(6): jo 0x102(%rip)
8d67(4): sub $0x1,%r8d
8d6b(2): jnz 0xffffffed(%rip)
8d6d(2): jmp 0xffffffb8(%rip)
8d6f(3): mov %rbx,%rax
8d72(3): mul %rax,%rsi,%rdx
8d75(3): mov %rax,%rbx
8d78(6): jno 0xffffff38(%rip)
8d7e(5): mov $0x1,%ebp
8d83(4): or $0xffffffff,%rbx
8d87(5): jmp 0xffffff29(%rip)
8d8c(4): nop 0x0(%rax)
8d90(6): mov $0x5,%r8d
8d96(3): xor %r9d,%r9d
8d99(3): mov %rbx,%rax
8d9c(3): mul %rax,%rsi,%rdx
8d9f(3): mov %rax,%rbx
8da2(6): jo 0xfd(%rip)
8da8(4): sub $0x1,%r8d
8dac(2): jnz 0xffffffed(%rip)
8dae(5): jmp 0xffffff77(%rip)
8db3(6): mov $0x6,%r8d
8db9(3): xor %r9d,%r9d
8dbc(3): mov %rbx,%rax
8dbf(3): mul %rax,%rsi,%rdx
8dc2(3): mov %rax,%rbx
8dc5(6): jo 0x8f(%rip)
8dcb(4): sub $0x1,%r8d
8dcf(2): jnz 0xffffffed(%rip)
8dd1(5): jmp 0xffffff54(%rip)
8dd6(5): mov $0x400,%edx
8ddb(3): mov %rdx,%rax
8dde(3): mul %rax,%rbx,%rdx
8de1(2): jo 0xffffff9d(%rip)
8de3(4): shl/sal $0xa,%rbx
8de7(5): jmp 0xfffffec9(%rip)
8dec(3): mov %rbx,%rax
8def(3): mul %rax,%rsi,%rdx
8df2(6): jo 0xcb(%rip)
8df8(3): xor %r8d,%r8d
8dfb(3): mul %rax,%rsi,%rdx
8dfe(6): jno 0xfffffe99(%rip)
8e04(6): mov $0x1,%r8d
8e0a(4): or $0xffffffff,%rax
8e0e(5): jmp 0xfffffe89(%rip)
8e13(5): nop 0x0(%rax,%rax,1)
8e18(2): xor %edi,%edi
8e1a(4): cmp $0x42,0x2(%rcx)
8e1e(5): mov $0x400,%esi
8e23(4): setz %dil
8e27(4): lea 0x1(%rdi,%rdi,1),%edi
8e2b(5): jmp 0xfffffe3f(%rip)
8e30(5): call 0xffff8f70(%rip)
8e35(7): lea 0x23a4(%rip),%rcx
8e3c(7): lea 0x227d(%rip),%rsi
8e43(7): lea 0x2296(%rip),%rdi
8e4a(5): mov $0x54,%edx
8e4f(5): call 0xffff9001(%rip)
8e54(6): mov $0x1,%r9d
8e5a(4): or $0xffffffff,%rbx
8e5e(5): jmp 0xffffff6d(%rip)
8e63(6): mov $0x1,%r9d
8e69(4): or $0xffffffff,%rbx
8e6d(5): jmp 0xfffffefa(%rip)
8e72(6): mov $0x1,%r8d
8e78(4): or $0xffffffff,%rbx
8e7c(5): jmp 0xfffffe27(%rip)
8e81(4): or $0xffffffff,%rax
8e85(6): mov $0x1,%r8d
8e8b(5): jmp 0xfffffe0c(%rip)
8e90(6): mov $0x1,%r9d
8e96(4): or $0xffffffff,%rbx
8e9a(5): jmp 0xfffffead(%rip)
8e9f(6): mov $0x1,%r9d
8ea5(4): or $0xffffffff,%rbx
8ea9(5): jmp 0xfffffeff(%rip)
8eae(6): mov $0x1,%r9d
8eb4(4): or $0xffffffff,%rbx
8eb8(5): jmp 0xfffffe67(%rip)
8ebd(6): mov $0x1,%r8d
8ec3(4): or $0xffffffff,%rax
8ec7(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
8ed0(2): push %r12
8ed2(1): push %rbp
8ed3(1): push %rbx
8ed4(3): mov %rdi,%rbx
8ed7(5): call 0xffff9049(%rip)
8edc(2): test %eax,%eax
8ede(3): mov %rbx,%rdi
8ee1(2): js 0x56(%rip)
8ee3(5): call 0xffff90ad(%rip)
8ee8(2): test %eax,%eax
8eea(2): jnz 0x2e(%rip)
8eec(3): mov %rbx,%rdi
8eef(5): call 0x2e1(%rip)
8ef4(2): test %eax,%eax
8ef6(2): jz 0x3e(%rip)
8ef8(5): call 0xffff8d78(%rip)
8efd(3): mov (%rax),%r12d
8f00(3): mov %rbx,%rdi
8f03(3): mov %rax,%rbp
8f06(5): call 0xffff8e4a(%rip)
8f0b(3): test %r12d,%r12d
8f0e(2): jnz 0x32(%rip)
8f10(1): pop %rbx
8f11(1): pop %rbp
8f12(2): pop %r12
8f14(1): ret near (%rsp)
8f15(3): nop (%rax)
8f18(3): mov %rbx,%rdi
8f1b(5): call 0xffff9005(%rip)
8f20(2): xor %esi,%esi
8f22(5): mov $0x1,%edx
8f27(2): mov %eax,%edi
8f29(5): call 0xffff8f07(%rip)
8f2e(4): cmp $0xffffffff,%rax
8f32(2): jnz 0xffffffba(%rip)
8f34(3): mov %rbx,%rdi
8f37(1): pop %rbx
8f38(1): pop %rbp
8f39(2): pop %r12
8f3b(5): jmp 0xffff8e15(%rip)
8f40(4): mov %r12d,0x0(%rbp)
8f44(5): mov $0xffffffff,%eax
8f49(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
8f50(2): push %r12
8f52(1): push %rbp
8f53(2): mov %edi,%ebp
8f55(1): push %rbx
8f56(4): sub $0x50,%rsp
8f5a(9): mov $0x28,%rax
8f63(5): mov %rax,0x18(%rsp)
8f68(2): xor %eax,%eax
8f6a(5): lea 0x70(%rsp),%rax
8f6f(2): test %esi,%esi
8f71(5): mov %rdx,0x30(%rsp)
8f76(5): mov %rcx,0x38(%rsp)
8f7b(5): mov %r8,0x40(%rsp)
8f80(5): mov %rax,0x8(%rsp)
8f85(5): lea 0x20(%rsp),%rax
8f8a(5): mov %r9,0x48(%rsp)
8f8f(7): mov $0x10,(%rsp)
8f96(5): mov %rax,0x10(%rsp)
8f9b(6): jz 0x207(%rip)
8fa1(6): cmp $0x406,%esi
8fa7(2): jnz 0x49(%rip)
8fa9(5): mov 0x10(%rsp),%rax
8fae(7): cmp $0x0,0x2052a3(%rip)
8fb5(7): mov $0x18,(%rsp)
8fbc(4): mov 0x10(%rax),%r12d
8fc0(3): mov %r12d,%edx
8fc3(6): js 0x130(%rip)
8fc9(2): xor %eax,%eax
8fcb(5): mov $0x406,%esi
8fd0(5): call 0xffff8d30(%rip)
8fd5(2): test %eax,%eax
8fd7(2): mov %eax,%ebx
8fd9(6): js 0x18f(%rip)
8fdf(a): mov $0x1,0x20526f(%rip)
8fe9(2): jmp 0x47(%rip)
8feb(5): nop 0x0(%rax,%rax,1)
8ff0(3): cmp $0xb,%esi
8ff3(2): jz 0x2d(%rip)
8ff5(2): jnle 0x5b(%rip)
8ff7(3): cmp $0x4,%esi
8ffa(6): jz 0xd6(%rip)
9000(6): jnle 0xc0(%rip)
9006(3): cmp $0x2,%esi
9009(6): jz 0xc7(%rip)
900f(2): jnle 0x11(%rip)
9011(3): cmp $0x1,%esi
9014(2): jnz 0x64(%rip)
9016(a): nop 0x0(%rax,%rax,1)
9020(2): mov %ebp,%edi
9022(2): xor %eax,%eax
9024(5): call 0xffff8cdc(%rip)
9029(2): mov %eax,%ebx
902b(5): nop 0x0(%rax,%rax,1)
9030(5): mov 0x18(%rsp),%rcx
9035(9): xor $0x28,%rcx
903e(2): mov %ebx,%eax
9040(6): jnz 0x15d(%rip)
9046(4): add $0x50,%rsp
904a(1): pop %rbx
904b(1): pop %rbp
904c(2): pop %r12
904e(1): ret near (%rsp)
904f(1): nop 
9050(6): cmp $0x407,%esi
9056(2): jnle 0x4a(%rip)
9058(6): cmp $0x406,%esi
905e(2): jnl 0x72(%rip)
9060(6): cmp $0x401,%esi
9066(2): jz 0xffffffba(%rip)
9068(6): cmp $0x402,%esi
906e(2): jz 0x62(%rip)
9070(6): cmp $0x400,%esi
9076(2): jz 0x5a(%rip)
9078(3): mov (%rsp),%eax
907b(3): cmp $0x2f,%eax
907e(6): jnbe 0x13c(%rip)
9084(5): add 0x10(%rsp),%rax
9089(3): mov (%rax),%rdx
908c(2): mov %ebp,%edi
908e(2): xor %eax,%eax
9090(5): call 0xffff8c70(%rip)
9095(2): mov %eax,%ebx
9097(2): jmp 0xffffff99(%rip)
9099(7): nop 0x0(%rax)
90a0(6): cmp $0x409,%esi
90a6(2): jz 0x2a(%rip)
90a8(6): jl 0xffffff78(%rip)
90ae(6): cmp $0x40a,%esi
90b4(2): jnz 0xffffffc4(%rip)
90b6(5): jmp 0xffffff6a(%rip)
90bb(5): nop 0x0(%rax,%rax,1)
90c0(3): cmp $0x9,%esi
90c3(6): jz 0xffffff5d(%rip)
90c9(2): jnle 0x7(%rip)
90cb(3): cmp $0x8,%esi
90ce(2): jnz 0xffffffaa(%rip)
90d0(3): mov (%rsp),%eax
90d3(3): cmp $0x2f,%eax
90d6(6): jnbe 0xee(%rip)
90dc(5): add 0x10(%rsp),%rax
90e1(2): mov (%rax),%edx
90e3(2): mov %ebp,%edi
90e5(2): xor %eax,%eax
90e7(5): call 0xffff8c19(%rip)
90ec(2): mov %eax,%ebx
90ee(5): jmp 0xffffff42(%rip)
90f3(2): xor %esi,%esi
90f5(2): xor %eax,%eax
90f7(5): call 0xffff8c09(%rip)
90fc(2): test %eax,%eax
90fe(2): mov %eax,%ebx
9100(6): js 0xffffff30(%rip)
9106(7): cmp $0xff,0x20514b(%rip)
910d(6): jnz 0xffffff23(%rip)
9113(2): xor %eax,%eax
9115(5): mov $0x1,%esi
911a(2): mov %ebx,%edi
911c(5): call 0xffff8be4(%rip)
9121(2): test %eax,%eax
9123(2): js 0x1e(%rip)
9125(3): or $0x1,%eax
9128(5): mov $0x2,%esi
912d(2): mov %ebx,%edi
912f(2): mov %eax,%edx
9131(2): xor %eax,%eax
9133(5): call 0xffff8bcd(%rip)
9138(3): cmp $0xff,%eax
913b(6): jnz 0xfffffef5(%rip)
9141(5): call 0xffff8b2f(%rip)
9146(3): mov (%rax),%r12d
9149(3): mov %rax,%rbp
914c(2): mov %ebx,%edi
914e(5): call 0xffff8d42(%rip)
9153(5): mov $0xffffffff,%ebx
9158(4): mov %r12d,0x0(%rbp)
915c(5): jmp 0xfffffed4(%rip)
9161(7): nop 0x0(%rax)
9168(5): call 0xffff8b08(%rip)
916d(3): cmp $0x16,(%rax)
9170(6): jnz 0xfffffe6f(%rip)
9176(2): xor %esi,%esi
9178(2): xor %eax,%eax
917a(3): mov %r12d,%edx
917d(2): mov %ebp,%edi
917f(5): call 0xffff8b81(%rip)
9184(2): test %eax,%eax
9186(2): mov %eax,%ebx
9188(6): js 0xfffffea8(%rip)
918e(a): mov $0xffffffff,0x2050c0(%rip)
9198(5): jmp 0xffffff7b(%rip)
919d(5): call 0xffff8c03(%rip)
91a2(5): mov 0x10(%rsp),%rax
91a7(2): xor %esi,%esi
91a9(3): mov 0x10(%rax),%edx
91ac(2): xor %eax,%eax
91ae(5): call 0xffff8b52(%rip)
91b3(2): mov %eax,%ebx
91b5(5): jmp 0xfffffe7b(%rip)
91ba(5): mov 0x8(%rsp),%rax
91bf(5): jmp 0xfffffeca(%rip)
91c4(5): mov 0x8(%rsp),%rax
91c9(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
91d0(3): test %rdi,%rdi
91d3(1): push %rbx
91d4(3): mov %rdi,%rbx
91d7(2): jz 0x13(%rip)
91d9(5): call 0xffff8db7(%rip)
91de(2): test %eax,%eax
91e0(2): jz 0xa(%rip)
91e2(6): test $0x100,(%rbx)
91e8(2): jnz 0x10(%rip)
91ea(3): mov %rbx,%rdi
91ed(1): pop %rbx
91ee(5): jmp 0xffff8d72(%rip)
91f3(5): nop 0x0(%rax,%rax,1)
91f8(3): mov %rbx,%rdi
91fb(5): mov $0x1,%edx
9200(2): xor %esi,%esi
9202(5): call 0xe(%rip)
9207(3): mov %rbx,%rdi
920a(1): pop %rbx
920b(5): jmp 0xffff8d55(%rip)

"rpl_fseeko" :
9210(4): mov 0x8(%rdi),%rax
9214(4): cmp %rax,0x10(%rdi)
9218(2): jz 0x8(%rip)
921a(5): jmp 0xffff8e46(%rip)
921f(1): nop 
9220(4): mov 0x20(%rdi),%rax
9224(4): cmp %rax,0x28(%rdi)
9228(2): jnz 0xfffffff2(%rip)
922a(5): cmp $0x0,0x48(%rdi)
922f(2): jnz 0xffffffeb(%rip)
9231(2): push %r12
9233(1): push %rbp
9234(3): mov %edx,%r12d
9237(1): push %rbx
9238(3): mov %rsi,%rbp
923b(3): mov %rdi,%rbx
923e(5): call 0xffff8ce2(%rip)
9243(3): mov %r12d,%edx
9246(3): mov %rbp,%rsi
9249(2): mov %eax,%edi
924b(5): call 0xffff8be5(%rip)
9250(4): cmp $0xffffffff,%rax
9254(2): jz 0xe(%rip)
9256(3): and $0xef,(%rbx)
9259(7): mov %rax,0x90(%rbx)
9260(2): xor %eax,%eax
9262(1): pop %rbx
9263(1): pop %rbp
9264(2): pop %r12
9266(1): ret near (%rsp)

"rpl_mbrtowc" :
9270(2): push %r13
9272(2): push %r12
9274(3): mov %rsi,%r13
9277(1): push %rbp
9278(1): push %rbx
9279(3): mov %rdi,%rbx
927c(3): mov %rdx,%r12
927f(4): sub $0x18,%rsp
9283(9): mov $0x28,%rax
928c(5): mov %rax,0x8(%rsp)
9291(2): xor %eax,%eax
9293(5): lea 0x4(%rsp),%rax
9298(3): test %rdi,%rdi
929b(4): cmove %rax,%rbx
929f(3): mov %rbx,%rdi
92a2(5): call 0xffff8b2e(%rip)
92a7(4): cmp $0xfffffffd,%rax
92ab(3): mov %rax,%rbp
92ae(2): jbe 0x22(%rip)
92b0(3): test %r12,%r12
92b3(2): jz 0x1d(%rip)
92b5(2): xor %edi,%edi
92b7(5): call 0x169(%rip)
92bc(2): test %al,%al
92be(2): jnz 0x12(%rip)
92c0(5): movzx 0x0(%r13),%eax
92c5(5): mov $0x1,%ebp
92ca(2): mov %eax,(%rbx)
92cc(4): nop 0x0(%rax)
92d0(5): mov 0x8(%rsp),%rdx
92d5(9): xor $0x28,%rdx
92de(3): mov %rbp,%rax
92e1(2): jnz 0xd(%rip)
92e3(4): add $0x18,%rsp
92e7(1): pop %rbx
92e8(1): pop %rbp
92e9(2): pop %r12
92eb(2): pop %r13
92ed(1): ret near (%rsp)
92ee(5): call 0xffff8ab2(%rip)

"close_stream" :
9300(2): push %r12
9302(1): push %rbp
9303(3): mov %rdi,%rbp
9306(1): push %rbx
9307(5): call 0xffff89b9(%rip)
930c(3): mov 0x0(%rbp),%ebx
930f(3): mov %rbp,%rdi
9312(3): mov %rax,%r12
9315(5): call 0xfffffbbb(%rip)
931a(3): and $0x20,%ebx
931d(2): test %ebx,%ebx
931f(2): jnz 0x19(%rip)
9321(2): test %eax,%eax
9323(2): jz 0xc(%rip)
9325(3): test %r12,%r12
9328(5): mov $0xffffffff,%eax
932d(2): jz 0x3b(%rip)
932f(1): pop %rbx
9330(1): pop %rbp
9331(2): pop %r12
9333(1): ret near (%rsp)
9334(4): nop 0x0(%rax)
9338(2): test %eax,%eax
933a(2): jnz 0x1e(%rip)
933c(5): call 0xffff8934(%rip)
9341(6): mov $0x0,(%rax)
9347(5): mov $0xffffffff,%eax
934c(1): pop %rbx
934d(1): pop %rbp
934e(2): pop %r12
9350(1): ret near (%rsp)
9351(7): nop 0x0(%rax)
9358(1): pop %rbx
9359(5): mov $0xffffffff,%eax
935e(1): pop %rbp
935f(2): pop %r12
9361(1): ret near (%rsp)
9362(6): nop 0x0(%rax,%rax,1)
9368(5): call 0xffff8908(%rip)
936d(3): cmp $0x9,(%rax)
9370(1): pop %rbx
9371(1): pop %rbp
9372(2): pop %r12
9374(3): setnz %al
9377(3): movzx %al,%eax
937a(2): neg %eax
937c(1): ret near (%rsp)

"fopen_safer" :
9380(2): push %r12
9382(1): push %rbp
9383(3): mov %rsi,%rbp
9386(1): push %rbx
9387(5): call 0xffff8ce9(%rip)
938c(3): test %rax,%rax
938f(3): mov %rax,%rbx
9392(2): jz 0xf(%rip)
9394(3): mov %rax,%rdi
9397(5): call 0xffff8b89(%rip)
939c(3): cmp $0x2,%eax
939f(2): jbe 0x11(%rip)
93a1(3): mov %rbx,%rax
93a4(1): pop %rbx
93a5(1): pop %rbp
93a6(2): pop %r12
93a8(1): ret near (%rsp)
93a9(7): nop 0x0(%rax)
93b0(2): mov %eax,%edi
93b2(5): call 0x10e(%rip)
93b7(2): test %eax,%eax
93b9(3): mov %eax,%r12d
93bc(2): js 0x3c(%rip)
93be(3): mov %rbx,%rdi
93c1(5): call 0xfffffb0f(%rip)
93c6(2): test %eax,%eax
93c8(2): jnz 0x15(%rip)
93ca(3): mov %rbp,%rsi
93cd(3): mov %r12d,%edi
93d0(5): call 0xffff8bf0(%rip)
93d5(3): test %rax,%rax
93d8(3): mov %rax,%rbx
93db(2): jnz 0xffffffc6(%rip)
93dd(5): call 0xffff8893(%rip)
93e2(2): mov (%rax),%ebp
93e4(3): mov %rax,%rbx
93e7(3): mov %r12d,%edi
93ea(5): call 0xffff8aa6(%rip)
93ef(2): mov %ebp,(%rbx)
93f1(2): xor %ebx,%ebx
93f3(2): jmp 0xffffffae(%rip)
93f5(3): nop (%rax)
93f8(5): call 0xffff8878(%rip)
93fd(3): mov (%rax),%r12d
9400(3): mov %rax,%rbp
9403(3): mov %rbx,%rdi
9406(5): call 0xfffffaca(%rip)
940b(2): xor %ebx,%ebx
940d(4): mov %r12d,0x0(%rbp)
9411(2): jmp 0xffffff90(%rip)

"hard_locale" :
9420(4): sub $0x8,%rsp
9424(2): xor %esi,%esi
9426(5): call 0xffff8baa(%rip)
942b(3): mov %rax,%rdx
942e(5): mov $0x1,%eax
9433(3): test %rdx,%rdx
9436(2): jz 0x1f(%rip)
9438(7): lea 0x1dac(%rip),%rdi
943f(5): mov $0x2,%ecx
9444(3): mov %rdx,%rsi
9447(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
9449(3): setnbe %cl
944c(3): sbb $0x0,%cl
944f(2): xor %eax,%eax
9451(2): test %cl,%cl
9453(2): jnz 0xd(%rip)
9455(4): add $0x8,%rsp
9459(1): ret near (%rsp)
945a(6): nop 0x0(%rax,%rax,1)
9460(7): lea 0x1d86(%rip),%rdi
9467(5): mov $0x6,%ecx
946c(3): mov %rdx,%rsi
946f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
9471(3): setnbe %al
9474(2): sbb $0x0,%al
9476(2): test %al,%al
9478(3): setnz %al
947b(4): add $0x8,%rsp
947f(1): ret near (%rsp)

"locale_charset" :
9480(4): sub $0x8,%rsp
9484(5): mov $0xe,%edi
9489(5): call 0xffff8ae7(%rip)
948e(3): test %rax,%rax
9491(2): jz 0x1f(%rip)
9493(3): cmp $0x0,(%rax)
9496(7): lea 0x1d56(%rip),%rdx
949d(4): cmove %rdx,%rax
94a1(4): add $0x8,%rsp
94a5(1): ret near (%rsp)
94a6(a): nop 0x0(%rax,%rax,1)
94b0(7): lea 0x1d3c(%rip),%rax
94b7(4): add $0x8,%rsp
94bb(1): ret near (%rsp)

"dup_safer" :
94c0(5): mov $0x3,%edx
94c5(2): xor %esi,%esi
94c7(2): xor %eax,%eax
94c9(5): jmp 0xfffffa87(%rip)

"__libc_csu_init" :
94d0(2): push %r15
94d2(2): push %r14
94d4(3): mov %rdx,%r15
94d7(2): push %r13
94d9(2): push %r12
94db(7): lea 0x20446e(%rip),%r12
94e2(1): push %rbp
94e3(7): lea 0x20446e(%rip),%rbp
94ea(1): push %rbx
94eb(3): mov %edi,%r13d
94ee(3): mov %rsi,%r14
94f1(3): sub %r12,%rbp
94f4(4): sub $0x8,%rsp
94f8(4): sar $0x3,%rbp
94fc(5): call 0xffff871c(%rip)
9501(3): test %rbp,%rbp
9504(2): jz 0x22(%rip)
9506(2): xor %ebx,%ebx
9508(8): nop 0x0(%rax,%rax,1)
9510(3): mov %r15,%rdx
9513(3): mov %r14,%rsi
9516(3): mov %r13d,%edi
9519(4): call 0x0(%r12,%rbx,8)
951d(4): add $0x1,%rbx
9521(3): cmp %rbx,%rbp
9524(2): jnz 0xffffffec(%rip)
9526(4): add $0x8,%rsp
952a(1): pop %rbx
952b(1): pop %rbp
952c(2): pop %r12
952e(2): pop %r13
9530(2): pop %r14
9532(2): pop %r15
9534(1): ret near (%rsp)

"atexit" :
9550(7): mov 0x204ab1(%rip),%rdx
9557(2): xor %esi,%esi
9559(5): jmp 0xffff8b27(%rip)

"_fini" :
9560(4): sub $0x8,%rsp
9564(4): add $0x8,%rsp
9568(1): ret near (%rsp)

