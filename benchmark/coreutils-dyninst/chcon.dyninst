
"abort@plt" :
1890(6): jmp 0x20c52a(%rip)
1896(5): push $0x0

"__errno_location@plt" :
18a0(6): jmp 0x20c522(%rip)
18a6(5): push $0x1

"strncmp@plt" :
18b0(6): jmp 0x20c51a(%rip)
18b6(5): push $0x2

"_exit@plt" :
18c0(6): jmp 0x20c512(%rip)
18c6(5): push $0x3

"strcpy@plt" :
18d0(6): jmp 0x20c50a(%rip)
18d6(5): push $0x4

"__fpending@plt" :
18e0(6): jmp 0x20c502(%rip)
18e6(5): push $0x5

"qsort@plt" :
18f0(6): jmp 0x20c4fa(%rip)
18f6(5): push $0x6

"fcntl@plt" :
1900(6): jmp 0x20c4f2(%rip)
1906(5): push $0x7

"textdomain@plt" :
1910(6): jmp 0x20c4ea(%rip)
1916(5): push $0x8

"fclose@plt" :
1920(6): jmp 0x20c4e2(%rip)
1926(5): push $0x9

"bindtextdomain@plt" :
1930(6): jmp 0x20c4da(%rip)
1936(5): push $0xa

"dcgettext@plt" :
1940(6): jmp 0x20c4d2(%rip)
1946(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1950(6): jmp 0x20c4ca(%rip)
1956(5): push $0xc

"strlen@plt" :
1960(6): jmp 0x20c4c2(%rip)
1966(5): push $0xd

"__lxstat@plt" :
1970(6): jmp 0x20c4ba(%rip)
1976(5): push $0xe

"openat@plt" :
1980(6): jmp 0x20c4b2(%rip)
1986(5): push $0xf

"chdir@plt" :
1990(6): jmp 0x20c4aa(%rip)
1996(5): push $0x10

"__stack_chk_fail@plt" :
19a0(6): jmp 0x20c4a2(%rip)
19a6(5): push $0x11

"getopt_long@plt" :
19b0(6): jmp 0x20c49a(%rip)
19b6(5): push $0x12

"mbrtowc@plt" :
19c0(6): jmp 0x20c492(%rip)
19c6(5): push $0x13

"__fxstatat@plt" :
19d0(6): jmp 0x20c48a(%rip)
19d6(5): push $0x14

"strrchr@plt" :
19e0(6): jmp 0x20c482(%rip)
19e6(5): push $0x15

"lseek@plt" :
19f0(6): jmp 0x20c47a(%rip)
19f6(5): push $0x16

"__assert_fail@plt" :
1a00(6): jmp 0x20c472(%rip)
1a06(5): push $0x17

"memset@plt" :
1a10(6): jmp 0x20c46a(%rip)
1a16(5): push $0x18

"getcwd@plt" :
1a20(6): jmp 0x20c462(%rip)
1a26(5): push $0x19

"close@plt" :
1a30(6): jmp 0x20c45a(%rip)
1a36(5): push $0x1a

"strspn@plt" :
1a40(6): jmp 0x20c452(%rip)
1a46(5): push $0x1b

"closedir@plt" :
1a50(6): jmp 0x20c44a(%rip)
1a56(5): push $0x1c

"memchr@plt" :
1a60(6): jmp 0x20c442(%rip)
1a66(5): push $0x1d

"memcmp@plt" :
1a70(6): jmp 0x20c43a(%rip)
1a76(5): push $0x1e

"fputs_unlocked@plt" :
1a80(6): jmp 0x20c432(%rip)
1a86(5): push $0x1f

"calloc@plt" :
1a90(6): jmp 0x20c42a(%rip)
1a96(5): push $0x20

"strcmp@plt" :
1aa0(6): jmp 0x20c422(%rip)
1aa6(5): push $0x21

"dirfd@plt" :
1ab0(6): jmp 0x20c41a(%rip)
1ab6(5): push $0x22

"memcpy@plt" :
1ac0(6): jmp 0x20c412(%rip)
1ac6(5): push $0x23

"fileno@plt" :
1ad0(6): jmp 0x20c40a(%rip)
1ad6(5): push $0x24

"__xstat@plt" :
1ae0(6): jmp 0x20c402(%rip)
1ae6(5): push $0x25

"readdir@plt" :
1af0(6): jmp 0x20c3fa(%rip)
1af6(5): push $0x26

"malloc@plt" :
1b00(6): jmp 0x20c3f2(%rip)
1b06(5): push $0x27

"fflush@plt" :
1b10(6): jmp 0x20c3ea(%rip)
1b16(5): push $0x28

"nl_langinfo@plt" :
1b20(6): jmp 0x20c3e2(%rip)
1b26(5): push $0x29

"__fxstat@plt" :
1b30(6): jmp 0x20c3da(%rip)
1b36(5): push $0x2a

"__freading@plt" :
1b40(6): jmp 0x20c3d2(%rip)
1b46(5): push $0x2b

"fchdir@plt" :
1b50(6): jmp 0x20c3ca(%rip)
1b56(5): push $0x2c

"realloc@plt" :
1b60(6): jmp 0x20c3c2(%rip)
1b66(5): push $0x2d

"setlocale@plt" :
1b70(6): jmp 0x20c3ba(%rip)
1b76(5): push $0x2e

"__printf_chk@plt" :
1b80(6): jmp 0x20c3b2(%rip)
1b86(5): push $0x2f

"memmove@plt" :
1b90(6): jmp 0x20c3aa(%rip)
1b96(5): push $0x30

"error@plt" :
1ba0(6): jmp 0x20c3a2(%rip)
1ba6(5): push $0x31

"memrchr@plt" :
1bb0(6): jmp 0x20c39a(%rip)
1bb6(5): push $0x32

"open@plt" :
1bc0(6): jmp 0x20c392(%rip)
1bc6(5): push $0x33

"access@plt" :
1bd0(6): jmp 0x20c38a(%rip)
1bd6(5): push $0x34

"fseeko@plt" :
1be0(6): jmp 0x20c382(%rip)
1be6(5): push $0x35

"fdopendir@plt" :
1bf0(6): jmp 0x20c37a(%rip)
1bf6(5): push $0x36

"fstatfs@plt" :
1c00(6): jmp 0x20c372(%rip)
1c06(5): push $0x37

"__cxa_atexit@plt" :
1c10(6): jmp 0x20c36a(%rip)
1c16(5): push $0x38

"exit@plt" :
1c20(6): jmp 0x20c362(%rip)
1c26(5): push $0x39

"fwrite@plt" :
1c30(6): jmp 0x20c35a(%rip)
1c36(5): push $0x3a

"__fprintf_chk@plt" :
1c40(6): jmp 0x20c352(%rip)
1c46(5): push $0x3b

"mbsinit@plt" :
1c50(6): jmp 0x20c34a(%rip)
1c56(5): push $0x3c

"iswprint@plt" :
1c60(6): jmp 0x20c342(%rip)
1c66(5): push $0x3d

"__ctype_b_loc@plt" :
1c70(6): jmp 0x20c33a(%rip)
1c76(5): push $0x3e

"__sprintf_chk@plt" :
1c80(6): jmp 0x20c332(%rip)
1c86(5): push $0x3f

".plt.got" :
1c90(6): jmp 0x20c32a(%rip)
1c96(2): nop 
1c98(6): jmp 0x20c34a(%rip)
1c9e(2): nop 

"_init" :
1860(4): sub $0x8,%rsp
1864(7): mov 0x20c76d(%rip),%rax
186b(3): test %rax,%rax
186e(2): jz 0x4(%rip)
1870(2): call %rax
1872(4): add $0x8,%rsp
1876(1): ret near (%rsp)

"main" :
1ca0(2): push %r15
1ca2(2): push %r14
1ca4(3): xor %r15d,%r15d
1ca7(2): push %r13
1ca9(2): push %r12
1cab(3): xor %r13d,%r13d
1cae(1): push %rbp
1caf(1): push %rbx
1cb0(3): movsxd %edi,%rbp
1cb3(3): mov %rsi,%rbx
1cb6(6): mov $0xffffffff,%r14d
1cbc(6): mov $0x10,%r12d
1cc2(4): sub $0x38,%rsp
1cc6(3): mov (%rsi),%rdi
1cc9(9): mov $0x28,%rax
1cd2(5): mov %rax,0x28(%rsp)
1cd7(2): xor %eax,%eax
1cd9(5): call 0x1107(%rip)
1cde(7): lea 0x911c(%rip),%rsi
1ce5(5): mov $0x6,%edi
1cea(5): call 0xfffffe86(%rip)
1cef(7): lea 0x7f77(%rip),%rsi
1cf6(7): lea 0x7f47(%rip),%rdi
1cfd(5): call 0xfffffc33(%rip)
1d02(7): lea 0x7f3b(%rip),%rdi
1d09(5): call 0xfffffc07(%rip)
1d0e(7): lea 0x101b(%rip),%rdi
1d15(5): call 0x7e8b(%rip)
1d1a(9): mov $0x0,0x8(%rsp)
1d23(5): nop 0x0(%rax,%rax,1)
1d28(7): lea 0x20bc71(%rip),%rcx
1d2f(7): lea 0x7f6a(%rip),%rdx
1d36(3): xor %r8d,%r8d
1d39(3): mov %rbx,%rsi
1d3c(2): mov %ebp,%edi
1d3e(5): call 0xfffffc72(%rip)
1d43(3): cmp $0xff,%eax
1d46(6): jz 0x15e(%rip)
1d4c(3): cmp $0x6c,%eax
1d4f(2): jz 0x7d(%rip)
1d51(2): jle 0x3f(%rip)
1d53(3): cmp $0x76,%eax
1d56(6): jz 0x126(%rip)
1d5c(2): jle 0x64(%rip)
1d5e(5): cmp $0x81,%eax
1d63(6): jz 0x139(%rip)
1d69(6): jle 0x11f(%rip)
1d6f(5): cmp $0x82,%eax
1d74(6): jz 0xfd(%rip)
1d7a(5): cmp $0x83,%eax
1d7f(2): jnz 0x78(%rip)
1d81(7): mov 0x20c310(%rip),%rax
1d88(5): mov %rax,0x8(%rsp)
1d8d(2): jmp 0xffffff9b(%rip)
1d8f(1): nop 
1d90(3): cmp $0x4c,%eax
1d93(6): jz 0xb7(%rip)
1d99(2): jle 0x47(%rip)
1d9b(3): cmp $0x52,%eax
1d9e(6): jz 0xc7(%rip)
1da4(6): jle 0xb1(%rip)
1daa(3): cmp $0x66,%eax
1dad(6): jz 0xffffff7b(%rip)
1db3(3): cmp $0x68,%eax
1db6(2): jnz 0x41(%rip)
1db8(3): xor %r14d,%r14d
1dbb(5): jmp 0xffffff6d(%rip)
1dc0(3): cmp $0x74,%eax
1dc3(2): jz 0x9(%rip)
1dc5(2): jnle 0x7(%rip)
1dc7(3): cmp $0x72,%eax
1dca(2): jnz 0x2d(%rip)
1dcc(6): mov $0x1,%r13d
1dd2(5): jmp 0xffffff56(%rip)
1dd7(9): nop 0x0(%rax,%rax,1)
1de0(5): cmp $0xffffff7e,%eax
1de5(6): jz 0x87d(%rip)
1deb(3): cmp $0x48,%eax
1dee(2): jz 0x51(%rip)
1df0(5): cmp $0xffffff7d,%eax
1df5(2): jz 0xc(%rip)
1df7(5): mov $0x1,%edi
1dfc(5): call 0xaa4(%rip)
1e01(4): sub $0x8,%rsp
1e05(7): mov 0x20c27c(%rip),%rdi
1e0c(7): mov 0x20c1fd(%rip),%rcx
1e13(2): push $0x0
1e15(7): lea 0x7e69(%rip),%r9
1e1c(7): lea 0x7e6f(%rip),%r8
1e23(7): lea 0x7e16(%rip),%rdx
1e2a(7): lea 0x7d93(%rip),%rsi
1e31(2): xor %eax,%eax
1e33(5): call 0x321d(%rip)
1e38(2): xor %edi,%edi
1e3a(5): call 0xfffffde6(%rip)
1e3f(6): mov $0x11,%r12d
1e45(5): jmp 0xfffffee3(%rip)
1e4a(6): mov $0x2,%r12d
1e50(5): jmp 0xfffffed8(%rip)
1e55(3): cmp $0x50,%eax
1e58(2): jnz 0xffffff9f(%rip)
1e5a(6): mov $0x10,%r12d
1e60(5): jmp 0xfffffec8(%rip)
1e65(7): mov $0x1,0x20c285(%rip)
1e6c(5): jmp 0xfffffebc(%rip)
1e71(6): mov $0x1,%r15d
1e77(5): jmp 0xfffffeb1(%rip)
1e7c(7): mov $0x1,0x20c26d(%rip)
1e83(5): jmp 0xfffffea5(%rip)
1e88(3): add $0x80,%eax
1e8b(6): jnz 0xffffff6c(%rip)
1e91(6): mov $0x1,%r14d
1e97(5): jmp 0xfffffe91(%rip)
1e9c(3): xor %r15d,%r15d
1e9f(5): jmp 0xfffffe89(%rip)
1ea4(7): movzx 0x20c246(%rip),%edx
1eab(2): test %dl,%dl
1ead(6): jnz 0x3cc(%rip)
1eb3(3): test %r14d,%r14d
1eb6(6): mov $0x10,%r12d
1ebc(7): setnz 0x20c22f(%rip)
1ec3(7): movsxd 0x20c1c6(%rip),%r14
1eca(2): mov %ebp,%ecx
1ecc(3): sub %r14d,%ecx
1ecf(6): cmp $0x0,0x8(%rsp)
1ed5(3): setnz %al
1ed8(3): or %r13b,%al
1edb(4): mov %al,0x17(%rsp)
1edf(6): jz 0x490(%rip)
1ee5(2): test %ecx,%ecx
1ee7(6): jle 0x491(%rip)
1eed(4): mov %dl,0x18(%rsp)
1ef1(5): call 0xfffff9af(%rip)
1ef6(6): cmp $0x0,0x8(%rsp)
1efc(3): mov %rax,%rbp
1eff(5): movzx 0x18(%rsp),%edx
1f04(6): jnz 0x765(%rip)
1f0a(2): test %dl,%dl
1f0c(b): mov $0x0,0x20c1c9(%rip)
1f17(2): jz 0xb(%rip)
1f19(3): test %r15b,%r15b
1f1c(6): jnz 0x5e1(%rip)
1f22(b): mov $0x0,0x20c1bb(%rip)
1f2d(4): lea 0x0(%rbx,%r14,8),%rdi
1f31(3): mov %r12d,%esi
1f34(2): xor %edx,%edx
1f36(3): or $0x8,%esi
1f39(7): lea 0x8910(%rip),%r14
1f40(5): call 0x3500(%rip)
1f45(3): mov %rax,%r12
1f48(5): lea 0x20(%rsp),%rax
1f4d(5): movzx 0x17(%rsp),%ebx
1f52(3): mov %r12,%rdi
1f55(5): mov %rax,0x8(%rsp)
1f5a(5): call 0x5086(%rip)
1f5f(3): test %rax,%rax
1f62(3): mov %rax,%r13
1f65(6): jz 0xa2(%rip)
1f6b(5): nop 0x0(%rax,%rax,1)
1f70(5): cmp $0xa,0x70(%rax)
1f75(4): mov 0x38(%rax),%rcx
1f79(6): jnbe 0x11f(%rip)
1f7f(4): movzx 0x70(%rax),%eax
1f83(4): movsxd 0x0(%r14,%rax,4),%rax
1f87(3): add %r14,%rax
1f8a(2): jmp %rax
1f8c(5): cmp $0x0,0x58(%r13)
1f91(2): jnz 0xd(%rip)
1f93(5): cmp $0x0,0x20(%r13)
1f98(6): jz 0x3b4(%rip)
1f9e(3): mov %rcx,%rsi
1fa1(5): mov $0x4,%edi
1fa6(5): call 0x287a(%rip)
1fab(7): lea 0x7d5c(%rip),%rsi
1fb2(3): mov %rax,%r15
1fb5(5): mov $0x5,%edx
1fba(2): xor %edi,%edi
1fbc(5): call 0xfffff984(%rip)
1fc1(4): mov 0x40(%r13),%esi
1fc5(3): mov %r15,%rcx
1fc8(3): mov %rax,%rdx
1fcb(2): xor %edi,%edi
1fcd(2): xor %eax,%eax
1fcf(3): xor %r15d,%r15d
1fd2(5): call 0xfffffbce(%rip)
1fd7(7): cmp $0x0,0x20c113(%rip)
1fde(2): jnz 0x12(%rip)
1fe0(5): mov $0x4,%edx
1fe5(3): mov %r13,%rsi
1fe8(3): mov %r12,%rdi
1feb(5): call 0x5775(%rip)
1ff0(3): mov %r12,%rdi
1ff3(3): and %r15d,%ebx
1ff6(5): call 0x4fea(%rip)
1ffb(3): test %rax,%rax
1ffe(3): mov %rax,%r13
2001(6): jnz 0xffffff6f(%rip)
2007(4): cmp $0x0,0x0(%rbp)
200b(6): jnz 0x3fc(%rip)
2011(3): mov %r12,%rdi
2014(5): call 0x4e3c(%rip)
2019(2): test %eax,%eax
201b(2): jz 0x26(%rip)
201d(7): lea 0x7d14(%rip),%rsi
2024(5): mov $0x5,%edx
2029(2): xor %edi,%edi
202b(2): xor %ebx,%ebx
202d(5): call 0xfffff913(%rip)
2032(3): mov 0x0(%rbp),%esi
2035(3): mov %rax,%rdx
2038(2): xor %edi,%edi
203a(2): xor %eax,%eax
203c(5): call 0xfffffb64(%rip)
2041(3): xor $0x1,%ebx
2044(3): movzx %bl,%eax
2047(5): mov 0x28(%rsp),%rbx
204c(9): xor $0x28,%rbx
2055(6): jnz 0x6cd(%rip)
205b(4): add $0x38,%rsp
205f(1): pop %rbx
2060(1): pop %rbp
2061(2): pop %r12
2063(2): pop %r13
2065(2): pop %r14
2067(2): pop %r15
2069(1): ret near (%rsp)
206a(7): cmp $0x0,0x20c080(%rip)
2071(6): jz 0x2f3(%rip)
2077(7): mov 0x20c06a(%rip),%rax
207e(3): test %rax,%rax
2081(2): jz 0x17(%rip)
2083(3): mov (%rax),%rdx
2086(7): cmp %rdx,0x80(%r13)
208d(6): jz 0x3ce(%rip)
2093(5): nop 0x0(%rax,%rax,1)
2098(7): cmp $0x0,0x20c051(%rip)
209f(4): mov 0x30(%r13),%r15
20a3(6): jnz 0x1f5(%rip)
20a9(7): mov 0x20c030(%rip),%rcx
20b0(5): mov 0x2c(%r12),%edi
20b5(9): mov $0x0,0x20(%rsp)
20be(7): movzx 0x20c02d(%rip),%eax
20c5(3): test %rcx,%rcx
20c8(6): jz 0x20e(%rip)
20ce(2): test %al,%al
20d0(3): mov %rcx,%rdx
20d3(5): mov %rcx,0x18(%rsp)
20d8(3): mov %r15,%rsi
20db(6): jz 0x262(%rip)
20e1(5): call 0x59bf(%rip)
20e6(5): mov 0x18(%rsp),%rcx
20eb(2): test %eax,%eax
20ed(6): jnz 0x2ba(%rip)
20f3(6): movzx 0x17(%rsp),%r15d
20f9(5): jmp 0xfffffede(%rip)
20fe(3): mov %r13,%rsi
2101(3): mov %r12,%rdi
2104(5): mov %rcx,0x18(%rsp)
2109(5): call 0x3387(%rip)
210e(2): test %al,%al
2110(5): mov 0x18(%rsp),%rcx
2115(2): jz 0xffffff83(%rip)
2117(3): mov %rcx,%rdx
211a(5): mov $0x3,%esi
211f(2): xor %edi,%edi
2121(5): call 0x27ff(%rip)
2126(7): lea 0x85b3(%rip),%rsi
212d(3): mov %rax,%r15
2130(5): mov $0x5,%edx
2135(2): xor %edi,%edi
2137(5): call 0xfffff809(%rip)
213c(3): mov %r15,%rcx
213f(3): mov %rax,%rdx
2142(2): xor %esi,%esi
2144(2): xor %edi,%edi
2146(2): xor %eax,%eax
2148(3): xor %r15d,%r15d
214b(5): call 0xfffffa55(%rip)
2150(5): jmp 0xfffffea0(%rip)
2155(8): movzx 0x20bf94(%rip),%r15d
215d(3): test %r15b,%r15b
2160(6): jz 0xffffff38(%rip)
2166(7): mov 0x20bf7b(%rip),%rax
216d(3): test %rax,%rax
2170(6): jz 0xfffffe80(%rip)
2176(3): mov (%rax),%rdx
2179(7): cmp %rdx,0x80(%r13)
2180(6): jnz 0xfffffe70(%rip)
2186(4): mov 0x8(%rax),%rax
218a(4): cmp %rax,0x78(%r13)
218e(6): jnz 0xfffffe62(%rip)
2194(7): lea 0x9235(%rip),%rsi
219b(3): mov %rcx,%rdi
219e(5): mov %rcx,0x18(%rsp)
21a3(5): call 0xfffff8fd(%rip)
21a8(2): test %eax,%eax
21aa(5): mov 0x18(%rsp),%rcx
21af(6): jnz 0x44e(%rip)
21b5(3): mov %rcx,%rsi
21b8(5): mov $0x4,%edi
21bd(5): call 0x2663(%rip)
21c2(7): lea 0x846f(%rip),%rsi
21c9(3): mov %rax,%r15
21cc(5): mov $0x5,%edx
21d1(2): xor %edi,%edi
21d3(5): call 0xfffff76d(%rip)
21d8(3): mov %r15,%rcx
21db(3): mov %rax,%rdx
21de(2): xor %esi,%esi
21e0(2): xor %edi,%edi
21e2(2): xor %eax,%eax
21e4(5): call 0xfffff9bc(%rip)
21e9(7): lea 0x84b8(%rip),%rsi
21f0(5): mov $0x5,%edx
21f5(2): xor %edi,%edi
21f7(3): xor %r15d,%r15d
21fa(5): call 0xfffff746(%rip)
21ff(2): xor %esi,%esi
2201(3): mov %rax,%rdx
2204(2): xor %edi,%edi
2206(2): xor %eax,%eax
2208(5): call 0xfffff998(%rip)
220d(5): mov $0x4,%edx
2212(3): mov %r13,%rsi
2215(3): mov %r12,%rdi
2218(5): call 0x5548(%rip)
221d(3): mov %r12,%rdi
2220(5): call 0x4dc0(%rip)
2225(5): jmp 0xfffffdcb(%rip)
222a(3): mov %rcx,%rdx
222d(5): mov $0x3,%esi
2232(2): xor %edi,%edi
2234(5): call 0x26ec(%rip)
2239(4): mov 0x40(%r13),%esi
223d(7): lea 0x864d(%rip),%rdx
2244(3): mov %rax,%rcx
2247(2): xor %edi,%edi
2249(2): xor %eax,%eax
224b(3): xor %r15d,%r15d
224e(5): call 0xfffff952(%rip)
2253(5): jmp 0xfffffd84(%rip)
2258(3): mov %rcx,%rsi
225b(5): mov $0x4,%edi
2260(5): call 0x25c0(%rip)
2265(5): mov $0x5,%edx
226a(3): mov %rax,%r15
226d(7): lea 0x7aab(%rip),%rsi
2274(5): jmp 0xfffffd46(%rip)
2279(4): cmp $0x10,%r12d
227d(6): jz 0x26a(%rip)
2283(3): test %r14d,%r14d
2286(6): jz 0x4a1(%rip)
228c(7): mov $0x1,0x20be5f(%rip)
2293(5): jmp 0xfffffc30(%rip)
2298(3): mov %rcx,%rsi
229b(5): mov $0x4,%edi
22a0(5): call 0x2580(%rip)
22a5(7): lea 0x84f4(%rip),%rsi
22ac(2): xor %edi,%edi
22ae(5): mov $0x5,%edx
22b3(5): mov %rax,0x18(%rsp)
22b8(5): call 0xfffff688(%rip)
22bd(5): mov 0x18(%rsp),%rdx
22c2(3): mov %rax,%rsi
22c5(5): mov $0x1,%edi
22ca(2): xor %eax,%eax
22cc(5): call 0xfffff8b4(%rip)
22d1(5): jmp 0xfffffdd8(%rip)
22d6(2): test %al,%al
22d8(5): mov 0x8(%rsp),%rdx
22dd(3): mov %r15,%rsi
22e0(6): jz 0x11d(%rip)
22e6(5): call 0x568a(%rip)
22eb(2): test %eax,%eax
22ed(6): js 0x143(%rip)
22f3(5): mov 0x20(%rsp),%rdi
22f8(3): test %rdi,%rdi
22fb(6): jz 0x261(%rip)
2301(7): mov $0x5f,0x0(%rbp)
2308(5): call 0x27e8(%rip)
230d(7): lea 0x84ec(%rip),%rsi
2314(3): mov %rax,%r15
2317(5): mov $0x5,%edx
231c(2): xor %edi,%edi
231e(5): call 0xfffff622(%rip)
2323(3): mov 0x0(%rbp),%esi
2326(3): mov %r15,%rcx
2329(3): mov %rax,%rdx
232c(2): xor %edi,%edi
232e(2): xor %eax,%eax
2330(3): xor %r15d,%r15d
2333(5): call 0xfffff86d(%rip)
2338(5): jmp 0xfffffc9f(%rip)
233d(5): call 0x5773(%rip)
2342(5): mov 0x18(%rsp),%rcx
2347(5): jmp 0xfffffda4(%rip)
234c(8): mov $0x1,0x20(%r13)
2354(5): mov $0x1,%edx
2359(3): mov %r13,%rsi
235c(3): mov %r12,%rdi
235f(5): call 0x5401(%rip)
2364(6): movzx 0x17(%rsp),%r15d
236a(5): jmp 0xfffffc86(%rip)
236f(3): sub $0x1,%ecx
2372(6): jnle 0x337(%rip)
2378(3): cmp %ebp,%r14d
237b(6): jl 0x3d0(%rip)
2381(7): lea 0x7939(%rip),%rsi
2388(2): xor %edi,%edi
238a(5): mov $0x5,%edx
238f(5): call 0xfffff5b1(%rip)
2394(2): xor %esi,%esi
2396(3): mov %rax,%rdx
2399(2): xor %edi,%edi
239b(2): xor %eax,%eax
239d(5): call 0xfffff803(%rip)
23a2(5): jmp 0xfffffa55(%rip)
23a7(3): mov %rcx,%rsi
23aa(5): mov $0x1,%edi
23af(5): call 0x2721(%rip)
23b4(3): mov %r15,%rdx
23b7(5): mov $0x4,%esi
23bc(2): xor %edi,%edi
23be(5): mov %rax,0x18(%rsp)
23c3(5): call 0x233d(%rip)
23c8(7): lea 0x8459(%rip),%rsi
23cf(5): mov $0x5,%edx
23d4(2): xor %edi,%edi
23d6(3): mov %rax,%r15
23d9(5): call 0xfffff567(%rip)
23de(5): mov 0x18(%rsp),%r8
23e3(3): mov 0x0(%rbp),%esi
23e6(3): mov %r15,%rcx
23e9(3): mov %rax,%rdx
23ec(2): xor %edi,%edi
23ee(2): xor %eax,%eax
23f0(3): xor %r15d,%r15d
23f3(5): call 0xfffff7ad(%rip)
23f8(5): jmp 0xfffffbdf(%rip)
23fd(5): call 0x5693(%rip)
2402(5): jmp 0xfffffee9(%rip)
2407(7): lea 0x78f0(%rip),%rsi
240e(5): mov $0x5,%edx
2413(2): xor %edi,%edi
2415(2): xor %ebx,%ebx
2417(5): call 0xfffff529(%rip)
241c(3): mov 0x0(%rbp),%esi
241f(3): mov %rax,%rdx
2422(2): xor %edi,%edi
2424(2): xor %eax,%eax
2426(5): call 0xfffff77a(%rip)
242b(5): jmp 0xfffffbe6(%rip)
2430(4): cmp $0x3d,0x0(%rbp)
2434(6): jz 0xfffffebf(%rip)
243a(3): mov %r15,%rsi
243d(5): mov $0x4,%edi
2442(5): call 0x23de(%rip)
2447(5): mov $0x5,%edx
244c(3): mov %rax,%r15
244f(7): lea 0x819a(%rip),%rsi
2456(5): jmp 0xfffffec6(%rip)
245b(4): mov 0x8(%rax),%rax
245f(4): cmp %rax,0x78(%r13)
2463(6): jnz 0xfffffc35(%rip)
2469(7): lea 0x8f60(%rip),%rsi
2470(3): mov %rcx,%rdi
2473(5): mov %rcx,0x18(%rsp)
2478(5): call 0xfffff628(%rip)
247d(2): test %eax,%eax
247f(5): mov 0x18(%rsp),%rcx
2484(6): jnz 0x114(%rip)
248a(3): mov %rcx,%rsi
248d(5): mov $0x4,%edi
2492(5): call 0x238e(%rip)
2497(7): lea 0x819a(%rip),%rsi
249e(3): mov %rax,%r15
24a1(5): mov $0x5,%edx
24a6(2): xor %edi,%edi
24a8(5): call 0xfffff498(%rip)
24ad(3): mov %r15,%rcx
24b0(3): mov %rax,%rdx
24b3(2): xor %esi,%esi
24b5(2): xor %edi,%edi
24b7(2): xor %eax,%eax
24b9(5): call 0xfffff6e7(%rip)
24be(7): lea 0x81e3(%rip),%rsi
24c5(5): mov $0x5,%edx
24ca(2): xor %edi,%edi
24cc(3): xor %r15d,%r15d
24cf(5): call 0xfffff471(%rip)
24d4(2): xor %esi,%esi
24d6(3): mov %rax,%rdx
24d9(2): xor %edi,%edi
24db(2): xor %eax,%eax
24dd(5): call 0xfffff6c3(%rip)
24e2(5): jmp 0xfffffaf5(%rip)
24e7(4): sub $0x1,%r14d
24eb(6): jz 0x213(%rip)
24f1(7): mov $0x0,0x20bbfa(%rip)
24f8(5): jmp 0xfffff9cb(%rip)
24fd(7): lea 0x20bbcc(%rip),%rdi
2504(5): call 0x260c(%rip)
2509(3): test %rax,%rax
250c(7): mov %rax,0x20bbd5(%rip)
2513(7): movsxd 0x20bb76(%rip),%r14
251a(6): jnz 0xfffffa13(%rip)
2520(7): lea 0x8ea9(%rip),%rsi
2527(5): mov $0x4,%edi
252c(5): call 0x22f4(%rip)
2531(7): lea 0x80e0(%rip),%rsi
2538(5): mov $0x5,%edx
253d(2): xor %edi,%edi
253f(3): mov %rax,%rbx
2542(5): call 0xfffff3fe(%rip)
2547(3): mov 0x0(%rbp),%esi
254a(3): mov %rax,%rdx
254d(3): mov %rbx,%rcx
2550(5): mov $0x1,%edi
2555(2): xor %eax,%eax
2557(5): call 0xfffff649(%rip)
255c(3): mov %r15,%rsi
255f(5): mov $0x4,%edi
2564(5): call 0x22bc(%rip)
2569(7): lea 0x8258(%rip),%rsi
2570(3): mov %rax,%r15
2573(5): mov $0x5,%edx
2578(2): xor %edi,%edi
257a(5): call 0xfffff3c6(%rip)
257f(3): mov %r15,%rcx
2582(3): mov %rax,%rdx
2585(2): xor %esi,%esi
2587(2): xor %edi,%edi
2589(2): xor %eax,%eax
258b(3): xor %r15d,%r15d
258e(5): call 0xfffff612(%rip)
2593(5): jmp 0xfffffa44(%rip)
2598(7): lea 0x8e31(%rip),%rdx
259f(5): mov $0x4,%esi
25a4(5): mov $0x1,%edi
25a9(5): mov %rcx,0x18(%rsp)
25ae(5): call 0x2152(%rip)
25b3(5): mov 0x18(%rsp),%rcx
25b8(2): xor %edi,%edi
25ba(5): mov $0x4,%esi
25bf(3): mov %rax,%r15
25c2(3): mov %rcx,%rdx
25c5(5): call 0x213b(%rip)
25ca(7): lea 0x8097(%rip),%rsi
25d1(2): xor %edi,%edi
25d3(5): mov $0x5,%edx
25d8(5): mov %rax,0x18(%rsp)
25dd(5): call 0xfffff363(%rip)
25e2(5): mov 0x18(%rsp),%rcx
25e7(3): mov %rax,%rdx
25ea(3): mov %r15,%r8
25ed(2): xor %esi,%esi
25ef(2): xor %edi,%edi
25f1(2): xor %eax,%eax
25f3(5): call 0xfffff5ad(%rip)
25f8(5): jmp 0xfffffec6(%rip)
25fd(7): lea 0x8dcc(%rip),%rdx
2604(5): mov $0x4,%esi
2609(5): mov $0x1,%edi
260e(5): mov %rcx,0x18(%rsp)
2613(5): call 0x20ed(%rip)
2618(5): mov 0x18(%rsp),%rcx
261d(2): xor %edi,%edi
261f(5): mov $0x4,%esi
2624(3): mov %rax,%r15
2627(3): mov %rcx,%rdx
262a(5): call 0x20d6(%rip)
262f(7): lea 0x8032(%rip),%rsi
2636(2): xor %edi,%edi
2638(5): mov $0x5,%edx
263d(5): mov %rax,0x18(%rsp)
2642(5): call 0xfffff2fe(%rip)
2647(5): mov 0x18(%rsp),%rcx
264c(3): mov %rax,%rdx
264f(3): mov %r15,%r8
2652(2): xor %esi,%esi
2654(2): xor %edi,%edi
2656(2): xor %eax,%eax
2658(5): call 0xfffff548(%rip)
265d(5): jmp 0xfffffb8c(%rip)
2662(2): xor %edi,%edi
2664(5): call 0x23c(%rip)
2669(5): mov 0x8(%rsp),%rsi
266e(5): mov $0x4,%edi
2673(6): mov $0x5f,(%rax)
2679(5): call 0x21a7(%rip)
267e(7): lea 0x7f6b(%rip),%rsi
2685(5): mov $0x5,%edx
268a(2): xor %edi,%edi
268c(3): mov %rax,%rbx
268f(5): call 0xfffff2b1(%rip)
2694(3): mov 0x0(%rbp),%esi
2697(3): mov %rax,%rdx
269a(3): mov %rbx,%rcx
269d(5): mov $0x1,%edi
26a2(2): xor %eax,%eax
26a4(5): call 0xfffff4fc(%rip)
26a9(4): mov 0x0(%rbx,%r14,8),%rbp
26ad(4): lea 0x1(%r14),%eax
26b1(6): mov %eax,0x20b9d9(%rip)
26b7(7): mov %rbp,0x20ba22(%rip)
26be(5): call 0xfffff1e2(%rip)
26c3(3): mov %rbp,%rdi
26c6(6): mov $0x5f,(%rax)
26cc(3): mov %rax,%rbx
26cf(5): call 0x2421(%rip)
26d4(7): lea 0x760f(%rip),%rsi
26db(5): mov $0x5,%edx
26e0(2): xor %edi,%edi
26e2(3): mov %rax,%rbp
26e5(5): call 0xfffff25b(%rip)
26ea(2): mov (%rbx),%esi
26ec(3): mov %rax,%rdx
26ef(3): mov %rbp,%rcx
26f2(5): mov $0x1,%edi
26f7(2): xor %eax,%eax
26f9(5): call 0xfffff4a7(%rip)
26fe(7): lea 0x7ebb(%rip),%rsi
2705(5): mov $0x5,%edx
270a(2): xor %edi,%edi
270c(5): call 0xfffff234(%rip)
2711(2): xor %esi,%esi
2713(3): mov %rax,%rdx
2716(5): mov $0x1,%edi
271b(2): xor %eax,%eax
271d(5): call 0xfffff483(%rip)
2722(5): call 0xfffff27e(%rip)
2727(7): lea 0x7581(%rip),%rsi
272e(5): mov $0x5,%edx
2733(2): xor %edi,%edi
2735(5): call 0xfffff20b(%rip)
273a(2): xor %esi,%esi
273c(3): mov %rax,%rdx
273f(5): mov $0x1,%edi
2744(2): xor %eax,%eax
2746(5): call 0xfffff45a(%rip)
274b(5): mov 0xfffffff8(%rbx,%rbp,8),%rdi
2750(5): call 0x23a0(%rip)
2755(7): lea 0x7575(%rip),%rsi
275c(3): mov %rax,%rbx
275f(2): xor %edi,%edi
2761(5): mov $0x5,%edx
2766(5): call 0xfffff1da(%rip)
276b(3): mov %rbx,%rcx
276e(3): mov %rax,%rdx
2771(2): xor %esi,%esi
2773(2): xor %edi,%edi
2775(2): xor %eax,%eax
2777(5): call 0xfffff429(%rip)
277c(5): jmp 0xfffff67b(%rip)

"_start" :
2790(2): xor %ebp,%ebp
2792(3): mov %rdx,%r9
2795(1): pop %rsi
2796(3): mov %rsp,%rdx
2799(4): and $0xfffffff0,%rsp
279d(1): push %rax
279e(1): push %rsp
279f(7): lea 0x73ea(%rip),%r8
27a6(7): lea 0x7373(%rip),%rcx
27ad(7): lea 0xfffff4ec(%rip),%rdi
27b4(6): call 0x20b816(%rip)
27ba(1): hlt 

"deregister_tm_clones" :
27c0(7): lea 0x20b8b9(%rip),%rdi
27c7(1): push %rbp
27c8(7): lea 0x20b8b1(%rip),%rax
27cf(3): cmp %rdi,%rax
27d2(3): mov %rsp,%rbp
27d5(2): jz 0x1b(%rip)
27d7(7): mov 0x20b7ea(%rip),%rax
27de(3): test %rax,%rax
27e1(2): jz 0xf(%rip)
27e3(1): pop %rbp
27e4(2): jmp %rax
27e6(a): nop 0x0(%rax,%rax,1)
27f0(1): pop %rbp
27f1(1): ret near (%rsp)

"register_tm_clones" :
2800(7): lea 0x20b879(%rip),%rdi
2807(7): lea 0x20b872(%rip),%rsi
280e(1): push %rbp
280f(3): sub %rdi,%rsi
2812(3): mov %rsp,%rbp
2815(4): sar $0x3,%rsi
2819(3): mov %rsi,%rax
281c(4): shr $0x3f,%rax
2820(3): add %rax,%rsi
2823(3): sar $0x1,%rsi
2826(2): jz 0x1a(%rip)
2828(7): mov 0x20b7b1(%rip),%rax
282f(3): test %rax,%rax
2832(2): jz 0xe(%rip)
2834(1): pop %rbp
2835(2): jmp %rax
2837(9): nop 0x0(%rax,%rax,1)
2840(1): pop %rbp
2841(1): ret near (%rsp)

"__do_global_dtors_aux" :
2850(7): cmp $0x0,0x20b871(%rip)
2857(2): jnz 0x31(%rip)
2859(8): cmp $0x0,0x20b787(%rip)
2861(1): push %rbp
2862(3): mov %rsp,%rbp
2865(2): jz 0xe(%rip)
2867(7): mov 0x20b79a(%rip),%rdi
286e(5): call 0xfffff42a(%rip)
2873(5): call 0xffffff4d(%rip)
2878(7): mov $0x1,0x20b849(%rip)
287f(1): pop %rbp
2880(1): ret near (%rsp)
2881(7): nop 0x0(%rax)
2888(2): REP ret near (%rsp)

"frame_dummy" :
2890(1): push %rbp
2891(3): mov %rsp,%rbp
2894(1): pop %rbp
2895(5): jmp 0xffffff6b(%rip)

"usage" :
28a0(2): push %r13
28a2(2): push %r12
28a4(5): mov $0x5,%edx
28a9(1): push %rbp
28aa(1): push %rbx
28ab(2): mov %edi,%ebp
28ad(7): sub $0x88,%rsp
28b4(7): mov 0x20b84d(%rip),%rbx
28bb(9): mov $0x28,%rax
28c4(5): mov %rax,0x78(%rsp)
28c9(2): xor %eax,%eax
28cb(2): test %edi,%edi
28cd(2): jz 0x30(%rip)
28cf(7): lea 0x74ca(%rip),%rsi
28d6(2): xor %edi,%edi
28d8(5): call 0xfffff068(%rip)
28dd(7): mov 0x20b7dc(%rip),%rdi
28e4(3): mov %rax,%rdx
28e7(3): mov %rbx,%rcx
28ea(5): mov $0x1,%esi
28ef(2): xor %eax,%eax
28f1(5): call 0xfffff34f(%rip)
28f6(2): mov %ebp,%edi
28f8(5): call 0xfffff328(%rip)
28fd(7): lea 0x74c4(%rip),%rsi
2904(2): xor %edi,%edi
2906(5): call 0xfffff03a(%rip)
290b(3): mov %rbx,%rcx
290e(3): mov %rbx,%r8
2911(3): mov %rbx,%rdx
2914(3): mov %rax,%rsi
2917(5): mov $0x1,%edi
291c(2): xor %eax,%eax
291e(5): call 0xfffff262(%rip)
2923(7): mov 0x20b75e(%rip),%rbx
292a(7): lea 0x7537(%rip),%rsi
2931(5): mov $0x5,%edx
2936(2): xor %edi,%edi
2938(5): call 0xfffff008(%rip)
293d(3): mov %rbx,%rsi
2940(3): mov %rax,%rdi
2943(5): call 0xfffff13d(%rip)
2948(7): mov 0x20b739(%rip),%rbx
294f(7): lea 0x75a2(%rip),%rsi
2956(5): mov $0x5,%edx
295b(2): xor %edi,%edi
295d(5): call 0xffffefe3(%rip)
2962(3): mov %rbx,%rsi
2965(3): mov %rax,%rdi
2968(5): call 0xfffff118(%rip)
296d(7): mov 0x20b714(%rip),%rbx
2974(7): lea 0x75cd(%rip),%rsi
297b(5): mov $0x5,%edx
2980(2): xor %edi,%edi
2982(5): call 0xffffefbe(%rip)
2987(3): mov %rbx,%rsi
298a(3): mov %rax,%rdi
298d(5): call 0xfffff0f3(%rip)
2992(7): mov 0x20b6ef(%rip),%rbx
2999(7): lea 0x7690(%rip),%rsi
29a0(5): mov $0x5,%edx
29a5(2): xor %edi,%edi
29a7(5): call 0xffffef99(%rip)
29ac(3): mov %rbx,%rsi
29af(3): mov %rax,%rdi
29b2(5): call 0xfffff0ce(%rip)
29b7(7): mov 0x20b6ca(%rip),%rbx
29be(7): lea 0x778b(%rip),%rsi
29c5(5): mov $0x5,%edx
29ca(2): xor %edi,%edi
29cc(5): call 0xffffef74(%rip)
29d1(3): mov %rbx,%rsi
29d4(3): mov %rax,%rdi
29d7(5): call 0xfffff0a9(%rip)
29dc(7): mov 0x20b6a5(%rip),%rbx
29e3(7): lea 0x77e6(%rip),%rsi
29ea(5): mov $0x5,%edx
29ef(2): xor %edi,%edi
29f1(5): call 0xffffef4f(%rip)
29f6(3): mov %rbx,%rsi
29f9(3): mov %rax,%rdi
29fc(5): call 0xfffff084(%rip)
2a01(7): mov 0x20b680(%rip),%rbx
2a08(7): lea 0x7839(%rip),%rsi
2a0f(5): mov $0x5,%edx
2a14(2): xor %edi,%edi
2a16(5): call 0xffffef2a(%rip)
2a1b(3): mov %rbx,%rsi
2a1e(3): mov %rax,%rdi
2a21(5): call 0xfffff05f(%rip)
2a26(7): mov 0x20b65b(%rip),%rbx
2a2d(7): lea 0x785c(%rip),%rsi
2a34(5): mov $0x5,%edx
2a39(2): xor %edi,%edi
2a3b(5): call 0xffffef05(%rip)
2a40(3): mov %rbx,%rsi
2a43(3): mov %rax,%rdi
2a46(5): call 0xfffff03a(%rip)
2a4b(7): mov 0x20b636(%rip),%rbx
2a52(7): lea 0x787f(%rip),%rsi
2a59(5): mov $0x5,%edx
2a5e(2): xor %edi,%edi
2a60(5): call 0xffffeee0(%rip)
2a65(3): mov %rbx,%rsi
2a68(3): mov %rax,%rdi
2a6b(5): call 0xfffff015(%rip)
2a70(7): mov 0x20b611(%rip),%rbx
2a77(7): lea 0x7a32(%rip),%rsi
2a7e(5): mov $0x5,%edx
2a83(2): xor %edi,%edi
2a85(5): call 0xffffeebb(%rip)
2a8a(3): mov %rbx,%rsi
2a8d(3): mov %rax,%rdi
2a90(5): call 0xffffeff0(%rip)
2a95(7): mov 0x20b5ec(%rip),%rbx
2a9c(7): lea 0x7a3d(%rip),%rsi
2aa3(5): mov $0x5,%edx
2aa8(2): xor %edi,%edi
2aaa(5): call 0xffffee96(%rip)
2aaf(3): mov %rbx,%rsi
2ab2(3): mov %rax,%rdi
2ab5(7): lea 0x7108(%rip),%rbx
2abc(5): call 0xffffefc4(%rip)
2ac1(7): lea 0x7102(%rip),%rax
2ac8(7): lea 0x713c(%rip),%rcx
2acf(9): mov $0x0,0x60(%rsp)
2ad8(9): mov $0x0,0x68(%rsp)
2ae1(3): mov %rsp,%rdx
2ae4(4): mov %rax,(%rsp)
2ae8(7): lea 0x70dd(%rip),%rax
2aef(5): mov %rcx,0x30(%rsp)
2af4(7): lea 0x711a(%rip),%rcx
2afb(5): mov %rax,0x8(%rsp)
2b00(7): lea 0x713d(%rip),%rax
2b07(5): mov %rcx,0x40(%rsp)
2b0c(7): lea 0x710c(%rip),%rcx
2b13(5): mov %rax,0x10(%rsp)
2b18(7): lea 0x70bd(%rip),%rax
2b1f(5): mov %rcx,0x50(%rsp)
2b24(5): mov %rax,0x18(%rsp)
2b29(7): lea 0x70c2(%rip),%rax
2b30(5): mov %rax,0x20(%rsp)
2b35(7): lea 0x70c0(%rip),%rax
2b3c(5): mov %rax,0x28(%rsp)
2b41(5): mov %rax,0x38(%rsp)
2b46(5): mov %rax,0x48(%rsp)
2b4b(5): mov %rax,0x58(%rsp)
2b50(4): add $0x10,%rdx
2b54(3): mov (%rdx),%rdi
2b57(3): test %rdi,%rdi
2b5a(2): jz 0x15(%rip)
2b5c(5): mov $0x6,%ecx
2b61(3): mov %rbx,%rsi
2b64(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2b66(3): setnbe %al
2b69(2): sbb $0x0,%al
2b6b(2): test %al,%al
2b6d(2): jnz 0xffffffe3(%rip)
2b6f(4): mov 0x8(%rdx),%r12
2b73(2): xor %edi,%edi
2b75(5): mov $0x5,%edx
2b7a(7): lea 0x70a8(%rip),%rsi
2b81(3): test %r12,%r12
2b84(6): jz 0xc7(%rip)
2b8a(5): call 0xffffedb6(%rip)
2b8f(7): lea 0x7982(%rip),%rcx
2b96(7): lea 0x70a3(%rip),%rdx
2b9d(3): mov %rax,%rsi
2ba0(5): mov $0x1,%edi
2ba5(2): xor %eax,%eax
2ba7(5): call 0xffffefd9(%rip)
2bac(2): xor %esi,%esi
2bae(5): mov $0x5,%edi
2bb3(5): call 0xffffefbd(%rip)
2bb8(3): test %rax,%rax
2bbb(2): jz 0x1e(%rip)
2bbd(7): lea 0x708a(%rip),%rsi
2bc4(5): mov $0x3,%edx
2bc9(3): mov %rax,%rdi
2bcc(5): call 0xffffece4(%rip)
2bd1(2): test %eax,%eax
2bd3(6): jnz 0x10d(%rip)
2bd9(7): lea 0x7072(%rip),%rsi
2be0(2): xor %edi,%edi
2be2(5): mov $0x5,%edx
2be7(5): call 0xffffed59(%rip)
2bec(7): lea 0x6fd1(%rip),%rcx
2bf3(7): lea 0x791e(%rip),%rdx
2bfa(3): mov %rax,%rsi
2bfd(5): mov $0x1,%edi
2c02(2): xor %eax,%eax
2c04(5): call 0xffffef7c(%rip)
2c09(3): cmp %rbx,%r12
2c0c(7): lea 0x6fd3(%rip),%rcx
2c13(7): lea 0x81e7(%rip),%rbx
2c1a(4): cmove %rcx,%rbx
2c1e(7): lea 0x7963(%rip),%rsi
2c25(2): xor %edi,%edi
2c27(5): mov $0x5,%edx
2c2c(5): call 0xffffed14(%rip)
2c31(3): mov %rbx,%rcx
2c34(3): mov %rax,%rsi
2c37(3): mov %r12,%rdx
2c3a(5): mov $0x1,%edi
2c3f(2): xor %eax,%eax
2c41(5): call 0xffffef3f(%rip)
2c46(5): jmp 0xfffffcb0(%rip)
2c4b(5): call 0xffffecf5(%rip)
2c50(7): lea 0x78c1(%rip),%rcx
2c57(7): lea 0x6fe2(%rip),%rdx
2c5e(3): mov %rax,%rsi
2c61(5): mov $0x1,%edi
2c66(2): xor %eax,%eax
2c68(5): call 0xffffef18(%rip)
2c6d(2): xor %esi,%esi
2c6f(5): mov $0x5,%edi
2c74(5): call 0xffffeefc(%rip)
2c79(3): test %rax,%rax
2c7c(2): jz 0x1a(%rip)
2c7e(7): lea 0x6fc9(%rip),%rsi
2c85(5): mov $0x3,%edx
2c8a(3): mov %rax,%rdi
2c8d(5): call 0xffffec23(%rip)
2c92(2): test %eax,%eax
2c94(2): jnz 0x45(%rip)
2c96(7): lea 0x6fb5(%rip),%rsi
2c9d(5): mov $0x5,%edx
2ca2(2): xor %edi,%edi
2ca4(7): lea 0x6f19(%rip),%r12
2cab(7): lea 0x6f34(%rip),%rbx
2cb2(5): call 0xffffec8e(%rip)
2cb7(7): lea 0x6f06(%rip),%rcx
2cbe(7): lea 0x7853(%rip),%rdx
2cc5(3): mov %rax,%rsi
2cc8(5): mov $0x1,%edi
2ccd(2): xor %eax,%eax
2ccf(5): call 0xffffeeb1(%rip)
2cd4(5): jmp 0xffffff4a(%rip)
2cd9(7): lea 0x6ee4(%rip),%r12
2ce0(7): mov 0x20b3a1(%rip),%r13
2ce7(7): lea 0x7852(%rip),%rsi
2cee(2): xor %edi,%edi
2cf0(5): mov $0x5,%edx
2cf5(5): call 0xffffec4b(%rip)
2cfa(3): mov %r13,%rsi
2cfd(3): mov %rax,%rdi
2d00(5): call 0xffffed80(%rip)
2d05(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
2d10(7): mov %rdi,0x20b3e9(%rip)
2d17(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2d20(7): mov %dil,0x20b3d1(%rip)
2d27(1): ret near (%rsp)

"close_stdout" :
2d30(1): push %rbp
2d31(1): push %rbx
2d32(4): sub $0x8,%rsp
2d36(7): mov 0x20b34b(%rip),%rdi
2d3d(5): call 0x4d83(%rip)
2d42(2): test %eax,%eax
2d44(2): jz 0x18(%rip)
2d46(5): call 0xffffeb5a(%rip)
2d4b(7): cmp $0x0,0x20b3a6(%rip)
2d52(3): mov %rax,%rbx
2d55(2): jz 0x1e(%rip)
2d57(3): cmp $0x20,(%rax)
2d5a(2): jnz 0x19(%rip)
2d5c(7): mov 0x20b35d(%rip),%rdi
2d63(5): call 0x4d5d(%rip)
2d68(2): test %eax,%eax
2d6a(2): jnz 0x48(%rip)
2d6c(4): add $0x8,%rsp
2d70(1): pop %rbx
2d71(1): pop %rbp
2d72(1): ret near (%rsp)
2d73(7): lea 0x7b07(%rip),%rsi
2d7a(2): xor %edi,%edi
2d7c(5): mov $0x5,%edx
2d81(5): call 0xffffebbf(%rip)
2d86(7): mov 0x20b373(%rip),%rdi
2d8d(3): mov %rax,%rbp
2d90(3): test %rdi,%rdi
2d93(2): jz 0x2a(%rip)
2d95(5): call 0x1b5b(%rip)
2d9a(2): mov (%rbx),%esi
2d9c(7): lea 0x7aea(%rip),%rdx
2da3(3): mov %rax,%rcx
2da6(3): mov %rbp,%r8
2da9(2): xor %edi,%edi
2dab(2): xor %eax,%eax
2dad(5): call 0xffffedf3(%rip)
2db2(6): mov 0x20b260(%rip),%edi
2db8(5): call 0xffffeb08(%rip)
2dbd(2): mov (%rbx),%esi
2dbf(7): lea 0x7acb(%rip),%rdx
2dc6(3): mov %rax,%rcx
2dc9(2): xor %edi,%edi
2dcb(2): xor %eax,%eax
2dcd(5): call 0xffffedd3(%rip)
2dd2(2): jmp 0xffffffe0(%rip)

"set_program_name" :
2de0(3): test %rdi,%rdi
2de3(1): push %rbx
2de4(2): jz 0x79(%rip)
2de6(5): mov $0x2f,%esi
2deb(3): mov %rdi,%rbx
2dee(5): call 0xffffebf2(%rip)
2df3(3): test %rax,%rax
2df6(2): jz 0x57(%rip)
2df8(4): lea 0x1(%rax),%r8
2dfc(3): mov %r8,%rdx
2dff(3): sub %rbx,%rdx
2e02(4): cmp $0x6,%rdx
2e06(2): jle 0x47(%rip)
2e08(4): lea 0xfffffffa(%rax),%rsi
2e0c(7): lea 0x7abd(%rip),%rdi
2e13(5): mov $0x7,%ecx
2e18(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2e1a(3): setnbe %dl
2e1d(3): sbb $0x0,%dl
2e20(2): test %dl,%dl
2e22(2): jnz 0x2b(%rip)
2e24(7): lea 0x7aad(%rip),%rdi
2e2b(5): mov $0x3,%ecx
2e30(3): mov %r8,%rsi
2e33(3): mov %r8,%rbx
2e36(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2e38(3): setnbe %dl
2e3b(3): sbb $0x0,%dl
2e3e(2): test %dl,%dl
2e40(2): jnz 0xd(%rip)
2e42(4): lea 0x4(%rax),%rbx
2e46(7): mov %rbx,0x20b233(%rip)
2e4d(7): mov %rbx,0x20b2b4(%rip)
2e54(7): mov %rbx,0x20b245(%rip)
2e5b(1): pop %rbx
2e5c(1): ret near (%rsp)
2e5d(7): mov 0x20b25c(%rip),%rcx
2e64(7): lea 0x7a2d(%rip),%rdi
2e6b(5): mov $0x37,%edx
2e70(5): mov $0x1,%esi
2e75(5): call 0xffffedbb(%rip)
2e7a(5): call 0xffffea16(%rip)

"gettext_quote.part.1" :
2e80(1): push %rbp
2e81(1): push %rbx
2e82(3): mov %rdi,%rbp
2e85(2): mov %esi,%ebx
2e87(4): sub $0x8,%rsp
2e8b(5): call 0x61b5(%rip)
2e90(3): movzx (%rax),%edx
2e93(3): and $0xdf,%edx
2e96(3): cmp $0x55,%dl
2e99(2): jz 0x77(%rip)
2e9b(3): cmp $0x47,%dl
2e9e(2): jz 0x22(%rip)
2ea0(7): lea 0x7a44(%rip),%rax
2ea7(7): lea 0x84ad(%rip),%rdx
2eae(3): cmp $0x9,%ebx
2eb1(4): cmovne %rdx,%rax
2eb5(4): add $0x8,%rsp
2eb9(1): pop %rbx
2eba(1): pop %rbp
2ebb(1): ret near (%rsp)
2ebc(4): nop 0x0(%rax)
2ec0(4): movzx 0x1(%rax),%edx
2ec4(3): and $0xdf,%edx
2ec7(3): cmp $0x42,%dl
2eca(2): jnz 0xffffffd6(%rip)
2ecc(4): cmp $0x31,0x2(%rax)
2ed0(2): jnz 0xffffffd0(%rip)
2ed2(4): cmp $0x38,0x3(%rax)
2ed6(2): jnz 0xffffffca(%rip)
2ed8(4): cmp $0x30,0x4(%rax)
2edc(2): jnz 0xffffffc4(%rip)
2ede(4): cmp $0x33,0x5(%rax)
2ee2(2): jnz 0xffffffbe(%rip)
2ee4(4): cmp $0x30,0x6(%rax)
2ee8(2): jnz 0xffffffb8(%rip)
2eea(4): cmp $0x0,0x7(%rax)
2eee(2): jnz 0xffffffb2(%rip)
2ef0(4): cmp $0x60,0x0(%rbp)
2ef4(7): lea 0x79e9(%rip),%rax
2efb(7): lea 0x79e6(%rip),%rdx
2f02(4): cmovne %rdx,%rax
2f06(4): add $0x8,%rsp
2f0a(1): pop %rbx
2f0b(1): pop %rbp
2f0c(1): ret near (%rsp)
2f0d(3): nop (%rax)
2f10(4): movzx 0x1(%rax),%edx
2f14(3): and $0xdf,%edx
2f17(3): cmp $0x54,%dl
2f1a(2): jnz 0xffffff86(%rip)
2f1c(4): movzx 0x2(%rax),%edx
2f20(3): and $0xdf,%edx
2f23(3): cmp $0x46,%dl
2f26(6): jnz 0xffffff7a(%rip)
2f2c(4): cmp $0x2d,0x3(%rax)
2f30(6): jnz 0xffffff70(%rip)
2f36(4): cmp $0x38,0x4(%rax)
2f3a(6): jnz 0xffffff66(%rip)
2f40(4): cmp $0x0,0x5(%rax)
2f44(6): jnz 0xffffff5c(%rip)
2f4a(4): cmp $0x60,0x0(%rbp)
2f4e(7): lea 0x7987(%rip),%rax
2f55(7): lea 0x7984(%rip),%rdx
2f5c(4): cmovne %rdx,%rax
2f60(4): add $0x8,%rsp
2f64(1): pop %rbx
2f65(1): pop %rbp
2f66(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2f70(2): push %r15
2f72(2): push %r14
2f74(3): mov %r8d,%r15d
2f77(2): push %r13
2f79(2): push %r12
2f7b(3): mov %rdi,%r14
2f7e(1): push %rbp
2f7f(1): push %rbx
2f80(3): mov %r9d,%ebx
2f83(3): mov %rsi,%r13
2f86(3): mov %rcx,%rbp
2f89(3): and $0x2,%ebx
2f8c(7): sub $0xb8,%rsp
2f93(8): mov 0xf0(%rsp),%rax
2f9b(5): mov %rdx,0x10(%rsp)
2fa0(5): mov %r8d,0x8(%rsp)
2fa5(5): mov %r9d,0x78(%rsp)
2faa(5): mov %rax,0x20(%rsp)
2faf(8): mov 0xf8(%rsp),%rax
2fb7(5): mov %rax,0x68(%rsp)
2fbc(8): mov 0x100(%rsp),%rax
2fc4(5): mov %rax,0x60(%rsp)
2fc9(9): mov $0x28,%rax
2fd2(8): mov %rax,0xa8(%rsp)
2fda(2): xor %eax,%eax
2fdc(5): call 0xffffe974(%rip)
2fe1(4): cmp $0xa,%r15d
2fe5(5): mov %rax,0x58(%rsp)
2fea(6): jnbe 0x11b5(%rip)
2ff0(7): lea 0x7949(%rip),%rcx
2ff7(3): mov %r15d,%edx
2ffa(4): movsxd 0x0(%rcx,%rdx,4),%rax
2ffe(3): add %rcx,%rax
3001(2): jmp %rax
3003(5): mov $0x1,0xe(%rsp)
3008(5): mov $0x0,0x7c(%rsp)
300d(3): xor %r12d,%r12d
3010(9): mov $0x0,0x50(%rsp)
3019(5): mov $0x1,0xf(%rsp)
301e(5): mov $0x0,0xd(%rsp)
3023(7): lea 0x8331(%rip),%rax
302a(9): mov $0x1,0x18(%rsp)
3033(3): xor %r15d,%r15d
3036(8): mov $0x2,0x8(%rsp)
303e(5): mov %rax,0x48(%rsp)
3043(3): xor %r11d,%r11d
3046(3): mov %rbp,%rax
3049(3): mov %r12d,%r8d
304c(3): mov %r11,%rbp
304f(3): mov %rax,%r11
3052(6): nop 0x0(%rax,%rax,1)
3058(3): cmp %rbp,%r11
305b(4): setnz %r12b
305f(4): cmp $0xffffffff,%r11
3063(2): jnz 0xf(%rip)
3065(5): mov 0x10(%rsp),%rax
306a(4): cmp $0x0,0x0(%rax,%rbp,1)
306e(4): setnz %r12b
3072(3): test %r12b,%r12b
3075(6): jz 0x65b(%rip)
307b(5): cmp $0x2,0x8(%rsp)
3080(5): mov 0x10(%rsp),%rdi
3085(4): lea 0x0(%rdi,%rbp,1),%r9
3089(3): setnz %al
308c(4): and 0xd(%rsp),%al
3090(3): mov %eax,%r10d
3093(6): jz 0xad(%rip)
3099(5): mov 0x18(%rsp),%rax
309e(3): test %rax,%rax
30a1(6): jz 0x42f(%rip)
30a7(4): cmp $0xffffffff,%r11
30ab(5): lea 0x0(%rbp,%rax,1),%rbx
30b0(2): jnz 0x30(%rip)
30b2(4): cmp $0x1,%rax
30b6(2): jbe 0x2a(%rip)
30b8(5): mov %r8b,0x38(%rsp)
30bd(5): mov %r10b,0x30(%rsp)
30c2(5): mov %r9,0x28(%rsp)
30c7(5): call 0xffffe899(%rip)
30cc(6): movzx 0x38(%rsp),%r8d
30d2(6): movzx 0x30(%rsp),%r10d
30d8(3): mov %rax,%r11
30db(5): mov 0x28(%rsp),%r9
30e0(3): cmp %r11,%rbx
30e3(5): mov %r10b,0x28(%rsp)
30e8(6): jnbe 0x5b8(%rip)
30ee(5): mov 0x18(%rsp),%rdx
30f3(5): mov 0x48(%rsp),%rsi
30f8(3): mov %r9,%rdi
30fb(5): mov %r11,0x40(%rsp)
3100(5): mov %r8b,0x38(%rsp)
3105(5): mov %r9,0x30(%rsp)
310a(5): call 0xffffe966(%rip)
310f(2): test %eax,%eax
3111(5): mov 0x30(%rsp),%r9
3116(6): movzx 0x38(%rsp),%r8d
311c(5): mov 0x40(%rsp),%r11
3121(6): jnz 0x57f(%rip)
3127(5): cmp $0x0,0xf(%rsp)
312c(6): movzx 0x28(%rsp),%r10d
3132(6): jnz 0xf83(%rip)
3138(8): nop 0x0(%rax,%rax,1)
3140(4): movzx (%r9),%ebx
3144(3): cmp $0x7e,%bl
3147(6): jnbe 0x321(%rip)
314d(7): lea 0x7818(%rip),%rcx
3154(3): movzx %bl,%edx
3157(4): movsxd 0x0(%rcx,%rdx,4),%rax
315b(3): add %rcx,%rax
315e(2): jmp %rax
3160(3): xor %r10d,%r10d
3163(4): cmp $0x1,%r11
3167(3): setnz %al
316a(4): cmp $0xffffffff,%r11
316e(2): jnz 0xe(%rip)
3170(5): mov 0x10(%rsp),%rax
3175(4): cmp $0x0,0x1(%rax)
3179(3): setnz %al
317c(5): cmp $0x2,0x8(%rsp)
3181(3): setz %dl
3184(2): test %al,%al
3186(6): jz 0x252(%rip)
318c(3): xor %r12d,%r12d
318f(2): xor %eax,%eax
3191(7): nop 0x0(%rax)
3198(5): cmp $0x1,0xd(%rsp)
319d(6): jnz 0x115(%rip)
31a3(2): test %dl,%dl
31a5(6): jnz 0x10d(%rip)
31ab(5): mov 0x20(%rsp),%rsi
31b0(3): test %rsi,%rsi
31b3(2): jz 0x16(%rip)
31b5(2): mov %ebx,%edx
31b7(3): shr $0x5,%dl
31ba(3): movzx %dl,%edx
31bd(3): mov 0x0(%rsi,%rdx,4),%edx
31c0(3): bt %ebx,%edx
31c3(6): jb 0x150(%rip)
31c9(3): test %r10b,%r10b
31cc(6): jnz 0x147(%rip)
31d2(3): xor $0x1,%eax
31d5(4): add $0x1,%rbp
31d9(3): and %r8d,%eax
31dc(2): test %al,%al
31de(2): jz 0x22(%rip)
31e0(3): cmp %r15,%r13
31e3(2): jbe 0x7(%rip)
31e5(5): mov $0x27,0x0(%r14,%r15,1)
31ea(4): lea 0x1(%r15),%rax
31ee(3): cmp %rax,%r13
31f1(2): jbe 0x8(%rip)
31f3(6): mov $0x27,0x1(%r14,%r15,1)
31f9(4): add $0x2,%r15
31fd(3): xor %r8d,%r8d
3200(3): cmp %r13,%r15
3203(2): jnb 0x6(%rip)
3205(4): mov %bl,0x0(%r14,%r15,1)
3209(5): movzx 0xe(%rsp),%edi
320e(4): add $0x1,%r15
3212(5): mov $0x0,%eax
3217(3): test %r12b,%r12b
321a(3): cmove %eax,%edi
321d(5): mov %dil,0xe(%rsp)
3222(5): jmp 0xfffffe36(%rip)
3227(9): nop 0x0(%rax,%rax,1)
3230(3): xor %r10d,%r10d
3233(4): mov 0x8(%rsp),%eax
3237(3): cmp $0x2,%eax
323a(6): jz 0x5be(%rip)
3240(3): cmp $0x5,%eax
3243(6): jz 0x575(%rip)
3249(3): cmp $0x2,%eax
324c(5): mov $0x3f,%ebx
3251(3): setz %dl
3254(3): xor %r12d,%r12d
3257(2): xor %eax,%eax
3259(5): jmp 0xffffff3f(%rip)
325e(2): nop 
3260(3): xor %r10d,%r10d
3263(5): cmp $0x2,0x8(%rsp)
3268(6): jz 0x508(%rip)
326e(5): mov %r12b,0x7c(%rsp)
3273(2): xor %edx,%edx
3275(2): xor %eax,%eax
3277(5): mov $0x27,%ebx
327c(5): jmp 0xffffff1c(%rip)
3281(7): nop 0x0(%rax)
3288(5): mov $0x9,%edx
328d(5): mov $0x74,%ebx
3292(5): cmp $0x2,0x8(%rsp)
3297(3): setz %al
329a(4): and 0xf(%rsp),%al
329e(6): jnz 0x150(%rip)
32a4(5): cmp $0x0,0xd(%rsp)
32a9(2): jnz 0x67(%rip)
32ab(2): mov %edx,%ebx
32ad(3): xor %r12d,%r12d
32b0(2): xor %eax,%eax
32b2(5): cmp $0x0,0xf(%rsp)
32b7(6): jnz 0xfffffef4(%rip)
32bd(5): jmp 0xffffff0c(%rip)
32c2(6): nop 0x0(%rax,%rax,1)
32c8(5): mov $0x8,%edx
32cd(5): mov $0x62,%ebx
32d2(2): jmp 0xffffffd2(%rip)
32d4(4): nop 0x0(%rax)
32d8(5): cmp $0x2,0x8(%rsp)
32dd(6): jz 0x3d3(%rip)
32e3(5): cmp $0x0,0xd(%rsp)
32e8(6): jz 0x218(%rip)
32ee(5): cmp $0x0,0xf(%rsp)
32f3(6): jz 0x20d(%rip)
32f9(6): cmp $0x0,0x18(%rsp)
32ff(6): jnz 0x3bc(%rip)
3305(5): mov $0x5c,%ebx
330a(6): nop 0x0(%rax,%rax,1)
3310(3): xor %r12d,%r12d
3313(5): cmp $0x2,0x8(%rsp)
3318(3): setz %dl
331b(5): cmp $0x0,0xf(%rsp)
3320(2): mov %edx,%eax
3322(6): jnz 0x856(%rip)
3328(3): mov %r8d,%eax
332b(3): xor $0x1,%eax
332e(2): and %dl,%al
3330(2): jz 0x31(%rip)
3332(3): cmp %r15,%r13
3335(2): jbe 0x7(%rip)
3337(5): mov $0x27,0x0(%r14,%r15,1)
333c(4): lea 0x1(%r15),%rdx
3340(3): cmp %rdx,%r13
3343(2): jbe 0x8(%rip)
3345(6): mov $0x24,0x1(%r14,%r15,1)
334b(4): lea 0x2(%r15),%rdx
334f(3): cmp %rdx,%r13
3352(2): jbe 0x8(%rip)
3354(6): mov $0x27,0x2(%r14,%r15,1)
335a(4): add $0x3,%r15
335e(3): mov %eax,%r8d
3361(3): cmp %r15,%r13
3364(2): jbe 0x7(%rip)
3366(5): mov $0x5c,0x0(%r14,%r15,1)
336b(4): add $0x1,%r15
336f(4): add $0x1,%rbp
3373(5): jmp 0xfffffe8d(%rip)
3378(8): nop 0x0(%rax,%rax,1)
3380(5): cmp $0x0,0xd(%rsp)
3385(6): jnz 0x1ce(%rip)
338b(2): xor %edx,%edx
338d(5): test $0x1,0x78(%rsp)
3392(6): jz 0xffffff19(%rip)
3398(4): add $0x1,%rbp
339c(5): jmp 0xfffffcbc(%rip)
33a1(7): nop 0x0(%rax)
33a8(5): cmp $0x2,0x8(%rsp)
33ad(3): setz %dl
33b0(2): xor %eax,%eax
33b2(5): jmp 0xfffffde6(%rip)
33b7(9): nop 0x0(%rax,%rax,1)
33c0(5): mov $0x7,%edx
33c5(5): mov $0x61,%ebx
33ca(5): jmp 0xfffffeda(%rip)
33cf(1): nop 
33d0(5): cmp $0x2,0x8(%rsp)
33d5(3): setz %dl
33d8(3): test %rbp,%rbp
33db(6): jnz 0xfffffdb1(%rip)
33e1(5): movzx 0xf(%rsp),%eax
33e6(2): and %dl,%al
33e8(6): jz 0xfffffdb0(%rip)
33ee(3): mov %r11,%rbp
33f1(8): mov $0x2,0x8(%rsp)
33f9(5): jmp 0x700(%rip)
33fe(2): nop 
3400(5): cmp $0x2,0x8(%rsp)
3405(3): setz %dl
3408(3): xor %r12d,%r12d
340b(2): jmp 0xffffffd6(%rip)
340d(3): nop (%rax)
3410(5): cmp $0x2,0x8(%rsp)
3415(5): mov $0x20,%ebx
341a(3): setz %dl
341d(2): jmp 0xffffffc4(%rip)
341f(1): nop 
3420(5): mov $0xd,%edx
3425(5): mov $0x72,%ebx
342a(5): jmp 0xfffffe68(%rip)
342f(1): nop 
3430(5): mov $0xc,%edx
3435(5): mov $0x66,%ebx
343a(5): jmp 0xfffffe6a(%rip)
343f(1): nop 
3440(5): mov $0xb,%edx
3445(5): mov $0x76,%ebx
344a(5): jmp 0xfffffe5a(%rip)
344f(1): nop 
3450(5): mov $0xa,%edx
3455(5): mov $0x6e,%ebx
345a(5): jmp 0xfffffe38(%rip)
345f(1): nop 
3460(3): xor %r10d,%r10d
3463(5): nop 0x0(%rax,%rax,1)
3468(6): cmp $0x1,0x58(%rsp)
346e(6): jnz 0x3aa(%rip)
3474(5): mov %r11,0x38(%rsp)
3479(5): mov %r8b,0x30(%rsp)
347e(5): mov %r10b,0x28(%rsp)
3483(5): call 0xffffe7ed(%rip)
3488(3): mov (%rax),%rcx
348b(3): movzx %bl,%edx
348e(6): movzx 0x28(%rsp),%r10d
3494(6): movzx 0x30(%rsp),%r8d
349a(5): mov 0x38(%rsp),%r11
349f(5): mov $0x1,%edi
34a4(4): movzx 0x0(%rcx,%rdx,2),%eax
34a8(4): and $0x4000,%ax
34ac(4): setnz %r12b
34b0(3): setz %al
34b3(4): and 0xd(%rsp),%al
34b7(2): test %al,%al
34b9(6): jnz 0x998(%rip)
34bf(5): cmp $0x2,0x8(%rsp)
34c4(3): setz %dl
34c7(5): jmp 0xfffffcd1(%rip)
34cc(4): nop 0x0(%rax)
34d0(4): movzx (%r9),%ebx
34d4(3): cmp $0x7e,%bl
34d7(2): jnbe 0xffffff89(%rip)
34d9(7): lea 0x7688(%rip),%rcx
34e0(3): movzx %bl,%edx
34e3(4): movsxd 0x0(%rcx,%rdx,4),%rax
34e7(3): add %rcx,%rax
34ea(2): jmp %rax
34ec(4): nop 0x0(%rax)
34f0(3): xor %r10d,%r10d
34f3(5): cmp $0x0,0xd(%rsp)
34f8(6): jnz 0xfffffdf6(%rip)
34fe(2): nop 
3500(5): mov $0x5c,%edx
3505(5): mov $0x5c,%ebx
350a(5): jmp 0xfffffd9a(%rip)
350f(1): nop 
3510(5): mov $0xc,%edx
3515(3): xor %r10d,%r10d
3518(5): mov $0x66,%ebx
351d(5): jmp 0xfffffd87(%rip)
3522(6): nop 0x0(%rax,%rax,1)
3528(5): mov $0xa,%edx
352d(3): xor %r10d,%r10d
3530(5): mov $0x6e,%ebx
3535(5): jmp 0xfffffd5d(%rip)
353a(6): nop 0x0(%rax,%rax,1)
3540(5): mov $0x61,%ebx
3545(5): jmp 0xfffffdcb(%rip)
354a(6): nop 0x0(%rax,%rax,1)
3550(3): xor %r10d,%r10d
3553(5): cmp $0x2,0x8(%rsp)
3558(3): setz %dl
355b(5): cmp $0x0,0xf(%rsp)
3560(6): jnz 0xb9a(%rip)
3566(3): mov %r8d,%eax
3569(3): mov %r15,%rcx
356c(3): xor $0x1,%eax
356f(2): and %dl,%al
3571(2): jz 0x2f(%rip)
3573(3): cmp %r15,%r13
3576(2): jbe 0x7(%rip)
3578(5): mov $0x27,0x0(%r14,%r15,1)
357d(4): lea 0x1(%r15),%rcx
3581(3): cmp %rcx,%r13
3584(2): jbe 0x8(%rip)
3586(6): mov $0x24,0x1(%r14,%r15,1)
358c(4): lea 0x2(%r15),%rcx
3590(3): cmp %rcx,%r13
3593(6): jnbe 0x636(%rip)
3599(4): lea 0x3(%r15),%rcx
359d(3): mov %eax,%r8d
35a0(3): cmp %rcx,%r13
35a3(2): jbe 0x7(%rip)
35a5(5): mov $0x5c,0x0(%r14,%rcx,1)
35aa(5): cmp $0x2,0x8(%rsp)
35af(4): lea 0x1(%rcx),%r15
35b3(6): jz 0x606(%rip)
35b9(4): lea 0x1(%rbp),%rax
35bd(3): cmp %r11,%rax
35c0(2): jnb 0x1b(%rip)
35c2(5): mov 0x10(%rsp),%rax
35c7(5): movzx 0x1(%rax,%rbp,1),%eax
35cc(4): mov %al,0x28(%rsp)
35d0(3): sub $0x30,%eax
35d3(2): cmp $0x9,%al
35d5(6): jbe 0x834(%rip)
35db(3): mov %r12d,%eax
35de(5): mov $0x30,%ebx
35e3(3): xor %r12d,%r12d
35e6(5): jmp 0xfffffbb2(%rip)
35eb(5): nop 0x0(%rax,%rax,1)
35f0(5): cmp $0x2,0x8(%rsp)
35f5(3): mov %r10d,%r12d
35f8(3): setz %dl
35fb(3): xor %r10d,%r10d
35fe(2): xor %eax,%eax
3600(5): jmp 0xfffffb98(%rip)
3605(3): nop (%rax)
3608(5): cmp $0x2,0x8(%rsp)
360d(3): setz %dl
3610(3): xor %r10d,%r10d
3613(5): jmp 0xfffffdc5(%rip)
3618(8): nop 0x0(%rax,%rax,1)
3620(5): cmp $0x2,0x8(%rsp)
3625(3): setz %dl
3628(3): xor %r10d,%r10d
362b(3): xor %r12d,%r12d
362e(5): jmp 0xfffffdb3(%rip)
3633(5): nop 0x0(%rax,%rax,1)
3638(5): cmp $0x2,0x8(%rsp)
363d(3): mov %r10d,%r12d
3640(5): mov $0x20,%ebx
3645(3): setz %dl
3648(3): xor %r10d,%r10d
364b(5): jmp 0xfffffd96(%rip)
3650(5): mov $0xd,%edx
3655(3): xor %r10d,%r10d
3658(5): mov $0x72,%ebx
365d(5): jmp 0xfffffc35(%rip)
3662(6): nop 0x0(%rax,%rax,1)
3668(5): mov $0x76,%ebx
366d(5): jmp 0xfffffca3(%rip)
3672(6): nop 0x0(%rax,%rax,1)
3678(5): mov $0x9,%edx
367d(3): xor %r10d,%r10d
3680(5): mov $0x74,%ebx
3685(5): jmp 0xfffffc0d(%rip)
368a(6): nop 0x0(%rax,%rax,1)
3690(5): mov $0x62,%ebx
3695(5): jmp 0xfffffc7b(%rip)
369a(6): nop 0x0(%rax,%rax,1)
36a0(3): xor %r10d,%r10d
36a3(5): jmp 0xfffffa9d(%rip)
36a8(8): nop 0x0(%rax,%rax,1)
36b0(5): cmp $0x0,0xf(%rsp)
36b5(6): jnz 0x96b(%rip)
36bb(4): add $0x1,%rbp
36bf(3): mov %r8d,%eax
36c2(3): xor %r12d,%r12d
36c5(5): mov $0x5c,%ebx
36ca(5): jmp 0xfffffb12(%rip)
36cf(1): nop 
36d0(5): cmp $0x2,0x8(%rsp)
36d5(5): movzx 0xf(%rsp),%ebx
36da(3): mov %r8d,%r12d
36dd(3): mov %r11,%rbp
36e0(3): setz %dl
36e3(2): mov %ebx,%eax
36e5(3): test %r15,%r15
36e8(3): setz %cl
36eb(2): and %edx,%eax
36ed(2): and %cl,%al
36ef(6): jnz 0xa67(%rip)
36f5(2): mov %ebx,%eax
36f7(3): xor $0x1,%eax
36fa(2): and %al,%dl
36fc(6): jz 0x970(%rip)
3702(5): cmp $0x0,0x7c(%rsp)
3707(6): jz 0x963(%rip)
370d(5): cmp $0x0,0xe(%rsp)
3712(6): jnz 0x9fb(%rip)
3718(3): test %r13,%r13
371b(3): setz %al
371e(6): cmp $0x0,0x50(%rsp)
3724(3): setnz %dl
3727(2): and %dl,%al
3729(6): jz 0xa23(%rip)
372f(5): mov 0x50(%rsp),%r13
3734(7): lea 0x7c20(%rip),%rbx
373b(4): mov $0x27,(%r14)
373f(8): mov $0x2,0x8(%rsp)
3747(6): mov $0x1,%r15d
374d(9): mov $0x1,0x18(%rsp)
3756(5): mov $0x0,0xf(%rsp)
375b(5): mov %rbx,0x48(%rsp)
3760(4): mov %al,0x7c(%rsp)
3764(5): jmp 0xfffff8df(%rip)
3769(7): nop 0x0(%rax)
3770(5): cmp $0x0,0xf(%rsp)
3775(6): jnz 0x8ab(%rip)
377b(3): test %r13,%r13
377e(6): jz 0x402(%rip)
3784(2): xor %edx,%edx
3786(6): cmp $0x0,0x50(%rsp)
378c(6): jnz 0x3f4(%rip)
3792(5): mov %r13,0x50(%rsp)
3797(4): add $0x3,%r15
379b(2): xor %eax,%eax
379d(5): mov %r12b,0x7c(%rsp)
37a2(3): xor %r8d,%r8d
37a5(3): mov %rdx,%r13
37a8(5): mov $0x27,%ebx
37ad(5): jmp 0xfffffa1c(%rip)
37b2(6): nop 0x0(%rax,%rax,1)
37b8(5): test $0x4,0x78(%rsp)
37bd(2): jz 0x23(%rip)
37bf(4): lea 0x2(%rbp),%rcx
37c3(3): cmp %r11,%rcx
37c6(2): jnb 0x1a(%rip)
37c8(5): mov 0x10(%rsp),%rax
37cd(5): cmp $0x3f,0x1(%rax,%rbp,1)
37d2(6): jz 0x790(%rip)
37d8(8): nop 0x0(%rax,%rax,1)
37e0(2): xor %edx,%edx
37e2(3): xor %r12d,%r12d
37e5(2): xor %eax,%eax
37e7(5): mov $0x3f,%ebx
37ec(5): jmp 0xfffff9ac(%rip)
37f1(7): nop 0x0(%rax)
37f8(5): cmp $0x0,0xf(%rsp)
37fd(6): jnz 0x823(%rip)
3803(3): xor %r12d,%r12d
3806(2): xor %eax,%eax
3808(5): mov $0x3f,%ebx
380d(5): jmp 0xfffff9bc(%rip)
3812(6): nop 0x0(%rax,%rax,1)
3818(8): lea 0xa0(%rsp),%rax
3820(4): cmp $0xffffffff,%r11
3824(c): mov $0x0,0xa0(%rsp)
3830(5): mov %rax,0x28(%rsp)
3835(2): jnz 0x2f(%rip)
3837(5): mov 0x10(%rsp),%rdi
383c(5): mov %r8b,0x40(%rsp)
3841(5): mov %r10b,0x38(%rsp)
3846(5): mov %r9,0x30(%rsp)
384b(5): call 0xffffe115(%rip)
3850(6): movzx 0x40(%rsp),%r8d
3856(6): movzx 0x38(%rsp),%r10d
385c(3): mov %rax,%r11
385f(5): mov 0x30(%rsp),%r9
3864(8): lea 0x9c(%rsp),%rax
386c(2): xor %ecx,%ecx
386e(4): mov %bl,0x7e(%rsp)
3872(5): mov %r8b,0x7d(%rsp)
3877(3): mov %rcx,%rbx
387a(8): mov %r9,0x88(%rsp)
3882(5): mov %rax,0x38(%rsp)
3887(5): mov %r10b,0x7f(%rsp)
388c(8): mov %r15,0x80(%rsp)
3894(5): mov %r14,0x40(%rsp)
3899(5): mov %r13,0x70(%rsp)
389e(5): mov %r11,0x30(%rsp)
38a3(5): mov 0x10(%rsp),%rax
38a8(5): lea 0x0(%rbp,%rbx,1),%r14
38ad(5): mov 0x30(%rsp),%rdx
38b2(5): mov 0x28(%rsp),%rcx
38b7(5): mov 0x38(%rsp),%rdi
38bc(4): lea 0x0(%rax,%r14,1),%r13
38c0(3): sub %r14,%rdx
38c3(3): mov %r13,%rsi
38c6(5): call 0x401a(%rip)
38cb(3): test %rax,%rax
38ce(3): mov %rax,%r15
38d1(2): jz 0x50(%rip)
38d3(4): cmp $0xffffffff,%rax
38d7(6): jz 0x61e(%rip)
38dd(4): cmp $0xfffffffe,%rax
38e1(6): jz 0x5a0(%rip)
38e7(5): cmp $0x2,0x8(%rsp)
38ec(3): setz %al
38ef(4): and 0xf(%rsp),%al
38f3(6): jnz 0x19d(%rip)
38f9(7): mov 0x9c(%rsp),%edi
3900(5): call 0xffffe360(%rip)
3905(5): mov 0x28(%rsp),%rdi
390a(2): test %eax,%eax
390c(5): mov $0x0,%eax
3911(4): cmove %eax,%r12d
3915(3): add %r15,%rbx
3918(5): call 0xffffe338(%rip)
391d(2): test %eax,%eax
391f(2): jz 0xffffff84(%rip)
3921(3): mov %r12d,%edx
3924(3): mov %rbx,%rdi
3927(6): movzx 0x7d(%rsp),%r8d
392d(3): xor $0x1,%edx
3930(5): movzx 0x7e(%rsp),%ebx
3935(6): movzx 0x7f(%rsp),%r10d
393b(4): and 0xd(%rsp),%dl
393f(8): mov 0x80(%rsp),%r15
3947(5): mov 0x40(%rsp),%r14
394c(5): mov 0x70(%rsp),%r13
3951(5): mov 0x30(%rsp),%r11
3956(4): cmp $0x1,%rdi
395a(6): jbe 0x601(%rip)
3960(3): mov %rdi,%rcx
3963(2): xor %esi,%esi
3965(6): movzx 0xf(%rsp),%r9d
396b(3): add %rbp,%rcx
396e(5): mov 0x10(%rsp),%rdi
3973(5): jmp 0xbb(%rip)
3978(8): nop 0x0(%rax,%rax,1)
3980(5): cmp $0x2,0x8(%rsp)
3985(3): setz %al
3988(3): test %r9b,%r9b
398b(6): jnz 0x4b5(%rip)
3991(3): mov %r8d,%esi
3994(3): xor $0x1,%esi
3997(3): and %sil,%al
399a(2): jz 0x31(%rip)
399c(3): cmp %r15,%r13
399f(2): jbe 0x7(%rip)
39a1(5): mov $0x27,0x0(%r14,%r15,1)
39a6(4): lea 0x1(%r15),%rsi
39aa(3): cmp %rsi,%r13
39ad(2): jbe 0x8(%rip)
39af(6): mov $0x24,0x1(%r14,%r15,1)
39b5(4): lea 0x2(%r15),%rsi
39b9(3): cmp %rsi,%r13
39bc(2): jbe 0x8(%rip)
39be(6): mov $0x27,0x2(%r14,%r15,1)
39c4(4): add $0x3,%r15
39c8(3): mov %eax,%r8d
39cb(3): cmp %r15,%r13
39ce(2): jbe 0x7(%rip)
39d0(5): mov $0x5c,0x0(%r14,%r15,1)
39d5(4): lea 0x1(%r15),%rax
39d9(3): cmp %rax,%r13
39dc(2): jbe 0xf(%rip)
39de(2): mov %ebx,%eax
39e0(3): shr $0x6,%al
39e3(3): add $0x30,%eax
39e6(5): mov %al,0x1(%r14,%r15,1)
39eb(4): lea 0x2(%r15),%rax
39ef(3): cmp %rax,%r13
39f2(2): jbe 0x12(%rip)
39f4(2): mov %ebx,%eax
39f6(3): shr $0x3,%al
39f9(3): and $0x7,%eax
39fc(3): add $0x30,%eax
39ff(5): mov %al,0x2(%r14,%r15,1)
3a04(3): and $0x7,%ebx
3a07(4): add $0x1,%rbp
3a0b(4): add $0x3,%r15
3a0f(3): add $0x30,%ebx
3a12(3): cmp %rcx,%rbp
3a15(6): jnb 0xfffff7eb(%rip)
3a1b(2): mov %edx,%esi
3a1d(3): cmp %r15,%r13
3a20(2): jbe 0x6(%rip)
3a22(4): mov %bl,0x0(%r14,%r15,1)
3a26(4): movzx 0x0(%rdi,%rbp,1),%ebx
3a2a(4): add $0x1,%r15
3a2e(2): test %dl,%dl
3a30(6): jnz 0xffffff50(%rip)
3a36(2): mov %esi,%eax
3a38(3): xor $0x1,%eax
3a3b(3): and %r8d,%eax
3a3e(3): test %r10b,%r10b
3a41(2): jz 0x10(%rip)
3a43(3): cmp %r15,%r13
3a46(2): jbe 0x7(%rip)
3a48(5): mov $0x5c,0x0(%r14,%r15,1)
3a4d(4): add $0x1,%r15
3a51(4): add $0x1,%rbp
3a55(3): cmp %rcx,%rbp
3a58(6): jnb 0xfffff784(%rip)
3a5e(2): test %al,%al
3a60(6): jz 0x3fe(%rip)
3a66(3): cmp %r15,%r13
3a69(2): jbe 0x7(%rip)
3a6b(5): mov $0x27,0x0(%r14,%r15,1)
3a70(4): lea 0x1(%r15),%rax
3a74(3): cmp %rax,%r13
3a77(2): jbe 0x8(%rip)
3a79(6): mov $0x27,0x1(%r14,%r15,1)
3a7f(4): add $0x2,%r15
3a83(3): xor %r10d,%r10d
3a86(3): xor %r8d,%r8d
3a89(2): jmp 0xffffff94(%rip)
3a8b(5): nop 0x0(%rax,%rax,1)
3a90(4): cmp $0x1,%r15
3a94(6): jz 0xfffffe65(%rip)
3a9a(5): mov 0x10(%rsp),%rdi
3a9f(4): lea 0x0(%rdi,%r15,1),%rcx
3aa3(5): lea 0x1(%rdi,%r14,1),%rdx
3aa8(4): lea 0x0(%rcx,%r14,1),%r8
3aac(2): jmp 0x11(%rip)
3aae(2): nop 
3ab0(4): add $0x1,%rdx
3ab4(3): cmp %rdx,%r8
3ab7(6): jz 0xfffffe42(%rip)
3abd(3): movzx (%rdx),%ecx
3ac0(3): sub $0x5b,%ecx
3ac3(3): cmp $0x21,%cl
3ac6(2): jnbe 0xffffffea(%rip)
3ac8(5): mov $0x1,%esi
3acd(3): shl/sal %cl,%rsi
3ad0(3): mov %rsi,%rcx
3ad3(a): mov $0x8589934635,%rsi
3add(3): test %rsi,%rcx
3ae0(2): jz 0xffffffd0(%rip)
3ae2(5): mov 0x40(%rsp),%r14
3ae7(5): mov 0x70(%rsp),%r13
3aec(5): mov 0x30(%rsp),%rbp
3af1(8): mov $0x2,0x8(%rsp)
3af9(5): cmp $0x0,0xd(%rsp)
3afe(2): jz 0x12(%rip)
3b00(2): test %al,%al
3b02(5): mov $0x4,%eax
3b07(5): cmove 0x8(%rsp),%eax
3b0c(4): mov %eax,0x8(%rsp)
3b10(4): sub $0x8,%rsp
3b14(3): mov %rbp,%rcx
3b17(3): mov %r13,%rsi
3b1a(4): push 0x68(%rsp)
3b1e(4): push 0x78(%rsp)
3b22(3): mov %r14,%rdi
3b25(2): push $0x0
3b27(8): mov 0x98(%rsp),%r9d
3b2f(5): mov 0x28(%rsp),%r8d
3b34(5): mov 0x30(%rsp),%rdx
3b39(4): and $0xfd,%r9d
3b3d(5): call 0xfffff433(%rip)
3b42(4): add $0x20,%rsp
3b46(3): mov %rax,%r15
3b49(8): mov 0xa8(%rsp),%rbx
3b51(9): xor $0x28,%rbx
3b5a(3): mov %r15,%rax
3b5d(6): jnz 0x606(%rip)
3b63(7): add $0xb8,%rsp
3b6a(1): pop %rbx
3b6b(1): pop %rbp
3b6c(2): pop %r12
3b6e(2): pop %r13
3b70(2): pop %r14
3b72(2): pop %r15
3b74(1): ret near (%rsp)
3b75(3): nop (%rax)
3b78(3): mov %r11,%rbp
3b7b(5): jmp 0xffffff7e(%rip)
3b80(3): cmp %r15,%r13
3b83(2): jbe 0x7(%rip)
3b85(5): mov $0x27,0x0(%r14,%r15,1)
3b8a(4): lea 0x1(%r15),%rax
3b8e(3): cmp %rax,%r13
3b91(2): jbe 0x8(%rip)
3b93(6): mov $0x5c,0x1(%r14,%r15,1)
3b99(4): lea 0x2(%r15),%rax
3b9d(3): cmp %rax,%r13
3ba0(6): jbe 0x5f2(%rip)
3ba6(3): mov %r13,%rdx
3ba9(6): mov $0x27,0x2(%r14,%r15,1)
3baf(5): mov 0x50(%rsp),%r13
3bb4(5): jmp 0xfffffbde(%rip)
3bb9(3): mov %r12d,%eax
3bbc(5): mov $0x30,%ebx
3bc1(3): xor %r12d,%r12d
3bc4(5): jmp 0xfffff605(%rip)
3bc9(6): mov $0x27,0x2(%r14,%r15,1)
3bcf(5): jmp 0xfffff9ca(%rip)
3bd4(2): test %ebx,%ebx
3bd6(6): jnz 0xfffff42d(%rip)
3bdc(5): mov $0x1,0xd(%rsp)
3be1(3): test %r13,%r13
3be4(6): jnz 0x596(%rip)
3bea(7): lea 0x776a(%rip),%rax
3bf1(9): mov $0x0,0x50(%rsp)
3bfa(5): mov $0x1,0xe(%rsp)
3bff(5): mov $0x0,0x7c(%rsp)
3c04(3): xor %r12d,%r12d
3c07(5): mov $0x0,0xf(%rsp)
3c0c(9): mov $0x1,0x18(%rsp)
3c15(5): mov %rax,0x48(%rsp)
3c1a(6): mov $0x1,%r15d
3c20(8): mov $0x2,0x8(%rsp)
3c28(5): jmp 0xfffff41b(%rip)
3c2d(3): nop (%rax)
3c30(2): test %ebx,%ebx
3c32(6): jnz 0x3fb(%rip)
3c38(3): test %r13,%r13
3c3b(6): jz 0x22b(%rip)
3c41(4): mov $0x22,(%r14)
3c45(5): mov $0x1,0xe(%rsp)
3c4a(3): xor %r12d,%r12d
3c4d(5): mov $0x0,0x7c(%rsp)
3c52(9): mov $0x0,0x50(%rsp)
3c5b(7): lea 0x6c89(%rip),%rax
3c62(5): mov $0x0,0xf(%rsp)
3c67(5): mov $0x1,0xd(%rsp)
3c6c(9): mov $0x1,0x18(%rsp)
3c75(6): mov $0x1,%r15d
3c7b(5): mov %rax,0x48(%rsp)
3c80(5): jmp 0xfffff3c3(%rip)
3c85(7): lea 0x6c5f(%rip),%rax
3c8c(5): mov $0x1,0xe(%rsp)
3c91(5): mov $0x0,0x7c(%rsp)
3c96(3): xor %r12d,%r12d
3c99(9): mov $0x0,0x50(%rsp)
3ca2(5): mov $0x1,0xf(%rsp)
3ca7(5): mov $0x1,0xd(%rsp)
3cac(9): mov $0x1,0x18(%rsp)
3cb5(3): xor %r15d,%r15d
3cb8(5): mov %rax,0x48(%rsp)
3cbd(8): mov $0x5,0x8(%rsp)
3cc5(5): jmp 0xfffff37e(%rip)
3cca(5): mov $0x1,0xe(%rsp)
3ccf(5): mov $0x0,0x7c(%rsp)
3cd4(3): xor %r12d,%r12d
3cd7(9): mov $0x0,0x50(%rsp)
3ce0(5): mov $0x0,0xf(%rsp)
3ce5(3): xor %r15d,%r15d
3ce8(5): mov $0x1,0xd(%rsp)
3ced(9): mov $0x0,0x18(%rsp)
3cf6(9): mov $0x0,0x48(%rsp)
3cff(5): jmp 0xfffff344(%rip)
3d04(5): cmp $0xa,0x8(%rsp)
3d09(2): jz 0x58(%rip)
3d0b(7): lea 0x6bdb(%rip),%rsi
3d12(2): xor %edi,%edi
3d14(5): mov $0x5,%edx
3d19(5): call 0xffffdc27(%rip)
3d1e(3): mov %rax,%rcx
3d21(5): mov %rax,0x68(%rsp)
3d26(7): lea 0x6bc0(%rip),%rax
3d2d(3): cmp %rax,%rcx
3d30(6): jz 0x39e(%rip)
3d36(7): lea 0x761e(%rip),%rsi
3d3d(2): xor %edi,%edi
3d3f(5): mov $0x5,%edx
3d44(5): call 0xffffdbfc(%rip)
3d49(3): mov %rax,%rcx
3d4c(5): mov %rax,0x60(%rsp)
3d51(7): lea 0x7603(%rip),%rax
3d58(3): cmp %rax,%rcx
3d5b(6): jz 0x389(%rip)
3d61(3): xor %r15d,%r15d
3d64(2): test %ebx,%ebx
3d66(6): jz 0x1c7(%rip)
3d6c(2): test %ebx,%ebx
3d6e(5): mov 0x60(%rsp),%rbx
3d73(5): setnz 0xf(%rsp)
3d78(3): xor %r12d,%r12d
3d7b(3): mov %rbx,%rdi
3d7e(5): call 0xffffdbe2(%rip)
3d83(5): mov %rbx,0x48(%rsp)
3d88(5): mov %rax,0x18(%rsp)
3d8d(5): mov $0x1,0xe(%rsp)
3d92(5): mov $0x0,0x7c(%rsp)
3d97(9): mov $0x0,0x50(%rsp)
3da0(5): mov $0x1,0xd(%rsp)
3da5(5): jmp 0xfffff29e(%rip)
3daa(5): mov $0x1,0xe(%rsp)
3daf(5): mov $0x0,0x7c(%rsp)
3db4(3): xor %r12d,%r12d
3db7(9): mov $0x0,0x50(%rsp)
3dc0(5): mov $0x0,0xf(%rsp)
3dc5(3): xor %r15d,%r15d
3dc8(5): mov $0x0,0xd(%rsp)
3dcd(9): mov $0x0,0x18(%rsp)
3dd6(9): mov $0x0,0x48(%rsp)
3ddf(5): jmp 0xfffff264(%rip)
3de4(5): mov $0x1,0xe(%rsp)
3de9(5): mov $0x0,0x7c(%rsp)
3dee(3): xor %r12d,%r12d
3df1(9): mov $0x0,0x50(%rsp)
3dfa(5): mov $0x1,0xf(%rsp)
3dff(5): mov $0x1,0xd(%rsp)
3e04(5): jmp 0xfffff21f(%rip)
3e09(3): cmp %r15,%r13
3e0c(2): jbe 0x7(%rip)
3e0e(5): mov $0x30,0x0(%r14,%r15,1)
3e13(4): lea 0x2(%rcx),%rax
3e17(3): cmp %rax,%r13
3e1a(2): jbe 0x8(%rip)
3e1c(6): mov $0x30,0x2(%r14,%rcx,1)
3e22(3): mov %r12d,%eax
3e25(4): lea 0x3(%rcx),%r15
3e29(3): xor %r12d,%r12d
3e2c(5): mov $0x30,%ebx
3e31(5): jmp 0xfffff367(%rip)
3e36(a): nop 0x0(%rax,%rax,1)
3e40(5): movzx 0xf(%rsp),%ebx
3e45(3): mov %r11,%rbp
3e48(4): mov %bl,0xd(%rsp)
3e4c(5): jmp 0xfffffcad(%rip)
3e51(5): movzx 0xd(%rsp),%edx
3e56(3): xor %r12d,%r12d
3e59(5): jmp 0xfffffb07(%rip)
3e5e(3): xor %r10d,%r10d
3e61(5): jmp 0xfffffbbc(%rip)
3e66(9): mov $0x0,0x50(%rsp)
3e6f(5): mov $0x1,0xe(%rsp)
3e74(3): xor %r12d,%r12d
3e77(5): mov $0x0,0x7c(%rsp)
3e7c(5): jmp 0xfffffddf(%rip)
3e81(5): mov 0x30(%rsp),%r11
3e86(3): mov %r14,%rsi
3e89(3): mov %r13,%rcx
3e8c(3): mov %rbx,%rax
3e8f(3): mov %rbx,%rdi
3e92(6): movzx 0x7d(%rsp),%r8d
3e98(5): movzx 0x7e(%rsp),%ebx
3e9d(8): mov 0x88(%rsp),%r9
3ea5(3): cmp %r11,%rsi
3ea8(6): movzx 0x7f(%rsp),%r10d
3eae(8): mov 0x80(%rsp),%r15
3eb6(5): mov 0x40(%rsp),%r14
3ebb(5): mov 0x70(%rsp),%r13
3ec0(2): jnb 0x28(%rip)
3ec2(3): cmp $0x0,(%rcx)
3ec5(2): jnz 0x12(%rip)
3ec7(2): jmp 0x21(%rip)
3ec9(7): nop 0x0(%rax)
3ed0(5): cmp $0x0,0x0(%r9,%rax,1)
3ed5(2): jz 0x10(%rip)
3ed7(4): add $0x1,%rax
3edb(5): lea 0x0(%rbp,%rax,1),%rdx
3ee0(3): cmp %rdx,%r11
3ee3(2): jnbe 0xffffffed(%rip)
3ee5(3): mov %rax,%rdi
3ee8(5): movzx 0xd(%rsp),%edx
3eed(3): xor %r12d,%r12d
3ef0(5): jmp 0xfffffa66(%rip)
3ef5(3): mov %rbx,%rdi
3ef8(6): movzx 0x7d(%rsp),%r8d
3efe(5): movzx 0x7e(%rsp),%ebx
3f03(6): movzx 0x7f(%rsp),%r10d
3f09(8): mov 0x80(%rsp),%r15
3f11(3): xor %r12d,%r12d
3f14(5): mov 0x40(%rsp),%r14
3f19(5): mov 0x70(%rsp),%r13
3f1e(5): mov 0x30(%rsp),%r11
3f23(5): movzx 0xd(%rsp),%edx
3f28(5): jmp 0xfffffa2e(%rip)
3f2d(5): mov 0x68(%rsp),%rdx
3f32(3): movzx (%rdx),%eax
3f35(2): test %al,%al
3f37(6): jz 0xfffffe35(%rip)
3f3d(3): nop (%rax)
3f40(3): cmp %r15,%r13
3f43(2): jbe 0x6(%rip)
3f45(4): mov %al,0x0(%r14,%r15,1)
3f49(4): add $0x1,%r15
3f4d(5): movzx 0x0(%rdx,%r15,1),%eax
3f52(2): test %al,%al
3f54(2): jnz 0xffffffec(%rip)
3f56(5): jmp 0xfffffe16(%rip)
3f5b(2): mov %edx,%eax
3f5d(5): jmp 0xfffff55a(%rip)
3f62(4): movzx 0x0(%rax,%rcx,1),%ebx
3f66(3): cmp $0x3e,%bl
3f69(6): jnbe 0xfffff877(%rip)
3f6f(a): mov $0x8070630310989004800,%rax
3f79(4): bt %rbx,%rax
3f7d(6): jnb 0xfffff863(%rip)
3f83(5): cmp $0x0,0xf(%rsp)
3f88(6): jnz 0x1ea(%rip)
3f8e(3): cmp %r15,%r13
3f91(2): jbe 0x7(%rip)
3f93(5): mov $0x3f,0x0(%r14,%r15,1)
3f98(4): lea 0x1(%r15),%rax
3f9c(3): cmp %rax,%r13
3f9f(2): jbe 0x8(%rip)
3fa1(6): mov $0x22,0x1(%r14,%r15,1)
3fa7(4): lea 0x2(%r15),%rax
3fab(3): cmp %rax,%r13
3fae(2): jbe 0x8(%rip)
3fb0(6): mov $0x22,0x2(%r14,%r15,1)
3fb6(4): lea 0x3(%r15),%rax
3fba(3): cmp %rax,%r13
3fbd(2): jbe 0x8(%rip)
3fbf(6): mov $0x3f,0x3(%r14,%r15,1)
3fc5(4): add $0x4,%r15
3fc9(2): xor %edx,%edx
3fcb(3): xor %r12d,%r12d
3fce(2): xor %eax,%eax
3fd0(3): mov %rcx,%rbp
3fd3(5): jmp 0xfffff1c5(%rip)
3fd8(2): test %ebx,%ebx
3fda(6): jz 0x18e(%rip)
3fe0(7): lea 0x7374(%rip),%rax
3fe7(5): mov $0x1,0xe(%rsp)
3fec(5): mov $0x0,0x7c(%rsp)
3ff1(3): xor %r12d,%r12d
3ff4(9): mov $0x0,0x50(%rsp)
3ffd(5): mov $0x1,0xf(%rsp)
4002(5): mov $0x0,0xd(%rsp)
4007(9): mov $0x1,0x18(%rsp)
4010(3): xor %r15d,%r15d
4013(5): mov %rax,0x48(%rsp)
4018(5): jmp 0xfffff02b(%rip)
401d(3): nop (%rax)
4020(3): mov %r11,%rbp
4023(5): movzx 0xf(%rsp),%eax
4028(5): jmp 0xfffffad1(%rip)
402d(7): lea 0x68b7(%rip),%rax
4034(5): mov $0x1,0xe(%rsp)
4039(5): mov $0x0,0x7c(%rsp)
403e(3): xor %r12d,%r12d
4041(9): mov $0x0,0x50(%rsp)
404a(5): mov $0x1,0xf(%rsp)
404f(5): mov $0x1,0xd(%rsp)
4054(9): mov $0x1,0x18(%rsp)
405d(3): xor %r15d,%r15d
4060(5): mov %rax,0x48(%rsp)
4065(5): jmp 0xffffefde(%rip)
406a(2): mov %edx,%eax
406c(5): mov 0x48(%rsp),%rbx
4071(3): test %rbx,%rbx
4074(2): jz 0x2e(%rip)
4076(2): test %al,%al
4078(2): jz 0x2a(%rip)
407a(3): movzx (%rbx),%ecx
407d(3): mov %rbx,%rax
4080(2): test %cl,%cl
4082(2): jz 0x20(%rip)
4084(3): mov %r15,%rdx
4087(3): sub %r15,%rax
408a(3): cmp %rdx,%r13
408d(2): jbe 0x6(%rip)
408f(4): mov %cl,0x0(%r14,%rdx,1)
4093(4): add $0x1,%rdx
4097(4): movzx 0x0(%rax,%rdx,1),%ecx
409b(2): test %cl,%cl
409d(2): jnz 0xffffffed(%rip)
409f(3): mov %rdx,%r15
40a2(3): cmp %r15,%r13
40a5(6): jbe 0xfffffaa4(%rip)
40ab(5): mov $0x0,0x0(%r14,%r15,1)
40b0(5): jmp 0xfffffa99(%rip)
40b5(5): cmp $0x2,0x8(%rsp)
40ba(5): movzx 0xf(%rsp),%ebx
40bf(3): mov %r11,%rbp
40c2(3): setz %al
40c5(4): mov %bl,0xd(%rsp)
40c9(5): jmp 0xfffffa30(%rip)
40ce(4): mov 0x8(%rsp),%esi
40d2(3): mov %rcx,%rdi
40d5(5): call 0xffffedab(%rip)
40da(5): mov %rax,0x68(%rsp)
40df(5): jmp 0xfffffc57(%rip)
40e4(4): mov 0x8(%rsp),%esi
40e8(3): mov %rcx,%rdi
40eb(5): call 0xffffed95(%rip)
40f0(5): mov %rax,0x60(%rsp)
40f5(5): jmp 0xfffffc6c(%rip)
40fa(5): movzx 0xf(%rsp),%ebx
40ff(3): mov %r11,%rbp
4102(2): mov %edx,%eax
4104(4): mov %bl,0xd(%rsp)
4108(5): jmp 0xfffff9f1(%rip)
410d(4): sub $0x8,%rsp
4111(6): mov $0x5,%r8d
4117(3): mov %r11,%rcx
411a(4): push 0x68(%rsp)
411e(4): push 0x78(%rsp)
4122(3): mov %r14,%rdi
4125(4): push 0x38(%rsp)
4129(8): mov 0x98(%rsp),%r9d
4131(5): mov 0x30(%rsp),%rdx
4136(5): mov 0x70(%rsp),%rsi
413b(5): call 0xffffee35(%rip)
4140(4): add $0x20,%rsp
4144(3): mov %rax,%r15
4147(5): jmp 0xfffffa02(%rip)
414c(5): movzx 0x7c(%rsp),%eax
4151(5): jmp 0xffffff1b(%rip)
4156(8): mov $0x2,0x8(%rsp)
415e(5): jmp 0xfffff99b(%rip)
4163(5): call 0xffffd83d(%rip)
4168(5): mov $0x0,0xd(%rsp)
416d(5): jmp 0xfffffa74(%rip)
4172(3): mov %r11,%rbp
4175(5): jmp 0xfffff99b(%rip)
417a(5): mov $0x1,0xe(%rsp)
417f(2): xor %eax,%eax
4181(3): xor %r12d,%r12d
4184(9): mov $0x0,0x50(%rsp)
418d(5): jmp 0xfffff5a7(%rip)
4192(3): mov %r13,%rdx
4195(5): mov 0x50(%rsp),%r13
419a(5): jmp 0xfffff5f8(%rip)
419f(5): call 0xffffd6f1(%rip)

"quotearg_n_options" :
41b0(2): push %r15
41b2(2): push %r14
41b4(3): movsxd %edi,%r15
41b7(2): push %r13
41b9(2): push %r12
41bb(3): mov %rdx,%r14
41be(1): push %rbp
41bf(1): push %rbx
41c0(3): mov %rcx,%rbp
41c3(4): sub $0x28,%rsp
41c7(5): mov %rsi,0x8(%rsp)
41cc(5): call 0xffffd6d4(%rip)
41d1(3): mov %rax,%r13
41d4(2): mov (%rax),%eax
41d6(3): test %r15d,%r15d
41d9(7): mov 0x209e80(%rip),%rbx
41e0(4): mov %eax,0x18(%rsp)
41e4(6): js 0x16d(%rip)
41ea(7): cmp %r15d,0x209e67(%rip)
41f1(2): jnle 0x64(%rip)
41f3(7): cmp $0x7fffffff,%r15d
41fa(6): jz 0x15c(%rip)
4200(4): lea 0x1(%r15),%r12d
4204(7): lea 0x209e65(%rip),%rax
420b(3): movsxd %r12d,%rsi
420e(4): shl/sal $0x4,%rsi
4212(3): cmp %rax,%rbx
4215(6): jz 0x11b(%rip)
421b(3): mov %rbx,%rdi
421e(5): call 0xff2(%rip)
4223(3): mov %rax,%rbx
4226(7): mov %rax,0x209e33(%rip)
422d(7): movsxd 0x209e24(%rip),%rdi
4234(3): mov %r12d,%edx
4237(2): xor %esi,%esi
4239(2): sub %edi,%edx
423b(4): shl/sal $0x4,%rdi
423f(3): movsxd %edx,%rdx
4242(3): add %rbx,%rdi
4245(4): shl/sal $0x4,%rdx
4249(5): call 0xffffd7c7(%rip)
424e(7): mov %r12d,0x209e03(%rip)
4255(3): mov 0x4(%rbp),%eax
4258(4): shl/sal $0x4,%r15
425c(4): sub $0x8,%rsp
4260(3): add %r15,%rbx
4263(4): lea 0x8(%rbp),%r15
4267(4): mov 0x0(%rbp),%r8d
426b(3): mov (%rbx),%r11
426e(4): mov 0x8(%rbx),%r12
4272(3): mov %r14,%rcx
4275(3): or $0x1,%eax
4278(4): mov %eax,0x24(%rsp)
427c(3): push 0x30(%rbp)
427f(3): mov %eax,%r9d
4282(3): push 0x28(%rbp)
4285(2): push %r15
4287(3): mov %r11,%rsi
428a(5): mov 0x28(%rsp),%rdx
428f(3): mov %r12,%rdi
4292(5): mov %r11,0x30(%rsp)
4297(5): call 0xffffecd9(%rip)
429c(4): add $0x20,%rsp
42a0(5): mov 0x10(%rsp),%r11
42a5(3): cmp %rax,%r11
42a8(2): jnbe 0x69(%rip)
42aa(4): lea 0x1(%rax),%rsi
42ae(7): lea 0x209e6b(%rip),%rax
42b5(3): cmp %rax,%r12
42b8(3): mov %rsi,(%rbx)
42bb(2): jz 0x14(%rip)
42bd(3): mov %r12,%rdi
42c0(5): mov %rsi,0x10(%rsp)
42c5(5): call 0xffffd9cb(%rip)
42ca(5): mov 0x10(%rsp),%rsi
42cf(3): mov %rsi,%rdi
42d2(5): mov %rsi,0x10(%rsp)
42d7(5): call 0xed9(%rip)
42dc(4): sub $0x8,%rsp
42e0(4): mov %rax,0x8(%rbx)
42e4(4): mov 0x0(%rbp),%r8d
42e8(3): push 0x30(%rbp)
42eb(3): push 0x28(%rbp)
42ee(3): mov %r14,%rcx
42f1(2): push %r15
42f3(5): mov 0x3c(%rsp),%r9d
42f8(3): mov %rax,%rdi
42fb(5): mov 0x28(%rsp),%rdx
4300(5): mov 0x30(%rsp),%rsi
4305(3): mov %rax,%r12
4308(5): call 0xffffec68(%rip)
430d(4): add $0x20,%rsp
4311(4): mov 0x18(%rsp),%eax
4315(4): mov %eax,0x0(%r13)
4319(4): add $0x28,%rsp
431d(3): mov %r12,%rax
4320(1): pop %rbx
4321(1): pop %rbp
4322(2): pop %r12
4324(2): pop %r13
4326(2): pop %r14
4328(2): pop %r15
432a(1): ret near (%rsp)
432b(5): nop 0x0(%rax,%rax,1)
4330(2): xor %edi,%edi
4332(5): call 0xede(%rip)
4337(8): movdqa 0x209d31(%rip),%xmm0
433f(3): mov %rax,%rbx
4342(7): mov %rax,0x209d17(%rip)
4349(3): movups %xmm0,(%rax)
434c(5): jmp 0xfffffee1(%rip)
4351(5): call 0xffffd53f(%rip)
4356(5): call 0x10aa(%rip)

"clone_quoting_options" :
4360(2): push %r12
4362(1): push %rbp
4363(1): push %rbx
4364(3): mov %rdi,%rbx
4367(5): call 0xffffd539(%rip)
436c(3): mov (%rax),%r12d
436f(3): mov %rax,%rbp
4372(7): lea 0x209ea7(%rip),%rax
4379(3): test %rbx,%rbx
437c(5): mov $0x38,%esi
4381(4): cmove %rax,%rbx
4385(3): mov %rbx,%rdi
4388(5): call 0x1028(%rip)
438d(4): mov %r12d,0x0(%rbp)
4391(1): pop %rbx
4392(1): pop %rbp
4393(2): pop %r12
4395(1): ret near (%rsp)

"get_quoting_style" :
43a0(7): lea 0x209e79(%rip),%rax
43a7(3): test %rdi,%rdi
43aa(4): cmove %rax,%rdi
43ae(2): mov (%rdi),%eax
43b0(1): ret near (%rsp)

"set_quoting_style" :
43c0(7): lea 0x209e59(%rip),%rax
43c7(3): test %rdi,%rdi
43ca(4): cmove %rax,%rdi
43ce(2): mov %esi,(%rdi)
43d0(1): ret near (%rsp)

"set_char_quoting" :
43e0(7): lea 0x209e39(%rip),%rax
43e7(3): test %rdi,%rdi
43ea(2): mov %esi,%ecx
43ec(4): cmove %rax,%rdi
43f0(2): mov %esi,%eax
43f2(3): and $0x1f,%ecx
43f5(3): shr $0x5,%al
43f8(3): movzx %al,%eax
43fb(5): lea 0x8(%rdi,%rax,4),%rdi
4400(2): mov (%rdi),%esi
4402(2): mov %esi,%eax
4404(2): shr %cl,%eax
4406(2): xor %eax,%edx
4408(3): and $0x1,%eax
440b(3): and $0x1,%edx
440e(2): shl/sal %cl,%edx
4410(2): xor %esi,%edx
4412(2): mov %edx,(%rdi)
4414(1): ret near (%rsp)

"set_quoting_flags" :
4420(7): lea 0x209df9(%rip),%rax
4427(3): test %rdi,%rdi
442a(4): cmove %rax,%rdi
442e(3): mov 0x4(%rdi),%eax
4431(3): mov %esi,0x4(%rdi)
4434(1): ret near (%rsp)

"set_custom_quoting" :
4440(7): lea 0x209dd9(%rip),%rax
4447(3): test %rdi,%rdi
444a(4): cmove %rax,%rdi
444e(3): test %rsi,%rsi
4451(6): mov $0xa,(%rdi)
4457(2): jz 0x10(%rip)
4459(3): test %rdx,%rdx
445c(2): jz 0xb(%rip)
445e(4): mov %rsi,0x28(%rdi)
4462(4): mov %rdx,0x30(%rdi)
4466(1): ret near (%rsp)
4467(4): sub $0x8,%rsp
446b(5): call 0xffffd425(%rip)

"quotearg_buffer" :
4470(2): push %r15
4472(2): push %r14
4474(7): lea 0x209da5(%rip),%rax
447b(2): push %r13
447d(2): push %r12
447f(3): mov %rdi,%r13
4482(1): push %rbp
4483(1): push %rbx
4484(3): mov %r8,%rbx
4487(3): mov %rsi,%r14
448a(3): mov %rdx,%r15
448d(4): sub $0x18,%rsp
4491(3): test %r8,%r8
4494(4): cmove %rax,%rbx
4498(5): mov %rcx,0x8(%rsp)
449d(5): call 0xffffd403(%rip)
44a2(3): mov (%rax),%r12d
44a5(3): mov %rax,%rbp
44a8(4): lea 0x8(%rbx),%rax
44ac(4): sub $0x8,%rsp
44b0(4): mov 0x4(%rbx),%r9d
44b4(3): push 0x30(%rbx)
44b7(3): mov (%rbx),%r8d
44ba(3): push 0x28(%rbx)
44bd(3): mov %r15,%rdx
44c0(1): push %rax
44c1(5): mov 0x28(%rsp),%rcx
44c6(3): mov %r14,%rsi
44c9(3): mov %r13,%rdi
44cc(5): call 0xffffeaa4(%rip)
44d1(4): mov %r12d,0x0(%rbp)
44d5(4): add $0x38,%rsp
44d9(1): pop %rbx
44da(1): pop %rbp
44db(2): pop %r12
44dd(2): pop %r13
44df(2): pop %r14
44e1(2): pop %r15
44e3(1): ret near (%rsp)

"quotearg_alloc_mem" :
44f0(2): push %r15
44f2(2): push %r14
44f4(7): lea 0x209d25(%rip),%rax
44fb(2): push %r13
44fd(2): push %r12
44ff(3): mov %rdx,%r12
4502(1): push %rbp
4503(1): push %rbx
4504(3): mov %rcx,%rbx
4507(3): mov %rdi,%r14
450a(3): mov %rsi,%r15
450d(4): sub $0x38,%rsp
4511(3): test %rcx,%rcx
4514(4): cmove %rax,%rbx
4518(2): xor %ebp,%ebp
451a(5): call 0xffffd386(%rip)
451f(3): test %r12,%r12
4522(3): mov %rax,%r13
4525(2): mov (%rax),%eax
4527(4): setz %bpl
452b(3): or 0x4(%rbx),%ebp
452e(4): lea 0x8(%rbx),%r10
4532(4): sub $0x8,%rsp
4536(3): mov (%rbx),%r8d
4539(3): mov %r15,%rcx
453c(4): mov %eax,0x14(%rsp)
4540(3): push 0x30(%rbx)
4543(3): mov %r14,%rdx
4546(3): push 0x28(%rbx)
4549(2): push %r10
454b(2): xor %esi,%esi
454d(3): mov %ebp,%r9d
4550(2): xor %edi,%edi
4552(5): mov %r10,0x40(%rsp)
4557(5): call 0xffffea19(%rip)
455c(4): lea 0x1(%rax),%rsi
4560(5): mov %rax,0x48(%rsp)
4565(4): add $0x20,%rsp
4569(3): mov %rsi,%rdi
456c(5): mov %rsi,0x18(%rsp)
4571(5): call 0xc3f(%rip)
4576(5): mov %rax,0x10(%rsp)
457b(4): sub $0x8,%rsp
457f(3): push 0x30(%rbx)
4582(3): push 0x28(%rbx)
4585(5): mov 0x38(%rsp),%r10
458a(3): mov %ebp,%r9d
458d(3): mov (%rbx),%r8d
4590(3): mov %r15,%rcx
4593(3): mov %r14,%rdx
4596(3): mov %rax,%rdi
4599(2): push %r10
459b(5): mov 0x38(%rsp),%rsi
45a0(5): call 0xffffe9d0(%rip)
45a5(4): mov 0x2c(%rsp),%eax
45a9(4): add $0x20,%rsp
45ad(3): test %r12,%r12
45b0(4): mov %eax,0x0(%r13)
45b4(2): jz 0xb(%rip)
45b6(5): mov 0x28(%rsp),%r11
45bb(4): mov %r11,(%r12)
45bf(5): mov 0x10(%rsp),%rax
45c4(4): add $0x38,%rsp
45c8(1): pop %rbx
45c9(1): pop %rbp
45ca(2): pop %r12
45cc(2): pop %r13
45ce(2): pop %r14
45d0(2): pop %r15
45d2(1): ret near (%rsp)

"quotearg_alloc" :
45e0(3): mov %rdx,%rcx
45e3(2): xor %edx,%edx
45e5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
45f0(6): mov 0x209a62(%rip),%eax
45f6(2): push %r12
45f8(7): mov 0x209a61(%rip),%r12
45ff(1): push %rbp
4600(1): push %rbx
4601(3): cmp $0x1,%eax
4604(2): jle 0x2d(%rip)
4606(3): sub $0x2,%eax
4609(5): lea 0x18(%r12),%rbx
460e(4): shl/sal $0x4,%rax
4612(5): lea 0x28(%r12,%rax,1),%rbp
4617(9): nop 0x0(%rax,%rax,1)
4620(3): mov (%rbx),%rdi
4623(4): add $0x10,%rbx
4627(5): call 0xffffd669(%rip)
462c(3): cmp %rbp,%rbx
462f(2): jnz 0xfffffff1(%rip)
4631(5): mov 0x8(%r12),%rdi
4636(7): lea 0x209ae3(%rip),%rbx
463d(3): cmp %rbx,%rdi
4640(2): jz 0x19(%rip)
4642(5): call 0xffffd64e(%rip)
4647(b): mov $0x100,0x209a1e(%rip)
4652(7): mov %rbx,0x209a1f(%rip)
4659(7): lea 0x209a10(%rip),%rbx
4660(3): cmp %rbx,%r12
4663(2): jz 0x11(%rip)
4665(3): mov %r12,%rdi
4668(5): call 0xffffd628(%rip)
466d(7): mov %rbx,0x2099ec(%rip)
4674(1): pop %rbx
4675(a): mov $0x1,0x2099d9(%rip)
467f(1): pop %rbp
4680(2): pop %r12
4682(1): ret near (%rsp)

"quotearg_n" :
4690(7): lea 0x209b89(%rip),%rcx
4697(7): mov $0xffffffff,%rdx
469e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
46b0(7): lea 0x209b69(%rip),%rcx
46b7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
46c0(7): lea 0x209b59(%rip),%rcx
46c7(3): mov %rdi,%rsi
46ca(7): mov $0xffffffff,%rdx
46d1(2): xor %edi,%edi
46d3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
46e0(7): lea 0x209b39(%rip),%rcx
46e7(3): mov %rsi,%rdx
46ea(3): mov %rdi,%rsi
46ed(2): xor %edi,%edi
46ef(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4700(4): sub $0x48,%rsp
4704(3): mov %rdx,%rax
4707(9): mov $0x28,%rdx
4710(5): mov %rdx,0x38(%rsp)
4715(2): xor %edx,%edx
4717(3): cmp $0xa,%esi
471a(2): jz 0x6a(%rip)
471c(3): mov %esi,(%rsp)
471f(3): mov %rsp,%rcx
4722(7): mov $0xffffffff,%rdx
4729(3): mov %rax,%rsi
472c(9): mov $0x0,0x4(%rsp)
4735(9): mov $0x0,0xc(%rsp)
473e(9): mov $0x0,0x14(%rsp)
4747(9): mov $0x0,0x1c(%rsp)
4750(9): mov $0x0,0x24(%rsp)
4759(9): mov $0x0,0x2c(%rsp)
4762(8): mov $0x0,0x34(%rsp)
476a(5): call 0xfffffa46(%rip)
476f(5): mov 0x38(%rsp),%rcx
4774(9): xor $0x28,%rcx
477d(2): jnz 0xc(%rip)
477f(4): add $0x48,%rsp
4783(1): ret near (%rsp)
4784(5): call 0xffffd10c(%rip)
4789(5): call 0xffffd217(%rip)

"quotearg_n_style_mem" :
4790(4): sub $0x48,%rsp
4794(3): mov %rdx,%rax
4797(3): mov %rcx,%rdx
479a(9): mov $0x28,%rcx
47a3(5): mov %rcx,0x38(%rsp)
47a8(2): xor %ecx,%ecx
47aa(3): cmp $0xa,%esi
47ad(2): jz 0x63(%rip)
47af(3): mov %esi,(%rsp)
47b2(3): mov %rsp,%rcx
47b5(3): mov %rax,%rsi
47b8(9): mov $0x0,0x4(%rsp)
47c1(9): mov $0x0,0xc(%rsp)
47ca(9): mov $0x0,0x14(%rsp)
47d3(9): mov $0x0,0x1c(%rsp)
47dc(9): mov $0x0,0x24(%rsp)
47e5(9): mov $0x0,0x2c(%rsp)
47ee(8): mov $0x0,0x34(%rsp)
47f6(5): call 0xfffff9ba(%rip)
47fb(5): mov 0x38(%rsp),%rdx
4800(9): xor $0x28,%rdx
4809(2): jnz 0xc(%rip)
480b(4): add $0x48,%rsp
480f(1): ret near (%rsp)
4810(5): call 0xffffd080(%rip)
4815(5): call 0xffffd18b(%rip)

"quotearg_style" :
4820(3): mov %rsi,%rdx
4823(2): mov %edi,%esi
4825(2): xor %edi,%edi
4827(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4830(3): mov %rdx,%rcx
4833(3): mov %rsi,%rdx
4836(2): mov %edi,%esi
4838(2): xor %edi,%edi
483a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4840(4): sub $0x48,%rsp
4844(2): mov %edx,%ecx
4846(9): mov $0x28,%rax
484f(5): mov %rax,0x38(%rsp)
4854(2): xor %eax,%eax
4856(7): mov 0x2099f3(%rip),%rax
485d(3): mov %rsp,%r8
4860(3): and $0x1f,%ecx
4863(8): movdqa 0x2099b5(%rip),%xmm0
486b(5): mov %rax,0x30(%rsp)
4870(2): mov %edx,%eax
4872(4): movaps %xmm0,(%rsp)
4876(3): shr $0x5,%al
4879(3): movzx %al,%eax
487c(5): lea 0x8(%r8,%rax,4),%r9
4881(8): movdqa 0x2099a7(%rip),%xmm0
4889(5): movaps %xmm0,0x10(%rsp)
488e(8): movdqa 0x2099aa(%rip),%xmm0
4896(5): movaps %xmm0,0x20(%rsp)
489b(3): mov (%r9),%edx
489e(2): mov %edx,%eax
48a0(2): shr %cl,%eax
48a2(2): not %eax
48a4(3): and $0x1,%eax
48a7(2): shl/sal %cl,%eax
48a9(3): mov %r8,%rcx
48ac(2): xor %edx,%eax
48ae(3): mov %rsi,%rdx
48b1(3): mov %rdi,%rsi
48b4(3): mov %eax,(%r9)
48b7(2): xor %edi,%edi
48b9(5): call 0xfffff8f7(%rip)
48be(5): mov 0x38(%rsp),%rsi
48c3(9): xor $0x28,%rsi
48cc(2): jnz 0x7(%rip)
48ce(4): add $0x48,%rsp
48d2(1): ret near (%rsp)
48d3(5): call 0xffffd0cd(%rip)

"quotearg_char" :
48e0(4): movsx %sil,%edx
48e4(7): mov $0xffffffff,%rsi
48eb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
48f0(5): mov $0x3a,%edx
48f5(7): mov $0xffffffff,%rsi
48fc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4910(5): mov $0x3a,%edx
4915(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4920(4): sub $0x48,%rsp
4924(3): mov %rdx,%rax
4927(9): mov $0x28,%rdx
4930(5): mov %rdx,0x38(%rsp)
4935(2): xor %edx,%edx
4937(3): cmp $0xa,%esi
493a(2): jz 0x6a(%rip)
493c(3): mov %esi,(%rsp)
493f(3): mov %rsp,%rcx
4942(7): mov $0xffffffff,%rdx
4949(3): mov %rax,%rsi
494c(9): mov $0x0,0x4(%rsp)
4955(9): mov $0x4000000,0xc(%rsp)
495e(9): mov $0x0,0x14(%rsp)
4967(9): mov $0x0,0x1c(%rsp)
4970(9): mov $0x0,0x24(%rsp)
4979(9): mov $0x0,0x2c(%rsp)
4982(8): mov $0x0,0x34(%rsp)
498a(5): call 0xfffff826(%rip)
498f(5): mov 0x38(%rsp),%rcx
4994(9): xor $0x28,%rcx
499d(2): jnz 0xc(%rip)
499f(4): add $0x48,%rsp
49a3(1): ret near (%rsp)
49a4(5): call 0xffffceec(%rip)
49a9(5): call 0xffffcff7(%rip)

"quotearg_n_custom_mem" :
49b0(4): sub $0x48,%rsp
49b4(3): mov %rcx,%r9
49b7(7): mov 0x209892(%rip),%rcx
49be(8): movdqa 0x20985a(%rip),%xmm0
49c6(9): mov $0x28,%rax
49cf(5): mov %rax,0x38(%rsp)
49d4(2): xor %eax,%eax
49d6(4): movaps %xmm0,(%rsp)
49da(3): test %rsi,%rsi
49dd(5): mov %rcx,0x30(%rsp)
49e2(7): mov $0xa,(%rsp)
49e9(8): movdqa 0x20983f(%rip),%xmm0
49f1(5): movaps %xmm0,0x10(%rsp)
49f6(8): movdqa 0x209842(%rip),%xmm0
49fe(5): movaps %xmm0,0x20(%rsp)
4a03(2): jz 0x34(%rip)
4a05(3): test %rdx,%rdx
4a08(2): jz 0x2f(%rip)
4a0a(5): mov %rsi,0x28(%rsp)
4a0f(5): mov %rdx,0x30(%rsp)
4a14(3): mov %rsp,%rcx
4a17(3): mov %r8,%rdx
4a1a(3): mov %r9,%rsi
4a1d(5): call 0xfffff793(%rip)
4a22(5): mov 0x38(%rsp),%rdi
4a27(9): xor $0x28,%rdi
4a30(2): jnz 0xc(%rip)
4a32(4): add $0x48,%rsp
4a36(1): ret near (%rsp)
4a37(5): call 0xffffce59(%rip)
4a3c(5): call 0xffffcf64(%rip)

"quotearg_n_custom" :
4a50(7): mov $0xffffffff,%r8
4a57(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4a60(3): mov %rdx,%rcx
4a63(7): mov $0xffffffff,%r8
4a6a(3): mov %rsi,%rdx
4a6d(3): mov %rdi,%rsi
4a70(2): xor %edi,%edi
4a72(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4a80(3): mov %rcx,%r8
4a83(3): mov %rdx,%rcx
4a86(3): mov %rsi,%rdx
4a89(3): mov %rdi,%rsi
4a8c(2): xor %edi,%edi
4a8e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4aa0(7): lea 0x209579(%rip),%rcx
4aa7(5): jmp 0xfffff709(%rip)

"quote_mem" :
4ab0(7): lea 0x209569(%rip),%rcx
4ab7(3): mov %rsi,%rdx
4aba(3): mov %rdi,%rsi
4abd(2): xor %edi,%edi
4abf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4ad0(7): lea 0x209549(%rip),%rcx
4ad7(7): mov $0xffffffff,%rdx
4ade(5): jmp 0xfffff6d2(%rip)

"quote" :
4af0(7): lea 0x209529(%rip),%rcx
4af7(3): mov %rdi,%rsi
4afa(7): mov $0xffffffff,%rdx
4b01(2): xor %edi,%edi
4b03(5): jmp 0xfffff6ad(%rip)

"get_root_dev_ino" :
4b10(1): push %rbx
4b11(7): lea 0x68b8(%rip),%rsi
4b18(3): mov %rdi,%rbx
4b1b(5): mov $0x1,%edi
4b20(7): sub $0xa0,%rsp
4b27(3): mov %rsp,%rdx
4b2a(9): mov $0x28,%rax
4b33(8): mov %rax,0x98(%rsp)
4b3b(2): xor %eax,%eax
4b3d(5): call 0xffffce33(%rip)
4b42(2): test %eax,%eax
4b44(2): jnz 0x34(%rip)
4b46(5): mov 0x8(%rsp),%rax
4b4b(3): mov %rax,(%rbx)
4b4e(4): mov (%rsp),%rax
4b52(4): mov %rax,0x8(%rbx)
4b56(3): mov %rbx,%rax
4b59(8): mov 0x98(%rsp),%rcx
4b61(9): xor $0x28,%rcx
4b6a(2): jnz 0x12(%rip)
4b6c(7): add $0xa0,%rsp
4b73(1): pop %rbx
4b74(1): ret near (%rsp)
4b75(3): nop (%rax)
4b78(2): xor %eax,%eax
4b7a(2): jmp 0xffffffdf(%rip)
4b7c(5): call 0xffffce24(%rip)

"version_etc_arn" :
4b90(2): push %r15
4b92(2): push %r14
4b94(2): push %r13
4b96(2): push %r12
4b98(3): mov %r9,%r12
4b9b(1): push %rbp
4b9c(1): push %rbx
4b9d(3): mov %rdi,%rbp
4ba0(3): mov %r8,%rbx
4ba3(4): sub $0x28,%rsp
4ba7(3): test %rsi,%rsi
4baa(6): jz 0x11e(%rip)
4bb0(3): mov %rdx,%r8
4bb3(7): lea 0x61ee(%rip),%rdx
4bba(3): mov %rcx,%r9
4bbd(2): xor %eax,%eax
4bbf(3): mov %rsi,%rcx
4bc2(5): mov $0x1,%esi
4bc7(5): call 0xffffd079(%rip)
4bcc(7): lea 0x61e8(%rip),%rsi
4bd3(2): xor %edi,%edi
4bd5(5): mov $0x5,%edx
4bda(5): call 0xffffcd66(%rip)
4bdf(7): lea 0x64fa(%rip),%rdx
4be6(3): mov %rax,%rcx
4be9(6): mov $0x7e3,%r8d
4bef(5): mov $0x1,%esi
4bf4(3): mov %rbp,%rdi
4bf7(2): xor %eax,%eax
4bf9(5): call 0xffffd047(%rip)
4bfe(7): lea 0x6243(%rip),%rsi
4c05(2): xor %edi,%edi
4c07(5): mov $0x5,%edx
4c0c(5): call 0xffffcd34(%rip)
4c11(3): mov %rbp,%rsi
4c14(3): mov %rax,%rdi
4c17(5): call 0xffffce69(%rip)
4c1c(4): cmp $0x9,%r12
4c20(6): jnbe 0x340(%rip)
4c26(7): lea 0x6477(%rip),%rdx
4c2d(4): movsxd 0x0(%rdx,%r12,4),%rax
4c31(3): add %rdx,%rax
4c34(2): jmp %rax
4c36(a): nop 0x0(%rax,%rax,1)
4c40(4): mov 0x38(%rbx),%r9
4c44(4): mov 0x10(%rbx),%rax
4c48(7): lea 0x6369(%rip),%rsi
4c4f(4): mov 0x8(%rbx),%r8
4c53(5): mov $0x5,%edx
4c58(2): xor %edi,%edi
4c5a(4): mov 0x30(%rbx),%r13
4c5e(4): mov 0x28(%rbx),%r12
4c62(5): mov %r9,0x10(%rsp)
4c67(4): mov 0x20(%rbx),%r15
4c6b(4): mov 0x18(%rbx),%r14
4c6f(4): mov %rax,(%rsp)
4c73(5): mov %r8,0x8(%rsp)
4c78(3): mov (%rbx),%rbx
4c7b(5): call 0xffffccc5(%rip)
4c80(4): sub $0x8,%rsp
4c84(5): mov 0x18(%rsp),%r9
4c89(3): mov %rax,%rdx
4c8c(3): mov %rbx,%rcx
4c8f(5): mov $0x1,%esi
4c94(3): mov %rbp,%rdi
4c97(2): xor %eax,%eax
4c99(2): push %r9
4c9b(2): push %r13
4c9d(2): push %r12
4c9f(2): push %r15
4ca1(2): push %r14
4ca3(5): mov 0x30(%rsp),%r9
4ca8(5): mov 0x38(%rsp),%r8
4cad(5): call 0xffffcf93(%rip)
4cb2(4): add $0x30,%rsp
4cb6(4): add $0x28,%rsp
4cba(1): pop %rbx
4cbb(1): pop %rbp
4cbc(2): pop %r12
4cbe(2): pop %r13
4cc0(2): pop %r14
4cc2(2): pop %r15
4cc4(1): ret near (%rsp)
4cc5(3): nop (%rax)
4cc8(3): mov %rcx,%r8
4ccb(3): mov %rdx,%rcx
4cce(7): lea 0x60df(%rip),%rdx
4cd5(5): mov $0x1,%esi
4cda(2): xor %eax,%eax
4cdc(5): call 0xffffcf64(%rip)
4ce1(5): jmp 0xfffffeeb(%rip)
4ce6(a): nop 0x0(%rax,%rax,1)
4cf0(4): mov 0x40(%rbx),%r10
4cf4(4): mov 0x38(%rbx),%r9
4cf8(7): lea 0x62e9(%rip),%rsi
4cff(4): mov 0x10(%rbx),%rax
4d03(4): mov 0x8(%rbx),%r8
4d07(5): mov $0x5,%edx
4d0c(4): mov 0x30(%rbx),%r13
4d10(4): mov 0x28(%rbx),%r12
4d14(4): mov 0x20(%rbx),%r15
4d18(4): mov 0x18(%rbx),%r14
4d1c(3): mov (%rbx),%rbx
4d1f(5): mov %r10,0x18(%rsp)
4d24(5): mov %r9,0x10(%rsp)
4d29(4): mov %rax,(%rsp)
4d2d(5): mov %r8,0x8(%rsp)
4d32(2): xor %edi,%edi
4d34(5): call 0xffffcc0c(%rip)
4d39(5): mov 0x18(%rsp),%r10
4d3e(2): push %r10
4d40(5): jmp 0xffffff44(%rip)
4d45(3): nop (%rax)
4d48(3): mov (%rbx),%rbx
4d4b(7): lea 0x606d(%rip),%rsi
4d52(5): mov $0x5,%edx
4d57(2): xor %edi,%edi
4d59(5): call 0xffffcbe7(%rip)
4d5e(4): add $0x28,%rsp
4d62(3): mov %rbx,%rcx
4d65(3): mov %rbp,%rdi
4d68(1): pop %rbx
4d69(1): pop %rbp
4d6a(2): pop %r12
4d6c(2): pop %r13
4d6e(2): pop %r14
4d70(2): pop %r15
4d72(3): mov %rax,%rdx
4d75(5): mov $0x1,%esi
4d7a(2): xor %eax,%eax
4d7c(5): jmp 0xffffcec4(%rip)
4d81(7): nop 0x0(%rax)
4d88(4): mov 0x8(%rbx),%r12
4d8c(7): lea 0x603c(%rip),%rsi
4d93(3): mov (%rbx),%rbx
4d96(5): mov $0x5,%edx
4d9b(2): xor %edi,%edi
4d9d(5): call 0xffffcba3(%rip)
4da2(4): add $0x28,%rsp
4da6(3): mov %r12,%r8
4da9(3): mov %rbx,%rcx
4dac(3): mov %rbp,%rdi
4daf(3): mov %rax,%rdx
4db2(5): mov $0x1,%esi
4db7(1): pop %rbx
4db8(1): pop %rbp
4db9(2): pop %r12
4dbb(2): pop %r13
4dbd(2): pop %r14
4dbf(2): pop %r15
4dc1(2): xor %eax,%eax
4dc3(5): jmp 0xffffce7d(%rip)
4dc8(8): nop 0x0(%rax,%rax,1)
4dd0(4): mov 0x10(%rbx),%r13
4dd4(4): mov 0x8(%rbx),%r12
4dd8(7): lea 0x6007(%rip),%rsi
4ddf(3): mov (%rbx),%rbx
4de2(5): mov $0x5,%edx
4de7(2): xor %edi,%edi
4de9(5): call 0xffffcb57(%rip)
4dee(4): add $0x28,%rsp
4df2(3): mov %r13,%r9
4df5(3): mov %r12,%r8
4df8(3): mov %rbx,%rcx
4dfb(3): mov %rbp,%rdi
4dfe(3): mov %rax,%rdx
4e01(1): pop %rbx
4e02(1): pop %rbp
4e03(2): pop %r12
4e05(2): pop %r13
4e07(2): pop %r14
4e09(2): pop %r15
4e0b(5): mov $0x1,%esi
4e10(2): xor %eax,%eax
4e12(5): jmp 0xffffce2e(%rip)
4e17(9): nop 0x0(%rax,%rax,1)
4e20(7): lea 0x60f1(%rip),%rsi
4e27(5): mov $0x5,%edx
4e2c(2): xor %edi,%edi
4e2e(4): mov 0x18(%rbx),%r14
4e32(4): mov 0x10(%rbx),%r13
4e36(4): mov 0x8(%rbx),%r12
4e3a(3): mov (%rbx),%rbx
4e3d(5): call 0xffffcb03(%rip)
4e42(4): sub $0x8,%rsp
4e46(2): push %r14
4e48(3): mov %rax,%rdx
4e4b(3): mov %r13,%r9
4e4e(3): mov %r12,%r8
4e51(3): mov %rbx,%rcx
4e54(3): mov %rbp,%rdi
4e57(5): mov $0x1,%esi
4e5c(2): xor %eax,%eax
4e5e(5): call 0xffffcde2(%rip)
4e63(1): pop %rax
4e64(1): pop %rdx
4e65(4): add $0x28,%rsp
4e69(1): pop %rbx
4e6a(1): pop %rbp
4e6b(2): pop %r12
4e6d(2): pop %r13
4e6f(2): pop %r14
4e71(2): pop %r15
4e73(1): ret near (%rsp)
4e74(4): nop 0x0(%rax)
4e78(4): mov 0x20(%rbx),%r15
4e7c(7): lea 0x60b5(%rip),%rsi
4e83(5): mov $0x5,%edx
4e88(2): xor %edi,%edi
4e8a(4): mov 0x18(%rbx),%r14
4e8e(4): mov 0x10(%rbx),%r13
4e92(4): mov 0x8(%rbx),%r12
4e96(3): mov (%rbx),%rbx
4e99(5): call 0xffffcaa7(%rip)
4e9e(2): push %r15
4ea0(2): jmp 0xffffffa6(%rip)
4ea2(6): nop 0x0(%rax,%rax,1)
4ea8(4): mov 0x8(%rbx),%r8
4eac(4): mov 0x28(%rbx),%r12
4eb0(7): lea 0x60a9(%rip),%rsi
4eb7(4): mov 0x20(%rbx),%r15
4ebb(4): mov 0x18(%rbx),%r14
4ebf(5): mov $0x5,%edx
4ec4(4): mov 0x10(%rbx),%r13
4ec8(2): xor %edi,%edi
4eca(3): mov (%rbx),%rbx
4ecd(4): mov %r8,(%rsp)
4ed1(5): call 0xffffca6f(%rip)
4ed6(4): sub $0x8,%rsp
4eda(3): mov %r13,%r9
4edd(2): push %r12
4edf(2): push %r15
4ee1(2): push %r14
4ee3(5): mov 0x20(%rsp),%r8
4ee8(3): mov %rbx,%rcx
4eeb(3): mov %rax,%rdx
4eee(3): mov %rbp,%rdi
4ef1(5): mov $0x1,%esi
4ef6(2): xor %eax,%eax
4ef8(5): call 0xffffcd48(%rip)
4efd(4): add $0x20,%rsp
4f01(4): add $0x28,%rsp
4f05(1): pop %rbx
4f06(1): pop %rbp
4f07(2): pop %r12
4f09(2): pop %r13
4f0b(2): pop %r14
4f0d(2): pop %r15
4f0f(1): ret near (%rsp)
4f10(4): mov 0x10(%rbx),%r9
4f14(4): mov 0x30(%rbx),%r13
4f18(7): lea 0x6069(%rip),%rsi
4f1f(4): mov 0x28(%rbx),%r12
4f23(4): mov 0x20(%rbx),%r15
4f27(5): mov $0x5,%edx
4f2c(4): mov 0x18(%rbx),%r14
4f30(4): mov 0x8(%rbx),%r8
4f34(2): xor %edi,%edi
4f36(5): mov %r9,0x8(%rsp)
4f3b(3): mov (%rbx),%rbx
4f3e(4): mov %r8,(%rsp)
4f42(5): call 0xffffc9fe(%rip)
4f47(2): push %r13
4f49(2): push %r12
4f4b(2): push %r15
4f4d(2): push %r14
4f4f(5): mov 0x28(%rsp),%r9
4f54(2): jmp 0xffffff8f(%rip)
4f56(a): nop 0x0(%rax,%rax,1)
4f60(4): mov 0x40(%rbx),%r10
4f64(4): mov 0x38(%rbx),%r9
4f68(5): mov $0x5,%edx
4f6d(4): mov 0x10(%rbx),%rax
4f71(4): mov 0x8(%rbx),%r8
4f75(7): lea 0x60a4(%rip),%rsi
4f7c(4): mov 0x30(%rbx),%r13
4f80(4): mov 0x28(%rbx),%r12
4f84(4): mov 0x20(%rbx),%r15
4f88(4): mov 0x18(%rbx),%r14
4f8c(5): mov %r10,0x18(%rsp)
4f91(5): mov %r9,0x10(%rsp)
4f96(4): mov %rax,(%rsp)
4f9a(5): mov %r8,0x8(%rsp)
4f9f(3): mov (%rbx),%rbx
4fa2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4fb0(3): xor %r9d,%r9d
4fb3(4): cmp $0x0,(%r8)
4fb7(2): jz 0x14(%rip)
4fb9(7): nop 0x0(%rax)
4fc0(4): add $0x1,%r9
4fc4(5): cmp $0x0,0x0(%r8,%r9,8)
4fc9(2): jnz 0xfffffff7(%rip)
4fcb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4fd0(4): sub $0x68,%rsp
4fd4(3): mov %r8,%r10
4fd7(3): xor %r9d,%r9d
4fda(9): mov $0x28,%rax
4fe3(5): mov %rax,0x58(%rsp)
4fe8(2): xor %eax,%eax
4fea(3): mov %rsp,%r8
4fed(3): nop (%rax)
4ff0(3): mov (%r10),%eax
4ff3(3): cmp $0x2f,%eax
4ff6(2): jnbe 0x44(%rip)
4ff8(3): mov %eax,%r11d
4ffb(4): add 0x10(%r10),%r11
4fff(3): add $0x8,%eax
5002(3): mov %eax,(%r10)
5005(3): mov (%r11),%rax
5008(3): test %rax,%rax
500b(4): mov %rax,0x0(%r8,%r9,8)
500f(2): jz 0xc(%rip)
5011(4): add $0x1,%r9
5015(4): cmp $0xa,%r9
5019(2): jnz 0xffffffd7(%rip)
501b(5): call 0xfffffb75(%rip)
5020(5): mov 0x58(%rsp),%rax
5025(9): xor $0x28,%rax
502e(2): jnz 0x7(%rip)
5030(4): add $0x68,%rsp
5034(1): ret near (%rsp)
5035(5): call 0xffffc96b(%rip)
503a(4): mov 0x8(%r10),%r11
503e(4): lea 0x8(%r11),%rax
5042(4): mov %rax,0x8(%r10)
5046(2): jmp 0xffffffbf(%rip)

"version_etc" :
5050(1): push %rbp
5051(1): push %rbx
5052(6): mov $0x20,%r10d
5058(3): xor %r11d,%r11d
505b(7): sub $0xb8,%rsp
5062(9): mov $0x28,%rax
506b(5): mov %rax,0x78(%rsp)
5070(2): xor %eax,%eax
5072(8): lea 0xd0(%rsp),%rax
507a(8): mov %r8,0xa0(%rsp)
5082(8): lea 0xd0(%rsp),%rbx
508a(5): lea 0x20(%rsp),%r8
508f(8): mov %r9,0xa8(%rsp)
5097(8): mov $0x20,0x8(%rsp)
509f(5): mov %rax,0x10(%rsp)
50a4(8): lea 0x80(%rsp),%rax
50ac(3): xor %r9d,%r9d
50af(5): mov %rax,0x18(%rsp)
50b4(3): mov %rax,%rbp
50b7(9): nop 0x0(%rax,%rax,1)
50c0(4): cmp $0x2f,%r10d
50c4(2): jnbe 0x58(%rip)
50c6(3): mov %r10d,%eax
50c9(6): mov $0x1,%r11d
50cf(4): add $0x8,%r10d
50d3(3): add %rbp,%rax
50d6(3): mov (%rax),%rax
50d9(3): test %rax,%rax
50dc(4): mov %rax,0x0(%r8,%r9,8)
50e0(2): jz 0xc(%rip)
50e2(4): add $0x1,%r9
50e6(4): cmp $0xa,%r9
50ea(2): jnz 0xffffffd6(%rip)
50ec(3): test %r11b,%r11b
50ef(2): jnz 0x26(%rip)
50f1(5): call 0xfffffa9f(%rip)
50f6(5): mov 0x78(%rsp),%rax
50fb(9): xor $0x28,%rax
5104(2): jnz 0xc(%rip)
5106(7): add $0xb8,%rsp
510d(1): pop %rbx
510e(1): pop %rbp
510f(1): ret near (%rsp)
5110(5): call 0xffffc890(%rip)
5115(5): mov %r10d,0x8(%rsp)
511a(2): jmp 0xffffffd7(%rip)
511c(3): mov %rbx,%rax
511f(4): add $0x8,%rbx
5123(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5130(1): push %rbx
5131(7): lea 0x5cca(%rip),%rsi
5138(5): mov $0x5,%edx
513d(2): xor %edi,%edi
513f(5): call 0xffffc801(%rip)
5144(7): lea 0x5ccc(%rip),%rdx
514b(3): mov %rax,%rsi
514e(5): mov $0x1,%edi
5153(2): xor %eax,%eax
5155(5): call 0xffffca2b(%rip)
515a(7): lea 0x5ccc(%rip),%rsi
5161(5): mov $0x5,%edx
5166(2): xor %edi,%edi
5168(5): call 0xffffc7d8(%rip)
516d(7): lea 0x53a4(%rip),%rcx
5174(7): lea 0x4ac5(%rip),%rdx
517b(3): mov %rax,%rsi
517e(5): mov $0x1,%edi
5183(2): xor %eax,%eax
5185(5): call 0xffffc9fb(%rip)
518a(7): mov 0x208ef7(%rip),%rbx
5191(7): lea 0x5ec8(%rip),%rsi
5198(2): xor %edi,%edi
519a(5): mov $0x5,%edx
519f(5): call 0xffffc7a1(%rip)
51a4(3): mov %rbx,%rsi
51a7(3): mov %rax,%rdi
51aa(1): pop %rbx
51ab(5): jmp 0xffffc8d5(%rip)

"xmalloc" :
51b0(1): push %rbx
51b1(3): mov %rdi,%rbx
51b4(5): call 0xffffc94c(%rip)
51b9(3): test %rax,%rax
51bc(2): jnz 0x7(%rip)
51be(3): test %rbx,%rbx
51c1(2): jnz 0x4(%rip)
51c3(1): pop %rbx
51c4(1): ret near (%rsp)
51c5(5): call 0x23b(%rip)

"xnmalloc" :
51d0(3): mov %rdi,%rax
51d3(3): mul %rax,%rsi,%rdx
51d6(3): mov %rax,%rdi
51d9(3): seto %al
51dc(3): test %rdi,%rdi
51df(2): js 0xc(%rip)
51e1(3): movzx %al,%eax
51e4(3): test %rax,%rax
51e7(2): jnz 0x4(%rip)
51e9(2): jmp 0xffffffc7(%rip)
51eb(4): sub $0x8,%rsp
51ef(5): call 0x211(%rip)

"xrealloc" :
5210(3): test %rsi,%rsi
5213(1): push %rbx
5214(3): mov %rsi,%rbx
5217(2): jnz 0x7(%rip)
5219(3): test %rdi,%rdi
521c(2): jnz 0x1c(%rip)
521e(3): mov %rbx,%rsi
5221(5): call 0xffffc93f(%rip)
5226(3): test %rax,%rax
5229(2): jnz 0x7(%rip)
522b(3): test %rbx,%rbx
522e(2): jnz 0x13(%rip)
5230(1): pop %rbx
5231(1): ret near (%rsp)
5232(6): nop 0x0(%rax,%rax,1)
5238(5): call 0xffffca58(%rip)
523d(2): xor %eax,%eax
523f(1): pop %rbx
5240(1): ret near (%rsp)
5241(5): call 0x1bf(%rip)

"xnrealloc" :
5250(3): mov %rsi,%rax
5253(3): mul %rax,%rdx,%rdx
5256(3): mov %rax,%rsi
5259(3): seto %al
525c(3): test %rsi,%rsi
525f(2): js 0xc(%rip)
5261(3): movzx %al,%eax
5264(3): test %rax,%rax
5267(2): jnz 0x4(%rip)
5269(2): jmp 0xffffffa7(%rip)
526b(4): sub $0x8,%rsp
526f(5): call 0x191(%rip)

"x2nrealloc" :
5280(3): test %rdi,%rdi
5283(3): mov %rdx,%r9
5286(3): mov (%rsi),%rcx
5289(2): jz 0x37(%rip)
528b(2): xor %edx,%edx
528d(a): mov $0x6148914691236517204,%rax
5297(3): div %r9,%rax
529a(3): cmp %rcx,%rax
529d(2): jbe 0x3e(%rip)
529f(3): mov %rcx,%rax
52a2(3): shr $0x1,%rax
52a5(5): lea 0x1(%rax,%rcx,1),%rcx
52aa(3): mov %rcx,(%rsi)
52ad(4): imul %r9,%rcx
52b1(3): mov %rcx,%rsi
52b4(5): jmp 0xffffff5c(%rip)
52b9(7): nop 0x0(%rax)
52c0(3): test %rcx,%rcx
52c3(2): jz 0x25(%rip)
52c5(3): mov %rcx,%rax
52c8(3): mul %rax,%r9,%rdx
52cb(3): seto %dl
52ce(3): test %rax,%rax
52d1(3): movzx %dl,%edx
52d4(2): js 0x7(%rip)
52d6(3): test %rdx,%rdx
52d9(2): jz 0xffffffd1(%rip)
52db(4): sub $0x8,%rsp
52df(5): call 0x121(%rip)
52e4(4): nop 0x0(%rax)
52e8(2): xor %edx,%edx
52ea(5): mov $0x80,%eax
52ef(3): xor %r8d,%r8d
52f2(3): div %r9,%rax
52f5(3): test %rax,%rax
52f8(4): setz %r8b
52fc(4): lea 0x0(%r8,%rax,1),%rcx
5300(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5310(3): test %rdi,%rdi
5313(3): mov (%rsi),%rax
5316(2): jz 0x2a(%rip)
5318(a): mov $0x6148914691236517203,%rdx
5322(3): cmp %rdx,%rax
5325(2): jnbe 0x2c(%rip)
5327(3): mov %rax,%rdx
532a(3): shr $0x1,%rdx
532d(5): lea 0x1(%rdx,%rax,1),%rax
5332(3): mov %rax,(%rsi)
5335(3): mov %rax,%rsi
5338(5): jmp 0xfffffed8(%rip)
533d(3): nop (%rax)
5340(3): test %rax,%rax
5343(5): mov $0x80,%edx
5348(4): cmove %rdx,%rax
534c(3): test %rax,%rax
534f(2): jns 0xffffffe3(%rip)
5351(4): sub $0x8,%rsp
5355(5): call 0xab(%rip)

"xzalloc" :
5360(1): push %rbx
5361(3): mov %rdi,%rbx
5364(5): call 0xfffffe4c(%rip)
5369(3): mov %rbx,%rdx
536c(2): xor %esi,%esi
536e(3): mov %rax,%rdi
5371(1): pop %rbx
5372(5): jmp 0xffffc69e(%rip)

"xcalloc" :
5380(3): mov %rdi,%rax
5383(4): sub $0x8,%rsp
5387(3): mul %rax,%rsi,%rdx
538a(3): seto %dl
538d(3): test %rax,%rax
5390(2): js 0x19(%rip)
5392(3): movzx %dl,%edx
5395(3): test %rdx,%rdx
5398(2): jnz 0x11(%rip)
539a(5): call 0xffffc6f6(%rip)
539f(3): test %rax,%rax
53a2(2): jz 0x7(%rip)
53a4(4): add $0x8,%rsp
53a8(1): ret near (%rsp)
53a9(5): call 0x57(%rip)

"xmemdup" :
53b0(1): push %rbp
53b1(1): push %rbx
53b2(3): mov %rdi,%rbp
53b5(3): mov %rsi,%rdi
53b8(3): mov %rsi,%rbx
53bb(4): sub $0x8,%rsp
53bf(5): call 0xfffffdf1(%rip)
53c4(4): add $0x8,%rsp
53c8(3): mov %rbx,%rdx
53cb(3): mov %rbp,%rsi
53ce(1): pop %rbx
53cf(1): pop %rbp
53d0(3): mov %rax,%rdi
53d3(5): jmp 0xffffc6ed(%rip)

"xstrdup" :
53e0(1): push %rbx
53e1(3): mov %rdi,%rbx
53e4(5): call 0xffffc57c(%rip)
53e9(3): mov %rbx,%rdi
53ec(4): lea 0x1(%rax),%rsi
53f0(1): pop %rbx
53f1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5400(7): lea 0x5d08(%rip),%rsi
5407(4): sub $0x8,%rsp
540b(5): mov $0x5,%edx
5410(2): xor %edi,%edi
5412(5): call 0xffffc52e(%rip)
5417(6): mov 0x208bfb(%rip),%edi
541d(7): lea 0x546d(%rip),%rdx
5424(3): mov %rax,%rcx
5427(2): xor %esi,%esi
5429(2): xor %eax,%eax
542b(5): call 0xffffc775(%rip)
5430(5): call 0xffffc460(%rip)

"xfts_open" :
5440(4): sub $0x8,%rsp
5444(6): or $0x200,%esi
544a(5): call 0x1656(%rip)
544f(3): test %rax,%rax
5452(2): jz 0xe(%rip)
5454(4): add $0x8,%rsp
5458(1): ret near (%rsp)
5459(7): nop 0x0(%rax)
5460(5): call 0xffffc440(%rip)
5465(3): cmp $0x16,(%rax)
5468(2): jz 0x8(%rip)
546a(5): call 0xffffff96(%rip)
546f(1): nop 
5470(7): lea 0x5cd9(%rip),%rcx
5477(7): lea 0x5ca2(%rip),%rsi
547e(7): lea 0x5cb8(%rip),%rdi
5485(5): mov $0x29,%edx
548a(5): call 0xffffc576(%rip)

"cycle_warning_required" :
5490(3): mov 0x48(%rdi),%edx
5493(5): mov $0x1,%eax
5498(3): and $0x11,%edx
549b(3): cmp $0x10,%edx
549e(2): jz 0x9(%rip)
54a0(2): xor %eax,%eax
54a2(3): cmp $0x11,%edx
54a5(2): jz 0xb(%rip)
54a7(2): REP ret near (%rsp)
54a9(7): nop 0x0(%rax)
54b0(5): cmp $0x0,0x58(%rsi)
54b5(3): setnz %al
54b8(1): ret near (%rsp)

"AD_compare" :
54c0(2): xor %eax,%eax
54c2(4): mov 0x8(%rsi),%rdx
54c6(4): cmp %rdx,0x8(%rdi)
54ca(2): jz 0x6(%rip)
54cc(2): REP ret near (%rsp)
54ce(2): nop 
54d0(3): mov (%rsi),%rax
54d3(3): cmp %rax,(%rdi)
54d6(3): setz %al
54d9(1): ret near (%rsp)

"AD_hash" :
54e0(4): mov 0x8(%rdi),%rax
54e4(2): xor %edx,%edx
54e6(3): div %rsi,%rax
54e9(3): mov %rdx,%rax
54ec(1): ret near (%rsp)

"dev_type_hash" :
54f0(3): mov (%rdi),%rax
54f3(2): xor %edx,%edx
54f5(3): div %rsi,%rax
54f8(3): mov %rdx,%rax
54fb(1): ret near (%rsp)

"dev_type_compare" :
5500(3): mov (%rsi),%rax
5503(3): cmp %rax,(%rdi)
5506(3): setz %al
5509(1): ret near (%rsp)

"fts_compare_ino" :
5510(3): mov (%rdi),%rdx
5513(3): mov (%rsi),%rax
5516(7): mov 0x80(%rax),%rax
551d(7): cmp %rax,0x80(%rdx)
5524(2): jb 0xc(%rip)
5526(3): setnbe %al
5529(3): movzx %al,%eax
552c(1): ret near (%rsp)
552d(3): nop (%rax)
5530(5): mov $0xffffffff,%eax
5535(1): ret near (%rsp)

"fts_stat" :
5540(2): push %r12
5542(1): push %rbp
5543(3): mov %rsi,%rbp
5546(1): push %rbx
5547(5): cmp $0x0,0x58(%rbp)
554c(4): lea 0x78(%rsi),%rbx
5550(3): mov %rdi,%r12
5553(3): mov 0x48(%rdi),%eax
5556(4): mov 0x30(%rsi),%rsi
555a(2): jnz 0x66(%rip)
555c(2): test $0x1,%al
555e(2): jz 0x62(%rip)
5560(3): mov %rbx,%rdx
5563(5): mov $0x1,%edi
5568(5): call 0xffffc578(%rip)
556d(2): test %eax,%eax
556f(2): jz 0x7c(%rip)
5571(5): call 0xffffc32f(%rip)
5576(3): mov %rax,%r12
5579(2): mov (%rax),%eax
557b(3): cmp $0x2,%eax
557e(6): jz 0x112(%rip)
5584(4): lea 0x8(%rbx),%rdi
5588(3): mov %eax,0x40(%rbp)
558b(8): mov $0x0,0x78(%rbp)
5593(b): mov $0x0,0x88(%rbx)
559e(2): xor %eax,%eax
55a0(4): and $0xfffffff8,%rdi
55a4(3): sub %rdi,%rbx
55a7(6): lea 0x90(%rbx),%ecx
55ad(3): shr $0x3,%ecx
55b0(3): REP stosd %rax,rdi(%es,10)
55b3(5): mov $0xa,%eax
55b8(1): pop %rbx
55b9(1): pop %rbp
55ba(2): pop %r12
55bc(1): ret near (%rsp)
55bd(3): nop (%rax)
55c0(2): test $0x2,%al
55c2(2): jnz 0xffffff9e(%rip)
55c4(2): test %dl,%dl
55c6(2): jnz 0xffffff9a(%rip)
55c8(3): mov %rsi,%rdx
55cb(5): mov 0x2c(%r12),%esi
55d0(6): mov $0x100,%r8d
55d6(3): mov %rbx,%rcx
55d9(5): mov $0x1,%edi
55de(5): call 0xffffc3f2(%rip)
55e3(2): test %eax,%eax
55e5(6): jnz 0x9b(%rip)
55eb(6): mov 0x90(%rbp),%eax
55f1(5): and $0xf000,%eax
55f6(5): cmp $0x4000,%eax
55fb(2): jz 0x25(%rip)
55fd(5): cmp $0xa000,%eax
5602(6): jz 0xd6(%rip)
5608(5): cmp $0x8000,%eax
560d(3): setz %al
5610(3): movzx %al,%eax
5613(1): pop %rbx
5614(4): lea 0x3(%rax,%rax,4),%eax
5618(1): pop %rbp
5619(2): pop %r12
561b(1): ret near (%rsp)
561c(4): nop 0x0(%rax)
5620(7): mov 0x88(%rbp),%rax
5627(4): cmp $0x1,%rax
562b(6): jbe 0x85(%rip)
5631(5): cmp $0x0,0x58(%rbp)
5636(2): jle 0x7a(%rip)
5638(6): test $0x20,0x48(%r12)
563e(4): lea 0xfffffffe(%rax),%rdx
5642(4): cmove %rdx,%rax
5646(7): cmp $0x2e,0x108(%rbp)
564d(4): mov %rax,0x68(%rbp)
5651(5): mov $0x1,%eax
5656(6): jnz 0xffffff62(%rip)
565c(7): cmp $0x0,0x109(%rbp)
5663(6): jnz 0x85(%rip)
5669(5): cmp $0x1,0x58(%rbp)
566e(2): sbb %eax,%eax
5670(3): and $0xfc,%eax
5673(3): add $0x5,%eax
5676(5): jmp 0xffffff42(%rip)
567b(5): nop 0x0(%rax,%rax,1)
5680(5): call 0xffffc220(%rip)
5685(2): mov (%rax),%eax
5687(5): jmp 0xfffffefd(%rip)
568c(4): nop 0x0(%rax)
5690(4): mov 0x30(%rbp),%rsi
5694(3): mov %rbx,%rdx
5697(5): mov $0x1,%edi
569c(5): call 0xffffc2d4(%rip)
56a1(2): test %eax,%eax
56a3(2): jz 0x1d(%rip)
56a5(4): mov (%r12),%eax
56a9(5): jmp 0xfffffedb(%rip)
56ae(2): nop 
56b0(7): mov $0xffffffff,%rax
56b7(2): jmp 0xffffff8f(%rip)
56b9(7): nop 0x0(%rax)
56c0(8): mov $0x0,(%r12)
56c8(5): mov $0xd,%eax
56cd(5): jmp 0xfffffeeb(%rip)
56d2(6): nop 0x0(%rax,%rax,1)
56d8(5): mov $0xc,%eax
56dd(5): jmp 0xfffffedb(%rip)
56e2(6): nop 0x0(%rax,%rax,1)
56e8(6): mov 0x108(%rbp),%edx
56ee(6): and $0xffff00,%edx
56f4(6): cmp $0x2e00,%edx
56fa(6): jnz 0xfffffebe(%rip)
5700(5): jmp 0xffffff69(%rip)

"fts_sort" :
5710(2): push %r13
5712(2): push %r12
5714(3): mov %rdx,%r12
5717(1): push %rbp
5718(1): push %rbx
5719(3): mov %rdi,%rbp
571c(3): mov %rsi,%rbx
571f(4): sub $0x8,%rsp
5723(4): cmp %rdx,0x38(%rbp)
5727(4): mov 0x40(%rdi),%r13
572b(4): mov 0x10(%rdi),%rdi
572f(2): jnb 0x36(%rip)
5731(4): lea 0x28(%rdx),%rsi
5735(a): mov $0x2305843009213693951,%rax
573f(3): cmp %rax,%rsi
5742(4): mov %rsi,0x38(%rbp)
5746(6): jnbe 0x9e(%rip)
574c(4): shl/sal $0x3,%rsi
5750(5): call 0xffffc410(%rip)
5755(3): test %rax,%rax
5758(3): mov %rax,%rdi
575b(6): jz 0x85(%rip)
5761(4): mov %rax,0x10(%rbp)
5765(3): test %rbx,%rbx
5768(2): jz 0x19(%rip)
576a(3): mov %rdi,%rdx
576d(3): nop (%rax)
5770(4): add $0x8,%rdx
5774(4): mov %rbx,0xfffffff8(%rdx)
5778(4): mov 0x10(%rbx),%rbx
577c(3): test %rbx,%rbx
577f(2): jnz 0xfffffff1(%rip)
5781(3): mov %r13,%rcx
5784(5): mov $0x8,%edx
5789(3): mov %r12,%rsi
578c(5): call 0xffffc164(%rip)
5791(4): mov 0x10(%rbp),%r8
5795(3): mov %r12,%rcx
5798(4): sub $0x1,%rcx
579c(3): mov (%r8),%rax
579f(2): jz 0x71(%rip)
57a1(3): mov %rax,%rdi
57a4(3): mov %r8,%rdx
57a7(2): jmp 0xc(%rip)
57a9(7): nop 0x0(%rax)
57b0(3): mov (%rdx),%rdi
57b3(4): mov 0x8(%rdx),%rsi
57b7(4): add $0x8,%rdx
57bb(4): sub $0x1,%rcx
57bf(4): mov %rsi,0x10(%rdi)
57c3(2): jnz 0xffffffed(%rip)
57c5(5): mov 0xfffffff8(%r8,%r12,8),%rdx
57ca(8): mov $0x0,0x10(%rdx)
57d2(4): add $0x8,%rsp
57d6(1): pop %rbx
57d7(1): pop %rbp
57d8(2): pop %r12
57da(2): pop %r13
57dc(1): ret near (%rsp)
57dd(3): nop (%rax)
57e0(4): mov 0x10(%rbp),%rdi
57e4(5): call 0xffffc4ac(%rip)
57e9(8): mov $0x0,0x10(%rbp)
57f1(8): mov $0x0,0x38(%rbp)
57f9(4): add $0x8,%rsp
57fd(3): mov %rbx,%rax
5800(1): pop %rbx
5801(1): pop %rbp
5802(2): pop %r12
5804(2): pop %r13
5806(1): ret near (%rsp)
5807(9): nop 0x0(%rax,%rax,1)
5810(3): mov %rax,%rdx
5813(2): jmp 0xffffffb7(%rip)

"fts_alloc" :
5820(2): push %r13
5822(2): push %r12
5824(3): mov %rdi,%r12
5827(1): push %rbp
5828(7): lea 0x110(%rdx),%rdi
582f(1): push %rbx
5830(3): mov %rsi,%r13
5833(3): mov %rdx,%rbp
5836(4): sub $0x8,%rsp
583a(4): and $0xfffffff8,%rdi
583e(5): call 0xffffc2c2(%rip)
5843(3): test %rax,%rax
5846(3): mov %rax,%rbx
5849(2): jz 0x53(%rip)
584b(7): lea 0x108(%rax),%rdi
5852(3): mov %rbp,%rdx
5855(3): mov %r13,%rsi
5858(5): call 0xffffc268(%rip)
585d(5): mov 0x20(%r12),%rax
5862(8): mov $0x0,0x108(%rbx,%rbp,1)
586a(4): mov %rbp,0x60(%rbx)
586e(4): mov %r12,0x50(%rbx)
5872(7): mov $0x0,0x40(%rbx)
5879(8): mov $0x0,0x18(%rbx)
5881(4): mov %rax,0x38(%rbx)
5885(7): mov $0x30000,0x72(%rbx)
588c(8): mov $0x0,0x20(%rbx)
5894(8): mov $0x0,0x28(%rbx)
589c(4): add $0x8,%rsp
58a0(3): mov %rbx,%rax
58a3(1): pop %rbx
58a4(1): pop %rbp
58a5(2): pop %r12
58a7(2): pop %r13
58a9(1): ret near (%rsp)

"fts_lfree" :
58b0(3): test %rdi,%rdi
58b3(2): jz 0x3d(%rip)
58b5(1): push %rbp
58b6(1): push %rbx
58b7(3): mov %rdi,%rbx
58ba(4): sub $0x8,%rsp
58be(2): nop 
58c0(4): mov 0x18(%rbx),%rdi
58c4(4): mov 0x10(%rbx),%rbp
58c8(3): test %rdi,%rdi
58cb(2): jz 0x7(%rip)
58cd(5): call 0xffffc183(%rip)
58d2(3): mov %rbx,%rdi
58d5(3): mov %rbp,%rbx
58d8(5): call 0xffffc3b8(%rip)
58dd(3): test %rbp,%rbp
58e0(2): jnz 0xffffffe0(%rip)
58e2(4): add $0x8,%rsp
58e6(1): pop %rbx
58e7(1): pop %rbp
58e8(1): ret near (%rsp)
58e9(7): nop 0x0(%rax)
58f0(2): REP ret near (%rsp)

"fd_ring_clear" :
5900(1): push %rbx
5901(3): mov %rdi,%rbx
5904(2): jmp 0x18(%rip)
5906(a): nop 0x0(%rax,%rax,1)
5910(3): mov %rbx,%rdi
5913(5): call 0x36ed(%rip)
5918(2): test %eax,%eax
591a(2): jns 0x16(%rip)
591c(3): mov %rbx,%rdi
591f(5): call 0x3691(%rip)
5924(2): test %al,%al
5926(2): jz 0xffffffea(%rip)
5928(1): pop %rbx
5929(1): ret near (%rsp)
592a(6): nop 0x0(%rax,%rax,1)
5930(2): mov %eax,%edi
5932(5): call 0xffffc0fe(%rip)
5937(2): jmp 0xffffffe5(%rip)

"filesystem_type" :
5940(2): push %r13
5942(2): push %r12
5944(1): push %rbp
5945(1): push %rbx
5946(7): sub $0x98,%rsp
594d(4): mov 0x50(%rdi),%rbx
5951(9): mov $0x28,%rax
595a(8): mov %rax,0x88(%rsp)
5962(2): xor %eax,%eax
5964(4): test $0x2,0x49(%rbx)
5968(2): jz 0x6a(%rip)
596a(4): mov 0x50(%rbx),%r12
596e(3): mov %rdi,%rbp
5971(3): mov %esi,%r13d
5974(3): test %r12,%r12
5977(2): jz 0x29(%rip)
5979(4): mov 0x78(%rbp),%rax
597d(3): mov %rsp,%rsi
5980(3): mov %r12,%rdi
5983(4): mov %rax,(%rsp)
5987(5): call 0x2929(%rip)
598c(3): test %rax,%rax
598f(2): jz 0x3e(%rip)
5991(4): mov 0x8(%rax),%rbx
5995(2): jmp 0x3f(%rip)
5997(9): nop 0x0(%rax,%rax,1)
59a0(7): mov 0x208619(%rip),%r8
59a7(7): lea 0xfffffb52(%rip),%rcx
59ae(7): lea 0xfffffb3b(%rip),%rdx
59b5(2): xor %esi,%esi
59b7(5): mov $0xd,%edi
59bc(5): call 0x2b64(%rip)
59c1(3): test %rax,%rax
59c4(3): mov %rax,%r12
59c7(4): mov %rax,0x50(%rbx)
59cb(2): jnz 0xffffffae(%rip)
59cd(3): test %r13d,%r13d
59d0(2): jns 0x30(%rip)
59d2(2): xor %ebx,%ebx
59d4(8): mov 0x88(%rsp),%rdx
59dc(9): xor $0x28,%rdx
59e5(3): mov %rbx,%rax
59e8(2): jnz 0x7a(%rip)
59ea(7): add $0x98,%rsp
59f1(1): pop %rbx
59f2(1): pop %rbp
59f3(2): pop %r12
59f5(2): pop %r13
59f7(1): ret near (%rsp)
59f8(8): nop 0x0(%rax,%rax,1)
5a00(5): lea 0x10(%rsp),%rsi
5a05(3): mov %r13d,%edi
5a08(5): call 0xffffc1f8(%rip)
5a0d(2): test %eax,%eax
5a0f(2): jnz 0xffffffc3(%rip)
5a11(3): test %r12,%r12
5a14(5): mov 0x10(%rsp),%rbx
5a19(2): jz 0xffffffbb(%rip)
5a1b(5): mov $0x10,%edi
5a20(5): call 0xffffc0e0(%rip)
5a25(3): test %rax,%rax
5a28(3): mov %rax,%r13
5a2b(2): jz 0xffffffa9(%rip)
5a2d(4): mov 0x78(%rbp),%rax
5a31(4): mov %rbx,0x8(%r13)
5a35(3): mov %r13,%rsi
5a38(3): mov %r12,%rdi
5a3b(4): mov %rax,0x0(%r13)
5a3f(5): call 0x32e1(%rip)
5a44(3): test %rax,%rax
5a47(2): jz 0x11(%rip)
5a49(3): cmp %rax,%r13
5a4c(2): jnz 0x1b(%rip)
5a4e(5): mov 0x10(%rsp),%rbx
5a53(5): jmp 0xffffff81(%rip)
5a58(3): mov %r13,%rdi
5a5b(5): call 0xffffc235(%rip)
5a60(2): jmp 0xffffffee(%rip)
5a62(5): call 0xffffbf3e(%rip)
5a67(5): call 0xffffbe29(%rip)

"leaf_optimization" :
5a70(4): sub $0x8,%rsp
5a74(5): call 0xfffffecc(%rip)
5a79(6): cmp $0x52654973,%rax
5a7f(2): jz 0x51(%rip)
5a81(2): jle 0x2f(%rip)
5a83(6): cmp $0x58465342,%rax
5a89(2): jz 0x47(%rip)
5a8b(5): mov $0xff534d42,%edx
5a90(3): cmp %rdx,%rax
5a93(2): jz 0x32(%rip)
5a95(6): cmp $0x5346414f,%rax
5a9b(2): jz 0x2a(%rip)
5a9d(5): mov $0x1,%eax
5aa2(4): add $0x8,%rsp
5aa6(1): ret near (%rsp)
5aa7(9): nop 0x0(%rax,%rax,1)
5ab0(6): cmp $0x6969,%rax
5ab6(2): jz 0xf(%rip)
5ab8(6): cmp $0x9fa0,%rax
5abe(2): jz 0x7(%rip)
5ac0(3): test %rax,%rax
5ac3(2): jnz 0xffffffda(%rip)
5ac5(2): xor %eax,%eax
5ac7(4): add $0x8,%rsp
5acb(1): ret near (%rsp)
5acc(4): nop 0x0(%rax)
5ad0(5): mov $0x2,%eax
5ad5(4): add $0x8,%rsp
5ad9(1): ret near (%rsp)

"cwd_advance_fd" :
5ae0(1): push %rbp
5ae1(1): push %rbx
5ae2(2): mov %esi,%ebp
5ae4(3): mov %rdi,%rbx
5ae7(4): sub $0x8,%rsp
5aeb(3): mov 0x2c(%rdi),%esi
5aee(2): cmp %ebp,%esi
5af0(2): jnz 0x7(%rip)
5af2(3): cmp $0x9c,%esi
5af5(2): jnz 0x4c(%rip)
5af7(2): test %dl,%dl
5af9(2): jnz 0x17(%rip)
5afb(4): test $0x4,0x48(%rbx)
5aff(2): jnz 0x6(%rip)
5b01(2): test %esi,%esi
5b03(2): jns 0x2d(%rip)
5b05(3): mov %ebp,0x2c(%rbx)
5b08(4): add $0x8,%rsp
5b0c(1): pop %rbx
5b0d(1): pop %rbp
5b0e(1): ret near (%rsp)
5b0f(1): nop 
5b10(4): lea 0x60(%rbx),%rdi
5b14(5): call 0x34ac(%rip)
5b19(2): test %eax,%eax
5b1b(2): js 0xffffffea(%rip)
5b1d(2): mov %eax,%edi
5b1f(5): call 0xffffbf11(%rip)
5b24(3): mov %ebp,0x2c(%rbx)
5b27(4): add $0x8,%rsp
5b2b(1): pop %rbx
5b2c(1): pop %rbp
5b2d(1): ret near (%rsp)
5b2e(2): nop 
5b30(2): mov %esi,%edi
5b32(5): call 0xffffbefe(%rip)
5b37(3): mov %ebp,0x2c(%rbx)
5b3a(4): add $0x8,%rsp
5b3e(1): pop %rbx
5b3f(1): pop %rbp
5b40(1): ret near (%rsp)
5b41(5): call 0xffffbd4f(%rip)

"restore_initial_cwd" :
5b50(1): push %rbp
5b51(1): push %rbx
5b52(3): mov %rdi,%rbx
5b55(4): sub $0x8,%rsp
5b59(3): mov 0x48(%rdi),%edx
5b5c(2): mov %edx,%ebp
5b5e(3): and $0x4,%ebp
5b61(2): jnz 0x47(%rip)
5b63(3): and $0x2,%dh
5b66(2): jnz 0x2a(%rip)
5b68(3): mov 0x28(%rdi),%edi
5b6b(2): xor %ebp,%ebp
5b6d(5): call 0xffffbfe3(%rip)
5b72(2): test %eax,%eax
5b74(4): setnz %bpl
5b78(4): lea 0x60(%rbx),%rdi
5b7c(5): call 0xfffffd84(%rip)
5b81(4): add $0x8,%rsp
5b85(2): mov %ebp,%eax
5b87(1): pop %rbx
5b88(1): pop %rbp
5b89(1): ret near (%rsp)
5b8a(6): nop 0x0(%rax,%rax,1)
5b90(5): mov $0x1,%edx
5b95(5): mov $0xffffff9c,%esi
5b9a(5): call 0xffffff46(%rip)
5b9f(2): jmp 0xffffffd9(%rip)
5ba1(7): nop 0x0(%rax)
5ba8(2): xor %ebp,%ebp
5baa(2): jmp 0xffffffce(%rip)

"fts_palloc.isra.2" :
5bb0(1): push %rbx
5bb1(3): mov (%rsi),%rcx
5bb4(3): mov %rdi,%rbx
5bb7(3): mov (%rdi),%rdi
5bba(8): lea 0x100(%rcx,%rdx,1),%rax
5bc2(3): cmp %rax,%rcx
5bc5(2): jnbe 0x23(%rip)
5bc7(3): mov %rax,(%rsi)
5bca(3): mov %rax,%rsi
5bcd(5): call 0xffffbf93(%rip)
5bd2(3): test %rax,%rax
5bd5(2): jz 0x33(%rip)
5bd7(3): mov %rax,(%rbx)
5bda(5): mov $0x1,%eax
5bdf(1): pop %rbx
5be0(1): ret near (%rsp)
5be1(7): nop 0x0(%rax)
5be8(5): call 0xffffc0a8(%rip)
5bed(7): mov $0x0,(%rbx)
5bf4(5): call 0xffffbcac(%rip)
5bf9(6): mov $0x24,(%rax)
5bff(2): xor %eax,%eax
5c01(1): pop %rbx
5c02(1): ret near (%rsp)
5c03(5): nop 0x0(%rax,%rax,1)
5c08(3): mov (%rbx),%rdi
5c0b(5): call 0xffffc085(%rip)
5c10(7): mov $0x0,(%rbx)
5c17(2): xor %eax,%eax
5c19(1): pop %rbx
5c1a(1): ret near (%rsp)

"setup_dir.isra.4" :
5c20(6): and $0x102,%edi
5c26(1): push %rbx
5c27(3): mov %rsi,%rbx
5c2a(2): jz 0x36(%rip)
5c2c(7): mov 0x20838d(%rip),%r8
5c33(7): lea 0xfffff886(%rip),%rcx
5c3a(7): lea 0xfffff89f(%rip),%rdx
5c41(2): xor %esi,%esi
5c43(5): mov $0x1f,%edi
5c48(5): call 0x28d8(%rip)
5c4d(3): test %rax,%rax
5c50(3): mov %rax,(%rbx)
5c53(3): setnz %al
5c56(1): pop %rbx
5c57(1): ret near (%rsp)
5c58(8): nop 0x0(%rax,%rax,1)
5c60(5): mov $0x20,%edi
5c65(5): call 0xffffbe9b(%rip)
5c6a(3): mov %rax,%rdi
5c6d(3): mov %rax,(%rbx)
5c70(2): xor %eax,%eax
5c72(3): test %rdi,%rdi
5c75(2): jz 0xffffffe1(%rip)
5c77(5): call 0x1ec9(%rip)
5c7c(5): mov $0x1,%eax
5c81(1): pop %rbx
5c82(1): ret near (%rsp)

"diropen.isra.6" :
5c90(3): mov %rdx,%rax
5c93(2): mov %esi,%edx
5c95(3): shl/sal $0xd,%edx
5c98(6): and $0x20000,%edx
5c9e(6): or $0x90900,%edx
5ca4(6): and $0x200,%esi
5caa(2): jnz 0x16(%rip)
5cac(3): mov %rax,%rdi
5caf(2): mov %edx,%esi
5cb1(2): xor %eax,%eax
5cb3(5): jmp 0x1f2d(%rip)
5cb8(8): nop 0x0(%rax,%rax,1)
5cc0(3): mov %rax,%rsi
5cc3(2): xor %eax,%eax
5cc5(5): jmp 0x341b(%rip)

"fts_safe_changedir" :
5cd0(2): push %r15
5cd2(2): push %r14
5cd4(3): mov %rsi,%r14
5cd7(2): push %r13
5cd9(2): push %r12
5cdb(3): mov %rdi,%r13
5cde(1): push %rbp
5cdf(1): push %rbx
5ce0(3): mov %edx,%r12d
5ce3(3): mov %rcx,%rbp
5ce6(7): sub $0xb8,%rsp
5ced(3): mov 0x48(%rdi),%ebx
5cf0(9): mov $0x28,%rax
5cf9(8): mov %rax,0xa8(%rsp)
5d01(2): xor %eax,%eax
5d03(3): mov %ebx,%r9d
5d06(4): and $0x4,%r9d
5d0a(3): test %rcx,%rcx
5d0d(6): jz 0xb3(%rip)
5d13(7): lea 0x5440(%rip),%rdx
5d1a(5): mov $0x3,%ecx
5d1f(3): mov %rbp,%rsi
5d22(3): mov %rdx,%rdi
5d25(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5d27(3): setnbe %al
5d2a(2): sbb $0x0,%al
5d2c(2): test %al,%al
5d2e(6): jnz 0x92(%rip)
5d34(3): test %r9d,%r9d
5d37(6): jnz 0x8e(%rip)
5d3d(3): test %r12d,%r12d
5d40(6): jns 0x1ea(%rip)
5d46(3): test $0x2,%bh
5d49(6): jnz 0x147(%rip)
5d4f(5): mov $0x1,0xf(%rsp)
5d54(4): mov 0x2c(%r13),%edi
5d58(3): mov %rbp,%rdx
5d5b(2): mov %ebx,%esi
5d5d(5): call 0xffffff33(%rip)
5d62(2): test %eax,%eax
5d64(3): mov %eax,%r15d
5d67(6): js 0x1b4(%rip)
5d6d(4): mov 0x48(%r13),%ebx
5d71(3): test $0x2,%bl
5d74(6): jz 0xa6(%rip)
5d7a(6): nop 0x0(%rax,%rax,1)
5d80(5): lea 0x10(%rsp),%rdx
5d85(3): mov %r15d,%esi
5d88(5): mov $0x1,%edi
5d8d(5): call 0xffffbda3(%rip)
5d92(2): test %eax,%eax
5d94(6): jz 0xcc(%rip)
5d9a(5): mov $0xffffffff,%ebx
5d9f(3): test %r12d,%r12d
5da2(2): jns 0x33(%rip)
5da4(5): call 0xffffbafc(%rip)
5da9(3): mov (%rax),%r12d
5dac(3): mov %rax,%rbp
5daf(3): mov %r15d,%edi
5db2(5): call 0xffffbc7e(%rip)
5db7(4): mov %r12d,0x0(%rbp)
5dbb(2): jmp 0x1a(%rip)
5dbd(3): nop (%rax)
5dc0(3): test %r9d,%r9d
5dc3(2): jz 0x3d(%rip)
5dc5(3): and $0x2,%bh
5dc8(2): jz 0xb(%rip)
5dca(3): test %r12d,%r12d
5dcd(6): jns 0xb3(%rip)
5dd3(2): xor %ebx,%ebx
5dd5(8): mov 0xa8(%rsp),%rcx
5ddd(9): xor $0x28,%rcx
5de6(2): mov %ebx,%eax
5de8(6): jnz 0x13d(%rip)
5dee(7): add $0xb8,%rsp
5df5(1): pop %rbx
5df6(1): pop %rbp
5df7(2): pop %r12
5df9(2): pop %r13
5dfb(2): pop %r14
5dfd(2): pop %r15
5dff(1): ret near (%rsp)
5e00(3): test %r12d,%r12d
5e03(6): js 0x13d(%rip)
5e09(3): test $0x2,%bl
5e0c(3): mov %r12d,%r15d
5e0f(5): mov $0x0,0xf(%rsp)
5e14(6): jnz 0xffffff6c(%rip)
5e1a(3): test %rbp,%rbp
5e1d(2): jz 0x23(%rip)
5e1f(7): lea 0x5334(%rip),%rdx
5e26(5): mov $0x3,%ecx
5e2b(3): mov %rbp,%rsi
5e2e(3): mov %rdx,%rdi
5e31(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5e33(3): setnbe %al
5e36(2): sbb $0x0,%al
5e38(2): test %al,%al
5e3a(6): jz 0xffffff46(%rip)
5e40(3): and $0x2,%bh
5e43(6): jnz 0x95(%rip)
5e49(3): mov %r15d,%edi
5e4c(5): call 0xffffbd04(%rip)
5e51(2): mov %eax,%ebx
5e53(5): jmp 0xffffff4c(%rip)
5e58(8): nop 0x0(%rax,%rax,1)
5e60(5): mov 0x10(%rsp),%rax
5e65(4): cmp %rax,0x78(%r14)
5e69(6): jz 0x97(%rip)
5e6f(5): call 0xffffba31(%rip)
5e74(6): mov $0x2,(%rax)
5e7a(5): jmp 0xffffff20(%rip)
5e7f(1): nop 
5e80(3): mov %r12d,%edi
5e83(2): xor %ebx,%ebx
5e85(5): call 0xffffbbab(%rip)
5e8a(5): jmp 0xffffff4b(%rip)
5e8f(1): nop 
5e90(4): lea 0x60(%r13),%r15
5e94(3): mov %r15,%rdi
5e97(5): call 0x3119(%rip)
5e9c(2): test %al,%al
5e9e(4): mov %al,0xf(%rsp)
5ea2(6): jnz 0xfffffeb2(%rip)
5ea8(3): mov %r15,%rdi
5eab(5): call 0x3155(%rip)
5eb0(2): test %eax,%eax
5eb2(3): mov %eax,%r15d
5eb5(4): mov 0x48(%r13),%ebx
5eb9(6): js 0xfffffe96(%rip)
5ebf(3): test $0x2,%bl
5ec2(3): mov %eax,%r12d
5ec5(5): mov $0x1,0xf(%rsp)
5eca(6): jz 0xffffff76(%rip)
5ed0(5): jmp 0xfffffeb0(%rip)
5ed5(3): nop (%rax)
5ed8(6): movzx 0xf(%rsp),%r14d
5ede(3): mov %r15d,%esi
5ee1(3): mov %r13,%rdi
5ee4(2): xor %ebx,%ebx
5ee6(4): xor $0x1,%r14d
5eea(4): movzx %r14b,%edx
5eee(5): call 0xfffffbf2(%rip)
5ef3(5): jmp 0xfffffee2(%rip)
5ef8(8): nop 0x0(%rax,%rax,1)
5f00(5): mov 0x18(%rsp),%rax
5f05(7): cmp %rax,0x80(%r14)
5f0c(6): jnz 0xffffff63(%rip)
5f12(4): mov 0x48(%r13),%ebx
5f16(5): jmp 0xffffff2a(%rip)
5f1b(5): mov $0xffffffff,%ebx
5f20(5): jmp 0xfffffeb5(%rip)
5f25(5): call 0xffffba7b(%rip)
5f2a(3): test $0x2,%bl
5f2d(3): mov %r12d,%r15d
5f30(5): mov $0x1,0xf(%rsp)
5f35(6): jz 0xfffffef1(%rip)
5f3b(5): jmp 0xfffffe45(%rip)
5f40(5): mov $0x0,0xf(%rsp)
5f45(5): jmp 0xfffffe0f(%rip)

"enter_dir.isra.10" :
5f50(6): and $0x102,%edi
5f56(2): push %r12
5f58(3): mov %rsi,%r12
5f5b(1): push %rbp
5f5c(1): push %rbx
5f5d(3): mov %rdx,%rbx
5f60(2): jz 0x70(%rip)
5f62(5): mov $0x18,%edi
5f67(5): call 0xffffbb99(%rip)
5f6c(3): test %rax,%rax
5f6f(3): mov %rax,%rbp
5f72(6): jz 0x86(%rip)
5f78(4): mov 0x78(%rbx),%rax
5f7c(4): mov (%r12),%rdi
5f80(3): mov %rbp,%rsi
5f83(4): mov %rbx,0x10(%rbp)
5f87(4): mov %rax,0x0(%rbp)
5f8b(7): mov 0x80(%rbx),%rax
5f92(4): mov %rax,0x8(%rbp)
5f96(5): call 0x2d8a(%rip)
5f9b(3): cmp %rax,%rbp
5f9e(3): mov %rax,%r12
5fa1(2): jz 0x20(%rip)
5fa3(3): mov %rbp,%rdi
5fa6(5): call 0xffffbcea(%rip)
5fab(3): test %r12,%r12
5fae(2): jz 0x4a(%rip)
5fb0(5): mov 0x10(%r12),%rax
5fb5(5): mov $0x2,%ecx
5fba(4): mov %cx,0x70(%rbx)
5fbe(3): mov %rax,(%rbx)
5fc1(1): pop %rbx
5fc2(5): mov $0x1,%eax
5fc7(1): pop %rbp
5fc8(2): pop %r12
5fca(1): ret near (%rsp)
5fcb(5): nop 0x0(%rax,%rax,1)
5fd0(4): mov (%r12),%rdi
5fd4(4): lea 0x78(%rdx),%rsi
5fd8(5): call 0x1b78(%rip)
5fdd(2): test %al,%al
5fdf(2): jz 0xffffffe2(%rip)
5fe1(5): mov $0x2,%edx
5fe6(3): mov %rbx,(%rbx)
5fe9(4): mov %dx,0x70(%rbx)
5fed(1): pop %rbx
5fee(1): pop %rbp
5fef(2): pop %r12
5ff1(1): ret near (%rsp)
5ff2(6): nop 0x0(%rax,%rax,1)
5ff8(1): pop %rbx
5ff9(2): xor %eax,%eax
5ffb(1): pop %rbp
5ffc(2): pop %r12
5ffe(1): ret near (%rsp)

"leave_dir.isra.12" :
6000(4): sub $0x28,%rsp
6004(3): mov %rsi,%rcx
6007(9): mov $0x28,%rax
6010(5): mov %rax,0x18(%rsp)
6015(2): xor %eax,%eax
6017(6): and $0x102,%edi
601d(2): jnz 0x43(%rip)
601f(4): mov 0x8(%rdx),%rax
6023(3): test %rax,%rax
6026(2): jz 0x1f(%rip)
6028(5): cmp $0x0,0x58(%rax)
602d(2): js 0x18(%rip)
602f(3): mov (%rsi),%rcx
6032(5): cmp $0x0,0x10(%rcx)
6037(2): jz 0x7c(%rip)
6039(7): mov 0x80(%rdx),%rsi
6040(3): cmp %rsi,(%rcx)
6043(2): jz 0x4d(%rip)
6045(5): mov 0x18(%rsp),%rax
604a(9): xor $0x28,%rax
6053(2): jnz 0x5b(%rip)
6055(4): add $0x28,%rsp
6059(1): ret near (%rsp)
605a(6): nop 0x0(%rax,%rax,1)
6060(4): mov 0x78(%rdx),%rax
6064(3): mov (%rcx),%rdi
6067(3): mov %rsp,%rsi
606a(4): mov %rax,(%rsp)
606e(7): mov 0x80(%rdx),%rax
6075(5): mov %rax,0x8(%rsp)
607a(5): call 0x2d06(%rip)
607f(3): test %rax,%rax
6082(2): jz 0x31(%rip)
6084(3): mov %rax,%rdi
6087(5): call 0xffffbc09(%rip)
608c(2): jmp 0xffffffb9(%rip)
608e(2): nop 
6090(4): mov 0x78(%rdx),%rsi
6094(4): cmp %rsi,0x8(%rcx)
6098(2): jnz 0xffffffad(%rip)
609a(4): mov 0x78(%rax),%rdx
609e(7): mov 0x80(%rax),%rax
60a5(4): mov %rdx,0x8(%rcx)
60a9(3): mov %rax,(%rcx)
60ac(2): jmp 0xffffff99(%rip)
60ae(5): call 0xffffb8f2(%rip)
60b3(5): call 0xffffb7dd(%rip)

"fts_build" :
60c0(2): push %r15
60c2(2): push %r14
60c4(3): mov %rdi,%r15
60c7(2): push %r13
60c9(2): push %r12
60cb(1): push %rbp
60cc(1): push %rbx
60cd(4): sub $0x78,%rsp
60d1(3): mov (%rdi),%rbp
60d4(9): mov $0x28,%rax
60dd(5): mov %rax,0x68(%rsp)
60e2(2): xor %eax,%eax
60e4(4): mov %esi,0x58(%rsp)
60e8(4): mov 0x18(%rbp),%rax
60ec(3): test %rax,%rax
60ef(5): mov %rax,0x50(%rsp)
60f4(6): jz 0x43c(%rip)
60fa(3): mov %rax,%rdi
60fd(5): call 0xffffb9b3(%rip)
6102(2): test %eax,%eax
6104(4): mov %eax,0x64(%rsp)
6108(6): js 0x558(%rip)
610e(5): cmp $0x0,0x40(%r15)
6113(6): jz 0x7d5(%rip)
6119(9): mov $0xffffffff,0x38(%rsp)
6122(4): mov 0x48(%r15),%edi
6126(5): mov $0x1,0x5f(%rsp)
612b(4): mov 0x48(%rbp),%rcx
612f(4): mov 0x38(%rbp),%rdx
6133(9): mov $0x0,0x40(%rsp)
613c(5): cmp $0x2f,0xffffffff(%rdx,%rcx,1)
6141(4): lea 0xffffffff(%rcx),%rax
6145(4): cmovne %rcx,%rax
6149(3): and $0x4,%edi
614c(5): mov %rax,0x48(%rsp)
6151(2): jz 0x12(%rip)
6153(4): add 0x20(%r15),%rax
6157(4): lea 0x1(%rax),%rbx
615b(3): mov $0x2f,(%rax)
615e(5): mov %rbx,0x40(%rsp)
6163(5): mov 0x48(%rsp),%rax
6168(4): mov 0x30(%r15),%rbx
616c(5): mov $0x0,0x5e(%rsp)
6171(5): mov $0x0,0x5d(%rsp)
6176(9): mov $0x0,0x8(%rsp)
617f(9): mov $0x0,0x10(%rsp)
6188(4): add $0x1,%rax
618c(5): mov %rbp,0x20(%rsp)
6191(3): sub %rax,%rbx
6194(5): mov %rax,0x18(%rsp)
6199(4): mov 0x58(%rbp),%rax
619d(5): mov %rbx,0x28(%rsp)
61a2(2): xor %ebx,%ebx
61a4(4): add $0x1,%rax
61a8(5): mov %rax,0x30(%rsp)
61ad(5): jmp 0xe2(%rip)
61b2(6): nop 0x0(%rax,%rax,1)
61b8(3): mov %r14,%r9
61bb(5): add 0x18(%rsp),%r9
61c0(6): jb 0x860(%rip)
61c6(5): mov 0x30(%rsp),%rax
61cb(7): lea 0x108(%r13),%rsi
61d2(4): mov %rax,0x58(%r13)
61d6(3): mov (%r15),%rax
61d9(4): mov %r9,0x48(%r13)
61dd(4): mov %rax,0x8(%r13)
61e1(4): mov 0x0(%rbp),%rax
61e5(7): mov %rax,0x80(%r13)
61ec(4): mov 0x48(%r15),%eax
61f0(2): test $0x4,%al
61f2(6): jnz 0x26e(%rip)
61f8(4): mov %rsi,0x30(%r13)
61fc(5): cmp $0x0,0x40(%r15)
6201(2): jz 0xb(%rip)
6203(3): test $0x4,%ah
6206(6): jz 0x302(%rip)
620c(4): movzx 0x12(%rbp),%edx
6210(3): and $0x18,%eax
6213(2): mov %edx,%esi
6215(3): sub $0x1,%edx
6218(3): cmp $0x18,%eax
621b(6): jz 0x2b5(%rip)
6221(5): mov $0xb,%ecx
6226(3): cmp $0xb,%edx
6229(5): mov %cx,0x70(%r13)
622e(6): jnbe 0x26a(%rip)
6234(7): lea 0x4f25(%rip),%rax
623b(3): mov 0x0(%rax,%rdx,4),%eax
623e(7): mov %eax,0x90(%r13)
6245(5): mov $0x2,%eax
624a(7): mov %rax,0xa8(%r13)
6251(6): cmp $0x0,0x10(%rsp)
6257(8): mov $0x0,0x10(%r13)
625f(6): jz 0x229(%rip)
6265(5): mov 0x8(%rsp),%rax
626a(4): mov %r13,0x10(%rax)
626e(7): cmp $0x2710,%rbx
6275(6): jz 0xfb(%rip)
627b(4): add $0x1,%rbx
627f(5): cmp 0x38(%rsp),%rbx
6284(6): jnb 0x144(%rip)
628a(5): mov %r13,0x8(%rsp)
628f(5): mov 0x20(%rsp),%rax
6294(4): mov 0x18(%rax),%r13
6298(3): test %r13,%r13
629b(6): jz 0x4cd(%rip)
62a1(5): call 0xffffb5ff(%rip)
62a6(3): mov %r13,%rdi
62a9(6): mov $0x0,(%rax)
62af(3): mov %rax,%r12
62b2(5): call 0xffffb83e(%rip)
62b7(3): test %rax,%rax
62ba(3): mov %rax,%rbp
62bd(6): jz 0x583(%rip)
62c3(5): test $0x20,0x48(%r15)
62c8(2): jnz 0xc(%rip)
62ca(4): cmp $0x2e,0x13(%rax)
62ce(6): jz 0x1e2(%rip)
62d4(4): lea 0x13(%rbp),%r13
62d8(3): mov %r13,%rdi
62db(5): call 0xffffb685(%rip)
62e0(3): mov %r13,%rsi
62e3(3): mov %rax,%rdx
62e6(3): mov %r15,%rdi
62e9(3): mov %rax,%r14
62ec(5): call 0xfffff534(%rip)
62f1(3): test %rax,%rax
62f4(3): mov %rax,%r13
62f7(6): jz 0x419(%rip)
62fd(5): cmp %r14,0x28(%rsp)
6302(6): jnbe 0xfffffeb6(%rip)
6308(4): mov 0x20(%r15),%rax
630c(4): lea 0x30(%r15),%rsi
6310(4): lea 0x20(%r15),%rdi
6314(5): mov %rax,0x28(%rsp)
6319(5): mov 0x48(%rsp),%rax
631e(5): lea 0x2(%rax,%r14,1),%rdx
6323(5): call 0xfffff88d(%rip)
6328(2): test %al,%al
632a(6): jz 0x3e6(%rip)
6330(4): mov 0x20(%r15),%rdx
6334(5): cmp 0x28(%rsp),%rdx
6339(6): jz 0x1e7(%rip)
633f(5): add 0x18(%rsp),%rdx
6344(5): test $0x4,0x48(%r15)
6349(6): cmove 0x40(%rsp),%rdx
634f(5): mov %rdx,0x40(%rsp)
6354(4): mov 0x30(%r15),%rcx
6358(5): sub 0x18(%rsp),%rcx
635d(4): mov %al,0x5d(%rsp)
6361(5): mov %rcx,0x28(%rsp)
6366(5): jmp 0xfffffe52(%rip)
636b(5): nop 0x0(%rax,%rax,1)
6370(5): cmp $0x0,0x40(%r15)
6375(6): jnz 0xffffff06(%rip)
637b(4): mov 0x64(%rsp),%esi
637f(5): mov 0x20(%rsp),%rdi
6384(5): call 0xfffff5bc(%rip)
6389(6): cmp $0x1021994,%rax
638f(6): jz 0x371(%rip)
6395(5): mov $0xff534d42,%ecx
639a(3): cmp %rcx,%rax
639d(6): jz 0x363(%rip)
63a3(6): cmp $0x6969,%rax
63a9(6): jz 0x357(%rip)
63af(4): add $0x1,%rbx
63b3(5): cmp 0x38(%rsp),%rbx
63b8(5): mov $0x1,0x5e(%rsp)
63bd(6): jb 0xfffffecd(%rip)
63c3(5): nop 0x0(%rax,%rax,1)
63c8(5): cmp $0x0,0x5d(%rsp)
63cd(5): mov 0x20(%rsp),%rbp
63d2(6): jz 0x3a4(%rip)
63d8(4): mov 0x8(%r15),%rax
63dc(4): mov 0x20(%r15),%rcx
63e0(3): test %rax,%rax
63e3(2): jz 0x2d(%rip)
63e5(3): nop (%rax)
63e8(4): mov 0x30(%rax),%rdx
63ec(7): lea 0x108(%rax),%rsi
63f3(3): cmp %rsi,%rdx
63f6(2): jz 0xd(%rip)
63f8(4): sub 0x38(%rax),%rdx
63fc(3): add %rcx,%rdx
63ff(4): mov %rdx,0x30(%rax)
6403(4): mov %rcx,0x38(%rax)
6407(4): mov 0x10(%rax),%rax
640b(3): test %rax,%rax
640e(2): jnz 0xffffffda(%rip)
6410(5): mov 0x10(%rsp),%rax
6415(2): jmp 0xe(%rip)
6417(9): nop 0x0(%rax,%rax,1)
6420(3): mov %rdx,%rax
6423(5): cmp $0x0,0x58(%rax)
6428(6): js 0x34e(%rip)
642e(4): mov 0x30(%rax),%rdx
6432(7): lea 0x108(%rax),%rsi
6439(3): cmp %rsi,%rdx
643c(2): jz 0xd(%rip)
643e(4): sub 0x38(%rax),%rdx
6442(3): add %rcx,%rdx
6445(4): mov %rdx,0x30(%rax)
6449(4): mov 0x10(%rax),%rdx
644d(4): mov %rcx,0x38(%rax)
6451(3): test %rdx,%rdx
6454(2): jnz 0xffffffcc(%rip)
6456(4): mov 0x8(%rax),%rdx
645a(2): jmp 0xffffffc6(%rip)
645c(4): nop 0x0(%rax)
6460(4): mov 0x38(%r13),%rax
6464(5): mov 0x40(%rsp),%rdi
6469(4): mov %rax,0x30(%r13)
646d(4): mov 0x60(%r13),%rax
6471(4): lea 0x1(%rax),%rdx
6475(5): call 0xffffb71b(%rip)
647a(4): mov 0x48(%r15),%eax
647e(5): jmp 0xfffffd7e(%rip)
6483(5): nop 0x0(%rax,%rax,1)
6488(5): mov %r13,0x10(%rsp)
648d(5): jmp 0xfffffde1(%rip)
6492(6): nop 0x0(%rax,%rax,1)
6498(b): mov $0x0,0x90(%r13)
64a3(5): mov $0x2,%eax
64a8(5): jmp 0xfffffda2(%rip)
64ad(3): nop (%rax)
64b0(4): cmp $0x0,0x14(%rax)
64b4(2): jz 0xd(%rip)
64b6(5): cmp $0x2e,0x14(%rax)
64bb(6): jnz 0xfffffe19(%rip)
64c1(5): mov 0x8(%rsp),%r13
64c6(5): jmp 0xfffffdc4(%rip)
64cb(5): nop 0x0(%rax,%rax,1)
64d0(6): and $0xfb,%esi
64d6(6): jz 0xfffffd4b(%rip)
64dc(5): mov $0xb,%eax
64e1(3): cmp $0xb,%edx
64e4(5): mov %ax,0x70(%r13)
64e9(6): jbe 0x58d(%rip)
64ef(b): mov $0x0,0x90(%r13)
64fa(5): mov $0x1,%eax
64ff(5): jmp 0xfffffd4b(%rip)
6504(4): nop 0x0(%rax)
6508(2): xor %edx,%edx
650a(3): mov %r13,%rsi
650d(3): mov %r15,%rdi
6510(5): call 0xfffff030(%rip)
6515(5): mov %ax,0x70(%r13)
651a(5): jmp 0xfffffd37(%rip)
651f(1): nop 
6520(5): movzx 0x5d(%rsp),%eax
6525(5): jmp 0xfffffe2f(%rip)
652a(6): nop 0x0(%rax,%rax,1)
6530(3): mov 0x48(%rdi),%eax
6533(2): mov %eax,%edx
6535(3): and $0x10,%edx
6538(2): jz 0xf(%rip)
653a(2): test $0x1,%al
653c(5): mov $0x20000,%edx
6541(6): jnz 0x107(%rip)
6547(5): and $0x204,%eax
654c(4): mov 0x30(%rbp),%rsi
6550(5): mov $0xffffff9c,%edi
6555(5): cmp $0x200,%eax
655a(2): jnz 0x6(%rip)
655c(4): mov 0x2c(%r15),%edi
6560(5): lea 0x64(%rsp),%rcx
6565(5): call 0x2beb(%rip)
656a(3): test %rax,%rax
656d(4): mov %rax,0x18(%rbp)
6571(6): jz 0x31f(%rip)
6577(5): cmp $0xb,0x70(%rbp)
657c(6): jz 0x394(%rip)
6582(4): mov 0x48(%r15),%edi
6586(6): test $0x100,%edi
658c(6): jnz 0x124(%rip)
6592(5): cmp $0x1,0x40(%r15)
6597(3): sbb %rax,%rax
659a(5): and $0x186a1,%eax
659f(4): sub $0x1,%rax
65a3(5): cmp $0x2,0x58(%rsp)
65a8(5): mov %rax,0x38(%rsp)
65ad(6): jz 0x353(%rip)
65b3(4): mov 0x48(%r15),%edx
65b7(4): mov 0x64(%rsp),%eax
65bb(3): and $0x38,%edx
65be(3): cmp $0x18,%edx
65c1(6): jz 0x3a3(%rip)
65c7(5): cmp $0x3,0x58(%rsp)
65cc(6): mov $0x1,%r12d
65d2(3): setz %bl
65d5(5): test $0x2,0x49(%r15)
65da(6): jnz 0x3e2(%rip)
65e0(2): test %eax,%eax
65e2(6): jns 0x366(%rip)
65e8(2): test %bl,%bl
65ea(2): jz 0x11(%rip)
65ec(3): test %r12b,%r12b
65ef(2): jz 0xc(%rip)
65f1(5): call 0xffffb2af(%rip)
65f6(2): mov (%rax),%eax
65f8(3): mov %eax,0x40(%rbp)
65fb(5): or $0x1,0x72(%rbp)
6600(4): mov 0x18(%rbp),%rdi
6604(5): call 0xffffb44c(%rip)
6609(4): mov 0x48(%r15),%edi
660d(8): mov $0x0,0x18(%rbp)
6615(6): test $0x200,%edi
661b(2): jz 0x15(%rip)
661d(4): mov 0x64(%rsp),%eax
6621(2): test %eax,%eax
6623(2): js 0xd(%rip)
6625(2): mov %eax,%edi
6627(5): call 0xffffb409(%rip)
662c(4): mov 0x48(%r15),%edi
6630(8): mov $0x0,0x18(%rbp)
6638(5): mov $0x0,0x5f(%rsp)
663d(5): jmp 0xfffffaee(%rip)
6642(6): nop 0x0(%rax,%rax,1)
6648(2): xor %edx,%edx
664a(5): cmp $0x0,0x58(%rbp)
664f(3): setnz %dl
6652(3): shl/sal $0x11,%edx
6655(5): jmp 0xfffffef2(%rip)
665a(6): nop 0x0(%rax,%rax,1)
6660(4): mov 0x18(%rbp),%rdi
6664(5): call 0xffffb3ec(%rip)
6669(5): cmp $0x3,0x58(%rsp)
666e(8): mov $0x0,0x18(%rbp)
6676(6): jz 0x225(%rip)
667c(9): mov $0x0,0x10(%rsp)
6685(5): mov 0x68(%rsp),%rbx
668a(9): xor $0x28,%rbx
6693(5): mov 0x10(%rsp),%rax
6698(6): jnz 0x3d9(%rip)
669e(4): add $0x78,%rsp
66a2(1): pop %rbx
66a3(1): pop %rbp
66a4(2): pop %r12
66a6(2): pop %r13
66a8(2): pop %r14
66aa(2): pop %r15
66ac(1): ret near (%rsp)
66ad(3): nop (%rax)
66b0(4): lea 0x58(%r15),%rbx
66b4(3): mov %rbp,%rdx
66b7(3): mov %rbx,%rsi
66ba(5): call 0xfffff946(%rip)
66bf(2): xor %edx,%edx
66c1(3): mov %rbp,%rsi
66c4(3): mov %r15,%rdi
66c7(5): call 0xffffee79(%rip)
66cc(4): mov 0x48(%r15),%edi
66d0(3): mov %rbp,%rdx
66d3(3): mov %rbx,%rsi
66d6(5): call 0xfffff87a(%rip)
66db(2): test %al,%al
66dd(6): jnz 0xfffffeb5(%rip)
66e3(5): call 0xffffb1bd(%rip)
66e8(9): mov $0x0,0x10(%rsp)
66f1(6): mov $0xc,(%rax)
66f7(2): jmp 0xffffff8e(%rip)
66f9(7): nop 0x0(%rax)
6700(5): mov $0x0,0x5e(%rsp)
6705(5): jmp 0xfffffb76(%rip)
670a(6): nop 0x0(%rax,%rax,1)
6710(3): mov %r13,%rdi
6713(5): mov 0x20(%rsp),%rbp
6718(4): mov (%r12),%ebx
671c(5): call 0xffffb574(%rip)
6721(5): mov 0x10(%rsp),%rdi
6726(5): call 0xfffff18a(%rip)
672b(4): mov 0x18(%rbp),%rdi
672f(5): call 0xffffb321(%rip)
6734(6): mov $0x7,%r9d
673a(8): mov $0x0,0x18(%rbp)
6742(9): mov $0x0,0x10(%rsp)
674b(5): mov %r9w,0x70(%rbp)
6750(8): or $0x2000,0x48(%r15)
6758(4): mov %ebx,(%r12)
675c(5): jmp 0xffffff29(%rip)
6761(7): nop 0x0(%rax)
6768(3): mov %rax,%rbp
676b(5): cmp $0x0,0x5d(%rsp)
6770(6): jnz 0xfffffc68(%rip)
6776(5): test $0x4,0x48(%r15)
677b(2): jz 0x20(%rip)
677d(5): mov 0x18(%rsp),%rax
6782(4): cmp %rax,0x30(%r15)
6786(2): jz 0x7(%rip)
6788(3): test %rbx,%rbx
678b(2): jnz 0x8(%rip)
678d(6): sub $0x1,0x40(%rsp)
6793(5): mov 0x40(%rsp),%rax
6798(3): mov $0x0,(%rax)
679b(6): cmp $0x0,0x50(%rsp)
67a1(2): jnz 0x6f(%rip)
67a3(5): cmp $0x0,0x5f(%rsp)
67a8(2): jz 0x68(%rip)
67aa(5): cmp $0x1,0x58(%rsp)
67af(2): jz 0x41(%rip)
67b1(3): test %rbx,%rbx
67b4(2): jz 0x3c(%rip)
67b6(5): cmp $0x0,0x5e(%rsp)
67bb(6): jnz 0xfd(%rip)
67c1(5): cmp $0x0,0x40(%r15)
67c6(6): jz 0xfffffebf(%rip)
67cc(4): cmp $0x1,%rbx
67d0(6): jz 0xfffffeb5(%rip)
67d6(5): mov 0x10(%rsp),%rsi
67db(3): mov %rbx,%rdx
67de(3): mov %r15,%rdi
67e1(5): call 0xffffef2f(%rip)
67e6(5): mov %rax,0x10(%rsp)
67eb(5): jmp 0xfffffe9a(%rip)
67f0(5): cmp $0x0,0x58(%rbp)
67f5(6): jnz 0x131(%rip)
67fb(3): mov %r15,%rdi
67fe(5): call 0xfffff352(%rip)
6803(2): test %eax,%eax
6805(3): setnz %al
6808(2): test %al,%al
680a(6): jnz 0x189(%rip)
6810(3): test %rbx,%rbx
6813(2): jnz 0xffffffa3(%rip)
6815(5): cmp $0x3,0x58(%rsp)
681a(6): jz 0x1be(%rip)
6820(5): mov 0x10(%rsp),%rdi
6825(5): call 0xfffff08b(%rip)
682a(9): mov $0x0,0x10(%rsp)
6833(5): jmp 0xfffffe52(%rip)
6838(8): nop 0x0(%rax,%rax,1)
6840(4): mov (%r12),%eax
6844(5): mov 0x20(%rsp),%rbp
6849(2): test %eax,%eax
684b(2): jz 0x23(%rip)
684d(3): test %rbx,%rbx
6850(3): mov %eax,0x40(%rbp)
6853(6): jnz 0x136(%rip)
6859(6): cmp $0x0,0x50(%rsp)
685f(5): mov $0x4,%eax
6864(6): jnz 0x125(%rip)
686a(4): mov %ax,0x70(%rbp)
686e(4): mov 0x18(%rbp),%rdi
6872(3): test %rdi,%rdi
6875(6): jz 0xfffffef6(%rip)
687b(5): call 0xffffb1d5(%rip)
6880(8): mov $0x0,0x18(%rbp)
6888(5): jmp 0xfffffee3(%rip)
688d(3): nop (%rax)
6890(5): cmp $0x3,0x58(%rsp)
6895(6): jnz 0xfffffde7(%rip)
689b(6): mov $0x4,%r10d
68a1(5): mov %r10w,0x70(%rbp)
68a6(5): call 0xffffaffa(%rip)
68ab(2): mov (%rax),%eax
68ad(3): mov %eax,0x40(%rbp)
68b0(5): jmp 0xfffffdcc(%rip)
68b5(3): nop (%rax)
68b8(7): lea 0xffffec51(%rip),%rax
68bf(5): mov 0x10(%rsp),%rsi
68c4(3): mov %rbx,%rdx
68c7(3): mov %r15,%rdi
68ca(4): mov %rax,0x40(%r15)
68ce(5): call 0xffffee42(%rip)
68d3(8): mov $0x0,0x40(%r15)
68db(5): mov %rax,0x10(%rsp)
68e0(5): jmp 0xfffffda5(%rip)
68e5(3): nop (%rax)
68e8(9): mov $0x186a0,0x38(%rsp)
68f1(5): mov $0x1,0x5f(%rsp)
68f6(4): mov 0x48(%r15),%edi
68fa(5): jmp 0xfffff831(%rip)
68ff(1): nop 
6900(5): mov $0x0,0x5f(%rsp)
6905(4): mov 0x48(%r15),%edi
6909(5): jmp 0xfffff822(%rip)
690e(2): nop 
6910(2): xor %edx,%edx
6912(3): mov %rbp,%rsi
6915(3): mov %r15,%rdi
6918(5): call 0xffffec28(%rip)
691d(4): mov %ax,0x70(%rbp)
6921(5): jmp 0xfffffc71(%rip)
6926(4): mov 0x8(%rbp),%rsi
692a(7): lea 0x4829(%rip),%rcx
6931(5): mov $0xffffffff,%edx
6936(3): mov %r15,%rdi
6939(5): call 0xfffff397(%rip)
693e(2): test %eax,%eax
6940(3): setnz %al
6943(5): jmp 0xfffffec5(%rip)
6948(2): xor %ecx,%ecx
694a(2): mov %eax,%edx
694c(3): mov %rbp,%rsi
694f(3): mov %r15,%rdi
6952(5): call 0xfffff37e(%rip)
6957(2): test %eax,%eax
6959(6): jnz 0xfffffc8f(%rip)
695f(5): jmp 0xfffff7c3(%rip)
6964(8): cmp $0x2,0x88(%rbp)
696c(6): jnz 0xfffffc5b(%rip)
6972(2): mov %eax,%esi
6974(3): mov %rbp,%rdi
6977(5): call 0xfffff0f9(%rip)
697c(2): test %eax,%eax
697e(2): jnz 0x80(%rip)
6980(4): mov 0x64(%rsp),%eax
6984(5): jmp 0xfffffc43(%rip)
6989(5): mov $0x7,%eax
698e(5): jmp 0xfffffedc(%rip)
6993(5): mov $0x7,%edi
6998(4): mov %di,0x70(%rbp)
699c(8): or $0x2000,0x48(%r15)
69a4(5): mov 0x10(%rsp),%rdi
69a9(5): call 0xffffef07(%rip)
69ae(9): mov $0x0,0x10(%rsp)
69b7(5): jmp 0xfffffcce(%rip)
69bc(2): mov %eax,%edi
69be(5): mov $0x3,%edx
69c3(5): mov $0x406,%esi
69c8(2): xor %eax,%eax
69ca(5): call 0x2cc6(%rip)
69cf(4): mov %eax,0x64(%rsp)
69d3(5): jmp 0xfffffc0d(%rip)
69d8(4): movzx 0x70(%rbp),%eax
69dc(4): cmp $0x7,%ax
69e0(6): jz 0xfffffe40(%rip)
69e6(4): cmp $0x4,%ax
69ea(6): jz 0xfffffe36(%rip)
69f0(5): mov $0x6,%esi
69f5(4): mov %si,0x70(%rbp)
69f9(5): jmp 0xfffffe27(%rip)
69fe(5): cmp $0x3,0x58(%rsp)
6a03(6): jnz 0xfffffefd(%rip)
6a09(4): mov 0x64(%rsp),%eax
6a0d(3): xor %r12d,%r12d
6a10(5): mov $0x1,%ebx
6a15(5): jmp 0xfffffbc0(%rip)
6a1a(6): nop 0x0(%rax,%rax,1)
6a20(3): mov %r13,%rdi
6a23(5): mov 0x20(%rsp),%rbp
6a28(5): call 0xffffb268(%rip)
6a2d(5): mov 0x10(%rsp),%rdi
6a32(5): call 0xffffee7e(%rip)
6a37(4): mov 0x18(%rbp),%rdi
6a3b(5): call 0xffffb015(%rip)
6a40(6): mov $0x7,%r8d
6a46(8): mov $0x0,0x18(%rbp)
6a4e(9): mov $0x0,0x10(%rsp)
6a57(5): mov %r8w,0x70(%rbp)
6a5c(8): or $0x2000,0x48(%r15)
6a64(8): mov $0x24,(%r12)
6a6c(5): jmp 0xfffffc19(%rip)
6a71(5): call 0xffffaf2f(%rip)
6a76(7): lea 0x46e3(%rip),%rax
6a7d(3): mov 0x0(%rax,%rdx,4),%eax
6a80(7): mov %eax,0x90(%r13)
6a87(5): mov $0x1,%eax
6a8c(5): jmp 0xfffff7be(%rip)

"rpl_fts_open" :
6aa0(2): push %r15
6aa2(2): push %r14
6aa4(2): push %r13
6aa6(2): push %r12
6aa8(1): push %rbp
6aa9(1): push %rbx
6aaa(4): sub $0x28,%rsp
6aae(6): test $0xfffff000,%esi
6ab4(6): jnz 0x384(%rip)
6aba(2): mov %esi,%eax
6abc(2): mov %esi,%ebp
6abe(5): and $0x204,%eax
6ac3(5): cmp $0x204,%eax
6ac8(6): jz 0x370(%rip)
6ace(4): test $0x12,%sil
6ad2(6): jz 0x366(%rip)
6ad8(3): mov %rdi,%r13
6adb(5): mov $0x1,%esi
6ae0(5): mov $0x80,%edi
6ae5(3): mov %rdx,%r14
6ae8(5): call 0xffffafa8(%rip)
6aed(3): test %rax,%rax
6af0(3): mov %rax,%rbx
6af3(6): jz 0x25b(%rip)
6af9(4): test $0x2,%bpl
6afd(4): mov %r14,0x40(%rax)
6b01(6): jnz 0x25f(%rip)
6b07(4): mov 0x0(%r13),%rdi
6b0b(3): mov %ebp,0x48(%rax)
6b0e(7): mov $0xffffff9c,0x2c(%rbx)
6b15(3): test %rdi,%rdi
6b18(6): jz 0x267(%rip)
6b1e(3): mov %r13,%r15
6b21(3): xor %r12d,%r12d
6b24(4): nop 0x0(%rax)
6b28(5): call 0xffffae38(%rip)
6b2d(3): cmp %rax,%r12
6b30(4): cmovnae %rax,%r12
6b34(4): add $0x8,%r15
6b38(3): mov (%r15),%rdi
6b3b(3): test %rdi,%rdi
6b3e(2): jnz 0xffffffea(%rip)
6b40(5): lea 0x1(%r12),%rdx
6b45(5): mov $0x1000,%eax
6b4a(7): cmp $0x1000,%rdx
6b51(4): cmovnae %rax,%rdx
6b55(4): lea 0x30(%rbx),%rsi
6b59(4): lea 0x20(%rbx),%rdi
6b5d(5): call 0xfffff053(%rip)
6b62(2): test %al,%al
6b64(4): mov %al,0x16(%rsp)
6b68(6): jz 0x2a1(%rip)
6b6e(4): mov 0x0(%r13),%rsi
6b72(3): test %rsi,%rsi
6b75(6): jz 0x2ab(%rip)
6b7b(7): lea 0x427f(%rip),%rsi
6b82(2): xor %edx,%edx
6b84(3): mov %rbx,%rdi
6b87(5): call 0xffffec99(%rip)
6b8c(3): test %rax,%rax
6b8f(3): mov %rax,%r15
6b92(6): jz 0x26e(%rip)
6b98(7): mov $0xffffffff,%rax
6b9f(3): test %r14,%r14
6ba2(4): mov 0x0(%r13),%rsi
6ba6(4): mov %rax,0x58(%r15)
6baa(4): mov %rax,0x68(%r15)
6bae(2): jz 0xf(%rip)
6bb0(3): mov 0x48(%rbx),%eax
6bb3(3): shr $0xa,%eax
6bb6(3): and $0x1,%eax
6bb9(4): mov %al,0x16(%rsp)
6bbd(3): test %rsi,%rsi
6bc0(6): jz 0x26c(%rip)
6bc6(3): shr $0xb,%ebp
6bc9(9): mov $0x0,0x18(%rsp)
6bd2(3): xor %r12d,%r12d
6bd5(3): xor $0x1,%ebp
6bd8(2): mov %ebp,%eax
6bda(2): xor %ebp,%ebp
6bdc(3): and $0x1,%eax
6bdf(4): mov %al,0x17(%rsp)
6be3(2): jmp 0x79(%rip)
6be5(3): nop (%rax)
6be8(3): mov %rax,%rdx
6beb(3): mov %rbx,%rdi
6bee(5): call 0xffffec32(%rip)
6bf3(3): test %rax,%rax
6bf6(3): mov %rax,%rcx
6bf9(6): jz 0x1f7(%rip)
6bff(8): mov $0x0,0x58(%rax)
6c07(4): mov %r15,0x8(%rax)
6c0b(7): lea 0x108(%rax),%rax
6c12(3): test %r12,%r12
6c15(4): mov %rax,0x30(%rcx)
6c19(6): jz 0x177(%rip)
6c1f(5): cmp $0x0,0x16(%rsp)
6c24(6): jz 0x16c(%rip)
6c2a(5): mov $0xb,%esi
6c2f(3): test %r14,%r14
6c32(b): mov $0x2,0xa8(%rcx)
6c3d(4): mov %si,0x70(%rcx)
6c41(6): jz 0x18f(%rip)
6c47(4): mov %r12,0x10(%rcx)
6c4b(3): mov %rcx,%r12
6c4e(4): add $0x1,%rbp
6c52(5): mov 0x0(%r13,%rbp,8),%rsi
6c57(3): test %rsi,%rsi
6c5a(2): jz 0x56(%rip)
6c5c(3): mov %rsi,%rdi
6c5f(5): mov %rsi,0x8(%rsp)
6c64(5): call 0xffffacfc(%rip)
6c69(4): cmp $0x2,%rax
6c6d(5): mov 0x8(%rsp),%rsi
6c72(6): jbe 0xffffff76(%rip)
6c78(5): cmp $0x0,0x17(%rsp)
6c7d(6): jz 0xffffff6b(%rip)
6c83(5): cmp $0x2f,0xffffffff(%rsi,%rax,1)
6c88(6): jnz 0xffffff60(%rip)
6c8e(2): nop 
6c90(5): cmp $0x2f,0xfffffffe(%rsi,%rax,1)
6c95(6): jnz 0xffffff53(%rip)
6c9b(4): sub $0x1,%rax
6c9f(4): cmp $0x1,%rax
6ca3(2): jnz 0xffffffed(%rip)
6ca5(5): jmp 0xffffff43(%rip)
6caa(6): nop 0x0(%rax,%rax,1)
6cb0(3): test %r14,%r14
6cb3(2): jz 0x19(%rip)
6cb5(4): cmp $0x1,%rbp
6cb9(2): jbe 0x13(%rip)
6cbb(3): mov %r12,%rsi
6cbe(3): mov %rbp,%rdx
6cc1(3): mov %rbx,%rdi
6cc4(5): call 0xffffea4c(%rip)
6cc9(3): mov %rax,%r12
6ccc(7): lea 0x412e(%rip),%rsi
6cd3(2): xor %edx,%edx
6cd5(3): mov %rbx,%rdi
6cd8(5): call 0xffffeb48(%rip)
6cdd(3): test %rax,%rax
6ce0(3): mov %rax,(%rbx)
6ce3(6): jz 0x10d(%rip)
6ce9(3): mov 0x48(%rbx),%edi
6cec(5): mov $0x9,%edx
6cf1(4): lea 0x58(%rbx),%rsi
6cf5(4): mov %r12,0x10(%rax)
6cf9(4): mov %dx,0x70(%rax)
6cfd(8): mov $0x1,0x58(%rax)
6d05(5): call 0xffffef1b(%rip)
6d0a(2): test %al,%al
6d0c(6): jz 0xe4(%rip)
6d12(3): mov 0x48(%rbx),%esi
6d15(6): test $0x204,%esi
6d1b(2): jnz 0x25(%rip)
6d1d(3): mov 0x2c(%rbx),%edi
6d20(7): lea 0x4434(%rip),%rdx
6d27(5): call 0xffffef69(%rip)
6d2c(2): test %eax,%eax
6d2e(3): mov %eax,0x28(%rbx)
6d31(2): jns 0xf(%rip)
6d33(4): or $0x4,0x48(%rbx)
6d37(9): nop 0x0(%rax,%rax,1)
6d40(4): lea 0x60(%rbx),%rdi
6d44(5): mov $0xffffffff,%esi
6d49(5): call 0x2247(%rip)
6d4e(4): add $0x28,%rsp
6d52(3): mov %rbx,%rax
6d55(1): pop %rbx
6d56(1): pop %rbp
6d57(2): pop %r12
6d59(2): pop %r13
6d5b(2): pop %r14
6d5d(2): pop %r15
6d5f(1): ret near (%rsp)
6d60(4): mov 0x0(%r13),%rdi
6d64(2): mov %ebp,%eax
6d66(7): mov $0xffffff9c,0x2c(%rbx)
6d6d(3): and $0xfd,%ah
6d70(3): or $0x4,%eax
6d73(3): test %rdi,%rdi
6d76(3): mov %eax,0x48(%rbx)
6d79(6): jnz 0xfffffda5(%rip)
6d7f(5): mov $0x1000,%edx
6d84(5): jmp 0xfffffdd1(%rip)
6d89(7): nop 0x0(%rax)
6d90(2): xor %edx,%edx
6d92(3): mov %rcx,%rsi
6d95(3): mov %rbx,%rdi
6d98(5): mov %rcx,0x8(%rsp)
6d9d(5): call 0xffffe7a3(%rip)
6da2(5): mov 0x8(%rsp),%rcx
6da7(3): test %r14,%r14
6daa(4): mov %ax,0x70(%rcx)
6dae(6): jnz 0xfffffe99(%rip)
6db4(3): test %r12,%r12
6db7(8): mov $0x0,0x10(%rcx)
6dbf(2): jnz 0x19(%rip)
6dc1(5): mov %rcx,0x18(%rsp)
6dc6(3): mov %rcx,%r12
6dc9(5): jmp 0xfffffe85(%rip)
6dce(2): nop 
6dd0(8): mov $0x0,0x10(%rcx)
6dd8(5): mov 0x18(%rsp),%rax
6ddd(5): mov %rcx,0x18(%rsp)
6de2(4): mov %rcx,0x10(%rax)
6de6(5): jmp 0xfffffe68(%rip)
6deb(5): nop 0x0(%rax,%rax,1)
6df0(3): mov %r12,%rdi
6df3(5): call 0xffffeabd(%rip)
6df8(3): mov %r15,%rdi
6dfb(5): call 0xffffae95(%rip)
6e00(4): mov 0x20(%rbx),%rdi
6e04(5): call 0xffffae8c(%rip)
6e09(3): mov %rbx,%rdi
6e0c(2): xor %ebx,%ebx
6e0e(5): call 0xffffae82(%rip)
6e13(5): jmp 0xffffff3b(%rip)
6e18(8): nop 0x0(%rax,%rax,1)
6e20(3): xor %r15d,%r15d
6e23(3): test %r14,%r14
6e26(6): jnz 0xfffffd8a(%rip)
6e2c(3): xor %r12d,%r12d
6e2f(5): jmp 0xfffffe9d(%rip)
6e34(4): nop 0x0(%rax)
6e38(5): call 0xffffaa68(%rip)
6e3d(2): xor %ebx,%ebx
6e3f(6): mov $0x16,(%rax)
6e45(5): jmp 0xffffff09(%rip)

"rpl_fts_close" :
6e50(2): push %r12
6e52(1): push %rbp
6e53(3): mov %rdi,%rbp
6e56(1): push %rbx
6e57(3): mov (%rdi),%rdi
6e5a(3): test %rdi,%rdi
6e5d(2): jz 0x46(%rip)
6e5f(5): cmp $0x0,0x58(%rdi)
6e64(2): jns 0x1b(%rip)
6e66(5): jmp 0x11a(%rip)
6e6b(5): nop 0x0(%rax,%rax,1)
6e70(5): call 0xffffae20(%rip)
6e75(5): cmp $0x0,0x58(%rbx)
6e7a(3): mov %rbx,%rdi
6e7d(2): js 0x1e(%rip)
6e7f(4): mov 0x10(%rdi),%rbx
6e83(3): test %rbx,%rbx
6e86(2): jnz 0xffffffea(%rip)
6e88(4): mov 0x8(%rdi),%rbx
6e8c(5): call 0xffffae04(%rip)
6e91(5): cmp $0x0,0x58(%rbx)
6e96(3): mov %rbx,%rdi
6e99(2): jns 0xffffffe6(%rip)
6e9b(3): mov %rbx,%rdi
6e9e(5): call 0xffffadf2(%rip)
6ea3(4): mov 0x8(%rbp),%rdi
6ea7(3): test %rdi,%rdi
6eaa(2): jz 0x7(%rip)
6eac(5): call 0xffffea04(%rip)
6eb1(4): mov 0x10(%rbp),%rdi
6eb5(5): call 0xffffaddb(%rip)
6eba(4): mov 0x20(%rbp),%rdi
6ebe(5): call 0xffffadd2(%rip)
6ec3(3): mov 0x48(%rbp),%eax
6ec6(3): test $0x2,%ah
6ec9(2): jz 0x67(%rip)
6ecb(3): mov 0x2c(%rbp),%edi
6ece(2): test %edi,%edi
6ed0(6): jns 0x90(%rip)
6ed6(2): xor %ebx,%ebx
6ed8(4): lea 0x60(%rbp),%rdi
6edc(5): call 0xffffea24(%rip)
6ee1(4): mov 0x50(%rbp),%rdi
6ee5(3): test %rdi,%rdi
6ee8(2): jz 0x7(%rip)
6eea(5): call 0x1886(%rip)
6eef(7): test $0x102,0x48(%rbp)
6ef6(4): mov 0x58(%rbp),%rdi
6efa(2): jz 0x26(%rip)
6efc(3): test %rdi,%rdi
6eff(2): jz 0x7(%rip)
6f01(5): call 0x186f(%rip)
6f06(3): mov %rbp,%rdi
6f09(5): call 0xffffad87(%rip)
6f0e(2): test %ebx,%ebx
6f10(6): jnz 0xb1(%rip)
6f16(2): mov %ebx,%eax
6f18(1): pop %rbx
6f19(1): pop %rbp
6f1a(2): pop %r12
6f1c(1): ret near (%rsp)
6f1d(3): nop (%rax)
6f20(5): call 0xffffad70(%rip)
6f25(2): jmp 0xffffffe1(%rip)
6f27(9): nop 0x0(%rax,%rax,1)
6f30(2): test $0x4,%al
6f32(2): jnz 0xffffffa4(%rip)
6f34(3): mov 0x28(%rbp),%edi
6f37(5): call 0xffffac19(%rip)
6f3c(2): test %eax,%eax
6f3e(2): jnz 0x52(%rip)
6f40(3): mov 0x28(%rbp),%edi
6f43(5): call 0xffffaaed(%rip)
6f48(2): test %eax,%eax
6f4a(2): jz 0xffffff8c(%rip)
6f4c(5): call 0xffffa954(%rip)
6f51(3): mov %rax,%r12
6f54(2): jmp 0x64(%rip)
6f56(a): nop 0x0(%rax,%rax,1)
6f60(5): call 0xffffaad0(%rip)
6f65(2): test %eax,%eax
6f67(6): jz 0xffffff6f(%rip)
6f6d(5): call 0xffffa933(%rip)
6f72(2): mov (%rax),%ebx
6f74(5): jmp 0xffffff64(%rip)
6f79(7): nop 0x0(%rax)
6f80(3): mov %rdi,%rbx
6f83(3): mov %rbx,%rdi
6f86(5): call 0xffffad0a(%rip)
6f8b(5): jmp 0xffffff18(%rip)
6f90(5): call 0xffffa910(%rip)
6f95(3): mov 0x28(%rbp),%edi
6f98(3): mov %rax,%r12
6f9b(2): mov (%rax),%ebx
6f9d(5): call 0xffffaa93(%rip)
6fa2(2): test %eax,%eax
6fa4(6): jz 0xffffff34(%rip)
6faa(2): test %ebx,%ebx
6fac(6): jnz 0xffffff2c(%rip)
6fb2(6): nop 0x0(%rax,%rax,1)
6fb8(4): mov (%r12),%ebx
6fbc(5): jmp 0xffffff1c(%rip)
6fc1(5): call 0xffffa8df(%rip)
6fc6(2): mov %ebx,(%rax)
6fc8(5): mov $0xffffffff,%ebx
6fcd(5): jmp 0xffffff49(%rip)

"rpl_fts_read" :
6fe0(2): push %r14
6fe2(2): push %r13
6fe4(2): push %r12
6fe6(1): push %rbp
6fe7(1): push %rbx
6fe8(3): mov (%rdi),%rbp
6feb(3): test %rbp,%rbp
6fee(6): jz 0x110(%rip)
6ff4(3): mov 0x48(%rdi),%edx
6ff7(3): test $0x20,%dh
6ffa(6): jnz 0x104(%rip)
7000(4): movzx 0x74(%rbp),%eax
7004(5): mov $0x3,%ebx
7009(3): mov %rdi,%r12
700c(4): mov %bx,0x74(%rbp)
7010(4): cmp $0x1,%ax
7014(6): jz 0x24c(%rip)
701a(4): cmp $0x2,%ax
701e(4): movzx 0x70(%rbp),%ecx
7022(6): jz 0xee(%rip)
7028(4): cmp $0x1,%cx
702c(2): jnz 0x34(%rip)
702e(5): jmp 0x222(%rip)
7033(5): nop 0x0(%rax,%rax,1)
7038(4): mov %rbx,(%r12)
703c(3): mov %rbp,%rdi
703f(5): call 0xffffac51(%rip)
7044(5): cmp $0x0,0x58(%rbx)
7049(6): jz 0x237(%rip)
704f(4): movzx 0x74(%rbx),%eax
7053(3): mov %rbx,%rbp
7056(4): cmp $0x4,%ax
705a(6): jnz 0x32e(%rip)
7060(4): mov 0x10(%rbp),%rbx
7064(3): test %rbx,%rbx
7067(2): jnz 0xffffffd1(%rip)
7069(4): mov 0x8(%rbp),%rbx
706d(5): cmp $0x0,0x18(%rbx)
7072(6): jnz 0x56e(%rip)
7078(4): mov %rbx,(%r12)
707c(3): mov %rbp,%rdi
707f(5): call 0xffffac11(%rip)
7084(5): cmp $0xffffffff,0x58(%rbx)
7089(6): jz 0x4b9(%rip)
708f(5): cmp $0xb,0x70(%rbx)
7094(6): jz 0x13b(%rip)
709a(5): mov 0x20(%r12),%rdx
709f(4): mov 0x48(%rbx),%rax
70a3(4): mov $0x0,0x0(%rdx,%rax,1)
70a7(5): cmp $0x0,0x58(%rbx)
70ac(6): jz 0x3c4(%rip)
70b2(4): movzx 0x72(%rbx),%eax
70b6(2): test $0x2,%al
70b8(6): jz 0x370(%rip)
70be(5): mov 0x48(%r12),%eax
70c3(3): mov 0x44(%rbx),%edi
70c6(2): test $0x4,%al
70c8(6): jz 0x404(%rip)
70ce(5): call 0xffffa962(%rip)
70d3(5): mov 0x48(%r12),%edi
70d8(5): cmp $0x2,0x70(%rbx)
70dd(2): jz 0x16(%rip)
70df(3): mov 0x40(%rbx),%ecx
70e2(2): test %ecx,%ecx
70e4(6): jz 0x3a4(%rip)
70ea(5): mov $0x7,%edx
70ef(4): mov %dx,0x70(%rbx)
70f3(6): and $0x2000,%edi
70f9(3): mov %rbx,%rbp
70fc(2): jz 0x7e(%rip)
70fe(2): xor %ebp,%ebp
7100(1): pop %rbx
7101(3): mov %rbp,%rax
7104(1): pop %rbp
7105(2): pop %r12
7107(2): pop %r13
7109(2): pop %r14
710b(1): ret near (%rsp)
710c(4): nop 0x0(%rax)
7110(3): lea 0xfffffff4(%rcx),%eax
7113(4): cmp $0x1,%ax
7117(2): jbe 0x79(%rip)
7119(4): cmp $0x1,%cx
711d(6): jnz 0xffffff43(%rip)
7123(3): test $0x40,%dl
7126(6): jz 0xb2(%rip)
712c(5): mov 0x18(%r12),%rax
7131(4): cmp %rax,0x78(%rbp)
7135(6): jz 0xa3(%rip)
713b(4): test $0x2,0x72(%rbp)
713f(6): jnz 0x4e1(%rip)
7145(5): mov 0x8(%r12),%rdi
714a(3): test %rdi,%rdi
714d(2): jz 0x10(%rip)
714f(5): call 0xffffe761(%rip)
7154(9): mov $0x0,0x8(%r12)
715d(5): mov 0x48(%r12),%edi
7162(6): mov $0x6,%r10d
7168(5): lea 0x58(%r12),%rsi
716d(5): mov %r10w,0x70(%rbp)
7172(3): mov %rbp,%rdx
7175(5): call 0xffffee8b(%rip)
717a(1): pop %rbx
717b(3): mov %rbp,%rax
717e(1): pop %rbp
717f(2): pop %r12
7181(2): pop %r13
7183(2): pop %r14
7185(1): ret near (%rsp)
7186(a): nop 0x0(%rax,%rax,1)
7190(5): mov $0x1,%edx
7195(3): mov %rbp,%rsi
7198(5): call 0xffffe3a8(%rip)
719d(4): cmp $0x1,%ax
71a1(4): mov %ax,0x70(%rbp)
71a5(6): jz 0x347(%rip)
71ab(4): cmp $0xb,%ax
71af(4): mov %rbp,(%r12)
71b3(2): jnz 0xffffffc7(%rip)
71b5(3): nop (%rax)
71b8(7): mov 0xa8(%rbp),%rax
71bf(4): cmp $0x2,%rax
71c3(6): jz 0x3a5(%rip)
71c9(4): cmp $0x1,%rax
71cd(2): jz 0xffffffad(%rip)
71cf(5): call 0xffffa6c1(%rip)
71d4(4): nop 0x0(%rax)
71d8(5): mov 0x8(%r12),%rdi
71dd(3): test %rdi,%rdi
71e0(6): jz 0x218(%rip)
71e6(3): test $0x10,%dh
71e9(6): jnz 0x1f9(%rip)
71ef(4): mov 0x30(%rbp),%rcx
71f3(5): mov $0xffffffff,%edx
71f8(3): mov %rbp,%rsi
71fb(3): mov %r12,%rdi
71fe(5): call 0xffffead2(%rip)
7203(2): test %eax,%eax
7205(6): jz 0x2bd(%rip)
720b(5): call 0xffffa695(%rip)
7210(2): mov (%rax),%eax
7212(5): or $0x1,0x72(%rbp)
7217(3): mov %eax,0x40(%rbp)
721a(5): mov 0x8(%r12),%rbp
721f(3): test %rbp,%rbp
7222(6): jz 0x1f4(%rip)
7228(3): mov %rbp,%rax
722b(5): nop 0x0(%rax,%rax,1)
7230(4): mov 0x8(%rax),%rdx
7234(4): mov 0x30(%rdx),%rdx
7238(4): mov %rdx,0x30(%rax)
723c(4): mov 0x10(%rax),%rax
7240(3): test %rax,%rax
7243(2): jnz 0xffffffed(%rip)
7245(5): jmp 0x1d1(%rip)
724a(6): nop 0x0(%rax,%rax,1)
7250(4): cmp $0x4,%ax
7254(6): jnz 0xfffffecf(%rip)
725a(5): jmp 0xfffffee1(%rip)
725f(1): nop 
7260(3): mov %rbp,%rsi
7263(2): xor %edx,%edx
7265(5): call 0xffffe2db(%rip)
726a(4): mov %ax,0x70(%rbp)
726e(3): mov %rbp,%rax
7271(1): pop %rbx
7272(1): pop %rbp
7273(2): pop %r12
7275(2): pop %r13
7277(2): pop %r14
7279(1): ret near (%rsp)
727a(6): nop 0x0(%rax,%rax,1)
7280(3): mov %r12,%rdi
7283(5): call 0xffffe8cd(%rip)
7288(2): test %eax,%eax
728a(6): jnz 0x407(%rip)
7290(9): test $0x102,0x48(%r12)
7299(5): mov 0x58(%r12),%rdi
729e(6): jz 0x13a(%rip)
72a4(3): test %rdi,%rdi
72a7(2): jz 0x7(%rip)
72a9(5): call 0x14c7(%rip)
72ae(4): mov 0x60(%rbx),%rdx
72b2(7): lea 0x108(%rbx),%rbp
72b9(5): mov 0x20(%r12),%rdi
72be(3): mov %rbp,%rsi
72c1(4): mov %rdx,0x48(%rbx)
72c5(4): add $0x1,%rdx
72c9(5): call 0xffffa8c7(%rip)
72ce(5): mov $0x2f,%esi
72d3(3): mov %rbp,%rdi
72d6(5): call 0xffffa70a(%rip)
72db(3): test %rax,%rax
72de(2): jz 0x2d(%rip)
72e0(3): cmp %rax,%rbp
72e3(6): jz 0x1cd(%rip)
72e9(4): lea 0x1(%rax),%r13
72ed(3): mov %r13,%rdi
72f0(5): call 0xffffa670(%rip)
72f5(4): lea 0x1(%rax),%rdx
72f9(3): mov %rax,%r14
72fc(3): mov %r13,%rsi
72ff(3): mov %rbp,%rdi
7302(5): call 0xffffa88e(%rip)
7307(4): mov %r14,0x60(%rbx)
730b(5): mov 0x20(%r12),%rax
7310(5): mov 0x48(%r12),%edi
7315(5): lea 0x58(%r12),%rsi
731a(3): mov %rbx,%rbp
731d(4): mov %rax,0x38(%rbx)
7321(4): mov %rax,0x30(%rbx)
7325(5): call 0xffffe8fb(%rip)
732a(4): movzx 0x70(%rbx),%eax
732e(4): cmp $0xb,%ax
7332(4): mov %rbp,(%r12)
7336(6): jz 0xfffffe82(%rip)
733c(4): cmp $0x1,%ax
7340(6): jnz 0xfffffe3a(%rip)
7346(5): cmp $0x0,0x58(%rbp)
734b(2): jnz 0xb(%rip)
734d(4): mov 0x78(%rbp),%rax
7351(5): mov %rax,0x18(%r12)
7356(5): mov 0x48(%r12),%edi
735b(5): lea 0x58(%r12),%rsi
7360(3): mov %rbp,%rdx
7363(5): call 0xffffebed(%rip)
7368(2): test %al,%al
736a(6): jnz 0xfffffe10(%rip)
7370(5): call 0xffffa530(%rip)
7375(2): xor %ebp,%ebp
7377(6): mov $0xc,(%rax)
737d(5): jmp 0xfffffdfd(%rip)
7382(6): nop 0x0(%rax,%rax,1)
7388(4): cmp $0x2,%ax
738c(6): jz 0x2a1(%rip)
7392(4): mov 0x8(%rbp),%rax
7396(7): lea 0x108(%rbp),%rsi
739d(4): mov 0x48(%rax),%rdi
73a1(4): mov 0x38(%rax),%rax
73a5(5): cmp $0x2f,0xffffffff(%rax,%rdi,1)
73aa(4): lea 0xffffffff(%rdi),%rdx
73ae(4): cmove %rdx,%rdi
73b2(5): add 0x20(%r12),%rdi
73b7(3): mov $0x2f,(%rdi)
73ba(4): mov 0x60(%rbp),%rax
73be(4): add $0x1,%rdi
73c2(4): lea 0x1(%rax),%rdx
73c6(5): call 0xffffa7ca(%rip)
73cb(4): movzx 0x70(%rbp),%eax
73cf(5): jmp 0xffffff5f(%rip)
73d4(4): nop 0x0(%rax)
73d8(5): call 0xffffa8b8(%rip)
73dd(5): jmp 0xfffffed1(%rip)
73e2(3): and $0xef,%dh
73e5(5): mov %edx,0x48(%r12)
73ea(5): call 0xffffe4c6(%rip)
73ef(9): mov $0x0,0x8(%r12)
73f8(5): mov $0x3,%esi
73fd(3): mov %r12,%rdi
7400(5): call 0xffffecc0(%rip)
7405(3): test %rax,%rax
7408(5): mov %rax,0x8(%r12)
740d(6): jz 0xf7(%rip)
7413(3): mov %rax,%rbp
7416(9): mov $0x0,0x8(%r12)
741f(5): jmp 0xffffff73(%rip)
7424(4): nop 0x0(%rax)
7428(2): test $0x1,%al
742a(6): jnz 0xfffffca9(%rip)
7430(4): mov 0x8(%rbx),%rsi
7434(7): lea 0x3d1f(%rip),%rcx
743b(5): mov $0xffffffff,%edx
7440(3): mov %r12,%rdi
7443(5): call 0xffffe88d(%rip)
7448(2): test %eax,%eax
744a(6): jz 0xfffffc89(%rip)
7450(5): call 0xffffa450(%rip)
7455(5): mov 0x48(%r12),%edi
745a(2): mov (%rax),%eax
745c(6): or $0x2000,%edi
7462(3): mov %eax,0x40(%rbx)
7465(5): mov %edi,0x48(%r12)
746a(5): jmp 0xfffffc6e(%rip)
746f(1): nop 
7470(3): mov %r12,%rdi
7473(5): call 0xffffe6dd(%rip)
7478(2): test %eax,%eax
747a(2): jnz 0xffffffd6(%rip)
747c(5): jmp 0xfffffc57(%rip)
7481(7): nop 0x0(%rax)
7488(5): mov $0x6,%eax
748d(5): lea 0x58(%r12),%rsi
7492(3): mov %rbx,%rdx
7495(4): mov %ax,0x70(%rbx)
7499(5): call 0xffffeb67(%rip)
749e(5): mov 0x48(%r12),%edi
74a3(5): jmp 0xfffffc50(%rip)
74a8(8): nop 0x0(%rax,%rax,1)
74b0(7): cmp $0x0,0x109(%rbx)
74b7(6): jnz 0xfffffe32(%rip)
74bd(5): jmp 0xfffffe4e(%rip)
74c2(5): mov 0x8(%r12),%rbp
74c7(5): jmp 0xffffff4f(%rip)
74cc(3): test $0x2,%ah
74cf(6): jz 0x19e(%rip)
74d5(2): mov %edi,%esi
74d7(5): mov $0x1,%edx
74dc(3): mov %r12,%rdi
74df(5): call 0xffffe601(%rip)
74e4(3): mov 0x44(%rbx),%edi
74e7(5): jmp 0xfffffbe7(%rip)
74ec(5): mov 0x48(%r12),%esi
74f1(4): test $0x4,%sil
74f5(6): jz 0x207(%rip)
74fb(4): mov %rbp,(%r12)
74ff(5): jmp 0xfffffe47(%rip)
7504(5): mov 0x48(%r12),%edi
7509(6): test $0x2000,%edi
750f(6): jnz 0xfffffbef(%rip)
7515(4): mov 0x40(%rbp),%r9d
7519(3): test %r9d,%r9d
751c(2): jz 0x14(%rip)
751e(5): cmp $0x4,0x70(%rbp)
7523(2): jz 0xd(%rip)
7525(6): mov $0x7,%r8d
752b(5): mov %r8w,0x70(%rbp)
7530(5): lea 0x58(%r12),%rsi
7535(3): mov %rbp,%rdx
7538(5): call 0xffffeac8(%rip)
753d(5): jmp 0xfffffc3d(%rip)
7542(3): mov %rbx,%rdi
7545(2): xor %ebp,%ebp
7547(5): call 0xffffa749(%rip)
754c(5): call 0xffffa354(%rip)
7551(6): mov $0x0,(%rax)
7557(8): mov $0x0,(%r12)
755f(5): jmp 0xfffffc1b(%rip)
7564(4): nop 0x0(%rax)
7568(4): mov 0x8(%rbp),%rbx
756c(5): cmp $0x0,0x68(%rbx)
7571(2): jnz 0x13(%rip)
7573(5): mov 0x48(%r12),%eax
7578(3): and $0x18,%eax
757b(3): cmp $0x18,%eax
757e(6): jz 0x15f(%rip)
7584(2): xor %edx,%edx
7586(3): mov %rbp,%rsi
7589(3): mov %r12,%rdi
758c(5): call 0xffffdfb4(%rip)
7591(6): mov 0x90(%rbp),%edx
7597(4): mov %ax,0x70(%rbp)
759b(6): and $0xf000,%edx
75a1(6): cmp $0x4000,%edx
75a7(6): jnz 0xfffffd95(%rip)
75ad(5): cmp $0x0,0x58(%rbp)
75b2(6): jz 0x11c(%rip)
75b8(4): mov 0x68(%rbx),%rcx
75bc(4): lea 0xffffffff(%rcx),%rdx
75c0(4): cmp $0xfffffffd,%rdx
75c4(2): jnbe 0x6(%rip)
75c6(4): mov %rdx,0x68(%rbx)
75ca(4): cmp $0x1,%ax
75ce(6): jnz 0xfffffbac(%rip)
75d4(5): jmp 0xfffffd82(%rip)
75d9(7): nop 0x0(%rax)
75e0(4): mov 0x48(%rbx),%rax
75e4(5): mov 0x20(%r12),%rdx
75e9(5): mov $0x3,%esi
75ee(4): mov %rbx,(%r12)
75f2(3): mov %r12,%rdi
75f5(4): mov $0x0,0x0(%rdx,%rax,1)
75f9(5): call 0xffffeac7(%rip)
75fe(3): test %rax,%rax
7601(3): mov %rax,%rbx
7604(2): jz 0x54(%rip)
7606(3): mov %rbp,%rdi
7609(3): mov %rbx,%rbp
760c(5): call 0xffffa684(%rip)
7611(5): jmp 0xfffffd81(%rip)
7616(a): nop 0x0(%rax,%rax,1)
7620(3): mov 0x44(%rbp),%edi
7623(5): call 0xffffa40d(%rip)
7628(5): jmp 0xfffffb1d(%rip)
762d(5): mov $0x1,%edx
7632(3): mov %rbx,%rsi
7635(3): mov %r12,%rdi
7638(5): call 0xffffdf08(%rip)
763d(4): cmp $0x1,%ax
7641(4): mov %ax,0x70(%rbx)
7645(2): jz 0x5c(%rip)
7647(5): mov $0x3,%esi
764c(3): mov %rbx,%rbp
764f(4): mov %si,0x74(%rbx)
7653(5): jmp 0xfffffd3f(%rip)
7658(6): test $0x20,0x49(%r12)
765e(6): jnz 0xfffffaa0(%rip)
7664(4): mov 0x8(%rbp),%rbx
7668(5): jmp 0xfffffa10(%rip)
766d(5): call 0xffffa4e3(%rip)
7672(2): test %eax,%eax
7674(2): jz 0x15(%rip)
7676(5): call 0xffffa22a(%rip)
767b(2): mov (%rax),%eax
767d(3): mov %eax,0x40(%rbx)
7680(9): or $0x2000,0x48(%r12)
7689(3): mov 0x44(%rbx),%edi
768c(5): jmp 0xfffffa42(%rip)
7691(9): or $0x2000,0x48(%r12)
769a(2): xor %ebp,%ebp
769c(5): jmp 0xfffffade(%rip)
76a1(5): mov 0x48(%r12),%esi
76a6(4): test $0x4,%sil
76aa(2): jnz 0xffffff9d(%rip)
76ac(5): mov 0x2c(%r12),%edi
76b1(7): lea 0x3aa3(%rip),%rdx
76b8(5): call 0xffffe5d8(%rip)
76bd(2): test %eax,%eax
76bf(3): mov %eax,0x44(%rbx)
76c2(2): js 0x7e(%rip)
76c4(5): or $0x2,0x72(%rbx)
76c9(5): jmp 0xffffff7e(%rip)
76ce(4): cmp $0x1,%ax
76d2(6): jnz 0xfffffaa8(%rip)
76d8(5): jmp 0xfffffc75(%rip)
76dd(5): mov 0x2c(%r12),%esi
76e2(3): mov %rbx,%rdi
76e5(5): call 0xffffe38b(%rip)
76ea(3): cmp $0x2,%eax
76ed(6): jnz 0xfffffe97(%rip)
76f3(4): movzx 0x70(%rbp),%eax
76f7(5): jmp 0xfffffc45(%rip)
76fc(5): mov 0x2c(%r12),%edi
7701(7): lea 0x3a53(%rip),%rdx
7708(5): call 0xffffe588(%rip)
770d(2): test %eax,%eax
770f(3): mov %eax,0x44(%rbp)
7712(2): js 0x10(%rip)
7714(5): or $0x2,0x72(%rbp)
7719(4): movzx 0x70(%rbp),%eax
771d(5): jmp 0xfffffc11(%rip)
7722(5): call 0xffffa17e(%rip)
7727(2): mov (%rax),%eax
7729(6): mov $0x7,%r11d
772f(5): mov %r11w,0x70(%rbp)
7734(3): mov %eax,0x40(%rbp)
7737(4): mov %rbp,(%r12)
773b(5): jmp 0xfffffa3f(%rip)
7740(5): call 0xffffa160(%rip)
7745(2): mov (%rax),%eax
7747(5): mov $0x7,%edi
774c(4): mov %di,0x70(%rbx)
7750(3): mov %eax,0x40(%rbx)
7753(5): jmp 0xfffffef4(%rip)

"rpl_fts_set" :
7760(3): cmp $0x4,%edx
7763(2): jnbe 0xd(%rip)
7765(4): mov %dx,0x74(%rsi)
7769(2): xor %eax,%eax
776b(1): ret near (%rsp)
776c(4): nop 0x0(%rax)
7770(4): sub $0x8,%rsp
7774(5): call 0xffffa12c(%rip)
7779(6): mov $0x16,(%rax)
777f(5): mov $0x1,%eax
7784(4): add $0x8,%rsp
7788(1): ret near (%rsp)

"rpl_fts_children" :
7790(2): push %r14
7792(2): push %r13
7794(2): push %r12
7796(1): push %rbp
7797(3): mov %esi,%r12d
779a(1): push %rbx
779b(3): mov %rdi,%rbx
779e(5): call 0xffffa102(%rip)
77a3(7): test $0xffffefff,%r12d
77aa(3): mov %rax,%r13
77ad(6): jnz 0xeb(%rip)
77b3(3): mov (%rbx),%rbp
77b6(6): mov $0x0,(%rax)
77bc(4): test $0x20,0x49(%rbx)
77c0(2): jnz 0x80(%rip)
77c2(4): movzx 0x70(%rbp),%eax
77c6(4): cmp $0x9,%ax
77ca(2): jz 0x66(%rip)
77cc(4): cmp $0x1,%ax
77d0(2): jnz 0x70(%rip)
77d2(4): mov 0x8(%rbx),%rdi
77d6(3): test %rdi,%rdi
77d9(2): jz 0x7(%rip)
77db(5): call 0xffffe0d5(%rip)
77e0(7): cmp $0x1000,%r12d
77e7(6): mov $0x1,%r14d
77ed(2): jnz 0xf(%rip)
77ef(7): or $0x1000,0x48(%rbx)
77f6(6): mov $0x2,%r14d
77fc(5): cmp $0x0,0x58(%rbp)
7801(2): jnz 0x14(%rip)
7803(4): mov 0x30(%rbp),%rax
7807(3): cmp $0x2f,(%rax)
780a(2): jz 0xb(%rip)
780c(3): mov 0x48(%rbx),%esi
780f(4): test $0x4,%sil
7813(2): jz 0x3d(%rip)
7815(3): mov %r14d,%esi
7818(3): mov %rbx,%rdi
781b(5): call 0xffffe8a5(%rip)
7820(4): mov %rax,0x8(%rbx)
7824(1): pop %rbx
7825(1): pop %rbp
7826(2): pop %r12
7828(2): pop %r13
782a(2): pop %r14
782c(1): ret near (%rsp)
782d(3): nop (%rax)
7830(1): pop %rbx
7831(4): mov 0x10(%rbp),%rax
7835(1): pop %rbp
7836(2): pop %r12
7838(2): pop %r13
783a(2): pop %r14
783c(1): ret near (%rsp)
783d(3): nop (%rax)
7840(1): pop %rbx
7841(2): xor %eax,%eax
7843(1): pop %rbp
7844(2): pop %r12
7846(2): pop %r13
7848(2): pop %r14
784a(1): ret near (%rsp)
784b(5): nop 0x0(%rax,%rax,1)
7850(3): mov 0x2c(%rbx),%edi
7853(7): lea 0x3901(%rip),%rdx
785a(5): call 0xffffe436(%rip)
785f(2): test %eax,%eax
7861(2): mov %eax,%ebp
7863(2): js 0x56(%rip)
7865(3): mov %r14d,%esi
7868(3): mov %rbx,%rdi
786b(5): call 0xffffe855(%rip)
7870(4): test $0x2,0x49(%rbx)
7874(4): mov %rax,0x8(%rbx)
7878(2): jnz 0x30(%rip)
787a(2): mov %ebp,%edi
787c(5): call 0xffffa2d4(%rip)
7881(2): test %eax,%eax
7883(2): jnz 0x45(%rip)
7885(2): mov %ebp,%edi
7887(5): call 0xffffa1a9(%rip)
788c(4): mov 0x8(%rbx),%rax
7890(2): jmp 0xffffff94(%rip)
7892(6): nop 0x0(%rax,%rax,1)
7898(6): mov $0x16,(%rax)
789e(2): xor %eax,%eax
78a0(5): jmp 0xffffff84(%rip)
78a5(3): nop (%rax)
78a8(5): mov $0x1,%edx
78ad(2): mov %ebp,%esi
78af(3): mov %rbx,%rdi
78b2(5): call 0xffffe22e(%rip)
78b7(2): jmp 0xffffffd5(%rip)
78b9(8): mov $0x0,0x8(%rbx)
78c1(2): xor %eax,%eax
78c3(5): jmp 0xffffff61(%rip)
78c8(4): mov 0x0(%r13),%ebx
78cc(2): mov %ebp,%edi
78ce(5): call 0xffffa162(%rip)
78d3(2): xor %eax,%eax
78d5(4): mov %ebx,0x0(%r13)
78d9(5): jmp 0xffffff4b(%rip)

"rpl_mbrtowc" :
78e0(2): push %r13
78e2(2): push %r12
78e4(3): mov %rsi,%r13
78e7(1): push %rbp
78e8(1): push %rbx
78e9(3): mov %rdi,%rbx
78ec(3): mov %rdx,%r12
78ef(4): sub $0x18,%rsp
78f3(9): mov $0x28,%rax
78fc(5): mov %rax,0x8(%rsp)
7901(2): xor %eax,%eax
7903(5): lea 0x4(%rsp),%rax
7908(3): test %rdi,%rdi
790b(4): cmove %rax,%rbx
790f(3): mov %rbx,%rdi
7912(5): call 0xffffa0ae(%rip)
7917(4): cmp $0xfffffffd,%rax
791b(3): mov %rax,%rbp
791e(2): jbe 0x22(%rip)
7920(3): test %r12,%r12
7923(2): jz 0x1d(%rip)
7925(2): xor %edi,%edi
7927(5): call 0x329(%rip)
792c(2): test %al,%al
792e(2): jnz 0x12(%rip)
7930(5): movzx 0x0(%r13),%eax
7935(5): mov $0x1,%ebp
793a(2): mov %eax,(%rbx)
793c(4): nop 0x0(%rax)
7940(5): mov 0x8(%rsp),%rdx
7945(9): xor $0x28,%rdx
794e(3): mov %rbp,%rax
7951(2): jnz 0xd(%rip)
7953(4): add $0x18,%rsp
7957(1): pop %rbx
7958(1): pop %rbp
7959(2): pop %r12
795b(2): pop %r13
795d(1): ret near (%rsp)
795e(5): call 0xffffa042(%rip)

"getfileconat" :
7970(2): push %r13
7972(2): push %r12
7974(3): mov %rsi,%r12
7977(1): push %rbp
7978(1): push %rbx
7979(2): mov %edi,%ebx
797b(7): sub $0xfe8,%rsp
7982(9): mov $0x28,%rax
798b(8): mov %rax,0xfd8(%rsp)
7993(2): xor %eax,%eax
7995(5): call 0xffff9f0b(%rip)
799a(3): cmp $0x9c,%ebx
799d(3): mov %rax,%rbp
79a0(2): jz 0x80(%rip)
79a2(5): cmp $0x2f,(%r12)
79a7(2): jz 0x79(%rip)
79a9(5): lea 0x10(%rsp),%r13
79ae(3): mov %r12,%rdx
79b1(2): mov %ebx,%esi
79b3(3): mov %r13,%rdi
79b6(5): call 0x1ffa(%rip)
79bb(3): test %rax,%rax
79be(2): jz 0x16(%rip)
79c0(3): cmp %r13,%rax
79c3(7): mov $0x5f,0x0(%rbp)
79ca(2): jz 0xa(%rip)
79cc(3): mov %rax,%rdi
79cf(5): call 0xffffa2c1(%rip)
79d4(3): mov %rsp,%r12
79d7(3): mov %r12,%rdi
79da(5): call 0x17f6(%rip)
79df(2): test %eax,%eax
79e1(6): jnz 0x9d(%rip)
79e7(2): test %ebx,%ebx
79e9(2): js 0x7(%rip)
79eb(3): cmp %ebx,(%rsp)
79ee(2): jz 0x72(%rip)
79f0(2): mov %ebx,%edi
79f2(5): call 0xffffa15e(%rip)
79f7(2): test %eax,%eax
79f9(2): jnz 0x57(%rip)
79fb(7): mov $0x5f,0x0(%rbp)
7a02(3): mov %r12,%rdi
7a05(5): call 0x181b(%rip)
7a0a(2): test %eax,%eax
7a0c(2): jnz 0x6a(%rip)
7a0e(3): mov %r12,%rdi
7a11(5): call 0x182f(%rip)
7a16(a): nop 0x0(%rax,%rax,1)
7a20(7): mov $0x5f,0x0(%rbp)
7a27(8): mov 0xfd8(%rsp),%rcx
7a2f(9): xor $0x28,%rcx
7a38(5): mov $0xffffffff,%eax
7a3d(2): jnz 0x34(%rip)
7a3f(7): add $0xfe8,%rsp
7a46(1): pop %rbx
7a47(1): pop %rbp
7a48(2): pop %r12
7a4a(2): pop %r13
7a4c(1): ret near (%rsp)
7a4d(3): nop (%rax)
7a50(3): mov 0x0(%rbp),%ebx
7a53(3): mov %r12,%rdi
7a56(5): call 0x17ea(%rip)
7a5b(3): mov %ebx,0x0(%rbp)
7a5e(2): jmp 0xffffffc9(%rip)
7a60(3): mov %r12,%rdi
7a63(5): call 0x17dd(%rip)
7a68(7): mov $0x9,0x0(%rbp)
7a6f(2): jmp 0xffffffb8(%rip)
7a71(5): call 0xffff9f2f(%rip)
7a76(3): mov 0x0(%rbp),%edi
7a79(5): call 0x1637(%rip)
7a7e(3): mov 0x0(%rbp),%edi
7a81(5): call 0x15ff(%rip)

"close_stream" :
7ac0(2): push %r12
7ac2(1): push %rbp
7ac3(3): mov %rdi,%rbp
7ac6(1): push %rbx
7ac7(5): call 0xffff9e19(%rip)
7acc(3): mov 0x0(%rbp),%ebx
7acf(3): mov %rbp,%rdi
7ad2(3): mov %rax,%r12
7ad5(5): call 0x1b3b(%rip)
7ada(3): and $0x20,%ebx
7add(2): test %ebx,%ebx
7adf(2): jnz 0x19(%rip)
7ae1(2): test %eax,%eax
7ae3(2): jz 0xc(%rip)
7ae5(3): test %r12,%r12
7ae8(5): mov $0xffffffff,%eax
7aed(2): jz 0x3b(%rip)
7aef(1): pop %rbx
7af0(1): pop %rbp
7af1(2): pop %r12
7af3(1): ret near (%rsp)
7af4(4): nop 0x0(%rax)
7af8(2): test %eax,%eax
7afa(2): jnz 0x1e(%rip)
7afc(5): call 0xffff9da4(%rip)
7b01(6): mov $0x0,(%rax)
7b07(5): mov $0xffffffff,%eax
7b0c(1): pop %rbx
7b0d(1): pop %rbp
7b0e(2): pop %r12
7b10(1): ret near (%rsp)
7b11(7): nop 0x0(%rax)
7b18(1): pop %rbx
7b19(5): mov $0xffffffff,%eax
7b1e(1): pop %rbp
7b1f(2): pop %r12
7b21(1): ret near (%rsp)
7b22(6): nop 0x0(%rax,%rax,1)
7b28(5): call 0xffff9d78(%rip)
7b2d(3): cmp $0x9,(%rax)
7b30(1): pop %rbx
7b31(1): pop %rbp
7b32(2): pop %r12
7b34(3): setnz %al
7b37(3): movzx %al,%eax
7b3a(2): neg %eax
7b3c(1): ret near (%rsp)

"cycle_check_init" :
7b40(8): mov $0x0,0x10(%rdi)
7b48(7): mov $0x95f616,0x18(%rdi)
7b4f(1): ret near (%rsp)

"cycle_check" :
7b50(7): cmp $0x95f616,0x18(%rdi)
7b57(2): jnz 0x60(%rip)
7b59(4): mov 0x10(%rdi),%rdx
7b5d(4): mov 0x8(%rsi),%rcx
7b61(3): test %rdx,%rdx
7b64(2): jz 0x1c(%rip)
7b66(3): cmp %rcx,(%rdi)
7b69(2): jz 0x2f(%rip)
7b6b(4): lea 0x1(%rdx),%r8
7b6f(2): xor %eax,%eax
7b71(3): test %r8,%rdx
7b74(4): mov %r8,0x10(%rdi)
7b78(2): jz 0x38(%rip)
7b7a(2): REP ret near (%rsp)
7b7c(4): nop 0x0(%rax)
7b80(8): mov $0x1,0x10(%rdi)
7b88(3): mov (%rsi),%rax
7b8b(3): mov %rcx,(%rdi)
7b8e(4): mov %rax,0x8(%rdi)
7b92(2): xor %eax,%eax
7b94(1): ret near (%rsp)
7b95(3): nop (%rax)
7b98(4): mov 0x8(%rdi),%rax
7b9c(3): cmp %rax,(%rsi)
7b9f(2): jnz 0xffffffcc(%rip)
7ba1(5): mov $0x1,%eax
7ba6(1): ret near (%rsp)
7ba7(9): nop 0x0(%rax,%rax,1)
7bb0(3): test %r8,%r8
7bb3(2): jz 0xffffffee(%rip)
7bb5(2): jmp 0xffffffd3(%rip)
7bb7(7): lea 0x3612(%rip),%rcx
7bbe(7): lea 0x35cb(%rip),%rsi
7bc5(7): lea 0x35e8(%rip),%rdi
7bcc(4): sub $0x8,%rsp
7bd0(5): mov $0x3c,%edx
7bd5(5): call 0xffff9e2b(%rip)

"open_safer" :
7be0(4): sub $0x58,%rsp
7be4(5): mov %rdx,0x30(%rsp)
7be9(2): xor %edx,%edx
7beb(9): mov $0x28,%rax
7bf4(5): mov %rax,0x18(%rsp)
7bf9(2): xor %eax,%eax
7bfb(4): test $0x40,%sil
7bff(2): jnz 0x29(%rip)
7c01(2): xor %eax,%eax
7c03(5): call 0xffff9fbd(%rip)
7c08(2): mov %eax,%edi
7c0a(5): call 0x1656(%rip)
7c0f(5): mov 0x18(%rsp),%rcx
7c14(9): xor $0x28,%rcx
7c1d(2): jnz 0x2c(%rip)
7c1f(4): add $0x58,%rsp
7c23(1): ret near (%rsp)
7c24(4): nop 0x0(%rax)
7c28(5): lea 0x60(%rsp),%rax
7c2d(7): mov $0x10,(%rsp)
7c34(4): mov 0x30(%rsp),%edx
7c38(5): mov %rax,0x8(%rsp)
7c3d(5): lea 0x20(%rsp),%rax
7c42(5): mov %rax,0x10(%rsp)
7c47(2): jmp 0xffffffba(%rip)
7c49(5): call 0xffff9d57(%rip)

"hard_locale" :
7c50(4): sub $0x8,%rsp
7c54(2): xor %esi,%esi
7c56(5): call 0xffff9f1a(%rip)
7c5b(3): mov %rax,%rdx
7c5e(5): mov $0x1,%eax
7c63(3): test %rdx,%rdx
7c66(2): jz 0x1f(%rip)
7c68(7): lea 0x356d(%rip),%rdi
7c6f(5): mov $0x2,%ecx
7c74(3): mov %rdx,%rsi
7c77(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7c79(3): setnbe %cl
7c7c(3): sbb $0x0,%cl
7c7f(2): xor %eax,%eax
7c81(2): test %cl,%cl
7c83(2): jnz 0xd(%rip)
7c85(4): add $0x8,%rsp
7c89(1): ret near (%rsp)
7c8a(6): nop 0x0(%rax,%rax,1)
7c90(7): lea 0x3547(%rip),%rdi
7c97(5): mov $0x6,%ecx
7c9c(3): mov %rdx,%rsi
7c9f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
7ca1(3): setnbe %al
7ca4(2): sbb $0x0,%al
7ca6(2): test %al,%al
7ca8(3): setnz %al
7cab(4): add $0x8,%rsp
7caf(1): ret near (%rsp)

"next_prime" :
7cb0(4): cmp $0xa,%rdi
7cb4(5): mov $0xa,%eax
7cb9(a): mov $0x-6148914691236517205,%r9
7cc3(4): cmovnae %rax,%rdi
7cc7(4): or $0x1,%rdi
7ccb(4): cmp $0xffffffff,%rdi
7ccf(2): jz 0x70(%rip)
7cd1(7): nop 0x0(%rax)
7cd8(3): mov %rdi,%rax
7cdb(3): mov %rdi,%rcx
7cde(3): mul %rax,%r9,%rdx
7ce1(3): mov %rdx,%rax
7ce4(3): shr $0x1,%rax
7ce7(4): lea 0x0(%rax,%rax,2),%rax
7ceb(3): sub %rax,%rcx
7cee(4): cmp $0x9,%rdi
7cf2(3): mov %rcx,%rax
7cf5(2): jbe 0x3b(%rip)
7cf7(3): test %rcx,%rcx
7cfa(2): jz 0x3b(%rip)
7cfc(6): mov $0x10,%r8d
7d02(5): mov $0x9,%esi
7d07(5): mov $0x3,%ecx
7d0c(2): jmp 0xd(%rip)
7d0e(2): nop 
7d10(4): add $0x8,%r8
7d14(3): test %rdx,%rdx
7d17(2): jz 0x1e(%rip)
7d19(4): add $0x2,%rcx
7d1d(2): xor %edx,%edx
7d1f(3): mov %rdi,%rax
7d22(3): div %rcx,%rax
7d25(3): add %r8,%rsi
7d28(3): cmp %rdi,%rsi
7d2b(3): mov %rdx,%rax
7d2e(2): jb 0xffffffe2(%rip)
7d30(3): test %rax,%rax
7d33(2): jnz 0xc(%rip)
7d35(4): add $0x2,%rdi
7d39(4): cmp $0xffffffff,%rdi
7d3d(2): jnz 0xffffff9b(%rip)
7d3f(3): mov %rdi,%rax
7d42(1): ret near (%rsp)

"raw_hasher" :
7d50(3): mov %rdi,%rax
7d53(2): xor %edx,%edx
7d55(4): ror $0x3,%rax
7d59(3): div %rsi,%rax
7d5c(3): mov %rdx,%rax
7d5f(1): ret near (%rsp)

"raw_comparator" :
7d60(3): cmp %rsi,%rdi
7d63(3): setz %al
7d66(1): ret near (%rsp)

"safe_hasher" :
7d70(1): push %rbx
7d71(3): mov %rdi,%rbx
7d74(3): mov %rsi,%rdi
7d77(4): mov 0x10(%rbx),%rsi
7d7b(3): call 0x30(%rbx)
7d7e(4): cmp %rax,0x10(%rbx)
7d82(2): jbe 0xb(%rip)
7d84(4): shl/sal $0x4,%rax
7d88(3): add (%rbx),%rax
7d8b(1): pop %rbx
7d8c(1): ret near (%rsp)
7d8d(5): call 0xffff9b03(%rip)

"hash_find_entry" :
7da0(2): push %r14
7da2(2): push %r13
7da4(3): mov %rdx,%r14
7da7(2): push %r12
7da9(1): push %rbp
7daa(3): mov %rdi,%r12
7dad(1): push %rbx
7dae(3): mov %rsi,%rbp
7db1(3): mov %ecx,%r13d
7db4(5): call 0xffffffbc(%rip)
7db9(3): mov %rax,(%r14)
7dbc(3): mov (%rax),%rsi
7dbf(3): test %rsi,%rsi
7dc2(6): jz 0xee(%rip)
7dc8(3): cmp %rbp,%rsi
7dcb(3): mov %rax,%rbx
7dce(6): jz 0x95(%rip)
7dd4(3): mov %rbp,%rdi
7dd7(5): call 0x38(%r12)
7ddc(2): test %al,%al
7dde(6): jnz 0x82(%rip)
7de4(4): mov 0x8(%rbx),%rax
7de8(3): test %rax,%rax
7deb(6): jz 0xc5(%rip)
7df1(3): mov (%rax),%rsi
7df4(3): cmp %rsi,%rbp
7df7(2): jnz 0x22(%rip)
7df9(2): jmp 0x33(%rip)
7dfb(5): nop 0x0(%rax,%rax,1)
7e00(4): mov 0x8(%rbx),%rbx
7e04(4): mov 0x8(%rbx),%rax
7e08(3): test %rax,%rax
7e0b(6): jz 0xa5(%rip)
7e11(3): mov (%rax),%rsi
7e14(3): cmp %rbp,%rsi
7e17(2): jz 0x15(%rip)
7e19(3): mov %rbp,%rdi
7e1c(5): call 0x38(%r12)
7e21(2): test %al,%al
7e23(2): jz 0xffffffdd(%rip)
7e25(4): mov 0x8(%rbx),%rax
7e29(3): mov (%rax),%rsi
7e2c(3): test %r13b,%r13b
7e2f(2): jz 0x1f(%rip)
7e31(4): mov 0x8(%rax),%rdx
7e35(4): mov %rdx,0x8(%rbx)
7e39(7): mov $0x0,(%rax)
7e40(5): mov 0x48(%r12),%rdx
7e45(4): mov %rdx,0x8(%rax)
7e49(5): mov %rax,0x48(%r12)
7e4e(1): pop %rbx
7e4f(3): mov %rsi,%rax
7e52(1): pop %rbp
7e53(2): pop %r12
7e55(2): pop %r13
7e57(2): pop %r14
7e59(1): ret near (%rsp)
7e5a(6): nop 0x0(%rax,%rax,1)
7e60(3): mov (%rbx),%rsi
7e63(3): test %r13b,%r13b
7e66(2): jz 0xffffffe8(%rip)
7e68(4): mov 0x8(%rbx),%rax
7e6c(3): test %rax,%rax
7e6f(2): jz 0x31(%rip)
7e71(4): movdqu (%rax),%xmm0
7e75(3): movups %xmm0,(%rbx)
7e78(7): mov $0x0,(%rax)
7e7f(5): mov 0x48(%r12),%rdx
7e84(4): mov %rdx,0x8(%rax)
7e88(5): mov %rax,0x48(%r12)
7e8d(3): mov %rsi,%rax
7e90(1): pop %rbx
7e91(1): pop %rbp
7e92(2): pop %r12
7e94(2): pop %r13
7e96(2): pop %r14
7e98(1): ret near (%rsp)
7e99(7): nop 0x0(%rax)
7ea0(7): mov $0x0,(%rbx)
7ea7(2): jmp 0xffffffa7(%rip)
7ea9(7): nop 0x0(%rax)
7eb0(2): xor %esi,%esi
7eb2(1): pop %rbx
7eb3(3): mov %rsi,%rax
7eb6(1): pop %rbp
7eb7(2): pop %r12
7eb9(2): pop %r13
7ebb(2): pop %r14
7ebd(1): ret near (%rsp)

"check_tuning.isra.0" :
7ec0(3): mov (%rdi),%rdx
7ec3(7): lea 0x3396(%rip),%rcx
7eca(5): mov $0x1,%eax
7ecf(3): cmp %rcx,%rdx
7ed2(2): jz 0x63(%rip)
7ed4(5): movss 0x8(%rdx),%xmm0
7ed9(7): ucomiss 0x3394(%rip),%xmm0
7ee0(2): jbe 0x50(%rip)
7ee2(8): movss 0x338e(%rip),%xmm1
7eea(3): ucomiss %xmm0,%xmm1
7eed(2): jbe 0x43(%rip)
7eef(5): movss 0xc(%rdx),%xmm1
7ef4(7): ucomiss 0x3381(%rip),%xmm1
7efb(2): jbe 0x35(%rip)
7efd(4): movss (%rdx),%xmm1
7f01(7): ucomiss 0x3378(%rip),%xmm1
7f08(2): jb 0x28(%rip)
7f0a(8): addss 0x3362(%rip),%xmm1
7f12(5): movss 0x4(%rdx),%xmm2
7f17(3): ucomiss %xmm1,%xmm2
7f1a(2): jbe 0x16(%rip)
7f1c(8): movss 0x3360(%rip),%xmm3
7f24(3): ucomiss %xmm2,%xmm3
7f27(2): jb 0x9(%rip)
7f29(3): ucomiss %xmm1,%xmm0
7f2c(2): jnbe 0x9(%rip)
7f2e(2): nop 
7f30(3): mov %rcx,(%rdi)
7f33(2): xor %eax,%eax
7f35(2): REP ret near (%rsp)

"transfer_entries" :
7f40(2): push %r15
7f42(2): push %r14
7f44(2): push %r13
7f46(2): push %r12
7f48(1): push %rbp
7f49(1): push %rbx
7f4a(4): sub $0x8,%rsp
7f4e(3): mov (%rsi),%r12
7f51(4): cmp 0x8(%rsi),%r12
7f55(6): jnb 0xe3(%rip)
7f5b(3): mov %rdi,%rbp
7f5e(3): mov %rsi,%r13
7f61(3): mov %edx,%r14d
7f64(4): nop 0x0(%rax)
7f68(4): mov (%r12),%r15
7f6c(3): test %r15,%r15
7f6f(6): jz 0xbb(%rip)
7f75(5): mov 0x8(%r12),%rbx
7f7a(3): test %rbx,%rbx
7f7d(2): jnz 0x1f(%rip)
7f7f(2): jmp 0x5c(%rip)
7f81(7): nop 0x0(%rax)
7f88(4): mov 0x8(%rax),%rcx
7f8c(3): test %rdx,%rdx
7f8f(4): mov %rcx,0x8(%rbx)
7f93(4): mov %rbx,0x8(%rax)
7f97(3): mov %rdx,%rbx
7f9a(2): jz 0x3d(%rip)
7f9c(3): mov (%rbx),%r15
7f9f(3): mov %rbp,%rdi
7fa2(3): mov %r15,%rsi
7fa5(5): call 0xfffffdcb(%rip)
7faa(4): cmp $0x0,(%rax)
7fae(4): mov 0x8(%rbx),%rdx
7fb2(2): jnz 0xffffffd6(%rip)
7fb4(3): mov %r15,(%rax)
7fb7(5): add $0x1,0x18(%rbp)
7fbc(3): test %rdx,%rdx
7fbf(7): mov $0x0,(%rbx)
7fc6(4): mov 0x48(%rbp),%rax
7fca(4): mov %rax,0x8(%rbx)
7fce(4): mov %rbx,0x48(%rbp)
7fd2(3): mov %rdx,%rbx
7fd5(2): jnz 0xffffffc7(%rip)
7fd7(4): mov (%r12),%r15
7fdb(3): test %r14b,%r14b
7fde(9): mov $0x0,0x8(%r12)
7fe7(2): jnz 0x43(%rip)
7fe9(3): mov %r15,%rsi
7fec(3): mov %rbp,%rdi
7fef(5): call 0xfffffd81(%rip)
7ff4(4): cmp $0x0,(%rax)
7ff8(3): mov %rax,%rbx
7ffb(2): jz 0x55(%rip)
7ffd(4): mov 0x48(%rbp),%rax
8001(3): test %rax,%rax
8004(2): jz 0x5c(%rip)
8006(4): mov 0x8(%rax),%rdx
800a(4): mov %rdx,0x48(%rbp)
800e(4): mov 0x8(%rbx),%rdx
8012(3): mov %r15,(%rax)
8015(4): mov %rdx,0x8(%rax)
8019(4): mov %rax,0x8(%rbx)
801d(8): mov $0x0,(%r12)
8025(5): sub $0x1,0x18(%r13)
802a(4): add $0x10,%r12
802e(4): cmp %r12,0x8(%r13)
8032(6): jnbe 0xffffff36(%rip)
8038(4): add $0x8,%rsp
803c(5): mov $0x1,%eax
8041(1): pop %rbx
8042(1): pop %rbp
8043(2): pop %r12
8045(2): pop %r13
8047(2): pop %r14
8049(2): pop %r15
804b(1): ret near (%rsp)
804c(4): nop 0x0(%rax)
8050(3): mov %r15,(%rax)
8053(5): add $0x1,0x18(%rbp)
8058(2): jmp 0xffffffc5(%rip)
805a(6): nop 0x0(%rax,%rax,1)
8060(5): mov $0x10,%edi
8065(5): call 0xffff9a9b(%rip)
806a(3): test %rax,%rax
806d(2): jnz 0xffffffa1(%rip)
806f(4): add $0x8,%rsp
8073(2): xor %eax,%eax
8075(1): pop %rbx
8076(1): pop %rbp
8077(2): pop %r12
8079(2): pop %r13
807b(2): pop %r14
807d(2): pop %r15
807f(1): ret near (%rsp)

"hash_get_n_buckets" :
8080(4): mov 0x10(%rdi),%rax
8084(1): ret near (%rsp)

"hash_get_n_buckets_used" :
8090(4): mov 0x18(%rdi),%rax
8094(1): ret near (%rsp)

"hash_get_n_entries" :
80a0(4): mov 0x20(%rdi),%rax
80a4(1): ret near (%rsp)

"hash_get_max_bucket_length" :
80b0(3): mov (%rdi),%rsi
80b3(4): mov 0x8(%rdi),%rdi
80b7(2): xor %eax,%eax
80b9(3): cmp %rdi,%rsi
80bc(2): jnb 0x3b(%rip)
80be(2): nop 
80c0(4): cmp $0x0,(%rsi)
80c4(2): jz 0x28(%rip)
80c6(4): mov 0x8(%rsi),%rdx
80ca(5): mov $0x1,%ecx
80cf(3): test %rdx,%rdx
80d2(2): jz 0x13(%rip)
80d4(4): nop 0x0(%rax)
80d8(4): mov 0x8(%rdx),%rdx
80dc(4): add $0x1,%rcx
80e0(3): test %rdx,%rdx
80e3(2): jnz 0xfffffff5(%rip)
80e5(3): cmp %rcx,%rax
80e8(4): cmovnae %rcx,%rax
80ec(4): add $0x10,%rsi
80f0(3): cmp %rdi,%rsi
80f3(2): jb 0xffffffcd(%rip)
80f5(2): REP ret near (%rsp)
80f7(2): REP ret near (%rsp)

"hash_table_ok" :
8100(3): mov (%rdi),%rcx
8103(4): mov 0x8(%rdi),%r8
8107(2): xor %edx,%edx
8109(2): xor %esi,%esi
810b(3): cmp %r8,%rcx
810e(2): jnb 0x38(%rip)
8110(4): cmp $0x0,(%rcx)
8114(2): jz 0x29(%rip)
8116(4): mov 0x8(%rcx),%rax
811a(4): add $0x1,%rsi
811e(4): add $0x1,%rdx
8122(3): test %rax,%rax
8125(2): jz 0x18(%rip)
8127(9): nop 0x0(%rax,%rax,1)
8130(4): mov 0x8(%rax),%rax
8134(4): add $0x1,%rdx
8138(3): test %rax,%rax
813b(2): jnz 0xfffffff5(%rip)
813d(4): add $0x10,%rcx
8141(3): cmp %r8,%rcx
8144(2): jb 0xffffffcc(%rip)
8146(2): xor %eax,%eax
8148(4): cmp %rsi,0x18(%rdi)
814c(2): jz 0x4(%rip)
814e(2): REP ret near (%rsp)
8150(4): cmp %rdx,0x20(%rdi)
8154(3): setz %al
8157(1): ret near (%rsp)

"hash_print_statistics" :
8160(2): push %r13
8162(2): push %r12
8164(3): mov %rsi,%r12
8167(1): push %rbp
8168(1): push %rbx
8169(2): xor %ebx,%ebx
816b(4): sub $0x8,%rsp
816f(3): mov (%rdi),%rsi
8172(4): mov 0x20(%rdi),%rcx
8176(4): mov 0x10(%rdi),%rbp
817a(4): mov 0x18(%rdi),%r13
817e(4): mov 0x8(%rdi),%rdi
8182(3): cmp %rdi,%rsi
8185(2): jnb 0x40(%rip)
8187(9): nop 0x0(%rax,%rax,1)
8190(4): cmp $0x0,(%rsi)
8194(2): jz 0x28(%rip)
8196(4): mov 0x8(%rsi),%rax
819a(5): mov $0x1,%edx
819f(3): test %rax,%rax
81a2(2): jz 0x13(%rip)
81a4(4): nop 0x0(%rax)
81a8(4): mov 0x8(%rax),%rax
81ac(4): add $0x1,%rdx
81b0(3): test %rax,%rax
81b3(2): jnz 0xfffffff5(%rip)
81b5(3): cmp %rdx,%rbx
81b8(4): cmovnae %rdx,%rbx
81bc(4): add $0x10,%rsi
81c0(3): cmp %rdi,%rsi
81c3(2): jb 0xffffffcd(%rip)
81c5(7): lea 0x3018(%rip),%rdx
81cc(5): mov $0x1,%esi
81d1(3): mov %r12,%rdi
81d4(2): xor %eax,%eax
81d6(5): call 0xffff9a6a(%rip)
81db(7): lea 0x301a(%rip),%rdx
81e2(2): xor %eax,%eax
81e4(3): mov %rbp,%rcx
81e7(5): mov $0x1,%esi
81ec(3): mov %r12,%rdi
81ef(5): call 0xffff9a51(%rip)
81f4(3): test %r13,%r13
81f7(2): js 0x69(%rip)
81f9(4): pxor %xmm0,%xmm0
81fd(3): test %rbp,%rbp
8200(5): cvtsi2sd %r13,%xmm0
8205(8): mulsd 0x308b(%rip),%xmm0
820d(2): js 0x7c(%rip)
820f(4): pxor %xmm1,%xmm1
8213(5): cvtsi2sd %rbp,%xmm1
8218(4): divsd %xmm1,%xmm0
821c(7): lea 0x300d(%rip),%rdx
8223(3): mov %r13,%rcx
8226(3): mov %r12,%rdi
8229(5): mov $0x1,%esi
822e(5): mov $0x1,%eax
8233(5): call 0xffff9a0d(%rip)
8238(4): add $0x8,%rsp
823c(3): mov %rbx,%rcx
823f(3): mov %r12,%rdi
8242(1): pop %rbx
8243(1): pop %rbp
8244(2): pop %r12
8246(2): pop %r13
8248(7): lea 0x2fc5(%rip),%rdx
824f(5): mov $0x1,%esi
8254(2): xor %eax,%eax
8256(5): jmp 0xffff99ea(%rip)
825b(5): nop 0x0(%rax,%rax,1)
8260(3): mov %r13,%rax
8263(3): mov %r13,%rdx
8266(4): pxor %xmm0,%xmm0
826a(3): shr $0x1,%rax
826d(3): and $0x1,%edx
8270(3): or %rdx,%rax
8273(3): test %rbp,%rbp
8276(5): cvtsi2sd %rax,%xmm0
827b(4): addsd %xmm0,%xmm0
827f(8): mulsd 0x3011(%rip),%xmm0
8287(2): jns 0xffffff88(%rip)
8289(3): mov %rbp,%rax
828c(4): pxor %xmm1,%xmm1
8290(3): shr $0x1,%rax
8293(3): and $0x1,%ebp
8296(3): or %rbp,%rax
8299(5): cvtsi2sd %rax,%xmm1
829e(4): addsd %xmm1,%xmm1
82a2(5): jmp 0xffffff76(%rip)

"hash_lookup" :
82b0(2): push %r12
82b2(1): push %rbp
82b3(3): mov %rdi,%r12
82b6(1): push %rbx
82b7(3): mov %rsi,%rbp
82ba(5): call 0xfffffab6(%rip)
82bf(3): mov (%rax),%rsi
82c2(3): test %rsi,%rsi
82c5(2): jz 0x28(%rip)
82c7(3): mov %rax,%rbx
82ca(2): jmp 0x9(%rip)
82cc(4): nop 0x0(%rax)
82d0(3): mov (%rbx),%rsi
82d3(3): cmp %rbp,%rsi
82d6(2): jz 0x19(%rip)
82d8(3): mov %rbp,%rdi
82db(5): call 0x38(%r12)
82e0(2): test %al,%al
82e2(2): jnz 0x1e(%rip)
82e4(4): mov 0x8(%rbx),%rbx
82e8(3): test %rbx,%rbx
82eb(2): jnz 0xffffffe5(%rip)
82ed(2): xor %esi,%esi
82ef(1): pop %rbx
82f0(3): mov %rsi,%rax
82f3(1): pop %rbp
82f4(2): pop %r12
82f6(1): ret near (%rsp)
82f7(9): nop 0x0(%rax,%rax,1)
8300(3): mov (%rbx),%rsi
8303(1): pop %rbx
8304(1): pop %rbp
8305(3): mov %rsi,%rax
8308(2): pop %r12
830a(1): ret near (%rsp)

"hash_get_first" :
8310(5): cmp $0x0,0x20(%rdi)
8315(2): jz 0x2e(%rip)
8317(3): mov (%rdi),%rdx
831a(4): mov 0x8(%rdi),%rcx
831e(3): cmp %rcx,%rdx
8321(2): jnb 0x27(%rip)
8323(3): mov (%rdx),%rax
8326(3): test %rax,%rax
8329(2): jnz 0x1d(%rip)
832b(5): nop 0x0(%rax,%rax,1)
8330(4): add $0x10,%rdx
8334(3): cmp %rcx,%rdx
8337(2): jnb 0x11(%rip)
8339(3): mov (%rdx),%rax
833c(3): test %rax,%rax
833f(2): jz 0xfffffff1(%rip)
8341(2): REP ret near (%rsp)
8343(2): xor %eax,%eax
8345(1): ret near (%rsp)
8346(2): REP ret near (%rsp)
8348(4): sub $0x8,%rsp
834c(5): call 0xffff9544(%rip)

"hash_get_next" :
8360(1): push %rbp
8361(1): push %rbx
8362(3): mov %rdi,%rbp
8365(3): mov %rsi,%rbx
8368(4): sub $0x8,%rsp
836c(5): call 0xfffffa04(%rip)
8371(3): mov %rax,%rdx
8374(3): mov %rax,%rcx
8377(3): mov (%rdx),%rax
837a(4): mov 0x8(%rdx),%rdx
837e(3): cmp %rbx,%rax
8381(2): jz 0x18(%rip)
8383(5): nop 0x0(%rax,%rax,1)
8388(3): test %rdx,%rdx
838b(2): jz 0x13(%rip)
838d(3): mov (%rdx),%rax
8390(4): mov 0x8(%rdx),%rdx
8394(3): cmp %rbx,%rax
8397(2): jnz 0xfffffff1(%rip)
8399(3): test %rdx,%rdx
839c(2): jnz 0x2c(%rip)
839e(4): mov 0x8(%rbp),%rdx
83a2(2): jmp 0xe(%rip)
83a4(4): nop 0x0(%rax)
83a8(3): mov (%rcx),%rax
83ab(3): test %rax,%rax
83ae(2): jnz 0xd(%rip)
83b0(4): add $0x10,%rcx
83b4(3): cmp %rcx,%rdx
83b7(2): jnbe 0xfffffff1(%rip)
83b9(2): xor %eax,%eax
83bb(4): add $0x8,%rsp
83bf(1): pop %rbx
83c0(1): pop %rbp
83c1(1): ret near (%rsp)
83c2(6): nop 0x0(%rax,%rax,1)
83c8(3): mov (%rdx),%rax
83cb(4): add $0x8,%rsp
83cf(1): pop %rbx
83d0(1): pop %rbp
83d1(1): ret near (%rsp)

"hash_get_entries" :
83e0(3): mov (%rdi),%r9
83e3(4): cmp %r9,0x8(%rdi)
83e7(2): jbe 0x5b(%rip)
83e9(3): xor %r8d,%r8d
83ec(3): mov (%r9),%rcx
83ef(3): test %rcx,%rcx
83f2(2): jz 0x3b(%rip)
83f4(3): cmp %r8,%rdx
83f7(2): jbe 0x40(%rip)
83f9(4): mov %rcx,0x0(%rsi,%r8,8)
83fd(4): mov 0x8(%r9),%rcx
8401(4): lea 0x1(%r8),%rax
8405(3): test %rcx,%rcx
8408(2): jz 0x22(%rip)
840a(6): nop 0x0(%rax,%rax,1)
8410(3): cmp %rax,%rdx
8413(2): jz 0x2d(%rip)
8415(3): mov (%rcx),%r8
8418(4): add $0x1,%rax
841c(5): mov %r8,0xfffffff8(%rsi,%rax,8)
8421(4): mov 0x8(%rcx),%rcx
8425(3): test %rcx,%rcx
8428(2): jnz 0xffffffe8(%rip)
842a(3): mov %rax,%r8
842d(4): add $0x10,%r9
8431(4): cmp %r9,0x8(%rdi)
8435(2): jnbe 0xffffffb7(%rip)
8437(3): mov %r8,%rax
843a(1): ret near (%rsp)
843b(5): nop 0x0(%rax,%rax,1)
8440(2): REP ret near (%rsp)
8442(2): xor %eax,%eax
8444(1): ret near (%rsp)

"hash_do_for_each" :
8450(2): push %r15
8452(2): push %r14
8454(2): push %r13
8456(2): push %r12
8458(1): push %rbp
8459(1): push %rbx
845a(4): sub $0x8,%rsp
845e(3): mov (%rdi),%r14
8461(4): cmp %r14,0x8(%rdi)
8465(2): jbe 0x51(%rip)
8467(3): mov %rdx,%r13
846a(3): mov %rsi,%r12
846d(3): mov %rdi,%r15
8470(2): xor %ebp,%ebp
8472(3): mov (%r14),%rdi
8475(3): test %rdi,%rdi
8478(2): jz 0x22(%rip)
847a(3): mov %r14,%rbx
847d(2): jmp 0x6(%rip)
847f(1): nop 
8480(3): mov (%rbx),%rdi
8483(3): mov %r13,%rsi
8486(3): call %r12
8489(2): test %al,%al
848b(2): jz 0x19(%rip)
848d(4): mov 0x8(%rbx),%rbx
8491(4): add $0x1,%rbp
8495(3): test %rbx,%rbx
8498(2): jnz 0xffffffe8(%rip)
849a(4): add $0x10,%r14
849e(4): cmp %r14,0x8(%r15)
84a2(2): jnbe 0xffffffd0(%rip)
84a4(4): add $0x8,%rsp
84a8(3): mov %rbp,%rax
84ab(1): pop %rbx
84ac(1): pop %rbp
84ad(2): pop %r12
84af(2): pop %r13
84b1(2): pop %r14
84b3(2): pop %r15
84b5(1): ret near (%rsp)
84b6(2): xor %ebp,%ebp
84b8(2): jmp 0xffffffec(%rip)

"hash_string" :
84c0(3): movzx (%rdi),%ecx
84c3(2): xor %edx,%edx
84c5(2): test %cl,%cl
84c7(2): jz 0x26(%rip)
84c9(7): nop 0x0(%rax)
84d0(3): mov %rdx,%rax
84d3(4): add $0x1,%rdi
84d7(4): shl/sal $0x5,%rax
84db(3): sub %rdx,%rax
84de(2): xor %edx,%edx
84e0(3): add %rcx,%rax
84e3(3): movzx (%rdi),%ecx
84e6(3): div %rsi,%rax
84e9(2): test %cl,%cl
84eb(2): jnz 0xffffffe5(%rip)
84ed(3): mov %rdx,%rax
84f0(1): ret near (%rsp)

"hash_reset_tuning" :
8500(a): mov $0x4575657221408423936,%rax
850a(4): mov $0x0,0x10(%rdi)
850e(3): mov %rax,(%rdi)
8511(a): mov $0x4590573145673223373,%rax
851b(4): mov %rax,0x8(%rdi)
851f(1): ret near (%rsp)

"hash_initialize" :
8520(2): push %r15
8522(2): push %r14
8524(7): lea 0xfffff825(%rip),%rax
852b(2): push %r13
852d(2): push %r12
852f(3): mov %rdx,%r12
8532(1): push %rbp
8533(1): push %rbx
8534(3): mov %rcx,%r13
8537(3): mov %rdi,%rbp
853a(5): mov $0x50,%edi
853f(3): mov %rsi,%r15
8542(4): sub $0x8,%rsp
8546(3): test %rdx,%rdx
8549(3): mov %r8,%r14
854c(4): cmove %rax,%r12
8550(7): lea 0xfffff809(%rip),%rax
8557(3): test %rcx,%rcx
855a(4): cmove %rax,%r13
855e(5): call 0xffff95a2(%rip)
8563(3): test %rax,%rax
8566(3): mov %rax,%rbx
8569(6): jz 0xb1(%rip)
856f(3): test %r15,%r15
8572(4): lea 0x28(%rax),%rdi
8576(6): jz 0xba(%rip)
857c(4): mov %r15,0x28(%rax)
8580(5): call 0xfffff940(%rip)
8585(2): test %al,%al
8587(6): jz 0x89(%rip)
858d(5): cmp $0x0,0x10(%r15)
8592(6): jz 0xfe(%rip)
8598(3): mov %rbp,%rdi
859b(5): call 0xfffff715(%rip)
85a0(5): mov $0x8,%edx
85a5(3): mov %rax,%rbp
85a8(2): xor %ecx,%ecx
85aa(3): mov %rdx,%rax
85ad(3): mul %rax,%rbp,%rdx
85b0(6): jo 0x11a(%rip)
85b6(3): test %rax,%rax
85b9(2): js 0x57(%rip)
85bb(3): test %rcx,%rcx
85be(2): jnz 0x52(%rip)
85c0(3): test %rbp,%rbp
85c3(4): mov %rbp,0x10(%rbx)
85c7(2): jz 0x49(%rip)
85c9(5): mov $0x10,%esi
85ce(3): mov %rbp,%rdi
85d1(5): call 0xffff94bf(%rip)
85d6(3): test %rax,%rax
85d9(3): mov %rax,(%rbx)
85dc(2): jz 0x34(%rip)
85de(4): shl/sal $0x4,%rbp
85e2(8): mov $0x0,0x18(%rbx)
85ea(8): mov $0x0,0x20(%rbx)
85f2(3): add %rax,%rbp
85f5(4): mov %r12,0x30(%rbx)
85f9(4): mov %r13,0x38(%rbx)
85fd(4): mov %rbp,0x8(%rbx)
8601(4): mov %r14,0x40(%rbx)
8605(8): mov $0x0,0x48(%rbx)
860d(2): jmp 0xd(%rip)
860f(1): nop 
8610(3): mov %rbx,%rdi
8613(2): xor %ebx,%ebx
8615(5): call 0xffff967b(%rip)
861a(4): add $0x8,%rsp
861e(3): mov %rbx,%rax
8621(1): pop %rbx
8622(1): pop %rbp
8623(2): pop %r12
8625(2): pop %r13
8627(2): pop %r14
8629(2): pop %r15
862b(1): ret near (%rsp)
862c(4): nop 0x0(%rax)
8630(7): lea 0x2c29(%rip),%rax
8637(4): mov %rax,0x28(%rbx)
863b(5): call 0xfffff885(%rip)
8640(2): test %al,%al
8642(8): movss 0x2c3e(%rip),%xmm1
864a(2): jz 0xffffffc6(%rip)
864c(3): test %rbp,%rbp
864f(2): js 0x4c(%rip)
8651(4): pxor %xmm0,%xmm0
8655(5): cvtsi2ss %rbp,%xmm0
865a(4): divss %xmm1,%xmm0
865e(7): ucomiss 0x2c27(%rip),%xmm0
8665(2): jnb 0xffffffab(%rip)
8667(7): ucomiss 0x2c22(%rip),%xmm0
866e(2): jb 0x52(%rip)
8670(8): subss 0x2c18(%rip),%xmm0
8678(a): mov $0x-9223372036854775808,%rax
8682(5): cvttss2si %xmm0,%rbp
8687(3): xor %rax,%rbp
868a(5): jmp 0xffffff0e(%rip)
868f(1): nop 
8690(3): test %rbp,%rbp
8693(6): movss 0x8(%r15),%xmm1
8699(2): jns 0xffffffb8(%rip)
869b(3): mov %rbp,%rax
869e(4): pxor %xmm0,%xmm0
86a2(3): shr $0x1,%rax
86a5(3): and $0x1,%ebp
86a8(3): or %rbp,%rax
86ab(5): cvtsi2ss %rax,%xmm0
86b0(4): addss %xmm0,%xmm0
86b4(2): jmp 0xffffffa6(%rip)
86b6(a): nop 0x0(%rax,%rax,1)
86c0(5): cvttss2si %xmm0,%rbp
86c5(5): jmp 0xfffffed3(%rip)
86ca(5): mov $0x1,%ecx
86cf(5): jmp 0xfffffee7(%rip)

"hash_clear" :
86e0(2): push %r12
86e2(1): push %rbp
86e3(3): mov %rdi,%rbp
86e6(1): push %rbx
86e7(3): mov (%rdi),%r12
86ea(4): cmp 0x8(%rdi),%r12
86ee(2): jnb 0x6d(%rip)
86f0(5): cmp $0x0,(%r12)
86f5(2): jz 0x5c(%rip)
86f7(5): mov 0x8(%r12),%rbx
86fc(4): mov 0x40(%rbp),%rax
8700(3): test %rbx,%rbx
8703(2): jz 0x32(%rip)
8705(3): nop (%rax)
8708(3): test %rax,%rax
870b(2): jz 0xb(%rip)
870d(3): mov (%rbx),%rdi
8710(2): call %rax
8712(4): mov 0x40(%rbp),%rax
8716(4): mov 0x8(%rbx),%rdx
871a(4): mov 0x48(%rbp),%rcx
871e(7): mov $0x0,(%rbx)
8725(3): test %rdx,%rdx
8728(4): mov %rcx,0x8(%rbx)
872c(4): mov %rbx,0x48(%rbp)
8730(3): mov %rdx,%rbx
8733(2): jnz 0xffffffd5(%rip)
8735(3): test %rax,%rax
8738(2): jz 0x8(%rip)
873a(4): mov (%r12),%rdi
873e(2): call %rax
8740(8): mov $0x0,(%r12)
8748(9): mov $0x0,0x8(%r12)
8751(4): add $0x10,%r12
8755(4): cmp %r12,0x8(%rbp)
8759(2): jnbe 0xffffff97(%rip)
875b(8): mov $0x0,0x18(%rbp)
8763(8): mov $0x0,0x20(%rbp)
876b(1): pop %rbx
876c(1): pop %rbp
876d(2): pop %r12
876f(1): ret near (%rsp)

"hash_free" :
8770(2): push %r12
8772(1): push %rbp
8773(3): mov %rdi,%r12
8776(1): push %rbx
8777(5): cmp $0x0,0x40(%rdi)
877c(3): mov (%rdi),%rbp
877f(4): mov 0x8(%rdi),%rax
8783(2): jz 0x50(%rip)
8785(5): cmp $0x0,0x20(%rdi)
878a(2): jz 0x49(%rip)
878c(3): cmp %rax,%rbp
878f(2): jnb 0x7d(%rip)
8791(7): nop 0x0(%rax)
8798(4): mov 0x0(%rbp),%rdi
879c(3): test %rdi,%rdi
879f(2): jz 0x27(%rip)
87a1(3): mov %rbp,%rbx
87a4(2): jmp 0xf(%rip)
87a6(a): nop 0x0(%rax,%rax,1)
87b0(3): mov (%rbx),%rdi
87b3(5): call 0x40(%r12)
87b8(4): mov 0x8(%rbx),%rbx
87bc(3): test %rbx,%rbx
87bf(2): jnz 0xfffffff1(%rip)
87c1(5): mov 0x8(%r12),%rax
87c6(4): add $0x10,%rbp
87ca(3): cmp %rbp,%rax
87cd(2): jnbe 0xffffffcb(%rip)
87cf(4): mov (%r12),%rbp
87d3(3): cmp %rax,%rbp
87d6(2): jnb 0x36(%rip)
87d8(8): nop 0x0(%rax,%rax,1)
87e0(4): mov 0x8(%rbp),%rdi
87e4(3): test %rdi,%rdi
87e7(2): jz 0x1a(%rip)
87e9(7): nop 0x0(%rax)
87f0(4): mov 0x8(%rdi),%rbx
87f4(5): call 0xffff949c(%rip)
87f9(3): test %rbx,%rbx
87fc(3): mov %rbx,%rdi
87ff(2): jnz 0xfffffff1(%rip)
8801(4): add $0x10,%rbp
8805(5): cmp %rbp,0x8(%r12)
880a(2): jnbe 0xffffffd6(%rip)
880c(5): mov 0x48(%r12),%rdi
8811(3): test %rdi,%rdi
8814(2): jz 0x1d(%rip)
8816(a): nop 0x0(%rax,%rax,1)
8820(4): mov 0x8(%rdi),%rbx
8824(5): call 0xffff946c(%rip)
8829(3): test %rbx,%rbx
882c(3): mov %rbx,%rdi
882f(2): jnz 0xfffffff1(%rip)
8831(4): mov (%r12),%rdi
8835(5): call 0xffff945b(%rip)
883a(1): pop %rbx
883b(3): mov %r12,%rdi
883e(1): pop %rbp
883f(2): pop %r12
8841(5): jmp 0xffff944f(%rip)

"hash_rehash" :
8850(2): push %r12
8852(1): push %rbp
8853(3): mov %rdi,%rbp
8856(1): push %rbx
8857(4): sub $0x60,%rsp
885b(4): mov 0x28(%rdi),%r12
885f(9): mov $0x28,%rax
8868(5): mov %rax,0x58(%rsp)
886d(2): xor %eax,%eax
886f(6): cmp $0x0,0x10(%r12)
8875(2): jnz 0x53(%rip)
8877(3): test %rsi,%rsi
887a(6): js 0x17e(%rip)
8880(4): pxor %xmm0,%xmm0
8884(5): cvtsi2ss %rsi,%xmm0
8889(7): divss 0x8(%r12),%xmm0
8890(7): ucomiss 0x29f5(%rip),%xmm0
8897(6): jnb 0x139(%rip)
889d(7): ucomiss 0x29ec(%rip),%xmm0
88a4(6): jb 0x17c(%rip)
88aa(8): subss 0x29de(%rip),%xmm0
88b2(a): mov $0x-9223372036854775808,%rax
88bc(5): cvttss2si %xmm0,%rsi
88c1(3): xor %rax,%rsi
88c4(4): nop 0x0(%rax)
88c8(3): mov %rsi,%rdi
88cb(5): call 0xfffff3e5(%rip)
88d0(5): mov $0x8,%edx
88d5(3): mov %rax,%rbx
88d8(2): xor %ecx,%ecx
88da(3): mov %rdx,%rax
88dd(3): mul %rax,%rbx,%rdx
88e0(6): jo 0x19f(%rip)
88e6(3): test %rax,%rax
88e9(5): mov $0x1,%eax
88ee(4): cmovs %rax,%rcx
88f2(3): test %rbx,%rbx
88f5(6): jz 0xdb(%rip)
88fb(3): and $0x1,%ecx
88fe(6): jnz 0xd2(%rip)
8904(4): cmp %rbx,0x10(%rbp)
8908(6): jz 0x128(%rip)
890e(5): mov $0x10,%esi
8913(3): mov %rbx,%rdi
8916(5): call 0xffff917a(%rip)
891b(3): test %rax,%rax
891e(4): mov %rax,(%rsp)
8922(6): jz 0xae(%rip)
8928(5): mov %rbx,0x10(%rsp)
892d(4): shl/sal $0x4,%rbx
8931(5): mov %r12,0x28(%rsp)
8936(3): add %rax,%rbx
8939(4): mov 0x30(%rbp),%rax
893d(3): mov %rsp,%r12
8940(2): xor %edx,%edx
8942(3): mov %rbp,%rsi
8945(3): mov %r12,%rdi
8948(5): mov %rbx,0x8(%rsp)
894d(9): mov $0x0,0x18(%rsp)
8956(5): mov %rax,0x30(%rsp)
895b(4): mov 0x38(%rbp),%rax
895f(9): mov $0x0,0x20(%rsp)
8968(5): mov %rax,0x38(%rsp)
896d(4): mov 0x40(%rbp),%rax
8971(5): mov %rax,0x40(%rsp)
8976(4): mov 0x48(%rbp),%rax
897a(5): mov %rax,0x48(%rsp)
897f(5): call 0xfffff5c1(%rip)
8984(2): test %al,%al
8986(2): mov %eax,%ebx
8988(6): jnz 0xb8(%rip)
898e(5): mov 0x48(%rsp),%rax
8993(5): mov $0x1,%edx
8998(3): mov %r12,%rsi
899b(3): mov %rbp,%rdi
899e(4): mov %rax,0x48(%rbp)
89a2(5): call 0xfffff59e(%rip)
89a7(2): test %al,%al
89a9(6): jz 0xe0(%rip)
89af(2): xor %edx,%edx
89b1(3): mov %r12,%rsi
89b4(3): mov %rbp,%rdi
89b7(5): call 0xfffff589(%rip)
89bc(2): test %al,%al
89be(6): jz 0xcb(%rip)
89c4(4): mov (%rsp),%rdi
89c8(5): call 0xffff92c8(%rip)
89cd(2): jmp 0x5(%rip)
89cf(1): nop 
89d0(2): xor %ebx,%ebx
89d2(5): mov 0x58(%rsp),%rcx
89d7(9): xor $0x28,%rcx
89e0(2): mov %ebx,%eax
89e2(6): jnz 0x98(%rip)
89e8(4): add $0x60,%rsp
89ec(1): pop %rbx
89ed(1): pop %rbp
89ee(2): pop %r12
89f0(1): ret near (%rsp)
89f1(7): nop 0x0(%rax)
89f8(3): mov %rsi,%rax
89fb(4): pxor %xmm0,%xmm0
89ff(3): shr $0x1,%rax
8a02(3): and $0x1,%esi
8a05(3): or %rsi,%rax
8a08(5): cvtsi2ss %rax,%xmm0
8a0d(4): addss %xmm0,%xmm0
8a11(5): jmp 0xfffffe78(%rip)
8a16(a): nop 0x0(%rax,%rax,1)
8a20(5): cvttss2si %xmm0,%rsi
8a25(5): jmp 0xfffffea3(%rip)
8a2a(6): nop 0x0(%rax,%rax,1)
8a30(5): mov $0x1,%ebx
8a35(2): jmp 0xffffff9d(%rip)
8a37(9): nop 0x0(%rax,%rax,1)
8a40(4): mov 0x0(%rbp),%rdi
8a44(5): call 0xffff924c(%rip)
8a49(4): mov (%rsp),%rax
8a4d(4): mov %rax,0x0(%rbp)
8a51(5): mov 0x8(%rsp),%rax
8a56(4): mov %rax,0x8(%rbp)
8a5a(5): mov 0x10(%rsp),%rax
8a5f(4): mov %rax,0x10(%rbp)
8a63(5): mov 0x18(%rsp),%rax
8a68(4): mov %rax,0x18(%rbp)
8a6c(5): mov 0x48(%rsp),%rax
8a71(4): mov %rax,0x48(%rbp)
8a75(5): jmp 0xffffff5d(%rip)
8a7a(5): call 0xffff8f26(%rip)
8a7f(5): mov $0x1,%ecx
8a84(5): jmp 0xfffffe62(%rip)
8a89(5): call 0xffff8e07(%rip)

"hash_insert_if_absent" :
8a90(2): push %r13
8a92(2): push %r12
8a94(1): push %rbp
8a95(1): push %rbx
8a96(4): sub $0x18,%rsp
8a9a(9): mov $0x28,%rax
8aa3(5): mov %rax,0x8(%rsp)
8aa8(2): xor %eax,%eax
8aaa(3): test %rsi,%rsi
8aad(6): jz 0x1c0(%rip)
8ab3(3): mov %rsp,%r12
8ab6(2): xor %ecx,%ecx
8ab8(3): mov %rdx,%r13
8abb(3): mov %r12,%rdx
8abe(3): mov %rdi,%rbx
8ac1(3): mov %rsi,%rbp
8ac4(5): call 0xfffff2dc(%rip)
8ac9(3): test %rax,%rax
8acc(3): mov %rax,%rdx
8acf(2): jz 0x31(%rip)
8ad1(2): xor %eax,%eax
8ad3(3): test %r13,%r13
8ad6(2): jz 0x6(%rip)
8ad8(4): mov %rdx,0x0(%r13)
8adc(5): mov 0x8(%rsp),%rcx
8ae1(9): xor $0x28,%rcx
8aea(6): jnz 0x225(%rip)
8af0(4): add $0x18,%rsp
8af4(1): pop %rbx
8af5(1): pop %rbp
8af6(2): pop %r12
8af8(2): pop %r13
8afa(1): ret near (%rsp)
8afb(5): nop 0x0(%rax,%rax,1)
8b00(4): mov 0x18(%rbx),%rax
8b04(3): test %rax,%rax
8b07(2): js 0x79(%rip)
8b09(4): pxor %xmm1,%xmm1
8b0d(4): mov 0x28(%rbx),%rdx
8b11(5): cvtsi2ss %rax,%xmm1
8b16(4): mov 0x10(%rbx),%rax
8b1a(3): test %rax,%rax
8b1d(6): js 0x8d(%rip)
8b23(4): pxor %xmm0,%xmm0
8b27(5): cvtsi2ss %rax,%xmm0
8b2c(5): mulss 0x8(%rdx),%xmm0
8b31(3): ucomiss %xmm0,%xmm1
8b34(6): jnbe 0x9c(%rip)
8b3a(4): mov (%rsp),%r12
8b3e(5): cmp $0x0,(%r12)
8b43(6): jz 0x135(%rip)
8b49(4): mov 0x48(%rbx),%rax
8b4d(3): test %rax,%rax
8b50(6): jz 0x140(%rip)
8b56(4): mov 0x8(%rax),%rdx
8b5a(4): mov %rdx,0x48(%rbx)
8b5e(5): mov 0x8(%r12),%rdx
8b63(3): mov %rbp,(%rax)
8b66(4): mov %rdx,0x8(%rax)
8b6a(5): mov %rax,0x8(%r12)
8b6f(5): mov $0x1,%eax
8b74(5): add $0x1,0x20(%rbx)
8b79(5): jmp 0xffffff63(%rip)
8b7e(2): nop 
8b80(3): mov %rax,%rdx
8b83(4): pxor %xmm1,%xmm1
8b87(3): and $0x1,%eax
8b8a(3): shr $0x1,%rdx
8b8d(3): or %rax,%rdx
8b90(4): mov 0x10(%rbx),%rax
8b94(5): cvtsi2ss %rdx,%xmm1
8b99(4): mov 0x28(%rbx),%rdx
8b9d(3): test %rax,%rax
8ba0(4): addss %xmm1,%xmm1
8ba4(6): jns 0xffffff7f(%rip)
8baa(3): mov %rax,%rcx
8bad(4): pxor %xmm0,%xmm0
8bb1(3): shr $0x1,%rcx
8bb4(3): and $0x1,%eax
8bb7(3): or %rax,%rcx
8bba(5): cvtsi2ss %rcx,%xmm0
8bbf(4): addss %xmm0,%xmm0
8bc3(5): jmp 0xffffff69(%rip)
8bc8(8): nop 0x0(%rax,%rax,1)
8bd0(4): lea 0x28(%rbx),%rdi
8bd4(5): call 0xfffff2ec(%rip)
8bd9(4): mov 0x10(%rbx),%rax
8bdd(4): mov 0x28(%rbx),%rdx
8be1(3): test %rax,%rax
8be4(5): movss 0x8(%rdx),%xmm2
8be9(6): js 0xc7(%rip)
8bef(4): pxor %xmm0,%xmm0
8bf3(5): cvtsi2ss %rax,%xmm0
8bf8(4): mov 0x18(%rbx),%rax
8bfc(3): test %rax,%rax
8bff(6): js 0xd1(%rip)
8c05(4): pxor %xmm1,%xmm1
8c09(5): cvtsi2ss %rax,%xmm1
8c0e(3): movaps %xmm2,%xmm3
8c11(4): mulss %xmm0,%xmm3
8c15(3): ucomiss %xmm3,%xmm1
8c18(6): jbe 0xffffff22(%rip)
8c1e(4): cmp $0x0,0x10(%rdx)
8c22(5): mulss 0xc(%rdx),%xmm0
8c27(2): jnz 0x6(%rip)
8c29(4): mulss %xmm2,%xmm0
8c2d(7): ucomiss 0x2658(%rip),%xmm0
8c34(2): jnb 0x6f(%rip)
8c36(7): ucomiss 0x2653(%rip),%xmm0
8c3d(6): jnb 0xb3(%rip)
8c43(5): cvttss2si %xmm0,%rsi
8c48(3): mov %rbx,%rdi
8c4b(5): call 0xfffffc05(%rip)
8c50(2): test %al,%al
8c52(2): jz 0x51(%rip)
8c54(2): xor %ecx,%ecx
8c56(3): mov %r12,%rdx
8c59(3): mov %rbp,%rsi
8c5c(3): mov %rbx,%rdi
8c5f(5): call 0xfffff141(%rip)
8c64(3): test %rax,%rax
8c67(6): jz 0xfffffed3(%rip)
8c6d(5): call 0xffff8c23(%rip)
8c72(6): nop 0x0(%rax,%rax,1)
8c78(4): mov %rbp,(%r12)
8c7c(5): mov $0x1,%eax
8c81(5): add $0x1,0x20(%rbx)
8c86(5): add $0x1,0x18(%rbx)
8c8b(5): jmp 0xfffffe51(%rip)
8c90(5): mov $0x10,%edi
8c95(5): call 0xffff8e6b(%rip)
8c9a(3): test %rax,%rax
8c9d(6): jnz 0xfffffec1(%rip)
8ca3(5): mov $0xffffffff,%eax
8ca8(5): jmp 0xfffffe34(%rip)
8cad(3): nop (%rax)
8cb0(3): mov %rax,%rcx
8cb3(4): pxor %xmm0,%xmm0
8cb7(3): shr $0x1,%rcx
8cba(3): and $0x1,%eax
8cbd(3): or %rax,%rcx
8cc0(5): cvtsi2ss %rcx,%xmm0
8cc5(4): addss %xmm0,%xmm0
8cc9(5): jmp 0xffffff2f(%rip)
8cce(2): nop 
8cd0(3): mov %rax,%rcx
8cd3(4): pxor %xmm1,%xmm1
8cd7(3): shr $0x1,%rcx
8cda(3): and $0x1,%eax
8cdd(3): or %rax,%rcx
8ce0(5): cvtsi2ss %rcx,%xmm1
8ce5(4): addss %xmm1,%xmm1
8ce9(5): jmp 0xffffff25(%rip)
8cee(2): nop 
8cf0(8): subss 0x2598(%rip),%xmm0
8cf8(a): mov $0x-9223372036854775808,%rax
8d02(5): cvttss2si %xmm0,%rsi
8d07(3): xor %rax,%rsi
8d0a(5): jmp 0xffffff3e(%rip)
8d0f(5): call 0xffff8c91(%rip)

"hash_insert" :
8d20(1): push %rbx
8d21(3): mov %rsi,%rbx
8d24(4): sub $0x10,%rsp
8d28(3): mov %rsp,%rdx
8d2b(9): mov $0x28,%rax
8d34(5): mov %rax,0x8(%rsp)
8d39(2): xor %eax,%eax
8d3b(5): call 0xfffffd55(%rip)
8d40(3): cmp $0xff,%eax
8d43(2): jz 0x2d(%rip)
8d45(2): test %eax,%eax
8d47(2): jnz 0x6(%rip)
8d49(4): mov (%rsp),%rbx
8d4d(5): mov 0x8(%rsp),%rcx
8d52(9): xor $0x28,%rcx
8d5b(3): mov %rbx,%rax
8d5e(2): jnz 0x16(%rip)
8d60(4): add $0x10,%rsp
8d64(1): pop %rbx
8d65(1): ret near (%rsp)
8d66(a): nop 0x0(%rax,%rax,1)
8d70(2): xor %ebx,%ebx
8d72(2): jmp 0xffffffdb(%rip)
8d74(5): call 0xffff8c2c(%rip)

"hash_delete" :
8d80(2): push %r12
8d82(1): push %rbp
8d83(5): mov $0x1,%ecx
8d88(1): push %rbx
8d89(3): mov %rdi,%rbx
8d8c(4): sub $0x10,%rsp
8d90(3): mov %rsp,%rdx
8d93(9): mov $0x28,%rax
8d9c(5): mov %rax,0x8(%rsp)
8da1(2): xor %eax,%eax
8da3(5): call 0xffffeffd(%rip)
8da8(3): test %rax,%rax
8dab(3): mov %rax,%rbp
8dae(2): jz 0x11(%rip)
8db0(4): mov (%rsp),%rax
8db4(5): sub $0x1,0x20(%rbx)
8db9(4): cmp $0x0,(%rax)
8dbd(2): jz 0x23(%rip)
8dbf(5): mov 0x8(%rsp),%rcx
8dc4(9): xor $0x28,%rcx
8dcd(3): mov %rbp,%rax
8dd0(6): jnz 0x1ae(%rip)
8dd6(4): add $0x10,%rsp
8dda(1): pop %rbx
8ddb(1): pop %rbp
8ddc(2): pop %r12
8dde(1): ret near (%rsp)
8ddf(1): nop 
8de0(4): mov 0x18(%rbx),%rax
8de4(4): sub $0x1,%rax
8de8(3): test %rax,%rax
8deb(4): mov %rax,0x18(%rbx)
8def(6): js 0x101(%rip)
8df5(4): pxor %xmm0,%xmm0
8df9(5): cvtsi2ss %rax,%xmm0
8dfe(4): mov 0x10(%rbx),%rax
8e02(4): mov 0x28(%rbx),%rdx
8e06(3): test %rax,%rax
8e09(6): js 0xc7(%rip)
8e0f(4): pxor %xmm1,%xmm1
8e13(5): cvtsi2ss %rax,%xmm1
8e18(4): mulss (%rdx),%xmm1
8e1c(3): ucomiss %xmm0,%xmm1
8e1f(2): jbe 0xffffffa0(%rip)
8e21(4): lea 0x28(%rbx),%rdi
8e25(5): call 0xfffff09b(%rip)
8e2a(4): mov 0x10(%rbx),%rax
8e2e(4): mov 0x28(%rbx),%rdx
8e32(3): test %rax,%rax
8e35(6): js 0x12b(%rip)
8e3b(4): pxor %xmm0,%xmm0
8e3f(5): cvtsi2ss %rax,%xmm0
8e44(4): mov 0x18(%rbx),%rax
8e48(3): test %rax,%rax
8e4b(6): js 0xf5(%rip)
8e51(4): pxor %xmm1,%xmm1
8e55(5): cvtsi2ss %rax,%xmm1
8e5a(4): movss (%rdx),%xmm2
8e5e(4): mulss %xmm0,%xmm2
8e62(3): ucomiss %xmm1,%xmm2
8e65(6): jbe 0xffffff5a(%rip)
8e6b(4): cmp $0x0,0x10(%rdx)
8e6f(5): mulss 0x4(%rdx),%xmm0
8e74(6): jz 0xbc(%rip)
8e7a(7): ucomiss 0x240f(%rip),%xmm0
8e81(6): jnb 0x8f(%rip)
8e87(5): cvttss2si %xmm0,%rsi
8e8c(3): mov %rbx,%rdi
8e8f(5): call 0xfffff9c1(%rip)
8e94(2): test %al,%al
8e96(6): jnz 0xffffff29(%rip)
8e9c(4): mov 0x48(%rbx),%rdi
8ea0(3): test %rdi,%rdi
8ea3(2): jz 0x16(%rip)
8ea5(3): nop (%rax)
8ea8(4): mov 0x8(%rdi),%r12
8eac(5): call 0xffff8de4(%rip)
8eb1(3): test %r12,%r12
8eb4(3): mov %r12,%rdi
8eb7(2): jnz 0xfffffff1(%rip)
8eb9(8): mov $0x0,0x48(%rbx)
8ec1(5): jmp 0xfffffefe(%rip)
8ec6(a): nop 0x0(%rax,%rax,1)
8ed0(3): mov %rax,%rcx
8ed3(4): pxor %xmm1,%xmm1
8ed7(3): shr $0x1,%rcx
8eda(3): and $0x1,%eax
8edd(3): or %rax,%rcx
8ee0(5): cvtsi2ss %rcx,%xmm1
8ee5(4): addss %xmm1,%xmm1
8ee9(5): jmp 0xffffff2f(%rip)
8eee(2): nop 
8ef0(3): mov %rax,%rdx
8ef3(4): pxor %xmm0,%xmm0
8ef7(3): shr $0x1,%rdx
8efa(3): and $0x1,%eax
8efd(3): or %rax,%rdx
8f00(5): cvtsi2ss %rdx,%xmm0
8f05(4): addss %xmm0,%xmm0
8f09(5): jmp 0xfffffef5(%rip)
8f0e(2): nop 
8f10(8): subss 0x2378(%rip),%xmm0
8f18(a): mov $0x-9223372036854775808,%rax
8f22(5): cvttss2si %xmm0,%rsi
8f27(3): xor %rax,%rsi
8f2a(5): jmp 0xffffff62(%rip)
8f2f(1): nop 
8f30(5): mulss 0x8(%rdx),%xmm0
8f35(5): jmp 0xffffff45(%rip)
8f3a(6): nop 0x0(%rax,%rax,1)
8f40(3): mov %rax,%rcx
8f43(4): pxor %xmm1,%xmm1
8f47(3): shr $0x1,%rcx
8f4a(3): and $0x1,%eax
8f4d(3): or %rax,%rcx
8f50(5): cvtsi2ss %rcx,%xmm1
8f55(4): addss %xmm1,%xmm1
8f59(5): jmp 0xffffff01(%rip)
8f5e(2): nop 
8f60(3): mov %rax,%rcx
8f63(4): pxor %xmm0,%xmm0
8f67(3): shr $0x1,%rcx
8f6a(3): and $0x1,%eax
8f6d(3): or %rax,%rcx
8f70(5): cvtsi2ss %rcx,%xmm0
8f75(4): addss %xmm0,%xmm0
8f79(5): jmp 0xfffffecb(%rip)
8f7e(5): call 0xffff8a22(%rip)

"i_ring_init" :
8f90(4): mov $0x1,0x1c(%rdi)
8f94(8): mov $0x0,0x14(%rdi)
8f9c(2): mov %esi,(%rdi)
8f9e(3): mov %esi,0x4(%rdi)
8fa1(3): mov %esi,0x8(%rdi)
8fa4(3): mov %esi,0xc(%rdi)
8fa7(3): mov %esi,0x10(%rdi)
8faa(1): ret near (%rsp)

"i_ring_empty" :
8fb0(4): movzx 0x1c(%rdi),%eax
8fb4(1): ret near (%rsp)

"i_ring_push" :
8fc0(4): movzx 0x1c(%rdi),%edx
8fc4(3): mov 0x14(%rdi),%ecx
8fc7(3): xor $0x1,%edx
8fca(3): movzx %dl,%edx
8fcd(2): add %edx,%ecx
8fcf(3): and $0x3,%ecx
8fd2(2): mov %ecx,%eax
8fd4(4): lea 0x0(%rdi,%rax,4),%r8
8fd8(3): mov (%r8),%eax
8fdb(3): mov %esi,(%r8)
8fde(3): mov 0x18(%rdi),%esi
8fe1(3): mov %ecx,0x14(%rdi)
8fe4(2): cmp %ecx,%esi
8fe6(2): jnz 0xa(%rip)
8fe8(2): add %esi,%edx
8fea(3): and $0x3,%edx
8fed(3): mov %edx,0x18(%rdi)
8ff0(4): mov $0x0,0x1c(%rdi)
8ff4(1): ret near (%rsp)

"i_ring_pop" :
9000(4): cmp $0x0,0x1c(%rdi)
9004(2): jnz 0x31(%rip)
9006(3): mov 0x14(%rdi),%eax
9009(3): mov 0x10(%rdi),%esi
900c(4): lea 0x0(%rdi,%rax,4),%rcx
9010(3): mov %rax,%rdx
9013(2): mov (%rcx),%eax
9015(2): mov %esi,(%rcx)
9017(3): cmp 0x18(%rdi),%edx
901a(2): jz 0x16(%rip)
901c(3): add $0x3,%edx
901f(3): and $0x3,%edx
9022(3): mov %edx,0x14(%rdi)
9025(1): ret near (%rsp)
9026(a): nop 0x0(%rax,%rax,1)
9030(4): mov $0x1,0x1c(%rdi)
9034(1): ret near (%rsp)
9035(4): sub $0x8,%rsp
9039(5): call 0xffff8857(%rip)

"locale_charset" :
9040(4): sub $0x8,%rsp
9044(5): mov $0xe,%edi
9049(5): call 0xffff8ad7(%rip)
904e(3): test %rax,%rax
9051(2): jz 0x1f(%rip)
9053(3): cmp $0x0,(%rax)
9056(7): lea 0x2243(%rip),%rdx
905d(4): cmove %rdx,%rax
9061(4): add $0x8,%rsp
9065(1): ret near (%rsp)
9066(a): nop 0x0(%rax,%rax,1)
9070(7): lea 0x2229(%rip),%rax
9077(4): add $0x8,%rsp
907b(1): ret near (%rsp)

"openat_save_fail" :
9080(1): push %rbx
9081(7): lea 0x2220(%rip),%rsi
9088(2): mov %edi,%ebx
908a(5): mov $0x5,%edx
908f(2): xor %edi,%edi
9091(5): call 0xffff88af(%rip)
9096(6): mov 0x204f7c(%rip),%edi
909c(3): mov %rax,%rdx
909f(2): mov %ebx,%esi
90a1(2): xor %eax,%eax
90a3(5): call 0xffff8afd(%rip)
90a8(5): call 0xffff87e8(%rip)

"openat_restore_fail" :
90b0(1): push %rbx
90b1(7): lea 0x2220(%rip),%rsi
90b8(2): mov %edi,%ebx
90ba(5): mov $0x5,%edx
90bf(2): xor %edi,%edi
90c1(5): call 0xffff887f(%rip)
90c6(6): mov 0x204f4c(%rip),%edi
90cc(3): mov %rax,%rdx
90cf(2): mov %ebx,%esi
90d1(2): xor %eax,%eax
90d3(5): call 0xffff8acd(%rip)
90d8(5): call 0xffff87b8(%rip)

"openat_safer" :
90e0(4): sub $0x58,%rsp
90e4(5): mov %rcx,0x38(%rsp)
90e9(2): xor %ecx,%ecx
90eb(9): mov $0x28,%rax
90f4(5): mov %rax,0x18(%rsp)
90f9(2): xor %eax,%eax
90fb(3): test $0x40,%dl
90fe(2): jnz 0x2a(%rip)
9100(2): xor %eax,%eax
9102(5): call 0xffff887e(%rip)
9107(2): mov %eax,%edi
9109(5): call 0x157(%rip)
910e(5): mov 0x18(%rsp),%rsi
9113(9): xor $0x28,%rsi
911c(2): jnz 0x2d(%rip)
911e(4): add $0x58,%rsp
9122(1): ret near (%rsp)
9123(5): nop 0x0(%rax,%rax,1)
9128(5): lea 0x60(%rsp),%rax
912d(7): mov $0x18,(%rsp)
9134(4): mov 0x38(%rsp),%ecx
9138(5): mov %rax,0x8(%rsp)
913d(5): lea 0x20(%rsp),%rax
9142(5): mov %rax,0x10(%rsp)
9147(2): jmp 0xffffffb9(%rip)
9149(5): call 0xffff8857(%rip)

"opendirat" :
9150(2): push %r13
9152(2): push %r12
9154(6): or $0x90900,%edx
915a(1): push %rbp
915b(1): push %rbx
915c(2): xor %eax,%eax
915e(3): mov %rcx,%r12
9161(4): sub $0x8,%rsp
9165(5): call 0xffffff7b(%rip)
916a(2): test %eax,%eax
916c(2): js 0x54(%rip)
916e(2): mov %eax,%edi
9170(2): mov %eax,%ebx
9172(5): call 0xffff8a7e(%rip)
9177(3): test %rax,%rax
917a(3): mov %rax,%rbp
917d(2): jz 0x1b(%rip)
917f(4): mov %ebx,(%r12)
9183(4): add $0x8,%rsp
9187(3): mov %rbp,%rax
918a(1): pop %rbx
918b(1): pop %rbp
918c(2): pop %r12
918e(2): pop %r13
9190(1): ret near (%rsp)
9191(7): nop 0x0(%rax)
9198(5): call 0xffff8708(%rip)
919d(3): mov (%rax),%r13d
91a0(3): mov %rax,%r12
91a3(2): mov %ebx,%edi
91a5(5): call 0xffff888b(%rip)
91aa(3): mov %rbp,%rax
91ad(4): mov %r13d,(%r12)
91b1(4): add $0x8,%rsp
91b5(1): pop %rbx
91b6(1): pop %rbp
91b7(2): pop %r12
91b9(2): pop %r13
91bb(1): ret near (%rsp)
91bc(4): nop 0x0(%rax)
91c0(4): add $0x8,%rsp
91c4(2): xor %ebp,%ebp
91c6(1): pop %rbx
91c7(3): mov %rbp,%rax
91ca(1): pop %rbp
91cb(2): pop %r12
91cd(2): pop %r13
91cf(1): ret near (%rsp)

"save_cwd" :
91d0(1): push %rbx
91d1(3): mov %rdi,%rbx
91d4(8): mov $0x0,0x8(%rdi)
91dc(7): lea 0x1f78(%rip),%rdi
91e3(2): xor %eax,%eax
91e5(5): mov $0x80000,%esi
91ea(5): call 0xffffe9f6(%rip)
91ef(2): mov %eax,%edx
91f1(2): mov %eax,(%rbx)
91f3(2): xor %eax,%eax
91f5(2): test %edx,%edx
91f7(2): js 0x9(%rip)
91f9(1): pop %rbx
91fa(1): ret near (%rsp)
91fb(5): nop 0x0(%rax,%rax,1)
9200(2): xor %esi,%esi
9202(2): xor %edi,%edi
9204(5): call 0xffff881c(%rip)
9209(3): test %rax,%rax
920c(4): mov %rax,0x8(%rbx)
9210(3): setz %al
9213(3): movzx %al,%eax
9216(2): neg %eax
9218(1): pop %rbx
9219(1): ret near (%rsp)

"restore_cwd" :
9220(2): mov (%rdi),%eax
9222(2): test %eax,%eax
9224(2): js 0xc(%rip)
9226(2): mov %eax,%edi
9228(5): jmp 0xffff8928(%rip)
922d(3): nop (%rax)
9230(4): mov 0x8(%rdi),%rdi
9234(5): jmp 0xfc(%rip)

"free_cwd" :
9240(1): push %rbx
9241(3): mov %rdi,%rbx
9244(2): mov (%rdi),%edi
9246(2): test %edi,%edi
9248(2): js 0x7(%rip)
924a(5): call 0xffff87e6(%rip)
924f(4): mov 0x8(%rbx),%rdi
9253(1): pop %rbx
9254(5): jmp 0xffff8a3c(%rip)

"fd_safer" :
9260(2): push %r13
9262(2): push %r12
9264(1): push %rbp
9265(1): push %rbx
9266(2): mov %edi,%ebx
9268(4): sub $0x8,%rsp
926c(3): cmp $0x2,%edi
926f(2): jnbe 0x23(%rip)
9271(5): call 0x89f(%rip)
9276(3): mov %eax,%r12d
9279(5): call 0xffff8627(%rip)
927e(3): mov (%rax),%r13d
9281(3): mov %rax,%rbp
9284(2): mov %ebx,%edi
9286(5): call 0xffff87aa(%rip)
928b(3): mov %r12d,%ebx
928e(4): mov %r13d,0x0(%rbp)
9292(4): add $0x8,%rsp
9296(2): mov %ebx,%eax
9298(1): pop %rbx
9299(1): pop %rbp
929a(2): pop %r12
929c(2): pop %r13
929e(1): ret near (%rsp)

"cdb_free" :
92a0(2): mov (%rdi),%edi
92a2(2): test %edi,%edi
92a4(2): js 0x1c(%rip)
92a6(4): sub $0x8,%rsp
92aa(5): call 0xffff8786(%rip)
92af(2): test %eax,%eax
92b1(2): jnz 0x11(%rip)
92b3(4): add $0x8,%rsp
92b7(1): ret near (%rsp)
92b8(8): nop 0x0(%rax,%rax,1)
92c0(2): REP ret near (%rsp)
92c2(7): lea 0x20b7(%rip),%rcx
92c9(7): lea 0x2038(%rip),%rsi
92d0(7): lea 0x2059(%rip),%rdi
92d7(5): mov $0x40,%edx
92dc(5): call 0xffff8724(%rip)

"cdb_advance_fd" :
92f0(1): push %rbp
92f1(1): push %rbx
92f2(3): mov %rdi,%rbx
92f5(2): xor %eax,%eax
92f7(5): mov $0x10900,%edx
92fc(4): sub $0x8,%rsp
9300(2): mov (%rdi),%edi
9302(5): call 0xffff867e(%rip)
9307(2): test %eax,%eax
9309(2): js 0x17(%rip)
930b(2): mov %eax,%ebp
930d(3): mov %rbx,%rdi
9310(5): call 0xffffff90(%rip)
9315(2): mov %ebp,(%rbx)
9317(2): xor %eax,%eax
9319(4): add $0x8,%rsp
931d(1): pop %rbx
931e(1): pop %rbp
931f(1): ret near (%rsp)
9320(5): mov $0xffffffff,%eax
9325(2): jmp 0xfffffff4(%rip)

"chdir_long" :
9330(2): push %r15
9332(2): push %r14
9334(2): push %r13
9336(2): push %r12
9338(1): push %rbp
9339(1): push %rbx
933a(3): mov %rdi,%rbp
933d(4): sub $0x18,%rsp
9341(9): mov $0x28,%rax
934a(5): mov %rax,0x8(%rsp)
934f(2): xor %eax,%eax
9351(5): call 0xffff863f(%rip)
9356(2): test %eax,%eax
9358(2): mov %eax,%ebx
935a(2): jz 0xf(%rip)
935c(5): call 0xffff8544(%rip)
9361(3): cmp $0x24,(%rax)
9364(3): mov %rax,%r14
9367(2): jz 0x29(%rip)
9369(5): mov 0x8(%rsp),%rcx
936e(9): xor $0x28,%rcx
9377(2): mov %ebx,%eax
9379(6): jnz 0x208(%rip)
937f(4): add $0x18,%rsp
9383(1): pop %rbx
9384(1): pop %rbp
9385(2): pop %r12
9387(2): pop %r13
9389(2): pop %r14
938b(2): pop %r15
938d(1): ret near (%rsp)
938e(2): nop 
9390(3): mov %rbp,%rdi
9393(5): call 0xffff85cd(%rip)
9398(3): test %rax,%rax
939b(3): mov %rax,%r12
939e(8): mov $0xffffff9c,0x4(%rsp)
93a6(6): jz 0x1e0(%rip)
93ac(6): cmp $0xfff,%rax
93b2(6): jbe 0x1f3(%rip)
93b8(7): lea 0x2011(%rip),%rsi
93bf(3): mov %rbp,%rdi
93c2(5): call 0xffff867e(%rip)
93c7(4): cmp $0x2,%rax
93cb(3): mov %rax,%rbx
93ce(6): jz 0xd2(%rip)
93d4(3): test %rax,%rax
93d7(3): mov %rbp,%r15
93da(6): jnz 0x166(%rip)
93e0(4): cmp $0x2f,(%r15)
93e4(6): jz 0x1ff(%rip)
93ea(3): add %r12,%rbp
93ed(3): cmp %rbp,%r15
93f0(6): jnbe 0x1d4(%rip)
93f6(3): mov %rbp,%rax
93f9(5): lea 0x4(%rsp),%r12
93fe(3): sub %r15,%rax
9401(6): cmp $0xfff,%rax
9407(3): mov %r12,%r13
940a(2): jnle 0x62(%rip)
940c(5): jmp 0x104(%rip)
9411(7): nop 0x0(%rax)
9418(3): mov $0x0,(%rax)
941b(3): sub %r15,%rax
941e(6): cmp $0xfff,%rax
9424(6): jnle 0x13e(%rip)
942a(3): mov %r15,%rsi
942d(3): mov %r12,%rdi
9430(3): mov %r12,%r13
9433(5): call 0xfffffebd(%rip)
9438(2): test %eax,%eax
943a(3): mov $0x2f,(%rbx)
943d(6): jnz 0xbb(%rip)
9443(4): add $0x1,%rbx
9447(7): lea 0x1f82(%rip),%rsi
944e(3): mov %rbx,%rdi
9451(5): call 0xffff85ef(%rip)
9456(4): lea 0x0(%rbx,%rax,1),%r15
945a(3): mov %rbp,%rax
945d(3): sub %r15,%rax
9460(6): cmp $0xfff,%rax
9466(6): jle 0xaa(%rip)
946c(5): mov $0x1000,%edx
9471(5): mov $0x2f,%esi
9476(3): mov %r15,%rdi
9479(5): call 0xffff8737(%rip)
947e(3): test %rax,%rax
9481(3): mov %rax,%rbx
9484(2): jnz 0xffffff94(%rip)
9486(7): mov $0x24,(%r14)
948d(5): mov $0xffffffff,%ebx
9492(5): jmp 0xfffffed7(%rip)
9497(9): nop 0x0(%rax,%rax,1)
94a0(5): lea 0xfffffffd(%r12),%rdx
94a5(4): lea 0x3(%rbp),%rdi
94a9(5): mov $0x2f,%esi
94ae(5): call 0xffff85b2(%rip)
94b3(3): test %rax,%rax
94b6(3): mov %rax,%rbx
94b9(2): jz 0x4d(%rip)
94bb(5): lea 0x4(%rsp),%r13
94c0(3): mov $0x0,(%rax)
94c3(3): mov %rbp,%rsi
94c6(3): mov %r13,%rdi
94c9(5): call 0xfffffe27(%rip)
94ce(2): test %eax,%eax
94d0(3): mov $0x2f,(%rbx)
94d3(2): jnz 0x25(%rip)
94d5(4): add $0x1,%rbx
94d9(7): lea 0x1ef0(%rip),%rsi
94e0(3): mov %rbx,%rdi
94e3(5): call 0xffff855d(%rip)
94e8(4): lea 0x0(%rbx,%rax,1),%r15
94ec(5): jmp 0xfffffef4(%rip)
94f1(7): nop 0x0(%rax)
94f8(3): mov (%r14),%ebx
94fb(3): mov %r13,%rdi
94fe(5): call 0xfffffda2(%rip)
9503(3): mov %ebx,(%r14)
9506(5): mov $0xffffffff,%ebx
950b(5): jmp 0xfffffe5e(%rip)
9510(3): cmp %r15,%rbp
9513(2): jbe 0x11(%rip)
9515(3): mov %r15,%rsi
9518(3): mov %r13,%rdi
951b(5): call 0xfffffdd5(%rip)
9520(2): test %eax,%eax
9522(2): jnz 0xffffffd6(%rip)
9524(4): mov 0x4(%rsp),%edi
9528(5): call 0xffff8628(%rip)
952d(2): test %eax,%eax
952f(2): mov %eax,%ebx
9531(2): jnz 0xffffffc7(%rip)
9533(3): mov %r13,%rdi
9536(5): call 0xfffffd6a(%rip)
953b(5): jmp 0xfffffe2e(%rip)
9540(5): lea 0x4(%rsp),%r13
9545(7): lea 0x1e84(%rip),%rsi
954c(3): mov %r13,%rdi
954f(5): call 0xfffffda1(%rip)
9554(2): test %eax,%eax
9556(2): jnz 0xffffffa2(%rip)
9558(5): lea 0x0(%rbp,%rbx,1),%r15
955d(5): jmp 0xfffffe83(%rip)
9562(7): lea 0x1e27(%rip),%rcx
9569(7): lea 0x1d98(%rip),%rsi
9570(7): lea 0x1df5(%rip),%rdi
9577(5): mov $0xb3,%edx
957c(5): call 0xffff8484(%rip)
9581(5): call 0xffff841f(%rip)
9586(7): lea 0x1e03(%rip),%rcx
958d(7): lea 0x1d74(%rip),%rsi
9594(7): lea 0x1da2(%rip),%rdi
959b(5): mov $0x7e,%edx
95a0(5): call 0xffff8460(%rip)
95a5(7): lea 0x1de4(%rip),%rcx
95ac(7): lea 0x1d55(%rip),%rsi
95b3(7): lea 0x1d8b(%rip),%rdi
95ba(5): mov $0x7f,%edx
95bf(5): call 0xffff8441(%rip)
95c4(7): lea 0x1dc5(%rip),%rcx
95cb(7): lea 0x1d36(%rip),%rsi
95d2(7): lea 0x1d84(%rip),%rdi
95d9(5): mov $0xa3,%edx
95de(5): call 0xffff8422(%rip)
95e3(7): lea 0x1da6(%rip),%rcx
95ea(7): lea 0x1d17(%rip),%rsi
95f1(7): lea 0x1d59(%rip),%rdi
95f8(5): mov $0xa2,%edx
95fd(5): call 0xffff8403(%rip)

"rpl_fclose" :
9610(2): push %r12
9612(1): push %rbp
9613(1): push %rbx
9614(3): mov %rdi,%rbx
9617(5): call 0xffff84b9(%rip)
961c(2): test %eax,%eax
961e(3): mov %rbx,%rdi
9621(2): js 0x56(%rip)
9623(5): call 0xffff851d(%rip)
9628(2): test %eax,%eax
962a(2): jnz 0x2e(%rip)
962c(3): mov %rbx,%rdi
962f(5): call 0x2e1(%rip)
9634(2): test %eax,%eax
9636(2): jz 0x3e(%rip)
9638(5): call 0xffff8268(%rip)
963d(3): mov (%rax),%r12d
9640(3): mov %rbx,%rdi
9643(3): mov %rax,%rbp
9646(5): call 0xffff82da(%rip)
964b(3): test %r12d,%r12d
964e(2): jnz 0x32(%rip)
9650(1): pop %rbx
9651(1): pop %rbp
9652(2): pop %r12
9654(1): ret near (%rsp)
9655(3): nop (%rax)
9658(3): mov %rbx,%rdi
965b(5): call 0xffff8475(%rip)
9660(2): xor %esi,%esi
9662(5): mov $0x1,%edx
9667(2): mov %eax,%edi
9669(5): call 0xffff8387(%rip)
966e(4): cmp $0xffffffff,%rax
9672(2): jnz 0xffffffba(%rip)
9674(3): mov %rbx,%rdi
9677(1): pop %rbx
9678(1): pop %rbp
9679(2): pop %r12
967b(5): jmp 0xffff82a5(%rip)
9680(4): mov %r12d,0x0(%rbp)
9684(5): mov $0xffffffff,%eax
9689(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
9690(2): push %r12
9692(1): push %rbp
9693(2): mov %edi,%ebp
9695(1): push %rbx
9696(4): sub $0x50,%rsp
969a(9): mov $0x28,%rax
96a3(5): mov %rax,0x18(%rsp)
96a8(2): xor %eax,%eax
96aa(5): lea 0x70(%rsp),%rax
96af(2): test %esi,%esi
96b1(5): mov %rdx,0x30(%rsp)
96b6(5): mov %rcx,0x38(%rsp)
96bb(5): mov %r8,0x40(%rsp)
96c0(5): mov %rax,0x8(%rsp)
96c5(5): lea 0x20(%rsp),%rax
96ca(5): mov %r9,0x48(%rsp)
96cf(7): mov $0x10,(%rsp)
96d6(5): mov %rax,0x10(%rsp)
96db(6): jz 0x207(%rip)
96e1(6): cmp $0x406,%esi
96e7(2): jnz 0x49(%rip)
96e9(5): mov 0x10(%rsp),%rax
96ee(7): cmp $0x0,0x204b63(%rip)
96f5(7): mov $0x18,(%rsp)
96fc(4): mov 0x10(%rax),%r12d
9700(3): mov %r12d,%edx
9703(6): js 0x130(%rip)
9709(2): xor %eax,%eax
970b(5): mov $0x406,%esi
9710(5): call 0xffff81f0(%rip)
9715(2): test %eax,%eax
9717(2): mov %eax,%ebx
9719(6): js 0x18f(%rip)
971f(a): mov $0x1,0x204b2f(%rip)
9729(2): jmp 0x47(%rip)
972b(5): nop 0x0(%rax,%rax,1)
9730(3): cmp $0xb,%esi
9733(2): jz 0x2d(%rip)
9735(2): jnle 0x5b(%rip)
9737(3): cmp $0x4,%esi
973a(6): jz 0xd6(%rip)
9740(6): jnle 0xc0(%rip)
9746(3): cmp $0x2,%esi
9749(6): jz 0xc7(%rip)
974f(2): jnle 0x11(%rip)
9751(3): cmp $0x1,%esi
9754(2): jnz 0x64(%rip)
9756(a): nop 0x0(%rax,%rax,1)
9760(2): mov %ebp,%edi
9762(2): xor %eax,%eax
9764(5): call 0xffff819c(%rip)
9769(2): mov %eax,%ebx
976b(5): nop 0x0(%rax,%rax,1)
9770(5): mov 0x18(%rsp),%rcx
9775(9): xor $0x28,%rcx
977e(2): mov %ebx,%eax
9780(6): jnz 0x15d(%rip)
9786(4): add $0x50,%rsp
978a(1): pop %rbx
978b(1): pop %rbp
978c(2): pop %r12
978e(1): ret near (%rsp)
978f(1): nop 
9790(6): cmp $0x407,%esi
9796(2): jnle 0x4a(%rip)
9798(6): cmp $0x406,%esi
979e(2): jnl 0x72(%rip)
97a0(6): cmp $0x401,%esi
97a6(2): jz 0xffffffba(%rip)
97a8(6): cmp $0x402,%esi
97ae(2): jz 0x62(%rip)
97b0(6): cmp $0x400,%esi
97b6(2): jz 0x5a(%rip)
97b8(3): mov (%rsp),%eax
97bb(3): cmp $0x2f,%eax
97be(6): jnbe 0x13c(%rip)
97c4(5): add 0x10(%rsp),%rax
97c9(3): mov (%rax),%rdx
97cc(2): mov %ebp,%edi
97ce(2): xor %eax,%eax
97d0(5): call 0xffff8130(%rip)
97d5(2): mov %eax,%ebx
97d7(2): jmp 0xffffff99(%rip)
97d9(7): nop 0x0(%rax)
97e0(6): cmp $0x409,%esi
97e6(2): jz 0x2a(%rip)
97e8(6): jl 0xffffff78(%rip)
97ee(6): cmp $0x40a,%esi
97f4(2): jnz 0xffffffc4(%rip)
97f6(5): jmp 0xffffff6a(%rip)
97fb(5): nop 0x0(%rax,%rax,1)
9800(3): cmp $0x9,%esi
9803(6): jz 0xffffff5d(%rip)
9809(2): jnle 0x7(%rip)
980b(3): cmp $0x8,%esi
980e(2): jnz 0xffffffaa(%rip)
9810(3): mov (%rsp),%eax
9813(3): cmp $0x2f,%eax
9816(6): jnbe 0xee(%rip)
981c(5): add 0x10(%rsp),%rax
9821(2): mov (%rax),%edx
9823(2): mov %ebp,%edi
9825(2): xor %eax,%eax
9827(5): call 0xffff80d9(%rip)
982c(2): mov %eax,%ebx
982e(5): jmp 0xffffff42(%rip)
9833(2): xor %esi,%esi
9835(2): xor %eax,%eax
9837(5): call 0xffff80c9(%rip)
983c(2): test %eax,%eax
983e(2): mov %eax,%ebx
9840(6): js 0xffffff30(%rip)
9846(7): cmp $0xff,0x204a0b(%rip)
984d(6): jnz 0xffffff23(%rip)
9853(2): xor %eax,%eax
9855(5): mov $0x1,%esi
985a(2): mov %ebx,%edi
985c(5): call 0xffff80a4(%rip)
9861(2): test %eax,%eax
9863(2): js 0x1e(%rip)
9865(3): or $0x1,%eax
9868(5): mov $0x2,%esi
986d(2): mov %ebx,%edi
986f(2): mov %eax,%edx
9871(2): xor %eax,%eax
9873(5): call 0xffff808d(%rip)
9878(3): cmp $0xff,%eax
987b(6): jnz 0xfffffef5(%rip)
9881(5): call 0xffff801f(%rip)
9886(3): mov (%rax),%r12d
9889(3): mov %rax,%rbp
988c(2): mov %ebx,%edi
988e(5): call 0xffff81a2(%rip)
9893(5): mov $0xffffffff,%ebx
9898(4): mov %r12d,0x0(%rbp)
989c(5): jmp 0xfffffed4(%rip)
98a1(7): nop 0x0(%rax)
98a8(5): call 0xffff7ff8(%rip)
98ad(3): cmp $0x16,(%rax)
98b0(6): jnz 0xfffffe6f(%rip)
98b6(2): xor %esi,%esi
98b8(2): xor %eax,%eax
98ba(3): mov %r12d,%edx
98bd(2): mov %ebp,%edi
98bf(5): call 0xffff8041(%rip)
98c4(2): test %eax,%eax
98c6(2): mov %eax,%ebx
98c8(6): js 0xfffffea8(%rip)
98ce(a): mov $0xffffffff,0x204980(%rip)
98d8(5): jmp 0xffffff7b(%rip)
98dd(5): call 0xffff80c3(%rip)
98e2(5): mov 0x10(%rsp),%rax
98e7(2): xor %esi,%esi
98e9(3): mov 0x10(%rax),%edx
98ec(2): xor %eax,%eax
98ee(5): call 0xffff8012(%rip)
98f3(2): mov %eax,%ebx
98f5(5): jmp 0xfffffe7b(%rip)
98fa(5): mov 0x8(%rsp),%rax
98ff(5): jmp 0xfffffeca(%rip)
9904(5): mov 0x8(%rsp),%rax
9909(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
9910(3): test %rdi,%rdi
9913(1): push %rbx
9914(3): mov %rdi,%rbx
9917(2): jz 0x13(%rip)
9919(5): call 0xffff8227(%rip)
991e(2): test %eax,%eax
9920(2): jz 0xa(%rip)
9922(6): test $0x100,(%rbx)
9928(2): jnz 0x10(%rip)
992a(3): mov %rbx,%rdi
992d(1): pop %rbx
992e(5): jmp 0xffff81e2(%rip)
9933(5): nop 0x0(%rax,%rax,1)
9938(3): mov %rbx,%rdi
993b(5): mov $0x1,%edx
9940(2): xor %esi,%esi
9942(5): call 0xe(%rip)
9947(3): mov %rbx,%rdi
994a(1): pop %rbx
994b(5): jmp 0xffff81c5(%rip)

"rpl_fseeko" :
9950(4): mov 0x8(%rdi),%rax
9954(4): cmp %rax,0x10(%rdi)
9958(2): jz 0x8(%rip)
995a(5): jmp 0xffff8286(%rip)
995f(1): nop 
9960(4): mov 0x20(%rdi),%rax
9964(4): cmp %rax,0x28(%rdi)
9968(2): jnz 0xfffffff2(%rip)
996a(5): cmp $0x0,0x48(%rdi)
996f(2): jnz 0xffffffeb(%rip)
9971(2): push %r12
9973(1): push %rbp
9974(3): mov %edx,%r12d
9977(1): push %rbx
9978(3): mov %rsi,%rbp
997b(3): mov %rdi,%rbx
997e(5): call 0xffff8152(%rip)
9983(3): mov %r12d,%edx
9986(3): mov %rbp,%rsi
9989(2): mov %eax,%edi
998b(5): call 0xffff8065(%rip)
9990(4): cmp $0xffffffff,%rax
9994(2): jz 0xe(%rip)
9996(3): and $0xef,(%rbx)
9999(7): mov %rax,0x90(%rbx)
99a0(2): xor %eax,%eax
99a2(1): pop %rbx
99a3(1): pop %rbp
99a4(2): pop %r12
99a6(1): ret near (%rsp)

"openat_proc_name" :
99b0(2): push %r14
99b2(2): push %r13
99b4(2): push %r12
99b6(1): push %rbp
99b7(1): push %rbx
99b8(3): mov %rdi,%rbx
99bb(4): sub $0x30,%rsp
99bf(9): mov $0x28,%rax
99c8(5): mov %rax,0x28(%rsp)
99cd(2): xor %eax,%eax
99cf(3): cmp $0x0,(%rdx)
99d2(6): jz 0x9e(%rip)
99d8(6): mov 0x20487e(%rip),%eax
99de(3): mov %esi,%r12d
99e1(3): mov %rdx,%rbp
99e4(2): test %eax,%eax
99e6(6): jz 0x9a(%rip)
99ec(2): test %eax,%eax
99ee(6): js 0x112(%rip)
99f4(3): mov %rbp,%rdi
99f7(5): call 0xffff7f69(%rip)
99fc(4): lea 0x1b(%rax),%rdi
9a00(7): cmp $0xfc0,%rdi
9a07(2): jbe 0x13(%rip)
9a09(5): call 0xffff80f7(%rip)
9a0e(3): test %rax,%rax
9a11(3): mov %rax,%rbx
9a14(6): jz 0xec(%rip)
9a1a(7): lea 0x199f(%rip),%rcx
9a21(3): mov %r12d,%r8d
9a24(7): mov $0xffffffff,%rdx
9a2b(5): mov $0x1,%esi
9a30(3): mov %rbx,%rdi
9a33(2): xor %eax,%eax
9a35(5): call 0xffff824b(%rip)
9a3a(3): movsxd %eax,%rdi
9a3d(3): mov %rbp,%rsi
9a40(3): add %rbx,%rdi
9a43(5): call 0xffff7e8d(%rip)
9a48(3): mov %rbx,%rax
9a4b(5): mov 0x28(%rsp),%rcx
9a50(9): xor $0x28,%rcx
9a59(6): jnz 0xae(%rip)
9a5f(4): add $0x30,%rsp
9a63(1): pop %rbx
9a64(1): pop %rbp
9a65(2): pop %r12
9a67(2): pop %r13
9a69(2): pop %r14
9a6b(1): ret near (%rsp)
9a6c(4): nop 0x0(%rax)
9a70(3): mov $0x0,(%rdi)
9a73(3): mov %rdi,%rax
9a76(2): jmp 0xffffffd5(%rip)
9a78(8): nop 0x0(%rax,%rax,1)
9a80(7): lea 0x1914(%rip),%rdi
9a87(5): mov $0x10900,%esi
9a8c(5): call 0xffff8134(%rip)
9a91(2): test %eax,%eax
9a93(3): mov %eax,%r13d
9a96(2): jns 0x1a(%rip)
9a98(a): mov $0xffffffff,0x2047ba(%rip)
9aa2(2): xor %eax,%eax
9aa4(2): jmp 0xffffffa7(%rip)
9aa6(a): nop 0x0(%rax,%rax,1)
9ab0(7): lea 0x18f2(%rip),%rcx
9ab7(3): mov %rsp,%r14
9aba(3): mov %eax,%r8d
9abd(5): mov $0x20,%edx
9ac2(5): mov $0x1,%esi
9ac7(3): mov %r14,%rdi
9aca(2): xor %eax,%eax
9acc(5): call 0xffff81b4(%rip)
9ad1(2): xor %esi,%esi
9ad3(3): mov %r14,%rdi
9ad6(5): call 0xffff80fa(%rip)
9adb(3): cmp $0x1,%eax
9ade(3): mov %r13d,%edi
9ae1(2): sbb %eax,%eax
9ae3(3): and $0x2,%eax
9ae6(3): sub $0x1,%eax
9ae9(6): mov %eax,0x20476d(%rip)
9aef(5): call 0xffff7f41(%rip)
9af4(6): mov 0x204762(%rip),%eax
9afa(5): jmp 0xfffffef2(%rip)
9aff(1): nop 
9b00(2): xor %eax,%eax
9b02(5): jmp 0xffffff49(%rip)
9b07(5): call 0xffff7e99(%rip)

"dup_safer" :
9b10(5): mov $0x3,%edx
9b15(2): xor %esi,%esi
9b17(2): xor %eax,%eax
9b19(5): jmp 0xfffffb77(%rip)

"__libc_csu_init" :
9b20(2): push %r15
9b22(2): push %r14
9b24(3): mov %rdx,%r15
9b27(2): push %r13
9b29(2): push %r12
9b2b(7): lea 0x203e5e(%rip),%r12
9b32(1): push %rbp
9b33(7): lea 0x203e5e(%rip),%rbp
9b3a(1): push %rbx
9b3b(3): mov %edi,%r13d
9b3e(3): mov %rsi,%r14
9b41(3): sub %r12,%rbp
9b44(4): sub $0x8,%rsp
9b48(4): sar $0x3,%rbp
9b4c(5): call 0xffff7d14(%rip)
9b51(3): test %rbp,%rbp
9b54(2): jz 0x22(%rip)
9b56(2): xor %ebx,%ebx
9b58(8): nop 0x0(%rax,%rax,1)
9b60(3): mov %r15,%rdx
9b63(3): mov %r14,%rsi
9b66(3): mov %r13d,%edi
9b69(4): call 0x0(%r12,%rbx,8)
9b6d(4): add $0x1,%rbx
9b71(3): cmp %rbx,%rbp
9b74(2): jnz 0xffffffec(%rip)
9b76(4): add $0x8,%rsp
9b7a(1): pop %rbx
9b7b(1): pop %rbp
9b7c(2): pop %r12
9b7e(2): pop %r13
9b80(2): pop %r14
9b82(2): pop %r15
9b84(1): ret near (%rsp)

"atexit" :
9ba0(7): mov 0x204461(%rip),%rdx
9ba7(2): xor %esi,%esi
9ba9(5): jmp 0xffff8067(%rip)

"_fini" :
9bb0(4): sub $0x8,%rsp
9bb4(4): add $0x8,%rsp
9bb8(1): ret near (%rsp)

