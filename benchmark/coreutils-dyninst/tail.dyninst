
"getenv@plt" :
1ad0(6): jmp 0x20e2ca(%rip)
1ad6(5): push $0x0

"raise@plt" :
1ae0(6): jmp 0x20e2c2(%rip)
1ae6(5): push $0x1

"free@plt" :
1af0(6): jmp 0x20e2ba(%rip)
1af6(5): push $0x2

"abort@plt" :
1b00(6): jmp 0x20e2b2(%rip)
1b06(5): push $0x3

"__errno_location@plt" :
1b10(6): jmp 0x20e2aa(%rip)
1b16(5): push $0x4

"strncmp@plt" :
1b20(6): jmp 0x20e2a2(%rip)
1b26(5): push $0x5

"_exit@plt" :
1b30(6): jmp 0x20e29a(%rip)
1b36(5): push $0x6

"__fpending@plt" :
1b40(6): jmp 0x20e292(%rip)
1b46(5): push $0x7

"isatty@plt" :
1b50(6): jmp 0x20e28a(%rip)
1b56(5): push $0x8

"strtod@plt" :
1b60(6): jmp 0x20e282(%rip)
1b66(5): push $0x9

"fcntl@plt" :
1b70(6): jmp 0x20e27a(%rip)
1b76(5): push $0xa

"clearerr_unlocked@plt" :
1b80(6): jmp 0x20e272(%rip)
1b86(5): push $0xb

"textdomain@plt" :
1b90(6): jmp 0x20e26a(%rip)
1b96(5): push $0xc

"strtod_l@plt" :
1ba0(6): jmp 0x20e262(%rip)
1ba6(5): push $0xd

"fclose@plt" :
1bb0(6): jmp 0x20e25a(%rip)
1bb6(5): push $0xe

"bindtextdomain@plt" :
1bc0(6): jmp 0x20e252(%rip)
1bc6(5): push $0xf

"dcgettext@plt" :
1bd0(6): jmp 0x20e24a(%rip)
1bd6(5): push $0x10

"__ctype_get_mb_cur_max@plt" :
1be0(6): jmp 0x20e242(%rip)
1be6(5): push $0x11

"strlen@plt" :
1bf0(6): jmp 0x20e23a(%rip)
1bf6(5): push $0x12

"__lxstat@plt" :
1c00(6): jmp 0x20e232(%rip)
1c06(5): push $0x13

"__stack_chk_fail@plt" :
1c10(6): jmp 0x20e22a(%rip)
1c16(5): push $0x14

"getopt_long@plt" :
1c20(6): jmp 0x20e222(%rip)
1c26(5): push $0x15

"mbrtowc@plt" :
1c30(6): jmp 0x20e21a(%rip)
1c36(5): push $0x16

"strchr@plt" :
1c40(6): jmp 0x20e212(%rip)
1c46(5): push $0x17

"__fdelt_chk@plt" :
1c50(6): jmp 0x20e20a(%rip)
1c56(5): push $0x18

"newlocale@plt" :
1c60(6): jmp 0x20e202(%rip)
1c66(5): push $0x19

"nanosleep@plt" :
1c70(6): jmp 0x20e1fa(%rip)
1c76(5): push $0x1a

"__overflow@plt" :
1c80(6): jmp 0x20e1f2(%rip)
1c86(5): push $0x1b

"strrchr@plt" :
1c90(6): jmp 0x20e1ea(%rip)
1c96(5): push $0x1c

"lseek@plt" :
1ca0(6): jmp 0x20e1e2(%rip)
1ca6(5): push $0x1d

"__assert_fail@plt" :
1cb0(6): jmp 0x20e1da(%rip)
1cb6(5): push $0x1e

"__strtoul_internal@plt" :
1cc0(6): jmp 0x20e1d2(%rip)
1cc6(5): push $0x1f

"memset@plt" :
1cd0(6): jmp 0x20e1ca(%rip)
1cd6(5): push $0x20

"close@plt" :
1ce0(6): jmp 0x20e1c2(%rip)
1ce6(5): push $0x21

"memchr@plt" :
1cf0(6): jmp 0x20e1ba(%rip)
1cf6(5): push $0x22

"read@plt" :
1d00(6): jmp 0x20e1b2(%rip)
1d06(5): push $0x23

"memcmp@plt" :
1d10(6): jmp 0x20e1aa(%rip)
1d16(5): push $0x24

"fputs_unlocked@plt" :
1d20(6): jmp 0x20e1a2(%rip)
1d26(5): push $0x25

"calloc@plt" :
1d30(6): jmp 0x20e19a(%rip)
1d36(5): push $0x26

"strcmp@plt" :
1d40(6): jmp 0x20e192(%rip)
1d46(5): push $0x27

"strtol@plt" :
1d50(6): jmp 0x20e18a(%rip)
1d56(5): push $0x28

"memcpy@plt" :
1d60(6): jmp 0x20e182(%rip)
1d66(5): push $0x29

"kill@plt" :
1d70(6): jmp 0x20e17a(%rip)
1d76(5): push $0x2a

"inotify_init@plt" :
1d80(6): jmp 0x20e172(%rip)
1d86(5): push $0x2b

"fileno@plt" :
1d90(6): jmp 0x20e16a(%rip)
1d96(5): push $0x2c

"select@plt" :
1da0(6): jmp 0x20e162(%rip)
1da6(5): push $0x2d

"__xstat@plt" :
1db0(6): jmp 0x20e15a(%rip)
1db6(5): push $0x2e

"malloc@plt" :
1dc0(6): jmp 0x20e152(%rip)
1dc6(5): push $0x2f

"fflush@plt" :
1dd0(6): jmp 0x20e14a(%rip)
1dd6(5): push $0x30

"inotify_add_watch@plt" :
1de0(6): jmp 0x20e142(%rip)
1de6(5): push $0x31

"nl_langinfo@plt" :
1df0(6): jmp 0x20e13a(%rip)
1df6(5): push $0x32

"__fxstat@plt" :
1e00(6): jmp 0x20e132(%rip)
1e06(5): push $0x33

"__freading@plt" :
1e10(6): jmp 0x20e12a(%rip)
1e16(5): push $0x34

"fwrite_unlocked@plt" :
1e20(6): jmp 0x20e122(%rip)
1e26(5): push $0x35

"realloc@plt" :
1e30(6): jmp 0x20e11a(%rip)
1e36(5): push $0x36

"setlocale@plt" :
1e40(6): jmp 0x20e112(%rip)
1e46(5): push $0x37

"__printf_chk@plt" :
1e50(6): jmp 0x20e10a(%rip)
1e56(5): push $0x38

"error@plt" :
1e60(6): jmp 0x20e102(%rip)
1e66(5): push $0x39

"memrchr@plt" :
1e70(6): jmp 0x20e0fa(%rip)
1e76(5): push $0x3a

"open@plt" :
1e80(6): jmp 0x20e0f2(%rip)
1e86(5): push $0x3b

"fseeko@plt" :
1e90(6): jmp 0x20e0ea(%rip)
1e96(5): push $0x3c

"fstatfs@plt" :
1ea0(6): jmp 0x20e0e2(%rip)
1ea6(5): push $0x3d

"__cxa_atexit@plt" :
1eb0(6): jmp 0x20e0da(%rip)
1eb6(5): push $0x3e

"exit@plt" :
1ec0(6): jmp 0x20e0d2(%rip)
1ec6(5): push $0x3f

"fwrite@plt" :
1ed0(6): jmp 0x20e0ca(%rip)
1ed6(5): push $0x40

"__fprintf_chk@plt" :
1ee0(6): jmp 0x20e0c2(%rip)
1ee6(5): push $0x41

"fflush_unlocked@plt" :
1ef0(6): jmp 0x20e0ba(%rip)
1ef6(5): push $0x42

"mbsinit@plt" :
1f00(6): jmp 0x20e0b2(%rip)
1f06(5): push $0x43

"iswprint@plt" :
1f10(6): jmp 0x20e0aa(%rip)
1f16(5): push $0x44

"inotify_rm_watch@plt" :
1f20(6): jmp 0x20e0a2(%rip)
1f26(5): push $0x45

"__ctype_b_loc@plt" :
1f30(6): jmp 0x20e09a(%rip)
1f36(5): push $0x46

".plt.got" :
1f40(6): jmp 0x20e0b2(%rip)
1f46(2): nop 

"_init" :
1aa8(4): sub $0x8,%rsp
1aac(7): mov 0x20e535(%rip),%rax
1ab3(3): test %rax,%rax
1ab6(2): jz 0x4(%rip)
1ab8(2): call %rax
1aba(4): add $0x8,%rsp
1abe(1): ret near (%rsp)

"main" :
1f50(2): push %r15
1f52(2): push %r14
1f54(2): push %r13
1f56(2): push %r12
1f58(1): push %rbp
1f59(1): push %rbx
1f5a(2): mov %edi,%ebx
1f5c(3): mov %rsi,%rbp
1f5f(7): sub $0x2c8,%rsp
1f66(3): mov (%rsi),%rdi
1f69(9): mov $0x28,%rax
1f72(8): mov %rax,0x2b8(%rsp)
1f7a(2): xor %eax,%eax
1f7c(c): mov $0xa,0x90(%rsp)
1f88(5): call 0x6158(%rip)
1f8d(7): lea 0xb06d(%rip),%rsi
1f94(5): mov $0x6,%edi
1f99(5): call 0xfffffea7(%rip)
1f9e(7): lea 0x9831(%rip),%rsi
1fa5(7): lea 0x97ff(%rip),%rdi
1fac(5): call 0xfffffc14(%rip)
1fb1(7): lea 0x97f3(%rip),%rdi
1fb8(5): call 0xfffffbd8(%rip)
1fbd(7): lea 0x4a7c(%rip),%rdi
1fc4(5): call 0x961c(%rip)
1fc9(3): cmp $0x2,%ebx
1fcc(7): mov $0x0,0x20e13b(%rip)
1fd3(7): mov $0x1,0x20e13f(%rip)
1fda(7): mov $0x0,0x20e134(%rip)
1fe1(7): mov $0x0,0x20e12e(%rip)
1fe8(7): mov $0x0,0x20e129(%rip)
1fef(7): mov $0xa,0x20e11e(%rip)
1ff6(6): jz 0x3d3(%rip)
1ffc(3): cmp $0x3,%ebx
1fff(6): jz 0x3bd(%rip)
2005(3): cmp $0x4,%ebx
2008(6): jz 0x84c(%rip)
200e(2): xor %eax,%eax
2010(8): movsd 0xa948(%rip),%xmm2
2018(3): movzx %al,%edx
201b(8): lea 0xb0(%rsp),%r15
2023(5): lea 0x0(%rbp,%rax,8),%r12
2028(2): sub %edx,%ebx
202a(2): xor %ebp,%ebp
202c(6): movsd %xmm2,0x30(%rsp)
2032(6): mov $0x1,%r14d
2038(8): nop 0x0(%rax,%rax,1)
2040(7): lea 0x20d8d9(%rip),%rcx
2047(7): lea 0x9864(%rip),%rdx
204e(3): xor %r8d,%r8d
2051(3): mov %r12,%rsi
2054(2): mov %ebx,%edi
2056(5): call 0xfffffbca(%rip)
205b(3): cmp $0xff,%eax
205e(6): jz 0x494(%rip)
2064(3): cmp $0x71,%eax
2067(6): jz 0x131(%rip)
206d(2): jle 0x43(%rip)
206f(5): cmp $0x81,%eax
2074(6): jz 0x134(%rip)
207a(2): jnle 0x76(%rip)
207c(3): cmp $0x76,%eax
207f(6): jz 0x201(%rip)
2085(6): jle 0x17b(%rip)
208b(3): cmp $0x7a,%eax
208e(6): jz 0x162(%rip)
2094(3): add $0x80,%eax
2097(6): jnz 0x1bda(%rip)
209d(7): mov $0x1,0x20e076(%rip)
20a4(2): jmp 0xffffff9c(%rip)
20a6(a): nop 0x0(%rax,%rax,1)
20b0(3): cmp $0x39,%eax
20b3(2): jle 0x75(%rip)
20b5(3): cmp $0x63,%eax
20b8(6): jz 0x1e6(%rip)
20be(6): jnle 0x1d2(%rip)
20c4(3): cmp $0x46,%eax
20c7(6): jnz 0x1baa(%rip)
20cd(7): mov $0x1,0x20e044(%rip)
20d4(7): mov %r14d,0x20df45(%rip)
20db(7): mov $0x1,0x20e038(%rip)
20e2(5): jmp 0xffffff5e(%rip)
20e7(9): nop 0x0(%rax,%rax,1)
20f0(5): cmp $0x83,%eax
20f5(6): jz 0x2bb(%rip)
20fb(6): jl 0x26d(%rip)
2101(5): cmp $0x84,%eax
2106(6): jz 0x20a(%rip)
210c(5): cmp $0x85,%eax
2111(6): jnz 0x1b60(%rip)
2117(7): mov $0x1,0x20dfee(%rip)
211e(5): jmp 0xffffff22(%rip)
2123(5): nop 0x0(%rax,%rax,1)
2128(3): cmp $0x30,%eax
212b(3): mov %eax,%r13d
212e(6): jnl 0x1b1c(%rip)
2134(5): cmp $0xffffff7d,%eax
2139(6): jnz 0x1b03(%rip)
213f(7): lea 0x974e(%rip),%rax
2146(4): sub $0x8,%rsp
214a(7): mov 0x20df77(%rip),%rdi
2151(2): push $0x0
2153(7): mov 0x20ded6(%rip),%rcx
215a(7): lea 0x9718(%rip),%r9
2161(1): push %rax
2162(7): lea 0x9738(%rip),%rax
2169(7): lea 0x9719(%rip),%r8
2170(7): lea 0x9630(%rip),%rdx
2177(7): lea 0x95ae(%rip),%rsi
217e(1): push %rax
217f(2): xor %eax,%eax
2181(5): call 0x81ef(%rip)
2186(4): add $0x20,%rsp
218a(2): xor %edi,%edi
218c(5): call 0xfffffd34(%rip)
2191(7): nop 0x0(%rax)
2198(5): mov $0x2,%ebp
219d(5): jmp 0xfffffea3(%rip)
21a2(6): nop 0x0(%rax,%rax,1)
21a8(7): lea 0xa4f1(%rip),%rsi
21af(5): mov $0x5,%edx
21b4(2): xor %edi,%edi
21b6(5): call 0xfffffa1a(%rip)
21bb(7): mov 0x20df16(%rip),%rdi
21c2(7): lea 0xae38(%rip),%rcx
21c9(3): mov %rax,%r8
21cc(3): xor %r9d,%r9d
21cf(7): mov $0xffffffff,%rdx
21d6(2): xor %esi,%esi
21d8(5): call 0x8688(%rip)
21dd(7): mov %rax,0x20de34(%rip)
21e4(5): jmp 0xfffffe5c(%rip)
21e9(7): nop 0x0(%rax)
21f0(7): mov $0x0,0x20df1d(%rip)
21f7(5): jmp 0xfffffe49(%rip)
21fc(4): nop 0x0(%rax)
2200(3): cmp $0x73,%eax
2203(6): jnz 0x1a6e(%rip)
2209(7): lea 0x4750(%rip),%rcx
2210(7): mov 0x20dec1(%rip),%rdi
2217(2): xor %esi,%esi
2219(3): mov %r15,%rdx
221c(5): call 0x86f4(%rip)
2221(2): test %al,%al
2223(2): jz 0x1f(%rip)
2225(4): pxor %xmm3,%xmm3
2229(9): movsd 0xb0(%rsp),%xmm1
2232(4): ucomisd %xmm3,%xmm1
2236(6): movsd %xmm1,0x30(%rsp)
223c(6): jnb 0xfffffe04(%rip)
2242(7): mov 0x20de8f(%rip),%rdi
2249(5): call 0x7ba7(%rip)
224e(7): lea 0x9606(%rip),%rsi
2255(3): mov %rax,%rbx
2258(5): mov $0x5,%edx
225d(2): xor %edi,%edi
225f(5): call 0xfffff971(%rip)
2264(3): mov %rbx,%rcx
2267(3): mov %rax,%rdx
226a(2): xor %esi,%esi
226c(5): mov $0x1,%edi
2271(2): xor %eax,%eax
2273(5): call 0xfffffbed(%rip)
2278(8): nop 0x0(%rax,%rax,1)
2280(5): mov $0x1,%ebp
2285(5): jmp 0xfffffdbb(%rip)
228a(6): nop 0x0(%rax,%rax,1)
2290(3): cmp $0x66,%eax
2293(2): jz 0x7d(%rip)
2295(3): cmp $0x6e,%eax
2298(6): jnz 0x19d9(%rip)
229e(7): mov 0x20de33(%rip),%rcx
22a5(3): cmp $0x6e,%eax
22a8(7): setz 0x20de6a(%rip)
22af(3): movzx (%rcx),%edx
22b2(3): cmp $0x2b,%dl
22b5(6): jz 0x231(%rip)
22bb(3): cmp $0x2d,%dl
22be(6): jz 0x5b3(%rip)
22c4(3): cmp $0x6e,%eax
22c7(5): mov $0x5,%edx
22cc(6): jz 0x1f5(%rip)
22d2(7): lea 0x9548(%rip),%rsi
22d9(2): xor %edi,%edi
22db(5): call 0xfffff8f5(%rip)
22e0(3): mov %rax,%r8
22e3(7): mov 0x20ddee(%rip),%rdi
22ea(7): lea 0x9548(%rip),%rcx
22f1(3): xor %r9d,%r9d
22f4(7): mov $0xffffffff,%rdx
22fb(2): xor %esi,%esi
22fd(5): call 0x8563(%rip)
2302(8): mov %rax,0x90(%rsp)
230a(5): jmp 0xfffffd36(%rip)
230f(1): nop 
2310(7): mov 0x20ddc1(%rip),%rsi
2317(7): mov $0x1,0x20ddfa(%rip)
231e(3): test %rsi,%rsi
2321(6): jz 0x1b6(%rip)
2327(7): mov 0x20dd0a(%rip),%r9
232e(7): lea 0x20d7eb(%rip),%rdx
2335(7): lea 0xa61c(%rip),%rcx
233c(7): lea 0x9503(%rip),%rdi
2343(6): mov $0x4,%r8d
2349(5): call 0x4557(%rip)
234e(7): lea 0xa603(%rip),%rdx
2355(3): mov 0x0(%rdx,%rax,4),%eax
2358(6): mov %eax,0x20dcc2(%rip)
235e(5): jmp 0xfffffce2(%rip)
2363(5): nop 0x0(%rax,%rax,1)
2368(7): lea 0x94e0(%rip),%rsi
236f(5): mov $0x5,%edx
2374(2): xor %edi,%edi
2376(5): call 0xfffff85a(%rip)
237b(7): mov 0x20dd56(%rip),%rdi
2382(7): lea 0xac78(%rip),%rcx
2389(3): mov %rax,%r8
238c(3): xor %r9d,%r9d
238f(5): mov $0x7fffffff,%edx
2394(2): xor %esi,%esi
2396(5): call 0x84ca(%rip)
239b(6): mov %eax,0x20dd6f(%rip)
23a1(5): jmp 0xfffffc9f(%rip)
23a6(a): nop 0x0(%rax,%rax,1)
23b0(7): mov $0x1,0x20dd56(%rip)
23b7(5): jmp 0xfffffc89(%rip)
23bc(4): mov 0x10(%rbp),%rdi
23c0(3): cmp $0x2d,(%rdi)
23c3(6): jz 0x527(%rip)
23c9(5): call 0x5c87(%rip)
23ce(4): mov 0x8(%rbp),%rdx
23d2(6): lea 0xfffcf250(%rax),%esi
23d8(3): movzx (%rdx),%ecx
23db(4): lea 0x1(%rdx),%rdi
23df(3): cmp $0x2b,%cl
23e2(6): jz 0x45b(%rip)
23e8(3): cmp $0x2d,%cl
23eb(6): jnz 0xfffffc23(%rip)
23f1(5): cmp $0x30daf,%eax
23f6(2): jle 0x16(%rip)
23f8(2): xor %eax,%eax
23fa(4): cmp $0x63,0x1(%rdx)
23fe(3): setz %al
2401(5): cmp $0x0,0x1(%rdx,%rax,1)
2406(6): jz 0xfffffc08(%rip)
240c(3): xor %r12d,%r12d
240f(4): movsx 0x1(%rdx),%eax
2413(3): mov %rdi,%rdx
2416(2): mov %eax,%ecx
2418(3): sub $0x30,%eax
241b(3): cmp $0x9,%eax
241e(2): jnbe 0x13(%rip)
2420(4): add $0x1,%rdx
2424(3): movsx (%rdx),%eax
2427(2): mov %eax,%ecx
2429(3): sub $0x30,%eax
242c(3): cmp $0x9,%eax
242f(2): jbe 0xfffffff1(%rip)
2431(3): cmp $0x63,%cl
2434(6): jz 0xe7f(%rip)
243a(3): cmp $0x6c,%cl
243d(6): jz 0xe69(%rip)
2443(3): cmp $0x62,%cl
2446(6): jz 0xe40(%rip)
244c(3): mov %rdx,%rax
244f(6): mov $0x1,%r14d
2455(5): mov $0xa,%ecx
245a(3): xor %r13d,%r13d
245d(3): cmp $0x66,(%rax)
2460(2): jnz 0xc(%rip)
2462(4): add $0x1,%rax
2466(6): mov $0x1,%r13d
246c(3): cmp $0x0,(%rax)
246f(6): jnz 0xfffffb9f(%rip)
2475(3): cmp %rdx,%rdi
2478(6): jz 0xe1f(%rip)
247e(8): lea 0x90(%rsp),%rcx
2486(7): lea 0x9364(%rip),%r8
248d(2): xor %esi,%esi
248f(5): mov $0xa,%edx
2494(5): call 0x854c(%rip)
2499(3): and $0xfd,%eax
249c(6): jnz 0x2278(%rip)
24a2(7): mov %r12b,0x20dc6d(%rip)
24a9(7): mov %r14b,0x20dc69(%rip)
24b0(5): mov $0x1,%eax
24b5(7): mov %r13b,0x20dc5c(%rip)
24bc(5): jmp 0xfffffb54(%rip)
24c1(7): lea 0x9341(%rip),%rsi
24c8(2): xor %edi,%edi
24ca(5): call 0xfffff706(%rip)
24cf(3): mov %rax,%r8
24d2(5): jmp 0xfffffe11(%rip)
24d7(a): mov $0x2,0x20db3f(%rip)
24e1(5): jmp 0xfffffb5f(%rip)
24e6(7): mov $0x1,0x20dc29(%rip)
24ed(5): jmp 0xfffffdd7(%rip)
24f2(7): cmp $0x0,0x20dc21(%rip)
24f9(3): mov %eax,%r13d
24fc(6): jz 0x3ad(%rip)
2502(7): cmp $0x0,0x20dc0f(%rip)
2509(6): jz 0x378(%rip)
250f(7): cmp $0x2,0x20db0a(%rip)
2516(6): jz 0x165a(%rip)
251c(6): mov 0x20dbee(%rip),%edi
2522(2): test %edi,%edi
2524(2): jz 0x42(%rip)
2526(2): xor %esi,%esi
2528(5): call 0xfffff848(%rip)
252d(2): test %eax,%eax
252f(2): jz 0x37(%rip)
2531(5): call 0xfffff5df(%rip)
2536(3): cmp $0x26,(%rax)
2539(2): jnz 0x2d(%rip)
253b(7): lea 0xa276(%rip),%rsi
2542(5): mov $0x5,%edx
2547(2): xor %edi,%edi
2549(5): call 0xfffff687(%rip)
254e(2): xor %esi,%esi
2550(3): mov %rax,%rdx
2553(2): xor %edi,%edi
2555(2): xor %eax,%eax
2557(5): call 0xfffff909(%rip)
255c(a): mov $0x0,0x20dbaa(%rip)
2566(7): cmp $0x0,0x20dba9(%rip)
256d(2): jz 0x1b(%rip)
256f(8): mov 0x90(%rsp),%rax
2577(3): test %rax,%rax
257a(2): jz 0xe(%rip)
257c(4): sub $0x1,%rax
2580(8): mov %rax,0x90(%rsp)
2588(7): movsxd 0x20db41(%rip),%rax
258f(2): cmp %eax,%ebx
2591(6): jnle 0xb9d(%rip)
2597(7): lea 0x20da8a(%rip),%rbx
259e(8): mov $0x1,(%rsp)
25a6(4): mov (%rsp),%r10
25aa(3): xor %r8d,%r8d
25ad(2): xor %eax,%eax
25af(6): mov $0x1,%r9d
25b5(3): nop (%rax)
25b8(4): mov 0x0(%rbx,%rax,8),%rsi
25bc(7): lea 0x922c(%rip),%rdi
25c3(5): mov $0x2,%ecx
25c8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
25ca(3): setnbe %dl
25cd(3): sbb $0x0,%dl
25d0(2): test %dl,%dl
25d2(4): cmove %r9d,%r8d
25d6(4): add $0x1,%rax
25da(3): cmp %r10,%rax
25dd(2): jb 0xffffffdb(%rip)
25df(3): test %r8b,%r8b
25e2(2): jz 0x6e(%rip)
25e4(6): mov 0x20da36(%rip),%eax
25ea(3): cmp $0x1,%eax
25ed(6): jz 0x21eb(%rip)
25f3(7): cmp $0x0,0x20db1e(%rip)
25fa(2): jz 0x56(%rip)
25fc(7): cmp $0x0,0x20db0d(%rip)
2603(6): jnz 0x2f6(%rip)
2609(3): cmp $0x2,%eax
260c(6): jnz 0x2ed(%rip)
2612(5): cmp $0x1,(%rsp)
2617(6): jnz 0x2e2(%rip)
261d(8): lea 0x220(%rsp),%rdx
2625(2): xor %esi,%esi
2627(5): mov $0x1,%edi
262c(5): call 0xfffff7d4(%rip)
2631(2): test %eax,%eax
2633(6): jnz 0x2c6(%rip)
2639(7): mov 0x238(%rsp),%eax
2640(5): and $0xf000,%eax
2645(5): cmp $0x8000,%eax
264a(6): jz 0x2af(%rip)
2650(9): cmp $0x0,0x90(%rsp)
2659(2): jnz 0x18(%rip)
265b(7): cmp $0x0,0x20dab6(%rip)
2662(2): jnz 0xf(%rip)
2664(7): cmp $0x0,0x20daab(%rip)
266b(6): jz 0xd96(%rip)
2671(5): mov $0x60,%edx
2676(2): xor %ecx,%ecx
2678(3): mov %rdx,%rax
267b(4): mul %rax,(%rsp),%rdx
267f(6): jo 0x21b3(%rip)
2685(3): test %rax,%rax
2688(6): js 0x1e73(%rip)
268e(3): test %rcx,%rcx
2691(6): jnz 0x1e6a(%rip)
2697(4): mov (%rsp),%r14
269b(4): imul %r14,$0x60,%r15
269f(3): mov %r15,%rdi
26a2(5): mov %r15,0x60(%rsp)
26a7(5): call 0x7e29(%rip)
26ac(3): test %r14,%r14
26af(5): mov %rax,0x28(%rsp)
26b4(6): jz 0x1415(%rip)
26ba(3): mov %r15,%rcx
26bd(3): add %rax,%rcx
26c0(3): mov (%rbx),%rdx
26c3(4): add $0x60,%rax
26c7(4): add $0x8,%rbx
26cb(4): mov %rdx,0xffffffa0(%rax)
26cf(3): cmp %rax,%rcx
26d2(2): jnz 0xffffffee(%rip)
26d4(3): cmp $0x1,%ebp
26d7(2): jz 0xd(%rip)
26d9(5): cmp $0x1,(%rsp)
26de(2): jbe 0x18(%rip)
26e0(2): test %ebp,%ebp
26e2(2): jnz 0x14(%rip)
26e4(5): cmp $0x0,(%rsp)
26e9(7): mov $0x1,0x20da25(%rip)
26f0(6): jz 0x13e2(%rip)
26f6(8): lea 0x220(%rsp),%rax
26fe(5): mov 0x28(%rsp),%r15
2703(9): mov $0x0,0x10(%rsp)
270c(8): mov $0x1,0x8b(%rsp)
2714(5): mov %r13d,0x70(%rsp)
2719(5): mov %rax,0x58(%rsp)
271e(2): nop 
2720(8): mov 0x90(%rsp),%rax
2728(7): lea 0x90c0(%rip),%rdi
272f(5): mov $0x2,%ecx
2734(5): mov %rax,0x20(%rsp)
2739(3): mov (%r15),%rax
273c(3): mov %rax,%rsi
273f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2741(3): setnbe %dl
2744(3): sbb $0x0,%dl
2747(3): movsx %dl,%esi
274a(2): test %esi,%esi
274c(4): mov %esi,0x44(%rsp)
2750(6): jnz 0x1de(%rip)
2756(7): mov $0x1,0x20d9b1(%rip)
275d(8): mov $0x0,0x8(%rsp)
2765(5): mov $0x1,0x36(%r15)
276a(7): cmp $0x0,0x20d9a4(%rip)
2771(6): jnz 0x47b(%rip)
2777(3): mov (%r15),%rdi
277a(5): call 0x2266(%rip)
277f(5): mov %rax,0x48(%rsp)
2784(7): movzx 0x20d98e(%rip),%eax
278b(5): mov $0x1,%edi
2790(c): mov $0x0,0xb0(%rsp)
279c(5): mov 0x58(%rsp),%rdx
27a1(4): mov 0x8(%rsp),%esi
27a5(2): test %al,%al
27a7(4): mov %al,0x18(%rsp)
27ab(6): jnz 0x2a6(%rip)
27b1(5): call 0xfffff64f(%rip)
27b6(2): test %eax,%eax
27b8(6): jnz 0x7e6(%rip)
27be(7): movzx 0x20d951(%rip),%eax
27c5(2): mov %eax,%ecx
27c7(4): mov %al,0x18(%rsp)
27cb(7): movzx 0x20d93b(%rip),%eax
27d2(2): test %cl,%cl
27d4(6): jz 0x6e1(%rip)
27da(2): test %al,%al
27dc(6): jnz 0x84d(%rip)
27e2(6): cmp $0x0,0x20(%rsp)
27e8(6): js 0x841(%rip)
27ee(7): mov 0x238(%rsp),%eax
27f5(5): and $0xf000,%eax
27fa(5): cmp $0x8000,%eax
27ff(6): jz 0xc09(%rip)
2805(5): mov 0x20(%rsp),%rsi
280a(4): mov 0x8(%rsp),%edi
280e(5): mov $0x1,%edx
2813(5): call 0xfffff48d(%rip)
2818(4): add $0x1,%rax
281c(6): jz 0x80d(%rip)
2822(5): mov 0x20(%rsp),%rax
2827(9): mov $0xffffffff,0x20(%rsp)
2830(8): add %rax,0xb0(%rsp)
2838(5): jmp 0x819(%rip)
283d(6): cmp $0x2b8,%esi
2843(6): mov $0x1,%r12d
2849(6): jnbe 0xfffffbc6(%rip)
284f(5): jmp 0xfffff7bf(%rip)
2854(4): mov 0x10(%rbp),%rdi
2858(7): lea 0x8f8f(%rip),%rsi
285f(5): call 0xfffff4e1(%rip)
2864(2): test %eax,%eax
2866(6): jz 0xfffffb63(%rip)
286c(5): jmp 0xfffff7a2(%rip)
2871(4): add $0x1,%rcx
2875(7): mov %rcx,0x20d85c(%rip)
287c(5): jmp 0xfffffa48(%rip)
2881(7): lea 0x9e78(%rip),%rsi
2888(7): mov $0x0,0x20d88b(%rip)
288f(5): mov $0x5,%edx
2894(2): xor %edi,%edi
2896(5): call 0xfffff33a(%rip)
289b(2): xor %esi,%esi
289d(3): mov %rax,%rdx
28a0(2): xor %edi,%edi
28a2(2): xor %eax,%eax
28a4(5): call 0xfffff5bc(%rip)
28a9(6): mov 0x20d861(%rip),%edi
28af(2): test %edi,%edi
28b1(6): jz 0xfffffcb5(%rip)
28b7(7): cmp $0x0,0x20d85a(%rip)
28be(6): jnz 0xfffffc68(%rip)
28c4(7): lea 0x9ead(%rip),%rsi
28cb(2): xor %edi,%edi
28cd(5): mov $0x5,%edx
28d2(5): call 0xfffff2fe(%rip)
28d7(2): xor %esi,%esi
28d9(3): mov %rax,%rdx
28dc(2): xor %edi,%edi
28de(2): xor %eax,%eax
28e0(5): call 0xfffff580(%rip)
28e5(5): jmp 0xfffffc81(%rip)
28ea(4): cmp $0x0,0x1(%rdi)
28ee(6): jnz 0xffffff6a(%rip)
28f4(5): jmp 0xfffffad5(%rip)
28f9(2): xor %edi,%edi
28fb(5): call 0xfffff255(%rip)
2900(2): test %eax,%eax
2902(6): jz 0xfffffd4e(%rip)
2908(7): lea 0x9ee1(%rip),%rsi
290f(2): xor %edi,%edi
2911(5): mov $0x5,%edx
2916(5): call 0xfffff2ba(%rip)
291b(2): xor %esi,%esi
291d(3): mov %rax,%rdx
2920(2): xor %edi,%edi
2922(2): xor %eax,%eax
2924(5): call 0xfffff53c(%rip)
2929(5): jmp 0xfffffd27(%rip)
292e(2): xor %esi,%esi
2930(3): mov %rax,%rdi
2933(2): xor %eax,%eax
2935(5): call 0x432b(%rip)
293a(7): movzx 0x20d7d9(%rip),%ebx
2941(4): mov %eax,0x8(%rsp)
2945(2): test %bl,%bl
2947(6): jnz 0x2fd(%rip)
294d(5): cmp $0xff,0x8(%rsp)
2952(5): mov $0x1,0x36(%r15)
2957(6): jnz 0x1e79(%rip)
295d(5): call 0xfffff1b3(%rip)
2962(7): cmp $0x0,0x20d7af(%rip)
2969(3): mov %rax,%rbp
296c(2): jz 0x27(%rip)
296e(2): mov (%rax),%eax
2970(3): xor $0x1,%ebx
2973(8): mov $0xffffffff,0x38(%r15)
297b(4): mov %bl,0x34(%r15)
297f(8): mov $0x0,0x28(%r15)
2987(8): mov $0x0,0x20(%r15)
298f(4): mov %eax,0x3c(%r15)
2993(3): mov (%r15),%rdi
2996(5): call 0x204a(%rip)
299b(5): mov $0x4,%edi
29a0(3): mov %rax,%rsi
29a3(5): call 0x717d(%rip)
29a8(7): lea 0x8f32(%rip),%rsi
29af(5): mov $0x5,%edx
29b4(2): xor %edi,%edi
29b6(3): mov %rax,%rbx
29b9(5): call 0xfffff217(%rip)
29be(3): mov 0x0(%rbp),%esi
29c1(3): mov %rax,%rdx
29c4(3): mov %rbx,%rcx
29c7(2): xor %edi,%edi
29c9(2): xor %eax,%eax
29cb(5): call 0xfffff495(%rip)
29d0(5): mov $0x0,0x18(%rsp)
29d5(6): add $0x1,0x10(%rsp)
29db(5): movzx 0x18(%rsp),%ecx
29e0(4): add $0x60,%r15
29e4(7): and %cl,0x8b(%rsp)
29eb(5): mov 0x10(%rsp),%rax
29f0(4): cmp (%rsp),%rax
29f4(6): jnz 0xfffffd2c(%rip)
29fa(7): movzx 0x20d717(%rip),%eax
2a01(2): test %al,%al
2a03(4): mov %al,0x50(%rsp)
2a07(6): jnz 0x739(%rip)
2a0d(7): cmp $0x0,0x20d6fa(%rip)
2a14(6): jnz 0x841(%rip)
2a1a(8): movzx 0x8b(%rsp),%eax
2a22(3): xor $0x1,%eax
2a25(3): movzx %al,%eax
2a28(8): mov 0x2b8(%rsp),%rcx
2a30(9): xor $0x28,%rcx
2a39(6): jnz 0x1e03(%rip)
2a3f(7): add $0x2c8,%rsp
2a46(1): pop %rbx
2a47(1): pop %rbp
2a48(2): pop %r12
2a4a(2): pop %r13
2a4c(2): pop %r14
2a4e(2): pop %r15
2a50(1): ret near (%rsp)
2a51(5): call 0xfffff3af(%rip)
2a56(2): test %eax,%eax
2a58(6): jnz 0x589(%rip)
2a5e(7): movzx 0x20d6b1(%rip),%ebx
2a65(2): test %bl,%bl
2a67(6): jnz 0x611(%rip)
2a6d(7): cmp $0x0,0x20d699(%rip)
2a74(2): jnz 0x19(%rip)
2a76(7): mov 0x238(%rsp),%eax
2a7d(5): and $0xf000,%eax
2a82(5): cmp $0x8000,%eax
2a87(6): jz 0x1058(%rip)
2a8d(5): mov $0x2018,%edi
2a92(5): call 0x7a3e(%rip)
2a97(5): mov $0x2018,%edi
2a9c(3): mov %rax,%r14
2a9f(b): mov $0x0,0x2008(%rax)
2aaa(b): mov $0x0,0x2000(%rax)
2ab5(b): mov $0x0,0x2010(%rax)
2ac0(5): call 0x7a10(%rip)
2ac5(5): mov %r14,0x50(%rsp)
2aca(3): mov %rax,%rbx
2acd(9): mov $0x0,0x38(%rsp)
2ad6(5): mov %r15,0x68(%rsp)
2adb(5): nop 0x0(%rax,%rax,1)
2ae0(4): mov 0x8(%rsp),%edi
2ae4(5): mov $0x2000,%edx
2ae9(3): mov %rbx,%rsi
2aec(5): call 0x7324(%rip)
2af1(3): mov %rax,%r13
2af4(4): lea 0xffffffff(%rax),%rax
2af8(4): cmp $0xfffffffd,%rax
2afc(6): jnbe 0x15b(%rip)
2b02(7): mov %r13,0x2000(%rbx)
2b09(8): movsx 0x20d603(%rip),%r12d
2b11(4): lea 0x0(%rbx,%r13,1),%rbp
2b15(8): add %r13,0xb0(%rsp)
2b1d(3): mov %rbx,%rdi
2b20(b): mov $0x0,0x2008(%rbx)
2b2b(b): mov $0x0,0x2010(%rbx)
2b36(3): xor %r15d,%r15d
2b39(2): jmp 0x15(%rip)
2b3b(5): nop 0x0(%rax,%rax,1)
2b40(4): lea 0x1(%rax),%rdi
2b44(7): mov %rdx,0x2008(%rbx)
2b4b(3): mov %rdx,%r15
2b4e(3): mov %rbp,%rdx
2b51(3): mov %r12d,%esi
2b54(3): sub %rdi,%rdx
2b57(5): call 0xfffff199(%rip)
2b5c(3): test %rax,%rax
2b5f(4): lea 0x1(%r15),%rdx
2b63(2): jnz 0xffffffdd(%rip)
2b65(7): mov 0x2000(%r14),%rdi
2b6c(5): add %r15,0x38(%rsp)
2b71(5): lea 0x0(%r13,%rdi,1),%rax
2b76(6): cmp $0x1fff,%rax
2b7c(2): jbe 0x41(%rip)
2b7e(5): mov 0x50(%rsp),%rsi
2b83(5): mov 0x38(%rsp),%rax
2b88(7): mov %rbx,0x2010(%r14)
2b8f(7): sub 0x2008(%rsi),%rax
2b96(5): cmp %rax,0x20(%rsp)
2b9b(6): jnb 0x94(%rip)
2ba1(5): mov %rax,0x38(%rsp)
2ba6(7): mov 0x2010(%rsi),%rax
2bad(3): mov %rbx,%r14
2bb0(3): mov %rsi,%rbx
2bb3(5): mov %rax,0x50(%rsp)
2bb8(5): jmp 0xffffff28(%rip)
2bbd(3): add %r14,%rdi
2bc0(3): mov %r13,%rdx
2bc3(3): mov %rbx,%rsi
2bc6(5): call 0xfffff19a(%rip)
2bcb(7): mov 0x2000(%rbx),%rax
2bd2(7): add %rax,0x2000(%r14)
2bd9(7): mov 0x2008(%rbx),%rax
2be0(7): add %rax,0x2008(%r14)
2be7(5): jmp 0xfffffef9(%rip)
2bec(3): mov %rax,%rdi
2bef(5): call 0x1df1(%rip)
2bf4(7): cmp $0x0,0x20d415(%rip)
2bfb(7): lea 0xa3fe(%rip),%rsi
2c02(7): lea 0xa3f8(%rip),%rdx
2c09(3): mov %rax,%rcx
2c0c(5): mov $0x1,%edi
2c11(4): cmove %rsi,%rdx
2c15(7): lea 0x8a3c(%rip),%rsi
2c1c(2): xor %eax,%eax
2c1e(5): call 0xfffff232(%rip)
2c23(7): mov $0x0,0x20d3e6(%rip)
2c2a(5): jmp 0xfffffb4d(%rip)
2c2f(5): mov $0x2018,%edi
2c34(3): mov %rbx,%r14
2c37(5): call 0x7899(%rip)
2c3c(3): mov %rax,%rbx
2c3f(5): jmp 0xfffffea1(%rip)
2c44(3): add $0x1,%eax
2c47(6): jnz 0x637(%rip)
2c4d(5): mov $0x0,0x36(%r15)
2c52(5): jmp 0xfffffd0b(%rip)
2c57(3): mov %rbx,%rdi
2c5a(5): mov 0x68(%rsp),%r15
2c5f(5): call 0xffffee91(%rip)
2c64(4): add $0x1,%r13
2c68(6): jz 0xe19(%rip)
2c6e(6): cmp $0x0,0x20(%rsp)
2c74(7): mov 0x2000(%r14),%rax
2c7b(2): jz 0xb(%rip)
2c7d(3): test %rax,%rax
2c80(6): jnz 0x69b(%rip)
2c86(6): cmp $0x0,0x50(%rsp)
2c8c(2): jz 0x24(%rip)
2c8e(5): mov 0x50(%rsp),%rdi
2c93(5): nop 0x0(%rax,%rax,1)
2c98(7): mov 0x2010(%rdi),%rbx
2c9f(5): call 0xffffee51(%rip)
2ca4(3): test %rbx,%rbx
2ca7(3): mov %rbx,%rdi
2caa(2): jnz 0xffffffee(%rip)
2cac(4): nop 0x0(%rax)
2cb0(7): cmp $0x0,0x20d461(%rip)
2cb7(2): jnz 0x6c(%rip)
2cb9(5): cmp $0x0,0x44(%rsp)
2cbe(6): jz 0xfffffd17(%rip)
2cc4(4): mov 0x8(%rsp),%edi
2cc8(5): call 0xfffff018(%rip)
2ccd(2): test %eax,%eax
2ccf(6): jz 0xfffffd06(%rip)
2cd5(3): mov (%r15),%rdi
2cd8(5): call 0x1d08(%rip)
2cdd(5): mov $0x4,%edi
2ce2(3): mov %rax,%rsi
2ce5(5): call 0x6e3b(%rip)
2cea(7): lea 0x8956(%rip),%rsi
2cf1(5): mov $0x5,%edx
2cf6(2): xor %edi,%edi
2cf8(3): mov %rax,%rbx
2cfb(5): call 0xffffeed5(%rip)
2d00(3): mov %rax,%rbp
2d03(5): call 0xffffee0d(%rip)
2d08(2): mov (%rax),%esi
2d0a(3): mov %rbx,%rcx
2d0d(3): mov %rbp,%rdx
2d10(2): xor %edi,%edi
2d12(2): xor %eax,%eax
2d14(5): call 0xfffff14c(%rip)
2d19(5): mov $0x0,0x18(%rsp)
2d1e(5): jmp 0xfffffcb7(%rip)
2d23(5): movzx 0x18(%rsp),%eax
2d28(5): mov 0x58(%rsp),%rdx
2d2d(5): mov $0x1,%edi
2d32(4): mov 0x8(%rsp),%esi
2d36(3): sub $0x1,%eax
2d39(4): mov %eax,0x3c(%r15)
2d3d(5): call 0xfffff0c3(%rip)
2d42(2): test %eax,%eax
2d44(6): js 0x579(%rip)
2d4a(7): mov 0x238(%rsp),%edx
2d51(2): mov %edx,%eax
2d53(5): and $0xf000,%eax
2d58(5): sub $0x1000,%eax
2d5d(5): test $0xffffe000,%eax
2d62(2): jz 0x14(%rip)
2d64(2): mov %edx,%eax
2d66(5): and $0xb000,%eax
2d6b(5): cmp $0x8000,%eax
2d70(6): jnz 0x94(%rip)
2d76(5): cmp $0x0,0x18(%rsp)
2d7b(6): jz 0x106(%rip)
2d81(8): mov 0xb0(%rsp),%rcx
2d89(5): cmp $0x0,0x44(%rsp)
2d8e(5): mov $0x1,%eax
2d93(5): cmove 0x70(%rsp),%eax
2d98(4): mov 0x8(%rsp),%ebx
2d9c(3): mov (%r15),%rdi
2d9f(4): mov %edx,0x30(%r15)
2da3(4): mov %rcx,0x8(%r15)
2da7(8): mov 0x278(%rsp),%rcx
2daf(4): mov %ebx,0x38(%r15)
2db3(8): mov $0x0,0x58(%r15)
2dbb(4): mov %eax,0x40(%r15)
2dbf(5): mov $0x0,0x34(%r15)
2dc4(4): mov %rcx,0x10(%r15)
2dc8(8): mov 0x280(%rsp),%rcx
2dd0(4): mov %rcx,0x18(%r15)
2dd4(8): mov 0x220(%rsp),%rcx
2ddc(4): mov %rcx,0x20(%r15)
2de0(8): mov 0x228(%rsp),%rcx
2de8(4): mov %rcx,0x28(%r15)
2dec(5): call 0x1bf4(%rip)
2df1(2): mov %ebx,%edi
2df3(3): mov %rax,%rsi
2df6(5): call 0x25aa(%rip)
2dfb(4): mov %al,0x35(%r15)
2dff(5): jmp 0xfffffbd6(%rip)
2e04(7): movzx 0x20d30f(%rip),%eax
2e0b(8): mov $0xffffffff,0x3c(%r15)
2e13(7): lea 0xa1e7(%rip),%rbp
2e1a(5): mov $0x0,0x36(%r15)
2e1f(3): xor $0x1,%eax
2e22(2): test %al,%al
2e24(4): mov %al,0x34(%r15)
2e28(2): jz 0x18(%rip)
2e2a(7): lea 0x88bd(%rip),%rsi
2e31(5): mov $0x5,%edx
2e36(2): xor %edi,%edi
2e38(5): call 0xffffed98(%rip)
2e3d(3): mov %rax,%rbp
2e40(3): mov (%r15),%rdi
2e43(5): call 0x1b9d(%rip)
2e48(5): mov $0x3,%esi
2e4d(3): mov %rax,%rdx
2e50(2): xor %edi,%edi
2e52(5): call 0x6dce(%rip)
2e57(7): lea 0x99d2(%rip),%rsi
2e5e(3): mov %rax,%rbx
2e61(5): mov $0x5,%edx
2e66(2): xor %edi,%edi
2e68(5): call 0xffffed68(%rip)
2e6d(3): mov %rbp,%r8
2e70(3): mov %rax,%rdx
2e73(3): mov %rbx,%rcx
2e76(2): xor %esi,%esi
2e78(2): xor %edi,%edi
2e7a(2): xor %eax,%eax
2e7c(5): call 0xffffefe4(%rip)
2e81(7): movzx 0x20d292(%rip),%eax
2e88(3): mov (%r15),%rdi
2e8b(3): xor $0x1,%eax
2e8e(4): mov %al,0x34(%r15)
2e92(5): call 0x1b4e(%rip)
2e97(4): mov 0x8(%rsp),%edi
2e9b(3): mov %rax,%rsi
2e9e(5): call 0x1b82(%rip)
2ea3(8): mov $0xffffffff,0x38(%r15)
2eab(5): mov $0x0,0x18(%rsp)
2eb0(5): jmp 0xfffffb25(%rip)
2eb5(2): test %al,%al
2eb7(6): jz 0x1f0(%rip)
2ebd(5): mov $0x2010,%edi
2ec2(3): xor %r12d,%r12d
2ec5(5): call 0x760b(%rip)
2eca(5): mov $0x2010,%edi
2ecf(3): mov %rax,%r13
2ed2(b): mov $0x0,0x2000(%rax)
2edd(b): mov $0x0,0x2008(%rax)
2ee8(3): mov %r13,%rbp
2eeb(5): call 0x75e5(%rip)
2ef0(5): mov 0x8(%rsp),%r14d
2ef5(3): mov %rax,%rbx
2ef8(2): jmp 0x31(%rip)
2efa(3): mov %r12,%rax
2efd(7): sub 0x2000(%rbp),%rax
2f04(7): mov %rbx,0x2008(%r13)
2f0b(5): cmp %rax,0x20(%rsp)
2f10(6): jnb 0x3fc(%rip)
2f16(3): mov %rax,%r12
2f19(3): mov %rbp,%rax
2f1c(7): mov 0x2008(%rbp),%rbp
2f23(3): mov %rbx,%r13
2f26(3): mov %rax,%rbx
2f29(5): mov $0x2000,%edx
2f2e(3): mov %rbx,%rsi
2f31(3): mov %r14d,%edi
2f34(5): call 0x6edc(%rip)
2f39(4): lea 0xffffffff(%rax),%rdx
2f3d(4): cmp $0xfffffffd,%rdx
2f41(6): jnbe 0xa9b(%rip)
2f47(8): add %rax,0xb0(%rsp)
2f4f(7): mov %rax,0x2000(%rbx)
2f56(3): add %rax,%r12
2f59(7): mov 0x2000(%r13),%rdx
2f60(b): mov $0x0,0x2008(%rbx)
2f6b(4): lea 0x0(%rax,%rdx,1),%rsi
2f6f(7): cmp $0x1fff,%rsi
2f76(2): jnbe 0xffffff84(%rip)
2f78(5): lea 0x0(%r13,%rdx,1),%rdi
2f7d(3): mov %rbx,%rsi
2f80(3): mov %rax,%rdx
2f83(5): call 0xffffeddd(%rip)
2f88(7): mov 0x2000(%rbx),%rax
2f8f(7): add %rax,0x2000(%r13)
2f96(3): mov %rbx,%rax
2f99(3): mov %r13,%rbx
2f9c(2): jmp 0xffffff87(%rip)
2f9e(5): mov 0x48(%rsp),%rsi
2fa3(5): mov $0x4,%edi
2fa8(5): call 0x6b78(%rip)
2fad(7): lea 0x8948(%rip),%rsi
2fb4(2): xor %edi,%edi
2fb6(5): mov $0x5,%edx
2fbb(3): mov %rax,%rbx
2fbe(5): call 0xffffec12(%rip)
2fc3(3): mov %rax,%rbp
2fc6(5): call 0xffffeb4a(%rip)
2fcb(2): mov (%rax),%esi
2fcd(3): mov %rbx,%rcx
2fd0(3): mov %rbp,%rdx
2fd3(2): xor %edi,%edi
2fd5(2): xor %eax,%eax
2fd7(5): call 0xffffee89(%rip)
2fdc(5): jmp 0xfffffcd4(%rip)
2fe1(5): mov 0x48(%rsp),%rsi
2fe6(5): mov $0x4,%edi
2feb(5): call 0x6b35(%rip)
2ff0(7): lea 0x8905(%rip),%rsi
2ff7(5): mov $0x5,%edx
2ffc(2): xor %edi,%edi
2ffe(3): mov %rax,%rbx
3001(5): call 0xffffebcf(%rip)
3006(3): mov %rax,%rbp
3009(5): call 0xffffeb07(%rip)
300e(2): mov (%rax),%esi
3010(3): mov %rbx,%rcx
3013(3): mov %rbp,%rdx
3016(2): xor %edi,%edi
3018(2): xor %eax,%eax
301a(5): call 0xffffee46(%rip)
301f(5): mov $0x0,0x18(%rsp)
3024(5): jmp 0xfffffc8c(%rip)
3029(5): mov 0x20(%rsp),%rdx
302e(4): mov 0x8(%rsp),%esi
3032(8): lea 0xb0(%rsp),%rcx
303a(5): mov 0x48(%rsp),%rdi
303f(5): call 0x1d61(%rip)
3044(2): test %eax,%eax
3046(9): mov $0xffffffff,0x20(%rsp)
304f(2): jnz 0x4c(%rip)
3051(5): mov 0x20(%rsp),%rcx
3056(4): mov 0x8(%rsp),%edx
305a(2): xor %edi,%edi
305c(5): mov 0x48(%rsp),%rsi
3061(5): call 0x1bef(%rip)
3066(5): mov $0x1,0x18(%rsp)
306b(8): add %rax,0xb0(%rsp)
3073(5): jmp 0xfffffc3d(%rip)
3078(5): mov 0x20(%rsp),%rdx
307d(4): mov 0x8(%rsp),%esi
3081(8): lea 0xb0(%rsp),%rcx
3089(5): mov 0x48(%rsp),%rdi
308e(5): call 0x1a82(%rip)
3093(2): test %eax,%eax
3095(6): jz 0x347(%rip)
309b(3): shr $0x1f,%eax
309e(4): mov %eax,0x18(%rsp)
30a2(5): jmp 0xfffffc0e(%rip)
30a7(6): cmp $0x0,0x20(%rsp)
30ad(6): js 0xfffffe10(%rip)
30b3(7): mov 0x238(%rsp),%eax
30ba(5): and $0xd000,%eax
30bf(5): cmp $0x8000,%eax
30c4(6): jnz 0xadd(%rip)
30ca(8): mov 0x250(%rsp),%rbp
30d2(4): or $0xffffffff,%rbx
30d6(8): mov 0x258(%rsp),%rax
30de(a): mov $0x2305843009213693951,%rcx
30e8(4): lea 0xffffffff(%rax),%rdx
30ec(3): cmp %rcx,%rdx
30ef(5): mov $0x200,%edx
30f4(4): cmovnbe %rdx,%rax
30f8(3): cmp %rax,%rbp
30fb(6): jle 0xfffffdc2(%rip)
3101(4): cmp $0xffffffff,%rbx
3105(6): jz 0xa4e(%rip)
310b(3): cmp %rbx,%rbp
310e(2): jle 0x13(%rip)
3110(3): mov %rbp,%rax
3113(3): sub %rbx,%rax
3116(5): cmp %rax,0x20(%rsp)
311b(6): jb 0xa66(%rip)
3121(8): mov %rbx,0xb0(%rsp)
3129(5): jmp 0xffffff28(%rip)
312e(2): sub %eax,%ebx
3130(3): movsxd %ebx,%rcx
3133(4): lea 0x0(%r12,%rax,8),%rbx
3137(4): mov %rcx,(%rsp)
313b(5): jmp 0xfffff46b(%rip)
3140(5): mov 0x60(%rsp),%rbp
3145(5): mov 0x28(%rsp),%r13
314a(7): lea 0x869e(%rip),%r12
3151(2): xor %ebx,%ebx
3153(3): add %r13,%rbp
3156(3): cmp %r13,%rbp
3159(2): jz 0x49(%rip)
315b(4): mov 0x0(%r13),%rdi
315f(3): mov %r12,%rsi
3162(5): call 0xffffebde(%rip)
3167(2): test %eax,%eax
3169(2): jnz 0x20(%rip)
316b(5): cmp $0x0,0x34(%r13)
3170(2): jnz 0x19(%rip)
3172(5): cmp $0x0,0x38(%r13)
3177(2): js 0x12(%rip)
3179(4): mov 0x30(%r13),%eax
317d(5): and $0xf000,%eax
3182(5): cmp $0x1000,%eax
3187(2): jz 0xc(%rip)
3189(4): add $0x1,%rbx
318d(4): add $0x60,%r13
3191(2): jmp 0xffffffc5(%rip)
3193(8): mov $0xffffffff,0x38(%r13)
319b(5): mov $0x1,0x34(%r13)
31a0(2): jmp 0xffffffed(%rip)
31a2(3): test %rbx,%rbx
31a5(6): jz 0xfffff868(%rip)
31ab(8): lea 0x190(%rsp),%rdx
31b3(5): mov $0x1,%esi
31b8(5): mov $0x1,%edi
31bd(5): call 0xffffec43(%rip)
31c2(2): test %eax,%eax
31c4(6): js 0x16bd(%rip)
31ca(7): mov 0x1a8(%rsp),%eax
31d1(5): and $0xf000,%eax
31d6(5): cmp $0x1000,%eax
31db(7): setz 0x20cf35(%rip)
31e2(7): cmp $0x0,0x20cf23(%rip)
31e9(6): jnz 0x25f(%rip)
31ef(5): mov 0x28(%rsp),%rbp
31f4(7): lea 0x85f4(%rip),%rbx
31fb(2): jmp 0x20(%rip)
31fd(4): cmp $0x0,0x34(%rbp)
3201(2): jnz 0x16(%rip)
3203(4): mov 0x0(%rbp),%rdi
3207(3): mov %rbx,%rsi
320a(5): call 0xffffeb36(%rip)
320f(2): test %eax,%eax
3211(6): jz 0x237(%rip)
3217(4): add $0x60,%rbp
321b(3): cmp %r13,%rbp
321e(2): jnz 0xffffffdf(%rip)
3220(5): mov 0x28(%rsp),%rax
3225(5): mov 0x60(%rsp),%rcx
322a(4): lea 0x35(%rax),%rdx
322e(5): lea 0x35(%rax,%rcx,1),%rcx
3233(3): mov %rdx,%rax
3236(2): jmp 0x15(%rip)
3238(4): cmp $0x0,0x3(%rax)
323c(2): js 0xb(%rip)
323e(3): cmp $0x0,(%rax)
3241(6): jnz 0x207(%rip)
3247(4): add $0x60,%rax
324b(3): cmp %rcx,%rax
324e(2): jnz 0xffffffea(%rip)
3250(5): jmp 0x1f3(%rip)
3255(2): xor %edi,%edi
3257(5): call 0xffffea89(%rip)
325c(2): test %eax,%eax
325e(6): jns 0xfffff7bc(%rip)
3264(5): call 0xffffe8ac(%rip)
3269(2): mov (%rax),%esi
326b(7): lea 0x857d(%rip),%rdx
3272(5): mov $0x1,%edi
3277(2): xor %eax,%eax
3279(5): call 0xffffebe7(%rip)
327e(3): mov (%r15),%rax
3281(5): jmp 0xfffff4e4(%rip)
3286(3): xor %r14d,%r14d
3289(5): mov $0x1400,%ecx
328e(4): lea 0x1(%rdx),%rax
3292(5): jmp 0xfffff1c8(%rip)
3297(2): mov %ecx,%eax
3299(8): mov %rax,0x90(%rsp)
32a1(5): jmp 0xfffff201(%rip)
32a6(6): mov $0x1,%r14d
32ac(5): mov $0xa,%ecx
32b1(2): jmp 0xffffffdd(%rip)
32b3(3): xor %r14d,%r14d
32b6(5): mov $0xa,%ecx
32bb(2): jmp 0xffffffd3(%rip)
32bd(5): call 0xffffe853(%rip)
32c2(3): mov %rax,%rbx
32c5(2): mov (%rax),%eax
32c7(3): mov (%r15),%rdi
32ca(4): mov %eax,0x3c(%r15)
32ce(5): call 0x1712(%rip)
32d3(5): mov $0x4,%edi
32d8(3): mov %rax,%rsi
32db(5): call 0x6845(%rip)
32e0(7): lea 0x8360(%rip),%rsi
32e7(2): xor %edi,%edi
32e9(5): mov $0x5,%edx
32ee(3): mov %rax,%rbp
32f1(5): call 0xffffe8df(%rip)
32f6(2): mov (%rbx),%esi
32f8(3): mov %rax,%rdx
32fb(3): mov %rbp,%rcx
32fe(2): xor %edi,%edi
3300(2): xor %eax,%eax
3302(5): call 0xffffeb5e(%rip)
3307(5): jmp 0xfffffb7a(%rip)
330c(5): mov $0x2010,%edi
3311(5): call 0x71bf(%rip)
3316(5): jmp 0xfffffc0d(%rip)
331b(8): movsx 0x20cdf1(%rip),%r12d
3323(5): cmp %r12b,0xffffffff(%r14,%rax,1)
3328(2): jz 0x10(%rip)
332a(8): add $0x1,0x2008(%r14)
3332(6): add $0x1,0x38(%rsp)
3338(5): mov 0x50(%rsp),%r13
333d(5): mov 0x38(%rsp),%rdx
3342(5): mov 0x20(%rsp),%rcx
3347(2): jmp 0xc(%rip)
3349(7): mov 0x2010(%r13),%r13
3350(3): mov %rax,%rdx
3353(3): mov %rdx,%rax
3356(7): sub 0x2008(%r13),%rax
335d(3): cmp %rax,%rcx
3360(2): jb 0xffffffe9(%rip)
3362(7): mov 0x2000(%r13),%rbp
3369(5): mov 0x20(%rsp),%rax
336e(3): mov %rdx,%rbx
3371(3): mov %r13,%rdi
3374(3): add %r13,%rbp
3377(3): cmp %rdx,%rax
337a(2): jnb 0x26(%rip)
337c(3): sub %rax,%rbx
337f(3): mov %rbp,%rdx
3382(3): mov %r12d,%esi
3385(3): sub %rdi,%rdx
3388(5): call 0xffffe968(%rip)
338d(3): test %rax,%rax
3390(6): jz 0x1483(%rip)
3396(4): sub $0x1,%rbx
339a(4): lea 0x1(%rax),%rdi
339e(2): jnz 0xffffffe1(%rip)
33a0(3): mov %rbp,%rsi
33a3(3): sub %rdi,%rsi
33a6(2): jz 0x7(%rip)
33a8(5): call 0x16e8(%rip)
33ad(7): mov 0x2010(%r13),%rbx
33b4(2): jmp 0x9(%rip)
33b6(7): mov 0x2010(%rbx),%rbx
33bd(3): test %rbx,%rbx
33c0(6): jz 0xfffff8c6(%rip)
33c6(7): mov 0x2000(%rbx),%rsi
33cd(3): test %rsi,%rsi
33d0(2): jz 0xffffffe6(%rip)
33d2(3): mov %rbx,%rdi
33d5(5): call 0x16bb(%rip)
33da(2): jmp 0xffffffdc(%rip)
33dc(4): mov 0x8(%rsp),%edx
33e0(5): mov 0x48(%rsp),%rsi
33e5(4): or $0xffffffff,%rcx
33e9(2): xor %edi,%edi
33eb(5): call 0x1865(%rip)
33f0(4): mov %bl,0x18(%rsp)
33f4(8): add %rax,0xb0(%rsp)
33fc(5): jmp 0xfffff8b4(%rip)
3401(2): xor %eax,%eax
3403(5): jmp 0xfffff625(%rip)
3408(5): mov 0x48(%rsp),%rcx
340d(5): mov 0x20(%rsp),%rsi
3412(5): mov $0x1,%edx
3417(4): mov 0x8(%rsp),%edi
341b(5): call 0x1a85(%rip)
3420(3): test %rax,%rax
3423(6): jns 0xfffff3ff(%rip)
3429(5): jmp 0xfffff3dc(%rip)
342e(4): cmp $0x0,0x3(%rdx)
3432(2): js 0xd(%rip)
3434(3): movzx (%rdx),%ecx
3437(2): test %cl,%cl
3439(6): jz 0x842(%rip)
343f(4): add $0x60,%rdx
3443(3): cmp %rdx,%rax
3446(2): jnz 0xffffffe8(%rip)
3448(7): cmp $0x0,0x20ccc1(%rip)
344f(7): mov $0x1,0x20ccb6(%rip)
3456(2): jnz 0x16(%rip)
3458(7): cmp $0x2,0x20cbc1(%rip)
345f(2): jnz 0xd(%rip)
3461(5): cmp $0x1,(%rsp)
3466(6): jz 0x865(%rip)
346c(3): xor %r15d,%r15d
346f(3): mov %r15d,%eax
3472(5): mov 0x60(%rsp),%rcx
3477(5): mov $0x0,0x48(%rsp)
347c(3): and $0x1,%eax
347f(4): mov %al,0x44(%rsp)
3483(4): mov (%rsp),%rax
3487(4): sub $0x1,%rax
348b(5): mov %rax,0x10(%rsp)
3490(5): mov 0x28(%rsp),%rax
3495(5): lea 0x34(%rax,%rcx,1),%rax
349a(5): mov %rax,0x18(%rsp)
349f(8): lea 0x220(%rsp),%rax
34a7(5): mov %rax,0x20(%rsp)
34ac(5): cmp $0x0,(%rsp)
34b1(6): jz 0x49d(%rip)
34b7(5): mov 0x28(%rsp),%r14
34bc(5): mov $0x0,0x8(%rsp)
34c1(2): xor %ebx,%ebx
34c3(2): jmp 0x31(%rip)
34c5(3): nop (%rax)
34c8(2): mov %ebp,%edx
34ca(2): xor %edi,%edi
34cc(3): mov %r13,%rsi
34cf(5): call 0x1781(%rip)
34d4(3): test %rax,%rax
34d7(3): setnz %dl
34da(4): add %rax,0x8(%r14)
34de(4): or %dl,0x8(%rsp)
34e2(4): add $0x1,%rbx
34e6(4): add $0x60,%r14
34ea(4): cmp %rbx,(%rsp)
34ee(6): jz 0x18f(%rip)
34f4(5): cmp $0x0,0x34(%r14)
34f9(2): jnz 0xffffffe9(%rip)
34fb(4): mov 0x38(%r14),%ebp
34ff(2): test %ebp,%ebp
3501(6): js 0x15f(%rip)
3507(3): mov (%r14),%rdi
350a(5): call 0x14d6(%rip)
350f(3): mov %rax,%r13
3512(4): mov 0x40(%r14),%eax
3516(4): mov 0x30(%r14),%r12d
351a(3): cmp %eax,%r15d
351d(2): jz 0x48(%rip)
351f(2): xor %eax,%eax
3521(5): mov $0x3,%esi
3526(2): mov %ebp,%edi
3528(5): call 0x78d8(%rip)
352d(3): test %r15d,%r15d
3530(6): jnz 0x298(%rip)
3536(2): test %eax,%eax
3538(6): js 0x298(%rip)
353e(2): mov %eax,%edx
3540(3): or $0x8,%dh
3543(2): cmp %edx,%eax
3545(2): jz 0x19(%rip)
3547(2): xor %eax,%eax
3549(5): mov $0x4,%esi
354e(2): mov %ebp,%edi
3550(5): call 0x78b0(%rip)
3555(3): cmp $0xff,%eax
3558(6): jz 0x278(%rip)
355e(4): mov %r15d,0x40(%r14)
3562(3): mov %r15d,%eax
3565(2): test %eax,%eax
3567(7): mov $0xfffffffe,%rcx
356e(6): jnz 0xffffff5a(%rip)
3574(5): mov 0x20(%rsp),%rdx
3579(2): mov %ebp,%esi
357b(5): mov $0x1,%edi
3580(5): call 0xffffe880(%rip)
3585(2): test %eax,%eax
3587(6): jnz 0x360(%rip)
358d(7): mov 0x238(%rsp),%eax
3594(4): cmp %eax,0x30(%r14)
3598(6): jz 0x268(%rip)
359e(8): mov 0x278(%rsp),%rdx
35a6(8): mov 0x280(%rsp),%rcx
35ae(7): and $0xf000,%r12d
35b5(4): mov %rdx,0x10(%r14)
35b9(4): mov %rcx,0x18(%r14)
35bd(7): cmp $0x8000,%r12d
35c4(4): mov %eax,0x30(%r14)
35c8(8): mov $0x0,0x58(%r14)
35d0(6): jz 0x2b0(%rip)
35d6(5): cmp %rbx,0x10(%rsp)
35db(2): jz 0x41(%rip)
35dd(7): cmp $0x0,0x20cb31(%rip)
35e4(2): jz 0x38(%rip)
35e6(7): cmp $0x0,0x20ca23(%rip)
35ed(7): lea 0x9a0c(%rip),%rax
35f4(7): lea 0x9a06(%rip),%rdx
35fb(7): lea 0x8056(%rip),%rsi
3602(3): mov %r13,%rcx
3605(5): mov $0x1,%edi
360a(4): cmove %rax,%rdx
360e(2): xor %eax,%eax
3610(5): call 0xffffe840(%rip)
3615(7): mov $0x0,0x20c9f4(%rip)
361c(4): mov 0x40(%r14),%edi
3620(5): mov %rbx,0x10(%rsp)
3625(2): test %edi,%edi
3627(6): jnz 0x115b(%rip)
362d(7): cmp $0x8000,%r12d
3634(7): mov $0xffffffff,%rcx
363b(6): jnz 0xfffffe8d(%rip)
3641(5): cmp $0x0,0x35(%r14)
3646(6): jz 0xfffffe82(%rip)
364c(8): mov 0x250(%rsp),%rcx
3654(4): sub 0x8(%r14),%rcx
3658(5): jmp 0xfffffe70(%rip)
365d(3): nop (%rax)
3660(3): mov %r14,%rdi
3663(3): mov %r15d,%esi
3666(4): add $0x1,%rbx
366a(5): call 0x2426(%rip)
366f(4): add $0x60,%r14
3673(4): cmp %rbx,(%rsp)
3677(6): jnz 0xfffffe7d(%rip)
367d(7): movzx 0x20ca96(%rip),%ecx
3684(2): test %cl,%cl
3686(2): jz 0xb(%rip)
3688(7): cmp $0x1,0x20c991(%rip)
368f(2): jz 0x53(%rip)
3691(5): mov 0x28(%rsp),%rax
3696(4): cmp $0x0,0x38(%rax)
369a(2): jns 0x48(%rip)
369c(5): mov 0x28(%rsp),%rax
36a1(4): cmp $0x1,0x34(%rax)
36a5(2): jz 0x6(%rip)
36a7(2): test %cl,%cl
36a9(2): jnz 0x39(%rip)
36ab(5): mov 0x28(%rsp),%rax
36b0(6): add $0x94,%rax
36b6(a): nop 0x0(%rax,%rax,1)
36c0(5): cmp 0x18(%rsp),%rax
36c5(6): jz 0x2c6(%rip)
36cb(3): mov 0x4(%rax),%esi
36ce(3): mov %rax,%rdx
36d1(2): test %esi,%esi
36d3(2): jns 0xf(%rip)
36d5(4): add $0x60,%rax
36d9(3): cmp $0x1,(%rdx)
36dc(2): jz 0xffffffe4(%rip)
36de(2): test %cl,%cl
36e0(2): jz 0xffffffe0(%rip)
36e2(5): cmp $0x1,0x8(%rsp)
36e7(6): jnz 0x27e(%rip)
36ed(5): cmp $0x0,0x44(%rsp)
36f2(6): jnz 0x273(%rip)
36f8(7): movzx 0x20ca18(%rip),%eax
36ff(2): test %al,%al
3701(4): mov %al,0x8(%rsp)
3705(6): jz 0xfffffda7(%rip)
370b(c): mov $0x0,0xb8(%rsp)
3717(c): mov $0x0,0xb0(%rsp)
3723(2): xor %eax,%eax
3725(5): mov $0x10,%ecx
372a(5): mov 0x20(%rsp),%rdi
372f(1): cld 
3730(3): REP stosd %rax,rdi(%es,10)
3733(5): mov 0x20(%rsp),%rsi
3738(8): lea 0xb0(%rsp),%r8
3740(2): xor %ecx,%ecx
3742(2): xor %edx,%edx
3744(5): mov $0x2,%edi
3749(9): or $0x2,0x220(%rsp)
3752(5): call 0xffffe64e(%rip)
3757(3): sub $0x1,%eax
375a(6): jz 0x10e7(%rip)
3760(5): cmp $0x0,0x8(%rsp)
3765(6): jnz 0xfffffd47(%rip)
376b(5): cmp $0x0,0x48(%rsp)
3770(6): jnz 0xfffff29d(%rip)
3776(6): mov 0x20c994(%rip),%edi
377c(2): test %edi,%edi
377e(6): jnz 0x233(%rip)
3784(6): movsd 0x30(%rsp),%xmm0
378a(5): call 0x7106(%rip)
378f(2): test %eax,%eax
3791(6): jz 0xfffffd1b(%rip)
3797(7): lea 0x81dd(%rip),%rsi
379e(5): mov $0x5,%edx
37a3(2): xor %edi,%edi
37a5(5): call 0xffffe42b(%rip)
37aa(3): mov %rax,%rbx
37ad(5): call 0xffffe363(%rip)
37b2(2): mov (%rax),%esi
37b4(3): mov %rbx,%rdx
37b7(5): mov $0x1,%edi
37bc(2): xor %eax,%eax
37be(5): call 0xffffe6a2(%rip)
37c3(5): nop 0x0(%rax,%rax,1)
37c8(2): test %eax,%eax
37ca(6): jns 0xfffffd94(%rip)
37d0(5): call 0xffffe340(%rip)
37d5(4): mov 0x30(%r14),%edx
37d9(6): and $0xf000,%edx
37df(6): cmp $0x8000,%edx
37e5(6): jnz 0xfa9(%rip)
37eb(3): cmp $0x1,(%rax)
37ee(6): jnz 0xfa0(%rip)
37f4(4): mov 0x40(%r14),%eax
37f8(5): jmp 0xfffffd6d(%rip)
37fd(3): nop (%rax)
3800(2): mov %eax,%edx
3802(6): and $0xf000,%edx
3808(6): cmp $0x8000,%edx
380e(8): mov 0x278(%rsp),%rdx
3816(6): jz 0x119(%rip)
381c(4): cmp 0x10(%r14),%rdx
3820(8): mov 0x280(%rsp),%rcx
3828(6): jnz 0xfffffd86(%rip)
382e(4): cmp %ecx,0x18(%r14)
3832(6): jnz 0xfffffd7c(%rip)
3838(4): mov 0x58(%r14),%rax
383c(7): cmp 0x20c7d5(%rip),%rax
3843(4): lea 0x1(%rax),%rdx
3847(4): mov %rdx,0x58(%r14)
384b(6): jb 0xfffffc97(%rip)
3851(7): cmp $0x1,0x20c7c8(%rip)
3858(6): jnz 0xfffffc8a(%rip)
385e(2): xor %esi,%esi
3860(5): cmp $0x0,0x40(%r14)
3865(3): mov %r14,%rdi
3868(4): setnz %sil
386c(5): call 0x2224(%rip)
3871(8): mov $0x0,0x58(%r14)
3879(5): jmp 0xfffffc69(%rip)
387e(2): nop 
3880(4): mov 0x8(%r14),%rax
3884(8): cmp %rax,0x250(%rsp)
388c(6): jnl 0xfffffd4a(%rip)
3892(3): mov %r13,%rdx
3895(5): mov $0x3,%esi
389a(2): xor %edi,%edi
389c(5): call 0x6384(%rip)
38a1(7): lea 0x7ddb(%rip),%rsi
38a8(5): mov $0x5,%edx
38ad(2): xor %edi,%edi
38af(5): mov %rax,0x38(%rsp)
38b4(5): call 0xffffe31c(%rip)
38b9(5): mov 0x38(%rsp),%rcx
38be(3): mov %rax,%rdx
38c1(2): xor %esi,%esi
38c3(2): xor %edi,%edi
38c5(2): xor %eax,%eax
38c7(5): call 0xffffe599(%rip)
38cc(3): mov %r13,%rcx
38cf(2): xor %edx,%edx
38d1(2): xor %esi,%esi
38d3(2): mov %ebp,%edi
38d5(5): call 0x15cb(%rip)
38da(8): mov $0x0,0x8(%r14)
38e2(5): jmp 0xfffffcf4(%rip)
38e7(8): mov $0xffffffff,0x38(%r14)
38ef(5): call 0xffffe221(%rip)
38f4(3): mov %rax,%r12
38f7(2): mov (%rax),%eax
38f9(3): mov %r13,%rdx
38fc(2): xor %edi,%edi
38fe(5): mov $0x3,%esi
3903(4): mov %eax,0x3c(%r14)
3907(5): call 0x6319(%rip)
390c(4): mov (%r12),%esi
3910(7): lea 0x90b5(%rip),%rdx
3917(3): mov %rax,%rcx
391a(2): xor %edi,%edi
391c(2): xor %eax,%eax
391e(5): call 0xffffe542(%rip)
3923(2): mov %ebp,%edi
3925(5): call 0xffffe3bb(%rip)
392a(5): jmp 0xfffffbb8(%rip)
392f(8): mov 0x250(%rsp),%rcx
3937(4): cmp %rcx,0x8(%r14)
393b(6): jz 0xfffffee1(%rip)
3941(8): mov 0x280(%rsp),%rcx
3949(5): jmp 0xfffffc65(%rip)
394e(7): cmp $0x0,0x20c7c5(%rip)
3955(2): jz 0x36(%rip)
3957(7): cmp $0x1,0x20c6c2(%rip)
395e(2): jnz 0x2d(%rip)
3960(5): mov $0x0,0x8(%rsp)
3965(7): mov 0x20c75c(%rip),%rdi
396c(5): call 0xffffe584(%rip)
3971(2): test %eax,%eax
3973(6): jnz 0xee2(%rip)
3979(7): cmp $0x0,0x20c797(%rip)
3980(6): jz 0xfffffde0(%rip)
3986(5): jmp 0xfffffd85(%rip)
398b(7): lea 0x7fba(%rip),%rsi
3992(2): xor %edi,%edi
3994(5): mov $0x5,%edx
3999(5): call 0xffffe237(%rip)
399e(2): xor %esi,%esi
39a0(3): mov %rax,%rdx
39a3(2): xor %edi,%edi
39a5(2): xor %eax,%eax
39a7(5): call 0xffffe4b9(%rip)
39ac(5): jmp 0xfffff061(%rip)
39b1(2): xor %esi,%esi
39b3(5): call 0xffffe3bd(%rip)
39b8(2): test %eax,%eax
39ba(6): jz 0xfffffdca(%rip)
39c0(5): call 0xffffe150(%rip)
39c5(3): cmp $0x1,(%rax)
39c8(6): jz 0xfffffdbc(%rip)
39ce(5): movzx 0x50(%rsp),%eax
39d3(4): mov %al,0x48(%rsp)
39d7(5): jmp 0xfffffad5(%rip)
39dc(3): mov %rbx,%rdi
39df(5): mov %rax,0x38(%rsp)
39e4(3): mov %rbp,%rbx
39e7(5): call 0xffffe109(%rip)
39ec(5): mov 0x38(%rsp),%rax
39f1(4): add $0x1,%rax
39f5(6): jz 0x201(%rip)
39fb(5): mov 0x20(%rsp),%rcx
3a00(2): jmp 0xc(%rip)
3a02(7): mov 0x2008(%rbx),%rbx
3a09(3): mov %rax,%r12
3a0c(7): mov 0x2000(%rbx),%rdx
3a13(3): mov %r12,%rax
3a16(3): sub %rdx,%rax
3a19(3): cmp %rax,%rcx
3a1c(2): jb 0xffffffe6(%rip)
3a1e(5): mov 0x20(%rsp),%rcx
3a23(2): xor %eax,%eax
3a25(3): cmp %r12,%rcx
3a28(2): jnb 0x8(%rip)
3a2a(3): mov %r12,%rax
3a2d(3): sub %rcx,%rax
3a30(3): mov %rdx,%rsi
3a33(3): sub %rax,%rsi
3a36(6): jnz 0x1b2(%rip)
3a3c(7): mov 0x2008(%rbx),%rbx
3a43(3): test %rbx,%rbx
3a46(2): jz 0x18(%rip)
3a48(7): mov 0x2000(%rbx),%rsi
3a4f(3): test %rsi,%rsi
3a52(2): jz 0xffffffea(%rip)
3a54(3): mov %rbx,%rdi
3a57(5): call 0x1039(%rip)
3a5c(2): jmp 0xffffffe0(%rip)
3a5e(5): mov $0x1,0x18(%rsp)
3a63(3): mov %rbp,%rdi
3a66(2): jmp 0x11(%rip)
3a68(7): mov 0x2008(%rdi),%rbx
3a6f(5): call 0xffffe081(%rip)
3a74(3): mov %rbx,%rdi
3a77(3): test %rdi,%rdi
3a7a(2): jnz 0xffffffee(%rip)
3a7c(5): jmp 0xfffff234(%rip)
3a81(5): mov 0x48(%rsp),%rsi
3a86(5): mov $0x4,%edi
3a8b(5): call 0x6095(%rip)
3a90(7): lea 0x7bb0(%rip),%rsi
3a97(5): mov $0x5,%edx
3a9c(2): xor %edi,%edi
3a9e(3): mov %rax,%rbx
3aa1(5): call 0xffffe12f(%rip)
3aa6(3): mov %rax,%rbp
3aa9(5): call 0xffffe067(%rip)
3aae(2): mov (%rax),%esi
3ab0(3): mov %rbx,%rcx
3ab3(3): mov %rbp,%rdx
3ab6(2): xor %edi,%edi
3ab8(2): xor %eax,%eax
3aba(5): call 0xffffe3a6(%rip)
3abf(5): mov $0x0,0x18(%rsp)
3ac4(5): jmp 0xfffff1c2(%rip)
3ac9(3): sub $0x1,%ebp
3acc(6): jz 0xffffec18(%rip)
3ad2(8): mov $0x1,0x8b(%rsp)
3ada(5): jmp 0xffffef20(%rip)
3adf(5): mov 0x8(%rsp),%r14d
3ae4(2): xor %esi,%esi
3ae6(5): mov $0x1,%edx
3aeb(3): mov %r14d,%edi
3aee(5): call 0xffffe1b2(%rip)
3af3(4): cmp $0xffffffff,%rax
3af7(3): mov %rax,%rbx
3afa(6): jz 0xffffef93(%rip)
3b00(2): xor %esi,%esi
3b02(5): mov $0x2,%edx
3b07(3): mov %r14d,%edi
3b0a(5): call 0xffffe196(%rip)
3b0f(3): cmp %rax,%rbx
3b12(3): mov %rax,%r8
3b15(6): jnl 0xbb(%rip)
3b1b(3): test %rax,%rax
3b1e(8): mov %rax,0xb0(%rsp)
3b26(6): jz 0xfffff18a(%rip)
3b2c(5): mov 0x20(%rsp),%rdx
3b31(4): mov 0x8(%rsp),%esi
3b35(8): lea 0xb0(%rsp),%r9
3b3d(5): mov 0x48(%rsp),%rdi
3b42(3): mov %rbx,%rcx
3b45(5): call 0x142b(%rip)
3b4a(4): mov %al,0x18(%rsp)
3b4e(5): jmp 0xfffff162(%rip)
3b53(5): mov 0x48(%rsp),%rcx
3b58(4): mov 0x8(%rsp),%edi
3b5c(5): mov $0x1,%edx
3b61(2): xor %esi,%esi
3b63(5): call 0x133d(%rip)
3b68(3): mov %rax,%rbx
3b6b(5): jmp 0xfffff5a0(%rip)
3b70(5): mov $0x5,%edx
3b75(7): lea 0x8bc4(%rip),%rsi
3b7c(5): jmp 0xffffed18(%rip)
3b81(3): mov %rbp,%rbx
3b84(5): sub 0x20(%rsp),%rbx
3b89(5): mov 0x48(%rsp),%rcx
3b8e(4): mov 0x8(%rsp),%edi
3b92(2): xor %edx,%edx
3b94(3): mov %rbx,%rsi
3b97(5): call 0x1309(%rip)
3b9c(5): jmp 0xfffff585(%rip)
3ba1(5): mov 0x20(%rsp),%r14
3ba6(4): mov 0x8(%rsp),%edi
3baa(5): mov $0x2,%edx
3baf(3): mov %r14,%rsi
3bb2(3): neg %rsi
3bb5(5): call 0xffffe0eb(%rip)
3bba(4): cmp $0xffffffff,%rax
3bbe(3): mov %rax,%rbx
3bc1(6): jz 0xfffff2fc(%rip)
3bc7(4): lea 0x0(%rax,%r14,1),%rbp
3bcb(5): jmp 0xfffff50b(%rip)
3bd0(5): mov 0x48(%rsp),%rcx
3bd5(4): mov 0x8(%rsp),%edi
3bd9(2): xor %edx,%edx
3bdb(3): mov %rbx,%rsi
3bde(5): call 0x12c2(%rip)
3be3(5): jmp 0xffffeeaa(%rip)
3be8(4): lea 0x0(%rbx,%rax,1),%rdi
3bec(5): call 0xea4(%rip)
3bf1(5): jmp 0xfffffe4b(%rip)
3bf6(5): mov 0x48(%rsp),%rsi
3bfb(5): mov $0x4,%edi
3c00(5): call 0x5f20(%rip)
3c05(7): lea 0x7a3b(%rip),%rsi
3c0c(5): mov $0x5,%edx
3c11(2): xor %edi,%edi
3c13(3): mov %rax,%rbx
3c16(5): call 0xffffdfba(%rip)
3c1b(3): mov %rax,%r12
3c1e(5): call 0xffffdef2(%rip)
3c23(2): mov (%rax),%esi
3c25(2): xor %edi,%edi
3c27(3): mov %rbx,%rcx
3c2a(3): mov %r12,%rdx
3c2d(2): xor %eax,%eax
3c2f(5): call 0xffffe231(%rip)
3c34(3): mov %rbp,%rdi
3c37(5): jmp 0xfffffe40(%rip)
3c3c(5): cmp $0xffffff7e,%eax
3c41(2): jnz 0x30(%rip)
3c43(2): xor %edi,%edi
3c45(5): call 0x24cb(%rip)
3c4a(7): lea 0x8a87(%rip),%rsi
3c51(5): mov $0x5,%edx
3c56(2): xor %edi,%edi
3c58(5): call 0xffffdf78(%rip)
3c5d(3): mov %r13d,%ecx
3c60(3): mov %rax,%rdx
3c63(2): xor %esi,%esi
3c65(5): mov $0x1,%edi
3c6a(2): xor %eax,%eax
3c6c(5): call 0xffffe1f4(%rip)
3c71(5): mov $0x1,%edi
3c76(5): call 0x249a(%rip)
3c7b(8): lea 0x220(%rsp),%rbx
3c83(4): mov %cl,0x20(%rsp)
3c87(3): xor %r12d,%r12d
3c8a(4): cmp (%rsp),%r12
3c8e(2): jz 0x69(%rip)
3c90(4): imul %r12,$0x60,%rax
3c94(5): mov 0x28(%rsp),%rcx
3c99(3): mov %rbx,%rdx
3c9c(5): mov $0x1,%edi
3ca1(4): mov 0x0(%rcx,%rax,1),%rsi
3ca5(5): call 0xffffdf5b(%rip)
3caa(2): test %eax,%eax
3cac(2): jnz 0x19(%rip)
3cae(7): mov 0x238(%rsp),%eax
3cb5(5): and $0xf000,%eax
3cba(5): cmp $0xa000,%eax
3cbf(6): jz 0xfffff789(%rip)
3cc5(4): add $0x1,%r12
3cc9(2): jmp 0xffffffc1(%rip)
3ccb(5): mov 0x28(%rsp),%rax
3cd0(4): cmp $0xff,0x38(%rax)
3cd4(6): jz 0xfffff798(%rip)
3cda(3): mov 0x30(%rax),%eax
3cdd(3): xor %r15d,%r15d
3ce0(4): mov %eax,0x8(%rsp)
3ce4(5): and $0xf000,%eax
3ce9(5): cmp $0x8000,%eax
3cee(4): setnz %r15b
3cf2(5): jmp 0xfffff77d(%rip)
3cf7(5): mov 0x28(%rsp),%rsi
3cfc(5): mov 0x60(%rsp),%rcx
3d01(5): mov %r12,0x18(%rsp)
3d06(4): lea 0x30(%rsi),%rax
3d0a(5): lea 0x30(%rsi,%rcx,1),%rcx
3d0f(2): jmp 0x28(%rip)
3d11(4): cmp $0x0,0x8(%rax)
3d15(2): js 0x1e(%rip)
3d17(2): mov (%rax),%edx
3d19(6): and $0xf000,%edx
3d1f(6): cmp $0x8000,%edx
3d25(2): jz 0xe(%rip)
3d27(6): cmp $0x1000,%edx
3d2d(6): jnz 0xfffff71b(%rip)
3d33(4): add $0x60,%rax
3d37(3): cmp %rax,%rcx
3d3a(2): jnz 0xffffffd7(%rip)
3d3c(8): cmp $0x0,0x8b(%rsp)
3d44(2): jnz 0xf(%rip)
3d46(7): cmp $0x2,0x20c2d3(%rip)
3d4d(6): jz 0xfffff6fb(%rip)
3d53(5): call 0xffffe02d(%rip)
3d58(2): test %eax,%eax
3d5a(3): mov %eax,%r13d
3d5d(6): js 0x1a0(%rip)
3d63(7): mov 0x20c35e(%rip),%rdi
3d6a(5): call 0xffffe186(%rip)
3d6f(2): test %eax,%eax
3d71(6): jnz 0x9e5(%rip)
3d77(5): mov 0x18(%rsp),%rdi
3d7c(7): lea 0xc4d(%rip),%rcx
3d83(7): lea 0xc36(%rip),%rdx
3d8a(3): xor %r8d,%r8d
3d8d(2): xor %esi,%esi
3d8f(5): call 0x37b1(%rip)
3d94(3): test %rax,%rax
3d97(3): mov %rax,%r14
3d9a(6): jz 0x761(%rip)
3da0(7): cmp $0x1,0x20c279(%rip)
3da7(5): mov $0xc06,%edx
3dac(5): mov $0x2,%eax
3db1(5): mov 0x28(%rsp),%r15
3db6(5): mov $0x0,0x10(%rsp)
3dbb(5): mov $0x0,0x38(%rsp)
3dc0(5): mov %r14,0x8(%rsp)
3dc5(3): cmove %edx,%eax
3dc8(6): mov 0x20c252(%rip),%edx
3dce(3): xor %r12d,%r12d
3dd1(4): mov %eax,0x44(%rsp)
3dd5(3): mov %r15,%rbx
3dd8(3): cmp %rbp,%rbx
3ddb(6): jz 0x202(%rip)
3de1(4): cmp $0x0,0x34(%rbx)
3de5(6): jnz 0x1a9(%rip)
3deb(3): mov (%rbx),%r15
3dee(2): xor %eax,%eax
3df0(4): or $0xffffffff,%rcx
3df4(3): mov %r15,%rdi
3df7(2): REPNZ scasb rdi(%es,10),%al
3df9(7): mov $0xffffffff,0x44(%rbx)
3e00(3): mov %rcx,%rax
3e03(3): not %rax
3e06(4): sub $0x1,%rax
3e0a(3): cmp %rax,%r12
3e0d(4): cmovnae %rax,%r12
3e11(3): sub $0x1,%edx
3e14(2): jnz 0x69(%rip)
3e16(3): mov %r15,%rdi
3e19(5): call 0x2cd7(%rip)
3e1e(4): lea 0x0(%r15,%rax,1),%rdx
3e22(3): mov %rax,%r14
3e25(3): mov %r15,%rdi
3e28(3): movzx (%rdx),%eax
3e2b(5): mov %rdx,0x58(%rsp)
3e30(4): mov %al,0x48(%rsp)
3e34(5): call 0x2d7c(%rip)
3e39(5): mov 0x58(%rsp),%rdx
3e3e(3): sub %r15,%rax
3e41(3): test %r14,%r14
3e44(4): mov %rax,0x50(%rbx)
3e48(7): lea 0x7985(%rip),%rsi
3e4f(3): mov $0x0,(%rdx)
3e52(2): jz 0x5(%rip)
3e54(3): mov (%rbx),%rsi
3e57(5): mov $0x784,%edx
3e5c(3): mov %r13d,%edi
3e5f(5): call 0xffffdf81(%rip)
3e64(5): movzx 0x48(%rsp),%ecx
3e69(3): mov %eax,0x48(%rbx)
3e6c(3): mov (%rbx),%rax
3e6f(4): mov %cl,0x0(%rax,%r14,1)
3e73(4): cmp $0x0,0x48(%rbx)
3e77(6): js 0x84b(%rip)
3e7d(4): mov 0x44(%rsp),%edx
3e81(3): mov (%rbx),%rsi
3e84(3): mov %r13d,%edi
3e87(5): call 0xffffdf59(%rip)
3e8c(2): test %eax,%eax
3e8e(3): mov %eax,0x44(%rbx)
3e91(6): jns 0xd8(%rip)
3e97(4): cmp $0xff,0x38(%rbx)
3e9b(5): movzx 0x10(%rsp),%eax
3ea0(5): movzx 0x50(%rsp),%esi
3ea5(3): cmovne %esi,%eax
3ea8(4): mov %al,0x10(%rsp)
3eac(5): call 0xffffdc64(%rip)
3eb1(3): mov %rax,%r14
3eb4(2): mov (%rax),%eax
3eb6(2): mov %eax,%edx
3eb8(3): and $0xef,%edx
3ebb(3): cmp $0xc,%edx
3ebe(6): jnz 0xd9(%rip)
3ec4(5): mov 0x8(%rsp),%r14
3ec9(7): lea 0x7a40(%rip),%rsi
3ed0(5): mov $0x5,%edx
3ed5(2): xor %edi,%edi
3ed7(5): call 0xffffdcf9(%rip)
3edc(2): xor %esi,%esi
3ede(3): mov %rax,%rdx
3ee1(2): xor %edi,%edi
3ee3(2): xor %eax,%eax
3ee5(5): call 0xffffdf7b(%rip)
3eea(3): mov %r14,%rdi
3eed(5): call 0x38a3(%rip)
3ef2(5): call 0xffffdc1e(%rip)
3ef7(6): mov $0x0,(%rax)
3efd(7): lea 0x89e4(%rip),%rsi
3f04(5): mov $0x5,%edx
3f09(2): xor %edi,%edi
3f0b(5): call 0xffffdcc5(%rip)
3f10(3): mov %rax,%rbx
3f13(5): call 0xffffdbfd(%rip)
3f18(2): mov (%rax),%esi
3f1a(3): mov %rbx,%rdx
3f1d(2): xor %eax,%eax
3f1f(2): xor %edi,%edi
3f21(5): call 0xffffdf3f(%rip)
3f26(5): mov 0x28(%rsp),%rax
3f2b(5): mov 0x60(%rsp),%rsi
3f30(4): lea 0x44(%rax),%rbp
3f34(5): lea 0x44(%rax,%rsi,1),%rbx
3f39(2): jmp 0x26(%rip)
3f3b(3): mov 0x0(%rbp),%esi
3f3e(3): cmp $0xff,%esi
3f41(2): jz 0xa(%rip)
3f43(3): mov %r13d,%edi
3f46(5): call 0xffffdfda(%rip)
3f4b(3): mov 0x4(%rbp),%esi
3f4e(3): cmp $0xff,%esi
3f51(2): jz 0xa(%rip)
3f53(3): mov %r13d,%edi
3f56(5): call 0xffffdfca(%rip)
3f5b(4): add $0x60,%rbp
3f5f(3): cmp %rbp,%rbx
3f62(2): jnz 0xffffffd9(%rip)
3f64(5): jmp 0xfffff4e4(%rip)
3f69(5): mov 0x8(%rsp),%rdi
3f6e(3): mov %rbx,%rsi
3f71(5): call 0x3dcf(%rip)
3f76(3): test %rax,%rax
3f79(6): jz 0x582(%rip)
3f7f(5): movzx 0x50(%rsp),%eax
3f84(4): mov %al,0x38(%rsp)
3f88(6): mov 0x20c092(%rip),%edx
3f8e(4): add $0x60,%rbx
3f92(5): jmp 0xfffffe46(%rip)
3f97(3): cmp 0x3c(%rbx),%eax
3f9a(2): jz 0xffffffee(%rip)
3f9c(3): mov (%rbx),%rsi
3f9f(5): mov $0x4,%edi
3fa4(5): call 0x5b7c(%rip)
3fa9(7): lea 0x797c(%rip),%rsi
3fb0(5): mov $0x5,%edx
3fb5(2): xor %edi,%edi
3fb7(5): mov %rax,0x48(%rsp)
3fbc(5): call 0xffffdc14(%rip)
3fc1(5): mov 0x48(%rsp),%rcx
3fc6(3): mov (%r14),%esi
3fc9(3): mov %rax,%rdx
3fcc(2): xor %edi,%edi
3fce(2): xor %eax,%eax
3fd0(5): call 0xffffde90(%rip)
3fd5(6): mov 0x20c045(%rip),%edx
3fdb(2): jmp 0xffffffb3(%rip)
3fdd(3): cmp $0x2,%edx
3fe0(5): mov 0x8(%rsp),%r14
3fe5(6): jz 0x5b3(%rip)
3feb(5): mov 0x28(%rsp),%r15
3ff0(5): mov 0x60(%rsp),%rax
3ff5(8): lea 0x98(%rsp),%rbx
3ffd(5): lea 0xffffffa0(%r15,%rax,1),%rax
4002(8): mov %rax,0x98(%rsp)
400a(8): lea 0x220(%rsp),%rax
4012(5): mov %rax,0x8(%rsp)
4017(2): jmp 0x52(%rip)
4019(5): cmp $0xff,0x38(%r15)
401e(2): jz 0x3c(%rip)
4020(5): mov 0x8(%rsp),%rdx
4025(3): mov (%r15),%rsi
4028(5): mov $0x1,%edi
402d(5): call 0xffffdd83(%rip)
4032(2): test %eax,%eax
4034(2): jnz 0x26(%rip)
4036(8): mov 0x220(%rsp),%rax
403e(4): cmp %rax,0x20(%r15)
4042(6): jnz 0x5a5(%rip)
4048(8): mov 0x228(%rsp),%rax
4050(4): cmp %rax,0x28(%r15)
4054(6): jnz 0x593(%rip)
405a(3): mov %rbx,%rsi
405d(3): mov %r15,%rdi
4060(5): call 0x1170(%rip)
4065(4): add $0x60,%r15
4069(3): cmp %rbp,%r15
406c(2): jz 0x1e(%rip)
406e(5): cmp $0x0,0x34(%r15)
4073(2): jnz 0xfffffff2(%rip)
4075(7): cmp $0x1,0x20bfa4(%rip)
407c(2): jnz 0xffffff9d(%rip)
407e(2): xor %esi,%esi
4080(3): mov %r15,%rdi
4083(5): call 0x1a0d(%rip)
4088(2): jmp 0xffffffd2(%rip)
408a(5): lea 0x11(%r12),%rax
408f(3): xor %r15d,%r15d
4092(3): mov %rax,%rdi
4095(5): mov %rax,0x38(%rsp)
409a(5): call 0x6436(%rip)
409f(3): mov %r13d,%ecx
40a2(5): mov %rax,0x10(%rsp)
40a7(5): mov $0x1,%eax
40ac(3): shl/sal %cl,%rax
40af(9): mov $0x0,0x8(%rsp)
40b8(8): mov $0x3,0x48(%rsp)
40c0(5): mov %rax,0x70(%rsp)
40c5(8): lea 0x110(%rsp),%rax
40cd(5): mov %rax,0x58(%rsp)
40d2(3): movsxd %r13d,%rax
40d5(8): mov %rax,0x80(%rsp)
40dd(7): cmp $0x1,0x20bf3c(%rip)
40e4(6): jz 0x197(%rip)
40ea(5): movzx 0x20(%rsp),%ebp
40ef(8): lea 0xa0(%rsp),%rbx
40f7(5): cmp 0x8(%rsp),%r15
40fc(6): jb 0x4e1(%rip)
4102(6): mov 0x20c008(%rip),%edi
4108(2): test %edi,%edi
410a(2): jz 0x45(%rip)
410c(3): test %bpl,%bpl
410f(6): jnz 0x580(%rip)
4115(2): xor %esi,%esi
4117(5): call 0xffffdc59(%rip)
411c(2): test %eax,%eax
411e(6): jz 0x11f(%rip)
4124(5): call 0xffffd9ec(%rip)
4129(3): cmp $0x1,(%rax)
412c(6): jz 0x111(%rip)
4132(5): movzx 0x50(%rsp),%ebp
4137(c): mov $0x0,0xa8(%rsp)
4143(c): mov $0x0,0xa0(%rsp)
414f(2): xor %eax,%eax
4151(5): mov $0x10,%ecx
4156(5): mov 0x58(%rsp),%rdi
415b(1): cld 
415c(3): REP stosd %rax,rdi(%es,10)
415f(8): mov 0x80(%rsp),%rdi
4167(5): call 0xffffdae9(%rip)
416c(5): mov 0x70(%rsp),%rcx
4171(8): or %rcx,0x110(%rsp,%rax,8)
4179(7): cmp $0x0,0x20bf97(%rip)
4180(2): jz 0xb(%rip)
4182(9): or $0x2,0x110(%rsp)
418b(3): xor %r8d,%r8d
418e(7): cmp $0x0,0x20bf7b(%rip)
4195(5): mov $0x1,%edi
419a(5): mov 0x58(%rsp),%rsi
419f(4): cmovne %rbx,%r8
41a3(3): test %r13d,%r13d
41a6(4): cmovnl %r13d,%edi
41aa(2): xor %ecx,%ecx
41ac(2): xor %edx,%edx
41ae(3): add $0x1,%edi
41b1(5): call 0xffffdbef(%rip)
41b6(2): test %eax,%eax
41b8(6): jz 0xffffff3f(%rip)
41be(3): add $0x1,%eax
41c1(5): mov %bpl,0x20(%rsp)
41c6(6): jz 0x4d0(%rip)
41cc(8): test $0x2,0x110(%rsp)
41d4(6): jnz 0x66d(%rip)
41da(5): mov 0x38(%rsp),%rdx
41df(5): mov 0x10(%rsp),%rsi
41e4(3): mov %r13d,%edi
41e7(5): call 0x5c29(%rip)
41ec(3): test %rax,%rax
41ef(5): mov %rax,0x8(%rsp)
41f4(6): jnz 0xd0(%rip)
41fa(5): cmp $0x0,0x48(%rsp)
41ff(6): jz 0x36d(%rip)
4205(5): mov 0x38(%rsp),%rsi
420a(5): mov 0x10(%rsp),%rdi
420f(3): xor %r15d,%r15d
4212(5): sub $0x1,0x48(%rsp)
4217(3): mov %rsi,%rax
421a(3): add %rsi,%rax
421d(3): mov %rax,%rsi
4220(5): mov %rax,0x38(%rsp)
4225(5): call 0x630b(%rip)
422a(9): mov $0x0,0x8(%rsp)
4233(5): mov %rax,0x10(%rsp)
4238(5): jmp 0xfffffea5(%rip)
423d(6): movsd 0x30(%rsp),%xmm4
4243(4): pxor %xmm0,%xmm0
4247(5): cvttsd2si %xmm4,%rax
424c(5): cvtsi2sd %rax,%xmm0
4251(8): mov %rax,0xa0(%rsp)
4259(4): subsd %xmm0,%xmm4
425d(8): movsd 0x8703(%rip),%xmm0
4265(4): mulsd %xmm4,%xmm0
4269(5): cvttsd2si %xmm0,%rax
426e(8): mov %rax,0xa8(%rsp)
4276(5): jmp 0xfffffed9(%rip)
427b(7): cmp $0x0,0x20be98(%rip)
4282(6): jnz 0xfffffe68(%rip)
4288(3): mov %r14,%rdi
428b(5): call 0x2e35(%rip)
4290(3): test %rax,%rax
4293(6): jnz 0xfffffe57(%rip)
4299(7): lea 0x76ac(%rip),%rsi
42a0(5): mov $0x5,%edx
42a5(2): xor %edi,%edi
42a7(5): call 0xffffd929(%rip)
42ac(2): xor %esi,%esi
42ae(3): mov %rax,%rdx
42b1(2): xor %edi,%edi
42b3(2): xor %eax,%eax
42b5(5): call 0xffffdbab(%rip)
42ba(5): mov $0x1,%eax
42bf(5): jmp 0xffffe769(%rip)
42c4(3): xor %r15d,%r15d
42c7(6): cmp $0xffffffff,0x8(%rsp)
42cd(6): jz 0x291(%rip)
42d3(5): mov 0x10(%rsp),%rax
42d8(4): lea 0x0(%rax,%r15,1),%rbp
42dc(3): mov 0xc(%rbp),%edx
42df(3): mov 0x4(%rbp),%ecx
42e2(3): test $0x4,%ch
42e5(5): lea 0x10(%r15,%rdx,1),%r15
42ea(6): jz 0xc9(%rip)
42f0(2): test %edx,%edx
42f2(6): jz 0x20e(%rip)
42f8(4): lea 0x10(%rbp),%rax
42fc(5): mov %r15,0x68(%rsp)
4301(5): mov 0x28(%rsp),%rbx
4306(3): mov %r14,%r15
4309(3): xor %r12d,%r12d
430c(3): mov %r13d,%r14d
430f(5): mov %rax,0x78(%rsp)
4314(3): mov %rbp,%r13
4317(5): mov 0x18(%rsp),%rbp
431c(2): jmp 0xa(%rip)
431e(4): add $0x1,%r12
4322(4): add $0x60,%rbx
4326(3): cmp %r12,%rbp
4329(6): jz 0xb1(%rip)
432f(4): mov 0x0(%r13),%eax
4333(3): cmp %eax,0x48(%rbx)
4336(2): jnz 0xffffffe8(%rip)
4338(4): mov 0x50(%rbx),%rsi
433c(3): add (%rbx),%rsi
433f(5): mov 0x78(%rsp),%rdi
4344(7): mov %ecx,0x8c(%rsp)
434b(5): call 0xffffd9f5(%rip)
4350(2): test %eax,%eax
4352(7): mov 0x8c(%rsp),%ecx
4359(2): jnz 0xffffffc5(%rip)
435b(4): imul %r12,$0x60,%rbx
435f(3): mov %r13,%rbp
4362(3): mov %r14d,%r13d
4365(5): add 0x28(%rsp),%rbx
436a(3): and $0x2,%ch
436d(3): mov %r15,%r14
4370(5): mov 0x68(%rsp),%r15
4375(6): jz 0x8a(%rip)
437b(7): cmp $0x1,0x20bc9e(%rip)
4382(6): jz 0x24c(%rip)
4388(3): test %rbx,%rbx
438b(6): jz 0xfffffd52(%rip)
4391(3): mov 0x4(%rbp),%eax
4394(5): test $0xe04,%eax
4399(2): jz 0x51(%rip)
439b(3): test $0x4,%ah
439e(6): jnz 0x215(%rip)
43a4(2): xor %esi,%esi
43a6(3): mov %rbx,%rdi
43a9(5): call 0x16e7(%rip)
43ae(5): jmp 0xfffffd2f(%rip)
43b3(2): test %edx,%edx
43b5(6): jnz 0xffffff43(%rip)
43bb(3): mov 0x0(%rbp),%edx
43be(8): lea 0xb0(%rsp),%rsi
43c6(3): mov %r14,%rdi
43c9(7): mov %edx,0xf4(%rsp)
43d0(5): call 0x2f00(%rip)
43d5(3): mov %rax,%rbx
43d8(2): jmp 0xffffffb0(%rip)
43da(3): mov %r14d,%r13d
43dd(3): mov %r15,%r14
43e0(5): mov 0x68(%rsp),%r15
43e5(5): jmp 0xfffffcf8(%rip)
43ea(8): lea 0x98(%rsp),%rsi
43f2(3): mov %rbx,%rdi
43f5(5): call 0xddb(%rip)
43fa(5): jmp 0xfffffce3(%rip)
43ff(4): mov 0x44(%rsp),%edx
4403(3): mov (%rbx),%rsi
4406(3): mov %r13d,%edi
4409(5): call 0xffffd9d7(%rip)
440e(2): test %eax,%eax
4410(3): mov %eax,%r12d
4413(2): jns 0x5b(%rip)
4415(5): call 0xffffd6fb(%rip)
441a(3): mov %rax,%r8
441d(2): mov (%rax),%eax
441f(3): and $0xef,%eax
4422(3): cmp $0xc,%eax
4425(6): jz 0x21c(%rip)
442b(3): mov (%rbx),%rsi
442e(5): mov $0x4,%edi
4433(5): mov %r8,0x78(%rsp)
4438(5): call 0x56e8(%rip)
443d(7): lea 0x74e8(%rip),%rsi
4444(5): mov $0x5,%edx
4449(2): xor %edi,%edi
444b(5): mov %rax,0x68(%rsp)
4450(5): call 0xffffd780(%rip)
4455(5): mov 0x78(%rsp),%r8
445a(5): mov 0x68(%rsp),%rcx
445f(3): mov %rax,%rdx
4462(2): xor %edi,%edi
4464(2): xor %eax,%eax
4466(3): mov (%r8),%esi
4469(5): call 0xffffd9f7(%rip)
446e(3): mov 0x44(%rbx),%esi
4471(2): test %esi,%esi
4473(2): js 0xb(%rip)
4475(3): cmp %esi,%r12d
4478(6): jz 0xffffff03(%rip)
447e(2): test %esi,%esi
4480(2): js 0x15(%rip)
4482(3): mov %r13d,%edi
4485(5): call 0xffffda9b(%rip)
448a(3): mov %rbx,%rsi
448d(3): mov %r14,%rdi
4490(5): call 0x3910(%rip)
4495(4): mov %r12d,0x44(%rbx)
4499(4): add $0x1,%r12d
449d(6): jz 0xfffffc40(%rip)
44a3(3): mov %rbx,%rsi
44a6(3): mov %r14,%rdi
44a9(5): call 0x38f7(%rip)
44ae(3): test %rax,%rax
44b1(3): mov %rax,%r12
44b4(2): jz 0x33(%rip)
44b6(3): cmp %rax,%rbx
44b9(2): jz 0x2e(%rip)
44bb(7): cmp $0x1,0x20bb5e(%rip)
44c2(6): jz 0x1be(%rip)
44c8(4): mov (%r12),%rdi
44cc(9): mov $0xffffffff,0x44(%r12)
44d5(5): call 0x50b(%rip)
44da(5): mov 0x38(%r12),%edi
44df(3): mov %rax,%rsi
44e2(5): call 0x53e(%rip)
44e7(3): mov %rbx,%rsi
44ea(3): mov %r14,%rdi
44ed(5): call 0x3853(%rip)
44f2(3): test %rax,%rax
44f5(6): jnz 0xfffffe86(%rip)
44fb(5): call 0x6225(%rip)
4500(3): mov 0x0(%rbp),%edx
4503(2): xor %eax,%eax
4505(2): jmp 0x6(%rip)
4507(4): add $0x1,%rax
450b(5): cmp %rax,0x18(%rsp)
4510(6): jz 0xfffffeae(%rip)
4516(4): imul %rax,$0x60,%rcx
451a(5): mov 0x28(%rsp),%rsi
451f(4): cmp %edx,0x48(%rsi,%rcx,1)
4523(2): jnz 0xffffffe4(%rip)
4525(3): mov %r14,%rdi
4528(5): call 0x3268(%rip)
452d(7): lea 0x8384(%rip),%rsi
4534(5): mov $0x5,%edx
4539(2): xor %edi,%edi
453b(5): call 0xffffd695(%rip)
4540(2): xor %esi,%esi
4542(3): mov %rax,%rdx
4545(2): xor %edi,%edi
4547(2): xor %eax,%eax
4549(5): call 0xffffd917(%rip)
454e(5): call 0xffffd5c2(%rip)
4553(6): mov $0x0,(%rax)
4559(5): jmp 0xfffff9a4(%rip)
455e(5): call 0xffffd5b2(%rip)
4563(3): cmp $0x16,(%rax)
4566(6): jz 0xfffffc94(%rip)
456c(7): lea 0x73ec(%rip),%rsi
4573(5): mov $0x5,%edx
4578(2): xor %edi,%edi
457a(5): call 0xffffd656(%rip)
457f(3): mov %rax,%rbx
4582(5): call 0xffffd58e(%rip)
4587(2): mov (%rax),%esi
4589(3): mov %rbx,%rdx
458c(5): mov $0x1,%edi
4591(2): xor %eax,%eax
4593(5): call 0xffffd8cd(%rip)
4598(5): cmp $0x0,0x10(%rsp)
459d(6): jnz 0xfffff94d(%rip)
45a3(5): cmp $0x0,0x38(%rsp)
45a8(6): jnz 0xfffffa43(%rip)
45ae(5): jmp 0xfffffd0c(%rip)
45b3(3): mov 0x44(%rbx),%esi
45b6(3): mov %r13d,%edi
45b9(5): call 0xffffd967(%rip)
45be(3): mov %rbx,%rsi
45c1(3): mov %r14,%rdi
45c4(5): call 0x37dc(%rip)
45c9(5): jmp 0xfffffddb(%rip)
45ce(2): xor %esi,%esi
45d0(3): mov %rbx,%rdi
45d3(5): call 0x14bd(%rip)
45d8(5): jmp 0xfffffdb0(%rip)
45dd(5): mov %bpl,0x20(%rsp)
45e2(5): jmp 0xfffffcf1(%rip)
45e7(3): mov (%r15),%rdi
45ea(5): call 0x3f6(%rip)
45ef(5): mov $0x4,%edi
45f4(3): mov %rax,%rsi
45f7(5): call 0x5529(%rip)
45fc(7): lea 0x7339(%rip),%rsi
4603(5): mov $0x5,%edx
4608(2): xor %edi,%edi
460a(3): mov %rax,%rbp
460d(5): call 0xffffd5c3(%rip)
4612(3): mov %rax,%r12
4615(5): call 0xffffd4fb(%rip)
461a(2): mov (%rax),%esi
461c(3): mov %rax,%rbx
461f(3): mov %rbp,%rcx
4622(3): mov %r12,%rdx
4625(2): xor %edi,%edi
4627(2): xor %eax,%eax
4629(5): call 0xffffd837(%rip)
462e(3): mov %r14,%rdi
4631(5): call 0x315f(%rip)
4636(6): mov $0x0,(%rbx)
463c(5): jmp 0xfffff8c1(%rip)
4641(7): lea 0x72c8(%rip),%rsi
4648(5): mov $0x5,%edx
464d(2): xor %edi,%edi
464f(5): mov %r8,0x8(%rsp)
4654(5): call 0xffffd57c(%rip)
4659(2): xor %esi,%esi
465b(3): mov %rax,%rdx
465e(2): xor %edi,%edi
4660(2): xor %eax,%eax
4662(5): call 0xffffd7fe(%rip)
4667(3): mov %r14,%rdi
466a(5): call 0x3126(%rip)
466f(5): mov 0x8(%rsp),%r8
4674(7): mov $0x0,(%r8)
467b(5): jmp 0xfffff882(%rip)
4680(2): xor %esi,%esi
4682(3): mov %rax,%rdi
4685(5): call 0x140b(%rip)
468a(5): jmp 0xfffffe3e(%rip)
468f(2): xor %edi,%edi
4691(5): call 0xffffd82f(%rip)
4696(7): lea 0x81eb(%rip),%rsi
469d(5): mov $0x5,%edx
46a2(2): xor %edi,%edi
46a4(5): call 0xffffd52c(%rip)
46a9(3): mov %rax,%rbx
46ac(5): call 0xffffd464(%rip)
46b1(2): mov (%rax),%esi
46b3(3): mov %rbx,%rdx
46b6(5): mov $0x1,%edi
46bb(2): xor %eax,%eax
46bd(5): call 0xffffd7a3(%rip)
46c2(5): call 0xffffd44e(%rip)
46c7(3): cmp $0x1c,(%rax)
46ca(3): mov %rbx,%r15
46cd(5): mov 0x8(%rsp),%r14
46d2(3): mov %rax,%rbx
46d5(6): jz 0xfffff7f4(%rip)
46db(3): mov (%r15),%rsi
46de(5): mov $0x4,%edi
46e3(5): call 0x543d(%rip)
46e8(7): lea 0x8171(%rip),%rsi
46ef(2): xor %edi,%edi
46f1(5): mov $0x5,%edx
46f6(3): mov %rax,%rbp
46f9(5): call 0xffffd4d7(%rip)
46fe(2): mov (%rbx),%esi
4700(3): mov %rax,%rdx
4703(3): mov %rbp,%rcx
4706(2): xor %edi,%edi
4708(2): xor %eax,%eax
470a(5): call 0xffffd756(%rip)
470f(5): jmp 0xfffff7db(%rip)
4714(4): mov 0x8(%rbp),%rdi
4718(5): call 0x56d8(%rip)
471d(7): lea 0x70cf(%rip),%rsi
4724(5): mov $0x5,%edx
4729(2): xor %edi,%edi
472b(3): mov %rax,%rbp
472e(5): call 0xffffd4a2(%rip)
4733(3): mov %rax,%rbx
4736(5): call 0xffffd3da(%rip)
473b(2): mov (%rax),%esi
473d(7): lea 0x70be(%rip),%rdx
4744(3): mov %rbp,%r8
4747(3): mov %rbx,%rcx
474a(5): mov $0x1,%edi
474f(2): xor %eax,%eax
4751(5): call 0xffffd70f(%rip)
4756(7): lea 0x6f39(%rip),%rsi
475d(5): mov $0x5,%edx
4762(2): xor %edi,%edi
4764(5): call 0xffffd46c(%rip)
4769(3): mov %rax,%rbx
476c(5): call 0xffffd3a4(%rip)
4771(2): mov (%rax),%esi
4773(3): mov %rbx,%rdx
4776(5): mov $0x1,%edi
477b(2): xor %eax,%eax
477d(5): call 0xffffd6e3(%rip)
4782(7): mov $0xfffffffe,%rcx
4789(5): jmp 0xffffed3f(%rip)
478e(3): mov %r13,%rdx
4791(5): mov $0x3,%esi
4796(2): xor %edi,%edi
4798(4): mov %rax,(%rsp)
479c(5): call 0x5484(%rip)
47a1(7): lea 0x8170(%rip),%rsi
47a8(5): mov $0x5,%edx
47ad(2): xor %edi,%edi
47af(3): mov %rax,%rbx
47b2(5): call 0xffffd41e(%rip)
47b7(4): mov (%rsp),%r9
47bb(3): mov %rax,%rdx
47be(3): mov %rbx,%rcx
47c1(5): mov $0x1,%edi
47c6(2): xor %eax,%eax
47c8(3): mov (%r9),%esi
47cb(5): call 0xffffd695(%rip)
47d0(3): mov (%r15),%rax
47d3(5): jmp 0xffffdf97(%rip)
47d8(7): lea 0x7010(%rip),%rsi
47df(5): mov $0x4,%edi
47e4(5): call 0x533c(%rip)
47e9(7): lea 0x70d8(%rip),%rsi
47f0(3): mov %rax,%rbx
47f3(5): mov $0x5,%edx
47f8(2): xor %edi,%edi
47fa(5): call 0xffffd3d6(%rip)
47ff(3): mov %rbx,%rcx
4802(3): mov %rax,%rdx
4805(2): xor %esi,%esi
4807(5): mov $0x1,%edi
480c(2): xor %eax,%eax
480e(5): call 0xffffd652(%rip)
4813(7): lea 0x812e(%rip),%rcx
481a(7): lea 0x6e81(%rip),%rsi
4821(7): lea 0x70e4(%rip),%rdi
4828(5): mov $0x2e0,%edx
482d(5): call 0xffffd483(%rip)
4832(5): mov $0x1,%ecx
4837(5): jmp 0xffffde4e(%rip)
483c(5): call 0xffffd3d4(%rip)
4841(5): mov $0xd,%edi
4846(5): call 0xffffd29a(%rip)
484b(5): mov $0x1,%edi
4850(5): call 0xffffd670(%rip)
4855(7): lea 0x6e3a(%rip),%rsi
485c(5): mov $0x5,%edx
4861(2): xor %edi,%edi
4863(5): call 0xffffd36d(%rip)
4868(3): mov %rax,%rbx
486b(5): call 0xffffd2a5(%rip)
4870(2): mov (%rax),%esi
4872(3): mov %rbx,%rdx
4875(5): mov $0x1,%edi
487a(2): xor %eax,%eax
487c(5): call 0xffffd5e4(%rip)
4881(7): lea 0x6d9e(%rip),%rsi
4888(5): mov $0x5,%edx
488d(2): xor %edi,%edi
488f(5): call 0xffffd341(%rip)
4894(3): mov %rax,%rbx
4897(5): call 0xffffd279(%rip)
489c(2): mov (%rax),%esi
489e(3): mov %rbx,%rdx
48a1(5): mov $0x1,%edi
48a6(2): xor %eax,%eax
48a8(5): call 0xffffd5b8(%rip)
48ad(3): nop (%rax)
48b0(2): xor %ebp,%ebp
48b2(3): mov %rdx,%r9
48b5(1): pop %rsi
48b6(3): mov %rsp,%rdx
48b9(4): and $0xfffffff0,%rsp
48bd(1): push %rax
48be(1): push %rsp
48bf(7): lea 0x6d0a(%rip),%r8
48c6(7): lea 0x6c93(%rip),%rcx
48cd(7): lea 0xffffd67c(%rip),%rdi
48d4(6): call 0x20b706(%rip)
48da(1): hlt 

"_start" :
48b0(2): xor %ebp,%ebp
48b2(3): mov %rdx,%r9
48b5(1): pop %rsi
48b6(3): mov %rsp,%rdx
48b9(4): and $0xfffffff0,%rsp
48bd(1): push %rax
48be(1): push %rsp
48bf(7): lea 0x6d0a(%rip),%r8
48c6(7): lea 0x6c93(%rip),%rcx
48cd(7): lea 0xffffd67c(%rip),%rdi
48d4(6): call 0x20b706(%rip)
48da(1): hlt 

"deregister_tm_clones" :
48e0(7): lea 0x20b7d9(%rip),%rdi
48e7(1): push %rbp
48e8(7): lea 0x20b7d1(%rip),%rax
48ef(3): cmp %rdi,%rax
48f2(3): mov %rsp,%rbp
48f5(2): jz 0x1b(%rip)
48f7(7): mov 0x20b6da(%rip),%rax
48fe(3): test %rax,%rax
4901(2): jz 0xf(%rip)
4903(1): pop %rbp
4904(2): jmp %rax
4906(a): nop 0x0(%rax,%rax,1)
4910(1): pop %rbp
4911(1): ret near (%rsp)

"register_tm_clones" :
4920(7): lea 0x20b799(%rip),%rdi
4927(7): lea 0x20b792(%rip),%rsi
492e(1): push %rbp
492f(3): sub %rdi,%rsi
4932(3): mov %rsp,%rbp
4935(4): sar $0x3,%rsi
4939(3): mov %rsi,%rax
493c(4): shr $0x3f,%rax
4940(3): add %rax,%rsi
4943(3): sar $0x1,%rsi
4946(2): jz 0x1a(%rip)
4948(7): mov 0x20b6a1(%rip),%rax
494f(3): test %rax,%rax
4952(2): jz 0xe(%rip)
4954(1): pop %rbp
4955(2): jmp %rax
4957(9): nop 0x0(%rax,%rax,1)
4960(1): pop %rbp
4961(1): ret near (%rsp)

"__do_global_dtors_aux" :
4970(7): cmp $0x0,0x20b791(%rip)
4977(2): jnz 0x31(%rip)
4979(8): cmp $0x0,0x20b677(%rip)
4981(1): push %rbp
4982(3): mov %rsp,%rbp
4985(2): jz 0xe(%rip)
4987(7): mov 0x20b67a(%rip),%rdi
498e(5): call 0xffffd5b2(%rip)
4993(5): call 0xffffff4d(%rip)
4998(7): mov $0x1,0x20b769(%rip)
499f(1): pop %rbp
49a0(1): ret near (%rsp)
49a1(7): nop 0x0(%rax)
49a8(2): REP ret near (%rsp)

"frame_dummy" :
49b0(1): push %rbp
49b1(3): mov %rsp,%rbp
49b4(1): pop %rbp
49b5(5): jmp 0xffffff6b(%rip)

"wd_hasher" :
49c0(4): movsxd 0x44(%rdi),%rax
49c4(2): xor %edx,%edx
49c6(3): div %rsi,%rax
49c9(3): mov %rdx,%rax
49cc(1): ret near (%rsp)

"wd_comparator" :
49d0(3): mov 0x44(%rsi),%eax
49d3(3): cmp %eax,0x44(%rdi)
49d6(3): setz %al
49d9(1): ret near (%rsp)

"pretty_name.isra.7" :
49e0(3): mov %rdi,%rax
49e3(7): lea 0x6e05(%rip),%rdi
49ea(5): mov $0x2,%ecx
49ef(3): mov %rax,%rsi
49f2(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
49f4(3): setnbe %dl
49f7(3): sbb $0x0,%dl
49fa(2): test %dl,%dl
49fc(2): jz 0x4(%rip)
49fe(2): REP ret near (%rsp)
4a00(7): lea 0x6bfd(%rip),%rsi
4a07(5): mov $0x5,%edx
4a0c(2): xor %edi,%edi
4a0e(5): jmp 0xffffd1c2(%rip)

"close_fd" :
4a20(3): lea 0x1(%rdi),%eax
4a23(3): cmp $0x1,%eax
4a26(2): jbe 0x1a(%rip)
4a28(2): push %r12
4a2a(1): push %rbp
4a2b(3): mov %rsi,%rbp
4a2e(1): push %rbx
4a2f(2): mov %edi,%ebx
4a31(5): call 0xffffd2af(%rip)
4a36(2): test %eax,%eax
4a38(2): jnz 0x10(%rip)
4a3a(1): pop %rbx
4a3b(1): pop %rbp
4a3c(2): pop %r12
4a3e(1): ret near (%rsp)
4a3f(1): nop 
4a40(2): REP ret near (%rsp)
4a42(6): nop 0x0(%rax,%rax,1)
4a48(3): mov %rbp,%rsi
4a4b(5): mov $0x4,%edi
4a50(5): call 0x50d0(%rip)
4a55(7): lea 0x6bb7(%rip),%rsi
4a5c(5): mov $0x5,%edx
4a61(2): xor %edi,%edi
4a63(3): mov %rax,%r12
4a66(5): call 0xffffd16a(%rip)
4a6b(3): mov %rax,%rbp
4a6e(5): call 0xffffd0a2(%rip)
4a73(3): mov %ebx,%r8d
4a76(3): mov %r12,%rcx
4a79(3): mov %rbp,%rdx
4a7c(1): pop %rbx
4a7d(1): pop %rbp
4a7e(2): pop %r12
4a80(2): mov (%rax),%esi
4a82(2): xor %edi,%edi
4a84(2): xor %eax,%eax
4a86(5): jmp 0xffffd3da(%rip)

"xwrite_stdout.part.10" :
4a90(1): push %rbp
4a91(1): push %rbx
4a92(3): mov %rsi,%rdx
4a95(3): mov %rsi,%rbx
4a98(5): mov $0x1,%esi
4a9d(4): sub $0x8,%rsp
4aa1(7): mov 0x20b620(%rip),%rcx
4aa8(5): call 0xffffd378(%rip)
4aad(3): cmp %rax,%rbx
4ab0(2): jnbe 0x9(%rip)
4ab2(4): add $0x8,%rsp
4ab6(1): pop %rbx
4ab7(1): pop %rbp
4ab8(1): ret near (%rsp)
4ab9(7): mov 0x20b608(%rip),%rdi
4ac0(5): call 0xffffd0c0(%rip)
4ac5(7): lea 0x6b5a(%rip),%rsi
4acc(5): mov $0x4,%edi
4ad1(5): call 0x504f(%rip)
4ad6(7): lea 0x6b59(%rip),%rsi
4add(5): mov $0x5,%edx
4ae2(2): xor %edi,%edi
4ae4(3): mov %rax,%rbp
4ae7(5): call 0xffffd0e9(%rip)
4aec(3): mov %rax,%rbx
4aef(5): call 0xffffd021(%rip)
4af4(2): mov (%rax),%esi
4af6(3): mov %rbp,%rcx
4af9(3): mov %rbx,%rdx
4afc(5): mov $0x1,%edi
4b01(2): xor %eax,%eax
4b03(5): call 0xffffd35d(%rip)
4b08(8): nop 0x0(%rax,%rax,1)
4b10(2): push %r15
4b12(2): push %r14
4b14(2): push %r13
4b16(2): push %r12
4b18(1): push %rbp
4b19(1): push %rbx
4b1a(7): sub $0x2028,%rsp
4b21(9): mov $0x28,%rax
4b2a(8): mov %rax,0x2018(%rsp)
4b32(2): xor %eax,%eax
4b34(3): test %rdx,%rdx
4b37(5): mov %rdi,0x8(%rsp)
4b3c(2): jz 0x7c(%rip)
4b3e(5): lea 0x10(%rsp),%r13
4b43(3): mov %esi,%r15d
4b46(3): mov %rdx,%rbx
4b49(3): mov %rcx,%r14
4b4c(5): mov $0x2000,%edx
4b51(3): mov %r13,%rsi
4b54(3): mov %r15d,%edi
4b57(5): call 0x52b9(%rip)
4b5c(3): test %rax,%rax
4b5f(6): jz 0x93(%rip)
4b65(4): cmp $0xffffffff,%rax
4b69(6): jz 0x90(%rip)
4b6f(3): add %rax,(%r14)
4b72(8): movsx 0x20b59a(%rip),%r12d
4b7a(5): lea 0x0(%r13,%rax,1),%rbp
4b7f(3): mov %r13,%rdi
4b82(6): nop 0x0(%rax,%rax,1)
4b88(3): mov %rbp,%rdx
4b8b(3): mov %r12d,%esi
4b8e(3): sub %rdi,%rdx
4b91(5): call 0xffffd15f(%rip)
4b96(3): test %rax,%rax
4b99(2): jz 0xffffffb3(%rip)
4b9b(4): sub $0x1,%rbx
4b9f(4): lea 0x1(%rax),%rdi
4ba3(2): jnz 0xffffffe5(%rip)
4ba5(2): xor %eax,%eax
4ba7(3): cmp %rdi,%rbp
4baa(2): jbe 0xe(%rip)
4bac(3): sub %rdi,%rbp
4baf(2): jnz 0x31(%rip)
4bb1(7): nop 0x0(%rax)
4bb8(8): mov 0x2018(%rsp),%rcx
4bc0(9): xor $0x28,%rcx
4bc9(2): jnz 0x78(%rip)
4bcb(7): add $0x2028,%rsp
4bd2(1): pop %rbx
4bd3(1): pop %rbp
4bd4(2): pop %r12
4bd6(2): pop %r13
4bd8(2): pop %r14
4bda(2): pop %r15
4bdc(1): ret near (%rsp)
4bdd(3): nop (%rax)
4be0(3): mov %rbp,%rsi
4be3(4): mov %eax,0x8(%rsp)
4be7(5): call 0xfffffea9(%rip)
4bec(4): mov 0x8(%rsp),%eax
4bf0(2): jmp 0xffffffc8(%rip)
4bf2(5): mov $0xffffffff,%eax
4bf7(2): jmp 0xffffffc1(%rip)
4bf9(5): mov 0x8(%rsp),%rsi
4bfe(5): mov $0x4,%edi
4c03(5): call 0x4f1d(%rip)
4c08(7): lea 0x6a38(%rip),%rsi
4c0f(5): mov $0x5,%edx
4c14(2): xor %edi,%edi
4c16(3): mov %rax,%rbp
4c19(5): call 0xffffcfb7(%rip)
4c1e(3): mov %rax,%rbx
4c21(5): call 0xffffceef(%rip)
4c26(2): mov (%rax),%esi
4c28(3): mov %rbp,%rcx
4c2b(2): xor %eax,%eax
4c2d(3): mov %rbx,%rdx
4c30(2): xor %edi,%edi
4c32(5): call 0xffffd22e(%rip)
4c37(5): mov $0x1,%eax
4c3c(5): jmp 0xffffff7c(%rip)
4c41(5): call 0xffffcfcf(%rip)

"start_lines" :
4b10(2): push %r15
4b12(2): push %r14
4b14(2): push %r13
4b16(2): push %r12
4b18(1): push %rbp
4b19(1): push %rbx
4b1a(7): sub $0x2028,%rsp
4b21(9): mov $0x28,%rax
4b2a(8): mov %rax,0x2018(%rsp)
4b32(2): xor %eax,%eax
4b34(3): test %rdx,%rdx
4b37(5): mov %rdi,0x8(%rsp)
4b3c(2): jz 0x7c(%rip)
4b3e(5): lea 0x10(%rsp),%r13
4b43(3): mov %esi,%r15d
4b46(3): mov %rdx,%rbx
4b49(3): mov %rcx,%r14
4b4c(5): mov $0x2000,%edx
4b51(3): mov %r13,%rsi
4b54(3): mov %r15d,%edi
4b57(5): call 0x52b9(%rip)
4b5c(3): test %rax,%rax
4b5f(6): jz 0x93(%rip)
4b65(4): cmp $0xffffffff,%rax
4b69(6): jz 0x90(%rip)
4b6f(3): add %rax,(%r14)
4b72(8): movsx 0x20b59a(%rip),%r12d
4b7a(5): lea 0x0(%r13,%rax,1),%rbp
4b7f(3): mov %r13,%rdi
4b82(6): nop 0x0(%rax,%rax,1)
4b88(3): mov %rbp,%rdx
4b8b(3): mov %r12d,%esi
4b8e(3): sub %rdi,%rdx
4b91(5): call 0xffffd15f(%rip)
4b96(3): test %rax,%rax
4b99(2): jz 0xffffffb3(%rip)
4b9b(4): sub $0x1,%rbx
4b9f(4): lea 0x1(%rax),%rdi
4ba3(2): jnz 0xffffffe5(%rip)
4ba5(2): xor %eax,%eax
4ba7(3): cmp %rdi,%rbp
4baa(2): jbe 0xe(%rip)
4bac(3): sub %rdi,%rbp
4baf(2): jnz 0x31(%rip)
4bb1(7): nop 0x0(%rax)
4bb8(8): mov 0x2018(%rsp),%rcx
4bc0(9): xor $0x28,%rcx
4bc9(2): jnz 0x78(%rip)
4bcb(7): add $0x2028,%rsp
4bd2(1): pop %rbx
4bd3(1): pop %rbp
4bd4(2): pop %r12
4bd6(2): pop %r13
4bd8(2): pop %r14
4bda(2): pop %r15
4bdc(1): ret near (%rsp)
4bdd(3): nop (%rax)
4be0(3): mov %rbp,%rsi
4be3(4): mov %eax,0x8(%rsp)
4be7(5): call 0xfffffea9(%rip)
4bec(4): mov 0x8(%rsp),%eax
4bf0(2): jmp 0xffffffc8(%rip)
4bf2(5): mov $0xffffffff,%eax
4bf7(2): jmp 0xffffffc1(%rip)
4bf9(5): mov 0x8(%rsp),%rsi
4bfe(5): mov $0x4,%edi
4c03(5): call 0x4f1d(%rip)
4c08(7): lea 0x6a38(%rip),%rsi
4c0f(5): mov $0x5,%edx
4c14(2): xor %edi,%edi
4c16(3): mov %rax,%rbp
4c19(5): call 0xffffcfb7(%rip)
4c1e(3): mov %rax,%rbx
4c21(5): call 0xffffceef(%rip)
4c26(2): mov (%rax),%esi
4c28(3): mov %rbp,%rcx
4c2b(2): xor %eax,%eax
4c2d(3): mov %rbx,%rdx
4c30(2): xor %edi,%edi
4c32(5): call 0xffffd22e(%rip)
4c37(5): mov $0x1,%eax
4c3c(5): jmp 0xffffff7c(%rip)
4c41(5): call 0xffffcfcf(%rip)

"dump_remainder" :
4c50(2): push %r15
4c52(2): push %r14
4c54(3): mov %rcx,%r14
4c57(2): push %r13
4c59(2): push %r12
4c5b(3): xor %r12d,%r12d
4c5e(1): push %rbp
4c5f(1): push %rbx
4c60(2): mov %edi,%ebp
4c62(3): mov %rcx,%rbx
4c65(7): sub $0x2028,%rsp
4c6c(9): mov $0x28,%rax
4c75(8): mov %rax,0x2018(%rsp)
4c7d(2): xor %eax,%eax
4c7f(5): lea 0x10(%rsp),%r13
4c84(5): mov %rsi,0x8(%rsp)
4c89(4): mov %edx,0x4(%rsp)
4c8d(3): nop (%rax)
4c90(4): mov 0x4(%rsp),%edi
4c94(7): cmp $0x2000,%rbx
4c9b(5): mov $0x2000,%edx
4ca0(4): cmovbe %rbx,%rdx
4ca4(3): mov %r13,%rsi
4ca7(5): call 0x5169(%rip)
4cac(4): cmp $0xffffffff,%rax
4cb0(3): mov %rax,%r15
4cb3(2): jz 0x6d(%rip)
4cb5(3): test %rax,%rax
4cb8(2): jz 0x75(%rip)
4cba(3): test %bpl,%bpl
4cbd(2): jz 0x3a(%rip)
4cbf(7): cmp $0x0,0x20b34a(%rip)
4cc6(7): lea 0x8334(%rip),%rax
4ccd(7): lea 0x832c(%rip),%rdx
4cd4(5): mov 0x8(%rsp),%rcx
4cd9(7): lea 0x6978(%rip),%rsi
4ce0(5): mov $0x1,%edi
4ce5(4): cmovne %rax,%rdx
4ce9(2): xor %eax,%eax
4ceb(5): call 0xffffd165(%rip)
4cf0(7): mov $0x0,0x20b319(%rip)
4cf7(3): mov %r15,%rsi
4cfa(3): mov %r13,%rdi
4cfd(3): add %r15,%r12
4d00(5): call 0xfffffd90(%rip)
4d05(4): cmp $0xffffffff,%r14
4d09(2): jz 0xd(%rip)
4d0b(3): sub %r15,%rbx
4d0e(2): jz 0x1f(%rip)
4d10(4): cmp $0xfffffffe,%r14
4d14(2): jz 0x19(%rip)
4d16(2): xor %ebp,%ebp
4d18(5): jmp 0xffffff78(%rip)
4d1d(3): nop (%rax)
4d20(5): call 0xffffcdf0(%rip)
4d25(3): cmp $0xb,(%rax)
4d28(3): mov %rax,%rbx
4d2b(2): jnz 0x2f(%rip)
4d2d(8): mov 0x2018(%rsp),%rcx
4d35(9): xor $0x28,%rcx
4d3e(3): mov %r12,%rax
4d41(2): jnz 0x14(%rip)
4d43(7): add $0x2028,%rsp
4d4a(1): pop %rbx
4d4b(1): pop %rbp
4d4c(2): pop %r12
4d4e(2): pop %r13
4d50(2): pop %r14
4d52(2): pop %r15
4d54(1): ret near (%rsp)
4d55(5): call 0xffffcebb(%rip)
4d5a(5): mov 0x8(%rsp),%rsi
4d5f(5): mov $0x4,%edi
4d64(5): call 0x4dbc(%rip)
4d69(7): lea 0x68d7(%rip),%rsi
4d70(5): mov $0x5,%edx
4d75(2): xor %edi,%edi
4d77(3): mov %rax,%rbp
4d7a(5): call 0xffffce56(%rip)
4d7f(2): mov (%rbx),%esi
4d81(3): mov %rax,%rdx
4d84(3): mov %rbp,%rcx
4d87(5): mov $0x1,%edi
4d8c(2): xor %eax,%eax
4d8e(5): call 0xffffd0d2(%rip)
4d93(3): nop (%rax)
4d96(a): nop 0x0(%rax,%rax,1)
4da0(2): push %r14
4da2(2): push %r13
4da4(2): push %r12
4da6(1): push %rbp
4da7(1): push %rbx
4da8(7): sub $0x2010,%rsp
4daf(9): mov $0x28,%rax
4db8(8): mov %rax,0x2008(%rsp)
4dc0(2): xor %eax,%eax
4dc2(3): test %rdx,%rdx
4dc5(2): jz 0x63(%rip)
4dc7(3): mov %rdi,%r14
4dca(3): mov %esi,%r13d
4dcd(3): mov %rdx,%rbx
4dd0(3): mov %rcx,%rbp
4dd3(3): mov %rsp,%r12
4dd6(2): jmp 0x1e(%rip)
4dd8(8): nop 0x0(%rax,%rax,1)
4de0(4): cmp $0xffffffff,%rax
4de4(2): jz 0x6c(%rip)
4de6(4): add %rax,0x0(%rbp)
4dea(3): cmp %rbx,%rax
4ded(2): jnbe 0x23(%rip)
4def(3): sub %rax,%rbx
4df2(2): jz 0x36(%rip)
4df4(5): mov $0x2000,%edx
4df9(3): mov %r12,%rsi
4dfc(3): mov %r13d,%edi
4dff(5): call 0x5011(%rip)
4e04(3): test %rax,%rax
4e07(2): jnz 0xffffffd9(%rip)
4e09(5): mov $0xffffffff,%eax
4e0e(2): jmp 0x1c(%rip)
4e10(3): sub %rbx,%rax
4e13(2): jz 0x15(%rip)
4e15(4): lea 0x0(%r12,%rbx,1),%rdi
4e19(3): mov %rax,%rsi
4e1c(5): call 0xfffffc74(%rip)
4e21(7): nop 0x0(%rax)
4e28(2): xor %eax,%eax
4e2a(8): mov 0x2008(%rsp),%rcx
4e32(9): xor $0x28,%rcx
4e3b(2): jnz 0x58(%rip)
4e3d(7): add $0x2010,%rsp
4e44(1): pop %rbx
4e45(1): pop %rbp
4e46(2): pop %r12
4e48(2): pop %r13
4e4a(2): pop %r14
4e4c(1): ret near (%rsp)
4e4d(3): nop (%rax)
4e50(3): mov %r14,%rsi
4e53(5): mov $0x4,%edi
4e58(5): call 0x4cc8(%rip)
4e5d(7): lea 0x67e3(%rip),%rsi
4e64(5): mov $0x5,%edx
4e69(2): xor %edi,%edi
4e6b(3): mov %rax,%rbp
4e6e(5): call 0xffffcd62(%rip)
4e73(3): mov %rax,%rbx
4e76(5): call 0xffffcc9a(%rip)
4e7b(2): mov (%rax),%esi
4e7d(3): mov %rbp,%rcx
4e80(2): xor %eax,%eax
4e82(3): mov %rbx,%rdx
4e85(2): xor %edi,%edi
4e87(5): call 0xffffcfd9(%rip)
4e8c(5): mov $0x1,%eax
4e91(2): jmp 0xffffff99(%rip)
4e93(5): call 0xffffcd7d(%rip)

"start_bytes" :
4da0(2): push %r14
4da2(2): push %r13
4da4(2): push %r12
4da6(1): push %rbp
4da7(1): push %rbx
4da8(7): sub $0x2010,%rsp
4daf(9): mov $0x28,%rax
4db8(8): mov %rax,0x2008(%rsp)
4dc0(2): xor %eax,%eax
4dc2(3): test %rdx,%rdx
4dc5(2): jz 0x63(%rip)
4dc7(3): mov %rdi,%r14
4dca(3): mov %esi,%r13d
4dcd(3): mov %rdx,%rbx
4dd0(3): mov %rcx,%rbp
4dd3(3): mov %rsp,%r12
4dd6(2): jmp 0x1e(%rip)
4dd8(8): nop 0x0(%rax,%rax,1)
4de0(4): cmp $0xffffffff,%rax
4de4(2): jz 0x6c(%rip)
4de6(4): add %rax,0x0(%rbp)
4dea(3): cmp %rbx,%rax
4ded(2): jnbe 0x23(%rip)
4def(3): sub %rax,%rbx
4df2(2): jz 0x36(%rip)
4df4(5): mov $0x2000,%edx
4df9(3): mov %r12,%rsi
4dfc(3): mov %r13d,%edi
4dff(5): call 0x5011(%rip)
4e04(3): test %rax,%rax
4e07(2): jnz 0xffffffd9(%rip)
4e09(5): mov $0xffffffff,%eax
4e0e(2): jmp 0x1c(%rip)
4e10(3): sub %rbx,%rax
4e13(2): jz 0x15(%rip)
4e15(4): lea 0x0(%r12,%rbx,1),%rdi
4e19(3): mov %rax,%rsi
4e1c(5): call 0xfffffc74(%rip)
4e21(7): nop 0x0(%rax)
4e28(2): xor %eax,%eax
4e2a(8): mov 0x2008(%rsp),%rcx
4e32(9): xor $0x28,%rcx
4e3b(2): jnz 0x58(%rip)
4e3d(7): add $0x2010,%rsp
4e44(1): pop %rbx
4e45(1): pop %rbp
4e46(2): pop %r12
4e48(2): pop %r13
4e4a(2): pop %r14
4e4c(1): ret near (%rsp)
4e4d(3): nop (%rax)
4e50(3): mov %r14,%rsi
4e53(5): mov $0x4,%edi
4e58(5): call 0x4cc8(%rip)
4e5d(7): lea 0x67e3(%rip),%rsi
4e64(5): mov $0x5,%edx
4e69(2): xor %edi,%edi
4e6b(3): mov %rax,%rbp
4e6e(5): call 0xffffcd62(%rip)
4e73(3): mov %rax,%rbx
4e76(5): call 0xffffcc9a(%rip)
4e7b(2): mov (%rax),%esi
4e7d(3): mov %rbp,%rcx
4e80(2): xor %eax,%eax
4e82(3): mov %rbx,%rdx
4e85(2): xor %edi,%edi
4e87(5): call 0xffffcfd9(%rip)
4e8c(5): mov $0x1,%eax
4e91(2): jmp 0xffffff99(%rip)
4e93(5): call 0xffffcd7d(%rip)

"xlseek" :
4ea0(2): push %r13
4ea2(2): push %r12
4ea4(3): mov %rcx,%r12
4ea7(1): push %rbp
4ea8(1): push %rbx
4ea9(3): mov %rsi,%rbp
4eac(2): mov %edx,%ebx
4eae(4): sub $0x28,%rsp
4eb2(9): mov $0x28,%rax
4ebb(5): mov %rax,0x18(%rsp)
4ec0(2): xor %eax,%eax
4ec2(5): call 0xffffcdde(%rip)
4ec7(3): test %rax,%rax
4eca(2): js 0x26(%rip)
4ecc(5): mov 0x18(%rsp),%rcx
4ed1(9): xor $0x28,%rcx
4eda(6): jnz 0x8c(%rip)
4ee0(4): add $0x28,%rsp
4ee4(1): pop %rbx
4ee5(1): pop %rbp
4ee6(2): pop %r12
4ee8(2): pop %r13
4eea(1): ret near (%rsp)
4eeb(5): nop 0x0(%rax,%rax,1)
4ef0(3): mov %rbp,%rdi
4ef3(3): mov %rsp,%rsi
4ef6(5): call 0x30ba(%rip)
4efb(3): mov %rax,%r13
4efe(5): call 0xffffcc12(%rip)
4f03(2): xor %edi,%edi
4f05(3): cmp $0x1,%ebx
4f08(3): mov %rax,%rbp
4f0b(3): mov %r12,%rdx
4f0e(5): mov $0x3,%esi
4f13(2): jz 0x3d(%rip)
4f15(5): call 0x4d0b(%rip)
4f1a(7): lea 0x6745(%rip),%rsi
4f21(3): mov %rax,%rbx
4f24(5): mov $0x5,%edx
4f29(2): xor %edi,%edi
4f2b(5): call 0xffffcca5(%rip)
4f30(3): mov 0x0(%rbp),%esi
4f33(3): mov %rax,%rdx
4f36(2): xor %edi,%edi
4f38(3): mov %r13,%r8
4f3b(3): mov %rbx,%rcx
4f3e(2): xor %eax,%eax
4f40(5): call 0xffffcf20(%rip)
4f45(5): mov $0x1,%edi
4f4a(5): call 0xffffcf76(%rip)
4f4f(1): nop 
4f50(5): call 0x4cd0(%rip)
4f55(5): mov $0x5,%edx
4f5a(3): mov %rax,%rbx
4f5d(7): lea 0x6ac4(%rip),%rsi
4f64(2): jmp 0xffffffc5(%rip)
4f66(5): call 0xffffccaa(%rip)

"file_lines" :
4f70(2): push %r15
4f72(2): push %r14
4f74(2): push %r13
4f76(2): push %r12
4f78(1): push %rbp
4f79(1): push %rbx
4f7a(7): sub $0x2038,%rsp
4f81(9): mov $0x28,%rax
4f8a(8): mov %rax,0x2028(%rsp)
4f92(2): xor %eax,%eax
4f94(3): test %rdx,%rdx
4f97(5): mov %rdi,0x8(%rsp)
4f9c(5): mov %rcx,0x10(%rsp)
4fa1(5): mov %r8,0x18(%rsp)
4fa6(4): mov %r9,(%rsp)
4faa(6): jz 0x126(%rip)
4fb0(3): mov %r8,%rbp
4fb3(3): mov %esi,%r14d
4fb6(5): lea 0x20(%rsp),%rbx
4fbb(3): sub %rcx,%rbp
4fbe(3): mov %r8,%rsi
4fc1(3): mov %rdi,%rcx
4fc4(3): mov %rbp,%rax
4fc7(3): mov %r14d,%edi
4fca(3): mov %rdx,%r15
4fcd(4): sar $0x3f,%rax
4fd1(4): shr $0x33,%rax
4fd5(3): add %rax,%rbp
4fd8(6): and $0x1fff,%ebp
4fde(3): sub %rax,%rbp
4fe1(5): mov $0x2000,%eax
4fe6(4): cmove %rax,%rbp
4fea(2): xor %edx,%edx
4fec(3): sub %rbp,%rsi
4fef(3): mov %rsi,%r13
4ff2(5): call 0xfffffeae(%rip)
4ff7(3): mov %rbp,%rdx
4ffa(3): mov %rbx,%rsi
4ffd(3): mov %r14d,%edi
5000(5): call 0x4e10(%rip)
5005(4): cmp $0xffffffff,%rax
5009(3): mov %rax,%r12
500c(6): jz 0x134(%rip)
5012(4): mov (%rsp),%rsi
5016(5): lea 0x0(%r13,%rax,1),%rax
501b(3): test %r12,%r12
501e(3): mov %rax,(%rsi)
5021(2): jz 0x51(%rip)
5023(7): movzx 0x20b0ea(%rip),%eax
502a(5): cmp %al,0x1f(%rsp,%r12,1)
502f(3): setnz %al
5032(3): movzx %al,%eax
5035(3): sub %rax,%r15
5038(7): movsx 0x20b0d5(%rip),%ebp
503f(3): mov %r12,%rdx
5042(2): jmp 0x21(%rip)
5044(4): nop 0x0(%rax)
5048(3): mov %rax,%rdx
504b(4): lea 0xffffffff(%r15),%rcx
504f(3): sub %rbx,%rdx
5052(3): test %r15,%r15
5055(6): jz 0xab(%rip)
505b(3): test %rdx,%rdx
505e(3): mov %rcx,%r15
5061(2): jz 0x11(%rip)
5063(2): mov %ebp,%esi
5065(3): mov %rbx,%rdi
5068(5): call 0xffffce08(%rip)
506d(3): test %rax,%rax
5070(2): jnz 0xffffffd8(%rip)
5072(5): cmp 0x10(%rsp),%r13
5077(6): jz 0x10e(%rip)
507d(5): mov 0x8(%rsp),%rcx
5082(7): sub $0x2000,%r13
5089(2): xor %edx,%edx
508b(3): mov %r13,%rsi
508e(3): mov %r14d,%edi
5091(5): call 0xfffffe0f(%rip)
5096(5): mov $0x2000,%edx
509b(3): mov %rbx,%rsi
509e(3): mov %r14d,%edi
50a1(5): call 0x4d6f(%rip)
50a6(4): cmp $0xffffffff,%rax
50aa(3): mov %rax,%r12
50ad(6): jz 0x93(%rip)
50b3(4): mov (%rsp),%rdi
50b7(5): lea 0x0(%r13,%rax,1),%rax
50bc(3): test %r12,%r12
50bf(3): mov %rax,(%rdi)
50c2(6): jnz 0xffffff76(%rip)
50c8(8): nop 0x0(%rax,%rax,1)
50d0(5): mov $0x1,%eax
50d5(8): mov 0x2028(%rsp),%rdi
50dd(9): xor $0x28,%rdi
50e6(6): jnz 0xda(%rip)
50ec(7): add $0x2038,%rsp
50f3(1): pop %rbx
50f4(1): pop %rbp
50f5(2): pop %r12
50f7(2): pop %r13
50f9(2): pop %r14
50fb(2): pop %r15
50fd(1): ret near (%rsp)
50fe(2): nop 
5100(5): lea 0xffffffff(%r12),%rsi
5105(3): cmp %rdx,%rsi
5108(2): jz 0xe(%rip)
510a(4): lea 0x1(%rax),%rdi
510e(3): sub %rdx,%rsi
5111(5): call 0xfffff97f(%rip)
5116(5): mov 0x18(%rsp),%rcx
511b(5): mov 0x8(%rsp),%rsi
5120(3): mov %r14d,%edx
5123(2): xor %edi,%edi
5125(3): sub %r12,%rcx
5128(3): sub %r13,%rcx
512b(5): call 0xfffffb25(%rip)
5130(4): mov (%rsp),%rbx
5134(3): add %rax,(%rbx)
5137(5): mov $0x1,%eax
513c(2): jmp 0xffffff99(%rip)
513e(2): nop 
5140(5): mov 0x8(%rsp),%rsi
5145(5): mov $0x4,%edi
514a(5): call 0x49d6(%rip)
514f(7): lea 0x64f1(%rip),%rsi
5156(5): mov $0x5,%edx
515b(2): xor %edi,%edi
515d(3): mov %rax,%rbp
5160(5): call 0xffffca70(%rip)
5165(3): mov %rax,%rbx
5168(5): call 0xffffc9a8(%rip)
516d(2): mov (%rax),%esi
516f(3): mov %rbp,%rcx
5172(2): xor %eax,%eax
5174(3): mov %rbx,%rdx
5177(2): xor %edi,%edi
5179(5): call 0xffffcce7(%rip)
517e(2): xor %eax,%eax
5180(5): jmp 0xffffff55(%rip)
5185(5): mov 0x8(%rsp),%rbx
518a(3): mov %r13,%rsi
518d(2): xor %edx,%edx
518f(3): mov %r14d,%edi
5192(3): mov %rbx,%rcx
5195(5): call 0xfffffd0b(%rip)
519a(5): mov 0x18(%rsp),%rcx
519f(3): mov %r14d,%edx
51a2(3): mov %rbx,%rsi
51a5(2): xor %edi,%edi
51a7(5): call 0xfffffaa9(%rip)
51ac(3): add %rax,%r13
51af(4): mov (%rsp),%rax
51b3(3): mov %r13,(%rax)
51b6(5): mov $0x1,%eax
51bb(5): jmp 0xffffff1a(%rip)
51c0(5): call 0xffffca50(%rip)

"check_fspec" :
51d0(2): push %r14
51d2(2): push %r13
51d4(2): push %r12
51d6(1): push %rbp
51d7(1): push %rbx
51d8(7): sub $0xa0,%rsp
51df(9): mov $0x28,%rax
51e8(8): mov %rax,0x98(%rsp)
51f0(2): xor %eax,%eax
51f2(4): cmp $0xff,0x38(%rdi)
51f6(2): jnz 0x2a(%rip)
51f8(8): mov 0x98(%rsp),%rax
5200(9): xor $0x28,%rax
5209(6): jnz 0x189(%rip)
520f(7): add $0xa0,%rsp
5216(1): pop %rbx
5217(1): pop %rbp
5218(2): pop %r12
521a(2): pop %r13
521c(2): pop %r14
521e(1): ret near (%rsp)
521f(1): nop 
5220(3): mov %rdi,%rbx
5223(3): mov (%rdi),%rdi
5226(3): mov %rsi,%r12
5229(5): call 0xfffff7b7(%rip)
522e(3): mov 0x38(%rbx),%esi
5231(3): mov %rsp,%rdx
5234(5): mov $0x1,%edi
5239(3): mov %rax,%r13
523c(5): call 0xffffcbc4(%rip)
5241(2): test %eax,%eax
5243(2): mov %eax,%ebp
5245(6): jnz 0x9b(%rip)
524b(3): mov 0x30(%rbx),%eax
524e(5): and $0xf000,%eax
5253(5): cmp $0x8000,%eax
5258(6): jz 0xb0(%rip)
525e(7): cmp $0x0,0x20aeb0(%rip)
5265(2): jz 0xc(%rip)
5267(2): xor %ebp,%ebp
5269(4): cmp %rbx,(%r12)
526d(4): setnz %bpl
5271(3): mov 0x38(%rbx),%edx
5274(7): mov $0xffffffff,%rcx
527b(3): mov %r13,%rsi
527e(2): mov %ebp,%edi
5280(5): call 0xfffff9d0(%rip)
5285(4): add %rax,0x8(%rbx)
5289(3): test %rax,%rax
528c(6): jz 0xffffff6c(%rip)
5292(7): mov 0x20ae2f(%rip),%rdi
5299(4): mov %rbx,(%r12)
529d(5): call 0xffffcc53(%rip)
52a2(2): test %eax,%eax
52a4(6): jz 0xffffff54(%rip)
52aa(7): lea 0x63e5(%rip),%rsi
52b1(5): mov $0x5,%edx
52b6(2): xor %edi,%edi
52b8(5): call 0xffffc918(%rip)
52bd(3): mov %rax,%rbx
52c0(5): call 0xffffc850(%rip)
52c5(2): mov (%rax),%esi
52c7(3): mov %rbx,%rdx
52ca(5): mov $0x1,%edi
52cf(2): xor %eax,%eax
52d1(5): call 0xffffcb8f(%rip)
52d6(a): nop 0x0(%rax,%rax,1)
52e0(5): call 0xffffc830(%rip)
52e5(2): mov (%rax),%eax
52e7(3): mov 0x38(%rbx),%edi
52ea(3): mov %r13,%rsi
52ed(3): mov %eax,0x3c(%rbx)
52f0(5): call 0xfffff730(%rip)
52f5(7): mov $0xffffffff,0x38(%rbx)
52fc(5): jmp 0xfffffefc(%rip)
5301(7): nop 0x0(%rax)
5308(4): mov 0x8(%rbx),%rax
530c(5): cmp %rax,0x30(%rsp)
5311(2): jl 0x2f(%rip)
5313(6): jnz 0xffffff4b(%rip)
5319(4): mov 0x10(%rbx),%rax
531d(5): cmp %rax,0x58(%rsp)
5322(6): jnz 0xffffff3c(%rip)
5328(4): mov 0x60(%rsp),%eax
532c(3): cmp %eax,0x18(%rbx)
532f(6): jnz 0xffffff2f(%rip)
5335(5): jmp 0xfffffec3(%rip)
533a(6): nop 0x0(%rax,%rax,1)
5340(3): mov %r13,%rdx
5343(5): mov $0x3,%esi
5348(2): xor %edi,%edi
534a(5): call 0x48d6(%rip)
534f(7): lea 0x632d(%rip),%rsi
5356(3): mov %rax,%r14
5359(5): mov $0x5,%edx
535e(2): xor %edi,%edi
5360(5): call 0xffffc870(%rip)
5365(3): mov %r14,%rcx
5368(3): mov %rax,%rdx
536b(2): xor %esi,%esi
536d(2): xor %edi,%edi
536f(2): xor %eax,%eax
5371(5): call 0xffffcaef(%rip)
5376(3): mov 0x38(%rbx),%edi
5379(3): mov %r13,%rcx
537c(2): xor %edx,%edx
537e(2): xor %esi,%esi
5380(5): call 0xfffffb20(%rip)
5385(8): mov $0x0,0x8(%rbx)
538d(5): jmp 0xfffffed1(%rip)
5392(5): call 0xffffc87e(%rip)

"fremote" :
53a0(2): push %r12
53a2(1): push %rbp
53a3(3): mov %rsi,%rbp
53a6(1): push %rbx
53a7(4): add $0xffffff80,%rsp
53ab(3): mov %rsp,%rsi
53ae(9): mov $0x28,%rax
53b7(5): mov %rax,0x78(%rsp)
53bc(2): xor %eax,%eax
53be(5): call 0xffffcae2(%rip)
53c3(2): test %eax,%eax
53c5(2): jz 0x3b(%rip)
53c7(5): call 0xffffc749(%rip)
53cc(3): cmp $0x26,(%rax)
53cf(3): mov %rax,%r12
53d2(5): mov $0x1,%ebx
53d7(6): jnz 0x99(%rip)
53dd(5): mov 0x78(%rsp),%rcx
53e2(9): xor $0x28,%rcx
53eb(2): mov %ebx,%eax
53ed(6): jnz 0x69a(%rip)
53f3(4): sub $0xffffff80,%rsp
53f7(1): pop %rbx
53f8(1): pop %rbp
53f9(2): pop %r12
53fb(1): ret near (%rsp)
53fc(4): nop 0x0(%rax)
5400(4): mov (%rsp),%rax
5404(6): cmp $0x19800202,%rax
540a(2): jz 0x56(%rip)
540c(6): jnle 0xa4(%rip)
5412(6): cmp $0x9660,%rax
5418(2): jz 0x48(%rip)
541a(6): jnle 0x146(%rip)
5420(6): cmp $0x3434,%rax
5426(2): jz 0x3a(%rip)
5428(6): jnle 0x190(%rip)
542e(6): cmp $0x137d,%rax
5434(2): jz 0x2c(%rip)
5436(6): jle 0x3ba(%rip)
543c(6): cmp $0x1cd1,%rax
5442(2): jz 0x1e(%rip)
5444(6): jnle 0x47c(%rip)
544a(6): cmp $0x137f,%rax
5450(2): jz 0x10(%rip)
5452(6): cmp $0x138f,%rax
5458(6): jnz 0x238(%rip)
545e(2): nop 
5460(2): xor %ebx,%ebx
5462(5): jmp 0xffffff7b(%rip)
5467(9): nop 0x0(%rax,%rax,1)
5470(3): mov %rbp,%rsi
5473(5): mov $0x4,%edi
5478(5): call 0x46a8(%rip)
547d(7): lea 0x65cc(%rip),%rsi
5484(2): xor %edi,%edi
5486(5): mov $0x5,%edx
548b(3): mov %rax,%rbp
548e(5): call 0xffffc742(%rip)
5493(4): mov (%r12),%esi
5497(3): mov %rax,%rdx
549a(3): mov %rbp,%rcx
549d(2): xor %edi,%edi
549f(2): xor %eax,%eax
54a1(5): call 0xffffc9bf(%rip)
54a6(5): jmp 0xffffff37(%rip)
54ab(5): nop 0x0(%rax,%rax,1)
54b0(6): cmp $0x6165676c,%rax
54b6(2): jz 0xffffffaa(%rip)
54b8(2): jle 0x50(%rip)
54ba(6): cmp $0x73727279,%rax
54c0(2): jz 0xffffffa0(%rip)
54c2(6): jnle 0x13e(%rip)
54c8(6): cmp $0x64646178,%rax
54ce(2): jz 0xffffff92(%rip)
54d0(6): jnle 0x210(%rip)
54d6(6): cmp $0x62656572,%rax
54dc(2): jz 0xffffff84(%rip)
54de(6): jnle 0x3a2(%rip)
54e4(6): cmp $0x62646576,%rax
54ea(6): jz 0xffffff76(%rip)
54f0(6): cmp $0x62656570,%rax
54f6(6): jnz 0x19a(%rip)
54fc(2): xor %ebx,%ebx
54fe(5): jmp 0xfffffedf(%rip)
5503(5): nop 0x0(%rax,%rax,1)
5508(6): cmp $0x45584653,%rax
550e(6): jz 0xffffff52(%rip)
5514(6): jnle 0x13c(%rip)
551a(6): cmp $0x2fc12fc1,%rax
5520(6): jz 0xffffff40(%rip)
5526(6): jle 0x222(%rip)
552c(6): cmp $0x42494e4d,%rax
5532(6): jz 0xffffff2e(%rip)
5538(6): jnle 0x478(%rip)
553e(6): cmp $0x3153464a,%rax
5544(6): jz 0xffffff1c(%rip)
554a(6): cmp $0x42465331,%rax
5550(6): jnz 0x140(%rip)
5556(2): xor %ebx,%ebx
5558(5): jmp 0xfffffe85(%rip)
555d(3): nop (%rax)
5560(6): cmp $0xc0ffee,%rax
5566(6): jz 0xfffffefa(%rip)
556c(6): jnle 0x134(%rip)
5572(6): cmp $0xef51,%rax
5578(6): jz 0xfffffee8(%rip)
557e(6): jle 0x2d2(%rip)
5584(6): cmp $0x11954,%rax
558a(6): jz 0xfffffed6(%rip)
5590(6): jnle 0x378(%rip)
5596(6): cmp $0xef53,%rax
559c(6): jz 0xfffffec4(%rip)
55a2(6): cmp $0xf15f,%rax
55a8(6): jnz 0xe8(%rip)
55ae(2): xor %ebx,%ebx
55b0(5): jmp 0xfffffe2d(%rip)
55b5(3): nop (%rax)
55b8(6): cmp $0x4858,%rax
55be(6): jz 0xfffffea2(%rip)
55c4(6): jnle 0x254(%rip)
55ca(6): cmp $0x4006,%rax
55d0(6): jz 0xfffffe90(%rip)
55d6(6): jnle 0x2ca(%rip)
55dc(6): cmp $0x4000,%rax
55e2(6): jz 0xfffffe7e(%rip)
55e8(6): cmp $0x4004,%rax
55ee(6): jnz 0xa2(%rip)
55f4(2): xor %ebx,%ebx
55f6(5): jmp 0xfffffde7(%rip)
55fb(5): nop 0x0(%rax,%rax,1)
5600(5): mov $0xc97e8168,%edx
5605(3): cmp %rdx,%rax
5608(6): jz 0xfffffe58(%rip)
560e(6): jnle 0x19a(%rip)
5614(7): sub $0x385b192a,%rdx
561b(3): cmp %rdx,%rax
561e(6): jz 0xfffffe42(%rip)
5624(3): cmp %rdx,%rax
5627(6): jnle 0x2b9(%rip)
562d(6): cmp $0x74726163,%rax
5633(6): jz 0xfffffe2d(%rip)
5639(7): sub $0xb9f0f48,%rdx
5640(3): cmp %rdx,%rax
5643(2): jnz 0x4d(%rip)
5645(2): xor %ebx,%ebx
5647(5): jmp 0xfffffd96(%rip)
564c(4): nop 0x0(%rax)
5650(6): cmp $0x54190100,%rax
5656(6): jz 0xfffffe0a(%rip)
565c(6): jnle 0xb4(%rip)
5662(6): cmp $0x53464846,%rax
5668(6): jz 0xfffffdf8(%rip)
566e(6): jnle 0x2e2(%rip)
5674(6): cmp $0x52654973,%rax
567a(6): jz 0xfffffde6(%rip)
5680(6): cmp $0x5346314d,%rax
5686(6): jz 0xfffffdda(%rip)
568c(4): nop 0x0(%rax)
5690(5): mov $0x1,%ebx
5695(5): jmp 0xfffffd48(%rip)
569a(6): nop 0x0(%rax,%rax,1)
56a0(6): cmp $0x7655821,%rax
56a6(6): jz 0xfffffdba(%rip)
56ac(6): jle 0xc4(%rip)
56b2(6): cmp $0x11307854,%rax
56b8(6): jz 0xfffffda8(%rip)
56be(6): jnle 0x332(%rip)
56c4(6): cmp $0x9041934,%rax
56ca(6): jz 0xfffffd96(%rip)
56d0(6): cmp $0xbad1dea,%rax
56d6(2): jnz 0xffffffba(%rip)
56d8(2): xor %ebx,%ebx
56da(5): jmp 0xfffffd03(%rip)
56df(1): nop 
56e0(6): cmp $0x6e736673,%rax
56e6(6): jz 0xfffffd7a(%rip)
56ec(6): jnle 0x284(%rip)
56f2(6): cmp $0x67596969,%rax
56f8(6): jz 0xfffffd68(%rip)
56fe(6): cmp $0x68191122,%rax
5704(2): jnz 0xffffff8c(%rip)
5706(2): xor %ebx,%ebx
5708(5): jmp 0xfffffcd5(%rip)
570d(3): nop (%rax)
5710(6): cmp $0x58465342,%rax
5716(6): jz 0xfffffd4a(%rip)
571c(6): jnle 0x2b4(%rip)
5722(6): cmp $0x565a4653,%rax
5728(6): jz 0xfffffd38(%rip)
572e(6): cmp $0x58295829,%rax
5734(6): jnz 0xffffff5c(%rip)
573a(2): xor %ebx,%ebx
573c(5): jmp 0xfffffca1(%rip)
5741(7): nop 0x0(%rax)
5748(6): cmp $0x24051905,%rax
574e(6): jz 0xfffffd12(%rip)
5754(6): jnle 0x1dc(%rip)
575a(6): cmp $0x1badface,%rax
5760(6): jnz 0xffffff30(%rip)
5766(2): xor %ebx,%ebx
5768(5): jmp 0xfffffc75(%rip)
576d(3): nop (%rax)
5770(6): cmp $0x12fd16d,%rax
5776(6): jz 0xfffffcea(%rip)
577c(6): jnle 0x2f4(%rip)
5782(6): cmp $0x1021994,%rax
5788(6): jz 0xfffffcd8(%rip)
578e(6): cmp $0x1021997,%rax
5794(6): jnz 0xfffffefc(%rip)
579a(2): xor %ebx,%ebx
579c(5): jmp 0xfffffc41(%rip)
57a1(7): nop 0x0(%rax)
57a8(5): mov $0xf2f52010,%edx
57ad(3): cmp %rdx,%rax
57b0(6): jz 0xfffffcb0(%rip)
57b6(3): cmp %rdx,%rax
57b9(6): jnle 0x26f(%rip)
57bf(7): sub $0x27f6d5ff,%rdx
57c6(3): cmp %rdx,%rax
57c9(6): jz 0xfffffc97(%rip)
57cf(7): add $0x136037d3,%rdx
57d6(3): cmp %rdx,%rax
57d9(6): jnz 0xfffffeb7(%rip)
57df(2): xor %ebx,%ebx
57e1(5): jmp 0xfffffbfc(%rip)
57e6(a): nop 0x0(%rax,%rax,1)
57f0(6): cmp $0x187,%rax
57f6(6): jz 0xfffffc6a(%rip)
57fc(6): jnle 0x194(%rip)
5802(4): cmp $0x2f,%rax
5806(6): jnz 0xfffffe8a(%rip)
580c(2): xor %ebx,%ebx
580e(5): jmp 0xfffffbcf(%rip)
5813(5): nop 0x0(%rax,%rax,1)
5818(6): cmp $0x5df5,%rax
581e(6): jz 0xfffffc42(%rip)
5824(6): jnle 0x22c(%rip)
582a(6): cmp $0x4d44,%rax
5830(6): jz 0xfffffc30(%rip)
5836(6): cmp $0x4d5a,%rax
583c(6): jnz 0xfffffe54(%rip)
5842(2): xor %ebx,%ebx
5844(5): jmp 0xfffffb99(%rip)
5849(7): nop 0x0(%rax)
5850(6): cmp $0xadf5,%rax
5856(6): jz 0xfffffc0a(%rip)
585c(6): jnle 0x1b4(%rip)
5862(6): sub $0x9fa0,%rax
5868(4): cmp $0x2,%rax
586c(6): jnbe 0xfffffe24(%rip)
5872(2): xor %ebx,%ebx
5874(5): jmp 0xfffffb69(%rip)
5879(7): nop 0x0(%rax)
5880(6): cmp $0x63677270,%rax
5886(6): jz 0xfffffbda(%rip)
588c(6): cmp $0x64626720,%rax
5892(6): jnz 0xfffffdfe(%rip)
5898(2): xor %ebx,%ebx
589a(5): jmp 0xfffffb43(%rip)
589f(1): nop 
58a0(6): cmp $0x4244,%rax
58a6(6): jz 0xfffffbba(%rip)
58ac(6): cmp $0x482b,%rax
58b2(6): jnz 0xfffffdde(%rip)
58b8(2): xor %ebx,%ebx
58ba(5): jmp 0xfffffb23(%rip)
58bf(1): nop 
58c0(6): cmp $0x2468,%rax
58c6(6): jz 0xfffffb9a(%rip)
58cc(6): cmp $0x2478,%rax
58d2(6): jnz 0xfffffdbe(%rip)
58d8(2): xor %ebx,%ebx
58da(5): jmp 0xfffffb03(%rip)
58df(1): nop 
58e0(5): mov $0x958458f6,%edx
58e5(3): cmp %rdx,%rax
58e8(6): jz 0xfffffb78(%rip)
58ee(7): add $0x1635c07e,%rdx
58f5(3): cmp %rdx,%rax
58f8(6): jnz 0xfffffd98(%rip)
58fe(2): xor %ebx,%ebx
5900(5): jmp 0xfffffadd(%rip)
5905(3): nop (%rax)
5908(6): cmp $0x27e0eb,%rax
590e(6): jz 0xfffffb52(%rip)
5914(6): cmp $0x414a53,%rax
591a(6): jnz 0xfffffd76(%rip)
5920(2): xor %ebx,%ebx
5922(5): jmp 0xfffffabb(%rip)
5927(9): nop 0x0(%rax,%rax,1)
5930(6): cmp $0x28cd3d45,%rax
5936(6): jz 0xfffffb2a(%rip)
593c(6): cmp $0x2bad1dea,%rax
5942(6): jnz 0xfffffd4e(%rip)
5948(2): xor %ebx,%ebx
594a(5): jmp 0xfffffa93(%rip)
594f(1): nop 
5950(6): cmp $0x5346544e,%rax
5956(6): jz 0xfffffb0a(%rip)
595c(6): cmp $0x534f434b,%rax
5962(6): jnz 0xfffffd2e(%rip)
5968(2): xor %ebx,%ebx
596a(5): jmp 0xfffffa73(%rip)
596f(1): nop 
5970(6): cmp $0x73636673,%rax
5976(6): jz 0xfffffaea(%rip)
597c(6): cmp $0x73717368,%rax
5982(6): jnz 0xfffffd0e(%rip)
5988(2): xor %ebx,%ebx
598a(5): jmp 0xfffffa53(%rip)
598f(1): nop 
5990(6): cmp $0x7c0,%rax
5996(6): jz 0xfffffaca(%rip)
599c(6): cmp $0x1373,%rax
59a2(6): jnz 0xfffffcee(%rip)
59a8(2): xor %ebx,%ebx
59aa(5): jmp 0xfffffa33(%rip)
59af(1): nop 
59b0(6): cmp $0x43415d53,%rax
59b6(6): jz 0xfffffaaa(%rip)
59bc(6): cmp $0x453dcd28,%rax
59c2(6): jnz 0xfffffcce(%rip)
59c8(2): xor %ebx,%ebx
59ca(5): jmp 0xfffffa13(%rip)
59cf(1): nop 
59d0(6): cmp $0x5a3c69f0,%rax
59d6(6): jz 0xfffffa8a(%rip)
59dc(6): cmp $0x5dca2df5,%rax
59e2(6): jnz 0xfffffcae(%rip)
59e8(2): xor %ebx,%ebx
59ea(5): jmp 0xfffff9f3(%rip)
59ef(1): nop 
59f0(6): cmp $0x13661366,%rax
59f6(6): jz 0xfffffa6a(%rip)
59fc(6): cmp $0x15013346,%rax
5a02(6): jnz 0xfffffc8e(%rip)
5a08(2): xor %ebx,%ebx
5a0a(5): jmp 0xfffff9d3(%rip)
5a0f(1): nop 
5a10(6): cmp $0xadff,%rax
5a16(6): jnz 0xfffffc7a(%rip)
5a1c(2): xor %ebx,%ebx
5a1e(5): jmp 0xfffff9bf(%rip)
5a23(5): nop 0x0(%rax,%rax,1)
5a28(5): mov $0xf97cff8c,%edx
5a2d(3): cmp %rdx,%rax
5a30(6): jz 0xfffffa30(%rip)
5a36(7): add $0x18e8bd,%rdx
5a3d(3): cmp %rdx,%rax
5a40(6): jnz 0xfffffc50(%rip)
5a46(2): xor %ebx,%ebx
5a48(5): jmp 0xfffff995(%rip)
5a4d(3): nop (%rax)
5a50(6): cmp $0x7275,%rax
5a56(6): jz 0xfffffa0a(%rip)
5a5c(6): cmp $0x72b6,%rax
5a62(6): jnz 0xfffffc2e(%rip)
5a68(2): xor %ebx,%ebx
5a6a(5): jmp 0xfffff973(%rip)
5a6f(1): nop 
5a70(6): sub $0x12ff7b4,%rax
5a76(4): cmp $0x3,%rax
5a7a(6): jnbe 0xfffffc16(%rip)
5a80(2): xor %ebx,%ebx
5a82(5): jmp 0xfffff95b(%rip)
5a87(5): call 0xffffc189(%rip)

"recheck" :
5a90(2): push %r15
5a92(2): push %r14
5a94(5): mov $0x2,%ecx
5a99(2): push %r13
5a9b(2): push %r12
5a9d(3): mov %esi,%r13d
5aa0(1): push %rbp
5aa1(1): push %rbx
5aa2(3): mov %rdi,%rbx
5aa5(7): sub $0xb8,%rsp
5aac(4): mov 0x3c(%rbx),%r14d
5ab0(9): mov $0x28,%rax
5ab9(8): mov %rax,0xa8(%rsp)
5ac1(2): xor %eax,%eax
5ac3(3): mov (%rdi),%rax
5ac6(7): lea 0x5d22(%rip),%rdi
5acd(3): mov %rax,%rsi
5ad0(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5ad2(4): movzx 0x36(%rbx),%ecx
5ad6(4): setnbe %bpl
5ada(4): sbb $0x0,%bpl
5ade(4): movsx %bpl,%ebp
5ae2(2): test %ebp,%ebp
5ae4(4): mov %cl,0x7(%rsp)
5ae8(6): jz 0x118(%rip)
5aee(2): xor %esi,%esi
5af0(3): test %r13b,%r13b
5af3(3): mov %rax,%rdi
5af6(4): setz %sil
5afa(2): xor %eax,%eax
5afc(3): shl/sal $0xb,%esi
5aff(5): call 0x1161(%rip)
5b04(3): mov %eax,%r12d
5b07(3): mov 0x3c(%rbx),%eax
5b0a(4): cmp $0xff,0x38(%rbx)
5b0e(3): setz %dl
5b11(2): test %eax,%eax
5b13(3): setz %al
5b16(2): cmp %al,%dl
5b18(6): jz 0x5a3(%rip)
5b1e(8): movzx 0x20a5f4(%rip),%r15d
5b26(7): movzx 0x20a5df(%rip),%eax
5b2d(3): test %r15b,%r15b
5b30(6): jnz 0xe0(%rip)
5b36(2): test %al,%al
5b38(4): mov $0x1,0x36(%rbx)
5b3c(6): jz 0x3ac(%rip)
5b42(4): cmp $0xff,%r12d
5b46(6): jnz 0x42a(%rip)
5b4c(5): movzx 0x36(%rbx),%r15d
5b51(3): mov (%rbx),%rbp
5b54(5): call 0xffffbfbc(%rip)
5b59(3): mov %rax,%r13
5b5c(2): mov (%rax),%eax
5b5e(3): test %r15b,%r15b
5b61(3): mov %eax,0x3c(%rbx)
5b64(6): jz 0x255(%rip)
5b6a(4): cmp %r14d,0x0(%r13)
5b6e(2): jz 0x33(%rip)
5b70(3): mov %rbp,%rdi
5b73(5): call 0xffffee6d(%rip)
5b78(5): mov $0x3,%esi
5b7d(3): mov %rax,%rdx
5b80(2): xor %edi,%edi
5b82(5): call 0x409e(%rip)
5b87(4): mov 0x0(%r13),%esi
5b8b(7): lea 0x6e3a(%rip),%rdx
5b92(3): mov %rax,%rcx
5b95(2): xor %edi,%edi
5b97(2): xor %eax,%eax
5b99(5): call 0xffffc2c7(%rip)
5b9e(3): mov (%rbx),%rbp
5ba1(3): mov %rbp,%rdi
5ba4(5): call 0xffffee3c(%rip)
5ba9(3): mov %r12d,%edi
5bac(3): mov %rax,%rsi
5baf(5): call 0xffffee71(%rip)
5bb4(3): mov (%rbx),%rdi
5bb7(5): call 0xffffee29(%rip)
5bbc(3): mov 0x38(%rbx),%edi
5bbf(3): mov %rax,%rsi
5bc2(5): call 0xffffee5e(%rip)
5bc7(7): mov $0xffffffff,0x38(%rbx)
5bce(8): mov 0xa8(%rsp),%rax
5bd6(9): xor $0x28,%rax
5bdf(6): jnz 0x4d7(%rip)
5be5(7): add $0xb8,%rsp
5bec(1): pop %rbx
5bed(1): pop %rbp
5bee(2): pop %r12
5bf0(2): pop %r13
5bf2(2): pop %r14
5bf4(2): pop %r15
5bf6(1): ret near (%rsp)
5bf7(9): nop 0x0(%rax,%rax,1)
5c00(3): mov %r14d,%eax
5c03(3): xor %r12d,%r12d
5c06(5): jmp 0xffffff04(%rip)
5c0b(5): nop 0x0(%rax,%rax,1)
5c10(4): cmp $0xff,%r12d
5c14(6): jz 0x18c(%rip)
5c1a(2): test %al,%al
5c1c(4): mov $0x1,0x36(%rbx)
5c20(5): lea 0x10(%rsp),%r8
5c25(6): jz 0x35b(%rip)
5c2b(3): mov %r8,%rdx
5c2e(3): mov %r12d,%esi
5c31(5): mov $0x1,%edi
5c36(5): call 0xffffc1ca(%rip)
5c3b(2): test %eax,%eax
5c3d(6): js 0xffffff0f(%rip)
5c43(4): mov 0x28(%rsp),%edx
5c47(2): mov %edx,%eax
5c49(5): and $0xf000,%eax
5c4e(5): sub $0x1000,%eax
5c53(5): test $0xffffe000,%eax
5c58(2): jz 0x58(%rip)
5c5a(6): and $0xb000,%edx
5c60(6): cmp $0x8000,%edx
5c66(2): jz 0x4a(%rip)
5c68(3): test %r15b,%r15b
5c6b(7): mov $0xffffffff,0x3c(%rbx)
5c72(4): mov $0x0,0x36(%rbx)
5c76(6): jz 0x1fa(%rip)
5c7c(7): cmp $0x1,0x20a39d(%rip)
5c83(6): jnz 0x1ed(%rip)
5c89(5): cmp $0x0,0x7(%rsp)
5c8e(4): mov $0x0,0x34(%rbx)
5c92(3): mov (%rbx),%rbp
5c95(6): jz 0x445(%rip)
5c9b(7): lea 0x735f(%rip),%r13
5ca2(5): jmp 0x1f8(%rip)
5ca7(9): nop 0x0(%rax,%rax,1)
5cb0(3): mov (%rbx),%rdi
5cb3(5): call 0xffffed2d(%rip)
5cb8(3): mov %r12d,%edi
5cbb(3): mov %rax,%rsi
5cbe(5): call 0xfffff6e2(%rip)
5cc3(2): test %al,%al
5cc5(3): mov %al,0x35(%rbx)
5cc8(6): jnz 0x148(%rip)
5cce(4): and $0xfd,%r14d
5cd2(7): mov $0x0,0x3c(%rbx)
5cd9(3): mov 0x38(%rbx),%eax
5cdc(6): jz 0x2e4(%rip)
5ce2(3): cmp $0xff,%eax
5ce5(6): jnz 0x40b(%rip)
5ceb(3): mov (%rbx),%rdi
5cee(5): call 0xffffecf2(%rip)
5cf3(5): mov $0x4,%edi
5cf8(3): mov %rax,%rsi
5cfb(5): call 0x3e25(%rip)
5d00(7): lea 0x5a0c(%rip),%rsi
5d07(3): mov %rax,%r14
5d0a(5): mov $0x5,%edx
5d0f(2): xor %edi,%edi
5d11(5): call 0xffffbebf(%rip)
5d16(3): mov %r14,%rcx
5d19(3): mov %rax,%rdx
5d1c(2): xor %esi,%esi
5d1e(2): xor %edi,%edi
5d20(2): xor %eax,%eax
5d22(5): call 0xffffc13e(%rip)
5d27(2): test %ebp,%ebp
5d29(5): mov $0xffffffff,%eax
5d2e(4): movzx %r13b,%r13d
5d32(4): cmove %eax,%r13d
5d36(5): mov 0x68(%rsp),%rax
5d3b(3): mov (%rbx),%rdi
5d3e(4): mov %r12d,0x38(%rbx)
5d42(8): mov $0x0,0x8(%rbx)
5d4a(4): mov %r13d,0x40(%rbx)
5d4e(8): mov $0x0,0x58(%rbx)
5d56(4): mov %rax,0x10(%rbx)
5d5a(5): mov 0x70(%rsp),%rax
5d5f(4): mov $0x0,0x34(%rbx)
5d63(4): mov %rax,0x18(%rbx)
5d67(5): mov 0x10(%rsp),%rax
5d6c(4): mov %rax,0x20(%rbx)
5d70(5): mov 0x18(%rsp),%rax
5d75(4): mov %rax,0x28(%rbx)
5d79(4): mov 0x28(%rsp),%eax
5d7d(3): mov %eax,0x30(%rbx)
5d80(5): call 0xffffec60(%rip)
5d85(2): xor %edx,%edx
5d87(3): mov %rax,%rcx
5d8a(2): xor %esi,%esi
5d8c(3): mov %r12d,%edi
5d8f(5): call 0xfffff111(%rip)
5d94(5): jmp 0xfffffe3a(%rip)
5d99(7): nop 0x0(%rax)
5da0(2): test %al,%al
5da2(4): mov $0x0,0x36(%rbx)
5da6(3): mov (%rbx),%rbp
5da9(6): jz 0x2af(%rip)
5daf(5): call 0xffffbd61(%rip)
5db4(2): mov (%rax),%eax
5db6(3): mov %eax,0x3c(%rbx)
5db9(5): cmp $0x0,0x7(%rsp)
5dbe(6): jz 0xfffffde3(%rip)
5dc4(3): mov %rbp,%rdi
5dc7(5): call 0xffffec19(%rip)
5dcc(5): mov $0x4,%edi
5dd1(3): mov %rax,%rsi
5dd4(5): call 0x3d4c(%rip)
5dd9(7): lea 0x58f3(%rip),%rsi
5de0(5): mov $0x5,%edx
5de5(2): xor %edi,%edi
5de7(3): mov %rax,%rbp
5dea(5): call 0xffffbde6(%rip)
5def(3): mov 0x3c(%rbx),%esi
5df2(3): mov %rbp,%rcx
5df5(3): mov %rax,%rdx
5df8(2): xor %edi,%edi
5dfa(2): xor %eax,%eax
5dfc(5): call 0xffffc064(%rip)
5e01(3): mov (%rbx),%rbp
5e04(5): jmp 0xfffffd9d(%rip)
5e09(7): nop 0x0(%rax)
5e10(7): cmp $0x0,0x20a2f5(%rip)
5e17(6): jnz 0xfffffeb7(%rip)
5e1d(3): mov (%rbx),%rdi
5e20(7): mov $0xffffffff,0x3c(%rbx)
5e27(5): call 0xffffebb9(%rip)
5e2c(5): mov $0x4,%edi
5e31(3): mov %rax,%rsi
5e34(5): call 0x3cec(%rip)
5e39(7): lea 0x5cb0(%rip),%rsi
5e40(3): mov %rax,%rbp
5e43(5): mov $0x5,%edx
5e48(2): xor %edi,%edi
5e4a(5): call 0xffffbd86(%rip)
5e4f(3): mov %rbp,%rcx
5e52(3): mov %rax,%rdx
5e55(2): xor %esi,%esi
5e57(2): xor %edi,%edi
5e59(2): xor %eax,%eax
5e5b(5): call 0xffffc005(%rip)
5e60(4): mov $0x1,0x34(%rbx)
5e64(4): mov $0x1,0x35(%rbx)
5e68(3): mov (%rbx),%rbp
5e6b(5): jmp 0xfffffd36(%rip)
5e70(5): cmp $0x0,0x7(%rsp)
5e75(4): mov $0x1,0x34(%rbx)
5e79(2): jnz 0x8(%rip)
5e7b(4): cmp $0xff,%r14d
5e7f(2): jz 0x5a(%rip)
5e81(7): lea 0x5866(%rip),%rsi
5e88(5): mov $0x5,%edx
5e8d(2): xor %edi,%edi
5e8f(5): call 0xffffbd41(%rip)
5e94(3): mov (%rbx),%rbp
5e97(3): mov %rax,%r13
5e9a(3): mov %rbp,%rdi
5e9d(5): call 0xffffeb43(%rip)
5ea2(5): mov $0x4,%edi
5ea7(3): mov %rax,%rsi
5eaa(5): call 0x3c76(%rip)
5eaf(7): lea 0x5c0a(%rip),%rsi
5eb6(3): mov %rax,%rbp
5eb9(5): mov $0x5,%edx
5ebe(2): xor %edi,%edi
5ec0(5): call 0xffffbd10(%rip)
5ec5(3): mov %r13,%r8
5ec8(3): mov %rax,%rdx
5ecb(3): mov %rbp,%rcx
5ece(2): xor %esi,%esi
5ed0(2): xor %edi,%edi
5ed2(2): xor %eax,%eax
5ed4(5): call 0xffffbf8c(%rip)
5ed9(3): mov (%rbx),%rbp
5edc(5): jmp 0xfffffcc5(%rip)
5ee1(7): nop 0x0(%rax)
5ee8(5): lea 0x10(%rsp),%r8
5eed(3): mov (%rbx),%rsi
5ef0(5): mov $0x1,%edi
5ef5(3): mov %r8,%rdx
5ef8(5): call 0xffffbd08(%rip)
5efd(2): test %eax,%eax
5eff(6): jnz 0xfffffc43(%rip)
5f05(4): mov 0x28(%rsp),%eax
5f09(5): and $0xf000,%eax
5f0e(5): cmp $0xa000,%eax
5f13(6): jnz 0xfffffc2f(%rip)
5f19(3): mov (%rbx),%rdi
5f1c(7): mov $0xffffffff,0x3c(%rbx)
5f23(4): mov $0x1,0x34(%rbx)
5f27(5): call 0xffffeab9(%rip)
5f2c(5): mov $0x4,%edi
5f31(3): mov %rax,%rsi
5f34(5): call 0x3bec(%rip)
5f39(7): lea 0x5b48(%rip),%rsi
5f40(3): mov %rax,%rbp
5f43(5): mov $0x5,%edx
5f48(2): xor %edi,%edi
5f4a(5): call 0xffffbc86(%rip)
5f4f(3): mov %rbp,%rcx
5f52(3): mov %rax,%rdx
5f55(2): xor %esi,%esi
5f57(2): xor %edi,%edi
5f59(2): xor %eax,%eax
5f5b(5): call 0xffffbf05(%rip)
5f60(3): mov (%rbx),%rbp
5f63(5): jmp 0xfffffc3e(%rip)
5f68(8): nop 0x0(%rax,%rax,1)
5f70(5): lea 0x10(%rsp),%r8
5f75(5): jmp 0xfffffcb6(%rip)
5f7a(6): nop 0x0(%rax,%rax,1)
5f80(3): mov (%rbx),%rsi
5f83(3): mov %r8,%rdx
5f86(5): mov $0x1,%edi
5f8b(5): mov %r8,0x8(%rsp)
5f90(5): call 0xffffbc70(%rip)
5f95(2): test %eax,%eax
5f97(5): mov 0x8(%rsp),%r8
5f9c(6): jnz 0xfffffc8f(%rip)
5fa2(4): mov 0x28(%rsp),%eax
5fa6(5): and $0xf000,%eax
5fab(5): cmp $0xa000,%eax
5fb0(6): jnz 0xfffffc7b(%rip)
5fb6(5): jmp 0xffffff63(%rip)
5fbb(5): nop 0x0(%rax,%rax,1)
5fc0(3): cmp $0xff,%eax
5fc3(3): mov (%rbx),%rdi
5fc6(6): jz 0xca(%rip)
5fcc(5): mov 0x18(%rsp),%rax
5fd1(4): cmp %rax,0x28(%rbx)
5fd5(2): jnz 0x2b(%rip)
5fd7(5): mov 0x10(%rsp),%rax
5fdc(4): cmp %rax,0x20(%rbx)
5fe0(2): jnz 0x20(%rip)
5fe2(5): call 0xffffe9fe(%rip)
5fe7(3): mov %r12d,%edi
5fea(3): mov %rax,%rsi
5fed(5): call 0xffffea33(%rip)
5ff2(5): jmp 0xfffffbdc(%rip)
5ff7(9): nop 0x0(%rax,%rax,1)
6000(5): call 0xffffe9e0(%rip)
6005(5): mov $0x4,%edi
600a(3): mov %rax,%rsi
600d(5): call 0x3b13(%rip)
6012(7): lea 0x5b37(%rip),%rsi
6019(3): mov %rax,%r14
601c(2): xor %edi,%edi
601e(5): mov $0x5,%edx
6023(5): call 0xffffbbad(%rip)
6028(2): xor %esi,%esi
602a(3): mov %rax,%rdx
602d(3): mov %r14,%rcx
6030(2): xor %edi,%edi
6032(2): xor %eax,%eax
6034(5): call 0xffffbe2c(%rip)
6039(3): mov (%rbx),%rdi
603c(5): call 0xffffe9a4(%rip)
6041(3): mov 0x38(%rbx),%edi
6044(3): mov %rax,%rsi
6047(5): call 0xffffe9d9(%rip)
604c(5): jmp 0xfffffcdb(%rip)
6051(7): nop 0x0(%rax)
6058(5): lea 0x10(%rsp),%rdx
605d(3): mov %rbp,%rsi
6060(5): mov $0x1,%edi
6065(5): call 0xffffbb9b(%rip)
606a(2): test %eax,%eax
606c(6): jnz 0xfffffae0(%rip)
6072(4): mov 0x28(%rsp),%eax
6076(5): and $0xf000,%eax
607b(5): cmp $0xa000,%eax
6080(6): jnz 0xfffffacc(%rip)
6086(5): jmp 0xfffffe93(%rip)
608b(5): nop 0x0(%rax,%rax,1)
6090(5): call 0xffffe950(%rip)
6095(5): mov $0x4,%edi
609a(3): mov %rax,%rsi
609d(5): call 0x3a83(%rip)
60a2(5): mov $0x5,%edx
60a7(3): mov %rax,%r14
60aa(7): lea 0x5a77(%rip),%rsi
60b1(5): jmp 0xfffffc5e(%rip)
60b6(5): call 0xffffbb5a(%rip)
60bb(7): lea 0x687e(%rip),%rcx
60c2(7): lea 0x55d9(%rip),%rsi
60c9(7): lea 0x55ef(%rip),%rdi
60d0(5): mov $0x3df,%edx
60d5(5): call 0xffffbbdb(%rip)
60da(4): add $0x1,%r14d
60de(7): lea 0x6f1c(%rip),%r13
60e5(6): jnz 0xfffffdb5(%rip)
60eb(5): jmp 0xfffffab6(%rip)
60f0(7): lea 0x6849(%rip),%rcx
60f7(7): lea 0x55a4(%rip),%rsi
60fe(7): lea 0x5602(%rip),%rdi
6105(5): mov $0x42c,%edx
610a(5): call 0xffffbba6(%rip)

"usage" :
6110(2): push %r13
6112(2): push %r12
6114(5): mov $0x5,%edx
6119(1): push %rbp
611a(1): push %rbx
611b(2): mov %edi,%ebp
611d(7): sub $0x88,%rsp
6124(7): mov 0x20a005(%rip),%rbx
612b(9): mov $0x28,%rax
6134(5): mov %rax,0x78(%rsp)
6139(2): xor %eax,%eax
613b(2): test %edi,%edi
613d(2): jz 0x30(%rip)
613f(7): lea 0x5a3a(%rip),%rsi
6146(2): xor %edi,%edi
6148(5): call 0xffffba88(%rip)
614d(7): mov 0x209fac(%rip),%rdi
6154(3): mov %rax,%rdx
6157(3): mov %rbx,%rcx
615a(5): mov $0x1,%esi
615f(2): xor %eax,%eax
6161(5): call 0xffffbd7f(%rip)
6166(2): mov %ebp,%edi
6168(5): call 0xffffbd58(%rip)
616d(7): lea 0x5a34(%rip),%rsi
6174(2): xor %edi,%edi
6176(5): call 0xffffba5a(%rip)
617b(3): mov %rbx,%rdx
617e(3): mov %rax,%rsi
6181(5): mov $0x1,%edi
6186(2): xor %eax,%eax
6188(5): call 0xffffbcc8(%rip)
618d(7): lea 0x5a3c(%rip),%rsi
6194(2): xor %edi,%edi
6196(5): mov $0x5,%edx
619b(5): call 0xffffba35(%rip)
61a0(5): mov $0xa,%edx
61a5(3): mov %rax,%rsi
61a8(5): mov $0x1,%edi
61ad(2): xor %eax,%eax
61af(5): call 0xffffbca1(%rip)
61b4(7): mov 0x209f0d(%rip),%rbx
61bb(7): lea 0x5a96(%rip),%rsi
61c2(5): mov $0x5,%edx
61c7(2): xor %edi,%edi
61c9(5): call 0xffffba07(%rip)
61ce(3): mov %rbx,%rsi
61d1(3): mov %rax,%rdi
61d4(5): call 0xffffbb4c(%rip)
61d9(7): mov 0x209ee8(%rip),%rbx
61e0(7): lea 0x5aa9(%rip),%rsi
61e7(5): mov $0x5,%edx
61ec(2): xor %edi,%edi
61ee(5): call 0xffffb9e2(%rip)
61f3(3): mov %rbx,%rsi
61f6(3): mov %rax,%rdi
61f9(5): call 0xffffbb27(%rip)
61fe(7): mov 0x209ec3(%rip),%rbx
6205(7): lea 0x5ad4(%rip),%rsi
620c(5): mov $0x5,%edx
6211(2): xor %edi,%edi
6213(5): call 0xffffb9bd(%rip)
6218(3): mov %rbx,%rsi
621b(3): mov %rax,%rdi
621e(5): call 0xffffbb02(%rip)
6223(7): mov 0x209e9e(%rip),%rbx
622a(7): lea 0x5b47(%rip),%rsi
6231(5): mov $0x5,%edx
6236(2): xor %edi,%edi
6238(5): call 0xffffb998(%rip)
623d(3): mov %rbx,%rsi
6240(3): mov %rax,%rdi
6243(5): call 0xffffbadd(%rip)
6248(7): lea 0x5c19(%rip),%rsi
624f(2): xor %edi,%edi
6251(5): mov $0x5,%edx
6256(5): call 0xffffb97a(%rip)
625b(5): mov $0x5,%ecx
6260(3): mov %rax,%rsi
6263(5): mov $0xa,%edx
6268(5): mov $0x1,%edi
626d(2): xor %eax,%eax
626f(5): call 0xffffbbe1(%rip)
6274(7): mov 0x209e4d(%rip),%rbx
627b(7): lea 0x5e16(%rip),%rsi
6282(5): mov $0x5,%edx
6287(2): xor %edi,%edi
6289(5): call 0xffffb947(%rip)
628e(3): mov %rbx,%rsi
6291(3): mov %rax,%rdi
6294(5): call 0xffffba8c(%rip)
6299(7): mov 0x209e28(%rip),%rbx
62a0(7): lea 0x5ec9(%rip),%rsi
62a7(5): mov $0x5,%edx
62ac(2): xor %edi,%edi
62ae(5): call 0xffffb922(%rip)
62b3(3): mov %rbx,%rsi
62b6(3): mov %rax,%rdi
62b9(5): call 0xffffba67(%rip)
62be(7): mov 0x209e03(%rip),%rbx
62c5(7): lea 0x5ff4(%rip),%rsi
62cc(5): mov $0x5,%edx
62d1(2): xor %edi,%edi
62d3(5): call 0xffffb8fd(%rip)
62d8(3): mov %rbx,%rsi
62db(3): mov %rax,%rdi
62de(5): call 0xffffba42(%rip)
62e3(7): mov 0x209dde(%rip),%rbx
62ea(7): lea 0x600f(%rip),%rsi
62f1(5): mov $0x5,%edx
62f6(2): xor %edi,%edi
62f8(5): call 0xffffb8d8(%rip)
62fd(3): mov %rbx,%rsi
6300(3): mov %rax,%rdi
6303(5): call 0xffffba1d(%rip)
6308(7): mov 0x209db9(%rip),%rbx
630f(7): lea 0x601a(%rip),%rsi
6316(5): mov $0x5,%edx
631b(2): xor %edi,%edi
631d(5): call 0xffffb8b3(%rip)
6322(3): mov %rbx,%rsi
6325(3): mov %rax,%rdi
6328(5): call 0xffffb9f8(%rip)
632d(7): mov 0x209d94(%rip),%rbx
6334(7): lea 0x602d(%rip),%rsi
633b(5): mov $0x5,%edx
6340(2): xor %edi,%edi
6342(5): call 0xffffb88e(%rip)
6347(3): mov %rbx,%rsi
634a(3): mov %rax,%rdi
634d(5): call 0xffffb9d3(%rip)
6352(7): mov 0x209d6f(%rip),%rbx
6359(7): lea 0x60e0(%rip),%rsi
6360(5): mov $0x5,%edx
6365(2): xor %edi,%edi
6367(5): call 0xffffb869(%rip)
636c(3): mov %rbx,%rsi
636f(3): mov %rax,%rdi
6372(7): lea 0x53b3(%rip),%rbx
6379(5): call 0xffffb9a7(%rip)
637e(7): lea 0x53ac(%rip),%rax
6385(7): lea 0x53e6(%rip),%rcx
638c(9): mov $0x0,0x60(%rsp)
6395(9): mov $0x0,0x68(%rsp)
639e(3): mov %rsp,%rdx
63a1(4): mov %rax,(%rsp)
63a5(7): lea 0x5387(%rip),%rax
63ac(5): mov %rcx,0x30(%rsp)
63b1(7): lea 0x53c4(%rip),%rcx
63b8(5): mov %rax,0x8(%rsp)
63bd(7): lea 0x53e7(%rip),%rax
63c4(5): mov %rcx,0x40(%rsp)
63c9(7): lea 0x53b6(%rip),%rcx
63d0(5): mov %rax,0x10(%rsp)
63d5(7): lea 0x5367(%rip),%rax
63dc(5): mov %rcx,0x50(%rsp)
63e1(5): mov %rax,0x18(%rsp)
63e6(7): lea 0x536c(%rip),%rax
63ed(5): mov %rax,0x20(%rsp)
63f2(7): lea 0x536a(%rip),%rax
63f9(5): mov %rax,0x28(%rsp)
63fe(5): mov %rax,0x38(%rsp)
6403(5): mov %rax,0x48(%rsp)
6408(5): mov %rax,0x58(%rsp)
640d(3): nop (%rax)
6410(4): add $0x10,%rdx
6414(3): mov (%rdx),%rdi
6417(3): test %rdi,%rdi
641a(2): jz 0x15(%rip)
641c(5): mov $0x5,%ecx
6421(3): mov %rbx,%rsi
6424(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6426(3): setnbe %al
6429(2): sbb $0x0,%al
642b(2): test %al,%al
642d(2): jnz 0xffffffe3(%rip)
642f(4): mov 0x8(%rdx),%r12
6433(2): xor %edi,%edi
6435(5): mov $0x5,%edx
643a(7): lea 0x534f(%rip),%rsi
6441(3): test %r12,%r12
6444(6): jz 0xc7(%rip)
644a(5): call 0xffffb786(%rip)
644f(7): lea 0x61a2(%rip),%rcx
6456(7): lea 0x534a(%rip),%rdx
645d(3): mov %rax,%rsi
6460(5): mov $0x1,%edi
6465(2): xor %eax,%eax
6467(5): call 0xffffb9e9(%rip)
646c(2): xor %esi,%esi
646e(5): mov $0x5,%edi
6473(5): call 0xffffb9cd(%rip)
6478(3): test %rax,%rax
647b(2): jz 0x1e(%rip)
647d(7): lea 0x5331(%rip),%rsi
6484(5): mov $0x3,%edx
6489(3): mov %rax,%rdi
648c(5): call 0xffffb694(%rip)
6491(2): test %eax,%eax
6493(6): jnz 0x10d(%rip)
6499(7): lea 0x5319(%rip),%rsi
64a0(2): xor %edi,%edi
64a2(5): mov $0x5,%edx
64a7(5): call 0xffffb729(%rip)
64ac(7): lea 0x5279(%rip),%rcx
64b3(7): lea 0x613e(%rip),%rdx
64ba(3): mov %rax,%rsi
64bd(5): mov $0x1,%edi
64c2(2): xor %eax,%eax
64c4(5): call 0xffffb98c(%rip)
64c9(3): cmp %rbx,%r12
64cc(7): lea 0x527a(%rip),%rcx
64d3(7): lea 0x6b27(%rip),%rbx
64da(4): cmove %rcx,%rbx
64de(7): lea 0x6183(%rip),%rsi
64e5(2): xor %edi,%edi
64e7(5): mov $0x5,%edx
64ec(5): call 0xffffb6e4(%rip)
64f1(3): mov %rbx,%rcx
64f4(3): mov %rax,%rsi
64f7(3): mov %r12,%rdx
64fa(5): mov $0x1,%edi
64ff(2): xor %eax,%eax
6501(5): call 0xffffb94f(%rip)
6506(5): jmp 0xfffffc60(%rip)
650b(5): call 0xffffb6c5(%rip)
6510(7): lea 0x60e1(%rip),%rcx
6517(7): lea 0x5289(%rip),%rdx
651e(3): mov %rax,%rsi
6521(5): mov $0x1,%edi
6526(2): xor %eax,%eax
6528(5): call 0xffffb928(%rip)
652d(2): xor %esi,%esi
652f(5): mov $0x5,%edi
6534(5): call 0xffffb90c(%rip)
6539(3): test %rax,%rax
653c(2): jz 0x1a(%rip)
653e(7): lea 0x5270(%rip),%rsi
6545(5): mov $0x3,%edx
654a(3): mov %rax,%rdi
654d(5): call 0xffffb5d3(%rip)
6552(2): test %eax,%eax
6554(2): jnz 0x45(%rip)
6556(7): lea 0x525c(%rip),%rsi
655d(5): mov $0x5,%edx
6562(2): xor %edi,%edi
6564(7): lea 0x51c1(%rip),%r12
656b(7): lea 0x51db(%rip),%rbx
6572(5): call 0xffffb65e(%rip)
6577(7): lea 0x51ae(%rip),%rcx
657e(7): lea 0x6073(%rip),%rdx
6585(3): mov %rax,%rsi
6588(5): mov $0x1,%edi
658d(2): xor %eax,%eax
658f(5): call 0xffffb8c1(%rip)
6594(5): jmp 0xffffff4a(%rip)
6599(7): lea 0x518c(%rip),%r12
65a0(7): mov 0x209b21(%rip),%r13
65a7(7): lea 0x6072(%rip),%rsi
65ae(2): xor %edi,%edi
65b0(5): mov $0x5,%edx
65b5(5): call 0xffffb61b(%rip)
65ba(3): mov %r13,%rsi
65bd(3): mov %rax,%rdi
65c0(5): call 0xffffb760(%rip)
65c5(5): jmp 0xfffffed4(%rip)

"__argmatch_die" :
65d0(5): mov $0x1,%edi
65d5(5): jmp 0xfffffb3b(%rip)

"argmatch" :
65e0(2): push %r15
65e2(2): push %r14
65e4(3): mov %rsi,%r15
65e7(2): push %r13
65e9(2): push %r12
65eb(3): mov %rcx,%r13
65ee(1): push %rbp
65ef(1): push %rbx
65f0(3): mov %rdx,%rbp
65f3(4): sub $0x28,%rsp
65f7(5): mov %rdi,0x8(%rsp)
65fc(5): mov %rdx,0x18(%rsp)
6601(5): call 0xffffb5ef(%rip)
6606(3): mov (%r15),%r14
6609(8): mov $0xffffffff,(%rsp)
6611(3): test %r14,%r14
6614(6): jz 0xb9(%rip)
661a(3): mov %rax,%r12
661d(5): mov $0x0,0x17(%rsp)
6622(2): xor %ebx,%ebx
6624(2): jmp 0x53(%rip)
6626(a): nop 0x0(%rax,%rax,1)
6630(5): mov 0x18(%rsp),%rax
6635(3): test %rax,%rax
6638(6): jz 0xa8(%rip)
663e(4): mov (%rsp),%rdi
6642(3): mov %r13,%rdx
6645(3): mov %rbp,%rsi
6648(4): imul %r13,%rdi
664c(3): add %rax,%rdi
664f(5): call 0xffffb6c1(%rip)
6654(2): test %eax,%eax
6656(5): movzx 0x17(%rsp),%eax
665b(5): mov $0x1,%ecx
6660(3): cmovne %ecx,%eax
6663(4): mov %al,0x17(%rsp)
6667(4): add $0x1,%rbx
666b(3): add %r13,%rbp
666e(4): mov 0x0(%r15,%rbx,8),%r14
6672(3): test %r14,%r14
6675(2): jz 0x43(%rip)
6677(5): mov 0x8(%rsp),%rsi
667c(3): mov %r12,%rdx
667f(3): mov %r14,%rdi
6682(5): call 0xffffb49e(%rip)
6687(2): test %eax,%eax
6689(2): jnz 0xffffffde(%rip)
668b(3): mov %r14,%rdi
668e(5): call 0xffffb562(%rip)
6693(3): cmp %r12,%rax
6696(2): jz 0x5a(%rip)
6698(5): cmp $0xffffffff,(%rsp)
669d(2): jnz 0xffffff93(%rip)
669f(4): mov %rbx,(%rsp)
66a3(4): add $0x1,%rbx
66a7(3): add %r13,%rbp
66aa(4): mov 0x0(%r15,%rbx,8),%r14
66ae(3): test %r14,%r14
66b1(2): jnz 0xffffffc6(%rip)
66b3(5): nop 0x0(%rax,%rax,1)
66b8(5): cmp $0x0,0x17(%rsp)
66bd(7): mov $0xfffffffe,%rax
66c4(5): cmove (%rsp),%rax
66c9(4): mov %rax,(%rsp)
66cd(4): mov (%rsp),%rax
66d1(4): add $0x28,%rsp
66d5(1): pop %rbx
66d6(1): pop %rbp
66d7(2): pop %r12
66d9(2): pop %r13
66db(2): pop %r14
66dd(2): pop %r15
66df(1): ret near (%rsp)
66e0(5): mov $0x1,0x17(%rsp)
66e5(2): jmp 0xffffff82(%rip)
66e7(9): nop 0x0(%rax,%rax,1)
66f0(4): mov %rbx,(%rsp)
66f4(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
6700(4): cmp $0xffffffff,%rdx
6704(2): push %r12
6706(5): mov $0x5,%edx
670b(1): push %rbp
670c(3): mov %rsi,%r12
670f(1): push %rbx
6710(3): mov %rdi,%rbp
6713(2): jz 0x4d(%rip)
6715(7): lea 0x6274(%rip),%rsi
671c(2): xor %edi,%edi
671e(5): call 0xffffb4b2(%rip)
6723(3): mov %rax,%rbx
6726(3): mov %rbp,%rsi
6729(5): mov $0x1,%edi
672e(5): call 0x36a2(%rip)
6733(3): mov %r12,%rdx
6736(3): mov %rax,%rbp
6739(5): mov $0x8,%esi
673e(2): xor %edi,%edi
6740(5): call 0x32c0(%rip)
6745(3): mov %rbp,%r8
6748(3): mov %rbx,%rdx
674b(3): mov %rax,%rcx
674e(1): pop %rbx
674f(1): pop %rbp
6750(2): pop %r12
6752(2): xor %esi,%esi
6754(2): xor %edi,%edi
6756(2): xor %eax,%eax
6758(5): jmp 0xffffb708(%rip)
675d(3): nop (%rax)
6760(7): lea 0x620e(%rip),%rsi
6767(2): xor %edi,%edi
6769(5): call 0xffffb467(%rip)
676e(3): mov %rax,%rbx
6771(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
6780(2): push %r15
6782(2): push %r14
6784(3): mov %rdi,%r14
6787(2): push %r13
6789(2): push %r12
678b(2): xor %edi,%edi
678d(1): push %rbp
678e(1): push %rbx
678f(3): mov %rsi,%rbp
6792(7): lea 0x6214(%rip),%rsi
6799(3): mov %rdx,%r12
679c(5): mov $0x5,%edx
67a1(4): sub $0x8,%rsp
67a5(7): mov 0x209954(%rip),%rbx
67ac(5): call 0xffffb424(%rip)
67b1(3): mov %rax,%rdi
67b4(3): mov %rbx,%rsi
67b7(5): call 0xffffb569(%rip)
67bc(3): mov (%r14),%r15
67bf(3): test %r15,%r15
67c2(6): jz 0x96(%rip)
67c8(3): xor %r13d,%r13d
67cb(2): xor %ebx,%ebx
67cd(2): jmp 0x3b(%rip)
67cf(1): nop 
67d0(3): mov %r15,%rdi
67d3(4): add $0x1,%rbx
67d7(3): mov %rbp,%r13
67da(5): call 0x3616(%rip)
67df(7): mov 0x20991a(%rip),%rdi
67e6(7): lea 0x61d5(%rip),%rdx
67ed(3): mov %rax,%rcx
67f0(5): mov $0x1,%esi
67f5(2): xor %eax,%eax
67f7(3): add %r12,%rbp
67fa(5): call 0xffffb6e6(%rip)
67ff(4): mov 0x0(%r14,%rbx,8),%r15
6803(3): test %r15,%r15
6806(2): jz 0x52(%rip)
6808(3): test %rbx,%rbx
680b(2): jz 0xffffffc5(%rip)
680d(3): mov %r12,%rdx
6810(3): mov %rbp,%rsi
6813(3): mov %r13,%rdi
6816(5): call 0xffffb4fa(%rip)
681b(2): test %eax,%eax
681d(2): jnz 0xffffffb3(%rip)
681f(3): mov %r15,%rdi
6822(4): add $0x1,%rbx
6826(3): add %r12,%rbp
6829(5): call 0x35c7(%rip)
682e(7): mov 0x2098cb(%rip),%rdi
6835(7): lea 0x618e(%rip),%rdx
683c(3): mov %rax,%rcx
683f(5): mov $0x1,%esi
6844(2): xor %eax,%eax
6846(5): call 0xffffb69a(%rip)
684b(4): mov 0x0(%r14,%rbx,8),%r15
684f(3): test %r15,%r15
6852(2): jnz 0xffffffb6(%rip)
6854(4): nop 0x0(%rax)
6858(7): mov 0x2098a1(%rip),%rdi
685f(4): mov 0x28(%rdi),%rax
6863(4): cmp 0x30(%rdi),%rax
6867(2): jnb 0x21(%rip)
6869(4): lea 0x1(%rax),%rdx
686d(4): mov %rdx,0x28(%rdi)
6871(3): mov $0xa,(%rax)
6874(4): add $0x8,%rsp
6878(1): pop %rbx
6879(1): pop %rbp
687a(2): pop %r12
687c(2): pop %r13
687e(2): pop %r14
6880(2): pop %r15
6882(1): ret near (%rsp)
6883(5): nop 0x0(%rax,%rax,1)
6888(4): add $0x8,%rsp
688c(5): mov $0xa,%esi
6891(1): pop %rbx
6892(1): pop %rbp
6893(2): pop %r12
6895(2): pop %r13
6897(2): pop %r14
6899(2): pop %r15
689b(5): jmp 0xffffb3e5(%rip)

"__xargmatch_internal" :
68a0(2): push %r15
68a2(2): push %r14
68a4(3): mov %rdi,%r14
68a7(2): push %r13
68a9(2): push %r12
68ab(3): mov %rsi,%r12
68ae(1): push %rbp
68af(1): push %rbx
68b0(3): mov %rcx,%rbp
68b3(3): mov %rdx,%rbx
68b6(3): mov %r8,%rcx
68b9(3): mov %rbp,%rdx
68bc(4): sub $0x8,%rsp
68c0(3): mov %rbx,%rsi
68c3(3): mov %r12,%rdi
68c6(3): mov %r8,%r15
68c9(3): mov %r9,%r13
68cc(5): call 0xfffffd14(%rip)
68d1(3): test %rax,%rax
68d4(2): js 0x11(%rip)
68d6(4): add $0x8,%rsp
68da(1): pop %rbx
68db(1): pop %rbp
68dc(2): pop %r12
68de(2): pop %r13
68e0(2): pop %r14
68e2(2): pop %r15
68e4(1): ret near (%rsp)
68e5(3): mov %rax,%rdx
68e8(3): mov %r12,%rsi
68eb(3): mov %r14,%rdi
68ee(5): call 0xfffffe12(%rip)
68f3(3): mov %r15,%rdx
68f6(3): mov %rbp,%rsi
68f9(3): mov %rbx,%rdi
68fc(5): call 0xfffffe84(%rip)
6901(3): call %r13
6904(7): mov $0xffffffff,%rax
690b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
6910(2): push %r14
6912(2): push %r13
6914(2): push %r12
6916(1): push %rbp
6917(1): push %rbx
6918(3): mov (%rsi),%r14
691b(3): test %r14,%r14
691e(2): jz 0x33(%rip)
6920(3): mov %rcx,%r12
6923(3): mov %rdi,%r13
6926(3): mov %rdx,%rbp
6929(4): lea 0x8(%rsi),%rbx
692d(2): jmp 0x12(%rip)
692f(1): nop 
6930(3): mov (%rbx),%r14
6933(3): add %r12,%rbp
6936(4): add $0x8,%rbx
693a(3): test %r14,%r14
693d(2): jz 0x14(%rip)
693f(3): mov %r12,%rdx
6942(3): mov %rbp,%rsi
6945(3): mov %r13,%rdi
6948(5): call 0xffffb3c8(%rip)
694d(2): test %eax,%eax
694f(2): jnz 0xffffffe1(%rip)
6951(1): pop %rbx
6952(3): mov %r14,%rax
6955(1): pop %rbp
6956(2): pop %r12
6958(2): pop %r13
695a(2): pop %r14
695c(1): ret near (%rsp)

"cl_strtod" :
6960(2): push %r13
6962(2): push %r12
6964(1): push %rbp
6965(1): push %rbx
6966(3): mov %rsi,%rbx
6969(3): mov %rdi,%rbp
696c(4): sub $0x38,%rsp
6970(5): lea 0x18(%rsp),%rsi
6975(9): mov $0x28,%rax
697e(5): mov %rax,0x28(%rsp)
6983(2): xor %eax,%eax
6985(5): call 0xffffb1db(%rip)
698a(5): mov 0x18(%rsp),%rax
698f(4): movapd %xmm0,%xmm1
6993(3): cmp $0x0,(%rax)
6996(2): jnz 0x32(%rip)
6998(3): test %rbx,%rbx
699b(2): jz 0xa(%rip)
699d(5): mov 0x18(%rsp),%rax
69a2(3): mov %rax,(%rbx)
69a5(5): mov 0x28(%rsp),%rax
69aa(9): xor $0x28,%rax
69b3(4): movapd %xmm1,%xmm0
69b7(2): jnz 0x57(%rip)
69b9(4): add $0x38,%rsp
69bd(1): pop %rbx
69be(1): pop %rbp
69bf(2): pop %r12
69c1(2): pop %r13
69c3(1): ret near (%rsp)
69c4(4): nop 0x0(%rax)
69c8(6): movsd %xmm0,0x8(%rsp)
69ce(5): call 0xffffb142(%rip)
69d3(5): lea 0x20(%rsp),%rsi
69d8(3): mov %rbp,%rdi
69db(3): mov %rax,%r12
69de(3): mov (%rax),%r13d
69e1(5): call 0x47ff(%rip)
69e6(5): mov 0x20(%rsp),%rax
69eb(5): cmp %rax,0x18(%rsp)
69f0(6): movsd 0x8(%rsp),%xmm1
69f6(2): jnb 0x12(%rip)
69f8(5): mov %rax,0x18(%rsp)
69fd(4): movapd %xmm0,%xmm1
6a01(2): jmp 0xffffff97(%rip)
6a03(5): nop 0x0(%rax,%rax,1)
6a08(4): mov %r13d,(%r12)
6a0c(2): jmp 0xffffff8c(%rip)
6a0e(5): call 0xffffb202(%rip)

"close_stdout_set_file_name" :
6a20(7): mov %rdi,0x209701(%rip)
6a27(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
6a30(7): mov %dil,0x2096e9(%rip)
6a37(1): ret near (%rsp)

"close_stdout" :
6a40(1): push %rbp
6a41(1): push %rbx
6a42(4): sub $0x8,%rsp
6a46(7): mov 0x20967b(%rip),%rdi
6a4d(5): call 0x4803(%rip)
6a52(2): test %eax,%eax
6a54(2): jz 0x18(%rip)
6a56(5): call 0xffffb0ba(%rip)
6a5b(7): cmp $0x0,0x2096be(%rip)
6a62(3): mov %rax,%rbx
6a65(2): jz 0x1e(%rip)
6a67(3): cmp $0x20,(%rax)
6a6a(2): jnz 0x19(%rip)
6a6c(7): mov 0x20968d(%rip),%rdi
6a73(5): call 0x47dd(%rip)
6a78(2): test %eax,%eax
6a7a(2): jnz 0x48(%rip)
6a7c(4): add $0x8,%rsp
6a80(1): pop %rbx
6a81(1): pop %rbp
6a82(1): ret near (%rsp)
6a83(7): lea 0x4c0c(%rip),%rsi
6a8a(2): xor %edi,%edi
6a8c(5): mov $0x5,%edx
6a91(5): call 0xffffb13f(%rip)
6a96(7): mov 0x20968b(%rip),%rdi
6a9d(3): mov %rax,%rbp
6aa0(3): test %rdi,%rdi
6aa3(2): jz 0x2a(%rip)
6aa5(5): call 0x314b(%rip)
6aaa(2): mov (%rbx),%esi
6aac(7): lea 0x4d4f(%rip),%rdx
6ab3(3): mov %rax,%rcx
6ab6(3): mov %rbp,%r8
6ab9(2): xor %edi,%edi
6abb(2): xor %eax,%eax
6abd(5): call 0xffffb3a3(%rip)
6ac2(6): mov 0x209578(%rip),%edi
6ac8(5): call 0xffffb068(%rip)
6acd(2): mov (%rbx),%esi
6acf(7): lea 0x5ef6(%rip),%rdx
6ad6(3): mov %rax,%rcx
6ad9(2): xor %edi,%edi
6adb(2): xor %eax,%eax
6add(5): call 0xffffb383(%rip)
6ae2(2): jmp 0xffffffe0(%rip)

"dir_len" :
6af0(1): push %rbp
6af1(1): push %rbx
6af2(2): xor %ebp,%ebp
6af4(3): mov %rdi,%rbx
6af7(4): sub $0x8,%rsp
6afb(3): cmp $0x2f,(%rdi)
6afe(4): setz %bpl
6b02(5): call 0xae(%rip)
6b07(3): mov %rax,%rcx
6b0a(3): sub %rbx,%rcx
6b0d(3): cmp %rbp,%rcx
6b10(2): jbe 0x30(%rip)
6b12(4): cmp $0x2f,0xffffffff(%rax)
6b16(4): lea 0xffffffff(%rcx),%rdx
6b1a(2): jz 0x14(%rip)
6b1c(2): jmp 0x24(%rip)
6b1e(2): nop 
6b20(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
6b25(4): lea 0xffffffff(%rdx),%rax
6b29(2): jnz 0xa(%rip)
6b2b(3): mov %rax,%rdx
6b2e(3): cmp %rdx,%rbp
6b31(2): jnz 0xffffffef(%rip)
6b33(4): add $0x8,%rsp
6b37(3): mov %rdx,%rax
6b3a(1): pop %rbx
6b3b(1): pop %rbp
6b3c(1): ret near (%rsp)
6b3d(3): nop (%rax)
6b40(4): add $0x8,%rsp
6b44(3): mov %rcx,%rdx
6b47(3): mov %rdx,%rax
6b4a(1): pop %rbx
6b4b(1): pop %rbp
6b4c(1): ret near (%rsp)

"mdir_name" :
6b50(1): push %rbp
6b51(1): push %rbx
6b52(3): mov %rdi,%rbp
6b55(4): sub $0x8,%rsp
6b59(5): call 0xffffff97(%rip)
6b5e(3): test %rax,%rax
6b61(3): mov %rax,%rbx
6b64(3): setz %al
6b67(3): movzx %al,%eax
6b6a(5): lea 0x1(%rbx,%rax,1),%rdi
6b6f(5): call 0xffffb251(%rip)
6b74(3): test %rax,%rax
6b77(3): mov %rax,%rcx
6b7a(2): jz 0x1c(%rip)
6b7c(3): mov %rbx,%rdx
6b7f(3): mov %rbp,%rsi
6b82(3): mov %rax,%rdi
6b85(5): call 0xffffb1db(%rip)
6b8a(3): test %rbx,%rbx
6b8d(3): mov %rax,%rcx
6b90(2): jz 0x10(%rip)
6b92(4): mov $0x0,0x0(%rcx,%rbx,1)
6b96(4): add $0x8,%rsp
6b9a(3): mov %rcx,%rax
6b9d(1): pop %rbx
6b9e(1): pop %rbp
6b9f(1): ret near (%rsp)
6ba0(3): mov $0x2e,(%rax)
6ba3(5): mov $0x1,%ebx
6ba8(2): jmp 0xffffffea(%rip)

"last_component" :
6bb0(3): movzx (%rdi),%edx
6bb3(3): mov %rdi,%rax
6bb6(3): cmp $0x2f,%dl
6bb9(2): jnz 0x13(%rip)
6bbb(5): nop 0x0(%rax,%rax,1)
6bc0(4): add $0x1,%rax
6bc4(3): movzx (%rax),%edx
6bc7(3): cmp $0x2f,%dl
6bca(2): jz 0xfffffff6(%rip)
6bcc(2): test %dl,%dl
6bce(2): jz 0x3c(%rip)
6bd0(3): mov %rax,%rcx
6bd3(2): xor %esi,%esi
6bd5(2): jmp 0x20(%rip)
6bd7(9): nop 0x0(%rax,%rax,1)
6be0(3): test %sil,%sil
6be3(2): jz 0x7(%rip)
6be5(3): mov %rcx,%rax
6be8(2): xor %esi,%esi
6bea(4): add $0x1,%rcx
6bee(3): movzx (%rcx),%edx
6bf1(2): test %dl,%dl
6bf3(2): jz 0x17(%rip)
6bf5(3): cmp $0x2f,%dl
6bf8(2): jnz 0xffffffe8(%rip)
6bfa(4): add $0x1,%rcx
6bfe(3): movzx (%rcx),%edx
6c01(5): mov $0x1,%esi
6c06(2): test %dl,%dl
6c08(2): jnz 0xffffffed(%rip)
6c0a(2): REP ret near (%rsp)

"base_len" :
6c10(1): push %rbx
6c11(3): mov %rdi,%rbx
6c14(5): call 0xffffafdc(%rip)
6c19(4): cmp $0x1,%rax
6c1d(2): jbe 0xd(%rip)
6c1f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
6c24(4): lea 0xffffffff(%rax),%rdx
6c28(2): jz 0x10(%rip)
6c2a(1): pop %rbx
6c2b(1): ret near (%rsp)
6c2c(4): nop 0x0(%rax)
6c30(3): mov %rax,%rdx
6c33(5): nop 0x0(%rax,%rax,1)
6c38(4): cmp $0x1,%rdx
6c3c(2): jz 0x14(%rip)
6c3e(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
6c43(4): lea 0xffffffff(%rdx),%rax
6c47(2): jz 0xffffffe9(%rip)
6c49(3): mov %rdx,%rax
6c4c(1): pop %rbx
6c4d(1): ret near (%rsp)
6c4e(2): nop 
6c50(5): mov $0x1,%eax
6c55(1): pop %rbx
6c56(1): ret near (%rsp)

"open_safer" :
6c60(4): sub $0x58,%rsp
6c64(5): mov %rdx,0x30(%rsp)
6c69(2): xor %edx,%edx
6c6b(9): mov $0x28,%rax
6c74(5): mov %rax,0x18(%rsp)
6c79(2): xor %eax,%eax
6c7b(4): test $0x40,%sil
6c7f(2): jnz 0x29(%rip)
6c81(2): xor %eax,%eax
6c83(5): call 0xffffb1fd(%rip)
6c88(2): mov %eax,%edi
6c8a(5): call 0x31e6(%rip)
6c8f(5): mov 0x18(%rsp),%rcx
6c94(9): xor $0x28,%rcx
6c9d(2): jnz 0x2c(%rip)
6c9f(4): add $0x58,%rsp
6ca3(1): ret near (%rsp)
6ca4(4): nop 0x0(%rax)
6ca8(5): lea 0x60(%rsp),%rax
6cad(7): mov $0x10,(%rsp)
6cb4(4): mov 0x30(%rsp),%edx
6cb8(5): mov %rax,0x8(%rsp)
6cbd(5): lea 0x20(%rsp),%rax
6cc2(5): mov %rax,0x10(%rsp)
6cc7(2): jmp 0xffffffba(%rip)
6cc9(5): call 0xffffaf47(%rip)

"next_prime" :
6cd0(4): cmp $0xa,%rdi
6cd4(5): mov $0xa,%eax
6cd9(a): mov $0x-6148914691236517205,%r9
6ce3(4): cmovnae %rax,%rdi
6ce7(4): or $0x1,%rdi
6ceb(4): cmp $0xffffffff,%rdi
6cef(2): jz 0x70(%rip)
6cf1(7): nop 0x0(%rax)
6cf8(3): mov %rdi,%rax
6cfb(3): mov %rdi,%rcx
6cfe(3): mul %rax,%r9,%rdx
6d01(3): mov %rdx,%rax
6d04(3): shr $0x1,%rax
6d07(4): lea 0x0(%rax,%rax,2),%rax
6d0b(3): sub %rax,%rcx
6d0e(4): cmp $0x9,%rdi
6d12(3): mov %rcx,%rax
6d15(2): jbe 0x3b(%rip)
6d17(3): test %rcx,%rcx
6d1a(2): jz 0x3b(%rip)
6d1c(6): mov $0x10,%r8d
6d22(5): mov $0x9,%esi
6d27(5): mov $0x3,%ecx
6d2c(2): jmp 0xd(%rip)
6d2e(2): nop 
6d30(4): add $0x8,%r8
6d34(3): test %rdx,%rdx
6d37(2): jz 0x1e(%rip)
6d39(4): add $0x2,%rcx
6d3d(2): xor %edx,%edx
6d3f(3): mov %rdi,%rax
6d42(3): div %rcx,%rax
6d45(3): add %r8,%rsi
6d48(3): cmp %rdi,%rsi
6d4b(3): mov %rdx,%rax
6d4e(2): jb 0xffffffe2(%rip)
6d50(3): test %rax,%rax
6d53(2): jnz 0xc(%rip)
6d55(4): add $0x2,%rdi
6d59(4): cmp $0xffffffff,%rdi
6d5d(2): jnz 0xffffff9b(%rip)
6d5f(3): mov %rdi,%rax
6d62(1): ret near (%rsp)

"raw_hasher" :
6d70(3): mov %rdi,%rax
6d73(2): xor %edx,%edx
6d75(4): ror $0x3,%rax
6d79(3): div %rsi,%rax
6d7c(3): mov %rdx,%rax
6d7f(1): ret near (%rsp)

"raw_comparator" :
6d80(3): cmp %rsi,%rdi
6d83(3): setz %al
6d86(1): ret near (%rsp)

"safe_hasher" :
6d90(1): push %rbx
6d91(3): mov %rdi,%rbx
6d94(3): mov %rsi,%rdi
6d97(4): mov 0x10(%rbx),%rsi
6d9b(3): call 0x30(%rbx)
6d9e(4): cmp %rax,0x10(%rbx)
6da2(2): jbe 0xb(%rip)
6da4(4): shl/sal $0x4,%rax
6da8(3): add (%rbx),%rax
6dab(1): pop %rbx
6dac(1): ret near (%rsp)
6dad(5): call 0xffffad53(%rip)

"hash_find_entry" :
6dc0(2): push %r14
6dc2(2): push %r13
6dc4(3): mov %rdx,%r14
6dc7(2): push %r12
6dc9(1): push %rbp
6dca(3): mov %rdi,%r12
6dcd(1): push %rbx
6dce(3): mov %rsi,%rbp
6dd1(3): mov %ecx,%r13d
6dd4(5): call 0xffffffbc(%rip)
6dd9(3): mov %rax,(%r14)
6ddc(3): mov (%rax),%rsi
6ddf(3): test %rsi,%rsi
6de2(6): jz 0xee(%rip)
6de8(3): cmp %rbp,%rsi
6deb(3): mov %rax,%rbx
6dee(6): jz 0x95(%rip)
6df4(3): mov %rbp,%rdi
6df7(5): call 0x38(%r12)
6dfc(2): test %al,%al
6dfe(6): jnz 0x82(%rip)
6e04(4): mov 0x8(%rbx),%rax
6e08(3): test %rax,%rax
6e0b(6): jz 0xc5(%rip)
6e11(3): mov (%rax),%rsi
6e14(3): cmp %rsi,%rbp
6e17(2): jnz 0x22(%rip)
6e19(2): jmp 0x33(%rip)
6e1b(5): nop 0x0(%rax,%rax,1)
6e20(4): mov 0x8(%rbx),%rbx
6e24(4): mov 0x8(%rbx),%rax
6e28(3): test %rax,%rax
6e2b(6): jz 0xa5(%rip)
6e31(3): mov (%rax),%rsi
6e34(3): cmp %rbp,%rsi
6e37(2): jz 0x15(%rip)
6e39(3): mov %rbp,%rdi
6e3c(5): call 0x38(%r12)
6e41(2): test %al,%al
6e43(2): jz 0xffffffdd(%rip)
6e45(4): mov 0x8(%rbx),%rax
6e49(3): mov (%rax),%rsi
6e4c(3): test %r13b,%r13b
6e4f(2): jz 0x1f(%rip)
6e51(4): mov 0x8(%rax),%rdx
6e55(4): mov %rdx,0x8(%rbx)
6e59(7): mov $0x0,(%rax)
6e60(5): mov 0x48(%r12),%rdx
6e65(4): mov %rdx,0x8(%rax)
6e69(5): mov %rax,0x48(%r12)
6e6e(1): pop %rbx
6e6f(3): mov %rsi,%rax
6e72(1): pop %rbp
6e73(2): pop %r12
6e75(2): pop %r13
6e77(2): pop %r14
6e79(1): ret near (%rsp)
6e7a(6): nop 0x0(%rax,%rax,1)
6e80(3): mov (%rbx),%rsi
6e83(3): test %r13b,%r13b
6e86(2): jz 0xffffffe8(%rip)
6e88(4): mov 0x8(%rbx),%rax
6e8c(3): test %rax,%rax
6e8f(2): jz 0x31(%rip)
6e91(4): movdqu (%rax),%xmm0
6e95(3): movups %xmm0,(%rbx)
6e98(7): mov $0x0,(%rax)
6e9f(5): mov 0x48(%r12),%rdx
6ea4(4): mov %rdx,0x8(%rax)
6ea8(5): mov %rax,0x48(%r12)
6ead(3): mov %rsi,%rax
6eb0(1): pop %rbx
6eb1(1): pop %rbp
6eb2(2): pop %r12
6eb4(2): pop %r13
6eb6(2): pop %r14
6eb8(1): ret near (%rsp)
6eb9(7): nop 0x0(%rax)
6ec0(7): mov $0x0,(%rbx)
6ec7(2): jmp 0xffffffa7(%rip)
6ec9(7): nop 0x0(%rax)
6ed0(2): xor %esi,%esi
6ed2(1): pop %rbx
6ed3(3): mov %rsi,%rax
6ed6(1): pop %rbp
6ed7(2): pop %r12
6ed9(2): pop %r13
6edb(2): pop %r14
6edd(1): ret near (%rsp)

"check_tuning.isra.0" :
6ee0(3): mov (%rdi),%rdx
6ee3(7): lea 0x5b56(%rip),%rcx
6eea(5): mov $0x1,%eax
6eef(3): cmp %rcx,%rdx
6ef2(2): jz 0x63(%rip)
6ef4(5): movss 0x8(%rdx),%xmm0
6ef9(7): ucomiss 0x5b54(%rip),%xmm0
6f00(2): jbe 0x50(%rip)
6f02(8): movss 0x5b4e(%rip),%xmm1
6f0a(3): ucomiss %xmm0,%xmm1
6f0d(2): jbe 0x43(%rip)
6f0f(5): movss 0xc(%rdx),%xmm1
6f14(7): ucomiss 0x5b41(%rip),%xmm1
6f1b(2): jbe 0x35(%rip)
6f1d(4): movss (%rdx),%xmm1
6f21(7): ucomiss 0x5b38(%rip),%xmm1
6f28(2): jb 0x28(%rip)
6f2a(8): addss 0x5b22(%rip),%xmm1
6f32(5): movss 0x4(%rdx),%xmm2
6f37(3): ucomiss %xmm1,%xmm2
6f3a(2): jbe 0x16(%rip)
6f3c(8): movss 0x5b20(%rip),%xmm3
6f44(3): ucomiss %xmm2,%xmm3
6f47(2): jb 0x9(%rip)
6f49(3): ucomiss %xmm1,%xmm0
6f4c(2): jnbe 0x9(%rip)
6f4e(2): nop 
6f50(3): mov %rcx,(%rdi)
6f53(2): xor %eax,%eax
6f55(2): REP ret near (%rsp)

"transfer_entries" :
6f60(2): push %r15
6f62(2): push %r14
6f64(2): push %r13
6f66(2): push %r12
6f68(1): push %rbp
6f69(1): push %rbx
6f6a(4): sub $0x8,%rsp
6f6e(3): mov (%rsi),%r12
6f71(4): cmp 0x8(%rsi),%r12
6f75(6): jnb 0xe3(%rip)
6f7b(3): mov %rdi,%rbp
6f7e(3): mov %rsi,%r13
6f81(3): mov %edx,%r14d
6f84(4): nop 0x0(%rax)
6f88(4): mov (%r12),%r15
6f8c(3): test %r15,%r15
6f8f(6): jz 0xbb(%rip)
6f95(5): mov 0x8(%r12),%rbx
6f9a(3): test %rbx,%rbx
6f9d(2): jnz 0x1f(%rip)
6f9f(2): jmp 0x5c(%rip)
6fa1(7): nop 0x0(%rax)
6fa8(4): mov 0x8(%rax),%rcx
6fac(3): test %rdx,%rdx
6faf(4): mov %rcx,0x8(%rbx)
6fb3(4): mov %rbx,0x8(%rax)
6fb7(3): mov %rdx,%rbx
6fba(2): jz 0x3d(%rip)
6fbc(3): mov (%rbx),%r15
6fbf(3): mov %rbp,%rdi
6fc2(3): mov %r15,%rsi
6fc5(5): call 0xfffffdcb(%rip)
6fca(4): cmp $0x0,(%rax)
6fce(4): mov 0x8(%rbx),%rdx
6fd2(2): jnz 0xffffffd6(%rip)
6fd4(3): mov %r15,(%rax)
6fd7(5): add $0x1,0x18(%rbp)
6fdc(3): test %rdx,%rdx
6fdf(7): mov $0x0,(%rbx)
6fe6(4): mov 0x48(%rbp),%rax
6fea(4): mov %rax,0x8(%rbx)
6fee(4): mov %rbx,0x48(%rbp)
6ff2(3): mov %rdx,%rbx
6ff5(2): jnz 0xffffffc7(%rip)
6ff7(4): mov (%r12),%r15
6ffb(3): test %r14b,%r14b
6ffe(9): mov $0x0,0x8(%r12)
7007(2): jnz 0x43(%rip)
7009(3): mov %r15,%rsi
700c(3): mov %rbp,%rdi
700f(5): call 0xfffffd81(%rip)
7014(4): cmp $0x0,(%rax)
7018(3): mov %rax,%rbx
701b(2): jz 0x55(%rip)
701d(4): mov 0x48(%rbp),%rax
7021(3): test %rax,%rax
7024(2): jz 0x5c(%rip)
7026(4): mov 0x8(%rax),%rdx
702a(4): mov %rdx,0x48(%rbp)
702e(4): mov 0x8(%rbx),%rdx
7032(3): mov %r15,(%rax)
7035(4): mov %rdx,0x8(%rax)
7039(4): mov %rax,0x8(%rbx)
703d(8): mov $0x0,(%r12)
7045(5): sub $0x1,0x18(%r13)
704a(4): add $0x10,%r12
704e(4): cmp %r12,0x8(%r13)
7052(6): jnbe 0xffffff36(%rip)
7058(4): add $0x8,%rsp
705c(5): mov $0x1,%eax
7061(1): pop %rbx
7062(1): pop %rbp
7063(2): pop %r12
7065(2): pop %r13
7067(2): pop %r14
7069(2): pop %r15
706b(1): ret near (%rsp)
706c(4): nop 0x0(%rax)
7070(3): mov %r15,(%rax)
7073(5): add $0x1,0x18(%rbp)
7078(2): jmp 0xffffffc5(%rip)
707a(6): nop 0x0(%rax,%rax,1)
7080(5): mov $0x10,%edi
7085(5): call 0xffffad3b(%rip)
708a(3): test %rax,%rax
708d(2): jnz 0xffffffa1(%rip)
708f(4): add $0x8,%rsp
7093(2): xor %eax,%eax
7095(1): pop %rbx
7096(1): pop %rbp
7097(2): pop %r12
7099(2): pop %r13
709b(2): pop %r14
709d(2): pop %r15
709f(1): ret near (%rsp)

"hash_get_n_buckets" :
70a0(4): mov 0x10(%rdi),%rax
70a4(1): ret near (%rsp)

"hash_get_n_buckets_used" :
70b0(4): mov 0x18(%rdi),%rax
70b4(1): ret near (%rsp)

"hash_get_n_entries" :
70c0(4): mov 0x20(%rdi),%rax
70c4(1): ret near (%rsp)

"hash_get_max_bucket_length" :
70d0(3): mov (%rdi),%rsi
70d3(4): mov 0x8(%rdi),%rdi
70d7(2): xor %eax,%eax
70d9(3): cmp %rdi,%rsi
70dc(2): jnb 0x3b(%rip)
70de(2): nop 
70e0(4): cmp $0x0,(%rsi)
70e4(2): jz 0x28(%rip)
70e6(4): mov 0x8(%rsi),%rdx
70ea(5): mov $0x1,%ecx
70ef(3): test %rdx,%rdx
70f2(2): jz 0x13(%rip)
70f4(4): nop 0x0(%rax)
70f8(4): mov 0x8(%rdx),%rdx
70fc(4): add $0x1,%rcx
7100(3): test %rdx,%rdx
7103(2): jnz 0xfffffff5(%rip)
7105(3): cmp %rcx,%rax
7108(4): cmovnae %rcx,%rax
710c(4): add $0x10,%rsi
7110(3): cmp %rdi,%rsi
7113(2): jb 0xffffffcd(%rip)
7115(2): REP ret near (%rsp)
7117(2): REP ret near (%rsp)

"hash_table_ok" :
7120(3): mov (%rdi),%rcx
7123(4): mov 0x8(%rdi),%r8
7127(2): xor %edx,%edx
7129(2): xor %esi,%esi
712b(3): cmp %r8,%rcx
712e(2): jnb 0x38(%rip)
7130(4): cmp $0x0,(%rcx)
7134(2): jz 0x29(%rip)
7136(4): mov 0x8(%rcx),%rax
713a(4): add $0x1,%rsi
713e(4): add $0x1,%rdx
7142(3): test %rax,%rax
7145(2): jz 0x18(%rip)
7147(9): nop 0x0(%rax,%rax,1)
7150(4): mov 0x8(%rax),%rax
7154(4): add $0x1,%rdx
7158(3): test %rax,%rax
715b(2): jnz 0xfffffff5(%rip)
715d(4): add $0x10,%rcx
7161(3): cmp %r8,%rcx
7164(2): jb 0xffffffcc(%rip)
7166(2): xor %eax,%eax
7168(4): cmp %rsi,0x18(%rdi)
716c(2): jz 0x4(%rip)
716e(2): REP ret near (%rsp)
7170(4): cmp %rdx,0x20(%rdi)
7174(3): setz %al
7177(1): ret near (%rsp)

"hash_print_statistics" :
7180(2): push %r13
7182(2): push %r12
7184(3): mov %rsi,%r12
7187(1): push %rbp
7188(1): push %rbx
7189(2): xor %ebx,%ebx
718b(4): sub $0x8,%rsp
718f(3): mov (%rdi),%rsi
7192(4): mov 0x20(%rdi),%rcx
7196(4): mov 0x10(%rdi),%rbp
719a(4): mov 0x18(%rdi),%r13
719e(4): mov 0x8(%rdi),%rdi
71a2(3): cmp %rdi,%rsi
71a5(2): jnb 0x40(%rip)
71a7(9): nop 0x0(%rax,%rax,1)
71b0(4): cmp $0x0,(%rsi)
71b4(2): jz 0x28(%rip)
71b6(4): mov 0x8(%rsi),%rax
71ba(5): mov $0x1,%edx
71bf(3): test %rax,%rax
71c2(2): jz 0x13(%rip)
71c4(4): nop 0x0(%rax)
71c8(4): mov 0x8(%rax),%rax
71cc(4): add $0x1,%rdx
71d0(3): test %rax,%rax
71d3(2): jnz 0xfffffff5(%rip)
71d5(3): cmp %rdx,%rbx
71d8(4): cmovnae %rdx,%rbx
71dc(4): add $0x10,%rsi
71e0(3): cmp %rdi,%rsi
71e3(2): jb 0xffffffcd(%rip)
71e5(7): lea 0x57e3(%rip),%rdx
71ec(5): mov $0x1,%esi
71f1(3): mov %r12,%rdi
71f4(2): xor %eax,%eax
71f6(5): call 0xffffacea(%rip)
71fb(7): lea 0x57e5(%rip),%rdx
7202(2): xor %eax,%eax
7204(3): mov %rbp,%rcx
7207(5): mov $0x1,%esi
720c(3): mov %r12,%rdi
720f(5): call 0xffffacd1(%rip)
7214(3): test %r13,%r13
7217(2): js 0x69(%rip)
7219(4): pxor %xmm0,%xmm0
721d(3): test %rbp,%rbp
7220(5): cvtsi2sd %r13,%xmm0
7225(8): mulsd 0x584b(%rip),%xmm0
722d(2): js 0x7c(%rip)
722f(4): pxor %xmm1,%xmm1
7233(5): cvtsi2sd %rbp,%xmm1
7238(4): divsd %xmm1,%xmm0
723c(7): lea 0x57d5(%rip),%rdx
7243(3): mov %r13,%rcx
7246(3): mov %r12,%rdi
7249(5): mov $0x1,%esi
724e(5): mov $0x1,%eax
7253(5): call 0xffffac8d(%rip)
7258(4): add $0x8,%rsp
725c(3): mov %rbx,%rcx
725f(3): mov %r12,%rdi
7262(1): pop %rbx
7263(1): pop %rbp
7264(2): pop %r12
7266(2): pop %r13
7268(7): lea 0x5790(%rip),%rdx
726f(5): mov $0x1,%esi
7274(2): xor %eax,%eax
7276(5): jmp 0xffffac6a(%rip)
727b(5): nop 0x0(%rax,%rax,1)
7280(3): mov %r13,%rax
7283(3): mov %r13,%rdx
7286(4): pxor %xmm0,%xmm0
728a(3): shr $0x1,%rax
728d(3): and $0x1,%edx
7290(3): or %rdx,%rax
7293(3): test %rbp,%rbp
7296(5): cvtsi2sd %rax,%xmm0
729b(4): addsd %xmm0,%xmm0
729f(8): mulsd 0x57d1(%rip),%xmm0
72a7(2): jns 0xffffff88(%rip)
72a9(3): mov %rbp,%rax
72ac(4): pxor %xmm1,%xmm1
72b0(3): shr $0x1,%rax
72b3(3): and $0x1,%ebp
72b6(3): or %rbp,%rax
72b9(5): cvtsi2sd %rax,%xmm1
72be(4): addsd %xmm1,%xmm1
72c2(5): jmp 0xffffff76(%rip)

"hash_lookup" :
72d0(2): push %r12
72d2(1): push %rbp
72d3(3): mov %rdi,%r12
72d6(1): push %rbx
72d7(3): mov %rsi,%rbp
72da(5): call 0xfffffab6(%rip)
72df(3): mov (%rax),%rsi
72e2(3): test %rsi,%rsi
72e5(2): jz 0x28(%rip)
72e7(3): mov %rax,%rbx
72ea(2): jmp 0x9(%rip)
72ec(4): nop 0x0(%rax)
72f0(3): mov (%rbx),%rsi
72f3(3): cmp %rbp,%rsi
72f6(2): jz 0x19(%rip)
72f8(3): mov %rbp,%rdi
72fb(5): call 0x38(%r12)
7300(2): test %al,%al
7302(2): jnz 0x1e(%rip)
7304(4): mov 0x8(%rbx),%rbx
7308(3): test %rbx,%rbx
730b(2): jnz 0xffffffe5(%rip)
730d(2): xor %esi,%esi
730f(1): pop %rbx
7310(3): mov %rsi,%rax
7313(1): pop %rbp
7314(2): pop %r12
7316(1): ret near (%rsp)
7317(9): nop 0x0(%rax,%rax,1)
7320(3): mov (%rbx),%rsi
7323(1): pop %rbx
7324(1): pop %rbp
7325(3): mov %rsi,%rax
7328(2): pop %r12
732a(1): ret near (%rsp)

"hash_get_first" :
7330(5): cmp $0x0,0x20(%rdi)
7335(2): jz 0x2e(%rip)
7337(3): mov (%rdi),%rdx
733a(4): mov 0x8(%rdi),%rcx
733e(3): cmp %rcx,%rdx
7341(2): jnb 0x27(%rip)
7343(3): mov (%rdx),%rax
7346(3): test %rax,%rax
7349(2): jnz 0x1d(%rip)
734b(5): nop 0x0(%rax,%rax,1)
7350(4): add $0x10,%rdx
7354(3): cmp %rcx,%rdx
7357(2): jnb 0x11(%rip)
7359(3): mov (%rdx),%rax
735c(3): test %rax,%rax
735f(2): jz 0xfffffff1(%rip)
7361(2): REP ret near (%rsp)
7363(2): xor %eax,%eax
7365(1): ret near (%rsp)
7366(2): REP ret near (%rsp)
7368(4): sub $0x8,%rsp
736c(5): call 0xffffa794(%rip)

"hash_get_next" :
7380(1): push %rbp
7381(1): push %rbx
7382(3): mov %rdi,%rbp
7385(3): mov %rsi,%rbx
7388(4): sub $0x8,%rsp
738c(5): call 0xfffffa04(%rip)
7391(3): mov %rax,%rdx
7394(3): mov %rax,%rcx
7397(3): mov (%rdx),%rax
739a(4): mov 0x8(%rdx),%rdx
739e(3): cmp %rbx,%rax
73a1(2): jz 0x18(%rip)
73a3(5): nop 0x0(%rax,%rax,1)
73a8(3): test %rdx,%rdx
73ab(2): jz 0x13(%rip)
73ad(3): mov (%rdx),%rax
73b0(4): mov 0x8(%rdx),%rdx
73b4(3): cmp %rbx,%rax
73b7(2): jnz 0xfffffff1(%rip)
73b9(3): test %rdx,%rdx
73bc(2): jnz 0x2c(%rip)
73be(4): mov 0x8(%rbp),%rdx
73c2(2): jmp 0xe(%rip)
73c4(4): nop 0x0(%rax)
73c8(3): mov (%rcx),%rax
73cb(3): test %rax,%rax
73ce(2): jnz 0xd(%rip)
73d0(4): add $0x10,%rcx
73d4(3): cmp %rcx,%rdx
73d7(2): jnbe 0xfffffff1(%rip)
73d9(2): xor %eax,%eax
73db(4): add $0x8,%rsp
73df(1): pop %rbx
73e0(1): pop %rbp
73e1(1): ret near (%rsp)
73e2(6): nop 0x0(%rax,%rax,1)
73e8(3): mov (%rdx),%rax
73eb(4): add $0x8,%rsp
73ef(1): pop %rbx
73f0(1): pop %rbp
73f1(1): ret near (%rsp)

"hash_get_entries" :
7400(3): mov (%rdi),%r9
7403(4): cmp %r9,0x8(%rdi)
7407(2): jbe 0x5b(%rip)
7409(3): xor %r8d,%r8d
740c(3): mov (%r9),%rcx
740f(3): test %rcx,%rcx
7412(2): jz 0x3b(%rip)
7414(3): cmp %r8,%rdx
7417(2): jbe 0x40(%rip)
7419(4): mov %rcx,0x0(%rsi,%r8,8)
741d(4): mov 0x8(%r9),%rcx
7421(4): lea 0x1(%r8),%rax
7425(3): test %rcx,%rcx
7428(2): jz 0x22(%rip)
742a(6): nop 0x0(%rax,%rax,1)
7430(3): cmp %rax,%rdx
7433(2): jz 0x2d(%rip)
7435(3): mov (%rcx),%r8
7438(4): add $0x1,%rax
743c(5): mov %r8,0xfffffff8(%rsi,%rax,8)
7441(4): mov 0x8(%rcx),%rcx
7445(3): test %rcx,%rcx
7448(2): jnz 0xffffffe8(%rip)
744a(3): mov %rax,%r8
744d(4): add $0x10,%r9
7451(4): cmp %r9,0x8(%rdi)
7455(2): jnbe 0xffffffb7(%rip)
7457(3): mov %r8,%rax
745a(1): ret near (%rsp)
745b(5): nop 0x0(%rax,%rax,1)
7460(2): REP ret near (%rsp)
7462(2): xor %eax,%eax
7464(1): ret near (%rsp)

"hash_do_for_each" :
7470(2): push %r15
7472(2): push %r14
7474(2): push %r13
7476(2): push %r12
7478(1): push %rbp
7479(1): push %rbx
747a(4): sub $0x8,%rsp
747e(3): mov (%rdi),%r14
7481(4): cmp %r14,0x8(%rdi)
7485(2): jbe 0x51(%rip)
7487(3): mov %rdx,%r13
748a(3): mov %rsi,%r12
748d(3): mov %rdi,%r15
7490(2): xor %ebp,%ebp
7492(3): mov (%r14),%rdi
7495(3): test %rdi,%rdi
7498(2): jz 0x22(%rip)
749a(3): mov %r14,%rbx
749d(2): jmp 0x6(%rip)
749f(1): nop 
74a0(3): mov (%rbx),%rdi
74a3(3): mov %r13,%rsi
74a6(3): call %r12
74a9(2): test %al,%al
74ab(2): jz 0x19(%rip)
74ad(4): mov 0x8(%rbx),%rbx
74b1(4): add $0x1,%rbp
74b5(3): test %rbx,%rbx
74b8(2): jnz 0xffffffe8(%rip)
74ba(4): add $0x10,%r14
74be(4): cmp %r14,0x8(%r15)
74c2(2): jnbe 0xffffffd0(%rip)
74c4(4): add $0x8,%rsp
74c8(3): mov %rbp,%rax
74cb(1): pop %rbx
74cc(1): pop %rbp
74cd(2): pop %r12
74cf(2): pop %r13
74d1(2): pop %r14
74d3(2): pop %r15
74d5(1): ret near (%rsp)
74d6(2): xor %ebp,%ebp
74d8(2): jmp 0xffffffec(%rip)

"hash_string" :
74e0(3): movzx (%rdi),%ecx
74e3(2): xor %edx,%edx
74e5(2): test %cl,%cl
74e7(2): jz 0x26(%rip)
74e9(7): nop 0x0(%rax)
74f0(3): mov %rdx,%rax
74f3(4): add $0x1,%rdi
74f7(4): shl/sal $0x5,%rax
74fb(3): sub %rdx,%rax
74fe(2): xor %edx,%edx
7500(3): add %rcx,%rax
7503(3): movzx (%rdi),%ecx
7506(3): div %rsi,%rax
7509(2): test %cl,%cl
750b(2): jnz 0xffffffe5(%rip)
750d(3): mov %rdx,%rax
7510(1): ret near (%rsp)

"hash_reset_tuning" :
7520(a): mov $0x4575657221408423936,%rax
752a(4): mov $0x0,0x10(%rdi)
752e(3): mov %rax,(%rdi)
7531(a): mov $0x4590573145673223373,%rax
753b(4): mov %rax,0x8(%rdi)
753f(1): ret near (%rsp)

"hash_initialize" :
7540(2): push %r15
7542(2): push %r14
7544(7): lea 0xfffff825(%rip),%rax
754b(2): push %r13
754d(2): push %r12
754f(3): mov %rdx,%r12
7552(1): push %rbp
7553(1): push %rbx
7554(3): mov %rcx,%r13
7557(3): mov %rdi,%rbp
755a(5): mov $0x50,%edi
755f(3): mov %rsi,%r15
7562(4): sub $0x8,%rsp
7566(3): test %rdx,%rdx
7569(3): mov %r8,%r14
756c(4): cmove %rax,%r12
7570(7): lea 0xfffff809(%rip),%rax
7577(3): test %rcx,%rcx
757a(4): cmove %rax,%r13
757e(5): call 0xffffa842(%rip)
7583(3): test %rax,%rax
7586(3): mov %rax,%rbx
7589(6): jz 0xb1(%rip)
758f(3): test %r15,%r15
7592(4): lea 0x28(%rax),%rdi
7596(6): jz 0xba(%rip)
759c(4): mov %r15,0x28(%rax)
75a0(5): call 0xfffff940(%rip)
75a5(2): test %al,%al
75a7(6): jz 0x89(%rip)
75ad(5): cmp $0x0,0x10(%r15)
75b2(6): jz 0xfe(%rip)
75b8(3): mov %rbp,%rdi
75bb(5): call 0xfffff715(%rip)
75c0(5): mov $0x8,%edx
75c5(3): mov %rax,%rbp
75c8(2): xor %ecx,%ecx
75ca(3): mov %rdx,%rax
75cd(3): mul %rax,%rbp,%rdx
75d0(6): jo 0x11a(%rip)
75d6(3): test %rax,%rax
75d9(2): js 0x57(%rip)
75db(3): test %rcx,%rcx
75de(2): jnz 0x52(%rip)
75e0(3): test %rbp,%rbp
75e3(4): mov %rbp,0x10(%rbx)
75e7(2): jz 0x49(%rip)
75e9(5): mov $0x10,%esi
75ee(3): mov %rbp,%rdi
75f1(5): call 0xffffa73f(%rip)
75f6(3): test %rax,%rax
75f9(3): mov %rax,(%rbx)
75fc(2): jz 0x34(%rip)
75fe(4): shl/sal $0x4,%rbp
7602(8): mov $0x0,0x18(%rbx)
760a(8): mov $0x0,0x20(%rbx)
7612(3): add %rax,%rbp
7615(4): mov %r12,0x30(%rbx)
7619(4): mov %r13,0x38(%rbx)
761d(4): mov %rbp,0x8(%rbx)
7621(4): mov %r14,0x40(%rbx)
7625(8): mov $0x0,0x48(%rbx)
762d(2): jmp 0xd(%rip)
762f(1): nop 
7630(3): mov %rbx,%rdi
7633(2): xor %ebx,%ebx
7635(5): call 0xffffa4bb(%rip)
763a(4): add $0x8,%rsp
763e(3): mov %rbx,%rax
7641(1): pop %rbx
7642(1): pop %rbp
7643(2): pop %r12
7645(2): pop %r13
7647(2): pop %r14
7649(2): pop %r15
764b(1): ret near (%rsp)
764c(4): nop 0x0(%rax)
7650(7): lea 0x53e9(%rip),%rax
7657(4): mov %rax,0x28(%rbx)
765b(5): call 0xfffff885(%rip)
7660(2): test %al,%al
7662(8): movss 0x53fe(%rip),%xmm1
766a(2): jz 0xffffffc6(%rip)
766c(3): test %rbp,%rbp
766f(2): js 0x4c(%rip)
7671(4): pxor %xmm0,%xmm0
7675(5): cvtsi2ss %rbp,%xmm0
767a(4): divss %xmm1,%xmm0
767e(7): ucomiss 0x53e7(%rip),%xmm0
7685(2): jnb 0xffffffab(%rip)
7687(7): ucomiss 0x53e2(%rip),%xmm0
768e(2): jb 0x52(%rip)
7690(8): subss 0x53d8(%rip),%xmm0
7698(a): mov $0x-9223372036854775808,%rax
76a2(5): cvttss2si %xmm0,%rbp
76a7(3): xor %rax,%rbp
76aa(5): jmp 0xffffff0e(%rip)
76af(1): nop 
76b0(3): test %rbp,%rbp
76b3(6): movss 0x8(%r15),%xmm1
76b9(2): jns 0xffffffb8(%rip)
76bb(3): mov %rbp,%rax
76be(4): pxor %xmm0,%xmm0
76c2(3): shr $0x1,%rax
76c5(3): and $0x1,%ebp
76c8(3): or %rbp,%rax
76cb(5): cvtsi2ss %rax,%xmm0
76d0(4): addss %xmm0,%xmm0
76d4(2): jmp 0xffffffa6(%rip)
76d6(a): nop 0x0(%rax,%rax,1)
76e0(5): cvttss2si %xmm0,%rbp
76e5(5): jmp 0xfffffed3(%rip)
76ea(5): mov $0x1,%ecx
76ef(5): jmp 0xfffffee7(%rip)

"hash_clear" :
7700(2): push %r12
7702(1): push %rbp
7703(3): mov %rdi,%rbp
7706(1): push %rbx
7707(3): mov (%rdi),%r12
770a(4): cmp 0x8(%rdi),%r12
770e(2): jnb 0x6d(%rip)
7710(5): cmp $0x0,(%r12)
7715(2): jz 0x5c(%rip)
7717(5): mov 0x8(%r12),%rbx
771c(4): mov 0x40(%rbp),%rax
7720(3): test %rbx,%rbx
7723(2): jz 0x32(%rip)
7725(3): nop (%rax)
7728(3): test %rax,%rax
772b(2): jz 0xb(%rip)
772d(3): mov (%rbx),%rdi
7730(2): call %rax
7732(4): mov 0x40(%rbp),%rax
7736(4): mov 0x8(%rbx),%rdx
773a(4): mov 0x48(%rbp),%rcx
773e(7): mov $0x0,(%rbx)
7745(3): test %rdx,%rdx
7748(4): mov %rcx,0x8(%rbx)
774c(4): mov %rbx,0x48(%rbp)
7750(3): mov %rdx,%rbx
7753(2): jnz 0xffffffd5(%rip)
7755(3): test %rax,%rax
7758(2): jz 0x8(%rip)
775a(4): mov (%r12),%rdi
775e(2): call %rax
7760(8): mov $0x0,(%r12)
7768(9): mov $0x0,0x8(%r12)
7771(4): add $0x10,%r12
7775(4): cmp %r12,0x8(%rbp)
7779(2): jnbe 0xffffff97(%rip)
777b(8): mov $0x0,0x18(%rbp)
7783(8): mov $0x0,0x20(%rbp)
778b(1): pop %rbx
778c(1): pop %rbp
778d(2): pop %r12
778f(1): ret near (%rsp)

"hash_free" :
7790(2): push %r12
7792(1): push %rbp
7793(3): mov %rdi,%r12
7796(1): push %rbx
7797(5): cmp $0x0,0x40(%rdi)
779c(3): mov (%rdi),%rbp
779f(4): mov 0x8(%rdi),%rax
77a3(2): jz 0x50(%rip)
77a5(5): cmp $0x0,0x20(%rdi)
77aa(2): jz 0x49(%rip)
77ac(3): cmp %rax,%rbp
77af(2): jnb 0x7d(%rip)
77b1(7): nop 0x0(%rax)
77b8(4): mov 0x0(%rbp),%rdi
77bc(3): test %rdi,%rdi
77bf(2): jz 0x27(%rip)
77c1(3): mov %rbp,%rbx
77c4(2): jmp 0xf(%rip)
77c6(a): nop 0x0(%rax,%rax,1)
77d0(3): mov (%rbx),%rdi
77d3(5): call 0x40(%r12)
77d8(4): mov 0x8(%rbx),%rbx
77dc(3): test %rbx,%rbx
77df(2): jnz 0xfffffff1(%rip)
77e1(5): mov 0x8(%r12),%rax
77e6(4): add $0x10,%rbp
77ea(3): cmp %rbp,%rax
77ed(2): jnbe 0xffffffcb(%rip)
77ef(4): mov (%r12),%rbp
77f3(3): cmp %rax,%rbp
77f6(2): jnb 0x36(%rip)
77f8(8): nop 0x0(%rax,%rax,1)
7800(4): mov 0x8(%rbp),%rdi
7804(3): test %rdi,%rdi
7807(2): jz 0x1a(%rip)
7809(7): nop 0x0(%rax)
7810(4): mov 0x8(%rdi),%rbx
7814(5): call 0xffffa2dc(%rip)
7819(3): test %rbx,%rbx
781c(3): mov %rbx,%rdi
781f(2): jnz 0xfffffff1(%rip)
7821(4): add $0x10,%rbp
7825(5): cmp %rbp,0x8(%r12)
782a(2): jnbe 0xffffffd6(%rip)
782c(5): mov 0x48(%r12),%rdi
7831(3): test %rdi,%rdi
7834(2): jz 0x1d(%rip)
7836(a): nop 0x0(%rax,%rax,1)
7840(4): mov 0x8(%rdi),%rbx
7844(5): call 0xffffa2ac(%rip)
7849(3): test %rbx,%rbx
784c(3): mov %rbx,%rdi
784f(2): jnz 0xfffffff1(%rip)
7851(4): mov (%r12),%rdi
7855(5): call 0xffffa29b(%rip)
785a(1): pop %rbx
785b(3): mov %r12,%rdi
785e(1): pop %rbp
785f(2): pop %r12
7861(5): jmp 0xffffa28f(%rip)

"hash_rehash" :
7870(2): push %r12
7872(1): push %rbp
7873(3): mov %rdi,%rbp
7876(1): push %rbx
7877(4): sub $0x60,%rsp
787b(4): mov 0x28(%rdi),%r12
787f(9): mov $0x28,%rax
7888(5): mov %rax,0x58(%rsp)
788d(2): xor %eax,%eax
788f(6): cmp $0x0,0x10(%r12)
7895(2): jnz 0x53(%rip)
7897(3): test %rsi,%rsi
789a(6): js 0x17e(%rip)
78a0(4): pxor %xmm0,%xmm0
78a4(5): cvtsi2ss %rsi,%xmm0
78a9(7): divss 0x8(%r12),%xmm0
78b0(7): ucomiss 0x51b5(%rip),%xmm0
78b7(6): jnb 0x139(%rip)
78bd(7): ucomiss 0x51ac(%rip),%xmm0
78c4(6): jb 0x17c(%rip)
78ca(8): subss 0x519e(%rip),%xmm0
78d2(a): mov $0x-9223372036854775808,%rax
78dc(5): cvttss2si %xmm0,%rsi
78e1(3): xor %rax,%rsi
78e4(4): nop 0x0(%rax)
78e8(3): mov %rsi,%rdi
78eb(5): call 0xfffff3e5(%rip)
78f0(5): mov $0x8,%edx
78f5(3): mov %rax,%rbx
78f8(2): xor %ecx,%ecx
78fa(3): mov %rdx,%rax
78fd(3): mul %rax,%rbx,%rdx
7900(6): jo 0x19f(%rip)
7906(3): test %rax,%rax
7909(5): mov $0x1,%eax
790e(4): cmovs %rax,%rcx
7912(3): test %rbx,%rbx
7915(6): jz 0xdb(%rip)
791b(3): and $0x1,%ecx
791e(6): jnz 0xd2(%rip)
7924(4): cmp %rbx,0x10(%rbp)
7928(6): jz 0x128(%rip)
792e(5): mov $0x10,%esi
7933(3): mov %rbx,%rdi
7936(5): call 0xffffa3fa(%rip)
793b(3): test %rax,%rax
793e(4): mov %rax,(%rsp)
7942(6): jz 0xae(%rip)
7948(5): mov %rbx,0x10(%rsp)
794d(4): shl/sal $0x4,%rbx
7951(5): mov %r12,0x28(%rsp)
7956(3): add %rax,%rbx
7959(4): mov 0x30(%rbp),%rax
795d(3): mov %rsp,%r12
7960(2): xor %edx,%edx
7962(3): mov %rbp,%rsi
7965(3): mov %r12,%rdi
7968(5): mov %rbx,0x8(%rsp)
796d(9): mov $0x0,0x18(%rsp)
7976(5): mov %rax,0x30(%rsp)
797b(4): mov 0x38(%rbp),%rax
797f(9): mov $0x0,0x20(%rsp)
7988(5): mov %rax,0x38(%rsp)
798d(4): mov 0x40(%rbp),%rax
7991(5): mov %rax,0x40(%rsp)
7996(4): mov 0x48(%rbp),%rax
799a(5): mov %rax,0x48(%rsp)
799f(5): call 0xfffff5c1(%rip)
79a4(2): test %al,%al
79a6(2): mov %eax,%ebx
79a8(6): jnz 0xb8(%rip)
79ae(5): mov 0x48(%rsp),%rax
79b3(5): mov $0x1,%edx
79b8(3): mov %r12,%rsi
79bb(3): mov %rbp,%rdi
79be(4): mov %rax,0x48(%rbp)
79c2(5): call 0xfffff59e(%rip)
79c7(2): test %al,%al
79c9(6): jz 0xe0(%rip)
79cf(2): xor %edx,%edx
79d1(3): mov %r12,%rsi
79d4(3): mov %rbp,%rdi
79d7(5): call 0xfffff589(%rip)
79dc(2): test %al,%al
79de(6): jz 0xcb(%rip)
79e4(4): mov (%rsp),%rdi
79e8(5): call 0xffffa108(%rip)
79ed(2): jmp 0x5(%rip)
79ef(1): nop 
79f0(2): xor %ebx,%ebx
79f2(5): mov 0x58(%rsp),%rcx
79f7(9): xor $0x28,%rcx
7a00(2): mov %ebx,%eax
7a02(6): jnz 0x98(%rip)
7a08(4): add $0x60,%rsp
7a0c(1): pop %rbx
7a0d(1): pop %rbp
7a0e(2): pop %r12
7a10(1): ret near (%rsp)
7a11(7): nop 0x0(%rax)
7a18(3): mov %rsi,%rax
7a1b(4): pxor %xmm0,%xmm0
7a1f(3): shr $0x1,%rax
7a22(3): and $0x1,%esi
7a25(3): or %rsi,%rax
7a28(5): cvtsi2ss %rax,%xmm0
7a2d(4): addss %xmm0,%xmm0
7a31(5): jmp 0xfffffe78(%rip)
7a36(a): nop 0x0(%rax,%rax,1)
7a40(5): cvttss2si %xmm0,%rsi
7a45(5): jmp 0xfffffea3(%rip)
7a4a(6): nop 0x0(%rax,%rax,1)
7a50(5): mov $0x1,%ebx
7a55(2): jmp 0xffffff9d(%rip)
7a57(9): nop 0x0(%rax,%rax,1)
7a60(4): mov 0x0(%rbp),%rdi
7a64(5): call 0xffffa08c(%rip)
7a69(4): mov (%rsp),%rax
7a6d(4): mov %rax,0x0(%rbp)
7a71(5): mov 0x8(%rsp),%rax
7a76(4): mov %rax,0x8(%rbp)
7a7a(5): mov 0x10(%rsp),%rax
7a7f(4): mov %rax,0x10(%rbp)
7a83(5): mov 0x18(%rsp),%rax
7a88(4): mov %rax,0x18(%rbp)
7a8c(5): mov 0x48(%rsp),%rax
7a91(4): mov %rax,0x48(%rbp)
7a95(5): jmp 0xffffff5d(%rip)
7a9a(5): call 0xffffa176(%rip)
7a9f(5): mov $0x1,%ecx
7aa4(5): jmp 0xfffffe62(%rip)
7aa9(5): call 0xffffa057(%rip)

"hash_insert_if_absent" :
7ab0(2): push %r13
7ab2(2): push %r12
7ab4(1): push %rbp
7ab5(1): push %rbx
7ab6(4): sub $0x18,%rsp
7aba(9): mov $0x28,%rax
7ac3(5): mov %rax,0x8(%rsp)
7ac8(2): xor %eax,%eax
7aca(3): test %rsi,%rsi
7acd(6): jz 0x1c0(%rip)
7ad3(3): mov %rsp,%r12
7ad6(2): xor %ecx,%ecx
7ad8(3): mov %rdx,%r13
7adb(3): mov %r12,%rdx
7ade(3): mov %rdi,%rbx
7ae1(3): mov %rsi,%rbp
7ae4(5): call 0xfffff2dc(%rip)
7ae9(3): test %rax,%rax
7aec(3): mov %rax,%rdx
7aef(2): jz 0x31(%rip)
7af1(2): xor %eax,%eax
7af3(3): test %r13,%r13
7af6(2): jz 0x6(%rip)
7af8(4): mov %rdx,0x0(%r13)
7afc(5): mov 0x8(%rsp),%rcx
7b01(9): xor $0x28,%rcx
7b0a(6): jnz 0x225(%rip)
7b10(4): add $0x18,%rsp
7b14(1): pop %rbx
7b15(1): pop %rbp
7b16(2): pop %r12
7b18(2): pop %r13
7b1a(1): ret near (%rsp)
7b1b(5): nop 0x0(%rax,%rax,1)
7b20(4): mov 0x18(%rbx),%rax
7b24(3): test %rax,%rax
7b27(2): js 0x79(%rip)
7b29(4): pxor %xmm1,%xmm1
7b2d(4): mov 0x28(%rbx),%rdx
7b31(5): cvtsi2ss %rax,%xmm1
7b36(4): mov 0x10(%rbx),%rax
7b3a(3): test %rax,%rax
7b3d(6): js 0x8d(%rip)
7b43(4): pxor %xmm0,%xmm0
7b47(5): cvtsi2ss %rax,%xmm0
7b4c(5): mulss 0x8(%rdx),%xmm0
7b51(3): ucomiss %xmm0,%xmm1
7b54(6): jnbe 0x9c(%rip)
7b5a(4): mov (%rsp),%r12
7b5e(5): cmp $0x0,(%r12)
7b63(6): jz 0x135(%rip)
7b69(4): mov 0x48(%rbx),%rax
7b6d(3): test %rax,%rax
7b70(6): jz 0x140(%rip)
7b76(4): mov 0x8(%rax),%rdx
7b7a(4): mov %rdx,0x48(%rbx)
7b7e(5): mov 0x8(%r12),%rdx
7b83(3): mov %rbp,(%rax)
7b86(4): mov %rdx,0x8(%rax)
7b8a(5): mov %rax,0x8(%r12)
7b8f(5): mov $0x1,%eax
7b94(5): add $0x1,0x20(%rbx)
7b99(5): jmp 0xffffff63(%rip)
7b9e(2): nop 
7ba0(3): mov %rax,%rdx
7ba3(4): pxor %xmm1,%xmm1
7ba7(3): and $0x1,%eax
7baa(3): shr $0x1,%rdx
7bad(3): or %rax,%rdx
7bb0(4): mov 0x10(%rbx),%rax
7bb4(5): cvtsi2ss %rdx,%xmm1
7bb9(4): mov 0x28(%rbx),%rdx
7bbd(3): test %rax,%rax
7bc0(4): addss %xmm1,%xmm1
7bc4(6): jns 0xffffff7f(%rip)
7bca(3): mov %rax,%rcx
7bcd(4): pxor %xmm0,%xmm0
7bd1(3): shr $0x1,%rcx
7bd4(3): and $0x1,%eax
7bd7(3): or %rax,%rcx
7bda(5): cvtsi2ss %rcx,%xmm0
7bdf(4): addss %xmm0,%xmm0
7be3(5): jmp 0xffffff69(%rip)
7be8(8): nop 0x0(%rax,%rax,1)
7bf0(4): lea 0x28(%rbx),%rdi
7bf4(5): call 0xfffff2ec(%rip)
7bf9(4): mov 0x10(%rbx),%rax
7bfd(4): mov 0x28(%rbx),%rdx
7c01(3): test %rax,%rax
7c04(5): movss 0x8(%rdx),%xmm2
7c09(6): js 0xc7(%rip)
7c0f(4): pxor %xmm0,%xmm0
7c13(5): cvtsi2ss %rax,%xmm0
7c18(4): mov 0x18(%rbx),%rax
7c1c(3): test %rax,%rax
7c1f(6): js 0xd1(%rip)
7c25(4): pxor %xmm1,%xmm1
7c29(5): cvtsi2ss %rax,%xmm1
7c2e(3): movaps %xmm2,%xmm3
7c31(4): mulss %xmm0,%xmm3
7c35(3): ucomiss %xmm3,%xmm1
7c38(6): jbe 0xffffff22(%rip)
7c3e(4): cmp $0x0,0x10(%rdx)
7c42(5): mulss 0xc(%rdx),%xmm0
7c47(2): jnz 0x6(%rip)
7c49(4): mulss %xmm2,%xmm0
7c4d(7): ucomiss 0x4e18(%rip),%xmm0
7c54(2): jnb 0x6f(%rip)
7c56(7): ucomiss 0x4e13(%rip),%xmm0
7c5d(6): jnb 0xb3(%rip)
7c63(5): cvttss2si %xmm0,%rsi
7c68(3): mov %rbx,%rdi
7c6b(5): call 0xfffffc05(%rip)
7c70(2): test %al,%al
7c72(2): jz 0x51(%rip)
7c74(2): xor %ecx,%ecx
7c76(3): mov %r12,%rdx
7c79(3): mov %rbp,%rsi
7c7c(3): mov %rbx,%rdi
7c7f(5): call 0xfffff141(%rip)
7c84(3): test %rax,%rax
7c87(6): jz 0xfffffed3(%rip)
7c8d(5): call 0xffff9e73(%rip)
7c92(6): nop 0x0(%rax,%rax,1)
7c98(4): mov %rbp,(%r12)
7c9c(5): mov $0x1,%eax
7ca1(5): add $0x1,0x20(%rbx)
7ca6(5): add $0x1,0x18(%rbx)
7cab(5): jmp 0xfffffe51(%rip)
7cb0(5): mov $0x10,%edi
7cb5(5): call 0xffffa10b(%rip)
7cba(3): test %rax,%rax
7cbd(6): jnz 0xfffffec1(%rip)
7cc3(5): mov $0xffffffff,%eax
7cc8(5): jmp 0xfffffe34(%rip)
7ccd(3): nop (%rax)
7cd0(3): mov %rax,%rcx
7cd3(4): pxor %xmm0,%xmm0
7cd7(3): shr $0x1,%rcx
7cda(3): and $0x1,%eax
7cdd(3): or %rax,%rcx
7ce0(5): cvtsi2ss %rcx,%xmm0
7ce5(4): addss %xmm0,%xmm0
7ce9(5): jmp 0xffffff2f(%rip)
7cee(2): nop 
7cf0(3): mov %rax,%rcx
7cf3(4): pxor %xmm1,%xmm1
7cf7(3): shr $0x1,%rcx
7cfa(3): and $0x1,%eax
7cfd(3): or %rax,%rcx
7d00(5): cvtsi2ss %rcx,%xmm1
7d05(4): addss %xmm1,%xmm1
7d09(5): jmp 0xffffff25(%rip)
7d0e(2): nop 
7d10(8): subss 0x4d58(%rip),%xmm0
7d18(a): mov $0x-9223372036854775808,%rax
7d22(5): cvttss2si %xmm0,%rsi
7d27(3): xor %rax,%rsi
7d2a(5): jmp 0xffffff3e(%rip)
7d2f(5): call 0xffff9ee1(%rip)

"hash_insert" :
7d40(1): push %rbx
7d41(3): mov %rsi,%rbx
7d44(4): sub $0x10,%rsp
7d48(3): mov %rsp,%rdx
7d4b(9): mov $0x28,%rax
7d54(5): mov %rax,0x8(%rsp)
7d59(2): xor %eax,%eax
7d5b(5): call 0xfffffd55(%rip)
7d60(3): cmp $0xff,%eax
7d63(2): jz 0x2d(%rip)
7d65(2): test %eax,%eax
7d67(2): jnz 0x6(%rip)
7d69(4): mov (%rsp),%rbx
7d6d(5): mov 0x8(%rsp),%rcx
7d72(9): xor $0x28,%rcx
7d7b(3): mov %rbx,%rax
7d7e(2): jnz 0x16(%rip)
7d80(4): add $0x10,%rsp
7d84(1): pop %rbx
7d85(1): ret near (%rsp)
7d86(a): nop 0x0(%rax,%rax,1)
7d90(2): xor %ebx,%ebx
7d92(2): jmp 0xffffffdb(%rip)
7d94(5): call 0xffff9e7c(%rip)

"hash_delete" :
7da0(2): push %r12
7da2(1): push %rbp
7da3(5): mov $0x1,%ecx
7da8(1): push %rbx
7da9(3): mov %rdi,%rbx
7dac(4): sub $0x10,%rsp
7db0(3): mov %rsp,%rdx
7db3(9): mov $0x28,%rax
7dbc(5): mov %rax,0x8(%rsp)
7dc1(2): xor %eax,%eax
7dc3(5): call 0xffffeffd(%rip)
7dc8(3): test %rax,%rax
7dcb(3): mov %rax,%rbp
7dce(2): jz 0x11(%rip)
7dd0(4): mov (%rsp),%rax
7dd4(5): sub $0x1,0x20(%rbx)
7dd9(4): cmp $0x0,(%rax)
7ddd(2): jz 0x23(%rip)
7ddf(5): mov 0x8(%rsp),%rcx
7de4(9): xor $0x28,%rcx
7ded(3): mov %rbp,%rax
7df0(6): jnz 0x1ae(%rip)
7df6(4): add $0x10,%rsp
7dfa(1): pop %rbx
7dfb(1): pop %rbp
7dfc(2): pop %r12
7dfe(1): ret near (%rsp)
7dff(1): nop 
7e00(4): mov 0x18(%rbx),%rax
7e04(4): sub $0x1,%rax
7e08(3): test %rax,%rax
7e0b(4): mov %rax,0x18(%rbx)
7e0f(6): js 0x101(%rip)
7e15(4): pxor %xmm0,%xmm0
7e19(5): cvtsi2ss %rax,%xmm0
7e1e(4): mov 0x10(%rbx),%rax
7e22(4): mov 0x28(%rbx),%rdx
7e26(3): test %rax,%rax
7e29(6): js 0xc7(%rip)
7e2f(4): pxor %xmm1,%xmm1
7e33(5): cvtsi2ss %rax,%xmm1
7e38(4): mulss (%rdx),%xmm1
7e3c(3): ucomiss %xmm0,%xmm1
7e3f(2): jbe 0xffffffa0(%rip)
7e41(4): lea 0x28(%rbx),%rdi
7e45(5): call 0xfffff09b(%rip)
7e4a(4): mov 0x10(%rbx),%rax
7e4e(4): mov 0x28(%rbx),%rdx
7e52(3): test %rax,%rax
7e55(6): js 0x12b(%rip)
7e5b(4): pxor %xmm0,%xmm0
7e5f(5): cvtsi2ss %rax,%xmm0
7e64(4): mov 0x18(%rbx),%rax
7e68(3): test %rax,%rax
7e6b(6): js 0xf5(%rip)
7e71(4): pxor %xmm1,%xmm1
7e75(5): cvtsi2ss %rax,%xmm1
7e7a(4): movss (%rdx),%xmm2
7e7e(4): mulss %xmm0,%xmm2
7e82(3): ucomiss %xmm1,%xmm2
7e85(6): jbe 0xffffff5a(%rip)
7e8b(4): cmp $0x0,0x10(%rdx)
7e8f(5): mulss 0x4(%rdx),%xmm0
7e94(6): jz 0xbc(%rip)
7e9a(7): ucomiss 0x4bcf(%rip),%xmm0
7ea1(6): jnb 0x8f(%rip)
7ea7(5): cvttss2si %xmm0,%rsi
7eac(3): mov %rbx,%rdi
7eaf(5): call 0xfffff9c1(%rip)
7eb4(2): test %al,%al
7eb6(6): jnz 0xffffff29(%rip)
7ebc(4): mov 0x48(%rbx),%rdi
7ec0(3): test %rdi,%rdi
7ec3(2): jz 0x16(%rip)
7ec5(3): nop (%rax)
7ec8(4): mov 0x8(%rdi),%r12
7ecc(5): call 0xffff9c24(%rip)
7ed1(3): test %r12,%r12
7ed4(3): mov %r12,%rdi
7ed7(2): jnz 0xfffffff1(%rip)
7ed9(8): mov $0x0,0x48(%rbx)
7ee1(5): jmp 0xfffffefe(%rip)
7ee6(a): nop 0x0(%rax,%rax,1)
7ef0(3): mov %rax,%rcx
7ef3(4): pxor %xmm1,%xmm1
7ef7(3): shr $0x1,%rcx
7efa(3): and $0x1,%eax
7efd(3): or %rax,%rcx
7f00(5): cvtsi2ss %rcx,%xmm1
7f05(4): addss %xmm1,%xmm1
7f09(5): jmp 0xffffff2f(%rip)
7f0e(2): nop 
7f10(3): mov %rax,%rdx
7f13(4): pxor %xmm0,%xmm0
7f17(3): shr $0x1,%rdx
7f1a(3): and $0x1,%eax
7f1d(3): or %rax,%rdx
7f20(5): cvtsi2ss %rdx,%xmm0
7f25(4): addss %xmm0,%xmm0
7f29(5): jmp 0xfffffef5(%rip)
7f2e(2): nop 
7f30(8): subss 0x4b38(%rip),%xmm0
7f38(a): mov $0x-9223372036854775808,%rax
7f42(5): cvttss2si %xmm0,%rsi
7f47(3): xor %rax,%rsi
7f4a(5): jmp 0xffffff62(%rip)
7f4f(1): nop 
7f50(5): mulss 0x8(%rdx),%xmm0
7f55(5): jmp 0xffffff45(%rip)
7f5a(6): nop 0x0(%rax,%rax,1)
7f60(3): mov %rax,%rcx
7f63(4): pxor %xmm1,%xmm1
7f67(3): shr $0x1,%rcx
7f6a(3): and $0x1,%eax
7f6d(3): or %rax,%rcx
7f70(5): cvtsi2ss %rcx,%xmm1
7f75(4): addss %xmm1,%xmm1
7f79(5): jmp 0xffffff01(%rip)
7f7e(2): nop 
7f80(3): mov %rax,%rcx
7f83(4): pxor %xmm0,%xmm0
7f87(3): shr $0x1,%rcx
7f8a(3): and $0x1,%eax
7f8d(3): or %rax,%rcx
7f90(5): cvtsi2ss %rcx,%xmm0
7f95(4): addss %xmm0,%xmm0
7f99(5): jmp 0xfffffecb(%rip)
7f9e(5): call 0xffff9c72(%rip)

"offtostr" :
7fb0(3): test %rdi,%rdi
7fb3(4): lea 0x14(%rsi),%rcx
7fb7(4): mov $0x0,0x14(%rsi)
7fbb(a): mov $0x7378697629483820647,%r9
7fc5(a): mov $0x-3689348814741910323,%rsi
7fcf(6): mov $0x30,%r8d
7fd5(2): js 0x3e(%rip)
7fd7(9): nop 0x0(%rax,%rax,1)
7fe0(3): mov %rdi,%rax
7fe3(4): sub $0x1,%rcx
7fe7(3): mul %rax,%rsi,%rdx
7fea(4): shr $0x3,%rdx
7fee(4): lea 0x0(%rdx,%rdx,4),%rax
7ff2(3): add %rax,%rax
7ff5(3): sub %rax,%rdi
7ff8(3): add $0x30,%edi
7ffb(3): test %rdx,%rdx
7ffe(3): mov %dil,(%rcx)
8001(3): mov %rdx,%rdi
8004(2): jnz 0xffffffdc(%rip)
8006(3): mov %rcx,%rax
8009(1): ret near (%rsp)
800a(6): nop 0x0(%rax,%rax,1)
8010(3): mov %rsi,%rcx
8013(3): mov %rdi,%rax
8016(4): lea 0xffffffff(%rcx),%rsi
801a(3): imul %rax,%r9,%rdx
801d(3): mov %rdi,%rax
8020(4): sar $0x3f,%rax
8024(4): sar $0x2,%rdx
8028(3): sub %rax,%rdx
802b(4): lea 0x0(%rdx,%rdx,4),%rax
802f(4): lea 0x0(%r8,%rax,2),%eax
8033(2): sub %edi,%eax
8035(3): test %rdx,%rdx
8038(3): mov %rdx,%rdi
803b(3): mov %al,0xffffffff(%rcx)
803e(2): jnz 0xffffffd2(%rip)
8040(4): sub $0x2,%rcx
8044(4): mov $0x2d,0xffffffff(%rsi)
8048(3): mov %rcx,%rax
804b(1): ret near (%rsp)

"posix2_version" :
8050(1): push %rbx
8051(7): lea 0x4a28(%rip),%rdi
8058(5): mov $0x31069,%ebx
805d(4): sub $0x10,%rsp
8061(9): mov $0x28,%rax
806a(5): mov %rax,0x8(%rsp)
806f(2): xor %eax,%eax
8071(5): call 0xffff9a5f(%rip)
8076(3): test %rax,%rax
8079(2): jz 0x7(%rip)
807b(3): cmp $0x0,(%rax)
807e(2): jnz 0x22(%rip)
8080(5): mov 0x8(%rsp),%rcx
8085(9): xor $0x28,%rcx
808e(2): mov %ebx,%eax
8090(2): jnz 0x49(%rip)
8092(4): add $0x10,%rsp
8096(1): pop %rbx
8097(1): ret near (%rsp)
8098(8): nop 0x0(%rax,%rax,1)
80a0(5): mov $0xa,%edx
80a5(3): mov %rsp,%rsi
80a8(3): mov %rax,%rdi
80ab(5): call 0xffff9ca5(%rip)
80b0(4): mov (%rsp),%rdx
80b4(3): cmp $0x0,(%rdx)
80b7(2): jnz 0xffffffc9(%rip)
80b9(6): cmp $0x80000000,%rax
80bf(2): jl 0x13(%rip)
80c1(6): cmp $0x7fffffff,%rax
80c7(5): mov $0x7fffffff,%ebx
80cc(4): cmovng %rax,%rbx
80d0(2): jmp 0xffffffb0(%rip)
80d2(5): mov $0x80000000,%ebx
80d7(2): jmp 0xffffffa9(%rip)
80d9(5): call 0xffff9b37(%rip)

"set_program_name" :
80e0(3): test %rdi,%rdi
80e3(1): push %rbx
80e4(2): jz 0x79(%rip)
80e6(5): mov $0x2f,%esi
80eb(3): mov %rdi,%rbx
80ee(5): call 0xffff9ba2(%rip)
80f3(3): test %rax,%rax
80f6(2): jz 0x57(%rip)
80f8(4): lea 0x1(%rax),%r8
80fc(3): mov %r8,%rdx
80ff(3): sub %rbx,%rdx
8102(4): cmp $0x6,%rdx
8106(2): jle 0x47(%rip)
8108(4): lea 0xfffffffa(%rax),%rsi
810c(7): lea 0x49b5(%rip),%rdi
8113(5): mov $0x7,%ecx
8118(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
811a(3): setnbe %dl
811d(3): sbb $0x0,%dl
8120(2): test %dl,%dl
8122(2): jnz 0x2b(%rip)
8124(7): lea 0x49a5(%rip),%rdi
812b(5): mov $0x3,%ecx
8130(3): mov %r8,%rsi
8133(3): mov %r8,%rbx
8136(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
8138(3): setnbe %dl
813b(3): sbb $0x0,%dl
813e(2): test %dl,%dl
8140(2): jnz 0xd(%rip)
8142(4): lea 0x4(%rax),%rbx
8146(7): mov %rbx,0x207f73(%rip)
814d(7): mov %rbx,0x207fdc(%rip)
8154(7): mov %rbx,0x207f85(%rip)
815b(1): pop %rbx
815c(1): ret near (%rsp)
815d(7): mov 0x207f9c(%rip),%rcx
8164(7): lea 0x4925(%rip),%rdi
816b(5): mov $0x37,%edx
8170(5): mov $0x1,%esi
8175(5): call 0xffff9d5b(%rip)
817a(5): call 0xffff9986(%rip)

"gettext_quote.part.1" :
8180(1): push %rbp
8181(1): push %rbx
8182(3): mov %rdi,%rbp
8185(2): mov %esi,%ebx
8187(4): sub $0x8,%rsp
818b(5): call 0x3265(%rip)
8190(3): movzx (%rax),%edx
8193(3): and $0xdf,%edx
8196(3): cmp $0x55,%dl
8199(2): jz 0x77(%rip)
819b(3): cmp $0x47,%dl
819e(2): jz 0x22(%rip)
81a0(7): lea 0x493c(%rip),%rax
81a7(7): lea 0x4937(%rip),%rdx
81ae(3): cmp $0x9,%ebx
81b1(4): cmovne %rdx,%rax
81b5(4): add $0x8,%rsp
81b9(1): pop %rbx
81ba(1): pop %rbp
81bb(1): ret near (%rsp)
81bc(4): nop 0x0(%rax)
81c0(4): movzx 0x1(%rax),%edx
81c4(3): and $0xdf,%edx
81c7(3): cmp $0x42,%dl
81ca(2): jnz 0xffffffd6(%rip)
81cc(4): cmp $0x31,0x2(%rax)
81d0(2): jnz 0xffffffd0(%rip)
81d2(4): cmp $0x38,0x3(%rax)
81d6(2): jnz 0xffffffca(%rip)
81d8(4): cmp $0x30,0x4(%rax)
81dc(2): jnz 0xffffffc4(%rip)
81de(4): cmp $0x33,0x5(%rax)
81e2(2): jnz 0xffffffbe(%rip)
81e4(4): cmp $0x30,0x6(%rax)
81e8(2): jnz 0xffffffb8(%rip)
81ea(4): cmp $0x0,0x7(%rax)
81ee(2): jnz 0xffffffb2(%rip)
81f0(4): cmp $0x60,0x0(%rbp)
81f4(7): lea 0x48e1(%rip),%rax
81fb(7): lea 0x48de(%rip),%rdx
8202(4): cmovne %rdx,%rax
8206(4): add $0x8,%rsp
820a(1): pop %rbx
820b(1): pop %rbp
820c(1): ret near (%rsp)
820d(3): nop (%rax)
8210(4): movzx 0x1(%rax),%edx
8214(3): and $0xdf,%edx
8217(3): cmp $0x54,%dl
821a(2): jnz 0xffffff86(%rip)
821c(4): movzx 0x2(%rax),%edx
8220(3): and $0xdf,%edx
8223(3): cmp $0x46,%dl
8226(6): jnz 0xffffff7a(%rip)
822c(4): cmp $0x2d,0x3(%rax)
8230(6): jnz 0xffffff70(%rip)
8236(4): cmp $0x38,0x4(%rax)
823a(6): jnz 0xffffff66(%rip)
8240(4): cmp $0x0,0x5(%rax)
8244(6): jnz 0xffffff5c(%rip)
824a(4): cmp $0x60,0x0(%rbp)
824e(7): lea 0x487f(%rip),%rax
8255(7): lea 0x487c(%rip),%rdx
825c(4): cmovne %rdx,%rax
8260(4): add $0x8,%rsp
8264(1): pop %rbx
8265(1): pop %rbp
8266(1): ret near (%rsp)

"quotearg_buffer_restyled" :
8270(2): push %r15
8272(2): push %r14
8274(3): mov %r8d,%r15d
8277(2): push %r13
8279(2): push %r12
827b(3): mov %rdi,%r14
827e(1): push %rbp
827f(1): push %rbx
8280(3): mov %r9d,%ebx
8283(3): mov %rsi,%r13
8286(3): mov %rcx,%rbp
8289(3): and $0x2,%ebx
828c(7): sub $0xb8,%rsp
8293(8): mov 0xf0(%rsp),%rax
829b(5): mov %rdx,0x10(%rsp)
82a0(5): mov %r8d,0x8(%rsp)
82a5(5): mov %r9d,0x78(%rsp)
82aa(5): mov %rax,0x20(%rsp)
82af(8): mov 0xf8(%rsp),%rax
82b7(5): mov %rax,0x68(%rsp)
82bc(8): mov 0x100(%rsp),%rax
82c4(5): mov %rax,0x60(%rsp)
82c9(9): mov $0x28,%rax
82d2(8): mov %rax,0xa8(%rsp)
82da(2): xor %eax,%eax
82dc(5): call 0xffff9904(%rip)
82e1(4): cmp $0xa,%r15d
82e5(5): mov %rax,0x58(%rsp)
82ea(6): jnbe 0x11b5(%rip)
82f0(7): lea 0x4849(%rip),%rcx
82f7(3): mov %r15d,%edx
82fa(4): movsxd 0x0(%rcx,%rdx,4),%rax
82fe(3): add %rcx,%rax
8301(2): jmp %rax
8303(5): mov $0x1,0xe(%rsp)
8308(5): mov $0x0,0x7c(%rsp)
830d(3): xor %r12d,%r12d
8310(9): mov $0x0,0x50(%rsp)
8319(5): mov $0x1,0xf(%rsp)
831e(5): mov $0x0,0xd(%rsp)
8323(7): lea 0x47bb(%rip),%rax
832a(9): mov $0x1,0x18(%rsp)
8333(3): xor %r15d,%r15d
8336(8): mov $0x2,0x8(%rsp)
833e(5): mov %rax,0x48(%rsp)
8343(3): xor %r11d,%r11d
8346(3): mov %rbp,%rax
8349(3): mov %r12d,%r8d
834c(3): mov %r11,%rbp
834f(3): mov %rax,%r11
8352(6): nop 0x0(%rax,%rax,1)
8358(3): cmp %rbp,%r11
835b(4): setnz %r12b
835f(4): cmp $0xffffffff,%r11
8363(2): jnz 0xf(%rip)
8365(5): mov 0x10(%rsp),%rax
836a(4): cmp $0x0,0x0(%rax,%rbp,1)
836e(4): setnz %r12b
8372(3): test %r12b,%r12b
8375(6): jz 0x65b(%rip)
837b(5): cmp $0x2,0x8(%rsp)
8380(5): mov 0x10(%rsp),%rdi
8385(4): lea 0x0(%rdi,%rbp,1),%r9
8389(3): setnz %al
838c(4): and 0xd(%rsp),%al
8390(3): mov %eax,%r10d
8393(6): jz 0xad(%rip)
8399(5): mov 0x18(%rsp),%rax
839e(3): test %rax,%rax
83a1(6): jz 0x42f(%rip)
83a7(4): cmp $0xffffffff,%r11
83ab(5): lea 0x0(%rbp,%rax,1),%rbx
83b0(2): jnz 0x30(%rip)
83b2(4): cmp $0x1,%rax
83b6(2): jbe 0x2a(%rip)
83b8(5): mov %r8b,0x38(%rsp)
83bd(5): mov %r10b,0x30(%rsp)
83c2(5): mov %r9,0x28(%rsp)
83c7(5): call 0xffff9829(%rip)
83cc(6): movzx 0x38(%rsp),%r8d
83d2(6): movzx 0x30(%rsp),%r10d
83d8(3): mov %rax,%r11
83db(5): mov 0x28(%rsp),%r9
83e0(3): cmp %r11,%rbx
83e3(5): mov %r10b,0x28(%rsp)
83e8(6): jnbe 0x5b8(%rip)
83ee(5): mov 0x18(%rsp),%rdx
83f3(5): mov 0x48(%rsp),%rsi
83f8(3): mov %r9,%rdi
83fb(5): mov %r11,0x40(%rsp)
8400(5): mov %r8b,0x38(%rsp)
8405(5): mov %r9,0x30(%rsp)
840a(5): call 0xffff9906(%rip)
840f(2): test %eax,%eax
8411(5): mov 0x30(%rsp),%r9
8416(6): movzx 0x38(%rsp),%r8d
841c(5): mov 0x40(%rsp),%r11
8421(6): jnz 0x57f(%rip)
8427(5): cmp $0x0,0xf(%rsp)
842c(6): movzx 0x28(%rsp),%r10d
8432(6): jnz 0xf83(%rip)
8438(8): nop 0x0(%rax,%rax,1)
8440(4): movzx (%r9),%ebx
8444(3): cmp $0x7e,%bl
8447(6): jnbe 0x321(%rip)
844d(7): lea 0x4718(%rip),%rcx
8454(3): movzx %bl,%edx
8457(4): movsxd 0x0(%rcx,%rdx,4),%rax
845b(3): add %rcx,%rax
845e(2): jmp %rax
8460(3): xor %r10d,%r10d
8463(4): cmp $0x1,%r11
8467(3): setnz %al
846a(4): cmp $0xffffffff,%r11
846e(2): jnz 0xe(%rip)
8470(5): mov 0x10(%rsp),%rax
8475(4): cmp $0x0,0x1(%rax)
8479(3): setnz %al
847c(5): cmp $0x2,0x8(%rsp)
8481(3): setz %dl
8484(2): test %al,%al
8486(6): jz 0x252(%rip)
848c(3): xor %r12d,%r12d
848f(2): xor %eax,%eax
8491(7): nop 0x0(%rax)
8498(5): cmp $0x1,0xd(%rsp)
849d(6): jnz 0x115(%rip)
84a3(2): test %dl,%dl
84a5(6): jnz 0x10d(%rip)
84ab(5): mov 0x20(%rsp),%rsi
84b0(3): test %rsi,%rsi
84b3(2): jz 0x16(%rip)
84b5(2): mov %ebx,%edx
84b7(3): shr $0x5,%dl
84ba(3): movzx %dl,%edx
84bd(3): mov 0x0(%rsi,%rdx,4),%edx
84c0(3): bt %ebx,%edx
84c3(6): jb 0x150(%rip)
84c9(3): test %r10b,%r10b
84cc(6): jnz 0x147(%rip)
84d2(3): xor $0x1,%eax
84d5(4): add $0x1,%rbp
84d9(3): and %r8d,%eax
84dc(2): test %al,%al
84de(2): jz 0x22(%rip)
84e0(3): cmp %r15,%r13
84e3(2): jbe 0x7(%rip)
84e5(5): mov $0x27,0x0(%r14,%r15,1)
84ea(4): lea 0x1(%r15),%rax
84ee(3): cmp %rax,%r13
84f1(2): jbe 0x8(%rip)
84f3(6): mov $0x27,0x1(%r14,%r15,1)
84f9(4): add $0x2,%r15
84fd(3): xor %r8d,%r8d
8500(3): cmp %r13,%r15
8503(2): jnb 0x6(%rip)
8505(4): mov %bl,0x0(%r14,%r15,1)
8509(5): movzx 0xe(%rsp),%edi
850e(4): add $0x1,%r15
8512(5): mov $0x0,%eax
8517(3): test %r12b,%r12b
851a(3): cmove %eax,%edi
851d(5): mov %dil,0xe(%rsp)
8522(5): jmp 0xfffffe36(%rip)
8527(9): nop 0x0(%rax,%rax,1)
8530(3): xor %r10d,%r10d
8533(4): mov 0x8(%rsp),%eax
8537(3): cmp $0x2,%eax
853a(6): jz 0x5be(%rip)
8540(3): cmp $0x5,%eax
8543(6): jz 0x575(%rip)
8549(3): cmp $0x2,%eax
854c(5): mov $0x3f,%ebx
8551(3): setz %dl
8554(3): xor %r12d,%r12d
8557(2): xor %eax,%eax
8559(5): jmp 0xffffff3f(%rip)
855e(2): nop 
8560(3): xor %r10d,%r10d
8563(5): cmp $0x2,0x8(%rsp)
8568(6): jz 0x508(%rip)
856e(5): mov %r12b,0x7c(%rsp)
8573(2): xor %edx,%edx
8575(2): xor %eax,%eax
8577(5): mov $0x27,%ebx
857c(5): jmp 0xffffff1c(%rip)
8581(7): nop 0x0(%rax)
8588(5): mov $0x9,%edx
858d(5): mov $0x74,%ebx
8592(5): cmp $0x2,0x8(%rsp)
8597(3): setz %al
859a(4): and 0xf(%rsp),%al
859e(6): jnz 0x150(%rip)
85a4(5): cmp $0x0,0xd(%rsp)
85a9(2): jnz 0x67(%rip)
85ab(2): mov %edx,%ebx
85ad(3): xor %r12d,%r12d
85b0(2): xor %eax,%eax
85b2(5): cmp $0x0,0xf(%rsp)
85b7(6): jnz 0xfffffef4(%rip)
85bd(5): jmp 0xffffff0c(%rip)
85c2(6): nop 0x0(%rax,%rax,1)
85c8(5): mov $0x8,%edx
85cd(5): mov $0x62,%ebx
85d2(2): jmp 0xffffffd2(%rip)
85d4(4): nop 0x0(%rax)
85d8(5): cmp $0x2,0x8(%rsp)
85dd(6): jz 0x3d3(%rip)
85e3(5): cmp $0x0,0xd(%rsp)
85e8(6): jz 0x218(%rip)
85ee(5): cmp $0x0,0xf(%rsp)
85f3(6): jz 0x20d(%rip)
85f9(6): cmp $0x0,0x18(%rsp)
85ff(6): jnz 0x3bc(%rip)
8605(5): mov $0x5c,%ebx
860a(6): nop 0x0(%rax,%rax,1)
8610(3): xor %r12d,%r12d
8613(5): cmp $0x2,0x8(%rsp)
8618(3): setz %dl
861b(5): cmp $0x0,0xf(%rsp)
8620(2): mov %edx,%eax
8622(6): jnz 0x856(%rip)
8628(3): mov %r8d,%eax
862b(3): xor $0x1,%eax
862e(2): and %dl,%al
8630(2): jz 0x31(%rip)
8632(3): cmp %r15,%r13
8635(2): jbe 0x7(%rip)
8637(5): mov $0x27,0x0(%r14,%r15,1)
863c(4): lea 0x1(%r15),%rdx
8640(3): cmp %rdx,%r13
8643(2): jbe 0x8(%rip)
8645(6): mov $0x24,0x1(%r14,%r15,1)
864b(4): lea 0x2(%r15),%rdx
864f(3): cmp %rdx,%r13
8652(2): jbe 0x8(%rip)
8654(6): mov $0x27,0x2(%r14,%r15,1)
865a(4): add $0x3,%r15
865e(3): mov %eax,%r8d
8661(3): cmp %r15,%r13
8664(2): jbe 0x7(%rip)
8666(5): mov $0x5c,0x0(%r14,%r15,1)
866b(4): add $0x1,%r15
866f(4): add $0x1,%rbp
8673(5): jmp 0xfffffe8d(%rip)
8678(8): nop 0x0(%rax,%rax,1)
8680(5): cmp $0x0,0xd(%rsp)
8685(6): jnz 0x1ce(%rip)
868b(2): xor %edx,%edx
868d(5): test $0x1,0x78(%rsp)
8692(6): jz 0xffffff19(%rip)
8698(4): add $0x1,%rbp
869c(5): jmp 0xfffffcbc(%rip)
86a1(7): nop 0x0(%rax)
86a8(5): cmp $0x2,0x8(%rsp)
86ad(3): setz %dl
86b0(2): xor %eax,%eax
86b2(5): jmp 0xfffffde6(%rip)
86b7(9): nop 0x0(%rax,%rax,1)
86c0(5): mov $0x7,%edx
86c5(5): mov $0x61,%ebx
86ca(5): jmp 0xfffffeda(%rip)
86cf(1): nop 
86d0(5): cmp $0x2,0x8(%rsp)
86d5(3): setz %dl
86d8(3): test %rbp,%rbp
86db(6): jnz 0xfffffdb1(%rip)
86e1(5): movzx 0xf(%rsp),%eax
86e6(2): and %dl,%al
86e8(6): jz 0xfffffdb0(%rip)
86ee(3): mov %r11,%rbp
86f1(8): mov $0x2,0x8(%rsp)
86f9(5): jmp 0x700(%rip)
86fe(2): nop 
8700(5): cmp $0x2,0x8(%rsp)
8705(3): setz %dl
8708(3): xor %r12d,%r12d
870b(2): jmp 0xffffffd6(%rip)
870d(3): nop (%rax)
8710(5): cmp $0x2,0x8(%rsp)
8715(5): mov $0x20,%ebx
871a(3): setz %dl
871d(2): jmp 0xffffffc4(%rip)
871f(1): nop 
8720(5): mov $0xd,%edx
8725(5): mov $0x72,%ebx
872a(5): jmp 0xfffffe68(%rip)
872f(1): nop 
8730(5): mov $0xc,%edx
8735(5): mov $0x66,%ebx
873a(5): jmp 0xfffffe6a(%rip)
873f(1): nop 
8740(5): mov $0xb,%edx
8745(5): mov $0x76,%ebx
874a(5): jmp 0xfffffe5a(%rip)
874f(1): nop 
8750(5): mov $0xa,%edx
8755(5): mov $0x6e,%ebx
875a(5): jmp 0xfffffe38(%rip)
875f(1): nop 
8760(3): xor %r10d,%r10d
8763(5): nop 0x0(%rax,%rax,1)
8768(6): cmp $0x1,0x58(%rsp)
876e(6): jnz 0x3aa(%rip)
8774(5): mov %r11,0x38(%rsp)
8779(5): mov %r8b,0x30(%rsp)
877e(5): mov %r10b,0x28(%rsp)
8783(5): call 0xffff97ad(%rip)
8788(3): mov (%rax),%rcx
878b(3): movzx %bl,%edx
878e(6): movzx 0x28(%rsp),%r10d
8794(6): movzx 0x30(%rsp),%r8d
879a(5): mov 0x38(%rsp),%r11
879f(5): mov $0x1,%edi
87a4(4): movzx 0x0(%rcx,%rdx,2),%eax
87a8(4): and $0x4000,%ax
87ac(4): setnz %r12b
87b0(3): setz %al
87b3(4): and 0xd(%rsp),%al
87b7(2): test %al,%al
87b9(6): jnz 0x998(%rip)
87bf(5): cmp $0x2,0x8(%rsp)
87c4(3): setz %dl
87c7(5): jmp 0xfffffcd1(%rip)
87cc(4): nop 0x0(%rax)
87d0(4): movzx (%r9),%ebx
87d4(3): cmp $0x7e,%bl
87d7(2): jnbe 0xffffff89(%rip)
87d9(7): lea 0x4588(%rip),%rcx
87e0(3): movzx %bl,%edx
87e3(4): movsxd 0x0(%rcx,%rdx,4),%rax
87e7(3): add %rcx,%rax
87ea(2): jmp %rax
87ec(4): nop 0x0(%rax)
87f0(3): xor %r10d,%r10d
87f3(5): cmp $0x0,0xd(%rsp)
87f8(6): jnz 0xfffffdf6(%rip)
87fe(2): nop 
8800(5): mov $0x5c,%edx
8805(5): mov $0x5c,%ebx
880a(5): jmp 0xfffffd9a(%rip)
880f(1): nop 
8810(5): mov $0xc,%edx
8815(3): xor %r10d,%r10d
8818(5): mov $0x66,%ebx
881d(5): jmp 0xfffffd87(%rip)
8822(6): nop 0x0(%rax,%rax,1)
8828(5): mov $0xa,%edx
882d(3): xor %r10d,%r10d
8830(5): mov $0x6e,%ebx
8835(5): jmp 0xfffffd5d(%rip)
883a(6): nop 0x0(%rax,%rax,1)
8840(5): mov $0x61,%ebx
8845(5): jmp 0xfffffdcb(%rip)
884a(6): nop 0x0(%rax,%rax,1)
8850(3): xor %r10d,%r10d
8853(5): cmp $0x2,0x8(%rsp)
8858(3): setz %dl
885b(5): cmp $0x0,0xf(%rsp)
8860(6): jnz 0xb9a(%rip)
8866(3): mov %r8d,%eax
8869(3): mov %r15,%rcx
886c(3): xor $0x1,%eax
886f(2): and %dl,%al
8871(2): jz 0x2f(%rip)
8873(3): cmp %r15,%r13
8876(2): jbe 0x7(%rip)
8878(5): mov $0x27,0x0(%r14,%r15,1)
887d(4): lea 0x1(%r15),%rcx
8881(3): cmp %rcx,%r13
8884(2): jbe 0x8(%rip)
8886(6): mov $0x24,0x1(%r14,%r15,1)
888c(4): lea 0x2(%r15),%rcx
8890(3): cmp %rcx,%r13
8893(6): jnbe 0x636(%rip)
8899(4): lea 0x3(%r15),%rcx
889d(3): mov %eax,%r8d
88a0(3): cmp %rcx,%r13
88a3(2): jbe 0x7(%rip)
88a5(5): mov $0x5c,0x0(%r14,%rcx,1)
88aa(5): cmp $0x2,0x8(%rsp)
88af(4): lea 0x1(%rcx),%r15
88b3(6): jz 0x606(%rip)
88b9(4): lea 0x1(%rbp),%rax
88bd(3): cmp %r11,%rax
88c0(2): jnb 0x1b(%rip)
88c2(5): mov 0x10(%rsp),%rax
88c7(5): movzx 0x1(%rax,%rbp,1),%eax
88cc(4): mov %al,0x28(%rsp)
88d0(3): sub $0x30,%eax
88d3(2): cmp $0x9,%al
88d5(6): jbe 0x834(%rip)
88db(3): mov %r12d,%eax
88de(5): mov $0x30,%ebx
88e3(3): xor %r12d,%r12d
88e6(5): jmp 0xfffffbb2(%rip)
88eb(5): nop 0x0(%rax,%rax,1)
88f0(5): cmp $0x2,0x8(%rsp)
88f5(3): mov %r10d,%r12d
88f8(3): setz %dl
88fb(3): xor %r10d,%r10d
88fe(2): xor %eax,%eax
8900(5): jmp 0xfffffb98(%rip)
8905(3): nop (%rax)
8908(5): cmp $0x2,0x8(%rsp)
890d(3): setz %dl
8910(3): xor %r10d,%r10d
8913(5): jmp 0xfffffdc5(%rip)
8918(8): nop 0x0(%rax,%rax,1)
8920(5): cmp $0x2,0x8(%rsp)
8925(3): setz %dl
8928(3): xor %r10d,%r10d
892b(3): xor %r12d,%r12d
892e(5): jmp 0xfffffdb3(%rip)
8933(5): nop 0x0(%rax,%rax,1)
8938(5): cmp $0x2,0x8(%rsp)
893d(3): mov %r10d,%r12d
8940(5): mov $0x20,%ebx
8945(3): setz %dl
8948(3): xor %r10d,%r10d
894b(5): jmp 0xfffffd96(%rip)
8950(5): mov $0xd,%edx
8955(3): xor %r10d,%r10d
8958(5): mov $0x72,%ebx
895d(5): jmp 0xfffffc35(%rip)
8962(6): nop 0x0(%rax,%rax,1)
8968(5): mov $0x76,%ebx
896d(5): jmp 0xfffffca3(%rip)
8972(6): nop 0x0(%rax,%rax,1)
8978(5): mov $0x9,%edx
897d(3): xor %r10d,%r10d
8980(5): mov $0x74,%ebx
8985(5): jmp 0xfffffc0d(%rip)
898a(6): nop 0x0(%rax,%rax,1)
8990(5): mov $0x62,%ebx
8995(5): jmp 0xfffffc7b(%rip)
899a(6): nop 0x0(%rax,%rax,1)
89a0(3): xor %r10d,%r10d
89a3(5): jmp 0xfffffa9d(%rip)
89a8(8): nop 0x0(%rax,%rax,1)
89b0(5): cmp $0x0,0xf(%rsp)
89b5(6): jnz 0x96b(%rip)
89bb(4): add $0x1,%rbp
89bf(3): mov %r8d,%eax
89c2(3): xor %r12d,%r12d
89c5(5): mov $0x5c,%ebx
89ca(5): jmp 0xfffffb12(%rip)
89cf(1): nop 
89d0(5): cmp $0x2,0x8(%rsp)
89d5(5): movzx 0xf(%rsp),%ebx
89da(3): mov %r8d,%r12d
89dd(3): mov %r11,%rbp
89e0(3): setz %dl
89e3(2): mov %ebx,%eax
89e5(3): test %r15,%r15
89e8(3): setz %cl
89eb(2): and %edx,%eax
89ed(2): and %cl,%al
89ef(6): jnz 0xa67(%rip)
89f5(2): mov %ebx,%eax
89f7(3): xor $0x1,%eax
89fa(2): and %al,%dl
89fc(6): jz 0x970(%rip)
8a02(5): cmp $0x0,0x7c(%rsp)
8a07(6): jz 0x963(%rip)
8a0d(5): cmp $0x0,0xe(%rsp)
8a12(6): jnz 0x9fb(%rip)
8a18(3): test %r13,%r13
8a1b(3): setz %al
8a1e(6): cmp $0x0,0x50(%rsp)
8a24(3): setnz %dl
8a27(2): and %dl,%al
8a29(6): jz 0xa23(%rip)
8a2f(5): mov 0x50(%rsp),%r13
8a34(7): lea 0x40aa(%rip),%rbx
8a3b(4): mov $0x27,(%r14)
8a3f(8): mov $0x2,0x8(%rsp)
8a47(6): mov $0x1,%r15d
8a4d(9): mov $0x1,0x18(%rsp)
8a56(5): mov $0x0,0xf(%rsp)
8a5b(5): mov %rbx,0x48(%rsp)
8a60(4): mov %al,0x7c(%rsp)
8a64(5): jmp 0xfffff8df(%rip)
8a69(7): nop 0x0(%rax)
8a70(5): cmp $0x0,0xf(%rsp)
8a75(6): jnz 0x8ab(%rip)
8a7b(3): test %r13,%r13
8a7e(6): jz 0x402(%rip)
8a84(2): xor %edx,%edx
8a86(6): cmp $0x0,0x50(%rsp)
8a8c(6): jnz 0x3f4(%rip)
8a92(5): mov %r13,0x50(%rsp)
8a97(4): add $0x3,%r15
8a9b(2): xor %eax,%eax
8a9d(5): mov %r12b,0x7c(%rsp)
8aa2(3): xor %r8d,%r8d
8aa5(3): mov %rdx,%r13
8aa8(5): mov $0x27,%ebx
8aad(5): jmp 0xfffffa1c(%rip)
8ab2(6): nop 0x0(%rax,%rax,1)
8ab8(5): test $0x4,0x78(%rsp)
8abd(2): jz 0x23(%rip)
8abf(4): lea 0x2(%rbp),%rcx
8ac3(3): cmp %r11,%rcx
8ac6(2): jnb 0x1a(%rip)
8ac8(5): mov 0x10(%rsp),%rax
8acd(5): cmp $0x3f,0x1(%rax,%rbp,1)
8ad2(6): jz 0x790(%rip)
8ad8(8): nop 0x0(%rax,%rax,1)
8ae0(2): xor %edx,%edx
8ae2(3): xor %r12d,%r12d
8ae5(2): xor %eax,%eax
8ae7(5): mov $0x3f,%ebx
8aec(5): jmp 0xfffff9ac(%rip)
8af1(7): nop 0x0(%rax)
8af8(5): cmp $0x0,0xf(%rsp)
8afd(6): jnz 0x823(%rip)
8b03(3): xor %r12d,%r12d
8b06(2): xor %eax,%eax
8b08(5): mov $0x3f,%ebx
8b0d(5): jmp 0xfffff9bc(%rip)
8b12(6): nop 0x0(%rax,%rax,1)
8b18(8): lea 0xa0(%rsp),%rax
8b20(4): cmp $0xffffffff,%r11
8b24(c): mov $0x0,0xa0(%rsp)
8b30(5): mov %rax,0x28(%rsp)
8b35(2): jnz 0x2f(%rip)
8b37(5): mov 0x10(%rsp),%rdi
8b3c(5): mov %r8b,0x40(%rsp)
8b41(5): mov %r10b,0x38(%rsp)
8b46(5): mov %r9,0x30(%rsp)
8b4b(5): call 0xffff90a5(%rip)
8b50(6): movzx 0x40(%rsp),%r8d
8b56(6): movzx 0x38(%rsp),%r10d
8b5c(3): mov %rax,%r11
8b5f(5): mov 0x30(%rsp),%r9
8b64(8): lea 0x9c(%rsp),%rax
8b6c(2): xor %ecx,%ecx
8b6e(4): mov %bl,0x7e(%rsp)
8b72(5): mov %r8b,0x7d(%rsp)
8b77(3): mov %rcx,%rbx
8b7a(8): mov %r9,0x88(%rsp)
8b82(5): mov %rax,0x38(%rsp)
8b87(5): mov %r10b,0x7f(%rsp)
8b8c(8): mov %r15,0x80(%rsp)
8b94(5): mov %r14,0x40(%rsp)
8b99(5): mov %r13,0x70(%rsp)
8b9e(5): mov %r11,0x30(%rsp)
8ba3(5): mov 0x10(%rsp),%rax
8ba8(5): lea 0x0(%rbp,%rbx,1),%r14
8bad(5): mov 0x30(%rsp),%rdx
8bb2(5): mov 0x28(%rsp),%rcx
8bb7(5): mov 0x38(%rsp),%rdi
8bbc(4): lea 0x0(%rax,%r14,1),%r13
8bc0(3): sub %r14,%rdx
8bc3(3): mov %r13,%rsi
8bc6(5): call 0x24ba(%rip)
8bcb(3): test %rax,%rax
8bce(3): mov %rax,%r15
8bd1(2): jz 0x50(%rip)
8bd3(4): cmp $0xffffffff,%rax
8bd7(6): jz 0x61e(%rip)
8bdd(4): cmp $0xfffffffe,%rax
8be1(6): jz 0x5a0(%rip)
8be7(5): cmp $0x2,0x8(%rsp)
8bec(3): setz %al
8bef(4): and 0xf(%rsp),%al
8bf3(6): jnz 0x19d(%rip)
8bf9(7): mov 0x9c(%rsp),%edi
8c00(5): call 0xffff9310(%rip)
8c05(5): mov 0x28(%rsp),%rdi
8c0a(2): test %eax,%eax
8c0c(5): mov $0x0,%eax
8c11(4): cmove %eax,%r12d
8c15(3): add %r15,%rbx
8c18(5): call 0xffff92e8(%rip)
8c1d(2): test %eax,%eax
8c1f(2): jz 0xffffff84(%rip)
8c21(3): mov %r12d,%edx
8c24(3): mov %rbx,%rdi
8c27(6): movzx 0x7d(%rsp),%r8d
8c2d(3): xor $0x1,%edx
8c30(5): movzx 0x7e(%rsp),%ebx
8c35(6): movzx 0x7f(%rsp),%r10d
8c3b(4): and 0xd(%rsp),%dl
8c3f(8): mov 0x80(%rsp),%r15
8c47(5): mov 0x40(%rsp),%r14
8c4c(5): mov 0x70(%rsp),%r13
8c51(5): mov 0x30(%rsp),%r11
8c56(4): cmp $0x1,%rdi
8c5a(6): jbe 0x601(%rip)
8c60(3): mov %rdi,%rcx
8c63(2): xor %esi,%esi
8c65(6): movzx 0xf(%rsp),%r9d
8c6b(3): add %rbp,%rcx
8c6e(5): mov 0x10(%rsp),%rdi
8c73(5): jmp 0xbb(%rip)
8c78(8): nop 0x0(%rax,%rax,1)
8c80(5): cmp $0x2,0x8(%rsp)
8c85(3): setz %al
8c88(3): test %r9b,%r9b
8c8b(6): jnz 0x4b5(%rip)
8c91(3): mov %r8d,%esi
8c94(3): xor $0x1,%esi
8c97(3): and %sil,%al
8c9a(2): jz 0x31(%rip)
8c9c(3): cmp %r15,%r13
8c9f(2): jbe 0x7(%rip)
8ca1(5): mov $0x27,0x0(%r14,%r15,1)
8ca6(4): lea 0x1(%r15),%rsi
8caa(3): cmp %rsi,%r13
8cad(2): jbe 0x8(%rip)
8caf(6): mov $0x24,0x1(%r14,%r15,1)
8cb5(4): lea 0x2(%r15),%rsi
8cb9(3): cmp %rsi,%r13
8cbc(2): jbe 0x8(%rip)
8cbe(6): mov $0x27,0x2(%r14,%r15,1)
8cc4(4): add $0x3,%r15
8cc8(3): mov %eax,%r8d
8ccb(3): cmp %r15,%r13
8cce(2): jbe 0x7(%rip)
8cd0(5): mov $0x5c,0x0(%r14,%r15,1)
8cd5(4): lea 0x1(%r15),%rax
8cd9(3): cmp %rax,%r13
8cdc(2): jbe 0xf(%rip)
8cde(2): mov %ebx,%eax
8ce0(3): shr $0x6,%al
8ce3(3): add $0x30,%eax
8ce6(5): mov %al,0x1(%r14,%r15,1)
8ceb(4): lea 0x2(%r15),%rax
8cef(3): cmp %rax,%r13
8cf2(2): jbe 0x12(%rip)
8cf4(2): mov %ebx,%eax
8cf6(3): shr $0x3,%al
8cf9(3): and $0x7,%eax
8cfc(3): add $0x30,%eax
8cff(5): mov %al,0x2(%r14,%r15,1)
8d04(3): and $0x7,%ebx
8d07(4): add $0x1,%rbp
8d0b(4): add $0x3,%r15
8d0f(3): add $0x30,%ebx
8d12(3): cmp %rcx,%rbp
8d15(6): jnb 0xfffff7eb(%rip)
8d1b(2): mov %edx,%esi
8d1d(3): cmp %r15,%r13
8d20(2): jbe 0x6(%rip)
8d22(4): mov %bl,0x0(%r14,%r15,1)
8d26(4): movzx 0x0(%rdi,%rbp,1),%ebx
8d2a(4): add $0x1,%r15
8d2e(2): test %dl,%dl
8d30(6): jnz 0xffffff50(%rip)
8d36(2): mov %esi,%eax
8d38(3): xor $0x1,%eax
8d3b(3): and %r8d,%eax
8d3e(3): test %r10b,%r10b
8d41(2): jz 0x10(%rip)
8d43(3): cmp %r15,%r13
8d46(2): jbe 0x7(%rip)
8d48(5): mov $0x5c,0x0(%r14,%r15,1)
8d4d(4): add $0x1,%r15
8d51(4): add $0x1,%rbp
8d55(3): cmp %rcx,%rbp
8d58(6): jnb 0xfffff784(%rip)
8d5e(2): test %al,%al
8d60(6): jz 0x3fe(%rip)
8d66(3): cmp %r15,%r13
8d69(2): jbe 0x7(%rip)
8d6b(5): mov $0x27,0x0(%r14,%r15,1)
8d70(4): lea 0x1(%r15),%rax
8d74(3): cmp %rax,%r13
8d77(2): jbe 0x8(%rip)
8d79(6): mov $0x27,0x1(%r14,%r15,1)
8d7f(4): add $0x2,%r15
8d83(3): xor %r10d,%r10d
8d86(3): xor %r8d,%r8d
8d89(2): jmp 0xffffff94(%rip)
8d8b(5): nop 0x0(%rax,%rax,1)
8d90(4): cmp $0x1,%r15
8d94(6): jz 0xfffffe65(%rip)
8d9a(5): mov 0x10(%rsp),%rdi
8d9f(4): lea 0x0(%rdi,%r15,1),%rcx
8da3(5): lea 0x1(%rdi,%r14,1),%rdx
8da8(4): lea 0x0(%rcx,%r14,1),%r8
8dac(2): jmp 0x11(%rip)
8dae(2): nop 
8db0(4): add $0x1,%rdx
8db4(3): cmp %rdx,%r8
8db7(6): jz 0xfffffe42(%rip)
8dbd(3): movzx (%rdx),%ecx
8dc0(3): sub $0x5b,%ecx
8dc3(3): cmp $0x21,%cl
8dc6(2): jnbe 0xffffffea(%rip)
8dc8(5): mov $0x1,%esi
8dcd(3): shl/sal %cl,%rsi
8dd0(3): mov %rsi,%rcx
8dd3(a): mov $0x8589934635,%rsi
8ddd(3): test %rsi,%rcx
8de0(2): jz 0xffffffd0(%rip)
8de2(5): mov 0x40(%rsp),%r14
8de7(5): mov 0x70(%rsp),%r13
8dec(5): mov 0x30(%rsp),%rbp
8df1(8): mov $0x2,0x8(%rsp)
8df9(5): cmp $0x0,0xd(%rsp)
8dfe(2): jz 0x12(%rip)
8e00(2): test %al,%al
8e02(5): mov $0x4,%eax
8e07(5): cmove 0x8(%rsp),%eax
8e0c(4): mov %eax,0x8(%rsp)
8e10(4): sub $0x8,%rsp
8e14(3): mov %rbp,%rcx
8e17(3): mov %r13,%rsi
8e1a(4): push 0x68(%rsp)
8e1e(4): push 0x78(%rsp)
8e22(3): mov %r14,%rdi
8e25(2): push $0x0
8e27(8): mov 0x98(%rsp),%r9d
8e2f(5): mov 0x28(%rsp),%r8d
8e34(5): mov 0x30(%rsp),%rdx
8e39(4): and $0xfd,%r9d
8e3d(5): call 0xfffff433(%rip)
8e42(4): add $0x20,%rsp
8e46(3): mov %rax,%r15
8e49(8): mov 0xa8(%rsp),%rbx
8e51(9): xor $0x28,%rbx
8e5a(3): mov %r15,%rax
8e5d(6): jnz 0x606(%rip)
8e63(7): add $0xb8,%rsp
8e6a(1): pop %rbx
8e6b(1): pop %rbp
8e6c(2): pop %r12
8e6e(2): pop %r13
8e70(2): pop %r14
8e72(2): pop %r15
8e74(1): ret near (%rsp)
8e75(3): nop (%rax)
8e78(3): mov %r11,%rbp
8e7b(5): jmp 0xffffff7e(%rip)
8e80(3): cmp %r15,%r13
8e83(2): jbe 0x7(%rip)
8e85(5): mov $0x27,0x0(%r14,%r15,1)
8e8a(4): lea 0x1(%r15),%rax
8e8e(3): cmp %rax,%r13
8e91(2): jbe 0x8(%rip)
8e93(6): mov $0x5c,0x1(%r14,%r15,1)
8e99(4): lea 0x2(%r15),%rax
8e9d(3): cmp %rax,%r13
8ea0(6): jbe 0x5f2(%rip)
8ea6(3): mov %r13,%rdx
8ea9(6): mov $0x27,0x2(%r14,%r15,1)
8eaf(5): mov 0x50(%rsp),%r13
8eb4(5): jmp 0xfffffbde(%rip)
8eb9(3): mov %r12d,%eax
8ebc(5): mov $0x30,%ebx
8ec1(3): xor %r12d,%r12d
8ec4(5): jmp 0xfffff605(%rip)
8ec9(6): mov $0x27,0x2(%r14,%r15,1)
8ecf(5): jmp 0xfffff9ca(%rip)
8ed4(2): test %ebx,%ebx
8ed6(6): jnz 0xfffff42d(%rip)
8edc(5): mov $0x1,0xd(%rsp)
8ee1(3): test %r13,%r13
8ee4(6): jnz 0x596(%rip)
8eea(7): lea 0x3bf4(%rip),%rax
8ef1(9): mov $0x0,0x50(%rsp)
8efa(5): mov $0x1,0xe(%rsp)
8eff(5): mov $0x0,0x7c(%rsp)
8f04(3): xor %r12d,%r12d
8f07(5): mov $0x0,0xf(%rsp)
8f0c(9): mov $0x1,0x18(%rsp)
8f15(5): mov %rax,0x48(%rsp)
8f1a(6): mov $0x1,%r15d
8f20(8): mov $0x2,0x8(%rsp)
8f28(5): jmp 0xfffff41b(%rip)
8f2d(3): nop (%rax)
8f30(2): test %ebx,%ebx
8f32(6): jnz 0x3fb(%rip)
8f38(3): test %r13,%r13
8f3b(6): jz 0x22b(%rip)
8f41(4): mov $0x22,(%r14)
8f45(5): mov $0x1,0xe(%rsp)
8f4a(3): xor %r12d,%r12d
8f4d(5): mov $0x0,0x7c(%rsp)
8f52(9): mov $0x0,0x50(%rsp)
8f5b(7): lea 0x3b81(%rip),%rax
8f62(5): mov $0x0,0xf(%rsp)
8f67(5): mov $0x1,0xd(%rsp)
8f6c(9): mov $0x1,0x18(%rsp)
8f75(6): mov $0x1,%r15d
8f7b(5): mov %rax,0x48(%rsp)
8f80(5): jmp 0xfffff3c3(%rip)
8f85(7): lea 0x3b57(%rip),%rax
8f8c(5): mov $0x1,0xe(%rsp)
8f91(5): mov $0x0,0x7c(%rsp)
8f96(3): xor %r12d,%r12d
8f99(9): mov $0x0,0x50(%rsp)
8fa2(5): mov $0x1,0xf(%rsp)
8fa7(5): mov $0x1,0xd(%rsp)
8fac(9): mov $0x1,0x18(%rsp)
8fb5(3): xor %r15d,%r15d
8fb8(5): mov %rax,0x48(%rsp)
8fbd(8): mov $0x5,0x8(%rsp)
8fc5(5): jmp 0xfffff37e(%rip)
8fca(5): mov $0x1,0xe(%rsp)
8fcf(5): mov $0x0,0x7c(%rsp)
8fd4(3): xor %r12d,%r12d
8fd7(9): mov $0x0,0x50(%rsp)
8fe0(5): mov $0x0,0xf(%rsp)
8fe5(3): xor %r15d,%r15d
8fe8(5): mov $0x1,0xd(%rsp)
8fed(9): mov $0x0,0x18(%rsp)
8ff6(9): mov $0x0,0x48(%rsp)
8fff(5): jmp 0xfffff344(%rip)
9004(5): cmp $0xa,0x8(%rsp)
9009(2): jz 0x58(%rip)
900b(7): lea 0x3ad5(%rip),%rsi
9012(2): xor %edi,%edi
9014(5): mov $0x5,%edx
9019(5): call 0xffff8bb7(%rip)
901e(3): mov %rax,%rcx
9021(5): mov %rax,0x68(%rsp)
9026(7): lea 0x3aba(%rip),%rax
902d(3): cmp %rax,%rcx
9030(6): jz 0x39e(%rip)
9036(7): lea 0x3aa8(%rip),%rsi
903d(2): xor %edi,%edi
903f(5): mov $0x5,%edx
9044(5): call 0xffff8b8c(%rip)
9049(3): mov %rax,%rcx
904c(5): mov %rax,0x60(%rsp)
9051(7): lea 0x3a8d(%rip),%rax
9058(3): cmp %rax,%rcx
905b(6): jz 0x389(%rip)
9061(3): xor %r15d,%r15d
9064(2): test %ebx,%ebx
9066(6): jz 0x1c7(%rip)
906c(2): test %ebx,%ebx
906e(5): mov 0x60(%rsp),%rbx
9073(5): setnz 0xf(%rsp)
9078(3): xor %r12d,%r12d
907b(3): mov %rbx,%rdi
907e(5): call 0xffff8b72(%rip)
9083(5): mov %rbx,0x48(%rsp)
9088(5): mov %rax,0x18(%rsp)
908d(5): mov $0x1,0xe(%rsp)
9092(5): mov $0x0,0x7c(%rsp)
9097(9): mov $0x0,0x50(%rsp)
90a0(5): mov $0x1,0xd(%rsp)
90a5(5): jmp 0xfffff29e(%rip)
90aa(5): mov $0x1,0xe(%rsp)
90af(5): mov $0x0,0x7c(%rsp)
90b4(3): xor %r12d,%r12d
90b7(9): mov $0x0,0x50(%rsp)
90c0(5): mov $0x0,0xf(%rsp)
90c5(3): xor %r15d,%r15d
90c8(5): mov $0x0,0xd(%rsp)
90cd(9): mov $0x0,0x18(%rsp)
90d6(9): mov $0x0,0x48(%rsp)
90df(5): jmp 0xfffff264(%rip)
90e4(5): mov $0x1,0xe(%rsp)
90e9(5): mov $0x0,0x7c(%rsp)
90ee(3): xor %r12d,%r12d
90f1(9): mov $0x0,0x50(%rsp)
90fa(5): mov $0x1,0xf(%rsp)
90ff(5): mov $0x1,0xd(%rsp)
9104(5): jmp 0xfffff21f(%rip)
9109(3): cmp %r15,%r13
910c(2): jbe 0x7(%rip)
910e(5): mov $0x30,0x0(%r14,%r15,1)
9113(4): lea 0x2(%rcx),%rax
9117(3): cmp %rax,%r13
911a(2): jbe 0x8(%rip)
911c(6): mov $0x30,0x2(%r14,%rcx,1)
9122(3): mov %r12d,%eax
9125(4): lea 0x3(%rcx),%r15
9129(3): xor %r12d,%r12d
912c(5): mov $0x30,%ebx
9131(5): jmp 0xfffff367(%rip)
9136(a): nop 0x0(%rax,%rax,1)
9140(5): movzx 0xf(%rsp),%ebx
9145(3): mov %r11,%rbp
9148(4): mov %bl,0xd(%rsp)
914c(5): jmp 0xfffffcad(%rip)
9151(5): movzx 0xd(%rsp),%edx
9156(3): xor %r12d,%r12d
9159(5): jmp 0xfffffb07(%rip)
915e(3): xor %r10d,%r10d
9161(5): jmp 0xfffffbbc(%rip)
9166(9): mov $0x0,0x50(%rsp)
916f(5): mov $0x1,0xe(%rsp)
9174(3): xor %r12d,%r12d
9177(5): mov $0x0,0x7c(%rsp)
917c(5): jmp 0xfffffddf(%rip)
9181(5): mov 0x30(%rsp),%r11
9186(3): mov %r14,%rsi
9189(3): mov %r13,%rcx
918c(3): mov %rbx,%rax
918f(3): mov %rbx,%rdi
9192(6): movzx 0x7d(%rsp),%r8d
9198(5): movzx 0x7e(%rsp),%ebx
919d(8): mov 0x88(%rsp),%r9
91a5(3): cmp %r11,%rsi
91a8(6): movzx 0x7f(%rsp),%r10d
91ae(8): mov 0x80(%rsp),%r15
91b6(5): mov 0x40(%rsp),%r14
91bb(5): mov 0x70(%rsp),%r13
91c0(2): jnb 0x28(%rip)
91c2(3): cmp $0x0,(%rcx)
91c5(2): jnz 0x12(%rip)
91c7(2): jmp 0x21(%rip)
91c9(7): nop 0x0(%rax)
91d0(5): cmp $0x0,0x0(%r9,%rax,1)
91d5(2): jz 0x10(%rip)
91d7(4): add $0x1,%rax
91db(5): lea 0x0(%rbp,%rax,1),%rdx
91e0(3): cmp %rdx,%r11
91e3(2): jnbe 0xffffffed(%rip)
91e5(3): mov %rax,%rdi
91e8(5): movzx 0xd(%rsp),%edx
91ed(3): xor %r12d,%r12d
91f0(5): jmp 0xfffffa66(%rip)
91f5(3): mov %rbx,%rdi
91f8(6): movzx 0x7d(%rsp),%r8d
91fe(5): movzx 0x7e(%rsp),%ebx
9203(6): movzx 0x7f(%rsp),%r10d
9209(8): mov 0x80(%rsp),%r15
9211(3): xor %r12d,%r12d
9214(5): mov 0x40(%rsp),%r14
9219(5): mov 0x70(%rsp),%r13
921e(5): mov 0x30(%rsp),%r11
9223(5): movzx 0xd(%rsp),%edx
9228(5): jmp 0xfffffa2e(%rip)
922d(5): mov 0x68(%rsp),%rdx
9232(3): movzx (%rdx),%eax
9235(2): test %al,%al
9237(6): jz 0xfffffe35(%rip)
923d(3): nop (%rax)
9240(3): cmp %r15,%r13
9243(2): jbe 0x6(%rip)
9245(4): mov %al,0x0(%r14,%r15,1)
9249(4): add $0x1,%r15
924d(5): movzx 0x0(%rdx,%r15,1),%eax
9252(2): test %al,%al
9254(2): jnz 0xffffffec(%rip)
9256(5): jmp 0xfffffe16(%rip)
925b(2): mov %edx,%eax
925d(5): jmp 0xfffff55a(%rip)
9262(4): movzx 0x0(%rax,%rcx,1),%ebx
9266(3): cmp $0x3e,%bl
9269(6): jnbe 0xfffff877(%rip)
926f(a): mov $0x8070630310989004800,%rax
9279(4): bt %rbx,%rax
927d(6): jnb 0xfffff863(%rip)
9283(5): cmp $0x0,0xf(%rsp)
9288(6): jnz 0x1ea(%rip)
928e(3): cmp %r15,%r13
9291(2): jbe 0x7(%rip)
9293(5): mov $0x3f,0x0(%r14,%r15,1)
9298(4): lea 0x1(%r15),%rax
929c(3): cmp %rax,%r13
929f(2): jbe 0x8(%rip)
92a1(6): mov $0x22,0x1(%r14,%r15,1)
92a7(4): lea 0x2(%r15),%rax
92ab(3): cmp %rax,%r13
92ae(2): jbe 0x8(%rip)
92b0(6): mov $0x22,0x2(%r14,%r15,1)
92b6(4): lea 0x3(%r15),%rax
92ba(3): cmp %rax,%r13
92bd(2): jbe 0x8(%rip)
92bf(6): mov $0x3f,0x3(%r14,%r15,1)
92c5(4): add $0x4,%r15
92c9(2): xor %edx,%edx
92cb(3): xor %r12d,%r12d
92ce(2): xor %eax,%eax
92d0(3): mov %rcx,%rbp
92d3(5): jmp 0xfffff1c5(%rip)
92d8(2): test %ebx,%ebx
92da(6): jz 0x18e(%rip)
92e0(7): lea 0x37fe(%rip),%rax
92e7(5): mov $0x1,0xe(%rsp)
92ec(5): mov $0x0,0x7c(%rsp)
92f1(3): xor %r12d,%r12d
92f4(9): mov $0x0,0x50(%rsp)
92fd(5): mov $0x1,0xf(%rsp)
9302(5): mov $0x0,0xd(%rsp)
9307(9): mov $0x1,0x18(%rsp)
9310(3): xor %r15d,%r15d
9313(5): mov %rax,0x48(%rsp)
9318(5): jmp 0xfffff02b(%rip)
931d(3): nop (%rax)
9320(3): mov %r11,%rbp
9323(5): movzx 0xf(%rsp),%eax
9328(5): jmp 0xfffffad1(%rip)
932d(7): lea 0x37af(%rip),%rax
9334(5): mov $0x1,0xe(%rsp)
9339(5): mov $0x0,0x7c(%rsp)
933e(3): xor %r12d,%r12d
9341(9): mov $0x0,0x50(%rsp)
934a(5): mov $0x1,0xf(%rsp)
934f(5): mov $0x1,0xd(%rsp)
9354(9): mov $0x1,0x18(%rsp)
935d(3): xor %r15d,%r15d
9360(5): mov %rax,0x48(%rsp)
9365(5): jmp 0xffffefde(%rip)
936a(2): mov %edx,%eax
936c(5): mov 0x48(%rsp),%rbx
9371(3): test %rbx,%rbx
9374(2): jz 0x2e(%rip)
9376(2): test %al,%al
9378(2): jz 0x2a(%rip)
937a(3): movzx (%rbx),%ecx
937d(3): mov %rbx,%rax
9380(2): test %cl,%cl
9382(2): jz 0x20(%rip)
9384(3): mov %r15,%rdx
9387(3): sub %r15,%rax
938a(3): cmp %rdx,%r13
938d(2): jbe 0x6(%rip)
938f(4): mov %cl,0x0(%r14,%rdx,1)
9393(4): add $0x1,%rdx
9397(4): movzx 0x0(%rax,%rdx,1),%ecx
939b(2): test %cl,%cl
939d(2): jnz 0xffffffed(%rip)
939f(3): mov %rdx,%r15
93a2(3): cmp %r15,%r13
93a5(6): jbe 0xfffffaa4(%rip)
93ab(5): mov $0x0,0x0(%r14,%r15,1)
93b0(5): jmp 0xfffffa99(%rip)
93b5(5): cmp $0x2,0x8(%rsp)
93ba(5): movzx 0xf(%rsp),%ebx
93bf(3): mov %r11,%rbp
93c2(3): setz %al
93c5(4): mov %bl,0xd(%rsp)
93c9(5): jmp 0xfffffa30(%rip)
93ce(4): mov 0x8(%rsp),%esi
93d2(3): mov %rcx,%rdi
93d5(5): call 0xffffedab(%rip)
93da(5): mov %rax,0x68(%rsp)
93df(5): jmp 0xfffffc57(%rip)
93e4(4): mov 0x8(%rsp),%esi
93e8(3): mov %rcx,%rdi
93eb(5): call 0xffffed95(%rip)
93f0(5): mov %rax,0x60(%rsp)
93f5(5): jmp 0xfffffc6c(%rip)
93fa(5): movzx 0xf(%rsp),%ebx
93ff(3): mov %r11,%rbp
9402(2): mov %edx,%eax
9404(4): mov %bl,0xd(%rsp)
9408(5): jmp 0xfffff9f1(%rip)
940d(4): sub $0x8,%rsp
9411(6): mov $0x5,%r8d
9417(3): mov %r11,%rcx
941a(4): push 0x68(%rsp)
941e(4): push 0x78(%rsp)
9422(3): mov %r14,%rdi
9425(4): push 0x38(%rsp)
9429(8): mov 0x98(%rsp),%r9d
9431(5): mov 0x30(%rsp),%rdx
9436(5): mov 0x70(%rsp),%rsi
943b(5): call 0xffffee35(%rip)
9440(4): add $0x20,%rsp
9444(3): mov %rax,%r15
9447(5): jmp 0xfffffa02(%rip)
944c(5): movzx 0x7c(%rsp),%eax
9451(5): jmp 0xffffff1b(%rip)
9456(8): mov $0x2,0x8(%rsp)
945e(5): jmp 0xfffff99b(%rip)
9463(5): call 0xffff87ad(%rip)
9468(5): mov $0x0,0xd(%rsp)
946d(5): jmp 0xfffffa74(%rip)
9472(3): mov %r11,%rbp
9475(5): jmp 0xfffff99b(%rip)
947a(5): mov $0x1,0xe(%rsp)
947f(2): xor %eax,%eax
9481(3): xor %r12d,%r12d
9484(9): mov $0x0,0x50(%rsp)
948d(5): jmp 0xfffff5a7(%rip)
9492(3): mov %r13,%rdx
9495(5): mov 0x50(%rsp),%r13
949a(5): jmp 0xfffff5f8(%rip)
949f(5): call 0xffff8661(%rip)

"quotearg_n_options" :
94b0(2): push %r15
94b2(2): push %r14
94b4(3): movsxd %edi,%r15
94b7(2): push %r13
94b9(2): push %r12
94bb(3): mov %rdx,%r14
94be(1): push %rbp
94bf(1): push %rbx
94c0(3): mov %rcx,%rbp
94c3(4): sub $0x28,%rsp
94c7(5): mov %rsi,0x8(%rsp)
94cc(5): call 0xffff8644(%rip)
94d1(3): mov %rax,%r13
94d4(2): mov (%rax),%eax
94d6(3): test %r15d,%r15d
94d9(7): mov 0x206bc0(%rip),%rbx
94e0(4): mov %eax,0x18(%rsp)
94e4(6): js 0x16d(%rip)
94ea(7): cmp %r15d,0x206ba7(%rip)
94f1(2): jnle 0x64(%rip)
94f3(7): cmp $0x7fffffff,%r15d
94fa(6): jz 0x15c(%rip)
9500(4): lea 0x1(%r15),%r12d
9504(7): lea 0x206ba5(%rip),%rax
950b(3): movsxd %r12d,%rsi
950e(4): shl/sal $0x4,%rsi
9512(3): cmp %rax,%rbx
9515(6): jz 0x11b(%rip)
951b(3): mov %rbx,%rdi
951e(5): call 0x1012(%rip)
9523(3): mov %rax,%rbx
9526(7): mov %rax,0x206b73(%rip)
952d(7): movsxd 0x206b64(%rip),%rdi
9534(3): mov %r12d,%edx
9537(2): xor %esi,%esi
9539(2): sub %edi,%edx
953b(4): shl/sal $0x4,%rdi
953f(3): movsxd %edx,%rdx
9542(3): add %rbx,%rdi
9545(4): shl/sal $0x4,%rdx
9549(5): call 0xffff8787(%rip)
954e(7): mov %r12d,0x206b43(%rip)
9555(3): mov 0x4(%rbp),%eax
9558(4): shl/sal $0x4,%r15
955c(4): sub $0x8,%rsp
9560(3): add %r15,%rbx
9563(4): lea 0x8(%rbp),%r15
9567(4): mov 0x0(%rbp),%r8d
956b(3): mov (%rbx),%r11
956e(4): mov 0x8(%rbx),%r12
9572(3): mov %r14,%rcx
9575(3): or $0x1,%eax
9578(4): mov %eax,0x24(%rsp)
957c(3): push 0x30(%rbp)
957f(3): mov %eax,%r9d
9582(3): push 0x28(%rbp)
9585(2): push %r15
9587(3): mov %r11,%rsi
958a(5): mov 0x28(%rsp),%rdx
958f(3): mov %r12,%rdi
9592(5): mov %r11,0x30(%rsp)
9597(5): call 0xffffecd9(%rip)
959c(4): add $0x20,%rsp
95a0(5): mov 0x10(%rsp),%r11
95a5(3): cmp %rax,%r11
95a8(2): jnbe 0x69(%rip)
95aa(4): lea 0x1(%rax),%rsi
95ae(7): lea 0x206b8b(%rip),%rax
95b5(3): cmp %rax,%r12
95b8(3): mov %rsi,(%rbx)
95bb(2): jz 0x14(%rip)
95bd(3): mov %r12,%rdi
95c0(5): mov %rsi,0x10(%rsp)
95c5(5): call 0xffff852b(%rip)
95ca(5): mov 0x10(%rsp),%rsi
95cf(3): mov %rsi,%rdi
95d2(5): mov %rsi,0x10(%rsp)
95d7(5): call 0xef9(%rip)
95dc(4): sub $0x8,%rsp
95e0(4): mov %rax,0x8(%rbx)
95e4(4): mov 0x0(%rbp),%r8d
95e8(3): push 0x30(%rbp)
95eb(3): push 0x28(%rbp)
95ee(3): mov %r14,%rcx
95f1(2): push %r15
95f3(5): mov 0x3c(%rsp),%r9d
95f8(3): mov %rax,%rdi
95fb(5): mov 0x28(%rsp),%rdx
9600(5): mov 0x30(%rsp),%rsi
9605(3): mov %rax,%r12
9608(5): call 0xffffec68(%rip)
960d(4): add $0x20,%rsp
9611(4): mov 0x18(%rsp),%eax
9615(4): mov %eax,0x0(%r13)
9619(4): add $0x28,%rsp
961d(3): mov %r12,%rax
9620(1): pop %rbx
9621(1): pop %rbp
9622(2): pop %r12
9624(2): pop %r13
9626(2): pop %r14
9628(2): pop %r15
962a(1): ret near (%rsp)
962b(5): nop 0x0(%rax,%rax,1)
9630(2): xor %edi,%edi
9632(5): call 0xefe(%rip)
9637(8): movdqa 0x206a71(%rip),%xmm0
963f(3): mov %rax,%rbx
9642(7): mov %rax,0x206a57(%rip)
9649(3): movups %xmm0,(%rax)
964c(5): jmp 0xfffffee1(%rip)
9651(5): call 0xffff84af(%rip)
9656(5): call 0x10ca(%rip)

"clone_quoting_options" :
9660(2): push %r12
9662(1): push %rbp
9663(1): push %rbx
9664(3): mov %rdi,%rbx
9667(5): call 0xffff84a9(%rip)
966c(3): mov (%rax),%r12d
966f(3): mov %rax,%rbp
9672(7): lea 0x206bc7(%rip),%rax
9679(3): test %rbx,%rbx
967c(5): mov $0x38,%esi
9681(4): cmove %rax,%rbx
9685(3): mov %rbx,%rdi
9688(5): call 0x1048(%rip)
968d(4): mov %r12d,0x0(%rbp)
9691(1): pop %rbx
9692(1): pop %rbp
9693(2): pop %r12
9695(1): ret near (%rsp)

"get_quoting_style" :
96a0(7): lea 0x206b99(%rip),%rax
96a7(3): test %rdi,%rdi
96aa(4): cmove %rax,%rdi
96ae(2): mov (%rdi),%eax
96b0(1): ret near (%rsp)

"set_quoting_style" :
96c0(7): lea 0x206b79(%rip),%rax
96c7(3): test %rdi,%rdi
96ca(4): cmove %rax,%rdi
96ce(2): mov %esi,(%rdi)
96d0(1): ret near (%rsp)

"set_char_quoting" :
96e0(7): lea 0x206b59(%rip),%rax
96e7(3): test %rdi,%rdi
96ea(2): mov %esi,%ecx
96ec(4): cmove %rax,%rdi
96f0(2): mov %esi,%eax
96f2(3): and $0x1f,%ecx
96f5(3): shr $0x5,%al
96f8(3): movzx %al,%eax
96fb(5): lea 0x8(%rdi,%rax,4),%rdi
9700(2): mov (%rdi),%esi
9702(2): mov %esi,%eax
9704(2): shr %cl,%eax
9706(2): xor %eax,%edx
9708(3): and $0x1,%eax
970b(3): and $0x1,%edx
970e(2): shl/sal %cl,%edx
9710(2): xor %esi,%edx
9712(2): mov %edx,(%rdi)
9714(1): ret near (%rsp)

"set_quoting_flags" :
9720(7): lea 0x206b19(%rip),%rax
9727(3): test %rdi,%rdi
972a(4): cmove %rax,%rdi
972e(3): mov 0x4(%rdi),%eax
9731(3): mov %esi,0x4(%rdi)
9734(1): ret near (%rsp)

"set_custom_quoting" :
9740(7): lea 0x206af9(%rip),%rax
9747(3): test %rdi,%rdi
974a(4): cmove %rax,%rdi
974e(3): test %rsi,%rsi
9751(6): mov $0xa,(%rdi)
9757(2): jz 0x10(%rip)
9759(3): test %rdx,%rdx
975c(2): jz 0xb(%rip)
975e(4): mov %rsi,0x28(%rdi)
9762(4): mov %rdx,0x30(%rdi)
9766(1): ret near (%rsp)
9767(4): sub $0x8,%rsp
976b(5): call 0xffff8395(%rip)

"quotearg_buffer" :
9770(2): push %r15
9772(2): push %r14
9774(7): lea 0x206ac5(%rip),%rax
977b(2): push %r13
977d(2): push %r12
977f(3): mov %rdi,%r13
9782(1): push %rbp
9783(1): push %rbx
9784(3): mov %r8,%rbx
9787(3): mov %rsi,%r14
978a(3): mov %rdx,%r15
978d(4): sub $0x18,%rsp
9791(3): test %r8,%r8
9794(4): cmove %rax,%rbx
9798(5): mov %rcx,0x8(%rsp)
979d(5): call 0xffff8373(%rip)
97a2(3): mov (%rax),%r12d
97a5(3): mov %rax,%rbp
97a8(4): lea 0x8(%rbx),%rax
97ac(4): sub $0x8,%rsp
97b0(4): mov 0x4(%rbx),%r9d
97b4(3): push 0x30(%rbx)
97b7(3): mov (%rbx),%r8d
97ba(3): push 0x28(%rbx)
97bd(3): mov %r15,%rdx
97c0(1): push %rax
97c1(5): mov 0x28(%rsp),%rcx
97c6(3): mov %r14,%rsi
97c9(3): mov %r13,%rdi
97cc(5): call 0xffffeaa4(%rip)
97d1(4): mov %r12d,0x0(%rbp)
97d5(4): add $0x38,%rsp
97d9(1): pop %rbx
97da(1): pop %rbp
97db(2): pop %r12
97dd(2): pop %r13
97df(2): pop %r14
97e1(2): pop %r15
97e3(1): ret near (%rsp)

"quotearg_alloc_mem" :
97f0(2): push %r15
97f2(2): push %r14
97f4(7): lea 0x206a45(%rip),%rax
97fb(2): push %r13
97fd(2): push %r12
97ff(3): mov %rdx,%r12
9802(1): push %rbp
9803(1): push %rbx
9804(3): mov %rcx,%rbx
9807(3): mov %rdi,%r14
980a(3): mov %rsi,%r15
980d(4): sub $0x38,%rsp
9811(3): test %rcx,%rcx
9814(4): cmove %rax,%rbx
9818(2): xor %ebp,%ebp
981a(5): call 0xffff82f6(%rip)
981f(3): test %r12,%r12
9822(3): mov %rax,%r13
9825(2): mov (%rax),%eax
9827(4): setz %bpl
982b(3): or 0x4(%rbx),%ebp
982e(4): lea 0x8(%rbx),%r10
9832(4): sub $0x8,%rsp
9836(3): mov (%rbx),%r8d
9839(3): mov %r15,%rcx
983c(4): mov %eax,0x14(%rsp)
9840(3): push 0x30(%rbx)
9843(3): mov %r14,%rdx
9846(3): push 0x28(%rbx)
9849(2): push %r10
984b(2): xor %esi,%esi
984d(3): mov %ebp,%r9d
9850(2): xor %edi,%edi
9852(5): mov %r10,0x40(%rsp)
9857(5): call 0xffffea19(%rip)
985c(4): lea 0x1(%rax),%rsi
9860(5): mov %rax,0x48(%rsp)
9865(4): add $0x20,%rsp
9869(3): mov %rsi,%rdi
986c(5): mov %rsi,0x18(%rsp)
9871(5): call 0xc5f(%rip)
9876(5): mov %rax,0x10(%rsp)
987b(4): sub $0x8,%rsp
987f(3): push 0x30(%rbx)
9882(3): push 0x28(%rbx)
9885(5): mov 0x38(%rsp),%r10
988a(3): mov %ebp,%r9d
988d(3): mov (%rbx),%r8d
9890(3): mov %r15,%rcx
9893(3): mov %r14,%rdx
9896(3): mov %rax,%rdi
9899(2): push %r10
989b(5): mov 0x38(%rsp),%rsi
98a0(5): call 0xffffe9d0(%rip)
98a5(4): mov 0x2c(%rsp),%eax
98a9(4): add $0x20,%rsp
98ad(3): test %r12,%r12
98b0(4): mov %eax,0x0(%r13)
98b4(2): jz 0xb(%rip)
98b6(5): mov 0x28(%rsp),%r11
98bb(4): mov %r11,(%r12)
98bf(5): mov 0x10(%rsp),%rax
98c4(4): add $0x38,%rsp
98c8(1): pop %rbx
98c9(1): pop %rbp
98ca(2): pop %r12
98cc(2): pop %r13
98ce(2): pop %r14
98d0(2): pop %r15
98d2(1): ret near (%rsp)

"quotearg_alloc" :
98e0(3): mov %rdx,%rcx
98e3(2): xor %edx,%edx
98e5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
98f0(6): mov 0x2067a2(%rip),%eax
98f6(2): push %r12
98f8(7): mov 0x2067a1(%rip),%r12
98ff(1): push %rbp
9900(1): push %rbx
9901(3): cmp $0x1,%eax
9904(2): jle 0x2d(%rip)
9906(3): sub $0x2,%eax
9909(5): lea 0x18(%r12),%rbx
990e(4): shl/sal $0x4,%rax
9912(5): lea 0x28(%r12,%rax,1),%rbp
9917(9): nop 0x0(%rax,%rax,1)
9920(3): mov (%rbx),%rdi
9923(4): add $0x10,%rbx
9927(5): call 0xffff81c9(%rip)
992c(3): cmp %rbp,%rbx
992f(2): jnz 0xfffffff1(%rip)
9931(5): mov 0x8(%r12),%rdi
9936(7): lea 0x206803(%rip),%rbx
993d(3): cmp %rbx,%rdi
9940(2): jz 0x19(%rip)
9942(5): call 0xffff81ae(%rip)
9947(b): mov $0x100,0x20675e(%rip)
9952(7): mov %rbx,0x20675f(%rip)
9959(7): lea 0x206750(%rip),%rbx
9960(3): cmp %rbx,%r12
9963(2): jz 0x11(%rip)
9965(3): mov %r12,%rdi
9968(5): call 0xffff8188(%rip)
996d(7): mov %rbx,0x20672c(%rip)
9974(1): pop %rbx
9975(a): mov $0x1,0x206719(%rip)
997f(1): pop %rbp
9980(2): pop %r12
9982(1): ret near (%rsp)

"quotearg_n" :
9990(7): lea 0x2068a9(%rip),%rcx
9997(7): mov $0xffffffff,%rdx
999e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
99b0(7): lea 0x206889(%rip),%rcx
99b7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
99c0(7): lea 0x206879(%rip),%rcx
99c7(3): mov %rdi,%rsi
99ca(7): mov $0xffffffff,%rdx
99d1(2): xor %edi,%edi
99d3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
99e0(7): lea 0x206859(%rip),%rcx
99e7(3): mov %rsi,%rdx
99ea(3): mov %rdi,%rsi
99ed(2): xor %edi,%edi
99ef(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
9a00(4): sub $0x48,%rsp
9a04(3): mov %rdx,%rax
9a07(9): mov $0x28,%rdx
9a10(5): mov %rdx,0x38(%rsp)
9a15(2): xor %edx,%edx
9a17(3): cmp $0xa,%esi
9a1a(2): jz 0x6a(%rip)
9a1c(3): mov %esi,(%rsp)
9a1f(3): mov %rsp,%rcx
9a22(7): mov $0xffffffff,%rdx
9a29(3): mov %rax,%rsi
9a2c(9): mov $0x0,0x4(%rsp)
9a35(9): mov $0x0,0xc(%rsp)
9a3e(9): mov $0x0,0x14(%rsp)
9a47(9): mov $0x0,0x1c(%rsp)
9a50(9): mov $0x0,0x24(%rsp)
9a59(9): mov $0x0,0x2c(%rsp)
9a62(8): mov $0x0,0x34(%rsp)
9a6a(5): call 0xfffffa46(%rip)
9a6f(5): mov 0x38(%rsp),%rcx
9a74(9): xor $0x28,%rcx
9a7d(2): jnz 0xc(%rip)
9a7f(4): add $0x48,%rsp
9a83(1): ret near (%rsp)
9a84(5): call 0xffff807c(%rip)
9a89(5): call 0xffff8187(%rip)

"quotearg_n_style_mem" :
9a90(4): sub $0x48,%rsp
9a94(3): mov %rdx,%rax
9a97(3): mov %rcx,%rdx
9a9a(9): mov $0x28,%rcx
9aa3(5): mov %rcx,0x38(%rsp)
9aa8(2): xor %ecx,%ecx
9aaa(3): cmp $0xa,%esi
9aad(2): jz 0x63(%rip)
9aaf(3): mov %esi,(%rsp)
9ab2(3): mov %rsp,%rcx
9ab5(3): mov %rax,%rsi
9ab8(9): mov $0x0,0x4(%rsp)
9ac1(9): mov $0x0,0xc(%rsp)
9aca(9): mov $0x0,0x14(%rsp)
9ad3(9): mov $0x0,0x1c(%rsp)
9adc(9): mov $0x0,0x24(%rsp)
9ae5(9): mov $0x0,0x2c(%rsp)
9aee(8): mov $0x0,0x34(%rsp)
9af6(5): call 0xfffff9ba(%rip)
9afb(5): mov 0x38(%rsp),%rdx
9b00(9): xor $0x28,%rdx
9b09(2): jnz 0xc(%rip)
9b0b(4): add $0x48,%rsp
9b0f(1): ret near (%rsp)
9b10(5): call 0xffff7ff0(%rip)
9b15(5): call 0xffff80fb(%rip)

"quotearg_style" :
9b20(3): mov %rsi,%rdx
9b23(2): mov %edi,%esi
9b25(2): xor %edi,%edi
9b27(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
9b30(3): mov %rdx,%rcx
9b33(3): mov %rsi,%rdx
9b36(2): mov %edi,%esi
9b38(2): xor %edi,%edi
9b3a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
9b40(4): sub $0x48,%rsp
9b44(2): mov %edx,%ecx
9b46(9): mov $0x28,%rax
9b4f(5): mov %rax,0x38(%rsp)
9b54(2): xor %eax,%eax
9b56(7): mov 0x206713(%rip),%rax
9b5d(3): mov %rsp,%r8
9b60(3): and $0x1f,%ecx
9b63(8): movdqa 0x2066d5(%rip),%xmm0
9b6b(5): mov %rax,0x30(%rsp)
9b70(2): mov %edx,%eax
9b72(4): movaps %xmm0,(%rsp)
9b76(3): shr $0x5,%al
9b79(3): movzx %al,%eax
9b7c(5): lea 0x8(%r8,%rax,4),%r9
9b81(8): movdqa 0x2066c7(%rip),%xmm0
9b89(5): movaps %xmm0,0x10(%rsp)
9b8e(8): movdqa 0x2066ca(%rip),%xmm0
9b96(5): movaps %xmm0,0x20(%rsp)
9b9b(3): mov (%r9),%edx
9b9e(2): mov %edx,%eax
9ba0(2): shr %cl,%eax
9ba2(2): not %eax
9ba4(3): and $0x1,%eax
9ba7(2): shl/sal %cl,%eax
9ba9(3): mov %r8,%rcx
9bac(2): xor %edx,%eax
9bae(3): mov %rsi,%rdx
9bb1(3): mov %rdi,%rsi
9bb4(3): mov %eax,(%r9)
9bb7(2): xor %edi,%edi
9bb9(5): call 0xfffff8f7(%rip)
9bbe(5): mov 0x38(%rsp),%rsi
9bc3(9): xor $0x28,%rsi
9bcc(2): jnz 0x7(%rip)
9bce(4): add $0x48,%rsp
9bd2(1): ret near (%rsp)
9bd3(5): call 0xffff803d(%rip)

"quotearg_char" :
9be0(4): movsx %sil,%edx
9be4(7): mov $0xffffffff,%rsi
9beb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
9bf0(5): mov $0x3a,%edx
9bf5(7): mov $0xffffffff,%rsi
9bfc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
9c10(5): mov $0x3a,%edx
9c15(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
9c20(4): sub $0x48,%rsp
9c24(3): mov %rdx,%rax
9c27(9): mov $0x28,%rdx
9c30(5): mov %rdx,0x38(%rsp)
9c35(2): xor %edx,%edx
9c37(3): cmp $0xa,%esi
9c3a(2): jz 0x6a(%rip)
9c3c(3): mov %esi,(%rsp)
9c3f(3): mov %rsp,%rcx
9c42(7): mov $0xffffffff,%rdx
9c49(3): mov %rax,%rsi
9c4c(9): mov $0x0,0x4(%rsp)
9c55(9): mov $0x4000000,0xc(%rsp)
9c5e(9): mov $0x0,0x14(%rsp)
9c67(9): mov $0x0,0x1c(%rsp)
9c70(9): mov $0x0,0x24(%rsp)
9c79(9): mov $0x0,0x2c(%rsp)
9c82(8): mov $0x0,0x34(%rsp)
9c8a(5): call 0xfffff826(%rip)
9c8f(5): mov 0x38(%rsp),%rcx
9c94(9): xor $0x28,%rcx
9c9d(2): jnz 0xc(%rip)
9c9f(4): add $0x48,%rsp
9ca3(1): ret near (%rsp)
9ca4(5): call 0xffff7e5c(%rip)
9ca9(5): call 0xffff7f67(%rip)

"quotearg_n_custom_mem" :
9cb0(4): sub $0x48,%rsp
9cb4(3): mov %rcx,%r9
9cb7(7): mov 0x2065b2(%rip),%rcx
9cbe(8): movdqa 0x20657a(%rip),%xmm0
9cc6(9): mov $0x28,%rax
9ccf(5): mov %rax,0x38(%rsp)
9cd4(2): xor %eax,%eax
9cd6(4): movaps %xmm0,(%rsp)
9cda(3): test %rsi,%rsi
9cdd(5): mov %rcx,0x30(%rsp)
9ce2(7): mov $0xa,(%rsp)
9ce9(8): movdqa 0x20655f(%rip),%xmm0
9cf1(5): movaps %xmm0,0x10(%rsp)
9cf6(8): movdqa 0x206562(%rip),%xmm0
9cfe(5): movaps %xmm0,0x20(%rsp)
9d03(2): jz 0x34(%rip)
9d05(3): test %rdx,%rdx
9d08(2): jz 0x2f(%rip)
9d0a(5): mov %rsi,0x28(%rsp)
9d0f(5): mov %rdx,0x30(%rsp)
9d14(3): mov %rsp,%rcx
9d17(3): mov %r8,%rdx
9d1a(3): mov %r9,%rsi
9d1d(5): call 0xfffff793(%rip)
9d22(5): mov 0x38(%rsp),%rdi
9d27(9): xor $0x28,%rdi
9d30(2): jnz 0xc(%rip)
9d32(4): add $0x48,%rsp
9d36(1): ret near (%rsp)
9d37(5): call 0xffff7dc9(%rip)
9d3c(5): call 0xffff7ed4(%rip)

"quotearg_n_custom" :
9d50(7): mov $0xffffffff,%r8
9d57(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
9d60(3): mov %rdx,%rcx
9d63(7): mov $0xffffffff,%r8
9d6a(3): mov %rsi,%rdx
9d6d(3): mov %rdi,%rsi
9d70(2): xor %edi,%edi
9d72(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
9d80(3): mov %rcx,%r8
9d83(3): mov %rdx,%rcx
9d86(3): mov %rsi,%rdx
9d89(3): mov %rdi,%rsi
9d8c(2): xor %edi,%edi
9d8e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
9da0(7): lea 0x2062b9(%rip),%rcx
9da7(5): jmp 0xfffff709(%rip)

"quote_mem" :
9db0(7): lea 0x2062a9(%rip),%rcx
9db7(3): mov %rsi,%rdx
9dba(3): mov %rdi,%rsi
9dbd(2): xor %edi,%edi
9dbf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
9dd0(7): lea 0x206289(%rip),%rcx
9dd7(7): mov $0xffffffff,%rdx
9dde(5): jmp 0xfffff6d2(%rip)

"quote" :
9df0(7): lea 0x206269(%rip),%rcx
9df7(3): mov %rdi,%rsi
9dfa(7): mov $0xffffffff,%rdx
9e01(2): xor %edi,%edi
9e03(5): jmp 0xfffff6ad(%rip)

"safe_read" :
9e10(2): push %r13
9e12(2): push %r12
9e14(3): mov %edi,%r13d
9e17(1): push %rbp
9e18(1): push %rbx
9e19(3): mov %rsi,%r12
9e1c(3): mov %rdx,%rbx
9e1f(4): sub $0x8,%rsp
9e23(5): nop 0x0(%rax,%rax,1)
9e28(3): mov %rbx,%rdx
9e2b(3): mov %r12,%rsi
9e2e(3): mov %r13d,%edi
9e31(5): call 0xffff7ecf(%rip)
9e36(3): test %rax,%rax
9e39(3): mov %rax,%rbp
9e3c(2): jns 0x24(%rip)
9e3e(5): call 0xffff7cd2(%rip)
9e43(2): mov (%rax),%eax
9e45(3): cmp $0x4,%eax
9e48(2): jz 0xffffffe0(%rip)
9e4a(7): cmp $0x7ff00000,%rbx
9e51(2): jbe 0xf(%rip)
9e53(3): cmp $0x16,%eax
9e56(2): jnz 0xa(%rip)
9e58(5): mov $0x7ff00000,%ebx
9e5d(2): jmp 0xffffffcb(%rip)
9e5f(1): nop 
9e60(4): add $0x8,%rsp
9e64(3): mov %rbp,%rax
9e67(1): pop %rbx
9e68(1): pop %rbp
9e69(2): pop %r12
9e6b(2): pop %r13
9e6d(1): ret near (%rsp)

"fd_safer" :
9e70(2): push %r13
9e72(2): push %r12
9e74(1): push %rbp
9e75(1): push %rbx
9e76(2): mov %edi,%ebx
9e78(4): sub $0x8,%rsp
9e7c(3): cmp $0x2,%edi
9e7f(2): jnbe 0x23(%rip)
9e81(5): call 0x15af(%rip)
9e86(3): mov %eax,%r12d
9e89(5): call 0xffff7c87(%rip)
9e8e(3): mov (%rax),%r13d
9e91(3): mov %rax,%rbp
9e94(2): mov %ebx,%edi
9e96(5): call 0xffff7e4a(%rip)
9e9b(3): mov %r12d,%ebx
9e9e(4): mov %r13d,0x0(%rbp)
9ea2(4): add $0x8,%rsp
9ea6(2): mov %ebx,%eax
9ea8(1): pop %rbx
9ea9(1): pop %rbp
9eaa(2): pop %r12
9eac(2): pop %r13
9eae(1): ret near (%rsp)

"version_etc_arn" :
9eb0(2): push %r15
9eb2(2): push %r14
9eb4(2): push %r13
9eb6(2): push %r12
9eb8(3): mov %r9,%r12
9ebb(1): push %rbp
9ebc(1): push %rbx
9ebd(3): mov %rdi,%rbp
9ec0(3): mov %r8,%rbx
9ec3(4): sub $0x28,%rsp
9ec7(3): test %rsi,%rsi
9eca(6): jz 0x11e(%rip)
9ed0(3): mov %rdx,%r8
9ed3(7): lea 0x30ce(%rip),%rdx
9eda(3): mov %rcx,%r9
9edd(2): xor %eax,%eax
9edf(3): mov %rsi,%rcx
9ee2(5): mov $0x1,%esi
9ee7(5): call 0xffff7ff9(%rip)
9eec(7): lea 0x30c8(%rip),%rsi
9ef3(2): xor %edi,%edi
9ef5(5): mov $0x5,%edx
9efa(5): call 0xffff7cd6(%rip)
9eff(7): lea 0x33da(%rip),%rdx
9f06(3): mov %rax,%rcx
9f09(6): mov $0x7e3,%r8d
9f0f(5): mov $0x1,%esi
9f14(3): mov %rbp,%rdi
9f17(2): xor %eax,%eax
9f19(5): call 0xffff7fc7(%rip)
9f1e(7): lea 0x3123(%rip),%rsi
9f25(2): xor %edi,%edi
9f27(5): mov $0x5,%edx
9f2c(5): call 0xffff7ca4(%rip)
9f31(3): mov %rbp,%rsi
9f34(3): mov %rax,%rdi
9f37(5): call 0xffff7de9(%rip)
9f3c(4): cmp $0x9,%r12
9f40(6): jnbe 0x340(%rip)
9f46(7): lea 0x3357(%rip),%rdx
9f4d(4): movsxd 0x0(%rdx,%r12,4),%rax
9f51(3): add %rdx,%rax
9f54(2): jmp %rax
9f56(a): nop 0x0(%rax,%rax,1)
9f60(4): mov 0x38(%rbx),%r9
9f64(4): mov 0x10(%rbx),%rax
9f68(7): lea 0x3249(%rip),%rsi
9f6f(4): mov 0x8(%rbx),%r8
9f73(5): mov $0x5,%edx
9f78(2): xor %edi,%edi
9f7a(4): mov 0x30(%rbx),%r13
9f7e(4): mov 0x28(%rbx),%r12
9f82(5): mov %r9,0x10(%rsp)
9f87(4): mov 0x20(%rbx),%r15
9f8b(4): mov 0x18(%rbx),%r14
9f8f(4): mov %rax,(%rsp)
9f93(5): mov %r8,0x8(%rsp)
9f98(3): mov (%rbx),%rbx
9f9b(5): call 0xffff7c35(%rip)
9fa0(4): sub $0x8,%rsp
9fa4(5): mov 0x18(%rsp),%r9
9fa9(3): mov %rax,%rdx
9fac(3): mov %rbx,%rcx
9faf(5): mov $0x1,%esi
9fb4(3): mov %rbp,%rdi
9fb7(2): xor %eax,%eax
9fb9(2): push %r9
9fbb(2): push %r13
9fbd(2): push %r12
9fbf(2): push %r15
9fc1(2): push %r14
9fc3(5): mov 0x30(%rsp),%r9
9fc8(5): mov 0x38(%rsp),%r8
9fcd(5): call 0xffff7f13(%rip)
9fd2(4): add $0x30,%rsp
9fd6(4): add $0x28,%rsp
9fda(1): pop %rbx
9fdb(1): pop %rbp
9fdc(2): pop %r12
9fde(2): pop %r13
9fe0(2): pop %r14
9fe2(2): pop %r15
9fe4(1): ret near (%rsp)
9fe5(3): nop (%rax)
9fe8(3): mov %rcx,%r8
9feb(3): mov %rdx,%rcx
9fee(7): lea 0x2fbf(%rip),%rdx
9ff5(5): mov $0x1,%esi
9ffa(2): xor %eax,%eax
9ffc(5): call 0xffff7ee4(%rip)
a001(5): jmp 0xfffffeeb(%rip)
a006(a): nop 0x0(%rax,%rax,1)
a010(4): mov 0x40(%rbx),%r10
a014(4): mov 0x38(%rbx),%r9
a018(7): lea 0x31c9(%rip),%rsi
a01f(4): mov 0x10(%rbx),%rax
a023(4): mov 0x8(%rbx),%r8
a027(5): mov $0x5,%edx
a02c(4): mov 0x30(%rbx),%r13
a030(4): mov 0x28(%rbx),%r12
a034(4): mov 0x20(%rbx),%r15
a038(4): mov 0x18(%rbx),%r14
a03c(3): mov (%rbx),%rbx
a03f(5): mov %r10,0x18(%rsp)
a044(5): mov %r9,0x10(%rsp)
a049(4): mov %rax,(%rsp)
a04d(5): mov %r8,0x8(%rsp)
a052(2): xor %edi,%edi
a054(5): call 0xffff7b7c(%rip)
a059(5): mov 0x18(%rsp),%r10
a05e(2): push %r10
a060(5): jmp 0xffffff44(%rip)
a065(3): nop (%rax)
a068(3): mov (%rbx),%rbx
a06b(7): lea 0x2f4d(%rip),%rsi
a072(5): mov $0x5,%edx
a077(2): xor %edi,%edi
a079(5): call 0xffff7b57(%rip)
a07e(4): add $0x28,%rsp
a082(3): mov %rbx,%rcx
a085(3): mov %rbp,%rdi
a088(1): pop %rbx
a089(1): pop %rbp
a08a(2): pop %r12
a08c(2): pop %r13
a08e(2): pop %r14
a090(2): pop %r15
a092(3): mov %rax,%rdx
a095(5): mov $0x1,%esi
a09a(2): xor %eax,%eax
a09c(5): jmp 0xffff7e44(%rip)
a0a1(7): nop 0x0(%rax)
a0a8(4): mov 0x8(%rbx),%r12
a0ac(7): lea 0x2f1c(%rip),%rsi
a0b3(3): mov (%rbx),%rbx
a0b6(5): mov $0x5,%edx
a0bb(2): xor %edi,%edi
a0bd(5): call 0xffff7b13(%rip)
a0c2(4): add $0x28,%rsp
a0c6(3): mov %r12,%r8
a0c9(3): mov %rbx,%rcx
a0cc(3): mov %rbp,%rdi
a0cf(3): mov %rax,%rdx
a0d2(5): mov $0x1,%esi
a0d7(1): pop %rbx
a0d8(1): pop %rbp
a0d9(2): pop %r12
a0db(2): pop %r13
a0dd(2): pop %r14
a0df(2): pop %r15
a0e1(2): xor %eax,%eax
a0e3(5): jmp 0xffff7dfd(%rip)
a0e8(8): nop 0x0(%rax,%rax,1)
a0f0(4): mov 0x10(%rbx),%r13
a0f4(4): mov 0x8(%rbx),%r12
a0f8(7): lea 0x2ee7(%rip),%rsi
a0ff(3): mov (%rbx),%rbx
a102(5): mov $0x5,%edx
a107(2): xor %edi,%edi
a109(5): call 0xffff7ac7(%rip)
a10e(4): add $0x28,%rsp
a112(3): mov %r13,%r9
a115(3): mov %r12,%r8
a118(3): mov %rbx,%rcx
a11b(3): mov %rbp,%rdi
a11e(3): mov %rax,%rdx
a121(1): pop %rbx
a122(1): pop %rbp
a123(2): pop %r12
a125(2): pop %r13
a127(2): pop %r14
a129(2): pop %r15
a12b(5): mov $0x1,%esi
a130(2): xor %eax,%eax
a132(5): jmp 0xffff7dae(%rip)
a137(9): nop 0x0(%rax,%rax,1)
a140(7): lea 0x2fd1(%rip),%rsi
a147(5): mov $0x5,%edx
a14c(2): xor %edi,%edi
a14e(4): mov 0x18(%rbx),%r14
a152(4): mov 0x10(%rbx),%r13
a156(4): mov 0x8(%rbx),%r12
a15a(3): mov (%rbx),%rbx
a15d(5): call 0xffff7a73(%rip)
a162(4): sub $0x8,%rsp
a166(2): push %r14
a168(3): mov %rax,%rdx
a16b(3): mov %r13,%r9
a16e(3): mov %r12,%r8
a171(3): mov %rbx,%rcx
a174(3): mov %rbp,%rdi
a177(5): mov $0x1,%esi
a17c(2): xor %eax,%eax
a17e(5): call 0xffff7d62(%rip)
a183(1): pop %rax
a184(1): pop %rdx
a185(4): add $0x28,%rsp
a189(1): pop %rbx
a18a(1): pop %rbp
a18b(2): pop %r12
a18d(2): pop %r13
a18f(2): pop %r14
a191(2): pop %r15
a193(1): ret near (%rsp)
a194(4): nop 0x0(%rax)
a198(4): mov 0x20(%rbx),%r15
a19c(7): lea 0x2f95(%rip),%rsi
a1a3(5): mov $0x5,%edx
a1a8(2): xor %edi,%edi
a1aa(4): mov 0x18(%rbx),%r14
a1ae(4): mov 0x10(%rbx),%r13
a1b2(4): mov 0x8(%rbx),%r12
a1b6(3): mov (%rbx),%rbx
a1b9(5): call 0xffff7a17(%rip)
a1be(2): push %r15
a1c0(2): jmp 0xffffffa6(%rip)
a1c2(6): nop 0x0(%rax,%rax,1)
a1c8(4): mov 0x8(%rbx),%r8
a1cc(4): mov 0x28(%rbx),%r12
a1d0(7): lea 0x2f89(%rip),%rsi
a1d7(4): mov 0x20(%rbx),%r15
a1db(4): mov 0x18(%rbx),%r14
a1df(5): mov $0x5,%edx
a1e4(4): mov 0x10(%rbx),%r13
a1e8(2): xor %edi,%edi
a1ea(3): mov (%rbx),%rbx
a1ed(4): mov %r8,(%rsp)
a1f1(5): call 0xffff79df(%rip)
a1f6(4): sub $0x8,%rsp
a1fa(3): mov %r13,%r9
a1fd(2): push %r12
a1ff(2): push %r15
a201(2): push %r14
a203(5): mov 0x20(%rsp),%r8
a208(3): mov %rbx,%rcx
a20b(3): mov %rax,%rdx
a20e(3): mov %rbp,%rdi
a211(5): mov $0x1,%esi
a216(2): xor %eax,%eax
a218(5): call 0xffff7cc8(%rip)
a21d(4): add $0x20,%rsp
a221(4): add $0x28,%rsp
a225(1): pop %rbx
a226(1): pop %rbp
a227(2): pop %r12
a229(2): pop %r13
a22b(2): pop %r14
a22d(2): pop %r15
a22f(1): ret near (%rsp)
a230(4): mov 0x10(%rbx),%r9
a234(4): mov 0x30(%rbx),%r13
a238(7): lea 0x2f49(%rip),%rsi
a23f(4): mov 0x28(%rbx),%r12
a243(4): mov 0x20(%rbx),%r15
a247(5): mov $0x5,%edx
a24c(4): mov 0x18(%rbx),%r14
a250(4): mov 0x8(%rbx),%r8
a254(2): xor %edi,%edi
a256(5): mov %r9,0x8(%rsp)
a25b(3): mov (%rbx),%rbx
a25e(4): mov %r8,(%rsp)
a262(5): call 0xffff796e(%rip)
a267(2): push %r13
a269(2): push %r12
a26b(2): push %r15
a26d(2): push %r14
a26f(5): mov 0x28(%rsp),%r9
a274(2): jmp 0xffffff8f(%rip)
a276(a): nop 0x0(%rax,%rax,1)
a280(4): mov 0x40(%rbx),%r10
a284(4): mov 0x38(%rbx),%r9
a288(5): mov $0x5,%edx
a28d(4): mov 0x10(%rbx),%rax
a291(4): mov 0x8(%rbx),%r8
a295(7): lea 0x2f84(%rip),%rsi
a29c(4): mov 0x30(%rbx),%r13
a2a0(4): mov 0x28(%rbx),%r12
a2a4(4): mov 0x20(%rbx),%r15
a2a8(4): mov 0x18(%rbx),%r14
a2ac(5): mov %r10,0x18(%rsp)
a2b1(5): mov %r9,0x10(%rsp)
a2b6(4): mov %rax,(%rsp)
a2ba(5): mov %r8,0x8(%rsp)
a2bf(3): mov (%rbx),%rbx
a2c2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
a2d0(3): xor %r9d,%r9d
a2d3(4): cmp $0x0,(%r8)
a2d7(2): jz 0x14(%rip)
a2d9(7): nop 0x0(%rax)
a2e0(4): add $0x1,%r9
a2e4(5): cmp $0x0,0x0(%r8,%r9,8)
a2e9(2): jnz 0xfffffff7(%rip)
a2eb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
a2f0(4): sub $0x68,%rsp
a2f4(3): mov %r8,%r10
a2f7(3): xor %r9d,%r9d
a2fa(9): mov $0x28,%rax
a303(5): mov %rax,0x58(%rsp)
a308(2): xor %eax,%eax
a30a(3): mov %rsp,%r8
a30d(3): nop (%rax)
a310(3): mov (%r10),%eax
a313(3): cmp $0x2f,%eax
a316(2): jnbe 0x44(%rip)
a318(3): mov %eax,%r11d
a31b(4): add 0x10(%r10),%r11
a31f(3): add $0x8,%eax
a322(3): mov %eax,(%r10)
a325(3): mov (%r11),%rax
a328(3): test %rax,%rax
a32b(4): mov %rax,0x0(%r8,%r9,8)
a32f(2): jz 0xc(%rip)
a331(4): add $0x1,%r9
a335(4): cmp $0xa,%r9
a339(2): jnz 0xffffffd7(%rip)
a33b(5): call 0xfffffb75(%rip)
a340(5): mov 0x58(%rsp),%rax
a345(9): xor $0x28,%rax
a34e(2): jnz 0x7(%rip)
a350(4): add $0x68,%rsp
a354(1): ret near (%rsp)
a355(5): call 0xffff78bb(%rip)
a35a(4): mov 0x8(%r10),%r11
a35e(4): lea 0x8(%r11),%rax
a362(4): mov %rax,0x8(%r10)
a366(2): jmp 0xffffffbf(%rip)

"version_etc" :
a370(1): push %rbp
a371(1): push %rbx
a372(6): mov $0x20,%r10d
a378(3): xor %r11d,%r11d
a37b(7): sub $0xb8,%rsp
a382(9): mov $0x28,%rax
a38b(5): mov %rax,0x78(%rsp)
a390(2): xor %eax,%eax
a392(8): lea 0xd0(%rsp),%rax
a39a(8): mov %r8,0xa0(%rsp)
a3a2(8): lea 0xd0(%rsp),%rbx
a3aa(5): lea 0x20(%rsp),%r8
a3af(8): mov %r9,0xa8(%rsp)
a3b7(8): mov $0x20,0x8(%rsp)
a3bf(5): mov %rax,0x10(%rsp)
a3c4(8): lea 0x80(%rsp),%rax
a3cc(3): xor %r9d,%r9d
a3cf(5): mov %rax,0x18(%rsp)
a3d4(3): mov %rax,%rbp
a3d7(9): nop 0x0(%rax,%rax,1)
a3e0(4): cmp $0x2f,%r10d
a3e4(2): jnbe 0x58(%rip)
a3e6(3): mov %r10d,%eax
a3e9(6): mov $0x1,%r11d
a3ef(4): add $0x8,%r10d
a3f3(3): add %rbp,%rax
a3f6(3): mov (%rax),%rax
a3f9(3): test %rax,%rax
a3fc(4): mov %rax,0x0(%r8,%r9,8)
a400(2): jz 0xc(%rip)
a402(4): add $0x1,%r9
a406(4): cmp $0xa,%r9
a40a(2): jnz 0xffffffd6(%rip)
a40c(3): test %r11b,%r11b
a40f(2): jnz 0x26(%rip)
a411(5): call 0xfffffa9f(%rip)
a416(5): mov 0x78(%rsp),%rax
a41b(9): xor $0x28,%rax
a424(2): jnz 0xc(%rip)
a426(7): add $0xb8,%rsp
a42d(1): pop %rbx
a42e(1): pop %rbp
a42f(1): ret near (%rsp)
a430(5): call 0xffff77e0(%rip)
a435(5): mov %r10d,0x8(%rsp)
a43a(2): jmp 0xffffffd7(%rip)
a43c(3): mov %rbx,%rax
a43f(4): add $0x8,%rbx
a443(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
a450(1): push %rbx
a451(7): lea 0x2baa(%rip),%rsi
a458(5): mov $0x5,%edx
a45d(2): xor %edi,%edi
a45f(5): call 0xffff7771(%rip)
a464(7): lea 0x2bac(%rip),%rdx
a46b(3): mov %rax,%rsi
a46e(5): mov $0x1,%edi
a473(2): xor %eax,%eax
a475(5): call 0xffff79db(%rip)
a47a(7): lea 0x2bac(%rip),%rsi
a481(5): mov $0x5,%edx
a486(2): xor %edi,%edi
a488(5): call 0xffff7748(%rip)
a48d(7): lea 0x2164(%rip),%rcx
a494(7): lea 0x130c(%rip),%rdx
a49b(3): mov %rax,%rsi
a49e(5): mov $0x1,%edi
a4a3(2): xor %eax,%eax
a4a5(5): call 0xffff79ab(%rip)
a4aa(7): mov 0x205c17(%rip),%rbx
a4b1(7): lea 0x2da8(%rip),%rsi
a4b8(2): xor %edi,%edi
a4ba(5): mov $0x5,%edx
a4bf(5): call 0xffff7711(%rip)
a4c4(3): mov %rbx,%rsi
a4c7(3): mov %rax,%rdi
a4ca(1): pop %rbx
a4cb(5): jmp 0xffff7855(%rip)

"xmalloc" :
a4d0(1): push %rbx
a4d1(3): mov %rdi,%rbx
a4d4(5): call 0xffff78ec(%rip)
a4d9(3): test %rax,%rax
a4dc(2): jnz 0x7(%rip)
a4de(3): test %rbx,%rbx
a4e1(2): jnz 0x4(%rip)
a4e3(1): pop %rbx
a4e4(1): ret near (%rsp)
a4e5(5): call 0x23b(%rip)

"xnmalloc" :
a4f0(3): mov %rdi,%rax
a4f3(3): mul %rax,%rsi,%rdx
a4f6(3): mov %rax,%rdi
a4f9(3): seto %al
a4fc(3): test %rdi,%rdi
a4ff(2): js 0xc(%rip)
a501(3): movzx %al,%eax
a504(3): test %rax,%rax
a507(2): jnz 0x4(%rip)
a509(2): jmp 0xffffffc7(%rip)
a50b(4): sub $0x8,%rsp
a50f(5): call 0x211(%rip)

"xrealloc" :
a530(3): test %rsi,%rsi
a533(1): push %rbx
a534(3): mov %rsi,%rbx
a537(2): jnz 0x7(%rip)
a539(3): test %rdi,%rdi
a53c(2): jnz 0x1c(%rip)
a53e(3): mov %rbx,%rsi
a541(5): call 0xffff78ef(%rip)
a546(3): test %rax,%rax
a549(2): jnz 0x7(%rip)
a54b(3): test %rbx,%rbx
a54e(2): jnz 0x13(%rip)
a550(1): pop %rbx
a551(1): ret near (%rsp)
a552(6): nop 0x0(%rax,%rax,1)
a558(5): call 0xffff7598(%rip)
a55d(2): xor %eax,%eax
a55f(1): pop %rbx
a560(1): ret near (%rsp)
a561(5): call 0x1bf(%rip)

"xnrealloc" :
a570(3): mov %rsi,%rax
a573(3): mul %rax,%rdx,%rdx
a576(3): mov %rax,%rsi
a579(3): seto %al
a57c(3): test %rsi,%rsi
a57f(2): js 0xc(%rip)
a581(3): movzx %al,%eax
a584(3): test %rax,%rax
a587(2): jnz 0x4(%rip)
a589(2): jmp 0xffffffa7(%rip)
a58b(4): sub $0x8,%rsp
a58f(5): call 0x191(%rip)

"x2nrealloc" :
a5a0(3): test %rdi,%rdi
a5a3(3): mov %rdx,%r9
a5a6(3): mov (%rsi),%rcx
a5a9(2): jz 0x37(%rip)
a5ab(2): xor %edx,%edx
a5ad(a): mov $0x6148914691236517204,%rax
a5b7(3): div %r9,%rax
a5ba(3): cmp %rcx,%rax
a5bd(2): jbe 0x3e(%rip)
a5bf(3): mov %rcx,%rax
a5c2(3): shr $0x1,%rax
a5c5(5): lea 0x1(%rax,%rcx,1),%rcx
a5ca(3): mov %rcx,(%rsi)
a5cd(4): imul %r9,%rcx
a5d1(3): mov %rcx,%rsi
a5d4(5): jmp 0xffffff5c(%rip)
a5d9(7): nop 0x0(%rax)
a5e0(3): test %rcx,%rcx
a5e3(2): jz 0x25(%rip)
a5e5(3): mov %rcx,%rax
a5e8(3): mul %rax,%r9,%rdx
a5eb(3): seto %dl
a5ee(3): test %rax,%rax
a5f1(3): movzx %dl,%edx
a5f4(2): js 0x7(%rip)
a5f6(3): test %rdx,%rdx
a5f9(2): jz 0xffffffd1(%rip)
a5fb(4): sub $0x8,%rsp
a5ff(5): call 0x121(%rip)
a604(4): nop 0x0(%rax)
a608(2): xor %edx,%edx
a60a(5): mov $0x80,%eax
a60f(3): xor %r8d,%r8d
a612(3): div %r9,%rax
a615(3): test %rax,%rax
a618(4): setz %r8b
a61c(4): lea 0x0(%r8,%rax,1),%rcx
a620(2): jmp 0xffffffc5(%rip)

"x2realloc" :
a630(3): test %rdi,%rdi
a633(3): mov (%rsi),%rax
a636(2): jz 0x2a(%rip)
a638(a): mov $0x6148914691236517203,%rdx
a642(3): cmp %rdx,%rax
a645(2): jnbe 0x2c(%rip)
a647(3): mov %rax,%rdx
a64a(3): shr $0x1,%rdx
a64d(5): lea 0x1(%rdx,%rax,1),%rax
a652(3): mov %rax,(%rsi)
a655(3): mov %rax,%rsi
a658(5): jmp 0xfffffed8(%rip)
a65d(3): nop (%rax)
a660(3): test %rax,%rax
a663(5): mov $0x80,%edx
a668(4): cmove %rdx,%rax
a66c(3): test %rax,%rax
a66f(2): jns 0xffffffe3(%rip)
a671(4): sub $0x8,%rsp
a675(5): call 0xab(%rip)

"xzalloc" :
a680(1): push %rbx
a681(3): mov %rdi,%rbx
a684(5): call 0xfffffe4c(%rip)
a689(3): mov %rbx,%rdx
a68c(2): xor %esi,%esi
a68e(3): mov %rax,%rdi
a691(1): pop %rbx
a692(5): jmp 0xffff763e(%rip)

"xcalloc" :
a6a0(3): mov %rdi,%rax
a6a3(4): sub $0x8,%rsp
a6a7(3): mul %rax,%rsi,%rdx
a6aa(3): seto %dl
a6ad(3): test %rax,%rax
a6b0(2): js 0x19(%rip)
a6b2(3): movzx %dl,%edx
a6b5(3): test %rdx,%rdx
a6b8(2): jnz 0x11(%rip)
a6ba(5): call 0xffff7676(%rip)
a6bf(3): test %rax,%rax
a6c2(2): jz 0x7(%rip)
a6c4(4): add $0x8,%rsp
a6c8(1): ret near (%rsp)
a6c9(5): call 0x57(%rip)

"xmemdup" :
a6d0(1): push %rbp
a6d1(1): push %rbx
a6d2(3): mov %rdi,%rbp
a6d5(3): mov %rsi,%rdi
a6d8(3): mov %rsi,%rbx
a6db(4): sub $0x8,%rsp
a6df(5): call 0xfffffdf1(%rip)
a6e4(4): add $0x8,%rsp
a6e8(3): mov %rbx,%rdx
a6eb(3): mov %rbp,%rsi
a6ee(1): pop %rbx
a6ef(1): pop %rbp
a6f0(3): mov %rax,%rdi
a6f3(5): jmp 0xffff766d(%rip)

"xstrdup" :
a700(1): push %rbx
a701(3): mov %rdi,%rbx
a704(5): call 0xffff74ec(%rip)
a709(3): mov %rbx,%rdi
a70c(4): lea 0x1(%rax),%rsi
a710(1): pop %rbx
a711(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
a720(7): lea 0x2be8(%rip),%rsi
a727(4): sub $0x8,%rsp
a72b(5): mov $0x5,%edx
a730(2): xor %edi,%edi
a732(5): call 0xffff749e(%rip)
a737(6): mov 0x205903(%rip),%edi
a73d(7): lea 0x2288(%rip),%rdx
a744(3): mov %rax,%rcx
a747(2): xor %esi,%esi
a749(2): xor %eax,%eax
a74b(5): call 0xffff7715(%rip)
a750(5): call 0xffff73b0(%rip)

"xnumtoumax" :
a760(2): push %r15
a762(2): push %r14
a764(3): mov %rcx,%r15
a767(2): push %r13
a769(2): push %r12
a76b(3): mov %rdx,%r14
a76e(1): push %rbp
a76f(1): push %rbx
a770(2): mov %esi,%edx
a772(2): xor %esi,%esi
a774(3): mov %rdi,%r12
a777(3): mov %r9,%r13
a77a(4): sub $0x18,%rsp
a77e(3): mov %rsp,%rcx
a781(4): mov 0x50(%rsp),%ebx
a785(9): mov $0x28,%rax
a78e(5): mov %rax,0x8(%rsp)
a793(2): xor %eax,%eax
a795(5): call 0x24b(%rip)
a79a(2): test %eax,%eax
a79c(6): jnz 0x94(%rip)
a7a2(4): mov (%rsp),%rbp
a7a6(3): cmp %r14,%rbp
a7a9(2): jb 0x7(%rip)
a7ab(3): cmp %r15,%rbp
a7ae(2): jbe 0x56(%rip)
a7b0(5): call 0xffff7360(%rip)
a7b5(7): cmp $0x40000000,%rbp
a7bc(3): mov %rax,%r14
a7bf(2): sbb %eax,%eax
a7c1(3): and $0xd7,%eax
a7c4(3): add $0x4b,%eax
a7c7(3): mov %eax,(%r14)
a7ca(3): mov %r12,%rdi
a7cd(5): call 0xfffff623(%rip)
a7d2(3): mov (%r14),%esi
a7d5(3): mov %rax,%r8
a7d8(5): mov $0x0,%eax
a7dd(7): lea 0x101e(%rip),%rdx
a7e4(3): mov %r13,%rcx
a7e7(3): cmp $0x16,%esi
a7ea(3): cmove %eax,%esi
a7ed(2): test %ebx,%ebx
a7ef(5): mov $0x1,%eax
a7f4(3): cmove %eax,%ebx
a7f7(2): xor %eax,%eax
a7f9(2): mov %ebx,%edi
a7fb(5): call 0xffff7665(%rip)
a800(4): mov (%rsp),%rbp
a804(5): mov 0x8(%rsp),%rdx
a809(9): xor $0x28,%rdx
a812(3): mov %rbp,%rax
a815(2): jnz 0x46(%rip)
a817(4): add $0x18,%rsp
a81b(1): pop %rbx
a81c(1): pop %rbp
a81d(2): pop %r12
a81f(2): pop %r13
a821(2): pop %r14
a823(2): pop %r15
a825(1): ret near (%rsp)
a826(a): nop 0x0(%rax,%rax,1)
a830(2): mov %eax,%ebp
a832(5): call 0xffff72de(%rip)
a837(3): cmp $0x1,%ebp
a83a(3): mov %rax,%r14
a83d(2): jz 0x13(%rip)
a83f(3): cmp $0x3,%ebp
a842(2): jnz 0xffffff88(%rip)
a844(6): mov $0x0,(%rax)
a84a(5): jmp 0xffffff80(%rip)
a84f(1): nop 
a850(6): mov $0x4b,(%rax)
a856(5): jmp 0xffffff74(%rip)
a85b(5): call 0xffff73b5(%rip)

"xdectoumax" :
a860(4): sub $0x10,%rsp
a864(2): push %r9
a866(3): mov %r8,%r9
a869(3): mov %rcx,%r8
a86c(3): mov %rdx,%rcx
a86f(3): mov %rsi,%rdx
a872(5): mov $0xa,%esi
a877(5): call 0xfffffee9(%rip)
a87c(4): add $0x18,%rsp
a880(1): ret near (%rsp)

"xnanosleep" :
a890(1): push %rbp
a891(1): push %rbx
a892(4): sub $0x28,%rsp
a896(9): mov $0x28,%rax
a89f(5): mov %rax,0x18(%rsp)
a8a4(2): xor %eax,%eax
a8a6(3): mov %rsp,%rbp
a8a9(5): call 0xa27(%rip)
a8ae(4): mov %rax,(%rsp)
a8b2(5): mov %rdx,0x8(%rsp)
a8b7(5): call 0xffff7259(%rip)
a8bc(3): mov %rax,%rbx
a8bf(2): jmp 0x11(%rip)
a8c1(7): nop 0x0(%rax)
a8c8(6): test $0xfffffffb,(%rbx)
a8ce(2): jnz 0x32(%rip)
a8d0(2): xor %esi,%esi
a8d2(6): mov $0x0,(%rbx)
a8d8(3): mov %rbp,%rdi
a8db(5): call 0x835(%rip)
a8e0(2): test %eax,%eax
a8e2(2): jnz 0xffffffe6(%rip)
a8e4(5): mov 0x18(%rsp),%rdx
a8e9(9): xor $0x28,%rdx
a8f2(2): jnz 0x15(%rip)
a8f4(4): add $0x28,%rsp
a8f8(1): pop %rbx
a8f9(1): pop %rbp
a8fa(1): ret near (%rsp)
a8fb(5): nop 0x0(%rax,%rax,1)
a900(5): mov $0xffffffff,%eax
a905(2): jmp 0xffffffdf(%rip)
a907(5): call 0xffff7309(%rip)

"xstrtod" :
a910(2): push %r14
a912(2): push %r13
a914(3): mov %rcx,%r14
a917(2): push %r12
a919(1): push %rbp
a91a(3): mov %rdi,%rbp
a91d(1): push %rbx
a91e(3): mov %rdx,%r13
a921(3): mov %rsi,%rbx
a924(4): sub $0x10,%rsp
a928(9): mov $0x28,%rax
a931(5): mov %rax,0x8(%rsp)
a936(2): xor %eax,%eax
a938(5): call 0xffff71d8(%rip)
a93d(3): mov %rsp,%rsi
a940(3): mov %rax,%r12
a943(6): mov $0x0,(%rax)
a949(3): mov %rbp,%rdi
a94c(3): call %r14
a94f(4): mov (%rsp),%rcx
a953(3): cmp %rbp,%rcx
a956(2): jz 0x72(%rip)
a958(3): test %rbx,%rbx
a95b(2): jz 0x4d(%rip)
a95d(8): ucomisd 0x29bb(%rip),%xmm0
a965(2): jp 0x9(%rip)
a967(5): mov $0x1,%eax
a96c(2): jz 0xf(%rip)
a96e(5): cmp $0x22,(%r12)
a973(3): setnz %al
a976(3): test %rbx,%rbx
a979(2): jz 0x5(%rip)
a97b(3): mov %rcx,(%rbx)
a97e(5): mov 0x8(%rsp),%rdx
a983(9): xor $0x28,%rdx
a98c(6): movsd %xmm0,0x0(%r13)
a992(2): jnz 0x3a(%rip)
a994(4): add $0x10,%rsp
a998(1): pop %rbx
a999(1): pop %rbp
a99a(2): pop %r12
a99c(2): pop %r13
a99e(2): pop %r14
a9a0(1): ret near (%rsp)
a9a1(7): nop 0x0(%rax)
a9a8(2): xor %eax,%eax
a9aa(3): cmp $0x0,(%rcx)
a9ad(2): jnz 0xffffffd1(%rip)
a9af(8): ucomisd 0x2969(%rip),%xmm0
a9b7(2): jp 0xffffffb7(%rip)
a9b9(2): jnz 0xffffffb5(%rip)
a9bb(5): mov $0x1,%eax
a9c0(2): jmp 0xffffffbe(%rip)
a9c2(6): nop 0x0(%rax,%rax,1)
a9c8(2): xor %eax,%eax
a9ca(2): jmp 0xffffffac(%rip)
a9cc(5): call 0xffff7244(%rip)

"xstrtoumax" :
a9e0(2): push %r15
a9e2(2): push %r14
a9e4(2): push %r13
a9e6(2): push %r12
a9e8(1): push %rbp
a9e9(1): push %rbx
a9ea(4): sub $0x28,%rsp
a9ee(9): mov $0x28,%rax
a9f7(5): mov %rax,0x18(%rsp)
a9fc(2): xor %eax,%eax
a9fe(3): cmp $0x24,%edx
aa01(6): jnbe 0x364(%rip)
aa07(5): lea 0x10(%rsp),%rax
aa0c(3): mov %rsi,%r15
aa0f(3): test %rsi,%rsi
aa12(3): mov %rdi,%rbp
aa15(4): mov %edx,0x8(%rsp)
aa19(3): mov %rcx,%r14
aa1c(3): mov %r8,%r13
aa1f(4): cmove %rax,%r15
aa23(5): call 0xffff70ed(%rip)
aa28(6): mov $0x0,(%rax)
aa2e(3): mov %rax,%r12
aa31(4): movzx 0x0(%rbp),%ebx
aa35(5): call 0xffff74fb(%rip)
aa3a(4): mov 0x8(%rsp),%edx
aa3e(3): mov (%rax),%rsi
aa41(3): mov %rbp,%rax
aa44(2): jmp 0x13(%rip)
aa46(a): nop 0x0(%rax,%rax,1)
aa50(4): add $0x1,%rax
aa54(3): movzx (%rax),%ebx
aa57(3): movzx %bl,%ecx
aa5a(5): test $0x20,0x1(%rsi,%rcx,2)
aa5f(2): jnz 0xfffffff1(%rip)
aa61(3): cmp $0x2d,%bl
aa64(2): jz 0x54(%rip)
aa66(2): xor %ecx,%ecx
aa68(3): mov %r15,%rsi
aa6b(3): mov %rbp,%rdi
aa6e(5): call 0xffff7252(%rip)
aa73(3): mov (%r15),%rcx
aa76(3): mov %rax,%rbx
aa79(3): cmp %rbp,%rcx
aa7c(2): jz 0x2c(%rip)
aa7e(4): mov (%r12),%eax
aa82(2): test %eax,%eax
aa84(2): jz 0x64(%rip)
aa86(3): cmp $0x22,%eax
aa89(5): mov $0x1,%ebp
aa8e(2): jnz 0x2a(%rip)
aa90(3): test %r13,%r13
aa93(2): jz 0xb(%rip)
aa95(4): movzx (%rcx),%r12d
aa99(3): test %r12b,%r12b
aa9c(2): jnz 0x7b(%rip)
aa9e(3): mov %rbx,(%r14)
aaa1(2): jmp 0x1c(%rip)
aaa3(5): nop 0x0(%rax,%rax,1)
aaa8(3): test %r13,%r13
aaab(5): mov %rcx,0x8(%rsp)
aab0(2): jnz 0x40(%rip)
aab2(6): nop 0x0(%rax,%rax,1)
aab8(5): mov $0x4,%ebp
aabd(5): mov 0x18(%rsp),%rdi
aac2(9): xor $0x28,%rdi
aacb(2): mov %ebp,%eax
aacd(6): jnz 0x293(%rip)
aad3(4): add $0x28,%rsp
aad7(1): pop %rbx
aad8(1): pop %rbp
aad9(2): pop %r12
aadb(2): pop %r13
aadd(2): pop %r14
aadf(2): pop %r15
aae1(1): ret near (%rsp)
aae2(6): nop 0x0(%rax,%rax,1)
aae8(2): xor %ebp,%ebp
aaea(2): jmp 0xffffffa6(%rip)
aaec(4): nop 0x0(%rax)
aaf0(5): movzx 0x0(%rbp),%r12d
aaf5(3): test %r12b,%r12b
aaf8(2): jz 0xffffffc0(%rip)
aafa(4): movsx %r12b,%esi
aafe(3): mov %r13,%rdi
ab01(2): xor %ebp,%ebp
ab03(5): call 0xffff713d(%rip)
ab08(3): test %rax,%rax
ab0b(5): mov $0x1,%ebx
ab10(5): mov 0x8(%rsp),%rcx
ab15(2): jz 0xffffffa3(%rip)
ab17(4): movsx %r12b,%esi
ab1b(3): mov %r13,%rdi
ab1e(5): mov %rcx,0x8(%rsp)
ab23(5): call 0xffff711d(%rip)
ab28(3): test %rax,%rax
ab2b(5): mov 0x8(%rsp),%rcx
ab30(6): jz 0xcc(%rip)
ab36(5): lea 0xffffffbb(%r12),%eax
ab3b(2): cmp $0x2f,%al
ab3d(2): jnbe 0x53(%rip)
ab3f(a): mov $0x142129060940101,%rdx
ab49(4): bt %rax,%rdx
ab4d(2): jnb 0x43(%rip)
ab4f(5): mov $0x30,%esi
ab54(3): mov %r13,%rdi
ab57(5): mov %rcx,0x8(%rsp)
ab5c(5): call 0xffff70e4(%rip)
ab61(3): test %rax,%rax
ab64(5): mov 0x8(%rsp),%rcx
ab69(2): jz 0x27(%rip)
ab6b(4): movzx 0x1(%rcx),%eax
ab6f(2): cmp $0x44,%al
ab71(2): jz 0xe(%rip)
ab73(2): cmp $0x69,%al
ab75(6): jz 0x1d3(%rip)
ab7b(2): cmp $0x42,%al
ab7d(2): jnz 0x13(%rip)
ab7f(5): mov $0x2,%edi
ab84(5): mov $0x3e8,%esi
ab89(2): jmp 0x11(%rip)
ab8b(5): nop 0x0(%rax,%rax,1)
ab90(5): mov $0x1,%edi
ab95(5): mov $0x400,%esi
ab9a(4): sub $0x42,%r12d
ab9e(4): cmp $0x35,%r12b
aba2(2): jnbe 0x5a(%rip)
aba4(7): lea 0x27c5(%rip),%rdx
abab(4): movzx %r12b,%r12d
abaf(4): movsxd 0x0(%rdx,%r12,4),%rax
abb3(3): add %rdx,%rax
abb6(2): jmp %rax
abb8(3): mov %rbx,%rax
abbb(3): mul %rax,%rsi,%rdx
abbe(6): jo 0x1f3(%rip)
abc4(3): xor %r8d,%r8d
abc7(3): mul %rax,%rsi,%rdx
abca(6): jo 0x1d8(%rip)
abd0(3): mov %rax,%rbx
abd3(3): or %r8d,%ebp
abd6(a): nop 0x0(%rax,%rax,1)
abe0(3): movsxd %edi,%rdi
abe3(2): mov %ebp,%eax
abe5(3): add %rdi,%rcx
abe8(3): or $0x2,%eax
abeb(3): mov %rcx,(%r15)
abee(3): cmp $0x0,(%rcx)
abf1(3): mov %rbx,(%r14)
abf4(3): cmovne %eax,%ebp
abf7(5): jmp 0xfffffec6(%rip)
abfc(3): mov %rbx,(%r14)
abff(3): or $0x2,%ebp
ac02(5): jmp 0xfffffebb(%rip)
ac07(5): mov $0x2,%edx
ac0c(3): mov %rdx,%rax
ac0f(3): mul %rax,%rbx,%rdx
ac12(6): jo 0x9c(%rip)
ac18(3): add %rbx,%rbx
ac1b(2): jmp 0xffffffc5(%rip)
ac1d(5): mov $0x200,%edx
ac22(3): mov %rdx,%rax
ac25(3): mul %rax,%rbx,%rdx
ac28(6): jo 0x86(%rip)
ac2e(4): shl/sal $0x9,%rbx
ac32(2): jmp 0xffffffae(%rip)
ac34(6): mov $0x7,%r8d
ac3a(3): xor %r9d,%r9d
ac3d(3): nop (%rax)
ac40(3): mov %rbx,%rax
ac43(3): mul %rax,%rsi,%rdx
ac46(3): mov %rax,%rbx
ac49(6): jo 0x195(%rip)
ac4f(4): sub $0x1,%r8d
ac53(2): jnz 0xffffffed(%rip)
ac55(3): or %r9d,%ebp
ac58(2): jmp 0xffffff88(%rip)
ac5a(6): mov $0x8,%r8d
ac60(3): xor %r9d,%r9d
ac63(5): nop 0x0(%rax,%rax,1)
ac68(3): mov %rbx,%rax
ac6b(3): mul %rax,%rsi,%rdx
ac6e(3): mov %rax,%rbx
ac71(6): jo 0x14f(%rip)
ac77(4): sub $0x1,%r8d
ac7b(2): jnz 0xffffffed(%rip)
ac7d(2): jmp 0xffffffd8(%rip)
ac7f(6): mov $0x4,%r8d
ac85(3): xor %r9d,%r9d
ac88(3): mov %rbx,%rax
ac8b(3): mul %rax,%rsi,%rdx
ac8e(3): mov %rax,%rbx
ac91(6): jo 0x102(%rip)
ac97(4): sub $0x1,%r8d
ac9b(2): jnz 0xffffffed(%rip)
ac9d(2): jmp 0xffffffb8(%rip)
ac9f(3): mov %rbx,%rax
aca2(3): mul %rax,%rsi,%rdx
aca5(3): mov %rax,%rbx
aca8(6): jno 0xffffff38(%rip)
acae(5): mov $0x1,%ebp
acb3(4): or $0xffffffff,%rbx
acb7(5): jmp 0xffffff29(%rip)
acbc(4): nop 0x0(%rax)
acc0(6): mov $0x5,%r8d
acc6(3): xor %r9d,%r9d
acc9(3): mov %rbx,%rax
accc(3): mul %rax,%rsi,%rdx
accf(3): mov %rax,%rbx
acd2(6): jo 0xfd(%rip)
acd8(4): sub $0x1,%r8d
acdc(2): jnz 0xffffffed(%rip)
acde(5): jmp 0xffffff77(%rip)
ace3(6): mov $0x6,%r8d
ace9(3): xor %r9d,%r9d
acec(3): mov %rbx,%rax
acef(3): mul %rax,%rsi,%rdx
acf2(3): mov %rax,%rbx
acf5(6): jo 0x8f(%rip)
acfb(4): sub $0x1,%r8d
acff(2): jnz 0xffffffed(%rip)
ad01(5): jmp 0xffffff54(%rip)
ad06(5): mov $0x400,%edx
ad0b(3): mov %rdx,%rax
ad0e(3): mul %rax,%rbx,%rdx
ad11(2): jo 0xffffff9d(%rip)
ad13(4): shl/sal $0xa,%rbx
ad17(5): jmp 0xfffffec9(%rip)
ad1c(3): mov %rbx,%rax
ad1f(3): mul %rax,%rsi,%rdx
ad22(6): jo 0xcb(%rip)
ad28(3): xor %r8d,%r8d
ad2b(3): mul %rax,%rsi,%rdx
ad2e(6): jno 0xfffffe99(%rip)
ad34(6): mov $0x1,%r8d
ad3a(4): or $0xffffffff,%rax
ad3e(5): jmp 0xfffffe89(%rip)
ad43(5): nop 0x0(%rax,%rax,1)
ad48(2): xor %edi,%edi
ad4a(4): cmp $0x42,0x2(%rcx)
ad4e(5): mov $0x400,%esi
ad53(4): setz %dil
ad57(4): lea 0x1(%rdi,%rdi,1),%edi
ad5b(5): jmp 0xfffffe3f(%rip)
ad60(5): call 0xffff6eb0(%rip)
ad65(7): lea 0x26dc(%rip),%rcx
ad6c(7): lea 0x25b5(%rip),%rsi
ad73(7): lea 0x25ce(%rip),%rdi
ad7a(5): mov $0x54,%edx
ad7f(5): call 0xffff6f31(%rip)
ad84(6): mov $0x1,%r9d
ad8a(4): or $0xffffffff,%rbx
ad8e(5): jmp 0xffffff6d(%rip)
ad93(6): mov $0x1,%r9d
ad99(4): or $0xffffffff,%rbx
ad9d(5): jmp 0xfffffefa(%rip)
ada2(6): mov $0x1,%r8d
ada8(4): or $0xffffffff,%rbx
adac(5): jmp 0xfffffe27(%rip)
adb1(4): or $0xffffffff,%rax
adb5(6): mov $0x1,%r8d
adbb(5): jmp 0xfffffe0c(%rip)
adc0(6): mov $0x1,%r9d
adc6(4): or $0xffffffff,%rbx
adca(5): jmp 0xfffffead(%rip)
adcf(6): mov $0x1,%r9d
add5(4): or $0xffffffff,%rbx
add9(5): jmp 0xfffffeff(%rip)
adde(6): mov $0x1,%r9d
ade4(4): or $0xffffffff,%rbx
ade8(5): jmp 0xfffffe67(%rip)
aded(6): mov $0x1,%r8d
adf3(4): or $0xffffffff,%rax
adf7(5): jmp 0xffffff34(%rip)

"rpl_fcntl" :
ae00(2): push %r12
ae02(1): push %rbp
ae03(2): mov %edi,%ebp
ae05(1): push %rbx
ae06(4): sub $0x50,%rsp
ae0a(9): mov $0x28,%rax
ae13(5): mov %rax,0x18(%rsp)
ae18(2): xor %eax,%eax
ae1a(5): lea 0x70(%rsp),%rax
ae1f(2): test %esi,%esi
ae21(5): mov %rdx,0x30(%rsp)
ae26(5): mov %rcx,0x38(%rsp)
ae2b(5): mov %r8,0x40(%rsp)
ae30(5): mov %rax,0x8(%rsp)
ae35(5): lea 0x20(%rsp),%rax
ae3a(5): mov %r9,0x48(%rsp)
ae3f(7): mov $0x10,(%rsp)
ae46(5): mov %rax,0x10(%rsp)
ae4b(6): jz 0x207(%rip)
ae51(6): cmp $0x406,%esi
ae57(2): jnz 0x49(%rip)
ae59(5): mov 0x10(%rsp),%rax
ae5e(7): cmp $0x0,0x205413(%rip)
ae65(7): mov $0x18,(%rsp)
ae6c(4): mov 0x10(%rax),%r12d
ae70(3): mov %r12d,%edx
ae73(6): js 0x130(%rip)
ae79(2): xor %eax,%eax
ae7b(5): mov $0x406,%esi
ae80(5): call 0xffff6cf0(%rip)
ae85(2): test %eax,%eax
ae87(2): mov %eax,%ebx
ae89(6): js 0x18f(%rip)
ae8f(a): mov $0x1,0x2053df(%rip)
ae99(2): jmp 0x47(%rip)
ae9b(5): nop 0x0(%rax,%rax,1)
aea0(3): cmp $0xb,%esi
aea3(2): jz 0x2d(%rip)
aea5(2): jnle 0x5b(%rip)
aea7(3): cmp $0x4,%esi
aeaa(6): jz 0xd6(%rip)
aeb0(6): jnle 0xc0(%rip)
aeb6(3): cmp $0x2,%esi
aeb9(6): jz 0xc7(%rip)
aebf(2): jnle 0x11(%rip)
aec1(3): cmp $0x1,%esi
aec4(2): jnz 0x64(%rip)
aec6(a): nop 0x0(%rax,%rax,1)
aed0(2): mov %ebp,%edi
aed2(2): xor %eax,%eax
aed4(5): call 0xffff6c9c(%rip)
aed9(2): mov %eax,%ebx
aedb(5): nop 0x0(%rax,%rax,1)
aee0(5): mov 0x18(%rsp),%rcx
aee5(9): xor $0x28,%rcx
aeee(2): mov %ebx,%eax
aef0(6): jnz 0x15d(%rip)
aef6(4): add $0x50,%rsp
aefa(1): pop %rbx
aefb(1): pop %rbp
aefc(2): pop %r12
aefe(1): ret near (%rsp)
aeff(1): nop 
af00(6): cmp $0x407,%esi
af06(2): jnle 0x4a(%rip)
af08(6): cmp $0x406,%esi
af0e(2): jnl 0x72(%rip)
af10(6): cmp $0x401,%esi
af16(2): jz 0xffffffba(%rip)
af18(6): cmp $0x402,%esi
af1e(2): jz 0x62(%rip)
af20(6): cmp $0x400,%esi
af26(2): jz 0x5a(%rip)
af28(3): mov (%rsp),%eax
af2b(3): cmp $0x2f,%eax
af2e(6): jnbe 0x13c(%rip)
af34(5): add 0x10(%rsp),%rax
af39(3): mov (%rax),%rdx
af3c(2): mov %ebp,%edi
af3e(2): xor %eax,%eax
af40(5): call 0xffff6c30(%rip)
af45(2): mov %eax,%ebx
af47(2): jmp 0xffffff99(%rip)
af49(7): nop 0x0(%rax)
af50(6): cmp $0x409,%esi
af56(2): jz 0x2a(%rip)
af58(6): jl 0xffffff78(%rip)
af5e(6): cmp $0x40a,%esi
af64(2): jnz 0xffffffc4(%rip)
af66(5): jmp 0xffffff6a(%rip)
af6b(5): nop 0x0(%rax,%rax,1)
af70(3): cmp $0x9,%esi
af73(6): jz 0xffffff5d(%rip)
af79(2): jnle 0x7(%rip)
af7b(3): cmp $0x8,%esi
af7e(2): jnz 0xffffffaa(%rip)
af80(3): mov (%rsp),%eax
af83(3): cmp $0x2f,%eax
af86(6): jnbe 0xee(%rip)
af8c(5): add 0x10(%rsp),%rax
af91(2): mov (%rax),%edx
af93(2): mov %ebp,%edi
af95(2): xor %eax,%eax
af97(5): call 0xffff6bd9(%rip)
af9c(2): mov %eax,%ebx
af9e(5): jmp 0xffffff42(%rip)
afa3(2): xor %esi,%esi
afa5(2): xor %eax,%eax
afa7(5): call 0xffff6bc9(%rip)
afac(2): test %eax,%eax
afae(2): mov %eax,%ebx
afb0(6): js 0xffffff30(%rip)
afb6(7): cmp $0xff,0x2052bb(%rip)
afbd(6): jnz 0xffffff23(%rip)
afc3(2): xor %eax,%eax
afc5(5): mov $0x1,%esi
afca(2): mov %ebx,%edi
afcc(5): call 0xffff6ba4(%rip)
afd1(2): test %eax,%eax
afd3(2): js 0x1e(%rip)
afd5(3): or $0x1,%eax
afd8(5): mov $0x2,%esi
afdd(2): mov %ebx,%edi
afdf(2): mov %eax,%edx
afe1(2): xor %eax,%eax
afe3(5): call 0xffff6b8d(%rip)
afe8(3): cmp $0xff,%eax
afeb(6): jnz 0xfffffef5(%rip)
aff1(5): call 0xffff6b1f(%rip)
aff6(3): mov (%rax),%r12d
aff9(3): mov %rax,%rbp
affc(2): mov %ebx,%edi
affe(5): call 0xffff6ce2(%rip)
b003(5): mov $0xffffffff,%ebx
b008(4): mov %r12d,0x0(%rbp)
b00c(5): jmp 0xfffffed4(%rip)
b011(7): nop 0x0(%rax)
b018(5): call 0xffff6af8(%rip)
b01d(3): cmp $0x16,(%rax)
b020(6): jnz 0xfffffe6f(%rip)
b026(2): xor %esi,%esi
b028(2): xor %eax,%eax
b02a(3): mov %r12d,%edx
b02d(2): mov %ebp,%edi
b02f(5): call 0xffff6b41(%rip)
b034(2): test %eax,%eax
b036(2): mov %eax,%ebx
b038(6): js 0xfffffea8(%rip)
b03e(a): mov $0xffffffff,0x205230(%rip)
b048(5): jmp 0xffffff7b(%rip)
b04d(5): call 0xffff6bc3(%rip)
b052(5): mov 0x10(%rsp),%rax
b057(2): xor %esi,%esi
b059(3): mov 0x10(%rax),%edx
b05c(2): xor %eax,%eax
b05e(5): call 0xffff6b12(%rip)
b063(2): mov %eax,%ebx
b065(5): jmp 0xfffffe7b(%rip)
b06a(5): mov 0x8(%rsp),%rax
b06f(5): jmp 0xfffffeca(%rip)
b074(5): mov 0x8(%rsp),%rax
b079(5): jmp 0xffffff18(%rip)

"rpl_mbrtowc" :
b080(2): push %r13
b082(2): push %r12
b084(3): mov %rsi,%r13
b087(1): push %rbp
b088(1): push %rbx
b089(3): mov %rdi,%rbx
b08c(3): mov %rdx,%r12
b08f(4): sub $0x18,%rsp
b093(9): mov $0x28,%rax
b09c(5): mov %rax,0x8(%rsp)
b0a1(2): xor %eax,%eax
b0a3(5): lea 0x4(%rsp),%rax
b0a8(3): test %rdi,%rdi
b0ab(4): cmove %rax,%rbx
b0af(3): mov %rbx,%rdi
b0b2(5): call 0xffff6b7e(%rip)
b0b7(4): cmp $0xfffffffd,%rax
b0bb(3): mov %rax,%rbp
b0be(2): jbe 0x22(%rip)
b0c0(3): test %r12,%r12
b0c3(2): jz 0x1d(%rip)
b0c5(2): xor %edi,%edi
b0c7(5): call 0x2c9(%rip)
b0cc(2): test %al,%al
b0ce(2): jnz 0x12(%rip)
b0d0(5): movzx 0x0(%r13),%eax
b0d5(5): mov $0x1,%ebp
b0da(2): mov %eax,(%rbx)
b0dc(4): nop 0x0(%rax)
b0e0(5): mov 0x8(%rsp),%rdx
b0e5(9): xor $0x28,%rdx
b0ee(3): mov %rbp,%rax
b0f1(2): jnz 0xd(%rip)
b0f3(4): add $0x18,%rsp
b0f7(1): pop %rbx
b0f8(1): pop %rbp
b0f9(2): pop %r12
b0fb(2): pop %r13
b0fd(1): ret near (%rsp)
b0fe(5): call 0xffff6b12(%rip)

"rpl_nanosleep" :
b110(2): push %r12
b112(1): push %rbp
b113(1): push %rbx
b114(4): sub $0x20,%rsp
b118(9): mov $0x28,%rax
b121(5): mov %rax,0x18(%rsp)
b126(2): xor %eax,%eax
b128(4): mov 0x8(%rdi),%rax
b12c(6): cmp $0x3b9ac9ff,%rax
b132(6): jnbe 0x8e(%rip)
b138(3): mov (%rdi),%rbx
b13b(3): mov %rsi,%rbp
b13e(5): mov %rax,0x8(%rsp)
b143(3): mov %rsp,%r12
b146(7): cmp $0x1fa400,%rbx
b14d(2): jnle 0x1d(%rip)
b14f(2): jmp 0x49(%rip)
b151(7): nop 0x0(%rax)
b158(7): cmp $0x1fa400,%rbx
b15f(9): mov $0x0,0x8(%rsp)
b168(2): jle 0x30(%rip)
b16a(3): mov %rbp,%rsi
b16d(3): mov %r12,%rdi
b170(8): mov $0x1fa400,(%rsp)
b178(7): sub $0x1fa400,%rbx
b17f(5): call 0xffff6af1(%rip)
b184(2): test %eax,%eax
b186(2): jz 0xffffffd2(%rip)
b188(3): test %rbp,%rbp
b18b(2): jz 0x1c(%rip)
b18d(4): add %rbx,0x0(%rbp)
b191(2): jmp 0x16(%rip)
b193(5): nop 0x0(%rax,%rax,1)
b198(3): mov %rbp,%rsi
b19b(3): mov %r12,%rdi
b19e(4): mov %rbx,(%rsp)
b1a2(5): call 0xffff6ace(%rip)
b1a7(5): mov 0x18(%rsp),%rdx
b1ac(9): xor $0x28,%rdx
b1b5(2): jnz 0x1d(%rip)
b1b7(4): add $0x20,%rsp
b1bb(1): pop %rbx
b1bc(1): pop %rbp
b1bd(2): pop %r12
b1bf(1): ret near (%rsp)
b1c0(5): call 0xffff6950(%rip)
b1c5(6): mov $0x16,(%rax)
b1cb(5): mov $0xffffffff,%eax
b1d0(2): jmp 0xffffffd7(%rip)
b1d2(5): call 0xffff6a3e(%rip)

"c_strtod" :
b1e0(1): push %rbp
b1e1(1): push %rbx
b1e2(3): mov %rdi,%rbp
b1e5(3): mov %rsi,%rbx
b1e8(4): sub $0x8,%rsp
b1ec(7): mov 0x20508d(%rip),%rax
b1f3(3): test %rax,%rax
b1f6(2): jz 0x3a(%rip)
b1f8(7): mov 0x205081(%rip),%rdx
b1ff(3): test %rdx,%rdx
b202(2): jz 0x16(%rip)
b204(4): add $0x8,%rsp
b208(3): mov %rbx,%rsi
b20b(3): mov %rbp,%rdi
b20e(1): pop %rbx
b20f(1): pop %rbp
b210(5): jmp 0xffff6990(%rip)
b215(3): nop (%rax)
b218(3): test %rbx,%rbx
b21b(4): pxor %xmm0,%xmm0
b21f(2): jz 0x9(%rip)
b221(4): pxor %xmm0,%xmm0
b225(3): mov %rbp,(%rbx)
b228(4): add $0x8,%rsp
b22c(1): pop %rbx
b22d(1): pop %rbp
b22e(1): ret near (%rsp)
b22f(1): nop 
b230(7): lea 0x221c(%rip),%rsi
b237(2): xor %edx,%edx
b239(5): mov $0x1fbf,%edi
b23e(5): call 0xffff6a22(%rip)
b243(7): mov %rax,0x205036(%rip)
b24a(2): jmp 0xffffffae(%rip)

"close_stream" :
b250(2): push %r12
b252(1): push %rbp
b253(3): mov %rdi,%rbp
b256(1): push %rbx
b257(5): call 0xffff68e9(%rip)
b25c(3): mov 0x0(%rbp),%ebx
b25f(3): mov %rbp,%rdi
b262(3): mov %rax,%r12
b265(5): call 0x1db(%rip)
b26a(3): and $0x20,%ebx
b26d(2): test %ebx,%ebx
b26f(2): jnz 0x19(%rip)
b271(2): test %eax,%eax
b273(2): jz 0xc(%rip)
b275(3): test %r12,%r12
b278(5): mov $0xffffffff,%eax
b27d(2): jz 0x3b(%rip)
b27f(1): pop %rbx
b280(1): pop %rbp
b281(2): pop %r12
b283(1): ret near (%rsp)
b284(4): nop 0x0(%rax)
b288(2): test %eax,%eax
b28a(2): jnz 0x1e(%rip)
b28c(5): call 0xffff6884(%rip)
b291(6): mov $0x0,(%rax)
b297(5): mov $0xffffffff,%eax
b29c(1): pop %rbx
b29d(1): pop %rbp
b29e(2): pop %r12
b2a0(1): ret near (%rsp)
b2a1(7): nop 0x0(%rax)
b2a8(1): pop %rbx
b2a9(5): mov $0xffffffff,%eax
b2ae(1): pop %rbp
b2af(2): pop %r12
b2b1(1): ret near (%rsp)
b2b2(6): nop 0x0(%rax,%rax,1)
b2b8(5): call 0xffff6858(%rip)
b2bd(3): cmp $0x9,(%rax)
b2c0(1): pop %rbx
b2c1(1): pop %rbp
b2c2(2): pop %r12
b2c4(3): setnz %al
b2c7(3): movzx %al,%eax
b2ca(2): neg %eax
b2cc(1): ret near (%rsp)

"dtotimespec" :
b2d0(8): ucomisd 0x2180(%rip),%xmm0
b2d8(6): jbe 0x98(%rip)
b2de(8): movsd 0x217a(%rip),%xmm1
b2e6(4): ucomisd %xmm0,%xmm1
b2ea(2): jbe 0x6e(%rip)
b2ec(5): cvttsd2si %xmm0,%rsi
b2f1(4): pxor %xmm1,%xmm1
b2f5(2): xor %ecx,%ecx
b2f7(5): cvtsi2sd %rsi,%xmm1
b2fc(4): subsd %xmm1,%xmm0
b300(4): pxor %xmm1,%xmm1
b304(8): mulsd 0x215c(%rip),%xmm0
b30c(5): cvttsd2si %xmm0,%rdx
b311(5): cvtsi2sd %rdx,%xmm1
b316(4): ucomisd %xmm1,%xmm0
b31a(3): setnbe %cl
b31d(3): add %rdx,%rcx
b320(a): mov $0x1237940039285380275,%rdx
b32a(3): mov %rcx,%rax
b32d(3): imul %rax,%rdx,%rdx
b330(3): mov %rcx,%rax
b333(4): sar $0x3f,%rax
b337(4): sar $0x1a,%rdx
b33b(3): sub %rax,%rdx
b33e(4): lea 0x0(%rdx,%rsi,1),%rax
b342(7): imul %rdx,$0x3b9aca00,%rdx
b349(3): sub %rdx,%rcx
b34c(3): mov %rcx,%rdx
b34f(2): js 0x31(%rip)
b351(2): REP ret near (%rsp)
b353(5): nop 0x0(%rax,%rax,1)
b358(a): mov $0x9223372036854775807,%rax
b362(5): mov $0x3b9ac9ff,%edx
b367(1): ret near (%rsp)
b368(8): nop 0x0(%rax,%rax,1)
b370(a): mov $0x-9223372036854775808,%rax
b37a(2): xor %edx,%edx
b37c(1): ret near (%rsp)
b37d(3): nop (%rax)
b380(4): sub $0x1,%rax
b384(7): add $0x3b9aca00,%rdx
b38b(1): ret near (%rsp)

"hard_locale" :
b390(4): sub $0x8,%rsp
b394(2): xor %esi,%esi
b396(5): call 0xffff6aaa(%rip)
b39b(3): mov %rax,%rdx
b39e(5): mov $0x1,%eax
b3a3(3): test %rdx,%rdx
b3a6(2): jz 0x1f(%rip)
b3a8(7): lea 0x20a4(%rip),%rdi
b3af(5): mov $0x2,%ecx
b3b4(3): mov %rdx,%rsi
b3b7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b3b9(3): setnbe %cl
b3bc(3): sbb $0x0,%cl
b3bf(2): xor %eax,%eax
b3c1(2): test %cl,%cl
b3c3(2): jnz 0xd(%rip)
b3c5(4): add $0x8,%rsp
b3c9(1): ret near (%rsp)
b3ca(6): nop 0x0(%rax,%rax,1)
b3d0(7): lea 0x2099(%rip),%rdi
b3d7(5): mov $0x6,%ecx
b3dc(3): mov %rdx,%rsi
b3df(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
b3e1(3): setnbe %al
b3e4(2): sbb $0x0,%al
b3e6(2): test %al,%al
b3e8(3): setnz %al
b3eb(4): add $0x8,%rsp
b3ef(1): ret near (%rsp)

"locale_charset" :
b3f0(4): sub $0x8,%rsp
b3f4(5): mov $0xe,%edi
b3f9(5): call 0xffff69f7(%rip)
b3fe(3): test %rax,%rax
b401(2): jz 0x1f(%rip)
b403(3): cmp $0x0,(%rax)
b406(7): lea 0x2069(%rip),%rdx
b40d(4): cmove %rdx,%rax
b411(4): add $0x8,%rsp
b415(1): ret near (%rsp)
b416(a): nop 0x0(%rax,%rax,1)
b420(7): lea 0x204f(%rip),%rax
b427(4): add $0x8,%rsp
b42b(1): ret near (%rsp)

"dup_safer" :
b430(5): mov $0x3,%edx
b435(2): xor %esi,%esi
b437(2): xor %eax,%eax
b439(5): jmp 0xfffff9c7(%rip)

"rpl_fclose" :
b440(2): push %r12
b442(1): push %rbp
b443(1): push %rbx
b444(3): mov %rdi,%rbx
b447(5): call 0xffff6949(%rip)
b44c(2): test %eax,%eax
b44e(3): mov %rbx,%rdi
b451(2): js 0x56(%rip)
b453(5): call 0xffff69bd(%rip)
b458(2): test %eax,%eax
b45a(2): jnz 0x2e(%rip)
b45c(3): mov %rbx,%rdi
b45f(5): call 0x61(%rip)
b464(2): test %eax,%eax
b466(2): jz 0x3e(%rip)
b468(5): call 0xffff66a8(%rip)
b46d(3): mov (%rax),%r12d
b470(3): mov %rbx,%rdi
b473(3): mov %rax,%rbp
b476(5): call 0xffff673a(%rip)
b47b(3): test %r12d,%r12d
b47e(2): jnz 0x32(%rip)
b480(1): pop %rbx
b481(1): pop %rbp
b482(2): pop %r12
b484(1): ret near (%rsp)
b485(3): nop (%rax)
b488(3): mov %rbx,%rdi
b48b(5): call 0xffff6905(%rip)
b490(2): xor %esi,%esi
b492(5): mov $0x1,%edx
b497(2): mov %eax,%edi
b499(5): call 0xffff6807(%rip)
b49e(4): cmp $0xffffffff,%rax
b4a2(2): jnz 0xffffffba(%rip)
b4a4(3): mov %rbx,%rdi
b4a7(1): pop %rbx
b4a8(1): pop %rbp
b4a9(2): pop %r12
b4ab(5): jmp 0xffff6705(%rip)
b4b0(4): mov %r12d,0x0(%rbp)
b4b4(5): mov $0xffffffff,%eax
b4b9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
b4c0(3): test %rdi,%rdi
b4c3(1): push %rbx
b4c4(3): mov %rdi,%rbx
b4c7(2): jz 0x13(%rip)
b4c9(5): call 0xffff6947(%rip)
b4ce(2): test %eax,%eax
b4d0(2): jz 0xa(%rip)
b4d2(6): test $0x100,(%rbx)
b4d8(2): jnz 0x10(%rip)
b4da(3): mov %rbx,%rdi
b4dd(1): pop %rbx
b4de(5): jmp 0xffff68f2(%rip)
b4e3(5): nop 0x0(%rax,%rax,1)
b4e8(3): mov %rbx,%rdi
b4eb(5): mov $0x1,%edx
b4f0(2): xor %esi,%esi
b4f2(5): call 0xe(%rip)
b4f7(3): mov %rbx,%rdi
b4fa(1): pop %rbx
b4fb(5): jmp 0xffff68d5(%rip)

"rpl_fseeko" :
b500(4): mov 0x8(%rdi),%rax
b504(4): cmp %rax,0x10(%rdi)
b508(2): jz 0x8(%rip)
b50a(5): jmp 0xffff6986(%rip)
b50f(1): nop 
b510(4): mov 0x20(%rdi),%rax
b514(4): cmp %rax,0x28(%rdi)
b518(2): jnz 0xfffffff2(%rip)
b51a(5): cmp $0x0,0x48(%rdi)
b51f(2): jnz 0xffffffeb(%rip)
b521(2): push %r12
b523(1): push %rbp
b524(3): mov %edx,%r12d
b527(1): push %rbx
b528(3): mov %rsi,%rbp
b52b(3): mov %rdi,%rbx
b52e(5): call 0xffff6862(%rip)
b533(3): mov %r12d,%edx
b536(3): mov %rbp,%rsi
b539(2): mov %eax,%edi
b53b(5): call 0xffff6765(%rip)
b540(4): cmp $0xffffffff,%rax
b544(2): jz 0xe(%rip)
b546(3): and $0xef,(%rbx)
b549(7): mov %rax,0x90(%rbx)
b550(2): xor %eax,%eax
b552(1): pop %rbx
b553(1): pop %rbp
b554(2): pop %r12
b556(1): ret near (%rsp)

"__libc_csu_init" :
b560(2): push %r15
b562(2): push %r14
b564(3): mov %rdx,%r15
b567(2): push %r13
b569(2): push %r12
b56b(7): lea 0x20439e(%rip),%r12
b572(1): push %rbp
b573(7): lea 0x20439e(%rip),%rbp
b57a(1): push %rbx
b57b(3): mov %edi,%r13d
b57e(3): mov %rsi,%r14
b581(3): sub %r12,%rbp
b584(4): sub $0x8,%rsp
b588(4): sar $0x3,%rbp
b58c(5): call 0xffff651c(%rip)
b591(3): test %rbp,%rbp
b594(2): jz 0x22(%rip)
b596(2): xor %ebx,%ebx
b598(8): nop 0x0(%rax,%rax,1)
b5a0(3): mov %r15,%rdx
b5a3(3): mov %r14,%rsi
b5a6(3): mov %r13d,%edi
b5a9(4): call 0x0(%r12,%rbx,8)
b5ad(4): add $0x1,%rbx
b5b1(3): cmp %rbx,%rbp
b5b4(2): jnz 0xffffffec(%rip)
b5b6(4): add $0x8,%rsp
b5ba(1): pop %rbx
b5bb(1): pop %rbp
b5bc(2): pop %r12
b5be(2): pop %r13
b5c0(2): pop %r14
b5c2(2): pop %r15
b5c4(1): ret near (%rsp)

"atexit" :
b5e0(7): mov 0x204a21(%rip),%rdx
b5e7(2): xor %esi,%esi
b5e9(5): jmp 0xffff68c7(%rip)

"_fini" :
b5f0(4): sub $0x8,%rsp
b5f4(4): add $0x8,%rsp
b5f8(1): ret near (%rsp)

