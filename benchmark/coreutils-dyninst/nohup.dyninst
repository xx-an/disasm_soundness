
"getenv@plt" :
13e0(6): jmp 0x206a5a(%rip)
13e6(5): push $0x0

"free@plt" :
13f0(6): jmp 0x206a52(%rip)
13f6(5): push $0x1

"abort@plt" :
1400(6): jmp 0x206a4a(%rip)
1406(5): push $0x2

"__errno_location@plt" :
1410(6): jmp 0x206a42(%rip)
1416(5): push $0x3

"strncmp@plt" :
1420(6): jmp 0x206a3a(%rip)
1426(5): push $0x4

"_exit@plt" :
1430(6): jmp 0x206a32(%rip)
1436(5): push $0x5

"__fpending@plt" :
1440(6): jmp 0x206a2a(%rip)
1446(5): push $0x6

"isatty@plt" :
1450(6): jmp 0x206a22(%rip)
1456(5): push $0x7

"fcntl@plt" :
1460(6): jmp 0x206a1a(%rip)
1466(5): push $0x8

"textdomain@plt" :
1470(6): jmp 0x206a12(%rip)
1476(5): push $0x9

"fclose@plt" :
1480(6): jmp 0x206a0a(%rip)
1486(5): push $0xa

"bindtextdomain@plt" :
1490(6): jmp 0x206a02(%rip)
1496(5): push $0xb

"dcgettext@plt" :
14a0(6): jmp 0x2069fa(%rip)
14a6(5): push $0xc

"__ctype_get_mb_cur_max@plt" :
14b0(6): jmp 0x2069f2(%rip)
14b6(5): push $0xd

"strlen@plt" :
14c0(6): jmp 0x2069ea(%rip)
14c6(5): push $0xe

"__stack_chk_fail@plt" :
14d0(6): jmp 0x2069e2(%rip)
14d6(5): push $0xf

"getopt_long@plt" :
14e0(6): jmp 0x2069da(%rip)
14e6(5): push $0x10

"mbrtowc@plt" :
14f0(6): jmp 0x2069d2(%rip)
14f6(5): push $0x11

"dup2@plt" :
1500(6): jmp 0x2069ca(%rip)
1506(5): push $0x12

"strrchr@plt" :
1510(6): jmp 0x2069c2(%rip)
1516(5): push $0x13

"lseek@plt" :
1520(6): jmp 0x2069ba(%rip)
1526(5): push $0x14

"memset@plt" :
1530(6): jmp 0x2069b2(%rip)
1536(5): push $0x15

"close@plt" :
1540(6): jmp 0x2069aa(%rip)
1546(5): push $0x16

"memcmp@plt" :
1550(6): jmp 0x2069a2(%rip)
1556(5): push $0x17

"fputs_unlocked@plt" :
1560(6): jmp 0x20699a(%rip)
1566(5): push $0x18

"calloc@plt" :
1570(6): jmp 0x206992(%rip)
1576(5): push $0x19

"signal@plt" :
1580(6): jmp 0x20698a(%rip)
1586(5): push $0x1a

"umask@plt" :
1590(6): jmp 0x206982(%rip)
1596(5): push $0x1b

"memcpy@plt" :
15a0(6): jmp 0x20697a(%rip)
15a6(5): push $0x1c

"fileno@plt" :
15b0(6): jmp 0x206972(%rip)
15b6(5): push $0x1d

"malloc@plt" :
15c0(6): jmp 0x20696a(%rip)
15c6(5): push $0x1e

"fflush@plt" :
15d0(6): jmp 0x206962(%rip)
15d6(5): push $0x1f

"nl_langinfo@plt" :
15e0(6): jmp 0x20695a(%rip)
15e6(5): push $0x20

"__freading@plt" :
15f0(6): jmp 0x206952(%rip)
15f6(5): push $0x21

"realloc@plt" :
1600(6): jmp 0x20694a(%rip)
1606(5): push $0x22

"setlocale@plt" :
1610(6): jmp 0x206942(%rip)
1616(5): push $0x23

"__printf_chk@plt" :
1620(6): jmp 0x20693a(%rip)
1626(5): push $0x24

"mempcpy@plt" :
1630(6): jmp 0x206932(%rip)
1636(5): push $0x25

"error@plt" :
1640(6): jmp 0x20692a(%rip)
1646(5): push $0x26

"open@plt" :
1650(6): jmp 0x206922(%rip)
1656(5): push $0x27

"fseeko@plt" :
1660(6): jmp 0x20691a(%rip)
1666(5): push $0x28

"execvp@plt" :
1670(6): jmp 0x206912(%rip)
1676(5): push $0x29

"__cxa_atexit@plt" :
1680(6): jmp 0x20690a(%rip)
1686(5): push $0x2a

"exit@plt" :
1690(6): jmp 0x206902(%rip)
1696(5): push $0x2b

"fwrite@plt" :
16a0(6): jmp 0x2068fa(%rip)
16a6(5): push $0x2c

"__fprintf_chk@plt" :
16b0(6): jmp 0x2068f2(%rip)
16b6(5): push $0x2d

"mbsinit@plt" :
16c0(6): jmp 0x2068ea(%rip)
16c6(5): push $0x2e

"iswprint@plt" :
16d0(6): jmp 0x2068e2(%rip)
16d6(5): push $0x2f

"__ctype_b_loc@plt" :
16e0(6): jmp 0x2068da(%rip)
16e6(5): push $0x30

".plt.got" :
16f0(6): jmp 0x2068f2(%rip)
16f6(2): nop 

"_init" :
13b0(4): sub $0x8,%rsp
13b4(7): mov 0x206c1d(%rip),%rax
13bb(3): test %rax,%rax
13be(2): jz 0x4(%rip)
13c0(2): call %rax
13c2(4): add $0x8,%rsp
13c6(1): ret near (%rsp)

"main" :
1700(2): push %r15
1702(2): push %r14
1704(2): push %r13
1706(2): push %r12
1708(3): mov %rsi,%r12
170b(1): push %rbp
170c(1): push %rbx
170d(2): mov %edi,%ebp
170f(4): sub $0x38,%rsp
1713(3): mov (%rsi),%rdi
1716(5): call 0xfaa(%rip)
171b(7): lea 0x475f(%rip),%rsi
1722(5): mov $0x6,%edi
1727(5): call 0xfffffee9(%rip)
172c(7): lea 0x3cf8(%rip),%rsi
1733(7): lea 0x3c8a(%rip),%rdi
173a(5): call 0xfffffd56(%rip)
173f(7): lea 0x3c7e(%rip),%rdi
1746(5): call 0xfffffd2a(%rip)
174b(7): lea 0x3cf1(%rip),%rdi
1752(5): call 0xfffffc8e(%rip)
1757(4): cmp $0x1,%rax
175b(7): lea 0xaae(%rip),%rdi
1762(2): sbb %ebx,%ebx
1764(3): and $0xfe,%ebx
1767(3): add $0x7f,%ebx
176a(6): mov %ebx,0x2068a8(%rip)
1770(5): call 0x3bb0(%rip)
1775(7): lea 0x3cd7(%rip),%rax
177c(4): sub $0x8,%rsp
1780(7): mov 0x206889(%rip),%r8
1787(2): push $0x0
1789(7): lea 0x3c30(%rip),%rcx
1790(7): lea 0x3bad(%rip),%rdx
1797(1): push %rax
1798(7): lea 0x6b1(%rip),%rax
179f(3): xor %r9d,%r9d
17a2(3): mov %r12,%rsi
17a5(2): mov %ebp,%edi
17a7(1): push %rax
17a8(2): xor %eax,%eax
17aa(5): call 0xdd6(%rip)
17af(4): add $0x20,%rsp
17b3(6): cmp %ebp,0x2068d7(%rip)
17b9(6): jnl 0x4fa(%rip)
17bf(2): xor %edi,%edi
17c1(5): call 0xfffffc8f(%rip)
17c6(5): mov $0x1,%edi
17cb(3): mov %eax,%r13d
17ce(5): call 0xfffffc82(%rip)
17d3(2): test %eax,%eax
17d5(2): mov %eax,%ebp
17d7(2): jz 0x55(%rip)
17d9(5): mov $0x2,%edi
17de(5): call 0xfffffc72(%rip)
17e3(2): test %eax,%eax
17e5(3): mov %eax,%r8d
17e8(4): setnz %r14b
17ec(3): test %r13d,%r13d
17ef(6): jnz 0x243(%rip)
17f5(2): test %ebp,%ebp
17f7(6): jnz 0xac(%rip)
17fd(2): test %eax,%eax
17ff(6): jnz 0x391(%rip)
1805(6): mov $0x2,%r14d
180b(7): mov 0x2068ae(%rip),%rax
1812(3): test $0x20,(%rax)
1815(6): jz 0x192(%rip)
181b(4): add $0x38,%rsp
181f(2): mov %ebx,%eax
1821(1): pop %rbx
1822(1): pop %rbp
1823(2): pop %r12
1825(2): pop %r13
1827(2): pop %r14
1829(2): pop %r15
182b(1): ret near (%rsp)
182c(5): call 0xfffffbe4(%rip)
1831(3): cmp $0x9,(%rax)
1834(2): jnz 0xffffffa5(%rip)
1836(5): mov $0x2,%edi
183b(6): mov $0x1,%r15d
1841(5): call 0xfffffc0f(%rip)
1846(2): test %eax,%eax
1848(3): mov %eax,%r8d
184b(8): mov $0x1,0x24(%rsp)
1853(4): setnz %r14b
1857(3): test %r13d,%r13d
185a(6): jnz 0x1e3(%rip)
1860(3): test %r14b,%r14b
1863(6): jz 0x4cb(%rip)
1869(3): test %r15b,%r15b
186c(6): jz 0x4c2(%rip)
1872(5): mov $0xfffffe7f,%edi
1877(6): mov $0x1,%r14d
187d(5): call 0xfffffd13(%rip)
1882(7): lea 0x3b64(%rip),%rdi
1889(4): mov %eax,0x10(%rsp)
188d(5): mov $0x180,%edx
1892(5): mov $0x441,%esi
1897(2): xor %eax,%eax
1899(5): call 0xfffffdb7(%rip)
189e(3): mov %eax,%r15d
18a1(2): jmp 0x36(%rip)
18a3(8): mov $0x0,0x24(%rsp)
18ab(5): mov $0xfffffe7f,%edi
18b0(5): call 0xfffffce0(%rip)
18b5(7): lea 0x3b31(%rip),%rsi
18bc(5): mov $0x180,%ecx
18c1(5): mov $0x441,%edx
18c6(5): mov $0x1,%edi
18cb(4): mov %eax,0x10(%rsp)
18cf(5): call 0x9f1(%rip)
18d4(3): mov %eax,%r15d
18d7(3): test %r15d,%r15d
18da(6): js 0x1a0(%rip)
18e0(7): lea 0x3b06(%rip),%rsi
18e7(9): mov $0x0,0x8(%rsp)
18f0(4): mov 0x10(%rsp),%edi
18f4(5): mov %rsi,0x18(%rsp)
18f9(5): call 0xfffffc97(%rip)
18fe(5): mov 0x18(%rsp),%rsi
1903(5): mov $0x4,%edi
1908(5): call 0x27f8(%rip)
190d(7): lea 0x3f24(%rip),%rsi
1914(5): mov %rax,0x10(%rsp)
1919(7): lea 0x3ad7(%rip),%rax
1920(3): test %r13d,%r13d
1923(5): mov $0x5,%edx
1928(4): cmove %rax,%rsi
192c(2): xor %edi,%edi
192e(5): call 0xfffffb72(%rip)
1933(5): mov 0x10(%rsp),%rcx
1938(3): mov %rax,%rdx
193b(2): xor %edi,%edi
193d(2): xor %esi,%esi
193f(2): xor %eax,%eax
1941(5): call 0xfffffcff(%rip)
1946(5): mov 0x8(%rsp),%rdi
194b(5): call 0xfffffaa5(%rip)
1950(3): test %r14b,%r14b
1953(6): jz 0xfffffeb2(%rip)
1959(2): xor %eax,%eax
195b(5): mov $0x3,%edx
1960(5): mov $0x406,%esi
1965(5): mov $0x2,%edi
196a(5): call 0x3336(%rip)
196f(2): test %ebp,%ebp
1971(3): mov %eax,%r14d
1974(6): jz 0x1b0(%rip)
197a(5): mov $0x2,%esi
197f(3): mov %r15d,%edi
1982(5): call 0xfffffb7e(%rip)
1987(2): test %eax,%eax
1989(6): js 0x276(%rip)
198f(5): cmp $0x0,0x24(%rsp)
1994(6): jz 0xfffffe77(%rip)
199a(3): mov %r15d,%edi
199d(5): call 0xfffffba3(%rip)
19a2(5): jmp 0xfffffe69(%rip)
19a7(5): mov $0x1,%esi
19ac(5): mov $0x1,%edi
19b1(2): xor %ebx,%ebx
19b3(5): call 0xfffffbcd(%rip)
19b8(7): movsxd 0x2066d1(%rip),%rax
19bf(4): lea 0x0(%r12,%rax,8),%rbp
19c3(4): mov 0x0(%rbp),%rdi
19c7(3): mov %rbp,%rsi
19ca(5): call 0xfffffca6(%rip)
19cf(5): call 0xfffffa41(%rip)
19d4(3): mov (%rax),%r12d
19d7(5): mov $0x2,%esi
19dc(3): mov %r14d,%edi
19df(4): cmp $0x2,%r12d
19e3(3): setz %bl
19e6(3): add $0x7e,%ebx
19e9(5): call 0xfffffb17(%rip)
19ee(3): cmp $0x2,%eax
19f1(6): jnz 0xfffffe2a(%rip)
19f7(4): mov 0x0(%rbp),%rsi
19fb(5): mov $0x4,%edi
1a00(5): call 0x2700(%rip)
1a05(7): lea 0x3a94(%rip),%rsi
1a0c(3): mov %rax,%rbp
1a0f(5): mov $0x5,%edx
1a14(2): xor %edi,%edi
1a16(5): call 0xfffffa8a(%rip)
1a1b(3): mov %rbp,%rcx
1a1e(3): mov %rax,%rdx
1a21(3): mov %r12d,%esi
1a24(2): xor %edi,%edi
1a26(2): xor %eax,%eax
1a28(5): call 0xfffffc18(%rip)
1a2d(5): jmp 0xfffffdee(%rip)
1a32(3): xor %r15d,%r15d
1a35(8): mov $0x0,0x24(%rsp)
1a3d(7): lea 0x3a2c(%rip),%rsi
1a44(2): xor %ecx,%ecx
1a46(2): xor %edi,%edi
1a48(5): mov $0x1,%edx
1a4d(5): mov %r8d,0x8(%rsp)
1a52(5): call 0x86e(%rip)
1a57(2): test %eax,%eax
1a59(5): mov 0x8(%rsp),%r8d
1a5e(6): js 0x165(%rip)
1a64(3): or %ebp,%r8d
1a67(6): jz 0xf1(%rip)
1a6d(2): test %ebp,%ebp
1a6f(6): jz 0xfffffdf1(%rip)
1a75(5): jmp 0xfffffe36(%rip)
1a7a(5): call 0xfffff996(%rip)
1a7f(5): mov %rax,0x28(%rsp)
1a84(2): mov (%rax),%eax
1a86(7): lea 0x39fc(%rip),%rdi
1a8d(4): mov %eax,0x18(%rsp)
1a91(5): call 0xfffff94f(%rip)
1a96(3): test %rax,%rax
1a99(2): jz 0x4c(%rip)
1a9b(7): lea 0x394b(%rip),%rsi
1aa2(2): xor %edx,%edx
1aa4(3): mov %rax,%rdi
1aa7(5): call 0x879(%rip)
1aac(2): test %ebp,%ebp
1aae(5): mov %rax,0x8(%rsp)
1ab3(6): jz 0x17a(%rip)
1ab9(5): mov $0x180,%ecx
1abe(5): mov $0x441,%edx
1ac3(3): mov %rax,%rsi
1ac6(5): mov $0x1,%edi
1acb(5): call 0x7f5(%rip)
1ad0(2): test %eax,%eax
1ad2(3): mov %eax,%r15d
1ad5(6): js 0x206(%rip)
1adb(5): mov 0x8(%rsp),%rsi
1ae0(5): jmp 0xfffffe10(%rip)
1ae5(7): lea 0x3901(%rip),%rsi
1aec(5): mov $0x4,%edi
1af1(5): call 0x260f(%rip)
1af6(7): lea 0x3991(%rip),%rsi
1afd(2): xor %edi,%edi
1aff(5): mov $0x5,%edx
1b04(3): mov %rax,%rbp
1b07(5): call 0xfffff999(%rip)
1b0c(4): mov 0x18(%rsp),%esi
1b10(3): mov %rax,%rdx
1b13(3): mov %rbp,%rcx
1b16(2): xor %edi,%edi
1b18(2): xor %eax,%eax
1b1a(5): call 0xfffffb26(%rip)
1b1f(5): jmp 0xfffffcfc(%rip)
1b24(7): lea 0x3d3d(%rip),%rsi
1b2b(7): lea 0x38dc(%rip),%rax
1b32(3): test %r13d,%r13d
1b35(4): cmove %rax,%rsi
1b39(2): xor %edi,%edi
1b3b(5): mov $0x5,%edx
1b40(5): call 0xfffff960(%rip)
1b45(2): xor %esi,%esi
1b47(3): mov %rax,%rdx
1b4a(2): xor %edi,%edi
1b4c(2): xor %eax,%eax
1b4e(5): call 0xfffffaf2(%rip)
1b53(5): jmp 0xfffffe27(%rip)
1b58(7): lea 0x391b(%rip),%rsi
1b5f(2): xor %edi,%edi
1b61(5): mov $0x5,%edx
1b66(5): call 0xfffff93a(%rip)
1b6b(2): xor %esi,%esi
1b6d(3): mov %rax,%rdx
1b70(2): xor %edi,%edi
1b72(2): xor %eax,%eax
1b74(5): call 0xfffffacc(%rip)
1b79(3): test %r14b,%r14b
1b7c(6): jz 0xfffffc89(%rip)
1b82(3): test %r15b,%r15b
1b85(6): jnz 0xfffffced(%rip)
1b8b(5): jmp 0xfffffc7a(%rip)
1b90(5): mov $0x406,%esi
1b95(5): mov $0x3,%edx
1b9a(5): mov $0x2,%edi
1b9f(2): xor %eax,%eax
1ba1(6): mov $0x1,%r15d
1ba7(5): call 0x30f9(%rip)
1bac(8): mov $0x0,0x24(%rsp)
1bb4(3): mov %eax,%r14d
1bb7(7): lea 0x3850(%rip),%rsi
1bbe(5): jmp 0xffffff7b(%rip)
1bc3(7): lea 0x3cce(%rip),%rsi
1bca(5): mov $0x5,%edx
1bcf(2): xor %edi,%edi
1bd1(5): mov %r8d,0x10(%rsp)
1bd6(5): call 0xfffff8ca(%rip)
1bdb(5): mov %rax,0x8(%rsp)
1be0(5): call 0xfffff830(%rip)
1be5(5): mov 0x8(%rsp),%rdx
1bea(2): mov (%rax),%esi
1bec(2): mov %ebx,%edi
1bee(2): xor %eax,%eax
1bf0(5): call 0xfffffa50(%rip)
1bf5(5): mov 0x10(%rsp),%r8d
1bfa(5): jmp 0xfffffe6a(%rip)
1bff(7): lea 0x3cc2(%rip),%rsi
1c06(2): xor %edi,%edi
1c08(5): mov $0x5,%edx
1c0d(5): call 0xfffff893(%rip)
1c12(3): mov %rax,%rbp
1c15(5): call 0xfffff7fb(%rip)
1c1a(2): mov (%rax),%esi
1c1c(3): mov %rbp,%rdx
1c1f(2): mov %ebx,%edi
1c21(2): xor %eax,%eax
1c23(5): call 0xfffffa1d(%rip)
1c28(5): jmp 0xfffffd67(%rip)
1c2d(5): mov 0x8(%rsp),%rdi
1c32(2): xor %eax,%eax
1c34(5): mov $0x180,%edx
1c39(5): mov $0x441,%esi
1c3e(5): call 0xfffffa12(%rip)
1c43(2): test %eax,%eax
1c45(3): mov %eax,%r15d
1c48(6): jns 0xfffffe93(%rip)
1c4e(5): mov 0x28(%rsp),%rax
1c53(7): lea 0x3793(%rip),%rsi
1c5a(5): mov $0x4,%edi
1c5f(3): mov (%rax),%r12d
1c62(5): call 0x249e(%rip)
1c67(7): lea 0x3820(%rip),%rsi
1c6e(5): mov $0x5,%edx
1c73(2): xor %edi,%edi
1c75(3): mov %rax,%rbp
1c78(5): call 0xfffff828(%rip)
1c7d(4): mov 0x18(%rsp),%esi
1c81(3): mov %rax,%rdx
1c84(3): mov %rbp,%rcx
1c87(2): xor %edi,%edi
1c89(2): xor %eax,%eax
1c8b(5): call 0xfffff9b5(%rip)
1c90(5): mov 0x8(%rsp),%rsi
1c95(5): mov $0x4,%edi
1c9a(5): call 0x2466(%rip)
1c9f(5): mov $0x5,%edx
1ca4(3): mov %rax,%rbp
1ca7(7): lea 0x37e0(%rip),%rsi
1cae(5): jmp 0xfffffd66(%rip)
1cb3(7): lea 0x37a6(%rip),%rsi
1cba(5): mov $0x5,%edx
1cbf(2): xor %edi,%edi
1cc1(5): call 0xfffff7df(%rip)
1cc6(2): xor %edi,%edi
1cc8(3): mov %rax,%rdx
1ccb(2): xor %esi,%esi
1ccd(2): xor %eax,%eax
1ccf(5): call 0xfffff971(%rip)
1cd4(2): mov %ebx,%edi
1cd6(5): call 0x17a(%rip)
1cdb(5): mov 0x28(%rsp),%rax
1ce0(7): lea 0x3706(%rip),%rsi
1ce7(5): mov $0x4,%edi
1cec(3): mov (%rax),%r12d
1cef(5): call 0x2411(%rip)
1cf4(7): lea 0x3793(%rip),%rsi
1cfb(2): xor %edi,%edi
1cfd(5): mov $0x5,%edx
1d02(3): mov %rax,%rbp
1d05(5): call 0xfffff79b(%rip)
1d0a(4): mov 0x18(%rsp),%esi
1d0e(3): mov %rax,%rdx
1d11(2): xor %edi,%edi
1d13(2): xor %eax,%eax
1d15(3): mov %rbp,%rcx
1d18(5): call 0xfffff928(%rip)
1d1d(6): cmp $0x0,0x8(%rsp)
1d23(6): jnz 0xffffff6d(%rip)
1d29(5): jmp 0xfffffaf2(%rip)
1d2e(6): mov $0x1,%r15d
1d34(5): jmp 0xfffffc1c(%rip)

"_start" :
1d40(2): xor %ebp,%ebp
1d42(3): mov %rdx,%r9
1d45(1): pop %rsi
1d46(3): mov %rsp,%rdx
1d49(4): and $0xfffffff0,%rsp
1d4d(1): push %rax
1d4e(1): push %rsp
1d4f(7): lea 0x35ba(%rip),%r8
1d56(7): lea 0x3543(%rip),%rcx
1d5d(7): lea 0xfffff99c(%rip),%rdi
1d64(6): call 0x206266(%rip)
1d6a(1): hlt 

"deregister_tm_clones" :
1d70(7): lea 0x206309(%rip),%rdi
1d77(1): push %rbp
1d78(7): lea 0x206301(%rip),%rax
1d7f(3): cmp %rdi,%rax
1d82(3): mov %rsp,%rbp
1d85(2): jz 0x1b(%rip)
1d87(7): mov 0x20623a(%rip),%rax
1d8e(3): test %rax,%rax
1d91(2): jz 0xf(%rip)
1d93(1): pop %rbp
1d94(2): jmp %rax
1d96(a): nop 0x0(%rax,%rax,1)
1da0(1): pop %rbp
1da1(1): ret near (%rsp)

"register_tm_clones" :
1db0(7): lea 0x2062c9(%rip),%rdi
1db7(7): lea 0x2062c2(%rip),%rsi
1dbe(1): push %rbp
1dbf(3): sub %rdi,%rsi
1dc2(3): mov %rsp,%rbp
1dc5(4): sar $0x3,%rsi
1dc9(3): mov %rsi,%rax
1dcc(4): shr $0x3f,%rax
1dd0(3): add %rax,%rsi
1dd3(3): sar $0x1,%rsi
1dd6(2): jz 0x1a(%rip)
1dd8(7): mov 0x206201(%rip),%rax
1ddf(3): test %rax,%rax
1de2(2): jz 0xe(%rip)
1de4(1): pop %rbp
1de5(2): jmp %rax
1de7(9): nop 0x0(%rax,%rax,1)
1df0(1): pop %rbp
1df1(1): ret near (%rsp)

"__do_global_dtors_aux" :
1e00(7): cmp $0x0,0x2062c1(%rip)
1e07(2): jnz 0x31(%rip)
1e09(8): cmp $0x0,0x2061d7(%rip)
1e11(1): push %rbp
1e12(3): mov %rsp,%rbp
1e15(2): jz 0xe(%rip)
1e17(7): mov 0x2061ea(%rip),%rdi
1e1e(5): call 0xfffff8d2(%rip)
1e23(5): call 0xffffff4d(%rip)
1e28(7): mov $0x1,0x206299(%rip)
1e2f(1): pop %rbp
1e30(1): ret near (%rsp)
1e31(7): nop 0x0(%rax)
1e38(2): REP ret near (%rsp)

"frame_dummy" :
1e40(1): push %rbp
1e41(3): mov %rsp,%rbp
1e44(1): pop %rbp
1e45(5): jmp 0xffffff6b(%rip)

"usage" :
1e50(2): push %r13
1e52(2): push %r12
1e54(5): mov $0x5,%edx
1e59(1): push %rbp
1e5a(1): push %rbx
1e5b(2): mov %edi,%ebp
1e5d(7): sub $0x88,%rsp
1e64(7): mov 0x206275(%rip),%rbx
1e6b(9): mov $0x28,%rax
1e74(5): mov %rax,0x78(%rsp)
1e79(2): xor %eax,%eax
1e7b(2): test %edi,%edi
1e7d(2): jz 0x30(%rip)
1e7f(7): lea 0x363a(%rip),%rsi
1e86(2): xor %edi,%edi
1e88(5): call 0xfffff618(%rip)
1e8d(7): mov 0x20622c(%rip),%rdi
1e94(3): mov %rax,%rdx
1e97(3): mov %rbx,%rcx
1e9a(5): mov $0x1,%esi
1e9f(2): xor %eax,%eax
1ea1(5): call 0xfffff80f(%rip)
1ea6(2): mov %ebp,%edi
1ea8(5): call 0xfffff7e8(%rip)
1ead(7): lea 0x3634(%rip),%rsi
1eb4(2): xor %edi,%edi
1eb6(5): call 0xfffff5ea(%rip)
1ebb(3): mov %rbx,%rcx
1ebe(3): mov %rbx,%rdx
1ec1(3): mov %rax,%rsi
1ec4(5): mov $0x1,%edi
1ec9(2): xor %eax,%eax
1ecb(5): call 0xfffff755(%rip)
1ed0(7): mov 0x2061b1(%rip),%rbx
1ed7(7): lea 0x363a(%rip),%rsi
1ede(5): mov $0x5,%edx
1ee3(2): xor %edi,%edi
1ee5(5): call 0xfffff5bb(%rip)
1eea(3): mov %rbx,%rsi
1eed(3): mov %rax,%rdi
1ef0(5): call 0xfffff670(%rip)
1ef5(7): mov 0x20618c(%rip),%rbx
1efc(7): lea 0x363d(%rip),%rsi
1f03(5): mov $0x5,%edx
1f08(2): xor %edi,%edi
1f0a(5): call 0xfffff596(%rip)
1f0f(3): mov %rbx,%rsi
1f12(3): mov %rax,%rdi
1f15(5): call 0xfffff64b(%rip)
1f1a(7): mov 0x206167(%rip),%rbx
1f21(7): lea 0x3648(%rip),%rsi
1f28(5): mov $0x5,%edx
1f2d(2): xor %edi,%edi
1f2f(5): call 0xfffff571(%rip)
1f34(3): mov %rbx,%rsi
1f37(3): mov %rax,%rdi
1f3a(5): call 0xfffff626(%rip)
1f3f(7): mov 0x20619a(%rip),%rbx
1f46(7): lea 0x365b(%rip),%rsi
1f4d(5): mov $0x5,%edx
1f52(2): xor %edi,%edi
1f54(5): call 0xfffff54c(%rip)
1f59(3): mov %rbx,%rdx
1f5c(3): mov %rax,%rsi
1f5f(5): mov $0x1,%edi
1f64(2): xor %eax,%eax
1f66(7): lea 0x33d7(%rip),%rbx
1f6d(5): call 0xfffff6b3(%rip)
1f72(7): lea 0x3757(%rip),%rsi
1f79(5): mov $0x5,%edx
1f7e(2): xor %edi,%edi
1f80(5): call 0xfffff520(%rip)
1f85(7): lea 0x33b8(%rip),%rdx
1f8c(3): mov %rax,%rsi
1f8f(5): mov $0x1,%edi
1f94(2): xor %eax,%eax
1f96(5): call 0xfffff68a(%rip)
1f9b(7): lea 0x33a8(%rip),%rax
1fa2(7): lea 0x33e2(%rip),%rcx
1fa9(9): mov $0x0,0x60(%rsp)
1fb2(9): mov $0x0,0x68(%rsp)
1fbb(3): mov %rsp,%rdx
1fbe(4): mov %rax,(%rsp)
1fc2(7): lea 0x3383(%rip),%rax
1fc9(5): mov %rcx,0x30(%rsp)
1fce(7): lea 0x33c0(%rip),%rcx
1fd5(5): mov %rax,0x8(%rsp)
1fda(7): lea 0x33e3(%rip),%rax
1fe1(5): mov %rcx,0x40(%rsp)
1fe6(7): lea 0x33b2(%rip),%rcx
1fed(5): mov %rax,0x10(%rsp)
1ff2(7): lea 0x3363(%rip),%rax
1ff9(5): mov %rcx,0x50(%rsp)
1ffe(5): mov %rax,0x18(%rsp)
2003(7): lea 0x3368(%rip),%rax
200a(5): mov %rax,0x20(%rsp)
200f(7): lea 0x3366(%rip),%rax
2016(5): mov %rax,0x28(%rsp)
201b(5): mov %rax,0x38(%rsp)
2020(5): mov %rax,0x48(%rsp)
2025(5): mov %rax,0x58(%rsp)
202a(6): nop 0x0(%rax,%rax,1)
2030(4): add $0x10,%rdx
2034(3): mov (%rdx),%rdi
2037(3): test %rdi,%rdi
203a(2): jz 0x15(%rip)
203c(5): mov $0x6,%ecx
2041(3): mov %rbx,%rsi
2044(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2046(3): setnbe %al
2049(2): sbb $0x0,%al
204b(2): test %al,%al
204d(2): jnz 0xffffffe3(%rip)
204f(4): mov 0x8(%rdx),%r12
2053(2): xor %edi,%edi
2055(5): mov $0x5,%edx
205a(7): lea 0x3348(%rip),%rsi
2061(3): test %r12,%r12
2064(6): jz 0xc7(%rip)
206a(5): call 0xfffff436(%rip)
206f(7): lea 0x371a(%rip),%rcx
2076(7): lea 0x3343(%rip),%rdx
207d(3): mov %rax,%rsi
2080(5): mov $0x1,%edi
2085(2): xor %eax,%eax
2087(5): call 0xfffff599(%rip)
208c(2): xor %esi,%esi
208e(5): mov $0x5,%edi
2093(5): call 0xfffff57d(%rip)
2098(3): test %rax,%rax
209b(2): jz 0x1e(%rip)
209d(7): lea 0x332a(%rip),%rsi
20a4(5): mov $0x3,%edx
20a9(3): mov %rax,%rdi
20ac(5): call 0xfffff374(%rip)
20b1(2): test %eax,%eax
20b3(6): jnz 0x10d(%rip)
20b9(7): lea 0x3312(%rip),%rsi
20c0(2): xor %edi,%edi
20c2(5): mov $0x5,%edx
20c7(5): call 0xfffff3d9(%rip)
20cc(7): lea 0x3271(%rip),%rcx
20d3(7): lea 0x36b6(%rip),%rdx
20da(3): mov %rax,%rsi
20dd(5): mov $0x1,%edi
20e2(2): xor %eax,%eax
20e4(5): call 0xfffff53c(%rip)
20e9(3): cmp %rbx,%r12
20ec(7): lea 0x3273(%rip),%rcx
20f3(7): lea 0x3d87(%rip),%rbx
20fa(4): cmove %rcx,%rbx
20fe(7): lea 0x36fb(%rip),%rsi
2105(2): xor %edi,%edi
2107(5): mov $0x5,%edx
210c(5): call 0xfffff394(%rip)
2111(3): mov %rbx,%rcx
2114(3): mov %rax,%rsi
2117(3): mov %r12,%rdx
211a(5): mov $0x1,%edi
211f(2): xor %eax,%eax
2121(5): call 0xfffff4ff(%rip)
2126(5): jmp 0xfffffd80(%rip)
212b(5): call 0xfffff375(%rip)
2130(7): lea 0x3659(%rip),%rcx
2137(7): lea 0x3282(%rip),%rdx
213e(3): mov %rax,%rsi
2141(5): mov $0x1,%edi
2146(2): xor %eax,%eax
2148(5): call 0xfffff4d8(%rip)
214d(2): xor %esi,%esi
214f(5): mov $0x5,%edi
2154(5): call 0xfffff4bc(%rip)
2159(3): test %rax,%rax
215c(2): jz 0x1a(%rip)
215e(7): lea 0x3269(%rip),%rsi
2165(5): mov $0x3,%edx
216a(3): mov %rax,%rdi
216d(5): call 0xfffff2b3(%rip)
2172(2): test %eax,%eax
2174(2): jnz 0x45(%rip)
2176(7): lea 0x3255(%rip),%rsi
217d(5): mov $0x5,%edx
2182(2): xor %edi,%edi
2184(7): lea 0x31b9(%rip),%r12
218b(7): lea 0x31d4(%rip),%rbx
2192(5): call 0xfffff30e(%rip)
2197(7): lea 0x31a6(%rip),%rcx
219e(7): lea 0x35eb(%rip),%rdx
21a5(3): mov %rax,%rsi
21a8(5): mov $0x1,%edi
21ad(2): xor %eax,%eax
21af(5): call 0xfffff471(%rip)
21b4(5): jmp 0xffffff4a(%rip)
21b9(7): lea 0x3184(%rip),%r12
21c0(7): mov 0x205ec1(%rip),%r13
21c7(7): lea 0x35ea(%rip),%rsi
21ce(2): xor %edi,%edi
21d0(5): mov $0x5,%edx
21d5(5): call 0xfffff2cb(%rip)
21da(3): mov %r13,%rsi
21dd(3): mov %rax,%rdi
21e0(5): call 0xfffff380(%rip)
21e5(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
21f0(7): mov %rdi,0x205ee1(%rip)
21f7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2200(7): mov %dil,0x205ec9(%rip)
2207(1): ret near (%rsp)

"close_stdout" :
2210(1): push %rbp
2211(1): push %rbx
2212(4): sub $0x8,%rsp
2216(7): mov 0x205e6b(%rip),%rdi
221d(5): call 0x2d93(%rip)
2222(2): test %eax,%eax
2224(2): jz 0x18(%rip)
2226(5): call 0xfffff1ea(%rip)
222b(7): cmp $0x0,0x205e9e(%rip)
2232(3): mov %rax,%rbx
2235(2): jz 0x1e(%rip)
2237(3): cmp $0x20,(%rax)
223a(2): jnz 0x19(%rip)
223c(7): mov 0x205e7d(%rip),%rdi
2243(5): call 0x2d6d(%rip)
2248(2): test %eax,%eax
224a(2): jnz 0x48(%rip)
224c(4): add $0x8,%rsp
2250(1): pop %rbx
2251(1): pop %rbp
2252(1): ret near (%rsp)
2253(7): lea 0x3695(%rip),%rsi
225a(2): xor %edi,%edi
225c(5): mov $0x5,%edx
2261(5): call 0xfffff23f(%rip)
2266(7): mov 0x205e6b(%rip),%rdi
226d(3): mov %rax,%rbp
2270(3): test %rdi,%rdi
2273(2): jz 0x2a(%rip)
2275(5): call 0x1f5b(%rip)
227a(2): mov (%rbx),%esi
227c(7): lea 0x3678(%rip),%rdx
2283(3): mov %rax,%rcx
2286(3): mov %rbp,%r8
2289(2): xor %edi,%edi
228b(2): xor %eax,%eax
228d(5): call 0xfffff3b3(%rip)
2292(6): mov 0x205d80(%rip),%edi
2298(5): call 0xfffff198(%rip)
229d(2): mov (%rbx),%esi
229f(7): lea 0x3659(%rip),%rdx
22a6(3): mov %rax,%rcx
22a9(2): xor %edi,%edi
22ab(2): xor %eax,%eax
22ad(5): call 0xfffff393(%rip)
22b2(2): jmp 0xffffffe0(%rip)

"fd_reopen" :
22c0(2): push %r13
22c2(2): push %r12
22c4(2): xor %eax,%eax
22c6(1): push %rbp
22c7(1): push %rbx
22c8(2): mov %edi,%ebp
22ca(3): mov %rsi,%rdi
22cd(2): mov %edx,%esi
22cf(2): mov %ecx,%edx
22d1(4): sub $0x8,%rsp
22d5(5): call 0xfffff37b(%rip)
22da(2): cmp %eax,%ebp
22dc(2): mov %eax,%ebx
22de(2): jz 0x2b(%rip)
22e0(2): test %eax,%eax
22e2(2): js 0x27(%rip)
22e4(2): mov %ebp,%esi
22e6(2): mov %eax,%edi
22e8(5): call 0xfffff218(%rip)
22ed(3): mov %eax,%r12d
22f0(5): call 0xfffff120(%rip)
22f5(3): mov (%rax),%r13d
22f8(3): mov %rax,%rbp
22fb(2): mov %ebx,%edi
22fd(5): call 0xfffff243(%rip)
2302(3): mov %r12d,%ebx
2305(4): mov %r13d,0x0(%rbp)
2309(4): add $0x8,%rsp
230d(2): mov %ebx,%eax
230f(1): pop %rbx
2310(1): pop %rbp
2311(2): pop %r12
2313(2): pop %r13
2315(1): ret near (%rsp)

"file_name_concat" :
2320(4): sub $0x8,%rsp
2324(5): call 0x1c(%rip)
2329(3): test %rax,%rax
232c(2): jz 0x7(%rip)
232e(4): add $0x8,%rsp
2332(1): ret near (%rsp)
2333(5): call 0x292d(%rip)

"mfile_name_concat" :
2340(2): push %r15
2342(2): push %r14
2344(3): mov %rdx,%r15
2347(2): push %r13
2349(2): push %r12
234b(3): mov %rdi,%r12
234e(1): push %rbp
234f(1): push %rbx
2350(3): mov %rsi,%rbp
2353(4): sub $0x18,%rsp
2357(5): call 0x2cd9(%rip)
235c(3): mov %rax,%rbx
235f(3): mov %rax,%rdi
2362(5): call 0x2d2e(%rip)
2367(3): sub %r12,%rbx
236a(3): mov %rax,%r13
236d(3): mov %rbp,%rdi
2370(3): add %rax,%rbx
2373(5): call 0xfffff14d(%rip)
2378(3): test %r13,%r13
237b(3): mov %rax,%r14
237e(2): jz 0x32(%rip)
2380(6): cmp $0x2f,0xffffffff(%r12,%rbx,1)
2386(6): jz 0xaa(%rip)
238c(2): xor %eax,%eax
238e(4): cmp $0x2f,0x0(%rbp)
2392(5): mov $0x0,%edx
2397(3): setnz %al
239a(4): mov %rax,(%rsp)
239e(5): mov $0x2f,%eax
23a3(3): cmove %edx,%eax
23a6(4): mov %al,0xf(%rsp)
23aa(2): jmp 0x24(%rip)
23ac(4): nop 0x0(%rax)
23b0(2): xor %eax,%eax
23b2(4): cmp $0x2f,0x0(%rbp)
23b6(5): mov $0x0,%edx
23bb(3): setz %al
23be(4): mov %rax,(%rsp)
23c2(5): mov $0x2e,%eax
23c7(3): cmovne %edx,%eax
23ca(4): mov %al,0xf(%rsp)
23ce(5): lea 0x1(%rbx,%r14,1),%rdi
23d3(4): add (%rsp),%rdi
23d7(5): call 0xfffff1e9(%rip)
23dc(3): test %rax,%rax
23df(3): mov %rax,%r13
23e2(2): jz 0x34(%rip)
23e4(3): mov %rax,%rdi
23e7(3): mov %rbx,%rdx
23ea(3): mov %r12,%rsi
23ed(5): call 0xfffff243(%rip)
23f2(5): movzx 0xf(%rsp),%ecx
23f7(4): mov (%rsp),%rdi
23fb(3): add %rax,%rdi
23fe(3): test %r15,%r15
2401(2): mov %cl,(%rax)
2403(2): jz 0x5(%rip)
2405(3): mov %rdi,(%r15)
2408(3): mov %r14,%rdx
240b(3): mov %rbp,%rsi
240e(5): call 0xfffff222(%rip)
2413(3): mov $0x0,(%rax)
2416(4): add $0x18,%rsp
241a(3): mov %r13,%rax
241d(1): pop %rbx
241e(1): pop %rbp
241f(2): pop %r12
2421(2): pop %r13
2423(2): pop %r14
2425(2): pop %r15
2427(1): ret near (%rsp)
2428(8): nop 0x0(%rax,%rax,1)
2430(8): mov $0x0,(%rsp)
2438(5): mov $0x0,0xf(%rsp)
243d(2): jmp 0xffffff91(%rip)

"parse_long_options" :
2440(2): push %r13
2442(2): push %r12
2444(3): mov %r8,%r13
2447(1): push %rbp
2448(1): push %rbx
2449(3): mov %rdx,%rbp
244c(3): mov %rcx,%r12
244f(7): sub $0xe8,%rsp
2456(2): test %al,%al
2458(2): jz 0x3c(%rip)
245a(5): movaps %xmm0,0x60(%rsp)
245f(5): movaps %xmm1,0x70(%rsp)
2464(8): movaps %xmm2,0x80(%rsp)
246c(8): movaps %xmm3,0x90(%rsp)
2474(8): movaps %xmm4,0xa0(%rsp)
247c(8): movaps %xmm5,0xb0(%rsp)
2484(8): movaps %xmm6,0xc0(%rsp)
248c(8): movaps %xmm7,0xd0(%rsp)
2494(9): mov $0x28,%rax
249d(5): mov %rax,0x28(%rsp)
24a2(2): xor %eax,%eax
24a4(3): cmp $0x2,%edi
24a7(6): mov 0x205bf3(%rip),%ebx
24ad(a): mov $0x0,0x205be9(%rip)
24b7(2): jz 0x39(%rip)
24b9(5): mov 0x28(%rsp),%rax
24be(9): xor $0x28,%rax
24c7(6): mov %ebx,0x205bd3(%rip)
24cd(a): mov $0x0,0x205bb9(%rip)
24d7(6): jnz 0xa3(%rip)
24dd(7): add $0xe8,%rsp
24e4(1): pop %rbx
24e5(1): pop %rbp
24e6(2): pop %r12
24e8(2): pop %r13
24ea(1): ret near (%rsp)
24eb(5): nop 0x0(%rax,%rax,1)
24f0(7): lea 0x205689(%rip),%rcx
24f7(7): lea 0x3404(%rip),%rdx
24fe(3): xor %r8d,%r8d
2501(5): mov %r9,0x8(%rsp)
2506(5): call 0xffffefda(%rip)
250b(3): cmp $0xff,%eax
250e(2): jz 0xffffffab(%rip)
2510(3): cmp $0x68,%eax
2513(5): mov 0x8(%rsp),%r9
2518(2): jz 0x58(%rip)
251a(3): cmp $0x76,%eax
251d(2): jnz 0xffffff9c(%rip)
251f(8): lea 0x110(%rsp),%rax
2527(7): mov 0x205b5a(%rip),%rdi
252e(5): lea 0x10(%rsp),%r8
2533(3): mov %r13,%rcx
2536(3): mov %r12,%rdx
2539(3): mov %rbp,%rsi
253c(5): mov %rax,0x18(%rsp)
2541(5): lea 0x30(%rsp),%rax
2546(8): mov $0x30,0x10(%rsp)
254e(8): mov $0x30,0x14(%rsp)
2556(5): mov %rax,0x20(%rsp)
255b(5): call 0x22d5(%rip)
2560(2): xor %edi,%edi
2562(5): call 0xfffff12e(%rip)
2567(9): nop 0x0(%rax,%rax,1)
2570(2): xor %edi,%edi
2572(3): call %r9
2575(5): jmp 0xffffff44(%rip)
257a(5): call 0xffffef56(%rip)

"parse_gnu_standard_options_only" :
2580(2): push %r14
2582(2): push %r13
2584(3): mov %r8,%r14
2587(2): push %r12
2589(1): push %rbp
258a(3): mov %rdx,%r12
258d(1): push %rbx
258e(3): mov %rcx,%r13
2591(7): sub $0xd0,%rsp
2598(2): test %al,%al
259a(8): mov 0x100(%rsp),%rbp
25a2(2): jz 0x39(%rip)
25a4(5): movaps %xmm0,0x50(%rsp)
25a9(5): movaps %xmm1,0x60(%rsp)
25ae(5): movaps %xmm2,0x70(%rsp)
25b3(8): movaps %xmm3,0x80(%rsp)
25bb(8): movaps %xmm4,0x90(%rsp)
25c3(8): movaps %xmm5,0xa0(%rsp)
25cb(8): movaps %xmm6,0xb0(%rsp)
25d3(8): movaps %xmm7,0xc0(%rsp)
25db(9): mov $0x28,%rax
25e4(5): mov %rax,0x18(%rsp)
25e9(2): xor %eax,%eax
25eb(7): lea 0x388f(%rip),%rdx
25f2(7): lea 0x3309(%rip),%rax
25f9(3): test %r9b,%r9b
25fc(7): lea 0x20557d(%rip),%rcx
2603(4): cmove %rax,%rdx
2607(3): xor %r8d,%r8d
260a(6): mov 0x205a90(%rip),%ebx
2610(a): mov $0x1,0x205a86(%rip)
261a(5): call 0xffffeec6(%rip)
261f(3): cmp $0xff,%eax
2622(2): jz 0x66(%rip)
2624(3): cmp $0x68,%eax
2627(6): jz 0x89(%rip)
262d(3): cmp $0x76,%eax
2630(2): jnz 0x50(%rip)
2632(8): lea 0x108(%rsp),%rax
263a(7): mov 0x205a47(%rip),%rdi
2641(3): mov %rsp,%r8
2644(3): mov %r14,%rcx
2647(3): mov %r13,%rdx
264a(3): mov %r12,%rsi
264d(5): mov %rax,0x8(%rsp)
2652(5): lea 0x20(%rsp),%rax
2657(7): mov $0x30,(%rsp)
265e(8): mov $0x30,0x4(%rsp)
2666(5): mov %rax,0x10(%rsp)
266b(5): call 0x21c5(%rip)
2670(2): xor %edi,%edi
2672(5): call 0xfffff01e(%rip)
2677(9): nop 0x0(%rax,%rax,1)
2680(6): mov 0x205992(%rip),%edi
2686(2): call %rbp
2688(5): mov 0x18(%rsp),%rax
268d(9): xor $0x28,%rax
2696(6): mov %ebx,0x205a04(%rip)
269c(2): jnz 0x1a(%rip)
269e(7): add $0xd0,%rsp
26a5(1): pop %rbx
26a6(1): pop %rbp
26a7(2): pop %r12
26a9(2): pop %r13
26ab(2): pop %r14
26ad(1): ret near (%rsp)
26ae(2): nop 
26b0(2): xor %edi,%edi
26b2(2): call %rbp
26b4(2): jmp 0xffffffd4(%rip)
26b6(5): call 0xffffee1a(%rip)

"set_program_name" :
26c0(3): test %rdi,%rdi
26c3(1): push %rbx
26c4(2): jz 0x79(%rip)
26c6(5): mov $0x2f,%esi
26cb(3): mov %rdi,%rbx
26ce(5): call 0xffffee42(%rip)
26d3(3): test %rax,%rax
26d6(2): jz 0x57(%rip)
26d8(4): lea 0x1(%rax),%r8
26dc(3): mov %r8,%rdx
26df(3): sub %rbx,%rdx
26e2(4): cmp $0x6,%rdx
26e6(2): jle 0x47(%rip)
26e8(4): lea 0xfffffffa(%rax),%rsi
26ec(7): lea 0x325d(%rip),%rdi
26f3(5): mov $0x7,%ecx
26f8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
26fa(3): setnbe %dl
26fd(3): sbb $0x0,%dl
2700(2): test %dl,%dl
2702(2): jnz 0x2b(%rip)
2704(7): lea 0x324d(%rip),%rdi
270b(5): mov $0x3,%ecx
2710(3): mov %r8,%rsi
2713(3): mov %r8,%rbx
2716(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2718(3): setnbe %dl
271b(3): sbb $0x0,%dl
271e(2): test %dl,%dl
2720(2): jnz 0xd(%rip)
2722(4): lea 0x4(%rax),%rbx
2726(7): mov %rbx,0x205953(%rip)
272d(7): mov %rbx,0x2059ac(%rip)
2734(7): mov %rbx,0x20595d(%rip)
273b(1): pop %rbx
273c(1): ret near (%rsp)
273d(7): mov 0x20597c(%rip),%rcx
2744(7): lea 0x31cd(%rip),%rdi
274b(5): mov $0x37,%edx
2750(5): mov $0x1,%esi
2755(5): call 0xffffef4b(%rip)
275a(5): call 0xffffeca6(%rip)

"gettext_quote.part.1" :
2760(1): push %rbp
2761(1): push %rbx
2762(3): mov %rdi,%rbp
2765(2): mov %esi,%ebx
2767(4): sub $0x8,%rsp
276b(5): call 0x29d5(%rip)
2770(3): movzx (%rax),%edx
2773(3): and $0xdf,%edx
2776(3): cmp $0x55,%dl
2779(2): jz 0x77(%rip)
277b(3): cmp $0x47,%dl
277e(2): jz 0x22(%rip)
2780(7): lea 0x31e4(%rip),%rax
2787(7): lea 0x31df(%rip),%rdx
278e(3): cmp $0x9,%ebx
2791(4): cmovne %rdx,%rax
2795(4): add $0x8,%rsp
2799(1): pop %rbx
279a(1): pop %rbp
279b(1): ret near (%rsp)
279c(4): nop 0x0(%rax)
27a0(4): movzx 0x1(%rax),%edx
27a4(3): and $0xdf,%edx
27a7(3): cmp $0x42,%dl
27aa(2): jnz 0xffffffd6(%rip)
27ac(4): cmp $0x31,0x2(%rax)
27b0(2): jnz 0xffffffd0(%rip)
27b2(4): cmp $0x38,0x3(%rax)
27b6(2): jnz 0xffffffca(%rip)
27b8(4): cmp $0x30,0x4(%rax)
27bc(2): jnz 0xffffffc4(%rip)
27be(4): cmp $0x33,0x5(%rax)
27c2(2): jnz 0xffffffbe(%rip)
27c4(4): cmp $0x30,0x6(%rax)
27c8(2): jnz 0xffffffb8(%rip)
27ca(4): cmp $0x0,0x7(%rax)
27ce(2): jnz 0xffffffb2(%rip)
27d0(4): cmp $0x60,0x0(%rbp)
27d4(7): lea 0x3189(%rip),%rax
27db(7): lea 0x3186(%rip),%rdx
27e2(4): cmovne %rdx,%rax
27e6(4): add $0x8,%rsp
27ea(1): pop %rbx
27eb(1): pop %rbp
27ec(1): ret near (%rsp)
27ed(3): nop (%rax)
27f0(4): movzx 0x1(%rax),%edx
27f4(3): and $0xdf,%edx
27f7(3): cmp $0x54,%dl
27fa(2): jnz 0xffffff86(%rip)
27fc(4): movzx 0x2(%rax),%edx
2800(3): and $0xdf,%edx
2803(3): cmp $0x46,%dl
2806(6): jnz 0xffffff7a(%rip)
280c(4): cmp $0x2d,0x3(%rax)
2810(6): jnz 0xffffff70(%rip)
2816(4): cmp $0x38,0x4(%rax)
281a(6): jnz 0xffffff66(%rip)
2820(4): cmp $0x0,0x5(%rax)
2824(6): jnz 0xffffff5c(%rip)
282a(4): cmp $0x60,0x0(%rbp)
282e(7): lea 0x3127(%rip),%rax
2835(7): lea 0x3124(%rip),%rdx
283c(4): cmovne %rdx,%rax
2840(4): add $0x8,%rsp
2844(1): pop %rbx
2845(1): pop %rbp
2846(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2850(2): push %r15
2852(2): push %r14
2854(3): mov %r8d,%r15d
2857(2): push %r13
2859(2): push %r12
285b(3): mov %rdi,%r14
285e(1): push %rbp
285f(1): push %rbx
2860(3): mov %r9d,%ebx
2863(3): mov %rsi,%r13
2866(3): mov %rcx,%rbp
2869(3): and $0x2,%ebx
286c(7): sub $0xb8,%rsp
2873(8): mov 0xf0(%rsp),%rax
287b(5): mov %rdx,0x10(%rsp)
2880(5): mov %r8d,0x8(%rsp)
2885(5): mov %r9d,0x78(%rsp)
288a(5): mov %rax,0x20(%rsp)
288f(8): mov 0xf8(%rsp),%rax
2897(5): mov %rax,0x68(%rsp)
289c(8): mov 0x100(%rsp),%rax
28a4(5): mov %rax,0x60(%rsp)
28a9(9): mov $0x28,%rax
28b2(8): mov %rax,0xa8(%rsp)
28ba(2): xor %eax,%eax
28bc(5): call 0xffffebf4(%rip)
28c1(4): cmp $0xa,%r15d
28c5(5): mov %rax,0x58(%rsp)
28ca(6): jnbe 0x11b5(%rip)
28d0(7): lea 0x30e9(%rip),%rcx
28d7(3): mov %r15d,%edx
28da(4): movsxd 0x0(%rcx,%rdx,4),%rax
28de(3): add %rcx,%rax
28e1(2): jmp %rax
28e3(5): mov $0x1,0xe(%rsp)
28e8(5): mov $0x0,0x7c(%rsp)
28ed(3): xor %r12d,%r12d
28f0(9): mov $0x0,0x50(%rsp)
28f9(5): mov $0x1,0xf(%rsp)
28fe(5): mov $0x0,0xd(%rsp)
2903(7): lea 0x3063(%rip),%rax
290a(9): mov $0x1,0x18(%rsp)
2913(3): xor %r15d,%r15d
2916(8): mov $0x2,0x8(%rsp)
291e(5): mov %rax,0x48(%rsp)
2923(3): xor %r11d,%r11d
2926(3): mov %rbp,%rax
2929(3): mov %r12d,%r8d
292c(3): mov %r11,%rbp
292f(3): mov %rax,%r11
2932(6): nop 0x0(%rax,%rax,1)
2938(3): cmp %rbp,%r11
293b(4): setnz %r12b
293f(4): cmp $0xffffffff,%r11
2943(2): jnz 0xf(%rip)
2945(5): mov 0x10(%rsp),%rax
294a(4): cmp $0x0,0x0(%rax,%rbp,1)
294e(4): setnz %r12b
2952(3): test %r12b,%r12b
2955(6): jz 0x65b(%rip)
295b(5): cmp $0x2,0x8(%rsp)
2960(5): mov 0x10(%rsp),%rdi
2965(4): lea 0x0(%rdi,%rbp,1),%r9
2969(3): setnz %al
296c(4): and 0xd(%rsp),%al
2970(3): mov %eax,%r10d
2973(6): jz 0xad(%rip)
2979(5): mov 0x18(%rsp),%rax
297e(3): test %rax,%rax
2981(6): jz 0x42f(%rip)
2987(4): cmp $0xffffffff,%r11
298b(5): lea 0x0(%rbp,%rax,1),%rbx
2990(2): jnz 0x30(%rip)
2992(4): cmp $0x1,%rax
2996(2): jbe 0x2a(%rip)
2998(5): mov %r8b,0x38(%rsp)
299d(5): mov %r10b,0x30(%rsp)
29a2(5): mov %r9,0x28(%rsp)
29a7(5): call 0xffffeb19(%rip)
29ac(6): movzx 0x38(%rsp),%r8d
29b2(6): movzx 0x30(%rsp),%r10d
29b8(3): mov %rax,%r11
29bb(5): mov 0x28(%rsp),%r9
29c0(3): cmp %r11,%rbx
29c3(5): mov %r10b,0x28(%rsp)
29c8(6): jnbe 0x5b8(%rip)
29ce(5): mov 0x18(%rsp),%rdx
29d3(5): mov 0x48(%rsp),%rsi
29d8(3): mov %r9,%rdi
29db(5): mov %r11,0x40(%rsp)
29e0(5): mov %r8b,0x38(%rsp)
29e5(5): mov %r9,0x30(%rsp)
29ea(5): call 0xffffeb66(%rip)
29ef(2): test %eax,%eax
29f1(5): mov 0x30(%rsp),%r9
29f6(6): movzx 0x38(%rsp),%r8d
29fc(5): mov 0x40(%rsp),%r11
2a01(6): jnz 0x57f(%rip)
2a07(5): cmp $0x0,0xf(%rsp)
2a0c(6): movzx 0x28(%rsp),%r10d
2a12(6): jnz 0xf83(%rip)
2a18(8): nop 0x0(%rax,%rax,1)
2a20(4): movzx (%r9),%ebx
2a24(3): cmp $0x7e,%bl
2a27(6): jnbe 0x321(%rip)
2a2d(7): lea 0x2fb8(%rip),%rcx
2a34(3): movzx %bl,%edx
2a37(4): movsxd 0x0(%rcx,%rdx,4),%rax
2a3b(3): add %rcx,%rax
2a3e(2): jmp %rax
2a40(3): xor %r10d,%r10d
2a43(4): cmp $0x1,%r11
2a47(3): setnz %al
2a4a(4): cmp $0xffffffff,%r11
2a4e(2): jnz 0xe(%rip)
2a50(5): mov 0x10(%rsp),%rax
2a55(4): cmp $0x0,0x1(%rax)
2a59(3): setnz %al
2a5c(5): cmp $0x2,0x8(%rsp)
2a61(3): setz %dl
2a64(2): test %al,%al
2a66(6): jz 0x252(%rip)
2a6c(3): xor %r12d,%r12d
2a6f(2): xor %eax,%eax
2a71(7): nop 0x0(%rax)
2a78(5): cmp $0x1,0xd(%rsp)
2a7d(6): jnz 0x115(%rip)
2a83(2): test %dl,%dl
2a85(6): jnz 0x10d(%rip)
2a8b(5): mov 0x20(%rsp),%rsi
2a90(3): test %rsi,%rsi
2a93(2): jz 0x16(%rip)
2a95(2): mov %ebx,%edx
2a97(3): shr $0x5,%dl
2a9a(3): movzx %dl,%edx
2a9d(3): mov 0x0(%rsi,%rdx,4),%edx
2aa0(3): bt %ebx,%edx
2aa3(6): jb 0x150(%rip)
2aa9(3): test %r10b,%r10b
2aac(6): jnz 0x147(%rip)
2ab2(3): xor $0x1,%eax
2ab5(4): add $0x1,%rbp
2ab9(3): and %r8d,%eax
2abc(2): test %al,%al
2abe(2): jz 0x22(%rip)
2ac0(3): cmp %r15,%r13
2ac3(2): jbe 0x7(%rip)
2ac5(5): mov $0x27,0x0(%r14,%r15,1)
2aca(4): lea 0x1(%r15),%rax
2ace(3): cmp %rax,%r13
2ad1(2): jbe 0x8(%rip)
2ad3(6): mov $0x27,0x1(%r14,%r15,1)
2ad9(4): add $0x2,%r15
2add(3): xor %r8d,%r8d
2ae0(3): cmp %r13,%r15
2ae3(2): jnb 0x6(%rip)
2ae5(4): mov %bl,0x0(%r14,%r15,1)
2ae9(5): movzx 0xe(%rsp),%edi
2aee(4): add $0x1,%r15
2af2(5): mov $0x0,%eax
2af7(3): test %r12b,%r12b
2afa(3): cmove %eax,%edi
2afd(5): mov %dil,0xe(%rsp)
2b02(5): jmp 0xfffffe36(%rip)
2b07(9): nop 0x0(%rax,%rax,1)
2b10(3): xor %r10d,%r10d
2b13(4): mov 0x8(%rsp),%eax
2b17(3): cmp $0x2,%eax
2b1a(6): jz 0x5be(%rip)
2b20(3): cmp $0x5,%eax
2b23(6): jz 0x575(%rip)
2b29(3): cmp $0x2,%eax
2b2c(5): mov $0x3f,%ebx
2b31(3): setz %dl
2b34(3): xor %r12d,%r12d
2b37(2): xor %eax,%eax
2b39(5): jmp 0xffffff3f(%rip)
2b3e(2): nop 
2b40(3): xor %r10d,%r10d
2b43(5): cmp $0x2,0x8(%rsp)
2b48(6): jz 0x508(%rip)
2b4e(5): mov %r12b,0x7c(%rsp)
2b53(2): xor %edx,%edx
2b55(2): xor %eax,%eax
2b57(5): mov $0x27,%ebx
2b5c(5): jmp 0xffffff1c(%rip)
2b61(7): nop 0x0(%rax)
2b68(5): mov $0x9,%edx
2b6d(5): mov $0x74,%ebx
2b72(5): cmp $0x2,0x8(%rsp)
2b77(3): setz %al
2b7a(4): and 0xf(%rsp),%al
2b7e(6): jnz 0x150(%rip)
2b84(5): cmp $0x0,0xd(%rsp)
2b89(2): jnz 0x67(%rip)
2b8b(2): mov %edx,%ebx
2b8d(3): xor %r12d,%r12d
2b90(2): xor %eax,%eax
2b92(5): cmp $0x0,0xf(%rsp)
2b97(6): jnz 0xfffffef4(%rip)
2b9d(5): jmp 0xffffff0c(%rip)
2ba2(6): nop 0x0(%rax,%rax,1)
2ba8(5): mov $0x8,%edx
2bad(5): mov $0x62,%ebx
2bb2(2): jmp 0xffffffd2(%rip)
2bb4(4): nop 0x0(%rax)
2bb8(5): cmp $0x2,0x8(%rsp)
2bbd(6): jz 0x3d3(%rip)
2bc3(5): cmp $0x0,0xd(%rsp)
2bc8(6): jz 0x218(%rip)
2bce(5): cmp $0x0,0xf(%rsp)
2bd3(6): jz 0x20d(%rip)
2bd9(6): cmp $0x0,0x18(%rsp)
2bdf(6): jnz 0x3bc(%rip)
2be5(5): mov $0x5c,%ebx
2bea(6): nop 0x0(%rax,%rax,1)
2bf0(3): xor %r12d,%r12d
2bf3(5): cmp $0x2,0x8(%rsp)
2bf8(3): setz %dl
2bfb(5): cmp $0x0,0xf(%rsp)
2c00(2): mov %edx,%eax
2c02(6): jnz 0x856(%rip)
2c08(3): mov %r8d,%eax
2c0b(3): xor $0x1,%eax
2c0e(2): and %dl,%al
2c10(2): jz 0x31(%rip)
2c12(3): cmp %r15,%r13
2c15(2): jbe 0x7(%rip)
2c17(5): mov $0x27,0x0(%r14,%r15,1)
2c1c(4): lea 0x1(%r15),%rdx
2c20(3): cmp %rdx,%r13
2c23(2): jbe 0x8(%rip)
2c25(6): mov $0x24,0x1(%r14,%r15,1)
2c2b(4): lea 0x2(%r15),%rdx
2c2f(3): cmp %rdx,%r13
2c32(2): jbe 0x8(%rip)
2c34(6): mov $0x27,0x2(%r14,%r15,1)
2c3a(4): add $0x3,%r15
2c3e(3): mov %eax,%r8d
2c41(3): cmp %r15,%r13
2c44(2): jbe 0x7(%rip)
2c46(5): mov $0x5c,0x0(%r14,%r15,1)
2c4b(4): add $0x1,%r15
2c4f(4): add $0x1,%rbp
2c53(5): jmp 0xfffffe8d(%rip)
2c58(8): nop 0x0(%rax,%rax,1)
2c60(5): cmp $0x0,0xd(%rsp)
2c65(6): jnz 0x1ce(%rip)
2c6b(2): xor %edx,%edx
2c6d(5): test $0x1,0x78(%rsp)
2c72(6): jz 0xffffff19(%rip)
2c78(4): add $0x1,%rbp
2c7c(5): jmp 0xfffffcbc(%rip)
2c81(7): nop 0x0(%rax)
2c88(5): cmp $0x2,0x8(%rsp)
2c8d(3): setz %dl
2c90(2): xor %eax,%eax
2c92(5): jmp 0xfffffde6(%rip)
2c97(9): nop 0x0(%rax,%rax,1)
2ca0(5): mov $0x7,%edx
2ca5(5): mov $0x61,%ebx
2caa(5): jmp 0xfffffeda(%rip)
2caf(1): nop 
2cb0(5): cmp $0x2,0x8(%rsp)
2cb5(3): setz %dl
2cb8(3): test %rbp,%rbp
2cbb(6): jnz 0xfffffdb1(%rip)
2cc1(5): movzx 0xf(%rsp),%eax
2cc6(2): and %dl,%al
2cc8(6): jz 0xfffffdb0(%rip)
2cce(3): mov %r11,%rbp
2cd1(8): mov $0x2,0x8(%rsp)
2cd9(5): jmp 0x700(%rip)
2cde(2): nop 
2ce0(5): cmp $0x2,0x8(%rsp)
2ce5(3): setz %dl
2ce8(3): xor %r12d,%r12d
2ceb(2): jmp 0xffffffd6(%rip)
2ced(3): nop (%rax)
2cf0(5): cmp $0x2,0x8(%rsp)
2cf5(5): mov $0x20,%ebx
2cfa(3): setz %dl
2cfd(2): jmp 0xffffffc4(%rip)
2cff(1): nop 
2d00(5): mov $0xd,%edx
2d05(5): mov $0x72,%ebx
2d0a(5): jmp 0xfffffe68(%rip)
2d0f(1): nop 
2d10(5): mov $0xc,%edx
2d15(5): mov $0x66,%ebx
2d1a(5): jmp 0xfffffe6a(%rip)
2d1f(1): nop 
2d20(5): mov $0xb,%edx
2d25(5): mov $0x76,%ebx
2d2a(5): jmp 0xfffffe5a(%rip)
2d2f(1): nop 
2d30(5): mov $0xa,%edx
2d35(5): mov $0x6e,%ebx
2d3a(5): jmp 0xfffffe38(%rip)
2d3f(1): nop 
2d40(3): xor %r10d,%r10d
2d43(5): nop 0x0(%rax,%rax,1)
2d48(6): cmp $0x1,0x58(%rsp)
2d4e(6): jnz 0x3aa(%rip)
2d54(5): mov %r11,0x38(%rsp)
2d59(5): mov %r8b,0x30(%rsp)
2d5e(5): mov %r10b,0x28(%rsp)
2d63(5): call 0xffffe97d(%rip)
2d68(3): mov (%rax),%rcx
2d6b(3): movzx %bl,%edx
2d6e(6): movzx 0x28(%rsp),%r10d
2d74(6): movzx 0x30(%rsp),%r8d
2d7a(5): mov 0x38(%rsp),%r11
2d7f(5): mov $0x1,%edi
2d84(4): movzx 0x0(%rcx,%rdx,2),%eax
2d88(4): and $0x4000,%ax
2d8c(4): setnz %r12b
2d90(3): setz %al
2d93(4): and 0xd(%rsp),%al
2d97(2): test %al,%al
2d99(6): jnz 0x998(%rip)
2d9f(5): cmp $0x2,0x8(%rsp)
2da4(3): setz %dl
2da7(5): jmp 0xfffffcd1(%rip)
2dac(4): nop 0x0(%rax)
2db0(4): movzx (%r9),%ebx
2db4(3): cmp $0x7e,%bl
2db7(2): jnbe 0xffffff89(%rip)
2db9(7): lea 0x2e28(%rip),%rcx
2dc0(3): movzx %bl,%edx
2dc3(4): movsxd 0x0(%rcx,%rdx,4),%rax
2dc7(3): add %rcx,%rax
2dca(2): jmp %rax
2dcc(4): nop 0x0(%rax)
2dd0(3): xor %r10d,%r10d
2dd3(5): cmp $0x0,0xd(%rsp)
2dd8(6): jnz 0xfffffdf6(%rip)
2dde(2): nop 
2de0(5): mov $0x5c,%edx
2de5(5): mov $0x5c,%ebx
2dea(5): jmp 0xfffffd9a(%rip)
2def(1): nop 
2df0(5): mov $0xc,%edx
2df5(3): xor %r10d,%r10d
2df8(5): mov $0x66,%ebx
2dfd(5): jmp 0xfffffd87(%rip)
2e02(6): nop 0x0(%rax,%rax,1)
2e08(5): mov $0xa,%edx
2e0d(3): xor %r10d,%r10d
2e10(5): mov $0x6e,%ebx
2e15(5): jmp 0xfffffd5d(%rip)
2e1a(6): nop 0x0(%rax,%rax,1)
2e20(5): mov $0x61,%ebx
2e25(5): jmp 0xfffffdcb(%rip)
2e2a(6): nop 0x0(%rax,%rax,1)
2e30(3): xor %r10d,%r10d
2e33(5): cmp $0x2,0x8(%rsp)
2e38(3): setz %dl
2e3b(5): cmp $0x0,0xf(%rsp)
2e40(6): jnz 0xb9a(%rip)
2e46(3): mov %r8d,%eax
2e49(3): mov %r15,%rcx
2e4c(3): xor $0x1,%eax
2e4f(2): and %dl,%al
2e51(2): jz 0x2f(%rip)
2e53(3): cmp %r15,%r13
2e56(2): jbe 0x7(%rip)
2e58(5): mov $0x27,0x0(%r14,%r15,1)
2e5d(4): lea 0x1(%r15),%rcx
2e61(3): cmp %rcx,%r13
2e64(2): jbe 0x8(%rip)
2e66(6): mov $0x24,0x1(%r14,%r15,1)
2e6c(4): lea 0x2(%r15),%rcx
2e70(3): cmp %rcx,%r13
2e73(6): jnbe 0x636(%rip)
2e79(4): lea 0x3(%r15),%rcx
2e7d(3): mov %eax,%r8d
2e80(3): cmp %rcx,%r13
2e83(2): jbe 0x7(%rip)
2e85(5): mov $0x5c,0x0(%r14,%rcx,1)
2e8a(5): cmp $0x2,0x8(%rsp)
2e8f(4): lea 0x1(%rcx),%r15
2e93(6): jz 0x606(%rip)
2e99(4): lea 0x1(%rbp),%rax
2e9d(3): cmp %r11,%rax
2ea0(2): jnb 0x1b(%rip)
2ea2(5): mov 0x10(%rsp),%rax
2ea7(5): movzx 0x1(%rax,%rbp,1),%eax
2eac(4): mov %al,0x28(%rsp)
2eb0(3): sub $0x30,%eax
2eb3(2): cmp $0x9,%al
2eb5(6): jbe 0x834(%rip)
2ebb(3): mov %r12d,%eax
2ebe(5): mov $0x30,%ebx
2ec3(3): xor %r12d,%r12d
2ec6(5): jmp 0xfffffbb2(%rip)
2ecb(5): nop 0x0(%rax,%rax,1)
2ed0(5): cmp $0x2,0x8(%rsp)
2ed5(3): mov %r10d,%r12d
2ed8(3): setz %dl
2edb(3): xor %r10d,%r10d
2ede(2): xor %eax,%eax
2ee0(5): jmp 0xfffffb98(%rip)
2ee5(3): nop (%rax)
2ee8(5): cmp $0x2,0x8(%rsp)
2eed(3): setz %dl
2ef0(3): xor %r10d,%r10d
2ef3(5): jmp 0xfffffdc5(%rip)
2ef8(8): nop 0x0(%rax,%rax,1)
2f00(5): cmp $0x2,0x8(%rsp)
2f05(3): setz %dl
2f08(3): xor %r10d,%r10d
2f0b(3): xor %r12d,%r12d
2f0e(5): jmp 0xfffffdb3(%rip)
2f13(5): nop 0x0(%rax,%rax,1)
2f18(5): cmp $0x2,0x8(%rsp)
2f1d(3): mov %r10d,%r12d
2f20(5): mov $0x20,%ebx
2f25(3): setz %dl
2f28(3): xor %r10d,%r10d
2f2b(5): jmp 0xfffffd96(%rip)
2f30(5): mov $0xd,%edx
2f35(3): xor %r10d,%r10d
2f38(5): mov $0x72,%ebx
2f3d(5): jmp 0xfffffc35(%rip)
2f42(6): nop 0x0(%rax,%rax,1)
2f48(5): mov $0x76,%ebx
2f4d(5): jmp 0xfffffca3(%rip)
2f52(6): nop 0x0(%rax,%rax,1)
2f58(5): mov $0x9,%edx
2f5d(3): xor %r10d,%r10d
2f60(5): mov $0x74,%ebx
2f65(5): jmp 0xfffffc0d(%rip)
2f6a(6): nop 0x0(%rax,%rax,1)
2f70(5): mov $0x62,%ebx
2f75(5): jmp 0xfffffc7b(%rip)
2f7a(6): nop 0x0(%rax,%rax,1)
2f80(3): xor %r10d,%r10d
2f83(5): jmp 0xfffffa9d(%rip)
2f88(8): nop 0x0(%rax,%rax,1)
2f90(5): cmp $0x0,0xf(%rsp)
2f95(6): jnz 0x96b(%rip)
2f9b(4): add $0x1,%rbp
2f9f(3): mov %r8d,%eax
2fa2(3): xor %r12d,%r12d
2fa5(5): mov $0x5c,%ebx
2faa(5): jmp 0xfffffb12(%rip)
2faf(1): nop 
2fb0(5): cmp $0x2,0x8(%rsp)
2fb5(5): movzx 0xf(%rsp),%ebx
2fba(3): mov %r8d,%r12d
2fbd(3): mov %r11,%rbp
2fc0(3): setz %dl
2fc3(2): mov %ebx,%eax
2fc5(3): test %r15,%r15
2fc8(3): setz %cl
2fcb(2): and %edx,%eax
2fcd(2): and %cl,%al
2fcf(6): jnz 0xa67(%rip)
2fd5(2): mov %ebx,%eax
2fd7(3): xor $0x1,%eax
2fda(2): and %al,%dl
2fdc(6): jz 0x970(%rip)
2fe2(5): cmp $0x0,0x7c(%rsp)
2fe7(6): jz 0x963(%rip)
2fed(5): cmp $0x0,0xe(%rsp)
2ff2(6): jnz 0x9fb(%rip)
2ff8(3): test %r13,%r13
2ffb(3): setz %al
2ffe(6): cmp $0x0,0x50(%rsp)
3004(3): setnz %dl
3007(2): and %dl,%al
3009(6): jz 0xa23(%rip)
300f(5): mov 0x50(%rsp),%r13
3014(7): lea 0x2952(%rip),%rbx
301b(4): mov $0x27,(%r14)
301f(8): mov $0x2,0x8(%rsp)
3027(6): mov $0x1,%r15d
302d(9): mov $0x1,0x18(%rsp)
3036(5): mov $0x0,0xf(%rsp)
303b(5): mov %rbx,0x48(%rsp)
3040(4): mov %al,0x7c(%rsp)
3044(5): jmp 0xfffff8df(%rip)
3049(7): nop 0x0(%rax)
3050(5): cmp $0x0,0xf(%rsp)
3055(6): jnz 0x8ab(%rip)
305b(3): test %r13,%r13
305e(6): jz 0x402(%rip)
3064(2): xor %edx,%edx
3066(6): cmp $0x0,0x50(%rsp)
306c(6): jnz 0x3f4(%rip)
3072(5): mov %r13,0x50(%rsp)
3077(4): add $0x3,%r15
307b(2): xor %eax,%eax
307d(5): mov %r12b,0x7c(%rsp)
3082(3): xor %r8d,%r8d
3085(3): mov %rdx,%r13
3088(5): mov $0x27,%ebx
308d(5): jmp 0xfffffa1c(%rip)
3092(6): nop 0x0(%rax,%rax,1)
3098(5): test $0x4,0x78(%rsp)
309d(2): jz 0x23(%rip)
309f(4): lea 0x2(%rbp),%rcx
30a3(3): cmp %r11,%rcx
30a6(2): jnb 0x1a(%rip)
30a8(5): mov 0x10(%rsp),%rax
30ad(5): cmp $0x3f,0x1(%rax,%rbp,1)
30b2(6): jz 0x790(%rip)
30b8(8): nop 0x0(%rax,%rax,1)
30c0(2): xor %edx,%edx
30c2(3): xor %r12d,%r12d
30c5(2): xor %eax,%eax
30c7(5): mov $0x3f,%ebx
30cc(5): jmp 0xfffff9ac(%rip)
30d1(7): nop 0x0(%rax)
30d8(5): cmp $0x0,0xf(%rsp)
30dd(6): jnz 0x823(%rip)
30e3(3): xor %r12d,%r12d
30e6(2): xor %eax,%eax
30e8(5): mov $0x3f,%ebx
30ed(5): jmp 0xfffff9bc(%rip)
30f2(6): nop 0x0(%rax,%rax,1)
30f8(8): lea 0xa0(%rsp),%rax
3100(4): cmp $0xffffffff,%r11
3104(c): mov $0x0,0xa0(%rsp)
3110(5): mov %rax,0x28(%rsp)
3115(2): jnz 0x2f(%rip)
3117(5): mov 0x10(%rsp),%rdi
311c(5): mov %r8b,0x40(%rsp)
3121(5): mov %r10b,0x38(%rsp)
3126(5): mov %r9,0x30(%rsp)
312b(5): call 0xffffe395(%rip)
3130(6): movzx 0x40(%rsp),%r8d
3136(6): movzx 0x38(%rsp),%r10d
313c(3): mov %rax,%r11
313f(5): mov 0x30(%rsp),%r9
3144(8): lea 0x9c(%rsp),%rax
314c(2): xor %ecx,%ecx
314e(4): mov %bl,0x7e(%rsp)
3152(5): mov %r8b,0x7d(%rsp)
3157(3): mov %rcx,%rbx
315a(8): mov %r9,0x88(%rsp)
3162(5): mov %rax,0x38(%rsp)
3167(5): mov %r10b,0x7f(%rsp)
316c(8): mov %r15,0x80(%rsp)
3174(5): mov %r14,0x40(%rsp)
3179(5): mov %r13,0x70(%rsp)
317e(5): mov %r11,0x30(%rsp)
3183(5): mov 0x10(%rsp),%rax
3188(5): lea 0x0(%rbp,%rbx,1),%r14
318d(5): mov 0x30(%rsp),%rdx
3192(5): mov 0x28(%rsp),%rcx
3197(5): mov 0x38(%rsp),%rdi
319c(4): lea 0x0(%rax,%r14,1),%r13
31a0(3): sub %r14,%rdx
31a3(3): mov %r13,%rsi
31a6(5): call 0x1d7a(%rip)
31ab(3): test %rax,%rax
31ae(3): mov %rax,%r15
31b1(2): jz 0x50(%rip)
31b3(4): cmp $0xffffffff,%rax
31b7(6): jz 0x61e(%rip)
31bd(4): cmp $0xfffffffe,%rax
31c1(6): jz 0x5a0(%rip)
31c7(5): cmp $0x2,0x8(%rsp)
31cc(3): setz %al
31cf(4): and 0xf(%rsp),%al
31d3(6): jnz 0x19d(%rip)
31d9(7): mov 0x9c(%rsp),%edi
31e0(5): call 0xffffe4f0(%rip)
31e5(5): mov 0x28(%rsp),%rdi
31ea(2): test %eax,%eax
31ec(5): mov $0x0,%eax
31f1(4): cmove %eax,%r12d
31f5(3): add %r15,%rbx
31f8(5): call 0xffffe4c8(%rip)
31fd(2): test %eax,%eax
31ff(2): jz 0xffffff84(%rip)
3201(3): mov %r12d,%edx
3204(3): mov %rbx,%rdi
3207(6): movzx 0x7d(%rsp),%r8d
320d(3): xor $0x1,%edx
3210(5): movzx 0x7e(%rsp),%ebx
3215(6): movzx 0x7f(%rsp),%r10d
321b(4): and 0xd(%rsp),%dl
321f(8): mov 0x80(%rsp),%r15
3227(5): mov 0x40(%rsp),%r14
322c(5): mov 0x70(%rsp),%r13
3231(5): mov 0x30(%rsp),%r11
3236(4): cmp $0x1,%rdi
323a(6): jbe 0x601(%rip)
3240(3): mov %rdi,%rcx
3243(2): xor %esi,%esi
3245(6): movzx 0xf(%rsp),%r9d
324b(3): add %rbp,%rcx
324e(5): mov 0x10(%rsp),%rdi
3253(5): jmp 0xbb(%rip)
3258(8): nop 0x0(%rax,%rax,1)
3260(5): cmp $0x2,0x8(%rsp)
3265(3): setz %al
3268(3): test %r9b,%r9b
326b(6): jnz 0x4b5(%rip)
3271(3): mov %r8d,%esi
3274(3): xor $0x1,%esi
3277(3): and %sil,%al
327a(2): jz 0x31(%rip)
327c(3): cmp %r15,%r13
327f(2): jbe 0x7(%rip)
3281(5): mov $0x27,0x0(%r14,%r15,1)
3286(4): lea 0x1(%r15),%rsi
328a(3): cmp %rsi,%r13
328d(2): jbe 0x8(%rip)
328f(6): mov $0x24,0x1(%r14,%r15,1)
3295(4): lea 0x2(%r15),%rsi
3299(3): cmp %rsi,%r13
329c(2): jbe 0x8(%rip)
329e(6): mov $0x27,0x2(%r14,%r15,1)
32a4(4): add $0x3,%r15
32a8(3): mov %eax,%r8d
32ab(3): cmp %r15,%r13
32ae(2): jbe 0x7(%rip)
32b0(5): mov $0x5c,0x0(%r14,%r15,1)
32b5(4): lea 0x1(%r15),%rax
32b9(3): cmp %rax,%r13
32bc(2): jbe 0xf(%rip)
32be(2): mov %ebx,%eax
32c0(3): shr $0x6,%al
32c3(3): add $0x30,%eax
32c6(5): mov %al,0x1(%r14,%r15,1)
32cb(4): lea 0x2(%r15),%rax
32cf(3): cmp %rax,%r13
32d2(2): jbe 0x12(%rip)
32d4(2): mov %ebx,%eax
32d6(3): shr $0x3,%al
32d9(3): and $0x7,%eax
32dc(3): add $0x30,%eax
32df(5): mov %al,0x2(%r14,%r15,1)
32e4(3): and $0x7,%ebx
32e7(4): add $0x1,%rbp
32eb(4): add $0x3,%r15
32ef(3): add $0x30,%ebx
32f2(3): cmp %rcx,%rbp
32f5(6): jnb 0xfffff7eb(%rip)
32fb(2): mov %edx,%esi
32fd(3): cmp %r15,%r13
3300(2): jbe 0x6(%rip)
3302(4): mov %bl,0x0(%r14,%r15,1)
3306(4): movzx 0x0(%rdi,%rbp,1),%ebx
330a(4): add $0x1,%r15
330e(2): test %dl,%dl
3310(6): jnz 0xffffff50(%rip)
3316(2): mov %esi,%eax
3318(3): xor $0x1,%eax
331b(3): and %r8d,%eax
331e(3): test %r10b,%r10b
3321(2): jz 0x10(%rip)
3323(3): cmp %r15,%r13
3326(2): jbe 0x7(%rip)
3328(5): mov $0x5c,0x0(%r14,%r15,1)
332d(4): add $0x1,%r15
3331(4): add $0x1,%rbp
3335(3): cmp %rcx,%rbp
3338(6): jnb 0xfffff784(%rip)
333e(2): test %al,%al
3340(6): jz 0x3fe(%rip)
3346(3): cmp %r15,%r13
3349(2): jbe 0x7(%rip)
334b(5): mov $0x27,0x0(%r14,%r15,1)
3350(4): lea 0x1(%r15),%rax
3354(3): cmp %rax,%r13
3357(2): jbe 0x8(%rip)
3359(6): mov $0x27,0x1(%r14,%r15,1)
335f(4): add $0x2,%r15
3363(3): xor %r10d,%r10d
3366(3): xor %r8d,%r8d
3369(2): jmp 0xffffff94(%rip)
336b(5): nop 0x0(%rax,%rax,1)
3370(4): cmp $0x1,%r15
3374(6): jz 0xfffffe65(%rip)
337a(5): mov 0x10(%rsp),%rdi
337f(4): lea 0x0(%rdi,%r15,1),%rcx
3383(5): lea 0x1(%rdi,%r14,1),%rdx
3388(4): lea 0x0(%rcx,%r14,1),%r8
338c(2): jmp 0x11(%rip)
338e(2): nop 
3390(4): add $0x1,%rdx
3394(3): cmp %rdx,%r8
3397(6): jz 0xfffffe42(%rip)
339d(3): movzx (%rdx),%ecx
33a0(3): sub $0x5b,%ecx
33a3(3): cmp $0x21,%cl
33a6(2): jnbe 0xffffffea(%rip)
33a8(5): mov $0x1,%esi
33ad(3): shl/sal %cl,%rsi
33b0(3): mov %rsi,%rcx
33b3(a): mov $0x8589934635,%rsi
33bd(3): test %rsi,%rcx
33c0(2): jz 0xffffffd0(%rip)
33c2(5): mov 0x40(%rsp),%r14
33c7(5): mov 0x70(%rsp),%r13
33cc(5): mov 0x30(%rsp),%rbp
33d1(8): mov $0x2,0x8(%rsp)
33d9(5): cmp $0x0,0xd(%rsp)
33de(2): jz 0x12(%rip)
33e0(2): test %al,%al
33e2(5): mov $0x4,%eax
33e7(5): cmove 0x8(%rsp),%eax
33ec(4): mov %eax,0x8(%rsp)
33f0(4): sub $0x8,%rsp
33f4(3): mov %rbp,%rcx
33f7(3): mov %r13,%rsi
33fa(4): push 0x68(%rsp)
33fe(4): push 0x78(%rsp)
3402(3): mov %r14,%rdi
3405(2): push $0x0
3407(8): mov 0x98(%rsp),%r9d
340f(5): mov 0x28(%rsp),%r8d
3414(5): mov 0x30(%rsp),%rdx
3419(4): and $0xfd,%r9d
341d(5): call 0xfffff433(%rip)
3422(4): add $0x20,%rsp
3426(3): mov %rax,%r15
3429(8): mov 0xa8(%rsp),%rbx
3431(9): xor $0x28,%rbx
343a(3): mov %r15,%rax
343d(6): jnz 0x606(%rip)
3443(7): add $0xb8,%rsp
344a(1): pop %rbx
344b(1): pop %rbp
344c(2): pop %r12
344e(2): pop %r13
3450(2): pop %r14
3452(2): pop %r15
3454(1): ret near (%rsp)
3455(3): nop (%rax)
3458(3): mov %r11,%rbp
345b(5): jmp 0xffffff7e(%rip)
3460(3): cmp %r15,%r13
3463(2): jbe 0x7(%rip)
3465(5): mov $0x27,0x0(%r14,%r15,1)
346a(4): lea 0x1(%r15),%rax
346e(3): cmp %rax,%r13
3471(2): jbe 0x8(%rip)
3473(6): mov $0x5c,0x1(%r14,%r15,1)
3479(4): lea 0x2(%r15),%rax
347d(3): cmp %rax,%r13
3480(6): jbe 0x5f2(%rip)
3486(3): mov %r13,%rdx
3489(6): mov $0x27,0x2(%r14,%r15,1)
348f(5): mov 0x50(%rsp),%r13
3494(5): jmp 0xfffffbde(%rip)
3499(3): mov %r12d,%eax
349c(5): mov $0x30,%ebx
34a1(3): xor %r12d,%r12d
34a4(5): jmp 0xfffff605(%rip)
34a9(6): mov $0x27,0x2(%r14,%r15,1)
34af(5): jmp 0xfffff9ca(%rip)
34b4(2): test %ebx,%ebx
34b6(6): jnz 0xfffff42d(%rip)
34bc(5): mov $0x1,0xd(%rsp)
34c1(3): test %r13,%r13
34c4(6): jnz 0x596(%rip)
34ca(7): lea 0x249c(%rip),%rax
34d1(9): mov $0x0,0x50(%rsp)
34da(5): mov $0x1,0xe(%rsp)
34df(5): mov $0x0,0x7c(%rsp)
34e4(3): xor %r12d,%r12d
34e7(5): mov $0x0,0xf(%rsp)
34ec(9): mov $0x1,0x18(%rsp)
34f5(5): mov %rax,0x48(%rsp)
34fa(6): mov $0x1,%r15d
3500(8): mov $0x2,0x8(%rsp)
3508(5): jmp 0xfffff41b(%rip)
350d(3): nop (%rax)
3510(2): test %ebx,%ebx
3512(6): jnz 0x3fb(%rip)
3518(3): test %r13,%r13
351b(6): jz 0x22b(%rip)
3521(4): mov $0x22,(%r14)
3525(5): mov $0x1,0xe(%rsp)
352a(3): xor %r12d,%r12d
352d(5): mov $0x0,0x7c(%rsp)
3532(9): mov $0x0,0x50(%rsp)
353b(7): lea 0x2429(%rip),%rax
3542(5): mov $0x0,0xf(%rsp)
3547(5): mov $0x1,0xd(%rsp)
354c(9): mov $0x1,0x18(%rsp)
3555(6): mov $0x1,%r15d
355b(5): mov %rax,0x48(%rsp)
3560(5): jmp 0xfffff3c3(%rip)
3565(7): lea 0x23ff(%rip),%rax
356c(5): mov $0x1,0xe(%rsp)
3571(5): mov $0x0,0x7c(%rsp)
3576(3): xor %r12d,%r12d
3579(9): mov $0x0,0x50(%rsp)
3582(5): mov $0x1,0xf(%rsp)
3587(5): mov $0x1,0xd(%rsp)
358c(9): mov $0x1,0x18(%rsp)
3595(3): xor %r15d,%r15d
3598(5): mov %rax,0x48(%rsp)
359d(8): mov $0x5,0x8(%rsp)
35a5(5): jmp 0xfffff37e(%rip)
35aa(5): mov $0x1,0xe(%rsp)
35af(5): mov $0x0,0x7c(%rsp)
35b4(3): xor %r12d,%r12d
35b7(9): mov $0x0,0x50(%rsp)
35c0(5): mov $0x0,0xf(%rsp)
35c5(3): xor %r15d,%r15d
35c8(5): mov $0x1,0xd(%rsp)
35cd(9): mov $0x0,0x18(%rsp)
35d6(9): mov $0x0,0x48(%rsp)
35df(5): jmp 0xfffff344(%rip)
35e4(5): cmp $0xa,0x8(%rsp)
35e9(2): jz 0x58(%rip)
35eb(7): lea 0x237d(%rip),%rsi
35f2(2): xor %edi,%edi
35f4(5): mov $0x5,%edx
35f9(5): call 0xffffdea7(%rip)
35fe(3): mov %rax,%rcx
3601(5): mov %rax,0x68(%rsp)
3606(7): lea 0x2362(%rip),%rax
360d(3): cmp %rax,%rcx
3610(6): jz 0x39e(%rip)
3616(7): lea 0x2350(%rip),%rsi
361d(2): xor %edi,%edi
361f(5): mov $0x5,%edx
3624(5): call 0xffffde7c(%rip)
3629(3): mov %rax,%rcx
362c(5): mov %rax,0x60(%rsp)
3631(7): lea 0x2335(%rip),%rax
3638(3): cmp %rax,%rcx
363b(6): jz 0x389(%rip)
3641(3): xor %r15d,%r15d
3644(2): test %ebx,%ebx
3646(6): jz 0x1c7(%rip)
364c(2): test %ebx,%ebx
364e(5): mov 0x60(%rsp),%rbx
3653(5): setnz 0xf(%rsp)
3658(3): xor %r12d,%r12d
365b(3): mov %rbx,%rdi
365e(5): call 0xffffde62(%rip)
3663(5): mov %rbx,0x48(%rsp)
3668(5): mov %rax,0x18(%rsp)
366d(5): mov $0x1,0xe(%rsp)
3672(5): mov $0x0,0x7c(%rsp)
3677(9): mov $0x0,0x50(%rsp)
3680(5): mov $0x1,0xd(%rsp)
3685(5): jmp 0xfffff29e(%rip)
368a(5): mov $0x1,0xe(%rsp)
368f(5): mov $0x0,0x7c(%rsp)
3694(3): xor %r12d,%r12d
3697(9): mov $0x0,0x50(%rsp)
36a0(5): mov $0x0,0xf(%rsp)
36a5(3): xor %r15d,%r15d
36a8(5): mov $0x0,0xd(%rsp)
36ad(9): mov $0x0,0x18(%rsp)
36b6(9): mov $0x0,0x48(%rsp)
36bf(5): jmp 0xfffff264(%rip)
36c4(5): mov $0x1,0xe(%rsp)
36c9(5): mov $0x0,0x7c(%rsp)
36ce(3): xor %r12d,%r12d
36d1(9): mov $0x0,0x50(%rsp)
36da(5): mov $0x1,0xf(%rsp)
36df(5): mov $0x1,0xd(%rsp)
36e4(5): jmp 0xfffff21f(%rip)
36e9(3): cmp %r15,%r13
36ec(2): jbe 0x7(%rip)
36ee(5): mov $0x30,0x0(%r14,%r15,1)
36f3(4): lea 0x2(%rcx),%rax
36f7(3): cmp %rax,%r13
36fa(2): jbe 0x8(%rip)
36fc(6): mov $0x30,0x2(%r14,%rcx,1)
3702(3): mov %r12d,%eax
3705(4): lea 0x3(%rcx),%r15
3709(3): xor %r12d,%r12d
370c(5): mov $0x30,%ebx
3711(5): jmp 0xfffff367(%rip)
3716(a): nop 0x0(%rax,%rax,1)
3720(5): movzx 0xf(%rsp),%ebx
3725(3): mov %r11,%rbp
3728(4): mov %bl,0xd(%rsp)
372c(5): jmp 0xfffffcad(%rip)
3731(5): movzx 0xd(%rsp),%edx
3736(3): xor %r12d,%r12d
3739(5): jmp 0xfffffb07(%rip)
373e(3): xor %r10d,%r10d
3741(5): jmp 0xfffffbbc(%rip)
3746(9): mov $0x0,0x50(%rsp)
374f(5): mov $0x1,0xe(%rsp)
3754(3): xor %r12d,%r12d
3757(5): mov $0x0,0x7c(%rsp)
375c(5): jmp 0xfffffddf(%rip)
3761(5): mov 0x30(%rsp),%r11
3766(3): mov %r14,%rsi
3769(3): mov %r13,%rcx
376c(3): mov %rbx,%rax
376f(3): mov %rbx,%rdi
3772(6): movzx 0x7d(%rsp),%r8d
3778(5): movzx 0x7e(%rsp),%ebx
377d(8): mov 0x88(%rsp),%r9
3785(3): cmp %r11,%rsi
3788(6): movzx 0x7f(%rsp),%r10d
378e(8): mov 0x80(%rsp),%r15
3796(5): mov 0x40(%rsp),%r14
379b(5): mov 0x70(%rsp),%r13
37a0(2): jnb 0x28(%rip)
37a2(3): cmp $0x0,(%rcx)
37a5(2): jnz 0x12(%rip)
37a7(2): jmp 0x21(%rip)
37a9(7): nop 0x0(%rax)
37b0(5): cmp $0x0,0x0(%r9,%rax,1)
37b5(2): jz 0x10(%rip)
37b7(4): add $0x1,%rax
37bb(5): lea 0x0(%rbp,%rax,1),%rdx
37c0(3): cmp %rdx,%r11
37c3(2): jnbe 0xffffffed(%rip)
37c5(3): mov %rax,%rdi
37c8(5): movzx 0xd(%rsp),%edx
37cd(3): xor %r12d,%r12d
37d0(5): jmp 0xfffffa66(%rip)
37d5(3): mov %rbx,%rdi
37d8(6): movzx 0x7d(%rsp),%r8d
37de(5): movzx 0x7e(%rsp),%ebx
37e3(6): movzx 0x7f(%rsp),%r10d
37e9(8): mov 0x80(%rsp),%r15
37f1(3): xor %r12d,%r12d
37f4(5): mov 0x40(%rsp),%r14
37f9(5): mov 0x70(%rsp),%r13
37fe(5): mov 0x30(%rsp),%r11
3803(5): movzx 0xd(%rsp),%edx
3808(5): jmp 0xfffffa2e(%rip)
380d(5): mov 0x68(%rsp),%rdx
3812(3): movzx (%rdx),%eax
3815(2): test %al,%al
3817(6): jz 0xfffffe35(%rip)
381d(3): nop (%rax)
3820(3): cmp %r15,%r13
3823(2): jbe 0x6(%rip)
3825(4): mov %al,0x0(%r14,%r15,1)
3829(4): add $0x1,%r15
382d(5): movzx 0x0(%rdx,%r15,1),%eax
3832(2): test %al,%al
3834(2): jnz 0xffffffec(%rip)
3836(5): jmp 0xfffffe16(%rip)
383b(2): mov %edx,%eax
383d(5): jmp 0xfffff55a(%rip)
3842(4): movzx 0x0(%rax,%rcx,1),%ebx
3846(3): cmp $0x3e,%bl
3849(6): jnbe 0xfffff877(%rip)
384f(a): mov $0x8070630310989004800,%rax
3859(4): bt %rbx,%rax
385d(6): jnb 0xfffff863(%rip)
3863(5): cmp $0x0,0xf(%rsp)
3868(6): jnz 0x1ea(%rip)
386e(3): cmp %r15,%r13
3871(2): jbe 0x7(%rip)
3873(5): mov $0x3f,0x0(%r14,%r15,1)
3878(4): lea 0x1(%r15),%rax
387c(3): cmp %rax,%r13
387f(2): jbe 0x8(%rip)
3881(6): mov $0x22,0x1(%r14,%r15,1)
3887(4): lea 0x2(%r15),%rax
388b(3): cmp %rax,%r13
388e(2): jbe 0x8(%rip)
3890(6): mov $0x22,0x2(%r14,%r15,1)
3896(4): lea 0x3(%r15),%rax
389a(3): cmp %rax,%r13
389d(2): jbe 0x8(%rip)
389f(6): mov $0x3f,0x3(%r14,%r15,1)
38a5(4): add $0x4,%r15
38a9(2): xor %edx,%edx
38ab(3): xor %r12d,%r12d
38ae(2): xor %eax,%eax
38b0(3): mov %rcx,%rbp
38b3(5): jmp 0xfffff1c5(%rip)
38b8(2): test %ebx,%ebx
38ba(6): jz 0x18e(%rip)
38c0(7): lea 0x20a6(%rip),%rax
38c7(5): mov $0x1,0xe(%rsp)
38cc(5): mov $0x0,0x7c(%rsp)
38d1(3): xor %r12d,%r12d
38d4(9): mov $0x0,0x50(%rsp)
38dd(5): mov $0x1,0xf(%rsp)
38e2(5): mov $0x0,0xd(%rsp)
38e7(9): mov $0x1,0x18(%rsp)
38f0(3): xor %r15d,%r15d
38f3(5): mov %rax,0x48(%rsp)
38f8(5): jmp 0xfffff02b(%rip)
38fd(3): nop (%rax)
3900(3): mov %r11,%rbp
3903(5): movzx 0xf(%rsp),%eax
3908(5): jmp 0xfffffad1(%rip)
390d(7): lea 0x2057(%rip),%rax
3914(5): mov $0x1,0xe(%rsp)
3919(5): mov $0x0,0x7c(%rsp)
391e(3): xor %r12d,%r12d
3921(9): mov $0x0,0x50(%rsp)
392a(5): mov $0x1,0xf(%rsp)
392f(5): mov $0x1,0xd(%rsp)
3934(9): mov $0x1,0x18(%rsp)
393d(3): xor %r15d,%r15d
3940(5): mov %rax,0x48(%rsp)
3945(5): jmp 0xffffefde(%rip)
394a(2): mov %edx,%eax
394c(5): mov 0x48(%rsp),%rbx
3951(3): test %rbx,%rbx
3954(2): jz 0x2e(%rip)
3956(2): test %al,%al
3958(2): jz 0x2a(%rip)
395a(3): movzx (%rbx),%ecx
395d(3): mov %rbx,%rax
3960(2): test %cl,%cl
3962(2): jz 0x20(%rip)
3964(3): mov %r15,%rdx
3967(3): sub %r15,%rax
396a(3): cmp %rdx,%r13
396d(2): jbe 0x6(%rip)
396f(4): mov %cl,0x0(%r14,%rdx,1)
3973(4): add $0x1,%rdx
3977(4): movzx 0x0(%rax,%rdx,1),%ecx
397b(2): test %cl,%cl
397d(2): jnz 0xffffffed(%rip)
397f(3): mov %rdx,%r15
3982(3): cmp %r15,%r13
3985(6): jbe 0xfffffaa4(%rip)
398b(5): mov $0x0,0x0(%r14,%r15,1)
3990(5): jmp 0xfffffa99(%rip)
3995(5): cmp $0x2,0x8(%rsp)
399a(5): movzx 0xf(%rsp),%ebx
399f(3): mov %r11,%rbp
39a2(3): setz %al
39a5(4): mov %bl,0xd(%rsp)
39a9(5): jmp 0xfffffa30(%rip)
39ae(4): mov 0x8(%rsp),%esi
39b2(3): mov %rcx,%rdi
39b5(5): call 0xffffedab(%rip)
39ba(5): mov %rax,0x68(%rsp)
39bf(5): jmp 0xfffffc57(%rip)
39c4(4): mov 0x8(%rsp),%esi
39c8(3): mov %rcx,%rdi
39cb(5): call 0xffffed95(%rip)
39d0(5): mov %rax,0x60(%rsp)
39d5(5): jmp 0xfffffc6c(%rip)
39da(5): movzx 0xf(%rsp),%ebx
39df(3): mov %r11,%rbp
39e2(2): mov %edx,%eax
39e4(4): mov %bl,0xd(%rsp)
39e8(5): jmp 0xfffff9f1(%rip)
39ed(4): sub $0x8,%rsp
39f1(6): mov $0x5,%r8d
39f7(3): mov %r11,%rcx
39fa(4): push 0x68(%rsp)
39fe(4): push 0x78(%rsp)
3a02(3): mov %r14,%rdi
3a05(4): push 0x38(%rsp)
3a09(8): mov 0x98(%rsp),%r9d
3a11(5): mov 0x30(%rsp),%rdx
3a16(5): mov 0x70(%rsp),%rsi
3a1b(5): call 0xffffee35(%rip)
3a20(4): add $0x20,%rsp
3a24(3): mov %rax,%r15
3a27(5): jmp 0xfffffa02(%rip)
3a2c(5): movzx 0x7c(%rsp),%eax
3a31(5): jmp 0xffffff1b(%rip)
3a36(8): mov $0x2,0x8(%rsp)
3a3e(5): jmp 0xfffff99b(%rip)
3a43(5): call 0xffffda8d(%rip)
3a48(5): mov $0x0,0xd(%rsp)
3a4d(5): jmp 0xfffffa74(%rip)
3a52(3): mov %r11,%rbp
3a55(5): jmp 0xfffff99b(%rip)
3a5a(5): mov $0x1,0xe(%rsp)
3a5f(2): xor %eax,%eax
3a61(3): xor %r12d,%r12d
3a64(9): mov $0x0,0x50(%rsp)
3a6d(5): jmp 0xfffff5a7(%rip)
3a72(3): mov %r13,%rdx
3a75(5): mov 0x50(%rsp),%r13
3a7a(5): jmp 0xfffff5f8(%rip)
3a7f(5): call 0xffffd981(%rip)

"quotearg_n_options" :
3a90(2): push %r15
3a92(2): push %r14
3a94(3): movsxd %edi,%r15
3a97(2): push %r13
3a99(2): push %r12
3a9b(3): mov %rdx,%r14
3a9e(1): push %rbp
3a9f(1): push %rbx
3aa0(3): mov %rcx,%rbp
3aa3(4): sub $0x28,%rsp
3aa7(5): mov %rsi,0x8(%rsp)
3aac(5): call 0xffffd964(%rip)
3ab1(3): mov %rax,%r13
3ab4(2): mov (%rax),%eax
3ab6(3): test %r15d,%r15d
3ab9(7): mov 0x2045a0(%rip),%rbx
3ac0(4): mov %eax,0x18(%rsp)
3ac4(6): js 0x16d(%rip)
3aca(7): cmp %r15d,0x204587(%rip)
3ad1(2): jnle 0x64(%rip)
3ad3(7): cmp $0x7fffffff,%r15d
3ada(6): jz 0x15c(%rip)
3ae0(4): lea 0x1(%r15),%r12d
3ae4(7): lea 0x204585(%rip),%rax
3aeb(3): movsxd %r12d,%rsi
3aee(4): shl/sal $0x4,%rsi
3af2(3): cmp %rax,%rbx
3af5(6): jz 0x11b(%rip)
3afb(3): mov %rbx,%rdi
3afe(5): call 0xf72(%rip)
3b03(3): mov %rax,%rbx
3b06(7): mov %rax,0x204553(%rip)
3b0d(7): movsxd 0x204544(%rip),%rdi
3b14(3): mov %r12d,%edx
3b17(2): xor %esi,%esi
3b19(2): sub %edi,%edx
3b1b(4): shl/sal $0x4,%rdi
3b1f(3): movsxd %edx,%rdx
3b22(3): add %rbx,%rdi
3b25(4): shl/sal $0x4,%rdx
3b29(5): call 0xffffda07(%rip)
3b2e(7): mov %r12d,0x204523(%rip)
3b35(3): mov 0x4(%rbp),%eax
3b38(4): shl/sal $0x4,%r15
3b3c(4): sub $0x8,%rsp
3b40(3): add %r15,%rbx
3b43(4): lea 0x8(%rbp),%r15
3b47(4): mov 0x0(%rbp),%r8d
3b4b(3): mov (%rbx),%r11
3b4e(4): mov 0x8(%rbx),%r12
3b52(3): mov %r14,%rcx
3b55(3): or $0x1,%eax
3b58(4): mov %eax,0x24(%rsp)
3b5c(3): push 0x30(%rbp)
3b5f(3): mov %eax,%r9d
3b62(3): push 0x28(%rbp)
3b65(2): push %r15
3b67(3): mov %r11,%rsi
3b6a(5): mov 0x28(%rsp),%rdx
3b6f(3): mov %r12,%rdi
3b72(5): mov %r11,0x30(%rsp)
3b77(5): call 0xffffecd9(%rip)
3b7c(4): add $0x20,%rsp
3b80(5): mov 0x10(%rsp),%r11
3b85(3): cmp %rax,%r11
3b88(2): jnbe 0x69(%rip)
3b8a(4): lea 0x1(%rax),%rsi
3b8e(7): lea 0x20456b(%rip),%rax
3b95(3): cmp %rax,%r12
3b98(3): mov %rsi,(%rbx)
3b9b(2): jz 0x14(%rip)
3b9d(3): mov %r12,%rdi
3ba0(5): mov %rsi,0x10(%rsp)
3ba5(5): call 0xffffd84b(%rip)
3baa(5): mov 0x10(%rsp),%rsi
3baf(3): mov %rsi,%rdi
3bb2(5): mov %rsi,0x10(%rsp)
3bb7(5): call 0xe59(%rip)
3bbc(4): sub $0x8,%rsp
3bc0(4): mov %rax,0x8(%rbx)
3bc4(4): mov 0x0(%rbp),%r8d
3bc8(3): push 0x30(%rbp)
3bcb(3): push 0x28(%rbp)
3bce(3): mov %r14,%rcx
3bd1(2): push %r15
3bd3(5): mov 0x3c(%rsp),%r9d
3bd8(3): mov %rax,%rdi
3bdb(5): mov 0x28(%rsp),%rdx
3be0(5): mov 0x30(%rsp),%rsi
3be5(3): mov %rax,%r12
3be8(5): call 0xffffec68(%rip)
3bed(4): add $0x20,%rsp
3bf1(4): mov 0x18(%rsp),%eax
3bf5(4): mov %eax,0x0(%r13)
3bf9(4): add $0x28,%rsp
3bfd(3): mov %r12,%rax
3c00(1): pop %rbx
3c01(1): pop %rbp
3c02(2): pop %r12
3c04(2): pop %r13
3c06(2): pop %r14
3c08(2): pop %r15
3c0a(1): ret near (%rsp)
3c0b(5): nop 0x0(%rax,%rax,1)
3c10(2): xor %edi,%edi
3c12(5): call 0xe5e(%rip)
3c17(8): movdqa 0x204451(%rip),%xmm0
3c1f(3): mov %rax,%rbx
3c22(7): mov %rax,0x204437(%rip)
3c29(3): movups %xmm0,(%rax)
3c2c(5): jmp 0xfffffee1(%rip)
3c31(5): call 0xffffd7cf(%rip)
3c36(5): call 0x102a(%rip)

"clone_quoting_options" :
3c40(2): push %r12
3c42(1): push %rbp
3c43(1): push %rbx
3c44(3): mov %rdi,%rbx
3c47(5): call 0xffffd7c9(%rip)
3c4c(3): mov (%rax),%r12d
3c4f(3): mov %rax,%rbp
3c52(7): lea 0x2045a7(%rip),%rax
3c59(3): test %rbx,%rbx
3c5c(5): mov $0x38,%esi
3c61(4): cmove %rax,%rbx
3c65(3): mov %rbx,%rdi
3c68(5): call 0xfa8(%rip)
3c6d(4): mov %r12d,0x0(%rbp)
3c71(1): pop %rbx
3c72(1): pop %rbp
3c73(2): pop %r12
3c75(1): ret near (%rsp)

"get_quoting_style" :
3c80(7): lea 0x204579(%rip),%rax
3c87(3): test %rdi,%rdi
3c8a(4): cmove %rax,%rdi
3c8e(2): mov (%rdi),%eax
3c90(1): ret near (%rsp)

"set_quoting_style" :
3ca0(7): lea 0x204559(%rip),%rax
3ca7(3): test %rdi,%rdi
3caa(4): cmove %rax,%rdi
3cae(2): mov %esi,(%rdi)
3cb0(1): ret near (%rsp)

"set_char_quoting" :
3cc0(7): lea 0x204539(%rip),%rax
3cc7(3): test %rdi,%rdi
3cca(2): mov %esi,%ecx
3ccc(4): cmove %rax,%rdi
3cd0(2): mov %esi,%eax
3cd2(3): and $0x1f,%ecx
3cd5(3): shr $0x5,%al
3cd8(3): movzx %al,%eax
3cdb(5): lea 0x8(%rdi,%rax,4),%rdi
3ce0(2): mov (%rdi),%esi
3ce2(2): mov %esi,%eax
3ce4(2): shr %cl,%eax
3ce6(2): xor %eax,%edx
3ce8(3): and $0x1,%eax
3ceb(3): and $0x1,%edx
3cee(2): shl/sal %cl,%edx
3cf0(2): xor %esi,%edx
3cf2(2): mov %edx,(%rdi)
3cf4(1): ret near (%rsp)

"set_quoting_flags" :
3d00(7): lea 0x2044f9(%rip),%rax
3d07(3): test %rdi,%rdi
3d0a(4): cmove %rax,%rdi
3d0e(3): mov 0x4(%rdi),%eax
3d11(3): mov %esi,0x4(%rdi)
3d14(1): ret near (%rsp)

"set_custom_quoting" :
3d20(7): lea 0x2044d9(%rip),%rax
3d27(3): test %rdi,%rdi
3d2a(4): cmove %rax,%rdi
3d2e(3): test %rsi,%rsi
3d31(6): mov $0xa,(%rdi)
3d37(2): jz 0x10(%rip)
3d39(3): test %rdx,%rdx
3d3c(2): jz 0xb(%rip)
3d3e(4): mov %rsi,0x28(%rdi)
3d42(4): mov %rdx,0x30(%rdi)
3d46(1): ret near (%rsp)
3d47(4): sub $0x8,%rsp
3d4b(5): call 0xffffd6b5(%rip)

"quotearg_buffer" :
3d50(2): push %r15
3d52(2): push %r14
3d54(7): lea 0x2044a5(%rip),%rax
3d5b(2): push %r13
3d5d(2): push %r12
3d5f(3): mov %rdi,%r13
3d62(1): push %rbp
3d63(1): push %rbx
3d64(3): mov %r8,%rbx
3d67(3): mov %rsi,%r14
3d6a(3): mov %rdx,%r15
3d6d(4): sub $0x18,%rsp
3d71(3): test %r8,%r8
3d74(4): cmove %rax,%rbx
3d78(5): mov %rcx,0x8(%rsp)
3d7d(5): call 0xffffd693(%rip)
3d82(3): mov (%rax),%r12d
3d85(3): mov %rax,%rbp
3d88(4): lea 0x8(%rbx),%rax
3d8c(4): sub $0x8,%rsp
3d90(4): mov 0x4(%rbx),%r9d
3d94(3): push 0x30(%rbx)
3d97(3): mov (%rbx),%r8d
3d9a(3): push 0x28(%rbx)
3d9d(3): mov %r15,%rdx
3da0(1): push %rax
3da1(5): mov 0x28(%rsp),%rcx
3da6(3): mov %r14,%rsi
3da9(3): mov %r13,%rdi
3dac(5): call 0xffffeaa4(%rip)
3db1(4): mov %r12d,0x0(%rbp)
3db5(4): add $0x38,%rsp
3db9(1): pop %rbx
3dba(1): pop %rbp
3dbb(2): pop %r12
3dbd(2): pop %r13
3dbf(2): pop %r14
3dc1(2): pop %r15
3dc3(1): ret near (%rsp)

"quotearg_alloc_mem" :
3dd0(2): push %r15
3dd2(2): push %r14
3dd4(7): lea 0x204425(%rip),%rax
3ddb(2): push %r13
3ddd(2): push %r12
3ddf(3): mov %rdx,%r12
3de2(1): push %rbp
3de3(1): push %rbx
3de4(3): mov %rcx,%rbx
3de7(3): mov %rdi,%r14
3dea(3): mov %rsi,%r15
3ded(4): sub $0x38,%rsp
3df1(3): test %rcx,%rcx
3df4(4): cmove %rax,%rbx
3df8(2): xor %ebp,%ebp
3dfa(5): call 0xffffd616(%rip)
3dff(3): test %r12,%r12
3e02(3): mov %rax,%r13
3e05(2): mov (%rax),%eax
3e07(4): setz %bpl
3e0b(3): or 0x4(%rbx),%ebp
3e0e(4): lea 0x8(%rbx),%r10
3e12(4): sub $0x8,%rsp
3e16(3): mov (%rbx),%r8d
3e19(3): mov %r15,%rcx
3e1c(4): mov %eax,0x14(%rsp)
3e20(3): push 0x30(%rbx)
3e23(3): mov %r14,%rdx
3e26(3): push 0x28(%rbx)
3e29(2): push %r10
3e2b(2): xor %esi,%esi
3e2d(3): mov %ebp,%r9d
3e30(2): xor %edi,%edi
3e32(5): mov %r10,0x40(%rsp)
3e37(5): call 0xffffea19(%rip)
3e3c(4): lea 0x1(%rax),%rsi
3e40(5): mov %rax,0x48(%rsp)
3e45(4): add $0x20,%rsp
3e49(3): mov %rsi,%rdi
3e4c(5): mov %rsi,0x18(%rsp)
3e51(5): call 0xbbf(%rip)
3e56(5): mov %rax,0x10(%rsp)
3e5b(4): sub $0x8,%rsp
3e5f(3): push 0x30(%rbx)
3e62(3): push 0x28(%rbx)
3e65(5): mov 0x38(%rsp),%r10
3e6a(3): mov %ebp,%r9d
3e6d(3): mov (%rbx),%r8d
3e70(3): mov %r15,%rcx
3e73(3): mov %r14,%rdx
3e76(3): mov %rax,%rdi
3e79(2): push %r10
3e7b(5): mov 0x38(%rsp),%rsi
3e80(5): call 0xffffe9d0(%rip)
3e85(4): mov 0x2c(%rsp),%eax
3e89(4): add $0x20,%rsp
3e8d(3): test %r12,%r12
3e90(4): mov %eax,0x0(%r13)
3e94(2): jz 0xb(%rip)
3e96(5): mov 0x28(%rsp),%r11
3e9b(4): mov %r11,(%r12)
3e9f(5): mov 0x10(%rsp),%rax
3ea4(4): add $0x38,%rsp
3ea8(1): pop %rbx
3ea9(1): pop %rbp
3eaa(2): pop %r12
3eac(2): pop %r13
3eae(2): pop %r14
3eb0(2): pop %r15
3eb2(1): ret near (%rsp)

"quotearg_alloc" :
3ec0(3): mov %rdx,%rcx
3ec3(2): xor %edx,%edx
3ec5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3ed0(6): mov 0x204182(%rip),%eax
3ed6(2): push %r12
3ed8(7): mov 0x204181(%rip),%r12
3edf(1): push %rbp
3ee0(1): push %rbx
3ee1(3): cmp $0x1,%eax
3ee4(2): jle 0x2d(%rip)
3ee6(3): sub $0x2,%eax
3ee9(5): lea 0x18(%r12),%rbx
3eee(4): shl/sal $0x4,%rax
3ef2(5): lea 0x28(%r12,%rax,1),%rbp
3ef7(9): nop 0x0(%rax,%rax,1)
3f00(3): mov (%rbx),%rdi
3f03(4): add $0x10,%rbx
3f07(5): call 0xffffd4e9(%rip)
3f0c(3): cmp %rbp,%rbx
3f0f(2): jnz 0xfffffff1(%rip)
3f11(5): mov 0x8(%r12),%rdi
3f16(7): lea 0x2041e3(%rip),%rbx
3f1d(3): cmp %rbx,%rdi
3f20(2): jz 0x19(%rip)
3f22(5): call 0xffffd4ce(%rip)
3f27(b): mov $0x100,0x20413e(%rip)
3f32(7): mov %rbx,0x20413f(%rip)
3f39(7): lea 0x204130(%rip),%rbx
3f40(3): cmp %rbx,%r12
3f43(2): jz 0x11(%rip)
3f45(3): mov %r12,%rdi
3f48(5): call 0xffffd4a8(%rip)
3f4d(7): mov %rbx,0x20410c(%rip)
3f54(1): pop %rbx
3f55(a): mov $0x1,0x2040f9(%rip)
3f5f(1): pop %rbp
3f60(2): pop %r12
3f62(1): ret near (%rsp)

"quotearg_n" :
3f70(7): lea 0x204289(%rip),%rcx
3f77(7): mov $0xffffffff,%rdx
3f7e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3f90(7): lea 0x204269(%rip),%rcx
3f97(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3fa0(7): lea 0x204259(%rip),%rcx
3fa7(3): mov %rdi,%rsi
3faa(7): mov $0xffffffff,%rdx
3fb1(2): xor %edi,%edi
3fb3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3fc0(7): lea 0x204239(%rip),%rcx
3fc7(3): mov %rsi,%rdx
3fca(3): mov %rdi,%rsi
3fcd(2): xor %edi,%edi
3fcf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3fe0(4): sub $0x48,%rsp
3fe4(3): mov %rdx,%rax
3fe7(9): mov $0x28,%rdx
3ff0(5): mov %rdx,0x38(%rsp)
3ff5(2): xor %edx,%edx
3ff7(3): cmp $0xa,%esi
3ffa(2): jz 0x6a(%rip)
3ffc(3): mov %esi,(%rsp)
3fff(3): mov %rsp,%rcx
4002(7): mov $0xffffffff,%rdx
4009(3): mov %rax,%rsi
400c(9): mov $0x0,0x4(%rsp)
4015(9): mov $0x0,0xc(%rsp)
401e(9): mov $0x0,0x14(%rsp)
4027(9): mov $0x0,0x1c(%rsp)
4030(9): mov $0x0,0x24(%rsp)
4039(9): mov $0x0,0x2c(%rsp)
4042(8): mov $0x0,0x34(%rsp)
404a(5): call 0xfffffa46(%rip)
404f(5): mov 0x38(%rsp),%rcx
4054(9): xor $0x28,%rcx
405d(2): jnz 0xc(%rip)
405f(4): add $0x48,%rsp
4063(1): ret near (%rsp)
4064(5): call 0xffffd39c(%rip)
4069(5): call 0xffffd467(%rip)

"quotearg_n_style_mem" :
4070(4): sub $0x48,%rsp
4074(3): mov %rdx,%rax
4077(3): mov %rcx,%rdx
407a(9): mov $0x28,%rcx
4083(5): mov %rcx,0x38(%rsp)
4088(2): xor %ecx,%ecx
408a(3): cmp $0xa,%esi
408d(2): jz 0x63(%rip)
408f(3): mov %esi,(%rsp)
4092(3): mov %rsp,%rcx
4095(3): mov %rax,%rsi
4098(9): mov $0x0,0x4(%rsp)
40a1(9): mov $0x0,0xc(%rsp)
40aa(9): mov $0x0,0x14(%rsp)
40b3(9): mov $0x0,0x1c(%rsp)
40bc(9): mov $0x0,0x24(%rsp)
40c5(9): mov $0x0,0x2c(%rsp)
40ce(8): mov $0x0,0x34(%rsp)
40d6(5): call 0xfffff9ba(%rip)
40db(5): mov 0x38(%rsp),%rdx
40e0(9): xor $0x28,%rdx
40e9(2): jnz 0xc(%rip)
40eb(4): add $0x48,%rsp
40ef(1): ret near (%rsp)
40f0(5): call 0xffffd310(%rip)
40f5(5): call 0xffffd3db(%rip)

"quotearg_style" :
4100(3): mov %rsi,%rdx
4103(2): mov %edi,%esi
4105(2): xor %edi,%edi
4107(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4110(3): mov %rdx,%rcx
4113(3): mov %rsi,%rdx
4116(2): mov %edi,%esi
4118(2): xor %edi,%edi
411a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4120(4): sub $0x48,%rsp
4124(2): mov %edx,%ecx
4126(9): mov $0x28,%rax
412f(5): mov %rax,0x38(%rsp)
4134(2): xor %eax,%eax
4136(7): mov 0x2040f3(%rip),%rax
413d(3): mov %rsp,%r8
4140(3): and $0x1f,%ecx
4143(8): movdqa 0x2040b5(%rip),%xmm0
414b(5): mov %rax,0x30(%rsp)
4150(2): mov %edx,%eax
4152(4): movaps %xmm0,(%rsp)
4156(3): shr $0x5,%al
4159(3): movzx %al,%eax
415c(5): lea 0x8(%r8,%rax,4),%r9
4161(8): movdqa 0x2040a7(%rip),%xmm0
4169(5): movaps %xmm0,0x10(%rsp)
416e(8): movdqa 0x2040aa(%rip),%xmm0
4176(5): movaps %xmm0,0x20(%rsp)
417b(3): mov (%r9),%edx
417e(2): mov %edx,%eax
4180(2): shr %cl,%eax
4182(2): not %eax
4184(3): and $0x1,%eax
4187(2): shl/sal %cl,%eax
4189(3): mov %r8,%rcx
418c(2): xor %edx,%eax
418e(3): mov %rsi,%rdx
4191(3): mov %rdi,%rsi
4194(3): mov %eax,(%r9)
4197(2): xor %edi,%edi
4199(5): call 0xfffff8f7(%rip)
419e(5): mov 0x38(%rsp),%rsi
41a3(9): xor $0x28,%rsi
41ac(2): jnz 0x7(%rip)
41ae(4): add $0x48,%rsp
41b2(1): ret near (%rsp)
41b3(5): call 0xffffd31d(%rip)

"quotearg_char" :
41c0(4): movsx %sil,%edx
41c4(7): mov $0xffffffff,%rsi
41cb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
41d0(5): mov $0x3a,%edx
41d5(7): mov $0xffffffff,%rsi
41dc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
41f0(5): mov $0x3a,%edx
41f5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4200(4): sub $0x48,%rsp
4204(3): mov %rdx,%rax
4207(9): mov $0x28,%rdx
4210(5): mov %rdx,0x38(%rsp)
4215(2): xor %edx,%edx
4217(3): cmp $0xa,%esi
421a(2): jz 0x6a(%rip)
421c(3): mov %esi,(%rsp)
421f(3): mov %rsp,%rcx
4222(7): mov $0xffffffff,%rdx
4229(3): mov %rax,%rsi
422c(9): mov $0x0,0x4(%rsp)
4235(9): mov $0x4000000,0xc(%rsp)
423e(9): mov $0x0,0x14(%rsp)
4247(9): mov $0x0,0x1c(%rsp)
4250(9): mov $0x0,0x24(%rsp)
4259(9): mov $0x0,0x2c(%rsp)
4262(8): mov $0x0,0x34(%rsp)
426a(5): call 0xfffff826(%rip)
426f(5): mov 0x38(%rsp),%rcx
4274(9): xor $0x28,%rcx
427d(2): jnz 0xc(%rip)
427f(4): add $0x48,%rsp
4283(1): ret near (%rsp)
4284(5): call 0xffffd17c(%rip)
4289(5): call 0xffffd247(%rip)

"quotearg_n_custom_mem" :
4290(4): sub $0x48,%rsp
4294(3): mov %rcx,%r9
4297(7): mov 0x203f92(%rip),%rcx
429e(8): movdqa 0x203f5a(%rip),%xmm0
42a6(9): mov $0x28,%rax
42af(5): mov %rax,0x38(%rsp)
42b4(2): xor %eax,%eax
42b6(4): movaps %xmm0,(%rsp)
42ba(3): test %rsi,%rsi
42bd(5): mov %rcx,0x30(%rsp)
42c2(7): mov $0xa,(%rsp)
42c9(8): movdqa 0x203f3f(%rip),%xmm0
42d1(5): movaps %xmm0,0x10(%rsp)
42d6(8): movdqa 0x203f42(%rip),%xmm0
42de(5): movaps %xmm0,0x20(%rsp)
42e3(2): jz 0x34(%rip)
42e5(3): test %rdx,%rdx
42e8(2): jz 0x2f(%rip)
42ea(5): mov %rsi,0x28(%rsp)
42ef(5): mov %rdx,0x30(%rsp)
42f4(3): mov %rsp,%rcx
42f7(3): mov %r8,%rdx
42fa(3): mov %r9,%rsi
42fd(5): call 0xfffff793(%rip)
4302(5): mov 0x38(%rsp),%rdi
4307(9): xor $0x28,%rdi
4310(2): jnz 0xc(%rip)
4312(4): add $0x48,%rsp
4316(1): ret near (%rsp)
4317(5): call 0xffffd0e9(%rip)
431c(5): call 0xffffd1b4(%rip)

"quotearg_n_custom" :
4330(7): mov $0xffffffff,%r8
4337(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4340(3): mov %rdx,%rcx
4343(7): mov $0xffffffff,%r8
434a(3): mov %rsi,%rdx
434d(3): mov %rdi,%rsi
4350(2): xor %edi,%edi
4352(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4360(3): mov %rcx,%r8
4363(3): mov %rdx,%rcx
4366(3): mov %rsi,%rdx
4369(3): mov %rdi,%rsi
436c(2): xor %edi,%edi
436e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4380(7): lea 0x203c99(%rip),%rcx
4387(5): jmp 0xfffff709(%rip)

"quote_mem" :
4390(7): lea 0x203c89(%rip),%rcx
4397(3): mov %rsi,%rdx
439a(3): mov %rdi,%rsi
439d(2): xor %edi,%edi
439f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
43b0(7): lea 0x203c69(%rip),%rcx
43b7(7): mov $0xffffffff,%rdx
43be(5): jmp 0xfffff6d2(%rip)

"quote" :
43d0(7): lea 0x203c49(%rip),%rcx
43d7(3): mov %rdi,%rsi
43da(7): mov $0xffffffff,%rdx
43e1(2): xor %edi,%edi
43e3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
43f0(2): push %r15
43f2(2): push %r14
43f4(2): push %r13
43f6(2): push %r12
43f8(3): mov %r9,%r12
43fb(1): push %rbp
43fc(1): push %rbx
43fd(3): mov %rdi,%rbp
4400(3): mov %r8,%rbx
4403(4): sub $0x28,%rsp
4407(3): test %rsi,%rsi
440a(6): jz 0x11e(%rip)
4410(3): mov %rdx,%r8
4413(7): lea 0x1a0e(%rip),%rdx
441a(3): mov %rcx,%r9
441d(2): xor %eax,%eax
441f(3): mov %rsi,%rcx
4422(5): mov $0x1,%esi
4427(5): call 0xffffd289(%rip)
442c(7): lea 0x1a08(%rip),%rsi
4433(2): xor %edi,%edi
4435(5): mov $0x5,%edx
443a(5): call 0xffffd066(%rip)
443f(7): lea 0x1d1a(%rip),%rdx
4446(3): mov %rax,%rcx
4449(6): mov $0x7e3,%r8d
444f(5): mov $0x1,%esi
4454(3): mov %rbp,%rdi
4457(2): xor %eax,%eax
4459(5): call 0xffffd257(%rip)
445e(7): lea 0x1a63(%rip),%rsi
4465(2): xor %edi,%edi
4467(5): mov $0x5,%edx
446c(5): call 0xffffd034(%rip)
4471(3): mov %rbp,%rsi
4474(3): mov %rax,%rdi
4477(5): call 0xffffd0e9(%rip)
447c(4): cmp $0x9,%r12
4480(6): jnbe 0x340(%rip)
4486(7): lea 0x1c9b(%rip),%rdx
448d(4): movsxd 0x0(%rdx,%r12,4),%rax
4491(3): add %rdx,%rax
4494(2): jmp %rax
4496(a): nop 0x0(%rax,%rax,1)
44a0(4): mov 0x38(%rbx),%r9
44a4(4): mov 0x10(%rbx),%rax
44a8(7): lea 0x1b89(%rip),%rsi
44af(4): mov 0x8(%rbx),%r8
44b3(5): mov $0x5,%edx
44b8(2): xor %edi,%edi
44ba(4): mov 0x30(%rbx),%r13
44be(4): mov 0x28(%rbx),%r12
44c2(5): mov %r9,0x10(%rsp)
44c7(4): mov 0x20(%rbx),%r15
44cb(4): mov 0x18(%rbx),%r14
44cf(4): mov %rax,(%rsp)
44d3(5): mov %r8,0x8(%rsp)
44d8(3): mov (%rbx),%rbx
44db(5): call 0xffffcfc5(%rip)
44e0(4): sub $0x8,%rsp
44e4(5): mov 0x18(%rsp),%r9
44e9(3): mov %rax,%rdx
44ec(3): mov %rbx,%rcx
44ef(5): mov $0x1,%esi
44f4(3): mov %rbp,%rdi
44f7(2): xor %eax,%eax
44f9(2): push %r9
44fb(2): push %r13
44fd(2): push %r12
44ff(2): push %r15
4501(2): push %r14
4503(5): mov 0x30(%rsp),%r9
4508(5): mov 0x38(%rsp),%r8
450d(5): call 0xffffd1a3(%rip)
4512(4): add $0x30,%rsp
4516(4): add $0x28,%rsp
451a(1): pop %rbx
451b(1): pop %rbp
451c(2): pop %r12
451e(2): pop %r13
4520(2): pop %r14
4522(2): pop %r15
4524(1): ret near (%rsp)
4525(3): nop (%rax)
4528(3): mov %rcx,%r8
452b(3): mov %rdx,%rcx
452e(7): lea 0x18ff(%rip),%rdx
4535(5): mov $0x1,%esi
453a(2): xor %eax,%eax
453c(5): call 0xffffd174(%rip)
4541(5): jmp 0xfffffeeb(%rip)
4546(a): nop 0x0(%rax,%rax,1)
4550(4): mov 0x40(%rbx),%r10
4554(4): mov 0x38(%rbx),%r9
4558(7): lea 0x1b09(%rip),%rsi
455f(4): mov 0x10(%rbx),%rax
4563(4): mov 0x8(%rbx),%r8
4567(5): mov $0x5,%edx
456c(4): mov 0x30(%rbx),%r13
4570(4): mov 0x28(%rbx),%r12
4574(4): mov 0x20(%rbx),%r15
4578(4): mov 0x18(%rbx),%r14
457c(3): mov (%rbx),%rbx
457f(5): mov %r10,0x18(%rsp)
4584(5): mov %r9,0x10(%rsp)
4589(4): mov %rax,(%rsp)
458d(5): mov %r8,0x8(%rsp)
4592(2): xor %edi,%edi
4594(5): call 0xffffcf0c(%rip)
4599(5): mov 0x18(%rsp),%r10
459e(2): push %r10
45a0(5): jmp 0xffffff44(%rip)
45a5(3): nop (%rax)
45a8(3): mov (%rbx),%rbx
45ab(7): lea 0x188d(%rip),%rsi
45b2(5): mov $0x5,%edx
45b7(2): xor %edi,%edi
45b9(5): call 0xffffcee7(%rip)
45be(4): add $0x28,%rsp
45c2(3): mov %rbx,%rcx
45c5(3): mov %rbp,%rdi
45c8(1): pop %rbx
45c9(1): pop %rbp
45ca(2): pop %r12
45cc(2): pop %r13
45ce(2): pop %r14
45d0(2): pop %r15
45d2(3): mov %rax,%rdx
45d5(5): mov $0x1,%esi
45da(2): xor %eax,%eax
45dc(5): jmp 0xffffd0d4(%rip)
45e1(7): nop 0x0(%rax)
45e8(4): mov 0x8(%rbx),%r12
45ec(7): lea 0x185c(%rip),%rsi
45f3(3): mov (%rbx),%rbx
45f6(5): mov $0x5,%edx
45fb(2): xor %edi,%edi
45fd(5): call 0xffffcea3(%rip)
4602(4): add $0x28,%rsp
4606(3): mov %r12,%r8
4609(3): mov %rbx,%rcx
460c(3): mov %rbp,%rdi
460f(3): mov %rax,%rdx
4612(5): mov $0x1,%esi
4617(1): pop %rbx
4618(1): pop %rbp
4619(2): pop %r12
461b(2): pop %r13
461d(2): pop %r14
461f(2): pop %r15
4621(2): xor %eax,%eax
4623(5): jmp 0xffffd08d(%rip)
4628(8): nop 0x0(%rax,%rax,1)
4630(4): mov 0x10(%rbx),%r13
4634(4): mov 0x8(%rbx),%r12
4638(7): lea 0x1827(%rip),%rsi
463f(3): mov (%rbx),%rbx
4642(5): mov $0x5,%edx
4647(2): xor %edi,%edi
4649(5): call 0xffffce57(%rip)
464e(4): add $0x28,%rsp
4652(3): mov %r13,%r9
4655(3): mov %r12,%r8
4658(3): mov %rbx,%rcx
465b(3): mov %rbp,%rdi
465e(3): mov %rax,%rdx
4661(1): pop %rbx
4662(1): pop %rbp
4663(2): pop %r12
4665(2): pop %r13
4667(2): pop %r14
4669(2): pop %r15
466b(5): mov $0x1,%esi
4670(2): xor %eax,%eax
4672(5): jmp 0xffffd03e(%rip)
4677(9): nop 0x0(%rax,%rax,1)
4680(7): lea 0x1911(%rip),%rsi
4687(5): mov $0x5,%edx
468c(2): xor %edi,%edi
468e(4): mov 0x18(%rbx),%r14
4692(4): mov 0x10(%rbx),%r13
4696(4): mov 0x8(%rbx),%r12
469a(3): mov (%rbx),%rbx
469d(5): call 0xffffce03(%rip)
46a2(4): sub $0x8,%rsp
46a6(2): push %r14
46a8(3): mov %rax,%rdx
46ab(3): mov %r13,%r9
46ae(3): mov %r12,%r8
46b1(3): mov %rbx,%rcx
46b4(3): mov %rbp,%rdi
46b7(5): mov $0x1,%esi
46bc(2): xor %eax,%eax
46be(5): call 0xffffcff2(%rip)
46c3(1): pop %rax
46c4(1): pop %rdx
46c5(4): add $0x28,%rsp
46c9(1): pop %rbx
46ca(1): pop %rbp
46cb(2): pop %r12
46cd(2): pop %r13
46cf(2): pop %r14
46d1(2): pop %r15
46d3(1): ret near (%rsp)
46d4(4): nop 0x0(%rax)
46d8(4): mov 0x20(%rbx),%r15
46dc(7): lea 0x18d5(%rip),%rsi
46e3(5): mov $0x5,%edx
46e8(2): xor %edi,%edi
46ea(4): mov 0x18(%rbx),%r14
46ee(4): mov 0x10(%rbx),%r13
46f2(4): mov 0x8(%rbx),%r12
46f6(3): mov (%rbx),%rbx
46f9(5): call 0xffffcda7(%rip)
46fe(2): push %r15
4700(2): jmp 0xffffffa6(%rip)
4702(6): nop 0x0(%rax,%rax,1)
4708(4): mov 0x8(%rbx),%r8
470c(4): mov 0x28(%rbx),%r12
4710(7): lea 0x18c9(%rip),%rsi
4717(4): mov 0x20(%rbx),%r15
471b(4): mov 0x18(%rbx),%r14
471f(5): mov $0x5,%edx
4724(4): mov 0x10(%rbx),%r13
4728(2): xor %edi,%edi
472a(3): mov (%rbx),%rbx
472d(4): mov %r8,(%rsp)
4731(5): call 0xffffcd6f(%rip)
4736(4): sub $0x8,%rsp
473a(3): mov %r13,%r9
473d(2): push %r12
473f(2): push %r15
4741(2): push %r14
4743(5): mov 0x20(%rsp),%r8
4748(3): mov %rbx,%rcx
474b(3): mov %rax,%rdx
474e(3): mov %rbp,%rdi
4751(5): mov $0x1,%esi
4756(2): xor %eax,%eax
4758(5): call 0xffffcf58(%rip)
475d(4): add $0x20,%rsp
4761(4): add $0x28,%rsp
4765(1): pop %rbx
4766(1): pop %rbp
4767(2): pop %r12
4769(2): pop %r13
476b(2): pop %r14
476d(2): pop %r15
476f(1): ret near (%rsp)
4770(4): mov 0x10(%rbx),%r9
4774(4): mov 0x30(%rbx),%r13
4778(7): lea 0x1889(%rip),%rsi
477f(4): mov 0x28(%rbx),%r12
4783(4): mov 0x20(%rbx),%r15
4787(5): mov $0x5,%edx
478c(4): mov 0x18(%rbx),%r14
4790(4): mov 0x8(%rbx),%r8
4794(2): xor %edi,%edi
4796(5): mov %r9,0x8(%rsp)
479b(3): mov (%rbx),%rbx
479e(4): mov %r8,(%rsp)
47a2(5): call 0xffffccfe(%rip)
47a7(2): push %r13
47a9(2): push %r12
47ab(2): push %r15
47ad(2): push %r14
47af(5): mov 0x28(%rsp),%r9
47b4(2): jmp 0xffffff8f(%rip)
47b6(a): nop 0x0(%rax,%rax,1)
47c0(4): mov 0x40(%rbx),%r10
47c4(4): mov 0x38(%rbx),%r9
47c8(5): mov $0x5,%edx
47cd(4): mov 0x10(%rbx),%rax
47d1(4): mov 0x8(%rbx),%r8
47d5(7): lea 0x18c4(%rip),%rsi
47dc(4): mov 0x30(%rbx),%r13
47e0(4): mov 0x28(%rbx),%r12
47e4(4): mov 0x20(%rbx),%r15
47e8(4): mov 0x18(%rbx),%r14
47ec(5): mov %r10,0x18(%rsp)
47f1(5): mov %r9,0x10(%rsp)
47f6(4): mov %rax,(%rsp)
47fa(5): mov %r8,0x8(%rsp)
47ff(3): mov (%rbx),%rbx
4802(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4810(3): xor %r9d,%r9d
4813(4): cmp $0x0,(%r8)
4817(2): jz 0x14(%rip)
4819(7): nop 0x0(%rax)
4820(4): add $0x1,%r9
4824(5): cmp $0x0,0x0(%r8,%r9,8)
4829(2): jnz 0xfffffff7(%rip)
482b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4830(4): sub $0x68,%rsp
4834(3): mov %r8,%r10
4837(3): xor %r9d,%r9d
483a(9): mov $0x28,%rax
4843(5): mov %rax,0x58(%rsp)
4848(2): xor %eax,%eax
484a(3): mov %rsp,%r8
484d(3): nop (%rax)
4850(3): mov (%r10),%eax
4853(3): cmp $0x2f,%eax
4856(2): jnbe 0x44(%rip)
4858(3): mov %eax,%r11d
485b(4): add 0x10(%r10),%r11
485f(3): add $0x8,%eax
4862(3): mov %eax,(%r10)
4865(3): mov (%r11),%rax
4868(3): test %rax,%rax
486b(4): mov %rax,0x0(%r8,%r9,8)
486f(2): jz 0xc(%rip)
4871(4): add $0x1,%r9
4875(4): cmp $0xa,%r9
4879(2): jnz 0xffffffd7(%rip)
487b(5): call 0xfffffb75(%rip)
4880(5): mov 0x58(%rsp),%rax
4885(9): xor $0x28,%rax
488e(2): jnz 0x7(%rip)
4890(4): add $0x68,%rsp
4894(1): ret near (%rsp)
4895(5): call 0xffffcc3b(%rip)
489a(4): mov 0x8(%r10),%r11
489e(4): lea 0x8(%r11),%rax
48a2(4): mov %rax,0x8(%r10)
48a6(2): jmp 0xffffffbf(%rip)

"version_etc" :
48b0(1): push %rbp
48b1(1): push %rbx
48b2(6): mov $0x20,%r10d
48b8(3): xor %r11d,%r11d
48bb(7): sub $0xb8,%rsp
48c2(9): mov $0x28,%rax
48cb(5): mov %rax,0x78(%rsp)
48d0(2): xor %eax,%eax
48d2(8): lea 0xd0(%rsp),%rax
48da(8): mov %r8,0xa0(%rsp)
48e2(8): lea 0xd0(%rsp),%rbx
48ea(5): lea 0x20(%rsp),%r8
48ef(8): mov %r9,0xa8(%rsp)
48f7(8): mov $0x20,0x8(%rsp)
48ff(5): mov %rax,0x10(%rsp)
4904(8): lea 0x80(%rsp),%rax
490c(3): xor %r9d,%r9d
490f(5): mov %rax,0x18(%rsp)
4914(3): mov %rax,%rbp
4917(9): nop 0x0(%rax,%rax,1)
4920(4): cmp $0x2f,%r10d
4924(2): jnbe 0x58(%rip)
4926(3): mov %r10d,%eax
4929(6): mov $0x1,%r11d
492f(4): add $0x8,%r10d
4933(3): add %rbp,%rax
4936(3): mov (%rax),%rax
4939(3): test %rax,%rax
493c(4): mov %rax,0x0(%r8,%r9,8)
4940(2): jz 0xc(%rip)
4942(4): add $0x1,%r9
4946(4): cmp $0xa,%r9
494a(2): jnz 0xffffffd6(%rip)
494c(3): test %r11b,%r11b
494f(2): jnz 0x26(%rip)
4951(5): call 0xfffffa9f(%rip)
4956(5): mov 0x78(%rsp),%rax
495b(9): xor $0x28,%rax
4964(2): jnz 0xc(%rip)
4966(7): add $0xb8,%rsp
496d(1): pop %rbx
496e(1): pop %rbp
496f(1): ret near (%rsp)
4970(5): call 0xffffcb60(%rip)
4975(5): mov %r10d,0x8(%rsp)
497a(2): jmp 0xffffffd7(%rip)
497c(3): mov %rbx,%rax
497f(4): add $0x8,%rbx
4983(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4990(1): push %rbx
4991(7): lea 0x14ea(%rip),%rsi
4998(5): mov $0x5,%edx
499d(2): xor %edi,%edi
499f(5): call 0xffffcb01(%rip)
49a4(7): lea 0x14ec(%rip),%rdx
49ab(3): mov %rax,%rsi
49ae(5): mov $0x1,%edi
49b3(2): xor %eax,%eax
49b5(5): call 0xffffcc6b(%rip)
49ba(7): lea 0x14ec(%rip),%rsi
49c1(5): mov $0x5,%edx
49c6(2): xor %edi,%edi
49c8(5): call 0xffffcad8(%rip)
49cd(7): lea 0xdbc(%rip),%rcx
49d4(7): lea 0x9e5(%rip),%rdx
49db(3): mov %rax,%rsi
49de(5): mov $0x1,%edi
49e3(2): xor %eax,%eax
49e5(5): call 0xffffcc3b(%rip)
49ea(7): mov 0x203697(%rip),%rbx
49f1(7): lea 0x16e8(%rip),%rsi
49f8(2): xor %edi,%edi
49fa(5): mov $0x5,%edx
49ff(5): call 0xffffcaa1(%rip)
4a04(3): mov %rbx,%rsi
4a07(3): mov %rax,%rdi
4a0a(1): pop %rbx
4a0b(5): jmp 0xffffcb55(%rip)

"xmalloc" :
4a10(1): push %rbx
4a11(3): mov %rdi,%rbx
4a14(5): call 0xffffcbac(%rip)
4a19(3): test %rax,%rax
4a1c(2): jnz 0x7(%rip)
4a1e(3): test %rbx,%rbx
4a21(2): jnz 0x4(%rip)
4a23(1): pop %rbx
4a24(1): ret near (%rsp)
4a25(5): call 0x23b(%rip)

"xnmalloc" :
4a30(3): mov %rdi,%rax
4a33(3): mul %rax,%rsi,%rdx
4a36(3): mov %rax,%rdi
4a39(3): seto %al
4a3c(3): test %rdi,%rdi
4a3f(2): js 0xc(%rip)
4a41(3): movzx %al,%eax
4a44(3): test %rax,%rax
4a47(2): jnz 0x4(%rip)
4a49(2): jmp 0xffffffc7(%rip)
4a4b(4): sub $0x8,%rsp
4a4f(5): call 0x211(%rip)

"xrealloc" :
4a70(3): test %rsi,%rsi
4a73(1): push %rbx
4a74(3): mov %rsi,%rbx
4a77(2): jnz 0x7(%rip)
4a79(3): test %rdi,%rdi
4a7c(2): jnz 0x1c(%rip)
4a7e(3): mov %rbx,%rsi
4a81(5): call 0xffffcb7f(%rip)
4a86(3): test %rax,%rax
4a89(2): jnz 0x7(%rip)
4a8b(3): test %rbx,%rbx
4a8e(2): jnz 0x13(%rip)
4a90(1): pop %rbx
4a91(1): ret near (%rsp)
4a92(6): nop 0x0(%rax,%rax,1)
4a98(5): call 0xffffc958(%rip)
4a9d(2): xor %eax,%eax
4a9f(1): pop %rbx
4aa0(1): ret near (%rsp)
4aa1(5): call 0x1bf(%rip)

"xnrealloc" :
4ab0(3): mov %rsi,%rax
4ab3(3): mul %rax,%rdx,%rdx
4ab6(3): mov %rax,%rsi
4ab9(3): seto %al
4abc(3): test %rsi,%rsi
4abf(2): js 0xc(%rip)
4ac1(3): movzx %al,%eax
4ac4(3): test %rax,%rax
4ac7(2): jnz 0x4(%rip)
4ac9(2): jmp 0xffffffa7(%rip)
4acb(4): sub $0x8,%rsp
4acf(5): call 0x191(%rip)

"x2nrealloc" :
4ae0(3): test %rdi,%rdi
4ae3(3): mov %rdx,%r9
4ae6(3): mov (%rsi),%rcx
4ae9(2): jz 0x37(%rip)
4aeb(2): xor %edx,%edx
4aed(a): mov $0x6148914691236517204,%rax
4af7(3): div %r9,%rax
4afa(3): cmp %rcx,%rax
4afd(2): jbe 0x3e(%rip)
4aff(3): mov %rcx,%rax
4b02(3): shr $0x1,%rax
4b05(5): lea 0x1(%rax,%rcx,1),%rcx
4b0a(3): mov %rcx,(%rsi)
4b0d(4): imul %r9,%rcx
4b11(3): mov %rcx,%rsi
4b14(5): jmp 0xffffff5c(%rip)
4b19(7): nop 0x0(%rax)
4b20(3): test %rcx,%rcx
4b23(2): jz 0x25(%rip)
4b25(3): mov %rcx,%rax
4b28(3): mul %rax,%r9,%rdx
4b2b(3): seto %dl
4b2e(3): test %rax,%rax
4b31(3): movzx %dl,%edx
4b34(2): js 0x7(%rip)
4b36(3): test %rdx,%rdx
4b39(2): jz 0xffffffd1(%rip)
4b3b(4): sub $0x8,%rsp
4b3f(5): call 0x121(%rip)
4b44(4): nop 0x0(%rax)
4b48(2): xor %edx,%edx
4b4a(5): mov $0x80,%eax
4b4f(3): xor %r8d,%r8d
4b52(3): div %r9,%rax
4b55(3): test %rax,%rax
4b58(4): setz %r8b
4b5c(4): lea 0x0(%r8,%rax,1),%rcx
4b60(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4b70(3): test %rdi,%rdi
4b73(3): mov (%rsi),%rax
4b76(2): jz 0x2a(%rip)
4b78(a): mov $0x6148914691236517203,%rdx
4b82(3): cmp %rdx,%rax
4b85(2): jnbe 0x2c(%rip)
4b87(3): mov %rax,%rdx
4b8a(3): shr $0x1,%rdx
4b8d(5): lea 0x1(%rdx,%rax,1),%rax
4b92(3): mov %rax,(%rsi)
4b95(3): mov %rax,%rsi
4b98(5): jmp 0xfffffed8(%rip)
4b9d(3): nop (%rax)
4ba0(3): test %rax,%rax
4ba3(5): mov $0x80,%edx
4ba8(4): cmove %rdx,%rax
4bac(3): test %rax,%rax
4baf(2): jns 0xffffffe3(%rip)
4bb1(4): sub $0x8,%rsp
4bb5(5): call 0xab(%rip)

"xzalloc" :
4bc0(1): push %rbx
4bc1(3): mov %rdi,%rbx
4bc4(5): call 0xfffffe4c(%rip)
4bc9(3): mov %rbx,%rdx
4bcc(2): xor %esi,%esi
4bce(3): mov %rax,%rdi
4bd1(1): pop %rbx
4bd2(5): jmp 0xffffc95e(%rip)

"xcalloc" :
4be0(3): mov %rdi,%rax
4be3(4): sub $0x8,%rsp
4be7(3): mul %rax,%rsi,%rdx
4bea(3): seto %dl
4bed(3): test %rax,%rax
4bf0(2): js 0x19(%rip)
4bf2(3): movzx %dl,%edx
4bf5(3): test %rdx,%rdx
4bf8(2): jnz 0x11(%rip)
4bfa(5): call 0xffffc976(%rip)
4bff(3): test %rax,%rax
4c02(2): jz 0x7(%rip)
4c04(4): add $0x8,%rsp
4c08(1): ret near (%rsp)
4c09(5): call 0x57(%rip)

"xmemdup" :
4c10(1): push %rbp
4c11(1): push %rbx
4c12(3): mov %rdi,%rbp
4c15(3): mov %rsi,%rdi
4c18(3): mov %rsi,%rbx
4c1b(4): sub $0x8,%rsp
4c1f(5): call 0xfffffdf1(%rip)
4c24(4): add $0x8,%rsp
4c28(3): mov %rbx,%rdx
4c2b(3): mov %rbp,%rsi
4c2e(1): pop %rbx
4c2f(1): pop %rbp
4c30(3): mov %rax,%rdi
4c33(5): jmp 0xffffc96d(%rip)

"xstrdup" :
4c40(1): push %rbx
4c41(3): mov %rdi,%rbx
4c44(5): call 0xffffc87c(%rip)
4c49(3): mov %rbx,%rdi
4c4c(4): lea 0x1(%rax),%rsi
4c50(1): pop %rbx
4c51(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4c60(7): lea 0x1528(%rip),%rsi
4c67(4): sub $0x8,%rsp
4c6b(5): mov $0x5,%edx
4c70(2): xor %edi,%edi
4c72(5): call 0xffffc82e(%rip)
4c77(6): mov 0x20339b(%rip),%edi
4c7d(7): lea 0xc7b(%rip),%rdx
4c84(3): mov %rax,%rcx
4c87(2): xor %esi,%esi
4c89(2): xor %eax,%eax
4c8b(5): call 0xffffc9b5(%rip)
4c90(5): call 0xffffc770(%rip)

"rpl_fcntl" :
4ca0(2): push %r12
4ca2(1): push %rbp
4ca3(2): mov %edi,%ebp
4ca5(1): push %rbx
4ca6(4): sub $0x50,%rsp
4caa(9): mov $0x28,%rax
4cb3(5): mov %rax,0x18(%rsp)
4cb8(2): xor %eax,%eax
4cba(5): lea 0x70(%rsp),%rax
4cbf(2): test %esi,%esi
4cc1(5): mov %rdx,0x30(%rsp)
4cc6(5): mov %rcx,0x38(%rsp)
4ccb(5): mov %r8,0x40(%rsp)
4cd0(5): mov %rax,0x8(%rsp)
4cd5(5): lea 0x20(%rsp),%rax
4cda(5): mov %r9,0x48(%rsp)
4cdf(7): mov $0x10,(%rsp)
4ce6(5): mov %rax,0x10(%rsp)
4ceb(6): jz 0x207(%rip)
4cf1(6): cmp $0x406,%esi
4cf7(2): jnz 0x49(%rip)
4cf9(5): mov 0x10(%rsp),%rax
4cfe(7): cmp $0x0,0x203533(%rip)
4d05(7): mov $0x18,(%rsp)
4d0c(4): mov 0x10(%rax),%r12d
4d10(3): mov %r12d,%edx
4d13(6): js 0x130(%rip)
4d19(2): xor %eax,%eax
4d1b(5): mov $0x406,%esi
4d20(5): call 0xffffc740(%rip)
4d25(2): test %eax,%eax
4d27(2): mov %eax,%ebx
4d29(6): js 0x18f(%rip)
4d2f(a): mov $0x1,0x2034ff(%rip)
4d39(2): jmp 0x47(%rip)
4d3b(5): nop 0x0(%rax,%rax,1)
4d40(3): cmp $0xb,%esi
4d43(2): jz 0x2d(%rip)
4d45(2): jnle 0x5b(%rip)
4d47(3): cmp $0x4,%esi
4d4a(6): jz 0xd6(%rip)
4d50(6): jnle 0xc0(%rip)
4d56(3): cmp $0x2,%esi
4d59(6): jz 0xc7(%rip)
4d5f(2): jnle 0x11(%rip)
4d61(3): cmp $0x1,%esi
4d64(2): jnz 0x64(%rip)
4d66(a): nop 0x0(%rax,%rax,1)
4d70(2): mov %ebp,%edi
4d72(2): xor %eax,%eax
4d74(5): call 0xffffc6ec(%rip)
4d79(2): mov %eax,%ebx
4d7b(5): nop 0x0(%rax,%rax,1)
4d80(5): mov 0x18(%rsp),%rcx
4d85(9): xor $0x28,%rcx
4d8e(2): mov %ebx,%eax
4d90(6): jnz 0x15d(%rip)
4d96(4): add $0x50,%rsp
4d9a(1): pop %rbx
4d9b(1): pop %rbp
4d9c(2): pop %r12
4d9e(1): ret near (%rsp)
4d9f(1): nop 
4da0(6): cmp $0x407,%esi
4da6(2): jnle 0x4a(%rip)
4da8(6): cmp $0x406,%esi
4dae(2): jnl 0x72(%rip)
4db0(6): cmp $0x401,%esi
4db6(2): jz 0xffffffba(%rip)
4db8(6): cmp $0x402,%esi
4dbe(2): jz 0x62(%rip)
4dc0(6): cmp $0x400,%esi
4dc6(2): jz 0x5a(%rip)
4dc8(3): mov (%rsp),%eax
4dcb(3): cmp $0x2f,%eax
4dce(6): jnbe 0x13c(%rip)
4dd4(5): add 0x10(%rsp),%rax
4dd9(3): mov (%rax),%rdx
4ddc(2): mov %ebp,%edi
4dde(2): xor %eax,%eax
4de0(5): call 0xffffc680(%rip)
4de5(2): mov %eax,%ebx
4de7(2): jmp 0xffffff99(%rip)
4de9(7): nop 0x0(%rax)
4df0(6): cmp $0x409,%esi
4df6(2): jz 0x2a(%rip)
4df8(6): jl 0xffffff78(%rip)
4dfe(6): cmp $0x40a,%esi
4e04(2): jnz 0xffffffc4(%rip)
4e06(5): jmp 0xffffff6a(%rip)
4e0b(5): nop 0x0(%rax,%rax,1)
4e10(3): cmp $0x9,%esi
4e13(6): jz 0xffffff5d(%rip)
4e19(2): jnle 0x7(%rip)
4e1b(3): cmp $0x8,%esi
4e1e(2): jnz 0xffffffaa(%rip)
4e20(3): mov (%rsp),%eax
4e23(3): cmp $0x2f,%eax
4e26(6): jnbe 0xee(%rip)
4e2c(5): add 0x10(%rsp),%rax
4e31(2): mov (%rax),%edx
4e33(2): mov %ebp,%edi
4e35(2): xor %eax,%eax
4e37(5): call 0xffffc629(%rip)
4e3c(2): mov %eax,%ebx
4e3e(5): jmp 0xffffff42(%rip)
4e43(2): xor %esi,%esi
4e45(2): xor %eax,%eax
4e47(5): call 0xffffc619(%rip)
4e4c(2): test %eax,%eax
4e4e(2): mov %eax,%ebx
4e50(6): js 0xffffff30(%rip)
4e56(7): cmp $0xff,0x2033db(%rip)
4e5d(6): jnz 0xffffff23(%rip)
4e63(2): xor %eax,%eax
4e65(5): mov $0x1,%esi
4e6a(2): mov %ebx,%edi
4e6c(5): call 0xffffc5f4(%rip)
4e71(2): test %eax,%eax
4e73(2): js 0x1e(%rip)
4e75(3): or $0x1,%eax
4e78(5): mov $0x2,%esi
4e7d(2): mov %ebx,%edi
4e7f(2): mov %eax,%edx
4e81(2): xor %eax,%eax
4e83(5): call 0xffffc5dd(%rip)
4e88(3): cmp $0xff,%eax
4e8b(6): jnz 0xfffffef5(%rip)
4e91(5): call 0xffffc57f(%rip)
4e96(3): mov (%rax),%r12d
4e99(3): mov %rax,%rbp
4e9c(2): mov %ebx,%edi
4e9e(5): call 0xffffc6a2(%rip)
4ea3(5): mov $0xffffffff,%ebx
4ea8(4): mov %r12d,0x0(%rbp)
4eac(5): jmp 0xfffffed4(%rip)
4eb1(7): nop 0x0(%rax)
4eb8(5): call 0xffffc558(%rip)
4ebd(3): cmp $0x16,(%rax)
4ec0(6): jnz 0xfffffe6f(%rip)
4ec6(2): xor %esi,%esi
4ec8(2): xor %eax,%eax
4eca(3): mov %r12d,%edx
4ecd(2): mov %ebp,%edi
4ecf(5): call 0xffffc591(%rip)
4ed4(2): test %eax,%eax
4ed6(2): mov %eax,%ebx
4ed8(6): js 0xfffffea8(%rip)
4ede(a): mov $0xffffffff,0x203350(%rip)
4ee8(5): jmp 0xffffff7b(%rip)
4eed(5): call 0xffffc5e3(%rip)
4ef2(5): mov 0x10(%rsp),%rax
4ef7(2): xor %esi,%esi
4ef9(3): mov 0x10(%rax),%edx
4efc(2): xor %eax,%eax
4efe(5): call 0xffffc562(%rip)
4f03(2): mov %eax,%ebx
4f05(5): jmp 0xfffffe7b(%rip)
4f0a(5): mov 0x8(%rsp),%rax
4f0f(5): jmp 0xfffffeca(%rip)
4f14(5): mov 0x8(%rsp),%rax
4f19(5): jmp 0xffffff18(%rip)

"rpl_mbrtowc" :
4f20(2): push %r13
4f22(2): push %r12
4f24(3): mov %rsi,%r13
4f27(1): push %rbp
4f28(1): push %rbx
4f29(3): mov %rdi,%rbx
4f2c(3): mov %rdx,%r12
4f2f(4): sub $0x18,%rsp
4f33(9): mov $0x28,%rax
4f3c(5): mov %rax,0x8(%rsp)
4f41(2): xor %eax,%eax
4f43(5): lea 0x4(%rsp),%rax
4f48(3): test %rdi,%rdi
4f4b(4): cmove %rax,%rbx
4f4f(3): mov %rbx,%rdi
4f52(5): call 0xffffc59e(%rip)
4f57(4): cmp $0xfffffffd,%rax
4f5b(3): mov %rax,%rbp
4f5e(2): jbe 0x22(%rip)
4f60(3): test %r12,%r12
4f63(2): jz 0x1d(%rip)
4f65(2): xor %edi,%edi
4f67(5): call 0x179(%rip)
4f6c(2): test %al,%al
4f6e(2): jnz 0x12(%rip)
4f70(5): movzx 0x0(%r13),%eax
4f75(5): mov $0x1,%ebp
4f7a(2): mov %eax,(%rbx)
4f7c(4): nop 0x0(%rax)
4f80(5): mov 0x8(%rsp),%rdx
4f85(9): xor $0x28,%rdx
4f8e(3): mov %rbp,%rax
4f91(2): jnz 0xd(%rip)
4f93(4): add $0x18,%rsp
4f97(1): pop %rbx
4f98(1): pop %rbp
4f99(2): pop %r12
4f9b(2): pop %r13
4f9d(1): ret near (%rsp)
4f9e(5): call 0xffffc532(%rip)

"close_stream" :
4fb0(2): push %r12
4fb2(1): push %rbp
4fb3(3): mov %rdi,%rbp
4fb6(1): push %rbx
4fb7(5): call 0xffffc489(%rip)
4fbc(3): mov 0x0(%rbp),%ebx
4fbf(3): mov %rbp,%rdi
4fc2(3): mov %rax,%r12
4fc5(5): call 0x1bb(%rip)
4fca(3): and $0x20,%ebx
4fcd(2): test %ebx,%ebx
4fcf(2): jnz 0x19(%rip)
4fd1(2): test %eax,%eax
4fd3(2): jz 0xc(%rip)
4fd5(3): test %r12,%r12
4fd8(5): mov $0xffffffff,%eax
4fdd(2): jz 0x3b(%rip)
4fdf(1): pop %rbx
4fe0(1): pop %rbp
4fe1(2): pop %r12
4fe3(1): ret near (%rsp)
4fe4(4): nop 0x0(%rax)
4fe8(2): test %eax,%eax
4fea(2): jnz 0x1e(%rip)
4fec(5): call 0xffffc424(%rip)
4ff1(6): mov $0x0,(%rax)
4ff7(5): mov $0xffffffff,%eax
4ffc(1): pop %rbx
4ffd(1): pop %rbp
4ffe(2): pop %r12
5000(1): ret near (%rsp)
5001(7): nop 0x0(%rax)
5008(1): pop %rbx
5009(5): mov $0xffffffff,%eax
500e(1): pop %rbp
500f(2): pop %r12
5011(1): ret near (%rsp)
5012(6): nop 0x0(%rax,%rax,1)
5018(5): call 0xffffc3f8(%rip)
501d(3): cmp $0x9,(%rax)
5020(1): pop %rbx
5021(1): pop %rbp
5022(2): pop %r12
5024(3): setnz %al
5027(3): movzx %al,%eax
502a(2): neg %eax
502c(1): ret near (%rsp)

"last_component" :
5030(3): movzx (%rdi),%edx
5033(3): mov %rdi,%rax
5036(3): cmp $0x2f,%dl
5039(2): jnz 0x13(%rip)
503b(5): nop 0x0(%rax,%rax,1)
5040(4): add $0x1,%rax
5044(3): movzx (%rax),%edx
5047(3): cmp $0x2f,%dl
504a(2): jz 0xfffffff6(%rip)
504c(2): test %dl,%dl
504e(2): jz 0x3c(%rip)
5050(3): mov %rax,%rcx
5053(2): xor %esi,%esi
5055(2): jmp 0x20(%rip)
5057(9): nop 0x0(%rax,%rax,1)
5060(3): test %sil,%sil
5063(2): jz 0x7(%rip)
5065(3): mov %rcx,%rax
5068(2): xor %esi,%esi
506a(4): add $0x1,%rcx
506e(3): movzx (%rcx),%edx
5071(2): test %dl,%dl
5073(2): jz 0x17(%rip)
5075(3): cmp $0x2f,%dl
5078(2): jnz 0xffffffe8(%rip)
507a(4): add $0x1,%rcx
507e(3): movzx (%rcx),%edx
5081(5): mov $0x1,%esi
5086(2): test %dl,%dl
5088(2): jnz 0xffffffed(%rip)
508a(2): REP ret near (%rsp)

"base_len" :
5090(1): push %rbx
5091(3): mov %rdi,%rbx
5094(5): call 0xffffc42c(%rip)
5099(4): cmp $0x1,%rax
509d(2): jbe 0xd(%rip)
509f(5): cmp $0x2f,0xffffffff(%rbx,%rax,1)
50a4(4): lea 0xffffffff(%rax),%rdx
50a8(2): jz 0x10(%rip)
50aa(1): pop %rbx
50ab(1): ret near (%rsp)
50ac(4): nop 0x0(%rax)
50b0(3): mov %rax,%rdx
50b3(5): nop 0x0(%rax,%rax,1)
50b8(4): cmp $0x1,%rdx
50bc(2): jz 0x14(%rip)
50be(5): cmp $0x2f,0xffffffff(%rbx,%rdx,1)
50c3(4): lea 0xffffffff(%rdx),%rax
50c7(2): jz 0xffffffe9(%rip)
50c9(3): mov %rdx,%rax
50cc(1): pop %rbx
50cd(1): ret near (%rsp)
50ce(2): nop 
50d0(5): mov $0x1,%eax
50d5(1): pop %rbx
50d6(1): ret near (%rsp)

"hard_locale" :
50e0(4): sub $0x8,%rsp
50e4(2): xor %esi,%esi
50e6(5): call 0xffffc52a(%rip)
50eb(3): mov %rax,%rdx
50ee(5): mov $0x1,%eax
50f3(3): test %rdx,%rdx
50f6(2): jz 0x1f(%rip)
50f8(7): lea 0x10a1(%rip),%rdi
50ff(5): mov $0x2,%ecx
5104(3): mov %rdx,%rsi
5107(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5109(3): setnbe %cl
510c(3): sbb $0x0,%cl
510f(2): xor %eax,%eax
5111(2): test %cl,%cl
5113(2): jnz 0xd(%rip)
5115(4): add $0x8,%rsp
5119(1): ret near (%rsp)
511a(6): nop 0x0(%rax,%rax,1)
5120(7): lea 0x107b(%rip),%rdi
5127(5): mov $0x6,%ecx
512c(3): mov %rdx,%rsi
512f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5131(3): setnbe %al
5134(2): sbb $0x0,%al
5136(2): test %al,%al
5138(3): setnz %al
513b(4): add $0x8,%rsp
513f(1): ret near (%rsp)

"locale_charset" :
5140(4): sub $0x8,%rsp
5144(5): mov $0xe,%edi
5149(5): call 0xffffc497(%rip)
514e(3): test %rax,%rax
5151(2): jz 0x1f(%rip)
5153(3): cmp $0x0,(%rax)
5156(7): lea 0x104b(%rip),%rdx
515d(4): cmove %rdx,%rax
5161(4): add $0x8,%rsp
5165(1): ret near (%rsp)
5166(a): nop 0x0(%rax,%rax,1)
5170(7): lea 0x1031(%rip),%rax
5177(4): add $0x8,%rsp
517b(1): ret near (%rsp)

"rpl_fclose" :
5180(2): push %r12
5182(1): push %rbp
5183(1): push %rbx
5184(3): mov %rdi,%rbx
5187(5): call 0xffffc429(%rip)
518c(2): test %eax,%eax
518e(3): mov %rbx,%rdi
5191(2): js 0x56(%rip)
5193(5): call 0xffffc45d(%rip)
5198(2): test %eax,%eax
519a(2): jnz 0x2e(%rip)
519c(3): mov %rbx,%rdi
519f(5): call 0x61(%rip)
51a4(2): test %eax,%eax
51a6(2): jz 0x3e(%rip)
51a8(5): call 0xffffc268(%rip)
51ad(3): mov (%rax),%r12d
51b0(3): mov %rbx,%rdi
51b3(3): mov %rax,%rbp
51b6(5): call 0xffffc2ca(%rip)
51bb(3): test %r12d,%r12d
51be(2): jnz 0x32(%rip)
51c0(1): pop %rbx
51c1(1): pop %rbp
51c2(2): pop %r12
51c4(1): ret near (%rsp)
51c5(3): nop (%rax)
51c8(3): mov %rbx,%rdi
51cb(5): call 0xffffc3e5(%rip)
51d0(2): xor %esi,%esi
51d2(5): mov $0x1,%edx
51d7(2): mov %eax,%edi
51d9(5): call 0xffffc347(%rip)
51de(4): cmp $0xffffffff,%rax
51e2(2): jnz 0xffffffba(%rip)
51e4(3): mov %rbx,%rdi
51e7(1): pop %rbx
51e8(1): pop %rbp
51e9(2): pop %r12
51eb(5): jmp 0xffffc295(%rip)
51f0(4): mov %r12d,0x0(%rbp)
51f4(5): mov $0xffffffff,%eax
51f9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5200(3): test %rdi,%rdi
5203(1): push %rbx
5204(3): mov %rdi,%rbx
5207(2): jz 0x13(%rip)
5209(5): call 0xffffc3e7(%rip)
520e(2): test %eax,%eax
5210(2): jz 0xa(%rip)
5212(6): test $0x100,(%rbx)
5218(2): jnz 0x10(%rip)
521a(3): mov %rbx,%rdi
521d(1): pop %rbx
521e(5): jmp 0xffffc3b2(%rip)
5223(5): nop 0x0(%rax,%rax,1)
5228(3): mov %rbx,%rdi
522b(5): mov $0x1,%edx
5230(2): xor %esi,%esi
5232(5): call 0xe(%rip)
5237(3): mov %rbx,%rdi
523a(1): pop %rbx
523b(5): jmp 0xffffc395(%rip)

"rpl_fseeko" :
5240(4): mov 0x8(%rdi),%rax
5244(4): cmp %rax,0x10(%rdi)
5248(2): jz 0x8(%rip)
524a(5): jmp 0xffffc416(%rip)
524f(1): nop 
5250(4): mov 0x20(%rdi),%rax
5254(4): cmp %rax,0x28(%rdi)
5258(2): jnz 0xfffffff2(%rip)
525a(5): cmp $0x0,0x48(%rdi)
525f(2): jnz 0xffffffeb(%rip)
5261(2): push %r12
5263(1): push %rbp
5264(3): mov %edx,%r12d
5267(1): push %rbx
5268(3): mov %rsi,%rbp
526b(3): mov %rdi,%rbx
526e(5): call 0xffffc342(%rip)
5273(3): mov %r12d,%edx
5276(3): mov %rbp,%rsi
5279(2): mov %eax,%edi
527b(5): call 0xffffc2a5(%rip)
5280(4): cmp $0xffffffff,%rax
5284(2): jz 0xe(%rip)
5286(3): and $0xef,(%rbx)
5289(7): mov %rax,0x90(%rbx)
5290(2): xor %eax,%eax
5292(1): pop %rbx
5293(1): pop %rbp
5294(2): pop %r12
5296(1): ret near (%rsp)

"__libc_csu_init" :
52a0(2): push %r15
52a2(2): push %r14
52a4(3): mov %rdx,%r15
52a7(2): push %r13
52a9(2): push %r12
52ab(7): lea 0x2028be(%rip),%r12
52b2(1): push %rbp
52b3(7): lea 0x2028be(%rip),%rbp
52ba(1): push %rbx
52bb(3): mov %edi,%r13d
52be(3): mov %rsi,%r14
52c1(3): sub %r12,%rbp
52c4(4): sub $0x8,%rsp
52c8(4): sar $0x3,%rbp
52cc(5): call 0xffffc0e4(%rip)
52d1(3): test %rbp,%rbp
52d4(2): jz 0x22(%rip)
52d6(2): xor %ebx,%ebx
52d8(8): nop 0x0(%rax,%rax,1)
52e0(3): mov %r15,%rdx
52e3(3): mov %r14,%rsi
52e6(3): mov %r13d,%edi
52e9(4): call 0x0(%r12,%rbx,8)
52ed(4): add $0x1,%rbx
52f1(3): cmp %rbx,%rbp
52f4(2): jnz 0xffffffec(%rip)
52f6(4): add $0x8,%rsp
52fa(1): pop %rbx
52fb(1): pop %rbp
52fc(2): pop %r12
52fe(2): pop %r13
5300(2): pop %r14
5302(2): pop %r15
5304(1): ret near (%rsp)

"atexit" :
5320(7): mov 0x202ce1(%rip),%rdx
5327(2): xor %esi,%esi
5329(5): jmp 0xffffc357(%rip)

"_fini" :
5330(4): sub $0x8,%rsp
5334(4): add $0x8,%rsp
5338(1): ret near (%rsp)

