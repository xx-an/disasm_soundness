
"free@plt" :
15b0(6): jmp 0x20886a(%rip)
15b6(5): push $0x0

"abort@plt" :
15c0(6): jmp 0x208862(%rip)
15c6(5): push $0x1

"__errno_location@plt" :
15d0(6): jmp 0x20885a(%rip)
15d6(5): push $0x2

"strncmp@plt" :
15e0(6): jmp 0x208852(%rip)
15e6(5): push $0x3

"_exit@plt" :
15f0(6): jmp 0x20884a(%rip)
15f6(5): push $0x4

"__fpending@plt" :
1600(6): jmp 0x208842(%rip)
1606(5): push $0x5

"fcntl@plt" :
1610(6): jmp 0x20883a(%rip)
1616(5): push $0x6

"fread_unlocked@plt" :
1620(6): jmp 0x208832(%rip)
1626(5): push $0x7

"textdomain@plt" :
1630(6): jmp 0x20882a(%rip)
1636(5): push $0x8

"fclose@plt" :
1640(6): jmp 0x208822(%rip)
1646(5): push $0x9

"bindtextdomain@plt" :
1650(6): jmp 0x20881a(%rip)
1656(5): push $0xa

"dcgettext@plt" :
1660(6): jmp 0x208812(%rip)
1666(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1670(6): jmp 0x20880a(%rip)
1676(5): push $0xc

"strlen@plt" :
1680(6): jmp 0x208802(%rip)
1686(5): push $0xd

"__stack_chk_fail@plt" :
1690(6): jmp 0x2087fa(%rip)
1696(5): push $0xe

"getopt_long@plt" :
16a0(6): jmp 0x2087f2(%rip)
16a6(5): push $0xf

"mbrtowc@plt" :
16b0(6): jmp 0x2087ea(%rip)
16b6(5): push $0x10

"strchr@plt" :
16c0(6): jmp 0x2087e2(%rip)
16c6(5): push $0x11

"__overflow@plt" :
16d0(6): jmp 0x2087da(%rip)
16d6(5): push $0x12

"strrchr@plt" :
16e0(6): jmp 0x2087d2(%rip)
16e6(5): push $0x13

"lseek@plt" :
16f0(6): jmp 0x2087ca(%rip)
16f6(5): push $0x14

"memset@plt" :
1700(6): jmp 0x2087c2(%rip)
1706(5): push $0x15

"close@plt" :
1710(6): jmp 0x2087ba(%rip)
1716(5): push $0x16

"posix_fadvise@plt" :
1720(6): jmp 0x2087b2(%rip)
1726(5): push $0x17

"memcmp@plt" :
1730(6): jmp 0x2087aa(%rip)
1736(5): push $0x18

"fputs_unlocked@plt" :
1740(6): jmp 0x2087a2(%rip)
1746(5): push $0x19

"calloc@plt" :
1750(6): jmp 0x20879a(%rip)
1756(5): push $0x1a

"__getdelim@plt" :
1760(6): jmp 0x208792(%rip)
1766(5): push $0x1b

"memcpy@plt" :
1770(6): jmp 0x20878a(%rip)
1776(5): push $0x1c

"fileno@plt" :
1780(6): jmp 0x208782(%rip)
1786(5): push $0x1d

"malloc@plt" :
1790(6): jmp 0x20877a(%rip)
1796(5): push $0x1e

"fflush@plt" :
17a0(6): jmp 0x208772(%rip)
17a6(5): push $0x1f

"nl_langinfo@plt" :
17b0(6): jmp 0x20876a(%rip)
17b6(5): push $0x20

"__freading@plt" :
17c0(6): jmp 0x208762(%rip)
17c6(5): push $0x21

"fwrite_unlocked@plt" :
17d0(6): jmp 0x20875a(%rip)
17d6(5): push $0x22

"realloc@plt" :
17e0(6): jmp 0x208752(%rip)
17e6(5): push $0x23

"fdopen@plt" :
17f0(6): jmp 0x20874a(%rip)
17f6(5): push $0x24

"setlocale@plt" :
1800(6): jmp 0x208742(%rip)
1806(5): push $0x25

"__printf_chk@plt" :
1810(6): jmp 0x20873a(%rip)
1816(5): push $0x26

"setvbuf@plt" :
1820(6): jmp 0x208732(%rip)
1826(5): push $0x27

"error@plt" :
1830(6): jmp 0x20872a(%rip)
1836(5): push $0x28

"fseeko@plt" :
1840(6): jmp 0x208722(%rip)
1846(5): push $0x29

"fopen@plt" :
1850(6): jmp 0x20871a(%rip)
1856(5): push $0x2a

"dcngettext@plt" :
1860(6): jmp 0x208712(%rip)
1866(5): push $0x2b

"__cxa_atexit@plt" :
1870(6): jmp 0x20870a(%rip)
1876(5): push $0x2c

"exit@plt" :
1880(6): jmp 0x208702(%rip)
1886(5): push $0x2d

"fwrite@plt" :
1890(6): jmp 0x2086fa(%rip)
1896(5): push $0x2e

"__fprintf_chk@plt" :
18a0(6): jmp 0x2086f2(%rip)
18a6(5): push $0x2f

"mbsinit@plt" :
18b0(6): jmp 0x2086ea(%rip)
18b6(5): push $0x30

"iswprint@plt" :
18c0(6): jmp 0x2086e2(%rip)
18c6(5): push $0x31

"__ctype_tolower_loc@plt" :
18d0(6): jmp 0x2086da(%rip)
18d6(5): push $0x32

"__ctype_b_loc@plt" :
18e0(6): jmp 0x2086d2(%rip)
18e6(5): push $0x33

".plt.got" :
18f0(6): jmp 0x2086ea(%rip)
18f6(2): nop 

"_init" :
1580(4): sub $0x8,%rsp
1584(7): mov 0x208a45(%rip),%rax
158b(3): test %rax,%rax
158e(2): jz 0x4(%rip)
1590(2): call %rax
1592(4): add $0x8,%rsp
1596(1): ret near (%rsp)

"main" :
1900(2): push %r15
1902(2): push %r14
1904(2): push %r13
1906(2): push %r12
1908(3): mov %edi,%r12d
190b(1): push %rbp
190c(1): push %rbx
190d(3): mov %rsi,%rbx
1910(5): mov $0xffffffff,%ebp
1915(7): sub $0xe8,%rsp
191c(3): mov (%rsi),%rdi
191f(9): mov $0x28,%rax
1928(8): mov %rax,0xd8(%rsp)
1930(2): xor %eax,%eax
1932(5): call 0x290e(%rip)
1937(7): lea 0x6683(%rip),%rsi
193e(5): mov $0x6,%edi
1943(5): call 0xfffffebd(%rip)
1948(7): lea 0x5592(%rip),%rsi
194f(7): lea 0x5562(%rip),%rdi
1956(5): call 0xfffffcfa(%rip)
195b(7): lea 0x5556(%rip),%rdi
1962(5): call 0xfffffcce(%rip)
1967(7): lea 0x19b2(%rip),%rdi
196e(5): call 0x5492(%rip)
1973(7): mov 0x20872e(%rip),%rdi
197a(2): xor %ecx,%ecx
197c(5): mov $0x1,%edx
1981(2): xor %esi,%esi
1983(5): call 0xfffffe9d(%rip)
1988(5): mov $0x0,0x78(%rsp)
198d(5): mov $0x0,0x2b(%rsp)
1992(6): nop 0x0(%rax,%rax,1)
1998(7): lea 0x208081(%rip),%rcx
199f(7): lea 0x557c(%rip),%rdx
19a6(3): xor %r8d,%r8d
19a9(3): mov %rbx,%rsi
19ac(3): mov %r12d,%edi
19af(5): call 0xfffffcf1(%rip)
19b4(3): cmp $0xff,%eax
19b7(6): jz 0x185(%rip)
19bd(3): cmp $0x77,%eax
19c0(6): jz 0xe0(%rip)
19c6(2): jle 0x3a(%rip)
19c8(5): cmp $0x81,%eax
19cd(6): jz 0x123(%rip)
19d3(2): jle 0x55(%rip)
19d5(5): cmp $0x83,%eax
19da(6): jz 0x106(%rip)
19e0(6): jl 0xe0(%rip)
19e6(5): cmp $0x84,%eax
19eb(6): jnz 0x1e5(%rip)
19f1(5): mov $0x1,0x78(%rsp)
19f6(5): mov $0x1,%ebp
19fb(2): jmp 0xffffff9d(%rip)
19fd(3): nop (%rax)
1a00(3): cmp $0x62,%eax
1a03(6): jz 0x11d(%rip)
1a09(2): jle 0x47(%rip)
1a0b(3): cmp $0x63,%eax
1a0e(6): jz 0x102(%rip)
1a14(3): cmp $0x74,%eax
1a17(6): jnz 0x1b9(%rip)
1a1d(2): xor %ebp,%ebp
1a1f(5): jmp 0xffffff79(%rip)
1a24(4): nop 0x0(%rax)
1a28(3): cmp $0x7a,%eax
1a2b(6): jz 0x105(%rip)
1a31(3): add $0x80,%eax
1a34(6): jnz 0x19c(%rip)
1a3a(7): mov $0x1,0x2086b1(%rip)
1a41(5): jmp 0xffffff57(%rip)
1a46(a): nop 0x0(%rax,%rax,1)
1a50(5): cmp $0xffffff7d,%eax
1a55(6): jnz 0xf7c(%rip)
1a5b(7): lea 0x54b3(%rip),%rax
1a62(7): mov 0x20863f(%rip),%rdi
1a69(7): mov 0x2085a8(%rip),%rcx
1a70(2): push $0x0
1a72(7): lea 0x5480(%rip),%r9
1a79(7): lea 0x5486(%rip),%r8
1a80(1): push %rax
1a81(7): lea 0x542c(%rip),%rdx
1a88(7): lea 0x539b(%rip),%rsi
1a8f(2): xor %eax,%eax
1a91(5): call 0x49af(%rip)
1a96(2): xor %edi,%edi
1a98(5): call 0xfffffde8(%rip)
1a9d(3): nop (%rax)
1aa0(7): mov $0x0,0x20864d(%rip)
1aa7(7): mov $0x1,0x208645(%rip)
1aae(7): mov $0x0,0x20863c(%rip)
1ab5(5): jmp 0xfffffee3(%rip)
1aba(6): nop 0x0(%rax,%rax,1)
1ac0(7): mov $0x0,0x20862d(%rip)
1ac7(7): mov $0x0,0x208625(%rip)
1ace(7): mov $0x1,0x20861c(%rip)
1ad5(5): jmp 0xfffffec3(%rip)
1ada(6): nop 0x0(%rax,%rax,1)
1ae0(7): mov $0x1,0x208609(%rip)
1ae7(5): jmp 0xfffffeb1(%rip)
1aec(4): nop 0x0(%rax)
1af0(7): mov $0x1,0x2085fd(%rip)
1af7(7): mov $0x0,0x2085f5(%rip)
1afe(7): mov $0x0,0x2085ec(%rip)
1b05(5): jmp 0xfffffe93(%rip)
1b0a(6): nop 0x0(%rax,%rax,1)
1b10(5): mov $0x1,0x2b(%rsp)
1b15(5): jmp 0xfffffe83(%rip)
1b1a(6): nop 0x0(%rax,%rax,1)
1b20(5): mov $0x1,%ebp
1b25(5): jmp 0xfffffe73(%rip)
1b2a(6): nop 0x0(%rax,%rax,1)
1b30(7): mov $0x0,0x2084d9(%rip)
1b37(5): jmp 0xfffffe61(%rip)
1b3c(2): test %ebp,%ebp
1b3e(b): mov $0x22,0x2085b7(%rip)
1b49(b): mov $0x20,0x2085a4(%rip)
1b54(3): setz %al
1b57(4): test %al,0x78(%rsp)
1b5b(6): jnz 0xec0(%rip)
1b61(7): cmp $0xa,0x2084a8(%rip)
1b68(2): jz 0x72(%rip)
1b6a(5): cmp $0x0,0x2b(%rsp)
1b6f(5): mov $0x5,%edx
1b74(7): lea 0x5aad(%rip),%rsi
1b7b(2): jnz 0x40(%rip)
1b7d(7): cmp $0x0,0x20856e(%rip)
1b84(6): jnz 0xea8(%rip)
1b8a(7): cmp $0x0,0x208563(%rip)
1b91(6): jnz 0xe6f(%rip)
1b97(7): cmp $0x0,0x208555(%rip)
1b9e(6): jz 0x307(%rip)
1ba4(5): cmp $0x0,0x2b(%rsp)
1ba9(5): mov $0x5,%edx
1bae(7): lea 0x5bcb(%rip),%rsi
1bb5(6): jnz 0x88(%rip)
1bbb(2): xor %edi,%edi
1bbd(5): call 0xfffffaa3(%rip)
1bc2(2): xor %esi,%esi
1bc4(3): mov %rax,%rdx
1bc7(2): xor %edi,%edi
1bc9(2): xor %eax,%eax
1bcb(5): call 0xfffffc65(%rip)
1bd0(5): mov $0x1,%edi
1bd5(5): call 0x12cb(%rip)
1bda(5): cmp $0x0,0x2b(%rsp)
1bdf(2): jz 0x15(%rip)
1be1(5): cmp $0x0,0x78(%rsp)
1be6(5): mov $0x5,%edx
1beb(7): lea 0x5a76(%rip),%rsi
1bf2(2): jnz 0xffffffc9(%rip)
1bf4(2): test %ebp,%ebp
1bf6(2): js 0x15(%rip)
1bf8(5): cmp $0x0,0x2b(%rsp)
1bfd(5): mov $0x5,%edx
1c02(7): lea 0x5a9f(%rip),%rsi
1c09(2): jnz 0xffffffb2(%rip)
1c0b(7): cmp $0x0,0x2084e0(%rip)
1c12(6): jz 0xdd6(%rip)
1c18(5): cmp $0x0,0x2b(%rsp)
1c1d(6): jz 0xe0f(%rip)
1c23(7): cmp $0x0,0x2084ca(%rip)
1c2a(6): jz 0x983(%rip)
1c30(7): cmp $0x0,0x2084bc(%rip)
1c37(6): jz 0x26e(%rip)
1c3d(3): cmp $0xff,%ebp
1c40(2): jnz 0x4(%rip)
1c42(2): xor %ebp,%ebp
1c44(3): movsxd %r12d,%rax
1c47(4): lea 0x0(%rbx,%rax,8),%rax
1c4b(5): mov %rax,0x48(%rsp)
1c50(7): movsxd 0x208461(%rip),%rax
1c57(3): cmp %r12d,%eax
1c5a(2): jnz 0x1b(%rip)
1c5c(5): mov 0x48(%rsp),%rdi
1c61(7): lea 0x5e1a(%rip),%rsi
1c68(4): add $0x8,%rdi
1c6c(4): mov %rsi,0xfffffff8(%rdi)
1c70(5): mov %rdi,0x48(%rsp)
1c75(4): lea 0x0(%rbx,%rax,8),%rax
1c79(5): cmp %rax,0x48(%rsp)
1c7e(5): mov %rax,0x18(%rsp)
1c83(6): jbe 0xcb1(%rip)
1c89(3): cmp $0x1,%ebp
1c8c(7): lea 0x5d3d(%rip),%r14
1c93(5): mov $0x1,0x79(%rsp)
1c98(2): sbb %eax,%eax
1c9a(3): and $0xf6,%eax
1c9d(3): add $0x2a,%eax
1ca0(4): mov %eax,0x7c(%rsp)
1ca4(4): mov %al,0x7b(%rsp)
1ca8(8): nop 0x0(%rax,%rax,1)
1cb0(5): mov 0x18(%rsp),%rax
1cb5(5): cmp $0x0,0x2b(%rsp)
1cba(3): mov (%rax),%rsi
1cbd(5): mov %rsi,0x20(%rsp)
1cc2(6): jz 0x67e(%rip)
1cc8(7): lea 0x5db3(%rip),%rdi
1ccf(5): mov $0x2,%ecx
1cd4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1cd6(3): setnbe %al
1cd9(2): sbb $0x0,%al
1cdb(3): movsx %al,%eax
1cde(2): test %eax,%eax
1ce0(4): mov %eax,0x2c(%rsp)
1ce4(6): jnz 0x731(%rip)
1cea(7): lea 0x5237(%rip),%rsi
1cf1(5): mov $0x5,%edx
1cf6(2): xor %edi,%edi
1cf8(7): mov $0x1,0x208409(%rip)
1cff(5): call 0xfffff961(%rip)
1d04(7): mov 0x2083a5(%rip),%r12
1d0b(5): mov %rax,0x20(%rsp)
1d10(8): lea 0x98(%rsp),%rax
1d18(c): mov $0x0,0x90(%rsp)
1d24(c): mov $0x0,0x98(%rsp)
1d30(5): mov $0x0,0x7a(%rsp)
1d35(5): mov $0x0,0x30(%rsp)
1d3a(3): xor %r13d,%r13d
1d3d(5): mov %rax,0x10(%rsp)
1d42(8): lea 0x90(%rsp),%rax
1d4a(9): mov $0x0,0x58(%rsp)
1d53(9): mov $0x0,0x50(%rsp)
1d5c(5): mov $0x1,%ebp
1d61(5): mov %rax,0x8(%rsp)
1d66(8): lea 0x8f(%rsp),%rax
1d6e(5): mov %rax,0x40(%rsp)
1d73(8): lea 0xc0(%rsp),%rax
1d7b(5): mov %rax,0x38(%rsp)
1d80(5): mov 0x10(%rsp),%rsi
1d85(5): mov 0x8(%rsp),%rdi
1d8a(3): mov %r12,%rcx
1d8d(5): mov $0xa,%edx
1d92(5): call 0xfffff9ce(%rip)
1d97(3): test %rax,%rax
1d9a(6): jle 0x302(%rip)
1da0(8): mov 0x90(%rsp),%rbx
1da8(3): movzx (%rbx),%ecx
1dab(3): cmp $0x23,%cl
1dae(6): jz 0xa7(%rip)
1db4(5): cmp $0xa,0xffffffff(%rbx,%rax,1)
1db9(3): mov %rax,%r15
1dbc(2): jnz 0x16(%rip)
1dbe(4): sub $0x1,%r15
1dc2(5): mov $0x0,0x0(%rbx,%r15,1)
1dc7(8): mov 0x90(%rsp),%rbx
1dcf(3): movzx (%rbx),%ecx
1dd2(3): cmp $0x9,%cl
1dd5(2): jz 0x9(%rip)
1dd7(2): xor %edx,%edx
1dd9(3): cmp $0x20,%cl
1ddc(2): jnz 0x16(%rip)
1dde(2): xor %edx,%edx
1de0(4): add $0x1,%rdx
1de4(4): movzx 0x0(%rbx,%rdx,1),%ecx
1de8(3): cmp $0x20,%cl
1deb(2): jz 0xfffffff5(%rip)
1ded(3): cmp $0x9,%cl
1df0(2): jz 0xfffffff0(%rip)
1df2(3): xor %r9d,%r9d
1df5(3): cmp $0x5c,%cl
1df8(2): jnz 0xc(%rip)
1dfa(6): movzx 0x2b(%rsp),%r9d
1e00(4): add $0x1,%rdx
1e04(4): lea 0x0(%rbx,%rdx,1),%r8
1e08(7): lea 0x5022(%rip),%rdi
1e0f(5): mov $0x3,%ecx
1e14(3): mov %r8,%rsi
1e17(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e19(3): setnbe %al
1e1c(2): sbb $0x0,%al
1e1e(2): test %al,%al
1e20(6): jnz 0xd0(%rip)
1e26(5): movzx 0x3(%rbx,%rdx,1),%eax
1e2b(4): lea 0x3(%rdx),%rcx
1e2f(2): cmp $0x20,%al
1e31(2): jnz 0xb(%rip)
1e33(5): movzx 0x4(%rbx,%rdx,1),%eax
1e38(4): lea 0x4(%rdx),%rcx
1e3c(2): cmp $0x28,%al
1e3e(6): jz 0x586(%rip)
1e44(4): add $0x1,%r13
1e48(7): cmp $0x0,0x2082a4(%rip)
1e4f(6): jnz 0x381(%rip)
1e55(5): test $0x30,(%r12)
1e5a(6): jnz 0x242(%rip)
1e60(4): add $0x1,%rbp
1e64(6): jnz 0xffffff1c(%rip)
1e6a(5): mov 0x20(%rsp),%rdx
1e6f(5): mov $0x3,%esi
1e74(2): xor %edi,%edi
1e76(5): call 0x3f0a(%rip)
1e7b(7): lea 0x50b5(%rip),%rsi
1e82(3): mov %rax,%rbx
1e85(5): mov $0x5,%edx
1e8a(2): xor %edi,%edi
1e8c(5): call 0xfffff7d4(%rip)
1e91(3): mov %rbx,%rcx
1e94(3): mov %rax,%rdx
1e97(2): xor %esi,%esi
1e99(5): mov $0x1,%edi
1e9e(2): xor %eax,%eax
1ea0(5): call 0xfffff990(%rip)
1ea5(7): cmp $0x1,0x208245(%rip)
1eac(2): jnz 0x19(%rip)
1eae(5): cmp $0x0,0x2b(%rsp)
1eb3(5): mov $0x5,%edx
1eb8(7): lea 0x5901(%rip),%rsi
1ebf(6): jz 0xfffffcfc(%rip)
1ec5(7): cmp $0x0,0x208224(%rip)
1ecc(6): jz 0xfffffd71(%rip)
1ed2(5): cmp $0x0,0x2b(%rsp)
1ed7(5): mov $0x5,%edx
1edc(7): lea 0x591d(%rip),%rsi
1ee3(6): jnz 0xfffffd5a(%rip)
1ee9(5): jmp 0xfffffcd2(%rip)
1eee(2): nop 
1ef0(3): mov %r15,%rcx
1ef3(2): xor %eax,%eax
1ef5(3): sub %rdx,%rcx
1ef8(4): cmp $0x5c,(%r8)
1efc(3): setz %al
1eff(7): add 0x2081fa(%rip),%rax
1f06(3): cmp %rax,%rcx
1f09(6): jb 0xffffff3b(%rip)
1f0f(7): add 0x2081e2(%rip),%rdx
1f16(4): lea 0x0(%rbx,%rdx,1),%rcx
1f1a(3): movzx (%rcx),%eax
1f1d(2): cmp $0x20,%al
1f1f(2): jz 0xa(%rip)
1f21(2): cmp $0x9,%al
1f23(6): jnz 0xffffff21(%rip)
1f29(3): mov $0x0,(%rcx)
1f2c(3): mov %r8,%rdi
1f2f(5): mov %rdx,0x70(%rsp)
1f34(5): mov %r9b,0x68(%rsp)
1f39(5): mov %r8,0x60(%rsp)
1f3e(5): call 0xc92(%rip)
1f43(2): test %al,%al
1f45(6): jz 0xfffffeff(%rip)
1f4b(5): mov 0x70(%rsp),%rdx
1f50(3): mov %r15,%rcx
1f53(6): mov 0x2080bb(%rip),%esi
1f59(5): mov 0x60(%rsp),%r8
1f5e(6): movzx 0x68(%rsp),%r9d
1f64(4): lea 0x1(%rdx),%rax
1f68(3): sub %rax,%rcx
1f6b(4): sub $0x1,%rcx
1f6f(2): jz 0x19(%rip)
1f71(5): movzx 0x1(%rbx,%rdx,1),%ecx
1f76(3): cmp $0x20,%cl
1f79(6): jz 0x76b(%rip)
1f7f(3): cmp $0x2a,%cl
1f82(6): jz 0x762(%rip)
1f88(2): test %esi,%esi
1f8a(6): jz 0xfffffeba(%rip)
1f90(a): mov $0x1,0x20807a(%rip)
1f9a(3): add %rax,%rbx
1f9d(3): test %r9b,%r9b
1fa0(6): jnz 0x7a1(%rip)
1fa6(4): mov 0x2c(%rsp),%eax
1faa(2): test %eax,%eax
1fac(2): jnz 0x20(%rip)
1fae(7): lea 0x5acd(%rip),%rdi
1fb5(5): mov $0x2,%ecx
1fba(3): mov %rbx,%rsi
1fbd(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1fbf(3): setnbe %al
1fc2(2): sbb $0x0,%al
1fc4(2): test %al,%al
1fc6(6): jz 0xfffffe7e(%rip)
1fcc(3): xor %r15d,%r15d
1fcf(7): cmp $0x0,0x20811e(%rip)
1fd6(2): jnz 0x23(%rip)
1fd8(5): mov $0xa,%esi
1fdd(3): mov %rbx,%rdi
1fe0(5): mov %r8,0x30(%rsp)
1fe5(5): call 0xfffff6db(%rip)
1fea(5): mov 0x30(%rsp),%r8
1fef(3): xor %r15d,%r15d
1ff2(3): test %rax,%rax
1ff5(4): setnz %r15b
1ff9(5): mov 0x40(%rsp),%rdx
1ffe(5): mov 0x38(%rsp),%rsi
2003(3): mov %rbx,%rdi
2006(5): mov %r8,0x30(%rsp)
200b(5): call 0xcf5(%rip)
2010(2): test %al,%al
2012(3): mov %eax,%r9d
2015(5): mov 0x30(%rsp),%r8
201a(6): jnz 0x206(%rip)
2020(6): add $0x1,0x50(%rsp)
2026(7): cmp $0x0,0x2080c7(%rip)
202d(2): jnz 0x5b(%rip)
202f(3): test %r15d,%r15d
2032(2): jz 0x22(%rip)
2034(7): mov 0x20806d(%rip),%rdi
203b(4): mov 0x28(%rdi),%rax
203f(4): cmp 0x30(%rdi),%rax
2043(6): jnb 0x921(%rip)
2049(4): lea 0x1(%rax),%rdx
204d(4): mov %rdx,0x28(%rdi)
2051(3): mov $0x5c,(%rax)
2054(3): mov %r15d,%esi
2057(3): mov %rbx,%rdi
205a(5): call 0xbd6(%rip)
205f(7): lea 0x4eed(%rip),%rsi
2066(5): mov $0x5,%edx
206b(2): xor %edi,%edi
206d(5): call 0xfffff5f3(%rip)
2072(7): lea 0x5f58(%rip),%rsi
2079(3): mov %rax,%rdx
207c(5): mov $0x1,%edi
2081(2): xor %eax,%eax
2083(5): call 0xfffff78d(%rip)
2088(5): movzx 0x2b(%rsp),%eax
208d(5): test $0x30,(%r12)
2092(4): mov %al,0x30(%rsp)
2096(6): jz 0xfffffdca(%rip)
209c(8): mov 0x90(%rsp),%rdi
20a4(5): call 0xfffff50c(%rip)
20a9(4): mov (%r12),%ebx
20ad(3): and $0x20,%ebx
20b0(6): jnz 0x4be(%rip)
20b6(5): cmp $0x0,0x2c(%rsp)
20bb(6): jnz 0x56d(%rip)
20c1(5): cmp $0x0,0x30(%rsp)
20c6(6): jz 0x57f(%rip)
20cc(7): cmp $0x0,0x208021(%rip)
20d3(6): jnz 0x48b(%rip)
20d9(3): test %r13,%r13
20dc(2): jz 0x31(%rip)
20de(7): lea 0x57c3(%rip),%rdx
20e5(7): lea 0x57ec(%rip),%rsi
20ec(3): mov %r13,%rcx
20ef(2): xor %edi,%edi
20f1(6): mov $0x5,%r8d
20f7(5): call 0xfffff769(%rip)
20fc(3): mov %r13,%rcx
20ff(3): mov %rax,%rdx
2102(2): xor %esi,%esi
2104(2): xor %edi,%edi
2106(2): xor %eax,%eax
2108(5): call 0xfffff728(%rip)
210d(6): cmp $0x0,0x50(%rsp)
2113(2): jz 0x36(%rip)
2115(5): mov 0x50(%rsp),%r15
211a(7): lea 0x57e7(%rip),%rdx
2121(7): lea 0x5810(%rip),%rsi
2128(2): xor %edi,%edi
212a(6): mov $0x5,%r8d
2130(3): mov %r15,%rcx
2133(5): call 0xfffff72d(%rip)
2138(3): mov %r15,%rcx
213b(3): mov %rax,%rdx
213e(2): xor %esi,%esi
2140(2): xor %edi,%edi
2142(2): xor %eax,%eax
2144(5): call 0xfffff6ec(%rip)
2149(6): cmp $0x0,0x58(%rsp)
214f(2): jz 0x36(%rip)
2151(5): mov 0x58(%rsp),%r15
2156(7): lea 0x580b(%rip),%rdx
215d(7): lea 0x5834(%rip),%rsi
2164(2): xor %edi,%edi
2166(6): mov $0x5,%r8d
216c(3): mov %r15,%rcx
216f(5): call 0xfffff6f1(%rip)
2174(3): mov %r15,%rcx
2177(3): mov %rax,%rdx
217a(2): xor %esi,%esi
217c(2): xor %edi,%edi
217e(2): xor %eax,%eax
2180(5): call 0xfffff6b0(%rip)
2185(7): cmp $0x0,0x207f66(%rip)
218c(6): jz 0x3d2(%rip)
2192(5): cmp $0x0,0x7a(%rsp)
2197(6): jz 0x760(%rip)
219d(5): mov 0x50(%rsp),%rax
21a2(5): or 0x58(%rsp),%rax
21a7(2): jnz 0x17(%rip)
21a9(7): movzx 0x207f40(%rip),%eax
21b0(3): xor $0x1,%eax
21b3(3): test %r13,%r13
21b6(3): setz %bl
21b9(2): or %ebx,%eax
21bb(3): movzx %al,%ebx
21be(2): mov %ebx,%eax
21c0(3): and $0x1,%eax
21c3(4): and %al,0x79(%rsp)
21c7(5): jmp 0x1a6(%rip)
21cc(4): nop 0x0(%rax)
21d0(5): mov 0x20(%rsp),%rdx
21d5(2): xor %edi,%edi
21d7(5): mov $0x3,%esi
21dc(5): call 0x3ba4(%rip)
21e1(7): lea 0x5658(%rip),%rsi
21e8(2): xor %edi,%edi
21ea(5): mov $0x5,%edx
21ef(3): mov %rax,%rbx
21f2(5): call 0xfffff46e(%rip)
21f7(7): lea 0x4c33(%rip),%r9
21fe(3): mov %rax,%rdx
2201(3): mov %rbp,%r8
2204(3): mov %rbx,%rcx
2207(2): xor %esi,%esi
2209(2): xor %edi,%edi
220b(2): xor %eax,%eax
220d(5): call 0xfffff623(%rip)
2212(5): jmp 0xfffffc43(%rip)
2217(9): nop 0x0(%rax,%rax,1)
2220(7): cmp $0x0,0x207ecb(%rip)
2227(2): jz 0x10(%rip)
2229(8): cmp $0x0,0x8f(%rsp)
2231(6): jnz 0xfffffe57(%rip)
2237(7): mov 0x207eba(%rip),%rcx
223e(5): mov %r8,0x68(%rsp)
2243(3): shr $0x1,%rcx
2246(6): jz 0x379(%rip)
224c(5): mov %rcx,0x60(%rsp)
2251(5): mov %r9b,0x30(%rsp)
2256(5): call 0xfffff67a(%rip)
225b(2): xor %edx,%edx
225d(3): mov (%rax),%rdi
2260(6): movzx 0x30(%rsp),%r9d
2266(5): mov 0x60(%rsp),%rcx
226b(5): mov 0x68(%rsp),%r8
2270(5): mov 0x38(%rsp),%r10
2275(2): jmp 0x2b(%rip)
2277(9): nop 0x0(%rax,%rax,1)
2280(6): movzx 0x1(%r8,%rdx,2),%esi
2286(3): and $0xf,%eax
2289(5): movsx 0x0(%r14,%rax,1),%eax
228e(3): cmp %eax,0x0(%rdi,%rsi,4)
2291(2): jnz 0x2d(%rip)
2293(4): add $0x1,%rdx
2297(3): cmp %rdx,%rcx
229a(6): jz 0x3a3(%rip)
22a0(5): movzx 0x0(%r10,%rdx,1),%eax
22a5(5): movzx 0x0(%r8,%rdx,2),%r11d
22aa(2): mov %eax,%esi
22ac(4): shr $0x4,%sil
22b0(3): and $0xf,%esi
22b3(5): movsx 0x0(%r14,%rsi,1),%esi
22b8(4): cmp %esi,0x0(%rdi,%r11,4)
22bc(2): jz 0xffffffc4(%rip)
22be(3): cmp %rdx,%rcx
22c1(6): jz 0x300(%rip)
22c7(6): add $0x1,0x58(%rsp)
22cd(7): cmp $0x0,0x207e20(%rip)
22d4(6): jnz 0xfffffdb4(%rip)
22da(3): test %r15d,%r15d
22dd(6): jz 0x60b(%rip)
22e3(7): mov 0x207dbe(%rip),%rdi
22ea(4): mov 0x28(%rdi),%rax
22ee(4): cmp 0x30(%rdi),%rax
22f2(6): jnb 0x6ad(%rip)
22f8(4): lea 0x1(%rax),%rsi
22fc(4): mov %rsi,0x28(%rdi)
2300(3): mov $0x5c,(%rax)
2303(5): mov $0x1,%esi
2308(3): mov %rbx,%rdi
230b(5): mov %rcx,0x60(%rsp)
2310(5): mov %rdx,0x30(%rsp)
2315(5): call 0x91b(%rip)
231a(5): mov 0x30(%rsp),%rdx
231f(5): mov 0x60(%rsp),%rcx
2324(3): cmp %rcx,%rdx
2327(6): jz 0x2e3(%rip)
232d(5): mov $0x5,%edx
2332(7): lea 0x4c2e(%rip),%rsi
2339(5): jmp 0xfffffd32(%rip)
233e(2): nop 
2340(8): lea 0x98(%rsp),%rax
2348(8): lea 0xa0(%rsp),%rbx
2350(5): mov 0x20(%rsp),%rdi
2355(3): mov %rax,%rdx
2358(3): mov %rbx,%rsi
235b(5): call 0x9a5(%rip)
2360(2): test %al,%al
2362(6): jnz 0x105(%rip)
2368(5): mov $0x0,0x79(%rsp)
236d(6): add $0x8,0x18(%rsp)
2373(5): mov 0x18(%rsp),%rax
2378(5): cmp %rax,0x48(%rsp)
237d(6): jnbe 0xfffff933(%rip)
2383(7): cmp $0x0,0x207d7e(%rip)
238a(6): jnz 0x376(%rip)
2390(5): movzx 0x79(%rsp),%eax
2395(3): xor $0x1,%eax
2398(8): mov 0xd8(%rsp),%rdi
23a0(9): xor $0x28,%rdi
23a9(3): movzx %al,%eax
23ac(6): jnz 0x637(%rip)
23b2(7): add $0xe8,%rsp
23b9(1): pop %rbx
23ba(1): pop %rbp
23bb(2): pop %r12
23bd(2): pop %r13
23bf(2): pop %r14
23c1(2): pop %r15
23c3(1): ret near (%rsp)
23c4(4): add $0x1,%rcx
23c8(3): sub %rcx,%r15
23cb(6): jz 0xfffffa79(%rip)
23d1(3): mov %r15,%r10
23d4(3): add %rcx,%rbx
23d7(4): sub $0x1,%r10
23db(2): jz 0x26(%rip)
23dd(6): cmp $0x29,0xffffffff(%rbx,%r15,1)
23e3(2): jnz 0x18(%rip)
23e5(5): jmp 0x2a4(%rip)
23ea(6): nop 0x0(%rax,%rax,1)
23f0(5): cmp $0x29,0x0(%rbx,%r10,1)
23f5(6): jz 0x294(%rip)
23fb(4): sub $0x1,%r10
23ff(2): jnz 0xfffffff1(%rip)
2401(3): cmp $0x29,(%rbx)
2404(6): jnz 0xfffffa40(%rip)
240a(3): mov %rbx,%r11
240d(3): xor %r10d,%r10d
2410(5): jmp 0x27d(%rip)
2415(5): mov 0x20(%rsp),%rdi
241a(7): lea 0x4ae3(%rip),%rsi
2421(5): call 0x1d7f(%rip)
2426(3): test %rax,%rax
2429(3): mov %rax,%r12
242c(6): jnz 0xfffff8e4(%rip)
2432(5): mov 0x20(%rsp),%rdx
2437(5): mov $0x3,%esi
243c(2): xor %edi,%edi
243e(5): call 0x3942(%rip)
2443(3): mov %rax,%rbx
2446(5): call 0xfffff18a(%rip)
244b(2): mov (%rax),%esi
244d(7): lea 0x55a1(%rip),%rdx
2454(2): xor %eax,%eax
2456(3): mov %rbx,%rcx
2459(2): xor %edi,%edi
245b(5): call 0xfffff3d5(%rip)
2460(2): xor %eax,%eax
2462(5): jmp 0xfffffd61(%rip)
2467(5): mov 0x20(%rsp),%rdi
246c(5): mov $0x5c,%esi
2471(5): call 0xfffff24f(%rip)
2476(3): test %rax,%rax
2479(6): jz 0x3d8(%rip)
247f(7): cmp $0xa,0x207b8a(%rip)
2486(6): jz 0x2e6(%rip)
248c(5): cmp $0x0,0x78(%rsp)
2491(6): jnz 0x3dd(%rip)
2497(7): mov 0x207c5a(%rip),%rax
249e(2): xor %ebp,%ebp
24a0(3): shr $0x1,%rax
24a3(2): jz 0x3f(%rip)
24a5(3): xor %r12d,%r12d
24a8(8): nop 0x0(%rax,%rax,1)
24b0(5): movzx 0x0(%rbx,%r12,1),%edx
24b5(7): lea 0x4add(%rip),%rsi
24bc(2): xor %eax,%eax
24be(5): mov $0x1,%edi
24c3(4): add $0x1,%r12
24c7(5): call 0xfffff349(%rip)
24cc(7): mov 0x207c25(%rip),%rax
24d3(3): shr $0x1,%rax
24d6(3): cmp %r12,%rax
24d9(2): jnbe 0xffffffd7(%rip)
24db(5): cmp $0x0,0x78(%rsp)
24e0(2): jnz 0x53(%rip)
24e2(7): mov 0x207bbf(%rip),%rdi
24e9(4): mov 0x28(%rdi),%rax
24ed(4): cmp %rax,0x30(%rdi)
24f1(6): jbe 0x49f(%rip)
24f7(4): lea 0x1(%rax),%rdx
24fb(4): mov %rdx,0x28(%rdi)
24ff(3): mov $0x20,(%rax)
2502(7): mov 0x207b9f(%rip),%rdi
2509(4): mov 0x28(%rdi),%rax
250d(4): cmp 0x30(%rdi),%rax
2511(6): jnb 0x471(%rip)
2517(4): lea 0x1(%rax),%rdx
251b(4): mov %rdx,0x28(%rdi)
251f(5): movzx 0x7b(%rsp),%edi
2524(3): mov %dil,(%rax)
2527(5): mov 0x20(%rsp),%rdi
252c(2): mov %ebp,%esi
252e(5): call 0x702(%rip)
2533(7): mov 0x207b6e(%rip),%rdi
253a(7): movzx 0x207acf(%rip),%edx
2541(4): mov 0x28(%rdi),%rax
2545(4): cmp 0x30(%rdi),%rax
2549(6): jnb 0x40e(%rip)
254f(4): lea 0x1(%rax),%rcx
2553(4): mov %rcx,0x28(%rdi)
2557(2): mov %dl,(%rax)
2559(5): jmp 0xfffffe14(%rip)
255e(5): cmp $0x0,0x7a(%rsp)
2563(6): jnz 0xfffffc3a(%rip)
2569(5): jmp 0xfffffc55(%rip)
256e(5): mov 0x20(%rsp),%rdx
2573(5): mov $0x3,%esi
2578(2): xor %edi,%edi
257a(5): call 0x3806(%rip)
257f(7): lea 0x49eb(%rip),%rsi
2586(3): mov %rax,%rbx
2589(5): mov $0x5,%edx
258e(2): xor %edi,%edi
2590(5): call 0xfffff0d0(%rip)
2595(3): mov %rbx,%rcx
2598(3): mov %rax,%rdx
259b(2): xor %esi,%esi
259d(2): xor %eax,%eax
259f(2): xor %edi,%edi
25a1(5): call 0xfffff28f(%rip)
25a6(2): xor %eax,%eax
25a8(5): jmp 0xfffffc1b(%rip)
25ad(7): cmp $0x0,0x207b3f(%rip)
25b4(6): jnz 0xfffff689(%rip)
25ba(5): jmp 0xfffff90b(%rip)
25bf(2): xor %edx,%edx
25c1(7): movzx 0x207b2c(%rip),%eax
25c8(2): test %al,%al
25ca(4): mov %al,0x7a(%rsp)
25ce(6): jnz 0xfffffaba(%rip)
25d4(7): movzx 0x207b16(%rip),%eax
25db(2): test %al,%al
25dd(4): mov %al,0x7a(%rsp)
25e1(6): jnz 0xfffffaa7(%rip)
25e7(3): test %r15d,%r15d
25ea(6): jnz 0x427(%rip)
25f0(2): xor %esi,%esi
25f2(3): mov %rbx,%rdi
25f5(5): mov %r9b,0x30(%rsp)
25fa(5): call 0x636(%rip)
25ff(6): movzx 0x30(%rsp),%r9d
2605(5): mov %r9b,0x7a(%rsp)
260a(7): cmp $0x0,0x207ae0(%rip)
2611(6): jnz 0xfffffa77(%rip)
2617(5): mov $0x5,%edx
261c(7): lea 0x494b(%rip),%rsi
2623(5): jmp 0xfffffa48(%rip)
2628(3): mov %r12,%rdi
262b(5): call 0x4205(%rip)
2630(2): test %eax,%eax
2632(6): jz 0xfffffa8f(%rip)
2638(5): jmp 0xfffffdfa(%rip)
263d(3): mov %rcx,%rdx
2640(5): jmp 0xffffff81(%rip)
2645(5): mov 0x20(%rsp),%rdx
264a(2): xor %edi,%edi
264c(5): mov $0x3,%esi
2651(5): call 0x372f(%rip)
2656(7): lea 0x5213(%rip),%rsi
265d(2): xor %edi,%edi
265f(5): mov $0x5,%edx
2664(3): mov %rax,%rbp
2667(5): call 0xffffeff9(%rip)
266c(7): lea 0x47be(%rip),%r8
2673(3): mov %rax,%rdx
2676(3): mov %rbp,%rcx
2679(2): xor %esi,%esi
267b(2): xor %edi,%edi
267d(2): xor %eax,%eax
267f(5): call 0xfffff1b1(%rip)
2684(5): jmp 0xfffffb3a(%rip)
2689(4): lea 0x0(%rbx,%r10,1),%r11
268d(3): test %r9b,%r9b
2690(6): jnz 0x2ae(%rip)
2696(4): add $0x1,%r10
269a(4): mov $0x0,(%r11)
269e(2): jmp 0x6(%rip)
26a0(4): add $0x1,%r10
26a4(5): movzx 0x0(%rbx,%r10,1),%eax
26a9(2): cmp $0x20,%al
26ab(2): jz 0xfffffff5(%rip)
26ad(2): cmp $0x9,%al
26af(2): jz 0xfffffff1(%rip)
26b1(2): cmp $0x3d,%al
26b3(6): jnz 0xfffff791(%rip)
26b9(5): lea 0x1(%rbx,%r10,1),%rdx
26be(3): movzx (%rdx),%eax
26c1(3): mov %rdx,%r8
26c4(4): lea 0x1(%rdx),%rdx
26c8(2): cmp $0x20,%al
26ca(2): jz 0xfffffff4(%rip)
26cc(2): cmp $0x9,%al
26ce(2): jz 0xfffffff0(%rip)
26d0(3): mov %r8,%rdi
26d3(5): mov %r8,0x60(%rsp)
26d8(5): call 0x4f8(%rip)
26dd(5): mov 0x60(%rsp),%r8
26e2(2): jmp 0x7d(%rip)
26e4(3): sub $0x1,%esi
26e7(6): jz 0xfffff8b3(%rip)
26ed(a): mov $0x0,0x20791d(%rip)
26f7(4): lea 0x2(%rdx),%rax
26fb(5): jmp 0xfffff89f(%rip)
2700(7): mov 0x2079a9(%rip),%rdi
2707(5): call 0x4129(%rip)
270c(3): add $0x1,%eax
270f(6): jnz 0xfffffc81(%rip)
2715(7): lea 0x480c(%rip),%rsi
271c(5): mov $0x5,%edx
2721(2): xor %edi,%edi
2723(5): call 0xffffef3d(%rip)
2728(3): mov %rax,%rbx
272b(5): call 0xffffeea5(%rip)
2730(2): mov (%rax),%esi
2732(3): mov %rbx,%rdx
2735(5): mov $0x1,%edi
273a(2): xor %eax,%eax
273c(5): call 0xfffff0f4(%rip)
2741(3): mov %r15,%rsi
2744(3): mov %rbx,%rdi
2747(5): mov %r8,0x60(%rsp)
274c(3): sub %rax,%rsi
274f(5): call 0x401(%rip)
2754(5): mov 0x60(%rsp),%r8
2759(3): test %rax,%rax
275c(3): setnz %al
275f(2): test %al,%al
2761(6): jnz 0xfffff845(%rip)
2767(5): jmp 0xfffff6dd(%rip)
276c(5): cmp $0x0,0x78(%rsp)
2771(6): jz 0xa6(%rip)
2777(7): mov 0x20792a(%rip),%rdi
277e(4): mov 0x28(%rdi),%rax
2782(4): cmp 0x30(%rdi),%rax
2786(6): jnb 0x23c(%rip)
278c(4): lea 0x1(%rax),%rdx
2790(4): mov %rdx,0x28(%rdi)
2794(3): mov $0x5c,(%rax)
2797(7): mov 0x20790a(%rip),%rcx
279e(7): lea 0x468c(%rip),%rdi
27a5(5): mov $0x3,%edx
27aa(5): mov $0x1,%esi
27af(5): call 0xfffff021(%rip)
27b4(7): mov 0x2078ed(%rip),%rcx
27bb(7): lea 0x47dc(%rip),%rdi
27c2(5): mov $0x2,%edx
27c7(5): mov $0x1,%esi
27cc(5): call 0xfffff004(%rip)
27d1(5): mov 0x20(%rsp),%rdi
27d6(5): mov $0x1,%esi
27db(5): call 0x455(%rip)
27e0(7): mov 0x2078c1(%rip),%rcx
27e7(7): lea 0x47b3(%rip),%rdi
27ee(5): mov $0x4,%edx
27f3(5): mov $0x1,%esi
27f8(5): call 0xffffefd8(%rip)
27fd(7): mov 0x2078f4(%rip),%rax
2804(5): mov $0x1,%ebp
2809(3): shr $0x1,%rax
280c(6): jnz 0xfffffc99(%rip)
2812(5): jmp 0xfffffcc9(%rip)
2817(7): mov 0x20788a(%rip),%rdi
281e(4): mov 0x28(%rdi),%rax
2822(4): cmp 0x30(%rdi),%rax
2826(6): jnb 0x14d(%rip)
282c(4): lea 0x1(%rax),%rdx
2830(5): mov $0x1,%ebp
2835(4): mov %rdx,0x28(%rdi)
2839(3): mov $0x5c,(%rax)
283c(7): mov 0x2078b5(%rip),%rax
2843(3): shr $0x1,%rax
2846(6): jnz 0xfffffc5f(%rip)
284c(5): jmp 0xfffffc96(%rip)
2851(5): mov 0x20(%rsp),%rdi
2856(5): mov $0xa,%esi
285b(5): call 0xffffee65(%rip)
2860(3): test %rax,%rax
2863(6): jnz 0xfffffc1c(%rip)
2869(5): jmp 0xfffffc23(%rip)
286e(7): mov 0x207833(%rip),%rcx
2875(7): lea 0x45b5(%rip),%rdi
287c(5): mov $0x3,%edx
2881(5): mov $0x1,%esi
2886(2): xor %ebp,%ebp
2888(5): call 0xffffef48(%rip)
288d(7): mov 0x207814(%rip),%rcx
2894(7): lea 0x4703(%rip),%rdi
289b(5): mov $0x2,%edx
28a0(5): mov $0x1,%esi
28a5(5): call 0xffffef2b(%rip)
28aa(5): mov 0x20(%rsp),%rdi
28af(2): xor %esi,%esi
28b1(5): call 0x37f(%rip)
28b6(7): mov 0x2077eb(%rip),%rcx
28bd(7): lea 0x46dd(%rip),%rdi
28c4(5): mov $0x4,%edx
28c9(5): mov $0x1,%esi
28ce(5): call 0xffffef02(%rip)
28d3(7): mov 0x20781e(%rip),%rax
28da(3): shr $0x1,%rax
28dd(6): jnz 0xfffffbc8(%rip)
28e3(5): jmp 0xfffffc50(%rip)
28e8(2): xor %esi,%esi
28ea(3): mov %rbx,%rdi
28ed(5): call 0x343(%rip)
28f2(5): jmp 0xfffffa3b(%rip)
28f7(5): mov 0x20(%rsp),%rdx
28fc(2): xor %edi,%edi
28fe(5): mov $0x3,%esi
2903(5): call 0x347d(%rip)
2908(7): lea 0x4671(%rip),%rsi
290f(3): mov %rax,%rbp
2912(2): xor %edi,%edi
2914(5): mov $0x5,%edx
2919(5): call 0xffffed47(%rip)
291e(3): mov %rbp,%rcx
2921(3): mov %rax,%rdx
2924(2): xor %esi,%esi
2926(2): xor %edi,%edi
2928(2): xor %eax,%eax
292a(5): call 0xffffef06(%rip)
292f(5): jmp 0xfffff88f(%rip)
2934(5): mov $0x1,0x79(%rsp)
2939(5): jmp 0xfffffa4a(%rip)
293e(3): mov %r10,%rsi
2941(3): mov %rbx,%rdi
2944(5): call 0x20c(%rip)
2949(3): test %rax,%rax
294c(6): jnz 0xfffffd4a(%rip)
2952(5): jmp 0xfffff4f2(%rip)
2957(3): movzx %dl,%esi
295a(5): call 0xffffed76(%rip)
295f(5): jmp 0xfffffa0e(%rip)
2964(5): mov $0x5c,%esi
2969(5): call 0xffffed67(%rip)
296e(5): jmp 0xfffff6e6(%rip)
2973(5): mov $0x5c,%esi
2978(5): call 0xffffed58(%rip)
297d(5): jmp 0xfffffe80(%rip)
2982(4): mov 0x7c(%rsp),%esi
2986(5): call 0xffffed4a(%rip)
298b(5): jmp 0xfffffb9c(%rip)
2990(5): mov $0x20,%esi
2995(5): call 0xffffed3b(%rip)
299a(5): jmp 0xfffffb68(%rip)
299f(5): mov $0x5c,%esi
29a4(5): mov %rcx,0x60(%rsp)
29a9(5): mov %rdx,0x30(%rsp)
29ae(5): call 0xffffed22(%rip)
29b3(5): mov 0x30(%rsp),%rdx
29b8(5): mov 0x60(%rsp),%rcx
29bd(5): jmp 0xfffff946(%rip)
29c2(5): mov $0x5c,%esi
29c7(5): call 0xffffed09(%rip)
29cc(5): jmp 0xfffffdcb(%rip)
29d1(5): cmp $0xffffff7e,%eax
29d6(6): jnz 0xfffff1fa(%rip)
29dc(2): xor %edi,%edi
29de(5): call 0x4c2(%rip)
29e3(5): call 0xffffecad(%rip)
29e8(7): cmp $0x0,0x207705(%rip)
29ef(6): jz 0xfffff1a8(%rip)
29f5(5): cmp $0x0,0x2b(%rsp)
29fa(6): jnz 0xfffffbb3(%rip)
2a00(5): mov $0x5,%edx
2a05(7): lea 0x4d34(%rip),%rsi
2a0c(5): jmp 0xfffff1af(%rip)
2a11(5): mov %r9b,0x7a(%rsp)
2a16(5): jmp 0xfffff8cd(%rip)
2a1b(5): mov $0x5,%edx
2a20(7): lea 0x4bd9(%rip),%rsi
2a27(5): jmp 0xfffff194(%rip)
2a2c(5): mov $0x5,%edx
2a31(7): lea 0x4cc0(%rip),%rsi
2a38(5): jmp 0xfffff183(%rip)

"_start" :
2a40(2): xor %ebp,%ebp
2a42(3): mov %rdx,%r9
2a45(1): pop %rsi
2a46(3): mov %rsp,%rdx
2a49(4): and $0xfffffff0,%rsp
2a4d(1): push %rax
2a4e(1): push %rsp
2a4f(7): lea 0x439a(%rip),%r8
2a56(7): lea 0x4323(%rip),%rcx
2a5d(7): lea 0xffffee9c(%rip),%rdi
2a64(6): call 0x20755e(%rip)
2a6a(1): hlt 

"deregister_tm_clones" :
2a70(7): lea 0x207629(%rip),%rdi
2a77(1): push %rbp
2a78(7): lea 0x207621(%rip),%rax
2a7f(3): cmp %rdi,%rax
2a82(3): mov %rsp,%rbp
2a85(2): jz 0x1b(%rip)
2a87(7): mov 0x207532(%rip),%rax
2a8e(3): test %rax,%rax
2a91(2): jz 0xf(%rip)
2a93(1): pop %rbp
2a94(2): jmp %rax
2a96(a): nop 0x0(%rax,%rax,1)
2aa0(1): pop %rbp
2aa1(1): ret near (%rsp)

"register_tm_clones" :
2ab0(7): lea 0x2075e9(%rip),%rdi
2ab7(7): lea 0x2075e2(%rip),%rsi
2abe(1): push %rbp
2abf(3): sub %rdi,%rsi
2ac2(3): mov %rsp,%rbp
2ac5(4): sar $0x3,%rsi
2ac9(3): mov %rsi,%rax
2acc(4): shr $0x3f,%rax
2ad0(3): add %rax,%rsi
2ad3(3): sar $0x1,%rsi
2ad6(2): jz 0x1a(%rip)
2ad8(7): mov 0x2074f9(%rip),%rax
2adf(3): test %rax,%rax
2ae2(2): jz 0xe(%rip)
2ae4(1): pop %rbp
2ae5(2): jmp %rax
2ae7(9): nop 0x0(%rax,%rax,1)
2af0(1): pop %rbp
2af1(1): ret near (%rsp)

"__do_global_dtors_aux" :
2b00(7): cmp $0x0,0x2075e1(%rip)
2b07(2): jnz 0x31(%rip)
2b09(8): cmp $0x0,0x2074cf(%rip)
2b11(1): push %rbp
2b12(3): mov %rsp,%rbp
2b15(2): jz 0xe(%rip)
2b17(7): mov 0x2074ea(%rip),%rdi
2b1e(5): call 0xffffedd2(%rip)
2b23(5): call 0xffffff4d(%rip)
2b28(7): mov $0x1,0x2075b9(%rip)
2b2f(1): pop %rbp
2b30(1): ret near (%rsp)
2b31(7): nop 0x0(%rax)
2b38(2): REP ret near (%rsp)

"frame_dummy" :
2b40(1): push %rbp
2b41(3): mov %rsp,%rbp
2b44(1): pop %rbp
2b45(5): jmp 0xffffff6b(%rip)

"filename_unescape" :
2b50(2): xor %edx,%edx
2b52(3): test %rsi,%rsi
2b55(4): lea 0x1(%rdi),%rcx
2b59(4): lea 0xffffffff(%rsi),%r8
2b5d(2): jz 0x5a(%rip)
2b5f(4): movzx 0x0(%rdi,%rdx,1),%eax
2b63(2): test %al,%al
2b65(2): jz 0x2b(%rip)
2b67(2): cmp $0x5c,%al
2b69(2): jnz 0x2f(%rip)
2b6b(3): cmp %rdx,%r8
2b6e(2): jz 0x22(%rip)
2b70(4): add $0x1,%rdx
2b74(4): movzx 0x0(%rdi,%rdx,1),%eax
2b78(2): cmp $0x5c,%al
2b7a(2): jz 0x46(%rip)
2b7c(2): cmp $0x6e,%al
2b7e(2): jnz 0x12(%rip)
2b80(3): mov %rcx,%r9
2b83(4): mov $0xa,0xffffffff(%rcx)
2b87(2): jmp 0x17(%rip)
2b89(7): nop 0x0(%rax)
2b90(2): xor %eax,%eax
2b92(1): ret near (%rsp)
2b93(5): nop 0x0(%rax,%rax,1)
2b98(3): mov %rcx,%r9
2b9b(3): mov %al,0xffffffff(%rcx)
2b9e(4): add $0x1,%rdx
2ba2(4): add $0x1,%rcx
2ba6(3): cmp %rdx,%rsi
2ba9(2): jnbe 0xffffffb6(%rip)
2bab(3): add %rdi,%rsi
2bae(3): cmp %rsi,%r9
2bb1(2): jnb 0x6(%rip)
2bb3(4): mov $0x0,(%r9)
2bb7(3): mov %rdi,%rax
2bba(1): ret near (%rsp)
2bbb(5): nop 0x0(%rax,%rax,1)
2bc0(3): mov %rcx,%r9
2bc3(4): mov $0x5c,0xffffffff(%rcx)
2bc7(2): jmp 0xffffffd7(%rip)

"hex_digits" :
2bd0(1): push %rbp
2bd1(1): push %rbx
2bd2(4): sub $0x8,%rsp
2bd6(7): mov 0x20751b(%rip),%rbp
2bdd(3): test %rbp,%rbp
2be0(2): jz 0x40(%rip)
2be2(3): mov %rdi,%rbx
2be5(5): call 0xffffecfb(%rip)
2bea(3): mov (%rax),%rcx
2bed(3): mov %rbx,%rax
2bf0(2): jmp 0x15(%rip)
2bf2(6): nop 0x0(%rax,%rax,1)
2bf8(4): add $0x1,%rax
2bfc(2): mov %eax,%edx
2bfe(2): sub %ebx,%edx
2c00(3): cmp %rbp,%rdx
2c03(2): jnb 0x20(%rip)
2c05(3): movzx (%rax),%edx
2c08(5): test $0x10,0x1(%rcx,%rdx,2)
2c0d(2): jnz 0xffffffeb(%rip)
2c0f(4): add $0x8,%rsp
2c13(2): xor %eax,%eax
2c15(1): pop %rbx
2c16(1): pop %rbp
2c17(1): ret near (%rsp)
2c18(8): nop 0x0(%rax,%rax,1)
2c20(3): mov %rdi,%rax
2c23(3): cmp $0x0,(%rax)
2c26(3): setz %al
2c29(4): add $0x8,%rsp
2c2d(1): pop %rbx
2c2e(1): pop %rbp
2c2f(1): ret near (%rsp)

"print_filename" :
2c30(1): push %rbp
2c31(1): push %rbx
2c32(3): mov %rdi,%rbx
2c35(4): sub $0x8,%rsp
2c39(3): test %sil,%sil
2c3c(6): jz 0x94(%rip)
2c42(3): movzx (%rdi),%esi
2c45(7): lea 0x41d8(%rip),%rbp
2c4c(3): test %sil,%sil
2c4f(2): jnz 0x2b(%rip)
2c51(2): jmp 0x5d(%rip)
2c53(5): nop 0x0(%rax,%rax,1)
2c58(7): lea 0x41c8(%rip),%rdi
2c5f(5): mov $0x2,%edx
2c64(5): mov $0x1,%esi
2c69(5): call 0xffffeb67(%rip)
2c6e(4): add $0x1,%rbx
2c72(3): movzx (%rbx),%esi
2c75(3): test %sil,%sil
2c78(2): jz 0x36(%rip)
2c7a(4): cmp $0xa,%sil
2c7e(7): mov 0x207423(%rip),%rcx
2c85(2): jz 0x33(%rip)
2c87(4): cmp $0x5c,%sil
2c8b(2): jz 0xffffffcd(%rip)
2c8d(4): mov 0x28(%rcx),%rax
2c91(4): cmp 0x30(%rcx),%rax
2c95(2): jnb 0x53(%rip)
2c97(4): lea 0x1(%rax),%rdx
2c9b(4): add $0x1,%rbx
2c9f(4): mov %rdx,0x28(%rcx)
2ca3(3): mov %sil,(%rax)
2ca6(3): movzx (%rbx),%esi
2ca9(3): test %sil,%sil
2cac(2): jnz 0xffffffce(%rip)
2cae(4): add $0x8,%rsp
2cb2(1): pop %rbx
2cb3(1): pop %rbp
2cb4(1): ret near (%rsp)
2cb5(3): nop (%rax)
2cb8(5): mov $0x2,%edx
2cbd(5): mov $0x1,%esi
2cc2(3): mov %rbp,%rdi
2cc5(5): call 0xffffeb0b(%rip)
2cca(2): jmp 0xffffffa4(%rip)
2ccc(4): nop 0x0(%rax)
2cd0(7): mov 0x2073d1(%rip),%rsi
2cd7(4): add $0x8,%rsp
2cdb(1): pop %rbx
2cdc(1): pop %rbp
2cdd(5): jmp 0xffffea63(%rip)
2ce2(6): nop 0x0(%rax,%rax,1)
2ce8(3): mov %rcx,%rdi
2ceb(5): call 0xffffe9e5(%rip)
2cf0(5): jmp 0xffffff7e(%rip)

"digest_file.isra.1" :
2d00(2): push %r13
2d02(2): push %r12
2d04(5): mov $0x2,%ecx
2d09(1): push %rbp
2d0a(1): push %rbx
2d0b(3): mov %rdi,%rbp
2d0e(7): lea 0x4d6d(%rip),%rdi
2d15(3): mov %rsi,%r12
2d18(3): mov %rbp,%rsi
2d1b(4): sub $0x8,%rsp
2d1f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d21(3): mov $0x0,(%rdx)
2d24(3): setnbe %al
2d27(2): sbb $0x0,%al
2d29(2): test %al,%al
2d2b(6): jnz 0x95(%rip)
2d31(7): mov 0x207378(%rip),%rbx
2d38(5): mov $0x2,%esi
2d3d(7): mov $0x1,0x2073c4(%rip)
2d44(3): mov %rbx,%rdi
2d47(5): call 0x1429(%rip)
2d4c(3): mov %r12,%rsi
2d4f(3): mov %rbx,%rdi
2d52(5): call 0x12ce(%rip)
2d57(2): test %eax,%eax
2d59(2): jnz 0x17(%rip)
2d5b(6): mov $0x1,%r12d
2d61(4): add $0x8,%rsp
2d65(3): mov %r12d,%eax
2d68(1): pop %rbx
2d69(1): pop %rbp
2d6a(2): pop %r12
2d6c(2): pop %r13
2d6e(1): ret near (%rsp)
2d6f(1): nop 
2d70(3): mov %rbp,%rdx
2d73(2): xor %edi,%edi
2d75(5): mov $0x3,%esi
2d7a(5): call 0x3006(%rip)
2d7f(3): mov %rax,%rbp
2d82(3): xor %r12d,%r12d
2d85(5): call 0xffffe84b(%rip)
2d8a(2): mov (%rax),%esi
2d8c(7): lea 0x4c62(%rip),%rdx
2d93(2): xor %edi,%edi
2d95(2): xor %eax,%eax
2d97(3): mov %rbp,%rcx
2d9a(5): call 0xffffea96(%rip)
2d9f(7): cmp %rbx,0x20730a(%rip)
2da6(2): jz 0xffffffbb(%rip)
2da8(3): mov %rbx,%rdi
2dab(5): call 0x3a85(%rip)
2db0(4): add $0x8,%rsp
2db4(3): mov %r12d,%eax
2db7(1): pop %rbx
2db8(1): pop %rbp
2db9(2): pop %r12
2dbb(2): pop %r13
2dbd(1): ret near (%rsp)
2dbe(2): nop 
2dc0(7): lea 0x413d(%rip),%rsi
2dc7(3): mov %rbp,%rdi
2dca(3): mov %rdx,%r13
2dcd(5): call 0x13d3(%rip)
2dd2(3): test %rax,%rax
2dd5(3): mov %rax,%rbx
2dd8(2): jz 0x68(%rip)
2dda(3): mov %rax,%rdi
2ddd(5): mov $0x2,%esi
2de2(5): call 0x138e(%rip)
2de7(3): mov %r12,%rsi
2dea(3): mov %rbx,%rdi
2ded(5): call 0x1233(%rip)
2df2(2): test %eax,%eax
2df4(6): jnz 0xffffff7c(%rip)
2dfa(3): mov %rbx,%rdi
2dfd(5): call 0x3a33(%rip)
2e02(2): test %eax,%eax
2e04(6): jz 0xffffff57(%rip)
2e0a(3): mov %rbp,%rdx
2e0d(5): mov $0x3,%esi
2e12(2): xor %edi,%edi
2e14(5): call 0x2f6c(%rip)
2e19(3): mov %rax,%rbx
2e1c(3): xor %r12d,%r12d
2e1f(5): call 0xffffe7b1(%rip)
2e24(2): mov (%rax),%esi
2e26(7): lea 0x4bc8(%rip),%rdx
2e2d(3): mov %rbx,%rcx
2e30(2): xor %edi,%edi
2e32(2): xor %eax,%eax
2e34(5): call 0xffffe9fc(%rip)
2e39(5): jmp 0xffffff28(%rip)
2e3e(2): nop 
2e40(8): movzx 0x2072aa(%rip),%r12d
2e48(5): call 0xffffe788(%rip)
2e4d(3): mov %rax,%rbx
2e50(3): test %r12b,%r12b
2e53(2): jz 0x7(%rip)
2e55(3): cmp $0x2,(%rax)
2e58(2): jz 0x38(%rip)
2e5a(3): mov %rbp,%rdx
2e5d(5): mov $0x3,%esi
2e62(2): xor %edi,%edi
2e64(5): call 0x2f1c(%rip)
2e69(2): mov (%rbx),%esi
2e6b(7): lea 0x4b83(%rip),%rdx
2e72(3): mov %rax,%rcx
2e75(2): xor %edi,%edi
2e77(2): xor %eax,%eax
2e79(3): xor %r12d,%r12d
2e7c(5): call 0xffffe9b4(%rip)
2e81(5): jmp 0xfffffee0(%rip)
2e86(a): nop 0x0(%rax,%rax,1)
2e90(5): mov $0x1,0x0(%r13)
2e95(5): jmp 0xfffffecc(%rip)

"usage" :
2ea0(2): push %r13
2ea2(2): push %r12
2ea4(5): mov $0x5,%edx
2ea9(1): push %rbp
2eaa(1): push %rbx
2eab(2): mov %edi,%ebp
2ead(7): sub $0x88,%rsp
2eb4(7): mov 0x207265(%rip),%rbx
2ebb(9): mov $0x28,%rax
2ec4(5): mov %rax,0x78(%rsp)
2ec9(2): xor %eax,%eax
2ecb(2): test %edi,%edi
2ecd(2): jz 0x30(%rip)
2ecf(7): lea 0x4122(%rip),%rsi
2ed6(2): xor %edi,%edi
2ed8(5): call 0xffffe788(%rip)
2edd(7): mov 0x2071fc(%rip),%rdi
2ee4(3): mov %rax,%rdx
2ee7(3): mov %rbx,%rcx
2eea(5): mov $0x1,%esi
2eef(2): xor %eax,%eax
2ef1(5): call 0xffffe9af(%rip)
2ef6(2): mov %ebp,%edi
2ef8(5): call 0xffffe988(%rip)
2efd(7): lea 0x411c(%rip),%rsi
2f04(2): xor %edi,%edi
2f06(5): call 0xffffe75a(%rip)
2f0b(7): lea 0x3f1f(%rip),%rcx
2f12(6): mov $0x80,%r8d
2f18(3): mov %rbx,%rdx
2f1b(3): mov %rax,%rsi
2f1e(5): mov $0x1,%edi
2f23(2): xor %eax,%eax
2f25(5): call 0xffffe8eb(%rip)
2f2a(7): mov 0x207177(%rip),%rbx
2f31(7): lea 0x4130(%rip),%rsi
2f38(5): mov $0x5,%edx
2f3d(2): xor %edi,%edi
2f3f(5): call 0xffffe721(%rip)
2f44(3): mov %rbx,%rsi
2f47(3): mov %rax,%rdi
2f4a(5): call 0xffffe7f6(%rip)
2f4f(7): mov 0x207152(%rip),%rbx
2f56(7): lea 0x4143(%rip),%rsi
2f5d(5): mov $0x5,%edx
2f62(2): xor %edi,%edi
2f64(5): call 0xffffe6fc(%rip)
2f69(3): mov %rbx,%rsi
2f6c(3): mov %rax,%rdi
2f6f(5): call 0xffffe7d1(%rip)
2f74(7): lea 0x4155(%rip),%rsi
2f7b(2): xor %edi,%edi
2f7d(5): mov $0x5,%edx
2f82(5): call 0xffffe6de(%rip)
2f87(7): lea 0x3ea3(%rip),%rdx
2f8e(3): mov %rax,%rsi
2f91(5): mov $0x1,%edi
2f96(2): xor %eax,%eax
2f98(5): call 0xffffe878(%rip)
2f9d(7): mov 0x207104(%rip),%rbx
2fa4(7): lea 0x416d(%rip),%rsi
2fab(5): mov $0x5,%edx
2fb0(2): xor %edi,%edi
2fb2(5): call 0xffffe6ae(%rip)
2fb7(3): mov %rbx,%rsi
2fba(3): mov %rax,%rdi
2fbd(5): call 0xffffe783(%rip)
2fc2(7): mov 0x2070df(%rip),%rbx
2fc9(7): lea 0x4180(%rip),%rsi
2fd0(5): mov $0x5,%edx
2fd5(2): xor %edi,%edi
2fd7(5): call 0xffffe689(%rip)
2fdc(3): mov %rbx,%rsi
2fdf(3): mov %rax,%rdi
2fe2(5): call 0xffffe75e(%rip)
2fe7(7): mov 0x2070ba(%rip),%rbx
2fee(7): lea 0x4193(%rip),%rsi
2ff5(5): mov $0x5,%edx
2ffa(2): xor %edi,%edi
2ffc(5): call 0xffffe664(%rip)
3001(3): mov %rbx,%rsi
3004(3): mov %rax,%rdi
3007(5): call 0xffffe739(%rip)
300c(7): mov 0x207095(%rip),%rbx
3013(7): lea 0x41ee(%rip),%rsi
301a(5): mov $0x5,%edx
301f(2): xor %edi,%edi
3021(5): call 0xffffe63f(%rip)
3026(3): mov %rbx,%rsi
3029(3): mov %rax,%rdi
302c(5): call 0xffffe714(%rip)
3031(7): mov 0x207070(%rip),%rbx
3038(7): lea 0x4381(%rip),%rsi
303f(5): mov $0x5,%edx
3044(2): xor %edi,%edi
3046(5): call 0xffffe61a(%rip)
304b(3): mov %rbx,%rsi
304e(3): mov %rax,%rdi
3051(5): call 0xffffe6ef(%rip)
3056(7): mov 0x20704b(%rip),%rbx
305d(7): lea 0x438c(%rip),%rsi
3064(5): mov $0x5,%edx
3069(2): xor %edi,%edi
306b(5): call 0xffffe5f5(%rip)
3070(3): mov %rbx,%rsi
3073(3): mov %rax,%rdi
3076(7): lea 0x3dad(%rip),%rbx
307d(5): call 0xffffe6c3(%rip)
3082(7): lea 0x439f(%rip),%rsi
3089(2): xor %edi,%edi
308b(5): mov $0x5,%edx
3090(5): call 0xffffe5d0(%rip)
3095(7): lea 0x3d99(%rip),%rdx
309c(3): mov %rax,%rsi
309f(5): mov $0x1,%edi
30a4(2): xor %eax,%eax
30a6(5): call 0xffffe76a(%rip)
30ab(7): lea 0x3d8c(%rip),%rax
30b2(7): lea 0x3dc6(%rip),%rcx
30b9(9): mov $0x0,0x60(%rsp)
30c2(9): mov $0x0,0x68(%rsp)
30cb(3): mov %rsp,%rdx
30ce(4): mov %rax,(%rsp)
30d2(7): lea 0x3d67(%rip),%rax
30d9(5): mov %rcx,0x30(%rsp)
30de(7): lea 0x3da4(%rip),%rcx
30e5(5): mov %rax,0x8(%rsp)
30ea(7): lea 0x3dc7(%rip),%rax
30f1(5): mov %rcx,0x40(%rsp)
30f6(7): lea 0x3d96(%rip),%rcx
30fd(5): mov %rax,0x10(%rsp)
3102(7): lea 0x3d47(%rip),%rax
3109(5): mov %rcx,0x50(%rsp)
310e(5): mov %rax,0x18(%rsp)
3113(7): lea 0x3d4c(%rip),%rax
311a(5): mov %rax,0x20(%rsp)
311f(7): lea 0x3d4a(%rip),%rax
3126(5): mov %rax,0x28(%rsp)
312b(5): mov %rax,0x38(%rsp)
3130(5): mov %rax,0x48(%rsp)
3135(5): mov %rax,0x58(%rsp)
313a(6): nop 0x0(%rax,%rax,1)
3140(4): add $0x10,%rdx
3144(3): mov (%rdx),%rdi
3147(3): test %rdi,%rdi
314a(2): jz 0x15(%rip)
314c(5): mov $0x7,%ecx
3151(3): mov %rbx,%rsi
3154(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3156(3): setnbe %al
3159(2): sbb $0x0,%al
315b(2): test %al,%al
315d(2): jnz 0xffffffe3(%rip)
315f(4): mov 0x8(%rdx),%r12
3163(2): xor %edi,%edi
3165(5): mov $0x5,%edx
316a(7): lea 0x3d2c(%rip),%rsi
3171(3): test %r12,%r12
3174(6): jz 0xc7(%rip)
317a(5): call 0xffffe4e6(%rip)
317f(7): lea 0x43d2(%rip),%rcx
3186(7): lea 0x3d27(%rip),%rdx
318d(3): mov %rax,%rsi
3190(5): mov $0x1,%edi
3195(2): xor %eax,%eax
3197(5): call 0xffffe679(%rip)
319c(2): xor %esi,%esi
319e(5): mov $0x5,%edi
31a3(5): call 0xffffe65d(%rip)
31a8(3): test %rax,%rax
31ab(2): jz 0x1e(%rip)
31ad(7): lea 0x3d0e(%rip),%rsi
31b4(5): mov $0x3,%edx
31b9(3): mov %rax,%rdi
31bc(5): call 0xffffe424(%rip)
31c1(2): test %eax,%eax
31c3(6): jnz 0x10d(%rip)
31c9(7): lea 0x3cf6(%rip),%rsi
31d0(2): xor %edi,%edi
31d2(5): mov $0x5,%edx
31d7(5): call 0xffffe489(%rip)
31dc(7): lea 0x3c47(%rip),%rcx
31e3(7): lea 0x436e(%rip),%rdx
31ea(3): mov %rax,%rsi
31ed(5): mov $0x1,%edi
31f2(2): xor %eax,%eax
31f4(5): call 0xffffe61c(%rip)
31f9(3): cmp %rbx,%r12
31fc(7): lea 0x3c57(%rip),%rcx
3203(7): lea 0x4db7(%rip),%rbx
320a(4): cmove %rcx,%rbx
320e(7): lea 0x43b3(%rip),%rsi
3215(2): xor %edi,%edi
3217(5): mov $0x5,%edx
321c(5): call 0xffffe444(%rip)
3221(3): mov %rbx,%rcx
3224(3): mov %rax,%rsi
3227(3): mov %r12,%rdx
322a(5): mov $0x1,%edi
322f(2): xor %eax,%eax
3231(5): call 0xffffe5df(%rip)
3236(5): jmp 0xfffffcc0(%rip)
323b(5): call 0xffffe425(%rip)
3240(7): lea 0x4311(%rip),%rcx
3247(7): lea 0x3c66(%rip),%rdx
324e(3): mov %rax,%rsi
3251(5): mov $0x1,%edi
3256(2): xor %eax,%eax
3258(5): call 0xffffe5b8(%rip)
325d(2): xor %esi,%esi
325f(5): mov $0x5,%edi
3264(5): call 0xffffe59c(%rip)
3269(3): test %rax,%rax
326c(2): jz 0x1a(%rip)
326e(7): lea 0x3c4d(%rip),%rsi
3275(5): mov $0x3,%edx
327a(3): mov %rax,%rdi
327d(5): call 0xffffe363(%rip)
3282(2): test %eax,%eax
3284(2): jnz 0x45(%rip)
3286(7): lea 0x3c39(%rip),%rsi
328d(5): mov $0x5,%edx
3292(2): xor %edi,%edi
3294(7): lea 0x3b8f(%rip),%r12
329b(7): lea 0x3bb8(%rip),%rbx
32a2(5): call 0xffffe3be(%rip)
32a7(7): lea 0x3b7c(%rip),%rcx
32ae(7): lea 0x42a3(%rip),%rdx
32b5(3): mov %rax,%rsi
32b8(5): mov $0x1,%edi
32bd(2): xor %eax,%eax
32bf(5): call 0xffffe551(%rip)
32c4(5): jmp 0xffffff4a(%rip)
32c9(7): lea 0x3b5a(%rip),%r12
32d0(7): mov 0x206dd1(%rip),%r13
32d7(7): lea 0x42a2(%rip),%rsi
32de(2): xor %edi,%edi
32e0(5): mov $0x5,%edx
32e5(5): call 0xffffe37b(%rip)
32ea(3): mov %r13,%rsi
32ed(3): mov %rax,%rdi
32f0(5): call 0xffffe450(%rip)
32f5(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
3300(7): mov %rdi,0x206e11(%rip)
3307(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3310(7): mov %dil,0x206df9(%rip)
3317(1): ret near (%rsp)

"close_stdout" :
3320(1): push %rbp
3321(1): push %rbx
3322(4): sub $0x8,%rsp
3326(7): mov 0x206d7b(%rip),%rdi
332d(5): call 0x3933(%rip)
3332(2): test %eax,%eax
3334(2): jz 0x18(%rip)
3336(5): call 0xffffe29a(%rip)
333b(7): cmp $0x0,0x206dce(%rip)
3342(3): mov %rax,%rbx
3345(2): jz 0x1e(%rip)
3347(3): cmp $0x20,(%rax)
334a(2): jnz 0x19(%rip)
334c(7): mov 0x206d8d(%rip),%rdi
3353(5): call 0x390d(%rip)
3358(2): test %eax,%eax
335a(2): jnz 0x48(%rip)
335c(4): add $0x8,%rsp
3360(1): pop %rbx
3361(1): pop %rbp
3362(1): ret near (%rsp)
3363(7): lea 0x467b(%rip),%rsi
336a(2): xor %edi,%edi
336c(5): mov $0x5,%edx
3371(5): call 0xffffe2ef(%rip)
3376(7): mov 0x206d9b(%rip),%rdi
337d(3): mov %rax,%rbp
3380(3): test %rdi,%rdi
3383(2): jz 0x2a(%rip)
3385(5): call 0x29cb(%rip)
338a(2): mov (%rbx),%esi
338c(7): lea 0x465e(%rip),%rdx
3393(3): mov %rax,%rcx
3396(3): mov %rbp,%r8
3399(2): xor %edi,%edi
339b(2): xor %eax,%eax
339d(5): call 0xffffe493(%rip)
33a2(6): mov 0x206c78(%rip),%edi
33a8(5): call 0xffffe248(%rip)
33ad(2): mov (%rbx),%esi
33af(7): lea 0x463f(%rip),%rdx
33b6(3): mov %rax,%rcx
33b9(2): xor %edi,%edi
33bb(2): xor %eax,%eax
33bd(5): call 0xffffe473(%rip)
33c2(2): jmp 0xffffffe0(%rip)

"md5_init_ctx" :
33d0(a): mov $0x-1167088121787636991,%rax
33da(8): mov $0x0,0x10(%rdi)
33e2(7): mov $0x0,0x18(%rdi)
33e9(3): mov %rax,(%rdi)
33ec(a): mov $0x1167088121787636990,%rax
33f6(4): mov %rax,0x8(%rdi)
33fa(1): ret near (%rsp)

"md5_read_ctx" :
3400(2): mov (%rdi),%edx
3402(3): mov %rsi,%rax
3405(2): mov %edx,(%rsi)
3407(3): mov 0x4(%rdi),%edx
340a(3): mov %edx,0x4(%rsi)
340d(3): mov 0x8(%rdi),%edx
3410(3): mov %edx,0x8(%rsi)
3413(3): mov 0xc(%rdi),%edx
3416(3): mov %edx,0xc(%rsi)
3419(1): ret near (%rsp)

"md5_process_block" :
3420(3): mov %rsi,%rax
3423(2): push %r15
3425(2): push %r14
3427(4): and $0xfffffffc,%rax
342b(2): push %r13
342d(2): push %r12
342f(1): push %rbp
3430(1): push %rbx
3431(3): mov %rdi,%rbx
3434(4): lea 0x0(%rbx,%rax,1),%rcx
3438(2): mov (%rdx),%eax
343a(3): mov %rdx,%rdi
343d(4): mov 0x4(%rdx),%r11d
3441(4): mov 0x8(%rdx),%r10d
3445(5): mov %rdx,0xfffffff8(%rsp)
344a(5): mov %rcx,0xfffffff0(%rsp)
344f(4): mov %eax,0xffffffe8(%rsp)
3453(3): mov 0xc(%rdx),%eax
3456(2): mov %esi,%edx
3458(4): mov %eax,0xffffffe0(%rsp)
345c(2): xor %eax,%eax
345e(3): add 0x10(%rdi),%edx
3461(3): setb %al
3464(4): shr $0x20,%rsi
3468(3): add 0x14(%rdi),%esi
346b(3): mov %edx,0x10(%rdi)
346e(2): add %eax,%esi
3470(3): cmp %rcx,%rbx
3473(3): mov %esi,0x14(%rdi)
3476(6): jnb 0x6f4(%rip)
347c(3): mov %r10d,%r15d
347f(1): nop 
3480(3): mov (%rbx),%r14d
3483(4): mov 0xffffffe0(%rsp),%edi
3487(4): mov 0xffffffe8(%rsp),%eax
348b(3): mov 0x4(%rbx),%esi
348e(4): mov 0xc(%rbx),%r8d
3492(4): mov 0x14(%rbx),%r10d
3496(3): mov 0x18(%rbx),%ebp
3499(4): mov 0x1c(%rbx),%r13d
349d(8): lea 0xd76aa478(%r14,%rax,1),%edx
34a5(2): mov %edi,%eax
34a7(7): lea 0xe8c7b756(%rsi,%rdi,1),%ecx
34ae(3): xor %r15d,%eax
34b1(4): mov %esi,0xffffffbc(%rsp)
34b5(5): mov %r10d,0xffffffcc(%rsp)
34ba(3): and %r11d,%eax
34bd(4): mov 0x24(%rbx),%r12d
34c1(5): mov %r8d,0xffffffc4(%rsp)
34c6(2): xor %edi,%eax
34c8(8): lea 0xc1bdceee(%r8,%r11,1),%edi
34d0(4): mov 0x2c(%rbx),%r8d
34d4(2): add %edx,%eax
34d6(3): mov %r11d,%edx
34d9(3): rol $0x7,%eax
34dc(3): xor %r15d,%edx
34df(5): mov %r12d,0xffffffd4(%rsp)
34e4(3): add %r11d,%eax
34e7(5): mov %r8d,0xffffffdc(%rsp)
34ec(2): and %eax,%edx
34ee(3): mov %eax,%r9d
34f1(3): xor %r15d,%edx
34f4(3): xor %r11d,%r9d
34f7(2): add %ecx,%edx
34f9(3): mov 0x8(%rbx),%ecx
34fc(3): rol $0xc,%edx
34ff(2): add %eax,%edx
3501(8): lea 0x242070db(%rcx,%r15,1),%esi
3509(4): mov %ecx,0xffffffc0(%rsp)
350d(3): mov %r9d,%ecx
3510(2): and %edx,%ecx
3512(3): mov %eax,%r9d
3515(3): xor %r11d,%ecx
3518(3): xor %edx,%r9d
351b(2): add %esi,%ecx
351d(3): mov %r9d,%esi
3520(4): mov 0x10(%rbx),%r9d
3524(3): ror $0xf,%ecx
3527(2): add %edx,%ecx
3529(2): and %ecx,%esi
352b(5): mov %r9d,0xffffffc8(%rsp)
3530(2): xor %eax,%esi
3532(2): add %edi,%esi
3534(8): lea 0xf57c0faf(%r9,%rax,1),%edi
353c(2): mov %edx,%eax
353e(3): ror $0xa,%esi
3541(2): xor %ecx,%eax
3543(4): mov 0x3c(%rbx),%r9d
3547(2): add %ecx,%esi
3549(2): and %esi,%eax
354b(2): xor %edx,%eax
354d(2): add %edi,%eax
354f(8): lea 0x4787c62a(%r10,%rdx,1),%edi
3557(2): mov %ecx,%edx
3559(3): rol $0x7,%eax
355c(2): xor %esi,%edx
355e(3): mov %ebp,%r10d
3561(2): add %esi,%eax
3563(5): mov %r10d,0xffffffe4(%rsp)
3568(2): and %eax,%edx
356a(2): xor %ecx,%edx
356c(2): add %edi,%edx
356e(7): lea 0xa8304613(%rbp,%rcx,1),%edi
3575(2): mov %esi,%ebp
3577(2): xor %eax,%ebp
3579(3): rol $0xc,%edx
357c(2): add %eax,%edx
357e(2): mov %ebp,%ecx
3580(2): mov %eax,%ebp
3582(2): and %edx,%ecx
3584(2): xor %edx,%ebp
3586(2): xor %esi,%ecx
3588(2): add %edi,%ecx
358a(8): lea 0xfd469501(%r13,%rsi,1),%edi
3592(2): mov %ebp,%esi
3594(3): ror $0xf,%ecx
3597(3): mov 0x20(%rbx),%ebp
359a(2): add %edx,%ecx
359c(2): and %ecx,%esi
359e(2): xor %eax,%esi
35a0(4): mov %ebp,0xffffffd0(%rsp)
35a4(2): add %edi,%esi
35a6(7): lea 0x698098d8(%rbp,%rax,1),%edi
35ad(2): mov %edx,%eax
35af(3): ror $0xa,%esi
35b2(2): xor %ecx,%eax
35b4(3): mov 0x30(%rbx),%ebp
35b7(2): add %ecx,%esi
35b9(2): and %esi,%eax
35bb(2): xor %edx,%eax
35bd(2): add %edi,%eax
35bf(8): lea 0x8b44f7af(%r12,%rdx,1),%edi
35c7(2): mov %ecx,%edx
35c9(3): rol $0x7,%eax
35cc(2): xor %esi,%edx
35ce(4): mov 0x38(%rbx),%r12d
35d2(2): add %esi,%eax
35d4(2): and %eax,%edx
35d6(2): xor %ecx,%edx
35d8(2): add %edi,%edx
35da(3): mov 0x28(%rbx),%edi
35dd(3): rol $0xc,%edx
35e0(2): add %eax,%edx
35e2(4): mov %edi,0xffffffd8(%rsp)
35e6(7): lea 0xffff5bb1(%rdi,%rcx,1),%edi
35ed(2): mov %esi,%ecx
35ef(2): xor %eax,%ecx
35f1(2): and %edx,%ecx
35f3(2): xor %esi,%ecx
35f5(2): add %edi,%ecx
35f7(8): lea 0x895cd7be(%r8,%rsi,1),%edi
35ff(2): mov %eax,%esi
3601(3): ror $0xf,%ecx
3604(2): xor %edx,%esi
3606(4): mov 0x34(%rbx),%r8d
360a(2): add %edx,%ecx
360c(4): add $0x40,%rbx
3610(2): and %ecx,%esi
3612(2): xor %eax,%esi
3614(2): add %edi,%esi
3616(7): lea 0x6b901122(%rbp,%rax,1),%edi
361d(2): mov %edx,%eax
361f(3): ror $0xa,%esi
3622(2): xor %ecx,%eax
3624(2): add %ecx,%esi
3626(2): and %esi,%eax
3628(2): xor %edx,%eax
362a(2): add %edi,%eax
362c(8): lea 0xfd987193(%r8,%rdx,1),%edi
3634(2): mov %ecx,%edx
3636(3): rol $0x7,%eax
3639(2): xor %esi,%edx
363b(2): add %esi,%eax
363d(2): and %eax,%edx
363f(2): xor %ecx,%edx
3641(2): add %edi,%edx
3643(8): lea 0xa679438e(%r12,%rcx,1),%edi
364b(2): mov %esi,%ecx
364d(3): rol $0xc,%edx
3650(2): xor %eax,%ecx
3652(2): add %eax,%edx
3654(2): and %edx,%ecx
3656(2): xor %esi,%ecx
3658(2): add %edi,%ecx
365a(8): lea 0x49b40821(%r9,%rsi,1),%edi
3662(2): mov %eax,%esi
3664(3): ror $0xf,%ecx
3667(2): xor %edx,%esi
3669(2): add %edx,%ecx
366b(2): and %ecx,%esi
366d(2): xor %eax,%esi
366f(2): add %edi,%esi
3671(4): mov 0xffffffbc(%rsp),%edi
3675(3): ror $0xa,%esi
3678(2): add %ecx,%esi
367a(7): lea 0xf61e2562(%rdi,%rax,1),%edi
3681(2): mov %ecx,%eax
3683(2): xor %esi,%eax
3685(2): and %edx,%eax
3687(2): xor %ecx,%eax
3689(2): add %edi,%eax
368b(8): lea 0xc040b340(%r10,%rdx,1),%edi
3693(2): mov %esi,%edx
3695(3): rol $0x5,%eax
3698(2): add %esi,%eax
369a(2): xor %eax,%edx
369c(2): and %ecx,%edx
369e(2): xor %esi,%edx
36a0(2): add %edi,%edx
36a2(4): mov 0xffffffdc(%rsp),%edi
36a6(3): rol $0x9,%edx
36a9(2): add %eax,%edx
36ab(7): lea 0x265e5a51(%rdi,%rcx,1),%edi
36b2(2): mov %eax,%ecx
36b4(2): xor %edx,%ecx
36b6(2): and %esi,%ecx
36b8(2): xor %eax,%ecx
36ba(2): add %edi,%ecx
36bc(8): lea 0xe9b6c7aa(%r14,%rsi,1),%edi
36c4(2): mov %edx,%esi
36c6(3): rol $0xe,%ecx
36c9(2): add %edx,%ecx
36cb(2): xor %ecx,%esi
36cd(2): and %eax,%esi
36cf(2): xor %edx,%esi
36d1(2): add %edi,%esi
36d3(4): mov 0xffffffcc(%rsp),%edi
36d7(3): ror $0xc,%esi
36da(2): add %ecx,%esi
36dc(7): lea 0xd62f105d(%rdi,%rax,1),%edi
36e3(2): mov %ecx,%eax
36e5(2): xor %esi,%eax
36e7(2): and %edx,%eax
36e9(2): xor %ecx,%eax
36eb(2): add %edi,%eax
36ed(4): mov 0xffffffd8(%rsp),%edi
36f1(3): rol $0x5,%eax
36f4(2): add %esi,%eax
36f6(7): lea 0x2441453(%rdi,%rdx,1),%edi
36fd(2): mov %esi,%edx
36ff(2): xor %eax,%edx
3701(2): and %ecx,%edx
3703(2): xor %esi,%edx
3705(2): add %edi,%edx
3707(8): lea 0xd8a1e681(%r9,%rcx,1),%edi
370f(2): mov %eax,%ecx
3711(3): rol $0x9,%edx
3714(2): add %eax,%edx
3716(2): xor %edx,%ecx
3718(2): and %esi,%ecx
371a(2): xor %eax,%ecx
371c(2): add %edi,%ecx
371e(4): mov 0xffffffc8(%rsp),%edi
3722(5): mov 0xffffffd4(%rsp),%r10d
3727(3): rol $0xe,%ecx
372a(2): add %edx,%ecx
372c(7): lea 0xe7d3fbc8(%rdi,%rsi,1),%edi
3733(2): mov %edx,%esi
3735(2): xor %ecx,%esi
3737(2): and %eax,%esi
3739(2): xor %edx,%esi
373b(2): add %edi,%esi
373d(8): lea 0x21e1cde6(%r10,%rax,1),%edi
3745(2): mov %ecx,%eax
3747(3): ror $0xc,%esi
374a(5): mov 0xffffffd0(%rsp),%r10d
374f(2): add %ecx,%esi
3751(2): xor %esi,%eax
3753(2): and %edx,%eax
3755(2): xor %ecx,%eax
3757(2): add %edi,%eax
3759(8): lea 0xc33707d6(%r12,%rdx,1),%edi
3761(2): mov %esi,%edx
3763(3): rol $0x5,%eax
3766(2): add %esi,%eax
3768(2): xor %eax,%edx
376a(2): and %ecx,%edx
376c(2): xor %esi,%edx
376e(2): add %edi,%edx
3770(4): mov 0xffffffc4(%rsp),%edi
3774(3): rol $0x9,%edx
3777(2): add %eax,%edx
3779(7): lea 0xf4d50d87(%rdi,%rcx,1),%edi
3780(2): mov %eax,%ecx
3782(2): xor %edx,%ecx
3784(2): and %esi,%ecx
3786(8): lea 0x455a14ed(%r10,%rsi,1),%esi
378e(3): mov %edx,%r10d
3791(2): xor %eax,%ecx
3793(2): add %edi,%ecx
3795(3): rol $0xe,%ecx
3798(2): add %edx,%ecx
379a(3): xor %ecx,%r10d
379d(3): mov %r10d,%edi
37a0(2): and %eax,%edi
37a2(2): xor %edx,%edi
37a4(2): add %esi,%edi
37a6(8): lea 0xa9e3e905(%r8,%rax,1),%esi
37ae(2): mov %ecx,%eax
37b0(3): ror $0xc,%edi
37b3(2): add %ecx,%edi
37b5(2): xor %edi,%eax
37b7(8): lea 0x8d2a4c8a(%rbp,%rdi,1),%r10d
37bf(2): and %edx,%eax
37c1(2): xor %ecx,%eax
37c3(5): mov %r10d,0xffffffec(%rsp)
37c8(2): add %esi,%eax
37ca(4): mov 0xffffffc0(%rsp),%esi
37ce(3): rol $0x5,%eax
37d1(2): add %edi,%eax
37d3(7): lea 0xfcefa3f8(%rsi,%rdx,1),%esi
37da(2): mov %edi,%edx
37dc(2): xor %eax,%edx
37de(2): and %ecx,%edx
37e0(8): lea 0x676f02d9(%r13,%rcx,1),%ecx
37e8(2): xor %edi,%edx
37ea(2): add %esi,%edx
37ec(2): mov %eax,%esi
37ee(3): rol $0x9,%edx
37f1(2): add %eax,%edx
37f3(2): xor %edx,%esi
37f5(2): and %edi,%esi
37f7(2): xor %eax,%esi
37f9(2): add %ecx,%esi
37fb(2): mov %edx,%ecx
37fd(3): rol $0xe,%esi
3800(2): add %edx,%esi
3802(2): xor %esi,%ecx
3804(3): mov %ecx,%r10d
3807(3): and %eax,%r10d
380a(3): mov %r10d,%edi
380d(5): mov 0xffffffcc(%rsp),%r10d
3812(2): xor %edx,%edi
3814(4): add 0xffffffec(%rsp),%edi
3818(8): lea 0xfffa3942(%r10,%rax,1),%eax
3820(3): ror $0xc,%edi
3823(2): add %esi,%edi
3825(2): xor %edi,%ecx
3827(2): add %eax,%ecx
3829(4): mov 0xffffffd0(%rsp),%eax
382d(3): rol $0x4,%ecx
3830(2): add %edi,%ecx
3832(7): lea 0x8771f681(%rax,%rdx,1),%eax
3839(2): mov %esi,%edx
383b(2): xor %edi,%edx
383d(2): xor %ecx,%edx
383f(2): add %eax,%edx
3841(4): mov 0xffffffdc(%rsp),%eax
3845(3): rol $0xb,%edx
3848(2): add %ecx,%edx
384a(7): lea 0x6d9d6122(%rax,%rsi,1),%eax
3851(2): mov %edi,%esi
3853(8): lea 0xfde5380c(%r12,%rdi,1),%edi
385b(2): xor %ecx,%esi
385d(2): xor %edx,%esi
385f(2): add %eax,%esi
3861(2): mov %ecx,%eax
3863(3): rol $0x10,%esi
3866(2): xor %edx,%eax
3868(2): add %edx,%esi
386a(2): xor %esi,%eax
386c(3): mov %esi,%r10d
386f(2): add %edi,%eax
3871(4): mov 0xffffffbc(%rsp),%edi
3875(3): ror $0x9,%eax
3878(2): add %esi,%eax
387a(7): lea 0xa4beea44(%rdi,%rcx,1),%edi
3881(2): mov %edx,%ecx
3883(3): xor %eax,%r10d
3886(2): xor %esi,%ecx
3888(8): lea 0xf6bb4b60(%r13,%rsi,1),%esi
3890(2): xor %eax,%ecx
3892(2): add %edi,%ecx
3894(4): mov 0xffffffc8(%rsp),%edi
3898(3): rol $0x4,%ecx
389b(2): add %eax,%ecx
389d(7): lea 0x4bdecfa9(%rdi,%rdx,1),%edx
38a4(3): mov %r10d,%edi
38a7(2): xor %ecx,%edi
38a9(2): add %edx,%edi
38ab(2): mov %eax,%edx
38ad(3): rol $0xb,%edi
38b0(2): xor %ecx,%edx
38b2(2): add %ecx,%edi
38b4(2): xor %edi,%edx
38b6(2): add %esi,%edx
38b8(4): mov 0xffffffd8(%rsp),%esi
38bc(3): rol $0x10,%edx
38bf(2): add %edi,%edx
38c1(7): lea 0xbebfbc70(%rsi,%rax,1),%eax
38c8(2): mov %ecx,%esi
38ca(2): xor %edi,%esi
38cc(2): xor %edx,%esi
38ce(2): add %eax,%esi
38d0(8): lea 0x289b7ec6(%r8,%rcx,1),%eax
38d8(2): mov %edi,%ecx
38da(3): ror $0x9,%esi
38dd(2): xor %edx,%ecx
38df(8): lea 0xeaa127fa(%r14,%rdi,1),%edi
38e7(2): add %edx,%esi
38e9(2): xor %esi,%ecx
38eb(3): mov %esi,%r10d
38ee(2): add %eax,%ecx
38f0(2): mov %edx,%eax
38f2(3): rol $0x4,%ecx
38f5(2): xor %esi,%eax
38f7(2): add %esi,%ecx
38f9(2): xor %ecx,%eax
38fb(3): xor %ecx,%r10d
38fe(2): add %edi,%eax
3900(4): mov 0xffffffc4(%rsp),%edi
3904(3): rol $0xb,%eax
3907(2): add %ecx,%eax
3909(7): lea 0xd4ef3085(%rdi,%rdx,1),%edx
3910(3): mov %r10d,%edi
3913(2): xor %eax,%edi
3915(2): add %edx,%edi
3917(4): mov 0xffffffe4(%rsp),%edx
391b(3): rol $0x10,%edi
391e(2): add %eax,%edi
3920(7): lea 0x4881d05(%rdx,%rsi,1),%edx
3927(2): mov %ecx,%esi
3929(2): xor %eax,%esi
392b(2): xor %edi,%esi
392d(2): add %edx,%esi
392f(4): mov 0xffffffd4(%rsp),%edx
3933(3): ror $0x9,%esi
3936(2): add %edi,%esi
3938(7): lea 0xd9d4d039(%rdx,%rcx,1),%ecx
393f(2): mov %eax,%edx
3941(7): lea 0xe6db99e5(%rbp,%rax,1),%eax
3948(2): xor %edi,%edx
394a(3): mov %esi,%r10d
394d(2): xor %esi,%edx
394f(2): add %ecx,%edx
3951(2): mov %edi,%ecx
3953(3): rol $0x4,%edx
3956(2): add %esi,%edx
3958(2): xor %esi,%ecx
395a(2): xor %edx,%ecx
395c(3): xor %edx,%r10d
395f(2): add %eax,%ecx
3961(8): lea 0x1fa27cf8(%r9,%rdi,1),%eax
3969(3): mov %r10d,%edi
396c(3): rol $0xb,%ecx
396f(5): mov 0xffffffcc(%rsp),%r10d
3974(2): add %edx,%ecx
3976(2): xor %ecx,%edi
3978(2): add %eax,%edi
397a(4): mov 0xffffffc0(%rsp),%eax
397e(3): rol $0x10,%edi
3981(2): add %ecx,%edi
3983(7): lea 0xc4ac5665(%rax,%rsi,1),%esi
398a(2): mov %edx,%eax
398c(2): xor %ecx,%eax
398e(2): xor %edi,%eax
3990(2): add %esi,%eax
3992(8): lea 0xf4292244(%r14,%rdx,1),%esi
399a(2): mov %ecx,%edx
399c(3): ror $0x9,%eax
399f(2): not %edx
39a1(5): mov 0xffffffbc(%rsp),%r14d
39a6(2): add %edi,%eax
39a8(2): or %eax,%edx
39aa(2): xor %edi,%edx
39ac(2): add %esi,%edx
39ae(8): lea 0x432aff97(%r13,%rcx,1),%esi
39b6(3): mov %edi,%r13d
39b9(3): rol $0x6,%edx
39bc(3): not %r13d
39bf(8): lea 0xab9423a7(%r12,%rdi,1),%edi
39c7(2): add %eax,%edx
39c9(3): mov %r13d,%ecx
39cc(2): or %edx,%ecx
39ce(3): mov %edx,%r13d
39d1(2): xor %eax,%ecx
39d3(3): not %r13d
39d6(2): add %esi,%ecx
39d8(2): mov %eax,%esi
39da(3): rol $0xa,%ecx
39dd(2): not %esi
39df(2): add %edx,%ecx
39e1(2): or %ecx,%esi
39e3(3): mov %ecx,%r12d
39e6(2): xor %edx,%esi
39e8(3): not %r12d
39eb(2): add %edi,%esi
39ed(8): lea 0xfc93a039(%r10,%rax,1),%edi
39f5(3): mov %r13d,%eax
39f8(3): rol $0xf,%esi
39fb(5): mov 0xffffffe4(%rsp),%r10d
3a00(2): add %ecx,%esi
3a02(2): or %esi,%eax
3a04(2): xor %ecx,%eax
3a06(2): add %edi,%eax
3a08(7): lea 0x655b59c3(%rbp,%rdx,1),%edi
3a0f(4): mov 0xffffffc4(%rsp),%ebp
3a13(3): ror $0xb,%eax
3a16(3): mov %r12d,%edx
3a19(2): add %esi,%eax
3a1b(2): or %eax,%edx
3a1d(2): xor %esi,%edx
3a1f(2): add %edi,%edx
3a21(7): lea 0x8f0ccc92(%rbp,%rcx,1),%edi
3a28(2): mov %esi,%ebp
3a2a(3): rol $0x6,%edx
3a2d(2): not %ebp
3a2f(2): add %eax,%edx
3a31(2): mov %ebp,%ecx
3a33(2): or %edx,%ecx
3a35(2): mov %edx,%ebp
3a37(2): xor %eax,%ecx
3a39(2): not %ebp
3a3b(2): add %edi,%ecx
3a3d(4): mov 0xffffffd8(%rsp),%edi
3a41(3): rol $0xa,%ecx
3a44(2): add %edx,%ecx
3a46(7): lea 0xffeff47d(%rdi,%rsi,1),%edi
3a4d(2): mov %eax,%esi
3a4f(2): not %esi
3a51(2): or %ecx,%esi
3a53(2): xor %edx,%esi
3a55(2): add %edi,%esi
3a57(8): lea 0x85845dd1(%r14,%rax,1),%edi
3a5f(2): mov %ebp,%eax
3a61(3): rol $0xf,%esi
3a64(5): mov 0xffffffd0(%rsp),%r14d
3a69(2): mov %ecx,%ebp
3a6b(2): add %ecx,%esi
3a6d(2): not %ebp
3a6f(2): or %esi,%eax
3a71(2): xor %ecx,%eax
3a73(2): add %edi,%eax
3a75(8): lea 0x6fa87e4f(%r14,%rdx,1),%edi
3a7d(2): mov %ebp,%edx
3a7f(3): ror $0xb,%eax
3a82(2): mov %esi,%ebp
3a84(5): mov 0xffffffdc(%rsp),%r14d
3a89(2): add %esi,%eax
3a8b(2): not %ebp
3a8d(2): or %eax,%edx
3a8f(2): xor %esi,%edx
3a91(2): add %edi,%edx
3a93(8): lea 0xfe2ce6e0(%r9,%rcx,1),%edi
3a9b(2): mov %ebp,%ecx
3a9d(3): rol $0x6,%edx
3aa0(5): mov 0xffffffc8(%rsp),%r9d
3aa5(2): add %eax,%edx
3aa7(2): or %edx,%ecx
3aa9(2): xor %eax,%ecx
3aab(2): add %edi,%ecx
3aad(8): lea 0xa3014314(%r10,%rsi,1),%edi
3ab5(2): mov %eax,%esi
3ab7(3): rol $0xa,%ecx
3aba(2): not %esi
3abc(8): lea 0x4e0811a1(%r8,%rax,1),%eax
3ac4(2): add %edx,%ecx
3ac6(3): mov %edx,%r8d
3ac9(5): mov 0xffffffd4(%rsp),%r10d
3ace(2): or %ecx,%esi
3ad0(3): not %r8d
3ad3(2): xor %edx,%esi
3ad5(8): lea 0xf7537e82(%r9,%rdx,1),%edx
3add(3): mov %ecx,%r9d
3ae0(2): add %edi,%esi
3ae2(3): mov %r8d,%edi
3ae5(3): not %r9d
3ae8(3): rol $0xf,%esi
3aeb(2): add %ecx,%esi
3aed(2): or %esi,%edi
3aef(2): xor %ecx,%edi
3af1(8): lea 0xbd3af235(%r14,%rcx,1),%ecx
3af9(2): add %eax,%edi
3afb(3): mov %r9d,%eax
3afe(3): ror $0xb,%edi
3b01(2): add %esi,%edi
3b03(2): or %edi,%eax
3b05(2): xor %esi,%eax
3b07(2): add %edx,%eax
3b09(2): mov %esi,%edx
3b0b(3): rol $0x6,%eax
3b0e(2): not %edx
3b10(2): add %edi,%eax
3b12(2): or %eax,%edx
3b14(2): xor %edi,%edx
3b16(2): add %ecx,%edx
3b18(4): mov 0xffffffc0(%rsp),%ecx
3b1c(3): rol $0xa,%edx
3b1f(2): add %eax,%edx
3b21(7): lea 0x2ad7d2bb(%rcx,%rsi,1),%esi
3b28(2): mov %edi,%ecx
3b2a(8): lea 0xeb86d391(%r10,%rdi,1),%edi
3b32(2): not %ecx
3b34(2): or %edx,%ecx
3b36(2): xor %eax,%ecx
3b38(2): add %esi,%ecx
3b3a(2): mov %eax,%esi
3b3c(3): rol $0xf,%ecx
3b3f(2): not %esi
3b41(2): add %edx,%ecx
3b43(2): or %ecx,%esi
3b45(2): xor %edx,%esi
3b47(2): add %edi,%esi
3b49(3): ror $0xb,%esi
3b4c(2): add %ecx,%esi
3b4e(4): add %eax,0xffffffe8(%rsp)
3b52(3): add %ecx,%r15d
3b55(3): add %esi,%r11d
3b58(4): add %edx,0xffffffe0(%rsp)
3b5c(5): cmp %rbx,0xfffffff0(%rsp)
3b61(6): jnbe 0xfffff91f(%rip)
3b67(3): mov %r15d,%r10d
3b6a(5): mov 0xfffffff8(%rsp),%rax
3b6f(4): mov 0xffffffe8(%rsp),%ebx
3b73(2): mov %ebx,(%rax)
3b75(4): mov 0xffffffe0(%rsp),%ebx
3b79(4): mov %r11d,0x4(%rax)
3b7d(4): mov %r10d,0x8(%rax)
3b81(3): mov %ebx,0xc(%rax)
3b84(1): pop %rbx
3b85(1): pop %rbp
3b86(2): pop %r12
3b88(2): pop %r13
3b8a(2): pop %r14
3b8c(2): pop %r15
3b8e(1): ret near (%rsp)

"md5_finish_ctx" :
3b90(1): push %rbp
3b91(1): push %rbx
3b92(3): mov %rdi,%rbx
3b95(3): mov 0x18(%rdi),%eax
3b98(3): mov %rsi,%rbp
3b9b(3): mov 0x14(%rbx),%edx
3b9e(3): cmp $0x38,%eax
3ba1(2): mov %eax,%esi
3ba3(3): sbb %r8,%r8
3ba6(4): and $0xffffffc0,%r8
3baa(4): sub $0xffffff80,%r8
3bae(3): cmp $0x38,%eax
3bb1(3): sbb %rcx,%rcx
3bb4(4): and $0xfffffff0,%rcx
3bb8(4): add $0x1f,%rcx
3bbc(3): cmp $0x38,%eax
3bbf(3): sbb %rdi,%rdi
3bc2(3): xor %r9d,%r9d
3bc5(4): and $0xfffffff0,%rdi
3bc9(4): add $0x1e,%rdi
3bcd(3): add 0x10(%rbx),%esi
3bd0(4): setb %r9b
3bd4(3): mov %esi,0x10(%rbx)
3bd7(3): test %r9d,%r9d
3bda(2): jz 0x8(%rip)
3bdc(3): add $0x1,%edx
3bdf(3): mov %edx,0x14(%rbx)
3be2(8): lea 0x0(,%rsi,8),%r9d
3bea(3): shl/sal $0x3,%edx
3bed(3): shr $0x1d,%esi
3bf0(2): or %esi,%edx
3bf2(7): lea 0x3e07(%rip),%rsi
3bf9(5): mov %r9d,0x1c(%rbx,%rdi,4)
3bfe(3): mov %r8,%rdi
3c01(4): mov %edx,0x1c(%rbx,%rcx,4)
3c05(3): sub %rax,%rdi
3c08(4): lea 0x1c(%rbx),%r9
3c0c(4): lea 0xfffffff8(%rdi),%rcx
3c10(4): lea 0x0(%r9,%rax,1),%rdx
3c14(4): cmp $0x8,%rcx
3c18(2): jnb 0x28(%rip)
3c1a(3): test $0x4,%cl
3c1d(2): jnz 0x73(%rip)
3c1f(3): test %rcx,%rcx
3c22(2): jz 0x4a(%rip)
3c24(7): movzx 0x3dd5(%rip),%eax
3c2b(3): test $0x2,%cl
3c2e(2): mov %al,(%rdx)
3c30(2): jz 0x3c(%rip)
3c32(5): movzx 0xfffffffe(%rsi,%rcx,1),%eax
3c37(5): mov %ax,0xfffffffe(%rdx,%rcx,1)
3c3c(2): jmp 0x30(%rip)
3c3e(2): nop 
3c40(7): mov 0x3db9(%rip),%rax
3c47(4): lea 0x8(%rdx),%rdi
3c4b(4): and $0xfffffff8,%rdi
3c4f(3): mov %rax,(%rdx)
3c52(5): mov 0xfffffff8(%rsi,%rcx,1),%rax
3c57(5): mov %rax,0xfffffff8(%rdx,%rcx,1)
3c5c(3): sub %rdi,%rdx
3c5f(3): add %rdx,%rcx
3c62(3): sub %rdx,%rsi
3c65(4): shr $0x3,%rcx
3c69(3): REP movsd rsi(%ds,10),rdi(%es,10)
3c6c(3): mov %rbx,%rdx
3c6f(3): mov %r8,%rsi
3c72(3): mov %r9,%rdi
3c75(5): call 0xfffff7ab(%rip)
3c7a(3): mov %rbp,%rsi
3c7d(3): mov %rbx,%rdi
3c80(1): pop %rbx
3c81(1): pop %rbp
3c82(5): jmp 0xfffff77e(%rip)
3c87(9): nop 0x0(%rax,%rax,1)
3c90(6): mov 0x3d6a(%rip),%eax
3c96(2): mov %eax,(%rdx)
3c98(4): mov 0xfffffffc(%rsi,%rcx,1),%eax
3c9c(4): mov %eax,0xfffffffc(%rdx,%rcx,1)
3ca0(2): jmp 0xffffffcc(%rip)

"md5_process_bytes" :
3cb0(2): push %r15
3cb2(2): push %r14
3cb4(2): push %r13
3cb6(2): push %r12
3cb8(3): mov %rdx,%r13
3cbb(1): push %rbp
3cbc(1): push %rbx
3cbd(3): mov %rsi,%r12
3cc0(3): mov %rdi,%rbx
3cc3(4): sub $0x8,%rsp
3cc7(3): mov 0x18(%rdx),%eax
3cca(2): test %eax,%eax
3ccc(6): jnz 0x134(%rip)
3cd2(4): cmp $0x3f,%r12
3cd6(6): jbe 0x10e(%rip)
3cdc(3): test $0x3,%bl
3cdf(6): jz 0xe9(%rip)
3ce5(4): cmp $0x40,%r12
3ce9(4): lea 0x1c(%r13),%rbp
3ced(2): jz 0x63(%rip)
3cef(5): lea 0xffffffbf(%r12),%r15
3cf4(4): shr $0x6,%r15
3cf8(4): lea 0x1(%r15),%r14
3cfc(4): shl/sal $0x6,%r14
3d00(3): add %rbx,%r14
3d03(5): nop 0x0(%rax,%rax,1)
3d08(4): movdqu (%rbx),%xmm0
3d0c(3): mov %r13,%rdx
3d0f(5): mov $0x40,%esi
3d14(3): mov %rbp,%rdi
3d17(4): add $0x40,%rbx
3d1b(4): movups %xmm0,0x0(%rbp)
3d1f(5): movdqu 0xffffffd0(%rbx),%xmm0
3d24(4): movups %xmm0,0x10(%rbp)
3d28(5): movdqu 0xffffffe0(%rbx),%xmm0
3d2d(4): movups %xmm0,0x20(%rbp)
3d31(5): movdqu 0xfffffff0(%rbx),%xmm0
3d36(4): movups %xmm0,0x30(%rbp)
3d3a(5): call 0xfffff6e6(%rip)
3d3f(3): cmp %r14,%rbx
3d42(2): jnz 0xffffffc6(%rip)
3d44(3): neg %r15
3d47(4): shl/sal $0x6,%r15
3d4b(5): lea 0xffffffc0(%r12,%r15,1),%r12
3d50(4): mov 0x18(%r13),%edi
3d54(4): cmp $0x8,%r12d
3d58(3): mov %r12d,%eax
3d5b(5): lea 0x0(%rbp,%rdi,1),%rcx
3d60(6): jnb 0xe0(%rip)
3d66(4): test $0x4,%r12b
3d6a(6): jnz 0x1f7(%rip)
3d70(3): test %r12d,%r12d
3d73(2): jz 0xf(%rip)
3d75(3): movzx (%rbx),%edx
3d78(2): test $0x2,%al
3d7a(2): mov %dl,(%rcx)
3d7c(6): jnz 0x1f9(%rip)
3d82(3): add %rdi,%r12
3d85(4): cmp $0x3f,%r12
3d89(2): jbe 0x25(%rip)
3d8b(3): mov %r13,%rdx
3d8e(5): mov $0x40,%esi
3d93(3): mov %rbp,%rdi
3d96(5): call 0xfffff68a(%rip)
3d9b(4): sub $0x40,%r12
3d9f(4): lea 0x5c(%r13),%rsi
3da3(3): mov %rbp,%rdi
3da6(3): mov %r12,%rdx
3da9(5): call 0xffffd9c7(%rip)
3dae(4): mov %r12d,0x18(%r13)
3db2(4): add $0x8,%rsp
3db6(1): pop %rbx
3db7(1): pop %rbp
3db8(2): pop %r12
3dba(2): pop %r13
3dbc(2): pop %r14
3dbe(2): pop %r15
3dc0(1): ret near (%rsp)
3dc1(7): nop 0x0(%rax)
3dc8(3): mov %r12,%rbp
3dcb(3): mov %rbx,%rdi
3dce(3): mov %r13,%rdx
3dd1(4): and $0xffffffc0,%rbp
3dd5(4): and $0x3f,%r12d
3dd9(3): mov %rbp,%rsi
3ddc(3): add %rbp,%rbx
3ddf(5): call 0xfffff641(%rip)
3de4(3): test %r12,%r12
3de7(6): jnz 0x171(%rip)
3ded(4): add $0x8,%rsp
3df1(1): pop %rbx
3df2(1): pop %rbp
3df3(2): pop %r12
3df5(2): pop %r13
3df7(2): pop %r14
3df9(2): pop %r15
3dfb(1): ret near (%rsp)
3dfc(4): nop 0x0(%rax)
3e00(2): mov %eax,%ebp
3e02(5): mov $0x80,%edx
3e07(4): lea 0x1c(%r13),%r15
3e0b(3): sub %rbp,%rdx
3e0e(3): cmp %rsi,%rdx
3e11(4): lea 0x0(%r15,%rbp,1),%rdi
3e15(4): cmovnbe %rsi,%rdx
3e19(3): mov %rbx,%rsi
3e1c(3): mov %rdx,%r14
3e1f(5): call 0xffffd951(%rip)
3e24(4): mov 0x18(%r13),%esi
3e28(3): add %r14d,%esi
3e2b(3): cmp $0x40,%esi
3e2e(4): mov %esi,0x18(%r13)
3e32(2): jnbe 0x5e(%rip)
3e34(3): add %r14,%rbx
3e37(3): sub %r14,%r12
3e3a(5): jmp 0xfffffe98(%rip)
3e3f(1): nop 
3e40(3): mov (%rbx),%rax
3e43(3): mov %r12d,%edx
3e46(3): mov %rax,(%rcx)
3e49(5): mov 0xfffffff8(%rbx,%rdx,1),%rax
3e4e(5): mov %rax,0xfffffff8(%rcx,%rdx,1)
3e53(4): lea 0x8(%rcx),%rdx
3e57(3): mov %rcx,%rax
3e5a(4): and $0xfffffff8,%rdx
3e5e(3): sub %rdx,%rax
3e61(3): sub %rax,%rbx
3e64(3): add %r12d,%eax
3e67(3): and $0xf8,%eax
3e6a(3): cmp $0x8,%eax
3e6d(6): jb 0xffffff15(%rip)
3e73(3): and $0xf8,%eax
3e76(2): xor %ecx,%ecx
3e78(2): mov %ecx,%esi
3e7a(3): add $0x8,%ecx
3e7d(4): mov 0x0(%rbx,%rsi,1),%r8
3e81(2): cmp %eax,%ecx
3e83(4): mov %r8,0x0(%rdx,%rsi,1)
3e87(2): jb 0xfffffff1(%rip)
3e89(5): jmp 0xfffffef9(%rip)
3e8e(2): nop 
3e90(3): and $0xc0,%esi
3e93(3): mov %r13,%rdx
3e96(3): mov %r15,%rdi
3e99(5): call 0xfffff587(%rip)
3e9e(4): mov 0x18(%r13),%ecx
3ea2(5): lea 0x0(%rbp,%r14,1),%rax
3ea7(4): and $0xffffffc0,%rax
3eab(2): mov %ecx,%edx
3ead(3): add %r15,%rax
3eb0(3): and $0x3f,%edx
3eb3(3): cmp $0x8,%edx
3eb6(4): mov %edx,0x18(%r13)
3eba(2): jnb 0x36(%rip)
3ebc(3): test $0x4,%cl
3ebf(2): jnz 0x80(%rip)
3ec1(2): test %edx,%edx
3ec3(6): jz 0xffffff71(%rip)
3ec9(3): movzx (%rax),%esi
3ecc(3): and $0x2,%ecx
3ecf(4): mov %sil,0x1c(%r13)
3ed3(6): jz 0xffffff61(%rip)
3ed9(5): movzx 0xfffffffe(%rax,%rdx,1),%eax
3ede(6): mov %ax,0xfffffffe(%r15,%rdx,1)
3ee4(5): jmp 0xffffff50(%rip)
3ee9(7): nop 0x0(%rax)
3ef0(3): mov (%rax),%rcx
3ef3(4): mov %rcx,0x1c(%r13)
3ef7(2): mov %edx,%ecx
3ef9(5): mov 0xfffffff8(%rax,%rcx,1),%rsi
3efe(5): mov %rsi,0xfffffff8(%r15,%rcx,1)
3f03(4): lea 0x24(%r13),%rcx
3f07(4): and $0xfffffff8,%rcx
3f0b(3): sub %rcx,%r15
3f0e(3): sub %r15,%rax
3f11(3): add %edx,%r15d
3f14(4): and $0xf8,%r15d
3f18(4): cmp $0x8,%r15d
3f1c(6): jb 0xffffff18(%rip)
3f22(4): and $0xf8,%r15d
3f26(2): xor %edx,%edx
3f28(2): mov %edx,%esi
3f2a(3): add $0x8,%edx
3f2d(4): mov 0x0(%rax,%rsi,1),%rdi
3f31(3): cmp %r15d,%edx
3f34(4): mov %rdi,0x0(%rcx,%rsi,1)
3f38(2): jb 0xfffffff0(%rip)
3f3a(5): jmp 0xfffffefa(%rip)
3f3f(2): mov (%rax),%ecx
3f41(4): mov %ecx,0x1c(%r13)
3f45(4): mov 0xfffffffc(%rax,%rdx,1),%eax
3f49(5): mov %eax,0xfffffffc(%r15,%rdx,1)
3f4e(5): jmp 0xfffffee6(%rip)
3f53(5): nop 0x0(%rax,%rax,1)
3f58(4): lea 0x1c(%r13),%rbp
3f5c(5): jmp 0xfffffdf4(%rip)
3f61(2): mov (%rbx),%edx
3f63(2): mov %edx,(%rcx)
3f65(3): mov %r12d,%edx
3f68(4): mov 0xfffffffc(%rbx,%rdx,1),%eax
3f6c(4): mov %eax,0xfffffffc(%rcx,%rdx,1)
3f70(5): jmp 0xfffffe12(%rip)
3f75(3): mov %r12d,%edx
3f78(5): movzx 0xfffffffe(%rbx,%rdx,1),%eax
3f7d(5): mov %ax,0xfffffffe(%rcx,%rdx,1)
3f82(5): jmp 0xfffffe00(%rip)

"md5_buffer" :
3f90(1): push %rbp
3f91(1): push %rbx
3f92(3): mov %rdx,%rbp
3f95(7): sub $0xb8,%rsp
3f9c(9): mov $0x28,%rax
3fa5(8): mov %rax,0xa8(%rsp)
3fad(2): xor %eax,%eax
3faf(3): mov %rsp,%rbx
3fb2(a): mov $0x-1167088121787636991,%rax
3fbc(9): mov $0x0,0x10(%rsp)
3fc5(4): mov %rax,(%rsp)
3fc9(3): mov %rbx,%rdx
3fcc(a): mov $0x1167088121787636990,%rax
3fd6(5): mov %rax,0x8(%rsp)
3fdb(8): mov $0x0,0x18(%rsp)
3fe3(5): call 0xfffffccd(%rip)
3fe8(3): mov %rbp,%rsi
3feb(3): mov %rbx,%rdi
3fee(5): call 0xfffffba2(%rip)
3ff3(8): mov 0xa8(%rsp),%rcx
3ffb(9): xor $0x28,%rcx
4004(2): jnz 0xc(%rip)
4006(7): add $0xb8,%rsp
400d(1): pop %rbx
400e(1): pop %rbp
400f(1): ret near (%rsp)
4010(5): call 0xffffd680(%rip)

"md5_stream" :
4020(2): push %r15
4022(2): push %r14
4024(3): mov %rsi,%r14
4027(2): push %r13
4029(2): push %r12
402b(1): push %rbp
402c(1): push %rbx
402d(3): mov %rdi,%rbp
4030(5): mov $0x8048,%edi
4035(7): sub $0xb8,%rsp
403c(9): mov $0x28,%rax
4045(8): mov %rax,0xa8(%rsp)
404d(2): xor %eax,%eax
404f(5): call 0xffffd741(%rip)
4054(3): mov %rax,%r12
4057(5): mov $0x1,%eax
405c(3): test %r12,%r12
405f(6): jz 0x8c(%rip)
4065(a): mov $0x-1167088121787636991,%rax
406f(9): mov $0x0,0x10(%rsp)
4078(8): mov $0x0,0x18(%rsp)
4080(4): mov %rax,(%rsp)
4084(a): mov $0x1167088121787636990,%rax
408e(6): mov $0x8000,%r13d
4094(5): mov %rax,0x8(%rsp)
4099(3): mov %rsp,%r15
409c(2): xor %ebx,%ebx
409e(2): jmp 0x2a(%rip)
40a0(4): lea 0x0(%r12,%rbx,1),%rdi
40a4(3): mov %r13,%rdx
40a7(3): mov %rbp,%rcx
40aa(3): sub %rbx,%rdx
40ad(5): mov $0x1,%esi
40b2(5): call 0xffffd56e(%rip)
40b7(3): add %rax,%rbx
40ba(7): cmp $0x8000,%rbx
40c1(2): jz 0x5f(%rip)
40c3(3): test %rax,%rax
40c6(2): jz 0x72(%rip)
40c8(4): test $0x10,0x0(%rbp)
40cc(2): jz 0xffffffd4(%rip)
40ce(3): test %rbx,%rbx
40d1(3): mov %rsp,%rbp
40d4(2): jnz 0x3c(%rip)
40d6(3): mov %r14,%rsi
40d9(3): mov %rbp,%rdi
40dc(5): call 0xfffffab4(%rip)
40e1(3): mov %r12,%rdi
40e4(5): call 0xffffd4cc(%rip)
40e9(2): xor %eax,%eax
40eb(8): mov 0xa8(%rsp),%rcx
40f3(9): xor $0x28,%rcx
40fc(2): jnz 0x51(%rip)
40fe(7): add $0xb8,%rsp
4105(1): pop %rbx
4106(1): pop %rbp
4107(2): pop %r12
4109(2): pop %r13
410b(2): pop %r14
410d(2): pop %r15
410f(1): ret near (%rsp)
4110(3): mov %rbp,%rdx
4113(3): mov %rbx,%rsi
4116(3): mov %r12,%rdi
4119(5): call 0xfffffb97(%rip)
411e(2): jmp 0xffffffb8(%rip)
4120(3): mov %r15,%rdx
4123(5): mov $0x8000,%esi
4128(3): mov %r12,%rdi
412b(5): call 0xfffff2f5(%rip)
4130(5): jmp 0xffffff6c(%rip)
4135(3): nop (%rax)
4138(4): test $0x20,0x0(%rbp)
413c(2): jz 0xffffff92(%rip)
413e(3): mov %r12,%rdi
4141(5): call 0xffffd46f(%rip)
4146(5): mov $0x1,%eax
414b(2): jmp 0xffffffa0(%rip)
414d(5): call 0xffffd543(%rip)

"fadvise" :
4170(3): test %rdi,%rdi
4173(2): jz 0x1d(%rip)
4175(1): push %rbx
4176(2): mov %esi,%ebx
4178(5): call 0xffffd608(%rip)
417d(2): mov %ebx,%ecx
417f(2): xor %edx,%edx
4181(2): xor %esi,%esi
4183(1): pop %rbx
4184(2): mov %eax,%edi
4186(5): jmp 0xffffd59a(%rip)
418b(5): nop 0x0(%rax,%rax,1)
4190(2): REP ret near (%rsp)

"fopen_safer" :
41a0(2): push %r12
41a2(1): push %rbp
41a3(3): mov %rsi,%rbp
41a6(1): push %rbx
41a7(5): call 0xffffd6a9(%rip)
41ac(3): test %rax,%rax
41af(3): mov %rax,%rbx
41b2(2): jz 0xf(%rip)
41b4(3): mov %rax,%rdi
41b7(5): call 0xffffd5c9(%rip)
41bc(3): cmp $0x2,%eax
41bf(2): jbe 0x11(%rip)
41c1(3): mov %rbx,%rax
41c4(1): pop %rbx
41c5(1): pop %rbp
41c6(2): pop %r12
41c8(1): ret near (%rsp)
41c9(7): nop 0x0(%rax)
41d0(2): mov %eax,%edi
41d2(5): call 0x1d9e(%rip)
41d7(2): test %eax,%eax
41d9(3): mov %eax,%r12d
41dc(2): js 0x3c(%rip)
41de(3): mov %rbx,%rdi
41e1(5): call 0x264f(%rip)
41e6(2): test %eax,%eax
41e8(2): jnz 0x15(%rip)
41ea(3): mov %rbp,%rsi
41ed(3): mov %r12d,%edi
41f0(5): call 0xffffd600(%rip)
41f5(3): test %rax,%rax
41f8(3): mov %rax,%rbx
41fb(2): jnz 0xffffffc6(%rip)
41fd(5): call 0xffffd3d3(%rip)
4202(2): mov (%rax),%ebp
4204(3): mov %rax,%rbx
4207(3): mov %r12d,%edi
420a(5): call 0xffffd506(%rip)
420f(2): mov %ebp,(%rbx)
4211(2): xor %ebx,%ebx
4213(2): jmp 0xffffffae(%rip)
4215(3): nop (%rax)
4218(5): call 0xffffd3b8(%rip)
421d(3): mov (%rax),%r12d
4220(3): mov %rax,%rbp
4223(3): mov %rbx,%rdi
4226(5): call 0x260a(%rip)
422b(2): xor %ebx,%ebx
422d(4): mov %r12d,0x0(%rbp)
4231(2): jmp 0xffffff90(%rip)

"set_program_name" :
4240(3): test %rdi,%rdi
4243(1): push %rbx
4244(2): jz 0x79(%rip)
4246(5): mov $0x2f,%esi
424b(3): mov %rdi,%rbx
424e(5): call 0xffffd492(%rip)
4253(3): test %rax,%rax
4256(2): jz 0x57(%rip)
4258(4): lea 0x1(%rax),%r8
425c(3): mov %r8,%rdx
425f(3): sub %rbx,%rdx
4262(4): cmp $0x6,%rdx
4266(2): jle 0x47(%rip)
4268(4): lea 0xfffffffa(%rax),%rsi
426c(7): lea 0x3805(%rip),%rdi
4273(5): mov $0x7,%ecx
4278(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
427a(3): setnbe %dl
427d(3): sbb $0x0,%dl
4280(2): test %dl,%dl
4282(2): jnz 0x2b(%rip)
4284(7): lea 0x37f5(%rip),%rdi
428b(5): mov $0x3,%ecx
4290(3): mov %r8,%rsi
4293(3): mov %r8,%rbx
4296(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4298(3): setnbe %dl
429b(3): sbb $0x0,%dl
429e(2): test %dl,%dl
42a0(2): jnz 0xd(%rip)
42a2(4): lea 0x4(%rax),%rbx
42a6(7): mov %rbx,0x205df3(%rip)
42ad(7): mov %rbx,0x205e6c(%rip)
42b4(7): mov %rbx,0x205e05(%rip)
42bb(1): pop %rbx
42bc(1): ret near (%rsp)
42bd(7): mov 0x205e1c(%rip),%rcx
42c4(7): lea 0x3775(%rip),%rdi
42cb(5): mov $0x37,%edx
42d0(5): mov $0x1,%esi
42d5(5): call 0xffffd5bb(%rip)
42da(5): call 0xffffd2e6(%rip)

"gettext_quote.part.1" :
42e0(1): push %rbp
42e1(1): push %rbx
42e2(3): mov %rdi,%rbp
42e5(2): mov %esi,%ebx
42e7(4): sub $0x8,%rsp
42eb(5): call 0x2a55(%rip)
42f0(3): movzx (%rax),%edx
42f3(3): and $0xdf,%edx
42f6(3): cmp $0x55,%dl
42f9(2): jz 0x77(%rip)
42fb(3): cmp $0x47,%dl
42fe(2): jz 0x22(%rip)
4300(7): lea 0x378c(%rip),%rax
4307(7): lea 0x3787(%rip),%rdx
430e(3): cmp $0x9,%ebx
4311(4): cmovne %rdx,%rax
4315(4): add $0x8,%rsp
4319(1): pop %rbx
431a(1): pop %rbp
431b(1): ret near (%rsp)
431c(4): nop 0x0(%rax)
4320(4): movzx 0x1(%rax),%edx
4324(3): and $0xdf,%edx
4327(3): cmp $0x42,%dl
432a(2): jnz 0xffffffd6(%rip)
432c(4): cmp $0x31,0x2(%rax)
4330(2): jnz 0xffffffd0(%rip)
4332(4): cmp $0x38,0x3(%rax)
4336(2): jnz 0xffffffca(%rip)
4338(4): cmp $0x30,0x4(%rax)
433c(2): jnz 0xffffffc4(%rip)
433e(4): cmp $0x33,0x5(%rax)
4342(2): jnz 0xffffffbe(%rip)
4344(4): cmp $0x30,0x6(%rax)
4348(2): jnz 0xffffffb8(%rip)
434a(4): cmp $0x0,0x7(%rax)
434e(2): jnz 0xffffffb2(%rip)
4350(4): cmp $0x60,0x0(%rbp)
4354(7): lea 0x3731(%rip),%rax
435b(7): lea 0x372e(%rip),%rdx
4362(4): cmovne %rdx,%rax
4366(4): add $0x8,%rsp
436a(1): pop %rbx
436b(1): pop %rbp
436c(1): ret near (%rsp)
436d(3): nop (%rax)
4370(4): movzx 0x1(%rax),%edx
4374(3): and $0xdf,%edx
4377(3): cmp $0x54,%dl
437a(2): jnz 0xffffff86(%rip)
437c(4): movzx 0x2(%rax),%edx
4380(3): and $0xdf,%edx
4383(3): cmp $0x46,%dl
4386(6): jnz 0xffffff7a(%rip)
438c(4): cmp $0x2d,0x3(%rax)
4390(6): jnz 0xffffff70(%rip)
4396(4): cmp $0x38,0x4(%rax)
439a(6): jnz 0xffffff66(%rip)
43a0(4): cmp $0x0,0x5(%rax)
43a4(6): jnz 0xffffff5c(%rip)
43aa(4): cmp $0x60,0x0(%rbp)
43ae(7): lea 0x36cf(%rip),%rax
43b5(7): lea 0x36cc(%rip),%rdx
43bc(4): cmovne %rdx,%rax
43c0(4): add $0x8,%rsp
43c4(1): pop %rbx
43c5(1): pop %rbp
43c6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
43d0(2): push %r15
43d2(2): push %r14
43d4(3): mov %r8d,%r15d
43d7(2): push %r13
43d9(2): push %r12
43db(3): mov %rdi,%r14
43de(1): push %rbp
43df(1): push %rbx
43e0(3): mov %r9d,%ebx
43e3(3): mov %rsi,%r13
43e6(3): mov %rcx,%rbp
43e9(3): and $0x2,%ebx
43ec(7): sub $0xb8,%rsp
43f3(8): mov 0xf0(%rsp),%rax
43fb(5): mov %rdx,0x10(%rsp)
4400(5): mov %r8d,0x8(%rsp)
4405(5): mov %r9d,0x78(%rsp)
440a(5): mov %rax,0x20(%rsp)
440f(8): mov 0xf8(%rsp),%rax
4417(5): mov %rax,0x68(%rsp)
441c(8): mov 0x100(%rsp),%rax
4424(5): mov %rax,0x60(%rsp)
4429(9): mov $0x28,%rax
4432(8): mov %rax,0xa8(%rsp)
443a(2): xor %eax,%eax
443c(5): call 0xffffd234(%rip)
4441(4): cmp $0xa,%r15d
4445(5): mov %rax,0x58(%rsp)
444a(6): jnbe 0x11b5(%rip)
4450(7): lea 0x36a9(%rip),%rcx
4457(3): mov %r15d,%edx
445a(4): movsxd 0x0(%rcx,%rdx,4),%rax
445e(3): add %rcx,%rax
4461(2): jmp %rax
4463(5): mov $0x1,0xe(%rsp)
4468(5): mov $0x0,0x7c(%rsp)
446d(3): xor %r12d,%r12d
4470(9): mov $0x0,0x50(%rsp)
4479(5): mov $0x1,0xf(%rsp)
447e(5): mov $0x0,0xd(%rsp)
4483(7): lea 0x360b(%rip),%rax
448a(9): mov $0x1,0x18(%rsp)
4493(3): xor %r15d,%r15d
4496(8): mov $0x2,0x8(%rsp)
449e(5): mov %rax,0x48(%rsp)
44a3(3): xor %r11d,%r11d
44a6(3): mov %rbp,%rax
44a9(3): mov %r12d,%r8d
44ac(3): mov %r11,%rbp
44af(3): mov %rax,%r11
44b2(6): nop 0x0(%rax,%rax,1)
44b8(3): cmp %rbp,%r11
44bb(4): setnz %r12b
44bf(4): cmp $0xffffffff,%r11
44c3(2): jnz 0xf(%rip)
44c5(5): mov 0x10(%rsp),%rax
44ca(4): cmp $0x0,0x0(%rax,%rbp,1)
44ce(4): setnz %r12b
44d2(3): test %r12b,%r12b
44d5(6): jz 0x65b(%rip)
44db(5): cmp $0x2,0x8(%rsp)
44e0(5): mov 0x10(%rsp),%rdi
44e5(4): lea 0x0(%rdi,%rbp,1),%r9
44e9(3): setnz %al
44ec(4): and 0xd(%rsp),%al
44f0(3): mov %eax,%r10d
44f3(6): jz 0xad(%rip)
44f9(5): mov 0x18(%rsp),%rax
44fe(3): test %rax,%rax
4501(6): jz 0x42f(%rip)
4507(4): cmp $0xffffffff,%r11
450b(5): lea 0x0(%rbp,%rax,1),%rbx
4510(2): jnz 0x30(%rip)
4512(4): cmp $0x1,%rax
4516(2): jbe 0x2a(%rip)
4518(5): mov %r8b,0x38(%rsp)
451d(5): mov %r10b,0x30(%rsp)
4522(5): mov %r9,0x28(%rsp)
4527(5): call 0xffffd159(%rip)
452c(6): movzx 0x38(%rsp),%r8d
4532(6): movzx 0x30(%rsp),%r10d
4538(3): mov %rax,%r11
453b(5): mov 0x28(%rsp),%r9
4540(3): cmp %r11,%rbx
4543(5): mov %r10b,0x28(%rsp)
4548(6): jnbe 0x5b8(%rip)
454e(5): mov 0x18(%rsp),%rdx
4553(5): mov 0x48(%rsp),%rsi
4558(3): mov %r9,%rdi
455b(5): mov %r11,0x40(%rsp)
4560(5): mov %r8b,0x38(%rsp)
4565(5): mov %r9,0x30(%rsp)
456a(5): call 0xffffd1c6(%rip)
456f(2): test %eax,%eax
4571(5): mov 0x30(%rsp),%r9
4576(6): movzx 0x38(%rsp),%r8d
457c(5): mov 0x40(%rsp),%r11
4581(6): jnz 0x57f(%rip)
4587(5): cmp $0x0,0xf(%rsp)
458c(6): movzx 0x28(%rsp),%r10d
4592(6): jnz 0xf83(%rip)
4598(8): nop 0x0(%rax,%rax,1)
45a0(4): movzx (%r9),%ebx
45a4(3): cmp $0x7e,%bl
45a7(6): jnbe 0x321(%rip)
45ad(7): lea 0x3578(%rip),%rcx
45b4(3): movzx %bl,%edx
45b7(4): movsxd 0x0(%rcx,%rdx,4),%rax
45bb(3): add %rcx,%rax
45be(2): jmp %rax
45c0(3): xor %r10d,%r10d
45c3(4): cmp $0x1,%r11
45c7(3): setnz %al
45ca(4): cmp $0xffffffff,%r11
45ce(2): jnz 0xe(%rip)
45d0(5): mov 0x10(%rsp),%rax
45d5(4): cmp $0x0,0x1(%rax)
45d9(3): setnz %al
45dc(5): cmp $0x2,0x8(%rsp)
45e1(3): setz %dl
45e4(2): test %al,%al
45e6(6): jz 0x252(%rip)
45ec(3): xor %r12d,%r12d
45ef(2): xor %eax,%eax
45f1(7): nop 0x0(%rax)
45f8(5): cmp $0x1,0xd(%rsp)
45fd(6): jnz 0x115(%rip)
4603(2): test %dl,%dl
4605(6): jnz 0x10d(%rip)
460b(5): mov 0x20(%rsp),%rsi
4610(3): test %rsi,%rsi
4613(2): jz 0x16(%rip)
4615(2): mov %ebx,%edx
4617(3): shr $0x5,%dl
461a(3): movzx %dl,%edx
461d(3): mov 0x0(%rsi,%rdx,4),%edx
4620(3): bt %ebx,%edx
4623(6): jb 0x150(%rip)
4629(3): test %r10b,%r10b
462c(6): jnz 0x147(%rip)
4632(3): xor $0x1,%eax
4635(4): add $0x1,%rbp
4639(3): and %r8d,%eax
463c(2): test %al,%al
463e(2): jz 0x22(%rip)
4640(3): cmp %r15,%r13
4643(2): jbe 0x7(%rip)
4645(5): mov $0x27,0x0(%r14,%r15,1)
464a(4): lea 0x1(%r15),%rax
464e(3): cmp %rax,%r13
4651(2): jbe 0x8(%rip)
4653(6): mov $0x27,0x1(%r14,%r15,1)
4659(4): add $0x2,%r15
465d(3): xor %r8d,%r8d
4660(3): cmp %r13,%r15
4663(2): jnb 0x6(%rip)
4665(4): mov %bl,0x0(%r14,%r15,1)
4669(5): movzx 0xe(%rsp),%edi
466e(4): add $0x1,%r15
4672(5): mov $0x0,%eax
4677(3): test %r12b,%r12b
467a(3): cmove %eax,%edi
467d(5): mov %dil,0xe(%rsp)
4682(5): jmp 0xfffffe36(%rip)
4687(9): nop 0x0(%rax,%rax,1)
4690(3): xor %r10d,%r10d
4693(4): mov 0x8(%rsp),%eax
4697(3): cmp $0x2,%eax
469a(6): jz 0x5be(%rip)
46a0(3): cmp $0x5,%eax
46a3(6): jz 0x575(%rip)
46a9(3): cmp $0x2,%eax
46ac(5): mov $0x3f,%ebx
46b1(3): setz %dl
46b4(3): xor %r12d,%r12d
46b7(2): xor %eax,%eax
46b9(5): jmp 0xffffff3f(%rip)
46be(2): nop 
46c0(3): xor %r10d,%r10d
46c3(5): cmp $0x2,0x8(%rsp)
46c8(6): jz 0x508(%rip)
46ce(5): mov %r12b,0x7c(%rsp)
46d3(2): xor %edx,%edx
46d5(2): xor %eax,%eax
46d7(5): mov $0x27,%ebx
46dc(5): jmp 0xffffff1c(%rip)
46e1(7): nop 0x0(%rax)
46e8(5): mov $0x9,%edx
46ed(5): mov $0x74,%ebx
46f2(5): cmp $0x2,0x8(%rsp)
46f7(3): setz %al
46fa(4): and 0xf(%rsp),%al
46fe(6): jnz 0x150(%rip)
4704(5): cmp $0x0,0xd(%rsp)
4709(2): jnz 0x67(%rip)
470b(2): mov %edx,%ebx
470d(3): xor %r12d,%r12d
4710(2): xor %eax,%eax
4712(5): cmp $0x0,0xf(%rsp)
4717(6): jnz 0xfffffef4(%rip)
471d(5): jmp 0xffffff0c(%rip)
4722(6): nop 0x0(%rax,%rax,1)
4728(5): mov $0x8,%edx
472d(5): mov $0x62,%ebx
4732(2): jmp 0xffffffd2(%rip)
4734(4): nop 0x0(%rax)
4738(5): cmp $0x2,0x8(%rsp)
473d(6): jz 0x3d3(%rip)
4743(5): cmp $0x0,0xd(%rsp)
4748(6): jz 0x218(%rip)
474e(5): cmp $0x0,0xf(%rsp)
4753(6): jz 0x20d(%rip)
4759(6): cmp $0x0,0x18(%rsp)
475f(6): jnz 0x3bc(%rip)
4765(5): mov $0x5c,%ebx
476a(6): nop 0x0(%rax,%rax,1)
4770(3): xor %r12d,%r12d
4773(5): cmp $0x2,0x8(%rsp)
4778(3): setz %dl
477b(5): cmp $0x0,0xf(%rsp)
4780(2): mov %edx,%eax
4782(6): jnz 0x856(%rip)
4788(3): mov %r8d,%eax
478b(3): xor $0x1,%eax
478e(2): and %dl,%al
4790(2): jz 0x31(%rip)
4792(3): cmp %r15,%r13
4795(2): jbe 0x7(%rip)
4797(5): mov $0x27,0x0(%r14,%r15,1)
479c(4): lea 0x1(%r15),%rdx
47a0(3): cmp %rdx,%r13
47a3(2): jbe 0x8(%rip)
47a5(6): mov $0x24,0x1(%r14,%r15,1)
47ab(4): lea 0x2(%r15),%rdx
47af(3): cmp %rdx,%r13
47b2(2): jbe 0x8(%rip)
47b4(6): mov $0x27,0x2(%r14,%r15,1)
47ba(4): add $0x3,%r15
47be(3): mov %eax,%r8d
47c1(3): cmp %r15,%r13
47c4(2): jbe 0x7(%rip)
47c6(5): mov $0x5c,0x0(%r14,%r15,1)
47cb(4): add $0x1,%r15
47cf(4): add $0x1,%rbp
47d3(5): jmp 0xfffffe8d(%rip)
47d8(8): nop 0x0(%rax,%rax,1)
47e0(5): cmp $0x0,0xd(%rsp)
47e5(6): jnz 0x1ce(%rip)
47eb(2): xor %edx,%edx
47ed(5): test $0x1,0x78(%rsp)
47f2(6): jz 0xffffff19(%rip)
47f8(4): add $0x1,%rbp
47fc(5): jmp 0xfffffcbc(%rip)
4801(7): nop 0x0(%rax)
4808(5): cmp $0x2,0x8(%rsp)
480d(3): setz %dl
4810(2): xor %eax,%eax
4812(5): jmp 0xfffffde6(%rip)
4817(9): nop 0x0(%rax,%rax,1)
4820(5): mov $0x7,%edx
4825(5): mov $0x61,%ebx
482a(5): jmp 0xfffffeda(%rip)
482f(1): nop 
4830(5): cmp $0x2,0x8(%rsp)
4835(3): setz %dl
4838(3): test %rbp,%rbp
483b(6): jnz 0xfffffdb1(%rip)
4841(5): movzx 0xf(%rsp),%eax
4846(2): and %dl,%al
4848(6): jz 0xfffffdb0(%rip)
484e(3): mov %r11,%rbp
4851(8): mov $0x2,0x8(%rsp)
4859(5): jmp 0x700(%rip)
485e(2): nop 
4860(5): cmp $0x2,0x8(%rsp)
4865(3): setz %dl
4868(3): xor %r12d,%r12d
486b(2): jmp 0xffffffd6(%rip)
486d(3): nop (%rax)
4870(5): cmp $0x2,0x8(%rsp)
4875(5): mov $0x20,%ebx
487a(3): setz %dl
487d(2): jmp 0xffffffc4(%rip)
487f(1): nop 
4880(5): mov $0xd,%edx
4885(5): mov $0x72,%ebx
488a(5): jmp 0xfffffe68(%rip)
488f(1): nop 
4890(5): mov $0xc,%edx
4895(5): mov $0x66,%ebx
489a(5): jmp 0xfffffe6a(%rip)
489f(1): nop 
48a0(5): mov $0xb,%edx
48a5(5): mov $0x76,%ebx
48aa(5): jmp 0xfffffe5a(%rip)
48af(1): nop 
48b0(5): mov $0xa,%edx
48b5(5): mov $0x6e,%ebx
48ba(5): jmp 0xfffffe38(%rip)
48bf(1): nop 
48c0(3): xor %r10d,%r10d
48c3(5): nop 0x0(%rax,%rax,1)
48c8(6): cmp $0x1,0x58(%rsp)
48ce(6): jnz 0x3aa(%rip)
48d4(5): mov %r11,0x38(%rsp)
48d9(5): mov %r8b,0x30(%rsp)
48de(5): mov %r10b,0x28(%rsp)
48e3(5): call 0xffffcffd(%rip)
48e8(3): mov (%rax),%rcx
48eb(3): movzx %bl,%edx
48ee(6): movzx 0x28(%rsp),%r10d
48f4(6): movzx 0x30(%rsp),%r8d
48fa(5): mov 0x38(%rsp),%r11
48ff(5): mov $0x1,%edi
4904(4): movzx 0x0(%rcx,%rdx,2),%eax
4908(4): and $0x4000,%ax
490c(4): setnz %r12b
4910(3): setz %al
4913(4): and 0xd(%rsp),%al
4917(2): test %al,%al
4919(6): jnz 0x998(%rip)
491f(5): cmp $0x2,0x8(%rsp)
4924(3): setz %dl
4927(5): jmp 0xfffffcd1(%rip)
492c(4): nop 0x0(%rax)
4930(4): movzx (%r9),%ebx
4934(3): cmp $0x7e,%bl
4937(2): jnbe 0xffffff89(%rip)
4939(7): lea 0x33e8(%rip),%rcx
4940(3): movzx %bl,%edx
4943(4): movsxd 0x0(%rcx,%rdx,4),%rax
4947(3): add %rcx,%rax
494a(2): jmp %rax
494c(4): nop 0x0(%rax)
4950(3): xor %r10d,%r10d
4953(5): cmp $0x0,0xd(%rsp)
4958(6): jnz 0xfffffdf6(%rip)
495e(2): nop 
4960(5): mov $0x5c,%edx
4965(5): mov $0x5c,%ebx
496a(5): jmp 0xfffffd9a(%rip)
496f(1): nop 
4970(5): mov $0xc,%edx
4975(3): xor %r10d,%r10d
4978(5): mov $0x66,%ebx
497d(5): jmp 0xfffffd87(%rip)
4982(6): nop 0x0(%rax,%rax,1)
4988(5): mov $0xa,%edx
498d(3): xor %r10d,%r10d
4990(5): mov $0x6e,%ebx
4995(5): jmp 0xfffffd5d(%rip)
499a(6): nop 0x0(%rax,%rax,1)
49a0(5): mov $0x61,%ebx
49a5(5): jmp 0xfffffdcb(%rip)
49aa(6): nop 0x0(%rax,%rax,1)
49b0(3): xor %r10d,%r10d
49b3(5): cmp $0x2,0x8(%rsp)
49b8(3): setz %dl
49bb(5): cmp $0x0,0xf(%rsp)
49c0(6): jnz 0xb9a(%rip)
49c6(3): mov %r8d,%eax
49c9(3): mov %r15,%rcx
49cc(3): xor $0x1,%eax
49cf(2): and %dl,%al
49d1(2): jz 0x2f(%rip)
49d3(3): cmp %r15,%r13
49d6(2): jbe 0x7(%rip)
49d8(5): mov $0x27,0x0(%r14,%r15,1)
49dd(4): lea 0x1(%r15),%rcx
49e1(3): cmp %rcx,%r13
49e4(2): jbe 0x8(%rip)
49e6(6): mov $0x24,0x1(%r14,%r15,1)
49ec(4): lea 0x2(%r15),%rcx
49f0(3): cmp %rcx,%r13
49f3(6): jnbe 0x636(%rip)
49f9(4): lea 0x3(%r15),%rcx
49fd(3): mov %eax,%r8d
4a00(3): cmp %rcx,%r13
4a03(2): jbe 0x7(%rip)
4a05(5): mov $0x5c,0x0(%r14,%rcx,1)
4a0a(5): cmp $0x2,0x8(%rsp)
4a0f(4): lea 0x1(%rcx),%r15
4a13(6): jz 0x606(%rip)
4a19(4): lea 0x1(%rbp),%rax
4a1d(3): cmp %r11,%rax
4a20(2): jnb 0x1b(%rip)
4a22(5): mov 0x10(%rsp),%rax
4a27(5): movzx 0x1(%rax,%rbp,1),%eax
4a2c(4): mov %al,0x28(%rsp)
4a30(3): sub $0x30,%eax
4a33(2): cmp $0x9,%al
4a35(6): jbe 0x834(%rip)
4a3b(3): mov %r12d,%eax
4a3e(5): mov $0x30,%ebx
4a43(3): xor %r12d,%r12d
4a46(5): jmp 0xfffffbb2(%rip)
4a4b(5): nop 0x0(%rax,%rax,1)
4a50(5): cmp $0x2,0x8(%rsp)
4a55(3): mov %r10d,%r12d
4a58(3): setz %dl
4a5b(3): xor %r10d,%r10d
4a5e(2): xor %eax,%eax
4a60(5): jmp 0xfffffb98(%rip)
4a65(3): nop (%rax)
4a68(5): cmp $0x2,0x8(%rsp)
4a6d(3): setz %dl
4a70(3): xor %r10d,%r10d
4a73(5): jmp 0xfffffdc5(%rip)
4a78(8): nop 0x0(%rax,%rax,1)
4a80(5): cmp $0x2,0x8(%rsp)
4a85(3): setz %dl
4a88(3): xor %r10d,%r10d
4a8b(3): xor %r12d,%r12d
4a8e(5): jmp 0xfffffdb3(%rip)
4a93(5): nop 0x0(%rax,%rax,1)
4a98(5): cmp $0x2,0x8(%rsp)
4a9d(3): mov %r10d,%r12d
4aa0(5): mov $0x20,%ebx
4aa5(3): setz %dl
4aa8(3): xor %r10d,%r10d
4aab(5): jmp 0xfffffd96(%rip)
4ab0(5): mov $0xd,%edx
4ab5(3): xor %r10d,%r10d
4ab8(5): mov $0x72,%ebx
4abd(5): jmp 0xfffffc35(%rip)
4ac2(6): nop 0x0(%rax,%rax,1)
4ac8(5): mov $0x76,%ebx
4acd(5): jmp 0xfffffca3(%rip)
4ad2(6): nop 0x0(%rax,%rax,1)
4ad8(5): mov $0x9,%edx
4add(3): xor %r10d,%r10d
4ae0(5): mov $0x74,%ebx
4ae5(5): jmp 0xfffffc0d(%rip)
4aea(6): nop 0x0(%rax,%rax,1)
4af0(5): mov $0x62,%ebx
4af5(5): jmp 0xfffffc7b(%rip)
4afa(6): nop 0x0(%rax,%rax,1)
4b00(3): xor %r10d,%r10d
4b03(5): jmp 0xfffffa9d(%rip)
4b08(8): nop 0x0(%rax,%rax,1)
4b10(5): cmp $0x0,0xf(%rsp)
4b15(6): jnz 0x96b(%rip)
4b1b(4): add $0x1,%rbp
4b1f(3): mov %r8d,%eax
4b22(3): xor %r12d,%r12d
4b25(5): mov $0x5c,%ebx
4b2a(5): jmp 0xfffffb12(%rip)
4b2f(1): nop 
4b30(5): cmp $0x2,0x8(%rsp)
4b35(5): movzx 0xf(%rsp),%ebx
4b3a(3): mov %r8d,%r12d
4b3d(3): mov %r11,%rbp
4b40(3): setz %dl
4b43(2): mov %ebx,%eax
4b45(3): test %r15,%r15
4b48(3): setz %cl
4b4b(2): and %edx,%eax
4b4d(2): and %cl,%al
4b4f(6): jnz 0xa67(%rip)
4b55(2): mov %ebx,%eax
4b57(3): xor $0x1,%eax
4b5a(2): and %al,%dl
4b5c(6): jz 0x970(%rip)
4b62(5): cmp $0x0,0x7c(%rsp)
4b67(6): jz 0x963(%rip)
4b6d(5): cmp $0x0,0xe(%rsp)
4b72(6): jnz 0x9fb(%rip)
4b78(3): test %r13,%r13
4b7b(3): setz %al
4b7e(6): cmp $0x0,0x50(%rsp)
4b84(3): setnz %dl
4b87(2): and %dl,%al
4b89(6): jz 0xa23(%rip)
4b8f(5): mov 0x50(%rsp),%r13
4b94(7): lea 0x2efa(%rip),%rbx
4b9b(4): mov $0x27,(%r14)
4b9f(8): mov $0x2,0x8(%rsp)
4ba7(6): mov $0x1,%r15d
4bad(9): mov $0x1,0x18(%rsp)
4bb6(5): mov $0x0,0xf(%rsp)
4bbb(5): mov %rbx,0x48(%rsp)
4bc0(4): mov %al,0x7c(%rsp)
4bc4(5): jmp 0xfffff8df(%rip)
4bc9(7): nop 0x0(%rax)
4bd0(5): cmp $0x0,0xf(%rsp)
4bd5(6): jnz 0x8ab(%rip)
4bdb(3): test %r13,%r13
4bde(6): jz 0x402(%rip)
4be4(2): xor %edx,%edx
4be6(6): cmp $0x0,0x50(%rsp)
4bec(6): jnz 0x3f4(%rip)
4bf2(5): mov %r13,0x50(%rsp)
4bf7(4): add $0x3,%r15
4bfb(2): xor %eax,%eax
4bfd(5): mov %r12b,0x7c(%rsp)
4c02(3): xor %r8d,%r8d
4c05(3): mov %rdx,%r13
4c08(5): mov $0x27,%ebx
4c0d(5): jmp 0xfffffa1c(%rip)
4c12(6): nop 0x0(%rax,%rax,1)
4c18(5): test $0x4,0x78(%rsp)
4c1d(2): jz 0x23(%rip)
4c1f(4): lea 0x2(%rbp),%rcx
4c23(3): cmp %r11,%rcx
4c26(2): jnb 0x1a(%rip)
4c28(5): mov 0x10(%rsp),%rax
4c2d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4c32(6): jz 0x790(%rip)
4c38(8): nop 0x0(%rax,%rax,1)
4c40(2): xor %edx,%edx
4c42(3): xor %r12d,%r12d
4c45(2): xor %eax,%eax
4c47(5): mov $0x3f,%ebx
4c4c(5): jmp 0xfffff9ac(%rip)
4c51(7): nop 0x0(%rax)
4c58(5): cmp $0x0,0xf(%rsp)
4c5d(6): jnz 0x823(%rip)
4c63(3): xor %r12d,%r12d
4c66(2): xor %eax,%eax
4c68(5): mov $0x3f,%ebx
4c6d(5): jmp 0xfffff9bc(%rip)
4c72(6): nop 0x0(%rax,%rax,1)
4c78(8): lea 0xa0(%rsp),%rax
4c80(4): cmp $0xffffffff,%r11
4c84(c): mov $0x0,0xa0(%rsp)
4c90(5): mov %rax,0x28(%rsp)
4c95(2): jnz 0x2f(%rip)
4c97(5): mov 0x10(%rsp),%rdi
4c9c(5): mov %r8b,0x40(%rsp)
4ca1(5): mov %r10b,0x38(%rsp)
4ca6(5): mov %r9,0x30(%rsp)
4cab(5): call 0xffffc9d5(%rip)
4cb0(6): movzx 0x40(%rsp),%r8d
4cb6(6): movzx 0x38(%rsp),%r10d
4cbc(3): mov %rax,%r11
4cbf(5): mov 0x30(%rsp),%r9
4cc4(8): lea 0x9c(%rsp),%rax
4ccc(2): xor %ecx,%ecx
4cce(4): mov %bl,0x7e(%rsp)
4cd2(5): mov %r8b,0x7d(%rsp)
4cd7(3): mov %rcx,%rbx
4cda(8): mov %r9,0x88(%rsp)
4ce2(5): mov %rax,0x38(%rsp)
4ce7(5): mov %r10b,0x7f(%rsp)
4cec(8): mov %r15,0x80(%rsp)
4cf4(5): mov %r14,0x40(%rsp)
4cf9(5): mov %r13,0x70(%rsp)
4cfe(5): mov %r11,0x30(%rsp)
4d03(5): mov 0x10(%rsp),%rax
4d08(5): lea 0x0(%rbp,%rbx,1),%r14
4d0d(5): mov 0x30(%rsp),%rdx
4d12(5): mov 0x28(%rsp),%rcx
4d17(5): mov 0x38(%rsp),%rdi
4d1c(4): lea 0x0(%rax,%r14,1),%r13
4d20(3): sub %r14,%rdx
4d23(3): mov %r13,%rsi
4d26(5): call 0x1eaa(%rip)
4d2b(3): test %rax,%rax
4d2e(3): mov %rax,%r15
4d31(2): jz 0x50(%rip)
4d33(4): cmp $0xffffffff,%rax
4d37(6): jz 0x61e(%rip)
4d3d(4): cmp $0xfffffffe,%rax
4d41(6): jz 0x5a0(%rip)
4d47(5): cmp $0x2,0x8(%rsp)
4d4c(3): setz %al
4d4f(4): and 0xf(%rsp),%al
4d53(6): jnz 0x19d(%rip)
4d59(7): mov 0x9c(%rsp),%edi
4d60(5): call 0xffffcb60(%rip)
4d65(5): mov 0x28(%rsp),%rdi
4d6a(2): test %eax,%eax
4d6c(5): mov $0x0,%eax
4d71(4): cmove %eax,%r12d
4d75(3): add %r15,%rbx
4d78(5): call 0xffffcb38(%rip)
4d7d(2): test %eax,%eax
4d7f(2): jz 0xffffff84(%rip)
4d81(3): mov %r12d,%edx
4d84(3): mov %rbx,%rdi
4d87(6): movzx 0x7d(%rsp),%r8d
4d8d(3): xor $0x1,%edx
4d90(5): movzx 0x7e(%rsp),%ebx
4d95(6): movzx 0x7f(%rsp),%r10d
4d9b(4): and 0xd(%rsp),%dl
4d9f(8): mov 0x80(%rsp),%r15
4da7(5): mov 0x40(%rsp),%r14
4dac(5): mov 0x70(%rsp),%r13
4db1(5): mov 0x30(%rsp),%r11
4db6(4): cmp $0x1,%rdi
4dba(6): jbe 0x601(%rip)
4dc0(3): mov %rdi,%rcx
4dc3(2): xor %esi,%esi
4dc5(6): movzx 0xf(%rsp),%r9d
4dcb(3): add %rbp,%rcx
4dce(5): mov 0x10(%rsp),%rdi
4dd3(5): jmp 0xbb(%rip)
4dd8(8): nop 0x0(%rax,%rax,1)
4de0(5): cmp $0x2,0x8(%rsp)
4de5(3): setz %al
4de8(3): test %r9b,%r9b
4deb(6): jnz 0x4b5(%rip)
4df1(3): mov %r8d,%esi
4df4(3): xor $0x1,%esi
4df7(3): and %sil,%al
4dfa(2): jz 0x31(%rip)
4dfc(3): cmp %r15,%r13
4dff(2): jbe 0x7(%rip)
4e01(5): mov $0x27,0x0(%r14,%r15,1)
4e06(4): lea 0x1(%r15),%rsi
4e0a(3): cmp %rsi,%r13
4e0d(2): jbe 0x8(%rip)
4e0f(6): mov $0x24,0x1(%r14,%r15,1)
4e15(4): lea 0x2(%r15),%rsi
4e19(3): cmp %rsi,%r13
4e1c(2): jbe 0x8(%rip)
4e1e(6): mov $0x27,0x2(%r14,%r15,1)
4e24(4): add $0x3,%r15
4e28(3): mov %eax,%r8d
4e2b(3): cmp %r15,%r13
4e2e(2): jbe 0x7(%rip)
4e30(5): mov $0x5c,0x0(%r14,%r15,1)
4e35(4): lea 0x1(%r15),%rax
4e39(3): cmp %rax,%r13
4e3c(2): jbe 0xf(%rip)
4e3e(2): mov %ebx,%eax
4e40(3): shr $0x6,%al
4e43(3): add $0x30,%eax
4e46(5): mov %al,0x1(%r14,%r15,1)
4e4b(4): lea 0x2(%r15),%rax
4e4f(3): cmp %rax,%r13
4e52(2): jbe 0x12(%rip)
4e54(2): mov %ebx,%eax
4e56(3): shr $0x3,%al
4e59(3): and $0x7,%eax
4e5c(3): add $0x30,%eax
4e5f(5): mov %al,0x2(%r14,%r15,1)
4e64(3): and $0x7,%ebx
4e67(4): add $0x1,%rbp
4e6b(4): add $0x3,%r15
4e6f(3): add $0x30,%ebx
4e72(3): cmp %rcx,%rbp
4e75(6): jnb 0xfffff7eb(%rip)
4e7b(2): mov %edx,%esi
4e7d(3): cmp %r15,%r13
4e80(2): jbe 0x6(%rip)
4e82(4): mov %bl,0x0(%r14,%r15,1)
4e86(4): movzx 0x0(%rdi,%rbp,1),%ebx
4e8a(4): add $0x1,%r15
4e8e(2): test %dl,%dl
4e90(6): jnz 0xffffff50(%rip)
4e96(2): mov %esi,%eax
4e98(3): xor $0x1,%eax
4e9b(3): and %r8d,%eax
4e9e(3): test %r10b,%r10b
4ea1(2): jz 0x10(%rip)
4ea3(3): cmp %r15,%r13
4ea6(2): jbe 0x7(%rip)
4ea8(5): mov $0x5c,0x0(%r14,%r15,1)
4ead(4): add $0x1,%r15
4eb1(4): add $0x1,%rbp
4eb5(3): cmp %rcx,%rbp
4eb8(6): jnb 0xfffff784(%rip)
4ebe(2): test %al,%al
4ec0(6): jz 0x3fe(%rip)
4ec6(3): cmp %r15,%r13
4ec9(2): jbe 0x7(%rip)
4ecb(5): mov $0x27,0x0(%r14,%r15,1)
4ed0(4): lea 0x1(%r15),%rax
4ed4(3): cmp %rax,%r13
4ed7(2): jbe 0x8(%rip)
4ed9(6): mov $0x27,0x1(%r14,%r15,1)
4edf(4): add $0x2,%r15
4ee3(3): xor %r10d,%r10d
4ee6(3): xor %r8d,%r8d
4ee9(2): jmp 0xffffff94(%rip)
4eeb(5): nop 0x0(%rax,%rax,1)
4ef0(4): cmp $0x1,%r15
4ef4(6): jz 0xfffffe65(%rip)
4efa(5): mov 0x10(%rsp),%rdi
4eff(4): lea 0x0(%rdi,%r15,1),%rcx
4f03(5): lea 0x1(%rdi,%r14,1),%rdx
4f08(4): lea 0x0(%rcx,%r14,1),%r8
4f0c(2): jmp 0x11(%rip)
4f0e(2): nop 
4f10(4): add $0x1,%rdx
4f14(3): cmp %rdx,%r8
4f17(6): jz 0xfffffe42(%rip)
4f1d(3): movzx (%rdx),%ecx
4f20(3): sub $0x5b,%ecx
4f23(3): cmp $0x21,%cl
4f26(2): jnbe 0xffffffea(%rip)
4f28(5): mov $0x1,%esi
4f2d(3): shl/sal %cl,%rsi
4f30(3): mov %rsi,%rcx
4f33(a): mov $0x8589934635,%rsi
4f3d(3): test %rsi,%rcx
4f40(2): jz 0xffffffd0(%rip)
4f42(5): mov 0x40(%rsp),%r14
4f47(5): mov 0x70(%rsp),%r13
4f4c(5): mov 0x30(%rsp),%rbp
4f51(8): mov $0x2,0x8(%rsp)
4f59(5): cmp $0x0,0xd(%rsp)
4f5e(2): jz 0x12(%rip)
4f60(2): test %al,%al
4f62(5): mov $0x4,%eax
4f67(5): cmove 0x8(%rsp),%eax
4f6c(4): mov %eax,0x8(%rsp)
4f70(4): sub $0x8,%rsp
4f74(3): mov %rbp,%rcx
4f77(3): mov %r13,%rsi
4f7a(4): push 0x68(%rsp)
4f7e(4): push 0x78(%rsp)
4f82(3): mov %r14,%rdi
4f85(2): push $0x0
4f87(8): mov 0x98(%rsp),%r9d
4f8f(5): mov 0x28(%rsp),%r8d
4f94(5): mov 0x30(%rsp),%rdx
4f99(4): and $0xfd,%r9d
4f9d(5): call 0xfffff433(%rip)
4fa2(4): add $0x20,%rsp
4fa6(3): mov %rax,%r15
4fa9(8): mov 0xa8(%rsp),%rbx
4fb1(9): xor $0x28,%rbx
4fba(3): mov %r15,%rax
4fbd(6): jnz 0x606(%rip)
4fc3(7): add $0xb8,%rsp
4fca(1): pop %rbx
4fcb(1): pop %rbp
4fcc(2): pop %r12
4fce(2): pop %r13
4fd0(2): pop %r14
4fd2(2): pop %r15
4fd4(1): ret near (%rsp)
4fd5(3): nop (%rax)
4fd8(3): mov %r11,%rbp
4fdb(5): jmp 0xffffff7e(%rip)
4fe0(3): cmp %r15,%r13
4fe3(2): jbe 0x7(%rip)
4fe5(5): mov $0x27,0x0(%r14,%r15,1)
4fea(4): lea 0x1(%r15),%rax
4fee(3): cmp %rax,%r13
4ff1(2): jbe 0x8(%rip)
4ff3(6): mov $0x5c,0x1(%r14,%r15,1)
4ff9(4): lea 0x2(%r15),%rax
4ffd(3): cmp %rax,%r13
5000(6): jbe 0x5f2(%rip)
5006(3): mov %r13,%rdx
5009(6): mov $0x27,0x2(%r14,%r15,1)
500f(5): mov 0x50(%rsp),%r13
5014(5): jmp 0xfffffbde(%rip)
5019(3): mov %r12d,%eax
501c(5): mov $0x30,%ebx
5021(3): xor %r12d,%r12d
5024(5): jmp 0xfffff605(%rip)
5029(6): mov $0x27,0x2(%r14,%r15,1)
502f(5): jmp 0xfffff9ca(%rip)
5034(2): test %ebx,%ebx
5036(6): jnz 0xfffff42d(%rip)
503c(5): mov $0x1,0xd(%rsp)
5041(3): test %r13,%r13
5044(6): jnz 0x596(%rip)
504a(7): lea 0x2a44(%rip),%rax
5051(9): mov $0x0,0x50(%rsp)
505a(5): mov $0x1,0xe(%rsp)
505f(5): mov $0x0,0x7c(%rsp)
5064(3): xor %r12d,%r12d
5067(5): mov $0x0,0xf(%rsp)
506c(9): mov $0x1,0x18(%rsp)
5075(5): mov %rax,0x48(%rsp)
507a(6): mov $0x1,%r15d
5080(8): mov $0x2,0x8(%rsp)
5088(5): jmp 0xfffff41b(%rip)
508d(3): nop (%rax)
5090(2): test %ebx,%ebx
5092(6): jnz 0x3fb(%rip)
5098(3): test %r13,%r13
509b(6): jz 0x22b(%rip)
50a1(4): mov $0x22,(%r14)
50a5(5): mov $0x1,0xe(%rsp)
50aa(3): xor %r12d,%r12d
50ad(5): mov $0x0,0x7c(%rsp)
50b2(9): mov $0x0,0x50(%rsp)
50bb(7): lea 0x29d1(%rip),%rax
50c2(5): mov $0x0,0xf(%rsp)
50c7(5): mov $0x1,0xd(%rsp)
50cc(9): mov $0x1,0x18(%rsp)
50d5(6): mov $0x1,%r15d
50db(5): mov %rax,0x48(%rsp)
50e0(5): jmp 0xfffff3c3(%rip)
50e5(7): lea 0x29a7(%rip),%rax
50ec(5): mov $0x1,0xe(%rsp)
50f1(5): mov $0x0,0x7c(%rsp)
50f6(3): xor %r12d,%r12d
50f9(9): mov $0x0,0x50(%rsp)
5102(5): mov $0x1,0xf(%rsp)
5107(5): mov $0x1,0xd(%rsp)
510c(9): mov $0x1,0x18(%rsp)
5115(3): xor %r15d,%r15d
5118(5): mov %rax,0x48(%rsp)
511d(8): mov $0x5,0x8(%rsp)
5125(5): jmp 0xfffff37e(%rip)
512a(5): mov $0x1,0xe(%rsp)
512f(5): mov $0x0,0x7c(%rsp)
5134(3): xor %r12d,%r12d
5137(9): mov $0x0,0x50(%rsp)
5140(5): mov $0x0,0xf(%rsp)
5145(3): xor %r15d,%r15d
5148(5): mov $0x1,0xd(%rsp)
514d(9): mov $0x0,0x18(%rsp)
5156(9): mov $0x0,0x48(%rsp)
515f(5): jmp 0xfffff344(%rip)
5164(5): cmp $0xa,0x8(%rsp)
5169(2): jz 0x58(%rip)
516b(7): lea 0x2925(%rip),%rsi
5172(2): xor %edi,%edi
5174(5): mov $0x5,%edx
5179(5): call 0xffffc4e7(%rip)
517e(3): mov %rax,%rcx
5181(5): mov %rax,0x68(%rsp)
5186(7): lea 0x290a(%rip),%rax
518d(3): cmp %rax,%rcx
5190(6): jz 0x39e(%rip)
5196(7): lea 0x28f8(%rip),%rsi
519d(2): xor %edi,%edi
519f(5): mov $0x5,%edx
51a4(5): call 0xffffc4bc(%rip)
51a9(3): mov %rax,%rcx
51ac(5): mov %rax,0x60(%rsp)
51b1(7): lea 0x28dd(%rip),%rax
51b8(3): cmp %rax,%rcx
51bb(6): jz 0x389(%rip)
51c1(3): xor %r15d,%r15d
51c4(2): test %ebx,%ebx
51c6(6): jz 0x1c7(%rip)
51cc(2): test %ebx,%ebx
51ce(5): mov 0x60(%rsp),%rbx
51d3(5): setnz 0xf(%rsp)
51d8(3): xor %r12d,%r12d
51db(3): mov %rbx,%rdi
51de(5): call 0xffffc4a2(%rip)
51e3(5): mov %rbx,0x48(%rsp)
51e8(5): mov %rax,0x18(%rsp)
51ed(5): mov $0x1,0xe(%rsp)
51f2(5): mov $0x0,0x7c(%rsp)
51f7(9): mov $0x0,0x50(%rsp)
5200(5): mov $0x1,0xd(%rsp)
5205(5): jmp 0xfffff29e(%rip)
520a(5): mov $0x1,0xe(%rsp)
520f(5): mov $0x0,0x7c(%rsp)
5214(3): xor %r12d,%r12d
5217(9): mov $0x0,0x50(%rsp)
5220(5): mov $0x0,0xf(%rsp)
5225(3): xor %r15d,%r15d
5228(5): mov $0x0,0xd(%rsp)
522d(9): mov $0x0,0x18(%rsp)
5236(9): mov $0x0,0x48(%rsp)
523f(5): jmp 0xfffff264(%rip)
5244(5): mov $0x1,0xe(%rsp)
5249(5): mov $0x0,0x7c(%rsp)
524e(3): xor %r12d,%r12d
5251(9): mov $0x0,0x50(%rsp)
525a(5): mov $0x1,0xf(%rsp)
525f(5): mov $0x1,0xd(%rsp)
5264(5): jmp 0xfffff21f(%rip)
5269(3): cmp %r15,%r13
526c(2): jbe 0x7(%rip)
526e(5): mov $0x30,0x0(%r14,%r15,1)
5273(4): lea 0x2(%rcx),%rax
5277(3): cmp %rax,%r13
527a(2): jbe 0x8(%rip)
527c(6): mov $0x30,0x2(%r14,%rcx,1)
5282(3): mov %r12d,%eax
5285(4): lea 0x3(%rcx),%r15
5289(3): xor %r12d,%r12d
528c(5): mov $0x30,%ebx
5291(5): jmp 0xfffff367(%rip)
5296(a): nop 0x0(%rax,%rax,1)
52a0(5): movzx 0xf(%rsp),%ebx
52a5(3): mov %r11,%rbp
52a8(4): mov %bl,0xd(%rsp)
52ac(5): jmp 0xfffffcad(%rip)
52b1(5): movzx 0xd(%rsp),%edx
52b6(3): xor %r12d,%r12d
52b9(5): jmp 0xfffffb07(%rip)
52be(3): xor %r10d,%r10d
52c1(5): jmp 0xfffffbbc(%rip)
52c6(9): mov $0x0,0x50(%rsp)
52cf(5): mov $0x1,0xe(%rsp)
52d4(3): xor %r12d,%r12d
52d7(5): mov $0x0,0x7c(%rsp)
52dc(5): jmp 0xfffffddf(%rip)
52e1(5): mov 0x30(%rsp),%r11
52e6(3): mov %r14,%rsi
52e9(3): mov %r13,%rcx
52ec(3): mov %rbx,%rax
52ef(3): mov %rbx,%rdi
52f2(6): movzx 0x7d(%rsp),%r8d
52f8(5): movzx 0x7e(%rsp),%ebx
52fd(8): mov 0x88(%rsp),%r9
5305(3): cmp %r11,%rsi
5308(6): movzx 0x7f(%rsp),%r10d
530e(8): mov 0x80(%rsp),%r15
5316(5): mov 0x40(%rsp),%r14
531b(5): mov 0x70(%rsp),%r13
5320(2): jnb 0x28(%rip)
5322(3): cmp $0x0,(%rcx)
5325(2): jnz 0x12(%rip)
5327(2): jmp 0x21(%rip)
5329(7): nop 0x0(%rax)
5330(5): cmp $0x0,0x0(%r9,%rax,1)
5335(2): jz 0x10(%rip)
5337(4): add $0x1,%rax
533b(5): lea 0x0(%rbp,%rax,1),%rdx
5340(3): cmp %rdx,%r11
5343(2): jnbe 0xffffffed(%rip)
5345(3): mov %rax,%rdi
5348(5): movzx 0xd(%rsp),%edx
534d(3): xor %r12d,%r12d
5350(5): jmp 0xfffffa66(%rip)
5355(3): mov %rbx,%rdi
5358(6): movzx 0x7d(%rsp),%r8d
535e(5): movzx 0x7e(%rsp),%ebx
5363(6): movzx 0x7f(%rsp),%r10d
5369(8): mov 0x80(%rsp),%r15
5371(3): xor %r12d,%r12d
5374(5): mov 0x40(%rsp),%r14
5379(5): mov 0x70(%rsp),%r13
537e(5): mov 0x30(%rsp),%r11
5383(5): movzx 0xd(%rsp),%edx
5388(5): jmp 0xfffffa2e(%rip)
538d(5): mov 0x68(%rsp),%rdx
5392(3): movzx (%rdx),%eax
5395(2): test %al,%al
5397(6): jz 0xfffffe35(%rip)
539d(3): nop (%rax)
53a0(3): cmp %r15,%r13
53a3(2): jbe 0x6(%rip)
53a5(4): mov %al,0x0(%r14,%r15,1)
53a9(4): add $0x1,%r15
53ad(5): movzx 0x0(%rdx,%r15,1),%eax
53b2(2): test %al,%al
53b4(2): jnz 0xffffffec(%rip)
53b6(5): jmp 0xfffffe16(%rip)
53bb(2): mov %edx,%eax
53bd(5): jmp 0xfffff55a(%rip)
53c2(4): movzx 0x0(%rax,%rcx,1),%ebx
53c6(3): cmp $0x3e,%bl
53c9(6): jnbe 0xfffff877(%rip)
53cf(a): mov $0x8070630310989004800,%rax
53d9(4): bt %rbx,%rax
53dd(6): jnb 0xfffff863(%rip)
53e3(5): cmp $0x0,0xf(%rsp)
53e8(6): jnz 0x1ea(%rip)
53ee(3): cmp %r15,%r13
53f1(2): jbe 0x7(%rip)
53f3(5): mov $0x3f,0x0(%r14,%r15,1)
53f8(4): lea 0x1(%r15),%rax
53fc(3): cmp %rax,%r13
53ff(2): jbe 0x8(%rip)
5401(6): mov $0x22,0x1(%r14,%r15,1)
5407(4): lea 0x2(%r15),%rax
540b(3): cmp %rax,%r13
540e(2): jbe 0x8(%rip)
5410(6): mov $0x22,0x2(%r14,%r15,1)
5416(4): lea 0x3(%r15),%rax
541a(3): cmp %rax,%r13
541d(2): jbe 0x8(%rip)
541f(6): mov $0x3f,0x3(%r14,%r15,1)
5425(4): add $0x4,%r15
5429(2): xor %edx,%edx
542b(3): xor %r12d,%r12d
542e(2): xor %eax,%eax
5430(3): mov %rcx,%rbp
5433(5): jmp 0xfffff1c5(%rip)
5438(2): test %ebx,%ebx
543a(6): jz 0x18e(%rip)
5440(7): lea 0x264e(%rip),%rax
5447(5): mov $0x1,0xe(%rsp)
544c(5): mov $0x0,0x7c(%rsp)
5451(3): xor %r12d,%r12d
5454(9): mov $0x0,0x50(%rsp)
545d(5): mov $0x1,0xf(%rsp)
5462(5): mov $0x0,0xd(%rsp)
5467(9): mov $0x1,0x18(%rsp)
5470(3): xor %r15d,%r15d
5473(5): mov %rax,0x48(%rsp)
5478(5): jmp 0xfffff02b(%rip)
547d(3): nop (%rax)
5480(3): mov %r11,%rbp
5483(5): movzx 0xf(%rsp),%eax
5488(5): jmp 0xfffffad1(%rip)
548d(7): lea 0x25ff(%rip),%rax
5494(5): mov $0x1,0xe(%rsp)
5499(5): mov $0x0,0x7c(%rsp)
549e(3): xor %r12d,%r12d
54a1(9): mov $0x0,0x50(%rsp)
54aa(5): mov $0x1,0xf(%rsp)
54af(5): mov $0x1,0xd(%rsp)
54b4(9): mov $0x1,0x18(%rsp)
54bd(3): xor %r15d,%r15d
54c0(5): mov %rax,0x48(%rsp)
54c5(5): jmp 0xffffefde(%rip)
54ca(2): mov %edx,%eax
54cc(5): mov 0x48(%rsp),%rbx
54d1(3): test %rbx,%rbx
54d4(2): jz 0x2e(%rip)
54d6(2): test %al,%al
54d8(2): jz 0x2a(%rip)
54da(3): movzx (%rbx),%ecx
54dd(3): mov %rbx,%rax
54e0(2): test %cl,%cl
54e2(2): jz 0x20(%rip)
54e4(3): mov %r15,%rdx
54e7(3): sub %r15,%rax
54ea(3): cmp %rdx,%r13
54ed(2): jbe 0x6(%rip)
54ef(4): mov %cl,0x0(%r14,%rdx,1)
54f3(4): add $0x1,%rdx
54f7(4): movzx 0x0(%rax,%rdx,1),%ecx
54fb(2): test %cl,%cl
54fd(2): jnz 0xffffffed(%rip)
54ff(3): mov %rdx,%r15
5502(3): cmp %r15,%r13
5505(6): jbe 0xfffffaa4(%rip)
550b(5): mov $0x0,0x0(%r14,%r15,1)
5510(5): jmp 0xfffffa99(%rip)
5515(5): cmp $0x2,0x8(%rsp)
551a(5): movzx 0xf(%rsp),%ebx
551f(3): mov %r11,%rbp
5522(3): setz %al
5525(4): mov %bl,0xd(%rsp)
5529(5): jmp 0xfffffa30(%rip)
552e(4): mov 0x8(%rsp),%esi
5532(3): mov %rcx,%rdi
5535(5): call 0xffffedab(%rip)
553a(5): mov %rax,0x68(%rsp)
553f(5): jmp 0xfffffc57(%rip)
5544(4): mov 0x8(%rsp),%esi
5548(3): mov %rcx,%rdi
554b(5): call 0xffffed95(%rip)
5550(5): mov %rax,0x60(%rsp)
5555(5): jmp 0xfffffc6c(%rip)
555a(5): movzx 0xf(%rsp),%ebx
555f(3): mov %r11,%rbp
5562(2): mov %edx,%eax
5564(4): mov %bl,0xd(%rsp)
5568(5): jmp 0xfffff9f1(%rip)
556d(4): sub $0x8,%rsp
5571(6): mov $0x5,%r8d
5577(3): mov %r11,%rcx
557a(4): push 0x68(%rsp)
557e(4): push 0x78(%rsp)
5582(3): mov %r14,%rdi
5585(4): push 0x38(%rsp)
5589(8): mov 0x98(%rsp),%r9d
5591(5): mov 0x30(%rsp),%rdx
5596(5): mov 0x70(%rsp),%rsi
559b(5): call 0xffffee35(%rip)
55a0(4): add $0x20,%rsp
55a4(3): mov %rax,%r15
55a7(5): jmp 0xfffffa02(%rip)
55ac(5): movzx 0x7c(%rsp),%eax
55b1(5): jmp 0xffffff1b(%rip)
55b6(8): mov $0x2,0x8(%rsp)
55be(5): jmp 0xfffff99b(%rip)
55c3(5): call 0xffffc0cd(%rip)
55c8(5): mov $0x0,0xd(%rsp)
55cd(5): jmp 0xfffffa74(%rip)
55d2(3): mov %r11,%rbp
55d5(5): jmp 0xfffff99b(%rip)
55da(5): mov $0x1,0xe(%rsp)
55df(2): xor %eax,%eax
55e1(3): xor %r12d,%r12d
55e4(9): mov $0x0,0x50(%rsp)
55ed(5): jmp 0xfffff5a7(%rip)
55f2(3): mov %r13,%rdx
55f5(5): mov 0x50(%rsp),%r13
55fa(5): jmp 0xfffff5f8(%rip)
55ff(5): call 0xffffbfc1(%rip)

"quotearg_n_options" :
5610(2): push %r15
5612(2): push %r14
5614(3): movsxd %edi,%r15
5617(2): push %r13
5619(2): push %r12
561b(3): mov %rdx,%r14
561e(1): push %rbp
561f(1): push %rbx
5620(3): mov %rcx,%rbp
5623(4): sub $0x28,%rsp
5627(5): mov %rsi,0x8(%rsp)
562c(5): call 0xffffbfa4(%rip)
5631(3): mov %rax,%r13
5634(2): mov (%rax),%eax
5636(3): test %r15d,%r15d
5639(7): mov 0x204a40(%rip),%rbx
5640(4): mov %eax,0x18(%rsp)
5644(6): js 0x16d(%rip)
564a(7): cmp %r15d,0x204a27(%rip)
5651(2): jnle 0x64(%rip)
5653(7): cmp $0x7fffffff,%r15d
565a(6): jz 0x15c(%rip)
5660(4): lea 0x1(%r15),%r12d
5664(7): lea 0x204a25(%rip),%rax
566b(3): movsxd %r12d,%rsi
566e(4): shl/sal $0x4,%rsi
5672(3): cmp %rax,%rbx
5675(6): jz 0x11b(%rip)
567b(3): mov %rbx,%rdi
567e(5): call 0xf82(%rip)
5683(3): mov %rax,%rbx
5686(7): mov %rax,0x2049f3(%rip)
568d(7): movsxd 0x2049e4(%rip),%rdi
5694(3): mov %r12d,%edx
5697(2): xor %esi,%esi
5699(2): sub %edi,%edx
569b(4): shl/sal $0x4,%rdi
569f(3): movsxd %edx,%rdx
56a2(3): add %rbx,%rdi
56a5(4): shl/sal $0x4,%rdx
56a9(5): call 0xffffc057(%rip)
56ae(7): mov %r12d,0x2049c3(%rip)
56b5(3): mov 0x4(%rbp),%eax
56b8(4): shl/sal $0x4,%r15
56bc(4): sub $0x8,%rsp
56c0(3): add %r15,%rbx
56c3(4): lea 0x8(%rbp),%r15
56c7(4): mov 0x0(%rbp),%r8d
56cb(3): mov (%rbx),%r11
56ce(4): mov 0x8(%rbx),%r12
56d2(3): mov %r14,%rcx
56d5(3): or $0x1,%eax
56d8(4): mov %eax,0x24(%rsp)
56dc(3): push 0x30(%rbp)
56df(3): mov %eax,%r9d
56e2(3): push 0x28(%rbp)
56e5(2): push %r15
56e7(3): mov %r11,%rsi
56ea(5): mov 0x28(%rsp),%rdx
56ef(3): mov %r12,%rdi
56f2(5): mov %r11,0x30(%rsp)
56f7(5): call 0xffffecd9(%rip)
56fc(4): add $0x20,%rsp
5700(5): mov 0x10(%rsp),%r11
5705(3): cmp %rax,%r11
5708(2): jnbe 0x69(%rip)
570a(4): lea 0x1(%rax),%rsi
570e(7): lea 0x204a2b(%rip),%rax
5715(3): cmp %rax,%r12
5718(3): mov %rsi,(%rbx)
571b(2): jz 0x14(%rip)
571d(3): mov %r12,%rdi
5720(5): mov %rsi,0x10(%rsp)
5725(5): call 0xffffbe8b(%rip)
572a(5): mov 0x10(%rsp),%rsi
572f(3): mov %rsi,%rdi
5732(5): mov %rsi,0x10(%rsp)
5737(5): call 0xe69(%rip)
573c(4): sub $0x8,%rsp
5740(4): mov %rax,0x8(%rbx)
5744(4): mov 0x0(%rbp),%r8d
5748(3): push 0x30(%rbp)
574b(3): push 0x28(%rbp)
574e(3): mov %r14,%rcx
5751(2): push %r15
5753(5): mov 0x3c(%rsp),%r9d
5758(3): mov %rax,%rdi
575b(5): mov 0x28(%rsp),%rdx
5760(5): mov 0x30(%rsp),%rsi
5765(3): mov %rax,%r12
5768(5): call 0xffffec68(%rip)
576d(4): add $0x20,%rsp
5771(4): mov 0x18(%rsp),%eax
5775(4): mov %eax,0x0(%r13)
5779(4): add $0x28,%rsp
577d(3): mov %r12,%rax
5780(1): pop %rbx
5781(1): pop %rbp
5782(2): pop %r12
5784(2): pop %r13
5786(2): pop %r14
5788(2): pop %r15
578a(1): ret near (%rsp)
578b(5): nop 0x0(%rax,%rax,1)
5790(2): xor %edi,%edi
5792(5): call 0xe6e(%rip)
5797(8): movdqa 0x2048f1(%rip),%xmm0
579f(3): mov %rax,%rbx
57a2(7): mov %rax,0x2048d7(%rip)
57a9(3): movups %xmm0,(%rax)
57ac(5): jmp 0xfffffee1(%rip)
57b1(5): call 0xffffbe0f(%rip)
57b6(5): call 0x103a(%rip)

"clone_quoting_options" :
57c0(2): push %r12
57c2(1): push %rbp
57c3(1): push %rbx
57c4(3): mov %rdi,%rbx
57c7(5): call 0xffffbe09(%rip)
57cc(3): mov (%rax),%r12d
57cf(3): mov %rax,%rbp
57d2(7): lea 0x204a67(%rip),%rax
57d9(3): test %rbx,%rbx
57dc(5): mov $0x38,%esi
57e1(4): cmove %rax,%rbx
57e5(3): mov %rbx,%rdi
57e8(5): call 0xfb8(%rip)
57ed(4): mov %r12d,0x0(%rbp)
57f1(1): pop %rbx
57f2(1): pop %rbp
57f3(2): pop %r12
57f5(1): ret near (%rsp)

"get_quoting_style" :
5800(7): lea 0x204a39(%rip),%rax
5807(3): test %rdi,%rdi
580a(4): cmove %rax,%rdi
580e(2): mov (%rdi),%eax
5810(1): ret near (%rsp)

"set_quoting_style" :
5820(7): lea 0x204a19(%rip),%rax
5827(3): test %rdi,%rdi
582a(4): cmove %rax,%rdi
582e(2): mov %esi,(%rdi)
5830(1): ret near (%rsp)

"set_char_quoting" :
5840(7): lea 0x2049f9(%rip),%rax
5847(3): test %rdi,%rdi
584a(2): mov %esi,%ecx
584c(4): cmove %rax,%rdi
5850(2): mov %esi,%eax
5852(3): and $0x1f,%ecx
5855(3): shr $0x5,%al
5858(3): movzx %al,%eax
585b(5): lea 0x8(%rdi,%rax,4),%rdi
5860(2): mov (%rdi),%esi
5862(2): mov %esi,%eax
5864(2): shr %cl,%eax
5866(2): xor %eax,%edx
5868(3): and $0x1,%eax
586b(3): and $0x1,%edx
586e(2): shl/sal %cl,%edx
5870(2): xor %esi,%edx
5872(2): mov %edx,(%rdi)
5874(1): ret near (%rsp)

"set_quoting_flags" :
5880(7): lea 0x2049b9(%rip),%rax
5887(3): test %rdi,%rdi
588a(4): cmove %rax,%rdi
588e(3): mov 0x4(%rdi),%eax
5891(3): mov %esi,0x4(%rdi)
5894(1): ret near (%rsp)

"set_custom_quoting" :
58a0(7): lea 0x204999(%rip),%rax
58a7(3): test %rdi,%rdi
58aa(4): cmove %rax,%rdi
58ae(3): test %rsi,%rsi
58b1(6): mov $0xa,(%rdi)
58b7(2): jz 0x10(%rip)
58b9(3): test %rdx,%rdx
58bc(2): jz 0xb(%rip)
58be(4): mov %rsi,0x28(%rdi)
58c2(4): mov %rdx,0x30(%rdi)
58c6(1): ret near (%rsp)
58c7(4): sub $0x8,%rsp
58cb(5): call 0xffffbcf5(%rip)

"quotearg_buffer" :
58d0(2): push %r15
58d2(2): push %r14
58d4(7): lea 0x204965(%rip),%rax
58db(2): push %r13
58dd(2): push %r12
58df(3): mov %rdi,%r13
58e2(1): push %rbp
58e3(1): push %rbx
58e4(3): mov %r8,%rbx
58e7(3): mov %rsi,%r14
58ea(3): mov %rdx,%r15
58ed(4): sub $0x18,%rsp
58f1(3): test %r8,%r8
58f4(4): cmove %rax,%rbx
58f8(5): mov %rcx,0x8(%rsp)
58fd(5): call 0xffffbcd3(%rip)
5902(3): mov (%rax),%r12d
5905(3): mov %rax,%rbp
5908(4): lea 0x8(%rbx),%rax
590c(4): sub $0x8,%rsp
5910(4): mov 0x4(%rbx),%r9d
5914(3): push 0x30(%rbx)
5917(3): mov (%rbx),%r8d
591a(3): push 0x28(%rbx)
591d(3): mov %r15,%rdx
5920(1): push %rax
5921(5): mov 0x28(%rsp),%rcx
5926(3): mov %r14,%rsi
5929(3): mov %r13,%rdi
592c(5): call 0xffffeaa4(%rip)
5931(4): mov %r12d,0x0(%rbp)
5935(4): add $0x38,%rsp
5939(1): pop %rbx
593a(1): pop %rbp
593b(2): pop %r12
593d(2): pop %r13
593f(2): pop %r14
5941(2): pop %r15
5943(1): ret near (%rsp)

"quotearg_alloc_mem" :
5950(2): push %r15
5952(2): push %r14
5954(7): lea 0x2048e5(%rip),%rax
595b(2): push %r13
595d(2): push %r12
595f(3): mov %rdx,%r12
5962(1): push %rbp
5963(1): push %rbx
5964(3): mov %rcx,%rbx
5967(3): mov %rdi,%r14
596a(3): mov %rsi,%r15
596d(4): sub $0x38,%rsp
5971(3): test %rcx,%rcx
5974(4): cmove %rax,%rbx
5978(2): xor %ebp,%ebp
597a(5): call 0xffffbc56(%rip)
597f(3): test %r12,%r12
5982(3): mov %rax,%r13
5985(2): mov (%rax),%eax
5987(4): setz %bpl
598b(3): or 0x4(%rbx),%ebp
598e(4): lea 0x8(%rbx),%r10
5992(4): sub $0x8,%rsp
5996(3): mov (%rbx),%r8d
5999(3): mov %r15,%rcx
599c(4): mov %eax,0x14(%rsp)
59a0(3): push 0x30(%rbx)
59a3(3): mov %r14,%rdx
59a6(3): push 0x28(%rbx)
59a9(2): push %r10
59ab(2): xor %esi,%esi
59ad(3): mov %ebp,%r9d
59b0(2): xor %edi,%edi
59b2(5): mov %r10,0x40(%rsp)
59b7(5): call 0xffffea19(%rip)
59bc(4): lea 0x1(%rax),%rsi
59c0(5): mov %rax,0x48(%rsp)
59c5(4): add $0x20,%rsp
59c9(3): mov %rsi,%rdi
59cc(5): mov %rsi,0x18(%rsp)
59d1(5): call 0xbcf(%rip)
59d6(5): mov %rax,0x10(%rsp)
59db(4): sub $0x8,%rsp
59df(3): push 0x30(%rbx)
59e2(3): push 0x28(%rbx)
59e5(5): mov 0x38(%rsp),%r10
59ea(3): mov %ebp,%r9d
59ed(3): mov (%rbx),%r8d
59f0(3): mov %r15,%rcx
59f3(3): mov %r14,%rdx
59f6(3): mov %rax,%rdi
59f9(2): push %r10
59fb(5): mov 0x38(%rsp),%rsi
5a00(5): call 0xffffe9d0(%rip)
5a05(4): mov 0x2c(%rsp),%eax
5a09(4): add $0x20,%rsp
5a0d(3): test %r12,%r12
5a10(4): mov %eax,0x0(%r13)
5a14(2): jz 0xb(%rip)
5a16(5): mov 0x28(%rsp),%r11
5a1b(4): mov %r11,(%r12)
5a1f(5): mov 0x10(%rsp),%rax
5a24(4): add $0x38,%rsp
5a28(1): pop %rbx
5a29(1): pop %rbp
5a2a(2): pop %r12
5a2c(2): pop %r13
5a2e(2): pop %r14
5a30(2): pop %r15
5a32(1): ret near (%rsp)

"quotearg_alloc" :
5a40(3): mov %rdx,%rcx
5a43(2): xor %edx,%edx
5a45(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5a50(6): mov 0x204622(%rip),%eax
5a56(2): push %r12
5a58(7): mov 0x204621(%rip),%r12
5a5f(1): push %rbp
5a60(1): push %rbx
5a61(3): cmp $0x1,%eax
5a64(2): jle 0x2d(%rip)
5a66(3): sub $0x2,%eax
5a69(5): lea 0x18(%r12),%rbx
5a6e(4): shl/sal $0x4,%rax
5a72(5): lea 0x28(%r12,%rax,1),%rbp
5a77(9): nop 0x0(%rax,%rax,1)
5a80(3): mov (%rbx),%rdi
5a83(4): add $0x10,%rbx
5a87(5): call 0xffffbb29(%rip)
5a8c(3): cmp %rbp,%rbx
5a8f(2): jnz 0xfffffff1(%rip)
5a91(5): mov 0x8(%r12),%rdi
5a96(7): lea 0x2046a3(%rip),%rbx
5a9d(3): cmp %rbx,%rdi
5aa0(2): jz 0x19(%rip)
5aa2(5): call 0xffffbb0e(%rip)
5aa7(b): mov $0x100,0x2045de(%rip)
5ab2(7): mov %rbx,0x2045df(%rip)
5ab9(7): lea 0x2045d0(%rip),%rbx
5ac0(3): cmp %rbx,%r12
5ac3(2): jz 0x11(%rip)
5ac5(3): mov %r12,%rdi
5ac8(5): call 0xffffbae8(%rip)
5acd(7): mov %rbx,0x2045ac(%rip)
5ad4(1): pop %rbx
5ad5(a): mov $0x1,0x204599(%rip)
5adf(1): pop %rbp
5ae0(2): pop %r12
5ae2(1): ret near (%rsp)

"quotearg_n" :
5af0(7): lea 0x204749(%rip),%rcx
5af7(7): mov $0xffffffff,%rdx
5afe(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5b10(7): lea 0x204729(%rip),%rcx
5b17(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5b20(7): lea 0x204719(%rip),%rcx
5b27(3): mov %rdi,%rsi
5b2a(7): mov $0xffffffff,%rdx
5b31(2): xor %edi,%edi
5b33(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5b40(7): lea 0x2046f9(%rip),%rcx
5b47(3): mov %rsi,%rdx
5b4a(3): mov %rdi,%rsi
5b4d(2): xor %edi,%edi
5b4f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5b60(4): sub $0x48,%rsp
5b64(3): mov %rdx,%rax
5b67(9): mov $0x28,%rdx
5b70(5): mov %rdx,0x38(%rsp)
5b75(2): xor %edx,%edx
5b77(3): cmp $0xa,%esi
5b7a(2): jz 0x6a(%rip)
5b7c(3): mov %esi,(%rsp)
5b7f(3): mov %rsp,%rcx
5b82(7): mov $0xffffffff,%rdx
5b89(3): mov %rax,%rsi
5b8c(9): mov $0x0,0x4(%rsp)
5b95(9): mov $0x0,0xc(%rsp)
5b9e(9): mov $0x0,0x14(%rsp)
5ba7(9): mov $0x0,0x1c(%rsp)
5bb0(9): mov $0x0,0x24(%rsp)
5bb9(9): mov $0x0,0x2c(%rsp)
5bc2(8): mov $0x0,0x34(%rsp)
5bca(5): call 0xfffffa46(%rip)
5bcf(5): mov 0x38(%rsp),%rcx
5bd4(9): xor $0x28,%rcx
5bdd(2): jnz 0xc(%rip)
5bdf(4): add $0x48,%rsp
5be3(1): ret near (%rsp)
5be4(5): call 0xffffb9dc(%rip)
5be9(5): call 0xffffbaa7(%rip)

"quotearg_n_style_mem" :
5bf0(4): sub $0x48,%rsp
5bf4(3): mov %rdx,%rax
5bf7(3): mov %rcx,%rdx
5bfa(9): mov $0x28,%rcx
5c03(5): mov %rcx,0x38(%rsp)
5c08(2): xor %ecx,%ecx
5c0a(3): cmp $0xa,%esi
5c0d(2): jz 0x63(%rip)
5c0f(3): mov %esi,(%rsp)
5c12(3): mov %rsp,%rcx
5c15(3): mov %rax,%rsi
5c18(9): mov $0x0,0x4(%rsp)
5c21(9): mov $0x0,0xc(%rsp)
5c2a(9): mov $0x0,0x14(%rsp)
5c33(9): mov $0x0,0x1c(%rsp)
5c3c(9): mov $0x0,0x24(%rsp)
5c45(9): mov $0x0,0x2c(%rsp)
5c4e(8): mov $0x0,0x34(%rsp)
5c56(5): call 0xfffff9ba(%rip)
5c5b(5): mov 0x38(%rsp),%rdx
5c60(9): xor $0x28,%rdx
5c69(2): jnz 0xc(%rip)
5c6b(4): add $0x48,%rsp
5c6f(1): ret near (%rsp)
5c70(5): call 0xffffb950(%rip)
5c75(5): call 0xffffba1b(%rip)

"quotearg_style" :
5c80(3): mov %rsi,%rdx
5c83(2): mov %edi,%esi
5c85(2): xor %edi,%edi
5c87(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
5c90(3): mov %rdx,%rcx
5c93(3): mov %rsi,%rdx
5c96(2): mov %edi,%esi
5c98(2): xor %edi,%edi
5c9a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
5ca0(4): sub $0x48,%rsp
5ca4(2): mov %edx,%ecx
5ca6(9): mov $0x28,%rax
5caf(5): mov %rax,0x38(%rsp)
5cb4(2): xor %eax,%eax
5cb6(7): mov 0x2045b3(%rip),%rax
5cbd(3): mov %rsp,%r8
5cc0(3): and $0x1f,%ecx
5cc3(8): movdqa 0x204575(%rip),%xmm0
5ccb(5): mov %rax,0x30(%rsp)
5cd0(2): mov %edx,%eax
5cd2(4): movaps %xmm0,(%rsp)
5cd6(3): shr $0x5,%al
5cd9(3): movzx %al,%eax
5cdc(5): lea 0x8(%r8,%rax,4),%r9
5ce1(8): movdqa 0x204567(%rip),%xmm0
5ce9(5): movaps %xmm0,0x10(%rsp)
5cee(8): movdqa 0x20456a(%rip),%xmm0
5cf6(5): movaps %xmm0,0x20(%rsp)
5cfb(3): mov (%r9),%edx
5cfe(2): mov %edx,%eax
5d00(2): shr %cl,%eax
5d02(2): not %eax
5d04(3): and $0x1,%eax
5d07(2): shl/sal %cl,%eax
5d09(3): mov %r8,%rcx
5d0c(2): xor %edx,%eax
5d0e(3): mov %rsi,%rdx
5d11(3): mov %rdi,%rsi
5d14(3): mov %eax,(%r9)
5d17(2): xor %edi,%edi
5d19(5): call 0xfffff8f7(%rip)
5d1e(5): mov 0x38(%rsp),%rsi
5d23(9): xor $0x28,%rsi
5d2c(2): jnz 0x7(%rip)
5d2e(4): add $0x48,%rsp
5d32(1): ret near (%rsp)
5d33(5): call 0xffffb95d(%rip)

"quotearg_char" :
5d40(4): movsx %sil,%edx
5d44(7): mov $0xffffffff,%rsi
5d4b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5d50(5): mov $0x3a,%edx
5d55(7): mov $0xffffffff,%rsi
5d5c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5d70(5): mov $0x3a,%edx
5d75(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5d80(4): sub $0x48,%rsp
5d84(3): mov %rdx,%rax
5d87(9): mov $0x28,%rdx
5d90(5): mov %rdx,0x38(%rsp)
5d95(2): xor %edx,%edx
5d97(3): cmp $0xa,%esi
5d9a(2): jz 0x6a(%rip)
5d9c(3): mov %esi,(%rsp)
5d9f(3): mov %rsp,%rcx
5da2(7): mov $0xffffffff,%rdx
5da9(3): mov %rax,%rsi
5dac(9): mov $0x0,0x4(%rsp)
5db5(9): mov $0x4000000,0xc(%rsp)
5dbe(9): mov $0x0,0x14(%rsp)
5dc7(9): mov $0x0,0x1c(%rsp)
5dd0(9): mov $0x0,0x24(%rsp)
5dd9(9): mov $0x0,0x2c(%rsp)
5de2(8): mov $0x0,0x34(%rsp)
5dea(5): call 0xfffff826(%rip)
5def(5): mov 0x38(%rsp),%rcx
5df4(9): xor $0x28,%rcx
5dfd(2): jnz 0xc(%rip)
5dff(4): add $0x48,%rsp
5e03(1): ret near (%rsp)
5e04(5): call 0xffffb7bc(%rip)
5e09(5): call 0xffffb887(%rip)

"quotearg_n_custom_mem" :
5e10(4): sub $0x48,%rsp
5e14(3): mov %rcx,%r9
5e17(7): mov 0x204452(%rip),%rcx
5e1e(8): movdqa 0x20441a(%rip),%xmm0
5e26(9): mov $0x28,%rax
5e2f(5): mov %rax,0x38(%rsp)
5e34(2): xor %eax,%eax
5e36(4): movaps %xmm0,(%rsp)
5e3a(3): test %rsi,%rsi
5e3d(5): mov %rcx,0x30(%rsp)
5e42(7): mov $0xa,(%rsp)
5e49(8): movdqa 0x2043ff(%rip),%xmm0
5e51(5): movaps %xmm0,0x10(%rsp)
5e56(8): movdqa 0x204402(%rip),%xmm0
5e5e(5): movaps %xmm0,0x20(%rsp)
5e63(2): jz 0x34(%rip)
5e65(3): test %rdx,%rdx
5e68(2): jz 0x2f(%rip)
5e6a(5): mov %rsi,0x28(%rsp)
5e6f(5): mov %rdx,0x30(%rsp)
5e74(3): mov %rsp,%rcx
5e77(3): mov %r8,%rdx
5e7a(3): mov %r9,%rsi
5e7d(5): call 0xfffff793(%rip)
5e82(5): mov 0x38(%rsp),%rdi
5e87(9): xor $0x28,%rdi
5e90(2): jnz 0xc(%rip)
5e92(4): add $0x48,%rsp
5e96(1): ret near (%rsp)
5e97(5): call 0xffffb729(%rip)
5e9c(5): call 0xffffb7f4(%rip)

"quotearg_n_custom" :
5eb0(7): mov $0xffffffff,%r8
5eb7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5ec0(3): mov %rdx,%rcx
5ec3(7): mov $0xffffffff,%r8
5eca(3): mov %rsi,%rdx
5ecd(3): mov %rdi,%rsi
5ed0(2): xor %edi,%edi
5ed2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5ee0(3): mov %rcx,%r8
5ee3(3): mov %rdx,%rcx
5ee6(3): mov %rsi,%rdx
5ee9(3): mov %rdi,%rsi
5eec(2): xor %edi,%edi
5eee(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5f00(7): lea 0x204139(%rip),%rcx
5f07(5): jmp 0xfffff709(%rip)

"quote_mem" :
5f10(7): lea 0x204129(%rip),%rcx
5f17(3): mov %rsi,%rdx
5f1a(3): mov %rdi,%rsi
5f1d(2): xor %edi,%edi
5f1f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5f30(7): lea 0x204109(%rip),%rcx
5f37(7): mov $0xffffffff,%rdx
5f3e(5): jmp 0xfffff6d2(%rip)

"quote" :
5f50(7): lea 0x2040e9(%rip),%rcx
5f57(3): mov %rdi,%rsi
5f5a(7): mov $0xffffffff,%rdx
5f61(2): xor %edi,%edi
5f63(5): jmp 0xfffff6ad(%rip)

"dup_safer" :
5f70(5): mov $0x3,%edx
5f75(2): xor %esi,%esi
5f77(2): xor %eax,%eax
5f79(5): jmp 0x937(%rip)

"version_etc_arn" :
5f80(2): push %r15
5f82(2): push %r14
5f84(2): push %r13
5f86(2): push %r12
5f88(3): mov %r9,%r12
5f8b(1): push %rbp
5f8c(1): push %rbx
5f8d(3): mov %rdi,%rbp
5f90(3): mov %r8,%rbx
5f93(4): sub $0x28,%rsp
5f97(3): test %rsi,%rsi
5f9a(6): jz 0x11e(%rip)
5fa0(3): mov %rdx,%r8
5fa3(7): lea 0x1fbe(%rip),%rdx
5faa(3): mov %rcx,%r9
5fad(2): xor %eax,%eax
5faf(3): mov %rsi,%rcx
5fb2(5): mov $0x1,%esi
5fb7(5): call 0xffffb8e9(%rip)
5fbc(7): lea 0x1fb8(%rip),%rsi
5fc3(2): xor %edi,%edi
5fc5(5): mov $0x5,%edx
5fca(5): call 0xffffb696(%rip)
5fcf(7): lea 0x22ca(%rip),%rdx
5fd6(3): mov %rax,%rcx
5fd9(6): mov $0x7e3,%r8d
5fdf(5): mov $0x1,%esi
5fe4(3): mov %rbp,%rdi
5fe7(2): xor %eax,%eax
5fe9(5): call 0xffffb8b7(%rip)
5fee(7): lea 0x2013(%rip),%rsi
5ff5(2): xor %edi,%edi
5ff7(5): mov $0x5,%edx
5ffc(5): call 0xffffb664(%rip)
6001(3): mov %rbp,%rsi
6004(3): mov %rax,%rdi
6007(5): call 0xffffb739(%rip)
600c(4): cmp $0x9,%r12
6010(6): jnbe 0x340(%rip)
6016(7): lea 0x224b(%rip),%rdx
601d(4): movsxd 0x0(%rdx,%r12,4),%rax
6021(3): add %rdx,%rax
6024(2): jmp %rax
6026(a): nop 0x0(%rax,%rax,1)
6030(4): mov 0x38(%rbx),%r9
6034(4): mov 0x10(%rbx),%rax
6038(7): lea 0x2139(%rip),%rsi
603f(4): mov 0x8(%rbx),%r8
6043(5): mov $0x5,%edx
6048(2): xor %edi,%edi
604a(4): mov 0x30(%rbx),%r13
604e(4): mov 0x28(%rbx),%r12
6052(5): mov %r9,0x10(%rsp)
6057(4): mov 0x20(%rbx),%r15
605b(4): mov 0x18(%rbx),%r14
605f(4): mov %rax,(%rsp)
6063(5): mov %r8,0x8(%rsp)
6068(3): mov (%rbx),%rbx
606b(5): call 0xffffb5f5(%rip)
6070(4): sub $0x8,%rsp
6074(5): mov 0x18(%rsp),%r9
6079(3): mov %rax,%rdx
607c(3): mov %rbx,%rcx
607f(5): mov $0x1,%esi
6084(3): mov %rbp,%rdi
6087(2): xor %eax,%eax
6089(2): push %r9
608b(2): push %r13
608d(2): push %r12
608f(2): push %r15
6091(2): push %r14
6093(5): mov 0x30(%rsp),%r9
6098(5): mov 0x38(%rsp),%r8
609d(5): call 0xffffb803(%rip)
60a2(4): add $0x30,%rsp
60a6(4): add $0x28,%rsp
60aa(1): pop %rbx
60ab(1): pop %rbp
60ac(2): pop %r12
60ae(2): pop %r13
60b0(2): pop %r14
60b2(2): pop %r15
60b4(1): ret near (%rsp)
60b5(3): nop (%rax)
60b8(3): mov %rcx,%r8
60bb(3): mov %rdx,%rcx
60be(7): lea 0x1eaf(%rip),%rdx
60c5(5): mov $0x1,%esi
60ca(2): xor %eax,%eax
60cc(5): call 0xffffb7d4(%rip)
60d1(5): jmp 0xfffffeeb(%rip)
60d6(a): nop 0x0(%rax,%rax,1)
60e0(4): mov 0x40(%rbx),%r10
60e4(4): mov 0x38(%rbx),%r9
60e8(7): lea 0x20b9(%rip),%rsi
60ef(4): mov 0x10(%rbx),%rax
60f3(4): mov 0x8(%rbx),%r8
60f7(5): mov $0x5,%edx
60fc(4): mov 0x30(%rbx),%r13
6100(4): mov 0x28(%rbx),%r12
6104(4): mov 0x20(%rbx),%r15
6108(4): mov 0x18(%rbx),%r14
610c(3): mov (%rbx),%rbx
610f(5): mov %r10,0x18(%rsp)
6114(5): mov %r9,0x10(%rsp)
6119(4): mov %rax,(%rsp)
611d(5): mov %r8,0x8(%rsp)
6122(2): xor %edi,%edi
6124(5): call 0xffffb53c(%rip)
6129(5): mov 0x18(%rsp),%r10
612e(2): push %r10
6130(5): jmp 0xffffff44(%rip)
6135(3): nop (%rax)
6138(3): mov (%rbx),%rbx
613b(7): lea 0x1e3d(%rip),%rsi
6142(5): mov $0x5,%edx
6147(2): xor %edi,%edi
6149(5): call 0xffffb517(%rip)
614e(4): add $0x28,%rsp
6152(3): mov %rbx,%rcx
6155(3): mov %rbp,%rdi
6158(1): pop %rbx
6159(1): pop %rbp
615a(2): pop %r12
615c(2): pop %r13
615e(2): pop %r14
6160(2): pop %r15
6162(3): mov %rax,%rdx
6165(5): mov $0x1,%esi
616a(2): xor %eax,%eax
616c(5): jmp 0xffffb734(%rip)
6171(7): nop 0x0(%rax)
6178(4): mov 0x8(%rbx),%r12
617c(7): lea 0x1e0c(%rip),%rsi
6183(3): mov (%rbx),%rbx
6186(5): mov $0x5,%edx
618b(2): xor %edi,%edi
618d(5): call 0xffffb4d3(%rip)
6192(4): add $0x28,%rsp
6196(3): mov %r12,%r8
6199(3): mov %rbx,%rcx
619c(3): mov %rbp,%rdi
619f(3): mov %rax,%rdx
61a2(5): mov $0x1,%esi
61a7(1): pop %rbx
61a8(1): pop %rbp
61a9(2): pop %r12
61ab(2): pop %r13
61ad(2): pop %r14
61af(2): pop %r15
61b1(2): xor %eax,%eax
61b3(5): jmp 0xffffb6ed(%rip)
61b8(8): nop 0x0(%rax,%rax,1)
61c0(4): mov 0x10(%rbx),%r13
61c4(4): mov 0x8(%rbx),%r12
61c8(7): lea 0x1dd7(%rip),%rsi
61cf(3): mov (%rbx),%rbx
61d2(5): mov $0x5,%edx
61d7(2): xor %edi,%edi
61d9(5): call 0xffffb487(%rip)
61de(4): add $0x28,%rsp
61e2(3): mov %r13,%r9
61e5(3): mov %r12,%r8
61e8(3): mov %rbx,%rcx
61eb(3): mov %rbp,%rdi
61ee(3): mov %rax,%rdx
61f1(1): pop %rbx
61f2(1): pop %rbp
61f3(2): pop %r12
61f5(2): pop %r13
61f7(2): pop %r14
61f9(2): pop %r15
61fb(5): mov $0x1,%esi
6200(2): xor %eax,%eax
6202(5): jmp 0xffffb69e(%rip)
6207(9): nop 0x0(%rax,%rax,1)
6210(7): lea 0x1ec1(%rip),%rsi
6217(5): mov $0x5,%edx
621c(2): xor %edi,%edi
621e(4): mov 0x18(%rbx),%r14
6222(4): mov 0x10(%rbx),%r13
6226(4): mov 0x8(%rbx),%r12
622a(3): mov (%rbx),%rbx
622d(5): call 0xffffb433(%rip)
6232(4): sub $0x8,%rsp
6236(2): push %r14
6238(3): mov %rax,%rdx
623b(3): mov %r13,%r9
623e(3): mov %r12,%r8
6241(3): mov %rbx,%rcx
6244(3): mov %rbp,%rdi
6247(5): mov $0x1,%esi
624c(2): xor %eax,%eax
624e(5): call 0xffffb652(%rip)
6253(1): pop %rax
6254(1): pop %rdx
6255(4): add $0x28,%rsp
6259(1): pop %rbx
625a(1): pop %rbp
625b(2): pop %r12
625d(2): pop %r13
625f(2): pop %r14
6261(2): pop %r15
6263(1): ret near (%rsp)
6264(4): nop 0x0(%rax)
6268(4): mov 0x20(%rbx),%r15
626c(7): lea 0x1e85(%rip),%rsi
6273(5): mov $0x5,%edx
6278(2): xor %edi,%edi
627a(4): mov 0x18(%rbx),%r14
627e(4): mov 0x10(%rbx),%r13
6282(4): mov 0x8(%rbx),%r12
6286(3): mov (%rbx),%rbx
6289(5): call 0xffffb3d7(%rip)
628e(2): push %r15
6290(2): jmp 0xffffffa6(%rip)
6292(6): nop 0x0(%rax,%rax,1)
6298(4): mov 0x8(%rbx),%r8
629c(4): mov 0x28(%rbx),%r12
62a0(7): lea 0x1e79(%rip),%rsi
62a7(4): mov 0x20(%rbx),%r15
62ab(4): mov 0x18(%rbx),%r14
62af(5): mov $0x5,%edx
62b4(4): mov 0x10(%rbx),%r13
62b8(2): xor %edi,%edi
62ba(3): mov (%rbx),%rbx
62bd(4): mov %r8,(%rsp)
62c1(5): call 0xffffb39f(%rip)
62c6(4): sub $0x8,%rsp
62ca(3): mov %r13,%r9
62cd(2): push %r12
62cf(2): push %r15
62d1(2): push %r14
62d3(5): mov 0x20(%rsp),%r8
62d8(3): mov %rbx,%rcx
62db(3): mov %rax,%rdx
62de(3): mov %rbp,%rdi
62e1(5): mov $0x1,%esi
62e6(2): xor %eax,%eax
62e8(5): call 0xffffb5b8(%rip)
62ed(4): add $0x20,%rsp
62f1(4): add $0x28,%rsp
62f5(1): pop %rbx
62f6(1): pop %rbp
62f7(2): pop %r12
62f9(2): pop %r13
62fb(2): pop %r14
62fd(2): pop %r15
62ff(1): ret near (%rsp)
6300(4): mov 0x10(%rbx),%r9
6304(4): mov 0x30(%rbx),%r13
6308(7): lea 0x1e39(%rip),%rsi
630f(4): mov 0x28(%rbx),%r12
6313(4): mov 0x20(%rbx),%r15
6317(5): mov $0x5,%edx
631c(4): mov 0x18(%rbx),%r14
6320(4): mov 0x8(%rbx),%r8
6324(2): xor %edi,%edi
6326(5): mov %r9,0x8(%rsp)
632b(3): mov (%rbx),%rbx
632e(4): mov %r8,(%rsp)
6332(5): call 0xffffb32e(%rip)
6337(2): push %r13
6339(2): push %r12
633b(2): push %r15
633d(2): push %r14
633f(5): mov 0x28(%rsp),%r9
6344(2): jmp 0xffffff8f(%rip)
6346(a): nop 0x0(%rax,%rax,1)
6350(4): mov 0x40(%rbx),%r10
6354(4): mov 0x38(%rbx),%r9
6358(5): mov $0x5,%edx
635d(4): mov 0x10(%rbx),%rax
6361(4): mov 0x8(%rbx),%r8
6365(7): lea 0x1e74(%rip),%rsi
636c(4): mov 0x30(%rbx),%r13
6370(4): mov 0x28(%rbx),%r12
6374(4): mov 0x20(%rbx),%r15
6378(4): mov 0x18(%rbx),%r14
637c(5): mov %r10,0x18(%rsp)
6381(5): mov %r9,0x10(%rsp)
6386(4): mov %rax,(%rsp)
638a(5): mov %r8,0x8(%rsp)
638f(3): mov (%rbx),%rbx
6392(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
63a0(3): xor %r9d,%r9d
63a3(4): cmp $0x0,(%r8)
63a7(2): jz 0x14(%rip)
63a9(7): nop 0x0(%rax)
63b0(4): add $0x1,%r9
63b4(5): cmp $0x0,0x0(%r8,%r9,8)
63b9(2): jnz 0xfffffff7(%rip)
63bb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
63c0(4): sub $0x68,%rsp
63c4(3): mov %r8,%r10
63c7(3): xor %r9d,%r9d
63ca(9): mov $0x28,%rax
63d3(5): mov %rax,0x58(%rsp)
63d8(2): xor %eax,%eax
63da(3): mov %rsp,%r8
63dd(3): nop (%rax)
63e0(3): mov (%r10),%eax
63e3(3): cmp $0x2f,%eax
63e6(2): jnbe 0x44(%rip)
63e8(3): mov %eax,%r11d
63eb(4): add 0x10(%r10),%r11
63ef(3): add $0x8,%eax
63f2(3): mov %eax,(%r10)
63f5(3): mov (%r11),%rax
63f8(3): test %rax,%rax
63fb(4): mov %rax,0x0(%r8,%r9,8)
63ff(2): jz 0xc(%rip)
6401(4): add $0x1,%r9
6405(4): cmp $0xa,%r9
6409(2): jnz 0xffffffd7(%rip)
640b(5): call 0xfffffb75(%rip)
6410(5): mov 0x58(%rsp),%rax
6415(9): xor $0x28,%rax
641e(2): jnz 0x7(%rip)
6420(4): add $0x68,%rsp
6424(1): ret near (%rsp)
6425(5): call 0xffffb26b(%rip)
642a(4): mov 0x8(%r10),%r11
642e(4): lea 0x8(%r11),%rax
6432(4): mov %rax,0x8(%r10)
6436(2): jmp 0xffffffbf(%rip)

"version_etc" :
6440(1): push %rbp
6441(1): push %rbx
6442(6): mov $0x20,%r10d
6448(3): xor %r11d,%r11d
644b(7): sub $0xb8,%rsp
6452(9): mov $0x28,%rax
645b(5): mov %rax,0x78(%rsp)
6460(2): xor %eax,%eax
6462(8): lea 0xd0(%rsp),%rax
646a(8): mov %r8,0xa0(%rsp)
6472(8): lea 0xd0(%rsp),%rbx
647a(5): lea 0x20(%rsp),%r8
647f(8): mov %r9,0xa8(%rsp)
6487(8): mov $0x20,0x8(%rsp)
648f(5): mov %rax,0x10(%rsp)
6494(8): lea 0x80(%rsp),%rax
649c(3): xor %r9d,%r9d
649f(5): mov %rax,0x18(%rsp)
64a4(3): mov %rax,%rbp
64a7(9): nop 0x0(%rax,%rax,1)
64b0(4): cmp $0x2f,%r10d
64b4(2): jnbe 0x58(%rip)
64b6(3): mov %r10d,%eax
64b9(6): mov $0x1,%r11d
64bf(4): add $0x8,%r10d
64c3(3): add %rbp,%rax
64c6(3): mov (%rax),%rax
64c9(3): test %rax,%rax
64cc(4): mov %rax,0x0(%r8,%r9,8)
64d0(2): jz 0xc(%rip)
64d2(4): add $0x1,%r9
64d6(4): cmp $0xa,%r9
64da(2): jnz 0xffffffd6(%rip)
64dc(3): test %r11b,%r11b
64df(2): jnz 0x26(%rip)
64e1(5): call 0xfffffa9f(%rip)
64e6(5): mov 0x78(%rsp),%rax
64eb(9): xor $0x28,%rax
64f4(2): jnz 0xc(%rip)
64f6(7): add $0xb8,%rsp
64fd(1): pop %rbx
64fe(1): pop %rbp
64ff(1): ret near (%rsp)
6500(5): call 0xffffb190(%rip)
6505(5): mov %r10d,0x8(%rsp)
650a(2): jmp 0xffffffd7(%rip)
650c(3): mov %rbx,%rax
650f(4): add $0x8,%rbx
6513(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6520(1): push %rbx
6521(7): lea 0x1a9a(%rip),%rsi
6528(5): mov $0x5,%edx
652d(2): xor %edi,%edi
652f(5): call 0xffffb131(%rip)
6534(7): lea 0x1a9c(%rip),%rdx
653b(3): mov %rax,%rsi
653e(5): mov $0x1,%edi
6543(2): xor %eax,%eax
6545(5): call 0xffffb2cb(%rip)
654a(7): lea 0x1a9c(%rip),%rsi
6551(5): mov $0x5,%edx
6556(2): xor %edi,%edi
6558(5): call 0xffffb108(%rip)
655d(7): lea 0xff4(%rip),%rcx
6564(7): lea 0x949(%rip),%rdx
656b(3): mov %rax,%rsi
656e(5): mov $0x1,%edi
6573(2): xor %eax,%eax
6575(5): call 0xffffb29b(%rip)
657a(7): mov 0x203b27(%rip),%rbx
6581(7): lea 0x1c98(%rip),%rsi
6588(2): xor %edi,%edi
658a(5): mov $0x5,%edx
658f(5): call 0xffffb0d1(%rip)
6594(3): mov %rbx,%rsi
6597(3): mov %rax,%rdi
659a(1): pop %rbx
659b(5): jmp 0xffffb1a5(%rip)

"xmalloc" :
65a0(1): push %rbx
65a1(3): mov %rdi,%rbx
65a4(5): call 0xffffb1ec(%rip)
65a9(3): test %rax,%rax
65ac(2): jnz 0x7(%rip)
65ae(3): test %rbx,%rbx
65b1(2): jnz 0x4(%rip)
65b3(1): pop %rbx
65b4(1): ret near (%rsp)
65b5(5): call 0x23b(%rip)

"xnmalloc" :
65c0(3): mov %rdi,%rax
65c3(3): mul %rax,%rsi,%rdx
65c6(3): mov %rax,%rdi
65c9(3): seto %al
65cc(3): test %rdi,%rdi
65cf(2): js 0xc(%rip)
65d1(3): movzx %al,%eax
65d4(3): test %rax,%rax
65d7(2): jnz 0x4(%rip)
65d9(2): jmp 0xffffffc7(%rip)
65db(4): sub $0x8,%rsp
65df(5): call 0x211(%rip)

"xrealloc" :
6600(3): test %rsi,%rsi
6603(1): push %rbx
6604(3): mov %rsi,%rbx
6607(2): jnz 0x7(%rip)
6609(3): test %rdi,%rdi
660c(2): jnz 0x1c(%rip)
660e(3): mov %rbx,%rsi
6611(5): call 0xffffb1cf(%rip)
6616(3): test %rax,%rax
6619(2): jnz 0x7(%rip)
661b(3): test %rbx,%rbx
661e(2): jnz 0x13(%rip)
6620(1): pop %rbx
6621(1): ret near (%rsp)
6622(6): nop 0x0(%rax,%rax,1)
6628(5): call 0xffffaf88(%rip)
662d(2): xor %eax,%eax
662f(1): pop %rbx
6630(1): ret near (%rsp)
6631(5): call 0x1bf(%rip)

"xnrealloc" :
6640(3): mov %rsi,%rax
6643(3): mul %rax,%rdx,%rdx
6646(3): mov %rax,%rsi
6649(3): seto %al
664c(3): test %rsi,%rsi
664f(2): js 0xc(%rip)
6651(3): movzx %al,%eax
6654(3): test %rax,%rax
6657(2): jnz 0x4(%rip)
6659(2): jmp 0xffffffa7(%rip)
665b(4): sub $0x8,%rsp
665f(5): call 0x191(%rip)

"x2nrealloc" :
6670(3): test %rdi,%rdi
6673(3): mov %rdx,%r9
6676(3): mov (%rsi),%rcx
6679(2): jz 0x37(%rip)
667b(2): xor %edx,%edx
667d(a): mov $0x6148914691236517204,%rax
6687(3): div %r9,%rax
668a(3): cmp %rcx,%rax
668d(2): jbe 0x3e(%rip)
668f(3): mov %rcx,%rax
6692(3): shr $0x1,%rax
6695(5): lea 0x1(%rax,%rcx,1),%rcx
669a(3): mov %rcx,(%rsi)
669d(4): imul %r9,%rcx
66a1(3): mov %rcx,%rsi
66a4(5): jmp 0xffffff5c(%rip)
66a9(7): nop 0x0(%rax)
66b0(3): test %rcx,%rcx
66b3(2): jz 0x25(%rip)
66b5(3): mov %rcx,%rax
66b8(3): mul %rax,%r9,%rdx
66bb(3): seto %dl
66be(3): test %rax,%rax
66c1(3): movzx %dl,%edx
66c4(2): js 0x7(%rip)
66c6(3): test %rdx,%rdx
66c9(2): jz 0xffffffd1(%rip)
66cb(4): sub $0x8,%rsp
66cf(5): call 0x121(%rip)
66d4(4): nop 0x0(%rax)
66d8(2): xor %edx,%edx
66da(5): mov $0x80,%eax
66df(3): xor %r8d,%r8d
66e2(3): div %r9,%rax
66e5(3): test %rax,%rax
66e8(4): setz %r8b
66ec(4): lea 0x0(%r8,%rax,1),%rcx
66f0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6700(3): test %rdi,%rdi
6703(3): mov (%rsi),%rax
6706(2): jz 0x2a(%rip)
6708(a): mov $0x6148914691236517203,%rdx
6712(3): cmp %rdx,%rax
6715(2): jnbe 0x2c(%rip)
6717(3): mov %rax,%rdx
671a(3): shr $0x1,%rdx
671d(5): lea 0x1(%rdx,%rax,1),%rax
6722(3): mov %rax,(%rsi)
6725(3): mov %rax,%rsi
6728(5): jmp 0xfffffed8(%rip)
672d(3): nop (%rax)
6730(3): test %rax,%rax
6733(5): mov $0x80,%edx
6738(4): cmove %rdx,%rax
673c(3): test %rax,%rax
673f(2): jns 0xffffffe3(%rip)
6741(4): sub $0x8,%rsp
6745(5): call 0xab(%rip)

"xzalloc" :
6750(1): push %rbx
6751(3): mov %rdi,%rbx
6754(5): call 0xfffffe4c(%rip)
6759(3): mov %rbx,%rdx
675c(2): xor %esi,%esi
675e(3): mov %rax,%rdi
6761(1): pop %rbx
6762(5): jmp 0xffffaf9e(%rip)

"xcalloc" :
6770(3): mov %rdi,%rax
6773(4): sub $0x8,%rsp
6777(3): mul %rax,%rsi,%rdx
677a(3): seto %dl
677d(3): test %rax,%rax
6780(2): js 0x19(%rip)
6782(3): movzx %dl,%edx
6785(3): test %rdx,%rdx
6788(2): jnz 0x11(%rip)
678a(5): call 0xffffafc6(%rip)
678f(3): test %rax,%rax
6792(2): jz 0x7(%rip)
6794(4): add $0x8,%rsp
6798(1): ret near (%rsp)
6799(5): call 0x57(%rip)

"xmemdup" :
67a0(1): push %rbp
67a1(1): push %rbx
67a2(3): mov %rdi,%rbp
67a5(3): mov %rsi,%rdi
67a8(3): mov %rsi,%rbx
67ab(4): sub $0x8,%rsp
67af(5): call 0xfffffdf1(%rip)
67b4(4): add $0x8,%rsp
67b8(3): mov %rbx,%rdx
67bb(3): mov %rbp,%rsi
67be(1): pop %rbx
67bf(1): pop %rbp
67c0(3): mov %rax,%rdi
67c3(5): jmp 0xffffafad(%rip)

"xstrdup" :
67d0(1): push %rbx
67d1(3): mov %rdi,%rbx
67d4(5): call 0xffffaeac(%rip)
67d9(3): mov %rbx,%rdi
67dc(4): lea 0x1(%rax),%rsi
67e0(1): pop %rbx
67e1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
67f0(7): lea 0x1ad8(%rip),%rsi
67f7(4): sub $0x8,%rsp
67fb(5): mov $0x5,%edx
6800(2): xor %edi,%edi
6802(5): call 0xffffae5e(%rip)
6807(6): mov 0x203813(%rip),%edi
680d(7): lea 0x11e1(%rip),%rdx
6814(3): mov %rax,%rcx
6817(2): xor %esi,%esi
6819(2): xor %eax,%eax
681b(5): call 0xffffb015(%rip)
6820(5): call 0xffffada0(%rip)

"rpl_fclose" :
6830(2): push %r12
6832(1): push %rbp
6833(1): push %rbx
6834(3): mov %rdi,%rbx
6837(5): call 0xffffaf49(%rip)
683c(2): test %eax,%eax
683e(3): mov %rbx,%rdi
6841(2): js 0x56(%rip)
6843(5): call 0xffffaf7d(%rip)
6848(2): test %eax,%eax
684a(2): jnz 0x2e(%rip)
684c(3): mov %rbx,%rdi
684f(5): call 0x2e1(%rip)
6854(2): test %eax,%eax
6856(2): jz 0x3e(%rip)
6858(5): call 0xffffad78(%rip)
685d(3): mov (%rax),%r12d
6860(3): mov %rbx,%rdi
6863(3): mov %rax,%rbp
6866(5): call 0xffffadda(%rip)
686b(3): test %r12d,%r12d
686e(2): jnz 0x32(%rip)
6870(1): pop %rbx
6871(1): pop %rbp
6872(2): pop %r12
6874(1): ret near (%rsp)
6875(3): nop (%rax)
6878(3): mov %rbx,%rdi
687b(5): call 0xffffaf05(%rip)
6880(2): xor %esi,%esi
6882(5): mov $0x1,%edx
6887(2): mov %eax,%edi
6889(5): call 0xffffae67(%rip)
688e(4): cmp $0xffffffff,%rax
6892(2): jnz 0xffffffba(%rip)
6894(3): mov %rbx,%rdi
6897(1): pop %rbx
6898(1): pop %rbp
6899(2): pop %r12
689b(5): jmp 0xffffada5(%rip)
68a0(4): mov %r12d,0x0(%rbp)
68a4(5): mov $0xffffffff,%eax
68a9(2): jmp 0xffffffc7(%rip)

"rpl_fcntl" :
68b0(2): push %r12
68b2(1): push %rbp
68b3(2): mov %edi,%ebp
68b5(1): push %rbx
68b6(4): sub $0x50,%rsp
68ba(9): mov $0x28,%rax
68c3(5): mov %rax,0x18(%rsp)
68c8(2): xor %eax,%eax
68ca(5): lea 0x70(%rsp),%rax
68cf(2): test %esi,%esi
68d1(5): mov %rdx,0x30(%rsp)
68d6(5): mov %rcx,0x38(%rsp)
68db(5): mov %r8,0x40(%rsp)
68e0(5): mov %rax,0x8(%rsp)
68e5(5): lea 0x20(%rsp),%rax
68ea(5): mov %r9,0x48(%rsp)
68ef(7): mov $0x10,(%rsp)
68f6(5): mov %rax,0x10(%rsp)
68fb(6): jz 0x207(%rip)
6901(6): cmp $0x406,%esi
6907(2): jnz 0x49(%rip)
6909(5): mov 0x10(%rsp),%rax
690e(7): cmp $0x0,0x203963(%rip)
6915(7): mov $0x18,(%rsp)
691c(4): mov 0x10(%rax),%r12d
6920(3): mov %r12d,%edx
6923(6): js 0x130(%rip)
6929(2): xor %eax,%eax
692b(5): mov $0x406,%esi
6930(5): call 0xfffface0(%rip)
6935(2): test %eax,%eax
6937(2): mov %eax,%ebx
6939(6): js 0x18f(%rip)
693f(a): mov $0x1,0x20392f(%rip)
6949(2): jmp 0x47(%rip)
694b(5): nop 0x0(%rax,%rax,1)
6950(3): cmp $0xb,%esi
6953(2): jz 0x2d(%rip)
6955(2): jnle 0x5b(%rip)
6957(3): cmp $0x4,%esi
695a(6): jz 0xd6(%rip)
6960(6): jnle 0xc0(%rip)
6966(3): cmp $0x2,%esi
6969(6): jz 0xc7(%rip)
696f(2): jnle 0x11(%rip)
6971(3): cmp $0x1,%esi
6974(2): jnz 0x64(%rip)
6976(a): nop 0x0(%rax,%rax,1)
6980(2): mov %ebp,%edi
6982(2): xor %eax,%eax
6984(5): call 0xffffac8c(%rip)
6989(2): mov %eax,%ebx
698b(5): nop 0x0(%rax,%rax,1)
6990(5): mov 0x18(%rsp),%rcx
6995(9): xor $0x28,%rcx
699e(2): mov %ebx,%eax
69a0(6): jnz 0x15d(%rip)
69a6(4): add $0x50,%rsp
69aa(1): pop %rbx
69ab(1): pop %rbp
69ac(2): pop %r12
69ae(1): ret near (%rsp)
69af(1): nop 
69b0(6): cmp $0x407,%esi
69b6(2): jnle 0x4a(%rip)
69b8(6): cmp $0x406,%esi
69be(2): jnl 0x72(%rip)
69c0(6): cmp $0x401,%esi
69c6(2): jz 0xffffffba(%rip)
69c8(6): cmp $0x402,%esi
69ce(2): jz 0x62(%rip)
69d0(6): cmp $0x400,%esi
69d6(2): jz 0x5a(%rip)
69d8(3): mov (%rsp),%eax
69db(3): cmp $0x2f,%eax
69de(6): jnbe 0x13c(%rip)
69e4(5): add 0x10(%rsp),%rax
69e9(3): mov (%rax),%rdx
69ec(2): mov %ebp,%edi
69ee(2): xor %eax,%eax
69f0(5): call 0xffffac20(%rip)
69f5(2): mov %eax,%ebx
69f7(2): jmp 0xffffff99(%rip)
69f9(7): nop 0x0(%rax)
6a00(6): cmp $0x409,%esi
6a06(2): jz 0x2a(%rip)
6a08(6): jl 0xffffff78(%rip)
6a0e(6): cmp $0x40a,%esi
6a14(2): jnz 0xffffffc4(%rip)
6a16(5): jmp 0xffffff6a(%rip)
6a1b(5): nop 0x0(%rax,%rax,1)
6a20(3): cmp $0x9,%esi
6a23(6): jz 0xffffff5d(%rip)
6a29(2): jnle 0x7(%rip)
6a2b(3): cmp $0x8,%esi
6a2e(2): jnz 0xffffffaa(%rip)
6a30(3): mov (%rsp),%eax
6a33(3): cmp $0x2f,%eax
6a36(6): jnbe 0xee(%rip)
6a3c(5): add 0x10(%rsp),%rax
6a41(2): mov (%rax),%edx
6a43(2): mov %ebp,%edi
6a45(2): xor %eax,%eax
6a47(5): call 0xffffabc9(%rip)
6a4c(2): mov %eax,%ebx
6a4e(5): jmp 0xffffff42(%rip)
6a53(2): xor %esi,%esi
6a55(2): xor %eax,%eax
6a57(5): call 0xffffabb9(%rip)
6a5c(2): test %eax,%eax
6a5e(2): mov %eax,%ebx
6a60(6): js 0xffffff30(%rip)
6a66(7): cmp $0xff,0x20380b(%rip)
6a6d(6): jnz 0xffffff23(%rip)
6a73(2): xor %eax,%eax
6a75(5): mov $0x1,%esi
6a7a(2): mov %ebx,%edi
6a7c(5): call 0xffffab94(%rip)
6a81(2): test %eax,%eax
6a83(2): js 0x1e(%rip)
6a85(3): or $0x1,%eax
6a88(5): mov $0x2,%esi
6a8d(2): mov %ebx,%edi
6a8f(2): mov %eax,%edx
6a91(2): xor %eax,%eax
6a93(5): call 0xffffab7d(%rip)
6a98(3): cmp $0xff,%eax
6a9b(6): jnz 0xfffffef5(%rip)
6aa1(5): call 0xffffab2f(%rip)
6aa6(3): mov (%rax),%r12d
6aa9(3): mov %rax,%rbp
6aac(2): mov %ebx,%edi
6aae(5): call 0xffffac62(%rip)
6ab3(5): mov $0xffffffff,%ebx
6ab8(4): mov %r12d,0x0(%rbp)
6abc(5): jmp 0xfffffed4(%rip)
6ac1(7): nop 0x0(%rax)
6ac8(5): call 0xffffab08(%rip)
6acd(3): cmp $0x16,(%rax)
6ad0(6): jnz 0xfffffe6f(%rip)
6ad6(2): xor %esi,%esi
6ad8(2): xor %eax,%eax
6ada(3): mov %r12d,%edx
6add(2): mov %ebp,%edi
6adf(5): call 0xffffab31(%rip)
6ae4(2): test %eax,%eax
6ae6(2): mov %eax,%ebx
6ae8(6): js 0xfffffea8(%rip)
6aee(a): mov $0xffffffff,0x203780(%rip)
6af8(5): jmp 0xffffff7b(%rip)
6afd(5): call 0xffffab93(%rip)
6b02(5): mov 0x10(%rsp),%rax
6b07(2): xor %esi,%esi
6b09(3): mov 0x10(%rax),%edx
6b0c(2): xor %eax,%eax
6b0e(5): call 0xffffab02(%rip)
6b13(2): mov %eax,%ebx
6b15(5): jmp 0xfffffe7b(%rip)
6b1a(5): mov 0x8(%rsp),%rax
6b1f(5): jmp 0xfffffeca(%rip)
6b24(5): mov 0x8(%rsp),%rax
6b29(5): jmp 0xffffff18(%rip)

"rpl_fflush" :
6b30(3): test %rdi,%rdi
6b33(1): push %rbx
6b34(3): mov %rdi,%rbx
6b37(2): jz 0x13(%rip)
6b39(5): call 0xffffac87(%rip)
6b3e(2): test %eax,%eax
6b40(2): jz 0xa(%rip)
6b42(6): test $0x100,(%rbx)
6b48(2): jnz 0x10(%rip)
6b4a(3): mov %rbx,%rdi
6b4d(1): pop %rbx
6b4e(5): jmp 0xffffac52(%rip)
6b53(5): nop 0x0(%rax,%rax,1)
6b58(3): mov %rbx,%rdi
6b5b(5): mov $0x1,%edx
6b60(2): xor %esi,%esi
6b62(5): call 0xe(%rip)
6b67(3): mov %rbx,%rdi
6b6a(1): pop %rbx
6b6b(5): jmp 0xffffac35(%rip)

"rpl_fseeko" :
6b70(4): mov 0x8(%rdi),%rax
6b74(4): cmp %rax,0x10(%rdi)
6b78(2): jz 0x8(%rip)
6b7a(5): jmp 0xffffacc6(%rip)
6b7f(1): nop 
6b80(4): mov 0x20(%rdi),%rax
6b84(4): cmp %rax,0x28(%rdi)
6b88(2): jnz 0xfffffff2(%rip)
6b8a(5): cmp $0x0,0x48(%rdi)
6b8f(2): jnz 0xffffffeb(%rip)
6b91(2): push %r12
6b93(1): push %rbp
6b94(3): mov %edx,%r12d
6b97(1): push %rbx
6b98(3): mov %rsi,%rbp
6b9b(3): mov %rdi,%rbx
6b9e(5): call 0xffffabe2(%rip)
6ba3(3): mov %r12d,%edx
6ba6(3): mov %rbp,%rsi
6ba9(2): mov %eax,%edi
6bab(5): call 0xffffab45(%rip)
6bb0(4): cmp $0xffffffff,%rax
6bb4(2): jz 0xe(%rip)
6bb6(3): and $0xef,(%rbx)
6bb9(7): mov %rax,0x90(%rbx)
6bc0(2): xor %eax,%eax
6bc2(1): pop %rbx
6bc3(1): pop %rbp
6bc4(2): pop %r12
6bc6(1): ret near (%rsp)

"rpl_mbrtowc" :
6bd0(2): push %r13
6bd2(2): push %r12
6bd4(3): mov %rsi,%r13
6bd7(1): push %rbp
6bd8(1): push %rbx
6bd9(3): mov %rdi,%rbx
6bdc(3): mov %rdx,%r12
6bdf(4): sub $0x18,%rsp
6be3(9): mov $0x28,%rax
6bec(5): mov %rax,0x8(%rsp)
6bf1(2): xor %eax,%eax
6bf3(5): lea 0x4(%rsp),%rax
6bf8(3): test %rdi,%rdi
6bfb(4): cmove %rax,%rbx
6bff(3): mov %rbx,%rdi
6c02(5): call 0xffffaaae(%rip)
6c07(4): cmp $0xfffffffd,%rax
6c0b(3): mov %rax,%rbp
6c0e(2): jbe 0x22(%rip)
6c10(3): test %r12,%r12
6c13(2): jz 0x1d(%rip)
6c15(2): xor %edi,%edi
6c17(5): call 0xc9(%rip)
6c1c(2): test %al,%al
6c1e(2): jnz 0x12(%rip)
6c20(5): movzx 0x0(%r13),%eax
6c25(5): mov $0x1,%ebp
6c2a(2): mov %eax,(%rbx)
6c2c(4): nop 0x0(%rax)
6c30(5): mov 0x8(%rsp),%rdx
6c35(9): xor $0x28,%rdx
6c3e(3): mov %rbp,%rax
6c41(2): jnz 0xd(%rip)
6c43(4): add $0x18,%rsp
6c47(1): pop %rbx
6c48(1): pop %rbp
6c49(2): pop %r12
6c4b(2): pop %r13
6c4d(1): ret near (%rsp)
6c4e(5): call 0xffffaa42(%rip)

"close_stream" :
6c60(2): push %r12
6c62(1): push %rbp
6c63(3): mov %rdi,%rbp
6c66(1): push %rbx
6c67(5): call 0xffffa999(%rip)
6c6c(3): mov 0x0(%rbp),%ebx
6c6f(3): mov %rbp,%rdi
6c72(3): mov %rax,%r12
6c75(5): call 0xfffffbbb(%rip)
6c7a(3): and $0x20,%ebx
6c7d(2): test %ebx,%ebx
6c7f(2): jnz 0x19(%rip)
6c81(2): test %eax,%eax
6c83(2): jz 0xc(%rip)
6c85(3): test %r12,%r12
6c88(5): mov $0xffffffff,%eax
6c8d(2): jz 0x3b(%rip)
6c8f(1): pop %rbx
6c90(1): pop %rbp
6c91(2): pop %r12
6c93(1): ret near (%rsp)
6c94(4): nop 0x0(%rax)
6c98(2): test %eax,%eax
6c9a(2): jnz 0x1e(%rip)
6c9c(5): call 0xffffa934(%rip)
6ca1(6): mov $0x0,(%rax)
6ca7(5): mov $0xffffffff,%eax
6cac(1): pop %rbx
6cad(1): pop %rbp
6cae(2): pop %r12
6cb0(1): ret near (%rsp)
6cb1(7): nop 0x0(%rax)
6cb8(1): pop %rbx
6cb9(5): mov $0xffffffff,%eax
6cbe(1): pop %rbp
6cbf(2): pop %r12
6cc1(1): ret near (%rsp)
6cc2(6): nop 0x0(%rax,%rax,1)
6cc8(5): call 0xffffa908(%rip)
6ccd(3): cmp $0x9,(%rax)
6cd0(1): pop %rbx
6cd1(1): pop %rbp
6cd2(2): pop %r12
6cd4(3): setnz %al
6cd7(3): movzx %al,%eax
6cda(2): neg %eax
6cdc(1): ret near (%rsp)

"hard_locale" :
6ce0(4): sub $0x8,%rsp
6ce4(2): xor %esi,%esi
6ce6(5): call 0xffffab1a(%rip)
6ceb(3): mov %rax,%rdx
6cee(5): mov $0x1,%eax
6cf3(3): test %rdx,%rdx
6cf6(2): jz 0x1f(%rip)
6cf8(7): lea 0x15e1(%rip),%rdi
6cff(5): mov $0x2,%ecx
6d04(3): mov %rdx,%rsi
6d07(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6d09(3): setnbe %cl
6d0c(3): sbb $0x0,%cl
6d0f(2): xor %eax,%eax
6d11(2): test %cl,%cl
6d13(2): jnz 0xd(%rip)
6d15(4): add $0x8,%rsp
6d19(1): ret near (%rsp)
6d1a(6): nop 0x0(%rax,%rax,1)
6d20(7): lea 0x15bb(%rip),%rdi
6d27(5): mov $0x6,%ecx
6d2c(3): mov %rdx,%rsi
6d2f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6d31(3): setnbe %al
6d34(2): sbb $0x0,%al
6d36(2): test %al,%al
6d38(3): setnz %al
6d3b(4): add $0x8,%rsp
6d3f(1): ret near (%rsp)

"locale_charset" :
6d40(4): sub $0x8,%rsp
6d44(5): mov $0xe,%edi
6d49(5): call 0xffffaa67(%rip)
6d4e(3): test %rax,%rax
6d51(2): jz 0x1f(%rip)
6d53(3): cmp $0x0,(%rax)
6d56(7): lea 0x158b(%rip),%rdx
6d5d(4): cmove %rdx,%rax
6d61(4): add $0x8,%rsp
6d65(1): ret near (%rsp)
6d66(a): nop 0x0(%rax,%rax,1)
6d70(7): lea 0x1571(%rip),%rax
6d77(4): add $0x8,%rsp
6d7b(1): ret near (%rsp)

"__libc_csu_init" :
6d80(2): push %r15
6d82(2): push %r14
6d84(3): mov %rdx,%r15
6d87(2): push %r13
6d89(2): push %r12
6d8b(7): lea 0x202c7e(%rip),%r12
6d92(1): push %rbp
6d93(7): lea 0x202c7e(%rip),%rbp
6d9a(1): push %rbx
6d9b(3): mov %edi,%r13d
6d9e(3): mov %rsi,%r14
6da1(3): sub %r12,%rbp
6da4(4): sub $0x8,%rsp
6da8(4): sar $0x3,%rbp
6dac(5): call 0xffffa7d4(%rip)
6db1(3): test %rbp,%rbp
6db4(2): jz 0x22(%rip)
6db6(2): xor %ebx,%ebx
6db8(8): nop 0x0(%rax,%rax,1)
6dc0(3): mov %r15,%rdx
6dc3(3): mov %r14,%rsi
6dc6(3): mov %r13d,%edi
6dc9(4): call 0x0(%r12,%rbx,8)
6dcd(4): add $0x1,%rbx
6dd1(3): cmp %rbx,%rbp
6dd4(2): jnz 0xffffffec(%rip)
6dd6(4): add $0x8,%rsp
6dda(1): pop %rbx
6ddb(1): pop %rbp
6ddc(2): pop %r12
6dde(2): pop %r13
6de0(2): pop %r14
6de2(2): pop %r15
6de4(1): ret near (%rsp)

"atexit" :
6e00(7): mov 0x203201(%rip),%rdx
6e07(2): xor %esi,%esi
6e09(5): jmp 0xffffaa67(%rip)

"_fini" :
6e10(4): sub $0x8,%rsp
6e14(4): add $0x8,%rsp
6e18(1): ret near (%rsp)

