
"free@plt" :
1380(6): jmp 0x205aba(%rip)
1386(5): push $0x0

"abort@plt" :
1390(6): jmp 0x205ab2(%rip)
1396(5): push $0x1

"__errno_location@plt" :
13a0(6): jmp 0x205aaa(%rip)
13a6(5): push $0x2

"strncmp@plt" :
13b0(6): jmp 0x205aa2(%rip)
13b6(5): push $0x3

"_exit@plt" :
13c0(6): jmp 0x205a9a(%rip)
13c6(5): push $0x4

"__fpending@plt" :
13d0(6): jmp 0x205a92(%rip)
13d6(5): push $0x5

"textdomain@plt" :
13e0(6): jmp 0x205a8a(%rip)
13e6(5): push $0x6

"fclose@plt" :
13f0(6): jmp 0x205a82(%rip)
13f6(5): push $0x7

"getpwuid@plt" :
1400(6): jmp 0x205a7a(%rip)
1406(5): push $0x8

"bindtextdomain@plt" :
1410(6): jmp 0x205a72(%rip)
1416(5): push $0x9

"dcgettext@plt" :
1420(6): jmp 0x205a6a(%rip)
1426(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1430(6): jmp 0x205a62(%rip)
1436(5): push $0xb

"strlen@plt" :
1440(6): jmp 0x205a5a(%rip)
1446(5): push $0xc

"__stack_chk_fail@plt" :
1450(6): jmp 0x205a52(%rip)
1456(5): push $0xd

"getuid@plt" :
1460(6): jmp 0x205a4a(%rip)
1466(5): push $0xe

"getopt_long@plt" :
1470(6): jmp 0x205a42(%rip)
1476(5): push $0xf

"mbrtowc@plt" :
1480(6): jmp 0x205a3a(%rip)
1486(5): push $0x10

"getgrgid@plt" :
1490(6): jmp 0x205a32(%rip)
1496(5): push $0x11

"__overflow@plt" :
14a0(6): jmp 0x205a2a(%rip)
14a6(5): push $0x12

"strrchr@plt" :
14b0(6): jmp 0x205a22(%rip)
14b6(5): push $0x13

"lseek@plt" :
14c0(6): jmp 0x205a1a(%rip)
14c6(5): push $0x14

"memset@plt" :
14d0(6): jmp 0x205a12(%rip)
14d6(5): push $0x15

"memcmp@plt" :
14e0(6): jmp 0x205a0a(%rip)
14e6(5): push $0x16

"fputs_unlocked@plt" :
14f0(6): jmp 0x205a02(%rip)
14f6(5): push $0x17

"calloc@plt" :
1500(6): jmp 0x2059fa(%rip)
1506(5): push $0x18

"getpwnam@plt" :
1510(6): jmp 0x2059f2(%rip)
1516(5): push $0x19

"memcpy@plt" :
1520(6): jmp 0x2059ea(%rip)
1526(5): push $0x1a

"fileno@plt" :
1530(6): jmp 0x2059e2(%rip)
1536(5): push $0x1b

"getgid@plt" :
1540(6): jmp 0x2059da(%rip)
1546(5): push $0x1c

"getgroups@plt" :
1550(6): jmp 0x2059d2(%rip)
1556(5): push $0x1d

"malloc@plt" :
1560(6): jmp 0x2059ca(%rip)
1566(5): push $0x1e

"fflush@plt" :
1570(6): jmp 0x2059c2(%rip)
1576(5): push $0x1f

"nl_langinfo@plt" :
1580(6): jmp 0x2059ba(%rip)
1586(5): push $0x20

"getegid@plt" :
1590(6): jmp 0x2059b2(%rip)
1596(5): push $0x21

"__freading@plt" :
15a0(6): jmp 0x2059aa(%rip)
15a6(5): push $0x22

"realloc@plt" :
15b0(6): jmp 0x2059a2(%rip)
15b6(5): push $0x23

"setlocale@plt" :
15c0(6): jmp 0x20599a(%rip)
15c6(5): push $0x24

"__printf_chk@plt" :
15d0(6): jmp 0x205992(%rip)
15d6(5): push $0x25

"error@plt" :
15e0(6): jmp 0x20598a(%rip)
15e6(5): push $0x26

"getgrouplist@plt" :
15f0(6): jmp 0x205982(%rip)
15f6(5): push $0x27

"fseeko@plt" :
1600(6): jmp 0x20597a(%rip)
1606(5): push $0x28

"__cxa_atexit@plt" :
1610(6): jmp 0x205972(%rip)
1616(5): push $0x29

"exit@plt" :
1620(6): jmp 0x20596a(%rip)
1626(5): push $0x2a

"fwrite@plt" :
1630(6): jmp 0x205962(%rip)
1636(5): push $0x2b

"__fprintf_chk@plt" :
1640(6): jmp 0x20595a(%rip)
1646(5): push $0x2c

"mbsinit@plt" :
1650(6): jmp 0x205952(%rip)
1656(5): push $0x2d

"iswprint@plt" :
1660(6): jmp 0x20594a(%rip)
1666(5): push $0x2e

"__ctype_b_loc@plt" :
1670(6): jmp 0x205942(%rip)
1676(5): push $0x2f

".plt.got" :
1680(6): jmp 0x20595a(%rip)
1686(2): nop 

"_init" :
1358(4): sub $0x8,%rsp
135c(7): mov 0x205c6d(%rip),%rax
1363(3): test %rax,%rax
1366(2): jz 0x4(%rip)
1368(2): call %rax
136a(4): add $0x8,%rsp
136e(1): ret near (%rsp)

"main" :
1690(2): push %r15
1692(2): push %r14
1694(2): push %r13
1696(2): push %r12
1698(3): mov %edi,%r12d
169b(1): push %rbp
169c(1): push %rbx
169d(3): mov %rsi,%rbx
16a0(4): sub $0x8,%rsp
16a4(3): mov (%rsi),%rdi
16a7(5): call 0xb39(%rip)
16ac(7): lea 0x40ae(%rip),%rsi
16b3(5): mov $0x6,%edi
16b8(5): call 0xffffff08(%rip)
16bd(7): lea 0x37ea(%rip),%rsi
16c4(7): lea 0x37ba(%rip),%rdi
16cb(5): call 0xfffffd45(%rip)
16d0(7): lea 0x37ae(%rip),%rdi
16d7(5): call 0xfffffd09(%rip)
16dc(7): lea 0x9fd(%rip),%rdi
16e3(5): call 0x36ed(%rip)
16e8(7): lea 0x205491(%rip),%rcx
16ef(7): lea 0x406b(%rip),%rdx
16f6(3): xor %r8d,%r8d
16f9(3): mov %rbx,%rsi
16fc(3): mov %r12d,%edi
16ff(5): call 0xfffffd71(%rip)
1704(3): cmp $0xff,%eax
1707(2): jz 0x4b(%rip)
1709(5): cmp $0xffffff7d,%eax
170e(6): jnz 0x27f(%rip)
1714(4): sub $0x8,%rsp
1718(7): mov 0x205969(%rip),%rdi
171f(7): mov 0x2058ea(%rip),%rcx
1726(2): push $0x0
1728(7): lea 0x3797(%rip),%r9
172f(7): lea 0x379f(%rip),%r8
1736(7): lea 0x3744(%rip),%rdx
173d(7): lea 0x36c0(%rip),%rsi
1744(2): xor %eax,%eax
1746(5): call 0x2c8a(%rip)
174b(2): xor %edi,%edi
174d(5): call 0xfffffed3(%rip)
1752(6): mov 0x205938(%rip),%eax
1758(3): cmp %r12d,%eax
175b(6): jz 0xfd(%rip)
1761(5): mov $0x1,%ebp
1766(7): lea 0x37ca(%rip),%r13
176d(6): jl 0x9c(%rip)
1773(5): jmp 0x166(%rip)
1778(8): nop 0x0(%rax,%rax,1)
1780(4): mov 0x14(%rax),%r15d
1784(4): mov 0x10(%rax),%r14d
1788(3): mov %r13,%rsi
178b(7): movsxd 0x2058fe(%rip),%rax
1792(5): mov $0x1,%edi
1797(4): mov 0x0(%rbx,%rax,8),%rdx
179b(2): xor %eax,%eax
179d(5): call 0xfffffe33(%rip)
17a2(7): movsxd 0x2058e7(%rip),%rax
17a9(6): mov $0x20,%r9d
17af(6): mov $0x1,%r8d
17b5(3): mov %r15d,%ecx
17b8(3): mov %r15d,%edx
17bb(3): mov %r14d,%esi
17be(4): mov 0x0(%rbx,%rax,8),%rdi
17c2(5): call 0x6ce(%rip)
17c7(7): mov 0x2058ba(%rip),%rdi
17ce(2): test %al,%al
17d0(5): mov $0x0,%eax
17d5(3): cmove %eax,%ebp
17d8(4): mov 0x28(%rdi),%rax
17dc(4): cmp 0x30(%rdi),%rax
17e0(6): jnb 0x10c(%rip)
17e6(4): lea 0x1(%rax),%rdx
17ea(4): mov %rdx,0x28(%rdi)
17ee(3): mov $0xa,(%rax)
17f1(6): mov 0x205899(%rip),%eax
17f7(3): add $0x1,%eax
17fa(3): cmp %r12d,%eax
17fd(6): mov %eax,0x20588d(%rip)
1803(6): jnl 0xd6(%rip)
1809(2): cwde 
180b(4): mov 0x0(%rbx,%rax,8),%rdi
180f(5): call 0xfffffd01(%rip)
1814(3): test %rax,%rax
1817(6): jnz 0xffffff69(%rip)
181d(7): movsxd 0x20586c(%rip),%rax
1824(4): mov 0x0(%rbx,%rax,8),%rdi
1828(5): call 0x26c8(%rip)
182d(7): lea 0x36f2(%rip),%rsi
1834(3): mov %rax,%rbp
1837(5): mov $0x5,%edx
183c(2): xor %edi,%edi
183e(5): call 0xfffffbe2(%rip)
1843(3): mov %rbp,%rcx
1846(3): mov %rax,%rdx
1849(2): xor %esi,%esi
184b(2): xor %edi,%edi
184d(2): xor %eax,%eax
184f(2): xor %ebp,%ebp
1851(5): call 0xfffffd8f(%rip)
1856(2): jmp 0xffffff9b(%rip)
1858(5): call 0xfffffb48(%rip)
185d(6): mov $0x0,(%rax)
1863(3): mov %rax,%rbx
1866(5): call 0xfffffbfa(%rip)
186b(3): cmp $0xff,%eax
186e(2): mov %eax,%ebp
1870(6): jz 0xb4(%rip)
1876(6): mov $0x0,(%rbx)
187c(5): call 0xfffffd14(%rip)
1881(3): cmp $0xff,%eax
1884(3): mov %eax,%r12d
1887(2): jz 0x74(%rip)
1889(6): mov $0x0,(%rbx)
188f(5): call 0xfffffcb1(%rip)
1894(3): cmp $0xff,%eax
1897(6): jz 0xba(%rip)
189d(2): xor %edi,%edi
189f(2): mov %ebp,%esi
18a1(6): mov $0x20,%r9d
18a7(6): mov $0x1,%r8d
18ad(3): mov %r12d,%ecx
18b0(2): mov %eax,%edx
18b2(5): call 0x5de(%rip)
18b7(7): mov 0x2057ca(%rip),%rdi
18be(2): mov %eax,%ebp
18c0(4): mov 0x28(%rdi),%rax
18c4(4): cmp 0x30(%rdi),%rax
18c8(6): jnb 0xb6(%rip)
18ce(4): lea 0x1(%rax),%rdx
18d2(4): mov %rdx,0x28(%rdi)
18d6(3): mov $0xa,(%rax)
18d9(3): xor $0x1,%ebp
18dc(1): pop %rdx
18dd(4): movzx %bpl,%eax
18e1(1): pop %rbx
18e2(1): pop %rbp
18e3(2): pop %r12
18e5(2): pop %r13
18e7(2): pop %r14
18e9(2): pop %r15
18eb(1): ret near (%rsp)
18ec(5): mov $0xa,%esi
18f1(5): call 0xfffffbaf(%rip)
18f6(5): jmp 0xfffffefb(%rip)
18fb(3): cmp $0x0,(%rbx)
18fe(2): jz 0xffffff8b(%rip)
1900(7): lea 0x35f2(%rip),%rsi
1907(5): mov $0x5,%edx
190c(2): xor %edi,%edi
190e(5): call 0xfffffb12(%rip)
1913(2): mov (%rbx),%esi
1915(3): mov %rax,%rdx
1918(5): mov $0x1,%edi
191d(2): xor %eax,%eax
191f(5): call 0xfffffcc1(%rip)
1924(3): cmp $0x0,(%rbx)
1927(6): jz 0xffffff4f(%rip)
192d(7): lea 0x35b1(%rip),%rsi
1934(5): mov $0x5,%edx
1939(2): xor %edi,%edi
193b(5): call 0xfffffae5(%rip)
1940(2): mov (%rbx),%esi
1942(3): mov %rax,%rdx
1945(5): mov $0x1,%edi
194a(2): xor %eax,%eax
194c(5): call 0xfffffc94(%rip)
1951(3): cmp $0x0,(%rbx)
1954(6): jz 0xffffff49(%rip)
195a(7): lea 0x35b1(%rip),%rsi
1961(5): mov $0x5,%edx
1966(2): xor %edi,%edi
1968(5): call 0xfffffab8(%rip)
196d(2): mov (%rbx),%esi
196f(3): mov %rax,%rdx
1972(5): mov $0x1,%edi
1977(2): xor %eax,%eax
1979(5): call 0xfffffc67(%rip)
197e(5): mov $0xa,%esi
1983(5): call 0xfffffb1d(%rip)
1988(5): jmp 0xffffff51(%rip)
198d(5): cmp $0xffffff7e,%eax
1992(2): jnz 0x9(%rip)
1994(2): xor %edi,%edi
1996(5): call 0x12a(%rip)
199b(5): mov $0x1,%edi
19a0(5): call 0x120(%rip)

"_start" :
19b0(2): xor %ebp,%ebp
19b2(3): mov %rdx,%r9
19b5(1): pop %rsi
19b6(3): mov %rsp,%rdx
19b9(4): and $0xfffffff0,%rsp
19bd(1): push %rax
19be(1): push %rsp
19bf(7): lea 0x33fa(%rip),%r8
19c6(7): lea 0x3383(%rip),%rcx
19cd(7): lea 0xfffffcbc(%rip),%rdi
19d4(6): call 0x2055ee(%rip)
19da(1): hlt 

"deregister_tm_clones" :
19e0(7): lea 0x205699(%rip),%rdi
19e7(1): push %rbp
19e8(7): lea 0x205691(%rip),%rax
19ef(3): cmp %rdi,%rax
19f2(3): mov %rsp,%rbp
19f5(2): jz 0x1b(%rip)
19f7(7): mov 0x2055c2(%rip),%rax
19fe(3): test %rax,%rax
1a01(2): jz 0xf(%rip)
1a03(1): pop %rbp
1a04(2): jmp %rax
1a06(a): nop 0x0(%rax,%rax,1)
1a10(1): pop %rbp
1a11(1): ret near (%rsp)

"register_tm_clones" :
1a20(7): lea 0x205659(%rip),%rdi
1a27(7): lea 0x205652(%rip),%rsi
1a2e(1): push %rbp
1a2f(3): sub %rdi,%rsi
1a32(3): mov %rsp,%rbp
1a35(4): sar $0x3,%rsi
1a39(3): mov %rsi,%rax
1a3c(4): shr $0x3f,%rax
1a40(3): add %rax,%rsi
1a43(3): sar $0x1,%rsi
1a46(2): jz 0x1a(%rip)
1a48(7): mov 0x205589(%rip),%rax
1a4f(3): test %rax,%rax
1a52(2): jz 0xe(%rip)
1a54(1): pop %rbp
1a55(2): jmp %rax
1a57(9): nop 0x0(%rax,%rax,1)
1a60(1): pop %rbp
1a61(1): ret near (%rsp)

"__do_global_dtors_aux" :
1a70(7): cmp $0x0,0x205631(%rip)
1a77(2): jnz 0x31(%rip)
1a79(8): cmp $0x0,0x20555f(%rip)
1a81(1): push %rbp
1a82(3): mov %rsp,%rbp
1a85(2): jz 0xe(%rip)
1a87(7): mov 0x20557a(%rip),%rdi
1a8e(5): call 0xfffffbf2(%rip)
1a93(5): call 0xffffff4d(%rip)
1a98(7): mov $0x1,0x205609(%rip)
1a9f(1): pop %rbp
1aa0(1): ret near (%rsp)
1aa1(7): nop 0x0(%rax)
1aa8(2): REP ret near (%rsp)

"frame_dummy" :
1ab0(1): push %rbp
1ab1(3): mov %rsp,%rbp
1ab4(1): pop %rbp
1ab5(5): jmp 0xffffff6b(%rip)

"usage" :
1ac0(2): push %r13
1ac2(2): push %r12
1ac4(5): mov $0x5,%edx
1ac9(1): push %rbp
1aca(1): push %rbx
1acb(2): mov %edi,%ebp
1acd(7): sub $0x88,%rsp
1ad4(7): mov 0x2055fd(%rip),%rbx
1adb(9): mov $0x28,%rax
1ae4(5): mov %rax,0x78(%rsp)
1ae9(2): xor %eax,%eax
1aeb(2): test %edi,%edi
1aed(2): jz 0x30(%rip)
1aef(7): lea 0x345a(%rip),%rsi
1af6(2): xor %edi,%edi
1af8(5): call 0xfffff928(%rip)
1afd(7): mov 0x20559c(%rip),%rdi
1b04(3): mov %rax,%rdx
1b07(3): mov %rbx,%rcx
1b0a(5): mov $0x1,%esi
1b0f(2): xor %eax,%eax
1b11(5): call 0xfffffb2f(%rip)
1b16(2): mov %ebp,%edi
1b18(5): call 0xfffffb08(%rip)
1b1d(7): lea 0x3454(%rip),%rsi
1b24(2): xor %edi,%edi
1b26(5): call 0xfffff8fa(%rip)
1b2b(3): mov %rbx,%rdx
1b2e(3): mov %rax,%rsi
1b31(5): mov $0x1,%edi
1b36(2): xor %eax,%eax
1b38(5): call 0xfffffa98(%rip)
1b3d(7): mov 0x205544(%rip),%rbx
1b44(7): lea 0x3455(%rip),%rsi
1b4b(5): mov $0x5,%edx
1b50(2): xor %edi,%edi
1b52(5): call 0xfffff8ce(%rip)
1b57(3): mov %rbx,%rsi
1b5a(3): mov %rax,%rdi
1b5d(5): call 0xfffff993(%rip)
1b62(7): mov 0x20551f(%rip),%rbx
1b69(7): lea 0x34d0(%rip),%rsi
1b70(5): mov $0x5,%edx
1b75(2): xor %edi,%edi
1b77(5): call 0xfffff8a9(%rip)
1b7c(3): mov %rbx,%rsi
1b7f(3): mov %rax,%rdi
1b82(5): call 0xfffff96e(%rip)
1b87(7): mov 0x2054fa(%rip),%rbx
1b8e(7): lea 0x34db(%rip),%rsi
1b95(5): mov $0x5,%edx
1b9a(2): xor %edi,%edi
1b9c(5): call 0xfffff884(%rip)
1ba1(3): mov %rbx,%rsi
1ba4(3): mov %rax,%rdi
1ba7(7): lea 0x3256(%rip),%rbx
1bae(5): call 0xfffff942(%rip)
1bb3(7): lea 0x3251(%rip),%rax
1bba(7): lea 0x328b(%rip),%rcx
1bc1(9): mov $0x0,0x60(%rsp)
1bca(9): mov $0x0,0x68(%rsp)
1bd3(3): mov %rsp,%rdx
1bd6(4): mov %rax,(%rsp)
1bda(7): lea 0x322c(%rip),%rax
1be1(5): mov %rcx,0x30(%rsp)
1be6(7): lea 0x3269(%rip),%rcx
1bed(5): mov %rax,0x8(%rsp)
1bf2(7): lea 0x328c(%rip),%rax
1bf9(5): mov %rcx,0x40(%rsp)
1bfe(7): lea 0x325b(%rip),%rcx
1c05(5): mov %rax,0x10(%rsp)
1c0a(7): lea 0x320c(%rip),%rax
1c11(5): mov %rcx,0x50(%rsp)
1c16(5): mov %rax,0x18(%rsp)
1c1b(7): lea 0x3211(%rip),%rax
1c22(5): mov %rax,0x20(%rsp)
1c27(7): lea 0x320f(%rip),%rax
1c2e(5): mov %rax,0x28(%rsp)
1c33(5): mov %rax,0x38(%rsp)
1c38(5): mov %rax,0x48(%rsp)
1c3d(5): mov %rax,0x58(%rsp)
1c42(6): nop 0x0(%rax,%rax,1)
1c48(4): add $0x10,%rdx
1c4c(3): mov (%rdx),%rdi
1c4f(3): test %rdi,%rdi
1c52(2): jz 0x15(%rip)
1c54(5): mov $0x7,%ecx
1c59(3): mov %rbx,%rsi
1c5c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1c5e(3): setnbe %al
1c61(2): sbb $0x0,%al
1c63(2): test %al,%al
1c65(2): jnz 0xffffffe3(%rip)
1c67(4): mov 0x8(%rdx),%r12
1c6b(2): xor %edi,%edi
1c6d(5): mov $0x5,%edx
1c72(7): lea 0x31f1(%rip),%rsi
1c79(3): test %r12,%r12
1c7c(6): jz 0xc7(%rip)
1c82(5): call 0xfffff79e(%rip)
1c87(7): lea 0x341a(%rip),%rcx
1c8e(7): lea 0x31ec(%rip),%rdx
1c95(3): mov %rax,%rsi
1c98(5): mov $0x1,%edi
1c9d(2): xor %eax,%eax
1c9f(5): call 0xfffff931(%rip)
1ca4(2): xor %esi,%esi
1ca6(5): mov $0x5,%edi
1cab(5): call 0xfffff915(%rip)
1cb0(3): test %rax,%rax
1cb3(2): jz 0x1e(%rip)
1cb5(7): lea 0x31d3(%rip),%rsi
1cbc(5): mov $0x3,%edx
1cc1(3): mov %rax,%rdi
1cc4(5): call 0xfffff6ec(%rip)
1cc9(2): test %eax,%eax
1ccb(6): jnz 0x10d(%rip)
1cd1(7): lea 0x31bb(%rip),%rsi
1cd8(2): xor %edi,%edi
1cda(5): mov $0x5,%edx
1cdf(5): call 0xfffff741(%rip)
1ce4(7): lea 0x3119(%rip),%rcx
1ceb(7): lea 0x33b6(%rip),%rdx
1cf2(3): mov %rax,%rsi
1cf5(5): mov $0x1,%edi
1cfa(2): xor %eax,%eax
1cfc(5): call 0xfffff8d4(%rip)
1d01(3): cmp %rbx,%r12
1d04(7): lea 0x311c(%rip),%rcx
1d0b(7): lea 0x3a4f(%rip),%rbx
1d12(4): cmove %rcx,%rbx
1d16(7): lea 0x33fb(%rip),%rsi
1d1d(2): xor %edi,%edi
1d1f(5): mov $0x5,%edx
1d24(5): call 0xfffff6fc(%rip)
1d29(3): mov %rbx,%rcx
1d2c(3): mov %rax,%rsi
1d2f(3): mov %r12,%rdx
1d32(5): mov $0x1,%edi
1d37(2): xor %eax,%eax
1d39(5): call 0xfffff897(%rip)
1d3e(5): jmp 0xfffffdd8(%rip)
1d43(5): call 0xfffff6dd(%rip)
1d48(7): lea 0x3359(%rip),%rcx
1d4f(7): lea 0x312b(%rip),%rdx
1d56(3): mov %rax,%rsi
1d59(5): mov $0x1,%edi
1d5e(2): xor %eax,%eax
1d60(5): call 0xfffff870(%rip)
1d65(2): xor %esi,%esi
1d67(5): mov $0x5,%edi
1d6c(5): call 0xfffff854(%rip)
1d71(3): test %rax,%rax
1d74(2): jz 0x1a(%rip)
1d76(7): lea 0x3112(%rip),%rsi
1d7d(5): mov $0x3,%edx
1d82(3): mov %rax,%rdi
1d85(5): call 0xfffff62b(%rip)
1d8a(2): test %eax,%eax
1d8c(2): jnz 0x45(%rip)
1d8e(7): lea 0x30fe(%rip),%rsi
1d95(5): mov $0x5,%edx
1d9a(2): xor %edi,%edi
1d9c(7): lea 0x3061(%rip),%r12
1da3(7): lea 0x307d(%rip),%rbx
1daa(5): call 0xfffff676(%rip)
1daf(7): lea 0x304e(%rip),%rcx
1db6(7): lea 0x32eb(%rip),%rdx
1dbd(3): mov %rax,%rsi
1dc0(5): mov $0x1,%edi
1dc5(2): xor %eax,%eax
1dc7(5): call 0xfffff809(%rip)
1dcc(5): jmp 0xffffff4a(%rip)
1dd1(7): lea 0x302c(%rip),%r12
1dd8(7): mov 0x2052a9(%rip),%r13
1ddf(7): lea 0x32ea(%rip),%rsi
1de6(2): xor %edi,%edi
1de8(5): mov $0x5,%edx
1ded(5): call 0xfffff633(%rip)
1df2(3): mov %r13,%rsi
1df5(3): mov %rax,%rdi
1df8(5): call 0xfffff6f8(%rip)
1dfd(5): jmp 0xfffffed4(%rip)

"print_group" :
1e10(1): push %rbp
1e11(1): push %rbx
1e12(2): mov %edi,%ebp
1e14(5): mov $0x1,%ebx
1e19(4): sub $0x8,%rsp
1e1d(3): test %sil,%sil
1e20(2): jz 0x40(%rip)
1e22(2): mov %ebp,%edi
1e24(2): mov %esi,%ebx
1e26(5): call 0xfffff66a(%rip)
1e2b(3): test %rax,%rax
1e2e(2): jz 0xa(%rip)
1e30(3): mov (%rax),%rdi
1e33(2): jmp 0x3f(%rip)
1e35(3): nop (%rax)
1e38(7): lea 0x3311(%rip),%rsi
1e3f(5): mov $0x5,%edx
1e44(2): xor %edi,%edi
1e46(2): xor %ebx,%ebx
1e48(5): call 0xfffff5d8(%rip)
1e4d(3): mov %rbp,%rcx
1e50(3): mov %rax,%rdx
1e53(2): xor %esi,%esi
1e55(2): xor %edi,%edi
1e57(2): xor %eax,%eax
1e59(5): call 0xfffff787(%rip)
1e5e(2): nop 
1e60(7): lea 0x205249(%rip),%rsi
1e67(3): mov %rbp,%rdi
1e6a(5): call 0x326(%rip)
1e6f(3): mov %rax,%rdi
1e72(7): mov 0x20520f(%rip),%rsi
1e79(5): call 0xfffff677(%rip)
1e7e(4): add $0x8,%rsp
1e82(2): mov %ebx,%eax
1e84(1): pop %rbx
1e85(1): pop %rbp
1e86(1): ret near (%rsp)

"print_group_list" :
1e90(2): push %r15
1e92(2): push %r14
1e94(3): mov %rdi,%r14
1e97(2): push %r13
1e99(2): push %r12
1e9b(3): mov %r8d,%r13d
1e9e(1): push %rbp
1e9f(1): push %rbx
1ea0(2): mov %edx,%ebp
1ea2(3): mov %ecx,%r12d
1ea5(4): sub $0x28,%rsp
1ea9(9): mov $0x28,%rax
1eb2(5): mov %rax,0x18(%rsp)
1eb7(2): xor %eax,%eax
1eb9(3): test %rdi,%rdi
1ebc(5): mov %r9b,0x7(%rsp)
1ec1(6): jz 0x14f(%rip)
1ec7(2): mov %esi,%edi
1ec9(5): mov %r9d,0xc(%rsp)
1ece(5): call 0xfffff532(%rip)
1ed3(5): mov 0xc(%rsp),%r9d
1ed8(3): test %rax,%rax
1edb(3): mov %rax,%r15
1ede(5): setnz 0x8(%rsp)
1ee3(4): movzx %r13b,%r13d
1ee7(2): mov %ebp,%edi
1ee9(5): mov %r9d,0xc(%rsp)
1eee(3): mov %r13d,%esi
1ef1(5): call 0xffffff1f(%rip)
1ef6(2): mov %eax,%ebx
1ef8(2): test %al,%al
1efa(5): movzx 0x8(%rsp),%eax
1eff(3): cmove %ebx,%eax
1f02(3): cmp %r12d,%ebp
1f05(2): mov %eax,%ebx
1f07(2): jz 0x3c(%rip)
1f09(7): mov 0x205178(%rip),%rdi
1f10(5): mov 0xc(%rsp),%r9d
1f15(4): mov 0x28(%rdi),%rax
1f19(4): cmp 0x30(%rdi),%rax
1f1d(6): jnb 0x183(%rip)
1f23(4): lea 0x1(%rax),%rdx
1f27(4): mov %rdx,0x28(%rdi)
1f2b(3): mov %r9b,(%rax)
1f2e(3): mov %r13d,%esi
1f31(3): mov %r12d,%edi
1f34(5): call 0xfffffedc(%rip)
1f39(2): test %al,%al
1f3b(5): mov $0x0,%eax
1f40(3): cmove %eax,%ebx
1f43(3): test %r15,%r15
1f46(3): mov %r12d,%esi
1f49(2): jz 0x6(%rip)
1f4b(4): mov 0x14(%r15),%esi
1f4f(5): lea 0x10(%rsp),%rdx
1f54(3): mov %r14,%rdi
1f57(5): call 0x2869(%rip)
1f5c(2): test %eax,%eax
1f5e(6): js 0xc2(%rip)
1f64(5): mov 0x10(%rsp),%rdi
1f69(2): jz 0x75(%rip)
1f6b(3): sub $0x1,%eax
1f6e(3): xor %r15d,%r15d
1f71(8): lea 0x4(,%rax,4),%r14
1f79(5): movzx 0x7(%rsp),%eax
1f7e(4): mov %eax,0x8(%rsp)
1f82(6): nop 0x0(%rax,%rax,1)
1f88(4): mov 0x0(%rdi,%r15,1),%eax
1f8c(2): cmp %ebp,%eax
1f8e(2): jz 0x47(%rip)
1f90(3): cmp %r12d,%eax
1f93(2): jz 0x42(%rip)
1f95(7): mov 0x2050ec(%rip),%rdi
1f9c(4): mov 0x28(%rdi),%rax
1fa0(4): cmp 0x30(%rdi),%rax
1fa4(6): jnb 0xbc(%rip)
1faa(4): lea 0x1(%rax),%rcx
1fae(4): mov %rcx,0x28(%rdi)
1fb2(5): movzx 0x7(%rsp),%ecx
1fb7(2): mov %cl,(%rax)
1fb9(5): mov 0x10(%rsp),%rax
1fbe(3): mov %r13d,%esi
1fc1(4): mov 0x0(%rax,%r15,1),%edi
1fc5(5): call 0xfffffe4b(%rip)
1fca(2): test %al,%al
1fcc(5): mov 0x10(%rsp),%rdi
1fd1(2): jnz 0x4(%rip)
1fd3(2): xor %ebx,%ebx
1fd5(4): add $0x4,%r15
1fd9(3): cmp %r15,%r14
1fdc(2): jnz 0xffffffac(%rip)
1fde(5): call 0xfffff3a2(%rip)
1fe3(5): mov 0x18(%rsp),%rdx
1fe8(9): xor $0x28,%rdx
1ff1(2): mov %ebx,%eax
1ff3(6): jnz 0xbb(%rip)
1ff9(4): add $0x28,%rsp
1ffd(1): pop %rbx
1ffe(1): pop %rbp
1fff(2): pop %r12
2001(2): pop %r13
2003(2): pop %r14
2005(2): pop %r15
2007(1): ret near (%rsp)
2008(8): nop 0x0(%rax,%rax,1)
2010(3): xor %r15d,%r15d
2013(5): mov $0x1,0x8(%rsp)
2018(5): jmp 0xfffffecb(%rip)
201d(3): nop (%rax)
2020(5): call 0xfffff380(%rip)
2025(3): test %r14,%r14
2028(3): mov %rax,%rbx
202b(2): jz 0x45(%rip)
202d(3): mov %r14,%rdi
2030(5): call 0x1ec0(%rip)
2035(7): lea 0x313c(%rip),%rsi
203c(5): mov $0x5,%edx
2041(2): xor %edi,%edi
2043(3): mov %rax,%rbp
2046(5): call 0xfffff3da(%rip)
204b(2): mov (%rbx),%esi
204d(3): mov %rax,%rdx
2050(3): mov %rbp,%rcx
2053(2): xor %edi,%edi
2055(2): xor %eax,%eax
2057(2): xor %ebx,%ebx
2059(5): call 0xfffff587(%rip)
205e(2): jmp 0xffffff85(%rip)
2060(4): mov 0x8(%rsp),%esi
2064(5): call 0xfffff43c(%rip)
2069(5): jmp 0xffffff50(%rip)
206e(2): nop 
2070(7): lea 0x3129(%rip),%rsi
2077(5): mov $0x5,%edx
207c(2): xor %edi,%edi
207e(5): call 0xfffff3a2(%rip)
2083(2): mov (%rbx),%esi
2085(3): mov %rax,%rdx
2088(2): xor %edi,%edi
208a(2): xor %eax,%eax
208c(2): xor %ebx,%ebx
208e(5): call 0xfffff552(%rip)
2093(5): jmp 0xffffff50(%rip)
2098(8): nop 0x0(%rax,%rax,1)
20a0(4): movzx %r9b,%esi
20a4(5): call 0xfffff3fc(%rip)
20a9(5): jmp 0xfffffe85(%rip)
20ae(5): call 0xfffff3a2(%rip)

"close_stdout_set_file_name" :
20c0(7): mov %rdi,0x205009(%rip)
20c7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
20d0(7): mov %dil,0x204ff1(%rip)
20d7(1): ret near (%rsp)

"close_stdout" :
20e0(1): push %rbp
20e1(1): push %rbx
20e2(4): sub $0x8,%rsp
20e6(7): mov 0x204f9b(%rip),%rdi
20ed(5): call 0x2793(%rip)
20f2(2): test %eax,%eax
20f4(2): jz 0x18(%rip)
20f6(5): call 0xfffff2aa(%rip)
20fb(7): cmp $0x0,0x204fc6(%rip)
2102(3): mov %rax,%rbx
2105(2): jz 0x1e(%rip)
2107(3): cmp $0x20,(%rax)
210a(2): jnz 0x19(%rip)
210c(7): mov 0x204f8d(%rip),%rdi
2113(5): call 0x276d(%rip)
2118(2): test %eax,%eax
211a(2): jnz 0x48(%rip)
211c(4): add $0x8,%rsp
2120(1): pop %rbx
2121(1): pop %rbp
2122(1): ret near (%rsp)
2123(7): lea 0x30a8(%rip),%rsi
212a(2): xor %edi,%edi
212c(5): mov $0x5,%edx
2131(5): call 0xfffff2ef(%rip)
2136(7): mov 0x204f93(%rip),%rdi
213d(3): mov %rax,%rbp
2140(3): test %rdi,%rdi
2143(2): jz 0x2a(%rip)
2145(5): call 0x1bab(%rip)
214a(2): mov (%rbx),%esi
214c(7): lea 0x308b(%rip),%rdx
2153(3): mov %rax,%rcx
2156(3): mov %rbp,%r8
2159(2): xor %edi,%edi
215b(2): xor %eax,%eax
215d(5): call 0xfffff483(%rip)
2162(6): mov 0x204eb0(%rip),%edi
2168(5): call 0xfffff258(%rip)
216d(2): mov (%rbx),%esi
216f(7): lea 0x306c(%rip),%rdx
2176(3): mov %rax,%rcx
2179(2): xor %edi,%edi
217b(2): xor %eax,%eax
217d(5): call 0xfffff463(%rip)
2182(2): jmp 0xffffffe0(%rip)

"umaxtostr" :
2190(4): lea 0x14(%rsi),%rcx
2194(4): mov $0x0,0x14(%rsi)
2198(a): mov $0x-3689348814741910323,%rsi
21a2(6): nop 0x0(%rax,%rax,1)
21a8(3): mov %rdi,%rax
21ab(4): sub $0x1,%rcx
21af(3): mul %rax,%rsi,%rdx
21b2(4): shr $0x3,%rdx
21b6(4): lea 0x0(%rdx,%rdx,4),%rax
21ba(3): add %rax,%rax
21bd(3): sub %rax,%rdi
21c0(3): add $0x30,%edi
21c3(3): test %rdx,%rdx
21c6(3): mov %dil,(%rcx)
21c9(3): mov %rdx,%rdi
21cc(2): jnz 0xffffffdc(%rip)
21ce(3): mov %rcx,%rax
21d1(1): ret near (%rsp)

"set_program_name" :
21e0(3): test %rdi,%rdi
21e3(1): push %rbx
21e4(2): jz 0x79(%rip)
21e6(5): mov $0x2f,%esi
21eb(3): mov %rdi,%rbx
21ee(5): call 0xfffff2c2(%rip)
21f3(3): test %rax,%rax
21f6(2): jz 0x57(%rip)
21f8(4): lea 0x1(%rax),%r8
21fc(3): mov %r8,%rdx
21ff(3): sub %rbx,%rdx
2202(4): cmp $0x6,%rdx
2206(2): jle 0x47(%rip)
2208(4): lea 0xfffffffa(%rax),%rsi
220c(7): lea 0x300d(%rip),%rdi
2213(5): mov $0x7,%ecx
2218(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
221a(3): setnbe %dl
221d(3): sbb $0x0,%dl
2220(2): test %dl,%dl
2222(2): jnz 0x2b(%rip)
2224(7): lea 0x2ffd(%rip),%rdi
222b(5): mov $0x3,%ecx
2230(3): mov %r8,%rsi
2233(3): mov %r8,%rbx
2236(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2238(3): setnbe %dl
223b(3): sbb $0x0,%dl
223e(2): test %dl,%dl
2240(2): jnz 0xd(%rip)
2242(4): lea 0x4(%rax),%rbx
2246(7): mov %rbx,0x204e33(%rip)
224d(7): mov %rbx,0x204e84(%rip)
2254(7): mov %rbx,0x204e3d(%rip)
225b(1): pop %rbx
225c(1): ret near (%rsp)
225d(7): mov 0x204e3c(%rip),%rcx
2264(7): lea 0x2f7d(%rip),%rdi
226b(5): mov $0x37,%edx
2270(5): mov $0x1,%esi
2275(5): call 0xfffff3bb(%rip)
227a(5): call 0xfffff116(%rip)

"gettext_quote.part.1" :
2280(1): push %rbp
2281(1): push %rbx
2282(3): mov %rdi,%rbp
2285(2): mov %esi,%ebx
2287(4): sub $0x8,%rsp
228b(5): call 0x26d5(%rip)
2290(3): movzx (%rax),%edx
2293(3): and $0xdf,%edx
2296(3): cmp $0x55,%dl
2299(2): jz 0x77(%rip)
229b(3): cmp $0x47,%dl
229e(2): jz 0x22(%rip)
22a0(7): lea 0x2f94(%rip),%rax
22a7(7): lea 0x2f8f(%rip),%rdx
22ae(3): cmp $0x9,%ebx
22b1(4): cmovne %rdx,%rax
22b5(4): add $0x8,%rsp
22b9(1): pop %rbx
22ba(1): pop %rbp
22bb(1): ret near (%rsp)
22bc(4): nop 0x0(%rax)
22c0(4): movzx 0x1(%rax),%edx
22c4(3): and $0xdf,%edx
22c7(3): cmp $0x42,%dl
22ca(2): jnz 0xffffffd6(%rip)
22cc(4): cmp $0x31,0x2(%rax)
22d0(2): jnz 0xffffffd0(%rip)
22d2(4): cmp $0x38,0x3(%rax)
22d6(2): jnz 0xffffffca(%rip)
22d8(4): cmp $0x30,0x4(%rax)
22dc(2): jnz 0xffffffc4(%rip)
22de(4): cmp $0x33,0x5(%rax)
22e2(2): jnz 0xffffffbe(%rip)
22e4(4): cmp $0x30,0x6(%rax)
22e8(2): jnz 0xffffffb8(%rip)
22ea(4): cmp $0x0,0x7(%rax)
22ee(2): jnz 0xffffffb2(%rip)
22f0(4): cmp $0x60,0x0(%rbp)
22f4(7): lea 0x2f39(%rip),%rax
22fb(7): lea 0x2f36(%rip),%rdx
2302(4): cmovne %rdx,%rax
2306(4): add $0x8,%rsp
230a(1): pop %rbx
230b(1): pop %rbp
230c(1): ret near (%rsp)
230d(3): nop (%rax)
2310(4): movzx 0x1(%rax),%edx
2314(3): and $0xdf,%edx
2317(3): cmp $0x54,%dl
231a(2): jnz 0xffffff86(%rip)
231c(4): movzx 0x2(%rax),%edx
2320(3): and $0xdf,%edx
2323(3): cmp $0x46,%dl
2326(6): jnz 0xffffff7a(%rip)
232c(4): cmp $0x2d,0x3(%rax)
2330(6): jnz 0xffffff70(%rip)
2336(4): cmp $0x38,0x4(%rax)
233a(6): jnz 0xffffff66(%rip)
2340(4): cmp $0x0,0x5(%rax)
2344(6): jnz 0xffffff5c(%rip)
234a(4): cmp $0x60,0x0(%rbp)
234e(7): lea 0x2ed7(%rip),%rax
2355(7): lea 0x2ed4(%rip),%rdx
235c(4): cmovne %rdx,%rax
2360(4): add $0x8,%rsp
2364(1): pop %rbx
2365(1): pop %rbp
2366(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2370(2): push %r15
2372(2): push %r14
2374(3): mov %r8d,%r15d
2377(2): push %r13
2379(2): push %r12
237b(3): mov %rdi,%r14
237e(1): push %rbp
237f(1): push %rbx
2380(3): mov %r9d,%ebx
2383(3): mov %rsi,%r13
2386(3): mov %rcx,%rbp
2389(3): and $0x2,%ebx
238c(7): sub $0xb8,%rsp
2393(8): mov 0xf0(%rsp),%rax
239b(5): mov %rdx,0x10(%rsp)
23a0(5): mov %r8d,0x8(%rsp)
23a5(5): mov %r9d,0x78(%rsp)
23aa(5): mov %rax,0x20(%rsp)
23af(8): mov 0xf8(%rsp),%rax
23b7(5): mov %rax,0x68(%rsp)
23bc(8): mov 0x100(%rsp),%rax
23c4(5): mov %rax,0x60(%rsp)
23c9(9): mov $0x28,%rax
23d2(8): mov %rax,0xa8(%rsp)
23da(2): xor %eax,%eax
23dc(5): call 0xfffff054(%rip)
23e1(4): cmp $0xa,%r15d
23e5(5): mov %rax,0x58(%rsp)
23ea(6): jnbe 0x11b5(%rip)
23f0(7): lea 0x2ea9(%rip),%rcx
23f7(3): mov %r15d,%edx
23fa(4): movsxd 0x0(%rcx,%rdx,4),%rax
23fe(3): add %rcx,%rax
2401(2): jmp %rax
2403(5): mov $0x1,0xe(%rsp)
2408(5): mov $0x0,0x7c(%rsp)
240d(3): xor %r12d,%r12d
2410(9): mov $0x0,0x50(%rsp)
2419(5): mov $0x1,0xf(%rsp)
241e(5): mov $0x0,0xd(%rsp)
2423(7): lea 0x2e13(%rip),%rax
242a(9): mov $0x1,0x18(%rsp)
2433(3): xor %r15d,%r15d
2436(8): mov $0x2,0x8(%rsp)
243e(5): mov %rax,0x48(%rsp)
2443(3): xor %r11d,%r11d
2446(3): mov %rbp,%rax
2449(3): mov %r12d,%r8d
244c(3): mov %r11,%rbp
244f(3): mov %rax,%r11
2452(6): nop 0x0(%rax,%rax,1)
2458(3): cmp %rbp,%r11
245b(4): setnz %r12b
245f(4): cmp $0xffffffff,%r11
2463(2): jnz 0xf(%rip)
2465(5): mov 0x10(%rsp),%rax
246a(4): cmp $0x0,0x0(%rax,%rbp,1)
246e(4): setnz %r12b
2472(3): test %r12b,%r12b
2475(6): jz 0x65b(%rip)
247b(5): cmp $0x2,0x8(%rsp)
2480(5): mov 0x10(%rsp),%rdi
2485(4): lea 0x0(%rdi,%rbp,1),%r9
2489(3): setnz %al
248c(4): and 0xd(%rsp),%al
2490(3): mov %eax,%r10d
2493(6): jz 0xad(%rip)
2499(5): mov 0x18(%rsp),%rax
249e(3): test %rax,%rax
24a1(6): jz 0x42f(%rip)
24a7(4): cmp $0xffffffff,%r11
24ab(5): lea 0x0(%rbp,%rax,1),%rbx
24b0(2): jnz 0x30(%rip)
24b2(4): cmp $0x1,%rax
24b6(2): jbe 0x2a(%rip)
24b8(5): mov %r8b,0x38(%rsp)
24bd(5): mov %r10b,0x30(%rsp)
24c2(5): mov %r9,0x28(%rsp)
24c7(5): call 0xffffef79(%rip)
24cc(6): movzx 0x38(%rsp),%r8d
24d2(6): movzx 0x30(%rsp),%r10d
24d8(3): mov %rax,%r11
24db(5): mov 0x28(%rsp),%r9
24e0(3): cmp %r11,%rbx
24e3(5): mov %r10b,0x28(%rsp)
24e8(6): jnbe 0x5b8(%rip)
24ee(5): mov 0x18(%rsp),%rdx
24f3(5): mov 0x48(%rsp),%rsi
24f8(3): mov %r9,%rdi
24fb(5): mov %r11,0x40(%rsp)
2500(5): mov %r8b,0x38(%rsp)
2505(5): mov %r9,0x30(%rsp)
250a(5): call 0xffffefd6(%rip)
250f(2): test %eax,%eax
2511(5): mov 0x30(%rsp),%r9
2516(6): movzx 0x38(%rsp),%r8d
251c(5): mov 0x40(%rsp),%r11
2521(6): jnz 0x57f(%rip)
2527(5): cmp $0x0,0xf(%rsp)
252c(6): movzx 0x28(%rsp),%r10d
2532(6): jnz 0xf83(%rip)
2538(8): nop 0x0(%rax,%rax,1)
2540(4): movzx (%r9),%ebx
2544(3): cmp $0x7e,%bl
2547(6): jnbe 0x321(%rip)
254d(7): lea 0x2d78(%rip),%rcx
2554(3): movzx %bl,%edx
2557(4): movsxd 0x0(%rcx,%rdx,4),%rax
255b(3): add %rcx,%rax
255e(2): jmp %rax
2560(3): xor %r10d,%r10d
2563(4): cmp $0x1,%r11
2567(3): setnz %al
256a(4): cmp $0xffffffff,%r11
256e(2): jnz 0xe(%rip)
2570(5): mov 0x10(%rsp),%rax
2575(4): cmp $0x0,0x1(%rax)
2579(3): setnz %al
257c(5): cmp $0x2,0x8(%rsp)
2581(3): setz %dl
2584(2): test %al,%al
2586(6): jz 0x252(%rip)
258c(3): xor %r12d,%r12d
258f(2): xor %eax,%eax
2591(7): nop 0x0(%rax)
2598(5): cmp $0x1,0xd(%rsp)
259d(6): jnz 0x115(%rip)
25a3(2): test %dl,%dl
25a5(6): jnz 0x10d(%rip)
25ab(5): mov 0x20(%rsp),%rsi
25b0(3): test %rsi,%rsi
25b3(2): jz 0x16(%rip)
25b5(2): mov %ebx,%edx
25b7(3): shr $0x5,%dl
25ba(3): movzx %dl,%edx
25bd(3): mov 0x0(%rsi,%rdx,4),%edx
25c0(3): bt %ebx,%edx
25c3(6): jb 0x150(%rip)
25c9(3): test %r10b,%r10b
25cc(6): jnz 0x147(%rip)
25d2(3): xor $0x1,%eax
25d5(4): add $0x1,%rbp
25d9(3): and %r8d,%eax
25dc(2): test %al,%al
25de(2): jz 0x22(%rip)
25e0(3): cmp %r15,%r13
25e3(2): jbe 0x7(%rip)
25e5(5): mov $0x27,0x0(%r14,%r15,1)
25ea(4): lea 0x1(%r15),%rax
25ee(3): cmp %rax,%r13
25f1(2): jbe 0x8(%rip)
25f3(6): mov $0x27,0x1(%r14,%r15,1)
25f9(4): add $0x2,%r15
25fd(3): xor %r8d,%r8d
2600(3): cmp %r13,%r15
2603(2): jnb 0x6(%rip)
2605(4): mov %bl,0x0(%r14,%r15,1)
2609(5): movzx 0xe(%rsp),%edi
260e(4): add $0x1,%r15
2612(5): mov $0x0,%eax
2617(3): test %r12b,%r12b
261a(3): cmove %eax,%edi
261d(5): mov %dil,0xe(%rsp)
2622(5): jmp 0xfffffe36(%rip)
2627(9): nop 0x0(%rax,%rax,1)
2630(3): xor %r10d,%r10d
2633(4): mov 0x8(%rsp),%eax
2637(3): cmp $0x2,%eax
263a(6): jz 0x5be(%rip)
2640(3): cmp $0x5,%eax
2643(6): jz 0x575(%rip)
2649(3): cmp $0x2,%eax
264c(5): mov $0x3f,%ebx
2651(3): setz %dl
2654(3): xor %r12d,%r12d
2657(2): xor %eax,%eax
2659(5): jmp 0xffffff3f(%rip)
265e(2): nop 
2660(3): xor %r10d,%r10d
2663(5): cmp $0x2,0x8(%rsp)
2668(6): jz 0x508(%rip)
266e(5): mov %r12b,0x7c(%rsp)
2673(2): xor %edx,%edx
2675(2): xor %eax,%eax
2677(5): mov $0x27,%ebx
267c(5): jmp 0xffffff1c(%rip)
2681(7): nop 0x0(%rax)
2688(5): mov $0x9,%edx
268d(5): mov $0x74,%ebx
2692(5): cmp $0x2,0x8(%rsp)
2697(3): setz %al
269a(4): and 0xf(%rsp),%al
269e(6): jnz 0x150(%rip)
26a4(5): cmp $0x0,0xd(%rsp)
26a9(2): jnz 0x67(%rip)
26ab(2): mov %edx,%ebx
26ad(3): xor %r12d,%r12d
26b0(2): xor %eax,%eax
26b2(5): cmp $0x0,0xf(%rsp)
26b7(6): jnz 0xfffffef4(%rip)
26bd(5): jmp 0xffffff0c(%rip)
26c2(6): nop 0x0(%rax,%rax,1)
26c8(5): mov $0x8,%edx
26cd(5): mov $0x62,%ebx
26d2(2): jmp 0xffffffd2(%rip)
26d4(4): nop 0x0(%rax)
26d8(5): cmp $0x2,0x8(%rsp)
26dd(6): jz 0x3d3(%rip)
26e3(5): cmp $0x0,0xd(%rsp)
26e8(6): jz 0x218(%rip)
26ee(5): cmp $0x0,0xf(%rsp)
26f3(6): jz 0x20d(%rip)
26f9(6): cmp $0x0,0x18(%rsp)
26ff(6): jnz 0x3bc(%rip)
2705(5): mov $0x5c,%ebx
270a(6): nop 0x0(%rax,%rax,1)
2710(3): xor %r12d,%r12d
2713(5): cmp $0x2,0x8(%rsp)
2718(3): setz %dl
271b(5): cmp $0x0,0xf(%rsp)
2720(2): mov %edx,%eax
2722(6): jnz 0x856(%rip)
2728(3): mov %r8d,%eax
272b(3): xor $0x1,%eax
272e(2): and %dl,%al
2730(2): jz 0x31(%rip)
2732(3): cmp %r15,%r13
2735(2): jbe 0x7(%rip)
2737(5): mov $0x27,0x0(%r14,%r15,1)
273c(4): lea 0x1(%r15),%rdx
2740(3): cmp %rdx,%r13
2743(2): jbe 0x8(%rip)
2745(6): mov $0x24,0x1(%r14,%r15,1)
274b(4): lea 0x2(%r15),%rdx
274f(3): cmp %rdx,%r13
2752(2): jbe 0x8(%rip)
2754(6): mov $0x27,0x2(%r14,%r15,1)
275a(4): add $0x3,%r15
275e(3): mov %eax,%r8d
2761(3): cmp %r15,%r13
2764(2): jbe 0x7(%rip)
2766(5): mov $0x5c,0x0(%r14,%r15,1)
276b(4): add $0x1,%r15
276f(4): add $0x1,%rbp
2773(5): jmp 0xfffffe8d(%rip)
2778(8): nop 0x0(%rax,%rax,1)
2780(5): cmp $0x0,0xd(%rsp)
2785(6): jnz 0x1ce(%rip)
278b(2): xor %edx,%edx
278d(5): test $0x1,0x78(%rsp)
2792(6): jz 0xffffff19(%rip)
2798(4): add $0x1,%rbp
279c(5): jmp 0xfffffcbc(%rip)
27a1(7): nop 0x0(%rax)
27a8(5): cmp $0x2,0x8(%rsp)
27ad(3): setz %dl
27b0(2): xor %eax,%eax
27b2(5): jmp 0xfffffde6(%rip)
27b7(9): nop 0x0(%rax,%rax,1)
27c0(5): mov $0x7,%edx
27c5(5): mov $0x61,%ebx
27ca(5): jmp 0xfffffeda(%rip)
27cf(1): nop 
27d0(5): cmp $0x2,0x8(%rsp)
27d5(3): setz %dl
27d8(3): test %rbp,%rbp
27db(6): jnz 0xfffffdb1(%rip)
27e1(5): movzx 0xf(%rsp),%eax
27e6(2): and %dl,%al
27e8(6): jz 0xfffffdb0(%rip)
27ee(3): mov %r11,%rbp
27f1(8): mov $0x2,0x8(%rsp)
27f9(5): jmp 0x700(%rip)
27fe(2): nop 
2800(5): cmp $0x2,0x8(%rsp)
2805(3): setz %dl
2808(3): xor %r12d,%r12d
280b(2): jmp 0xffffffd6(%rip)
280d(3): nop (%rax)
2810(5): cmp $0x2,0x8(%rsp)
2815(5): mov $0x20,%ebx
281a(3): setz %dl
281d(2): jmp 0xffffffc4(%rip)
281f(1): nop 
2820(5): mov $0xd,%edx
2825(5): mov $0x72,%ebx
282a(5): jmp 0xfffffe68(%rip)
282f(1): nop 
2830(5): mov $0xc,%edx
2835(5): mov $0x66,%ebx
283a(5): jmp 0xfffffe6a(%rip)
283f(1): nop 
2840(5): mov $0xb,%edx
2845(5): mov $0x76,%ebx
284a(5): jmp 0xfffffe5a(%rip)
284f(1): nop 
2850(5): mov $0xa,%edx
2855(5): mov $0x6e,%ebx
285a(5): jmp 0xfffffe38(%rip)
285f(1): nop 
2860(3): xor %r10d,%r10d
2863(5): nop 0x0(%rax,%rax,1)
2868(6): cmp $0x1,0x58(%rsp)
286e(6): jnz 0x3aa(%rip)
2874(5): mov %r11,0x38(%rsp)
2879(5): mov %r8b,0x30(%rsp)
287e(5): mov %r10b,0x28(%rsp)
2883(5): call 0xffffeded(%rip)
2888(3): mov (%rax),%rcx
288b(3): movzx %bl,%edx
288e(6): movzx 0x28(%rsp),%r10d
2894(6): movzx 0x30(%rsp),%r8d
289a(5): mov 0x38(%rsp),%r11
289f(5): mov $0x1,%edi
28a4(4): movzx 0x0(%rcx,%rdx,2),%eax
28a8(4): and $0x4000,%ax
28ac(4): setnz %r12b
28b0(3): setz %al
28b3(4): and 0xd(%rsp),%al
28b7(2): test %al,%al
28b9(6): jnz 0x998(%rip)
28bf(5): cmp $0x2,0x8(%rsp)
28c4(3): setz %dl
28c7(5): jmp 0xfffffcd1(%rip)
28cc(4): nop 0x0(%rax)
28d0(4): movzx (%r9),%ebx
28d4(3): cmp $0x7e,%bl
28d7(2): jnbe 0xffffff89(%rip)
28d9(7): lea 0x2be8(%rip),%rcx
28e0(3): movzx %bl,%edx
28e3(4): movsxd 0x0(%rcx,%rdx,4),%rax
28e7(3): add %rcx,%rax
28ea(2): jmp %rax
28ec(4): nop 0x0(%rax)
28f0(3): xor %r10d,%r10d
28f3(5): cmp $0x0,0xd(%rsp)
28f8(6): jnz 0xfffffdf6(%rip)
28fe(2): nop 
2900(5): mov $0x5c,%edx
2905(5): mov $0x5c,%ebx
290a(5): jmp 0xfffffd9a(%rip)
290f(1): nop 
2910(5): mov $0xc,%edx
2915(3): xor %r10d,%r10d
2918(5): mov $0x66,%ebx
291d(5): jmp 0xfffffd87(%rip)
2922(6): nop 0x0(%rax,%rax,1)
2928(5): mov $0xa,%edx
292d(3): xor %r10d,%r10d
2930(5): mov $0x6e,%ebx
2935(5): jmp 0xfffffd5d(%rip)
293a(6): nop 0x0(%rax,%rax,1)
2940(5): mov $0x61,%ebx
2945(5): jmp 0xfffffdcb(%rip)
294a(6): nop 0x0(%rax,%rax,1)
2950(3): xor %r10d,%r10d
2953(5): cmp $0x2,0x8(%rsp)
2958(3): setz %dl
295b(5): cmp $0x0,0xf(%rsp)
2960(6): jnz 0xb9a(%rip)
2966(3): mov %r8d,%eax
2969(3): mov %r15,%rcx
296c(3): xor $0x1,%eax
296f(2): and %dl,%al
2971(2): jz 0x2f(%rip)
2973(3): cmp %r15,%r13
2976(2): jbe 0x7(%rip)
2978(5): mov $0x27,0x0(%r14,%r15,1)
297d(4): lea 0x1(%r15),%rcx
2981(3): cmp %rcx,%r13
2984(2): jbe 0x8(%rip)
2986(6): mov $0x24,0x1(%r14,%r15,1)
298c(4): lea 0x2(%r15),%rcx
2990(3): cmp %rcx,%r13
2993(6): jnbe 0x636(%rip)
2999(4): lea 0x3(%r15),%rcx
299d(3): mov %eax,%r8d
29a0(3): cmp %rcx,%r13
29a3(2): jbe 0x7(%rip)
29a5(5): mov $0x5c,0x0(%r14,%rcx,1)
29aa(5): cmp $0x2,0x8(%rsp)
29af(4): lea 0x1(%rcx),%r15
29b3(6): jz 0x606(%rip)
29b9(4): lea 0x1(%rbp),%rax
29bd(3): cmp %r11,%rax
29c0(2): jnb 0x1b(%rip)
29c2(5): mov 0x10(%rsp),%rax
29c7(5): movzx 0x1(%rax,%rbp,1),%eax
29cc(4): mov %al,0x28(%rsp)
29d0(3): sub $0x30,%eax
29d3(2): cmp $0x9,%al
29d5(6): jbe 0x834(%rip)
29db(3): mov %r12d,%eax
29de(5): mov $0x30,%ebx
29e3(3): xor %r12d,%r12d
29e6(5): jmp 0xfffffbb2(%rip)
29eb(5): nop 0x0(%rax,%rax,1)
29f0(5): cmp $0x2,0x8(%rsp)
29f5(3): mov %r10d,%r12d
29f8(3): setz %dl
29fb(3): xor %r10d,%r10d
29fe(2): xor %eax,%eax
2a00(5): jmp 0xfffffb98(%rip)
2a05(3): nop (%rax)
2a08(5): cmp $0x2,0x8(%rsp)
2a0d(3): setz %dl
2a10(3): xor %r10d,%r10d
2a13(5): jmp 0xfffffdc5(%rip)
2a18(8): nop 0x0(%rax,%rax,1)
2a20(5): cmp $0x2,0x8(%rsp)
2a25(3): setz %dl
2a28(3): xor %r10d,%r10d
2a2b(3): xor %r12d,%r12d
2a2e(5): jmp 0xfffffdb3(%rip)
2a33(5): nop 0x0(%rax,%rax,1)
2a38(5): cmp $0x2,0x8(%rsp)
2a3d(3): mov %r10d,%r12d
2a40(5): mov $0x20,%ebx
2a45(3): setz %dl
2a48(3): xor %r10d,%r10d
2a4b(5): jmp 0xfffffd96(%rip)
2a50(5): mov $0xd,%edx
2a55(3): xor %r10d,%r10d
2a58(5): mov $0x72,%ebx
2a5d(5): jmp 0xfffffc35(%rip)
2a62(6): nop 0x0(%rax,%rax,1)
2a68(5): mov $0x76,%ebx
2a6d(5): jmp 0xfffffca3(%rip)
2a72(6): nop 0x0(%rax,%rax,1)
2a78(5): mov $0x9,%edx
2a7d(3): xor %r10d,%r10d
2a80(5): mov $0x74,%ebx
2a85(5): jmp 0xfffffc0d(%rip)
2a8a(6): nop 0x0(%rax,%rax,1)
2a90(5): mov $0x62,%ebx
2a95(5): jmp 0xfffffc7b(%rip)
2a9a(6): nop 0x0(%rax,%rax,1)
2aa0(3): xor %r10d,%r10d
2aa3(5): jmp 0xfffffa9d(%rip)
2aa8(8): nop 0x0(%rax,%rax,1)
2ab0(5): cmp $0x0,0xf(%rsp)
2ab5(6): jnz 0x96b(%rip)
2abb(4): add $0x1,%rbp
2abf(3): mov %r8d,%eax
2ac2(3): xor %r12d,%r12d
2ac5(5): mov $0x5c,%ebx
2aca(5): jmp 0xfffffb12(%rip)
2acf(1): nop 
2ad0(5): cmp $0x2,0x8(%rsp)
2ad5(5): movzx 0xf(%rsp),%ebx
2ada(3): mov %r8d,%r12d
2add(3): mov %r11,%rbp
2ae0(3): setz %dl
2ae3(2): mov %ebx,%eax
2ae5(3): test %r15,%r15
2ae8(3): setz %cl
2aeb(2): and %edx,%eax
2aed(2): and %cl,%al
2aef(6): jnz 0xa67(%rip)
2af5(2): mov %ebx,%eax
2af7(3): xor $0x1,%eax
2afa(2): and %al,%dl
2afc(6): jz 0x970(%rip)
2b02(5): cmp $0x0,0x7c(%rsp)
2b07(6): jz 0x963(%rip)
2b0d(5): cmp $0x0,0xe(%rsp)
2b12(6): jnz 0x9fb(%rip)
2b18(3): test %r13,%r13
2b1b(3): setz %al
2b1e(6): cmp $0x0,0x50(%rsp)
2b24(3): setnz %dl
2b27(2): and %dl,%al
2b29(6): jz 0xa23(%rip)
2b2f(5): mov 0x50(%rsp),%r13
2b34(7): lea 0x2702(%rip),%rbx
2b3b(4): mov $0x27,(%r14)
2b3f(8): mov $0x2,0x8(%rsp)
2b47(6): mov $0x1,%r15d
2b4d(9): mov $0x1,0x18(%rsp)
2b56(5): mov $0x0,0xf(%rsp)
2b5b(5): mov %rbx,0x48(%rsp)
2b60(4): mov %al,0x7c(%rsp)
2b64(5): jmp 0xfffff8df(%rip)
2b69(7): nop 0x0(%rax)
2b70(5): cmp $0x0,0xf(%rsp)
2b75(6): jnz 0x8ab(%rip)
2b7b(3): test %r13,%r13
2b7e(6): jz 0x402(%rip)
2b84(2): xor %edx,%edx
2b86(6): cmp $0x0,0x50(%rsp)
2b8c(6): jnz 0x3f4(%rip)
2b92(5): mov %r13,0x50(%rsp)
2b97(4): add $0x3,%r15
2b9b(2): xor %eax,%eax
2b9d(5): mov %r12b,0x7c(%rsp)
2ba2(3): xor %r8d,%r8d
2ba5(3): mov %rdx,%r13
2ba8(5): mov $0x27,%ebx
2bad(5): jmp 0xfffffa1c(%rip)
2bb2(6): nop 0x0(%rax,%rax,1)
2bb8(5): test $0x4,0x78(%rsp)
2bbd(2): jz 0x23(%rip)
2bbf(4): lea 0x2(%rbp),%rcx
2bc3(3): cmp %r11,%rcx
2bc6(2): jnb 0x1a(%rip)
2bc8(5): mov 0x10(%rsp),%rax
2bcd(5): cmp $0x3f,0x1(%rax,%rbp,1)
2bd2(6): jz 0x790(%rip)
2bd8(8): nop 0x0(%rax,%rax,1)
2be0(2): xor %edx,%edx
2be2(3): xor %r12d,%r12d
2be5(2): xor %eax,%eax
2be7(5): mov $0x3f,%ebx
2bec(5): jmp 0xfffff9ac(%rip)
2bf1(7): nop 0x0(%rax)
2bf8(5): cmp $0x0,0xf(%rsp)
2bfd(6): jnz 0x823(%rip)
2c03(3): xor %r12d,%r12d
2c06(2): xor %eax,%eax
2c08(5): mov $0x3f,%ebx
2c0d(5): jmp 0xfffff9bc(%rip)
2c12(6): nop 0x0(%rax,%rax,1)
2c18(8): lea 0xa0(%rsp),%rax
2c20(4): cmp $0xffffffff,%r11
2c24(c): mov $0x0,0xa0(%rsp)
2c30(5): mov %rax,0x28(%rsp)
2c35(2): jnz 0x2f(%rip)
2c37(5): mov 0x10(%rsp),%rdi
2c3c(5): mov %r8b,0x40(%rsp)
2c41(5): mov %r10b,0x38(%rsp)
2c46(5): mov %r9,0x30(%rsp)
2c4b(5): call 0xffffe7f5(%rip)
2c50(6): movzx 0x40(%rsp),%r8d
2c56(6): movzx 0x38(%rsp),%r10d
2c5c(3): mov %rax,%r11
2c5f(5): mov 0x30(%rsp),%r9
2c64(8): lea 0x9c(%rsp),%rax
2c6c(2): xor %ecx,%ecx
2c6e(4): mov %bl,0x7e(%rsp)
2c72(5): mov %r8b,0x7d(%rsp)
2c77(3): mov %rcx,%rbx
2c7a(8): mov %r9,0x88(%rsp)
2c82(5): mov %rax,0x38(%rsp)
2c87(5): mov %r10b,0x7f(%rsp)
2c8c(8): mov %r15,0x80(%rsp)
2c94(5): mov %r14,0x40(%rsp)
2c99(5): mov %r13,0x70(%rsp)
2c9e(5): mov %r11,0x30(%rsp)
2ca3(5): mov 0x10(%rsp),%rax
2ca8(5): lea 0x0(%rbp,%rbx,1),%r14
2cad(5): mov 0x30(%rsp),%rdx
2cb2(5): mov 0x28(%rsp),%rcx
2cb7(5): mov 0x38(%rsp),%rdi
2cbc(4): lea 0x0(%rax,%r14,1),%r13
2cc0(3): sub %r14,%rdx
2cc3(3): mov %r13,%rsi
2cc6(5): call 0x1b2a(%rip)
2ccb(3): test %rax,%rax
2cce(3): mov %rax,%r15
2cd1(2): jz 0x50(%rip)
2cd3(4): cmp $0xffffffff,%rax
2cd7(6): jz 0x61e(%rip)
2cdd(4): cmp $0xfffffffe,%rax
2ce1(6): jz 0x5a0(%rip)
2ce7(5): cmp $0x2,0x8(%rsp)
2cec(3): setz %al
2cef(4): and 0xf(%rsp),%al
2cf3(6): jnz 0x19d(%rip)
2cf9(7): mov 0x9c(%rsp),%edi
2d00(5): call 0xffffe960(%rip)
2d05(5): mov 0x28(%rsp),%rdi
2d0a(2): test %eax,%eax
2d0c(5): mov $0x0,%eax
2d11(4): cmove %eax,%r12d
2d15(3): add %r15,%rbx
2d18(5): call 0xffffe938(%rip)
2d1d(2): test %eax,%eax
2d1f(2): jz 0xffffff84(%rip)
2d21(3): mov %r12d,%edx
2d24(3): mov %rbx,%rdi
2d27(6): movzx 0x7d(%rsp),%r8d
2d2d(3): xor $0x1,%edx
2d30(5): movzx 0x7e(%rsp),%ebx
2d35(6): movzx 0x7f(%rsp),%r10d
2d3b(4): and 0xd(%rsp),%dl
2d3f(8): mov 0x80(%rsp),%r15
2d47(5): mov 0x40(%rsp),%r14
2d4c(5): mov 0x70(%rsp),%r13
2d51(5): mov 0x30(%rsp),%r11
2d56(4): cmp $0x1,%rdi
2d5a(6): jbe 0x601(%rip)
2d60(3): mov %rdi,%rcx
2d63(2): xor %esi,%esi
2d65(6): movzx 0xf(%rsp),%r9d
2d6b(3): add %rbp,%rcx
2d6e(5): mov 0x10(%rsp),%rdi
2d73(5): jmp 0xbb(%rip)
2d78(8): nop 0x0(%rax,%rax,1)
2d80(5): cmp $0x2,0x8(%rsp)
2d85(3): setz %al
2d88(3): test %r9b,%r9b
2d8b(6): jnz 0x4b5(%rip)
2d91(3): mov %r8d,%esi
2d94(3): xor $0x1,%esi
2d97(3): and %sil,%al
2d9a(2): jz 0x31(%rip)
2d9c(3): cmp %r15,%r13
2d9f(2): jbe 0x7(%rip)
2da1(5): mov $0x27,0x0(%r14,%r15,1)
2da6(4): lea 0x1(%r15),%rsi
2daa(3): cmp %rsi,%r13
2dad(2): jbe 0x8(%rip)
2daf(6): mov $0x24,0x1(%r14,%r15,1)
2db5(4): lea 0x2(%r15),%rsi
2db9(3): cmp %rsi,%r13
2dbc(2): jbe 0x8(%rip)
2dbe(6): mov $0x27,0x2(%r14,%r15,1)
2dc4(4): add $0x3,%r15
2dc8(3): mov %eax,%r8d
2dcb(3): cmp %r15,%r13
2dce(2): jbe 0x7(%rip)
2dd0(5): mov $0x5c,0x0(%r14,%r15,1)
2dd5(4): lea 0x1(%r15),%rax
2dd9(3): cmp %rax,%r13
2ddc(2): jbe 0xf(%rip)
2dde(2): mov %ebx,%eax
2de0(3): shr $0x6,%al
2de3(3): add $0x30,%eax
2de6(5): mov %al,0x1(%r14,%r15,1)
2deb(4): lea 0x2(%r15),%rax
2def(3): cmp %rax,%r13
2df2(2): jbe 0x12(%rip)
2df4(2): mov %ebx,%eax
2df6(3): shr $0x3,%al
2df9(3): and $0x7,%eax
2dfc(3): add $0x30,%eax
2dff(5): mov %al,0x2(%r14,%r15,1)
2e04(3): and $0x7,%ebx
2e07(4): add $0x1,%rbp
2e0b(4): add $0x3,%r15
2e0f(3): add $0x30,%ebx
2e12(3): cmp %rcx,%rbp
2e15(6): jnb 0xfffff7eb(%rip)
2e1b(2): mov %edx,%esi
2e1d(3): cmp %r15,%r13
2e20(2): jbe 0x6(%rip)
2e22(4): mov %bl,0x0(%r14,%r15,1)
2e26(4): movzx 0x0(%rdi,%rbp,1),%ebx
2e2a(4): add $0x1,%r15
2e2e(2): test %dl,%dl
2e30(6): jnz 0xffffff50(%rip)
2e36(2): mov %esi,%eax
2e38(3): xor $0x1,%eax
2e3b(3): and %r8d,%eax
2e3e(3): test %r10b,%r10b
2e41(2): jz 0x10(%rip)
2e43(3): cmp %r15,%r13
2e46(2): jbe 0x7(%rip)
2e48(5): mov $0x5c,0x0(%r14,%r15,1)
2e4d(4): add $0x1,%r15
2e51(4): add $0x1,%rbp
2e55(3): cmp %rcx,%rbp
2e58(6): jnb 0xfffff784(%rip)
2e5e(2): test %al,%al
2e60(6): jz 0x3fe(%rip)
2e66(3): cmp %r15,%r13
2e69(2): jbe 0x7(%rip)
2e6b(5): mov $0x27,0x0(%r14,%r15,1)
2e70(4): lea 0x1(%r15),%rax
2e74(3): cmp %rax,%r13
2e77(2): jbe 0x8(%rip)
2e79(6): mov $0x27,0x1(%r14,%r15,1)
2e7f(4): add $0x2,%r15
2e83(3): xor %r10d,%r10d
2e86(3): xor %r8d,%r8d
2e89(2): jmp 0xffffff94(%rip)
2e8b(5): nop 0x0(%rax,%rax,1)
2e90(4): cmp $0x1,%r15
2e94(6): jz 0xfffffe65(%rip)
2e9a(5): mov 0x10(%rsp),%rdi
2e9f(4): lea 0x0(%rdi,%r15,1),%rcx
2ea3(5): lea 0x1(%rdi,%r14,1),%rdx
2ea8(4): lea 0x0(%rcx,%r14,1),%r8
2eac(2): jmp 0x11(%rip)
2eae(2): nop 
2eb0(4): add $0x1,%rdx
2eb4(3): cmp %rdx,%r8
2eb7(6): jz 0xfffffe42(%rip)
2ebd(3): movzx (%rdx),%ecx
2ec0(3): sub $0x5b,%ecx
2ec3(3): cmp $0x21,%cl
2ec6(2): jnbe 0xffffffea(%rip)
2ec8(5): mov $0x1,%esi
2ecd(3): shl/sal %cl,%rsi
2ed0(3): mov %rsi,%rcx
2ed3(a): mov $0x8589934635,%rsi
2edd(3): test %rsi,%rcx
2ee0(2): jz 0xffffffd0(%rip)
2ee2(5): mov 0x40(%rsp),%r14
2ee7(5): mov 0x70(%rsp),%r13
2eec(5): mov 0x30(%rsp),%rbp
2ef1(8): mov $0x2,0x8(%rsp)
2ef9(5): cmp $0x0,0xd(%rsp)
2efe(2): jz 0x12(%rip)
2f00(2): test %al,%al
2f02(5): mov $0x4,%eax
2f07(5): cmove 0x8(%rsp),%eax
2f0c(4): mov %eax,0x8(%rsp)
2f10(4): sub $0x8,%rsp
2f14(3): mov %rbp,%rcx
2f17(3): mov %r13,%rsi
2f1a(4): push 0x68(%rsp)
2f1e(4): push 0x78(%rsp)
2f22(3): mov %r14,%rdi
2f25(2): push $0x0
2f27(8): mov 0x98(%rsp),%r9d
2f2f(5): mov 0x28(%rsp),%r8d
2f34(5): mov 0x30(%rsp),%rdx
2f39(4): and $0xfd,%r9d
2f3d(5): call 0xfffff433(%rip)
2f42(4): add $0x20,%rsp
2f46(3): mov %rax,%r15
2f49(8): mov 0xa8(%rsp),%rbx
2f51(9): xor $0x28,%rbx
2f5a(3): mov %r15,%rax
2f5d(6): jnz 0x606(%rip)
2f63(7): add $0xb8,%rsp
2f6a(1): pop %rbx
2f6b(1): pop %rbp
2f6c(2): pop %r12
2f6e(2): pop %r13
2f70(2): pop %r14
2f72(2): pop %r15
2f74(1): ret near (%rsp)
2f75(3): nop (%rax)
2f78(3): mov %r11,%rbp
2f7b(5): jmp 0xffffff7e(%rip)
2f80(3): cmp %r15,%r13
2f83(2): jbe 0x7(%rip)
2f85(5): mov $0x27,0x0(%r14,%r15,1)
2f8a(4): lea 0x1(%r15),%rax
2f8e(3): cmp %rax,%r13
2f91(2): jbe 0x8(%rip)
2f93(6): mov $0x5c,0x1(%r14,%r15,1)
2f99(4): lea 0x2(%r15),%rax
2f9d(3): cmp %rax,%r13
2fa0(6): jbe 0x5f2(%rip)
2fa6(3): mov %r13,%rdx
2fa9(6): mov $0x27,0x2(%r14,%r15,1)
2faf(5): mov 0x50(%rsp),%r13
2fb4(5): jmp 0xfffffbde(%rip)
2fb9(3): mov %r12d,%eax
2fbc(5): mov $0x30,%ebx
2fc1(3): xor %r12d,%r12d
2fc4(5): jmp 0xfffff605(%rip)
2fc9(6): mov $0x27,0x2(%r14,%r15,1)
2fcf(5): jmp 0xfffff9ca(%rip)
2fd4(2): test %ebx,%ebx
2fd6(6): jnz 0xfffff42d(%rip)
2fdc(5): mov $0x1,0xd(%rsp)
2fe1(3): test %r13,%r13
2fe4(6): jnz 0x596(%rip)
2fea(7): lea 0x224c(%rip),%rax
2ff1(9): mov $0x0,0x50(%rsp)
2ffa(5): mov $0x1,0xe(%rsp)
2fff(5): mov $0x0,0x7c(%rsp)
3004(3): xor %r12d,%r12d
3007(5): mov $0x0,0xf(%rsp)
300c(9): mov $0x1,0x18(%rsp)
3015(5): mov %rax,0x48(%rsp)
301a(6): mov $0x1,%r15d
3020(8): mov $0x2,0x8(%rsp)
3028(5): jmp 0xfffff41b(%rip)
302d(3): nop (%rax)
3030(2): test %ebx,%ebx
3032(6): jnz 0x3fb(%rip)
3038(3): test %r13,%r13
303b(6): jz 0x22b(%rip)
3041(4): mov $0x22,(%r14)
3045(5): mov $0x1,0xe(%rsp)
304a(3): xor %r12d,%r12d
304d(5): mov $0x0,0x7c(%rsp)
3052(9): mov $0x0,0x50(%rsp)
305b(7): lea 0x21d9(%rip),%rax
3062(5): mov $0x0,0xf(%rsp)
3067(5): mov $0x1,0xd(%rsp)
306c(9): mov $0x1,0x18(%rsp)
3075(6): mov $0x1,%r15d
307b(5): mov %rax,0x48(%rsp)
3080(5): jmp 0xfffff3c3(%rip)
3085(7): lea 0x21af(%rip),%rax
308c(5): mov $0x1,0xe(%rsp)
3091(5): mov $0x0,0x7c(%rsp)
3096(3): xor %r12d,%r12d
3099(9): mov $0x0,0x50(%rsp)
30a2(5): mov $0x1,0xf(%rsp)
30a7(5): mov $0x1,0xd(%rsp)
30ac(9): mov $0x1,0x18(%rsp)
30b5(3): xor %r15d,%r15d
30b8(5): mov %rax,0x48(%rsp)
30bd(8): mov $0x5,0x8(%rsp)
30c5(5): jmp 0xfffff37e(%rip)
30ca(5): mov $0x1,0xe(%rsp)
30cf(5): mov $0x0,0x7c(%rsp)
30d4(3): xor %r12d,%r12d
30d7(9): mov $0x0,0x50(%rsp)
30e0(5): mov $0x0,0xf(%rsp)
30e5(3): xor %r15d,%r15d
30e8(5): mov $0x1,0xd(%rsp)
30ed(9): mov $0x0,0x18(%rsp)
30f6(9): mov $0x0,0x48(%rsp)
30ff(5): jmp 0xfffff344(%rip)
3104(5): cmp $0xa,0x8(%rsp)
3109(2): jz 0x58(%rip)
310b(7): lea 0x212d(%rip),%rsi
3112(2): xor %edi,%edi
3114(5): mov $0x5,%edx
3119(5): call 0xffffe307(%rip)
311e(3): mov %rax,%rcx
3121(5): mov %rax,0x68(%rsp)
3126(7): lea 0x2112(%rip),%rax
312d(3): cmp %rax,%rcx
3130(6): jz 0x39e(%rip)
3136(7): lea 0x2100(%rip),%rsi
313d(2): xor %edi,%edi
313f(5): mov $0x5,%edx
3144(5): call 0xffffe2dc(%rip)
3149(3): mov %rax,%rcx
314c(5): mov %rax,0x60(%rsp)
3151(7): lea 0x20e5(%rip),%rax
3158(3): cmp %rax,%rcx
315b(6): jz 0x389(%rip)
3161(3): xor %r15d,%r15d
3164(2): test %ebx,%ebx
3166(6): jz 0x1c7(%rip)
316c(2): test %ebx,%ebx
316e(5): mov 0x60(%rsp),%rbx
3173(5): setnz 0xf(%rsp)
3178(3): xor %r12d,%r12d
317b(3): mov %rbx,%rdi
317e(5): call 0xffffe2c2(%rip)
3183(5): mov %rbx,0x48(%rsp)
3188(5): mov %rax,0x18(%rsp)
318d(5): mov $0x1,0xe(%rsp)
3192(5): mov $0x0,0x7c(%rsp)
3197(9): mov $0x0,0x50(%rsp)
31a0(5): mov $0x1,0xd(%rsp)
31a5(5): jmp 0xfffff29e(%rip)
31aa(5): mov $0x1,0xe(%rsp)
31af(5): mov $0x0,0x7c(%rsp)
31b4(3): xor %r12d,%r12d
31b7(9): mov $0x0,0x50(%rsp)
31c0(5): mov $0x0,0xf(%rsp)
31c5(3): xor %r15d,%r15d
31c8(5): mov $0x0,0xd(%rsp)
31cd(9): mov $0x0,0x18(%rsp)
31d6(9): mov $0x0,0x48(%rsp)
31df(5): jmp 0xfffff264(%rip)
31e4(5): mov $0x1,0xe(%rsp)
31e9(5): mov $0x0,0x7c(%rsp)
31ee(3): xor %r12d,%r12d
31f1(9): mov $0x0,0x50(%rsp)
31fa(5): mov $0x1,0xf(%rsp)
31ff(5): mov $0x1,0xd(%rsp)
3204(5): jmp 0xfffff21f(%rip)
3209(3): cmp %r15,%r13
320c(2): jbe 0x7(%rip)
320e(5): mov $0x30,0x0(%r14,%r15,1)
3213(4): lea 0x2(%rcx),%rax
3217(3): cmp %rax,%r13
321a(2): jbe 0x8(%rip)
321c(6): mov $0x30,0x2(%r14,%rcx,1)
3222(3): mov %r12d,%eax
3225(4): lea 0x3(%rcx),%r15
3229(3): xor %r12d,%r12d
322c(5): mov $0x30,%ebx
3231(5): jmp 0xfffff367(%rip)
3236(a): nop 0x0(%rax,%rax,1)
3240(5): movzx 0xf(%rsp),%ebx
3245(3): mov %r11,%rbp
3248(4): mov %bl,0xd(%rsp)
324c(5): jmp 0xfffffcad(%rip)
3251(5): movzx 0xd(%rsp),%edx
3256(3): xor %r12d,%r12d
3259(5): jmp 0xfffffb07(%rip)
325e(3): xor %r10d,%r10d
3261(5): jmp 0xfffffbbc(%rip)
3266(9): mov $0x0,0x50(%rsp)
326f(5): mov $0x1,0xe(%rsp)
3274(3): xor %r12d,%r12d
3277(5): mov $0x0,0x7c(%rsp)
327c(5): jmp 0xfffffddf(%rip)
3281(5): mov 0x30(%rsp),%r11
3286(3): mov %r14,%rsi
3289(3): mov %r13,%rcx
328c(3): mov %rbx,%rax
328f(3): mov %rbx,%rdi
3292(6): movzx 0x7d(%rsp),%r8d
3298(5): movzx 0x7e(%rsp),%ebx
329d(8): mov 0x88(%rsp),%r9
32a5(3): cmp %r11,%rsi
32a8(6): movzx 0x7f(%rsp),%r10d
32ae(8): mov 0x80(%rsp),%r15
32b6(5): mov 0x40(%rsp),%r14
32bb(5): mov 0x70(%rsp),%r13
32c0(2): jnb 0x28(%rip)
32c2(3): cmp $0x0,(%rcx)
32c5(2): jnz 0x12(%rip)
32c7(2): jmp 0x21(%rip)
32c9(7): nop 0x0(%rax)
32d0(5): cmp $0x0,0x0(%r9,%rax,1)
32d5(2): jz 0x10(%rip)
32d7(4): add $0x1,%rax
32db(5): lea 0x0(%rbp,%rax,1),%rdx
32e0(3): cmp %rdx,%r11
32e3(2): jnbe 0xffffffed(%rip)
32e5(3): mov %rax,%rdi
32e8(5): movzx 0xd(%rsp),%edx
32ed(3): xor %r12d,%r12d
32f0(5): jmp 0xfffffa66(%rip)
32f5(3): mov %rbx,%rdi
32f8(6): movzx 0x7d(%rsp),%r8d
32fe(5): movzx 0x7e(%rsp),%ebx
3303(6): movzx 0x7f(%rsp),%r10d
3309(8): mov 0x80(%rsp),%r15
3311(3): xor %r12d,%r12d
3314(5): mov 0x40(%rsp),%r14
3319(5): mov 0x70(%rsp),%r13
331e(5): mov 0x30(%rsp),%r11
3323(5): movzx 0xd(%rsp),%edx
3328(5): jmp 0xfffffa2e(%rip)
332d(5): mov 0x68(%rsp),%rdx
3332(3): movzx (%rdx),%eax
3335(2): test %al,%al
3337(6): jz 0xfffffe35(%rip)
333d(3): nop (%rax)
3340(3): cmp %r15,%r13
3343(2): jbe 0x6(%rip)
3345(4): mov %al,0x0(%r14,%r15,1)
3349(4): add $0x1,%r15
334d(5): movzx 0x0(%rdx,%r15,1),%eax
3352(2): test %al,%al
3354(2): jnz 0xffffffec(%rip)
3356(5): jmp 0xfffffe16(%rip)
335b(2): mov %edx,%eax
335d(5): jmp 0xfffff55a(%rip)
3362(4): movzx 0x0(%rax,%rcx,1),%ebx
3366(3): cmp $0x3e,%bl
3369(6): jnbe 0xfffff877(%rip)
336f(a): mov $0x8070630310989004800,%rax
3379(4): bt %rbx,%rax
337d(6): jnb 0xfffff863(%rip)
3383(5): cmp $0x0,0xf(%rsp)
3388(6): jnz 0x1ea(%rip)
338e(3): cmp %r15,%r13
3391(2): jbe 0x7(%rip)
3393(5): mov $0x3f,0x0(%r14,%r15,1)
3398(4): lea 0x1(%r15),%rax
339c(3): cmp %rax,%r13
339f(2): jbe 0x8(%rip)
33a1(6): mov $0x22,0x1(%r14,%r15,1)
33a7(4): lea 0x2(%r15),%rax
33ab(3): cmp %rax,%r13
33ae(2): jbe 0x8(%rip)
33b0(6): mov $0x22,0x2(%r14,%r15,1)
33b6(4): lea 0x3(%r15),%rax
33ba(3): cmp %rax,%r13
33bd(2): jbe 0x8(%rip)
33bf(6): mov $0x3f,0x3(%r14,%r15,1)
33c5(4): add $0x4,%r15
33c9(2): xor %edx,%edx
33cb(3): xor %r12d,%r12d
33ce(2): xor %eax,%eax
33d0(3): mov %rcx,%rbp
33d3(5): jmp 0xfffff1c5(%rip)
33d8(2): test %ebx,%ebx
33da(6): jz 0x18e(%rip)
33e0(7): lea 0x1e56(%rip),%rax
33e7(5): mov $0x1,0xe(%rsp)
33ec(5): mov $0x0,0x7c(%rsp)
33f1(3): xor %r12d,%r12d
33f4(9): mov $0x0,0x50(%rsp)
33fd(5): mov $0x1,0xf(%rsp)
3402(5): mov $0x0,0xd(%rsp)
3407(9): mov $0x1,0x18(%rsp)
3410(3): xor %r15d,%r15d
3413(5): mov %rax,0x48(%rsp)
3418(5): jmp 0xfffff02b(%rip)
341d(3): nop (%rax)
3420(3): mov %r11,%rbp
3423(5): movzx 0xf(%rsp),%eax
3428(5): jmp 0xfffffad1(%rip)
342d(7): lea 0x1e07(%rip),%rax
3434(5): mov $0x1,0xe(%rsp)
3439(5): mov $0x0,0x7c(%rsp)
343e(3): xor %r12d,%r12d
3441(9): mov $0x0,0x50(%rsp)
344a(5): mov $0x1,0xf(%rsp)
344f(5): mov $0x1,0xd(%rsp)
3454(9): mov $0x1,0x18(%rsp)
345d(3): xor %r15d,%r15d
3460(5): mov %rax,0x48(%rsp)
3465(5): jmp 0xffffefde(%rip)
346a(2): mov %edx,%eax
346c(5): mov 0x48(%rsp),%rbx
3471(3): test %rbx,%rbx
3474(2): jz 0x2e(%rip)
3476(2): test %al,%al
3478(2): jz 0x2a(%rip)
347a(3): movzx (%rbx),%ecx
347d(3): mov %rbx,%rax
3480(2): test %cl,%cl
3482(2): jz 0x20(%rip)
3484(3): mov %r15,%rdx
3487(3): sub %r15,%rax
348a(3): cmp %rdx,%r13
348d(2): jbe 0x6(%rip)
348f(4): mov %cl,0x0(%r14,%rdx,1)
3493(4): add $0x1,%rdx
3497(4): movzx 0x0(%rax,%rdx,1),%ecx
349b(2): test %cl,%cl
349d(2): jnz 0xffffffed(%rip)
349f(3): mov %rdx,%r15
34a2(3): cmp %r15,%r13
34a5(6): jbe 0xfffffaa4(%rip)
34ab(5): mov $0x0,0x0(%r14,%r15,1)
34b0(5): jmp 0xfffffa99(%rip)
34b5(5): cmp $0x2,0x8(%rsp)
34ba(5): movzx 0xf(%rsp),%ebx
34bf(3): mov %r11,%rbp
34c2(3): setz %al
34c5(4): mov %bl,0xd(%rsp)
34c9(5): jmp 0xfffffa30(%rip)
34ce(4): mov 0x8(%rsp),%esi
34d2(3): mov %rcx,%rdi
34d5(5): call 0xffffedab(%rip)
34da(5): mov %rax,0x68(%rsp)
34df(5): jmp 0xfffffc57(%rip)
34e4(4): mov 0x8(%rsp),%esi
34e8(3): mov %rcx,%rdi
34eb(5): call 0xffffed95(%rip)
34f0(5): mov %rax,0x60(%rsp)
34f5(5): jmp 0xfffffc6c(%rip)
34fa(5): movzx 0xf(%rsp),%ebx
34ff(3): mov %r11,%rbp
3502(2): mov %edx,%eax
3504(4): mov %bl,0xd(%rsp)
3508(5): jmp 0xfffff9f1(%rip)
350d(4): sub $0x8,%rsp
3511(6): mov $0x5,%r8d
3517(3): mov %r11,%rcx
351a(4): push 0x68(%rsp)
351e(4): push 0x78(%rsp)
3522(3): mov %r14,%rdi
3525(4): push 0x38(%rsp)
3529(8): mov 0x98(%rsp),%r9d
3531(5): mov 0x30(%rsp),%rdx
3536(5): mov 0x70(%rsp),%rsi
353b(5): call 0xffffee35(%rip)
3540(4): add $0x20,%rsp
3544(3): mov %rax,%r15
3547(5): jmp 0xfffffa02(%rip)
354c(5): movzx 0x7c(%rsp),%eax
3551(5): jmp 0xffffff1b(%rip)
3556(8): mov $0x2,0x8(%rsp)
355e(5): jmp 0xfffff99b(%rip)
3563(5): call 0xffffdeed(%rip)
3568(5): mov $0x0,0xd(%rsp)
356d(5): jmp 0xfffffa74(%rip)
3572(3): mov %r11,%rbp
3575(5): jmp 0xfffff99b(%rip)
357a(5): mov $0x1,0xe(%rsp)
357f(2): xor %eax,%eax
3581(3): xor %r12d,%r12d
3584(9): mov $0x0,0x50(%rsp)
358d(5): jmp 0xfffff5a7(%rip)
3592(3): mov %r13,%rdx
3595(5): mov 0x50(%rsp),%r13
359a(5): jmp 0xfffff5f8(%rip)
359f(5): call 0xffffddf1(%rip)

"quotearg_n_options" :
35b0(2): push %r15
35b2(2): push %r14
35b4(3): movsxd %edi,%r15
35b7(2): push %r13
35b9(2): push %r12
35bb(3): mov %rdx,%r14
35be(1): push %rbp
35bf(1): push %rbx
35c0(3): mov %rcx,%rbp
35c3(4): sub $0x28,%rsp
35c7(5): mov %rsi,0x8(%rsp)
35cc(5): call 0xffffddd4(%rip)
35d1(3): mov %rax,%r13
35d4(2): mov (%rax),%eax
35d6(3): test %r15d,%r15d
35d9(7): mov 0x203a80(%rip),%rbx
35e0(4): mov %eax,0x18(%rsp)
35e4(6): js 0x16d(%rip)
35ea(7): cmp %r15d,0x203a67(%rip)
35f1(2): jnle 0x64(%rip)
35f3(7): cmp $0x7fffffff,%r15d
35fa(6): jz 0x15c(%rip)
3600(4): lea 0x1(%r15),%r12d
3604(7): lea 0x203a65(%rip),%rax
360b(3): movsxd %r12d,%rsi
360e(4): shl/sal $0x4,%rsi
3612(3): cmp %rax,%rbx
3615(6): jz 0x11b(%rip)
361b(3): mov %rbx,%rdi
361e(5): call 0xf72(%rip)
3623(3): mov %rax,%rbx
3626(7): mov %rax,0x203a33(%rip)
362d(7): movsxd 0x203a24(%rip),%rdi
3634(3): mov %r12d,%edx
3637(2): xor %esi,%esi
3639(2): sub %edi,%edx
363b(4): shl/sal $0x4,%rdi
363f(3): movsxd %edx,%rdx
3642(3): add %rbx,%rdi
3645(4): shl/sal $0x4,%rdx
3649(5): call 0xffffde87(%rip)
364e(7): mov %r12d,0x203a03(%rip)
3655(3): mov 0x4(%rbp),%eax
3658(4): shl/sal $0x4,%r15
365c(4): sub $0x8,%rsp
3660(3): add %r15,%rbx
3663(4): lea 0x8(%rbp),%r15
3667(4): mov 0x0(%rbp),%r8d
366b(3): mov (%rbx),%r11
366e(4): mov 0x8(%rbx),%r12
3672(3): mov %r14,%rcx
3675(3): or $0x1,%eax
3678(4): mov %eax,0x24(%rsp)
367c(3): push 0x30(%rbp)
367f(3): mov %eax,%r9d
3682(3): push 0x28(%rbp)
3685(2): push %r15
3687(3): mov %r11,%rsi
368a(5): mov 0x28(%rsp),%rdx
368f(3): mov %r12,%rdi
3692(5): mov %r11,0x30(%rsp)
3697(5): call 0xffffecd9(%rip)
369c(4): add $0x20,%rsp
36a0(5): mov 0x10(%rsp),%r11
36a5(3): cmp %rax,%r11
36a8(2): jnbe 0x69(%rip)
36aa(4): lea 0x1(%rax),%rsi
36ae(7): lea 0x203a2b(%rip),%rax
36b5(3): cmp %rax,%r12
36b8(3): mov %rsi,(%rbx)
36bb(2): jz 0x14(%rip)
36bd(3): mov %r12,%rdi
36c0(5): mov %rsi,0x10(%rsp)
36c5(5): call 0xffffdcbb(%rip)
36ca(5): mov 0x10(%rsp),%rsi
36cf(3): mov %rsi,%rdi
36d2(5): mov %rsi,0x10(%rsp)
36d7(5): call 0xe59(%rip)
36dc(4): sub $0x8,%rsp
36e0(4): mov %rax,0x8(%rbx)
36e4(4): mov 0x0(%rbp),%r8d
36e8(3): push 0x30(%rbp)
36eb(3): push 0x28(%rbp)
36ee(3): mov %r14,%rcx
36f1(2): push %r15
36f3(5): mov 0x3c(%rsp),%r9d
36f8(3): mov %rax,%rdi
36fb(5): mov 0x28(%rsp),%rdx
3700(5): mov 0x30(%rsp),%rsi
3705(3): mov %rax,%r12
3708(5): call 0xffffec68(%rip)
370d(4): add $0x20,%rsp
3711(4): mov 0x18(%rsp),%eax
3715(4): mov %eax,0x0(%r13)
3719(4): add $0x28,%rsp
371d(3): mov %r12,%rax
3720(1): pop %rbx
3721(1): pop %rbp
3722(2): pop %r12
3724(2): pop %r13
3726(2): pop %r14
3728(2): pop %r15
372a(1): ret near (%rsp)
372b(5): nop 0x0(%rax,%rax,1)
3730(2): xor %edi,%edi
3732(5): call 0xe5e(%rip)
3737(8): movdqa 0x203931(%rip),%xmm0
373f(3): mov %rax,%rbx
3742(7): mov %rax,0x203917(%rip)
3749(3): movups %xmm0,(%rax)
374c(5): jmp 0xfffffee1(%rip)
3751(5): call 0xffffdc3f(%rip)
3756(5): call 0x102a(%rip)

"clone_quoting_options" :
3760(2): push %r12
3762(1): push %rbp
3763(1): push %rbx
3764(3): mov %rdi,%rbx
3767(5): call 0xffffdc39(%rip)
376c(3): mov (%rax),%r12d
376f(3): mov %rax,%rbp
3772(7): lea 0x203a67(%rip),%rax
3779(3): test %rbx,%rbx
377c(5): mov $0x38,%esi
3781(4): cmove %rax,%rbx
3785(3): mov %rbx,%rdi
3788(5): call 0xfa8(%rip)
378d(4): mov %r12d,0x0(%rbp)
3791(1): pop %rbx
3792(1): pop %rbp
3793(2): pop %r12
3795(1): ret near (%rsp)

"get_quoting_style" :
37a0(7): lea 0x203a39(%rip),%rax
37a7(3): test %rdi,%rdi
37aa(4): cmove %rax,%rdi
37ae(2): mov (%rdi),%eax
37b0(1): ret near (%rsp)

"set_quoting_style" :
37c0(7): lea 0x203a19(%rip),%rax
37c7(3): test %rdi,%rdi
37ca(4): cmove %rax,%rdi
37ce(2): mov %esi,(%rdi)
37d0(1): ret near (%rsp)

"set_char_quoting" :
37e0(7): lea 0x2039f9(%rip),%rax
37e7(3): test %rdi,%rdi
37ea(2): mov %esi,%ecx
37ec(4): cmove %rax,%rdi
37f0(2): mov %esi,%eax
37f2(3): and $0x1f,%ecx
37f5(3): shr $0x5,%al
37f8(3): movzx %al,%eax
37fb(5): lea 0x8(%rdi,%rax,4),%rdi
3800(2): mov (%rdi),%esi
3802(2): mov %esi,%eax
3804(2): shr %cl,%eax
3806(2): xor %eax,%edx
3808(3): and $0x1,%eax
380b(3): and $0x1,%edx
380e(2): shl/sal %cl,%edx
3810(2): xor %esi,%edx
3812(2): mov %edx,(%rdi)
3814(1): ret near (%rsp)

"set_quoting_flags" :
3820(7): lea 0x2039b9(%rip),%rax
3827(3): test %rdi,%rdi
382a(4): cmove %rax,%rdi
382e(3): mov 0x4(%rdi),%eax
3831(3): mov %esi,0x4(%rdi)
3834(1): ret near (%rsp)

"set_custom_quoting" :
3840(7): lea 0x203999(%rip),%rax
3847(3): test %rdi,%rdi
384a(4): cmove %rax,%rdi
384e(3): test %rsi,%rsi
3851(6): mov $0xa,(%rdi)
3857(2): jz 0x10(%rip)
3859(3): test %rdx,%rdx
385c(2): jz 0xb(%rip)
385e(4): mov %rsi,0x28(%rdi)
3862(4): mov %rdx,0x30(%rdi)
3866(1): ret near (%rsp)
3867(4): sub $0x8,%rsp
386b(5): call 0xffffdb25(%rip)

"quotearg_buffer" :
3870(2): push %r15
3872(2): push %r14
3874(7): lea 0x203965(%rip),%rax
387b(2): push %r13
387d(2): push %r12
387f(3): mov %rdi,%r13
3882(1): push %rbp
3883(1): push %rbx
3884(3): mov %r8,%rbx
3887(3): mov %rsi,%r14
388a(3): mov %rdx,%r15
388d(4): sub $0x18,%rsp
3891(3): test %r8,%r8
3894(4): cmove %rax,%rbx
3898(5): mov %rcx,0x8(%rsp)
389d(5): call 0xffffdb03(%rip)
38a2(3): mov (%rax),%r12d
38a5(3): mov %rax,%rbp
38a8(4): lea 0x8(%rbx),%rax
38ac(4): sub $0x8,%rsp
38b0(4): mov 0x4(%rbx),%r9d
38b4(3): push 0x30(%rbx)
38b7(3): mov (%rbx),%r8d
38ba(3): push 0x28(%rbx)
38bd(3): mov %r15,%rdx
38c0(1): push %rax
38c1(5): mov 0x28(%rsp),%rcx
38c6(3): mov %r14,%rsi
38c9(3): mov %r13,%rdi
38cc(5): call 0xffffeaa4(%rip)
38d1(4): mov %r12d,0x0(%rbp)
38d5(4): add $0x38,%rsp
38d9(1): pop %rbx
38da(1): pop %rbp
38db(2): pop %r12
38dd(2): pop %r13
38df(2): pop %r14
38e1(2): pop %r15
38e3(1): ret near (%rsp)

"quotearg_alloc_mem" :
38f0(2): push %r15
38f2(2): push %r14
38f4(7): lea 0x2038e5(%rip),%rax
38fb(2): push %r13
38fd(2): push %r12
38ff(3): mov %rdx,%r12
3902(1): push %rbp
3903(1): push %rbx
3904(3): mov %rcx,%rbx
3907(3): mov %rdi,%r14
390a(3): mov %rsi,%r15
390d(4): sub $0x38,%rsp
3911(3): test %rcx,%rcx
3914(4): cmove %rax,%rbx
3918(2): xor %ebp,%ebp
391a(5): call 0xffffda86(%rip)
391f(3): test %r12,%r12
3922(3): mov %rax,%r13
3925(2): mov (%rax),%eax
3927(4): setz %bpl
392b(3): or 0x4(%rbx),%ebp
392e(4): lea 0x8(%rbx),%r10
3932(4): sub $0x8,%rsp
3936(3): mov (%rbx),%r8d
3939(3): mov %r15,%rcx
393c(4): mov %eax,0x14(%rsp)
3940(3): push 0x30(%rbx)
3943(3): mov %r14,%rdx
3946(3): push 0x28(%rbx)
3949(2): push %r10
394b(2): xor %esi,%esi
394d(3): mov %ebp,%r9d
3950(2): xor %edi,%edi
3952(5): mov %r10,0x40(%rsp)
3957(5): call 0xffffea19(%rip)
395c(4): lea 0x1(%rax),%rsi
3960(5): mov %rax,0x48(%rsp)
3965(4): add $0x20,%rsp
3969(3): mov %rsi,%rdi
396c(5): mov %rsi,0x18(%rsp)
3971(5): call 0xbbf(%rip)
3976(5): mov %rax,0x10(%rsp)
397b(4): sub $0x8,%rsp
397f(3): push 0x30(%rbx)
3982(3): push 0x28(%rbx)
3985(5): mov 0x38(%rsp),%r10
398a(3): mov %ebp,%r9d
398d(3): mov (%rbx),%r8d
3990(3): mov %r15,%rcx
3993(3): mov %r14,%rdx
3996(3): mov %rax,%rdi
3999(2): push %r10
399b(5): mov 0x38(%rsp),%rsi
39a0(5): call 0xffffe9d0(%rip)
39a5(4): mov 0x2c(%rsp),%eax
39a9(4): add $0x20,%rsp
39ad(3): test %r12,%r12
39b0(4): mov %eax,0x0(%r13)
39b4(2): jz 0xb(%rip)
39b6(5): mov 0x28(%rsp),%r11
39bb(4): mov %r11,(%r12)
39bf(5): mov 0x10(%rsp),%rax
39c4(4): add $0x38,%rsp
39c8(1): pop %rbx
39c9(1): pop %rbp
39ca(2): pop %r12
39cc(2): pop %r13
39ce(2): pop %r14
39d0(2): pop %r15
39d2(1): ret near (%rsp)

"quotearg_alloc" :
39e0(3): mov %rdx,%rcx
39e3(2): xor %edx,%edx
39e5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
39f0(6): mov 0x203662(%rip),%eax
39f6(2): push %r12
39f8(7): mov 0x203661(%rip),%r12
39ff(1): push %rbp
3a00(1): push %rbx
3a01(3): cmp $0x1,%eax
3a04(2): jle 0x2d(%rip)
3a06(3): sub $0x2,%eax
3a09(5): lea 0x18(%r12),%rbx
3a0e(4): shl/sal $0x4,%rax
3a12(5): lea 0x28(%r12,%rax,1),%rbp
3a17(9): nop 0x0(%rax,%rax,1)
3a20(3): mov (%rbx),%rdi
3a23(4): add $0x10,%rbx
3a27(5): call 0xffffd959(%rip)
3a2c(3): cmp %rbp,%rbx
3a2f(2): jnz 0xfffffff1(%rip)
3a31(5): mov 0x8(%r12),%rdi
3a36(7): lea 0x2036a3(%rip),%rbx
3a3d(3): cmp %rbx,%rdi
3a40(2): jz 0x19(%rip)
3a42(5): call 0xffffd93e(%rip)
3a47(b): mov $0x100,0x20361e(%rip)
3a52(7): mov %rbx,0x20361f(%rip)
3a59(7): lea 0x203610(%rip),%rbx
3a60(3): cmp %rbx,%r12
3a63(2): jz 0x11(%rip)
3a65(3): mov %r12,%rdi
3a68(5): call 0xffffd918(%rip)
3a6d(7): mov %rbx,0x2035ec(%rip)
3a74(1): pop %rbx
3a75(a): mov $0x1,0x2035d9(%rip)
3a7f(1): pop %rbp
3a80(2): pop %r12
3a82(1): ret near (%rsp)

"quotearg_n" :
3a90(7): lea 0x203749(%rip),%rcx
3a97(7): mov $0xffffffff,%rdx
3a9e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3ab0(7): lea 0x203729(%rip),%rcx
3ab7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3ac0(7): lea 0x203719(%rip),%rcx
3ac7(3): mov %rdi,%rsi
3aca(7): mov $0xffffffff,%rdx
3ad1(2): xor %edi,%edi
3ad3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3ae0(7): lea 0x2036f9(%rip),%rcx
3ae7(3): mov %rsi,%rdx
3aea(3): mov %rdi,%rsi
3aed(2): xor %edi,%edi
3aef(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3b00(4): sub $0x48,%rsp
3b04(3): mov %rdx,%rax
3b07(9): mov $0x28,%rdx
3b10(5): mov %rdx,0x38(%rsp)
3b15(2): xor %edx,%edx
3b17(3): cmp $0xa,%esi
3b1a(2): jz 0x6a(%rip)
3b1c(3): mov %esi,(%rsp)
3b1f(3): mov %rsp,%rcx
3b22(7): mov $0xffffffff,%rdx
3b29(3): mov %rax,%rsi
3b2c(9): mov $0x0,0x4(%rsp)
3b35(9): mov $0x0,0xc(%rsp)
3b3e(9): mov $0x0,0x14(%rsp)
3b47(9): mov $0x0,0x1c(%rsp)
3b50(9): mov $0x0,0x24(%rsp)
3b59(9): mov $0x0,0x2c(%rsp)
3b62(8): mov $0x0,0x34(%rsp)
3b6a(5): call 0xfffffa46(%rip)
3b6f(5): mov 0x38(%rsp),%rcx
3b74(9): xor $0x28,%rcx
3b7d(2): jnz 0xc(%rip)
3b7f(4): add $0x48,%rsp
3b83(1): ret near (%rsp)
3b84(5): call 0xffffd80c(%rip)
3b89(5): call 0xffffd8c7(%rip)

"quotearg_n_style_mem" :
3b90(4): sub $0x48,%rsp
3b94(3): mov %rdx,%rax
3b97(3): mov %rcx,%rdx
3b9a(9): mov $0x28,%rcx
3ba3(5): mov %rcx,0x38(%rsp)
3ba8(2): xor %ecx,%ecx
3baa(3): cmp $0xa,%esi
3bad(2): jz 0x63(%rip)
3baf(3): mov %esi,(%rsp)
3bb2(3): mov %rsp,%rcx
3bb5(3): mov %rax,%rsi
3bb8(9): mov $0x0,0x4(%rsp)
3bc1(9): mov $0x0,0xc(%rsp)
3bca(9): mov $0x0,0x14(%rsp)
3bd3(9): mov $0x0,0x1c(%rsp)
3bdc(9): mov $0x0,0x24(%rsp)
3be5(9): mov $0x0,0x2c(%rsp)
3bee(8): mov $0x0,0x34(%rsp)
3bf6(5): call 0xfffff9ba(%rip)
3bfb(5): mov 0x38(%rsp),%rdx
3c00(9): xor $0x28,%rdx
3c09(2): jnz 0xc(%rip)
3c0b(4): add $0x48,%rsp
3c0f(1): ret near (%rsp)
3c10(5): call 0xffffd780(%rip)
3c15(5): call 0xffffd83b(%rip)

"quotearg_style" :
3c20(3): mov %rsi,%rdx
3c23(2): mov %edi,%esi
3c25(2): xor %edi,%edi
3c27(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3c30(3): mov %rdx,%rcx
3c33(3): mov %rsi,%rdx
3c36(2): mov %edi,%esi
3c38(2): xor %edi,%edi
3c3a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3c40(4): sub $0x48,%rsp
3c44(2): mov %edx,%ecx
3c46(9): mov $0x28,%rax
3c4f(5): mov %rax,0x38(%rsp)
3c54(2): xor %eax,%eax
3c56(7): mov 0x2035b3(%rip),%rax
3c5d(3): mov %rsp,%r8
3c60(3): and $0x1f,%ecx
3c63(8): movdqa 0x203575(%rip),%xmm0
3c6b(5): mov %rax,0x30(%rsp)
3c70(2): mov %edx,%eax
3c72(4): movaps %xmm0,(%rsp)
3c76(3): shr $0x5,%al
3c79(3): movzx %al,%eax
3c7c(5): lea 0x8(%r8,%rax,4),%r9
3c81(8): movdqa 0x203567(%rip),%xmm0
3c89(5): movaps %xmm0,0x10(%rsp)
3c8e(8): movdqa 0x20356a(%rip),%xmm0
3c96(5): movaps %xmm0,0x20(%rsp)
3c9b(3): mov (%r9),%edx
3c9e(2): mov %edx,%eax
3ca0(2): shr %cl,%eax
3ca2(2): not %eax
3ca4(3): and $0x1,%eax
3ca7(2): shl/sal %cl,%eax
3ca9(3): mov %r8,%rcx
3cac(2): xor %edx,%eax
3cae(3): mov %rsi,%rdx
3cb1(3): mov %rdi,%rsi
3cb4(3): mov %eax,(%r9)
3cb7(2): xor %edi,%edi
3cb9(5): call 0xfffff8f7(%rip)
3cbe(5): mov 0x38(%rsp),%rsi
3cc3(9): xor $0x28,%rsi
3ccc(2): jnz 0x7(%rip)
3cce(4): add $0x48,%rsp
3cd2(1): ret near (%rsp)
3cd3(5): call 0xffffd77d(%rip)

"quotearg_char" :
3ce0(4): movsx %sil,%edx
3ce4(7): mov $0xffffffff,%rsi
3ceb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3cf0(5): mov $0x3a,%edx
3cf5(7): mov $0xffffffff,%rsi
3cfc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3d10(5): mov $0x3a,%edx
3d15(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3d20(4): sub $0x48,%rsp
3d24(3): mov %rdx,%rax
3d27(9): mov $0x28,%rdx
3d30(5): mov %rdx,0x38(%rsp)
3d35(2): xor %edx,%edx
3d37(3): cmp $0xa,%esi
3d3a(2): jz 0x6a(%rip)
3d3c(3): mov %esi,(%rsp)
3d3f(3): mov %rsp,%rcx
3d42(7): mov $0xffffffff,%rdx
3d49(3): mov %rax,%rsi
3d4c(9): mov $0x0,0x4(%rsp)
3d55(9): mov $0x4000000,0xc(%rsp)
3d5e(9): mov $0x0,0x14(%rsp)
3d67(9): mov $0x0,0x1c(%rsp)
3d70(9): mov $0x0,0x24(%rsp)
3d79(9): mov $0x0,0x2c(%rsp)
3d82(8): mov $0x0,0x34(%rsp)
3d8a(5): call 0xfffff826(%rip)
3d8f(5): mov 0x38(%rsp),%rcx
3d94(9): xor $0x28,%rcx
3d9d(2): jnz 0xc(%rip)
3d9f(4): add $0x48,%rsp
3da3(1): ret near (%rsp)
3da4(5): call 0xffffd5ec(%rip)
3da9(5): call 0xffffd6a7(%rip)

"quotearg_n_custom_mem" :
3db0(4): sub $0x48,%rsp
3db4(3): mov %rcx,%r9
3db7(7): mov 0x203452(%rip),%rcx
3dbe(8): movdqa 0x20341a(%rip),%xmm0
3dc6(9): mov $0x28,%rax
3dcf(5): mov %rax,0x38(%rsp)
3dd4(2): xor %eax,%eax
3dd6(4): movaps %xmm0,(%rsp)
3dda(3): test %rsi,%rsi
3ddd(5): mov %rcx,0x30(%rsp)
3de2(7): mov $0xa,(%rsp)
3de9(8): movdqa 0x2033ff(%rip),%xmm0
3df1(5): movaps %xmm0,0x10(%rsp)
3df6(8): movdqa 0x203402(%rip),%xmm0
3dfe(5): movaps %xmm0,0x20(%rsp)
3e03(2): jz 0x34(%rip)
3e05(3): test %rdx,%rdx
3e08(2): jz 0x2f(%rip)
3e0a(5): mov %rsi,0x28(%rsp)
3e0f(5): mov %rdx,0x30(%rsp)
3e14(3): mov %rsp,%rcx
3e17(3): mov %r8,%rdx
3e1a(3): mov %r9,%rsi
3e1d(5): call 0xfffff793(%rip)
3e22(5): mov 0x38(%rsp),%rdi
3e27(9): xor $0x28,%rdi
3e30(2): jnz 0xc(%rip)
3e32(4): add $0x48,%rsp
3e36(1): ret near (%rsp)
3e37(5): call 0xffffd559(%rip)
3e3c(5): call 0xffffd614(%rip)

"quotearg_n_custom" :
3e50(7): mov $0xffffffff,%r8
3e57(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3e60(3): mov %rdx,%rcx
3e63(7): mov $0xffffffff,%r8
3e6a(3): mov %rsi,%rdx
3e6d(3): mov %rdi,%rsi
3e70(2): xor %edi,%edi
3e72(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3e80(3): mov %rcx,%r8
3e83(3): mov %rdx,%rcx
3e86(3): mov %rsi,%rdx
3e89(3): mov %rdi,%rsi
3e8c(2): xor %edi,%edi
3e8e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3ea0(7): lea 0x203179(%rip),%rcx
3ea7(5): jmp 0xfffff709(%rip)

"quote_mem" :
3eb0(7): lea 0x203169(%rip),%rcx
3eb7(3): mov %rsi,%rdx
3eba(3): mov %rdi,%rsi
3ebd(2): xor %edi,%edi
3ebf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3ed0(7): lea 0x203149(%rip),%rcx
3ed7(7): mov $0xffffffff,%rdx
3ede(5): jmp 0xfffff6d2(%rip)

"quote" :
3ef0(7): lea 0x203129(%rip),%rcx
3ef7(3): mov %rdi,%rsi
3efa(7): mov $0xffffffff,%rdx
3f01(2): xor %edi,%edi
3f03(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3f10(2): push %r15
3f12(2): push %r14
3f14(2): push %r13
3f16(2): push %r12
3f18(3): mov %r9,%r12
3f1b(1): push %rbp
3f1c(1): push %rbx
3f1d(3): mov %rdi,%rbp
3f20(3): mov %r8,%rbx
3f23(4): sub $0x28,%rsp
3f27(3): test %rsi,%rsi
3f2a(6): jz 0x11e(%rip)
3f30(3): mov %rdx,%r8
3f33(7): lea 0x17ce(%rip),%rdx
3f3a(3): mov %rcx,%r9
3f3d(2): xor %eax,%eax
3f3f(3): mov %rsi,%rcx
3f42(5): mov $0x1,%esi
3f47(5): call 0xffffd6f9(%rip)
3f4c(7): lea 0x17c8(%rip),%rsi
3f53(2): xor %edi,%edi
3f55(5): mov $0x5,%edx
3f5a(5): call 0xffffd4c6(%rip)
3f5f(7): lea 0x1ada(%rip),%rdx
3f66(3): mov %rax,%rcx
3f69(6): mov $0x7e3,%r8d
3f6f(5): mov $0x1,%esi
3f74(3): mov %rbp,%rdi
3f77(2): xor %eax,%eax
3f79(5): call 0xffffd6c7(%rip)
3f7e(7): lea 0x1823(%rip),%rsi
3f85(2): xor %edi,%edi
3f87(5): mov $0x5,%edx
3f8c(5): call 0xffffd494(%rip)
3f91(3): mov %rbp,%rsi
3f94(3): mov %rax,%rdi
3f97(5): call 0xffffd559(%rip)
3f9c(4): cmp $0x9,%r12
3fa0(6): jnbe 0x340(%rip)
3fa6(7): lea 0x1a5b(%rip),%rdx
3fad(4): movsxd 0x0(%rdx,%r12,4),%rax
3fb1(3): add %rdx,%rax
3fb4(2): jmp %rax
3fb6(a): nop 0x0(%rax,%rax,1)
3fc0(4): mov 0x38(%rbx),%r9
3fc4(4): mov 0x10(%rbx),%rax
3fc8(7): lea 0x1949(%rip),%rsi
3fcf(4): mov 0x8(%rbx),%r8
3fd3(5): mov $0x5,%edx
3fd8(2): xor %edi,%edi
3fda(4): mov 0x30(%rbx),%r13
3fde(4): mov 0x28(%rbx),%r12
3fe2(5): mov %r9,0x10(%rsp)
3fe7(4): mov 0x20(%rbx),%r15
3feb(4): mov 0x18(%rbx),%r14
3fef(4): mov %rax,(%rsp)
3ff3(5): mov %r8,0x8(%rsp)
3ff8(3): mov (%rbx),%rbx
3ffb(5): call 0xffffd425(%rip)
4000(4): sub $0x8,%rsp
4004(5): mov 0x18(%rsp),%r9
4009(3): mov %rax,%rdx
400c(3): mov %rbx,%rcx
400f(5): mov $0x1,%esi
4014(3): mov %rbp,%rdi
4017(2): xor %eax,%eax
4019(2): push %r9
401b(2): push %r13
401d(2): push %r12
401f(2): push %r15
4021(2): push %r14
4023(5): mov 0x30(%rsp),%r9
4028(5): mov 0x38(%rsp),%r8
402d(5): call 0xffffd613(%rip)
4032(4): add $0x30,%rsp
4036(4): add $0x28,%rsp
403a(1): pop %rbx
403b(1): pop %rbp
403c(2): pop %r12
403e(2): pop %r13
4040(2): pop %r14
4042(2): pop %r15
4044(1): ret near (%rsp)
4045(3): nop (%rax)
4048(3): mov %rcx,%r8
404b(3): mov %rdx,%rcx
404e(7): lea 0x16bf(%rip),%rdx
4055(5): mov $0x1,%esi
405a(2): xor %eax,%eax
405c(5): call 0xffffd5e4(%rip)
4061(5): jmp 0xfffffeeb(%rip)
4066(a): nop 0x0(%rax,%rax,1)
4070(4): mov 0x40(%rbx),%r10
4074(4): mov 0x38(%rbx),%r9
4078(7): lea 0x18c9(%rip),%rsi
407f(4): mov 0x10(%rbx),%rax
4083(4): mov 0x8(%rbx),%r8
4087(5): mov $0x5,%edx
408c(4): mov 0x30(%rbx),%r13
4090(4): mov 0x28(%rbx),%r12
4094(4): mov 0x20(%rbx),%r15
4098(4): mov 0x18(%rbx),%r14
409c(3): mov (%rbx),%rbx
409f(5): mov %r10,0x18(%rsp)
40a4(5): mov %r9,0x10(%rsp)
40a9(4): mov %rax,(%rsp)
40ad(5): mov %r8,0x8(%rsp)
40b2(2): xor %edi,%edi
40b4(5): call 0xffffd36c(%rip)
40b9(5): mov 0x18(%rsp),%r10
40be(2): push %r10
40c0(5): jmp 0xffffff44(%rip)
40c5(3): nop (%rax)
40c8(3): mov (%rbx),%rbx
40cb(7): lea 0x164d(%rip),%rsi
40d2(5): mov $0x5,%edx
40d7(2): xor %edi,%edi
40d9(5): call 0xffffd347(%rip)
40de(4): add $0x28,%rsp
40e2(3): mov %rbx,%rcx
40e5(3): mov %rbp,%rdi
40e8(1): pop %rbx
40e9(1): pop %rbp
40ea(2): pop %r12
40ec(2): pop %r13
40ee(2): pop %r14
40f0(2): pop %r15
40f2(3): mov %rax,%rdx
40f5(5): mov $0x1,%esi
40fa(2): xor %eax,%eax
40fc(5): jmp 0xffffd544(%rip)
4101(7): nop 0x0(%rax)
4108(4): mov 0x8(%rbx),%r12
410c(7): lea 0x161c(%rip),%rsi
4113(3): mov (%rbx),%rbx
4116(5): mov $0x5,%edx
411b(2): xor %edi,%edi
411d(5): call 0xffffd303(%rip)
4122(4): add $0x28,%rsp
4126(3): mov %r12,%r8
4129(3): mov %rbx,%rcx
412c(3): mov %rbp,%rdi
412f(3): mov %rax,%rdx
4132(5): mov $0x1,%esi
4137(1): pop %rbx
4138(1): pop %rbp
4139(2): pop %r12
413b(2): pop %r13
413d(2): pop %r14
413f(2): pop %r15
4141(2): xor %eax,%eax
4143(5): jmp 0xffffd4fd(%rip)
4148(8): nop 0x0(%rax,%rax,1)
4150(4): mov 0x10(%rbx),%r13
4154(4): mov 0x8(%rbx),%r12
4158(7): lea 0x15e7(%rip),%rsi
415f(3): mov (%rbx),%rbx
4162(5): mov $0x5,%edx
4167(2): xor %edi,%edi
4169(5): call 0xffffd2b7(%rip)
416e(4): add $0x28,%rsp
4172(3): mov %r13,%r9
4175(3): mov %r12,%r8
4178(3): mov %rbx,%rcx
417b(3): mov %rbp,%rdi
417e(3): mov %rax,%rdx
4181(1): pop %rbx
4182(1): pop %rbp
4183(2): pop %r12
4185(2): pop %r13
4187(2): pop %r14
4189(2): pop %r15
418b(5): mov $0x1,%esi
4190(2): xor %eax,%eax
4192(5): jmp 0xffffd4ae(%rip)
4197(9): nop 0x0(%rax,%rax,1)
41a0(7): lea 0x16d1(%rip),%rsi
41a7(5): mov $0x5,%edx
41ac(2): xor %edi,%edi
41ae(4): mov 0x18(%rbx),%r14
41b2(4): mov 0x10(%rbx),%r13
41b6(4): mov 0x8(%rbx),%r12
41ba(3): mov (%rbx),%rbx
41bd(5): call 0xffffd263(%rip)
41c2(4): sub $0x8,%rsp
41c6(2): push %r14
41c8(3): mov %rax,%rdx
41cb(3): mov %r13,%r9
41ce(3): mov %r12,%r8
41d1(3): mov %rbx,%rcx
41d4(3): mov %rbp,%rdi
41d7(5): mov $0x1,%esi
41dc(2): xor %eax,%eax
41de(5): call 0xffffd462(%rip)
41e3(1): pop %rax
41e4(1): pop %rdx
41e5(4): add $0x28,%rsp
41e9(1): pop %rbx
41ea(1): pop %rbp
41eb(2): pop %r12
41ed(2): pop %r13
41ef(2): pop %r14
41f1(2): pop %r15
41f3(1): ret near (%rsp)
41f4(4): nop 0x0(%rax)
41f8(4): mov 0x20(%rbx),%r15
41fc(7): lea 0x1695(%rip),%rsi
4203(5): mov $0x5,%edx
4208(2): xor %edi,%edi
420a(4): mov 0x18(%rbx),%r14
420e(4): mov 0x10(%rbx),%r13
4212(4): mov 0x8(%rbx),%r12
4216(3): mov (%rbx),%rbx
4219(5): call 0xffffd207(%rip)
421e(2): push %r15
4220(2): jmp 0xffffffa6(%rip)
4222(6): nop 0x0(%rax,%rax,1)
4228(4): mov 0x8(%rbx),%r8
422c(4): mov 0x28(%rbx),%r12
4230(7): lea 0x1689(%rip),%rsi
4237(4): mov 0x20(%rbx),%r15
423b(4): mov 0x18(%rbx),%r14
423f(5): mov $0x5,%edx
4244(4): mov 0x10(%rbx),%r13
4248(2): xor %edi,%edi
424a(3): mov (%rbx),%rbx
424d(4): mov %r8,(%rsp)
4251(5): call 0xffffd1cf(%rip)
4256(4): sub $0x8,%rsp
425a(3): mov %r13,%r9
425d(2): push %r12
425f(2): push %r15
4261(2): push %r14
4263(5): mov 0x20(%rsp),%r8
4268(3): mov %rbx,%rcx
426b(3): mov %rax,%rdx
426e(3): mov %rbp,%rdi
4271(5): mov $0x1,%esi
4276(2): xor %eax,%eax
4278(5): call 0xffffd3c8(%rip)
427d(4): add $0x20,%rsp
4281(4): add $0x28,%rsp
4285(1): pop %rbx
4286(1): pop %rbp
4287(2): pop %r12
4289(2): pop %r13
428b(2): pop %r14
428d(2): pop %r15
428f(1): ret near (%rsp)
4290(4): mov 0x10(%rbx),%r9
4294(4): mov 0x30(%rbx),%r13
4298(7): lea 0x1649(%rip),%rsi
429f(4): mov 0x28(%rbx),%r12
42a3(4): mov 0x20(%rbx),%r15
42a7(5): mov $0x5,%edx
42ac(4): mov 0x18(%rbx),%r14
42b0(4): mov 0x8(%rbx),%r8
42b4(2): xor %edi,%edi
42b6(5): mov %r9,0x8(%rsp)
42bb(3): mov (%rbx),%rbx
42be(4): mov %r8,(%rsp)
42c2(5): call 0xffffd15e(%rip)
42c7(2): push %r13
42c9(2): push %r12
42cb(2): push %r15
42cd(2): push %r14
42cf(5): mov 0x28(%rsp),%r9
42d4(2): jmp 0xffffff8f(%rip)
42d6(a): nop 0x0(%rax,%rax,1)
42e0(4): mov 0x40(%rbx),%r10
42e4(4): mov 0x38(%rbx),%r9
42e8(5): mov $0x5,%edx
42ed(4): mov 0x10(%rbx),%rax
42f1(4): mov 0x8(%rbx),%r8
42f5(7): lea 0x1684(%rip),%rsi
42fc(4): mov 0x30(%rbx),%r13
4300(4): mov 0x28(%rbx),%r12
4304(4): mov 0x20(%rbx),%r15
4308(4): mov 0x18(%rbx),%r14
430c(5): mov %r10,0x18(%rsp)
4311(5): mov %r9,0x10(%rsp)
4316(4): mov %rax,(%rsp)
431a(5): mov %r8,0x8(%rsp)
431f(3): mov (%rbx),%rbx
4322(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4330(3): xor %r9d,%r9d
4333(4): cmp $0x0,(%r8)
4337(2): jz 0x14(%rip)
4339(7): nop 0x0(%rax)
4340(4): add $0x1,%r9
4344(5): cmp $0x0,0x0(%r8,%r9,8)
4349(2): jnz 0xfffffff7(%rip)
434b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4350(4): sub $0x68,%rsp
4354(3): mov %r8,%r10
4357(3): xor %r9d,%r9d
435a(9): mov $0x28,%rax
4363(5): mov %rax,0x58(%rsp)
4368(2): xor %eax,%eax
436a(3): mov %rsp,%r8
436d(3): nop (%rax)
4370(3): mov (%r10),%eax
4373(3): cmp $0x2f,%eax
4376(2): jnbe 0x44(%rip)
4378(3): mov %eax,%r11d
437b(4): add 0x10(%r10),%r11
437f(3): add $0x8,%eax
4382(3): mov %eax,(%r10)
4385(3): mov (%r11),%rax
4388(3): test %rax,%rax
438b(4): mov %rax,0x0(%r8,%r9,8)
438f(2): jz 0xc(%rip)
4391(4): add $0x1,%r9
4395(4): cmp $0xa,%r9
4399(2): jnz 0xffffffd7(%rip)
439b(5): call 0xfffffb75(%rip)
43a0(5): mov 0x58(%rsp),%rax
43a5(9): xor $0x28,%rax
43ae(2): jnz 0x7(%rip)
43b0(4): add $0x68,%rsp
43b4(1): ret near (%rsp)
43b5(5): call 0xffffd09b(%rip)
43ba(4): mov 0x8(%r10),%r11
43be(4): lea 0x8(%r11),%rax
43c2(4): mov %rax,0x8(%r10)
43c6(2): jmp 0xffffffbf(%rip)

"version_etc" :
43d0(1): push %rbp
43d1(1): push %rbx
43d2(6): mov $0x20,%r10d
43d8(3): xor %r11d,%r11d
43db(7): sub $0xb8,%rsp
43e2(9): mov $0x28,%rax
43eb(5): mov %rax,0x78(%rsp)
43f0(2): xor %eax,%eax
43f2(8): lea 0xd0(%rsp),%rax
43fa(8): mov %r8,0xa0(%rsp)
4402(8): lea 0xd0(%rsp),%rbx
440a(5): lea 0x20(%rsp),%r8
440f(8): mov %r9,0xa8(%rsp)
4417(8): mov $0x20,0x8(%rsp)
441f(5): mov %rax,0x10(%rsp)
4424(8): lea 0x80(%rsp),%rax
442c(3): xor %r9d,%r9d
442f(5): mov %rax,0x18(%rsp)
4434(3): mov %rax,%rbp
4437(9): nop 0x0(%rax,%rax,1)
4440(4): cmp $0x2f,%r10d
4444(2): jnbe 0x58(%rip)
4446(3): mov %r10d,%eax
4449(6): mov $0x1,%r11d
444f(4): add $0x8,%r10d
4453(3): add %rbp,%rax
4456(3): mov (%rax),%rax
4459(3): test %rax,%rax
445c(4): mov %rax,0x0(%r8,%r9,8)
4460(2): jz 0xc(%rip)
4462(4): add $0x1,%r9
4466(4): cmp $0xa,%r9
446a(2): jnz 0xffffffd6(%rip)
446c(3): test %r11b,%r11b
446f(2): jnz 0x26(%rip)
4471(5): call 0xfffffa9f(%rip)
4476(5): mov 0x78(%rsp),%rax
447b(9): xor $0x28,%rax
4484(2): jnz 0xc(%rip)
4486(7): add $0xb8,%rsp
448d(1): pop %rbx
448e(1): pop %rbp
448f(1): ret near (%rsp)
4490(5): call 0xffffcfc0(%rip)
4495(5): mov %r10d,0x8(%rsp)
449a(2): jmp 0xffffffd7(%rip)
449c(3): mov %rbx,%rax
449f(4): add $0x8,%rbx
44a3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
44b0(1): push %rbx
44b1(7): lea 0x12aa(%rip),%rsi
44b8(5): mov $0x5,%edx
44bd(2): xor %edi,%edi
44bf(5): call 0xffffcf61(%rip)
44c4(7): lea 0x12ac(%rip),%rdx
44cb(3): mov %rax,%rsi
44ce(5): mov $0x1,%edi
44d3(2): xor %eax,%eax
44d5(5): call 0xffffd0fb(%rip)
44da(7): lea 0x12ac(%rip),%rsi
44e1(5): mov $0x5,%edx
44e6(2): xor %edi,%edi
44e8(5): call 0xffffcf38(%rip)
44ed(7): lea 0xbb4(%rip),%rcx
44f4(7): lea 0x986(%rip),%rdx
44fb(3): mov %rax,%rsi
44fe(5): mov $0x1,%edi
4503(2): xor %eax,%eax
4505(5): call 0xffffd0cb(%rip)
450a(7): mov 0x202b77(%rip),%rbx
4511(7): lea 0x14a8(%rip),%rsi
4518(2): xor %edi,%edi
451a(5): mov $0x5,%edx
451f(5): call 0xffffcf01(%rip)
4524(3): mov %rbx,%rsi
4527(3): mov %rax,%rdi
452a(1): pop %rbx
452b(5): jmp 0xffffcfc5(%rip)

"xmalloc" :
4530(1): push %rbx
4531(3): mov %rdi,%rbx
4534(5): call 0xffffd02c(%rip)
4539(3): test %rax,%rax
453c(2): jnz 0x7(%rip)
453e(3): test %rbx,%rbx
4541(2): jnz 0x4(%rip)
4543(1): pop %rbx
4544(1): ret near (%rsp)
4545(5): call 0x23b(%rip)

"xnmalloc" :
4550(3): mov %rdi,%rax
4553(3): mul %rax,%rsi,%rdx
4556(3): mov %rax,%rdi
4559(3): seto %al
455c(3): test %rdi,%rdi
455f(2): js 0xc(%rip)
4561(3): movzx %al,%eax
4564(3): test %rax,%rax
4567(2): jnz 0x4(%rip)
4569(2): jmp 0xffffffc7(%rip)
456b(4): sub $0x8,%rsp
456f(5): call 0x211(%rip)

"xrealloc" :
4590(3): test %rsi,%rsi
4593(1): push %rbx
4594(3): mov %rsi,%rbx
4597(2): jnz 0x7(%rip)
4599(3): test %rdi,%rdi
459c(2): jnz 0x1c(%rip)
459e(3): mov %rbx,%rsi
45a1(5): call 0xffffd00f(%rip)
45a6(3): test %rax,%rax
45a9(2): jnz 0x7(%rip)
45ab(3): test %rbx,%rbx
45ae(2): jnz 0x13(%rip)
45b0(1): pop %rbx
45b1(1): ret near (%rsp)
45b2(6): nop 0x0(%rax,%rax,1)
45b8(5): call 0xffffcdc8(%rip)
45bd(2): xor %eax,%eax
45bf(1): pop %rbx
45c0(1): ret near (%rsp)
45c1(5): call 0x1bf(%rip)

"xnrealloc" :
45d0(3): mov %rsi,%rax
45d3(3): mul %rax,%rdx,%rdx
45d6(3): mov %rax,%rsi
45d9(3): seto %al
45dc(3): test %rsi,%rsi
45df(2): js 0xc(%rip)
45e1(3): movzx %al,%eax
45e4(3): test %rax,%rax
45e7(2): jnz 0x4(%rip)
45e9(2): jmp 0xffffffa7(%rip)
45eb(4): sub $0x8,%rsp
45ef(5): call 0x191(%rip)

"x2nrealloc" :
4600(3): test %rdi,%rdi
4603(3): mov %rdx,%r9
4606(3): mov (%rsi),%rcx
4609(2): jz 0x37(%rip)
460b(2): xor %edx,%edx
460d(a): mov $0x6148914691236517204,%rax
4617(3): div %r9,%rax
461a(3): cmp %rcx,%rax
461d(2): jbe 0x3e(%rip)
461f(3): mov %rcx,%rax
4622(3): shr $0x1,%rax
4625(5): lea 0x1(%rax,%rcx,1),%rcx
462a(3): mov %rcx,(%rsi)
462d(4): imul %r9,%rcx
4631(3): mov %rcx,%rsi
4634(5): jmp 0xffffff5c(%rip)
4639(7): nop 0x0(%rax)
4640(3): test %rcx,%rcx
4643(2): jz 0x25(%rip)
4645(3): mov %rcx,%rax
4648(3): mul %rax,%r9,%rdx
464b(3): seto %dl
464e(3): test %rax,%rax
4651(3): movzx %dl,%edx
4654(2): js 0x7(%rip)
4656(3): test %rdx,%rdx
4659(2): jz 0xffffffd1(%rip)
465b(4): sub $0x8,%rsp
465f(5): call 0x121(%rip)
4664(4): nop 0x0(%rax)
4668(2): xor %edx,%edx
466a(5): mov $0x80,%eax
466f(3): xor %r8d,%r8d
4672(3): div %r9,%rax
4675(3): test %rax,%rax
4678(4): setz %r8b
467c(4): lea 0x0(%r8,%rax,1),%rcx
4680(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4690(3): test %rdi,%rdi
4693(3): mov (%rsi),%rax
4696(2): jz 0x2a(%rip)
4698(a): mov $0x6148914691236517203,%rdx
46a2(3): cmp %rdx,%rax
46a5(2): jnbe 0x2c(%rip)
46a7(3): mov %rax,%rdx
46aa(3): shr $0x1,%rdx
46ad(5): lea 0x1(%rdx,%rax,1),%rax
46b2(3): mov %rax,(%rsi)
46b5(3): mov %rax,%rsi
46b8(5): jmp 0xfffffed8(%rip)
46bd(3): nop (%rax)
46c0(3): test %rax,%rax
46c3(5): mov $0x80,%edx
46c8(4): cmove %rdx,%rax
46cc(3): test %rax,%rax
46cf(2): jns 0xffffffe3(%rip)
46d1(4): sub $0x8,%rsp
46d5(5): call 0xab(%rip)

"xzalloc" :
46e0(1): push %rbx
46e1(3): mov %rdi,%rbx
46e4(5): call 0xfffffe4c(%rip)
46e9(3): mov %rbx,%rdx
46ec(2): xor %esi,%esi
46ee(3): mov %rax,%rdi
46f1(1): pop %rbx
46f2(5): jmp 0xffffcdde(%rip)

"xcalloc" :
4700(3): mov %rdi,%rax
4703(4): sub $0x8,%rsp
4707(3): mul %rax,%rsi,%rdx
470a(3): seto %dl
470d(3): test %rax,%rax
4710(2): js 0x19(%rip)
4712(3): movzx %dl,%edx
4715(3): test %rdx,%rdx
4718(2): jnz 0x11(%rip)
471a(5): call 0xffffcde6(%rip)
471f(3): test %rax,%rax
4722(2): jz 0x7(%rip)
4724(4): add $0x8,%rsp
4728(1): ret near (%rsp)
4729(5): call 0x57(%rip)

"xmemdup" :
4730(1): push %rbp
4731(1): push %rbx
4732(3): mov %rdi,%rbp
4735(3): mov %rsi,%rdi
4738(3): mov %rsi,%rbx
473b(4): sub $0x8,%rsp
473f(5): call 0xfffffdf1(%rip)
4744(4): add $0x8,%rsp
4748(3): mov %rbx,%rdx
474b(3): mov %rbp,%rsi
474e(1): pop %rbx
474f(1): pop %rbp
4750(3): mov %rax,%rdi
4753(5): jmp 0xffffcdcd(%rip)

"xstrdup" :
4760(1): push %rbx
4761(3): mov %rdi,%rbx
4764(5): call 0xffffccdc(%rip)
4769(3): mov %rbx,%rdi
476c(4): lea 0x1(%rax),%rsi
4770(1): pop %rbx
4771(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4780(7): lea 0x12e8(%rip),%rsi
4787(4): sub $0x8,%rsp
478b(5): mov $0x5,%edx
4790(2): xor %edi,%edi
4792(5): call 0xffffcc8e(%rip)
4797(6): mov 0x20287b(%rip),%edi
479d(7): lea 0xa3e(%rip),%rdx
47a4(3): mov %rax,%rcx
47a7(2): xor %esi,%esi
47a9(2): xor %eax,%eax
47ab(5): call 0xffffce35(%rip)
47b0(5): call 0xffffcbe0(%rip)

"xgetgroups" :
47c0(1): push %rbx
47c1(5): call 0x22f(%rip)
47c6(3): cmp $0xff,%eax
47c9(2): mov %eax,%ebx
47cb(2): jz 0xd(%rip)
47cd(2): mov %ebx,%eax
47cf(1): pop %rbx
47d0(1): ret near (%rsp)
47d1(7): nop 0x0(%rax)
47d8(5): call 0xffffcbc8(%rip)
47dd(3): cmp $0xc,(%rax)
47e0(2): jnz 0xffffffed(%rip)
47e2(5): call 0xffffff9e(%rip)

"rpl_mbrtowc" :
47f0(2): push %r13
47f2(2): push %r12
47f4(3): mov %rsi,%r13
47f7(1): push %rbp
47f8(1): push %rbx
47f9(3): mov %rdi,%rbx
47fc(3): mov %rdx,%r12
47ff(4): sub $0x18,%rsp
4803(9): mov $0x28,%rax
480c(5): mov %rax,0x8(%rsp)
4811(2): xor %eax,%eax
4813(5): lea 0x4(%rsp),%rax
4818(3): test %rdi,%rdi
481b(4): cmove %rax,%rbx
481f(3): mov %rbx,%rdi
4822(5): call 0xffffcc5e(%rip)
4827(4): cmp $0xfffffffd,%rax
482b(3): mov %rax,%rbp
482e(2): jbe 0x22(%rip)
4830(3): test %r12,%r12
4833(2): jz 0x1d(%rip)
4835(2): xor %edi,%edi
4837(5): call 0xc9(%rip)
483c(2): test %al,%al
483e(2): jnz 0x12(%rip)
4840(5): movzx 0x0(%r13),%eax
4845(5): mov $0x1,%ebp
484a(2): mov %eax,(%rbx)
484c(4): nop 0x0(%rax)
4850(5): mov 0x8(%rsp),%rdx
4855(9): xor $0x28,%rdx
485e(3): mov %rbp,%rax
4861(2): jnz 0xd(%rip)
4863(4): add $0x18,%rsp
4867(1): pop %rbx
4868(1): pop %rbp
4869(2): pop %r12
486b(2): pop %r13
486d(1): ret near (%rsp)
486e(5): call 0xffffcbe2(%rip)

"close_stream" :
4880(2): push %r12
4882(1): push %rbp
4883(3): mov %rdi,%rbp
4886(1): push %rbx
4887(5): call 0xffffcb49(%rip)
488c(3): mov 0x0(%rbp),%ebx
488f(3): mov %rbp,%rdi
4892(3): mov %rax,%r12
4895(5): call 0x39b(%rip)
489a(3): and $0x20,%ebx
489d(2): test %ebx,%ebx
489f(2): jnz 0x19(%rip)
48a1(2): test %eax,%eax
48a3(2): jz 0xc(%rip)
48a5(3): test %r12,%r12
48a8(5): mov $0xffffffff,%eax
48ad(2): jz 0x3b(%rip)
48af(1): pop %rbx
48b0(1): pop %rbp
48b1(2): pop %r12
48b3(1): ret near (%rsp)
48b4(4): nop 0x0(%rax)
48b8(2): test %eax,%eax
48ba(2): jnz 0x1e(%rip)
48bc(5): call 0xffffcae4(%rip)
48c1(6): mov $0x0,(%rax)
48c7(5): mov $0xffffffff,%eax
48cc(1): pop %rbx
48cd(1): pop %rbp
48ce(2): pop %r12
48d0(1): ret near (%rsp)
48d1(7): nop 0x0(%rax)
48d8(1): pop %rbx
48d9(5): mov $0xffffffff,%eax
48de(1): pop %rbp
48df(2): pop %r12
48e1(1): ret near (%rsp)
48e2(6): nop 0x0(%rax,%rax,1)
48e8(5): call 0xffffcab8(%rip)
48ed(3): cmp $0x9,(%rax)
48f0(1): pop %rbx
48f1(1): pop %rbp
48f2(2): pop %r12
48f4(3): setnz %al
48f7(3): movzx %al,%eax
48fa(2): neg %eax
48fc(1): ret near (%rsp)

"hard_locale" :
4900(4): sub $0x8,%rsp
4904(2): xor %esi,%esi
4906(5): call 0xffffccba(%rip)
490b(3): mov %rax,%rdx
490e(5): mov $0x1,%eax
4913(3): test %rdx,%rdx
4916(2): jz 0x1f(%rip)
4918(7): lea 0x1161(%rip),%rdi
491f(5): mov $0x2,%ecx
4924(3): mov %rdx,%rsi
4927(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4929(3): setnbe %cl
492c(3): sbb $0x0,%cl
492f(2): xor %eax,%eax
4931(2): test %cl,%cl
4933(2): jnz 0xd(%rip)
4935(4): add $0x8,%rsp
4939(1): ret near (%rsp)
493a(6): nop 0x0(%rax,%rax,1)
4940(7): lea 0x113b(%rip),%rdi
4947(5): mov $0x6,%ecx
494c(3): mov %rdx,%rsi
494f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4951(3): setnbe %al
4954(2): sbb $0x0,%al
4956(2): test %al,%al
4958(3): setnz %al
495b(4): add $0x8,%rsp
495f(1): ret near (%rsp)

"locale_charset" :
4960(4): sub $0x8,%rsp
4964(5): mov $0xe,%edi
4969(5): call 0xffffcc17(%rip)
496e(3): test %rax,%rax
4971(2): jz 0x1f(%rip)
4973(3): cmp $0x0,(%rax)
4976(7): lea 0x110b(%rip),%rdx
497d(4): cmove %rdx,%rax
4981(4): add $0x8,%rsp
4985(1): ret near (%rsp)
4986(a): nop 0x0(%rax,%rax,1)
4990(7): lea 0x10f1(%rip),%rax
4997(4): add $0x8,%rsp
499b(1): ret near (%rsp)

"realloc_groupbuf" :
49a0(5): mov $0x4,%edx
49a5(3): mov %rdx,%rax
49a8(3): mul %rax,%rsi,%rdx
49ab(2): jo 0x33(%rip)
49ad(2): xor %ecx,%ecx
49af(3): test %rax,%rax
49b2(2): js 0x16(%rip)
49b4(3): test %rcx,%rcx
49b7(2): jnz 0x11(%rip)
49b9(4): shl/sal $0x2,%rsi
49bd(5): jmp 0xffffcbf3(%rip)
49c2(6): nop 0x0(%rax,%rax,1)
49c8(4): sub $0x8,%rsp
49cc(5): call 0xffffc9d4(%rip)
49d1(6): mov $0xc,(%rax)
49d7(2): xor %eax,%eax
49d9(4): add $0x8,%rsp
49dd(1): ret near (%rsp)
49de(5): mov $0x1,%ecx
49e3(2): jmp 0xffffffcc(%rip)

"mgetgroups" :
49f0(2): push %r15
49f2(2): push %r14
49f4(3): mov %rdx,%r15
49f7(2): push %r13
49f9(2): push %r12
49fb(3): mov %esi,%r13d
49fe(1): push %rbp
49ff(1): push %rbx
4a00(4): sub $0x18,%rsp
4a04(9): mov $0x28,%rax
4a0d(5): mov %rax,0x8(%rsp)
4a12(2): xor %eax,%eax
4a14(3): test %rdi,%rdi
4a17(6): jz 0xd1(%rip)
4a1d(3): mov %rdi,%rbp
4a20(5): mov $0xa,%esi
4a25(2): xor %edi,%edi
4a27(8): mov $0xa,0x4(%rsp)
4a2f(5): call 0xffffff71(%rip)
4a34(3): test %rax,%rax
4a37(3): mov %rax,%rbx
4a3a(6): jz 0x1ce(%rip)
4a40(5): lea 0x4(%rsp),%r14
4a45(3): mov %r13d,%esi
4a48(3): mov %r14,%rcx
4a4b(3): mov %rbx,%rdx
4a4e(3): mov %rbp,%rdi
4a51(5): mov 0x4(%rsp),%r12d
4a56(5): call 0xffffcb9a(%rip)
4a5b(2): test %eax,%eax
4a5d(5): movsxd 0x4(%rsp),%rsi
4a62(2): js 0x4e(%rip)
4a64(3): mov %rbx,%rdi
4a67(5): call 0xffffff39(%rip)
4a6c(3): test %rax,%rax
4a6f(2): jnz 0x69(%rip)
4a71(5): call 0xffffc92f(%rip)
4a76(3): mov (%rax),%r12d
4a79(3): mov %rax,%rbp
4a7c(3): mov %rbx,%rdi
4a7f(5): call 0xffffc901(%rip)
4a84(5): mov $0xffffffff,%eax
4a89(4): mov %r12d,0x0(%rbp)
4a8d(5): mov 0x8(%rsp),%rcx
4a92(9): xor $0x28,%rcx
4a9b(6): jnz 0x18c(%rip)
4aa1(4): add $0x18,%rsp
4aa5(1): pop %rbx
4aa6(1): pop %rbp
4aa7(2): pop %r12
4aa9(2): pop %r13
4aab(2): pop %r14
4aad(2): pop %r15
4aaf(1): ret near (%rsp)
4ab0(3): cmp %r12d,%esi
4ab3(2): jnz 0xb(%rip)
4ab5(2): add %esi,%esi
4ab7(4): mov %esi,0x4(%rsp)
4abb(3): movsxd %esi,%rsi
4abe(3): mov %rbx,%rdi
4ac1(5): call 0xfffffedf(%rip)
4ac6(3): test %rax,%rax
4ac9(2): jz 0xffffffa8(%rip)
4acb(3): mov %rax,%rbx
4ace(5): jmp 0xffffff77(%rip)
4ad3(5): nop 0x0(%rax,%rax,1)
4ad8(3): mov %rax,(%r15)
4adb(4): mov 0x4(%rsp),%eax
4adf(2): jmp 0xffffffae(%rip)
4ae1(7): nop 0x0(%rax)
4ae8(2): xor %esi,%esi
4aea(2): xor %edi,%edi
4aec(5): call 0xffffca64(%rip)
4af1(2): test %eax,%eax
4af3(4): mov %eax,0x4(%rsp)
4af7(6): js 0xb1(%rip)
4afd(4): cmp $0xff,%r13d
4b01(4): setnz %bpl
4b05(2): test %eax,%eax
4b07(2): jz 0xb(%rip)
4b09(3): test %bpl,%bpl
4b0c(6): jz 0xcb(%rip)
4b12(3): add $0x1,%eax
4b15(2): xor %edi,%edi
4b17(3): movsxd %eax,%rsi
4b1a(4): mov %eax,0x4(%rsp)
4b1e(5): call 0xfffffe82(%rip)
4b23(3): test %rax,%rax
4b26(3): mov %rax,%rbx
4b29(6): jz 0xdf(%rip)
4b2f(4): mov 0x4(%rsp),%edi
4b33(4): movzx %bpl,%ebp
4b37(2): sub %ebp,%edi
4b39(4): cmp $0xff,%r13d
4b3d(6): jz 0xd5(%rip)
4b43(4): lea 0x4(%rax),%rsi
4b47(5): call 0xffffca09(%rip)
4b4c(2): test %eax,%eax
4b4e(6): js 0xffffff23(%rip)
4b54(3): mov %r13d,(%rbx)
4b57(3): add $0x1,%eax
4b5a(3): cmp $0x1,%eax
4b5d(3): mov %rbx,(%r15)
4b60(6): jle 0xffffff2d(%rip)
4b66(3): movsxd %eax,%rdx
4b69(2): mov (%rbx),%edi
4b6b(4): lea 0x0(%rbx,%rdx,4),%rsi
4b6f(4): lea 0x4(%rbx),%rdx
4b73(3): cmp %rdx,%rsi
4b76(2): jnbe 0x22(%rip)
4b78(5): jmp 0xffffff15(%rip)
4b7d(3): nop (%rax)
4b80(2): cmp (%rbx),%ecx
4b82(2): jz 0x1c(%rip)
4b84(3): mov %ecx,0x4(%rbx)
4b87(4): add $0x4,%rbx
4b8b(4): add $0x4,%rdx
4b8f(3): cmp %rdx,%rsi
4b92(6): jbe 0xfffffefb(%rip)
4b98(2): mov (%rdx),%ecx
4b9a(2): cmp %edi,%ecx
4b9c(2): jnz 0xffffffe4(%rip)
4b9e(3): sub $0x1,%eax
4ba1(2): jmp 0xffffffea(%rip)
4ba3(5): nop 0x0(%rax,%rax,1)
4ba8(5): call 0xffffc7f8(%rip)
4bad(3): cmp $0x26,(%rax)
4bb0(2): jnz 0x58(%rip)
4bb2(2): xor %edi,%edi
4bb4(5): mov $0x4,%esi
4bb9(5): call 0xffffc9f7(%rip)
4bbe(3): test %rax,%rax
4bc1(2): jz 0x47(%rip)
4bc3(3): mov %rax,(%r15)
4bc6(3): mov %r13d,(%rax)
4bc9(2): xor %eax,%eax
4bcb(4): cmp $0xff,%r13d
4bcf(3): setnz %al
4bd2(5): jmp 0xfffffebb(%rip)
4bd7(2): xor %edi,%edi
4bd9(3): movsxd %eax,%rsi
4bdc(5): call 0xfffffdc4(%rip)
4be1(3): test %rax,%rax
4be4(3): mov %rax,%rbx
4be7(2): jz 0x21(%rip)
4be9(4): mov 0x4(%rsp),%edi
4bed(3): mov %rbx,%rsi
4bf0(5): call 0xffffc960(%rip)
4bf5(2): test %eax,%eax
4bf7(6): jns 0xffffff63(%rip)
4bfd(5): jmp 0xfffffe74(%rip)
4c02(6): nop 0x0(%rax,%rax,1)
4c08(5): mov $0xffffffff,%eax
4c0d(5): jmp 0xfffffe80(%rip)
4c12(3): mov %rax,%rsi
4c15(5): call 0xffffc93b(%rip)
4c1a(2): test %eax,%eax
4c1c(6): jns 0xffffff3e(%rip)
4c22(5): jmp 0xfffffe4f(%rip)
4c27(5): call 0xffffc829(%rip)

"rpl_fclose" :
4c30(2): push %r12
4c32(1): push %rbp
4c33(1): push %rbx
4c34(3): mov %rdi,%rbx
4c37(5): call 0xffffc8f9(%rip)
4c3c(2): test %eax,%eax
4c3e(3): mov %rbx,%rdi
4c41(2): js 0x56(%rip)
4c43(5): call 0xffffc95d(%rip)
4c48(2): test %eax,%eax
4c4a(2): jnz 0x2e(%rip)
4c4c(3): mov %rbx,%rdi
4c4f(5): call 0x61(%rip)
4c54(2): test %eax,%eax
4c56(2): jz 0x3e(%rip)
4c58(5): call 0xffffc748(%rip)
4c5d(3): mov (%rax),%r12d
4c60(3): mov %rbx,%rdi
4c63(3): mov %rax,%rbp
4c66(5): call 0xffffc78a(%rip)
4c6b(3): test %r12d,%r12d
4c6e(2): jnz 0x32(%rip)
4c70(1): pop %rbx
4c71(1): pop %rbp
4c72(2): pop %r12
4c74(1): ret near (%rsp)
4c75(3): nop (%rax)
4c78(3): mov %rbx,%rdi
4c7b(5): call 0xffffc8b5(%rip)
4c80(2): xor %esi,%esi
4c82(5): mov $0x1,%edx
4c87(2): mov %eax,%edi
4c89(5): call 0xffffc837(%rip)
4c8e(4): cmp $0xffffffff,%rax
4c92(2): jnz 0xffffffba(%rip)
4c94(3): mov %rbx,%rdi
4c97(1): pop %rbx
4c98(1): pop %rbp
4c99(2): pop %r12
4c9b(5): jmp 0xffffc755(%rip)
4ca0(4): mov %r12d,0x0(%rbp)
4ca4(5): mov $0xffffffff,%eax
4ca9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4cb0(3): test %rdi,%rdi
4cb3(1): push %rbx
4cb4(3): mov %rdi,%rbx
4cb7(2): jz 0x13(%rip)
4cb9(5): call 0xffffc8e7(%rip)
4cbe(2): test %eax,%eax
4cc0(2): jz 0xa(%rip)
4cc2(6): test $0x100,(%rbx)
4cc8(2): jnz 0x10(%rip)
4cca(3): mov %rbx,%rdi
4ccd(1): pop %rbx
4cce(5): jmp 0xffffc8a2(%rip)
4cd3(5): nop 0x0(%rax,%rax,1)
4cd8(3): mov %rbx,%rdi
4cdb(5): mov $0x1,%edx
4ce0(2): xor %esi,%esi
4ce2(5): call 0xe(%rip)
4ce7(3): mov %rbx,%rdi
4cea(1): pop %rbx
4ceb(5): jmp 0xffffc885(%rip)

"rpl_fseeko" :
4cf0(4): mov 0x8(%rdi),%rax
4cf4(4): cmp %rax,0x10(%rdi)
4cf8(2): jz 0x8(%rip)
4cfa(5): jmp 0xffffc906(%rip)
4cff(1): nop 
4d00(4): mov 0x20(%rdi),%rax
4d04(4): cmp %rax,0x28(%rdi)
4d08(2): jnz 0xfffffff2(%rip)
4d0a(5): cmp $0x0,0x48(%rdi)
4d0f(2): jnz 0xffffffeb(%rip)
4d11(2): push %r12
4d13(1): push %rbp
4d14(3): mov %edx,%r12d
4d17(1): push %rbx
4d18(3): mov %rsi,%rbp
4d1b(3): mov %rdi,%rbx
4d1e(5): call 0xffffc812(%rip)
4d23(3): mov %r12d,%edx
4d26(3): mov %rbp,%rsi
4d29(2): mov %eax,%edi
4d2b(5): call 0xffffc795(%rip)
4d30(4): cmp $0xffffffff,%rax
4d34(2): jz 0xe(%rip)
4d36(3): and $0xef,(%rbx)
4d39(7): mov %rax,0x90(%rbx)
4d40(2): xor %eax,%eax
4d42(1): pop %rbx
4d43(1): pop %rbp
4d44(2): pop %r12
4d46(1): ret near (%rsp)

"__libc_csu_init" :
4d50(2): push %r15
4d52(2): push %r14
4d54(3): mov %rdx,%r15
4d57(2): push %r13
4d59(2): push %r12
4d5b(7): lea 0x201e0e(%rip),%r12
4d62(1): push %rbp
4d63(7): lea 0x201e0e(%rip),%rbp
4d6a(1): push %rbx
4d6b(3): mov %edi,%r13d
4d6e(3): mov %rsi,%r14
4d71(3): sub %r12,%rbp
4d74(4): sub $0x8,%rsp
4d78(4): sar $0x3,%rbp
4d7c(5): call 0xffffc5dc(%rip)
4d81(3): test %rbp,%rbp
4d84(2): jz 0x22(%rip)
4d86(2): xor %ebx,%ebx
4d88(8): nop 0x0(%rax,%rax,1)
4d90(3): mov %r15,%rdx
4d93(3): mov %r14,%rsi
4d96(3): mov %r13d,%edi
4d99(4): call 0x0(%r12,%rbx,8)
4d9d(4): add $0x1,%rbx
4da1(3): cmp %rbx,%rbp
4da4(2): jnz 0xffffffec(%rip)
4da6(4): add $0x8,%rsp
4daa(1): pop %rbx
4dab(1): pop %rbp
4dac(2): pop %r12
4dae(2): pop %r13
4db0(2): pop %r14
4db2(2): pop %r15
4db4(1): ret near (%rsp)

"atexit" :
4dd0(7): mov 0x202231(%rip),%rdx
4dd7(2): xor %esi,%esi
4dd9(5): jmp 0xffffc837(%rip)

"_fini" :
4de0(4): sub $0x8,%rsp
4de4(4): add $0x8,%rsp
4de8(1): ret near (%rsp)

