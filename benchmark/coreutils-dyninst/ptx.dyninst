
"__ctype_toupper_loc@plt" :
1c50(6): jmp 0x21f10a(%rip)
1c56(5): push $0x0

"free@plt" :
1c60(6): jmp 0x21f102(%rip)
1c66(5): push $0x1

"abort@plt" :
1c70(6): jmp 0x21f0fa(%rip)
1c76(5): push $0x2

"__errno_location@plt" :
1c80(6): jmp 0x21f0f2(%rip)
1c86(5): push $0x3

"strncmp@plt" :
1c90(6): jmp 0x21f0ea(%rip)
1c96(5): push $0x4

"_exit@plt" :
1ca0(6): jmp 0x21f0e2(%rip)
1ca6(5): push $0x5

"ftello@plt" :
1cb0(6): jmp 0x21f0da(%rip)
1cb6(5): push $0x6

"__fpending@plt" :
1cc0(6): jmp 0x21f0d2(%rip)
1cc6(5): push $0x7

"iconv@plt" :
1cd0(6): jmp 0x21f0ca(%rip)
1cd6(5): push $0x8

"ferror@plt" :
1ce0(6): jmp 0x21f0c2(%rip)
1ce6(5): push $0x9

"qsort@plt" :
1cf0(6): jmp 0x21f0ba(%rip)
1cf6(5): push $0xa

"fread@plt" :
1d00(6): jmp 0x21f0b2(%rip)
1d06(5): push $0xb

"iswcntrl@plt" :
1d10(6): jmp 0x21f0aa(%rip)
1d16(5): push $0xc

"textdomain@plt" :
1d20(6): jmp 0x21f0a2(%rip)
1d26(5): push $0xd

"__strtol_internal@plt" :
1d30(6): jmp 0x21f09a(%rip)
1d36(5): push $0xe

"iswctype@plt" :
1d40(6): jmp 0x21f092(%rip)
1d46(5): push $0xf

"fclose@plt" :
1d50(6): jmp 0x21f08a(%rip)
1d56(5): push $0x10

"bindtextdomain@plt" :
1d60(6): jmp 0x21f082(%rip)
1d66(5): push $0x11

"stpcpy@plt" :
1d70(6): jmp 0x21f07a(%rip)
1d76(5): push $0x12

"dcgettext@plt" :
1d80(6): jmp 0x21f072(%rip)
1d86(5): push $0x13

"__ctype_get_mb_cur_max@plt" :
1d90(6): jmp 0x21f06a(%rip)
1d96(5): push $0x14

"strlen@plt" :
1da0(6): jmp 0x21f062(%rip)
1da6(5): push $0x15

"__stack_chk_fail@plt" :
1db0(6): jmp 0x21f05a(%rip)
1db6(5): push $0x16

"getopt_long@plt" :
1dc0(6): jmp 0x21f052(%rip)
1dc6(5): push $0x17

"mbrtowc@plt" :
1dd0(6): jmp 0x21f04a(%rip)
1dd6(5): push $0x18

"dup2@plt" :
1de0(6): jmp 0x21f042(%rip)
1de6(5): push $0x19

"strchr@plt" :
1df0(6): jmp 0x21f03a(%rip)
1df6(5): push $0x1a

"__overflow@plt" :
1e00(6): jmp 0x21f032(%rip)
1e06(5): push $0x1b

"strrchr@plt" :
1e10(6): jmp 0x21f02a(%rip)
1e16(5): push $0x1c

"lseek@plt" :
1e20(6): jmp 0x21f022(%rip)
1e26(5): push $0x1d

"__assert_fail@plt" :
1e30(6): jmp 0x21f01a(%rip)
1e36(5): push $0x1e

"memset@plt" :
1e40(6): jmp 0x21f012(%rip)
1e46(5): push $0x1f

"freopen@plt" :
1e50(6): jmp 0x21f00a(%rip)
1e56(5): push $0x20

"strnlen@plt" :
1e60(6): jmp 0x21f002(%rip)
1e66(5): push $0x21

"close@plt" :
1e70(6): jmp 0x21effa(%rip)
1e76(5): push $0x22

"memchr@plt" :
1e80(6): jmp 0x21eff2(%rip)
1e86(5): push $0x23

"memcmp@plt" :
1e90(6): jmp 0x21efea(%rip)
1e96(5): push $0x24

"wctype@plt" :
1ea0(6): jmp 0x21efe2(%rip)
1ea6(5): push $0x25

"fputs_unlocked@plt" :
1eb0(6): jmp 0x21efda(%rip)
1eb6(5): push $0x26

"calloc@plt" :
1ec0(6): jmp 0x21efd2(%rip)
1ec6(5): push $0x27

"strcmp@plt" :
1ed0(6): jmp 0x21efca(%rip)
1ed6(5): push $0x28

"memcpy@plt" :
1ee0(6): jmp 0x21efc2(%rip)
1ee6(5): push $0x29

"fileno@plt" :
1ef0(6): jmp 0x21efba(%rip)
1ef6(5): push $0x2a

"wcwidth@plt" :
1f00(6): jmp 0x21efb2(%rip)
1f06(5): push $0x2b

"iswalnum@plt" :
1f10(6): jmp 0x21efaa(%rip)
1f16(5): push $0x2c

"malloc@plt" :
1f20(6): jmp 0x21efa2(%rip)
1f26(5): push $0x2d

"wcrtomb@plt" :
1f30(6): jmp 0x21ef9a(%rip)
1f36(5): push $0x2e

"fflush@plt" :
1f40(6): jmp 0x21ef92(%rip)
1f46(5): push $0x2f

"nl_langinfo@plt" :
1f50(6): jmp 0x21ef8a(%rip)
1f56(5): push $0x30

"__fxstat@plt" :
1f60(6): jmp 0x21ef82(%rip)
1f66(5): push $0x31

"__freading@plt" :
1f70(6): jmp 0x21ef7a(%rip)
1f76(5): push $0x32

"fwrite_unlocked@plt" :
1f80(6): jmp 0x21ef72(%rip)
1f86(5): push $0x33

"realloc@plt" :
1f90(6): jmp 0x21ef6a(%rip)
1f96(5): push $0x34

"setlocale@plt" :
1fa0(6): jmp 0x21ef62(%rip)
1fa6(5): push $0x35

"__printf_chk@plt" :
1fb0(6): jmp 0x21ef5a(%rip)
1fb6(5): push $0x36

"iconv_close@plt" :
1fc0(6): jmp 0x21ef52(%rip)
1fc6(5): push $0x37

"iswspace@plt" :
1fd0(6): jmp 0x21ef4a(%rip)
1fd6(5): push $0x38

"btowc@plt" :
1fe0(6): jmp 0x21ef42(%rip)
1fe6(5): push $0x39

"memmove@plt" :
1ff0(6): jmp 0x21ef3a(%rip)
1ff6(5): push $0x3a

"error@plt" :
2000(6): jmp 0x21ef32(%rip)
2006(5): push $0x3b

"open@plt" :
2010(6): jmp 0x21ef2a(%rip)
2016(5): push $0x3c

"fseeko@plt" :
2020(6): jmp 0x21ef22(%rip)
2026(5): push $0x3d

"fopen@plt" :
2030(6): jmp 0x21ef1a(%rip)
2036(5): push $0x3e

"towlower@plt" :
2040(6): jmp 0x21ef12(%rip)
2046(5): push $0x3f

"towupper@plt" :
2050(6): jmp 0x21ef0a(%rip)
2056(5): push $0x40

"__cxa_atexit@plt" :
2060(6): jmp 0x21ef02(%rip)
2066(5): push $0x41

"exit@plt" :
2070(6): jmp 0x21eefa(%rip)
2076(5): push $0x42

"fwrite@plt" :
2080(6): jmp 0x21eef2(%rip)
2086(5): push $0x43

"__fprintf_chk@plt" :
2090(6): jmp 0x21eeea(%rip)
2096(5): push $0x44

"strdup@plt" :
20a0(6): jmp 0x21eee2(%rip)
20a6(5): push $0x45

"mbsinit@plt" :
20b0(6): jmp 0x21eeda(%rip)
20b6(5): push $0x46

"iswprint@plt" :
20c0(6): jmp 0x21eed2(%rip)
20c6(5): push $0x47

"__ctype_tolower_loc@plt" :
20d0(6): jmp 0x21eeca(%rip)
20d6(5): push $0x48

"__ctype_b_loc@plt" :
20e0(6): jmp 0x21eec2(%rip)
20e6(5): push $0x49

"iconv_open@plt" :
20f0(6): jmp 0x21eeba(%rip)
20f6(5): push $0x4a

"__sprintf_chk@plt" :
2100(6): jmp 0x21eeb2(%rip)
2106(5): push $0x4b

".plt.got" :
2110(6): jmp 0x21eeca(%rip)
2116(2): nop 

"_init" :
1c28(4): sub $0x8,%rsp
1c2c(7): mov 0x21f39d(%rip),%rax
1c33(3): test %rax,%rax
1c36(2): jz 0x4(%rip)
1c38(2): call %rax
1c3a(4): add $0x8,%rsp
1c3e(1): ret near (%rsp)

"mbuiter_multi_next.part.0" :
2120(7): lea 0x19be9(%rip),%rcx
2127(7): lea 0x19b6a(%rip),%rsi
212e(7): lea 0x19b83(%rip),%rdi
2135(4): sub $0x8,%rsp
2139(5): mov $0xb3,%edx
213e(5): call 0xfffffcf2(%rip)

"mbiter_multi_next.part.0" :
2143(7): lea 0x1a0c6(%rip),%rcx
214a(7): lea 0x1a09f(%rip),%rsi
2151(7): lea 0x19b60(%rip),%rdi
2158(4): sub $0x8,%rsp
215c(5): mov $0xaa,%edx
2161(5): call 0xfffffccf(%rip)

"mbuiter_multi_next.part.0" :
2166(7): lea 0x1ae13(%rip),%rcx
216d(7): lea 0x19b24(%rip),%rsi
2174(7): lea 0x19b3d(%rip),%rdi
217b(4): sub $0x8,%rsp
217f(5): mov $0xb3,%edx
2184(5): call 0xfffffcac(%rip)

"main" :
2190(2): push %r15
2192(2): push %r14
2194(7): lea 0x19815(%rip),%r14
219b(2): push %r13
219d(2): push %r12
219f(7): lea 0x21e6fa(%rip),%r13
21a6(1): push %rbp
21a7(1): push %rbx
21a8(2): mov %edi,%ebx
21aa(3): mov %rsi,%rbp
21ad(7): lea 0x196bd(%rip),%r12
21b4(7): sub $0x98,%rsp
21bb(3): mov (%rsi),%rdi
21be(9): mov $0x28,%rax
21c7(8): mov %rax,0x88(%rsp)
21cf(2): xor %eax,%eax
21d1(5): lea 0x60(%rsp),%r15
21d6(5): call 0x3dba(%rip)
21db(7): lea 0x1a099(%rip),%rsi
21e2(5): mov $0x6,%edi
21e7(5): call 0xfffffdb9(%rip)
21ec(7): lea 0x19615(%rip),%rsi
21f3(7): lea 0x195dc(%rip),%rdi
21fa(5): call 0xfffffb66(%rip)
21ff(7): lea 0x195d0(%rip),%rdi
2206(5): call 0xfffffb1a(%rip)
220b(7): lea 0x3ace(%rip),%rdi
2212(5): call 0x18cbe(%rip)
2217(9): nop 0x0(%rax,%rax,1)
2220(3): xor %r8d,%r8d
2223(3): mov %r13,%rcx
2226(3): mov %r12,%rdx
2229(3): mov %rbp,%rsi
222c(2): mov %ebx,%edi
222e(5): call 0xfffffb92(%rip)
2233(3): cmp $0xff,%eax
2236(6): jz 0x2c7(%rip)
223c(3): cmp $0x53,%eax
223f(6): jz 0x27b(%rip)
2245(2): jle 0x35(%rip)
2247(3): cmp $0x67,%eax
224a(6): jz 0x22c(%rip)
2250(2): jle 0x5c(%rip)
2252(3): cmp $0x72,%eax
2255(6): jz 0x259(%rip)
225b(6): jnle 0xcf(%rip)
2261(3): cmp $0x69,%eax
2264(6): jnz 0x110(%rip)
226a(7): mov 0x21ee6f(%rip),%rax
2271(7): mov %rax,0x21f5f0(%rip)
2278(2): jmp 0xffffffa8(%rip)
227a(3): cmp $0x46,%eax
227d(6): jz 0x268(%rip)
2283(2): jle 0x54(%rip)
2285(3): cmp $0x4d,%eax
2288(6): jz 0x24a(%rip)
228e(6): jle 0x102(%rip)
2294(3): cmp $0x4f,%eax
2297(6): jnz 0x13b(%rip)
229d(a): mov $0x2,0x21f5dd(%rip)
22a7(5): jmp 0xffffff79(%rip)
22ac(3): cmp $0x57,%eax
22af(6): jz 0x19b(%rip)
22b5(6): jle 0x105(%rip)
22bb(3): cmp $0x62,%eax
22be(6): jnz 0xe7(%rip)
22c4(7): mov 0x21ee15(%rip),%rax
22cb(7): mov %rax,0x21f5a6(%rip)
22d2(5): jmp 0xffffff4e(%rip)
22d7(5): cmp $0xffffff7e,%eax
22dc(6): jz 0x2319(%rip)
22e2(6): jle 0x11a(%rip)
22e8(3): cmp $0xa,%eax
22eb(6): jnz 0xfc(%rip)
22f1(7): mov 0x21ed48(%rip),%r9
22f8(7): mov 0x21ede1(%rip),%rsi
22ff(7): lea 0x21e57a(%rip),%rdx
2306(7): lea 0x19540(%rip),%rdi
230d(6): mov $0x4,%r8d
2313(3): mov %r14,%rcx
2316(5): call 0x38ea(%rip)
231b(4): mov 0x0(%r14,%rax,4),%eax
231f(6): mov %eax,0x21f55f(%rip)
2325(5): jmp 0xfffffefb(%rip)
232a(3): cmp $0x74,%eax
232d(6): jz 0xfffffef3(%rip)
2333(3): cmp $0x77,%eax
2336(6): jnz 0x21b2(%rip)
233c(7): mov 0x21ed9d(%rip),%rdi
2343(3): xor %r8d,%r8d
2346(2): xor %edx,%edx
2348(2): xor %esi,%esi
234a(3): mov %r15,%rcx
234d(5): call 0x7883(%rip)
2352(2): test %eax,%eax
2354(6): jnz 0x22e8(%rip)
235a(5): mov 0x60(%rsp),%rax
235f(3): test %rax,%rax
2362(6): jle 0x22da(%rip)
2368(7): mov %rax,0x21eca9(%rip)
236f(5): jmp 0xfffffeb1(%rip)
2374(3): cmp $0x6f,%eax
2377(6): jnz 0x2171(%rip)
237d(7): mov 0x21ed5c(%rip),%rax
2384(7): mov %rax,0x21f4e5(%rip)
238b(5): jmp 0xfffffe95(%rip)
2390(3): cmp $0x47,%eax
2393(6): jnz 0x2155(%rip)
2399(7): mov $0x0,0x21ec80(%rip)
23a0(5): jmp 0xfffffe80(%rip)
23a5(3): cmp $0x66,%eax
23a8(6): jnz 0x2140(%rip)
23ae(7): mov $0x1,0x21f4cb(%rip)
23b5(5): jmp 0xfffffe6b(%rip)
23ba(3): cmp $0x54,%eax
23bd(6): jnz 0x212b(%rip)
23c3(a): mov $0x3,0x21f4b7(%rip)
23cd(5): jmp 0xfffffe53(%rip)
23d2(3): cmp $0x52,%eax
23d5(6): jnz 0x2113(%rip)
23db(7): mov $0x1,0x21f4a6(%rip)
23e2(5): jmp 0xfffffe3e(%rip)
23e7(3): cmp $0x41,%eax
23ea(6): jnz 0x20fe(%rip)
23f0(7): mov $0x1,0x21f493(%rip)
23f7(5): jmp 0xfffffe29(%rip)
23fc(5): cmp $0xffffff7d,%eax
2401(6): jnz 0x20e7(%rip)
2407(7): lea 0x19448(%rip),%rsi
240e(7): lea 0x19452(%rip),%rdi
2415(5): call 0x461b(%rip)
241a(7): mov 0x21eca7(%rip),%rdi
2421(7): mov 0x21ec10(%rip),%rcx
2428(7): lea 0x193a3(%rip),%rdx
242f(7): lea 0x19322(%rip),%rsi
2436(3): mov %rax,%r8
2439(3): xor %r9d,%r9d
243c(2): xor %eax,%eax
243e(5): call 0x7322(%rip)
2443(2): xor %edi,%edi
2445(5): call 0xfffffc2b(%rip)
244a(7): mov 0x21ec8f(%rip),%rdi
2451(5): call 0x25df(%rip)
2456(7): mov %rax,0x21f163(%rip)
245d(3): cmp $0x0,(%rax)
2460(6): jnz 0xfffffdc0(%rip)
2466(b): mov $0x0,0x21f14f(%rip)
2471(5): jmp 0xfffffdaf(%rip)
2476(7): mov 0x21ec63(%rip),%rdi
247d(3): xor %r8d,%r8d
2480(2): xor %edx,%edx
2482(2): xor %esi,%esi
2484(3): mov %r15,%rcx
2487(5): call 0x7749(%rip)
248c(2): test %eax,%eax
248e(6): jnz 0x2178(%rip)
2494(5): mov 0x60(%rsp),%rax
2499(3): test %rax,%rax
249c(6): jle 0x216a(%rip)
24a2(7): mov %rax,0x21eb67(%rip)
24a9(5): jmp 0xfffffd77(%rip)
24ae(7): mov $0x1,0x21f3d4(%rip)
24b5(5): jmp 0xfffffd6b(%rip)
24ba(7): mov 0x21ec1f(%rip),%rdi
24c1(5): call 0x256f(%rip)
24c6(7): mov %rax,0x21f253(%rip)
24cd(5): jmp 0xfffffd53(%rip)
24d2(7): mov 0x21ec07(%rip),%rax
24d9(7): mov %rax,0x21eb48(%rip)
24e0(5): jmp 0xfffffd40(%rip)
24e5(7): mov 0x21ebf4(%rip),%rdi
24ec(5): call 0x2544(%rip)
24f1(7): mov %rax,0x21eb38(%rip)
24f8(5): jmp 0xfffffd28(%rip)
24fd(6): mov 0x21ebd5(%rip),%eax
2503(2): cmp %ebx,%eax
2505(6): jz 0x156(%rip)
250b(7): cmp $0x0,0x21eb0e(%rip)
2512(6): jz 0x1ed7(%rip)
2518(2): mov %ebx,%ecx
251a(5): mov $0x8,%edx
251f(2): xor %esi,%esi
2521(2): sub %eax,%ecx
2523(3): mov %rdx,%rax
2526(6): mov %ecx,0x21edec(%rip)
252c(3): movsxd %ecx,%rcx
252f(3): mul %rax,%rcx,%rdx
2532(6): jo 0x20ca(%rip)
2538(3): test %rax,%rax
253b(6): js 0xcaa(%rip)
2541(3): test %rsi,%rsi
2544(6): jnz 0xca1(%rip)
254a(8): lea 0x0(,%rcx,8),%rdi
2552(5): call 0x736e(%rip)
2557(7): movsxd 0x21edba(%rip),%rcx
255e(5): mov $0x8,%edx
2563(7): mov %rax,0x21ed9e(%rip)
256a(3): mov %rdx,%rax
256d(2): xor %esi,%esi
256f(3): mul %rax,%rcx,%rdx
2572(6): jo 0x1fda(%rip)
2578(3): test %rax,%rax
257b(6): js 0xc6a(%rip)
2581(3): test %rsi,%rsi
2584(6): jnz 0xc61(%rip)
258a(8): lea 0x0(,%rcx,8),%rdi
2592(5): call 0x732e(%rip)
2597(7): movsxd 0x21ed7a(%rip),%rcx
259e(5): mov $0x10,%edx
25a3(7): mov %rax,0x21ed56(%rip)
25aa(3): mov %rdx,%rax
25ad(2): xor %esi,%esi
25af(3): mul %rax,%rcx,%rdx
25b2(6): jo 0x1f90(%rip)
25b8(3): test %rax,%rax
25bb(6): js 0xc2a(%rip)
25c1(3): test %rsi,%rsi
25c4(6): jnz 0xc21(%rip)
25ca(3): mov %rcx,%rdi
25cd(4): shl/sal $0x4,%rdi
25d1(5): call 0x72ef(%rip)
25d6(6): mov 0x21ed3c(%rip),%edx
25dc(7): mov %rax,0x21ed15(%rip)
25e3(2): test %edx,%edx
25e5(6): jle 0xc1(%rip)
25eb(6): mov 0x21eae7(%rip),%eax
25f1(4): lea 0xffffffff(%rdx),%r13d
25f5(3): lea 0x1(%rax),%ebx
25f8(3): movsxd %eax,%rdx
25fb(3): movsxd %ebx,%rbx
25fe(4): imul %rbx,$0xfffffff8,%rax
2602(4): lea 0x1(%rbx),%r12
2606(3): add %r12,%r13
2609(4): lea 0x0(%rax,%rdx,8),%r14
260d(7): add 0x21ecf4(%rip),%rax
2614(3): add %rbp,%r14
2617(3): mov %rax,%rbp
261a(2): jmp 0x2c(%rip)
261c(7): lea 0x1966f(%rip),%rsi
2623(3): mov %r15,%rdi
2626(5): call 0xfffff8aa(%rip)
262b(2): test %eax,%eax
262d(2): jz 0x23(%rip)
262f(5): mov %r15,0x0(%rbp,%rbx,8)
2634(3): cmp %r12,%r13
2637(6): mov %ebx,0x21ea9b(%rip)
263d(3): mov %r12,%rbx
2640(2): jz 0x66(%rip)
2642(4): add $0x1,%r12
2646(4): mov 0x0(%r14,%rbx,8),%r15
264a(4): cmp $0x0,(%r15)
264e(2): jnz 0xffffffce(%rip)
2650(9): mov $0x0,0x0(%rbp,%rbx,8)
2659(2): jmp 0xffffffdb(%rip)
265b(5): mov $0x8,%edi
2660(5): call 0x7260(%rip)
2665(5): mov $0x8,%edi
266a(7): mov %rax,0x21ec97(%rip)
2671(5): call 0x724f(%rip)
2676(5): mov $0x10,%edi
267b(7): mov %rax,0x21ec7e(%rip)
2682(5): call 0x723e(%rip)
2687(7): mov %rax,0x21ec6a(%rip)
268e(7): mov 0x21ec73(%rip),%rax
2695(a): mov $0x1,0x21ec79(%rip)
269f(7): mov $0x0,(%rax)
26a6(7): cmp $0x0,0x21f1d7(%rip)
26ad(2): jnz 0x16(%rip)
26af(7): cmp $0x1,0x21e96a(%rip)
26b6(2): sbb %eax,%eax
26b8(2): not %eax
26ba(3): add $0x2,%eax
26bd(6): mov %eax,0x21f1c1(%rip)
26c3(7): cmp $0x0,0x21f1b6(%rip)
26ca(2): jz 0x31(%rip)
26cc(5): call 0xfffff584(%rip)
26d1(7): lea 0x21ede8(%rip),%rcx
26d8(2): xor %edx,%edx
26da(6): nop 0x0(%rax,%rax,1)
26e0(3): mov (%rax),%rsi
26e3(4): add $0x1,%rcx
26e7(3): mov 0x0(%rsi,%rdx,1),%esi
26ea(4): add $0x4,%rdx
26ee(4): mov %sil,0xffffffff(%rcx)
26f2(7): cmp $0x400,%rdx
26f9(2): jnz 0xffffffe7(%rip)
26fb(7): mov 0x21f01e(%rip),%rax
2702(3): test %rax,%rax
2705(6): jz 0x1e00(%rip)
270b(3): cmp $0x0,(%rax)
270e(6): jz 0xc84(%rip)
2714(7): lea 0x21f005(%rip),%rdi
271b(5): call 0x2595(%rip)
2720(8): cmp $0x0,0x21ee98(%rip)
2728(6): jnz 0xafe(%rip)
272e(7): mov 0x21f143(%rip),%rdi
2735(3): test %rdi,%rdi
2738(6): jz 0xc18(%rip)
273e(5): lea 0x60(%rsp),%rsi
2743(5): call 0x260d(%rip)
2748(7): lea 0x21ec31(%rip),%rdx
274f(5): mov $0x20,%ecx
2754(a): mov $0x72340172838076673,%rax
275e(3): mov %rdx,%rdi
2761(3): REP stosd %rax,rdi(%es,10)
2764(5): mov 0x60(%rsp),%rdi
2769(5): mov 0x68(%rsp),%rcx
276e(3): cmp %rcx,%rdi
2771(2): jnb 0x15(%rip)
2773(3): mov %rdi,%rax
2776(3): movzx (%rax),%esi
2779(4): add $0x1,%rax
277d(3): cmp %rcx,%rax
2780(4): mov $0x0,0x0(%rdx,%rsi,1)
2784(2): jnz 0xfffffff2(%rip)
2786(7): cmp $0x0,0x21e893(%rip)
278d(2): jnz 0x12(%rip)
278f(7): mov $0x0,0x21ec0a(%rip)
2796(9): mov $0x0,0x21ebea(%rip)
279f(5): call 0xfffff4c1(%rip)
27a4(7): mov 0x21f0bd(%rip),%rdi
27ab(3): test %rdi,%rdi
27ae(2): jz 0x1c(%rip)
27b0(7): lea 0x21eb89(%rip),%rsi
27b7(5): call 0x2679(%rip)
27bc(8): cmp $0x0,0x21eb8c(%rip)
27c4(6): jz 0xb7c(%rip)
27ca(7): mov 0x21f09f(%rip),%rdi
27d1(3): test %rdi,%rdi
27d4(2): jz 0x1c(%rip)
27d6(7): lea 0x21eb43(%rip),%rsi
27dd(5): call 0x2653(%rip)
27e2(8): cmp $0x0,0x21eb46(%rip)
27ea(6): jz 0xb46(%rip)
27f0(7): cmp $0x0,0x21eb21(%rip)
27f7(b): mov $0x0,0x21eade(%rip)
2802(b): mov $0x0,0x21eb03(%rip)
280d(b): mov $0x0,0x21eb48(%rip)
2818(b): mov $0x0,0x21eb35(%rip)
2823(6): jle 0x3ba(%rip)
2829(7): lea 0x21eb50(%rip),%r15
2830(9): mov $0x0,0x58(%rsp)
2839(8): mov $0x0,0x38(%rsp)
2841(5): mov 0x58(%rsp),%rdi
2846(7): mov 0x21eabb(%rip),%rax
284d(7): mov 0x21eaa4(%rip),%rsi
2854(4): lea 0x0(%rdi,%rdi,1),%rbx
2858(4): mov 0x0(%rax,%rdi,1),%rdi
285c(3): add %rbx,%rsi
285f(5): call 0x24f1(%rip)
2864(7): mov 0x21ea8d(%rip),%rax
286b(3): add %rbx,%rax
286e(7): cmp $0x0,0x21f014(%rip)
2875(5): mov %rax,0x18(%rsp)
287a(3): mov (%rax),%r12
287d(6): jz 0x98f(%rip)
2883(4): mov 0x8(%rax),%rbp
2887(3): cmp %rbp,%r12
288a(3): mov %rbp,%rbx
288d(6): jnb 0x9ba(%rip)
2893(5): call 0xfffff84d(%rip)
2898(3): mov %r12,%r14
289b(3): mov (%rax),%rax
289e(2): jmp 0xf(%rip)
28a0(4): add $0x1,%r14
28a4(3): cmp %rbp,%r14
28a7(6): jz 0x9a3(%rip)
28ad(4): movzx (%r14),%edx
28b1(5): test $0x20,0x1(%rax,%rdx,2)
28b6(2): jz 0xffffffea(%rip)
28b8(3): mov %r14,%rsi
28bb(3): sub %r12,%rsi
28be(3): cmp %rbp,%r14
28c1(5): mov %rsi,0x20(%rsp)
28c6(2): jb 0x13(%rip)
28c8(2): jmp 0x1c(%rip)
28ca(6): nop 0x0(%rax,%rax,1)
28d0(4): add $0x1,%r14
28d4(3): cmp %rbp,%r14
28d7(2): jz 0xd(%rip)
28d9(4): movzx (%r14),%edx
28dd(5): test $0x20,0x1(%rax,%rdx,2)
28e2(2): jnz 0xffffffee(%rip)
28e4(5): lea 0x60(%rsp),%rax
28e9(3): cmp %r12,%rbp
28ec(4): mov %r12,(%rsp)
28f0(5): mov %rbp,0x50(%rsp)
28f5(5): mov %rax,0x8(%rsp)
28fa(6): jbe 0x293(%rip)
2900(8): cmp $0x0,0x21ee18(%rip)
2908(2): jz 0x5c(%rip)
290a(5): mov 0x50(%rsp),%rdx
290f(7): lea 0x21eb8a(%rip),%r9
2916(7): lea 0x21ee0b(%rip),%rdi
291d(2): xor %ecx,%ecx
291f(3): mov %r12,%rsi
2922(3): sub %r12,%rdx
2925(3): mov %rdx,%r8
2928(5): call 0x15c78(%rip)
292d(4): cmp $0xffffffff,%rax
2931(2): jz 0x27(%rip)
2933(3): test %rax,%rax
2936(6): jz 0x1c51(%rip)
293c(4): cmp $0xfffffffe,%rax
2940(6): jz 0x1bea(%rip)
2946(7): mov 0x21eb63(%rip),%rax
294d(3): mov (%rax),%rsi
2950(3): add %r12,%rsi
2953(5): mov %rsi,0x50(%rsp)
2958(5): cmp 0x50(%rsp),%r12
295d(5): mov 0x50(%rsp),%rbp
2962(2): jnb 0x2a(%rip)
2964(5): call 0xfffff77c(%rip)
2969(5): mov 0x50(%rsp),%rbp
296e(3): mov (%rax),%rdx
2971(2): jmp 0x10(%rip)
2973(5): nop 0x0(%rax,%rax,1)
2978(4): sub $0x1,%rbp
297c(3): cmp %rbp,%r12
297f(2): jnb 0xd(%rip)
2981(4): movzx 0xffffffff(%rbp),%eax
2985(5): test $0x20,0x1(%rdx,%rax,2)
298a(2): jnz 0xffffffee(%rip)
298c(7): lea 0x21ec2d(%rip),%rax
2993(5): mov %r12,0x10(%rsp)
2998(3): mov (%rax),%rdx
299b(5): nop 0x0(%rax,%rax,1)
29a0(3): test %rdx,%rdx
29a3(6): jz 0x198(%rip)
29a9(3): mov %rbp,%rdx
29ac(7): lea 0x21eacd(%rip),%r9
29b3(7): lea 0x21ec0e(%rip),%rdi
29ba(3): sub %r12,%rdx
29bd(2): xor %ecx,%ecx
29bf(3): mov %r12,%rsi
29c2(3): mov %rdx,%r8
29c5(5): call 0x15bdb(%rip)
29ca(4): cmp $0xfffffffe,%rax
29ce(6): jz 0x1b5c(%rip)
29d4(4): cmp $0xffffffff,%rax
29d8(6): jz 0x199(%rip)
29de(7): mov 0x21eaa3(%rip),%rax
29e5(3): mov (%rax),%rbx
29e8(7): mov 0x21eaa1(%rip),%rax
29ef(3): add %r12,%rbx
29f2(3): add (%rax),%r12
29f5(3): cmp %r12,%rbx
29f8(6): jz 0x6a8(%rip)
29fe(3): mov %r12,%rax
2a01(5): mov %rbx,0x60(%rsp)
2a06(3): sub %rbx,%rax
2a09(7): cmp 0x21e950(%rip),%rax
2a10(5): mov %rax,0x68(%rsp)
2a15(2): jle 0x9(%rip)
2a17(7): mov %rax,0x21e942(%rip)
2a1e(8): movzx 0x21ee63(%rip),%r13d
2a26(3): test %r13b,%r13b
2a29(6): jnz 0x4ff(%rip)
2a2f(8): cmp $0x0,0x21ee31(%rip)
2a37(2): jz 0x22(%rip)
2a39(7): mov 0x21e910(%rip),%rdx
2a40(7): mov 0x21e8f9(%rip),%rsi
2a47(5): mov 0x8(%rsp),%rdi
2a4c(5): call 0x2a04(%rip)
2a51(2): test %al,%al
2a53(6): jnz 0x476(%rip)
2a59(8): cmp $0x0,0x21ee0f(%rip)
2a61(2): jz 0x22(%rip)
2a63(7): mov 0x21e8c6(%rip),%rdx
2a6a(7): mov 0x21e8af(%rip),%rsi
2a71(5): mov 0x8(%rsp),%rdi
2a76(5): call 0x29da(%rip)
2a7b(2): test %al,%al
2a7d(6): jz 0x44c(%rip)
2a83(7): mov 0x21e856(%rip),%rcx
2a8a(7): cmp 0x21e857(%rip),%rcx
2a91(7): mov 0x21e858(%rip),%r8
2a98(6): jz 0x630(%rip)
2a9e(4): lea 0x0(%rcx,%rcx,2),%rdi
2aa2(3): mov %rdi,%rax
2aa5(4): shl/sal $0x4,%rax
2aa9(4): lea 0x0(%r8,%rax,1),%rdi
2aad(8): movzx 0x21edd5(%rip),%r8d
2ab5(3): test %r8b,%r8b
2ab8(6): jnz 0x508(%rip)
2abe(3): test %r13b,%r13b
2ac1(2): jz 0x36(%rip)
2ac3(4): mov (%rsp),%rax
2ac7(3): sub %rbx,%rax
2aca(4): mov %rax,0x20(%rdi)
2ace(5): mov 0x20(%rsp),%rax
2ad3(7): cmp %rax,0x21e87e(%rip)
2ada(2): jnl 0x9(%rip)
2adc(7): mov %rax,0x21e875(%rip)
2ae3(5): mov 0x10(%rsp),%rsi
2ae8(4): cmp %rsi,(%rsp)
2aec(2): jnz 0xb(%rip)
2aee(3): test %r13b,%r13b
2af1(6): jnz 0x64f(%rip)
2af7(5): mov 0x10(%rsp),%rax
2afc(4): add $0x1,%rcx
2b00(6): movdqa 0x60(%rsp),%xmm0
2b06(7): mov %rcx,0x21e7d3(%rip)
2b0d(3): sub %rbx,%rax
2b10(4): mov %rax,0x10(%rdi)
2b14(3): mov %rbp,%rax
2b17(3): sub %rbx,%rax
2b1a(4): mov %rax,0x18(%rdi)
2b1e(4): mov 0x38(%rsp),%eax
2b22(3): movups %xmm0,(%rdi)
2b25(3): mov %eax,0x28(%rdi)
2b28(7): lea 0x21ea91(%rip),%rax
2b2f(3): mov (%rax),%rdx
2b32(3): test %rdx,%rdx
2b35(6): jnz 0xfffffe74(%rip)
2b3b(3): cmp %rbp,%r12
2b3e(6): jnb 0x5ea(%rip)
2b44(5): movzx (%r12),%eax
2b49(5): cmp $0x0,0x0(%r15,%rax,1)
2b4e(2): jz 0x1a(%rip)
2b50(5): jmp 0x399(%rip)
2b55(3): nop (%rax)
2b58(5): movzx (%r12),%eax
2b5d(5): cmp $0x0,0x0(%r15,%rax,1)
2b62(6): jnz 0x37e(%rip)
2b68(4): add $0x1,%r12
2b6c(3): cmp %rbp,%r12
2b6f(2): jnz 0xffffffe9(%rip)
2b71(5): mov 0x18(%rsp),%rax
2b76(5): mov 0x50(%rsp),%r12
2b7b(4): mov 0x8(%rax),%rbp
2b7f(3): cmp %r12,%rbp
2b82(5): mov %rbp,0x50(%rsp)
2b87(6): jnbe 0xfffffd79(%rip)
2b8d(7): mov 0x21e77c(%rip),%rax
2b94(5): mov 0x58(%rsp),%rsi
2b99(7): mov 0x21e760(%rip),%rdx
2ba0(5): add $0x1,0x38(%rsp)
2ba5(4): add $0x1,%rax
2ba9(4): mov %rax,0x0(%rdx,%rsi,1)
2bad(4): add $0x8,%rsi
2bb1(7): mov %rax,0x21e758(%rip)
2bb8(4): mov 0x38(%rsp),%eax
2bbc(6): cmp %eax,0x21e756(%rip)
2bc2(5): mov %rsi,0x58(%rsp)
2bc7(6): jnle 0xfffffc7a(%rip)
2bcd(7): mov 0x21e70c(%rip),%rsi
2bd4(3): test %rsi,%rsi
2bd7(6): jnz 0x7cb(%rip)
2bdd(7): cmp $0x0,0x21eca6(%rip)
2be4(6): jnz 0x679(%rip)
2bea(7): cmp $0x0,0x21ec98(%rip)
2bf1(2): jz 0x20(%rip)
2bf3(7): cmp $0x0,0x21ec8e(%rip)
2bfa(2): jnz 0x17(%rip)
2bfc(7): mov 0x21e40d(%rip),%rax
2c03(7): add 0x21e74e(%rip),%rax
2c0a(7): sub %rax,0x21e407(%rip)
2c11(8): cmp $0x0,0x21e3ff(%rip)
2c19(2): jns 0xd(%rip)
2c1b(b): mov $0x0,0x21e3f2(%rip)
2c26(7): mov 0x21e3eb(%rip),%rax
2c2d(5): mov $0x2,%ecx
2c32(7): mov 0x21e3f7(%rip),%rdi
2c39(2): cdq %rax
2c3b(3): idiv %rcx,%rax
2c3e(3): mov %rax,%rdx
2c41(7): sub 0x21e3c8(%rip),%rdx
2c48(3): test %rdi,%rdi
2c4b(3): mov %rax,%rsi
2c4e(7): mov %rax,0x21e573(%rip)
2c55(7): mov %rax,0x21e55c(%rip)
2c5c(7): mov %rdx,0x21e55d(%rip)
2c63(6): jz 0x176e(%rip)
2c69(3): cmp $0x0,(%rdi)
2c6c(6): jz 0x1765(%rip)
2c72(2): xor %eax,%eax
2c74(4): or $0xffffffff,%rcx
2c78(2): REPNZ scasb rdi(%es,10),%al
2c7a(3): mov %rcx,%rax
2c7d(3): not %rax
2c80(4): sub $0x1,%rax
2c84(7): mov %rax,0x21e525(%rip)
2c8b(7): mov 0x21e51e(%rip),%rax
2c92(3): add %rax,%rax
2c95(7): cmp $0x0,0x21e384(%rip)
2c9c(6): jz 0x172c(%rip)
2ca2(3): sub %rax,%rdx
2ca5(3): test %rdx,%rdx
2ca8(7): mov %rdx,0x21e511(%rip)
2caf(6): js 0x1a95(%rip)
2cb5(3): sub %rax,%rsi
2cb8(7): mov %rsi,0x21e4f9(%rip)
2cbf(5): call 0xfffff421(%rip)
2cc4(3): mov (%rax),%rsi
2cc7(7): lea 0x21e512(%rip),%rcx
2cce(4): mov %rax,(%rsp)
2cd2(2): xor %edx,%edx
2cd4(4): nop 0x0(%rax)
2cd8(4): movzx 0x0(%rsi,%rdx,2),%eax
2cdc(4): shr $0xd,%ax
2ce0(3): and $0x1,%eax
2ce3(3): mov %al,0x0(%rcx,%rdx,1)
2ce6(4): add $0x1,%rdx
2cea(7): cmp $0x100,%rdx
2cf1(2): jnz 0xffffffe7(%rip)
2cf3(6): mov 0x21eb8b(%rip),%eax
2cf9(7): mov $0x1,0x21e4ec(%rip)
2d00(3): cmp $0x2,%eax
2d03(6): jz 0x16b9(%rip)
2d09(3): cmp $0x3,%eax
2d0c(2): jnz 0x3d(%rip)
2d0e(7): lea 0x18aea(%rip),%rdx
2d15(5): mov $0x24,%eax
2d1a(4): add $0x1,%rdx
2d1e(4): mov $0x1,0x0(%rcx,%rax,1)
2d22(3): movzx (%rdx),%eax
2d25(2): test %al,%al
2d27(2): jnz 0xfffffff3(%rip)
2d29(7): lea 0x18d10(%rip),%rdx
2d30(5): mov $0x80,%eax
2d35(4): cmp $0x0,0x0(%rdx,%rax,1)
2d39(4): setnz 0x0(%rcx,%rax,1)
2d3d(4): add $0x1,%rax
2d41(6): cmp $0x100,%rax
2d47(2): jnz 0xffffffee(%rip)
2d49(8): cmp $0x0,0x21e58f(%rip)
2d51(b): mov $0x0,0x21e444(%rip)
2d5c(b): mov $0x0,0x21e441(%rip)
2d67(7): mov $0x0,0x21e422(%rip)
2d6e(b): mov $0x0,0x21e3c7(%rip)
2d79(b): mov $0x0,0x21e3c4(%rip)
2d84(7): mov $0x0,0x21e3a5(%rip)
2d8b(7): mov 0x21e55e(%rip),%r12
2d92(6): jle 0xea7(%rip)
2d98(9): mov $0x0,0x10(%rsp)
2da1(4): mov (%r12),%rdx
2da5(5): mov 0x10(%r12),%rcx
2daa(7): lea 0x21e3af(%rip),%rax
2db1(5): mov 0x8(%r12),%rbx
2db6(5): mov 0x18(%r12),%rbp
2dbb(3): mov %rdx,(%rax)
2dbe(4): lea 0x0(%rdx,%rcx,1),%rax
2dc2(3): add %rdx,%rbx
2dc5(3): add %rdx,%rbp
2dc8(5): mov %rax,0x18(%rsp)
2dcd(5): movsxd 0x28(%r12),%rax
2dd2(7): mov %rbx,0x21e38f(%rip)
2dd9(4): shl/sal $0x4,%rax
2ddd(7): add 0x21e514(%rip),%rax
2de4(3): mov (%rax),%r13
2de7(4): mov 0x8(%rax),%r14
2deb(7): mov 0x21e3c6(%rip),%rax
2df2(3): add %rax,%rdx
2df5(3): cmp %rbp,%rbx
2df8(6): jnb 0x5fd(%rip)
2dfe(3): cmp %rdx,%rbx
2e01(2): jbe 0x69(%rip)
2e03(5): jmp 0xf55(%rip)
2e08(8): nop 0x0(%rax,%rax,1)
2e10(3): mov %rbp,%rdx
2e13(7): lea 0x21e7ae(%rip),%rdi
2e1a(3): xor %r8d,%r8d
2e1d(3): sub %rbx,%rdx
2e20(2): xor %ecx,%ecx
2e22(3): mov %rbx,%rsi
2e25(5): call 0x1575b(%rip)
2e2a(4): cmp $0xfffffffe,%rax
2e2e(6): jz 0x16fc(%rip)
2e34(4): cmp $0xffffffff,%rax
2e38(5): mov $0x1,%edx
2e3d(4): cmove %rdx,%rax
2e41(3): add %rax,%rbx
2e44(7): mov 0x21e36d(%rip),%rax
2e4b(3): cmp %rbx,%rbp
2e4e(6): jbe 0x5a2(%rip)
2e54(7): lea 0x21e305(%rip),%rsi
2e5b(3): mov (%rsi),%rdx
2e5e(3): add %rax,%rdx
2e61(3): cmp %rdx,%rbx
2e64(6): jnbe 0xeef(%rip)
2e6a(7): lea 0x21e74f(%rip),%rsi
2e71(7): mov %rbx,0x21e2f0(%rip)
2e78(4): cmp $0x0,(%rsi)
2e7c(2): jnz 0xffffff94(%rip)
2e7e(3): movzx (%rbx),%edx
2e81(7): lea 0x21e4f8(%rip),%rsi
2e88(4): cmp $0x0,0x0(%rsi,%rdx,1)
2e8c(6): jnz 0x534(%rip)
2e92(4): add $0x1,%rbx
2e96(2): jmp 0xffffffb5(%rip)
2e98(8): nop 0x0(%rax,%rax,1)
2ea0(2): test %dl,%dl
2ea2(3): mov %r13,%rbx
2ea5(3): mov %r12,%rdi
2ea8(3): mov %ebp,%r13d
2eab(5): mov 0x30(%rsp),%r12
2eb0(5): mov 0x28(%rsp),%rbp
2eb5(2): jz 0xb(%rip)
2eb7(7): mov %rdi,0x21e452(%rip)
2ebe(2): nop 
2ec0(3): cmp %rbx,%r14
2ec3(6): jbe 0xfffffb6c(%rip)
2ec9(7): lea 0x21e6f0(%rip),%rax
2ed0(3): mov (%rax),%rdx
2ed3(5): jmp 0xfffffacd(%rip)
2ed8(8): nop 0x0(%rax,%rax,1)
2ee0(3): cmp %rbp,%r12
2ee3(6): jnb 0x24b(%rip)
2ee9(5): movzx (%r12),%eax
2eee(5): cmp $0x0,0x0(%r15,%rax,1)
2ef3(6): jz 0x23b(%rip)
2ef9(3): mov %r12,%rax
2efc(2): jmp 0x12(%rip)
2efe(2): nop 
2f00(3): movzx (%rax),%edx
2f03(5): cmp $0x0,0x0(%r15,%rdx,1)
2f08(6): jz 0x1b0(%rip)
2f0e(4): add $0x1,%rax
2f12(3): cmp %rbp,%rax
2f15(2): jnz 0xffffffeb(%rip)
2f17(3): mov %r12,%rbx
2f1a(3): mov %rbp,%r12
2f1d(5): jmp 0xfffffae1(%rip)
2f22(6): nop 0x0(%rax,%rax,1)
2f28(3): cmp %rbx,%r14
2f2b(2): jnb 0xffffff95(%rip)
2f2d(7): mov 0x21e3dc(%rip),%rdi
2f34(5): mov %rbp,0x28(%rsp)
2f39(2): xor %edx,%edx
2f3b(5): mov %r12,0x30(%rsp)
2f40(3): mov %r13d,%ebp
2f43(3): mov %rbx,%r13
2f46(3): mov %rdi,%r12
2f49(2): jmp 0x10(%rip)
2f4b(5): nop 0x0(%rax,%rax,1)
2f50(3): cmp %r13,%r14
2f53(6): jnb 0xffffff4d(%rip)
2f59(4): movzx (%r14),%eax
2f5d(4): add $0x1,%r14
2f61(2): cmp $0xa,%al
2f63(2): jnz 0xffffffed(%rip)
2f65(5): mov 0x18(%rsp),%rax
2f6a(4): add $0x1,%r12
2f6e(4): mov 0x8(%rax),%rbx
2f72(3): cmp %r14,%rbx
2f75(6): jbe 0x27b(%rip)
2f7b(5): call 0xfffff165(%rip)
2f80(3): mov (%rax),%rcx
2f83(3): mov %r14,%rax
2f86(2): jmp 0x13(%rip)
2f88(8): nop 0x0(%rax,%rax,1)
2f90(4): add $0x1,%rax
2f94(3): cmp %rbx,%rax
2f97(2): jz 0xc(%rip)
2f99(3): movzx (%rax),%edx
2f9c(5): test $0x20,0x1(%rcx,%rdx,2)
2fa1(2): jz 0xffffffef(%rip)
2fa3(3): mov %rax,%rsi
2fa6(3): sub %r14,%rsi
2fa9(5): mov %rsi,0x20(%rsp)
2fae(4): mov %r14,(%rsp)
2fb2(2): mov %ebp,%edx
2fb4(3): mov %rax,%r14
2fb7(2): jmp 0xffffff99(%rip)
2fb9(7): nop 0x0(%rax)
2fc0(3): cmp %rbx,%r14
2fc3(7): mov 0x21e346(%rip),%r10
2fca(6): jnb 0xca(%rip)
2fd0(5): mov %rbp,0x28(%rsp)
2fd5(5): mov %r12,0x30(%rsp)
2fda(2): xor %esi,%esi
2fdc(3): mov %r10,%r12
2fdf(5): mov %r10,0x48(%rsp)
2fe4(5): mov %r13b,0x3f(%rsp)
2fe9(3): mov %r14,%r10
2fec(5): mov %rcx,0x40(%rsp)
2ff1(3): mov %r8d,%ebp
2ff4(3): mov %rdi,%r14
2ff7(2): jmp 0xe(%rip)
2ff9(7): nop 0x0(%rax)
3000(3): cmp %rbx,%r10
3003(2): jnb 0x65(%rip)
3005(4): movzx (%r10),%eax
3009(4): add $0x1,%r10
300d(2): cmp $0xa,%al
300f(2): jnz 0xfffffff1(%rip)
3011(5): mov 0x18(%rsp),%rax
3016(4): add $0x1,%r12
301a(4): mov 0x8(%rax),%r13
301e(3): cmp %r10,%r13
3021(6): jbe 0x1e0(%rip)
3027(4): mov %r10,(%rsp)
302b(5): call 0xfffff0b5(%rip)
3030(4): mov (%rsp),%r10
3034(3): mov (%rax),%r8
3037(3): mov %r10,%rax
303a(2): jmp 0xf(%rip)
303c(4): nop 0x0(%rax)
3040(4): add $0x1,%rax
3044(3): cmp %r13,%rax
3047(2): jz 0xd(%rip)
3049(3): movzx (%rax),%edx
304c(6): test $0x20,0x1(%r8,%rdx,2)
3052(2): jz 0xffffffee(%rip)
3054(4): mov %r10,(%rsp)
3058(3): mov %rax,%r10
305b(2): mov %ebp,%esi
305d(3): cmp %rbx,%r10
3060(2): jb 0xffffffa5(%rip)
3062(6): nop 0x0(%rax,%rax,1)
3068(3): test %sil,%sil
306b(3): mov %r14,%rdi
306e(3): mov %r12,%r9
3071(3): mov %r10,%r14
3074(5): mov 0x28(%rsp),%rbp
3079(6): movzx 0x3f(%rsp),%r13d
307f(5): mov 0x40(%rsp),%rcx
3084(5): mov 0x30(%rsp),%r12
3089(5): mov 0x48(%rsp),%r10
308e(6): jnz 0x179d(%rip)
3094(4): mov %r10,0x20(%rdi)
3098(5): jmp 0xfffffa4b(%rip)
309d(3): nop (%rax)
30a0(7): lea 0x21e519(%rip),%rax
30a7(3): mov (%rax),%rdx
30aa(4): lea 0x1(%rbx),%r12
30ae(5): jmp 0xfffff8f2(%rip)
30b3(5): nop 0x0(%rax,%rax,1)
30b8(3): mov %r12,%rbx
30bb(3): mov %rax,%r12
30be(5): jmp 0xfffff937(%rip)
30c3(5): nop 0x0(%rax,%rax,1)
30c8(3): test %r8,%r8
30cb(6): jz 0xed(%rip)
30d1(a): mov $0x128102389400760774,%rax
30db(3): cmp %rax,%rcx
30de(6): jnbe 0x107(%rip)
30e4(3): mov %rcx,%rax
30e7(3): shr $0x1,%rax
30ea(5): lea 0x1(%rcx,%rax,1),%rcx
30ef(4): lea 0x0(%rcx,%rcx,2),%rsi
30f3(3): mov %r8,%rdi
30f6(7): mov %rcx,0x21e1eb(%rip)
30fd(4): shl/sal $0x4,%rsi
3101(5): call 0x681f(%rip)
3106(7): mov 0x21e1d3(%rip),%rcx
310d(3): mov %rax,%r8
3110(7): mov %rax,0x21e1d9(%rip)
3117(8): movzx 0x21e76a(%rip),%r13d
311f(5): jmp 0xfffff97f(%rip)
3124(4): nop 0x0(%rax)
3128(6): jz 0xfffffa49(%rip)
312e(3): mov %r12,%rbx
3131(5): jmp 0xffffff79(%rip)
3136(a): nop 0x0(%rax,%rax,1)
3140(3): cmp %rbp,%rsi
3143(3): mov %rsi,%r13
3146(6): jnb 0xfffff9b1(%rip)
314c(5): mov %rdi,0x28(%rsp)
3151(5): mov %rcx,0x10(%rsp)
3156(5): call 0xffffef8a(%rip)
315b(5): mov 0x10(%rsp),%rcx
3160(3): mov (%rax),%rax
3163(3): mov %r13,%rdx
3166(5): mov 0x28(%rsp),%rdi
316b(2): jmp 0xe(%rip)
316d(3): nop (%rax)
3170(4): add $0x1,%rdx
3174(3): cmp %rbp,%rdx
3177(2): jz 0x34(%rip)
3179(3): movzx (%rdx),%esi
317c(5): test $0x20,0x1(%rax,%rsi,2)
3181(2): jz 0xffffffef(%rip)
3183(3): cmp %rbp,%rdx
3186(5): mov %rdx,0x10(%rsp)
318b(6): jnb 0xfffff96c(%rip)
3191(7): nop 0x0(%rax)
3198(4): add $0x1,%rdx
319c(3): cmp %rbp,%rdx
319f(2): jz 0xc(%rip)
31a1(3): movzx (%rdx),%esi
31a4(5): test $0x20,0x1(%rax,%rsi,2)
31a9(2): jnz 0xffffffef(%rip)
31ab(5): mov %rdx,0x10(%rsp)
31b0(5): jmp 0xfffff947(%rip)
31b5(3): nop (%rax)
31b8(3): test %rcx,%rcx
31bb(5): mov $0x2,%eax
31c0(5): mov $0x30,%edx
31c5(4): cmove %rax,%rcx
31c9(3): mov %rdx,%rax
31cc(2): xor %esi,%esi
31ce(3): mul %rax,%rcx,%rdx
31d1(6): jo 0x1650(%rip)
31d7(3): test %rax,%rax
31da(2): js 0xb(%rip)
31dc(3): test %rsi,%rsi
31df(6): jz 0xffffff10(%rip)
31e5(5): call 0x692b(%rip)
31ea(6): nop 0x0(%rax,%rax,1)
31f0(3): mov %r14,%rax
31f3(9): mov $0x0,0x20(%rsp)
31fc(5): jmp 0xfffffdb2(%rip)
3201(2): mov %ebp,%esi
3203(4): mov %r10,(%rsp)
3207(5): jmp 0xfffffdf9(%rip)
320c(5): mov 0x18(%rsp),%rax
3211(3): mov %r12,%r14
3214(9): mov $0x0,0x20(%rsp)
321d(4): mov 0x8(%rax),%rbp
3221(5): jmp 0xfffff6c3(%rip)
3226(7): lea 0x21e393(%rip),%rdi
322d(5): call 0x1a83(%rip)
3232(7): mov 0x21e63f(%rip),%rdi
3239(3): test %rdi,%rdi
323c(6): jz 0xfffff568(%rip)
3242(5): jmp 0xfffff4fc(%rip)
3247(3): mov %r12,%rbx
324a(3): mov %rbx,%rax
324d(3): mov %rbx,%r14
3250(3): sub %r12,%rax
3253(5): mov %rax,0x20(%rsp)
3258(5): jmp 0xfffff68c(%rip)
325d(b): mov $0x0,0x21e0f0(%rip)
3268(3): xor %r13d,%r13d
326b(5): lea 0x70(%rsp),%r12
3270(7): lea 0x18629(%rip),%rbp
3277(4): or $0xffffffff,%rbx
327b(2): jmp 0x75(%rip)
327d(7): mov 0x21e07c(%rip),%rax
3284(3): test %r13,%r13
3287(8): lea 0x0(,%r13,8),%r14
328f(4): mov 0x0(%rax,%r13,8),%rsi
3293(4): lea 0x1(%rsi),%r8
3297(2): jz 0x7(%rip)
3299(5): sub 0xfffffff8(%rax,%r14,1),%r8
329e(5): mov $0x15,%edx
32a3(3): mov %r12,%rdi
32a6(2): xor %eax,%eax
32a8(3): mov %rbp,%rcx
32ab(5): mov $0x1,%esi
32b0(5): call 0xffffee50(%rip)
32b5(2): mov %eax,%edx
32b7(7): mov 0x21e04a(%rip),%rax
32be(4): mov 0x0(%rax,%r14,1),%rdi
32c2(3): movsxd %edx,%rax
32c5(3): test %rdi,%rdi
32c8(2): jz 0x14(%rip)
32ca(2): xor %eax,%eax
32cc(3): mov %rbx,%rcx
32cf(2): REPNZ scasb rdi(%es,10),%al
32d1(3): movsxd %edx,%rax
32d4(3): not %rcx
32d7(5): lea 0xffffffff(%rcx,%rax,1),%rax
32dc(7): cmp %rax,0x21e075(%rip)
32e3(2): jnl 0x9(%rip)
32e5(7): mov %rax,0x21e06c(%rip)
32ec(4): add $0x1,%r13
32f0(7): movsxd 0x21e021(%rip),%rax
32f7(3): cmp %rax,%r13
32fa(2): jb 0xffffff83(%rip)
32fc(7): mov 0x21e055(%rip),%rax
3303(4): lea 0x1(%rax),%rdx
3307(4): lea 0x2(%rax),%rdi
330b(7): mov %rdx,0x21e046(%rip)
3312(5): call 0x65ae(%rip)
3317(7): cmp $0x0,0x21e56c(%rip)
331e(7): mov %rax,0x21ddfb(%rip)
3325(6): jnz 0xfffff8ce(%rip)
332b(5): jmp 0xfffff8bf(%rip)
3330(b): mov $0x0,0x21e535(%rip)
333b(5): jmp 0xfffff4b5(%rip)
3340(b): mov $0x0,0x21e51d(%rip)
334b(5): jmp 0xfffff47f(%rip)
3350(7): cmp $0x0,0x21dcc9(%rip)
3357(6): jz 0x11ff(%rip)
335d(5): call 0xffffed83(%rip)
3362(7): lea 0x21e017(%rip),%rsi
3369(2): xor %ecx,%ecx
336b(3): mov (%rax),%rdx
336e(4): add $0x1,%rsi
3372(4): movzx 0x0(%rdx,%rcx,1),%edx
3376(4): add $0x2,%rcx
337a(4): shr $0xa,%dx
337e(3): and $0x1,%edx
3381(3): mov %dl,0xffffffff(%rsi)
3384(7): cmp $0x200,%rcx
338b(2): jnz 0xffffffe0(%rip)
338d(5): jmp 0xfffff417(%rip)
3392(b): mov $0x0,0x21e383(%rip)
339d(5): jmp 0xfffff383(%rip)
33a2(7): mov 0x21df47(%rip),%rdi
33a9(7): lea 0x2070(%rip),%rcx
33b0(5): mov $0x30,%edx
33b5(5): call 0xffffe93b(%rip)
33ba(5): jmp 0xfffff823(%rip)
33bf(1): nop 
33c0(3): cmp %rbx,%rbp
33c3(2): jnbe 0x21(%rip)
33c5(2): jmp 0x2b(%rip)
33c7(9): nop 0x0(%rax,%rax,1)
33d0(3): movzx (%rbx),%edx
33d3(7): lea 0x21dfa6(%rip),%rsi
33da(4): cmp $0x0,0x0(%rsi,%rdx,1)
33de(6): jz 0xfffffa76(%rip)
33e4(4): add $0x1,%rbx
33e8(3): cmp %rbx,%rbp
33eb(2): jnz 0xffffffe5(%rip)
33ed(3): mov %rbp,%rbx
33f0(5): mov 0x10(%r12),%rcx
33f5(7): lea 0x21dd64(%rip),%rsi
33fc(3): mov (%rsi),%rsi
33ff(3): add %rsi,%rax
3402(3): cmp %rax,%rbx
3405(2): jnbe 0x9(%rip)
3407(7): mov %rbx,0x21dd5a(%rip)
340e(2): xor %edi,%edi
3410(8): cmp $0x0,0x21dc18(%rip)
3418(7): mov 0x21dd49(%rip),%rdx
341f(3): mov %rdx,%rax
3422(2): jz 0xb(%rip)
3424(2): xor %edi,%edi
3426(3): cmp %rdx,%rbp
3429(4): setnbe %dil
342d(7): mov %dil,0x21dd1c(%rip)
3434(7): and $0x1,0x21dd15(%rip)
343b(3): cmp %rdx,%rsi
343e(2): jnb 0x34(%rip)
3440(4): mov (%rsp),%rdi
3444(3): mov (%rdi),%r8
3447(2): xor %edi,%edi
3449(2): jmp 0x14(%rip)
344b(4): sub $0x1,%rax
344f(5): mov $0x1,%edi
3454(3): cmp %rsi,%rax
3457(6): jz 0x13be(%rip)
345d(4): movzx 0xffffffff(%rax),%edx
3461(6): test $0x20,0x1(%r8,%rdx,2)
3467(2): jnz 0xffffffe4(%rip)
3469(3): test %dil,%dil
346c(6): jnz 0x138e(%rip)
3472(7): mov 0x21dee7(%rip),%rdx
3479(7): add 0x21dd48(%rip),%rdx
3480(3): mov %rcx,%rax
3483(3): neg %rax
3486(3): cmp %rdx,%rax
3489(6): jle 0x8c1(%rip)
348f(7): lea 0x21e12a(%rip),%rax
3496(3): mov %rsi,%rbx
3499(3): sub %rdx,%rbx
349c(4): cmp $0x0,(%rax)
34a0(6): jz 0xd2a(%rip)
34a6(4): lea 0x8(%rax),%rdi
34aa(3): xor %r8d,%r8d
34ad(2): xor %ecx,%ecx
34af(3): mov %rbx,%rsi
34b2(5): call 0x150ce(%rip)
34b7(4): cmp $0xfffffffe,%rax
34bb(6): jz 0x106f(%rip)
34c1(4): cmp $0xffffffff,%rax
34c5(2): jnz 0x7(%rip)
34c7(5): mov $0x1,%eax
34cc(3): add %rax,%rbx
34cf(7): lea 0x21dc8a(%rip),%rax
34d6(7): lea 0x21dca3(%rip),%r15
34dd(7): mov %rbx,0x21dc9c(%rip)
34e4(3): mov (%rax),%rax
34e7(3): cmp %rax,%rbx
34ea(7): mov %rax,0x21dc97(%rip)
34f1(2): jnb 0x32(%rip)
34f3(4): mov (%rsp),%rsi
34f7(2): xor %ecx,%ecx
34f9(3): mov (%rsi),%rsi
34fc(2): jmp 0x14(%rip)
34fe(4): sub $0x1,%rax
3502(5): mov $0x1,%ecx
3507(3): cmp %rax,%rbx
350a(6): jz 0x12e4(%rip)
3510(4): movzx 0xffffffff(%rax),%edx
3514(5): test $0x20,0x1(%rsi,%rdx,2)
3519(2): jnz 0xffffffe5(%rip)
351b(2): test %cl,%cl
351d(6): jnz 0x11e6(%rip)
3523(7): mov 0x21dc96(%rip),%rcx
352a(7): mov 0x21dc57(%rip),%rdx
3531(3): mov %rbx,%rsi
3534(4): lea 0x0(%rbx,%rcx,1),%rax
3538(3): cmp %rax,%rdx
353b(2): jbe 0x5b(%rip)
353d(7): lea 0x21e07c(%rip),%rdi
3544(4): cmp $0x0,(%rdi)
3548(6): jz 0x1db(%rip)
354e(3): sub %rsi,%rdx
3551(3): xor %r8d,%r8d
3554(2): xor %ecx,%ecx
3556(4): add $0x8,%rdi
355a(5): call 0x15026(%rip)
355f(4): cmp $0xfffffffe,%rax
3563(6): jz 0xfc7(%rip)
3569(4): cmp $0xffffffff,%rax
356d(5): mov $0x1,%edx
3572(7): mov 0x21dc47(%rip),%rcx
3579(4): cmove %rdx,%rax
357d(3): add (%r15),%rax
3580(7): mov 0x21dc01(%rip),%rdx
3587(3): mov %rax,%rsi
358a(3): mov %rax,(%r15)
358d(4): lea 0x0(%rax,%rcx,1),%rax
3591(3): cmp %rax,%rdx
3594(2): jnbe 0xffffffa9(%rip)
3596(8): cmp $0x0,0x21da92(%rip)
359e(6): jz 0x81d(%rip)
35a4(3): cmp %rsi,%r13
35a7(6): jnb 0xe3a(%rip)
35ad(4): mov (%rsp),%rax
35b1(3): mov (%rax),%r8
35b4(3): mov %rsi,%rax
35b7(2): jmp 0xf(%rip)
35b9(4): sub $0x1,%rax
35bd(3): cmp %rax,%r13
35c0(6): jz 0x807(%rip)
35c6(4): movzx 0xffffffff(%rax),%edi
35ca(6): test $0x20,0x1(%r8,%rdi,2)
35d0(2): jnz 0xffffffe9(%rip)
35d2(5): cmp %rax,0x18(%rsp)
35d7(7): setb 0x21db92(%rip)
35de(3): cmp %rsi,%r14
35e1(2): jbe 0x33(%rip)
35e3(4): mov (%rsp),%rax
35e7(2): xor %edi,%edi
35e9(3): mov (%rax),%r8
35ec(2): jmp 0x14(%rip)
35ee(4): add $0x1,%rsi
35f2(5): mov $0x1,%edi
35f7(3): cmp %rsi,%r14
35fa(6): jz 0x76d(%rip)
3600(3): movzx (%rsi),%eax
3603(6): test $0x20,0x1(%r8,%rax,2)
3609(2): jnz 0xffffffe5(%rip)
360b(3): test %dil,%dil
360e(6): jnz 0x115e(%rip)
3614(3): sub %rsi,%rdx
3617(3): sub %rdx,%rcx
361a(7): sub 0x21d9ef(%rip),%rcx
3621(3): test %rcx,%rcx
3624(3): mov %rcx,%r10
3627(6): jle 0x74c(%rip)
362d(7): mov 0x21db34(%rip),%rdx
3634(7): lea 0x21db65(%rip),%r11
363b(3): cmp %rdx,%r14
363e(3): mov %rdx,%r9
3641(7): mov %rdx,0x21db58(%rip)
3648(2): jbe 0x32(%rip)
364a(4): mov (%rsp),%rax
364e(2): xor %ecx,%ecx
3650(3): mov (%rax),%rsi
3653(2): jmp 0x14(%rip)
3655(4): add $0x1,%r9
3659(5): mov $0x1,%ecx
365e(3): cmp %r9,%r14
3661(6): jz 0x73b(%rip)
3667(4): movzx (%r9),%eax
366b(5): test $0x20,0x1(%rsi,%rax,2)
3670(2): jnz 0xffffffe5(%rip)
3672(2): test %cl,%cl
3674(6): jnz 0x728(%rip)
367a(7): mov 0x21db1f(%rip),%rax
3681(7): mov %r9,0x21db20(%rip)
3688(3): add %r10,%rax
368b(3): cmp %r9,%rbp
368e(6): jbe 0x135(%rip)
3694(3): cmp %rax,%r9
3697(6): jnb 0x718(%rip)
369d(3): mov %r10,%r15
36a0(3): mov %r9,%r14
36a3(2): jmp 0x55(%rip)
36a5(3): mov %rbp,%rdx
36a8(4): lea 0x8(%rax),%rdi
36ac(3): xor %r8d,%r8d
36af(3): sub %r14,%rdx
36b2(2): xor %ecx,%ecx
36b4(3): mov %r14,%rsi
36b7(5): mov %r11,0x8(%rsp)
36bc(5): call 0x14ec4(%rip)
36c1(4): cmp $0xfffffffe,%rax
36c5(6): jz 0xe65(%rip)
36cb(4): cmp $0xffffffff,%rax
36cf(5): mov $0x1,%edx
36d4(5): mov 0x8(%rsp),%r11
36d9(4): cmove %rdx,%rax
36dd(3): add %rax,%r14
36e0(3): cmp %r14,%rbp
36e3(6): jbe 0xcc7(%rip)
36e9(3): mov (%r11),%rax
36ec(3): add %r15,%rax
36ef(3): cmp %rax,%r14
36f2(6): jnb 0x6b6(%rip)
36f8(7): lea 0x21dec1(%rip),%rax
36ff(7): mov %r14,0x21daa2(%rip)
3706(4): cmp $0x0,(%rax)
370a(2): jnz 0xffffff9b(%rip)
370c(4): movzx (%r14),%eax
3710(7): lea 0x21dc69(%rip),%rsi
3717(4): cmp $0x0,0x0(%rsi,%rax,1)
371b(2): jnz 0x6d(%rip)
371d(4): add $0x1,%r14
3721(2): jmp 0xffffffbf(%rip)
3723(3): movzx (%rsi),%edi
3726(7): lea 0x21dc53(%rip),%r11
372d(5): cmp $0x0,0x0(%r11,%rdi,1)
3732(2): jnz 0x12(%rip)
3734(4): add $0x1,%rsi
3738(3): mov %rsi,(%r15)
373b(4): lea 0x0(%rsi,%rcx,1),%rax
373f(5): jmp 0xfffffdf9(%rip)
3744(3): cmp %rdx,%rsi
3747(6): jnb 0xfffffdf1(%rip)
374d(4): lea 0x1(%rsi),%rax
3751(2): jmp 0x20(%rip)
3753(5): nop 0x0(%rax,%rax,1)
3758(3): movzx (%rsi),%edi
375b(7): lea 0x21dc1e(%rip),%r11
3762(4): lea 0x1(%rax),%rax
3766(5): cmp $0x0,0x0(%r11,%rdi,1)
376b(6): jz 0xfb0(%rip)
3771(3): cmp %rax,%rdx
3774(3): mov %rax,%rsi
3777(2): jnz 0xffffffe1(%rip)
3779(3): mov %rdx,(%r15)
377c(4): lea 0x0(%rdx,%rcx,1),%rax
3780(5): jmp 0xfffffdb8(%rip)
3785(3): nop (%rax)
3788(3): cmp %r14,%rbp
378b(2): jnbe 0x22(%rip)
378d(5): jmp 0xc1d(%rip)
3792(6): nop 0x0(%rax,%rax,1)
3798(4): movzx (%r14),%eax
379c(7): lea 0x21dbdd(%rip),%rsi
37a3(4): cmp $0x0,0x0(%rsi,%rax,1)
37a7(6): jz 0xffffff42(%rip)
37ad(4): add $0x1,%r14
37b1(3): cmp %r14,%rbp
37b4(2): jnz 0xffffffe4(%rip)
37b6(7): mov 0x21d9ab(%rip),%rdx
37bd(3): mov %r15,%r10
37c0(3): mov %rbp,%r9
37c3(7): mov 0x21d9d6(%rip),%rcx
37ca(3): add %rcx,%r10
37cd(3): cmp %r10,%r9
37d0(2): jnb 0x9(%rip)
37d2(7): mov %r9,0x21d9cf(%rip)
37d9(7): mov 0x21d9c8(%rip),%rax
37e0(3): cmp %rcx,%rax
37e3(6): jbe 0x5ec(%rip)
37e9(8): cmp $0x0,0x21d83f(%rip)
37f1(7): mov $0x0,0x21d958(%rip)
37f8(7): mov 0x21d9a1(%rip),%r8
37ff(3): setnz %cl
3802(3): cmp %rax,%rbp
3805(4): setnbe %sil
3809(2): and %esi,%ecx
380b(4): mov (%rsp),%rsi
380f(6): mov %cl,0x21d97b(%rip)
3815(3): mov (%rsi),%rdi
3818(2): xor %esi,%esi
381a(2): jmp 0x18(%rip)
381c(4): nop 0x0(%rax)
3820(4): sub $0x1,%rax
3824(5): mov $0x1,%esi
3829(3): cmp %rax,%r8
382c(6): jnb 0xee3(%rip)
3832(4): movzx 0xffffffff(%rax),%ecx
3836(5): test $0x20,0x1(%rdi,%rcx,2)
383b(2): jnz 0xffffffe5(%rip)
383d(3): test %sil,%sil
3840(6): jnz 0xecf(%rip)
3846(7): lea 0x21d913(%rip),%rax
384d(7): mov 0x21d964(%rip),%r14
3854(3): sub (%rax),%rdx
3857(3): sub %rdx,%r14
385a(7): sub 0x21d7af(%rip),%r14
3861(3): test %r14,%r14
3864(6): jle 0x459(%rip)
386a(7): mov 0x21d90f(%rip),%rax
3871(3): cmp %rax,%r13
3874(7): mov %rax,0x21d8cd(%rip)
387b(2): jnb 0x32(%rip)
387d(4): mov (%rsp),%rsi
3881(2): xor %ecx,%ecx
3883(3): mov (%rsi),%rsi
3886(2): jmp 0x14(%rip)
3888(4): sub $0x1,%rax
388c(5): mov $0x1,%ecx
3891(3): cmp %rax,%r13
3894(6): jz 0xe93(%rip)
389a(4): movzx 0xffffffff(%rax),%edx
389e(5): test $0x20,0x1(%rsi,%rdx,2)
38a3(2): jnz 0xffffffe5(%rip)
38a5(2): test %cl,%cl
38a7(6): jnz 0xeb9(%rip)
38ad(7): mov 0x21d894(%rip),%rdx
38b4(7): lea 0x21d885(%rip),%r13
38bb(4): lea 0x0(%rbx,%r14,1),%rax
38bf(7): mov %rbx,0x21d87a(%rip)
38c6(3): mov %rbx,%rsi
38c9(3): cmp %rax,%rdx
38cc(2): jbe 0x56(%rip)
38ce(7): lea 0x21dceb(%rip),%rdi
38d5(4): cmp $0x0,(%rdi)
38d9(6): jz 0x38b(%rip)
38df(3): sub %rsi,%rdx
38e2(3): xor %r8d,%r8d
38e5(2): xor %ecx,%ecx
38e7(4): add $0x8,%rdi
38eb(5): call 0x14c95(%rip)
38f0(4): cmp $0xfffffffe,%rax
38f4(6): jz 0xc36(%rip)
38fa(4): cmp $0xffffffff,%rax
38fe(5): mov $0x1,%edx
3903(4): cmove %rdx,%rax
3907(4): add 0x0(%r13),%rax
390b(7): mov 0x21d836(%rip),%rdx
3912(3): mov %rax,%rsi
3915(4): mov %rax,0x0(%r13)
3919(4): lea 0x0(%rax,%r14,1),%rax
391d(3): cmp %rax,%rdx
3920(2): jnbe 0xffffffae(%rip)
3922(3): cmp %rsi,%rdx
3925(3): mov %rsi,%rbx
3928(6): jbe 0x3ab(%rip)
392e(8): cmp $0x0,0x21d6fa(%rip)
3936(7): mov $0x0,0x21d833(%rip)
393d(3): setnz %al
3940(5): cmp %rsi,0x18(%rsp)
3945(3): setb %cl
3948(2): and %ecx,%eax
394a(2): xor %ecx,%ecx
394c(6): mov %al,0x21d7de(%rip)
3952(4): mov (%rsp),%rax
3956(3): mov (%rax),%rsi
3959(2): jmp 0x19(%rip)
395b(5): nop 0x0(%rax,%rax,1)
3960(4): add $0x1,%rbx
3964(5): mov $0x1,%ecx
3969(3): cmp %rdx,%rbx
396c(6): jz 0xdc7(%rip)
3972(3): movzx (%rbx),%eax
3975(5): test $0x20,0x1(%rsi,%rax,2)
397a(2): jnz 0xffffffe6(%rip)
397c(2): test %cl,%cl
397e(6): jnz 0xdb5(%rip)
3984(7): movzx 0x21deff(%rip),%edx
398b(2): test %dl,%dl
398d(6): jz 0x352(%rip)
3993(5): movsxd 0x28(%r12),%rdx
3998(7): mov 0x21d969(%rip),%rsi
399f(7): lea 0x188d5(%rip),%rdi
39a6(4): mov 0x0(%rsi,%rdx,8),%rsi
39aa(8): lea 0x0(,%rdx,8),%rcx
39b2(3): test %rsi,%rsi
39b5(4): cmove %rdi,%rsi
39b9(5): mov 0x20(%r12),%rdi
39be(2): test %edx,%edx
39c0(4): lea 0x1(%rdi),%rbx
39c4(2): jle 0xe(%rip)
39c6(7): mov 0x21d933(%rip),%rax
39cd(5): sub 0xfffffff8(%rax,%rcx,1),%rbx
39d2(7): mov 0x21d747(%rip),%rdi
39d9(5): call 0xffffe397(%rip)
39de(7): lea 0x17eba(%rip),%rcx
39e5(3): mov %rax,%rbp
39e8(3): mov %rax,%rdi
39eb(3): mov %rbx,%r8
39ee(4): or $0xffffffff,%rdx
39f2(5): mov $0x1,%esi
39f7(2): xor %eax,%eax
39f9(5): call 0xffffe707(%rip)
39fe(2): cwde 
3a00(3): add %rax,%rbp
3a03(7): mov %rbp,0x21d71e(%rip)
3a0a(6): mov 0x21de74(%rip),%eax
3a10(3): cmp $0x2,%eax
3a13(6): jz 0x3c8(%rip)
3a19(6): jb 0x5dd(%rip)
3a1f(3): cmp $0x3,%eax
3a22(6): jnz 0x1fb(%rip)
3a28(7): mov 0x21d5f9(%rip),%rdx
3a2f(7): lea 0x17e74(%rip),%rsi
3a36(5): mov $0x1,%edi
3a3b(2): xor %eax,%eax
3a3d(5): call 0xffffe573(%rip)
3a42(7): mov 0x21d67f(%rip),%rdi
3a49(4): mov 0x28(%rdi),%rax
3a4d(4): cmp 0x30(%rdi),%rax
3a51(6): jnb 0xc21(%rip)
3a57(4): lea 0x1(%rax),%rdx
3a5b(4): mov %rdx,0x28(%rdi)
3a5f(3): mov $0x7b,(%rax)
3a62(7): mov 0x21d737(%rip),%rdi
3a69(7): mov 0x21d738(%rip),%rsi
3a70(5): call 0x1530(%rip)
3a75(7): mov 0x21d64c(%rip),%rcx
3a7c(7): lea 0x17e2c(%rip),%rdi
3a83(5): mov $0x2,%edx
3a88(5): mov $0x1,%esi
3a8d(5): call 0xffffe4f3(%rip)
3a92(7): mov 0x21d6e7(%rip),%rdi
3a99(7): mov 0x21d6e8(%rip),%rsi
3aa0(5): call 0x1500(%rip)
3aa5(7): mov 0x21d61c(%rip),%rcx
3aac(7): lea 0x17dfc(%rip),%rdi
3ab3(5): mov $0x2,%edx
3ab8(5): mov $0x1,%esi
3abd(5): call 0xffffe4c3(%rip)
3ac2(7): lea 0x21d697(%rip),%rax
3ac9(7): mov 0x21d698(%rip),%rbp
3ad0(3): mov (%rax),%rbx
3ad3(7): lea 0x21dae6(%rip),%rax
3ada(4): cmp $0x0,(%rax)
3ade(3): mov %rbx,%r13
3ae1(6): jz 0x88d(%rip)
3ae7(3): mov %rbp,%rdx
3aea(4): lea 0x8(%rax),%rdi
3aee(3): xor %r8d,%r8d
3af1(3): sub %rbx,%rdx
3af4(2): xor %ecx,%ecx
3af6(3): mov %rbx,%rsi
3af9(5): call 0x14a87(%rip)
3afe(4): cmp $0xfffffffe,%rax
3b02(6): jz 0xa28(%rip)
3b08(4): cmp $0xffffffff,%rax
3b0c(6): jz 0xbcf(%rip)
3b12(3): add %rax,%rbx
3b15(3): mov %r13,%rdi
3b18(3): mov %rbx,%rsi
3b1b(5): call 0x1485(%rip)
3b20(7): mov 0x21d5a1(%rip),%rcx
3b27(7): lea 0x17d81(%rip),%rdi
3b2e(5): mov $0x2,%edx
3b33(5): mov $0x1,%esi
3b38(5): call 0xffffe448(%rip)
3b3d(3): mov %rbx,%rdi
3b40(3): mov %rbp,%rsi
3b43(5): call 0x145d(%rip)
3b48(7): mov 0x21d579(%rip),%rcx
3b4f(7): lea 0x17d59(%rip),%rdi
3b56(5): mov $0x2,%edx
3b5b(5): mov $0x1,%esi
3b60(5): call 0xffffe420(%rip)
3b65(7): mov 0x21d5d4(%rip),%rdi
3b6c(7): mov 0x21d5d5(%rip),%rsi
3b73(5): call 0x142d(%rip)
3b78(7): mov 0x21d549(%rip),%rdi
3b7f(4): mov 0x28(%rdi),%rax
3b83(4): cmp 0x30(%rdi),%rax
3b87(6): jnb 0xb45(%rip)
3b8d(4): lea 0x1(%rax),%rdx
3b91(4): mov %rdx,0x28(%rdi)
3b95(3): mov $0x7d,(%rax)
3b98(7): cmp $0x0,0x21dceb(%rip)
3b9f(2): jnz 0xb(%rip)
3ba1(7): cmp $0x0,0x21dce1(%rip)
3ba8(2): jz 0x55(%rip)
3baa(7): mov 0x21d517(%rip),%rdi
3bb1(4): mov 0x28(%rdi),%rax
3bb5(4): cmp 0x30(%rdi),%rax
3bb9(6): jnb 0xac8(%rip)
3bbf(4): lea 0x1(%rax),%rdx
3bc3(4): mov %rdx,0x28(%rdi)
3bc7(3): mov $0x7b,(%rax)
3bca(7): mov 0x21d54f(%rip),%rdi
3bd1(7): mov 0x21d550(%rip),%rsi
3bd8(5): call 0x13c8(%rip)
3bdd(7): mov 0x21d4e4(%rip),%rdi
3be4(4): mov 0x28(%rdi),%rax
3be8(4): cmp 0x30(%rdi),%rax
3bec(6): jnb 0xaa4(%rip)
3bf2(4): lea 0x1(%rax),%rdx
3bf6(4): mov %rdx,0x28(%rdi)
3bfa(3): mov $0x7d,(%rax)
3bfd(7): mov 0x21d4c4(%rip),%rdi
3c04(4): mov 0x28(%rdi),%rax
3c08(4): cmp 0x30(%rdi),%rax
3c0c(6): jnb 0xbfa(%rip)
3c12(4): lea 0x1(%rax),%rdx
3c16(4): mov %rdx,0x28(%rdi)
3c1a(3): mov $0xa,(%rax)
3c1d(6): add $0x1,0x10(%rsp)
3c23(4): add $0x30,%r12
3c27(5): mov 0x10(%rsp),%rax
3c2c(7): cmp 0x21d6ad(%rip),%rax
3c33(6): jl 0xfffff16e(%rip)
3c39(2): xor %eax,%eax
3c3b(8): mov 0x88(%rsp),%rsi
3c43(9): xor $0x28,%rsi
3c4c(6): jnz 0xaf3(%rip)
3c52(7): add $0x98,%rsp
3c59(1): pop %rbx
3c5a(1): pop %rbp
3c5b(2): pop %r12
3c5d(2): pop %r13
3c5f(2): pop %r14
3c61(2): pop %r15
3c63(1): ret near (%rsp)
3c64(3): movzx (%rsi),%ecx
3c67(7): lea 0x21d712(%rip),%rdi
3c6e(4): cmp $0x0,0x0(%rdi,%rcx,1)
3c72(2): jnz 0x13(%rip)
3c74(4): add $0x1,%rsi
3c78(4): mov %rsi,0x0(%r13)
3c7c(4): lea 0x0(%rsi,%r14,1),%rax
3c80(5): jmp 0xfffffc49(%rip)
3c85(3): cmp %rsi,%rdx
3c88(6): jbe 0xfffffc41(%rip)
3c8e(4): lea 0x1(%rsi),%rax
3c92(2): jmp 0x16(%rip)
3c94(3): movzx (%rsi),%ecx
3c97(7): lea 0x21d6e2(%rip),%rdi
3c9e(4): lea 0x1(%rax),%rax
3ca2(4): cmp $0x0,0x0(%rdi,%rcx,1)
3ca6(2): jz 0xffffffd2(%rip)
3ca8(3): cmp %rax,%rdx
3cab(3): mov %rax,%rsi
3cae(2): jnz 0xffffffe6(%rip)
3cb0(4): mov %rdx,0x0(%r13)
3cb4(4): lea 0x0(%rdx,%r14,1),%rax
3cb8(5): jmp 0xfffffc11(%rip)
3cbd(b): mov $0x0,0x21d478(%rip)
3cc8(b): mov $0x0,0x21d475(%rip)
3cd3(7): mov $0x0,0x21d456(%rip)
3cda(5): jmp 0xfffffcaa(%rip)
3cdf(7): movzx 0x21dba3(%rip),%ecx
3ce6(2): test %cl,%cl
3ce8(6): jz 0xfffffd22(%rip)
3cee(7): lea 0x21d46b(%rip),%rsi
3cf5(5): mov 0x20(%r12),%rax
3cfa(3): add (%rsi),%rax
3cfd(3): cmp %rax,%rbp
3d00(7): mov %rax,0x21d419(%rip)
3d07(7): mov %rax,0x21d41a(%rip)
3d0e(6): jbe 0xfffffcfc(%rip)
3d14(4): mov (%rsp),%rsi
3d18(3): mov (%rsi),%rsi
3d1b(2): jmp 0x11(%rip)
3d1d(4): add $0x1,%rax
3d21(2): mov %ecx,%edx
3d23(3): cmp %rax,%rbp
3d26(6): jz 0xa2e(%rip)
3d2c(3): movzx (%rax),%edi
3d2f(5): test $0x20,0x1(%rsi,%rdi,2)
3d34(2): jz 0xffffffe9(%rip)
3d36(2): test %dl,%dl
3d38(6): jz 0xfffffcd2(%rip)
3d3e(7): mov %rax,0x21d3e3(%rip)
3d45(5): jmp 0xfffffcc5(%rip)
3d4a(4): lea 0x0(%rsi,%rcx,1),%rbx
3d4e(5): jmp 0xfffff781(%rip)
3d53(5): mov 0x10(%r12),%rcx
3d58(7): lea 0x21d401(%rip),%rax
3d5f(3): mov (%rax),%rsi
3d62(5): jmp 0xfffff6ac(%rip)
3d67(7): mov %r14,0x21d412(%rip)
3d6e(5): jmp 0xfffff8a6(%rip)
3d73(b): mov $0x0,0x21d422(%rip)
3d7e(b): mov $0x0,0x21d41f(%rip)
3d89(7): mov $0x0,0x21d400(%rip)
3d90(7): mov 0x21d3d1(%rip),%rdx
3d97(5): jmp 0xfffffaaf(%rip)
3d9c(7): mov %r9,0x21d3fd(%rip)
3da3(5): jmp 0xfffff8d7(%rip)
3da8(7): mov 0x21d3b9(%rip),%rdx
3daf(7): mov 0x21d3ea(%rip),%rcx
3db6(5): jmp 0xfffffa23(%rip)
3dbb(7): mov $0x0,0x21d3ae(%rip)
3dc2(5): jmp 0xfffff81c(%rip)
3dc7(3): mov %r13,%rax
3dca(5): jmp 0xfffff808(%rip)
3dcf(7): mov $0x0,0x21d3ba(%rip)
3dd6(5): jmp 0xfffffa70(%rip)
3ddb(7): mov 0x21d246(%rip),%rdx
3de2(7): lea 0x17abb(%rip),%rsi
3de9(5): mov $0x1,%edi
3dee(2): xor %eax,%eax
3df0(5): call 0xffffe1c0(%rip)
3df5(7): mov 0x21d3a4(%rip),%rdi
3dfc(7): mov 0x21d3a5(%rip),%rsi
3e03(5): call 0x119d(%rip)
3e08(7): cmp $0x0,0x21d381(%rip)
3e0f(2): jz 0x15(%rip)
3e11(7): mov 0x21d2b0(%rip),%rsi
3e18(7): mov 0x21d211(%rip),%rdi
3e1f(5): call 0xffffe091(%rip)
3e24(7): mov 0x21d29d(%rip),%rdi
3e2b(4): mov 0x28(%rdi),%rax
3e2f(4): cmp 0x30(%rdi),%rax
3e33(6): jnb 0x8c1(%rip)
3e39(4): lea 0x1(%rax),%rdx
3e3d(4): mov %rdx,0x28(%rdi)
3e41(3): mov $0x22,(%rax)
3e44(7): mov 0x21d27d(%rip),%rcx
3e4b(7): lea 0x17a55(%rip),%rdi
3e52(5): mov $0x2,%edx
3e57(5): mov $0x1,%esi
3e5c(5): call 0xffffe124(%rip)
3e61(7): cmp $0x0,0x21d308(%rip)
3e68(2): jz 0x15(%rip)
3e6a(7): mov 0x21d257(%rip),%rsi
3e71(7): mov 0x21d1b8(%rip),%rdi
3e78(5): call 0xffffe038(%rip)
3e7d(7): mov 0x21d2fc(%rip),%rdi
3e84(7): mov 0x21d2fd(%rip),%rsi
3e8b(5): call 0x1115(%rip)
3e90(7): mov 0x21d231(%rip),%rdi
3e97(4): mov 0x28(%rdi),%rax
3e9b(4): cmp 0x30(%rdi),%rax
3e9f(6): jnb 0x846(%rip)
3ea5(4): lea 0x1(%rax),%rdx
3ea9(4): mov %rdx,0x28(%rdi)
3ead(3): mov $0x22,(%rax)
3eb0(7): mov 0x21d211(%rip),%rcx
3eb7(7): lea 0x179e9(%rip),%rdi
3ebe(5): mov $0x2,%edx
3ec3(5): mov $0x1,%esi
3ec8(5): call 0xffffe0b8(%rip)
3ecd(7): lea 0x21d28c(%rip),%rax
3ed4(7): mov 0x21d28d(%rip),%rsi
3edb(3): mov (%rax),%rdi
3ede(5): call 0x10c2(%rip)
3ee3(7): cmp $0x0,0x21d266(%rip)
3eea(2): jz 0x15(%rip)
3eec(7): mov 0x21d1d5(%rip),%rsi
3ef3(7): mov 0x21d136(%rip),%rdi
3efa(5): call 0xffffdfb6(%rip)
3eff(7): mov 0x21d1c2(%rip),%rdi
3f06(4): mov 0x28(%rdi),%rax
3f0a(4): cmp 0x30(%rdi),%rax
3f0e(6): jnb 0x7af(%rip)
3f14(4): lea 0x1(%rax),%rdx
3f18(4): mov %rdx,0x28(%rdi)
3f1c(3): mov $0x22,(%rax)
3f1f(7): mov 0x21d1a2(%rip),%rcx
3f26(7): lea 0x1797a(%rip),%rdi
3f2d(5): mov $0x2,%edx
3f32(5): mov $0x1,%esi
3f37(5): call 0xffffe049(%rip)
3f3c(7): cmp $0x0,0x21d1ed(%rip)
3f43(2): jz 0x15(%rip)
3f45(7): mov 0x21d17c(%rip),%rsi
3f4c(7): mov 0x21d0dd(%rip),%rdi
3f53(5): call 0xffffdf5d(%rip)
3f58(7): mov 0x21d1e1(%rip),%rdi
3f5f(7): mov 0x21d1e2(%rip),%rsi
3f66(5): call 0x103a(%rip)
3f6b(7): mov 0x21d156(%rip),%rdi
3f72(4): mov 0x28(%rdi),%rax
3f76(4): cmp 0x30(%rdi),%rax
3f7a(6): jnb 0x734(%rip)
3f80(4): lea 0x1(%rax),%rdx
3f84(4): mov %rdx,0x28(%rdi)
3f88(3): mov $0x22,(%rax)
3f8b(7): cmp $0x0,0x21d8f8(%rip)
3f92(2): jnz 0xf(%rip)
3f94(7): cmp $0x0,0x21d8ee(%rip)
3f9b(6): jz 0xfffffc62(%rip)
3fa1(7): mov 0x21d120(%rip),%rcx
3fa8(7): lea 0x178f8(%rip),%rdi
3faf(5): mov $0x2,%edx
3fb4(5): mov $0x1,%esi
3fb9(5): call 0xffffdfc7(%rip)
3fbe(7): mov 0x21d15b(%rip),%rdi
3fc5(7): mov 0x21d15c(%rip),%rsi
3fcc(5): call 0xfd4(%rip)
3fd1(7): mov 0x21d0f0(%rip),%rdi
3fd8(4): mov 0x28(%rdi),%rax
3fdc(4): cmp 0x30(%rdi),%rax
3fe0(6): jnb 0x6bf(%rip)
3fe6(4): lea 0x1(%rax),%rdx
3fea(4): mov %rdx,0x28(%rdi)
3fee(3): mov $0x22,(%rax)
3ff1(5): jmp 0xfffffc0c(%rip)
3ff6(7): cmp $0x0,0x21d88b(%rip)
3ffd(2): jnz 0x6a(%rip)
3fff(7): cmp $0x0,0x21d884(%rip)
4006(7): mov 0x21d113(%rip),%rdi
400d(7): mov 0x21d114(%rip),%rsi
4014(6): jz 0x208(%rip)
401a(5): call 0xf86(%rip)
401f(7): mov 0x21d0a2(%rip),%rdi
4026(4): mov 0x28(%rdi),%rax
402a(4): cmp 0x30(%rdi),%rax
402e(6): jnb 0x787(%rip)
4034(4): lea 0x1(%rax),%rdx
4038(4): mov %rdx,0x28(%rdi)
403c(3): mov $0x3a,(%rax)
403f(7): mov 0x21cfca(%rip),%rdi
4046(7): mov 0x21d0db(%rip),%rax
404d(7): add 0x21d304(%rip),%rdi
4054(7): sub 0x21d0c5(%rip),%rax
405b(3): sub %rax,%rdi
405e(4): sub $0x1,%rdi
4062(5): call 0xeee(%rip)
4067(7): mov 0x21d132(%rip),%rdi
406e(7): cmp 0x21d133(%rip),%rdi
4075(6): jb 0x27e(%rip)
407b(7): mov 0x21d146(%rip),%rdi
4082(7): mov 0x21d0ff(%rip),%rax
4089(7): sub 0x21cf80(%rip),%rdi
4090(7): sub 0x21d0e9(%rip),%rax
4097(3): sub %rax,%rdi
409a(2): xor %eax,%eax
409c(7): cmp $0x0,0x21d0cd(%rip)
40a3(2): jz 0x9(%rip)
40a5(7): mov 0x21d104(%rip),%rax
40ac(3): sub %rax,%rdi
40af(5): call 0xea1(%rip)
40b4(7): cmp $0x0,0x21d0b5(%rip)
40bb(2): jz 0x15(%rip)
40bd(7): mov 0x21d004(%rip),%rsi
40c4(7): mov 0x21cf65(%rip),%rdi
40cb(5): call 0xffffdde5(%rip)
40d0(7): mov 0x21d0b1(%rip),%rsi
40d7(7): mov 0x21d0a2(%rip),%rdi
40de(5): call 0xec2(%rip)
40e3(7): mov 0x21cf26(%rip),%rdi
40ea(5): call 0xe66(%rip)
40ef(7): lea 0x21d06a(%rip),%rax
40f6(7): mov 0x21d06b(%rip),%rsi
40fd(3): mov (%rax),%rdi
4100(5): call 0xea0(%rip)
4105(7): cmp $0x0,0x21d044(%rip)
410c(6): jnz 0x13e(%rip)
4112(7): mov 0x21d027(%rip),%rcx
4119(7): mov 0x21d028(%rip),%rdx
4120(7): lea 0x21d019(%rip),%r13
4127(3): cmp %rdx,%rcx
412a(6): jb 0x666(%rip)
4130(7): cmp $0x0,0x21d753(%rip)
4137(6): jnz 0xd3(%rip)
413d(7): cmp $0x0,0x21d745(%rip)
4144(6): jz 0xfffffab9(%rip)
414a(7): cmp $0x0,0x21d737(%rip)
4151(6): jz 0x68b(%rip)
4157(7): lea 0x21d002(%rip),%rsi
415e(7): mov 0x21d003(%rip),%rax
4165(7): mov 0x21d05c(%rip),%rdi
416c(3): sub (%rsi),%rax
416f(3): sub %rax,%rdi
4172(2): xor %eax,%eax
4174(7): cmp $0x0,0x21cfd5(%rip)
417b(2): jz 0x9(%rip)
417d(7): mov 0x21d02c(%rip),%rax
4184(3): sub %rax,%rdi
4187(5): call 0xdc9(%rip)
418c(7): cmp $0x0,0x21d6f7(%rip)
4193(6): jz 0x649(%rip)
4199(7): cmp $0x0,0x21d6e8(%rip)
41a0(6): jz 0xfffffa5d(%rip)
41a6(7): mov 0x21ce63(%rip),%rdi
41ad(5): call 0xda3(%rip)
41b2(7): mov 0x21cf67(%rip),%rdi
41b9(7): mov 0x21cf68(%rip),%rsi
41c0(5): call 0xde0(%rip)
41c5(5): jmp 0xfffffa38(%rip)
41ca(3): movzx (%rbx),%eax
41cd(7): lea 0x21d1ac(%rip),%rdi
41d4(4): cmp $0x0,0x0(%rdi,%rax,1)
41d8(6): jz 0x18d(%rip)
41de(3): cmp %rsi,%rbx
41e1(2): jb 0x1b(%rip)
41e3(5): jmp 0xfffff2ec(%rip)
41e8(3): movzx (%rbx),%eax
41eb(7): lea 0x21d18e(%rip),%rdi
41f2(4): cmp $0x0,0x0(%rdi,%rax,1)
41f6(6): jz 0xfffff2d9(%rip)
41fc(4): add $0x1,%rbx
4200(3): cmp %rsi,%rbx
4203(2): jnz 0xffffffe5(%rip)
4205(5): jmp 0xfffff2ca(%rip)
420a(7): cmp $0x0,0x21d677(%rip)
4211(6): jnz 0xffffff46(%rip)
4217(5): jmp 0xfffff9e6(%rip)
421c(5): call 0xd84(%rip)
4221(7): mov 0x21cde8(%rip),%rdi
4228(7): mov 0x21cef9(%rip),%rax
422f(7): add 0x21d122(%rip),%rdi
4236(7): sub 0x21cee3(%rip),%rax
423d(3): sub %rax,%rdi
4240(5): call 0xd10(%rip)
4245(5): jmp 0xfffffe22(%rip)
424a(7): mov 0x21ce77(%rip),%rsi
4251(7): mov 0x21cdd8(%rip),%rdi
4258(7): lea 0x21cee1(%rip),%r13
425f(5): call 0xffffdc51(%rip)
4264(7): mov 0x21ced5(%rip),%rcx
426b(7): mov 0x21ced6(%rip),%rdx
4272(3): cmp %rdx,%rcx
4275(6): jnb 0xfffffebb(%rip)
427b(7): lea 0x21cede(%rip),%rsi
4282(7): mov 0x21cedf(%rip),%rax
4289(3): sub (%rsi),%rax
428c(7): mov 0x21cf35(%rip),%rsi
4293(3): sub %rax,%rsi
4296(3): mov %rsi,%rax
4299(2): xor %esi,%esi
429b(7): cmp $0x0,0x21ceae(%rip)
42a2(2): jz 0x9(%rip)
42a4(7): mov 0x21cf05(%rip),%rsi
42ab(3): sub %rsi,%rax
42ae(3): sub %rcx,%rdx
42b1(3): mov %rax,%rdi
42b4(2): xor %eax,%eax
42b6(3): sub %rdx,%rdi
42b9(7): cmp $0x0,0x21ce70(%rip)
42c0(2): jz 0x9(%rip)
42c2(7): mov 0x21cee7(%rip),%rax
42c9(3): sub %rax,%rdi
42cc(5): call 0xc84(%rip)
42d1(7): cmp $0x0,0x21ce58(%rip)
42d8(6): jnz 0x4ec(%rip)
42de(4): mov 0x0(%r13),%rdi
42e2(7): mov 0x21ce5f(%rip),%rsi
42e9(5): call 0xcb7(%rip)
42ee(5): jmp 0xfffffe9e(%rip)
42f3(7): mov 0x21ceae(%rip),%rsi
42fa(5): call 0xca6(%rip)
42ff(7): cmp $0x0,0x21ce8a(%rip)
4306(6): jnz 0x472(%rip)
430c(7): mov 0x21ceb5(%rip),%rdi
4313(7): mov 0x21ce6e(%rip),%rax
431a(7): sub 0x21ccef(%rip),%rdi
4321(7): sub 0x21ce58(%rip),%rax
4328(3): sub %rax,%rdi
432b(2): xor %eax,%eax
432d(7): cmp $0x0,0x21ce3c(%rip)
4334(2): jz 0x9(%rip)
4336(7): mov 0x21ce73(%rip),%rax
433d(3): sub %rax,%rdi
4340(7): mov 0x21ce61(%rip),%rax
4347(7): sub 0x21ce52(%rip),%rax
434e(3): sub %rax,%rdi
4351(2): xor %eax,%eax
4353(7): cmp $0x0,0x21ce36(%rip)
435a(6): jz 0xfffffd52(%rip)
4360(5): jmp 0xfffffd45(%rip)
4365(4): add $0x1,%rbx
4369(5): jmp 0xfffff166(%rip)
436e(3): movzx (%rbx),%eax
4371(7): lea 0x21d008(%rip),%rsi
4378(4): cmp $0x0,0x0(%rsi,%rax,1)
437c(2): jnz 0xb(%rip)
437e(4): add $0x1,%rbx
4382(5): jmp 0xfffff793(%rip)
4387(3): cmp %rbx,%rbp
438a(6): jbe 0xfffff78b(%rip)
4390(3): movzx (%rbx),%eax
4393(7): lea 0x21cfe6(%rip),%rsi
439a(4): cmp $0x0,0x0(%rsi,%rax,1)
439e(6): jz 0xfffff777(%rip)
43a4(4): add $0x1,%rbx
43a8(2): jmp 0xffffffdf(%rip)
43aa(3): mov %r15,%r10
43ad(3): mov %r14,%r9
43b0(7): mov 0x21cdb1(%rip),%rdx
43b7(5): jmp 0xfffff40c(%rip)
43bc(7): mov $0x1,0x21ce3f(%rip)
43c3(5): jmp 0xffffe986(%rip)
43c8(4): add $0x1,%rax
43cc(5): jmp 0xffffe8e9(%rip)
43d1(b): mov $0x0,0x21cc54(%rip)
43dc(5): jmp 0xffffe8af(%rip)
43e1(3): mov %rsi,%rax
43e4(5): jmp 0xfffff1ee(%rip)
43e9(5): mov $0x8,%edi
43ee(a): mov $0x1,0x21cf20(%rip)
43f8(5): call 0x54c8(%rip)
43fd(5): mov $0x8,%edi
4402(7): mov %rax,0x21ceff(%rip)
4409(5): call 0x54b7(%rip)
440e(5): mov $0x10,%edi
4413(7): mov %rax,0x21cee6(%rip)
441a(5): call 0x54a6(%rip)
441f(7): mov %rax,0x21ced2(%rip)
4426(7): movsxd 0x21ccab(%rip),%rax
442d(5): mov 0x0(%rbp,%rax,8),%r13
4432(3): mov %rax,%r12
4435(8): lea 0x0(,%rax,8),%r14
443d(5): cmp $0x0,0x0(%r13)
4442(6): jz 0xb0(%rip)
4448(7): lea 0x17843(%rip),%rsi
444f(3): mov %r13,%rdi
4452(5): call 0xffffda7e(%rip)
4457(2): test %eax,%eax
4459(7): mov 0x21cea8(%rip),%rdx
4460(6): jz 0x99(%rip)
4466(3): mov %r13,(%rdx)
4469(4): add $0x1,%r12d
446d(3): cmp %ebx,%r12d
4470(7): mov %r12d,0x21cc61(%rip)
4477(6): jnl 0xffffe22f(%rip)
447d(5): mov 0x8(%rbp,%r14,1),%rdi
4482(7): mov 0x21cc3f(%rip),%rdx
4489(7): lea 0x173fc(%rip),%rsi
4490(5): call 0x1950(%rip)
4495(3): test %rax,%rax
4498(6): jz 0x125(%rip)
449e(6): mov 0x21cc34(%rip),%eax
44a4(3): add $0x1,%eax
44a7(2): cmp %ebx,%eax
44a9(6): mov %eax,0x21cc29(%rip)
44af(6): jnl 0xffffe1f7(%rip)
44b5(2): cwde 
44b7(5): mov 0x0(%rbp,%rax,8),%rdi
44bc(5): call 0x44d4(%rip)
44c1(7): lea 0x173c6(%rip),%rsi
44c8(3): mov %rax,%rbx
44cb(5): mov $0x5,%edx
44d0(2): xor %edi,%edi
44d2(5): call 0xffffd8ae(%rip)
44d7(3): mov %rbx,%rcx
44da(3): mov %rax,%rdx
44dd(2): xor %esi,%esi
44df(2): xor %edi,%edi
44e1(2): xor %eax,%eax
44e3(5): call 0xffffdb1d(%rip)
44e8(5): mov $0x1,%edi
44ed(5): call 0xff3(%rip)
44f2(7): mov 0x21ce0f(%rip),%rdx
44f9(7): mov $0x0,(%rdx)
4500(5): jmp 0xffffff69(%rip)
4505(7): cmp $0x0,0x21cb14(%rip)
450c(2): jz 0x23(%rip)
450e(7): cmp $0x0,0x21d374(%rip)
4515(2): jnz 0x1a(%rip)
4517(7): lea 0x1716a(%rip),%rax
451e(7): mov %rax,0x21d1fb(%rip)
4525(5): jmp 0xffffe1ef(%rip)
452a(5): call 0x4d6(%rip)
452f(7): lea 0x17d44(%rip),%rax
4536(7): mov %rax,0x21d1e3(%rip)
453d(5): jmp 0xffffe1d7(%rip)
4542(5): mov $0x1,%esi
4547(5): jmp 0xffffe071(%rip)
454c(5): mov $0x1,%esi
4551(5): jmp 0xffffe027(%rip)
4556(7): lea 0x21ce23(%rip),%rdx
455d(5): mov $0x20,%ecx
4562(a): mov $0x72340172838076673,%rax
456c(3): mov %rdx,%rdi
456f(3): REP stosd %rax,rdi(%es,10)
4572(7): mov $0x0,0x21ce27(%rip)
4579(9): mov $0x0,0x21ce07(%rip)
4582(5): jmp 0xffffe222(%rip)
4587(7): mov 0x21d192(%rip),%rdi
458e(5): call 0x4402(%rip)
4593(7): lea 0x1710e(%rip),%rsi
459a(3): mov %rax,%rbx
459d(5): mov $0x5,%edx
45a2(2): xor %edi,%edi
45a4(5): call 0xffffd7dc(%rip)
45a9(3): mov %rbx,%rcx
45ac(3): mov %rax,%rdx
45af(2): xor %esi,%esi
45b1(5): mov $0x1,%edi
45b6(2): xor %eax,%eax
45b8(5): call 0xffffda48(%rip)
45bd(7): movsxd 0x21cb14(%rip),%rax
45c4(5): mov $0x3,%esi
45c9(2): xor %edi,%edi
45cb(5): mov 0x0(%rbp,%rax,8),%rdx
45d0(5): call 0x41f0(%rip)
45d5(3): mov %rax,%rbx
45d8(5): call 0xffffd6a8(%rip)
45dd(2): mov (%rax),%esi
45df(7): lea 0x1742e(%rip),%rdx
45e6(3): mov %rbx,%rcx
45e9(5): mov $0x1,%edi
45ee(2): xor %eax,%eax
45f0(5): call 0xffffda10(%rip)
45f5(2): xor %edi,%edi
45f7(5): call 0xee9(%rip)
45fc(5): mov $0x1,%esi
4601(5): jmp 0xffffdf37(%rip)
4606(7): mov 0x21cad3(%rip),%rdi
460d(5): call 0x4383(%rip)
4612(7): lea 0x17207(%rip),%rsi
4619(3): mov %rax,%rbx
461c(5): mov $0x5,%edx
4621(2): xor %edi,%edi
4623(5): call 0xffffd75d(%rip)
4628(3): mov %rbx,%rcx
462b(3): mov %rax,%rdx
462e(2): xor %esi,%esi
4630(5): mov $0x1,%edi
4635(2): xor %eax,%eax
4637(5): call 0xffffd9c9(%rip)
463c(7): mov 0x21ca9d(%rip),%rdi
4643(5): call 0x434d(%rip)
4648(7): lea 0x171e7(%rip),%rsi
464f(3): mov %rax,%rbx
4652(5): mov $0x5,%edx
4657(2): xor %edi,%edi
4659(5): call 0xffffd727(%rip)
465e(3): mov %rbx,%rcx
4661(3): mov %rax,%rdx
4664(2): xor %esi,%esi
4666(5): mov $0x1,%edi
466b(2): xor %eax,%eax
466d(5): call 0xffffd993(%rip)
4672(5): mov $0x7b,%esi
4677(5): call 0xffffd789(%rip)
467c(5): jmp 0xfffff3e6(%rip)
4681(5): mov $0x7b,%esi
4686(5): call 0xffffd77a(%rip)
468b(5): jmp 0xfffff53f(%rip)
4690(5): mov $0x7d,%esi
4695(5): call 0xffffd76b(%rip)
469a(5): jmp 0xfffff563(%rip)
469f(5): mov $0x22,%esi
46a4(5): call 0xffffd75c(%rip)
46a9(5): jmp 0xfffff554(%rip)
46ae(5): mov $0x22,%esi
46b3(5): call 0xffffd74d(%rip)
46b8(5): jmp 0xfffff8d3(%rip)
46bd(5): mov $0x22,%esi
46c2(5): call 0xffffd73e(%rip)
46c7(5): jmp 0xfffff858(%rip)
46cc(5): mov $0x7d,%esi
46d1(5): call 0xffffd72f(%rip)
46d6(5): jmp 0xfffff4c2(%rip)
46db(5): mov $0x1,%eax
46e0(5): jmp 0xfffff432(%rip)
46e5(5): mov $0x22,%esi
46ea(5): call 0xffffd716(%rip)
46ef(5): jmp 0xfffff7c1(%rip)
46f4(5): mov $0x22,%esi
46f9(5): call 0xffffd707(%rip)
46fe(5): jmp 0xfffff746(%rip)
4703(7): mov %rax,0x21ca7e(%rip)
470a(5): jmp 0xffffee19(%rip)
470f(7): mov %rax,0x21ca92(%rip)
4716(5): jmp 0xfffff130(%rip)
471b(3): mov %rsi,(%r15)
471e(4): lea 0x0(%rsi,%rcx,1),%rax
4722(5): jmp 0xffffee16(%rip)
4727(7): mov %r13,0x21ca1a(%rip)
472e(5): jmp 0xfffff17f(%rip)
4733(7): mov %rbx,0x21ca06(%rip)
473a(5): jmp 0xfffff24a(%rip)
473f(5): call 0xffffd671(%rip)
4744(b): mov $0x0,0x21ca71(%rip)
474f(5): jmp 0xffffe566(%rip)
4754(7): mov %rbp,0x21c9cd(%rip)
475b(5): jmp 0xfffff2af(%rip)
4760(7): mov %rax,0x21c9e1(%rip)
4767(5): jmp 0xfffff146(%rip)
476c(7): mov %rsi,0x21ca0d(%rip)
4773(5): jmp 0xffffeea1(%rip)
4778(7): mov 0x21c949(%rip),%rsi
477f(7): mov 0x21c8aa(%rip),%rdi
4786(5): call 0xffffd72a(%rip)
478b(5): jmp 0xfffffb81(%rip)
4790(7): lea 0x21c9c9(%rip),%rsi
4797(7): mov 0x21c9ca(%rip),%rax
479e(3): sub (%rsi),%rax
47a1(7): mov 0x21ca20(%rip),%rsi
47a8(3): sub %rax,%rsi
47ab(3): mov %rsi,%rax
47ae(2): xor %esi,%esi
47b0(5): jmp 0xfffffafb(%rip)
47b5(5): mov $0x3a,%esi
47ba(5): call 0xffffd646(%rip)
47bf(5): jmp 0xfffff880(%rip)
47c4(7): mov 0x21c8fd(%rip),%rsi
47cb(7): mov 0x21c85e(%rip),%rdi
47d2(5): call 0xffffd6de(%rip)
47d7(5): jmp 0xfffffb07(%rip)
47dc(7): cmp $0x0,0x21d0a6(%rip)
47e3(6): jnz 0xfffff9b6(%rip)
47e9(5): jmp 0xfffff414(%rip)
47ee(7): mov %rbx,0x21c993(%rip)
47f5(5): jmp 0xffffed2e(%rip)
47fa(7): mov %rax,0x21c967(%rip)
4801(5): jmp 0xffffec71(%rip)
4806(5): mov $0xa,%esi
480b(5): call 0xffffd5f5(%rip)
4810(5): jmp 0xfffff40d(%rip)
4815(7): mov %rsi,0x21c94c(%rip)
481c(5): jmp 0xffffec56(%rip)
4821(5): mov $0x1,%esi
4826(5): jmp 0xffffe9b1(%rip)
482b(7): mov %r9,0x21cade(%rip)
4832(3): mov %r9,%r10
4835(5): jmp 0xffffe85f(%rip)

"_start" :
4840(2): xor %ebp,%ebp
4842(3): mov %rdx,%r9
4845(1): pop %rsi
4846(3): mov %rsp,%rdx
4849(4): and $0xfffffff0,%rsp
484d(1): push %rax
484e(1): push %rsp
484f(7): lea 0x1666a(%rip),%r8
4856(7): lea 0x165f3(%rip),%rcx
485d(7): lea 0xffffd92c(%rip),%rdi
4864(6): call 0x21c75e(%rip)
486a(1): hlt 

"deregister_tm_clones" :
4870(7): lea 0x21c849(%rip),%rdi
4877(1): push %rbp
4878(7): lea 0x21c841(%rip),%rax
487f(3): cmp %rdi,%rax
4882(3): mov %rsp,%rbp
4885(2): jz 0x1b(%rip)
4887(7): mov 0x21c732(%rip),%rax
488e(3): test %rax,%rax
4891(2): jz 0xf(%rip)
4893(1): pop %rbp
4894(2): jmp %rax
4896(a): nop 0x0(%rax,%rax,1)
48a0(1): pop %rbp
48a1(1): ret near (%rsp)

"register_tm_clones" :
48b0(7): lea 0x21c809(%rip),%rdi
48b7(7): lea 0x21c802(%rip),%rsi
48be(1): push %rbp
48bf(3): sub %rdi,%rsi
48c2(3): mov %rsp,%rbp
48c5(4): sar $0x3,%rsi
48c9(3): mov %rsi,%rax
48cc(4): shr $0x3f,%rax
48d0(3): add %rax,%rsi
48d3(3): sar $0x1,%rsi
48d6(2): jz 0x1a(%rip)
48d8(7): mov 0x21c6f9(%rip),%rax
48df(3): test %rax,%rax
48e2(2): jz 0xe(%rip)
48e4(1): pop %rbp
48e5(2): jmp %rax
48e7(9): nop 0x0(%rax,%rax,1)
48f0(1): pop %rbp
48f1(1): ret near (%rsp)

"__do_global_dtors_aux" :
4900(7): cmp $0x0,0x21c801(%rip)
4907(2): jnz 0x31(%rip)
4909(8): cmp $0x0,0x21c6cf(%rip)
4911(1): push %rbp
4912(3): mov %rsp,%rbp
4915(2): jz 0xe(%rip)
4917(7): mov 0x21c6ea(%rip),%rdi
491e(5): call 0xffffd7f2(%rip)
4923(5): call 0xffffff4d(%rip)
4928(7): mov $0x1,0x21c7d9(%rip)
492f(1): pop %rbp
4930(1): ret near (%rsp)
4931(7): nop 0x0(%rax)
4938(2): REP ret near (%rsp)

"frame_dummy" :
4940(1): push %rbp
4941(3): mov %rsp,%rbp
4944(1): pop %rbp
4945(5): jmp 0xffffff6b(%rip)

"compare_words" :
4950(4): mov 0x8(%rsi),%r10
4954(4): mov 0x8(%rdi),%r9
4958(3): cmp %r9,%r10
495b(3): mov %r9,%r8
495e(4): cmovng %r10,%r8
4962(7): cmp $0x0,0x21cf17(%rip)
4969(2): jnz 0x47(%rip)
496b(3): test %r8,%r8
496e(2): jle 0x2f(%rip)
4970(3): mov (%rdi),%rdi
4973(3): mov (%rsi),%rsi
4976(3): movzx (%rdi),%eax
4979(3): movzx (%rsi),%edx
497c(2): sub %edx,%eax
497e(2): jnz 0x30(%rip)
4980(2): xor %edx,%edx
4982(2): jmp 0x12(%rip)
4984(4): nop 0x0(%rax)
4988(4): movzx 0x0(%rdi,%rdx,1),%eax
498c(4): movzx 0x0(%rsi,%rdx,1),%ecx
4990(2): sub %ecx,%eax
4992(2): jnz 0x1c(%rip)
4994(4): add $0x1,%rdx
4998(3): cmp %rdx,%r8
499b(2): jnz 0xffffffed(%rip)
499d(3): cmp %r9,%r10
49a0(2): jnle 0x9(%rip)
49a2(3): setl %al
49a5(3): movzx %al,%eax
49a8(1): ret near (%rsp)
49a9(5): mov $0xffffffff,%eax
49ae(2): REP ret near (%rsp)
49b0(3): test %r8,%r8
49b3(2): jle 0xffffffea(%rip)
49b5(3): mov (%rsi),%r11
49b8(3): mov (%rdi),%rdi
49bb(7): lea 0x21cafe(%rip),%rsi
49c2(3): movzx (%rdi),%eax
49c5(4): movzx (%r11),%edx
49c9(4): movzx 0x0(%rsi,%rax,1),%eax
49cd(4): movzx 0x0(%rsi,%rdx,1),%edx
49d1(2): sub %edx,%eax
49d3(2): jnz 0xffffffdb(%rip)
49d5(2): xor %edx,%edx
49d7(2): jmp 0x1e(%rip)
49d9(7): nop 0x0(%rax)
49e0(4): movzx 0x0(%rdi,%rdx,1),%eax
49e4(5): movzx 0x0(%r11,%rdx,1),%ecx
49e9(4): movzx 0x0(%rsi,%rax,1),%eax
49ed(4): movzx 0x0(%rsi,%rcx,1),%ecx
49f1(2): sub %ecx,%eax
49f3(2): jnz 0xffffffbb(%rip)
49f5(4): add $0x1,%rdx
49f9(3): cmp %rdx,%r8
49fc(2): jnz 0xffffffe4(%rip)
49fe(2): jmp 0xffffff9f(%rip)

"matcher_error" :
4a00(1): push %rbx
4a01(7): lea 0x16500(%rip),%rsi
4a08(5): mov $0x5,%edx
4a0d(2): xor %edi,%edi
4a0f(5): call 0xffffd371(%rip)
4a14(3): mov %rax,%rbx
4a17(5): call 0xffffd269(%rip)
4a1c(2): mov (%rax),%esi
4a1e(3): mov %rbx,%rdx
4a21(5): mov $0x1,%edi
4a26(2): xor %eax,%eax
4a28(5): call 0xffffd5d8(%rip)
4a2d(3): nop (%rax)
4a30(2): push %r12
4a32(1): push %rbp
4a33(1): push %rbx
4a34(3): mov %rdi,%rbx
4a37(5): call 0xffffd369(%rip)
4a3c(4): lea 0x1(%rax),%rdi
4a40(5): call 0x4e80(%rip)
4a45(3): mov %rax,%r12
4a48(3): movzx (%rbx),%eax
4a4b(3): mov %r12,%rbp
4a4e(2): test %al,%al
4a50(2): jz 0x1e(%rip)
4a52(2): cmp $0x5c,%al
4a54(4): movzx 0x1(%rbx),%edx
4a58(4): lea 0x1(%rbx),%rcx
4a5c(2): jz 0x24(%rip)
4a5e(3): mov %al,0x0(%rbp)
4a61(2): mov %edx,%eax
4a63(4): add $0x1,%rbp
4a67(2): test %al,%al
4a69(3): mov %rcx,%rbx
4a6c(2): jnz 0xffffffe6(%rip)
4a6e(4): mov $0x0,0x0(%rbp)
4a72(3): mov %r12,%rax
4a75(1): pop %rbx
4a76(1): pop %rbp
4a77(2): pop %r12
4a79(1): ret near (%rsp)
4a7a(6): nop 0x0(%rax,%rax,1)
4a80(3): cmp $0x66,%dl
4a83(6): jz 0x19d(%rip)
4a89(2): jnle 0x3f(%rip)
4a8b(3): cmp $0x61,%dl
4a8e(6): jz 0x1aa(%rip)
4a94(6): jle 0xd4(%rip)
4a9a(3): cmp $0x62,%dl
4a9d(6): jz 0x1cb(%rip)
4aa3(3): cmp $0x63,%dl
4aa6(6): jnz 0x112(%rip)
4aac(4): nop 0x0(%rax)
4ab0(4): add $0x1,%rcx
4ab4(3): cmp $0x0,(%rcx)
4ab7(2): jz 0xffffffb7(%rip)
4ab9(4): add $0x1,%rcx
4abd(3): cmp $0x0,(%rcx)
4ac0(2): jnz 0xfffffff0(%rip)
4ac2(2): jmp 0xffffffac(%rip)
4ac4(4): nop 0x0(%rax)
4ac8(3): cmp $0x74,%dl
4acb(6): jz 0x185(%rip)
4ad1(2): jle 0x6f(%rip)
4ad3(3): cmp $0x76,%dl
4ad6(6): jz 0x11a(%rip)
4adc(3): cmp $0x78,%dl
4adf(6): jnz 0xd9(%rip)
4ae5(5): call 0xffffd5fb(%rip)
4aea(3): mov (%rax),%r8
4aed(4): add $0x2,%rbx
4af1(2): xor %edi,%edi
4af3(2): xor %ecx,%ecx
4af5(3): movsx (%rbx),%edx
4af8(3): movzx %dl,%esi
4afb(2): mov %edx,%eax
4afd(6): test $0x10,0x1(%r8,%rsi,2)
4b03(6): jz 0x18d(%rip)
4b09(2): mov %ecx,%esi
4b0b(3): lea 0xffffff9f(%rax),%ecx
4b0e(3): shl/sal $0x4,%esi
4b11(3): cmp $0x5,%cl
4b14(6): jnbe 0xbc(%rip)
4b1a(3): lea 0xffffffa9(%rdx),%eax
4b1d(3): add $0x1,%edi
4b20(4): add $0x1,%rbx
4b24(3): lea 0x0(%rsi,%rax,1),%ecx
4b27(3): cmp $0x3,%edi
4b2a(2): jnz 0xffffffcb(%rip)
4b2c(3): mov %cl,0x0(%rbp)
4b2f(3): movzx (%rbx),%eax
4b32(4): add $0x1,%rbp
4b36(5): jmp 0xffffff18(%rip)
4b3b(5): nop 0x0(%rax,%rax,1)
4b40(3): cmp $0x6e,%dl
4b43(6): jz 0xc5(%rip)
4b49(3): cmp $0x72,%dl
4b4c(2): jnz 0x6c(%rip)
4b4e(4): mov $0xd,0x0(%rbp)
4b52(4): movzx 0x2(%rbx),%eax
4b56(4): add $0x1,%rbp
4b5a(4): add $0x2,%rbx
4b5e(5): jmp 0xfffffef0(%rip)
4b63(5): nop 0x0(%rax,%rax,1)
4b68(2): test %dl,%dl
4b6a(6): jz 0xffffff04(%rip)
4b70(3): cmp $0x30,%dl
4b73(2): jnz 0x45(%rip)
4b75(4): lea 0x2(%rbx),%rdx
4b79(3): movsx (%rdx),%eax
4b7c(2): xor %ecx,%ecx
4b7e(4): lea 0x5(%rbx),%rdi
4b82(3): lea 0xffffffd0(%rax),%esi
4b85(4): cmp $0x7,%sil
4b89(2): jnbe 0x22(%rip)
4b8b(4): lea 0x1(%rdx),%rbx
4b8f(4): lea 0xffffffd0(%rax,%rcx,8),%ecx
4b93(3): cmp %rbx,%rdi
4b96(6): jz 0xea(%rip)
4b9c(3): mov %rbx,%rdx
4b9f(3): movsx (%rdx),%eax
4ba2(3): lea 0xffffffd0(%rax),%esi
4ba5(4): cmp $0x7,%sil
4ba9(2): jbe 0xffffffe2(%rip)
4bab(3): mov %rdx,%rbx
4bae(5): jmp 0xd6(%rip)
4bb3(5): nop 0x0(%rax,%rax,1)
4bb8(4): mov $0x5c,0x0(%rbp)
4bbc(3): mov %dl,0x1(%rbp)
4bbf(4): add $0x2,%rbx
4bc3(3): movzx (%rbx),%eax
4bc6(4): add $0x2,%rbp
4bca(5): jmp 0xfffffe84(%rip)
4bcf(1): nop 
4bd0(4): lea 0xffffffbf(%rax),%r9d
4bd4(3): lea 0xffffffd0(%rdx),%ecx
4bd7(3): lea 0xffffffc9(%rdx),%eax
4bda(4): cmp $0x5,%r9b
4bde(3): cmovnbe %ecx,%eax
4be1(5): jmp 0xffffff3c(%rip)
4be6(a): nop 0x0(%rax,%rax,1)
4bf0(4): mov $0xb,0x0(%rbp)
4bf4(4): movzx 0x2(%rbx),%eax
4bf8(4): add $0x1,%rbp
4bfc(4): add $0x2,%rbx
4c00(5): jmp 0xfffffe4e(%rip)
4c05(3): nop (%rax)
4c08(4): mov $0xa,0x0(%rbp)
4c0c(4): movzx 0x2(%rbx),%eax
4c10(4): add $0x1,%rbp
4c14(4): add $0x2,%rbx
4c18(5): jmp 0xfffffe36(%rip)
4c1d(3): nop (%rax)
4c20(4): mov $0xc,0x0(%rbp)
4c24(4): movzx 0x2(%rbx),%eax
4c28(4): add $0x1,%rbp
4c2c(4): add $0x2,%rbx
4c30(5): jmp 0xfffffe1e(%rip)
4c35(3): nop (%rax)
4c38(4): mov $0x7,0x0(%rbp)
4c3c(4): movzx 0x2(%rbx),%eax
4c40(4): add $0x1,%rbp
4c44(4): add $0x2,%rbx
4c48(5): jmp 0xfffffe06(%rip)
4c4d(3): nop (%rax)
4c50(4): mov $0x9,0x0(%rbp)
4c54(4): movzx 0x2(%rbx),%eax
4c58(4): add $0x1,%rbp
4c5c(4): add $0x2,%rbx
4c60(5): jmp 0xfffffdee(%rip)
4c65(3): nop (%rax)
4c68(4): mov $0x8,0x0(%rbp)
4c6c(4): movzx 0x2(%rbx),%eax
4c70(4): add $0x1,%rbp
4c74(4): add $0x2,%rbx
4c78(5): jmp 0xfffffdd6(%rip)
4c7d(3): nop (%rax)
4c80(4): movzx 0x1(%rdx),%eax
4c84(3): mov %cl,0x0(%rbp)
4c87(4): add $0x1,%rbp
4c8b(5): jmp 0xfffffdc3(%rip)
4c90(2): test %edi,%edi
4c92(6): jnz 0xfffffe9a(%rip)
4c98(5): mov $0x785c,%edx
4c9d(4): add $0x2,%rbp
4ca1(4): mov %dx,0xfffffffe(%rbp)
4ca5(5): jmp 0xfffffda9(%rip)

"copy_unescaped_string" :
4a30(2): push %r12
4a32(1): push %rbp
4a33(1): push %rbx
4a34(3): mov %rdi,%rbx
4a37(5): call 0xffffd369(%rip)
4a3c(4): lea 0x1(%rax),%rdi
4a40(5): call 0x4e80(%rip)
4a45(3): mov %rax,%r12
4a48(3): movzx (%rbx),%eax
4a4b(3): mov %r12,%rbp
4a4e(2): test %al,%al
4a50(2): jz 0x1e(%rip)
4a52(2): cmp $0x5c,%al
4a54(4): movzx 0x1(%rbx),%edx
4a58(4): lea 0x1(%rbx),%rcx
4a5c(2): jz 0x24(%rip)
4a5e(3): mov %al,0x0(%rbp)
4a61(2): mov %edx,%eax
4a63(4): add $0x1,%rbp
4a67(2): test %al,%al
4a69(3): mov %rcx,%rbx
4a6c(2): jnz 0xffffffe6(%rip)
4a6e(4): mov $0x0,0x0(%rbp)
4a72(3): mov %r12,%rax
4a75(1): pop %rbx
4a76(1): pop %rbp
4a77(2): pop %r12
4a79(1): ret near (%rsp)
4a7a(6): nop 0x0(%rax,%rax,1)
4a80(3): cmp $0x66,%dl
4a83(6): jz 0x19d(%rip)
4a89(2): jnle 0x3f(%rip)
4a8b(3): cmp $0x61,%dl
4a8e(6): jz 0x1aa(%rip)
4a94(6): jle 0xd4(%rip)
4a9a(3): cmp $0x62,%dl
4a9d(6): jz 0x1cb(%rip)
4aa3(3): cmp $0x63,%dl
4aa6(6): jnz 0x112(%rip)
4aac(4): nop 0x0(%rax)
4ab0(4): add $0x1,%rcx
4ab4(3): cmp $0x0,(%rcx)
4ab7(2): jz 0xffffffb7(%rip)
4ab9(4): add $0x1,%rcx
4abd(3): cmp $0x0,(%rcx)
4ac0(2): jnz 0xfffffff0(%rip)
4ac2(2): jmp 0xffffffac(%rip)
4ac4(4): nop 0x0(%rax)
4ac8(3): cmp $0x74,%dl
4acb(6): jz 0x185(%rip)
4ad1(2): jle 0x6f(%rip)
4ad3(3): cmp $0x76,%dl
4ad6(6): jz 0x11a(%rip)
4adc(3): cmp $0x78,%dl
4adf(6): jnz 0xd9(%rip)
4ae5(5): call 0xffffd5fb(%rip)
4aea(3): mov (%rax),%r8
4aed(4): add $0x2,%rbx
4af1(2): xor %edi,%edi
4af3(2): xor %ecx,%ecx
4af5(3): movsx (%rbx),%edx
4af8(3): movzx %dl,%esi
4afb(2): mov %edx,%eax
4afd(6): test $0x10,0x1(%r8,%rsi,2)
4b03(6): jz 0x18d(%rip)
4b09(2): mov %ecx,%esi
4b0b(3): lea 0xffffff9f(%rax),%ecx
4b0e(3): shl/sal $0x4,%esi
4b11(3): cmp $0x5,%cl
4b14(6): jnbe 0xbc(%rip)
4b1a(3): lea 0xffffffa9(%rdx),%eax
4b1d(3): add $0x1,%edi
4b20(4): add $0x1,%rbx
4b24(3): lea 0x0(%rsi,%rax,1),%ecx
4b27(3): cmp $0x3,%edi
4b2a(2): jnz 0xffffffcb(%rip)
4b2c(3): mov %cl,0x0(%rbp)
4b2f(3): movzx (%rbx),%eax
4b32(4): add $0x1,%rbp
4b36(5): jmp 0xffffff18(%rip)
4b3b(5): nop 0x0(%rax,%rax,1)
4b40(3): cmp $0x6e,%dl
4b43(6): jz 0xc5(%rip)
4b49(3): cmp $0x72,%dl
4b4c(2): jnz 0x6c(%rip)
4b4e(4): mov $0xd,0x0(%rbp)
4b52(4): movzx 0x2(%rbx),%eax
4b56(4): add $0x1,%rbp
4b5a(4): add $0x2,%rbx
4b5e(5): jmp 0xfffffef0(%rip)
4b63(5): nop 0x0(%rax,%rax,1)
4b68(2): test %dl,%dl
4b6a(6): jz 0xffffff04(%rip)
4b70(3): cmp $0x30,%dl
4b73(2): jnz 0x45(%rip)
4b75(4): lea 0x2(%rbx),%rdx
4b79(3): movsx (%rdx),%eax
4b7c(2): xor %ecx,%ecx
4b7e(4): lea 0x5(%rbx),%rdi
4b82(3): lea 0xffffffd0(%rax),%esi
4b85(4): cmp $0x7,%sil
4b89(2): jnbe 0x22(%rip)
4b8b(4): lea 0x1(%rdx),%rbx
4b8f(4): lea 0xffffffd0(%rax,%rcx,8),%ecx
4b93(3): cmp %rbx,%rdi
4b96(6): jz 0xea(%rip)
4b9c(3): mov %rbx,%rdx
4b9f(3): movsx (%rdx),%eax
4ba2(3): lea 0xffffffd0(%rax),%esi
4ba5(4): cmp $0x7,%sil
4ba9(2): jbe 0xffffffe2(%rip)
4bab(3): mov %rdx,%rbx
4bae(5): jmp 0xd6(%rip)
4bb3(5): nop 0x0(%rax,%rax,1)
4bb8(4): mov $0x5c,0x0(%rbp)
4bbc(3): mov %dl,0x1(%rbp)
4bbf(4): add $0x2,%rbx
4bc3(3): movzx (%rbx),%eax
4bc6(4): add $0x2,%rbp
4bca(5): jmp 0xfffffe84(%rip)
4bcf(1): nop 
4bd0(4): lea 0xffffffbf(%rax),%r9d
4bd4(3): lea 0xffffffd0(%rdx),%ecx
4bd7(3): lea 0xffffffc9(%rdx),%eax
4bda(4): cmp $0x5,%r9b
4bde(3): cmovnbe %ecx,%eax
4be1(5): jmp 0xffffff3c(%rip)
4be6(a): nop 0x0(%rax,%rax,1)
4bf0(4): mov $0xb,0x0(%rbp)
4bf4(4): movzx 0x2(%rbx),%eax
4bf8(4): add $0x1,%rbp
4bfc(4): add $0x2,%rbx
4c00(5): jmp 0xfffffe4e(%rip)
4c05(3): nop (%rax)
4c08(4): mov $0xa,0x0(%rbp)
4c0c(4): movzx 0x2(%rbx),%eax
4c10(4): add $0x1,%rbp
4c14(4): add $0x2,%rbx
4c18(5): jmp 0xfffffe36(%rip)
4c1d(3): nop (%rax)
4c20(4): mov $0xc,0x0(%rbp)
4c24(4): movzx 0x2(%rbx),%eax
4c28(4): add $0x1,%rbp
4c2c(4): add $0x2,%rbx
4c30(5): jmp 0xfffffe1e(%rip)
4c35(3): nop (%rax)
4c38(4): mov $0x7,0x0(%rbp)
4c3c(4): movzx 0x2(%rbx),%eax
4c40(4): add $0x1,%rbp
4c44(4): add $0x2,%rbx
4c48(5): jmp 0xfffffe06(%rip)
4c4d(3): nop (%rax)
4c50(4): mov $0x9,0x0(%rbp)
4c54(4): movzx 0x2(%rbx),%eax
4c58(4): add $0x1,%rbp
4c5c(4): add $0x2,%rbx
4c60(5): jmp 0xfffffdee(%rip)
4c65(3): nop (%rax)
4c68(4): mov $0x8,0x0(%rbp)
4c6c(4): movzx 0x2(%rbx),%eax
4c70(4): add $0x1,%rbp
4c74(4): add $0x2,%rbx
4c78(5): jmp 0xfffffdd6(%rip)
4c7d(3): nop (%rax)
4c80(4): movzx 0x1(%rdx),%eax
4c84(3): mov %cl,0x0(%rbp)
4c87(4): add $0x1,%rbp
4c8b(5): jmp 0xfffffdc3(%rip)
4c90(2): test %edi,%edi
4c92(6): jnz 0xfffffe9a(%rip)
4c98(5): mov $0x785c,%edx
4c9d(4): add $0x2,%rbp
4ca1(4): mov %dx,0xfffffffe(%rbp)
4ca5(5): jmp 0xfffffda9(%rip)

"compile_regex" :
4cb0(7): cmp $0x0,0x21cbc9(%rip)
4cb7(4): lea 0x48(%rdi),%rax
4cbb(2): push %r12
4cbd(1): push %rbp
4cbe(1): push %rbx
4cbf(5): mov $0x0,%edx
4cc4(3): mov (%rdi),%rbx
4cc7(4): mov %rax,0x28(%rdi)
4ccb(7): lea 0x21c7ee(%rip),%rax
4cd2(4): lea 0x8(%rdi),%rbp
4cd6(8): mov $0x0,0x8(%rdi)
4cde(8): mov $0x0,0x10(%rdi)
4ce6(4): cmove %rdx,%rax
4cea(4): mov %rax,0x30(%rdi)
4cee(3): mov %rbx,%rdi
4cf1(5): call 0xffffd0af(%rip)
4cf6(3): mov %rbp,%rdx
4cf9(3): mov %rax,%rsi
4cfc(3): mov %rbx,%rdi
4cff(5): call 0x12f01(%rip)
4d04(3): test %rax,%rax
4d07(2): jnz 0xe(%rip)
4d09(1): pop %rbx
4d0a(3): mov %rbp,%rdi
4d0d(1): pop %rbp
4d0e(2): pop %r12
4d10(5): jmp 0x12f70(%rip)
4d15(3): mov %rbx,%rdi
4d18(3): mov %rax,%r12
4d1b(5): call 0x3c75(%rip)
4d20(7): lea 0x169ba(%rip),%rsi
4d27(3): mov %rax,%rbx
4d2a(5): mov $0x5,%edx
4d2f(2): xor %edi,%edi
4d31(5): call 0xffffd04f(%rip)
4d36(3): mov %rbx,%r8
4d39(3): mov %rax,%rdx
4d3c(3): mov %r12,%rcx
4d3f(2): xor %esi,%esi
4d41(5): mov $0x1,%edi
4d46(2): xor %eax,%eax
4d48(5): call 0xffffd2b8(%rip)
4d4d(3): nop (%rax)
4d50(1): push %rbp
4d51(1): push %rbx
4d52(3): mov %rsi,%rbp
4d55(4): sub $0x18,%rsp
4d59(9): mov $0x28,%rax
4d62(5): mov %rax,0x8(%rsp)
4d67(2): xor %eax,%eax
4d69(3): test %rdi,%rdi
4d6c(2): jz 0xa(%rip)
4d6e(3): cmp $0x0,(%rdi)
4d71(3): mov %rdi,%rbx
4d74(2): jnz 0x44(%rip)
4d76(7): mov 0x21c353(%rip),%rdi
4d7d(3): mov %rsp,%rsi
4d80(5): call 0x3c30(%rip)
4d85(3): test %rax,%rax
4d88(4): mov %rax,0x0(%rbp)
4d8c(6): jz 0x8e(%rip)
4d92(4): add (%rsp),%rax
4d96(4): mov %rax,0x8(%rbp)
4d9a(5): mov 0x8(%rsp),%rax
4d9f(9): xor $0x28,%rax
4da8(2): jnz 0x6d(%rip)
4daa(4): add $0x18,%rsp
4dae(1): pop %rbx
4daf(1): pop %rbp
4db0(1): ret near (%rsp)
4db1(7): nop 0x0(%rax)
4db8(7): lea 0x16ed3(%rip),%rdi
4dbf(5): mov $0x2,%ecx
4dc4(3): mov %rbx,%rsi
4dc7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4dc9(3): setnbe %al
4dcc(2): sbb $0x0,%al
4dce(2): test %al,%al
4dd0(2): jz 0xffffffa6(%rip)
4dd2(3): mov %rsp,%rsi
4dd5(3): mov %rbx,%rdi
4dd8(5): call 0x3e38(%rip)
4ddd(3): test %rax,%rax
4de0(4): mov %rax,0x0(%rbp)
4de4(2): jnz 0xffffffae(%rip)
4de6(3): mov %rbx,%rdx
4de9(5): mov $0x3,%esi
4dee(2): xor %edi,%edi
4df0(5): call 0x39d0(%rip)
4df5(3): mov %rax,%rbx
4df8(5): call 0xffffce88(%rip)
4dfd(2): mov (%rax),%esi
4dff(7): lea 0x16c0e(%rip),%rdx
4e06(3): mov %rbx,%rcx
4e09(5): mov $0x1,%edi
4e0e(2): xor %eax,%eax
4e10(5): call 0xffffd1f0(%rip)
4e15(5): call 0xffffcf9b(%rip)
4e1a(7): lea 0x16e71(%rip),%rbx
4e21(2): jmp 0xffffffc5(%rip)

"swallow_file_in_memory" :
4d50(1): push %rbp
4d51(1): push %rbx
4d52(3): mov %rsi,%rbp
4d55(4): sub $0x18,%rsp
4d59(9): mov $0x28,%rax
4d62(5): mov %rax,0x8(%rsp)
4d67(2): xor %eax,%eax
4d69(3): test %rdi,%rdi
4d6c(2): jz 0xa(%rip)
4d6e(3): cmp $0x0,(%rdi)
4d71(3): mov %rdi,%rbx
4d74(2): jnz 0x44(%rip)
4d76(7): mov 0x21c353(%rip),%rdi
4d7d(3): mov %rsp,%rsi
4d80(5): call 0x3c30(%rip)
4d85(3): test %rax,%rax
4d88(4): mov %rax,0x0(%rbp)
4d8c(6): jz 0x8e(%rip)
4d92(4): add (%rsp),%rax
4d96(4): mov %rax,0x8(%rbp)
4d9a(5): mov 0x8(%rsp),%rax
4d9f(9): xor $0x28,%rax
4da8(2): jnz 0x6d(%rip)
4daa(4): add $0x18,%rsp
4dae(1): pop %rbx
4daf(1): pop %rbp
4db0(1): ret near (%rsp)
4db1(7): nop 0x0(%rax)
4db8(7): lea 0x16ed3(%rip),%rdi
4dbf(5): mov $0x2,%ecx
4dc4(3): mov %rbx,%rsi
4dc7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4dc9(3): setnbe %al
4dcc(2): sbb $0x0,%al
4dce(2): test %al,%al
4dd0(2): jz 0xffffffa6(%rip)
4dd2(3): mov %rsp,%rsi
4dd5(3): mov %rbx,%rdi
4dd8(5): call 0x3e38(%rip)
4ddd(3): test %rax,%rax
4de0(4): mov %rax,0x0(%rbp)
4de4(2): jnz 0xffffffae(%rip)
4de6(3): mov %rbx,%rdx
4de9(5): mov $0x3,%esi
4dee(2): xor %edi,%edi
4df0(5): call 0x39d0(%rip)
4df5(3): mov %rax,%rbx
4df8(5): call 0xffffce88(%rip)
4dfd(2): mov (%rax),%esi
4dff(7): lea 0x16c0e(%rip),%rdx
4e06(3): mov %rbx,%rcx
4e09(5): mov $0x1,%edi
4e0e(2): xor %eax,%eax
4e10(5): call 0xffffd1f0(%rip)
4e15(5): call 0xffffcf9b(%rip)
4e1a(7): lea 0x16e71(%rip),%rbx
4e21(2): jmp 0xffffffc5(%rip)

"digest_word_file" :
4e30(2): push %r13
4e32(2): push %r12
4e34(3): mov %rsi,%r12
4e37(1): push %rbp
4e38(1): push %rbx
4e39(5): lea 0x8(%r12),%r13
4e3e(4): sub $0x28,%rsp
4e42(3): mov %rsp,%rsi
4e45(9): mov $0x28,%rax
4e4e(5): mov %rax,0x18(%rsp)
4e53(2): xor %eax,%eax
4e55(5): call 0xfffffefb(%rip)
4e5a(4): mov (%rsp),%rbp
4e5e(5): mov 0x8(%rsp),%rdx
4e63(2): xor %esi,%esi
4e65(8): mov $0x0,(%r12)
4e6d(9): mov $0x0,0x8(%r12)
4e76(2): xor %edi,%edi
4e78(9): mov $0x0,0x10(%r12)
4e81(3): cmp %rdx,%rbp
4e84(2): jnb 0x2f(%rip)
4e86(4): cmp $0xa,0x0(%rbp)
4e8a(3): mov %rbp,%rbx
4e8d(2): jnz 0x10(%rip)
4e8f(5): jmp 0x82(%rip)
4e94(4): nop 0x0(%rax)
4e98(3): cmp $0xa,(%rbx)
4e9b(2): jz 0x45(%rip)
4e9d(4): add $0x1,%rbx
4ea1(3): cmp %rdx,%rbx
4ea4(2): jnz 0xfffffff4(%rip)
4ea6(3): cmp %rdx,%rbp
4ea9(2): jb 0x3c(%rip)
4eab(3): mov %rdx,%rbp
4eae(3): cmp %rdx,%rbp
4eb1(2): jb 0xffffffd5(%rip)
4eb3(7): lea 0xfffffa96(%rip),%rcx
4eba(5): mov $0x10,%edx
4ebf(5): call 0xffffce31(%rip)
4ec4(5): mov 0x18(%rsp),%rax
4ec9(9): xor $0x28,%rax
4ed2(2): jnz 0x70(%rip)
4ed4(4): add $0x28,%rsp
4ed8(1): pop %rbx
4ed9(1): pop %rbp
4eda(2): pop %r12
4edc(2): pop %r13
4ede(1): ret near (%rsp)
4edf(1): nop 
4ee0(3): cmp %rbx,%rbp
4ee3(2): jnb 0x2e(%rip)
4ee5(5): cmp 0x8(%r12),%rsi
4eea(2): jz 0x30(%rip)
4eec(3): mov %rsi,%rcx
4eef(3): mov %rbx,%rax
4ef2(4): add $0x1,%rsi
4ef6(4): shl/sal $0x4,%rcx
4efa(3): sub %rbp,%rax
4efd(3): add %rdi,%rcx
4f00(3): cmp %rdx,%rbx
4f03(3): mov %rbp,(%rcx)
4f06(4): mov %rax,0x8(%rcx)
4f0a(5): mov %rsi,0x10(%r12)
4f0f(2): jnb 0x2b(%rip)
4f11(4): lea 0x1(%rbx),%rbp
4f15(5): jmp 0xffffff6c(%rip)
4f1a(5): mov $0x10,%edx
4f1f(3): mov %r13,%rsi
4f22(5): call 0x4a6e(%rip)
4f27(5): mov 0x10(%r12),%rsi
4f2c(3): mov %rax,%rdi
4f2f(4): mov %rax,(%r12)
4f33(5): mov 0x8(%rsp),%rdx
4f38(2): jmp 0xffffffb4(%rip)
4f3a(3): mov %rbx,%rbp
4f3d(5): jmp 0xffffff44(%rip)
4f42(5): call 0xffffce6e(%rip)

"print_spaces" :
4f50(3): test %rdi,%rdi
4f53(2): jle 0x45(%rip)
4f55(1): push %rbx
4f56(3): mov %rdi,%rbx
4f59(7): nop 0x0(%rax)
4f60(7): mov 0x21c161(%rip),%rdi
4f67(4): mov 0x28(%rdi),%rax
4f6b(4): cmp 0x30(%rdi),%rax
4f6f(2): jnb 0x19(%rip)
4f71(4): lea 0x1(%rax),%rdx
4f75(4): mov %rdx,0x28(%rdi)
4f79(3): mov $0x20,(%rax)
4f7c(4): sub $0x1,%rbx
4f80(2): jnz 0xffffffe0(%rip)
4f82(1): pop %rbx
4f83(1): ret near (%rsp)
4f84(4): nop 0x0(%rax)
4f88(5): mov $0x20,%esi
4f8d(5): call 0xffffce73(%rip)
4f92(2): jmp 0xffffffea(%rip)
4f94(4): nop 0x0(%rax)
4f98(2): REP ret near (%rsp)

"print_field" :
4fa0(3): cmp %rdi,%rsi
4fa3(6): jbe 0x21d(%rip)
4fa9(2): push %r15
4fab(2): push %r14
4fad(7): lea 0x16a8c(%rip),%r14
4fb4(2): push %r13
4fb6(2): push %r12
4fb8(7): lea 0x21c221(%rip),%r13
4fbf(1): push %rbp
4fc0(1): push %rbx
4fc1(7): lea 0x169c0(%rip),%r12
4fc8(3): mov %rdi,%rbx
4fcb(3): mov %rsi,%r15
4fce(4): sub $0x18,%rsp
4fd2(6): nop 0x0(%rax,%rax,1)
4fd8(3): movzx (%rbx),%edx
4fdb(3): movsxd %edx,%rax
4fde(2): mov %edx,%ebp
4fe0(6): cmp $0x0,0x0(%r13,%rax,1)
4fe6(6): jz 0xba(%rip)
4fec(5): movzx 0x0(%r14,%rax,1),%esi
4ff1(3): test %sil,%sil
4ff4(2): jz 0xf(%rip)
4ff6(7): cmp $0x3,0x21c887(%rip)
4ffd(6): jz 0x133(%rip)
5003(4): cmp $0x5c,%bpl
5007(6): jz 0x151(%rip)
500d(6): jnle 0xd3(%rip)
5013(4): cmp $0x22,%bpl
5017(2): jnz 0x61(%rip)
5019(7): mov 0x21c0a8(%rip),%rdi
5020(4): mov 0x28(%rdi),%rax
5024(4): cmp 0x30(%rdi),%rax
5028(6): jnb 0x300(%rip)
502e(4): lea 0x1(%rax),%rdx
5032(4): mov %rdx,0x28(%rdi)
5036(3): mov $0x22,(%rax)
5039(7): mov 0x21c088(%rip),%rdi
5040(4): mov 0x28(%rdi),%rax
5044(4): cmp 0x30(%rdi),%rax
5048(6): jnb 0x2ef(%rip)
504e(4): lea 0x1(%rax),%rdx
5052(4): add $0x1,%rbx
5056(3): cmp %rbx,%r15
5059(4): mov %rdx,0x28(%rdi)
505d(3): mov $0x22,(%rax)
5060(6): jnz 0xffffff78(%rip)
5066(4): add $0x18,%rsp
506a(1): pop %rbx
506b(1): pop %rbp
506c(2): pop %r12
506e(2): pop %r13
5070(2): pop %r14
5072(2): pop %r15
5074(1): ret near (%rsp)
5075(3): nop (%rax)
5078(2): jl 0x7a(%rip)
507a(4): cmp $0x26,%bpl
507e(2): jnle 0x74(%rip)
5080(7): mov 0x21c041(%rip),%rdi
5087(4): mov 0x28(%rdi),%rax
508b(4): cmp 0x30(%rdi),%rax
508f(6): jnb 0x282(%rip)
5095(4): lea 0x1(%rax),%rcx
5099(4): mov %rcx,0x28(%rdi)
509d(3): mov $0x5c,(%rax)
50a0(7): mov 0x21c021(%rip),%rdi
50a7(4): mov 0x28(%rdi),%rax
50ab(4): cmp 0x30(%rdi),%rax
50af(6): jnb 0xd1(%rip)
50b5(4): lea 0x1(%rax),%rdx
50b9(4): mov %rdx,0x28(%rdi)
50bd(3): mov %bpl,(%rax)
50c0(4): add $0x1,%rbx
50c4(3): cmp %rbx,%r15
50c7(6): jnz 0xffffff11(%rip)
50cd(4): add $0x18,%rsp
50d1(1): pop %rbx
50d2(1): pop %rbp
50d3(2): pop %r12
50d5(2): pop %r13
50d7(2): pop %r14
50d9(2): pop %r15
50db(1): ret near (%rsp)
50dc(4): nop 0x0(%rax)
50e0(4): cmp $0x7b,%bpl
50e4(2): jz 0x34(%rip)
50e6(4): cmp $0x7d,%bpl
50ea(2): jz 0x2e(%rip)
50ec(4): cmp $0x5f,%bpl
50f0(2): jz 0xffffff90(%rip)
50f2(7): mov 0x21bfcf(%rip),%rdi
50f9(4): mov 0x28(%rdi),%rax
50fd(4): cmp 0x30(%rdi),%rax
5101(6): jnb 0x245(%rip)
5107(4): lea 0x1(%rax),%rdx
510b(4): mov %rdx,0x28(%rdi)
510f(3): mov $0x20,(%rax)
5112(2): jmp 0xffffffae(%rip)
5114(4): nop 0x0(%rax)
5118(7): lea 0x16626(%rip),%rsi
511f(5): mov $0x1,%edi
5124(2): xor %eax,%eax
5126(5): call 0xffffce8a(%rip)
512b(2): jmp 0xffffff95(%rip)
512d(3): nop (%rax)
5130(7): lea 0x16a09(%rip),%rcx
5137(4): cmp $0x9,%sil
513b(4): movsx 0x0(%rcx,%rax,1),%ecx
513f(3): mov %ecx,%r10d
5142(6): jnbe 0xffffff7e(%rip)
5148(4): movsxd 0x0(%r12,%rsi,4),%rax
514c(3): add %r12,%rax
514f(2): jmp %rax
5151(7): nop 0x0(%rax)
5158(7): mov 0x21bf69(%rip),%rcx
515f(7): lea 0x165e5(%rip),%rdi
5166(5): mov $0xc,%edx
516b(5): mov $0x1,%esi
5170(5): call 0xffffce10(%rip)
5175(5): jmp 0xffffff4b(%rip)
517a(6): nop 0x0(%rax,%rax,1)
5180(2): mov %edx,%esi
5182(5): call 0xffffcc7e(%rip)
5187(5): jmp 0xffffff39(%rip)
518c(4): nop 0x0(%rax)
5190(7): lea 0x170e4(%rip),%rax
5197(7): lea 0x16668(%rip),%rdx
519e(3): cmp $0x69,%ecx
51a1(7): lea 0x16564(%rip),%rsi
51a8(5): mov $0x1,%edi
51ad(4): cmovne %rax,%rdx
51b1(2): xor %eax,%eax
51b3(5): call 0xffffcdfd(%rip)
51b8(5): jmp 0xffffff08(%rip)
51bd(3): nop (%rax)
51c0(2): REP ret near (%rsp)
51c2(4): cmp $0x4f,%r10b
51c6(7): mov 0x21befb(%rip),%rcx
51cd(6): jz 0x1a6(%rip)
51d3(4): cmp $0x6f,%r10b
51d7(6): jnz 0x17e(%rip)
51dd(7): lea 0x16557(%rip),%rdi
51e4(5): mov $0x4,%edx
51e9(5): mov $0x1,%esi
51ee(5): call 0xffffcd92(%rip)
51f3(5): jmp 0xfffffecd(%rip)
51f8(7): lea 0x1707c(%rip),%rax
51ff(7): lea 0x16600(%rip),%rdx
5206(3): cmp $0x69,%ecx
5209(7): lea 0x16503(%rip),%rsi
5210(5): mov $0x1,%edi
5215(4): cmovne %rax,%rdx
5219(2): xor %eax,%eax
521b(5): call 0xffffcd95(%rip)
5220(5): jmp 0xfffffea0(%rip)
5225(7): lea 0x1704f(%rip),%rax
522c(7): lea 0x165d3(%rip),%rdx
5233(3): cmp $0x69,%ecx
5236(7): lea 0x164dd(%rip),%rsi
523d(5): mov $0x1,%edi
5242(4): cmovne %rax,%rdx
5246(2): xor %eax,%eax
5248(5): call 0xffffcd68(%rip)
524d(5): jmp 0xfffffe73(%rip)
5252(7): lea 0x17022(%rip),%rax
5259(7): lea 0x165a6(%rip),%rdx
5260(3): cmp $0x69,%ecx
5263(7): lea 0x164b7(%rip),%rsi
526a(5): mov $0x1,%edi
526f(4): cmovne %rax,%rdx
5273(2): xor %eax,%eax
5275(5): call 0xffffcd3b(%rip)
527a(5): jmp 0xfffffe46(%rip)
527f(7): lea 0x164a2(%rip),%rsi
5286(2): mov %ecx,%edx
5288(5): mov $0x1,%edi
528d(2): xor %eax,%eax
528f(5): call 0xffffcd21(%rip)
5294(5): jmp 0xfffffe2c(%rip)
5299(4): cmp $0x41,%r10b
529d(7): mov 0x21be24(%rip),%rcx
52a4(6): jz 0xea(%rip)
52aa(4): cmp $0x61,%r10b
52ae(6): jnz 0xa7(%rip)
52b4(7): lea 0x16474(%rip),%rdi
52bb(5): mov $0x5,%edx
52c0(5): mov $0x1,%esi
52c5(5): call 0xffffccbb(%rip)
52ca(5): jmp 0xfffffdf6(%rip)
52cf(4): cmp $0x4f,%r10b
52d3(7): mov 0x21bdee(%rip),%rcx
52da(6): jz 0xf0(%rip)
52e0(6): jle 0xc9(%rip)
52e6(4): cmp $0x61,%r10b
52ea(6): jz 0xfb(%rip)
52f0(4): cmp $0x6f,%r10b
52f4(2): jnz 0x61(%rip)
52f6(7): lea 0x163f7(%rip),%rdi
52fd(5): mov $0x5,%edx
5302(5): mov $0x1,%esi
5307(5): call 0xffffcc79(%rip)
530c(5): jmp 0xfffffdb4(%rip)
5311(5): mov $0x5c,%esi
5316(4): mov %edx,0xc(%rsp)
531a(5): call 0xffffcae6(%rip)
531f(4): mov 0xc(%rsp),%edx
5323(5): jmp 0xfffffd7d(%rip)
5328(5): mov $0x22,%esi
532d(5): call 0xffffcad3(%rip)
5332(5): jmp 0xfffffd07(%rip)
5337(5): mov $0x22,%esi
533c(5): call 0xffffcac4(%rip)
5341(5): jmp 0xfffffd7f(%rip)
5346(5): mov $0x20,%esi
534b(5): call 0xffffcab5(%rip)
5350(5): jmp 0xfffffd70(%rip)
5355(4): mov 0x28(%rcx),%rax
5359(4): cmp 0x30(%rcx),%rax
535d(6): jnb 0xa3(%rip)
5363(4): lea 0x1(%rax),%rdx
5367(4): mov %rdx,0x28(%rcx)
536b(3): mov $0x20,(%rax)
536e(5): jmp 0xfffffd52(%rip)
5373(7): lea 0x163c6(%rip),%rdi
537a(5): mov $0x4,%edx
537f(5): mov $0x1,%esi
5384(5): call 0xffffcbfc(%rip)
5389(5): jmp 0xfffffd37(%rip)
538e(7): lea 0x163a0(%rip),%rdi
5395(5): mov $0x5,%edx
539a(5): mov $0x1,%esi
539f(5): call 0xffffcbe1(%rip)
53a4(5): jmp 0xfffffd1c(%rip)
53a9(4): cmp $0x41,%r10b
53ad(2): jnz 0xffffffa8(%rip)
53af(7): lea 0x16350(%rip),%rdi
53b6(5): mov $0x5,%edx
53bb(5): mov $0x1,%esi
53c0(5): call 0xffffcbc0(%rip)
53c5(5): jmp 0xfffffcfb(%rip)
53ca(7): lea 0x16329(%rip),%rdi
53d1(5): mov $0x5,%edx
53d6(5): mov $0x1,%esi
53db(5): call 0xffffcba5(%rip)
53e0(5): jmp 0xfffffce0(%rip)
53e5(7): lea 0x16314(%rip),%rdi
53ec(5): mov $0x5,%edx
53f1(5): mov $0x1,%esi
53f6(5): call 0xffffcb8a(%rip)
53fb(5): jmp 0xfffffcc5(%rip)
5400(5): mov $0x20,%esi
5405(3): mov %rcx,%rdi
5408(5): call 0xffffc9f8(%rip)
540d(5): jmp 0xfffffcb3(%rip)

"compare_occurs" :
5420(1): push %rbp
5421(1): push %rbx
5422(3): mov %rdi,%rbp
5425(3): mov %rsi,%rbx
5428(5): call 0xfffff528(%rip)
542d(2): test %eax,%eax
542f(2): jnz 0x11(%rip)
5431(3): mov (%rbx),%rax
5434(4): cmp %rax,0x0(%rbp)
5438(2): jb 0x10(%rip)
543a(3): setnbe %al
543d(3): movzx %al,%eax
5440(1): pop %rbx
5441(1): pop %rbp
5442(1): ret near (%rsp)
5443(5): nop 0x0(%rax,%rax,1)
5448(5): mov $0xffffffff,%eax
544d(2): jmp 0xfffffff3(%rip)

"search_table.isra.1" :
5450(4): sub $0x1,%rdx
5454(2): js 0x7a(%rip)
5456(2): push %r14
5458(3): xor %r14d,%r14d
545b(2): push %r13
545d(3): mov %rdx,%r13
5460(2): push %r12
5462(3): mov %rsi,%r12
5465(1): push %rbp
5466(3): mov %rdi,%rbp
5469(1): push %rbx
546a(2): jmp 0x11(%rip)
546c(4): nop 0x0(%rax)
5470(2): jz 0x50(%rip)
5472(4): lea 0x1(%rbx),%r14
5476(3): cmp %r13,%r14
5479(2): jnle 0x32(%rip)
547b(4): lea 0x0(%r14,%r13,1),%rax
547f(3): mov %rbp,%rdi
5482(3): mov %rax,%rbx
5485(4): shr $0x3f,%rbx
5489(3): add %rax,%rbx
548c(3): sar $0x1,%rbx
548f(3): mov %rbx,%rsi
5492(4): shl/sal $0x4,%rsi
5496(3): add %r12,%rsi
5499(5): call 0xfffff4b7(%rip)
549e(2): test %eax,%eax
54a0(2): jns 0xffffffd0(%rip)
54a2(4): lea 0xffffffff(%rbx),%r13
54a6(3): cmp %r13,%r14
54a9(2): jle 0xffffffd2(%rip)
54ab(1): pop %rbx
54ac(2): xor %eax,%eax
54ae(1): pop %rbp
54af(2): pop %r12
54b1(2): pop %r13
54b3(2): pop %r14
54b5(1): ret near (%rsp)
54b6(a): nop 0x0(%rax,%rax,1)
54c0(1): pop %rbx
54c1(5): mov $0x1,%eax
54c6(1): pop %rbp
54c7(2): pop %r12
54c9(2): pop %r13
54cb(2): pop %r14
54cd(1): ret near (%rsp)
54ce(2): xor %eax,%eax
54d0(1): ret near (%rsp)

"usage" :
54e0(2): push %r13
54e2(2): push %r12
54e4(5): mov $0x5,%edx
54e9(1): push %rbp
54ea(1): push %rbx
54eb(2): mov %edi,%ebp
54ed(7): sub $0x88,%rsp
54f4(7): mov 0x21c3a5(%rip),%rbx
54fb(9): mov $0x28,%rax
5504(5): mov %rax,0x78(%rsp)
5509(2): xor %eax,%eax
550b(2): test %edi,%edi
550d(2): jz 0x30(%rip)
550f(7): lea 0x15a1a(%rip),%rsi
5516(2): xor %edi,%edi
5518(5): call 0xffffc868(%rip)
551d(7): mov 0x21bbdc(%rip),%rdi
5524(3): mov %rax,%rdx
5527(3): mov %rbx,%rcx
552a(5): mov $0x1,%esi
552f(2): xor %eax,%eax
5531(5): call 0xffffcb5f(%rip)
5536(2): mov %ebp,%edi
5538(5): call 0xffffcb38(%rip)
553d(7): lea 0x15a14(%rip),%rsi
5544(2): xor %edi,%edi
5546(5): call 0xffffc83a(%rip)
554b(3): mov %rbx,%rcx
554e(3): mov %rbx,%rdx
5551(3): mov %rax,%rsi
5554(5): mov $0x1,%edi
5559(2): xor %eax,%eax
555b(5): call 0xffffca55(%rip)
5560(7): mov 0x21bb61(%rip),%rbx
5567(7): lea 0x15a4a(%rip),%rsi
556e(5): mov $0x5,%edx
5573(2): xor %edi,%edi
5575(5): call 0xffffc80b(%rip)
557a(3): mov %rbx,%rsi
557d(3): mov %rax,%rdi
5580(5): call 0xffffc930(%rip)
5585(7): mov 0x21bb3c(%rip),%rbx
558c(7): lea 0x15a75(%rip),%rsi
5593(5): mov $0x5,%edx
5598(2): xor %edi,%edi
559a(5): call 0xffffc7e6(%rip)
559f(3): mov %rbx,%rsi
55a2(3): mov %rax,%rdi
55a5(5): call 0xffffc90b(%rip)
55aa(7): mov 0x21bb17(%rip),%rbx
55b1(7): lea 0x15a88(%rip),%rsi
55b8(5): mov $0x5,%edx
55bd(2): xor %edi,%edi
55bf(5): call 0xffffc7c1(%rip)
55c4(3): mov %rbx,%rsi
55c7(3): mov %rax,%rdi
55ca(5): call 0xffffc8e6(%rip)
55cf(7): mov 0x21baf2(%rip),%rbx
55d6(7): lea 0x15ab3(%rip),%rsi
55dd(5): mov $0x5,%edx
55e2(2): xor %edi,%edi
55e4(5): call 0xffffc79c(%rip)
55e9(3): mov %rbx,%rsi
55ec(3): mov %rax,%rdi
55ef(5): call 0xffffc8c1(%rip)
55f4(7): mov 0x21bacd(%rip),%rbx
55fb(7): lea 0x15b1e(%rip),%rsi
5602(5): mov $0x5,%edx
5607(2): xor %edi,%edi
5609(5): call 0xffffc777(%rip)
560e(3): mov %rbx,%rsi
5611(3): mov %rax,%rdi
5614(5): call 0xffffc89c(%rip)
5619(7): mov 0x21baa8(%rip),%rbx
5620(7): lea 0x15b79(%rip),%rsi
5627(5): mov $0x5,%edx
562c(2): xor %edi,%edi
562e(5): call 0xffffc752(%rip)
5633(3): mov %rbx,%rsi
5636(3): mov %rax,%rdi
5639(5): call 0xffffc877(%rip)
563e(7): mov 0x21ba83(%rip),%rbx
5645(7): lea 0x15cb4(%rip),%rsi
564c(5): mov $0x5,%edx
5651(2): xor %edi,%edi
5653(5): call 0xffffc72d(%rip)
5658(3): mov %rbx,%rsi
565b(3): mov %rax,%rdi
565e(5): call 0xffffc852(%rip)
5663(7): mov 0x21ba5e(%rip),%rbx
566a(7): lea 0x15e37(%rip),%rsi
5671(5): mov $0x5,%edx
5676(2): xor %edi,%edi
5678(5): call 0xffffc708(%rip)
567d(3): mov %rbx,%rsi
5680(3): mov %rax,%rdi
5683(5): call 0xffffc82d(%rip)
5688(7): mov 0x21ba39(%rip),%rbx
568f(7): lea 0x15ee2(%rip),%rsi
5696(5): mov $0x5,%edx
569b(2): xor %edi,%edi
569d(5): call 0xffffc6e3(%rip)
56a2(3): mov %rbx,%rsi
56a5(3): mov %rax,%rdi
56a8(5): call 0xffffc808(%rip)
56ad(7): mov 0x21ba14(%rip),%rbx
56b4(7): lea 0x15eed(%rip),%rsi
56bb(5): mov $0x5,%edx
56c0(2): xor %edi,%edi
56c2(5): call 0xffffc6be(%rip)
56c7(3): mov %rbx,%rsi
56ca(3): mov %rax,%rdi
56cd(7): lea 0x16084(%rip),%rbx
56d4(5): call 0xffffc7dc(%rip)
56d9(7): lea 0x1607c(%rip),%rax
56e0(7): lea 0x160b6(%rip),%rcx
56e7(9): mov $0x0,0x60(%rsp)
56f0(9): mov $0x0,0x68(%rsp)
56f9(3): mov %rsp,%rdx
56fc(4): mov %rax,(%rsp)
5700(7): lea 0x16057(%rip),%rax
5707(5): mov %rcx,0x30(%rsp)
570c(7): lea 0x16094(%rip),%rcx
5713(5): mov %rax,0x8(%rsp)
5718(7): lea 0x160b7(%rip),%rax
571f(5): mov %rcx,0x40(%rsp)
5724(7): lea 0x16086(%rip),%rcx
572b(5): mov %rax,0x10(%rsp)
5730(7): lea 0x16037(%rip),%rax
5737(5): mov %rcx,0x50(%rsp)
573c(5): mov %rax,0x18(%rsp)
5741(7): lea 0x1603c(%rip),%rax
5748(5): mov %rax,0x20(%rsp)
574d(7): lea 0x1603a(%rip),%rax
5754(5): mov %rax,0x28(%rsp)
5759(5): mov %rax,0x38(%rsp)
575e(5): mov %rax,0x48(%rsp)
5763(5): mov %rax,0x58(%rsp)
5768(8): nop 0x0(%rax,%rax,1)
5770(4): add $0x10,%rdx
5774(3): mov (%rdx),%rdi
5777(3): test %rdi,%rdi
577a(2): jz 0x15(%rip)
577c(5): mov $0x4,%ecx
5781(3): mov %rbx,%rsi
5784(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5786(3): setnbe %al
5789(2): sbb $0x0,%al
578b(2): test %al,%al
578d(2): jnz 0xffffffe3(%rip)
578f(4): mov 0x8(%rdx),%r12
5793(2): xor %edi,%edi
5795(5): mov $0x5,%edx
579a(7): lea 0x1601a(%rip),%rsi
57a1(3): test %r12,%r12
57a4(6): jz 0xc7(%rip)
57aa(5): call 0xffffc5d6(%rip)
57af(7): lea 0x15e2a(%rip),%rcx
57b6(7): lea 0x16015(%rip),%rdx
57bd(3): mov %rax,%rsi
57c0(5): mov $0x1,%edi
57c5(2): xor %eax,%eax
57c7(5): call 0xffffc7e9(%rip)
57cc(2): xor %esi,%esi
57ce(5): mov $0x5,%edi
57d3(5): call 0xffffc7cd(%rip)
57d8(3): test %rax,%rax
57db(2): jz 0x1e(%rip)
57dd(7): lea 0x15ffc(%rip),%rsi
57e4(5): mov $0x3,%edx
57e9(3): mov %rax,%rdi
57ec(5): call 0xffffc4a4(%rip)
57f1(2): test %eax,%eax
57f3(6): jnz 0x10d(%rip)
57f9(7): lea 0x15fe4(%rip),%rsi
5800(2): xor %edi,%edi
5802(5): mov $0x5,%edx
5807(5): call 0xffffc579(%rip)
580c(7): lea 0x15f45(%rip),%rcx
5813(7): lea 0x15dc6(%rip),%rdx
581a(3): mov %rax,%rsi
581d(5): mov $0x1,%edi
5822(2): xor %eax,%eax
5824(5): call 0xffffc78c(%rip)
5829(3): cmp %rbx,%r12
582c(7): lea 0x15f45(%rip),%rcx
5833(7): lea 0x16a41(%rip),%rbx
583a(4): cmove %rcx,%rbx
583e(7): lea 0x15e0b(%rip),%rsi
5845(2): xor %edi,%edi
5847(5): mov $0x5,%edx
584c(5): call 0xffffc534(%rip)
5851(3): mov %rbx,%rcx
5854(3): mov %rax,%rsi
5857(3): mov %r12,%rdx
585a(5): mov $0x1,%edi
585f(2): xor %eax,%eax
5861(5): call 0xffffc74f(%rip)
5866(5): jmp 0xfffffcd0(%rip)
586b(5): call 0xffffc515(%rip)
5870(7): lea 0x15d69(%rip),%rcx
5877(7): lea 0x15f54(%rip),%rdx
587e(3): mov %rax,%rsi
5881(5): mov $0x1,%edi
5886(2): xor %eax,%eax
5888(5): call 0xffffc728(%rip)
588d(2): xor %esi,%esi
588f(5): mov $0x5,%edi
5894(5): call 0xffffc70c(%rip)
5899(3): test %rax,%rax
589c(2): jz 0x1a(%rip)
589e(7): lea 0x15f3b(%rip),%rsi
58a5(5): mov $0x3,%edx
58aa(3): mov %rax,%rdi
58ad(5): call 0xffffc3e3(%rip)
58b2(2): test %eax,%eax
58b4(2): jnz 0x45(%rip)
58b6(7): lea 0x15f27(%rip),%rsi
58bd(5): mov $0x5,%edx
58c2(2): xor %edi,%edi
58c4(7): lea 0x15e8d(%rip),%r12
58cb(7): lea 0x15ea6(%rip),%rbx
58d2(5): call 0xffffc4ae(%rip)
58d7(7): lea 0x15e7a(%rip),%rcx
58de(7): lea 0x15cfb(%rip),%rdx
58e5(3): mov %rax,%rsi
58e8(5): mov $0x1,%edi
58ed(2): xor %eax,%eax
58ef(5): call 0xffffc6c1(%rip)
58f4(5): jmp 0xffffff4a(%rip)
58f9(7): lea 0x15e58(%rip),%r12
5900(7): mov 0x21b7c1(%rip),%r13
5907(7): lea 0x15cfa(%rip),%rsi
590e(2): xor %edi,%edi
5910(5): mov $0x5,%edx
5915(5): call 0xffffc46b(%rip)
591a(3): mov %r13,%rsi
591d(3): mov %rax,%rdi
5920(5): call 0xffffc590(%rip)
5925(5): jmp 0xfffffed4(%rip)

"__argmatch_die" :
5930(5): mov $0x1,%edi
5935(5): jmp 0xfffffbab(%rip)

"argmatch" :
5940(2): push %r15
5942(2): push %r14
5944(3): mov %rsi,%r15
5947(2): push %r13
5949(2): push %r12
594b(3): mov %rcx,%r13
594e(1): push %rbp
594f(1): push %rbx
5950(3): mov %rdx,%rbp
5953(4): sub $0x28,%rsp
5957(5): mov %rdi,0x8(%rsp)
595c(5): mov %rdx,0x18(%rsp)
5961(5): call 0xffffc43f(%rip)
5966(3): mov (%r15),%r14
5969(8): mov $0xffffffff,(%rsp)
5971(3): test %r14,%r14
5974(6): jz 0xb9(%rip)
597a(3): mov %rax,%r12
597d(5): mov $0x0,0x17(%rsp)
5982(2): xor %ebx,%ebx
5984(2): jmp 0x53(%rip)
5986(a): nop 0x0(%rax,%rax,1)
5990(5): mov 0x18(%rsp),%rax
5995(3): test %rax,%rax
5998(6): jz 0xa8(%rip)
599e(4): mov (%rsp),%rdi
59a2(3): mov %r13,%rdx
59a5(3): mov %rbp,%rsi
59a8(4): imul %r13,%rdi
59ac(3): add %rax,%rdi
59af(5): call 0xffffc4e1(%rip)
59b4(2): test %eax,%eax
59b6(5): movzx 0x17(%rsp),%eax
59bb(5): mov $0x1,%ecx
59c0(3): cmovne %ecx,%eax
59c3(4): mov %al,0x17(%rsp)
59c7(4): add $0x1,%rbx
59cb(3): add %r13,%rbp
59ce(4): mov 0x0(%r15,%rbx,8),%r14
59d2(3): test %r14,%r14
59d5(2): jz 0x43(%rip)
59d7(5): mov 0x8(%rsp),%rsi
59dc(3): mov %r12,%rdx
59df(3): mov %r14,%rdi
59e2(5): call 0xffffc2ae(%rip)
59e7(2): test %eax,%eax
59e9(2): jnz 0xffffffde(%rip)
59eb(3): mov %r14,%rdi
59ee(5): call 0xffffc3b2(%rip)
59f3(3): cmp %r12,%rax
59f6(2): jz 0x5a(%rip)
59f8(5): cmp $0xffffffff,(%rsp)
59fd(2): jnz 0xffffff93(%rip)
59ff(4): mov %rbx,(%rsp)
5a03(4): add $0x1,%rbx
5a07(3): add %r13,%rbp
5a0a(4): mov 0x0(%r15,%rbx,8),%r14
5a0e(3): test %r14,%r14
5a11(2): jnz 0xffffffc6(%rip)
5a13(5): nop 0x0(%rax,%rax,1)
5a18(5): cmp $0x0,0x17(%rsp)
5a1d(7): mov $0xfffffffe,%rax
5a24(5): cmove (%rsp),%rax
5a29(4): mov %rax,(%rsp)
5a2d(4): mov (%rsp),%rax
5a31(4): add $0x28,%rsp
5a35(1): pop %rbx
5a36(1): pop %rbp
5a37(2): pop %r12
5a39(2): pop %r13
5a3b(2): pop %r14
5a3d(2): pop %r15
5a3f(1): ret near (%rsp)
5a40(5): mov $0x1,0x17(%rsp)
5a45(2): jmp 0xffffff82(%rip)
5a47(9): nop 0x0(%rax,%rax,1)
5a50(4): mov %rbx,(%rsp)
5a54(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
5a60(4): cmp $0xffffffff,%rdx
5a64(2): push %r12
5a66(5): mov $0x5,%edx
5a6b(1): push %rbp
5a6c(3): mov %rsi,%r12
5a6f(1): push %rbx
5a70(3): mov %rdi,%rbp
5a73(2): jz 0x4d(%rip)
5a75(7): lea 0x15f5c(%rip),%rsi
5a7c(2): xor %edi,%edi
5a7e(5): call 0xffffc302(%rip)
5a83(3): mov %rax,%rbx
5a86(3): mov %rbp,%rsi
5a89(5): mov $0x1,%edi
5a8e(5): call 0x2ee2(%rip)
5a93(3): mov %r12,%rdx
5a96(3): mov %rax,%rbp
5a99(5): mov $0x8,%esi
5a9e(2): xor %edi,%edi
5aa0(5): call 0x2b00(%rip)
5aa5(3): mov %rbp,%r8
5aa8(3): mov %rbx,%rdx
5aab(3): mov %rax,%rcx
5aae(1): pop %rbx
5aaf(1): pop %rbp
5ab0(2): pop %r12
5ab2(2): xor %esi,%esi
5ab4(2): xor %edi,%edi
5ab6(2): xor %eax,%eax
5ab8(5): jmp 0xffffc548(%rip)
5abd(3): nop (%rax)
5ac0(7): lea 0x15ef6(%rip),%rsi
5ac7(2): xor %edi,%edi
5ac9(5): call 0xffffc2b7(%rip)
5ace(3): mov %rax,%rbx
5ad1(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
5ae0(2): push %r15
5ae2(2): push %r14
5ae4(3): mov %rdi,%r14
5ae7(2): push %r13
5ae9(2): push %r12
5aeb(2): xor %edi,%edi
5aed(1): push %rbp
5aee(1): push %rbx
5aef(3): mov %rsi,%rbp
5af2(7): lea 0x15efc(%rip),%rsi
5af9(3): mov %rdx,%r12
5afc(5): mov $0x5,%edx
5b01(4): sub $0x8,%rsp
5b05(7): mov 0x21b5f4(%rip),%rbx
5b0c(5): call 0xffffc274(%rip)
5b11(3): mov %rax,%rdi
5b14(3): mov %rbx,%rsi
5b17(5): call 0xffffc399(%rip)
5b1c(3): mov (%r14),%r15
5b1f(3): test %r15,%r15
5b22(6): jz 0x96(%rip)
5b28(3): xor %r13d,%r13d
5b2b(2): xor %ebx,%ebx
5b2d(2): jmp 0x3b(%rip)
5b2f(1): nop 
5b30(3): mov %r15,%rdi
5b33(4): add $0x1,%rbx
5b37(3): mov %rbp,%r13
5b3a(5): call 0x2e56(%rip)
5b3f(7): mov 0x21b5ba(%rip),%rdi
5b46(7): lea 0x15ebd(%rip),%rdx
5b4d(3): mov %rax,%rcx
5b50(5): mov $0x1,%esi
5b55(2): xor %eax,%eax
5b57(3): add %r12,%rbp
5b5a(5): call 0xffffc536(%rip)
5b5f(4): mov 0x0(%r14,%rbx,8),%r15
5b63(3): test %r15,%r15
5b66(2): jz 0x52(%rip)
5b68(3): test %rbx,%rbx
5b6b(2): jz 0xffffffc5(%rip)
5b6d(3): mov %r12,%rdx
5b70(3): mov %rbp,%rsi
5b73(3): mov %r13,%rdi
5b76(5): call 0xffffc31a(%rip)
5b7b(2): test %eax,%eax
5b7d(2): jnz 0xffffffb3(%rip)
5b7f(3): mov %r15,%rdi
5b82(4): add $0x1,%rbx
5b86(3): add %r12,%rbp
5b89(5): call 0x2e07(%rip)
5b8e(7): mov 0x21b56b(%rip),%rdi
5b95(7): lea 0x15e76(%rip),%rdx
5b9c(3): mov %rax,%rcx
5b9f(5): mov $0x1,%esi
5ba4(2): xor %eax,%eax
5ba6(5): call 0xffffc4ea(%rip)
5bab(4): mov 0x0(%r14,%rbx,8),%r15
5baf(3): test %r15,%r15
5bb2(2): jnz 0xffffffb6(%rip)
5bb4(4): nop 0x0(%rax)
5bb8(7): mov 0x21b541(%rip),%rdi
5bbf(4): mov 0x28(%rdi),%rax
5bc3(4): cmp 0x30(%rdi),%rax
5bc7(2): jnb 0x21(%rip)
5bc9(4): lea 0x1(%rax),%rdx
5bcd(4): mov %rdx,0x28(%rdi)
5bd1(3): mov $0xa,(%rax)
5bd4(4): add $0x8,%rsp
5bd8(1): pop %rbx
5bd9(1): pop %rbp
5bda(2): pop %r12
5bdc(2): pop %r13
5bde(2): pop %r14
5be0(2): pop %r15
5be2(1): ret near (%rsp)
5be3(5): nop 0x0(%rax,%rax,1)
5be8(4): add $0x8,%rsp
5bec(5): mov $0xa,%esi
5bf1(1): pop %rbx
5bf2(1): pop %rbp
5bf3(2): pop %r12
5bf5(2): pop %r13
5bf7(2): pop %r14
5bf9(2): pop %r15
5bfb(5): jmp 0xffffc205(%rip)

"__xargmatch_internal" :
5c00(2): push %r15
5c02(2): push %r14
5c04(3): mov %rdi,%r14
5c07(2): push %r13
5c09(2): push %r12
5c0b(3): mov %rsi,%r12
5c0e(1): push %rbp
5c0f(1): push %rbx
5c10(3): mov %rcx,%rbp
5c13(3): mov %rdx,%rbx
5c16(3): mov %r8,%rcx
5c19(3): mov %rbp,%rdx
5c1c(4): sub $0x8,%rsp
5c20(3): mov %rbx,%rsi
5c23(3): mov %r12,%rdi
5c26(3): mov %r8,%r15
5c29(3): mov %r9,%r13
5c2c(5): call 0xfffffd14(%rip)
5c31(3): test %rax,%rax
5c34(2): js 0x11(%rip)
5c36(4): add $0x8,%rsp
5c3a(1): pop %rbx
5c3b(1): pop %rbp
5c3c(2): pop %r12
5c3e(2): pop %r13
5c40(2): pop %r14
5c42(2): pop %r15
5c44(1): ret near (%rsp)
5c45(3): mov %rax,%rdx
5c48(3): mov %r12,%rsi
5c4b(3): mov %r14,%rdi
5c4e(5): call 0xfffffe12(%rip)
5c53(3): mov %r15,%rdx
5c56(3): mov %rbp,%rsi
5c59(3): mov %rbx,%rdi
5c5c(5): call 0xfffffe84(%rip)
5c61(3): call %r13
5c64(7): mov $0xffffffff,%rax
5c6b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
5c70(2): push %r14
5c72(2): push %r13
5c74(2): push %r12
5c76(1): push %rbp
5c77(1): push %rbx
5c78(3): mov (%rsi),%r14
5c7b(3): test %r14,%r14
5c7e(2): jz 0x33(%rip)
5c80(3): mov %rcx,%r12
5c83(3): mov %rdi,%r13
5c86(3): mov %rdx,%rbp
5c89(4): lea 0x8(%rsi),%rbx
5c8d(2): jmp 0x12(%rip)
5c8f(1): nop 
5c90(3): mov (%rbx),%r14
5c93(3): add %r12,%rbp
5c96(4): add $0x8,%rbx
5c9a(3): test %r14,%r14
5c9d(2): jz 0x14(%rip)
5c9f(3): mov %r12,%rdx
5ca2(3): mov %rbp,%rsi
5ca5(3): mov %r13,%rdi
5ca8(5): call 0xffffc1e8(%rip)
5cad(2): test %eax,%eax
5caf(2): jnz 0xffffffe1(%rip)
5cb1(1): pop %rbx
5cb2(3): mov %r14,%rax
5cb5(1): pop %rbp
5cb6(2): pop %r12
5cb8(2): pop %r13
5cba(2): pop %r14
5cbc(1): ret near (%rsp)

"close_stdout_set_file_name" :
5cc0(7): mov %rdi,0x21bbd1(%rip)
5cc7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
5cd0(7): mov %dil,0x21bbb9(%rip)
5cd7(1): ret near (%rsp)

"close_stdout" :
5ce0(1): push %rbp
5ce1(1): push %rbx
5ce2(4): sub $0x8,%rsp
5ce6(7): mov 0x21b3db(%rip),%rdi
5ced(5): call 0x129b3(%rip)
5cf2(2): test %eax,%eax
5cf4(2): jz 0x18(%rip)
5cf6(5): call 0xffffbf8a(%rip)
5cfb(7): cmp $0x0,0x21bb8e(%rip)
5d02(3): mov %rax,%rbx
5d05(2): jz 0x1e(%rip)
5d07(3): cmp $0x20,(%rax)
5d0a(2): jnz 0x19(%rip)
5d0c(7): mov 0x21b3ed(%rip),%rdi
5d13(5): call 0x1298d(%rip)
5d18(2): test %eax,%eax
5d1a(2): jnz 0x48(%rip)
5d1c(4): add $0x8,%rsp
5d20(1): pop %rbx
5d21(1): pop %rbp
5d22(1): ret near (%rsp)
5d23(7): lea 0x15ced(%rip),%rsi
5d2a(2): xor %edi,%edi
5d2c(5): mov $0x5,%edx
5d31(5): call 0xffffc04f(%rip)
5d36(7): mov 0x21bb5b(%rip),%rdi
5d3d(3): mov %rax,%rbp
5d40(3): test %rdi,%rdi
5d43(2): jz 0x2a(%rip)
5d45(5): call 0x2a4b(%rip)
5d4a(2): mov (%rbx),%esi
5d4c(7): lea 0x15cd0(%rip),%rdx
5d53(3): mov %rax,%rcx
5d56(3): mov %rbp,%r8
5d59(2): xor %edi,%edi
5d5b(2): xor %eax,%eax
5d5d(5): call 0xffffc2a3(%rip)
5d62(6): mov 0x21b2e0(%rip),%edi
5d68(5): call 0xffffbf38(%rip)
5d6d(2): mov (%rbx),%esi
5d6f(7): lea 0x15c9e(%rip),%rdx
5d76(3): mov %rax,%rcx
5d79(2): xor %edi,%edi
5d7b(2): xor %eax,%eax
5d7d(5): call 0xffffc283(%rip)
5d82(2): jmp 0xffffffe0(%rip)

"protect_fd" :
5d90(1): push %rbp
5d91(1): push %rbx
5d92(2): mov %edi,%ebp
5d94(7): lea 0x15ea5(%rip),%rdi
5d9b(2): xor %esi,%esi
5d9d(2): xor %eax,%eax
5d9f(4): sub $0x8,%rsp
5da3(5): mov $0x1,%ebx
5da8(5): call 0xffffc268(%rip)
5dad(2): cmp %eax,%ebp
5daf(2): jz 0x1a(%rip)
5db1(2): xor %ebx,%ebx
5db3(2): test %eax,%eax
5db5(2): js 0x14(%rip)
5db7(2): mov %eax,%edi
5db9(5): call 0xffffc0b7(%rip)
5dbe(5): call 0xffffbec2(%rip)
5dc3(6): mov $0x9,(%rax)
5dc9(4): add $0x8,%rsp
5dcd(2): mov %ebx,%eax
5dcf(1): pop %rbx
5dd0(1): pop %rbp
5dd1(1): ret near (%rsp)

"freopen_safer" :
5de0(2): push %r15
5de2(2): push %r14
5de4(3): mov %rsi,%r15
5de7(2): push %r13
5de9(2): push %r12
5deb(3): mov %rdx,%r12
5dee(1): push %rbp
5def(1): push %rbx
5df0(4): sub $0x18,%rsp
5df4(5): mov %rdi,0x8(%rsp)
5df9(3): mov %rdx,%rdi
5dfc(5): call 0xffffc0f4(%rip)
5e01(2): mov %eax,%ebx
5e03(5): call 0xffffbe7d(%rip)
5e08(3): cmp $0x1,%ebx
5e0b(3): mov %rax,%r14
5e0e(6): jz 0x162(%rip)
5e14(3): cmp $0x2,%ebx
5e17(6): jz 0x149(%rip)
5e1d(2): test %ebx,%ebx
5e1f(6): jz 0xb9(%rip)
5e25(5): mov $0x2,%esi
5e2a(5): mov $0x2,%edi
5e2f(5): call 0xffffbfb1(%rip)
5e34(3): cmp $0x2,%eax
5e37(3): setnz %bl
5e3a(5): mov $0x1,%esi
5e3f(5): mov $0x1,%edi
5e44(5): call 0xffffbf9c(%rip)
5e49(3): cmp $0x1,%eax
5e4c(4): setnz %bpl
5e50(2): xor %esi,%esi
5e52(2): xor %edi,%edi
5e54(5): call 0xffffbf8c(%rip)
5e59(2): test %eax,%eax
5e5b(6): jz 0x8d(%rip)
5e61(2): xor %edi,%edi
5e63(5): call 0xffffff2d(%rip)
5e68(2): test %al,%al
5e6a(3): mov %eax,%r13d
5e6d(6): jz 0x113(%rip)
5e73(3): test %bpl,%bpl
5e76(2): jnz 0x7a(%rip)
5e78(2): test %bl,%bl
5e7a(2): jz 0x16(%rip)
5e7c(5): mov $0x2,%edi
5e81(5): call 0xffffff0f(%rip)
5e86(2): test %al,%al
5e88(2): mov %eax,%ebx
5e8a(6): jz 0xb6(%rip)
5e90(5): mov 0x8(%rsp),%rdi
5e95(3): mov %r12,%rdx
5e98(3): mov %r15,%rsi
5e9b(5): call 0xffffbfb5(%rip)
5ea0(3): mov %rax,%r12
5ea3(2): test %bl,%bl
5ea5(3): mov (%r14),%r15d
5ea8(6): jnz 0xa8(%rip)
5eae(3): test %bpl,%bpl
5eb1(2): jnz 0x6f(%rip)
5eb3(3): test %r13b,%r13b
5eb6(2): jnz 0x79(%rip)
5eb8(3): test %r12,%r12
5ebb(2): jnz 0x5(%rip)
5ebd(3): mov %r15d,(%r14)
5ec0(4): add $0x18,%rsp
5ec4(3): mov %r12,%rax
5ec7(1): pop %rbx
5ec8(1): pop %rbp
5ec9(2): pop %r12
5ecb(2): pop %r13
5ecd(2): pop %r14
5ecf(2): pop %r15
5ed1(1): ret near (%rsp)
5ed2(6): nop 0x0(%rax,%rax,1)
5ed8(2): xor %ebx,%ebx
5eda(2): xor %ebp,%ebp
5edc(3): xor %r13d,%r13d
5edf(2): jmp 0xffffffb1(%rip)
5ee1(7): nop 0x0(%rax)
5ee8(3): xor %r13d,%r13d
5eeb(3): test %bpl,%bpl
5eee(2): jz 0xffffff8a(%rip)
5ef0(5): mov $0x1,%edi
5ef5(5): call 0xfffffe9b(%rip)
5efa(2): test %al,%al
5efc(2): mov %eax,%ebp
5efe(6): jnz 0xffffff7a(%rip)
5f04(3): xor %r12d,%r12d
5f07(2): test %bl,%bl
5f09(3): mov (%r14),%r15d
5f0c(2): jz 0x14(%rip)
5f0e(5): mov $0x2,%edi
5f13(5): call 0xffffbf5d(%rip)
5f18(8): nop 0x0(%rax,%rax,1)
5f20(5): mov $0x1,%edi
5f25(5): call 0xffffbf4b(%rip)
5f2a(3): test %r13b,%r13b
5f2d(2): jz 0xffffff8b(%rip)
5f2f(2): xor %edi,%edi
5f31(5): call 0xffffbf3f(%rip)
5f36(2): jmp 0xffffff82(%rip)
5f38(8): nop 0x0(%rax,%rax,1)
5f40(3): mov (%r14),%r15d
5f43(3): xor %r12d,%r12d
5f46(a): nop 0x0(%rax,%rax,1)
5f50(5): mov $0x2,%edi
5f55(5): call 0xffffbf1b(%rip)
5f5a(5): jmp 0xffffff54(%rip)
5f5f(1): nop 
5f60(2): xor %ebx,%ebx
5f62(5): jmp 0xfffffed8(%rip)
5f67(9): nop 0x0(%rax,%rax,1)
5f70(2): xor %ebx,%ebx
5f72(2): xor %ebp,%ebp
5f74(5): jmp 0xfffffedc(%rip)
5f79(7): nop 0x0(%rax)
5f80(6): mov $0x1,%r13d
5f86(3): xor %r12d,%r12d
5f89(5): jmp 0xffffff1a(%rip)

"set_program_name" :
5f90(3): test %rdi,%rdi
5f93(1): push %rbx
5f94(2): jz 0x79(%rip)
5f96(5): mov $0x2f,%esi
5f9b(3): mov %rdi,%rbx
5f9e(5): call 0xffffbe72(%rip)
5fa3(3): test %rax,%rax
5fa6(2): jz 0x57(%rip)
5fa8(4): lea 0x1(%rax),%r8
5fac(3): mov %r8,%rdx
5faf(3): sub %rbx,%rdx
5fb2(4): cmp $0x6,%rdx
5fb6(2): jle 0x47(%rip)
5fb8(4): lea 0xfffffffa(%rax),%rsi
5fbc(7): lea 0x15cc5(%rip),%rdi
5fc3(5): mov $0x7,%ecx
5fc8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5fca(3): setnbe %dl
5fcd(3): sbb $0x0,%dl
5fd0(2): test %dl,%dl
5fd2(2): jnz 0x2b(%rip)
5fd4(7): lea 0x15cb5(%rip),%rdi
5fdb(5): mov $0x3,%ecx
5fe0(3): mov %r8,%rsi
5fe3(3): mov %r8,%rbx
5fe6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5fe8(3): setnbe %dl
5feb(3): sbb $0x0,%dl
5fee(2): test %dl,%dl
5ff0(2): jnz 0xd(%rip)
5ff2(4): lea 0x4(%rax),%rbx
5ff6(7): mov %rbx,0x21b0c3(%rip)
5ffd(7): mov %rbx,0x21b89c(%rip)
6004(7): mov %rbx,0x21b0dd(%rip)
600b(1): pop %rbx
600c(1): ret near (%rsp)
600d(7): mov 0x21b0ec(%rip),%rcx
6014(7): lea 0x15c35(%rip),%rdi
601b(5): mov $0x37,%edx
6020(5): mov $0x1,%esi
6025(5): call 0xffffc05b(%rip)
602a(5): call 0xffffbc46(%rip)

"mbsstr_trimmed_wordbounded" :
6030(2): push %r15
6032(2): push %r14
6034(3): mov %rdi,%r15
6037(2): push %r13
6039(2): push %r12
603b(3): mov %rsi,%rdi
603e(1): push %rbp
603f(1): push %rbx
6040(5): mov $0x2,%esi
6045(7): lea 0x16f14(%rip),%r13
604c(7): sub $0xb8,%rsp
6053(5): lea 0x20(%rsp),%rbx
6058(5): lea 0x60(%rsp),%r12
605d(9): mov $0x28,%rax
6066(8): mov %rax,0xa8(%rsp)
606e(2): xor %eax,%eax
6070(4): lea 0x24(%rbx),%r14
6074(5): call 0x2bfc(%rip)
6079(5): mov %rax,0x8(%rsp)
607e(2): nop 
6080(4): cmp $0x0,(%r15)
6084(2): jz 0x81(%rip)
6086(5): mov 0x8(%rsp),%rsi
608b(3): mov %r15,%rdi
608e(5): call 0x13412(%rip)
6093(3): test %rax,%rax
6096(3): mov %rax,%rbp
6099(2): jz 0x6c(%rip)
609b(5): call 0xffffbcf5(%rip)
60a0(4): cmp $0x1,%rax
60a4(6): jnbe 0xa4(%rip)
60aa(3): cmp %rbp,%r15
60ad(6): jnb 0x66b(%rip)
60b3(5): call 0xffffc02d(%rip)
60b8(4): movzx 0xffffffff(%rbp),%edx
60bc(3): mov (%rax),%rax
60bf(5): mov 0x8(%rsp),%rdi
60c4(5): movzx 0x0(%rax,%rdx,2),%r15d
60c9(5): shr $0x3,%r15w
60ce(4): xor $0x1,%r15d
60d2(3): mov %r15d,%eax
60d5(3): and $0x1,%eax
60d8(4): mov %al,0x10(%rsp)
60dc(5): call 0xffffbcc4(%rip)
60e1(5): movzx 0x0(%rbp,%rax,1),%edx
60e6(2): test %dl,%dl
60e8(6): jnz 0x64c(%rip)
60ee(5): cmp $0x0,0x10(%rsp)
60f3(2): jnz 0x17(%rip)
60f5(4): cmp $0x0,0x0(%rbp)
60f9(2): jz 0xc(%rip)
60fb(4): lea 0x1(%rbp),%r15
60ff(4): cmp $0x0,(%r15)
6103(2): jnz 0xffffff83(%rip)
6105(5): mov $0x0,0x10(%rsp)
610a(5): mov 0x8(%rsp),%rdi
610f(5): call 0xffffbb51(%rip)
6114(8): mov 0xa8(%rsp),%rbx
611c(9): xor $0x28,%rbx
6125(5): movzx 0x10(%rsp),%eax
612a(6): jnz 0x84c(%rip)
6130(7): add $0xb8,%rsp
6137(1): pop %rbx
6138(1): pop %rbp
6139(2): pop %r12
613b(2): pop %r13
613d(2): pop %r14
613f(2): pop %r15
6141(1): ret near (%rsp)
6142(6): nop 0x0(%rax,%rax,1)
6148(3): cmp %rbp,%r15
614b(5): mov %r15,0x30(%rsp)
6150(5): mov $0x0,0x20(%rsp)
6155(8): mov $0x0,0x4(%rbx)
615d(5): mov $0x0,0x2c(%rsp)
6162(2): jb 0x75(%rip)
6164(5): jmp 0x5a4(%rip)
6169(7): nop 0x0(%rax)
6170(5): mov 0x30(%rsp),%r15
6175(4): movzx (%r15),%edx
6179(2): mov %edx,%eax
617b(3): shr $0x5,%al
617e(3): and $0x7,%eax
6181(5): mov 0x0(%r13,%rax,4),%eax
6186(3): bt %edx,%eax
6189(6): jnb 0xef(%rip)
618f(9): mov $0x1,0x38(%rsp)
6198(4): movsx (%r15),%edx
619c(5): mov $0x1,0x40(%rsp)
61a1(5): mov $0x1,0x2c(%rsp)
61a6(4): mov %edx,0x44(%rsp)
61aa(2): test %edx,%edx
61ac(6): jz 0x7a6(%rip)
61b2(5): mov 0x30(%rsp),%r15
61b7(5): mov 0x38(%rsp),%rax
61bc(5): movzx 0x40(%rsp),%ecx
61c1(5): mov $0x0,0x2c(%rsp)
61c6(3): add %r15,%rax
61c9(3): cmp %rbp,%rax
61cc(5): mov %rax,0x30(%rsp)
61d1(6): jnb 0x12f(%rip)
61d7(5): cmp $0x0,0x20(%rsp)
61dc(2): jz 0xffffff94(%rip)
61de(5): call 0xffffbbb2(%rip)
61e3(5): mov 0x30(%rsp),%r15
61e8(3): mov %rax,%rsi
61eb(3): mov %r15,%rdi
61ee(5): call 0x2a42(%rip)
61f3(4): lea 0x4(%rbx),%rcx
61f7(3): mov %rax,%rdx
61fa(3): mov %r15,%rsi
61fd(3): mov %r14,%rdi
6200(5): call 0x41b0(%rip)
6205(4): cmp $0xffffffff,%rax
6209(5): mov %rax,0x38(%rsp)
620e(6): jz 0x8a(%rip)
6214(4): cmp $0xfffffffe,%rax
6218(6): jz 0xa0(%rip)
621e(3): test %rax,%rax
6221(6): jnz 0xcf(%rip)
6227(5): mov 0x30(%rsp),%r15
622c(9): mov $0x1,0x38(%rsp)
6235(4): cmp $0x0,(%r15)
6239(6): jnz 0x742(%rip)
623f(4): mov 0x44(%rsp),%edx
6243(2): test %edx,%edx
6245(6): jnz 0x6b7(%rip)
624b(4): lea 0x4(%rbx),%rdi
624f(4): mov %edx,0x10(%rsp)
6253(5): mov $0x1,0x40(%rsp)
6258(5): call 0xffffbe58(%rip)
625d(2): test %eax,%eax
625f(4): mov 0x10(%rsp),%edx
6263(2): jz 0x7d(%rip)
6265(5): mov $0x0,0x20(%rsp)
626a(5): mov $0x1,0x2c(%rsp)
626f(5): jmp 0xffffff3b(%rip)
6274(4): nop 0x0(%rax)
6278(4): lea 0x4(%rbx),%rdi
627c(5): call 0xffffbe34(%rip)
6281(2): test %eax,%eax
6283(6): jz 0x6d4(%rip)
6289(5): mov $0x1,0x20(%rsp)
628e(5): jmp 0xffffff50(%rip)
6293(5): nop 0x0(%rax,%rax,1)
6298(9): mov $0x1,0x38(%rsp)
62a1(5): mov $0x0,0x40(%rsp)
62a6(4): mov 0x44(%rsp),%edx
62aa(5): mov 0x30(%rsp),%r15
62af(5): jmp 0xffffff08(%rip)
62b4(4): nop 0x0(%rax)
62b8(5): mov 0x30(%rsp),%r15
62bd(3): mov %r15,%rdi
62c0(5): call 0xffffbae0(%rip)
62c5(5): mov $0x0,0x40(%rsp)
62ca(5): mov %rax,0x38(%rsp)
62cf(4): mov 0x44(%rsp),%edx
62d3(5): jmp 0xfffffee4(%rip)
62d8(8): nop 0x0(%rax,%rax,1)
62e0(5): mov $0x1,0x2c(%rsp)
62e5(5): jmp 0xfffffec5(%rip)
62ea(6): nop 0x0(%rax,%rax,1)
62f0(4): mov 0x44(%rsp),%edx
62f4(5): jmp 0xffffff57(%rip)
62f9(7): nop 0x0(%rax)
6300(2): test %cl,%cl
6302(6): jz 0x406(%rip)
6308(2): mov %edx,%edi
630a(5): call 0xffffbc06(%rip)
630f(2): test %eax,%eax
6311(5): setz 0x10(%rsp)
6316(5): mov 0x8(%rsp),%rax
631b(5): mov %rbp,0x30(%rsp)
6320(5): mov $0x0,0x20(%rsp)
6325(8): mov $0x0,0x4(%rbx)
632d(5): mov $0x0,0x2c(%rsp)
6332(5): mov $0x0,0x60(%rsp)
6337(5): mov %rax,0x70(%rsp)
633c(9): mov $0x0,0x4(%r12)
6345(5): mov $0x0,0x6c(%rsp)
634a(2): jmp 0x73(%rip)
634c(4): nop 0x0(%rax)
6350(5): cmp $0x0,0x20(%rsp)
6355(6): jnz 0x281(%rip)
635b(5): mov 0x30(%rsp),%rcx
6360(3): movzx (%rcx),%edx
6363(2): mov %edx,%eax
6365(3): shr $0x5,%al
6368(3): and $0x7,%eax
636b(5): mov 0x0(%r13,%rax,4),%eax
6370(3): bt %edx,%eax
6373(6): jnb 0x24d(%rip)
6379(9): mov $0x1,0x38(%rsp)
6382(3): movsx (%rcx),%eax
6385(5): mov $0x1,0x40(%rsp)
638a(5): mov $0x1,0x2c(%rsp)
638f(4): mov %eax,0x44(%rsp)
6393(4): mov 0x44(%rsp),%edi
6397(2): test %edi,%edi
6399(6): jz 0x5b9(%rip)
639f(5): mov 0x38(%rsp),%rax
63a4(5): add %rax,0x30(%rsp)
63a9(5): mov 0x78(%rsp),%rax
63ae(5): add %rax,0x70(%rsp)
63b3(5): mov $0x0,0x2c(%rsp)
63b8(5): mov $0x0,0x6c(%rsp)
63bd(5): cmp $0x0,0x60(%rsp)
63c2(2): jnz 0x7d(%rip)
63c4(5): mov 0x70(%rsp),%rcx
63c9(3): movzx (%rcx),%edx
63cc(2): mov %edx,%eax
63ce(3): shr $0x5,%al
63d1(3): and $0x7,%eax
63d4(5): mov 0x0(%r13,%rax,4),%eax
63d9(3): bt %edx,%eax
63dc(2): jnb 0x4c(%rip)
63de(9): mov $0x1,0x78(%rsp)
63e7(3): movsx (%rcx),%eax
63ea(8): mov $0x1,0x80(%rsp)
63f2(5): mov $0x1,0x6c(%rsp)
63f7(7): mov %eax,0x84(%rsp)
63fe(7): mov 0x84(%rsp),%ecx
6405(2): test %ecx,%ecx
6407(6): jz 0xd9(%rip)
640d(5): cmp $0x0,0x2c(%rsp)
6412(6): jz 0xffffff3e(%rip)
6418(5): cmp $0x0,0x40(%rsp)
641d(2): jz 0xffffff82(%rip)
641f(5): jmp 0xffffff74(%rip)
6424(4): nop 0x0(%rax)
6428(5): lea 0x4(%r12),%rdi
642d(5): call 0xffffbc83(%rip)
6432(2): test %eax,%eax
6434(6): jz 0x523(%rip)
643a(5): mov $0x1,0x60(%rsp)
643f(5): call 0xffffb951(%rip)
6444(5): mov 0x70(%rsp),%r15
6449(3): mov %rax,%rsi
644c(3): mov %r15,%rdi
644f(5): call 0x27e1(%rip)
6454(5): lea 0x4(%r12),%rcx
6459(5): lea 0x24(%r12),%rdi
645e(3): mov %rax,%rdx
6461(3): mov %r15,%rsi
6464(5): call 0x3f4c(%rip)
6469(4): cmp $0xffffffff,%rax
646d(5): mov %rax,0x78(%rsp)
6472(6): jz 0x1f6(%rip)
6478(4): cmp $0xfffffffe,%rax
647c(6): jz 0x224(%rip)
6482(3): test %rax,%rax
6485(2): jnz 0x28(%rip)
6487(5): mov 0x70(%rsp),%rax
648c(9): mov $0x1,0x78(%rsp)
6495(3): cmp $0x0,(%rax)
6498(6): jnz 0x4e3(%rip)
649e(7): mov 0x84(%rsp),%esi
64a5(2): test %esi,%esi
64a7(6): jnz 0x455(%rip)
64ad(5): lea 0x4(%r12),%rdi
64b2(8): mov $0x1,0x80(%rsp)
64ba(5): call 0xffffbbf6(%rip)
64bf(2): test %eax,%eax
64c1(6): jz 0x207(%rip)
64c7(7): mov 0x84(%rsp),%ecx
64ce(5): mov $0x0,0x60(%rsp)
64d3(5): mov $0x1,0x6c(%rsp)
64d8(2): test %ecx,%ecx
64da(6): jnz 0xffffff33(%rip)
64e0(5): cmp $0x0,0x2c(%rsp)
64e5(6): jnz 0x273(%rip)
64eb(5): cmp $0x0,0x20(%rsp)
64f0(6): jnz 0x292(%rip)
64f6(5): mov 0x30(%rsp),%rcx
64fb(3): movzx (%rcx),%edx
64fe(2): mov %edx,%eax
6500(3): shr $0x5,%al
6503(3): and $0x7,%eax
6506(5): mov 0x0(%r13,%rax,4),%eax
650b(3): bt %edx,%eax
650e(6): jnb 0x25e(%rip)
6514(9): mov $0x1,0x38(%rsp)
651d(3): movsx (%rcx),%edx
6520(5): mov $0x1,0x40(%rsp)
6525(5): mov $0x1,0x2c(%rsp)
652a(4): mov %edx,0x44(%rsp)
652e(2): test %edx,%edx
6530(2): jz 0x14(%rip)
6532(5): cmp $0x0,0x40(%rsp)
6537(2): jz 0xd(%rip)
6539(2): mov %edx,%edi
653b(5): call 0xffffb9d5(%rip)
6540(2): test %eax,%eax
6542(2): jnz 0xd(%rip)
6544(5): cmp $0x0,0x10(%rsp)
6549(6): jnz 0xfffffbc1(%rip)
654f(5): mov %rbp,0x30(%rsp)
6554(5): mov $0x0,0x20(%rsp)
6559(4): lea 0x4(%rbx),%r15
655d(8): mov $0x0,0x4(%rbx)
6565(5): mov $0x0,0x2c(%rsp)
656a(4): movzx 0x0(%rbp),%edx
656e(2): mov %edx,%eax
6570(3): shr $0x5,%al
6573(3): and $0x7,%eax
6576(5): mov 0x0(%r13,%rax,4),%eax
657b(3): bt %edx,%eax
657e(6): jnb 0x292(%rip)
6584(9): mov $0x1,0x38(%rsp)
658d(4): movsx 0x0(%rbp),%eax
6591(5): mov $0x1,0x40(%rsp)
6596(5): mov $0x1,0x2c(%rsp)
659b(4): mov %eax,0x44(%rsp)
659f(4): mov 0x44(%rsp),%eax
65a3(2): test %eax,%eax
65a5(6): jz 0xfffffb60(%rip)
65ab(5): mov 0x38(%rsp),%r15
65b0(3): add %rbp,%r15
65b3(5): jmp 0xfffffacd(%rip)
65b8(8): nop 0x0(%rax,%rax,1)
65c0(4): lea 0x4(%rbx),%rdi
65c4(5): call 0xffffbaec(%rip)
65c9(2): test %eax,%eax
65cb(6): jz 0x38c(%rip)
65d1(5): mov $0x1,0x20(%rsp)
65d6(5): call 0xffffb7ba(%rip)
65db(5): mov 0x30(%rsp),%r15
65e0(3): mov %rax,%rsi
65e3(3): mov %r15,%rdi
65e6(5): call 0x264a(%rip)
65eb(4): lea 0x4(%rbx),%rcx
65ef(3): mov %rax,%rdx
65f2(3): mov %r15,%rsi
65f5(3): mov %r14,%rdi
65f8(5): call 0x3db8(%rip)
65fd(4): cmp $0xffffffff,%rax
6601(5): mov %rax,0x38(%rsp)
6606(6): jz 0x82(%rip)
660c(4): cmp $0xfffffffe,%rax
6610(6): jz 0xc8(%rip)
6616(3): test %rax,%rax
6619(2): jnz 0x27(%rip)
661b(5): mov 0x30(%rsp),%rax
6620(9): mov $0x1,0x38(%rsp)
6629(3): cmp $0x0,(%rax)
662c(6): jnz 0x34f(%rip)
6632(5): mov 0x44(%rsp),%r8d
6637(3): test %r8d,%r8d
663a(6): jnz 0x2c2(%rip)
6640(4): lea 0x4(%rbx),%rdi
6644(5): mov $0x1,0x40(%rsp)
6649(5): call 0xffffba67(%rip)
664e(2): test %eax,%eax
6650(6): jz 0xa8(%rip)
6656(5): mov $0x0,0x20(%rsp)
665b(5): mov $0x1,0x2c(%rsp)
6660(5): jmp 0xfffffd33(%rip)
6665(3): nop (%rax)
6668(9): mov $0x1,0x78(%rsp)
6671(8): mov $0x0,0x80(%rsp)
6679(5): mov $0x1,0x6c(%rsp)
667e(5): jmp 0xfffffd8f(%rip)
6683(5): nop 0x0(%rax,%rax,1)
6688(9): mov $0x1,0x38(%rsp)
6691(5): mov $0x0,0x40(%rsp)
6696(5): jmp 0xfffffd09(%rip)
669b(5): nop 0x0(%rax,%rax,1)
66a0(5): mov 0x70(%rsp),%rdi
66a5(5): call 0xffffb6fb(%rip)
66aa(8): mov $0x0,0x80(%rsp)
66b2(5): mov %rax,0x78(%rsp)
66b7(5): mov $0x1,0x6c(%rsp)
66bc(5): jmp 0xfffffd51(%rip)
66c1(7): nop 0x0(%rax)
66c8(5): mov $0x1,0x6c(%rsp)
66cd(5): jmp 0xfffffd31(%rip)
66d2(6): nop 0x0(%rax,%rax,1)
66d8(5): mov 0x30(%rsp),%rdi
66dd(5): call 0xffffb6c3(%rip)
66e2(5): mov $0x0,0x40(%rsp)
66e7(5): mov %rax,0x38(%rsp)
66ec(5): jmp 0xfffffcb3(%rip)
66f1(7): nop 0x0(%rax)
66f8(5): mov $0x1,0x2c(%rsp)
66fd(5): jmp 0xfffffc96(%rip)
6702(6): nop 0x0(%rax,%rax,1)
6708(5): mov $0x1,0x10(%rsp)
670d(5): jmp 0xfffffc09(%rip)
6712(6): nop 0x0(%rax,%rax,1)
6718(5): mov 0x8(%rsp),%rdi
671d(5): call 0xffffb683(%rip)
6722(5): movzx 0x0(%rbp,%rax,1),%edx
6727(5): mov $0x1,0x10(%rsp)
672c(2): test %dl,%dl
672e(6): jz 0xfffff9dc(%rip)
6734(4): mov %dl,0x18(%rsp)
6738(5): call 0xffffb9a8(%rip)
673d(5): movzx 0x18(%rsp),%edx
6742(3): mov (%rax),%rax
6745(4): test $0x8,0x0(%rax,%rdx,2)
6749(6): jnz 0xfffff9ac(%rip)
674f(5): jmp 0xfffff99f(%rip)
6754(4): nop 0x0(%rax)
6758(5): cmp $0x0,0x40(%rsp)
675d(4): mov 0x44(%rsp),%edx
6761(6): jz 0xfffffdd1(%rip)
6767(5): jmp 0xfffffdc7(%rip)
676c(4): lea 0x4(%rbx),%rdi
6770(5): call 0xffffb940(%rip)
6775(2): test %eax,%eax
6777(6): jz 0x1e0(%rip)
677d(5): mov $0x1,0x20(%rsp)
6782(5): call 0xffffb60e(%rip)
6787(5): mov 0x30(%rsp),%r8
678c(3): mov %rax,%rsi
678f(3): mov %r8,%rdi
6792(5): mov %r8,0x18(%rsp)
6797(5): call 0x2499(%rip)
679c(5): mov 0x18(%rsp),%r8
67a1(4): lea 0x4(%rbx),%rcx
67a5(3): mov %rax,%rdx
67a8(3): mov %r14,%rdi
67ab(3): mov %r8,%rsi
67ae(5): call 0x3c02(%rip)
67b3(4): cmp $0xffffffff,%rax
67b7(5): mov %rax,0x38(%rsp)
67bc(6): jz 0xf3(%rip)
67c2(4): cmp $0xfffffffe,%rax
67c6(6): jz 0x16a(%rip)
67cc(3): test %rax,%rax
67cf(6): jz 0x10a(%rip)
67d5(4): mov 0x44(%rsp),%edx
67d9(4): lea 0x4(%rbx),%rdi
67dd(4): mov %edx,0x18(%rsp)
67e1(5): mov $0x1,0x40(%rsp)
67e6(5): call 0xffffb8ca(%rip)
67eb(2): test %eax,%eax
67ed(4): mov 0x18(%rsp),%edx
67f1(6): jz 0x121(%rip)
67f7(5): mov $0x0,0x20(%rsp)
67fc(5): mov $0x1,0x2c(%rsp)
6801(5): jmp 0xfffffd2d(%rip)
6806(a): nop 0x0(%rax,%rax,1)
6810(3): mov %r15,%rdi
6813(5): call 0xffffb89d(%rip)
6818(2): test %eax,%eax
681a(6): jz 0x13d(%rip)
6820(5): mov $0x1,0x20(%rsp)
6825(5): call 0xffffb56b(%rip)
682a(5): mov 0x30(%rsp),%r8
682f(3): mov %rax,%rsi
6832(3): mov %r8,%rdi
6835(5): mov %r8,0x10(%rsp)
683a(5): call 0x23f6(%rip)
683f(5): mov 0x10(%rsp),%r8
6844(3): mov %r15,%rcx
6847(3): mov %rax,%rdx
684a(3): mov %r14,%rdi
684d(3): mov %r8,%rsi
6850(5): call 0x3b60(%rip)
6855(4): cmp $0xffffffff,%rax
6859(5): mov %rax,0x38(%rsp)
685e(2): jz 0x6d(%rip)
6860(4): cmp $0xfffffffe,%rax
6864(6): jz 0xb8(%rip)
686a(3): test %rax,%rax
686d(2): jnz 0x21(%rip)
686f(5): mov 0x30(%rsp),%rax
6874(9): mov $0x1,0x38(%rsp)
687d(3): cmp $0x0,(%rax)
6880(6): jnz 0xfb(%rip)
6886(4): mov 0x44(%rsp),%edx
688a(2): test %edx,%edx
688c(2): jnz 0x70(%rip)
688e(4): lea 0x4(%rbx),%rdi
6892(5): mov $0x1,0x40(%rsp)
6897(5): call 0xffffb819(%rip)
689c(2): test %eax,%eax
689e(2): jz 0x6a(%rip)
68a0(5): mov $0x0,0x20(%rsp)
68a5(5): mov $0x1,0x2c(%rsp)
68aa(5): jmp 0xfffffcf5(%rip)
68af(9): mov $0x1,0x38(%rsp)
68b8(5): mov $0x0,0x40(%rsp)
68bd(4): mov 0x44(%rsp),%edx
68c1(5): mov $0x1,0x2c(%rsp)
68c6(5): jmp 0xfffffc6c(%rip)
68cb(9): mov $0x1,0x38(%rsp)
68d4(5): jmp 0xfffffcd7(%rip)
68d9(5): mov 0x30(%rsp),%rax
68de(9): mov $0x1,0x38(%rsp)
68e7(3): cmp $0x0,(%rax)
68ea(6): jnz 0x91(%rip)
68f0(4): mov 0x44(%rsp),%edx
68f4(2): test %edx,%edx
68f6(6): jz 0xfffffee3(%rip)
68fc(5): call 0xffffb824(%rip)
6901(7): nop 0x0(%rax)
6908(5): mov $0x1,0x2c(%rsp)
690d(5): jmp 0xfffffc92(%rip)
6912(5): mov $0x1,0x2c(%rsp)
6917(5): jmp 0xfffffc17(%rip)
691c(5): mov 0x30(%rsp),%rdi
6921(5): call 0xffffb47f(%rip)
6926(5): mov %rax,0x38(%rsp)
692b(5): jmp 0xfffffc80(%rip)
6930(5): mov 0x30(%rsp),%rdi
6935(5): call 0xffffb46b(%rip)
693a(5): mov $0x0,0x40(%rsp)
693f(5): mov %rax,0x38(%rsp)
6944(4): mov 0x44(%rsp),%edx
6948(5): mov $0x1,0x2c(%rsp)
694d(5): jmp 0xfffffbe5(%rip)
6952(5): call 0xffffb31e(%rip)
6957(7): lea 0x153b2(%rip),%rcx
695e(7): lea 0x15333(%rip),%rsi
6965(7): lea 0x1535e(%rip),%rdi
696c(5): mov $0x96,%edx
6971(5): call 0xffffb4bf(%rip)
6976(5): call 0xffffb43a(%rip)
697b(7): lea 0x1538e(%rip),%rcx
6982(7): lea 0x1530f(%rip),%rsi
6989(7): lea 0x15351(%rip),%rdi
6990(5): mov $0xb2,%edx
6995(5): call 0xffffb49b(%rip)

"proper_name" :
69a0(2): push %r12
69a2(1): push %rbp
69a3(3): mov %rdi,%rsi
69a6(1): push %rbx
69a7(3): mov %rdi,%rbp
69aa(5): mov $0x5,%edx
69af(2): xor %edi,%edi
69b1(5): call 0xffffb3cf(%rip)
69b6(3): cmp %rax,%rbp
69b9(3): mov %rax,%rbx
69bc(2): jz 0x11(%rip)
69be(3): mov %rbp,%rsi
69c1(3): mov %rax,%rdi
69c4(5): call 0xfffff66c(%rip)
69c9(2): test %al,%al
69cb(2): jz 0xd(%rip)
69cd(3): mov %rbx,%rax
69d0(1): pop %rbx
69d1(1): pop %rbp
69d2(2): pop %r12
69d4(1): ret near (%rsp)
69d5(3): nop (%rax)
69d8(3): mov %rbx,%rdi
69db(5): call 0xffffb3c5(%rip)
69e0(3): mov %rbp,%rdi
69e3(3): mov %rax,%r12
69e6(5): call 0xffffb3ba(%rip)
69eb(5): lea 0x4(%r12,%rax,1),%rdi
69f0(5): call 0x2ed0(%rip)
69f5(7): lea 0x152fc(%rip),%rcx
69fc(3): mov %rax,%r12
69ff(3): mov %rbp,%r9
6a02(3): mov %rbx,%r8
6a05(3): mov %rax,%rdi
6a08(3): mov %r12,%rbx
6a0b(7): mov $0xffffffff,%rdx
6a12(5): mov $0x1,%esi
6a17(2): xor %eax,%eax
6a19(5): call 0xffffb6e7(%rip)
6a1e(3): mov %rbx,%rax
6a21(1): pop %rbx
6a22(1): pop %rbp
6a23(2): pop %r12
6a25(1): ret near (%rsp)

"proper_name_utf8" :
6a30(2): push %r15
6a32(2): push %r14
6a34(5): mov $0x5,%edx
6a39(2): push %r13
6a3b(2): push %r12
6a3d(3): mov %rdi,%r13
6a40(1): push %rbp
6a41(1): push %rbx
6a42(3): mov %rsi,%rbp
6a45(3): mov %rdi,%rsi
6a48(2): xor %edi,%edi
6a4a(4): sub $0x18,%rsp
6a4e(5): call 0xffffb332(%rip)
6a53(3): mov %rax,%r14
6a56(5): call 0x11d2a(%rip)
6a5b(7): lea 0x1529e(%rip),%rsi
6a62(3): mov %rax,%rdi
6a65(3): mov %rax,%r12
6a68(5): call 0x11be8(%rip)
6a6d(2): test %eax,%eax
6a6f(6): jnz 0xe9(%rip)
6a75(3): test %rbp,%rbp
6a78(2): jz 0x58(%rip)
6a7a(5): mov %rbp,0x8(%rsp)
6a7f(3): mov %rbp,%rbx
6a82(3): xor %r12d,%r12d
6a85(3): xor %r15d,%r15d
6a88(3): mov %r13,%rsi
6a8b(3): mov %r14,%rdi
6a8e(5): call 0xffffb442(%rip)
6a93(2): test %eax,%eax
6a95(2): jnz 0x5c(%rip)
6a97(3): test %r15,%r15
6a9a(2): jz 0xf(%rip)
6a9c(3): cmp %r15,%rbx
6a9f(2): jz 0xa(%rip)
6aa1(3): mov %r15,%rdi
6aa4(5): call 0xffffb1bc(%rip)
6aa9(3): test %r12,%r12
6aac(2): jz 0xf(%rip)
6aae(3): cmp %r12,%rbx
6ab1(2): jz 0xa(%rip)
6ab3(3): mov %r12,%rdi
6ab6(5): call 0xffffb1aa(%rip)
6abb(4): add $0x18,%rsp
6abf(3): mov %rbx,%rax
6ac2(1): pop %rbx
6ac3(1): pop %rbp
6ac4(2): pop %r12
6ac6(2): pop %r13
6ac8(2): pop %r14
6aca(2): pop %r15
6acc(1): ret near (%rsp)
6acd(3): nop (%rax)
6ad0(3): mov %r13,%rsi
6ad3(3): mov %r14,%rdi
6ad6(9): mov $0x0,0x8(%rsp)
6adf(3): xor %r12d,%r12d
6ae2(3): xor %r15d,%r15d
6ae5(3): mov %r13,%rbx
6ae8(5): call 0xffffb3e8(%rip)
6aed(2): test %eax,%eax
6aef(2): jz 0xffffffa8(%rip)
6af1(3): mov %r13,%rsi
6af4(3): mov %r14,%rdi
6af7(5): call 0xfffff539(%rip)
6afc(2): test %al,%al
6afe(2): jnz 0x3a(%rip)
6b00(3): test %rbp,%rbp
6b03(2): jz 0x11(%rip)
6b05(3): mov %rbp,%rsi
6b08(3): mov %r14,%rdi
6b0b(5): call 0xfffff525(%rip)
6b10(2): test %al,%al
6b12(2): jnz 0x26(%rip)
6b14(6): cmp $0x0,0x8(%rsp)
6b1a(6): jz 0x176(%rip)
6b20(5): mov 0x8(%rsp),%rsi
6b25(3): mov %r14,%rdi
6b28(5): call 0xfffff508(%rip)
6b2d(2): test %al,%al
6b2f(6): jz 0x161(%rip)
6b35(3): nop (%rax)
6b38(3): test %r15,%r15
6b3b(6): jnz 0xf5(%rip)
6b41(3): test %r12,%r12
6b44(3): mov %r14,%rbx
6b47(6): jnz 0xffffff6c(%rip)
6b4d(5): jmp 0xffffff6e(%rip)
6b52(6): nop 0x0(%rax,%rax,1)
6b58(7): lea 0x151a1(%rip),%rsi
6b5f(3): mov %r12,%rdx
6b62(3): mov %rbp,%rdi
6b65(5): call 0x303b(%rip)
6b6a(3): mov %r12,%rdi
6b6d(3): mov %rax,%rbx
6b70(5): call 0xffffb230(%rip)
6b75(4): lea 0xb(%rax),%rdi
6b79(3): mov %rax,%r15
6b7c(5): call 0x2d44(%rip)
6b81(3): mov %r15,%rdx
6b84(3): mov %r12,%rsi
6b87(3): mov %rax,%rdi
6b8a(5): call 0xffffb356(%rip)
6b8f(3): mov %rax,%rcx
6b92(3): add %rax,%r15
6b95(a): mov $0x5499825612410597167,%rax
6b9f(3): mov %rax,(%r15)
6ba2(7): lea 0x15157(%rip),%rsi
6ba9(5): mov $0x5449,%eax
6bae(3): mov %rcx,%rdx
6bb1(3): mov %rbp,%rdi
6bb4(5): mov %ax,0x8(%r15)
6bb9(5): mov $0x0,0xa(%r15)
6bbe(5): mov %rcx,0x8(%rsp)
6bc3(5): call 0x2fdd(%rip)
6bc8(5): mov 0x8(%rsp),%rcx
6bcd(3): mov %rax,%r12
6bd0(3): mov %rcx,%rdi
6bd3(5): call 0xffffb08d(%rip)
6bd8(3): test %r12,%r12
6bdb(2): jz 0x1c(%rip)
6bdd(5): mov $0x3f,%esi
6be2(3): mov %r12,%rdi
6be5(5): call 0xffffb20b(%rip)
6bea(3): test %rax,%rax
6bed(2): jz 0x63(%rip)
6bef(3): mov %r12,%rdi
6bf2(5): call 0xffffb06e(%rip)
6bf7(3): test %rbx,%rbx
6bfa(2): jz 0x76(%rip)
6bfc(3): mov %r13,%rsi
6bff(3): mov %r14,%rdi
6c02(5): call 0xffffb2ce(%rip)
6c07(2): test %eax,%eax
6c09(6): jz 0xfffffeb2(%rip)
6c0f(3): mov %r13,%rsi
6c12(3): mov %r14,%rdi
6c15(5): call 0xfffff41b(%rip)
6c1a(2): test %al,%al
6c1c(6): jz 0xdc(%rip)
6c22(3): mov %rbx,%r15
6c25(3): xor %r12d,%r12d
6c28(8): nop 0x0(%rax,%rax,1)
6c30(3): mov %r15,%rdi
6c33(3): mov %r14,%rbx
6c36(5): call 0xffffb02a(%rip)
6c3b(3): test %r12,%r12
6c3e(6): jnz 0xfffffe75(%rip)
6c44(5): jmp 0xfffffe77(%rip)
6c49(7): nop 0x0(%rax)
6c50(3): test %rbx,%rbx
6c53(5): mov %r12,0x8(%rsp)
6c58(6): jz 0xb8(%rip)
6c5e(3): mov %rbx,%rbp
6c61(3): mov %rbx,%r15
6c64(5): jmp 0xfffffe24(%rip)
6c69(7): nop 0x0(%rax)
6c70(3): mov %r13,%rbx
6c73(9): mov $0x0,0x8(%rsp)
6c7c(2): xor %ebp,%ebp
6c7e(3): xor %r12d,%r12d
6c81(3): xor %r15d,%r15d
6c84(5): jmp 0xfffffe04(%rip)
6c89(7): nop 0x0(%rax)
6c90(3): mov %r14,%rdi
6c93(5): call 0xffffb10d(%rip)
6c98(3): mov %rbx,%rdi
6c9b(3): mov %rax,%rbp
6c9e(5): call 0xffffb102(%rip)
6ca3(5): lea 0x4(%rbp,%rax,1),%rdi
6ca8(5): call 0x2c18(%rip)
6cad(7): lea 0x15044(%rip),%rcx
6cb4(3): mov %rax,%rdi
6cb7(3): mov %rax,%rbp
6cba(3): mov %rbx,%r9
6cbd(2): xor %eax,%eax
6cbf(3): mov %r14,%r8
6cc2(7): mov $0xffffffff,%rdx
6cc9(5): mov $0x1,%esi
6cce(5): call 0xffffb432(%rip)
6cd3(3): test %r15,%r15
6cd6(2): jz 0xa(%rip)
6cd8(3): mov %r15,%rdi
6cdb(5): call 0xffffaf85(%rip)
6ce0(3): test %r12,%r12
6ce3(3): mov %rbp,%rbx
6ce6(6): jnz 0xfffffdcd(%rip)
6cec(5): jmp 0xfffffdcf(%rip)
6cf1(7): nop 0x0(%rax)
6cf8(3): mov %rbx,%rbp
6cfb(3): mov %rbx,%r15
6cfe(9): mov $0x0,0x8(%rsp)
6d07(3): xor %r12d,%r12d
6d0a(5): jmp 0xfffffdf6(%rip)
6d0f(1): nop 
6d10(2): xor %ebp,%ebp
6d12(3): xor %r15d,%r15d
6d15(3): mov %r12,%rbx
6d18(5): jmp 0xfffffd70(%rip)

"gettext_quote.part.1" :
6d20(1): push %rbp
6d21(1): push %rbx
6d22(3): mov %rdi,%rbp
6d25(2): mov %esi,%ebx
6d27(4): sub $0x8,%rsp
6d2b(5): call 0x11a55(%rip)
6d30(3): movzx (%rax),%edx
6d33(3): and $0xdf,%edx
6d36(3): cmp $0x55,%dl
6d39(2): jz 0x77(%rip)
6d3b(3): cmp $0x47,%dl
6d3e(2): jz 0x22(%rip)
6d40(7): lea 0x14b61(%rip),%rax
6d47(7): lea 0x14fa8(%rip),%rdx
6d4e(3): cmp $0x9,%ebx
6d51(4): cmovne %rdx,%rax
6d55(4): add $0x8,%rsp
6d59(1): pop %rbx
6d5a(1): pop %rbp
6d5b(1): ret near (%rsp)
6d5c(4): nop 0x0(%rax)
6d60(4): movzx 0x1(%rax),%edx
6d64(3): and $0xdf,%edx
6d67(3): cmp $0x42,%dl
6d6a(2): jnz 0xffffffd6(%rip)
6d6c(4): cmp $0x31,0x2(%rax)
6d70(2): jnz 0xffffffd0(%rip)
6d72(4): cmp $0x38,0x3(%rax)
6d76(2): jnz 0xffffffca(%rip)
6d78(4): cmp $0x30,0x4(%rax)
6d7c(2): jnz 0xffffffc4(%rip)
6d7e(4): cmp $0x33,0x5(%rax)
6d82(2): jnz 0xffffffbe(%rip)
6d84(4): cmp $0x30,0x6(%rax)
6d88(2): jnz 0xffffffb8(%rip)
6d8a(4): cmp $0x0,0x7(%rax)
6d8e(2): jnz 0xffffffb2(%rip)
6d90(4): cmp $0x60,0x0(%rbp)
6d94(7): lea 0x14f90(%rip),%rax
6d9b(7): lea 0x14f8d(%rip),%rdx
6da2(4): cmovne %rdx,%rax
6da6(4): add $0x8,%rsp
6daa(1): pop %rbx
6dab(1): pop %rbp
6dac(1): ret near (%rsp)
6dad(3): nop (%rax)
6db0(4): movzx 0x1(%rax),%edx
6db4(3): and $0xdf,%edx
6db7(3): cmp $0x54,%dl
6dba(2): jnz 0xffffff86(%rip)
6dbc(4): movzx 0x2(%rax),%edx
6dc0(3): and $0xdf,%edx
6dc3(3): cmp $0x46,%dl
6dc6(6): jnz 0xffffff7a(%rip)
6dcc(4): cmp $0x2d,0x3(%rax)
6dd0(6): jnz 0xffffff70(%rip)
6dd6(4): cmp $0x38,0x4(%rax)
6dda(6): jnz 0xffffff66(%rip)
6de0(4): cmp $0x0,0x5(%rax)
6de4(6): jnz 0xffffff5c(%rip)
6dea(4): cmp $0x60,0x0(%rbp)
6dee(7): lea 0x14f2e(%rip),%rax
6df5(7): lea 0x14f2b(%rip),%rdx
6dfc(4): cmovne %rdx,%rax
6e00(4): add $0x8,%rsp
6e04(1): pop %rbx
6e05(1): pop %rbp
6e06(1): ret near (%rsp)

"quotearg_buffer_restyled" :
6e10(2): push %r15
6e12(2): push %r14
6e14(3): mov %r8d,%r15d
6e17(2): push %r13
6e19(2): push %r12
6e1b(3): mov %rdi,%r14
6e1e(1): push %rbp
6e1f(1): push %rbx
6e20(3): mov %r9d,%ebx
6e23(3): mov %rsi,%r13
6e26(3): mov %rcx,%rbp
6e29(3): and $0x2,%ebx
6e2c(7): sub $0xb8,%rsp
6e33(8): mov 0xf0(%rsp),%rax
6e3b(5): mov %rdx,0x10(%rsp)
6e40(5): mov %r8d,0x8(%rsp)
6e45(5): mov %r9d,0x78(%rsp)
6e4a(5): mov %rax,0x20(%rsp)
6e4f(8): mov 0xf8(%rsp),%rax
6e57(5): mov %rax,0x68(%rsp)
6e5c(8): mov 0x100(%rsp),%rax
6e64(5): mov %rax,0x60(%rsp)
6e69(9): mov $0x28,%rax
6e72(8): mov %rax,0xa8(%rsp)
6e7a(2): xor %eax,%eax
6e7c(5): call 0xffffaf14(%rip)
6e81(4): cmp $0xa,%r15d
6e85(5): mov %rax,0x58(%rsp)
6e8a(6): jnbe 0x11b5(%rip)
6e90(7): lea 0x14ee9(%rip),%rcx
6e97(3): mov %r15d,%edx
6e9a(4): movsxd 0x0(%rcx,%rdx,4),%rax
6e9e(3): add %rcx,%rax
6ea1(2): jmp %rax
6ea3(5): mov $0x1,0xe(%rsp)
6ea8(5): mov $0x0,0x7c(%rsp)
6ead(3): xor %r12d,%r12d
6eb0(9): mov $0x0,0x50(%rsp)
6eb9(5): mov $0x1,0xf(%rsp)
6ebe(5): mov $0x0,0xd(%rsp)
6ec3(7): lea 0x14e2c(%rip),%rax
6eca(9): mov $0x1,0x18(%rsp)
6ed3(3): xor %r15d,%r15d
6ed6(8): mov $0x2,0x8(%rsp)
6ede(5): mov %rax,0x48(%rsp)
6ee3(3): xor %r11d,%r11d
6ee6(3): mov %rbp,%rax
6ee9(3): mov %r12d,%r8d
6eec(3): mov %r11,%rbp
6eef(3): mov %rax,%r11
6ef2(6): nop 0x0(%rax,%rax,1)
6ef8(3): cmp %rbp,%r11
6efb(4): setnz %r12b
6eff(4): cmp $0xffffffff,%r11
6f03(2): jnz 0xf(%rip)
6f05(5): mov 0x10(%rsp),%rax
6f0a(4): cmp $0x0,0x0(%rax,%rbp,1)
6f0e(4): setnz %r12b
6f12(3): test %r12b,%r12b
6f15(6): jz 0x65b(%rip)
6f1b(5): cmp $0x2,0x8(%rsp)
6f20(5): mov 0x10(%rsp),%rdi
6f25(4): lea 0x0(%rdi,%rbp,1),%r9
6f29(3): setnz %al
6f2c(4): and 0xd(%rsp),%al
6f30(3): mov %eax,%r10d
6f33(6): jz 0xad(%rip)
6f39(5): mov 0x18(%rsp),%rax
6f3e(3): test %rax,%rax
6f41(6): jz 0x42f(%rip)
6f47(4): cmp $0xffffffff,%r11
6f4b(5): lea 0x0(%rbp,%rax,1),%rbx
6f50(2): jnz 0x30(%rip)
6f52(4): cmp $0x1,%rax
6f56(2): jbe 0x2a(%rip)
6f58(5): mov %r8b,0x38(%rsp)
6f5d(5): mov %r10b,0x30(%rsp)
6f62(5): mov %r9,0x28(%rsp)
6f67(5): call 0xffffae39(%rip)
6f6c(6): movzx 0x38(%rsp),%r8d
6f72(6): movzx 0x30(%rsp),%r10d
6f78(3): mov %rax,%r11
6f7b(5): mov 0x28(%rsp),%r9
6f80(3): cmp %r11,%rbx
6f83(5): mov %r10b,0x28(%rsp)
6f88(6): jnbe 0x5b8(%rip)
6f8e(5): mov 0x18(%rsp),%rdx
6f93(5): mov 0x48(%rsp),%rsi
6f98(3): mov %r9,%rdi
6f9b(5): mov %r11,0x40(%rsp)
6fa0(5): mov %r8b,0x38(%rsp)
6fa5(5): mov %r9,0x30(%rsp)
6faa(5): call 0xffffaee6(%rip)
6faf(2): test %eax,%eax
6fb1(5): mov 0x30(%rsp),%r9
6fb6(6): movzx 0x38(%rsp),%r8d
6fbc(5): mov 0x40(%rsp),%r11
6fc1(6): jnz 0x57f(%rip)
6fc7(5): cmp $0x0,0xf(%rsp)
6fcc(6): movzx 0x28(%rsp),%r10d
6fd2(6): jnz 0xf83(%rip)
6fd8(8): nop 0x0(%rax,%rax,1)
6fe0(4): movzx (%r9),%ebx
6fe4(3): cmp $0x7e,%bl
6fe7(6): jnbe 0x321(%rip)
6fed(7): lea 0x14db8(%rip),%rcx
6ff4(3): movzx %bl,%edx
6ff7(4): movsxd 0x0(%rcx,%rdx,4),%rax
6ffb(3): add %rcx,%rax
6ffe(2): jmp %rax
7000(3): xor %r10d,%r10d
7003(4): cmp $0x1,%r11
7007(3): setnz %al
700a(4): cmp $0xffffffff,%r11
700e(2): jnz 0xe(%rip)
7010(5): mov 0x10(%rsp),%rax
7015(4): cmp $0x0,0x1(%rax)
7019(3): setnz %al
701c(5): cmp $0x2,0x8(%rsp)
7021(3): setz %dl
7024(2): test %al,%al
7026(6): jz 0x252(%rip)
702c(3): xor %r12d,%r12d
702f(2): xor %eax,%eax
7031(7): nop 0x0(%rax)
7038(5): cmp $0x1,0xd(%rsp)
703d(6): jnz 0x115(%rip)
7043(2): test %dl,%dl
7045(6): jnz 0x10d(%rip)
704b(5): mov 0x20(%rsp),%rsi
7050(3): test %rsi,%rsi
7053(2): jz 0x16(%rip)
7055(2): mov %ebx,%edx
7057(3): shr $0x5,%dl
705a(3): movzx %dl,%edx
705d(3): mov 0x0(%rsi,%rdx,4),%edx
7060(3): bt %ebx,%edx
7063(6): jb 0x150(%rip)
7069(3): test %r10b,%r10b
706c(6): jnz 0x147(%rip)
7072(3): xor $0x1,%eax
7075(4): add $0x1,%rbp
7079(3): and %r8d,%eax
707c(2): test %al,%al
707e(2): jz 0x22(%rip)
7080(3): cmp %r15,%r13
7083(2): jbe 0x7(%rip)
7085(5): mov $0x27,0x0(%r14,%r15,1)
708a(4): lea 0x1(%r15),%rax
708e(3): cmp %rax,%r13
7091(2): jbe 0x8(%rip)
7093(6): mov $0x27,0x1(%r14,%r15,1)
7099(4): add $0x2,%r15
709d(3): xor %r8d,%r8d
70a0(3): cmp %r13,%r15
70a3(2): jnb 0x6(%rip)
70a5(4): mov %bl,0x0(%r14,%r15,1)
70a9(5): movzx 0xe(%rsp),%edi
70ae(4): add $0x1,%r15
70b2(5): mov $0x0,%eax
70b7(3): test %r12b,%r12b
70ba(3): cmove %eax,%edi
70bd(5): mov %dil,0xe(%rsp)
70c2(5): jmp 0xfffffe36(%rip)
70c7(9): nop 0x0(%rax,%rax,1)
70d0(3): xor %r10d,%r10d
70d3(4): mov 0x8(%rsp),%eax
70d7(3): cmp $0x2,%eax
70da(6): jz 0x5be(%rip)
70e0(3): cmp $0x5,%eax
70e3(6): jz 0x575(%rip)
70e9(3): cmp $0x2,%eax
70ec(5): mov $0x3f,%ebx
70f1(3): setz %dl
70f4(3): xor %r12d,%r12d
70f7(2): xor %eax,%eax
70f9(5): jmp 0xffffff3f(%rip)
70fe(2): nop 
7100(3): xor %r10d,%r10d
7103(5): cmp $0x2,0x8(%rsp)
7108(6): jz 0x508(%rip)
710e(5): mov %r12b,0x7c(%rsp)
7113(2): xor %edx,%edx
7115(2): xor %eax,%eax
7117(5): mov $0x27,%ebx
711c(5): jmp 0xffffff1c(%rip)
7121(7): nop 0x0(%rax)
7128(5): mov $0x9,%edx
712d(5): mov $0x74,%ebx
7132(5): cmp $0x2,0x8(%rsp)
7137(3): setz %al
713a(4): and 0xf(%rsp),%al
713e(6): jnz 0x150(%rip)
7144(5): cmp $0x0,0xd(%rsp)
7149(2): jnz 0x67(%rip)
714b(2): mov %edx,%ebx
714d(3): xor %r12d,%r12d
7150(2): xor %eax,%eax
7152(5): cmp $0x0,0xf(%rsp)
7157(6): jnz 0xfffffef4(%rip)
715d(5): jmp 0xffffff0c(%rip)
7162(6): nop 0x0(%rax,%rax,1)
7168(5): mov $0x8,%edx
716d(5): mov $0x62,%ebx
7172(2): jmp 0xffffffd2(%rip)
7174(4): nop 0x0(%rax)
7178(5): cmp $0x2,0x8(%rsp)
717d(6): jz 0x3d3(%rip)
7183(5): cmp $0x0,0xd(%rsp)
7188(6): jz 0x218(%rip)
718e(5): cmp $0x0,0xf(%rsp)
7193(6): jz 0x20d(%rip)
7199(6): cmp $0x0,0x18(%rsp)
719f(6): jnz 0x3bc(%rip)
71a5(5): mov $0x5c,%ebx
71aa(6): nop 0x0(%rax,%rax,1)
71b0(3): xor %r12d,%r12d
71b3(5): cmp $0x2,0x8(%rsp)
71b8(3): setz %dl
71bb(5): cmp $0x0,0xf(%rsp)
71c0(2): mov %edx,%eax
71c2(6): jnz 0x856(%rip)
71c8(3): mov %r8d,%eax
71cb(3): xor $0x1,%eax
71ce(2): and %dl,%al
71d0(2): jz 0x31(%rip)
71d2(3): cmp %r15,%r13
71d5(2): jbe 0x7(%rip)
71d7(5): mov $0x27,0x0(%r14,%r15,1)
71dc(4): lea 0x1(%r15),%rdx
71e0(3): cmp %rdx,%r13
71e3(2): jbe 0x8(%rip)
71e5(6): mov $0x24,0x1(%r14,%r15,1)
71eb(4): lea 0x2(%r15),%rdx
71ef(3): cmp %rdx,%r13
71f2(2): jbe 0x8(%rip)
71f4(6): mov $0x27,0x2(%r14,%r15,1)
71fa(4): add $0x3,%r15
71fe(3): mov %eax,%r8d
7201(3): cmp %r15,%r13
7204(2): jbe 0x7(%rip)
7206(5): mov $0x5c,0x0(%r14,%r15,1)
720b(4): add $0x1,%r15
720f(4): add $0x1,%rbp
7213(5): jmp 0xfffffe8d(%rip)
7218(8): nop 0x0(%rax,%rax,1)
7220(5): cmp $0x0,0xd(%rsp)
7225(6): jnz 0x1ce(%rip)
722b(2): xor %edx,%edx
722d(5): test $0x1,0x78(%rsp)
7232(6): jz 0xffffff19(%rip)
7238(4): add $0x1,%rbp
723c(5): jmp 0xfffffcbc(%rip)
7241(7): nop 0x0(%rax)
7248(5): cmp $0x2,0x8(%rsp)
724d(3): setz %dl
7250(2): xor %eax,%eax
7252(5): jmp 0xfffffde6(%rip)
7257(9): nop 0x0(%rax,%rax,1)
7260(5): mov $0x7,%edx
7265(5): mov $0x61,%ebx
726a(5): jmp 0xfffffeda(%rip)
726f(1): nop 
7270(5): cmp $0x2,0x8(%rsp)
7275(3): setz %dl
7278(3): test %rbp,%rbp
727b(6): jnz 0xfffffdb1(%rip)
7281(5): movzx 0xf(%rsp),%eax
7286(2): and %dl,%al
7288(6): jz 0xfffffdb0(%rip)
728e(3): mov %r11,%rbp
7291(8): mov $0x2,0x8(%rsp)
7299(5): jmp 0x700(%rip)
729e(2): nop 
72a0(5): cmp $0x2,0x8(%rsp)
72a5(3): setz %dl
72a8(3): xor %r12d,%r12d
72ab(2): jmp 0xffffffd6(%rip)
72ad(3): nop (%rax)
72b0(5): cmp $0x2,0x8(%rsp)
72b5(5): mov $0x20,%ebx
72ba(3): setz %dl
72bd(2): jmp 0xffffffc4(%rip)
72bf(1): nop 
72c0(5): mov $0xd,%edx
72c5(5): mov $0x72,%ebx
72ca(5): jmp 0xfffffe68(%rip)
72cf(1): nop 
72d0(5): mov $0xc,%edx
72d5(5): mov $0x66,%ebx
72da(5): jmp 0xfffffe6a(%rip)
72df(1): nop 
72e0(5): mov $0xb,%edx
72e5(5): mov $0x76,%ebx
72ea(5): jmp 0xfffffe5a(%rip)
72ef(1): nop 
72f0(5): mov $0xa,%edx
72f5(5): mov $0x6e,%ebx
72fa(5): jmp 0xfffffe38(%rip)
72ff(1): nop 
7300(3): xor %r10d,%r10d
7303(5): nop 0x0(%rax,%rax,1)
7308(6): cmp $0x1,0x58(%rsp)
730e(6): jnz 0x3aa(%rip)
7314(5): mov %r11,0x38(%rsp)
7319(5): mov %r8b,0x30(%rsp)
731e(5): mov %r10b,0x28(%rsp)
7323(5): call 0xffffadbd(%rip)
7328(3): mov (%rax),%rcx
732b(3): movzx %bl,%edx
732e(6): movzx 0x28(%rsp),%r10d
7334(6): movzx 0x30(%rsp),%r8d
733a(5): mov 0x38(%rsp),%r11
733f(5): mov $0x1,%edi
7344(4): movzx 0x0(%rcx,%rdx,2),%eax
7348(4): and $0x4000,%ax
734c(4): setnz %r12b
7350(3): setz %al
7353(4): and 0xd(%rsp),%al
7357(2): test %al,%al
7359(6): jnz 0x998(%rip)
735f(5): cmp $0x2,0x8(%rsp)
7364(3): setz %dl
7367(5): jmp 0xfffffcd1(%rip)
736c(4): nop 0x0(%rax)
7370(4): movzx (%r9),%ebx
7374(3): cmp $0x7e,%bl
7377(2): jnbe 0xffffff89(%rip)
7379(7): lea 0x14c28(%rip),%rcx
7380(3): movzx %bl,%edx
7383(4): movsxd 0x0(%rcx,%rdx,4),%rax
7387(3): add %rcx,%rax
738a(2): jmp %rax
738c(4): nop 0x0(%rax)
7390(3): xor %r10d,%r10d
7393(5): cmp $0x0,0xd(%rsp)
7398(6): jnz 0xfffffdf6(%rip)
739e(2): nop 
73a0(5): mov $0x5c,%edx
73a5(5): mov $0x5c,%ebx
73aa(5): jmp 0xfffffd9a(%rip)
73af(1): nop 
73b0(5): mov $0xc,%edx
73b5(3): xor %r10d,%r10d
73b8(5): mov $0x66,%ebx
73bd(5): jmp 0xfffffd87(%rip)
73c2(6): nop 0x0(%rax,%rax,1)
73c8(5): mov $0xa,%edx
73cd(3): xor %r10d,%r10d
73d0(5): mov $0x6e,%ebx
73d5(5): jmp 0xfffffd5d(%rip)
73da(6): nop 0x0(%rax,%rax,1)
73e0(5): mov $0x61,%ebx
73e5(5): jmp 0xfffffdcb(%rip)
73ea(6): nop 0x0(%rax,%rax,1)
73f0(3): xor %r10d,%r10d
73f3(5): cmp $0x2,0x8(%rsp)
73f8(3): setz %dl
73fb(5): cmp $0x0,0xf(%rsp)
7400(6): jnz 0xb9a(%rip)
7406(3): mov %r8d,%eax
7409(3): mov %r15,%rcx
740c(3): xor $0x1,%eax
740f(2): and %dl,%al
7411(2): jz 0x2f(%rip)
7413(3): cmp %r15,%r13
7416(2): jbe 0x7(%rip)
7418(5): mov $0x27,0x0(%r14,%r15,1)
741d(4): lea 0x1(%r15),%rcx
7421(3): cmp %rcx,%r13
7424(2): jbe 0x8(%rip)
7426(6): mov $0x24,0x1(%r14,%r15,1)
742c(4): lea 0x2(%r15),%rcx
7430(3): cmp %rcx,%r13
7433(6): jnbe 0x636(%rip)
7439(4): lea 0x3(%r15),%rcx
743d(3): mov %eax,%r8d
7440(3): cmp %rcx,%r13
7443(2): jbe 0x7(%rip)
7445(5): mov $0x5c,0x0(%r14,%rcx,1)
744a(5): cmp $0x2,0x8(%rsp)
744f(4): lea 0x1(%rcx),%r15
7453(6): jz 0x606(%rip)
7459(4): lea 0x1(%rbp),%rax
745d(3): cmp %r11,%rax
7460(2): jnb 0x1b(%rip)
7462(5): mov 0x10(%rsp),%rax
7467(5): movzx 0x1(%rax,%rbp,1),%eax
746c(4): mov %al,0x28(%rsp)
7470(3): sub $0x30,%eax
7473(2): cmp $0x9,%al
7475(6): jbe 0x834(%rip)
747b(3): mov %r12d,%eax
747e(5): mov $0x30,%ebx
7483(3): xor %r12d,%r12d
7486(5): jmp 0xfffffbb2(%rip)
748b(5): nop 0x0(%rax,%rax,1)
7490(5): cmp $0x2,0x8(%rsp)
7495(3): mov %r10d,%r12d
7498(3): setz %dl
749b(3): xor %r10d,%r10d
749e(2): xor %eax,%eax
74a0(5): jmp 0xfffffb98(%rip)
74a5(3): nop (%rax)
74a8(5): cmp $0x2,0x8(%rsp)
74ad(3): setz %dl
74b0(3): xor %r10d,%r10d
74b3(5): jmp 0xfffffdc5(%rip)
74b8(8): nop 0x0(%rax,%rax,1)
74c0(5): cmp $0x2,0x8(%rsp)
74c5(3): setz %dl
74c8(3): xor %r10d,%r10d
74cb(3): xor %r12d,%r12d
74ce(5): jmp 0xfffffdb3(%rip)
74d3(5): nop 0x0(%rax,%rax,1)
74d8(5): cmp $0x2,0x8(%rsp)
74dd(3): mov %r10d,%r12d
74e0(5): mov $0x20,%ebx
74e5(3): setz %dl
74e8(3): xor %r10d,%r10d
74eb(5): jmp 0xfffffd96(%rip)
74f0(5): mov $0xd,%edx
74f5(3): xor %r10d,%r10d
74f8(5): mov $0x72,%ebx
74fd(5): jmp 0xfffffc35(%rip)
7502(6): nop 0x0(%rax,%rax,1)
7508(5): mov $0x76,%ebx
750d(5): jmp 0xfffffca3(%rip)
7512(6): nop 0x0(%rax,%rax,1)
7518(5): mov $0x9,%edx
751d(3): xor %r10d,%r10d
7520(5): mov $0x74,%ebx
7525(5): jmp 0xfffffc0d(%rip)
752a(6): nop 0x0(%rax,%rax,1)
7530(5): mov $0x62,%ebx
7535(5): jmp 0xfffffc7b(%rip)
753a(6): nop 0x0(%rax,%rax,1)
7540(3): xor %r10d,%r10d
7543(5): jmp 0xfffffa9d(%rip)
7548(8): nop 0x0(%rax,%rax,1)
7550(5): cmp $0x0,0xf(%rsp)
7555(6): jnz 0x96b(%rip)
755b(4): add $0x1,%rbp
755f(3): mov %r8d,%eax
7562(3): xor %r12d,%r12d
7565(5): mov $0x5c,%ebx
756a(5): jmp 0xfffffb12(%rip)
756f(1): nop 
7570(5): cmp $0x2,0x8(%rsp)
7575(5): movzx 0xf(%rsp),%ebx
757a(3): mov %r8d,%r12d
757d(3): mov %r11,%rbp
7580(3): setz %dl
7583(2): mov %ebx,%eax
7585(3): test %r15,%r15
7588(3): setz %cl
758b(2): and %edx,%eax
758d(2): and %cl,%al
758f(6): jnz 0xa67(%rip)
7595(2): mov %ebx,%eax
7597(3): xor $0x1,%eax
759a(2): and %al,%dl
759c(6): jz 0x970(%rip)
75a2(5): cmp $0x0,0x7c(%rsp)
75a7(6): jz 0x963(%rip)
75ad(5): cmp $0x0,0xe(%rsp)
75b2(6): jnz 0x9fb(%rip)
75b8(3): test %r13,%r13
75bb(3): setz %al
75be(6): cmp $0x0,0x50(%rsp)
75c4(3): setnz %dl
75c7(2): and %dl,%al
75c9(6): jz 0xa23(%rip)
75cf(5): mov 0x50(%rsp),%r13
75d4(7): lea 0x1471b(%rip),%rbx
75db(4): mov $0x27,(%r14)
75df(8): mov $0x2,0x8(%rsp)
75e7(6): mov $0x1,%r15d
75ed(9): mov $0x1,0x18(%rsp)
75f6(5): mov $0x0,0xf(%rsp)
75fb(5): mov %rbx,0x48(%rsp)
7600(4): mov %al,0x7c(%rsp)
7604(5): jmp 0xfffff8df(%rip)
7609(7): nop 0x0(%rax)
7610(5): cmp $0x0,0xf(%rsp)
7615(6): jnz 0x8ab(%rip)
761b(3): test %r13,%r13
761e(6): jz 0x402(%rip)
7624(2): xor %edx,%edx
7626(6): cmp $0x0,0x50(%rsp)
762c(6): jnz 0x3f4(%rip)
7632(5): mov %r13,0x50(%rsp)
7637(4): add $0x3,%r15
763b(2): xor %eax,%eax
763d(5): mov %r12b,0x7c(%rsp)
7642(3): xor %r8d,%r8d
7645(3): mov %rdx,%r13
7648(5): mov $0x27,%ebx
764d(5): jmp 0xfffffa1c(%rip)
7652(6): nop 0x0(%rax,%rax,1)
7658(5): test $0x4,0x78(%rsp)
765d(2): jz 0x23(%rip)
765f(4): lea 0x2(%rbp),%rcx
7663(3): cmp %r11,%rcx
7666(2): jnb 0x1a(%rip)
7668(5): mov 0x10(%rsp),%rax
766d(5): cmp $0x3f,0x1(%rax,%rbp,1)
7672(6): jz 0x790(%rip)
7678(8): nop 0x0(%rax,%rax,1)
7680(2): xor %edx,%edx
7682(3): xor %r12d,%r12d
7685(2): xor %eax,%eax
7687(5): mov $0x3f,%ebx
768c(5): jmp 0xfffff9ac(%rip)
7691(7): nop 0x0(%rax)
7698(5): cmp $0x0,0xf(%rsp)
769d(6): jnz 0x823(%rip)
76a3(3): xor %r12d,%r12d
76a6(2): xor %eax,%eax
76a8(5): mov $0x3f,%ebx
76ad(5): jmp 0xfffff9bc(%rip)
76b2(6): nop 0x0(%rax,%rax,1)
76b8(8): lea 0xa0(%rsp),%rax
76c0(4): cmp $0xffffffff,%r11
76c4(c): mov $0x0,0xa0(%rsp)
76d0(5): mov %rax,0x28(%rsp)
76d5(2): jnz 0x2f(%rip)
76d7(5): mov 0x10(%rsp),%rdi
76dc(5): mov %r8b,0x40(%rsp)
76e1(5): mov %r10b,0x38(%rsp)
76e6(5): mov %r9,0x30(%rsp)
76eb(5): call 0xffffa6b5(%rip)
76f0(6): movzx 0x40(%rsp),%r8d
76f6(6): movzx 0x38(%rsp),%r10d
76fc(3): mov %rax,%r11
76ff(5): mov 0x30(%rsp),%r9
7704(8): lea 0x9c(%rsp),%rax
770c(2): xor %ecx,%ecx
770e(4): mov %bl,0x7e(%rsp)
7712(5): mov %r8b,0x7d(%rsp)
7717(3): mov %rcx,%rbx
771a(8): mov %r9,0x88(%rsp)
7722(5): mov %rax,0x38(%rsp)
7727(5): mov %r10b,0x7f(%rsp)
772c(8): mov %r15,0x80(%rsp)
7734(5): mov %r14,0x40(%rsp)
7739(5): mov %r13,0x70(%rsp)
773e(5): mov %r11,0x30(%rsp)
7743(5): mov 0x10(%rsp),%rax
7748(5): lea 0x0(%rbp,%rbx,1),%r14
774d(5): mov 0x30(%rsp),%rdx
7752(5): mov 0x28(%rsp),%rcx
7757(5): mov 0x38(%rsp),%rdi
775c(4): lea 0x0(%rax,%r14,1),%r13
7760(3): sub %r14,%rdx
7763(3): mov %r13,%rsi
7766(5): call 0x2c4a(%rip)
776b(3): test %rax,%rax
776e(3): mov %rax,%r15
7771(2): jz 0x50(%rip)
7773(4): cmp $0xffffffff,%rax
7777(6): jz 0x61e(%rip)
777d(4): cmp $0xfffffffe,%rax
7781(6): jz 0x5a0(%rip)
7787(5): cmp $0x2,0x8(%rsp)
778c(3): setz %al
778f(4): and 0xf(%rsp),%al
7793(6): jnz 0x19d(%rip)
7799(7): mov 0x9c(%rsp),%edi
77a0(5): call 0xffffa920(%rip)
77a5(5): mov 0x28(%rsp),%rdi
77aa(2): test %eax,%eax
77ac(5): mov $0x0,%eax
77b1(4): cmove %eax,%r12d
77b5(3): add %r15,%rbx
77b8(5): call 0xffffa8f8(%rip)
77bd(2): test %eax,%eax
77bf(2): jz 0xffffff84(%rip)
77c1(3): mov %r12d,%edx
77c4(3): mov %rbx,%rdi
77c7(6): movzx 0x7d(%rsp),%r8d
77cd(3): xor $0x1,%edx
77d0(5): movzx 0x7e(%rsp),%ebx
77d5(6): movzx 0x7f(%rsp),%r10d
77db(4): and 0xd(%rsp),%dl
77df(8): mov 0x80(%rsp),%r15
77e7(5): mov 0x40(%rsp),%r14
77ec(5): mov 0x70(%rsp),%r13
77f1(5): mov 0x30(%rsp),%r11
77f6(4): cmp $0x1,%rdi
77fa(6): jbe 0x601(%rip)
7800(3): mov %rdi,%rcx
7803(2): xor %esi,%esi
7805(6): movzx 0xf(%rsp),%r9d
780b(3): add %rbp,%rcx
780e(5): mov 0x10(%rsp),%rdi
7813(5): jmp 0xbb(%rip)
7818(8): nop 0x0(%rax,%rax,1)
7820(5): cmp $0x2,0x8(%rsp)
7825(3): setz %al
7828(3): test %r9b,%r9b
782b(6): jnz 0x4b5(%rip)
7831(3): mov %r8d,%esi
7834(3): xor $0x1,%esi
7837(3): and %sil,%al
783a(2): jz 0x31(%rip)
783c(3): cmp %r15,%r13
783f(2): jbe 0x7(%rip)
7841(5): mov $0x27,0x0(%r14,%r15,1)
7846(4): lea 0x1(%r15),%rsi
784a(3): cmp %rsi,%r13
784d(2): jbe 0x8(%rip)
784f(6): mov $0x24,0x1(%r14,%r15,1)
7855(4): lea 0x2(%r15),%rsi
7859(3): cmp %rsi,%r13
785c(2): jbe 0x8(%rip)
785e(6): mov $0x27,0x2(%r14,%r15,1)
7864(4): add $0x3,%r15
7868(3): mov %eax,%r8d
786b(3): cmp %r15,%r13
786e(2): jbe 0x7(%rip)
7870(5): mov $0x5c,0x0(%r14,%r15,1)
7875(4): lea 0x1(%r15),%rax
7879(3): cmp %rax,%r13
787c(2): jbe 0xf(%rip)
787e(2): mov %ebx,%eax
7880(3): shr $0x6,%al
7883(3): add $0x30,%eax
7886(5): mov %al,0x1(%r14,%r15,1)
788b(4): lea 0x2(%r15),%rax
788f(3): cmp %rax,%r13
7892(2): jbe 0x12(%rip)
7894(2): mov %ebx,%eax
7896(3): shr $0x3,%al
7899(3): and $0x7,%eax
789c(3): add $0x30,%eax
789f(5): mov %al,0x2(%r14,%r15,1)
78a4(3): and $0x7,%ebx
78a7(4): add $0x1,%rbp
78ab(4): add $0x3,%r15
78af(3): add $0x30,%ebx
78b2(3): cmp %rcx,%rbp
78b5(6): jnb 0xfffff7eb(%rip)
78bb(2): mov %edx,%esi
78bd(3): cmp %r15,%r13
78c0(2): jbe 0x6(%rip)
78c2(4): mov %bl,0x0(%r14,%r15,1)
78c6(4): movzx 0x0(%rdi,%rbp,1),%ebx
78ca(4): add $0x1,%r15
78ce(2): test %dl,%dl
78d0(6): jnz 0xffffff50(%rip)
78d6(2): mov %esi,%eax
78d8(3): xor $0x1,%eax
78db(3): and %r8d,%eax
78de(3): test %r10b,%r10b
78e1(2): jz 0x10(%rip)
78e3(3): cmp %r15,%r13
78e6(2): jbe 0x7(%rip)
78e8(5): mov $0x5c,0x0(%r14,%r15,1)
78ed(4): add $0x1,%r15
78f1(4): add $0x1,%rbp
78f5(3): cmp %rcx,%rbp
78f8(6): jnb 0xfffff784(%rip)
78fe(2): test %al,%al
7900(6): jz 0x3fe(%rip)
7906(3): cmp %r15,%r13
7909(2): jbe 0x7(%rip)
790b(5): mov $0x27,0x0(%r14,%r15,1)
7910(4): lea 0x1(%r15),%rax
7914(3): cmp %rax,%r13
7917(2): jbe 0x8(%rip)
7919(6): mov $0x27,0x1(%r14,%r15,1)
791f(4): add $0x2,%r15
7923(3): xor %r10d,%r10d
7926(3): xor %r8d,%r8d
7929(2): jmp 0xffffff94(%rip)
792b(5): nop 0x0(%rax,%rax,1)
7930(4): cmp $0x1,%r15
7934(6): jz 0xfffffe65(%rip)
793a(5): mov 0x10(%rsp),%rdi
793f(4): lea 0x0(%rdi,%r15,1),%rcx
7943(5): lea 0x1(%rdi,%r14,1),%rdx
7948(4): lea 0x0(%rcx,%r14,1),%r8
794c(2): jmp 0x11(%rip)
794e(2): nop 
7950(4): add $0x1,%rdx
7954(3): cmp %rdx,%r8
7957(6): jz 0xfffffe42(%rip)
795d(3): movzx (%rdx),%ecx
7960(3): sub $0x5b,%ecx
7963(3): cmp $0x21,%cl
7966(2): jnbe 0xffffffea(%rip)
7968(5): mov $0x1,%esi
796d(3): shl/sal %cl,%rsi
7970(3): mov %rsi,%rcx
7973(a): mov $0x8589934635,%rsi
797d(3): test %rsi,%rcx
7980(2): jz 0xffffffd0(%rip)
7982(5): mov 0x40(%rsp),%r14
7987(5): mov 0x70(%rsp),%r13
798c(5): mov 0x30(%rsp),%rbp
7991(8): mov $0x2,0x8(%rsp)
7999(5): cmp $0x0,0xd(%rsp)
799e(2): jz 0x12(%rip)
79a0(2): test %al,%al
79a2(5): mov $0x4,%eax
79a7(5): cmove 0x8(%rsp),%eax
79ac(4): mov %eax,0x8(%rsp)
79b0(4): sub $0x8,%rsp
79b4(3): mov %rbp,%rcx
79b7(3): mov %r13,%rsi
79ba(4): push 0x68(%rsp)
79be(4): push 0x78(%rsp)
79c2(3): mov %r14,%rdi
79c5(2): push $0x0
79c7(8): mov 0x98(%rsp),%r9d
79cf(5): mov 0x28(%rsp),%r8d
79d4(5): mov 0x30(%rsp),%rdx
79d9(4): and $0xfd,%r9d
79dd(5): call 0xfffff433(%rip)
79e2(4): add $0x20,%rsp
79e6(3): mov %rax,%r15
79e9(8): mov 0xa8(%rsp),%rbx
79f1(9): xor $0x28,%rbx
79fa(3): mov %r15,%rax
79fd(6): jnz 0x606(%rip)
7a03(7): add $0xb8,%rsp
7a0a(1): pop %rbx
7a0b(1): pop %rbp
7a0c(2): pop %r12
7a0e(2): pop %r13
7a10(2): pop %r14
7a12(2): pop %r15
7a14(1): ret near (%rsp)
7a15(3): nop (%rax)
7a18(3): mov %r11,%rbp
7a1b(5): jmp 0xffffff7e(%rip)
7a20(3): cmp %r15,%r13
7a23(2): jbe 0x7(%rip)
7a25(5): mov $0x27,0x0(%r14,%r15,1)
7a2a(4): lea 0x1(%r15),%rax
7a2e(3): cmp %rax,%r13
7a31(2): jbe 0x8(%rip)
7a33(6): mov $0x5c,0x1(%r14,%r15,1)
7a39(4): lea 0x2(%r15),%rax
7a3d(3): cmp %rax,%r13
7a40(6): jbe 0x5f2(%rip)
7a46(3): mov %r13,%rdx
7a49(6): mov $0x27,0x2(%r14,%r15,1)
7a4f(5): mov 0x50(%rsp),%r13
7a54(5): jmp 0xfffffbde(%rip)
7a59(3): mov %r12d,%eax
7a5c(5): mov $0x30,%ebx
7a61(3): xor %r12d,%r12d
7a64(5): jmp 0xfffff605(%rip)
7a69(6): mov $0x27,0x2(%r14,%r15,1)
7a6f(5): jmp 0xfffff9ca(%rip)
7a74(2): test %ebx,%ebx
7a76(6): jnz 0xfffff42d(%rip)
7a7c(5): mov $0x1,0xd(%rsp)
7a81(3): test %r13,%r13
7a84(6): jnz 0x596(%rip)
7a8a(7): lea 0x14265(%rip),%rax
7a91(9): mov $0x0,0x50(%rsp)
7a9a(5): mov $0x1,0xe(%rsp)
7a9f(5): mov $0x0,0x7c(%rsp)
7aa4(3): xor %r12d,%r12d
7aa7(5): mov $0x0,0xf(%rsp)
7aac(9): mov $0x1,0x18(%rsp)
7ab5(5): mov %rax,0x48(%rsp)
7aba(6): mov $0x1,%r15d
7ac0(8): mov $0x2,0x8(%rsp)
7ac8(5): jmp 0xfffff41b(%rip)
7acd(3): nop (%rax)
7ad0(2): test %ebx,%ebx
7ad2(6): jnz 0x3fb(%rip)
7ad8(3): test %r13,%r13
7adb(6): jz 0x22b(%rip)
7ae1(4): mov $0x22,(%r14)
7ae5(5): mov $0x1,0xe(%rsp)
7aea(3): xor %r12d,%r12d
7aed(5): mov $0x0,0x7c(%rsp)
7af2(9): mov $0x0,0x50(%rsp)
7afb(7): lea 0x13da6(%rip),%rax
7b02(5): mov $0x0,0xf(%rsp)
7b07(5): mov $0x1,0xd(%rsp)
7b0c(9): mov $0x1,0x18(%rsp)
7b15(6): mov $0x1,%r15d
7b1b(5): mov %rax,0x48(%rsp)
7b20(5): jmp 0xfffff3c3(%rip)
7b25(7): lea 0x13d7c(%rip),%rax
7b2c(5): mov $0x1,0xe(%rsp)
7b31(5): mov $0x0,0x7c(%rsp)
7b36(3): xor %r12d,%r12d
7b39(9): mov $0x0,0x50(%rsp)
7b42(5): mov $0x1,0xf(%rsp)
7b47(5): mov $0x1,0xd(%rsp)
7b4c(9): mov $0x1,0x18(%rsp)
7b55(3): xor %r15d,%r15d
7b58(5): mov %rax,0x48(%rsp)
7b5d(8): mov $0x5,0x8(%rsp)
7b65(5): jmp 0xfffff37e(%rip)
7b6a(5): mov $0x1,0xe(%rsp)
7b6f(5): mov $0x0,0x7c(%rsp)
7b74(3): xor %r12d,%r12d
7b77(9): mov $0x0,0x50(%rsp)
7b80(5): mov $0x0,0xf(%rsp)
7b85(3): xor %r15d,%r15d
7b88(5): mov $0x1,0xd(%rsp)
7b8d(9): mov $0x0,0x18(%rsp)
7b96(9): mov $0x0,0x48(%rsp)
7b9f(5): jmp 0xfffff344(%rip)
7ba4(5): cmp $0xa,0x8(%rsp)
7ba9(2): jz 0x58(%rip)
7bab(7): lea 0x14180(%rip),%rsi
7bb2(2): xor %edi,%edi
7bb4(5): mov $0x5,%edx
7bb9(5): call 0xffffa1c7(%rip)
7bbe(3): mov %rax,%rcx
7bc1(5): mov %rax,0x68(%rsp)
7bc6(7): lea 0x14165(%rip),%rax
7bcd(3): cmp %rax,%rcx
7bd0(6): jz 0x39e(%rip)
7bd6(7): lea 0x14119(%rip),%rsi
7bdd(2): xor %edi,%edi
7bdf(5): mov $0x5,%edx
7be4(5): call 0xffffa19c(%rip)
7be9(3): mov %rax,%rcx
7bec(5): mov %rax,0x60(%rsp)
7bf1(7): lea 0x140fe(%rip),%rax
7bf8(3): cmp %rax,%rcx
7bfb(6): jz 0x389(%rip)
7c01(3): xor %r15d,%r15d
7c04(2): test %ebx,%ebx
7c06(6): jz 0x1c7(%rip)
7c0c(2): test %ebx,%ebx
7c0e(5): mov 0x60(%rsp),%rbx
7c13(5): setnz 0xf(%rsp)
7c18(3): xor %r12d,%r12d
7c1b(3): mov %rbx,%rdi
7c1e(5): call 0xffffa182(%rip)
7c23(5): mov %rbx,0x48(%rsp)
7c28(5): mov %rax,0x18(%rsp)
7c2d(5): mov $0x1,0xe(%rsp)
7c32(5): mov $0x0,0x7c(%rsp)
7c37(9): mov $0x0,0x50(%rsp)
7c40(5): mov $0x1,0xd(%rsp)
7c45(5): jmp 0xfffff29e(%rip)
7c4a(5): mov $0x1,0xe(%rsp)
7c4f(5): mov $0x0,0x7c(%rsp)
7c54(3): xor %r12d,%r12d
7c57(9): mov $0x0,0x50(%rsp)
7c60(5): mov $0x0,0xf(%rsp)
7c65(3): xor %r15d,%r15d
7c68(5): mov $0x0,0xd(%rsp)
7c6d(9): mov $0x0,0x18(%rsp)
7c76(9): mov $0x0,0x48(%rsp)
7c7f(5): jmp 0xfffff264(%rip)
7c84(5): mov $0x1,0xe(%rsp)
7c89(5): mov $0x0,0x7c(%rsp)
7c8e(3): xor %r12d,%r12d
7c91(9): mov $0x0,0x50(%rsp)
7c9a(5): mov $0x1,0xf(%rsp)
7c9f(5): mov $0x1,0xd(%rsp)
7ca4(5): jmp 0xfffff21f(%rip)
7ca9(3): cmp %r15,%r13
7cac(2): jbe 0x7(%rip)
7cae(5): mov $0x30,0x0(%r14,%r15,1)
7cb3(4): lea 0x2(%rcx),%rax
7cb7(3): cmp %rax,%r13
7cba(2): jbe 0x8(%rip)
7cbc(6): mov $0x30,0x2(%r14,%rcx,1)
7cc2(3): mov %r12d,%eax
7cc5(4): lea 0x3(%rcx),%r15
7cc9(3): xor %r12d,%r12d
7ccc(5): mov $0x30,%ebx
7cd1(5): jmp 0xfffff367(%rip)
7cd6(a): nop 0x0(%rax,%rax,1)
7ce0(5): movzx 0xf(%rsp),%ebx
7ce5(3): mov %r11,%rbp
7ce8(4): mov %bl,0xd(%rsp)
7cec(5): jmp 0xfffffcad(%rip)
7cf1(5): movzx 0xd(%rsp),%edx
7cf6(3): xor %r12d,%r12d
7cf9(5): jmp 0xfffffb07(%rip)
7cfe(3): xor %r10d,%r10d
7d01(5): jmp 0xfffffbbc(%rip)
7d06(9): mov $0x0,0x50(%rsp)
7d0f(5): mov $0x1,0xe(%rsp)
7d14(3): xor %r12d,%r12d
7d17(5): mov $0x0,0x7c(%rsp)
7d1c(5): jmp 0xfffffddf(%rip)
7d21(5): mov 0x30(%rsp),%r11
7d26(3): mov %r14,%rsi
7d29(3): mov %r13,%rcx
7d2c(3): mov %rbx,%rax
7d2f(3): mov %rbx,%rdi
7d32(6): movzx 0x7d(%rsp),%r8d
7d38(5): movzx 0x7e(%rsp),%ebx
7d3d(8): mov 0x88(%rsp),%r9
7d45(3): cmp %r11,%rsi
7d48(6): movzx 0x7f(%rsp),%r10d
7d4e(8): mov 0x80(%rsp),%r15
7d56(5): mov 0x40(%rsp),%r14
7d5b(5): mov 0x70(%rsp),%r13
7d60(2): jnb 0x28(%rip)
7d62(3): cmp $0x0,(%rcx)
7d65(2): jnz 0x12(%rip)
7d67(2): jmp 0x21(%rip)
7d69(7): nop 0x0(%rax)
7d70(5): cmp $0x0,0x0(%r9,%rax,1)
7d75(2): jz 0x10(%rip)
7d77(4): add $0x1,%rax
7d7b(5): lea 0x0(%rbp,%rax,1),%rdx
7d80(3): cmp %rdx,%r11
7d83(2): jnbe 0xffffffed(%rip)
7d85(3): mov %rax,%rdi
7d88(5): movzx 0xd(%rsp),%edx
7d8d(3): xor %r12d,%r12d
7d90(5): jmp 0xfffffa66(%rip)
7d95(3): mov %rbx,%rdi
7d98(6): movzx 0x7d(%rsp),%r8d
7d9e(5): movzx 0x7e(%rsp),%ebx
7da3(6): movzx 0x7f(%rsp),%r10d
7da9(8): mov 0x80(%rsp),%r15
7db1(3): xor %r12d,%r12d
7db4(5): mov 0x40(%rsp),%r14
7db9(5): mov 0x70(%rsp),%r13
7dbe(5): mov 0x30(%rsp),%r11
7dc3(5): movzx 0xd(%rsp),%edx
7dc8(5): jmp 0xfffffa2e(%rip)
7dcd(5): mov 0x68(%rsp),%rdx
7dd2(3): movzx (%rdx),%eax
7dd5(2): test %al,%al
7dd7(6): jz 0xfffffe35(%rip)
7ddd(3): nop (%rax)
7de0(3): cmp %r15,%r13
7de3(2): jbe 0x6(%rip)
7de5(4): mov %al,0x0(%r14,%r15,1)
7de9(4): add $0x1,%r15
7ded(5): movzx 0x0(%rdx,%r15,1),%eax
7df2(2): test %al,%al
7df4(2): jnz 0xffffffec(%rip)
7df6(5): jmp 0xfffffe16(%rip)
7dfb(2): mov %edx,%eax
7dfd(5): jmp 0xfffff55a(%rip)
7e02(4): movzx 0x0(%rax,%rcx,1),%ebx
7e06(3): cmp $0x3e,%bl
7e09(6): jnbe 0xfffff877(%rip)
7e0f(a): mov $0x8070630310989004800,%rax
7e19(4): bt %rbx,%rax
7e1d(6): jnb 0xfffff863(%rip)
7e23(5): cmp $0x0,0xf(%rsp)
7e28(6): jnz 0x1ea(%rip)
7e2e(3): cmp %r15,%r13
7e31(2): jbe 0x7(%rip)
7e33(5): mov $0x3f,0x0(%r14,%r15,1)
7e38(4): lea 0x1(%r15),%rax
7e3c(3): cmp %rax,%r13
7e3f(2): jbe 0x8(%rip)
7e41(6): mov $0x22,0x1(%r14,%r15,1)
7e47(4): lea 0x2(%r15),%rax
7e4b(3): cmp %rax,%r13
7e4e(2): jbe 0x8(%rip)
7e50(6): mov $0x22,0x2(%r14,%r15,1)
7e56(4): lea 0x3(%r15),%rax
7e5a(3): cmp %rax,%r13
7e5d(2): jbe 0x8(%rip)
7e5f(6): mov $0x3f,0x3(%r14,%r15,1)
7e65(4): add $0x4,%r15
7e69(2): xor %edx,%edx
7e6b(3): xor %r12d,%r12d
7e6e(2): xor %eax,%eax
7e70(3): mov %rcx,%rbp
7e73(5): jmp 0xfffff1c5(%rip)
7e78(2): test %ebx,%ebx
7e7a(6): jz 0x18e(%rip)
7e80(7): lea 0x13e6f(%rip),%rax
7e87(5): mov $0x1,0xe(%rsp)
7e8c(5): mov $0x0,0x7c(%rsp)
7e91(3): xor %r12d,%r12d
7e94(9): mov $0x0,0x50(%rsp)
7e9d(5): mov $0x1,0xf(%rsp)
7ea2(5): mov $0x0,0xd(%rsp)
7ea7(9): mov $0x1,0x18(%rsp)
7eb0(3): xor %r15d,%r15d
7eb3(5): mov %rax,0x48(%rsp)
7eb8(5): jmp 0xfffff02b(%rip)
7ebd(3): nop (%rax)
7ec0(3): mov %r11,%rbp
7ec3(5): movzx 0xf(%rsp),%eax
7ec8(5): jmp 0xfffffad1(%rip)
7ecd(7): lea 0x139d4(%rip),%rax
7ed4(5): mov $0x1,0xe(%rsp)
7ed9(5): mov $0x0,0x7c(%rsp)
7ede(3): xor %r12d,%r12d
7ee1(9): mov $0x0,0x50(%rsp)
7eea(5): mov $0x1,0xf(%rsp)
7eef(5): mov $0x1,0xd(%rsp)
7ef4(9): mov $0x1,0x18(%rsp)
7efd(3): xor %r15d,%r15d
7f00(5): mov %rax,0x48(%rsp)
7f05(5): jmp 0xffffefde(%rip)
7f0a(2): mov %edx,%eax
7f0c(5): mov 0x48(%rsp),%rbx
7f11(3): test %rbx,%rbx
7f14(2): jz 0x2e(%rip)
7f16(2): test %al,%al
7f18(2): jz 0x2a(%rip)
7f1a(3): movzx (%rbx),%ecx
7f1d(3): mov %rbx,%rax
7f20(2): test %cl,%cl
7f22(2): jz 0x20(%rip)
7f24(3): mov %r15,%rdx
7f27(3): sub %r15,%rax
7f2a(3): cmp %rdx,%r13
7f2d(2): jbe 0x6(%rip)
7f2f(4): mov %cl,0x0(%r14,%rdx,1)
7f33(4): add $0x1,%rdx
7f37(4): movzx 0x0(%rax,%rdx,1),%ecx
7f3b(2): test %cl,%cl
7f3d(2): jnz 0xffffffed(%rip)
7f3f(3): mov %rdx,%r15
7f42(3): cmp %r15,%r13
7f45(6): jbe 0xfffffaa4(%rip)
7f4b(5): mov $0x0,0x0(%r14,%r15,1)
7f50(5): jmp 0xfffffa99(%rip)
7f55(5): cmp $0x2,0x8(%rsp)
7f5a(5): movzx 0xf(%rsp),%ebx
7f5f(3): mov %r11,%rbp
7f62(3): setz %al
7f65(4): mov %bl,0xd(%rsp)
7f69(5): jmp 0xfffffa30(%rip)
7f6e(4): mov 0x8(%rsp),%esi
7f72(3): mov %rcx,%rdi
7f75(5): call 0xffffedab(%rip)
7f7a(5): mov %rax,0x68(%rsp)
7f7f(5): jmp 0xfffffc57(%rip)
7f84(4): mov 0x8(%rsp),%esi
7f88(3): mov %rcx,%rdi
7f8b(5): call 0xffffed95(%rip)
7f90(5): mov %rax,0x60(%rsp)
7f95(5): jmp 0xfffffc6c(%rip)
7f9a(5): movzx 0xf(%rsp),%ebx
7f9f(3): mov %r11,%rbp
7fa2(2): mov %edx,%eax
7fa4(4): mov %bl,0xd(%rsp)
7fa8(5): jmp 0xfffff9f1(%rip)
7fad(4): sub $0x8,%rsp
7fb1(6): mov $0x5,%r8d
7fb7(3): mov %r11,%rcx
7fba(4): push 0x68(%rsp)
7fbe(4): push 0x78(%rsp)
7fc2(3): mov %r14,%rdi
7fc5(4): push 0x38(%rsp)
7fc9(8): mov 0x98(%rsp),%r9d
7fd1(5): mov 0x30(%rsp),%rdx
7fd6(5): mov 0x70(%rsp),%rsi
7fdb(5): call 0xffffee35(%rip)
7fe0(4): add $0x20,%rsp
7fe4(3): mov %rax,%r15
7fe7(5): jmp 0xfffffa02(%rip)
7fec(5): movzx 0x7c(%rsp),%eax
7ff1(5): jmp 0xffffff1b(%rip)
7ff6(8): mov $0x2,0x8(%rsp)
7ffe(5): jmp 0xfffff99b(%rip)
8003(5): call 0xffff9dad(%rip)
8008(5): mov $0x0,0xd(%rsp)
800d(5): jmp 0xfffffa74(%rip)
8012(3): mov %r11,%rbp
8015(5): jmp 0xfffff99b(%rip)
801a(5): mov $0x1,0xe(%rsp)
801f(2): xor %eax,%eax
8021(3): xor %r12d,%r12d
8024(9): mov $0x0,0x50(%rsp)
802d(5): jmp 0xfffff5a7(%rip)
8032(3): mov %r13,%rdx
8035(5): mov 0x50(%rsp),%r13
803a(5): jmp 0xfffff5f8(%rip)
803f(5): call 0xffff9c31(%rip)

"quotearg_n_options" :
8050(2): push %r15
8052(2): push %r14
8054(3): movsxd %edi,%r15
8057(2): push %r13
8059(2): push %r12
805b(3): mov %rdx,%r14
805e(1): push %rbp
805f(1): push %rbx
8060(3): mov %rcx,%rbp
8063(4): sub $0x28,%rsp
8067(5): mov %rsi,0x8(%rsp)
806c(5): call 0xffff9c14(%rip)
8071(3): mov %rax,%r13
8074(2): mov (%rax),%eax
8076(3): test %r15d,%r15d
8079(7): mov 0x219020(%rip),%rbx
8080(4): mov %eax,0x18(%rsp)
8084(6): js 0x16d(%rip)
808a(7): cmp %r15d,0x219007(%rip)
8091(2): jnle 0x64(%rip)
8093(7): cmp $0x7fffffff,%r15d
809a(6): jz 0x15c(%rip)
80a0(4): lea 0x1(%r15),%r12d
80a4(7): lea 0x219005(%rip),%rax
80ab(3): movsxd %r12d,%rsi
80ae(4): shl/sal $0x4,%rsi
80b2(3): cmp %rax,%rbx
80b5(6): jz 0x11b(%rip)
80bb(3): mov %rbx,%rdi
80be(5): call 0x1862(%rip)
80c3(3): mov %rax,%rbx
80c6(7): mov %rax,0x218fd3(%rip)
80cd(7): movsxd 0x218fc4(%rip),%rdi
80d4(3): mov %r12d,%edx
80d7(2): xor %esi,%esi
80d9(2): sub %edi,%edx
80db(4): shl/sal $0x4,%rdi
80df(3): movsxd %edx,%rdx
80e2(3): add %rbx,%rdi
80e5(4): shl/sal $0x4,%rdx
80e9(5): call 0xffff9d57(%rip)
80ee(7): mov %r12d,0x218fa3(%rip)
80f5(3): mov 0x4(%rbp),%eax
80f8(4): shl/sal $0x4,%r15
80fc(4): sub $0x8,%rsp
8100(3): add %r15,%rbx
8103(4): lea 0x8(%rbp),%r15
8107(4): mov 0x0(%rbp),%r8d
810b(3): mov (%rbx),%r11
810e(4): mov 0x8(%rbx),%r12
8112(3): mov %r14,%rcx
8115(3): or $0x1,%eax
8118(4): mov %eax,0x24(%rsp)
811c(3): push 0x30(%rbp)
811f(3): mov %eax,%r9d
8122(3): push 0x28(%rbp)
8125(2): push %r15
8127(3): mov %r11,%rsi
812a(5): mov 0x28(%rsp),%rdx
812f(3): mov %r12,%rdi
8132(5): mov %r11,0x30(%rsp)
8137(5): call 0xffffecd9(%rip)
813c(4): add $0x20,%rsp
8140(5): mov 0x10(%rsp),%r11
8145(3): cmp %rax,%r11
8148(2): jnbe 0x69(%rip)
814a(4): lea 0x1(%rax),%rsi
814e(7): lea 0x21976b(%rip),%rax
8155(3): cmp %rax,%r12
8158(3): mov %rsi,(%rbx)
815b(2): jz 0x14(%rip)
815d(3): mov %r12,%rdi
8160(5): mov %rsi,0x10(%rsp)
8165(5): call 0xffff9afb(%rip)
816a(5): mov 0x10(%rsp),%rsi
816f(3): mov %rsi,%rdi
8172(5): mov %rsi,0x10(%rsp)
8177(5): call 0x1749(%rip)
817c(4): sub $0x8,%rsp
8180(4): mov %rax,0x8(%rbx)
8184(4): mov 0x0(%rbp),%r8d
8188(3): push 0x30(%rbp)
818b(3): push 0x28(%rbp)
818e(3): mov %r14,%rcx
8191(2): push %r15
8193(5): mov 0x3c(%rsp),%r9d
8198(3): mov %rax,%rdi
819b(5): mov 0x28(%rsp),%rdx
81a0(5): mov 0x30(%rsp),%rsi
81a5(3): mov %rax,%r12
81a8(5): call 0xffffec68(%rip)
81ad(4): add $0x20,%rsp
81b1(4): mov 0x18(%rsp),%eax
81b5(4): mov %eax,0x0(%r13)
81b9(4): add $0x28,%rsp
81bd(3): mov %r12,%rax
81c0(1): pop %rbx
81c1(1): pop %rbp
81c2(2): pop %r12
81c4(2): pop %r13
81c6(2): pop %r14
81c8(2): pop %r15
81ca(1): ret near (%rsp)
81cb(5): nop 0x0(%rax,%rax,1)
81d0(2): xor %edi,%edi
81d2(5): call 0x174e(%rip)
81d7(8): movdqa 0x218ed1(%rip),%xmm0
81df(3): mov %rax,%rbx
81e2(7): mov %rax,0x218eb7(%rip)
81e9(3): movups %xmm0,(%rax)
81ec(5): jmp 0xfffffee1(%rip)
81f1(5): call 0xffff9a7f(%rip)
81f6(5): call 0x191a(%rip)

"clone_quoting_options" :
8200(2): push %r12
8202(1): push %rbp
8203(1): push %rbx
8204(3): mov %rdi,%rbx
8207(5): call 0xffff9a79(%rip)
820c(3): mov (%rax),%r12d
820f(3): mov %rax,%rbp
8212(7): lea 0x2197a7(%rip),%rax
8219(3): test %rbx,%rbx
821c(5): mov $0x38,%esi
8221(4): cmove %rax,%rbx
8225(3): mov %rbx,%rdi
8228(5): call 0x1898(%rip)
822d(4): mov %r12d,0x0(%rbp)
8231(1): pop %rbx
8232(1): pop %rbp
8233(2): pop %r12
8235(1): ret near (%rsp)

"get_quoting_style" :
8240(7): lea 0x219779(%rip),%rax
8247(3): test %rdi,%rdi
824a(4): cmove %rax,%rdi
824e(2): mov (%rdi),%eax
8250(1): ret near (%rsp)

"set_quoting_style" :
8260(7): lea 0x219759(%rip),%rax
8267(3): test %rdi,%rdi
826a(4): cmove %rax,%rdi
826e(2): mov %esi,(%rdi)
8270(1): ret near (%rsp)

"set_char_quoting" :
8280(7): lea 0x219739(%rip),%rax
8287(3): test %rdi,%rdi
828a(2): mov %esi,%ecx
828c(4): cmove %rax,%rdi
8290(2): mov %esi,%eax
8292(3): and $0x1f,%ecx
8295(3): shr $0x5,%al
8298(3): movzx %al,%eax
829b(5): lea 0x8(%rdi,%rax,4),%rdi
82a0(2): mov (%rdi),%esi
82a2(2): mov %esi,%eax
82a4(2): shr %cl,%eax
82a6(2): xor %eax,%edx
82a8(3): and $0x1,%eax
82ab(3): and $0x1,%edx
82ae(2): shl/sal %cl,%edx
82b0(2): xor %esi,%edx
82b2(2): mov %edx,(%rdi)
82b4(1): ret near (%rsp)

"set_quoting_flags" :
82c0(7): lea 0x2196f9(%rip),%rax
82c7(3): test %rdi,%rdi
82ca(4): cmove %rax,%rdi
82ce(3): mov 0x4(%rdi),%eax
82d1(3): mov %esi,0x4(%rdi)
82d4(1): ret near (%rsp)

"set_custom_quoting" :
82e0(7): lea 0x2196d9(%rip),%rax
82e7(3): test %rdi,%rdi
82ea(4): cmove %rax,%rdi
82ee(3): test %rsi,%rsi
82f1(6): mov $0xa,(%rdi)
82f7(2): jz 0x10(%rip)
82f9(3): test %rdx,%rdx
82fc(2): jz 0xb(%rip)
82fe(4): mov %rsi,0x28(%rdi)
8302(4): mov %rdx,0x30(%rdi)
8306(1): ret near (%rsp)
8307(4): sub $0x8,%rsp
830b(5): call 0xffff9965(%rip)

"quotearg_buffer" :
8310(2): push %r15
8312(2): push %r14
8314(7): lea 0x2196a5(%rip),%rax
831b(2): push %r13
831d(2): push %r12
831f(3): mov %rdi,%r13
8322(1): push %rbp
8323(1): push %rbx
8324(3): mov %r8,%rbx
8327(3): mov %rsi,%r14
832a(3): mov %rdx,%r15
832d(4): sub $0x18,%rsp
8331(3): test %r8,%r8
8334(4): cmove %rax,%rbx
8338(5): mov %rcx,0x8(%rsp)
833d(5): call 0xffff9943(%rip)
8342(3): mov (%rax),%r12d
8345(3): mov %rax,%rbp
8348(4): lea 0x8(%rbx),%rax
834c(4): sub $0x8,%rsp
8350(4): mov 0x4(%rbx),%r9d
8354(3): push 0x30(%rbx)
8357(3): mov (%rbx),%r8d
835a(3): push 0x28(%rbx)
835d(3): mov %r15,%rdx
8360(1): push %rax
8361(5): mov 0x28(%rsp),%rcx
8366(3): mov %r14,%rsi
8369(3): mov %r13,%rdi
836c(5): call 0xffffeaa4(%rip)
8371(4): mov %r12d,0x0(%rbp)
8375(4): add $0x38,%rsp
8379(1): pop %rbx
837a(1): pop %rbp
837b(2): pop %r12
837d(2): pop %r13
837f(2): pop %r14
8381(2): pop %r15
8383(1): ret near (%rsp)

"quotearg_alloc_mem" :
8390(2): push %r15
8392(2): push %r14
8394(7): lea 0x219625(%rip),%rax
839b(2): push %r13
839d(2): push %r12
839f(3): mov %rdx,%r12
83a2(1): push %rbp
83a3(1): push %rbx
83a4(3): mov %rcx,%rbx
83a7(3): mov %rdi,%r14
83aa(3): mov %rsi,%r15
83ad(4): sub $0x38,%rsp
83b1(3): test %rcx,%rcx
83b4(4): cmove %rax,%rbx
83b8(2): xor %ebp,%ebp
83ba(5): call 0xffff98c6(%rip)
83bf(3): test %r12,%r12
83c2(3): mov %rax,%r13
83c5(2): mov (%rax),%eax
83c7(4): setz %bpl
83cb(3): or 0x4(%rbx),%ebp
83ce(4): lea 0x8(%rbx),%r10
83d2(4): sub $0x8,%rsp
83d6(3): mov (%rbx),%r8d
83d9(3): mov %r15,%rcx
83dc(4): mov %eax,0x14(%rsp)
83e0(3): push 0x30(%rbx)
83e3(3): mov %r14,%rdx
83e6(3): push 0x28(%rbx)
83e9(2): push %r10
83eb(2): xor %esi,%esi
83ed(3): mov %ebp,%r9d
83f0(2): xor %edi,%edi
83f2(5): mov %r10,0x40(%rsp)
83f7(5): call 0xffffea19(%rip)
83fc(4): lea 0x1(%rax),%rsi
8400(5): mov %rax,0x48(%rsp)
8405(4): add $0x20,%rsp
8409(3): mov %rsi,%rdi
840c(5): mov %rsi,0x18(%rsp)
8411(5): call 0x14af(%rip)
8416(5): mov %rax,0x10(%rsp)
841b(4): sub $0x8,%rsp
841f(3): push 0x30(%rbx)
8422(3): push 0x28(%rbx)
8425(5): mov 0x38(%rsp),%r10
842a(3): mov %ebp,%r9d
842d(3): mov (%rbx),%r8d
8430(3): mov %r15,%rcx
8433(3): mov %r14,%rdx
8436(3): mov %rax,%rdi
8439(2): push %r10
843b(5): mov 0x38(%rsp),%rsi
8440(5): call 0xffffe9d0(%rip)
8445(4): mov 0x2c(%rsp),%eax
8449(4): add $0x20,%rsp
844d(3): test %r12,%r12
8450(4): mov %eax,0x0(%r13)
8454(2): jz 0xb(%rip)
8456(5): mov 0x28(%rsp),%r11
845b(4): mov %r11,(%r12)
845f(5): mov 0x10(%rsp),%rax
8464(4): add $0x38,%rsp
8468(1): pop %rbx
8469(1): pop %rbp
846a(2): pop %r12
846c(2): pop %r13
846e(2): pop %r14
8470(2): pop %r15
8472(1): ret near (%rsp)

"quotearg_alloc" :
8480(3): mov %rdx,%rcx
8483(2): xor %edx,%edx
8485(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
8490(6): mov 0x218c02(%rip),%eax
8496(2): push %r12
8498(7): mov 0x218c01(%rip),%r12
849f(1): push %rbp
84a0(1): push %rbx
84a1(3): cmp $0x1,%eax
84a4(2): jle 0x2d(%rip)
84a6(3): sub $0x2,%eax
84a9(5): lea 0x18(%r12),%rbx
84ae(4): shl/sal $0x4,%rax
84b2(5): lea 0x28(%r12,%rax,1),%rbp
84b7(9): nop 0x0(%rax,%rax,1)
84c0(3): mov (%rbx),%rdi
84c3(4): add $0x10,%rbx
84c7(5): call 0xffff9799(%rip)
84cc(3): cmp %rbp,%rbx
84cf(2): jnz 0xfffffff1(%rip)
84d1(5): mov 0x8(%r12),%rdi
84d6(7): lea 0x2193e3(%rip),%rbx
84dd(3): cmp %rbx,%rdi
84e0(2): jz 0x19(%rip)
84e2(5): call 0xffff977e(%rip)
84e7(b): mov $0x100,0x218bbe(%rip)
84f2(7): mov %rbx,0x218bbf(%rip)
84f9(7): lea 0x218bb0(%rip),%rbx
8500(3): cmp %rbx,%r12
8503(2): jz 0x11(%rip)
8505(3): mov %r12,%rdi
8508(5): call 0xffff9758(%rip)
850d(7): mov %rbx,0x218b8c(%rip)
8514(1): pop %rbx
8515(a): mov $0x1,0x218b79(%rip)
851f(1): pop %rbp
8520(2): pop %r12
8522(1): ret near (%rsp)

"quotearg_n" :
8530(7): lea 0x219489(%rip),%rcx
8537(7): mov $0xffffffff,%rdx
853e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
8550(7): lea 0x219469(%rip),%rcx
8557(5): jmp 0xfffffaf9(%rip)

"quotearg" :
8560(7): lea 0x219459(%rip),%rcx
8567(3): mov %rdi,%rsi
856a(7): mov $0xffffffff,%rdx
8571(2): xor %edi,%edi
8573(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
8580(7): lea 0x219439(%rip),%rcx
8587(3): mov %rsi,%rdx
858a(3): mov %rdi,%rsi
858d(2): xor %edi,%edi
858f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
85a0(4): sub $0x48,%rsp
85a4(3): mov %rdx,%rax
85a7(9): mov $0x28,%rdx
85b0(5): mov %rdx,0x38(%rsp)
85b5(2): xor %edx,%edx
85b7(3): cmp $0xa,%esi
85ba(2): jz 0x6a(%rip)
85bc(3): mov %esi,(%rsp)
85bf(3): mov %rsp,%rcx
85c2(7): mov $0xffffffff,%rdx
85c9(3): mov %rax,%rsi
85cc(9): mov $0x0,0x4(%rsp)
85d5(9): mov $0x0,0xc(%rsp)
85de(9): mov $0x0,0x14(%rsp)
85e7(9): mov $0x0,0x1c(%rsp)
85f0(9): mov $0x0,0x24(%rsp)
85f9(9): mov $0x0,0x2c(%rsp)
8602(8): mov $0x0,0x34(%rsp)
860a(5): call 0xfffffa46(%rip)
860f(5): mov 0x38(%rsp),%rcx
8614(9): xor $0x28,%rcx
861d(2): jnz 0xc(%rip)
861f(4): add $0x48,%rsp
8623(1): ret near (%rsp)
8624(5): call 0xffff964c(%rip)
8629(5): call 0xffff9787(%rip)

"quotearg_n_style_mem" :
8630(4): sub $0x48,%rsp
8634(3): mov %rdx,%rax
8637(3): mov %rcx,%rdx
863a(9): mov $0x28,%rcx
8643(5): mov %rcx,0x38(%rsp)
8648(2): xor %ecx,%ecx
864a(3): cmp $0xa,%esi
864d(2): jz 0x63(%rip)
864f(3): mov %esi,(%rsp)
8652(3): mov %rsp,%rcx
8655(3): mov %rax,%rsi
8658(9): mov $0x0,0x4(%rsp)
8661(9): mov $0x0,0xc(%rsp)
866a(9): mov $0x0,0x14(%rsp)
8673(9): mov $0x0,0x1c(%rsp)
867c(9): mov $0x0,0x24(%rsp)
8685(9): mov $0x0,0x2c(%rsp)
868e(8): mov $0x0,0x34(%rsp)
8696(5): call 0xfffff9ba(%rip)
869b(5): mov 0x38(%rsp),%rdx
86a0(9): xor $0x28,%rdx
86a9(2): jnz 0xc(%rip)
86ab(4): add $0x48,%rsp
86af(1): ret near (%rsp)
86b0(5): call 0xffff95c0(%rip)
86b5(5): call 0xffff96fb(%rip)

"quotearg_style" :
86c0(3): mov %rsi,%rdx
86c3(2): mov %edi,%esi
86c5(2): xor %edi,%edi
86c7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
86d0(3): mov %rdx,%rcx
86d3(3): mov %rsi,%rdx
86d6(2): mov %edi,%esi
86d8(2): xor %edi,%edi
86da(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
86e0(4): sub $0x48,%rsp
86e4(2): mov %edx,%ecx
86e6(9): mov $0x28,%rax
86ef(5): mov %rax,0x38(%rsp)
86f4(2): xor %eax,%eax
86f6(7): mov 0x2192f3(%rip),%rax
86fd(3): mov %rsp,%r8
8700(3): and $0x1f,%ecx
8703(8): movdqa 0x2192b5(%rip),%xmm0
870b(5): mov %rax,0x30(%rsp)
8710(2): mov %edx,%eax
8712(4): movaps %xmm0,(%rsp)
8716(3): shr $0x5,%al
8719(3): movzx %al,%eax
871c(5): lea 0x8(%r8,%rax,4),%r9
8721(8): movdqa 0x2192a7(%rip),%xmm0
8729(5): movaps %xmm0,0x10(%rsp)
872e(8): movdqa 0x2192aa(%rip),%xmm0
8736(5): movaps %xmm0,0x20(%rsp)
873b(3): mov (%r9),%edx
873e(2): mov %edx,%eax
8740(2): shr %cl,%eax
8742(2): not %eax
8744(3): and $0x1,%eax
8747(2): shl/sal %cl,%eax
8749(3): mov %r8,%rcx
874c(2): xor %edx,%eax
874e(3): mov %rsi,%rdx
8751(3): mov %rdi,%rsi
8754(3): mov %eax,(%r9)
8757(2): xor %edi,%edi
8759(5): call 0xfffff8f7(%rip)
875e(5): mov 0x38(%rsp),%rsi
8763(9): xor $0x28,%rsi
876c(2): jnz 0x7(%rip)
876e(4): add $0x48,%rsp
8772(1): ret near (%rsp)
8773(5): call 0xffff963d(%rip)

"quotearg_char" :
8780(4): movsx %sil,%edx
8784(7): mov $0xffffffff,%rsi
878b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
8790(5): mov $0x3a,%edx
8795(7): mov $0xffffffff,%rsi
879c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
87b0(5): mov $0x3a,%edx
87b5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
87c0(4): sub $0x48,%rsp
87c4(3): mov %rdx,%rax
87c7(9): mov $0x28,%rdx
87d0(5): mov %rdx,0x38(%rsp)
87d5(2): xor %edx,%edx
87d7(3): cmp $0xa,%esi
87da(2): jz 0x6a(%rip)
87dc(3): mov %esi,(%rsp)
87df(3): mov %rsp,%rcx
87e2(7): mov $0xffffffff,%rdx
87e9(3): mov %rax,%rsi
87ec(9): mov $0x0,0x4(%rsp)
87f5(9): mov $0x4000000,0xc(%rsp)
87fe(9): mov $0x0,0x14(%rsp)
8807(9): mov $0x0,0x1c(%rsp)
8810(9): mov $0x0,0x24(%rsp)
8819(9): mov $0x0,0x2c(%rsp)
8822(8): mov $0x0,0x34(%rsp)
882a(5): call 0xfffff826(%rip)
882f(5): mov 0x38(%rsp),%rcx
8834(9): xor $0x28,%rcx
883d(2): jnz 0xc(%rip)
883f(4): add $0x48,%rsp
8843(1): ret near (%rsp)
8844(5): call 0xffff942c(%rip)
8849(5): call 0xffff9567(%rip)

"quotearg_n_custom_mem" :
8850(4): sub $0x48,%rsp
8854(3): mov %rcx,%r9
8857(7): mov 0x219192(%rip),%rcx
885e(8): movdqa 0x21915a(%rip),%xmm0
8866(9): mov $0x28,%rax
886f(5): mov %rax,0x38(%rsp)
8874(2): xor %eax,%eax
8876(4): movaps %xmm0,(%rsp)
887a(3): test %rsi,%rsi
887d(5): mov %rcx,0x30(%rsp)
8882(7): mov $0xa,(%rsp)
8889(8): movdqa 0x21913f(%rip),%xmm0
8891(5): movaps %xmm0,0x10(%rsp)
8896(8): movdqa 0x219142(%rip),%xmm0
889e(5): movaps %xmm0,0x20(%rsp)
88a3(2): jz 0x34(%rip)
88a5(3): test %rdx,%rdx
88a8(2): jz 0x2f(%rip)
88aa(5): mov %rsi,0x28(%rsp)
88af(5): mov %rdx,0x30(%rsp)
88b4(3): mov %rsp,%rcx
88b7(3): mov %r8,%rdx
88ba(3): mov %r9,%rsi
88bd(5): call 0xfffff793(%rip)
88c2(5): mov 0x38(%rsp),%rdi
88c7(9): xor $0x28,%rdi
88d0(2): jnz 0xc(%rip)
88d2(4): add $0x48,%rsp
88d6(1): ret near (%rsp)
88d7(5): call 0xffff9399(%rip)
88dc(5): call 0xffff94d4(%rip)

"quotearg_n_custom" :
88f0(7): mov $0xffffffff,%r8
88f7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
8900(3): mov %rdx,%rcx
8903(7): mov $0xffffffff,%r8
890a(3): mov %rsi,%rdx
890d(3): mov %rdi,%rsi
8910(2): xor %edi,%edi
8912(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
8920(3): mov %rcx,%r8
8923(3): mov %rdx,%rcx
8926(3): mov %rsi,%rdx
8929(3): mov %rdi,%rsi
892c(2): xor %edi,%edi
892e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
8940(7): lea 0x218719(%rip),%rcx
8947(5): jmp 0xfffff709(%rip)

"quote_mem" :
8950(7): lea 0x218709(%rip),%rcx
8957(3): mov %rsi,%rdx
895a(3): mov %rdi,%rsi
895d(2): xor %edi,%edi
895f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
8970(7): lea 0x2186e9(%rip),%rcx
8977(7): mov $0xffffffff,%rdx
897e(5): jmp 0xfffff6d2(%rip)

"quote" :
8990(7): lea 0x2186c9(%rip),%rcx
8997(3): mov %rdi,%rsi
899a(7): mov $0xffffffff,%rdx
89a1(2): xor %edi,%edi
89a3(5): jmp 0xfffff6ad(%rip)

"fread_file" :
89b0(2): push %r15
89b2(2): push %r14
89b4(2): push %r13
89b6(2): push %r12
89b8(3): mov %rdi,%r13
89bb(1): push %rbp
89bc(1): push %rbx
89bd(7): sub $0xb8,%rsp
89c4(5): mov %rsi,0x8(%rsp)
89c9(9): mov $0x28,%rax
89d2(8): mov %rax,0xa8(%rsp)
89da(2): xor %eax,%eax
89dc(5): call 0xffff9514(%rip)
89e1(5): lea 0x10(%rsp),%rdx
89e6(2): mov %eax,%esi
89e8(5): mov $0x1,%edi
89ed(5): call 0xffff9573(%rip)
89f2(2): test %eax,%eax
89f4(2): js 0x16(%rip)
89f6(4): mov 0x28(%rsp),%eax
89fa(5): and $0xf000,%eax
89ff(5): cmp $0x8000,%eax
8a04(6): jz 0x154(%rip)
8a0a(5): mov $0x2000,%ebx
8a0f(3): mov %rbx,%rdi
8a12(5): call 0xffff950e(%rip)
8a17(3): test %rax,%rax
8a1a(3): mov %rax,%r12
8a1d(6): jz 0xa3(%rip)
8a23(2): xor %ebp,%ebp
8a25(7): mov $0xffffffff,%r15
8a2c(2): jmp 0x3e(%rip)
8a2e(2): nop 
8a30(4): cmp $0xffffffff,%rbx
8a34(6): jz 0xdc(%rip)
8a3a(3): mov %rbx,%rax
8a3d(3): mov %r12,%rdi
8a40(3): shr $0x1,%rax
8a43(3): mov %rax,%rdx
8a46(3): add %rbx,%rax
8a49(3): not %rdx
8a4c(3): cmp %rbx,%rdx
8a4f(4): cmovbe %r15,%rax
8a53(3): mov %rax,%rsi
8a56(3): mov %rax,%rbx
8a59(5): call 0xffff9537(%rip)
8a5e(3): test %rax,%rax
8a61(6): jz 0x8f(%rip)
8a67(3): mov %rax,%r12
8a6a(3): mov %rbx,%r14
8a6d(4): lea 0x0(%r12,%rbp,1),%rdi
8a71(3): mov %r13,%rcx
8a74(3): sub %rbp,%r14
8a77(5): mov $0x1,%esi
8a7c(3): mov %r14,%rdx
8a7f(5): call 0xffff9281(%rip)
8a84(3): add %rax,%rbp
8a87(3): cmp %rax,%r14
8a8a(2): jz 0xffffffa6(%rip)
8a8c(5): call 0xffff91f4(%rip)
8a91(3): mov %r13,%rdi
8a94(3): mov %rax,%r14
8a97(3): mov (%rax),%r15d
8a9a(5): call 0xffff9246(%rip)
8a9f(2): test %eax,%eax
8aa1(2): jnz 0x5a(%rip)
8aa3(4): sub $0x1,%rbx
8aa7(3): cmp %rbp,%rbx
8aaa(6): jnbe 0x86(%rip)
8ab0(5): mov 0x8(%rsp),%rax
8ab5(5): mov $0x0,0x0(%r12,%rbp,1)
8aba(3): mov %rbp,(%rax)
8abd(3): nop (%rax)
8ac0(8): mov 0xa8(%rsp),%rcx
8ac8(9): xor $0x28,%rcx
8ad1(3): mov %r12,%rax
8ad4(6): jnz 0xaf(%rip)
8ada(7): add $0xb8,%rsp
8ae1(1): pop %rbx
8ae2(1): pop %rbp
8ae3(2): pop %r12
8ae5(2): pop %r13
8ae7(2): pop %r14
8ae9(2): pop %r15
8aeb(1): ret near (%rsp)
8aec(4): nop 0x0(%rax)
8af0(5): call 0xffff9190(%rip)
8af5(3): mov (%rax),%r15d
8af8(3): mov %rax,%r14
8afb(3): mov %r12,%rdi
8afe(3): xor %r12d,%r12d
8b01(5): call 0xffff915f(%rip)
8b06(3): mov %r15d,(%r14)
8b09(2): jmp 0xffffffb7(%rip)
8b0b(5): nop 0x0(%rax,%rax,1)
8b10(5): call 0xffff9170(%rip)
8b15(6): mov $0xc,%r15d
8b1b(3): mov %rax,%r14
8b1e(3): mov %r12,%rdi
8b21(5): call 0xffff913f(%rip)
8b26(3): xor %r12d,%r12d
8b29(3): mov %r15d,(%r14)
8b2c(2): jmp 0xffffff94(%rip)
8b2e(2): nop 
8b30(4): lea 0x1(%rbp),%rsi
8b34(3): mov %r12,%rdi
8b37(5): call 0xffff9459(%rip)
8b3c(3): test %rax,%rax
8b3f(4): cmovne %rax,%r12
8b43(5): mov 0x8(%rsp),%rax
8b48(5): mov $0x0,0x0(%r12,%rbp,1)
8b4d(3): mov %rbp,(%rax)
8b50(5): jmp 0xffffff70(%rip)
8b55(3): nop (%rax)
8b58(3): mov %r13,%rdi
8b5b(5): call 0xffff9155(%rip)
8b60(3): test %rax,%rax
8b63(6): js 0xfffffea7(%rip)
8b69(5): mov 0x40(%rsp),%rbx
8b6e(3): cmp %rax,%rbx
8b71(6): jle 0xfffffe99(%rip)
8b77(3): sub %rax,%rbx
8b7a(4): add $0x1,%rbx
8b7e(5): jmp 0xfffffe91(%rip)
8b83(5): call 0xffff922d(%rip)

"internal_read_file" :
8b90(2): push %r13
8b92(2): push %r12
8b94(1): push %rbp
8b95(1): push %rbx
8b96(3): mov %rsi,%rbp
8b99(3): mov %rdx,%rsi
8b9c(4): sub $0x8,%rsp
8ba0(5): call 0xffff9490(%rip)
8ba5(3): test %rax,%rax
8ba8(2): jz 0x58(%rip)
8baa(3): mov %rbp,%rsi
8bad(3): mov %rax,%rdi
8bb0(3): mov %rax,%rbx
8bb3(5): call 0xfffffdfd(%rip)
8bb8(3): mov %rax,%rbp
8bbb(5): call 0xffff90c5(%rip)
8bc0(3): mov %rbx,%rdi
8bc3(3): mov %rax,%r12
8bc6(3): mov (%rax),%r13d
8bc9(5): call 0x16c7(%rip)
8bce(2): test %eax,%eax
8bd0(2): jnz 0x10(%rip)
8bd2(4): add $0x8,%rsp
8bd6(3): mov %rbp,%rax
8bd9(1): pop %rbx
8bda(1): pop %rbp
8bdb(2): pop %r12
8bdd(2): pop %r13
8bdf(1): ret near (%rsp)
8be0(3): test %rbp,%rbp
8be3(2): jz 0xe(%rip)
8be5(3): mov %rbp,%rdi
8be8(4): mov (%r12),%r13d
8bec(5): call 0xffff9074(%rip)
8bf1(4): mov %r13d,(%r12)
8bf5(2): xor %ebp,%ebp
8bf7(2): jmp 0xffffffdb(%rip)
8bf9(7): nop 0x0(%rax)
8c00(2): xor %ebp,%ebp
8c02(2): jmp 0xffffffd0(%rip)

"read_file" :
8c10(7): lea 0x13b34(%rip),%rdx
8c17(5): jmp 0xffffff79(%rip)

"read_binary_file" :
8c20(7): lea 0x135c1(%rip),%rdx
8c27(5): jmp 0xffffff69(%rip)

"strnlen1" :
8c30(1): push %rbp
8c31(1): push %rbx
8c32(3): mov %rsi,%rdx
8c35(3): mov %rsi,%rbx
8c38(2): xor %esi,%esi
8c3a(3): mov %rdi,%rbp
8c3d(4): sub $0x8,%rsp
8c41(5): call 0xffff923f(%rip)
8c46(3): mov %rax,%rdx
8c49(3): sub %rbp,%rdx
8c4c(4): add $0x1,%rdx
8c50(3): test %rax,%rax
8c53(3): mov %rbx,%rax
8c56(4): cmovne %rdx,%rax
8c5a(4): add $0x8,%rsp
8c5e(1): pop %rbx
8c5f(1): pop %rbp
8c60(1): ret near (%rsp)

"trim2" :
8c70(2): push %r15
8c72(2): push %r14
8c74(2): push %r13
8c76(2): push %r12
8c78(3): mov %esi,%r12d
8c7b(1): push %rbp
8c7c(1): push %rbx
8c7d(4): sub $0x78,%rsp
8c81(9): mov $0x28,%rax
8c8a(5): mov %rax,0x68(%rsp)
8c8f(2): xor %eax,%eax
8c91(5): call 0xffff940f(%rip)
8c96(3): test %rax,%rax
8c99(6): jz 0x5be(%rip)
8c9f(3): mov %rax,%rbx
8ca2(5): call 0xffff90ee(%rip)
8ca7(4): cmp $0x1,%rax
8cab(6): jbe 0x305(%rip)
8cb1(3): test %r12d,%r12d
8cb4(6): jnz 0x154(%rip)
8cba(5): mov %rbx,0x38(%rsp)
8cbf(3): mov %rbx,%rdx
8cc2(2): mov (%rdx),%ecx
8cc4(4): add $0x4,%rdx
8cc8(6): lea 0xfefefeff(%rcx),%eax
8cce(2): not %ecx
8cd0(2): and %ecx,%eax
8cd2(5): and $0x80808080,%eax
8cd7(2): jz 0xffffffeb(%rip)
8cd9(2): mov %eax,%ecx
8cdb(5): mov $0x0,0x28(%rsp)
8ce0(9): mov $0x0,0x2c(%rsp)
8ce9(3): shr $0x10,%ecx
8cec(5): test $0x8080,%eax
8cf1(5): mov $0x0,0x34(%rsp)
8cf6(3): cmove %ecx,%eax
8cf9(4): lea 0x2(%rdx),%rcx
8cfd(2): mov %eax,%esi
8cff(4): cmove %rcx,%rdx
8d03(3): add %al,%sil
8d06(3): mov %rbx,%rsi
8d09(4): sbb $0x3,%rdx
8d0d(3): xor %r15d,%r15d
8d10(3): cmp %rbx,%rdx
8d13(3): mov %rdx,%r14
8d16(5): mov %rdx,0x20(%rsp)
8d1b(6): jbe 0x265(%rip)
8d21(5): lea 0x20(%rsp),%rbp
8d26(4): lea 0xc(%rbp),%rax
8d2a(5): mov %rax,0x18(%rsp)
8d2f(2): jmp 0x3f(%rip)
8d31(7): nop 0x0(%rax)
8d38(5): cmp $0x0,0x48(%rsp)
8d3d(6): mov $0x1,%r15d
8d43(2): jz 0x14(%rip)
8d45(4): mov 0x4c(%rsp),%edi
8d49(3): xor %r15d,%r15d
8d4c(5): call 0xffff9284(%rip)
8d51(2): test %eax,%eax
8d53(4): setz %r15b
8d57(4): lea 0x0(%r12,%r13,1),%rsi
8d5b(5): mov $0x0,0x34(%rsp)
8d60(3): cmp %r14,%rsi
8d63(5): mov %rsi,0x38(%rsp)
8d68(6): jnb 0x208(%rip)
8d6e(5): cmp $0x0,0x28(%rsp)
8d73(6): jnz 0x32e(%rip)
8d79(3): movzx (%rsi),%ecx
8d7c(7): lea 0x141dd(%rip),%rdi
8d83(2): mov %ecx,%eax
8d85(3): shr $0x5,%al
8d88(3): and $0x7,%eax
8d8b(3): mov 0x0(%rdi,%rax,4),%eax
8d8e(3): bt %ecx,%eax
8d91(6): jnb 0x2ef(%rip)
8d97(9): mov $0x1,0x40(%rsp)
8da0(3): movsx (%rsi),%eax
8da3(6): mov $0x1,%r13d
8da9(5): mov 0x38(%rsp),%r12
8dae(5): mov 0x20(%rsp),%r14
8db3(5): mov $0x1,0x48(%rsp)
8db8(4): mov %eax,0x4c(%rsp)
8dbc(3): test %r15d,%r15d
8dbf(5): mov $0x1,0x34(%rsp)
8dc4(6): jz 0xffffff74(%rip)
8dca(4): cmp $0x1,%r15d
8dce(6): jz 0x352(%rip)
8dd4(4): cmp $0x2,%r15d
8dd8(6): jnz 0x418(%rip)
8dde(5): cmp $0x0,0x48(%rsp)
8de3(6): jz 0x40d(%rip)
8de9(4): mov 0x4c(%rsp),%edi
8ded(5): call 0xffff91e3(%rip)
8df2(2): test %eax,%eax
8df4(5): mov $0x1,%eax
8df9(4): cmove %eax,%r15d
8dfd(5): jmp 0xffffff5a(%rip)
8e02(6): nop 0x0(%rax,%rax,1)
8e08(5): mov %rbx,0x38(%rsp)
8e0d(3): mov %rbx,%rdx
8e10(2): mov (%rdx),%ecx
8e12(4): add $0x4,%rdx
8e16(6): lea 0xfefefeff(%rcx),%eax
8e1c(2): not %ecx
8e1e(2): and %ecx,%eax
8e20(5): and $0x80808080,%eax
8e25(2): jz 0xffffffeb(%rip)
8e27(2): mov %eax,%ecx
8e29(5): mov $0x0,0x28(%rsp)
8e2e(9): mov $0x0,0x2c(%rsp)
8e37(3): shr $0x10,%ecx
8e3a(5): test $0x8080,%eax
8e3f(5): mov $0x0,0x34(%rsp)
8e44(3): cmove %ecx,%eax
8e47(4): lea 0x2(%rdx),%rcx
8e4b(3): mov %rbx,%r15
8e4e(2): mov %eax,%esi
8e50(4): cmove %rcx,%rdx
8e54(3): add %al,%sil
8e57(4): sbb $0x3,%rdx
8e5b(3): cmp %rbx,%rdx
8e5e(5): mov %rdx,0x20(%rsp)
8e63(6): jbe 0x35d(%rip)
8e69(5): lea 0x20(%rsp),%rbp
8e6e(7): lea 0x140eb(%rip),%r14
8e75(4): lea 0xc(%rbp),%r13
8e79(2): jmp 0x6e(%rip)
8e7b(5): nop 0x0(%rax,%rax,1)
8e80(4): movzx (%r15),%ecx
8e84(2): mov %ecx,%eax
8e86(3): shr $0x5,%al
8e89(3): and $0x7,%eax
8e8c(4): mov 0x0(%r14,%rax,4),%eax
8e90(3): bt %ecx,%eax
8e93(6): jnb 0x2c5(%rip)
8e99(9): mov $0x1,0x40(%rsp)
8ea2(4): movsx (%r15),%eax
8ea6(5): mov 0x38(%rsp),%r15
8eab(5): mov $0x1,0x48(%rsp)
8eb0(5): mov $0x1,0x34(%rsp)
8eb5(4): mov %eax,0x4c(%rsp)
8eb9(4): mov 0x4c(%rsp),%edi
8ebd(5): call 0xffff9113(%rip)
8ec2(2): test %eax,%eax
8ec4(6): jz 0x2fc(%rip)
8eca(5): add 0x40(%rsp),%r15
8ecf(5): mov 0x20(%rsp),%rdx
8ed4(5): mov $0x0,0x34(%rsp)
8ed9(3): cmp %rdx,%r15
8edc(5): mov %r15,0x38(%rsp)
8ee1(6): jnb 0x2df(%rip)
8ee7(5): cmp $0x0,0x28(%rsp)
8eec(2): jz 0xffffff94(%rip)
8eee(4): lea 0xc(%rbp),%rcx
8ef2(4): lea 0x2c(%rbp),%rdi
8ef6(3): sub %r15,%rdx
8ef9(3): mov %r15,%rsi
8efc(5): call 0x14b4(%rip)
8f01(4): cmp $0xffffffff,%rax
8f05(5): mov %rax,0x40(%rsp)
8f0a(6): jz 0x29e(%rip)
8f10(4): cmp $0xfffffffe,%rax
8f14(5): mov 0x38(%rsp),%r15
8f19(6): jz 0x307(%rip)
8f1f(3): test %rax,%rax
8f22(2): jnz 0x21(%rip)
8f24(9): mov $0x1,0x40(%rsp)
8f2d(4): cmp $0x0,(%r15)
8f31(6): jnz 0x34f(%rip)
8f37(4): mov 0x4c(%rsp),%edx
8f3b(2): test %edx,%edx
8f3d(6): jnz 0x33e(%rip)
8f43(4): lea 0xc(%rbp),%rdi
8f47(5): mov $0x1,0x48(%rsp)
8f4c(5): call 0xffff9164(%rip)
8f51(2): test %eax,%eax
8f53(6): jz 0x2ed(%rip)
8f59(5): mov $0x0,0x28(%rsp)
8f5e(5): mov $0x1,0x34(%rsp)
8f63(5): jmp 0xffffff56(%rip)
8f68(8): nop 0x0(%rax,%rax,1)
8f70(4): cmp $0x2,%r15d
8f74(2): jnz 0xc(%rip)
8f76(5): mov 0x8(%rsp),%rax
8f7b(3): mov $0x0,(%rax)
8f7e(2): nop 
8f80(3): mov %rbx,%rax
8f83(5): mov 0x68(%rsp),%rbx
8f88(9): xor $0x28,%rbx
8f91(6): jnz 0x2c1(%rip)
8f97(4): add $0x78,%rsp
8f9b(1): pop %rbx
8f9c(1): pop %rbp
8f9d(2): pop %r12
8f9f(2): pop %r13
8fa1(2): pop %r14
8fa3(2): pop %r15
8fa5(1): ret near (%rsp)
8fa6(a): nop 0x0(%rax,%rax,1)
8fb0(3): test %r12d,%r12d
8fb3(2): jz 0x53(%rip)
8fb5(3): movzx (%rbx),%ebp
8fb8(3): test %bpl,%bpl
8fbb(6): jz 0x28f(%rip)
8fc1(5): call 0xffff911f(%rip)
8fc6(3): mov %rbx,%r13
8fc9(3): mov (%rax),%rax
8fcc(2): jmp 0x12(%rip)
8fce(2): nop 
8fd0(4): add $0x1,%r13
8fd4(5): movzx 0x0(%r13),%ebp
8fd9(3): test %bpl,%bpl
8fdc(2): jz 0x9(%rip)
8fde(5): test $0x20,0x1(%rax,%rbp,2)
8fe3(2): jnz 0xffffffed(%rip)
8fe5(3): mov %r13,%rdi
8fe8(5): call 0xffff8db8(%rip)
8fed(4): lea 0x1(%rax),%rdx
8ff1(3): mov %r13,%rsi
8ff4(3): mov %rbx,%rdi
8ff7(5): call 0xffff8ff9(%rip)
8ffc(4): cmp $0x1,%r12d
9000(6): jz 0xffffff80(%rip)
9006(3): mov %rbx,%rdx
9009(2): mov (%rdx),%ecx
900b(4): add $0x4,%rdx
900f(6): lea 0xfefefeff(%rcx),%eax
9015(2): not %ecx
9017(2): and %ecx,%eax
9019(5): and $0x80808080,%eax
901e(2): jz 0xffffffeb(%rip)
9020(2): mov %eax,%ecx
9022(3): shr $0x10,%ecx
9025(5): test $0x8080,%eax
902a(3): cmove %ecx,%eax
902d(4): lea 0x2(%rdx),%rcx
9031(2): mov %eax,%esi
9033(4): cmove %rcx,%rdx
9037(3): add %al,%sil
903a(4): sbb $0x3,%rdx
903e(4): lea 0xffffffff(%rdx),%rbp
9042(3): cmp %rbp,%rbx
9045(6): jnbe 0xffffff3b(%rip)
904b(5): call 0xffff9095(%rip)
9050(3): mov (%rax),%rdx
9053(2): jmp 0x16(%rip)
9055(3): nop (%rax)
9058(4): mov $0x0,0x0(%rbp)
905c(4): sub $0x1,%rbp
9060(3): cmp %rbp,%rbx
9063(6): jnbe 0xffffff1d(%rip)
9069(4): movzx 0x0(%rbp),%eax
906d(5): test $0x20,0x1(%rdx,%rax,2)
9072(2): jnz 0xffffffe6(%rip)
9074(5): jmp 0xffffff0c(%rip)
9079(7): nop 0x0(%rax)
9080(5): mov 0x18(%rsp),%rdi
9085(5): mov %rsi,0x10(%rsp)
908a(5): call 0xffff9026(%rip)
908f(2): test %eax,%eax
9091(6): jz 0x1cb(%rip)
9097(5): mov 0x10(%rsp),%rsi
909c(5): mov $0x1,0x28(%rsp)
90a1(4): lea 0xc(%rbp),%rcx
90a5(3): mov %r14,%rdx
90a8(4): lea 0x2c(%rbp),%rdi
90ac(3): sub %rsi,%rdx
90af(5): call 0x1301(%rip)
90b4(4): cmp $0xffffffff,%rax
90b8(5): mov %rax,0x40(%rsp)
90bd(6): jz 0xc3(%rip)
90c3(4): cmp $0xfffffffe,%rax
90c7(5): mov 0x38(%rsp),%r12
90cc(6): jz 0x134(%rip)
90d2(3): test %rax,%rax
90d5(2): jnz 0x22(%rip)
90d7(9): mov $0x1,0x40(%rsp)
90e0(5): cmp $0x0,(%r12)
90e5(6): jnz 0x19b(%rip)
90eb(4): mov 0x4c(%rsp),%eax
90ef(2): test %eax,%eax
90f1(6): jnz 0x18a(%rip)
90f7(4): lea 0xc(%rbp),%rdi
90fb(5): mov $0x1,0x48(%rsp)
9100(5): call 0xffff8fb0(%rip)
9105(2): test %eax,%eax
9107(5): mov 0x20(%rsp),%r14
910c(2): jz 0x7(%rip)
910e(5): mov $0x0,0x28(%rsp)
9113(5): mov 0x40(%rsp),%r13
9118(5): jmp 0xfffffca4(%rip)
911d(3): nop (%rax)
9120(5): cmp $0x0,0x48(%rsp)
9125(6): jz 0xfffffc32(%rip)
912b(4): mov 0x4c(%rsp),%edi
912f(5): call 0xffff8ea1(%rip)
9134(5): mov 0x8(%rsp),%rsi
9139(2): test %eax,%eax
913b(5): mov $0x2,%eax
9140(4): cmovne %eax,%r15d
9144(4): cmovne %r12,%rsi
9148(5): mov %rsi,0x8(%rsp)
914d(5): jmp 0xfffffc0a(%rip)
9152(6): nop 0x0(%rax,%rax,1)
9158(3): mov %r13,%rdi
915b(5): mov %rdx,0x10(%rsp)
9160(5): call 0xffff8f50(%rip)
9165(2): test %eax,%eax
9167(5): mov 0x10(%rsp),%rdx
916c(6): jz 0xf0(%rip)
9172(5): mov $0x1,0x28(%rsp)
9177(5): jmp 0xfffffd77(%rip)
917c(4): nop 0x0(%rax)
9180(9): mov $0x1,0x40(%rsp)
9189(5): mov $0x0,0x48(%rsp)
918e(6): mov $0x1,%r13d
9194(5): mov 0x38(%rsp),%r12
9199(5): mov 0x20(%rsp),%r14
919e(5): jmp 0xfffffc1e(%rip)
91a3(5): nop 0x0(%rax,%rax,1)
91a8(5): mov 0x38(%rsp),%r15
91ad(9): mov $0x1,0x40(%rsp)
91b6(5): mov $0x0,0x48(%rsp)
91bb(5): mov $0x1,0x34(%rsp)
91c0(3): mov %r15,%rdi
91c3(5): call 0xffff8bdd(%rip)
91c8(4): lea 0x1(%rax),%rdx
91cc(3): mov %r15,%rsi
91cf(3): mov %rbx,%rdi
91d2(5): call 0xffff8e1e(%rip)
91d7(4): cmp $0x1,%r12d
91db(6): jz 0xfffffda5(%rip)
91e1(5): jmp 0xfffffad9(%rip)
91e6(a): nop 0x0(%rax,%rax,1)
91f0(6): mov $0x1,%r15d
91f6(5): jmp 0xfffffb61(%rip)
91fb(5): nop 0x0(%rax,%rax,1)
9200(5): mov 0x20(%rsp),%r14
9205(5): mov $0x0,0x48(%rsp)
920a(3): mov %r14,%r13
920d(3): sub %r12,%r13
9210(5): mov %r13,0x40(%rsp)
9215(5): jmp 0xfffffba7(%rip)
921a(6): nop 0x0(%rax,%rax,1)
9220(5): mov 0x20(%rsp),%rax
9225(5): mov $0x0,0x48(%rsp)
922a(5): mov $0x1,0x34(%rsp)
922f(3): sub %r15,%rax
9232(5): mov %rax,0x40(%rsp)
9237(2): jmp 0xffffff89(%rip)
9239(7): nop 0x0(%rax)
9240(5): mov $0x1,0x34(%rsp)
9245(5): jmp 0xfffffc74(%rip)
924a(3): mov %rbx,%r13
924d(5): jmp 0xfffffd98(%rip)
9252(5): call 0xffff8b5e(%rip)
9257(5): call 0x8b9(%rip)
925c(7): lea 0x12fad(%rip),%rcx
9263(7): lea 0x12f86(%rip),%rsi
926a(7): lea 0x12a59(%rip),%rdi
9271(5): mov $0x8e,%edx
9276(5): call 0xffff8bba(%rip)
927b(5): call 0xffff8ec8(%rip)
9280(7): lea 0x12f89(%rip),%rcx
9287(7): lea 0x12f62(%rip),%rsi
928e(7): lea 0x12a4c(%rip),%rdi
9295(5): mov $0xa9,%edx
929a(5): call 0xffff8b96(%rip)

"version_etc_arn" :
92a0(2): push %r15
92a2(2): push %r14
92a4(2): push %r13
92a6(2): push %r12
92a8(3): mov %r9,%r12
92ab(1): push %rbp
92ac(1): push %rbx
92ad(3): mov %rdi,%rbp
92b0(3): mov %r8,%rbx
92b3(4): sub $0x28,%rsp
92b7(3): test %rsi,%rsi
92ba(6): jz 0x11e(%rip)
92c0(3): mov %rdx,%r8
92c3(7): lea 0x12f58(%rip),%rdx
92ca(3): mov %rcx,%r9
92cd(2): xor %eax,%eax
92cf(3): mov %rsi,%rcx
92d2(5): mov $0x1,%esi
92d7(5): call 0xffff8db9(%rip)
92dc(7): lea 0x12f52(%rip),%rsi
92e3(2): xor %edi,%edi
92e5(5): mov $0x5,%edx
92ea(5): call 0xffff8a96(%rip)
92ef(7): lea 0x1326a(%rip),%rdx
92f6(3): mov %rax,%rcx
92f9(6): mov $0x7e3,%r8d
92ff(5): mov $0x1,%esi
9304(3): mov %rbp,%rdi
9307(2): xor %eax,%eax
9309(5): call 0xffff8d87(%rip)
930e(7): lea 0x12fab(%rip),%rsi
9315(2): xor %edi,%edi
9317(5): mov $0x5,%edx
931c(5): call 0xffff8a64(%rip)
9321(3): mov %rbp,%rsi
9324(3): mov %rax,%rdi
9327(5): call 0xffff8b89(%rip)
932c(4): cmp $0x9,%r12
9330(6): jnbe 0x340(%rip)
9336(7): lea 0x131df(%rip),%rdx
933d(4): movsxd 0x0(%rdx,%r12,4),%rax
9341(3): add %rdx,%rax
9344(2): jmp %rax
9346(a): nop 0x0(%rax,%rax,1)
9350(4): mov 0x38(%rbx),%r9
9354(4): mov 0x10(%rbx),%rax
9358(7): lea 0x130d1(%rip),%rsi
935f(4): mov 0x8(%rbx),%r8
9363(5): mov $0x5,%edx
9368(2): xor %edi,%edi
936a(4): mov 0x30(%rbx),%r13
936e(4): mov 0x28(%rbx),%r12
9372(5): mov %r9,0x10(%rsp)
9377(4): mov 0x20(%rbx),%r15
937b(4): mov 0x18(%rbx),%r14
937f(4): mov %rax,(%rsp)
9383(5): mov %r8,0x8(%rsp)
9388(3): mov (%rbx),%rbx
938b(5): call 0xffff89f5(%rip)
9390(4): sub $0x8,%rsp
9394(5): mov 0x18(%rsp),%r9
9399(3): mov %rax,%rdx
939c(3): mov %rbx,%rcx
939f(5): mov $0x1,%esi
93a4(3): mov %rbp,%rdi
93a7(2): xor %eax,%eax
93a9(2): push %r9
93ab(2): push %r13
93ad(2): push %r12
93af(2): push %r15
93b1(2): push %r14
93b3(5): mov 0x30(%rsp),%r9
93b8(5): mov 0x38(%rsp),%r8
93bd(5): call 0xffff8cd3(%rip)
93c2(4): add $0x30,%rsp
93c6(4): add $0x28,%rsp
93ca(1): pop %rbx
93cb(1): pop %rbp
93cc(2): pop %r12
93ce(2): pop %r13
93d0(2): pop %r14
93d2(2): pop %r15
93d4(1): ret near (%rsp)
93d5(3): nop (%rax)
93d8(3): mov %rcx,%r8
93db(3): mov %rdx,%rcx
93de(7): lea 0x12e49(%rip),%rdx
93e5(5): mov $0x1,%esi
93ea(2): xor %eax,%eax
93ec(5): call 0xffff8ca4(%rip)
93f1(5): jmp 0xfffffeeb(%rip)
93f6(a): nop 0x0(%rax,%rax,1)
9400(4): mov 0x40(%rbx),%r10
9404(4): mov 0x38(%rbx),%r9
9408(7): lea 0x13051(%rip),%rsi
940f(4): mov 0x10(%rbx),%rax
9413(4): mov 0x8(%rbx),%r8
9417(5): mov $0x5,%edx
941c(4): mov 0x30(%rbx),%r13
9420(4): mov 0x28(%rbx),%r12
9424(4): mov 0x20(%rbx),%r15
9428(4): mov 0x18(%rbx),%r14
942c(3): mov (%rbx),%rbx
942f(5): mov %r10,0x18(%rsp)
9434(5): mov %r9,0x10(%rsp)
9439(4): mov %rax,(%rsp)
943d(5): mov %r8,0x8(%rsp)
9442(2): xor %edi,%edi
9444(5): call 0xffff893c(%rip)
9449(5): mov 0x18(%rsp),%r10
944e(2): push %r10
9450(5): jmp 0xffffff44(%rip)
9455(3): nop (%rax)
9458(3): mov (%rbx),%rbx
945b(7): lea 0x12dd7(%rip),%rsi
9462(5): mov $0x5,%edx
9467(2): xor %edi,%edi
9469(5): call 0xffff8917(%rip)
946e(4): add $0x28,%rsp
9472(3): mov %rbx,%rcx
9475(3): mov %rbp,%rdi
9478(1): pop %rbx
9479(1): pop %rbp
947a(2): pop %r12
947c(2): pop %r13
947e(2): pop %r14
9480(2): pop %r15
9482(3): mov %rax,%rdx
9485(5): mov $0x1,%esi
948a(2): xor %eax,%eax
948c(5): jmp 0xffff8c04(%rip)
9491(7): nop 0x0(%rax)
9498(4): mov 0x8(%rbx),%r12
949c(7): lea 0x12da6(%rip),%rsi
94a3(3): mov (%rbx),%rbx
94a6(5): mov $0x5,%edx
94ab(2): xor %edi,%edi
94ad(5): call 0xffff88d3(%rip)
94b2(4): add $0x28,%rsp
94b6(3): mov %r12,%r8
94b9(3): mov %rbx,%rcx
94bc(3): mov %rbp,%rdi
94bf(3): mov %rax,%rdx
94c2(5): mov $0x1,%esi
94c7(1): pop %rbx
94c8(1): pop %rbp
94c9(2): pop %r12
94cb(2): pop %r13
94cd(2): pop %r14
94cf(2): pop %r15
94d1(2): xor %eax,%eax
94d3(5): jmp 0xffff8bbd(%rip)
94d8(8): nop 0x0(%rax,%rax,1)
94e0(4): mov 0x10(%rbx),%r13
94e4(4): mov 0x8(%rbx),%r12
94e8(7): lea 0x12d71(%rip),%rsi
94ef(3): mov (%rbx),%rbx
94f2(5): mov $0x5,%edx
94f7(2): xor %edi,%edi
94f9(5): call 0xffff8887(%rip)
94fe(4): add $0x28,%rsp
9502(3): mov %r13,%r9
9505(3): mov %r12,%r8
9508(3): mov %rbx,%rcx
950b(3): mov %rbp,%rdi
950e(3): mov %rax,%rdx
9511(1): pop %rbx
9512(1): pop %rbp
9513(2): pop %r12
9515(2): pop %r13
9517(2): pop %r14
9519(2): pop %r15
951b(5): mov $0x1,%esi
9520(2): xor %eax,%eax
9522(5): jmp 0xffff8b6e(%rip)
9527(9): nop 0x0(%rax,%rax,1)
9530(7): lea 0x12e59(%rip),%rsi
9537(5): mov $0x5,%edx
953c(2): xor %edi,%edi
953e(4): mov 0x18(%rbx),%r14
9542(4): mov 0x10(%rbx),%r13
9546(4): mov 0x8(%rbx),%r12
954a(3): mov (%rbx),%rbx
954d(5): call 0xffff8833(%rip)
9552(4): sub $0x8,%rsp
9556(2): push %r14
9558(3): mov %rax,%rdx
955b(3): mov %r13,%r9
955e(3): mov %r12,%r8
9561(3): mov %rbx,%rcx
9564(3): mov %rbp,%rdi
9567(5): mov $0x1,%esi
956c(2): xor %eax,%eax
956e(5): call 0xffff8b22(%rip)
9573(1): pop %rax
9574(1): pop %rdx
9575(4): add $0x28,%rsp
9579(1): pop %rbx
957a(1): pop %rbp
957b(2): pop %r12
957d(2): pop %r13
957f(2): pop %r14
9581(2): pop %r15
9583(1): ret near (%rsp)
9584(4): nop 0x0(%rax)
9588(4): mov 0x20(%rbx),%r15
958c(7): lea 0x12e1d(%rip),%rsi
9593(5): mov $0x5,%edx
9598(2): xor %edi,%edi
959a(4): mov 0x18(%rbx),%r14
959e(4): mov 0x10(%rbx),%r13
95a2(4): mov 0x8(%rbx),%r12
95a6(3): mov (%rbx),%rbx
95a9(5): call 0xffff87d7(%rip)
95ae(2): push %r15
95b0(2): jmp 0xffffffa6(%rip)
95b2(6): nop 0x0(%rax,%rax,1)
95b8(4): mov 0x8(%rbx),%r8
95bc(4): mov 0x28(%rbx),%r12
95c0(7): lea 0x12e11(%rip),%rsi
95c7(4): mov 0x20(%rbx),%r15
95cb(4): mov 0x18(%rbx),%r14
95cf(5): mov $0x5,%edx
95d4(4): mov 0x10(%rbx),%r13
95d8(2): xor %edi,%edi
95da(3): mov (%rbx),%rbx
95dd(4): mov %r8,(%rsp)
95e1(5): call 0xffff879f(%rip)
95e6(4): sub $0x8,%rsp
95ea(3): mov %r13,%r9
95ed(2): push %r12
95ef(2): push %r15
95f1(2): push %r14
95f3(5): mov 0x20(%rsp),%r8
95f8(3): mov %rbx,%rcx
95fb(3): mov %rax,%rdx
95fe(3): mov %rbp,%rdi
9601(5): mov $0x1,%esi
9606(2): xor %eax,%eax
9608(5): call 0xffff8a88(%rip)
960d(4): add $0x20,%rsp
9611(4): add $0x28,%rsp
9615(1): pop %rbx
9616(1): pop %rbp
9617(2): pop %r12
9619(2): pop %r13
961b(2): pop %r14
961d(2): pop %r15
961f(1): ret near (%rsp)
9620(4): mov 0x10(%rbx),%r9
9624(4): mov 0x30(%rbx),%r13
9628(7): lea 0x12dd1(%rip),%rsi
962f(4): mov 0x28(%rbx),%r12
9633(4): mov 0x20(%rbx),%r15
9637(5): mov $0x5,%edx
963c(4): mov 0x18(%rbx),%r14
9640(4): mov 0x8(%rbx),%r8
9644(2): xor %edi,%edi
9646(5): mov %r9,0x8(%rsp)
964b(3): mov (%rbx),%rbx
964e(4): mov %r8,(%rsp)
9652(5): call 0xffff872e(%rip)
9657(2): push %r13
9659(2): push %r12
965b(2): push %r15
965d(2): push %r14
965f(5): mov 0x28(%rsp),%r9
9664(2): jmp 0xffffff8f(%rip)
9666(a): nop 0x0(%rax,%rax,1)
9670(4): mov 0x40(%rbx),%r10
9674(4): mov 0x38(%rbx),%r9
9678(5): mov $0x5,%edx
967d(4): mov 0x10(%rbx),%rax
9681(4): mov 0x8(%rbx),%r8
9685(7): lea 0x12e0c(%rip),%rsi
968c(4): mov 0x30(%rbx),%r13
9690(4): mov 0x28(%rbx),%r12
9694(4): mov 0x20(%rbx),%r15
9698(4): mov 0x18(%rbx),%r14
969c(5): mov %r10,0x18(%rsp)
96a1(5): mov %r9,0x10(%rsp)
96a6(4): mov %rax,(%rsp)
96aa(5): mov %r8,0x8(%rsp)
96af(3): mov (%rbx),%rbx
96b2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
96c0(3): xor %r9d,%r9d
96c3(4): cmp $0x0,(%r8)
96c7(2): jz 0x14(%rip)
96c9(7): nop 0x0(%rax)
96d0(4): add $0x1,%r9
96d4(5): cmp $0x0,0x0(%r8,%r9,8)
96d9(2): jnz 0xfffffff7(%rip)
96db(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
96e0(4): sub $0x68,%rsp
96e4(3): mov %r8,%r10
96e7(3): xor %r9d,%r9d
96ea(9): mov $0x28,%rax
96f3(5): mov %rax,0x58(%rsp)
96f8(2): xor %eax,%eax
96fa(3): mov %rsp,%r8
96fd(3): nop (%rax)
9700(3): mov (%r10),%eax
9703(3): cmp $0x2f,%eax
9706(2): jnbe 0x44(%rip)
9708(3): mov %eax,%r11d
970b(4): add 0x10(%r10),%r11
970f(3): add $0x8,%eax
9712(3): mov %eax,(%r10)
9715(3): mov (%r11),%rax
9718(3): test %rax,%rax
971b(4): mov %rax,0x0(%r8,%r9,8)
971f(2): jz 0xc(%rip)
9721(4): add $0x1,%r9
9725(4): cmp $0xa,%r9
9729(2): jnz 0xffffffd7(%rip)
972b(5): call 0xfffffb75(%rip)
9730(5): mov 0x58(%rsp),%rax
9735(9): xor $0x28,%rax
973e(2): jnz 0x7(%rip)
9740(4): add $0x68,%rsp
9744(1): ret near (%rsp)
9745(5): call 0xffff866b(%rip)
974a(4): mov 0x8(%r10),%r11
974e(4): lea 0x8(%r11),%rax
9752(4): mov %rax,0x8(%r10)
9756(2): jmp 0xffffffbf(%rip)

"version_etc" :
9760(1): push %rbp
9761(1): push %rbx
9762(6): mov $0x20,%r10d
9768(3): xor %r11d,%r11d
976b(7): sub $0xb8,%rsp
9772(9): mov $0x28,%rax
977b(5): mov %rax,0x78(%rsp)
9780(2): xor %eax,%eax
9782(8): lea 0xd0(%rsp),%rax
978a(8): mov %r8,0xa0(%rsp)
9792(8): lea 0xd0(%rsp),%rbx
979a(5): lea 0x20(%rsp),%r8
979f(8): mov %r9,0xa8(%rsp)
97a7(8): mov $0x20,0x8(%rsp)
97af(5): mov %rax,0x10(%rsp)
97b4(8): lea 0x80(%rsp),%rax
97bc(3): xor %r9d,%r9d
97bf(5): mov %rax,0x18(%rsp)
97c4(3): mov %rax,%rbp
97c7(9): nop 0x0(%rax,%rax,1)
97d0(4): cmp $0x2f,%r10d
97d4(2): jnbe 0x58(%rip)
97d6(3): mov %r10d,%eax
97d9(6): mov $0x1,%r11d
97df(4): add $0x8,%r10d
97e3(3): add %rbp,%rax
97e6(3): mov (%rax),%rax
97e9(3): test %rax,%rax
97ec(4): mov %rax,0x0(%r8,%r9,8)
97f0(2): jz 0xc(%rip)
97f2(4): add $0x1,%r9
97f6(4): cmp $0xa,%r9
97fa(2): jnz 0xffffffd6(%rip)
97fc(3): test %r11b,%r11b
97ff(2): jnz 0x26(%rip)
9801(5): call 0xfffffa9f(%rip)
9806(5): mov 0x78(%rsp),%rax
980b(9): xor $0x28,%rax
9814(2): jnz 0xc(%rip)
9816(7): add $0xb8,%rsp
981d(1): pop %rbx
981e(1): pop %rbp
981f(1): ret near (%rsp)
9820(5): call 0xffff8590(%rip)
9825(5): mov %r10d,0x8(%rsp)
982a(2): jmp 0xffffffd7(%rip)
982c(3): mov %rbx,%rax
982f(4): add $0x8,%rbx
9833(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
9840(1): push %rbx
9841(7): lea 0x12a34(%rip),%rsi
9848(5): mov $0x5,%edx
984d(2): xor %edi,%edi
984f(5): call 0xffff8531(%rip)
9854(7): lea 0x12a36(%rip),%rdx
985b(3): mov %rax,%rsi
985e(5): mov $0x1,%edi
9863(2): xor %eax,%eax
9865(5): call 0xffff874b(%rip)
986a(7): lea 0x12a36(%rip),%rsi
9871(5): mov $0x5,%edx
9876(2): xor %edi,%edi
9878(5): call 0xffff8508(%rip)
987d(7): lea 0x11d5c(%rip),%rcx
9884(7): lea 0x11f47(%rip),%rdx
988b(3): mov %rax,%rsi
988e(5): mov $0x1,%edi
9893(2): xor %eax,%eax
9895(5): call 0xffff871b(%rip)
989a(7): mov 0x217827(%rip),%rbx
98a1(7): lea 0x12c30(%rip),%rsi
98a8(2): xor %edi,%edi
98aa(5): mov $0x5,%edx
98af(5): call 0xffff84d1(%rip)
98b4(3): mov %rbx,%rsi
98b7(3): mov %rax,%rdi
98ba(1): pop %rbx
98bb(5): jmp 0xffff85f5(%rip)

"xmalloc" :
98c0(1): push %rbx
98c1(3): mov %rdi,%rbx
98c4(5): call 0xffff865c(%rip)
98c9(3): test %rax,%rax
98cc(2): jnz 0x7(%rip)
98ce(3): test %rbx,%rbx
98d1(2): jnz 0x4(%rip)
98d3(1): pop %rbx
98d4(1): ret near (%rsp)
98d5(5): call 0x23b(%rip)

"xnmalloc" :
98e0(3): mov %rdi,%rax
98e3(3): mul %rax,%rsi,%rdx
98e6(3): mov %rax,%rdi
98e9(3): seto %al
98ec(3): test %rdi,%rdi
98ef(2): js 0xc(%rip)
98f1(3): movzx %al,%eax
98f4(3): test %rax,%rax
98f7(2): jnz 0x4(%rip)
98f9(2): jmp 0xffffffc7(%rip)
98fb(4): sub $0x8,%rsp
98ff(5): call 0x211(%rip)

"xrealloc" :
9920(3): test %rsi,%rsi
9923(1): push %rbx
9924(3): mov %rsi,%rbx
9927(2): jnz 0x7(%rip)
9929(3): test %rdi,%rdi
992c(2): jnz 0x1c(%rip)
992e(3): mov %rbx,%rsi
9931(5): call 0xffff865f(%rip)
9936(3): test %rax,%rax
9939(2): jnz 0x7(%rip)
993b(3): test %rbx,%rbx
993e(2): jnz 0x13(%rip)
9940(1): pop %rbx
9941(1): ret near (%rsp)
9942(6): nop 0x0(%rax,%rax,1)
9948(5): call 0xffff8318(%rip)
994d(2): xor %eax,%eax
994f(1): pop %rbx
9950(1): ret near (%rsp)
9951(5): call 0x1bf(%rip)

"xnrealloc" :
9960(3): mov %rsi,%rax
9963(3): mul %rax,%rdx,%rdx
9966(3): mov %rax,%rsi
9969(3): seto %al
996c(3): test %rsi,%rsi
996f(2): js 0xc(%rip)
9971(3): movzx %al,%eax
9974(3): test %rax,%rax
9977(2): jnz 0x4(%rip)
9979(2): jmp 0xffffffa7(%rip)
997b(4): sub $0x8,%rsp
997f(5): call 0x191(%rip)

"x2nrealloc" :
9990(3): test %rdi,%rdi
9993(3): mov %rdx,%r9
9996(3): mov (%rsi),%rcx
9999(2): jz 0x37(%rip)
999b(2): xor %edx,%edx
999d(a): mov $0x6148914691236517204,%rax
99a7(3): div %r9,%rax
99aa(3): cmp %rcx,%rax
99ad(2): jbe 0x3e(%rip)
99af(3): mov %rcx,%rax
99b2(3): shr $0x1,%rax
99b5(5): lea 0x1(%rax,%rcx,1),%rcx
99ba(3): mov %rcx,(%rsi)
99bd(4): imul %r9,%rcx
99c1(3): mov %rcx,%rsi
99c4(5): jmp 0xffffff5c(%rip)
99c9(7): nop 0x0(%rax)
99d0(3): test %rcx,%rcx
99d3(2): jz 0x25(%rip)
99d5(3): mov %rcx,%rax
99d8(3): mul %rax,%r9,%rdx
99db(3): seto %dl
99de(3): test %rax,%rax
99e1(3): movzx %dl,%edx
99e4(2): js 0x7(%rip)
99e6(3): test %rdx,%rdx
99e9(2): jz 0xffffffd1(%rip)
99eb(4): sub $0x8,%rsp
99ef(5): call 0x121(%rip)
99f4(4): nop 0x0(%rax)
99f8(2): xor %edx,%edx
99fa(5): mov $0x80,%eax
99ff(3): xor %r8d,%r8d
9a02(3): div %r9,%rax
9a05(3): test %rax,%rax
9a08(4): setz %r8b
9a0c(4): lea 0x0(%r8,%rax,1),%rcx
9a10(2): jmp 0xffffffc5(%rip)

"x2realloc" :
9a20(3): test %rdi,%rdi
9a23(3): mov (%rsi),%rax
9a26(2): jz 0x2a(%rip)
9a28(a): mov $0x6148914691236517203,%rdx
9a32(3): cmp %rdx,%rax
9a35(2): jnbe 0x2c(%rip)
9a37(3): mov %rax,%rdx
9a3a(3): shr $0x1,%rdx
9a3d(5): lea 0x1(%rdx,%rax,1),%rax
9a42(3): mov %rax,(%rsi)
9a45(3): mov %rax,%rsi
9a48(5): jmp 0xfffffed8(%rip)
9a4d(3): nop (%rax)
9a50(3): test %rax,%rax
9a53(5): mov $0x80,%edx
9a58(4): cmove %rdx,%rax
9a5c(3): test %rax,%rax
9a5f(2): jns 0xffffffe3(%rip)
9a61(4): sub $0x8,%rsp
9a65(5): call 0xab(%rip)

"xzalloc" :
9a70(1): push %rbx
9a71(3): mov %rdi,%rbx
9a74(5): call 0xfffffe4c(%rip)
9a79(3): mov %rbx,%rdx
9a7c(2): xor %esi,%esi
9a7e(3): mov %rax,%rdi
9a81(1): pop %rbx
9a82(5): jmp 0xffff83be(%rip)

"xcalloc" :
9a90(3): mov %rdi,%rax
9a93(4): sub $0x8,%rsp
9a97(3): mul %rax,%rsi,%rdx
9a9a(3): seto %dl
9a9d(3): test %rax,%rax
9aa0(2): js 0x19(%rip)
9aa2(3): movzx %dl,%edx
9aa5(3): test %rdx,%rdx
9aa8(2): jnz 0x11(%rip)
9aaa(5): call 0xffff8416(%rip)
9aaf(3): test %rax,%rax
9ab2(2): jz 0x7(%rip)
9ab4(4): add $0x8,%rsp
9ab8(1): ret near (%rsp)
9ab9(5): call 0x57(%rip)

"xmemdup" :
9ac0(1): push %rbp
9ac1(1): push %rbx
9ac2(3): mov %rdi,%rbp
9ac5(3): mov %rsi,%rdi
9ac8(3): mov %rsi,%rbx
9acb(4): sub $0x8,%rsp
9acf(5): call 0xfffffdf1(%rip)
9ad4(4): add $0x8,%rsp
9ad8(3): mov %rbx,%rdx
9adb(3): mov %rbp,%rsi
9ade(1): pop %rbx
9adf(1): pop %rbp
9ae0(3): mov %rax,%rdi
9ae3(5): jmp 0xffff83fd(%rip)

"xstrdup" :
9af0(1): push %rbx
9af1(3): mov %rdi,%rbx
9af4(5): call 0xffff82ac(%rip)
9af9(3): mov %rbx,%rdi
9afc(4): lea 0x1(%rax),%rsi
9b00(1): pop %rbx
9b01(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
9b10(7): lea 0x12a78(%rip),%rsi
9b17(4): sub $0x8,%rsp
9b1b(5): mov $0x5,%edx
9b20(2): xor %edi,%edi
9b22(5): call 0xffff825e(%rip)
9b27(6): mov 0x21751b(%rip),%edi
9b2d(7): lea 0x11ee0(%rip),%rdx
9b34(3): mov %rax,%rcx
9b37(2): xor %esi,%esi
9b39(2): xor %eax,%eax
9b3b(5): call 0xffff84c5(%rip)
9b40(5): call 0xffff8130(%rip)

"xmem_cd_iconv" :
9b50(1): push %rbx
9b51(5): call 0x10a5f(%rip)
9b56(2): test %eax,%eax
9b58(2): mov %eax,%ebx
9b5a(2): js 0x6(%rip)
9b5c(2): mov %ebx,%eax
9b5e(1): pop %rbx
9b5f(1): ret near (%rsp)
9b60(5): call 0xffff8120(%rip)
9b65(3): cmp $0xc,(%rax)
9b68(2): jnz 0xfffffff4(%rip)
9b6a(5): call 0xffffffa6(%rip)

"xstr_cd_iconv" :
9b70(1): push %rbx
9b71(5): call 0x10cff(%rip)
9b76(3): test %rax,%rax
9b79(3): mov %rax,%rbx
9b7c(2): jz 0xc(%rip)
9b7e(3): mov %rbx,%rax
9b81(1): pop %rbx
9b82(1): ret near (%rsp)
9b83(5): nop 0x0(%rax,%rax,1)
9b88(5): call 0xffff80f8(%rip)
9b8d(3): cmp $0xc,(%rax)
9b90(2): jnz 0xffffffee(%rip)
9b92(5): call 0xffffff7e(%rip)

"xstr_iconv" :
9ba0(1): push %rbx
9ba1(5): call 0x10f1f(%rip)
9ba6(3): test %rax,%rax
9ba9(3): mov %rax,%rbx
9bac(2): jz 0xc(%rip)
9bae(3): mov %rbx,%rax
9bb1(1): pop %rbx
9bb2(1): ret near (%rsp)
9bb3(5): nop 0x0(%rax,%rax,1)
9bb8(5): call 0xffff80c8(%rip)
9bbd(3): cmp $0xc,(%rax)
9bc0(2): jnz 0xffffffee(%rip)
9bc2(5): call 0xffffff4e(%rip)

"xstrtoimax" :
9bd0(2): push %r15
9bd2(2): push %r14
9bd4(2): push %r13
9bd6(2): push %r12
9bd8(1): push %rbp
9bd9(1): push %rbx
9bda(4): sub $0x28,%rsp
9bde(9): mov $0x28,%rax
9be7(5): mov %rax,0x18(%rsp)
9bec(2): xor %eax,%eax
9bee(3): cmp $0x24,%edx
9bf1(6): jnbe 0x66e(%rip)
9bf7(5): lea 0x10(%rsp),%rax
9bfc(3): test %rsi,%rsi
9bff(3): mov %rsi,%rbx
9c02(3): mov %rdi,%r12
9c05(2): mov %edx,%ebp
9c07(3): mov %rcx,%r14
9c0a(4): cmove %rax,%rbx
9c0e(3): mov %r8,%r15
9c11(5): call 0xffff806f(%rip)
9c16(2): xor %ecx,%ecx
9c18(2): mov %ebp,%edx
9c1a(6): mov $0x0,(%rax)
9c20(3): mov %rbx,%rsi
9c23(3): mov %r12,%rdi
9c26(3): mov %rax,%r13
9c29(5): call 0xffff8107(%rip)
9c2e(3): mov (%rbx),%rcx
9c31(3): mov %rax,%rbp
9c34(3): cmp %r12,%rcx
9c37(2): jz 0x61(%rip)
9c39(4): mov 0x0(%r13),%eax
9c3d(2): test %eax,%eax
9c3f(2): jnz 0x41(%rip)
9c41(3): xor %r12d,%r12d
9c44(3): test %r15,%r15
9c47(2): jz 0xf(%rip)
9c49(4): movzx (%rcx),%r13d
9c4d(3): test %r13b,%r13b
9c50(6): jnz 0x83(%rip)
9c56(3): mov %rbp,(%r14)
9c59(5): mov 0x18(%rsp),%rdi
9c5e(9): xor $0x28,%rdi
9c67(3): mov %r12d,%eax
9c6a(6): jnz 0x614(%rip)
9c70(4): add $0x28,%rsp
9c74(1): pop %rbx
9c75(1): pop %rbp
9c76(2): pop %r12
9c78(2): pop %r13
9c7a(2): pop %r14
9c7c(2): pop %r15
9c7e(1): ret near (%rsp)
9c7f(1): nop 
9c80(3): cmp $0x22,%eax
9c83(6): mov $0x4,%r12d
9c89(2): jnz 0xffffffd0(%rip)
9c8b(6): mov $0x1,%r12d
9c91(2): jmp 0xffffffb3(%rip)
9c93(5): nop 0x0(%rax,%rax,1)
9c98(3): test %r15,%r15
9c9b(6): jz 0x495(%rip)
9ca1(4): movzx (%rcx),%r13d
9ca5(5): mov %rcx,0x8(%rsp)
9caa(6): mov $0x4,%r12d
9cb0(3): test %r13b,%r13b
9cb3(2): jz 0xffffffa6(%rip)
9cb5(4): movsx %r13b,%esi
9cb9(3): mov %r15,%rdi
9cbc(5): call 0xffff8134(%rip)
9cc1(3): test %rax,%rax
9cc4(5): mov 0x8(%rsp),%rcx
9cc9(2): jz 0xffffff90(%rip)
9ccb(5): mov $0x1,%ebp
9cd0(3): xor %r12d,%r12d
9cd3(4): movsx %r13b,%esi
9cd7(3): mov %r15,%rdi
9cda(5): mov %rcx,0x8(%rsp)
9cdf(5): call 0xffff8111(%rip)
9ce4(3): test %rax,%rax
9ce7(5): mov 0x8(%rsp),%rcx
9cec(2): jz 0x5c(%rip)
9cee(4): lea 0xffffffbb(%r13),%eax
9cf2(2): cmp $0x2f,%al
9cf4(2): jnbe 0x64(%rip)
9cf6(a): mov $0x142129060940101,%rdx
9d00(4): bt %rax,%rdx
9d04(2): jnb 0x54(%rip)
9d06(5): mov $0x30,%esi
9d0b(3): mov %r15,%rdi
9d0e(5): mov %rcx,0x8(%rsp)
9d13(5): call 0xffff80dd(%rip)
9d18(3): test %rax,%rax
9d1b(5): mov 0x8(%rsp),%rcx
9d20(2): jz 0x38(%rip)
9d22(4): movzx 0x1(%rcx),%eax
9d26(2): cmp $0x44,%al
9d28(2): jz 0xe(%rip)
9d2a(2): cmp $0x69,%al
9d2c(6): jz 0x4ec(%rip)
9d32(2): cmp $0x42,%al
9d34(2): jnz 0x24(%rip)
9d36(5): mov $0x2,%edi
9d3b(5): mov $0x3e8,%eax
9d40(2): jmp 0x22(%rip)
9d42(6): nop 0x0(%rax,%rax,1)
9d48(3): mov %rbp,(%r14)
9d4b(4): or $0x2,%r12d
9d4f(5): jmp 0xffffff0a(%rip)
9d54(4): nop 0x0(%rax)
9d58(5): mov $0x1,%edi
9d5d(5): mov $0x400,%eax
9d62(4): sub $0x42,%r13d
9d66(4): cmp $0x35,%r13b
9d6a(2): jnbe 0xffffffde(%rip)
9d6c(7): lea 0x12875(%rip),%rsi
9d73(4): movzx %r13b,%r13d
9d77(4): movsxd 0x0(%rsi,%r13,4),%rdx
9d7b(3): add %rsi,%rdx
9d7e(2): jmp %rdx
9d80(a): mov $0x-9223372036854775808,%r8
9d8a(3): movsxd %eax,%rsi
9d8d(3): mov %r8,%rax
9d90(2): cdq %rax
9d92(3): idiv %rsi,%rax
9d95(3): cmp %rax,%rbp
9d98(3): mov %rax,%r9
9d9b(6): jl 0x4aa(%rip)
9da1(a): mov $0x9223372036854775807,%r10
9dab(3): mov %r10,%rax
9dae(2): cdq %rax
9db0(3): idiv %rsi,%rax
9db3(3): cmp %rax,%rbp
9db6(6): jnle 0x49c(%rip)
9dbc(4): imul %rsi,%rbp
9dc0(3): cmp %rbp,%r9
9dc3(6): jnle 0x482(%rip)
9dc9(3): cmp %rbp,%rax
9dcc(6): jl 0x486(%rip)
9dd2(4): imul %rsi,%rbp
9dd6(2): xor %eax,%eax
9dd8(3): or %eax,%r12d
9ddb(5): nop 0x0(%rax,%rax,1)
9de0(3): movsxd %edi,%rax
9de3(3): add %rax,%rcx
9de6(3): mov %r12d,%eax
9de9(3): or $0x2,%eax
9dec(3): mov %rcx,(%rbx)
9def(3): cmp $0x0,(%rcx)
9df2(4): cmovne %eax,%r12d
9df6(5): jmp 0xfffffe60(%rip)
9dfb(5): nop 0x0(%rax,%rax,1)
9e00(a): mov $0x-4611686018427387904,%rax
9e0a(3): cmp %rax,%rbp
9e0d(6): jl 0x333(%rip)
9e13(a): mov $0x4611686018427387903,%rax
9e1d(3): cmp %rax,%rbp
9e20(6): jnle 0x3e0(%rip)
9e26(3): add %rbp,%rbp
9e29(2): jmp 0xffffffb7(%rip)
9e2b(5): nop 0x0(%rax,%rax,1)
9e30(a): mov $0x-18014398509481984,%rax
9e3a(3): cmp %rax,%rbp
9e3d(6): jl 0x303(%rip)
9e43(a): mov $0x18014398509481983,%rax
9e4d(3): cmp %rax,%rbp
9e50(6): jnle 0x3b0(%rip)
9e56(4): shl/sal $0x9,%rbp
9e5a(2): jmp 0xffffff86(%rip)
9e5c(4): nop 0x0(%rax)
9e60(3): movsxd %eax,%rsi
9e63(a): mov $0x-9223372036854775808,%rax
9e6d(6): mov $0x7,%r8d
9e73(2): cdq %rax
9e75(3): xor %r11d,%r11d
9e78(a): mov $0x9223372036854775807,%r9
9e82(3): idiv %rsi,%rax
9e85(3): mov %rax,%r10
9e88(2): jmp 0x27(%rip)
9e8a(6): nop 0x0(%rax,%rax,1)
9e90(3): mov %r9,%rax
9e93(2): cdq %rax
9e95(3): idiv %rsi,%rax
9e98(3): cmp %rbp,%rax
9e9b(6): jl 0x2ed(%rip)
9ea1(4): imul %rsi,%rbp
9ea5(4): sub $0x1,%r8d
9ea9(6): jz 0x127(%rip)
9eaf(3): cmp %rbp,%r10
9eb2(2): jle 0xffffffde(%rip)
9eb4(6): mov $0x1,%r11d
9eba(a): mov $0x-9223372036854775808,%rbp
9ec4(2): jmp 0xffffffe1(%rip)
9ec6(a): nop 0x0(%rax,%rax,1)
9ed0(3): movsxd %eax,%rsi
9ed3(a): mov $0x-9223372036854775808,%rax
9edd(6): mov $0x8,%r8d
9ee3(2): cdq %rax
9ee5(3): xor %r11d,%r11d
9ee8(a): mov $0x9223372036854775807,%r9
9ef2(3): idiv %rsi,%rax
9ef5(3): mov %rax,%r10
9ef8(2): jmp 0x27(%rip)
9efa(6): nop 0x0(%rax,%rax,1)
9f00(3): mov %r9,%rax
9f03(2): cdq %rax
9f05(3): idiv %rsi,%rax
9f08(3): cmp %rbp,%rax
9f0b(6): jl 0x24d(%rip)
9f11(4): imul %rsi,%rbp
9f15(4): sub $0x1,%r8d
9f19(6): jz 0xb7(%rip)
9f1f(3): cmp %rbp,%r10
9f22(2): jle 0xffffffde(%rip)
9f24(6): mov $0x1,%r11d
9f2a(a): mov $0x-9223372036854775808,%rbp
9f34(2): jmp 0xffffffe1(%rip)
9f36(a): nop 0x0(%rax,%rax,1)
9f40(a): mov $0x-9223372036854775808,%r8
9f4a(3): movsxd %eax,%rsi
9f4d(3): mov %r8,%rax
9f50(2): cdq %rax
9f52(3): idiv %rsi,%rax
9f55(3): cmp %rax,%rbp
9f58(6): jl 0x1e8(%rip)
9f5e(4): sub $0x1,%r8
9f62(3): mov %r8,%rax
9f65(2): cdq %rax
9f67(3): idiv %rsi,%rax
9f6a(3): cmp %rax,%rbp
9f6d(6): jnle 0x293(%rip)
9f73(4): imul %rsi,%rbp
9f77(5): jmp 0xfffffe69(%rip)
9f7c(4): nop 0x0(%rax)
9f80(3): movsxd %eax,%rsi
9f83(a): mov $0x-9223372036854775808,%rax
9f8d(6): mov $0x3,%r8d
9f93(2): cdq %rax
9f95(3): xor %r11d,%r11d
9f98(a): mov $0x9223372036854775807,%r9
9fa2(3): idiv %rsi,%rax
9fa5(3): mov %rax,%r10
9fa8(3): cmp %rbp,%r10
9fab(6): jnle 0x1f5(%rip)
9fb1(3): mov %r9,%rax
9fb4(2): cdq %rax
9fb6(3): idiv %rsi,%rax
9fb9(3): cmp %rbp,%rax
9fbc(6): jl 0x274(%rip)
9fc2(4): imul %rsi,%rbp
9fc6(4): sub $0x1,%r8d
9fca(2): jnz 0xffffffde(%rip)
9fcc(4): nop 0x0(%rax)
9fd0(3): or %r11d,%r12d
9fd3(5): jmp 0xfffffe0d(%rip)
9fd8(8): nop 0x0(%rax,%rax,1)
9fe0(3): movsxd %eax,%rsi
9fe3(a): mov $0x-9223372036854775808,%rax
9fed(6): mov $0x6,%r8d
9ff3(2): cdq %rax
9ff5(3): xor %r11d,%r11d
9ff8(a): mov $0x9223372036854775807,%r9
a002(3): idiv %rsi,%rax
a005(3): mov %rax,%r10
a008(2): jmp 0x23(%rip)
a00a(6): nop 0x0(%rax,%rax,1)
a010(3): mov %r9,%rax
a013(2): cdq %rax
a015(3): idiv %rsi,%rax
a018(3): cmp %rbp,%rax
a01b(6): jl 0x19d(%rip)
a021(4): imul %rsi,%rbp
a025(4): sub $0x1,%r8d
a029(2): jz 0xffffffa7(%rip)
a02b(3): cmp %rbp,%r10
a02e(2): jle 0xffffffe2(%rip)
a030(6): mov $0x1,%r11d
a036(a): mov $0x-9223372036854775808,%rbp
a040(2): jmp 0xffffffe5(%rip)
a042(6): nop 0x0(%rax,%rax,1)
a048(3): movsxd %eax,%rsi
a04b(a): mov $0x-9223372036854775808,%rax
a055(6): mov $0x5,%r8d
a05b(2): cdq %rax
a05d(3): xor %r11d,%r11d
a060(a): mov $0x9223372036854775807,%r9
a06a(3): idiv %rsi,%rax
a06d(3): mov %rax,%r10
a070(2): jmp 0x27(%rip)
a072(6): nop 0x0(%rax,%rax,1)
a078(3): mov %r9,%rax
a07b(2): cdq %rax
a07d(3): idiv %rsi,%rax
a080(3): cmp %rbp,%rax
a083(6): jl 0x14d(%rip)
a089(4): imul %rsi,%rbp
a08d(4): sub $0x1,%r8d
a091(6): jz 0xffffff3f(%rip)
a097(3): cmp %rbp,%r10
a09a(2): jle 0xffffffde(%rip)
a09c(6): mov $0x1,%r11d
a0a2(a): mov $0x-9223372036854775808,%rbp
a0ac(2): jmp 0xffffffe1(%rip)
a0ae(2): nop 
a0b0(a): mov $0x-9007199254740992,%rax
a0ba(3): cmp %rax,%rbp
a0bd(6): jl 0x83(%rip)
a0c3(a): mov $0x9007199254740991,%rax
a0cd(3): cmp %rax,%rbp
a0d0(6): jnle 0x130(%rip)
a0d6(4): shl/sal $0xa,%rbp
a0da(5): jmp 0xfffffd06(%rip)
a0df(1): nop 
a0e0(3): movsxd %eax,%rsi
a0e3(a): mov $0x-9223372036854775808,%rax
a0ed(6): mov $0x4,%r8d
a0f3(2): cdq %rax
a0f5(3): xor %r11d,%r11d
a0f8(a): mov $0x9223372036854775807,%r9
a102(3): idiv %rsi,%rax
a105(3): mov %rax,%r10
a108(3): cmp %rbp,%r10
a10b(2): jnle 0x65(%rip)
a10d(3): mov %r9,%rax
a110(2): cdq %rax
a112(3): idiv %rsi,%rax
a115(3): cmp %rbp,%rax
a118(6): jl 0xd0(%rip)
a11e(4): imul %rsi,%rbp
a122(4): sub $0x1,%r8d
a126(2): jnz 0xffffffe2(%rip)
a128(5): jmp 0xfffffea8(%rip)
a12d(3): nop (%rax)
a130(6): mov $0x4,%r12d
a136(5): jmp 0xfffffb23(%rip)
a13b(5): nop 0x0(%rax,%rax,1)
a140(6): mov $0x1,%r12d
a146(a): mov $0x-9223372036854775808,%rbp
a150(5): jmp 0xfffffc90(%rip)
a155(3): nop (%rax)
a158(6): mov $0x1,%r11d
a15e(a): mov $0x9223372036854775807,%rbp
a168(5): jmp 0xfffffdad(%rip)
a16d(3): nop (%rax)
a170(6): mov $0x1,%r11d
a176(a): mov $0x-9223372036854775808,%rbp
a180(2): jmp 0xffffffa2(%rip)
a182(6): nop 0x0(%rax,%rax,1)
a188(6): mov $0x1,%r11d
a18e(a): mov $0x9223372036854775807,%rbp
a198(5): jmp 0xfffffd0d(%rip)
a19d(3): nop (%rax)
a1a0(6): mov $0x1,%r11d
a1a6(a): mov $0x-9223372036854775808,%rbp
a1b0(5): jmp 0xfffffe16(%rip)
a1b5(3): nop (%rax)
a1b8(6): mov $0x1,%r11d
a1be(a): mov $0x9223372036854775807,%rbp
a1c8(5): jmp 0xfffffe5d(%rip)
a1cd(3): nop (%rax)
a1d0(6): mov $0x1,%r11d
a1d6(a): mov $0x9223372036854775807,%rbp
a1e0(5): jmp 0xfffffead(%rip)
a1e5(3): nop (%rax)
a1e8(6): mov $0x1,%r11d
a1ee(a): mov $0x9223372036854775807,%rbp
a1f8(5): jmp 0xffffff2a(%rip)
a1fd(3): nop (%rax)
a200(6): mov $0x1,%r12d
a206(a): mov $0x9223372036854775807,%rbp
a210(5): jmp 0xfffffbd0(%rip)
a215(3): nop (%rax)
a218(2): xor %edi,%edi
a21a(4): cmp $0x42,0x2(%rcx)
a21e(5): mov $0x400,%eax
a223(4): setz %dil
a227(4): lea 0x1(%rdi,%rdi,1),%edi
a22b(5): jmp 0xfffffb37(%rip)
a230(6): mov $0x1,%r11d
a236(a): mov $0x9223372036854775807,%rbp
a240(5): jmp 0xfffffd86(%rip)
a245(5): mov $0x1,%eax
a24a(3): mov %r8,%rbp
a24d(5): jmp 0xfffffb8b(%rip)
a252(5): mov $0x1,%eax
a257(3): mov %r10,%rbp
a25a(5): jmp 0xfffffb7e(%rip)
a25f(7): lea 0x1245a(%rip),%rcx
a266(7): lea 0x12333(%rip),%rsi
a26d(7): lea 0x1234c(%rip),%rdi
a274(5): mov $0x54,%edx
a279(5): call 0xffff7bb7(%rip)
a27e(5): call 0xffff7b32(%rip)

"rpl_fclose" :
a290(2): push %r12
a292(1): push %rbp
a293(1): push %rbx
a294(3): mov %rdi,%rbx
a297(5): call 0xffff7c59(%rip)
a29c(2): test %eax,%eax
a29e(3): mov %rbx,%rdi
a2a1(2): js 0x56(%rip)
a2a3(5): call 0xffff7ccd(%rip)
a2a8(2): test %eax,%eax
a2aa(2): jnz 0x2e(%rip)
a2ac(3): mov %rbx,%rdi
a2af(5): call 0x61(%rip)
a2b4(2): test %eax,%eax
a2b6(2): jz 0x3e(%rip)
a2b8(5): call 0xffff79c8(%rip)
a2bd(3): mov (%rax),%r12d
a2c0(3): mov %rbx,%rdi
a2c3(3): mov %rax,%rbp
a2c6(5): call 0xffff7a8a(%rip)
a2cb(3): test %r12d,%r12d
a2ce(2): jnz 0x32(%rip)
a2d0(1): pop %rbx
a2d1(1): pop %rbp
a2d2(2): pop %r12
a2d4(1): ret near (%rsp)
a2d5(3): nop (%rax)
a2d8(3): mov %rbx,%rdi
a2db(5): call 0xffff7c15(%rip)
a2e0(2): xor %esi,%esi
a2e2(5): mov $0x1,%edx
a2e7(2): mov %eax,%edi
a2e9(5): call 0xffff7b37(%rip)
a2ee(4): cmp $0xffffffff,%rax
a2f2(2): jnz 0xffffffba(%rip)
a2f4(3): mov %rbx,%rdi
a2f7(1): pop %rbx
a2f8(1): pop %rbp
a2f9(2): pop %r12
a2fb(5): jmp 0xffff7a55(%rip)
a300(4): mov %r12d,0x0(%rbp)
a304(5): mov $0xffffffff,%eax
a309(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
a310(3): test %rdi,%rdi
a313(1): push %rbx
a314(3): mov %rdi,%rbx
a317(2): jz 0x13(%rip)
a319(5): call 0xffff7c57(%rip)
a31e(2): test %eax,%eax
a320(2): jz 0xa(%rip)
a322(6): test $0x100,(%rbx)
a328(2): jnz 0x10(%rip)
a32a(3): mov %rbx,%rdi
a32d(1): pop %rbx
a32e(5): jmp 0xffff7c12(%rip)
a333(5): nop 0x0(%rax,%rax,1)
a338(3): mov %rbx,%rdi
a33b(5): mov $0x1,%edx
a340(2): xor %esi,%esi
a342(5): call 0xe(%rip)
a347(3): mov %rbx,%rdi
a34a(1): pop %rbx
a34b(5): jmp 0xffff7bf5(%rip)

"rpl_fseeko" :
a350(4): mov 0x8(%rdi),%rax
a354(4): cmp %rax,0x10(%rdi)
a358(2): jz 0x8(%rip)
a35a(5): jmp 0xffff7cc6(%rip)
a35f(1): nop 
a360(4): mov 0x20(%rdi),%rax
a364(4): cmp %rax,0x28(%rdi)
a368(2): jnz 0xfffffff2(%rip)
a36a(5): cmp $0x0,0x48(%rdi)
a36f(2): jnz 0xffffffeb(%rip)
a371(2): push %r12
a373(1): push %rbp
a374(3): mov %edx,%r12d
a377(1): push %rbx
a378(3): mov %rsi,%rbp
a37b(3): mov %rdi,%rbx
a37e(5): call 0xffff7b72(%rip)
a383(3): mov %r12d,%edx
a386(3): mov %rbp,%rsi
a389(2): mov %eax,%edi
a38b(5): call 0xffff7a95(%rip)
a390(4): cmp $0xffffffff,%rax
a394(2): jz 0xe(%rip)
a396(3): and $0xef,(%rbx)
a399(7): mov %rax,0x90(%rbx)
a3a0(2): xor %eax,%eax
a3a2(1): pop %rbx
a3a3(1): pop %rbp
a3a4(2): pop %r12
a3a6(1): ret near (%rsp)

"rpl_mbrtowc" :
a3b0(2): push %r13
a3b2(2): push %r12
a3b4(3): mov %rsi,%r13
a3b7(1): push %rbp
a3b8(1): push %rbx
a3b9(3): mov %rdi,%rbx
a3bc(3): mov %rdx,%r12
a3bf(4): sub $0x18,%rsp
a3c3(9): mov $0x28,%rax
a3cc(5): mov %rax,0x8(%rsp)
a3d1(2): xor %eax,%eax
a3d3(5): lea 0x4(%rsp),%rax
a3d8(3): test %rdi,%rdi
a3db(4): cmove %rax,%rbx
a3df(3): mov %rbx,%rdi
a3e2(5): call 0xffff79ee(%rip)
a3e7(4): cmp $0xfffffffd,%rax
a3eb(3): mov %rax,%rbp
a3ee(2): jbe 0x22(%rip)
a3f0(3): test %r12,%r12
a3f3(2): jz 0x1d(%rip)
a3f5(2): xor %edi,%edi
a3f7(5): call 0xe329(%rip)
a3fc(2): test %al,%al
a3fe(2): jnz 0x12(%rip)
a400(5): movzx 0x0(%r13),%eax
a405(5): mov $0x1,%ebp
a40a(2): mov %eax,(%rbx)
a40c(4): nop 0x0(%rax)
a410(5): mov 0x8(%rsp),%rdx
a415(9): xor $0x28,%rdx
a41e(3): mov %rbp,%rax
a421(2): jnz 0xd(%rip)
a423(4): add $0x18,%rsp
a427(1): pop %rbx
a428(1): pop %rbp
a429(2): pop %r12
a42b(2): pop %r13
a42d(1): ret near (%rsp)
a42e(5): call 0xffff7982(%rip)

"peek_token_bracket" :
a440(4): mov 0x48(%rsi),%rax
a444(4): cmp %rax,0x68(%rsi)
a448(2): jle 0x58(%rip)
a44a(4): mov 0x8(%rsi),%r8
a44e(7): cmp $0x1,0x90(%rsi)
a455(5): movzx 0x0(%r8,%rax,1),%ecx
a45a(2): mov %cl,(%rdi)
a45c(2): jle 0x17(%rip)
a45e(4): cmp 0x30(%rsi),%rax
a462(2): jz 0x11(%rip)
a464(4): mov 0x10(%rsi),%r9
a468(5): cmp $0xff,0x0(%r9,%rax,4)
a46d(6): jz 0x82(%rip)
a473(3): cmp $0x5c,%cl
a476(2): jz 0x6a(%rip)
a478(3): cmp $0x5b,%cl
a47b(2): jz 0x35(%rip)
a47d(3): cmp $0x5d,%cl
a480(6): jz 0xa0(%rip)
a486(3): cmp $0x5e,%cl
a489(6): jz 0x87(%rip)
a48f(3): cmp $0x2d,%cl
a492(2): jnz 0x5d(%rip)
a494(4): mov $0x16,0x8(%rdi)
a498(5): mov $0x1,%eax
a49d(1): ret near (%rsp)
a49e(2): nop 
a4a0(4): mov $0x2,0x8(%rdi)
a4a4(2): xor %eax,%eax
a4a6(1): ret near (%rsp)
a4a7(9): nop 0x0(%rax,%rax,1)
a4b0(4): lea 0x1(%rax),%rcx
a4b4(4): cmp 0x58(%rsi),%rcx
a4b8(2): jnl 0x48(%rip)
a4ba(6): movzx 0x1(%r8,%rax,1),%eax
a4c0(2): cmp $0x3a,%al
a4c2(2): mov %al,(%rdi)
a4c4(6): jz 0x9c(%rip)
a4ca(2): cmp $0x3d,%al
a4cc(6): jz 0x84(%rip)
a4d2(2): cmp $0x2e,%al
a4d4(2): jnz 0x2c(%rip)
a4d6(4): mov $0x1a,0x8(%rdi)
a4da(5): mov $0x2,%eax
a4df(1): ret near (%rsp)
a4e0(3): and $0x1,%edx
a4e3(2): jz 0xc(%rip)
a4e5(4): lea 0x1(%rax),%rdx
a4e9(4): cmp 0x58(%rsi),%rdx
a4ed(2): jl 0x43(%rip)
a4ef(4): mov $0x1,0x8(%rdi)
a4f3(5): mov $0x1,%eax
a4f8(1): ret near (%rsp)
a4f9(7): nop 0x0(%rax)
a500(4): mov $0x1,0x8(%rdi)
a504(3): mov $0x5b,(%rdi)
a507(5): mov $0x1,%eax
a50c(1): ret near (%rsp)
a50d(3): nop (%rax)
a510(4): mov $0x19,0x8(%rdi)
a514(5): mov $0x1,%eax
a519(1): ret near (%rsp)
a51a(6): nop 0x0(%rax,%rax,1)
a520(4): mov $0x15,0x8(%rdi)
a524(5): mov $0x1,%eax
a529(1): ret near (%rsp)
a52a(6): nop 0x0(%rax,%rax,1)
a530(4): mov %rdx,0x48(%rsi)
a534(6): movzx 0x1(%r8,%rax,1),%eax
a53a(4): mov $0x1,0x8(%rdi)
a53e(2): mov %al,(%rdi)
a540(5): mov $0x1,%eax
a545(1): ret near (%rsp)
a546(a): nop 0x0(%rax,%rax,1)
a550(4): mov $0x1c,0x8(%rdi)
a554(5): mov $0x2,%eax
a559(1): ret near (%rsp)
a55a(6): nop 0x0(%rax,%rax,1)
a560(3): and $0x4,%edx
a563(2): jz 0xffffff9d(%rip)
a565(4): mov $0x1e,0x8(%rdi)
a569(5): mov $0x2,%eax
a56e(1): ret near (%rsp)

"mark_opt_subexp" :
a570(4): cmp $0x11,0x30(%rsi)
a574(2): jz 0xc(%rip)
a576(2): xor %eax,%eax
a578(1): ret near (%rsp)
a579(7): nop 0x0(%rax)
a580(4): cmp 0x28(%rsi),%rdi
a584(2): jnz 0xfffffff2(%rip)
a586(4): or $0x8,0x32(%rsi)
a58a(2): xor %eax,%eax
a58c(1): ret near (%rsp)

"check_dst_limits_calc_pos_1" :
a590(2): push %r15
a592(2): push %r14
a594(3): mov %rdx,%r9
a597(2): push %r13
a599(2): push %r12
a59b(4): lea 0x0(%rcx,%rcx,2),%rdx
a59f(1): push %rbp
a5a0(1): push %rbx
a5a1(3): mov %esi,%r15d
a5a4(4): sub $0x48,%rsp
a5a8(7): mov 0x98(%rdi),%r14
a5af(4): mov %rdi,(%rsp)
a5b3(4): mov 0x30(%r14),%rax
a5b7(4): lea 0x0(%rax,%rdx,8),%r12
a5bb(6): cmp $0x0,0x8(%r12)
a5c1(6): jle 0x194(%rip)
a5c7(4): lea 0x0(%r8,%r8,4),%rax
a5cb(3): mov %rcx,%r11
a5ce(3): mov %r9d,%ecx
a5d1(3): mov %r8,%r10
a5d4(2): xor %ebx,%ebx
a5d6(4): mov %esi,0x20(%rsp)
a5da(4): shl/sal $0x3,%rax
a5de(3): mov %r9,%r15
a5e1(5): mov %r11,0x10(%rsp)
a5e6(5): mov %rax,0x28(%rsp)
a5eb(5): mov $0x1,%eax
a5f0(3): shl/sal %cl,%rax
a5f3(5): mov %rax,0x18(%rsp)
a5f8(2): not %eax
a5fa(5): mov %ax,0x26(%rsp)
a5ff(2): mov %esi,%eax
a601(3): and $0x1,%eax
a604(4): mov %eax,0xc(%rsp)
a608(2): mov %esi,%eax
a60a(3): and $0x2,%eax
a60d(4): mov %eax,0x8(%rsp)
a611(2): jmp 0x24(%rip)
a613(5): nop 0x0(%rax,%rax,1)
a618(3): cmp $0x9,%dl
a61b(6): jz 0x155(%rip)
a621(3): cmp $0x4,%dl
a624(2): jz 0x54(%rip)
a626(4): add $0x1,%rbx
a62a(5): cmp %rbx,0x8(%r12)
a62f(6): jle 0x121(%rip)
a635(5): mov 0x10(%r12),%rax
a63a(4): mov 0x0(%rax,%rbx,8),%rbp
a63e(3): mov %rbp,%rax
a641(4): shl/sal $0x4,%rax
a645(3): add (%r14),%rax
a648(4): movzx 0x8(%rax),%edx
a64c(3): cmp $0x8,%dl
a64f(2): jnz 0xffffffc9(%rip)
a651(4): mov 0xc(%rsp),%ecx
a655(2): test %ecx,%ecx
a657(2): jz 0xffffffcf(%rip)
a659(3): cmp %r15,(%rax)
a65c(2): jnz 0xffffffca(%rip)
a65e(4): add $0x48,%rsp
a662(5): mov $0xffffffff,%eax
a667(1): pop %rbx
a668(1): pop %rbp
a669(2): pop %r12
a66b(2): pop %r13
a66d(2): pop %r14
a66f(2): pop %r15
a671(1): ret near (%rsp)
a672(6): nop 0x0(%rax,%rax,1)
a678(4): cmp $0xffffffff,%r10
a67c(2): jz 0xffffffaa(%rip)
a67e(4): mov (%rsp),%rax
a682(5): mov 0x28(%rsp),%r13
a687(3): mov %rbp,%rdi
a68a(5): mov %r12,0x30(%rsp)
a68f(5): mov %rbx,0x38(%rsp)
a694(3): mov %r10,%r12
a697(7): add 0xd8(%rax),%r13
a69e(5): lea 0x0(%rbp,%rbp,2),%rax
a6a3(3): mov %r14,%rbp
a6a6(3): mov %rdi,%r14
a6a9(4): shl/sal $0x3,%rax
a6ad(3): mov %rax,%rbx
a6b0(4): cmp %r14,0x0(%r13)
a6b4(2): jnz 0x6c(%rip)
a6b6(4): cmp $0x3f,%r15
a6ba(2): jnle 0xe(%rip)
a6bc(5): movzx 0x22(%r13),%eax
a6c1(5): test %rax,0x18(%rsp)
a6c6(2): jz 0x5a(%rip)
a6c8(4): mov 0x28(%rbp),%rax
a6cc(5): mov 0x10(%rax,%rbx,1),%rax
a6d1(3): mov (%rax),%rcx
a6d4(5): cmp %rcx,0x10(%rsp)
a6d9(6): jz 0xc7(%rip)
a6df(4): mov 0x20(%rsp),%esi
a6e3(4): mov (%rsp),%rdi
a6e7(3): mov %r12,%r8
a6ea(3): mov %r15,%rdx
a6ed(5): call 0xfffffea3(%rip)
a6f2(3): cmp $0xff,%eax
a6f5(6): jz 0xffffff69(%rip)
a6fb(2): test %eax,%eax
a6fd(2): jnz 0xa(%rip)
a6ff(4): mov 0x8(%rsp),%esi
a703(2): test %esi,%esi
a705(2): jnz 0x80(%rip)
a707(4): cmp $0x3f,%r15
a70b(2): jnle 0x15(%rip)
a70d(5): movzx 0x26(%rsp),%eax
a712(5): and %ax,0x22(%r13)
a717(9): nop 0x0(%rax,%rax,1)
a720(4): add $0x28,%r13
a724(5): cmp $0x0,0xfffffff8(%r13)
a729(2): jnz 0xffffff87(%rip)
a72b(5): mov 0x38(%rsp),%rbx
a730(3): mov %r12,%r10
a733(5): mov 0x30(%rsp),%r12
a738(3): mov %rbp,%r14
a73b(4): add $0x1,%rbx
a73f(5): cmp %rbx,0x8(%r12)
a744(6): jnle 0xfffffef1(%rip)
a74a(6): nop 0x0(%rax,%rax,1)
a750(5): mov 0x20(%rsp),%r15d
a755(4): add $0x48,%rsp
a759(3): mov %r15d,%eax
a75c(1): pop %rbx
a75d(2): sar $0x1,%eax
a75f(1): pop %rbp
a760(2): pop %r12
a762(2): pop %r13
a764(2): pop %r14
a766(2): pop %r15
a768(1): ret near (%rsp)
a769(7): nop 0x0(%rax)
a770(4): mov 0x8(%rsp),%edx
a774(2): test %edx,%edx
a776(6): jz 0xfffffeb0(%rip)
a77c(3): cmp %r15,(%rax)
a77f(6): jnz 0xfffffea7(%rip)
a785(4): add $0x48,%rsp
a789(2): xor %eax,%eax
a78b(1): pop %rbx
a78c(1): pop %rbp
a78d(2): pop %r12
a78f(2): pop %r13
a791(2): pop %r14
a793(2): pop %r15
a795(1): ret near (%rsp)
a796(a): nop 0x0(%rax,%rax,1)
a7a0(5): mov 0x20(%rsp),%r15d
a7a5(4): add $0x48,%rsp
a7a9(1): pop %rbx
a7aa(1): pop %rbp
a7ab(3): mov %r15d,%eax
a7ae(3): and $0x1,%eax
a7b1(2): pop %r12
a7b3(2): neg %eax
a7b5(2): pop %r13
a7b7(2): pop %r14
a7b9(2): pop %r15
a7bb(1): ret near (%rsp)

"check_dst_limits_calc_pos" :
a7c0(7): mov 0xd8(%rdi),%rax
a7c7(4): lea 0x0(%rsi,%rsi,4),%rsi
a7cb(4): lea 0x0(%rax,%rsi,8),%rax
a7cf(4): mov 0x10(%rax),%r10
a7d3(3): cmp %r8,%r10
a7d6(2): jnle 0x4a(%rip)
a7d8(4): mov 0x18(%rax),%rax
a7dc(3): cmp %r8,%rax
a7df(2): jl 0x21(%rip)
a7e1(2): xor %esi,%esi
a7e3(3): cmp %r8,%r10
a7e6(4): setz %sil
a7ea(3): or $0x2,%esi
a7ed(3): cmp %r8,%rax
a7f0(2): jz 0x25(%rip)
a7f2(2): xor %eax,%eax
a7f4(3): cmp %r8,%r10
a7f7(2): jz 0x19(%rip)
a7f9(2): REP ret near (%rsp)
a7fb(5): nop 0x0(%rax,%rax,1)
a800(5): mov $0x1,%eax
a805(1): ret near (%rsp)
a806(a): nop 0x0(%rax,%rax,1)
a810(5): mov $0x1,%esi
a815(3): mov %r9,%r8
a818(5): jmp 0xfffffd78(%rip)
a81d(3): nop (%rax)
a820(5): mov $0xffffffff,%eax
a825(1): ret near (%rsp)

"postorder" :
a830(2): push %r12
a832(3): mov %rsi,%r12
a835(1): push %rbp
a836(3): mov %rdx,%rbp
a839(1): push %rbx
a83a(3): mov %rdi,%rbx
a83d(2): jmp 0x6(%rip)
a83f(1): nop 
a840(3): mov %rax,%rbx
a843(4): mov 0x8(%rbx),%rax
a847(3): test %rax,%rax
a84a(2): jnz 0xfffffff6(%rip)
a84c(4): mov 0x10(%rbx),%rax
a850(3): test %rax,%rax
a853(2): jnz 0xffffffed(%rip)
a855(3): mov %rbx,%rsi
a858(3): mov %rbp,%rdi
a85b(3): call %r12
a85e(2): test %eax,%eax
a860(2): jnz 0x36(%rip)
a862(6): nop 0x0(%rax,%rax,1)
a868(3): mov (%rbx),%rdx
a86b(3): test %rdx,%rdx
a86e(2): jz 0x28(%rip)
a870(4): mov 0x10(%rdx),%rax
a874(3): cmp %rbx,%rax
a877(3): mov %rdx,%rbx
a87a(4): setz %sil
a87e(3): test %rax,%rax
a881(3): setz %cl
a884(3): or %cl,%sil
a887(2): jz 0xffffffb9(%rip)
a889(3): mov %rbx,%rsi
a88c(3): mov %rbp,%rdi
a88f(3): call %r12
a892(2): test %eax,%eax
a894(2): jz 0xffffffd4(%rip)
a896(1): pop %rbx
a897(1): pop %rbp
a898(2): pop %r12
a89a(1): ret near (%rsp)

"preorder" :
a8a0(2): push %r12
a8a2(3): mov %rsi,%r12
a8a5(1): push %rbp
a8a6(3): mov %rdx,%rbp
a8a9(1): push %rbx
a8aa(3): mov %rdi,%rbx
a8ad(2): jmp 0x6(%rip)
a8af(1): nop 
a8b0(3): mov %rdx,%rbx
a8b3(3): mov %rbx,%rsi
a8b6(3): mov %rbp,%rdi
a8b9(3): call %r12
a8bc(2): test %eax,%eax
a8be(2): jnz 0x2e(%rip)
a8c0(4): mov 0x8(%rbx),%rdx
a8c4(2): xor %ecx,%ecx
a8c6(3): test %rdx,%rdx
a8c9(2): jnz 0xffffffe7(%rip)
a8cb(2): jmp 0x8(%rip)
a8cd(3): nop (%rax)
a8d0(3): mov %rdx,%rbx
a8d3(4): mov 0x10(%rbx),%rdx
a8d7(3): cmp %rcx,%rdx
a8da(2): jz 0x7(%rip)
a8dc(3): test %rdx,%rdx
a8df(2): jnz 0xffffffd1(%rip)
a8e1(3): mov (%rbx),%rdx
a8e4(3): mov %rbx,%rcx
a8e7(3): test %rdx,%rdx
a8ea(2): jnz 0xffffffe6(%rip)
a8ec(1): pop %rbx
a8ed(1): pop %rbp
a8ee(2): pop %r12
a8f0(1): ret near (%rsp)

"re_string_realloc_buffers" :
a900(1): push %rbp
a901(1): push %rbx
a902(3): mov %rsi,%rbp
a905(3): mov %rdi,%rbx
a908(4): sub $0x8,%rsp
a90c(7): cmp $0x1,0x90(%rdi)
a913(2): jle 0x4a(%rip)
a915(a): mov $0x2305843009213693951,%rax
a91f(3): cmp %rax,%rsi
a922(2): jnbe 0x6e(%rip)
a924(4): mov 0x10(%rdi),%rdi
a928(8): lea 0x0(,%rsi,4),%rsi
a930(5): call 0xffff7660(%rip)
a935(3): test %rax,%rax
a938(2): jz 0x58(%rip)
a93a(4): mov 0x18(%rbx),%rdi
a93e(4): mov %rax,0x10(%rbx)
a942(3): test %rdi,%rdi
a945(2): jz 0x18(%rip)
a947(8): lea 0x0(,%rbp,8),%rsi
a94f(5): call 0xffff7641(%rip)
a954(3): test %rax,%rax
a957(2): jz 0x39(%rip)
a959(4): mov %rax,0x18(%rbx)
a95d(7): cmp $0x0,0x8b(%rbx)
a964(2): jnz 0x14(%rip)
a966(4): mov %rbp,0x40(%rbx)
a96a(4): add $0x8,%rsp
a96e(2): xor %eax,%eax
a970(1): pop %rbx
a971(1): pop %rbp
a972(1): ret near (%rsp)
a973(5): nop 0x0(%rax,%rax,1)
a978(4): mov 0x8(%rbx),%rdi
a97c(3): mov %rbp,%rsi
a97f(5): call 0xffff7611(%rip)
a984(3): test %rax,%rax
a987(2): jz 0x9(%rip)
a989(4): mov %rax,0x8(%rbx)
a98d(2): jmp 0xffffffd9(%rip)
a98f(1): nop 
a990(4): add $0x8,%rsp
a994(5): mov $0xc,%eax
a999(1): pop %rbx
a99a(1): pop %rbp
a99b(1): ret near (%rsp)

"re_node_set_insert_last" :
a9a0(1): push %rbp
a9a1(1): push %rbx
a9a2(3): mov %rsi,%rbp
a9a5(3): mov %rdi,%rbx
a9a8(4): sub $0x8,%rsp
a9ac(4): mov 0x8(%rdi),%rsi
a9b0(3): cmp %rsi,(%rdi)
a9b3(4): mov 0x10(%rdi),%rax
a9b7(2): jz 0x21(%rip)
a9b9(4): lea 0x1(%rsi),%rdx
a9bd(4): mov %rdx,0x8(%rbx)
a9c1(4): mov %rbp,0x0(%rax,%rsi,8)
a9c5(5): mov $0x1,%eax
a9ca(4): add $0x8,%rsp
a9ce(1): pop %rbx
a9cf(1): pop %rbp
a9d0(1): ret near (%rsp)
a9d1(7): nop 0x0(%rax)
a9d8(4): add $0x1,%rsi
a9dc(4): lea 0x0(%rsi,%rsi,1),%rdx
a9e0(4): shl/sal $0x4,%rsi
a9e4(3): mov %rdx,(%rdi)
a9e7(3): mov %rax,%rdi
a9ea(5): call 0xffff75a6(%rip)
a9ef(3): test %rax,%rax
a9f2(2): jz 0xe(%rip)
a9f4(4): mov %rax,0x10(%rbx)
a9f8(4): mov 0x8(%rbx),%rsi
a9fc(2): jmp 0xffffffbd(%rip)
a9fe(2): nop 
aa00(2): xor %eax,%eax
aa02(2): jmp 0xffffffc8(%rip)

"re_node_set_insert" :
aa10(1): push %rbp
aa11(1): push %rbx
aa12(3): mov %rsi,%rbp
aa15(3): mov %rdi,%rbx
aa18(4): sub $0x8,%rsp
aa1c(3): mov (%rdi),%rdx
aa1f(3): test %rdx,%rdx
aa22(2): jz 0x26(%rip)
aa24(4): mov 0x8(%rdi),%rsi
aa28(4): mov 0x10(%rdi),%rax
aa2c(3): test %rsi,%rsi
aa2f(2): jnz 0x51(%rip)
aa31(3): mov %rbp,(%rax)
aa34(5): add $0x1,0x8(%rdi)
aa39(5): mov $0x1,%eax
aa3e(4): add $0x8,%rsp
aa42(1): pop %rbx
aa43(1): pop %rbp
aa44(1): ret near (%rsp)
aa45(3): nop (%rax)
aa48(7): mov $0x1,(%rdi)
aa4f(8): mov $0x1,0x8(%rdi)
aa57(5): mov $0x8,%edi
aa5c(5): call 0xffff74c4(%rip)
aa61(3): test %rax,%rax
aa64(4): mov %rax,0x10(%rbx)
aa68(6): jz 0x90(%rip)
aa6e(3): mov %rbp,(%rax)
aa71(4): add $0x8,%rsp
aa75(5): mov $0x1,%eax
aa7a(1): pop %rbx
aa7b(1): pop %rbp
aa7c(1): ret near (%rsp)
aa7d(3): nop (%rax)
aa80(3): cmp %rsi,%rdx
aa83(6): jz 0x8d(%rip)
aa89(3): cmp %rbp,(%rax)
aa8c(8): lea 0x0(,%rsi,8),%rdx
aa94(2): jle 0x3c(%rip)
aa96(3): test %rsi,%rsi
aa99(2): jle 0x1a(%rip)
aa9b(3): add %rax,%rdx
aa9e(2): nop 
aaa0(4): mov 0xfffffff8(%rdx),%rcx
aaa4(4): sub $0x8,%rdx
aaa8(4): mov %rcx,0x8(%rdx)
aaac(3): cmp %rdx,%rax
aaaf(2): jnz 0xfffffff1(%rip)
aab1(2): xor %edx,%edx
aab3(4): mov %rbp,0x0(%rax,%rdx,1)
aab7(5): mov $0x1,%eax
aabc(5): add $0x1,0x8(%rbx)
aac1(5): jmp 0xffffff7d(%rip)
aac6(a): nop 0x0(%rax,%rax,1)
aad0(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
aad5(3): cmp %rcx,%rbp
aad8(2): jnl 0xffffffdb(%rip)
aada(6): nop 0x0(%rax,%rax,1)
aae0(4): mov %rcx,0x0(%rax,%rdx,1)
aae4(4): sub $0x8,%rdx
aae8(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
aaed(3): cmp %rbp,%rcx
aaf0(2): jnle 0xfffffff0(%rip)
aaf2(2): jmp 0xffffffc1(%rip)
aaf4(4): nop 0x0(%rax)
aaf8(8): mov $0x0,0x8(%rbx)
ab00(7): mov $0x0,(%rbx)
ab07(5): jmp 0xffffff37(%rip)
ab0c(4): nop 0x0(%rax)
ab10(4): lea 0x0(%rsi,%rsi,1),%rdx
ab14(4): shl/sal $0x4,%rsi
ab18(3): mov %rdx,(%rdi)
ab1b(3): mov %rax,%rdi
ab1e(5): call 0xffff7472(%rip)
ab23(3): test %rax,%rax
ab26(2): jz 0xf(%rip)
ab28(4): mov %rax,0x10(%rbx)
ab2c(4): mov 0x8(%rbx),%rsi
ab30(5): jmp 0xffffff59(%rip)
ab35(2): xor %eax,%eax
ab37(5): jmp 0xffffff07(%rip)

"register_state" :
ab40(2): push %r14
ab42(2): push %r13
ab44(3): mov %rdi,%r14
ab47(2): push %r12
ab49(1): push %rbp
ab4a(3): mov %rdx,%r12
ab4d(1): push %rbx
ab4e(4): mov 0x10(%rsi),%rbx
ab52(3): mov %rsi,%rbp
ab55(3): mov %rdx,(%rsi)
ab58(8): mov $0x0,0x28(%rsi)
ab60(4): lea 0x20(%rsi),%r13
ab64(8): lea 0x0(,%rbx,8),%rdi
ab6c(4): mov %rbx,0x20(%rsi)
ab70(5): call 0xffff73b0(%rip)
ab75(3): test %rax,%rax
ab78(4): mov %rax,0x30(%rbp)
ab7c(2): jz 0x42(%rip)
ab7e(3): test %rbx,%rbx
ab81(2): jle 0x4f(%rip)
ab83(2): xor %ebx,%ebx
ab85(2): jmp 0x15(%rip)
ab87(9): nop 0x0(%rax,%rax,1)
ab90(4): add $0x1,%rbx
ab94(4): cmp %rbx,0x10(%rbp)
ab98(2): jle 0x38(%rip)
ab9a(4): mov 0x18(%rbp),%rax
ab9e(4): mov 0x0(%rax,%rbx,8),%rsi
aba2(3): mov %rsi,%rax
aba5(4): shl/sal $0x4,%rax
aba9(3): add (%r14),%rax
abac(4): test $0x8,0x8(%rax)
abb0(2): jnz 0xffffffe0(%rip)
abb2(3): mov %r13,%rdi
abb5(5): call 0xfffffdeb(%rip)
abba(2): test %al,%al
abbc(2): jnz 0xffffffd4(%rip)
abbe(1): pop %rbx
abbf(5): mov $0xc,%eax
abc4(1): pop %rbp
abc5(2): pop %r12
abc7(2): pop %r13
abc9(2): pop %r14
abcb(1): ret near (%rsp)
abcc(4): nop 0x0(%rax)
abd0(7): and 0x88(%r14),%r12
abd7(4): mov 0x40(%r14),%rax
abdb(4): lea 0x0(%r12,%r12,2),%rdx
abdf(4): lea 0x0(%rax,%rdx,8),%rbx
abe3(3): mov (%rbx),%rdx
abe6(4): cmp %rdx,0x8(%rbx)
abea(4): mov 0x10(%rbx),%rax
abee(4): lea 0x1(%rdx),%rsi
abf2(2): jle 0x14(%rip)
abf4(3): mov %rsi,(%rbx)
abf7(4): mov %rbp,0x0(%rax,%rdx,8)
abfb(2): xor %eax,%eax
abfd(1): pop %rbx
abfe(1): pop %rbp
abff(2): pop %r12
ac01(2): pop %r13
ac03(2): pop %r14
ac05(1): ret near (%rsp)
ac06(4): lea 0x0(%rsi,%rsi,1),%r12
ac0a(3): mov %rax,%rdi
ac0d(4): shl/sal $0x4,%rsi
ac11(5): call 0xffff737f(%rip)
ac16(3): test %rax,%rax
ac19(2): jz 0xffffffa5(%rip)
ac1b(3): mov (%rbx),%rdx
ac1e(4): mov %rax,0x10(%rbx)
ac22(4): mov %r12,0x8(%rbx)
ac26(4): lea 0x1(%rdx),%rsi
ac2a(2): jmp 0xffffffca(%rip)

"build_upper_buffer" :
ac30(2): push %r12
ac32(4): mov 0x58(%rdi),%r12
ac36(4): cmp %r12,0x40(%rdi)
ac3a(1): push %rbp
ac3b(3): mov %rdi,%rbp
ac3e(5): cmovng 0x40(%rdi),%r12
ac43(1): push %rbx
ac44(4): mov 0x30(%rdi),%rbx
ac48(3): cmp %rbx,%r12
ac4b(2): jle 0x3a(%rip)
ac4d(5): call 0xffff7003(%rip)
ac52(6): nop 0x0(%rax,%rax,1)
ac58(4): mov 0x0(%rbp),%rdx
ac5c(4): mov 0x78(%rbp),%rcx
ac60(3): add %rbx,%rdx
ac63(4): add 0x28(%rbp),%rdx
ac67(3): test %rcx,%rcx
ac6a(3): movzx (%rdx),%edx
ac6d(2): jnz 0x2b(%rip)
ac6f(3): mov (%rax),%rsi
ac72(4): mov 0x8(%rbp),%rcx
ac76(3): mov 0x0(%rsi,%rdx,4),%edx
ac79(3): mov %dl,0x0(%rcx,%rbx,1)
ac7c(4): add $0x1,%rbx
ac80(3): cmp %rbx,%r12
ac83(2): jnz 0xffffffd5(%rip)
ac85(4): mov %rbx,0x30(%rbp)
ac89(4): mov %rbx,0x38(%rbp)
ac8d(1): pop %rbx
ac8e(1): pop %rbp
ac8f(2): pop %r12
ac91(1): ret near (%rsp)
ac92(6): nop 0x0(%rax,%rax,1)
ac98(4): movzx 0x0(%rcx,%rdx,1),%edx
ac9c(2): jmp 0xffffffd3(%rip)

"build_wcs_buffer" :
aca0(2): push %r15
aca2(2): push %r14
aca4(2): push %r13
aca6(2): push %r12
aca8(1): push %rbp
aca9(1): push %rbx
acaa(3): mov %rdi,%rbx
acad(4): sub $0x68,%rsp
acb1(4): mov 0x58(%rdi),%r12
acb5(4): mov 0x30(%rdi),%rbp
acb9(9): mov $0x28,%rax
acc2(5): mov %rax,0x58(%rsp)
acc7(2): xor %eax,%eax
acc9(4): cmp %r12,0x40(%rdi)
accd(5): cmovng 0x40(%rdi),%r12
acd2(3): cmp %rbp,%r12
acd5(6): jle 0x8f(%rip)
acdb(4): lea 0x20(%rdi),%r14
acdf(5): lea 0xc(%rsp),%r13
ace4(4): nop 0x0(%rax)
ace8(4): mov 0x78(%rbx),%rdi
acec(3): mov %r12,%rdx
acef(4): mov 0x20(%rbx),%r15
acf3(3): sub %rbp,%rdx
acf6(3): test %rdi,%rdi
acf9(6): jnz 0xe7(%rip)
acff(4): mov 0x28(%rbx),%rsi
ad03(3): add %rbp,%rsi
ad06(3): add (%rbx),%rsi
ad09(3): mov %r14,%rcx
ad0c(3): mov %r13,%rdi
ad0f(5): call 0xfffff6a1(%rip)
ad14(4): lea 0xffffffff(%rax),%rdx
ad18(4): cmp $0xfffffffd,%rdx
ad1c(6): jnbe 0x94(%rip)
ad22(4): cmp $0xfffffffe,%rax
ad26(4): mov 0xc(%rsp),%edx
ad2a(2): jz 0x76(%rip)
ad2c(4): mov 0x10(%rbx),%rcx
ad30(4): lea 0x1(%rbp),%rsi
ad34(8): lea 0x0(,%rbp,4),%rdi
ad3c(3): mov %edx,0x0(%rcx,%rbp,4)
ad3f(3): add %rax,%rbp
ad42(3): cmp %rbp,%rsi
ad45(2): jnl 0x4b(%rip)
ad47(5): lea 0x4(%rcx,%rdi,1),%rdx
ad4c(4): lea 0x0(%rcx,%rbp,4),%rax
ad50(6): mov $0xffffffff,(%rdx)
ad56(4): add $0x4,%rdx
ad5a(3): cmp %rdx,%rax
ad5d(2): jnz 0xfffffff3(%rip)
ad5f(3): cmp %r12,%rbp
ad62(2): jl 0xffffff86(%rip)
ad64(5): mov 0x58(%rsp),%rax
ad69(9): xor $0x28,%rax
ad72(4): mov %rbp,0x30(%rbx)
ad76(4): mov %rbp,0x38(%rbx)
ad7a(6): jnz 0xe4(%rip)
ad80(4): add $0x68,%rsp
ad84(1): pop %rbx
ad85(1): pop %rbp
ad86(2): pop %r12
ad88(2): pop %r13
ad8a(2): pop %r14
ad8c(2): pop %r15
ad8e(1): ret near (%rsp)
ad8f(1): nop 
ad90(3): mov %rsi,%rbp
ad93(3): cmp %r12,%rbp
ad96(6): jl 0xffffff52(%rip)
ad9c(2): jmp 0xffffffc8(%rip)
ad9e(2): nop 
ada0(4): mov 0x58(%rbx),%rax
ada4(4): cmp %rax,0x40(%rbx)
ada8(6): jl 0xa0(%rip)
adae(2): nop 
adb0(3): mov (%rbx),%rax
adb3(4): mov 0x78(%rbx),%rcx
adb7(3): add %rbp,%rax
adba(4): add 0x28(%rbx),%rax
adbe(3): test %rcx,%rcx
adc1(3): movzx (%rax),%edx
adc4(4): mov %edx,0xc(%rsp)
adc8(6): jnz 0x89(%rip)
adce(4): mov %r15,0x20(%rbx)
add2(5): mov $0x1,%eax
add7(5): jmp 0xffffff55(%rip)
addc(4): nop 0x0(%rax)
ade0(6): mov 0x90(%rbx),%ecx
ade6(2): xor %eax,%eax
ade8(5): lea 0x10(%rsp),%rsi
aded(2): test %ecx,%ecx
adef(2): jnle 0x22(%rip)
adf1(5): jmp 0xffffff18(%rip)
adf6(a): nop 0x0(%rax,%rax,1)
ae00(4): add $0x1,%rax
ae04(3): cmp %rax,%rdx
ae07(6): jz 0xffffff02(%rip)
ae0d(4): mov 0x78(%rbx),%rdi
ae11(3): mov (%rbx),%rcx
ae14(3): add %rbp,%rcx
ae17(3): add %rax,%rcx
ae1a(4): add 0x28(%rbx),%rcx
ae1e(3): movzx (%rcx),%ecx
ae21(4): movzx 0x0(%rdi,%rcx,1),%ecx
ae25(4): mov 0x8(%rbx),%rdi
ae29(3): add %rbp,%rdi
ae2c(3): mov %cl,0x0(%rdi,%rax,1)
ae2f(3): mov %cl,0x0(%rsi,%rax,1)
ae32(3): lea 0x1(%rax),%ecx
ae35(6): cmp 0x90(%rbx),%ecx
ae3b(2): jl 0xffffffc5(%rip)
ae3d(5): jmp 0xfffffecc(%rip)
ae42(6): nop 0x0(%rax,%rax,1)
ae48(4): mov %r15,0x20(%rbx)
ae4c(5): jmp 0xffffff18(%rip)
ae51(4): movzx 0x0(%rcx,%rdx,1),%edx
ae55(4): mov %edx,0xc(%rsp)
ae59(5): jmp 0xffffff75(%rip)
ae5e(5): call 0xffff6f52(%rip)

"build_wcs_upper_buffer" :
ae70(2): push %r15
ae72(2): push %r14
ae74(3): mov %rdi,%r14
ae77(2): push %r13
ae79(2): push %r12
ae7b(1): push %rbp
ae7c(1): push %rbx
ae7d(7): sub $0xa8,%rsp
ae84(4): mov 0x58(%rdi),%rbx
ae88(4): mov 0x30(%rdi),%r15
ae8c(9): mov $0x28,%rax
ae95(8): mov %rax,0x98(%rsp)
ae9d(2): xor %eax,%eax
ae9f(4): cmp %rbx,0x40(%rdi)
aea3(5): cmovng 0x40(%rdi),%rbx
aea8(7): cmp $0x0,0x8a(%rdi)
aeaf(2): jnz 0xd(%rip)
aeb1(5): cmp $0x0,0x78(%rdi)
aeb6(6): jz 0x18a(%rip)
aebc(4): mov 0x38(%r14),%r13
aec0(3): cmp %rbx,%r15
aec3(2): jl 0x3d(%rip)
aec5(4): mov %r15,0x30(%r14)
aec9(4): mov %r13,0x38(%r14)
aecd(2): xor %eax,%eax
aecf(8): mov 0x98(%rsp),%rcx
aed7(9): xor $0x28,%rcx
aee0(6): jnz 0x58a(%rip)
aee6(7): add $0xa8,%rsp
aeed(1): pop %rbx
aeee(1): pop %rbp
aeef(2): pop %r12
aef1(2): pop %r13
aef3(2): pop %r14
aef5(2): pop %r15
aef7(1): ret near (%rsp)
aef8(8): nop 0x0(%rax,%rax,1)
af00(4): lea 0x20(%r14),%rax
af04(5): mov %rax,0x8(%rsp)
af09(3): mov %rbx,%rax
af0c(3): sub %r15,%rax
af0f(5): mov %rax,0x10(%rsp)
af14(5): lea 0x44(%rsp),%rax
af19(5): mov %rax,0x20(%rsp)
af1e(4): mov 0x78(%r14),%rdx
af22(4): mov 0x20(%r14),%rax
af26(3): test %rdx,%rdx
af29(5): mov %rax,0x48(%rsp)
af2e(6): jnz 0x30b(%rip)
af34(4): mov 0x28(%r14),%rbp
af38(3): add %r13,%rbp
af3b(3): add (%r14),%rbp
af3e(5): mov %rbp,0x18(%rsp)
af43(5): mov 0x8(%rsp),%rcx
af48(5): mov 0x10(%rsp),%rdx
af4d(5): mov 0x18(%rsp),%rsi
af52(5): mov 0x20(%rsp),%rdi
af57(5): call 0xfffff459(%rip)
af5c(3): mov %rax,%rbp
af5f(4): lea 0xffffffff(%rax),%rax
af63(4): cmp $0xfffffffc,%rax
af67(5): mov %rax,0x20(%rsp)
af6c(6): jnbe 0x33d(%rip)
af72(4): mov 0x44(%rsp),%edx
af76(2): mov %edx,%edi
af78(4): mov %edx,0x10(%rsp)
af7c(5): call 0xffff70d4(%rip)
af81(4): mov 0x10(%rsp),%edx
af85(3): mov %eax,%r12d
af88(5): mov %r15,0x8(%rsp)
af8d(2): cmp %eax,%edx
af8f(6): jz 0x301(%rip)
af95(5): lea 0x50(%rsp),%rcx
af9a(5): lea 0x48(%rsp),%rdx
af9f(2): mov %eax,%esi
afa1(3): mov %rcx,%rdi
afa4(5): mov %rcx,0x10(%rsp)
afa9(5): call 0xffff6f87(%rip)
afae(3): cmp %rax,%rbp
afb1(3): mov %rax,%r11
afb4(5): mov 0x10(%rsp),%rcx
afb9(6): jnz 0x38d(%rip)
afbf(4): mov 0x8(%r14),%rdi
afc3(3): mov %rbp,%rdx
afc6(3): mov %rcx,%rsi
afc9(3): add %r15,%rdi
afcc(5): call 0xffff6f14(%rip)
afd1(8): cmp $0x0,0x8c(%r14)
afd9(5): lea 0x0(%rbp,%r13,1),%rax
afde(6): jnz 0x337(%rip)
afe4(4): add $0x1,%r15
afe8(5): mov 0x8(%rsp),%rsi
afed(4): mov 0x10(%r14),%rdx
aff1(5): lea 0xffffffff(%r15,%rbp,1),%rcx
aff6(3): mov %rax,%r13
aff9(3): cmp %rcx,%r15
affc(8): lea 0x0(,%rsi,4),%rax
b004(4): mov %r12d,0x0(%rdx,%rsi,4)
b008(6): jnl 0xfffffeb8(%rip)
b00e(5): lea 0x4(%rdx,%rax,1),%rax
b013(4): lea 0x0(%rdx,%rcx,4),%rdx
b017(9): nop 0x0(%rax,%rax,1)
b020(6): mov $0xffffffff,(%rax)
b026(4): add $0x4,%rax
b02a(3): cmp %rax,%rdx
b02d(2): jnz 0xfffffff3(%rip)
b02f(3): mov %rcx,%r15
b032(5): jmp 0xfffffe8e(%rip)
b037(9): nop 0x0(%rax,%rax,1)
b040(7): cmp $0x0,0x8c(%rdi)
b047(6): jnz 0xfffffe75(%rip)
b04d(3): cmp %rbx,%r15
b050(6): jnl 0x198(%rip)
b056(4): lea 0x20(%rdi),%rax
b05a(5): mov %rax,0x8(%rsp)
b05f(5): lea 0x44(%rsp),%rax
b064(5): mov %rax,0x30(%rsp)
b069(5): lea 0x48(%rsp),%rax
b06e(5): mov %rax,0x38(%rsp)
b073(5): lea 0x50(%rsp),%rax
b078(5): mov %rax,0x28(%rsp)
b07d(3): nop (%rax)
b080(4): mov 0x28(%r14),%rbp
b084(3): mov %r15,%r13
b087(3): add %r15,%rbp
b08a(3): add (%r14),%rbp
b08d(5): movzx 0x0(%rbp),%r12d
b092(4): test $0x80,%r12b
b096(2): jnz 0x14(%rip)
b098(5): mov 0x8(%rsp),%rdi
b09d(5): call 0xffff7013(%rip)
b0a2(2): test %eax,%eax
b0a4(6): jnz 0xf4(%rip)
b0aa(4): mov 0x20(%r14),%rax
b0ae(5): mov 0x30(%rsp),%rdi
b0b3(3): mov %rbx,%rdx
b0b6(5): mov 0x8(%rsp),%rcx
b0bb(3): sub %r15,%rdx
b0be(3): mov %rbp,%rsi
b0c1(5): mov %rdx,0x10(%rsp)
b0c6(5): mov %rax,0x48(%rsp)
b0cb(5): mov %rdi,0x20(%rsp)
b0d0(5): call 0xfffff2e0(%rip)
b0d5(3): mov %rax,%rbp
b0d8(4): lea 0xffffffff(%rax),%rax
b0dc(4): cmp $0xfffffffc,%rax
b0e0(6): jnbe 0xe8(%rip)
b0e6(4): mov 0x44(%rsp),%edx
b0ea(2): mov %edx,%edi
b0ec(4): mov %edx,0x18(%rsp)
b0f0(5): call 0xffff6f60(%rip)
b0f5(4): mov 0x18(%rsp),%edx
b0f9(3): mov %eax,%r12d
b0fc(2): cmp %eax,%edx
b0fe(2): jz 0x7a(%rip)
b100(5): mov 0x38(%rsp),%rdx
b105(5): mov 0x28(%rsp),%rdi
b10a(2): mov %eax,%esi
b10c(5): call 0xffff6e24(%rip)
b111(3): cmp %rax,%rbp
b114(6): jnz 0x174(%rip)
b11a(4): mov 0x8(%r14),%rdi
b11e(5): mov 0x28(%rsp),%rsi
b123(3): mov %rbp,%rdx
b126(3): add %r15,%rdi
b129(5): call 0xffff6db7(%rip)
b12e(4): add $0x1,%r15
b132(4): mov 0x10(%r14),%rdx
b136(8): lea 0x0(,%r13,4),%rax
b13e(5): lea 0xffffffff(%r15,%rbp,1),%rcx
b143(3): cmp %rcx,%r15
b146(4): mov %r12d,0x0(%rdx,%r13,4)
b14a(2): jnl 0x20(%rip)
b14c(5): lea 0x4(%rdx,%rax,1),%rax
b151(4): lea 0x0(%rdx,%rcx,4),%rdx
b155(3): nop (%rax)
b158(6): mov $0xffffffff,(%rax)
b15e(4): add $0x4,%rax
b162(3): cmp %rax,%rdx
b165(2): jnz 0xfffffff3(%rip)
b167(3): mov %rcx,%r15
b16a(3): cmp %r15,%rbx
b16d(6): jnle 0xffffff13(%rip)
b173(2): jmp 0x75(%rip)
b175(3): nop (%rax)
b178(4): mov 0x28(%r14),%rsi
b17c(4): mov 0x8(%r14),%rdi
b180(3): mov %rbp,%rdx
b183(3): add %r15,%rsi
b186(3): add (%r14),%rsi
b189(3): add %r15,%rdi
b18c(5): call 0xffff6d54(%rip)
b191(2): jmp 0xffffff9d(%rip)
b193(5): nop 0x0(%rax,%rax,1)
b198(5): call 0xffff6ab8(%rip)
b19d(3): mov (%rax),%rax
b1a0(4): mov 0x8(%r14),%rdx
b1a4(4): mov 0x0(%rax,%r12,4),%eax
b1a8(4): mov %al,0x0(%rdx,%r15,1)
b1ac(4): mov 0x8(%r14),%rdx
b1b0(4): mov 0x10(%r14),%rax
b1b4(5): movzx 0x0(%rdx,%r15,1),%edx
b1b9(4): mov %edx,0x0(%rax,%r15,4)
b1bd(4): add $0x1,%r15
b1c1(2): jmp 0xffffffa9(%rip)
b1c3(5): nop 0x0(%rax,%rax,1)
b1c8(4): cmp $0xfffffffd,%rax
b1cc(2): jnz 0x34(%rip)
b1ce(4): mov 0x58(%r14),%rax
b1d2(4): cmp %rax,0x40(%r14)
b1d6(2): jnl 0x2a(%rip)
b1d8(5): mov 0x48(%rsp),%rax
b1dd(4): mov %rax,0x20(%r14)
b1e1(7): nop 0x0(%rax)
b1e8(4): mov %r15,0x30(%r14)
b1ec(4): mov %r15,0x38(%r14)
b1f0(2): xor %eax,%eax
b1f2(5): jmp 0xfffffcdd(%rip)
b1f7(9): nop 0x0(%rax,%rax,1)
b200(3): mov (%r14),%rax
b203(4): mov 0x8(%r14),%rdx
b207(3): add %r15,%rax
b20a(4): add 0x28(%r14),%rax
b20e(3): movzx (%rax),%eax
b211(4): mov %al,0x0(%rdx,%r15,1)
b215(4): mov 0x10(%r14),%rdx
b219(4): add $0x1,%r15
b21d(4): cmp $0xffffffff,%rbp
b221(4): mov %eax,0x0(%rdx,%r13,4)
b225(6): jnz 0xffffff45(%rip)
b22b(5): mov 0x48(%rsp),%rax
b230(4): mov %rax,0x20(%r14)
b234(5): jmp 0xffffff36(%rip)
b239(7): mov 0x90(%r14),%eax
b240(2): test %eax,%eax
b242(6): jle 0x21e(%rip)
b248(4): mov 0x28(%r14),%rdi
b24c(4): lea 0xffffffff(%rax),%r11d
b250(5): lea 0x50(%rsp),%rcx
b255(2): xor %eax,%eax
b257(3): add %r13,%rdi
b25a(3): add (%r14),%rdi
b25d(2): jmp 0xd(%rip)
b25f(4): add $0x1,%rax
b263(5): cmp %rax,0x10(%rsp)
b268(2): jz 0x13(%rip)
b26a(4): movzx 0x0(%rdi,%rax,1),%esi
b26e(3): cmp %rax,%r11
b271(4): movzx 0x0(%rdx,%rsi,1),%esi
b275(4): mov %sil,0x0(%rcx,%rax,1)
b279(2): jnz 0xffffffe6(%rip)
b27b(5): mov %rcx,0x18(%rsp)
b280(5): jmp 0xfffffcc3(%rip)
b285(3): nop (%rax)
b288(3): mov %r15,%r13
b28b(5): jmp 0xfffffc93(%rip)
b290(4): mov 0x8(%r14),%rdi
b294(5): mov 0x18(%rsp),%rsi
b299(3): mov %rbp,%rdx
b29c(3): add %r15,%rdi
b29f(5): call 0xffff6c41(%rip)
b2a4(5): jmp 0xfffffd2d(%rip)
b2a9(6): cmp $0xfffffffd,0x20(%rsp)
b2af(2): jnz 0xc(%rip)
b2b1(4): mov 0x58(%r14),%rax
b2b5(4): cmp %rax,0x40(%r14)
b2b9(2): jl 0x7f(%rip)
b2bb(3): mov (%r14),%rax
b2be(4): mov 0x78(%r14),%rdx
b2c2(3): add %r13,%rax
b2c5(4): add 0x28(%r14),%rax
b2c9(3): test %rdx,%rdx
b2cc(3): movzx (%rax),%eax
b2cf(6): jnz 0x1ad(%rip)
b2d5(4): mov 0x8(%r14),%rdx
b2d9(3): mov %r15,%rcx
b2dc(4): mov %al,0x0(%rdx,%r15,1)
b2e0(8): cmp $0x0,0x8c(%r14)
b2e8(6): jnz 0x187(%rip)
b2ee(4): mov 0x10(%r14),%rdx
b2f2(4): add $0x1,%r13
b2f6(4): add $0x1,%r15
b2fa(4): cmp $0xffffffff,%rbp
b2fe(3): mov %eax,0x0(%rdx,%rcx,4)
b301(6): jnz 0xfffffbbf(%rip)
b307(5): mov 0x48(%rsp),%rax
b30c(4): mov %rax,0x20(%r14)
b310(5): jmp 0xfffffbb0(%rip)
b315(4): mov 0x18(%r14),%rdx
b319(3): mov %r15,%rcx
b31c(3): mov %r13,%r10
b31f(3): sub %r13,%rcx
b322(4): lea 0x0(%rdx,%rcx,8),%rdx
b326(4): mov %r10,0x0(%rdx,%r10,8)
b32a(4): add $0x1,%r10
b32e(3): cmp %r10,%rax
b331(2): jnz 0xfffffff5(%rip)
b333(5): jmp 0xfffffcb1(%rip)
b338(5): mov 0x48(%rsp),%rax
b33d(4): mov %rax,0x20(%r14)
b341(5): jmp 0xfffffb84(%rip)
b346(4): cmp $0xffffffff,%rax
b34a(6): jz 0xffffff46(%rip)
b350(4): lea 0x0(%rax,%r15,1),%rax
b354(3): mov %rax,%rsi
b357(5): mov %rax,0x8(%rsp)
b35c(4): mov 0x40(%r14),%rax
b360(3): cmp %rax,%rsi
b363(2): jnbe 0xffffffd5(%rip)
b365(5): cmp $0x0,0x18(%r14)
b36a(6): jz 0xbe(%rip)
b370(8): cmp $0x0,0x8c(%r14)
b378(2): jnz 0x22(%rip)
b37a(3): test %r15,%r15
b37d(2): jz 0x15(%rip)
b37f(4): mov 0x18(%r14),%rdx
b383(2): xor %eax,%eax
b385(4): mov %rax,0x0(%rdx,%rax,8)
b389(4): add $0x1,%rax
b38d(3): cmp %r15,%rax
b390(2): jnz 0xfffffff5(%rip)
b392(8): mov $0x1,0x8c(%r14)
b39a(4): mov 0x8(%r14),%rdi
b39e(3): mov %rcx,%rsi
b3a1(3): mov %r11,%rdx
b3a4(5): mov %r11,0x10(%rsp)
b3a9(3): add %r15,%rdi
b3ac(5): call 0xffff6b34(%rip)
b3b1(4): mov 0x10(%r14),%rax
b3b5(5): mov 0x10(%rsp),%r11
b3ba(4): lea 0x0(%rax,%r15,4),%rcx
b3be(4): mov 0x18(%r14),%rax
b3c2(4): cmp $0x1,%r11
b3c6(3): mov %r12d,(%rcx)
b3c9(4): lea 0x0(%rax,%r15,8),%rsi
b3cd(3): mov %r13,(%rsi)
b3d0(2): jbe 0x2a(%rip)
b3d2(5): mov $0x1,%eax
b3d7(5): mov 0x20(%rsp),%rdx
b3dc(3): cmp %rbp,%rax
b3df(4): cmovnae %rax,%rdx
b3e3(3): add %r13,%rdx
b3e6(4): mov %rdx,0x0(%rsi,%rax,8)
b3ea(7): mov $0xffffffff,0x0(%rcx,%rax,4)
b3f1(4): add $0x1,%rax
b3f5(3): cmp %r11,%rax
b3f8(2): jnz 0xffffffdf(%rip)
b3fa(4): mov 0x58(%r14),%rbx
b3fe(3): sub %rbp,%r11
b401(3): add %r11,%rbx
b404(4): cmp 0x60(%r14),%r13
b408(4): mov %rbx,0x58(%r14)
b40c(2): jnl 0x6(%rip)
b40e(4): add %r11,0x68(%r14)
b412(4): cmp %rbx,0x40(%r14)
b416(5): mov 0x8(%rsp),%r15
b41b(5): cmovng 0x40(%r14),%rbx
b420(3): add %rbp,%r13
b423(5): jmp 0xfffffa9d(%rip)
b428(8): lea 0x0(,%rax,8),%rdi
b430(5): mov %rcx,0x18(%rsp)
b435(5): mov %r11,0x10(%rsp)
b43a(5): call 0xffff6ae6(%rip)
b43f(3): test %rax,%rax
b442(4): mov %rax,0x18(%r14)
b446(5): mov 0x10(%rsp),%r11
b44b(5): mov 0x18(%rsp),%rcx
b450(6): jnz 0xffffff20(%rip)
b456(5): mov $0xc,%eax
b45b(5): jmp 0xfffffa74(%rip)
b460(5): lea 0x50(%rsp),%rcx
b465(5): jmp 0xfffffe16(%rip)
b46a(5): call 0xffff6946(%rip)
b46f(4): mov 0x18(%r14),%rdx
b473(4): mov %r13,0x0(%rdx,%r15,8)
b477(5): jmp 0xfffffe77(%rip)
b47c(4): movzx 0x0(%rdx,%rax,1),%eax
b480(5): jmp 0xfffffe55(%rip)

"extend_buffers" :
b490(1): push %rbp
b491(1): push %rbx
b492(a): mov $0x1152921504606846974,%rdx
b49c(4): sub $0x8,%rsp
b4a0(4): mov 0x40(%rdi),%rax
b4a4(3): cmp %rdx,%rax
b4a7(6): jnbe 0x111(%rip)
b4ad(4): mov 0x58(%rdi),%rdx
b4b1(3): add %rax,%rax
b4b4(3): movsxd %esi,%rsi
b4b7(3): mov %rdi,%rbx
b4ba(3): cmp %rdx,%rax
b4bd(4): cmovnl %rdx,%rax
b4c1(3): cmp %rsi,%rax
b4c4(4): cmovnl %rax,%rsi
b4c8(5): call 0xfffff438(%rip)
b4cd(2): test %eax,%eax
b4cf(2): mov %eax,%ebp
b4d1(6): jnz 0xbc(%rip)
b4d7(7): mov 0xb8(%rbx),%rdi
b4de(3): test %rdi,%rdi
b4e1(2): jz 0x23(%rip)
b4e3(4): mov 0x40(%rbx),%rax
b4e7(8): lea 0x8(,%rax,8),%rsi
b4ef(5): call 0xffff6aa1(%rip)
b4f4(3): test %rax,%rax
b4f7(6): jz 0xc1(%rip)
b4fd(7): mov %rax,0xb8(%rbx)
b504(7): cmp $0x0,0x88(%rbx)
b50b(6): mov 0x90(%rbx),%eax
b511(2): jz 0x1f(%rip)
b513(3): cmp $0x1,%eax
b516(3): mov %rbx,%rdi
b519(6): jle 0xb7(%rip)
b51f(4): add $0x8,%rsp
b523(1): pop %rbx
b524(1): pop %rbp
b525(5): jmp 0xfffff94b(%rip)
b52a(6): nop 0x0(%rax,%rax,1)
b530(3): cmp $0x1,%eax
b533(2): jnle 0x6d(%rip)
b535(4): mov 0x78(%rbx),%rcx
b539(3): test %rcx,%rcx
b53c(2): jz 0x51(%rip)
b53e(4): mov 0x58(%rbx),%rsi
b542(4): cmp %rsi,0x40(%rbx)
b546(5): cmovng 0x40(%rbx),%rsi
b54b(4): mov 0x30(%rbx),%rax
b54f(3): cmp %rax,%rsi
b552(2): jnle 0x12(%rip)
b554(2): jmp 0x31(%rip)
b556(a): nop 0x0(%rax,%rax,1)
b560(4): mov 0x78(%rbx),%rcx
b564(3): mov (%rbx),%rdx
b567(3): add %rax,%rdx
b56a(4): add 0x28(%rbx),%rdx
b56e(3): movzx (%rdx),%edx
b571(4): movzx 0x0(%rcx,%rdx,1),%ecx
b575(4): mov 0x8(%rbx),%rdx
b579(3): mov %cl,0x0(%rdx,%rax,1)
b57c(4): add $0x1,%rax
b580(3): cmp %rax,%rsi
b583(2): jnz 0xffffffdd(%rip)
b585(4): mov %rax,0x30(%rbx)
b589(4): mov %rax,0x38(%rbx)
b58d(4): add $0x8,%rsp
b591(2): mov %ebp,%eax
b593(1): pop %rbx
b594(1): pop %rbp
b595(1): ret near (%rsp)
b596(a): nop 0x0(%rax,%rax,1)
b5a0(3): mov %rbx,%rdi
b5a3(5): call 0xfffff6fd(%rip)
b5a8(4): add $0x8,%rsp
b5ac(2): mov %ebp,%eax
b5ae(1): pop %rbx
b5af(1): pop %rbp
b5b0(1): ret near (%rsp)
b5b1(7): nop 0x0(%rax)
b5b8(5): mov $0xc,%ebp
b5bd(4): add $0x8,%rsp
b5c1(2): mov %ebp,%eax
b5c3(1): pop %rbx
b5c4(1): pop %rbp
b5c5(1): ret near (%rsp)
b5c6(a): nop 0x0(%rax,%rax,1)
b5d0(5): call 0xfffff660(%rip)
b5d5(4): add $0x8,%rsp
b5d9(2): mov %ebp,%eax
b5db(1): pop %rbx
b5dc(1): pop %rbp
b5dd(1): ret near (%rsp)

"clean_state_log_if_needed" :
b5e0(2): push %r12
b5e2(1): push %rbp
b5e3(3): mov %rsi,%rbp
b5e6(1): push %rbx
b5e7(4): mov 0x40(%rdi),%rax
b5eb(3): mov %rdi,%rbx
b5ee(7): mov 0xc0(%rdi),%r12
b5f5(3): cmp %rsi,%rax
b5f8(2): jnle 0x28(%rip)
b5fa(4): cmp 0x58(%rdi),%rax
b5fe(2): jnl 0x22(%rip)
b600(3): lea 0x1(%rbp),%esi
b603(3): mov %rbx,%rdi
b606(5): call 0xfffffe8a(%rip)
b60b(2): test %eax,%eax
b60d(2): jnz 0x9(%rip)
b60f(3): cmp %rbp,%r12
b612(2): jl 0x2e(%rip)
b614(2): xor %eax,%eax
b616(1): pop %rbx
b617(1): pop %rbp
b618(2): pop %r12
b61a(1): ret near (%rsp)
b61b(5): nop 0x0(%rax,%rax,1)
b620(4): mov 0x30(%rbx),%rax
b624(3): cmp %rbp,%rax
b627(2): jnle 0xffffffe8(%rip)
b629(4): cmp 0x58(%rbx),%rax
b62d(2): jnl 0xffffffe2(%rip)
b62f(3): lea 0x1(%rbp),%esi
b632(3): mov %rbx,%rdi
b635(5): call 0xfffffe5b(%rip)
b63a(2): test %eax,%eax
b63c(2): jz 0xffffffd3(%rip)
b63e(2): jmp 0xffffffd8(%rip)
b640(7): mov 0xb8(%rbx),%rax
b647(3): mov %rbp,%rdx
b64a(2): xor %esi,%esi
b64c(3): sub %r12,%rdx
b64f(4): shl/sal $0x3,%rdx
b653(5): lea 0x8(%rax,%r12,8),%rdi
b658(5): call 0xffff67e8(%rip)
b65d(7): mov %rbp,0xc0(%rbx)
b664(2): jmp 0xffffffb0(%rip)

"free_charset" :
b670(1): push %rbx
b671(3): mov %rdi,%rbx
b674(3): mov (%rdi),%rdi
b677(5): call 0xffff65e9(%rip)
b67c(4): mov 0x8(%rbx),%rdi
b680(5): call 0xffff65e0(%rip)
b685(4): mov 0x10(%rbx),%rdi
b689(5): call 0xffff65d7(%rip)
b68e(4): mov 0x18(%rbx),%rdi
b692(5): call 0xffff65ce(%rip)
b697(3): mov %rbx,%rdi
b69a(1): pop %rbx
b69b(5): jmp 0xffff65c5(%rip)

"free_token" :
b6a0(3): mov 0x8(%rdi),%eax
b6a3(5): and $0x400ff,%eax
b6a8(3): cmp $0x6,%eax
b6ab(2): jz 0x15(%rip)
b6ad(3): cmp $0x3,%eax
b6b0(2): jz 0x8(%rip)
b6b2(2): REP ret near (%rsp)
b6b4(4): nop 0x0(%rax)
b6b8(3): mov (%rdi),%rdi
b6bb(5): jmp 0xffff65a5(%rip)
b6c0(3): mov (%rdi),%rdi
b6c3(2): jmp 0xffffffad(%rip)

"free_tree" :
b6d0(4): lea 0x28(%rsi),%rdi
b6d4(4): sub $0x8,%rsp
b6d8(5): call 0xffffffc8(%rip)
b6dd(2): xor %eax,%eax
b6df(4): add $0x8,%rsp
b6e3(1): ret near (%rsp)

"re_dfa_add_node" :
b6f0(2): push %r15
b6f2(2): push %r14
b6f4(3): mov %rsi,%r14
b6f7(2): push %r13
b6f9(2): push %r12
b6fb(1): push %rbp
b6fc(1): push %rbx
b6fd(3): mov %rdi,%rbx
b700(4): sub $0x18,%rsp
b704(4): mov 0x10(%rdi),%rsi
b708(4): mov 0x8(%rdi),%rbp
b70c(3): cmp %rbp,%rsi
b70f(6): jnb 0xb1(%rip)
b715(4): mov 0x18(%rdi),%r12
b719(4): mov 0x28(%rdi),%rbp
b71d(3): mov %rsi,%rax
b720(2): mov %edx,%ecx
b722(4): shl/sal $0x4,%rax
b726(3): add (%rbx),%rax
b729(6): and $0xfffc00ff,%ecx
b72f(4): mov %rdx,0x8(%rax)
b733(3): mov %ecx,0x8(%rax)
b736(2): xor %ecx,%ecx
b738(3): cmp $0x6,%dl
b73b(3): mov %r14,(%rax)
b73e(3): setz %cl
b741(3): cmp $0x5,%dl
b744(2): jnz 0xe(%rip)
b746(2): xor %ecx,%ecx
b748(7): cmp $0x1,0xb4(%rbx)
b74f(3): setnle %cl
b752(4): movzx 0xa(%rax),%edx
b756(3): shl/sal $0x4,%ecx
b759(4): pxor %xmm0,%xmm0
b75d(3): and $0xef,%edx
b760(2): or %ecx,%edx
b762(3): mov %dl,0xa(%rax)
b765(8): mov $0xffffffff,0x0(%r12,%rsi,8)
b76d(4): mov 0x10(%rbx),%rax
b771(4): lea 0x0(%rax,%rax,2),%rax
b775(5): lea 0x0(%rbp,%rax,8),%rax
b77a(3): movups %xmm0,(%rax)
b77d(8): mov $0x0,0x10(%rax)
b785(4): mov 0x10(%rbx),%rax
b789(4): lea 0x0(%rax,%rax,2),%rdx
b78d(4): mov 0x30(%rbx),%rax
b791(4): lea 0x0(%rax,%rdx,8),%rax
b795(3): movups %xmm0,(%rax)
b798(8): mov $0x0,0x10(%rax)
b7a0(4): mov 0x10(%rbx),%rax
b7a4(4): lea 0x1(%rax),%rdx
b7a8(4): mov %rdx,0x10(%rbx)
b7ac(4): add $0x18,%rsp
b7b0(1): pop %rbx
b7b1(1): pop %rbp
b7b2(2): pop %r12
b7b4(2): pop %r13
b7b6(2): pop %r14
b7b8(2): pop %r15
b7ba(1): ret near (%rsp)
b7bb(5): nop 0x0(%rax,%rax,1)
b7c0(5): lea 0x0(%rbp,%rbp,1),%r13
b7c5(a): mov $0x768614336404564650,%rax
b7cf(3): cmp %rax,%r13
b7d2(6): jnbe 0xe0(%rip)
b7d8(3): mov (%rdi),%rdi
b7db(3): mov %rbp,%rsi
b7de(5): mov %rdx,0x8(%rsp)
b7e3(4): shl/sal $0x5,%rsi
b7e7(5): call 0xffff67a9(%rip)
b7ec(3): test %rax,%rax
b7ef(6): jz 0xc3(%rip)
b7f5(3): mov %rbp,%r15
b7f8(4): mov 0x18(%rbx),%rdi
b7fc(3): mov %rax,(%rbx)
b7ff(4): shl/sal $0x4,%r15
b803(3): mov %r15,%rsi
b806(5): call 0xffff678a(%rip)
b80b(4): mov 0x20(%rbx),%rdi
b80f(3): mov %r15,%rsi
b812(5): lea 0x0(%r13,%rbp,4),%r15
b817(3): mov %rax,%r12
b81a(4): shl/sal $0x3,%r15
b81e(5): call 0xffff6772(%rip)
b823(4): mov 0x28(%rbx),%rdi
b827(3): mov %r15,%rsi
b82a(4): mov %rax,(%rsp)
b82e(5): call 0xffff6762(%rip)
b833(4): mov 0x30(%rbx),%rdi
b837(3): mov %r15,%rsi
b83a(3): mov %rax,%rbp
b83d(5): call 0xffff6753(%rip)
b842(3): test %r12,%r12
b845(4): mov (%rsp),%rcx
b849(2): jz 0x37(%rip)
b84b(3): test %rcx,%rcx
b84e(2): jz 0x32(%rip)
b850(3): test %rbp,%rbp
b853(2): jz 0x2d(%rip)
b855(3): test %rax,%rax
b858(5): mov 0x8(%rsp),%rdx
b85d(2): jz 0x23(%rip)
b85f(4): mov %r12,0x18(%rbx)
b863(4): mov %rcx,0x20(%rbx)
b867(4): mov %rbp,0x28(%rbx)
b86b(4): mov %rax,0x30(%rbx)
b86f(4): mov %r13,0x8(%rbx)
b873(4): mov 0x10(%rbx),%rsi
b877(5): jmp 0xfffffea6(%rip)
b87c(4): nop 0x0(%rax)
b880(3): mov %r12,%rdi
b883(5): mov %rax,0x8(%rsp)
b888(4): mov %rcx,(%rsp)
b88c(5): call 0xffff63d4(%rip)
b891(4): mov (%rsp),%rcx
b895(3): mov %rcx,%rdi
b898(5): call 0xffff63c8(%rip)
b89d(3): mov %rbp,%rdi
b8a0(5): call 0xffff63c0(%rip)
b8a5(5): mov 0x8(%rsp),%rax
b8aa(3): mov %rax,%rdi
b8ad(5): call 0xffff63b3(%rip)
b8b2(7): mov $0xffffffff,%rax
b8b9(5): jmp 0xfffffef3(%rip)

"duplicate_node" :
b8c0(2): push %r13
b8c2(2): push %r12
b8c4(3): mov %rsi,%r13
b8c7(1): push %rbp
b8c8(1): push %rbx
b8c9(4): shl/sal $0x4,%r13
b8cd(3): mov %rsi,%rbp
b8d0(3): mov %edx,%r12d
b8d3(3): mov %rdi,%rbx
b8d6(4): sub $0x8,%rsp
b8da(3): mov (%rdi),%rax
b8dd(4): mov 0x0(%rax,%r13,1),%rsi
b8e1(5): mov 0x8(%rax,%r13,1),%rdx
b8e6(5): call 0xfffffe0a(%rip)
b8eb(4): cmp $0xffffffff,%rax
b8ef(2): jz 0x65(%rip)
b8f1(3): mov %r12d,%edi
b8f4(3): mov (%rbx),%r8
b8f7(3): mov %rax,%rsi
b8fa(5): and $0x3ff,%di
b8ff(4): shl/sal $0x4,%rsi
b903(2): mov %edi,%ecx
b905(6): and $0x3ff,%ecx
b90b(3): add %r8,%rsi
b90e(3): shl/sal $0x8,%ecx
b911(2): mov %ecx,%edx
b913(3): mov 0x8(%rsi),%ecx
b916(6): and $0xfffc00ff,%ecx
b91c(2): or %edx,%ecx
b91e(3): mov %ecx,0x8(%rsi)
b921(5): mov 0x8(%r8,%r13,1),%edx
b926(6): and $0xfffc00ff,%ecx
b92c(3): shr $0x8,%edx
b92f(2): or %edi,%edx
b931(6): and $0x3ff,%edx
b937(3): shl/sal $0x8,%edx
b93a(2): or %ecx,%edx
b93c(2): mov %edx,%ecx
b93e(3): mov %edx,0x8(%rsi)
b941(3): shr $0x10,%ecx
b944(2): mov %ecx,%edx
b946(3): or $0x4,%edx
b949(3): mov %dl,0xa(%rsi)
b94c(4): mov 0x20(%rbx),%rdx
b950(4): mov %rbp,0x0(%rdx,%rax,8)
b954(4): add $0x8,%rsp
b958(1): pop %rbx
b959(1): pop %rbp
b95a(2): pop %r12
b95c(2): pop %r13
b95e(1): ret near (%rsp)

"duplicate_node_closure" :
b960(2): push %r15
b962(2): push %r14
b964(3): mov %rsi,%r9
b967(2): push %r13
b969(2): push %r12
b96b(3): mov %rdi,%r14
b96e(1): push %rbp
b96f(1): push %rbx
b970(3): mov %rdx,%r13
b973(3): mov %r8d,%ebp
b976(4): sub $0x18,%rsp
b97a(5): mov %rcx,0x8(%rsp)
b97f(3): mov (%r14),%r8
b982(3): mov %r9,%rax
b985(4): mov 0x28(%r14),%rdi
b989(4): shl/sal $0x4,%rax
b98d(3): mov %r13,%r12
b990(3): add %r8,%rax
b993(4): cmp $0x4,0x8(%rax)
b997(6): jz 0x1b9(%rip)
b99d(4): lea 0x0(%r9,%r9,2),%r12
b9a1(4): shl/sal $0x3,%r12
b9a5(4): lea 0x0(%rdi,%r12,1),%rsi
b9a9(4): mov 0x8(%rsi),%rcx
b9ad(3): test %rcx,%rcx
b9b0(6): jz 0x1f9(%rip)
b9b6(5): lea 0x0(%r13,%r13,2),%rbx
b9bb(4): mov 0x10(%rsi),%rsi
b9bf(4): shl/sal $0x3,%rbx
b9c3(3): add %rbx,%rdi
b9c6(4): cmp $0x1,%rcx
b9ca(3): mov (%rsi),%r15
b9cd(8): mov $0x0,0x8(%rdi)
b9d5(6): jz 0x11b(%rip)
b9db(4): mov 0x10(%r14),%rdx
b9df(4): lea 0xffffffff(%rdx),%rsi
b9e3(3): mov %rsi,%rax
b9e6(4): shl/sal $0x4,%rax
b9ea(3): add %r8,%rax
b9ed(4): test $0x4,0xa(%rax)
b9f1(6): jz 0xaf(%rip)
b9f7(3): test %rsi,%rsi
b9fa(6): jle 0xa6(%rip)
ba00(4): shl/sal $0x4,%rdx
ba04(3): sub %rax,%r8
ba07(4): mov 0x20(%r14),%rcx
ba0b(5): lea 0xffffffe0(%r8,%rdx,1),%r8
ba10(2): jmp 0x1a(%rip)
ba12(6): nop 0x0(%rax,%rax,1)
ba18(3): add %r8,%rax
ba1b(4): sub $0x1,%rsi
ba1f(4): test $0x4,0xa(%rax)
ba23(2): jz 0x7d(%rip)
ba25(3): test %rsi,%rsi
ba28(2): jle 0x78(%rip)
ba2a(4): cmp %r15,0x0(%rcx,%rsi,8)
ba2e(2): jnz 0xffffffea(%rip)
ba30(3): mov 0x8(%rax),%edx
ba33(3): shr $0x8,%edx
ba36(6): and $0x3ff,%edx
ba3c(2): cmp %edx,%ebp
ba3e(2): jnz 0xffffffda(%rip)
ba40(5): call 0xffffefd0(%rip)
ba45(2): test %al,%al
ba47(2): jz 0x44(%rip)
ba49(4): mov 0x28(%r14),%rax
ba4d(2): mov %ebp,%edx
ba4f(3): mov %r14,%rdi
ba52(5): mov 0x10(%rax,%r12,1),%rax
ba57(4): mov 0x8(%rax),%r9
ba5b(3): mov %r9,%rsi
ba5e(4): mov %r9,(%rsp)
ba62(5): call 0xfffffe5e(%rip)
ba67(4): cmp $0xffffffff,%rax
ba6b(3): mov %rax,%r13
ba6e(2): jz 0x1d(%rip)
ba70(4): add 0x28(%r14),%rbx
ba74(3): mov %r13,%rsi
ba77(3): mov %rbx,%rdi
ba7a(5): call 0xffffef96(%rip)
ba7f(2): test %al,%al
ba81(4): mov (%rsp),%r9
ba85(6): jnz 0xfffffefa(%rip)
ba8b(5): mov $0xc,%eax
ba90(4): add $0x18,%rsp
ba94(1): pop %rbx
ba95(1): pop %rbp
ba96(2): pop %r12
ba98(2): pop %r13
ba9a(2): pop %r14
ba9c(2): pop %r15
ba9e(1): ret near (%rsp)
ba9f(1): nop 
baa0(2): mov %ebp,%edx
baa2(3): mov %r15,%rsi
baa5(3): mov %r14,%rdi
baa8(5): call 0xfffffe18(%rip)
baad(4): cmp $0xffffffff,%rax
bab1(3): mov %rax,%r13
bab4(2): jz 0xffffffd7(%rip)
bab6(4): mov 0x28(%r14),%rdi
baba(3): mov %r13,%rsi
babd(3): add %rbx,%rdi
bac0(5): call 0xffffef50(%rip)
bac5(2): test %al,%al
bac7(2): jz 0xffffffc4(%rip)
bac9(5): mov 0x8(%rsp),%rcx
bace(3): mov %ebp,%r8d
bad1(3): mov %r13,%rdx
bad4(3): mov %r15,%rsi
bad7(3): mov %r14,%rdi
bada(5): call 0xfffffe86(%rip)
badf(2): test %eax,%eax
bae1(6): jz 0xffffff68(%rip)
bae7(2): jmp 0xffffffa9(%rip)
bae9(7): nop 0x0(%rax)
baf0(5): cmp 0x8(%rsp),%r9
baf5(2): jnz 0xb(%rip)
baf7(3): cmp %r13,%r9
bafa(6): jnz 0xc2(%rip)
bb00(3): mov 0x8(%rax),%eax
bb03(3): mov %r15,%rsi
bb06(3): mov %r14,%rdi
bb09(3): shr $0x8,%eax
bb0c(5): and $0x3ff,%eax
bb11(2): or %eax,%ebp
bb13(2): mov %ebp,%edx
bb15(5): call 0xfffffdab(%rip)
bb1a(4): cmp $0xffffffff,%rax
bb1e(3): mov %rax,%r13
bb21(6): jz 0xffffff6a(%rip)
bb27(4): add 0x28(%r14),%rbx
bb2b(3): mov %rax,%rsi
bb2e(3): mov %rbx,%rdi
bb31(5): call 0xffffeedf(%rip)
bb36(2): test %al,%al
bb38(6): jz 0xffffff53(%rip)
bb3e(3): mov %r15,%r9
bb41(5): jmp 0xfffffe3e(%rip)
bb46(a): nop 0x0(%rax,%rax,1)
bb50(4): mov 0x18(%r14),%rax
bb54(5): lea 0x0(%r13,%r13,2),%rbx
bb59(8): lea 0x0(,%r9,8),%r15
bb61(2): mov %ebp,%edx
bb63(4): shl/sal $0x3,%rbx
bb67(4): mov 0x0(%rax,%r9,8),%r9
bb6b(9): mov $0x0,0x8(%rdi,%rbx,1)
bb74(3): mov %r14,%rdi
bb77(3): mov %r9,%rsi
bb7a(4): mov %r9,(%rsp)
bb7e(5): call 0xfffffd42(%rip)
bb83(4): cmp $0xffffffff,%rax
bb87(3): mov %rax,%r13
bb8a(4): mov (%rsp),%r9
bb8e(6): jz 0xfffffefd(%rip)
bb94(4): mov 0x18(%r14),%rax
bb98(4): mov %r9,(%rsp)
bb9c(4): mov 0x0(%rax,%r15,1),%rcx
bba0(4): mov %rcx,0x0(%rax,%r12,8)
bba4(5): jmp 0xfffffecc(%rip)
bba9(4): mov 0x18(%r14),%rax
bbad(4): mov 0x0(%rax,%r9,8),%rcx
bbb1(4): mov %rcx,0x0(%rax,%r13,8)
bbb5(2): xor %eax,%eax
bbb7(5): jmp 0xfffffed9(%rip)
bbbc(3): mov %r15,%rsi
bbbf(5): call 0xffffee51(%rip)
bbc4(2): mov %eax,%edx
bbc6(2): xor %eax,%eax
bbc8(2): test %dl,%dl
bbca(6): jnz 0xfffffec6(%rip)
bbd0(5): jmp 0xfffffebb(%rip)

"free_state" :
bbe0(1): push %rbx
bbe1(3): mov %rdi,%rbx
bbe4(4): mov 0x30(%rdi),%rdi
bbe8(5): call 0xffff6078(%rip)
bbed(4): mov 0x48(%rbx),%rdi
bbf1(5): call 0xffff606f(%rip)
bbf6(4): mov 0x50(%rbx),%rax
bbfa(4): lea 0x8(%rbx),%rdx
bbfe(3): cmp %rdx,%rax
bc01(2): jz 0x14(%rip)
bc03(4): mov 0x10(%rax),%rdi
bc07(5): call 0xffff6059(%rip)
bc0c(4): mov 0x50(%rbx),%rdi
bc10(5): call 0xffff6050(%rip)
bc15(4): mov 0x18(%rbx),%rdi
bc19(5): call 0xffff6047(%rip)
bc1e(4): mov 0x60(%rbx),%rdi
bc22(5): call 0xffff603e(%rip)
bc27(4): mov 0x58(%rbx),%rdi
bc2b(5): call 0xffff6035(%rip)
bc30(3): mov %rbx,%rdi
bc33(1): pop %rbx
bc34(5): jmp 0xffff602c(%rip)

"re_string_destruct" :
bc40(1): push %rbx
bc41(3): mov %rdi,%rbx
bc44(4): mov 0x10(%rdi),%rdi
bc48(5): call 0xffff6018(%rip)
bc4d(4): mov 0x18(%rbx),%rdi
bc51(5): call 0xffff600f(%rip)
bc56(7): cmp $0x0,0x8b(%rbx)
bc5d(2): jnz 0xb(%rip)
bc5f(1): pop %rbx
bc60(1): ret near (%rsp)
bc61(7): nop 0x0(%rax)
bc68(4): mov 0x8(%rbx),%rdi
bc6c(1): pop %rbx
bc6d(5): jmp 0xffff5ff3(%rip)

"free_dfa_content" :
bc80(2): push %r14
bc82(2): push %r13
bc84(2): push %r12
bc86(3): mov %rdi,%r12
bc89(1): push %rbp
bc8a(1): push %rbx
bc8b(3): mov (%rdi),%rdi
bc8e(3): test %rdi,%rdi
bc91(2): jz 0x2d(%rip)
bc93(6): cmp $0x0,0x10(%r12)
bc99(2): jz 0x25(%rip)
bc9b(2): xor %ebx,%ebx
bc9d(2): jmp 0x7(%rip)
bc9f(1): nop 
bca0(4): mov (%r12),%rdi
bca4(3): mov %rbx,%rax
bca7(4): add $0x1,%rbx
bcab(4): shl/sal $0x4,%rax
bcaf(3): add %rax,%rdi
bcb2(5): call 0xfffff9ee(%rip)
bcb7(5): cmp %rbx,0x10(%r12)
bcbc(2): jnbe 0xffffffe4(%rip)
bcbe(5): mov 0x18(%r12),%rdi
bcc3(5): call 0xffff5f9d(%rip)
bcc8(6): cmp $0x0,0x10(%r12)
bcce(2): jz 0x55(%rip)
bcd0(2): xor %ebx,%ebx
bcd2(2): xor %ebp,%ebp
bcd4(4): nop 0x0(%rax)
bcd8(5): mov 0x30(%r12),%rax
bcdd(3): test %rax,%rax
bce0(2): jz 0xc(%rip)
bce2(5): mov 0x10(%rax,%rbx,1),%rdi
bce7(5): call 0xffff5f79(%rip)
bcec(5): mov 0x38(%r12),%rax
bcf1(3): test %rax,%rax
bcf4(2): jz 0xc(%rip)
bcf6(5): mov 0x10(%rax,%rbx,1),%rdi
bcfb(5): call 0xffff5f65(%rip)
bd00(5): mov 0x28(%r12),%rax
bd05(3): test %rax,%rax
bd08(2): jz 0xc(%rip)
bd0a(5): mov 0x10(%rax,%rbx,1),%rdi
bd0f(5): call 0xffff5f51(%rip)
bd14(4): add $0x1,%rbp
bd18(4): add $0x18,%rbx
bd1c(5): cmp %rbp,0x10(%r12)
bd21(2): jnbe 0xffffffb7(%rip)
bd23(5): mov 0x28(%r12),%rdi
bd28(5): call 0xffff5f38(%rip)
bd2d(5): mov 0x30(%r12),%rdi
bd32(5): call 0xffff5f2e(%rip)
bd37(5): mov 0x38(%r12),%rdi
bd3c(5): call 0xffff5f24(%rip)
bd41(4): mov (%r12),%rdi
bd45(5): call 0xffff5f1b(%rip)
bd4a(5): mov 0x40(%r12),%rdi
bd4f(3): test %rdi,%rdi
bd52(2): jz 0x55(%rip)
bd54(3): xor %r14d,%r14d
bd57(3): xor %r13d,%r13d
bd5a(6): nop 0x0(%rax,%rax,1)
bd60(4): lea 0x0(%rdi,%r14,1),%rbp
bd64(5): cmp $0x0,0x0(%rbp)
bd69(2): jle 0x1e(%rip)
bd6b(2): xor %ebx,%ebx
bd6d(3): nop (%rax)
bd70(4): mov 0x10(%rbp),%rax
bd74(4): mov 0x0(%rax,%rbx,8),%rdi
bd78(4): add $0x1,%rbx
bd7c(5): call 0xfffffe64(%rip)
bd81(4): cmp %rbx,0x0(%rbp)
bd85(2): jnle 0xffffffeb(%rip)
bd87(4): mov 0x10(%rbp),%rdi
bd8b(4): add $0x1,%r13
bd8f(4): add $0x18,%r14
bd93(5): call 0xffff5ecd(%rip)
bd98(8): cmp %r13,0x88(%r12)
bda0(5): mov 0x40(%r12),%rdi
bda5(2): jnb 0xffffffbb(%rip)
bda7(5): call 0xffff5eb9(%rip)
bdac(5): mov 0x78(%r12),%rdi
bdb1(7): lea 0x10f48(%rip),%rax
bdb8(3): cmp %rax,%rdi
bdbb(2): jz 0x7(%rip)
bdbd(5): call 0xffff5ea3(%rip)
bdc2(8): mov 0xe0(%r12),%rdi
bdca(5): call 0xffff5e96(%rip)
bdcf(1): pop %rbx
bdd0(3): mov %r12,%rdi
bdd3(1): pop %rbp
bdd4(2): pop %r12
bdd6(2): pop %r13
bdd8(2): pop %r14
bdda(5): jmp 0xffff5e86(%rip)

"match_ctx_clean" :
bde0(2): push %r14
bde2(2): push %r13
bde4(3): mov %rdi,%r14
bde7(2): push %r12
bde9(1): push %rbp
bdea(1): push %rbx
bdeb(8): cmp $0x0,0xe8(%rdi)
bdf3(6): jle 0x86(%rip)
bdf9(3): xor %r13d,%r13d
bdfc(4): nop 0x0(%rax)
be00(7): mov 0xf8(%r14),%rax
be07(4): mov 0x0(%rax,%r13,8),%r12
be0b(6): cmp $0x0,0x20(%r12)
be11(2): jle 0x2c(%rip)
be13(2): xor %ebx,%ebx
be15(3): nop (%rax)
be18(5): mov 0x28(%r12),%rax
be1d(4): mov 0x0(%rax,%rbx,8),%rbp
be21(4): add $0x1,%rbx
be25(4): mov 0x20(%rbp),%rdi
be29(5): call 0xffff5e37(%rip)
be2e(3): mov %rbp,%rdi
be31(5): call 0xffff5e2f(%rip)
be36(5): cmp %rbx,0x20(%r12)
be3b(2): jnle 0xffffffdd(%rip)
be3d(5): mov 0x28(%r12),%rdi
be42(5): call 0xffff5e1e(%rip)
be47(5): mov 0x10(%r12),%rax
be4c(3): test %rax,%rax
be4f(2): jz 0x15(%rip)
be51(4): mov 0x10(%rax),%rdi
be55(5): call 0xffff5e0b(%rip)
be5a(5): mov 0x10(%r12),%rdi
be5f(5): call 0xffff5e01(%rip)
be64(3): mov %r12,%rdi
be67(4): add $0x1,%r13
be6b(5): call 0xffff5df5(%rip)
be70(7): cmp %r13,0xe8(%r14)
be77(2): jnle 0xffffff89(%rip)
be79(1): pop %rbx
be7a(b): mov $0x0,0xe8(%r14)
be85(b): mov $0x0,0xc8(%r14)
be90(1): pop %rbp
be91(2): pop %r12
be93(2): pop %r13
be95(2): pop %r14
be97(1): ret near (%rsp)

"re_string_char_size_at.part.0" :
bea0(4): mov 0x30(%rdi),%rcx
bea4(4): lea 0x1(%rsi),%rax
bea8(3): cmp %rcx,%rax
beab(2): jnl 0x3d(%rip)
bead(4): mov 0x10(%rdi),%rdx
beb1(8): lea 0x0(,%rax,4),%rdi
beb9(4): cmp $0xff,0x0(%rdx,%rax,4)
bebd(2): jnz 0x2b(%rip)
bebf(3): sub %rsi,%rcx
bec2(5): lea 0xfffffffc(%rdx,%rdi,1),%rsi
bec7(5): mov $0x2,%edx
becc(2): jmp 0xf(%rip)
bece(2): nop 
bed0(4): add $0x1,%rdx
bed4(5): cmp $0xff,0xfffffffc(%rsi,%rdx,4)
bed9(2): jnz 0x14(%rip)
bedb(3): cmp %rcx,%rdx
bede(2): mov %edx,%eax
bee0(2): jnz 0xfffffff0(%rip)
bee2(2): REP ret near (%rsp)
bee4(4): nop 0x0(%rax)
bee8(5): mov $0x1,%eax
beed(2): REP ret near (%rsp)

"re_node_set_compare.part.2" :
bef0(4): mov 0x8(%rdi),%rdx
bef4(2): xor %eax,%eax
bef6(4): cmp 0x8(%rsi),%rdx
befa(2): jz 0x6(%rip)
befc(2): REP ret near (%rsp)
befe(2): nop 
bf00(4): lea 0xffffffff(%rdx),%rax
bf04(8): lea 0x0(,%rax,8),%rdx
bf0c(2): jmp 0x21(%rip)
bf0e(2): nop 
bf10(4): mov 0x10(%rdi),%rcx
bf14(4): mov 0x0(%rcx,%rdx,1),%r8
bf18(4): mov 0x10(%rsi),%rcx
bf1c(4): mov 0x0(%rcx,%rdx,1),%rcx
bf20(4): sub $0x8,%rdx
bf24(3): cmp %rcx,%r8
bf27(2): jnz 0x19(%rip)
bf29(4): sub $0x1,%rax
bf2d(3): test %rax,%rax
bf30(2): jns 0xffffffe0(%rip)
bf32(5): mov $0x1,%eax
bf37(1): ret near (%rsp)
bf38(8): nop 0x0(%rax,%rax,1)
bf40(2): xor %eax,%eax
bf42(1): ret near (%rsp)

"re_node_set_contains.isra.3" :
bf50(2): xor %eax,%eax
bf52(3): test %rdi,%rdi
bf55(2): jle 0x40(%rip)
bf57(3): mov (%rsi),%r8
bf5a(4): sub $0x1,%rdi
bf5e(2): xor %esi,%esi
bf60(3): cmp %rdi,%rsi
bf63(2): jnb 0x2a(%rip)
bf65(4): lea 0x0(%rsi,%rdi,1),%rcx
bf69(3): shr $0x1,%rcx
bf6c(4): cmp 0x0(%r8,%rcx,8),%rdx
bf70(2): jle 0x18(%rip)
bf72(2): jmp 0x2e(%rip)
bf74(4): nop 0x0(%rax)
bf78(4): lea 0x0(%rsi,%rcx,1),%rax
bf7c(3): shr $0x1,%rax
bf7f(4): cmp %rdx,0x0(%r8,%rax,8)
bf83(2): jl 0x2d(%rip)
bf85(3): mov %rax,%rcx
bf88(3): cmp %rcx,%rsi
bf8b(2): jb 0xffffffed(%rip)
bf8d(2): xor %eax,%eax
bf8f(4): cmp 0x0(%r8,%rsi,8),%rdx
bf93(2): jz 0x2d(%rip)
bf95(2): REP ret near (%rsp)
bf97(9): nop 0x0(%rax,%rax,1)
bfa0(3): mov %rcx,%rax
bfa3(3): mov %rdi,%rcx
bfa6(a): nop 0x0(%rax,%rax,1)
bfb0(4): lea 0x1(%rax),%rsi
bfb4(3): mov %rcx,%rdi
bfb7(2): jmp 0xffffffa9(%rip)
bfb9(7): nop 0x0(%rax)
bfc0(4): lea 0x1(%rsi),%rax
bfc4(1): ret near (%rsp)

"check_arrival_expand_ecl_sub" :
bfd0(2): push %r15
bfd2(2): push %r14
bfd4(4): lea 0x10(%rsi),%r14
bfd8(2): push %r13
bfda(2): push %r12
bfdc(3): mov %rcx,%r15
bfdf(1): push %rbp
bfe0(1): push %rbx
bfe1(3): mov %rdi,%r12
bfe4(3): mov %rsi,%rbp
bfe7(3): mov %rdx,%rbx
bfea(3): mov %r8d,%r13d
bfed(4): sub $0x8,%rsp
bff1(4): mov 0x8(%rbp),%rdi
bff5(3): mov %rbx,%rdx
bff8(3): mov %r14,%rsi
bffb(5): call 0xffffff55(%rip)
c000(3): test %rax,%rax
c003(2): jnz 0x6d(%rip)
c005(3): mov %rbx,%rax
c008(4): shl/sal $0x4,%rax
c00c(4): add (%r12),%rax
c010(4): movzx 0x8(%rax),%edx
c014(3): cmp %r13d,%edx
c017(2): jnz 0x7(%rip)
c019(3): cmp %r15,(%rax)
c01c(2): jz 0x3c(%rip)
c01e(3): mov %rbx,%rsi
c021(3): mov %rbp,%rdi
c024(5): call 0xffffe9ec(%rip)
c029(2): test %al,%al
c02b(2): jz 0x5d(%rip)
c02d(4): lea 0x0(%rbx,%rbx,2),%rbx
c031(5): mov 0x28(%r12),%rdx
c036(4): shl/sal $0x3,%rbx
c03a(3): add %rbx,%rdx
c03d(4): mov 0x8(%rdx),%rax
c041(3): test %rax,%rax
c044(2): jz 0x2c(%rip)
c046(4): cmp $0x2,%rax
c04a(4): mov 0x10(%rdx),%rdx
c04e(2): jz 0x52(%rip)
c050(3): mov (%rdx),%rbx
c053(2): jmp 0xffffff9e(%rip)
c055(3): nop (%rax)
c058(4): cmp $0x9,%r13d
c05c(2): jnz 0x14(%rip)
c05e(3): mov %rbx,%rsi
c061(3): mov %rbp,%rdi
c064(5): call 0xffffe9ac(%rip)
c069(2): test %al,%al
c06b(2): jz 0x1d(%rip)
c06d(3): nop (%rax)
c070(2): xor %eax,%eax
c072(4): add $0x8,%rsp
c076(1): pop %rbx
c077(1): pop %rbp
c078(2): pop %r12
c07a(2): pop %r13
c07c(2): pop %r14
c07e(2): pop %r15
c080(1): ret near (%rsp)
c081(7): nop 0x0(%rax)
c088(4): add $0x8,%rsp
c08c(5): mov $0xc,%eax
c091(1): pop %rbx
c092(1): pop %rbp
c093(2): pop %r12
c095(2): pop %r13
c097(2): pop %r14
c099(2): pop %r15
c09b(1): ret near (%rsp)
c09c(4): nop 0x0(%rax)
c0a0(4): mov 0x8(%rdx),%rdx
c0a4(3): mov %r13d,%r8d
c0a7(3): mov %r15,%rcx
c0aa(3): mov %rbp,%rsi
c0ad(3): mov %r12,%rdi
c0b0(5): call 0xffffff20(%rip)
c0b5(2): test %eax,%eax
c0b7(2): jnz 0xffffffbb(%rip)
c0b9(5): mov 0x28(%r12),%rax
c0be(5): mov 0x10(%rax,%rbx,1),%rdx
c0c3(2): jmp 0xffffff8d(%rip)

"re_node_set_remove_at.isra.4.part.5" :
c0d0(3): mov (%rdi),%rax
c0d3(3): cmp %rdx,%rax
c0d6(2): jle 0x2c(%rip)
c0d8(4): sub $0x1,%rax
c0dc(3): cmp %rax,%rdx
c0df(3): mov %rax,(%rdi)
c0e2(2): jnl 0x20(%rip)
c0e4(3): mov (%rsi),%rax
c0e7(9): nop 0x0(%rax,%rax,1)
c0f0(5): mov 0x8(%rax,%rdx,8),%rcx
c0f5(4): mov %rcx,0x0(%rax,%rdx,8)
c0f9(4): add $0x1,%rdx
c0fd(3): cmp (%rdi),%rdx
c100(2): jl 0xfffffff0(%rip)
c102(2): REP ret near (%rsp)

"optimize_subexps" :
c110(4): movzx 0x30(%rsi),%eax
c114(2): cmp $0x4,%al
c116(2): jz 0x5a(%rip)
c118(2): cmp $0x11,%al
c11a(2): jz 0x6(%rip)
c11c(2): xor %eax,%eax
c11e(1): ret near (%rsp)
c11f(1): nop 
c120(4): mov 0x8(%rsi),%rax
c124(3): test %rax,%rax
c127(2): jz 0xfffffff5(%rip)
c129(4): cmp $0x11,0x30(%rax)
c12d(2): jnz 0xffffffef(%rip)
c12f(4): mov 0x28(%rax),%rcx
c133(4): mov 0x8(%rax),%rax
c137(3): test %rax,%rax
c13a(4): mov %rax,0x8(%rsi)
c13e(2): jz 0x5(%rip)
c140(3): mov %rsi,(%rax)
c143(7): mov 0xe0(%rdi),%rax
c14a(4): mov 0x28(%rsi),%rdx
c14e(4): cmp $0x3f,%rcx
c152(4): mov 0x0(%rax,%rdx,8),%rdx
c156(4): mov %rdx,0x0(%rax,%rcx,8)
c15a(2): jnle 0xffffffc2(%rip)
c15c(7): mov $0xfffffffe,%rax
c163(3): rol %cl,%rax
c166(7): and %rax,0xa0(%rdi)
c16d(2): jmp 0xffffffaf(%rip)
c16f(1): nop 
c170(7): mov 0xe0(%rdi),%rax
c177(3): test %rax,%rax
c17a(2): jz 0xffffffa2(%rip)
c17c(4): movsxd 0x28(%rsi),%rdx
c180(4): mov 0x0(%rax,%rdx,8),%rcx
c184(5): mov $0x1,%eax
c189(2): shl/sal %cl,%eax
c18b(4): mov %rcx,0x28(%rsi)
c18f(2): cwde 
c191(7): or %rax,0xa0(%rdi)
c198(2): xor %eax,%eax
c19a(1): ret near (%rsp)

"calc_next" :
c1a0(4): movzx 0x30(%rsi),%eax
c1a4(4): mov 0x8(%rsi),%rdx
c1a8(2): cmp $0xb,%al
c1aa(2): jz 0x46(%rip)
c1ac(2): cmp $0x10,%al
c1ae(2): jz 0x2a(%rip)
c1b0(3): test %rdx,%rdx
c1b3(2): jz 0xa(%rip)
c1b5(4): mov 0x20(%rsi),%rax
c1b9(4): mov %rax,0x20(%rdx)
c1bd(4): mov 0x10(%rsi),%rax
c1c1(3): test %rax,%rax
c1c4(2): jz 0xa(%rip)
c1c6(4): mov 0x20(%rsi),%rdx
c1ca(4): mov %rdx,0x20(%rax)
c1ce(2): xor %eax,%eax
c1d0(1): ret near (%rsp)
c1d1(7): nop 0x0(%rax)
c1d8(4): mov 0x10(%rsi),%rax
c1dc(4): mov 0x18(%rax),%rcx
c1e0(4): mov %rcx,0x20(%rdx)
c1e4(4): mov 0x20(%rsi),%rdx
c1e8(4): mov %rdx,0x20(%rax)
c1ec(2): xor %eax,%eax
c1ee(1): ret near (%rsp)
c1ef(1): nop 
c1f0(4): mov %rsi,0x20(%rdx)
c1f4(2): xor %eax,%eax
c1f6(1): ret near (%rsp)

"check_dst_limits.isra.13" :
c200(2): push %r15
c202(2): push %r14
c204(2): push %r13
c206(2): push %r12
c208(1): push %rbp
c209(1): push %rbx
c20a(2): xor %ebx,%ebx
c20c(4): sub $0x48,%rsp
c210(7): mov 0x98(%rdi),%rax
c217(7): mov 0xc8(%rdi),%r15
c21e(8): mov 0x80(%rsp),%r12
c226(5): mov %rax,0x8(%rsp)
c22b(3): mov %r15,%rbp
c22e(3): cmp %rbp,%rbx
c231(2): jnl 0x5a(%rip)
c233(4): lea 0x0(%rbx,%rbp,1),%rax
c237(7): mov 0xd8(%rdi),%r13
c23e(3): mov %rax,%r10
c241(4): shr $0x3f,%r10
c245(3): add %rax,%r10
c248(3): sar $0x1,%r10
c24b(4): lea 0x0(%r10,%r10,4),%rax
c24f(5): cmp 0x8(%r13,%rax,8),%r8
c254(2): jle 0x32(%rip)
c256(5): jmp 0x19a(%rip)
c25b(5): nop 0x0(%rax,%rax,1)
c260(4): lea 0x0(%rbx,%r10,1),%r11
c264(3): mov %r11,%rax
c267(4): shr $0x3f,%rax
c26b(3): add %r11,%rax
c26e(3): sar $0x1,%rax
c271(4): lea 0x0(%rax,%rax,4),%r11
c275(3): mov %rax,%r14
c278(5): cmp %r8,0x8(%r13,%r11,8)
c27d(6): jl 0x183(%rip)
c283(3): mov %rax,%r10
c286(3): cmp %r10,%rbx
c289(2): jl 0xffffffd7(%rip)
c28b(3): cmp %rbx,%r15
c28e(6): jle 0x1a2(%rip)
c294(7): mov 0xd8(%rdi),%r11
c29b(4): lea 0x0(%rbx,%rbx,4),%rax
c29f(4): lea 0x0(%r11,%rax,8),%rax
c2a3(4): cmp 0x8(%rax),%r8
c2a7(7): mov $0xffffffff,%rax
c2ae(4): cmovne %rax,%rbx
c2b2(3): mov %r15,%rax
c2b5(2): xor %ebp,%ebp
c2b7(3): cmp %rax,%rbp
c2ba(2): jnl 0x5a(%rip)
c2bc(5): lea 0x0(%rbp,%rax,1),%r11
c2c1(3): mov %r11,%r10
c2c4(4): shr $0x3f,%r10
c2c8(3): add %r11,%r10
c2cb(7): mov 0xd8(%rdi),%r11
c2d2(3): sar $0x1,%r10
c2d5(4): lea 0x0(%r10,%r10,4),%r13
c2d9(5): cmp 0x8(%r11,%r13,8),%r12
c2de(2): jle 0x31(%rip)
c2e0(5): jmp 0x130(%rip)
c2e5(3): nop (%rax)
c2e8(5): lea 0x0(%rbp,%r10,1),%r13
c2ed(3): mov %r13,%rax
c2f0(4): shr $0x3f,%rax
c2f4(3): add %r13,%rax
c2f7(3): sar $0x1,%rax
c2fa(4): lea 0x0(%rax,%rax,4),%r13
c2fe(3): mov %rax,%r14
c301(5): cmp %r12,0x8(%r11,%r13,8)
c306(6): jl 0x11a(%rip)
c30c(3): mov %rax,%r10
c30f(3): cmp %r10,%rbp
c312(2): jl 0xffffffd6(%rip)
c314(3): cmp %rbp,%r15
c317(6): jle 0x129(%rip)
c31d(7): mov 0xd8(%rdi),%r10
c324(5): lea 0x0(%rbp,%rbp,4),%rax
c329(4): lea 0x0(%r10,%rax,8),%rax
c32d(4): cmp 0x8(%rax),%r12
c331(7): mov $0xffffffff,%rax
c338(4): cmovne %rax,%rbp
c33c(4): cmp $0x0,(%rsi)
c340(6): jle 0x122(%rip)
c346(5): mov %rbp,0x30(%rsp)
c34b(5): mov %r9,0x20(%rsp)
c350(3): mov %rdi,%r13
c353(5): mov %r8,0x18(%rsp)
c358(5): mov %rcx,0x10(%rsp)
c35d(3): xor %r14d,%r14d
c360(5): mov %rsi,0x38(%rsp)
c365(5): mov %rbx,0x28(%rsp)
c36a(3): mov %rdx,%rbp
c36d(3): mov %r12,%r15
c370(4): mov 0x0(%rbp),%rax
c374(7): mov 0xd8(%r13),%rdx
c37b(3): mov %r13,%rdi
c37e(5): mov 0x28(%rsp),%r9
c383(5): mov 0x18(%rsp),%r8
c388(5): mov 0x10(%rsp),%rcx
c38d(4): mov 0x0(%rax,%r14,8),%rsi
c391(4): lea 0x0(%rsi,%rsi,4),%rax
c395(4): lea 0x0(%rdx,%rax,8),%rax
c399(5): mov 0x8(%rsp),%rdx
c39e(3): mov (%rax),%rax
c3a1(4): shl/sal $0x4,%rax
c3a5(3): add (%rdx),%rax
c3a8(3): mov (%rax),%r12
c3ab(3): mov %r12,%rdx
c3ae(5): call 0xffffe412(%rip)
c3b3(2): mov %eax,%ebx
c3b5(4): mov 0x0(%rbp),%rax
c3b9(5): mov 0x30(%rsp),%r9
c3be(5): mov 0x20(%rsp),%rcx
c3c3(3): mov %r15,%r8
c3c6(3): mov %r12,%rdx
c3c9(3): mov %r13,%rdi
c3cc(4): mov 0x0(%rax,%r14,8),%rsi
c3d0(5): call 0xffffe3f0(%rip)
c3d5(2): cmp %eax,%ebx
c3d7(2): jz 0x79(%rip)
c3d9(5): mov $0x1,%eax
c3de(4): add $0x48,%rsp
c3e2(1): pop %rbx
c3e3(1): pop %rbp
c3e4(2): pop %r12
c3e6(2): pop %r13
c3e8(2): pop %r14
c3ea(2): pop %r15
c3ec(1): ret near (%rsp)
c3ed(3): nop (%rax)
c3f0(3): mov %r10,%r14
c3f3(3): mov %rbp,%r10
c3f6(a): nop 0x0(%rax,%rax,1)
c400(4): lea 0x1(%r14),%rbx
c404(3): mov %r10,%rbp
c407(5): jmp 0xfffffe27(%rip)
c40c(4): nop 0x0(%rax)
c410(3): mov %r10,%r14
c413(3): mov %rax,%r10
c416(a): nop 0x0(%rax,%rax,1)
c420(4): lea 0x1(%r14),%rbp
c424(3): mov %r10,%rax
c427(5): jmp 0xfffffe90(%rip)
c42c(4): nop 0x0(%rax)
c430(7): mov $0xffffffff,%rbx
c437(5): jmp 0xfffffe7b(%rip)
c43c(4): nop 0x0(%rax)
c440(7): mov $0xffffffff,%rbp
c447(5): jmp 0xfffffef5(%rip)
c44c(4): nop 0x0(%rax)
c450(5): mov 0x38(%rsp),%rax
c455(4): add $0x1,%r14
c459(3): cmp (%rax),%r14
c45c(6): jl 0xffffff14(%rip)
c462(2): xor %eax,%eax
c464(5): jmp 0xffffff7a(%rip)

"re_node_set_merge" :
c470(3): test %rsi,%rsi
c473(6): jz 0xf5(%rip)
c479(4): mov 0x8(%rsi),%rdx
c47d(3): test %rdx,%rdx
c480(6): jz 0xe8(%rip)
c486(2): push %r12
c488(1): push %rbp
c489(3): mov %rsi,%r12
c48c(1): push %rbx
c48d(4): mov 0x8(%rdi),%rax
c491(3): mov %rdi,%rbx
c494(3): mov (%rdi),%rsi
c497(4): lea 0x0(%rax,%rdx,2),%rcx
c49b(3): cmp %rcx,%rsi
c49e(6): jl 0x14a(%rip)
c4a4(3): test %rax,%rax
c4a7(6): jz 0x179(%rip)
c4ad(4): lea 0x0(%rax,%rdx,2),%rbp
c4b1(4): sub $0x1,%rdx
c4b5(4): sub $0x1,%rax
c4b9(3): mov %rdx,%rdi
c4bc(3): not %rdi
c4bf(3): test %rdi,%rdi
c4c2(2): jns 0x3e(%rip)
c4c4(3): test %rax,%rax
c4c7(2): js 0x39(%rip)
c4c9(4): mov 0x10(%rbx),%rcx
c4cd(5): mov 0x10(%r12),%rsi
c4d2(4): mov 0x0(%rsi,%rdx,8),%rsi
c4d6(4): cmp %rsi,0x0(%rcx,%rax,8)
c4da(6): jz 0x96(%rip)
c4e0(6): jnl 0xa8(%rip)
c4e6(4): sub $0x1,%rdx
c4ea(4): sub $0x1,%rbp
c4ee(3): mov %rdx,%rdi
c4f1(4): mov %rsi,0x0(%rcx,%rbp,8)
c4f5(3): not %rdi
c4f8(3): test %rdi,%rdi
c4fb(2): js 0xffffffc9(%rip)
c4fd(3): nop (%rax)
c500(3): test %rdx,%rdx
c503(6): jns 0x95(%rip)
c509(4): mov 0x8(%rbx),%rcx
c50d(5): mov 0x8(%r12),%rax
c512(5): lea 0xffffffff(%rcx,%rax,2),%r8
c517(3): mov %r8,%rdx
c51a(3): sub %rbp,%rdx
c51d(4): add $0x1,%rdx
c521(2): jz 0x39(%rip)
c523(4): mov 0x10(%rbx),%rdi
c527(4): lea 0xffffffff(%rcx),%rax
c52b(3): add %rdx,%rcx
c52e(4): mov %rcx,0x8(%rbx)
c532(6): nop 0x0(%rax,%rax,1)
c538(4): mov 0x0(%rdi,%r8,8),%rsi
c53c(4): mov 0x0(%rdi,%rax,8),%rcx
c540(4): lea 0x0(%rax,%rdx,1),%r9
c544(4): lea 0x0(%rdi,%r9,8),%r9
c548(3): cmp %rcx,%rsi
c54b(2): jle 0x75(%rip)
c54d(4): sub $0x1,%r8
c551(4): sub $0x1,%rdx
c555(3): mov %rsi,(%r9)
c558(2): jnz 0xffffffe0(%rip)
c55a(2): xor %eax,%eax
c55c(1): pop %rbx
c55d(1): pop %rbp
c55e(2): pop %r12
c560(1): ret near (%rsp)
c561(7): nop 0x0(%rax)
c568(2): xor %eax,%eax
c56a(1): ret near (%rsp)
c56b(5): nop 0x0(%rax,%rax,1)
c570(4): sub $0x1,%rdx
c574(4): sub $0x1,%rax
c578(3): mov %rdx,%rdi
c57b(3): not %rdi
c57e(5): jmp 0xffffff41(%rip)
c583(5): nop 0x0(%rax,%rax,1)
c588(4): sub $0x1,%rax
c58c(5): jmp 0xffffff33(%rip)
c591(7): nop 0x0(%rax)
c598(4): mov 0x10(%rbx),%rax
c59c(4): add $0x1,%rdx
c5a0(5): mov 0x10(%r12),%rsi
c5a5(3): sub %rdx,%rbp
c5a8(4): shl/sal $0x3,%rdx
c5ac(4): lea 0x0(%rax,%rbp,8),%rdi
c5b0(5): call 0xffff5930(%rip)
c5b5(5): jmp 0xffffff54(%rip)
c5ba(6): nop 0x0(%rax,%rax,1)
c5c0(4): sub $0x1,%rax
c5c4(3): mov %rcx,(%r9)
c5c7(6): jns 0xffffff71(%rip)
c5cd(4): lea 0x0(%rdi,%rbp,8),%rsi
c5d1(4): shl/sal $0x3,%rdx
c5d5(5): call 0xffff590b(%rip)
c5da(2): xor %eax,%eax
c5dc(5): jmp 0xffffff80(%rip)
c5e1(7): nop 0x0(%rax)
c5e8(3): add %rsi,%rdx
c5eb(4): mov 0x10(%rdi),%rdi
c5ef(4): lea 0x0(%rdx,%rdx,1),%rbp
c5f3(4): shl/sal $0x4,%rdx
c5f7(3): mov %rdx,%rsi
c5fa(5): call 0xffff5996(%rip)
c5ff(3): test %rax,%rax
c602(2): jz 0x42(%rip)
c604(4): mov %rax,0x10(%rbx)
c608(3): mov %rbp,(%rbx)
c60b(4): mov 0x8(%rbx),%rax
c60f(5): mov 0x8(%r12),%rdx
c614(5): jmp 0xfffffe90(%rip)
c619(7): nop 0x0(%rax)
c620(4): mov %rdx,0x8(%rbx)
c624(5): mov 0x8(%r12),%rax
c629(4): mov 0x10(%rbx),%rdi
c62d(5): mov 0x10(%r12),%rsi
c632(8): lea 0x0(,%rax,8),%rdx
c63a(5): call 0xffff58a6(%rip)
c63f(5): jmp 0xffffff1b(%rip)
c644(5): mov $0xc,%eax
c649(5): jmp 0xffffff13(%rip)

"calc_eclosure_iter" :
c650(2): push %r15
c652(2): push %r14
c654(3): mov %rsi,%r15
c657(2): push %r13
c659(2): push %r12
c65b(1): push %rbp
c65c(1): push %rbx
c65d(4): lea 0x0(%rdx,%rdx,2),%rbx
c661(3): mov %rdx,%rbp
c664(4): sub $0x68,%rsp
c668(4): mov 0x28(%rsi),%r12
c66c(4): shl/sal $0x3,%rbx
c670(9): mov $0x28,%rax
c679(5): mov %rax,0x58(%rsp)
c67e(2): xor %eax,%eax
c680(5): mov %rdi,0x10(%rsp)
c685(4): mov %ecx,0x1c(%rsp)
c689(3): add %rbx,%r12
c68c(5): mov 0x8(%r12),%rax
c691(9): mov $0x0,0x28(%rsp)
c69a(4): lea 0x1(%rax),%rdi
c69e(5): mov %rdi,0x20(%rsp)
c6a3(4): shl/sal $0x3,%rdi
c6a7(5): call 0xffff5879(%rip)
c6ac(3): test %rax,%rax
c6af(5): mov %rax,0x30(%rsp)
c6b4(6): jz 0x23c(%rip)
c6ba(4): mov 0x30(%r15),%rax
c6be(3): mov (%r15),%rdx
c6c1(3): mov %rbp,%r13
c6c4(4): shl/sal $0x4,%r13
c6c8(9): mov $0xffffffff,0x8(%rax,%rbx,1)
c6d1(4): lea 0x0(%rdx,%r13,1),%rax
c6d5(4): mov 0x8(%rax),%r8d
c6d9(7): test $0x3ff00,%r8d
c6e0(6): jnz 0x1a0(%rip)
c6e6(4): test $0x8,0x8(%rax)
c6ea(6): jz 0xc6(%rip)
c6f0(4): mov 0x28(%r15),%rsi
c6f4(4): lea 0x0(%rsi,%rbx,1),%rax
c6f8(5): cmp $0x0,0x8(%rax)
c6fd(6): jle 0xb3(%rip)
c703(5): lea 0x20(%rsp),%rdx
c708(5): mov $0x0,0x1b(%rsp)
c70d(3): xor %r14d,%r14d
c710(5): lea 0x40(%rsp),%r12
c715(5): mov %rdx,0x8(%rsp)
c71a(2): jmp 0x1c(%rip)
c71c(4): nop 0x0(%rax)
c720(4): mov 0x28(%r15),%rsi
c724(4): add $0x1,%r14
c728(4): lea 0x0(%rsi,%rbx,1),%rax
c72c(4): cmp %r14,0x8(%rax)
c730(6): jle 0x107(%rip)
c736(4): mov 0x10(%rax),%rax
c73a(4): mov 0x0(%rax,%r14,8),%rdx
c73e(4): mov 0x30(%r15),%rax
c742(4): lea 0x0(%rdx,%rdx,2),%r8
c746(8): lea 0x0(,%r8,8),%r13
c74e(3): add %r13,%rax
c751(4): mov 0x8(%rax),%rcx
c755(4): cmp $0xffffffff,%rcx
c759(6): jz 0xc7(%rip)
c75f(3): test %rcx,%rcx
c762(6): jz 0x176(%rip)
c768(4): movdqu (%rax),%xmm0
c76c(5): movaps %xmm0,0x40(%rsp)
c771(4): mov 0x10(%rax),%rax
c775(5): mov %rax,0x50(%rsp)
c77a(5): mov 0x8(%rsp),%rdi
c77f(3): mov %r12,%rsi
c782(5): call 0xfffffcee(%rip)
c787(2): test %eax,%eax
c789(2): jnz 0x6d(%rip)
c78b(4): mov 0x30(%r15),%rax
c78f(6): cmp $0x0,0x8(%rax,%r13,1)
c795(2): jnz 0xffffff8b(%rip)
c797(5): mov 0x50(%rsp),%rdi
c79c(5): call 0xffff54c4(%rip)
c7a1(5): mov $0x1,0x1b(%rsp)
c7a6(5): jmp 0xffffff7a(%rip)
c7ab(5): nop 0x0(%rax,%rax,1)
c7b0(5): lea 0x20(%rsp),%rdi
c7b5(3): mov %rbp,%rsi
c7b8(5): call 0xffffe258(%rip)
c7bd(2): test %al,%al
c7bf(6): jz 0x131(%rip)
c7c5(4): mov 0x30(%r15),%rax
c7c9(6): movdqa 0x20(%rsp),%xmm0
c7cf(4): movups %xmm0,0x0(%rax,%rbx,1)
c7d3(5): mov 0x30(%rsp),%rdx
c7d8(5): mov %rdx,0x10(%rax,%rbx,1)
c7dd(5): mov 0x10(%rsp),%rbx
c7e2(5): mov 0x30(%rsp),%rax
c7e7(6): movdqa 0x20(%rsp),%xmm0
c7ed(3): movaps %xmm0,(%rbx)
c7f0(4): mov %rax,0x10(%rbx)
c7f4(2): xor %eax,%eax
c7f6(5): mov 0x58(%rsp),%rsi
c7fb(9): xor $0x28,%rsi
c804(6): jnz 0xf6(%rip)
c80a(4): add $0x68,%rsp
c80e(1): pop %rbx
c80f(1): pop %rbp
c810(2): pop %r12
c812(2): pop %r13
c814(2): pop %r14
c816(2): pop %r15
c818(1): ret near (%rsp)
c819(7): nop 0x0(%rax)
c820(4): lea 0x0(%rsi,%rbx,1),%rax
c824(4): add $0x1,%r14
c828(5): mov $0x1,0x1b(%rsp)
c82d(4): cmp %r14,0x8(%rax)
c831(6): jnle 0xffffff05(%rip)
c837(5): lea 0x20(%rsp),%rdi
c83c(3): mov %rbp,%rsi
c83f(5): call 0xffffe1d1(%rip)
c844(2): test %al,%al
c846(6): jz 0xaa(%rip)
c84c(5): cmp $0x1,0x1c(%rsp)
c851(4): mov 0x30(%r15),%rax
c855(4): lea 0x0(%rax,%rbx,1),%rdx
c859(6): jz 0xffffff70(%rip)
c85f(5): cmp $0x0,0x1b(%rsp)
c864(6): jz 0xffffff65(%rip)
c86a(8): mov $0x0,0x8(%rdx)
c872(5): jmp 0xffffff6b(%rip)
c877(9): nop 0x0(%rax,%rax,1)
c880(6): cmp $0x0,0x8(%r12)
c886(6): jz 0xffffff2a(%rip)
c88c(5): mov 0x10(%r12),%rcx
c891(3): mov (%rcx),%rcx
c894(4): shl/sal $0x4,%rcx
c898(5): test $0x4,0xa(%rdx,%rcx,1)
c89d(6): jnz 0xfffffe49(%rip)
c8a3(4): shr $0x8,%r8d
c8a7(3): mov %rbp,%rcx
c8aa(3): mov %rbp,%rdx
c8ad(7): and $0x3ff,%r8d
c8b4(3): mov %rbp,%rsi
c8b7(3): mov %r15,%rdi
c8ba(5): call 0xfffff0a6(%rip)
c8bf(2): test %eax,%eax
c8c1(6): jnz 0xffffff35(%rip)
c8c7(3): mov (%r15),%rax
c8ca(3): add %r13,%rax
c8cd(5): jmp 0xfffffe19(%rip)
c8d2(6): nop 0x0(%rax,%rax,1)
c8d8(3): mov %r15,%rsi
c8db(3): mov %r12,%rdi
c8de(5): call 0xfffffd72(%rip)
c8e3(2): test %eax,%eax
c8e5(6): jz 0xfffffe95(%rip)
c8eb(5): jmp 0xffffff0b(%rip)
c8f0(5): mov $0xc,%eax
c8f5(5): jmp 0xffffff01(%rip)
c8fa(5): call 0xffff54b6(%rip)

"check_arrival_expand_ecl" :
c900(2): push %r15
c902(2): push %r14
c904(3): mov %rdi,%r14
c907(2): push %r13
c909(2): push %r12
c90b(3): mov %rsi,%r15
c90e(1): push %rbp
c90f(1): push %rbx
c910(3): mov %rdx,%rbp
c913(2): mov %ecx,%ebx
c915(4): sub $0x38,%rsp
c919(4): mov 0x8(%rsi),%r12
c91d(9): mov $0x28,%rax
c926(5): mov %rax,0x28(%rsp)
c92b(2): xor %eax,%eax
c92d(9): mov $0x0,0x18(%rsp)
c936(8): lea 0x0(,%r12,8),%rdi
c93e(5): mov %r12,0x10(%rsp)
c943(5): call 0xffff55dd(%rip)
c948(3): test %rax,%rax
c94b(5): mov %rax,0x20(%rsp)
c950(6): jz 0xfd(%rip)
c956(3): test %r12,%r12
c959(6): jle 0x92(%rip)
c95f(5): lea 0x10(%rsp),%r12
c964(3): xor %r13d,%r13d
c967(9): nop 0x0(%rax,%rax,1)
c970(4): mov 0x10(%r15),%rax
c974(4): mov 0x0(%rax,%r13,8),%rdx
c978(4): mov 0x30(%r14),%rax
c97c(4): lea 0x0(%rdx,%rdx,2),%rcx
c980(4): lea 0x0(%rax,%rcx,8),%rsi
c984(4): mov 0x8(%rsi),%r8
c988(3): test %r8,%r8
c98b(6): jle 0x85(%rip)
c991(4): mov 0x10(%rsi),%r10
c995(3): mov (%r14),%r9
c998(2): xor %ecx,%ecx
c99a(2): jmp 0xf(%rip)
c99c(4): nop 0x0(%rax)
c9a0(4): add $0x1,%rcx
c9a4(3): cmp %rcx,%r8
c9a7(2): jz 0x69(%rip)
c9a9(4): mov 0x0(%r10,%rcx,8),%rdi
c9ad(3): mov %rdi,%rax
c9b0(4): shl/sal $0x4,%rax
c9b4(3): add %r9,%rax
c9b7(5): movzx 0x8(%rax),%r11d
c9bc(3): cmp %r11d,%ebx
c9bf(2): jnz 0xffffffe1(%rip)
c9c1(3): cmp (%rax),%rbp
c9c4(2): jnz 0xffffffdc(%rip)
c9c6(4): cmp $0xffffffff,%rdi
c9ca(2): jz 0x46(%rip)
c9cc(3): mov %ebx,%r8d
c9cf(3): mov %rbp,%rcx
c9d2(3): mov %r12,%rsi
c9d5(3): mov %r14,%rdi
c9d8(5): call 0xfffff5f8(%rip)
c9dd(2): test %eax,%eax
c9df(2): jnz 0x3d(%rip)
c9e1(4): add $0x1,%r13
c9e5(4): cmp %r13,0x8(%r15)
c9e9(2): jnle 0xffffff87(%rip)
c9eb(4): mov 0x10(%r15),%rdi
c9ef(5): call 0xffff5271(%rip)
c9f4(5): mov 0x20(%rsp),%rax
c9f9(6): movdqa 0x10(%rsp),%xmm0
c9ff(4): mov %rax,0x10(%r15)
ca03(2): xor %eax,%eax
ca05(4): movaps %xmm0,(%r15)
ca09(2): jmp 0x25(%rip)
ca0b(5): nop 0x0(%rax,%rax,1)
ca10(3): mov %r12,%rdi
ca13(5): call 0xfffffa5d(%rip)
ca18(2): test %eax,%eax
ca1a(2): jz 0xffffffc7(%rip)
ca1c(5): mov 0x20(%rsp),%rdi
ca21(4): mov %eax,0xc(%rsp)
ca25(5): call 0xffff523b(%rip)
ca2a(4): mov 0xc(%rsp),%eax
ca2e(5): mov 0x28(%rsp),%rdx
ca33(9): xor $0x28,%rdx
ca3c(2): jnz 0x18(%rip)
ca3e(4): add $0x38,%rsp
ca42(1): pop %rbx
ca43(1): pop %rbp
ca44(2): pop %r12
ca46(2): pop %r13
ca48(2): pop %r14
ca4a(2): pop %r15
ca4c(1): ret near (%rsp)
ca4d(5): mov $0xc,%eax
ca52(2): jmp 0xffffffdc(%rip)
ca54(5): call 0xffff535c(%rip)

"re_node_set_add_intersect" :
ca60(4): mov 0x8(%rsi),%r9
ca64(2): xor %eax,%eax
ca66(3): test %r9,%r9
ca69(6): jz 0xbf(%rip)
ca6f(4): mov 0x8(%rdx),%r11
ca73(3): test %r11,%r11
ca76(6): jz 0xb2(%rip)
ca7c(2): push %r13
ca7e(2): push %r12
ca80(4): lea 0x0(%r9,%r11,1),%rax
ca84(1): push %rbp
ca85(1): push %rbx
ca86(3): mov %rdx,%r12
ca89(3): mov %rdi,%rbx
ca8c(3): mov %rsi,%rbp
ca8f(4): sub $0x8,%rsp
ca93(4): mov 0x8(%rdi),%rcx
ca97(3): mov (%rdi),%r13
ca9a(4): mov 0x10(%rdi),%rdi
ca9e(4): lea 0x0(%rax,%rcx,1),%rdx
caa2(3): cmp %r13,%rdx
caa5(6): jnle 0x12b(%rip)
caab(4): lea 0x0(%rcx,%r9,1),%rsi
caaf(4): mov 0x10(%rbp),%r13
cab3(5): mov 0x10(%r12),%rdx
cab8(4): sub $0x1,%r9
cabc(4): sub $0x1,%rcx
cac0(3): add %r11,%rsi
cac3(4): sub $0x1,%r11
cac7(5): mov 0x0(%r13,%r9,8),%rax
cacc(4): mov 0x0(%rdx,%r11,8),%r8
cad0(3): cmp %r8,%rax
cad3(2): jz 0x13(%rip)
cad5(2): jnl 0x5b(%rip)
cad7(4): sub $0x1,%r11
cadb(2): js 0x65(%rip)
cadd(4): mov 0x0(%rdx,%r11,8),%r8
cae1(3): cmp %r8,%rax
cae4(2): jnz 0xfffffff1(%rip)
cae6(3): test %rcx,%rcx
cae9(2): jns 0x11(%rip)
caeb(2): jmp 0x1d(%rip)
caed(3): nop (%rax)
caf0(4): sub $0x1,%rcx
caf4(4): cmp $0xffffffff,%rcx
caf8(2): jz 0x10(%rip)
cafa(4): mov 0x0(%rdi,%rcx,8),%r10
cafe(3): cmp %r8,%r10
cb01(2): jnle 0xffffffef(%rip)
cb03(3): cmp %r8,%r10
cb06(2): jz 0xa(%rip)
cb08(4): sub $0x1,%rsi
cb0c(4): mov %r8,0x0(%rdi,%rsi,8)
cb10(4): sub $0x1,%r9
cb14(2): js 0x2c(%rip)
cb16(4): sub $0x1,%r11
cb1a(2): js 0x26(%rip)
cb1c(5): mov 0x0(%r13,%r9,8),%rax
cb21(2): jmp 0xffffffbc(%rip)
cb23(5): nop 0x0(%rax,%rax,1)
cb28(2): REP ret near (%rsp)
cb2a(6): nop 0x0(%rax,%rax,1)
cb30(4): sub $0x1,%r9
cb34(2): js 0xc(%rip)
cb36(5): mov 0x0(%r13,%r9,8),%rax
cb3b(2): jmp 0xffffff95(%rip)
cb3d(3): nop (%rax)
cb40(4): mov 0x8(%rbx),%rcx
cb44(4): mov 0x8(%rbp),%rdx
cb48(3): add %rcx,%rdx
cb4b(5): add 0x8(%r12),%rdx
cb50(4): lea 0xffffffff(%rcx),%rax
cb54(4): lea 0xffffffff(%rdx),%r9
cb58(3): sub %rsi,%rdx
cb5b(3): add %rdx,%rcx
cb5e(3): test %rdx,%rdx
cb61(4): mov %rcx,0x8(%rbx)
cb65(2): jle 0x48(%rip)
cb67(3): test %rax,%rax
cb6a(2): js 0x43(%rip)
cb6c(4): nop 0x0(%rax)
cb70(4): mov 0x0(%rdi,%r9,8),%r8
cb74(4): mov 0x0(%rdi,%rax,8),%rcx
cb78(4): lea 0x0(%rax,%rdx,1),%r10
cb7c(4): lea 0x0(%rdi,%r10,8),%r10
cb80(3): cmp %rcx,%r8
cb83(2): jle 0x1d(%rip)
cb85(4): sub $0x1,%r9
cb89(4): sub $0x1,%rdx
cb8d(3): mov %r8,(%r10)
cb90(2): jnz 0xffffffe0(%rip)
cb92(2): xor %edx,%edx
cb94(2): jmp 0x1d(%rip)
cb96(a): nop 0x0(%rax,%rax,1)
cba0(4): sub $0x1,%rax
cba4(3): mov %rcx,(%r10)
cba7(4): cmp $0xffffffff,%rax
cbab(2): jnz 0xffffffc5(%rip)
cbad(4): shl/sal $0x3,%rdx
cbb1(4): lea 0x0(%rdi,%rsi,8),%rsi
cbb5(5): call 0xffff532b(%rip)
cbba(2): xor %eax,%eax
cbbc(4): add $0x8,%rsp
cbc0(1): pop %rbx
cbc1(1): pop %rbp
cbc2(2): pop %r12
cbc4(2): pop %r13
cbc6(1): ret near (%rsp)
cbc7(9): nop 0x0(%rax,%rax,1)
cbd0(3): add %rax,%r13
cbd3(8): lea 0x0(,%r13,8),%rsi
cbdb(5): call 0xffff53b5(%rip)
cbe0(3): test %rax,%rax
cbe3(3): mov %rax,%rdi
cbe6(2): jz 0x1b(%rip)
cbe8(4): mov %rax,0x10(%rbx)
cbec(3): mov %r13,(%rbx)
cbef(4): mov 0x8(%rbx),%rcx
cbf3(4): mov 0x8(%rbp),%r9
cbf7(5): mov 0x8(%r12),%r11
cbfc(5): jmp 0xfffffeaf(%rip)
cc01(5): mov $0xc,%eax
cc06(2): jmp 0xffffffb6(%rip)

"create_token_tree.isra.16" :
cc10(1): push %rbx
cc11(3): mov %rdi,%rbx
cc14(4): sub $0x20,%rsp
cc18(2): mov (%rsi),%eax
cc1a(3): cmp $0xf,%eax
cc1d(2): jz 0x7b(%rip)
cc1f(3): movsxd %eax,%r9
cc22(4): lea 0x1(%rax),%r10d
cc26(3): mov (%rdi),%rdi
cc29(3): mov %r9,%rax
cc2c(4): shl/sal $0x6,%rax
cc30(4): add $0x8,%rax
cc34(4): shl/sal $0x6,%r9
cc38(3): mov %r10d,(%rsi)
cc3b(3): add %rdi,%rax
cc3e(4): lea 0x0(%rdi,%r9,1),%rsi
cc42(8): mov $0x0,0x8(%rsi)
cc4a(4): mov %rdx,0x10(%rsi)
cc4e(4): lea 0x20(%rsi),%rdi
cc52(4): mov %rcx,0x18(%rsi)
cc56(5): movdqu (%r8),%xmm0
cc5b(4): movups %xmm0,0x30(%rsi)
cc5f(4): and $0xf3,0x1a(%rdi)
cc63(3): test %rdx,%rdx
cc66(8): mov $0x0,0x20(%rsi)
cc6e(8): mov $0x0,0x28(%rsi)
cc76(8): mov $0xffffffff,0x40(%rsi)
cc7e(2): jz 0x5(%rip)
cc80(3): mov %rax,(%rdx)
cc83(3): test %rcx,%rcx
cc86(2): jz 0x5(%rip)
cc88(3): mov %rax,(%rcx)
cc8b(4): add $0x20,%rsp
cc8f(1): pop %rbx
cc90(1): ret near (%rsp)
cc91(7): nop 0x0(%rax)
cc98(5): mov $0x3c8,%edi
cc9d(5): mov %r8,0x18(%rsp)
cca2(5): mov %rcx,0x10(%rsp)
cca7(5): mov %rdx,0x8(%rsp)
ccac(4): mov %rsi,(%rsp)
ccb0(5): call 0xffff5270(%rip)
ccb5(3): test %rax,%rax
ccb8(3): mov %rax,%rdi
ccbb(2): jz 0x31(%rip)
ccbd(3): mov (%rbx),%rax
ccc0(6): mov $0x1,%r10d
ccc6(3): mov %rdi,(%rbx)
ccc9(3): xor %r9d,%r9d
cccc(5): mov 0x18(%rsp),%r8
ccd1(5): mov 0x10(%rsp),%rcx
ccd6(5): mov 0x8(%rsp),%rdx
ccdb(4): mov (%rsp),%rsi
ccdf(3): mov %rax,(%rdi)
cce2(5): mov $0x8,%eax
cce7(5): jmp 0xffffff4d(%rip)
ccec(2): xor %eax,%eax
ccee(2): jmp 0xffffff9d(%rip)

"duplicate_tree" :
ccf0(2): push %r14
ccf2(2): push %r13
ccf4(4): lea 0x70(%rsi),%r13
ccf8(2): push %r12
ccfa(1): push %rbp
ccfb(7): lea 0x80(%rsi),%r12
cd02(1): push %rbx
cd03(3): mov %rdi,%rbx
cd06(4): sub $0x10,%rsp
cd0a(3): mov (%rdi),%rbp
cd0d(9): mov $0x28,%rax
cd16(5): mov %rax,0x8(%rsp)
cd1b(2): xor %eax,%eax
cd1d(3): mov %rsp,%r14
cd20(4): lea 0x28(%rbx),%r8
cd24(2): xor %ecx,%ecx
cd26(2): xor %edx,%edx
cd28(3): mov %r12,%rsi
cd2b(3): mov %r13,%rdi
cd2e(5): call 0xfffffee2(%rip)
cd33(3): test %rax,%rax
cd36(3): mov %rax,(%r14)
cd39(2): jz 0x53(%rip)
cd3b(3): mov %rbp,(%rax)
cd3e(3): mov (%r14),%rbp
cd41(4): or $0x4,0x32(%rbp)
cd45(4): mov 0x8(%rbx),%rax
cd49(3): test %rax,%rax
cd4c(2): jz 0x14(%rip)
cd4e(4): lea 0x8(%rbp),%r14
cd52(3): mov %rax,%rbx
cd55(2): jmp 0xffffffcb(%rip)
cd57(9): nop 0x0(%rax,%rax,1)
cd60(2): xor %edx,%edx
cd62(2): jmp 0x9(%rip)
cd64(4): nop 0x0(%rax)
cd68(3): mov %rax,%rbx
cd6b(4): mov 0x10(%rbx),%rax
cd6f(3): test %rax,%rax
cd72(2): jz 0x7(%rip)
cd74(3): cmp %rdx,%rax
cd77(2): jnz 0x39(%rip)
cd79(3): mov (%rbx),%rax
cd7c(4): mov 0x0(%rbp),%rbp
cd80(3): mov %rbx,%rdx
cd83(3): test %rax,%rax
cd86(2): jnz 0xffffffe2(%rip)
cd88(4): mov (%rsp),%rax
cd8c(5): mov 0x8(%rsp),%rcx
cd91(9): xor $0x28,%rcx
cd9a(2): jnz 0x22(%rip)
cd9c(4): add $0x10,%rsp
cda0(1): pop %rbx
cda1(1): pop %rbp
cda2(2): pop %r12
cda4(2): pop %r13
cda6(2): pop %r14
cda8(1): ret near (%rsp)
cda9(7): nop 0x0(%rax)
cdb0(4): lea 0x10(%rbp),%r14
cdb4(3): mov %rax,%rbx
cdb7(5): jmp 0xffffff69(%rip)
cdbc(5): call 0xffff4ff4(%rip)

"lower_subexp" :
cdd0(2): push %r15
cdd2(2): push %r14
cdd4(2): push %r13
cdd6(2): push %r12
cdd8(3): mov %rdx,%r13
cddb(1): push %rbp
cddc(1): push %rbx
cddd(4): sub $0x48,%rsp
cde1(3): mov (%rsi),%rbx
cde4(4): mov 0x8(%rdx),%rbp
cde8(9): mov $0x28,%rax
cdf1(5): mov %rax,0x38(%rsp)
cdf6(2): xor %eax,%eax
cdf8(4): test $0x10,0x38(%rsi)
cdfc(5): mov %rdi,0x18(%rsp)
ce01(6): jz 0x177(%rip)
ce07(3): test %rbp,%rbp
ce0a(2): jz 0x76(%rip)
ce0c(4): mov 0x28(%rdx),%rax
ce10(4): cmp $0x3f,%rax
ce14(6): jnle 0x139(%rip)
ce1a(7): mov 0xa0(%rbx),%rdx
ce21(4): bt %rax,%rdx
ce25(6): jnb 0x128(%rip)
ce2b(4): lea 0x70(%rbx),%rax
ce2f(5): lea 0x20(%rsp),%r14
ce34(4): sub $0xffffff80,%rbx
ce38(2): xor %ecx,%ecx
ce3a(2): xor %edx,%edx
ce3c(3): mov %rbx,%rsi
ce3f(3): mov %rax,%r15
ce42(3): mov %r14,%r8
ce45(3): mov %rax,%rdi
ce48(5): mov $0x8,0x28(%rsp)
ce4d(5): mov %rax,0x8(%rsp)
ce52(5): call 0xfffffdbe(%rip)
ce57(3): mov %r15,%rdi
ce5a(3): mov %r14,%r8
ce5d(2): xor %ecx,%ecx
ce5f(2): xor %edx,%edx
ce61(3): mov %rbx,%rsi
ce64(3): mov %rax,%r12
ce67(5): mov $0x9,0x28(%rsp)
ce6c(5): call 0xfffffda4(%rip)
ce71(3): mov %rax,%r15
ce74(5): jmp 0x159(%rip)
ce79(7): nop 0x0(%rax)
ce80(4): lea 0x70(%rbx),%rax
ce84(5): lea 0x20(%rsp),%r14
ce89(4): sub $0xffffff80,%rbx
ce8d(2): xor %ecx,%ecx
ce8f(2): xor %edx,%edx
ce91(3): mov %rbx,%rsi
ce94(3): mov %rax,%r15
ce97(3): mov %r14,%r8
ce9a(3): mov %rax,%rdi
ce9d(5): mov $0x8,0x28(%rsp)
cea2(5): mov %rax,0x8(%rsp)
cea7(5): call 0xfffffd69(%rip)
ceac(3): mov %r15,%rdi
ceaf(3): mov %r14,%r8
ceb2(2): xor %ecx,%ecx
ceb4(2): xor %edx,%edx
ceb6(3): mov %rbx,%rsi
ceb9(3): mov %rax,%r12
cebc(5): mov $0x9,0x28(%rsp)
cec1(5): call 0xfffffd4f(%rip)
cec6(3): mov %rax,%r11
cec9(3): mov %rax,%r15
cecc(5): mov 0x8(%rsp),%rdi
ced1(3): mov %r14,%r8
ced4(3): mov %r11,%rcx
ced7(3): mov %r12,%rdx
ceda(3): mov %rbx,%rsi
cedd(5): mov $0x10,0x28(%rsp)
cee2(5): mov %r11,0x10(%rsp)
cee7(5): call 0xfffffd29(%rip)
ceec(3): test %rax,%rax
ceef(3): mov %rax,%rbp
cef2(6): jz 0xfe(%rip)
cef8(5): mov 0x10(%rsp),%r11
cefd(3): test %r11,%r11
cf00(6): jz 0xf0(%rip)
cf06(3): test %r12,%r12
cf09(6): jz 0xe7(%rip)
cf0f(3): test %r15,%r15
cf12(6): jz 0xde(%rip)
cf18(4): mov 0x28(%r13),%rax
cf1c(4): mov %rax,0x28(%r15)
cf20(5): mov %rax,0x28(%r12)
cf25(5): movzx 0x32(%r13),%eax
cf2a(5): movzx 0x32(%r15),%edx
cf2f(3): and $0x8,%eax
cf32(3): and $0xf7,%edx
cf35(2): mov %eax,%ecx
cf37(2): or %ecx,%edx
cf39(4): mov %dl,0x32(%r15)
cf3d(6): movzx 0x32(%r12),%eax
cf43(3): and $0xf7,%eax
cf46(2): or %ecx,%eax
cf48(5): mov %al,0x32(%r12)
cf4d(5): mov 0x38(%rsp),%rdi
cf52(9): xor $0x28,%rdi
cf5b(3): mov %rbp,%rax
cf5e(6): jnz 0xa4(%rip)
cf64(4): add $0x48,%rsp
cf68(1): pop %rbx
cf69(1): pop %rbp
cf6a(2): pop %r12
cf6c(2): pop %r13
cf6e(2): pop %r14
cf70(2): pop %r15
cf72(1): ret near (%rsp)
cf73(5): nop 0x0(%rax,%rax,1)
cf78(4): lea 0x70(%rbx),%rax
cf7c(5): lea 0x20(%rsp),%r14
cf81(4): sub $0xffffff80,%rbx
cf85(2): xor %ecx,%ecx
cf87(2): xor %edx,%edx
cf89(3): mov %rbx,%rsi
cf8c(3): mov %rax,%r15
cf8f(3): mov %r14,%r8
cf92(3): mov %rax,%rdi
cf95(5): mov $0x8,0x28(%rsp)
cf9a(5): mov %rax,0x8(%rsp)
cf9f(5): call 0xfffffc71(%rip)
cfa4(2): xor %ecx,%ecx
cfa6(2): xor %edx,%edx
cfa8(3): mov %r15,%rdi
cfab(3): mov %r14,%r8
cfae(3): mov %rbx,%rsi
cfb1(3): mov %rax,%r12
cfb4(5): mov $0x9,0x28(%rsp)
cfb9(5): call 0xfffffc57(%rip)
cfbe(3): test %rbp,%rbp
cfc1(3): mov %rax,%r15
cfc4(3): mov %rax,%r11
cfc7(6): jz 0xffffff05(%rip)
cfcd(5): mov 0x8(%rsp),%rdi
cfd2(3): mov %r14,%r8
cfd5(3): mov %r15,%rcx
cfd8(3): mov %rbp,%rdx
cfdb(3): mov %rbx,%rsi
cfde(5): mov $0x10,0x28(%rsp)
cfe3(5): call 0xfffffc2d(%rip)
cfe8(3): mov %rax,%r11
cfeb(5): jmp 0xfffffee1(%rip)
cff0(5): mov 0x18(%rsp),%rax
cff5(2): xor %ebp,%ebp
cff7(6): mov $0xc,(%rax)
cffd(5): jmp 0xffffff50(%rip)
d002(5): call 0xffff4dae(%rip)

"lower_subexps" :
d010(1): push %rbp
d011(1): push %rbx
d012(3): mov %rdi,%rbp
d015(3): mov %rsi,%rbx
d018(4): sub $0x18,%rsp
d01c(4): mov 0x8(%rsi),%rdx
d020(9): mov $0x28,%rax
d029(5): mov %rax,0x8(%rsp)
d02e(2): xor %eax,%eax
d030(8): mov $0x0,0x4(%rsp)
d038(3): test %rdx,%rdx
d03b(2): jz 0x8(%rip)
d03d(4): cmp $0x11,0x30(%rdx)
d041(2): jz 0x4f(%rip)
d043(4): mov 0x10(%rbx),%rdx
d047(3): test %rdx,%rdx
d04a(2): jz 0x8(%rip)
d04c(4): cmp $0x11,0x30(%rdx)
d050(2): jz 0x20(%rip)
d052(5): mov 0x8(%rsp),%rcx
d057(9): xor $0x28,%rcx
d060(4): mov 0x4(%rsp),%eax
d064(2): jnz 0x47(%rip)
d066(4): add $0x18,%rsp
d06a(1): pop %rbx
d06b(1): pop %rbp
d06c(1): ret near (%rsp)
d06d(3): nop (%rax)
d070(5): lea 0x4(%rsp),%rdi
d075(3): mov %rbp,%rsi
d078(5): call 0xfffffd58(%rip)
d07d(3): test %rax,%rax
d080(4): mov %rax,0x10(%rbx)
d084(2): jz 0xffffffce(%rip)
d086(3): mov %rbx,(%rax)
d089(2): jmp 0xffffffc9(%rip)
d08b(5): nop 0x0(%rax,%rax,1)
d090(5): lea 0x4(%rsp),%rdi
d095(3): mov %rbp,%rsi
d098(5): call 0xfffffd38(%rip)
d09d(3): test %rax,%rax
d0a0(4): mov %rax,0x8(%rbx)
d0a4(2): jz 0xffffff9f(%rip)
d0a6(3): mov %rbx,(%rax)
d0a9(2): jmp 0xffffff9a(%rip)
d0ab(5): call 0xffff4d05(%rip)

"re_node_set_init_copy" :
d0b0(2): push %r12
d0b2(1): push %rbp
d0b3(1): push %rbx
d0b4(4): mov 0x8(%rsi),%rax
d0b8(4): mov %rax,0x8(%rdi)
d0bc(4): mov 0x8(%rsi),%r12
d0c0(3): test %r12,%r12
d0c3(2): jle 0x3d(%rip)
d0c5(3): mov %rdi,%rbx
d0c8(3): mov %rax,(%rdi)
d0cb(8): lea 0x0(,%rax,8),%rdi
d0d3(3): mov %rsi,%rbp
d0d6(5): call 0xffff4e4a(%rip)
d0db(3): test %rax,%rax
d0de(4): mov %rax,0x10(%rbx)
d0e2(2): jz 0x3e(%rip)
d0e4(4): mov 0x10(%rbp),%rsi
d0e8(8): lea 0x0(,%r12,8),%rdx
d0f0(3): mov %rax,%rdi
d0f3(5): call 0xffff4ded(%rip)
d0f8(2): xor %eax,%eax
d0fa(1): pop %rbx
d0fb(1): pop %rbp
d0fc(2): pop %r12
d0fe(1): ret near (%rsp)
d0ff(1): nop 
d100(4): pxor %xmm0,%xmm0
d104(8): mov $0x0,0x10(%rdi)
d10c(2): xor %eax,%eax
d10e(3): movups %xmm0,(%rdi)
d111(1): pop %rbx
d112(1): pop %rbp
d113(2): pop %r12
d115(1): ret near (%rsp)
d116(a): nop 0x0(%rax,%rax,1)
d120(8): mov $0x0,0x8(%rbx)
d128(7): mov $0x0,(%rbx)
d12f(5): mov $0xc,%eax
d134(2): jmp 0xffffffc6(%rip)

"re_node_set_init_union" :
d140(3): test %rsi,%rsi
d143(2): push %r14
d145(2): push %r13
d147(2): push %r12
d149(1): push %rbp
d14a(1): push %rbx
d14b(6): jz 0xaa(%rip)
d151(3): test %rdx,%rdx
d154(4): mov 0x8(%rsi),%r13
d158(6): jz 0x98(%rip)
d15e(3): test %r13,%r13
d161(6): jle 0x8f(%rip)
d167(4): mov 0x8(%rdx),%r14
d16b(3): test %r14,%r14
d16e(6): jle 0xb5(%rip)
d174(3): mov %rdi,%r12
d177(5): lea 0x0(%r13,%r14,1),%rdi
d17c(3): mov %rdx,%rbx
d17f(3): mov %rsi,%rbp
d182(4): mov %rdi,(%r12)
d186(4): shl/sal $0x3,%rdi
d18a(5): call 0xffff4d96(%rip)
d18f(3): test %rax,%rax
d192(5): mov %rax,0x10(%r12)
d197(6): jz 0xf1(%rip)
d19d(4): mov 0x10(%rbx),%r9
d1a1(4): mov 0x10(%rbp),%r8
d1a5(2): xor %ebx,%ebx
d1a7(2): xor %ecx,%ecx
d1a9(2): xor %esi,%esi
d1ab(2): jmp 0x23(%rip)
d1ad(3): nop (%rax)
d1b0(4): setz %dil
d1b4(5): mov %rdx,0xfffffff8(%rax,%rbx,8)
d1b9(4): add $0x1,%rsi
d1bd(4): movzx %dil,%edi
d1c1(3): add %rdi,%rcx
d1c4(3): cmp %rsi,%r13
d1c7(2): jle 0x69(%rip)
d1c9(3): cmp %rcx,%r14
d1cc(2): jle 0x7c(%rip)
d1ce(4): mov 0x0(%r8,%rsi,8),%rdx
d1d2(4): mov 0x0(%r9,%rcx,8),%rdi
d1d6(4): add $0x1,%rbx
d1da(3): cmp %rdi,%rdx
d1dd(2): jle 0xffffffd3(%rip)
d1df(4): add $0x1,%rcx
d1e3(5): mov %rdi,0xfffffff8(%rax,%rbx,8)
d1e8(2): jmp 0xffffffdc(%rip)
d1ea(6): nop 0x0(%rax,%rax,1)
d1f0(3): test %r13,%r13
d1f3(2): jnle 0x30(%rip)
d1f5(3): test %rdx,%rdx
d1f8(2): jz 0x9(%rip)
d1fa(5): cmp $0x0,0x8(%rdx)
d1ff(2): jnle 0x21(%rip)
d201(4): pxor %xmm0,%xmm0
d205(8): mov $0x0,0x10(%rdi)
d20d(2): xor %eax,%eax
d20f(3): movaps %xmm0,(%rdi)
d212(1): pop %rbx
d213(1): pop %rbp
d214(2): pop %r12
d216(2): pop %r13
d218(2): pop %r14
d21a(1): ret near (%rsp)
d21b(5): nop 0x0(%rax,%rax,1)
d220(3): mov %rdx,%rsi
d223(1): pop %rbx
d224(1): pop %rbp
d225(2): pop %r12
d227(2): pop %r13
d229(2): pop %r14
d22b(5): jmp 0xfffffe85(%rip)
d230(3): cmp %rcx,%r14
d233(2): jnle 0x35(%rip)
d235(5): mov %rbx,0x8(%r12)
d23a(2): xor %eax,%eax
d23c(1): pop %rbx
d23d(1): pop %rbp
d23e(2): pop %r12
d240(2): pop %r13
d242(2): pop %r14
d244(1): ret near (%rsp)
d245(3): nop (%rax)
d248(3): sub %rsi,%r13
d24b(4): lea 0x0(%rax,%rbx,8),%rdi
d24f(4): lea 0x0(%r8,%rsi,8),%rsi
d253(8): lea 0x0(,%r13,8),%rdx
d25b(3): add %r13,%rbx
d25e(5): call 0xffff4c82(%rip)
d263(2): jmp 0xffffffd2(%rip)
d265(3): nop (%rax)
d268(3): sub %rcx,%r14
d26b(4): lea 0x0(%rax,%rbx,8),%rdi
d26f(4): lea 0x0(%r9,%rcx,8),%rsi
d273(8): lea 0x0(,%r14,8),%rdx
d27b(3): add %r14,%rbx
d27e(5): call 0xffff4c62(%rip)
d283(2): jmp 0xffffffb2(%rip)
d285(3): nop (%rax)
d288(5): mov $0xc,%eax
d28d(5): jmp 0xffffff85(%rip)

"re_acquire_state_context" :
d2a0(2): push %r15
d2a2(2): push %r14
d2a4(2): push %r13
d2a6(2): push %r12
d2a8(1): push %rbp
d2a9(1): push %rbx
d2aa(4): sub $0x28,%rsp
d2ae(4): mov 0x8(%rdx),%r10
d2b2(3): test %r10,%r10
d2b5(6): jz 0x28a(%rip)
d2bb(3): mov %ecx,%r8d
d2be(3): test %r10,%r10
d2c1(4): lea 0x0(%r8,%r10,1),%r12
d2c5(2): jle 0x17(%rip)
d2c7(4): mov 0x10(%rdx),%rax
d2cb(4): lea 0x0(%rax,%r10,8),%r10
d2cf(1): nop 
d2d0(3): add (%rax),%r12
d2d3(4): add $0x8,%rax
d2d7(3): cmp %rax,%r10
d2da(2): jnz 0xfffffff6(%rip)
d2dc(7): mov 0x88(%rsi),%rax
d2e3(3): mov %rdx,%rbp
d2e6(4): mov %ecx,0x4(%rsp)
d2ea(3): mov %rsi,%r13
d2ed(5): mov %rdi,0x18(%rsp)
d2f2(3): and %r12,%rax
d2f5(4): lea 0x0(%rax,%rax,2),%rdx
d2f9(4): mov 0x40(%rsi),%rax
d2fd(4): lea 0x0(%rax,%rdx,8),%rax
d301(3): mov (%rax),%r11
d304(3): test %r11,%r11
d307(2): jle 0x59(%rip)
d309(4): mov 0x10(%rax),%rbx
d30d(3): xor %r10d,%r10d
d310(3): mov %ecx,%r9d
d313(2): jmp 0xe(%rip)
d315(3): nop (%rax)
d318(4): add $0x1,%r10
d31c(3): cmp %r11,%r10
d31f(2): jz 0x41(%rip)
d321(4): mov 0x0(%rbx,%r10,8),%r14
d325(3): cmp %r12,(%r14)
d328(2): jnz 0xfffffff0(%rip)
d32a(5): movzx 0x68(%r14),%eax
d32f(3): and $0xf,%eax
d332(3): cmp %r9d,%eax
d335(2): jnz 0xffffffe3(%rip)
d337(4): mov 0x50(%r14),%rdi
d33b(3): test %rdi,%rdi
d33e(2): jz 0xffffffda(%rip)
d340(3): mov %rbp,%rsi
d343(5): call 0xffffebad(%rip)
d348(2): test %al,%al
d34a(2): jz 0xffffffce(%rip)
d34c(4): add $0x28,%rsp
d350(3): mov %r14,%rax
d353(1): pop %rbx
d354(1): pop %rbp
d355(2): pop %r12
d357(2): pop %r13
d359(2): pop %r14
d35b(2): pop %r15
d35d(1): ret near (%rsp)
d35e(2): nop 
d360(5): mov $0x1,%esi
d365(5): mov $0x70,%edi
d36a(5): call 0xffff4b56(%rip)
d36f(3): test %rax,%rax
d372(3): mov %rax,%r14
d375(6): jz 0x141(%rip)
d37b(4): lea 0x8(%rax),%rax
d37f(3): mov %rbp,%rsi
d382(3): mov %rax,%rdi
d385(3): mov %rax,%rbx
d388(5): call 0xfffffd28(%rip)
d38d(2): test %eax,%eax
d38f(6): jnz 0x1be(%rip)
d395(5): movzx 0x68(%r14),%eax
d39a(5): movzx 0x4(%rsp),%edx
d39f(4): mov %rbx,0x50(%r14)
d3a3(3): and $0xf,%edx
d3a6(3): and $0xf0,%eax
d3a9(2): or %edx,%eax
d3ab(5): cmp $0x0,0x8(%rbp)
d3b0(4): mov %al,0x68(%r14)
d3b4(6): jle 0xe4(%rip)
d3ba(4): lea 0x18(%r14),%rcx
d3be(3): xor %r15d,%r15d
d3c1(5): mov %r12,0x10(%rsp)
d3c6(3): xor %r10d,%r10d
d3c9(3): mov %r13,%r12
d3cc(3): mov %r15,%r13
d3cf(5): mov %rcx,0x8(%rsp)
d3d4(3): mov %rbx,%r15
d3d7(9): nop 0x0(%rax,%rax,1)
d3e0(4): mov 0x10(%rbp),%rax
d3e4(4): mov 0x0(%rax,%r13,8),%rax
d3e8(4): shl/sal $0x4,%rax
d3ec(4): add (%r12),%rax
d3f0(4): movzx 0x8(%rax),%esi
d3f4(3): mov 0x8(%rax),%ebx
d3f7(3): shr $0x8,%ebx
d3fa(5): and $0x3ff,%bx
d3ff(3): cmp $0x1,%esi
d402(3): movzx %bx,%edi
d405(2): jnz 0x6(%rip)
d407(2): test %edi,%edi
d409(2): jz 0x79(%rip)
d40b(5): movzx 0x68(%r14),%edx
d410(4): movzx 0xa(%rax),%eax
d414(3): mov %edx,%r9d
d417(3): shr $0x4,%al
d41a(3): and $0xdf,%edx
d41d(4): shr $0x5,%r9b
d421(3): or %r9d,%eax
d424(3): and $0x1,%eax
d427(3): shl/sal $0x5,%eax
d42a(2): or %edx,%eax
d42c(3): cmp $0x2,%esi
d42f(4): mov %al,0x68(%r14)
d433(6): jz 0xcd(%rip)
d439(3): cmp $0x4,%esi
d43c(2): jnz 0x9(%rip)
d43e(3): or $0x40,%eax
d441(4): mov %al,0x68(%r14)
d445(2): test %edi,%edi
d447(2): jz 0x3b(%rip)
d449(4): cmp 0x50(%r14),%r15
d44d(6): jz 0xc3(%rip)
d453(3): test $0x1,%bl
d456(2): jz 0x7a(%rip)
d458(5): test $0x1,0x4(%rsp)
d45d(2): jz 0xb(%rip)
d45f(3): test $0x2,%bl
d462(2): jz 0x7a(%rip)
d464(4): nop 0x0(%rax)
d468(3): mov %r13,%rdx
d46b(3): sub %r10,%rdx
d46e(2): js 0x10(%rip)
d470(5): mov 0x8(%rsp),%rsi
d475(4): lea 0x10(%r14),%rdi
d479(5): call 0xffffec57(%rip)
d47e(4): add $0x1,%r10
d482(4): add $0x1,%r13
d486(4): cmp 0x8(%rbp),%r13
d48a(6): jl 0xffffff56(%rip)
d490(3): mov %r12,%r13
d493(5): mov 0x10(%rsp),%r12
d498(3): mov %r12,%rdx
d49b(3): mov %r14,%rsi
d49e(3): mov %r13,%rdi
d4a1(5): call 0xffffd69f(%rip)
d4a6(2): test %eax,%eax
d4a8(6): jz 0xfffffea4(%rip)
d4ae(3): mov %r14,%rdi
d4b1(5): call 0xffffe72f(%rip)
d4b6(5): mov 0x18(%rsp),%rax
d4bb(3): xor %r14d,%r14d
d4be(6): mov $0xc,(%rax)
d4c4(5): jmp 0xfffffe88(%rip)
d4c9(7): nop 0x0(%rax)
d4d0(3): test $0x2,%bl
d4d3(2): jz 0x9(%rip)
d4d5(5): test $0x1,0x4(%rsp)
d4da(2): jnz 0xffffff8e(%rip)
d4dc(3): test $0x10,%bl
d4df(2): jz 0x9(%rip)
d4e1(5): test $0x2,0x4(%rsp)
d4e6(2): jz 0xffffff82(%rip)
d4e8(3): and $0x40,%ebx
d4eb(2): jz 0xffffff97(%rip)
d4ed(5): test $0x4,0x4(%rsp)
d4f2(2): jnz 0xffffff90(%rip)
d4f4(5): jmp 0xffffff74(%rip)
d4f9(7): nop 0x0(%rax)
d500(3): or $0x10,%eax
d503(4): mov %al,0x68(%r14)
d507(5): jmp 0xffffff3e(%rip)
d50c(4): nop 0x0(%rax)
d510(5): mov $0x18,%edi
d515(5): call 0xffff4a0b(%rip)
d51a(3): test %rax,%rax
d51d(4): mov %rax,0x50(%r14)
d521(2): jz 0xffffff8d(%rip)
d523(3): mov %rbp,%rsi
d526(3): mov %rax,%rdi
d529(5): call 0xfffffb87(%rip)
d52e(2): test %eax,%eax
d530(2): jnz 0xffffff86(%rip)
d532(5): or $0x80,0x68(%r14)
d537(3): xor %r10d,%r10d
d53a(5): jmp 0xffffff19(%rip)
d53f(6): mov $0x0,(%rdi)
d545(3): xor %r14d,%r14d
d548(5): jmp 0xfffffe04(%rip)
d54d(3): mov %r14,%rdi
d550(5): call 0xffff4710(%rip)
d555(5): jmp 0xffffff61(%rip)

"re_acquire_state" :
d560(2): push %r15
d562(2): push %r14
d564(2): push %r13
d566(2): push %r12
d568(1): push %rbp
d569(1): push %rbx
d56a(4): sub $0x8,%rsp
d56e(4): mov 0x8(%rdx),%rbp
d572(3): test %rbp,%rbp
d575(6): jz 0x1db(%rip)
d57b(3): test %rbp,%rbp
d57e(2): jle 0x1e(%rip)
d580(4): mov 0x10(%rdx),%rax
d584(4): lea 0x0(%rax,%rbp,8),%rcx
d588(8): nop 0x0(%rax,%rax,1)
d590(3): add (%rax),%rbp
d593(4): add $0x8,%rax
d597(3): cmp %rax,%rcx
d59a(2): jnz 0xfffffff6(%rip)
d59c(7): mov 0x88(%rsi),%rax
d5a3(3): mov %rdx,%r14
d5a6(3): mov %rsi,%r12
d5a9(3): mov %rdi,%r13
d5ac(3): and %rbp,%rax
d5af(4): lea 0x0(%rax,%rax,2),%rdx
d5b3(4): mov 0x40(%rsi),%rax
d5b7(4): lea 0x0(%rax,%rdx,8),%rax
d5bb(3): mov (%rax),%r10
d5be(3): test %r10,%r10
d5c1(2): jle 0x35(%rip)
d5c3(4): mov 0x10(%rax),%r11
d5c7(3): xor %r9d,%r9d
d5ca(6): nop 0x0(%rax,%rax,1)
d5d0(4): mov 0x0(%r11,%r9,8),%rbx
d5d4(3): cmp %rbp,(%rbx)
d5d7(2): jnz 0x16(%rip)
d5d9(4): lea 0x8(%rbx),%rdi
d5dd(3): mov %r14,%rsi
d5e0(5): call 0xffffe910(%rip)
d5e5(2): test %al,%al
d5e7(6): jnz 0x108(%rip)
d5ed(4): add $0x1,%r9
d5f1(3): cmp %r9,%r10
d5f4(2): jnz 0xffffffdc(%rip)
d5f6(5): mov $0x1,%esi
d5fb(5): mov $0x70,%edi
d600(5): call 0xffff48c0(%rip)
d605(3): test %rax,%rax
d608(3): mov %rax,%rbx
d60b(6): jz 0x12d(%rip)
d611(4): lea 0x8(%rax),%r15
d615(3): mov %r14,%rsi
d618(3): mov %r15,%rdi
d61b(5): call 0xfffffa95(%rip)
d620(2): test %eax,%eax
d622(6): jnz 0x10e(%rip)
d628(4): mov 0x8(%r14),%rax
d62c(4): mov %r15,0x50(%rbx)
d630(3): test %rax,%rax
d633(6): jle 0xaa(%rip)
d639(4): mov 0x10(%r14),%rsi
d63d(4): mov (%r12),%r8
d641(4): lea 0x0(%rsi,%rax,8),%r9
d645(2): jmp 0x4f(%rip)
d647(9): nop 0x0(%rax,%rax,1)
d650(4): movzx 0x68(%rbx),%ecx
d654(4): movzx 0xa(%rax),%edx
d658(3): mov %ecx,%r10d
d65b(3): shr $0x4,%dl
d65e(3): and $0xdf,%ecx
d661(4): shr $0x5,%r10b
d665(3): or %r10d,%edx
d668(3): and $0x1,%edx
d66b(3): shl/sal $0x5,%edx
d66e(2): or %ecx,%edx
d670(3): cmp $0x2,%edi
d673(3): mov %dl,0x68(%rbx)
d676(6): jz 0x92(%rip)
d67c(3): cmp $0x4,%edi
d67f(6): jnz 0x99(%rip)
d685(3): or $0x40,%edx
d688(3): mov %dl,0x68(%rbx)
d68b(4): add $0x8,%rsi
d68f(3): cmp %rsi,%r9
d692(2): jz 0x4b(%rip)
d694(3): mov (%rsi),%rax
d697(4): shl/sal $0x4,%rax
d69b(3): add %r8,%rax
d69e(4): movzx 0x8(%rax),%edi
d6a2(3): cmp $0x1,%edi
d6a5(2): jnz 0xffffffab(%rip)
d6a7(7): test $0x3ff00,0x8(%rax)
d6ae(2): jz 0xffffffdd(%rip)
d6b0(4): movzx 0x68(%rbx),%edx
d6b4(4): movzx 0xa(%rax),%eax
d6b8(2): mov %edx,%ecx
d6ba(3): shr $0x4,%al
d6bd(3): and $0xdf,%edx
d6c0(3): shr $0x5,%cl
d6c3(2): or %ecx,%eax
d6c5(3): and $0x1,%eax
d6c8(3): shl/sal $0x5,%eax
d6cb(2): or %edx,%eax
d6cd(3): mov %al,0x68(%rbx)
d6d0(4): add $0x8,%rsi
d6d4(4): or $0x80,0x68(%rbx)
d6d8(3): cmp %rsi,%r9
d6db(2): jnz 0xffffffb9(%rip)
d6dd(3): mov %rbp,%rdx
d6e0(3): mov %rbx,%rsi
d6e3(3): mov %r12,%rdi
d6e6(5): call 0xffffd45a(%rip)
d6eb(2): test %eax,%eax
d6ed(2): jnz 0x57(%rip)
d6ef(4): add $0x8,%rsp
d6f3(3): mov %rbx,%rax
d6f6(1): pop %rbx
d6f7(1): pop %rbp
d6f8(2): pop %r12
d6fa(2): pop %r13
d6fc(2): pop %r14
d6fe(2): pop %r15
d700(1): ret near (%rsp)
d701(7): nop 0x0(%rax)
d708(3): or $0x10,%edx
d70b(3): mov %dl,0x68(%rbx)
d70e(5): jmp 0xffffff7d(%rip)
d713(5): nop 0x0(%rax,%rax,1)
d718(3): cmp $0xc,%edi
d71b(2): jz 0xffffffb5(%rip)
d71d(7): test $0x3ff00,0x8(%rax)
d724(6): jz 0xffffff67(%rip)
d72a(2): jmp 0xffffffa6(%rip)
d72c(4): nop 0x0(%rax)
d730(3): mov %rbx,%rdi
d733(5): call 0xffff452d(%rip)
d738(8): mov $0xc,0x0(%r13)
d740(2): xor %ebx,%ebx
d742(2): jmp 0xffffffad(%rip)
d744(3): mov %rbx,%rdi
d747(5): call 0xffffe499(%rip)
d74c(2): jmp 0xffffffec(%rip)
d74e(2): nop 
d750(6): mov $0x0,(%rdi)
d756(2): xor %ebx,%ebx
d758(2): jmp 0xffffff97(%rip)

"merge_state_array" :
d760(2): push %r15
d762(2): push %r14
d764(2): push %r13
d766(2): push %r12
d768(1): push %rbp
d769(1): push %rbx
d76a(4): sub $0x48,%rsp
d76e(9): mov $0x28,%rax
d777(5): mov %rax,0x38(%rsp)
d77c(2): xor %eax,%eax
d77e(3): test %rcx,%rcx
d781(6): jle 0x95(%rip)
d787(5): lea 0x1c(%rsp),%rax
d78c(3): mov %rdi,%r14
d78f(3): mov %rsi,%rbx
d792(3): mov %rdx,%r12
d795(3): mov %rcx,%rbp
d798(3): xor %r15d,%r15d
d79b(5): lea 0x20(%rsp),%r13
d7a0(5): mov %rax,0x8(%rsp)
d7a5(2): jmp 0x57(%rip)
d7a7(9): nop 0x0(%rax,%rax,1)
d7b0(3): test %rdx,%rdx
d7b3(2): jz 0x40(%rip)
d7b5(4): add $0x8,%rdx
d7b9(4): add $0x8,%rsi
d7bd(3): mov %r13,%rdi
d7c0(5): call 0xfffff980(%rip)
d7c5(2): test %eax,%eax
d7c7(4): mov %eax,0x1c(%rsp)
d7cb(2): jnz 0x4d(%rip)
d7cd(5): mov 0x8(%rsp),%rdi
d7d2(3): mov %r13,%rdx
d7d5(3): mov %r14,%rsi
d7d8(5): call 0xfffffd88(%rip)
d7dd(5): mov 0x30(%rsp),%rdi
d7e2(4): mov %rax,0x0(%rbx,%r15,8)
d7e6(5): call 0xffff447a(%rip)
d7eb(4): mov 0x1c(%rsp),%eax
d7ef(2): test %eax,%eax
d7f1(2): jnz 0x27(%rip)
d7f3(4): add $0x1,%r15
d7f7(3): cmp %r15,%rbp
d7fa(2): jz 0x1c(%rip)
d7fc(4): mov 0x0(%rbx,%r15,8),%rsi
d800(4): mov 0x0(%r12,%r15,8),%rdx
d804(3): test %rsi,%rsi
d807(2): jnz 0xffffffa9(%rip)
d809(4): mov %rdx,0x0(%rbx,%r15,8)
d80d(4): add $0x1,%r15
d811(3): cmp %r15,%rbp
d814(2): jnz 0xffffffe8(%rip)
d816(2): xor %eax,%eax
d818(5): mov 0x38(%rsp),%rcx
d81d(9): xor $0x28,%rcx
d826(2): jnz 0x11(%rip)
d828(4): add $0x48,%rsp
d82c(1): pop %rbx
d82d(1): pop %rbp
d82e(2): pop %r12
d830(2): pop %r13
d832(2): pop %r14
d834(2): pop %r15
d836(1): ret near (%rsp)
d837(5): call 0xffff4579(%rip)

"expand_bkref_cache" :
d840(2): push %r15
d842(2): push %r14
d844(2): push %r13
d846(2): push %r12
d848(3): mov %rdx,%r12
d84b(1): push %rbp
d84c(1): push %rbx
d84d(3): mov %rdi,%rbx
d850(3): mov %rsi,%rbp
d853(2): xor %esi,%esi
d855(4): sub $0x78,%rsp
d859(7): mov 0xc8(%rdi),%rdi
d860(9): mov $0x28,%rax
d869(5): mov %rax,0x68(%rsp)
d86e(2): xor %eax,%eax
d870(5): mov %rcx,0x20(%rsp)
d875(5): mov %r8d,0x2c(%rsp)
d87a(3): mov %rdi,%rdx
d87d(3): cmp %rdx,%rsi
d880(2): jnl 0x57(%rip)
d882(4): lea 0x0(%rsi,%rdx,1),%rax
d886(7): mov 0xd8(%rbx),%r8
d88d(3): mov %rax,%rcx
d890(4): shr $0x3f,%rcx
d894(3): add %rax,%rcx
d897(3): sar $0x1,%rcx
d89a(4): lea 0x0(%rcx,%rcx,4),%rax
d89e(5): cmp 0x8(%r8,%rax,8),%r12
d8a3(2): jle 0x2f(%rip)
d8a5(5): jmp 0x83(%rip)
d8aa(6): nop 0x0(%rax,%rax,1)
d8b0(4): lea 0x0(%rsi,%rcx,1),%rdx
d8b4(3): mov %rdx,%rax
d8b7(4): shr $0x3f,%rax
d8bb(3): add %rdx,%rax
d8be(3): sar $0x1,%rax
d8c1(4): lea 0x0(%rax,%rax,4),%rdx
d8c5(3): mov %rax,%r9
d8c8(5): cmp 0x8(%r8,%rdx,8),%r12
d8cd(2): jnle 0x63(%rip)
d8cf(3): mov %rax,%rcx
d8d2(3): cmp %rcx,%rsi
d8d5(2): jl 0xffffffdb(%rip)
d8d7(3): cmp %rsi,%rdi
d8da(2): jle 0x23(%rip)
d8dc(7): mov 0xd8(%rbx),%rcx
d8e3(4): lea 0x0(%rsi,%rsi,4),%rax
d8e7(4): shl/sal $0x3,%rax
d8eb(5): cmp %r12,0x8(%rcx,%rax,1)
d8f0(5): mov %rax,0x30(%rsp)
d8f5(2): jnz 0x8(%rip)
d8f7(4): cmp $0xffffffff,%rsi
d8fb(2): jnz 0x45(%rip)
d8fd(2): xor %eax,%eax
d8ff(5): mov 0x68(%rsp),%rbx
d904(9): xor $0x28,%rbx
d90d(6): jnz 0x2cc(%rip)
d913(4): add $0x78,%rsp
d917(1): pop %rbx
d918(1): pop %rbp
d919(2): pop %r12
d91b(2): pop %r13
d91d(2): pop %r14
d91f(2): pop %r15
d921(1): ret near (%rsp)
d922(6): nop 0x0(%rax,%rax,1)
d928(3): mov %rcx,%r9
d92b(3): mov %rdx,%rcx
d92e(2): nop 
d930(4): lea 0x1(%r9),%rsi
d934(3): mov %rcx,%rdx
d937(5): jmp 0xffffff46(%rip)
d93c(4): nop 0x0(%rax)
d940(4): lea 0x10(%rbp),%rax
d944(7): mov 0x98(%rbx),%r13
d94b(4): mov %rax,(%rsp)
d94f(5): lea 0x4c(%rsp),%rax
d954(5): mov %rax,0x38(%rsp)
d959(5): lea 0x50(%rsp),%rax
d95e(5): mov %rax,0x10(%rsp)
d963(5): mov 0x30(%rsp),%rax
d968(4): lea 0x0(%rcx,%rax,1),%r15
d96c(5): jmp 0xdc(%rip)
d971(7): nop 0x0(%rax)
d978(4): mov 0x18(%r13),%rax
d97c(4): mov 0x0(%rax,%r10,8),%rcx
d980(7): mov 0xb8(%rbx),%r10
d987(8): lea 0x0(,%r14,8),%rax
d98f(5): mov %rax,0x18(%rsp)
d994(3): add %rax,%r10
d997(5): mov %rcx,0x8(%rsp)
d99c(3): mov (%r10),%r9
d99f(3): test %r9,%r9
d9a2(6): jz 0x18e(%rip)
d9a8(4): mov 0x10(%r9),%rdi
d9ac(4): lea 0x18(%r9),%rsi
d9b0(3): mov %rcx,%rdx
d9b3(5): call 0xffffe59d(%rip)
d9b8(3): test %rax,%rax
d9bb(2): jnz 0x7e(%rip)
d9bd(5): mov 0x10(%rsp),%rdi
d9c2(4): lea 0x8(%r9),%rsi
d9c6(5): call 0xfffff6ea(%rip)
d9cb(5): mov 0x8(%rsp),%rsi
d9d0(5): mov 0x10(%rsp),%rdi
d9d5(4): mov %eax,0x4c(%rsp)
d9d9(5): call 0xffffd037(%rip)
d9de(4): mov 0x4c(%rsp),%edx
d9e2(2): test %edx,%edx
d9e4(6): jnz 0x1a2(%rip)
d9ea(2): cmp $0x1,%al
d9ec(6): jnz 0x19a(%rip)
d9f2(5): mov 0x18(%rsp),%r10
d9f7(7): add 0xb8(%rbx),%r10
d9fe(5): mov 0x10(%rsp),%rdx
da03(5): mov 0x38(%rsp),%rdi
da08(3): mov %r13,%rsi
da0b(5): mov %r10,0x8(%rsp)
da10(5): call 0xfffffb50(%rip)
da15(5): mov 0x8(%rsp),%r10
da1a(5): mov 0x60(%rsp),%rdi
da1f(3): mov %rax,(%r10)
da22(5): call 0xffff423e(%rip)
da27(7): mov 0xb8(%rbx),%rax
da2e(5): cmp $0x0,0x0(%rax,%r14,8)
da33(6): jz 0x142(%rip)
da39(4): add $0x28,%r15
da3d(5): cmp $0x0,0xfffffff8(%r15)
da42(6): jz 0xfffffebb(%rip)
da48(3): mov (%r15),%r10
da4b(4): mov 0x8(%rbp),%r9
da4f(4): mov (%rsp),%rsi
da53(3): mov %r10,%rdx
da56(3): mov %r9,%rdi
da59(5): call 0xffffe4f7(%rip)
da5e(3): test %rax,%rax
da61(2): jz 0xffffffd8(%rip)
da63(4): mov 0x18(%r15),%r8
da67(3): add %r12,%r8
da6a(3): mov %r8,%r14
da6d(4): sub 0x10(%r15),%r14
da71(3): cmp %r14,%r12
da74(6): jnz 0xffffff04(%rip)
da7a(4): mov 0x28(%r13),%rcx
da7e(4): lea 0x0(%r10,%r10,2),%rax
da82(4): mov (%rsp),%rsi
da86(3): mov %r9,%rdi
da89(4): lea 0x0(%rcx,%rax,8),%rax
da8d(4): mov 0x10(%rax),%rax
da91(3): mov (%rax),%r14
da94(3): mov %r14,%rdx
da97(5): call 0xffffe4b9(%rip)
da9c(3): test %rax,%rax
da9f(2): jnz 0xffffff9a(%rip)
daa1(5): mov $0x8,%edi
daa6(9): mov $0x1,0x50(%rsp)
daaf(9): mov $0x1,0x58(%rsp)
dab8(5): call 0xffff4468(%rip)
dabd(3): test %rax,%rax
dac0(5): mov %rax,0x60(%rsp)
dac5(6): jz 0xf8(%rip)
dacb(3): mov %r14,(%rax)
dace(2): xor %eax,%eax
dad0(5): mov 0x10(%rsp),%r15
dad5(5): mov 0x20(%rsp),%rdx
dada(3): mov %r13,%rdi
dadd(4): mov 0x2c(%rsp),%ecx
dae1(4): mov %eax,0x4c(%rsp)
dae5(3): mov %r15,%rsi
dae8(5): call 0xffffee18(%rip)
daed(3): mov %r15,%rsi
daf0(3): mov %rbp,%rdi
daf3(3): mov %eax,%r14d
daf6(5): call 0xffffe97a(%rip)
dafb(5): mov 0x60(%rsp),%rdi
db00(3): mov %eax,%r15d
db03(5): call 0xffff415d(%rip)
db08(4): mov 0x4c(%rsp),%eax
db0c(3): mov %r14d,%edx
db0f(3): or %r15d,%edx
db12(2): or %eax,%edx
db14(6): jnz 0x92(%rip)
db1a(7): mov 0xd8(%rbx),%rcx
db21(5): jmp 0xfffffe42(%rip)
db26(a): nop 0x0(%rax,%rax,1)
db30(5): mov $0x8,%edi
db35(5): mov %r10,0x18(%rsp)
db3a(9): mov $0x1,0x50(%rsp)
db43(9): mov $0x1,0x58(%rsp)
db4c(5): call 0xffff43d4(%rip)
db51(3): test %rax,%rax
db54(5): mov %rax,0x60(%rsp)
db59(2): jz 0x43(%rip)
db5b(5): mov 0x8(%rsp),%rdi
db60(8): mov $0x0,0x4c(%rsp)
db68(5): mov 0x18(%rsp),%r10
db6d(3): mov %rdi,(%rax)
db70(5): jmp 0xfffffe8e(%rip)
db75(4): mov 0x4c(%rsp),%eax
db79(2): test %eax,%eax
db7b(6): jz 0xfffffebe(%rip)
db81(5): jmp 0xfffffd7e(%rip)
db86(5): mov 0x60(%rsp),%rdi
db8b(5): call 0xffff40d5(%rip)
db90(4): mov 0x4c(%rsp),%eax
db94(2): test %eax,%eax
db96(6): jnz 0xfffffd69(%rip)
db9c(5): mov $0xc,%eax
dba1(5): jmp 0xfffffd5e(%rip)
dba6(2): test %eax,%eax
dba8(6): jnz 0xfffffd57(%rip)
dbae(3): test %r14d,%r14d
dbb1(3): mov %r14d,%eax
dbb4(4): cmove %r15d,%eax
dbb8(5): jmp 0xfffffd47(%rip)
dbbd(9): mov $0x0,0x58(%rsp)
dbc6(9): mov $0x0,0x50(%rsp)
dbcf(5): mov $0xc,%eax
dbd4(5): jmp 0xfffffefc(%rip)
dbd9(5): call 0xffff41d7(%rip)

"check_subexp_matching_top.isra.18" :
dbe0(2): push %r15
dbe2(2): push %r14
dbe4(2): push %r13
dbe6(2): push %r12
dbe8(1): push %rbp
dbe9(1): push %rbx
dbea(4): sub $0x28,%rsp
dbee(4): cmp $0x0,(%rsi)
dbf2(7): mov 0x98(%rdi),%r13
dbf9(6): jle 0xc7(%rip)
dbff(3): mov %rdx,%r14
dc02(3): mov %rsi,%r12
dc05(3): mov %rdi,%r15
dc08(2): xor %ebx,%ebx
dc0a(2): jmp 0x14(%rip)
dc0c(4): nop 0x0(%rax)
dc10(4): add $0x1,%rbx
dc14(4): cmp (%r12),%rbx
dc18(6): jnl 0xa8(%rip)
dc1e(3): mov (%r14),%rax
dc21(4): mov 0x0(%rax,%rbx,8),%rbp
dc25(3): mov %rbp,%rax
dc28(4): shl/sal $0x4,%rax
dc2c(4): add 0x0(%r13),%rax
dc30(4): cmp $0x8,0x8(%rax)
dc34(2): jnz 0xffffffdc(%rip)
dc36(3): mov (%rax),%rax
dc39(4): cmp $0x3f,%rax
dc3d(2): jnle 0xffffffd3(%rip)
dc3f(7): mov 0xa0(%r13),%rsi
dc46(4): bt %rax,%rsi
dc4a(2): jnb 0xffffffc6(%rip)
dc4c(7): mov 0xe8(%r15),%r8
dc53(7): cmp 0xf0(%r15),%r8
dc5a(7): mov 0xf8(%r15),%r9
dc61(2): jz 0x77(%rip)
dc63(5): mov $0x30,%esi
dc68(5): mov $0x1,%edi
dc6d(5): mov %r9,0x10(%rsp)
dc72(5): mov %r8,0x8(%rsp)
dc77(5): mov %rcx,0x18(%rsp)
dc7c(5): call 0xffff4244(%rip)
dc81(5): mov 0x8(%rsp),%r8
dc86(5): mov 0x10(%rsp),%r9
dc8b(3): test %rax,%rax
dc8e(4): mov %rax,0x0(%r9,%r8,8)
dc92(2): jz 0x3f(%rip)
dc94(4): add $0x1,%r8
dc98(4): add $0x1,%rbx
dc9c(5): mov 0x18(%rsp),%rcx
dca1(7): mov %r8,0xe8(%r15)
dca8(4): cmp (%r12),%rbx
dcac(4): mov %rbp,0x8(%rax)
dcb0(3): mov %rcx,(%rax)
dcb3(6): jl 0xffffff6b(%rip)
dcb9(7): nop 0x0(%rax)
dcc0(2): xor %eax,%eax
dcc2(4): add $0x28,%rsp
dcc6(1): pop %rbx
dcc7(1): pop %rbp
dcc8(2): pop %r12
dcca(2): pop %r13
dccc(2): pop %r14
dcce(2): pop %r15
dcd0(1): ret near (%rsp)
dcd1(5): mov $0xc,%eax
dcd6(2): jmp 0xffffffec(%rip)
dcd8(4): lea 0x0(%r8,%r8,1),%rax
dcdc(3): mov %r8,%rsi
dcdf(3): mov %r9,%rdi
dce2(4): shl/sal $0x4,%rsi
dce6(5): mov %rcx,0x8(%rsp)
dceb(5): mov %rax,0x10(%rsp)
dcf0(5): call 0xffff42a0(%rip)
dcf5(3): test %rax,%rax
dcf8(3): mov %rax,%r9
dcfb(5): mov 0x8(%rsp),%rcx
dd00(2): jz 0xffffffd1(%rip)
dd02(7): mov %rax,0xf8(%r15)
dd09(5): mov 0x10(%rsp),%rax
dd0e(7): mov 0xe8(%r15),%r8
dd15(7): mov %rax,0xf0(%r15)
dd1c(5): jmp 0xffffff47(%rip)

"re_string_context_at" :
dd30(1): push %rbp
dd31(1): push %rbx
dd32(3): mov %rdi,%rbp
dd35(4): sub $0x8,%rsp
dd39(3): test %rsi,%rsi
dd3c(2): js 0x54(%rip)
dd3e(4): cmp %rsi,0x58(%rdi)
dd42(6): jz 0xa6(%rip)
dd48(7): cmp $0x1,0x90(%rdi)
dd4f(2): jle 0x51(%rip)
dd51(4): mov 0x10(%rdi),%rax
dd55(2): jmp 0x15(%rip)
dd57(9): nop 0x0(%rax,%rax,1)
dd60(4): sub $0x1,%rsi
dd64(4): cmp $0xffffffff,%rsi
dd68(2): jz 0x28(%rip)
dd6a(3): mov 0x0(%rax,%rsi,4),%ebx
dd6d(3): cmp $0xff,%ebx
dd70(2): jz 0xfffffff0(%rip)
dd72(7): cmp $0x0,0x8e(%rbp)
dd79(2): jnz 0x7f(%rip)
dd7b(2): xor %eax,%eax
dd7d(3): cmp $0xa,%ebx
dd80(2): jz 0x4c(%rip)
dd82(4): add $0x8,%rsp
dd86(1): pop %rbx
dd87(1): pop %rbp
dd88(1): ret near (%rsp)
dd89(7): nop 0x0(%rax)
dd90(3): mov 0x70(%rbp),%eax
dd93(4): add $0x8,%rsp
dd97(1): pop %rbx
dd98(1): pop %rbp
dd99(1): ret near (%rsp)
dd9a(6): nop 0x0(%rax,%rax,1)
dda0(4): mov 0x8(%rdi),%rax
dda4(7): mov 0x80(%rdi),%rcx
ddab(4): movzx 0x0(%rax,%rsi,1),%eax
ddaf(3): mov %rax,%rdx
ddb2(4): sar $0x6,%rax
ddb6(4): mov 0x0(%rcx,%rax,8),%rcx
ddba(5): mov $0x1,%eax
ddbf(4): bt %rdx,%rcx
ddc3(2): jb 0xffffffbf(%rip)
ddc5(2): xor %eax,%eax
ddc7(3): cmp $0xa,%dl
ddca(2): jnz 0xffffffb8(%rip)
ddcc(2): xor %eax,%eax
ddce(7): cmp $0x0,0x8d(%rbp)
ddd5(3): setnz %al
ddd8(4): add $0x8,%rsp
dddc(2): add %eax,%eax
ddde(1): pop %rbx
dddf(1): pop %rbp
dde0(1): ret near (%rsp)
dde1(7): nop 0x0(%rax)
dde8(3): and $0x2,%edx
ddeb(3): cmp $0x1,%edx
ddee(2): sbb %eax,%eax
ddf0(3): and $0x2,%eax
ddf3(3): add $0x8,%eax
ddf6(2): jmp 0xffffff8c(%rip)
ddf8(2): mov %ebx,%edi
ddfa(5): call 0xffff4116(%rip)
ddff(2): test %eax,%eax
de01(2): jnz 0xb(%rip)
de03(3): cmp $0x5f,%ebx
de06(6): jnz 0xffffff75(%rip)
de0c(5): mov $0x1,%eax
de11(5): jmp 0xffffff71(%rip)

"check_node_accept" :
de20(4): mov 0x8(%rdi),%rax
de24(4): movzx 0x0(%rax,%rdx,1),%ecx
de28(4): movzx 0x8(%rsi),%eax
de2c(2): cmp $0x3,%al
de2e(6): jz 0xba(%rip)
de34(6): jbe 0x9c(%rip)
de3a(2): cmp $0x5,%al
de3c(2): jz 0x14(%rip)
de3e(2): cmp $0x7,%al
de40(6): jnz 0xa0(%rip)
de46(2): xor %eax,%eax
de48(2): test %cl,%cl
de4a(6): js 0x90(%rip)
de50(3): cmp $0xa,%cl
de53(6): jz 0xc5(%rip)
de59(2): test %cl,%cl
de5b(2): jnz 0x15(%rip)
de5d(7): mov 0x98(%rdi),%rcx
de64(2): xor %eax,%eax
de66(7): test $0x80,0xd8(%rcx)
de6d(2): jnz 0x6d(%rip)
de6f(1): nop 
de70(1): push %rbx
de71(3): mov 0x8(%rsi),%ebx
de74(5): mov $0x1,%eax
de79(6): test $0x3ff00,%ebx
de7f(2): jz 0x4d(%rip)
de81(3): mov %rdx,%rsi
de84(6): mov 0xa0(%rdi),%edx
de8a(3): shr $0x8,%ebx
de8d(5): call 0xfffffea3(%rip)
de92(2): mov %ebx,%ecx
de94(2): mov %eax,%edx
de96(5): and $0x3ff,%cx
de9b(3): test $0x4,%bl
de9e(2): jz 0x6a(%rip)
dea0(2): xor %eax,%eax
dea2(3): test $0x1,%dl
dea5(2): jz 0x27(%rip)
dea7(3): and $0x8,%ebx
deaa(2): jnz 0x22(%rip)
deac(3): test $0x20,%cl
deaf(2): jz 0x9(%rip)
deb1(2): xor %eax,%eax
deb3(3): test $0x2,%dl
deb6(2): jz 0x16(%rip)
deb8(3): shr $0x3,%edx
debb(5): mov $0x1,%eax
dec0(3): and $0x1,%edx
dec3(6): and $0x80,%ecx
dec9(3): cmovne %edx,%eax
decc(1): pop %rbx
decd(1): ret near (%rsp)
dece(2): nop 
ded0(2): cmp $0x1,%al
ded2(2): jnz 0xe(%rip)
ded4(2): xor %eax,%eax
ded6(2): cmp %cl,(%rsi)
ded8(2): jz 0xffffff98(%rip)
deda(2): REP ret near (%rsp)
dedc(4): nop 0x0(%rax)
dee0(2): xor %eax,%eax
dee2(1): ret near (%rsp)
dee3(5): nop 0x0(%rax,%rax,1)
dee8(3): mov (%rsi),%r8
deeb(3): movzx %cl,%eax
deee(4): sar $0x6,%rax
def2(4): mov 0x0(%r8,%rax,8),%r8
def6(2): xor %eax,%eax
def8(4): bt %rcx,%r8
defc(6): jb 0xffffff74(%rip)
df02(2): REP ret near (%rsp)
df04(4): nop 0x0(%rax)
df08(3): and $0x8,%ebx
df0b(2): jz 0xffffffa1(%rip)
df0d(2): test $0x1,%al
df0f(2): jz 0xffffff9d(%rip)
df11(2): xor %eax,%eax
df13(1): pop %rbx
df14(1): ret near (%rsp)
df15(3): nop (%rax)
df18(7): mov 0x98(%rdi),%rcx
df1f(2): xor %eax,%eax
df21(7): test $0x40,0xd8(%rcx)
df28(6): jnz 0xffffff48(%rip)
df2e(2): REP ret near (%rsp)

"check_halt_state_context.isra.20" :
df30(2): push %r12
df32(3): mov %rdx,%r12
df35(1): push %rbp
df36(1): push %rbx
df37(6): mov 0xa0(%rdi),%edx
df3d(3): mov %rsi,%rbx
df40(3): mov %rcx,%rsi
df43(3): mov %rdi,%rbp
df46(5): call 0xfffffdea(%rip)
df4b(3): test %rbx,%rbx
df4e(6): jle 0xaa(%rip)
df54(7): mov 0x98(%rbp),%rdx
df5b(3): mov %eax,%r11d
df5e(2): mov %eax,%ebp
df60(3): and $0x1,%eax
df63(4): mov (%r12),%r9
df67(2): xor %esi,%esi
df69(3): and $0x8,%ebp
df6c(4): and $0x2,%r11d
df70(3): mov %eax,%r10d
df73(3): mov (%rdx),%r8
df76(2): jmp 0x13(%rip)
df78(8): nop 0x0(%rax,%rax,1)
df80(4): add $0x1,%rsi
df84(3): cmp %rbx,%rsi
df87(2): jz 0x71(%rip)
df89(4): mov 0x0(%r9,%rsi,8),%rax
df8d(3): mov %rax,%rdx
df90(4): shl/sal $0x4,%rdx
df94(3): add %r8,%rdx
df97(3): mov 0x8(%rdx),%ecx
df9a(3): shr $0x8,%ecx
df9d(2): mov %ecx,%edi
df9f(5): and $0x3ff,%di
dfa4(4): cmp $0x2,0x8(%rdx)
dfa8(2): jnz 0xffffffd8(%rip)
dfaa(3): test %di,%di
dfad(2): jz 0x28(%rip)
dfaf(3): test $0x4,%cl
dfb2(2): jz 0x2e(%rip)
dfb4(3): test %r10d,%r10d
dfb7(2): jz 0xffffffc9(%rip)
dfb9(3): and $0x8,%ecx
dfbc(2): jnz 0xffffffc4(%rip)
dfbe(4): test $0x20,%dil
dfc2(2): jz 0x7(%rip)
dfc4(3): test %r11d,%r11d
dfc7(2): jz 0xffffffb9(%rip)
dfc9(6): and $0x80,%edi
dfcf(2): jz 0x6(%rip)
dfd1(2): test %ebp,%ebp
dfd3(2): jz 0xffffffad(%rip)
dfd5(1): pop %rbx
dfd6(1): pop %rbp
dfd7(2): pop %r12
dfd9(1): ret near (%rsp)
dfda(6): nop 0x0(%rax,%rax,1)
dfe0(3): and $0x8,%ecx
dfe3(2): jz 0xffffffdb(%rip)
dfe5(3): test %r10d,%r10d
dfe8(2): jnz 0xffffff98(%rip)
dfea(4): test $0x20,%dil
dfee(2): jz 0xffffffdb(%rip)
dff0(2): jmp 0xffffffd4(%rip)
dff2(6): nop 0x0(%rax,%rax,1)
dff8(1): pop %rbx
dff9(2): xor %eax,%eax
dffb(1): pop %rbp
dffc(2): pop %r12
dffe(1): ret near (%rsp)

"re_string_reconstruct" :
e000(2): push %r15
e002(2): push %r14
e004(3): mov %rsi,%r15
e007(2): push %r13
e009(2): push %r12
e00b(3): mov %edx,%r10d
e00e(1): push %rbp
e00f(1): push %rbx
e010(3): mov %rsi,%rbp
e013(3): mov %rdi,%rbx
e016(4): sub $0x48,%rsp
e01a(9): mov $0x28,%rax
e023(5): mov %rax,0x38(%rsp)
e028(2): xor %eax,%eax
e02a(4): mov 0x28(%rdi),%rax
e02e(3): sub %rax,%rbp
e031(3): cmp %rsi,%rax
e034(2): jle 0x62(%rip)
e036(7): cmp $0x1,0x90(%rdi)
e03d(6): jnle 0x133(%rip)
e043(4): mov 0x50(%rbx),%rax
e047(8): mov $0x0,0x30(%rbx)
e04f(3): mov %r15,%rbp
e052(8): mov $0x0,0x28(%rbx)
e05a(8): mov $0x0,0x38(%rbx)
e062(7): mov $0x0,0x8c(%rbx)
e069(4): mov %rax,0x58(%rbx)
e06d(4): mov 0x60(%rbx),%rax
e071(4): mov %rax,0x68(%rbx)
e075(3): mov %r10d,%eax
e078(3): and $0x1,%eax
e07b(3): cmp $0x1,%eax
e07e(2): sbb %eax,%eax
e080(3): and $0x2,%eax
e083(3): add $0x4,%eax
e086(7): cmp $0x0,0x8b(%rbx)
e08d(3): mov %eax,0x70(%rbx)
e090(6): jz 0xd0(%rip)
e096(3): test %rbp,%rbp
e099(2): jz 0x65(%rip)
e09b(4): mov 0x38(%rbx),%rax
e09f(7): movzx 0x8c(%rbx),%edx
e0a6(4): mov 0x30(%rbx),%r8
e0aa(3): cmp %rbp,%rax
e0ad(6): jle 0x123(%rip)
e0b3(2): test %dl,%dl
e0b5(6): jnz 0x213(%rip)
e0bb(4): lea 0xffffffff(%rbp),%rsi
e0bf(3): mov %r10d,%edx
e0c2(3): mov %rbx,%rdi
e0c5(4): mov %r8,(%rsp)
e0c9(5): call 0xfffffc67(%rip)
e0ce(4): mov (%rsp),%r8
e0d2(3): mov %eax,0x70(%rbx)
e0d5(3): sub %rbp,%r8
e0d8(7): cmp $0x1,0x90(%rbx)
e0df(6): jnle 0xa1(%rip)
e0e5(7): cmp $0x0,0x8b(%rbx)
e0ec(6): jnz 0x3a4(%rip)
e0f2(4): sub %rbp,0x38(%rbx)
e0f6(4): mov %r8,0x30(%rbx)
e0fa(4): add %rbp,0x8(%rbx)
e0fe(4): mov 0x58(%rbx),%rax
e102(4): sub %rbp,0x68(%rbx)
e106(4): mov %r15,0x28(%rbx)
e10a(3): sub %rbp,%rax
e10d(7): cmp $0x1,0x90(%rbx)
e114(4): mov %rax,0x58(%rbx)
e118(6): jle 0xa0(%rip)
e11e(7): cmp $0x0,0x88(%rbx)
e125(3): mov %rbx,%rdi
e128(2): jz 0x80(%rip)
e12a(5): call 0xffffcd46(%rip)
e12f(2): test %eax,%eax
e131(2): jnz 0xc(%rip)
e133(8): mov $0x0,0x48(%rbx)
e13b(2): xor %eax,%eax
e13d(5): mov 0x38(%rsp),%rcx
e142(9): xor $0x28,%rcx
e14b(6): jnz 0x64f(%rip)
e151(4): add $0x48,%rsp
e155(1): pop %rbx
e156(1): pop %rbp
e157(2): pop %r12
e159(2): pop %r13
e15b(2): pop %r14
e15d(2): pop %r15
e15f(1): ret near (%rsp)
e160(3): mov (%rbx),%rax
e163(4): mov %rax,0x8(%rbx)
e167(5): jmp 0xffffff2f(%rip)
e16c(4): nop 0x0(%rax)
e170(8): mov $0x0,0x20(%rdi)
e178(5): jmp 0xfffffecb(%rip)
e17d(3): nop (%rax)
e180(4): mov 0x10(%rbx),%rdi
e184(8): lea 0x0(,%r8,4),%rdx
e18c(4): lea 0x0(%rdi,%rbp,4),%rsi
e190(5): call 0xffff3e60(%rip)
e195(4): mov 0x30(%rbx),%r8
e199(3): sub %rbp,%r8
e19c(5): jmp 0xffffff49(%rip)
e1a1(7): nop 0x0(%rax)
e1a8(5): call 0xffffcaf8(%rip)
e1ad(5): jmp 0xffffff86(%rip)
e1b2(6): nop 0x0(%rax,%rax,1)
e1b8(7): cmp $0x0,0x8b(%rbx)
e1bf(6): jnz 0x3b1(%rip)
e1c5(4): mov %rax,0x30(%rbx)
e1c9(5): jmp 0xffffff6a(%rip)
e1ce(2): nop 
e1d0(2): test %dl,%dl
e1d2(6): jnz 0x4ab(%rip)
e1d8(7): movsxd 0x90(%rbx),%rdx
e1df(8): mov $0x0,0x30(%rbx)
e1e7(4): mov 0x28(%rbx),%r11
e1eb(3): cmp $0x1,%edx
e1ee(6): jle 0x3ea(%rip)
e1f4(7): cmp $0x0,0x89(%rbx)
e1fb(6): jnz 0x2bd(%rip)
e201(4): lea 0x0(%r11,%rax,1),%r14
e205(3): cmp %r14,%r15
e208(6): jle 0x447(%rip)
e20e(4): lea 0x20(%rbx),%rax
e212(5): lea 0x24(%rsp),%r13
e217(5): mov %rax,0x10(%rsp)
e21c(4): nop 0x0(%rax)
e220(4): mov 0x50(%rbx),%r12
e224(3): mov (%rbx),%rsi
e227(3): mov %r13,%rdi
e22a(4): mov 0x20(%rbx),%rax
e22e(5): mov 0x10(%rsp),%rcx
e233(5): mov %r10d,0xc(%rsp)
e238(4): mov %r8,(%rsp)
e23c(3): sub %r14,%r12
e23f(3): add %r14,%rsi
e242(3): mov %r12,%rdx
e245(5): mov %rax,0x18(%rsp)
e24a(5): call 0xffffc166(%rip)
e24f(4): lea 0xffffffff(%rax),%rcx
e253(4): mov 0x24(%rsp),%edx
e257(4): mov (%rsp),%r8
e25b(5): mov 0xc(%rsp),%r10d
e260(4): cmp $0xfffffffc,%rcx
e264(6): jnbe 0x441(%rip)
e26a(3): add %rax,%r14
e26d(3): cmp %r14,%r15
e270(2): jnle 0xffffffb0(%rip)
e272(3): sub %r15,%r14
e275(3): cmp $0xff,%edx
e278(3): mov %r14,%r12
e27b(4): mov %r14,0x30(%rbx)
e27f(6): jz 0x3da(%rip)
e285(7): cmp $0x0,0x8e(%rbx)
e28c(6): jnz 0x46d(%rip)
e292(2): xor %eax,%eax
e294(3): cmp $0xa,%edx
e297(2): jnz 0x10(%rip)
e299(2): xor %eax,%eax
e29b(7): cmp $0x0,0x8d(%rbx)
e2a2(3): setnz %al
e2a5(2): add %eax,%eax
e2a7(3): mov %eax,0x70(%rbx)
e2aa(4): cmp $0x0,%r12
e2ae(6): jnz 0x41c(%rip)
e2b4(7): movzx 0x8b(%rbx),%eax
e2bb(4): mov %r12,0x38(%rbx)
e2bf(5): jmp 0x1bd(%rip)
e2c4(4): nop 0x0(%rax)
e2c8(4): mov 0x18(%rbx),%r14
e2cc(3): mov %r8,%rcx
e2cf(2): xor %esi,%esi
e2d1(2): jmp 0x12(%rip)
e2d3(5): nop 0x0(%rax,%rax,1)
e2d8(2): jnl 0x3b(%rip)
e2da(4): lea 0x1(%rax),%rsi
e2de(3): cmp %rcx,%rsi
e2e1(2): jnl 0x27(%rip)
e2e3(4): lea 0x0(%rsi,%rcx,1),%rdx
e2e7(3): mov %rdx,%rax
e2ea(4): shr $0x3f,%rax
e2ee(3): add %rdx,%rax
e2f1(3): sar $0x1,%rax
e2f4(4): mov 0x0(%r14,%rax,8),%rdx
e2f8(3): mov %rax,%r12
e2fb(3): cmp %rbp,%rdx
e2fe(2): jle 0xffffffda(%rip)
e300(3): mov %rax,%rcx
e303(2): jmp 0xffffffdb(%rip)
e305(3): nop (%rax)
e308(4): lea 0x1(%rax),%r12
e30c(3): cmp %rbp,%rdx
e30f(4): cmovnl %rax,%r12
e313(5): lea 0xffffffff(%r12),%r13
e318(3): mov %r10d,%edx
e31b(3): mov %rbx,%rdi
e31e(4): mov %r8,(%rsp)
e322(3): mov %r13,%rsi
e325(5): call 0xfffffa0b(%rip)
e32a(3): cmp %r12,%rbp
e32d(3): mov %eax,0x70(%rbx)
e330(4): mov (%rsp),%r8
e334(6): jnz 0x84(%rip)
e33a(3): cmp %r8,%rbp
e33d(2): jnl 0x7b(%rip)
e33f(4): cmp %rbp,0x0(%r14,%r12,8)
e343(2): jnz 0x75(%rip)
e345(4): mov 0x10(%rbx),%rdi
e349(3): sub %rbp,%r8
e34c(8): lea 0x0(,%r8,4),%rdx
e354(4): lea 0x0(%rdi,%rbp,4),%rsi
e358(5): call 0xffff3c98(%rip)
e35d(4): mov 0x8(%rbx),%rdi
e361(4): mov 0x30(%rbx),%rdx
e365(4): lea 0x0(%rdi,%rbp,1),%rsi
e369(3): sub %rbp,%rdx
e36c(5): call 0xffff3c84(%rip)
e371(4): mov 0x30(%rbx),%rax
e375(4): sub %rbp,0x38(%rbx)
e379(3): sub %rbp,%rax
e37c(3): test %rax,%rax
e37f(4): mov %rax,0x30(%rbx)
e383(2): jle 0x25(%rip)
e385(4): mov 0x18(%rbx),%rcx
e389(2): xor %eax,%eax
e38b(4): lea 0x0(%rcx,%rbp,8),%rsi
e38f(1): nop 
e390(4): mov 0x0(%rsi,%rax,8),%rdx
e394(3): sub %rbp,%rdx
e397(4): mov %rdx,0x0(%rcx,%rax,8)
e39b(4): add $0x1,%rax
e39f(4): cmp %rax,0x30(%rbx)
e3a3(2): jnle 0xffffffed(%rip)
e3a5(3): nop (%rax)
e3a8(7): movzx 0x8b(%rbx),%eax
e3af(5): jmp 0xcd(%rip)
e3b4(4): nop 0x0(%rax)
e3b8(4): mov 0x50(%rbx),%rax
e3bc(7): mov $0x0,0x8c(%rbx)
e3c3(3): add %rbp,%rax
e3c6(3): sub %r15,%rax
e3c9(4): mov %rax,0x58(%rbx)
e3cd(4): mov 0x60(%rbx),%rax
e3d1(3): add %rbp,%rax
e3d4(3): sub %r15,%rax
e3d7(3): test %r12,%r12
e3da(4): mov %rax,0x68(%rbx)
e3de(2): jle 0x25(%rip)
e3e0(5): cmp %rbp,0xfffffff8(%r14,%r12,8)
e3e5(2): jz 0x16(%rip)
e3e7(2): jmp 0x1c(%rip)
e3e9(7): nop 0x0(%rax)
e3f0(5): cmp %rbp,0xfffffff8(%r14,%r13,8)
e3f5(2): jnz 0xe(%rip)
e3f7(4): sub $0x1,%r13
e3fb(3): test %r13,%r13
e3fe(3): mov %r13,%r12
e401(2): jnz 0xffffffef(%rip)
e403(3): cmp %r8,%r12
e406(6): jnl 0x232(%rip)
e40c(4): mov 0x10(%rbx),%rax
e410(2): jmp 0x15(%rip)
e412(6): nop 0x0(%rax,%rax,1)
e418(4): add $0x1,%r12
e41c(3): cmp %r8,%r12
e41f(6): jz 0x221(%rip)
e425(5): cmp $0xff,0x0(%rax,%r12,4)
e42a(2): jz 0xffffffee(%rip)
e42c(4): mov 0x0(%r14,%r12,8),%rdx
e430(3): sub %rbp,%rdx
e433(4): cmp $0x0,%rdx
e437(4): mov %rdx,0x30(%rbx)
e43b(2): jz 0x36(%rip)
e43d(2): jle 0x22(%rip)
e43f(4): mov 0x10(%rbx),%rax
e443(4): lea 0x0(%rax,%rdx,4),%rcx
e447(9): nop 0x0(%rax,%rax,1)
e450(6): mov $0xffffffff,(%rax)
e456(4): add $0x4,%rax
e45a(3): cmp %rax,%rcx
e45d(2): jnz 0xfffffff3(%rip)
e45f(4): mov 0x8(%rbx),%rdi
e463(5): mov $0xff,%esi
e468(5): call 0xffff39d8(%rip)
e46d(4): mov 0x30(%rbx),%rdx
e471(7): movzx 0x8b(%rbx),%eax
e478(4): mov %rdx,0x38(%rbx)
e47c(2): test %al,%al
e47e(6): jz 0xfffffc7c(%rip)
e484(5): jmp 0xfffffc7a(%rip)
e489(7): nop 0x0(%rax)
e490(4): mov 0x8(%rbx),%rdi
e494(3): mov %r8,%rdx
e497(4): lea 0x0(%rdi,%rbp,1),%rsi
e49b(5): call 0xffff3b55(%rip)
e4a0(7): movzx 0x8b(%rbx),%eax
e4a7(4): sub %rbp,0x30(%rbx)
e4ab(4): sub %rbp,0x38(%rbx)
e4af(2): jmp 0xffffffcd(%rip)
e4b1(7): nop 0x0(%rax)
e4b8(3): mov (%rbx),%rcx
e4bb(3): mov %rbp,%rdi
e4be(3): sub %rdx,%rdi
e4c1(3): mov %rdi,%rdx
e4c4(4): lea 0x0(%rcx,%r11,1),%r12
e4c8(3): add %r12,%rdx
e4cb(5): lea 0xffffffff(%r12,%rbp,1),%rsi
e4d0(3): cmp %rdx,%rcx
e4d3(4): cmovnae %rdx,%rcx
e4d7(3): cmp %rsi,%rcx
e4da(2): jbe 0x1b(%rip)
e4dc(5): jmp 0xfffffd25(%rip)
e4e1(7): nop 0x0(%rax)
e4e8(4): sub $0x1,%rsi
e4ec(3): cmp %rsi,%rcx
e4ef(6): jnbe 0xfffffd12(%rip)
e4f5(3): movzx (%rsi),%edx
e4f8(3): and $0xc0,%edx
e4fb(3): cmp $0x80,%dl
e4fe(2): jz 0xffffffea(%rip)
e500(4): mov 0x58(%rbx),%rdx
e504(4): mov 0x78(%rbx),%rcx
e508(3): mov %rsi,%r14
e50b(3): add %r12,%rdx
e50e(3): sub %rsi,%rdx
e511(3): test %rcx,%rcx
e514(6): jnz 0x24e(%rip)
e51a(5): lea 0x24(%rsp),%r13
e51f(3): add %rbp,%r12
e522(5): lea 0x28(%rsp),%rcx
e527(3): sub %r14,%r12
e52a(5): mov %r10d,0xc(%rsp)
e52f(4): mov %r8,(%rsp)
e533(3): mov %r13,%rdi
e536(9): mov $0x0,0x28(%rsp)
e53f(5): call 0xffffbe71(%rip)
e544(3): cmp %rax,%r12
e547(4): mov (%rsp),%r8
e54b(5): mov 0xc(%rsp),%r10d
e550(2): jnbe 0xc(%rip)
e552(4): cmp $0xfffffffd,%rax
e556(6): jbe 0x1cb(%rip)
e55c(4): mov 0x28(%rbx),%r11
e560(4): mov 0x38(%rbx),%rax
e564(5): jmp 0xfffffc9d(%rip)
e569(7): nop 0x0(%rax)
e570(7): cmp $0x0,0x88(%rbx)
e577(6): jnz 0xf9(%rip)
e57d(4): mov 0x78(%rbx),%rcx
e581(3): test %rcx,%rcx
e584(6): jz 0xfffffbaf(%rip)
e58a(4): cmp %rax,0x40(%rbx)
e58e(4): mov 0x30(%rbx),%rdx
e592(5): cmovng 0x40(%rbx),%rax
e597(3): cmp %rdx,%rax
e59a(2): jnle 0xe(%rip)
e59c(2): jmp 0x2c(%rip)
e59e(2): nop 
e5a0(4): mov 0x28(%rbx),%r15
e5a4(4): mov 0x78(%rbx),%rcx
e5a8(3): mov (%rbx),%rsi
e5ab(3): add %rdx,%rsi
e5ae(5): movzx 0x0(%rsi,%r15,1),%esi
e5b3(4): movzx 0x0(%rcx,%rsi,1),%esi
e5b7(4): mov 0x8(%rbx),%rcx
e5bb(4): mov %sil,0x0(%rcx,%rdx,1)
e5bf(4): add $0x1,%rdx
e5c3(3): cmp %rdx,%rax
e5c6(2): jnz 0xffffffda(%rip)
e5c8(4): mov %rdx,0x30(%rbx)
e5cc(4): mov %rdx,0x38(%rbx)
e5d0(5): jmp 0xfffffb63(%rip)
e5d5(3): nop (%rax)
e5d8(3): mov (%rbx),%rax
e5db(4): mov 0x78(%rbx),%rdx
e5df(3): add %rbp,%rax
e5e2(3): test %rdx,%rdx
e5e5(6): movzx 0xffffffff(%r11,%rax,1),%eax
e5eb(8): mov $0x0,0x38(%rbx)
e5f3(2): jz 0x6(%rip)
e5f5(4): movzx 0x0(%rdx,%rax,1),%eax
e5f9(7): mov 0x80(%rbx),%rcx
e600(3): movzx %al,%edx
e603(4): sar $0x6,%rdx
e607(4): mov 0x0(%rcx,%rdx,8),%rcx
e60b(5): mov $0x1,%edx
e610(4): bt %rax,%rcx
e614(2): jb 0x1c(%rip)
e616(2): xor %edx,%edx
e618(2): cmp $0xa,%al
e61a(2): jnz 0x16(%rip)
e61c(2): xor %edx,%edx
e61e(7): cmp $0x0,0x8d(%rbx)
e625(3): setnz %dl
e628(2): add %edx,%edx
e62a(6): nop 0x0(%rax,%rax,1)
e630(3): mov %edx,0x70(%rbx)
e633(5): jmp 0xfffffd75(%rip)
e638(6): jnz 0xfffffdf4(%rip)
e63e(2): nop 
e640(8): mov $0x0,0x30(%rbx)
e648(2): xor %edx,%edx
e64a(5): jmp 0xfffffe27(%rip)
e64f(3): sub %r15,%r14
e652(3): mov %r14,%r12
e655(4): mov %r14,0x30(%rbx)
e659(4): lea 0xffffffff(%r8),%rsi
e65d(3): mov %r10d,%edx
e660(3): mov %rbx,%rdi
e663(5): call 0xfffff6cd(%rip)
e668(3): mov %eax,0x70(%rbx)
e66b(5): jmp 0xfffffc3f(%rip)
e670(3): mov %rbx,%rdi
e673(5): call 0xffffc5bd(%rip)
e678(5): jmp 0xfffffabb(%rip)
e67d(4): mov 0x50(%rbx),%rdx
e681(7): mov $0x0,0x8c(%rbx)
e688(3): add %rbp,%rdx
e68b(3): sub %r15,%rdx
e68e(4): mov %rdx,0x58(%rbx)
e692(4): mov 0x60(%rbx),%rdx
e696(3): add %rbp,%rdx
e699(3): sub %r15,%rdx
e69c(4): mov %rdx,0x68(%rbx)
e6a0(5): jmp 0xfffffb38(%rip)
e6a5(3): test %rax,%rax
e6a8(2): jz 0x75(%rip)
e6aa(3): test %r12,%r12
e6ad(2): jz 0x70(%rip)
e6af(3): mov (%rbx),%rax
e6b2(5): movzx 0x0(%rax,%r14,1),%edx
e6b7(5): mov 0x18(%rsp),%rax
e6bc(4): mov %rax,0x20(%rbx)
e6c0(5): mov $0x1,%eax
e6c5(5): jmp 0xfffffba5(%rip)
e6ca(2): jle 0x1d(%rip)
e6cc(4): mov 0x10(%rbx),%rax
e6d0(4): lea 0x0(%rax,%r12,4),%rdx
e6d4(4): nop 0x0(%rax)
e6d8(6): mov $0xffffffff,(%rax)
e6de(4): add $0x4,%rax
e6e2(3): cmp %rax,%rdx
e6e5(2): jnz 0xfffffff3(%rip)
e6e7(7): cmp $0x0,0x8b(%rbx)
e6ee(2): jnz 0x5a(%rip)
e6f0(4): mov %r12,0x38(%rbx)
e6f4(5): jmp 0xfffffa06(%rip)
e6f9(2): mov %edx,%edi
e6fb(3): mov %edx,(%rsp)
e6fe(5): call 0xffff3812(%rip)
e703(2): test %eax,%eax
e705(2): jnz 0xe(%rip)
e707(3): mov (%rsp),%edx
e70a(3): cmp $0x5f,%edx
e70d(6): jnz 0xfffffb85(%rip)
e713(5): mov $0x1,%eax
e718(5): jmp 0xfffffb8f(%rip)
e71d(2): xor %edx,%edx
e71f(2): jmp 0xffffff98(%rip)
e721(4): mov 0x24(%rsp),%edx
e725(3): sub %r12,%rax
e728(8): mov $0x0,0x20(%rbx)
e730(3): mov %rax,%r12
e733(4): mov %rax,0x30(%rbx)
e737(3): cmp $0xff,%edx
e73a(6): jnz 0xfffffb4b(%rip)
e740(5): jmp 0xfffffe1c(%rip)
e745(3): nop (%rax)
e748(4): mov 0x8(%rbx),%rdi
e74c(3): mov %r12,%rdx
e74f(5): mov $0xff,%esi
e754(5): call 0xffff36ec(%rip)
e759(4): mov 0x30(%rbx),%r12
e75d(5): jmp 0xfffffb57(%rip)
e762(4): cmp $0x6,%rdx
e766(5): mov $0x6,%edi
e76b(5): lea 0x32(%rsp),%r11
e770(4): cmovng %rdx,%rdi
e774(3): sub $0x1,%edi
e777(2): test %edi,%edi
e779(3): movsxd %edi,%rax
e77c(2): js 0x16(%rip)
e77e(4): movzx 0x0(%rsi,%rax,1),%edi
e782(4): movzx 0x0(%rcx,%rdi,1),%edi
e786(4): mov %dil,0x0(%r11,%rax,1)
e78a(4): sub $0x1,%rax
e78e(2): test %eax,%eax
e790(2): jns 0xffffffee(%rip)
e792(3): mov %r11,%rsi
e795(5): jmp 0xfffffd85(%rip)
e79a(5): call 0xffff3616(%rip)

"sub_epsilon_src_nodes" :
e7a0(2): push %r15
e7a2(2): push %r14
e7a4(3): mov %rdx,%r14
e7a7(2): push %r13
e7a9(2): push %r12
e7ab(4): lea 0x0(%rsi,%rsi,2),%rdx
e7af(1): push %rbp
e7b0(1): push %rbx
e7b1(4): pxor %xmm0,%xmm0
e7b5(4): sub $0x48,%rsp
e7b9(9): mov $0x28,%rax
e7c2(5): mov %rax,0x38(%rsp)
e7c7(2): xor %eax,%eax
e7c9(4): mov 0x38(%rdi),%rax
e7cd(9): mov $0x0,0x30(%rsp)
e7d6(5): movaps %xmm0,0x20(%rsp)
e7db(5): mov %rcx,0x10(%rsp)
e7e0(4): lea 0x0(%rax,%rdx,8),%rbp
e7e4(4): mov 0x8(%rbp),%r10
e7e8(3): test %r10,%r10
e7eb(6): jle 0x1e7(%rip)
e7f1(5): lea 0x20(%rsp),%rax
e7f6(3): mov %rdi,%r12
e7f9(3): mov %rsi,%r13
e7fc(2): xor %ebx,%ebx
e7fe(5): mov %rax,0x18(%rsp)
e803(2): jmp 0x5a(%rip)
e805(3): nop (%rax)
e808(3): test %rax,%rax
e80b(6): jnz 0xdd(%rip)
e811(4): mov 0x8(%r14),%rdi
e815(4): lea 0x10(%r14),%rsi
e819(3): mov %r8,%rdx
e81c(5): call 0xffffd734(%rip)
e821(3): test %rax,%rax
e824(6): jz 0xc4(%rip)
e82a(5): mov 0x38(%r12),%rdx
e82f(5): mov 0x10(%rsp),%rsi
e834(5): mov 0x18(%rsp),%rdi
e839(3): add %r9,%rdx
e83c(5): call 0xffffe224(%rip)
e841(2): test %eax,%eax
e843(6): jnz 0x17d(%rip)
e849(4): mov 0x8(%rbp),%r10
e84d(3): nop (%rax)
e850(4): add $0x1,%rbx
e854(3): cmp %rbx,%r10
e857(6): jle 0xd9(%rip)
e85d(4): mov 0x10(%rbp),%rax
e861(4): mov 0x0(%rax,%rbx,8),%rax
e865(3): cmp %rax,%r13
e868(2): jz 0xffffffe8(%rip)
e86a(3): mov %rax,%rdx
e86d(4): shl/sal $0x4,%rdx
e871(4): add (%r12),%rdx
e875(4): test $0x8,0x8(%rdx)
e879(2): jz 0xffffffd7(%rip)
e87b(4): lea 0x0(%rax,%rax,2),%r9
e87f(5): mov 0x28(%r12),%rcx
e884(4): lea 0x10(%rbp),%r11
e888(3): mov %r10,%rdi
e88b(4): shl/sal $0x3,%r9
e88f(3): mov %r11,%rsi
e892(3): add %r9,%rcx
e895(4): mov 0x10(%rcx),%r15
e899(5): mov %rcx,0x8(%rsp)
e89e(3): mov (%r15),%r8
e8a1(3): mov %r8,%rdx
e8a4(4): mov %r8,(%rsp)
e8a8(5): call 0xffffd6a8(%rip)
e8ad(5): mov 0x8(%rsp),%rcx
e8b2(4): mov (%rsp),%r8
e8b6(5): cmp $0x1,0x8(%rcx)
e8bb(6): jnle 0xffffff4d(%rip)
e8c1(3): test %rax,%rax
e8c4(2): jnz 0xffffff8c(%rip)
e8c6(4): mov 0x8(%r14),%rdi
e8ca(4): lea 0x10(%r14),%rsi
e8ce(3): mov %r8,%rdx
e8d1(5): call 0xffffd67f(%rip)
e8d6(3): test %rax,%rax
e8d9(6): jnz 0xffffff51(%rip)
e8df(5): jmp 0xffffff71(%rip)
e8e4(4): nop 0x0(%rax)
e8e8(4): mov 0x8(%r15),%r15
e8ec(3): test %r15,%r15
e8ef(6): jle 0xffffff61(%rip)
e8f5(3): mov %r15,%rdx
e8f8(3): mov %r11,%rsi
e8fb(3): mov %r10,%rdi
e8fe(5): call 0xffffd652(%rip)
e903(3): test %rax,%rax
e906(6): jnz 0xffffff4a(%rip)
e90c(4): mov 0x8(%r14),%rdi
e910(4): lea 0x10(%r14),%rsi
e914(5): call 0xffffd63c(%rip)
e919(3): test %rax,%rax
e91c(6): jz 0xffffff34(%rip)
e922(5): jmp 0xffffff08(%rip)
e927(9): nop 0x0(%rax,%rax,1)
e930(3): xor %r9d,%r9d
e933(3): test %r10,%r10
e936(5): lea 0x30(%rsp),%r11
e93b(2): jle 0x51(%rip)
e93d(3): nop (%rax)
e940(4): mov 0x10(%rbp),%rax
e944(5): mov 0x28(%rsp),%rdi
e949(3): mov %r11,%rsi
e94c(4): mov 0x0(%rax,%r9,8),%r10
e950(3): mov %r10,%rdx
e953(5): call 0xffffd5fd(%rip)
e958(3): test %rax,%rax
e95b(2): jnz 0x27(%rip)
e95d(4): lea 0x10(%r14),%rbx
e961(4): mov 0x8(%r14),%rdi
e965(3): mov %rbx,%rsi
e968(5): call 0xffffd5e8(%rip)
e96d(4): sub $0x1,%rax
e971(3): mov %rax,%rdx
e974(2): js 0xe(%rip)
e976(4): lea 0x8(%r14),%rdi
e97a(3): mov %rbx,%rsi
e97d(5): call 0xffffd753(%rip)
e982(4): add $0x1,%r9
e986(4): cmp %r9,0x8(%rbp)
e98a(2): jnle 0xffffffb6(%rip)
e98c(5): mov 0x30(%rsp),%rdi
e991(5): call 0xffff32cf(%rip)
e996(2): xor %eax,%eax
e998(5): mov 0x38(%rsp),%rsi
e99d(9): xor $0x28,%rsi
e9a6(2): jnz 0x30(%rip)
e9a8(4): add $0x48,%rsp
e9ac(1): pop %rbx
e9ad(1): pop %rbp
e9ae(2): pop %r12
e9b0(2): pop %r13
e9b2(2): pop %r14
e9b4(2): pop %r15
e9b6(1): ret near (%rsp)
e9b7(9): nop 0x0(%rax,%rax,1)
e9c0(5): mov 0x30(%rsp),%rdi
e9c5(3): mov %eax,(%rsp)
e9c8(5): call 0xffff3298(%rip)
e9cd(3): mov (%rsp),%eax
e9d0(2): jmp 0xffffffc8(%rip)
e9d2(2): xor %edi,%edi
e9d4(2): jmp 0xffffffbd(%rip)
e9d6(5): call 0xffff33da(%rip)

"build_trtable" :
e9e0(2): push %r15
e9e2(2): push %r14
e9e4(3): mov %rdi,%r15
e9e7(2): push %r13
e9e9(2): push %r12
e9eb(5): mov $0x3800,%edi
e9f0(1): push %rbp
e9f1(1): push %rbx
e9f2(7): sub $0x108,%rsp
e9f9(9): mov $0x28,%rax
ea02(8): mov %rax,0xf8(%rsp)
ea0a(2): xor %eax,%eax
ea0c(5): mov %rsi,0x8(%rsp)
ea11(5): call 0xffff350f(%rip)
ea16(3): test %rax,%rax
ea19(5): mov %rax,0x18(%rsp)
ea1e(6): jz 0x3d2(%rip)
ea24(5): mov 0x18(%rsp),%rax
ea29(4): pxor %xmm0,%xmm0
ea2d(7): lea 0x1800(%rax),%rbx
ea34(5): mov 0x8(%rsp),%rax
ea39(8): movaps %xmm0,0x90(%rsp)
ea41(5): mov %rbx,0x40(%rsp)
ea46(8): movaps %xmm0,0xa0(%rsp)
ea4e(5): cmp $0x0,0x10(%rax)
ea53(8): mov $0x0,0x58(%rax)
ea5b(8): mov $0x0,0x60(%rax)
ea63(6): jle 0xa77(%rip)
ea69(5): mov %r15,0x30(%rsp)
ea6e(2): xor %ebp,%ebp
ea70(9): mov $0x0,0x10(%rsp)
ea79(3): mov %rbx,%r15
ea7c(5): mov 0x10(%rsp),%rbx
ea81(8): lea 0x0(,%rbx,8),%rax
ea89(5): mov %rax,0x20(%rsp)
ea8e(5): mov 0x8(%rsp),%rax
ea93(4): mov 0x18(%rax),%rax
ea97(4): mov 0x0(%rax,%rbx,8),%r13
ea9b(5): mov 0x30(%rsp),%rax
eaa0(4): shl/sal $0x4,%r13
eaa4(3): add (%rax),%r13
eaa7(5): movzx 0x8(%r13),%r14d
eaac(4): mov 0x8(%r13),%eax
eab0(3): shr $0x8,%eax
eab3(4): and $0x3ff,%ax
eab7(4): cmp $0x1,%r14d
eabb(6): jz 0x365(%rip)
eac1(4): cmp $0x3,%r14d
eac5(6): jz 0x7cb(%rip)
eacb(4): cmp $0x5,%r14d
eacf(6): jz 0x681(%rip)
ead5(4): cmp $0x7,%r14d
ead9(6): jz 0x7e0(%rip)
eadf(5): mov 0x8(%rsp),%rbx
eae4(6): add $0x1,0x10(%rsp)
eaea(5): mov 0x10(%rsp),%rax
eaef(4): cmp 0x10(%rbx),%rax
eaf3(2): jl 0xffffff89(%rip)
eaf5(3): test %rbp,%rbp
eaf8(5): mov 0x30(%rsp),%r15
eafd(6): jle 0xa5c(%rip)
eb03(4): lea 0x1(%rbp),%rbx
eb07(9): mov $0x0,0x78(%rsp)
eb10(5): mov %rbx,0x70(%rsp)
eb15(4): shl/sal $0x3,%rbx
eb19(3): mov %rbx,%rdi
eb1c(5): call 0xffff3404(%rip)
eb21(3): test %rax,%rax
eb24(3): mov %rax,%r12
eb27(8): mov %rax,0x80(%rsp)
eb2f(6): jz 0x800(%rip)
eb35(a): mov $0x768614336404564053,%rax
eb3f(8): mov $0x0,0x6c(%rsp)
eb47(3): cmp %rax,%rbp
eb4a(6): jnle 0x7e5(%rip)
eb50(5): lea 0x0(%rbp,%rbp,2),%rax
eb55(4): shl/sal $0x3,%rax
eb59(3): mov %rax,%rdi
eb5c(5): mov %rax,0x58(%rsp)
eb61(5): call 0xffff33bf(%rip)
eb66(3): test %rax,%rax
eb69(5): mov %rax,0x10(%rsp)
eb6e(6): jz 0x7c1(%rip)
eb74(5): mov 0x10(%rsp),%rax
eb79(4): sub $0x8,%rbx
eb7d(5): mov 0x40(%rsp),%r12
eb82(4): pxor %xmm0,%xmm0
eb86(5): lea 0x70(%rsp),%r14
eb8b(5): mov %rbp,0x20(%rsp)
eb90(5): mov $0x0,0x4f(%rsp)
eb95(3): mov %r15,%rbp
eb98(3): add %rbx,%rax
eb9b(5): mov %r12,0x50(%rsp)
eba0(3): add %rax,%rbx
eba3(5): mov %rax,0x30(%rsp)
eba8(5): mov 0x18(%rsp),%rax
ebad(8): movaps %xmm0,0xd0(%rsp)
ebb5(5): mov %rbx,0x38(%rsp)
ebba(2): xor %ebx,%ebx
ebbc(4): lea 0x8(%rax),%r13
ebc0(5): lea 0x6c(%rsp),%rax
ebc5(8): movaps %xmm0,0xe0(%rsp)
ebcd(5): mov %rax,0x28(%rsp)
ebd2(9): mov $0x0,0x78(%rsp)
ebdb(5): cmp $0x0,0x0(%r13)
ebe0(2): jle 0x48(%rip)
ebe2(3): xor %r15d,%r15d
ebe5(3): nop (%rax)
ebe8(4): mov 0x8(%r13),%rax
ebec(4): mov 0x0(%rax,%r15,8),%rdx
ebf0(4): mov 0x18(%rbp),%rax
ebf4(4): mov 0x0(%rax,%rdx,8),%rax
ebf8(4): cmp $0xffffffff,%rax
ebfc(2): jz 0x22(%rip)
ebfe(4): lea 0x0(%rax,%rax,2),%rdx
ec02(4): mov 0x30(%rbp),%rax
ec06(3): mov %r14,%rdi
ec09(4): lea 0x0(%rax,%rdx,8),%rsi
ec0d(5): call 0xffffd863(%rip)
ec12(2): test %eax,%eax
ec14(4): mov %eax,0x6c(%rsp)
ec18(6): jnz 0x700(%rip)
ec1e(4): add $0x1,%r15
ec22(4): cmp %r15,0x0(%r13)
ec26(2): jnle 0xffffffc2(%rip)
ec28(5): mov 0x28(%rsp),%rdi
ec2d(2): xor %ecx,%ecx
ec2f(3): mov %rbp,%rsi
ec32(3): mov %r14,%rdx
ec35(5): call 0xffffe66b(%rip)
ec3a(5): mov 0x10(%rsp),%rsi
ec3f(3): test %rax,%rax
ec42(4): mov %rax,0x0(%rsi,%rbx,8)
ec46(6): jz 0x7b2(%rip)
ec4c(4): cmp $0x0,0x68(%rax)
ec50(6): js 0x720(%rip)
ec56(5): mov 0x30(%rsp),%rdi
ec5b(5): mov 0x38(%rsp),%rsi
ec60(4): mov %rax,0x0(%rdi,%rbx,8)
ec64(5): mov 0x10(%rsp),%rax
ec69(4): mov 0x0(%rax,%rbx,8),%rax
ec6d(4): mov %rax,0x0(%rsi,%rbx,8)
ec71(8): lea 0xd0(%rsp),%rdx
ec79(2): xor %eax,%eax
ec7b(4): mov 0x0(%rdx,%rax,1),%rcx
ec7f(4): or 0x0(%r12,%rax,1),%rcx
ec83(4): mov %rcx,0x0(%rdx,%rax,1)
ec87(4): add $0x8,%rax
ec8b(4): cmp $0x20,%rax
ec8f(2): jnz 0xffffffec(%rip)
ec91(4): add $0x1,%rbx
ec95(4): add $0x18,%r13
ec99(4): add $0x20,%r12
ec9d(5): cmp 0x20(%rsp),%rbx
eca2(6): jnz 0xffffff30(%rip)
eca8(5): cmp $0x0,0x4f(%rsp)
ecad(3): mov %rbp,%r15
ecb0(5): mov 0x20(%rsp),%rbp
ecb5(5): mov %rdx,0x20(%rsp)
ecba(6): jnz 0x74f(%rip)
ecc0(5): mov $0x100,%esi
ecc5(5): mov $0x8,%edi
ecca(5): call 0xffff31f6(%rip)
eccf(3): mov %rax,%r11
ecd2(5): mov 0x8(%rsp),%rax
ecd7(3): test %r11,%r11
ecda(4): mov %r11,0x58(%rax)
ecde(6): jz 0x63f(%rip)
ece4(5): mov 0x40(%rsp),%rbx
ece9(5): mov 0x10(%rsp),%r12
ecee(3): xor %r9d,%r9d
ecf1(5): mov 0x30(%rsp),%r13
ecf6(5): mov 0x20(%rsp),%rdx
ecfb(4): add $0x20,%rbx
ecff(4): mov 0x0(%rdx,%r9,1),%rax
ed03(3): test %rax,%rax
ed06(2): jz 0x2e(%rip)
ed08(3): mov %r9,%rsi
ed0b(5): mov $0x1,%ecx
ed10(4): shl/sal $0x6,%rsi
ed14(3): add %r11,%rsi
ed17(9): nop 0x0(%rax,%rax,1)
ed20(2): test $0x1,%al
ed22(6): jnz 0x766(%rip)
ed28(3): add %rcx,%rcx
ed2b(4): add $0x8,%rsi
ed2f(3): shr $0x1,%rax
ed32(2): jnz 0xffffffee(%rip)
ed34(4): add $0x8,%r9
ed38(4): cmp $0x20,%r9
ed3c(2): jnz 0xffffffc3(%rip)
ed3e(8): test $0x4,0xd1(%rsp)
ed46(2): jz 0x3c(%rip)
ed48(2): xor %eax,%eax
ed4a(5): mov 0x50(%rsp),%rdx
ed4f(2): jmp 0xf(%rip)
ed51(4): add $0x1,%rax
ed55(4): add $0x20,%rdx
ed59(3): cmp %rbp,%rax
ed5c(2): jz 0x26(%rip)
ed5e(7): test $0x400,(%rdx)
ed65(2): jz 0xffffffec(%rip)
ed67(5): mov 0x38(%rsp),%rbx
ed6c(5): cmp $0x0,0x4f(%rsp)
ed71(4): mov 0x0(%rbx,%rax,8),%rax
ed75(4): mov %rax,0x50(%r11)
ed79(2): jz 0x9(%rip)
ed7b(7): mov %rax,0x850(%r11)
ed82(5): mov 0x10(%rsp),%rdi
ed87(5): call 0xffff2ed9(%rip)
ed8c(8): mov 0x80(%rsp),%rdi
ed94(5): call 0xffff2ecc(%rip)
ed99(5): mov 0x18(%rsp),%rax
ed9e(5): mov 0x58(%rsp),%rbx
eda3(4): lea 0x10(%rax),%rbp
eda7(3): add %rbp,%rbx
edaa(4): mov 0x0(%rbp),%rdi
edae(4): add $0x18,%rbp
edb2(5): call 0xffff2eae(%rip)
edb7(3): cmp %rbp,%rbx
edba(2): jnz 0xfffffff0(%rip)
edbc(5): mov 0x18(%rsp),%rdi
edc1(5): call 0xffff2e9f(%rip)
edc6(5): mov $0x1,%eax
edcb(2): jmp 0x27(%rip)
edcd(3): test %rbp,%rbp
edd0(8): mov $0x0,0x8(%rbx)
edd8(7): mov $0x0,(%rbx)
eddf(6): jnz 0x331(%rip)
ede5(5): mov 0x18(%rsp),%rdi
edea(5): call 0xffff2e76(%rip)
edef(1): nop 
edf0(2): xor %eax,%eax
edf2(8): mov 0xf8(%rsp),%rbx
edfa(9): xor $0x28,%rbx
ee03(6): jnz 0x751(%rip)
ee09(7): add $0x108,%rsp
ee10(1): pop %rbx
ee11(1): pop %rbp
ee12(2): pop %r12
ee14(2): pop %r13
ee16(2): pop %r14
ee18(2): pop %r15
ee1a(1): ret near (%rsp)
ee1b(5): nop 0x0(%rax,%rax,1)
ee20(5): movzx 0x0(%r13),%ecx
ee25(8): lea 0x90(%rsp),%r12
ee2d(5): mov $0x1,%edi
ee32(3): mov %rcx,%rdx
ee35(3): and $0x3f,%ecx
ee38(4): shr $0x3,%rdx
ee3c(3): shl/sal %cl,%rdi
ee3f(3): and $0x18,%edx
ee42(4): or %rdi,0x0(%r12,%rdx,1)
ee46(3): test %ax,%ax
ee49(6): jz 0xc7(%rip)
ee4f(2): test $0x20,%al
ee51(6): jnz 0x36f(%rip)
ee57(2): test $0x80,%al
ee59(6): jnz 0x29b(%rip)
ee5f(2): test $0x4,%al
ee61(2): jz 0x54(%rip)
ee63(4): cmp $0x1,%r14d
ee67(6): jz 0x3de(%rip)
ee6d(5): mov 0x30(%rsp),%r8
ee72(8): cmp $0x1,0xb4(%r8)
ee7a(6): jle 0x458(%rip)
ee80(4): mov 0x78(%r8),%rdi
ee84(2): xor %esi,%esi
ee86(2): xor %ecx,%ecx
ee88(4): mov 0x0(%rdi,%rcx,8),%rdx
ee8c(3): not %rdx
ee8f(8): or 0xb8(%r8,%rcx,8),%rdx
ee97(4): and 0x0(%r12,%rcx,8),%rdx
ee9b(4): mov %rdx,0x0(%r12,%rcx,8)
ee9f(4): add $0x1,%rcx
eea3(3): or %rdx,%rsi
eea6(4): cmp $0x4,%rcx
eeaa(2): jnz 0xffffffde(%rip)
eeac(3): test %rsi,%rsi
eeaf(6): jz 0xfffffc30(%rip)
eeb5(2): test $0x8,%al
eeb7(2): jz 0x59(%rip)
eeb9(4): cmp $0x1,%r14d
eebd(6): jz 0x334(%rip)
eec3(5): mov 0x30(%rsp),%rdi
eec8(7): cmp $0x1,0xb4(%rdi)
eecf(6): jle 0x33f(%rip)
eed5(4): mov 0x78(%rdi),%rsi
eed9(2): xor %ecx,%ecx
eedb(2): xor %edx,%edx
eedd(8): mov 0xb8(%rdi,%rdx,8),%rax
eee5(4): and 0x0(%rsi,%rdx,8),%rax
eee9(3): not %rax
eeec(4): and 0x0(%r12,%rdx,8),%rax
eef0(4): mov %rax,0x0(%r12,%rdx,8)
eef4(4): add $0x1,%rdx
eef8(3): or %rax,%rcx
eefb(4): cmp $0x4,%rdx
eeff(2): jnz 0xffffffde(%rip)
ef01(3): test %rcx,%rcx
ef04(6): jz 0xfffffbdb(%rip)
ef0a(6): nop 0x0(%rax,%rax,1)
ef10(2): xor %ebx,%ebx
ef12(3): test %rbp,%rbp
ef15(6): jle 0x166(%rip)
ef1b(5): mov %r13,0x28(%rsp)
ef20(3): mov %r15,%r13
ef23(5): nop 0x0(%rax,%rax,1)
ef28(3): mov %rbx,%r10
ef2b(4): shl/sal $0x5,%r10
ef2f(4): cmp $0x1,%r14d
ef33(2): jnz 0x25(%rip)
ef35(5): mov 0x28(%rsp),%rax
ef3a(3): movzx (%rax),%edx
ef3d(3): mov %rdx,%rax
ef40(4): shr $0x3,%rax
ef44(3): and $0x18,%eax
ef47(3): add %r13,%rax
ef4a(4): mov 0x0(%rax,%r10,1),%rax
ef4e(4): bt %rdx,%rax
ef52(6): jnb 0x119(%rip)
ef58(5): lea 0x0(%r13,%r10,1),%rdi
ef5d(8): lea 0xb0(%rsp),%rsi
ef65(2): xor %ecx,%ecx
ef67(2): xor %eax,%eax
ef69(4): mov 0x0(%r12,%rax,8),%rdx
ef6d(4): and 0x0(%rdi,%rax,8),%rdx
ef71(4): mov %rdx,0x0(%rsi,%rax,8)
ef75(4): add $0x1,%rax
ef79(3): or %rdx,%rcx
ef7c(4): cmp $0x4,%rax
ef80(2): jnz 0xffffffe9(%rip)
ef82(3): test %rcx,%rcx
ef85(6): jz 0xe6(%rip)
ef8b(8): lea 0xd0(%rsp),%r11
ef93(3): xor %r15d,%r15d
ef96(3): xor %r9d,%r9d
ef99(2): xor %ecx,%ecx
ef9b(4): mov 0x0(%r12,%rcx,8),%rsi
ef9f(4): mov 0x0(%rdi,%rcx,8),%rax
efa3(3): mov %rsi,%rdx
efa6(3): not %rdx
efa9(3): and %rax,%rdx
efac(3): not %rax
efaf(3): and %rsi,%rax
efb2(4): mov %rdx,0x0(%r11,%rcx,8)
efb6(3): or %rdx,%r9
efb9(4): mov %rax,0x0(%r12,%rcx,8)
efbd(4): add $0x1,%rcx
efc1(3): or %rax,%r15
efc4(4): cmp $0x4,%rcx
efc8(2): jnz 0xffffffd3(%rip)
efca(5): mov 0x18(%rsp),%rdi
efcf(4): lea 0x0(%rbx,%rbx,2),%rax
efd3(3): test %r9,%r9
efd6(4): lea 0x0(%rdi,%rax,8),%rdx
efda(2): jz 0x6a(%rip)
efdc(3): mov %rbp,%rax
efdf(9): movdqa 0xd0(%rsp),%xmm0
efe8(4): shl/sal $0x5,%rax
efec(3): mov %rdx,%rsi
efef(5): mov %rdx,0x38(%rsp)
eff4(3): add %r13,%rax
eff7(3): movups %xmm0,(%rax)
effa(9): movdqa 0xe0(%rsp),%xmm0
f003(4): movups %xmm0,0x10(%rax)
f007(5): lea 0x0(%rbp,%rbp,2),%rax
f00c(4): lea 0x0(%rdi,%rax,8),%rdi
f010(9): movdqa 0xb0(%rsp),%xmm0
f019(6): movups %xmm0,0x0(%r13,%r10,1)
f01f(9): movdqa 0xc0(%rsp),%xmm0
f028(6): movups %xmm0,0x10(%r13,%r10,1)
f02e(5): call 0xffffe082(%rip)
f033(2): test %eax,%eax
f035(6): jnz 0xdb(%rip)
f03b(5): mov 0x38(%rsp),%rdx
f040(4): add $0x1,%rbp
f044(5): mov 0x8(%rsp),%rax
f049(5): mov 0x20(%rsp),%rsi
f04e(3): mov %rdx,%rdi
f051(4): mov 0x18(%rax),%rax
f055(4): mov 0x0(%rax,%rsi,1),%rsi
f059(5): call 0xffffb9b7(%rip)
f05e(2): test %al,%al
f060(6): jz 0xb0(%rip)
f066(3): test %r15,%r15
f069(2): jz 0xf(%rip)
f06b(4): add $0x1,%rbx
f06f(3): cmp %rbp,%rbx
f072(6): jl 0xfffffeb6(%rip)
f078(3): mov %r13,%r15
f07b(3): cmp %rbx,%rbp
f07e(6): jnz 0xfffffa61(%rip)
f084(3): mov %rbp,%rax
f087(9): movdqa 0x90(%rsp),%xmm0
f090(4): shl/sal $0x5,%rax
f094(5): mov 0x20(%rsp),%rbx
f099(5): mov $0x8,%edi
f09e(3): add %r15,%rax
f0a1(3): movups %xmm0,(%rax)
f0a4(9): movdqa 0xa0(%rsp),%xmm0
f0ad(4): movups %xmm0,0x10(%rax)
f0b1(5): mov 0x8(%rsp),%rax
f0b6(4): mov 0x18(%rax),%rax
f0ba(4): mov 0x0(%rax,%rbx,1),%r13
f0be(5): mov 0x18(%rsp),%rbx
f0c3(5): lea 0x0(%rbp,%rbp,2),%rax
f0c8(4): lea 0x0(%rbx,%rax,8),%rbx
f0cc(7): mov $0x1,(%rbx)
f0d3(8): mov $0x1,0x8(%rbx)
f0db(5): call 0xffff2e45(%rip)
f0e0(3): test %rax,%rax
f0e3(4): mov %rax,0x10(%rbx)
f0e7(6): jz 0xfffffce6(%rip)
f0ed(3): mov %r13,(%rax)
f0f0(4): add $0x1,%rbp
f0f4(4): pxor %xmm0,%xmm0
f0f8(5): movaps %xmm0,(%r12)
f0fd(6): movaps %xmm0,0x10(%r12)
f103(5): jmp 0xfffff9dc(%rip)
f108(8): nop 0x0(%rax,%rax,1)
f110(5): mov 0x18(%rsp),%rax
f115(4): lea 0x10(%rax),%rbx
f119(5): lea 0x0(%rbp,%rbp,2),%rax
f11e(4): lea 0x0(%rbx,%rax,8),%rbp
f122(6): nop 0x0(%rax,%rax,1)
f128(3): mov (%rbx),%rdi
f12b(4): add $0x18,%rbx
f12f(5): call 0xffff2b31(%rip)
f134(3): cmp %rbx,%rbp
f137(2): jnz 0xfffffff1(%rip)
f139(5): mov 0x18(%rsp),%rdi
f13e(5): call 0xffff2b22(%rip)
f143(5): jmp 0xfffffcad(%rip)
f148(8): nop 0x0(%rax,%rax,1)
f150(5): mov 0x30(%rsp),%rsi
f155(7): cmp $0x1,0xb4(%rsi)
f15c(6): jle 0x109(%rip)
f162(4): mov 0x78(%rsi),%rsi
f166(8): lea 0x90(%rsp),%r12
f16e(2): xor %edx,%edx
f170(4): mov 0x0(%r12,%rdx,1),%rcx
f174(4): or 0x0(%rsi,%rdx,1),%rcx
f178(4): mov %rcx,0x0(%r12,%rdx,1)
f17c(4): add $0x8,%rdx
f180(4): cmp $0x20,%rdx
f184(2): jnz 0xffffffec(%rip)
f186(5): mov 0x30(%rsp),%rbx
f18b(7): mov 0xd8(%rbx),%rdx
f192(3): test $0x40,%dl
f195(2): jnz 0xe(%rip)
f197(c): and $0xfffffbff,0x90(%rsp)
f1a3(6): and $0x80,%edx
f1a9(6): jz 0xfffffc9d(%rip)
f1af(9): and $0xfffffffe,0x90(%rsp)
f1b8(5): jmp 0xfffffc8e(%rip)
f1bd(3): nop (%rax)
f1c0(8): mov 0x90(%rsp),%rdx
f1c8(4): pxor %xmm0,%xmm0
f1cc(3): and $0x4,%dh
f1cf(5): movaps %xmm0,(%r12)
f1d4(6): movaps %xmm0,0x10(%r12)
f1da(6): jz 0xfffff905(%rip)
f1e0(c): mov $0x400,0x90(%rsp)
f1ec(5): jmp 0xfffffc6b(%rip)
f1f1(5): test $0x40,0xa(%r13)
f1f6(6): jnz 0xfffffefe(%rip)
f1fc(5): mov 0x30(%rsp),%rdi
f201(7): cmp $0x1,0xb4(%rdi)
f208(6): jnle 0xfffffccd(%rip)
f20e(5): mov 0x30(%rsp),%rsi
f213(2): xor %ecx,%ecx
f215(2): xor %edx,%edx
f217(8): mov 0xb8(%rsi,%rdx,8),%rax
f21f(3): not %rax
f222(4): and 0x0(%r12,%rdx,8),%rax
f226(4): mov %rax,0x0(%r12,%rdx,8)
f22a(4): add $0x1,%rdx
f22e(3): or %rax,%rcx
f231(4): cmp $0x4,%rdx
f235(2): jnz 0xffffffe2(%rip)
f237(3): test %rcx,%rcx
f23a(6): jnz 0xfffffcd6(%rip)
f240(5): jmp 0xfffff89f(%rip)
f245(5): test $0x40,0xa(%r13)
f24a(6): jz 0xfffffeaa(%rip)
f250(5): mov 0x30(%rsp),%r8
f255(8): cmp $0x1,0xb4(%r8)
f25d(6): jnle 0xfffffc23(%rip)
f263(2): jmp 0x6f(%rip)
f265(4): pcmpeqd %xmm0,%xmm0
f269(8): lea 0x90(%rsp),%r12
f271(8): movaps %xmm0,0x90(%rsp)
f279(8): movaps %xmm0,0xa0(%rsp)
f281(5): jmp 0xffffff05(%rip)
f286(a): nop 0x0(%rax,%rax,1)
f290(4): mov 0x0(%r13),%rsi
f294(8): lea 0x90(%rsp),%r12
f29c(2): xor %edx,%edx
f29e(4): mov 0x0(%r12,%rdx,1),%rcx
f2a2(4): or 0x0(%rsi,%rdx,1),%rcx
f2a6(4): mov %rcx,0x0(%r12,%rdx,1)
f2aa(4): add $0x8,%rdx
f2ae(4): cmp $0x20,%rdx
f2b2(2): jnz 0xffffffec(%rip)
f2b4(5): jmp 0xfffffb92(%rip)
f2b9(4): pcmpeqd %xmm0,%xmm0
f2bd(8): lea 0x90(%rsp),%r12
f2c5(8): movaps %xmm0,0x90(%rsp)
f2cd(5): jmp 0xfffffeb9(%rip)
f2d2(5): mov 0x30(%rsp),%rdi
f2d7(2): xor %esi,%esi
f2d9(2): xor %edx,%edx
f2db(4): mov 0x0(%r12,%rdx,8),%rcx
f2df(8): and 0xb8(%rdi,%rdx,8),%rcx
f2e7(4): mov %rcx,0x0(%r12,%rdx,8)
f2eb(4): add $0x1,%rdx
f2ef(3): or %rcx,%rsi
f2f2(4): cmp $0x4,%rdx
f2f6(2): jnz 0xffffffe5(%rip)
f2f8(3): test %rsi,%rsi
f2fb(6): jnz 0xfffffbba(%rip)
f301(5): jmp 0xfffff7de(%rip)
f306(4): mov 0x6c(%rsp),%edx
f30a(2): test %edx,%edx
f30c(6): jz 0x8b(%rip)
f312(6): nop 0x0(%rax,%rax,1)
f318(5): mov 0x20(%rsp),%rbp
f31d(5): mov 0x10(%rsp),%rdi
f322(5): call 0xffff293e(%rip)
f327(8): mov 0x80(%rsp),%r12
f32f(3): mov %r12,%rdi
f332(5): call 0xffff292e(%rip)
f337(5): mov 0x18(%rsp),%rax
f33c(4): lea 0x10(%rax),%rbx
f340(5): lea 0x0(%rbp,%rbp,2),%rax
f345(4): lea 0x0(%rbx,%rax,8),%rbp
f349(7): nop 0x0(%rax)
f350(3): mov (%rbx),%rdi
f353(4): add $0x18,%rbx
f357(5): call 0xffff2909(%rip)
f35c(3): cmp %rbx,%rbp
f35f(2): jnz 0xfffffff1(%rip)
f361(5): mov 0x18(%rsp),%rdi
f366(5): call 0xffff28fa(%rip)
f36b(5): jmp 0xfffffa85(%rip)
f370(5): mov 0x28(%rsp),%rdi
f375(5): mov $0x1,%ecx
f37a(3): mov %r14,%rdx
f37d(3): mov %rbp,%rsi
f380(5): call 0xffffdf20(%rip)
f385(5): mov 0x30(%rsp),%rdi
f38a(3): test %rax,%rax
f38d(4): mov %rax,0x0(%rdi,%rbx,8)
f391(6): jz 0xffffff75(%rip)
f397(5): mov 0x10(%rsp),%rdi
f39c(4): cmp 0x0(%rdi,%rbx,8),%rax
f3a0(2): jz 0x1b(%rip)
f3a2(5): movzx 0x4f(%rsp),%edi
f3a7(7): cmp $0x2,0xb4(%rbp)
f3ae(5): mov $0x1,%eax
f3b3(3): cmovnl %eax,%edi
f3b6(5): mov %dil,0x4f(%rsp)
f3bb(5): mov 0x28(%rsp),%rdi
f3c0(3): mov %rbp,%rsi
f3c3(5): mov $0x2,%ecx
f3c8(3): mov %r14,%rdx
f3cb(5): call 0xffffded5(%rip)
f3d0(5): mov 0x38(%rsp),%rsi
f3d5(3): test %rax,%rax
f3d8(4): mov %rax,0x0(%rsi,%rbx,8)
f3dc(6): jnz 0xfffff895(%rip)
f3e2(4): mov 0x6c(%rsp),%eax
f3e6(2): test %eax,%eax
f3e8(6): jz 0xfffff889(%rip)
f3ee(5): jmp 0xffffff2a(%rip)
f3f3(5): nop 0x0(%rax,%rax,1)
f3f8(4): mov 0x6c(%rsp),%ecx
f3fc(2): test %ecx,%ecx
f3fe(6): jz 0xfffff84e(%rip)
f404(5): jmp 0xffffff14(%rip)
f409(5): mov $0x200,%esi
f40e(5): mov $0x8,%edi
f413(5): call 0xffff2aad(%rip)
f418(3): mov %rax,%r11
f41b(5): mov 0x8(%rsp),%rax
f420(3): test %r11,%r11
f423(4): mov %r11,0x60(%rax)
f427(6): jz 0xfffffef6(%rip)
f42d(5): mov 0x40(%rsp),%r13
f432(5): mov 0x10(%rsp),%r10
f437(3): mov %r11,%r12
f43a(5): mov 0x30(%rsp),%r14
f43f(5): mov 0x20(%rsp),%rdx
f444(2): xor %ebx,%ebx
f446(4): add $0x20,%r13
f44a(4): mov 0x0(%rdx,%rbx,1),%rax
f44e(3): test %rax,%rax
f451(2): jz 0x1e(%rip)
f453(3): mov %r12,%rsi
f456(5): mov $0x1,%ecx
f45b(2): test $0x1,%al
f45d(6): jnz 0xaf(%rip)
f463(3): add %rcx,%rcx
f466(4): add $0x8,%rsi
f46a(3): shr $0x1,%rax
f46d(2): jnz 0xffffffee(%rip)
f46f(4): add $0x8,%rbx
f473(7): add $0x200,%r12
f47a(4): cmp $0x20,%rbx
f47e(2): jnz 0xffffffcc(%rip)
f480(5): jmp 0xfffff8be(%rip)
f485(3): nop (%rax)
f488(5): mov 0x18(%rsp),%rdi
f48d(8): test %rcx,0x1800(%rdi,%r9,1)
f495(2): jnz 0x72(%rip)
f497(4): lea 0x0(%rbx,%r9,1),%rdi
f49b(3): xor %r8d,%r8d
f49e(2): nop 
f4a0(3): mov (%rdi),%r10
f4a3(4): add $0x1,%r8
f4a7(4): add $0x20,%rdi
f4ab(3): and %rcx,%r10
f4ae(3): test %r10,%r10
f4b1(2): jz 0xffffffef(%rip)
f4b3(4): shl/sal $0x3,%r8
f4b7(8): test %rcx,0xb8(%r15,%r9,1)
f4bf(2): jz 0xf(%rip)
f4c1(5): mov 0x0(%r13,%r8,1),%rdi
f4c6(3): mov %rdi,(%rsi)
f4c9(5): jmp 0xfffff85f(%rip)
f4ce(4): mov 0x0(%r12,%r8,1),%rdi
f4d2(3): mov %rdi,(%rsi)
f4d5(5): jmp 0xfffff853(%rip)
f4da(5): mov 0x18(%rsp),%rdi
f4df(5): call 0xffff2781(%rip)
f4e4(5): mov $0x100,%esi
f4e9(5): mov $0x8,%edi
f4ee(5): call 0xffff29d2(%rip)
f4f3(5): mov 0x8(%rsp),%rbx
f4f8(3): test %rax,%rax
f4fb(4): mov %rax,0x58(%rbx)
f4ff(3): setnz %al
f502(5): jmp 0xfffff8f0(%rip)
f507(3): xor %r8d,%r8d
f50a(2): jmp 0xffffffad(%rip)
f50c(5): mov 0x18(%rsp),%rdi
f511(8): test %rcx,0x1800(%rdi,%rbx,1)
f519(2): jnz 0x37(%rip)
f51b(5): lea 0x0(%r13,%rbx,1),%r9
f520(3): xor %r8d,%r8d
f523(3): mov (%r9),%r15
f526(4): add $0x1,%r8
f52a(4): add $0x20,%r9
f52e(3): mov %r8,%rdi
f531(3): and %rcx,%r15
f534(3): test %r15,%r15
f537(2): jz 0xffffffec(%rip)
f539(4): mov 0x0(%r10,%rdi,8),%r8
f53d(3): mov %r8,(%rsi)
f540(4): mov 0x0(%r14,%rdi,8),%rdi
f544(7): mov %rdi,0x800(%rsi)
f54b(5): jmp 0xffffff18(%rip)
f550(2): xor %edi,%edi
f552(2): jmp 0xffffffe7(%rip)
f554(5): call 0xffff285c(%rip)
f559(5): mov 0x18(%rsp),%rdi
f55e(5): call 0xffff2702(%rip)
f563(3): test %rbp,%rbp
f566(6): jnz 0xfffff88a(%rip)
f56c(5): jmp 0xffffff78(%rip)

"calc_first" :
f580(4): cmp $0x10,0x30(%rsi)
f584(2): jz 0x64(%rip)
f586(1): push %rbp
f587(1): push %rbx
f588(3): mov %rsi,%rbx
f58b(3): mov %rdi,%rbp
f58e(4): sub $0x8,%rsp
f592(4): mov %rsi,0x18(%rbx)
f596(4): mov 0x30(%rbx),%rdx
f59a(4): mov 0x28(%rsi),%rsi
f59e(5): call 0xffffc152(%rip)
f5a3(4): cmp $0xffffffff,%rax
f5a7(3): mov %rax,%rdx
f5aa(4): mov %rax,0x38(%rbx)
f5ae(2): jz 0x52(%rip)
f5b0(2): xor %eax,%eax
f5b2(4): cmp $0xc,0x30(%rbx)
f5b6(2): jnz 0x26(%rip)
f5b8(3): mov 0x28(%rbx),%ecx
f5bb(4): shl/sal $0x4,%rdx
f5bf(4): add 0x0(%rbp),%rdx
f5c3(6): and $0x3ff,%ecx
f5c9(3): shl/sal $0x8,%ecx
f5cc(2): mov %ecx,%esi
f5ce(3): mov 0x8(%rdx),%ecx
f5d1(6): and $0xfffc00ff,%ecx
f5d7(2): or %esi,%ecx
f5d9(3): mov %ecx,0x8(%rdx)
f5dc(4): add $0x8,%rsp
f5e0(1): pop %rbx
f5e1(1): pop %rbp
f5e2(1): ret near (%rsp)
f5e3(5): nop 0x0(%rax,%rax,1)
f5e8(4): mov 0x8(%rsi),%rax
f5ec(4): mov 0x18(%rax),%rdx
f5f0(4): mov 0x38(%rax),%rax
f5f4(4): mov %rdx,0x18(%rsi)
f5f8(4): mov %rax,0x38(%rsi)
f5fc(2): xor %eax,%eax
f5fe(1): ret near (%rsp)
f5ff(1): nop 
f600(5): mov $0xc,%eax
f605(2): jmp 0xffffffd7(%rip)

"free_fail_stack_return.part.24" :
f610(2): push %r12
f612(1): push %rbp
f613(3): mov %rdi,%rbp
f616(1): push %rbx
f617(4): cmp $0x0,(%rdi)
f61b(2): jle 0x37(%rip)
f61d(2): xor %ebx,%ebx
f61f(3): xor %r12d,%r12d
f622(6): nop 0x0(%rax,%rax,1)
f628(4): mov 0x10(%rbp),%rax
f62c(4): add $0x1,%r12
f630(5): mov 0x28(%rax,%rbx,1),%rdi
f635(5): call 0xffff262b(%rip)
f63a(4): mov 0x10(%rbp),%rax
f63e(5): mov 0x10(%rax,%rbx,1),%rdi
f643(4): add $0x30,%rbx
f647(5): call 0xffff2619(%rip)
f64c(4): cmp 0x0(%rbp),%r12
f650(2): jl 0xffffffd8(%rip)
f652(1): pop %rbx
f653(4): mov 0x10(%rbp),%rdi
f657(1): pop %rbp
f658(2): pop %r12
f65a(5): jmp 0xffff2606(%rip)

"pop_fail_stack.isra.25" :
f660(2): push %r12
f662(1): push %rbp
f663(1): push %rbx
f664(3): mov (%rdi),%rax
f667(4): sub $0x1,%rax
f66b(3): test %rax,%rax
f66e(3): mov %rax,(%rdi)
f671(2): js 0x64(%rip)
f673(4): lea 0x0(%rax,%rax,2),%rbx
f677(3): mov (%rsi),%rax
f67a(3): mov %rsi,%r12
f67d(4): shl/sal $0x4,%rcx
f681(3): mov %r9,%rbp
f684(3): mov %r8,%rdi
f687(4): shl/sal $0x4,%rbx
f68b(3): add %rbx,%rax
f68e(3): mov (%rax),%rsi
f691(3): mov %rsi,(%rdx)
f694(4): mov 0x10(%rax),%rsi
f698(3): mov %rcx,%rdx
f69b(5): call 0xffff2845(%rip)
f6a0(4): mov 0x10(%rbp),%rdi
f6a4(5): call 0xffff25bc(%rip)
f6a9(4): mov (%r12),%rax
f6ad(5): mov 0x10(%rax,%rbx,1),%rdi
f6b2(5): call 0xffff25ae(%rip)
f6b7(4): add (%r12),%rbx
f6bb(5): movdqu 0x18(%rbx),%xmm0
f6c0(4): movaps %xmm0,0x0(%rbp)
f6c4(4): mov 0x28(%rbx),%rax
f6c8(4): mov %rax,0x10(%rbp)
f6cc(4): mov 0x8(%rbx),%rax
f6d0(1): pop %rbx
f6d1(1): pop %rbp
f6d2(2): pop %r12
f6d4(1): ret near (%rsp)
f6d5(7): lea 0xd5c4(%rip),%rcx
f6dc(7): lea 0xcfed(%rip),%rsi
f6e3(7): lea 0xd04e(%rip),%rdi
f6ea(5): mov $0x555,%edx
f6ef(5): call 0xffff2741(%rip)

"build_equiv_class.isra.27" :
f700(1): push %rbp
f701(1): push %rbx
f702(3): mov %rdi,%rbp
f705(3): mov %rsi,%rdi
f708(3): mov %rsi,%rbx
f70b(4): sub $0x8,%rsp
f70f(5): call 0xffff2691(%rip)
f714(4): cmp $0x1,%rax
f718(2): jnz 0x28(%rip)
f71a(3): movzx (%rbx),%ecx
f71d(3): mov %rcx,%rdx
f720(3): and $0x3f,%ecx
f723(4): shr $0x3,%rdx
f727(3): shl/sal %cl,%rax
f72a(3): and $0x18,%edx
f72d(5): or %rax,0x0(%rbp,%rdx,1)
f732(4): add $0x8,%rsp
f736(2): xor %eax,%eax
f738(1): pop %rbx
f739(1): pop %rbp
f73a(1): ret near (%rsp)
f73b(5): nop 0x0(%rax,%rax,1)
f740(4): add $0x8,%rsp
f744(5): mov $0x3,%eax
f749(1): pop %rbx
f74a(1): pop %rbp
f74b(1): ret near (%rsp)

"build_charclass.isra.29" :
f750(2): push %r14
f752(2): push %r13
f754(3): mov %rcx,%r13
f757(2): push %r12
f759(1): push %rbp
f75a(3): mov %r9,%r12
f75d(1): push %rbx
f75e(3): mov %rdi,%rbp
f761(3): mov %rsi,%rbx
f764(4): sub $0x10,%rsp
f768(9): test $0x400000,0x40(%rsp)
f771(2): jz 0x27(%rip)
f773(7): lea 0xcfcd(%rip),%rdi
f77a(5): mov $0x6,%ecx
f77f(3): mov %r9,%rsi
f782(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
f784(3): setnbe %al
f787(2): sbb $0x0,%al
f789(2): test %al,%al
f78b(6): jnz 0xfb(%rip)
f791(7): lea 0xcfa9(%rip),%r12
f798(4): mov 0x0(%r13),%rcx
f79c(3): cmp %rcx,(%r8)
f79f(3): mov (%rdx),%rax
f7a2(6): jz 0x117(%rip)
f7a8(4): lea 0x1(%rcx),%rdx
f7ac(3): mov %r12,%rdi
f7af(4): mov %rdx,0x0(%r13)
f7b3(4): lea 0x0(%rax,%rcx,8),%r13
f7b7(5): call 0xffff26e9(%rip)
f7bc(7): lea 0xcf90(%rip),%rdi
f7c3(4): mov %rax,0x0(%r13)
f7c7(5): mov $0x6,%ecx
f7cc(3): mov %r12,%rsi
f7cf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
f7d1(3): setnbe %al
f7d4(2): sbb $0x0,%al
f7d6(2): test %al,%al
f7d8(2): jz 0x70(%rip)
f7da(7): lea 0xcf78(%rip),%rdi
f7e1(5): mov $0x6,%ecx
f7e6(3): mov %r12,%rsi
f7e9(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
f7eb(3): setnbe %al
f7ee(2): sbb $0x0,%al
f7f0(2): test %al,%al
f7f2(6): jnz 0x106(%rip)
f7f8(5): call 0xffff28e8(%rip)
f7fd(2): xor %ecx,%ecx
f7ff(3): test %rbp,%rbp
f802(3): mov (%rax),%rdx
f805(5): mov $0x1,%edi
f80a(6): jnz 0x2c0(%rip)
f810(4): test $0x2,0x0(%rdx,%rcx,2)
f814(2): jz 0x13(%rip)
f816(3): mov %rcx,%rax
f819(3): mov %rdi,%rsi
f81c(4): sar $0x6,%rax
f820(3): shl/sal %cl,%rsi
f823(4): or %rsi,0x0(%rbx,%rax,8)
f827(4): add $0x1,%rcx
f82b(7): cmp $0x100,%rcx
f832(2): jnz 0xffffffde(%rip)
f834(2): xor %eax,%eax
f836(4): add $0x10,%rsp
f83a(1): pop %rbx
f83b(1): pop %rbp
f83c(2): pop %r12
f83e(2): pop %r13
f840(2): pop %r14
f842(1): ret near (%rsp)
f843(5): nop 0x0(%rax,%rax,1)
f848(5): call 0xffff2898(%rip)
f84d(2): xor %ecx,%ecx
f84f(3): test %rbp,%rbp
f852(3): mov (%rax),%rdx
f855(5): mov $0x1,%edi
f85a(6): jnz 0x1f0(%rip)
f860(4): test $0x8,0x0(%rdx,%rcx,2)
f864(2): jz 0x13(%rip)
f866(3): mov %rcx,%rax
f869(3): mov %rdi,%rsi
f86c(4): sar $0x6,%rax
f870(3): shl/sal %cl,%rsi
f873(4): or %rsi,0x0(%rbx,%rax,8)
f877(4): add $0x1,%rcx
f87b(7): cmp $0x100,%rcx
f882(2): jnz 0xffffffde(%rip)
f884(2): jmp 0xffffffb0(%rip)
f886(7): lea 0xcec0(%rip),%rdi
f88d(5): mov $0x6,%ecx
f892(3): mov %r9,%rsi
f895(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
f897(4): mov 0x0(%r13),%rcx
f89b(3): setnbe %al
f89e(2): sbb $0x0,%al
f8a0(2): test %al,%al
f8a2(7): lea 0xce98(%rip),%rax
f8a9(4): cmove %rax,%r12
f8ad(3): cmp %rcx,(%r8)
f8b0(3): mov (%rdx),%rax
f8b3(6): jnz 0xfffffef5(%rip)
f8b9(5): lea 0x1(%rcx,%rcx,1),%r14
f8be(3): mov %rax,%rdi
f8c1(5): mov %r8,0x8(%rsp)
f8c6(4): mov %rdx,(%rsp)
f8ca(8): lea 0x0(,%r14,8),%rsi
f8d2(5): call 0xffff26be(%rip)
f8d7(3): test %rax,%rax
f8da(6): jz 0x31e(%rip)
f8e0(4): mov (%rsp),%rdx
f8e4(5): mov 0x8(%rsp),%r8
f8e9(3): mov %rax,(%rdx)
f8ec(3): mov %r14,(%r8)
f8ef(4): mov 0x0(%r13),%rcx
f8f3(5): jmp 0xfffffeb5(%rip)
f8f8(7): lea 0xce4e(%rip),%rdi
f8ff(5): mov $0x6,%ecx
f904(3): mov %r12,%rsi
f907(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
f909(3): setnbe %al
f90c(2): sbb $0x0,%al
f90e(2): test %al,%al
f910(2): jz 0x6a(%rip)
f912(7): lea 0xce46(%rip),%rdi
f919(5): mov $0x6,%ecx
f91e(3): mov %r12,%rsi
f921(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
f923(3): setnbe %al
f926(2): sbb $0x0,%al
f928(2): test %al,%al
f92a(6): jnz 0x98(%rip)
f930(5): call 0xffff27b0(%rip)
f935(2): xor %ecx,%ecx
f937(3): test %rbp,%rbp
f93a(3): mov (%rax),%rdx
f93d(5): mov $0x1,%edi
f942(6): jnz 0x35c(%rip)
f948(8): nop 0x0(%rax,%rax,1)
f950(5): test $0x20,0x1(%rdx,%rcx,2)
f955(2): jz 0x13(%rip)
f957(3): mov %rcx,%rax
f95a(3): mov %rdi,%rsi
f95d(4): sar $0x6,%rax
f961(3): shl/sal %cl,%rsi
f964(4): or %rsi,0x0(%rbx,%rax,8)
f968(4): add $0x1,%rcx
f96c(7): cmp $0x100,%rcx
f973(2): jnz 0xffffffdd(%rip)
f975(5): jmp 0xfffffebf(%rip)
f97a(5): call 0xffff2766(%rip)
f97f(2): xor %ecx,%ecx
f981(3): test %rbp,%rbp
f984(3): mov (%rax),%rdx
f987(5): mov $0x1,%edi
f98c(6): jnz 0x1d6(%rip)
f992(6): nop 0x0(%rax,%rax,1)
f998(5): test $0x2,0x1(%rdx,%rcx,2)
f99d(2): jz 0x13(%rip)
f99f(3): mov %rcx,%rax
f9a2(3): mov %rdi,%rsi
f9a5(4): sar $0x6,%rax
f9a9(3): shl/sal %cl,%rsi
f9ac(4): or %rsi,0x0(%rbx,%rax,8)
f9b0(4): add $0x1,%rcx
f9b4(7): cmp $0x100,%rcx
f9bb(2): jnz 0xffffffdd(%rip)
f9bd(5): jmp 0xfffffe77(%rip)
f9c2(7): lea 0xcd78(%rip),%rdi
f9c9(5): mov $0x6,%ecx
f9ce(3): mov %r12,%rsi
f9d1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
f9d3(3): setnbe %al
f9d6(2): sbb $0x0,%al
f9d8(2): test %al,%al
f9da(6): jz 0xa9(%rip)
f9e0(7): lea 0xcd97(%rip),%rdi
f9e7(5): mov $0x6,%ecx
f9ec(3): mov %r12,%rsi
f9ef(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
f9f1(3): setnbe %al
f9f4(2): sbb $0x0,%al
f9f6(2): test %al,%al
f9f8(6): jnz 0x10b(%rip)
f9fe(5): call 0xffff26e2(%rip)
fa03(2): xor %ecx,%ecx
fa05(3): test %rbp,%rbp
fa08(3): mov (%rax),%rdx
fa0b(5): mov $0x1,%edi
fa10(6): jnz 0x4aa(%rip)
fa16(a): nop 0x0(%rax,%rax,1)
fa20(5): test $0x8,0x1(%rdx,%rcx,2)
fa25(2): jz 0x13(%rip)
fa27(3): mov %rcx,%rax
fa2a(3): mov %rdi,%rsi
fa2d(4): sar $0x6,%rax
fa31(3): shl/sal %cl,%rsi
fa34(4): or %rsi,0x0(%rbx,%rax,8)
fa38(4): add $0x1,%rcx
fa3c(7): cmp $0x100,%rcx
fa43(2): jnz 0xffffffdd(%rip)
fa45(5): jmp 0xfffffdef(%rip)
fa4a(2): xor %eax,%eax
fa4c(4): nop 0x0(%rax)
fa50(4): test $0x8,0x0(%rdx,%rax,2)
fa54(2): jz 0x1e(%rip)
fa56(5): movzx 0x0(%rbp,%rax,1),%ecx
fa5b(3): mov %rdi,%r10
fa5e(3): mov %rcx,%rsi
fa61(3): and $0x3f,%ecx
fa64(4): shr $0x3,%rsi
fa68(3): shl/sal %cl,%r10
fa6b(3): and $0x18,%esi
fa6e(4): or %r10,0x0(%rbx,%rsi,1)
fa72(4): add $0x1,%rax
fa76(6): cmp $0x100,%rax
fa7c(2): jnz 0xffffffd4(%rip)
fa7e(5): jmp 0xfffffdb6(%rip)
fa83(5): call 0xffff265d(%rip)
fa88(2): xor %ecx,%ecx
fa8a(3): test %rbp,%rbp
fa8d(3): mov (%rax),%rdx
fa90(5): mov $0x1,%edi
fa95(6): jnz 0x1d3(%rip)
fa9b(5): nop 0x0(%rax,%rax,1)
faa0(5): test $0x4,0x1(%rdx,%rcx,2)
faa5(2): jz 0x13(%rip)
faa7(3): mov %rcx,%rax
faaa(3): mov %rdi,%rsi
faad(4): sar $0x6,%rax
fab1(3): shl/sal %cl,%rsi
fab4(4): or %rsi,0x0(%rbx,%rax,8)
fab8(4): add $0x1,%rcx
fabc(7): cmp $0x100,%rcx
fac3(2): jnz 0xffffffdd(%rip)
fac5(5): jmp 0xfffffd6f(%rip)
faca(2): xor %eax,%eax
facc(4): nop 0x0(%rax)
fad0(4): test $0x2,0x0(%rdx,%rax,2)
fad4(2): jz 0x1e(%rip)
fad6(5): movzx 0x0(%rbp,%rax,1),%ecx
fadb(3): mov %rdi,%r11
fade(3): mov %rcx,%rsi
fae1(3): and $0x3f,%ecx
fae4(4): shr $0x3,%rsi
fae8(3): shl/sal %cl,%r11
faeb(3): and $0x18,%esi
faee(4): or %r11,0x0(%rbx,%rsi,1)
faf2(4): add $0x1,%rax
faf6(6): cmp $0x100,%rax
fafc(2): jnz 0xffffffd4(%rip)
fafe(5): jmp 0xfffffd36(%rip)
fb03(7): lea 0xcc5b(%rip),%rdi
fb0a(5): mov $0x6,%ecx
fb0f(3): mov %r12,%rsi
fb12(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
fb14(3): setnbe %al
fb17(2): sbb $0x0,%al
fb19(2): test %al,%al
fb1b(2): jnz 0x81(%rip)
fb1d(5): call 0xffff25c3(%rip)
fb22(2): xor %ecx,%ecx
fb24(3): test %rbp,%rbp
fb27(3): mov (%rax),%rdx
fb2a(5): mov $0x1,%edi
fb2f(6): jnz 0x3f8(%rip)
fb35(3): nop (%rax)
fb38(5): test $0x40,0x1(%rdx,%rcx,2)
fb3d(2): jz 0x13(%rip)
fb3f(3): mov %rcx,%rax
fb42(3): mov %rdi,%rsi
fb45(4): sar $0x6,%rax
fb49(3): shl/sal %cl,%rsi
fb4c(4): or %rsi,0x0(%rbx,%rax,8)
fb50(4): add $0x1,%rcx
fb54(7): cmp $0x100,%rcx
fb5b(2): jnz 0xffffffdd(%rip)
fb5d(5): jmp 0xfffffcd7(%rip)
fb62(2): xor %eax,%eax
fb64(4): nop 0x0(%rax)
fb68(5): test $0x2,0x1(%rdx,%rax,2)
fb6d(2): jz 0x1e(%rip)
fb6f(5): movzx 0x0(%rbp,%rax,1),%ecx
fb74(3): mov %rdi,%r14
fb77(3): mov %rcx,%rsi
fb7a(3): and $0x3f,%ecx
fb7d(4): shr $0x3,%rsi
fb81(3): shl/sal %cl,%r14
fb84(3): and $0x18,%esi
fb87(4): or %r14,0x0(%rbx,%rsi,1)
fb8b(4): add $0x1,%rax
fb8f(6): cmp $0x100,%rax
fb95(2): jnz 0xffffffd3(%rip)
fb97(5): jmp 0xfffffc9d(%rip)
fb9c(7): lea 0xcba4(%rip),%rdi
fba3(5): mov $0x6,%ecx
fba8(3): mov %r12,%rsi
fbab(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
fbad(3): setnbe %al
fbb0(2): sbb $0x0,%al
fbb2(2): test %al,%al
fbb4(2): jnz 0x4e(%rip)
fbb6(5): call 0xffff252a(%rip)
fbbb(2): xor %ecx,%ecx
fbbd(3): test %rbp,%rbp
fbc0(3): mov (%rax),%rax
fbc3(5): mov $0x1,%edi
fbc8(6): jnz 0x328(%rip)
fbce(5): test $0x1,0x1(%rax,%rcx,2)
fbd3(2): jz 0x13(%rip)
fbd5(3): mov %rcx,%rdx
fbd8(3): mov %rdi,%rsi
fbdb(4): sar $0x6,%rdx
fbdf(3): shl/sal %cl,%rsi
fbe2(4): or %rsi,0x0(%rbx,%rdx,8)
fbe6(4): add $0x1,%rcx
fbea(7): cmp $0x100,%rcx
fbf1(2): jnz 0xffffffdd(%rip)
fbf3(5): jmp 0xfffffc41(%rip)
fbf8(5): mov $0xc,%eax
fbfd(5): jmp 0xfffffc39(%rip)
fc02(7): lea 0xcb62(%rip),%rdi
fc09(5): mov $0x6,%ecx
fc0e(3): mov %r12,%rsi
fc11(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
fc13(3): setnbe %al
fc16(2): sbb $0x0,%al
fc18(2): test %al,%al
fc1a(6): jnz 0xf4(%rip)
fc20(5): call 0xffff24c0(%rip)
fc25(2): xor %ecx,%ecx
fc27(3): test %rbp,%rbp
fc2a(3): mov (%rax),%rdx
fc2d(5): mov $0x1,%esi
fc32(6): jnz 0xa2(%rip)
fc38(4): test $0x1,0x0(%rdx,%rcx,2)
fc3c(2): jz 0x13(%rip)
fc3e(3): mov %rcx,%rax
fc41(3): mov %rsi,%rdi
fc44(4): sar $0x6,%rax
fc48(3): shl/sal %cl,%rdi
fc4b(4): or %rdi,0x0(%rbx,%rax,8)
fc4f(4): add $0x1,%rcx
fc53(7): cmp $0x100,%rcx
fc5a(2): jnz 0xffffffde(%rip)
fc5c(5): jmp 0xfffffbd8(%rip)
fc61(7): nop 0x0(%rax)
fc68(2): xor %eax,%eax
fc6a(5): test $0x4,0x1(%rdx,%rax,2)
fc6f(2): jz 0x1e(%rip)
fc71(5): movzx 0x0(%rbp,%rax,1),%ecx
fc76(3): mov %rdi,%r9
fc79(3): mov %rcx,%rsi
fc7c(3): and $0x3f,%ecx
fc7f(4): shr $0x3,%rsi
fc83(3): shl/sal %cl,%r9
fc86(3): and $0x18,%esi
fc89(4): or %r9,0x0(%rbx,%rsi,1)
fc8d(4): add $0x1,%rax
fc91(6): cmp $0x100,%rax
fc97(2): jnz 0xffffffd3(%rip)
fc99(5): jmp 0xfffffb9b(%rip)
fc9e(2): xor %eax,%eax
fca0(5): test $0x20,0x1(%rdx,%rax,2)
fca5(2): jz 0x1e(%rip)
fca7(5): movzx 0x0(%rbp,%rax,1),%ecx
fcac(3): mov %rdi,%r9
fcaf(3): mov %rcx,%rsi
fcb2(3): and $0x3f,%ecx
fcb5(4): shr $0x3,%rsi
fcb9(3): shl/sal %cl,%r9
fcbc(3): and $0x18,%esi
fcbf(4): or %r9,0x0(%rbx,%rsi,1)
fcc3(4): add $0x1,%rax
fcc7(6): cmp $0x100,%rax
fccd(2): jnz 0xffffffd3(%rip)
fccf(5): jmp 0xfffffb65(%rip)
fcd4(2): xor %eax,%eax
fcd6(5): mov $0x1,%edi
fcdb(4): test $0x1,0x0(%rdx,%rax,2)
fcdf(2): jz 0x1e(%rip)
fce1(5): movzx 0x0(%rbp,%rax,1),%ecx
fce6(3): mov %rdi,%r14
fce9(3): mov %rcx,%rsi
fcec(3): and $0x3f,%ecx
fcef(4): shr $0x3,%rsi
fcf3(3): shl/sal %cl,%r14
fcf6(3): and $0x18,%esi
fcf9(4): or %r14,0x0(%rbx,%rsi,1)
fcfd(4): add $0x1,%rax
fd01(6): cmp $0x100,%rax
fd07(2): jnz 0xffffffd4(%rip)
fd09(5): jmp 0xfffffb2b(%rip)
fd0e(7): lea 0xca5c(%rip),%rsi
fd15(3): mov %r12,%rdi
fd18(5): call 0xffff21b8(%rip)
fd1d(2): test %eax,%eax
fd1f(2): jnz 0x7b(%rip)
fd21(5): call 0xffff23bf(%rip)
fd26(2): xor %ecx,%ecx
fd28(3): test %rbp,%rbp
fd2b(3): mov (%rax),%rsi
fd2e(5): mov $0x1,%edx
fd33(2): jnz 0x2c(%rip)
fd35(5): cmp $0x0,0x0(%rsi,%rcx,2)
fd3a(2): jns 0x13(%rip)
fd3c(3): mov %rcx,%rax
fd3f(3): mov %rdx,%rdi
fd42(4): sar $0x6,%rax
fd46(3): shl/sal %cl,%rdi
fd49(4): or %rdi,0x0(%rbx,%rax,8)
fd4d(4): add $0x1,%rcx
fd51(7): cmp $0x100,%rcx
fd58(2): jnz 0xffffffdd(%rip)
fd5a(5): jmp 0xfffffada(%rip)
fd5f(2): xor %eax,%eax
fd61(5): mov $0x1,%edi
fd66(5): cmp $0x0,0x0(%rsi,%rax,2)
fd6b(2): jns 0x1e(%rip)
fd6d(5): movzx 0x0(%rbp,%rax,1),%ecx
fd72(3): mov %rdi,%r9
fd75(3): mov %rcx,%rdx
fd78(3): and $0x3f,%ecx
fd7b(4): shr $0x3,%rdx
fd7f(3): shl/sal %cl,%r9
fd82(3): and $0x18,%edx
fd85(4): or %r9,0x0(%rbx,%rdx,1)
fd89(4): add $0x1,%rax
fd8d(6): cmp $0x100,%rax
fd93(2): jnz 0xffffffd3(%rip)
fd95(5): jmp 0xfffffa9f(%rip)
fd9a(7): lea 0xc9d6(%rip),%rsi
fda1(3): mov %r12,%rdi
fda4(5): call 0xffff212c(%rip)
fda9(2): test %eax,%eax
fdab(2): jnz 0x79(%rip)
fdad(5): call 0xffff2333(%rip)
fdb2(2): xor %ecx,%ecx
fdb4(3): test %rbp,%rbp
fdb7(3): mov (%rax),%rsi
fdba(5): mov $0x1,%edx
fdbf(2): jnz 0x2b(%rip)
fdc1(4): test $0x4,0x0(%rsi,%rcx,2)
fdc5(2): jz 0x13(%rip)
fdc7(3): mov %rcx,%rax
fdca(3): mov %rdx,%rdi
fdcd(4): sar $0x6,%rax
fdd1(3): shl/sal %cl,%rdi
fdd4(4): or %rdi,0x0(%rbx,%rax,8)
fdd8(4): add $0x1,%rcx
fddc(7): cmp $0x100,%rcx
fde3(2): jnz 0xffffffde(%rip)
fde5(5): jmp 0xfffffa4f(%rip)
fdea(2): xor %eax,%eax
fdec(5): mov $0x1,%edi
fdf1(4): test $0x4,0x0(%rsi,%rax,2)
fdf5(2): jz 0x1e(%rip)
fdf7(5): movzx 0x0(%rbp,%rax,1),%ecx
fdfc(3): mov %rdi,%r14
fdff(3): mov %rcx,%rdx
fe02(3): and $0x3f,%ecx
fe05(4): shr $0x3,%rdx
fe09(3): shl/sal %cl,%r14
fe0c(3): and $0x18,%edx
fe0f(4): or %r14,0x0(%rbx,%rdx,1)
fe13(4): add $0x1,%rax
fe17(6): cmp $0x100,%rax
fe1d(2): jnz 0xffffffd4(%rip)
fe1f(5): jmp 0xfffffa15(%rip)
fe24(7): lea 0xc952(%rip),%rsi
fe2b(3): mov %r12,%rdi
fe2e(5): call 0xffff20a2(%rip)
fe33(2): test %eax,%eax
fe35(2): jnz 0x7b(%rip)
fe37(5): call 0xffff22a9(%rip)
fe3c(2): xor %ecx,%ecx
fe3e(3): test %rbp,%rbp
fe41(3): mov (%rax),%rsi
fe44(5): mov $0x1,%edx
fe49(2): jnz 0x2c(%rip)
fe4b(5): test $0x10,0x1(%rsi,%rcx,2)
fe50(2): jz 0x13(%rip)
fe52(3): mov %rcx,%rax
fe55(3): mov %rdx,%rdi
fe58(4): sar $0x6,%rax
fe5c(3): shl/sal %cl,%rdi
fe5f(4): or %rdi,0x0(%rbx,%rax,8)
fe63(4): add $0x1,%rcx
fe67(7): cmp $0x100,%rcx
fe6e(2): jnz 0xffffffdd(%rip)
fe70(5): jmp 0xfffff9c4(%rip)
fe75(2): xor %eax,%eax
fe77(5): mov $0x1,%edi
fe7c(5): test $0x10,0x1(%rsi,%rax,2)
fe81(2): jz 0x1e(%rip)
fe83(5): movzx 0x0(%rbp,%rax,1),%ecx
fe88(3): mov %rdi,%r9
fe8b(3): mov %rcx,%rdx
fe8e(3): and $0x3f,%ecx
fe91(4): shr $0x3,%rdx
fe95(3): shl/sal %cl,%r9
fe98(3): and $0x18,%edx
fe9b(4): or %r9,0x0(%rbx,%rdx,1)
fe9f(4): add $0x1,%rax
fea3(6): cmp $0x100,%rax
fea9(2): jnz 0xffffffd3(%rip)
feab(5): jmp 0xfffff989(%rip)
feb0(5): mov $0x4,%eax
feb5(5): jmp 0xfffff981(%rip)
feba(2): xor %eax,%eax
febc(5): test $0x8,0x1(%rdx,%rax,2)
fec1(2): jz 0x1e(%rip)
fec3(5): movzx 0x0(%rbp,%rax,1),%ecx
fec8(3): mov %rdi,%r14
fecb(3): mov %rcx,%rsi
fece(3): and $0x3f,%ecx
fed1(4): shr $0x3,%rsi
fed5(3): shl/sal %cl,%r14
fed8(3): and $0x18,%esi
fedb(4): or %r14,0x0(%rbx,%rsi,1)
fedf(4): add $0x1,%rax
fee3(6): cmp $0x100,%rax
fee9(2): jnz 0xffffffd3(%rip)
feeb(5): jmp 0xfffff949(%rip)
fef0(2): xor %edx,%edx
fef2(5): test $0x1,0x1(%rax,%rdx,2)
fef7(2): jz 0x1e(%rip)
fef9(5): movzx 0x0(%rbp,%rdx,1),%ecx
fefe(3): mov %rdi,%r9
ff01(3): mov %rcx,%rsi
ff04(3): and $0x3f,%ecx
ff07(4): shr $0x3,%rsi
ff0b(3): shl/sal %cl,%r9
ff0e(3): and $0x18,%esi
ff11(4): or %r9,0x0(%rbx,%rsi,1)
ff15(4): add $0x1,%rdx
ff19(7): cmp $0x100,%rdx
ff20(2): jnz 0xffffffd2(%rip)
ff22(5): jmp 0xfffff912(%rip)
ff27(2): xor %eax,%eax
ff29(5): test $0x40,0x1(%rdx,%rax,2)
ff2e(2): jz 0x1e(%rip)
ff30(5): movzx 0x0(%rbp,%rax,1),%ecx
ff35(3): mov %rdi,%r14
ff38(3): mov %rcx,%rsi
ff3b(3): and $0x3f,%ecx
ff3e(4): shr $0x3,%rsi
ff42(3): shl/sal %cl,%r14
ff45(3): and $0x18,%esi
ff48(4): or %r14,0x0(%rbx,%rsi,1)
ff4c(4): add $0x1,%rax
ff50(6): cmp $0x100,%rax
ff56(2): jnz 0xffffffd3(%rip)
ff58(5): jmp 0xfffff8dc(%rip)

"build_charclass_op" :
ff60(2): push %r15
ff62(2): push %r14
ff64(3): mov %rdx,%r14
ff67(2): push %r13
ff69(2): push %r12
ff6b(3): mov %rcx,%r13
ff6e(1): push %rbp
ff6f(1): push %rbx
ff70(3): mov %rdi,%rbp
ff73(5): mov $0x20,%edi
ff78(3): mov %r8d,%r12d
ff7b(4): sub $0x58,%rsp
ff7f(4): mov %rsi,(%rsp)
ff83(5): mov $0x1,%esi
ff88(5): mov %r9,0x8(%rsp)
ff8d(9): mov $0x28,%rax
ff96(5): mov %rax,0x48(%rsp)
ff9b(2): xor %eax,%eax
ff9d(9): mov $0x0,0x18(%rsp)
ffa6(5): call 0xffff1f1a(%rip)
ffab(3): test %rax,%rax
ffae(6): jz 0x1c2(%rip)
ffb4(5): mov $0x1,%esi
ffb9(5): mov $0x50,%edi
ffbe(3): mov %rax,%rbx
ffc1(5): call 0xffff1eff(%rip)
ffc6(3): test %rax,%rax
ffc9(3): mov %rax,%r15
ffcc(6): jz 0x1b4(%rip)
ffd2(4): movzx 0x20(%rax),%eax
ffd6(4): sub $0x8,%rsp
ffda(3): mov %r12d,%edx
ffdd(2): push $0x0
ffdf(3): and $0x1,%edx
ffe2(5): mov 0x10(%rsp),%rdi
ffe7(4): lea 0x48(%r15),%rcx
ffeb(3): mov %r14,%r9
ffee(3): mov %rbx,%rsi
fff1(5): lea 0x28(%rsp),%r8
fff6(3): and $0xfe,%eax
fff9(2): or %edx,%eax
fffb(4): lea 0x18(%r15),%rdx
ffff(4): mov %al,0x20(%r15)
10003(5): call 0xfffff74d(%rip)
10008(2): test %eax,%eax
1000a(1): pop %rdx
1000b(1): pop %rcx
1000c(6): jnz 0x194(%rip)
10012(5): movsx 0x0(%r13),%rcx
10017(5): mov $0x1,%esi
1001c(2): test %cl,%cl
1001e(2): jz 0x3c(%rip)
10020(4): lea 0x3f(%rcx),%rax
10024(3): test %rcx,%rcx
10027(3): mov %rcx,%rdx
1002a(4): cmovns %rcx,%rax
1002e(4): sar $0x3f,%rdx
10032(4): add $0x1,%r13
10036(4): shr $0x3a,%rdx
1003a(4): sar $0x6,%rax
1003e(3): add %rdx,%rcx
10041(3): and $0x3f,%ecx
10044(3): sub %rdx,%rcx
10047(3): mov %rsi,%rdx
1004a(3): shl/sal %cl,%rdx
1004d(5): movsx 0x0(%r13),%rcx
10052(4): or %rdx,0x0(%rbx,%rax,8)
10056(2): test %cl,%cl
10058(2): jnz 0xffffffc8(%rip)
1005a(3): test %r12b,%r12b
1005d(2): jz 0x15(%rip)
1005f(4): lea 0x20(%rbx),%rdx
10063(3): mov %rbx,%rax
10066(3): not (%rax)
10069(4): add $0x8,%rax
1006d(3): cmp %rax,%rdx
10070(2): jnz 0xfffffff6(%rip)
10072(7): cmp $0x1,0xb4(%rbp)
10079(2): jle 0x1a(%rip)
1007b(4): mov 0x78(%rbp),%rcx
1007f(2): xor %eax,%eax
10081(4): mov 0x0(%rcx,%rax,1),%rdx
10085(4): and %rdx,0x0(%rbx,%rax,1)
10089(4): add $0x8,%rax
1008d(4): cmp $0x20,%rax
10091(2): jnz 0xfffffff0(%rip)
10093(5): lea 0x20(%rsp),%r9
10098(4): lea 0x70(%rbp),%r12
1009c(7): lea 0x80(%rbp),%r13
100a3(2): xor %ecx,%ecx
100a5(2): xor %edx,%edx
100a7(5): mov $0x3,0x28(%rsp)
100ac(3): mov %r9,%r8
100af(3): mov %r13,%rsi
100b2(3): mov %r12,%rdi
100b5(5): mov %rbx,0x20(%rsp)
100ba(4): mov %r9,(%rsp)
100be(5): call 0xffffcb52(%rip)
100c3(3): test %rax,%rax
100c6(3): mov %rax,%r14
100c9(6): jz 0x97(%rip)
100cf(7): cmp $0x1,0xb4(%rbp)
100d6(2): jle 0x7a(%rip)
100d8(7): or $0x2,0xb0(%rbp)
100df(4): mov (%rsp),%r9
100e3(2): xor %ecx,%ecx
100e5(2): xor %edx,%edx
100e7(3): mov %r13,%rsi
100ea(3): mov %r12,%rdi
100ed(5): mov $0x6,0x28(%rsp)
100f2(5): mov %r15,0x20(%rsp)
100f7(3): mov %r9,%r8
100fa(5): call 0xffffcb16(%rip)
100ff(3): test %rax,%rax
10102(2): jz 0x5e(%rip)
10104(5): lea 0x30(%rsp),%r8
10109(3): mov %r14,%rdx
1010c(3): mov %rax,%rcx
1010f(3): mov %r13,%rsi
10112(3): mov %r12,%rdi
10115(5): mov $0xa,0x38(%rsp)
1011a(5): call 0xffffcaf6(%rip)
1011f(3): mov %rax,%r14
10122(5): mov 0x48(%rsp),%rdi
10127(9): xor $0x28,%rdi
10130(3): mov %r14,%rax
10133(6): jnz 0x92(%rip)
10139(4): add $0x58,%rsp
1013d(1): pop %rbx
1013e(1): pop %rbp
1013f(2): pop %r12
10141(2): pop %r13
10143(2): pop %r14
10145(2): pop %r15
10147(1): ret near (%rsp)
10148(8): nop 0x0(%rax,%rax,1)
10150(3): mov %r15,%rdi
10153(5): call 0xffffb51d(%rip)
10158(2): jmp 0xffffffca(%rip)
1015a(6): nop 0x0(%rax,%rax,1)
10160(3): mov %rbx,%rdi
10163(5): call 0xffff1afd(%rip)
10168(3): mov %r15,%rdi
1016b(5): call 0xffffb505(%rip)
10170(5): mov 0x8(%rsp),%rax
10175(3): xor %r14d,%r14d
10178(6): mov $0xc,(%rax)
1017e(2): jmp 0xffffffa4(%rip)
10180(3): mov %rbx,%rdi
10183(3): xor %r14d,%r14d
10186(5): call 0xffff1ada(%rip)
1018b(5): mov 0x8(%rsp),%rax
10190(6): mov $0xc,(%rax)
10196(2): jmp 0xffffff8c(%rip)
10198(8): nop 0x0(%rax,%rax,1)
101a0(3): mov %rbx,%rdi
101a3(3): mov %eax,(%rsp)
101a6(3): xor %r14d,%r14d
101a9(5): call 0xffff1ab7(%rip)
101ae(3): mov %r15,%rdi
101b1(5): call 0xffffb4bf(%rip)
101b6(5): mov 0x8(%rsp),%rdi
101bb(3): mov (%rsp),%eax
101be(2): mov %eax,(%rdi)
101c0(5): jmp 0xffffff62(%rip)
101c5(5): call 0xffff1beb(%rip)

"re_compile_fastmap_iter.isra.30" :
101d0(2): push %r15
101d2(2): push %r14
101d4(3): mov %rdi,%rax
101d7(2): push %r13
101d9(2): push %r12
101db(1): push %rbp
101dc(1): push %rbx
101dd(2): xor %ebx,%ebx
101df(3): mov %rcx,%rbp
101e2(7): sub $0x178,%rsp
101e9(3): mov (%rax),%rax
101ec(5): mov %rdi,0x30(%rsp)
101f1(5): mov %rsi,0x20(%rsp)
101f6(9): mov $0x28,%rdi
101ff(8): mov %rdi,0x168(%rsp)
10207(2): xor %edi,%edi
10209(7): cmp $0x1,0xb4(%rax)
10210(5): mov %rdx,0x28(%rsp)
10215(5): mov %rax,0x8(%rsp)
1021a(2): jnz 0x19(%rip)
1021c(5): mov 0x30(%rsp),%rax
10221(4): mov 0x18(%rax),%rax
10225(3): mov %rax,%rbx
10228(4): mov %rax,(%rsp)
1022c(4): shr $0x16,%rbx
10230(3): and $0x1,%ebx
10233(5): mov 0x20(%rsp),%rax
10238(4): cmp $0x0,(%rax)
1023c(6): jle 0x411(%rip)
10242(5): lea 0x58(%rsp),%rax
10247(8): mov $0x0,(%rsp)
1024f(5): mov %rax,0x40(%rsp)
10254(5): lea 0x54(%rsp),%rax
10259(5): mov %rax,0x48(%rsp)
1025e(5): lea 0x60(%rsp),%rax
10263(5): mov %rax,0x38(%rsp)
10268(2): jmp 0x46(%rip)
1026a(6): nop 0x0(%rax,%rax,1)
10270(3): cmp $0x3,%eax
10273(6): jz 0x2f3(%rip)
10279(3): cmp $0x6,%eax
1027c(6): jz 0x18c(%rip)
10282(3): and $0xfd,%edx
10285(3): cmp $0x5,%dl
10288(6): jz 0x3fc(%rip)
1028e(3): cmp $0x2,%eax
10291(6): jz 0x353(%rip)
10297(5): mov 0x20(%rsp),%rdi
1029c(5): add $0x1,(%rsp)
102a1(4): mov (%rsp),%rax
102a5(3): cmp (%rdi),%rax
102a8(6): jnl 0x3a5(%rip)
102ae(5): mov 0x28(%rsp),%rax
102b3(4): mov (%rsp),%rdi
102b7(3): mov (%rax),%rax
102ba(4): mov 0x0(%rax,%rdi,8),%r12
102be(5): mov 0x8(%rsp),%rax
102c3(3): mov (%rax),%rcx
102c6(3): mov %r12,%rax
102c9(4): shl/sal $0x4,%rax
102cd(5): mov %rax,0x10(%rsp)
102d2(4): lea 0x0(%rcx,%rax,1),%rsi
102d6(4): movzx 0x8(%rsi),%eax
102da(3): cmp $0x1,%eax
102dd(2): mov %eax,%edx
102df(2): jnz 0xffffff91(%rip)
102e1(4): movzx (%rsi),%r13d
102e5(2): test %ebx,%ebx
102e7(6): mov $0x1,0x0(%rbp,%r13,1)
102ed(2): jz 0x13(%rip)
102ef(5): call 0xffff1de1(%rip)
102f4(3): mov (%rax),%rax
102f7(4): movsxd 0x0(%rax,%r13,4),%rax
102fb(5): mov $0x1,0x0(%rbp,%rax,1)
10300(5): mov 0x30(%rsp),%rax
10305(4): test $0x40,0x1a(%rax)
10309(2): jz 0xffffff8e(%rip)
1030b(5): mov 0x8(%rsp),%rsi
10310(7): cmp $0x1,0xb4(%rsi)
10317(6): jle 0xffffff80(%rip)
1031d(3): mov (%rsi),%rax
10320(5): mov 0x10(%rsp),%rdi
10325(4): movzx 0x0(%rax,%rdi,1),%edx
10329(4): mov %dl,0x60(%rsp)
1032d(5): lea 0x1(%r12),%rdx
10332(4): cmp %rdx,0x10(%rsi)
10336(6): jbe 0x340(%rip)
1033c(5): lea 0x10(%rax,%rdi,1),%rcx
10341(3): mov 0x8(%rcx),%eax
10344(5): and $0x2000ff,%eax
10349(5): cmp $0x200001,%eax
1034e(6): jnz 0x328(%rip)
10354(4): add $0x20,%rdi
10358(3): mov %rdi,%r13
1035b(5): mov 0x38(%rsp),%rdi
10360(4): lea 0x1(%rdi),%rax
10364(2): jmp 0x27(%rip)
10366(a): nop 0x0(%rax,%rax,1)
10370(3): mov (%rsi),%rcx
10373(3): add %r13,%rcx
10376(4): add $0x10,%r13
1037a(3): mov 0x8(%rcx),%edx
1037d(6): and $0x2000ff,%edx
10383(6): cmp $0x200001,%edx
10389(2): jnz 0x1b(%rip)
1038b(3): movzx (%rcx),%edx
1038e(4): add $0x1,%rax
10392(3): mov %dl,0xffffffff(%rax)
10395(3): mov %rax,%rdx
10398(3): sub %rdi,%rdx
1039b(3): add %r12,%rdx
1039e(4): cmp %rdx,0x10(%rsi)
103a2(2): jnbe 0xffffffce(%rip)
103a4(5): mov 0x38(%rsp),%rsi
103a9(5): mov 0x40(%rsp),%rcx
103ae(5): mov 0x48(%rsp),%rdi
103b3(3): sub %rsi,%rax
103b6(7): mov $0x0,(%rcx)
103bd(3): mov %rax,%r12
103c0(3): mov %rax,%rdx
103c3(5): call 0xffff9fed(%rip)
103c8(3): cmp %rax,%r12
103cb(6): jnz 0xfffffecc(%rip)
103d1(4): mov 0x54(%rsp),%edi
103d5(5): call 0xffff1c6b(%rip)
103da(5): mov 0x40(%rsp),%rdx
103df(5): mov 0x38(%rsp),%rdi
103e4(2): mov %eax,%esi
103e6(5): call 0xffff1b4a(%rip)
103eb(4): cmp $0xffffffff,%rax
103ef(6): jz 0xfffffea8(%rip)
103f5(5): movzx 0x60(%rsp),%eax
103fa(5): mov $0x1,0x0(%rbp,%rax,1)
103ff(5): jmp 0xfffffe98(%rip)
10404(4): nop 0x0(%rax)
10408(5): mov 0x8(%rsp),%rax
1040d(3): mov (%rsi),%r12
10410(7): cmp $0x1,0xb4(%rax)
10417(2): jle 0x26(%rip)
10419(6): cmp $0x0,0x48(%r12)
1041f(6): jnz 0x100(%rip)
10425(6): test $0x1,0x20(%r12)
1042b(6): jnz 0xf4(%rip)
10431(6): cmp $0x0,0x40(%r12)
10437(6): jnz 0xe8(%rip)
1043d(3): xor %r13d,%r13d
10440(6): cmp $0x0,0x28(%r12)
10446(6): jle 0xfffffe51(%rip)
1044c(3): mov %r12,%r15
1044f(5): mov 0x40(%rsp),%r14
10454(3): mov %rbp,%r12
10457(3): mov %r13,%rbp
1045a(3): mov %ebx,%r13d
1045d(2): jmp 0x10(%rip)
1045f(4): add $0x1,%rbp
10463(4): cmp 0x28(%r15),%rbp
10467(6): jnl 0xad(%rip)
1046d(7): mov $0x0,(%r14)
10474(3): mov (%r15),%rax
10477(3): mov %r14,%rdx
1047a(5): mov 0x38(%rsp),%rdi
1047f(8): lea 0x0(,%rbp,4),%rbx
10487(3): mov 0x0(%rax,%rbp,4),%esi
1048a(5): call 0xffff1aa6(%rip)
1048f(4): cmp $0xffffffff,%rax
10493(2): jz 0x2c(%rip)
10495(5): movzx 0x60(%rsp),%edx
1049a(3): test %r13d,%r13d
1049d(5): mov $0x1,0x0(%r12,%rdx,1)
104a2(5): mov %rdx,0x10(%rsp)
104a7(2): jz 0x18(%rip)
104a9(5): call 0xffff1c27(%rip)
104ae(5): mov 0x10(%rsp),%rdx
104b3(3): mov (%rax),%rax
104b6(4): movsxd 0x0(%rax,%rdx,4),%rax
104ba(5): mov $0x1,0x0(%r12,%rax,1)
104bf(5): mov 0x30(%rsp),%rax
104c4(4): test $0x40,0x1a(%rax)
104c8(2): jz 0xffffff97(%rip)
104ca(5): mov 0x8(%rsp),%rax
104cf(7): cmp $0x1,0xb4(%rax)
104d6(2): jle 0xffffff89(%rip)
104d8(3): mov (%r15),%rax
104db(3): mov 0x0(%rax,%rbx,1),%edi
104de(5): call 0xffff1b62(%rip)
104e3(5): mov 0x38(%rsp),%rdi
104e8(3): mov %r14,%rdx
104eb(2): mov %eax,%esi
104ed(5): call 0xffff1a43(%rip)
104f2(4): cmp $0xffffffff,%rax
104f6(6): jz 0xffffff69(%rip)
104fc(5): movzx 0x60(%rsp),%eax
10501(4): add $0x1,%rbp
10505(5): mov $0x1,0x0(%r12,%rax,1)
1050a(4): cmp 0x28(%r15),%rbp
1050e(6): jl 0xffffff5f(%rip)
10514(3): mov %r13d,%ebx
10517(3): mov %r12,%rbp
1051a(5): jmp 0xfffffd7d(%rip)
1051f(5): mov 0x40(%rsp),%r12
10524(5): mov 0x48(%rsp),%r13
10529(5): mov $0x0,0x54(%rsp)
1052e(2): nop 
10530(2): xor %edi,%edi
10532(8): mov $0x0,(%r12)
1053a(3): mov %r12,%rcx
1053d(5): mov $0x1,%edx
10542(3): mov %r13,%rsi
10545(5): call 0xffff9e6b(%rip)
1054a(4): cmp $0xfffffffe,%rax
1054e(2): jnz 0xc(%rip)
10550(5): movzx 0x54(%rsp),%eax
10555(5): mov $0x1,0x0(%rbp,%rax,1)
1055a(5): add $0x1,0x54(%rsp)
1055f(2): jnz 0xffffffd1(%rip)
10561(5): jmp 0xfffffd36(%rip)
10566(3): mov %rbp,%r13
10569(3): xor %r12d,%r12d
1056c(9): mov $0x0,0x18(%rsp)
10575(5): mov 0x10(%rsp),%rax
1057a(5): mov 0x18(%rsp),%rsi
1057f(3): xor %r14d,%r14d
10582(4): mov 0x0(%rcx,%rax,1),%rax
10586(4): mov 0x0(%rax,%rsi,1),%r15
1058a(6): nop 0x0(%rax,%rax,1)
10590(4): bt %r14,%r15
10594(2): jnb 0x21(%rip)
10596(2): test %ebx,%ebx
10598(6): mov $0x1,0x0(%r13,%r14,1)
1059e(2): jz 0x17(%rip)
105a0(5): call 0xffff1b30(%rip)
105a5(3): mov (%rax),%rax
105a8(4): lea 0x0(%r12,%r14,1),%rdx
105ac(4): movsxd 0x0(%rax,%rdx,4),%rax
105b0(5): mov $0x1,0x0(%rbp,%rax,1)
105b5(4): add $0x1,%r14
105b9(4): cmp $0x40,%r14
105bd(2): jnz 0xffffffd3(%rip)
105bf(4): add $0x40,%r12
105c3(6): add $0x8,0x18(%rsp)
105c9(4): add $0x40,%r13
105cd(7): cmp $0x100,%r12
105d4(6): jz 0xfffffcc3(%rip)
105da(5): mov 0x8(%rsp),%rax
105df(3): mov (%rax),%rcx
105e2(2): jmp 0xffffff93(%rip)
105e4(8): movdqa 0xc954(%rip),%xmm0
105ec(4): movups %xmm0,0x0(%rbp)
105f0(4): movups %xmm0,0x10(%rbp)
105f4(4): movups %xmm0,0x20(%rbp)
105f8(4): movups %xmm0,0x30(%rbp)
105fc(4): movups %xmm0,0x40(%rbp)
10600(4): movups %xmm0,0x50(%rbp)
10604(4): movups %xmm0,0x60(%rbp)
10608(4): movups %xmm0,0x70(%rbp)
1060c(7): movups %xmm0,0x80(%rbp)
10613(7): movups %xmm0,0x90(%rbp)
1061a(7): movups %xmm0,0xa0(%rbp)
10621(7): movups %xmm0,0xb0(%rbp)
10628(7): movups %xmm0,0xc0(%rbp)
1062f(7): movups %xmm0,0xd0(%rbp)
10636(7): movups %xmm0,0xe0(%rbp)
1063d(7): movups %xmm0,0xf0(%rbp)
10644(5): mov 0x30(%rsp),%rax
10649(4): or $0x1,0x38(%rax)
1064d(8): mov 0x168(%rsp),%rax
10655(9): xor $0x28,%rax
1065e(6): jnz 0x94(%rip)
10664(7): add $0x178,%rsp
1066b(1): pop %rbx
1066c(1): pop %rbp
1066d(2): pop %r12
1066f(2): pop %r13
10671(2): pop %r14
10673(2): pop %r15
10675(1): ret near (%rsp)
10676(5): mov 0x38(%rsp),%rax
1067b(4): add $0x1,%rax
1067f(5): jmp 0xfffffd25(%rip)
10684(8): movdqa 0xc8b4(%rip),%xmm0
1068c(3): cmp $0x2,%eax
1068f(4): movups %xmm0,0x0(%rbp)
10693(4): movups %xmm0,0x10(%rbp)
10697(4): movups %xmm0,0x20(%rbp)
1069b(4): movups %xmm0,0x30(%rbp)
1069f(4): movups %xmm0,0x40(%rbp)
106a3(4): movups %xmm0,0x50(%rbp)
106a7(4): movups %xmm0,0x60(%rbp)
106ab(4): movups %xmm0,0x70(%rbp)
106af(7): movups %xmm0,0x80(%rbp)
106b6(7): movups %xmm0,0x90(%rbp)
106bd(7): movups %xmm0,0xa0(%rbp)
106c4(7): movups %xmm0,0xb0(%rbp)
106cb(7): movups %xmm0,0xc0(%rbp)
106d2(7): movups %xmm0,0xd0(%rbp)
106d9(7): movups %xmm0,0xe0(%rbp)
106e0(7): movups %xmm0,0xf0(%rbp)
106e7(6): jnz 0xffffff66(%rip)
106ed(5): jmp 0xffffff57(%rip)
106f2(5): call 0xffff16be(%rip)

"check_node_accept_bytes.isra.31" :
10700(4): shl/sal $0x4,%rdx
10704(2): push %r13
10706(2): push %r12
10708(4): lea 0x0(%rdi,%rdx,1),%r9
1070c(1): push %rbp
1070d(1): push %rbx
1070e(4): sub $0x8,%rsp
10712(5): movzx 0x8(%r9),%r11d
10717(4): cmp $0x7,%r11b
1071b(6): jz 0x115(%rip)
10721(7): cmp $0x1,0x90(%rcx)
10728(6): jz 0xc8(%rip)
1072e(3): mov %rsi,%rbx
10731(3): mov %rcx,%rdi
10734(3): mov %r8,%rsi
10737(3): mov %rcx,%r10
1073a(5): call 0xffffb766(%rip)
1073f(4): cmp $0x5,%r11b
10743(2): mov %eax,%ebp
10745(6): jz 0xbb(%rip)
1074b(4): cmp $0x6,%r11b
1074f(6): jnz 0xa1(%rip)
10755(3): cmp $0x1,%eax
10758(6): jle 0x98(%rip)
1075e(3): mov (%r9),%r13
10761(4): mov 0x40(%r13),%rsi
10765(4): mov 0x28(%r13),%rdx
10769(3): test %rsi,%rsi
1076c(2): jnz 0xd(%rip)
1076e(5): cmp $0x0,0x48(%r13)
10773(6): jz 0xf5(%rip)
10779(4): mov 0x10(%r10),%rax
1077d(3): test %rdx,%rdx
10780(4): mov 0x0(%rax,%r8,4),%r12d
10784(2): jle 0x23(%rip)
10786(4): mov 0x0(%r13),%rcx
1078a(3): cmp (%rcx),%r12d
1078d(2): jz 0x55(%rip)
1078f(2): xor %eax,%eax
10791(2): jmp 0xd(%rip)
10793(5): nop 0x0(%rax,%rax,1)
10798(4): cmp 0x0(%rcx,%rax,4),%r12d
1079c(2): jz 0x46(%rip)
1079e(4): add $0x1,%rax
107a2(3): cmp %rdx,%rax
107a5(2): jnz 0xfffffff3(%rip)
107a7(4): mov 0x48(%r13),%rax
107ab(3): test %rax,%rax
107ae(6): jle 0xde(%rip)
107b4(2): xor %ebx,%ebx
107b6(2): jmp 0x18(%rip)
107b8(8): nop 0x0(%rax,%rax,1)
107c0(4): add $0x1,%rbx
107c4(4): cmp 0x48(%r13),%rbx
107c8(6): jnl 0xc0(%rip)
107ce(4): mov 0x18(%r13),%rax
107d2(3): mov %r12d,%edi
107d5(4): mov 0x0(%rax,%rbx,8),%rsi
107d9(5): call 0xffff1567(%rip)
107de(2): test %eax,%eax
107e0(2): jz 0xffffffe0(%rip)
107e2(5): test $0x1,0x20(%r13)
107e7(2): jz 0xb(%rip)
107e9(7): nop 0x0(%rax)
107f0(2): xor %ebp,%ebp
107f2(4): add $0x8,%rsp
107f6(2): mov %ebp,%eax
107f8(1): pop %rbx
107f9(1): pop %rbp
107fa(2): pop %r12
107fc(2): pop %r13
107fe(1): ret near (%rsp)
107ff(1): nop 
10800(3): cmp $0x1,%eax
10803(2): jle 0xffffffed(%rip)
10805(3): mov (%rbx),%rax
10808(2): test $0x40,%al
1080a(2): jz 0x16(%rip)
1080c(2): test $0x80,%al
1080e(2): jz 0xffffffe4(%rip)
10810(4): mov 0x8(%r10),%rax
10814(5): cmp $0x0,0x0(%rax,%r8,1)
10819(2): jz 0xffffffd7(%rip)
1081b(2): jmp 0xffffffd7(%rip)
1081d(3): nop (%rax)
10820(4): mov 0x8(%r10),%rdx
10824(5): cmp $0xa,0x0(%rdx,%r8,1)
10829(2): jnz 0xffffffe3(%rip)
1082b(2): jmp 0xffffffc5(%rip)
1082d(3): nop (%rax)
10830(4): mov 0x8(%rcx),%rdx
10834(4): lea 0x0(%rdx,%r8,1),%rsi
10838(3): movzx (%rsi),%eax
1083b(2): cmp $0xc1,%al
1083d(2): jbe 0xffffffb3(%rip)
1083f(4): mov 0x58(%rcx),%rcx
10843(4): lea 0x1(%r8),%rdi
10847(3): cmp %rcx,%rdi
1084a(2): jnl 0xffffffa6(%rip)
1084c(2): cmp $0xdf,%al
1084e(6): movzx 0x1(%rdx,%r8,1),%edx
10854(2): jnbe 0x6a(%rip)
10856(3): add $0x80,%edx
10859(5): mov $0x2,%ebp
1085e(3): cmp $0x3f,%dl
10861(2): jnbe 0xffffff8f(%rip)
10863(2): jmp 0xffffff8f(%rip)
10865(3): nop (%rax)
10868(3): test %rdx,%rdx
1086b(6): jnz 0xffffff0e(%rip)
10871(5): test $0x1,0x20(%r13)
10876(6): jnz 0xffffff7c(%rip)
1087c(5): jmp 0xffffff74(%rip)
10881(7): nop 0x0(%rax)
10888(4): mov 0x40(%r13),%rsi
1088c(3): test %rsi,%rsi
1088f(2): jle 0xffffffe2(%rip)
10891(4): mov 0x8(%r13),%rdx
10895(2): xor %eax,%eax
10897(2): jmp 0x12(%rip)
10899(7): nop 0x0(%rax)
108a0(4): add $0x1,%rax
108a4(3): cmp %rsi,%rax
108a7(2): jz 0xffffffca(%rip)
108a9(4): cmp 0x0(%rdx,%rax,4),%r12d
108ad(2): jl 0xfffffff3(%rip)
108af(4): mov 0x10(%r13),%rcx
108b3(4): cmp 0x0(%rcx,%rax,4),%r12d
108b7(2): jnle 0xffffffe9(%rip)
108b9(5): jmp 0xffffff29(%rip)
108be(2): cmp $0xef,%al
108c0(2): jnbe 0x48(%rip)
108c2(2): cmp $0xe0,%al
108c4(2): jnz 0xb(%rip)
108c6(3): cmp $0x9f,%dl
108c9(6): jbe 0xffffff27(%rip)
108cf(5): mov $0x3,%ebp
108d4(3): movsxd %ebp,%rdi
108d7(3): add %rdi,%r8
108da(3): cmp %r8,%rcx
108dd(6): jl 0xffffff13(%rip)
108e3(5): mov $0x1,%eax
108e8(2): jmp 0xf(%rip)
108ea(4): add $0x1,%rax
108ee(3): cmp %rax,%rdi
108f1(6): jle 0xffffff01(%rip)
108f7(4): movzx 0x0(%rsi,%rax,1),%ebx
108fb(3): lea 0xffffff80(%rbx),%edx
108fe(3): cmp $0x3f,%dl
10901(2): jbe 0xffffffe9(%rip)
10903(5): jmp 0xfffffeed(%rip)
10908(2): cmp $0xf7,%al
1090a(2): jnbe 0x16(%rip)
1090c(2): cmp $0xf0,%al
1090e(2): jnz 0xb(%rip)
10910(3): cmp $0x8f,%dl
10913(6): jbe 0xfffffedd(%rip)
10919(5): mov $0x4,%ebp
1091e(2): jmp 0xffffffb6(%rip)
10920(2): cmp $0xfb,%al
10922(2): jnbe 0x16(%rip)
10924(2): cmp $0xf8,%al
10926(2): jnz 0xb(%rip)
10928(3): cmp $0x87,%dl
1092b(6): jbe 0xfffffec5(%rip)
10931(5): mov $0x5,%ebp
10936(2): jmp 0xffffff9e(%rip)
10938(2): cmp $0xfd,%al
1093a(6): jnbe 0xfffffeb6(%rip)
10940(2): cmp $0xfc,%al
10942(2): jnz 0xb(%rip)
10944(3): cmp $0x83,%dl
10947(6): jbe 0xfffffea9(%rip)
1094d(5): mov $0x6,%ebp
10952(2): jmp 0xffffff82(%rip)

"check_arrival" :
10960(2): push %r15
10962(2): push %r14
10964(3): mov %rdi,%r15
10967(2): push %r13
10969(2): push %r12
1096b(1): push %rbp
1096c(1): push %rbx
1096d(3): mov %rcx,%rbp
10970(3): mov %rdx,%rbx
10973(7): sub $0xd8,%rsp
1097a(7): mov 0x98(%rdi),%rcx
10981(4): mov 0x8(%rsi),%r13
10985(9): mov $0x28,%rax
1098e(8): mov %rax,0xc8(%rsp)
10996(2): xor %eax,%eax
10998(3): mov %rdx,%rax
1099b(5): mov %rsi,0x60(%rsp)
109a0(5): mov %r8,0x78(%rsp)
109a5(4): shl/sal $0x4,%rax
109a9(3): add (%rcx),%rax
109ac(5): mov %r9,0x40(%rsp)
109b1(5): mov %rcx,0x30(%rsp)
109b6(b): mov $0x0,0x88(%rsp)
109c1(3): mov (%rax),%rax
109c4(5): mov %rax,0x48(%rsp)
109c9(7): movsxd 0xe0(%rdi),%rax
109d0(3): add %r9,%rax
109d3(3): cmp %r13,%rax
109d6(6): jnl 0x620(%rip)
109dc(5): mov 0x60(%rsp),%rax
109e1(7): mov 0xb8(%r15),%rdx
109e8(4): mov 0x48(%r15),%rcx
109ec(3): mov (%rax),%r12
109ef(4): mov 0x10(%rax),%r14
109f3(5): mov %rdx,0x68(%rsp)
109f8(5): mov %rcx,0x70(%rsp)
109fd(7): mov 0xa0(%r15),%edx
10a04(3): test %r12,%r12
10a07(7): mov %r14,0xb8(%r15)
10a0e(6): jz 0x3e2(%rip)
10a14(5): lea 0xffffffff(%r12),%rsi
10a19(4): mov %r12,0x48(%r15)
10a1d(3): mov %r15,%rdi
10a20(5): call 0xffffd310(%rip)
10a25(3): cmp %rbp,%r12
10a28(3): mov %eax,%r13d
10a2b(6): jz 0x3d8(%rip)
10a31(4): mov 0x0(%r14,%r12,8),%rbp
10a35(3): test %rbp,%rbp
10a38(2): jz 0xc(%rip)
10a3a(4): test $0x40,0x68(%rbp)
10a3e(6): jnz 0x522(%rip)
10a44(4): pxor %xmm0,%xmm0
10a48(c): mov $0x0,0xa0(%rsp)
10a54(8): movaps %xmm0,0x90(%rsp)
10a5c(5): cmp 0x40(%rsp),%r12
10a61(6): jnl 0x327(%rip)
10a67(7): mov 0xe0(%r15),%ecx
10a6e(2): test %ecx,%ecx
10a70(6): js 0x318(%rip)
10a76(8): lea 0x90(%rsp),%rbx
10a7e(8): lea 0x8(,%r12,8),%rax
10a86(4): mov %r12,(%rsp)
10a8a(9): mov $0x0,0x20(%rsp)
10a93(5): mov %rbx,0x8(%rsp)
10a98(8): lea 0xb0(%rsp),%rbx
10aa0(5): mov %rax,0x10(%rsp)
10aa5(7): mov 0xb8(%r15),%rax
10aac(5): mov %rbx,0x18(%rsp)
10ab1(8): lea 0x8c(%rsp),%rbx
10ab9(5): mov %rbx,0x58(%rsp)
10abe(5): mov 0x10(%rsp),%rcx
10ac3(c): mov $0x0,0x98(%rsp)
10acf(4): mov 0x0(%rax,%rcx,1),%rsi
10ad3(3): test %rsi,%rsi
10ad6(6): jz 0x3c2(%rip)
10adc(5): mov 0x8(%rsp),%rdi
10ae1(4): add $0x8,%rsi
10ae5(5): call 0xffffb98b(%rip)
10aea(2): test %eax,%eax
10aec(7): mov %eax,0x88(%rsp)
10af3(6): jnz 0x3dd(%rip)
10af9(3): test %rbp,%rbp
10afc(6): jz 0x1ac(%rip)
10b02(5): cmp $0x0,0x28(%rbp)
10b07(5): mov 0x18(%rsp),%rax
10b0c(4): pxor %xmm0,%xmm0
10b10(7): mov 0x98(%r15),%r12
10b17(b): mov $0x0,0x8c(%rsp)
10b22(8): mov $0x0,0x10(%rax)
10b2a(3): movaps %xmm0,(%rax)
10b2d(6): jle 0x533(%rip)
10b33(8): lea 0xd8(%r12),%rax
10b3b(2): xor %ebx,%ebx
10b3d(5): mov %rax,0x28(%rsp)
10b42(2): jmp 0x47(%rip)
10b44(4): nop 0x0(%rax)
10b48(4): mov (%rsp),%rdx
10b4c(3): mov %r15,%rdi
10b4f(5): call 0xffffd2d1(%rip)
10b54(2): test %al,%al
10b56(2): jz 0x25(%rip)
10b58(8): lea 0x0(,%r14,8),%r13
10b60(5): mov 0x18(%r12),%rax
10b65(5): mov 0x8(%rsp),%rdi
10b6a(4): mov 0x0(%rax,%r13,1),%rsi
10b6e(5): call 0xffff9ea2(%rip)
10b73(2): test %al,%al
10b75(6): jz 0x343(%rip)
10b7b(4): add $0x1,%rbx
10b7f(4): cmp 0x28(%rbp),%rbx
10b83(6): jnl 0x38d(%rip)
10b89(4): mov 0x30(%rbp),%rax
10b8d(4): mov (%r12),%rdi
10b91(4): mov 0x0(%rax,%rbx,8),%r14
10b95(3): mov %r14,%r13
10b98(4): shl/sal $0x4,%r13
10b9c(4): lea 0x0(%rdi,%r13,1),%rsi
10ba0(4): test $0x10,0xa(%rsi)
10ba4(2): jz 0xffffffa4(%rip)
10ba6(4): mov (%rsp),%r8
10baa(5): mov 0x28(%rsp),%rsi
10baf(3): mov %r15,%rcx
10bb2(3): mov %r14,%rdx
10bb5(5): call 0xfffffb4b(%rip)
10bba(3): cmp $0x1,%eax
10bbd(6): jle 0x2c3(%rip)
10bc3(2): cwde 
10bc5(4): add (%rsp),%rax
10bc9(5): mov 0x18(%r12),%rdx
10bce(8): lea 0x0(,%r14,8),%r13
10bd6(4): mov 0x0(%rdx,%r14,8),%rdx
10bda(3): mov %rax,%rcx
10bdd(5): mov %rax,0x38(%rsp)
10be2(8): lea 0x0(,%rax,8),%r14
10bea(7): mov 0xb8(%r15),%rax
10bf1(4): mov 0x0(%rax,%rcx,8),%rsi
10bf5(c): mov $0x0,0xb8(%rsp)
10c01(3): test %rsi,%rsi
10c04(2): jz 0x25(%rip)
10c06(5): mov 0x18(%rsp),%rdi
10c0b(4): add $0x8,%rsi
10c0f(5): mov %rdx,0x50(%rsp)
10c14(5): call 0xffffb85c(%rip)
10c19(2): test %eax,%eax
10c1b(7): mov %eax,0x8c(%rsp)
10c22(5): mov 0x50(%rsp),%rdx
10c27(2): jnz 0x59(%rip)
10c29(5): mov 0x18(%rsp),%rdi
10c2e(3): mov %rdx,%rsi
10c31(5): call 0xffff9ddf(%rip)
10c36(2): test %al,%al
10c38(6): jz 0x280(%rip)
10c3e(7): add 0xb8(%r15),%r14
10c45(5): mov 0x18(%rsp),%rdx
10c4a(3): mov %r12,%rsi
10c4d(5): mov 0x58(%rsp),%rdi
10c52(5): call 0xffffc90e(%rip)
10c57(5): mov 0x38(%rsp),%rdx
10c5c(3): mov %rax,(%r14)
10c5f(7): mov 0xb8(%r15),%rax
10c66(5): cmp $0x0,0x0(%rax,%rdx,8)
10c6b(6): jnz 0xfffffef5(%rip)
10c71(7): mov 0x8c(%rsp),%edx
10c78(2): test %edx,%edx
10c7a(6): jz 0xfffffee6(%rip)
10c80(8): mov 0xc0(%rsp),%rdi
10c88(5): call 0xffff0fd8(%rip)
10c8d(7): mov 0x8c(%rsp),%eax
10c94(2): test %eax,%eax
10c96(7): mov %eax,0x88(%rsp)
10c9d(6): jnz 0x233(%rip)
10ca3(5): nop 0x0(%rax,%rax,1)
10ca8(4): mov (%rsp),%rax
10cac(9): cmp $0x0,0x98(%rsp)
10cb5(4): lea 0x1(%rax),%rbx
10cb9(3): mov %rbx,%r12
10cbc(2): jz 0x58(%rip)
10cbe(7): mov 0x110(%rsp),%ecx
10cc5(5): mov 0x48(%rsp),%rdx
10cca(5): mov 0x8(%rsp),%rsi
10ccf(5): mov 0x30(%rsp),%rdi
10cd4(5): call 0xffffbc2c(%rip)
10cd9(2): test %eax,%eax
10cdb(7): mov %eax,0x88(%rsp)
10ce2(6): jnz 0x1ee(%rip)
10ce8(8): mov 0x110(%rsp),%r8d
10cf0(5): mov 0x48(%rsp),%rcx
10cf5(3): mov %rbx,%rdx
10cf8(5): mov 0x8(%rsp),%rsi
10cfd(3): mov %r15,%rdi
10d00(5): call 0xffffcb40(%rip)
10d05(2): test %eax,%eax
10d07(7): mov %eax,0x88(%rsp)
10d0e(6): jnz 0x1c2(%rip)
10d14(7): mov 0xa0(%r15),%edx
10d1b(4): mov (%rsp),%rsi
10d1f(3): mov %r15,%rdi
10d22(5): call 0xffffd00e(%rip)
10d27(5): mov 0x8(%rsp),%rdx
10d2c(5): mov 0x30(%rsp),%rsi
10d31(8): lea 0x88(%rsp),%rdi
10d39(2): mov %eax,%ecx
10d3b(5): call 0xffffc565(%rip)
10d40(3): test %rax,%rax
10d43(3): mov %rax,%rbp
10d46(6): jz 0x1ea(%rip)
10d4c(7): mov 0xb8(%r15),%rax
10d53(5): mov 0x10(%rsp),%rdx
10d58(9): mov $0x0,0x20(%rsp)
10d61(4): mov %rbp,0x0(%rax,%rdx,1)
10d65(5): cmp %rbx,0x40(%rsp)
10d6a(2): jle 0x1e(%rip)
10d6c(7): movsxd 0xe0(%r15),%rdx
10d73(6): add $0x8,0x10(%rsp)
10d79(5): cmp 0x20(%rsp),%rdx
10d7e(4): mov %rbx,(%rsp)
10d82(6): jnl 0xfffffd3c(%rip)
10d88(8): mov 0xa0(%rsp),%rdi
10d90(5): call 0xffff0ed0(%rip)
10d95(7): mov 0xb8(%r15),%rax
10d9c(5): mov 0x40(%rsp),%rbx
10da1(4): mov 0x0(%rax,%rbx,8),%rax
10da5(3): test %rax,%rax
10da8(6): jz 0x2dd(%rip)
10dae(5): mov 0x60(%rsp),%rbx
10db3(5): mov 0x78(%rsp),%rdx
10db8(4): lea 0x18(%rax),%rsi
10dbc(3): mov %r12,(%rbx)
10dbf(5): mov 0x68(%rsp),%rbx
10dc4(7): mov %rbx,0xb8(%r15)
10dcb(5): mov 0x70(%rsp),%rbx
10dd0(4): mov %rbx,0x48(%r15)
10dd4(4): mov 0x10(%rax),%rdi
10dd8(5): call 0xffffb178(%rip)
10ddd(3): test %rax,%rax
10de0(3): setz %al
10de3(3): movzx %al,%eax
10de6(5): jmp 0xfe(%rip)
10deb(5): nop 0x0(%rax,%rax,1)
10df0(4): lea 0xffffffff(%rbp),%rsi
10df4(4): mov %rbp,0x48(%r15)
10df8(3): mov %r15,%rdi
10dfb(5): call 0xffffcf35(%rip)
10e00(3): mov %eax,%r13d
10e03(5): mov $0x8,%edi
10e08(c): mov $0x1,0x90(%rsp)
10e14(c): mov $0x1,0x98(%rsp)
10e20(5): call 0xffff1100(%rip)
10e25(3): test %rax,%rax
10e28(8): mov %rax,0xa0(%rsp)
10e30(6): jz 0x24b(%rip)
10e36(3): mov %rbx,(%rax)
10e39(7): mov 0x110(%rsp),%ecx
10e40(8): lea 0x90(%rsp),%rbx
10e48(5): mov 0x48(%rsp),%rdx
10e4d(5): mov 0x30(%rsp),%rdi
10e52(3): mov %rbp,%r12
10e55(3): mov %rbx,%rsi
10e58(b): mov $0x0,0x88(%rsp)
10e63(5): call 0xffffba9d(%rip)
10e68(2): test %eax,%eax
10e6a(7): mov %eax,0x88(%rsp)
10e71(6): jz 0x11c(%rip)
10e77(2): jmp 0x59(%rip)
10e79(7): nop 0x0(%rax)
10e80(2): test %eax,%eax
10e82(6): jnz 0xfffffcd6(%rip)
10e88(4): mov (%r12),%rsi
10e8c(3): add %r13,%rsi
10e8f(5): jmp 0xfffffcb9(%rip)
10e94(4): nop 0x0(%rax)
10e98(3): test %rbp,%rbp
10e9b(6): jnz 0xfffffc67(%rip)
10ea1(4): mov (%rsp),%rax
10ea5(4): lea 0x1(%rax),%rbx
10ea9(3): mov %rbx,%r12
10eac(5): jmp 0xfffffe68(%rip)
10eb1(7): nop 0x0(%rax)
10eb8(8): mov 0xc0(%rsp),%rdi
10ec0(5): call 0xffff0da0(%rip)
10ec5(b): mov $0xc,0x88(%rsp)
10ed0(8): mov 0xa0(%rsp),%rdi
10ed8(5): call 0xffff0d88(%rip)
10edd(7): mov 0x88(%rsp),%eax
10ee4(8): mov 0xc8(%rsp),%rbx
10eec(9): xor $0x28,%rbx
10ef5(6): jnz 0x1b7(%rip)
10efb(7): add $0xd8,%rsp
10f02(1): pop %rbx
10f03(1): pop %rbp
10f04(2): pop %r12
10f06(2): pop %r13
10f08(2): pop %r14
10f0a(2): pop %r15
10f0c(1): ret near (%rsp)
10f0d(3): nop (%rax)
10f10(8): mov 0xc0(%rsp),%rdi
10f18(5): call 0xffff0d48(%rip)
10f1d(b): mov $0x0,0x88(%rsp)
10f28(5): jmp 0xfffffd80(%rip)
10f2d(3): nop (%rax)
10f30(7): mov 0x88(%rsp),%eax
10f37(2): test %eax,%eax
10f39(2): jnz 0xffffff97(%rip)
10f3b(7): mov 0xb8(%r15),%rax
10f42(5): mov 0x10(%rsp),%rdx
10f47(6): add $0x1,0x20(%rsp)
10f4d(8): mov $0x0,0x0(%rax,%rdx,1)
10f55(5): jmp 0xfffffe10(%rip)
10f5a(6): nop 0x0(%rax,%rax,1)
10f60(8): lea 0x90(%rsp),%rbx
10f68(4): lea 0x8(%rbp),%rsi
10f6c(3): mov %rbx,%rdi
10f6f(5): call 0xffffc141(%rip)
10f74(2): test %eax,%eax
10f76(7): mov %eax,0x88(%rsp)
10f7d(6): jnz 0xffffff67(%rip)
10f83(4): test $0x40,0x68(%rbp)
10f87(6): jz 0xfffffad5(%rip)
10f8d(9): cmp $0x0,0x98(%rsp)
10f96(2): jz 0x2c(%rip)
10f98(8): mov 0x110(%rsp),%r8d
10fa0(5): mov 0x48(%rsp),%rcx
10fa5(3): mov %r12,%rdx
10fa8(3): mov %rbx,%rsi
10fab(3): mov %r15,%rdi
10fae(5): call 0xffffc892(%rip)
10fb3(2): test %eax,%eax
10fb5(7): mov %eax,0x88(%rsp)
10fbc(6): jnz 0xffffff14(%rip)
10fc2(5): mov 0x30(%rsp),%rsi
10fc7(8): lea 0x88(%rsp),%rdi
10fcf(3): mov %r13d,%ecx
10fd2(3): mov %rbx,%rdx
10fd5(5): call 0xffffc2cb(%rip)
10fda(3): test %rax,%rax
10fdd(3): mov %rax,%rbp
10fe0(6): jz 0x87(%rip)
10fe6(7): mov 0xb8(%r15),%rax
10fed(4): mov %rbp,0x0(%rax,%r12,8)
10ff1(5): jmp 0xfffffa6b(%rip)
10ff6(4): lea 0x1(%rax),%r12
10ffa(a): mov $0x9223372036854775807,%rax
11004(3): sub %r13,%rax
11007(3): cmp %r12,%rax
1100a(2): jl 0x71(%rip)
1100c(5): lea 0x0(%r13,%r12,1),%r14
11011(a): mov $0x2305843009213693951,%rax
1101b(3): cmp %rax,%r14
1101e(2): jnbe 0x5d(%rip)
11020(5): mov 0x60(%rsp),%rax
11025(8): lea 0x0(,%r14,8),%rsi
1102d(4): mov 0x10(%rax),%rdi
11031(5): call 0xffff0f5f(%rip)
11036(3): test %rax,%rax
11039(2): jz 0x42(%rip)
1103b(5): mov 0x60(%rsp),%rcx
11040(8): lea 0x0(,%r12,8),%rdx
11048(4): lea 0x0(%rax,%r13,8),%rdi
1104c(2): xor %esi,%esi
1104e(4): mov %rax,0x10(%rcx)
11052(4): mov %r14,0x8(%rcx)
11056(5): call 0xffff0dea(%rip)
1105b(5): jmp 0xfffff981(%rip)
11060(2): xor %edi,%edi
11062(5): jmp 0xfffffeb6(%rip)
11067(7): mov 0x88(%rsp),%esi
1106e(2): test %esi,%esi
11070(6): jz 0xffffff76(%rip)
11076(5): jmp 0xfffffe5a(%rip)
1107b(5): mov $0xc,%eax
11080(5): jmp 0xfffffe64(%rip)
11085(5): mov 0x60(%rsp),%rax
1108a(3): mov %r12,(%rax)
1108d(5): mov 0x68(%rsp),%rax
11092(7): mov %rax,0xb8(%r15)
11099(5): mov 0x70(%rsp),%rax
1109e(4): mov %rax,0x48(%r15)
110a2(5): mov $0x1,%eax
110a7(5): jmp 0xfffffe3d(%rip)
110ac(5): call 0xffff0d04(%rip)

"set_regs" :
110c0(1): push %rbp
110c1(3): mov %rsp,%rbp
110c4(2): push %r15
110c6(2): push %r14
110c8(2): push %r13
110ca(2): push %r12
110cc(3): mov %rcx,%r13
110cf(1): push %rbx
110d0(3): mov %rsi,%r12
110d3(7): sub $0xb8,%rsp
110da(7): mov %rdx,0xffffff68(%rbp)
110e1(8): mov $0x0,0xffffffb0(%rbp)
110e9(9): mov $0x28,%rax
110f2(4): mov %rax,0xffffffc8(%rbp)
110f6(2): xor %eax,%eax
110f8(3): mov (%rdi),%rax
110fb(3): test %r8b,%r8b
110fe(8): mov $0x2,0xffffffb8(%rbp)
11106(8): mov $0x0,0xffffffc0(%rbp)
1110e(7): mov %rax,0xffffff70(%rbp)
11115(6): jz 0x7a8(%rip)
1111b(5): mov $0x60,%edi
11120(5): call 0xffff0e00(%rip)
11125(4): lea 0xffffffb0(%rbp),%rcx
11129(3): test %rax,%rax
1112c(4): mov %rax,0xffffffc0(%rbp)
11130(7): mov %rcx,0xffffff78(%rbp)
11137(6): jz 0x725(%rip)
1113d(7): mov 0xffffff70(%rbp),%rax
11144(4): pxor %xmm0,%xmm0
11148(8): mov $0x0,0xffffffa0(%rbp)
11150(7): mov 0x90(%rax),%rbx
11157(7): mov 0xffffff68(%rbp),%rax
1115e(4): movaps %xmm0,0xffffff90(%rbp)
11162(4): shl/sal $0x4,%rax
11166(6): cmp $0xfbf,%rax
1116c(7): mov %rax,0xffffff48(%rbp)
11173(6): jnbe 0x6f3(%rip)
11179(4): add $0x10,%rax
1117d(7): mov $0x0,0xffffff37(%rbp)
11184(3): sub %rax,%rsp
11187(5): lea 0xf(%rsp),%rax
1118c(4): and $0xfffffff0,%rax
11190(7): mov %rax,0xffffff40(%rbp)
11197(7): mov 0xffffff48(%rbp),%rdx
1119e(7): mov 0xffffff40(%rbp),%rdi
111a5(3): mov %r13,%rsi
111a8(5): call 0xffff0d38(%rip)
111ad(4): lea 0xffffff90(%rbp),%rax
111b1(4): mov 0x0(%r13),%rcx
111b5(7): mov %rax,0xffffff58(%rbp)
111bc(4): add $0x10,%rax
111c0(4): mov %rcx,0xffffff88(%rbp)
111c4(7): mov %rax,0xffffff38(%rbp)
111cb(4): lea 0xffffff88(%rbp),%rax
111cf(7): mov %rax,0xffffff50(%rbp)
111d6(5): jmp 0xe3(%rip)
111db(5): nop 0x0(%rax,%rax,1)
111e0(3): cmp $0x9,%esi
111e3(6): jz 0x1ed(%rip)
111e9(3): cmp %rcx,%rax
111ec(2): jnz 0x10(%rip)
111ee(8): cmp %rbx,0xb0(%r12)
111f6(6): jz 0x3da(%rip)
111fc(8): mov 0x98(%r12),%r14
11204(3): mov (%r14),%rdi
11207(4): lea 0x0(%rdi,%r9,1),%rsi
1120b(4): movzx 0x8(%rsi),%eax
1120f(2): test $0x8,%al
11211(6): jnz 0x10f(%rip)
11217(4): test $0x10,0xa(%rsi)
1121b(6): jnz 0x205(%rip)
11221(2): cmp $0x4,%al
11223(6): jz 0x23d(%rip)
11229(4): mov 0xffffff88(%rbp),%rcx
1122d(3): mov %rcx,%rdx
11230(3): mov %r12,%rdi
11233(7): mov %rcx,0xffffff60(%rbp)
1123a(5): call 0xffffcbe6(%rip)
1123f(2): test %al,%al
11241(7): mov 0xffffff60(%rbp),%rcx
11248(6): jz 0x450(%rip)
1124e(4): mov 0x18(%r14),%rax
11252(4): lea 0x1(%rcx),%rdx
11256(4): mov 0x0(%rax,%r15,8),%rbx
1125a(8): cmp $0x0,0xffffff78(%rbp)
11262(4): mov %rdx,0xffffff88(%rbp)
11266(2): jz 0x3e(%rip)
11268(8): cmp 0xa8(%r12),%rdx
11270(6): jnle 0x436(%rip)
11276(8): mov 0xb8(%r12),%rax
1127e(4): mov 0x0(%rax,%rdx,8),%rax
11282(3): test %rax,%rax
11285(6): jz 0x421(%rip)
1128b(4): mov 0x10(%rax),%rdi
1128f(4): lea 0x18(%rax),%rsi
11293(3): mov %rbx,%rdx
11296(5): call 0xffffacba(%rip)
1129b(3): test %rax,%rax
1129e(6): jz 0x408(%rip)
112a4(8): mov $0x0,0xffffff98(%rbp)
112ac(3): test %rbx,%rbx
112af(6): js 0x3db(%rip)
112b5(4): mov 0xffffff88(%rbp),%rcx
112b9(4): mov 0x8(%r13),%rax
112bd(3): cmp %rcx,%rax
112c0(6): jl 0x4f0(%rip)
112c6(7): mov 0xffffff70(%rbp),%rdi
112cd(3): mov %rbx,%r9
112d0(3): mov %rbx,%r15
112d3(4): shl/sal $0x4,%r9
112d7(3): mov (%rdi),%rdx
112da(3): add %r9,%rdx
112dd(4): movzx 0x8(%rdx),%esi
112e1(3): cmp $0x8,%esi
112e4(6): jnz 0xfffffefc(%rip)
112ea(3): mov (%rdx),%rdx
112ed(4): add $0x1,%rdx
112f1(7): cmp %rdx,0xffffff68(%rbp)
112f8(6): jle 0xfffffef1(%rip)
112fe(4): shl/sal $0x4,%rdx
11302(3): add %r13,%rdx
11305(8): mov $0xffffffff,0x8(%rdx)
1130d(3): mov %rcx,(%rdx)
11310(4): mov 0x8(%r13),%rax
11314(5): jmp 0xfffffed5(%rip)
11319(7): nop 0x0(%rax)
11320(8): mov 0xb8(%r12),%rax
11328(4): mov 0xffffff88(%rbp),%rdx
1132c(3): mov %rbx,%rsi
1132f(7): mov 0xffffff58(%rbp),%rdi
11336(4): mov 0x0(%rax,%rdx,8),%r9
1133a(4): mov 0x28(%r14),%rax
1133e(4): lea 0x0(%rbx,%rbx,2),%rdx
11342(7): mov %r9,0xffffff60(%rbp)
11349(4): lea 0x0(%rax,%rdx,8),%r15
1134d(5): call 0xffff96c3(%rip)
11352(2): test %al,%al
11354(7): mov 0xffffff60(%rbp),%r9
1135b(6): jz 0x4dd(%rip)
11361(4): mov 0x8(%r15),%r10
11365(3): test %r10,%r10
11368(6): jle 0x330(%rip)
1136e(4): mov 0x10(%r15),%r15
11372(4): mov 0x10(%r9),%r11
11376(4): lea 0x18(%r9),%r14
1137a(7): mov $0xffffffff,%rbx
11381(3): xor %r9d,%r9d
11384(7): mov %r12,0xffffff60(%rbp)
1138b(5): nop 0x0(%rax,%rax,1)
11390(4): mov 0x0(%r15,%r9,8),%r12
11394(3): mov %r14,%rsi
11397(3): mov %r11,%rdi
1139a(3): mov %r12,%rdx
1139d(5): call 0xffffabb3(%rip)
113a2(3): test %rax,%rax
113a5(2): jz 0xf(%rip)
113a7(4): cmp $0xffffffff,%rbx
113ab(6): jnz 0x155(%rip)
113b1(3): mov %r12,%rbx
113b4(4): add $0x1,%r9
113b8(3): cmp %r9,%r10
113bb(2): jnz 0xffffffd5(%rip)
113bd(7): mov 0xffffff60(%rbp),%r12
113c4(5): jmp 0xfffffee8(%rip)
113c9(7): nop 0x0(%rax)
113d0(3): mov (%rdx),%rdi
113d3(4): lea 0x1(%rdi),%rsi
113d7(7): cmp %rsi,0xffffff68(%rbp)
113de(6): jle 0xfffffe0b(%rip)
113e4(4): shl/sal $0x4,%rsi
113e8(5): lea 0x0(%r13,%rsi,1),%rax
113ed(3): cmp %rcx,(%rax)
113f0(6): jl 0x380(%rip)
113f6(4): test $0x8,0xa(%rdx)
113fa(2): jz 0x14(%rip)
113fc(7): mov 0xffffff40(%rbp),%rdi
11403(5): cmp $0xffffffff,0x0(%rdi,%rsi,1)
11408(6): jnz 0x3f3(%rip)
1140e(4): mov %rcx,0x8(%rax)
11412(4): mov 0x8(%r13),%rax
11416(5): jmp 0xfffffdd3(%rip)
1141b(5): nop 0x0(%rax,%rax,1)
11420(4): mov 0xffffff88(%rbp),%r8
11424(7): lea 0xd8(%r14),%rsi
1142b(3): mov %r12,%rcx
1142e(3): mov %rbx,%rdx
11431(7): mov %r9,0xffffff60(%rbp)
11438(5): call 0xfffff2c8(%rip)
1143d(3): movsxd %eax,%rcx
11440(3): test %rcx,%rcx
11443(6): jnz 0x1fe(%rip)
11449(7): mov 0xffffff60(%rbp),%r9
11450(3): mov (%r14),%rsi
11453(4): mov 0xffffff88(%rbp),%rcx
11457(3): add %r9,%rsi
1145a(5): jmp 0xfffffdd3(%rip)
1145f(1): nop 
11460(3): mov (%rsi),%rax
11463(4): add $0x1,%rax
11467(4): shl/sal $0x4,%rax
1146b(3): add %r13,%rax
1146e(4): mov 0x8(%rax),%rdx
11472(3): mov (%rax),%rdi
11475(3): mov %rdx,%rcx
11478(3): sub %rdi,%rcx
1147b(8): cmp $0x0,0xffffff78(%rbp)
11483(6): jz 0x1b5(%rip)
11489(4): cmp $0xffffffff,%rdi
1148d(6): jz 0x219(%rip)
11493(4): cmp $0xffffffff,%rdx
11497(6): jz 0x20f(%rip)
1149d(3): test %rcx,%rcx
114a0(6): jz 0x250(%rip)
114a6(4): mov 0xffffff88(%rbp),%r15
114aa(5): mov 0x30(%r12),%rdx
114af(5): mov 0x8(%r12),%rax
114b4(3): sub %r15,%rdx
114b7(3): cmp %rdx,%rcx
114ba(6): jnle 0x1ec(%rip)
114c0(4): lea 0x0(%rax,%r15,1),%rsi
114c4(3): add %rax,%rdi
114c7(3): mov %rcx,%rdx
114ca(7): mov %rcx,0xffffff60(%rbp)
114d1(5): call 0xffff09bf(%rip)
114d6(2): test %eax,%eax
114d8(7): mov 0xffffff60(%rbp),%rcx
114df(6): jnz 0x1c7(%rip)
114e5(4): mov 0x18(%r14),%rax
114e9(4): lea 0x0(%r15,%rcx,1),%rdx
114ed(4): mov 0x0(%rax,%rbx,8),%rbx
114f1(5): jmp 0xfffffd69(%rip)
114f6(a): nop 0x0(%rax,%rax,1)
11500(7): mov 0xffffff38(%rbp),%rsi
11507(4): mov 0xffffff98(%rbp),%rdi
1150b(3): mov %rbx,%rdx
1150e(3): mov %r12,%r14
11511(7): mov 0xffffff60(%rbp),%r12
11518(5): call 0xffffaa38(%rip)
1151d(3): test %rax,%rax
11520(6): jnz 0x1c0(%rip)
11526(7): mov 0xffffff78(%rbp),%rcx
1152d(3): test %rcx,%rcx
11530(6): jz 0xfffffd7c(%rip)
11536(3): mov (%rcx),%r15
11539(4): mov 0xffffff88(%rbp),%rdx
1153d(4): lea 0x1(%r15),%rax
11541(4): cmp 0x8(%rcx),%rax
11545(3): mov %rax,(%rcx)
11548(6): jz 0x385(%rip)
1154e(4): mov 0x10(%rcx),%rax
11552(4): lea 0x0(%r15,%r15,2),%r15
11556(4): shl/sal $0x4,%r15
1155a(3): add %rax,%r15
1155d(4): mov %r14,0x8(%r15)
11561(7): mov 0xffffff48(%rbp),%r14
11568(3): mov %rdx,(%r15)
1156b(3): mov %r14,%rdi
1156e(5): call 0xffff09b2(%rip)
11573(3): test %rax,%rax
11576(4): mov %rax,0x10(%r15)
1157a(2): jz 0x28(%rip)
1157c(3): mov %r14,%rdx
1157f(3): mov %r13,%rsi
11582(3): mov %rax,%rdi
11585(5): call 0xffff095b(%rip)
1158a(7): mov 0xffffff58(%rbp),%rsi
11591(4): lea 0x18(%r15),%rdi
11595(5): call 0xffffbb1b(%rip)
1159a(2): test %eax,%eax
1159c(6): jz 0xfffffd10(%rip)
115a2(4): mov 0xffffffa0(%rbp),%rdi
115a6(5): call 0xffff06ba(%rip)
115ab(7): cmp $0x0,0xffffff37(%rbp)
115b2(6): jnz 0x399(%rip)
115b8(7): mov 0xffffff78(%rbp),%rdi
115bf(5): call 0xffffe051(%rip)
115c4(5): mov $0xc,%eax
115c9(5): jmp 0x210(%rip)
115ce(2): nop 
115d0(8): cmp $0x0,0xffffff78(%rbp)
115d8(6): jz 0x334(%rip)
115de(7): mov 0xffffff68(%rbp),%rcx
115e5(3): test %rcx,%rcx
115e8(2): jz 0x22(%rip)
115ea(3): mov %r13,%rax
115ed(2): xor %edx,%edx
115ef(1): nop 
115f0(4): cmp $0x0,(%rax)
115f4(2): js 0x9(%rip)
115f6(5): cmp $0xffffffff,0x8(%rax)
115fb(2): jz 0x55(%rip)
115fd(4): add $0x1,%rdx
11601(4): add $0x10,%rax
11605(3): cmp %rdx,%rcx
11608(2): jnz 0xffffffe8(%rip)
1160a(4): mov 0xffffffa0(%rbp),%rdi
1160e(5): call 0xffff0652(%rip)
11613(7): cmp $0x0,0xffffff37(%rbp)
1161a(6): jnz 0x37a(%rip)
11620(7): mov 0xffffff78(%rbp),%rdi
11627(5): call 0xffffdfe9(%rip)
1162c(2): xor %eax,%eax
1162e(5): jmp 0x1ab(%rip)
11633(5): nop 0x0(%rax,%rax,1)
11638(3): test %rcx,%rcx
1163b(6): jz 0xb5(%rip)
11641(4): mov 0xffffff88(%rbp),%r15
11645(5): jmp 0xfffffea0(%rip)
1164a(6): nop 0x0(%rax,%rax,1)
11650(7): mov 0xffffff78(%rbp),%rdi
11657(7): mov 0xffffff58(%rbp),%r9
1165e(3): mov %r13,%r8
11661(7): mov 0xffffff68(%rbp),%rcx
11668(7): mov 0xffffff50(%rbp),%rdx
1166f(4): lea 0x10(%rdi),%rsi
11673(5): call 0xffffdfed(%rip)
11678(3): mov %rax,%r9
1167b(3): mov %rax,%rbx
1167e(3): mov %rax,%r15
11681(4): shl/sal $0x4,%r9
11685(5): jmp 0xfffffb77(%rip)
1168a(4): cmp $0xfffffffe,%rbx
1168e(6): jz 0x1aa(%rip)
11694(4): nop 0x0(%rax)
11698(8): cmp $0x0,0xffffff78(%rbp)
116a0(6): jz 0x2bc(%rip)
116a6(7): mov 0xffffff78(%rbp),%rdi
116ad(7): mov 0xffffff68(%rbp),%rcx
116b4(4): lea 0xffffff88(%rbp),%rdx
116b8(7): mov 0xffffff58(%rbp),%r9
116bf(3): mov %r13,%r8
116c2(4): lea 0x10(%rdi),%rsi
116c6(5): call 0xffffdf9a(%rip)
116cb(4): mov 0xffffff88(%rbp),%rcx
116cf(3): mov %rax,%rbx
116d2(5): jmp 0xfffffaf9(%rip)
116d7(9): nop 0x0(%rax,%rax,1)
116e0(3): mov %r14,%rbx
116e3(5): jmp 0xfffffbc9(%rip)
116e8(8): nop 0x0(%rax,%rax,1)
116f0(7): mov 0xffffff58(%rbp),%rdi
116f7(3): mov %rbx,%rsi
116fa(7): mov %r9,0xffffff60(%rbp)
11701(5): call 0xffff930f(%rip)
11706(2): test %al,%al
11708(6): jz 0x130(%rip)
1170e(4): mov 0x28(%r14),%rdx
11712(4): lea 0x0(%rbx,%rbx,2),%rax
11716(4): mov 0xffffff88(%rbp),%rcx
1171a(4): lea 0x0(%rdx,%rax,8),%rax
1171e(7): mov %rcx,0xffffff28(%rbp)
11725(4): mov 0x10(%rax),%rax
11729(3): mov (%rax),%rbx
1172c(8): mov 0xb8(%r12),%rax
11734(4): mov 0x0(%rax,%rcx,8),%rax
11738(3): mov %rbx,%rdx
1173b(4): mov 0x10(%rax),%rdi
1173f(4): lea 0x18(%rax),%rsi
11743(5): call 0xffffa80d(%rip)
11748(3): test %rax,%rax
1174b(6): jnz 0xfffffb61(%rip)
11751(7): mov 0xffffff60(%rbp),%r9
11758(3): mov (%r14),%rsi
1175b(7): mov 0xffffff28(%rbp),%rcx
11762(3): add %r9,%rsi
11765(5): jmp 0xfffffac8(%rip)
1176a(6): nop 0x0(%rax,%rax,1)
11770(7): mov 0xffffff48(%rbp),%rdx
11777(7): mov 0xffffff40(%rbp),%rdi
1177e(3): mov %r13,%rsi
11781(4): mov %rcx,0x8(%rax)
11785(7): mov %r9,0xffffff28(%rbp)
1178c(7): mov %rcx,0xffffff60(%rbp)
11793(5): call 0xffff074d(%rip)
11798(4): mov 0x8(%r13),%rax
1179c(7): mov 0xffffff60(%rbp),%rcx
117a3(7): mov 0xffffff28(%rbp),%r9
117aa(5): jmp 0xfffffa3f(%rip)
117af(1): nop 
117b0(4): mov 0xffffffa0(%rbp),%rdi
117b4(5): call 0xffff04ac(%rip)
117b9(7): cmp $0x0,0xffffff37(%rbp)
117c0(6): jnz 0xdc(%rip)
117c6(7): mov 0xffffff78(%rbp),%rdi
117cd(3): test %rdi,%rdi
117d0(2): jz 0x7(%rip)
117d2(5): call 0xffffde3e(%rip)
117d7(2): xor %eax,%eax
117d9(4): mov 0xffffffc8(%rbp),%rbx
117dd(9): xor $0x28,%rbx
117e6(6): jnz 0x1bf(%rip)
117ec(4): lea 0xffffffd8(%rbp),%rsp
117f0(1): pop %rbx
117f1(2): pop %r12
117f3(2): pop %r13
117f5(2): pop %r14
117f7(2): pop %r15
117f9(1): pop %rbp
117fa(1): ret near (%rsp)
117fb(7): mov 0xffffff48(%rbp),%rdx
11802(3): mov %rdi,%rsi
11805(3): mov %r13,%rdi
11808(7): mov %rcx,0xffffff28(%rbp)
1180f(7): mov %r9,0xffffff60(%rbp)
11816(5): call 0xffff06ca(%rip)
1181b(4): mov 0x8(%r13),%rax
1181f(7): mov 0xffffff60(%rbp),%r9
11826(7): mov 0xffffff28(%rbp),%rcx
1182d(5): jmp 0xfffff9bc(%rip)
11832(6): nop 0x0(%rax,%rax,1)
11838(4): mov 0xffffffa0(%rbp),%rdi
1183c(5): call 0xffff0424(%rip)
11841(7): cmp $0x0,0xffffff37(%rbp)
11848(6): jnz 0x103(%rip)
1184e(8): cmp $0x0,0xffffff78(%rbp)
11856(6): jnz 0xfffffd62(%rip)
1185c(5): mov $0xc,%eax
11861(5): jmp 0xffffff78(%rip)
11866(7): mov 0xffffff48(%rbp),%rdi
1186d(5): call 0xffff06b3(%rip)
11872(3): test %rax,%rax
11875(7): mov %rax,0xffffff40(%rbp)
1187c(7): mov $0x1,0xffffff37(%rbp)
11883(6): jnz 0xfffff914(%rip)
11889(7): mov 0xffffff78(%rbp),%rdi
11890(3): test %rdi,%rdi
11893(2): jz 0xffffffc9(%rip)
11895(5): call 0xffffdd7b(%rip)
1189a(2): jmp 0xffffffc2(%rip)
1189c(7): mov 0xffffff40(%rbp),%rdi
118a3(5): call 0xffff03bd(%rip)
118a8(7): mov 0xffffff78(%rbp),%rdi
118af(3): test %rdi,%rdi
118b2(6): jnz 0xffffff20(%rip)
118b8(5): jmp 0xffffff1f(%rip)
118bd(b): mov $0x0,0xffffff78(%rbp)
118c8(5): jmp 0xfffff875(%rip)
118cd(4): lea 0x0(%rax,%rax,2),%rsi
118d1(7): mov 0xffffff78(%rbp),%rax
118d8(7): mov %rdx,0xffffff60(%rbp)
118df(4): shl/sal $0x5,%rsi
118e3(4): mov 0x10(%rax),%rdi
118e7(5): call 0xffff06a9(%rip)
118ec(3): test %rax,%rax
118ef(2): jz 0x46(%rip)
118f1(7): mov 0xffffff78(%rbp),%rcx
118f8(7): mov 0xffffff60(%rbp),%rdx
118ff(4): shl/sal $0x1,0x8(%rcx)
11903(4): mov %rax,0x10(%rcx)
11907(5): jmp 0xfffffc4b(%rip)
1190c(4): mov 0xffffffa0(%rbp),%rdi
11910(5): call 0xffff0350(%rip)
11915(7): cmp $0x0,0xffffff37(%rbp)
1191c(6): jz 0xfffffebb(%rip)
11922(7): mov 0xffffff40(%rbp),%rdi
11929(5): call 0xffff0337(%rip)
1192e(2): xor %eax,%eax
11930(5): jmp 0xfffffea9(%rip)
11935(4): mov 0xffffffa0(%rbp),%rdi
11939(5): call 0xffff0327(%rip)
1193e(7): cmp $0x0,0xffffff37(%rbp)
11945(6): jz 0xfffffc73(%rip)
1194b(7): mov 0xffffff40(%rbp),%rdi
11952(5): call 0xffff030e(%rip)
11957(5): jmp 0xfffffef7(%rip)
1195c(4): mov 0xffffffa0(%rbp),%rdi
11960(5): call 0xffff0300(%rip)
11965(7): cmp $0x0,0xffffff37(%rbp)
1196c(5): mov $0x1,%eax
11971(6): jz 0xfffffe68(%rip)
11977(7): mov 0xffffff40(%rbp),%rdi
1197e(6): mov %eax,0xffffff78(%rbp)
11984(5): call 0xffff02dc(%rip)
11989(6): mov 0xffffff78(%rbp),%eax
1198f(5): jmp 0xfffffe4a(%rip)
11994(7): mov 0xffffff40(%rbp),%rdi
1199b(5): call 0xffff02c5(%rip)
119a0(5): jmp 0xfffffc80(%rip)
119a5(5): call 0xffff040b(%rip)

"get_subexp_sub.isra.32" :
119b0(2): push %r15
119b2(2): push %r14
119b4(3): mov %rcx,%r14
119b7(2): push %r13
119b9(2): push %r12
119bb(3): mov %rsi,%r13
119be(1): push %rbp
119bf(1): push %rbx
119c0(4): lea 0x10(%rdx),%rsi
119c4(3): mov %rdx,%rbp
119c7(3): mov %r8,%r9
119ca(3): mov %r8,%r12
119cd(4): sub $0x20,%rsp
119d1(4): mov 0x8(%rdx),%rcx
119d5(3): mov %r14,%r8
119d8(2): push $0x8
119da(3): mov (%rdx),%rdx
119dd(3): mov %rdi,%rbx
119e0(5): call 0xffffef80(%rip)
119e5(2): test %eax,%eax
119e7(1): pop %rdx
119e8(1): pop %rcx
119e9(2): jz 0x17(%rip)
119eb(4): add $0x18,%rsp
119ef(1): pop %rbx
119f0(1): pop %rbp
119f1(2): pop %r12
119f3(2): pop %r13
119f5(2): pop %r14
119f7(2): pop %r15
119f9(1): ret near (%rsp)
119fa(6): nop 0x0(%rax,%rax,1)
11a00(7): mov 0xc8(%rbx),%rax
11a07(7): mov 0xd0(%rbx),%rdx
11a0e(4): mov 0x8(%rbp),%r15
11a12(4): mov 0x0(%r13),%rcx
11a16(7): mov 0xd8(%rbx),%rdi
11a1d(3): cmp %rdx,%rax
11a20(3): mov %r15,%rsi
11a23(6): jnl 0x9d(%rip)
11a29(4): lea 0x0(%rax,%rax,4),%rdx
11a2d(4): shl/sal $0x3,%rdx
11a31(3): test %rax,%rax
11a34(2): jle 0xd(%rip)
11a36(5): lea 0xffffffd8(%rdi,%rdx,1),%r8
11a3b(4): cmp 0x8(%r8),%r12
11a3f(2): jz 0x71(%rip)
11a41(3): add %rdx,%rdi
11a44(2): xor %edx,%edx
11a46(3): cmp %rcx,%r15
11a49(3): setz %dl
11a4c(4): add $0x1,%rax
11a50(3): mov %r14,(%rdi)
11a53(2): neg %edx
11a55(4): mov %r12,0x8(%rdi)
11a59(4): mov %rcx,0x10(%rdi)
11a5d(4): mov %dx,0x22(%rdi)
11a61(4): mov %r15,0x18(%rdi)
11a65(7): mov %rax,0xc8(%rbx)
11a6c(4): mov $0x0,0x20(%rdi)
11a70(3): mov %r15,%rax
11a73(7): movsxd 0xe0(%rbx),%rdx
11a7a(3): sub %rcx,%rax
11a7d(3): cmp %rax,%rdx
11a80(2): jnl 0xc(%rip)
11a82(3): sub %ecx,%r15d
11a85(7): mov %r15d,0xe0(%rbx)
11a8c(3): add %r12,%rsi
11a8f(4): sub 0x0(%r13),%rsi
11a93(4): add $0x18,%rsp
11a97(3): mov %rbx,%rdi
11a9a(1): pop %rbx
11a9b(1): pop %rbp
11a9c(2): pop %r12
11a9e(2): pop %r13
11aa0(2): pop %r14
11aa2(2): pop %r15
11aa4(5): jmp 0xffff9b3c(%rip)
11aa9(7): nop 0x0(%rax)
11ab0(5): mov $0x1,0x20(%r8)
11ab5(2): jmp 0xffffff8c(%rip)
11ab7(9): nop 0x0(%rax,%rax,1)
11ac0(4): lea 0x0(%rdx,%rdx,4),%rsi
11ac4(5): mov %rcx,0x8(%rsp)
11ac9(4): shl/sal $0x4,%rsi
11acd(5): call 0xffff04c3(%rip)
11ad2(3): test %rax,%rax
11ad5(5): mov 0x8(%rsp),%rcx
11ada(2): jz 0x56(%rip)
11adc(7): mov 0xc8(%rbx),%rsi
11ae3(7): mov 0xd0(%rbx),%rdx
11aea(7): mov %rax,0xd8(%rbx)
11af1(5): mov %rcx,0x8(%rsp)
11af6(4): lea 0x0(%rsi,%rsi,4),%rsi
11afa(4): lea 0x0(%rdx,%rdx,4),%rdx
11afe(4): lea 0x0(%rax,%rsi,8),%rdi
11b02(4): shl/sal $0x3,%rdx
11b06(2): xor %esi,%esi
11b08(5): call 0xffff0338(%rip)
11b0d(7): shl/sal $0x1,0xd0(%rbx)
11b14(7): mov 0xc8(%rbx),%rax
11b1b(7): mov 0xd8(%rbx),%rdi
11b22(4): mov 0x8(%rbp),%rsi
11b26(5): mov 0x8(%rsp),%rcx
11b2b(5): jmp 0xfffffefe(%rip)
11b30(7): mov 0xd8(%rbx),%rdi
11b37(5): call 0xffff0129(%rip)
11b3c(5): mov $0xc,%eax
11b41(5): jmp 0xfffffeaa(%rip)

"transit_state_bkref.isra.34" :
11b50(2): push %r15
11b52(2): push %r14
11b54(2): push %r13
11b56(2): push %r12
11b58(1): push %rbp
11b59(1): push %rbx
11b5a(7): sub $0xb8,%rsp
11b61(4): mov 0x48(%rdi),%r15
11b65(9): mov $0x28,%rax
11b6e(8): mov %rax,0xa8(%rsp)
11b76(2): xor %eax,%eax
11b78(4): cmp $0x0,(%rsi)
11b7c(7): mov 0x98(%rdi),%rax
11b83(5): mov %rsi,0x48(%rsp)
11b88(5): mov %rdx,0x40(%rsp)
11b8d(5): mov %rax,0x38(%rsp)
11b92(6): jle 0x32e(%rip)
11b98(8): lea 0x0(,%r15,8),%rax
11ba0(3): mov %rdi,%r14
11ba3(8): mov $0x0,(%rsp)
11bab(5): mov %r15,0x8(%rsp)
11bb0(5): mov %rax,0x60(%rsp)
11bb5(8): lea 0x90(%rsp),%rax
11bbd(5): mov %rax,0x68(%rsp)
11bc2(8): lea 0x8c(%rsp),%rax
11bca(5): mov %rax,0x78(%rsp)
11bcf(2): jmp 0x48(%rip)
11bd1(7): nop 0x0(%rax)
11bd8(2): test $0x1,%al
11bda(2): jz 0x26(%rip)
11bdc(3): and $0x8,%edx
11bdf(2): jnz 0x21(%rip)
11be1(3): test $0x20,%cl
11be4(2): jz 0x6(%rip)
11be6(2): test $0x2,%al
11be8(2): jz 0x18(%rip)
11bea(6): and $0x80,%ecx
11bf0(6): jz 0xa0(%rip)
11bf6(2): test $0x8,%al
11bf8(6): jnz 0x98(%rip)
11bfe(2): nop 
11c00(5): mov 0x48(%rsp),%rdi
11c05(5): add $0x1,(%rsp)
11c0a(4): mov (%rsp),%rax
11c0e(3): cmp (%rdi),%rax
11c11(6): jnl 0x2af(%rip)
11c17(5): mov 0x40(%rsp),%rax
11c1c(4): mov (%rsp),%rdi
11c20(3): mov (%rax),%rax
11c23(4): mov 0x0(%rax,%rdi,8),%r13
11c27(5): mov 0x38(%rsp),%rdi
11c2c(3): mov (%rdi),%rax
11c2f(3): mov %r13,%rbx
11c32(4): shl/sal $0x4,%rbx
11c36(3): add %rbx,%rax
11c39(4): cmp $0x4,0x8(%rax)
11c3d(2): jnz 0xffffffc3(%rip)
11c3f(3): mov 0x8(%rax),%ebp
11c42(6): test $0x3ff00,%ebp
11c48(2): jz 0x48(%rip)
11c4a(7): mov 0xa0(%r14),%edx
11c51(5): mov 0x8(%rsp),%rsi
11c56(3): mov %r14,%rdi
11c59(5): call 0xffffc0d7(%rip)
11c5e(2): mov %ebp,%edx
11c60(3): shr $0x8,%edx
11c63(2): mov %edx,%ecx
11c65(5): and $0x3ff,%cx
11c6a(3): test $0x4,%dl
11c6d(6): jnz 0xffffff6b(%rip)
11c73(3): and $0x8,%edx
11c76(6): jz 0xffffff6b(%rip)
11c7c(2): test $0x1,%al
11c7e(6): jz 0xffffff63(%rip)
11c84(5): jmp 0xffffff7c(%rip)
11c89(7): nop 0x0(%rax)
11c90(7): mov 0xc8(%r14),%rdi
11c97(7): mov 0x98(%r14),%rax
11c9e(2): xor %ecx,%ecx
11ca0(4): mov 0x8(%r14),%r10
11ca4(5): mov 0x8(%rsp),%r9
11ca9(5): mov %rdi,0x70(%rsp)
11cae(5): mov %rax,0x50(%rsp)
11cb3(3): cmp %rdi,%rcx
11cb6(2): jnl 0x55(%rip)
11cb8(4): lea 0x0(%rcx,%rdi,1),%rax
11cbc(7): mov 0xd8(%r14),%r11
11cc3(3): mov %rax,%rsi
11cc6(4): shr $0x3f,%rsi
11cca(3): add %rax,%rsi
11ccd(3): sar $0x1,%rsi
11cd0(4): lea 0x0(%rsi,%rsi,4),%rax
11cd4(5): cmp 0x8(%r11,%rax,8),%r9
11cd9(2): jle 0x2d(%rip)
11cdb(5): jmp 0x1cd(%rip)
11ce0(4): lea 0x0(%rsi,%rcx,1),%rdx
11ce4(3): mov %rdx,%rax
11ce7(4): shr $0x3f,%rax
11ceb(3): add %rdx,%rax
11cee(3): sar $0x1,%rax
11cf1(4): lea 0x0(%rax,%rax,4),%rdx
11cf5(3): mov %rax,%r8
11cf8(5): cmp 0x8(%r11,%rdx,8),%r9
11cfd(6): jnle 0x1b3(%rip)
11d03(3): mov %rax,%rsi
11d06(3): cmp %rcx,%rsi
11d09(2): jnle 0xffffffd7(%rip)
11d0b(5): cmp %rcx,0x70(%rsp)
11d10(2): jle 0x26(%rip)
11d12(7): mov 0xd8(%r14),%rdx
11d19(4): lea 0x0(%rcx,%rcx,4),%rax
11d1d(5): mov 0x8(%rsp),%rdi
11d22(4): lea 0x0(%rdx,%rax,8),%rax
11d26(4): cmp %rdi,0x8(%rax)
11d2a(2): jnz 0xc(%rip)
11d2c(4): cmp $0xffffffff,%rcx
11d30(6): jnz 0x1d6(%rip)
11d36(5): mov 0x50(%rsp),%rax
11d3b(8): cmp $0x0,0xe8(%r14)
11d43(3): mov (%rax),%rdx
11d46(4): mov 0x0(%rdx,%rbx,1),%rax
11d4a(5): mov %rax,0x58(%rsp)
11d4f(6): jle 0x1bc(%rip)
11d55(5): mov %r13,0x30(%rsp)
11d5a(9): mov $0x0,0x28(%rsp)
11d63(3): mov %r10,%r13
11d66(7): mov 0xf8(%r14),%rax
11d6d(5): mov 0x28(%rsp),%rbx
11d72(5): mov 0x58(%rsp),%rdi
11d77(4): mov 0x0(%rax,%rbx,8),%rbx
11d7b(4): mov 0x8(%rbx),%rax
11d7f(4): shl/sal $0x4,%rax
11d83(4): cmp 0x0(%rdx,%rax,1),%rdi
11d87(2): jz 0x29(%rip)
11d89(6): add $0x1,0x28(%rsp)
11d8f(5): mov 0x28(%rsp),%rax
11d94(7): cmp 0xe8(%r14),%rax
11d9b(6): jnl 0x676(%rip)
11da1(5): mov 0x50(%rsp),%rax
11da6(3): mov (%rax),%rdx
11da9(2): jmp 0xffffffbd(%rip)
11dab(5): nop 0x0(%rax,%rax,1)
11db0(5): cmp $0x0,0x20(%rbx)
11db5(3): mov (%rbx),%r11
11db8(6): jle 0x66a(%rip)
11dbe(5): mov 0x8(%rsp),%rcx
11dc3(3): mov %r13,%r8
11dc6(2): xor %ebp,%ebp
11dc8(3): mov %rbx,%r13
11dcb(3): mov %rcx,%rbx
11dce(2): jmp 0x6e(%rip)
11dd0(4): lea 0x0(%r8,%r11,1),%rsi
11dd4(4): lea 0x0(%r8,%rbx,1),%rdi
11dd8(5): mov %r9,0x20(%rsp)
11ddd(5): mov %r11,0x18(%rsp)
11de2(5): mov %r8,0x10(%rsp)
11de7(5): call 0xffff00a9(%rip)
11dec(2): test %eax,%eax
11dee(5): mov 0x10(%rsp),%r8
11df3(5): mov 0x18(%rsp),%r11
11df8(5): mov 0x20(%rsp),%r9
11dfd(6): jnz 0x4cb(%rip)
11e03(5): mov 0x8(%rsp),%r8
11e08(5): mov 0x30(%rsp),%rcx
11e0d(3): mov %r9,%rdx
11e10(3): mov %r13,%rsi
11e13(3): mov %r14,%rdi
11e16(5): call 0xfffffb9a(%rip)
11e1b(3): cmp $0x1,%eax
11e1e(4): mov 0x8(%r14),%r8
11e22(6): jnbe 0xa6(%rip)
11e28(4): add $0x1,%rbp
11e2c(4): cmp 0x20(%r13),%rbp
11e30(3): mov %r15,%r11
11e33(3): mov %r12,%rbx
11e36(6): jnl 0x2b2(%rip)
11e3c(4): mov 0x28(%r13),%rax
11e40(4): mov 0x0(%rax,%rbp,8),%r9
11e44(4): mov 0x8(%r9),%r15
11e48(3): mov %r15,%rdx
11e4b(3): sub %r11,%rdx
11e4e(3): test %rdx,%rdx
11e51(4): lea 0x0(%rdx,%rbx,1),%r12
11e55(2): jle 0xffffffae(%rip)
11e57(4): cmp %r12,0x30(%r14)
11e5b(6): jnl 0xffffff75(%rip)
11e61(4): cmp %r12,0x58(%r14)
11e65(5): mov %rdx,0x18(%rsp)
11e6a(5): mov %r9,0x10(%rsp)
11e6f(6): jl 0x459(%rip)
11e75(3): mov %r12,%rsi
11e78(3): mov %r14,%rdi
11e7b(5): mov %r11,0x20(%rsp)
11e80(5): call 0xffff9760(%rip)
11e85(2): test %eax,%eax
11e87(2): jnz 0x41(%rip)
11e89(4): mov 0x8(%r14),%r8
11e8d(5): mov 0x18(%rsp),%rdx
11e92(5): mov 0x10(%rsp),%r9
11e97(5): mov 0x20(%rsp),%r11
11e9c(5): jmp 0xffffff34(%rip)
11ea1(7): nop 0x0(%rax)
11ea8(3): mov %rsi,%r8
11eab(3): mov %rdi,%rsi
11eae(2): nop 
11eb0(4): lea 0x1(%r8),%rcx
11eb4(3): mov %rsi,%rdi
11eb7(5): jmp 0xfffffdfc(%rip)
11ebc(4): nop 0x0(%rax)
11ec0(2): xor %eax,%eax
11ec2(6): nop 0x0(%rax,%rax,1)
11ec8(8): mov 0xa8(%rsp),%rbx
11ed0(9): xor $0x28,%rbx
11ed9(6): jnz 0x553(%rip)
11edf(7): add $0xb8,%rsp
11ee6(1): pop %rbx
11ee7(1): pop %rbp
11ee8(2): pop %r12
11eea(2): pop %r13
11eec(2): pop %r14
11eee(2): pop %r15
11ef0(1): ret near (%rsp)
11ef1(7): nop 0x0(%rax)
11ef8(4): add $0x28,%rax
11efc(4): cmp $0x0,0xfffffff8(%rax)
11f00(6): jz 0xfffffe36(%rip)
11f06(3): cmp (%rax),%r13
11f09(2): jnz 0xffffffef(%rip)
11f0b(5): mov 0x70(%rsp),%rax
11f10(5): cmp %rax,0x70(%rsp)
11f15(b): mov $0x0,0x8c(%rsp)
11f20(6): jnl 0xfffffce0(%rip)
11f26(8): lea 0x0(,%r13,8),%rax
11f2e(5): mov 0x70(%rsp),%r12
11f33(5): mov 0x38(%rsp),%rbp
11f38(5): mov %rax,0x50(%rsp)
11f3d(5): lea 0x0(%r13,%r13,2),%rax
11f42(4): lea 0x0(%r12,%r12,4),%r8
11f46(4): shl/sal $0x3,%rax
11f4a(5): mov %rax,0x58(%rsp)
11f4f(8): lea 0x0(,%r8,8),%r15
11f57(5): jmp 0x136(%rip)
11f5c(4): nop 0x0(%rax)
11f60(4): mov 0x28(%rbp),%rcx
11f64(5): mov 0x58(%rsp),%rdi
11f69(5): mov 0x10(%rcx,%rdi,1),%rcx
11f6e(3): mov (%rcx),%rcx
11f71(4): lea 0x0(%rcx,%rcx,2),%rcx
11f75(4): lea 0x0(%rdx,%rcx,8),%rcx
11f79(5): mov %rcx,0x18(%rsp)
11f7e(5): add 0x8(%rsp),%rbx
11f83(7): mov 0xa0(%r14),%edx
11f8a(3): mov %r14,%rdi
11f8d(3): sub %rax,%rbx
11f90(4): lea 0xffffffff(%rbx),%rsi
11f94(5): call 0xffffbd9c(%rip)
11f99(5): mov 0x60(%rsp),%rsi
11f9e(2): mov %eax,%ecx
11fa0(7): mov 0xb8(%r14),%rax
11fa7(8): lea 0x0(,%rbx,8),%r10
11faf(9): mov $0x0,0x10(%rsp)
11fb8(4): lea 0x0(%rax,%r10,1),%r11
11fbc(4): mov 0x0(%rax,%rsi,1),%rax
11fc0(3): mov (%r11),%rdx
11fc3(3): test %rax,%rax
11fc6(2): jz 0xb(%rip)
11fc8(4): mov 0x10(%rax),%rax
11fcc(5): mov %rax,0x10(%rsp)
11fd1(3): test %rdx,%rdx
11fd4(6): jz 0x31c(%rip)
11fda(4): mov 0x50(%rdx),%rsi
11fde(5): mov 0x68(%rsp),%rdi
11fe3(5): mov 0x18(%rsp),%rdx
11fe8(5): mov %r10,0x30(%rsp)
11fed(4): mov %ecx,0x28(%rsp)
11ff1(5): call 0xffffb14f(%rip)
11ff6(2): test %eax,%eax
11ff8(7): mov %eax,0x8c(%rsp)
11fff(4): mov 0x28(%rsp),%ecx
12003(5): mov 0x30(%rsp),%r10
12008(6): jnz 0x390(%rip)
1200e(7): add 0xb8(%r14),%r10
12015(5): mov 0x68(%rsp),%rdx
1201a(3): mov %rbp,%rsi
1201d(5): mov 0x78(%rsp),%rdi
12022(5): mov %r10,0x28(%rsp)
12027(5): call 0xffffb279(%rip)
1202c(5): mov 0x28(%rsp),%r10
12031(8): mov 0xa0(%rsp),%rdi
12039(3): mov %rax,(%r10)
1203c(5): call 0xfffefc24(%rip)
12041(7): mov 0xb8(%r14),%rdx
12048(5): cmp $0x0,0x0(%rdx,%rbx,8)
1204d(6): jz 0x2d4(%rip)
12053(6): cmp $0x0,0x20(%rsp)
12059(2): jnz 0x1f(%rip)
1205b(5): mov 0x60(%rsp),%rax
12060(5): mov 0x10(%rsp),%rbx
12065(4): mov 0x0(%rdx,%rax,1),%rax
12069(4): cmp %rbx,0x10(%rax)
1206d(6): jnle 0x2cb(%rip)
12073(5): nop 0x0(%rax,%rax,1)
12078(4): add $0x1,%r12
1207c(4): add $0x28,%r15
12080(7): cmp 0xc8(%r14),%r12
12087(6): jnl 0xfffffb79(%rip)
1208d(7): mov 0xd8(%r14),%rax
12094(3): add %r15,%rax
12097(3): cmp (%rax),%r13
1209a(2): jnz 0xffffffde(%rip)
1209c(5): mov 0x8(%rsp),%rdi
120a1(4): cmp 0x8(%rax),%rdi
120a5(2): jnz 0xffffffd3(%rip)
120a7(4): mov 0x18(%rax),%rbx
120ab(4): mov 0x10(%rax),%rax
120af(4): mov 0x30(%rbp),%rdx
120b3(3): mov %rbx,%rcx
120b6(3): sub %rax,%rcx
120b9(5): mov %rcx,0x20(%rsp)
120be(6): jz 0xfffffea2(%rip)
120c4(4): mov 0x18(%rbp),%rcx
120c8(5): mov 0x50(%rsp),%rdi
120cd(4): mov 0x0(%rcx,%rdi,1),%rcx
120d1(4): lea 0x0(%rcx,%rcx,2),%rcx
120d5(4): lea 0x0(%rdx,%rcx,8),%rcx
120d9(5): mov %rcx,0x18(%rsp)
120de(5): jmp 0xfffffea0(%rip)
120e3(5): nop 0x0(%rax,%rax,1)
120e8(3): mov %r13,%rbx
120eb(3): mov %r8,%r13
120ee(4): lea 0x1(%r15),%r11
120f2(5): cmp %r11,0x8(%rsp)
120f7(6): jl 0xfffffc92(%rip)
120fd(3): mov %r12,%rax
12100(8): lea 0x0(,%r11,8),%r15
12108(3): mov %rbx,%r12
1210b(3): mov %r11,%rbx
1210e(3): mov %r13,%r11
12111(3): mov %rax,%r13
12114(4): nop 0x0(%rax)
12118(3): mov %rbx,%rax
1211b(4): sub (%r12),%rax
1211f(3): test %rax,%rax
12122(2): jle 0x23(%rip)
12124(4): cmp %r13,0x30(%r14)
12128(6): jle 0x289(%rip)
1212e(6): movzx 0xffffffff(%r11,%rbx,1),%ecx
12134(4): lea 0x1(%r13),%rax
12138(4): cmp %cl,0x0(%r11,%r13,1)
1213c(6): jnz 0x136(%rip)
12142(3): mov %rax,%r13
12145(7): mov 0xb8(%r14),%rax
1214c(4): mov 0x0(%rax,%r15,1),%rax
12150(3): test %rax,%rax
12153(6): jz 0x10c(%rip)
12159(4): mov 0x10(%rax),%rcx
1215d(3): test %rcx,%rcx
12160(6): jle 0xff(%rip)
12166(4): mov 0x18(%rax),%rdi
1216a(5): mov 0x50(%rsp),%rax
1216f(2): xor %edx,%edx
12171(5): mov 0x58(%rsp),%r8
12176(3): mov (%rax),%rsi
12179(2): jmp 0x14(%rip)
1217b(5): nop 0x0(%rax,%rax,1)
12180(4): add $0x1,%rdx
12184(3): cmp %rdx,%rcx
12187(6): jz 0xd8(%rip)
1218d(4): mov 0x0(%rdi,%rdx,8),%rbp
12191(3): mov %rbp,%rax
12194(4): shl/sal $0x4,%rax
12198(3): add %rsi,%rax
1219b(4): cmp $0x9,0x8(%rax)
1219f(2): jnz 0xffffffe1(%rip)
121a1(3): cmp (%rax),%r8
121a4(2): jnz 0xffffffdc(%rip)
121a6(4): cmp $0xffffffff,%rbp
121aa(6): jz 0xb5(%rip)
121b0(5): mov 0x10(%r12),%rsi
121b5(4): mov (%r12),%rcx
121b9(3): test %rsi,%rsi
121bc(6): jz 0xc4(%rip)
121c2(5): mov %r11,0x10(%rsp)
121c7(5): mov 0x8(%r12),%rdx
121cc(4): sub $0x8,%rsp
121d0(2): push $0x9
121d2(3): mov %rbx,%r9
121d5(3): mov %rbp,%r8
121d8(3): mov %r14,%rdi
121db(5): call 0xffffe785(%rip)
121e0(1): pop %rdx
121e1(3): cmp $0x1,%eax
121e4(1): pop %rcx
121e5(5): mov 0x10(%rsp),%r11
121ea(2): jz 0x75(%rip)
121ec(2): test %eax,%eax
121ee(6): jnz 0xfffffcda(%rip)
121f4(5): mov 0x20(%r12),%rax
121f9(5): cmp 0x18(%r12),%rax
121fe(6): jz 0x1da(%rip)
12204(5): mov $0x28,%esi
12209(5): mov $0x1,%edi
1220e(5): call 0xfffefcb2(%rip)
12213(3): test %rax,%rax
12216(6): jz 0xa3(%rip)
1221c(5): mov 0x20(%r12),%rdx
12221(5): mov 0x28(%r12),%rcx
12226(3): mov %r12,%rsi
12229(5): mov 0x8(%rsp),%r8
1222e(3): mov %r14,%rdi
12231(4): mov %rax,0x0(%rcx,%rdx,8)
12235(5): mov 0x30(%rsp),%rcx
1223a(4): add $0x1,%rdx
1223e(3): mov %rbp,(%rax)
12241(4): mov %rbx,0x8(%rax)
12245(5): mov %rdx,0x20(%r12)
1224a(3): mov %rax,%rdx
1224d(5): call 0xfffff763(%rip)
12252(3): cmp $0x1,%eax
12255(4): mov 0x8(%r14),%r11
12259(6): jnbe 0xfffffc6f(%rip)
1225f(4): add $0x1,%rbx
12263(4): add $0x8,%r15
12267(5): cmp %rbx,0x8(%rsp)
1226c(6): jnl 0xfffffeac(%rip)
12272(3): mov %r11,%r13
12275(5): jmp 0xfffffb14(%rip)
1227a(6): nop 0x0(%rax,%rax,1)
12280(3): mov %rbx,%rsi
12283(5): mov $0x18,%edi
12288(5): mov %r11,0x18(%rsp)
1228d(3): sub %rcx,%rsi
12290(5): mov %rcx,0x10(%rsp)
12295(4): add $0x1,%rsi
12299(5): call 0xfffefc27(%rip)
1229e(3): test %rax,%rax
122a1(3): mov %rax,%rsi
122a4(5): mov %rax,0x10(%r12)
122a9(5): mov 0x10(%rsp),%rcx
122ae(5): mov 0x18(%rsp),%r11
122b3(6): jnz 0xffffff0f(%rip)
122b9(5): mov $0xc,%eax
122be(5): jmp 0xfffffc0a(%rip)
122c3(5): nop 0x0(%rax,%rax,1)
122c8(3): mov %rbx,%rcx
122cb(3): mov %r13,%rbx
122ce(3): mov %r8,%r13
122d1(4): cmp %rbp,0x20(%rbx)
122d5(6): jnle 0xfffffab4(%rip)
122db(3): test %rbp,%rbp
122de(3): mov %rcx,%r12
122e1(6): jz 0xfffffe11(%rip)
122e7(3): mov %r11,%r15
122ea(5): jmp 0xfffffe04(%rip)
122ef(1): nop 
122f0(5): mov 0x18(%rsp),%rdx
122f5(5): mov 0x78(%rsp),%rdi
122fa(3): mov %rbp,%rsi
122fd(5): mov %r11,0x28(%rsp)
12302(5): call 0xffffaf9e(%rip)
12307(5): mov 0x28(%rsp),%r11
1230c(7): mov 0xb8(%r14),%rdx
12313(3): mov %rax,(%r11)
12316(5): cmp $0x0,0x0(%rdx,%rbx,8)
1231b(6): jnz 0xfffffd38(%rip)
12321(7): mov 0x8c(%rsp),%eax
12328(2): test %eax,%eax
1232a(6): jz 0xfffffd29(%rip)
12330(5): jmp 0xfffffb98(%rip)
12335(3): nop (%rax)
12338(5): mov 0x18(%rsp),%rax
1233d(5): mov 0x8(%rsp),%rcx
12342(3): mov %r14,%rdi
12345(4): lea 0x10(%rax),%r8
12349(4): lea 0x8(%rax),%rbx
1234d(3): mov %r8,%rdx
12350(3): mov %rbx,%rsi
12353(5): mov %r8,0x10(%rsp)
12358(5): call 0xffffb888(%rip)
1235d(2): test %eax,%eax
1235f(7): mov %eax,0x8c(%rsp)
12366(6): jnz 0xfffffb62(%rip)
1236c(5): mov 0x10(%rsp),%r8
12371(3): mov %rbx,%rsi
12374(3): mov %r14,%rdi
12377(3): mov %r8,%rdx
1237a(5): call 0xfffff7d6(%rip)
1237f(2): test %eax,%eax
12381(7): mov %eax,0x8c(%rsp)
12388(6): jz 0xfffffcf0(%rip)
1238e(5): jmp 0xfffffb3a(%rip)
12393(5): nop 0x0(%rax,%rax,1)
12398(8): mov 0xa0(%rsp),%rdi
123a0(5): call 0xfffef8c0(%rip)
123a5(7): mov 0x8c(%rsp),%eax
123ac(5): jmp 0xfffffb1c(%rip)
123b1(4): cmp %r13,0x58(%r14)
123b5(6): jle 0xfffffebd(%rip)
123bb(4): lea 0x1(%r13),%esi
123bf(3): mov %r14,%rdi
123c2(5): call 0xffff90ce(%rip)
123c7(2): test %eax,%eax
123c9(6): jnz 0xfffffaff(%rip)
123cf(4): mov 0x8(%r14),%r11
123d3(5): jmp 0xfffffd5b(%rip)
123d8(5): lea 0x1(%rax,%rax,1),%rdx
123dd(5): mov 0x28(%r12),%rdi
123e2(8): lea 0x0(,%rdx,8),%rsi
123ea(5): mov %rdx,0x10(%rsp)
123ef(5): call 0xfffefba1(%rip)
123f4(3): test %rax,%rax
123f7(6): jz 0xfffffec2(%rip)
123fd(5): mov 0x10(%rsp),%rdx
12402(5): mov %rax,0x28(%r12)
12407(5): mov %rdx,0x18(%r12)
1240c(5): jmp 0xfffffdf8(%rip)
12411(5): mov 0x30(%rsp),%r13
12416(7): mov 0xc8(%r14),%rax
1241d(5): jmp 0xfffffaf3(%rip)
12422(5): mov 0x8(%rsp),%r12
12427(5): jmp 0xfffffccb(%rip)
1242c(5): call 0xfffef984(%rip)

"merge_state_with_log" :
12440(2): push %r15
12442(2): push %r14
12444(2): push %r13
12446(2): push %r12
12448(3): mov %rdi,%r13
1244b(1): push %rbp
1244c(1): push %rbx
1244d(3): mov %rsi,%rbx
12450(4): sub $0x38,%rsp
12454(4): mov 0x48(%rsi),%r12
12458(7): mov 0xb8(%rsi),%r14
1245f(9): mov $0x28,%rax
12468(5): mov %rax,0x28(%rsp)
1246d(2): xor %eax,%eax
1246f(7): mov 0x98(%rsi),%r15
12476(8): lea 0x0(,%r12,8),%rbp
1247e(3): add %rbp,%r14
12481(7): cmp %r12,0xc0(%rsi)
12488(2): jnl 0x48(%rip)
1248a(3): mov %rdx,(%r14)
1248d(3): mov %rdx,%rbp
12490(7): mov %r12,0xc0(%rsi)
12497(8): cmp $0x0,0x98(%r15)
1249f(6): jnz 0x129(%rip)
124a5(5): mov 0x28(%rsp),%rcx
124aa(9): xor $0x28,%rcx
124b3(3): mov %rbp,%rax
124b6(6): jnz 0x171(%rip)
124bc(4): add $0x38,%rsp
124c0(1): pop %rbx
124c1(1): pop %rbp
124c2(2): pop %r12
124c4(2): pop %r13
124c6(2): pop %r14
124c8(2): pop %r15
124ca(1): ret near (%rsp)
124cb(5): nop 0x0(%rax,%rax,1)
124d0(3): mov (%r14),%rax
124d3(3): test %rax,%rax
124d6(6): jz 0xe2(%rip)
124dc(3): test %rdx,%rdx
124df(4): mov 0x50(%rax),%rax
124e3(6): jz 0x8d(%rip)
124e9(4): mov 0x50(%rdx),%r14
124ed(5): lea 0x10(%rsp),%rdi
124f2(3): mov %rax,%rdx
124f5(4): mov %rdi,(%rsp)
124f9(3): mov %r14,%rsi
124fc(5): call 0xffffac44(%rip)
12501(2): test %eax,%eax
12503(4): mov %eax,0x0(%r13)
12507(6): jnz 0x119(%rip)
1250d(4): mov 0x48(%rbx),%rax
12511(6): mov 0xa0(%rbx),%edx
12517(3): mov %rbx,%rdi
1251a(4): lea 0xffffffff(%rax),%rsi
1251e(5): call 0xffffb812(%rip)
12523(7): mov 0xb8(%rbx),%r8
1252a(4): mov (%rsp),%rdx
1252e(2): mov %eax,%ecx
12530(3): mov %r15,%rsi
12533(3): mov %r13,%rdi
12536(3): add %rbp,%r8
12539(5): mov %r8,0x8(%rsp)
1253e(5): call 0xffffad62(%rip)
12543(5): mov 0x8(%rsp),%r8
12548(3): test %r14,%r14
1254b(3): mov %rax,%rbp
1254e(3): mov %rax,(%r8)
12551(6): jz 0xffffff46(%rip)
12557(5): mov 0x20(%rsp),%rdi
1255c(5): call 0xfffef704(%rip)
12561(5): jmp 0xffffff36(%rip)
12566(a): nop 0x0(%rax,%rax,1)
12570(4): movdqu (%rax),%xmm0
12574(3): mov %rbx,%rdi
12577(6): mov 0xa0(%rsi),%edx
1257d(5): lea 0xffffffff(%r12),%rsi
12582(5): movaps %xmm0,0x10(%rsp)
12587(4): mov 0x10(%rax),%rax
1258b(5): mov %rax,0x20(%rsp)
12590(5): call 0xffffb7a0(%rip)
12595(5): lea 0x10(%rsp),%rdx
1259a(2): mov %eax,%ecx
1259c(3): mov %r15,%rsi
1259f(3): mov %r13,%rdi
125a2(5): call 0xffffacfe(%rip)
125a7(3): mov %rax,%rbp
125aa(3): mov %rax,(%r14)
125ad(5): jmp 0xfffffeea(%rip)
125b2(6): nop 0x0(%rax,%rax,1)
125b8(3): mov %rdx,(%r14)
125bb(3): mov %rdx,%rbp
125be(5): jmp 0xfffffed9(%rip)
125c3(5): nop 0x0(%rax,%rax,1)
125c8(3): test %rbp,%rbp
125cb(2): jz 0x55(%rip)
125cd(4): lea 0x10(%rbp),%r14
125d1(4): lea 0x18(%rbp),%r15
125d5(3): mov %r12,%rcx
125d8(3): mov %rbx,%rdi
125db(3): mov %r15,%rdx
125de(3): mov %r14,%rsi
125e1(5): call 0xffffb5ff(%rip)
125e6(2): test %eax,%eax
125e8(4): mov %eax,0x0(%r13)
125ec(2): jnz 0x34(%rip)
125ee(4): test $0x40,0x68(%rbp)
125f2(6): jz 0xfffffeb3(%rip)
125f8(3): mov %r15,%rdx
125fb(3): mov %r14,%rsi
125fe(3): mov %rbx,%rdi
12601(5): call 0xfffff54f(%rip)
12606(2): test %eax,%eax
12608(4): mov %eax,0x0(%r13)
1260c(2): jnz 0x14(%rip)
1260e(7): mov 0xb8(%rbx),%rax
12615(4): mov 0x0(%rax,%r12,8),%rbp
12619(5): jmp 0xfffffe8c(%rip)
1261e(2): nop 
12620(2): xor %ebp,%ebp
12622(5): jmp 0xfffffe83(%rip)
12627(5): call 0xfffef789(%rip)

"sift_states_backward" :
12630(2): push %r15
12632(2): push %r14
12634(3): mov %rdi,%r14
12637(2): push %r13
12639(2): push %r12
1263b(3): mov %rsi,%r13
1263e(1): push %rbp
1263f(1): push %rbx
12640(4): sub $0x68,%rsp
12644(4): mov 0x18(%rsi),%r15
12648(4): mov 0x10(%rsi),%rbx
1264c(4): mov %rdi,(%rsp)
12650(5): mov $0x8,%edi
12655(9): mov $0x1,0x40(%rsp)
1265e(9): mov $0x28,%rax
12667(5): mov %rax,0x58(%rsp)
1266c(2): xor %eax,%eax
1266e(9): mov $0x1,0x48(%rsp)
12677(5): call 0xfffef8a9(%rip)
1267c(3): test %rax,%rax
1267f(5): mov %rax,0x50(%rsp)
12684(6): jz 0x2e0(%rip)
1268a(5): lea 0x40(%rsp),%rcx
1268f(3): mov %rbx,(%rax)
12692(3): mov %r15,%rdx
12695(3): mov %r13,%rsi
12698(3): mov %r14,%rdi
1269b(5): mov %rcx,0x10(%rsp)
126a0(5): call 0x1a00(%rip)
126a5(2): test %eax,%eax
126a7(6): jnz 0x28e(%rip)
126ad(8): lea 0x0(,%r15,8),%rax
126b5(3): test %r15,%r15
126b8(8): mov $0x0,0x2c(%rsp)
126c0(5): mov %rax,0x8(%rsp)
126c5(4): lea 0x30(%r13),%rax
126c9(5): mov %rax,0x38(%rsp)
126ce(6): jle 0x209(%rip)
126d4(4): mov 0x0(%r13),%rdi
126d8(5): mov 0x8(%rsp),%rax
126dd(5): cmp $0x0,0x0(%rdi,%rax,1)
126e2(6): jz 0x216(%rip)
126e8(4): mov (%rsp),%rax
126ec(8): mov $0x0,0x2c(%rsp)
126f4(4): mov 0x2c(%rsp),%ecx
126f8(6): cmp %ecx,0xe0(%rax)
126fe(6): jl 0x213(%rip)
12704(4): mov (%rsp),%rbx
12708(5): mov 0x8(%rsp),%rdi
1270d(4): sub $0x1,%r15
12711(9): mov $0x0,0x48(%rsp)
1271a(7): mov 0xb8(%rbx),%rax
12721(5): mov 0xfffffff8(%rax,%rdi,1),%r12
12726(3): test %r12,%r12
12729(6): jz 0x187(%rip)
1272f(6): cmp $0x0,0x28(%r12)
12735(7): mov 0x98(%rbx),%r14
1273c(6): jle 0x174(%rip)
12742(2): xor %ebx,%ebx
12744(5): jmp 0xa7(%rip)
12749(7): nop 0x0(%rax)
12750(4): mov (%rsp),%rdi
12754(3): mov %r15,%rdx
12757(5): call 0xffffb6c9(%rip)
1275c(2): test %al,%al
1275e(2): jz 0x7e(%rip)
12760(4): mov 0x0(%r13),%rax
12764(5): mov 0x8(%rsp),%rcx
12769(4): mov 0x0(%rax,%rcx,1),%rax
1276d(3): test %rax,%rax
12770(2): jz 0x6c(%rip)
12772(4): mov 0x18(%r14),%rdx
12776(4): mov 0x10(%rax),%rdi
1277a(4): lea 0x18(%rax),%rsi
1277e(4): mov 0x0(%rdx,%rbp,8),%rdx
12782(5): call 0xffff97ce(%rip)
12787(3): test %rax,%rax
1278a(2): jz 0x52(%rip)
1278c(6): mov $0x1,%r10d
12792(5): cmp $0x0,0x28(%r13)
12797(2): jz 0x30(%rip)
12799(4): mov 0x18(%r14),%rax
1279d(4): sub $0x8,%rsp
127a1(4): lea 0x28(%r13),%rsi
127a5(4): lea 0x0(%r10,%r15,1),%r8
127a9(3): mov %rbp,%r9
127ac(4): mov 0x0(%rax,%rbp,8),%rcx
127b0(2): push %r15
127b2(5): mov 0x48(%rsp),%rdx
127b7(5): mov 0x10(%rsp),%rdi
127bc(5): call 0xffff9a44(%rip)
127c1(2): test %al,%al
127c3(1): pop %rdx
127c4(1): pop %rcx
127c5(2): jnz 0x17(%rip)
127c7(5): mov 0x10(%rsp),%rdi
127cc(3): mov %rbp,%rsi
127cf(5): call 0xffff8241(%rip)
127d4(2): test %al,%al
127d6(6): jz 0x15a(%rip)
127dc(4): add $0x1,%rbx
127e0(5): cmp 0x28(%r12),%rbx
127e5(6): jnl 0xcb(%rip)
127eb(5): mov 0x30(%r12),%rax
127f0(3): mov (%r14),%rsi
127f3(4): mov 0x0(%rax,%rbx,8),%rbp
127f7(3): mov %rbp,%r9
127fa(4): shl/sal $0x4,%r9
127fe(3): add %r9,%rsi
12801(4): test $0x10,0xa(%rsi)
12805(6): jz 0xffffff4b(%rip)
1280b(4): mov (%rsp),%rcx
1280f(4): mov 0x18(%r13),%rax
12813(3): mov %r15,%r8
12816(3): mov %rbp,%rdx
12819(5): mov %r9,0x18(%rsp)
1281e(7): mov 0x98(%rcx),%r11
12825(5): mov %rax,0x20(%rsp)
1282a(3): mov (%r11),%rdi
1282d(7): lea 0xd8(%r11),%rsi
12834(5): mov %r11,0x30(%rsp)
12839(5): call 0xffffdec7(%rip)
1283e(3): movsxd %eax,%r10
12841(5): mov 0x18(%rsp),%r9
12846(4): cmp $0x0,%r10d
1284a(6): jle 0x96(%rip)
12850(3): movsxd %r10d,%rax
12853(3): add %r15,%rax
12856(5): cmp %rax,0x20(%rsp)
1285b(6): jl 0xffffff37(%rip)
12861(4): mov 0x0(%r13),%rdx
12865(5): mov 0x30(%rsp),%r11
1286a(4): mov 0x0(%rdx,%rax,8),%rax
1286e(3): test %rax,%rax
12871(2): jz 0x75(%rip)
12873(4): mov 0x18(%r11),%rdx
12877(4): mov 0x10(%rax),%rdi
1287b(4): lea 0x18(%rax),%rsi
1287f(5): mov %r9,0x18(%rsp)
12884(4): mov 0x0(%rdx,%rbp,8),%rdx
12888(5): call 0xffff96c8(%rip)
1288d(3): test %rax,%rax
12890(6): jnz 0xffffff02(%rip)
12896(5): mov 0x18(%rsp),%r9
1289b(3): mov (%r14),%rsi
1289e(3): add %r9,%rsi
128a1(5): jmp 0xfffffeaf(%rip)
128a6(a): nop 0x0(%rax,%rax,1)
128b0(5): mov 0x10(%rsp),%rcx
128b5(4): mov (%rsp),%rdi
128b9(3): mov %r15,%rdx
128bc(3): mov %r13,%rsi
128bf(5): call 0x17e1(%rip)
128c4(2): test %eax,%eax
128c6(2): jnz 0x6f(%rip)
128c8(6): sub $0x8,0x8(%rsp)
128ce(3): test %r15,%r15
128d1(6): jnz 0xfffffe03(%rip)
128d7(2): xor %eax,%eax
128d9(2): jmp 0x5c(%rip)
128db(5): nop 0x0(%rax,%rax,1)
128e0(6): jnz 0xfffffeb2(%rip)
128e6(3): mov (%r14),%rsi
128e9(3): add %r9,%rsi
128ec(5): jmp 0xfffffe64(%rip)
128f1(7): nop 0x0(%rax)
128f8(4): mov (%rsp),%rax
128fc(5): add $0x1,0x2c(%rsp)
12901(4): mov 0x2c(%rsp),%ecx
12905(6): cmp %ecx,0xe0(%rax)
1290b(6): jnl 0xfffffdf9(%rip)
12911(5): mov 0x8(%rsp),%rdx
12916(2): xor %esi,%esi
12918(5): call 0xfffef528(%rip)
1291d(5): mov 0x50(%rsp),%rdi
12922(5): call 0xfffef33e(%rip)
12927(2): xor %eax,%eax
12929(2): jmp 0x1c(%rip)
1292b(5): nop 0x0(%rax,%rax,1)
12930(5): mov $0xc,%eax
12935(5): mov 0x50(%rsp),%rdi
1293a(3): mov %eax,(%rsp)
1293d(5): call 0xfffef323(%rip)
12942(3): mov (%rsp),%eax
12945(5): mov 0x58(%rsp),%rdx
1294a(9): xor $0x28,%rdx
12953(2): jnz 0x18(%rip)
12955(4): add $0x68,%rsp
12959(1): pop %rbx
1295a(1): pop %rbp
1295b(2): pop %r12
1295d(2): pop %r13
1295f(2): pop %r14
12961(2): pop %r15
12963(1): ret near (%rsp)
12964(5): mov $0xc,%eax
12969(2): jmp 0xffffffdc(%rip)
1296b(5): call 0xfffef445(%rip)

"re_search_internal" :
12970(2): push %r15
12972(2): push %r14
12974(2): push %r13
12976(2): push %r12
12978(3): mov %r9,%r13
1297b(1): push %rbp
1297c(1): push %rbx
1297d(3): mov %rcx,%rbp
12980(5): mov $0x20,%ecx
12985(3): mov %r8,%r12
12988(7): sub $0x238,%rsp
1298f(3): mov (%rdi),%rbx
12992(8): mov 0x278(%rsp),%rax
1299a(5): mov %rdi,0x48(%rsp)
1299f(5): mov %rsi,0x78(%rsp)
129a4(3): mov %rdi,%rsi
129a7(8): lea 0x120(%rsp),%rdi
129af(8): mov %rdx,0x88(%rsp)
129b7(5): mov %rbx,0x38(%rsp)
129bc(8): mov %rax,0xb8(%rsp)
129c4(4): mov %rdi,(%rsp)
129c8(9): mov $0x28,%rax
129d1(8): mov %rax,0x228(%rsp)
129d9(2): xor %eax,%eax
129db(3): REP stosd %rax,rdi(%es,10)
129de(4): mov 0x20(%rsi),%rdi
129e2(8): mov %rbx,0x1b8(%rsp)
129ea(3): test %rdi,%rdi
129ed(5): mov %rdi,0x68(%rsp)
129f2(2): jz 0x24(%rip)
129f4(4): movzx 0x38(%rsi),%edx
129f8(3): test $0x8,%dl
129fb(6): jz 0x495(%rip)
12a01(3): cmp %r8,%rbp
12a04(6): jz 0x48c(%rip)
12a0a(3): and $0x1,%edx
12a0d(4): cmove %rdi,%rax
12a11(5): mov %rax,0x68(%rsp)
12a16(5): mov 0x48(%rsp),%rax
12a1b(c): mov $0x0,0x98(%rsp)
12a27(4): mov 0x30(%rax),%rax
12a2b(8): cmp 0x270(%rsp),%rax
12a33(2): jnb 0x21(%rip)
12a35(8): mov 0x270(%rsp),%rcx
12a3d(4): lea 0xffffffff(%rcx),%rdx
12a41(3): sub %rax,%rdx
12a44(8): sub %rdx,0x270(%rsp)
12a4c(8): mov %rdx,0x98(%rsp)
12a54(5): mov 0x48(%rsp),%rsi
12a59(5): cmp $0x0,0x10(%rsi)
12a5e(6): jz 0xe92(%rip)
12a64(5): mov 0x38(%rsp),%rdi
12a69(4): mov 0x48(%rdi),%rax
12a6d(3): test %rax,%rax
12a70(6): jz 0xe80(%rip)
12a76(4): mov 0x50(%rdi),%rdx
12a7a(3): test %rdx,%rdx
12a7d(6): jz 0xe73(%rip)
12a83(4): mov 0x58(%rdi),%rcx
12a87(3): test %rcx,%rcx
12a8a(6): jz 0xe66(%rip)
12a90(5): cmp $0x0,0x60(%rdi)
12a95(6): jz 0xe5b(%rip)
12a9b(5): cmp $0x0,0x10(%rax)
12aa0(2): jnz 0x38(%rip)
12aa2(5): cmp $0x0,0x10(%rdx)
12aa7(2): jnz 0x31(%rip)
12aa9(5): cmp $0x0,0x10(%rcx)
12aae(2): jz 0x8(%rip)
12ab0(4): cmp $0x0,0x38(%rsi)
12ab4(2): js 0x24(%rip)
12ab6(3): test %rbp,%rbp
12ab9(2): jz 0x13(%rip)
12abb(3): test %r12,%r12
12abe(8): mov $0x1,0x5c(%rsp)
12ac6(6): jnz 0xa23(%rip)
12acc(3): xor %r12d,%r12d
12acf(2): xor %ebp,%ebp
12ad1(7): nop 0x0(%rax)
12ad8(9): cmp $0x0,0x270(%rsp)
12ae1(8): mov $0x1,0x58(%rsp)
12ae9(6): jz 0x387(%rip)
12aef(5): mov 0x38(%rsp),%r11
12af4(5): mov 0x48(%rsp),%rax
12af9(8): mov 0x88(%rsp),%rdi
12b01(4): mov 0x10(%r11),%rsi
12b05(4): mov 0x28(%rax),%rbx
12b09(7): mov 0xb4(%r11),%edx
12b10(4): mov 0x18(%rax),%rax
12b14(8): mov %rdi,0x178(%rsp)
12b1c(8): mov %rdi,0x170(%rsp)
12b24(5): mov %rsi,0x8(%rsp)
12b29(4): lea 0x1(%rsi),%rsi
12b2d(8): mov %rbx,0xb0(%rsp)
12b35(3): movsxd %edx,%rcx
12b38(4): shr $0x16,%rax
12b3c(8): mov %rbx,0x198(%rsp)
12b44(3): and $0x1,%eax
12b47(3): cmp %rcx,%rsi
12b4a(7): mov %edx,0x1b0(%rsp)
12b51(4): cmovnge %rcx,%rsi
12b55(4): lea 0x1(%rdi),%rcx
12b59(7): mov %al,0x1a8(%rsp)
12b60(8): mov %rdi,0x188(%rsp)
12b68(8): mov %rdi,0x180(%rsp)
12b70(3): cmp %rcx,%rsi
12b73(4): mov (%rsp),%rdi
12b77(4): cmovnl %rcx,%rsi
12b7b(3): test %rbx,%rbx
12b7e(5): mov 0x78(%rsp),%rcx
12b83(3): setnz %bl
12b86(2): or %ebx,%eax
12b88(7): mov %al,0x1ab(%rsp)
12b8f(8): movzx 0xb0(%r11),%eax
12b97(8): mov %rcx,0x120(%rsp)
12b9f(2): mov %eax,%edx
12ba1(3): shr $0x3,%al
12ba4(3): shr $0x2,%dl
12ba7(3): and $0x1,%eax
12baa(3): and $0x1,%edx
12bad(7): mov %al,0x1aa(%rsp)
12bb4(7): mov %dl,0x1a9(%rsp)
12bbb(5): call 0xffff7d45(%rip)
12bc0(2): test %eax,%eax
12bc2(4): mov %eax,0x5c(%rsp)
12bc6(6): jnz 0x8fa(%rip)
12bcc(5): mov 0x38(%rsp),%rdi
12bd1(7): lea 0xb8(%rdi),%rax
12bd8(8): mov %rax,0x1a0(%rsp)
12be0(7): movzx 0xb0(%rdi),%eax
12be7(4): mov %al,0x8(%rsp)
12beb(3): shr $0x4,%al
12bee(3): and $0x1,%eax
12bf1(8): cmp $0x0,0x1ab(%rsp)
12bf9(7): mov %al,0x1ae(%rsp)
12c00(2): jnz 0x25(%rip)
12c02(5): mov 0x38(%rsp),%rsi
12c07(5): mov 0x78(%rsp),%rax
12c0c(7): cmp $0x1,0xb4(%rsi)
12c13(8): mov %rax,0x128(%rsp)
12c1b(8): mov 0x88(%rsp),%rax
12c23(2): jle 0x4(%rip)
12c25(2): xor %eax,%eax
12c27(8): mov %rax,0x150(%rsp)
12c2f(8): mov %rax,0x158(%rsp)
12c37(5): mov 0x48(%rsp),%rax
12c3c(8): mov %r13,0x188(%rsp)
12c44(8): mov %r13,0x180(%rsp)
12c4c(4): movzx 0x38(%rax),%eax
12c50(4): mov %al,0x8(%rsp)
12c54(3): shr $0x7,%al
12c57(7): mov %al,0x1ad(%rsp)
12c5e(5): mov 0x38(%rsp),%rax
12c63(7): mov 0x98(%rax),%r14
12c6a(7): mov 0x280(%rsp),%eax
12c71(c): mov $0xffffffff,0x1c8(%rsp)
12c7d(4): lea 0x0(%r14,%r14,1),%r13
12c81(7): mov %eax,0x1c0(%rsp)
12c88(3): test %r13,%r13
12c8b(2): jle 0x54(%rip)
12c8d(a): mov $0x461168601842738790,%rax
12c97(3): cmp %rax,%r13
12c9a(6): jnle 0xd46(%rip)
12ca0(5): lea 0x0(%r13,%r14,8),%rdi
12ca5(4): shl/sal $0x3,%rdi
12ca9(5): call 0xfffef277(%rip)
12cae(3): mov %r14,%rdi
12cb1(3): mov %rax,%r15
12cb4(8): mov %rax,0x1f8(%rsp)
12cbc(4): shl/sal $0x4,%rdi
12cc0(5): call 0xfffef260(%rip)
12cc5(3): test %rax,%rax
12cc8(8): mov %rax,0x218(%rsp)
12cd0(6): jz 0xd10(%rip)
12cd6(3): test %r15,%r15
12cd9(6): jz 0xd07(%rip)
12cdf(9): cmp $0x1,0x270(%rsp)
12ce8(8): mov %r13,0x1f0(%rsp)
12cf0(b): mov $0x1,0x200(%rsp)
12cfb(8): mov %r13,0x210(%rsp)
12d03(6): jbe 0x1125(%rip)
12d09(8): mov 0x160(%rsp),%rax
12d11(a): mov $0x2305843009213693950,%rdx
12d1b(3): cmp %rdx,%rax
12d1e(6): jnbe 0xcc2(%rip)
12d24(8): lea 0x8(,%rax,8),%rdi
12d2c(5): call 0xfffef1f4(%rip)
12d31(3): test %rax,%rax
12d34(3): mov %rax,%rdi
12d37(8): mov %rax,0x1d8(%rsp)
12d3f(6): jz 0xcf1(%rip)
12d45(7): mov 0x280(%rsp),%eax
12d4c(8): mov %rbp,0xd8(%rsp)
12d54(3): and $0x1,%eax
12d57(3): cmp $0x1,%eax
12d5a(2): sbb %eax,%eax
12d5c(3): and $0x2,%eax
12d5f(3): add $0x4,%eax
12d62(7): mov %eax,0x190(%rsp)
12d69(2): xor %eax,%eax
12d6b(3): cmp %r12,%rbp
12d6e(3): setle %al
12d71(4): lea 0xffffffff(%rax,%rax,1),%eax
12d75(7): mov %eax,0xac(%rsp)
12d7c(3): mov %r12,%rax
12d7f(4): cmovng %rbp,%rax
12d83(8): mov %rax,0x90(%rsp)
12d8b(3): mov %r12,%rax
12d8e(4): cmovnl %rbp,%rax
12d92(6): cmp $0x0,0x68(%rsp)
12d98(5): mov %rax,0x70(%rsp)
12d9d(5): mov 0x38(%rsp),%rax
12da2(6): mov 0xb4(%rax),%esi
12da8(5): mov $0x8,%eax
12dad(7): mov %esi,0xc8(%rsp)
12db4(2): jz 0x3b(%rip)
12db6(3): cmp $0x1,%esi
12db9(5): mov $0x4,%ecx
12dbe(2): jz 0x20(%rip)
12dc0(5): mov 0x48(%rsp),%rax
12dc5(4): test $0x40,0x1a(%rax)
12dc9(6): jnz 0xd85(%rip)
12dcf(9): cmp $0x0,0xb0(%rsp)
12dd8(6): jnz 0xd76(%rip)
12dde(2): xor %edx,%edx
12de0(3): cmp %r12,%rbp
12de3(3): movzx %bl,%eax
12de6(3): setle %dl
12de9(2): or %ecx,%eax
12deb(2): add %edx,%edx
12ded(2): or %edx,%eax
12def(5): cmp 0x70(%rsp),%rbp
12df4(3): setnle %cl
12df7(8): cmp 0x90(%rsp),%rbp
12dff(3): setl %dl
12e02(2): or %dl,%cl
12e04(6): jnz 0xad5(%rip)
12e0a(8): lea 0xd8(%rsp),%rcx
12e12(3): cmp %r12,%rbp
12e15(5): mov $0x0,%edx
12e1a(4): cmovng %rcx,%rdx
12e1e(3): test %rdx,%rdx
12e21(8): mov %rdx,0xc0(%rsp)
12e29(8): setnz 0xcf(%rsp)
12e31(3): sub $0x4,%eax
12e34(7): mov %eax,0xa8(%rsp)
12e3b(8): lea 0xd0(%rsp),%rax
12e43(5): mov %rax,0x28(%rsp)
12e48(7): mov 0xa8(%rsp),%eax
12e4f(3): cmp $0x4,%eax
12e52(6): jnbe 0xbeb(%rip)
12e58(7): lea 0x99c1(%rip),%rcx
12e5f(4): movsxd 0x0(%rcx,%rax,4),%rax
12e63(3): add %rcx,%rax
12e66(2): jmp %rax
12e68(8): nop 0x0(%rax,%rax,1)
12e70(5): mov 0x38(%rsp),%rax
12e75(8): cmp $0x0,0x98(%rax)
12e7d(3): setnz %al
12e80(3): movzx %al,%eax
12e83(4): mov %eax,0x58(%rsp)
12e87(5): jmp 0xfffffc68(%rip)
12e8c(4): nop 0x0(%rax)
12e90(9): mov $0x0,0x68(%rsp)
12e99(5): jmp 0xfffffb7d(%rip)
12e9e(5): cmp %rbp,0x70(%rsp)
12ea3(2): jle 0x5c(%rip)
12ea5(5): mov 0x78(%rsp),%rax
12eaa(5): mov 0x68(%rsp),%rdi
12eaf(4): movzx 0x0(%rax,%rbp,1),%edx
12eb3(4): lea 0x1(%rbp),%rax
12eb7(4): cmp $0x0,0x0(%rdi,%rdx,1)
12ebb(6): jnz 0x8d(%rip)
12ec1(5): mov 0x68(%rsp),%rsi
12ec6(5): mov 0x70(%rsp),%rcx
12ecb(5): mov 0x78(%rsp),%rdi
12ed0(2): jmp 0x1a(%rip)
12ed2(6): nop 0x0(%rax,%rax,1)
12ed8(4): movzx 0x0(%rdi,%rax,1),%edx
12edc(4): lea 0x1(%rax),%rax
12ee0(4): cmp $0x0,0x0(%rsi,%rdx,1)
12ee4(6): jnz 0x119d(%rip)
12eea(3): cmp %rax,%rcx
12eed(3): mov %rax,%rbp
12ef0(2): jnz 0xffffffe8(%rip)
12ef2(5): mov 0x70(%rsp),%rax
12ef7(8): mov %rax,0xd8(%rsp)
12eff(5): cmp %rbp,0x70(%rsp)
12f04(2): jnz 0x44(%rip)
12f06(2): xor %eax,%eax
12f08(5): mov 0x70(%rsp),%rsi
12f0d(8): cmp %rsi,0x88(%rsp)
12f15(2): jle 0xb(%rip)
12f17(5): mov 0x78(%rsp),%rax
12f1c(4): movzx 0x0(%rax,%rsi,1),%eax
12f20(8): mov 0xb0(%rsp),%rsi
12f28(3): test %rsi,%rsi
12f2b(2): jz 0x6(%rip)
12f2d(4): movzx 0x0(%rsi,%rax,1),%eax
12f31(5): mov 0x68(%rsp),%rdi
12f36(4): cmp $0x0,0x0(%rdi,%rax,1)
12f3a(6): jz 0x99f(%rip)
12f40(5): mov 0x70(%rsp),%rbp
12f45(3): nop (%rax)
12f48(7): mov 0x280(%rsp),%edx
12f4f(4): mov (%rsp),%rdi
12f53(3): mov %rbp,%rsi
12f56(5): call 0xffffb0aa(%rip)
12f5b(2): test %eax,%eax
12f5d(4): mov %eax,0x5c(%rsp)
12f61(6): jnz 0x55f(%rip)
12f67(8): cmp $0x1,0xc8(%rsp)
12f6f(2): jz 0x1e(%rip)
12f71(9): cmp $0x0,0x150(%rsp)
12f7a(2): jz 0x13(%rip)
12f7c(8): mov 0x130(%rsp),%rax
12f84(3): cmp $0xff,(%rax)
12f87(6): jz 0x92a(%rip)
12f8d(8): mov 0x1b8(%rsp),%rbx
12f95(5): movzx 0x58(%rsp),%eax
12f9a(b): mov $0x0,0x200(%rsp)
12fa5(c): mov $0x0,0x1e8(%rsp)
12fb1(c): mov $0x0,0x1e0(%rsp)
12fbd(b): mov $0x0,0xd0(%rsp)
12fc8(4): mov 0x48(%rbx),%r14
12fcc(3): and $0x1,%eax
12fcf(7): mov %al,0xce(%rsp)
12fd6(8): mov 0x168(%rsp),%rax
12fde(5): cmp $0x0,0x68(%r14)
12fe3(5): mov %rax,0x8(%rsp)
12fe8(6): js 0x978(%rip)
12fee(8): mov 0x1d8(%rsp),%rax
12ff6(3): test %rax,%rax
12ff9(2): jz 0x19(%rip)
12ffb(8): cmp $0x0,0x98(%rbx)
13003(5): mov 0x8(%rsp),%rdi
13008(4): mov %r14,0x0(%rax,%rdi,8)
1300c(6): jnz 0xeef(%rip)
13012(8): movzx 0xcf(%rsp),%eax
1301a(4): mov %al,0x18(%rsp)
1301e(5): movzx 0x68(%r14),%eax
13023(2): test $0x10,%al
13025(9): mov $0xffffffff,0x20(%rsp)
1302e(9): mov $0x0,0x30(%rsp)
13037(6): jnz 0xe89(%rip)
1303d(8): mov 0xc0(%rsp),%rax
13045(8): mov 0x168(%rsp),%r8
1304d(5): mov %rax,0x50(%rsp)
13052(8): lea 0xe0(%rsp),%rax
1305a(5): mov %rax,0x60(%rsp)
1305f(8): lea 0xd4(%rsp),%rax
13067(8): mov %rax,0x80(%rsp)
1306f(2): jmp 0x5d(%rip)
13071(7): nop 0x0(%rax)
13078(3): cmp %r13,%r14
1307b(8): mov 0x168(%rsp),%r8
13083(3): setz %al
13086(4): and %al,0x18(%rsp)
1308a(5): movzx 0x68(%r13),%eax
1308f(6): cmove 0x8(%rsp),%rbx
13095(2): test $0x10,%al
13097(5): mov %rbx,0x8(%rsp)
1309c(2): jz 0x2d(%rip)
1309e(2): test %al,%al
130a0(6): js 0x4c0(%rip)
130a6(4): mov 0x58(%rsp),%eax
130aa(5): mov %r8,0x20(%rsp)
130af(2): test %eax,%eax
130b1(6): jz 0x125(%rip)
130b7(9): mov $0x1,0x30(%rsp)
130c0(9): mov $0x0,0x50(%rsp)
130c9(3): mov %r13,%r14
130cc(8): cmp %r8,0x188(%rsp)
130d4(6): jle 0xf0(%rip)
130da(8): mov 0x160(%rsp),%rax
130e2(4): lea 0x1(%r8),%rbx
130e6(3): cmp %rax,%rbx
130e9(6): jnl 0x4a7(%rip)
130ef(8): mov 0x150(%rsp),%rax
130f7(3): cmp %rax,%rbx
130fa(6): jnl 0x786(%rip)
13100(5): test $0x20,0x68(%r14)
13105(6): jnz 0x4cb(%rip)
1310b(4): lea 0x1(%r8),%rax
1310f(8): mov %rax,0x168(%rsp)
13117(8): mov 0x128(%rsp),%rax
1311f(5): movzx 0x0(%rax,%r8,1),%r13d
13124(4): mov 0x58(%r14),%rax
13128(3): test %rax,%rax
1312b(6): jz 0x715(%rip)
13131(4): mov 0x0(%rax,%r13,8),%r13
13135(9): cmp $0x0,0x1d8(%rsp)
1313e(2): jz 0x16(%rip)
13140(4): mov (%rsp),%rsi
13144(5): mov 0x28(%rsp),%rdi
13149(3): mov %r13,%rdx
1314c(5): call 0xfffff2f4(%rip)
13151(3): mov %rax,%r13
13154(3): test %r13,%r13
13157(6): jnz 0xffffff21(%rip)
1315d(7): mov 0xd0(%rsp),%ecx
13164(8): mov 0x1d8(%rsp),%rdi
1316c(2): test %ecx,%ecx
1316e(6): jnz 0x8c2(%rip)
13174(3): test %rdi,%rdi
13177(2): jz 0x4d(%rip)
13179(8): movzx 0xce(%rsp),%eax
13181(3): xor $0x1,%eax
13184(4): test %al,0x30(%rsp)
13188(2): jnz 0x3c(%rip)
1318a(8): mov 0x1e0(%rsp),%rsi
13192(8): mov 0x168(%rsp),%rax
1319a(2): xor %ecx,%ecx
1319c(2): jmp 0x17(%rip)
1319e(2): nop 
131a0(5): cmp $0x0,0x0(%rdi,%rdx,8)
131a5(3): mov %rdx,%rax
131a8(5): mov $0x1,%ecx
131ad(6): jnz 0x373(%rip)
131b3(4): lea 0x1(%rax),%rdx
131b7(3): cmp %rdx,%rsi
131ba(2): jnl 0xffffffe6(%rip)
131bc(2): test %cl,%cl
131be(6): jnz 0xed0(%rip)
131c4(5): mov 0x50(%rsp),%rax
131c9(3): test %rax,%rax
131cc(2): jz 0xa(%rip)
131ce(5): mov 0x8(%rsp),%rdi
131d3(3): add %rdi,(%rax)
131d6(5): mov 0x20(%rsp),%rax
131db(4): cmp $0xffffffff,%rax
131df(6): jz 0x6c1(%rip)
131e5(4): cmp $0xfffffffe,%rax
131e9(6): jz 0x7f7(%rip)
131ef(5): mov 0x20(%rsp),%rax
131f4(8): mov %rax,0x1c8(%rsp)
131fc(5): mov 0x48(%rsp),%rax
13201(4): test $0x10,0x38(%rax)
13205(6): jnz 0x7bb(%rip)
1320b(9): cmp $0x1,0x270(%rsp)
13214(6): jbe 0x8f8(%rip)
1321a(5): mov 0x20(%rsp),%rcx
1321f(8): mov 0x1d8(%rsp),%rbx
13227(4): mov (%rsp),%rdi
1322b(4): mov 0x0(%rbx,%rcx,8),%rax
1322f(4): mov 0x10(%rax),%rsi
13233(4): lea 0x18(%rax),%rdx
13237(5): call 0xffffacf9(%rip)
1323c(3): mov %rax,%r13
1323f(8): mov %rax,0x1d0(%rsp)
13247(5): mov 0x38(%rsp),%rax
1324c(7): test $0x1,0xb0(%rax)
13253(2): jnz 0x1d(%rip)
13255(5): mov 0x38(%rsp),%rax
1325a(8): cmp $0x0,0x98(%rax)
13262(6): jz 0x99a(%rip)
13268(8): mov 0x1d0(%rsp),%r13
13270(a): mov $0x2305843009213693950,%rsi
1327a(5): cmp %rsi,0x20(%rsp)
1327f(8): mov 0x1b8(%rsp),%r15
13287(6): jnbe 0xc64(%rip)
1328d(5): mov 0x20(%rsp),%rax
13292(4): add $0x1,%rax
13296(8): lea 0x0(,%rax,8),%rbx
1329e(5): mov %rax,0x8(%rsp)
132a3(3): mov %rbx,%rdi
132a6(5): call 0xfffeec7a(%rip)
132ab(3): test %rax,%rax
132ae(3): mov %rax,%r12
132b1(6): jz 0x72f(%rip)
132b7(8): cmp $0x0,0x98(%r15)
132bf(6): jz 0x896(%rip)
132c5(3): mov %rbx,%rdi
132c8(5): call 0xfffeec58(%rip)
132cd(3): test %rax,%rax
132d0(3): mov %rax,%rbp
132d3(6): jz 0x705(%rip)
132d9(5): mov 0x20(%rsp),%r14
132de(8): lea 0xe0(%rsp),%rbx
132e6(5): mov %r15,0x10(%rsp)
132eb(5): mov %rax,0x18(%rsp)
132f0(5): mov 0x8(%rsp),%rax
132f5(2): xor %esi,%esi
132f7(3): mov %rbp,%rdi
132fa(8): lea 0x0(,%rax,8),%rdx
13302(5): call 0xfffeeb3e(%rip)
13307(4): pxor %xmm0,%xmm0
1330b(8): mov %r12,0xe0(%rsp)
13313(8): mov %rbp,0xe8(%rsp)
1331b(8): mov %r13,0xf0(%rsp)
13323(3): mov %rbx,%rsi
13326(8): mov %r14,0xf8(%rsp)
1332e(4): mov (%rsp),%rdi
13332(4): movaps %xmm0,0x20(%rbx)
13336(8): mov $0x0,0x30(%rbx)
1333e(5): call 0xfffff2f2(%rip)
13343(8): mov 0x110(%rsp),%rdi
1334b(3): mov %eax,%r15d
1334e(5): call 0xfffee912(%rip)
13353(3): test %r15d,%r15d
13356(6): jnz 0xc1e(%rip)
1335c(5): cmp $0x0,(%r12)
13361(6): jnz 0xc72(%rip)
13367(5): cmp $0x0,0x0(%rbp)
1336c(6): jnz 0xc67(%rip)
13372(8): mov 0x1d8(%rsp),%rdx
1337a(6): nop 0x0(%rax,%rax,1)
13380(4): sub $0x1,%r14
13384(4): cmp $0xffffffff,%r14
13388(6): jz 0xac3(%rip)
1338e(4): mov 0x0(%rdx,%r14,8),%rax
13392(3): test %rax,%rax
13395(2): jz 0xffffffeb(%rip)
13397(4): test $0x10,0x68(%rax)
1339b(2): jz 0xffffffe5(%rip)
1339d(4): mov 0x10(%rax),%rsi
133a1(4): mov (%rsp),%rdi
133a5(4): lea 0x18(%rax),%rdx
133a9(3): mov %r14,%rcx
133ac(5): call 0xffffab84(%rip)
133b1(3): mov %rax,%r13
133b4(4): lea 0x1(%r14),%rax
133b8(5): mov %rax,0x8(%rsp)
133bd(5): jmp 0xffffff33(%rip)
133c2(5): cmp %rbp,0x70(%rsp)
133c7(6): jle 0xfffffb38(%rip)
133cd(5): mov 0x78(%rsp),%rax
133d2(8): mov 0xb0(%rsp),%rdi
133da(5): mov 0x68(%rsp),%rsi
133df(4): movzx 0x0(%rax,%rbp,1),%eax
133e3(4): movzx 0x0(%rdi,%rax,1),%edx
133e7(4): lea 0x1(%rbp),%rax
133eb(4): cmp $0x0,0x0(%rsi,%rdx,1)
133ef(6): jnz 0xfffffb59(%rip)
133f5(5): mov 0x68(%rsp),%rsi
133fa(8): mov 0xb0(%rsp),%rdi
13402(5): mov 0x70(%rsp),%rcx
13407(5): mov 0x78(%rsp),%r8
1340c(2): jmp 0x1b(%rip)
1340e(2): nop 
13410(5): movzx 0x0(%r8,%rax,1),%eax
13415(4): movzx 0x0(%rdi,%rax,1),%edx
13419(4): lea 0x1(%rbp),%rax
1341d(4): cmp $0x0,0x0(%rsi,%rdx,1)
13421(6): jnz 0xc60(%rip)
13427(3): cmp %rax,%rcx
1342a(3): mov %rax,%rbp
1342d(2): jnz 0xffffffe3(%rip)
1342f(5): jmp 0xfffffac3(%rip)
13434(8): cmp %rbp,0x90(%rsp)
1343c(6): jnle 0x49d(%rip)
13442(2): xor %ecx,%ecx
13444(3): mov %rbp,%rax
13447(5): mov 0x68(%rsp),%rdi
1344c(8): mov 0xb0(%rsp),%rsi
13454(8): mov 0x90(%rsp),%r9
1345c(5): mov 0x78(%rsp),%r10
13461(8): mov 0x88(%rsp),%r8
13469(2): jmp 0x19(%rip)
1346b(5): nop 0x0(%rax,%rax,1)
13470(4): sub $0x1,%rax
13474(5): mov $0x1,%ecx
13479(3): cmp %r9,%rax
1347c(6): jl 0x9e4(%rip)
13482(2): xor %edx,%edx
13484(3): cmp %rax,%r8
13487(2): jle 0x7(%rip)
13489(5): movzx 0x0(%r10,%rax,1),%edx
1348e(3): test %rsi,%rsi
13491(2): jz 0x6(%rip)
13493(4): movzx 0x0(%rsi,%rdx,1),%edx
13497(4): cmp $0x0,0x0(%rdi,%rdx,1)
1349b(2): jz 0xffffffd5(%rip)
1349d(2): test %cl,%cl
1349f(6): jz 0xfffffaa9(%rip)
134a5(8): mov %rax,0xd8(%rsp)
134ad(3): mov %rax,%rbp
134b0(5): jmp 0xfffffa98(%rip)
134b5(3): nop (%rax)
134b8(4): mov %eax,0x5c(%rsp)
134bc(4): nop 0x0(%rax)
134c0(8): mov 0x1d8(%rsp),%rdi
134c8(5): call 0xfffee798(%rip)
134cd(5): mov 0x38(%rsp),%rax
134d2(8): cmp $0x0,0x98(%rax)
134da(6): jnz 0x926(%rip)
134e0(4): mov (%rsp),%rdi
134e4(5): call 0xffff875c(%rip)
134e9(8): mov 0x228(%rsp),%rsi
134f1(9): xor $0x28,%rsi
134fa(4): mov 0x5c(%rsp),%eax
134fe(6): jnz 0xb9d(%rip)
13504(7): add $0x238,%rsp
1350b(1): pop %rbx
1350c(1): pop %rbp
1350d(2): pop %r12
1350f(2): pop %r13
13511(2): pop %r14
13513(2): pop %r15
13515(1): ret near (%rsp)
13516(a): nop 0x0(%rax,%rax,1)
13520(4): mov (%rsp),%rsi
13524(5): mov 0x28(%rsp),%rdi
13529(8): mov %rdx,0x168(%rsp)
13531(2): xor %edx,%edx
13533(5): call 0xffffef0d(%rip)
13538(7): mov 0xd0(%rsp),%edx
1353f(2): test %edx,%edx
13541(6): jnz 0x93c(%rip)
13547(3): test %rax,%rax
1354a(6): jnz 0x946(%rip)
13550(8): mov 0x1d8(%rsp),%rdi
13558(5): jmp 0xfffffc32(%rip)
1355d(3): nop (%rax)
13560(4): mov 0x10(%r13),%rsi
13564(4): mov (%rsp),%rdi
13568(4): lea 0x18(%r13),%rdx
1356c(3): mov %r8,%rcx
1356f(5): mov %r8,0x10(%rsp)
13574(5): call 0xffffa9bc(%rip)
13579(3): test %rax,%rax
1357c(5): mov 0x10(%rsp),%r8
13581(6): jz 0xfffffb48(%rip)
13587(5): jmp 0xfffffb1f(%rip)
1358c(4): nop 0x0(%rax)
13590(8): cmp 0x178(%rsp),%rax
13598(6): jnl 0xfffffb57(%rip)
1359e(4): mov (%rsp),%rdi
135a2(3): lea 0x1(%rbx),%esi
135a5(5): call 0xffff7eeb(%rip)
135aa(2): test %eax,%eax
135ac(7): mov %eax,0xd0(%rsp)
135b3(6): jnz 0x8e5(%rip)
135b9(5): test $0x20,0x68(%r14)
135be(8): mov 0x168(%rsp),%r8
135c6(6): jz 0xfffffb45(%rip)
135cc(4): nop 0x0(%rax)
135d0(5): cmp $0x0,0x10(%r14)
135d5(8): mov 0x1b8(%rsp),%r13
135dd(6): jle 0x32e(%rip)
135e3(7): lea 0xd8(%r13),%rax
135ea(3): xor %r12d,%r12d
135ed(8): mov %rbx,0xa0(%rsp)
135f5(3): mov %r12,%rbx
135f8(3): mov %r8,%r12
135fb(5): mov %rax,0x40(%rsp)
13600(5): jmp 0x158(%rip)
13605(3): nop (%rax)
13608(2): test $0x1,%al
1360a(6): jz 0x140(%rip)
13610(3): and $0x8,%ecx
13613(6): jnz 0x137(%rip)
13619(3): test $0x20,%dl
1361c(2): jz 0xa(%rip)
1361e(2): test $0x2,%al
13620(6): jz 0x12a(%rip)
13626(6): and $0x80,%edx
1362c(2): jz 0x14(%rip)
1362e(2): test $0x8,%al
13630(6): jz 0x11a(%rip)
13636(a): nop 0x0(%rax,%rax,1)
13640(4): mov (%rsp),%rcx
13644(5): mov 0x40(%rsp),%rsi
13649(3): mov %r12,%r8
1364c(3): mov %r15,%rdx
1364f(3): mov %rbp,%rdi
13652(5): call 0xffffd0ae(%rip)
13657(2): test %eax,%eax
13659(6): jz 0xe9(%rip)
1365f(3): movsxd %eax,%rbp
13662(8): add 0x168(%rsp),%rbp
1366a(7): cmp %eax,0x200(%rsp)
13671(8): cmovnl 0x200(%rsp),%eax
13679(4): mov (%rsp),%rdi
1367d(3): mov %rbp,%rsi
13680(7): mov %eax,0x200(%rsp)
13687(5): call 0xffff7f59(%rip)
1368c(2): test %eax,%eax
1368e(7): mov %eax,0xd4(%rsp)
13695(6): jnz 0x29b(%rip)
1369b(4): mov 0x18(%r13),%rax
1369f(8): lea 0x0(,%rbp,8),%r12
136a7(4): mov 0x0(%rax,%r15,8),%rax
136ab(8): mov 0x1d8(%rsp),%r15
136b3(4): lea 0x0(%rax,%rax,2),%rdx
136b7(4): mov 0x30(%r13),%rax
136bb(3): add %r12,%r15
136be(4): lea 0x0(%rax,%rdx,8),%rdx
136c2(3): mov (%r15),%rax
136c5(3): test %rax,%rax
136c8(6): jz 0x100(%rip)
136ce(4): mov 0x50(%rax),%rsi
136d2(5): mov 0x60(%rsp),%rdi
136d7(5): call 0xffff9a69(%rip)
136dc(2): test %eax,%eax
136de(7): mov %eax,0xd4(%rsp)
136e5(6): jnz 0x24b(%rip)
136eb(7): mov 0x1c0(%rsp),%edx
136f2(4): mov (%rsp),%rdi
136f6(4): lea 0xffffffff(%rbp),%rsi
136fa(5): call 0xffffa636(%rip)
136ff(5): mov 0x60(%rsp),%rdx
13704(8): mov 0x80(%rsp),%rdi
1370c(2): mov %eax,%ecx
1370e(8): add 0x1d8(%rsp),%r12
13716(3): mov %r13,%rsi
13719(5): call 0xffff9b87(%rip)
1371e(8): mov 0xf0(%rsp),%rdi
13726(4): mov %rax,(%r12)
1372a(5): call 0xfffee536(%rip)
1372f(8): mov 0x1d8(%rsp),%rdi
13737(5): cmp $0x0,0x0(%rdi,%rbp,8)
1373c(6): jz 0xe5(%rip)
13742(8): mov 0x168(%rsp),%r12
1374a(4): add $0x1,%rbx
1374e(4): cmp 0x10(%r14),%rbx
13752(6): jnl 0x1ae(%rip)
13758(4): mov 0x18(%r14),%rax
1375c(4): mov 0x0(%r13),%rbp
13760(4): mov 0x0(%rax,%rbx,8),%r15
13764(3): mov %r15,%rax
13767(4): shl/sal $0x4,%rax
1376b(3): add %rbp,%rax
1376e(4): test $0x10,0xa(%rax)
13772(2): jz 0xffffffd8(%rip)
13774(3): mov 0x8(%rax),%ecx
13777(6): test $0x3ff00,%ecx
1377d(4): mov %ecx,0x10(%rsp)
13781(6): jz 0xfffffebf(%rip)
13787(7): mov 0x1c0(%rsp),%edx
1378e(4): mov (%rsp),%rdi
13792(3): mov %r12,%rsi
13795(5): call 0xffffa59b(%rip)
1379a(4): mov 0x10(%rsp),%ecx
1379e(3): shr $0x8,%ecx
137a1(2): mov %ecx,%edx
137a3(5): and $0x3ff,%dx
137a8(3): test $0x4,%cl
137ab(6): jnz 0xfffffe5d(%rip)
137b1(3): and $0x8,%ecx
137b4(6): jz 0xfffffe65(%rip)
137ba(2): test $0x1,%al
137bc(6): jz 0xfffffe5d(%rip)
137c2(2): jmp 0xffffff88(%rip)
137c4(4): nop 0x0(%rax)
137c8(4): movdqu (%rdx),%xmm0
137cc(4): lea 0xffffffff(%rbp),%rsi
137d0(4): mov (%rsp),%rdi
137d4(8): movaps %xmm0,0xe0(%rsp)
137dc(4): mov 0x10(%rdx),%rax
137e0(7): mov 0x1c0(%rsp),%edx
137e7(8): mov %rax,0xf0(%rsp)
137ef(5): call 0xffffa541(%rip)
137f4(8): mov 0x80(%rsp),%rdi
137fc(5): mov 0x60(%rsp),%rdx
13801(2): mov %eax,%ecx
13803(3): mov %r13,%rsi
13806(5): call 0xffff9a9a(%rip)
1380b(8): mov 0x1d8(%rsp),%rdi
13813(3): mov %rax,(%r15)
13816(5): cmp $0x0,0x0(%rdi,%rbp,8)
1381b(6): jnz 0xffffff27(%rip)
13821(7): mov 0xd4(%rsp),%eax
13828(2): test %eax,%eax
1382a(6): jz 0xffffff18(%rip)
13830(8): mov 0xa0(%rsp),%rbx
13838(5): jmp 0x108(%rip)
1383d(3): nop (%rax)
13840(4): mov 0x60(%r14),%rbp
13844(3): test %rbp,%rbp
13847(6): jz 0x1ae(%rip)
1384d(8): mov 0x168(%rsp),%rax
13855(7): mov 0x1c0(%rsp),%edx
1385c(4): mov (%rsp),%rdi
13860(4): lea 0xffffffff(%rax),%rsi
13864(5): call 0xffffa4cc(%rip)
13869(2): test $0x1,%al
1386b(6): jz 0xb5(%rip)
13871(8): mov 0x800(%rbp,%r13,8),%r13
13879(5): jmp 0xfffff8bc(%rip)
1387e(2): nop 
13880(8): cmp 0x178(%rsp),%rax
13888(6): jnl 0xfffff878(%rip)
1388e(5): jmp 0xfffffd10(%rip)
13893(3): mov %r12,%rdi
13896(5): call 0xfffee3ca(%rip)
1389b(5): nop 0x0(%rax,%rax,1)
138a0(4): mov (%rsp),%rdi
138a4(5): call 0xffff853c(%rip)
138a9(8): mov 0xd8(%rsp),%rbp
138b1(8): movsxd 0xac(%rsp),%rax
138b9(3): add %rax,%rbp
138bc(8): cmp 0x90(%rsp),%rbp
138c4(8): mov %rbp,0xd8(%rsp)
138cc(2): jl 0xd(%rip)
138ce(5): cmp 0x70(%rsp),%rbp
138d3(6): jle 0xfffff575(%rip)
138d9(8): mov 0x1d8(%rsp),%rdi
138e1(8): mov $0x1,0x5c(%rsp)
138e9(5): jmp 0xfffffbdf(%rip)
138ee(2): nop 
138f0(8): mov $0x1,0x5c(%rsp)
138f8(5): jmp 0xfffffbf1(%rip)
138fd(3): nop (%rax)
13900(8): mov 0xa0(%rsp),%rbx
13908(3): mov %r12,%r8
1390b(b): mov $0x0,0xd0(%rsp)
13916(5): jmp 0xfffff7f5(%rip)
1391b(5): nop 0x0(%rax,%rax,1)
13920(5): mov 0x0(%rbp,%r13,8),%r13
13925(5): jmp 0xfffff810(%rip)
1392a(6): nop 0x0(%rax,%rax,1)
13930(8): mov 0xa0(%rsp),%rbx
13938(8): mov 0x1d8(%rsp),%rdi
13940(3): test %rdi,%rdi
13943(7): mov %eax,0xd0(%rsp)
1394a(6): jz 0xe6(%rip)
13950(3): xor %r13d,%r13d
13953(5): jmp 0xfffff7ed(%rip)
13958(8): nop 0x0(%rax,%rax,1)
13960(7): mov 0x1c0(%rsp),%edx
13967(4): mov (%rsp),%rdi
1396b(4): lea 0xffffffff(%rax),%rsi
1396f(5): call 0xffffa3c1(%rip)
13974(2): test $0x1,%al
13976(6): jz 0x16f(%rip)
1397c(4): mov 0x50(%rbx),%r14
13980(3): test %r14,%r14
13983(6): jnz 0xfffff66b(%rip)
13989(7): mov 0xd0(%rsp),%eax
13990(3): cmp $0xc,%eax
13993(4): mov %eax,0x5c(%rsp)
13997(6): jz 0xfffffb29(%rip)
1399d(7): lea 0x930c(%rip),%rcx
139a4(7): lea 0x8d25(%rip),%rsi
139ab(7): lea 0x8dd2(%rip),%rdi
139b2(5): mov $0x435,%edx
139b7(5): call 0xfffee479(%rip)
139bc(4): nop 0x0(%rax)
139c0(5): mov 0x38(%rsp),%rax
139c5(8): cmp $0x0,0x98(%rax)
139cd(6): jz 0x22f(%rip)
139d3(5): jmp 0x14c(%rip)
139d8(3): mov %r12,%rdi
139db(5): call 0xfffee285(%rip)
139e0(8): mov 0x1d8(%rsp),%rdi
139e8(8): mov $0xc,0x5c(%rsp)
139f0(5): jmp 0xfffffad8(%rip)
139f5(8): mov 0x1b8(%rsp),%rdi
139fd(3): mov %r14,%rsi
13a00(5): call 0xffffafe0(%rip)
13a05(2): test %al,%al
13a07(6): jnz 0xfffff71d(%rip)
13a0d(8): mov 0x1d8(%rsp),%rdi
13a15(b): mov $0xc,0xd0(%rsp)
13a20(3): test %rdi,%rdi
13a23(6): jnz 0xffffff2d(%rip)
13a29(7): nop 0x0(%rax)
13a30(8): mov $0xc,0x5c(%rsp)
13a38(5): jmp 0xfffffa90(%rip)
13a3d(5): mov 0x68(%rsp),%rbx
13a42(8): mov 0xac(%rsp),%r13d
13a4a(8): mov 0x90(%rsp),%r14
13a52(5): mov 0x70(%rsp),%r15
13a57(8): mov 0x88(%rsp),%r12
13a5f(2): jmp 0x49(%rip)
13a61(7): nop 0x0(%rax)
13a68(3): cmp %rbp,%r12
13a6b(3): mov %rbx,%rax
13a6e(2): jle 0x11(%rip)
13a70(8): mov 0x128(%rsp),%rax
13a78(4): movzx 0x0(%rax,%rdx,1),%eax
13a7c(3): add %rbx,%rax
13a7f(3): cmp $0x0,(%rax)
13a82(6): jnz 0xfffff4c6(%rip)
13a88(3): movsxd %r13d,%rax
13a8b(3): add %rax,%rbp
13a8e(3): cmp %r14,%rbp
13a91(8): mov %rbp,0xd8(%rsp)
13a99(6): jl 0xfffffe40(%rip)
13a9f(3): cmp %r15,%rbp
13aa2(6): jnle 0xfffffe37(%rip)
13aa8(3): mov %rbp,%rdx
13aab(8): sub 0x148(%rsp),%rdx
13ab3(8): cmp %rdx,0x158(%rsp)
13abb(2): jnbe 0xffffffad(%rip)
13abd(7): mov 0x280(%rsp),%edx
13ac4(4): mov (%rsp),%rdi
13ac8(3): mov %rbp,%rsi
13acb(5): call 0xffffa535(%rip)
13ad0(2): test %eax,%eax
13ad2(6): jnz 0xfffff9e6(%rip)
13ad8(3): mov %rbp,%rdx
13adb(8): sub 0x148(%rsp),%rdx
13ae3(2): jmp 0xffffff85(%rip)
13ae5(2): test %eax,%eax
13ae7(6): jz 0xfffff507(%rip)
13aed(2): mov %eax,%edx
13aef(3): and $0x6,%edx
13af2(3): cmp $0x6,%edx
13af5(6): jz 0x46a(%rip)
13afb(2): test $0x2,%al
13afd(6): jz 0x4b3(%rip)
13b03(4): mov 0x58(%rbx),%r14
13b07(5): jmp 0xfffffe79(%rip)
13b0c(5): mov 0x38(%rsp),%rax
13b11(8): cmp $0x0,0x98(%rax)
13b19(6): jz 0xe3(%rip)
13b1f(5): mov 0x20(%rsp),%rcx
13b24(8): mov 0x1d8(%rsp),%rbx
13b2c(4): mov (%rsp),%rdi
13b30(4): mov 0x0(%rbx,%rcx,8),%rax
13b34(4): mov 0x10(%rax),%rsi
13b38(4): lea 0x18(%rax),%rdx
13b3c(5): call 0xffffa3f4(%rip)
13b41(8): mov %rax,0x1d0(%rsp)
13b49(5): jmp 0xfffff71f(%rip)
13b4e(2): xor %ecx,%ecx
13b50(5): jmp 0xfffff28e(%rip)
13b55(4): pxor %xmm0,%xmm0
13b59(8): mov %rax,0xe0(%rsp)
13b61(4): mov (%rsp),%rdi
13b65(5): mov 0x20(%rsp),%rax
13b6a(8): lea 0xe0(%rsp),%rbx
13b72(c): mov $0x0,0xe8(%rsp)
13b7e(8): mov %r13,0xf0(%rsp)
13b86(3): mov %rbx,%rsi
13b89(c): mov $0x0,0x110(%rsp)
13b95(8): movaps %xmm0,0x100(%rsp)
13b9d(8): mov %rax,0xf8(%rsp)
13ba5(5): call 0xffffea8b(%rip)
13baa(8): mov 0x110(%rsp),%rdi
13bb2(4): mov %eax,0x8(%rsp)
13bb6(5): call 0xfffee0aa(%rip)
13bbb(4): mov 0x8(%rsp),%eax
13bbf(2): test %eax,%eax
13bc1(6): jnz 0x447(%rip)
13bc7(5): cmp $0x0,(%r12)
13bcc(6): jz 0xfffffcc7(%rip)
13bd2(8): mov 0x1d8(%rsp),%rdi
13bda(5): call 0xfffee086(%rip)
13bdf(5): mov 0x20(%rsp),%rax
13be4(8): mov %r12,0x1d8(%rsp)
13bec(8): mov %r13,0x1d0(%rsp)
13bf4(8): mov %rax,0x1c8(%rsp)
13bfc(9): cmp $0x0,0x270(%rsp)
13c05(6): jz 0xfffff8bb(%rip)
13c0b(9): cmp $0x1,0x270(%rsp)
13c14(6): jz 0x424(%rip)
13c1a(8): mov 0xb8(%rsp),%rsi
13c22(8): mov 0x270(%rsp),%rcx
13c2a(7): mov $0xffffffff,%rdx
13c31(4): shl/sal $0x4,%rcx
13c35(4): lea 0x10(%rsi),%rax
13c39(3): add %rsi,%rcx
13c3c(4): mov %rdx,0x8(%rax)
13c40(3): mov %rdx,(%rax)
13c43(4): add $0x10,%rax
13c47(3): cmp %rax,%rcx
13c4a(2): jnz 0xfffffff2(%rip)
13c4c(8): mov 0xb8(%rsp),%rdi
13c54(8): mov 0x1c8(%rsp),%rax
13c5c(4): mov %rax,0x8(%rdi)
13c60(5): mov 0x48(%rsp),%rax
13c65(7): mov $0x0,(%rdi)
13c6c(4): test $0x10,0x38(%rax)
13c70(6): jnz 0x3e3(%rip)
13c76(9): cmp $0x1,0x270(%rsp)
13c7f(6): jz 0x3d4(%rip)
13c85(5): mov 0x38(%rsp),%rax
13c8a(3): xor %r8d,%r8d
13c8d(7): test $0x1,0xb0(%rax)
13c94(2): jz 0x11(%rip)
13c96(3): xor %r8d,%r8d
13c99(8): cmp $0x0,0x98(%rax)
13ca1(4): setnle %r8b
13ca5(8): mov 0xb8(%rsp),%rbx
13cad(8): mov 0x270(%rsp),%rdx
13cb5(4): mov (%rsp),%rsi
13cb9(5): mov 0x48(%rsp),%rdi
13cbe(3): mov %rbx,%rcx
13cc1(5): call 0xffffd3ff(%rip)
13cc6(2): test %eax,%eax
13cc8(6): jnz 0x2d5(%rip)
13cce(3): mov (%rbx),%rax
13cd1(9): movzx 0x1ac(%rsp),%r11d
13cda(8): mov 0x150(%rsp),%r10
13ce2(2): xor %ecx,%ecx
13ce4(8): mov 0x138(%rsp),%r9
13cec(8): mov 0x158(%rsp),%r8
13cf4(8): mov 0xd8(%rsp),%rdi
13cfc(8): mov 0xb8(%rsp),%rdx
13d04(2): jmp 0x5(%rip)
13d06(3): mov (%rdx),%rax
13d09(4): cmp $0xffffffff,%rax
13d0d(2): jz 0x1c(%rip)
13d0f(3): test %r11b,%r11b
13d12(4): mov 0x8(%rdx),%rsi
13d16(6): jnz 0x344(%rip)
13d1c(3): add %rdi,%rax
13d1f(3): add %rdi,%rsi
13d22(3): mov %rax,(%rdx)
13d25(4): mov %rsi,0x8(%rdx)
13d29(4): add $0x1,%rcx
13d2d(4): add $0x10,%rdx
13d31(8): cmp 0x270(%rsp),%rcx
13d39(2): jnz 0xffffffcd(%rip)
13d3b(9): cmp $0x0,0x98(%rsp)
13d44(2): jle 0x41(%rip)
13d46(8): mov 0x98(%rsp),%rdx
13d4e(8): mov 0xb8(%rsp),%rdi
13d56(3): mov %rcx,%rax
13d59(4): shl/sal $0x4,%rax
13d5d(3): add %rcx,%rdx
13d60(5): lea 0x8(%rdi,%rax,1),%rax
13d65(4): shl/sal $0x4,%rdx
13d69(5): lea 0x8(%rdi,%rdx,1),%rsi
13d6e(7): mov $0xffffffff,%rdx
13d75(4): mov %rdx,0xfffffff8(%rax)
13d79(3): mov %rdx,(%rax)
13d7c(4): add $0x10,%rax
13d80(3): cmp %rax,%rsi
13d83(2): jnz 0xfffffff2(%rip)
13d85(5): mov 0x38(%rsp),%rax
13d8a(8): mov 0x1d8(%rsp),%rdi
13d92(7): mov 0xe0(%rax),%r9
13d99(3): test %r9,%r9
13d9c(6): jz 0xfffff72c(%rip)
13da2(8): mov 0xb8(%rsp),%r10
13daa(3): xor %r8d,%r8d
13dad(4): lea 0x10(%r10),%rdx
13db1(2): jmp 0x38(%rip)
13db3(5): mov 0xfffffff8(%r9,%rsi,8),%rax
13db8(3): cmp %r8,%rax
13dbb(2): jz 0x27(%rip)
13dbd(4): add $0x1,%rax
13dc1(4): shl/sal $0x4,%rax
13dc5(4): mov 0x0(%r10,%rax,1),%rax
13dc9(3): mov %rax,(%rdx)
13dcc(5): mov 0xfffffff8(%r9,%rsi,8),%rax
13dd1(4): add $0x1,%rax
13dd5(4): shl/sal $0x4,%rax
13dd9(5): mov 0x8(%r10,%rax,1),%rax
13dde(4): mov %rax,0x8(%rdx)
13de2(4): add $0x10,%rdx
13de6(3): mov %rsi,%r8
13de9(4): lea 0x1(%r8),%rsi
13ded(3): cmp %rcx,%rsi
13df0(2): jnz 0xffffffc3(%rip)
13df2(5): jmp 0xfffff6d6(%rip)
13df7(9): nop 0x0(%rax,%rax,1)
13e00(4): mov (%rsp),%rdi
13e04(5): call 0xffff7fdc(%rip)
13e09(8): mov 0x218(%rsp),%rdi
13e11(5): call 0xfffede4f(%rip)
13e16(8): mov 0x1f8(%rsp),%rdi
13e1e(5): call 0xfffede42(%rip)
13e23(5): jmp 0xfffff6bd(%rip)
13e28(5): mov 0x38(%rsp),%rax
13e2d(7): test $0x2,0xb0(%rax)
13e34(6): jnz 0xffffeed5(%rip)
13e3a(c): mov $0x0,0x1d8(%rsp)
13e46(5): jmp 0xffffeeff(%rip)
13e4b(3): mov %r12,%rdi
13e4e(5): call 0xfffede12(%rip)
13e53(3): mov %rbp,%rdi
13e56(5): call 0xfffede0a(%rip)
13e5b(5): jmp 0xfffffa45(%rip)
13e60(8): mov %rax,0xd8(%rsp)
13e68(8): mov 0x1d8(%rsp),%rdi
13e70(8): mov $0x1,0x5c(%rsp)
13e78(5): jmp 0xfffff650(%rip)
13e7d(3): test %rax,%rax
13e80(3): mov %rax,%r13
13e83(6): jnz 0xfffff1f5(%rip)
13e89(5): jmp 0xfffff33b(%rip)
13e8e(2): nop 
13e90(3): mov %rax,%r13
13e93(5): jmp 0xfffff1e5(%rip)
13e98(3): cmp $0xc,%eax
13e9b(6): jz 0xfffffb45(%rip)
13ea1(7): lea 0x8e08(%rip),%rcx
13ea8(7): lea 0x8821(%rip),%rsi
13eaf(7): lea 0x88ce(%rip),%rdi
13eb6(5): mov $0x46c,%edx
13ebb(5): call 0xfffedf75(%rip)
13ec0(5): cmp $0x0,0x68(%r14)
13ec5(2): js 0x71(%rip)
13ec7(4): mov 0x58(%rsp),%esi
13ecb(5): mov 0x8(%rsp),%rax
13ed0(2): test %esi,%esi
13ed2(5): mov %rax,0x20(%rsp)
13ed7(6): jz 0xfffff2ff(%rip)
13edd(9): mov $0x1,0x30(%rsp)
13ee6(5): jmp 0xfffff157(%rip)
13eeb(3): mov %rbx,%rdi
13eee(8): mov $0xc,0x5c(%rsp)
13ef6(5): jmp 0xfffff5d2(%rip)
13efb(4): lea 0x10(%r14),%rbx
13eff(4): lea 0x18(%r14),%rbp
13f03(4): mov (%rsp),%rdi
13f07(2): xor %ecx,%ecx
13f09(3): mov %rbp,%rdx
13f0c(3): mov %rbx,%rsi
13f0f(5): call 0xffff9cd1(%rip)
13f14(2): test %eax,%eax
13f16(7): mov %eax,0xd0(%rsp)
13f1d(2): jnz 0x4b(%rip)
13f1f(5): movzx 0x68(%r14),%eax
13f24(2): test $0x40,%al
13f26(6): jnz 0xea(%rip)
13f2c(5): mov $0x0,0x18(%rsp)
13f31(5): jmp 0xfffff0f2(%rip)
13f36(4): mov 0x10(%r14),%rsi
13f3a(5): mov 0x8(%rsp),%rcx
13f3f(4): lea 0x18(%r14),%rdx
13f43(4): mov (%rsp),%rdi
13f47(5): call 0xffff9fe9(%rip)
13f4c(3): test %rax,%rax
13f4f(5): mov %rax,0x30(%rsp)
13f54(6): jz 0xfffff0e9(%rip)
13f5a(5): jmp 0xffffff6d(%rip)
13f5f(4): mov 0x60(%rbx),%r14
13f63(5): jmp 0xfffffa1d(%rip)
13f68(2): cwde 
13f6a(5): mov %rax,0x20(%rsp)
13f6f(5): jmp 0xfffff267(%rip)
13f74(5): mov 0x18(%rsp),%r14
13f79(3): mov %r15d,%eax
13f7c(3): mov %r12,%rdi
13f7f(4): mov %eax,0x8(%rsp)
13f83(5): call 0xfffedcdd(%rip)
13f88(3): mov %r14,%rdi
13f8b(5): call 0xfffedcd5(%rip)
13f90(4): mov 0x8(%rsp),%eax
13f94(3): cmp $0x1,%eax
13f97(6): jz 0xfffff909(%rip)
13f9d(8): mov 0x1d8(%rsp),%rdi
13fa5(4): mov %eax,0x5c(%rsp)
13fa9(5): jmp 0xfffff51f(%rip)
13fae(2): nop 
13fb0(2): test $0x4,%al
13fb2(6): jz 0xfffff03c(%rip)
13fb8(4): mov 0x50(%r14),%rdx
13fbc(5): mov 0x28(%rsp),%rdi
13fc1(2): mov %eax,%ecx
13fc3(3): mov %rbx,%rsi
13fc6(5): call 0xffff92da(%rip)
13fcb(3): mov %rax,%r14
13fce(5): jmp 0xfffff9b2(%rip)
13fd3(5): mov 0x10(%rsp),%r15
13fd8(5): mov 0x8(%rsp),%rcx
13fdd(3): mov %rbp,%rdx
13fe0(3): mov %r12,%rsi
13fe3(5): mov %r14,0x20(%rsp)
13fe8(3): mov %r15,%rdi
13feb(5): call 0xffff9775(%rip)
13ff0(3): mov %rbp,%rdi
13ff3(4): mov %eax,0x8(%rsp)
13ff7(5): call 0xfffedc69(%rip)
13ffc(4): mov 0x8(%rsp),%eax
14000(2): test %eax,%eax
14002(6): jz 0xfffffbd0(%rip)
14008(3): xor %r14d,%r14d
1400b(5): jmp 0xffffff71(%rip)
14010(4): mov (%rsp),%rdi
14014(3): mov %rbp,%rdx
14017(3): mov %rbx,%rsi
1401a(5): call 0xffffdb36(%rip)
1401f(2): test %eax,%eax
14021(7): mov %eax,0xd0(%rsp)
14028(6): jnz 0xffffff40(%rip)
1402e(5): movzx 0x68(%r14),%eax
14033(5): jmp 0xfffffef9(%rip)
14038(8): mov 0xb8(%rsp),%rsi
14040(8): mov 0x1c8(%rsp),%rax
14048(7): mov $0x0,(%rsi)
1404f(4): mov %rax,0x8(%rsi)
14053(2): xor %eax,%eax
14055(5): jmp 0xfffffc7c(%rip)
1405a(3): cmp %rax,%r10
1405d(2): jz 0x1f(%rip)
1405f(4): mov 0x0(%r9,%rax,8),%rax
14063(3): cmp %rsi,%r10
14066(3): mov %rax,(%rdx)
14069(2): jz 0xb(%rip)
1406b(4): mov 0x0(%r9,%rsi,8),%rsi
1406f(5): jmp 0xfffffcad(%rip)
14074(3): mov %r8,%rsi
14077(5): jmp 0xfffffca5(%rip)
1407c(3): mov %r8,%rax
1407f(2): jmp 0xffffffe4(%rip)
14081(8): mov %rbp,0xd8(%rsp)
14089(5): jmp 0xffffeebf(%rip)
1408e(8): mov %rax,0x168(%rsp)
14096(5): jmp 0xfffff12e(%rip)
1409b(5): call 0xfffedd15(%rip)

"update_cur_sifted_state" :
140a0(2): push %r15
140a2(2): push %r14
140a4(3): mov %rdi,%rax
140a7(2): push %r13
140a9(2): push %r12
140ab(3): mov %rsi,%r13
140ae(1): push %rbp
140af(1): push %rbx
140b0(3): mov %rdx,%rbp
140b3(3): mov %rcx,%rbx
140b6(8): lea 0x0(,%rdx,8),%rcx
140be(7): sub $0xa8,%rsp
140c5(7): mov 0x98(%rax),%r12
140cc(7): mov 0xb8(%rax),%rax
140d3(5): mov %rdi,0x8(%rsp)
140d8(5): mov %rcx,0x18(%rsp)
140dd(9): mov $0x28,%rdi
140e6(8): mov %rdi,0x98(%rsp)
140ee(2): xor %edi,%edi
140f0(4): mov 0x0(%rax,%rdx,8),%rdx
140f4(8): mov $0x0,0x5c(%rsp)
140fc(4): mov 0x8(%rbx),%rcx
14100(3): test %rdx,%rdx
14103(6): jz 0x255(%rip)
14109(4): lea 0x8(%rdx),%rdi
1410d(3): test %rcx,%rcx
14110(5): mov %rdi,0x10(%rsp)
14115(2): jnz 0x53(%rip)
14117(3): mov (%rsi),%rdx
1411a(8): mov $0x0,0x0(%rdx,%rbp,8)
14122(4): mov 0x0(%rax,%rbp,8),%rdx
14126(2): xor %eax,%eax
14128(4): test $0x40,0x68(%rdx)
1412c(6): jnz 0xe3(%rip)
14132(6): nop 0x0(%rax,%rax,1)
14138(8): mov 0x98(%rsp),%rdi
14140(9): xor $0x28,%rdi
14149(6): jnz 0x7a2(%rip)
1414f(7): add $0xa8,%rsp
14156(1): pop %rbx
14157(1): pop %rbp
14158(2): pop %r12
1415a(2): pop %r13
1415c(2): pop %r14
1415e(2): pop %r15
14160(1): ret near (%rsp)
14161(7): nop 0x0(%rax)
14168(5): lea 0x60(%rsp),%rdi
1416d(3): mov %rbx,%rdx
14170(3): mov %r12,%rsi
14173(8): mov $0x0,0x60(%rsp)
1417b(5): call 0xffff93e5(%rip)
14180(3): mov %rax,%rdx
14183(4): mov 0x60(%rsp),%eax
14187(2): test %eax,%eax
14189(2): jnz 0xffffffaf(%rip)
1418b(4): mov 0x38(%rdx),%r15
1418f(4): lea 0x38(%rdx),%r14
14193(3): test %r15,%r15
14196(6): jz 0x20a(%rip)
1419c(5): mov 0x10(%rsp),%rsi
141a1(3): mov %r14,%rdx
141a4(3): mov %rbx,%rdi
141a7(5): call 0xffff88b9(%rip)
141ac(2): test %eax,%eax
141ae(4): mov %eax,0x5c(%rsp)
141b2(2): jnz 0xffffff86(%rip)
141b4(5): cmp $0x0,0x28(%r13)
141b9(6): jnz 0x277(%rip)
141bf(5): mov 0x18(%rsp),%r14
141c4(4): add 0x0(%r13),%r14
141c8(5): lea 0x5c(%rsp),%rdi
141cd(3): mov %rbx,%rdx
141d0(3): mov %r12,%rsi
141d3(5): call 0xffff938d(%rip)
141d8(3): mov %rax,(%r14)
141db(4): mov 0x5c(%rsp),%eax
141df(2): test %eax,%eax
141e1(6): jnz 0xffffff57(%rip)
141e7(6): cmp $0x0,0x10(%rsp)
141ed(6): jz 0xffffff4b(%rip)
141f3(5): mov 0x8(%rsp),%rax
141f8(7): mov 0xb8(%rax),%rax
141ff(4): mov 0x0(%rax,%rbp,8),%rdx
14203(2): xor %eax,%eax
14205(4): test $0x40,0x68(%rdx)
14209(6): jz 0xffffff2f(%rip)
1420f(5): mov 0x8(%rsp),%rax
14214(2): xor %ebx,%ebx
14216(7): mov 0xc8(%rax),%rsi
1421d(3): mov %rsi,%rdx
14220(3): cmp %rdx,%rbx
14223(2): jnl 0x60(%rip)
14225(4): lea 0x0(%rbx,%rdx,1),%rax
14229(3): mov %rax,%rcx
1422c(4): shr $0x3f,%rcx
14230(3): add %rax,%rcx
14233(5): mov 0x8(%rsp),%rax
14238(3): sar $0x1,%rcx
1423b(7): mov 0xd8(%rax),%rdi
14242(4): lea 0x0(%rcx,%rcx,4),%rax
14246(5): cmp 0x8(%rdi,%rax,8),%rbp
1424b(2): jle 0x33(%rip)
1424d(5): jmp 0x13a(%rip)
14252(6): nop 0x0(%rax,%rax,1)
14258(4): lea 0x0(%rbx,%rcx,1),%rdx
1425c(3): mov %rdx,%rax
1425f(4): shr $0x3f,%rax
14263(3): add %rdx,%rax
14266(3): sar $0x1,%rax
14269(4): lea 0x0(%rax,%rax,4),%rdx
1426d(3): mov %rax,%r8
14270(5): cmp 0x8(%rdi,%rdx,8),%rbp
14275(6): jnle 0x11b(%rip)
1427b(3): mov %rax,%rcx
1427e(3): cmp %rcx,%rbx
14281(2): jl 0xffffffd7(%rip)
14283(3): cmp %rbx,%rsi
14286(6): jle 0xfa(%rip)
1428c(4): lea 0x0(%rbx,%rbx,4),%rax
14290(8): lea 0x0(,%rax,8),%rsi
14298(5): mov 0x8(%rsp),%rax
1429d(5): mov %rsi,0x40(%rsp)
142a2(7): mov 0xd8(%rax),%rax
142a9(5): cmp 0x8(%rax,%rsi,1),%rbp
142ae(6): jnz 0xd2(%rip)
142b4(4): cmp $0xffffffff,%rbx
142b8(6): jz 0xc8(%rip)
142be(5): mov 0x8(%rsp),%rax
142c3(9): mov $0x0,0x60(%rsp)
142cc(7): mov 0x98(%rax),%r12
142d3(5): mov 0x10(%rsp),%rax
142d8(5): cmp $0x0,0x8(%rax)
142dd(6): jle 0xa3(%rip)
142e3(5): lea 0x60(%rsp),%rax
142e8(9): mov $0x0,0x20(%rsp)
142f1(5): mov %rbx,0x48(%rsp)
142f6(3): mov %r13,%r15
142f9(5): mov %rax,0x38(%rsp)
142fe(2): jmp 0x24(%rip)
14300(2): cmp $0x4,%al
14302(6): jz 0x386(%rip)
14308(5): mov 0x10(%rsp),%rcx
1430d(6): add $0x1,0x20(%rsp)
14313(5): mov 0x20(%rsp),%rax
14318(4): cmp 0x8(%rcx),%rax
1431c(6): jnl 0x5bf(%rip)
14322(5): mov 0x10(%rsp),%rax
14327(5): mov 0x20(%rsp),%rdi
1432c(4): mov 0x10(%rax),%rax
14330(4): mov 0x0(%rax,%rdi,8),%r14
14334(3): mov %r14,%rax
14337(4): shl/sal $0x4,%rax
1433b(4): add (%r12),%rax
1433f(4): cmp 0x10(%r15),%r14
14343(4): movzx 0x8(%rax),%eax
14347(2): jnz 0xffffffb9(%rip)
14349(4): cmp 0x18(%r15),%rbp
1434d(2): jnz 0xffffffb3(%rip)
1434f(2): jmp 0xffffffb9(%rip)
14351(7): nop 0x0(%rax)
14358(8): lea 0x0(,%rbp,8),%r14
14360(3): add (%rsi),%r14
14363(3): test %rcx,%rcx
14366(6): jnz 0xba(%rip)
1436c(7): mov $0x0,(%r14)
14373(2): xor %eax,%eax
14375(5): jmp 0xfffffdc3(%rip)
1437a(6): nop 0x0(%rax,%rax,1)
14380(2): xor %eax,%eax
14382(5): jmp 0xfffffdb6(%rip)
14387(3): mov %rcx,%r8
1438a(3): mov %rdx,%rcx
1438d(3): nop (%rax)
14390(4): lea 0x1(%r8),%rbx
14394(3): mov %rcx,%rdx
14397(5): jmp 0xfffffe89(%rip)
1439c(4): nop 0x0(%rax)
143a0(4): mov 0x8(%rbx),%rdi
143a4(8): mov $0x0,0x40(%rdx)
143ac(5): mov %rdx,0x20(%rsp)
143b1(4): mov %rdi,0x38(%rdx)
143b5(4): shl/sal $0x3,%rdi
143b9(5): call 0xfffedb67(%rip)
143be(5): mov 0x20(%rsp),%rdx
143c3(3): test %rax,%rax
143c6(4): mov %rax,0x48(%rdx)
143ca(2): jz 0x49(%rip)
143cc(5): cmp $0x0,0x8(%rbx)
143d1(8): mov $0x0,0x60(%rsp)
143d9(2): jnle 0x15(%rip)
143db(5): jmp 0xfffffdc1(%rip)
143e0(4): add $0x1,%r15
143e4(4): cmp 0x8(%rbx),%r15
143e8(6): jnl 0xfffffdb4(%rip)
143ee(4): mov 0x10(%rbx),%rax
143f2(3): mov %r14,%rdi
143f5(4): mov 0x0(%rax,%r15,8),%rax
143f9(4): lea 0x0(%rax,%rax,2),%rdx
143fd(5): mov 0x38(%r12),%rax
14402(4): lea 0x0(%rax,%rdx,8),%rsi
14406(5): call 0xffff806a(%rip)
1440b(2): test %eax,%eax
1440d(4): mov %eax,0x60(%rsp)
14411(2): jz 0xffffffcf(%rip)
14413(5): mov $0xc,%eax
14418(5): jmp 0xfffffd20(%rip)
1441d(3): nop (%rax)
14420(9): mov $0x0,0x10(%rsp)
14429(5): jmp 0xfffffd9f(%rip)
1442e(2): nop 
14430(5): mov 0x8(%rsp),%rax
14435(7): mov 0xd8(%rax),%rax
1443c(5): mov %rax,0x20(%rsp)
14441(6): jle 0xda(%rip)
14447(3): xor %r15d,%r15d
1444a(6): nop 0x0(%rax,%rax,1)
14450(4): mov 0x30(%r13),%rax
14454(5): mov 0x20(%rsp),%rdi
14459(4): mov 0x0(%rax,%r15,8),%rax
1445d(4): lea 0x0(%rax,%rax,4),%rax
14461(4): lea 0x0(%rdi,%rax,8),%rdx
14465(4): cmp 0x10(%rdx),%rbp
14469(6): jle 0xa4(%rip)
1446f(4): cmp 0x8(%rdx),%rbp
14473(6): jnle 0x9a(%rip)
14479(3): mov (%rdx),%rcx
1447c(4): mov (%r12),%rax
14480(4): mov 0x8(%rbx),%rsi
14484(4): shl/sal $0x4,%rcx
14488(4): cmp 0x18(%rdx),%rbp
1448c(4): mov 0x0(%rax,%rcx,1),%r8
14490(6): jz 0xa0(%rip)
14496(3): xor %r14d,%r14d
14499(3): test %rsi,%rsi
1449c(2): jle 0x71(%rip)
1449e(5): mov %rbp,0x28(%rsp)
144a3(3): mov %r8,%rbp
144a6(2): jmp 0x18(%rip)
144a8(8): nop 0x0(%rax,%rax,1)
144b0(4): add $0x1,%r14
144b4(4): cmp 0x8(%rbx),%r14
144b8(2): jnl 0x50(%rip)
144ba(4): mov (%r12),%rax
144be(4): mov 0x10(%rbx),%rdx
144c2(4): mov 0x0(%rdx,%r14,8),%rsi
144c6(3): mov %rsi,%rdx
144c9(4): shl/sal $0x4,%rdx
144cd(3): add %rdx,%rax
144d0(4): movzx 0x8(%rax),%edx
144d4(3): sub $0x8,%edx
144d7(3): cmp $0x1,%edx
144da(2): jnbe 0xffffffd6(%rip)
144dc(3): cmp (%rax),%rbp
144df(2): jnz 0xffffffd1(%rip)
144e1(5): mov 0x10(%rsp),%rcx
144e6(3): mov %rbx,%rdx
144e9(3): mov %r12,%rdi
144ec(5): call 0xffffa2b4(%rip)
144f1(2): test %eax,%eax
144f3(6): jnz 0xfffffc45(%rip)
144f9(4): add $0x1,%r14
144fd(4): cmp 0x8(%rbx),%r14
14501(2): jl 0xffffffb9(%rip)
14503(5): nop 0x0(%rax,%rax,1)
14508(5): mov 0x28(%rsp),%rbp
1450d(4): add $0x1,%r15
14511(4): cmp 0x28(%r13),%r15
14515(6): jl 0xffffff3b(%rip)
1451b(8): mov $0x0,0x5c(%rsp)
14523(5): jmp 0xfffffc9c(%rip)
14528(8): nop 0x0(%rax,%rax,1)
14530(3): test %rsi,%rsi
14533(2): jle 0xffffffda(%rip)
14535(4): mov 0x10(%rbx),%r10
14539(7): mov $0xffffffff,%r9
14540(4): lea 0x0(%r10,%rsi,8),%r11
14544(3): mov %r10,%rcx
14547(3): mov %r9,%rsi
1454a(2): jmp 0x1c(%rip)
1454c(4): nop 0x0(%rax)
14550(4): cmp $0x9,%r14d
14554(2): jnz 0x9(%rip)
14556(3): cmp (%rdx),%r8
14559(4): cmove %rdi,%r9
1455d(4): add $0x8,%rcx
14561(3): cmp %rcx,%r11
14564(2): jz 0x2a(%rip)
14566(3): mov (%rcx),%rdi
14569(3): mov %rdi,%rdx
1456c(4): shl/sal $0x4,%rdx
14570(3): add %rax,%rdx
14573(5): movzx 0x8(%rdx),%r14d
14578(4): cmp $0x8,%r14d
1457c(2): jnz 0xffffffd4(%rip)
1457e(3): cmp (%rdx),%r8
14581(4): cmove %rdi,%rsi
14585(4): add $0x8,%rcx
14589(3): cmp %rcx,%r11
1458c(2): jnz 0xffffffda(%rip)
1458e(3): test %rsi,%rsi
14591(3): mov %r9,%r14
14594(5): mov %r9,0x28(%rsp)
14599(6): js 0xc7(%rip)
1459f(5): mov 0x10(%rsp),%rcx
145a4(3): mov %rbx,%rdx
145a7(3): mov %r12,%rdi
145aa(5): call 0xffffa1f6(%rip)
145af(2): test %eax,%eax
145b1(6): jnz 0xfffffb87(%rip)
145b7(3): test %r14,%r14
145ba(6): js 0xffffff53(%rip)
145c0(5): cmp $0x0,0x8(%rbx)
145c5(6): jle 0xffffff48(%rip)
145cb(4): mov 0x10(%rbx),%r10
145cf(3): xor %r14d,%r14d
145d2(5): mov %rbp,0x30(%rsp)
145d7(3): mov %r14,%rbp
145da(5): mov 0x28(%rsp),%r14
145df(2): jmp 0x1b(%rip)
145e1(7): nop 0x0(%rax)
145e8(4): add $0x1,%rbp
145ec(4): cmp 0x8(%rbx),%rbp
145f0(6): jnl 0x88(%rip)
145f6(4): mov 0x10(%rbx),%r10
145fa(4): mov 0x0(%r10,%rbp,8),%r10
145fe(5): mov 0x38(%r12),%rax
14603(3): mov %r14,%rdx
14606(4): lea 0x0(%r10,%r10,2),%r9
1460a(4): shl/sal $0x3,%r9
1460e(3): add %r9,%rax
14611(4): mov 0x8(%rax),%rdi
14615(4): lea 0x10(%rax),%rsi
14619(5): call 0xffff7937(%rip)
1461e(3): test %rax,%rax
14621(2): jnz 0xffffffc7(%rip)
14623(5): add 0x30(%r12),%r9
14628(4): mov 0x8(%r9),%rdi
1462c(4): lea 0x10(%r9),%rsi
14630(5): call 0xffff7920(%rip)
14635(3): test %rax,%rax
14638(2): jnz 0xffffffb0(%rip)
1463a(5): mov 0x10(%rsp),%rcx
1463f(3): mov %rbx,%rdx
14642(3): mov %r10,%rsi
14645(3): mov %r12,%rdi
14648(5): call 0xffffa158(%rip)
1464d(2): test %eax,%eax
1464f(6): jnz 0xfffffae9(%rip)
14655(4): sub $0x1,%rbp
14659(2): jmp 0xffffff8f(%rip)
1465b(5): nop 0x0(%rax,%rax,1)
14660(6): cmp $0x0,0x28(%rsp)
14666(6): jns 0xffffff69(%rip)
1466c(5): jmp 0xfffffea1(%rip)
14671(7): nop 0x0(%rax)
14678(5): mov 0x30(%rsp),%rbp
1467d(5): jmp 0xfffffe90(%rip)
14682(6): nop 0x0(%rax,%rax,1)
14688(5): mov 0x8(%rsp),%rax
1468d(5): mov 0x40(%rsp),%r13
14692(5): mov 0x48(%rsp),%rbx
14697(7): add 0xd8(%rax),%r13
1469e(4): lea 0x0(%r14,%r14,2),%rax
146a2(4): shl/sal $0x3,%rax
146a6(5): mov %rax,0x30(%rsp)
146ab(8): lea 0x0(,%r14,8),%rax
146b3(5): mov %rax,0x28(%rsp)
146b8(3): mov %r15,%rax
146bb(3): mov %r13,%r15
146be(3): mov %rbx,%r13
146c1(3): mov %rax,%rbx
146c4(5): jmp 0x16a(%rip)
146c9(7): nop 0x0(%rax)
146d0(4): mov 0x18(%r15),%rax
146d4(4): sub 0x10(%r15),%rax
146d8(3): test %rax,%rax
146db(5): lea 0x0(%rbp,%rax,1),%r9
146e0(6): jz 0x160(%rip)
146e6(5): mov 0x18(%r12),%rax
146eb(5): mov 0x28(%rsp),%rsi
146f0(4): mov 0x0(%rax,%rsi,1),%r10
146f4(4): cmp 0x18(%rbx),%r9
146f8(6): jnle 0x13f(%rip)
146fe(3): mov (%rbx),%rax
14701(4): mov 0x0(%rax,%r9,8),%rax
14705(3): test %rax,%rax
14708(6): jz 0x12f(%rip)
1470e(4): mov 0x10(%rax),%rdi
14712(4): lea 0x18(%rax),%rsi
14716(3): mov %r10,%rdx
14719(5): call 0xffff7837(%rip)
1471e(3): test %rax,%rax
14721(6): jz 0x116(%rip)
14727(4): sub $0x8,%rsp
1472b(4): lea 0x30(%rbx),%rdx
1472f(4): lea 0x28(%rbx),%rsi
14733(2): push %r9
14735(5): mov 0x18(%rsp),%rdi
1473a(3): mov %r14,%rcx
1473d(3): mov %r10,%r9
14740(3): mov %rbp,%r8
14743(5): call 0xffff7abd(%rip)
14748(2): test %al,%al
1474a(1): pop %rdx
1474b(1): pop %rcx
1474c(6): jnz 0xeb(%rip)
14752(6): cmp $0x0,0x60(%rsp)
14758(6): jz 0x110(%rip)
1475e(5): mov 0x38(%rsp),%rax
14763(3): mov %r13,%rsi
14766(5): mov %r14,0x70(%rsp)
1476b(5): mov %rbp,0x78(%rsp)
14770(4): lea 0x20(%rax),%rdi
14774(5): call 0xffff629c(%rip)
14779(2): test %al,%al
1477b(6): jz 0x159(%rip)
14781(5): mov 0x18(%rsp),%rdi
14786(5): mov 0x60(%rsp),%rax
1478b(5): mov 0x38(%rsp),%rsi
14790(4): mov 0x0(%rax,%rdi,1),%r15
14794(5): mov 0x8(%rsp),%rdi
14799(5): call 0xffffde97(%rip)
1479e(2): test %eax,%eax
147a0(6): jnz 0x10e(%rip)
147a6(4): mov 0x8(%rbx),%rsi
147aa(5): mov 0x60(%rsp),%rdx
147af(3): test %rsi,%rsi
147b2(2): jz 0x1b(%rip)
147b4(4): lea 0x1(%rbp),%rcx
147b8(3): mov %r12,%rdi
147bb(5): call 0xffff8fa5(%rip)
147c0(2): test %eax,%eax
147c2(6): jnz 0xec(%rip)
147c8(5): mov 0x60(%rsp),%rdx
147cd(5): mov 0x38(%rsp),%r11
147d2(5): mov 0x18(%rsp),%rax
147d7(8): mov 0x88(%rsp),%rdi
147df(4): lea 0x30(%r11),%r9
147e3(4): mov %r15,0x0(%rdx,%rax,1)
147e7(3): mov %r13,%rdx
147ea(3): mov %r9,%rsi
147ed(5): call 0xffff7763(%rip)
147f2(4): sub $0x1,%rax
147f6(3): mov %rax,%rdx
147f9(2): js 0xe(%rip)
147fb(4): lea 0x28(%r11),%rdi
147ff(3): mov %r9,%rsi
14802(5): call 0xffff78ce(%rip)
14807(5): mov 0x8(%rsp),%rcx
1480c(5): lea 0x0(%r13,%r13,4),%rax
14811(7): mov 0xd8(%rcx),%rdx
14818(4): lea 0x0(%rdx,%rax,8),%rax
1481c(4): nop 0x0(%rax)
14820(4): add $0x1,%r13
14824(4): cmp $0x0,0x20(%rax)
14828(4): lea 0x28(%rax),%r15
1482c(2): jz 0x34(%rip)
1482e(3): cmp (%r15),%r14
14831(6): jz 0xfffffe9f(%rip)
14837(3): mov %r15,%rax
1483a(2): jmp 0xffffffe6(%rip)
1483c(4): nop 0x0(%rax)
14840(5): mov 0x28(%r12),%rax
14845(5): mov 0x30(%rsp),%rdi
1484a(5): mov 0x10(%rax,%rdi,1),%rax
1484f(3): mov (%rax),%r10
14852(5): jmp 0xfffffea2(%rip)
14857(9): nop 0x0(%rax,%rax,1)
14860(3): mov %rbx,%r15
14863(5): jmp 0xfffffaa5(%rip)
14868(4): mov 0x30(%rbx),%rax
1486c(4): lea 0x20(%rbx),%rsi
14870(4): movdqa (%rbx),%xmm0
14874(8): mov %rax,0x90(%rsp)
1487c(5): mov 0x38(%rsp),%rax
14881(5): movaps %xmm0,0x60(%rsp)
14886(4): lea 0x20(%rax),%rdi
1488a(5): movdqa 0x10(%rbx),%xmm0
1488f(5): movaps %xmm0,0x70(%rsp)
14894(5): movdqa 0x20(%rbx),%xmm0
14899(8): movaps %xmm0,0x80(%rsp)
148a1(5): call 0xffff880f(%rip)
148a6(2): test %eax,%eax
148a8(6): jz 0xfffffeb6(%rip)
148ae(6): cmp $0x0,0x60(%rsp)
148b4(6): jz 0xfffff884(%rip)
148ba(8): mov 0x90(%rsp),%rdi
148c2(4): mov %eax,0x8(%rsp)
148c6(5): call 0xfffed39a(%rip)
148cb(4): mov 0x8(%rsp),%eax
148cf(5): jmp 0xfffff869(%rip)
148d4(5): mov $0xc,%eax
148d9(2): jmp 0xffffffd5(%rip)
148db(6): cmp $0x0,0x60(%rsp)
148e1(6): jz 0xfffffa9f(%rip)
148e7(2): xor %eax,%eax
148e9(2): jmp 0xffffffd1(%rip)
148eb(5): call 0xfffed4c5(%rip)

"parse_bracket_element.constprop.37" :
148f0(2): push %r14
148f2(2): push %r13
148f4(3): mov %rsi,%r10
148f7(2): push %r12
148f9(1): push %rbp
148fa(3): movsxd %ecx,%r11
148fd(1): push %rbx
148fe(3): mov %rdx,%rbp
14901(3): mov %rdi,%rbx
14904(4): sub $0x20,%rsp
14908(4): mov 0x48(%rsi),%r12
1490c(9): mov $0x28,%rax
14915(5): mov %rax,0x18(%rsp)
1491a(2): xor %eax,%eax
1491c(7): cmp $0x1,0x90(%rsi)
14923(2): jz 0x55(%rip)
14925(3): mov %r12,%rsi
14928(3): mov %r10,%rdi
1492b(5): call 0xffff7575(%rip)
14930(3): cmp $0x1,%eax
14933(2): jle 0x45(%rip)
14935(4): mov 0x10(%r10),%rdx
14939(2): cwde 
1493b(6): mov $0x1,(%rbx)
14941(3): add %r12,%rax
14944(4): mov 0x0(%rdx,%r12,4),%edx
14948(3): mov %edx,0x8(%rbx)
1494b(4): mov %rax,0x48(%r10)
1494f(2): xor %eax,%eax
14951(5): mov 0x18(%rsp),%rcx
14956(9): xor $0x28,%rcx
1495f(6): jnz 0x1e9(%rip)
14965(4): add $0x20,%rsp
14969(1): pop %rbx
1496a(1): pop %rbp
1496b(2): pop %r12
1496d(2): pop %r13
1496f(2): pop %r14
14971(1): ret near (%rsp)
14972(6): nop 0x0(%rax,%rax,1)
14978(4): movzx 0x8(%rbp),%eax
1497c(3): add %r12,%r11
1497f(4): mov %r11,0x48(%r10)
14983(2): mov %eax,%edx
14985(3): and $0xfb,%edx
14988(3): cmp $0x1a,%dl
1498b(2): jz 0x25(%rip)
1498d(2): cmp $0x1c,%al
1498f(2): jz 0x21(%rip)
14991(2): cmp $0x16,%al
14993(2): jnz 0xb(%rip)
14995(3): test %r9b,%r9b
14998(6): jz 0x14a(%rip)
1499e(4): movzx 0x0(%rbp),%eax
149a2(6): mov $0x0,(%rbx)
149a8(3): mov %al,0x8(%rbx)
149ab(2): xor %eax,%eax
149ad(2): jmp 0xffffffa4(%rip)
149af(1): nop 
149b0(4): mov 0x68(%r10),%r12
149b4(3): cmp %r12,%r11
149b7(6): jnl 0x121(%rip)
149bd(5): movzx 0x0(%rbp),%r13d
149c2(3): xor %r8d,%r8d
149c5(2): jmp 0x2d(%rip)
149c7(9): nop 0x0(%rax,%rax,1)
149d0(4): mov 0x8(%rbx),%rax
149d4(4): mov %r9b,0x0(%rax,%r8,1)
149d8(4): add $0x1,%r8
149dc(4): cmp $0x20,%r8
149e0(6): jz 0xf8(%rip)
149e6(4): movzx 0x8(%rbp),%eax
149ea(4): mov 0x48(%r10),%r11
149ee(4): mov 0x68(%r10),%r12
149f2(2): cmp $0x1e,%al
149f4(3): movsxd %r8d,%r14
149f7(2): jz 0x69(%rip)
149f9(4): mov 0x8(%r10),%rdx
149fd(4): lea 0x1(%r11),%rax
14a01(4): mov %rax,0x48(%r10)
14a05(5): movzx 0x0(%rdx,%r11,1),%r9d
14a0a(3): cmp %r12,%rax
14a0d(6): jnl 0xcb(%rip)
14a13(3): cmp %r9b,%r13b
14a16(2): jnz 0xffffffba(%rip)
14a18(4): mov 0x8(%r10),%rdx
14a1c(4): cmp $0x5d,0x0(%rdx,%rax,1)
14a20(2): jnz 0xffffffb0(%rip)
14a22(4): add $0x1,%rax
14a26(4): mov %rax,0x48(%r10)
14a2a(4): mov 0x8(%rbx),%rax
14a2e(5): mov $0x0,0x0(%rax,%r14,1)
14a33(4): movzx 0x8(%rbp),%eax
14a37(2): cmp $0x1c,%al
14a39(6): jz 0x102(%rip)
14a3f(2): cmp $0x1e,%al
14a41(6): jz 0xed(%rip)
14a47(2): cmp $0x1a,%al
14a49(6): jz 0xd8(%rip)
14a4f(2): xor %eax,%eax
14a51(5): jmp 0xffffff00(%rip)
14a56(a): nop 0x0(%rax,%rax,1)
14a60(8): cmp $0x0,0x8b(%r10)
14a68(2): jz 0xffffff91(%rip)
14a6a(8): cmp $0x0,0x8c(%r10)
14a72(6): jz 0x96(%rip)
14a78(4): cmp 0x30(%r10),%r11
14a7c(2): jz 0x11(%rip)
14a7e(4): mov 0x10(%r10),%rax
14a82(5): cmp $0xff,0x0(%rax,%r11,4)
14a87(6): jz 0xffffff72(%rip)
14a8d(4): mov 0x18(%r10),%rax
14a91(4): mov 0x0(%rax,%r11,8),%rax
14a95(3): add (%r10),%rax
14a98(4): add 0x28(%r10),%rax
14a9c(4): movzx (%rax),%r9d
14aa0(4): test $0x80,%r9b
14aa4(6): jnz 0xffffff55(%rip)
14aaa(8): cmp $0x1,0x90(%r10)
14ab2(5): mov $0x1,%eax
14ab7(2): jz 0xf(%rip)
14ab9(3): mov %r11,%rsi
14abc(3): mov %r10,%rdi
14abf(5): call 0xffff73e1(%rip)
14ac4(2): cwde 
14ac6(3): add %r11,%rax
14ac9(4): mov %rax,0x48(%r10)
14acd(5): jmp 0xffffff3d(%rip)
14ad2(6): nop 0x0(%rax,%rax,1)
14ad8(5): mov $0x7,%eax
14add(5): jmp 0xfffffe74(%rip)
14ae2(3): mov %rsp,%rdi
14ae5(3): mov %r8,%rdx
14ae8(3): mov %r10,%rsi
14aeb(5): call 0xffff5955(%rip)
14af0(5): cmp $0x15,0x8(%rsp)
14af5(5): mov $0xb,%eax
14afa(6): jz 0xfffffea4(%rip)
14b00(5): jmp 0xfffffe51(%rip)
14b05(3): nop (%rax)
14b08(4): lea 0x1(%r11),%rax
14b0c(3): add (%r10),%r11
14b0f(4): mov 0x28(%r10),%rdx
14b13(4): mov %rax,0x48(%r10)
14b17(5): movzx 0x0(%r11,%rdx,1),%r9d
14b1c(5): jmp 0xfffffeee(%rip)
14b21(6): mov $0x3,(%rbx)
14b27(2): xor %eax,%eax
14b29(5): jmp 0xfffffe28(%rip)
14b2e(6): mov $0x4,(%rbx)
14b34(2): xor %eax,%eax
14b36(5): jmp 0xfffffe1b(%rip)
14b3b(6): mov $0x2,(%rbx)
14b41(2): xor %eax,%eax
14b43(5): jmp 0xfffffe0e(%rip)
14b48(5): call 0xfffed268(%rip)

"peek_token" :
14b50(2): push %r15
14b52(2): push %r14
14b54(2): push %r13
14b56(2): push %r12
14b58(1): push %rbp
14b59(1): push %rbx
14b5a(3): mov %rdi,%rbp
14b5d(4): sub $0x38,%rsp
14b61(4): mov 0x48(%rsi),%r14
14b65(9): mov $0x28,%rax
14b6e(5): mov %rax,0x28(%rsp)
14b73(2): xor %eax,%eax
14b75(4): cmp %r14,0x68(%rsi)
14b79(6): jle 0x97(%rip)
14b7f(5): movzx 0xa(%rdi),%r13d
14b84(3): mov %rdx,%r15
14b87(4): mov 0x8(%rsi),%rdx
14b8b(3): mov %rsi,%rbx
14b8e(5): movzx 0x0(%rdx,%r14,1),%r12d
14b93(4): and $0x9f,%r13d
14b97(4): mov %r13b,0xa(%rdi)
14b9b(6): mov 0x90(%rsi),%eax
14ba1(3): mov %r12b,(%rdi)
14ba4(3): cmp $0x1,%eax
14ba7(6): jle 0x99(%rip)
14bad(4): cmp 0x30(%rsi),%r14
14bb1(6): jz 0x19f(%rip)
14bb7(4): mov 0x10(%rsi),%rcx
14bbb(4): mov 0x0(%rcx,%r14,4),%ecx
14bbf(3): cmp $0xff,%ecx
14bc2(6): jz 0xde(%rip)
14bc8(4): cmp $0x5c,%r12b
14bcc(6): jz 0xf4(%rip)
14bd2(4): mov $0x1,0x8(%rdi)
14bd6(2): mov %ecx,%edi
14bd8(5): mov %rdx,0x8(%rsp)
14bdd(3): mov %ecx,(%rsp)
14be0(5): call 0xfffed330(%rip)
14be5(3): mov (%rsp),%ecx
14be8(2): test %eax,%eax
14bea(3): setnz %al
14bed(3): cmp $0x5f,%ecx
14bf0(3): setz %cl
14bf3(2): or %ecx,%eax
14bf5(3): shl/sal $0x6,%eax
14bf8(3): or %eax,%r13d
14bfb(4): mov %r13b,0xa(%rbp)
14bff(5): mov 0x8(%rsp),%rdx
14c04(2): jmp 0x78(%rip)
14c06(a): nop 0x0(%rax,%rax,1)
14c10(4): mov $0x2,0x8(%rdi)
14c14(5): mov 0x28(%rsp),%rdi
14c19(9): xor $0x28,%rdi
14c22(6): jnz 0x626(%rip)
14c28(4): add $0x38,%rsp
14c2c(1): pop %rbx
14c2d(1): pop %rbp
14c2e(2): pop %r12
14c30(2): pop %r13
14c32(2): pop %r14
14c34(2): pop %r15
14c36(1): ret near (%rsp)
14c37(9): nop 0x0(%rax,%rax,1)
14c40(4): cmp $0x5c,%r12b
14c44(2): jz 0x7c(%rip)
14c46(4): mov $0x1,0x8(%rbp)
14c4a(4): mov %rdx,(%rsp)
14c4e(5): call 0xfffed492(%rip)
14c53(3): mov (%rax),%rsi
14c56(4): movzx %r12b,%ecx
14c5a(4): movzx 0x0(%rsi,%rcx,2),%eax
14c5e(4): shr $0x3,%ax
14c62(3): and $0x1,%eax
14c65(4): cmp $0x5f,%r12b
14c69(3): setz %cl
14c6c(2): or %ecx,%eax
14c6e(3): shl/sal $0x6,%eax
14c71(3): or %eax,%r13d
14c74(4): mov %r13b,0xa(%rbp)
14c78(4): mov (%rsp),%rdx
14c7c(4): sub $0xa,%r12d
14c80(4): cmp $0x73,%r12b
14c84(6): jnbe 0x138(%rip)
14c8a(7): lea 0x7ba3(%rip),%rcx
14c91(4): movzx %r12b,%r12d
14c95(4): movsxd 0x0(%rcx,%r12,4),%rax
14c99(3): add %rcx,%rax
14c9c(2): jmp %rax
14c9e(2): nop 
14ca0(4): or $0x20,%r13d
14ca4(4): mov $0x1,0x8(%rdi)
14ca8(5): mov $0x1,%eax
14cad(4): mov %r13b,0xa(%rdi)
14cb1(5): jmp 0xffffff63(%rip)
14cb6(a): nop 0x0(%rax,%rax,1)
14cc0(4): lea 0x1(%r14),%rsi
14cc4(4): cmp 0x58(%rbx),%rsi
14cc8(6): jnl 0xa8(%rip)
14cce(7): cmp $0x0,0x8b(%rbx)
14cd5(6): jnz 0x48b(%rip)
14cdb(6): movzx 0x1(%rdx,%r14,1),%edi
14ce1(3): mov %edi,%r12d
14ce4(4): mov %edi,0x8(%rsp)
14ce8(3): cmp $0x1,%eax
14ceb(4): mov %r12b,0x0(%rbp)
14cef(4): mov $0x1,0x8(%rbp)
14cf3(6): jle 0x44d(%rip)
14cf9(4): mov 0x10(%rbx),%rax
14cfd(4): mov 0x0(%rax,%rsi,4),%r8d
14d01(3): mov %r8d,%edi
14d04(4): mov %r8d,(%rsp)
14d08(5): call 0xfffed208(%rip)
14d0d(4): mov (%rsp),%r8d
14d11(2): test %eax,%eax
14d13(3): setnz %al
14d16(4): cmp $0x5f,%r8d
14d1a(3): setz %dl
14d1d(5): lea 0xffffffd9(%r12),%ecx
14d22(2): or %edx,%eax
14d24(3): shl/sal $0x6,%eax
14d27(3): or %eax,%r13d
14d2a(3): cmp $0x56,%cl
14d2d(4): mov %r13b,0xa(%rbp)
14d31(6): jnbe 0x404(%rip)
14d37(7): lea 0x7cc6(%rip),%rdx
14d3e(3): movzx %cl,%ecx
14d41(4): movsxd 0x0(%rdx,%rcx,4),%rax
14d45(3): add %rdx,%rax
14d48(2): jmp %rax
14d4a(6): nop 0x0(%rax,%rax,1)
14d50(4): cmp $0x5c,%r12b
14d54(6): jz 0xffffff6c(%rip)
14d5a(4): mov 0x10(%rbx),%rax
14d5e(4): mov $0x1,0x8(%rbp)
14d62(4): mov 0x0(%rax,%r14,4),%ecx
14d66(5): jmp 0xfffffe70(%rip)
14d6b(5): nop 0x0(%rax,%rax,1)
14d70(4): mov $0x24,0x8(%rbp)
14d74(5): mov $0x1,%eax
14d79(5): jmp 0xfffffe9b(%rip)
14d7e(2): nop 
14d80(7): and $0x1200,%r15d
14d87(5): mov $0x1,%eax
14d8c(7): cmp $0x1200,%r15
14d93(6): jnz 0xfffffe81(%rip)
14d99(4): mov $0x18,0x8(%rbp)
14d9d(5): jmp 0xfffffe77(%rip)
14da2(6): nop 0x0(%rax,%rax,1)
14da8(7): and $0x8400,%r15d
14daf(7): cmp $0x8000,%r15
14db6(6): jz 0xdc(%rip)
14dbc(5): mov $0x1,%eax
14dc1(5): jmp 0xfffffe53(%rip)
14dc6(a): nop 0x0(%rax,%rax,1)
14dd0(7): and $0x1200,%r15d
14dd7(5): mov $0x1,%eax
14ddc(7): cmp $0x1200,%r15
14de3(6): jnz 0xfffffe31(%rip)
14de9(4): mov $0x17,0x8(%rbp)
14ded(5): jmp 0xfffffe27(%rip)
14df2(6): nop 0x0(%rax,%rax,1)
14df8(7): test $0x800008,%r15d
14dff(2): jnz 0xb(%rip)
14e01(3): test %r14,%r14
14e04(6): jnz 0x3c6(%rip)
14e0a(4): mov $0xc,0x8(%rbp)
14e0e(7): mov $0x10,0x0(%rbp)
14e15(5): mov $0x1,%eax
14e1a(5): jmp 0xfffffdfa(%rip)
14e1f(1): nop 
14e20(4): mov $0x14,0x8(%rbp)
14e24(5): mov $0x1,%eax
14e29(5): jmp 0xfffffdeb(%rip)
14e2e(2): nop 
14e30(7): test $0x402,%r15d
14e37(5): mov $0x1,%eax
14e3c(6): jnz 0xfffffdd8(%rip)
14e42(4): mov $0x13,0x8(%rbp)
14e46(5): jmp 0xfffffdce(%rip)
14e4b(5): nop 0x0(%rax,%rax,1)
14e50(4): mov $0x5,0x8(%rbp)
14e54(5): mov $0x1,%eax
14e59(5): jmp 0xfffffdbb(%rip)
14e5e(2): nop 
14e60(7): test $0x402,%r15d
14e67(5): mov $0x1,%eax
14e6c(6): jnz 0xfffffda8(%rip)
14e72(4): mov $0x12,0x8(%rbp)
14e76(5): jmp 0xfffffd9e(%rip)
14e7b(5): nop 0x0(%rax,%rax,1)
14e80(7): test $0x800,%r15d
14e87(5): mov $0x1,%eax
14e8c(6): jz 0xfffffd88(%rip)
14e92(4): mov $0xa,0x8(%rbp)
14e96(5): mov $0x1,%eax
14e9b(5): jmp 0xfffffd79(%rip)
14ea0(4): mov $0xb,0x8(%rbp)
14ea4(5): mov $0x1,%eax
14ea9(5): jmp 0xfffffd6b(%rip)
14eae(2): nop 
14eb0(7): test $0x2000,%r15d
14eb7(5): mov $0x1,%eax
14ebc(6): jz 0xfffffd58(%rip)
14ec2(4): mov $0x9,0x8(%rbp)
14ec6(5): jmp 0xfffffd4e(%rip)
14ecb(5): nop 0x0(%rax,%rax,1)
14ed0(7): test $0x2000,%r15d
14ed7(5): mov $0x1,%eax
14edc(6): jz 0xfffffd38(%rip)
14ee2(4): mov $0x8,0x8(%rbp)
14ee6(5): jmp 0xfffffd2e(%rip)
14eeb(5): nop 0x0(%rax,%rax,1)
14ef0(4): test $0x8,%r15b
14ef4(2): jnz 0x10(%rip)
14ef6(4): add $0x1,%r14
14efa(4): cmp 0x58(%rbx),%r14
14efe(6): jnz 0x2fd(%rip)
14f04(4): mov $0xc,0x8(%rbp)
14f08(7): mov $0x20,0x0(%rbp)
14f0f(5): mov $0x1,%eax
14f14(5): jmp 0xfffffd00(%rip)
14f19(7): test $0x8400,%r15d
14f20(5): mov $0x2,%eax
14f25(6): jnz 0xfffffcef(%rip)
14f2b(4): mov $0xa,0x8(%rbp)
14f2f(5): jmp 0xfffffce5(%rip)
14f34(7): and $0x1200,%r15d
14f3b(5): mov $0x2,%eax
14f40(7): cmp $0x200,%r15
14f47(6): jnz 0xfffffccd(%rip)
14f4d(5): jmp 0xfffffe9c(%rip)
14f52(7): test $0x80000,%r15d
14f59(5): mov $0x2,%eax
14f5e(6): jnz 0xfffffcb6(%rip)
14f64(4): mov $0x20,0x8(%rbp)
14f68(5): jmp 0xfffffcac(%rip)
14f6d(7): test $0x80000,%r15d
14f74(5): mov $0x2,%eax
14f79(6): jnz 0xfffffc9b(%rip)
14f7f(4): mov $0x22,0x8(%rbp)
14f83(5): jmp 0xfffffc91(%rip)
14f88(7): and $0x1200,%r15d
14f8f(5): mov $0x2,%eax
14f94(7): cmp $0x200,%r15
14f9b(6): jnz 0xfffffc79(%rip)
14fa1(5): jmp 0xfffffdf8(%rip)
14fa6(7): test $0x80000,%r15d
14fad(5): mov $0x2,%eax
14fb2(6): jnz 0xfffffc62(%rip)
14fb8(4): mov $0xc,0x8(%rbp)
14fbc(7): mov $0x100,0x0(%rbp)
14fc3(5): jmp 0xfffffc51(%rip)
14fc8(7): test $0x80000,%r15d
14fcf(5): mov $0x2,%eax
14fd4(6): jnz 0xfffffc40(%rip)
14fda(4): mov $0xc,0x8(%rbp)
14fde(7): mov $0x40,0x0(%rbp)
14fe5(5): jmp 0xfffffc2f(%rip)
14fea(7): test $0x80000,%r15d
14ff1(5): mov $0x2,%eax
14ff6(6): jnz 0xfffffc1e(%rip)
14ffc(4): mov $0x21,0x8(%rbp)
15000(5): jmp 0xfffffc14(%rip)
15005(7): test $0x80000,%r15d
1500c(5): mov $0x2,%eax
15011(6): jnz 0xfffffc03(%rip)
15017(4): mov $0x23,0x8(%rbp)
1501b(5): jmp 0xfffffbf9(%rip)
15020(7): test $0x80000,%r15d
15027(5): mov $0x2,%eax
1502c(6): jnz 0xfffffbe8(%rip)
15032(4): mov $0xc,0x8(%rbp)
15036(7): mov $0x200,0x0(%rbp)
1503d(5): jmp 0xfffffbd7(%rip)
15042(7): and $0x402,%r15d
15049(5): mov $0x2,%eax
1504e(4): cmp $0x2,%r15
15052(6): jnz 0xfffffbc2(%rip)
15058(5): jmp 0xfffffdea(%rip)
1505d(7): test $0x80000,%r15d
15064(5): mov $0x2,%eax
15069(6): jnz 0xfffffbab(%rip)
1506f(4): mov $0xc,0x8(%rbp)
15073(7): mov $0x9,0x0(%rbp)
1507a(5): jmp 0xfffffb9a(%rip)
1507f(7): test $0x80000,%r15d
15086(5): mov $0x2,%eax
1508b(6): jnz 0xfffffb89(%rip)
15091(4): mov $0xc,0x8(%rbp)
15095(7): mov $0x6,0x0(%rbp)
1509c(5): jmp 0xfffffb78(%rip)
150a1(7): test $0x4000,%r15d
150a8(5): mov $0x2,%eax
150ad(6): jnz 0xfffffb67(%rip)
150b3(4): mov 0x8(%rsp),%edx
150b7(4): mov $0x4,0x8(%rbp)
150bb(3): sub $0x31,%edx
150be(3): movsxd %edx,%rdx
150c1(4): mov %rdx,0x0(%rbp)
150c5(5): jmp 0xfffffb4f(%rip)
150ca(7): and $0x402,%r15d
150d1(5): mov $0x2,%eax
150d6(4): cmp $0x2,%r15
150da(6): jnz 0xfffffb3a(%rip)
150e0(5): jmp 0xfffffd92(%rip)
150e5(7): test $0x2000,%r15d
150ec(5): mov $0x2,%eax
150f1(6): jnz 0xfffffb23(%rip)
150f7(5): jmp 0xfffffdcb(%rip)
150fc(7): test $0x2000,%r15d
15103(5): mov $0x2,%eax
15108(6): jnz 0xfffffb0c(%rip)
1510e(5): jmp 0xfffffdd4(%rip)
15113(7): test $0x80000,%r15d
1511a(5): mov $0x2,%eax
1511f(6): jnz 0xfffffaf5(%rip)
15125(4): mov $0xc,0x8(%rbp)
15129(7): mov $0x80,0x0(%rbp)
15130(5): jmp 0xfffffae4(%rip)
15135(5): mov $0x2,%eax
1513a(5): jmp 0xfffffada(%rip)
1513f(1): nop 
15140(5): call 0xfffecfa0(%rip)
15145(3): mov (%rax),%rsi
15148(4): movzx %r12b,%edx
1514c(4): movzx 0x0(%rsi,%rdx,2),%eax
15150(4): shr $0x3,%ax
15154(3): and $0x1,%eax
15157(4): cmp $0x5f,%r12b
1515b(5): jmp 0xfffffbbf(%rip)
15160(3): cmp $0x1,%eax
15163(2): jle 0x31(%rip)
15165(4): mov 0x10(%rbx),%rcx
15169(8): lea 0x0(,%rsi,4),%rdi
15171(4): mov 0x0(%rcx,%rsi,4),%r8d
15175(4): cmp $0xff,%r8d
15179(6): jz 0xb6(%rip)
1517f(4): lea 0x2(%r14),%r9
15183(4): cmp %r9,0x30(%rbx)
15187(2): jz 0xd(%rip)
15189(5): cmp $0xff,0x4(%rcx,%rdi,1)
1518e(6): jz 0xa1(%rip)
15194(7): cmp $0x0,0x8c(%rbx)
1519b(3): mov (%rbx),%rcx
1519e(4): mov 0x28(%rbx),%rdi
151a2(2): jz 0x46(%rip)
151a4(4): mov 0x18(%rbx),%r8
151a8(3): add %rdi,%rcx
151ab(4): add 0x0(%r8,%rsi,8),%rcx
151af(3): movzx (%rcx),%edi
151b2(3): mov %edi,%r12d
151b5(4): mov %edi,0x8(%rsp)
151b9(6): and $0x80,%edi
151bf(6): jnz 0xfffffb1c(%rip)
151c5(5): jmp 0xfffffb23(%rip)
151ca(6): cmp $0xa,0xffffffff(%rdx,%r14,1)
151d0(6): jnz 0xfffffbec(%rip)
151d6(7): test $0x800,%r15d
151dd(6): jz 0xfffffbdf(%rip)
151e3(5): jmp 0xfffffc27(%rip)
151e8(3): add %rsi,%rcx
151eb(4): movzx 0x0(%rcx,%rdi,1),%edi
151ef(3): mov %edi,%r12d
151f2(4): mov %edi,0x8(%rsp)
151f6(5): jmp 0xfffffaf2(%rip)
151fb(5): lea 0x10(%rsp),%rdi
15200(3): mov %r15,%rdx
15203(4): mov %r14,0x48(%rbx)
15207(3): mov %rbx,%rsi
1520a(5): call 0xfffff946(%rip)
1520f(5): movzx 0x18(%rsp),%eax
15214(5): sub $0x1,0x48(%rbx)
15219(3): lea 0xfffffff7(%rax),%edx
1521c(5): mov $0x1,%eax
15221(3): cmp $0x1,%dl
15224(6): jnbe 0xfffff9f0(%rip)
1522a(5): jmp 0xfffffcda(%rip)
1522f(6): movzx 0x1(%rdx,%r14,1),%eax
15235(4): mov $0x1,0x8(%rbp)
15239(3): mov %eax,%r12d
1523c(3): mov %al,0x0(%rbp)
1523f(4): mov %eax,0x8(%rsp)
15243(5): jmp 0xfffffabe(%rip)
15248(5): call 0xfffecb68(%rip)

"fetch_number" :
15250(2): push %r14
15252(3): mov %rdi,%r14
15255(2): push %r13
15257(3): mov %rsi,%r13
1525a(2): push %r12
1525c(7): mov $0xfffffffe,%r12
15263(1): push %rbp
15264(3): mov %rdx,%rbp
15267(1): push %rbx
15268(7): mov $0xffffffff,%rbx
1526f(1): nop 
15270(3): mov %rbp,%rdx
15273(3): mov %r14,%rsi
15276(3): mov %r13,%rdi
15279(5): call 0xfffff8d7(%rip)
1527e(2): cwde 
15280(4): add %rax,0x48(%r14)
15284(5): movzx 0x8(%r13),%eax
15289(5): movzx 0x0(%r13),%edx
1528e(2): cmp $0x2,%al
15290(2): jz 0x50(%rip)
15292(2): cmp $0x18,%al
15294(2): jz 0x53(%rip)
15296(3): cmp $0x2c,%dl
15299(2): jz 0x4e(%rip)
1529b(2): cmp $0x1,%al
1529d(2): jz 0xb(%rip)
1529f(3): mov %r12,%rbx
152a2(2): jmp 0xffffffce(%rip)
152a4(4): nop 0x0(%rax)
152a8(3): lea 0xffffffd0(%rdx),%eax
152ab(2): cmp $0x9,%al
152ad(2): jnbe 0xfffffff2(%rip)
152af(4): cmp $0xfffffffe,%rbx
152b3(2): jz 0xffffffec(%rip)
152b5(4): cmp $0xffffffff,%rbx
152b9(2): jz 0x3f(%rip)
152bb(4): lea 0x0(%rbx,%rbx,4),%rax
152bf(4): lea 0x0(%rdx,%rax,2),%rbx
152c3(5): mov $0x8030,%eax
152c8(7): cmp $0x8030,%rbx
152cf(4): cmovnl %rax,%rbx
152d3(4): sub $0x30,%rbx
152d7(2): jmp 0xffffff99(%rip)
152d9(7): nop 0x0(%rax)
152e0(7): mov $0xfffffffe,%rbx
152e7(3): mov %rbx,%rax
152ea(1): pop %rbx
152eb(1): pop %rbp
152ec(2): pop %r12
152ee(2): pop %r13
152f0(2): pop %r14
152f2(1): ret near (%rsp)
152f3(5): nop 0x0(%rax,%rax,1)
152f8(3): movzx %dl,%ebx
152fb(3): sub $0x30,%ebx
152fe(3): movsxd %ebx,%rbx
15301(5): jmp 0xffffff6f(%rip)

"parse_expression" :
15310(2): push %r15
15312(2): push %r14
15314(2): push %r13
15316(2): push %r12
15318(1): push %rbp
15319(1): push %rbx
1531a(7): sub $0x128,%rsp
15321(5): mov %rcx,0x20(%rsp)
15326(4): movzx 0x8(%rdx),%ecx
1532a(9): mov $0x28,%rax
15333(8): mov %rax,0x118(%rsp)
1533b(2): xor %eax,%eax
1533d(3): mov (%rsi),%rax
15340(5): mov %rdx,0x18(%rsp)
15345(5): mov %r9,0x40(%rsp)
1534a(3): cmp $0x24,%cl
1534d(5): mov %rax,0x10(%rsp)
15352(6): jnbe 0xbe(%rip)
15358(3): mov %rsi,%rbp
1535b(7): lea 0x77fe(%rip),%rsi
15362(3): movzx %cl,%edx
15365(3): mov %rdi,%r14
15368(4): movsxd 0x0(%rsi,%rdx,4),%rax
1536c(3): add %rsi,%rax
1536f(2): jmp %rax
15371(4): mov 0x30(%rbp),%rbx
15375(5): mov 0x20(%rsp),%r15
1537a(3): mov %rdi,%rsi
1537d(5): mov 0x18(%rsp),%r13
15382(4): mov %r8,(%rsp)
15386(4): lea 0x1(%rbx),%rax
1538a(3): mov %r15,%rdx
1538d(7): or $0x800000,%rdx
15394(3): mov %r13,%rdi
15397(4): mov %rax,0x30(%rbp)
1539b(5): call 0xfffff7b5(%rip)
153a0(2): cwde 
153a2(4): add %rax,0x48(%r14)
153a6(2): xor %eax,%eax
153a8(5): cmp $0x9,0x8(%r13)
153ad(3): mov %r13,%rdx
153b0(6): jz 0xb00(%rip)
153b6(5): mov 0x40(%rsp),%r13
153bb(4): mov (%rsp),%r8
153bf(3): mov %r15,%rcx
153c2(3): mov %rbp,%rsi
153c5(3): mov %r14,%rdi
153c8(4): add $0x1,%r8
153cc(3): mov %r13,%r9
153cf(5): call 0x15b1(%rip)
153d4(4): mov 0x0(%r13),%r11d
153d8(3): test %r11d,%r11d
153db(2): jnz 0x35(%rip)
153dd(5): mov 0x18(%rsp),%rdx
153e2(4): cmp $0x9,0x8(%rdx)
153e6(6): jz 0xaca(%rip)
153ec(3): test %rax,%rax
153ef(2): jz 0x13(%rip)
153f1(7): lea 0xffff62d8(%rip),%rsi
153f8(2): xor %edx,%edx
153fa(3): mov %rax,%rdi
153fd(5): call 0xffff5433(%rip)
15402(5): mov 0x40(%rsp),%rax
15407(6): mov $0x8,(%rax)
1540d(3): nop (%rax)
15410(9): mov $0x0,0x28(%rsp)
15419(7): nop 0x0(%rax)
15420(8): mov 0x118(%rsp),%rdi
15428(9): xor $0x28,%rdi
15431(5): mov 0x28(%rsp),%rax
15436(6): jnz 0x1378(%rip)
1543c(7): add $0x128,%rsp
15443(1): pop %rbx
15444(1): pop %rbp
15445(2): pop %r12
15447(2): pop %r13
15449(2): pop %r14
1544b(2): pop %r15
1544d(1): ret near (%rsp)
1544e(9): test $0x1000000,0x20(%rsp)
15457(6): jnz 0x256(%rip)
1545d(5): mov 0x20(%rsp),%rax
15462(2): test $0x20,%al
15464(6): jnz 0x249(%rip)
1546a(2): test $0x10,%al
1546c(6): jnz 0xe69(%rip)
15472(3): cmp $0x9,%cl
15475(6): jz 0xa13(%rip)
1547b(5): mov 0x10(%rsp),%rax
15480(5): mov 0x18(%rsp),%r8
15485(2): xor %ecx,%ecx
15487(2): xor %edx,%edx
15489(7): lea 0x80(%rax),%rsi
15490(4): lea 0x70(%rax),%rdi
15494(5): mov $0x1,0x8(%r8)
15499(5): call 0xffff7777(%rip)
1549e(3): test %rax,%rax
154a1(5): mov %rax,0x28(%rsp)
154a6(6): jz 0x9d2(%rip)
154ac(5): mov 0x18(%rsp),%rbx
154b1(5): mov 0x20(%rsp),%rdx
154b6(3): mov %r14,%rsi
154b9(8): lea 0xc0(%rsp),%r15
154c1(3): mov %rbx,%rdi
154c4(5): call 0xfffff68c(%rip)
154c9(2): cwde 
154cb(4): add %rax,0x48(%r14)
154cf(4): movzx 0x8(%rbx),%eax
154d3(5): nop 0x0(%rax,%rax,1)
154d8(2): cmp $0x17,%al
154da(6): jnbe 0xffffff46(%rip)
154e0(2): cmp $0x12,%al
154e2(5): mov $0x8c0800,%ecx
154e7(3): setz %bl
154ea(4): bt %rax,%rcx
154ee(6): jnb 0xffffff32(%rip)
154f4(5): mov 0x18(%rsp),%rcx
154f9(2): cmp $0x17,%al
154fb(4): mov 0x48(%r14),%rbp
154ff(4): movdqa (%rcx),%xmm0
15503(6): jz 0x325(%rip)
15509(2): cmp $0x13,%al
1550b(3): movzx %bl,%ebx
1550e(6): jz 0x2b2(%rip)
15514(5): mov 0x20(%rsp),%rdx
15519(5): mov 0x18(%rsp),%rdi
1551e(3): mov %r14,%rsi
15521(5): call 0xfffff62f(%rip)
15526(2): cwde 
15528(4): add %rax,0x48(%r14)
1552c(6): cmp $0x0,0x28(%rsp)
15532(6): jz 0x38e(%rip)
15538(8): mov $0xffffffff,(%rsp)
15540(3): test %rbx,%rbx
15543(5): mov 0x28(%rsp),%rbp
15548(9): mov $0x0,0x30(%rsp)
15551(6): jnle 0x17f(%rip)
15557(4): cmp $0x11,0x30(%rbp)
1555b(6): jz 0x345(%rip)
15561(5): cmp $0xffffffff,(%rsp)
15566(3): mov %rbp,%rdx
15569(3): mov %r15,%r8
1556c(3): setz %al
1556f(2): xor %ecx,%ecx
15571(3): add $0xa,%eax
15574(7): mov %al,0xc8(%rsp)
1557b(5): mov 0x10(%rsp),%rax
15580(4): lea 0x70(%rax),%r12
15584(7): lea 0x80(%rax),%r13
1558b(3): mov %r12,%rdi
1558e(3): mov %r13,%rsi
15591(5): call 0xffff767f(%rip)
15596(3): test %rax,%rax
15599(3): mov %rax,%rdx
1559c(6): jz 0x1f4(%rip)
155a2(4): add $0x2,%rbx
155a6(4): cmp (%rsp),%rbx
155aa(2): jnle 0x81(%rip)
155ac(5): mov %r14,0x48(%rsp)
155b1(3): mov %rax,%r14
155b4(5): mov 0x10(%rsp),%rsi
155b9(3): mov %rbp,%rdi
155bc(5): call 0xffff7734(%rip)
155c1(3): mov %r15,%r8
155c4(3): mov %rax,%rbp
155c7(3): mov %rax,%rcx
155ca(3): mov %r14,%rdx
155cd(3): mov %r13,%rsi
155d0(3): mov %r12,%rdi
155d3(8): mov $0x10,0xc8(%rsp)
155db(5): call 0xffff7635(%rip)
155e0(3): test %rbp,%rbp
155e3(6): jz 0x1ad(%rip)
155e9(3): test %rax,%rax
155ec(6): jz 0x1a4(%rip)
155f2(2): xor %ecx,%ecx
155f4(3): mov %r15,%r8
155f7(3): mov %rax,%rdx
155fa(3): mov %r13,%rsi
155fd(3): mov %r12,%rdi
15600(8): mov $0xa,0xc8(%rsp)
15608(5): call 0xffff7608(%rip)
1560d(3): test %rax,%rax
15610(3): mov %rax,%r14
15613(6): jz 0x17d(%rip)
15619(4): add $0x1,%rbx
1561d(4): cmp (%rsp),%rbx
15621(2): jle 0xffffff93(%rip)
15623(5): mov 0x48(%rsp),%r14
15628(3): mov %rax,%rdx
1562b(5): mov 0x30(%rsp),%rax
15630(3): test %rax,%rax
15633(6): jz 0x2ad(%rip)
15639(3): mov %rdx,%rcx
1563c(3): mov %r15,%r8
1563f(3): mov %rax,%rdx
15642(3): mov %r13,%rsi
15645(3): mov %r12,%rdi
15648(8): mov $0x10,0xc8(%rsp)
15650(5): call 0xffff75c0(%rip)
15655(5): mov 0x40(%rsp),%rdi
1565a(2): mov (%rdi),%edx
1565c(2): test %edx,%edx
1565e(2): jz 0xb(%rip)
15660(3): test %rax,%rax
15663(6): jz 0x358(%rip)
15669(5): mov %rax,0x28(%rsp)
1566e(9): test $0x1000000,0x20(%rsp)
15677(5): mov 0x18(%rsp),%rax
1567c(4): movzx 0x8(%rax),%eax
15680(6): jz 0xfffffe58(%rip)
15686(2): cmp $0xb,%al
15688(2): jz 0xa(%rip)
1568a(2): cmp $0x17,%al
1568c(6): jnz 0xfffffe4c(%rip)
15692(5): mov 0x28(%rsp),%rax
15697(3): test %rax,%rax
1569a(2): jz 0x13(%rip)
1569c(7): lea 0xffff602d(%rip),%rsi
156a3(2): xor %edx,%edx
156a5(3): mov %rax,%rdi
156a8(5): call 0xffff5188(%rip)
156ad(5): mov 0x40(%rsp),%rax
156b2(9): mov $0x0,0x28(%rsp)
156bb(6): mov $0xd,(%rax)
156c1(5): jmp 0xfffffd5f(%rip)
156c6(a): nop 0x0(%rax,%rax,1)
156d0(4): cmp $0x1,%rbx
156d4(6): jz 0x838(%rip)
156da(5): mov 0x10(%rsp),%rax
156df(3): mov %rbp,%r13
156e2(5): mov %r14,0x48(%rsp)
156e7(7): lea 0x80(%rax),%r12
156ee(4): lea 0x70(%rax),%rdi
156f2(3): mov %rbp,%rax
156f5(3): mov %rax,%r14
156f8(5): mov $0x2,%ebp
156fd(3): mov %r12,%rsi
15700(5): mov %rdi,0x30(%rsp)
15705(3): mov %r13,%r12
15708(3): mov %rbx,%r13
1570b(3): mov %rsi,%rbx
1570e(2): nop 
15710(5): mov 0x10(%rsp),%rsi
15715(3): mov %r12,%rdi
15718(5): call 0xffff75d8(%rip)
1571d(5): mov 0x30(%rsp),%rdi
15722(3): mov %rax,%r12
15725(3): mov %r14,%rdx
15728(3): mov %r15,%r8
1572b(3): mov %rax,%rcx
1572e(3): mov %rbx,%rsi
15731(8): mov $0x10,0xc8(%rsp)
15739(5): call 0xffff74d7(%rip)
1573e(3): test %r12,%r12
15741(3): mov %rax,%r14
15744(2): jz 0x4c(%rip)
15746(3): test %rax,%rax
15749(2): jz 0x47(%rip)
1574b(4): add $0x1,%rbp
1574f(3): cmp %r13,%rbp
15752(2): jle 0xffffffbe(%rip)
15754(5): mov 0x48(%rsp),%r14
15759(3): mov %r13,%rbx
1575c(5): mov %rax,0x30(%rsp)
15761(3): mov %r12,%r13
15764(4): cmp %rbx,(%rsp)
15768(6): jz 0x16c(%rip)
1576e(5): mov 0x10(%rsp),%rsi
15773(3): mov %r13,%rdi
15776(5): call 0xffff757a(%rip)
1577b(3): test %rax,%rax
1577e(3): mov %rax,%rbp
15781(6): jnz 0xfffffdd6(%rip)
15787(9): nop 0x0(%rax,%rax,1)
15790(5): mov 0x40(%rsp),%rax
15795(6): mov $0xc,(%rax)
1579b(5): mov 0x28(%rsp),%rdi
157a0(7): lea 0xffff5f29(%rip),%rsi
157a7(2): xor %edx,%edx
157a9(5): call 0xffff5087(%rip)
157ae(9): mov $0x0,0x28(%rsp)
157b7(5): jmp 0xfffffc69(%rip)
157bc(4): nop 0x0(%rax)
157c0(8): mov $0x1,(%rsp)
157c8(5): mov 0x20(%rsp),%rdx
157cd(5): mov 0x18(%rsp),%rdi
157d2(3): mov %r14,%rsi
157d5(5): call 0xfffff37b(%rip)
157da(2): cwde 
157dc(4): add %rax,0x48(%r14)
157e0(6): cmp $0x0,0x28(%rsp)
157e6(6): jz 0xda(%rip)
157ec(4): mov (%rsp),%rax
157f0(3): or %rbx,%rax
157f3(6): jnz 0xfffffd4d(%rip)
157f9(5): mov 0x28(%rsp),%rdi
157fe(7): lea 0xffff5ecb(%rip),%rsi
15805(2): xor %edx,%edx
15807(5): call 0xffff5029(%rip)
1580c(5): mov 0x40(%rsp),%rax
15811(2): mov (%rax),%esi
15813(2): test %esi,%esi
15815(2): jnz 0xffffff86(%rip)
15817(9): mov $0x0,0x28(%rsp)
15820(5): jmp 0xfffffe4e(%rip)
15825(3): nop (%rax)
15828(5): mov 0x20(%rsp),%rdx
1582d(3): mov %rcx,%rsi
15830(3): mov %r14,%rdi
15833(4): movaps %xmm0,(%rsp)
15837(5): call 0xfffffa19(%rip)
1583c(4): cmp $0xffffffff,%rax
15840(3): mov %rax,%rbx
15843(5): movdqa (%rsp),%xmm0
15848(6): jz 0xa8(%rip)
1584e(4): cmp $0xfffffffe,%rax
15852(2): jz 0x1b(%rip)
15854(5): mov 0x18(%rsp),%rax
15859(4): movzx 0x8(%rax),%eax
1585d(2): cmp $0x18,%al
1585f(6): jz 0x121(%rip)
15865(2): cmp $0x1,%al
15867(6): jz 0x12c(%rip)
1586d(9): test $0x200000,0x20(%rsp)
15876(6): jz 0xf3d(%rip)
1587c(5): mov 0x18(%rsp),%rax
15881(4): mov %rbp,0x48(%r14)
15885(3): movaps %xmm0,(%rax)
15888(4): mov $0x1,0x8(%rax)
1588c(5): mov 0x28(%rsp),%rax
15891(5): jmp 0xfffffdc4(%rip)
15896(a): nop 0x0(%rax,%rax,1)
158a0(4): mov 0x28(%rbp),%rdx
158a4(7): lea 0xffff4cc5(%rip),%rsi
158ab(3): mov %rbp,%rdi
158ae(5): call 0xffff4f82(%rip)
158b3(5): jmp 0xfffffcae(%rip)
158b8(8): nop 0x0(%rax,%rax,1)
158c0(5): mov 0x40(%rsp),%rax
158c5(2): mov (%rax),%ecx
158c7(2): test %ecx,%ecx
158c9(6): jz 0xffffff4e(%rip)
158cf(5): jmp 0xfffffb41(%rip)
158d4(5): mov 0x30(%rsp),%rdx
158d9(7): nop 0x0(%rax)
158e0(5): mov %rdx,0x28(%rsp)
158e5(5): jmp 0xfffffd89(%rip)
158ea(6): nop 0x0(%rax,%rax,1)
158f0(5): mov 0x18(%rsp),%rax
158f5(4): cmp $0x1,0x8(%rax)
158f9(6): jnz 0xb7(%rip)
158ff(5): mov 0x18(%rsp),%rax
15904(3): cmp $0x2c,(%rax)
15907(6): jnz 0xa9(%rip)
1590d(2): xor %ebx,%ebx
1590f(5): mov 0x20(%rsp),%rdx
15914(5): mov 0x18(%rsp),%rsi
15919(3): mov %r14,%rdi
1591c(5): movaps %xmm0,0x30(%rsp)
15921(5): call 0xfffff92f(%rip)
15926(4): cmp $0xfffffffe,%rax
1592a(4): mov %rax,(%rsp)
1592e(6): movdqa 0x30(%rsp),%xmm0
15934(6): jz 0xffffff39(%rip)
1593a(4): mov (%rsp),%rax
1593e(4): cmp $0xffffffff,%rax
15942(2): jz 0x7(%rip)
15944(3): cmp %rbx,%rax
15947(2): jl 0x69(%rip)
15949(5): mov 0x18(%rsp),%rax
1594e(4): cmp $0x18,0x8(%rax)
15952(2): jnz 0x5e(%rip)
15954(5): cmp $0xffffffff,(%rsp)
15959(2): jnz 0x2b(%rip)
1595b(2): xor %eax,%eax
1595d(7): cmp $0x7fff,%rbx
15964(3): setnle %al
15967(3): test %rax,%rax
1596a(6): jz 0xfffffe5e(%rip)
15970(5): mov 0x40(%rsp),%rax
15975(6): mov $0xf,(%rax)
1597b(2): jmp 0x40(%rip)
1597d(3): nop (%rax)
15980(4): mov %rbx,(%rsp)
15984(2): xor %eax,%eax
15986(8): cmp $0x7fff,(%rsp)
1598e(3): setnle %al
15991(2): jmp 0xffffffd6(%rip)
15993(5): mov 0x18(%rsp),%rax
15998(3): cmp $0x2c,(%rax)
1599b(6): jz 0xffffff74(%rip)
159a1(9): test $0x200000,0x20(%rsp)
159aa(6): jnz 0xfffffed2(%rip)
159b0(5): mov 0x40(%rsp),%rax
159b5(6): mov $0xa,(%rax)
159bb(6): cmp $0x0,0x28(%rsp)
159c1(6): jnz 0xfffffdda(%rip)
159c7(5): jmp 0xfffffa49(%rip)
159cc(4): nop 0x0(%rax)
159d0(5): mov 0x18(%rsp),%rax
159d5(2): mov (%rax),%ebp
159d7(6): test $0x30f,%ebp
159dd(2): jz 0x64(%rip)
159df(5): mov 0x10(%rsp),%rax
159e4(7): movzx 0xb0(%rax),%eax
159eb(2): test $0x10,%al
159ed(2): jnz 0x54(%rip)
159ef(5): mov 0x10(%rsp),%rdi
159f4(3): or $0x10,%eax
159f7(2): test $0x8,%al
159f9(6): mov %al,0xb0(%rdi)
159ff(6): jnz 0xc04(%rip)
15a05(a): mov $0x287948901175001088,%rdx
15a0f(2): test $0x4,%al
15a11(7): mov %rdx,0xb8(%rdi)
15a18(a): mov $0x576460745995190270,%rdx
15a22(7): mov %rdx,0xc0(%rdi)
15a29(6): jz 0xb5f(%rip)
15a2f(4): pxor %xmm0,%xmm0
15a33(5): mov 0x18(%rsp),%rax
15a38(7): movups %xmm0,0xc8(%rdi)
15a3f(2): mov (%rax),%ebp
15a41(5): mov 0x10(%rsp),%rax
15a46(4): lea 0x70(%rax),%rbx
15a4a(7): lea 0x80(%rax),%r12
15a51(6): lea 0xffffff00(%rbp),%eax
15a57(5): test $0xfffffeff,%eax
15a5c(6): jnz 0x66e(%rip)
15a62(6): cmp $0x100,%ebp
15a68(5): mov 0x18(%rsp),%r15
15a6d(6): jz 0x635(%rip)
15a73(7): mov $0x5,(%r15)
15a7a(3): mov %r15,%r8
15a7d(2): xor %ecx,%ecx
15a7f(2): xor %edx,%edx
15a81(3): mov %r12,%rsi
15a84(3): mov %rbx,%rdi
15a87(5): call 0xffff7189(%rip)
15a8c(7): mov $0xa,(%r15)
15a93(3): mov %rax,%rbp
15a96(5): mov 0x18(%rsp),%r8
15a9b(2): xor %ecx,%ecx
15a9d(2): xor %edx,%edx
15a9f(3): mov %r12,%rsi
15aa2(3): mov %rbx,%rdi
15aa5(5): call 0xffff716b(%rip)
15aaa(8): lea 0xc0(%rsp),%r8
15ab2(3): mov %rbp,%rdx
15ab5(3): mov %rbx,%rdi
15ab8(3): mov %rax,%rcx
15abb(3): mov %r12,%rsi
15abe(3): mov %rax,%r13
15ac1(8): mov $0xa,0xc8(%rsp)
15ac9(5): call 0xffff7147(%rip)
15ace(3): test %rbp,%rbp
15ad1(3): mov %rax,%rdi
15ad4(5): mov %rax,0x28(%rsp)
15ad9(3): setz %dl
15adc(3): test %r13,%r13
15adf(3): setz %al
15ae2(2): or %al,%dl
15ae4(6): jnz 0x394(%rip)
15aea(3): test %rdi,%rdi
15aed(6): jz 0x38b(%rip)
15af3(5): mov 0x20(%rsp),%rdx
15af8(5): mov 0x18(%rsp),%rdi
15afd(3): mov %r14,%rsi
15b00(5): call 0xfffff050(%rip)
15b05(2): cwde 
15b07(4): add %rax,0x48(%r14)
15b0b(5): jmp 0xfffff915(%rip)
15b10(5): mov $0x1,%esi
15b15(5): mov $0x20,%edi
15b1a(c): mov $0x0,0x98(%rsp)
15b26(5): call 0xfffec39a(%rip)
15b2b(5): mov $0x1,%esi
15b30(3): mov %rax,%r12
15b33(5): mov $0x50,%edi
15b38(5): call 0xfffec388(%rip)
15b3d(3): test %r12,%r12
15b40(3): mov %rax,%r13
15b43(3): setz %dl
15b46(3): test %rax,%rax
15b49(3): setz %al
15b4c(2): or %al,%dl
15b4e(6): jnz 0x7db(%rip)
15b54(5): mov 0x18(%rsp),%r10
15b59(5): mov 0x20(%rsp),%rdx
15b5e(3): mov %r14,%rsi
15b61(3): mov %r10,%rdi
15b64(5): call 0xffff48dc(%rip)
15b69(3): movsxd %eax,%rbx
15b6c(5): movzx 0x8(%r10),%eax
15b71(2): cmp $0x2,%al
15b73(6): jz 0x7a6(%rip)
15b79(2): cmp $0x19,%al
15b7b(5): mov $0x0,0x57(%rsp)
15b80(6): jz 0x4ca(%rip)
15b86(2): cmp $0x15,%al
15b88(6): jz 0x50c(%rip)
15b8e(8): lea 0xd0(%rsp),%rax
15b96(5): mov 0x18(%rsp),%r15
15b9b(7): lea 0x7052(%rip),%rbp
15ba2(9): mov $0x0,0x48(%rsp)
15bab(6): mov $0x1,%r9d
15bb1(9): mov $0x0,0x30(%rsp)
15bba(5): mov %rax,0x28(%rsp)
15bbf(8): lea 0xa0(%rsp),%rax
15bc7(4): mov %rax,(%rsp)
15bcb(8): lea 0x98(%rsp),%rax
15bd3(5): mov %rax,0x58(%rsp)
15bd8(8): lea 0xc0(%rsp),%rax
15be0(5): mov %rax,0x60(%rsp)
15be5(8): lea 0xf0(%rsp),%rax
15bed(5): mov %rax,0x68(%rsp)
15bf2(5): mov 0x28(%rsp),%rax
15bf7(5): mov 0x20(%rsp),%r8
15bfc(4): and $0x1,%r9d
15c00(4): mov (%rsp),%rdi
15c04(2): mov %ebx,%ecx
15c06(3): mov %r15,%rdx
15c09(3): mov %r14,%rsi
15c0c(b): mov $0x3,0xa0(%rsp)
15c17(8): mov %rax,0xa8(%rsp)
15c1f(5): call 0xffffecd1(%rip)
15c24(2): test %eax,%eax
15c26(6): jnz 0x4e5(%rip)
15c2c(5): mov 0x20(%rsp),%rdx
15c31(3): mov %r14,%rsi
15c34(3): mov %r15,%rdi
15c37(5): call 0xffff4809(%rip)
15c3c(3): movsxd %eax,%rbx
15c3f(7): mov 0xa0(%rsp),%eax
15c46(3): lea 0xfffffffe(%rax),%edx
15c49(3): and $0xfd,%edx
15c4c(2): jz 0x19(%rip)
15c4e(5): movzx 0x8(%r15),%edx
15c53(3): cmp $0x2,%dl
15c56(6): jz 0x49b(%rip)
15c5c(3): cmp $0x16,%dl
15c5f(6): jz 0x4b8(%rip)
15c65(3): cmp $0x4,%eax
15c68(6): jnbe 0x9a2(%rip)
15c6e(5): movsxd 0x0(%rbp,%rax,4),%rax
15c73(3): add %rbp,%rax
15c76(2): jmp %rax
15c78(5): mov 0x40(%rsp),%rbx
15c7d(3): cmp $0x23,%cl
15c80(4): mov 0x78(%rdi),%rsi
15c84(4): setz %r8b
15c88(7): lea 0x65ec(%rip),%rcx
15c8f(7): lea 0x6ac9(%rip),%rdx
15c96(4): movzx %r8b,%r8d
15c9a(3): mov %rbx,%r9
15c9d(5): mov 0x10(%rsp),%rdi
15ca2(5): call 0xffffa2be(%rip)
15ca7(2): mov (%rbx),%edi
15ca9(5): mov %rax,0x28(%rsp)
15cae(2): test %edi,%edi
15cb0(6): jz 0xfffff7fc(%rip)
15cb6(3): test %rax,%rax
15cb9(6): jnz 0xfffff7f3(%rip)
15cbf(5): jmp 0xfffff751(%rip)
15cc4(4): nop 0x0(%rax)
15cc8(5): mov 0x40(%rsp),%rbx
15ccd(3): cmp $0x21,%cl
15cd0(4): mov 0x78(%rdi),%rsi
15cd4(4): setz %r8b
15cd8(7): lea 0x5b03(%rip),%rcx
15cdf(7): lea 0x6a6d(%rip),%rdx
15ce6(4): movzx %r8b,%r8d
15cea(3): mov %rbx,%r9
15ced(2): jmp 0xffffffb0(%rip)
15cef(5): mov 0x18(%rsp),%rax
15cf4(5): mov 0x10(%rsp),%rdi
15cf9(3): mov (%rax),%rcx
15cfc(5): mov $0x1,%eax
15d01(2): shl/sal %cl,%eax
15d03(2): cwde 
15d05(7): test %rax,0xa8(%rdi)
15d0c(6): jz 0x632(%rip)
15d12(5): mov 0x10(%rsp),%rbx
15d17(5): mov 0x18(%rsp),%r8
15d1c(2): xor %ecx,%ecx
15d1e(2): xor %edx,%edx
15d20(7): or %rax,0xa0(%rbx)
15d27(7): lea 0x80(%rbx),%rsi
15d2e(4): lea 0x70(%rbx),%rdi
15d32(5): call 0xffff6ede(%rip)
15d37(3): test %rax,%rax
15d3a(5): mov %rax,0x28(%rsp)
15d3f(6): jz 0x139(%rip)
15d45(8): add $0x1,0x98(%rbx)
15d4d(7): or $0x2,0xb0(%rbx)
15d54(5): jmp 0xfffff758(%rip)
15d59(5): mov 0x10(%rsp),%rbx
15d5e(5): mov 0x18(%rsp),%r8
15d63(2): xor %ecx,%ecx
15d65(2): xor %edx,%edx
15d67(7): lea 0x80(%rbx),%rsi
15d6e(4): lea 0x70(%rbx),%rdi
15d72(5): call 0xffff6e9e(%rip)
15d77(3): test %rax,%rax
15d7a(5): mov %rax,0x28(%rsp)
15d7f(6): jz 0xf9(%rip)
15d85(7): cmp $0x1,0xb4(%rbx)
15d8c(6): jle 0xfffff720(%rip)
15d92(7): or $0x2,0xb0(%rbx)
15d99(5): jmp 0xfffff713(%rip)
15d9e(5): mov 0x10(%rsp),%rax
15da3(5): mov 0x18(%rsp),%r8
15da8(2): xor %ecx,%ecx
15daa(2): xor %edx,%edx
15dac(4): lea 0x70(%rax),%rbx
15db0(7): lea 0x80(%rax),%rbp
15db7(3): mov %rbx,%rdi
15dba(3): mov %rbp,%rsi
15dbd(5): call 0xffff6e53(%rip)
15dc2(3): test %rax,%rax
15dc5(5): mov %rax,0x28(%rsp)
15dca(6): jz 0xae(%rip)
15dd0(5): mov 0x10(%rsp),%rax
15dd5(8): lea 0xc0(%rsp),%r12
15ddd(5): mov 0x28(%rsp),%r15
15de2(7): cmp $0x1,0xb4(%rax)
15de9(6): jle 0xfffff6c3(%rip)
15def(4): mov 0x48(%r14),%rax
15df3(4): cmp %rax,0x68(%r14)
15df7(6): jle 0x30a(%rip)
15dfd(4): cmp 0x30(%r14),%rax
15e01(6): jz 0x300(%rip)
15e07(4): mov 0x10(%r14),%rdx
15e0b(4): cmp $0xff,0x0(%rdx,%rax,4)
15e0f(6): jnz 0x2f2(%rip)
15e15(5): mov 0x18(%rsp),%r13
15e1a(5): mov 0x20(%rsp),%rdx
15e1f(3): mov %r14,%rsi
15e22(3): mov %r13,%rdi
15e25(5): call 0xffffed2b(%rip)
15e2a(2): cwde 
15e2c(4): add %rax,0x48(%r14)
15e30(3): mov %r13,%r8
15e33(2): xor %ecx,%ecx
15e35(2): xor %edx,%edx
15e37(3): mov %rbp,%rsi
15e3a(3): mov %rbx,%rdi
15e3d(5): call 0xffff6dd3(%rip)
15e42(3): mov %r15,%rdx
15e45(3): mov %rax,%r13
15e48(3): mov %r12,%r8
15e4b(3): mov %rax,%rcx
15e4e(3): mov %rbp,%rsi
15e51(3): mov %rbx,%rdi
15e54(8): mov $0x10,0xc8(%rsp)
15e5c(5): call 0xffff6db4(%rip)
15e61(3): test %r13,%r13
15e64(3): mov %rax,%r15
15e67(3): setz %dl
15e6a(3): test %rax,%rax
15e6d(3): setz %al
15e70(2): or %al,%dl
15e72(6): jz 0xffffff7d(%rip)
15e78(5): mov 0x40(%rsp),%rax
15e7d(6): mov $0xc,(%rax)
15e83(5): jmp 0xfffff58d(%rip)
15e88(9): test $0x20000,0x20(%rsp)
15e91(6): jnz 0xfffff5ea(%rip)
15e97(5): mov 0x40(%rsp),%rax
15e9c(9): mov $0x0,0x28(%rsp)
15ea5(6): mov $0x10,(%rax)
15eab(5): jmp 0xfffff575(%rip)
15eb0(4): cmp $0x8,%rbx
15eb4(2): jbe 0x67(%rip)
15eb6(5): mov 0x10(%rsp),%rdi
15ebb(8): lea 0xc0(%rsp),%r8
15ec3(2): xor %ecx,%ecx
15ec5(3): mov %rax,%rdx
15ec8(8): mov $0x11,0xc8(%rsp)
15ed0(7): lea 0x80(%rdi),%rsi
15ed7(4): add $0x70,%rdi
15edb(5): call 0xffff6d35(%rip)
15ee0(3): test %rax,%rax
15ee3(5): mov %rax,0x28(%rsp)
15ee8(2): jz 0xffffff90(%rip)
15eea(4): mov %rbx,0x28(%rax)
15eee(5): jmp 0xfffff5be(%rip)
15ef3(5): mov 0x40(%rsp),%rax
15ef8(9): mov $0x0,0x28(%rsp)
15f01(6): mov $0x5,(%rax)
15f07(5): jmp 0xfffff519(%rip)
15f0c(5): mov 0x28(%rsp),%r13
15f11(5): mov %r13,0x30(%rsp)
15f16(5): jmp 0xfffff84e(%rip)
15f1b(5): mov 0x10(%rsp),%rsi
15f20(5): mov $0x1,%edx
15f25(2): mov %ebx,%ecx
15f27(2): shl/sal %cl,%edx
15f29(3): movsxd %edx,%rdx
15f2c(7): or %rdx,0xa8(%rsi)
15f33(2): jmp 0xffffff83(%rip)
15f35(8): mov 0xa8(%rsp),%rsi
15f3d(3): mov %r12,%rdi
15f40(5): call 0xffff97c0(%rip)
15f45(5): mov 0x40(%rsp),%rdx
15f4a(2): test %eax,%eax
15f4c(2): mov %eax,(%rdx)
15f4e(2): jnz 0x3a(%rip)
15f50(5): movzx 0x8(%r15),%eax
15f55(2): cmp $0x2,%al
15f57(6): jz 0x19a(%rip)
15f5d(2): cmp $0x15,%al
15f5f(6): jz 0x413(%rip)
15f65(3): xor %r9d,%r9d
15f68(5): jmp 0xfffffc8a(%rip)
15f6d(8): mov 0xa8(%rsp),%rsi
15f75(3): mov %r12,%rdi
15f78(5): call 0xffff9788(%rip)
15f7d(5): mov 0x40(%rsp),%rdx
15f82(2): test %eax,%eax
15f84(2): mov %eax,(%rdx)
15f86(2): jz 0xffffffca(%rip)
15f88(3): mov %r12,%rdi
15f8b(5): call 0xfffebcd5(%rip)
15f90(3): mov %r13,%rdi
15f93(5): call 0xffff56dd(%rip)
15f98(5): mov 0x40(%rsp),%rax
15f9d(3): mov (%rax),%r8d
15fa0(3): test %r8d,%r8d
15fa3(6): jnz 0xfffff46d(%rip)
15fa9(9): mov $0x0,0x28(%rsp)
15fb2(5): jmp 0xfffff4fa(%rip)
15fb7(4): mov 0x28(%r13),%rdx
15fbb(5): cmp 0x30(%rsp),%rdx
15fc0(4): mov 0x0(%r13),%rax
15fc4(6): jz 0x4fa(%rip)
15fca(4): lea 0x1(%rdx),%rcx
15fce(4): mov %rcx,0x28(%r13)
15fd2(7): mov 0xa8(%rsp),%ecx
15fd9(3): mov %ecx,0x0(%rax,%rdx,4)
15fdc(5): jmp 0xffffff74(%rip)
15fe1(8): movzx 0xa8(%rsp),%edx
15fe9(5): mov $0x1,%esi
15fee(3): mov %rdx,%rax
15ff1(3): and $0x3f,%edx
15ff4(4): shr $0x3,%rax
15ff8(2): mov %edx,%ecx
15ffa(3): and $0x18,%eax
15ffd(3): shl/sal %cl,%rsi
16000(4): or %rsi,0x0(%r12,%rax,1)
16004(5): jmp 0xffffff4c(%rip)
16009(4): sub $0x8,%rsp
1600d(4): mov 0x78(%r14),%rdi
16011(4): lea 0x18(%r13),%rdx
16015(4): push 0x28(%rsp)
16019(8): mov 0xb8(%rsp),%r9
16021(4): lea 0x48(%r13),%rcx
16025(5): mov 0x68(%rsp),%r8
1602a(3): mov %r12,%rsi
1602d(5): call 0xffff9723(%rip)
16032(5): mov 0x50(%rsp),%rdx
16037(2): test %eax,%eax
16039(2): mov %eax,(%rdx)
1603b(2): pop %r9
1603d(2): pop %r10
1603f(6): jz 0xffffff11(%rip)
16045(5): jmp 0xffffff43(%rip)
1604a(5): or $0x1,0x20(%r13)
1604f(9): test $0x100,0x20(%rsp)
16058(2): jz 0xa(%rip)
1605a(8): or $0x400,(%r12)
16062(4): add %rbx,0x48(%r14)
16066(5): mov 0x18(%rsp),%r11
1606b(3): mov %r14,%rsi
1606e(5): mov 0x20(%rsp),%rdx
16073(3): mov %r11,%rdi
16076(5): call 0xffff43ca(%rip)
1607b(2): mov %eax,%ebx
1607d(5): movzx 0x8(%r11),%eax
16082(2): cmp $0x2,%al
16084(6): jz 0x295(%rip)
1608a(5): mov $0x1,0x57(%rsp)
1608f(5): jmp 0xfffffaf7(%rip)
16094(5): mov 0x18(%rsp),%rax
16099(4): mov $0x1,0x8(%rax)
1609d(5): jmp 0xfffffaf1(%rip)
160a2(7): mov $0x6,(%r15)
160a9(3): mov %r15,%r8
160ac(2): xor %ecx,%ecx
160ae(2): xor %edx,%edx
160b0(3): mov %r12,%rsi
160b3(3): mov %rbx,%rdi
160b6(5): call 0xffff6b5a(%rip)
160bb(7): mov $0x9,(%r15)
160c2(3): mov %rax,%rbp
160c5(5): jmp 0xfffff9d1(%rip)
160ca(5): mov 0x18(%rsp),%r8
160cf(2): xor %ecx,%ecx
160d1(2): xor %edx,%edx
160d3(3): mov %r12,%rsi
160d6(3): mov %rbx,%rdi
160d9(5): call 0xffff6b37(%rip)
160de(3): test %rax,%rax
160e1(5): mov %rax,0x28(%rsp)
160e6(6): jnz 0xfffffa0d(%rip)
160ec(5): jmp 0xfffffd8c(%rip)
160f1(5): mov 0x40(%rsp),%rax
160f6(6): mov $0x7,(%rax)
160fc(5): jmp 0xfffffe8c(%rip)
16101(5): mov %r15,0x28(%rsp)
16106(5): jmp 0xfffff3a6(%rip)
1610b(5): mov 0x40(%rsp),%rdx
16110(2): mov %eax,(%rdx)
16112(5): jmp 0xfffffe76(%rip)
16117(3): movsxd %ebx,%rax
1611a(5): mov 0x20(%rsp),%r11
1611f(4): add %rax,0x48(%r14)
16123(5): mov 0x60(%rsp),%r10
16128(3): mov %r11,%rdx
1612b(3): mov %r10,%rdi
1612e(5): call 0xffff4312(%rip)
16133(8): movzx 0xc8(%rsp),%edx
1613b(3): cmp $0x2,%dl
1613e(2): jz 0xffffffb3(%rip)
16140(3): cmp $0x15,%dl
16143(6): jz 0x214(%rip)
16149(5): mov 0x68(%rsp),%rdx
1614e(8): lea 0xb0(%rsp),%rdi
16156(6): mov $0x1,%r9d
1615c(3): mov %r11,%r8
1615f(2): mov %eax,%ecx
16161(b): mov $0x3,0xb0(%rsp)
1616c(8): mov %rdx,0xb8(%rsp)
16174(3): mov %r10,%rdx
16177(5): call 0xffffe779(%rip)
1617c(2): test %eax,%eax
1617e(2): jnz 0xffffff8d(%rip)
16180(5): mov 0x20(%rsp),%rdx
16185(3): mov %r14,%rsi
16188(3): mov %r15,%rdi
1618b(5): call 0xffff42b5(%rip)
16190(3): movsxd %eax,%rbx
16193(5): mov 0x10(%rsp),%rax
16198(7): mov 0xa0(%rsp),%esi
1619f(6): mov $0x0,%r9d
161a5(7): cmp $0x1,0xb4(%rax)
161ac(3): lea 0xfffffffe(%rsi),%eax
161af(4): cmovnl %r13,%r9
161b3(3): and $0xfd,%eax
161b6(6): jz 0x473(%rip)
161bc(8): mov 0xb0(%rsp),%r10d
161c4(4): lea 0xfffffffe(%r10),%eax
161c8(3): and $0xfd,%eax
161cb(6): jz 0x45e(%rip)
161d1(3): cmp $0x3,%esi
161d4(4): setz %r11b
161d8(6): jz 0x495(%rip)
161de(4): cmp $0x3,%r10d
161e2(6): jz 0x457(%rip)
161e8(2): test %esi,%esi
161ea(6): jnz 0x36f(%rip)
161f0(8): movzx 0xa8(%rsp),%edx
161f8(3): test %r10d,%r10d
161fb(6): jnz 0x342(%rip)
16201(9): movzx 0xb8(%rsp),%r8d
1620a(2): test %esi,%esi
1620c(6): jz 0x2ea(%rip)
16212(3): test %r11b,%r11b
16215(6): jnz 0x2e1(%rip)
1621b(3): test %r9,%r9
1621e(7): mov 0xa8(%rsp),%edx
16225(2): jz 0x1f(%rip)
16227(3): mov %r8d,%edi
1622a(4): mov %edx,0x78(%rsp)
1622e(5): mov %r9,0x70(%rsp)
16233(5): call 0xfffebdad(%rip)
16238(5): mov 0x70(%rsp),%r9
1623d(4): mov 0x78(%rsp),%edx
16241(3): mov %eax,%r8d
16244(3): cmp $0xff,%edx
16247(6): jz 0x416(%rip)
1624d(4): cmp $0xff,%r8d
16251(6): jz 0x40c(%rip)
16257(9): test $0x10000,0x20(%rsp)
16260(2): jz 0xb(%rip)
16262(3): cmp %edx,%r8d
16265(6): jb 0x3c4(%rip)
1626b(3): test %r9,%r9
1626e(2): jz 0x28(%rip)
16270(4): mov 0x40(%r9),%rax
16274(5): cmp 0x48(%rsp),%rax
16279(4): mov 0x8(%r9),%rcx
1627d(6): jz 0x416(%rip)
16283(3): mov %edx,0x0(%rcx,%rax,4)
16286(4): mov 0x10(%r9),%rcx
1628a(4): lea 0x1(%rax),%rsi
1628e(4): mov %rsi,0x40(%r9)
16292(4): mov %r8d,0x0(%rcx,%rax,4)
16296(2): xor %eax,%eax
16298(5): mov $0x1,%edi
1629d(2): cmp %eax,%edx
1629f(2): mov %eax,%ecx
162a1(2): jnbe 0x18(%rip)
162a3(3): cmp %eax,%r8d
162a6(2): jb 0x13(%rip)
162a8(3): mov %rax,%rsi
162ab(3): mov %rdi,%r11
162ae(4): sar $0x6,%rsi
162b2(3): shl/sal %cl,%r11
162b5(4): or %r11,0x0(%r12,%rsi,8)
162b9(4): add $0x1,%rax
162bd(6): cmp $0x100,%rax
162c3(2): jnz 0xffffffda(%rip)
162c5(5): mov 0x40(%rsp),%rax
162ca(6): mov $0x0,(%rax)
162d0(5): jmp 0xfffffc80(%rip)
162d5(5): mov 0x18(%rsp),%rbx
162da(3): mov %rax,%rdx
162dd(3): mov %r14,%rsi
162e0(4): mov %r8,(%rsp)
162e4(3): mov %rax,%r15
162e7(3): mov %rbx,%rdi
162ea(5): call 0xffffe866(%rip)
162ef(2): cwde 
162f1(4): add %rax,0x48(%r14)
162f5(5): mov 0x40(%rsp),%r9
162fa(4): mov (%rsp),%r8
162fe(3): mov %r15,%rcx
16301(3): mov %rbx,%rdx
16304(3): mov %rbp,%rsi
16307(3): mov %r14,%rdi
1630a(5): call 0xfffff006(%rip)
1630f(5): mov %rax,0x28(%rsp)
16314(5): jmp 0xfffff10c(%rip)
16319(5): mov 0x40(%rsp),%rax
1631e(6): mov $0x2,(%rax)
16324(5): jmp 0xfffffc64(%rip)
16329(3): mov %r12,%rdi
1632c(5): call 0xfffeb934(%rip)
16331(3): mov %r13,%rdi
16334(5): call 0xfffeb92c(%rip)
16339(5): jmp 0xfffffb3f(%rip)
1633e(5): mov 0x40(%rsp),%rax
16343(9): mov $0x0,0x28(%rsp)
1634c(6): mov $0x6,(%rax)
16352(5): jmp 0xfffff0ce(%rip)
16357(2): mov %ebx,%eax
16359(2): neg %eax
1635b(2): cwde 
1635d(4): add %rax,0x48(%r14)
16361(5): mov $0x1,0x8(%r15)
16366(7): mov 0xa0(%rsp),%eax
1636d(5): jmp 0xfffff8f8(%rip)
16372(4): add %rbx,0x48(%r14)
16376(5): cmp $0x0,0x57(%rsp)
1637b(2): jz 0x16(%rip)
1637d(5): lea 0x20(%r12),%rdx
16382(3): mov %r12,%rax
16385(3): not (%rax)
16388(4): add $0x8,%rax
1638c(3): cmp %rax,%rdx
1638f(2): jnz 0xfffffff6(%rip)
16391(5): mov 0x10(%rsp),%rax
16396(6): mov 0xb4(%rax),%edx
1639c(3): cmp $0x1,%edx
1639f(2): jle 0x1a(%rip)
163a1(4): mov 0x78(%rax),%rcx
163a5(2): xor %eax,%eax
163a7(4): mov 0x0(%rcx,%rax,1),%rsi
163ab(4): and %rsi,0x0(%r12,%rax,1)
163af(4): add $0x8,%rax
163b3(4): cmp $0x20,%rax
163b7(2): jnz 0xfffffff0(%rip)
163b9(5): cmp $0x0,0x28(%r13)
163be(6): jnz 0x8a(%rip)
163c4(5): cmp $0x0,0x30(%r13)
163c9(2): jnz 0x7f(%rip)
163cb(5): cmp $0x0,0x38(%r13)
163d0(2): jnz 0x78(%rip)
163d2(5): cmp $0x0,0x40(%r13)
163d7(2): jnz 0x71(%rip)
163d9(3): sub $0x1,%edx
163dc(2): jle 0x10(%rip)
163de(5): cmp $0x0,0x48(%r13)
163e3(2): jnz 0x65(%rip)
163e5(5): test $0x1,0x20(%r13)
163ea(2): jnz 0x5e(%rip)
163ec(3): mov %r13,%rdi
163ef(5): call 0xffff5281(%rip)
163f4(5): mov 0x10(%rsp),%rax
163f9(8): lea 0xb0(%rsp),%r8
16401(2): xor %ecx,%ecx
16403(2): xor %edx,%edx
16405(8): mov $0x3,0xb8(%rsp)
1640d(8): mov %r12,0xb0(%rsp)
16415(7): lea 0x80(%rax),%rsi
1641c(4): lea 0x70(%rax),%rdi
16420(5): call 0xffff67f0(%rip)
16425(3): test %rax,%rax
16428(5): mov %rax,0x28(%rsp)
1642d(6): jnz 0xfffff07f(%rip)
16433(5): mov 0x40(%rsp),%rax
16438(6): mov $0xc,(%rax)
1643e(5): jmp 0xfffffb4a(%rip)
16443(5): nop 0x0(%rax,%rax,1)
16448(5): mov 0x10(%rsp),%rax
1644d(8): lea 0xb0(%rsp),%r15
16455(2): xor %edx,%edx
16457(2): xor %ecx,%ecx
16459(3): mov %r15,%r8
1645c(7): or $0x2,0xb0(%rax)
16463(4): lea 0x70(%rax),%rbx
16467(7): lea 0x80(%rax),%rbp
1646e(8): mov $0x6,0xb8(%rsp)
16476(8): mov %r13,0xb0(%rsp)
1647e(3): mov %rbx,%rdi
16481(3): mov %rbp,%rsi
16484(5): call 0xffff678c(%rip)
16489(3): mov %rax,%rdi
1648c(5): mov %rax,0x28(%rsp)
16491(5): lea 0x20(%r12),%rdx
16496(3): test %rdi,%rdi
16499(3): mov %r12,%rax
1649c(2): jz 0xffffff97(%rip)
1649e(4): cmp $0x0,(%rax)
164a2(6): jnz 0x2ab(%rip)
164a8(4): add $0x8,%rax
164ac(3): cmp %rax,%rdx
164af(2): jnz 0xffffffef(%rip)
164b1(3): mov %r12,%rdi
164b4(5): call 0xfffeb7ac(%rip)
164b9(5): jmp 0xffffeff3(%rip)
164be(5): mov 0x30(%rsp),%rdx
164c3(5): lea 0x1(%rdx,%rdx,1),%rdi
164c8(8): lea 0x0(,%rdi,4),%rsi
164d0(5): mov %rdi,0x30(%rsp)
164d5(3): mov %rax,%rdi
164d8(5): call 0xfffebab8(%rip)
164dd(3): test %rax,%rax
164e0(6): jz 0xffffff53(%rip)
164e6(4): mov %rax,0x0(%r13)
164ea(4): mov 0x28(%r13),%rdx
164ee(5): jmp 0xfffffadc(%rip)
164f3(3): xor %r8d,%r8d
164f6(3): test %r9,%r9
164f9(2): jz 0x7b(%rip)
164fb(2): mov %edx,%edi
164fd(5): mov %r8d,0x78(%rsp)
16502(5): mov %r9,0x70(%rsp)
16507(5): call 0xfffebad9(%rip)
1650c(2): mov %eax,%edx
1650e(7): mov 0xb0(%rsp),%eax
16515(5): mov 0x70(%rsp),%r9
1651a(5): mov 0x78(%rsp),%r8d
1651f(3): cmp $0x3,%eax
16522(6): jz 0xfffffd05(%rip)
16528(2): test %eax,%eax
1652a(6): jz 0xfffffcfd(%rip)
16530(8): mov 0xb8(%rsp),%r8d
16538(5): jmp 0xfffffd0c(%rip)
1653d(4): cmp $0x3,%r10d
16541(6): jz 0x291(%rip)
16547(2): test %esi,%esi
16549(2): jz 0xffffffaa(%rip)
1654b(3): test %r11b,%r11b
1654e(2): jnz 0xffffffa5(%rip)
16550(7): mov 0xa8(%rsp),%edx
16557(2): jmp 0xffffffd9(%rip)
16559(2): xor %edx,%edx
1655b(3): cmp $0x3,%esi
1655e(6): jnz 0xfffffc9a(%rip)
16564(8): mov 0xa8(%rsp),%rax
1656c(3): movzx (%rax),%edx
1656f(5): jmp 0xfffffc89(%rip)
16574(3): test %r10d,%r10d
16577(6): jz 0xfffffce0(%rip)
1657d(4): cmp $0x3,%r10d
16581(2): jnz 0xffffffaf(%rip)
16583(5): jmp 0xfffffcd4(%rip)
16588(5): mov $0x80,%ebx
1658d(6): mov $0x2,%r12d
16593(5): call 0xfffebb4d(%rip)
16598(3): movsxd %ebx,%rdx
1659b(3): movsxd %r12d,%r9
1659e(6): mov $0x1,%r8d
165a4(3): add %rdx,%rdx
165a7(3): add (%rax),%rdx
165aa(5): mov 0x10(%rsp),%rax
165af(4): lea 0x0(%rax,%r9,8),%rdi
165b3(2): xor %eax,%eax
165b5(2): jmp 0x1d(%rip)
165b7(9): nop 0x0(%rax,%rax,1)
165c0(3): lea 0x0(%rbx,%rax,1),%esi
165c3(3): cmp $0x5f,%esi
165c6(2): jz 0x14(%rip)
165c8(4): add $0x1,%rax
165cc(4): cmp $0x40,%rax
165d0(2): jz 0x19(%rip)
165d2(4): test $0x8,0x0(%rdx,%rax,2)
165d6(2): mov %eax,%ecx
165d8(2): jz 0xffffffe8(%rip)
165da(3): mov %r8,%rsi
165dd(3): shl/sal %cl,%rsi
165e0(7): or %rsi,0xb8(%rdi)
165e7(2): jmp 0xffffffe1(%rip)
165e9(4): add $0x1,%r9
165ed(3): add $0x40,%ebx
165f0(4): sub $0xffffff80,%rdx
165f4(4): add $0x8,%rdi
165f8(4): cmp $0x3,%r9d
165fc(2): jle 0xffffffb7(%rip)
165fe(5): jmp 0xfffff443(%rip)
16603(2): xor %ebx,%ebx
16605(3): xor %r12d,%r12d
16608(2): jmp 0xffffff8b(%rip)
1660a(7): lea 0x66bf(%rip),%rcx
16611(7): lea 0x60d8(%rip),%rsi
16618(7): lea 0x56a9(%rip),%rdi
1661f(5): mov $0xced,%edx
16624(5): call 0xfffeb80c(%rip)
16629(5): mov 0x40(%rsp),%rax
1662e(6): mov $0xb,(%rax)
16634(5): jmp 0xfffff954(%rip)
16639(8): mov 0xb8(%rsp),%rdi
16641(2): xor %eax,%eax
16643(4): or $0xffffffff,%rcx
16647(2): REPNZ scasb rdi(%es,10),%al
16649(3): mov %rcx,%rax
1664c(3): not %rax
1664f(4): sub $0x1,%rax
16653(4): cmp $0x1,%rax
16657(6): jbe 0xfffffb91(%rip)
1665d(5): mov 0x40(%rsp),%rax
16662(6): mov $0x3,(%rax)
16668(5): jmp 0xfffff920(%rip)
1666d(8): mov 0xa8(%rsp),%rdi
16675(2): xor %eax,%eax
16677(4): or $0xffffffff,%rcx
1667b(2): REPNZ scasb rdi(%es,10),%al
1667d(3): mov %rcx,%rax
16680(3): not %rax
16683(4): sub $0x1,%rax
16687(4): cmp $0x1,%rax
1668b(6): jbe 0xfffffb53(%rip)
16691(2): jmp 0xffffffcc(%rip)
16693(5): mov 0x48(%rsp),%rax
16698(3): mov %rcx,%rdi
1669b(8): mov %r8d,0x8c(%rsp)
166a3(7): mov %edx,0x88(%rsp)
166aa(5): mov %r9,0x70(%rsp)
166af(3): add %rax,%rax
166b2(4): add $0x1,%rax
166b6(8): lea 0x0(,%rax,4),%r10
166be(5): mov %rax,0x48(%rsp)
166c3(3): mov %r10,%rsi
166c6(8): mov %r10,0x80(%rsp)
166ce(5): call 0xfffeb8c2(%rip)
166d3(5): mov 0x70(%rsp),%r9
166d8(8): mov 0x80(%rsp),%r10
166e0(5): mov %rax,0x78(%rsp)
166e5(4): mov 0x10(%r9),%rdi
166e9(3): mov %r10,%rsi
166ec(5): call 0xfffeb8a4(%rip)
166f1(5): mov 0x78(%rsp),%rcx
166f6(3): test %rcx,%rcx
166f9(2): jz 0x2c(%rip)
166fb(3): test %rax,%rax
166fe(5): mov 0x70(%rsp),%r9
16703(7): mov 0x88(%rsp),%edx
1670a(8): mov 0x8c(%rsp),%r8d
16712(2): jz 0x13(%rip)
16714(4): mov %rax,0x10(%r9)
16718(4): mov %rcx,0x8(%r9)
1671c(4): mov 0x40(%r9),%rax
16720(5): jmp 0xfffffb63(%rip)
16725(3): mov %rcx,%rdi
16728(4): mov %rax,(%rsp)
1672c(5): call 0xfffeb534(%rip)
16731(4): mov (%rsp),%rax
16735(3): mov %rax,%rdi
16738(5): call 0xfffeb528(%rip)
1673d(5): mov 0x40(%rsp),%rax
16742(6): mov $0xc,(%rax)
16748(5): jmp 0xfffff840(%rip)
1674d(2): xor %ecx,%ecx
1674f(2): xor %edx,%edx
16751(3): mov %r15,%r8
16754(3): mov %rbp,%rsi
16757(3): mov %rbx,%rdi
1675a(8): mov $0x3,0xb8(%rsp)
16762(8): mov %r12,0xb0(%rsp)
1676a(5): call 0xffff64a6(%rip)
1676f(3): test %rax,%rax
16772(6): jz 0xfffffcc1(%rip)
16778(5): mov 0x28(%rsp),%rcx
1677d(8): lea 0xc0(%rsp),%r8
16785(3): mov %rax,%rdx
16788(3): mov %rbp,%rsi
1678b(3): mov %rbx,%rdi
1678e(8): mov $0xa,0xc8(%rsp)
16796(5): call 0xffff647a(%rip)
1679b(3): test %rax,%rax
1679e(5): mov %rax,0x28(%rsp)
167a3(6): jnz 0xffffed09(%rip)
167a9(5): jmp 0xfffffc8a(%rip)
167ae(5): call 0xfffeb602(%rip)
167b3(5): mov 0x18(%rsp),%rax
167b8(4): cmp $0x2,0x8(%rax)
167bc(6): jnz 0xfffff1f4(%rip)
167c2(5): mov 0x40(%rsp),%rax
167c7(6): mov $0x9,(%rax)
167cd(5): jmp 0xfffff1ee(%rip)
167d2(8): mov 0xb8(%rsp),%rax
167da(4): movzx (%rax),%r8d
167de(5): jmp 0xfffffa2c(%rip)

"parse_branch" :
167f0(2): push %r15
167f2(2): push %r14
167f4(3): mov %rcx,%r15
167f7(2): push %r13
167f9(2): push %r12
167fb(3): mov %rsi,%r13
167fe(1): push %rbp
167ff(1): push %rbx
16800(3): mov %r9,%rbx
16803(3): mov %rdx,%rbp
16806(3): mov %r8,%r12
16809(4): sub $0x48,%rsp
1680d(9): mov $0x28,%rax
16816(5): mov %rax,0x38(%rsp)
1681b(2): xor %eax,%eax
1681d(3): mov (%rsi),%rax
16820(4): mov %rdi,(%rsp)
16824(5): mov %rax,0x10(%rsp)
16829(5): call 0xffffeae7(%rip)
1682e(2): mov (%rbx),%edx
16830(3): mov %rax,%r14
16833(2): test %edx,%edx
16835(2): jz 0xb(%rip)
16837(3): test %rax,%rax
1683a(6): jz 0x100(%rip)
16840(5): lea 0x20(%rsp),%rax
16845(5): mov %rax,0x18(%rsp)
1684a(6): nop 0x0(%rax,%rax,1)
16850(4): movzx 0x8(%rbp),%eax
16854(2): mov %eax,%edx
16856(3): and $0xf7,%edx
16859(3): cmp $0x2,%dl
1685c(6): jz 0x94(%rip)
16862(2): cmp $0x9,%al
16864(2): jnz 0xb(%rip)
16866(3): test %r12,%r12
16869(6): jnz 0x87(%rip)
1686f(4): mov (%rsp),%rdi
16873(3): mov %rbx,%r9
16876(3): mov %r12,%r8
16879(3): mov %r15,%rcx
1687c(3): mov %rbp,%rdx
1687f(3): mov %r13,%rsi
16882(5): call 0xffffea8e(%rip)
16887(3): mov %rax,%r9
1688a(2): mov (%rbx),%eax
1688c(2): test %eax,%eax
1688e(2): jz 0xb(%rip)
16890(3): test %r9,%r9
16893(6): jz 0x91(%rip)
16899(3): test %r14,%r14
1689c(2): jz 0x7c(%rip)
1689e(3): test %r9,%r9
168a1(2): jz 0x77(%rip)
168a3(5): mov 0x10(%rsp),%rax
168a8(5): mov 0x18(%rsp),%r8
168ad(3): mov %r9,%rcx
168b0(3): mov %r14,%rdx
168b3(5): mov %r9,0x8(%rsp)
168b8(5): mov $0x10,0x28(%rsp)
168bd(7): lea 0x80(%rax),%rsi
168c4(4): lea 0x70(%rax),%rdi
168c8(5): call 0xffff6348(%rip)
168cd(3): test %rax,%rax
168d0(5): mov 0x8(%rsp),%r9
168d5(2): jz 0x6b(%rip)
168d7(3): mov %rax,%r14
168da(4): movzx 0x8(%rbp),%eax
168de(2): mov %eax,%edx
168e0(3): and $0xf7,%edx
168e3(3): cmp $0x2,%dl
168e6(6): jnz 0xffffff7c(%rip)
168ec(4): nop 0x0(%rax)
168f0(5): mov 0x38(%rsp),%rcx
168f5(9): xor $0x28,%rcx
168fe(3): mov %r14,%rax
16901(2): jnz 0x6c(%rip)
16903(4): add $0x48,%rsp
16907(1): pop %rbx
16908(1): pop %rbp
16909(2): pop %r12
1690b(2): pop %r13
1690d(2): pop %r14
1690f(2): pop %r15
16911(1): ret near (%rsp)
16912(6): nop 0x0(%rax,%rax,1)
16918(3): test %r14,%r14
1691b(4): cmove %r9,%r14
1691f(5): jmp 0xffffff31(%rip)
16924(3): test %r14,%r14
16927(2): jz 0x13(%rip)
16929(7): lea 0xffff4da0(%rip),%rsi
16930(2): xor %edx,%edx
16932(3): mov %r14,%rdi
16935(5): call 0xffff3efb(%rip)
1693a(3): xor %r14d,%r14d
1693d(2): jmp 0xffffffb3(%rip)
1693f(1): nop 
16940(7): lea 0xffff4d89(%rip),%rsi
16947(3): mov %r9,%rdi
1694a(2): xor %edx,%edx
1694c(5): call 0xffff3ee4(%rip)
16951(7): lea 0xffff4d78(%rip),%rsi
16958(3): mov %r14,%rdi
1695b(2): xor %edx,%edx
1695d(3): xor %r14d,%r14d
16960(5): call 0xffff3ed0(%rip)
16965(6): mov $0xc,(%rbx)
1696b(2): jmp 0xffffff85(%rip)
1696d(5): call 0xfffeb443(%rip)

"parse_reg_exp" :
16980(2): push %r15
16982(2): push %r14
16984(3): mov %rcx,%r14
16987(2): push %r13
16989(2): push %r12
1698b(3): mov %r9,%r13
1698e(1): push %rbp
1698f(1): push %rbx
16990(3): mov %rdx,%rbp
16993(3): mov %rdi,%r12
16996(4): sub $0x58,%rsp
1699a(3): mov (%rsi),%rbx
1699d(9): mov $0x28,%rax
169a6(5): mov %rax,0x48(%rsp)
169ab(2): xor %eax,%eax
169ad(5): mov %rsi,0x28(%rsp)
169b2(5): mov %r8,0x10(%rsp)
169b7(7): mov 0xa8(%rbx),%rax
169be(5): mov %rax,0x20(%rsp)
169c3(5): call 0xfffffe2d(%rip)
169c8(4): mov 0x0(%r13),%edx
169cc(3): mov %rax,%r15
169cf(2): test %edx,%edx
169d1(2): jz 0xb(%rip)
169d3(3): test %rax,%rax
169d6(6): jz 0xec(%rip)
169dc(5): lea 0x30(%rsp),%rax
169e1(5): mov %rax,0x8(%rsp)
169e6(5): jmp 0x8e(%rip)
169eb(5): nop 0x0(%rax,%rax,1)
169f0(2): cmp $0x9,%al
169f2(2): jnz 0xe(%rip)
169f4(6): cmp $0x0,0x10(%rsp)
169fa(6): jnz 0xae(%rip)
16a00(7): mov 0xa8(%rbx),%rax
16a07(5): mov 0x10(%rsp),%r8
16a0c(3): mov %r14,%rcx
16a0f(5): mov 0x28(%rsp),%rsi
16a14(3): mov %r13,%r9
16a17(3): mov %rbp,%rdx
16a1a(3): mov %r12,%rdi
16a1d(5): mov %rax,0x18(%rsp)
16a22(5): mov 0x20(%rsp),%rax
16a27(7): mov %rax,0xa8(%rbx)
16a2e(5): call 0xfffffdc2(%rip)
16a33(3): mov %rax,%rcx
16a36(4): mov 0x0(%r13),%eax
16a3a(2): test %eax,%eax
16a3c(2): jz 0x7(%rip)
16a3e(3): test %rcx,%rcx
16a41(2): jz 0x6b(%rip)
16a43(5): mov 0x18(%rsp),%rax
16a48(7): or %rax,0xa8(%rbx)
16a4f(5): mov 0x8(%rsp),%r8
16a54(7): lea 0x80(%rbx),%rsi
16a5b(4): lea 0x70(%rbx),%rdi
16a5f(3): mov %r15,%rdx
16a62(5): mov $0xa,0x38(%rsp)
16a67(5): call 0xffff61a9(%rip)
16a6c(3): test %rax,%rax
16a6f(3): mov %rax,%r15
16a72(2): jz 0x7e(%rip)
16a74(4): cmp $0xa,0x8(%rbp)
16a78(2): jnz 0x50(%rip)
16a7a(3): mov %r14,%rdx
16a7d(3): mov %r12,%rsi
16a80(3): mov %rbp,%rdi
16a83(7): or $0x800000,%rdx
16a8a(5): call 0xffffe0c6(%rip)
16a8f(2): cwde 
16a91(5): add %rax,0x48(%r12)
16a96(4): movzx 0x8(%rbp),%eax
16a9a(2): mov %eax,%edx
16a9c(3): and $0xf7,%edx
16a9f(3): cmp $0x2,%dl
16aa2(6): jnz 0xffffff4e(%rip)
16aa8(2): xor %ecx,%ecx
16aaa(2): jmp 0xffffffa5(%rip)
16aac(3): test %r15,%r15
16aaf(2): jz 0x13(%rip)
16ab1(7): lea 0xffff4c18(%rip),%rsi
16ab8(2): xor %edx,%edx
16aba(3): mov %r15,%rdi
16abd(5): call 0xffff3d73(%rip)
16ac2(3): xor %r15d,%r15d
16ac5(3): nop (%rax)
16ac8(5): mov 0x48(%rsp),%rcx
16acd(9): xor $0x28,%rcx
16ad6(3): mov %r15,%rax
16ad9(2): jnz 0x21(%rip)
16adb(4): add $0x58,%rsp
16adf(1): pop %rbx
16ae0(1): pop %rbp
16ae1(2): pop %r12
16ae3(2): pop %r13
16ae5(2): pop %r14
16ae7(2): pop %r15
16ae9(1): ret near (%rsp)
16aea(6): nop 0x0(%rax,%rax,1)
16af0(8): mov $0xc,0x0(%r13)
16af8(2): jmp 0xffffffd0(%rip)
16afa(5): call 0xfffeb2b6(%rip)

"re_compile_internal" :
16b00(2): push %r15
16b02(2): push %r14
16b04(2): push %r13
16b06(2): push %r12
16b08(1): push %rbp
16b09(1): push %rbx
16b0a(7): sub $0x128,%rsp
16b11(4): mov %rcx,0x18(%rdi)
16b15(8): mov $0x0,0x10(%rdi)
16b1d(9): mov $0x28,%rax
16b26(8): mov %rax,0x118(%rsp)
16b2e(2): xor %eax,%eax
16b30(4): movzx 0x38(%rdi),%eax
16b34(5): mov %rdi,0x8(%rsp)
16b39(5): mov %rsi,0x10(%rsp)
16b3e(4): mov %rdx,(%rsp)
16b42(5): mov %rcx,0x18(%rsp)
16b47(8): mov $0x0,0x4c(%rsp)
16b4f(8): mov $0x0,0x30(%rdi)
16b57(3): mov (%rdi),%rbx
16b5a(4): mov %al,0x20(%rsp)
16b5e(3): and $0x90,%eax
16b61(8): cmp $0xe7,0x8(%rdi)
16b69(3): mov %al,0x38(%rdi)
16b6c(6): jbe 0xdfa(%rip)
16b72(4): lea 0x8(%rbx),%rdi
16b76(5): mov 0x8(%rsp),%rax
16b7b(3): mov %rbx,%rcx
16b7e(4): and $0xfffffff8,%rdi
16b82(3): sub %rdi,%rcx
16b85(8): mov $0xe8,0x10(%rax)
16b8d(2): xor %eax,%eax
16b8f(6): add $0xe8,%ecx
16b95(7): mov $0x0,(%rbx)
16b9c(b): mov $0x0,0xe0(%rbx)
16ba7(3): shr $0x3,%ecx
16baa(3): REP stosd %rax,rdi(%es,10)
16bad(a): mov $0x384307168202282324,%rax
16bb7(a): mov $0xf,0x80(%rbx)
16bc1(4): cmp %rax,(%rsp)
16bc5(6): jnbe 0x641(%rip)
16bcb(4): mov (%rsp),%r14
16bcf(4): lea 0x1(%r14),%rax
16bd3(3): mov %rax,%rdi
16bd6(4): mov %rax,0x8(%rbx)
16bda(5): mov %rax,0x28(%rsp)
16bdf(4): shl/sal $0x4,%rdi
16be3(5): call 0xfffeb33d(%rip)
16be8(3): test %r14,%r14
16beb(3): mov %rax,(%rbx)
16bee(6): jz 0xce7(%rip)
16bf4(5): mov $0x1,%esi
16bf9(7): nop 0x0(%rax)
16c00(3): add %rsi,%rsi
16c03(4): cmp %rsi,(%rsp)
16c07(2): jnb 0xfffffff9(%rip)
16c09(4): lea 0xffffffff(%rsi),%rbp
16c0d(5): mov $0x18,%edi
16c12(5): call 0xfffeb2ae(%rip)
16c17(7): mov %rbp,0x88(%rbx)
16c1e(4): mov %rax,0x40(%rbx)
16c22(5): call 0xfffeb16e(%rip)
16c27(5): mov $0xe,%edi
16c2c(6): mov %eax,0xb4(%rbx)
16c32(5): call 0xfffeb31e(%rip)
16c37(3): movzx (%rax),%edx
16c3a(3): and $0xdf,%edx
16c3d(3): cmp $0x55,%dl
16c40(2): jnz 0x50(%rip)
16c42(4): movzx 0x1(%rax),%edx
16c46(3): and $0xdf,%edx
16c49(3): cmp $0x54,%dl
16c4c(2): jnz 0x44(%rip)
16c4e(4): movzx 0x2(%rax),%edx
16c52(3): and $0xdf,%edx
16c55(3): cmp $0x46,%dl
16c58(2): jnz 0x38(%rip)
16c5a(2): xor %edx,%edx
16c5c(4): cmp $0x2d,0x3(%rax)
16c60(7): lea 0x509d(%rip),%rdi
16c67(5): mov $0x2,%ecx
16c6c(3): setz %dl
16c6f(5): lea 0x3(%rax,%rdx,1),%rsi
16c74(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
16c76(3): setnbe %al
16c79(2): sbb $0x0,%al
16c7b(2): test %al,%al
16c7d(2): jnz 0x13(%rip)
16c7f(7): or $0x4,0xb0(%rbx)
16c86(a): nop 0x0(%rax,%rax,1)
16c90(7): movzx 0xb0(%rbx),%eax
16c97(2): mov %eax,%edx
16c99(3): and $0xf7,%edx
16c9c(7): cmp $0x1,0xb4(%rbx)
16ca3(6): mov %dl,0xb0(%rbx)
16ca9(2): jle 0x15(%rip)
16cab(2): test $0x4,%al
16cad(6): jz 0x566(%rip)
16cb3(7): lea 0x6046(%rip),%rax
16cba(4): mov %rax,0x78(%rbx)
16cbe(4): cmp $0x0,(%rbx)
16cc2(6): jz 0x544(%rip)
16cc8(5): cmp $0x0,0x40(%rbx)
16ccd(6): jz 0x539(%rip)
16cd3(5): mov 0x18(%rsp),%rax
16cd8(8): lea 0x80(%rsp),%rbp
16ce0(5): mov $0x12,%ecx
16ce5(8): mov $0x0,0x4c(%rsp)
16ced(4): lea 0x8(%rbp),%r8
16cf1(5): and $0x400000,%eax
16cf6(5): mov %rax,0x20(%rsp)
16cfb(5): mov 0x8(%rsp),%rax
16d00(3): setnz %dl
16d03(3): mov %r8,%rdi
16d06(4): mov 0x28(%rax),%rsi
16d0a(2): xor %eax,%eax
16d0c(3): REP stosd %rax,rdi(%es,10)
16d0f(5): mov 0x10(%rsp),%rax
16d14(4): mov (%rsp),%rdi
16d18(3): test %rsi,%rsi
16d1b(7): mov %dl,0x108(%rsp)
16d22(6): mov 0xb4(%rbx),%ecx
16d28(4): setnz %r12b
16d2c(8): mov %rsi,0xf8(%rsp)
16d34(8): mov %rax,0x80(%rsp)
16d3c(7): movzx 0xb0(%rbx),%eax
16d43(3): or %edx,%r12d
16d46(8): mov %rdi,0xd8(%rsp)
16d4e(8): mov %rdi,0xd0(%rsp)
16d56(3): mov %r12d,%esi
16d59(8): mov %r12b,0x10b(%rsp)
16d61(7): mov %ecx,0x110(%rsp)
16d68(8): mov %rdi,0xe8(%rsp)
16d70(8): mov %rdi,0xe0(%rsp)
16d78(2): mov %eax,%edx
16d7a(3): shr $0x3,%al
16d7d(3): shr $0x2,%dl
16d80(3): and $0x1,%eax
16d83(3): and $0x1,%edx
16d86(3): test %rdi,%rdi
16d89(7): mov %al,0x10a(%rsp)
16d90(7): mov %dl,0x109(%rsp)
16d97(6): jnz 0x43e(%rip)
16d9d(3): test %sil,%sil
16da0(2): jz 0xf(%rip)
16da2(8): mov 0x88(%rsp),%rax
16daa(5): mov %rax,0x10(%rsp)
16daf(6): cmp $0x0,0x20(%rsp)
16db5(5): mov 0x10(%rsp),%rax
16dba(8): mov %rax,0x88(%rsp)
16dc2(6): jz 0x103(%rip)
16dc8(3): cmp $0x1,%ecx
16dcb(6): jle 0xbf2(%rip)
16dd1(3): mov %rbp,%rdi
16dd4(5): call 0xffff409c(%rip)
16dd9(2): test %eax,%eax
16ddb(2): jnz 0x45(%rip)
16ddd(4): mov (%rsp),%rax
16de1(8): cmp 0xb8(%rsp),%rax
16de9(6): jle 0xbb7(%rip)
16def(7): movsxd 0xb4(%rbx),%rax
16df6(8): mov 0xc0(%rsp),%rsi
16dfe(8): add 0xb0(%rsp),%rax
16e06(3): cmp %rax,%rsi
16e09(6): jnle 0xb97(%rip)
16e0f(3): add %rsi,%rsi
16e12(3): mov %rbp,%rdi
16e15(5): call 0xffff3aeb(%rip)
16e1a(2): test %eax,%eax
16e1c(2): jz 0xffffffb5(%rip)
16e1e(2): nop 
16e20(4): mov %eax,0x4c(%rsp)
16e24(5): mov 0x8(%rsp),%rax
16e29(3): mov (%rax),%r13
16e2c(4): mov 0x70(%r13),%rdi
16e30(3): test %rdi,%rdi
16e33(2): jz 0x15(%rip)
16e35(3): nop (%rax)
16e38(3): mov (%rdi),%r12
16e3b(5): call 0xfffeae25(%rip)
16e40(3): test %r12,%r12
16e43(3): mov %r12,%rdi
16e46(2): jnz 0xfffffff2(%rip)
16e48(4): mov 0x20(%r13),%rdi
16e4c(8): mov $0x0,0x70(%r13)
16e54(b): mov $0xf,0x80(%r13)
16e5f(8): mov $0x0,0x68(%r13)
16e67(5): call 0xfffeadf9(%rip)
16e6c(8): mov $0x0,0x20(%r13)
16e74(3): mov %rbp,%rdi
16e77(5): call 0xffff4dc9(%rip)
16e7c(3): mov %rbx,%rdi
16e7f(5): call 0xffff4e01(%rip)
16e84(5): mov 0x8(%rsp),%rax
16e89(7): mov $0x0,(%rax)
16e90(8): mov $0x0,0x8(%rax)
16e98(4): mov 0x4c(%rsp),%eax
16e9c(8): mov 0x118(%rsp),%rbx
16ea4(9): xor $0x28,%rbx
16ead(6): jnz 0xd43(%rip)
16eb3(7): add $0x128,%rsp
16eba(1): pop %rbx
16ebb(1): pop %rbp
16ebc(2): pop %r12
16ebe(2): pop %r13
16ec0(2): pop %r14
16ec2(2): pop %r15
16ec4(1): ret near (%rsp)
16ec5(3): cmp $0x1,%ecx
16ec8(6): jnle 0x9b2(%rip)
16ece(3): test %r12b,%r12b
16ed1(8): mov 0xc0(%rsp),%rsi
16ed9(6): jz 0x61b(%rip)
16edf(8): cmp %rsi,0xd8(%rsp)
16ee7(8): mov 0xb0(%rsp),%rax
16eef(9): cmovng 0xd8(%rsp),%rsi
16ef8(3): cmp %rax,%rsi
16efb(2): jnle 0x12(%rip)
16efd(2): jmp 0x43(%rip)
16eff(1): nop 
16f00(8): mov 0x88(%rsp),%rdx
16f08(5): mov %rdx,0x10(%rsp)
16f0d(8): mov 0x80(%rsp),%rdx
16f15(8): mov 0xf8(%rsp),%rcx
16f1d(3): add %rax,%rdx
16f20(8): add 0xa8(%rsp),%rdx
16f28(3): movzx (%rdx),%edx
16f2b(4): movzx 0x0(%rcx,%rdx,1),%edx
16f2f(5): mov 0x10(%rsp),%rcx
16f34(3): mov %dl,0x0(%rcx,%rax,1)
16f37(4): add $0x1,%rax
16f3b(3): cmp %rax,%rsi
16f3e(2): jnz 0xffffffc2(%rip)
16f40(8): mov %rax,0xb0(%rsp)
16f48(8): mov %rax,0xb8(%rsp)
16f50(8): mov $0x0,0x4c(%rsp)
16f58(5): mov 0x8(%rsp),%r12
16f5d(5): mov 0x18(%rsp),%r14
16f62(5): lea 0x50(%rsp),%r13
16f67(3): mov %rbp,%rsi
16f6a(3): mov %r13,%rdi
16f6d(5): mov %r13,0x28(%rsp)
16f72(4): mov (%r12),%r15
16f76(3): mov %r14,%rdx
16f79(9): mov $0x0,0x30(%r12)
16f82(7): or $0x800000,%rdx
16f89(7): mov %r14,0xd8(%r15)
16f90(5): call 0xffffdbc0(%rip)
16f95(5): lea 0x4c(%rsp),%r9
16f9a(3): xor %r8d,%r8d
16f9d(3): mov %r14,%rcx
16fa0(3): mov %r13,%rdx
16fa3(3): mov %r12,%rsi
16fa6(3): mov %rbp,%rdi
16fa9(2): cwde 
16fab(8): add %rax,0xc8(%rsp)
16fb3(5): call 0xfffff9cd(%rip)
16fb8(4): mov 0x4c(%rsp),%ecx
16fbc(2): test %ecx,%ecx
16fbe(6): jnz 0xa29(%rip)
16fc4(4): lea 0x70(%r15),%r13
16fc8(5): lea 0x60(%rsp),%r12
16fcd(4): sub $0xffffff80,%r15
16fd1(2): xor %edx,%edx
16fd3(2): xor %ecx,%ecx
16fd5(3): mov %r15,%rsi
16fd8(3): mov %r12,%r8
16fdb(3): mov %r13,%rdi
16fde(4): mov %rax,(%rsp)
16fe2(5): mov $0x2,0x68(%rsp)
16fe7(5): call 0xffff5c29(%rip)
16fec(4): mov (%rsp),%r9
16ff0(3): mov %rax,%r11
16ff3(3): mov %rax,%rdx
16ff6(3): test %r9,%r9
16ff9(2): jz 0x29(%rip)
16ffb(3): mov %r11,%rcx
16ffe(3): mov %r9,%rdx
17001(3): mov %r12,%r8
17004(3): mov %r15,%rsi
17007(3): mov %r13,%rdi
1700a(4): mov %r11,(%rsp)
1700e(5): mov $0x10,0x68(%rsp)
17013(5): call 0xffff5bfd(%rip)
17018(4): mov (%rsp),%r11
1701c(3): mov %r11,%rdx
1701f(3): mov %rax,%r11
17022(3): test %rdx,%rdx
17025(5): mov 0x8(%rsp),%rcx
1702a(3): setz %dl
1702d(3): test %r11,%r11
17030(3): setz %al
17033(2): or %al,%dl
17035(3): mov (%rcx),%r13
17038(6): jnz 0x99a(%rip)
1703e(4): mov 0x8(%r13),%r15
17042(4): mov %r11,0x68(%rbx)
17046(8): lea 0x0(,%r15,8),%rcx
1704e(4): lea 0x0(%r15,%r15,2),%r15
17052(3): mov %rcx,%rdi
17055(4): mov %rcx,(%rsp)
17059(4): shl/sal $0x3,%r15
1705d(5): call 0xfffeaec3(%rip)
17062(4): mov (%rsp),%rcx
17066(4): mov %rax,0x18(%r13)
1706a(5): mov %rax,0x18(%rsp)
1706f(3): mov %rcx,%rdi
17072(5): call 0xfffeaeae(%rip)
17077(3): mov %r15,%rdi
1707a(4): mov %rax,0x20(%r13)
1707e(5): mov %rax,0x10(%rsp)
17083(5): call 0xfffeae9d(%rip)
17088(3): mov %r15,%rdi
1708b(4): mov %rax,0x28(%r13)
1708f(4): mov %rax,(%rsp)
17093(5): call 0xfffeae8d(%rip)
17098(5): mov 0x18(%rsp),%rdx
1709d(4): mov %rax,0x30(%r13)
170a1(4): mov (%rsp),%rsi
170a5(5): mov 0x10(%rsp),%rcx
170aa(3): test %rdx,%rdx
170ad(6): jz 0x7c0(%rip)
170b3(3): test %rcx,%rcx
170b6(6): jz 0x7b7(%rip)
170bc(3): test %rsi,%rsi
170bf(6): jz 0x7ae(%rip)
170c5(3): test %rax,%rax
170c8(6): jz 0x7a5(%rip)
170ce(5): mov 0x8(%rsp),%rax
170d3(4): mov 0x30(%rax),%r15
170d7(8): lea 0x0(,%r15,8),%rdi
170df(5): call 0xfffeae41(%rip)
170e4(3): test %rax,%rax
170e7(7): mov %rax,0xe0(%r13)
170ee(2): jz 0x6f(%rip)
170f0(3): test %r15,%r15
170f3(2): jz 0x1a(%rip)
170f5(2): xor %edx,%edx
170f7(9): nop 0x0(%rax,%rax,1)
17100(4): mov %rdx,0x0(%rax,%rdx,8)
17104(4): add $0x1,%rdx
17108(3): cmp %r15,%rdx
1710b(2): jnz 0xfffffff5(%rip)
1710d(4): mov 0x68(%r13),%rdi
17111(7): lea 0xffff4ff8(%rip),%rsi
17118(3): mov %r13,%rdx
1711b(5): call 0xffff3785(%rip)
17120(5): mov 0x8(%rsp),%rax
17125(7): mov 0xe0(%r13),%rdi
1712c(4): mov 0x30(%rax),%rdx
17130(3): test %rdx,%rdx
17133(6): jz 0x8f1(%rip)
17139(3): mov (%rdi),%rax
1713c(3): test %rax,%rax
1713f(2): jz 0xf(%rip)
17141(2): jmp 0x1c(%rip)
17143(5): nop 0x0(%rax,%rax,1)
17148(4): cmp %rax,0x0(%rdi,%rax,8)
1714c(2): jnz 0x11(%rip)
1714e(4): add $0x1,%rax
17152(3): cmp %rax,%rdx
17155(2): jnbe 0xfffffff3(%rip)
17157(6): jz 0x8cd(%rip)
1715d(4): mov 0x68(%r13),%rdi
17161(5): mov 0x8(%rsp),%rdx
17166(7): lea 0xffff5ea3(%rip),%rsi
1716d(5): call 0xffff36c3(%rip)
17172(2): test %eax,%eax
17174(6): jnz 0xfffffcac(%rip)
1717a(4): mov 0x68(%r13),%rdi
1717e(7): lea 0xffff83fb(%rip),%rsi
17185(3): mov %r13,%rdx
17188(5): call 0xffff36a8(%rip)
1718d(2): test %eax,%eax
1718f(6): jnz 0xfffffc91(%rip)
17195(4): mov 0x68(%r13),%rdi
17199(7): lea 0xffff5000(%rip),%rsi
171a0(3): mov %r13,%rdx
171a3(5): call 0xffff36fd(%rip)
171a8(4): mov 0x68(%r13),%rdx
171ac(7): lea 0x5a55(%rip),%rsi
171b3(5): nop 0x0(%rax,%rax,1)
171b8(4): movzx 0x30(%rdx),%ecx
171bc(4): mov 0x38(%rdx),%rdi
171c0(3): cmp $0x10,%cl
171c3(6): jnbe 0xd5(%rip)
171c9(3): movzx %cl,%eax
171cc(4): movsxd 0x0(%rsi,%rax,4),%rax
171d0(3): add %rsi,%rax
171d3(2): jmp %rax
171d5(5): mov 0x28(%rsp),%rsi
171da(3): mov %rbp,%rdi
171dd(5): call 0xffff3723(%rip)
171e2(2): test %eax,%eax
171e4(6): jnz 0xfffffc3c(%rip)
171ea(8): movzx 0x10b(%rsp),%esi
171f2(6): mov 0xb4(%rbx),%ecx
171f8(3): test %sil,%sil
171fb(6): jz 0xfffffbb4(%rip)
17201(5): jmp 0xfffffba1(%rip)
17206(8): mov $0xc,0x4c(%rsp)
1720e(5): jmp 0xfffffc6e(%rip)
17213(5): mov $0x1,%esi
17218(5): mov $0x20,%edi
1721d(5): call 0xfffeaca3(%rip)
17222(3): test %rax,%rax
17225(4): mov %rax,0x78(%rbx)
17229(2): jz 0xffffffdd(%rip)
1722b(3): xor %r12d,%r12d
1722e(2): xor %ebp,%ebp
17230(6): mov $0x1,%r13d
17236(3): xor %r15d,%r15d
17239(7): nop 0x0(%rax)
17240(5): lea 0x0(%rbp,%r15,1),%r14d
17245(3): mov %r14d,%edi
17248(5): call 0xfffead98(%rip)
1724d(3): cmp $0xff,%eax
17250(2): jz 0x15(%rip)
17252(4): mov 0x78(%rbx),%rsi
17256(3): mov %r13,%rdi
17259(3): mov %r15d,%ecx
1725c(3): shl/sal %cl,%rdi
1725f(3): add %r12,%rsi
17262(3): or %rdi,(%rsi)
17265(7): test $0xffffff80,%r14d
1726c(2): jnz 0xe(%rip)
1726e(3): cmp %r14d,%eax
17271(2): jz 0x9(%rip)
17273(7): or $0x8,0xb0(%rbx)
1727a(4): add $0x1,%r15
1727e(4): cmp $0x40,%r15
17282(2): jnz 0xffffffbe(%rip)
17284(3): add $0x40,%ebp
17287(4): add $0x8,%r12
1728b(6): cmp $0x100,%ebp
17291(2): jnz 0xffffffa5(%rip)
17293(5): jmp 0xfffffa2b(%rip)
17298(3): and $0x8,%ecx
1729b(6): jnz 0x917(%rip)
172a1(4): mov 0x20(%rdx),%rax
172a5(4): mov 0x38(%rax),%rcx
172a9(4): mov 0x18(%r13),%rax
172ad(4): mov %rcx,0x0(%rax,%rdi,8)
172b1(4): mov 0x8(%rdx),%r15
172b5(2): xor %edi,%edi
172b7(3): test %r15,%r15
172ba(2): jz 0x11(%rip)
172bc(3): mov %r15,%rdx
172bf(5): jmp 0xfffffef9(%rip)
172c4(4): nop 0x0(%rax)
172c8(3): mov %rax,%rdx
172cb(4): mov 0x10(%rdx),%r15
172cf(3): test %r15,%r15
172d2(3): setz %cl
172d5(3): cmp %rdi,%r15
172d8(3): setz %al
172db(2): or %al,%cl
172dd(4): mov %cl,0x10(%rsp)
172e1(2): jz 0xffffffdb(%rip)
172e3(3): mov (%rdx),%rax
172e6(3): mov %rdx,%rdi
172e9(3): test %rax,%rax
172ec(2): jnz 0xffffffdc(%rip)
172ee(3): xor %r14d,%r14d
172f1(3): xor %r15d,%r15d
172f4(4): nop 0x0(%rax)
172f8(4): mov 0x10(%r13),%rdx
172fc(3): cmp %r15,%rdx
172ff(2): jz 0x27(%rip)
17301(4): lea 0x0(%r15,%r15,2),%r10
17305(4): mov 0x30(%r13),%rax
17309(4): shl/sal $0x3,%r10
1730d(6): cmp $0x0,0x8(%rax,%r10,1)
17313(6): jz 0x205(%rip)
17319(4): mov 0x10(%r13),%rdx
1731d(4): add $0x1,%r15
17321(3): cmp %r15,%rdx
17324(2): jnz 0xffffffdd(%rip)
17326(3): test %r14b,%r14b
17329(6): jz 0x245(%rip)
1732f(3): xor %r14d,%r14d
17332(3): xor %r15d,%r15d
17335(2): jmp 0xffffffcc(%rip)
17337(8): or $0x1,0xb0(%r13)
1733f(4): mov 0x8(%rdx),%r15
17343(3): test %r15,%r15
17346(6): jz 0x613(%rip)
1734c(4): mov 0x18(%r15),%rax
17350(4): mov 0x38(%rax),%rcx
17354(4): mov 0x10(%rdx),%rax
17358(3): test %rax,%rax
1735b(6): jz 0x5f1(%rip)
17361(4): mov 0x18(%rax),%rax
17365(4): mov 0x38(%rax),%r9
17369(3): test %rcx,%rcx
1736c(6): js 0x865(%rip)
17372(3): test %r9,%r9
17375(6): js 0x81e(%rip)
1737b(4): mov 0x28(%r13),%rax
1737f(4): lea 0x0(%rdi,%rdi,2),%rdi
17383(5): mov %rsi,0x38(%rsp)
17388(5): mov %r9,0x30(%rsp)
1738d(5): mov %rcx,0x18(%rsp)
17392(5): mov %rdx,0x10(%rsp)
17397(4): lea 0x0(%rax,%rdi,8),%r10
1739b(5): mov $0x10,%edi
173a0(7): mov $0x2,(%r10)
173a7(4): mov %r10,(%rsp)
173ab(5): call 0xfffeab75(%rip)
173b0(4): mov (%rsp),%r10
173b4(3): test %rax,%rax
173b7(5): mov 0x10(%rsp),%rdx
173bc(5): mov 0x18(%rsp),%rcx
173c1(5): mov 0x30(%rsp),%r9
173c6(5): mov 0x38(%rsp),%rsi
173cb(4): mov %rax,0x10(%r10)
173cf(6): jz 0x29b(%rip)
173d5(3): cmp %r9,%rcx
173d8(6): jz 0x5d5(%rip)
173de(8): mov $0x2,0x8(%r10)
173e6(6): jl 0x5ae(%rip)
173ec(3): mov %r9,(%rax)
173ef(4): mov %rcx,0x8(%rax)
173f3(5): jmp 0xfffffec2(%rip)
173f8(4): mov 0x20(%rdx),%rax
173fc(4): lea 0x0(%rdi,%rdi,2),%rcx
17400(5): mov $0x8,%edi
17405(5): mov %rsi,0x10(%rsp)
1740a(4): mov %rdx,(%rsp)
1740e(4): mov 0x38(%rax),%r14
17412(4): mov 0x28(%r13),%rax
17416(4): lea 0x0(%rax,%rcx,8),%r15
1741a(7): mov $0x1,(%r15)
17421(8): mov $0x1,0x8(%r15)
17429(5): call 0xfffeaaf7(%rip)
1742e(3): test %rax,%rax
17431(4): mov %rax,0x10(%r15)
17435(4): mov (%rsp),%rdx
17439(5): mov 0x10(%rsp),%rsi
1743e(6): jz 0x6aa(%rip)
17444(3): mov %r14,(%rax)
17447(4): mov 0x8(%rdx),%r15
1744b(5): jmp 0xfffffe6a(%rip)
17450(5): cmp $0x0,0x20(%rdx)
17455(6): jz 0xfffffe5c(%rip)
1745b(7): lea 0x585e(%rip),%rcx
17462(7): lea 0x5287(%rip),%rsi
17469(7): lea 0x5326(%rip),%rdi
17470(5): mov $0x59f,%edx
17475(5): call 0xfffea9bb(%rip)
1747a(6): nop 0x0(%rax,%rax,1)
17480(4): mov 0x20(%rdx),%rax
17484(4): mov 0x38(%rax),%r15
17488(4): mov 0x18(%r13),%rax
1748c(4): mov %r15,0x0(%rax,%rdi,8)
17490(4): cmp $0x4,0x30(%rdx)
17494(6): jnz 0xfffffe1d(%rip)
1749a(4): mov 0x28(%r13),%rax
1749e(4): lea 0x0(%rdi,%rdi,2),%rcx
174a2(5): mov $0x8,%edi
174a7(5): mov %rsi,0x18(%rsp)
174ac(5): mov %rdx,0x10(%rsp)
174b1(4): lea 0x0(%rax,%rcx,8),%rcx
174b5(7): mov $0x1,(%rcx)
174bc(8): mov $0x1,0x8(%rcx)
174c4(4): mov %rcx,(%rsp)
174c8(5): call 0xfffeaa58(%rip)
174cd(4): mov (%rsp),%rcx
174d1(3): test %rax,%rax
174d4(5): mov 0x10(%rsp),%rdx
174d9(5): mov 0x18(%rsp),%rsi
174de(4): mov %rax,0x10(%rcx)
174e2(6): jz 0x64e(%rip)
174e8(3): mov %r15,(%rax)
174eb(4): mov 0x8(%rdx),%r15
174ef(5): jmp 0xfffffdc6(%rip)
174f4(8): mov %rsi,0xb0(%rsp)
174fc(8): mov %rsi,0xb8(%rsp)
17504(8): mov $0x0,0x4c(%rsp)
1750c(5): jmp 0xfffffa4c(%rip)
17511(7): nop 0x0(%rax)
17518(5): mov $0x1,%ecx
1751d(3): mov %r15,%rdx
17520(3): mov %r13,%rsi
17523(3): mov %r12,%rdi
17526(4): mov %r10,(%rsp)
1752a(5): call 0xffff5126(%rip)
1752f(2): test %eax,%eax
17531(6): jnz 0xfffff8ef(%rip)
17537(4): mov 0x30(%r13),%rax
1753b(4): mov (%rsp),%r10
1753f(4): add $0x1,%r15
17543(6): cmp $0x0,0x8(%rax,%r10,1)
17549(6): jnz 0xfffffdaf(%rip)
1754f(5): mov 0x70(%rsp),%rdi
17554(5): call 0xfffea70c(%rip)
17559(4): cmp %r15,0x10(%r13)
1755d(6): jz 0xfffffdd2(%rip)
17563(6): movzx 0x10(%rsp),%r14d
17569(5): jmp 0xfffffd98(%rip)
1756e(5): mov 0x8(%rsp),%rax
17573(4): test $0x10,0x38(%rax)
17577(2): jnz 0x13(%rip)
17579(5): cmp $0x0,0x30(%rax)
1757e(2): jz 0xc(%rip)
17580(8): test $0x1,0xb0(%r13)
17588(2): jnz 0x10(%rip)
1758a(8): cmp $0x0,0x98(%r13)
17592(6): jz 0xf9(%rip)
17598(4): lea 0x0(%rdx,%rdx,2),%rdi
1759c(4): mov %rdx,(%rsp)
175a0(4): shl/sal $0x3,%rdi
175a4(5): call 0xfffea97c(%rip)
175a9(3): test %rax,%rax
175ac(4): mov %rax,0x38(%r13)
175b0(6): jz 0x54c(%rip)
175b6(4): mov (%rsp),%rdx
175ba(2): xor %esi,%esi
175bc(2): xor %ecx,%ecx
175be(3): test %rdx,%rdx
175c1(2): jnz 0x13(%rip)
175c3(5): jmp 0xc8(%rip)
175c8(8): nop 0x0(%rax,%rax,1)
175d0(4): mov 0x38(%r13),%rax
175d4(4): pxor %xmm0,%xmm0
175d8(3): add %rsi,%rax
175db(4): add $0x1,%rcx
175df(8): mov $0x0,0x10(%rax)
175e7(4): add $0x18,%rsi
175eb(3): movups %xmm0,(%rax)
175ee(4): mov 0x10(%r13),%rax
175f2(3): cmp %rax,%rcx
175f5(2): jb 0xffffffdb(%rip)
175f7(3): test %rax,%rax
175fa(6): jz 0x91(%rip)
17600(4): mov 0x30(%r13),%rax
17604(9): mov $0x0,0x18(%rsp)
1760d(9): mov $0x0,0x10(%rsp)
17616(5): mov 0x18(%rsp),%rcx
1761b(4): lea 0x0(%rax,%rcx,1),%rdx
1761f(5): cmp $0x0,0x8(%rdx)
17624(4): mov 0x10(%rdx),%rcx
17628(2): jle 0x4c(%rip)
1762a(3): xor %r15d,%r15d
1762d(2): jmp 0x1b(%rip)
1762f(1): nop 
17630(4): mov 0x30(%r13),%rax
17634(5): mov 0x18(%rsp),%rdx
17639(4): add $0x1,%r15
1763d(4): mov (%rsp),%rcx
17641(5): cmp 0x8(%rax,%rdx,1),%r15
17646(2): jnl 0x2e(%rip)
17648(4): mov 0x0(%rcx,%r15,8),%rax
1764c(4): mov %rcx,(%rsp)
17650(4): lea 0x0(%rax,%rax,2),%rsi
17654(4): mov 0x38(%r13),%rax
17658(4): lea 0x0(%rax,%rsi,8),%rdi
1765c(5): mov 0x10(%rsp),%rsi
17661(5): call 0xffff333f(%rip)
17666(2): test %al,%al
17668(2): jnz 0xffffffc8(%rip)
1766a(5): mov $0xc,%eax
1766f(5): jmp 0xfffff7b1(%rip)
17674(6): add $0x1,0x10(%rsp)
1767a(6): add $0x18,0x18(%rsp)
17680(5): mov 0x10(%rsp),%rdx
17685(4): cmp 0x10(%r13),%rdx
17689(2): jb 0xffffff8d(%rip)
1768b(7): movzx 0xb0(%rbx),%eax
17692(8): mov $0x0,0x4c(%rsp)
1769a(3): shr $0x2,%al
1769d(6): cmp $0x0,0x20(%rsp)
176a3(3): setz %dl
176a6(2): and %dl,%al
176a8(6): jnz 0x1e7(%rip)
176ae(4): mov 0x68(%rbx),%rax
176b2(3): mov %r12,%rdi
176b5(4): mov 0x18(%rax),%rax
176b9(4): mov 0x38(%rax),%rax
176bd(4): lea 0x0(%rax,%rax,2),%rdx
176c1(7): mov %rax,0x90(%rbx)
176c8(4): mov 0x30(%rbx),%rax
176cc(4): lea 0x0(%rax,%rdx,8),%rsi
176d0(5): call 0xffff59e0(%rip)
176d5(2): test %eax,%eax
176d7(3): mov %eax,%r15d
176da(4): mov %eax,0x50(%rsp)
176de(6): jnz 0x121(%rip)
176e4(8): cmp $0x0,0x98(%rbx)
176ec(6): jle 0xd4(%rip)
176f2(5): mov 0x68(%rsp),%r9
176f7(3): test %r9,%r9
176fa(6): jle 0xc6(%rip)
17700(3): xor %r10d,%r10d
17703(5): lea 0x10(%r12),%r13
17708(2): jmp 0x15(%rip)
1770a(6): nop 0x0(%rax,%rax,1)
17710(4): add $0x1,%r10
17714(3): cmp %r10,%r9
17717(6): jle 0xa9(%rip)
1771d(5): mov 0x70(%rsp),%rcx
17722(3): mov (%rbx),%rsi
17725(4): mov 0x0(%rcx,%r10,8),%r8
17729(3): mov %r8,%rdi
1772c(4): shl/sal $0x4,%rdi
17730(3): add %rsi,%rdi
17733(4): cmp $0x4,0x8(%rdi)
17737(2): jnz 0xffffffd9(%rip)
17739(2): xor %edx,%edx
1773b(2): jmp 0xe(%rip)
1773d(3): nop (%rax)
17740(4): add $0x1,%rdx
17744(3): cmp %rdx,%r9
17747(2): jz 0xffffffc9(%rip)
17749(4): mov 0x0(%rcx,%rdx,8),%rax
1774d(4): shl/sal $0x4,%rax
17751(3): add %rsi,%rax
17754(4): cmp $0x9,0x8(%rax)
17758(2): jnz 0xffffffe8(%rip)
1775a(3): mov (%rdi),%r11
1775d(3): cmp %r11,(%rax)
17760(2): jnz 0xffffffe0(%rip)
17762(4): mov 0x28(%rbx),%rdx
17766(4): lea 0x0(%r8,%r8,2),%rax
1776a(3): mov %r13,%rsi
1776d(3): mov %r9,%rdi
17770(4): lea 0x0(%rdx,%rax,8),%rax
17774(4): mov 0x10(%rax),%rax
17778(3): mov (%rax),%r11
1777b(3): mov %r11,%rdx
1777e(5): call 0xffff47d2(%rip)
17783(3): test %rax,%rax
17786(2): jnz 0xffffff8a(%rip)
17788(4): mov 0x30(%rbx),%rax
1778c(4): lea 0x0(%r11,%r11,2),%rdx
17790(3): mov %r12,%rdi
17793(4): lea 0x0(%rax,%rdx,8),%rsi
17797(5): call 0xffff4cd9(%rip)
1779c(2): test %eax,%eax
1779e(6): jnz 0x342(%rip)
177a4(5): mov 0x68(%rsp),%r9
177a9(6): mov $0x1,%r10d
177af(3): cmp %r10,%r9
177b2(6): jnle 0xffffff6b(%rip)
177b8(8): nop 0x0(%rax,%rax,1)
177c0(5): mov 0x28(%rsp),%rdi
177c5(2): xor %ecx,%ecx
177c7(3): mov %r12,%rdx
177ca(3): mov %rbx,%rsi
177cd(5): call 0xffff5ad3(%rip)
177d2(3): test %rax,%rax
177d5(4): mov %rax,0x48(%rbx)
177d9(6): jz 0x169(%rip)
177df(4): cmp $0x0,0x68(%rax)
177e3(6): js 0xfe(%rip)
177e9(4): mov %rax,0x60(%rbx)
177ed(4): mov %rax,0x58(%rbx)
177f1(4): mov %rax,0x50(%rbx)
177f5(5): mov 0x70(%rsp),%rdi
177fa(5): call 0xfffea466(%rip)
177ff(5): mov 0x8(%rsp),%rax
17804(5): mov %r15d,0x4c(%rsp)
17809(3): mov (%rax),%r13
1780c(4): mov 0x70(%r13),%rdi
17810(3): test %rdi,%rdi
17813(2): jz 0x15(%rip)
17815(3): nop (%rax)
17818(3): mov (%rdi),%r12
1781b(5): call 0xfffea445(%rip)
17820(3): test %r12,%r12
17823(3): mov %r12,%rdi
17826(2): jnz 0xfffffff2(%rip)
17828(4): mov 0x20(%r13),%rdi
1782c(8): mov $0x0,0x70(%r13)
17834(b): mov $0xf,0x80(%r13)
1783f(8): mov $0x0,0x68(%r13)
17847(5): call 0xfffea419(%rip)
1784c(8): mov $0x0,0x20(%r13)
17854(3): mov %rbp,%rdi
17857(5): call 0xffff43e9(%rip)
1785c(4): mov 0x4c(%rsp),%eax
17860(2): test %eax,%eax
17862(6): jz 0xfffff63a(%rip)
17868(5): jmp 0xfffff614(%rip)
1786d(8): mov $0xc,0x4c(%rsp)
17875(5): jmp 0xfffff5b7(%rip)
1787a(3): mov %rbp,%rdi
1787d(5): call 0xffff3423(%rip)
17882(8): mov $0x0,0x4c(%rsp)
1788a(5): jmp 0xfffff6ce(%rip)
1788f(5): mov 0x8(%rsp),%rcx
17894(5): cmp $0x0,0x28(%rcx)
17899(6): jnz 0xfffffe15(%rip)
1789f(4): mov 0x10(%rbx),%r10
178a3(3): test %r10,%r10
178a6(6): jz 0x2b4(%rip)
178ac(3): mov (%rbx),%rsi
178af(7): lea 0x5396(%rip),%r9
178b6(3): xor %r8d,%r8d
178b9(2): xor %edx,%edx
178bb(3): mov %rsi,%rcx
178be(4): cmp $0xc,0x8(%rcx)
178c2(6): jnbe 0x2cc(%rip)
178c8(4): movzx 0x8(%rcx),%edi
178cc(4): movsxd 0x0(%r9,%rdi,4),%rdi
178d0(3): add %r9,%rdi
178d3(2): jmp %rdi
178d5(2): xor %ebp,%ebp
178d7(5): mov $0x1,%esi
178dc(5): jmp 0xfffff331(%rip)
178e1(5): mov 0x28(%rsp),%r14
178e6(5): mov $0x1,%ecx
178eb(3): mov %r12,%rdx
178ee(3): mov %rbx,%rsi
178f1(3): mov %r14,%rdi
178f4(5): call 0xffff59ac(%rip)
178f9(5): mov $0x2,%ecx
178fe(3): mov %r12,%rdx
17901(3): mov %rbx,%rsi
17904(3): mov %r14,%rdi
17907(4): mov %rax,0x50(%rbx)
1790b(5): call 0xffff5995(%rip)
17910(5): mov $0x6,%ecx
17915(4): mov %rax,0x58(%rbx)
17919(3): mov %r12,%rdx
1791c(3): mov %rbx,%rsi
1791f(3): mov %r14,%rdi
17922(5): call 0xffff597e(%rip)
17927(5): cmp $0x0,0x50(%rbx)
1792c(4): mov %rax,0x60(%rbx)
17930(2): jz 0x12(%rip)
17932(5): cmp $0x0,0x58(%rbx)
17937(2): jz 0xb(%rip)
17939(3): test %rax,%rax
1793c(6): jnz 0xfffffeb9(%rip)
17942(5): mov 0x50(%rsp),%r15d
17947(5): jmp 0xfffffeb8(%rip)
1794c(4): mov 0x20(%rdx),%rax
17950(4): mov 0x38(%rax),%r9
17954(5): jmp 0xfffffa15(%rip)
17959(4): mov 0x20(%rdx),%rax
1795d(4): mov 0x38(%rax),%rcx
17961(5): jmp 0xfffff9f3(%rip)
17966(3): mov %rbx,%rdi
17969(5): mov $0xe8,%esi
1796e(5): call 0xfffea622(%rip)
17973(3): test %rax,%rax
17976(3): mov %rax,%rbx
17979(6): jz 0x198(%rip)
1797f(5): mov 0x8(%rsp),%rax
17984(8): mov $0xe8,0x8(%rax)
1798c(3): mov %rbx,(%rax)
1798f(5): jmp 0xfffff1e3(%rip)
17994(3): mov %rcx,(%rax)
17997(4): mov %r9,0x8(%rax)
1799b(5): jmp 0xfffff91a(%rip)
179a0(8): mov $0x0,0x4c(%rsp)
179a8(5): jmp 0xfffff5b0(%rip)
179ad(8): mov $0x1,0x8(%r10)
179b5(3): mov %rcx,(%rax)
179b8(5): jmp 0xfffff8fd(%rip)
179bd(3): mov %rbp,%rdi
179c0(5): call 0xffff3270(%rip)
179c5(8): mov $0x0,0x4c(%rsp)
179cd(5): jmp 0xfffff58b(%rip)
179d2(8): mov $0xc,0x4c(%rsp)
179da(8): mov $0x0,0x68(%rbx)
179e2(5): jmp 0xfffff44a(%rip)
179e7(3): test %rax,%rax
179ea(6): jz 0x131(%rip)
179f0(4): lea 0x70(%r15),%r13
179f4(5): lea 0x60(%rsp),%r12
179f9(4): sub $0xffffff80,%r15
179fd(2): xor %ecx,%ecx
179ff(2): xor %edx,%edx
17a01(3): mov %r15,%rsi
17a04(3): mov %r12,%r8
17a07(3): mov %r13,%rdi
17a0a(4): mov %rax,(%rsp)
17a0e(5): mov $0x2,0x68(%rsp)
17a13(5): call 0xffff51fd(%rip)
17a18(4): mov (%rsp),%r9
17a1c(3): mov %rax,%r11
17a1f(5): jmp 0xfffff5dc(%rip)
17a24(5): call 0xfffea23c(%rip)
17a29(b): mov $0x0,0xe0(%r13)
17a34(5): jmp 0xfffff729(%rip)
17a39(3): mov %eax,%r8d
17a3c(4): add $0x1,%rdx
17a40(4): add $0x10,%rcx
17a44(3): cmp %r10,%rdx
17a47(6): jnz 0xfffffe77(%rip)
17a4d(3): or %r8b,%r14b
17a50(6): jz 0x10a(%rip)
17a56(3): mov %rdx,%rax
17a59(4): shl/sal $0x4,%rax
17a5d(3): add %rsi,%rax
17a60(2): jmp 0x18(%rip)
17a62(3): cmp $0x5,%dl
17a65(2): jnz 0x6(%rip)
17a67(4): mov $0x7,0x8(%rsi)
17a6b(4): add $0x10,%rsi
17a6f(3): cmp %rsi,%rax
17a72(6): jz 0xe5(%rip)
17a78(4): movzx 0x8(%rsi),%edx
17a7c(3): cmp $0x1,%dl
17a7f(2): jnz 0xffffffe3(%rip)
17a81(3): cmp $0x0,(%rsi)
17a84(2): jns 0xffffffe7(%rip)
17a86(4): and $0xdf,0xa(%rsi)
17a8a(2): jmp 0xffffffe1(%rip)
17a8c(4): nop 0x0(%rax)
17a90(3): cmp $0x0,(%rcx)
17a93(4): cmovs %eax,%r14d
17a97(2): jmp 0xffffffa5(%rip)
17a99(2): mov (%rcx),%edi
17a9b(3): cmp $0x20,%edi
17a9e(2): jz 0xffffff9e(%rip)
17aa0(6): jbe 0xa9(%rip)
17aa6(3): cmp $0x40,%edi
17aa9(2): jz 0xffffff93(%rip)
17aab(3): add $0x80,%edi
17aae(2): jz 0xffffff8e(%rip)
17ab0(5): jmp 0xfffffbfe(%rip)
17ab5(3): nop (%rax)
17ab8(3): mov (%rcx),%rdi
17abb(5): cmp $0x0,0x10(%rdi)
17ac0(6): jnz 0xfffffbee(%rip)
17ac6(5): cmp $0x0,0x18(%rdi)
17acb(6): jz 0xffffff71(%rip)
17ad1(5): jmp 0xfffffbdd(%rip)
17ad6(a): nop 0x0(%rax,%rax,1)
17ae0(3): mov %eax,%r15d
17ae3(5): jmp 0xfffffd1c(%rip)
17ae8(8): mov $0x0,0x8(%r15)
17af0(7): mov $0x0,(%r15)
17af7(5): jmp 0xfffffb73(%rip)
17afc(5): mov 0x8(%rsp),%rax
17b01(8): mov $0xc,0x4c(%rsp)
17b09(3): mov (%rax),%r13
17b0c(5): jmp 0xfffff320(%rip)
17b11(5): mov $0xc,%eax
17b16(5): jmp 0xfffff386(%rip)
17b1b(5): mov 0x8(%rsp),%rax
17b20(8): mov $0x0,0x68(%rbx)
17b28(3): mov (%rax),%r13
17b2b(5): jmp 0xfffff301(%rip)
17b30(8): mov $0x0,0x8(%rcx)
17b38(7): mov $0x0,(%rcx)
17b3f(5): mov $0xc,%eax
17b44(5): jmp 0xfffff2dc(%rip)
17b49(3): cmp $0x10,%edi
17b4c(6): jz 0xfffffef0(%rip)
17b52(5): jmp 0xfffffb5c(%rip)
17b57(3): mov %r8d,%r14d
17b5a(8): cmp $0x0,0x98(%rbx)
17b62(7): movzx 0xb0(%rbx),%edx
17b69(a): mov $0x1,0xb4(%rbx)
17b73(3): setnle %al
17b76(3): and $0xf9,%edx
17b79(3): or %r14d,%eax
17b7c(3): and $0x1,%eax
17b7f(2): add %eax,%eax
17b81(2): or %edx,%eax
17b83(6): mov %al,0xb0(%rbx)
17b89(5): jmp 0xfffffb25(%rip)
17b8e(5): call 0xfffea0e2(%rip)
17b93(7): lea 0x5126(%rip),%rcx
17b9a(7): lea 0x4b4f(%rip),%rsi
17ba1(7): lea 0x4c0b(%rip),%rdi
17ba8(5): mov $0x5b0,%edx
17bad(5): call 0xfffea283(%rip)
17bb2(7): lea 0x5107(%rip),%rcx
17bb9(7): lea 0x4b30(%rip),%rsi
17bc0(7): lea 0x4b49(%rip),%rdi
17bc7(5): mov $0x5c2,%edx
17bcc(5): call 0xfffea264(%rip)
17bd1(7): lea 0x50e8(%rip),%rcx
17bd8(7): lea 0x4b11(%rip),%rsi
17bdf(7): lea 0x4bc3(%rip),%rdi
17be6(5): mov $0x5af,%edx
17beb(5): call 0xfffea245(%rip)
17bf0(5): call 0xfffea1c0(%rip)

"rpl_re_compile_pattern" :
17c00(4): sub $0x8,%rsp
17c04(7): mov 0x209ded(%rip),%rcx
17c0b(3): mov %rdi,%r8
17c0e(3): mov %rdx,%rdi
17c11(3): mov %rcx,%rax
17c14(4): shr $0x19,%rax
17c18(3): and $0x1,%eax
17c1b(3): shl/sal $0x4,%eax
17c1e(2): mov %eax,%edx
17c20(4): movzx 0x38(%rdi),%eax
17c24(3): and $0xef,%eax
17c27(2): or %edx,%eax
17c29(3): mov %rsi,%rdx
17c2c(3): mov %r8,%rsi
17c2f(3): or $0x80,%eax
17c32(3): mov %al,0x38(%rdi)
17c35(5): call 0xffffeecb(%rip)
17c3a(2): test %eax,%eax
17c3c(2): jz 0x2c(%rip)
17c3e(7): lea 0x50db(%rip),%rdx
17c45(2): cwde 
17c47(7): lea 0x5172(%rip),%rsi
17c4e(2): xor %edi,%edi
17c50(4): add 0x0(%rdx,%rax,8),%rsi
17c54(5): mov $0x5,%edx
17c59(4): add $0x8,%rsp
17c5d(5): jmp 0xfffea123(%rip)
17c62(6): nop 0x0(%rax,%rax,1)
17c68(2): xor %eax,%eax
17c6a(4): add $0x8,%rsp
17c6e(1): ret near (%rsp)

"rpl_re_set_syntax" :
17c70(7): mov 0x209d81(%rip),%rax
17c77(7): mov %rdi,0x209d7a(%rip)
17c7e(1): ret near (%rsp)

"rpl_re_compile_fastmap" :
17c80(2): push %r12
17c82(1): push %rbp
17c83(2): xor %eax,%eax
17c85(1): push %rbx
17c86(4): mov 0x20(%rdi),%rbp
17c8a(3): mov %rdi,%rbx
17c8d(3): mov (%rdi),%r12
17c90(4): lea 0x8(%rbp),%rdi
17c94(3): mov %rbp,%rcx
17c97(8): mov $0x0,0x0(%rbp)
17c9f(b): mov $0x0,0xf8(%rbp)
17caa(4): and $0xfffffff8,%rdi
17cae(3): sub %rdi,%rcx
17cb1(6): add $0x100,%ecx
17cb7(3): shr $0x3,%ecx
17cba(3): REP stosd %rax,rdi(%es,10)
17cbd(3): mov %rbp,%rcx
17cc0(3): mov %rbx,%rdi
17cc3(5): mov 0x48(%r12),%rsi
17cc8(4): lea 0x18(%rsi),%rdx
17ccc(4): add $0x10,%rsi
17cd0(5): call 0xffff8500(%rip)
17cd5(5): mov 0x50(%r12),%rax
17cda(5): cmp %rax,0x48(%r12)
17cdf(2): jz 0x1a(%rip)
17ce1(4): lea 0x18(%rax),%rdx
17ce5(4): lea 0x10(%rax),%rsi
17ce9(3): mov %rbp,%rcx
17cec(3): mov %rbx,%rdi
17cef(5): call 0xffff84e1(%rip)
17cf4(5): mov 0x48(%r12),%rax
17cf9(5): mov 0x58(%r12),%rsi
17cfe(3): cmp %rax,%rsi
17d01(2): jz 0x1a(%rip)
17d03(4): lea 0x18(%rsi),%rdx
17d07(3): mov %rbp,%rcx
17d0a(4): add $0x10,%rsi
17d0e(3): mov %rbx,%rdi
17d11(5): call 0xffff84bf(%rip)
17d16(5): mov 0x48(%r12),%rax
17d1b(5): mov 0x60(%r12),%rsi
17d20(3): cmp %rax,%rsi
17d23(2): jz 0x15(%rip)
17d25(4): lea 0x18(%rsi),%rdx
17d29(3): mov %rbp,%rcx
17d2c(4): add $0x10,%rsi
17d30(3): mov %rbx,%rdi
17d33(5): call 0xffff849d(%rip)
17d38(4): or $0x8,0x38(%rbx)
17d3c(2): xor %eax,%eax
17d3e(1): pop %rbx
17d3f(1): pop %rbp
17d40(2): pop %r12
17d42(1): ret near (%rsp)

"re_search_stub" :
17d50(2): push %r15
17d52(2): push %r14
17d54(3): mov %r8,%rax
17d57(2): push %r13
17d59(2): push %r12
17d5b(3): add %rcx,%r8
17d5e(1): push %rbp
17d5f(1): push %rbx
17d60(4): sub $0x38,%rsp
17d64(3): test %rcx,%rcx
17d67(4): mov 0x78(%rsp),%ebx
17d6b(5): mov 0x70(%rsp),%r12
17d70(4): mov %ebx,0x28(%rsp)
17d74(6): js 0x33c(%rip)
17d7a(3): cmp %rdx,%rcx
17d7d(6): jnle 0x333(%rip)
17d83(3): cmp %rdx,%r8
17d86(3): mov %rcx,%rbx
17d89(3): mov %rdi,%r15
17d8c(6): jnle 0x284(%rip)
17d92(3): test %rax,%rax
17d95(2): js 0xb(%rip)
17d97(3): cmp %r8,%rcx
17d9a(6): jnle 0x276(%rip)
17da0(3): test %r8,%r8
17da3(6): js 0x2e5(%rip)
17da9(3): test %rax,%rax
17dac(2): jns 0xb(%rip)
17dae(3): cmp %r8,%rbx
17db1(6): jle 0x2d7(%rip)
17db7(5): movzx 0x38(%r15),%eax
17dbc(3): mov %eax,%r13d
17dbf(4): shr $0x5,%r13b
17dc3(3): mov %r13d,%edi
17dc6(3): and $0x3,%edi
17dc9(3): cmp %rbx,%r8
17dcc(4): mov %edi,0x2c(%rsp)
17dd0(2): jle 0x11(%rip)
17dd2(5): cmp $0x0,0x20(%r15)
17dd7(2): jz 0xa(%rip)
17dd9(2): test $0x8,%al
17ddb(6): jz 0x1f5(%rip)
17de1(2): test $0x10,%al
17de3(6): jnz 0x1cd(%rip)
17de9(3): test %r12,%r12
17dec(6): jz 0x1c4(%rip)
17df2(3): and $0x6,%eax
17df5(4): mov 0x30(%r15),%rcx
17df9(2): cmp $0x4,%al
17dfb(6): jz 0x195(%rip)
17e01(4): lea 0x1(%rcx),%r14
17e05(3): mov %r14,%r13
17e08(3): mov %r14,%rdi
17e0b(4): shl/sal $0x4,%rdi
17e0f(5): mov %r9,0x20(%rsp)
17e14(5): mov %rdx,0x18(%rsp)
17e19(5): mov %rsi,0x10(%rsp)
17e1e(5): mov %r8,0x8(%rsp)
17e23(5): call 0xfffea0fd(%rip)
17e28(3): test %rax,%rax
17e2b(3): mov %rax,%rbp
17e2e(6): jz 0x292(%rip)
17e34(4): sub $0x8,%rsp
17e38(3): mov %rbx,%rcx
17e3b(3): mov %r15,%rdi
17e3e(4): mov 0x34(%rsp),%eax
17e42(1): push %rax
17e43(1): push %rbp
17e44(2): push %r14
17e46(5): mov 0x40(%rsp),%r9
17e4b(5): mov 0x28(%rsp),%r8
17e50(5): mov 0x38(%rsp),%rdx
17e55(5): mov 0x30(%rsp),%rsi
17e5a(5): call 0xffffab16(%rip)
17e5f(4): add $0x20,%rsp
17e63(2): test %eax,%eax
17e65(2): jz 0x33(%rip)
17e67(3): cmp $0x1,%eax
17e6a(7): mov $0xffffffff,%r12
17e71(2): jz 0x9(%rip)
17e73(7): mov $0xfffffffe,%r12
17e7a(3): mov %rbp,%rdi
17e7d(5): call 0xfffe9de3(%rip)
17e82(4): add $0x38,%rsp
17e86(3): mov %r12,%rax
17e89(1): pop %rbx
17e8a(1): pop %rbp
17e8b(2): pop %r12
17e8d(2): pop %r13
17e8f(2): pop %r14
17e91(2): pop %r15
17e93(1): ret near (%rsp)
17e94(4): nop 0x0(%rax)
17e98(3): test %r12,%r12
17e9b(6): jz 0xcd(%rip)
17ea1(5): movzx 0x38(%r15),%eax
17ea6(4): lea 0x1(%r13),%rdx
17eaa(2): shr $0x1,%al
17eac(3): and $0x3,%eax
17eaf(6): jz 0x171(%rip)
17eb5(3): cmp $0x1,%eax
17eb8(6): jz 0x218(%rip)
17ebe(3): cmp $0x2,%eax
17ec1(6): jnz 0x2ef(%rip)
17ec7(4): cmp (%r12),%r14
17ecb(6): jnbe 0x2c6(%rip)
17ed1(6): mov $0x2,%r9d
17ed7(3): test %r13,%r13
17eda(6): jle 0x26e(%rip)
17ee0(5): mov 0x8(%r12),%r8
17ee5(5): mov 0x10(%r12),%rdi
17eea(8): lea 0x0(,%r13,8),%rsi
17ef2(3): mov %r13,%rdx
17ef5(2): xor %eax,%eax
17ef7(9): nop 0x0(%rax,%rax,1)
17f00(5): mov 0x0(%rbp,%rax,2),%rcx
17f05(4): mov %rcx,0x0(%r8,%rax,1)
17f09(5): mov 0x8(%rbp,%rax,2),%rcx
17f0e(4): mov %rcx,0x0(%rdi,%rax,1)
17f12(4): add $0x8,%rax
17f16(3): cmp %rax,%rsi
17f19(2): jnz 0xffffffe7(%rip)
17f1b(4): cmp %rdx,(%r12)
17f1f(2): jbe 0x2e(%rip)
17f21(5): mov 0x10(%r12),%rsi
17f26(5): mov 0x8(%r12),%rcx
17f2b(7): mov $0xffffffff,%rax
17f32(6): nop 0x0(%rax,%rax,1)
17f38(4): mov %rax,0x0(%rsi,%rdx,8)
17f3c(4): add $0x1,%r13
17f40(4): mov %rax,0x0(%rcx,%rdx,8)
17f44(4): cmp (%r12),%r13
17f48(3): mov %r13,%rdx
17f4b(2): jb 0xffffffed(%rip)
17f4d(5): movzx 0x38(%r15),%eax
17f52(4): lea 0x0(%r9,%r9,1),%r13d
17f56(3): and $0xf9,%eax
17f59(3): or %r13d,%eax
17f5c(2): test $0x6,%al
17f5e(4): mov %al,0x38(%r15)
17f62(6): jz 0xffffff11(%rip)
17f68(5): cmp $0x0,0x28(%rsp)
17f6d(4): mov 0x0(%rbp),%r12
17f71(6): jz 0xffffff09(%rip)
17f77(3): cmp %rbx,%r12
17f7a(6): jnz 0x1f8(%rip)
17f80(4): mov 0x8(%rbp),%r12
17f84(3): sub %rbx,%r12
17f87(5): jmp 0xfffffef3(%rip)
17f8c(4): nop 0x0(%rax)
17f90(4): mov (%r12),%r14
17f94(3): cmp %rcx,%r14
17f97(6): jnbe 0xfffffe6a(%rip)
17f9d(3): test %r14,%r14
17fa0(3): mov %r14,%r13
17fa3(6): jnle 0xfffffe65(%rip)
17fa9(7): nop 0x0(%rax)
17fb0(5): mov $0x10,%edi
17fb5(6): mov $0x1,%r14d
17fbb(6): mov $0x1,%r13d
17fc1(3): xor %r12d,%r12d
17fc4(5): jmp 0xfffffe4b(%rip)
17fc9(7): nop 0x0(%rax)
17fd0(3): mov %r15,%rdi
17fd3(5): mov %r9,0x20(%rsp)
17fd8(5): mov %rdx,0x18(%rsp)
17fdd(5): mov %rsi,0x10(%rsp)
17fe2(5): mov %r8,0x8(%rsp)
17fe7(5): call 0xfffffc99(%rip)
17fec(5): movzx 0x38(%r15),%eax
17ff1(5): mov 0x20(%rsp),%r9
17ff6(5): mov 0x18(%rsp),%rdx
17ffb(5): mov 0x10(%rsp),%rsi
18000(5): mov 0x8(%rsp),%r8
18005(5): jmp 0xfffffddc(%rip)
1800a(6): nop 0x0(%rax,%rax,1)
18010(3): mov %rdx,%r8
18013(5): jmp 0xfffffda4(%rip)
18018(8): nop 0x0(%rax,%rax,1)
18020(8): lea 0x0(,%rdx,8),%r14
18028(5): mov %rdx,0x8(%rsp)
1802d(3): mov %r14,%rdi
18030(5): call 0xfffe9ef0(%rip)
18035(3): test %rax,%rax
18038(5): mov %rax,0x8(%r12)
1803d(5): mov 0x8(%rsp),%rdx
18042(6): jz 0x118(%rip)
18048(3): mov %r14,%rdi
1804b(5): mov %rdx,0x8(%rsp)
18050(5): mov %rax,0x10(%rsp)
18055(5): call 0xfffe9ecb(%rip)
1805a(3): test %rax,%rax
1805d(5): mov %rax,0x10(%r12)
18062(5): mov 0x8(%rsp),%rdx
18067(5): mov 0x10(%rsp),%rcx
1806c(6): jz 0xe6(%rip)
18072(4): mov %rdx,(%r12)
18076(6): mov $0x1,%r9d
1807c(5): jmp 0xfffffe5b(%rip)
18081(7): nop 0x0(%rax)
18088(5): movzx 0x38(%r15),%eax
1808d(3): xor %r8d,%r8d
18090(3): mov %eax,%r13d
18093(4): shr $0x5,%r13b
18097(3): mov %r13d,%edi
1809a(3): and $0x3,%edi
1809d(4): mov %edi,0x2c(%rsp)
180a1(5): jmp 0xfffffd40(%rip)
180a6(a): nop 0x0(%rax,%rax,1)
180b0(7): mov $0xffffffff,%r12
180b7(5): jmp 0xfffffdcb(%rip)
180bc(4): nop 0x0(%rax)
180c0(7): mov $0xfffffffe,%r12
180c7(5): jmp 0xfffffdbb(%rip)
180cc(4): nop 0x0(%rax)
180d0(4): cmp %rdx,(%r12)
180d4(6): mov $0x1,%r9d
180da(6): jnb 0xfffffdfd(%rip)
180e0(8): lea 0x0(,%rdx,8),%rcx
180e8(5): mov 0x8(%r12),%rdi
180ed(5): mov %r9b,0x18(%rsp)
180f2(5): mov %rdx,0x10(%rsp)
180f7(3): mov %rcx,%rsi
180fa(5): mov %rcx,0x8(%rsp)
180ff(5): call 0xfffe9e91(%rip)
18104(3): test %rax,%rax
18107(3): mov %rax,%r14
1810a(2): jz 0x50(%rip)
1810c(5): mov 0x8(%rsp),%rcx
18111(5): mov 0x10(%r12),%rdi
18116(3): mov %rcx,%rsi
18119(5): call 0xfffe9e77(%rip)
1811e(3): test %rax,%rax
18121(5): mov 0x10(%rsp),%rdx
18126(6): movzx 0x18(%rsp),%r9d
1812c(2): jz 0x36(%rip)
1812e(5): mov %r14,0x8(%r12)
18133(5): mov %rax,0x10(%r12)
18138(4): mov %rdx,(%r12)
1813c(5): jmp 0xfffffd9b(%rip)
18141(7): nop 0x0(%rax)
18148(2): xor %edx,%edx
1814a(3): xor %r13d,%r13d
1814d(5): jmp 0xfffffdce(%rip)
18152(3): mov %rcx,%rdi
18155(5): call 0xfffe9b0b(%rip)
1815a(3): xor %r9d,%r9d
1815d(5): jmp 0xfffffdf0(%rip)
18162(3): mov %r14,%rdi
18165(5): call 0xfffe9afb(%rip)
1816a(3): xor %r9d,%r9d
1816d(5): jmp 0xfffffde0(%rip)
18172(7): lea 0x4b17(%rip),%rcx
18179(7): lea 0x4550(%rip),%rsi
18180(7): lea 0x466c(%rip),%rdi
18187(5): mov $0x1be,%edx
1818c(5): call 0xfffe9ca4(%rip)
18191(7): lea 0x4ae8(%rip),%rcx
18198(7): lea 0x4531(%rip),%rsi
1819f(7): lea 0x4635(%rip),%rdi
181a6(5): mov $0x1fb,%edx
181ab(5): call 0xfffe9c85(%rip)
181b0(7): lea 0x4ac9(%rip),%rcx
181b7(7): lea 0x4512(%rip),%rsi
181be(7): lea 0x45f9(%rip),%rdi
181c5(5): mov $0x1f9,%edx
181ca(5): call 0xfffe9c66(%rip)

"re_search_2_stub" :
181d0(2): push %r15
181d2(2): push %r14
181d4(2): push %r13
181d6(2): push %r12
181d8(3): mov %rdi,%r12
181db(1): push %rbp
181dc(1): push %rbx
181dd(3): mov %r8,%rbp
181e0(3): mov %rdx,%rbx
181e3(3): mov %rbp,%rdx
181e6(4): sub $0x28,%rsp
181ea(4): shr $0x3f,%rdx
181ee(5): mov 0x70(%rsp),%rax
181f3(2): mov %edx,%edi
181f5(5): mov 0x78(%rsp),%r8d
181fa(4): shr $0x3f,%rax
181fe(3): or %al,%dil
18201(6): jnz 0xcf(%rip)
18207(3): test %rbx,%rbx
1820a(6): js 0xc6(%rip)
18210(3): mov %rbx,%r15
18213(3): add %rbp,%r15
18216(6): jo 0xba(%rip)
1821c(3): test %rbp,%rbp
1821f(3): mov %rcx,%r14
18222(3): mov %r9,%rcx
18225(6): jz 0xbb(%rip)
1822b(3): xor %r13d,%r13d
1822e(3): test %rbx,%rbx
18231(5): mov %rsi,0x8(%rsp)
18236(2): jnz 0x4a(%rip)
18238(4): movzx %r8b,%r8d
1823c(3): mov %r15,%rdx
1823f(3): mov %r14,%rsi
18242(2): push %r8
18244(4): push 0x70(%rsp)
18248(3): mov %r12,%rdi
1824b(8): mov 0x80(%rsp),%r9
18253(5): mov 0x70(%rsp),%r8
18258(5): call 0xfffffaf8(%rip)
1825d(3): mov %r13,%rdi
18260(3): mov %rax,%rbx
18263(5): call 0xfffe99fd(%rip)
18268(1): pop %rax
18269(1): pop %rdx
1826a(4): add $0x28,%rsp
1826e(3): mov %rbx,%rax
18271(1): pop %rbx
18272(1): pop %rbp
18273(2): pop %r12
18275(2): pop %r13
18277(2): pop %r14
18279(2): pop %r15
1827b(1): ret near (%rsp)
1827c(4): nop 0x0(%rax)
18280(3): mov %r15,%rdi
18283(5): mov %r8d,0x1c(%rsp)
18288(5): mov %r9,0x10(%rsp)
1828d(5): call 0xfffe9c93(%rip)
18292(3): test %rax,%rax
18295(3): mov %rax,%r13
18298(2): jz 0x38(%rip)
1829a(5): mov 0x8(%rsp),%rsi
1829f(3): mov %rbx,%rdx
182a2(3): mov %rax,%rdi
182a5(5): call 0xfffe9c3b(%rip)
182aa(5): lea 0x0(%r13,%rbx,1),%rdi
182af(3): mov %r14,%rsi
182b2(3): mov %rbp,%rdx
182b5(3): mov %r13,%r14
182b8(5): call 0xfffe9c28(%rip)
182bd(5): mov 0x10(%rsp),%rcx
182c2(5): mov 0x1c(%rsp),%r8d
182c7(5): jmp 0xffffff71(%rip)
182cc(4): nop 0x0(%rax)
182d0(7): mov $0xfffffffe,%rbx
182d7(2): jmp 0xffffff93(%rip)
182d9(7): nop 0x0(%rax)
182e0(3): mov %rsi,%r14
182e3(3): xor %r13d,%r13d
182e6(5): jmp 0xffffff52(%rip)

"rpl_regcomp" :
182f0(2): mov %edx,%eax
182f2(2): push %r14
182f4(2): push %r13
182f6(3): and $0x1,%eax
182f9(2): push %r12
182fb(1): push %rbp
182fc(3): cmp $0x1,%eax
182ff(1): push %rbx
18300(3): mov %rdi,%rbx
18303(3): sbb %r14,%r14
18306(7): mov $0x0,(%rdi)
1830d(8): mov $0x0,0x8(%rdi)
18315(7): and $0xfd4fca,%r14d
1831c(8): mov $0x0,0x10(%rdi)
18324(5): mov $0x100,%edi
18329(3): mov %rsi,%r12
1832c(2): mov %edx,%ebp
1832e(7): add $0x3b2fc,%r14
18335(5): call 0xfffe9beb(%rip)
1833a(3): test %rax,%rax
1833d(4): mov %rax,0x20(%rbx)
18341(6): jz 0xaf(%rip)
18347(3): mov %rbp,%r13
1834a(4): shl/sal $0x15,%r13
1834e(7): and $0x400000,%r13d
18355(3): or %r14,%r13
18358(4): test $0x4,%bpl
1835c(2): jnz 0x64(%rip)
1835e(4): and $0x7f,0x38(%rbx)
18362(4): movzx 0x38(%rbx),%edx
18366(3): shr $0x3,%ebp
18369(3): mov %r12,%rdi
1836c(3): and $0x1,%ebp
1836f(8): mov $0x0,0x28(%rbx)
18377(3): shl/sal $0x4,%ebp
1837a(3): and $0xef,%edx
1837d(2): or %edx,%ebp
1837f(4): mov %bpl,0x38(%rbx)
18383(5): call 0xfffe9a1d(%rip)
18388(3): mov %r13,%rcx
1838b(3): mov %rax,%rdx
1838e(3): mov %r12,%rsi
18391(3): mov %rbx,%rdi
18394(5): call 0xffffe76c(%rip)
18399(3): cmp $0x10,%eax
1839c(2): mov %eax,%ebp
1839e(2): jz 0x3a(%rip)
183a0(2): test %eax,%eax
183a2(2): jnz 0x3b(%rip)
183a4(3): mov %rbx,%rdi
183a7(5): call 0xfffff8d9(%rip)
183ac(1): pop %rbx
183ad(2): mov %ebp,%eax
183af(1): pop %rbp
183b0(2): pop %r12
183b2(2): pop %r13
183b4(2): pop %r14
183b6(1): ret near (%rsp)
183b7(9): nop 0x0(%rax,%rax,1)
183c0(4): and $0xffffffbf,%r13
183c4(4): or $0x80,0x38(%rbx)
183c8(7): or $0x100,%r13
183cf(2): jmp 0xffffff93(%rip)
183d1(7): nop 0x0(%rax)
183d8(5): mov $0x8,%ebp
183dd(4): mov 0x20(%rbx),%rdi
183e1(5): call 0xfffe987f(%rip)
183e6(8): mov $0x0,0x20(%rbx)
183ee(2): jmp 0xffffffbe(%rip)
183f0(5): mov $0xc,%ebp
183f5(1): pop %rbx
183f6(2): mov %ebp,%eax
183f8(1): pop %rbp
183f9(2): pop %r12
183fb(2): pop %r13
183fd(2): pop %r14
183ff(1): ret near (%rsp)

"rpl_regerror" :
18400(2): push %r13
18402(2): push %r12
18404(1): push %rbp
18405(1): push %rbx
18406(4): sub $0x8,%rsp
1840a(3): cmp $0x10,%edi
1840d(2): jnbe 0x63(%rip)
1840f(7): lea 0x490a(%rip),%rax
18416(3): movsxd %edi,%rdi
18419(7): lea 0x49a0(%rip),%rsi
18420(3): mov %rdx,%rbp
18423(5): mov $0x5,%edx
18428(3): mov %rcx,%r12
1842b(4): add 0x0(%rax,%rdi,8),%rsi
1842f(2): xor %edi,%edi
18431(5): call 0xfffe994f(%rip)
18436(3): mov %rax,%rdi
18439(3): mov %rax,%r13
1843c(5): call 0xfffe9964(%rip)
18441(3): test %r12,%r12
18444(4): lea 0x1(%rax),%rbx
18448(2): jz 0x15(%rip)
1844a(3): cmp %r12,%rbx
1844d(3): mov %rbx,%rdx
18450(2): jnbe 0x28(%rip)
18452(3): mov %r13,%rsi
18455(3): mov %rbp,%rdi
18458(5): call 0xfffe9a88(%rip)
1845d(4): add $0x8,%rsp
18461(3): mov %rbx,%rax
18464(1): pop %rbx
18465(1): pop %rbp
18466(2): pop %r12
18468(2): pop %r13
1846a(1): ret near (%rsp)
1846b(5): nop 0x0(%rax,%rax,1)
18470(5): call 0xfffe9800(%rip)
18475(3): nop (%rax)
18478(5): lea 0xffffffff(%r12),%rdx
1847d(6): mov $0x0,0xffffffff(%rbp,%r12,1)
18483(2): jmp 0xffffffcf(%rip)

"rpl_regfree" :
18490(1): push %rbx
18491(3): mov %rdi,%rbx
18494(3): mov (%rdi),%rdi
18497(3): test %rdi,%rdi
1849a(2): jz 0x7(%rip)
1849c(5): call 0xffff37e4(%rip)
184a1(4): mov 0x20(%rbx),%rdi
184a5(7): mov $0x0,(%rbx)
184ac(8): mov $0x0,0x8(%rbx)
184b4(5): call 0xfffe97ac(%rip)
184b9(4): mov 0x28(%rbx),%rdi
184bd(8): mov $0x0,0x20(%rbx)
184c5(5): call 0xfffe979b(%rip)
184ca(8): mov $0x0,0x28(%rbx)
184d2(1): pop %rbx
184d3(1): ret near (%rsp)

"rpl_regexec" :
184e0(7): test $0xfffffff8,%r8d
184e7(6): jnz 0x91(%rip)
184ed(2): push %r13
184ef(2): push %r12
184f1(3): mov %rdx,%r13
184f4(1): push %rbp
184f5(1): push %rbx
184f6(3): mov %rcx,%r12
184f9(3): mov %r8d,%ebx
184fc(3): mov %rdi,%rbp
184ff(4): sub $0x18,%rsp
18503(4): test $0x4,%r8b
18507(2): jnz 0x51(%rip)
18509(3): mov %rsi,%rdi
1850c(5): mov %rsi,0x8(%rsp)
18511(5): call 0xfffe988f(%rip)
18516(2): xor %ecx,%ecx
18518(4): test $0x10,0x38(%rbp)
1851c(3): mov %rax,%rdx
1851f(5): mov 0x8(%rsp),%rsi
18524(2): jz 0x42(%rip)
18526(4): sub $0x8,%rsp
1852a(1): push %rbx
1852b(2): push $0x0
1852d(2): push $0x0
1852f(3): mov %rbp,%rdi
18532(3): mov %rdx,%r9
18535(3): mov %rdx,%r8
18538(5): call 0xffffa438(%rip)
1853d(4): add $0x20,%rsp
18541(2): test %eax,%eax
18543(3): setnz %al
18546(4): add $0x18,%rsp
1854a(1): pop %rbx
1854b(3): movzx %al,%eax
1854e(1): pop %rbp
1854f(2): pop %r12
18551(2): pop %r13
18553(1): ret near (%rsp)
18554(4): nop 0x0(%rax)
18558(4): test $0x10,0x38(%rbp)
1855c(3): mov (%rcx),%rcx
1855f(5): mov 0x8(%r12),%rdx
18564(2): jnz 0xffffffc2(%rip)
18566(4): sub $0x8,%rsp
1856a(1): push %rbx
1856b(2): push %r12
1856d(2): push %r13
1856f(2): jmp 0xffffffc0(%rip)
18571(7): nop 0x0(%rax)
18578(5): mov $0x2,%eax
1857d(1): ret near (%rsp)

"rpl_re_match" :
18580(4): sub $0x8,%rsp
18584(3): mov %rdx,%r9
18587(2): push $0x1
18589(2): push %r8
1858b(3): xor %r8d,%r8d
1858e(5): call 0xfffff7c2(%rip)
18593(4): add $0x18,%rsp
18597(1): ret near (%rsp)

"rpl_re_search" :
185a0(4): sub $0x8,%rsp
185a4(2): push $0x0
185a6(2): push %r9
185a8(3): mov %rdx,%r9
185ab(5): call 0xfffff7a5(%rip)
185b0(4): add $0x18,%rsp
185b4(1): ret near (%rsp)

"rpl_re_match_2" :
185c0(4): sub $0x8,%rsp
185c4(2): push $0x1
185c6(4): push 0x20(%rsp)
185ca(4): push 0x20(%rsp)
185ce(2): push $0x0
185d0(5): call 0xfffffc00(%rip)
185d5(4): add $0x28,%rsp
185d9(1): ret near (%rsp)

"rpl_re_search_2" :
185e0(4): sub $0x8,%rsp
185e4(2): push $0x0
185e6(4): push 0x28(%rsp)
185ea(4): push 0x28(%rsp)
185ee(4): push 0x28(%rsp)
185f2(5): call 0xfffffbde(%rip)
185f7(4): add $0x28,%rsp
185fb(1): ret near (%rsp)

"rpl_re_set_registers" :
18600(3): test %rdx,%rdx
18603(2): jnz 0x25(%rip)
18605(4): and $0xf9,0x38(%rdi)
18609(7): mov $0x0,(%rsi)
18610(8): mov $0x0,0x10(%rsi)
18618(8): mov $0x0,0x8(%rsi)
18620(1): ret near (%rsp)
18621(7): nop 0x0(%rax)
18628(4): movzx 0x38(%rdi),%eax
1862c(3): and $0xf9,%eax
1862f(3): or $0x2,%eax
18632(3): mov %al,0x38(%rdi)
18635(3): mov %rdx,(%rsi)
18638(4): mov %rcx,0x8(%rsi)
1863c(4): mov %r8,0x10(%rsi)
18640(1): ret near (%rsp)

"c_strcasecmp" :
18650(2): xor %eax,%eax
18652(3): cmp %rsi,%rdi
18655(2): jnz 0x17(%rip)
18657(2): jmp 0x45(%rip)
18659(7): nop 0x0(%rax)
18660(4): add $0x1,%rdi
18664(4): add $0x1,%rsi
18668(2): cmp %dl,%al
1866a(2): jnz 0x2a(%rip)
1866c(3): movzx (%rdi),%eax
1866f(2): mov %eax,%edx
18671(3): lea 0x20(%rax),%ecx
18674(3): sub $0x41,%edx
18677(3): cmp $0x1a,%dl
1867a(3): movzx (%rsi),%edx
1867d(3): cmovnae %ecx,%eax
18680(2): mov %edx,%ecx
18682(4): lea 0x20(%rdx),%r9d
18686(3): sub $0x41,%ecx
18689(3): cmp $0x1a,%cl
1868c(4): cmovnae %r9d,%edx
18690(2): test %al,%al
18692(2): jnz 0xffffffce(%rip)
18694(3): movzx %al,%eax
18697(3): movzx %dl,%edx
1869a(2): sub %edx,%eax
1869c(2): REP ret near (%rsp)

"close_stream" :
186a0(2): push %r12
186a2(1): push %rbp
186a3(3): mov %rdi,%rbp
186a6(1): push %rbx
186a7(5): call 0xfffe9619(%rip)
186ac(3): mov 0x0(%rbp),%ebx
186af(3): mov %rbp,%rdi
186b2(3): mov %rax,%r12
186b5(5): call 0xffff1bdb(%rip)
186ba(3): and $0x20,%ebx
186bd(2): test %ebx,%ebx
186bf(2): jnz 0x19(%rip)
186c1(2): test %eax,%eax
186c3(2): jz 0xc(%rip)
186c5(3): test %r12,%r12
186c8(5): mov $0xffffffff,%eax
186cd(2): jz 0x3b(%rip)
186cf(1): pop %rbx
186d0(1): pop %rbp
186d1(2): pop %r12
186d3(1): ret near (%rsp)
186d4(4): nop 0x0(%rax)
186d8(2): test %eax,%eax
186da(2): jnz 0x1e(%rip)
186dc(5): call 0xfffe95a4(%rip)
186e1(6): mov $0x0,(%rax)
186e7(5): mov $0xffffffff,%eax
186ec(1): pop %rbx
186ed(1): pop %rbp
186ee(2): pop %r12
186f0(1): ret near (%rsp)
186f1(7): nop 0x0(%rax)
186f8(1): pop %rbx
186f9(5): mov $0xffffffff,%eax
186fe(1): pop %rbp
186ff(2): pop %r12
18701(1): ret near (%rsp)
18702(6): nop 0x0(%rax,%rax,1)
18708(5): call 0xfffe9578(%rip)
1870d(3): cmp $0x9,(%rax)
18710(1): pop %rbx
18711(1): pop %rbp
18712(2): pop %r12
18714(3): setnz %al
18717(3): movzx %al,%eax
1871a(2): neg %eax
1871c(1): ret near (%rsp)

"hard_locale" :
18720(4): sub $0x8,%rsp
18724(2): xor %esi,%esi
18726(5): call 0xfffe987a(%rip)
1872b(3): mov %rax,%rdx
1872e(5): mov $0x1,%eax
18733(3): test %rdx,%rdx
18736(2): jz 0x1f(%rip)
18738(7): lea 0x4811(%rip),%rdi
1873f(5): mov $0x2,%ecx
18744(3): mov %rdx,%rsi
18747(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
18749(3): setnbe %cl
1874c(3): sbb $0x0,%cl
1874f(2): xor %eax,%eax
18751(2): test %cl,%cl
18753(2): jnz 0xd(%rip)
18755(4): add $0x8,%rsp
18759(1): ret near (%rsp)
1875a(6): nop 0x0(%rax,%rax,1)
18760(7): lea 0x47eb(%rip),%rdi
18767(5): mov $0x6,%ecx
1876c(3): mov %rdx,%rsi
1876f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
18771(3): setnbe %al
18774(2): sbb $0x0,%al
18776(2): test %al,%al
18778(3): setnz %al
1877b(4): add $0x8,%rsp
1877f(1): ret near (%rsp)

"locale_charset" :
18780(4): sub $0x8,%rsp
18784(5): mov $0xe,%edi
18789(5): call 0xfffe97c7(%rip)
1878e(3): test %rax,%rax
18791(2): jz 0x1f(%rip)
18793(3): cmp $0x0,(%rax)
18796(7): lea 0x47bb(%rip),%rdx
1879d(4): cmove %rdx,%rax
187a1(4): add $0x8,%rsp
187a5(1): ret near (%rsp)
187a6(a): nop 0x0(%rax,%rax,1)
187b0(7): lea 0x47a1(%rip),%rax
187b7(4): add $0x8,%rsp
187bb(1): ret near (%rsp)

"mb_width_aux" :
187c0(1): push %rbx
187c1(2): mov %edi,%ebx
187c3(5): call 0xfffe973d(%rip)
187c8(2): test %eax,%eax
187ca(2): js 0x6(%rip)
187cc(1): pop %rbx
187cd(1): ret near (%rsp)
187ce(2): nop 
187d0(2): mov %ebx,%edi
187d2(5): call 0xfffe953e(%rip)
187d7(2): test %eax,%eax
187d9(3): setz %al
187dc(3): movzx %al,%eax
187df(1): pop %rbx
187e0(1): ret near (%rsp)

"mb_copy" :
187f0(1): push %rbp
187f1(1): push %rbx
187f2(3): mov %rsi,%rbx
187f5(4): lea 0x18(%rbx),%rax
187f9(3): mov %rdi,%rbp
187fc(4): sub $0x8,%rsp
18800(3): mov (%rsi),%rsi
18803(4): mov 0x8(%rbx),%rdx
18807(3): cmp %rax,%rsi
1880a(2): jz 0x26(%rip)
1880c(3): mov %rsi,(%rdi)
1880f(4): movzx 0x10(%rbx),%eax
18813(4): mov %rdx,0x8(%rbp)
18817(2): test %al,%al
18819(3): mov %al,0x10(%rbp)
1881c(2): jz 0x8(%rip)
1881e(3): mov 0x14(%rbx),%eax
18821(3): mov %eax,0x14(%rbp)
18824(4): add $0x8,%rsp
18828(1): pop %rbx
18829(1): pop %rbp
1882a(1): ret near (%rsp)
1882b(5): nop 0x0(%rax,%rax,1)
18830(4): lea 0x18(%rdi),%rcx
18834(3): mov %rcx,%rdi
18837(5): call 0xfffe96a9(%rip)
1883c(4): mov 0x8(%rbx),%rdx
18840(4): mov %rax,0x0(%rbp)
18844(2): jmp 0xffffffcb(%rip)

"is_basic" :
18850(2): mov %edi,%eax
18852(7): lea 0x4707(%rip),%rdx
18859(2): mov %edi,%ecx
1885b(3): shr $0x5,%al
1885e(3): and $0x1f,%ecx
18861(3): and $0x7,%eax
18864(3): mov 0x0(%rdx,%rax,4),%eax
18867(2): shr %cl,%eax
18869(3): and $0x1,%eax
1886c(1): ret near (%rsp)

"knuth_morris_pratt" :
18870(1): push %rbp
18871(3): mov %rsp,%rbp
18874(2): push %r12
18876(1): push %rbx
18877(3): mov %rdx,%r12
1887a(5): mov $0x8,%edx
1887f(3): mov %rdi,%rbx
18882(4): sub $0x20,%rsp
18886(9): mov $0x28,%rax
1888f(4): mov %rax,0xffffffe8(%rbp)
18893(2): xor %eax,%eax
18895(3): mov %rdx,%rax
18898(3): mul %rax,%r12,%rdx
1889b(6): jo 0x172(%rip)
188a1(2): xor %edi,%edi
188a3(3): test %rax,%rax
188a6(6): js 0xda(%rip)
188ac(3): test %rdi,%rdi
188af(6): jnz 0xd1(%rip)
188b5(8): lea 0x0(,%r12,8),%rdi
188bd(7): cmp $0xfa0,%rdi
188c4(6): jnbe 0x124(%rip)
188ca(4): add $0x3d,%rdi
188ce(4): and $0xfffffff0,%rdi
188d2(3): sub %rdi,%rsp
188d5(5): lea 0xf(%rsp),%rdi
188da(4): and $0xfffffff0,%rdi
188de(4): add $0x1f,%rdi
188e2(4): and $0xffffffe0,%rdi
188e6(3): test %rdi,%rdi
188e9(6): jz 0x97(%rip)
188ef(4): cmp $0x2,%r12
188f3(8): mov $0x1,0x8(%rdi)
188fb(2): jbe 0x46(%rip)
188fd(2): xor %edx,%edx
188ff(6): mov $0x2,%r8d
18905(3): nop (%rax)
18908(6): movzx 0xffffffff(%rsi,%r8,1),%eax
1890e(3): cmp 0x0(%rsi,%rdx,1),%al
18911(2): jnz 0x1c(%rip)
18913(5): jmp 0xbd(%rip)
18918(8): nop 0x0(%rax,%rax,1)
18920(4): sub 0x0(%rdi,%rdx,8),%rdx
18924(3): cmp %al,0x0(%rsi,%rdx,1)
18927(6): jz 0xa9(%rip)
1892d(3): test %rdx,%rdx
18930(2): jnz 0xfffffff0(%rip)
18932(4): mov %r8,0x0(%rdi,%r8,8)
18936(2): xor %edx,%edx
18938(4): add $0x1,%r8
1893c(3): cmp %r8,%r12
1893f(2): jnz 0xffffffc9(%rip)
18941(7): mov $0x0,(%rcx)
18948(3): movzx (%rbx),%edx
1894b(3): mov %rbx,%r8
1894e(2): xor %eax,%eax
18950(2): test %dl,%dl
18952(2): jz 0x1a(%rip)
18954(3): cmp %dl,0x0(%rsi,%rax,1)
18957(2): jz 0x49(%rip)
18959(3): test %rax,%rax
1895c(2): jz 0x64(%rip)
1895e(4): mov 0x0(%rdi,%rax,8),%r9
18962(3): add %r9,%rbx
18965(3): sub %r9,%rax
18968(2): test %dl,%dl
1896a(2): jnz 0xffffffea(%rip)
1896c(5): call 0x2284(%rip)
18971(5): mov $0x1,%eax
18976(2): jmp 0xc(%rip)
18978(8): nop 0x0(%rax,%rax,1)
18980(2): xor %eax,%eax
18982(4): mov 0xffffffe8(%rbp),%rcx
18986(9): xor $0x28,%rcx
1898f(6): jnz 0x88(%rip)
18995(4): lea 0xfffffff0(%rbp),%rsp
18999(1): pop %rbx
1899a(2): pop %r12
1899c(1): pop %rbp
1899d(1): ret near (%rsp)
1899e(2): nop 
189a0(4): add $0x1,%rax
189a4(4): lea 0x1(%r8),%r9
189a8(3): cmp %rax,%r12
189ab(2): jz 0x5a(%rip)
189ad(5): movzx 0x1(%r8),%edx
189b2(3): mov %r9,%r8
189b5(2): jmp 0xffffff9b(%rip)
189b7(9): nop 0x0(%rax,%rax,1)
189c0(5): movzx 0x1(%r8),%edx
189c5(4): add $0x1,%rbx
189c9(4): add $0x1,%r8
189cd(2): jmp 0xffffff83(%rip)
189cf(1): nop 
189d0(4): add $0x1,%rdx
189d4(3): mov %r8,%rax
189d7(3): sub %rdx,%rax
189da(4): mov %rax,0x0(%rdi,%r8,8)
189de(5): jmp 0xffffff5a(%rip)
189e3(5): nop 0x0(%rax,%rax,1)
189e8(4): mov %rcx,0xffffffd0(%rbp)
189ec(4): mov %rsi,0xffffffd8(%rbp)
189f0(5): call 0x21c0(%rip)
189f5(4): mov 0xffffffd0(%rbp),%rcx
189f9(3): mov %rax,%rdi
189fc(4): mov 0xffffffd8(%rbp),%rsi
18a00(5): jmp 0xfffffee6(%rip)
18a05(3): mov %rbx,(%rcx)
18a08(5): jmp 0xffffff64(%rip)
18a0d(5): mov $0x1,%edi
18a12(5): jmp 0xfffffe91(%rip)
18a17(5): call 0xfffe9399(%rip)

"knuth_morris_pratt_multibyte" :
18a20(1): push %rbp
18a21(3): mov %rsp,%rbp
18a24(2): push %r15
18a26(2): push %r14
18a28(2): push %r13
18a2a(2): push %r12
18a2c(1): push %rbx
18a2d(3): mov %rsi,%rbx
18a30(7): sub $0x108,%rsp
18a37(7): mov %rdi,0xfffffee8(%rbp)
18a3e(3): mov %rsi,%rdi
18a41(7): mov %rdx,0xfffffed8(%rbp)
18a48(9): mov $0x28,%rax
18a51(4): mov %rax,0xffffffc8(%rbp)
18a55(2): xor %eax,%eax
18a57(5): call 0x21c9(%rip)
18a5c(5): mov $0x38,%edx
18a61(3): mov %rax,%rsi
18a64(7): mov %rax,0xfffffef8(%rbp)
18a6b(3): mov %rdx,%rax
18a6e(3): mul %rax,%rsi,%rdx
18a71(6): jo 0xa16(%rip)
18a77(2): xor %ecx,%ecx
18a79(3): test %rax,%rax
18a7c(6): js 0x424(%rip)
18a82(3): test %rcx,%rcx
18a85(6): jnz 0x41b(%rip)
18a8b(7): mov 0xfffffef8(%rbp),%rax
18a92(8): lea 0x0(,%rax,8),%rdi
18a9a(3): sub %rax,%rdi
18a9d(4): shl/sal $0x3,%rdi
18aa1(7): cmp $0xfa0,%rdi
18aa8(6): jnbe 0x93c(%rip)
18aae(4): add $0x3d,%rdi
18ab2(4): and $0xfffffff0,%rdi
18ab6(3): sub %rdi,%rsp
18ab9(5): lea 0xf(%rsp),%r12
18abe(4): and $0xfffffff0,%r12
18ac2(4): add $0x1f,%r12
18ac6(4): and $0xffffffe0,%r12
18aca(3): test %r12,%r12
18acd(6): jz 0x3d3(%rip)
18ad3(7): mov 0xfffffef8(%rbp),%rax
18ada(7): mov %rbx,0xffffff10(%rbp)
18ae1(7): lea 0xffffff00(%rbp),%rbx
18ae8(7): mov $0x0,0xffffff00(%rbp)
18aef(b): mov $0x0,0xffffff04(%rbp)
18afa(3): mov %r12,%r15
18afd(7): mov $0x0,0xffffff0c(%rbp)
18b04(6): mov $0x1,%r14d
18b0a(4): lea 0x0(%rax,%rax,2),%r13
18b0e(4): lea 0x4(%rbx),%rax
18b12(4): shl/sal $0x4,%r13
18b16(7): mov %rax,0xfffffee0(%rbp)
18b1d(3): add %r12,%r13
18b20(5): jmp 0xb1(%rip)
18b25(3): nop (%rax)
18b28(7): mov 0xffffff10(%rbp),%rcx
18b2f(7): lea 0x442a(%rip),%rsi
18b36(3): movzx (%rcx),%edx
18b39(2): mov %edx,%eax
18b3b(3): shr $0x5,%al
18b3e(3): and $0x7,%eax
18b41(3): mov 0x0(%rsi,%rax,4),%eax
18b44(3): bt %edx,%eax
18b47(6): jnb 0x381(%rip)
18b4d(b): mov $0x1,0xffffff18(%rbp)
18b58(3): movsx (%rcx),%eax
18b5b(7): mov %r14b,0xffffff20(%rbp)
18b62(7): mov %r14b,0xffffff0c(%rbp)
18b69(6): mov %eax,0xffffff24(%rbp)
18b6f(7): mov 0xffffff24(%rbp),%r8d
18b76(3): test %r8d,%r8d
18b79(6): jz 0x127(%rip)
18b7f(5): mov $0x1,%eax
18b84(7): mov 0xffffff10(%rbp),%rsi
18b8b(4): lea 0x28(%rbx),%rcx
18b8f(7): mov 0xffffff18(%rbp),%rdx
18b96(3): cmp %rcx,%rsi
18b99(6): jz 0x357(%rip)
18b9f(3): mov %rsi,(%r15)
18ba2(2): test %al,%al
18ba4(4): mov %rdx,0x8(%r15)
18ba8(4): mov %al,0x10(%r15)
18bac(2): jz 0xc(%rip)
18bae(6): mov 0xffffff24(%rbp),%eax
18bb4(4): mov %eax,0x14(%r15)
18bb8(7): mov 0xffffff18(%rbp),%rax
18bbf(7): add %rax,0xffffff10(%rbp)
18bc6(4): add $0x30,%r15
18bca(7): mov $0x0,0xffffff0c(%rbp)
18bd1(7): cmp $0x0,0xffffff00(%rbp)
18bd8(6): jz 0xffffff50(%rip)
18bde(5): call 0xfffe91b2(%rip)
18be3(7): mov 0xffffff10(%rbp),%r9
18bea(3): mov %rax,%rsi
18bed(3): mov %r9,%rdi
18bf0(7): mov %r9,0xfffffef0(%rbp)
18bf7(5): call 0xffff0039(%rip)
18bfc(7): mov 0xfffffef0(%rbp),%r9
18c03(4): lea 0x4(%rbx),%rcx
18c07(4): lea 0x24(%rbx),%rdi
18c0b(3): mov %rax,%rdx
18c0e(3): mov %r9,%rsi
18c11(5): call 0xffff179f(%rip)
18c16(4): cmp $0xffffffff,%rax
18c1a(7): mov %rax,0xffffff18(%rbp)
18c21(6): jz 0x2f7(%rip)
18c27(4): cmp $0xfffffffe,%rax
18c2b(6): jz 0x76e(%rip)
18c31(3): test %rax,%rax
18c34(2): jnz 0x2d(%rip)
18c36(7): mov 0xffffff10(%rbp),%rax
18c3d(b): mov $0x1,0xffffff18(%rbp)
18c48(3): cmp $0x0,(%rax)
18c4b(6): jnz 0x818(%rip)
18c51(7): mov 0xffffff24(%rbp),%r9d
18c58(3): test %r9d,%r9d
18c5b(6): jnz 0x827(%rip)
18c61(4): lea 0x4(%rbx),%rdi
18c65(7): mov %r14b,0xffffff20(%rbp)
18c6c(5): call 0xfffe9444(%rip)
18c71(2): test %eax,%eax
18c73(6): jz 0x74e(%rip)
18c79(7): mov 0xffffff24(%rbp),%r8d
18c80(7): mov $0x0,0xffffff00(%rbp)
18c87(7): mov %r14b,0xffffff0c(%rbp)
18c8e(3): test %r8d,%r8d
18c91(6): jnz 0xfffffeee(%rip)
18c97(9): nop 0x0(%rax,%rax,1)
18ca0(8): cmp $0x2,0xfffffef8(%rbp)
18ca8(8): mov $0x1,0x8(%r13)
18cb0(6): jbe 0x96(%rip)
18cb6(5): lea 0x30(%r12),%r14
18cbb(2): xor %ebx,%ebx
18cbd(6): mov $0x2,%r15d
18cc3(5): nop 0x0(%rax,%rax,1)
18cc8(5): movzx 0x10(%r14),%ecx
18ccd(2): jmp 0x20(%rip)
18ccf(1): nop 
18cd0(4): cmp $0x0,0x10(%rax)
18cd4(2): jz 0x28(%rip)
18cd6(3): mov 0x14(%rax),%eax
18cd9(4): cmp %eax,0x14(%r14)
18cdd(2): jz 0x45(%rip)
18cdf(3): test %rbx,%rbx
18ce2(6): jz 0x5b6(%rip)
18ce8(5): sub 0x0(%r13,%rbx,8),%rbx
18ced(4): lea 0x0(%rbx,%rbx,2),%rax
18cf1(4): shl/sal $0x4,%rax
18cf5(3): add %r12,%rax
18cf8(2): test %cl,%cl
18cfa(2): jnz 0xffffffd6(%rip)
18cfc(4): mov 0x8(%r14),%rdx
18d00(4): cmp 0x8(%rax),%rdx
18d04(2): jnz 0xffffffdb(%rip)
18d06(3): mov (%rax),%rsi
18d09(3): mov (%r14),%rdi
18d0c(6): mov %cl,0xfffffef0(%rbp)
18d12(5): call 0xfffe917e(%rip)
18d17(2): test %eax,%eax
18d19(7): movzx 0xfffffef0(%rbp),%ecx
18d20(2): jnz 0xffffffbf(%rip)
18d22(4): add $0x1,%rbx
18d26(3): mov %r15,%rax
18d29(3): sub %rbx,%rax
18d2c(5): mov %rax,0x0(%r13,%r15,8)
18d31(4): add $0x1,%r15
18d35(4): add $0x30,%r14
18d39(7): cmp %r15,0xfffffef8(%rbp)
18d40(6): jnz 0xffffff88(%rip)
18d46(7): mov 0xfffffed8(%rbp),%rax
18d4d(4): lea 0xffffff80(%rbp),%rbx
18d51(7): mov $0x0,0xffffff40(%rbp)
18d58(b): mov $0x0,0xffffff44(%rbp)
18d63(7): mov $0x0,0xffffff4c(%rbp)
18d6a(3): xor %r15d,%r15d
18d6d(4): mov $0x0,0xffffff80(%rbp)
18d71(8): mov $0x0,0xffffff84(%rbp)
18d79(7): mov $0x0,(%rax)
18d80(7): mov 0xfffffee8(%rbp),%rax
18d87(7): mov %rbx,0xfffffee8(%rbp)
18d8e(4): add $0x4,%rbx
18d92(4): mov $0x0,0xffffff8c(%rbp)
18d96(7): mov %rbx,0xfffffee0(%rbp)
18d9d(7): lea 0xffffff40(%rbp),%rbx
18da4(7): mov %rax,0xffffff50(%rbp)
18dab(4): mov %rax,0xffffff90(%rbp)
18daf(2): xor %eax,%eax
18db1(7): nop 0x0(%rax)
18db8(2): test %al,%al
18dba(6): jz 0x1e2(%rip)
18dc0(4): cmp $0x0,0xffffffa0(%rbp)
18dc4(6): jnz 0x192(%rip)
18dca(4): lea 0x0(%r15,%r15,2),%rax
18dce(4): shl/sal $0x4,%rax
18dd2(3): add %r12,%rax
18dd5(4): mov 0x8(%rax),%rdx
18dd9(4): cmp 0xffffff98(%rbp),%rdx
18ddd(6): jz 0x393(%rip)
18de3(3): test %r15,%r15
18de6(6): jz 0x3da(%rip)
18dec(5): mov 0x0(%r13,%r15,8),%r14
18df1(3): mov %r15,%rax
18df4(3): sub %r14,%rax
18df7(3): test %r14,%r14
18dfa(7): mov %rax,0xfffffef0(%rbp)
18e01(4): movzx 0xffffff8c(%rbp),%eax
18e05(2): jz 0xffffffb3(%rip)
18e07(7): cmp $0x0,0xffffff4c(%rbp)
18e0e(2): jz 0x2a(%rip)
18e10(7): cmp $0x0,0xffffff60(%rbp)
18e17(2): jnz 0x75(%rip)
18e19(7): mov 0xffffff58(%rbp),%rax
18e20(7): add %rax,0xffffff50(%rbp)
18e27(4): sub $0x1,%r14
18e2b(7): mov $0x0,0xffffff4c(%rbp)
18e32(6): jz 0x426(%rip)
18e38(7): cmp $0x0,0xffffff40(%rbp)
18e3f(6): jnz 0x271(%rip)
18e45(7): mov 0xffffff50(%rbp),%rcx
18e4c(7): lea 0x410d(%rip),%rsi
18e53(3): movzx (%rcx),%edx
18e56(2): mov %edx,%eax
18e58(3): shr $0x5,%al
18e5b(3): and $0x7,%eax
18e5e(3): mov 0x0(%rsi,%rax,4),%eax
18e61(3): bt %edx,%eax
18e64(6): jnb 0x234(%rip)
18e6a(b): mov $0x1,0xffffff58(%rbp)
18e75(3): movsx (%rcx),%eax
18e78(7): mov $0x1,0xffffff60(%rbp)
18e7f(7): mov $0x1,0xffffff4c(%rbp)
18e86(6): mov %eax,0xffffff64(%rbp)
18e8c(6): mov 0xffffff64(%rbp),%esi
18e92(2): test %esi,%esi
18e94(2): jnz 0xffffff85(%rip)
18e96(5): call 0xfffe8dda(%rip)
18e9b(5): nop 0x0(%rax,%rax,1)
18ea0(2): xor %eax,%eax
18ea2(4): mov 0xffffffc8(%rbp),%rbx
18ea6(9): xor $0x28,%rbx
18eaf(6): jnz 0x5af(%rip)
18eb5(4): lea 0xffffffd8(%rbp),%rsp
18eb9(1): pop %rbx
18eba(2): pop %r12
18ebc(2): pop %r13
18ebe(2): pop %r14
18ec0(2): pop %r15
18ec2(1): pop %rbp
18ec3(1): ret near (%rsp)
18ec4(4): nop 0x0(%rax)
18ec8(7): mov 0xfffffee0(%rbp),%rdi
18ecf(5): call 0xfffe91e1(%rip)
18ed4(2): test %eax,%eax
18ed6(6): jz 0x569(%rip)
18edc(7): mov %r14b,0xffffff00(%rbp)
18ee3(5): jmp 0xfffffcfb(%rip)
18ee8(8): nop 0x0(%rax,%rax,1)
18ef0(4): lea 0x18(%r15),%rcx
18ef4(3): mov %rcx,%rdi
18ef7(5): call 0xfffe8fe9(%rip)
18efc(7): mov 0xffffff18(%rbp),%rdx
18f03(3): mov %rax,(%r15)
18f06(7): movzx 0xffffff20(%rbp),%eax
18f0d(5): jmp 0xfffffc95(%rip)
18f12(6): nop 0x0(%rax,%rax,1)
18f18(b): mov $0x1,0xffffff18(%rbp)
18f23(7): mov $0x0,0xffffff20(%rbp)
18f2a(2): xor %eax,%eax
18f2c(7): mov %r14b,0xffffff0c(%rbp)
18f33(5): jmp 0xfffffc51(%rip)
18f38(8): nop 0x0(%rax,%rax,1)
18f40(8): mov $0x1,0xffffff98(%rbp)
18f48(3): movsx (%rcx),%eax
18f4b(4): mov $0x1,0xffffffa0(%rbp)
18f4f(4): mov $0x1,0xffffff8c(%rbp)
18f53(3): mov %eax,0xffffffa4(%rbp)
18f56(3): mov 0xffffffa4(%rbp),%edx
18f59(2): test %edx,%edx
18f5b(6): jz 0x125(%rip)
18f61(4): lea 0x0(%r15,%r15,2),%rax
18f65(4): shl/sal $0x4,%rax
18f69(3): add %r12,%rax
18f6c(4): cmp $0x0,0x10(%rax)
18f70(6): jz 0xfffffe65(%rip)
18f76(3): cmp %edx,0x14(%rax)
18f79(6): jnz 0xfffffe6a(%rip)
18f7f(4): add $0x1,%r15
18f83(4): mov 0xffffff98(%rbp),%rax
18f87(4): add %rax,0xffffff90(%rbp)
18f8b(7): cmp %r15,0xfffffef8(%rbp)
18f92(4): mov $0x0,0xffffff8c(%rbp)
18f96(6): jz 0x486(%rip)
18f9c(4): cmp $0x0,0xffffff80(%rbp)
18fa0(2): jnz 0x38(%rip)
18fa2(4): mov 0xffffff90(%rbp),%rcx
18fa6(7): lea 0x3fb3(%rip),%rsi
18fad(3): movzx (%rcx),%edx
18fb0(2): mov %edx,%eax
18fb2(3): shr $0x5,%al
18fb5(3): and $0x7,%eax
18fb8(3): mov 0x0(%rsi,%rax,4),%eax
18fbb(3): bt %edx,%eax
18fbe(2): jb 0xffffff82(%rip)
18fc0(7): mov 0xfffffee0(%rbp),%rdi
18fc7(5): call 0xfffe90e9(%rip)
18fcc(2): test %eax,%eax
18fce(6): jz 0x471(%rip)
18fd4(4): mov $0x1,0xffffff80(%rbp)
18fd8(5): call 0xfffe8db8(%rip)
18fdd(4): mov 0xffffff90(%rbp),%r8
18fe1(3): mov %rax,%rsi
18fe4(3): mov %r8,%rdi
18fe7(7): mov %r8,0xfffffef0(%rbp)
18fee(5): call 0xfffefc42(%rip)
18ff3(7): mov 0xfffffee8(%rbp),%rsi
18ffa(7): mov 0xfffffef0(%rbp),%r8
19001(3): mov %rax,%rdx
19004(4): lea 0x4(%rsi),%rcx
19008(4): lea 0x24(%rsi),%rdi
1900c(3): mov %r8,%rsi
1900f(5): call 0xffff13a1(%rip)
19014(4): cmp $0xffffffff,%rax
19018(4): mov %rax,0xffffff98(%rbp)
1901c(6): jz 0x254(%rip)
19022(4): cmp $0xfffffffe,%rax
19026(6): jz 0x34a(%rip)
1902c(3): test %rax,%rax
1902f(2): jnz 0x22(%rip)
19031(4): mov 0xffffff90(%rbp),%rax
19035(8): mov $0x1,0xffffff98(%rbp)
1903d(3): cmp $0x0,(%rax)
19040(6): jnz 0x423(%rip)
19046(3): mov 0xffffffa4(%rbp),%eax
19049(2): test %eax,%eax
1904b(6): jnz 0x437(%rip)
19051(7): mov 0xfffffee8(%rbp),%rax
19058(4): mov $0x1,0xffffffa0(%rbp)
1905c(4): lea 0x4(%rax),%rdi
19060(5): call 0xfffe9050(%rip)
19065(2): test %eax,%eax
19067(6): jz 0x329(%rip)
1906d(3): mov 0xffffffa4(%rbp),%edx
19070(4): mov $0x0,0xffffff80(%rbp)
19074(4): mov $0x1,0xffffff8c(%rbp)
19078(2): test %edx,%edx
1907a(6): jnz 0xfffffee7(%rip)
19080(3): mov %r12,%rdi
19083(5): call 0x1b6d(%rip)
19088(5): mov $0x1,%eax
1908d(5): jmp 0xfffffe15(%rip)
19092(6): nop 0x0(%rax,%rax,1)
19098(4): lea 0x4(%rbx),%rdi
1909c(5): call 0xfffe9014(%rip)
190a1(2): test %eax,%eax
190a3(6): jz 0x39c(%rip)
190a9(7): mov $0x1,0xffffff40(%rbp)
190b0(5): call 0xfffe8ce0(%rip)
190b5(7): mov 0xffffff50(%rbp),%r15
190bc(3): mov %rax,%rsi
190bf(3): mov %r15,%rdi
190c2(5): call 0xfffefb6e(%rip)
190c7(4): lea 0x4(%rbx),%rcx
190cb(4): lea 0x24(%rbx),%rdi
190cf(3): mov %rax,%rdx
190d2(3): mov %r15,%rsi
190d5(5): call 0xffff12db(%rip)
190da(4): cmp $0xffffffff,%rax
190de(7): mov %rax,0xffffff58(%rbp)
190e5(2): jz 0x6b(%rip)
190e7(4): cmp $0xfffffffe,%rax
190eb(6): jz 0xa5(%rip)
190f1(3): test %rax,%rax
190f4(2): jnz 0x2b(%rip)
190f6(7): mov 0xffffff50(%rbp),%rax
190fd(b): mov $0x1,0xffffff58(%rbp)
19108(3): cmp $0x0,(%rax)
1910b(6): jnz 0x358(%rip)
19111(6): mov 0xffffff64(%rbp),%edi
19117(2): test %edi,%edi
19119(6): jnz 0x369(%rip)
1911f(4): lea 0x4(%rbx),%rdi
19123(7): mov $0x1,0xffffff60(%rbp)
1912a(5): call 0xfffe8f86(%rip)
1912f(2): test %eax,%eax
19131(2): jz 0x7f(%rip)
19133(7): mov $0x0,0xffffff40(%rbp)
1913a(7): mov $0x1,0xffffff4c(%rbp)
19141(5): jmp 0xfffffd4b(%rip)
19146(a): nop 0x0(%rax,%rax,1)
19150(b): mov $0x1,0xffffff58(%rbp)
1915b(7): mov $0x0,0xffffff60(%rbp)
19162(5): jmp 0xfffffcb7(%rip)
19167(9): nop 0x0(%rax,%rax,1)
19170(4): mov 0xffffff90(%rbp),%rsi
19174(3): mov (%rax),%rdi
19177(5): call 0xfffe8d19(%rip)
1917c(2): test %eax,%eax
1917e(6): jnz 0xfffffc65(%rip)
19184(5): jmp 0xfffffdfb(%rip)
19189(7): nop 0x0(%rax)
19190(7): mov 0xffffff50(%rbp),%rdi
19197(5): call 0xfffe8c09(%rip)
1919c(7): mov $0x0,0xffffff60(%rbp)
191a3(7): mov %rax,0xffffff58(%rbp)
191aa(5): jmp 0xfffffc6f(%rip)
191af(1): nop 
191b0(7): mov $0x1,0xffffff4c(%rbp)
191b7(5): jmp 0xfffffcd5(%rip)
191bc(4): nop 0x0(%rax)
191c0(7): cmp $0x0,0xffffff4c(%rbp)
191c7(6): jnz 0xc1(%rip)
191cd(7): cmp $0x0,0xffffff40(%rbp)
191d4(6): jnz 0xec(%rip)
191da(7): mov 0xffffff50(%rbp),%rcx
191e1(7): lea 0x3d78(%rip),%rsi
191e8(3): movzx (%rcx),%edx
191eb(2): mov %edx,%eax
191ed(3): shr $0x5,%al
191f0(3): and $0x7,%eax
191f3(3): mov 0x0(%rsi,%rax,4),%eax
191f6(3): bt %edx,%eax
191f9(6): jnb 0xaf(%rip)
191ff(b): mov $0x1,0xffffff58(%rbp)
1920a(3): movsx (%rcx),%eax
1920d(7): mov $0x1,0xffffff60(%rbp)
19214(7): mov $0x1,0xffffff4c(%rbp)
1921b(6): mov %eax,0xffffff64(%rbp)
19221(6): mov 0xffffff64(%rbp),%edx
19227(2): test %edx,%edx
19229(6): jz 0xfffffc6d(%rip)
1922f(7): mov 0xffffff58(%rbp),%rax
19236(7): mov $0x0,0xffffff4c(%rbp)
1923d(7): add %rax,0xffffff50(%rbp)
19244(4): mov $0x0,0xffffff8c(%rbp)
19248(4): mov 0xffffff98(%rbp),%rax
1924c(4): add %rax,0xffffff90(%rbp)
19250(5): jmp 0xfffffd4c(%rip)
19255(3): nop (%rax)
19258(4): movzx 0xffffff8c(%rbp),%eax
1925c(7): mov 0xfffffef0(%rbp),%r15
19263(5): jmp 0xfffffb55(%rip)
19268(8): nop 0x0(%rax,%rax,1)
19270(8): mov $0x1,0xffffff98(%rbp)
19278(4): mov $0x0,0xffffffa0(%rbp)
1927c(4): mov $0x1,0xffffff8c(%rbp)
19280(5): jmp 0xfffffb4a(%rip)
19285(3): nop (%rax)
19288(7): cmp $0x0,0xffffff60(%rbp)
1928f(2): jz 0xffffffa0(%rip)
19291(2): jmp 0xffffff90(%rip)
19293(5): nop 0x0(%rax,%rax,1)
19298(5): mov %r15,0x0(%r13,%r15,8)
1929d(5): jmp 0xfffffa94(%rip)
192a2(6): nop 0x0(%rax,%rax,1)
192a8(4): lea 0x4(%rbx),%rdi
192ac(5): call 0xfffe8e04(%rip)
192b1(2): test %eax,%eax
192b3(6): jz 0x18c(%rip)
192b9(7): mov $0x1,0xffffff40(%rbp)
192c0(5): call 0xfffe8ad0(%rip)
192c5(7): mov 0xffffff50(%rbp),%r8
192cc(3): mov %rax,%rsi
192cf(3): mov %r8,%rdi
192d2(7): mov %r8,0xfffffef0(%rbp)
192d9(5): call 0xfffef957(%rip)
192de(7): mov 0xfffffef0(%rbp),%r8
192e5(4): lea 0x4(%rbx),%rcx
192e9(4): lea 0x24(%rbx),%rdi
192ed(3): mov %rax,%rdx
192f0(3): mov %r8,%rsi
192f3(5): call 0xffff10bd(%rip)
192f8(4): cmp $0xffffffff,%rax
192fc(7): mov %rax,0xffffff58(%rbp)
19303(6): jz 0xca(%rip)
19309(4): cmp $0xfffffffe,%rax
1930d(6): jz 0xf0(%rip)
19313(3): test %rax,%rax
19316(2): jnz 0x2b(%rip)
19318(7): mov 0xffffff50(%rbp),%rax
1931f(b): mov $0x1,0xffffff58(%rbp)
1932a(3): cmp $0x0,(%rax)
1932d(6): jnz 0x136(%rip)
19333(6): mov 0xffffff64(%rbp),%ecx
19339(2): test %ecx,%ecx
1933b(6): jnz 0x147(%rip)
19341(4): lea 0x4(%rbx),%rdi
19345(7): mov $0x1,0xffffff60(%rbp)
1934c(5): call 0xfffe8d64(%rip)
19351(2): test %eax,%eax
19353(6): jz 0x9e(%rip)
19359(7): mov $0x0,0xffffff40(%rbp)
19360(7): mov $0x1,0xffffff4c(%rbp)
19367(5): jmp 0xfffffeba(%rip)
1936c(4): nop 0x0(%rax)
19370(4): mov 0xffffff90(%rbp),%rdi
19374(5): call 0xfffe8a2c(%rip)
19379(4): mov $0x0,0xffffffa0(%rbp)
1937d(4): mov %rax,0xffffff98(%rbp)
19381(4): mov $0x1,0xffffff8c(%rbp)
19385(5): jmp 0xfffffa45(%rip)
1938a(6): nop 0x0(%rax,%rax,1)
19390(4): mov $0x1,0xffffff8c(%rbp)
19394(5): jmp 0xfffffbc2(%rip)
19399(7): mov 0xffffff10(%rbp),%rdi
193a0(5): call 0xfffe8a00(%rip)
193a5(7): mov $0x0,0xffffff20(%rbp)
193ac(7): mov %rax,0xffffff18(%rbp)
193b3(2): xor %eax,%eax
193b5(7): mov %r14b,0xffffff0c(%rbp)
193bc(5): jmp 0xfffff7c8(%rip)
193c1(7): mov %r14b,0xffffff0c(%rbp)
193c8(5): jmp 0xfffff7a7(%rip)
193cd(b): mov $0x1,0xffffff58(%rbp)
193d8(7): mov $0x0,0xffffff60(%rbp)
193df(5): jmp 0xfffffe50(%rip)
193e4(5): call 0x17cc(%rip)
193e9(3): mov %rax,%r12
193ec(5): jmp 0xfffff6de(%rip)
193f1(7): mov $0x1,0xffffff4c(%rbp)
193f8(5): jmp 0xfffffe29(%rip)
193fd(7): mov 0xffffff50(%rbp),%rdi
19404(5): call 0xfffe899c(%rip)
19409(7): mov $0x0,0xffffff60(%rbp)
19410(7): mov %rax,0xffffff58(%rbp)
19417(5): jmp 0xfffffe18(%rip)
1941c(7): mov 0xffffff50(%rbp),%rax
19423(7): mov 0xfffffed8(%rbp),%rbx
1942a(3): mov %r12,%rdi
1942d(3): mov %rax,(%rbx)
19430(5): call 0x17c0(%rip)
19435(5): mov $0x1,%eax
1943a(5): jmp 0xfffffa68(%rip)
1943f(7): lea 0x3b3a(%rip),%rcx
19446(7): lea 0x284b(%rip),%rsi
1944d(7): lea 0x2876(%rip),%rdi
19454(5): mov $0x96,%edx
19459(5): call 0xfffe89d7(%rip)
1945e(5): call 0xfffe8952(%rip)
19463(7): lea 0x3b16(%rip),%rcx
1946a(7): lea 0x2827(%rip),%rsi
19471(7): lea 0x2869(%rip),%rdi
19478(5): mov $0xb2,%edx
1947d(5): call 0xfffe89b3(%rip)
19482(5): call 0xfffe8ce4(%rip)
19487(5): mov $0x1,%ecx
1948c(5): jmp 0xfffff5ed(%rip)

"mbsstr" :
194a0(2): push %r15
194a2(2): push %r14
194a4(2): push %r13
194a6(2): push %r12
194a8(3): mov %rdi,%r12
194ab(1): push %rbp
194ac(1): push %rbx
194ad(3): mov %rsi,%rbx
194b0(7): sub $0x198,%rsp
194b7(9): mov $0x28,%rax
194c0(8): mov %rax,0x188(%rsp)
194c8(2): xor %eax,%eax
194ca(5): mov %rsi,0x8(%rsp)
194cf(5): call 0xfffe88c1(%rip)
194d4(4): cmp $0x1,%rax
194d8(6): jnbe 0xe8(%rip)
194de(5): mov 0x8(%rsp),%rax
194e3(4): movzx (%rax),%r15d
194e7(3): mov %r12,%rax
194ea(3): test %r15b,%r15b
194ed(6): jz 0x139(%rip)
194f3(5): movzx (%r12),%esi
194f8(3): test %sil,%sil
194fb(6): jz 0x7a5(%rip)
19501(5): lea 0x38(%rsp),%rbx
19506(5): mov 0x8(%rsp),%rbp
1950b(3): xor %r13d,%r13d
1950e(2): xor %edx,%edx
19510(3): xor %r8d,%r8d
19513(5): mov $0x1,%eax
19518(5): mov %rbx,0x10(%rsp)
1951d(3): nop (%rax)
19520(4): add $0x1,%r13
19524(3): cmp %r15b,%sil
19527(4): lea 0x1(%rdx),%rbx
1952b(5): lea 0x1(%r12),%r14
19530(6): jz 0x8e0(%rip)
19536(6): cmp $0x0,0x1(%r12)
1953c(6): jz 0x764(%rip)
19542(4): cmp $0x9,%r13
19546(3): setnbe %dl
19549(2): and %al,%dl
1954b(6): jz 0x107(%rip)
19551(5): lea 0x0(%r13,%r13,4),%rax
19556(3): cmp %rbx,%rax
19559(6): jnbe 0xf7(%rip)
1955f(3): test %rbp,%rbp
19562(3): mov %dl,(%rsp)
19565(2): jz 0x24(%rip)
19567(3): mov %rbx,%rsi
1956a(3): mov %rbp,%rdi
1956d(3): sub %r8,%rsi
19570(5): call 0xfffe88f0(%rip)
19575(3): add %rax,%rbp
19578(3): mov %rbx,%r8
1957b(4): movzx (%rsp),%edx
1957f(4): cmp $0x0,0x0(%rbp)
19583(6): jnz 0xcd(%rip)
19589(5): mov 0x8(%rsp),%rbp
1958e(4): mov %r8,(%rsp)
19592(3): mov %rbp,%rdi
19595(5): call 0xfffe880b(%rip)
1959a(5): mov 0x10(%rsp),%rcx
1959f(3): mov %rax,%rdx
195a2(3): mov %rbp,%rsi
195a5(3): mov %r14,%rdi
195a8(5): call 0xfffff2c8(%rip)
195ad(2): test %al,%al
195af(4): mov (%rsp),%r8
195b3(6): jnz 0xeec(%rip)
195b9(2): xor %ebp,%ebp
195bb(5): jmp 0x97(%rip)
195c0(3): mov %rbx,%rax
195c3(7): lea 0x3996(%rip),%r13
195ca(5): mov %rbx,0x50(%rsp)
195cf(3): movsx (%rax),%edx
195d2(5): lea 0x40(%rsp),%rbx
195d7(5): mov $0x0,0x40(%rsp)
195dc(9): mov $0x0,0x44(%rsp)
195e5(5): mov $0x0,0x4c(%rsp)
195ea(4): lea 0x4(%rbx),%rbp
195ee(2): mov %edx,%eax
195f0(3): shr $0x5,%al
195f3(3): and $0x7,%eax
195f6(5): mov 0x0(%r13,%rax,4),%eax
195fb(3): bt %edx,%eax
195fe(6): jnb 0xca2(%rip)
19604(9): mov $0x1,0x58(%rsp)
1960d(4): mov %edx,0x64(%rsp)
19611(5): mov $0x1,0x60(%rsp)
19616(5): mov $0x1,0x4c(%rsp)
1961b(4): mov 0x64(%rsp),%eax
1961f(2): test %eax,%eax
19621(2): jnz 0x5a(%rip)
19623(3): mov %r12,%rax
19626(8): mov 0x188(%rsp),%rbx
1962e(9): xor $0x28,%rbx
19637(6): jnz 0xf49(%rip)
1963d(7): add $0x198,%rsp
19644(1): pop %rbx
19645(1): pop %rbp
19646(2): pop %r12
19648(2): pop %r13
1964a(2): pop %r14
1964c(2): pop %r15
1964e(1): ret near (%rsp)
1964f(1): nop 
19650(2): mov %edx,%eax
19652(4): movzx (%r14),%esi
19656(3): mov %r14,%r12
19659(3): mov %rbx,%rdx
1965c(5): jmp 0xfffffec4(%rip)
19661(7): nop 0x0(%rax)
19668(9): mov $0x1,0x58(%rsp)
19671(5): mov $0x0,0x60(%rsp)
19676(5): mov $0x1,0x4c(%rsp)
1967b(5): mov 0x8(%rsp),%rax
19680(8): mov $0x0,0xc0(%rsp)
19688(3): xor %r14d,%r14d
1968b(2): xor %ebx,%ebx
1968d(8): cmp $0x0,0xc0(%rsp)
19695(8): mov $0x0,0x80(%rsp)
1969d(c): mov $0x0,0x84(%rsp)
196a9(8): mov $0x0,0x8c(%rsp)
196b1(8): lea 0x140(%rsp),%rbp
196b9(8): mov %rax,0x90(%rsp)
196c1(5): lea 0x38(%rsp),%rax
196c6(8): mov %r12,0xd0(%rsp)
196ce(c): mov $0x0,0xc4(%rsp)
196da(8): mov $0x0,0xcc(%rsp)
196e2(8): lea 0x100(%rsp),%r15
196ea(9): mov $0x0,0x20(%rsp)
196f3(5): mov $0x1,0x10(%rsp)
196f8(5): mov %rax,0x28(%rsp)
196fd(6): jnz 0x316(%rip)
19703(5): nop 0x0(%rax,%rax,1)
19708(8): mov 0xd0(%rsp),%rcx
19710(3): movzx (%rcx),%edx
19713(2): mov %edx,%eax
19715(3): shr $0x5,%al
19718(3): and $0x7,%eax
1971b(5): mov 0x0(%r13,%rax,4),%eax
19720(3): bt %edx,%eax
19723(6): jnb 0x75d(%rip)
19729(c): mov $0x1,0xd8(%rsp)
19735(3): movsx (%rcx),%eax
19738(8): mov $0x1,0xe0(%rsp)
19740(8): mov $0x1,0xcc(%rsp)
19748(7): mov %eax,0xe4(%rsp)
1974f(7): mov 0xe4(%rsp),%eax
19756(2): test %eax,%eax
19758(6): jz 0x548(%rip)
1975e(4): cmp $0x9,%r14
19762(3): setnbe %al
19765(4): and 0x10(%rsp),%al
19769(6): jz 0xe0e(%rip)
1976f(4): lea 0x0(%r14,%r14,4),%rdx
19773(3): cmp %rdx,%rbx
19776(6): jnb 0x73a(%rip)
1977c(4): add $0x1,%rbx
19780(4): mov %al,0x10(%rsp)
19784(5): cmp $0x0,0x60(%rsp)
19789(6): jz 0x578(%rip)
1978f(4): mov 0x64(%rsp),%eax
19793(7): cmp %eax,0xe4(%rsp)
1979a(6): jnz 0x24f(%rip)
197a0(9): movdqa 0xc0(%rsp),%xmm0
197a9(4): lea 0x4(%rbp),%rcx
197ad(8): mov $0x0,0x140(%rsp)
197b5(8): mov $0x0,0x4(%rbp)
197bd(8): movaps %xmm0,0x100(%rsp)
197c5(8): mov $0x0,0x14c(%rsp)
197cd(8): mov $0x0,0x10c(%rsp)
197d5(9): movdqa 0xd0(%rsp),%xmm0
197de(8): movaps %xmm0,0x110(%rsp)
197e6(8): mov 0x118(%rsp),%rax
197ee(8): add %rax,0x110(%rsp)
197f6(5): mov 0x8(%rsp),%rax
197fb(9): movdqa 0xe0(%rsp),%xmm0
19804(3): movsx (%rax),%edx
19807(8): mov %rax,0x150(%rsp)
1980f(8): movaps %xmm0,0x120(%rsp)
19817(2): mov %edx,%eax
19819(3): shr $0x5,%al
1981c(9): movdqa 0xf0(%rsp),%xmm0
19825(3): and $0x7,%eax
19828(5): mov 0x0(%r13,%rax,4),%eax
1982d(8): movaps %xmm0,0x130(%rsp)
19835(3): bt %edx,%eax
19838(6): jnb 0x990(%rip)
1983e(c): mov $0x1,0x158(%rsp)
1984a(7): mov %edx,0x164(%rsp)
19851(8): mov $0x1,0x160(%rsp)
19859(8): mov $0x1,0x14c(%rsp)
19861(7): mov 0x164(%rsp),%esi
19868(2): test %esi,%esi
1986a(6): jz 0xd3a(%rip)
19870(8): mov 0x158(%rsp),%rax
19878(8): mov $0x0,0x14c(%rsp)
19880(4): add $0x1,%rbx
19884(8): add %rax,0x150(%rsp)
1988c(5): jmp 0xc7(%rip)
19891(7): nop 0x0(%rax)
19898(8): cmp $0x0,0x100(%rsp)
198a0(6): jnz 0x341(%rip)
198a6(8): mov 0x110(%rsp),%rcx
198ae(3): movzx (%rcx),%edx
198b1(2): mov %edx,%eax
198b3(3): shr $0x5,%al
198b6(3): and $0x7,%eax
198b9(5): mov 0x0(%r13,%rax,4),%eax
198be(3): bt %edx,%eax
198c1(6): jnb 0x307(%rip)
198c7(c): mov $0x1,0x118(%rsp)
198d3(3): movsx (%rcx),%eax
198d6(8): mov $0x1,0x120(%rsp)
198de(8): mov $0x1,0x10c(%rsp)
198e6(7): mov %eax,0x124(%rsp)
198ed(7): mov 0x124(%rsp),%eax
198f4(2): test %eax,%eax
198f6(6): jz 0x3aa(%rip)
198fc(8): cmp $0x0,0x160(%rsp)
19904(6): jz 0xcf(%rip)
1990a(7): cmp %eax,0x164(%rsp)
19911(3): setnz %al
19914(2): test %al,%al
19916(4): lea 0x1(%rbx),%rdx
1991a(6): jnz 0xcf(%rip)
19920(8): mov 0x118(%rsp),%rax
19928(8): add %rax,0x110(%rsp)
19930(3): mov %rdx,%rbx
19933(8): mov 0x158(%rsp),%rax
1993b(8): add %rax,0x150(%rsp)
19943(8): mov $0x0,0x10c(%rsp)
1994b(8): mov $0x0,0x14c(%rsp)
19953(8): cmp $0x0,0x140(%rsp)
1995b(6): jnz 0x19e(%rip)
19961(8): mov 0x150(%rsp),%rcx
19969(3): movzx (%rcx),%edx
1996c(2): mov %edx,%eax
1996e(3): shr $0x5,%al
19971(3): and $0x7,%eax
19974(5): mov 0x0(%r13,%rax,4),%eax
19979(3): bt %edx,%eax
1997c(6): jnb 0x164(%rip)
19982(c): mov $0x1,0x158(%rsp)
1998e(3): movsx (%rcx),%eax
19991(8): mov $0x1,0x160(%rsp)
19999(8): mov $0x1,0x14c(%rsp)
199a1(7): mov %eax,0x164(%rsp)
199a8(7): mov 0x164(%rsp),%edx
199af(2): test %edx,%edx
199b1(6): jz 0x207(%rip)
199b7(8): cmp $0x0,0x10c(%rsp)
199bf(6): jz 0xfffffed9(%rip)
199c5(8): cmp $0x0,0x120(%rsp)
199cd(6): jnz 0xffffff20(%rip)
199d3(8): mov 0x118(%rsp),%rdx
199db(8): cmp 0x158(%rsp),%rdx
199e3(6): jz 0x2cd(%rip)
199e9(8): mov 0xd8(%rsp),%rcx
199f1(8): add %rcx,0xd0(%rsp)
199f9(4): add $0x1,%r14
199fd(8): cmp $0x0,0xc0(%rsp)
19a05(8): mov $0x0,0xcc(%rsp)
19a0d(6): jz 0xfffffcfb(%rip)
19a13(8): lea 0xc0(%rsp),%rax
19a1b(4): mov %rax,(%rsp)
19a1f(5): call 0xfffe8371(%rip)
19a24(8): mov 0xd0(%rsp),%r8
19a2c(3): mov %rax,%rsi
19a2f(3): mov %r8,%rdi
19a32(5): mov %r8,0x18(%rsp)
19a37(5): call 0xfffef1f9(%rip)
19a3c(4): mov (%rsp),%rsi
19a40(5): mov 0x18(%rsp),%r8
19a45(3): mov %rax,%rdx
19a48(4): lea 0x4(%rsi),%rcx
19a4c(4): lea 0x24(%rsi),%rdi
19a50(3): mov %r8,%rsi
19a53(5): call 0xffff095d(%rip)
19a58(4): cmp $0xffffffff,%rax
19a5c(8): mov %rax,0xd8(%rsp)
19a64(6): jz 0x26c(%rip)
19a6a(4): cmp $0xfffffffe,%rax
19a6e(6): jz 0x72a(%rip)
19a74(3): test %rax,%rax
19a77(2): jnz 0x2e(%rip)
19a79(8): mov 0xd0(%rsp),%rax
19a81(c): mov $0x1,0xd8(%rsp)
19a8d(3): cmp $0x0,(%rax)
19a90(6): jnz 0xaf5(%rip)
19a96(7): mov 0xe4(%rsp),%eax
19a9d(2): test %eax,%eax
19a9f(6): jnz 0x7c3(%rip)
19aa5(4): mov (%rsp),%rdi
19aa9(8): mov $0x1,0xe0(%rsp)
19ab1(4): add $0x4,%rdi
19ab5(5): call 0xfffe85fb(%rip)
19aba(2): test %eax,%eax
19abc(6): jz 0x614(%rip)
19ac2(8): mov $0x0,0xc0(%rsp)
19aca(8): mov $0x1,0xcc(%rsp)
19ad2(5): jmp 0xfffffc7d(%rip)
19ad7(9): nop 0x0(%rax,%rax,1)
19ae0(4): lea 0x4(%rbp),%rdi
19ae4(5): call 0xfffe85cc(%rip)
19ae9(2): test %eax,%eax
19aeb(6): jz 0xa6d(%rip)
19af1(8): mov $0x1,0x140(%rsp)
19af9(5): call 0xfffe8297(%rip)
19afe(8): mov 0x150(%rsp),%r8
19b06(3): mov %rax,%rsi
19b09(3): mov %r8,%rdi
19b0c(4): mov %r8,(%rsp)
19b10(5): call 0xfffef120(%rip)
19b15(4): mov (%rsp),%r8
19b19(4): lea 0x4(%rbp),%rcx
19b1d(4): lea 0x24(%rbp),%rdi
19b21(3): mov %rax,%rdx
19b24(3): mov %r8,%rsi
19b27(5): call 0xffff0889(%rip)
19b2c(4): cmp $0xffffffff,%rax
19b30(8): mov %rax,0x158(%rsp)
19b38(6): jz 0x208(%rip)
19b3e(4): cmp $0xfffffffe,%rax
19b42(6): jz 0x24e(%rip)
19b48(3): test %rax,%rax
19b4b(2): jnz 0x2e(%rip)
19b4d(8): mov 0x150(%rsp),%rax
19b55(c): mov $0x1,0x158(%rsp)
19b61(3): cmp $0x0,(%rax)
19b64(6): jnz 0xa21(%rip)
19b6a(7): mov 0x164(%rsp),%ecx
19b71(2): test %ecx,%ecx
19b73(6): jnz 0x6ef(%rip)
19b79(4): lea 0x4(%rbp),%rdi
19b7d(8): mov $0x1,0x160(%rsp)
19b85(5): call 0xfffe852b(%rip)
19b8a(2): test %eax,%eax
19b8c(6): jz 0x234(%rip)
19b92(7): mov 0x164(%rsp),%edx
19b99(8): mov $0x0,0x140(%rsp)
19ba1(8): mov $0x1,0x14c(%rsp)
19ba9(2): test %edx,%edx
19bab(6): jnz 0xfffffe0c(%rip)
19bb1(7): nop 0x0(%rax)
19bb8(8): mov 0xd0(%rsp),%rax
19bc0(5): jmp 0xfffffa66(%rip)
19bc5(3): nop (%rax)
19bc8(4): lea 0x4(%r15),%rdi
19bcc(5): call 0xfffe84e4(%rip)
19bd1(2): test %eax,%eax
19bd3(6): jz 0x985(%rip)
19bd9(8): mov $0x1,0x100(%rsp)
19be1(5): call 0xfffe81af(%rip)
19be6(8): mov 0x110(%rsp),%r8
19bee(3): mov %rax,%rsi
19bf1(3): mov %r8,%rdi
19bf4(4): mov %r8,(%rsp)
19bf8(5): call 0xfffef038(%rip)
19bfd(4): mov (%rsp),%r8
19c01(4): lea 0x4(%r15),%rcx
19c05(4): lea 0x24(%r15),%rdi
19c09(3): mov %rax,%rdx
19c0c(3): mov %r8,%rsi
19c0f(5): call 0xffff07a1(%rip)
19c14(4): cmp $0xffffffff,%rax
19c18(8): mov %rax,0x118(%rsp)
19c20(6): jz 0x148(%rip)
19c26(4): cmp $0xfffffffe,%rax
19c2a(6): jz 0x1a6(%rip)
19c30(3): test %rax,%rax
19c33(2): jnz 0x2e(%rip)
19c35(8): mov 0x110(%rsp),%rax
19c3d(c): mov $0x1,0x118(%rsp)
19c49(3): cmp $0x0,(%rax)
19c4c(6): jnz 0x939(%rip)
19c52(7): mov 0x124(%rsp),%eax
19c59(2): test %eax,%eax
19c5b(6): jnz 0x607(%rip)
19c61(4): lea 0x4(%r15),%rdi
19c65(8): mov $0x1,0x120(%rsp)
19c6d(5): call 0xfffe8443(%rip)
19c72(2): test %eax,%eax
19c74(6): jz 0x18c(%rip)
19c7a(7): mov 0x124(%rsp),%eax
19c81(8): mov $0x0,0x100(%rsp)
19c89(8): mov $0x1,0x10c(%rsp)
19c91(2): test %eax,%eax
19c93(6): jnz 0xfffffc69(%rip)
19c99(7): nop 0x0(%rax)
19ca0(2): xor %eax,%eax
19ca2(5): jmp 0xfffff984(%rip)
19ca7(9): nop 0x0(%rax,%rax,1)
19cb0(8): mov 0x150(%rsp),%rsi
19cb8(8): mov 0x110(%rsp),%rdi
19cc0(5): call 0xfffe81d0(%rip)
19cc5(2): test %eax,%eax
19cc7(3): setnz %al
19cca(5): jmp 0xfffffc4a(%rip)
19ccf(1): nop 
19cd0(c): mov $0x1,0xd8(%rsp)
19cdc(8): mov $0x0,0xe0(%rsp)
19ce4(8): mov $0x1,0xcc(%rsp)
19cec(4): cmp $0x9,%r14
19cf0(3): setnbe %al
19cf3(4): and 0x10(%rsp),%al
19cf7(6): jnz 0x841(%rip)
19cfd(4): add $0x1,%rbx
19d01(8): mov 0xd8(%rsp),%rcx
19d09(5): cmp 0x58(%rsp),%rcx
19d0e(6): jnz 0xfffffce3(%rip)
19d14(5): mov 0x50(%rsp),%rsi
19d19(8): mov 0xd0(%rsp),%rdi
19d21(3): mov %rcx,%rdx
19d24(4): mov %rcx,(%rsp)
19d28(5): call 0xfffe8168(%rip)
19d2d(2): test %eax,%eax
19d2f(4): mov (%rsp),%rcx
19d33(6): jnz 0xfffffcbe(%rip)
19d39(5): jmp 0xfffffa67(%rip)
19d3e(2): nop 
19d40(c): mov $0x1,0x158(%rsp)
19d4c(8): mov $0x0,0x160(%rsp)
19d54(8): mov $0x1,0x14c(%rsp)
19d5c(5): jmp 0xfffffc5b(%rip)
19d61(7): nop 0x0(%rax)
19d68(c): mov $0x1,0x118(%rsp)
19d74(8): mov $0x0,0x120(%rsp)
19d7c(8): mov $0x1,0x10c(%rsp)
19d84(5): jmp 0xfffffc4f(%rip)
19d89(7): nop 0x0(%rax)
19d90(8): mov 0x150(%rsp),%rdi
19d98(5): call 0xfffe8008(%rip)
19d9d(8): mov $0x0,0x160(%rsp)
19da5(8): mov %rax,0x158(%rsp)
19dad(8): mov $0x1,0x14c(%rsp)
19db5(5): jmp 0xfffffc02(%rip)
19dba(6): nop 0x0(%rax,%rax,1)
19dc0(8): mov $0x1,0x14c(%rsp)
19dc8(5): jmp 0xfffffbe0(%rip)
19dcd(3): nop (%rax)
19dd0(8): mov 0x110(%rsp),%rdi
19dd8(5): call 0xfffe7fc8(%rip)
19ddd(8): mov $0x0,0x120(%rsp)
19de5(8): mov %rax,0x118(%rsp)
19ded(8): mov $0x1,0x10c(%rsp)
19df5(5): jmp 0xfffffbde(%rip)
19dfa(6): nop 0x0(%rax,%rax,1)
19e00(8): mov $0x1,0x10c(%rsp)
19e08(5): jmp 0xfffffae5(%rip)
19e0d(3): nop (%rax)
19e10(5): mov 0x8(%rsp),%rcx
19e15(4): movzx 0x1(%rcx),%esi
19e19(3): test %sil,%sil
19e1c(6): jz 0xfffff807(%rip)
19e22(4): movzx (%r14),%edi
19e26(3): test %dil,%dil
19e29(6): jz 0xfffffe77(%rip)
19e2f(3): cmp %dil,%sil
19e32(4): lea 0x2(%rdx),%rbx
19e36(6): jnz 0xfffff70c(%rip)
19e3c(3): neg %rdx
19e3f(4): lea 0x0(%rcx,%rdx,1),%r9
19e43(3): add %r12,%rdx
19e46(2): jmp 0x24(%rip)
19e48(8): nop 0x0(%rax,%rax,1)
19e50(4): movzx 0x0(%rdx,%rbx,1),%edi
19e54(3): test %dil,%dil
19e57(6): jz 0xfffffe49(%rip)
19e5d(4): add $0x1,%rbx
19e61(3): cmp %dil,%sil
19e64(6): jnz 0xfffff6de(%rip)
19e6a(5): movzx 0x0(%r9,%rbx,1),%esi
19e6f(3): test %sil,%sil
19e72(2): jnz 0xffffffde(%rip)
19e74(5): jmp 0xfffff7af(%rip)
19e79(7): nop 0x0(%rax)
19e80(8): lea 0xc0(%rsp),%rax
19e88(8): lea 0xc4(%rsp),%rdi
19e90(4): mov %rax,(%rsp)
19e94(5): call 0xfffe821c(%rip)
19e99(2): test %eax,%eax
19e9b(6): jz 0x6bd(%rip)
19ea1(8): mov $0x1,0xc0(%rsp)
19ea9(5): jmp 0xfffffb76(%rip)
19eae(2): nop 
19eb0(3): mov %rbx,%rsi
19eb3(5): sub 0x20(%rsp),%rsi
19eb8(8): movzx 0x8c(%rsp),%eax
19ec0(4): mov %rsi,(%rsp)
19ec4(6): jz 0x653(%rip)
19eca(2): test %al,%al
19ecc(2): jz 0x2f(%rip)
19ece(8): cmp $0x0,0xa0(%rsp)
19ed6(2): jnz 0x76(%rip)
19ed8(8): mov 0x98(%rsp),%rax
19ee0(8): add %rax,0x90(%rsp)
19ee8(5): sub $0x1,(%rsp)
19eed(8): mov $0x0,0x8c(%rsp)
19ef5(6): jz 0x213(%rip)
19efb(8): cmp $0x0,0x80(%rsp)
19f03(6): jnz 0x185(%rip)
19f09(8): mov 0x90(%rsp),%rcx
19f11(3): movzx (%rcx),%edx
19f14(2): mov %edx,%eax
19f16(3): shr $0x5,%al
19f19(3): and $0x7,%eax
19f1c(5): mov 0x0(%r13,%rax,4),%eax
19f21(3): bt %edx,%eax
19f24(2): jnb 0x7c(%rip)
19f26(c): mov $0x1,0x98(%rsp)
19f32(3): movsx (%rcx),%eax
19f35(8): mov $0x1,0xa0(%rsp)
19f3d(8): mov $0x1,0x8c(%rsp)
19f45(7): mov %eax,0xa4(%rsp)
19f4c(8): mov 0xa4(%rsp),%r10d
19f54(3): test %r10d,%r10d
19f57(6): jnz 0xffffff81(%rip)
19f5d(8): cmp $0x0,0x8c(%rsp)
19f65(6): jz 0x1a3(%rip)
19f6b(5): mov 0x28(%rsp),%rdx
19f70(5): mov 0x8(%rsp),%rsi
19f75(3): mov %r12,%rdi
19f78(5): call 0xffffeaa8(%rip)
19f7d(2): test %al,%al
19f7f(4): mov %al,0x10(%rsp)
19f83(6): jnz 0x51c(%rip)
19f89(8): movzx 0xe0(%rsp),%edx
19f91(5): jmp 0x1ea(%rip)
19f96(a): nop 0x0(%rax,%rax,1)
19fa0(8): lea 0x80(%rsp),%rax
19fa8(8): lea 0x84(%rsp),%rdi
19fb0(5): mov %rax,0x10(%rsp)
19fb5(5): call 0xfffe80fb(%rip)
19fba(2): test %eax,%eax
19fbc(6): jz 0x59c(%rip)
19fc2(8): mov $0x1,0x80(%rsp)
19fca(5): call 0xfffe7dc6(%rip)
19fcf(8): mov 0x90(%rsp),%r8
19fd7(3): mov %rax,%rsi
19fda(3): mov %r8,%rdi
19fdd(5): mov %r8,0x18(%rsp)
19fe2(5): call 0xfffeec4e(%rip)
19fe7(5): mov 0x10(%rsp),%rsi
19fec(5): mov 0x18(%rsp),%r8
19ff1(3): mov %rax,%rdx
19ff4(4): lea 0x4(%rsi),%rcx
19ff8(4): lea 0x24(%rsi),%rdi
19ffc(3): mov %r8,%rsi
19fff(5): call 0xffff03b1(%rip)
1a004(4): cmp $0xffffffff,%rax
1a008(8): mov %rax,0x98(%rsp)
1a010(6): jz 0x90(%rip)
1a016(4): cmp $0xfffffffe,%rax
1a01a(6): jz 0xc6(%rip)
1a020(3): test %rax,%rax
1a023(2): jnz 0x30(%rip)
1a025(8): mov 0x90(%rsp),%rax
1a02d(c): mov $0x1,0x98(%rsp)
1a039(3): cmp $0x0,(%rax)
1a03c(6): jnz 0x549(%rip)
1a042(8): mov 0xa4(%rsp),%r11d
1a04a(3): test %r11d,%r11d
1a04d(6): jnz 0x215(%rip)
1a053(5): mov 0x10(%rsp),%rdi
1a058(8): mov $0x1,0xa0(%rsp)
1a060(4): add $0x4,%rdi
1a064(5): call 0xfffe804c(%rip)
1a069(2): test %eax,%eax
1a06b(2): jz 0x55(%rip)
1a06d(8): mov $0x0,0x80(%rsp)
1a075(8): mov $0x1,0x8c(%rsp)
1a07d(5): jmp 0xfffffecf(%rip)
1a082(6): nop 0x0(%rax,%rax,1)
1a088(8): lea 0x80(%rsp),%rax
1a090(5): mov %rax,0x10(%rsp)
1a095(5): jmp 0xffffff35(%rip)
1a09a(6): nop 0x0(%rax,%rax,1)
1a0a0(c): mov $0x1,0x98(%rsp)
1a0ac(8): mov $0x0,0xa0(%rsp)
1a0b4(5): jmp 0xfffffe24(%rip)
1a0b9(7): nop 0x0(%rax)
1a0c0(8): mov $0x1,0x8c(%rsp)
1a0c8(5): jmp 0xfffffe84(%rip)
1a0cd(3): nop (%rax)
1a0d0(8): mov $0x1,0xcc(%rsp)
1a0d8(5): jmp 0xfffff677(%rip)
1a0dd(3): nop (%rax)
1a0e0(8): mov 0x90(%rsp),%rdi
1a0e8(5): call 0xfffe7cb8(%rip)
1a0ed(8): mov $0x0,0xa0(%rsp)
1a0f5(8): mov %rax,0x98(%rsp)
1a0fd(5): jmp 0xfffffddb(%rip)
1a102(6): nop 0x0(%rax,%rax,1)
1a108(8): cmp $0x0,0x80(%rsp)
1a110(6): jnz 0x258(%rip)
1a116(8): mov 0x90(%rsp),%rcx
1a11e(3): movzx (%rcx),%edx
1a121(2): mov %edx,%eax
1a123(3): shr $0x5,%al
1a126(3): and $0x7,%eax
1a129(5): mov 0x0(%r13,%rax,4),%eax
1a12e(3): bt %edx,%eax
1a131(6): jnb 0x2fe(%rip)
1a137(c): mov $0x1,0x98(%rsp)
1a143(3): movsx (%rcx),%eax
1a146(8): mov $0x1,0xa0(%rsp)
1a14e(8): mov $0x1,0x8c(%rsp)
1a156(7): mov %eax,0xa4(%rsp)
1a15d(8): mov 0xa4(%rsp),%r8d
1a165(3): test %r8d,%r8d
1a168(6): jz 0xfffffe03(%rip)
1a16e(8): movzx 0xe0(%rsp),%edx
1a176(5): mov $0x1,0x10(%rsp)
1a17b(4): lea 0x1(%rbx),%rax
1a17f(2): test %dl,%dl
1a181(5): mov %rbx,0x20(%rsp)
1a186(3): mov %rax,%rbx
1a189(6): jnz 0xfffff5fb(%rip)
1a18f(5): jmp 0xfffffb72(%rip)
1a194(4): nop 0x0(%rax)
1a198(8): mov 0xd0(%rsp),%rdi
1a1a0(5): call 0xfffe7c00(%rip)
1a1a5(8): mov $0x0,0xe0(%rsp)
1a1ad(8): mov %rax,0xd8(%rsp)
1a1b5(8): mov $0x1,0xcc(%rsp)
1a1bd(5): jmp 0xfffffb2f(%rip)
1a1c2(6): nop 0x0(%rax,%rax,1)
1a1c8(3): mov %rcx,%rdi
1a1cb(5): mov %rcx,0x18(%rsp)
1a1d0(5): call 0xfffe7ee0(%rip)
1a1d5(2): test %eax,%eax
1a1d7(6): jz 0x381(%rip)
1a1dd(8): mov $0x1,0x140(%rsp)
1a1e5(5): call 0xfffe7bab(%rip)
1a1ea(8): mov 0x150(%rsp),%r8
1a1f2(3): mov %rax,%rsi
1a1f5(3): mov %r8,%rdi
1a1f8(4): mov %r8,(%rsp)
1a1fc(5): call 0xfffeea34(%rip)
1a201(4): mov (%rsp),%r8
1a205(5): mov 0x18(%rsp),%rcx
1a20a(4): lea 0x24(%rbp),%rdi
1a20e(3): mov %rax,%rdx
1a211(3): mov %r8,%rsi
1a214(5): call 0xffff019c(%rip)
1a219(4): cmp $0xffffffff,%rax
1a21d(8): mov %rax,0x158(%rsp)
1a225(6): jz 0x123(%rip)
1a22b(4): cmp $0xfffffffe,%rax
1a22f(6): jz 0x27a(%rip)
1a235(3): test %rax,%rax
1a238(2): jnz 0x38(%rip)
1a23a(8): mov 0x150(%rsp),%rax
1a242(c): mov $0x1,0x158(%rsp)
1a24e(3): cmp $0x0,(%rax)
1a251(6): jnz 0x334(%rip)
1a257(7): mov 0x164(%rsp),%edi
1a25e(2): test %edi,%edi
1a260(2): jz 0x10(%rip)
1a262(5): call 0xfffe7f04(%rip)
1a267(9): nop 0x0(%rax,%rax,1)
1a270(4): lea 0x4(%rbp),%rdi
1a274(8): mov $0x1,0x160(%rsp)
1a27c(5): call 0xfffe7e34(%rip)
1a281(2): test %eax,%eax
1a283(6): jz 0x1db(%rip)
1a289(8): mov $0x0,0x140(%rsp)
1a291(8): mov $0x1,0x14c(%rsp)
1a299(5): jmp 0xfffff5c8(%rip)
1a29e(2): nop 
1a2a0(3): mov %rbp,%rdi
1a2a3(5): call 0xfffe7e0d(%rip)
1a2a8(2): test %eax,%eax
1a2aa(6): jz 0x2ae(%rip)
1a2b0(5): mov $0x1,0x40(%rsp)
1a2b5(5): call 0xfffe7adb(%rip)
1a2ba(5): mov 0x50(%rsp),%r14
1a2bf(3): mov %rax,%rsi
1a2c2(3): mov %r14,%rdi
1a2c5(5): call 0xfffee96b(%rip)
1a2ca(4): lea 0x24(%rbx),%rdi
1a2ce(3): mov %rbp,%rcx
1a2d1(3): mov %rax,%rdx
1a2d4(3): mov %r14,%rsi
1a2d7(5): call 0xffff00d9(%rip)
1a2dc(4): cmp $0xffffffff,%rax
1a2e0(5): mov %rax,0x58(%rsp)
1a2e5(6): jz 0xfffff383(%rip)
1a2eb(4): cmp $0xfffffffe,%rax
1a2ef(6): jz 0x1dc(%rip)
1a2f5(3): test %rax,%rax
1a2f8(2): jnz 0x25(%rip)
1a2fa(5): mov 0x50(%rsp),%rax
1a2ff(9): mov $0x1,0x58(%rsp)
1a308(3): cmp $0x0,(%rax)
1a30b(6): jnz 0x27a(%rip)
1a311(4): mov 0x64(%rsp),%eax
1a315(2): test %eax,%eax
1a317(6): jnz 0xffffff4b(%rip)
1a31d(4): lea 0x4(%rbx),%rdi
1a321(5): mov $0x1,0x60(%rsp)
1a326(5): call 0xfffe7d8a(%rip)
1a32b(2): test %eax,%eax
1a32d(6): jz 0x13e(%rip)
1a333(5): mov $0x0,0x40(%rsp)
1a338(5): mov $0x1,0x4c(%rsp)
1a33d(5): jmp 0xfffff2de(%rip)
1a342(6): nop 0x0(%rax,%rax,1)
1a348(c): mov $0x1,0x158(%rsp)
1a354(8): mov $0x0,0x160(%rsp)
1a35c(5): jmp 0xfffff514(%rip)
1a361(7): nop 0x0(%rax)
1a368(8): lea 0x80(%rsp),%rax
1a370(5): mov %rax,0x10(%rsp)
1a375(5): call 0xfffe7a1b(%rip)
1a37a(8): mov 0x90(%rsp),%r8
1a382(3): mov %rax,%rsi
1a385(3): mov %r8,%rdi
1a388(4): mov %r8,(%rsp)
1a38c(5): call 0xfffee8a4(%rip)
1a391(5): mov 0x10(%rsp),%rsi
1a396(4): mov (%rsp),%r8
1a39a(3): mov %rax,%rdx
1a39d(4): lea 0x4(%rsi),%rcx
1a3a1(4): lea 0x24(%rsi),%rdi
1a3a5(3): mov %r8,%rsi
1a3a8(5): call 0xffff0008(%rip)
1a3ad(4): cmp $0xffffffff,%rax
1a3b1(8): mov %rax,0x98(%rsp)
1a3b9(6): jz 0x130(%rip)
1a3bf(4): cmp $0xfffffffe,%rax
1a3c3(6): jz 0xb2(%rip)
1a3c9(3): test %rax,%rax
1a3cc(2): jnz 0x30(%rip)
1a3ce(8): mov 0x90(%rsp),%rax
1a3d6(c): mov $0x1,0x98(%rsp)
1a3e2(3): cmp $0x0,(%rax)
1a3e5(6): jnz 0x1a0(%rip)
1a3eb(8): mov 0xa4(%rsp),%r9d
1a3f3(3): test %r9d,%r9d
1a3f6(6): jnz 0xfffffe6c(%rip)
1a3fc(5): mov 0x10(%rsp),%rdi
1a401(8): mov $0x1,0xa0(%rsp)
1a409(4): add $0x4,%rdi
1a40d(5): call 0xfffe7ca3(%rip)
1a412(2): test %eax,%eax
1a414(6): jz 0xf6(%rip)
1a41a(8): mov $0x0,0x80(%rsp)
1a422(8): mov $0x1,0x8c(%rsp)
1a42a(5): jmp 0xfffffd33(%rip)
1a42f(8): lea 0x80(%rsp),%rax
1a437(8): lea 0x84(%rsp),%rdi
1a43f(5): mov %rax,0x10(%rsp)
1a444(5): call 0xfffe7c6c(%rip)
1a449(2): test %eax,%eax
1a44b(6): jz 0x10d(%rip)
1a451(8): mov $0x1,0x80(%rsp)
1a459(5): jmp 0xffffff1c(%rip)
1a45e(8): mov $0x1,0x14c(%rsp)
1a466(5): jmp 0xfffff3fb(%rip)
1a46b(5): mov $0x1,0x4c(%rsp)
1a470(5): jmp 0xfffff1ab(%rip)
1a475(8): mov 0x90(%rsp),%rdi
1a47d(5): call 0xfffe7923(%rip)
1a482(8): mov $0x0,0xa0(%rsp)
1a48a(8): mov %rax,0x98(%rsp)
1a492(8): mov $0x1,0x8c(%rsp)
1a49a(5): jmp 0xfffffcd4(%rip)
1a49f(5): mov 0x38(%rsp),%rax
1a4a4(5): jmp 0xfffff182(%rip)
1a4a9(8): mov 0x150(%rsp),%rdi
1a4b1(5): call 0xfffe78ef(%rip)
1a4b6(8): mov $0x0,0x160(%rsp)
1a4be(8): mov %rax,0x158(%rsp)
1a4c6(5): jmp 0xfffff3aa(%rip)
1a4cb(5): mov 0x50(%rsp),%rdi
1a4d0(5): call 0xfffe78d0(%rip)
1a4d5(5): mov $0x0,0x60(%rsp)
1a4da(5): mov %rax,0x58(%rsp)
1a4df(5): mov $0x1,0x4c(%rsp)
1a4e4(5): jmp 0xfffff197(%rip)
1a4e9(c): mov $0x1,0x98(%rsp)
1a4f5(8): mov $0x0,0xa0(%rsp)
1a4fd(8): mov $0x1,0x8c(%rsp)
1a505(5): jmp 0xfffffc69(%rip)
1a50a(8): mov $0x1,0x8c(%rsp)
1a512(5): jmp 0xfffffc4b(%rip)
1a517(2): test %al,%al
1a519(6): jz 0xfffffbef(%rip)
1a51f(8): cmp $0x0,0xa0(%rsp)
1a527(6): jz 0xfffffc47(%rip)
1a52d(5): jmp 0xfffffc30(%rip)
1a532(6): nop 0x0(%rax,%rax,1)
1a538(4): lea 0x0(%r14,%r14,4),%rdx
1a53c(3): cmp %rdx,%rbx
1a53f(6): jnb 0xfffff971(%rip)
1a545(4): add $0x1,%rbx
1a549(4): mov %al,0x10(%rsp)
1a54d(5): jmp 0xfffff7b4(%rip)
1a552(6): nop 0x0(%rax,%rax,1)
1a558(7): lea 0x2a21(%rip),%rcx
1a55f(7): lea 0x1732(%rip),%rsi
1a566(7): lea 0x175d(%rip),%rdi
1a56d(5): mov $0x96,%edx
1a572(5): call 0xfffe78be(%rip)
1a577(4): add $0x1,%rbx
1a57b(5): jmp 0xfffff209(%rip)
1a580(5): call 0xfffe7830(%rip)
1a585(7): lea 0x29f4(%rip),%rcx
1a58c(7): lea 0x1705(%rip),%rsi
1a593(7): lea 0x1747(%rip),%rdi
1a59a(5): mov $0xb2,%edx
1a59f(5): call 0xfffe7891(%rip)
1a5a4(5): call 0xfffe76cc(%rip)

"mem_cd_iconv" :
1a5b0(2): push %r15
1a5b2(2): push %r14
1a5b4(3): mov %rdi,%r15
1a5b7(2): push %r13
1a5b9(2): push %r12
1a5bb(3): mov %rsi,%r13
1a5be(1): push %rbp
1a5bf(1): push %rbx
1a5c0(3): mov %rdx,%rbx
1a5c3(2): xor %esi,%esi
1a5c5(2): xor %edx,%edx
1a5c7(7): sub $0x1068,%rsp
1a5ce(5): mov %rdi,0x28(%rsp)
1a5d3(5): mov %rcx,0x18(%rsp)
1a5d8(3): mov %rbx,%rdi
1a5db(5): mov %r8,0x10(%rsp)
1a5e0(2): xor %ecx,%ecx
1a5e2(3): xor %r8d,%r8d
1a5e5(9): mov $0x28,%rax
1a5ee(8): mov %rax,0x1058(%rsp)
1a5f6(2): xor %eax,%eax
1a5f8(5): call 0xfffe76d8(%rip)
1a5fd(5): mov %r15,0x30(%rsp)
1a602(3): xor %r15d,%r15d
1a605(3): test %r13,%r13
1a608(5): mov %r13,0x38(%rsp)
1a60d(5): lea 0x50(%rsp),%r14
1a612(5): lea 0x48(%rsp),%r12
1a617(5): lea 0x40(%rsp),%rbp
1a61c(2): jz 0x7f(%rip)
1a61e(5): lea 0x38(%rsp),%rax
1a623(5): lea 0x30(%rsp),%rsi
1a628(5): mov %r13,0x20(%rsp)
1a62d(5): mov %rsi,0x8(%rsp)
1a632(3): mov %rax,%r13
1a635(2): jmp 0x22(%rip)
1a637(9): nop 0x0(%rax,%rax,1)
1a640(5): mov 0x40(%rsp),%rax
1a645(3): sub %r14,%rax
1a648(3): add %rax,%r15
1a64b(6): cmp $0x0,0x38(%rsp)
1a651(6): jz 0x19f(%rip)
1a657(5): mov 0x8(%rsp),%rsi
1a65c(3): mov %r12,%r8
1a65f(3): mov %rbp,%rcx
1a662(3): mov %r13,%rdx
1a665(3): mov %rbx,%rdi
1a668(5): mov %r14,0x40(%rsp)
1a66d(9): mov $0x1000,0x48(%rsp)
1a676(5): call 0xfffe765a(%rip)
1a67b(4): cmp $0xffffffff,%rax
1a67f(2): jnz 0xffffffc1(%rip)
1a681(5): call 0xfffe75ff(%rip)
1a686(2): mov (%rax),%eax
1a688(3): cmp $0x7,%eax
1a68b(2): jz 0xffffffb5(%rip)
1a68d(3): cmp $0x16,%eax
1a690(5): mov 0x20(%rsp),%r13
1a695(6): jnz 0x1c4(%rip)
1a69b(2): xor %edx,%edx
1a69d(2): xor %esi,%esi
1a69f(3): mov %r12,%r8
1a6a2(3): mov %rbp,%rcx
1a6a5(3): mov %rbx,%rdi
1a6a8(5): mov %r14,0x40(%rsp)
1a6ad(9): mov $0x1000,0x48(%rsp)
1a6b6(5): call 0xfffe761a(%rip)
1a6bb(4): cmp $0xffffffff,%rax
1a6bf(6): jz 0x19a(%rip)
1a6c5(5): mov 0x40(%rsp),%rax
1a6ca(3): sub %r14,%rax
1a6cd(3): add %r15,%rax
1a6d0(5): mov %rax,0x8(%rsp)
1a6d5(6): jz 0x12b(%rip)
1a6db(5): mov 0x18(%rsp),%rax
1a6e0(3): mov (%rax),%rax
1a6e3(3): test %rax,%rax
1a6e6(5): mov %rax,0x20(%rsp)
1a6eb(2): jz 0x11(%rip)
1a6ed(5): mov 0x10(%rsp),%rax
1a6f2(5): mov 0x8(%rsp),%rcx
1a6f7(3): cmp %rcx,(%rax)
1a6fa(2): jnb 0x1a(%rip)
1a6fc(5): mov 0x8(%rsp),%rdi
1a701(5): call 0xfffe781f(%rip)
1a706(3): test %rax,%rax
1a709(5): mov %rax,0x20(%rsp)
1a70e(6): jz 0x140(%rip)
1a714(3): xor %r8d,%r8d
1a717(2): xor %ecx,%ecx
1a719(2): xor %edx,%edx
1a71b(2): xor %esi,%esi
1a71d(3): mov %rbx,%rdi
1a720(5): lea 0x38(%rsp),%r15
1a725(5): call 0xfffe75ab(%rip)
1a72a(5): mov 0x28(%rsp),%rax
1a72f(5): mov %r13,0x38(%rsp)
1a734(5): lea 0x30(%rsp),%r14
1a739(5): mov %rax,0x30(%rsp)
1a73e(5): mov 0x20(%rsp),%rax
1a743(5): mov %rax,0x40(%rsp)
1a748(5): mov 0x8(%rsp),%rax
1a74d(5): mov %rax,0x48(%rsp)
1a752(2): jmp 0x29(%rip)
1a754(4): nop 0x0(%rax)
1a758(3): mov %r12,%r8
1a75b(3): mov %rbp,%rcx
1a75e(3): mov %r15,%rdx
1a761(3): mov %r14,%rsi
1a764(3): mov %rbx,%rdi
1a767(5): call 0xfffe7569(%rip)
1a76c(4): cmp $0xffffffff,%rax
1a770(6): jz 0xa0(%rip)
1a776(5): mov 0x38(%rsp),%r13
1a77b(3): test %r13,%r13
1a77e(2): jnz 0xffffffda(%rip)
1a780(2): xor %edx,%edx
1a782(2): xor %esi,%esi
1a784(3): mov %r12,%r8
1a787(3): mov %rbp,%rcx
1a78a(3): mov %rbx,%rdi
1a78d(5): call 0xfffe7543(%rip)
1a792(4): cmp $0xffffffff,%rax
1a796(6): jz 0x88(%rip)
1a79c(6): cmp $0x0,0x48(%rsp)
1a7a2(6): jnz 0xc1(%rip)
1a7a8(5): mov 0x18(%rsp),%rax
1a7ad(5): mov 0x20(%rsp),%rsi
1a7b2(2): xor %ebx,%ebx
1a7b4(5): mov 0x8(%rsp),%rdi
1a7b9(3): mov %rsi,(%rax)
1a7bc(5): mov 0x10(%rsp),%rax
1a7c1(3): mov %rdi,(%rax)
1a7c4(8): mov 0x1058(%rsp),%rdx
1a7cc(9): xor $0x28,%rdx
1a7d5(2): mov %ebx,%eax
1a7d7(6): jnz 0x91(%rip)
1a7dd(7): add $0x1068,%rsp
1a7e4(1): pop %rbx
1a7e5(1): pop %rbp
1a7e6(2): pop %r12
1a7e8(2): pop %r13
1a7ea(2): pop %r14
1a7ec(2): pop %r15
1a7ee(1): ret near (%rsp)
1a7ef(1): nop 
1a7f0(5): mov 0x20(%rsp),%r13
1a7f5(5): jmp 0xfffffea6(%rip)
1a7fa(6): nop 0x0(%rax,%rax,1)
1a800(5): mov 0x10(%rsp),%rax
1a805(2): xor %ebx,%ebx
1a807(7): mov $0x0,(%rax)
1a80e(2): jmp 0xffffffb6(%rip)
1a810(5): call 0xfffe7470(%rip)
1a815(3): cmp $0x16,(%rax)
1a818(6): jz 0xffffff68(%rip)
1a81e(5): mov 0x18(%rsp),%rax
1a823(5): mov 0x20(%rsp),%r15
1a828(5): mov $0xffffffff,%ebx
1a82d(3): cmp %r15,(%rax)
1a830(2): jz 0xffffff94(%rip)
1a832(5): call 0xfffe744e(%rip)
1a837(3): mov (%rax),%r12d
1a83a(3): mov %rax,%rbp
1a83d(3): mov %r15,%rdi
1a840(5): call 0xfffe7420(%rip)
1a845(4): mov %r12d,0x0(%rbp)
1a849(5): jmp 0xffffff7b(%rip)
1a84e(5): call 0xfffe7432(%rip)
1a853(6): mov $0xc,(%rax)
1a859(5): mov $0xffffffff,%ebx
1a85e(5): jmp 0xffffff66(%rip)
1a863(5): call 0xfffe740d(%rip)
1a868(5): call 0xfffe7548(%rip)

"str_cd_iconv" :
1a870(2): push %r15
1a872(2): push %r14
1a874(2): push %r13
1a876(2): push %r12
1a878(3): mov %rsi,%r12
1a87b(1): push %rbp
1a87c(1): push %rbx
1a87d(4): sub $0x58,%rsp
1a881(9): mov $0x28,%rax
1a88a(5): mov %rax,0x48(%rsp)
1a88f(2): xor %eax,%eax
1a891(5): mov %rdi,0x28(%rsp)
1a896(5): call 0xfffe750a(%rip)
1a89b(3): mov %rax,%r13
1a89e(5): mov %rax,0x30(%rsp)
1a8a3(4): shl/sal $0x4,%r13
1a8a7(6): cmp $0x10000000,%rax
1a8ad(4): cmovnb %rax,%r13
1a8b1(4): lea 0x1(%r13),%rbp
1a8b5(3): mov %rbp,%rdi
1a8b8(5): call 0xfffe7668(%rip)
1a8bd(3): test %rax,%rax
1a8c0(3): mov %rax,%rbx
1a8c3(6): jz 0x1dd(%rip)
1a8c9(3): xor %r8d,%r8d
1a8cc(2): xor %ecx,%ecx
1a8ce(2): xor %edx,%edx
1a8d0(2): xor %esi,%esi
1a8d2(3): mov %r12,%rdi
1a8d5(5): call 0xfffe73fb(%rip)
1a8da(5): lea 0x40(%rsp),%rax
1a8df(5): mov %rbx,0x38(%rsp)
1a8e4(5): mov %r13,0x40(%rsp)
1a8e9(5): mov %rax,0x8(%rsp)
1a8ee(5): lea 0x38(%rsp),%rax
1a8f3(4): mov %rax,(%rsp)
1a8f7(5): lea 0x30(%rsp),%rax
1a8fc(5): mov %rax,0x18(%rsp)
1a901(5): lea 0x28(%rsp),%rax
1a906(5): mov %rax,0x10(%rsp)
1a90b(2): jmp 0x69(%rip)
1a90d(3): nop (%rax)
1a910(5): call 0xfffe7370(%rip)
1a915(3): mov %rax,%r15
1a918(2): mov (%rax),%eax
1a91a(3): cmp $0x16,%eax
1a91d(6): jz 0xe9(%rip)
1a923(3): cmp $0x7,%eax
1a926(6): jnz 0x138(%rip)
1a92c(5): mov 0x38(%rsp),%r14
1a931(5): lea 0x0(%rbp,%rbp,1),%r13
1a936(3): sub %rbx,%r14
1a939(3): cmp %r13,%rbp
1a93c(6): jnb 0x154(%rip)
1a942(3): mov %r13,%rsi
1a945(3): mov %rbx,%rdi
1a948(5): call 0xfffe7648(%rip)
1a94d(3): test %rax,%rax
1a950(6): jz 0x140(%rip)
1a956(4): lea 0x0(%rax,%r14,1),%rsi
1a95a(3): mov %rax,%rbx
1a95d(3): mov %r13,%rbp
1a960(5): mov %rsi,0x38(%rsp)
1a965(4): lea 0xffffffff(%r13),%rsi
1a969(3): mov %rsi,%rdx
1a96c(3): sub %r14,%rdx
1a96f(5): mov %rdx,0x40(%rsp)
1a974(5): mov 0x8(%rsp),%r8
1a979(4): mov (%rsp),%rcx
1a97d(3): mov %r12,%rdi
1a980(5): mov 0x18(%rsp),%rdx
1a985(5): mov 0x10(%rsp),%rsi
1a98a(5): call 0xfffe7346(%rip)
1a98f(4): cmp $0xffffffff,%rax
1a993(6): jz 0xffffff7d(%rip)
1a999(2): jmp 0x6d(%rip)
1a99b(5): nop 0x0(%rax,%rax,1)
1a9a0(5): call 0xfffe72e0(%rip)
1a9a5(3): cmp $0x7,(%rax)
1a9a8(3): mov %rax,%rcx
1a9ab(6): jnz 0xb3(%rip)
1a9b1(5): mov 0x38(%rsp),%r15
1a9b6(5): lea 0x0(%rbp,%rbp,1),%rdx
1a9bb(3): sub %rbx,%r15
1a9be(3): cmp %rdx,%rbp
1a9c1(6): jnb 0x97(%rip)
1a9c7(3): mov %rdx,%rsi
1a9ca(3): mov %rbx,%rdi
1a9cd(5): mov %rdx,0x10(%rsp)
1a9d2(5): mov %rax,0x18(%rsp)
1a9d7(5): call 0xfffe75b9(%rip)
1a9dc(3): test %rax,%rax
1a9df(5): mov 0x10(%rsp),%rdx
1a9e4(5): mov 0x18(%rsp),%rcx
1a9e9(2): jz 0x6f(%rip)
1a9eb(4): lea 0x0(%rax,%r15,1),%rcx
1a9ef(3): mov %rdx,%rbp
1a9f2(3): mov %rax,%rbx
1a9f5(5): mov %rcx,0x38(%rsp)
1a9fa(4): lea 0xffffffff(%rdx),%rcx
1a9fe(3): sub %r15,%rcx
1aa01(5): mov %rcx,0x40(%rsp)
1aa06(5): mov 0x8(%rsp),%r8
1aa0b(4): mov (%rsp),%rcx
1aa0f(2): xor %edx,%edx
1aa11(2): xor %esi,%esi
1aa13(3): mov %r12,%rdi
1aa16(5): call 0xfffe72ba(%rip)
1aa1b(4): cmp $0xffffffff,%rax
1aa1f(6): jz 0xffffff81(%rip)
1aa25(5): mov 0x38(%rsp),%rax
1aa2a(4): lea 0x1(%rax),%rdx
1aa2e(5): mov %rdx,0x38(%rsp)
1aa33(3): mov $0x0,(%rax)
1aa36(5): mov 0x38(%rsp),%rsi
1aa3b(3): sub %rbx,%rsi
1aa3e(3): cmp %rsi,%rbp
1aa41(2): jbe 0x27(%rip)
1aa43(3): mov %rbx,%rdi
1aa46(5): call 0xfffe754a(%rip)
1aa4b(3): test %rax,%rax
1aa4e(4): cmovne %rax,%rbx
1aa52(2): jmp 0x16(%rip)
1aa54(4): nop 0x0(%rax)
1aa58(6): mov $0xc,(%rcx)
1aa5e(3): mov %rbx,%rdi
1aa61(2): xor %ebx,%ebx
1aa63(5): call 0xfffe71fd(%rip)
1aa68(5): mov 0x48(%rsp),%rdi
1aa6d(9): xor $0x28,%rdi
1aa76(3): mov %rbx,%rax
1aa79(2): jnz 0x34(%rip)
1aa7b(4): add $0x58,%rsp
1aa7f(1): pop %rbx
1aa80(1): pop %rbp
1aa81(2): pop %r12
1aa83(2): pop %r13
1aa85(2): pop %r14
1aa87(2): pop %r15
1aa89(1): ret near (%rsp)
1aa8a(6): nop 0x0(%rax,%rax,1)
1aa90(7): mov $0xc,(%r15)
1aa97(2): jmp 0xffffffc7(%rip)
1aa99(7): nop 0x0(%rax)
1aaa0(5): call 0xfffe71e0(%rip)
1aaa5(6): mov $0xc,(%rax)
1aaab(2): jmp 0xffffffbd(%rip)
1aaad(5): call 0xfffe7303(%rip)

"str_iconv" :
1aac0(2): push %r13
1aac2(2): push %r12
1aac4(1): push %rbp
1aac5(1): push %rbx
1aac6(3): mov %rdi,%rbx
1aac9(4): sub $0x8,%rsp
1aacd(3): cmp $0x0,(%rdi)
1aad0(2): jz 0x17(%rip)
1aad2(3): mov %rsi,%r12
1aad5(3): mov %rdx,%rsi
1aad8(3): mov %rdx,%rbp
1aadb(3): mov %r12,%rdi
1aade(5): call 0xffffdb72(%rip)
1aae3(2): test %eax,%eax
1aae5(2): jnz 0x23(%rip)
1aae7(3): mov %rbx,%rdi
1aaea(5): call 0xfffe75b6(%rip)
1aaef(3): test %rax,%rax
1aaf2(3): mov %rax,%rbx
1aaf5(2): jz 0x6b(%rip)
1aaf7(4): add $0x8,%rsp
1aafb(3): mov %rbx,%rax
1aafe(1): pop %rbx
1aaff(1): pop %rbp
1ab00(2): pop %r12
1ab02(2): pop %r13
1ab04(1): ret near (%rsp)
1ab05(3): nop (%rax)
1ab08(3): mov %rbp,%rdi
1ab0b(3): mov %r12,%rsi
1ab0e(5): call 0xfffe75e2(%rip)
1ab13(4): cmp $0xffffffff,%rax
1ab17(3): mov %rax,%rbp
1ab1a(6): jz 0x86(%rip)
1ab20(3): mov %rbx,%rdi
1ab23(3): mov %rax,%rsi
1ab26(5): call 0xfffffd4a(%rip)
1ab2b(3): test %rax,%rax
1ab2e(3): mov %rax,%rbx
1ab31(2): jz 0x4f(%rip)
1ab33(3): mov %rbp,%rdi
1ab36(5): call 0xfffe748a(%rip)
1ab3b(2): test %eax,%eax
1ab3d(2): jns 0xffffffba(%rip)
1ab3f(5): call 0xfffe7141(%rip)
1ab44(3): mov (%rax),%r12d
1ab47(3): mov %rax,%rbp
1ab4a(3): mov %rbx,%rdi
1ab4d(5): call 0xfffe7113(%rip)
1ab52(2): xor %ebx,%ebx
1ab54(4): mov %r12d,0x0(%rbp)
1ab58(2): jmp 0xffffff9f(%rip)
1ab5a(6): nop 0x0(%rax,%rax,1)
1ab60(5): call 0xfffe7120(%rip)
1ab65(6): mov $0xc,(%rax)
1ab6b(4): add $0x8,%rsp
1ab6f(3): mov %rbx,%rax
1ab72(1): pop %rbx
1ab73(1): pop %rbp
1ab74(2): pop %r12
1ab76(2): pop %r13
1ab78(1): ret near (%rsp)
1ab79(7): nop 0x0(%rax)
1ab80(5): call 0xfffe7100(%rip)
1ab85(3): mov (%rax),%r13d
1ab88(3): mov %rax,%r12
1ab8b(3): mov %rbp,%rdi
1ab8e(5): call 0xfffe7432(%rip)
1ab93(4): mov %r13d,(%r12)
1ab97(5): jmp 0xffffff60(%rip)
1ab9c(4): nop 0x0(%rax)
1aba0(2): xor %ebx,%ebx
1aba2(5): jmp 0xffffff55(%rip)

"mmalloca" :
1abb0(4): add $0x20,%rdi
1abb4(2): jb 0x2f(%rip)
1abb6(4): sub $0x8,%rsp
1abba(5): call 0xfffe7366(%rip)
1abbf(2): xor %edx,%edx
1abc1(3): test %rax,%rax
1abc4(2): jz 0x17(%rip)
1abc6(4): lea 0x10(%rax),%rdx
1abca(4): and $0xffffffe0,%rdx
1abce(4): add $0x10,%rdx
1abd2(3): mov %rdx,%rcx
1abd5(3): sub %rax,%rcx
1abd8(3): mov %cl,0xffffffff(%rdx)
1abdb(3): mov %rdx,%rax
1abde(4): add $0x8,%rsp
1abe2(1): ret near (%rsp)
1abe3(2): xor %edx,%edx
1abe5(3): mov %rdx,%rax
1abe8(1): ret near (%rsp)

"freea" :
1abf0(4): test $0xf,%dil
1abf4(2): jnz 0x18(%rip)
1abf6(4): test $0x10,%dil
1abfa(2): jnz 0x6(%rip)
1abfc(2): REP ret near (%rsp)
1abfe(2): nop 
1ac00(4): movzx 0xffffffff(%rdi),%eax
1ac04(3): sub %rax,%rdi
1ac07(5): jmp 0xfffe7059(%rip)
1ac0c(4): sub $0x8,%rsp
1ac10(5): call 0xfffe7060(%rip)

"mbslen" :
1ac20(2): push %r14
1ac22(2): push %r13
1ac24(2): push %r12
1ac26(1): push %rbp
1ac27(1): push %rbx
1ac28(3): mov %rdi,%rbx
1ac2b(4): sub $0x50,%rsp
1ac2f(9): mov $0x28,%rax
1ac38(5): mov %rax,0x48(%rsp)
1ac3d(2): xor %eax,%eax
1ac3f(5): call 0xfffe7151(%rip)
1ac44(4): cmp $0x1,%rax
1ac48(2): jnbe 0x38(%rip)
1ac4a(3): mov %rbx,%rdi
1ac4d(5): call 0xfffe7153(%rip)
1ac52(3): mov %rax,%rbx
1ac55(5): mov 0x48(%rsp),%rsi
1ac5a(9): xor $0x28,%rsi
1ac63(3): mov %rbx,%rax
1ac66(6): jnz 0x1a3(%rip)
1ac6c(4): add $0x50,%rsp
1ac70(1): pop %rbx
1ac71(1): pop %rbp
1ac72(2): pop %r12
1ac74(2): pop %r13
1ac76(2): pop %r14
1ac78(1): ret near (%rsp)
1ac79(7): nop 0x0(%rax)
1ac80(3): mov %rsp,%rbp
1ac83(5): mov %rbx,0x10(%rsp)
1ac88(4): mov $0x0,(%rsp)
1ac8c(9): mov $0x0,0x4(%rsp)
1ac95(5): mov $0x0,0xc(%rsp)
1ac9a(2): xor %ebx,%ebx
1ac9c(7): lea 0x22bd(%rip),%r12
1aca3(4): lea 0x4(%rbp),%r13
1aca7(2): jmp 0x5f(%rip)
1aca9(7): nop 0x0(%rax)
1acb0(5): mov 0x10(%rsp),%rcx
1acb5(3): movzx (%rcx),%edx
1acb8(2): mov %edx,%eax
1acba(3): shr $0x5,%al
1acbd(3): and $0x7,%eax
1acc0(4): mov 0x0(%r12,%rax,4),%eax
1acc4(3): bt %edx,%eax
1acc7(6): jnb 0xc9(%rip)
1accd(9): mov $0x1,0x18(%rsp)
1acd6(3): movsx (%rcx),%eax
1acd9(5): mov $0x1,0x20(%rsp)
1acde(5): mov $0x1,0xc(%rsp)
1ace3(4): mov %eax,0x24(%rsp)
1ace7(4): mov 0x24(%rsp),%eax
1aceb(2): test %eax,%eax
1aced(6): jz 0xffffff68(%rip)
1acf3(5): mov 0x18(%rsp),%rax
1acf8(5): add %rax,0x10(%rsp)
1acfd(4): add $0x1,%rbx
1ad01(5): mov $0x0,0xc(%rsp)
1ad06(4): cmp $0x0,(%rsp)
1ad0a(2): jz 0xffffffa6(%rip)
1ad0c(5): call 0xfffe7084(%rip)
1ad11(5): mov 0x10(%rsp),%r14
1ad16(3): mov %rax,%rsi
1ad19(3): mov %r14,%rdi
1ad1c(5): call 0xfffedf14(%rip)
1ad21(4): lea 0x4(%rbp),%rcx
1ad25(4): lea 0x24(%rbp),%rdi
1ad29(3): mov %rax,%rdx
1ad2c(3): mov %r14,%rsi
1ad2f(5): call 0xfffef681(%rip)
1ad34(4): cmp $0xffffffff,%rax
1ad38(5): mov %rax,0x18(%rsp)
1ad3d(2): jz 0x6b(%rip)
1ad3f(4): cmp $0xfffffffe,%rax
1ad43(2): jz 0x7d(%rip)
1ad45(3): test %rax,%rax
1ad48(2): jnz 0x25(%rip)
1ad4a(5): mov 0x10(%rsp),%rax
1ad4f(9): mov $0x1,0x18(%rsp)
1ad58(3): cmp $0x0,(%rax)
1ad5b(6): jnz 0xb3(%rip)
1ad61(4): mov 0x24(%rsp),%edx
1ad65(2): test %edx,%edx
1ad67(6): jnz 0xc6(%rip)
1ad6d(4): lea 0x4(%rbp),%rdi
1ad71(5): mov $0x1,0x20(%rsp)
1ad76(5): call 0xfffe733a(%rip)
1ad7b(2): test %eax,%eax
1ad7d(2): jz 0x63(%rip)
1ad7f(4): mov $0x0,(%rsp)
1ad83(5): mov $0x1,0xc(%rsp)
1ad88(5): jmp 0xffffff5f(%rip)
1ad8d(3): nop (%rax)
1ad90(3): mov %r13,%rdi
1ad93(5): call 0xfffe731d(%rip)
1ad98(2): test %eax,%eax
1ad9a(2): jz 0x50(%rip)
1ad9c(4): mov $0x1,(%rsp)
1ada0(5): jmp 0xffffff6c(%rip)
1ada5(3): nop (%rax)
1ada8(9): mov $0x1,0x18(%rsp)
1adb1(5): mov $0x0,0x20(%rsp)
1adb6(5): jmp 0xffffff3d(%rip)
1adbb(5): nop 0x0(%rax,%rax,1)
1adc0(5): mov 0x10(%rsp),%rdi
1adc5(5): call 0xfffe6fdb(%rip)
1adca(5): mov $0x0,0x20(%rsp)
1adcf(5): mov %rax,0x18(%rsp)
1add4(5): jmp 0xffffff1f(%rip)
1add9(7): nop 0x0(%rax)
1ade0(5): mov $0x1,0xc(%rsp)
1ade5(5): jmp 0xffffff02(%rip)
1adea(7): lea 0x21af(%rip),%rcx
1adf1(7): lea 0xea0(%rip),%rsi
1adf8(7): lea 0xecb(%rip),%rdi
1adff(5): mov $0x96,%edx
1ae04(5): call 0xfffe702c(%rip)
1ae09(5): call 0xfffe6fa7(%rip)
1ae0e(7): lea 0x218b(%rip),%rcx
1ae15(7): lea 0xe7c(%rip),%rsi
1ae1c(7): lea 0xebe(%rip),%rdi
1ae23(5): mov $0xb2,%edx
1ae28(5): call 0xfffe7008(%rip)
1ae2d(7): lea 0x216c(%rip),%rcx
1ae34(7): lea 0xe5d(%rip),%rsi
1ae3b(7): lea 0xe76(%rip),%rdi
1ae42(5): mov $0xb3,%edx
1ae47(5): call 0xfffe6fe9(%rip)

"__libc_csu_init" :
1ae50(2): push %r15
1ae52(2): push %r14
1ae54(3): mov %rdx,%r15
1ae57(2): push %r13
1ae59(2): push %r12
1ae5b(7): lea 0x205a0e(%rip),%r12
1ae62(1): push %rbp
1ae63(7): lea 0x205a0e(%rip),%rbp
1ae6a(1): push %rbx
1ae6b(3): mov %edi,%r13d
1ae6e(3): mov %rsi,%r14
1ae71(3): sub %r12,%rbp
1ae74(4): sub $0x8,%rsp
1ae78(4): sar $0x3,%rbp
1ae7c(5): call 0xfffe6dac(%rip)
1ae81(3): test %rbp,%rbp
1ae84(2): jz 0x22(%rip)
1ae86(2): xor %ebx,%ebx
1ae88(8): nop 0x0(%rax,%rax,1)
1ae90(3): mov %r15,%rdx
1ae93(3): mov %r14,%rsi
1ae96(3): mov %r13d,%edi
1ae99(4): call 0x0(%r12,%rbx,8)
1ae9d(4): add $0x1,%rbx
1aea1(3): cmp %rbx,%rbp
1aea4(2): jnz 0xffffffec(%rip)
1aea6(4): add $0x8,%rsp
1aeaa(1): pop %rbx
1aeab(1): pop %rbp
1aeac(2): pop %r12
1aeae(2): pop %r13
1aeb0(2): pop %r14
1aeb2(2): pop %r15
1aeb4(1): ret near (%rsp)

"atexit" :
1aed0(7): mov 0x206131(%rip),%rdx
1aed7(2): xor %esi,%esi
1aed9(5): jmp 0xfffe7187(%rip)

"_fini" :
1aee0(4): sub $0x8,%rsp
1aee4(4): add $0x8,%rsp
1aee8(1): ret near (%rsp)

