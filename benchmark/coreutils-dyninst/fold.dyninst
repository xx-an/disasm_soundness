
"__uflow@plt" :
1460(6): jmp 0x2069da(%rip)
1466(5): push $0x0

"free@plt" :
1470(6): jmp 0x2069d2(%rip)
1476(5): push $0x1

"abort@plt" :
1480(6): jmp 0x2069ca(%rip)
1486(5): push $0x2

"__errno_location@plt" :
1490(6): jmp 0x2069c2(%rip)
1496(5): push $0x3

"strncmp@plt" :
14a0(6): jmp 0x2069ba(%rip)
14a6(5): push $0x4

"_exit@plt" :
14b0(6): jmp 0x2069b2(%rip)
14b6(5): push $0x5

"__fpending@plt" :
14c0(6): jmp 0x2069aa(%rip)
14c6(5): push $0x6

"textdomain@plt" :
14d0(6): jmp 0x2069a2(%rip)
14d6(5): push $0x7

"fclose@plt" :
14e0(6): jmp 0x20699a(%rip)
14e6(5): push $0x8

"bindtextdomain@plt" :
14f0(6): jmp 0x206992(%rip)
14f6(5): push $0x9

"dcgettext@plt" :
1500(6): jmp 0x20698a(%rip)
1506(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1510(6): jmp 0x206982(%rip)
1516(5): push $0xb

"strlen@plt" :
1520(6): jmp 0x20697a(%rip)
1526(5): push $0xc

"__stack_chk_fail@plt" :
1530(6): jmp 0x206972(%rip)
1536(5): push $0xd

"getopt_long@plt" :
1540(6): jmp 0x20696a(%rip)
1546(5): push $0xe

"mbrtowc@plt" :
1550(6): jmp 0x206962(%rip)
1556(5): push $0xf

"strchr@plt" :
1560(6): jmp 0x20695a(%rip)
1566(5): push $0x10

"__overflow@plt" :
1570(6): jmp 0x206952(%rip)
1576(5): push $0x11

"strrchr@plt" :
1580(6): jmp 0x20694a(%rip)
1586(5): push $0x12

"lseek@plt" :
1590(6): jmp 0x206942(%rip)
1596(5): push $0x13

"__assert_fail@plt" :
15a0(6): jmp 0x20693a(%rip)
15a6(5): push $0x14

"__strtoul_internal@plt" :
15b0(6): jmp 0x206932(%rip)
15b6(5): push $0x15

"memset@plt" :
15c0(6): jmp 0x20692a(%rip)
15c6(5): push $0x16

"posix_fadvise@plt" :
15d0(6): jmp 0x206922(%rip)
15d6(5): push $0x17

"memcmp@plt" :
15e0(6): jmp 0x20691a(%rip)
15e6(5): push $0x18

"fputs_unlocked@plt" :
15f0(6): jmp 0x206912(%rip)
15f6(5): push $0x19

"calloc@plt" :
1600(6): jmp 0x20690a(%rip)
1606(5): push $0x1a

"memcpy@plt" :
1610(6): jmp 0x206902(%rip)
1616(5): push $0x1b

"fileno@plt" :
1620(6): jmp 0x2068fa(%rip)
1626(5): push $0x1c

"malloc@plt" :
1630(6): jmp 0x2068f2(%rip)
1636(5): push $0x1d

"fflush@plt" :
1640(6): jmp 0x2068ea(%rip)
1646(5): push $0x1e

"nl_langinfo@plt" :
1650(6): jmp 0x2068e2(%rip)
1656(5): push $0x1f

"__freading@plt" :
1660(6): jmp 0x2068da(%rip)
1666(5): push $0x20

"fwrite_unlocked@plt" :
1670(6): jmp 0x2068d2(%rip)
1676(5): push $0x21

"realloc@plt" :
1680(6): jmp 0x2068ca(%rip)
1686(5): push $0x22

"setlocale@plt" :
1690(6): jmp 0x2068c2(%rip)
1696(5): push $0x23

"__printf_chk@plt" :
16a0(6): jmp 0x2068ba(%rip)
16a6(5): push $0x24

"memmove@plt" :
16b0(6): jmp 0x2068b2(%rip)
16b6(5): push $0x25

"error@plt" :
16c0(6): jmp 0x2068aa(%rip)
16c6(5): push $0x26

"fseeko@plt" :
16d0(6): jmp 0x2068a2(%rip)
16d6(5): push $0x27

"fopen@plt" :
16e0(6): jmp 0x20689a(%rip)
16e6(5): push $0x28

"__cxa_atexit@plt" :
16f0(6): jmp 0x206892(%rip)
16f6(5): push $0x29

"exit@plt" :
1700(6): jmp 0x20688a(%rip)
1706(5): push $0x2a

"fwrite@plt" :
1710(6): jmp 0x206882(%rip)
1716(5): push $0x2b

"__fprintf_chk@plt" :
1720(6): jmp 0x20687a(%rip)
1726(5): push $0x2c

"mbsinit@plt" :
1730(6): jmp 0x206872(%rip)
1736(5): push $0x2d

"iswprint@plt" :
1740(6): jmp 0x20686a(%rip)
1746(5): push $0x2e

"__ctype_b_loc@plt" :
1750(6): jmp 0x206862(%rip)
1756(5): push $0x2f

".plt.got" :
1760(6): jmp 0x20687a(%rip)
1766(2): nop 

"_init" :
1430(4): sub $0x8,%rsp
1434(7): mov 0x206b95(%rip),%rax
143b(3): test %rax,%rax
143e(2): jz 0x4(%rip)
1440(2): call %rax
1442(4): add $0x8,%rsp
1446(1): ret near (%rsp)

"main" :
1770(2): push %r13
1772(2): push %r12
1774(6): mov $0x50,%r12d
177a(1): push %rbp
177b(1): push %rbx
177c(2): mov %edi,%ebp
177e(3): mov %rsi,%rbx
1781(4): sub $0x18,%rsp
1785(3): mov (%rsi),%rdi
1788(9): mov $0x28,%rax
1791(5): mov %rax,0x8(%rsp)
1796(2): xor %eax,%eax
1798(5): lea 0x6(%rsp),%r13
179d(5): call 0xc23(%rip)
17a2(7): lea 0x4458(%rip),%rsi
17a9(5): mov $0x6,%edi
17ae(5): call 0xfffffee2(%rip)
17b3(7): lea 0x3b52(%rip),%rsi
17ba(7): lea 0x3b22(%rip),%rdi
17c1(5): call 0xfffffd2f(%rip)
17c6(7): lea 0x3b16(%rip),%rdi
17cd(5): call 0xfffffd03(%rip)
17d2(7): lea 0xaf7(%rip),%rdi
17d9(5): call 0x3a67(%rip)
17de(7): mov $0x0,0x2068fb(%rip)
17e5(7): mov $0x0,0x2068f5(%rip)
17ec(7): mov $0x0,0x2068ef(%rip)
17f3(7): lea 0x206326(%rip),%rcx
17fa(7): lea 0x3e3f(%rip),%rdx
1801(3): xor %r8d,%r8d
1804(3): mov %rbx,%rsi
1807(2): mov %ebp,%edi
1809(5): call 0xfffffd37(%rip)
180e(3): cmp $0xff,%eax
1811(6): jz 0xfd(%rip)
1817(3): cmp $0x39,%eax
181a(2): jle 0x36(%rip)
181c(3): cmp $0x73,%eax
181f(6): jz 0xd1(%rip)
1825(3): cmp $0x77,%eax
1828(6): jz 0x87(%rip)
182e(3): cmp $0x62,%eax
1831(2): jz 0xf(%rip)
1833(5): mov $0x1,%edi
1838(5): call 0x6b8(%rip)
183d(3): nop (%rax)
1840(7): mov $0x1,0x20689a(%rip)
1847(2): jmp 0xffffffac(%rip)
1849(7): nop 0x0(%rax)
1850(3): cmp $0x30,%eax
1853(2): jnl 0x45(%rip)
1855(5): cmp $0xffffff7d,%eax
185a(6): jnz 0x16c(%rip)
1860(7): mov 0x206821(%rip),%rdi
1867(7): mov 0x2067a2(%rip),%rcx
186e(7): lea 0x3ac9(%rip),%r8
1875(7): lea 0x3a63(%rip),%rdx
187c(7): lea 0x39e1(%rip),%rsi
1883(3): xor %r9d,%r9d
1886(2): xor %eax,%eax
1888(5): call 0x2d28(%rip)
188d(2): xor %edi,%edi
188f(5): call 0xfffffe71(%rip)
1894(4): nop 0x0(%rax)
1898(7): mov 0x206801(%rip),%rdx
189f(3): test %rdx,%rdx
18a2(2): jz 0x5a(%rip)
18a4(4): sub $0x1,%rdx
18a8(7): mov %rdx,0x2067f1(%rip)
18af(7): lea 0x3a6e(%rip),%rsi
18b6(5): mov $0x5,%edx
18bb(2): xor %edi,%edi
18bd(5): call 0xfffffc43(%rip)
18c2(7): mov 0x2067d7(%rip),%rdi
18c9(7): lea 0x4331(%rip),%rcx
18d0(3): mov %rax,%r8
18d3(3): xor %r9d,%r9d
18d6(7): mov $0xfffffff6,%rdx
18dd(5): mov $0x1,%esi
18e2(5): call 0x31be(%rip)
18e7(3): mov %rax,%r12
18ea(5): jmp 0xffffff09(%rip)
18ef(1): nop 
18f0(7): mov $0x1,0x2067eb(%rip)
18f7(5): jmp 0xfffffefc(%rip)
18fc(4): mov %al,0x6(%rsp)
1900(5): mov $0x0,0x7(%rsp)
1905(7): mov %r13,0x206794(%rip)
190c(2): jmp 0xffffffa3(%rip)
190e(6): mov 0x206784(%rip),%eax
1914(2): cmp %ebp,%eax
1916(6): jz 0x96(%rip)
191c(6): jnl 0xa3(%rip)
1922(3): movsxd %eax,%rdx
1925(2): not %eax
1927(2): add %ebp,%eax
1929(4): lea 0x0(%rbx,%rdx,8),%r13
192d(3): add %rdx,%rax
1930(5): lea 0x8(%rbx,%rax,8),%rbp
1935(5): mov $0x1,%ebx
193a(6): nop 0x0(%rax,%rax,1)
1940(4): mov 0x0(%r13),%rdi
1944(3): mov %r12,%rsi
1947(4): add $0x8,%r13
194b(5): call 0x1f5(%rip)
1950(2): and %eax,%ebx
1952(3): cmp %rbp,%r13
1955(2): jnz 0xffffffeb(%rip)
1957(7): cmp $0x0,0x206782(%rip)
195e(2): jnz 0x23(%rip)
1960(3): xor $0x1,%ebx
1963(5): mov 0x8(%rsp),%rcx
1968(9): xor $0x28,%rcx
1971(3): movzx %bl,%eax
1974(2): jnz 0x64(%rip)
1976(4): add $0x18,%rsp
197a(1): pop %rbx
197b(1): pop %rbp
197c(2): pop %r12
197e(2): pop %r13
1980(1): ret near (%rsp)
1981(7): mov 0x206708(%rip),%rdi
1988(5): call 0x3568(%rip)
198d(3): add $0x1,%eax
1990(2): jnz 0xffffffd0(%rip)
1992(5): call 0xfffffafe(%rip)
1997(2): mov (%rax),%esi
1999(7): lea 0x3d22(%rip),%rdx
19a0(5): mov $0x1,%edi
19a5(2): xor %eax,%eax
19a7(5): call 0xfffffd19(%rip)
19ac(7): lea 0x3d0f(%rip),%rdi
19b3(3): mov %r12,%rsi
19b6(5): call 0x18a(%rip)
19bb(2): mov %eax,%ebx
19bd(2): jmp 0xffffff9a(%rip)
19bf(5): mov $0x1,%ebx
19c4(2): jmp 0xffffff93(%rip)
19c6(5): cmp $0xffffff7e,%eax
19cb(6): jnz 0xfffffe68(%rip)
19d1(2): xor %edi,%edi
19d3(5): call 0x51d(%rip)
19d8(5): call 0xfffffb58(%rip)

"_start" :
19e0(2): xor %ebp,%ebp
19e2(3): mov %rdx,%r9
19e5(1): pop %rsi
19e6(3): mov %rsp,%rdx
19e9(4): and $0xfffffff0,%rsp
19ed(1): push %rax
19ee(1): push %rsp
19ef(7): lea 0x383a(%rip),%r8
19f6(7): lea 0x37c3(%rip),%rcx
19fd(7): lea 0xfffffd6c(%rip),%rdi
1a04(6): call 0x2065be(%rip)
1a0a(1): hlt 

"deregister_tm_clones" :
1a10(7): lea 0x206669(%rip),%rdi
1a17(1): push %rbp
1a18(7): lea 0x206661(%rip),%rax
1a1f(3): cmp %rdi,%rax
1a22(3): mov %rsp,%rbp
1a25(2): jz 0x1b(%rip)
1a27(7): mov 0x206592(%rip),%rax
1a2e(3): test %rax,%rax
1a31(2): jz 0xf(%rip)
1a33(1): pop %rbp
1a34(2): jmp %rax
1a36(a): nop 0x0(%rax,%rax,1)
1a40(1): pop %rbp
1a41(1): ret near (%rsp)

"register_tm_clones" :
1a50(7): lea 0x206629(%rip),%rdi
1a57(7): lea 0x206622(%rip),%rsi
1a5e(1): push %rbp
1a5f(3): sub %rdi,%rsi
1a62(3): mov %rsp,%rbp
1a65(4): sar $0x3,%rsi
1a69(3): mov %rsi,%rax
1a6c(4): shr $0x3f,%rax
1a70(3): add %rax,%rsi
1a73(3): sar $0x1,%rsi
1a76(2): jz 0x1a(%rip)
1a78(7): mov 0x206559(%rip),%rax
1a7f(3): test %rax,%rax
1a82(2): jz 0xe(%rip)
1a84(1): pop %rbp
1a85(2): jmp %rax
1a87(9): nop 0x0(%rax,%rax,1)
1a90(1): pop %rbp
1a91(1): ret near (%rsp)

"__do_global_dtors_aux" :
1aa0(7): cmp $0x0,0x206621(%rip)
1aa7(2): jnz 0x31(%rip)
1aa9(8): cmp $0x0,0x20652f(%rip)
1ab1(1): push %rbp
1ab2(3): mov %rsp,%rbp
1ab5(2): jz 0xe(%rip)
1ab7(7): mov 0x20654a(%rip),%rdi
1abe(5): call 0xfffffca2(%rip)
1ac3(5): call 0xffffff4d(%rip)
1ac8(7): mov $0x1,0x2065f9(%rip)
1acf(1): pop %rbp
1ad0(1): ret near (%rsp)
1ad1(7): nop 0x0(%rax)
1ad8(2): REP ret near (%rsp)

"frame_dummy" :
1ae0(1): push %rbp
1ae1(3): mov %rsp,%rbp
1ae4(1): pop %rbp
1ae5(5): jmp 0xffffff6b(%rip)

"adjust_column" :
1af0(7): cmp $0x0,0x2065ea(%rip)
1af7(2): jnz 0x16(%rip)
1af9(4): cmp $0x8,%sil
1afd(2): jz 0x1b(%rip)
1aff(2): xor %eax,%eax
1b01(4): cmp $0xd,%sil
1b05(2): jz 0xc(%rip)
1b07(4): cmp $0x9,%sil
1b0b(2): jz 0x25(%rip)
1b0d(4): lea 0x1(%rdi),%rax
1b11(2): REP ret near (%rsp)
1b13(5): nop 0x0(%rax,%rax,1)
1b18(4): lea 0xffffffff(%rdi),%rdx
1b1c(3): test %rdi,%rdi
1b1f(5): mov $0x0,%eax
1b24(4): cmovne %rdx,%rax
1b28(1): ret near (%rsp)
1b29(7): nop 0x0(%rax)
1b30(4): and $0xfffffff8,%rdi
1b34(4): lea 0x8(%rdi),%rax
1b38(1): ret near (%rsp)

"fold_file" :
1b40(2): push %r15
1b42(2): push %r14
1b44(5): mov $0x2,%ecx
1b49(2): push %r13
1b4b(2): push %r12
1b4d(1): push %rbp
1b4e(1): push %rbx
1b4f(4): sub $0x28,%rsp
1b53(5): mov %rdi,0x10(%rsp)
1b58(5): mov %rsi,0x8(%rsp)
1b5d(3): mov %rdi,%rsi
1b60(7): lea 0x3b5b(%rip),%rdi
1b67(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1b69(3): setnbe %al
1b6c(2): sbb $0x0,%al
1b6e(2): test %al,%al
1b70(6): jnz 0x290(%rip)
1b76(7): mov 0x206513(%rip),%r12
1b7d(7): mov $0x1,0x20655c(%rip)
1b84(5): call 0xfffff90c(%rip)
1b89(5): mov %rax,0x18(%rsp)
1b8e(3): test %r12,%r12
1b91(6): jz 0x296(%rip)
1b97(5): mov $0x2,%esi
1b9c(3): mov %r12,%rdi
1b9f(2): xor %ebx,%ebx
1ba1(3): xor %r15d,%r15d
1ba4(5): call 0x7ec(%rip)
1ba9(5): mov 0x8(%r12),%rax
1bae(5): cmp 0x10(%r12),%rax
1bb3(6): jnb 0x166(%rip)
1bb9(4): lea 0x1(%rax),%rdx
1bbd(5): mov %rdx,0x8(%r12)
1bc2(3): movzx (%rax),%ebp
1bc5(4): lea 0x1(%rbx),%r14
1bc9(7): cmp 0x206508(%rip),%r14
1bd0(7): mov 0x2064f9(%rip),%r13
1bd7(6): jnb 0x1c1(%rip)
1bdd(3): cmp $0xa,%ebp
1be0(6): jz 0x1da(%rip)
1be6(3): mov %ebp,%r14d
1be9(4): movsx %bpl,%ebp
1bed(3): mov %r15,%rdi
1bf0(2): mov %ebp,%esi
1bf2(5): call 0xfffffefe(%rip)
1bf7(5): cmp 0x8(%rsp),%rax
1bfc(3): mov %rax,%r15
1bff(6): jbe 0x1e9(%rip)
1c05(7): cmp $0x0,0x2064d6(%rip)
1c0c(2): jnz 0x3c(%rip)
1c0e(3): test %rbx,%rbx
1c11(6): jz 0xef(%rip)
1c17(6): mov $0xa,0x0(%r13,%rbx,1)
1c1d(7): mov 0x206464(%rip),%rcx
1c24(4): lea 0x1(%rbx),%rdx
1c28(3): mov %r13,%rdi
1c2b(5): mov $0x1,%esi
1c30(2): xor %ebx,%ebx
1c32(3): xor %r15d,%r15d
1c35(5): call 0xfffffa3b(%rip)
1c3a(7): mov 0x20648f(%rip),%r13
1c41(2): jmp 0xffffffac(%rip)
1c43(5): nop 0x0(%rax,%rax,1)
1c48(3): test %rbx,%rbx
1c4b(6): jz 0xb5(%rip)
1c51(5): call 0xfffffaff(%rip)
1c56(3): mov %rbx,%r15
1c59(3): mov (%rax),%rcx
1c5c(2): jmp 0xc(%rip)
1c5e(2): nop 
1c60(3): test %rdx,%rdx
1c63(3): mov %rdx,%r15
1c66(2): jz 0xffffffb1(%rip)
1c68(6): movzx 0xffffffff(%r13,%r15,1),%eax
1c6e(4): lea 0xffffffff(%r15),%rdx
1c72(4): test $0x1,0x0(%rcx,%rax,2)
1c76(2): jz 0xffffffea(%rip)
1c78(7): mov 0x206409(%rip),%rcx
1c7f(3): mov %r13,%rdi
1c82(3): mov %r15,%rdx
1c85(5): mov $0x1,%esi
1c8a(5): call 0xfffff9e6(%rip)
1c8f(7): mov 0x2063f2(%rip),%rdi
1c96(4): mov 0x28(%rdi),%rax
1c9a(4): cmp 0x30(%rdi),%rax
1c9e(6): jnb 0x240(%rip)
1ca4(4): lea 0x1(%rax),%rdx
1ca8(4): mov %rdx,0x28(%rdi)
1cac(3): mov $0xa,(%rax)
1caf(7): mov 0x20641a(%rip),%r13
1cb6(3): sub %r15,%rbx
1cb9(3): mov %rbx,%rdx
1cbc(5): lea 0x0(%r13,%r15,1),%rsi
1cc1(3): mov %r13,%rdi
1cc4(5): call 0xfffff9ec(%rip)
1cc9(3): test %rbx,%rbx
1ccc(6): jz 0x20a(%rip)
1cd2(4): lea 0x0(%rbx,%r13,1),%r10
1cd6(3): mov %r13,%r8
1cd9(3): xor %r15d,%r15d
1cdc(4): nop 0x0(%rax)
1ce0(4): movsx (%r8),%esi
1ce4(3): mov %r15,%rdi
1ce7(5): call 0xfffffe09(%rip)
1cec(4): add $0x1,%r8
1cf0(3): mov %rax,%r15
1cf3(3): cmp %r8,%r10
1cf6(2): jnz 0xffffffea(%rip)
1cf8(5): jmp 0xfffffef5(%rip)
1cfd(3): nop (%rax)
1d00(4): mov %r14b,0x0(%r13)
1d04(5): mov 0x8(%r12),%rax
1d09(5): mov $0x1,%ebx
1d0e(5): cmp 0x10(%r12),%rax
1d13(6): jb 0xfffffea6(%rip)
1d19(3): mov %r12,%rdi
1d1c(5): call 0xfffff744(%rip)
1d21(3): cmp $0xff,%eax
1d24(2): mov %eax,%ebp
1d26(6): jnz 0xfffffe9f(%rip)
1d2c(5): mov 0x18(%rsp),%rax
1d31(3): test %rbx,%rbx
1d34(2): mov (%rax),%ebp
1d36(2): jz 0x1d(%rip)
1d38(7): mov 0x206349(%rip),%rcx
1d3f(7): mov 0x20638a(%rip),%rdi
1d46(3): mov %rbx,%rdx
1d49(5): mov $0x1,%esi
1d4e(5): call 0xfffff922(%rip)
1d53(5): test $0x20,(%r12)
1d58(6): jnz 0x108(%rip)
1d5e(5): mov 0x10(%rsp),%rsi
1d63(7): lea 0x3958(%rip),%rdi
1d6a(5): mov $0x2,%ecx
1d6f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1d71(3): setnbe %al
1d74(2): sbb $0x0,%al
1d76(2): test %al,%al
1d78(6): jnz 0x148(%rip)
1d7e(5): mov $0x1,%ebx
1d83(4): add $0x28,%rsp
1d87(2): mov %ebx,%eax
1d89(1): pop %rbx
1d8a(1): pop %rbp
1d8b(2): pop %r12
1d8d(2): pop %r13
1d8f(2): pop %r14
1d91(2): pop %r15
1d93(1): ret near (%rsp)
1d94(4): nop 0x0(%rax)
1d98(7): lea 0x206339(%rip),%rsi
1d9f(3): mov %r13,%rdi
1da2(5): call 0x2ace(%rip)
1da7(3): cmp $0xa,%ebp
1daa(3): mov %rax,%r13
1dad(7): mov %rax,0x20631c(%rip)
1db4(6): jnz 0xfffffe32(%rip)
1dba(6): mov $0xa,0x0(%r13,%rbx,1)
1dc0(7): mov 0x2062c1(%rip),%rcx
1dc7(3): mov %r14,%rdx
1dca(5): mov $0x1,%esi
1dcf(3): mov %r13,%rdi
1dd2(2): xor %ebx,%ebx
1dd4(3): xor %r15d,%r15d
1dd7(5): call 0xfffff899(%rip)
1ddc(5): jmp 0xfffffdcd(%rip)
1de1(7): nop 0x0(%rax)
1de8(5): mov %r14b,0x0(%r13,%rbx,1)
1ded(4): add $0x1,%rbx
1df1(5): jmp 0xfffffdb8(%rip)
1df6(a): nop 0x0(%rax,%rax,1)
1e00(5): mov 0x10(%rsp),%rdi
1e05(7): lea 0x3866(%rip),%rsi
1e0c(5): call 0xfffff8d4(%rip)
1e11(3): mov %rax,%r12
1e14(5): call 0xfffff67c(%rip)
1e19(3): test %r12,%r12
1e1c(5): mov %rax,0x18(%rsp)
1e21(6): jnz 0xfffffd76(%rip)
1e27(5): mov 0x10(%rsp),%rdx
1e2c(5): mov $0x3,%esi
1e31(2): xor %edi,%edi
1e33(2): xor %ebx,%ebx
1e35(5): call 0x20cb(%rip)
1e3a(3): mov %rax,%rcx
1e3d(5): mov 0x18(%rsp),%rax
1e42(7): lea 0x382f(%rip),%rdx
1e49(2): xor %edi,%edi
1e4b(2): mov (%rax),%esi
1e4d(2): xor %eax,%eax
1e4f(5): call 0xfffff871(%rip)
1e54(5): jmp 0xffffff2f(%rip)
1e59(7): nop 0x0(%rax)
1e60(5): mov 0x10(%rsp),%rbx
1e65(2): xor %edi,%edi
1e67(5): mov $0x3,%esi
1e6c(3): mov %rbx,%rdx
1e6f(5): call 0x2091(%rip)
1e74(7): lea 0x37fd(%rip),%rdx
1e7b(3): mov %rax,%rcx
1e7e(2): xor %edi,%edi
1e80(2): xor %eax,%eax
1e82(2): mov %ebp,%esi
1e84(5): call 0xfffff83c(%rip)
1e89(7): lea 0x3832(%rip),%rdi
1e90(3): mov %rbx,%rsi
1e93(5): mov $0x2,%ecx
1e98(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e9a(3): setnbe %al
1e9d(2): sbb $0x0,%al
1e9f(2): xor %ebx,%ebx
1ea1(2): test %al,%al
1ea3(6): jz 0xfffffee0(%rip)
1ea9(3): mov %r12,%rdi
1eac(5): call 0x3044(%rip)
1eb1(5): jmp 0xfffffed2(%rip)
1eb6(a): nop 0x0(%rax,%rax,1)
1ec0(3): mov %r12,%rdi
1ec3(5): call 0x302d(%rip)
1ec8(3): cmp $0xff,%eax
1ecb(6): jnz 0xfffffeb3(%rip)
1ed1(5): jmp 0xffffff56(%rip)
1ed6(3): xor %r15d,%r15d
1ed9(5): jmp 0xfffffd14(%rip)
1ede(5): mov $0xa,%esi
1ee3(5): call 0xfffff68d(%rip)
1ee8(5): jmp 0xfffffdc7(%rip)

"usage" :
1ef0(2): push %r13
1ef2(2): push %r12
1ef4(5): mov $0x5,%edx
1ef9(1): push %rbp
1efa(1): push %rbx
1efb(2): mov %edi,%ebp
1efd(7): sub $0x88,%rsp
1f04(7): mov 0x2061ed(%rip),%rbx
1f0b(9): mov $0x28,%rax
1f14(5): mov %rax,0x78(%rsp)
1f19(2): xor %eax,%eax
1f1b(2): test %edi,%edi
1f1d(2): jz 0x30(%rip)
1f1f(7): lea 0x344a(%rip),%rsi
1f26(2): xor %edi,%edi
1f28(5): call 0xfffff5d8(%rip)
1f2d(7): mov 0x20618c(%rip),%rdi
1f34(3): mov %rax,%rdx
1f37(3): mov %rbx,%rcx
1f3a(5): mov $0x1,%esi
1f3f(2): xor %eax,%eax
1f41(5): call 0xfffff7df(%rip)
1f46(2): mov %ebp,%edi
1f48(5): call 0xfffff7b8(%rip)
1f4d(7): lea 0x3444(%rip),%rsi
1f54(2): xor %edi,%edi
1f56(5): call 0xfffff5aa(%rip)
1f5b(3): mov %rbx,%rdx
1f5e(3): mov %rax,%rsi
1f61(5): mov $0x1,%edi
1f66(2): xor %eax,%eax
1f68(5): call 0xfffff738(%rip)
1f6d(7): mov 0x206114(%rip),%rbx
1f74(7): lea 0x3445(%rip),%rsi
1f7b(5): mov $0x5,%edx
1f80(2): xor %edi,%edi
1f82(5): call 0xfffff57e(%rip)
1f87(3): mov %rbx,%rsi
1f8a(3): mov %rax,%rdi
1f8d(5): call 0xfffff663(%rip)
1f92(7): mov 0x2060ef(%rip),%rbx
1f99(7): lea 0x3460(%rip),%rsi
1fa0(5): mov $0x5,%edx
1fa5(2): xor %edi,%edi
1fa7(5): call 0xfffff559(%rip)
1fac(3): mov %rbx,%rsi
1faf(3): mov %rax,%rdi
1fb2(5): call 0xfffff63e(%rip)
1fb7(7): mov 0x2060ca(%rip),%rbx
1fbe(7): lea 0x3473(%rip),%rsi
1fc5(5): mov $0x5,%edx
1fca(2): xor %edi,%edi
1fcc(5): call 0xfffff534(%rip)
1fd1(3): mov %rbx,%rsi
1fd4(3): mov %rax,%rdi
1fd7(5): call 0xfffff619(%rip)
1fdc(7): mov 0x2060a5(%rip),%rbx
1fe3(7): lea 0x349e(%rip),%rsi
1fea(5): mov $0x5,%edx
1fef(2): xor %edi,%edi
1ff1(5): call 0xfffff50f(%rip)
1ff6(3): mov %rbx,%rsi
1ff9(3): mov %rax,%rdi
1ffc(5): call 0xfffff5f4(%rip)
2001(7): mov 0x206080(%rip),%rbx
2008(7): lea 0x3511(%rip),%rsi
200f(5): mov $0x5,%edx
2014(2): xor %edi,%edi
2016(5): call 0xfffff4ea(%rip)
201b(3): mov %rbx,%rsi
201e(3): mov %rax,%rdi
2021(5): call 0xfffff5cf(%rip)
2026(7): mov 0x20605b(%rip),%rbx
202d(7): lea 0x351c(%rip),%rsi
2034(5): mov $0x5,%edx
2039(2): xor %edi,%edi
203b(5): call 0xfffff4c5(%rip)
2040(3): mov %rbx,%rsi
2043(3): mov %rax,%rdi
2046(7): lea 0x3217(%rip),%rbx
204d(5): call 0xfffff5a3(%rip)
2052(7): lea 0x3210(%rip),%rax
2059(7): lea 0x324a(%rip),%rcx
2060(9): mov $0x0,0x60(%rsp)
2069(9): mov $0x0,0x68(%rsp)
2072(3): mov %rsp,%rdx
2075(4): mov %rax,(%rsp)
2079(7): lea 0x31eb(%rip),%rax
2080(5): mov %rcx,0x30(%rsp)
2085(7): lea 0x3228(%rip),%rcx
208c(5): mov %rax,0x8(%rsp)
2091(7): lea 0x324b(%rip),%rax
2098(5): mov %rcx,0x40(%rsp)
209d(7): lea 0x321a(%rip),%rcx
20a4(5): mov %rax,0x10(%rsp)
20a9(7): lea 0x31cb(%rip),%rax
20b0(5): mov %rcx,0x50(%rsp)
20b5(5): mov %rax,0x18(%rsp)
20ba(7): lea 0x31d0(%rip),%rax
20c1(5): mov %rax,0x20(%rsp)
20c6(7): lea 0x31ce(%rip),%rax
20cd(5): mov %rax,0x28(%rsp)
20d2(5): mov %rax,0x38(%rsp)
20d7(5): mov %rax,0x48(%rsp)
20dc(5): mov %rax,0x58(%rsp)
20e1(7): nop 0x0(%rax)
20e8(4): add $0x10,%rdx
20ec(3): mov (%rdx),%rdi
20ef(3): test %rdi,%rdi
20f2(2): jz 0x15(%rip)
20f4(5): mov $0x5,%ecx
20f9(3): mov %rbx,%rsi
20fc(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
20fe(3): setnbe %al
2101(2): sbb $0x0,%al
2103(2): test %al,%al
2105(2): jnz 0xffffffe3(%rip)
2107(4): mov 0x8(%rdx),%r12
210b(2): xor %edi,%edi
210d(5): mov $0x5,%edx
2112(7): lea 0x31af(%rip),%rsi
2119(3): test %r12,%r12
211c(6): jz 0xc7(%rip)
2122(5): call 0xfffff3de(%rip)
2127(7): lea 0x345a(%rip),%rcx
212e(7): lea 0x31aa(%rip),%rdx
2135(3): mov %rax,%rsi
2138(5): mov $0x1,%edi
213d(2): xor %eax,%eax
213f(5): call 0xfffff561(%rip)
2144(2): xor %esi,%esi
2146(5): mov $0x5,%edi
214b(5): call 0xfffff545(%rip)
2150(3): test %rax,%rax
2153(2): jz 0x1e(%rip)
2155(7): lea 0x3191(%rip),%rsi
215c(5): mov $0x3,%edx
2161(3): mov %rax,%rdi
2164(5): call 0xfffff33c(%rip)
2169(2): test %eax,%eax
216b(6): jnz 0x10d(%rip)
2171(7): lea 0x3179(%rip),%rsi
2178(2): xor %edi,%edi
217a(5): mov $0x5,%edx
217f(5): call 0xfffff381(%rip)
2184(7): lea 0x30d9(%rip),%rcx
218b(7): lea 0x33f6(%rip),%rdx
2192(3): mov %rax,%rsi
2195(5): mov $0x1,%edi
219a(2): xor %eax,%eax
219c(5): call 0xfffff504(%rip)
21a1(3): cmp %rbx,%r12
21a4(7): lea 0x30da(%rip),%rcx
21ab(7): lea 0x3a4f(%rip),%rbx
21b2(4): cmove %rcx,%rbx
21b6(7): lea 0x343b(%rip),%rsi
21bd(2): xor %edi,%edi
21bf(5): mov $0x5,%edx
21c4(5): call 0xfffff33c(%rip)
21c9(3): mov %rbx,%rcx
21cc(3): mov %rax,%rsi
21cf(3): mov %r12,%rdx
21d2(5): mov $0x1,%edi
21d7(2): xor %eax,%eax
21d9(5): call 0xfffff4c7(%rip)
21de(5): jmp 0xfffffd68(%rip)
21e3(5): call 0xfffff31d(%rip)
21e8(7): lea 0x3399(%rip),%rcx
21ef(7): lea 0x30e9(%rip),%rdx
21f6(3): mov %rax,%rsi
21f9(5): mov $0x1,%edi
21fe(2): xor %eax,%eax
2200(5): call 0xfffff4a0(%rip)
2205(2): xor %esi,%esi
2207(5): mov $0x5,%edi
220c(5): call 0xfffff484(%rip)
2211(3): test %rax,%rax
2214(2): jz 0x1a(%rip)
2216(7): lea 0x30d0(%rip),%rsi
221d(5): mov $0x3,%edx
2222(3): mov %rax,%rdi
2225(5): call 0xfffff27b(%rip)
222a(2): test %eax,%eax
222c(2): jnz 0x45(%rip)
222e(7): lea 0x30bc(%rip),%rsi
2235(5): mov $0x5,%edx
223a(2): xor %edi,%edi
223c(7): lea 0x3021(%rip),%r12
2243(7): lea 0x303b(%rip),%rbx
224a(5): call 0xfffff2b6(%rip)
224f(7): lea 0x300e(%rip),%rcx
2256(7): lea 0x332b(%rip),%rdx
225d(3): mov %rax,%rsi
2260(5): mov $0x1,%edi
2265(2): xor %eax,%eax
2267(5): call 0xfffff439(%rip)
226c(5): jmp 0xffffff4a(%rip)
2271(7): lea 0x2fec(%rip),%r12
2278(7): mov 0x205e09(%rip),%r13
227f(7): lea 0x332a(%rip),%rsi
2286(2): xor %edi,%edi
2288(5): mov $0x5,%edx
228d(5): call 0xfffff273(%rip)
2292(3): mov %r13,%rsi
2295(3): mov %rax,%rdi
2298(5): call 0xfffff358(%rip)
229d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
22b0(7): mov %rdi,0x205e39(%rip)
22b7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
22c0(7): mov %dil,0x205e21(%rip)
22c7(1): ret near (%rsp)

"close_stdout" :
22d0(1): push %rbp
22d1(1): push %rbx
22d2(4): sub $0x8,%rsp
22d6(7): mov 0x205dab(%rip),%rdi
22dd(5): call 0x2dc3(%rip)
22e2(2): test %eax,%eax
22e4(2): jz 0x18(%rip)
22e6(5): call 0xfffff1aa(%rip)
22eb(7): cmp $0x0,0x205df6(%rip)
22f2(3): mov %rax,%rbx
22f5(2): jz 0x1e(%rip)
22f7(3): cmp $0x20,(%rax)
22fa(2): jnz 0x19(%rip)
22fc(7): mov 0x205dbd(%rip),%rdi
2303(5): call 0x2d9d(%rip)
2308(2): test %eax,%eax
230a(2): jnz 0x48(%rip)
230c(4): add $0x8,%rsp
2310(1): pop %rbx
2311(1): pop %rbp
2312(1): ret near (%rsp)
2313(7): lea 0x334e(%rip),%rsi
231a(2): xor %edi,%edi
231c(5): mov $0x5,%edx
2321(5): call 0xfffff1df(%rip)
2326(7): mov 0x205dc3(%rip),%rdi
232d(3): mov %rax,%rbp
2330(3): test %rdi,%rdi
2333(2): jz 0x2a(%rip)
2335(5): call 0x1b9b(%rip)
233a(2): mov (%rbx),%esi
233c(7): lea 0x3331(%rip),%rdx
2343(3): mov %rax,%rcx
2346(3): mov %rbp,%r8
2349(2): xor %edi,%edi
234b(2): xor %eax,%eax
234d(5): call 0xfffff373(%rip)
2352(6): mov 0x205cc0(%rip),%edi
2358(5): call 0xfffff158(%rip)
235d(2): mov (%rbx),%esi
235f(7): lea 0x3312(%rip),%rdx
2366(3): mov %rax,%rcx
2369(2): xor %edi,%edi
236b(2): xor %eax,%eax
236d(5): call 0xfffff353(%rip)
2372(2): jmp 0xffffffe0(%rip)

"fadvise" :
2390(3): test %rdi,%rdi
2393(2): jz 0x1d(%rip)
2395(1): push %rbx
2396(2): mov %esi,%ebx
2398(5): call 0xfffff288(%rip)
239d(2): mov %ebx,%ecx
239f(2): xor %edx,%edx
23a1(2): xor %esi,%esi
23a3(1): pop %rbx
23a4(2): mov %eax,%edi
23a6(5): jmp 0xfffff22a(%rip)
23ab(5): nop 0x0(%rax,%rax,1)
23b0(2): REP ret near (%rsp)

"set_program_name" :
23c0(3): test %rdi,%rdi
23c3(1): push %rbx
23c4(2): jz 0x79(%rip)
23c6(5): mov $0x2f,%esi
23cb(3): mov %rdi,%rbx
23ce(5): call 0xfffff1b2(%rip)
23d3(3): test %rax,%rax
23d6(2): jz 0x57(%rip)
23d8(4): lea 0x1(%rax),%r8
23dc(3): mov %r8,%rdx
23df(3): sub %rbx,%rdx
23e2(4): cmp $0x6,%rdx
23e6(2): jle 0x47(%rip)
23e8(4): lea 0xfffffffa(%rax),%rsi
23ec(7): lea 0x32c5(%rip),%rdi
23f3(5): mov $0x7,%ecx
23f8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
23fa(3): setnbe %dl
23fd(3): sbb $0x0,%dl
2400(2): test %dl,%dl
2402(2): jnz 0x2b(%rip)
2404(7): lea 0x32b5(%rip),%rdi
240b(5): mov $0x3,%ecx
2410(3): mov %r8,%rsi
2413(3): mov %r8,%rbx
2416(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2418(3): setnbe %dl
241b(3): sbb $0x0,%dl
241e(2): test %dl,%dl
2420(2): jnz 0xd(%rip)
2422(4): lea 0x4(%rax),%rbx
2426(7): mov %rbx,0x205c53(%rip)
242d(7): mov %rbx,0x205cc4(%rip)
2434(7): mov %rbx,0x205c6d(%rip)
243b(1): pop %rbx
243c(1): ret near (%rsp)
243d(7): mov 0x205c7c(%rip),%rcx
2444(7): lea 0x3235(%rip),%rdi
244b(5): mov $0x37,%edx
2450(5): mov $0x1,%esi
2455(5): call 0xfffff2bb(%rip)
245a(5): call 0xfffff026(%rip)

"gettext_quote.part.1" :
2460(1): push %rbp
2461(1): push %rbx
2462(3): mov %rdi,%rbp
2465(2): mov %esi,%ebx
2467(4): sub $0x8,%rsp
246b(5): call 0x2d15(%rip)
2470(3): movzx (%rax),%edx
2473(3): and $0xdf,%edx
2476(3): cmp $0x55,%dl
2479(2): jz 0x77(%rip)
247b(3): cmp $0x47,%dl
247e(2): jz 0x22(%rip)
2480(7): lea 0x324c(%rip),%rax
2487(7): lea 0x3247(%rip),%rdx
248e(3): cmp $0x9,%ebx
2491(4): cmovne %rdx,%rax
2495(4): add $0x8,%rsp
2499(1): pop %rbx
249a(1): pop %rbp
249b(1): ret near (%rsp)
249c(4): nop 0x0(%rax)
24a0(4): movzx 0x1(%rax),%edx
24a4(3): and $0xdf,%edx
24a7(3): cmp $0x42,%dl
24aa(2): jnz 0xffffffd6(%rip)
24ac(4): cmp $0x31,0x2(%rax)
24b0(2): jnz 0xffffffd0(%rip)
24b2(4): cmp $0x38,0x3(%rax)
24b6(2): jnz 0xffffffca(%rip)
24b8(4): cmp $0x30,0x4(%rax)
24bc(2): jnz 0xffffffc4(%rip)
24be(4): cmp $0x33,0x5(%rax)
24c2(2): jnz 0xffffffbe(%rip)
24c4(4): cmp $0x30,0x6(%rax)
24c8(2): jnz 0xffffffb8(%rip)
24ca(4): cmp $0x0,0x7(%rax)
24ce(2): jnz 0xffffffb2(%rip)
24d0(4): cmp $0x60,0x0(%rbp)
24d4(7): lea 0x31f1(%rip),%rax
24db(7): lea 0x31ee(%rip),%rdx
24e2(4): cmovne %rdx,%rax
24e6(4): add $0x8,%rsp
24ea(1): pop %rbx
24eb(1): pop %rbp
24ec(1): ret near (%rsp)
24ed(3): nop (%rax)
24f0(4): movzx 0x1(%rax),%edx
24f4(3): and $0xdf,%edx
24f7(3): cmp $0x54,%dl
24fa(2): jnz 0xffffff86(%rip)
24fc(4): movzx 0x2(%rax),%edx
2500(3): and $0xdf,%edx
2503(3): cmp $0x46,%dl
2506(6): jnz 0xffffff7a(%rip)
250c(4): cmp $0x2d,0x3(%rax)
2510(6): jnz 0xffffff70(%rip)
2516(4): cmp $0x38,0x4(%rax)
251a(6): jnz 0xffffff66(%rip)
2520(4): cmp $0x0,0x5(%rax)
2524(6): jnz 0xffffff5c(%rip)
252a(4): cmp $0x60,0x0(%rbp)
252e(7): lea 0x318f(%rip),%rax
2535(7): lea 0x318c(%rip),%rdx
253c(4): cmovne %rdx,%rax
2540(4): add $0x8,%rsp
2544(1): pop %rbx
2545(1): pop %rbp
2546(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2550(2): push %r15
2552(2): push %r14
2554(3): mov %r8d,%r15d
2557(2): push %r13
2559(2): push %r12
255b(3): mov %rdi,%r14
255e(1): push %rbp
255f(1): push %rbx
2560(3): mov %r9d,%ebx
2563(3): mov %rsi,%r13
2566(3): mov %rcx,%rbp
2569(3): and $0x2,%ebx
256c(7): sub $0xb8,%rsp
2573(8): mov 0xf0(%rsp),%rax
257b(5): mov %rdx,0x10(%rsp)
2580(5): mov %r8d,0x8(%rsp)
2585(5): mov %r9d,0x78(%rsp)
258a(5): mov %rax,0x20(%rsp)
258f(8): mov 0xf8(%rsp),%rax
2597(5): mov %rax,0x68(%rsp)
259c(8): mov 0x100(%rsp),%rax
25a4(5): mov %rax,0x60(%rsp)
25a9(9): mov $0x28,%rax
25b2(8): mov %rax,0xa8(%rsp)
25ba(2): xor %eax,%eax
25bc(5): call 0xffffef54(%rip)
25c1(4): cmp $0xa,%r15d
25c5(5): mov %rax,0x58(%rsp)
25ca(6): jnbe 0x11b5(%rip)
25d0(7): lea 0x3169(%rip),%rcx
25d7(3): mov %r15d,%edx
25da(4): movsxd 0x0(%rcx,%rdx,4),%rax
25de(3): add %rcx,%rax
25e1(2): jmp %rax
25e3(5): mov $0x1,0xe(%rsp)
25e8(5): mov $0x0,0x7c(%rsp)
25ed(3): xor %r12d,%r12d
25f0(9): mov $0x0,0x50(%rsp)
25f9(5): mov $0x1,0xf(%rsp)
25fe(5): mov $0x0,0xd(%rsp)
2603(7): lea 0x30cb(%rip),%rax
260a(9): mov $0x1,0x18(%rsp)
2613(3): xor %r15d,%r15d
2616(8): mov $0x2,0x8(%rsp)
261e(5): mov %rax,0x48(%rsp)
2623(3): xor %r11d,%r11d
2626(3): mov %rbp,%rax
2629(3): mov %r12d,%r8d
262c(3): mov %r11,%rbp
262f(3): mov %rax,%r11
2632(6): nop 0x0(%rax,%rax,1)
2638(3): cmp %rbp,%r11
263b(4): setnz %r12b
263f(4): cmp $0xffffffff,%r11
2643(2): jnz 0xf(%rip)
2645(5): mov 0x10(%rsp),%rax
264a(4): cmp $0x0,0x0(%rax,%rbp,1)
264e(4): setnz %r12b
2652(3): test %r12b,%r12b
2655(6): jz 0x65b(%rip)
265b(5): cmp $0x2,0x8(%rsp)
2660(5): mov 0x10(%rsp),%rdi
2665(4): lea 0x0(%rdi,%rbp,1),%r9
2669(3): setnz %al
266c(4): and 0xd(%rsp),%al
2670(3): mov %eax,%r10d
2673(6): jz 0xad(%rip)
2679(5): mov 0x18(%rsp),%rax
267e(3): test %rax,%rax
2681(6): jz 0x42f(%rip)
2687(4): cmp $0xffffffff,%r11
268b(5): lea 0x0(%rbp,%rax,1),%rbx
2690(2): jnz 0x30(%rip)
2692(4): cmp $0x1,%rax
2696(2): jbe 0x2a(%rip)
2698(5): mov %r8b,0x38(%rsp)
269d(5): mov %r10b,0x30(%rsp)
26a2(5): mov %r9,0x28(%rsp)
26a7(5): call 0xffffee79(%rip)
26ac(6): movzx 0x38(%rsp),%r8d
26b2(6): movzx 0x30(%rsp),%r10d
26b8(3): mov %rax,%r11
26bb(5): mov 0x28(%rsp),%r9
26c0(3): cmp %r11,%rbx
26c3(5): mov %r10b,0x28(%rsp)
26c8(6): jnbe 0x5b8(%rip)
26ce(5): mov 0x18(%rsp),%rdx
26d3(5): mov 0x48(%rsp),%rsi
26d8(3): mov %r9,%rdi
26db(5): mov %r11,0x40(%rsp)
26e0(5): mov %r8b,0x38(%rsp)
26e5(5): mov %r9,0x30(%rsp)
26ea(5): call 0xffffeef6(%rip)
26ef(2): test %eax,%eax
26f1(5): mov 0x30(%rsp),%r9
26f6(6): movzx 0x38(%rsp),%r8d
26fc(5): mov 0x40(%rsp),%r11
2701(6): jnz 0x57f(%rip)
2707(5): cmp $0x0,0xf(%rsp)
270c(6): movzx 0x28(%rsp),%r10d
2712(6): jnz 0xf83(%rip)
2718(8): nop 0x0(%rax,%rax,1)
2720(4): movzx (%r9),%ebx
2724(3): cmp $0x7e,%bl
2727(6): jnbe 0x321(%rip)
272d(7): lea 0x3038(%rip),%rcx
2734(3): movzx %bl,%edx
2737(4): movsxd 0x0(%rcx,%rdx,4),%rax
273b(3): add %rcx,%rax
273e(2): jmp %rax
2740(3): xor %r10d,%r10d
2743(4): cmp $0x1,%r11
2747(3): setnz %al
274a(4): cmp $0xffffffff,%r11
274e(2): jnz 0xe(%rip)
2750(5): mov 0x10(%rsp),%rax
2755(4): cmp $0x0,0x1(%rax)
2759(3): setnz %al
275c(5): cmp $0x2,0x8(%rsp)
2761(3): setz %dl
2764(2): test %al,%al
2766(6): jz 0x252(%rip)
276c(3): xor %r12d,%r12d
276f(2): xor %eax,%eax
2771(7): nop 0x0(%rax)
2778(5): cmp $0x1,0xd(%rsp)
277d(6): jnz 0x115(%rip)
2783(2): test %dl,%dl
2785(6): jnz 0x10d(%rip)
278b(5): mov 0x20(%rsp),%rsi
2790(3): test %rsi,%rsi
2793(2): jz 0x16(%rip)
2795(2): mov %ebx,%edx
2797(3): shr $0x5,%dl
279a(3): movzx %dl,%edx
279d(3): mov 0x0(%rsi,%rdx,4),%edx
27a0(3): bt %ebx,%edx
27a3(6): jb 0x150(%rip)
27a9(3): test %r10b,%r10b
27ac(6): jnz 0x147(%rip)
27b2(3): xor $0x1,%eax
27b5(4): add $0x1,%rbp
27b9(3): and %r8d,%eax
27bc(2): test %al,%al
27be(2): jz 0x22(%rip)
27c0(3): cmp %r15,%r13
27c3(2): jbe 0x7(%rip)
27c5(5): mov $0x27,0x0(%r14,%r15,1)
27ca(4): lea 0x1(%r15),%rax
27ce(3): cmp %rax,%r13
27d1(2): jbe 0x8(%rip)
27d3(6): mov $0x27,0x1(%r14,%r15,1)
27d9(4): add $0x2,%r15
27dd(3): xor %r8d,%r8d
27e0(3): cmp %r13,%r15
27e3(2): jnb 0x6(%rip)
27e5(4): mov %bl,0x0(%r14,%r15,1)
27e9(5): movzx 0xe(%rsp),%edi
27ee(4): add $0x1,%r15
27f2(5): mov $0x0,%eax
27f7(3): test %r12b,%r12b
27fa(3): cmove %eax,%edi
27fd(5): mov %dil,0xe(%rsp)
2802(5): jmp 0xfffffe36(%rip)
2807(9): nop 0x0(%rax,%rax,1)
2810(3): xor %r10d,%r10d
2813(4): mov 0x8(%rsp),%eax
2817(3): cmp $0x2,%eax
281a(6): jz 0x5be(%rip)
2820(3): cmp $0x5,%eax
2823(6): jz 0x575(%rip)
2829(3): cmp $0x2,%eax
282c(5): mov $0x3f,%ebx
2831(3): setz %dl
2834(3): xor %r12d,%r12d
2837(2): xor %eax,%eax
2839(5): jmp 0xffffff3f(%rip)
283e(2): nop 
2840(3): xor %r10d,%r10d
2843(5): cmp $0x2,0x8(%rsp)
2848(6): jz 0x508(%rip)
284e(5): mov %r12b,0x7c(%rsp)
2853(2): xor %edx,%edx
2855(2): xor %eax,%eax
2857(5): mov $0x27,%ebx
285c(5): jmp 0xffffff1c(%rip)
2861(7): nop 0x0(%rax)
2868(5): mov $0x9,%edx
286d(5): mov $0x74,%ebx
2872(5): cmp $0x2,0x8(%rsp)
2877(3): setz %al
287a(4): and 0xf(%rsp),%al
287e(6): jnz 0x150(%rip)
2884(5): cmp $0x0,0xd(%rsp)
2889(2): jnz 0x67(%rip)
288b(2): mov %edx,%ebx
288d(3): xor %r12d,%r12d
2890(2): xor %eax,%eax
2892(5): cmp $0x0,0xf(%rsp)
2897(6): jnz 0xfffffef4(%rip)
289d(5): jmp 0xffffff0c(%rip)
28a2(6): nop 0x0(%rax,%rax,1)
28a8(5): mov $0x8,%edx
28ad(5): mov $0x62,%ebx
28b2(2): jmp 0xffffffd2(%rip)
28b4(4): nop 0x0(%rax)
28b8(5): cmp $0x2,0x8(%rsp)
28bd(6): jz 0x3d3(%rip)
28c3(5): cmp $0x0,0xd(%rsp)
28c8(6): jz 0x218(%rip)
28ce(5): cmp $0x0,0xf(%rsp)
28d3(6): jz 0x20d(%rip)
28d9(6): cmp $0x0,0x18(%rsp)
28df(6): jnz 0x3bc(%rip)
28e5(5): mov $0x5c,%ebx
28ea(6): nop 0x0(%rax,%rax,1)
28f0(3): xor %r12d,%r12d
28f3(5): cmp $0x2,0x8(%rsp)
28f8(3): setz %dl
28fb(5): cmp $0x0,0xf(%rsp)
2900(2): mov %edx,%eax
2902(6): jnz 0x856(%rip)
2908(3): mov %r8d,%eax
290b(3): xor $0x1,%eax
290e(2): and %dl,%al
2910(2): jz 0x31(%rip)
2912(3): cmp %r15,%r13
2915(2): jbe 0x7(%rip)
2917(5): mov $0x27,0x0(%r14,%r15,1)
291c(4): lea 0x1(%r15),%rdx
2920(3): cmp %rdx,%r13
2923(2): jbe 0x8(%rip)
2925(6): mov $0x24,0x1(%r14,%r15,1)
292b(4): lea 0x2(%r15),%rdx
292f(3): cmp %rdx,%r13
2932(2): jbe 0x8(%rip)
2934(6): mov $0x27,0x2(%r14,%r15,1)
293a(4): add $0x3,%r15
293e(3): mov %eax,%r8d
2941(3): cmp %r15,%r13
2944(2): jbe 0x7(%rip)
2946(5): mov $0x5c,0x0(%r14,%r15,1)
294b(4): add $0x1,%r15
294f(4): add $0x1,%rbp
2953(5): jmp 0xfffffe8d(%rip)
2958(8): nop 0x0(%rax,%rax,1)
2960(5): cmp $0x0,0xd(%rsp)
2965(6): jnz 0x1ce(%rip)
296b(2): xor %edx,%edx
296d(5): test $0x1,0x78(%rsp)
2972(6): jz 0xffffff19(%rip)
2978(4): add $0x1,%rbp
297c(5): jmp 0xfffffcbc(%rip)
2981(7): nop 0x0(%rax)
2988(5): cmp $0x2,0x8(%rsp)
298d(3): setz %dl
2990(2): xor %eax,%eax
2992(5): jmp 0xfffffde6(%rip)
2997(9): nop 0x0(%rax,%rax,1)
29a0(5): mov $0x7,%edx
29a5(5): mov $0x61,%ebx
29aa(5): jmp 0xfffffeda(%rip)
29af(1): nop 
29b0(5): cmp $0x2,0x8(%rsp)
29b5(3): setz %dl
29b8(3): test %rbp,%rbp
29bb(6): jnz 0xfffffdb1(%rip)
29c1(5): movzx 0xf(%rsp),%eax
29c6(2): and %dl,%al
29c8(6): jz 0xfffffdb0(%rip)
29ce(3): mov %r11,%rbp
29d1(8): mov $0x2,0x8(%rsp)
29d9(5): jmp 0x700(%rip)
29de(2): nop 
29e0(5): cmp $0x2,0x8(%rsp)
29e5(3): setz %dl
29e8(3): xor %r12d,%r12d
29eb(2): jmp 0xffffffd6(%rip)
29ed(3): nop (%rax)
29f0(5): cmp $0x2,0x8(%rsp)
29f5(5): mov $0x20,%ebx
29fa(3): setz %dl
29fd(2): jmp 0xffffffc4(%rip)
29ff(1): nop 
2a00(5): mov $0xd,%edx
2a05(5): mov $0x72,%ebx
2a0a(5): jmp 0xfffffe68(%rip)
2a0f(1): nop 
2a10(5): mov $0xc,%edx
2a15(5): mov $0x66,%ebx
2a1a(5): jmp 0xfffffe6a(%rip)
2a1f(1): nop 
2a20(5): mov $0xb,%edx
2a25(5): mov $0x76,%ebx
2a2a(5): jmp 0xfffffe5a(%rip)
2a2f(1): nop 
2a30(5): mov $0xa,%edx
2a35(5): mov $0x6e,%ebx
2a3a(5): jmp 0xfffffe38(%rip)
2a3f(1): nop 
2a40(3): xor %r10d,%r10d
2a43(5): nop 0x0(%rax,%rax,1)
2a48(6): cmp $0x1,0x58(%rsp)
2a4e(6): jnz 0x3aa(%rip)
2a54(5): mov %r11,0x38(%rsp)
2a59(5): mov %r8b,0x30(%rsp)
2a5e(5): mov %r10b,0x28(%rsp)
2a63(5): call 0xffffeced(%rip)
2a68(3): mov (%rax),%rcx
2a6b(3): movzx %bl,%edx
2a6e(6): movzx 0x28(%rsp),%r10d
2a74(6): movzx 0x30(%rsp),%r8d
2a7a(5): mov 0x38(%rsp),%r11
2a7f(5): mov $0x1,%edi
2a84(4): movzx 0x0(%rcx,%rdx,2),%eax
2a88(4): and $0x4000,%ax
2a8c(4): setnz %r12b
2a90(3): setz %al
2a93(4): and 0xd(%rsp),%al
2a97(2): test %al,%al
2a99(6): jnz 0x998(%rip)
2a9f(5): cmp $0x2,0x8(%rsp)
2aa4(3): setz %dl
2aa7(5): jmp 0xfffffcd1(%rip)
2aac(4): nop 0x0(%rax)
2ab0(4): movzx (%r9),%ebx
2ab4(3): cmp $0x7e,%bl
2ab7(2): jnbe 0xffffff89(%rip)
2ab9(7): lea 0x2ea8(%rip),%rcx
2ac0(3): movzx %bl,%edx
2ac3(4): movsxd 0x0(%rcx,%rdx,4),%rax
2ac7(3): add %rcx,%rax
2aca(2): jmp %rax
2acc(4): nop 0x0(%rax)
2ad0(3): xor %r10d,%r10d
2ad3(5): cmp $0x0,0xd(%rsp)
2ad8(6): jnz 0xfffffdf6(%rip)
2ade(2): nop 
2ae0(5): mov $0x5c,%edx
2ae5(5): mov $0x5c,%ebx
2aea(5): jmp 0xfffffd9a(%rip)
2aef(1): nop 
2af0(5): mov $0xc,%edx
2af5(3): xor %r10d,%r10d
2af8(5): mov $0x66,%ebx
2afd(5): jmp 0xfffffd87(%rip)
2b02(6): nop 0x0(%rax,%rax,1)
2b08(5): mov $0xa,%edx
2b0d(3): xor %r10d,%r10d
2b10(5): mov $0x6e,%ebx
2b15(5): jmp 0xfffffd5d(%rip)
2b1a(6): nop 0x0(%rax,%rax,1)
2b20(5): mov $0x61,%ebx
2b25(5): jmp 0xfffffdcb(%rip)
2b2a(6): nop 0x0(%rax,%rax,1)
2b30(3): xor %r10d,%r10d
2b33(5): cmp $0x2,0x8(%rsp)
2b38(3): setz %dl
2b3b(5): cmp $0x0,0xf(%rsp)
2b40(6): jnz 0xb9a(%rip)
2b46(3): mov %r8d,%eax
2b49(3): mov %r15,%rcx
2b4c(3): xor $0x1,%eax
2b4f(2): and %dl,%al
2b51(2): jz 0x2f(%rip)
2b53(3): cmp %r15,%r13
2b56(2): jbe 0x7(%rip)
2b58(5): mov $0x27,0x0(%r14,%r15,1)
2b5d(4): lea 0x1(%r15),%rcx
2b61(3): cmp %rcx,%r13
2b64(2): jbe 0x8(%rip)
2b66(6): mov $0x24,0x1(%r14,%r15,1)
2b6c(4): lea 0x2(%r15),%rcx
2b70(3): cmp %rcx,%r13
2b73(6): jnbe 0x636(%rip)
2b79(4): lea 0x3(%r15),%rcx
2b7d(3): mov %eax,%r8d
2b80(3): cmp %rcx,%r13
2b83(2): jbe 0x7(%rip)
2b85(5): mov $0x5c,0x0(%r14,%rcx,1)
2b8a(5): cmp $0x2,0x8(%rsp)
2b8f(4): lea 0x1(%rcx),%r15
2b93(6): jz 0x606(%rip)
2b99(4): lea 0x1(%rbp),%rax
2b9d(3): cmp %r11,%rax
2ba0(2): jnb 0x1b(%rip)
2ba2(5): mov 0x10(%rsp),%rax
2ba7(5): movzx 0x1(%rax,%rbp,1),%eax
2bac(4): mov %al,0x28(%rsp)
2bb0(3): sub $0x30,%eax
2bb3(2): cmp $0x9,%al
2bb5(6): jbe 0x834(%rip)
2bbb(3): mov %r12d,%eax
2bbe(5): mov $0x30,%ebx
2bc3(3): xor %r12d,%r12d
2bc6(5): jmp 0xfffffbb2(%rip)
2bcb(5): nop 0x0(%rax,%rax,1)
2bd0(5): cmp $0x2,0x8(%rsp)
2bd5(3): mov %r10d,%r12d
2bd8(3): setz %dl
2bdb(3): xor %r10d,%r10d
2bde(2): xor %eax,%eax
2be0(5): jmp 0xfffffb98(%rip)
2be5(3): nop (%rax)
2be8(5): cmp $0x2,0x8(%rsp)
2bed(3): setz %dl
2bf0(3): xor %r10d,%r10d
2bf3(5): jmp 0xfffffdc5(%rip)
2bf8(8): nop 0x0(%rax,%rax,1)
2c00(5): cmp $0x2,0x8(%rsp)
2c05(3): setz %dl
2c08(3): xor %r10d,%r10d
2c0b(3): xor %r12d,%r12d
2c0e(5): jmp 0xfffffdb3(%rip)
2c13(5): nop 0x0(%rax,%rax,1)
2c18(5): cmp $0x2,0x8(%rsp)
2c1d(3): mov %r10d,%r12d
2c20(5): mov $0x20,%ebx
2c25(3): setz %dl
2c28(3): xor %r10d,%r10d
2c2b(5): jmp 0xfffffd96(%rip)
2c30(5): mov $0xd,%edx
2c35(3): xor %r10d,%r10d
2c38(5): mov $0x72,%ebx
2c3d(5): jmp 0xfffffc35(%rip)
2c42(6): nop 0x0(%rax,%rax,1)
2c48(5): mov $0x76,%ebx
2c4d(5): jmp 0xfffffca3(%rip)
2c52(6): nop 0x0(%rax,%rax,1)
2c58(5): mov $0x9,%edx
2c5d(3): xor %r10d,%r10d
2c60(5): mov $0x74,%ebx
2c65(5): jmp 0xfffffc0d(%rip)
2c6a(6): nop 0x0(%rax,%rax,1)
2c70(5): mov $0x62,%ebx
2c75(5): jmp 0xfffffc7b(%rip)
2c7a(6): nop 0x0(%rax,%rax,1)
2c80(3): xor %r10d,%r10d
2c83(5): jmp 0xfffffa9d(%rip)
2c88(8): nop 0x0(%rax,%rax,1)
2c90(5): cmp $0x0,0xf(%rsp)
2c95(6): jnz 0x96b(%rip)
2c9b(4): add $0x1,%rbp
2c9f(3): mov %r8d,%eax
2ca2(3): xor %r12d,%r12d
2ca5(5): mov $0x5c,%ebx
2caa(5): jmp 0xfffffb12(%rip)
2caf(1): nop 
2cb0(5): cmp $0x2,0x8(%rsp)
2cb5(5): movzx 0xf(%rsp),%ebx
2cba(3): mov %r8d,%r12d
2cbd(3): mov %r11,%rbp
2cc0(3): setz %dl
2cc3(2): mov %ebx,%eax
2cc5(3): test %r15,%r15
2cc8(3): setz %cl
2ccb(2): and %edx,%eax
2ccd(2): and %cl,%al
2ccf(6): jnz 0xa67(%rip)
2cd5(2): mov %ebx,%eax
2cd7(3): xor $0x1,%eax
2cda(2): and %al,%dl
2cdc(6): jz 0x970(%rip)
2ce2(5): cmp $0x0,0x7c(%rsp)
2ce7(6): jz 0x963(%rip)
2ced(5): cmp $0x0,0xe(%rsp)
2cf2(6): jnz 0x9fb(%rip)
2cf8(3): test %r13,%r13
2cfb(3): setz %al
2cfe(6): cmp $0x0,0x50(%rsp)
2d04(3): setnz %dl
2d07(2): and %dl,%al
2d09(6): jz 0xa23(%rip)
2d0f(5): mov 0x50(%rsp),%r13
2d14(7): lea 0x29ba(%rip),%rbx
2d1b(4): mov $0x27,(%r14)
2d1f(8): mov $0x2,0x8(%rsp)
2d27(6): mov $0x1,%r15d
2d2d(9): mov $0x1,0x18(%rsp)
2d36(5): mov $0x0,0xf(%rsp)
2d3b(5): mov %rbx,0x48(%rsp)
2d40(4): mov %al,0x7c(%rsp)
2d44(5): jmp 0xfffff8df(%rip)
2d49(7): nop 0x0(%rax)
2d50(5): cmp $0x0,0xf(%rsp)
2d55(6): jnz 0x8ab(%rip)
2d5b(3): test %r13,%r13
2d5e(6): jz 0x402(%rip)
2d64(2): xor %edx,%edx
2d66(6): cmp $0x0,0x50(%rsp)
2d6c(6): jnz 0x3f4(%rip)
2d72(5): mov %r13,0x50(%rsp)
2d77(4): add $0x3,%r15
2d7b(2): xor %eax,%eax
2d7d(5): mov %r12b,0x7c(%rsp)
2d82(3): xor %r8d,%r8d
2d85(3): mov %rdx,%r13
2d88(5): mov $0x27,%ebx
2d8d(5): jmp 0xfffffa1c(%rip)
2d92(6): nop 0x0(%rax,%rax,1)
2d98(5): test $0x4,0x78(%rsp)
2d9d(2): jz 0x23(%rip)
2d9f(4): lea 0x2(%rbp),%rcx
2da3(3): cmp %r11,%rcx
2da6(2): jnb 0x1a(%rip)
2da8(5): mov 0x10(%rsp),%rax
2dad(5): cmp $0x3f,0x1(%rax,%rbp,1)
2db2(6): jz 0x790(%rip)
2db8(8): nop 0x0(%rax,%rax,1)
2dc0(2): xor %edx,%edx
2dc2(3): xor %r12d,%r12d
2dc5(2): xor %eax,%eax
2dc7(5): mov $0x3f,%ebx
2dcc(5): jmp 0xfffff9ac(%rip)
2dd1(7): nop 0x0(%rax)
2dd8(5): cmp $0x0,0xf(%rsp)
2ddd(6): jnz 0x823(%rip)
2de3(3): xor %r12d,%r12d
2de6(2): xor %eax,%eax
2de8(5): mov $0x3f,%ebx
2ded(5): jmp 0xfffff9bc(%rip)
2df2(6): nop 0x0(%rax,%rax,1)
2df8(8): lea 0xa0(%rsp),%rax
2e00(4): cmp $0xffffffff,%r11
2e04(c): mov $0x0,0xa0(%rsp)
2e10(5): mov %rax,0x28(%rsp)
2e15(2): jnz 0x2f(%rip)
2e17(5): mov 0x10(%rsp),%rdi
2e1c(5): mov %r8b,0x40(%rsp)
2e21(5): mov %r10b,0x38(%rsp)
2e26(5): mov %r9,0x30(%rsp)
2e2b(5): call 0xffffe6f5(%rip)
2e30(6): movzx 0x40(%rsp),%r8d
2e36(6): movzx 0x38(%rsp),%r10d
2e3c(3): mov %rax,%r11
2e3f(5): mov 0x30(%rsp),%r9
2e44(8): lea 0x9c(%rsp),%rax
2e4c(2): xor %ecx,%ecx
2e4e(4): mov %bl,0x7e(%rsp)
2e52(5): mov %r8b,0x7d(%rsp)
2e57(3): mov %rcx,%rbx
2e5a(8): mov %r9,0x88(%rsp)
2e62(5): mov %rax,0x38(%rsp)
2e67(5): mov %r10b,0x7f(%rsp)
2e6c(8): mov %r15,0x80(%rsp)
2e74(5): mov %r14,0x40(%rsp)
2e79(5): mov %r13,0x70(%rsp)
2e7e(5): mov %r11,0x30(%rsp)
2e83(5): mov 0x10(%rsp),%rax
2e88(5): lea 0x0(%rbp,%rbx,1),%r14
2e8d(5): mov 0x30(%rsp),%rdx
2e92(5): mov 0x28(%rsp),%rcx
2e97(5): mov 0x38(%rsp),%rdi
2e9c(4): lea 0x0(%rax,%r14,1),%r13
2ea0(3): sub %r14,%rdx
2ea3(3): mov %r13,%rsi
2ea6(5): call 0x216a(%rip)
2eab(3): test %rax,%rax
2eae(3): mov %rax,%r15
2eb1(2): jz 0x50(%rip)
2eb3(4): cmp $0xffffffff,%rax
2eb7(6): jz 0x61e(%rip)
2ebd(4): cmp $0xfffffffe,%rax
2ec1(6): jz 0x5a0(%rip)
2ec7(5): cmp $0x2,0x8(%rsp)
2ecc(3): setz %al
2ecf(4): and 0xf(%rsp),%al
2ed3(6): jnz 0x19d(%rip)
2ed9(7): mov 0x9c(%rsp),%edi
2ee0(5): call 0xffffe860(%rip)
2ee5(5): mov 0x28(%rsp),%rdi
2eea(2): test %eax,%eax
2eec(5): mov $0x0,%eax
2ef1(4): cmove %eax,%r12d
2ef5(3): add %r15,%rbx
2ef8(5): call 0xffffe838(%rip)
2efd(2): test %eax,%eax
2eff(2): jz 0xffffff84(%rip)
2f01(3): mov %r12d,%edx
2f04(3): mov %rbx,%rdi
2f07(6): movzx 0x7d(%rsp),%r8d
2f0d(3): xor $0x1,%edx
2f10(5): movzx 0x7e(%rsp),%ebx
2f15(6): movzx 0x7f(%rsp),%r10d
2f1b(4): and 0xd(%rsp),%dl
2f1f(8): mov 0x80(%rsp),%r15
2f27(5): mov 0x40(%rsp),%r14
2f2c(5): mov 0x70(%rsp),%r13
2f31(5): mov 0x30(%rsp),%r11
2f36(4): cmp $0x1,%rdi
2f3a(6): jbe 0x601(%rip)
2f40(3): mov %rdi,%rcx
2f43(2): xor %esi,%esi
2f45(6): movzx 0xf(%rsp),%r9d
2f4b(3): add %rbp,%rcx
2f4e(5): mov 0x10(%rsp),%rdi
2f53(5): jmp 0xbb(%rip)
2f58(8): nop 0x0(%rax,%rax,1)
2f60(5): cmp $0x2,0x8(%rsp)
2f65(3): setz %al
2f68(3): test %r9b,%r9b
2f6b(6): jnz 0x4b5(%rip)
2f71(3): mov %r8d,%esi
2f74(3): xor $0x1,%esi
2f77(3): and %sil,%al
2f7a(2): jz 0x31(%rip)
2f7c(3): cmp %r15,%r13
2f7f(2): jbe 0x7(%rip)
2f81(5): mov $0x27,0x0(%r14,%r15,1)
2f86(4): lea 0x1(%r15),%rsi
2f8a(3): cmp %rsi,%r13
2f8d(2): jbe 0x8(%rip)
2f8f(6): mov $0x24,0x1(%r14,%r15,1)
2f95(4): lea 0x2(%r15),%rsi
2f99(3): cmp %rsi,%r13
2f9c(2): jbe 0x8(%rip)
2f9e(6): mov $0x27,0x2(%r14,%r15,1)
2fa4(4): add $0x3,%r15
2fa8(3): mov %eax,%r8d
2fab(3): cmp %r15,%r13
2fae(2): jbe 0x7(%rip)
2fb0(5): mov $0x5c,0x0(%r14,%r15,1)
2fb5(4): lea 0x1(%r15),%rax
2fb9(3): cmp %rax,%r13
2fbc(2): jbe 0xf(%rip)
2fbe(2): mov %ebx,%eax
2fc0(3): shr $0x6,%al
2fc3(3): add $0x30,%eax
2fc6(5): mov %al,0x1(%r14,%r15,1)
2fcb(4): lea 0x2(%r15),%rax
2fcf(3): cmp %rax,%r13
2fd2(2): jbe 0x12(%rip)
2fd4(2): mov %ebx,%eax
2fd6(3): shr $0x3,%al
2fd9(3): and $0x7,%eax
2fdc(3): add $0x30,%eax
2fdf(5): mov %al,0x2(%r14,%r15,1)
2fe4(3): and $0x7,%ebx
2fe7(4): add $0x1,%rbp
2feb(4): add $0x3,%r15
2fef(3): add $0x30,%ebx
2ff2(3): cmp %rcx,%rbp
2ff5(6): jnb 0xfffff7eb(%rip)
2ffb(2): mov %edx,%esi
2ffd(3): cmp %r15,%r13
3000(2): jbe 0x6(%rip)
3002(4): mov %bl,0x0(%r14,%r15,1)
3006(4): movzx 0x0(%rdi,%rbp,1),%ebx
300a(4): add $0x1,%r15
300e(2): test %dl,%dl
3010(6): jnz 0xffffff50(%rip)
3016(2): mov %esi,%eax
3018(3): xor $0x1,%eax
301b(3): and %r8d,%eax
301e(3): test %r10b,%r10b
3021(2): jz 0x10(%rip)
3023(3): cmp %r15,%r13
3026(2): jbe 0x7(%rip)
3028(5): mov $0x5c,0x0(%r14,%r15,1)
302d(4): add $0x1,%r15
3031(4): add $0x1,%rbp
3035(3): cmp %rcx,%rbp
3038(6): jnb 0xfffff784(%rip)
303e(2): test %al,%al
3040(6): jz 0x3fe(%rip)
3046(3): cmp %r15,%r13
3049(2): jbe 0x7(%rip)
304b(5): mov $0x27,0x0(%r14,%r15,1)
3050(4): lea 0x1(%r15),%rax
3054(3): cmp %rax,%r13
3057(2): jbe 0x8(%rip)
3059(6): mov $0x27,0x1(%r14,%r15,1)
305f(4): add $0x2,%r15
3063(3): xor %r10d,%r10d
3066(3): xor %r8d,%r8d
3069(2): jmp 0xffffff94(%rip)
306b(5): nop 0x0(%rax,%rax,1)
3070(4): cmp $0x1,%r15
3074(6): jz 0xfffffe65(%rip)
307a(5): mov 0x10(%rsp),%rdi
307f(4): lea 0x0(%rdi,%r15,1),%rcx
3083(5): lea 0x1(%rdi,%r14,1),%rdx
3088(4): lea 0x0(%rcx,%r14,1),%r8
308c(2): jmp 0x11(%rip)
308e(2): nop 
3090(4): add $0x1,%rdx
3094(3): cmp %rdx,%r8
3097(6): jz 0xfffffe42(%rip)
309d(3): movzx (%rdx),%ecx
30a0(3): sub $0x5b,%ecx
30a3(3): cmp $0x21,%cl
30a6(2): jnbe 0xffffffea(%rip)
30a8(5): mov $0x1,%esi
30ad(3): shl/sal %cl,%rsi
30b0(3): mov %rsi,%rcx
30b3(a): mov $0x8589934635,%rsi
30bd(3): test %rsi,%rcx
30c0(2): jz 0xffffffd0(%rip)
30c2(5): mov 0x40(%rsp),%r14
30c7(5): mov 0x70(%rsp),%r13
30cc(5): mov 0x30(%rsp),%rbp
30d1(8): mov $0x2,0x8(%rsp)
30d9(5): cmp $0x0,0xd(%rsp)
30de(2): jz 0x12(%rip)
30e0(2): test %al,%al
30e2(5): mov $0x4,%eax
30e7(5): cmove 0x8(%rsp),%eax
30ec(4): mov %eax,0x8(%rsp)
30f0(4): sub $0x8,%rsp
30f4(3): mov %rbp,%rcx
30f7(3): mov %r13,%rsi
30fa(4): push 0x68(%rsp)
30fe(4): push 0x78(%rsp)
3102(3): mov %r14,%rdi
3105(2): push $0x0
3107(8): mov 0x98(%rsp),%r9d
310f(5): mov 0x28(%rsp),%r8d
3114(5): mov 0x30(%rsp),%rdx
3119(4): and $0xfd,%r9d
311d(5): call 0xfffff433(%rip)
3122(4): add $0x20,%rsp
3126(3): mov %rax,%r15
3129(8): mov 0xa8(%rsp),%rbx
3131(9): xor $0x28,%rbx
313a(3): mov %r15,%rax
313d(6): jnz 0x606(%rip)
3143(7): add $0xb8,%rsp
314a(1): pop %rbx
314b(1): pop %rbp
314c(2): pop %r12
314e(2): pop %r13
3150(2): pop %r14
3152(2): pop %r15
3154(1): ret near (%rsp)
3155(3): nop (%rax)
3158(3): mov %r11,%rbp
315b(5): jmp 0xffffff7e(%rip)
3160(3): cmp %r15,%r13
3163(2): jbe 0x7(%rip)
3165(5): mov $0x27,0x0(%r14,%r15,1)
316a(4): lea 0x1(%r15),%rax
316e(3): cmp %rax,%r13
3171(2): jbe 0x8(%rip)
3173(6): mov $0x5c,0x1(%r14,%r15,1)
3179(4): lea 0x2(%r15),%rax
317d(3): cmp %rax,%r13
3180(6): jbe 0x5f2(%rip)
3186(3): mov %r13,%rdx
3189(6): mov $0x27,0x2(%r14,%r15,1)
318f(5): mov 0x50(%rsp),%r13
3194(5): jmp 0xfffffbde(%rip)
3199(3): mov %r12d,%eax
319c(5): mov $0x30,%ebx
31a1(3): xor %r12d,%r12d
31a4(5): jmp 0xfffff605(%rip)
31a9(6): mov $0x27,0x2(%r14,%r15,1)
31af(5): jmp 0xfffff9ca(%rip)
31b4(2): test %ebx,%ebx
31b6(6): jnz 0xfffff42d(%rip)
31bc(5): mov $0x1,0xd(%rsp)
31c1(3): test %r13,%r13
31c4(6): jnz 0x596(%rip)
31ca(7): lea 0x2504(%rip),%rax
31d1(9): mov $0x0,0x50(%rsp)
31da(5): mov $0x1,0xe(%rsp)
31df(5): mov $0x0,0x7c(%rsp)
31e4(3): xor %r12d,%r12d
31e7(5): mov $0x0,0xf(%rsp)
31ec(9): mov $0x1,0x18(%rsp)
31f5(5): mov %rax,0x48(%rsp)
31fa(6): mov $0x1,%r15d
3200(8): mov $0x2,0x8(%rsp)
3208(5): jmp 0xfffff41b(%rip)
320d(3): nop (%rax)
3210(2): test %ebx,%ebx
3212(6): jnz 0x3fb(%rip)
3218(3): test %r13,%r13
321b(6): jz 0x22b(%rip)
3221(4): mov $0x22,(%r14)
3225(5): mov $0x1,0xe(%rsp)
322a(3): xor %r12d,%r12d
322d(5): mov $0x0,0x7c(%rsp)
3232(9): mov $0x0,0x50(%rsp)
323b(7): lea 0x2491(%rip),%rax
3242(5): mov $0x0,0xf(%rsp)
3247(5): mov $0x1,0xd(%rsp)
324c(9): mov $0x1,0x18(%rsp)
3255(6): mov $0x1,%r15d
325b(5): mov %rax,0x48(%rsp)
3260(5): jmp 0xfffff3c3(%rip)
3265(7): lea 0x2467(%rip),%rax
326c(5): mov $0x1,0xe(%rsp)
3271(5): mov $0x0,0x7c(%rsp)
3276(3): xor %r12d,%r12d
3279(9): mov $0x0,0x50(%rsp)
3282(5): mov $0x1,0xf(%rsp)
3287(5): mov $0x1,0xd(%rsp)
328c(9): mov $0x1,0x18(%rsp)
3295(3): xor %r15d,%r15d
3298(5): mov %rax,0x48(%rsp)
329d(8): mov $0x5,0x8(%rsp)
32a5(5): jmp 0xfffff37e(%rip)
32aa(5): mov $0x1,0xe(%rsp)
32af(5): mov $0x0,0x7c(%rsp)
32b4(3): xor %r12d,%r12d
32b7(9): mov $0x0,0x50(%rsp)
32c0(5): mov $0x0,0xf(%rsp)
32c5(3): xor %r15d,%r15d
32c8(5): mov $0x1,0xd(%rsp)
32cd(9): mov $0x0,0x18(%rsp)
32d6(9): mov $0x0,0x48(%rsp)
32df(5): jmp 0xfffff344(%rip)
32e4(5): cmp $0xa,0x8(%rsp)
32e9(2): jz 0x58(%rip)
32eb(7): lea 0x23e5(%rip),%rsi
32f2(2): xor %edi,%edi
32f4(5): mov $0x5,%edx
32f9(5): call 0xffffe207(%rip)
32fe(3): mov %rax,%rcx
3301(5): mov %rax,0x68(%rsp)
3306(7): lea 0x23ca(%rip),%rax
330d(3): cmp %rax,%rcx
3310(6): jz 0x39e(%rip)
3316(7): lea 0x23b8(%rip),%rsi
331d(2): xor %edi,%edi
331f(5): mov $0x5,%edx
3324(5): call 0xffffe1dc(%rip)
3329(3): mov %rax,%rcx
332c(5): mov %rax,0x60(%rsp)
3331(7): lea 0x239d(%rip),%rax
3338(3): cmp %rax,%rcx
333b(6): jz 0x389(%rip)
3341(3): xor %r15d,%r15d
3344(2): test %ebx,%ebx
3346(6): jz 0x1c7(%rip)
334c(2): test %ebx,%ebx
334e(5): mov 0x60(%rsp),%rbx
3353(5): setnz 0xf(%rsp)
3358(3): xor %r12d,%r12d
335b(3): mov %rbx,%rdi
335e(5): call 0xffffe1c2(%rip)
3363(5): mov %rbx,0x48(%rsp)
3368(5): mov %rax,0x18(%rsp)
336d(5): mov $0x1,0xe(%rsp)
3372(5): mov $0x0,0x7c(%rsp)
3377(9): mov $0x0,0x50(%rsp)
3380(5): mov $0x1,0xd(%rsp)
3385(5): jmp 0xfffff29e(%rip)
338a(5): mov $0x1,0xe(%rsp)
338f(5): mov $0x0,0x7c(%rsp)
3394(3): xor %r12d,%r12d
3397(9): mov $0x0,0x50(%rsp)
33a0(5): mov $0x0,0xf(%rsp)
33a5(3): xor %r15d,%r15d
33a8(5): mov $0x0,0xd(%rsp)
33ad(9): mov $0x0,0x18(%rsp)
33b6(9): mov $0x0,0x48(%rsp)
33bf(5): jmp 0xfffff264(%rip)
33c4(5): mov $0x1,0xe(%rsp)
33c9(5): mov $0x0,0x7c(%rsp)
33ce(3): xor %r12d,%r12d
33d1(9): mov $0x0,0x50(%rsp)
33da(5): mov $0x1,0xf(%rsp)
33df(5): mov $0x1,0xd(%rsp)
33e4(5): jmp 0xfffff21f(%rip)
33e9(3): cmp %r15,%r13
33ec(2): jbe 0x7(%rip)
33ee(5): mov $0x30,0x0(%r14,%r15,1)
33f3(4): lea 0x2(%rcx),%rax
33f7(3): cmp %rax,%r13
33fa(2): jbe 0x8(%rip)
33fc(6): mov $0x30,0x2(%r14,%rcx,1)
3402(3): mov %r12d,%eax
3405(4): lea 0x3(%rcx),%r15
3409(3): xor %r12d,%r12d
340c(5): mov $0x30,%ebx
3411(5): jmp 0xfffff367(%rip)
3416(a): nop 0x0(%rax,%rax,1)
3420(5): movzx 0xf(%rsp),%ebx
3425(3): mov %r11,%rbp
3428(4): mov %bl,0xd(%rsp)
342c(5): jmp 0xfffffcad(%rip)
3431(5): movzx 0xd(%rsp),%edx
3436(3): xor %r12d,%r12d
3439(5): jmp 0xfffffb07(%rip)
343e(3): xor %r10d,%r10d
3441(5): jmp 0xfffffbbc(%rip)
3446(9): mov $0x0,0x50(%rsp)
344f(5): mov $0x1,0xe(%rsp)
3454(3): xor %r12d,%r12d
3457(5): mov $0x0,0x7c(%rsp)
345c(5): jmp 0xfffffddf(%rip)
3461(5): mov 0x30(%rsp),%r11
3466(3): mov %r14,%rsi
3469(3): mov %r13,%rcx
346c(3): mov %rbx,%rax
346f(3): mov %rbx,%rdi
3472(6): movzx 0x7d(%rsp),%r8d
3478(5): movzx 0x7e(%rsp),%ebx
347d(8): mov 0x88(%rsp),%r9
3485(3): cmp %r11,%rsi
3488(6): movzx 0x7f(%rsp),%r10d
348e(8): mov 0x80(%rsp),%r15
3496(5): mov 0x40(%rsp),%r14
349b(5): mov 0x70(%rsp),%r13
34a0(2): jnb 0x28(%rip)
34a2(3): cmp $0x0,(%rcx)
34a5(2): jnz 0x12(%rip)
34a7(2): jmp 0x21(%rip)
34a9(7): nop 0x0(%rax)
34b0(5): cmp $0x0,0x0(%r9,%rax,1)
34b5(2): jz 0x10(%rip)
34b7(4): add $0x1,%rax
34bb(5): lea 0x0(%rbp,%rax,1),%rdx
34c0(3): cmp %rdx,%r11
34c3(2): jnbe 0xffffffed(%rip)
34c5(3): mov %rax,%rdi
34c8(5): movzx 0xd(%rsp),%edx
34cd(3): xor %r12d,%r12d
34d0(5): jmp 0xfffffa66(%rip)
34d5(3): mov %rbx,%rdi
34d8(6): movzx 0x7d(%rsp),%r8d
34de(5): movzx 0x7e(%rsp),%ebx
34e3(6): movzx 0x7f(%rsp),%r10d
34e9(8): mov 0x80(%rsp),%r15
34f1(3): xor %r12d,%r12d
34f4(5): mov 0x40(%rsp),%r14
34f9(5): mov 0x70(%rsp),%r13
34fe(5): mov 0x30(%rsp),%r11
3503(5): movzx 0xd(%rsp),%edx
3508(5): jmp 0xfffffa2e(%rip)
350d(5): mov 0x68(%rsp),%rdx
3512(3): movzx (%rdx),%eax
3515(2): test %al,%al
3517(6): jz 0xfffffe35(%rip)
351d(3): nop (%rax)
3520(3): cmp %r15,%r13
3523(2): jbe 0x6(%rip)
3525(4): mov %al,0x0(%r14,%r15,1)
3529(4): add $0x1,%r15
352d(5): movzx 0x0(%rdx,%r15,1),%eax
3532(2): test %al,%al
3534(2): jnz 0xffffffec(%rip)
3536(5): jmp 0xfffffe16(%rip)
353b(2): mov %edx,%eax
353d(5): jmp 0xfffff55a(%rip)
3542(4): movzx 0x0(%rax,%rcx,1),%ebx
3546(3): cmp $0x3e,%bl
3549(6): jnbe 0xfffff877(%rip)
354f(a): mov $0x8070630310989004800,%rax
3559(4): bt %rbx,%rax
355d(6): jnb 0xfffff863(%rip)
3563(5): cmp $0x0,0xf(%rsp)
3568(6): jnz 0x1ea(%rip)
356e(3): cmp %r15,%r13
3571(2): jbe 0x7(%rip)
3573(5): mov $0x3f,0x0(%r14,%r15,1)
3578(4): lea 0x1(%r15),%rax
357c(3): cmp %rax,%r13
357f(2): jbe 0x8(%rip)
3581(6): mov $0x22,0x1(%r14,%r15,1)
3587(4): lea 0x2(%r15),%rax
358b(3): cmp %rax,%r13
358e(2): jbe 0x8(%rip)
3590(6): mov $0x22,0x2(%r14,%r15,1)
3596(4): lea 0x3(%r15),%rax
359a(3): cmp %rax,%r13
359d(2): jbe 0x8(%rip)
359f(6): mov $0x3f,0x3(%r14,%r15,1)
35a5(4): add $0x4,%r15
35a9(2): xor %edx,%edx
35ab(3): xor %r12d,%r12d
35ae(2): xor %eax,%eax
35b0(3): mov %rcx,%rbp
35b3(5): jmp 0xfffff1c5(%rip)
35b8(2): test %ebx,%ebx
35ba(6): jz 0x18e(%rip)
35c0(7): lea 0x210e(%rip),%rax
35c7(5): mov $0x1,0xe(%rsp)
35cc(5): mov $0x0,0x7c(%rsp)
35d1(3): xor %r12d,%r12d
35d4(9): mov $0x0,0x50(%rsp)
35dd(5): mov $0x1,0xf(%rsp)
35e2(5): mov $0x0,0xd(%rsp)
35e7(9): mov $0x1,0x18(%rsp)
35f0(3): xor %r15d,%r15d
35f3(5): mov %rax,0x48(%rsp)
35f8(5): jmp 0xfffff02b(%rip)
35fd(3): nop (%rax)
3600(3): mov %r11,%rbp
3603(5): movzx 0xf(%rsp),%eax
3608(5): jmp 0xfffffad1(%rip)
360d(7): lea 0x20bf(%rip),%rax
3614(5): mov $0x1,0xe(%rsp)
3619(5): mov $0x0,0x7c(%rsp)
361e(3): xor %r12d,%r12d
3621(9): mov $0x0,0x50(%rsp)
362a(5): mov $0x1,0xf(%rsp)
362f(5): mov $0x1,0xd(%rsp)
3634(9): mov $0x1,0x18(%rsp)
363d(3): xor %r15d,%r15d
3640(5): mov %rax,0x48(%rsp)
3645(5): jmp 0xffffefde(%rip)
364a(2): mov %edx,%eax
364c(5): mov 0x48(%rsp),%rbx
3651(3): test %rbx,%rbx
3654(2): jz 0x2e(%rip)
3656(2): test %al,%al
3658(2): jz 0x2a(%rip)
365a(3): movzx (%rbx),%ecx
365d(3): mov %rbx,%rax
3660(2): test %cl,%cl
3662(2): jz 0x20(%rip)
3664(3): mov %r15,%rdx
3667(3): sub %r15,%rax
366a(3): cmp %rdx,%r13
366d(2): jbe 0x6(%rip)
366f(4): mov %cl,0x0(%r14,%rdx,1)
3673(4): add $0x1,%rdx
3677(4): movzx 0x0(%rax,%rdx,1),%ecx
367b(2): test %cl,%cl
367d(2): jnz 0xffffffed(%rip)
367f(3): mov %rdx,%r15
3682(3): cmp %r15,%r13
3685(6): jbe 0xfffffaa4(%rip)
368b(5): mov $0x0,0x0(%r14,%r15,1)
3690(5): jmp 0xfffffa99(%rip)
3695(5): cmp $0x2,0x8(%rsp)
369a(5): movzx 0xf(%rsp),%ebx
369f(3): mov %r11,%rbp
36a2(3): setz %al
36a5(4): mov %bl,0xd(%rsp)
36a9(5): jmp 0xfffffa30(%rip)
36ae(4): mov 0x8(%rsp),%esi
36b2(3): mov %rcx,%rdi
36b5(5): call 0xffffedab(%rip)
36ba(5): mov %rax,0x68(%rsp)
36bf(5): jmp 0xfffffc57(%rip)
36c4(4): mov 0x8(%rsp),%esi
36c8(3): mov %rcx,%rdi
36cb(5): call 0xffffed95(%rip)
36d0(5): mov %rax,0x60(%rsp)
36d5(5): jmp 0xfffffc6c(%rip)
36da(5): movzx 0xf(%rsp),%ebx
36df(3): mov %r11,%rbp
36e2(2): mov %edx,%eax
36e4(4): mov %bl,0xd(%rsp)
36e8(5): jmp 0xfffff9f1(%rip)
36ed(4): sub $0x8,%rsp
36f1(6): mov $0x5,%r8d
36f7(3): mov %r11,%rcx
36fa(4): push 0x68(%rsp)
36fe(4): push 0x78(%rsp)
3702(3): mov %r14,%rdi
3705(4): push 0x38(%rsp)
3709(8): mov 0x98(%rsp),%r9d
3711(5): mov 0x30(%rsp),%rdx
3716(5): mov 0x70(%rsp),%rsi
371b(5): call 0xffffee35(%rip)
3720(4): add $0x20,%rsp
3724(3): mov %rax,%r15
3727(5): jmp 0xfffffa02(%rip)
372c(5): movzx 0x7c(%rsp),%eax
3731(5): jmp 0xffffff1b(%rip)
3736(8): mov $0x2,0x8(%rsp)
373e(5): jmp 0xfffff99b(%rip)
3743(5): call 0xffffdded(%rip)
3748(5): mov $0x0,0xd(%rsp)
374d(5): jmp 0xfffffa74(%rip)
3752(3): mov %r11,%rbp
3755(5): jmp 0xfffff99b(%rip)
375a(5): mov $0x1,0xe(%rsp)
375f(2): xor %eax,%eax
3761(3): xor %r12d,%r12d
3764(9): mov $0x0,0x50(%rsp)
376d(5): jmp 0xfffff5a7(%rip)
3772(3): mov %r13,%rdx
3775(5): mov 0x50(%rsp),%r13
377a(5): jmp 0xfffff5f8(%rip)
377f(5): call 0xffffdd01(%rip)

"quotearg_n_options" :
3790(2): push %r15
3792(2): push %r14
3794(3): movsxd %edi,%r15
3797(2): push %r13
3799(2): push %r12
379b(3): mov %rdx,%r14
379e(1): push %rbp
379f(1): push %rbx
37a0(3): mov %rcx,%rbp
37a3(4): sub $0x28,%rsp
37a7(5): mov %rsi,0x8(%rsp)
37ac(5): call 0xffffdce4(%rip)
37b1(3): mov %rax,%r13
37b4(2): mov (%rax),%eax
37b6(3): test %r15d,%r15d
37b9(7): mov 0x2048a0(%rip),%rbx
37c0(4): mov %eax,0x18(%rsp)
37c4(6): js 0x16d(%rip)
37ca(7): cmp %r15d,0x204887(%rip)
37d1(2): jnle 0x64(%rip)
37d3(7): cmp $0x7fffffff,%r15d
37da(6): jz 0x15c(%rip)
37e0(4): lea 0x1(%r15),%r12d
37e4(7): lea 0x204885(%rip),%rax
37eb(3): movsxd %r12d,%rsi
37ee(4): shl/sal $0x4,%rsi
37f2(3): cmp %rax,%rbx
37f5(6): jz 0x11b(%rip)
37fb(3): mov %rbx,%rdi
37fe(5): call 0xf72(%rip)
3803(3): mov %rax,%rbx
3806(7): mov %rax,0x204853(%rip)
380d(7): movsxd 0x204844(%rip),%rdi
3814(3): mov %r12d,%edx
3817(2): xor %esi,%esi
3819(2): sub %edi,%edx
381b(4): shl/sal $0x4,%rdi
381f(3): movsxd %edx,%rdx
3822(3): add %rbx,%rdi
3825(4): shl/sal $0x4,%rdx
3829(5): call 0xffffdd97(%rip)
382e(7): mov %r12d,0x204823(%rip)
3835(3): mov 0x4(%rbp),%eax
3838(4): shl/sal $0x4,%r15
383c(4): sub $0x8,%rsp
3840(3): add %r15,%rbx
3843(4): lea 0x8(%rbp),%r15
3847(4): mov 0x0(%rbp),%r8d
384b(3): mov (%rbx),%r11
384e(4): mov 0x8(%rbx),%r12
3852(3): mov %r14,%rcx
3855(3): or $0x1,%eax
3858(4): mov %eax,0x24(%rsp)
385c(3): push 0x30(%rbp)
385f(3): mov %eax,%r9d
3862(3): push 0x28(%rbp)
3865(2): push %r15
3867(3): mov %r11,%rsi
386a(5): mov 0x28(%rsp),%rdx
386f(3): mov %r12,%rdi
3872(5): mov %r11,0x30(%rsp)
3877(5): call 0xffffecd9(%rip)
387c(4): add $0x20,%rsp
3880(5): mov 0x10(%rsp),%r11
3885(3): cmp %rax,%r11
3888(2): jnbe 0x69(%rip)
388a(4): lea 0x1(%rax),%rsi
388e(7): lea 0x20486b(%rip),%rax
3895(3): cmp %rax,%r12
3898(3): mov %rsi,(%rbx)
389b(2): jz 0x14(%rip)
389d(3): mov %r12,%rdi
38a0(5): mov %rsi,0x10(%rsp)
38a5(5): call 0xffffdbcb(%rip)
38aa(5): mov 0x10(%rsp),%rsi
38af(3): mov %rsi,%rdi
38b2(5): mov %rsi,0x10(%rsp)
38b7(5): call 0xe59(%rip)
38bc(4): sub $0x8,%rsp
38c0(4): mov %rax,0x8(%rbx)
38c4(4): mov 0x0(%rbp),%r8d
38c8(3): push 0x30(%rbp)
38cb(3): push 0x28(%rbp)
38ce(3): mov %r14,%rcx
38d1(2): push %r15
38d3(5): mov 0x3c(%rsp),%r9d
38d8(3): mov %rax,%rdi
38db(5): mov 0x28(%rsp),%rdx
38e0(5): mov 0x30(%rsp),%rsi
38e5(3): mov %rax,%r12
38e8(5): call 0xffffec68(%rip)
38ed(4): add $0x20,%rsp
38f1(4): mov 0x18(%rsp),%eax
38f5(4): mov %eax,0x0(%r13)
38f9(4): add $0x28,%rsp
38fd(3): mov %r12,%rax
3900(1): pop %rbx
3901(1): pop %rbp
3902(2): pop %r12
3904(2): pop %r13
3906(2): pop %r14
3908(2): pop %r15
390a(1): ret near (%rsp)
390b(5): nop 0x0(%rax,%rax,1)
3910(2): xor %edi,%edi
3912(5): call 0xe5e(%rip)
3917(8): movdqa 0x204751(%rip),%xmm0
391f(3): mov %rax,%rbx
3922(7): mov %rax,0x204737(%rip)
3929(3): movups %xmm0,(%rax)
392c(5): jmp 0xfffffee1(%rip)
3931(5): call 0xffffdb4f(%rip)
3936(5): call 0x102a(%rip)

"clone_quoting_options" :
3940(2): push %r12
3942(1): push %rbp
3943(1): push %rbx
3944(3): mov %rdi,%rbx
3947(5): call 0xffffdb49(%rip)
394c(3): mov (%rax),%r12d
394f(3): mov %rax,%rbp
3952(7): lea 0x2048a7(%rip),%rax
3959(3): test %rbx,%rbx
395c(5): mov $0x38,%esi
3961(4): cmove %rax,%rbx
3965(3): mov %rbx,%rdi
3968(5): call 0xfa8(%rip)
396d(4): mov %r12d,0x0(%rbp)
3971(1): pop %rbx
3972(1): pop %rbp
3973(2): pop %r12
3975(1): ret near (%rsp)

"get_quoting_style" :
3980(7): lea 0x204879(%rip),%rax
3987(3): test %rdi,%rdi
398a(4): cmove %rax,%rdi
398e(2): mov (%rdi),%eax
3990(1): ret near (%rsp)

"set_quoting_style" :
39a0(7): lea 0x204859(%rip),%rax
39a7(3): test %rdi,%rdi
39aa(4): cmove %rax,%rdi
39ae(2): mov %esi,(%rdi)
39b0(1): ret near (%rsp)

"set_char_quoting" :
39c0(7): lea 0x204839(%rip),%rax
39c7(3): test %rdi,%rdi
39ca(2): mov %esi,%ecx
39cc(4): cmove %rax,%rdi
39d0(2): mov %esi,%eax
39d2(3): and $0x1f,%ecx
39d5(3): shr $0x5,%al
39d8(3): movzx %al,%eax
39db(5): lea 0x8(%rdi,%rax,4),%rdi
39e0(2): mov (%rdi),%esi
39e2(2): mov %esi,%eax
39e4(2): shr %cl,%eax
39e6(2): xor %eax,%edx
39e8(3): and $0x1,%eax
39eb(3): and $0x1,%edx
39ee(2): shl/sal %cl,%edx
39f0(2): xor %esi,%edx
39f2(2): mov %edx,(%rdi)
39f4(1): ret near (%rsp)

"set_quoting_flags" :
3a00(7): lea 0x2047f9(%rip),%rax
3a07(3): test %rdi,%rdi
3a0a(4): cmove %rax,%rdi
3a0e(3): mov 0x4(%rdi),%eax
3a11(3): mov %esi,0x4(%rdi)
3a14(1): ret near (%rsp)

"set_custom_quoting" :
3a20(7): lea 0x2047d9(%rip),%rax
3a27(3): test %rdi,%rdi
3a2a(4): cmove %rax,%rdi
3a2e(3): test %rsi,%rsi
3a31(6): mov $0xa,(%rdi)
3a37(2): jz 0x10(%rip)
3a39(3): test %rdx,%rdx
3a3c(2): jz 0xb(%rip)
3a3e(4): mov %rsi,0x28(%rdi)
3a42(4): mov %rdx,0x30(%rdi)
3a46(1): ret near (%rsp)
3a47(4): sub $0x8,%rsp
3a4b(5): call 0xffffda35(%rip)

"quotearg_buffer" :
3a50(2): push %r15
3a52(2): push %r14
3a54(7): lea 0x2047a5(%rip),%rax
3a5b(2): push %r13
3a5d(2): push %r12
3a5f(3): mov %rdi,%r13
3a62(1): push %rbp
3a63(1): push %rbx
3a64(3): mov %r8,%rbx
3a67(3): mov %rsi,%r14
3a6a(3): mov %rdx,%r15
3a6d(4): sub $0x18,%rsp
3a71(3): test %r8,%r8
3a74(4): cmove %rax,%rbx
3a78(5): mov %rcx,0x8(%rsp)
3a7d(5): call 0xffffda13(%rip)
3a82(3): mov (%rax),%r12d
3a85(3): mov %rax,%rbp
3a88(4): lea 0x8(%rbx),%rax
3a8c(4): sub $0x8,%rsp
3a90(4): mov 0x4(%rbx),%r9d
3a94(3): push 0x30(%rbx)
3a97(3): mov (%rbx),%r8d
3a9a(3): push 0x28(%rbx)
3a9d(3): mov %r15,%rdx
3aa0(1): push %rax
3aa1(5): mov 0x28(%rsp),%rcx
3aa6(3): mov %r14,%rsi
3aa9(3): mov %r13,%rdi
3aac(5): call 0xffffeaa4(%rip)
3ab1(4): mov %r12d,0x0(%rbp)
3ab5(4): add $0x38,%rsp
3ab9(1): pop %rbx
3aba(1): pop %rbp
3abb(2): pop %r12
3abd(2): pop %r13
3abf(2): pop %r14
3ac1(2): pop %r15
3ac3(1): ret near (%rsp)

"quotearg_alloc_mem" :
3ad0(2): push %r15
3ad2(2): push %r14
3ad4(7): lea 0x204725(%rip),%rax
3adb(2): push %r13
3add(2): push %r12
3adf(3): mov %rdx,%r12
3ae2(1): push %rbp
3ae3(1): push %rbx
3ae4(3): mov %rcx,%rbx
3ae7(3): mov %rdi,%r14
3aea(3): mov %rsi,%r15
3aed(4): sub $0x38,%rsp
3af1(3): test %rcx,%rcx
3af4(4): cmove %rax,%rbx
3af8(2): xor %ebp,%ebp
3afa(5): call 0xffffd996(%rip)
3aff(3): test %r12,%r12
3b02(3): mov %rax,%r13
3b05(2): mov (%rax),%eax
3b07(4): setz %bpl
3b0b(3): or 0x4(%rbx),%ebp
3b0e(4): lea 0x8(%rbx),%r10
3b12(4): sub $0x8,%rsp
3b16(3): mov (%rbx),%r8d
3b19(3): mov %r15,%rcx
3b1c(4): mov %eax,0x14(%rsp)
3b20(3): push 0x30(%rbx)
3b23(3): mov %r14,%rdx
3b26(3): push 0x28(%rbx)
3b29(2): push %r10
3b2b(2): xor %esi,%esi
3b2d(3): mov %ebp,%r9d
3b30(2): xor %edi,%edi
3b32(5): mov %r10,0x40(%rsp)
3b37(5): call 0xffffea19(%rip)
3b3c(4): lea 0x1(%rax),%rsi
3b40(5): mov %rax,0x48(%rsp)
3b45(4): add $0x20,%rsp
3b49(3): mov %rsi,%rdi
3b4c(5): mov %rsi,0x18(%rsp)
3b51(5): call 0xbbf(%rip)
3b56(5): mov %rax,0x10(%rsp)
3b5b(4): sub $0x8,%rsp
3b5f(3): push 0x30(%rbx)
3b62(3): push 0x28(%rbx)
3b65(5): mov 0x38(%rsp),%r10
3b6a(3): mov %ebp,%r9d
3b6d(3): mov (%rbx),%r8d
3b70(3): mov %r15,%rcx
3b73(3): mov %r14,%rdx
3b76(3): mov %rax,%rdi
3b79(2): push %r10
3b7b(5): mov 0x38(%rsp),%rsi
3b80(5): call 0xffffe9d0(%rip)
3b85(4): mov 0x2c(%rsp),%eax
3b89(4): add $0x20,%rsp
3b8d(3): test %r12,%r12
3b90(4): mov %eax,0x0(%r13)
3b94(2): jz 0xb(%rip)
3b96(5): mov 0x28(%rsp),%r11
3b9b(4): mov %r11,(%r12)
3b9f(5): mov 0x10(%rsp),%rax
3ba4(4): add $0x38,%rsp
3ba8(1): pop %rbx
3ba9(1): pop %rbp
3baa(2): pop %r12
3bac(2): pop %r13
3bae(2): pop %r14
3bb0(2): pop %r15
3bb2(1): ret near (%rsp)

"quotearg_alloc" :
3bc0(3): mov %rdx,%rcx
3bc3(2): xor %edx,%edx
3bc5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3bd0(6): mov 0x204482(%rip),%eax
3bd6(2): push %r12
3bd8(7): mov 0x204481(%rip),%r12
3bdf(1): push %rbp
3be0(1): push %rbx
3be1(3): cmp $0x1,%eax
3be4(2): jle 0x2d(%rip)
3be6(3): sub $0x2,%eax
3be9(5): lea 0x18(%r12),%rbx
3bee(4): shl/sal $0x4,%rax
3bf2(5): lea 0x28(%r12,%rax,1),%rbp
3bf7(9): nop 0x0(%rax,%rax,1)
3c00(3): mov (%rbx),%rdi
3c03(4): add $0x10,%rbx
3c07(5): call 0xffffd869(%rip)
3c0c(3): cmp %rbp,%rbx
3c0f(2): jnz 0xfffffff1(%rip)
3c11(5): mov 0x8(%r12),%rdi
3c16(7): lea 0x2044e3(%rip),%rbx
3c1d(3): cmp %rbx,%rdi
3c20(2): jz 0x19(%rip)
3c22(5): call 0xffffd84e(%rip)
3c27(b): mov $0x100,0x20443e(%rip)
3c32(7): mov %rbx,0x20443f(%rip)
3c39(7): lea 0x204430(%rip),%rbx
3c40(3): cmp %rbx,%r12
3c43(2): jz 0x11(%rip)
3c45(3): mov %r12,%rdi
3c48(5): call 0xffffd828(%rip)
3c4d(7): mov %rbx,0x20440c(%rip)
3c54(1): pop %rbx
3c55(a): mov $0x1,0x2043f9(%rip)
3c5f(1): pop %rbp
3c60(2): pop %r12
3c62(1): ret near (%rsp)

"quotearg_n" :
3c70(7): lea 0x204589(%rip),%rcx
3c77(7): mov $0xffffffff,%rdx
3c7e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3c90(7): lea 0x204569(%rip),%rcx
3c97(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3ca0(7): lea 0x204559(%rip),%rcx
3ca7(3): mov %rdi,%rsi
3caa(7): mov $0xffffffff,%rdx
3cb1(2): xor %edi,%edi
3cb3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3cc0(7): lea 0x204539(%rip),%rcx
3cc7(3): mov %rsi,%rdx
3cca(3): mov %rdi,%rsi
3ccd(2): xor %edi,%edi
3ccf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3ce0(4): sub $0x48,%rsp
3ce4(3): mov %rdx,%rax
3ce7(9): mov $0x28,%rdx
3cf0(5): mov %rdx,0x38(%rsp)
3cf5(2): xor %edx,%edx
3cf7(3): cmp $0xa,%esi
3cfa(2): jz 0x6a(%rip)
3cfc(3): mov %esi,(%rsp)
3cff(3): mov %rsp,%rcx
3d02(7): mov $0xffffffff,%rdx
3d09(3): mov %rax,%rsi
3d0c(9): mov $0x0,0x4(%rsp)
3d15(9): mov $0x0,0xc(%rsp)
3d1e(9): mov $0x0,0x14(%rsp)
3d27(9): mov $0x0,0x1c(%rsp)
3d30(9): mov $0x0,0x24(%rsp)
3d39(9): mov $0x0,0x2c(%rsp)
3d42(8): mov $0x0,0x34(%rsp)
3d4a(5): call 0xfffffa46(%rip)
3d4f(5): mov 0x38(%rsp),%rcx
3d54(9): xor $0x28,%rcx
3d5d(2): jnz 0xc(%rip)
3d5f(4): add $0x48,%rsp
3d63(1): ret near (%rsp)
3d64(5): call 0xffffd71c(%rip)
3d69(5): call 0xffffd7c7(%rip)

"quotearg_n_style_mem" :
3d70(4): sub $0x48,%rsp
3d74(3): mov %rdx,%rax
3d77(3): mov %rcx,%rdx
3d7a(9): mov $0x28,%rcx
3d83(5): mov %rcx,0x38(%rsp)
3d88(2): xor %ecx,%ecx
3d8a(3): cmp $0xa,%esi
3d8d(2): jz 0x63(%rip)
3d8f(3): mov %esi,(%rsp)
3d92(3): mov %rsp,%rcx
3d95(3): mov %rax,%rsi
3d98(9): mov $0x0,0x4(%rsp)
3da1(9): mov $0x0,0xc(%rsp)
3daa(9): mov $0x0,0x14(%rsp)
3db3(9): mov $0x0,0x1c(%rsp)
3dbc(9): mov $0x0,0x24(%rsp)
3dc5(9): mov $0x0,0x2c(%rsp)
3dce(8): mov $0x0,0x34(%rsp)
3dd6(5): call 0xfffff9ba(%rip)
3ddb(5): mov 0x38(%rsp),%rdx
3de0(9): xor $0x28,%rdx
3de9(2): jnz 0xc(%rip)
3deb(4): add $0x48,%rsp
3def(1): ret near (%rsp)
3df0(5): call 0xffffd690(%rip)
3df5(5): call 0xffffd73b(%rip)

"quotearg_style" :
3e00(3): mov %rsi,%rdx
3e03(2): mov %edi,%esi
3e05(2): xor %edi,%edi
3e07(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3e10(3): mov %rdx,%rcx
3e13(3): mov %rsi,%rdx
3e16(2): mov %edi,%esi
3e18(2): xor %edi,%edi
3e1a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3e20(4): sub $0x48,%rsp
3e24(2): mov %edx,%ecx
3e26(9): mov $0x28,%rax
3e2f(5): mov %rax,0x38(%rsp)
3e34(2): xor %eax,%eax
3e36(7): mov 0x2043f3(%rip),%rax
3e3d(3): mov %rsp,%r8
3e40(3): and $0x1f,%ecx
3e43(8): movdqa 0x2043b5(%rip),%xmm0
3e4b(5): mov %rax,0x30(%rsp)
3e50(2): mov %edx,%eax
3e52(4): movaps %xmm0,(%rsp)
3e56(3): shr $0x5,%al
3e59(3): movzx %al,%eax
3e5c(5): lea 0x8(%r8,%rax,4),%r9
3e61(8): movdqa 0x2043a7(%rip),%xmm0
3e69(5): movaps %xmm0,0x10(%rsp)
3e6e(8): movdqa 0x2043aa(%rip),%xmm0
3e76(5): movaps %xmm0,0x20(%rsp)
3e7b(3): mov (%r9),%edx
3e7e(2): mov %edx,%eax
3e80(2): shr %cl,%eax
3e82(2): not %eax
3e84(3): and $0x1,%eax
3e87(2): shl/sal %cl,%eax
3e89(3): mov %r8,%rcx
3e8c(2): xor %edx,%eax
3e8e(3): mov %rsi,%rdx
3e91(3): mov %rdi,%rsi
3e94(3): mov %eax,(%r9)
3e97(2): xor %edi,%edi
3e99(5): call 0xfffff8f7(%rip)
3e9e(5): mov 0x38(%rsp),%rsi
3ea3(9): xor $0x28,%rsi
3eac(2): jnz 0x7(%rip)
3eae(4): add $0x48,%rsp
3eb2(1): ret near (%rsp)
3eb3(5): call 0xffffd67d(%rip)

"quotearg_char" :
3ec0(4): movsx %sil,%edx
3ec4(7): mov $0xffffffff,%rsi
3ecb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3ed0(5): mov $0x3a,%edx
3ed5(7): mov $0xffffffff,%rsi
3edc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3ef0(5): mov $0x3a,%edx
3ef5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3f00(4): sub $0x48,%rsp
3f04(3): mov %rdx,%rax
3f07(9): mov $0x28,%rdx
3f10(5): mov %rdx,0x38(%rsp)
3f15(2): xor %edx,%edx
3f17(3): cmp $0xa,%esi
3f1a(2): jz 0x6a(%rip)
3f1c(3): mov %esi,(%rsp)
3f1f(3): mov %rsp,%rcx
3f22(7): mov $0xffffffff,%rdx
3f29(3): mov %rax,%rsi
3f2c(9): mov $0x0,0x4(%rsp)
3f35(9): mov $0x4000000,0xc(%rsp)
3f3e(9): mov $0x0,0x14(%rsp)
3f47(9): mov $0x0,0x1c(%rsp)
3f50(9): mov $0x0,0x24(%rsp)
3f59(9): mov $0x0,0x2c(%rsp)
3f62(8): mov $0x0,0x34(%rsp)
3f6a(5): call 0xfffff826(%rip)
3f6f(5): mov 0x38(%rsp),%rcx
3f74(9): xor $0x28,%rcx
3f7d(2): jnz 0xc(%rip)
3f7f(4): add $0x48,%rsp
3f83(1): ret near (%rsp)
3f84(5): call 0xffffd4fc(%rip)
3f89(5): call 0xffffd5a7(%rip)

"quotearg_n_custom_mem" :
3f90(4): sub $0x48,%rsp
3f94(3): mov %rcx,%r9
3f97(7): mov 0x204292(%rip),%rcx
3f9e(8): movdqa 0x20425a(%rip),%xmm0
3fa6(9): mov $0x28,%rax
3faf(5): mov %rax,0x38(%rsp)
3fb4(2): xor %eax,%eax
3fb6(4): movaps %xmm0,(%rsp)
3fba(3): test %rsi,%rsi
3fbd(5): mov %rcx,0x30(%rsp)
3fc2(7): mov $0xa,(%rsp)
3fc9(8): movdqa 0x20423f(%rip),%xmm0
3fd1(5): movaps %xmm0,0x10(%rsp)
3fd6(8): movdqa 0x204242(%rip),%xmm0
3fde(5): movaps %xmm0,0x20(%rsp)
3fe3(2): jz 0x34(%rip)
3fe5(3): test %rdx,%rdx
3fe8(2): jz 0x2f(%rip)
3fea(5): mov %rsi,0x28(%rsp)
3fef(5): mov %rdx,0x30(%rsp)
3ff4(3): mov %rsp,%rcx
3ff7(3): mov %r8,%rdx
3ffa(3): mov %r9,%rsi
3ffd(5): call 0xfffff793(%rip)
4002(5): mov 0x38(%rsp),%rdi
4007(9): xor $0x28,%rdi
4010(2): jnz 0xc(%rip)
4012(4): add $0x48,%rsp
4016(1): ret near (%rsp)
4017(5): call 0xffffd469(%rip)
401c(5): call 0xffffd514(%rip)

"quotearg_n_custom" :
4030(7): mov $0xffffffff,%r8
4037(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4040(3): mov %rdx,%rcx
4043(7): mov $0xffffffff,%r8
404a(3): mov %rsi,%rdx
404d(3): mov %rdi,%rsi
4050(2): xor %edi,%edi
4052(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4060(3): mov %rcx,%r8
4063(3): mov %rdx,%rcx
4066(3): mov %rsi,%rdx
4069(3): mov %rdi,%rsi
406c(2): xor %edi,%edi
406e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4080(7): lea 0x203f99(%rip),%rcx
4087(5): jmp 0xfffff709(%rip)

"quote_mem" :
4090(7): lea 0x203f89(%rip),%rcx
4097(3): mov %rsi,%rdx
409a(3): mov %rdi,%rsi
409d(2): xor %edi,%edi
409f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
40b0(7): lea 0x203f69(%rip),%rcx
40b7(7): mov $0xffffffff,%rdx
40be(5): jmp 0xfffff6d2(%rip)

"quote" :
40d0(7): lea 0x203f49(%rip),%rcx
40d7(3): mov %rdi,%rsi
40da(7): mov $0xffffffff,%rdx
40e1(2): xor %edi,%edi
40e3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
40f0(2): push %r15
40f2(2): push %r14
40f4(2): push %r13
40f6(2): push %r12
40f8(3): mov %r9,%r12
40fb(1): push %rbp
40fc(1): push %rbx
40fd(3): mov %rdi,%rbp
4100(3): mov %r8,%rbx
4103(4): sub $0x28,%rsp
4107(3): test %rsi,%rsi
410a(6): jz 0x11e(%rip)
4110(3): mov %rdx,%r8
4113(7): lea 0x1a8e(%rip),%rdx
411a(3): mov %rcx,%r9
411d(2): xor %eax,%eax
411f(3): mov %rsi,%rcx
4122(5): mov $0x1,%esi
4127(5): call 0xffffd5f9(%rip)
412c(7): lea 0x1a88(%rip),%rsi
4133(2): xor %edi,%edi
4135(5): mov $0x5,%edx
413a(5): call 0xffffd3c6(%rip)
413f(7): lea 0x1d9a(%rip),%rdx
4146(3): mov %rax,%rcx
4149(6): mov $0x7e3,%r8d
414f(5): mov $0x1,%esi
4154(3): mov %rbp,%rdi
4157(2): xor %eax,%eax
4159(5): call 0xffffd5c7(%rip)
415e(7): lea 0x1ae3(%rip),%rsi
4165(2): xor %edi,%edi
4167(5): mov $0x5,%edx
416c(5): call 0xffffd394(%rip)
4171(3): mov %rbp,%rsi
4174(3): mov %rax,%rdi
4177(5): call 0xffffd479(%rip)
417c(4): cmp $0x9,%r12
4180(6): jnbe 0x340(%rip)
4186(7): lea 0x1d17(%rip),%rdx
418d(4): movsxd 0x0(%rdx,%r12,4),%rax
4191(3): add %rdx,%rax
4194(2): jmp %rax
4196(a): nop 0x0(%rax,%rax,1)
41a0(4): mov 0x38(%rbx),%r9
41a4(4): mov 0x10(%rbx),%rax
41a8(7): lea 0x1c09(%rip),%rsi
41af(4): mov 0x8(%rbx),%r8
41b3(5): mov $0x5,%edx
41b8(2): xor %edi,%edi
41ba(4): mov 0x30(%rbx),%r13
41be(4): mov 0x28(%rbx),%r12
41c2(5): mov %r9,0x10(%rsp)
41c7(4): mov 0x20(%rbx),%r15
41cb(4): mov 0x18(%rbx),%r14
41cf(4): mov %rax,(%rsp)
41d3(5): mov %r8,0x8(%rsp)
41d8(3): mov (%rbx),%rbx
41db(5): call 0xffffd325(%rip)
41e0(4): sub $0x8,%rsp
41e4(5): mov 0x18(%rsp),%r9
41e9(3): mov %rax,%rdx
41ec(3): mov %rbx,%rcx
41ef(5): mov $0x1,%esi
41f4(3): mov %rbp,%rdi
41f7(2): xor %eax,%eax
41f9(2): push %r9
41fb(2): push %r13
41fd(2): push %r12
41ff(2): push %r15
4201(2): push %r14
4203(5): mov 0x30(%rsp),%r9
4208(5): mov 0x38(%rsp),%r8
420d(5): call 0xffffd513(%rip)
4212(4): add $0x30,%rsp
4216(4): add $0x28,%rsp
421a(1): pop %rbx
421b(1): pop %rbp
421c(2): pop %r12
421e(2): pop %r13
4220(2): pop %r14
4222(2): pop %r15
4224(1): ret near (%rsp)
4225(3): nop (%rax)
4228(3): mov %rcx,%r8
422b(3): mov %rdx,%rcx
422e(7): lea 0x197f(%rip),%rdx
4235(5): mov $0x1,%esi
423a(2): xor %eax,%eax
423c(5): call 0xffffd4e4(%rip)
4241(5): jmp 0xfffffeeb(%rip)
4246(a): nop 0x0(%rax,%rax,1)
4250(4): mov 0x40(%rbx),%r10
4254(4): mov 0x38(%rbx),%r9
4258(7): lea 0x1b89(%rip),%rsi
425f(4): mov 0x10(%rbx),%rax
4263(4): mov 0x8(%rbx),%r8
4267(5): mov $0x5,%edx
426c(4): mov 0x30(%rbx),%r13
4270(4): mov 0x28(%rbx),%r12
4274(4): mov 0x20(%rbx),%r15
4278(4): mov 0x18(%rbx),%r14
427c(3): mov (%rbx),%rbx
427f(5): mov %r10,0x18(%rsp)
4284(5): mov %r9,0x10(%rsp)
4289(4): mov %rax,(%rsp)
428d(5): mov %r8,0x8(%rsp)
4292(2): xor %edi,%edi
4294(5): call 0xffffd26c(%rip)
4299(5): mov 0x18(%rsp),%r10
429e(2): push %r10
42a0(5): jmp 0xffffff44(%rip)
42a5(3): nop (%rax)
42a8(3): mov (%rbx),%rbx
42ab(7): lea 0x190d(%rip),%rsi
42b2(5): mov $0x5,%edx
42b7(2): xor %edi,%edi
42b9(5): call 0xffffd247(%rip)
42be(4): add $0x28,%rsp
42c2(3): mov %rbx,%rcx
42c5(3): mov %rbp,%rdi
42c8(1): pop %rbx
42c9(1): pop %rbp
42ca(2): pop %r12
42cc(2): pop %r13
42ce(2): pop %r14
42d0(2): pop %r15
42d2(3): mov %rax,%rdx
42d5(5): mov $0x1,%esi
42da(2): xor %eax,%eax
42dc(5): jmp 0xffffd444(%rip)
42e1(7): nop 0x0(%rax)
42e8(4): mov 0x8(%rbx),%r12
42ec(7): lea 0x18dc(%rip),%rsi
42f3(3): mov (%rbx),%rbx
42f6(5): mov $0x5,%edx
42fb(2): xor %edi,%edi
42fd(5): call 0xffffd203(%rip)
4302(4): add $0x28,%rsp
4306(3): mov %r12,%r8
4309(3): mov %rbx,%rcx
430c(3): mov %rbp,%rdi
430f(3): mov %rax,%rdx
4312(5): mov $0x1,%esi
4317(1): pop %rbx
4318(1): pop %rbp
4319(2): pop %r12
431b(2): pop %r13
431d(2): pop %r14
431f(2): pop %r15
4321(2): xor %eax,%eax
4323(5): jmp 0xffffd3fd(%rip)
4328(8): nop 0x0(%rax,%rax,1)
4330(4): mov 0x10(%rbx),%r13
4334(4): mov 0x8(%rbx),%r12
4338(7): lea 0x18a7(%rip),%rsi
433f(3): mov (%rbx),%rbx
4342(5): mov $0x5,%edx
4347(2): xor %edi,%edi
4349(5): call 0xffffd1b7(%rip)
434e(4): add $0x28,%rsp
4352(3): mov %r13,%r9
4355(3): mov %r12,%r8
4358(3): mov %rbx,%rcx
435b(3): mov %rbp,%rdi
435e(3): mov %rax,%rdx
4361(1): pop %rbx
4362(1): pop %rbp
4363(2): pop %r12
4365(2): pop %r13
4367(2): pop %r14
4369(2): pop %r15
436b(5): mov $0x1,%esi
4370(2): xor %eax,%eax
4372(5): jmp 0xffffd3ae(%rip)
4377(9): nop 0x0(%rax,%rax,1)
4380(7): lea 0x1991(%rip),%rsi
4387(5): mov $0x5,%edx
438c(2): xor %edi,%edi
438e(4): mov 0x18(%rbx),%r14
4392(4): mov 0x10(%rbx),%r13
4396(4): mov 0x8(%rbx),%r12
439a(3): mov (%rbx),%rbx
439d(5): call 0xffffd163(%rip)
43a2(4): sub $0x8,%rsp
43a6(2): push %r14
43a8(3): mov %rax,%rdx
43ab(3): mov %r13,%r9
43ae(3): mov %r12,%r8
43b1(3): mov %rbx,%rcx
43b4(3): mov %rbp,%rdi
43b7(5): mov $0x1,%esi
43bc(2): xor %eax,%eax
43be(5): call 0xffffd362(%rip)
43c3(1): pop %rax
43c4(1): pop %rdx
43c5(4): add $0x28,%rsp
43c9(1): pop %rbx
43ca(1): pop %rbp
43cb(2): pop %r12
43cd(2): pop %r13
43cf(2): pop %r14
43d1(2): pop %r15
43d3(1): ret near (%rsp)
43d4(4): nop 0x0(%rax)
43d8(4): mov 0x20(%rbx),%r15
43dc(7): lea 0x1955(%rip),%rsi
43e3(5): mov $0x5,%edx
43e8(2): xor %edi,%edi
43ea(4): mov 0x18(%rbx),%r14
43ee(4): mov 0x10(%rbx),%r13
43f2(4): mov 0x8(%rbx),%r12
43f6(3): mov (%rbx),%rbx
43f9(5): call 0xffffd107(%rip)
43fe(2): push %r15
4400(2): jmp 0xffffffa6(%rip)
4402(6): nop 0x0(%rax,%rax,1)
4408(4): mov 0x8(%rbx),%r8
440c(4): mov 0x28(%rbx),%r12
4410(7): lea 0x1949(%rip),%rsi
4417(4): mov 0x20(%rbx),%r15
441b(4): mov 0x18(%rbx),%r14
441f(5): mov $0x5,%edx
4424(4): mov 0x10(%rbx),%r13
4428(2): xor %edi,%edi
442a(3): mov (%rbx),%rbx
442d(4): mov %r8,(%rsp)
4431(5): call 0xffffd0cf(%rip)
4436(4): sub $0x8,%rsp
443a(3): mov %r13,%r9
443d(2): push %r12
443f(2): push %r15
4441(2): push %r14
4443(5): mov 0x20(%rsp),%r8
4448(3): mov %rbx,%rcx
444b(3): mov %rax,%rdx
444e(3): mov %rbp,%rdi
4451(5): mov $0x1,%esi
4456(2): xor %eax,%eax
4458(5): call 0xffffd2c8(%rip)
445d(4): add $0x20,%rsp
4461(4): add $0x28,%rsp
4465(1): pop %rbx
4466(1): pop %rbp
4467(2): pop %r12
4469(2): pop %r13
446b(2): pop %r14
446d(2): pop %r15
446f(1): ret near (%rsp)
4470(4): mov 0x10(%rbx),%r9
4474(4): mov 0x30(%rbx),%r13
4478(7): lea 0x1909(%rip),%rsi
447f(4): mov 0x28(%rbx),%r12
4483(4): mov 0x20(%rbx),%r15
4487(5): mov $0x5,%edx
448c(4): mov 0x18(%rbx),%r14
4490(4): mov 0x8(%rbx),%r8
4494(2): xor %edi,%edi
4496(5): mov %r9,0x8(%rsp)
449b(3): mov (%rbx),%rbx
449e(4): mov %r8,(%rsp)
44a2(5): call 0xffffd05e(%rip)
44a7(2): push %r13
44a9(2): push %r12
44ab(2): push %r15
44ad(2): push %r14
44af(5): mov 0x28(%rsp),%r9
44b4(2): jmp 0xffffff8f(%rip)
44b6(a): nop 0x0(%rax,%rax,1)
44c0(4): mov 0x40(%rbx),%r10
44c4(4): mov 0x38(%rbx),%r9
44c8(5): mov $0x5,%edx
44cd(4): mov 0x10(%rbx),%rax
44d1(4): mov 0x8(%rbx),%r8
44d5(7): lea 0x1944(%rip),%rsi
44dc(4): mov 0x30(%rbx),%r13
44e0(4): mov 0x28(%rbx),%r12
44e4(4): mov 0x20(%rbx),%r15
44e8(4): mov 0x18(%rbx),%r14
44ec(5): mov %r10,0x18(%rsp)
44f1(5): mov %r9,0x10(%rsp)
44f6(4): mov %rax,(%rsp)
44fa(5): mov %r8,0x8(%rsp)
44ff(3): mov (%rbx),%rbx
4502(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4510(3): xor %r9d,%r9d
4513(4): cmp $0x0,(%r8)
4517(2): jz 0x14(%rip)
4519(7): nop 0x0(%rax)
4520(4): add $0x1,%r9
4524(5): cmp $0x0,0x0(%r8,%r9,8)
4529(2): jnz 0xfffffff7(%rip)
452b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4530(4): sub $0x68,%rsp
4534(3): mov %r8,%r10
4537(3): xor %r9d,%r9d
453a(9): mov $0x28,%rax
4543(5): mov %rax,0x58(%rsp)
4548(2): xor %eax,%eax
454a(3): mov %rsp,%r8
454d(3): nop (%rax)
4550(3): mov (%r10),%eax
4553(3): cmp $0x2f,%eax
4556(2): jnbe 0x44(%rip)
4558(3): mov %eax,%r11d
455b(4): add 0x10(%r10),%r11
455f(3): add $0x8,%eax
4562(3): mov %eax,(%r10)
4565(3): mov (%r11),%rax
4568(3): test %rax,%rax
456b(4): mov %rax,0x0(%r8,%r9,8)
456f(2): jz 0xc(%rip)
4571(4): add $0x1,%r9
4575(4): cmp $0xa,%r9
4579(2): jnz 0xffffffd7(%rip)
457b(5): call 0xfffffb75(%rip)
4580(5): mov 0x58(%rsp),%rax
4585(9): xor $0x28,%rax
458e(2): jnz 0x7(%rip)
4590(4): add $0x68,%rsp
4594(1): ret near (%rsp)
4595(5): call 0xffffcf9b(%rip)
459a(4): mov 0x8(%r10),%r11
459e(4): lea 0x8(%r11),%rax
45a2(4): mov %rax,0x8(%r10)
45a6(2): jmp 0xffffffbf(%rip)

"version_etc" :
45b0(1): push %rbp
45b1(1): push %rbx
45b2(6): mov $0x20,%r10d
45b8(3): xor %r11d,%r11d
45bb(7): sub $0xb8,%rsp
45c2(9): mov $0x28,%rax
45cb(5): mov %rax,0x78(%rsp)
45d0(2): xor %eax,%eax
45d2(8): lea 0xd0(%rsp),%rax
45da(8): mov %r8,0xa0(%rsp)
45e2(8): lea 0xd0(%rsp),%rbx
45ea(5): lea 0x20(%rsp),%r8
45ef(8): mov %r9,0xa8(%rsp)
45f7(8): mov $0x20,0x8(%rsp)
45ff(5): mov %rax,0x10(%rsp)
4604(8): lea 0x80(%rsp),%rax
460c(3): xor %r9d,%r9d
460f(5): mov %rax,0x18(%rsp)
4614(3): mov %rax,%rbp
4617(9): nop 0x0(%rax,%rax,1)
4620(4): cmp $0x2f,%r10d
4624(2): jnbe 0x58(%rip)
4626(3): mov %r10d,%eax
4629(6): mov $0x1,%r11d
462f(4): add $0x8,%r10d
4633(3): add %rbp,%rax
4636(3): mov (%rax),%rax
4639(3): test %rax,%rax
463c(4): mov %rax,0x0(%r8,%r9,8)
4640(2): jz 0xc(%rip)
4642(4): add $0x1,%r9
4646(4): cmp $0xa,%r9
464a(2): jnz 0xffffffd6(%rip)
464c(3): test %r11b,%r11b
464f(2): jnz 0x26(%rip)
4651(5): call 0xfffffa9f(%rip)
4656(5): mov 0x78(%rsp),%rax
465b(9): xor $0x28,%rax
4664(2): jnz 0xc(%rip)
4666(7): add $0xb8,%rsp
466d(1): pop %rbx
466e(1): pop %rbp
466f(1): ret near (%rsp)
4670(5): call 0xffffcec0(%rip)
4675(5): mov %r10d,0x8(%rsp)
467a(2): jmp 0xffffffd7(%rip)
467c(3): mov %rbx,%rax
467f(4): add $0x8,%rbx
4683(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4690(1): push %rbx
4691(7): lea 0x156a(%rip),%rsi
4698(5): mov $0x5,%edx
469d(2): xor %edi,%edi
469f(5): call 0xffffce61(%rip)
46a4(7): lea 0x156c(%rip),%rdx
46ab(3): mov %rax,%rsi
46ae(5): mov $0x1,%edi
46b3(2): xor %eax,%eax
46b5(5): call 0xffffcfeb(%rip)
46ba(7): lea 0x156c(%rip),%rsi
46c1(5): mov $0x5,%edx
46c6(2): xor %edi,%edi
46c8(5): call 0xffffce38(%rip)
46cd(7): lea 0xeb4(%rip),%rcx
46d4(7): lea 0xc04(%rip),%rdx
46db(3): mov %rax,%rsi
46de(5): mov $0x1,%edi
46e3(2): xor %eax,%eax
46e5(5): call 0xffffcfbb(%rip)
46ea(7): mov 0x203997(%rip),%rbx
46f1(7): lea 0x1768(%rip),%rsi
46f8(2): xor %edi,%edi
46fa(5): mov $0x5,%edx
46ff(5): call 0xffffce01(%rip)
4704(3): mov %rbx,%rsi
4707(3): mov %rax,%rdi
470a(1): pop %rbx
470b(5): jmp 0xffffcee5(%rip)

"xmalloc" :
4710(1): push %rbx
4711(3): mov %rdi,%rbx
4714(5): call 0xffffcf1c(%rip)
4719(3): test %rax,%rax
471c(2): jnz 0x7(%rip)
471e(3): test %rbx,%rbx
4721(2): jnz 0x4(%rip)
4723(1): pop %rbx
4724(1): ret near (%rsp)
4725(5): call 0x23b(%rip)

"xnmalloc" :
4730(3): mov %rdi,%rax
4733(3): mul %rax,%rsi,%rdx
4736(3): mov %rax,%rdi
4739(3): seto %al
473c(3): test %rdi,%rdi
473f(2): js 0xc(%rip)
4741(3): movzx %al,%eax
4744(3): test %rax,%rax
4747(2): jnz 0x4(%rip)
4749(2): jmp 0xffffffc7(%rip)
474b(4): sub $0x8,%rsp
474f(5): call 0x211(%rip)

"xrealloc" :
4770(3): test %rsi,%rsi
4773(1): push %rbx
4774(3): mov %rsi,%rbx
4777(2): jnz 0x7(%rip)
4779(3): test %rdi,%rdi
477c(2): jnz 0x1c(%rip)
477e(3): mov %rbx,%rsi
4781(5): call 0xffffceff(%rip)
4786(3): test %rax,%rax
4789(2): jnz 0x7(%rip)
478b(3): test %rbx,%rbx
478e(2): jnz 0x13(%rip)
4790(1): pop %rbx
4791(1): ret near (%rsp)
4792(6): nop 0x0(%rax,%rax,1)
4798(5): call 0xffffccd8(%rip)
479d(2): xor %eax,%eax
479f(1): pop %rbx
47a0(1): ret near (%rsp)
47a1(5): call 0x1bf(%rip)

"xnrealloc" :
47b0(3): mov %rsi,%rax
47b3(3): mul %rax,%rdx,%rdx
47b6(3): mov %rax,%rsi
47b9(3): seto %al
47bc(3): test %rsi,%rsi
47bf(2): js 0xc(%rip)
47c1(3): movzx %al,%eax
47c4(3): test %rax,%rax
47c7(2): jnz 0x4(%rip)
47c9(2): jmp 0xffffffa7(%rip)
47cb(4): sub $0x8,%rsp
47cf(5): call 0x191(%rip)

"x2nrealloc" :
47e0(3): test %rdi,%rdi
47e3(3): mov %rdx,%r9
47e6(3): mov (%rsi),%rcx
47e9(2): jz 0x37(%rip)
47eb(2): xor %edx,%edx
47ed(a): mov $0x6148914691236517204,%rax
47f7(3): div %r9,%rax
47fa(3): cmp %rcx,%rax
47fd(2): jbe 0x3e(%rip)
47ff(3): mov %rcx,%rax
4802(3): shr $0x1,%rax
4805(5): lea 0x1(%rax,%rcx,1),%rcx
480a(3): mov %rcx,(%rsi)
480d(4): imul %r9,%rcx
4811(3): mov %rcx,%rsi
4814(5): jmp 0xffffff5c(%rip)
4819(7): nop 0x0(%rax)
4820(3): test %rcx,%rcx
4823(2): jz 0x25(%rip)
4825(3): mov %rcx,%rax
4828(3): mul %rax,%r9,%rdx
482b(3): seto %dl
482e(3): test %rax,%rax
4831(3): movzx %dl,%edx
4834(2): js 0x7(%rip)
4836(3): test %rdx,%rdx
4839(2): jz 0xffffffd1(%rip)
483b(4): sub $0x8,%rsp
483f(5): call 0x121(%rip)
4844(4): nop 0x0(%rax)
4848(2): xor %edx,%edx
484a(5): mov $0x80,%eax
484f(3): xor %r8d,%r8d
4852(3): div %r9,%rax
4855(3): test %rax,%rax
4858(4): setz %r8b
485c(4): lea 0x0(%r8,%rax,1),%rcx
4860(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4870(3): test %rdi,%rdi
4873(3): mov (%rsi),%rax
4876(2): jz 0x2a(%rip)
4878(a): mov $0x6148914691236517203,%rdx
4882(3): cmp %rdx,%rax
4885(2): jnbe 0x2c(%rip)
4887(3): mov %rax,%rdx
488a(3): shr $0x1,%rdx
488d(5): lea 0x1(%rdx,%rax,1),%rax
4892(3): mov %rax,(%rsi)
4895(3): mov %rax,%rsi
4898(5): jmp 0xfffffed8(%rip)
489d(3): nop (%rax)
48a0(3): test %rax,%rax
48a3(5): mov $0x80,%edx
48a8(4): cmove %rdx,%rax
48ac(3): test %rax,%rax
48af(2): jns 0xffffffe3(%rip)
48b1(4): sub $0x8,%rsp
48b5(5): call 0xab(%rip)

"xzalloc" :
48c0(1): push %rbx
48c1(3): mov %rdi,%rbx
48c4(5): call 0xfffffe4c(%rip)
48c9(3): mov %rbx,%rdx
48cc(2): xor %esi,%esi
48ce(3): mov %rax,%rdi
48d1(1): pop %rbx
48d2(5): jmp 0xffffccee(%rip)

"xcalloc" :
48e0(3): mov %rdi,%rax
48e3(4): sub $0x8,%rsp
48e7(3): mul %rax,%rsi,%rdx
48ea(3): seto %dl
48ed(3): test %rax,%rax
48f0(2): js 0x19(%rip)
48f2(3): movzx %dl,%edx
48f5(3): test %rdx,%rdx
48f8(2): jnz 0x11(%rip)
48fa(5): call 0xffffcd06(%rip)
48ff(3): test %rax,%rax
4902(2): jz 0x7(%rip)
4904(4): add $0x8,%rsp
4908(1): ret near (%rsp)
4909(5): call 0x57(%rip)

"xmemdup" :
4910(1): push %rbp
4911(1): push %rbx
4912(3): mov %rdi,%rbp
4915(3): mov %rsi,%rdi
4918(3): mov %rsi,%rbx
491b(4): sub $0x8,%rsp
491f(5): call 0xfffffdf1(%rip)
4924(4): add $0x8,%rsp
4928(3): mov %rbx,%rdx
492b(3): mov %rbp,%rsi
492e(1): pop %rbx
492f(1): pop %rbp
4930(3): mov %rax,%rdi
4933(5): jmp 0xffffccdd(%rip)

"xstrdup" :
4940(1): push %rbx
4941(3): mov %rdi,%rbx
4944(5): call 0xffffcbdc(%rip)
4949(3): mov %rbx,%rdi
494c(4): lea 0x1(%rax),%rsi
4950(1): pop %rbx
4951(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4960(7): lea 0x15a8(%rip),%rsi
4967(4): sub $0x8,%rsp
496b(5): mov $0x5,%edx
4970(2): xor %edi,%edi
4972(5): call 0xffffcb8e(%rip)
4977(6): mov 0x20369b(%rip),%edi
497d(7): lea 0xcf4(%rip),%rdx
4984(3): mov %rax,%rcx
4987(2): xor %esi,%esi
4989(2): xor %eax,%eax
498b(5): call 0xffffcd35(%rip)
4990(5): call 0xffffcaf0(%rip)

"xnumtoumax" :
49a0(2): push %r15
49a2(2): push %r14
49a4(3): mov %rcx,%r15
49a7(2): push %r13
49a9(2): push %r12
49ab(3): mov %rdx,%r14
49ae(1): push %rbp
49af(1): push %rbx
49b0(2): mov %esi,%edx
49b2(2): xor %esi,%esi
49b4(3): mov %rdi,%r12
49b7(3): mov %r9,%r13
49ba(4): sub $0x18,%rsp
49be(3): mov %rsp,%rcx
49c1(4): mov 0x50(%rsp),%ebx
49c5(9): mov $0x28,%rax
49ce(5): mov %rax,0x8(%rsp)
49d3(2): xor %eax,%eax
49d5(5): call 0xfb(%rip)
49da(2): test %eax,%eax
49dc(6): jnz 0x94(%rip)
49e2(4): mov (%rsp),%rbp
49e6(3): cmp %r14,%rbp
49e9(2): jb 0x7(%rip)
49eb(3): cmp %r15,%rbp
49ee(2): jbe 0x56(%rip)
49f0(5): call 0xffffcaa0(%rip)
49f5(7): cmp $0x40000000,%rbp
49fc(3): mov %rax,%r14
49ff(2): sbb %eax,%eax
4a01(3): and $0xd7,%eax
4a04(3): add $0x4b,%eax
4a07(3): mov %eax,(%r14)
4a0a(3): mov %r12,%rdi
4a0d(5): call 0xfffff6c3(%rip)
4a12(3): mov (%r14),%esi
4a15(3): mov %rax,%r8
4a18(5): mov $0x0,%eax
4a1d(7): lea 0xc50(%rip),%rdx
4a24(3): mov %r13,%rcx
4a27(3): cmp $0x16,%esi
4a2a(3): cmove %eax,%esi
4a2d(2): test %ebx,%ebx
4a2f(5): mov $0x1,%eax
4a34(3): cmove %eax,%ebx
4a37(2): xor %eax,%eax
4a39(2): mov %ebx,%edi
4a3b(5): call 0xffffcc85(%rip)
4a40(4): mov (%rsp),%rbp
4a44(5): mov 0x8(%rsp),%rdx
4a49(9): xor $0x28,%rdx
4a52(3): mov %rbp,%rax
4a55(2): jnz 0x46(%rip)
4a57(4): add $0x18,%rsp
4a5b(1): pop %rbx
4a5c(1): pop %rbp
4a5d(2): pop %r12
4a5f(2): pop %r13
4a61(2): pop %r14
4a63(2): pop %r15
4a65(1): ret near (%rsp)
4a66(a): nop 0x0(%rax,%rax,1)
4a70(2): mov %eax,%ebp
4a72(5): call 0xffffca1e(%rip)
4a77(3): cmp $0x1,%ebp
4a7a(3): mov %rax,%r14
4a7d(2): jz 0x13(%rip)
4a7f(3): cmp $0x3,%ebp
4a82(2): jnz 0xffffff88(%rip)
4a84(6): mov $0x0,(%rax)
4a8a(5): jmp 0xffffff80(%rip)
4a8f(1): nop 
4a90(6): mov $0x4b,(%rax)
4a96(5): jmp 0xffffff74(%rip)
4a9b(5): call 0xffffca95(%rip)

"xdectoumax" :
4aa0(4): sub $0x10,%rsp
4aa4(2): push %r9
4aa6(3): mov %r8,%r9
4aa9(3): mov %rcx,%r8
4aac(3): mov %rdx,%rcx
4aaf(3): mov %rsi,%rdx
4ab2(5): mov $0xa,%esi
4ab7(5): call 0xfffffee9(%rip)
4abc(4): add $0x18,%rsp
4ac0(1): ret near (%rsp)

"xstrtoumax" :
4ad0(2): push %r15
4ad2(2): push %r14
4ad4(2): push %r13
4ad6(2): push %r12
4ad8(1): push %rbp
4ad9(1): push %rbx
4ada(4): sub $0x28,%rsp
4ade(9): mov $0x28,%rax
4ae7(5): mov %rax,0x18(%rsp)
4aec(2): xor %eax,%eax
4aee(3): cmp $0x24,%edx
4af1(6): jnbe 0x364(%rip)
4af7(5): lea 0x10(%rsp),%rax
4afc(3): mov %rsi,%r15
4aff(3): test %rsi,%rsi
4b02(3): mov %rdi,%rbp
4b05(4): mov %edx,0x8(%rsp)
4b09(3): mov %rcx,%r14
4b0c(3): mov %r8,%r13
4b0f(4): cmove %rax,%r15
4b13(5): call 0xffffc97d(%rip)
4b18(6): mov $0x0,(%rax)
4b1e(3): mov %rax,%r12
4b21(4): movzx 0x0(%rbp),%ebx
4b25(5): call 0xffffcc2b(%rip)
4b2a(4): mov 0x8(%rsp),%edx
4b2e(3): mov (%rax),%rsi
4b31(3): mov %rbp,%rax
4b34(2): jmp 0x13(%rip)
4b36(a): nop 0x0(%rax,%rax,1)
4b40(4): add $0x1,%rax
4b44(3): movzx (%rax),%ebx
4b47(3): movzx %bl,%ecx
4b4a(5): test $0x20,0x1(%rsi,%rcx,2)
4b4f(2): jnz 0xfffffff1(%rip)
4b51(3): cmp $0x2d,%bl
4b54(2): jz 0x54(%rip)
4b56(2): xor %ecx,%ecx
4b58(3): mov %r15,%rsi
4b5b(3): mov %rbp,%rdi
4b5e(5): call 0xffffca52(%rip)
4b63(3): mov (%r15),%rcx
4b66(3): mov %rax,%rbx
4b69(3): cmp %rbp,%rcx
4b6c(2): jz 0x2c(%rip)
4b6e(4): mov (%r12),%eax
4b72(2): test %eax,%eax
4b74(2): jz 0x64(%rip)
4b76(3): cmp $0x22,%eax
4b79(5): mov $0x1,%ebp
4b7e(2): jnz 0x2a(%rip)
4b80(3): test %r13,%r13
4b83(2): jz 0xb(%rip)
4b85(4): movzx (%rcx),%r12d
4b89(3): test %r12b,%r12b
4b8c(2): jnz 0x7b(%rip)
4b8e(3): mov %rbx,(%r14)
4b91(2): jmp 0x1c(%rip)
4b93(5): nop 0x0(%rax,%rax,1)
4b98(3): test %r13,%r13
4b9b(5): mov %rcx,0x8(%rsp)
4ba0(2): jnz 0x40(%rip)
4ba2(6): nop 0x0(%rax,%rax,1)
4ba8(5): mov $0x4,%ebp
4bad(5): mov 0x18(%rsp),%rdi
4bb2(9): xor $0x28,%rdi
4bbb(2): mov %ebp,%eax
4bbd(6): jnz 0x293(%rip)
4bc3(4): add $0x28,%rsp
4bc7(1): pop %rbx
4bc8(1): pop %rbp
4bc9(2): pop %r12
4bcb(2): pop %r13
4bcd(2): pop %r14
4bcf(2): pop %r15
4bd1(1): ret near (%rsp)
4bd2(6): nop 0x0(%rax,%rax,1)
4bd8(2): xor %ebp,%ebp
4bda(2): jmp 0xffffffa6(%rip)
4bdc(4): nop 0x0(%rax)
4be0(5): movzx 0x0(%rbp),%r12d
4be5(3): test %r12b,%r12b
4be8(2): jz 0xffffffc0(%rip)
4bea(4): movsx %r12b,%esi
4bee(3): mov %r13,%rdi
4bf1(2): xor %ebp,%ebp
4bf3(5): call 0xffffc96d(%rip)
4bf8(3): test %rax,%rax
4bfb(5): mov $0x1,%ebx
4c00(5): mov 0x8(%rsp),%rcx
4c05(2): jz 0xffffffa3(%rip)
4c07(4): movsx %r12b,%esi
4c0b(3): mov %r13,%rdi
4c0e(5): mov %rcx,0x8(%rsp)
4c13(5): call 0xffffc94d(%rip)
4c18(3): test %rax,%rax
4c1b(5): mov 0x8(%rsp),%rcx
4c20(6): jz 0xcc(%rip)
4c26(5): lea 0xffffffbb(%r12),%eax
4c2b(2): cmp $0x2f,%al
4c2d(2): jnbe 0x53(%rip)
4c2f(a): mov $0x142129060940101,%rdx
4c39(4): bt %rax,%rdx
4c3d(2): jnb 0x43(%rip)
4c3f(5): mov $0x30,%esi
4c44(3): mov %r13,%rdi
4c47(5): mov %rcx,0x8(%rsp)
4c4c(5): call 0xffffc914(%rip)
4c51(3): test %rax,%rax
4c54(5): mov 0x8(%rsp),%rcx
4c59(2): jz 0x27(%rip)
4c5b(4): movzx 0x1(%rcx),%eax
4c5f(2): cmp $0x44,%al
4c61(2): jz 0xe(%rip)
4c63(2): cmp $0x69,%al
4c65(6): jz 0x1d3(%rip)
4c6b(2): cmp $0x42,%al
4c6d(2): jnz 0x13(%rip)
4c6f(5): mov $0x2,%edi
4c74(5): mov $0x3e8,%esi
4c79(2): jmp 0x11(%rip)
4c7b(5): nop 0x0(%rax,%rax,1)
4c80(5): mov $0x1,%edi
4c85(5): mov $0x400,%esi
4c8a(4): sub $0x42,%r12d
4c8e(4): cmp $0x35,%r12b
4c92(2): jnbe 0x5a(%rip)
4c94(7): lea 0x12cd(%rip),%rdx
4c9b(4): movzx %r12b,%r12d
4c9f(4): movsxd 0x0(%rdx,%r12,4),%rax
4ca3(3): add %rdx,%rax
4ca6(2): jmp %rax
4ca8(3): mov %rbx,%rax
4cab(3): mul %rax,%rsi,%rdx
4cae(6): jo 0x1f3(%rip)
4cb4(3): xor %r8d,%r8d
4cb7(3): mul %rax,%rsi,%rdx
4cba(6): jo 0x1d8(%rip)
4cc0(3): mov %rax,%rbx
4cc3(3): or %r8d,%ebp
4cc6(a): nop 0x0(%rax,%rax,1)
4cd0(3): movsxd %edi,%rdi
4cd3(2): mov %ebp,%eax
4cd5(3): add %rdi,%rcx
4cd8(3): or $0x2,%eax
4cdb(3): mov %rcx,(%r15)
4cde(3): cmp $0x0,(%rcx)
4ce1(3): mov %rbx,(%r14)
4ce4(3): cmovne %eax,%ebp
4ce7(5): jmp 0xfffffec6(%rip)
4cec(3): mov %rbx,(%r14)
4cef(3): or $0x2,%ebp
4cf2(5): jmp 0xfffffebb(%rip)
4cf7(5): mov $0x2,%edx
4cfc(3): mov %rdx,%rax
4cff(3): mul %rax,%rbx,%rdx
4d02(6): jo 0x9c(%rip)
4d08(3): add %rbx,%rbx
4d0b(2): jmp 0xffffffc5(%rip)
4d0d(5): mov $0x200,%edx
4d12(3): mov %rdx,%rax
4d15(3): mul %rax,%rbx,%rdx
4d18(6): jo 0x86(%rip)
4d1e(4): shl/sal $0x9,%rbx
4d22(2): jmp 0xffffffae(%rip)
4d24(6): mov $0x7,%r8d
4d2a(3): xor %r9d,%r9d
4d2d(3): nop (%rax)
4d30(3): mov %rbx,%rax
4d33(3): mul %rax,%rsi,%rdx
4d36(3): mov %rax,%rbx
4d39(6): jo 0x195(%rip)
4d3f(4): sub $0x1,%r8d
4d43(2): jnz 0xffffffed(%rip)
4d45(3): or %r9d,%ebp
4d48(2): jmp 0xffffff88(%rip)
4d4a(6): mov $0x8,%r8d
4d50(3): xor %r9d,%r9d
4d53(5): nop 0x0(%rax,%rax,1)
4d58(3): mov %rbx,%rax
4d5b(3): mul %rax,%rsi,%rdx
4d5e(3): mov %rax,%rbx
4d61(6): jo 0x14f(%rip)
4d67(4): sub $0x1,%r8d
4d6b(2): jnz 0xffffffed(%rip)
4d6d(2): jmp 0xffffffd8(%rip)
4d6f(6): mov $0x4,%r8d
4d75(3): xor %r9d,%r9d
4d78(3): mov %rbx,%rax
4d7b(3): mul %rax,%rsi,%rdx
4d7e(3): mov %rax,%rbx
4d81(6): jo 0x102(%rip)
4d87(4): sub $0x1,%r8d
4d8b(2): jnz 0xffffffed(%rip)
4d8d(2): jmp 0xffffffb8(%rip)
4d8f(3): mov %rbx,%rax
4d92(3): mul %rax,%rsi,%rdx
4d95(3): mov %rax,%rbx
4d98(6): jno 0xffffff38(%rip)
4d9e(5): mov $0x1,%ebp
4da3(4): or $0xffffffff,%rbx
4da7(5): jmp 0xffffff29(%rip)
4dac(4): nop 0x0(%rax)
4db0(6): mov $0x5,%r8d
4db6(3): xor %r9d,%r9d
4db9(3): mov %rbx,%rax
4dbc(3): mul %rax,%rsi,%rdx
4dbf(3): mov %rax,%rbx
4dc2(6): jo 0xfd(%rip)
4dc8(4): sub $0x1,%r8d
4dcc(2): jnz 0xffffffed(%rip)
4dce(5): jmp 0xffffff77(%rip)
4dd3(6): mov $0x6,%r8d
4dd9(3): xor %r9d,%r9d
4ddc(3): mov %rbx,%rax
4ddf(3): mul %rax,%rsi,%rdx
4de2(3): mov %rax,%rbx
4de5(6): jo 0x8f(%rip)
4deb(4): sub $0x1,%r8d
4def(2): jnz 0xffffffed(%rip)
4df1(5): jmp 0xffffff54(%rip)
4df6(5): mov $0x400,%edx
4dfb(3): mov %rdx,%rax
4dfe(3): mul %rax,%rbx,%rdx
4e01(2): jo 0xffffff9d(%rip)
4e03(4): shl/sal $0xa,%rbx
4e07(5): jmp 0xfffffec9(%rip)
4e0c(3): mov %rbx,%rax
4e0f(3): mul %rax,%rsi,%rdx
4e12(6): jo 0xcb(%rip)
4e18(3): xor %r8d,%r8d
4e1b(3): mul %rax,%rsi,%rdx
4e1e(6): jno 0xfffffe99(%rip)
4e24(6): mov $0x1,%r8d
4e2a(4): or $0xffffffff,%rax
4e2e(5): jmp 0xfffffe89(%rip)
4e33(5): nop 0x0(%rax,%rax,1)
4e38(2): xor %edi,%edi
4e3a(4): cmp $0x42,0x2(%rcx)
4e3e(5): mov $0x400,%esi
4e43(4): setz %dil
4e47(4): lea 0x1(%rdi,%rdi,1),%edi
4e4b(5): jmp 0xfffffe3f(%rip)
4e50(5): call 0xffffc6e0(%rip)
4e55(7): lea 0x11e4(%rip),%rcx
4e5c(7): lea 0x10bd(%rip),%rsi
4e63(7): lea 0x10d6(%rip),%rdi
4e6a(5): mov $0x54,%edx
4e6f(5): call 0xffffc731(%rip)
4e74(6): mov $0x1,%r9d
4e7a(4): or $0xffffffff,%rbx
4e7e(5): jmp 0xffffff6d(%rip)
4e83(6): mov $0x1,%r9d
4e89(4): or $0xffffffff,%rbx
4e8d(5): jmp 0xfffffefa(%rip)
4e92(6): mov $0x1,%r8d
4e98(4): or $0xffffffff,%rbx
4e9c(5): jmp 0xfffffe27(%rip)
4ea1(4): or $0xffffffff,%rax
4ea5(6): mov $0x1,%r8d
4eab(5): jmp 0xfffffe0c(%rip)
4eb0(6): mov $0x1,%r9d
4eb6(4): or $0xffffffff,%rbx
4eba(5): jmp 0xfffffead(%rip)
4ebf(6): mov $0x1,%r9d
4ec5(4): or $0xffffffff,%rbx
4ec9(5): jmp 0xfffffeff(%rip)
4ece(6): mov $0x1,%r9d
4ed4(4): or $0xffffffff,%rbx
4ed8(5): jmp 0xfffffe67(%rip)
4edd(6): mov $0x1,%r8d
4ee3(4): or $0xffffffff,%rax
4ee7(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
4ef0(2): push %r12
4ef2(1): push %rbp
4ef3(1): push %rbx
4ef4(3): mov %rdi,%rbx
4ef7(5): call 0xffffc729(%rip)
4efc(2): test %eax,%eax
4efe(3): mov %rbx,%rdi
4f01(2): js 0x56(%rip)
4f03(5): call 0xffffc75d(%rip)
4f08(2): test %eax,%eax
4f0a(2): jnz 0x2e(%rip)
4f0c(3): mov %rbx,%rdi
4f0f(5): call 0x61(%rip)
4f14(2): test %eax,%eax
4f16(2): jz 0x3e(%rip)
4f18(5): call 0xffffc578(%rip)
4f1d(3): mov (%rax),%r12d
4f20(3): mov %rbx,%rdi
4f23(3): mov %rax,%rbp
4f26(5): call 0xffffc5ba(%rip)
4f2b(3): test %r12d,%r12d
4f2e(2): jnz 0x32(%rip)
4f30(1): pop %rbx
4f31(1): pop %rbp
4f32(2): pop %r12
4f34(1): ret near (%rsp)
4f35(3): nop (%rax)
4f38(3): mov %rbx,%rdi
4f3b(5): call 0xffffc6e5(%rip)
4f40(2): xor %esi,%esi
4f42(5): mov $0x1,%edx
4f47(2): mov %eax,%edi
4f49(5): call 0xffffc647(%rip)
4f4e(4): cmp $0xffffffff,%rax
4f52(2): jnz 0xffffffba(%rip)
4f54(3): mov %rbx,%rdi
4f57(1): pop %rbx
4f58(1): pop %rbp
4f59(2): pop %r12
4f5b(5): jmp 0xffffc585(%rip)
4f60(4): mov %r12d,0x0(%rbp)
4f64(5): mov $0xffffffff,%eax
4f69(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4f70(3): test %rdi,%rdi
4f73(1): push %rbx
4f74(3): mov %rdi,%rbx
4f77(2): jz 0x13(%rip)
4f79(5): call 0xffffc6e7(%rip)
4f7e(2): test %eax,%eax
4f80(2): jz 0xa(%rip)
4f82(6): test $0x100,(%rbx)
4f88(2): jnz 0x10(%rip)
4f8a(3): mov %rbx,%rdi
4f8d(1): pop %rbx
4f8e(5): jmp 0xffffc6b2(%rip)
4f93(5): nop 0x0(%rax,%rax,1)
4f98(3): mov %rbx,%rdi
4f9b(5): mov $0x1,%edx
4fa0(2): xor %esi,%esi
4fa2(5): call 0xe(%rip)
4fa7(3): mov %rbx,%rdi
4faa(1): pop %rbx
4fab(5): jmp 0xffffc695(%rip)

"rpl_fseeko" :
4fb0(4): mov 0x8(%rdi),%rax
4fb4(4): cmp %rax,0x10(%rdi)
4fb8(2): jz 0x8(%rip)
4fba(5): jmp 0xffffc716(%rip)
4fbf(1): nop 
4fc0(4): mov 0x20(%rdi),%rax
4fc4(4): cmp %rax,0x28(%rdi)
4fc8(2): jnz 0xfffffff2(%rip)
4fca(5): cmp $0x0,0x48(%rdi)
4fcf(2): jnz 0xffffffeb(%rip)
4fd1(2): push %r12
4fd3(1): push %rbp
4fd4(3): mov %edx,%r12d
4fd7(1): push %rbx
4fd8(3): mov %rsi,%rbp
4fdb(3): mov %rdi,%rbx
4fde(5): call 0xffffc642(%rip)
4fe3(3): mov %r12d,%edx
4fe6(3): mov %rbp,%rsi
4fe9(2): mov %eax,%edi
4feb(5): call 0xffffc5a5(%rip)
4ff0(4): cmp $0xffffffff,%rax
4ff4(2): jz 0xe(%rip)
4ff6(3): and $0xef,(%rbx)
4ff9(7): mov %rax,0x90(%rbx)
5000(2): xor %eax,%eax
5002(1): pop %rbx
5003(1): pop %rbp
5004(2): pop %r12
5006(1): ret near (%rsp)

"rpl_mbrtowc" :
5010(2): push %r13
5012(2): push %r12
5014(3): mov %rsi,%r13
5017(1): push %rbp
5018(1): push %rbx
5019(3): mov %rdi,%rbx
501c(3): mov %rdx,%r12
501f(4): sub $0x18,%rsp
5023(9): mov $0x28,%rax
502c(5): mov %rax,0x8(%rsp)
5031(2): xor %eax,%eax
5033(5): lea 0x4(%rsp),%rax
5038(3): test %rdi,%rdi
503b(4): cmove %rax,%rbx
503f(3): mov %rbx,%rdi
5042(5): call 0xffffc50e(%rip)
5047(4): cmp $0xfffffffd,%rax
504b(3): mov %rax,%rbp
504e(2): jbe 0x22(%rip)
5050(3): test %r12,%r12
5053(2): jz 0x1d(%rip)
5055(2): xor %edi,%edi
5057(5): call 0xc9(%rip)
505c(2): test %al,%al
505e(2): jnz 0x12(%rip)
5060(5): movzx 0x0(%r13),%eax
5065(5): mov $0x1,%ebp
506a(2): mov %eax,(%rbx)
506c(4): nop 0x0(%rax)
5070(5): mov 0x8(%rsp),%rdx
5075(9): xor $0x28,%rdx
507e(3): mov %rbp,%rax
5081(2): jnz 0xd(%rip)
5083(4): add $0x18,%rsp
5087(1): pop %rbx
5088(1): pop %rbp
5089(2): pop %r12
508b(2): pop %r13
508d(1): ret near (%rsp)
508e(5): call 0xffffc4a2(%rip)

"close_stream" :
50a0(2): push %r12
50a2(1): push %rbp
50a3(3): mov %rdi,%rbp
50a6(1): push %rbx
50a7(5): call 0xffffc419(%rip)
50ac(3): mov 0x0(%rbp),%ebx
50af(3): mov %rbp,%rdi
50b2(3): mov %rax,%r12
50b5(5): call 0xfffffe3b(%rip)
50ba(3): and $0x20,%ebx
50bd(2): test %ebx,%ebx
50bf(2): jnz 0x19(%rip)
50c1(2): test %eax,%eax
50c3(2): jz 0xc(%rip)
50c5(3): test %r12,%r12
50c8(5): mov $0xffffffff,%eax
50cd(2): jz 0x3b(%rip)
50cf(1): pop %rbx
50d0(1): pop %rbp
50d1(2): pop %r12
50d3(1): ret near (%rsp)
50d4(4): nop 0x0(%rax)
50d8(2): test %eax,%eax
50da(2): jnz 0x1e(%rip)
50dc(5): call 0xffffc3b4(%rip)
50e1(6): mov $0x0,(%rax)
50e7(5): mov $0xffffffff,%eax
50ec(1): pop %rbx
50ed(1): pop %rbp
50ee(2): pop %r12
50f0(1): ret near (%rsp)
50f1(7): nop 0x0(%rax)
50f8(1): pop %rbx
50f9(5): mov $0xffffffff,%eax
50fe(1): pop %rbp
50ff(2): pop %r12
5101(1): ret near (%rsp)
5102(6): nop 0x0(%rax,%rax,1)
5108(5): call 0xffffc388(%rip)
510d(3): cmp $0x9,(%rax)
5110(1): pop %rbx
5111(1): pop %rbp
5112(2): pop %r12
5114(3): setnz %al
5117(3): movzx %al,%eax
511a(2): neg %eax
511c(1): ret near (%rsp)

"hard_locale" :
5120(4): sub $0x8,%rsp
5124(2): xor %esi,%esi
5126(5): call 0xffffc56a(%rip)
512b(3): mov %rax,%rdx
512e(5): mov $0x1,%eax
5133(3): test %rdx,%rdx
5136(2): jz 0x1f(%rip)
5138(7): lea 0xf0c(%rip),%rdi
513f(5): mov $0x2,%ecx
5144(3): mov %rdx,%rsi
5147(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5149(3): setnbe %cl
514c(3): sbb $0x0,%cl
514f(2): xor %eax,%eax
5151(2): test %cl,%cl
5153(2): jnz 0xd(%rip)
5155(4): add $0x8,%rsp
5159(1): ret near (%rsp)
515a(6): nop 0x0(%rax,%rax,1)
5160(7): lea 0xee6(%rip),%rdi
5167(5): mov $0x6,%ecx
516c(3): mov %rdx,%rsi
516f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5171(3): setnbe %al
5174(2): sbb $0x0,%al
5176(2): test %al,%al
5178(3): setnz %al
517b(4): add $0x8,%rsp
517f(1): ret near (%rsp)

"locale_charset" :
5180(4): sub $0x8,%rsp
5184(5): mov $0xe,%edi
5189(5): call 0xffffc4c7(%rip)
518e(3): test %rax,%rax
5191(2): jz 0x1f(%rip)
5193(3): cmp $0x0,(%rax)
5196(7): lea 0xeb6(%rip),%rdx
519d(4): cmove %rdx,%rax
51a1(4): add $0x8,%rsp
51a5(1): ret near (%rsp)
51a6(a): nop 0x0(%rax,%rax,1)
51b0(7): lea 0xe9c(%rip),%rax
51b7(4): add $0x8,%rsp
51bb(1): ret near (%rsp)

"__libc_csu_init" :
51c0(2): push %r15
51c2(2): push %r14
51c4(3): mov %rdx,%r15
51c7(2): push %r13
51c9(2): push %r12
51cb(7): lea 0x20293e(%rip),%r12
51d2(1): push %rbp
51d3(7): lea 0x20293e(%rip),%rbp
51da(1): push %rbx
51db(3): mov %edi,%r13d
51de(3): mov %rsi,%r14
51e1(3): sub %r12,%rbp
51e4(4): sub $0x8,%rsp
51e8(4): sar $0x3,%rbp
51ec(5): call 0xffffc244(%rip)
51f1(3): test %rbp,%rbp
51f4(2): jz 0x22(%rip)
51f6(2): xor %ebx,%ebx
51f8(8): nop 0x0(%rax,%rax,1)
5200(3): mov %r15,%rdx
5203(3): mov %r14,%rsi
5206(3): mov %r13d,%edi
5209(4): call 0x0(%r12,%rbx,8)
520d(4): add $0x1,%rbx
5211(3): cmp %rbx,%rbp
5214(2): jnz 0xffffffec(%rip)
5216(4): add $0x8,%rsp
521a(1): pop %rbx
521b(1): pop %rbp
521c(2): pop %r12
521e(2): pop %r13
5220(2): pop %r14
5222(2): pop %r15
5224(1): ret near (%rsp)

"atexit" :
5240(7): mov 0x202dc1(%rip),%rdx
5247(2): xor %esi,%esi
5249(5): jmp 0xffffc4a7(%rip)

"_fini" :
5250(4): sub $0x8,%rsp
5254(4): add $0x8,%rsp
5258(1): ret near (%rsp)

