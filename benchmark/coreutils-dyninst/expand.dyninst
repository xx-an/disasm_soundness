
"__uflow@plt" :
1410(6): jmp 0x206a4a(%rip)
1416(5): push $0x0

"free@plt" :
1420(6): jmp 0x206a42(%rip)
1426(5): push $0x1

"abort@plt" :
1430(6): jmp 0x206a3a(%rip)
1436(5): push $0x2

"__errno_location@plt" :
1440(6): jmp 0x206a32(%rip)
1446(5): push $0x3

"strncmp@plt" :
1450(6): jmp 0x206a2a(%rip)
1456(5): push $0x4

"_exit@plt" :
1460(6): jmp 0x206a22(%rip)
1466(5): push $0x5

"__fpending@plt" :
1470(6): jmp 0x206a1a(%rip)
1476(5): push $0x6

"clearerr_unlocked@plt" :
1480(6): jmp 0x206a12(%rip)
1486(5): push $0x7

"textdomain@plt" :
1490(6): jmp 0x206a0a(%rip)
1496(5): push $0x8

"fclose@plt" :
14a0(6): jmp 0x206a02(%rip)
14a6(5): push $0x9

"bindtextdomain@plt" :
14b0(6): jmp 0x2069fa(%rip)
14b6(5): push $0xa

"dcgettext@plt" :
14c0(6): jmp 0x2069f2(%rip)
14c6(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
14d0(6): jmp 0x2069ea(%rip)
14d6(5): push $0xc

"strlen@plt" :
14e0(6): jmp 0x2069e2(%rip)
14e6(5): push $0xd

"__stack_chk_fail@plt" :
14f0(6): jmp 0x2069da(%rip)
14f6(5): push $0xe

"getopt_long@plt" :
1500(6): jmp 0x2069d2(%rip)
1506(5): push $0xf

"mbrtowc@plt" :
1510(6): jmp 0x2069ca(%rip)
1516(5): push $0x10

"__overflow@plt" :
1520(6): jmp 0x2069c2(%rip)
1526(5): push $0x11

"strrchr@plt" :
1530(6): jmp 0x2069ba(%rip)
1536(5): push $0x12

"lseek@plt" :
1540(6): jmp 0x2069b2(%rip)
1546(5): push $0x13

"__assert_fail@plt" :
1550(6): jmp 0x2069aa(%rip)
1556(5): push $0x14

"memset@plt" :
1560(6): jmp 0x2069a2(%rip)
1566(5): push $0x15

"strspn@plt" :
1570(6): jmp 0x20699a(%rip)
1576(5): push $0x16

"posix_fadvise@plt" :
1580(6): jmp 0x206992(%rip)
1586(5): push $0x17

"strndup@plt" :
1590(6): jmp 0x20698a(%rip)
1596(5): push $0x18

"memcmp@plt" :
15a0(6): jmp 0x206982(%rip)
15a6(5): push $0x19

"fputs_unlocked@plt" :
15b0(6): jmp 0x20697a(%rip)
15b6(5): push $0x1a

"calloc@plt" :
15c0(6): jmp 0x206972(%rip)
15c6(5): push $0x1b

"memcpy@plt" :
15d0(6): jmp 0x20696a(%rip)
15d6(5): push $0x1c

"fileno@plt" :
15e0(6): jmp 0x206962(%rip)
15e6(5): push $0x1d

"malloc@plt" :
15f0(6): jmp 0x20695a(%rip)
15f6(5): push $0x1e

"fflush@plt" :
1600(6): jmp 0x206952(%rip)
1606(5): push $0x1f

"nl_langinfo@plt" :
1610(6): jmp 0x20694a(%rip)
1616(5): push $0x20

"__freading@plt" :
1620(6): jmp 0x206942(%rip)
1626(5): push $0x21

"realloc@plt" :
1630(6): jmp 0x20693a(%rip)
1636(5): push $0x22

"setlocale@plt" :
1640(6): jmp 0x206932(%rip)
1646(5): push $0x23

"__printf_chk@plt" :
1650(6): jmp 0x20692a(%rip)
1656(5): push $0x24

"error@plt" :
1660(6): jmp 0x206922(%rip)
1666(5): push $0x25

"fseeko@plt" :
1670(6): jmp 0x20691a(%rip)
1676(5): push $0x26

"fopen@plt" :
1680(6): jmp 0x206912(%rip)
1686(5): push $0x27

"__cxa_atexit@plt" :
1690(6): jmp 0x20690a(%rip)
1696(5): push $0x28

"exit@plt" :
16a0(6): jmp 0x206902(%rip)
16a6(5): push $0x29

"fwrite@plt" :
16b0(6): jmp 0x2068fa(%rip)
16b6(5): push $0x2a

"__fprintf_chk@plt" :
16c0(6): jmp 0x2068f2(%rip)
16c6(5): push $0x2b

"mbsinit@plt" :
16d0(6): jmp 0x2068ea(%rip)
16d6(5): push $0x2c

"iswprint@plt" :
16e0(6): jmp 0x2068e2(%rip)
16e6(5): push $0x2d

"__ctype_b_loc@plt" :
16f0(6): jmp 0x2068da(%rip)
16f6(5): push $0x2e

".plt.got" :
1700(6): jmp 0x2068f2(%rip)
1706(2): nop 

"_init" :
13e8(4): sub $0x8,%rsp
13ec(7): mov 0x206bf5(%rip),%rax
13f3(3): test %rax,%rax
13f6(2): jz 0x4(%rip)
13f8(2): call %rax
13fa(4): add $0x8,%rsp
13fe(1): ret near (%rsp)

"main" :
1710(2): push %r15
1712(2): push %r14
1714(2): push %r13
1716(2): push %r12
1718(1): push %rbp
1719(1): push %rbx
171a(2): mov %edi,%ebp
171c(3): mov %rsi,%rbx
171f(4): sub $0x28,%rsp
1723(3): mov (%rsi),%rdi
1726(9): mov $0x28,%rax
172f(5): mov %rax,0x18(%rsp)
1734(2): xor %eax,%eax
1736(5): lea 0x16(%rsp),%r12
173b(5): call 0x1355(%rip)
1740(7): lea 0x497a(%rip),%rsi
1747(5): mov $0x6,%edi
174c(5): call 0xfffffef4(%rip)
1751(7): lea 0x3d56(%rip),%rsi
1758(7): lea 0x3d26(%rip),%rdi
175f(5): call 0xfffffd51(%rip)
1764(7): lea 0x3d1a(%rip),%rdi
176b(5): call 0xfffffd25(%rip)
1770(7): lea 0x1229(%rip),%rdi
1777(5): call 0x3c69(%rip)
177c(7): mov $0x1,0x206971(%rip)
1783(7): lea 0x2063d6(%rip),%rcx
178a(7): lea 0x402f(%rip),%rdx
1791(3): xor %r8d,%r8d
1794(3): mov %rbx,%rsi
1797(2): mov %ebp,%edi
1799(5): call 0xfffffd67(%rip)
179e(3): cmp $0xff,%eax
17a1(6): jz 0xb1(%rip)
17a7(3): cmp $0x39,%eax
17aa(2): jnle 0x46(%rip)
17ac(3): cmp $0x30,%eax
17af(2): jnl 0x61(%rip)
17b1(5): cmp $0xffffff7d,%eax
17b6(6): jnz 0x2c9(%rip)
17bc(7): mov 0x2068e5(%rip),%rdi
17c3(7): mov 0x206856(%rip),%rcx
17ca(7): lea 0x3cf5(%rip),%r8
17d1(7): lea 0x3ca9(%rip),%rdx
17d8(7): lea 0x3c25(%rip),%rsi
17df(3): xor %r9d,%r9d
17e2(2): xor %eax,%eax
17e4(5): call 0x349c(%rip)
17e9(2): xor %edi,%edi
17eb(5): call 0xfffffeb5(%rip)
17f0(3): cmp $0x69,%eax
17f3(2): jz 0x3d(%rip)
17f5(3): cmp $0x74,%eax
17f8(6): jnz 0x295(%rip)
17fe(7): mov 0x2068bb(%rip),%rdi
1805(5): call 0x95b(%rip)
180a(5): jmp 0xffffff79(%rip)
180f(1): nop 
1810(7): mov 0x2068a9(%rip),%rdi
1817(3): test %rdi,%rdi
181a(2): jz 0x22(%rip)
181c(4): sub $0x1,%rdi
1820(5): call 0x940(%rip)
1825(5): jmp 0xffffff5e(%rip)
182a(6): nop 0x0(%rax,%rax,1)
1830(7): mov $0x0,0x2068bd(%rip)
1837(5): jmp 0xffffff4c(%rip)
183c(3): mov %r12,%rdi
183f(4): mov %al,0x16(%rsp)
1843(5): mov $0x0,0x17(%rsp)
1848(5): call 0x918(%rip)
184d(5): jmp 0xffffff36(%rip)
1852(5): call 0xc6e(%rip)
1857(7): movsxd 0x20685a(%rip),%rax
185e(2): xor %edi,%edi
1860(2): cmp %ebp,%eax
1862(2): jnl 0x6(%rip)
1864(4): lea 0x0(%rbx,%rax,8),%rdi
1868(5): call 0xe48(%rip)
186d(2): xor %edi,%edi
186f(5): call 0xe61(%rip)
1874(3): test %rax,%rax
1877(3): mov %rax,%rbp
187a(6): jz 0xfa(%rip)
1880(5): lea 0x7(%rsp),%r13
1885(5): lea 0x8(%rsp),%r12
188a(9): mov $0x0,0x8(%rsp)
1893(3): xor %r14d,%r14d
1896(6): mov $0x1,%r15d
189c(2): jmp 0x5b(%rip)
189e(2): nop 
18a0(4): add $0x1,%r14
18a4(6): jz 0x1f8(%rip)
18aa(8): movzx 0x206842(%rip),%r15d
18b2(3): test %r15b,%r15b
18b5(2): jnz 0x16(%rip)
18b7(5): call 0xfffffe39(%rip)
18bc(3): mov (%rax),%rcx
18bf(3): movsxd %ebx,%rdx
18c2(5): movzx 0x0(%rcx,%rdx,2),%r15d
18c7(4): and $0x1,%r15d
18cb(2): test %ebx,%ebx
18cd(6): js 0xa7(%rip)
18d3(7): mov 0x2067ce(%rip),%rdi
18da(4): mov 0x28(%rdi),%rax
18de(4): cmp 0x30(%rdi),%rax
18e2(6): jnb 0xc0(%rip)
18e8(4): lea 0x1(%rax),%rdx
18ec(4): mov %rdx,0x28(%rdi)
18f0(2): mov %bl,(%rax)
18f2(3): cmp $0xa,%ebx
18f5(2): jz 0xffffff95(%rip)
18f7(4): mov 0x8(%rbp),%rax
18fb(4): cmp 0x10(%rbp),%rax
18ff(2): jnb 0x52(%rip)
1901(4): lea 0x1(%rax),%rdx
1905(4): mov %rdx,0x8(%rbp)
1909(3): movzx (%rax),%ebx
190c(3): test %r15b,%r15b
190f(2): jz 0xffffffc4(%rip)
1911(3): cmp $0x9,%ebx
1914(6): jz 0xca(%rip)
191a(3): cmp $0x8,%ebx
191d(2): jnz 0xffffff83(%rip)
191f(2): xor %eax,%eax
1921(3): test %r14,%r14
1924(3): setnz %al
1927(2): xor %edx,%edx
1929(3): sub %rax,%r14
192c(5): mov 0x8(%rsp),%rax
1931(3): test %rax,%rax
1934(3): setnz %dl
1937(3): sub %rdx,%rax
193a(5): mov %rax,0x8(%rsp)
193f(8): movzx 0x2067ad(%rip),%r15d
1947(3): test %r15b,%r15b
194a(2): jnz 0xffffff89(%rip)
194c(5): jmp 0xffffff6b(%rip)
1951(3): mov %rbp,%rdi
1954(5): call 0xfffffabc(%rip)
1959(2): test %eax,%eax
195b(2): mov %eax,%ebx
195d(2): jns 0xffffffaf(%rip)
195f(3): mov %rbp,%rdi
1962(5): call 0xd6e(%rip)
1967(3): test %rax,%rax
196a(3): mov %rax,%rbp
196d(2): jnz 0xffffff8a(%rip)
196f(3): test %r15b,%r15b
1972(2): jnz 0xffffffa8(%rip)
1974(5): call 0xf6c(%rip)
1979(5): mov 0x18(%rsp),%rcx
197e(9): xor $0x28,%rcx
1987(6): mov 0x206763(%rip),%eax
198d(6): jnz 0x10a(%rip)
1993(4): add $0x28,%rsp
1997(1): pop %rbx
1998(1): pop %rbp
1999(2): pop %r12
199b(2): pop %r13
199d(2): pop %r14
199f(2): pop %r15
19a1(1): ret near (%rsp)
19a2(3): movzx %bl,%esi
19a5(5): call 0xfffffb7b(%rip)
19aa(2): test %eax,%eax
19ac(6): jns 0xffffff46(%rip)
19b2(7): lea 0x3b34(%rip),%rsi
19b9(5): mov $0x5,%edx
19be(2): xor %edi,%edi
19c0(5): call 0xfffffb00(%rip)
19c5(3): mov %rax,%rbx
19c8(5): call 0xfffffa78(%rip)
19cd(2): mov (%rax),%esi
19cf(3): mov %rbx,%rdx
19d2(5): mov $0x1,%edi
19d7(2): xor %eax,%eax
19d9(5): call 0xfffffc87(%rip)
19de(3): mov %r13,%rdx
19e1(3): mov %r12,%rsi
19e4(3): mov %r14,%rdi
19e7(5): call 0xc19(%rip)
19ec(5): cmp $0x0,0x7(%rsp)
19f1(3): mov %rax,%rbx
19f4(2): jz 0x1d(%rip)
19f6(4): lea 0x1(%r14),%rax
19fa(4): add $0x1,%r14
19fe(6): jz 0xc2(%rip)
1a04(3): mov %rax,%r14
1a07(5): mov $0x20,%ebx
1a0c(5): jmp 0xffffff33(%rip)
1a11(3): cmp %rax,%r14
1a14(2): jbe 0x17(%rip)
1a16(5): jmp 0xaa(%rip)
1a1b(5): nop 0x0(%rax,%rax,1)
1a20(4): lea 0x1(%rax),%rdx
1a24(4): mov %rdx,0x28(%rdi)
1a28(3): mov $0x20,(%rax)
1a2b(4): add $0x1,%r14
1a2f(3): cmp %r14,%rbx
1a32(2): jbe 0xffffffd5(%rip)
1a34(7): mov 0x20666d(%rip),%rdi
1a3b(4): mov 0x28(%rdi),%rax
1a3f(4): cmp 0x30(%rdi),%rax
1a43(2): jb 0xffffffdd(%rip)
1a45(5): mov $0x20,%esi
1a4a(5): call 0xfffffad6(%rip)
1a4f(2): test %eax,%eax
1a51(2): jns 0xffffffda(%rip)
1a53(7): lea 0x3a93(%rip),%rsi
1a5a(5): mov $0x5,%edx
1a5f(2): xor %edi,%edi
1a61(5): call 0xfffffa5f(%rip)
1a66(3): mov %rax,%rbx
1a69(5): call 0xfffff9d7(%rip)
1a6e(2): mov (%rax),%esi
1a70(3): mov %rbx,%rdx
1a73(5): mov $0x1,%edi
1a78(2): xor %eax,%eax
1a7a(5): call 0xfffffbe6(%rip)
1a7f(5): cmp $0xffffff7e,%eax
1a84(2): jnz 0x9(%rip)
1a86(2): xor %edi,%edi
1a88(5): call 0x178(%rip)
1a8d(5): mov $0x1,%edi
1a92(5): call 0x16e(%rip)
1a97(5): call 0xfffffa59(%rip)
1a9c(7): lea 0x3a33(%rip),%rsi
1aa3(5): mov $0x5,%edx
1aa8(2): xor %edi,%edi
1aaa(5): call 0xfffffa16(%rip)
1aaf(2): xor %esi,%esi
1ab1(3): mov %rax,%rdx
1ab4(5): mov $0x1,%edi
1ab9(2): xor %eax,%eax
1abb(5): call 0xfffffba5(%rip)
1ac0(7): lea 0x3a0f(%rip),%rsi
1ac7(5): mov $0x5,%edx
1acc(2): xor %edi,%edi
1ace(5): call 0xfffff9f2(%rip)
1ad3(2): xor %esi,%esi
1ad5(3): mov %rax,%rdx
1ad8(5): mov $0x1,%edi
1add(2): xor %eax,%eax
1adf(5): call 0xfffffb81(%rip)
1ae4(a): nop 0x0(%rax,%rax,1)
1aee(2): nop 
1af0(2): xor %ebp,%ebp
1af2(3): mov %rdx,%r9
1af5(1): pop %rsi
1af6(3): mov %rsp,%rdx
1af9(4): and $0xfffffff0,%rsp
1afd(1): push %rax
1afe(1): push %rsp
1aff(7): lea 0x38ca(%rip),%r8
1b06(7): lea 0x3853(%rip),%rcx
1b0d(7): lea 0xfffffbfc(%rip),%rdi
1b14(6): call 0x2064c6(%rip)
1b1a(1): hlt 

"_start" :
1af0(2): xor %ebp,%ebp
1af2(3): mov %rdx,%r9
1af5(1): pop %rsi
1af6(3): mov %rsp,%rdx
1af9(4): and $0xfffffff0,%rsp
1afd(1): push %rax
1afe(1): push %rsp
1aff(7): lea 0x38ca(%rip),%r8
1b06(7): lea 0x3853(%rip),%rcx
1b0d(7): lea 0xfffffbfc(%rip),%rdi
1b14(6): call 0x2064c6(%rip)
1b1a(1): hlt 

"deregister_tm_clones" :
1b20(7): lea 0x206579(%rip),%rdi
1b27(1): push %rbp
1b28(7): lea 0x206571(%rip),%rax
1b2f(3): cmp %rdi,%rax
1b32(3): mov %rsp,%rbp
1b35(2): jz 0x1b(%rip)
1b37(7): mov 0x20649a(%rip),%rax
1b3e(3): test %rax,%rax
1b41(2): jz 0xf(%rip)
1b43(1): pop %rbp
1b44(2): jmp %rax
1b46(a): nop 0x0(%rax,%rax,1)
1b50(1): pop %rbp
1b51(1): ret near (%rsp)

"register_tm_clones" :
1b60(7): lea 0x206539(%rip),%rdi
1b67(7): lea 0x206532(%rip),%rsi
1b6e(1): push %rbp
1b6f(3): sub %rdi,%rsi
1b72(3): mov %rsp,%rbp
1b75(4): sar $0x3,%rsi
1b79(3): mov %rsi,%rax
1b7c(4): shr $0x3f,%rax
1b80(3): add %rax,%rsi
1b83(3): sar $0x1,%rsi
1b86(2): jz 0x1a(%rip)
1b88(7): mov 0x206461(%rip),%rax
1b8f(3): test %rax,%rax
1b92(2): jz 0xe(%rip)
1b94(1): pop %rbp
1b95(2): jmp %rax
1b97(9): nop 0x0(%rax,%rax,1)
1ba0(1): pop %rbp
1ba1(1): ret near (%rsp)

"__do_global_dtors_aux" :
1bb0(7): cmp $0x0,0x206531(%rip)
1bb7(2): jnz 0x31(%rip)
1bb9(8): cmp $0x0,0x206437(%rip)
1bc1(1): push %rbp
1bc2(3): mov %rsp,%rbp
1bc5(2): jz 0xe(%rip)
1bc7(7): mov 0x20643a(%rip),%rdi
1bce(5): call 0xfffffb32(%rip)
1bd3(5): call 0xffffff4d(%rip)
1bd8(7): mov $0x1,0x206509(%rip)
1bdf(1): pop %rbp
1be0(1): ret near (%rsp)
1be1(7): nop 0x0(%rax)
1be8(2): REP ret near (%rsp)

"frame_dummy" :
1bf0(1): push %rbp
1bf1(3): mov %rsp,%rbp
1bf4(1): pop %rbp
1bf5(5): jmp 0xffffff6b(%rip)

"usage" :
1c00(2): push %r13
1c02(2): push %r12
1c04(5): mov $0x5,%edx
1c09(1): push %rbp
1c0a(1): push %rbx
1c0b(2): mov %edi,%ebp
1c0d(7): sub $0x88,%rsp
1c14(7): mov 0x206535(%rip),%rbx
1c1b(9): mov $0x28,%rax
1c24(5): mov %rax,0x78(%rsp)
1c29(2): xor %eax,%eax
1c2b(2): test %edi,%edi
1c2d(2): jz 0x30(%rip)
1c2f(7): lea 0x38e2(%rip),%rsi
1c36(2): xor %edi,%edi
1c38(5): call 0xfffff888(%rip)
1c3d(7): mov 0x20649c(%rip),%rdi
1c44(3): mov %rax,%rdx
1c47(3): mov %rbx,%rcx
1c4a(5): mov $0x1,%esi
1c4f(2): xor %eax,%eax
1c51(5): call 0xfffffa6f(%rip)
1c56(2): mov %ebp,%edi
1c58(5): call 0xfffffa48(%rip)
1c5d(7): lea 0x38dc(%rip),%rsi
1c64(2): xor %edi,%edi
1c66(5): call 0xfffff85a(%rip)
1c6b(3): mov %rbx,%rdx
1c6e(3): mov %rax,%rsi
1c71(5): mov $0x1,%edi
1c76(2): xor %eax,%eax
1c78(5): call 0xfffff9d8(%rip)
1c7d(7): mov 0x206424(%rip),%rbx
1c84(7): lea 0x38dd(%rip),%rsi
1c8b(5): mov $0x5,%edx
1c90(2): xor %edi,%edi
1c92(5): call 0xfffff82e(%rip)
1c97(3): mov %rbx,%rsi
1c9a(3): mov %rax,%rdi
1c9d(5): call 0xfffff913(%rip)
1ca2(7): mov 0x2063ff(%rip),%rbx
1ca9(7): lea 0x3900(%rip),%rsi
1cb0(5): mov $0x5,%edx
1cb5(2): xor %edi,%edi
1cb7(5): call 0xfffff809(%rip)
1cbc(3): mov %rbx,%rsi
1cbf(3): mov %rax,%rdi
1cc2(5): call 0xfffff8ee(%rip)
1cc7(7): mov 0x2063da(%rip),%rbx
1cce(7): lea 0x3913(%rip),%rsi
1cd5(5): mov $0x5,%edx
1cda(2): xor %edi,%edi
1cdc(5): call 0xfffff7e4(%rip)
1ce1(3): mov %rbx,%rsi
1ce4(3): mov %rax,%rdi
1ce7(5): call 0xfffff8c9(%rip)
1cec(7): mov 0x2063b5(%rip),%rbx
1cf3(7): lea 0x393e(%rip),%rsi
1cfa(5): mov $0x5,%edx
1cff(2): xor %edi,%edi
1d01(5): call 0xfffff7bf(%rip)
1d06(3): mov %rbx,%rsi
1d09(3): mov %rax,%rdi
1d0c(5): call 0xfffff8a4(%rip)
1d11(5): call 0xc1f(%rip)
1d16(7): mov 0x20638b(%rip),%rbx
1d1d(7): lea 0x3984(%rip),%rsi
1d24(5): mov $0x5,%edx
1d29(2): xor %edi,%edi
1d2b(5): call 0xfffff795(%rip)
1d30(3): mov %rbx,%rsi
1d33(3): mov %rax,%rdi
1d36(5): call 0xfffff87a(%rip)
1d3b(7): mov 0x206366(%rip),%rbx
1d42(7): lea 0x398f(%rip),%rsi
1d49(5): mov $0x5,%edx
1d4e(2): xor %edi,%edi
1d50(5): call 0xfffff770(%rip)
1d55(3): mov %rbx,%rsi
1d58(3): mov %rax,%rdi
1d5b(7): lea 0x36a2(%rip),%rbx
1d62(5): call 0xfffff84e(%rip)
1d67(7): lea 0x369d(%rip),%rax
1d6e(7): lea 0x36d7(%rip),%rcx
1d75(9): mov $0x0,0x60(%rsp)
1d7e(9): mov $0x0,0x68(%rsp)
1d87(3): mov %rsp,%rdx
1d8a(4): mov %rax,(%rsp)
1d8e(7): lea 0x3678(%rip),%rax
1d95(5): mov %rcx,0x30(%rsp)
1d9a(7): lea 0x36b5(%rip),%rcx
1da1(5): mov %rax,0x8(%rsp)
1da6(7): lea 0x36d8(%rip),%rax
1dad(5): mov %rcx,0x40(%rsp)
1db2(7): lea 0x36a7(%rip),%rcx
1db9(5): mov %rax,0x10(%rsp)
1dbe(7): lea 0x3658(%rip),%rax
1dc5(5): mov %rcx,0x50(%rsp)
1dca(5): mov %rax,0x18(%rsp)
1dcf(7): lea 0x365d(%rip),%rax
1dd6(5): mov %rax,0x20(%rsp)
1ddb(7): lea 0x365b(%rip),%rax
1de2(5): mov %rax,0x28(%rsp)
1de7(5): mov %rax,0x38(%rsp)
1dec(5): mov %rax,0x48(%rsp)
1df1(5): mov %rax,0x58(%rsp)
1df6(a): nop 0x0(%rax,%rax,1)
1e00(4): add $0x10,%rdx
1e04(3): mov (%rdx),%rdi
1e07(3): test %rdi,%rdi
1e0a(2): jz 0x15(%rip)
1e0c(5): mov $0x7,%ecx
1e11(3): mov %rbx,%rsi
1e14(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1e16(3): setnbe %al
1e19(2): sbb $0x0,%al
1e1b(2): test %al,%al
1e1d(2): jnz 0xffffffe3(%rip)
1e1f(4): mov 0x8(%rdx),%r12
1e23(2): xor %edi,%edi
1e25(5): mov $0x5,%edx
1e2a(7): lea 0x3639(%rip),%rsi
1e31(3): test %r12,%r12
1e34(6): jz 0xc7(%rip)
1e3a(5): call 0xfffff686(%rip)
1e3f(7): lea 0x38ca(%rip),%rcx
1e46(7): lea 0x3634(%rip),%rdx
1e4d(3): mov %rax,%rsi
1e50(5): mov $0x1,%edi
1e55(2): xor %eax,%eax
1e57(5): call 0xfffff7f9(%rip)
1e5c(2): xor %esi,%esi
1e5e(5): mov $0x5,%edi
1e63(5): call 0xfffff7dd(%rip)
1e68(3): test %rax,%rax
1e6b(2): jz 0x1e(%rip)
1e6d(7): lea 0x361b(%rip),%rsi
1e74(5): mov $0x3,%edx
1e79(3): mov %rax,%rdi
1e7c(5): call 0xfffff5d4(%rip)
1e81(2): test %eax,%eax
1e83(6): jnz 0x10d(%rip)
1e89(7): lea 0x3603(%rip),%rsi
1e90(2): xor %edi,%edi
1e92(5): mov $0x5,%edx
1e97(5): call 0xfffff629(%rip)
1e9c(7): lea 0x3561(%rip),%rcx
1ea3(7): lea 0x3866(%rip),%rdx
1eaa(3): mov %rax,%rsi
1ead(5): mov $0x1,%edi
1eb2(2): xor %eax,%eax
1eb4(5): call 0xfffff79c(%rip)
1eb9(3): cmp %rbx,%r12
1ebc(7): lea 0x3564(%rip),%rcx
1ec3(7): lea 0x41f7(%rip),%rbx
1eca(4): cmove %rcx,%rbx
1ece(7): lea 0x38ab(%rip),%rsi
1ed5(2): xor %edi,%edi
1ed7(5): mov $0x5,%edx
1edc(5): call 0xfffff5e4(%rip)
1ee1(3): mov %rbx,%rcx
1ee4(3): mov %rax,%rsi
1ee7(3): mov %r12,%rdx
1eea(5): mov $0x1,%edi
1eef(2): xor %eax,%eax
1ef1(5): call 0xfffff75f(%rip)
1ef6(5): jmp 0xfffffd60(%rip)
1efb(5): call 0xfffff5c5(%rip)
1f00(7): lea 0x3809(%rip),%rcx
1f07(7): lea 0x3573(%rip),%rdx
1f0e(3): mov %rax,%rsi
1f11(5): mov $0x1,%edi
1f16(2): xor %eax,%eax
1f18(5): call 0xfffff738(%rip)
1f1d(2): xor %esi,%esi
1f1f(5): mov $0x5,%edi
1f24(5): call 0xfffff71c(%rip)
1f29(3): test %rax,%rax
1f2c(2): jz 0x1a(%rip)
1f2e(7): lea 0x355a(%rip),%rsi
1f35(5): mov $0x3,%edx
1f3a(3): mov %rax,%rdi
1f3d(5): call 0xfffff513(%rip)
1f42(2): test %eax,%eax
1f44(2): jnz 0x45(%rip)
1f46(7): lea 0x3546(%rip),%rsi
1f4d(5): mov $0x5,%edx
1f52(2): xor %edi,%edi
1f54(7): lea 0x34a9(%rip),%r12
1f5b(7): lea 0x34c5(%rip),%rbx
1f62(5): call 0xfffff55e(%rip)
1f67(7): lea 0x3496(%rip),%rcx
1f6e(7): lea 0x379b(%rip),%rdx
1f75(3): mov %rax,%rsi
1f78(5): mov $0x1,%edi
1f7d(2): xor %eax,%eax
1f7f(5): call 0xfffff6d1(%rip)
1f84(5): jmp 0xffffff4a(%rip)
1f89(7): lea 0x3474(%rip),%r12
1f90(7): mov 0x206111(%rip),%r13
1f97(7): lea 0x379a(%rip),%rsi
1f9e(2): xor %edi,%edi
1fa0(5): mov $0x5,%edx
1fa5(5): call 0xfffff51b(%rip)
1faa(3): mov %r13,%rsi
1fad(3): mov %rax,%rdi
1fb0(5): call 0xfffff600(%rip)
1fb5(5): jmp 0xfffffed4(%rip)

"set_extend_size" :
1fc0(8): cmp $0x0,0x206168(%rip)
1fc8(1): push %rbx
1fc9(5): mov $0x1,%eax
1fce(3): mov %rdi,%rbx
1fd1(2): jz 0x25(%rip)
1fd3(7): lea 0x380e(%rip),%rsi
1fda(5): mov $0x5,%edx
1fdf(2): xor %edi,%edi
1fe1(5): call 0xfffff4df(%rip)
1fe6(2): xor %esi,%esi
1fe8(3): mov %rax,%rdx
1feb(2): xor %edi,%edi
1fed(2): xor %eax,%eax
1fef(5): call 0xfffff671(%rip)
1ff4(2): xor %eax,%eax
1ff6(7): mov %rbx,0x206133(%rip)
1ffd(1): pop %rbx
1ffe(1): ret near (%rsp)

"set_increment_size" :
2000(8): cmp $0x0,0x206120(%rip)
2008(1): push %rbx
2009(5): mov $0x1,%eax
200e(3): mov %rdi,%rbx
2011(2): jz 0x25(%rip)
2013(7): lea 0x37fe(%rip),%rsi
201a(5): mov $0x5,%edx
201f(2): xor %edi,%edi
2021(5): call 0xfffff49f(%rip)
2026(2): xor %esi,%esi
2028(3): mov %rax,%rdx
202b(2): xor %edi,%edi
202d(2): xor %eax,%eax
202f(5): call 0xfffff631(%rip)
2034(2): xor %eax,%eax
2036(7): mov %rbx,0x2060eb(%rip)
203d(1): pop %rbx
203e(1): ret near (%rsp)

"add_tab_stop" :
2040(1): push %rbp
2041(1): push %rbx
2042(3): mov %rdi,%rbx
2045(4): sub $0x8,%rsp
2049(7): mov 0x2060c0(%rip),%rax
2050(7): mov 0x2060c9(%rip),%rdi
2057(7): mov 0x2060ba(%rip),%rsi
205e(3): test %rax,%rax
2061(2): jz 0x37(%rip)
2063(8): lea 0x0(,%rax,8),%rdx
206b(5): mov 0xfffffff8(%rdi,%rdx,1),%rcx
2070(3): cmp %rbx,%rcx
2073(6): jbe 0xcf(%rip)
2079(3): cmp %rsi,%rax
207c(2): jz 0x54(%rip)
207e(4): add $0x1,%rax
2082(4): mov %rbx,0x0(%rdi,%rdx,1)
2086(7): mov %rax,0x206083(%rip)
208d(4): add $0x8,%rsp
2091(1): pop %rbx
2092(1): pop %rbp
2093(1): ret near (%rsp)
2094(4): nop 0x0(%rax)
2098(3): mov %rbx,%rbp
209b(3): cmp %rsi,%rax
209e(2): jz 0x34(%rip)
20a0(4): mov %rbx,0x0(%rdi,%rax,8)
20a4(7): cmp %rbp,0x2061ed(%rip)
20ab(4): lea 0x1(%rax),%rdx
20af(7): mov %rdx,0x20605a(%rip)
20b6(2): jnb 0x9(%rip)
20b8(7): mov %rbp,0x2061d9(%rip)
20bf(4): add $0x8,%rsp
20c3(1): pop %rbx
20c4(1): pop %rbp
20c5(1): ret near (%rsp)
20c6(a): nop 0x0(%rax,%rax,1)
20d0(2): xor %ebp,%ebp
20d2(3): test %rdi,%rdi
20d5(2): jz 0x43(%rip)
20d7(a): mov $0x768614336404564649,%rax
20e1(3): cmp %rax,%rsi
20e4(2): jnbe 0x59(%rip)
20e6(3): mov %rsi,%rax
20e9(3): shr $0x1,%rax
20ec(5): lea 0x1(%rsi,%rax,1),%rsi
20f1(7): mov %rsi,0x206020(%rip)
20f8(4): shl/sal $0x3,%rsi
20fc(5): call 0x2d44(%rip)
2101(3): mov %rax,%rdi
2104(7): mov %rax,0x206015(%rip)
210b(7): mov 0x205ffe(%rip),%rax
2112(2): jmp 0xffffff8e(%rip)
2114(4): nop 0x0(%rax)
2118(3): test %rsi,%rsi
211b(5): mov $0x10,%eax
2120(5): mov $0x8,%edx
2125(4): cmove %rax,%rsi
2129(3): mov %rdx,%rax
212c(2): xor %ecx,%ecx
212e(3): mul %rax,%rsi,%rdx
2131(2): jo 0x1c(%rip)
2133(3): test %rax,%rax
2136(2): js 0x7(%rip)
2138(3): test %rcx,%rcx
213b(2): jz 0xffffffb6(%rip)
213d(5): call 0x2ef3(%rip)
2142(3): mov %rbx,%rbp
2145(3): sub %rcx,%rbp
2148(5): jmp 0xffffff53(%rip)
214d(5): mov $0x1,%ecx
2152(2): jmp 0xffffffe1(%rip)

"parse_tab_stops" :
2160(2): push %r15
2162(2): push %r14
2164(2): push %r13
2166(2): push %r12
2168(1): push %rbp
2169(1): push %rbx
216a(4): sub $0x18,%rsp
216e(4): movzx (%rdi),%r15d
2172(3): test %r15b,%r15b
2175(6): jz 0x10c(%rip)
217b(3): mov %rdi,%rbx
217e(3): xor %r14d,%r14d
2181(5): mov $0x1,0x8(%rsp)
2186(8): mov $0x0,(%rsp)
218e(3): xor %r13d,%r13d
2191(3): xor %r12d,%r12d
2194(2): xor %ebp,%ebp
2196(2): jmp 0x68(%rip)
2198(8): nop 0x0(%rax,%rax,1)
21a0(5): call 0xfffff550(%rip)
21a5(3): mov (%rax),%rsi
21a8(4): movzx %r15b,%ecx
21ac(4): test $0x1,0x0(%rsi,%rcx,2)
21b0(2): jnz 0x54(%rip)
21b2(4): cmp $0x2f,%r15b
21b6(6): jz 0x122(%rip)
21bc(4): cmp $0x2b,%r15b
21c0(6): jz 0x158(%rip)
21c6(4): movsx %r15b,%edx
21ca(3): sub $0x30,%edx
21cd(3): cmp $0x9,%edx
21d0(6): jnbe 0x2b0(%rip)
21d6(3): test %bpl,%bpl
21d9(6): jnz 0x15f(%rip)
21df(3): movsxd %edx,%r14
21e2(3): mov %rbx,%rax
21e5(4): mov %rbx,(%rsp)
21e9(5): mov $0x1,%ebp
21ee(2): nop 
21f0(5): movzx 0x1(%rax),%r15d
21f5(4): lea 0x1(%rax),%rbx
21f9(3): test %r15b,%r15b
21fc(2): jz 0x4c(%rip)
21fe(4): cmp $0x2c,%r15b
2202(2): jnz 0xffffff9e(%rip)
2204(3): test %bpl,%bpl
2207(6): jz 0xa9(%rip)
220d(3): test %r12b,%r12b
2210(3): mov %r14,%rdi
2213(6): jnz 0xe5(%rip)
2219(3): test %r13b,%r13b
221c(6): jz 0xa4(%rip)
2222(5): call 0xfffffdde(%rip)
2227(2): test %al,%al
2229(3): mov %eax,%r13d
222c(6): jz 0x283(%rip)
2232(3): mov %rbx,%rax
2235(2): xor %ebp,%ebp
2237(5): movzx 0x1(%rax),%r15d
223c(4): lea 0x1(%rax),%rbx
2240(3): test %r15b,%r15b
2243(2): jnz 0xffffffbb(%rip)
2245(3): nop (%rax)
2248(3): test %bpl,%bpl
224b(2): jz 0x2b(%rip)
224d(5): cmp $0x0,0x8(%rsp)
2252(6): jz 0x25d(%rip)
2258(3): test %r12b,%r12b
225b(3): mov %r14,%rdi
225e(6): jnz 0x207(%rip)
2264(3): test %r13b,%r13b
2267(6): jz 0x1eb(%rip)
226d(5): call 0xfffffd93(%rip)
2272(4): mov %al,0x8(%rsp)
2276(5): cmp $0x0,0x8(%rsp)
227b(6): jz 0x234(%rip)
2281(4): add $0x18,%rsp
2285(1): pop %rbx
2286(1): pop %rbp
2287(2): pop %r12
2289(2): pop %r13
228b(2): pop %r14
228d(2): pop %r15
228f(1): ret near (%rsp)
2290(4): lea 0x0(%r14,%r14,4),%rax
2294(3): movsxd %edx,%rdx
2297(4): lea 0x0(%rdx,%rax,2),%rax
229b(3): cmp %r14,%rax
229e(6): jb 0xad(%rip)
22a4(3): mov %rax,%r14
22a7(9): nop 0x0(%rax,%rax,1)
22b0(3): mov %rbx,%rax
22b3(5): jmp 0xffffff3d(%rip)
22b8(8): nop 0x0(%rax,%rax,1)
22c0(5): call 0xfffffd80(%rip)
22c5(3): mov %r13d,%r12d
22c8(2): xor %ebp,%ebp
22ca(3): mov %rbx,%rax
22cd(5): jmp 0xffffff23(%rip)
22d2(6): nop 0x0(%rax,%rax,1)
22d8(3): test %bpl,%bpl
22db(6): jnz 0xed(%rip)
22e1(3): xor %r13d,%r13d
22e4(3): mov %rbx,%rax
22e7(6): mov $0x1,%r12d
22ed(5): jmp 0xffffff03(%rip)
22f2(6): nop 0x0(%rax,%rax,1)
22f8(5): call 0xfffffcc8(%rip)
22fd(2): test %al,%al
22ff(3): mov %eax,%r12d
2302(6): jz 0x1ad(%rip)
2308(3): mov %rbx,%rax
230b(2): xor %ebp,%ebp
230d(5): jmp 0xfffffee3(%rip)
2312(6): nop 0x0(%rax,%rax,1)
2318(3): test %bpl,%bpl
231b(6): jnz 0xf5(%rip)
2321(3): xor %r12d,%r12d
2324(3): mov %rbx,%rax
2327(6): mov $0x1,%r13d
232d(5): jmp 0xfffffec3(%rip)
2332(6): nop 0x0(%rax,%rax,1)
2338(a): mov $0x1844674407370955161,%rax
2342(3): cmp %rax,%r14
2345(6): jbe 0xffffff4b(%rip)
234b(4): mov (%rsp),%r15
234f(7): lea 0x3787(%rip),%rsi
2356(3): mov %r15,%rdi
2359(5): call 0xfffff217(%rip)
235e(3): mov %r15,%rdi
2361(3): mov %rax,%rsi
2364(3): mov %rax,%rbx
2367(4): mov %r15,(%rsp)
236b(5): call 0x2d05(%rip)
2370(3): mov %rax,%rdi
2373(3): mov %rax,%r15
2376(5): call 0x242a(%rip)
237b(7): lea 0x3766(%rip),%rsi
2382(5): mov $0x5,%edx
2387(2): xor %edi,%edi
2389(5): mov %rax,0x8(%rsp)
238e(5): call 0xfffff132(%rip)
2393(5): mov 0x8(%rsp),%rcx
2398(3): mov %rax,%rdx
239b(2): xor %esi,%esi
239d(2): xor %eax,%eax
239f(2): xor %edi,%edi
23a1(5): call 0xfffff2bf(%rip)
23a6(3): mov %r15,%rdi
23a9(5): call 0xfffff077(%rip)
23ae(4): mov (%rsp),%rax
23b2(5): mov $0x0,0x8(%rsp)
23b7(5): lea 0xffffffff(%rax,%rbx,1),%rax
23bc(5): jmp 0xfffffe34(%rip)
23c1(7): nop 0x0(%rax)
23c8(3): mov %rbx,%rdi
23cb(3): xor %r13d,%r13d
23ce(5): call 0x23d2(%rip)
23d3(7): lea 0x346e(%rip),%rsi
23da(3): mov %rax,%r12
23dd(5): mov $0x5,%edx
23e2(2): xor %edi,%edi
23e4(5): call 0xfffff0dc(%rip)
23e9(3): mov %r12,%rcx
23ec(3): mov %rax,%rdx
23ef(2): xor %esi,%esi
23f1(2): xor %eax,%eax
23f3(2): xor %edi,%edi
23f5(3): mov %ebp,%r12d
23f8(5): call 0xfffff268(%rip)
23fd(3): mov %rbx,%rax
2400(5): mov $0x0,0x8(%rsp)
2405(5): jmp 0xfffffdeb(%rip)
240a(6): nop 0x0(%rax,%rax,1)
2410(3): mov %rbx,%rdi
2413(3): mov %ebp,%r13d
2416(5): call 0x238a(%rip)
241b(7): lea 0x3456(%rip),%rsi
2422(3): mov %rax,%r12
2425(5): mov $0x5,%edx
242a(2): xor %edi,%edi
242c(5): call 0xfffff094(%rip)
2431(3): mov %r12,%rcx
2434(3): mov %rax,%rdx
2437(2): xor %esi,%esi
2439(2): xor %eax,%eax
243b(2): xor %edi,%edi
243d(3): xor %r12d,%r12d
2440(5): call 0xfffff220(%rip)
2445(3): mov %rbx,%rax
2448(5): mov $0x0,0x8(%rsp)
244d(5): jmp 0xfffffda3(%rip)
2452(4): add $0x18,%rsp
2456(1): pop %rbx
2457(1): pop %rbp
2458(2): pop %r12
245a(2): pop %r13
245c(2): pop %r14
245e(2): pop %r15
2460(5): jmp 0xfffffbe0(%rip)
2465(5): call 0xfffffb5b(%rip)
246a(4): mov %al,0x8(%rsp)
246e(5): cmp $0x0,0x8(%rsp)
2473(6): jnz 0xfffffe0e(%rip)
2479(2): jmp 0x36(%rip)
247b(5): nop 0x0(%rax,%rax,1)
2480(3): mov %rbx,%rdi
2483(5): call 0x231d(%rip)
2488(7): lea 0x3419(%rip),%rsi
248f(3): mov %rax,%rbx
2492(5): mov $0x5,%edx
2497(2): xor %edi,%edi
2499(5): call 0xfffff027(%rip)
249e(3): mov %rbx,%rcx
24a1(3): mov %rax,%rdx
24a4(2): xor %esi,%esi
24a6(2): xor %edi,%edi
24a8(2): xor %eax,%eax
24aa(5): call 0xfffff1b6(%rip)
24af(5): mov $0x1,%edi
24b4(5): call 0xfffff1ec(%rip)

"finalize_tab_stops" :
24c0(4): sub $0x8,%rsp
24c4(7): mov 0x205c45(%rip),%rsi
24cb(7): mov 0x205c4e(%rip),%rdi
24d2(3): test %rsi,%rsi
24d5(2): jz 0x7f(%rip)
24d7(3): mov (%rdi),%r8
24da(3): test %r8,%r8
24dd(3): mov %r8,%rcx
24e0(6): jz 0xb0(%rip)
24e6(2): xor %eax,%eax
24e8(2): jmp 0x21(%rip)
24ea(6): nop 0x0(%rax,%rax,1)
24f0(4): mov 0x0(%rdi,%rax,8),%rdx
24f4(3): test %rdx,%rdx
24f7(6): jz 0x99(%rip)
24fd(3): cmp %rdx,%rcx
2500(6): jnb 0xb4(%rip)
2506(3): mov %rdx,%rcx
2509(4): add $0x1,%rax
250d(3): cmp %rax,%rsi
2510(2): jnz 0xffffffe0(%rip)
2512(7): mov 0x205c0f(%rip),%rax
2519(3): test %rax,%rax
251c(2): jz 0x10(%rip)
251e(8): cmp $0x0,0x205c0a(%rip)
2526(6): jnz 0xb2(%rip)
252c(4): cmp $0x1,%rsi
2530(2): jz 0x12(%rip)
2532(b): mov $0x0,0x205bfb(%rip)
253d(4): add $0x8,%rsp
2541(1): ret near (%rsp)
2542(7): or 0x205be7(%rip),%rax
2549(2): jnz 0xffffffe9(%rip)
254b(7): mov %r8,0x205be6(%rip)
2552(2): jmp 0xffffffeb(%rip)
2554(7): mov 0x205bcd(%rip),%rdx
255b(7): mov 0x205bce(%rip),%rax
2562(3): test %rdx,%rdx
2565(2): jz 0x1d(%rip)
2567(3): test %rax,%rax
256a(2): jnz 0x6e(%rip)
256c(3): mov %rdx,%rax
256f(7): mov %rax,0x205d22(%rip)
2576(7): mov %rax,0x205bbb(%rip)
257d(4): add $0x8,%rsp
2581(1): ret near (%rsp)
2582(3): test %rax,%rax
2585(5): mov $0x8,%edx
258a(4): cmove %rdx,%rax
258e(2): jmp 0xffffffe1(%rip)
2590(7): lea 0x356a(%rip),%rsi
2597(5): mov $0x5,%edx
259c(2): xor %edi,%edi
259e(5): call 0xffffef22(%rip)
25a3(2): xor %esi,%esi
25a5(3): mov %rax,%rdx
25a8(5): mov $0x1,%edi
25ad(2): xor %eax,%eax
25af(5): call 0xfffff0b1(%rip)
25b4(7): lea 0x355b(%rip),%rsi
25bb(5): mov $0x5,%edx
25c0(2): xor %edi,%edi
25c2(5): call 0xffffeefe(%rip)
25c7(2): xor %esi,%esi
25c9(3): mov %rax,%rdx
25cc(5): mov $0x1,%edi
25d1(2): xor %eax,%eax
25d3(5): call 0xfffff08d(%rip)
25d8(7): lea 0x32f9(%rip),%rsi
25df(5): mov $0x5,%edx
25e4(2): xor %edi,%edi
25e6(5): call 0xffffeeda(%rip)
25eb(2): xor %esi,%esi
25ed(3): mov %rax,%rdx
25f0(5): mov $0x1,%edi
25f5(2): xor %eax,%eax
25f7(5): call 0xfffff069(%rip)
25fc(4): nop 0x0(%rax)
2600(7): mov 0x205b31(%rip),%rcx
2607(3): mov $0x0,(%rdx)
260a(3): test %rcx,%rcx
260d(2): jnz 0x63(%rip)
260f(3): mov (%rsi),%rcx
2612(7): mov 0x205af7(%rip),%rax
2619(3): cmp %rcx,%rax
261c(2): jbe 0x32(%rip)
261e(7): mov 0x205afb(%rip),%r9
2625(4): mov 0x0(%r9,%rcx,8),%r8
2629(3): cmp %r8,%rdi
262c(2): jb 0x53(%rip)
262e(4): add $0x1,%rcx
2632(2): jmp 0x14(%rip)
2634(4): nop 0x0(%rax)
2638(4): add $0x1,%rcx
263c(5): mov 0xfffffff8(%r9,%rcx,8),%r8
2641(3): cmp %r8,%rdi
2644(2): jb 0x3b(%rip)
2646(3): cmp %rcx,%rax
2649(3): mov %rcx,(%rsi)
264c(2): jnz 0xffffffec(%rip)
264e(7): mov 0x205adb(%rip),%rcx
2655(3): test %rcx,%rcx
2658(2): jnz 0x18(%rip)
265a(7): mov 0x205ac7(%rip),%r8
2661(3): test %r8,%r8
2664(2): jnz 0x24(%rip)
2666(3): mov $0x1,(%rdx)
2669(2): jmp 0x16(%rip)
266b(5): nop 0x0(%rax,%rax,1)
2670(3): mov %rdi,%rax
2673(2): xor %edx,%edx
2675(4): lea 0x0(%rcx,%rdi,1),%r8
2679(3): div %rcx,%rax
267c(3): sub %rdx,%r8
267f(3): mov %r8,%rax
2682(1): ret near (%rsp)
2683(5): nop 0x0(%rax,%rax,1)
2688(7): mov 0x205a91(%rip),%rdx
268f(4): lea 0x0(%r8,%rdi,1),%rcx
2693(5): sub 0xfffffff8(%rdx,%rax,8),%rdi
2698(2): xor %edx,%edx
269a(3): mov %rdi,%rax
269d(3): div %r8,%rax
26a0(3): sub %rdx,%rcx
26a3(3): mov %rcx,%r8
26a6(2): jmp 0xffffffd9(%rip)

"get_next_tab_column" :
2600(7): mov 0x205b31(%rip),%rcx
2607(3): mov $0x0,(%rdx)
260a(3): test %rcx,%rcx
260d(2): jnz 0x63(%rip)
260f(3): mov (%rsi),%rcx
2612(7): mov 0x205af7(%rip),%rax
2619(3): cmp %rcx,%rax
261c(2): jbe 0x32(%rip)
261e(7): mov 0x205afb(%rip),%r9
2625(4): mov 0x0(%r9,%rcx,8),%r8
2629(3): cmp %r8,%rdi
262c(2): jb 0x53(%rip)
262e(4): add $0x1,%rcx
2632(2): jmp 0x14(%rip)
2634(4): nop 0x0(%rax)
2638(4): add $0x1,%rcx
263c(5): mov 0xfffffff8(%r9,%rcx,8),%r8
2641(3): cmp %r8,%rdi
2644(2): jb 0x3b(%rip)
2646(3): cmp %rcx,%rax
2649(3): mov %rcx,(%rsi)
264c(2): jnz 0xffffffec(%rip)
264e(7): mov 0x205adb(%rip),%rcx
2655(3): test %rcx,%rcx
2658(2): jnz 0x18(%rip)
265a(7): mov 0x205ac7(%rip),%r8
2661(3): test %r8,%r8
2664(2): jnz 0x24(%rip)
2666(3): mov $0x1,(%rdx)
2669(2): jmp 0x16(%rip)
266b(5): nop 0x0(%rax,%rax,1)
2670(3): mov %rdi,%rax
2673(2): xor %edx,%edx
2675(4): lea 0x0(%rcx,%rdi,1),%r8
2679(3): div %rcx,%rax
267c(3): sub %rdx,%r8
267f(3): mov %r8,%rax
2682(1): ret near (%rsp)
2683(5): nop 0x0(%rax,%rax,1)
2688(7): mov 0x205a91(%rip),%rdx
268f(4): lea 0x0(%r8,%rdi,1),%rcx
2693(5): sub 0xfffffff8(%rdx,%rax,8),%rdi
2698(2): xor %edx,%edx
269a(3): mov %rdi,%rax
269d(3): div %r8,%rax
26a0(3): sub %rdx,%rcx
26a3(3): mov %rcx,%r8
26a6(2): jmp 0xffffffd9(%rip)

"set_file_list" :
26b0(7): lea 0x205959(%rip),%rax
26b7(3): test %rdi,%rdi
26ba(7): mov $0x0,0x205a3f(%rip)
26c1(4): cmove %rax,%rdi
26c5(7): mov %rdi,0x205a3c(%rip)
26cc(1): ret near (%rsp)

"next_file" :
26d0(2): push %r12
26d2(1): push %rbp
26d3(1): push %rbx
26d4(4): sub $0x10,%rsp
26d8(3): test %rdi,%rdi
26db(2): jz 0x44(%rip)
26dd(7): mov 0x205a14(%rip),%rsi
26e4(3): test %rsi,%rsi
26e7(6): jz 0x1cb(%rip)
26ed(3): test $0x20,(%rdi)
26f0(3): mov %rdi,%rbp
26f3(6): jnz 0x17d(%rip)
26f9(7): lea 0x349a(%rip),%rbx
2700(5): mov $0x2,%ecx
2705(3): mov %rbx,%rdi
2708(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
270a(3): mov %rbp,%rdi
270d(3): setnbe %al
2710(2): sbb $0x0,%al
2712(2): test %al,%al
2714(6): jnz 0x10c(%rip)
271a(5): call 0xffffed66(%rip)
271f(7): mov 0x2059e2(%rip),%rax
2726(4): lea 0x8(%rax),%rdx
272a(7): mov %rdx,0x2059d7(%rip)
2731(3): mov (%rax),%rdx
2734(3): test %rdx,%rdx
2737(6): jz 0xd9(%rip)
273d(7): lea 0x3456(%rip),%rbx
2744(7): lea 0x2dac(%rip),%rbp
274b(2): jmp 0x65(%rip)
274d(3): nop (%rax)
2750(7): mov 0x205959(%rip),%rax
2757(7): mov $0x1,0x2059a2(%rip)
275e(3): test %rax,%rax
2761(2): jnz 0x7f(%rip)
2763(2): xor %edi,%edi
2765(5): mov $0x3,%esi
276a(5): call 0x1e66(%rip)
276f(3): mov %rax,%r12
2772(5): call 0xffffecce(%rip)
2777(2): mov (%rax),%esi
2779(7): lea 0x33d3(%rip),%rdx
2780(2): xor %eax,%eax
2782(2): xor %edi,%edi
2784(3): mov %r12,%rcx
2787(5): call 0xffffeed9(%rip)
278c(7): mov 0x205975(%rip),%rax
2793(a): mov $0x1,0x205953(%rip)
279d(4): lea 0x8(%rax),%rdx
27a1(7): mov %rdx,0x205960(%rip)
27a8(3): mov (%rax),%rdx
27ab(3): test %rdx,%rdx
27ae(2): jz 0x62(%rip)
27b0(5): mov $0x2,%ecx
27b5(3): mov %rdx,%rsi
27b8(3): mov %rbx,%rdi
27bb(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
27bd(3): setnbe %al
27c0(2): sbb $0x0,%al
27c2(2): test %al,%al
27c4(2): jz 0xffffff8c(%rip)
27c6(3): mov %rdx,%rdi
27c9(3): mov %rbp,%rsi
27cc(5): mov %rdx,0x8(%rsp)
27d1(5): call 0xffffeeaf(%rip)
27d6(3): test %rax,%rax
27d9(5): mov 0x8(%rsp),%rdx
27de(2): jz 0xffffff85(%rip)
27e0(3): mov %rax,%rdi
27e3(5): mov $0x2,%esi
27e8(5): mov %rax,0x8(%rsp)
27ed(7): mov %rdx,0x205904(%rip)
27f4(5): call 0x26c(%rip)
27f9(5): mov 0x8(%rsp),%rax
27fe(4): add $0x10,%rsp
2802(1): pop %rbx
2803(1): pop %rbp
2804(2): pop %r12
2806(1): ret near (%rsp)
2807(9): nop 0x0(%rax,%rax,1)
2810(4): add $0x10,%rsp
2814(2): xor %eax,%eax
2816(1): pop %rbx
2817(1): pop %rbp
2818(2): pop %r12
281a(1): ret near (%rsp)
281b(5): nop 0x0(%rax,%rax,1)
2820(5): call 0x2870(%rip)
2825(2): test %eax,%eax
2827(6): jz 0xfffffef8(%rip)
282d(7): mov 0x2058c4(%rip),%rdx
2834(5): mov $0x3,%esi
2839(2): xor %edi,%edi
283b(5): call 0x1d95(%rip)
2840(3): mov %rax,%rbx
2843(5): call 0xffffebfd(%rip)
2848(2): mov (%rax),%esi
284a(7): lea 0x3302(%rip),%rdx
2851(3): mov %rbx,%rcx
2854(2): xor %edi,%edi
2856(2): xor %eax,%eax
2858(5): call 0xffffee08(%rip)
285d(a): mov $0x1,0x205889(%rip)
2867(5): jmp 0xfffffeb8(%rip)
286c(4): nop 0x0(%rax)
2870(3): mov %rsi,%rdx
2873(2): xor %edi,%edi
2875(5): mov $0x3,%esi
287a(5): call 0x1d56(%rip)
287f(3): mov %rax,%rbx
2882(5): call 0xffffebbe(%rip)
2887(2): mov (%rax),%esi
2889(7): lea 0x32c3(%rip),%rdx
2890(3): mov %rbx,%rcx
2893(2): xor %edi,%edi
2895(2): xor %eax,%eax
2897(5): call 0xffffedc9(%rip)
289c(a): mov $0x1,0x20584a(%rip)
28a6(7): mov 0x20584b(%rip),%rsi
28ad(5): jmp 0xfffffe4c(%rip)
28b2(7): lea 0x3287(%rip),%rcx
28b9(7): lea 0x3048(%rip),%rsi
28c0(7): lea 0x326b(%rip),%rdi
28c7(5): mov $0x155,%edx
28cc(5): call 0xffffec84(%rip)

"cleanup_file_list_stdin" :
28e0(7): cmp $0x0,0x205819(%rip)
28e7(2): jnz 0x9(%rip)
28e9(2): REP ret near (%rsp)
28eb(5): nop 0x0(%rax,%rax,1)
28f0(4): sub $0x8,%rsp
28f4(7): mov 0x2057b5(%rip),%rdi
28fb(5): call 0x2795(%rip)
2900(2): test %eax,%eax
2902(2): jnz 0x7(%rip)
2904(4): add $0x8,%rsp
2908(1): ret near (%rsp)
2909(5): call 0xffffeb37(%rip)
290e(2): mov (%rax),%esi
2910(7): lea 0x3283(%rip),%rdx
2917(5): mov $0x1,%edi
291c(2): xor %eax,%eax
291e(5): call 0xffffed42(%rip)
2923(3): nop (%rax)
2926(a): nop 0x0(%rax,%rax,1)
2930(1): push %rbx
2931(7): mov 0x205770(%rip),%rbx
2938(7): lea 0x2ff1(%rip),%rsi
293f(5): mov $0x5,%edx
2944(2): xor %edi,%edi
2946(5): call 0xffffeb7a(%rip)
294b(3): mov %rbx,%rsi
294e(3): mov %rax,%rdi
2951(5): call 0xffffec5f(%rip)
2956(7): mov 0x20574b(%rip),%rbx
295d(7): lea 0x300c(%rip),%rsi
2964(2): xor %edi,%edi
2966(5): mov $0x5,%edx
296b(5): call 0xffffeb55(%rip)
2970(3): mov %rbx,%rsi
2973(3): mov %rax,%rdi
2976(1): pop %rbx
2977(5): jmp 0xffffec39(%rip)

"emit_tab_list_info" :
2930(1): push %rbx
2931(7): mov 0x205770(%rip),%rbx
2938(7): lea 0x2ff1(%rip),%rsi
293f(5): mov $0x5,%edx
2944(2): xor %edi,%edi
2946(5): call 0xffffeb7a(%rip)
294b(3): mov %rbx,%rsi
294e(3): mov %rax,%rdi
2951(5): call 0xffffec5f(%rip)
2956(7): mov 0x20574b(%rip),%rbx
295d(7): lea 0x300c(%rip),%rsi
2964(2): xor %edi,%edi
2966(5): mov $0x5,%edx
296b(5): call 0xffffeb55(%rip)
2970(3): mov %rbx,%rsi
2973(3): mov %rax,%rdi
2976(1): pop %rbx
2977(5): jmp 0xffffec39(%rip)

"close_stdout_set_file_name" :
2980(7): mov %rdi,0x2057c1(%rip)
2987(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2990(7): mov %dil,0x2057a9(%rip)
2997(1): ret near (%rsp)

"close_stdout" :
29a0(1): push %rbp
29a1(1): push %rbx
29a2(4): sub $0x8,%rsp
29a6(7): mov 0x2056fb(%rip),%rdi
29ad(5): call 0x2893(%rip)
29b2(2): test %eax,%eax
29b4(2): jz 0x18(%rip)
29b6(5): call 0xffffea8a(%rip)
29bb(7): cmp $0x0,0x20577e(%rip)
29c2(3): mov %rax,%rbx
29c5(2): jz 0x1e(%rip)
29c7(3): cmp $0x20,(%rax)
29ca(2): jnz 0x19(%rip)
29cc(7): mov 0x20570d(%rip),%rdi
29d3(5): call 0x286d(%rip)
29d8(2): test %eax,%eax
29da(2): jnz 0x48(%rip)
29dc(4): add $0x8,%rsp
29e0(1): pop %rbx
29e1(1): pop %rbp
29e2(1): ret near (%rsp)
29e3(7): lea 0x2b03(%rip),%rsi
29ea(2): xor %edi,%edi
29ec(5): mov $0x5,%edx
29f1(5): call 0xffffeacf(%rip)
29f6(7): mov 0x20574b(%rip),%rdi
29fd(3): mov %rax,%rbp
2a00(3): test %rdi,%rdi
2a03(2): jz 0x2a(%rip)
2a05(5): call 0x1b9b(%rip)
2a0a(2): mov (%rbx),%esi
2a0c(7): lea 0x313c(%rip),%rdx
2a13(3): mov %rax,%rcx
2a16(3): mov %rbp,%r8
2a19(2): xor %edi,%edi
2a1b(2): xor %eax,%eax
2a1d(5): call 0xffffec43(%rip)
2a22(6): mov 0x205600(%rip),%edi
2a28(5): call 0xffffea38(%rip)
2a2d(2): mov (%rbx),%esi
2a2f(7): lea 0x311d(%rip),%rdx
2a36(3): mov %rax,%rcx
2a39(2): xor %edi,%edi
2a3b(2): xor %eax,%eax
2a3d(5): call 0xffffec23(%rip)
2a42(2): jmp 0xffffffe0(%rip)

"fadvise" :
2a60(3): test %rdi,%rdi
2a63(2): jz 0x1d(%rip)
2a65(1): push %rbx
2a66(2): mov %esi,%ebx
2a68(5): call 0xffffeb78(%rip)
2a6d(2): mov %ebx,%ecx
2a6f(2): xor %edx,%edx
2a71(2): xor %esi,%esi
2a73(1): pop %rbx
2a74(2): mov %eax,%edi
2a76(5): jmp 0xffffeb0a(%rip)
2a7b(5): nop 0x0(%rax,%rax,1)
2a80(2): REP ret near (%rsp)

"set_program_name" :
2a90(3): test %rdi,%rdi
2a93(1): push %rbx
2a94(2): jz 0x79(%rip)
2a96(5): mov $0x2f,%esi
2a9b(3): mov %rdi,%rbx
2a9e(5): call 0xffffea92(%rip)
2aa3(3): test %rax,%rax
2aa6(2): jz 0x57(%rip)
2aa8(4): lea 0x1(%rax),%r8
2aac(3): mov %r8,%rdx
2aaf(3): sub %rbx,%rdx
2ab2(4): cmp $0x6,%rdx
2ab6(2): jle 0x47(%rip)
2ab8(4): lea 0xfffffffa(%rax),%rsi
2abc(7): lea 0x30cd(%rip),%rdi
2ac3(5): mov $0x7,%ecx
2ac8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2aca(3): setnbe %dl
2acd(3): sbb $0x0,%dl
2ad0(2): test %dl,%dl
2ad2(2): jnz 0x2b(%rip)
2ad4(7): lea 0x30bd(%rip),%rdi
2adb(5): mov $0x3,%ecx
2ae0(3): mov %r8,%rsi
2ae3(3): mov %r8,%rbx
2ae6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2ae8(3): setnbe %dl
2aeb(3): sbb $0x0,%dl
2aee(2): test %dl,%dl
2af0(2): jnz 0xd(%rip)
2af2(4): lea 0x4(%rax),%rbx
2af6(7): mov %rbx,0x2055a3(%rip)
2afd(7): mov %rbx,0x20564c(%rip)
2b04(7): mov %rbx,0x2055bd(%rip)
2b0b(1): pop %rbx
2b0c(1): ret near (%rsp)
2b0d(7): mov 0x2055cc(%rip),%rcx
2b14(7): lea 0x303d(%rip),%rdi
2b1b(5): mov $0x37,%edx
2b20(5): mov $0x1,%esi
2b25(5): call 0xffffeb8b(%rip)
2b2a(5): call 0xffffe906(%rip)

"gettext_quote.part.1" :
2b30(1): push %rbp
2b31(1): push %rbx
2b32(3): mov %rdi,%rbp
2b35(2): mov %esi,%ebx
2b37(4): sub $0x8,%rsp
2b3b(5): call 0x27e5(%rip)
2b40(3): movzx (%rax),%edx
2b43(3): and $0xdf,%edx
2b46(3): cmp $0x55,%dl
2b49(2): jz 0x77(%rip)
2b4b(3): cmp $0x47,%dl
2b4e(2): jz 0x22(%rip)
2b50(7): lea 0x3054(%rip),%rax
2b57(7): lea 0x304f(%rip),%rdx
2b5e(3): cmp $0x9,%ebx
2b61(4): cmovne %rdx,%rax
2b65(4): add $0x8,%rsp
2b69(1): pop %rbx
2b6a(1): pop %rbp
2b6b(1): ret near (%rsp)
2b6c(4): nop 0x0(%rax)
2b70(4): movzx 0x1(%rax),%edx
2b74(3): and $0xdf,%edx
2b77(3): cmp $0x42,%dl
2b7a(2): jnz 0xffffffd6(%rip)
2b7c(4): cmp $0x31,0x2(%rax)
2b80(2): jnz 0xffffffd0(%rip)
2b82(4): cmp $0x38,0x3(%rax)
2b86(2): jnz 0xffffffca(%rip)
2b88(4): cmp $0x30,0x4(%rax)
2b8c(2): jnz 0xffffffc4(%rip)
2b8e(4): cmp $0x33,0x5(%rax)
2b92(2): jnz 0xffffffbe(%rip)
2b94(4): cmp $0x30,0x6(%rax)
2b98(2): jnz 0xffffffb8(%rip)
2b9a(4): cmp $0x0,0x7(%rax)
2b9e(2): jnz 0xffffffb2(%rip)
2ba0(4): cmp $0x60,0x0(%rbp)
2ba4(7): lea 0x2ff9(%rip),%rax
2bab(7): lea 0x2ff6(%rip),%rdx
2bb2(4): cmovne %rdx,%rax
2bb6(4): add $0x8,%rsp
2bba(1): pop %rbx
2bbb(1): pop %rbp
2bbc(1): ret near (%rsp)
2bbd(3): nop (%rax)
2bc0(4): movzx 0x1(%rax),%edx
2bc4(3): and $0xdf,%edx
2bc7(3): cmp $0x54,%dl
2bca(2): jnz 0xffffff86(%rip)
2bcc(4): movzx 0x2(%rax),%edx
2bd0(3): and $0xdf,%edx
2bd3(3): cmp $0x46,%dl
2bd6(6): jnz 0xffffff7a(%rip)
2bdc(4): cmp $0x2d,0x3(%rax)
2be0(6): jnz 0xffffff70(%rip)
2be6(4): cmp $0x38,0x4(%rax)
2bea(6): jnz 0xffffff66(%rip)
2bf0(4): cmp $0x0,0x5(%rax)
2bf4(6): jnz 0xffffff5c(%rip)
2bfa(4): cmp $0x60,0x0(%rbp)
2bfe(7): lea 0x2f97(%rip),%rax
2c05(7): lea 0x2f94(%rip),%rdx
2c0c(4): cmovne %rdx,%rax
2c10(4): add $0x8,%rsp
2c14(1): pop %rbx
2c15(1): pop %rbp
2c16(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2c20(2): push %r15
2c22(2): push %r14
2c24(3): mov %r8d,%r15d
2c27(2): push %r13
2c29(2): push %r12
2c2b(3): mov %rdi,%r14
2c2e(1): push %rbp
2c2f(1): push %rbx
2c30(3): mov %r9d,%ebx
2c33(3): mov %rsi,%r13
2c36(3): mov %rcx,%rbp
2c39(3): and $0x2,%ebx
2c3c(7): sub $0xb8,%rsp
2c43(8): mov 0xf0(%rsp),%rax
2c4b(5): mov %rdx,0x10(%rsp)
2c50(5): mov %r8d,0x8(%rsp)
2c55(5): mov %r9d,0x78(%rsp)
2c5a(5): mov %rax,0x20(%rsp)
2c5f(8): mov 0xf8(%rsp),%rax
2c67(5): mov %rax,0x68(%rsp)
2c6c(8): mov 0x100(%rsp),%rax
2c74(5): mov %rax,0x60(%rsp)
2c79(9): mov $0x28,%rax
2c82(8): mov %rax,0xa8(%rsp)
2c8a(2): xor %eax,%eax
2c8c(5): call 0xffffe844(%rip)
2c91(4): cmp $0xa,%r15d
2c95(5): mov %rax,0x58(%rsp)
2c9a(6): jnbe 0x11b5(%rip)
2ca0(7): lea 0x2f59(%rip),%rcx
2ca7(3): mov %r15d,%edx
2caa(4): movsxd 0x0(%rcx,%rdx,4),%rax
2cae(3): add %rcx,%rax
2cb1(2): jmp %rax
2cb3(5): mov $0x1,0xe(%rsp)
2cb8(5): mov $0x0,0x7c(%rsp)
2cbd(3): xor %r12d,%r12d
2cc0(9): mov $0x0,0x50(%rsp)
2cc9(5): mov $0x1,0xf(%rsp)
2cce(5): mov $0x0,0xd(%rsp)
2cd3(7): lea 0x2ed3(%rip),%rax
2cda(9): mov $0x1,0x18(%rsp)
2ce3(3): xor %r15d,%r15d
2ce6(8): mov $0x2,0x8(%rsp)
2cee(5): mov %rax,0x48(%rsp)
2cf3(3): xor %r11d,%r11d
2cf6(3): mov %rbp,%rax
2cf9(3): mov %r12d,%r8d
2cfc(3): mov %r11,%rbp
2cff(3): mov %rax,%r11
2d02(6): nop 0x0(%rax,%rax,1)
2d08(3): cmp %rbp,%r11
2d0b(4): setnz %r12b
2d0f(4): cmp $0xffffffff,%r11
2d13(2): jnz 0xf(%rip)
2d15(5): mov 0x10(%rsp),%rax
2d1a(4): cmp $0x0,0x0(%rax,%rbp,1)
2d1e(4): setnz %r12b
2d22(3): test %r12b,%r12b
2d25(6): jz 0x65b(%rip)
2d2b(5): cmp $0x2,0x8(%rsp)
2d30(5): mov 0x10(%rsp),%rdi
2d35(4): lea 0x0(%rdi,%rbp,1),%r9
2d39(3): setnz %al
2d3c(4): and 0xd(%rsp),%al
2d40(3): mov %eax,%r10d
2d43(6): jz 0xad(%rip)
2d49(5): mov 0x18(%rsp),%rax
2d4e(3): test %rax,%rax
2d51(6): jz 0x42f(%rip)
2d57(4): cmp $0xffffffff,%r11
2d5b(5): lea 0x0(%rbp,%rax,1),%rbx
2d60(2): jnz 0x30(%rip)
2d62(4): cmp $0x1,%rax
2d66(2): jbe 0x2a(%rip)
2d68(5): mov %r8b,0x38(%rsp)
2d6d(5): mov %r10b,0x30(%rsp)
2d72(5): mov %r9,0x28(%rsp)
2d77(5): call 0xffffe769(%rip)
2d7c(6): movzx 0x38(%rsp),%r8d
2d82(6): movzx 0x30(%rsp),%r10d
2d88(3): mov %rax,%r11
2d8b(5): mov 0x28(%rsp),%r9
2d90(3): cmp %r11,%rbx
2d93(5): mov %r10b,0x28(%rsp)
2d98(6): jnbe 0x5b8(%rip)
2d9e(5): mov 0x18(%rsp),%rdx
2da3(5): mov 0x48(%rsp),%rsi
2da8(3): mov %r9,%rdi
2dab(5): mov %r11,0x40(%rsp)
2db0(5): mov %r8b,0x38(%rsp)
2db5(5): mov %r9,0x30(%rsp)
2dba(5): call 0xffffe7e6(%rip)
2dbf(2): test %eax,%eax
2dc1(5): mov 0x30(%rsp),%r9
2dc6(6): movzx 0x38(%rsp),%r8d
2dcc(5): mov 0x40(%rsp),%r11
2dd1(6): jnz 0x57f(%rip)
2dd7(5): cmp $0x0,0xf(%rsp)
2ddc(6): movzx 0x28(%rsp),%r10d
2de2(6): jnz 0xf83(%rip)
2de8(8): nop 0x0(%rax,%rax,1)
2df0(4): movzx (%r9),%ebx
2df4(3): cmp $0x7e,%bl
2df7(6): jnbe 0x321(%rip)
2dfd(7): lea 0x2e28(%rip),%rcx
2e04(3): movzx %bl,%edx
2e07(4): movsxd 0x0(%rcx,%rdx,4),%rax
2e0b(3): add %rcx,%rax
2e0e(2): jmp %rax
2e10(3): xor %r10d,%r10d
2e13(4): cmp $0x1,%r11
2e17(3): setnz %al
2e1a(4): cmp $0xffffffff,%r11
2e1e(2): jnz 0xe(%rip)
2e20(5): mov 0x10(%rsp),%rax
2e25(4): cmp $0x0,0x1(%rax)
2e29(3): setnz %al
2e2c(5): cmp $0x2,0x8(%rsp)
2e31(3): setz %dl
2e34(2): test %al,%al
2e36(6): jz 0x252(%rip)
2e3c(3): xor %r12d,%r12d
2e3f(2): xor %eax,%eax
2e41(7): nop 0x0(%rax)
2e48(5): cmp $0x1,0xd(%rsp)
2e4d(6): jnz 0x115(%rip)
2e53(2): test %dl,%dl
2e55(6): jnz 0x10d(%rip)
2e5b(5): mov 0x20(%rsp),%rsi
2e60(3): test %rsi,%rsi
2e63(2): jz 0x16(%rip)
2e65(2): mov %ebx,%edx
2e67(3): shr $0x5,%dl
2e6a(3): movzx %dl,%edx
2e6d(3): mov 0x0(%rsi,%rdx,4),%edx
2e70(3): bt %ebx,%edx
2e73(6): jb 0x150(%rip)
2e79(3): test %r10b,%r10b
2e7c(6): jnz 0x147(%rip)
2e82(3): xor $0x1,%eax
2e85(4): add $0x1,%rbp
2e89(3): and %r8d,%eax
2e8c(2): test %al,%al
2e8e(2): jz 0x22(%rip)
2e90(3): cmp %r15,%r13
2e93(2): jbe 0x7(%rip)
2e95(5): mov $0x27,0x0(%r14,%r15,1)
2e9a(4): lea 0x1(%r15),%rax
2e9e(3): cmp %rax,%r13
2ea1(2): jbe 0x8(%rip)
2ea3(6): mov $0x27,0x1(%r14,%r15,1)
2ea9(4): add $0x2,%r15
2ead(3): xor %r8d,%r8d
2eb0(3): cmp %r13,%r15
2eb3(2): jnb 0x6(%rip)
2eb5(4): mov %bl,0x0(%r14,%r15,1)
2eb9(5): movzx 0xe(%rsp),%edi
2ebe(4): add $0x1,%r15
2ec2(5): mov $0x0,%eax
2ec7(3): test %r12b,%r12b
2eca(3): cmove %eax,%edi
2ecd(5): mov %dil,0xe(%rsp)
2ed2(5): jmp 0xfffffe36(%rip)
2ed7(9): nop 0x0(%rax,%rax,1)
2ee0(3): xor %r10d,%r10d
2ee3(4): mov 0x8(%rsp),%eax
2ee7(3): cmp $0x2,%eax
2eea(6): jz 0x5be(%rip)
2ef0(3): cmp $0x5,%eax
2ef3(6): jz 0x575(%rip)
2ef9(3): cmp $0x2,%eax
2efc(5): mov $0x3f,%ebx
2f01(3): setz %dl
2f04(3): xor %r12d,%r12d
2f07(2): xor %eax,%eax
2f09(5): jmp 0xffffff3f(%rip)
2f0e(2): nop 
2f10(3): xor %r10d,%r10d
2f13(5): cmp $0x2,0x8(%rsp)
2f18(6): jz 0x508(%rip)
2f1e(5): mov %r12b,0x7c(%rsp)
2f23(2): xor %edx,%edx
2f25(2): xor %eax,%eax
2f27(5): mov $0x27,%ebx
2f2c(5): jmp 0xffffff1c(%rip)
2f31(7): nop 0x0(%rax)
2f38(5): mov $0x9,%edx
2f3d(5): mov $0x74,%ebx
2f42(5): cmp $0x2,0x8(%rsp)
2f47(3): setz %al
2f4a(4): and 0xf(%rsp),%al
2f4e(6): jnz 0x150(%rip)
2f54(5): cmp $0x0,0xd(%rsp)
2f59(2): jnz 0x67(%rip)
2f5b(2): mov %edx,%ebx
2f5d(3): xor %r12d,%r12d
2f60(2): xor %eax,%eax
2f62(5): cmp $0x0,0xf(%rsp)
2f67(6): jnz 0xfffffef4(%rip)
2f6d(5): jmp 0xffffff0c(%rip)
2f72(6): nop 0x0(%rax,%rax,1)
2f78(5): mov $0x8,%edx
2f7d(5): mov $0x62,%ebx
2f82(2): jmp 0xffffffd2(%rip)
2f84(4): nop 0x0(%rax)
2f88(5): cmp $0x2,0x8(%rsp)
2f8d(6): jz 0x3d3(%rip)
2f93(5): cmp $0x0,0xd(%rsp)
2f98(6): jz 0x218(%rip)
2f9e(5): cmp $0x0,0xf(%rsp)
2fa3(6): jz 0x20d(%rip)
2fa9(6): cmp $0x0,0x18(%rsp)
2faf(6): jnz 0x3bc(%rip)
2fb5(5): mov $0x5c,%ebx
2fba(6): nop 0x0(%rax,%rax,1)
2fc0(3): xor %r12d,%r12d
2fc3(5): cmp $0x2,0x8(%rsp)
2fc8(3): setz %dl
2fcb(5): cmp $0x0,0xf(%rsp)
2fd0(2): mov %edx,%eax
2fd2(6): jnz 0x856(%rip)
2fd8(3): mov %r8d,%eax
2fdb(3): xor $0x1,%eax
2fde(2): and %dl,%al
2fe0(2): jz 0x31(%rip)
2fe2(3): cmp %r15,%r13
2fe5(2): jbe 0x7(%rip)
2fe7(5): mov $0x27,0x0(%r14,%r15,1)
2fec(4): lea 0x1(%r15),%rdx
2ff0(3): cmp %rdx,%r13
2ff3(2): jbe 0x8(%rip)
2ff5(6): mov $0x24,0x1(%r14,%r15,1)
2ffb(4): lea 0x2(%r15),%rdx
2fff(3): cmp %rdx,%r13
3002(2): jbe 0x8(%rip)
3004(6): mov $0x27,0x2(%r14,%r15,1)
300a(4): add $0x3,%r15
300e(3): mov %eax,%r8d
3011(3): cmp %r15,%r13
3014(2): jbe 0x7(%rip)
3016(5): mov $0x5c,0x0(%r14,%r15,1)
301b(4): add $0x1,%r15
301f(4): add $0x1,%rbp
3023(5): jmp 0xfffffe8d(%rip)
3028(8): nop 0x0(%rax,%rax,1)
3030(5): cmp $0x0,0xd(%rsp)
3035(6): jnz 0x1ce(%rip)
303b(2): xor %edx,%edx
303d(5): test $0x1,0x78(%rsp)
3042(6): jz 0xffffff19(%rip)
3048(4): add $0x1,%rbp
304c(5): jmp 0xfffffcbc(%rip)
3051(7): nop 0x0(%rax)
3058(5): cmp $0x2,0x8(%rsp)
305d(3): setz %dl
3060(2): xor %eax,%eax
3062(5): jmp 0xfffffde6(%rip)
3067(9): nop 0x0(%rax,%rax,1)
3070(5): mov $0x7,%edx
3075(5): mov $0x61,%ebx
307a(5): jmp 0xfffffeda(%rip)
307f(1): nop 
3080(5): cmp $0x2,0x8(%rsp)
3085(3): setz %dl
3088(3): test %rbp,%rbp
308b(6): jnz 0xfffffdb1(%rip)
3091(5): movzx 0xf(%rsp),%eax
3096(2): and %dl,%al
3098(6): jz 0xfffffdb0(%rip)
309e(3): mov %r11,%rbp
30a1(8): mov $0x2,0x8(%rsp)
30a9(5): jmp 0x700(%rip)
30ae(2): nop 
30b0(5): cmp $0x2,0x8(%rsp)
30b5(3): setz %dl
30b8(3): xor %r12d,%r12d
30bb(2): jmp 0xffffffd6(%rip)
30bd(3): nop (%rax)
30c0(5): cmp $0x2,0x8(%rsp)
30c5(5): mov $0x20,%ebx
30ca(3): setz %dl
30cd(2): jmp 0xffffffc4(%rip)
30cf(1): nop 
30d0(5): mov $0xd,%edx
30d5(5): mov $0x72,%ebx
30da(5): jmp 0xfffffe68(%rip)
30df(1): nop 
30e0(5): mov $0xc,%edx
30e5(5): mov $0x66,%ebx
30ea(5): jmp 0xfffffe6a(%rip)
30ef(1): nop 
30f0(5): mov $0xb,%edx
30f5(5): mov $0x76,%ebx
30fa(5): jmp 0xfffffe5a(%rip)
30ff(1): nop 
3100(5): mov $0xa,%edx
3105(5): mov $0x6e,%ebx
310a(5): jmp 0xfffffe38(%rip)
310f(1): nop 
3110(3): xor %r10d,%r10d
3113(5): nop 0x0(%rax,%rax,1)
3118(6): cmp $0x1,0x58(%rsp)
311e(6): jnz 0x3aa(%rip)
3124(5): mov %r11,0x38(%rsp)
3129(5): mov %r8b,0x30(%rsp)
312e(5): mov %r10b,0x28(%rsp)
3133(5): call 0xffffe5bd(%rip)
3138(3): mov (%rax),%rcx
313b(3): movzx %bl,%edx
313e(6): movzx 0x28(%rsp),%r10d
3144(6): movzx 0x30(%rsp),%r8d
314a(5): mov 0x38(%rsp),%r11
314f(5): mov $0x1,%edi
3154(4): movzx 0x0(%rcx,%rdx,2),%eax
3158(4): and $0x4000,%ax
315c(4): setnz %r12b
3160(3): setz %al
3163(4): and 0xd(%rsp),%al
3167(2): test %al,%al
3169(6): jnz 0x998(%rip)
316f(5): cmp $0x2,0x8(%rsp)
3174(3): setz %dl
3177(5): jmp 0xfffffcd1(%rip)
317c(4): nop 0x0(%rax)
3180(4): movzx (%r9),%ebx
3184(3): cmp $0x7e,%bl
3187(2): jnbe 0xffffff89(%rip)
3189(7): lea 0x2c98(%rip),%rcx
3190(3): movzx %bl,%edx
3193(4): movsxd 0x0(%rcx,%rdx,4),%rax
3197(3): add %rcx,%rax
319a(2): jmp %rax
319c(4): nop 0x0(%rax)
31a0(3): xor %r10d,%r10d
31a3(5): cmp $0x0,0xd(%rsp)
31a8(6): jnz 0xfffffdf6(%rip)
31ae(2): nop 
31b0(5): mov $0x5c,%edx
31b5(5): mov $0x5c,%ebx
31ba(5): jmp 0xfffffd9a(%rip)
31bf(1): nop 
31c0(5): mov $0xc,%edx
31c5(3): xor %r10d,%r10d
31c8(5): mov $0x66,%ebx
31cd(5): jmp 0xfffffd87(%rip)
31d2(6): nop 0x0(%rax,%rax,1)
31d8(5): mov $0xa,%edx
31dd(3): xor %r10d,%r10d
31e0(5): mov $0x6e,%ebx
31e5(5): jmp 0xfffffd5d(%rip)
31ea(6): nop 0x0(%rax,%rax,1)
31f0(5): mov $0x61,%ebx
31f5(5): jmp 0xfffffdcb(%rip)
31fa(6): nop 0x0(%rax,%rax,1)
3200(3): xor %r10d,%r10d
3203(5): cmp $0x2,0x8(%rsp)
3208(3): setz %dl
320b(5): cmp $0x0,0xf(%rsp)
3210(6): jnz 0xb9a(%rip)
3216(3): mov %r8d,%eax
3219(3): mov %r15,%rcx
321c(3): xor $0x1,%eax
321f(2): and %dl,%al
3221(2): jz 0x2f(%rip)
3223(3): cmp %r15,%r13
3226(2): jbe 0x7(%rip)
3228(5): mov $0x27,0x0(%r14,%r15,1)
322d(4): lea 0x1(%r15),%rcx
3231(3): cmp %rcx,%r13
3234(2): jbe 0x8(%rip)
3236(6): mov $0x24,0x1(%r14,%r15,1)
323c(4): lea 0x2(%r15),%rcx
3240(3): cmp %rcx,%r13
3243(6): jnbe 0x636(%rip)
3249(4): lea 0x3(%r15),%rcx
324d(3): mov %eax,%r8d
3250(3): cmp %rcx,%r13
3253(2): jbe 0x7(%rip)
3255(5): mov $0x5c,0x0(%r14,%rcx,1)
325a(5): cmp $0x2,0x8(%rsp)
325f(4): lea 0x1(%rcx),%r15
3263(6): jz 0x606(%rip)
3269(4): lea 0x1(%rbp),%rax
326d(3): cmp %r11,%rax
3270(2): jnb 0x1b(%rip)
3272(5): mov 0x10(%rsp),%rax
3277(5): movzx 0x1(%rax,%rbp,1),%eax
327c(4): mov %al,0x28(%rsp)
3280(3): sub $0x30,%eax
3283(2): cmp $0x9,%al
3285(6): jbe 0x834(%rip)
328b(3): mov %r12d,%eax
328e(5): mov $0x30,%ebx
3293(3): xor %r12d,%r12d
3296(5): jmp 0xfffffbb2(%rip)
329b(5): nop 0x0(%rax,%rax,1)
32a0(5): cmp $0x2,0x8(%rsp)
32a5(3): mov %r10d,%r12d
32a8(3): setz %dl
32ab(3): xor %r10d,%r10d
32ae(2): xor %eax,%eax
32b0(5): jmp 0xfffffb98(%rip)
32b5(3): nop (%rax)
32b8(5): cmp $0x2,0x8(%rsp)
32bd(3): setz %dl
32c0(3): xor %r10d,%r10d
32c3(5): jmp 0xfffffdc5(%rip)
32c8(8): nop 0x0(%rax,%rax,1)
32d0(5): cmp $0x2,0x8(%rsp)
32d5(3): setz %dl
32d8(3): xor %r10d,%r10d
32db(3): xor %r12d,%r12d
32de(5): jmp 0xfffffdb3(%rip)
32e3(5): nop 0x0(%rax,%rax,1)
32e8(5): cmp $0x2,0x8(%rsp)
32ed(3): mov %r10d,%r12d
32f0(5): mov $0x20,%ebx
32f5(3): setz %dl
32f8(3): xor %r10d,%r10d
32fb(5): jmp 0xfffffd96(%rip)
3300(5): mov $0xd,%edx
3305(3): xor %r10d,%r10d
3308(5): mov $0x72,%ebx
330d(5): jmp 0xfffffc35(%rip)
3312(6): nop 0x0(%rax,%rax,1)
3318(5): mov $0x76,%ebx
331d(5): jmp 0xfffffca3(%rip)
3322(6): nop 0x0(%rax,%rax,1)
3328(5): mov $0x9,%edx
332d(3): xor %r10d,%r10d
3330(5): mov $0x74,%ebx
3335(5): jmp 0xfffffc0d(%rip)
333a(6): nop 0x0(%rax,%rax,1)
3340(5): mov $0x62,%ebx
3345(5): jmp 0xfffffc7b(%rip)
334a(6): nop 0x0(%rax,%rax,1)
3350(3): xor %r10d,%r10d
3353(5): jmp 0xfffffa9d(%rip)
3358(8): nop 0x0(%rax,%rax,1)
3360(5): cmp $0x0,0xf(%rsp)
3365(6): jnz 0x96b(%rip)
336b(4): add $0x1,%rbp
336f(3): mov %r8d,%eax
3372(3): xor %r12d,%r12d
3375(5): mov $0x5c,%ebx
337a(5): jmp 0xfffffb12(%rip)
337f(1): nop 
3380(5): cmp $0x2,0x8(%rsp)
3385(5): movzx 0xf(%rsp),%ebx
338a(3): mov %r8d,%r12d
338d(3): mov %r11,%rbp
3390(3): setz %dl
3393(2): mov %ebx,%eax
3395(3): test %r15,%r15
3398(3): setz %cl
339b(2): and %edx,%eax
339d(2): and %cl,%al
339f(6): jnz 0xa67(%rip)
33a5(2): mov %ebx,%eax
33a7(3): xor $0x1,%eax
33aa(2): and %al,%dl
33ac(6): jz 0x970(%rip)
33b2(5): cmp $0x0,0x7c(%rsp)
33b7(6): jz 0x963(%rip)
33bd(5): cmp $0x0,0xe(%rsp)
33c2(6): jnz 0x9fb(%rip)
33c8(3): test %r13,%r13
33cb(3): setz %al
33ce(6): cmp $0x0,0x50(%rsp)
33d4(3): setnz %dl
33d7(2): and %dl,%al
33d9(6): jz 0xa23(%rip)
33df(5): mov 0x50(%rsp),%r13
33e4(7): lea 0x27c2(%rip),%rbx
33eb(4): mov $0x27,(%r14)
33ef(8): mov $0x2,0x8(%rsp)
33f7(6): mov $0x1,%r15d
33fd(9): mov $0x1,0x18(%rsp)
3406(5): mov $0x0,0xf(%rsp)
340b(5): mov %rbx,0x48(%rsp)
3410(4): mov %al,0x7c(%rsp)
3414(5): jmp 0xfffff8df(%rip)
3419(7): nop 0x0(%rax)
3420(5): cmp $0x0,0xf(%rsp)
3425(6): jnz 0x8ab(%rip)
342b(3): test %r13,%r13
342e(6): jz 0x402(%rip)
3434(2): xor %edx,%edx
3436(6): cmp $0x0,0x50(%rsp)
343c(6): jnz 0x3f4(%rip)
3442(5): mov %r13,0x50(%rsp)
3447(4): add $0x3,%r15
344b(2): xor %eax,%eax
344d(5): mov %r12b,0x7c(%rsp)
3452(3): xor %r8d,%r8d
3455(3): mov %rdx,%r13
3458(5): mov $0x27,%ebx
345d(5): jmp 0xfffffa1c(%rip)
3462(6): nop 0x0(%rax,%rax,1)
3468(5): test $0x4,0x78(%rsp)
346d(2): jz 0x23(%rip)
346f(4): lea 0x2(%rbp),%rcx
3473(3): cmp %r11,%rcx
3476(2): jnb 0x1a(%rip)
3478(5): mov 0x10(%rsp),%rax
347d(5): cmp $0x3f,0x1(%rax,%rbp,1)
3482(6): jz 0x790(%rip)
3488(8): nop 0x0(%rax,%rax,1)
3490(2): xor %edx,%edx
3492(3): xor %r12d,%r12d
3495(2): xor %eax,%eax
3497(5): mov $0x3f,%ebx
349c(5): jmp 0xfffff9ac(%rip)
34a1(7): nop 0x0(%rax)
34a8(5): cmp $0x0,0xf(%rsp)
34ad(6): jnz 0x823(%rip)
34b3(3): xor %r12d,%r12d
34b6(2): xor %eax,%eax
34b8(5): mov $0x3f,%ebx
34bd(5): jmp 0xfffff9bc(%rip)
34c2(6): nop 0x0(%rax,%rax,1)
34c8(8): lea 0xa0(%rsp),%rax
34d0(4): cmp $0xffffffff,%r11
34d4(c): mov $0x0,0xa0(%rsp)
34e0(5): mov %rax,0x28(%rsp)
34e5(2): jnz 0x2f(%rip)
34e7(5): mov 0x10(%rsp),%rdi
34ec(5): mov %r8b,0x40(%rsp)
34f1(5): mov %r10b,0x38(%rsp)
34f6(5): mov %r9,0x30(%rsp)
34fb(5): call 0xffffdfe5(%rip)
3500(6): movzx 0x40(%rsp),%r8d
3506(6): movzx 0x38(%rsp),%r10d
350c(3): mov %rax,%r11
350f(5): mov 0x30(%rsp),%r9
3514(8): lea 0x9c(%rsp),%rax
351c(2): xor %ecx,%ecx
351e(4): mov %bl,0x7e(%rsp)
3522(5): mov %r8b,0x7d(%rsp)
3527(3): mov %rcx,%rbx
352a(8): mov %r9,0x88(%rsp)
3532(5): mov %rax,0x38(%rsp)
3537(5): mov %r10b,0x7f(%rsp)
353c(8): mov %r15,0x80(%rsp)
3544(5): mov %r14,0x40(%rsp)
3549(5): mov %r13,0x70(%rsp)
354e(5): mov %r11,0x30(%rsp)
3553(5): mov 0x10(%rsp),%rax
3558(5): lea 0x0(%rbp,%rbx,1),%r14
355d(5): mov 0x30(%rsp),%rdx
3562(5): mov 0x28(%rsp),%rcx
3567(5): mov 0x38(%rsp),%rdi
356c(4): lea 0x0(%rax,%r14,1),%r13
3570(3): sub %r14,%rdx
3573(3): mov %r13,%rsi
3576(5): call 0x1c3a(%rip)
357b(3): test %rax,%rax
357e(3): mov %rax,%r15
3581(2): jz 0x50(%rip)
3583(4): cmp $0xffffffff,%rax
3587(6): jz 0x61e(%rip)
358d(4): cmp $0xfffffffe,%rax
3591(6): jz 0x5a0(%rip)
3597(5): cmp $0x2,0x8(%rsp)
359c(3): setz %al
359f(4): and 0xf(%rsp),%al
35a3(6): jnz 0x19d(%rip)
35a9(7): mov 0x9c(%rsp),%edi
35b0(5): call 0xffffe130(%rip)
35b5(5): mov 0x28(%rsp),%rdi
35ba(2): test %eax,%eax
35bc(5): mov $0x0,%eax
35c1(4): cmove %eax,%r12d
35c5(3): add %r15,%rbx
35c8(5): call 0xffffe108(%rip)
35cd(2): test %eax,%eax
35cf(2): jz 0xffffff84(%rip)
35d1(3): mov %r12d,%edx
35d4(3): mov %rbx,%rdi
35d7(6): movzx 0x7d(%rsp),%r8d
35dd(3): xor $0x1,%edx
35e0(5): movzx 0x7e(%rsp),%ebx
35e5(6): movzx 0x7f(%rsp),%r10d
35eb(4): and 0xd(%rsp),%dl
35ef(8): mov 0x80(%rsp),%r15
35f7(5): mov 0x40(%rsp),%r14
35fc(5): mov 0x70(%rsp),%r13
3601(5): mov 0x30(%rsp),%r11
3606(4): cmp $0x1,%rdi
360a(6): jbe 0x601(%rip)
3610(3): mov %rdi,%rcx
3613(2): xor %esi,%esi
3615(6): movzx 0xf(%rsp),%r9d
361b(3): add %rbp,%rcx
361e(5): mov 0x10(%rsp),%rdi
3623(5): jmp 0xbb(%rip)
3628(8): nop 0x0(%rax,%rax,1)
3630(5): cmp $0x2,0x8(%rsp)
3635(3): setz %al
3638(3): test %r9b,%r9b
363b(6): jnz 0x4b5(%rip)
3641(3): mov %r8d,%esi
3644(3): xor $0x1,%esi
3647(3): and %sil,%al
364a(2): jz 0x31(%rip)
364c(3): cmp %r15,%r13
364f(2): jbe 0x7(%rip)
3651(5): mov $0x27,0x0(%r14,%r15,1)
3656(4): lea 0x1(%r15),%rsi
365a(3): cmp %rsi,%r13
365d(2): jbe 0x8(%rip)
365f(6): mov $0x24,0x1(%r14,%r15,1)
3665(4): lea 0x2(%r15),%rsi
3669(3): cmp %rsi,%r13
366c(2): jbe 0x8(%rip)
366e(6): mov $0x27,0x2(%r14,%r15,1)
3674(4): add $0x3,%r15
3678(3): mov %eax,%r8d
367b(3): cmp %r15,%r13
367e(2): jbe 0x7(%rip)
3680(5): mov $0x5c,0x0(%r14,%r15,1)
3685(4): lea 0x1(%r15),%rax
3689(3): cmp %rax,%r13
368c(2): jbe 0xf(%rip)
368e(2): mov %ebx,%eax
3690(3): shr $0x6,%al
3693(3): add $0x30,%eax
3696(5): mov %al,0x1(%r14,%r15,1)
369b(4): lea 0x2(%r15),%rax
369f(3): cmp %rax,%r13
36a2(2): jbe 0x12(%rip)
36a4(2): mov %ebx,%eax
36a6(3): shr $0x3,%al
36a9(3): and $0x7,%eax
36ac(3): add $0x30,%eax
36af(5): mov %al,0x2(%r14,%r15,1)
36b4(3): and $0x7,%ebx
36b7(4): add $0x1,%rbp
36bb(4): add $0x3,%r15
36bf(3): add $0x30,%ebx
36c2(3): cmp %rcx,%rbp
36c5(6): jnb 0xfffff7eb(%rip)
36cb(2): mov %edx,%esi
36cd(3): cmp %r15,%r13
36d0(2): jbe 0x6(%rip)
36d2(4): mov %bl,0x0(%r14,%r15,1)
36d6(4): movzx 0x0(%rdi,%rbp,1),%ebx
36da(4): add $0x1,%r15
36de(2): test %dl,%dl
36e0(6): jnz 0xffffff50(%rip)
36e6(2): mov %esi,%eax
36e8(3): xor $0x1,%eax
36eb(3): and %r8d,%eax
36ee(3): test %r10b,%r10b
36f1(2): jz 0x10(%rip)
36f3(3): cmp %r15,%r13
36f6(2): jbe 0x7(%rip)
36f8(5): mov $0x5c,0x0(%r14,%r15,1)
36fd(4): add $0x1,%r15
3701(4): add $0x1,%rbp
3705(3): cmp %rcx,%rbp
3708(6): jnb 0xfffff784(%rip)
370e(2): test %al,%al
3710(6): jz 0x3fe(%rip)
3716(3): cmp %r15,%r13
3719(2): jbe 0x7(%rip)
371b(5): mov $0x27,0x0(%r14,%r15,1)
3720(4): lea 0x1(%r15),%rax
3724(3): cmp %rax,%r13
3727(2): jbe 0x8(%rip)
3729(6): mov $0x27,0x1(%r14,%r15,1)
372f(4): add $0x2,%r15
3733(3): xor %r10d,%r10d
3736(3): xor %r8d,%r8d
3739(2): jmp 0xffffff94(%rip)
373b(5): nop 0x0(%rax,%rax,1)
3740(4): cmp $0x1,%r15
3744(6): jz 0xfffffe65(%rip)
374a(5): mov 0x10(%rsp),%rdi
374f(4): lea 0x0(%rdi,%r15,1),%rcx
3753(5): lea 0x1(%rdi,%r14,1),%rdx
3758(4): lea 0x0(%rcx,%r14,1),%r8
375c(2): jmp 0x11(%rip)
375e(2): nop 
3760(4): add $0x1,%rdx
3764(3): cmp %rdx,%r8
3767(6): jz 0xfffffe42(%rip)
376d(3): movzx (%rdx),%ecx
3770(3): sub $0x5b,%ecx
3773(3): cmp $0x21,%cl
3776(2): jnbe 0xffffffea(%rip)
3778(5): mov $0x1,%esi
377d(3): shl/sal %cl,%rsi
3780(3): mov %rsi,%rcx
3783(a): mov $0x8589934635,%rsi
378d(3): test %rsi,%rcx
3790(2): jz 0xffffffd0(%rip)
3792(5): mov 0x40(%rsp),%r14
3797(5): mov 0x70(%rsp),%r13
379c(5): mov 0x30(%rsp),%rbp
37a1(8): mov $0x2,0x8(%rsp)
37a9(5): cmp $0x0,0xd(%rsp)
37ae(2): jz 0x12(%rip)
37b0(2): test %al,%al
37b2(5): mov $0x4,%eax
37b7(5): cmove 0x8(%rsp),%eax
37bc(4): mov %eax,0x8(%rsp)
37c0(4): sub $0x8,%rsp
37c4(3): mov %rbp,%rcx
37c7(3): mov %r13,%rsi
37ca(4): push 0x68(%rsp)
37ce(4): push 0x78(%rsp)
37d2(3): mov %r14,%rdi
37d5(2): push $0x0
37d7(8): mov 0x98(%rsp),%r9d
37df(5): mov 0x28(%rsp),%r8d
37e4(5): mov 0x30(%rsp),%rdx
37e9(4): and $0xfd,%r9d
37ed(5): call 0xfffff433(%rip)
37f2(4): add $0x20,%rsp
37f6(3): mov %rax,%r15
37f9(8): mov 0xa8(%rsp),%rbx
3801(9): xor $0x28,%rbx
380a(3): mov %r15,%rax
380d(6): jnz 0x606(%rip)
3813(7): add $0xb8,%rsp
381a(1): pop %rbx
381b(1): pop %rbp
381c(2): pop %r12
381e(2): pop %r13
3820(2): pop %r14
3822(2): pop %r15
3824(1): ret near (%rsp)
3825(3): nop (%rax)
3828(3): mov %r11,%rbp
382b(5): jmp 0xffffff7e(%rip)
3830(3): cmp %r15,%r13
3833(2): jbe 0x7(%rip)
3835(5): mov $0x27,0x0(%r14,%r15,1)
383a(4): lea 0x1(%r15),%rax
383e(3): cmp %rax,%r13
3841(2): jbe 0x8(%rip)
3843(6): mov $0x5c,0x1(%r14,%r15,1)
3849(4): lea 0x2(%r15),%rax
384d(3): cmp %rax,%r13
3850(6): jbe 0x5f2(%rip)
3856(3): mov %r13,%rdx
3859(6): mov $0x27,0x2(%r14,%r15,1)
385f(5): mov 0x50(%rsp),%r13
3864(5): jmp 0xfffffbde(%rip)
3869(3): mov %r12d,%eax
386c(5): mov $0x30,%ebx
3871(3): xor %r12d,%r12d
3874(5): jmp 0xfffff605(%rip)
3879(6): mov $0x27,0x2(%r14,%r15,1)
387f(5): jmp 0xfffff9ca(%rip)
3884(2): test %ebx,%ebx
3886(6): jnz 0xfffff42d(%rip)
388c(5): mov $0x1,0xd(%rsp)
3891(3): test %r13,%r13
3894(6): jnz 0x596(%rip)
389a(7): lea 0x230c(%rip),%rax
38a1(9): mov $0x0,0x50(%rsp)
38aa(5): mov $0x1,0xe(%rsp)
38af(5): mov $0x0,0x7c(%rsp)
38b4(3): xor %r12d,%r12d
38b7(5): mov $0x0,0xf(%rsp)
38bc(9): mov $0x1,0x18(%rsp)
38c5(5): mov %rax,0x48(%rsp)
38ca(6): mov $0x1,%r15d
38d0(8): mov $0x2,0x8(%rsp)
38d8(5): jmp 0xfffff41b(%rip)
38dd(3): nop (%rax)
38e0(2): test %ebx,%ebx
38e2(6): jnz 0x3fb(%rip)
38e8(3): test %r13,%r13
38eb(6): jz 0x22b(%rip)
38f1(4): mov $0x22,(%r14)
38f5(5): mov $0x1,0xe(%rsp)
38fa(3): xor %r12d,%r12d
38fd(5): mov $0x0,0x7c(%rsp)
3902(9): mov $0x0,0x50(%rsp)
390b(7): lea 0x2299(%rip),%rax
3912(5): mov $0x0,0xf(%rsp)
3917(5): mov $0x1,0xd(%rsp)
391c(9): mov $0x1,0x18(%rsp)
3925(6): mov $0x1,%r15d
392b(5): mov %rax,0x48(%rsp)
3930(5): jmp 0xfffff3c3(%rip)
3935(7): lea 0x226f(%rip),%rax
393c(5): mov $0x1,0xe(%rsp)
3941(5): mov $0x0,0x7c(%rsp)
3946(3): xor %r12d,%r12d
3949(9): mov $0x0,0x50(%rsp)
3952(5): mov $0x1,0xf(%rsp)
3957(5): mov $0x1,0xd(%rsp)
395c(9): mov $0x1,0x18(%rsp)
3965(3): xor %r15d,%r15d
3968(5): mov %rax,0x48(%rsp)
396d(8): mov $0x5,0x8(%rsp)
3975(5): jmp 0xfffff37e(%rip)
397a(5): mov $0x1,0xe(%rsp)
397f(5): mov $0x0,0x7c(%rsp)
3984(3): xor %r12d,%r12d
3987(9): mov $0x0,0x50(%rsp)
3990(5): mov $0x0,0xf(%rsp)
3995(3): xor %r15d,%r15d
3998(5): mov $0x1,0xd(%rsp)
399d(9): mov $0x0,0x18(%rsp)
39a6(9): mov $0x0,0x48(%rsp)
39af(5): jmp 0xfffff344(%rip)
39b4(5): cmp $0xa,0x8(%rsp)
39b9(2): jz 0x58(%rip)
39bb(7): lea 0x21ed(%rip),%rsi
39c2(2): xor %edi,%edi
39c4(5): mov $0x5,%edx
39c9(5): call 0xffffdaf7(%rip)
39ce(3): mov %rax,%rcx
39d1(5): mov %rax,0x68(%rsp)
39d6(7): lea 0x21d2(%rip),%rax
39dd(3): cmp %rax,%rcx
39e0(6): jz 0x39e(%rip)
39e6(7): lea 0x21c0(%rip),%rsi
39ed(2): xor %edi,%edi
39ef(5): mov $0x5,%edx
39f4(5): call 0xffffdacc(%rip)
39f9(3): mov %rax,%rcx
39fc(5): mov %rax,0x60(%rsp)
3a01(7): lea 0x21a5(%rip),%rax
3a08(3): cmp %rax,%rcx
3a0b(6): jz 0x389(%rip)
3a11(3): xor %r15d,%r15d
3a14(2): test %ebx,%ebx
3a16(6): jz 0x1c7(%rip)
3a1c(2): test %ebx,%ebx
3a1e(5): mov 0x60(%rsp),%rbx
3a23(5): setnz 0xf(%rsp)
3a28(3): xor %r12d,%r12d
3a2b(3): mov %rbx,%rdi
3a2e(5): call 0xffffdab2(%rip)
3a33(5): mov %rbx,0x48(%rsp)
3a38(5): mov %rax,0x18(%rsp)
3a3d(5): mov $0x1,0xe(%rsp)
3a42(5): mov $0x0,0x7c(%rsp)
3a47(9): mov $0x0,0x50(%rsp)
3a50(5): mov $0x1,0xd(%rsp)
3a55(5): jmp 0xfffff29e(%rip)
3a5a(5): mov $0x1,0xe(%rsp)
3a5f(5): mov $0x0,0x7c(%rsp)
3a64(3): xor %r12d,%r12d
3a67(9): mov $0x0,0x50(%rsp)
3a70(5): mov $0x0,0xf(%rsp)
3a75(3): xor %r15d,%r15d
3a78(5): mov $0x0,0xd(%rsp)
3a7d(9): mov $0x0,0x18(%rsp)
3a86(9): mov $0x0,0x48(%rsp)
3a8f(5): jmp 0xfffff264(%rip)
3a94(5): mov $0x1,0xe(%rsp)
3a99(5): mov $0x0,0x7c(%rsp)
3a9e(3): xor %r12d,%r12d
3aa1(9): mov $0x0,0x50(%rsp)
3aaa(5): mov $0x1,0xf(%rsp)
3aaf(5): mov $0x1,0xd(%rsp)
3ab4(5): jmp 0xfffff21f(%rip)
3ab9(3): cmp %r15,%r13
3abc(2): jbe 0x7(%rip)
3abe(5): mov $0x30,0x0(%r14,%r15,1)
3ac3(4): lea 0x2(%rcx),%rax
3ac7(3): cmp %rax,%r13
3aca(2): jbe 0x8(%rip)
3acc(6): mov $0x30,0x2(%r14,%rcx,1)
3ad2(3): mov %r12d,%eax
3ad5(4): lea 0x3(%rcx),%r15
3ad9(3): xor %r12d,%r12d
3adc(5): mov $0x30,%ebx
3ae1(5): jmp 0xfffff367(%rip)
3ae6(a): nop 0x0(%rax,%rax,1)
3af0(5): movzx 0xf(%rsp),%ebx
3af5(3): mov %r11,%rbp
3af8(4): mov %bl,0xd(%rsp)
3afc(5): jmp 0xfffffcad(%rip)
3b01(5): movzx 0xd(%rsp),%edx
3b06(3): xor %r12d,%r12d
3b09(5): jmp 0xfffffb07(%rip)
3b0e(3): xor %r10d,%r10d
3b11(5): jmp 0xfffffbbc(%rip)
3b16(9): mov $0x0,0x50(%rsp)
3b1f(5): mov $0x1,0xe(%rsp)
3b24(3): xor %r12d,%r12d
3b27(5): mov $0x0,0x7c(%rsp)
3b2c(5): jmp 0xfffffddf(%rip)
3b31(5): mov 0x30(%rsp),%r11
3b36(3): mov %r14,%rsi
3b39(3): mov %r13,%rcx
3b3c(3): mov %rbx,%rax
3b3f(3): mov %rbx,%rdi
3b42(6): movzx 0x7d(%rsp),%r8d
3b48(5): movzx 0x7e(%rsp),%ebx
3b4d(8): mov 0x88(%rsp),%r9
3b55(3): cmp %r11,%rsi
3b58(6): movzx 0x7f(%rsp),%r10d
3b5e(8): mov 0x80(%rsp),%r15
3b66(5): mov 0x40(%rsp),%r14
3b6b(5): mov 0x70(%rsp),%r13
3b70(2): jnb 0x28(%rip)
3b72(3): cmp $0x0,(%rcx)
3b75(2): jnz 0x12(%rip)
3b77(2): jmp 0x21(%rip)
3b79(7): nop 0x0(%rax)
3b80(5): cmp $0x0,0x0(%r9,%rax,1)
3b85(2): jz 0x10(%rip)
3b87(4): add $0x1,%rax
3b8b(5): lea 0x0(%rbp,%rax,1),%rdx
3b90(3): cmp %rdx,%r11
3b93(2): jnbe 0xffffffed(%rip)
3b95(3): mov %rax,%rdi
3b98(5): movzx 0xd(%rsp),%edx
3b9d(3): xor %r12d,%r12d
3ba0(5): jmp 0xfffffa66(%rip)
3ba5(3): mov %rbx,%rdi
3ba8(6): movzx 0x7d(%rsp),%r8d
3bae(5): movzx 0x7e(%rsp),%ebx
3bb3(6): movzx 0x7f(%rsp),%r10d
3bb9(8): mov 0x80(%rsp),%r15
3bc1(3): xor %r12d,%r12d
3bc4(5): mov 0x40(%rsp),%r14
3bc9(5): mov 0x70(%rsp),%r13
3bce(5): mov 0x30(%rsp),%r11
3bd3(5): movzx 0xd(%rsp),%edx
3bd8(5): jmp 0xfffffa2e(%rip)
3bdd(5): mov 0x68(%rsp),%rdx
3be2(3): movzx (%rdx),%eax
3be5(2): test %al,%al
3be7(6): jz 0xfffffe35(%rip)
3bed(3): nop (%rax)
3bf0(3): cmp %r15,%r13
3bf3(2): jbe 0x6(%rip)
3bf5(4): mov %al,0x0(%r14,%r15,1)
3bf9(4): add $0x1,%r15
3bfd(5): movzx 0x0(%rdx,%r15,1),%eax
3c02(2): test %al,%al
3c04(2): jnz 0xffffffec(%rip)
3c06(5): jmp 0xfffffe16(%rip)
3c0b(2): mov %edx,%eax
3c0d(5): jmp 0xfffff55a(%rip)
3c12(4): movzx 0x0(%rax,%rcx,1),%ebx
3c16(3): cmp $0x3e,%bl
3c19(6): jnbe 0xfffff877(%rip)
3c1f(a): mov $0x8070630310989004800,%rax
3c29(4): bt %rbx,%rax
3c2d(6): jnb 0xfffff863(%rip)
3c33(5): cmp $0x0,0xf(%rsp)
3c38(6): jnz 0x1ea(%rip)
3c3e(3): cmp %r15,%r13
3c41(2): jbe 0x7(%rip)
3c43(5): mov $0x3f,0x0(%r14,%r15,1)
3c48(4): lea 0x1(%r15),%rax
3c4c(3): cmp %rax,%r13
3c4f(2): jbe 0x8(%rip)
3c51(6): mov $0x22,0x1(%r14,%r15,1)
3c57(4): lea 0x2(%r15),%rax
3c5b(3): cmp %rax,%r13
3c5e(2): jbe 0x8(%rip)
3c60(6): mov $0x22,0x2(%r14,%r15,1)
3c66(4): lea 0x3(%r15),%rax
3c6a(3): cmp %rax,%r13
3c6d(2): jbe 0x8(%rip)
3c6f(6): mov $0x3f,0x3(%r14,%r15,1)
3c75(4): add $0x4,%r15
3c79(2): xor %edx,%edx
3c7b(3): xor %r12d,%r12d
3c7e(2): xor %eax,%eax
3c80(3): mov %rcx,%rbp
3c83(5): jmp 0xfffff1c5(%rip)
3c88(2): test %ebx,%ebx
3c8a(6): jz 0x18e(%rip)
3c90(7): lea 0x1f16(%rip),%rax
3c97(5): mov $0x1,0xe(%rsp)
3c9c(5): mov $0x0,0x7c(%rsp)
3ca1(3): xor %r12d,%r12d
3ca4(9): mov $0x0,0x50(%rsp)
3cad(5): mov $0x1,0xf(%rsp)
3cb2(5): mov $0x0,0xd(%rsp)
3cb7(9): mov $0x1,0x18(%rsp)
3cc0(3): xor %r15d,%r15d
3cc3(5): mov %rax,0x48(%rsp)
3cc8(5): jmp 0xfffff02b(%rip)
3ccd(3): nop (%rax)
3cd0(3): mov %r11,%rbp
3cd3(5): movzx 0xf(%rsp),%eax
3cd8(5): jmp 0xfffffad1(%rip)
3cdd(7): lea 0x1ec7(%rip),%rax
3ce4(5): mov $0x1,0xe(%rsp)
3ce9(5): mov $0x0,0x7c(%rsp)
3cee(3): xor %r12d,%r12d
3cf1(9): mov $0x0,0x50(%rsp)
3cfa(5): mov $0x1,0xf(%rsp)
3cff(5): mov $0x1,0xd(%rsp)
3d04(9): mov $0x1,0x18(%rsp)
3d0d(3): xor %r15d,%r15d
3d10(5): mov %rax,0x48(%rsp)
3d15(5): jmp 0xffffefde(%rip)
3d1a(2): mov %edx,%eax
3d1c(5): mov 0x48(%rsp),%rbx
3d21(3): test %rbx,%rbx
3d24(2): jz 0x2e(%rip)
3d26(2): test %al,%al
3d28(2): jz 0x2a(%rip)
3d2a(3): movzx (%rbx),%ecx
3d2d(3): mov %rbx,%rax
3d30(2): test %cl,%cl
3d32(2): jz 0x20(%rip)
3d34(3): mov %r15,%rdx
3d37(3): sub %r15,%rax
3d3a(3): cmp %rdx,%r13
3d3d(2): jbe 0x6(%rip)
3d3f(4): mov %cl,0x0(%r14,%rdx,1)
3d43(4): add $0x1,%rdx
3d47(4): movzx 0x0(%rax,%rdx,1),%ecx
3d4b(2): test %cl,%cl
3d4d(2): jnz 0xffffffed(%rip)
3d4f(3): mov %rdx,%r15
3d52(3): cmp %r15,%r13
3d55(6): jbe 0xfffffaa4(%rip)
3d5b(5): mov $0x0,0x0(%r14,%r15,1)
3d60(5): jmp 0xfffffa99(%rip)
3d65(5): cmp $0x2,0x8(%rsp)
3d6a(5): movzx 0xf(%rsp),%ebx
3d6f(3): mov %r11,%rbp
3d72(3): setz %al
3d75(4): mov %bl,0xd(%rsp)
3d79(5): jmp 0xfffffa30(%rip)
3d7e(4): mov 0x8(%rsp),%esi
3d82(3): mov %rcx,%rdi
3d85(5): call 0xffffedab(%rip)
3d8a(5): mov %rax,0x68(%rsp)
3d8f(5): jmp 0xfffffc57(%rip)
3d94(4): mov 0x8(%rsp),%esi
3d98(3): mov %rcx,%rdi
3d9b(5): call 0xffffed95(%rip)
3da0(5): mov %rax,0x60(%rsp)
3da5(5): jmp 0xfffffc6c(%rip)
3daa(5): movzx 0xf(%rsp),%ebx
3daf(3): mov %r11,%rbp
3db2(2): mov %edx,%eax
3db4(4): mov %bl,0xd(%rsp)
3db8(5): jmp 0xfffff9f1(%rip)
3dbd(4): sub $0x8,%rsp
3dc1(6): mov $0x5,%r8d
3dc7(3): mov %r11,%rcx
3dca(4): push 0x68(%rsp)
3dce(4): push 0x78(%rsp)
3dd2(3): mov %r14,%rdi
3dd5(4): push 0x38(%rsp)
3dd9(8): mov 0x98(%rsp),%r9d
3de1(5): mov 0x30(%rsp),%rdx
3de6(5): mov 0x70(%rsp),%rsi
3deb(5): call 0xffffee35(%rip)
3df0(4): add $0x20,%rsp
3df4(3): mov %rax,%r15
3df7(5): jmp 0xfffffa02(%rip)
3dfc(5): movzx 0x7c(%rsp),%eax
3e01(5): jmp 0xffffff1b(%rip)
3e06(8): mov $0x2,0x8(%rsp)
3e0e(5): jmp 0xfffff99b(%rip)
3e13(5): call 0xffffd6dd(%rip)
3e18(5): mov $0x0,0xd(%rsp)
3e1d(5): jmp 0xfffffa74(%rip)
3e22(3): mov %r11,%rbp
3e25(5): jmp 0xfffff99b(%rip)
3e2a(5): mov $0x1,0xe(%rsp)
3e2f(2): xor %eax,%eax
3e31(3): xor %r12d,%r12d
3e34(9): mov $0x0,0x50(%rsp)
3e3d(5): jmp 0xfffff5a7(%rip)
3e42(3): mov %r13,%rdx
3e45(5): mov 0x50(%rsp),%r13
3e4a(5): jmp 0xfffff5f8(%rip)
3e4f(5): call 0xffffd5e1(%rip)

"quotearg_n_options" :
3e60(2): push %r15
3e62(2): push %r14
3e64(3): movsxd %edi,%r15
3e67(2): push %r13
3e69(2): push %r12
3e6b(3): mov %rdx,%r14
3e6e(1): push %rbp
3e6f(1): push %rbx
3e70(3): mov %rcx,%rbp
3e73(4): sub $0x28,%rsp
3e77(5): mov %rsi,0x8(%rsp)
3e7c(5): call 0xffffd5c4(%rip)
3e81(3): mov %rax,%r13
3e84(2): mov (%rax),%eax
3e86(3): test %r15d,%r15d
3e89(7): mov 0x2041f0(%rip),%rbx
3e90(4): mov %eax,0x18(%rsp)
3e94(6): js 0x16d(%rip)
3e9a(7): cmp %r15d,0x2041d7(%rip)
3ea1(2): jnle 0x64(%rip)
3ea3(7): cmp $0x7fffffff,%r15d
3eaa(6): jz 0x15c(%rip)
3eb0(4): lea 0x1(%r15),%r12d
3eb4(7): lea 0x2041d5(%rip),%rax
3ebb(3): movsxd %r12d,%rsi
3ebe(4): shl/sal $0x4,%rsi
3ec2(3): cmp %rax,%rbx
3ec5(6): jz 0x11b(%rip)
3ecb(3): mov %rbx,%rdi
3ece(5): call 0xf72(%rip)
3ed3(3): mov %rax,%rbx
3ed6(7): mov %rax,0x2041a3(%rip)
3edd(7): movsxd 0x204194(%rip),%rdi
3ee4(3): mov %r12d,%edx
3ee7(2): xor %esi,%esi
3ee9(2): sub %edi,%edx
3eeb(4): shl/sal $0x4,%rdi
3eef(3): movsxd %edx,%rdx
3ef2(3): add %rbx,%rdi
3ef5(4): shl/sal $0x4,%rdx
3ef9(5): call 0xffffd667(%rip)
3efe(7): mov %r12d,0x204173(%rip)
3f05(3): mov 0x4(%rbp),%eax
3f08(4): shl/sal $0x4,%r15
3f0c(4): sub $0x8,%rsp
3f10(3): add %r15,%rbx
3f13(4): lea 0x8(%rbp),%r15
3f17(4): mov 0x0(%rbp),%r8d
3f1b(3): mov (%rbx),%r11
3f1e(4): mov 0x8(%rbx),%r12
3f22(3): mov %r14,%rcx
3f25(3): or $0x1,%eax
3f28(4): mov %eax,0x24(%rsp)
3f2c(3): push 0x30(%rbp)
3f2f(3): mov %eax,%r9d
3f32(3): push 0x28(%rbp)
3f35(2): push %r15
3f37(3): mov %r11,%rsi
3f3a(5): mov 0x28(%rsp),%rdx
3f3f(3): mov %r12,%rdi
3f42(5): mov %r11,0x30(%rsp)
3f47(5): call 0xffffecd9(%rip)
3f4c(4): add $0x20,%rsp
3f50(5): mov 0x10(%rsp),%r11
3f55(3): cmp %rax,%r11
3f58(2): jnbe 0x69(%rip)
3f5a(4): lea 0x1(%rax),%rsi
3f5e(7): lea 0x2041fb(%rip),%rax
3f65(3): cmp %rax,%r12
3f68(3): mov %rsi,(%rbx)
3f6b(2): jz 0x14(%rip)
3f6d(3): mov %r12,%rdi
3f70(5): mov %rsi,0x10(%rsp)
3f75(5): call 0xffffd4ab(%rip)
3f7a(5): mov 0x10(%rsp),%rsi
3f7f(3): mov %rsi,%rdi
3f82(5): mov %rsi,0x10(%rsp)
3f87(5): call 0xe59(%rip)
3f8c(4): sub $0x8,%rsp
3f90(4): mov %rax,0x8(%rbx)
3f94(4): mov 0x0(%rbp),%r8d
3f98(3): push 0x30(%rbp)
3f9b(3): push 0x28(%rbp)
3f9e(3): mov %r14,%rcx
3fa1(2): push %r15
3fa3(5): mov 0x3c(%rsp),%r9d
3fa8(3): mov %rax,%rdi
3fab(5): mov 0x28(%rsp),%rdx
3fb0(5): mov 0x30(%rsp),%rsi
3fb5(3): mov %rax,%r12
3fb8(5): call 0xffffec68(%rip)
3fbd(4): add $0x20,%rsp
3fc1(4): mov 0x18(%rsp),%eax
3fc5(4): mov %eax,0x0(%r13)
3fc9(4): add $0x28,%rsp
3fcd(3): mov %r12,%rax
3fd0(1): pop %rbx
3fd1(1): pop %rbp
3fd2(2): pop %r12
3fd4(2): pop %r13
3fd6(2): pop %r14
3fd8(2): pop %r15
3fda(1): ret near (%rsp)
3fdb(5): nop 0x0(%rax,%rax,1)
3fe0(2): xor %edi,%edi
3fe2(5): call 0xe5e(%rip)
3fe7(8): movdqa 0x2040a1(%rip),%xmm0
3fef(3): mov %rax,%rbx
3ff2(7): mov %rax,0x204087(%rip)
3ff9(3): movups %xmm0,(%rax)
3ffc(5): jmp 0xfffffee1(%rip)
4001(5): call 0xffffd42f(%rip)
4006(5): call 0x102a(%rip)

"clone_quoting_options" :
4010(2): push %r12
4012(1): push %rbp
4013(1): push %rbx
4014(3): mov %rdi,%rbx
4017(5): call 0xffffd429(%rip)
401c(3): mov (%rax),%r12d
401f(3): mov %rax,%rbp
4022(7): lea 0x204237(%rip),%rax
4029(3): test %rbx,%rbx
402c(5): mov $0x38,%esi
4031(4): cmove %rax,%rbx
4035(3): mov %rbx,%rdi
4038(5): call 0xfa8(%rip)
403d(4): mov %r12d,0x0(%rbp)
4041(1): pop %rbx
4042(1): pop %rbp
4043(2): pop %r12
4045(1): ret near (%rsp)

"get_quoting_style" :
4050(7): lea 0x204209(%rip),%rax
4057(3): test %rdi,%rdi
405a(4): cmove %rax,%rdi
405e(2): mov (%rdi),%eax
4060(1): ret near (%rsp)

"set_quoting_style" :
4070(7): lea 0x2041e9(%rip),%rax
4077(3): test %rdi,%rdi
407a(4): cmove %rax,%rdi
407e(2): mov %esi,(%rdi)
4080(1): ret near (%rsp)

"set_char_quoting" :
4090(7): lea 0x2041c9(%rip),%rax
4097(3): test %rdi,%rdi
409a(2): mov %esi,%ecx
409c(4): cmove %rax,%rdi
40a0(2): mov %esi,%eax
40a2(3): and $0x1f,%ecx
40a5(3): shr $0x5,%al
40a8(3): movzx %al,%eax
40ab(5): lea 0x8(%rdi,%rax,4),%rdi
40b0(2): mov (%rdi),%esi
40b2(2): mov %esi,%eax
40b4(2): shr %cl,%eax
40b6(2): xor %eax,%edx
40b8(3): and $0x1,%eax
40bb(3): and $0x1,%edx
40be(2): shl/sal %cl,%edx
40c0(2): xor %esi,%edx
40c2(2): mov %edx,(%rdi)
40c4(1): ret near (%rsp)

"set_quoting_flags" :
40d0(7): lea 0x204189(%rip),%rax
40d7(3): test %rdi,%rdi
40da(4): cmove %rax,%rdi
40de(3): mov 0x4(%rdi),%eax
40e1(3): mov %esi,0x4(%rdi)
40e4(1): ret near (%rsp)

"set_custom_quoting" :
40f0(7): lea 0x204169(%rip),%rax
40f7(3): test %rdi,%rdi
40fa(4): cmove %rax,%rdi
40fe(3): test %rsi,%rsi
4101(6): mov $0xa,(%rdi)
4107(2): jz 0x10(%rip)
4109(3): test %rdx,%rdx
410c(2): jz 0xb(%rip)
410e(4): mov %rsi,0x28(%rdi)
4112(4): mov %rdx,0x30(%rdi)
4116(1): ret near (%rsp)
4117(4): sub $0x8,%rsp
411b(5): call 0xffffd315(%rip)

"quotearg_buffer" :
4120(2): push %r15
4122(2): push %r14
4124(7): lea 0x204135(%rip),%rax
412b(2): push %r13
412d(2): push %r12
412f(3): mov %rdi,%r13
4132(1): push %rbp
4133(1): push %rbx
4134(3): mov %r8,%rbx
4137(3): mov %rsi,%r14
413a(3): mov %rdx,%r15
413d(4): sub $0x18,%rsp
4141(3): test %r8,%r8
4144(4): cmove %rax,%rbx
4148(5): mov %rcx,0x8(%rsp)
414d(5): call 0xffffd2f3(%rip)
4152(3): mov (%rax),%r12d
4155(3): mov %rax,%rbp
4158(4): lea 0x8(%rbx),%rax
415c(4): sub $0x8,%rsp
4160(4): mov 0x4(%rbx),%r9d
4164(3): push 0x30(%rbx)
4167(3): mov (%rbx),%r8d
416a(3): push 0x28(%rbx)
416d(3): mov %r15,%rdx
4170(1): push %rax
4171(5): mov 0x28(%rsp),%rcx
4176(3): mov %r14,%rsi
4179(3): mov %r13,%rdi
417c(5): call 0xffffeaa4(%rip)
4181(4): mov %r12d,0x0(%rbp)
4185(4): add $0x38,%rsp
4189(1): pop %rbx
418a(1): pop %rbp
418b(2): pop %r12
418d(2): pop %r13
418f(2): pop %r14
4191(2): pop %r15
4193(1): ret near (%rsp)

"quotearg_alloc_mem" :
41a0(2): push %r15
41a2(2): push %r14
41a4(7): lea 0x2040b5(%rip),%rax
41ab(2): push %r13
41ad(2): push %r12
41af(3): mov %rdx,%r12
41b2(1): push %rbp
41b3(1): push %rbx
41b4(3): mov %rcx,%rbx
41b7(3): mov %rdi,%r14
41ba(3): mov %rsi,%r15
41bd(4): sub $0x38,%rsp
41c1(3): test %rcx,%rcx
41c4(4): cmove %rax,%rbx
41c8(2): xor %ebp,%ebp
41ca(5): call 0xffffd276(%rip)
41cf(3): test %r12,%r12
41d2(3): mov %rax,%r13
41d5(2): mov (%rax),%eax
41d7(4): setz %bpl
41db(3): or 0x4(%rbx),%ebp
41de(4): lea 0x8(%rbx),%r10
41e2(4): sub $0x8,%rsp
41e6(3): mov (%rbx),%r8d
41e9(3): mov %r15,%rcx
41ec(4): mov %eax,0x14(%rsp)
41f0(3): push 0x30(%rbx)
41f3(3): mov %r14,%rdx
41f6(3): push 0x28(%rbx)
41f9(2): push %r10
41fb(2): xor %esi,%esi
41fd(3): mov %ebp,%r9d
4200(2): xor %edi,%edi
4202(5): mov %r10,0x40(%rsp)
4207(5): call 0xffffea19(%rip)
420c(4): lea 0x1(%rax),%rsi
4210(5): mov %rax,0x48(%rsp)
4215(4): add $0x20,%rsp
4219(3): mov %rsi,%rdi
421c(5): mov %rsi,0x18(%rsp)
4221(5): call 0xbbf(%rip)
4226(5): mov %rax,0x10(%rsp)
422b(4): sub $0x8,%rsp
422f(3): push 0x30(%rbx)
4232(3): push 0x28(%rbx)
4235(5): mov 0x38(%rsp),%r10
423a(3): mov %ebp,%r9d
423d(3): mov (%rbx),%r8d
4240(3): mov %r15,%rcx
4243(3): mov %r14,%rdx
4246(3): mov %rax,%rdi
4249(2): push %r10
424b(5): mov 0x38(%rsp),%rsi
4250(5): call 0xffffe9d0(%rip)
4255(4): mov 0x2c(%rsp),%eax
4259(4): add $0x20,%rsp
425d(3): test %r12,%r12
4260(4): mov %eax,0x0(%r13)
4264(2): jz 0xb(%rip)
4266(5): mov 0x28(%rsp),%r11
426b(4): mov %r11,(%r12)
426f(5): mov 0x10(%rsp),%rax
4274(4): add $0x38,%rsp
4278(1): pop %rbx
4279(1): pop %rbp
427a(2): pop %r12
427c(2): pop %r13
427e(2): pop %r14
4280(2): pop %r15
4282(1): ret near (%rsp)

"quotearg_alloc" :
4290(3): mov %rdx,%rcx
4293(2): xor %edx,%edx
4295(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
42a0(6): mov 0x203dd2(%rip),%eax
42a6(2): push %r12
42a8(7): mov 0x203dd1(%rip),%r12
42af(1): push %rbp
42b0(1): push %rbx
42b1(3): cmp $0x1,%eax
42b4(2): jle 0x2d(%rip)
42b6(3): sub $0x2,%eax
42b9(5): lea 0x18(%r12),%rbx
42be(4): shl/sal $0x4,%rax
42c2(5): lea 0x28(%r12,%rax,1),%rbp
42c7(9): nop 0x0(%rax,%rax,1)
42d0(3): mov (%rbx),%rdi
42d3(4): add $0x10,%rbx
42d7(5): call 0xffffd149(%rip)
42dc(3): cmp %rbp,%rbx
42df(2): jnz 0xfffffff1(%rip)
42e1(5): mov 0x8(%r12),%rdi
42e6(7): lea 0x203e73(%rip),%rbx
42ed(3): cmp %rbx,%rdi
42f0(2): jz 0x19(%rip)
42f2(5): call 0xffffd12e(%rip)
42f7(b): mov $0x100,0x203d8e(%rip)
4302(7): mov %rbx,0x203d8f(%rip)
4309(7): lea 0x203d80(%rip),%rbx
4310(3): cmp %rbx,%r12
4313(2): jz 0x11(%rip)
4315(3): mov %r12,%rdi
4318(5): call 0xffffd108(%rip)
431d(7): mov %rbx,0x203d5c(%rip)
4324(1): pop %rbx
4325(a): mov $0x1,0x203d49(%rip)
432f(1): pop %rbp
4330(2): pop %r12
4332(1): ret near (%rsp)

"quotearg_n" :
4340(7): lea 0x203f19(%rip),%rcx
4347(7): mov $0xffffffff,%rdx
434e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4360(7): lea 0x203ef9(%rip),%rcx
4367(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4370(7): lea 0x203ee9(%rip),%rcx
4377(3): mov %rdi,%rsi
437a(7): mov $0xffffffff,%rdx
4381(2): xor %edi,%edi
4383(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4390(7): lea 0x203ec9(%rip),%rcx
4397(3): mov %rsi,%rdx
439a(3): mov %rdi,%rsi
439d(2): xor %edi,%edi
439f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
43b0(4): sub $0x48,%rsp
43b4(3): mov %rdx,%rax
43b7(9): mov $0x28,%rdx
43c0(5): mov %rdx,0x38(%rsp)
43c5(2): xor %edx,%edx
43c7(3): cmp $0xa,%esi
43ca(2): jz 0x6a(%rip)
43cc(3): mov %esi,(%rsp)
43cf(3): mov %rsp,%rcx
43d2(7): mov $0xffffffff,%rdx
43d9(3): mov %rax,%rsi
43dc(9): mov $0x0,0x4(%rsp)
43e5(9): mov $0x0,0xc(%rsp)
43ee(9): mov $0x0,0x14(%rsp)
43f7(9): mov $0x0,0x1c(%rsp)
4400(9): mov $0x0,0x24(%rsp)
4409(9): mov $0x0,0x2c(%rsp)
4412(8): mov $0x0,0x34(%rsp)
441a(5): call 0xfffffa46(%rip)
441f(5): mov 0x38(%rsp),%rcx
4424(9): xor $0x28,%rcx
442d(2): jnz 0xc(%rip)
442f(4): add $0x48,%rsp
4433(1): ret near (%rsp)
4434(5): call 0xffffcffc(%rip)
4439(5): call 0xffffd0b7(%rip)

"quotearg_n_style_mem" :
4440(4): sub $0x48,%rsp
4444(3): mov %rdx,%rax
4447(3): mov %rcx,%rdx
444a(9): mov $0x28,%rcx
4453(5): mov %rcx,0x38(%rsp)
4458(2): xor %ecx,%ecx
445a(3): cmp $0xa,%esi
445d(2): jz 0x63(%rip)
445f(3): mov %esi,(%rsp)
4462(3): mov %rsp,%rcx
4465(3): mov %rax,%rsi
4468(9): mov $0x0,0x4(%rsp)
4471(9): mov $0x0,0xc(%rsp)
447a(9): mov $0x0,0x14(%rsp)
4483(9): mov $0x0,0x1c(%rsp)
448c(9): mov $0x0,0x24(%rsp)
4495(9): mov $0x0,0x2c(%rsp)
449e(8): mov $0x0,0x34(%rsp)
44a6(5): call 0xfffff9ba(%rip)
44ab(5): mov 0x38(%rsp),%rdx
44b0(9): xor $0x28,%rdx
44b9(2): jnz 0xc(%rip)
44bb(4): add $0x48,%rsp
44bf(1): ret near (%rsp)
44c0(5): call 0xffffcf70(%rip)
44c5(5): call 0xffffd02b(%rip)

"quotearg_style" :
44d0(3): mov %rsi,%rdx
44d3(2): mov %edi,%esi
44d5(2): xor %edi,%edi
44d7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
44e0(3): mov %rdx,%rcx
44e3(3): mov %rsi,%rdx
44e6(2): mov %edi,%esi
44e8(2): xor %edi,%edi
44ea(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
44f0(4): sub $0x48,%rsp
44f4(2): mov %edx,%ecx
44f6(9): mov $0x28,%rax
44ff(5): mov %rax,0x38(%rsp)
4504(2): xor %eax,%eax
4506(7): mov 0x203d83(%rip),%rax
450d(3): mov %rsp,%r8
4510(3): and $0x1f,%ecx
4513(8): movdqa 0x203d45(%rip),%xmm0
451b(5): mov %rax,0x30(%rsp)
4520(2): mov %edx,%eax
4522(4): movaps %xmm0,(%rsp)
4526(3): shr $0x5,%al
4529(3): movzx %al,%eax
452c(5): lea 0x8(%r8,%rax,4),%r9
4531(8): movdqa 0x203d37(%rip),%xmm0
4539(5): movaps %xmm0,0x10(%rsp)
453e(8): movdqa 0x203d3a(%rip),%xmm0
4546(5): movaps %xmm0,0x20(%rsp)
454b(3): mov (%r9),%edx
454e(2): mov %edx,%eax
4550(2): shr %cl,%eax
4552(2): not %eax
4554(3): and $0x1,%eax
4557(2): shl/sal %cl,%eax
4559(3): mov %r8,%rcx
455c(2): xor %edx,%eax
455e(3): mov %rsi,%rdx
4561(3): mov %rdi,%rsi
4564(3): mov %eax,(%r9)
4567(2): xor %edi,%edi
4569(5): call 0xfffff8f7(%rip)
456e(5): mov 0x38(%rsp),%rsi
4573(9): xor $0x28,%rsi
457c(2): jnz 0x7(%rip)
457e(4): add $0x48,%rsp
4582(1): ret near (%rsp)
4583(5): call 0xffffcf6d(%rip)

"quotearg_char" :
4590(4): movsx %sil,%edx
4594(7): mov $0xffffffff,%rsi
459b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
45a0(5): mov $0x3a,%edx
45a5(7): mov $0xffffffff,%rsi
45ac(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
45c0(5): mov $0x3a,%edx
45c5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
45d0(4): sub $0x48,%rsp
45d4(3): mov %rdx,%rax
45d7(9): mov $0x28,%rdx
45e0(5): mov %rdx,0x38(%rsp)
45e5(2): xor %edx,%edx
45e7(3): cmp $0xa,%esi
45ea(2): jz 0x6a(%rip)
45ec(3): mov %esi,(%rsp)
45ef(3): mov %rsp,%rcx
45f2(7): mov $0xffffffff,%rdx
45f9(3): mov %rax,%rsi
45fc(9): mov $0x0,0x4(%rsp)
4605(9): mov $0x4000000,0xc(%rsp)
460e(9): mov $0x0,0x14(%rsp)
4617(9): mov $0x0,0x1c(%rsp)
4620(9): mov $0x0,0x24(%rsp)
4629(9): mov $0x0,0x2c(%rsp)
4632(8): mov $0x0,0x34(%rsp)
463a(5): call 0xfffff826(%rip)
463f(5): mov 0x38(%rsp),%rcx
4644(9): xor $0x28,%rcx
464d(2): jnz 0xc(%rip)
464f(4): add $0x48,%rsp
4653(1): ret near (%rsp)
4654(5): call 0xffffcddc(%rip)
4659(5): call 0xffffce97(%rip)

"quotearg_n_custom_mem" :
4660(4): sub $0x48,%rsp
4664(3): mov %rcx,%r9
4667(7): mov 0x203c22(%rip),%rcx
466e(8): movdqa 0x203bea(%rip),%xmm0
4676(9): mov $0x28,%rax
467f(5): mov %rax,0x38(%rsp)
4684(2): xor %eax,%eax
4686(4): movaps %xmm0,(%rsp)
468a(3): test %rsi,%rsi
468d(5): mov %rcx,0x30(%rsp)
4692(7): mov $0xa,(%rsp)
4699(8): movdqa 0x203bcf(%rip),%xmm0
46a1(5): movaps %xmm0,0x10(%rsp)
46a6(8): movdqa 0x203bd2(%rip),%xmm0
46ae(5): movaps %xmm0,0x20(%rsp)
46b3(2): jz 0x34(%rip)
46b5(3): test %rdx,%rdx
46b8(2): jz 0x2f(%rip)
46ba(5): mov %rsi,0x28(%rsp)
46bf(5): mov %rdx,0x30(%rsp)
46c4(3): mov %rsp,%rcx
46c7(3): mov %r8,%rdx
46ca(3): mov %r9,%rsi
46cd(5): call 0xfffff793(%rip)
46d2(5): mov 0x38(%rsp),%rdi
46d7(9): xor $0x28,%rdi
46e0(2): jnz 0xc(%rip)
46e2(4): add $0x48,%rsp
46e6(1): ret near (%rsp)
46e7(5): call 0xffffcd49(%rip)
46ec(5): call 0xffffce04(%rip)

"quotearg_n_custom" :
4700(7): mov $0xffffffff,%r8
4707(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4710(3): mov %rdx,%rcx
4713(7): mov $0xffffffff,%r8
471a(3): mov %rsi,%rdx
471d(3): mov %rdi,%rsi
4720(2): xor %edi,%edi
4722(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4730(3): mov %rcx,%r8
4733(3): mov %rdx,%rcx
4736(3): mov %rsi,%rdx
4739(3): mov %rdi,%rsi
473c(2): xor %edi,%edi
473e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4750(7): lea 0x2038e9(%rip),%rcx
4757(5): jmp 0xfffff709(%rip)

"quote_mem" :
4760(7): lea 0x2038d9(%rip),%rcx
4767(3): mov %rsi,%rdx
476a(3): mov %rdi,%rsi
476d(2): xor %edi,%edi
476f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4780(7): lea 0x2038b9(%rip),%rcx
4787(7): mov $0xffffffff,%rdx
478e(5): jmp 0xfffff6d2(%rip)

"quote" :
47a0(7): lea 0x203899(%rip),%rcx
47a7(3): mov %rdi,%rsi
47aa(7): mov $0xffffffff,%rdx
47b1(2): xor %edi,%edi
47b3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
47c0(2): push %r15
47c2(2): push %r14
47c4(2): push %r13
47c6(2): push %r12
47c8(3): mov %r9,%r12
47cb(1): push %rbp
47cc(1): push %rbx
47cd(3): mov %rdi,%rbp
47d0(3): mov %r8,%rbx
47d3(4): sub $0x28,%rsp
47d7(3): test %rsi,%rsi
47da(6): jz 0x11e(%rip)
47e0(3): mov %rdx,%r8
47e3(7): lea 0x187e(%rip),%rdx
47ea(3): mov %rcx,%r9
47ed(2): xor %eax,%eax
47ef(3): mov %rsi,%rcx
47f2(5): mov $0x1,%esi
47f7(5): call 0xffffcec9(%rip)
47fc(7): lea 0x1878(%rip),%rsi
4803(2): xor %edi,%edi
4805(5): mov $0x5,%edx
480a(5): call 0xffffccb6(%rip)
480f(7): lea 0x1b8a(%rip),%rdx
4816(3): mov %rax,%rcx
4819(6): mov $0x7e3,%r8d
481f(5): mov $0x1,%esi
4824(3): mov %rbp,%rdi
4827(2): xor %eax,%eax
4829(5): call 0xffffce97(%rip)
482e(7): lea 0x18d3(%rip),%rsi
4835(2): xor %edi,%edi
4837(5): mov $0x5,%edx
483c(5): call 0xffffcc84(%rip)
4841(3): mov %rbp,%rsi
4844(3): mov %rax,%rdi
4847(5): call 0xffffcd69(%rip)
484c(4): cmp $0x9,%r12
4850(6): jnbe 0x340(%rip)
4856(7): lea 0x1b0b(%rip),%rdx
485d(4): movsxd 0x0(%rdx,%r12,4),%rax
4861(3): add %rdx,%rax
4864(2): jmp %rax
4866(a): nop 0x0(%rax,%rax,1)
4870(4): mov 0x38(%rbx),%r9
4874(4): mov 0x10(%rbx),%rax
4878(7): lea 0x19f9(%rip),%rsi
487f(4): mov 0x8(%rbx),%r8
4883(5): mov $0x5,%edx
4888(2): xor %edi,%edi
488a(4): mov 0x30(%rbx),%r13
488e(4): mov 0x28(%rbx),%r12
4892(5): mov %r9,0x10(%rsp)
4897(4): mov 0x20(%rbx),%r15
489b(4): mov 0x18(%rbx),%r14
489f(4): mov %rax,(%rsp)
48a3(5): mov %r8,0x8(%rsp)
48a8(3): mov (%rbx),%rbx
48ab(5): call 0xffffcc15(%rip)
48b0(4): sub $0x8,%rsp
48b4(5): mov 0x18(%rsp),%r9
48b9(3): mov %rax,%rdx
48bc(3): mov %rbx,%rcx
48bf(5): mov $0x1,%esi
48c4(3): mov %rbp,%rdi
48c7(2): xor %eax,%eax
48c9(2): push %r9
48cb(2): push %r13
48cd(2): push %r12
48cf(2): push %r15
48d1(2): push %r14
48d3(5): mov 0x30(%rsp),%r9
48d8(5): mov 0x38(%rsp),%r8
48dd(5): call 0xffffcde3(%rip)
48e2(4): add $0x30,%rsp
48e6(4): add $0x28,%rsp
48ea(1): pop %rbx
48eb(1): pop %rbp
48ec(2): pop %r12
48ee(2): pop %r13
48f0(2): pop %r14
48f2(2): pop %r15
48f4(1): ret near (%rsp)
48f5(3): nop (%rax)
48f8(3): mov %rcx,%r8
48fb(3): mov %rdx,%rcx
48fe(7): lea 0x176f(%rip),%rdx
4905(5): mov $0x1,%esi
490a(2): xor %eax,%eax
490c(5): call 0xffffcdb4(%rip)
4911(5): jmp 0xfffffeeb(%rip)
4916(a): nop 0x0(%rax,%rax,1)
4920(4): mov 0x40(%rbx),%r10
4924(4): mov 0x38(%rbx),%r9
4928(7): lea 0x1979(%rip),%rsi
492f(4): mov 0x10(%rbx),%rax
4933(4): mov 0x8(%rbx),%r8
4937(5): mov $0x5,%edx
493c(4): mov 0x30(%rbx),%r13
4940(4): mov 0x28(%rbx),%r12
4944(4): mov 0x20(%rbx),%r15
4948(4): mov 0x18(%rbx),%r14
494c(3): mov (%rbx),%rbx
494f(5): mov %r10,0x18(%rsp)
4954(5): mov %r9,0x10(%rsp)
4959(4): mov %rax,(%rsp)
495d(5): mov %r8,0x8(%rsp)
4962(2): xor %edi,%edi
4964(5): call 0xffffcb5c(%rip)
4969(5): mov 0x18(%rsp),%r10
496e(2): push %r10
4970(5): jmp 0xffffff44(%rip)
4975(3): nop (%rax)
4978(3): mov (%rbx),%rbx
497b(7): lea 0x16fd(%rip),%rsi
4982(5): mov $0x5,%edx
4987(2): xor %edi,%edi
4989(5): call 0xffffcb37(%rip)
498e(4): add $0x28,%rsp
4992(3): mov %rbx,%rcx
4995(3): mov %rbp,%rdi
4998(1): pop %rbx
4999(1): pop %rbp
499a(2): pop %r12
499c(2): pop %r13
499e(2): pop %r14
49a0(2): pop %r15
49a2(3): mov %rax,%rdx
49a5(5): mov $0x1,%esi
49aa(2): xor %eax,%eax
49ac(5): jmp 0xffffcd14(%rip)
49b1(7): nop 0x0(%rax)
49b8(4): mov 0x8(%rbx),%r12
49bc(7): lea 0x16cc(%rip),%rsi
49c3(3): mov (%rbx),%rbx
49c6(5): mov $0x5,%edx
49cb(2): xor %edi,%edi
49cd(5): call 0xffffcaf3(%rip)
49d2(4): add $0x28,%rsp
49d6(3): mov %r12,%r8
49d9(3): mov %rbx,%rcx
49dc(3): mov %rbp,%rdi
49df(3): mov %rax,%rdx
49e2(5): mov $0x1,%esi
49e7(1): pop %rbx
49e8(1): pop %rbp
49e9(2): pop %r12
49eb(2): pop %r13
49ed(2): pop %r14
49ef(2): pop %r15
49f1(2): xor %eax,%eax
49f3(5): jmp 0xffffcccd(%rip)
49f8(8): nop 0x0(%rax,%rax,1)
4a00(4): mov 0x10(%rbx),%r13
4a04(4): mov 0x8(%rbx),%r12
4a08(7): lea 0x1697(%rip),%rsi
4a0f(3): mov (%rbx),%rbx
4a12(5): mov $0x5,%edx
4a17(2): xor %edi,%edi
4a19(5): call 0xffffcaa7(%rip)
4a1e(4): add $0x28,%rsp
4a22(3): mov %r13,%r9
4a25(3): mov %r12,%r8
4a28(3): mov %rbx,%rcx
4a2b(3): mov %rbp,%rdi
4a2e(3): mov %rax,%rdx
4a31(1): pop %rbx
4a32(1): pop %rbp
4a33(2): pop %r12
4a35(2): pop %r13
4a37(2): pop %r14
4a39(2): pop %r15
4a3b(5): mov $0x1,%esi
4a40(2): xor %eax,%eax
4a42(5): jmp 0xffffcc7e(%rip)
4a47(9): nop 0x0(%rax,%rax,1)
4a50(7): lea 0x1781(%rip),%rsi
4a57(5): mov $0x5,%edx
4a5c(2): xor %edi,%edi
4a5e(4): mov 0x18(%rbx),%r14
4a62(4): mov 0x10(%rbx),%r13
4a66(4): mov 0x8(%rbx),%r12
4a6a(3): mov (%rbx),%rbx
4a6d(5): call 0xffffca53(%rip)
4a72(4): sub $0x8,%rsp
4a76(2): push %r14
4a78(3): mov %rax,%rdx
4a7b(3): mov %r13,%r9
4a7e(3): mov %r12,%r8
4a81(3): mov %rbx,%rcx
4a84(3): mov %rbp,%rdi
4a87(5): mov $0x1,%esi
4a8c(2): xor %eax,%eax
4a8e(5): call 0xffffcc32(%rip)
4a93(1): pop %rax
4a94(1): pop %rdx
4a95(4): add $0x28,%rsp
4a99(1): pop %rbx
4a9a(1): pop %rbp
4a9b(2): pop %r12
4a9d(2): pop %r13
4a9f(2): pop %r14
4aa1(2): pop %r15
4aa3(1): ret near (%rsp)
4aa4(4): nop 0x0(%rax)
4aa8(4): mov 0x20(%rbx),%r15
4aac(7): lea 0x1745(%rip),%rsi
4ab3(5): mov $0x5,%edx
4ab8(2): xor %edi,%edi
4aba(4): mov 0x18(%rbx),%r14
4abe(4): mov 0x10(%rbx),%r13
4ac2(4): mov 0x8(%rbx),%r12
4ac6(3): mov (%rbx),%rbx
4ac9(5): call 0xffffc9f7(%rip)
4ace(2): push %r15
4ad0(2): jmp 0xffffffa6(%rip)
4ad2(6): nop 0x0(%rax,%rax,1)
4ad8(4): mov 0x8(%rbx),%r8
4adc(4): mov 0x28(%rbx),%r12
4ae0(7): lea 0x1739(%rip),%rsi
4ae7(4): mov 0x20(%rbx),%r15
4aeb(4): mov 0x18(%rbx),%r14
4aef(5): mov $0x5,%edx
4af4(4): mov 0x10(%rbx),%r13
4af8(2): xor %edi,%edi
4afa(3): mov (%rbx),%rbx
4afd(4): mov %r8,(%rsp)
4b01(5): call 0xffffc9bf(%rip)
4b06(4): sub $0x8,%rsp
4b0a(3): mov %r13,%r9
4b0d(2): push %r12
4b0f(2): push %r15
4b11(2): push %r14
4b13(5): mov 0x20(%rsp),%r8
4b18(3): mov %rbx,%rcx
4b1b(3): mov %rax,%rdx
4b1e(3): mov %rbp,%rdi
4b21(5): mov $0x1,%esi
4b26(2): xor %eax,%eax
4b28(5): call 0xffffcb98(%rip)
4b2d(4): add $0x20,%rsp
4b31(4): add $0x28,%rsp
4b35(1): pop %rbx
4b36(1): pop %rbp
4b37(2): pop %r12
4b39(2): pop %r13
4b3b(2): pop %r14
4b3d(2): pop %r15
4b3f(1): ret near (%rsp)
4b40(4): mov 0x10(%rbx),%r9
4b44(4): mov 0x30(%rbx),%r13
4b48(7): lea 0x16f9(%rip),%rsi
4b4f(4): mov 0x28(%rbx),%r12
4b53(4): mov 0x20(%rbx),%r15
4b57(5): mov $0x5,%edx
4b5c(4): mov 0x18(%rbx),%r14
4b60(4): mov 0x8(%rbx),%r8
4b64(2): xor %edi,%edi
4b66(5): mov %r9,0x8(%rsp)
4b6b(3): mov (%rbx),%rbx
4b6e(4): mov %r8,(%rsp)
4b72(5): call 0xffffc94e(%rip)
4b77(2): push %r13
4b79(2): push %r12
4b7b(2): push %r15
4b7d(2): push %r14
4b7f(5): mov 0x28(%rsp),%r9
4b84(2): jmp 0xffffff8f(%rip)
4b86(a): nop 0x0(%rax,%rax,1)
4b90(4): mov 0x40(%rbx),%r10
4b94(4): mov 0x38(%rbx),%r9
4b98(5): mov $0x5,%edx
4b9d(4): mov 0x10(%rbx),%rax
4ba1(4): mov 0x8(%rbx),%r8
4ba5(7): lea 0x1734(%rip),%rsi
4bac(4): mov 0x30(%rbx),%r13
4bb0(4): mov 0x28(%rbx),%r12
4bb4(4): mov 0x20(%rbx),%r15
4bb8(4): mov 0x18(%rbx),%r14
4bbc(5): mov %r10,0x18(%rsp)
4bc1(5): mov %r9,0x10(%rsp)
4bc6(4): mov %rax,(%rsp)
4bca(5): mov %r8,0x8(%rsp)
4bcf(3): mov (%rbx),%rbx
4bd2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4be0(3): xor %r9d,%r9d
4be3(4): cmp $0x0,(%r8)
4be7(2): jz 0x14(%rip)
4be9(7): nop 0x0(%rax)
4bf0(4): add $0x1,%r9
4bf4(5): cmp $0x0,0x0(%r8,%r9,8)
4bf9(2): jnz 0xfffffff7(%rip)
4bfb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4c00(4): sub $0x68,%rsp
4c04(3): mov %r8,%r10
4c07(3): xor %r9d,%r9d
4c0a(9): mov $0x28,%rax
4c13(5): mov %rax,0x58(%rsp)
4c18(2): xor %eax,%eax
4c1a(3): mov %rsp,%r8
4c1d(3): nop (%rax)
4c20(3): mov (%r10),%eax
4c23(3): cmp $0x2f,%eax
4c26(2): jnbe 0x44(%rip)
4c28(3): mov %eax,%r11d
4c2b(4): add 0x10(%r10),%r11
4c2f(3): add $0x8,%eax
4c32(3): mov %eax,(%r10)
4c35(3): mov (%r11),%rax
4c38(3): test %rax,%rax
4c3b(4): mov %rax,0x0(%r8,%r9,8)
4c3f(2): jz 0xc(%rip)
4c41(4): add $0x1,%r9
4c45(4): cmp $0xa,%r9
4c49(2): jnz 0xffffffd7(%rip)
4c4b(5): call 0xfffffb75(%rip)
4c50(5): mov 0x58(%rsp),%rax
4c55(9): xor $0x28,%rax
4c5e(2): jnz 0x7(%rip)
4c60(4): add $0x68,%rsp
4c64(1): ret near (%rsp)
4c65(5): call 0xffffc88b(%rip)
4c6a(4): mov 0x8(%r10),%r11
4c6e(4): lea 0x8(%r11),%rax
4c72(4): mov %rax,0x8(%r10)
4c76(2): jmp 0xffffffbf(%rip)

"version_etc" :
4c80(1): push %rbp
4c81(1): push %rbx
4c82(6): mov $0x20,%r10d
4c88(3): xor %r11d,%r11d
4c8b(7): sub $0xb8,%rsp
4c92(9): mov $0x28,%rax
4c9b(5): mov %rax,0x78(%rsp)
4ca0(2): xor %eax,%eax
4ca2(8): lea 0xd0(%rsp),%rax
4caa(8): mov %r8,0xa0(%rsp)
4cb2(8): lea 0xd0(%rsp),%rbx
4cba(5): lea 0x20(%rsp),%r8
4cbf(8): mov %r9,0xa8(%rsp)
4cc7(8): mov $0x20,0x8(%rsp)
4ccf(5): mov %rax,0x10(%rsp)
4cd4(8): lea 0x80(%rsp),%rax
4cdc(3): xor %r9d,%r9d
4cdf(5): mov %rax,0x18(%rsp)
4ce4(3): mov %rax,%rbp
4ce7(9): nop 0x0(%rax,%rax,1)
4cf0(4): cmp $0x2f,%r10d
4cf4(2): jnbe 0x58(%rip)
4cf6(3): mov %r10d,%eax
4cf9(6): mov $0x1,%r11d
4cff(4): add $0x8,%r10d
4d03(3): add %rbp,%rax
4d06(3): mov (%rax),%rax
4d09(3): test %rax,%rax
4d0c(4): mov %rax,0x0(%r8,%r9,8)
4d10(2): jz 0xc(%rip)
4d12(4): add $0x1,%r9
4d16(4): cmp $0xa,%r9
4d1a(2): jnz 0xffffffd6(%rip)
4d1c(3): test %r11b,%r11b
4d1f(2): jnz 0x26(%rip)
4d21(5): call 0xfffffa9f(%rip)
4d26(5): mov 0x78(%rsp),%rax
4d2b(9): xor $0x28,%rax
4d34(2): jnz 0xc(%rip)
4d36(7): add $0xb8,%rsp
4d3d(1): pop %rbx
4d3e(1): pop %rbp
4d3f(1): ret near (%rsp)
4d40(5): call 0xffffc7b0(%rip)
4d45(5): mov %r10d,0x8(%rsp)
4d4a(2): jmp 0xffffffd7(%rip)
4d4c(3): mov %rbx,%rax
4d4f(4): add $0x8,%rbx
4d53(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4d60(1): push %rbx
4d61(7): lea 0x135a(%rip),%rsi
4d68(5): mov $0x5,%edx
4d6d(2): xor %edi,%edi
4d6f(5): call 0xffffc751(%rip)
4d74(7): lea 0x135c(%rip),%rdx
4d7b(3): mov %rax,%rsi
4d7e(5): mov $0x1,%edi
4d83(2): xor %eax,%eax
4d85(5): call 0xffffc8cb(%rip)
4d8a(7): lea 0x135c(%rip),%rsi
4d91(5): mov $0x5,%edx
4d96(2): xor %edi,%edi
4d98(5): call 0xffffc728(%rip)
4d9d(7): lea 0x96c(%rip),%rcx
4da4(7): lea 0x6d6(%rip),%rdx
4dab(3): mov %rax,%rsi
4dae(5): mov $0x1,%edi
4db3(2): xor %eax,%eax
4db5(5): call 0xffffc89b(%rip)
4dba(7): mov 0x2032e7(%rip),%rbx
4dc1(7): lea 0x1558(%rip),%rsi
4dc8(2): xor %edi,%edi
4dca(5): mov $0x5,%edx
4dcf(5): call 0xffffc6f1(%rip)
4dd4(3): mov %rbx,%rsi
4dd7(3): mov %rax,%rdi
4dda(1): pop %rbx
4ddb(5): jmp 0xffffc7d5(%rip)

"xmalloc" :
4de0(1): push %rbx
4de1(3): mov %rdi,%rbx
4de4(5): call 0xffffc80c(%rip)
4de9(3): test %rax,%rax
4dec(2): jnz 0x7(%rip)
4dee(3): test %rbx,%rbx
4df1(2): jnz 0x4(%rip)
4df3(1): pop %rbx
4df4(1): ret near (%rsp)
4df5(5): call 0x23b(%rip)

"xnmalloc" :
4e00(3): mov %rdi,%rax
4e03(3): mul %rax,%rsi,%rdx
4e06(3): mov %rax,%rdi
4e09(3): seto %al
4e0c(3): test %rdi,%rdi
4e0f(2): js 0xc(%rip)
4e11(3): movzx %al,%eax
4e14(3): test %rax,%rax
4e17(2): jnz 0x4(%rip)
4e19(2): jmp 0xffffffc7(%rip)
4e1b(4): sub $0x8,%rsp
4e1f(5): call 0x211(%rip)

"xrealloc" :
4e40(3): test %rsi,%rsi
4e43(1): push %rbx
4e44(3): mov %rsi,%rbx
4e47(2): jnz 0x7(%rip)
4e49(3): test %rdi,%rdi
4e4c(2): jnz 0x1c(%rip)
4e4e(3): mov %rbx,%rsi
4e51(5): call 0xffffc7df(%rip)
4e56(3): test %rax,%rax
4e59(2): jnz 0x7(%rip)
4e5b(3): test %rbx,%rbx
4e5e(2): jnz 0x13(%rip)
4e60(1): pop %rbx
4e61(1): ret near (%rsp)
4e62(6): nop 0x0(%rax,%rax,1)
4e68(5): call 0xffffc5b8(%rip)
4e6d(2): xor %eax,%eax
4e6f(1): pop %rbx
4e70(1): ret near (%rsp)
4e71(5): call 0x1bf(%rip)

"xnrealloc" :
4e80(3): mov %rsi,%rax
4e83(3): mul %rax,%rdx,%rdx
4e86(3): mov %rax,%rsi
4e89(3): seto %al
4e8c(3): test %rsi,%rsi
4e8f(2): js 0xc(%rip)
4e91(3): movzx %al,%eax
4e94(3): test %rax,%rax
4e97(2): jnz 0x4(%rip)
4e99(2): jmp 0xffffffa7(%rip)
4e9b(4): sub $0x8,%rsp
4e9f(5): call 0x191(%rip)

"x2nrealloc" :
4eb0(3): test %rdi,%rdi
4eb3(3): mov %rdx,%r9
4eb6(3): mov (%rsi),%rcx
4eb9(2): jz 0x37(%rip)
4ebb(2): xor %edx,%edx
4ebd(a): mov $0x6148914691236517204,%rax
4ec7(3): div %r9,%rax
4eca(3): cmp %rcx,%rax
4ecd(2): jbe 0x3e(%rip)
4ecf(3): mov %rcx,%rax
4ed2(3): shr $0x1,%rax
4ed5(5): lea 0x1(%rax,%rcx,1),%rcx
4eda(3): mov %rcx,(%rsi)
4edd(4): imul %r9,%rcx
4ee1(3): mov %rcx,%rsi
4ee4(5): jmp 0xffffff5c(%rip)
4ee9(7): nop 0x0(%rax)
4ef0(3): test %rcx,%rcx
4ef3(2): jz 0x25(%rip)
4ef5(3): mov %rcx,%rax
4ef8(3): mul %rax,%r9,%rdx
4efb(3): seto %dl
4efe(3): test %rax,%rax
4f01(3): movzx %dl,%edx
4f04(2): js 0x7(%rip)
4f06(3): test %rdx,%rdx
4f09(2): jz 0xffffffd1(%rip)
4f0b(4): sub $0x8,%rsp
4f0f(5): call 0x121(%rip)
4f14(4): nop 0x0(%rax)
4f18(2): xor %edx,%edx
4f1a(5): mov $0x80,%eax
4f1f(3): xor %r8d,%r8d
4f22(3): div %r9,%rax
4f25(3): test %rax,%rax
4f28(4): setz %r8b
4f2c(4): lea 0x0(%r8,%rax,1),%rcx
4f30(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4f40(3): test %rdi,%rdi
4f43(3): mov (%rsi),%rax
4f46(2): jz 0x2a(%rip)
4f48(a): mov $0x6148914691236517203,%rdx
4f52(3): cmp %rdx,%rax
4f55(2): jnbe 0x2c(%rip)
4f57(3): mov %rax,%rdx
4f5a(3): shr $0x1,%rdx
4f5d(5): lea 0x1(%rdx,%rax,1),%rax
4f62(3): mov %rax,(%rsi)
4f65(3): mov %rax,%rsi
4f68(5): jmp 0xfffffed8(%rip)
4f6d(3): nop (%rax)
4f70(3): test %rax,%rax
4f73(5): mov $0x80,%edx
4f78(4): cmove %rdx,%rax
4f7c(3): test %rax,%rax
4f7f(2): jns 0xffffffe3(%rip)
4f81(4): sub $0x8,%rsp
4f85(5): call 0xab(%rip)

"xzalloc" :
4f90(1): push %rbx
4f91(3): mov %rdi,%rbx
4f94(5): call 0xfffffe4c(%rip)
4f99(3): mov %rbx,%rdx
4f9c(2): xor %esi,%esi
4f9e(3): mov %rax,%rdi
4fa1(1): pop %rbx
4fa2(5): jmp 0xffffc5be(%rip)

"xcalloc" :
4fb0(3): mov %rdi,%rax
4fb3(4): sub $0x8,%rsp
4fb7(3): mul %rax,%rsi,%rdx
4fba(3): seto %dl
4fbd(3): test %rax,%rax
4fc0(2): js 0x19(%rip)
4fc2(3): movzx %dl,%edx
4fc5(3): test %rdx,%rdx
4fc8(2): jnz 0x11(%rip)
4fca(5): call 0xffffc5f6(%rip)
4fcf(3): test %rax,%rax
4fd2(2): jz 0x7(%rip)
4fd4(4): add $0x8,%rsp
4fd8(1): ret near (%rsp)
4fd9(5): call 0x57(%rip)

"xmemdup" :
4fe0(1): push %rbp
4fe1(1): push %rbx
4fe2(3): mov %rdi,%rbp
4fe5(3): mov %rsi,%rdi
4fe8(3): mov %rsi,%rbx
4feb(4): sub $0x8,%rsp
4fef(5): call 0xfffffdf1(%rip)
4ff4(4): add $0x8,%rsp
4ff8(3): mov %rbx,%rdx
4ffb(3): mov %rbp,%rsi
4ffe(1): pop %rbx
4fff(1): pop %rbp
5000(3): mov %rax,%rdi
5003(5): jmp 0xffffc5cd(%rip)

"xstrdup" :
5010(1): push %rbx
5011(3): mov %rdi,%rbx
5014(5): call 0xffffc4cc(%rip)
5019(3): mov %rbx,%rdi
501c(4): lea 0x1(%rax),%rsi
5020(1): pop %rbx
5021(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5030(7): lea 0x1398(%rip),%rsi
5037(4): sub $0x8,%rsp
503b(5): mov $0x5,%edx
5040(2): xor %edi,%edi
5042(5): call 0xffffc47e(%rip)
5047(6): mov 0x202fdb(%rip),%edi
504d(7): lea 0xaff(%rip),%rdx
5054(3): mov %rax,%rcx
5057(2): xor %esi,%esi
5059(2): xor %eax,%eax
505b(5): call 0xffffc605(%rip)
5060(5): call 0xffffc3d0(%rip)

"xstrndup" :
5070(4): sub $0x8,%rsp
5074(5): call 0xffffc51c(%rip)
5079(3): test %rax,%rax
507c(2): jz 0x7(%rip)
507e(4): add $0x8,%rsp
5082(1): ret near (%rsp)
5083(5): call 0xffffffad(%rip)

"rpl_fclose" :
5090(2): push %r12
5092(1): push %rbp
5093(1): push %rbx
5094(3): mov %rdi,%rbx
5097(5): call 0xffffc549(%rip)
509c(2): test %eax,%eax
509e(3): mov %rbx,%rdi
50a1(2): js 0x56(%rip)
50a3(5): call 0xffffc57d(%rip)
50a8(2): test %eax,%eax
50aa(2): jnz 0x2e(%rip)
50ac(3): mov %rbx,%rdi
50af(5): call 0x61(%rip)
50b4(2): test %eax,%eax
50b6(2): jz 0x3e(%rip)
50b8(5): call 0xffffc388(%rip)
50bd(3): mov (%rax),%r12d
50c0(3): mov %rbx,%rdi
50c3(3): mov %rax,%rbp
50c6(5): call 0xffffc3da(%rip)
50cb(3): test %r12d,%r12d
50ce(2): jnz 0x32(%rip)
50d0(1): pop %rbx
50d1(1): pop %rbp
50d2(2): pop %r12
50d4(1): ret near (%rsp)
50d5(3): nop (%rax)
50d8(3): mov %rbx,%rdi
50db(5): call 0xffffc505(%rip)
50e0(2): xor %esi,%esi
50e2(5): mov $0x1,%edx
50e7(2): mov %eax,%edi
50e9(5): call 0xffffc457(%rip)
50ee(4): cmp $0xffffffff,%rax
50f2(2): jnz 0xffffffba(%rip)
50f4(3): mov %rbx,%rdi
50f7(1): pop %rbx
50f8(1): pop %rbp
50f9(2): pop %r12
50fb(5): jmp 0xffffc3a5(%rip)
5100(4): mov %r12d,0x0(%rbp)
5104(5): mov $0xffffffff,%eax
5109(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5110(3): test %rdi,%rdi
5113(1): push %rbx
5114(3): mov %rdi,%rbx
5117(2): jz 0x13(%rip)
5119(5): call 0xffffc507(%rip)
511e(2): test %eax,%eax
5120(2): jz 0xa(%rip)
5122(6): test $0x100,(%rbx)
5128(2): jnz 0x10(%rip)
512a(3): mov %rbx,%rdi
512d(1): pop %rbx
512e(5): jmp 0xffffc4d2(%rip)
5133(5): nop 0x0(%rax,%rax,1)
5138(3): mov %rbx,%rdi
513b(5): mov $0x1,%edx
5140(2): xor %esi,%esi
5142(5): call 0xe(%rip)
5147(3): mov %rbx,%rdi
514a(1): pop %rbx
514b(5): jmp 0xffffc4b5(%rip)

"rpl_fseeko" :
5150(4): mov 0x8(%rdi),%rax
5154(4): cmp %rax,0x10(%rdi)
5158(2): jz 0x8(%rip)
515a(5): jmp 0xffffc516(%rip)
515f(1): nop 
5160(4): mov 0x20(%rdi),%rax
5164(4): cmp %rax,0x28(%rdi)
5168(2): jnz 0xfffffff2(%rip)
516a(5): cmp $0x0,0x48(%rdi)
516f(2): jnz 0xffffffeb(%rip)
5171(2): push %r12
5173(1): push %rbp
5174(3): mov %edx,%r12d
5177(1): push %rbx
5178(3): mov %rsi,%rbp
517b(3): mov %rdi,%rbx
517e(5): call 0xffffc462(%rip)
5183(3): mov %r12d,%edx
5186(3): mov %rbp,%rsi
5189(2): mov %eax,%edi
518b(5): call 0xffffc3b5(%rip)
5190(4): cmp $0xffffffff,%rax
5194(2): jz 0xe(%rip)
5196(3): and $0xef,(%rbx)
5199(7): mov %rax,0x90(%rbx)
51a0(2): xor %eax,%eax
51a2(1): pop %rbx
51a3(1): pop %rbp
51a4(2): pop %r12
51a6(1): ret near (%rsp)

"rpl_mbrtowc" :
51b0(2): push %r13
51b2(2): push %r12
51b4(3): mov %rsi,%r13
51b7(1): push %rbp
51b8(1): push %rbx
51b9(3): mov %rdi,%rbx
51bc(3): mov %rdx,%r12
51bf(4): sub $0x18,%rsp
51c3(9): mov $0x28,%rax
51cc(5): mov %rax,0x8(%rsp)
51d1(2): xor %eax,%eax
51d3(5): lea 0x4(%rsp),%rax
51d8(3): test %rdi,%rdi
51db(4): cmove %rax,%rbx
51df(3): mov %rbx,%rdi
51e2(5): call 0xffffc32e(%rip)
51e7(4): cmp $0xfffffffd,%rax
51eb(3): mov %rax,%rbp
51ee(2): jbe 0x22(%rip)
51f0(3): test %r12,%r12
51f3(2): jz 0x1d(%rip)
51f5(2): xor %edi,%edi
51f7(5): call 0xc9(%rip)
51fc(2): test %al,%al
51fe(2): jnz 0x12(%rip)
5200(5): movzx 0x0(%r13),%eax
5205(5): mov $0x1,%ebp
520a(2): mov %eax,(%rbx)
520c(4): nop 0x0(%rax)
5210(5): mov 0x8(%rsp),%rdx
5215(9): xor $0x28,%rdx
521e(3): mov %rbp,%rax
5221(2): jnz 0xd(%rip)
5223(4): add $0x18,%rsp
5227(1): pop %rbx
5228(1): pop %rbp
5229(2): pop %r12
522b(2): pop %r13
522d(1): ret near (%rsp)
522e(5): call 0xffffc2c2(%rip)

"close_stream" :
5240(2): push %r12
5242(1): push %rbp
5243(3): mov %rdi,%rbp
5246(1): push %rbx
5247(5): call 0xffffc229(%rip)
524c(3): mov 0x0(%rbp),%ebx
524f(3): mov %rbp,%rdi
5252(3): mov %rax,%r12
5255(5): call 0xfffffe3b(%rip)
525a(3): and $0x20,%ebx
525d(2): test %ebx,%ebx
525f(2): jnz 0x19(%rip)
5261(2): test %eax,%eax
5263(2): jz 0xc(%rip)
5265(3): test %r12,%r12
5268(5): mov $0xffffffff,%eax
526d(2): jz 0x3b(%rip)
526f(1): pop %rbx
5270(1): pop %rbp
5271(2): pop %r12
5273(1): ret near (%rsp)
5274(4): nop 0x0(%rax)
5278(2): test %eax,%eax
527a(2): jnz 0x1e(%rip)
527c(5): call 0xffffc1c4(%rip)
5281(6): mov $0x0,(%rax)
5287(5): mov $0xffffffff,%eax
528c(1): pop %rbx
528d(1): pop %rbp
528e(2): pop %r12
5290(1): ret near (%rsp)
5291(7): nop 0x0(%rax)
5298(1): pop %rbx
5299(5): mov $0xffffffff,%eax
529e(1): pop %rbp
529f(2): pop %r12
52a1(1): ret near (%rsp)
52a2(6): nop 0x0(%rax,%rax,1)
52a8(5): call 0xffffc198(%rip)
52ad(3): cmp $0x9,(%rax)
52b0(1): pop %rbx
52b1(1): pop %rbp
52b2(2): pop %r12
52b4(3): setnz %al
52b7(3): movzx %al,%eax
52ba(2): neg %eax
52bc(1): ret near (%rsp)

"hard_locale" :
52c0(4): sub $0x8,%rsp
52c4(2): xor %esi,%esi
52c6(5): call 0xffffc37a(%rip)
52cb(3): mov %rax,%rdx
52ce(5): mov $0x1,%eax
52d3(3): test %rdx,%rdx
52d6(2): jz 0x1f(%rip)
52d8(7): lea 0x1101(%rip),%rdi
52df(5): mov $0x2,%ecx
52e4(3): mov %rdx,%rsi
52e7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
52e9(3): setnbe %cl
52ec(3): sbb $0x0,%cl
52ef(2): xor %eax,%eax
52f1(2): test %cl,%cl
52f3(2): jnz 0xd(%rip)
52f5(4): add $0x8,%rsp
52f9(1): ret near (%rsp)
52fa(6): nop 0x0(%rax,%rax,1)
5300(7): lea 0x10db(%rip),%rdi
5307(5): mov $0x6,%ecx
530c(3): mov %rdx,%rsi
530f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5311(3): setnbe %al
5314(2): sbb $0x0,%al
5316(2): test %al,%al
5318(3): setnz %al
531b(4): add $0x8,%rsp
531f(1): ret near (%rsp)

"locale_charset" :
5320(4): sub $0x8,%rsp
5324(5): mov $0xe,%edi
5329(5): call 0xffffc2e7(%rip)
532e(3): test %rax,%rax
5331(2): jz 0x1f(%rip)
5333(3): cmp $0x0,(%rax)
5336(7): lea 0x10ab(%rip),%rdx
533d(4): cmove %rdx,%rax
5341(4): add $0x8,%rsp
5345(1): ret near (%rsp)
5346(a): nop 0x0(%rax,%rax,1)
5350(7): lea 0x1091(%rip),%rax
5357(4): add $0x8,%rsp
535b(1): ret near (%rsp)

"__libc_csu_init" :
5360(2): push %r15
5362(2): push %r14
5364(3): mov %rdx,%r15
5367(2): push %r13
5369(2): push %r12
536b(7): lea 0x2027de(%rip),%r12
5372(1): push %rbp
5373(7): lea 0x2027de(%rip),%rbp
537a(1): push %rbx
537b(3): mov %edi,%r13d
537e(3): mov %rsi,%r14
5381(3): sub %r12,%rbp
5384(4): sub $0x8,%rsp
5388(4): sar $0x3,%rbp
538c(5): call 0xffffc05c(%rip)
5391(3): test %rbp,%rbp
5394(2): jz 0x22(%rip)
5396(2): xor %ebx,%ebx
5398(8): nop 0x0(%rax,%rax,1)
53a0(3): mov %r15,%rdx
53a3(3): mov %r14,%rsi
53a6(3): mov %r13d,%edi
53a9(4): call 0x0(%r12,%rbx,8)
53ad(4): add $0x1,%rbx
53b1(3): cmp %rbx,%rbp
53b4(2): jnz 0xffffffec(%rip)
53b6(4): add $0x8,%rsp
53ba(1): pop %rbx
53bb(1): pop %rbp
53bc(2): pop %r12
53be(2): pop %r13
53c0(2): pop %r14
53c2(2): pop %r15
53c4(1): ret near (%rsp)

"atexit" :
53e0(7): mov 0x202c21(%rip),%rdx
53e7(2): xor %esi,%esi
53e9(5): jmp 0xffffc2a7(%rip)

"_fini" :
53f0(4): sub $0x8,%rsp
53f4(4): add $0x8,%rsp
53f8(1): ret near (%rsp)

