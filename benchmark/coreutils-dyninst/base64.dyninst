
"free@plt" :
14d0(6): jmp 0x20796a(%rip)
14d6(5): push $0x0

"abort@plt" :
14e0(6): jmp 0x207962(%rip)
14e6(5): push $0x1

"__errno_location@plt" :
14f0(6): jmp 0x20795a(%rip)
14f6(5): push $0x2

"strncmp@plt" :
1500(6): jmp 0x207952(%rip)
1506(5): push $0x3

"_exit@plt" :
1510(6): jmp 0x20794a(%rip)
1516(5): push $0x4

"__fpending@plt" :
1520(6): jmp 0x207942(%rip)
1526(5): push $0x5

"fread_unlocked@plt" :
1530(6): jmp 0x20793a(%rip)
1536(5): push $0x6

"textdomain@plt" :
1540(6): jmp 0x207932(%rip)
1546(5): push $0x7

"fclose@plt" :
1550(6): jmp 0x20792a(%rip)
1556(5): push $0x8

"bindtextdomain@plt" :
1560(6): jmp 0x207922(%rip)
1566(5): push $0x9

"dcgettext@plt" :
1570(6): jmp 0x20791a(%rip)
1576(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1580(6): jmp 0x207912(%rip)
1586(5): push $0xb

"strlen@plt" :
1590(6): jmp 0x20790a(%rip)
1596(5): push $0xc

"__stack_chk_fail@plt" :
15a0(6): jmp 0x207902(%rip)
15a6(5): push $0xd

"getopt_long@plt" :
15b0(6): jmp 0x2078fa(%rip)
15b6(5): push $0xe

"mbrtowc@plt" :
15c0(6): jmp 0x2078f2(%rip)
15c6(5): push $0xf

"strchr@plt" :
15d0(6): jmp 0x2078ea(%rip)
15d6(5): push $0x10

"__overflow@plt" :
15e0(6): jmp 0x2078e2(%rip)
15e6(5): push $0x11

"strrchr@plt" :
15f0(6): jmp 0x2078da(%rip)
15f6(5): push $0x12

"lseek@plt" :
1600(6): jmp 0x2078d2(%rip)
1606(5): push $0x13

"__assert_fail@plt" :
1610(6): jmp 0x2078ca(%rip)
1616(5): push $0x14

"__strtoul_internal@plt" :
1620(6): jmp 0x2078c2(%rip)
1626(5): push $0x15

"memset@plt" :
1630(6): jmp 0x2078ba(%rip)
1636(5): push $0x16

"posix_fadvise@plt" :
1640(6): jmp 0x2078b2(%rip)
1646(5): push $0x17

"memchr@plt" :
1650(6): jmp 0x2078aa(%rip)
1656(5): push $0x18

"memcmp@plt" :
1660(6): jmp 0x2078a2(%rip)
1666(5): push $0x19

"fputs_unlocked@plt" :
1670(6): jmp 0x20789a(%rip)
1676(5): push $0x1a

"calloc@plt" :
1680(6): jmp 0x207892(%rip)
1686(5): push $0x1b

"strcmp@plt" :
1690(6): jmp 0x20788a(%rip)
1696(5): push $0x1c

"memcpy@plt" :
16a0(6): jmp 0x207882(%rip)
16a6(5): push $0x1d

"fileno@plt" :
16b0(6): jmp 0x20787a(%rip)
16b6(5): push $0x1e

"malloc@plt" :
16c0(6): jmp 0x207872(%rip)
16c6(5): push $0x1f

"fflush@plt" :
16d0(6): jmp 0x20786a(%rip)
16d6(5): push $0x20

"nl_langinfo@plt" :
16e0(6): jmp 0x207862(%rip)
16e6(5): push $0x21

"__freading@plt" :
16f0(6): jmp 0x20785a(%rip)
16f6(5): push $0x22

"fwrite_unlocked@plt" :
1700(6): jmp 0x207852(%rip)
1706(5): push $0x23

"realloc@plt" :
1710(6): jmp 0x20784a(%rip)
1716(5): push $0x24

"setlocale@plt" :
1720(6): jmp 0x207842(%rip)
1726(5): push $0x25

"__printf_chk@plt" :
1730(6): jmp 0x20783a(%rip)
1736(5): push $0x26

"memmove@plt" :
1740(6): jmp 0x207832(%rip)
1746(5): push $0x27

"error@plt" :
1750(6): jmp 0x20782a(%rip)
1756(5): push $0x28

"fseeko@plt" :
1760(6): jmp 0x207822(%rip)
1766(5): push $0x29

"fopen@plt" :
1770(6): jmp 0x20781a(%rip)
1776(5): push $0x2a

"__cxa_atexit@plt" :
1780(6): jmp 0x207812(%rip)
1786(5): push $0x2b

"exit@plt" :
1790(6): jmp 0x20780a(%rip)
1796(5): push $0x2c

"fwrite@plt" :
17a0(6): jmp 0x207802(%rip)
17a6(5): push $0x2d

"__fprintf_chk@plt" :
17b0(6): jmp 0x2077fa(%rip)
17b6(5): push $0x2e

"mbsinit@plt" :
17c0(6): jmp 0x2077f2(%rip)
17c6(5): push $0x2f

"iswprint@plt" :
17d0(6): jmp 0x2077ea(%rip)
17d6(5): push $0x30

"__ctype_b_loc@plt" :
17e0(6): jmp 0x2077e2(%rip)
17e6(5): push $0x31

".plt.got" :
17f0(6): jmp 0x2077fa(%rip)
17f6(2): nop 

"_init" :
14a8(4): sub $0x8,%rsp
14ac(7): mov 0x207b2d(%rip),%rax
14b3(3): test %rax,%rax
14b6(2): jz 0x4(%rip)
14b8(2): call %rax
14ba(4): add $0x8,%rsp
14be(1): ret near (%rsp)

"main" :
1800(2): push %r15
1802(2): push %r14
1804(2): push %r13
1806(2): push %r12
1808(3): mov %edi,%r13d
180b(1): push %rbp
180c(1): push %rbx
180d(3): mov %rsi,%r12
1810(5): mov $0x4c,%ebp
1815(2): xor %ebx,%ebx
1817(4): sub $0x78,%rsp
181b(3): mov (%rsi),%rdi
181e(9): mov $0x28,%rax
1827(5): mov %rax,0x68(%rsp)
182c(2): xor %eax,%eax
182e(5): call 0x14d2(%rip)
1833(7): lea 0x4fc7(%rip),%rsi
183a(5): mov $0x6,%edi
183f(5): call 0xfffffee1(%rip)
1844(7): lea 0x4421(%rip),%rsi
184b(7): lea 0x43f1(%rip),%rdi
1852(5): call 0xfffffd0e(%rip)
1857(7): lea 0x43e5(%rip),%rdi
185e(5): call 0xfffffce2(%rip)
1863(7): lea 0x13a6(%rip),%rdi
186a(5): call 0x4316(%rip)
186f(5): mov $0x0,0x30(%rsp)
1874(7): lea 0x2072a5(%rip),%rcx
187b(7): lea 0x4424(%rip),%rdx
1882(3): xor %r8d,%r8d
1885(3): mov %r12,%rsi
1888(3): mov %r13d,%edi
188b(5): call 0xfffffd25(%rip)
1890(3): cmp $0xff,%eax
1893(6): jz 0xbc(%rip)
1899(3): cmp $0x64,%eax
189c(2): jz 0x54(%rip)
189e(2): jle 0x72(%rip)
18a0(3): cmp $0x69,%eax
18a3(2): jz 0x5d(%rip)
18a5(3): cmp $0x77,%eax
18a8(6): jnz 0x705(%rip)
18ae(7): lea 0x43cf(%rip),%rsi
18b5(5): mov $0x5,%edx
18ba(2): xor %edi,%edi
18bc(5): call 0xfffffcb4(%rip)
18c1(7): mov 0x2077d8(%rip),%rdi
18c8(7): lea 0x4f32(%rip),%rcx
18cf(3): mov %rax,%r8
18d2(3): xor %r9d,%r9d
18d5(7): mov $0xffffffff,%rdx
18dc(2): xor %esi,%esi
18de(5): call 0x3b02(%rip)
18e3(3): mov %rax,%rbp
18e6(2): jmp 0xffffff8e(%rip)
18e8(8): nop 0x0(%rax,%rax,1)
18f0(5): mov $0x1,%ebx
18f5(5): jmp 0xffffff7f(%rip)
18fa(6): nop 0x0(%rax,%rax,1)
1900(5): mov $0x1,0x30(%rsp)
1905(5): jmp 0xffffff6f(%rip)
190a(6): nop 0x0(%rax,%rax,1)
1910(5): cmp $0xffffff7d,%eax
1915(6): jnz 0x659(%rip)
191b(7): mov 0x207766(%rip),%rdi
1922(7): mov 0x2076e7(%rip),%rcx
1929(7): lea 0x4366(%rip),%r8
1930(7): lea 0x4308(%rip),%rdx
1937(7): lea 0x4266(%rip),%rsi
193e(3): xor %r9d,%r9d
1941(2): xor %eax,%eax
1943(5): call 0x35ad(%rip)
1948(2): xor %edi,%edi
194a(5): call 0xfffffe46(%rip)
194f(7): movsxd 0x207742(%rip),%rax
1956(3): mov %r13d,%edx
1959(2): sub %eax,%edx
195b(3): sub $0x1,%edx
195e(6): jnle 0x61e(%rip)
1964(3): cmp %r13d,%eax
1967(2): jnl 0x68(%rip)
1969(4): mov 0x0(%r12,%rax,8),%rax
196d(7): lea 0x4956(%rip),%rsi
1974(3): mov %rax,%rdi
1977(5): mov %rax,0x48(%rsp)
197c(5): call 0xfffffd14(%rip)
1981(2): test %eax,%eax
1983(2): jz 0x58(%rip)
1985(5): mov 0x48(%rsp),%rdi
198a(7): lea 0x432b(%rip),%rsi
1991(5): call 0xfffffddf(%rip)
1996(3): test %rax,%rax
1999(3): mov %rax,%r12
199c(2): jnz 0x46(%rip)
199e(5): mov 0x48(%rsp),%rdx
19a3(5): mov $0x3,%esi
19a8(2): xor %edi,%edi
19aa(5): call 0x2e96(%rip)
19af(3): mov %rax,%rbx
19b2(5): call 0xfffffb3e(%rip)
19b7(2): mov (%rax),%esi
19b9(7): lea 0x48c4(%rip),%rdx
19c0(3): mov %rbx,%rcx
19c3(5): mov $0x1,%edi
19c8(2): xor %eax,%eax
19ca(5): call 0xfffffd86(%rip)
19cf(7): lea 0x48f4(%rip),%rax
19d6(5): mov %rax,0x48(%rsp)
19db(7): mov 0x2076ae(%rip),%r12
19e2(5): mov $0x2,%esi
19e7(3): mov %r12,%rdi
19ea(5): call 0x12e6(%rip)
19ef(2): test %bl,%bl
19f1(7): mov 0x207690(%rip),%rax
19f8(6): jz 0x200(%rip)
19fe(5): mov $0x1000,%edi
1a03(5): mov %rax,0x38(%rsp)
1a08(5): call 0x3648(%rip)
1a0d(5): mov $0xc00,%edi
1a12(3): mov %rax,%rbp
1a15(5): call 0x363b(%rip)
1a1a(5): mov %rax,0x40(%rsp)
1a1f(5): lea 0x60(%rsp),%rax
1a24(3): mov %rax,%rdi
1a27(5): mov %rax,0x18(%rsp)
1a2c(5): call 0xe44(%rip)
1a31(5): lea 0x58(%rsp),%rax
1a36(5): mov %r12,0x10(%rsp)
1a3b(5): mov %rbp,0x8(%rsp)
1a40(5): mov %rax,0x20(%rsp)
1a45(3): nop (%rax)
1a48(2): xor %ebx,%ebx
1a4a(2): jmp 0x32(%rip)
1a4c(4): nop 0x0(%rax)
1a50(5): mov 0x10(%rsp),%rax
1a55(3): add %r12,%rbx
1a58(2): mov (%rax),%eax
1a5a(2): test $0x20,%al
1a5c(6): jnz 0x4b5(%rip)
1a62(2): mov %eax,%edx
1a64(3): and $0x10,%edx
1a67(7): cmp $0xfff,%rbx
1a6e(6): jnbe 0xaa(%rip)
1a74(2): test %edx,%edx
1a76(6): jnz 0xa2(%rip)
1a7c(5): mov 0x8(%rsp),%rax
1a81(5): mov 0x10(%rsp),%rcx
1a86(5): mov $0x1000,%edx
1a8b(3): sub %rbx,%rdx
1a8e(5): mov $0x1,%esi
1a93(4): lea 0x0(%rax,%rbx,1),%rdi
1a97(5): call 0xfffffa99(%rip)
1a9c(5): cmp $0x0,0x30(%rsp)
1aa1(3): mov %rax,%r12
1aa4(5): mov %rax,0x58(%rsp)
1aa9(2): jz 0xffffffa7(%rip)
1aab(3): xor %r13d,%r13d
1aae(3): test %r12,%r12
1ab1(2): jz 0xffffff9f(%rip)
1ab3(3): cmp %r12,%r13
1ab6(2): jnb 0xffffff9a(%rip)
1ab8(5): mov 0x8(%rsp),%rax
1abd(4): lea 0x0(%rbx,%r13,1),%r15
1ac1(4): lea 0x0(%rax,%r15,1),%r14
1ac5(4): movsx (%r14),%edi
1ac9(2): mov %edi,%ebp
1acb(5): call 0xd85(%rip)
1ad0(4): cmp $0x3d,%bpl
1ad4(2): jz 0x6(%rip)
1ad6(2): test %al,%al
1ad8(2): jz 0x18(%rip)
1ada(4): add $0x1,%r13
1ade(3): test %r12,%r12
1ae1(2): jnz 0xffffffd2(%rip)
1ae3(5): jmp 0xffffff6d(%rip)
1ae8(8): nop 0x0(%rax,%rax,1)
1af0(5): mov 0x8(%rsp),%rax
1af5(4): sub $0x1,%r12
1af9(3): mov %r14,%rdi
1afc(3): mov %r12,%rdx
1aff(5): mov %r12,0x58(%rsp)
1b04(3): sub %r13,%rdx
1b07(5): lea 0x1(%rax,%r15,1),%rsi
1b0c(5): call 0xfffffc34(%rip)
1b11(2): jmp 0xffffff9d(%rip)
1b13(5): nop 0x0(%rax,%rax,1)
1b18(3): xor %r15d,%r15d
1b1b(5): mov %rbx,0x28(%rsp)
1b20(5): mov 0x8(%rsp),%rbp
1b25(3): mov %r15d,%r14d
1b28(5): mov 0x40(%rsp),%r12
1b2d(5): mov 0x10(%rsp),%rbx
1b32(5): mov 0x38(%rsp),%r15
1b37(2): jmp 0x67(%rip)
1b39(7): nop 0x0(%rax)
1b40(3): test %r14d,%r14d
1b43(6): jnz 0xffffff05(%rip)
1b49(5): mov 0x28(%rsp),%rdx
1b4e(9): mov $0xc00,0x58(%rsp)
1b57(5): mov 0x20(%rsp),%r8
1b5c(5): mov 0x18(%rsp),%rdi
1b61(3): mov %r12,%rcx
1b64(3): mov %rbp,%rsi
1b67(5): call 0xd19(%rip)
1b6c(5): mov 0x58(%rsp),%rdx
1b71(3): mov %r15,%rcx
1b74(5): mov $0x1,%esi
1b79(3): mov %r12,%rdi
1b7c(3): mov %eax,%r13d
1b7f(5): call 0xfffffb81(%rip)
1b84(5): cmp 0x58(%rsp),%rax
1b89(6): jb 0x35c(%rip)
1b8f(3): test %r13b,%r13b
1b92(6): jz 0x32f(%rip)
1b98(2): mov (%rbx),%eax
1b9a(4): add $0x1,%r14d
1b9e(2): test $0x10,%al
1ba0(2): jz 0xffffffa0(%rip)
1ba2(4): cmp $0x1,%r14d
1ba6(2): jnbe 0x19(%rip)
1ba8(2): jnz 0xffffffa1(%rip)
1baa(4): mov 0x60(%rsp),%eax
1bae(2): test %eax,%eax
1bb0(2): jz 0xf(%rip)
1bb2(9): mov $0xc00,0x58(%rsp)
1bbb(2): xor %edx,%edx
1bbd(2): jmp 0xffffff9a(%rip)
1bbf(3): mov %rbx,%r12
1bc2(3): mov %r12,%rdi
1bc5(5): call 0x3c6b(%rip)
1bca(3): add $0x1,%eax
1bcd(6): jz 0x288(%rip)
1bd3(2): xor %eax,%eax
1bd5(5): mov 0x68(%rsp),%rcx
1bda(9): xor $0x28,%rcx
1be3(6): jnz 0x35a(%rip)
1be9(4): add $0x78,%rsp
1bed(1): pop %rbx
1bee(1): pop %rbp
1bef(2): pop %r12
1bf1(2): pop %r13
1bf3(2): pop %r14
1bf5(2): pop %r15
1bf7(1): ret near (%rsp)
1bf8(5): mov $0x7800,%edi
1bfd(5): mov %rax,0x18(%rsp)
1c02(2): xor %ebx,%ebx
1c04(5): call 0x344c(%rip)
1c09(5): mov $0xa000,%edi
1c0e(3): mov %rax,%r13
1c11(6): mov $0x7800,%r14d
1c17(5): call 0x3439(%rip)
1c1c(5): mov %rbp,0x8(%rsp)
1c21(5): mov %rax,0x10(%rsp)
1c26(2): xor %ebp,%ebp
1c28(2): jmp 0x15(%rip)
1c2a(6): nop 0x0(%rax,%rax,1)
1c30(7): cmp $0x77ff,%rbp
1c37(6): jnbe 0x98(%rip)
1c3d(5): lea 0x0(%r13,%rbp,1),%rdi
1c42(3): mov %r14,%rdx
1c45(3): mov %r12,%rcx
1c48(3): sub %rbp,%rdx
1c4b(5): mov $0x1,%esi
1c50(5): call 0xfffff8e0(%rip)
1c55(3): add %rax,%rbp
1c58(4): mov (%r12),%eax
1c5c(2): test $0x30,%al
1c5e(2): jz 0xffffffd2(%rip)
1c60(3): test %rbp,%rbp
1c63(2): jnz 0x6c(%rip)
1c65(3): test %rbx,%rbx
1c68(5): mov 0x8(%rsp),%rbp
1c6d(2): jz 0x2e(%rip)
1c6f(3): test %rbp,%rbp
1c72(2): jz 0x29(%rip)
1c74(5): mov 0x18(%rsp),%rcx
1c79(4): mov 0x28(%rcx),%rax
1c7d(4): cmp 0x30(%rcx),%rax
1c81(6): jnb 0x336(%rip)
1c87(5): mov 0x18(%rsp),%rcx
1c8c(4): lea 0x1(%rax),%rdx
1c90(4): mov %rdx,0x28(%rcx)
1c94(3): mov $0xa,(%rax)
1c97(4): mov (%r12),%eax
1c9b(2): test $0x20,%al
1c9d(6): jz 0xffffff25(%rip)
1ca3(7): lea 0x4015(%rip),%rsi
1caa(5): mov $0x5,%edx
1caf(2): xor %edi,%edi
1cb1(5): call 0xfffff8bf(%rip)
1cb6(3): mov %rax,%rbx
1cb9(5): call 0xfffff837(%rip)
1cbe(2): mov (%rax),%esi
1cc0(3): mov %rbx,%rdx
1cc3(5): mov $0x1,%edi
1cc8(2): xor %eax,%eax
1cca(5): call 0xfffffa86(%rip)
1ccf(4): lea 0x2(%rbp),%rax
1cd3(5): mov $0x3,%ecx
1cd8(2): xor %edx,%edx
1cda(3): mov %rbp,%rsi
1cdd(3): mov %r13,%rdi
1ce0(3): div %rcx,%rax
1ce3(5): mov 0x10(%rsp),%rdx
1ce8(8): lea 0x0(,%rax,4),%r15
1cf0(3): mov %r15,%rcx
1cf3(5): call 0x90d(%rip)
1cf8(6): cmp $0x0,0x8(%rsp)
1cfe(6): jz 0xcb(%rip)
1d04(3): xor %r10d,%r10d
1d07(3): test %r15,%r15
1d0a(6): jz 0xa1(%rip)
1d10(5): mov %r13,0x28(%rsp)
1d15(5): mov %rbp,0x30(%rsp)
1d1a(3): mov %rbx,%r13
1d1d(3): mov %r15,%rbp
1d20(5): mov %r12,0x20(%rsp)
1d25(5): mov 0x18(%rsp),%r15
1d2a(3): mov %r10,%rbx
1d2d(2): jmp 0x24(%rip)
1d2f(1): nop 
1d30(4): mov 0x28(%r15),%rax
1d34(4): cmp 0x30(%r15),%rax
1d38(6): jnb 0xdb(%rip)
1d3e(4): lea 0x1(%rax),%rdx
1d42(4): mov %rdx,0x28(%r15)
1d46(3): mov $0xa,(%rax)
1d49(3): xor %r13d,%r13d
1d4c(3): cmp %rbx,%rbp
1d4f(2): jbe 0x4a(%rip)
1d51(5): mov 0x8(%rsp),%r12
1d56(3): mov %rbp,%rax
1d59(3): sub %rbx,%rax
1d5c(3): sub %r13,%r12
1d5f(3): cmp %rax,%r12
1d62(4): cmovnbe %rax,%r12
1d66(3): test %r12,%r12
1d69(2): jz 0xffffffc7(%rip)
1d6b(5): mov 0x10(%rsp),%rax
1d70(7): mov 0x207311(%rip),%rcx
1d77(3): mov %r12,%rdx
1d7a(5): mov $0x1,%esi
1d7f(4): lea 0x0(%rax,%rbx,1),%rdi
1d83(5): call 0xfffff97d(%rip)
1d88(3): cmp %rax,%r12
1d8b(6): jnbe 0x1b7(%rip)
1d91(3): add %r12,%r13
1d94(3): add %r12,%rbx
1d97(2): jmp 0xffffffb5(%rip)
1d99(3): mov %r13,%rbx
1d9c(5): mov 0x20(%rsp),%r12
1da1(5): mov 0x28(%rsp),%r13
1da6(5): mov 0x30(%rsp),%rbp
1dab(4): mov (%r12),%eax
1daf(2): test $0x30,%al
1db1(6): jnz 0xfffffeb4(%rip)
1db7(7): cmp $0x7800,%rbp
1dbe(6): jz 0xfffffe68(%rip)
1dc4(5): jmp 0xfffffea1(%rip)
1dc9(7): mov 0x2072b8(%rip),%rcx
1dd0(5): mov 0x10(%rsp),%rdi
1dd5(3): mov %r15,%rdx
1dd8(5): mov $0x1,%esi
1ddd(5): call 0xfffff923(%rip)
1de2(3): cmp %rax,%r15
1de5(2): jbe 0xffffffc6(%rip)
1de7(7): lea 0x3edc(%rip),%rsi
1dee(5): mov $0x5,%edx
1df3(2): xor %edi,%edi
1df5(5): call 0xfffff77b(%rip)
1dfa(3): mov %rax,%rbx
1dfd(5): call 0xfffff6f3(%rip)
1e02(2): mov (%rax),%esi
1e04(3): mov %rbx,%rdx
1e07(5): mov $0x1,%edi
1e0c(2): xor %eax,%eax
1e0e(5): call 0xfffff942(%rip)
1e13(5): mov $0xa,%esi
1e18(3): mov %r15,%rdi
1e1b(5): call 0xfffff7c5(%rip)
1e20(3): add $0x1,%eax
1e23(6): jnz 0xffffff26(%rip)
1e29(7): lea 0x3e9a(%rip),%rsi
1e30(5): mov $0x5,%edx
1e35(2): xor %edi,%edi
1e37(5): call 0xfffff739(%rip)
1e3c(3): mov %rax,%rbx
1e3f(5): call 0xfffff6b1(%rip)
1e44(2): mov (%rax),%esi
1e46(3): mov %rbx,%rdx
1e49(5): mov $0x1,%edi
1e4e(2): xor %eax,%eax
1e50(5): call 0xfffff900(%rip)
1e55(5): mov 0x48(%rsp),%rdi
1e5a(7): lea 0x4469(%rip),%rsi
1e61(5): call 0xfffff82f(%rip)
1e66(2): mov %eax,%ebp
1e68(5): call 0xfffff688(%rip)
1e6d(2): test %ebp,%ebp
1e6f(3): mov %rax,%rbx
1e72(2): jnz 0x26(%rip)
1e74(7): lea 0x3e69(%rip),%rsi
1e7b(5): mov $0x5,%edx
1e80(2): xor %edi,%edi
1e82(5): call 0xfffff6ee(%rip)
1e87(2): mov (%rbx),%esi
1e89(3): mov %rax,%rdx
1e8c(5): mov $0x1,%edi
1e91(2): xor %eax,%eax
1e93(5): call 0xfffff8bd(%rip)
1e98(5): mov 0x48(%rsp),%rdx
1e9d(5): mov $0x3,%esi
1ea2(2): xor %edi,%edi
1ea4(5): call 0x299c(%rip)
1ea9(2): mov (%rbx),%esi
1eab(7): lea 0x43d2(%rip),%rdx
1eb2(3): mov %rax,%rcx
1eb5(5): mov $0x1,%edi
1eba(2): xor %eax,%eax
1ebc(5): call 0xfffff894(%rip)
1ec1(7): lea 0x3e0e(%rip),%rsi
1ec8(5): mov $0x5,%edx
1ecd(2): xor %edi,%edi
1ecf(5): call 0xfffff6a1(%rip)
1ed4(2): xor %esi,%esi
1ed6(3): mov %rax,%rdx
1ed9(5): mov $0x1,%edi
1ede(2): xor %eax,%eax
1ee0(5): call 0xfffff870(%rip)
1ee5(7): lea 0x3dde(%rip),%rsi
1eec(5): mov $0x5,%edx
1ef1(2): xor %edi,%edi
1ef3(5): call 0xfffff67d(%rip)
1ef8(3): mov %rax,%rbx
1efb(5): call 0xfffff5f5(%rip)
1f00(2): mov (%rax),%esi
1f02(3): mov %rbx,%rdx
1f05(5): mov $0x1,%edi
1f0a(2): xor %eax,%eax
1f0c(5): call 0xfffff844(%rip)
1f11(7): lea 0x3da7(%rip),%rsi
1f18(5): mov $0x5,%edx
1f1d(2): xor %edi,%edi
1f1f(5): call 0xfffff651(%rip)
1f24(3): mov %rax,%rbx
1f27(5): call 0xfffff5c9(%rip)
1f2c(2): mov (%rax),%esi
1f2e(3): mov %rbx,%rdx
1f31(5): mov $0x1,%edi
1f36(2): xor %eax,%eax
1f38(5): call 0xfffff818(%rip)
1f3d(5): call 0xfffff663(%rip)
1f42(7): lea 0x3d81(%rip),%rsi
1f49(5): mov $0x5,%edx
1f4e(2): xor %edi,%edi
1f50(5): call 0xfffff620(%rip)
1f55(3): mov %rax,%rbx
1f58(5): call 0xfffff598(%rip)
1f5d(2): mov (%rax),%esi
1f5f(3): mov %rbx,%rdx
1f62(5): mov $0x1,%edi
1f67(2): xor %eax,%eax
1f69(5): call 0xfffff7e7(%rip)
1f6e(5): cmp $0xffffff7e,%eax
1f73(2): jnz 0x3a(%rip)
1f75(2): xor %edi,%edi
1f77(5): call 0x199(%rip)
1f7c(5): mov 0x8(%r12,%rax,8),%rdi
1f81(5): call 0x2a8f(%rip)
1f86(7): lea 0x3d1e(%rip),%rsi
1f8d(3): mov %rax,%rbx
1f90(5): mov $0x5,%edx
1f95(2): xor %edi,%edi
1f97(5): call 0xfffff5d9(%rip)
1f9c(3): mov %rbx,%rcx
1f9f(3): mov %rax,%rdx
1fa2(2): xor %esi,%esi
1fa4(2): xor %edi,%edi
1fa6(2): xor %eax,%eax
1fa8(5): call 0xfffff7a8(%rip)
1fad(5): mov $0x1,%edi
1fb2(5): call 0x15e(%rip)
1fb7(5): mov $0xa,%esi
1fbc(3): mov %rcx,%rdi
1fbf(5): call 0xfffff621(%rip)
1fc4(3): add $0x1,%eax
1fc7(6): jnz 0xfffffcd0(%rip)
1fcd(7): lea 0x3cf6(%rip),%rsi
1fd4(5): mov $0x5,%edx
1fd9(2): xor %edi,%edi
1fdb(5): call 0xfffff595(%rip)
1fe0(3): mov %rax,%rbx
1fe3(5): call 0xfffff50d(%rip)
1fe8(2): mov (%rax),%esi
1fea(3): mov %rbx,%rdx
1fed(5): mov $0x1,%edi
1ff2(2): xor %eax,%eax
1ff4(5): call 0xfffff75c(%rip)
1ff9(7): nop 0x0(%rax)
2000(2): xor %ebp,%ebp
2002(3): mov %rdx,%r9
2005(1): pop %rsi
2006(3): mov %rsp,%rdx
2009(4): and $0xfffffff0,%rsp
200d(1): push %rax
200e(1): push %rsp
200f(7): lea 0x3b5a(%rip),%r8
2016(7): lea 0x3ae3(%rip),%rcx
201d(7): lea 0xfffff7dc(%rip),%rdi
2024(6): call 0x206fae(%rip)
202a(1): hlt 

"_start" :
2000(2): xor %ebp,%ebp
2002(3): mov %rdx,%r9
2005(1): pop %rsi
2006(3): mov %rsp,%rdx
2009(4): and $0xfffffff0,%rsp
200d(1): push %rax
200e(1): push %rsp
200f(7): lea 0x3b5a(%rip),%r8
2016(7): lea 0x3ae3(%rip),%rcx
201d(7): lea 0xfffff7dc(%rip),%rdi
2024(6): call 0x206fae(%rip)
202a(1): hlt 

"deregister_tm_clones" :
2030(7): lea 0x207049(%rip),%rdi
2037(1): push %rbp
2038(7): lea 0x207041(%rip),%rax
203f(3): cmp %rdi,%rax
2042(3): mov %rsp,%rbp
2045(2): jz 0x1b(%rip)
2047(7): mov 0x206f82(%rip),%rax
204e(3): test %rax,%rax
2051(2): jz 0xf(%rip)
2053(1): pop %rbp
2054(2): jmp %rax
2056(a): nop 0x0(%rax,%rax,1)
2060(1): pop %rbp
2061(1): ret near (%rsp)

"register_tm_clones" :
2070(7): lea 0x207009(%rip),%rdi
2077(7): lea 0x207002(%rip),%rsi
207e(1): push %rbp
207f(3): sub %rdi,%rsi
2082(3): mov %rsp,%rbp
2085(4): sar $0x3,%rsi
2089(3): mov %rsi,%rax
208c(4): shr $0x3f,%rax
2090(3): add %rax,%rsi
2093(3): sar $0x1,%rsi
2096(2): jz 0x1a(%rip)
2098(7): mov 0x206f49(%rip),%rax
209f(3): test %rax,%rax
20a2(2): jz 0xe(%rip)
20a4(1): pop %rbp
20a5(2): jmp %rax
20a7(9): nop 0x0(%rax,%rax,1)
20b0(1): pop %rbp
20b1(1): ret near (%rsp)

"__do_global_dtors_aux" :
20c0(7): cmp $0x0,0x207001(%rip)
20c7(2): jnz 0x31(%rip)
20c9(8): cmp $0x0,0x206f1f(%rip)
20d1(1): push %rbp
20d2(3): mov %rsp,%rbp
20d5(2): jz 0xe(%rip)
20d7(7): mov 0x206f2a(%rip),%rdi
20de(5): call 0xfffff712(%rip)
20e3(5): call 0xffffff4d(%rip)
20e8(7): mov $0x1,0x206fd9(%rip)
20ef(1): pop %rbp
20f0(1): ret near (%rsp)
20f1(7): nop 0x0(%rax)
20f8(2): REP ret near (%rsp)

"frame_dummy" :
2100(1): push %rbp
2101(3): mov %rsp,%rbp
2104(1): pop %rbp
2105(5): jmp 0xffffff6b(%rip)

"usage" :
2110(2): push %r13
2112(2): push %r12
2114(5): mov $0x5,%edx
2119(1): push %rbp
211a(1): push %rbx
211b(2): mov %edi,%ebp
211d(7): sub $0x88,%rsp
2124(7): mov 0x206fb5(%rip),%rbx
212b(9): mov $0x28,%rax
2134(5): mov %rax,0x78(%rsp)
2139(2): xor %eax,%eax
213b(2): test %edi,%edi
213d(2): jz 0x30(%rip)
213f(7): lea 0x3be2(%rip),%rsi
2146(2): xor %edi,%edi
2148(5): call 0xfffff428(%rip)
214d(7): mov 0x206f6c(%rip),%rdi
2154(3): mov %rax,%rdx
2157(3): mov %rbx,%rcx
215a(5): mov $0x1,%esi
215f(2): xor %eax,%eax
2161(5): call 0xfffff64f(%rip)
2166(2): mov %ebp,%edi
2168(5): call 0xfffff628(%rip)
216d(7): lea 0x3a37(%rip),%rsi
2174(2): xor %edi,%edi
2176(5): call 0xfffff3fa(%rip)
217b(3): mov %rbx,%rdx
217e(3): mov %rax,%rsi
2181(5): mov $0x1,%edi
2186(2): xor %eax,%eax
2188(5): call 0xfffff5a8(%rip)
218d(7): lea 0x3bbc(%rip),%rsi
2194(5): mov $0x5,%edx
2199(2): xor %edi,%edi
219b(5): call 0xfffff3d5(%rip)
21a0(5): mov $0x40,%edx
21a5(3): mov %rax,%rsi
21a8(5): mov $0x1,%edi
21ad(2): xor %eax,%eax
21af(5): call 0xfffff581(%rip)
21b4(7): mov 0x206ecd(%rip),%rbx
21bb(7): lea 0x3bd6(%rip),%rsi
21c2(5): mov $0x5,%edx
21c7(2): xor %edi,%edi
21c9(5): call 0xfffff3a7(%rip)
21ce(3): mov %rbx,%rsi
21d1(3): mov %rax,%rdi
21d4(5): call 0xfffff49c(%rip)
21d9(7): mov 0x206ea8(%rip),%rbx
21e0(7): lea 0x3be9(%rip),%rsi
21e7(5): mov $0x5,%edx
21ec(2): xor %edi,%edi
21ee(5): call 0xfffff382(%rip)
21f3(3): mov %rbx,%rsi
21f6(3): mov %rax,%rdi
21f9(5): call 0xfffff477(%rip)
21fe(7): mov 0x206e83(%rip),%rbx
2205(7): lea 0x3c14(%rip),%rsi
220c(5): mov $0x5,%edx
2211(2): xor %edi,%edi
2213(5): call 0xfffff35d(%rip)
2218(3): mov %rbx,%rsi
221b(3): mov %rax,%rdi
221e(5): call 0xfffff452(%rip)
2223(7): mov 0x206e5e(%rip),%rbx
222a(7): lea 0x3ce7(%rip),%rsi
2231(5): mov $0x5,%edx
2236(2): xor %edi,%edi
2238(5): call 0xfffff338(%rip)
223d(3): mov %rbx,%rsi
2240(3): mov %rax,%rdi
2243(5): call 0xfffff42d(%rip)
2248(7): mov 0x206e39(%rip),%rbx
224f(7): lea 0x3cf2(%rip),%rsi
2256(5): mov $0x5,%edx
225b(2): xor %edi,%edi
225d(5): call 0xfffff313(%rip)
2262(3): mov %rbx,%rsi
2265(3): mov %rax,%rdi
2268(7): lea 0x3935(%rip),%rbx
226f(5): call 0xfffff401(%rip)
2274(7): lea 0x3d05(%rip),%rsi
227b(5): mov $0x5,%edx
2280(2): xor %edi,%edi
2282(5): call 0xfffff2ee(%rip)
2287(7): lea 0x3916(%rip),%rcx
228e(3): mov %rax,%rsi
2291(5): mov $0x1,%edi
2296(2): xor %eax,%eax
2298(3): mov %rcx,%rdx
229b(5): call 0xfffff495(%rip)
22a0(7): lea 0x3922(%rip),%rax
22a7(7): lea 0x395c(%rip),%rcx
22ae(9): mov $0x0,0x60(%rsp)
22b7(9): mov $0x0,0x68(%rsp)
22c0(3): mov %rsp,%rdx
22c3(4): mov %rax,(%rsp)
22c7(7): lea 0x38fd(%rip),%rax
22ce(5): mov %rcx,0x30(%rsp)
22d3(7): lea 0x393a(%rip),%rcx
22da(5): mov %rax,0x8(%rsp)
22df(7): lea 0x395d(%rip),%rax
22e6(5): mov %rcx,0x40(%rsp)
22eb(7): lea 0x392c(%rip),%rcx
22f2(5): mov %rax,0x10(%rsp)
22f7(7): lea 0x38dd(%rip),%rax
22fe(5): mov %rcx,0x50(%rsp)
2303(5): mov %rax,0x18(%rsp)
2308(7): lea 0x38e2(%rip),%rax
230f(5): mov %rax,0x20(%rsp)
2314(7): lea 0x38e0(%rip),%rax
231b(5): mov %rax,0x28(%rsp)
2320(5): mov %rax,0x38(%rsp)
2325(5): mov %rax,0x48(%rsp)
232a(5): mov %rax,0x58(%rsp)
232f(1): nop 
2330(4): add $0x10,%rdx
2334(3): mov (%rdx),%rdi
2337(3): test %rdi,%rdi
233a(2): jz 0x15(%rip)
233c(5): mov $0x7,%ecx
2341(3): mov %rbx,%rsi
2344(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2346(3): setnbe %al
2349(2): sbb $0x0,%al
234b(2): test %al,%al
234d(2): jnz 0xffffffe3(%rip)
234f(4): mov 0x8(%rdx),%r12
2353(2): xor %edi,%edi
2355(5): mov $0x5,%edx
235a(7): lea 0x38c7(%rip),%rsi
2361(3): test %r12,%r12
2364(6): jz 0xc7(%rip)
236a(5): call 0xfffff206(%rip)
236f(7): lea 0x3d1a(%rip),%rcx
2376(7): lea 0x38c2(%rip),%rdx
237d(3): mov %rax,%rsi
2380(5): mov $0x1,%edi
2385(2): xor %eax,%eax
2387(5): call 0xfffff3a9(%rip)
238c(2): xor %esi,%esi
238e(5): mov $0x5,%edi
2393(5): call 0xfffff38d(%rip)
2398(3): test %rax,%rax
239b(2): jz 0x1e(%rip)
239d(7): lea 0x38a9(%rip),%rsi
23a4(5): mov $0x3,%edx
23a9(3): mov %rax,%rdi
23ac(5): call 0xfffff154(%rip)
23b1(2): test %eax,%eax
23b3(6): jnz 0x10d(%rip)
23b9(7): lea 0x3891(%rip),%rsi
23c0(2): xor %edi,%edi
23c2(5): mov $0x5,%edx
23c7(5): call 0xfffff1a9(%rip)
23cc(7): lea 0x37d1(%rip),%rcx
23d3(7): lea 0x3cb6(%rip),%rdx
23da(3): mov %rax,%rsi
23dd(5): mov $0x1,%edi
23e2(2): xor %eax,%eax
23e4(5): call 0xfffff34c(%rip)
23e9(3): cmp %rbx,%r12
23ec(7): lea 0x37f2(%rip),%rcx
23f3(7): lea 0x4407(%rip),%rbx
23fa(4): cmove %rcx,%rbx
23fe(7): lea 0x3cfb(%rip),%rsi
2405(2): xor %edi,%edi
2407(5): mov $0x5,%edx
240c(5): call 0xfffff164(%rip)
2411(3): mov %rbx,%rcx
2414(3): mov %rax,%rsi
2417(3): mov %r12,%rdx
241a(5): mov $0x1,%edi
241f(2): xor %eax,%eax
2421(5): call 0xfffff30f(%rip)
2426(5): jmp 0xfffffd40(%rip)
242b(5): call 0xfffff145(%rip)
2430(7): lea 0x3c59(%rip),%rcx
2437(7): lea 0x3801(%rip),%rdx
243e(3): mov %rax,%rsi
2441(5): mov $0x1,%edi
2446(2): xor %eax,%eax
2448(5): call 0xfffff2e8(%rip)
244d(2): xor %esi,%esi
244f(5): mov $0x5,%edi
2454(5): call 0xfffff2cc(%rip)
2459(3): test %rax,%rax
245c(2): jz 0x1a(%rip)
245e(7): lea 0x37e8(%rip),%rsi
2465(5): mov $0x3,%edx
246a(3): mov %rax,%rdi
246d(5): call 0xfffff093(%rip)
2472(2): test %eax,%eax
2474(2): jnz 0x45(%rip)
2476(7): lea 0x37d4(%rip),%rsi
247d(5): mov $0x5,%edx
2482(2): xor %edi,%edi
2484(7): lea 0x3719(%rip),%r12
248b(7): lea 0x3753(%rip),%rbx
2492(5): call 0xfffff0de(%rip)
2497(7): lea 0x3706(%rip),%rcx
249e(7): lea 0x3beb(%rip),%rdx
24a5(3): mov %rax,%rsi
24a8(5): mov $0x1,%edi
24ad(2): xor %eax,%eax
24af(5): call 0xfffff281(%rip)
24b4(5): jmp 0xffffff4a(%rip)
24b9(7): lea 0x36e4(%rip),%r12
24c0(7): mov 0x206bc1(%rip),%r13
24c7(7): lea 0x3bea(%rip),%rsi
24ce(2): xor %edi,%edi
24d0(5): mov $0x5,%edx
24d5(5): call 0xfffff09b(%rip)
24da(3): mov %r13,%rsi
24dd(3): mov %rax,%rdi
24e0(5): call 0xfffff190(%rip)
24e5(5): jmp 0xfffffed4(%rip)

"decode_4" :
24f0(2): xor %eax,%eax
24f2(4): cmp $0x1,%rsi
24f6(6): jbe 0x93(%rip)
24fc(4): movzx (%rdi),%r8d
2500(7): lea 0x3c39(%rip),%r9
2507(5): movzx 0x0(%r9,%r8,1),%r8d
250c(3): test %r8b,%r8b
250f(2): js 0x7a(%rip)
2511(5): movzx 0x1(%rdi),%r10d
2516(5): movzx 0x0(%r9,%r10,1),%r10d
251b(3): test %r10b,%r10b
251e(2): js 0x6b(%rip)
2520(4): cmp $0x0,(%rcx)
2524(3): mov (%rdx),%rax
2527(2): jnz 0x79(%rip)
2529(4): cmp $0x2,%rsi
252d(2): jz 0x69(%rip)
252f(5): movzx 0x2(%rdi),%r8d
2534(4): cmp $0x3d,%r8b
2538(2): jz 0x58(%rip)
253a(5): movzx 0x0(%r9,%r8,1),%r8d
253f(3): test %r8b,%r8b
2542(2): js 0x54(%rip)
2544(4): cmp $0x0,(%rcx)
2548(2): jnz 0x78(%rip)
254a(4): cmp $0x3,%rsi
254e(2): jz 0x48(%rip)
2550(4): movzx 0x3(%rdi),%edi
2554(4): cmp $0x3d,%dil
2558(6): jz 0x98(%rip)
255e(5): movzx 0x0(%r9,%rdi,1),%esi
2563(3): test %sil,%sil
2566(2): js 0x30(%rip)
2568(4): cmp $0x0,(%rcx)
256c(2): jz 0x15(%rip)
256e(4): shl/sal $0x6,%r8d
2572(4): add $0x1,%rax
2576(3): or %esi,%r8d
2579(4): mov %r8b,0xffffffff(%rax)
257d(4): sub $0x1,(%rcx)
2581(3): mov %rax,(%rdx)
2584(5): mov $0x1,%eax
2589(2): REP ret near (%rsp)
258b(5): nop 0x0(%rax,%rax,1)
2590(4): cmp $0x4,%rsi
2594(2): jz 0x4c(%rip)
2596(3): mov %rax,(%rdx)
2599(2): xor %eax,%eax
259b(1): ret near (%rsp)
259c(4): nop 0x0(%rax)
25a0(3): mov %r10d,%r11d
25a3(4): shl/sal $0x2,%r8d
25a7(4): add $0x1,%rax
25ab(4): sar $0x4,%r11b
25af(3): or %r11d,%r8d
25b2(4): mov %r8b,0xffffffff(%rax)
25b6(4): sub $0x1,(%rcx)
25ba(5): jmp 0xffffff6f(%rip)
25bf(1): nop 
25c0(3): mov %r8d,%r11d
25c3(4): shl/sal $0x4,%r10d
25c7(4): add $0x1,%rax
25cb(4): sar $0x2,%r11b
25cf(3): or %r11d,%r10d
25d2(4): mov %r10b,0xffffffff(%rax)
25d6(4): sub $0x1,(%rcx)
25da(5): jmp 0xffffff70(%rip)
25df(1): nop 
25e0(4): cmp $0x3d,0x3(%rdi)
25e4(2): jnz 0xffffffb2(%rip)
25e6(2): jmp 0xffffff9b(%rip)
25e8(8): nop 0x0(%rax,%rax,1)
25f0(4): cmp $0x4,%rsi
25f4(2): jnz 0xffffffa2(%rip)
25f6(2): jmp 0xffffff8b(%rip)

"base64_encode" :
2600(3): test $0x3,%cl
2603(2): jnz 0x16(%rip)
2605(3): mov %rcx,%rax
2608(4): shr $0x2,%rax
260c(4): lea 0x0(%rax,%rax,2),%rax
2610(3): cmp %rsi,%rax
2613(6): jz 0x115(%rip)
2619(7): lea 0x3c20(%rip),%r9
2620(5): jmp 0x86(%rip)
2625(3): nop (%rax)
2628(5): movzx 0x1(%rdi),%r8d
262d(3): mov %r8d,%r10d
2630(4): shr $0x4,%r10b
2634(3): add %r10d,%eax
2637(3): and $0x3f,%eax
263a(4): cmp $0x2,%rcx
263e(5): movzx 0x0(%r9,%rax,1),%eax
2643(3): mov %al,0x1(%rdx)
2646(6): jz 0xdc(%rip)
264c(4): shl/sal $0x2,%r8d
2650(4): cmp $0x2,%rsi
2654(6): jz 0xbc(%rip)
265a(4): movzx 0x2(%rdi),%eax
265e(3): mov %eax,%r10d
2661(4): shr $0x6,%r10b
2665(3): add %r10d,%r8d
2668(4): and $0x3f,%r8d
266c(4): cmp $0x3,%rcx
2670(5): movzx 0x0(%r9,%r8,1),%r8d
2675(4): mov %r8b,0x2(%rdx)
2679(6): jz 0xa9(%rip)
267f(3): and $0x3f,%eax
2682(4): cmp $0x4,%rcx
2686(5): movzx 0x0(%r9,%rax,1),%eax
268b(3): mov %al,0x3(%rdx)
268e(6): jz 0x94(%rip)
2694(4): sub $0x3,%rsi
2698(2): jz 0x6(%rip)
269a(4): add $0x3,%rdi
269e(4): add $0x4,%rdx
26a2(4): sub $0x4,%rcx
26a6(3): test %rsi,%rsi
26a9(6): jz 0xff(%rip)
26af(3): test %rcx,%rcx
26b2(6): jz 0xf6(%rip)
26b8(3): movzx (%rdi),%eax
26bb(3): mov %eax,%r8d
26be(4): shr $0x2,%r8b
26c2(4): and $0x3f,%r8d
26c6(4): cmp $0x1,%rcx
26ca(5): movzx 0x0(%r9,%r8,1),%r8d
26cf(3): mov %r8b,(%rdx)
26d2(2): jz 0x50(%rip)
26d4(3): shl/sal $0x4,%eax
26d7(4): cmp $0x1,%rsi
26db(6): jnz 0xffffff4d(%rip)
26e1(3): and $0x30,%eax
26e4(4): cmp $0x2,%rcx
26e8(5): movzx 0x0(%r9,%rax,1),%eax
26ed(3): mov %al,0x1(%rdx)
26f0(2): jz 0x32(%rip)
26f2(4): cmp $0x3,%rcx
26f6(4): mov $0x3d,0x2(%rdx)
26fa(2): jz 0x28(%rip)
26fc(4): cmp $0x4,%rcx
2700(4): mov $0x3d,0x3(%rdx)
2704(2): jz 0x1e(%rip)
2706(2): xor %esi,%esi
2708(2): jmp 0xffffff96(%rip)
270a(6): nop 0x0(%rax,%rax,1)
2710(4): and $0x3c,%r8d
2714(4): cmp $0x3,%rcx
2718(5): movzx 0x0(%r9,%r8,1),%eax
271d(3): mov %al,0x2(%rdx)
2720(2): jnz 0xffffffdc(%rip)
2722(2): REP ret near (%rsp)
2724(4): nop 0x0(%rax)
2728(3): test %rax,%rax
272b(4): lea 0x0(%rdi,%rax,1),%r8
272f(7): lea 0x3b0a(%rip),%rcx
2736(2): jz 0xffffffec(%rip)
2738(8): nop 0x0(%rax,%rax,1)
2740(3): movzx (%rdi),%eax
2743(4): add $0x3,%rdi
2747(4): add $0x4,%rdx
274b(2): mov %eax,%esi
274d(3): shl/sal $0x4,%eax
2750(4): shr $0x2,%sil
2754(3): and $0x3f,%esi
2757(4): movzx 0x0(%rcx,%rsi,1),%esi
275b(4): mov %sil,0xfffffffc(%rdx)
275f(4): movzx 0xfffffffe(%rdi),%esi
2763(3): mov %esi,%r9d
2766(4): shr $0x4,%r9b
276a(3): add %r9d,%eax
276d(3): and $0x3f,%eax
2770(4): movzx 0x0(%rcx,%rax,1),%eax
2774(3): mov %al,0xfffffffd(%rdx)
2777(4): movzx 0xffffffff(%rdi),%eax
277b(3): mov %eax,%r9d
277e(3): and $0x3f,%eax
2781(4): shr $0x6,%r9b
2785(4): movzx 0x0(%rcx,%rax,1),%eax
2789(4): lea 0x0(%r9,%rsi,4),%esi
278d(3): and $0x3f,%esi
2790(4): movzx 0x0(%rcx,%rsi,1),%esi
2794(4): mov %sil,0xfffffffe(%rdx)
2798(3): cmp %rdi,%r8
279b(3): mov %al,0xffffffff(%rdx)
279e(2): jnz 0xffffffa2(%rip)
27a0(2): REP ret near (%rsp)
27a2(6): nop 0x0(%rax,%rax,1)
27a8(3): test %rcx,%rcx
27ab(6): jz 0xffffff77(%rip)
27b1(3): mov $0x0,(%rdx)
27b4(1): ret near (%rsp)

"base64_encode_alloc" :
27c0(2): push %r14
27c2(2): push %r13
27c4(3): mov %rdx,%r13
27c7(4): lea 0x2(%rsi),%rdx
27cb(2): push %r12
27cd(1): push %rbp
27ce(1): push %rbx
27cf(a): mov $0x-6148914691236517205,%rbx
27d9(3): mov %rdx,%rax
27dc(3): mul %rax,%rbx,%rdx
27df(3): shr $0x1,%rdx
27e2(8): lea 0x0(,%rdx,4),%rbx
27ea(4): lea 0x1(%rbx),%rbp
27ee(3): cmp %rbp,%rsi
27f1(2): jbe 0x1f(%rip)
27f3(8): mov $0x0,0x0(%r13)
27fb(2): xor %ebp,%ebp
27fd(1): pop %rbx
27fe(3): mov %rbp,%rax
2801(1): pop %rbp
2802(2): pop %r12
2804(2): pop %r13
2806(2): pop %r14
2808(1): ret near (%rsp)
2809(7): nop 0x0(%rax)
2810(3): mov %rdi,%r14
2813(3): mov %rbp,%rdi
2816(3): mov %rsi,%r12
2819(5): call 0xffffeea7(%rip)
281e(3): test %rax,%rax
2821(4): mov %rax,0x0(%r13)
2825(2): jz 0xffffffd8(%rip)
2827(3): mov %rbp,%rcx
282a(3): mov %rax,%rdx
282d(3): mov %rbx,%rbp
2830(3): mov %r12,%rsi
2833(3): mov %r14,%rdi
2836(5): call 0xfffffdca(%rip)
283b(1): pop %rbx
283c(3): mov %rbp,%rax
283f(1): pop %rbp
2840(2): pop %r12
2842(2): pop %r13
2844(2): pop %r14
2846(1): ret near (%rsp)

"isbase64" :
2850(7): lea 0x38e9(%rip),%rax
2857(4): movzx %dil,%edi
285b(4): movzx 0x0(%rax,%rdi,1),%eax
285f(2): not %eax
2861(3): shr $0x7,%al
2864(1): ret near (%rsp)

"base64_decode_ctx_init" :
2870(6): mov $0x0,(%rdi)
2876(1): ret near (%rsp)

"base64_decode_ctx" :
2880(2): push %r15
2882(2): push %r14
2884(3): mov %rdi,%r14
2887(2): push %r13
2889(2): push %r12
288b(3): mov %rdx,%r13
288e(1): push %rbp
288f(1): push %rbx
2890(3): mov %rsi,%r12
2893(4): sub $0x38,%rsp
2897(3): mov (%r8),%r15
289a(9): mov $0x28,%rbx
28a3(5): mov %rbx,0x28(%rsp)
28a8(2): xor %ebx,%ebx
28aa(3): test %rdi,%rdi
28ad(5): mov %rcx,0x18(%rsp)
28b2(5): mov %r8,0x10(%rsp)
28b7(5): mov %r15,0x20(%rsp)
28bc(5): setnz 0x7(%rsp)
28c1(6): jz 0x22f(%rip)
28c7(3): test %rdx,%rdx
28ca(2): mov (%rdi),%eax
28cc(5): setnz 0x5(%rsp)
28d1(5): movzx 0x5(%rsp),%ebx
28d6(2): test %eax,%eax
28d8(3): setz %al
28db(2): and %ebx,%eax
28dd(4): mov %al,0x6(%rsp)
28e1(4): lea 0x4(%r14),%rax
28e5(5): lea 0x20(%rsp),%rbp
28ea(5): lea 0x18(%rsp),%rbx
28ef(5): mov %rax,0x8(%rsp)
28f4(5): cmp $0x0,0x6(%rsp)
28f9(3): mov %r15,%rdx
28fc(6): jnz 0xd9(%rip)
2902(3): test %r13,%r13
2905(3): setz %al
2908(4): and 0x5(%rsp),%al
290c(6): jnz 0x8c(%rip)
2912(3): test %r13,%r13
2915(6): jz 0xe3(%rip)
291b(5): cmp $0xa,(%r12)
2920(6): jz 0x1a0(%rip)
2926(3): sub %r15,%rdx
2929(5): add %rdx,0x18(%rsp)
292e(3): test %r14,%r14
2931(5): mov %r15,0x20(%rsp)
2936(4): lea 0x0(%r12,%r13,1),%r15
293a(6): jnz 0xd7(%rip)
2940(3): mov %r12,%rdi
2943(4): cmp $0x3,%r13
2947(2): jnbe 0x14(%rip)
2949(5): cmp $0x0,0x7(%rsp)
294e(2): jz 0xd(%rip)
2950(5): cmp $0x0,0x5(%rsp)
2955(6): jnz 0x10a(%rip)
295b(3): mov %rbp,%rcx
295e(3): mov %rbx,%rdx
2961(3): mov %r13,%rsi
2964(5): call 0xfffffb8c(%rip)
2969(2): test %al,%al
296b(6): jz 0x1b3(%rip)
2971(3): sub %r12,%r15
2974(5): cmp $0x0,0x6(%rsp)
2979(3): mov %r15,%r13
297c(5): mov 0x20(%rsp),%r15
2981(3): mov %r15,%rdx
2984(2): jnz 0x51(%rip)
2986(3): test %r13,%r13
2989(3): setz %al
298c(4): and 0x5(%rsp),%al
2990(2): jz 0xffffff82(%rip)
2992(6): nop 0x0(%rax,%rax,1)
2998(5): mov 0x10(%rsp),%rbx
299d(3): sub %rdx,(%rbx)
29a0(5): mov 0x28(%rsp),%rbx
29a5(9): xor $0x28,%rbx
29ae(6): jnz 0x17a(%rip)
29b4(4): add $0x38,%rsp
29b8(1): pop %rbx
29b9(1): pop %rbp
29ba(2): pop %r12
29bc(2): pop %r13
29be(2): pop %r14
29c0(2): pop %r15
29c2(1): ret near (%rsp)
29c3(5): nop 0x0(%rax,%rax,1)
29c8(5): mov 0x20(%rsp),%r15
29cd(4): add $0x4,%r12
29d1(4): sub $0x4,%r13
29d5(3): mov %rbp,%rcx
29d8(3): mov %rbx,%rdx
29db(3): mov %r13,%rsi
29de(3): mov %r12,%rdi
29e1(5): call 0xfffffb0f(%rip)
29e6(2): test %al,%al
29e8(2): jnz 0xffffffe0(%rip)
29ea(5): mov 0x20(%rsp),%rdx
29ef(5): jmp 0xffffff13(%rip)
29f4(4): nop 0x0(%rax)
29f8(3): sub %r15,%rdx
29fb(5): add %rdx,0x18(%rsp)
2a00(3): test %r14,%r14
2a03(5): mov %r15,0x20(%rsp)
2a08(6): jz 0xf7(%rip)
2a0e(3): mov %r12,%r15
2a11(3): mov (%r14),%eax
2a14(3): cmp $0x4,%eax
2a17(2): jz 0x59(%rip)
2a19(2): test %eax,%eax
2a1b(2): jz 0x5c(%rip)
2a1d(3): cmp %r15,%r12
2a20(2): jnb 0x2e(%rip)
2a22(6): nop 0x0(%rax,%rax,1)
2a28(4): add $0x1,%r12
2a2c(6): movzx 0xffffffff(%r12),%edx
2a32(3): cmp $0xa,%dl
2a35(2): jz 0x14(%rip)
2a37(3): lea 0x1(%rax),%ecx
2a3a(3): cmp $0x4,%ecx
2a3d(3): mov %ecx,(%r14)
2a40(5): mov %dl,0x4(%r14,%rax,1)
2a45(2): jz 0x5b(%rip)
2a47(2): mov %ecx,%eax
2a49(3): cmp %r15,%r12
2a4c(2): jnz 0xffffffdc(%rip)
2a4e(3): mov %eax,%r13d
2a51(5): mov 0x8(%rsp),%rdi
2a56(3): test %r13,%r13
2a59(6): jnz 0xfffffeea(%rip)
2a5f(5): mov 0x20(%rsp),%rdx
2a64(5): mov $0x1,%eax
2a69(5): jmp 0xffffff2f(%rip)
2a6e(2): nop 
2a70(7): mov $0x0,(%r14)
2a77(4): cmp $0x3,%r13
2a7b(2): jle 0x19(%rip)
2a7d(5): mov $0x4,%edx
2a82(5): mov $0xa,%esi
2a87(3): mov %r12,%rdi
2a8a(5): call 0xffffebc6(%rip)
2a8f(3): test %rax,%rax
2a92(2): jz 0x7a(%rip)
2a94(3): mov (%r14),%eax
2a97(5): jmp 0xffffff86(%rip)
2a9c(4): nop 0x0(%rax)
2aa0(5): mov $0x4,%eax
2aa5(5): mov 0x8(%rsp),%rdi
2aaa(3): mov %eax,%r13d
2aad(3): test %r13,%r13
2ab0(6): jnz 0xfffffe93(%rip)
2ab6(2): jmp 0xffffffa9(%rip)
2ab8(8): nop 0x0(%rax,%rax,1)
2ac0(3): test %r14,%r14
2ac3(2): jz 0x15(%rip)
2ac5(4): add $0x1,%r12
2ac9(4): sub $0x1,%r13
2acd(3): mov %rdx,%r15
2ad0(5): jmp 0xfffffe24(%rip)
2ad5(3): nop (%rax)
2ad8(3): sub %r15,%rdx
2adb(5): mov %r15,0x20(%rsp)
2ae0(5): add %rdx,0x18(%rsp)
2ae5(4): lea 0x0(%r12,%r13,1),%r15
2ae9(5): jmp 0xfffffe57(%rip)
2aee(2): nop 
2af0(5): mov $0x1,0x6(%rsp)
2af5(5): mov $0x1,0x5(%rsp)
2afa(5): jmp 0xfffffde7(%rip)
2aff(3): mov %r15,%rdx
2b02(5): mov $0x1,%eax
2b07(5): jmp 0xfffffe91(%rip)
2b0c(3): mov %r12,%rdi
2b0f(6): mov $0x4,%r13d
2b15(4): add $0x4,%r12
2b19(5): jmp 0xfffffe42(%rip)
2b1e(5): mov 0x20(%rsp),%rdx
2b23(5): jmp 0xfffffe75(%rip)
2b28(5): call 0xffffea78(%rip)

"base64_decode_alloc_ctx" :
2b30(2): push %r14
2b32(2): push %r13
2b34(3): mov %rdx,%r14
2b37(2): push %r12
2b39(1): push %rbp
2b3a(3): mov %rdi,%r12
2b3d(1): push %rbx
2b3e(3): mov %rsi,%r13
2b41(3): mov %rcx,%rbx
2b44(3): mov %r8,%rbp
2b47(4): sub $0x20,%rsp
2b4b(9): mov $0x28,%rax
2b54(5): mov %rax,0x18(%rsp)
2b59(2): xor %eax,%eax
2b5b(3): mov %rdx,%rax
2b5e(4): shr $0x2,%rax
2b62(5): lea 0x3(%rax,%rax,2),%rdi
2b67(5): mov %rdi,0x10(%rsp)
2b6c(5): call 0xffffeb54(%rip)
2b71(3): test %rax,%rax
2b74(3): mov %rax,(%rbx)
2b77(2): jz 0x31(%rip)
2b79(5): lea 0x10(%rsp),%r8
2b7e(3): mov %rax,%rcx
2b81(3): mov %r14,%rdx
2b84(3): mov %r13,%rsi
2b87(3): mov %r12,%rdi
2b8a(5): call 0xfffffcf6(%rip)
2b8f(2): test %al,%al
2b91(2): jz 0x3f(%rip)
2b93(3): test %rbp,%rbp
2b96(2): jz 0x12(%rip)
2b98(5): mov 0x10(%rsp),%rdx
2b9d(4): mov %rdx,0x0(%rbp)
2ba1(2): jmp 0xc(%rip)
2ba3(5): nop 0x0(%rax,%rax,1)
2ba8(5): mov $0x1,%eax
2bad(5): mov 0x18(%rsp),%rcx
2bb2(9): xor $0x28,%rcx
2bbb(2): jnz 0x2f(%rip)
2bbd(4): add $0x20,%rsp
2bc1(1): pop %rbx
2bc2(1): pop %rbp
2bc3(2): pop %r12
2bc5(2): pop %r13
2bc7(2): pop %r14
2bc9(1): ret near (%rsp)
2bca(6): nop 0x0(%rax,%rax,1)
2bd0(3): mov (%rbx),%rdi
2bd3(4): mov %al,0xf(%rsp)
2bd7(5): call 0xffffe8f9(%rip)
2bdc(7): mov $0x0,(%rbx)
2be3(5): movzx 0xf(%rsp),%eax
2be8(2): jmp 0xffffffc5(%rip)
2bea(5): call 0xffffe9b6(%rip)

"close_stdout_set_file_name" :
2bf0(7): mov %rdi,0x2064e1(%rip)
2bf7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
2c00(7): mov %dil,0x2064c9(%rip)
2c07(1): ret near (%rsp)

"close_stdout" :
2c10(1): push %rbp
2c11(1): push %rbx
2c12(4): sub $0x8,%rsp
2c16(7): mov 0x20646b(%rip),%rdi
2c1d(5): call 0x2dc3(%rip)
2c22(2): test %eax,%eax
2c24(2): jz 0x18(%rip)
2c26(5): call 0xffffe8ca(%rip)
2c2b(7): cmp $0x0,0x20649e(%rip)
2c32(3): mov %rax,%rbx
2c35(2): jz 0x1e(%rip)
2c37(3): cmp $0x20,(%rax)
2c3a(2): jnz 0x19(%rip)
2c3c(7): mov 0x20647d(%rip),%rdi
2c43(5): call 0x2d9d(%rip)
2c48(2): test %eax,%eax
2c4a(2): jnz 0x48(%rip)
2c4c(4): add $0x8,%rsp
2c50(1): pop %rbx
2c51(1): pop %rbp
2c52(1): ret near (%rsp)
2c53(7): lea 0x3070(%rip),%rsi
2c5a(2): xor %edi,%edi
2c5c(5): mov $0x5,%edx
2c61(5): call 0xffffe90f(%rip)
2c66(7): mov 0x20646b(%rip),%rdi
2c6d(3): mov %rax,%rbp
2c70(3): test %rdi,%rdi
2c73(2): jz 0x2a(%rip)
2c75(5): call 0x1b9b(%rip)
2c7a(2): mov (%rbx),%esi
2c7c(7): lea 0x35fd(%rip),%rdx
2c83(3): mov %rax,%rcx
2c86(3): mov %rbp,%r8
2c89(2): xor %edi,%edi
2c8b(2): xor %eax,%eax
2c8d(5): call 0xffffeac3(%rip)
2c92(6): mov 0x206380(%rip),%edi
2c98(5): call 0xffffe878(%rip)
2c9d(2): mov (%rbx),%esi
2c9f(7): lea 0x35de(%rip),%rdx
2ca6(3): mov %rax,%rcx
2ca9(2): xor %edi,%edi
2cab(2): xor %eax,%eax
2cad(5): call 0xffffeaa3(%rip)
2cb2(2): jmp 0xffffffe0(%rip)

"fadvise" :
2cd0(3): test %rdi,%rdi
2cd3(2): jz 0x1d(%rip)
2cd5(1): push %rbx
2cd6(2): mov %esi,%ebx
2cd8(5): call 0xffffe9d8(%rip)
2cdd(2): mov %ebx,%ecx
2cdf(2): xor %edx,%edx
2ce1(2): xor %esi,%esi
2ce3(1): pop %rbx
2ce4(2): mov %eax,%edi
2ce6(5): jmp 0xffffe95a(%rip)
2ceb(5): nop 0x0(%rax,%rax,1)
2cf0(2): REP ret near (%rsp)

"set_program_name" :
2d00(3): test %rdi,%rdi
2d03(1): push %rbx
2d04(2): jz 0x79(%rip)
2d06(5): mov $0x2f,%esi
2d0b(3): mov %rdi,%rbx
2d0e(5): call 0xffffe8e2(%rip)
2d13(3): test %rax,%rax
2d16(2): jz 0x57(%rip)
2d18(4): lea 0x1(%rax),%r8
2d1c(3): mov %r8,%rdx
2d1f(3): sub %rbx,%rdx
2d22(4): cmp $0x6,%rdx
2d26(2): jle 0x47(%rip)
2d28(4): lea 0xfffffffa(%rax),%rsi
2d2c(7): lea 0x358d(%rip),%rdi
2d33(5): mov $0x7,%ecx
2d38(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d3a(3): setnbe %dl
2d3d(3): sbb $0x0,%dl
2d40(2): test %dl,%dl
2d42(2): jnz 0x2b(%rip)
2d44(7): lea 0x357d(%rip),%rdi
2d4b(5): mov $0x3,%ecx
2d50(3): mov %r8,%rsi
2d53(3): mov %r8,%rbx
2d56(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2d58(3): setnbe %dl
2d5b(3): sbb $0x0,%dl
2d5e(2): test %dl,%dl
2d60(2): jnz 0xd(%rip)
2d62(4): lea 0x4(%rax),%rbx
2d66(7): mov %rbx,0x206313(%rip)
2d6d(7): mov %rbx,0x20636c(%rip)
2d74(7): mov %rbx,0x20632d(%rip)
2d7b(1): pop %rbx
2d7c(1): ret near (%rsp)
2d7d(7): mov 0x20633c(%rip),%rcx
2d84(7): lea 0x34fd(%rip),%rdi
2d8b(5): mov $0x37,%edx
2d90(5): mov $0x1,%esi
2d95(5): call 0xffffea0b(%rip)
2d9a(5): call 0xffffe746(%rip)

"gettext_quote.part.1" :
2da0(1): push %rbp
2da1(1): push %rbx
2da2(3): mov %rdi,%rbp
2da5(2): mov %esi,%ebx
2da7(4): sub $0x8,%rsp
2dab(5): call 0x2d15(%rip)
2db0(3): movzx (%rax),%edx
2db3(3): and $0xdf,%edx
2db6(3): cmp $0x55,%dl
2db9(2): jz 0x77(%rip)
2dbb(3): cmp $0x47,%dl
2dbe(2): jz 0x22(%rip)
2dc0(7): lea 0x3514(%rip),%rax
2dc7(7): lea 0x350f(%rip),%rdx
2dce(3): cmp $0x9,%ebx
2dd1(4): cmovne %rdx,%rax
2dd5(4): add $0x8,%rsp
2dd9(1): pop %rbx
2dda(1): pop %rbp
2ddb(1): ret near (%rsp)
2ddc(4): nop 0x0(%rax)
2de0(4): movzx 0x1(%rax),%edx
2de4(3): and $0xdf,%edx
2de7(3): cmp $0x42,%dl
2dea(2): jnz 0xffffffd6(%rip)
2dec(4): cmp $0x31,0x2(%rax)
2df0(2): jnz 0xffffffd0(%rip)
2df2(4): cmp $0x38,0x3(%rax)
2df6(2): jnz 0xffffffca(%rip)
2df8(4): cmp $0x30,0x4(%rax)
2dfc(2): jnz 0xffffffc4(%rip)
2dfe(4): cmp $0x33,0x5(%rax)
2e02(2): jnz 0xffffffbe(%rip)
2e04(4): cmp $0x30,0x6(%rax)
2e08(2): jnz 0xffffffb8(%rip)
2e0a(4): cmp $0x0,0x7(%rax)
2e0e(2): jnz 0xffffffb2(%rip)
2e10(4): cmp $0x60,0x0(%rbp)
2e14(7): lea 0x34b9(%rip),%rax
2e1b(7): lea 0x34b6(%rip),%rdx
2e22(4): cmovne %rdx,%rax
2e26(4): add $0x8,%rsp
2e2a(1): pop %rbx
2e2b(1): pop %rbp
2e2c(1): ret near (%rsp)
2e2d(3): nop (%rax)
2e30(4): movzx 0x1(%rax),%edx
2e34(3): and $0xdf,%edx
2e37(3): cmp $0x54,%dl
2e3a(2): jnz 0xffffff86(%rip)
2e3c(4): movzx 0x2(%rax),%edx
2e40(3): and $0xdf,%edx
2e43(3): cmp $0x46,%dl
2e46(6): jnz 0xffffff7a(%rip)
2e4c(4): cmp $0x2d,0x3(%rax)
2e50(6): jnz 0xffffff70(%rip)
2e56(4): cmp $0x38,0x4(%rax)
2e5a(6): jnz 0xffffff66(%rip)
2e60(4): cmp $0x0,0x5(%rax)
2e64(6): jnz 0xffffff5c(%rip)
2e6a(4): cmp $0x60,0x0(%rbp)
2e6e(7): lea 0x3457(%rip),%rax
2e75(7): lea 0x3454(%rip),%rdx
2e7c(4): cmovne %rdx,%rax
2e80(4): add $0x8,%rsp
2e84(1): pop %rbx
2e85(1): pop %rbp
2e86(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2e90(2): push %r15
2e92(2): push %r14
2e94(3): mov %r8d,%r15d
2e97(2): push %r13
2e99(2): push %r12
2e9b(3): mov %rdi,%r14
2e9e(1): push %rbp
2e9f(1): push %rbx
2ea0(3): mov %r9d,%ebx
2ea3(3): mov %rsi,%r13
2ea6(3): mov %rcx,%rbp
2ea9(3): and $0x2,%ebx
2eac(7): sub $0xb8,%rsp
2eb3(8): mov 0xf0(%rsp),%rax
2ebb(5): mov %rdx,0x10(%rsp)
2ec0(5): mov %r8d,0x8(%rsp)
2ec5(5): mov %r9d,0x78(%rsp)
2eca(5): mov %rax,0x20(%rsp)
2ecf(8): mov 0xf8(%rsp),%rax
2ed7(5): mov %rax,0x68(%rsp)
2edc(8): mov 0x100(%rsp),%rax
2ee4(5): mov %rax,0x60(%rsp)
2ee9(9): mov $0x28,%rax
2ef2(8): mov %rax,0xa8(%rsp)
2efa(2): xor %eax,%eax
2efc(5): call 0xffffe684(%rip)
2f01(4): cmp $0xa,%r15d
2f05(5): mov %rax,0x58(%rsp)
2f0a(6): jnbe 0x11b5(%rip)
2f10(7): lea 0x3429(%rip),%rcx
2f17(3): mov %r15d,%edx
2f1a(4): movsxd 0x0(%rcx,%rdx,4),%rax
2f1e(3): add %rcx,%rax
2f21(2): jmp %rax
2f23(5): mov $0x1,0xe(%rsp)
2f28(5): mov $0x0,0x7c(%rsp)
2f2d(3): xor %r12d,%r12d
2f30(9): mov $0x0,0x50(%rsp)
2f39(5): mov $0x1,0xf(%rsp)
2f3e(5): mov $0x0,0xd(%rsp)
2f43(7): lea 0x3393(%rip),%rax
2f4a(9): mov $0x1,0x18(%rsp)
2f53(3): xor %r15d,%r15d
2f56(8): mov $0x2,0x8(%rsp)
2f5e(5): mov %rax,0x48(%rsp)
2f63(3): xor %r11d,%r11d
2f66(3): mov %rbp,%rax
2f69(3): mov %r12d,%r8d
2f6c(3): mov %r11,%rbp
2f6f(3): mov %rax,%r11
2f72(6): nop 0x0(%rax,%rax,1)
2f78(3): cmp %rbp,%r11
2f7b(4): setnz %r12b
2f7f(4): cmp $0xffffffff,%r11
2f83(2): jnz 0xf(%rip)
2f85(5): mov 0x10(%rsp),%rax
2f8a(4): cmp $0x0,0x0(%rax,%rbp,1)
2f8e(4): setnz %r12b
2f92(3): test %r12b,%r12b
2f95(6): jz 0x65b(%rip)
2f9b(5): cmp $0x2,0x8(%rsp)
2fa0(5): mov 0x10(%rsp),%rdi
2fa5(4): lea 0x0(%rdi,%rbp,1),%r9
2fa9(3): setnz %al
2fac(4): and 0xd(%rsp),%al
2fb0(3): mov %eax,%r10d
2fb3(6): jz 0xad(%rip)
2fb9(5): mov 0x18(%rsp),%rax
2fbe(3): test %rax,%rax
2fc1(6): jz 0x42f(%rip)
2fc7(4): cmp $0xffffffff,%r11
2fcb(5): lea 0x0(%rbp,%rax,1),%rbx
2fd0(2): jnz 0x30(%rip)
2fd2(4): cmp $0x1,%rax
2fd6(2): jbe 0x2a(%rip)
2fd8(5): mov %r8b,0x38(%rsp)
2fdd(5): mov %r10b,0x30(%rsp)
2fe2(5): mov %r9,0x28(%rsp)
2fe7(5): call 0xffffe5a9(%rip)
2fec(6): movzx 0x38(%rsp),%r8d
2ff2(6): movzx 0x30(%rsp),%r10d
2ff8(3): mov %rax,%r11
2ffb(5): mov 0x28(%rsp),%r9
3000(3): cmp %r11,%rbx
3003(5): mov %r10b,0x28(%rsp)
3008(6): jnbe 0x5b8(%rip)
300e(5): mov 0x18(%rsp),%rdx
3013(5): mov 0x48(%rsp),%rsi
3018(3): mov %r9,%rdi
301b(5): mov %r11,0x40(%rsp)
3020(5): mov %r8b,0x38(%rsp)
3025(5): mov %r9,0x30(%rsp)
302a(5): call 0xffffe636(%rip)
302f(2): test %eax,%eax
3031(5): mov 0x30(%rsp),%r9
3036(6): movzx 0x38(%rsp),%r8d
303c(5): mov 0x40(%rsp),%r11
3041(6): jnz 0x57f(%rip)
3047(5): cmp $0x0,0xf(%rsp)
304c(6): movzx 0x28(%rsp),%r10d
3052(6): jnz 0xf83(%rip)
3058(8): nop 0x0(%rax,%rax,1)
3060(4): movzx (%r9),%ebx
3064(3): cmp $0x7e,%bl
3067(6): jnbe 0x321(%rip)
306d(7): lea 0x32f8(%rip),%rcx
3074(3): movzx %bl,%edx
3077(4): movsxd 0x0(%rcx,%rdx,4),%rax
307b(3): add %rcx,%rax
307e(2): jmp %rax
3080(3): xor %r10d,%r10d
3083(4): cmp $0x1,%r11
3087(3): setnz %al
308a(4): cmp $0xffffffff,%r11
308e(2): jnz 0xe(%rip)
3090(5): mov 0x10(%rsp),%rax
3095(4): cmp $0x0,0x1(%rax)
3099(3): setnz %al
309c(5): cmp $0x2,0x8(%rsp)
30a1(3): setz %dl
30a4(2): test %al,%al
30a6(6): jz 0x252(%rip)
30ac(3): xor %r12d,%r12d
30af(2): xor %eax,%eax
30b1(7): nop 0x0(%rax)
30b8(5): cmp $0x1,0xd(%rsp)
30bd(6): jnz 0x115(%rip)
30c3(2): test %dl,%dl
30c5(6): jnz 0x10d(%rip)
30cb(5): mov 0x20(%rsp),%rsi
30d0(3): test %rsi,%rsi
30d3(2): jz 0x16(%rip)
30d5(2): mov %ebx,%edx
30d7(3): shr $0x5,%dl
30da(3): movzx %dl,%edx
30dd(3): mov 0x0(%rsi,%rdx,4),%edx
30e0(3): bt %ebx,%edx
30e3(6): jb 0x150(%rip)
30e9(3): test %r10b,%r10b
30ec(6): jnz 0x147(%rip)
30f2(3): xor $0x1,%eax
30f5(4): add $0x1,%rbp
30f9(3): and %r8d,%eax
30fc(2): test %al,%al
30fe(2): jz 0x22(%rip)
3100(3): cmp %r15,%r13
3103(2): jbe 0x7(%rip)
3105(5): mov $0x27,0x0(%r14,%r15,1)
310a(4): lea 0x1(%r15),%rax
310e(3): cmp %rax,%r13
3111(2): jbe 0x8(%rip)
3113(6): mov $0x27,0x1(%r14,%r15,1)
3119(4): add $0x2,%r15
311d(3): xor %r8d,%r8d
3120(3): cmp %r13,%r15
3123(2): jnb 0x6(%rip)
3125(4): mov %bl,0x0(%r14,%r15,1)
3129(5): movzx 0xe(%rsp),%edi
312e(4): add $0x1,%r15
3132(5): mov $0x0,%eax
3137(3): test %r12b,%r12b
313a(3): cmove %eax,%edi
313d(5): mov %dil,0xe(%rsp)
3142(5): jmp 0xfffffe36(%rip)
3147(9): nop 0x0(%rax,%rax,1)
3150(3): xor %r10d,%r10d
3153(4): mov 0x8(%rsp),%eax
3157(3): cmp $0x2,%eax
315a(6): jz 0x5be(%rip)
3160(3): cmp $0x5,%eax
3163(6): jz 0x575(%rip)
3169(3): cmp $0x2,%eax
316c(5): mov $0x3f,%ebx
3171(3): setz %dl
3174(3): xor %r12d,%r12d
3177(2): xor %eax,%eax
3179(5): jmp 0xffffff3f(%rip)
317e(2): nop 
3180(3): xor %r10d,%r10d
3183(5): cmp $0x2,0x8(%rsp)
3188(6): jz 0x508(%rip)
318e(5): mov %r12b,0x7c(%rsp)
3193(2): xor %edx,%edx
3195(2): xor %eax,%eax
3197(5): mov $0x27,%ebx
319c(5): jmp 0xffffff1c(%rip)
31a1(7): nop 0x0(%rax)
31a8(5): mov $0x9,%edx
31ad(5): mov $0x74,%ebx
31b2(5): cmp $0x2,0x8(%rsp)
31b7(3): setz %al
31ba(4): and 0xf(%rsp),%al
31be(6): jnz 0x150(%rip)
31c4(5): cmp $0x0,0xd(%rsp)
31c9(2): jnz 0x67(%rip)
31cb(2): mov %edx,%ebx
31cd(3): xor %r12d,%r12d
31d0(2): xor %eax,%eax
31d2(5): cmp $0x0,0xf(%rsp)
31d7(6): jnz 0xfffffef4(%rip)
31dd(5): jmp 0xffffff0c(%rip)
31e2(6): nop 0x0(%rax,%rax,1)
31e8(5): mov $0x8,%edx
31ed(5): mov $0x62,%ebx
31f2(2): jmp 0xffffffd2(%rip)
31f4(4): nop 0x0(%rax)
31f8(5): cmp $0x2,0x8(%rsp)
31fd(6): jz 0x3d3(%rip)
3203(5): cmp $0x0,0xd(%rsp)
3208(6): jz 0x218(%rip)
320e(5): cmp $0x0,0xf(%rsp)
3213(6): jz 0x20d(%rip)
3219(6): cmp $0x0,0x18(%rsp)
321f(6): jnz 0x3bc(%rip)
3225(5): mov $0x5c,%ebx
322a(6): nop 0x0(%rax,%rax,1)
3230(3): xor %r12d,%r12d
3233(5): cmp $0x2,0x8(%rsp)
3238(3): setz %dl
323b(5): cmp $0x0,0xf(%rsp)
3240(2): mov %edx,%eax
3242(6): jnz 0x856(%rip)
3248(3): mov %r8d,%eax
324b(3): xor $0x1,%eax
324e(2): and %dl,%al
3250(2): jz 0x31(%rip)
3252(3): cmp %r15,%r13
3255(2): jbe 0x7(%rip)
3257(5): mov $0x27,0x0(%r14,%r15,1)
325c(4): lea 0x1(%r15),%rdx
3260(3): cmp %rdx,%r13
3263(2): jbe 0x8(%rip)
3265(6): mov $0x24,0x1(%r14,%r15,1)
326b(4): lea 0x2(%r15),%rdx
326f(3): cmp %rdx,%r13
3272(2): jbe 0x8(%rip)
3274(6): mov $0x27,0x2(%r14,%r15,1)
327a(4): add $0x3,%r15
327e(3): mov %eax,%r8d
3281(3): cmp %r15,%r13
3284(2): jbe 0x7(%rip)
3286(5): mov $0x5c,0x0(%r14,%r15,1)
328b(4): add $0x1,%r15
328f(4): add $0x1,%rbp
3293(5): jmp 0xfffffe8d(%rip)
3298(8): nop 0x0(%rax,%rax,1)
32a0(5): cmp $0x0,0xd(%rsp)
32a5(6): jnz 0x1ce(%rip)
32ab(2): xor %edx,%edx
32ad(5): test $0x1,0x78(%rsp)
32b2(6): jz 0xffffff19(%rip)
32b8(4): add $0x1,%rbp
32bc(5): jmp 0xfffffcbc(%rip)
32c1(7): nop 0x0(%rax)
32c8(5): cmp $0x2,0x8(%rsp)
32cd(3): setz %dl
32d0(2): xor %eax,%eax
32d2(5): jmp 0xfffffde6(%rip)
32d7(9): nop 0x0(%rax,%rax,1)
32e0(5): mov $0x7,%edx
32e5(5): mov $0x61,%ebx
32ea(5): jmp 0xfffffeda(%rip)
32ef(1): nop 
32f0(5): cmp $0x2,0x8(%rsp)
32f5(3): setz %dl
32f8(3): test %rbp,%rbp
32fb(6): jnz 0xfffffdb1(%rip)
3301(5): movzx 0xf(%rsp),%eax
3306(2): and %dl,%al
3308(6): jz 0xfffffdb0(%rip)
330e(3): mov %r11,%rbp
3311(8): mov $0x2,0x8(%rsp)
3319(5): jmp 0x700(%rip)
331e(2): nop 
3320(5): cmp $0x2,0x8(%rsp)
3325(3): setz %dl
3328(3): xor %r12d,%r12d
332b(2): jmp 0xffffffd6(%rip)
332d(3): nop (%rax)
3330(5): cmp $0x2,0x8(%rsp)
3335(5): mov $0x20,%ebx
333a(3): setz %dl
333d(2): jmp 0xffffffc4(%rip)
333f(1): nop 
3340(5): mov $0xd,%edx
3345(5): mov $0x72,%ebx
334a(5): jmp 0xfffffe68(%rip)
334f(1): nop 
3350(5): mov $0xc,%edx
3355(5): mov $0x66,%ebx
335a(5): jmp 0xfffffe6a(%rip)
335f(1): nop 
3360(5): mov $0xb,%edx
3365(5): mov $0x76,%ebx
336a(5): jmp 0xfffffe5a(%rip)
336f(1): nop 
3370(5): mov $0xa,%edx
3375(5): mov $0x6e,%ebx
337a(5): jmp 0xfffffe38(%rip)
337f(1): nop 
3380(3): xor %r10d,%r10d
3383(5): nop 0x0(%rax,%rax,1)
3388(6): cmp $0x1,0x58(%rsp)
338e(6): jnz 0x3aa(%rip)
3394(5): mov %r11,0x38(%rsp)
3399(5): mov %r8b,0x30(%rsp)
339e(5): mov %r10b,0x28(%rsp)
33a3(5): call 0xffffe43d(%rip)
33a8(3): mov (%rax),%rcx
33ab(3): movzx %bl,%edx
33ae(6): movzx 0x28(%rsp),%r10d
33b4(6): movzx 0x30(%rsp),%r8d
33ba(5): mov 0x38(%rsp),%r11
33bf(5): mov $0x1,%edi
33c4(4): movzx 0x0(%rcx,%rdx,2),%eax
33c8(4): and $0x4000,%ax
33cc(4): setnz %r12b
33d0(3): setz %al
33d3(4): and 0xd(%rsp),%al
33d7(2): test %al,%al
33d9(6): jnz 0x998(%rip)
33df(5): cmp $0x2,0x8(%rsp)
33e4(3): setz %dl
33e7(5): jmp 0xfffffcd1(%rip)
33ec(4): nop 0x0(%rax)
33f0(4): movzx (%r9),%ebx
33f4(3): cmp $0x7e,%bl
33f7(2): jnbe 0xffffff89(%rip)
33f9(7): lea 0x3168(%rip),%rcx
3400(3): movzx %bl,%edx
3403(4): movsxd 0x0(%rcx,%rdx,4),%rax
3407(3): add %rcx,%rax
340a(2): jmp %rax
340c(4): nop 0x0(%rax)
3410(3): xor %r10d,%r10d
3413(5): cmp $0x0,0xd(%rsp)
3418(6): jnz 0xfffffdf6(%rip)
341e(2): nop 
3420(5): mov $0x5c,%edx
3425(5): mov $0x5c,%ebx
342a(5): jmp 0xfffffd9a(%rip)
342f(1): nop 
3430(5): mov $0xc,%edx
3435(3): xor %r10d,%r10d
3438(5): mov $0x66,%ebx
343d(5): jmp 0xfffffd87(%rip)
3442(6): nop 0x0(%rax,%rax,1)
3448(5): mov $0xa,%edx
344d(3): xor %r10d,%r10d
3450(5): mov $0x6e,%ebx
3455(5): jmp 0xfffffd5d(%rip)
345a(6): nop 0x0(%rax,%rax,1)
3460(5): mov $0x61,%ebx
3465(5): jmp 0xfffffdcb(%rip)
346a(6): nop 0x0(%rax,%rax,1)
3470(3): xor %r10d,%r10d
3473(5): cmp $0x2,0x8(%rsp)
3478(3): setz %dl
347b(5): cmp $0x0,0xf(%rsp)
3480(6): jnz 0xb9a(%rip)
3486(3): mov %r8d,%eax
3489(3): mov %r15,%rcx
348c(3): xor $0x1,%eax
348f(2): and %dl,%al
3491(2): jz 0x2f(%rip)
3493(3): cmp %r15,%r13
3496(2): jbe 0x7(%rip)
3498(5): mov $0x27,0x0(%r14,%r15,1)
349d(4): lea 0x1(%r15),%rcx
34a1(3): cmp %rcx,%r13
34a4(2): jbe 0x8(%rip)
34a6(6): mov $0x24,0x1(%r14,%r15,1)
34ac(4): lea 0x2(%r15),%rcx
34b0(3): cmp %rcx,%r13
34b3(6): jnbe 0x636(%rip)
34b9(4): lea 0x3(%r15),%rcx
34bd(3): mov %eax,%r8d
34c0(3): cmp %rcx,%r13
34c3(2): jbe 0x7(%rip)
34c5(5): mov $0x5c,0x0(%r14,%rcx,1)
34ca(5): cmp $0x2,0x8(%rsp)
34cf(4): lea 0x1(%rcx),%r15
34d3(6): jz 0x606(%rip)
34d9(4): lea 0x1(%rbp),%rax
34dd(3): cmp %r11,%rax
34e0(2): jnb 0x1b(%rip)
34e2(5): mov 0x10(%rsp),%rax
34e7(5): movzx 0x1(%rax,%rbp,1),%eax
34ec(4): mov %al,0x28(%rsp)
34f0(3): sub $0x30,%eax
34f3(2): cmp $0x9,%al
34f5(6): jbe 0x834(%rip)
34fb(3): mov %r12d,%eax
34fe(5): mov $0x30,%ebx
3503(3): xor %r12d,%r12d
3506(5): jmp 0xfffffbb2(%rip)
350b(5): nop 0x0(%rax,%rax,1)
3510(5): cmp $0x2,0x8(%rsp)
3515(3): mov %r10d,%r12d
3518(3): setz %dl
351b(3): xor %r10d,%r10d
351e(2): xor %eax,%eax
3520(5): jmp 0xfffffb98(%rip)
3525(3): nop (%rax)
3528(5): cmp $0x2,0x8(%rsp)
352d(3): setz %dl
3530(3): xor %r10d,%r10d
3533(5): jmp 0xfffffdc5(%rip)
3538(8): nop 0x0(%rax,%rax,1)
3540(5): cmp $0x2,0x8(%rsp)
3545(3): setz %dl
3548(3): xor %r10d,%r10d
354b(3): xor %r12d,%r12d
354e(5): jmp 0xfffffdb3(%rip)
3553(5): nop 0x0(%rax,%rax,1)
3558(5): cmp $0x2,0x8(%rsp)
355d(3): mov %r10d,%r12d
3560(5): mov $0x20,%ebx
3565(3): setz %dl
3568(3): xor %r10d,%r10d
356b(5): jmp 0xfffffd96(%rip)
3570(5): mov $0xd,%edx
3575(3): xor %r10d,%r10d
3578(5): mov $0x72,%ebx
357d(5): jmp 0xfffffc35(%rip)
3582(6): nop 0x0(%rax,%rax,1)
3588(5): mov $0x76,%ebx
358d(5): jmp 0xfffffca3(%rip)
3592(6): nop 0x0(%rax,%rax,1)
3598(5): mov $0x9,%edx
359d(3): xor %r10d,%r10d
35a0(5): mov $0x74,%ebx
35a5(5): jmp 0xfffffc0d(%rip)
35aa(6): nop 0x0(%rax,%rax,1)
35b0(5): mov $0x62,%ebx
35b5(5): jmp 0xfffffc7b(%rip)
35ba(6): nop 0x0(%rax,%rax,1)
35c0(3): xor %r10d,%r10d
35c3(5): jmp 0xfffffa9d(%rip)
35c8(8): nop 0x0(%rax,%rax,1)
35d0(5): cmp $0x0,0xf(%rsp)
35d5(6): jnz 0x96b(%rip)
35db(4): add $0x1,%rbp
35df(3): mov %r8d,%eax
35e2(3): xor %r12d,%r12d
35e5(5): mov $0x5c,%ebx
35ea(5): jmp 0xfffffb12(%rip)
35ef(1): nop 
35f0(5): cmp $0x2,0x8(%rsp)
35f5(5): movzx 0xf(%rsp),%ebx
35fa(3): mov %r8d,%r12d
35fd(3): mov %r11,%rbp
3600(3): setz %dl
3603(2): mov %ebx,%eax
3605(3): test %r15,%r15
3608(3): setz %cl
360b(2): and %edx,%eax
360d(2): and %cl,%al
360f(6): jnz 0xa67(%rip)
3615(2): mov %ebx,%eax
3617(3): xor $0x1,%eax
361a(2): and %al,%dl
361c(6): jz 0x970(%rip)
3622(5): cmp $0x0,0x7c(%rsp)
3627(6): jz 0x963(%rip)
362d(5): cmp $0x0,0xe(%rsp)
3632(6): jnz 0x9fb(%rip)
3638(3): test %r13,%r13
363b(3): setz %al
363e(6): cmp $0x0,0x50(%rsp)
3644(3): setnz %dl
3647(2): and %dl,%al
3649(6): jz 0xa23(%rip)
364f(5): mov 0x50(%rsp),%r13
3654(7): lea 0x2c82(%rip),%rbx
365b(4): mov $0x27,(%r14)
365f(8): mov $0x2,0x8(%rsp)
3667(6): mov $0x1,%r15d
366d(9): mov $0x1,0x18(%rsp)
3676(5): mov $0x0,0xf(%rsp)
367b(5): mov %rbx,0x48(%rsp)
3680(4): mov %al,0x7c(%rsp)
3684(5): jmp 0xfffff8df(%rip)
3689(7): nop 0x0(%rax)
3690(5): cmp $0x0,0xf(%rsp)
3695(6): jnz 0x8ab(%rip)
369b(3): test %r13,%r13
369e(6): jz 0x402(%rip)
36a4(2): xor %edx,%edx
36a6(6): cmp $0x0,0x50(%rsp)
36ac(6): jnz 0x3f4(%rip)
36b2(5): mov %r13,0x50(%rsp)
36b7(4): add $0x3,%r15
36bb(2): xor %eax,%eax
36bd(5): mov %r12b,0x7c(%rsp)
36c2(3): xor %r8d,%r8d
36c5(3): mov %rdx,%r13
36c8(5): mov $0x27,%ebx
36cd(5): jmp 0xfffffa1c(%rip)
36d2(6): nop 0x0(%rax,%rax,1)
36d8(5): test $0x4,0x78(%rsp)
36dd(2): jz 0x23(%rip)
36df(4): lea 0x2(%rbp),%rcx
36e3(3): cmp %r11,%rcx
36e6(2): jnb 0x1a(%rip)
36e8(5): mov 0x10(%rsp),%rax
36ed(5): cmp $0x3f,0x1(%rax,%rbp,1)
36f2(6): jz 0x790(%rip)
36f8(8): nop 0x0(%rax,%rax,1)
3700(2): xor %edx,%edx
3702(3): xor %r12d,%r12d
3705(2): xor %eax,%eax
3707(5): mov $0x3f,%ebx
370c(5): jmp 0xfffff9ac(%rip)
3711(7): nop 0x0(%rax)
3718(5): cmp $0x0,0xf(%rsp)
371d(6): jnz 0x823(%rip)
3723(3): xor %r12d,%r12d
3726(2): xor %eax,%eax
3728(5): mov $0x3f,%ebx
372d(5): jmp 0xfffff9bc(%rip)
3732(6): nop 0x0(%rax,%rax,1)
3738(8): lea 0xa0(%rsp),%rax
3740(4): cmp $0xffffffff,%r11
3744(c): mov $0x0,0xa0(%rsp)
3750(5): mov %rax,0x28(%rsp)
3755(2): jnz 0x2f(%rip)
3757(5): mov 0x10(%rsp),%rdi
375c(5): mov %r8b,0x40(%rsp)
3761(5): mov %r10b,0x38(%rsp)
3766(5): mov %r9,0x30(%rsp)
376b(5): call 0xffffde25(%rip)
3770(6): movzx 0x40(%rsp),%r8d
3776(6): movzx 0x38(%rsp),%r10d
377c(3): mov %rax,%r11
377f(5): mov 0x30(%rsp),%r9
3784(8): lea 0x9c(%rsp),%rax
378c(2): xor %ecx,%ecx
378e(4): mov %bl,0x7e(%rsp)
3792(5): mov %r8b,0x7d(%rsp)
3797(3): mov %rcx,%rbx
379a(8): mov %r9,0x88(%rsp)
37a2(5): mov %rax,0x38(%rsp)
37a7(5): mov %r10b,0x7f(%rsp)
37ac(8): mov %r15,0x80(%rsp)
37b4(5): mov %r14,0x40(%rsp)
37b9(5): mov %r13,0x70(%rsp)
37be(5): mov %r11,0x30(%rsp)
37c3(5): mov 0x10(%rsp),%rax
37c8(5): lea 0x0(%rbp,%rbx,1),%r14
37cd(5): mov 0x30(%rsp),%rdx
37d2(5): mov 0x28(%rsp),%rcx
37d7(5): mov 0x38(%rsp),%rdi
37dc(4): lea 0x0(%rax,%r14,1),%r13
37e0(3): sub %r14,%rdx
37e3(3): mov %r13,%rsi
37e6(5): call 0x216a(%rip)
37eb(3): test %rax,%rax
37ee(3): mov %rax,%r15
37f1(2): jz 0x50(%rip)
37f3(4): cmp $0xffffffff,%rax
37f7(6): jz 0x61e(%rip)
37fd(4): cmp $0xfffffffe,%rax
3801(6): jz 0x5a0(%rip)
3807(5): cmp $0x2,0x8(%rsp)
380c(3): setz %al
380f(4): and 0xf(%rsp),%al
3813(6): jnz 0x19d(%rip)
3819(7): mov 0x9c(%rsp),%edi
3820(5): call 0xffffdfb0(%rip)
3825(5): mov 0x28(%rsp),%rdi
382a(2): test %eax,%eax
382c(5): mov $0x0,%eax
3831(4): cmove %eax,%r12d
3835(3): add %r15,%rbx
3838(5): call 0xffffdf88(%rip)
383d(2): test %eax,%eax
383f(2): jz 0xffffff84(%rip)
3841(3): mov %r12d,%edx
3844(3): mov %rbx,%rdi
3847(6): movzx 0x7d(%rsp),%r8d
384d(3): xor $0x1,%edx
3850(5): movzx 0x7e(%rsp),%ebx
3855(6): movzx 0x7f(%rsp),%r10d
385b(4): and 0xd(%rsp),%dl
385f(8): mov 0x80(%rsp),%r15
3867(5): mov 0x40(%rsp),%r14
386c(5): mov 0x70(%rsp),%r13
3871(5): mov 0x30(%rsp),%r11
3876(4): cmp $0x1,%rdi
387a(6): jbe 0x601(%rip)
3880(3): mov %rdi,%rcx
3883(2): xor %esi,%esi
3885(6): movzx 0xf(%rsp),%r9d
388b(3): add %rbp,%rcx
388e(5): mov 0x10(%rsp),%rdi
3893(5): jmp 0xbb(%rip)
3898(8): nop 0x0(%rax,%rax,1)
38a0(5): cmp $0x2,0x8(%rsp)
38a5(3): setz %al
38a8(3): test %r9b,%r9b
38ab(6): jnz 0x4b5(%rip)
38b1(3): mov %r8d,%esi
38b4(3): xor $0x1,%esi
38b7(3): and %sil,%al
38ba(2): jz 0x31(%rip)
38bc(3): cmp %r15,%r13
38bf(2): jbe 0x7(%rip)
38c1(5): mov $0x27,0x0(%r14,%r15,1)
38c6(4): lea 0x1(%r15),%rsi
38ca(3): cmp %rsi,%r13
38cd(2): jbe 0x8(%rip)
38cf(6): mov $0x24,0x1(%r14,%r15,1)
38d5(4): lea 0x2(%r15),%rsi
38d9(3): cmp %rsi,%r13
38dc(2): jbe 0x8(%rip)
38de(6): mov $0x27,0x2(%r14,%r15,1)
38e4(4): add $0x3,%r15
38e8(3): mov %eax,%r8d
38eb(3): cmp %r15,%r13
38ee(2): jbe 0x7(%rip)
38f0(5): mov $0x5c,0x0(%r14,%r15,1)
38f5(4): lea 0x1(%r15),%rax
38f9(3): cmp %rax,%r13
38fc(2): jbe 0xf(%rip)
38fe(2): mov %ebx,%eax
3900(3): shr $0x6,%al
3903(3): add $0x30,%eax
3906(5): mov %al,0x1(%r14,%r15,1)
390b(4): lea 0x2(%r15),%rax
390f(3): cmp %rax,%r13
3912(2): jbe 0x12(%rip)
3914(2): mov %ebx,%eax
3916(3): shr $0x3,%al
3919(3): and $0x7,%eax
391c(3): add $0x30,%eax
391f(5): mov %al,0x2(%r14,%r15,1)
3924(3): and $0x7,%ebx
3927(4): add $0x1,%rbp
392b(4): add $0x3,%r15
392f(3): add $0x30,%ebx
3932(3): cmp %rcx,%rbp
3935(6): jnb 0xfffff7eb(%rip)
393b(2): mov %edx,%esi
393d(3): cmp %r15,%r13
3940(2): jbe 0x6(%rip)
3942(4): mov %bl,0x0(%r14,%r15,1)
3946(4): movzx 0x0(%rdi,%rbp,1),%ebx
394a(4): add $0x1,%r15
394e(2): test %dl,%dl
3950(6): jnz 0xffffff50(%rip)
3956(2): mov %esi,%eax
3958(3): xor $0x1,%eax
395b(3): and %r8d,%eax
395e(3): test %r10b,%r10b
3961(2): jz 0x10(%rip)
3963(3): cmp %r15,%r13
3966(2): jbe 0x7(%rip)
3968(5): mov $0x5c,0x0(%r14,%r15,1)
396d(4): add $0x1,%r15
3971(4): add $0x1,%rbp
3975(3): cmp %rcx,%rbp
3978(6): jnb 0xfffff784(%rip)
397e(2): test %al,%al
3980(6): jz 0x3fe(%rip)
3986(3): cmp %r15,%r13
3989(2): jbe 0x7(%rip)
398b(5): mov $0x27,0x0(%r14,%r15,1)
3990(4): lea 0x1(%r15),%rax
3994(3): cmp %rax,%r13
3997(2): jbe 0x8(%rip)
3999(6): mov $0x27,0x1(%r14,%r15,1)
399f(4): add $0x2,%r15
39a3(3): xor %r10d,%r10d
39a6(3): xor %r8d,%r8d
39a9(2): jmp 0xffffff94(%rip)
39ab(5): nop 0x0(%rax,%rax,1)
39b0(4): cmp $0x1,%r15
39b4(6): jz 0xfffffe65(%rip)
39ba(5): mov 0x10(%rsp),%rdi
39bf(4): lea 0x0(%rdi,%r15,1),%rcx
39c3(5): lea 0x1(%rdi,%r14,1),%rdx
39c8(4): lea 0x0(%rcx,%r14,1),%r8
39cc(2): jmp 0x11(%rip)
39ce(2): nop 
39d0(4): add $0x1,%rdx
39d4(3): cmp %rdx,%r8
39d7(6): jz 0xfffffe42(%rip)
39dd(3): movzx (%rdx),%ecx
39e0(3): sub $0x5b,%ecx
39e3(3): cmp $0x21,%cl
39e6(2): jnbe 0xffffffea(%rip)
39e8(5): mov $0x1,%esi
39ed(3): shl/sal %cl,%rsi
39f0(3): mov %rsi,%rcx
39f3(a): mov $0x8589934635,%rsi
39fd(3): test %rsi,%rcx
3a00(2): jz 0xffffffd0(%rip)
3a02(5): mov 0x40(%rsp),%r14
3a07(5): mov 0x70(%rsp),%r13
3a0c(5): mov 0x30(%rsp),%rbp
3a11(8): mov $0x2,0x8(%rsp)
3a19(5): cmp $0x0,0xd(%rsp)
3a1e(2): jz 0x12(%rip)
3a20(2): test %al,%al
3a22(5): mov $0x4,%eax
3a27(5): cmove 0x8(%rsp),%eax
3a2c(4): mov %eax,0x8(%rsp)
3a30(4): sub $0x8,%rsp
3a34(3): mov %rbp,%rcx
3a37(3): mov %r13,%rsi
3a3a(4): push 0x68(%rsp)
3a3e(4): push 0x78(%rsp)
3a42(3): mov %r14,%rdi
3a45(2): push $0x0
3a47(8): mov 0x98(%rsp),%r9d
3a4f(5): mov 0x28(%rsp),%r8d
3a54(5): mov 0x30(%rsp),%rdx
3a59(4): and $0xfd,%r9d
3a5d(5): call 0xfffff433(%rip)
3a62(4): add $0x20,%rsp
3a66(3): mov %rax,%r15
3a69(8): mov 0xa8(%rsp),%rbx
3a71(9): xor $0x28,%rbx
3a7a(3): mov %r15,%rax
3a7d(6): jnz 0x606(%rip)
3a83(7): add $0xb8,%rsp
3a8a(1): pop %rbx
3a8b(1): pop %rbp
3a8c(2): pop %r12
3a8e(2): pop %r13
3a90(2): pop %r14
3a92(2): pop %r15
3a94(1): ret near (%rsp)
3a95(3): nop (%rax)
3a98(3): mov %r11,%rbp
3a9b(5): jmp 0xffffff7e(%rip)
3aa0(3): cmp %r15,%r13
3aa3(2): jbe 0x7(%rip)
3aa5(5): mov $0x27,0x0(%r14,%r15,1)
3aaa(4): lea 0x1(%r15),%rax
3aae(3): cmp %rax,%r13
3ab1(2): jbe 0x8(%rip)
3ab3(6): mov $0x5c,0x1(%r14,%r15,1)
3ab9(4): lea 0x2(%r15),%rax
3abd(3): cmp %rax,%r13
3ac0(6): jbe 0x5f2(%rip)
3ac6(3): mov %r13,%rdx
3ac9(6): mov $0x27,0x2(%r14,%r15,1)
3acf(5): mov 0x50(%rsp),%r13
3ad4(5): jmp 0xfffffbde(%rip)
3ad9(3): mov %r12d,%eax
3adc(5): mov $0x30,%ebx
3ae1(3): xor %r12d,%r12d
3ae4(5): jmp 0xfffff605(%rip)
3ae9(6): mov $0x27,0x2(%r14,%r15,1)
3aef(5): jmp 0xfffff9ca(%rip)
3af4(2): test %ebx,%ebx
3af6(6): jnz 0xfffff42d(%rip)
3afc(5): mov $0x1,0xd(%rsp)
3b01(3): test %r13,%r13
3b04(6): jnz 0x596(%rip)
3b0a(7): lea 0x27cc(%rip),%rax
3b11(9): mov $0x0,0x50(%rsp)
3b1a(5): mov $0x1,0xe(%rsp)
3b1f(5): mov $0x0,0x7c(%rsp)
3b24(3): xor %r12d,%r12d
3b27(5): mov $0x0,0xf(%rsp)
3b2c(9): mov $0x1,0x18(%rsp)
3b35(5): mov %rax,0x48(%rsp)
3b3a(6): mov $0x1,%r15d
3b40(8): mov $0x2,0x8(%rsp)
3b48(5): jmp 0xfffff41b(%rip)
3b4d(3): nop (%rax)
3b50(2): test %ebx,%ebx
3b52(6): jnz 0x3fb(%rip)
3b58(3): test %r13,%r13
3b5b(6): jz 0x22b(%rip)
3b61(4): mov $0x22,(%r14)
3b65(5): mov $0x1,0xe(%rsp)
3b6a(3): xor %r12d,%r12d
3b6d(5): mov $0x0,0x7c(%rsp)
3b72(9): mov $0x0,0x50(%rsp)
3b7b(7): lea 0x2759(%rip),%rax
3b82(5): mov $0x0,0xf(%rsp)
3b87(5): mov $0x1,0xd(%rsp)
3b8c(9): mov $0x1,0x18(%rsp)
3b95(6): mov $0x1,%r15d
3b9b(5): mov %rax,0x48(%rsp)
3ba0(5): jmp 0xfffff3c3(%rip)
3ba5(7): lea 0x272f(%rip),%rax
3bac(5): mov $0x1,0xe(%rsp)
3bb1(5): mov $0x0,0x7c(%rsp)
3bb6(3): xor %r12d,%r12d
3bb9(9): mov $0x0,0x50(%rsp)
3bc2(5): mov $0x1,0xf(%rsp)
3bc7(5): mov $0x1,0xd(%rsp)
3bcc(9): mov $0x1,0x18(%rsp)
3bd5(3): xor %r15d,%r15d
3bd8(5): mov %rax,0x48(%rsp)
3bdd(8): mov $0x5,0x8(%rsp)
3be5(5): jmp 0xfffff37e(%rip)
3bea(5): mov $0x1,0xe(%rsp)
3bef(5): mov $0x0,0x7c(%rsp)
3bf4(3): xor %r12d,%r12d
3bf7(9): mov $0x0,0x50(%rsp)
3c00(5): mov $0x0,0xf(%rsp)
3c05(3): xor %r15d,%r15d
3c08(5): mov $0x1,0xd(%rsp)
3c0d(9): mov $0x0,0x18(%rsp)
3c16(9): mov $0x0,0x48(%rsp)
3c1f(5): jmp 0xfffff344(%rip)
3c24(5): cmp $0xa,0x8(%rsp)
3c29(2): jz 0x58(%rip)
3c2b(7): lea 0x26ad(%rip),%rsi
3c32(2): xor %edi,%edi
3c34(5): mov $0x5,%edx
3c39(5): call 0xffffd937(%rip)
3c3e(3): mov %rax,%rcx
3c41(5): mov %rax,0x68(%rsp)
3c46(7): lea 0x2692(%rip),%rax
3c4d(3): cmp %rax,%rcx
3c50(6): jz 0x39e(%rip)
3c56(7): lea 0x2680(%rip),%rsi
3c5d(2): xor %edi,%edi
3c5f(5): mov $0x5,%edx
3c64(5): call 0xffffd90c(%rip)
3c69(3): mov %rax,%rcx
3c6c(5): mov %rax,0x60(%rsp)
3c71(7): lea 0x2665(%rip),%rax
3c78(3): cmp %rax,%rcx
3c7b(6): jz 0x389(%rip)
3c81(3): xor %r15d,%r15d
3c84(2): test %ebx,%ebx
3c86(6): jz 0x1c7(%rip)
3c8c(2): test %ebx,%ebx
3c8e(5): mov 0x60(%rsp),%rbx
3c93(5): setnz 0xf(%rsp)
3c98(3): xor %r12d,%r12d
3c9b(3): mov %rbx,%rdi
3c9e(5): call 0xffffd8f2(%rip)
3ca3(5): mov %rbx,0x48(%rsp)
3ca8(5): mov %rax,0x18(%rsp)
3cad(5): mov $0x1,0xe(%rsp)
3cb2(5): mov $0x0,0x7c(%rsp)
3cb7(9): mov $0x0,0x50(%rsp)
3cc0(5): mov $0x1,0xd(%rsp)
3cc5(5): jmp 0xfffff29e(%rip)
3cca(5): mov $0x1,0xe(%rsp)
3ccf(5): mov $0x0,0x7c(%rsp)
3cd4(3): xor %r12d,%r12d
3cd7(9): mov $0x0,0x50(%rsp)
3ce0(5): mov $0x0,0xf(%rsp)
3ce5(3): xor %r15d,%r15d
3ce8(5): mov $0x0,0xd(%rsp)
3ced(9): mov $0x0,0x18(%rsp)
3cf6(9): mov $0x0,0x48(%rsp)
3cff(5): jmp 0xfffff264(%rip)
3d04(5): mov $0x1,0xe(%rsp)
3d09(5): mov $0x0,0x7c(%rsp)
3d0e(3): xor %r12d,%r12d
3d11(9): mov $0x0,0x50(%rsp)
3d1a(5): mov $0x1,0xf(%rsp)
3d1f(5): mov $0x1,0xd(%rsp)
3d24(5): jmp 0xfffff21f(%rip)
3d29(3): cmp %r15,%r13
3d2c(2): jbe 0x7(%rip)
3d2e(5): mov $0x30,0x0(%r14,%r15,1)
3d33(4): lea 0x2(%rcx),%rax
3d37(3): cmp %rax,%r13
3d3a(2): jbe 0x8(%rip)
3d3c(6): mov $0x30,0x2(%r14,%rcx,1)
3d42(3): mov %r12d,%eax
3d45(4): lea 0x3(%rcx),%r15
3d49(3): xor %r12d,%r12d
3d4c(5): mov $0x30,%ebx
3d51(5): jmp 0xfffff367(%rip)
3d56(a): nop 0x0(%rax,%rax,1)
3d60(5): movzx 0xf(%rsp),%ebx
3d65(3): mov %r11,%rbp
3d68(4): mov %bl,0xd(%rsp)
3d6c(5): jmp 0xfffffcad(%rip)
3d71(5): movzx 0xd(%rsp),%edx
3d76(3): xor %r12d,%r12d
3d79(5): jmp 0xfffffb07(%rip)
3d7e(3): xor %r10d,%r10d
3d81(5): jmp 0xfffffbbc(%rip)
3d86(9): mov $0x0,0x50(%rsp)
3d8f(5): mov $0x1,0xe(%rsp)
3d94(3): xor %r12d,%r12d
3d97(5): mov $0x0,0x7c(%rsp)
3d9c(5): jmp 0xfffffddf(%rip)
3da1(5): mov 0x30(%rsp),%r11
3da6(3): mov %r14,%rsi
3da9(3): mov %r13,%rcx
3dac(3): mov %rbx,%rax
3daf(3): mov %rbx,%rdi
3db2(6): movzx 0x7d(%rsp),%r8d
3db8(5): movzx 0x7e(%rsp),%ebx
3dbd(8): mov 0x88(%rsp),%r9
3dc5(3): cmp %r11,%rsi
3dc8(6): movzx 0x7f(%rsp),%r10d
3dce(8): mov 0x80(%rsp),%r15
3dd6(5): mov 0x40(%rsp),%r14
3ddb(5): mov 0x70(%rsp),%r13
3de0(2): jnb 0x28(%rip)
3de2(3): cmp $0x0,(%rcx)
3de5(2): jnz 0x12(%rip)
3de7(2): jmp 0x21(%rip)
3de9(7): nop 0x0(%rax)
3df0(5): cmp $0x0,0x0(%r9,%rax,1)
3df5(2): jz 0x10(%rip)
3df7(4): add $0x1,%rax
3dfb(5): lea 0x0(%rbp,%rax,1),%rdx
3e00(3): cmp %rdx,%r11
3e03(2): jnbe 0xffffffed(%rip)
3e05(3): mov %rax,%rdi
3e08(5): movzx 0xd(%rsp),%edx
3e0d(3): xor %r12d,%r12d
3e10(5): jmp 0xfffffa66(%rip)
3e15(3): mov %rbx,%rdi
3e18(6): movzx 0x7d(%rsp),%r8d
3e1e(5): movzx 0x7e(%rsp),%ebx
3e23(6): movzx 0x7f(%rsp),%r10d
3e29(8): mov 0x80(%rsp),%r15
3e31(3): xor %r12d,%r12d
3e34(5): mov 0x40(%rsp),%r14
3e39(5): mov 0x70(%rsp),%r13
3e3e(5): mov 0x30(%rsp),%r11
3e43(5): movzx 0xd(%rsp),%edx
3e48(5): jmp 0xfffffa2e(%rip)
3e4d(5): mov 0x68(%rsp),%rdx
3e52(3): movzx (%rdx),%eax
3e55(2): test %al,%al
3e57(6): jz 0xfffffe35(%rip)
3e5d(3): nop (%rax)
3e60(3): cmp %r15,%r13
3e63(2): jbe 0x6(%rip)
3e65(4): mov %al,0x0(%r14,%r15,1)
3e69(4): add $0x1,%r15
3e6d(5): movzx 0x0(%rdx,%r15,1),%eax
3e72(2): test %al,%al
3e74(2): jnz 0xffffffec(%rip)
3e76(5): jmp 0xfffffe16(%rip)
3e7b(2): mov %edx,%eax
3e7d(5): jmp 0xfffff55a(%rip)
3e82(4): movzx 0x0(%rax,%rcx,1),%ebx
3e86(3): cmp $0x3e,%bl
3e89(6): jnbe 0xfffff877(%rip)
3e8f(a): mov $0x8070630310989004800,%rax
3e99(4): bt %rbx,%rax
3e9d(6): jnb 0xfffff863(%rip)
3ea3(5): cmp $0x0,0xf(%rsp)
3ea8(6): jnz 0x1ea(%rip)
3eae(3): cmp %r15,%r13
3eb1(2): jbe 0x7(%rip)
3eb3(5): mov $0x3f,0x0(%r14,%r15,1)
3eb8(4): lea 0x1(%r15),%rax
3ebc(3): cmp %rax,%r13
3ebf(2): jbe 0x8(%rip)
3ec1(6): mov $0x22,0x1(%r14,%r15,1)
3ec7(4): lea 0x2(%r15),%rax
3ecb(3): cmp %rax,%r13
3ece(2): jbe 0x8(%rip)
3ed0(6): mov $0x22,0x2(%r14,%r15,1)
3ed6(4): lea 0x3(%r15),%rax
3eda(3): cmp %rax,%r13
3edd(2): jbe 0x8(%rip)
3edf(6): mov $0x3f,0x3(%r14,%r15,1)
3ee5(4): add $0x4,%r15
3ee9(2): xor %edx,%edx
3eeb(3): xor %r12d,%r12d
3eee(2): xor %eax,%eax
3ef0(3): mov %rcx,%rbp
3ef3(5): jmp 0xfffff1c5(%rip)
3ef8(2): test %ebx,%ebx
3efa(6): jz 0x18e(%rip)
3f00(7): lea 0x23d6(%rip),%rax
3f07(5): mov $0x1,0xe(%rsp)
3f0c(5): mov $0x0,0x7c(%rsp)
3f11(3): xor %r12d,%r12d
3f14(9): mov $0x0,0x50(%rsp)
3f1d(5): mov $0x1,0xf(%rsp)
3f22(5): mov $0x0,0xd(%rsp)
3f27(9): mov $0x1,0x18(%rsp)
3f30(3): xor %r15d,%r15d
3f33(5): mov %rax,0x48(%rsp)
3f38(5): jmp 0xfffff02b(%rip)
3f3d(3): nop (%rax)
3f40(3): mov %r11,%rbp
3f43(5): movzx 0xf(%rsp),%eax
3f48(5): jmp 0xfffffad1(%rip)
3f4d(7): lea 0x2387(%rip),%rax
3f54(5): mov $0x1,0xe(%rsp)
3f59(5): mov $0x0,0x7c(%rsp)
3f5e(3): xor %r12d,%r12d
3f61(9): mov $0x0,0x50(%rsp)
3f6a(5): mov $0x1,0xf(%rsp)
3f6f(5): mov $0x1,0xd(%rsp)
3f74(9): mov $0x1,0x18(%rsp)
3f7d(3): xor %r15d,%r15d
3f80(5): mov %rax,0x48(%rsp)
3f85(5): jmp 0xffffefde(%rip)
3f8a(2): mov %edx,%eax
3f8c(5): mov 0x48(%rsp),%rbx
3f91(3): test %rbx,%rbx
3f94(2): jz 0x2e(%rip)
3f96(2): test %al,%al
3f98(2): jz 0x2a(%rip)
3f9a(3): movzx (%rbx),%ecx
3f9d(3): mov %rbx,%rax
3fa0(2): test %cl,%cl
3fa2(2): jz 0x20(%rip)
3fa4(3): mov %r15,%rdx
3fa7(3): sub %r15,%rax
3faa(3): cmp %rdx,%r13
3fad(2): jbe 0x6(%rip)
3faf(4): mov %cl,0x0(%r14,%rdx,1)
3fb3(4): add $0x1,%rdx
3fb7(4): movzx 0x0(%rax,%rdx,1),%ecx
3fbb(2): test %cl,%cl
3fbd(2): jnz 0xffffffed(%rip)
3fbf(3): mov %rdx,%r15
3fc2(3): cmp %r15,%r13
3fc5(6): jbe 0xfffffaa4(%rip)
3fcb(5): mov $0x0,0x0(%r14,%r15,1)
3fd0(5): jmp 0xfffffa99(%rip)
3fd5(5): cmp $0x2,0x8(%rsp)
3fda(5): movzx 0xf(%rsp),%ebx
3fdf(3): mov %r11,%rbp
3fe2(3): setz %al
3fe5(4): mov %bl,0xd(%rsp)
3fe9(5): jmp 0xfffffa30(%rip)
3fee(4): mov 0x8(%rsp),%esi
3ff2(3): mov %rcx,%rdi
3ff5(5): call 0xffffedab(%rip)
3ffa(5): mov %rax,0x68(%rsp)
3fff(5): jmp 0xfffffc57(%rip)
4004(4): mov 0x8(%rsp),%esi
4008(3): mov %rcx,%rdi
400b(5): call 0xffffed95(%rip)
4010(5): mov %rax,0x60(%rsp)
4015(5): jmp 0xfffffc6c(%rip)
401a(5): movzx 0xf(%rsp),%ebx
401f(3): mov %r11,%rbp
4022(2): mov %edx,%eax
4024(4): mov %bl,0xd(%rsp)
4028(5): jmp 0xfffff9f1(%rip)
402d(4): sub $0x8,%rsp
4031(6): mov $0x5,%r8d
4037(3): mov %r11,%rcx
403a(4): push 0x68(%rsp)
403e(4): push 0x78(%rsp)
4042(3): mov %r14,%rdi
4045(4): push 0x38(%rsp)
4049(8): mov 0x98(%rsp),%r9d
4051(5): mov 0x30(%rsp),%rdx
4056(5): mov 0x70(%rsp),%rsi
405b(5): call 0xffffee35(%rip)
4060(4): add $0x20,%rsp
4064(3): mov %rax,%r15
4067(5): jmp 0xfffffa02(%rip)
406c(5): movzx 0x7c(%rsp),%eax
4071(5): jmp 0xffffff1b(%rip)
4076(8): mov $0x2,0x8(%rsp)
407e(5): jmp 0xfffff99b(%rip)
4083(5): call 0xffffd51d(%rip)
4088(5): mov $0x0,0xd(%rsp)
408d(5): jmp 0xfffffa74(%rip)
4092(3): mov %r11,%rbp
4095(5): jmp 0xfffff99b(%rip)
409a(5): mov $0x1,0xe(%rsp)
409f(2): xor %eax,%eax
40a1(3): xor %r12d,%r12d
40a4(9): mov $0x0,0x50(%rsp)
40ad(5): jmp 0xfffff5a7(%rip)
40b2(3): mov %r13,%rdx
40b5(5): mov 0x50(%rsp),%r13
40ba(5): jmp 0xfffff5f8(%rip)
40bf(5): call 0xffffd421(%rip)

"quotearg_n_options" :
40d0(2): push %r15
40d2(2): push %r14
40d4(3): movsxd %edi,%r15
40d7(2): push %r13
40d9(2): push %r12
40db(3): mov %rdx,%r14
40de(1): push %rbp
40df(1): push %rbx
40e0(3): mov %rcx,%rbp
40e3(4): sub $0x28,%rsp
40e7(5): mov %rsi,0x8(%rsp)
40ec(5): call 0xffffd404(%rip)
40f1(3): mov %rax,%r13
40f4(2): mov (%rax),%eax
40f6(3): test %r15d,%r15d
40f9(7): mov 0x204f60(%rip),%rbx
4100(4): mov %eax,0x18(%rsp)
4104(6): js 0x16d(%rip)
410a(7): cmp %r15d,0x204f47(%rip)
4111(2): jnle 0x64(%rip)
4113(7): cmp $0x7fffffff,%r15d
411a(6): jz 0x15c(%rip)
4120(4): lea 0x1(%r15),%r12d
4124(7): lea 0x204f45(%rip),%rax
412b(3): movsxd %r12d,%rsi
412e(4): shl/sal $0x4,%rsi
4132(3): cmp %rax,%rbx
4135(6): jz 0x11b(%rip)
413b(3): mov %rbx,%rdi
413e(5): call 0xf72(%rip)
4143(3): mov %rax,%rbx
4146(7): mov %rax,0x204f13(%rip)
414d(7): movsxd 0x204f04(%rip),%rdi
4154(3): mov %r12d,%edx
4157(2): xor %esi,%esi
4159(2): sub %edi,%edx
415b(4): shl/sal $0x4,%rdi
415f(3): movsxd %edx,%rdx
4162(3): add %rbx,%rdi
4165(4): shl/sal $0x4,%rdx
4169(5): call 0xffffd4c7(%rip)
416e(7): mov %r12d,0x204ee3(%rip)
4175(3): mov 0x4(%rbp),%eax
4178(4): shl/sal $0x4,%r15
417c(4): sub $0x8,%rsp
4180(3): add %r15,%rbx
4183(4): lea 0x8(%rbp),%r15
4187(4): mov 0x0(%rbp),%r8d
418b(3): mov (%rbx),%r11
418e(4): mov 0x8(%rbx),%r12
4192(3): mov %r14,%rcx
4195(3): or $0x1,%eax
4198(4): mov %eax,0x24(%rsp)
419c(3): push 0x30(%rbp)
419f(3): mov %eax,%r9d
41a2(3): push 0x28(%rbp)
41a5(2): push %r15
41a7(3): mov %r11,%rsi
41aa(5): mov 0x28(%rsp),%rdx
41af(3): mov %r12,%rdi
41b2(5): mov %r11,0x30(%rsp)
41b7(5): call 0xffffecd9(%rip)
41bc(4): add $0x20,%rsp
41c0(5): mov 0x10(%rsp),%r11
41c5(3): cmp %rax,%r11
41c8(2): jnbe 0x69(%rip)
41ca(4): lea 0x1(%rax),%rsi
41ce(7): lea 0x204f2b(%rip),%rax
41d5(3): cmp %rax,%r12
41d8(3): mov %rsi,(%rbx)
41db(2): jz 0x14(%rip)
41dd(3): mov %r12,%rdi
41e0(5): mov %rsi,0x10(%rsp)
41e5(5): call 0xffffd2eb(%rip)
41ea(5): mov 0x10(%rsp),%rsi
41ef(3): mov %rsi,%rdi
41f2(5): mov %rsi,0x10(%rsp)
41f7(5): call 0xe59(%rip)
41fc(4): sub $0x8,%rsp
4200(4): mov %rax,0x8(%rbx)
4204(4): mov 0x0(%rbp),%r8d
4208(3): push 0x30(%rbp)
420b(3): push 0x28(%rbp)
420e(3): mov %r14,%rcx
4211(2): push %r15
4213(5): mov 0x3c(%rsp),%r9d
4218(3): mov %rax,%rdi
421b(5): mov 0x28(%rsp),%rdx
4220(5): mov 0x30(%rsp),%rsi
4225(3): mov %rax,%r12
4228(5): call 0xffffec68(%rip)
422d(4): add $0x20,%rsp
4231(4): mov 0x18(%rsp),%eax
4235(4): mov %eax,0x0(%r13)
4239(4): add $0x28,%rsp
423d(3): mov %r12,%rax
4240(1): pop %rbx
4241(1): pop %rbp
4242(2): pop %r12
4244(2): pop %r13
4246(2): pop %r14
4248(2): pop %r15
424a(1): ret near (%rsp)
424b(5): nop 0x0(%rax,%rax,1)
4250(2): xor %edi,%edi
4252(5): call 0xe5e(%rip)
4257(8): movdqa 0x204e11(%rip),%xmm0
425f(3): mov %rax,%rbx
4262(7): mov %rax,0x204df7(%rip)
4269(3): movups %xmm0,(%rax)
426c(5): jmp 0xfffffee1(%rip)
4271(5): call 0xffffd26f(%rip)
4276(5): call 0x102a(%rip)

"clone_quoting_options" :
4280(2): push %r12
4282(1): push %rbp
4283(1): push %rbx
4284(3): mov %rdi,%rbx
4287(5): call 0xffffd269(%rip)
428c(3): mov (%rax),%r12d
428f(3): mov %rax,%rbp
4292(7): lea 0x204f67(%rip),%rax
4299(3): test %rbx,%rbx
429c(5): mov $0x38,%esi
42a1(4): cmove %rax,%rbx
42a5(3): mov %rbx,%rdi
42a8(5): call 0xfa8(%rip)
42ad(4): mov %r12d,0x0(%rbp)
42b1(1): pop %rbx
42b2(1): pop %rbp
42b3(2): pop %r12
42b5(1): ret near (%rsp)

"get_quoting_style" :
42c0(7): lea 0x204f39(%rip),%rax
42c7(3): test %rdi,%rdi
42ca(4): cmove %rax,%rdi
42ce(2): mov (%rdi),%eax
42d0(1): ret near (%rsp)

"set_quoting_style" :
42e0(7): lea 0x204f19(%rip),%rax
42e7(3): test %rdi,%rdi
42ea(4): cmove %rax,%rdi
42ee(2): mov %esi,(%rdi)
42f0(1): ret near (%rsp)

"set_char_quoting" :
4300(7): lea 0x204ef9(%rip),%rax
4307(3): test %rdi,%rdi
430a(2): mov %esi,%ecx
430c(4): cmove %rax,%rdi
4310(2): mov %esi,%eax
4312(3): and $0x1f,%ecx
4315(3): shr $0x5,%al
4318(3): movzx %al,%eax
431b(5): lea 0x8(%rdi,%rax,4),%rdi
4320(2): mov (%rdi),%esi
4322(2): mov %esi,%eax
4324(2): shr %cl,%eax
4326(2): xor %eax,%edx
4328(3): and $0x1,%eax
432b(3): and $0x1,%edx
432e(2): shl/sal %cl,%edx
4330(2): xor %esi,%edx
4332(2): mov %edx,(%rdi)
4334(1): ret near (%rsp)

"set_quoting_flags" :
4340(7): lea 0x204eb9(%rip),%rax
4347(3): test %rdi,%rdi
434a(4): cmove %rax,%rdi
434e(3): mov 0x4(%rdi),%eax
4351(3): mov %esi,0x4(%rdi)
4354(1): ret near (%rsp)

"set_custom_quoting" :
4360(7): lea 0x204e99(%rip),%rax
4367(3): test %rdi,%rdi
436a(4): cmove %rax,%rdi
436e(3): test %rsi,%rsi
4371(6): mov $0xa,(%rdi)
4377(2): jz 0x10(%rip)
4379(3): test %rdx,%rdx
437c(2): jz 0xb(%rip)
437e(4): mov %rsi,0x28(%rdi)
4382(4): mov %rdx,0x30(%rdi)
4386(1): ret near (%rsp)
4387(4): sub $0x8,%rsp
438b(5): call 0xffffd155(%rip)

"quotearg_buffer" :
4390(2): push %r15
4392(2): push %r14
4394(7): lea 0x204e65(%rip),%rax
439b(2): push %r13
439d(2): push %r12
439f(3): mov %rdi,%r13
43a2(1): push %rbp
43a3(1): push %rbx
43a4(3): mov %r8,%rbx
43a7(3): mov %rsi,%r14
43aa(3): mov %rdx,%r15
43ad(4): sub $0x18,%rsp
43b1(3): test %r8,%r8
43b4(4): cmove %rax,%rbx
43b8(5): mov %rcx,0x8(%rsp)
43bd(5): call 0xffffd133(%rip)
43c2(3): mov (%rax),%r12d
43c5(3): mov %rax,%rbp
43c8(4): lea 0x8(%rbx),%rax
43cc(4): sub $0x8,%rsp
43d0(4): mov 0x4(%rbx),%r9d
43d4(3): push 0x30(%rbx)
43d7(3): mov (%rbx),%r8d
43da(3): push 0x28(%rbx)
43dd(3): mov %r15,%rdx
43e0(1): push %rax
43e1(5): mov 0x28(%rsp),%rcx
43e6(3): mov %r14,%rsi
43e9(3): mov %r13,%rdi
43ec(5): call 0xffffeaa4(%rip)
43f1(4): mov %r12d,0x0(%rbp)
43f5(4): add $0x38,%rsp
43f9(1): pop %rbx
43fa(1): pop %rbp
43fb(2): pop %r12
43fd(2): pop %r13
43ff(2): pop %r14
4401(2): pop %r15
4403(1): ret near (%rsp)

"quotearg_alloc_mem" :
4410(2): push %r15
4412(2): push %r14
4414(7): lea 0x204de5(%rip),%rax
441b(2): push %r13
441d(2): push %r12
441f(3): mov %rdx,%r12
4422(1): push %rbp
4423(1): push %rbx
4424(3): mov %rcx,%rbx
4427(3): mov %rdi,%r14
442a(3): mov %rsi,%r15
442d(4): sub $0x38,%rsp
4431(3): test %rcx,%rcx
4434(4): cmove %rax,%rbx
4438(2): xor %ebp,%ebp
443a(5): call 0xffffd0b6(%rip)
443f(3): test %r12,%r12
4442(3): mov %rax,%r13
4445(2): mov (%rax),%eax
4447(4): setz %bpl
444b(3): or 0x4(%rbx),%ebp
444e(4): lea 0x8(%rbx),%r10
4452(4): sub $0x8,%rsp
4456(3): mov (%rbx),%r8d
4459(3): mov %r15,%rcx
445c(4): mov %eax,0x14(%rsp)
4460(3): push 0x30(%rbx)
4463(3): mov %r14,%rdx
4466(3): push 0x28(%rbx)
4469(2): push %r10
446b(2): xor %esi,%esi
446d(3): mov %ebp,%r9d
4470(2): xor %edi,%edi
4472(5): mov %r10,0x40(%rsp)
4477(5): call 0xffffea19(%rip)
447c(4): lea 0x1(%rax),%rsi
4480(5): mov %rax,0x48(%rsp)
4485(4): add $0x20,%rsp
4489(3): mov %rsi,%rdi
448c(5): mov %rsi,0x18(%rsp)
4491(5): call 0xbbf(%rip)
4496(5): mov %rax,0x10(%rsp)
449b(4): sub $0x8,%rsp
449f(3): push 0x30(%rbx)
44a2(3): push 0x28(%rbx)
44a5(5): mov 0x38(%rsp),%r10
44aa(3): mov %ebp,%r9d
44ad(3): mov (%rbx),%r8d
44b0(3): mov %r15,%rcx
44b3(3): mov %r14,%rdx
44b6(3): mov %rax,%rdi
44b9(2): push %r10
44bb(5): mov 0x38(%rsp),%rsi
44c0(5): call 0xffffe9d0(%rip)
44c5(4): mov 0x2c(%rsp),%eax
44c9(4): add $0x20,%rsp
44cd(3): test %r12,%r12
44d0(4): mov %eax,0x0(%r13)
44d4(2): jz 0xb(%rip)
44d6(5): mov 0x28(%rsp),%r11
44db(4): mov %r11,(%r12)
44df(5): mov 0x10(%rsp),%rax
44e4(4): add $0x38,%rsp
44e8(1): pop %rbx
44e9(1): pop %rbp
44ea(2): pop %r12
44ec(2): pop %r13
44ee(2): pop %r14
44f0(2): pop %r15
44f2(1): ret near (%rsp)

"quotearg_alloc" :
4500(3): mov %rdx,%rcx
4503(2): xor %edx,%edx
4505(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4510(6): mov 0x204b42(%rip),%eax
4516(2): push %r12
4518(7): mov 0x204b41(%rip),%r12
451f(1): push %rbp
4520(1): push %rbx
4521(3): cmp $0x1,%eax
4524(2): jle 0x2d(%rip)
4526(3): sub $0x2,%eax
4529(5): lea 0x18(%r12),%rbx
452e(4): shl/sal $0x4,%rax
4532(5): lea 0x28(%r12,%rax,1),%rbp
4537(9): nop 0x0(%rax,%rax,1)
4540(3): mov (%rbx),%rdi
4543(4): add $0x10,%rbx
4547(5): call 0xffffcf89(%rip)
454c(3): cmp %rbp,%rbx
454f(2): jnz 0xfffffff1(%rip)
4551(5): mov 0x8(%r12),%rdi
4556(7): lea 0x204ba3(%rip),%rbx
455d(3): cmp %rbx,%rdi
4560(2): jz 0x19(%rip)
4562(5): call 0xffffcf6e(%rip)
4567(b): mov $0x100,0x204afe(%rip)
4572(7): mov %rbx,0x204aff(%rip)
4579(7): lea 0x204af0(%rip),%rbx
4580(3): cmp %rbx,%r12
4583(2): jz 0x11(%rip)
4585(3): mov %r12,%rdi
4588(5): call 0xffffcf48(%rip)
458d(7): mov %rbx,0x204acc(%rip)
4594(1): pop %rbx
4595(a): mov $0x1,0x204ab9(%rip)
459f(1): pop %rbp
45a0(2): pop %r12
45a2(1): ret near (%rsp)

"quotearg_n" :
45b0(7): lea 0x204c49(%rip),%rcx
45b7(7): mov $0xffffffff,%rdx
45be(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
45d0(7): lea 0x204c29(%rip),%rcx
45d7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
45e0(7): lea 0x204c19(%rip),%rcx
45e7(3): mov %rdi,%rsi
45ea(7): mov $0xffffffff,%rdx
45f1(2): xor %edi,%edi
45f3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4600(7): lea 0x204bf9(%rip),%rcx
4607(3): mov %rsi,%rdx
460a(3): mov %rdi,%rsi
460d(2): xor %edi,%edi
460f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4620(4): sub $0x48,%rsp
4624(3): mov %rdx,%rax
4627(9): mov $0x28,%rdx
4630(5): mov %rdx,0x38(%rsp)
4635(2): xor %edx,%edx
4637(3): cmp $0xa,%esi
463a(2): jz 0x6a(%rip)
463c(3): mov %esi,(%rsp)
463f(3): mov %rsp,%rcx
4642(7): mov $0xffffffff,%rdx
4649(3): mov %rax,%rsi
464c(9): mov $0x0,0x4(%rsp)
4655(9): mov $0x0,0xc(%rsp)
465e(9): mov $0x0,0x14(%rsp)
4667(9): mov $0x0,0x1c(%rsp)
4670(9): mov $0x0,0x24(%rsp)
4679(9): mov $0x0,0x2c(%rsp)
4682(8): mov $0x0,0x34(%rsp)
468a(5): call 0xfffffa46(%rip)
468f(5): mov 0x38(%rsp),%rcx
4694(9): xor $0x28,%rcx
469d(2): jnz 0xc(%rip)
469f(4): add $0x48,%rsp
46a3(1): ret near (%rsp)
46a4(5): call 0xffffce3c(%rip)
46a9(5): call 0xffffcef7(%rip)

"quotearg_n_style_mem" :
46b0(4): sub $0x48,%rsp
46b4(3): mov %rdx,%rax
46b7(3): mov %rcx,%rdx
46ba(9): mov $0x28,%rcx
46c3(5): mov %rcx,0x38(%rsp)
46c8(2): xor %ecx,%ecx
46ca(3): cmp $0xa,%esi
46cd(2): jz 0x63(%rip)
46cf(3): mov %esi,(%rsp)
46d2(3): mov %rsp,%rcx
46d5(3): mov %rax,%rsi
46d8(9): mov $0x0,0x4(%rsp)
46e1(9): mov $0x0,0xc(%rsp)
46ea(9): mov $0x0,0x14(%rsp)
46f3(9): mov $0x0,0x1c(%rsp)
46fc(9): mov $0x0,0x24(%rsp)
4705(9): mov $0x0,0x2c(%rsp)
470e(8): mov $0x0,0x34(%rsp)
4716(5): call 0xfffff9ba(%rip)
471b(5): mov 0x38(%rsp),%rdx
4720(9): xor $0x28,%rdx
4729(2): jnz 0xc(%rip)
472b(4): add $0x48,%rsp
472f(1): ret near (%rsp)
4730(5): call 0xffffcdb0(%rip)
4735(5): call 0xffffce6b(%rip)

"quotearg_style" :
4740(3): mov %rsi,%rdx
4743(2): mov %edi,%esi
4745(2): xor %edi,%edi
4747(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4750(3): mov %rdx,%rcx
4753(3): mov %rsi,%rdx
4756(2): mov %edi,%esi
4758(2): xor %edi,%edi
475a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4760(4): sub $0x48,%rsp
4764(2): mov %edx,%ecx
4766(9): mov $0x28,%rax
476f(5): mov %rax,0x38(%rsp)
4774(2): xor %eax,%eax
4776(7): mov 0x204ab3(%rip),%rax
477d(3): mov %rsp,%r8
4780(3): and $0x1f,%ecx
4783(8): movdqa 0x204a75(%rip),%xmm0
478b(5): mov %rax,0x30(%rsp)
4790(2): mov %edx,%eax
4792(4): movaps %xmm0,(%rsp)
4796(3): shr $0x5,%al
4799(3): movzx %al,%eax
479c(5): lea 0x8(%r8,%rax,4),%r9
47a1(8): movdqa 0x204a67(%rip),%xmm0
47a9(5): movaps %xmm0,0x10(%rsp)
47ae(8): movdqa 0x204a6a(%rip),%xmm0
47b6(5): movaps %xmm0,0x20(%rsp)
47bb(3): mov (%r9),%edx
47be(2): mov %edx,%eax
47c0(2): shr %cl,%eax
47c2(2): not %eax
47c4(3): and $0x1,%eax
47c7(2): shl/sal %cl,%eax
47c9(3): mov %r8,%rcx
47cc(2): xor %edx,%eax
47ce(3): mov %rsi,%rdx
47d1(3): mov %rdi,%rsi
47d4(3): mov %eax,(%r9)
47d7(2): xor %edi,%edi
47d9(5): call 0xfffff8f7(%rip)
47de(5): mov 0x38(%rsp),%rsi
47e3(9): xor $0x28,%rsi
47ec(2): jnz 0x7(%rip)
47ee(4): add $0x48,%rsp
47f2(1): ret near (%rsp)
47f3(5): call 0xffffcdad(%rip)

"quotearg_char" :
4800(4): movsx %sil,%edx
4804(7): mov $0xffffffff,%rsi
480b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4810(5): mov $0x3a,%edx
4815(7): mov $0xffffffff,%rsi
481c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4830(5): mov $0x3a,%edx
4835(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4840(4): sub $0x48,%rsp
4844(3): mov %rdx,%rax
4847(9): mov $0x28,%rdx
4850(5): mov %rdx,0x38(%rsp)
4855(2): xor %edx,%edx
4857(3): cmp $0xa,%esi
485a(2): jz 0x6a(%rip)
485c(3): mov %esi,(%rsp)
485f(3): mov %rsp,%rcx
4862(7): mov $0xffffffff,%rdx
4869(3): mov %rax,%rsi
486c(9): mov $0x0,0x4(%rsp)
4875(9): mov $0x4000000,0xc(%rsp)
487e(9): mov $0x0,0x14(%rsp)
4887(9): mov $0x0,0x1c(%rsp)
4890(9): mov $0x0,0x24(%rsp)
4899(9): mov $0x0,0x2c(%rsp)
48a2(8): mov $0x0,0x34(%rsp)
48aa(5): call 0xfffff826(%rip)
48af(5): mov 0x38(%rsp),%rcx
48b4(9): xor $0x28,%rcx
48bd(2): jnz 0xc(%rip)
48bf(4): add $0x48,%rsp
48c3(1): ret near (%rsp)
48c4(5): call 0xffffcc1c(%rip)
48c9(5): call 0xffffccd7(%rip)

"quotearg_n_custom_mem" :
48d0(4): sub $0x48,%rsp
48d4(3): mov %rcx,%r9
48d7(7): mov 0x204952(%rip),%rcx
48de(8): movdqa 0x20491a(%rip),%xmm0
48e6(9): mov $0x28,%rax
48ef(5): mov %rax,0x38(%rsp)
48f4(2): xor %eax,%eax
48f6(4): movaps %xmm0,(%rsp)
48fa(3): test %rsi,%rsi
48fd(5): mov %rcx,0x30(%rsp)
4902(7): mov $0xa,(%rsp)
4909(8): movdqa 0x2048ff(%rip),%xmm0
4911(5): movaps %xmm0,0x10(%rsp)
4916(8): movdqa 0x204902(%rip),%xmm0
491e(5): movaps %xmm0,0x20(%rsp)
4923(2): jz 0x34(%rip)
4925(3): test %rdx,%rdx
4928(2): jz 0x2f(%rip)
492a(5): mov %rsi,0x28(%rsp)
492f(5): mov %rdx,0x30(%rsp)
4934(3): mov %rsp,%rcx
4937(3): mov %r8,%rdx
493a(3): mov %r9,%rsi
493d(5): call 0xfffff793(%rip)
4942(5): mov 0x38(%rsp),%rdi
4947(9): xor $0x28,%rdi
4950(2): jnz 0xc(%rip)
4952(4): add $0x48,%rsp
4956(1): ret near (%rsp)
4957(5): call 0xffffcb89(%rip)
495c(5): call 0xffffcc44(%rip)

"quotearg_n_custom" :
4970(7): mov $0xffffffff,%r8
4977(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4980(3): mov %rdx,%rcx
4983(7): mov $0xffffffff,%r8
498a(3): mov %rsi,%rdx
498d(3): mov %rdi,%rsi
4990(2): xor %edi,%edi
4992(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
49a0(3): mov %rcx,%r8
49a3(3): mov %rdx,%rcx
49a6(3): mov %rsi,%rdx
49a9(3): mov %rdi,%rsi
49ac(2): xor %edi,%edi
49ae(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
49c0(7): lea 0x204659(%rip),%rcx
49c7(5): jmp 0xfffff709(%rip)

"quote_mem" :
49d0(7): lea 0x204649(%rip),%rcx
49d7(3): mov %rsi,%rdx
49da(3): mov %rdi,%rsi
49dd(2): xor %edi,%edi
49df(5): jmp 0xfffff6f1(%rip)

"quote_n" :
49f0(7): lea 0x204629(%rip),%rcx
49f7(7): mov $0xffffffff,%rdx
49fe(5): jmp 0xfffff6d2(%rip)

"quote" :
4a10(7): lea 0x204609(%rip),%rcx
4a17(3): mov %rdi,%rsi
4a1a(7): mov $0xffffffff,%rdx
4a21(2): xor %edi,%edi
4a23(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
4a30(2): push %r15
4a32(2): push %r14
4a34(2): push %r13
4a36(2): push %r12
4a38(3): mov %r9,%r12
4a3b(1): push %rbp
4a3c(1): push %rbx
4a3d(3): mov %rdi,%rbp
4a40(3): mov %r8,%rbx
4a43(4): sub $0x28,%rsp
4a47(3): test %rsi,%rsi
4a4a(6): jz 0x11e(%rip)
4a50(3): mov %rdx,%r8
4a53(7): lea 0x1d4e(%rip),%rdx
4a5a(3): mov %rcx,%r9
4a5d(2): xor %eax,%eax
4a5f(3): mov %rsi,%rcx
4a62(5): mov $0x1,%esi
4a67(5): call 0xffffcd49(%rip)
4a6c(7): lea 0x1d48(%rip),%rsi
4a73(2): xor %edi,%edi
4a75(5): mov $0x5,%edx
4a7a(5): call 0xffffcaf6(%rip)
4a7f(7): lea 0x205a(%rip),%rdx
4a86(3): mov %rax,%rcx
4a89(6): mov $0x7e3,%r8d
4a8f(5): mov $0x1,%esi
4a94(3): mov %rbp,%rdi
4a97(2): xor %eax,%eax
4a99(5): call 0xffffcd17(%rip)
4a9e(7): lea 0x1da3(%rip),%rsi
4aa5(2): xor %edi,%edi
4aa7(5): mov $0x5,%edx
4aac(5): call 0xffffcac4(%rip)
4ab1(3): mov %rbp,%rsi
4ab4(3): mov %rax,%rdi
4ab7(5): call 0xffffcbb9(%rip)
4abc(4): cmp $0x9,%r12
4ac0(6): jnbe 0x340(%rip)
4ac6(7): lea 0x1fd7(%rip),%rdx
4acd(4): movsxd 0x0(%rdx,%r12,4),%rax
4ad1(3): add %rdx,%rax
4ad4(2): jmp %rax
4ad6(a): nop 0x0(%rax,%rax,1)
4ae0(4): mov 0x38(%rbx),%r9
4ae4(4): mov 0x10(%rbx),%rax
4ae8(7): lea 0x1ec9(%rip),%rsi
4aef(4): mov 0x8(%rbx),%r8
4af3(5): mov $0x5,%edx
4af8(2): xor %edi,%edi
4afa(4): mov 0x30(%rbx),%r13
4afe(4): mov 0x28(%rbx),%r12
4b02(5): mov %r9,0x10(%rsp)
4b07(4): mov 0x20(%rbx),%r15
4b0b(4): mov 0x18(%rbx),%r14
4b0f(4): mov %rax,(%rsp)
4b13(5): mov %r8,0x8(%rsp)
4b18(3): mov (%rbx),%rbx
4b1b(5): call 0xffffca55(%rip)
4b20(4): sub $0x8,%rsp
4b24(5): mov 0x18(%rsp),%r9
4b29(3): mov %rax,%rdx
4b2c(3): mov %rbx,%rcx
4b2f(5): mov $0x1,%esi
4b34(3): mov %rbp,%rdi
4b37(2): xor %eax,%eax
4b39(2): push %r9
4b3b(2): push %r13
4b3d(2): push %r12
4b3f(2): push %r15
4b41(2): push %r14
4b43(5): mov 0x30(%rsp),%r9
4b48(5): mov 0x38(%rsp),%r8
4b4d(5): call 0xffffcc63(%rip)
4b52(4): add $0x30,%rsp
4b56(4): add $0x28,%rsp
4b5a(1): pop %rbx
4b5b(1): pop %rbp
4b5c(2): pop %r12
4b5e(2): pop %r13
4b60(2): pop %r14
4b62(2): pop %r15
4b64(1): ret near (%rsp)
4b65(3): nop (%rax)
4b68(3): mov %rcx,%r8
4b6b(3): mov %rdx,%rcx
4b6e(7): lea 0x1c3f(%rip),%rdx
4b75(5): mov $0x1,%esi
4b7a(2): xor %eax,%eax
4b7c(5): call 0xffffcc34(%rip)
4b81(5): jmp 0xfffffeeb(%rip)
4b86(a): nop 0x0(%rax,%rax,1)
4b90(4): mov 0x40(%rbx),%r10
4b94(4): mov 0x38(%rbx),%r9
4b98(7): lea 0x1e49(%rip),%rsi
4b9f(4): mov 0x10(%rbx),%rax
4ba3(4): mov 0x8(%rbx),%r8
4ba7(5): mov $0x5,%edx
4bac(4): mov 0x30(%rbx),%r13
4bb0(4): mov 0x28(%rbx),%r12
4bb4(4): mov 0x20(%rbx),%r15
4bb8(4): mov 0x18(%rbx),%r14
4bbc(3): mov (%rbx),%rbx
4bbf(5): mov %r10,0x18(%rsp)
4bc4(5): mov %r9,0x10(%rsp)
4bc9(4): mov %rax,(%rsp)
4bcd(5): mov %r8,0x8(%rsp)
4bd2(2): xor %edi,%edi
4bd4(5): call 0xffffc99c(%rip)
4bd9(5): mov 0x18(%rsp),%r10
4bde(2): push %r10
4be0(5): jmp 0xffffff44(%rip)
4be5(3): nop (%rax)
4be8(3): mov (%rbx),%rbx
4beb(7): lea 0x1bcd(%rip),%rsi
4bf2(5): mov $0x5,%edx
4bf7(2): xor %edi,%edi
4bf9(5): call 0xffffc977(%rip)
4bfe(4): add $0x28,%rsp
4c02(3): mov %rbx,%rcx
4c05(3): mov %rbp,%rdi
4c08(1): pop %rbx
4c09(1): pop %rbp
4c0a(2): pop %r12
4c0c(2): pop %r13
4c0e(2): pop %r14
4c10(2): pop %r15
4c12(3): mov %rax,%rdx
4c15(5): mov $0x1,%esi
4c1a(2): xor %eax,%eax
4c1c(5): jmp 0xffffcb94(%rip)
4c21(7): nop 0x0(%rax)
4c28(4): mov 0x8(%rbx),%r12
4c2c(7): lea 0x1b9c(%rip),%rsi
4c33(3): mov (%rbx),%rbx
4c36(5): mov $0x5,%edx
4c3b(2): xor %edi,%edi
4c3d(5): call 0xffffc933(%rip)
4c42(4): add $0x28,%rsp
4c46(3): mov %r12,%r8
4c49(3): mov %rbx,%rcx
4c4c(3): mov %rbp,%rdi
4c4f(3): mov %rax,%rdx
4c52(5): mov $0x1,%esi
4c57(1): pop %rbx
4c58(1): pop %rbp
4c59(2): pop %r12
4c5b(2): pop %r13
4c5d(2): pop %r14
4c5f(2): pop %r15
4c61(2): xor %eax,%eax
4c63(5): jmp 0xffffcb4d(%rip)
4c68(8): nop 0x0(%rax,%rax,1)
4c70(4): mov 0x10(%rbx),%r13
4c74(4): mov 0x8(%rbx),%r12
4c78(7): lea 0x1b67(%rip),%rsi
4c7f(3): mov (%rbx),%rbx
4c82(5): mov $0x5,%edx
4c87(2): xor %edi,%edi
4c89(5): call 0xffffc8e7(%rip)
4c8e(4): add $0x28,%rsp
4c92(3): mov %r13,%r9
4c95(3): mov %r12,%r8
4c98(3): mov %rbx,%rcx
4c9b(3): mov %rbp,%rdi
4c9e(3): mov %rax,%rdx
4ca1(1): pop %rbx
4ca2(1): pop %rbp
4ca3(2): pop %r12
4ca5(2): pop %r13
4ca7(2): pop %r14
4ca9(2): pop %r15
4cab(5): mov $0x1,%esi
4cb0(2): xor %eax,%eax
4cb2(5): jmp 0xffffcafe(%rip)
4cb7(9): nop 0x0(%rax,%rax,1)
4cc0(7): lea 0x1c51(%rip),%rsi
4cc7(5): mov $0x5,%edx
4ccc(2): xor %edi,%edi
4cce(4): mov 0x18(%rbx),%r14
4cd2(4): mov 0x10(%rbx),%r13
4cd6(4): mov 0x8(%rbx),%r12
4cda(3): mov (%rbx),%rbx
4cdd(5): call 0xffffc893(%rip)
4ce2(4): sub $0x8,%rsp
4ce6(2): push %r14
4ce8(3): mov %rax,%rdx
4ceb(3): mov %r13,%r9
4cee(3): mov %r12,%r8
4cf1(3): mov %rbx,%rcx
4cf4(3): mov %rbp,%rdi
4cf7(5): mov $0x1,%esi
4cfc(2): xor %eax,%eax
4cfe(5): call 0xffffcab2(%rip)
4d03(1): pop %rax
4d04(1): pop %rdx
4d05(4): add $0x28,%rsp
4d09(1): pop %rbx
4d0a(1): pop %rbp
4d0b(2): pop %r12
4d0d(2): pop %r13
4d0f(2): pop %r14
4d11(2): pop %r15
4d13(1): ret near (%rsp)
4d14(4): nop 0x0(%rax)
4d18(4): mov 0x20(%rbx),%r15
4d1c(7): lea 0x1c15(%rip),%rsi
4d23(5): mov $0x5,%edx
4d28(2): xor %edi,%edi
4d2a(4): mov 0x18(%rbx),%r14
4d2e(4): mov 0x10(%rbx),%r13
4d32(4): mov 0x8(%rbx),%r12
4d36(3): mov (%rbx),%rbx
4d39(5): call 0xffffc837(%rip)
4d3e(2): push %r15
4d40(2): jmp 0xffffffa6(%rip)
4d42(6): nop 0x0(%rax,%rax,1)
4d48(4): mov 0x8(%rbx),%r8
4d4c(4): mov 0x28(%rbx),%r12
4d50(7): lea 0x1c09(%rip),%rsi
4d57(4): mov 0x20(%rbx),%r15
4d5b(4): mov 0x18(%rbx),%r14
4d5f(5): mov $0x5,%edx
4d64(4): mov 0x10(%rbx),%r13
4d68(2): xor %edi,%edi
4d6a(3): mov (%rbx),%rbx
4d6d(4): mov %r8,(%rsp)
4d71(5): call 0xffffc7ff(%rip)
4d76(4): sub $0x8,%rsp
4d7a(3): mov %r13,%r9
4d7d(2): push %r12
4d7f(2): push %r15
4d81(2): push %r14
4d83(5): mov 0x20(%rsp),%r8
4d88(3): mov %rbx,%rcx
4d8b(3): mov %rax,%rdx
4d8e(3): mov %rbp,%rdi
4d91(5): mov $0x1,%esi
4d96(2): xor %eax,%eax
4d98(5): call 0xffffca18(%rip)
4d9d(4): add $0x20,%rsp
4da1(4): add $0x28,%rsp
4da5(1): pop %rbx
4da6(1): pop %rbp
4da7(2): pop %r12
4da9(2): pop %r13
4dab(2): pop %r14
4dad(2): pop %r15
4daf(1): ret near (%rsp)
4db0(4): mov 0x10(%rbx),%r9
4db4(4): mov 0x30(%rbx),%r13
4db8(7): lea 0x1bc9(%rip),%rsi
4dbf(4): mov 0x28(%rbx),%r12
4dc3(4): mov 0x20(%rbx),%r15
4dc7(5): mov $0x5,%edx
4dcc(4): mov 0x18(%rbx),%r14
4dd0(4): mov 0x8(%rbx),%r8
4dd4(2): xor %edi,%edi
4dd6(5): mov %r9,0x8(%rsp)
4ddb(3): mov (%rbx),%rbx
4dde(4): mov %r8,(%rsp)
4de2(5): call 0xffffc78e(%rip)
4de7(2): push %r13
4de9(2): push %r12
4deb(2): push %r15
4ded(2): push %r14
4def(5): mov 0x28(%rsp),%r9
4df4(2): jmp 0xffffff8f(%rip)
4df6(a): nop 0x0(%rax,%rax,1)
4e00(4): mov 0x40(%rbx),%r10
4e04(4): mov 0x38(%rbx),%r9
4e08(5): mov $0x5,%edx
4e0d(4): mov 0x10(%rbx),%rax
4e11(4): mov 0x8(%rbx),%r8
4e15(7): lea 0x1c04(%rip),%rsi
4e1c(4): mov 0x30(%rbx),%r13
4e20(4): mov 0x28(%rbx),%r12
4e24(4): mov 0x20(%rbx),%r15
4e28(4): mov 0x18(%rbx),%r14
4e2c(5): mov %r10,0x18(%rsp)
4e31(5): mov %r9,0x10(%rsp)
4e36(4): mov %rax,(%rsp)
4e3a(5): mov %r8,0x8(%rsp)
4e3f(3): mov (%rbx),%rbx
4e42(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4e50(3): xor %r9d,%r9d
4e53(4): cmp $0x0,(%r8)
4e57(2): jz 0x14(%rip)
4e59(7): nop 0x0(%rax)
4e60(4): add $0x1,%r9
4e64(5): cmp $0x0,0x0(%r8,%r9,8)
4e69(2): jnz 0xfffffff7(%rip)
4e6b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
4e70(4): sub $0x68,%rsp
4e74(3): mov %r8,%r10
4e77(3): xor %r9d,%r9d
4e7a(9): mov $0x28,%rax
4e83(5): mov %rax,0x58(%rsp)
4e88(2): xor %eax,%eax
4e8a(3): mov %rsp,%r8
4e8d(3): nop (%rax)
4e90(3): mov (%r10),%eax
4e93(3): cmp $0x2f,%eax
4e96(2): jnbe 0x44(%rip)
4e98(3): mov %eax,%r11d
4e9b(4): add 0x10(%r10),%r11
4e9f(3): add $0x8,%eax
4ea2(3): mov %eax,(%r10)
4ea5(3): mov (%r11),%rax
4ea8(3): test %rax,%rax
4eab(4): mov %rax,0x0(%r8,%r9,8)
4eaf(2): jz 0xc(%rip)
4eb1(4): add $0x1,%r9
4eb5(4): cmp $0xa,%r9
4eb9(2): jnz 0xffffffd7(%rip)
4ebb(5): call 0xfffffb75(%rip)
4ec0(5): mov 0x58(%rsp),%rax
4ec5(9): xor $0x28,%rax
4ece(2): jnz 0x7(%rip)
4ed0(4): add $0x68,%rsp
4ed4(1): ret near (%rsp)
4ed5(5): call 0xffffc6cb(%rip)
4eda(4): mov 0x8(%r10),%r11
4ede(4): lea 0x8(%r11),%rax
4ee2(4): mov %rax,0x8(%r10)
4ee6(2): jmp 0xffffffbf(%rip)

"version_etc" :
4ef0(1): push %rbp
4ef1(1): push %rbx
4ef2(6): mov $0x20,%r10d
4ef8(3): xor %r11d,%r11d
4efb(7): sub $0xb8,%rsp
4f02(9): mov $0x28,%rax
4f0b(5): mov %rax,0x78(%rsp)
4f10(2): xor %eax,%eax
4f12(8): lea 0xd0(%rsp),%rax
4f1a(8): mov %r8,0xa0(%rsp)
4f22(8): lea 0xd0(%rsp),%rbx
4f2a(5): lea 0x20(%rsp),%r8
4f2f(8): mov %r9,0xa8(%rsp)
4f37(8): mov $0x20,0x8(%rsp)
4f3f(5): mov %rax,0x10(%rsp)
4f44(8): lea 0x80(%rsp),%rax
4f4c(3): xor %r9d,%r9d
4f4f(5): mov %rax,0x18(%rsp)
4f54(3): mov %rax,%rbp
4f57(9): nop 0x0(%rax,%rax,1)
4f60(4): cmp $0x2f,%r10d
4f64(2): jnbe 0x58(%rip)
4f66(3): mov %r10d,%eax
4f69(6): mov $0x1,%r11d
4f6f(4): add $0x8,%r10d
4f73(3): add %rbp,%rax
4f76(3): mov (%rax),%rax
4f79(3): test %rax,%rax
4f7c(4): mov %rax,0x0(%r8,%r9,8)
4f80(2): jz 0xc(%rip)
4f82(4): add $0x1,%r9
4f86(4): cmp $0xa,%r9
4f8a(2): jnz 0xffffffd6(%rip)
4f8c(3): test %r11b,%r11b
4f8f(2): jnz 0x26(%rip)
4f91(5): call 0xfffffa9f(%rip)
4f96(5): mov 0x78(%rsp),%rax
4f9b(9): xor $0x28,%rax
4fa4(2): jnz 0xc(%rip)
4fa6(7): add $0xb8,%rsp
4fad(1): pop %rbx
4fae(1): pop %rbp
4faf(1): ret near (%rsp)
4fb0(5): call 0xffffc5f0(%rip)
4fb5(5): mov %r10d,0x8(%rsp)
4fba(2): jmp 0xffffffd7(%rip)
4fbc(3): mov %rbx,%rax
4fbf(4): add $0x8,%rbx
4fc3(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4fd0(1): push %rbx
4fd1(7): lea 0x182a(%rip),%rsi
4fd8(5): mov $0x5,%edx
4fdd(2): xor %edi,%edi
4fdf(5): call 0xffffc591(%rip)
4fe4(7): lea 0x182c(%rip),%rdx
4feb(3): mov %rax,%rsi
4fee(5): mov $0x1,%edi
4ff3(2): xor %eax,%eax
4ff5(5): call 0xffffc73b(%rip)
4ffa(7): lea 0x182c(%rip),%rsi
5001(5): mov $0x5,%edx
5006(2): xor %edi,%edi
5008(5): call 0xffffc568(%rip)
500d(7): lea 0x107c(%rip),%rcx
5014(7): lea 0xc24(%rip),%rdx
501b(3): mov %rax,%rsi
501e(5): mov $0x1,%edi
5023(2): xor %eax,%eax
5025(5): call 0xffffc70b(%rip)
502a(7): mov 0x204057(%rip),%rbx
5031(7): lea 0x1a28(%rip),%rsi
5038(2): xor %edi,%edi
503a(5): mov $0x5,%edx
503f(5): call 0xffffc531(%rip)
5044(3): mov %rbx,%rsi
5047(3): mov %rax,%rdi
504a(1): pop %rbx
504b(5): jmp 0xffffc625(%rip)

"xmalloc" :
5050(1): push %rbx
5051(3): mov %rdi,%rbx
5054(5): call 0xffffc66c(%rip)
5059(3): test %rax,%rax
505c(2): jnz 0x7(%rip)
505e(3): test %rbx,%rbx
5061(2): jnz 0x4(%rip)
5063(1): pop %rbx
5064(1): ret near (%rsp)
5065(5): call 0x23b(%rip)

"xnmalloc" :
5070(3): mov %rdi,%rax
5073(3): mul %rax,%rsi,%rdx
5076(3): mov %rax,%rdi
5079(3): seto %al
507c(3): test %rdi,%rdi
507f(2): js 0xc(%rip)
5081(3): movzx %al,%eax
5084(3): test %rax,%rax
5087(2): jnz 0x4(%rip)
5089(2): jmp 0xffffffc7(%rip)
508b(4): sub $0x8,%rsp
508f(5): call 0x211(%rip)

"xrealloc" :
50b0(3): test %rsi,%rsi
50b3(1): push %rbx
50b4(3): mov %rsi,%rbx
50b7(2): jnz 0x7(%rip)
50b9(3): test %rdi,%rdi
50bc(2): jnz 0x1c(%rip)
50be(3): mov %rbx,%rsi
50c1(5): call 0xffffc64f(%rip)
50c6(3): test %rax,%rax
50c9(2): jnz 0x7(%rip)
50cb(3): test %rbx,%rbx
50ce(2): jnz 0x13(%rip)
50d0(1): pop %rbx
50d1(1): ret near (%rsp)
50d2(6): nop 0x0(%rax,%rax,1)
50d8(5): call 0xffffc3f8(%rip)
50dd(2): xor %eax,%eax
50df(1): pop %rbx
50e0(1): ret near (%rsp)
50e1(5): call 0x1bf(%rip)

"xnrealloc" :
50f0(3): mov %rsi,%rax
50f3(3): mul %rax,%rdx,%rdx
50f6(3): mov %rax,%rsi
50f9(3): seto %al
50fc(3): test %rsi,%rsi
50ff(2): js 0xc(%rip)
5101(3): movzx %al,%eax
5104(3): test %rax,%rax
5107(2): jnz 0x4(%rip)
5109(2): jmp 0xffffffa7(%rip)
510b(4): sub $0x8,%rsp
510f(5): call 0x191(%rip)

"x2nrealloc" :
5120(3): test %rdi,%rdi
5123(3): mov %rdx,%r9
5126(3): mov (%rsi),%rcx
5129(2): jz 0x37(%rip)
512b(2): xor %edx,%edx
512d(a): mov $0x6148914691236517204,%rax
5137(3): div %r9,%rax
513a(3): cmp %rcx,%rax
513d(2): jbe 0x3e(%rip)
513f(3): mov %rcx,%rax
5142(3): shr $0x1,%rax
5145(5): lea 0x1(%rax,%rcx,1),%rcx
514a(3): mov %rcx,(%rsi)
514d(4): imul %r9,%rcx
5151(3): mov %rcx,%rsi
5154(5): jmp 0xffffff5c(%rip)
5159(7): nop 0x0(%rax)
5160(3): test %rcx,%rcx
5163(2): jz 0x25(%rip)
5165(3): mov %rcx,%rax
5168(3): mul %rax,%r9,%rdx
516b(3): seto %dl
516e(3): test %rax,%rax
5171(3): movzx %dl,%edx
5174(2): js 0x7(%rip)
5176(3): test %rdx,%rdx
5179(2): jz 0xffffffd1(%rip)
517b(4): sub $0x8,%rsp
517f(5): call 0x121(%rip)
5184(4): nop 0x0(%rax)
5188(2): xor %edx,%edx
518a(5): mov $0x80,%eax
518f(3): xor %r8d,%r8d
5192(3): div %r9,%rax
5195(3): test %rax,%rax
5198(4): setz %r8b
519c(4): lea 0x0(%r8,%rax,1),%rcx
51a0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
51b0(3): test %rdi,%rdi
51b3(3): mov (%rsi),%rax
51b6(2): jz 0x2a(%rip)
51b8(a): mov $0x6148914691236517203,%rdx
51c2(3): cmp %rdx,%rax
51c5(2): jnbe 0x2c(%rip)
51c7(3): mov %rax,%rdx
51ca(3): shr $0x1,%rdx
51cd(5): lea 0x1(%rdx,%rax,1),%rax
51d2(3): mov %rax,(%rsi)
51d5(3): mov %rax,%rsi
51d8(5): jmp 0xfffffed8(%rip)
51dd(3): nop (%rax)
51e0(3): test %rax,%rax
51e3(5): mov $0x80,%edx
51e8(4): cmove %rdx,%rax
51ec(3): test %rax,%rax
51ef(2): jns 0xffffffe3(%rip)
51f1(4): sub $0x8,%rsp
51f5(5): call 0xab(%rip)

"xzalloc" :
5200(1): push %rbx
5201(3): mov %rdi,%rbx
5204(5): call 0xfffffe4c(%rip)
5209(3): mov %rbx,%rdx
520c(2): xor %esi,%esi
520e(3): mov %rax,%rdi
5211(1): pop %rbx
5212(5): jmp 0xffffc41e(%rip)

"xcalloc" :
5220(3): mov %rdi,%rax
5223(4): sub $0x8,%rsp
5227(3): mul %rax,%rsi,%rdx
522a(3): seto %dl
522d(3): test %rax,%rax
5230(2): js 0x19(%rip)
5232(3): movzx %dl,%edx
5235(3): test %rdx,%rdx
5238(2): jnz 0x11(%rip)
523a(5): call 0xffffc446(%rip)
523f(3): test %rax,%rax
5242(2): jz 0x7(%rip)
5244(4): add $0x8,%rsp
5248(1): ret near (%rsp)
5249(5): call 0x57(%rip)

"xmemdup" :
5250(1): push %rbp
5251(1): push %rbx
5252(3): mov %rdi,%rbp
5255(3): mov %rsi,%rdi
5258(3): mov %rsi,%rbx
525b(4): sub $0x8,%rsp
525f(5): call 0xfffffdf1(%rip)
5264(4): add $0x8,%rsp
5268(3): mov %rbx,%rdx
526b(3): mov %rbp,%rsi
526e(1): pop %rbx
526f(1): pop %rbp
5270(3): mov %rax,%rdi
5273(5): jmp 0xffffc42d(%rip)

"xstrdup" :
5280(1): push %rbx
5281(3): mov %rdi,%rbx
5284(5): call 0xffffc30c(%rip)
5289(3): mov %rbx,%rdi
528c(4): lea 0x1(%rax),%rsi
5290(1): pop %rbx
5291(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
52a0(7): lea 0x1868(%rip),%rsi
52a7(4): sub $0x8,%rsp
52ab(5): mov $0x5,%edx
52b0(2): xor %edi,%edi
52b2(5): call 0xffffc2be(%rip)
52b7(6): mov 0x203d5b(%rip),%edi
52bd(7): lea 0xfc0(%rip),%rdx
52c4(3): mov %rax,%rcx
52c7(2): xor %esi,%esi
52c9(2): xor %eax,%eax
52cb(5): call 0xffffc485(%rip)
52d0(5): call 0xffffc210(%rip)

"xnumtoumax" :
52e0(2): push %r15
52e2(2): push %r14
52e4(3): mov %rcx,%r15
52e7(2): push %r13
52e9(2): push %r12
52eb(3): mov %rdx,%r14
52ee(1): push %rbp
52ef(1): push %rbx
52f0(2): mov %esi,%edx
52f2(2): xor %esi,%esi
52f4(3): mov %rdi,%r12
52f7(3): mov %r9,%r13
52fa(4): sub $0x18,%rsp
52fe(3): mov %rsp,%rcx
5301(4): mov 0x50(%rsp),%ebx
5305(9): mov $0x28,%rax
530e(5): mov %rax,0x8(%rsp)
5313(2): xor %eax,%eax
5315(5): call 0xfb(%rip)
531a(2): test %eax,%eax
531c(6): jnz 0x94(%rip)
5322(4): mov (%rsp),%rbp
5326(3): cmp %r14,%rbp
5329(2): jb 0x7(%rip)
532b(3): cmp %r15,%rbp
532e(2): jbe 0x56(%rip)
5330(5): call 0xffffc1c0(%rip)
5335(7): cmp $0x40000000,%rbp
533c(3): mov %rax,%r14
533f(2): sbb %eax,%eax
5341(3): and $0xd7,%eax
5344(3): add $0x4b,%eax
5347(3): mov %eax,(%r14)
534a(3): mov %r12,%rdi
534d(5): call 0xfffff6c3(%rip)
5352(3): mov (%r14),%esi
5355(3): mov %rax,%r8
5358(5): mov $0x0,%eax
535d(7): lea 0xf1c(%rip),%rdx
5364(3): mov %r13,%rcx
5367(3): cmp $0x16,%esi
536a(3): cmove %eax,%esi
536d(2): test %ebx,%ebx
536f(5): mov $0x1,%eax
5374(3): cmove %eax,%ebx
5377(2): xor %eax,%eax
5379(2): mov %ebx,%edi
537b(5): call 0xffffc3d5(%rip)
5380(4): mov (%rsp),%rbp
5384(5): mov 0x8(%rsp),%rdx
5389(9): xor $0x28,%rdx
5392(3): mov %rbp,%rax
5395(2): jnz 0x46(%rip)
5397(4): add $0x18,%rsp
539b(1): pop %rbx
539c(1): pop %rbp
539d(2): pop %r12
539f(2): pop %r13
53a1(2): pop %r14
53a3(2): pop %r15
53a5(1): ret near (%rsp)
53a6(a): nop 0x0(%rax,%rax,1)
53b0(2): mov %eax,%ebp
53b2(5): call 0xffffc13e(%rip)
53b7(3): cmp $0x1,%ebp
53ba(3): mov %rax,%r14
53bd(2): jz 0x13(%rip)
53bf(3): cmp $0x3,%ebp
53c2(2): jnz 0xffffff88(%rip)
53c4(6): mov $0x0,(%rax)
53ca(5): jmp 0xffffff80(%rip)
53cf(1): nop 
53d0(6): mov $0x4b,(%rax)
53d6(5): jmp 0xffffff74(%rip)
53db(5): call 0xffffc1c5(%rip)

"xdectoumax" :
53e0(4): sub $0x10,%rsp
53e4(2): push %r9
53e6(3): mov %r8,%r9
53e9(3): mov %rcx,%r8
53ec(3): mov %rdx,%rcx
53ef(3): mov %rsi,%rdx
53f2(5): mov $0xa,%esi
53f7(5): call 0xfffffee9(%rip)
53fc(4): add $0x18,%rsp
5400(1): ret near (%rsp)

"xstrtoumax" :
5410(2): push %r15
5412(2): push %r14
5414(2): push %r13
5416(2): push %r12
5418(1): push %rbp
5419(1): push %rbx
541a(4): sub $0x28,%rsp
541e(9): mov $0x28,%rax
5427(5): mov %rax,0x18(%rsp)
542c(2): xor %eax,%eax
542e(3): cmp $0x24,%edx
5431(6): jnbe 0x364(%rip)
5437(5): lea 0x10(%rsp),%rax
543c(3): mov %rsi,%r15
543f(3): test %rsi,%rsi
5442(3): mov %rdi,%rbp
5445(4): mov %edx,0x8(%rsp)
5449(3): mov %rcx,%r14
544c(3): mov %r8,%r13
544f(4): cmove %rax,%r15
5453(5): call 0xffffc09d(%rip)
5458(6): mov $0x0,(%rax)
545e(3): mov %rax,%r12
5461(4): movzx 0x0(%rbp),%ebx
5465(5): call 0xffffc37b(%rip)
546a(4): mov 0x8(%rsp),%edx
546e(3): mov (%rax),%rsi
5471(3): mov %rbp,%rax
5474(2): jmp 0x13(%rip)
5476(a): nop 0x0(%rax,%rax,1)
5480(4): add $0x1,%rax
5484(3): movzx (%rax),%ebx
5487(3): movzx %bl,%ecx
548a(5): test $0x20,0x1(%rsi,%rcx,2)
548f(2): jnz 0xfffffff1(%rip)
5491(3): cmp $0x2d,%bl
5494(2): jz 0x54(%rip)
5496(2): xor %ecx,%ecx
5498(3): mov %r15,%rsi
549b(3): mov %rbp,%rdi
549e(5): call 0xffffc182(%rip)
54a3(3): mov (%r15),%rcx
54a6(3): mov %rax,%rbx
54a9(3): cmp %rbp,%rcx
54ac(2): jz 0x2c(%rip)
54ae(4): mov (%r12),%eax
54b2(2): test %eax,%eax
54b4(2): jz 0x64(%rip)
54b6(3): cmp $0x22,%eax
54b9(5): mov $0x1,%ebp
54be(2): jnz 0x2a(%rip)
54c0(3): test %r13,%r13
54c3(2): jz 0xb(%rip)
54c5(4): movzx (%rcx),%r12d
54c9(3): test %r12b,%r12b
54cc(2): jnz 0x7b(%rip)
54ce(3): mov %rbx,(%r14)
54d1(2): jmp 0x1c(%rip)
54d3(5): nop 0x0(%rax,%rax,1)
54d8(3): test %r13,%r13
54db(5): mov %rcx,0x8(%rsp)
54e0(2): jnz 0x40(%rip)
54e2(6): nop 0x0(%rax,%rax,1)
54e8(5): mov $0x4,%ebp
54ed(5): mov 0x18(%rsp),%rdi
54f2(9): xor $0x28,%rdi
54fb(2): mov %ebp,%eax
54fd(6): jnz 0x293(%rip)
5503(4): add $0x28,%rsp
5507(1): pop %rbx
5508(1): pop %rbp
5509(2): pop %r12
550b(2): pop %r13
550d(2): pop %r14
550f(2): pop %r15
5511(1): ret near (%rsp)
5512(6): nop 0x0(%rax,%rax,1)
5518(2): xor %ebp,%ebp
551a(2): jmp 0xffffffa6(%rip)
551c(4): nop 0x0(%rax)
5520(5): movzx 0x0(%rbp),%r12d
5525(3): test %r12b,%r12b
5528(2): jz 0xffffffc0(%rip)
552a(4): movsx %r12b,%esi
552e(3): mov %r13,%rdi
5531(2): xor %ebp,%ebp
5533(5): call 0xffffc09d(%rip)
5538(3): test %rax,%rax
553b(5): mov $0x1,%ebx
5540(5): mov 0x8(%rsp),%rcx
5545(2): jz 0xffffffa3(%rip)
5547(4): movsx %r12b,%esi
554b(3): mov %r13,%rdi
554e(5): mov %rcx,0x8(%rsp)
5553(5): call 0xffffc07d(%rip)
5558(3): test %rax,%rax
555b(5): mov 0x8(%rsp),%rcx
5560(6): jz 0xcc(%rip)
5566(5): lea 0xffffffbb(%r12),%eax
556b(2): cmp $0x2f,%al
556d(2): jnbe 0x53(%rip)
556f(a): mov $0x142129060940101,%rdx
5579(4): bt %rax,%rdx
557d(2): jnb 0x43(%rip)
557f(5): mov $0x30,%esi
5584(3): mov %r13,%rdi
5587(5): mov %rcx,0x8(%rsp)
558c(5): call 0xffffc044(%rip)
5591(3): test %rax,%rax
5594(5): mov 0x8(%rsp),%rcx
5599(2): jz 0x27(%rip)
559b(4): movzx 0x1(%rcx),%eax
559f(2): cmp $0x44,%al
55a1(2): jz 0xe(%rip)
55a3(2): cmp $0x69,%al
55a5(6): jz 0x1d3(%rip)
55ab(2): cmp $0x42,%al
55ad(2): jnz 0x13(%rip)
55af(5): mov $0x2,%edi
55b4(5): mov $0x3e8,%esi
55b9(2): jmp 0x11(%rip)
55bb(5): nop 0x0(%rax,%rax,1)
55c0(5): mov $0x1,%edi
55c5(5): mov $0x400,%esi
55ca(4): sub $0x42,%r12d
55ce(4): cmp $0x35,%r12b
55d2(2): jnbe 0x5a(%rip)
55d4(7): lea 0x158d(%rip),%rdx
55db(4): movzx %r12b,%r12d
55df(4): movsxd 0x0(%rdx,%r12,4),%rax
55e3(3): add %rdx,%rax
55e6(2): jmp %rax
55e8(3): mov %rbx,%rax
55eb(3): mul %rax,%rsi,%rdx
55ee(6): jo 0x1f3(%rip)
55f4(3): xor %r8d,%r8d
55f7(3): mul %rax,%rsi,%rdx
55fa(6): jo 0x1d8(%rip)
5600(3): mov %rax,%rbx
5603(3): or %r8d,%ebp
5606(a): nop 0x0(%rax,%rax,1)
5610(3): movsxd %edi,%rdi
5613(2): mov %ebp,%eax
5615(3): add %rdi,%rcx
5618(3): or $0x2,%eax
561b(3): mov %rcx,(%r15)
561e(3): cmp $0x0,(%rcx)
5621(3): mov %rbx,(%r14)
5624(3): cmovne %eax,%ebp
5627(5): jmp 0xfffffec6(%rip)
562c(3): mov %rbx,(%r14)
562f(3): or $0x2,%ebp
5632(5): jmp 0xfffffebb(%rip)
5637(5): mov $0x2,%edx
563c(3): mov %rdx,%rax
563f(3): mul %rax,%rbx,%rdx
5642(6): jo 0x9c(%rip)
5648(3): add %rbx,%rbx
564b(2): jmp 0xffffffc5(%rip)
564d(5): mov $0x200,%edx
5652(3): mov %rdx,%rax
5655(3): mul %rax,%rbx,%rdx
5658(6): jo 0x86(%rip)
565e(4): shl/sal $0x9,%rbx
5662(2): jmp 0xffffffae(%rip)
5664(6): mov $0x7,%r8d
566a(3): xor %r9d,%r9d
566d(3): nop (%rax)
5670(3): mov %rbx,%rax
5673(3): mul %rax,%rsi,%rdx
5676(3): mov %rax,%rbx
5679(6): jo 0x195(%rip)
567f(4): sub $0x1,%r8d
5683(2): jnz 0xffffffed(%rip)
5685(3): or %r9d,%ebp
5688(2): jmp 0xffffff88(%rip)
568a(6): mov $0x8,%r8d
5690(3): xor %r9d,%r9d
5693(5): nop 0x0(%rax,%rax,1)
5698(3): mov %rbx,%rax
569b(3): mul %rax,%rsi,%rdx
569e(3): mov %rax,%rbx
56a1(6): jo 0x14f(%rip)
56a7(4): sub $0x1,%r8d
56ab(2): jnz 0xffffffed(%rip)
56ad(2): jmp 0xffffffd8(%rip)
56af(6): mov $0x4,%r8d
56b5(3): xor %r9d,%r9d
56b8(3): mov %rbx,%rax
56bb(3): mul %rax,%rsi,%rdx
56be(3): mov %rax,%rbx
56c1(6): jo 0x102(%rip)
56c7(4): sub $0x1,%r8d
56cb(2): jnz 0xffffffed(%rip)
56cd(2): jmp 0xffffffb8(%rip)
56cf(3): mov %rbx,%rax
56d2(3): mul %rax,%rsi,%rdx
56d5(3): mov %rax,%rbx
56d8(6): jno 0xffffff38(%rip)
56de(5): mov $0x1,%ebp
56e3(4): or $0xffffffff,%rbx
56e7(5): jmp 0xffffff29(%rip)
56ec(4): nop 0x0(%rax)
56f0(6): mov $0x5,%r8d
56f6(3): xor %r9d,%r9d
56f9(3): mov %rbx,%rax
56fc(3): mul %rax,%rsi,%rdx
56ff(3): mov %rax,%rbx
5702(6): jo 0xfd(%rip)
5708(4): sub $0x1,%r8d
570c(2): jnz 0xffffffed(%rip)
570e(5): jmp 0xffffff77(%rip)
5713(6): mov $0x6,%r8d
5719(3): xor %r9d,%r9d
571c(3): mov %rbx,%rax
571f(3): mul %rax,%rsi,%rdx
5722(3): mov %rax,%rbx
5725(6): jo 0x8f(%rip)
572b(4): sub $0x1,%r8d
572f(2): jnz 0xffffffed(%rip)
5731(5): jmp 0xffffff54(%rip)
5736(5): mov $0x400,%edx
573b(3): mov %rdx,%rax
573e(3): mul %rax,%rbx,%rdx
5741(2): jo 0xffffff9d(%rip)
5743(4): shl/sal $0xa,%rbx
5747(5): jmp 0xfffffec9(%rip)
574c(3): mov %rbx,%rax
574f(3): mul %rax,%rsi,%rdx
5752(6): jo 0xcb(%rip)
5758(3): xor %r8d,%r8d
575b(3): mul %rax,%rsi,%rdx
575e(6): jno 0xfffffe99(%rip)
5764(6): mov $0x1,%r8d
576a(4): or $0xffffffff,%rax
576e(5): jmp 0xfffffe89(%rip)
5773(5): nop 0x0(%rax,%rax,1)
5778(2): xor %edi,%edi
577a(4): cmp $0x42,0x2(%rcx)
577e(5): mov $0x400,%esi
5783(4): setz %dil
5787(4): lea 0x1(%rdi,%rdi,1),%edi
578b(5): jmp 0xfffffe3f(%rip)
5790(5): call 0xffffbe10(%rip)
5795(7): lea 0x14a4(%rip),%rcx
579c(7): lea 0x137d(%rip),%rsi
57a3(7): lea 0x1396(%rip),%rdi
57aa(5): mov $0x54,%edx
57af(5): call 0xffffbe61(%rip)
57b4(6): mov $0x1,%r9d
57ba(4): or $0xffffffff,%rbx
57be(5): jmp 0xffffff6d(%rip)
57c3(6): mov $0x1,%r9d
57c9(4): or $0xffffffff,%rbx
57cd(5): jmp 0xfffffefa(%rip)
57d2(6): mov $0x1,%r8d
57d8(4): or $0xffffffff,%rbx
57dc(5): jmp 0xfffffe27(%rip)
57e1(4): or $0xffffffff,%rax
57e5(6): mov $0x1,%r8d
57eb(5): jmp 0xfffffe0c(%rip)
57f0(6): mov $0x1,%r9d
57f6(4): or $0xffffffff,%rbx
57fa(5): jmp 0xfffffead(%rip)
57ff(6): mov $0x1,%r9d
5805(4): or $0xffffffff,%rbx
5809(5): jmp 0xfffffeff(%rip)
580e(6): mov $0x1,%r9d
5814(4): or $0xffffffff,%rbx
5818(5): jmp 0xfffffe67(%rip)
581d(6): mov $0x1,%r8d
5823(4): or $0xffffffff,%rax
5827(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
5830(2): push %r12
5832(1): push %rbp
5833(1): push %rbx
5834(3): mov %rdi,%rbx
5837(5): call 0xffffbe79(%rip)
583c(2): test %eax,%eax
583e(3): mov %rbx,%rdi
5841(2): js 0x56(%rip)
5843(5): call 0xffffbead(%rip)
5848(2): test %eax,%eax
584a(2): jnz 0x2e(%rip)
584c(3): mov %rbx,%rdi
584f(5): call 0x61(%rip)
5854(2): test %eax,%eax
5856(2): jz 0x3e(%rip)
5858(5): call 0xffffbc98(%rip)
585d(3): mov (%rax),%r12d
5860(3): mov %rbx,%rdi
5863(3): mov %rax,%rbp
5866(5): call 0xffffbcea(%rip)
586b(3): test %r12d,%r12d
586e(2): jnz 0x32(%rip)
5870(1): pop %rbx
5871(1): pop %rbp
5872(2): pop %r12
5874(1): ret near (%rsp)
5875(3): nop (%rax)
5878(3): mov %rbx,%rdi
587b(5): call 0xffffbe35(%rip)
5880(2): xor %esi,%esi
5882(5): mov $0x1,%edx
5887(2): mov %eax,%edi
5889(5): call 0xffffbd77(%rip)
588e(4): cmp $0xffffffff,%rax
5892(2): jnz 0xffffffba(%rip)
5894(3): mov %rbx,%rdi
5897(1): pop %rbx
5898(1): pop %rbp
5899(2): pop %r12
589b(5): jmp 0xffffbcb5(%rip)
58a0(4): mov %r12d,0x0(%rbp)
58a4(5): mov $0xffffffff,%eax
58a9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
58b0(3): test %rdi,%rdi
58b3(1): push %rbx
58b4(3): mov %rdi,%rbx
58b7(2): jz 0x13(%rip)
58b9(5): call 0xffffbe37(%rip)
58be(2): test %eax,%eax
58c0(2): jz 0xa(%rip)
58c2(6): test $0x100,(%rbx)
58c8(2): jnz 0x10(%rip)
58ca(3): mov %rbx,%rdi
58cd(1): pop %rbx
58ce(5): jmp 0xffffbe02(%rip)
58d3(5): nop 0x0(%rax,%rax,1)
58d8(3): mov %rbx,%rdi
58db(5): mov $0x1,%edx
58e0(2): xor %esi,%esi
58e2(5): call 0xe(%rip)
58e7(3): mov %rbx,%rdi
58ea(1): pop %rbx
58eb(5): jmp 0xffffbde5(%rip)

"rpl_fseeko" :
58f0(4): mov 0x8(%rdi),%rax
58f4(4): cmp %rax,0x10(%rdi)
58f8(2): jz 0x8(%rip)
58fa(5): jmp 0xffffbe66(%rip)
58ff(1): nop 
5900(4): mov 0x20(%rdi),%rax
5904(4): cmp %rax,0x28(%rdi)
5908(2): jnz 0xfffffff2(%rip)
590a(5): cmp $0x0,0x48(%rdi)
590f(2): jnz 0xffffffeb(%rip)
5911(2): push %r12
5913(1): push %rbp
5914(3): mov %edx,%r12d
5917(1): push %rbx
5918(3): mov %rsi,%rbp
591b(3): mov %rdi,%rbx
591e(5): call 0xffffbd92(%rip)
5923(3): mov %r12d,%edx
5926(3): mov %rbp,%rsi
5929(2): mov %eax,%edi
592b(5): call 0xffffbcd5(%rip)
5930(4): cmp $0xffffffff,%rax
5934(2): jz 0xe(%rip)
5936(3): and $0xef,(%rbx)
5939(7): mov %rax,0x90(%rbx)
5940(2): xor %eax,%eax
5942(1): pop %rbx
5943(1): pop %rbp
5944(2): pop %r12
5946(1): ret near (%rsp)

"rpl_mbrtowc" :
5950(2): push %r13
5952(2): push %r12
5954(3): mov %rsi,%r13
5957(1): push %rbp
5958(1): push %rbx
5959(3): mov %rdi,%rbx
595c(3): mov %rdx,%r12
595f(4): sub $0x18,%rsp
5963(9): mov $0x28,%rax
596c(5): mov %rax,0x8(%rsp)
5971(2): xor %eax,%eax
5973(5): lea 0x4(%rsp),%rax
5978(3): test %rdi,%rdi
597b(4): cmove %rax,%rbx
597f(3): mov %rbx,%rdi
5982(5): call 0xffffbc3e(%rip)
5987(4): cmp $0xfffffffd,%rax
598b(3): mov %rax,%rbp
598e(2): jbe 0x22(%rip)
5990(3): test %r12,%r12
5993(2): jz 0x1d(%rip)
5995(2): xor %edi,%edi
5997(5): call 0xc9(%rip)
599c(2): test %al,%al
599e(2): jnz 0x12(%rip)
59a0(5): movzx 0x0(%r13),%eax
59a5(5): mov $0x1,%ebp
59aa(2): mov %eax,(%rbx)
59ac(4): nop 0x0(%rax)
59b0(5): mov 0x8(%rsp),%rdx
59b5(9): xor $0x28,%rdx
59be(3): mov %rbp,%rax
59c1(2): jnz 0xd(%rip)
59c3(4): add $0x18,%rsp
59c7(1): pop %rbx
59c8(1): pop %rbp
59c9(2): pop %r12
59cb(2): pop %r13
59cd(1): ret near (%rsp)
59ce(5): call 0xffffbbd2(%rip)

"close_stream" :
59e0(2): push %r12
59e2(1): push %rbp
59e3(3): mov %rdi,%rbp
59e6(1): push %rbx
59e7(5): call 0xffffbb39(%rip)
59ec(3): mov 0x0(%rbp),%ebx
59ef(3): mov %rbp,%rdi
59f2(3): mov %rax,%r12
59f5(5): call 0xfffffe3b(%rip)
59fa(3): and $0x20,%ebx
59fd(2): test %ebx,%ebx
59ff(2): jnz 0x19(%rip)
5a01(2): test %eax,%eax
5a03(2): jz 0xc(%rip)
5a05(3): test %r12,%r12
5a08(5): mov $0xffffffff,%eax
5a0d(2): jz 0x3b(%rip)
5a0f(1): pop %rbx
5a10(1): pop %rbp
5a11(2): pop %r12
5a13(1): ret near (%rsp)
5a14(4): nop 0x0(%rax)
5a18(2): test %eax,%eax
5a1a(2): jnz 0x1e(%rip)
5a1c(5): call 0xffffbad4(%rip)
5a21(6): mov $0x0,(%rax)
5a27(5): mov $0xffffffff,%eax
5a2c(1): pop %rbx
5a2d(1): pop %rbp
5a2e(2): pop %r12
5a30(1): ret near (%rsp)
5a31(7): nop 0x0(%rax)
5a38(1): pop %rbx
5a39(5): mov $0xffffffff,%eax
5a3e(1): pop %rbp
5a3f(2): pop %r12
5a41(1): ret near (%rsp)
5a42(6): nop 0x0(%rax,%rax,1)
5a48(5): call 0xffffbaa8(%rip)
5a4d(3): cmp $0x9,(%rax)
5a50(1): pop %rbx
5a51(1): pop %rbp
5a52(2): pop %r12
5a54(3): setnz %al
5a57(3): movzx %al,%eax
5a5a(2): neg %eax
5a5c(1): ret near (%rsp)

"hard_locale" :
5a60(4): sub $0x8,%rsp
5a64(2): xor %esi,%esi
5a66(5): call 0xffffbcba(%rip)
5a6b(3): mov %rax,%rdx
5a6e(5): mov $0x1,%eax
5a73(3): test %rdx,%rdx
5a76(2): jz 0x1f(%rip)
5a78(7): lea 0x11cc(%rip),%rdi
5a7f(5): mov $0x2,%ecx
5a84(3): mov %rdx,%rsi
5a87(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5a89(3): setnbe %cl
5a8c(3): sbb $0x0,%cl
5a8f(2): xor %eax,%eax
5a91(2): test %cl,%cl
5a93(2): jnz 0xd(%rip)
5a95(4): add $0x8,%rsp
5a99(1): ret near (%rsp)
5a9a(6): nop 0x0(%rax,%rax,1)
5aa0(7): lea 0x11a6(%rip),%rdi
5aa7(5): mov $0x6,%ecx
5aac(3): mov %rdx,%rsi
5aaf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
5ab1(3): setnbe %al
5ab4(2): sbb $0x0,%al
5ab6(2): test %al,%al
5ab8(3): setnz %al
5abb(4): add $0x8,%rsp
5abf(1): ret near (%rsp)

"locale_charset" :
5ac0(4): sub $0x8,%rsp
5ac4(5): mov $0xe,%edi
5ac9(5): call 0xffffbc17(%rip)
5ace(3): test %rax,%rax
5ad1(2): jz 0x1f(%rip)
5ad3(3): cmp $0x0,(%rax)
5ad6(7): lea 0x1176(%rip),%rdx
5add(4): cmove %rdx,%rax
5ae1(4): add $0x8,%rsp
5ae5(1): ret near (%rsp)
5ae6(a): nop 0x0(%rax,%rax,1)
5af0(7): lea 0x115c(%rip),%rax
5af7(4): add $0x8,%rsp
5afb(1): ret near (%rsp)

"__libc_csu_init" :
5b00(2): push %r15
5b02(2): push %r14
5b04(3): mov %rdx,%r15
5b07(2): push %r13
5b09(2): push %r12
5b0b(7): lea 0x202ffe(%rip),%r12
5b12(1): push %rbp
5b13(7): lea 0x202ffe(%rip),%rbp
5b1a(1): push %rbx
5b1b(3): mov %edi,%r13d
5b1e(3): mov %rsi,%r14
5b21(3): sub %r12,%rbp
5b24(4): sub $0x8,%rsp
5b28(4): sar $0x3,%rbp
5b2c(5): call 0xffffb97c(%rip)
5b31(3): test %rbp,%rbp
5b34(2): jz 0x22(%rip)
5b36(2): xor %ebx,%ebx
5b38(8): nop 0x0(%rax,%rax,1)
5b40(3): mov %r15,%rdx
5b43(3): mov %r14,%rsi
5b46(3): mov %r13d,%edi
5b49(4): call 0x0(%r12,%rbx,8)
5b4d(4): add $0x1,%rbx
5b51(3): cmp %rbx,%rbp
5b54(2): jnz 0xffffffec(%rip)
5b56(4): add $0x8,%rsp
5b5a(1): pop %rbx
5b5b(1): pop %rbp
5b5c(2): pop %r12
5b5e(2): pop %r13
5b60(2): pop %r14
5b62(2): pop %r15
5b64(1): ret near (%rsp)

"atexit" :
5b80(7): mov 0x203481(%rip),%rdx
5b87(2): xor %esi,%esi
5b89(5): jmp 0xffffbbf7(%rip)

"_fini" :
5b90(4): sub $0x8,%rsp
5b94(4): add $0x8,%rsp
5b98(1): ret near (%rsp)

