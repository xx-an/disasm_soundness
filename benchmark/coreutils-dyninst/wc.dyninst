
"getenv@plt" :
19d0(6): jmp 0x2083ea(%rip)
19d6(5): push $0x0

"abort@plt" :
19e0(6): jmp 0x2083e2(%rip)
19e6(5): push $0x1

"__errno_location@plt" :
19f0(6): jmp 0x2083da(%rip)
19f6(5): push $0x2

"strncmp@plt" :
1a00(6): jmp 0x2083d2(%rip)
1a06(5): push $0x3

"_exit@plt" :
1a10(6): jmp 0x2083ca(%rip)
1a16(5): push $0x4

"__fpending@plt" :
1a20(6): jmp 0x2083c2(%rip)
1a26(5): push $0x5

"ferror@plt" :
1a30(6): jmp 0x2083ba(%rip)
1a36(5): push $0x6

"iswcntrl@plt" :
1a40(6): jmp 0x2083b2(%rip)
1a46(5): push $0x7

"textdomain@plt" :
1a50(6): jmp 0x2083aa(%rip)
1a56(5): push $0x8

"fclose@plt" :
1a60(6): jmp 0x2083a2(%rip)
1a66(5): push $0x9

"bindtextdomain@plt" :
1a70(6): jmp 0x20839a(%rip)
1a76(5): push $0xa

"dcgettext@plt" :
1a80(6): jmp 0x208392(%rip)
1a86(5): push $0xb

"__ctype_get_mb_cur_max@plt" :
1a90(6): jmp 0x20838a(%rip)
1a96(5): push $0xc

"strlen@plt" :
1aa0(6): jmp 0x208382(%rip)
1aa6(5): push $0xd

"__stack_chk_fail@plt" :
1ab0(6): jmp 0x20837a(%rip)
1ab6(5): push $0xe

"getopt_long@plt" :
1ac0(6): jmp 0x208372(%rip)
1ac6(5): push $0xf

"mbrtowc@plt" :
1ad0(6): jmp 0x20836a(%rip)
1ad6(5): push $0x10

"strchr@plt" :
1ae0(6): jmp 0x208362(%rip)
1ae6(5): push $0x11

"__overflow@plt" :
1af0(6): jmp 0x20835a(%rip)
1af6(5): push $0x12

"strrchr@plt" :
1b00(6): jmp 0x208352(%rip)
1b06(5): push $0x13

"lseek@plt" :
1b10(6): jmp 0x20834a(%rip)
1b16(5): push $0x14

"__assert_fail@plt" :
1b20(6): jmp 0x208342(%rip)
1b26(5): push $0x15

"memset@plt" :
1b30(6): jmp 0x20833a(%rip)
1b36(5): push $0x16

"fgetc@plt" :
1b40(6): jmp 0x208332(%rip)
1b46(5): push $0x17

"close@plt" :
1b50(6): jmp 0x20832a(%rip)
1b56(5): push $0x18

"posix_fadvise@plt" :
1b60(6): jmp 0x208322(%rip)
1b66(5): push $0x19

"memchr@plt" :
1b70(6): jmp 0x20831a(%rip)
1b76(5): push $0x1a

"read@plt" :
1b80(6): jmp 0x208312(%rip)
1b86(5): push $0x1b

"memcmp@plt" :
1b90(6): jmp 0x20830a(%rip)
1b96(5): push $0x1c

"fputs_unlocked@plt" :
1ba0(6): jmp 0x208302(%rip)
1ba6(5): push $0x1d

"calloc@plt" :
1bb0(6): jmp 0x2082fa(%rip)
1bb6(5): push $0x1e

"strcmp@plt" :
1bc0(6): jmp 0x2082f2(%rip)
1bc6(5): push $0x1f

"__memmove_chk@plt" :
1bd0(6): jmp 0x2082ea(%rip)
1bd6(5): push $0x20

"feof@plt" :
1be0(6): jmp 0x2082e2(%rip)
1be6(5): push $0x21

"memcpy@plt" :
1bf0(6): jmp 0x2082da(%rip)
1bf6(5): push $0x22

"fileno@plt" :
1c00(6): jmp 0x2082d2(%rip)
1c06(5): push $0x23

"__xstat@plt" :
1c10(6): jmp 0x2082ca(%rip)
1c16(5): push $0x24

"wcwidth@plt" :
1c20(6): jmp 0x2082c2(%rip)
1c26(5): push $0x25

"fflush@plt" :
1c30(6): jmp 0x2082ba(%rip)
1c36(5): push $0x26

"nl_langinfo@plt" :
1c40(6): jmp 0x2082b2(%rip)
1c46(5): push $0x27

"__fxstat@plt" :
1c50(6): jmp 0x2082aa(%rip)
1c56(5): push $0x28

"__freading@plt" :
1c60(6): jmp 0x2082a2(%rip)
1c66(5): push $0x29

"realloc@plt" :
1c70(6): jmp 0x20829a(%rip)
1c76(5): push $0x2a

"setlocale@plt" :
1c80(6): jmp 0x208292(%rip)
1c86(5): push $0x2b

"__printf_chk@plt" :
1c90(6): jmp 0x20828a(%rip)
1c96(5): push $0x2c

"setvbuf@plt" :
1ca0(6): jmp 0x208282(%rip)
1ca6(5): push $0x2d

"iswspace@plt" :
1cb0(6): jmp 0x20827a(%rip)
1cb6(5): push $0x2e

"btowc@plt" :
1cc0(6): jmp 0x208272(%rip)
1cc6(5): push $0x2f

"error@plt" :
1cd0(6): jmp 0x20826a(%rip)
1cd6(5): push $0x30

"open@plt" :
1ce0(6): jmp 0x208262(%rip)
1ce6(5): push $0x31

"fseeko@plt" :
1cf0(6): jmp 0x20825a(%rip)
1cf6(5): push $0x32

"fopen@plt" :
1d00(6): jmp 0x208252(%rip)
1d06(5): push $0x33

"sysconf@plt" :
1d10(6): jmp 0x20824a(%rip)
1d16(5): push $0x34

"__cxa_atexit@plt" :
1d20(6): jmp 0x208242(%rip)
1d26(5): push $0x35

"sysinfo@plt" :
1d30(6): jmp 0x20823a(%rip)
1d36(5): push $0x36

"getpagesize@plt" :
1d40(6): jmp 0x208232(%rip)
1d46(5): push $0x37

"exit@plt" :
1d50(6): jmp 0x20822a(%rip)
1d56(5): push $0x38

"fwrite@plt" :
1d60(6): jmp 0x208222(%rip)
1d66(5): push $0x39

"__fprintf_chk@plt" :
1d70(6): jmp 0x20821a(%rip)
1d76(5): push $0x3a

"mbsinit@plt" :
1d80(6): jmp 0x208212(%rip)
1d86(5): push $0x3b

"iswprint@plt" :
1d90(6): jmp 0x20820a(%rip)
1d96(5): push $0x3c

"getdelim@plt" :
1da0(6): jmp 0x208202(%rip)
1da6(5): push $0x3d

"__ctype_b_loc@plt" :
1db0(6): jmp 0x2081fa(%rip)
1db6(5): push $0x3e

"free@plt" :
1dc0(6): jmp 0x2081f2(%rip)
1dc6(2): nop 

"malloc@plt" :
1dc8(6): jmp 0x20820a(%rip)
1dce(2): nop 

"__cxa_finalize@plt" :
1dd0(6): jmp 0x208212(%rip)
1dd6(2): nop 

".plt.got" :
1dc0(6): jmp 0x2081f2(%rip)
1dc6(2): nop 
1dc8(6): jmp 0x20820a(%rip)
1dce(2): nop 
1dd0(6): jmp 0x208212(%rip)
1dd6(2): nop 

"_init" :
19a0(4): sub $0x8,%rsp
19a4(7): mov 0x208625(%rip),%rax
19ab(3): test %rax,%rax
19ae(2): jz 0x4(%rip)
19b0(2): call %rax
19b2(4): add $0x8,%rsp
19b6(1): ret near (%rsp)

"main" :
1de0(2): push %r15
1de2(2): push %r14
1de4(2): push %r13
1de6(2): push %r12
1de8(3): mov %rsi,%r12
1deb(1): push %rbp
1dec(1): push %rbx
1ded(2): mov %edi,%ebx
1def(7): lea 0x207c4a(%rip),%r13
1df6(7): sub $0x1f8,%rsp
1dfd(3): mov (%rsi),%rdi
1e00(9): mov $0x28,%rax
1e09(8): mov %rax,0x1e8(%rsp)
1e11(2): xor %eax,%eax
1e13(5): call 0x214d(%rip)
1e18(7): lea 0x6022(%rip),%rsi
1e1f(5): mov $0x6,%edi
1e24(5): call 0xfffffe5c(%rip)
1e29(7): lea 0x5269(%rip),%rsi
1e30(7): lea 0x5239(%rip),%rdi
1e37(5): call 0xfffffc39(%rip)
1e3c(7): lea 0x522d(%rip),%rdi
1e43(5): call 0xfffffc0d(%rip)
1e48(7): lea 0x1d21(%rip),%rdi
1e4f(5): call 0x5161(%rip)
1e54(5): call 0xfffffeec(%rip)
1e59(7): mov 0x208248(%rip),%rdi
1e60(2): xor %ecx,%ecx
1e62(2): xor %esi,%esi
1e64(2): cwde 
1e66(5): mov $0x1,%edx
1e6b(7): mov %rax,0x20828e(%rip)
1e72(5): call 0xfffffe2e(%rip)
1e77(7): lea 0x5233(%rip),%rdi
1e7e(5): call 0xfffffb52(%rip)
1e83(3): test %rax,%rax
1e86(7): mov $0x0,0x208284(%rip)
1e8d(7): mov $0x0,0x20827e(%rip)
1e94(7): setnz 0x20825d(%rip)
1e9b(7): mov $0x0,0x208271(%rip)
1ea2(2): xor %ebp,%ebp
1ea4(7): mov $0x0,0x208269(%rip)
1eab(7): mov $0x0,0x20825e(%rip)
1eb2(b): mov $0x0,0x20825b(%rip)
1ebd(b): mov $0x0,0x208258(%rip)
1ec8(b): mov $0x0,0x208255(%rip)
1ed3(b): mov $0x0,0x208252(%rip)
1ede(b): mov $0x0,0x20824f(%rip)
1ee9(7): nop 0x0(%rax)
1ef0(7): lea 0x51e5(%rip),%rdx
1ef7(3): xor %r8d,%r8d
1efa(3): mov %r13,%rcx
1efd(3): mov %r12,%rsi
1f00(2): mov %ebx,%edi
1f02(5): call 0xfffffbbe(%rip)
1f07(3): cmp $0xff,%eax
1f0a(6): jz 0xfa(%rip)
1f10(3): cmp $0x63,%eax
1f13(6): jz 0xad(%rip)
1f19(2): jle 0x2f(%rip)
1f1b(3): cmp $0x6d,%eax
1f1e(6): jz 0xda(%rip)
1f24(6): jle 0xbc(%rip)
1f2a(3): cmp $0x77,%eax
1f2d(6): jz 0xa3(%rip)
1f33(3): add $0x80,%eax
1f36(2): jnz 0x29(%rip)
1f38(7): mov 0x208181(%rip),%rbp
1f3f(2): jmp 0xffffffb1(%rip)
1f41(7): nop 0x0(%rax)
1f48(5): cmp $0xffffff7e,%eax
1f4d(6): jz 0x830(%rip)
1f53(3): cmp $0x4c,%eax
1f56(2): jz 0x5a(%rip)
1f58(5): cmp $0xffffff7d,%eax
1f5d(2): jz 0x13(%rip)
1f5f(5): mov $0x1,%edi
1f64(5): call 0x16ec(%rip)
1f69(7): nop 0x0(%rax)
1f70(4): sub $0x8,%rsp
1f74(7): mov 0x20812d(%rip),%rdi
1f7b(7): mov 0x20808e(%rip),%rcx
1f82(2): push $0x0
1f84(7): lea 0x5136(%rip),%r9
1f8b(7): lea 0x513f(%rip),%r8
1f92(7): lea 0x50d3(%rip),%rdx
1f99(7): lea 0x5053(%rip),%rsi
1fa0(2): xor %eax,%eax
1fa2(5): call 0x45ae(%rip)
1fa7(2): xor %edi,%edi
1fa9(5): call 0xfffffda7(%rip)
1fae(2): nop 
1fb0(7): mov $0x1,0x208159(%rip)
1fb7(5): jmp 0xffffff39(%rip)
1fbc(4): nop 0x0(%rax)
1fc0(7): mov $0x1,0x20814a(%rip)
1fc7(5): jmp 0xffffff29(%rip)
1fcc(4): nop 0x0(%rax)
1fd0(7): mov $0x1,0x20813c(%rip)
1fd7(5): jmp 0xffffff19(%rip)
1fdc(4): nop 0x0(%rax)
1fe0(3): cmp $0x6c,%eax
1fe3(6): jnz 0xffffff7c(%rip)
1fe9(7): mov $0x1,0x208124(%rip)
1ff0(5): jmp 0xffffff00(%rip)
1ff5(3): nop (%rax)
1ff8(7): mov $0x1,0x208113(%rip)
1fff(5): jmp 0xfffffef1(%rip)
2004(7): cmp $0x0,0x208109(%rip)
200b(2): jnz 0x3b(%rip)
200d(7): cmp $0x0,0x2080ff(%rip)
2014(2): jnz 0x32(%rip)
2016(7): cmp $0x0,0x2080f5(%rip)
201d(2): jnz 0x29(%rip)
201f(7): cmp $0x0,0x2080eb(%rip)
2026(2): jnz 0x20(%rip)
2028(7): cmp $0x0,0x2080e1(%rip)
202f(2): jnz 0x17(%rip)
2031(7): mov $0x1,0x2080d9(%rip)
2038(7): mov $0x1,0x2080d4(%rip)
203f(7): mov $0x1,0x2080ce(%rip)
2046(3): test %rbp,%rbp
2049(7): movsxd 0x208068(%rip),%rax
2050(6): jz 0x13b(%rip)
2056(2): cmp %eax,%ebx
2058(6): jnle 0x740(%rip)
205e(7): lea 0x58ad(%rip),%rsi
2065(3): mov %rbp,%rdi
2068(5): call 0xfffffb58(%rip)
206d(2): test %eax,%eax
206f(6): jnz 0x591(%rip)
2075(7): mov 0x208034(%rip),%rbx
207c(3): mov %rbx,%rdi
207f(5): call 0xfffffb81(%rip)
2084(8): lea 0x150(%rsp),%rdx
208c(2): mov %eax,%esi
208e(5): mov $0x1,%edi
2093(5): call 0xfffffbbd(%rip)
2098(2): test %eax,%eax
209a(2): jnz 0x19(%rip)
209c(7): mov 0x168(%rsp),%eax
20a3(5): and $0xf000,%eax
20a8(5): cmp $0x8000,%eax
20ad(6): jz 0x62c(%rip)
20b3(3): mov %rbx,%rdi
20b6(3): xor %r12d,%r12d
20b9(2): xor %ebx,%ebx
20bb(5): call 0x1985(%rip)
20c0(5): mov $0x0,0x1b(%rsp)
20c5(3): mov %rax,%r13
20c8(3): test %r13,%r13
20cb(6): jz 0x6c8(%rip)
20d1(3): test %rbx,%rbx
20d4(6): jz 0xe0(%rip)
20da(5): mov $0x98,%edx
20df(2): xor %ecx,%ecx
20e1(3): mov %rdx,%rax
20e4(3): mul %rax,%rbx,%rdx
20e7(6): jo 0x6a2(%rip)
20ed(3): test %rax,%rax
20f0(6): js 0x6a3(%rip)
20f6(3): test %rcx,%rcx
20f9(6): jnz 0x69a(%rip)
20ff(7): imul %rbx,$0x98,%rax
2106(3): mov %rax,%rdi
2109(5): mov %rax,0x10(%rsp)
210e(5): call 0x45a2(%rip)
2113(4): cmp $0x1,%rbx
2117(5): mov %rax,0x8(%rsp)
211c(6): jz 0x558(%rip)
2122(5): mov 0x8(%rsp),%rax
2127(4): lea 0x8(%rax),%r14
212b(4): lea 0x0(%r12,%rbx,8),%rax
212f(4): mov %rax,(%rsp)
2133(2): jmp 0x2a(%rip)
2135(3): mov %r14,%rdx
2138(2): xor %esi,%esi
213a(5): mov $0x1,%edi
213f(5): call 0xfffffb11(%rip)
2144(4): mov %eax,0xfffffff8(%r14)
2148(4): add $0x8,%r12
214c(7): add $0x98,%r14
2153(4): cmp %r12,(%rsp)
2157(6): jz 0x3fb(%rip)
215d(4): mov (%r12),%r15
2161(3): test %r15,%r15
2164(2): jz 0xffffffd1(%rip)
2166(7): lea 0x57a5(%rip),%rsi
216d(3): mov %r15,%rdi
2170(5): call 0xfffffa50(%rip)
2175(2): test %eax,%eax
2177(2): jz 0xffffffbe(%rip)
2179(3): mov %r14,%rdx
217c(3): mov %r15,%rsi
217f(5): mov $0x1,%edi
2184(5): call 0xfffffa8c(%rip)
2189(2): jmp 0xffffffbb(%rip)
218b(2): cmp %eax,%ebx
218d(6): jnle 0x4cd(%rip)
2193(7): lea 0x207f56(%rip),%r12
219a(5): mov $0x1,%ebx
219f(3): mov %r12,%rdi
21a2(5): call 0x186e(%rip)
21a7(5): mov $0x0,0x1b(%rsp)
21ac(3): mov %rax,%r13
21af(5): jmp 0xffffff19(%rip)
21b4(5): mov $0x98,%edi
21b9(5): call 0x44f7(%rip)
21be(5): mov $0x1,%ecx
21c3(5): mov %rax,0x8(%rsp)
21c8(6): mov $0x1,(%rax)
21ce(5): lea 0x2c(%rsp),%rax
21d3(6): mov %ecx,0x207f33(%rip)
21d9(3): xor %r14d,%r14d
21dc(6): mov $0x1,%r12d
21e2(4): mov %rax,(%rsp)
21e6(a): nop 0x0(%rax,%rax,1)
21f0(4): mov (%rsp),%rsi
21f4(3): mov %r13,%rdi
21f7(5): call 0x1889(%rip)
21fc(3): test %rax,%rax
21ff(3): mov %rax,%r15
2202(6): jz 0x208(%rip)
2208(3): test %rbp,%rbp
220b(6): jz 0x1ca(%rip)
2211(7): lea 0x56fa(%rip),%rdx
2218(5): mov $0x2,%ecx
221d(3): mov %rbp,%rsi
2220(3): mov %rdx,%rdi
2223(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
2225(3): setnbe %al
2228(2): sbb $0x0,%al
222a(2): test %al,%al
222c(6): jnz 0x153(%rip)
2232(3): mov %rdx,%rsi
2235(3): mov %r15,%rdi
2238(5): call 0xfffff988(%rip)
223d(2): test %eax,%eax
223f(6): jz 0xaf(%rip)
2245(4): cmp $0x0,(%r15)
2249(6): jz 0xe3(%rip)
224f(3): test %rbx,%rbx
2252(6): jnz 0x13a(%rip)
2258(5): mov 0x8(%rsp),%rdx
225d(2): xor %esi,%esi
225f(2): xor %eax,%eax
2261(3): mov %r15,%rdi
2264(5): mov %rdx,0x10(%rsp)
2269(5): call 0xfffffa77(%rip)
226e(3): cmp $0xff,%eax
2271(5): mov 0x10(%rsp),%rdx
2276(2): jz 0x48(%rip)
2278(2): xor %ecx,%ecx
227a(3): mov %r15,%rsi
227d(2): mov %eax,%edi
227f(4): mov %eax,0x1c(%rsp)
2283(5): call 0x8dd(%rip)
2288(5): mov 0x1c(%rsp),%r9d
228d(4): mov %al,0x10(%rsp)
2291(3): mov %r9d,%edi
2294(5): call 0xfffff8bc(%rip)
2299(2): test %eax,%eax
229b(5): movzx 0x10(%rsp),%edx
22a0(2): jnz 0x1e(%rip)
22a2(3): and %edx,%r12d
22a5(3): test %rbx,%rbx
22a8(2): jnz 0xd(%rip)
22aa(5): mov 0x8(%rsp),%rax
22af(6): mov $0x1,(%rax)
22b5(4): add $0x1,%r14
22b9(5): jmp 0xffffff37(%rip)
22be(3): mov %r15,%rdx
22c1(5): mov $0x3,%esi
22c6(2): xor %edi,%edi
22c8(5): call 0x37d8(%rip)
22cd(3): mov %rax,%r15
22d0(5): call 0xfffff720(%rip)
22d5(2): mov (%rax),%esi
22d7(7): lea 0x55af(%rip),%rdx
22de(3): mov %r15,%rcx
22e1(2): xor %edi,%edi
22e3(2): xor %eax,%eax
22e5(5): call 0xfffff9eb(%rip)
22ea(2): xor %edx,%edx
22ec(2): jmp 0xffffffb6(%rip)
22ee(3): mov %r15,%rsi
22f1(5): mov $0x4,%edi
22f6(5): call 0x36aa(%rip)
22fb(7): lea 0x5526(%rip),%rsi
2302(2): xor %edi,%edi
2304(3): mov %rax,%r12
2307(5): mov $0x5,%edx
230c(5): call 0xfffff774(%rip)
2311(2): xor %esi,%esi
2313(3): mov %rax,%rdx
2316(2): xor %edi,%edi
2318(2): xor %eax,%eax
231a(3): mov %r12,%rcx
231d(5): call 0xfffff9b3(%rip)
2322(4): cmp $0x0,(%r15)
2326(6): jnz 0xdc(%rip)
232c(3): mov %r13,%rdi
232f(5): call 0x17e1(%rip)
2334(7): lea 0x4e03(%rip),%rsi
233b(5): mov $0x5,%edx
2340(2): xor %edi,%edi
2342(3): mov %rax,%r15
2345(5): call 0xfffff73b(%rip)
234a(3): mov %rbp,%rdx
234d(5): mov $0x3,%esi
2352(2): xor %edi,%edi
2354(3): mov %rax,%r12
2357(5): call 0x3749(%rip)
235c(7): lea 0x4df9(%rip),%rdx
2363(3): mov %r12,%r9
2366(3): mov %rax,%rcx
2369(3): mov %r15,%r8
236c(2): xor %esi,%esi
236e(2): xor %edi,%edi
2370(2): xor %eax,%eax
2372(3): xor %r12d,%r12d
2375(5): call 0xfffff95b(%rip)
237a(5): jmp 0xffffff2b(%rip)
237f(4): cmp $0x0,(%r15)
2383(2): jz 0xffffffa9(%rip)
2385(2): xor %edx,%edx
2387(3): test %rbx,%rbx
238a(2): jz 0x9(%rip)
238c(7): imul %r14,$0x98,%rdx
2393(5): add 0x8(%rsp),%rdx
2398(7): lea 0x5573(%rip),%rsi
239f(3): mov %r15,%rdi
23a2(5): mov %rdx,0x10(%rsp)
23a7(5): call 0xfffff819(%rip)
23ac(2): test %eax,%eax
23ae(5): mov 0x10(%rsp),%rdx
23b3(6): jnz 0xfffffeaa(%rip)
23b9(4): or $0xffffffff,%rcx
23bd(3): mov %r15,%rsi
23c0(2): xor %edi,%edi
23c2(7): mov $0x1,0x207d3f(%rip)
23c9(5): call 0x797(%rip)
23ce(2): mov %eax,%edx
23d0(5): jmp 0xfffffed2(%rip)
23d5(3): cmp $0x0,(%rax)
23d8(2): jnz 0xffffffad(%rip)
23da(7): lea 0x4d5d(%rip),%rsi
23e1(5): mov $0x5,%edx
23e6(2): xor %edi,%edi
23e8(5): call 0xfffff698(%rip)
23ed(7): lea 0x5499(%rip),%rdx
23f4(3): mov %rax,%rcx
23f7(2): xor %esi,%esi
23f9(2): xor %edi,%edi
23fb(2): xor %eax,%eax
23fd(5): call 0xfffff8d3(%rip)
2402(3): xor %r12d,%r12d
2405(5): jmp 0xfffffea0(%rip)
240a(4): mov 0x2c(%rsp),%eax
240e(3): cmp $0x3,%eax
2411(6): jz 0x382(%rip)
2417(3): cmp $0x4,%eax
241a(6): jz 0xf2(%rip)
2420(3): cmp $0x2,%eax
2423(2): jz 0x21(%rip)
2425(7): lea 0x4ea1(%rip),%rcx
242c(7): lea 0x4cea(%rip),%rsi
2433(7): lea 0x53c6(%rip),%rdi
243a(5): mov $0x33f,%edx
243f(5): call 0xfffff6e1(%rip)
2444(3): test %rbp,%rbp
2447(3): setz %al
244a(3): and %r12b,%al
244d(2): mov %eax,%ebx
244f(2): jz 0x16(%rip)
2451(3): mov %r13,%rdi
2454(3): mov %ebx,%r12d
2457(5): call 0x16b9(%rip)
245c(3): test %rax,%rax
245f(6): jz 0x259(%rip)
2465(5): cmp $0x0,0x1b(%rsp)
246a(6): jnz 0x187(%rip)
2470(3): mov %r13,%rdi
2473(5): call 0x169d(%rip)
2478(4): cmp $0x1,%rax
247c(2): jbe 0x40(%rip)
247e(7): lea 0x4cb3(%rip),%rsi
2485(5): mov $0x5,%edx
248a(2): xor %edi,%edi
248c(5): call 0xfffff5f4(%rip)
2491(7): mov 0x207c80(%rip),%r8
2498(7): mov 0x207c81(%rip),%rcx
249f(3): mov %rax,%r9
24a2(7): mov 0x207c7f(%rip),%rdx
24a9(7): mov 0x207c80(%rip),%rsi
24b0(7): mov 0x207c81(%rip),%rdi
24b7(5): call 0x499(%rip)
24bc(3): mov %r13,%rdi
24bf(5): call 0x1671(%rip)
24c4(5): mov 0x8(%rsp),%rdi
24c9(5): call 0xfffff8f7(%rip)
24ce(7): cmp $0x0,0x207c33(%rip)
24d5(6): jnz 0xf3(%rip)
24db(4): xor $0x1,%r12d
24df(8): mov 0x1e8(%rsp),%rbx
24e7(9): xor $0x28,%rbx
24f0(4): movzx %r12b,%eax
24f4(6): jnz 0x290(%rip)
24fa(7): add $0x1f8,%rsp
2501(1): pop %rbx
2502(1): pop %rbp
2503(2): pop %r12
2505(2): pop %r13
2507(2): pop %r14
2509(2): pop %r15
250b(1): ret near (%rsp)
250c(3): mov %rbp,%rdx
250f(5): mov $0x3,%esi
2514(2): xor %edi,%edi
2516(5): call 0x358a(%rip)
251b(7): lea 0x4bec(%rip),%rsi
2522(5): mov $0x5,%edx
2527(2): xor %edi,%edi
2529(3): mov %rax,%rbp
252c(3): xor %r12d,%r12d
252f(5): call 0xfffff551(%rip)
2534(3): mov %rax,%rbx
2537(5): call 0xfffff4b9(%rip)
253c(2): mov (%rax),%esi
253e(3): mov %rbp,%rcx
2541(3): mov %rbx,%rdx
2544(2): xor %edi,%edi
2546(2): xor %eax,%eax
2548(5): call 0xfffff788(%rip)
254d(5): jmp 0xffffff18(%rip)
2552(5): mov 0x8(%rsp),%rax
2557(5): mov $0x1,%ecx
255c(3): cmp $0x0,(%rax)
255f(6): jnle 0xfffffc6f(%rip)
2565(5): mov 0x10(%rsp),%rsi
256a(3): mov %rax,%rdx
256d(5): mov $0x1,%edi
2572(3): add %rax,%rsi
2575(2): xor %eax,%eax
2577(2): jmp 0x28(%rip)
2579(3): cmp $0x0,(%rdx)
257c(2): jnz 0x1c(%rip)
257e(3): mov 0x20(%rdx),%ecx
2581(6): and $0xf000,%ecx
2587(6): cmp $0x8000,%ecx
258d(6): jz 0xde(%rip)
2593(5): mov $0x7,%edi
2598(7): add $0x98,%rdx
259f(3): cmp %rdx,%rsi
25a2(2): jnz 0xffffffd7(%rip)
25a4(5): mov $0x1,%ecx
25a9(5): mov $0xa,%esi
25ae(2): jmp 0xa(%rip)
25b0(2): xor %edx,%edx
25b2(3): add $0x1,%ecx
25b5(3): div %rsi,%rax
25b8(4): cmp $0x9,%rax
25bc(2): jnbe 0xfffffff4(%rip)
25be(2): cmp %edi,%ecx
25c0(3): cmovnge %edi,%ecx
25c3(5): jmp 0xfffffc0b(%rip)
25c8(2): xor %edi,%edi
25ca(5): call 0xfffff586(%rip)
25cf(2): test %eax,%eax
25d1(6): jz 0xffffff0a(%rip)
25d7(5): call 0xfffff419(%rip)
25dc(2): mov (%rax),%esi
25de(7): lea 0x532d(%rip),%rdx
25e5(5): mov $0x1,%edi
25ea(2): xor %eax,%eax
25ec(5): call 0xfffff6e4(%rip)
25f1(5): lea 0x30(%rsp),%rdi
25f6(5): call 0x37fa(%rip)
25fb(5): jmp 0xfffffe75(%rip)
2600(7): lea 0x4b14(%rip),%rsi
2607(3): mov %rbp,%rdi
260a(5): call 0xfffff6f6(%rip)
260f(3): test %rax,%rax
2612(3): mov %rax,%rbx
2615(6): jnz 0xfffffa67(%rip)
261b(3): mov %rbp,%rsi
261e(5): mov $0x4,%edi
2623(5): call 0x337d(%rip)
2628(7): lea 0x4ac4(%rip),%rsi
262f(5): mov $0x5,%edx
2634(2): xor %edi,%edi
2636(3): mov %rax,%rbp
2639(5): call 0xfffff447(%rip)
263e(3): mov %rax,%rbx
2641(5): call 0xfffff3af(%rip)
2646(2): mov (%rax),%esi
2648(3): mov %rbp,%rcx
264b(3): mov %rbx,%rdx
264e(5): mov $0x1,%edi
2653(2): xor %eax,%eax
2655(5): call 0xfffff67b(%rip)
265a(3): movsxd %eax,%rdx
265d(2): sub %eax,%ebx
265f(4): lea 0x0(%r12,%rdx,8),%r12
2663(3): movsxd %ebx,%rbx
2666(5): jmp 0xfffffb39(%rip)
266b(4): add 0x38(%rdx),%rax
266f(5): jmp 0xffffff29(%rip)
2674(7): movzx 0x207a98(%rip),%eax
267b(7): movzx 0x207a92(%rip),%ecx
2682(2): add %eax,%ecx
2684(7): movzx 0x207a87(%rip),%eax
268b(2): add %eax,%ecx
268d(7): movzx 0x207a7d(%rip),%eax
2694(2): add %eax,%ecx
2696(7): movzx 0x207a73(%rip),%eax
269d(2): add %eax,%ecx
269f(3): cmp $0x1,%ecx
26a2(6): jnz 0xfffffa80(%rip)
26a8(5): mov 0x8(%rsp),%rax
26ad(6): mov $0x1,(%rax)
26b3(5): jmp 0xfffffb1b(%rip)
26b8(5): mov 0x8(%rsp),%rdx
26bd(4): or $0xffffffff,%rcx
26c1(2): xor %esi,%esi
26c3(2): xor %edi,%edi
26c5(7): mov $0x1,0x207a3c(%rip)
26cc(5): call 0x494(%rip)
26d1(3): mov %eax,%r12d
26d4(5): jmp 0xfffffd91(%rip)
26d9(4): pxor %xmm3,%xmm3
26dd(a): cvtsi2sd 0x180(%rsp),%xmm3
26e7(5): movsd %xmm3,(%rsp)
26ec(5): call 0x1754(%rip)
26f1(8): movsd 0x5177(%rip),%xmm2
26f9(8): movsd 0x5167(%rip),%xmm1
2701(4): mulsd %xmm2,%xmm0
2705(4): ucomisd %xmm1,%xmm0
2709(2): jnbe 0x1b(%rip)
270b(6): movsd %xmm2,0x8(%rsp)
2711(5): call 0x172f(%rip)
2716(6): movsd 0x8(%rsp),%xmm2
271c(4): movapd %xmm0,%xmm1
2720(4): mulsd %xmm2,%xmm1
2724(5): ucomisd (%rsp),%xmm1
2729(6): jb 0xfffff98a(%rip)
272f(5): lea 0x30(%rsp),%r12
2734(3): mov %r12,%rdi
2737(5): call 0x3649(%rip)
273c(3): mov %r12,%rsi
273f(3): mov %rbx,%rdi
2742(5): call 0x36de(%rip)
2747(2): test %al,%al
2749(4): mov %al,0x1b(%rsp)
274d(6): jz 0xb5(%rip)
2753(3): mov %rbx,%rdi
2756(5): call 0x41ea(%rip)
275b(2): test %eax,%eax
275d(6): jnz 0xa5(%rip)
2763(5): mov 0x38(%rsp),%r12
2768(5): mov 0x30(%rsp),%rbx
276d(3): mov %r12,%rdi
2770(5): call 0x12a0(%rip)
2775(3): mov %rax,%r13
2778(5): jmp 0xfffff950(%rip)
277d(2): xor %edi,%edi
277f(5): call 0xed1(%rip)
2784(5): call 0xfffff32c(%rip)
2789(5): mov $0x1,%ecx
278e(5): jmp 0xfffff95f(%rip)
2793(5): call 0x416d(%rip)
2798(4): mov 0x0(%r12,%rax,8),%rsi
279c(5): mov $0x4,%edi
27a1(5): call 0x31ff(%rip)
27a6(7): lea 0x4935(%rip),%rsi
27ad(3): mov %rax,%rbx
27b0(2): xor %edi,%edi
27b2(5): mov $0x5,%edx
27b7(5): call 0xfffff2c9(%rip)
27bc(3): mov %rbx,%rcx
27bf(3): mov %rax,%rdx
27c2(2): xor %esi,%esi
27c4(2): xor %edi,%edi
27c6(2): xor %eax,%eax
27c8(5): call 0xfffff508(%rip)
27cd(7): lea 0x4fd4(%rip),%rsi
27d4(2): xor %edi,%edi
27d6(5): mov $0x5,%edx
27db(5): call 0xfffff2a5(%rip)
27e0(7): mov 0x2078f9(%rip),%rdi
27e7(7): lea 0x5602(%rip),%rdx
27ee(3): mov %rax,%rcx
27f1(5): mov $0x1,%esi
27f6(2): xor %eax,%eax
27f8(5): call 0xfffff578(%rip)
27fd(5): jmp 0xfffff762(%rip)
2802(3): mov %rbp,%rsi
2805(5): mov $0x4,%edi
280a(5): call 0x3196(%rip)
280f(7): lea 0x4fca(%rip),%rsi
2816(3): mov %rax,%rbx
2819(5): mov $0x5,%edx
281e(2): xor %edi,%edi
2820(5): call 0xfffff260(%rip)
2825(3): mov %rbx,%rcx
2828(3): mov %rax,%rdx
282b(2): xor %esi,%esi
282d(5): mov $0x1,%edi
2832(2): xor %eax,%eax
2834(5): call 0xfffff49c(%rip)
2839(7): nop 0x0(%rax)
2840(2): xor %ebp,%ebp
2842(3): mov %rdx,%r9
2845(1): pop %rsi
2846(3): mov %rsp,%rdx
2849(4): and $0xfffffff0,%rsp
284d(1): push %rax
284e(1): push %rsp
284f(7): lea 0x474a(%rip),%r8
2856(7): lea 0x46d3(%rip),%rcx
285d(7): lea 0xfffff57c(%rip),%rdi
2864(6): call 0x20775e(%rip)
286a(1): hlt 

"_start" :
2840(2): xor %ebp,%ebp
2842(3): mov %rdx,%r9
2845(1): pop %rsi
2846(3): mov %rsp,%rdx
2849(4): and $0xfffffff0,%rsp
284d(1): push %rax
284e(1): push %rsp
284f(7): lea 0x474a(%rip),%r8
2856(7): lea 0x46d3(%rip),%rcx
285d(7): lea 0xfffff57c(%rip),%rdi
2864(6): call 0x20775e(%rip)
286a(1): hlt 

"deregister_tm_clones" :
2870(7): lea 0x207811(%rip),%rdi
2877(1): push %rbp
2878(7): lea 0x207809(%rip),%rax
287f(3): cmp %rdi,%rax
2882(3): mov %rsp,%rbp
2885(2): jz 0x1b(%rip)
2887(7): mov 0x207732(%rip),%rax
288e(3): test %rax,%rax
2891(2): jz 0xf(%rip)
2893(1): pop %rbp
2894(2): jmp %rax
2896(a): nop 0x0(%rax,%rax,1)
28a0(1): pop %rbp
28a1(1): ret near (%rsp)

"register_tm_clones" :
28b0(7): lea 0x2077d1(%rip),%rdi
28b7(7): lea 0x2077ca(%rip),%rsi
28be(1): push %rbp
28bf(3): sub %rdi,%rsi
28c2(3): mov %rsp,%rbp
28c5(4): sar $0x3,%rsi
28c9(3): mov %rsi,%rax
28cc(4): shr $0x3f,%rax
28d0(3): add %rax,%rsi
28d3(3): sar $0x1,%rsi
28d6(2): jz 0x1a(%rip)
28d8(7): mov 0x207701(%rip),%rax
28df(3): test %rax,%rax
28e2(2): jz 0xe(%rip)
28e4(1): pop %rbp
28e5(2): jmp %rax
28e7(9): nop 0x0(%rax,%rax,1)
28f0(1): pop %rbp
28f1(1): ret near (%rsp)

"__do_global_dtors_aux" :
2900(7): cmp $0x0,0x2077e1(%rip)
2907(2): jnz 0x31(%rip)
2909(8): cmp $0x0,0x2076d7(%rip)
2911(1): push %rbp
2912(3): mov %rsp,%rbp
2915(2): jz 0xe(%rip)
2917(7): mov 0x2076ea(%rip),%rdi
291e(5): call 0xfffff4b2(%rip)
2923(5): call 0xffffff4d(%rip)
2928(7): mov $0x1,0x2077b9(%rip)
292f(1): pop %rbp
2930(1): ret near (%rsp)
2931(7): nop 0x0(%rax)
2938(2): REP ret near (%rsp)

"frame_dummy" :
2940(1): push %rbp
2941(3): mov %rsp,%rbp
2944(1): pop %rbp
2945(5): jmp 0xffffff6b(%rip)

"write_counts" :
2950(2): push %r15
2952(2): push %r14
2954(3): mov %rsi,%r15
2957(2): push %r13
2959(2): push %r12
295b(3): mov %rdx,%r14
295e(1): push %rbp
295f(1): push %rbx
2960(3): mov %rcx,%r13
2963(3): mov %r8,%r12
2966(3): mov %r9,%rbx
2969(7): lea 0x4959(%rip),%rbp
2970(4): sub $0x28,%rsp
2974(9): mov $0x28,%rax
297d(5): mov %rax,0x18(%rsp)
2982(2): xor %eax,%eax
2984(7): cmp $0x0,0x207789(%rip)
298b(6): jnz 0x185(%rip)
2991(7): cmp $0x0,0x20777b(%rip)
2998(6): jnz 0x148(%rip)
299e(7): cmp $0x0,0x20776d(%rip)
29a5(6): jnz 0x10b(%rip)
29ab(7): cmp $0x0,0x20775f(%rip)
29b2(6): jnz 0xce(%rip)
29b8(7): cmp $0x0,0x207751(%rip)
29bf(6): jnz 0x91(%rip)
29c5(3): test %rbx,%rbx
29c8(2): jz 0x3c(%rip)
29ca(5): mov $0xa,%esi
29cf(3): mov %rbx,%rdi
29d2(5): call 0xfffff10e(%rip)
29d7(3): test %rax,%rax
29da(2): jz 0x14(%rip)
29dc(3): mov %rbx,%rdx
29df(5): mov $0x3,%esi
29e4(2): xor %edi,%edi
29e6(5): call 0x30ba(%rip)
29eb(3): mov %rax,%rbx
29ee(7): lea 0x4e97(%rip),%rsi
29f5(3): mov %rbx,%rdx
29f8(5): mov $0x1,%edi
29fd(2): xor %eax,%eax
29ff(5): call 0xfffff291(%rip)
2a04(7): mov 0x20769d(%rip),%rdi
2a0b(4): mov 0x28(%rdi),%rax
2a0f(4): cmp 0x30(%rdi),%rax
2a13(6): jnb 0x12d(%rip)
2a19(4): lea 0x1(%rax),%rdx
2a1d(4): mov %rdx,0x28(%rdi)
2a21(3): mov $0xa,(%rax)
2a24(5): mov 0x18(%rsp),%rax
2a29(9): xor $0x28,%rax
2a32(6): jnz 0x11d(%rip)
2a38(4): add $0x28,%rsp
2a3c(1): pop %rbx
2a3d(1): pop %rbp
2a3e(2): pop %r12
2a40(2): pop %r13
2a42(2): pop %r14
2a44(2): pop %r15
2a46(1): ret near (%rsp)
2a47(9): nop 0x0(%rax,%rax,1)
2a50(3): mov %rsp,%rsi
2a53(3): mov %r12,%rdi
2a56(5): call 0x120a(%rip)
2a5b(6): mov 0x2076ab(%rip),%edx
2a61(3): mov %rax,%rcx
2a64(3): mov %rbp,%rsi
2a67(5): mov $0x1,%edi
2a6c(2): xor %eax,%eax
2a6e(5): call 0xfffff222(%rip)
2a73(5): jmp 0xffffff52(%rip)
2a78(8): nop 0x0(%rax,%rax,1)
2a80(3): mov %rsp,%rsi
2a83(3): mov %r13,%rdi
2a86(5): call 0x11da(%rip)
2a8b(6): mov 0x20767b(%rip),%edx
2a91(3): mov %rax,%rcx
2a94(3): mov %rbp,%rsi
2a97(5): mov $0x1,%edi
2a9c(2): xor %eax,%eax
2a9e(7): lea 0x4823(%rip),%rbp
2aa5(5): call 0xfffff1eb(%rip)
2aaa(5): jmp 0xffffff0e(%rip)
2aaf(1): nop 
2ab0(3): mov %rsp,%rsi
2ab3(3): mov %r14,%rdi
2ab6(5): call 0x11aa(%rip)
2abb(6): mov 0x20764b(%rip),%edx
2ac1(3): mov %rax,%rcx
2ac4(3): mov %rbp,%rsi
2ac7(5): mov $0x1,%edi
2acc(2): xor %eax,%eax
2ace(7): lea 0x47f3(%rip),%rbp
2ad5(5): call 0xfffff1bb(%rip)
2ada(5): jmp 0xfffffed1(%rip)
2adf(1): nop 
2ae0(3): mov %rsp,%rsi
2ae3(3): mov %r15,%rdi
2ae6(5): call 0x117a(%rip)
2aeb(6): mov 0x20761b(%rip),%edx
2af1(3): mov %rax,%rcx
2af4(3): mov %rbp,%rsi
2af7(5): mov $0x1,%edi
2afc(2): xor %eax,%eax
2afe(7): lea 0x47c3(%rip),%rbp
2b05(5): call 0xfffff18b(%rip)
2b0a(5): jmp 0xfffffe94(%rip)
2b0f(1): nop 
2b10(3): mov %rsp,%rsi
2b13(5): call 0x114d(%rip)
2b18(6): mov 0x2075ee(%rip),%edx
2b1e(3): mov %rax,%rcx
2b21(3): mov %rbp,%rsi
2b24(5): mov $0x1,%edi
2b29(2): xor %eax,%eax
2b2b(4): sub $0x1,%rbp
2b2f(5): call 0xfffff161(%rip)
2b34(5): jmp 0xfffffe5d(%rip)
2b39(7): nop 0x0(%rax)
2b40(5): mov $0xa,%esi
2b45(5): call 0xffffefab(%rip)
2b4a(5): jmp 0xfffffeda(%rip)
2b4f(5): call 0xffffef61(%rip)

"wc" :
2b60(2): push %r15
2b62(2): push %r14
2b64(2): push %r13
2b66(2): push %r12
2b68(1): push %rbp
2b69(1): push %rbx
2b6a(3): mov %rcx,%rbp
2b6d(3): mov %rdx,%rbx
2b70(7): sub $0x4078,%rsp
2b77(9): mov $0x28,%rcx
2b80(8): mov %rcx,0x4068(%rsp)
2b88(2): xor %ecx,%ecx
2b8a(3): test %rsi,%rsi
2b8d(4): mov %edi,0x48(%rsp)
2b91(5): mov %rsi,0x38(%rsp)
2b96(5): mov %rsi,0x40(%rsp)
2b9b(6): jz 0x8ed(%rip)
2ba1(5): call 0xffffeeef(%rip)
2ba6(4): cmp $0x1,%rax
2baa(7): movzx 0x207560(%rip),%edx
2bb1(6): jbe 0x37f(%rip)
2bb7(7): movzx 0x207554(%rip),%eax
2bbe(3): mov %eax,%r12d
2bc1(4): mov %al,0x4e(%rsp)
2bc5(4): xor $0x1,%r12d
2bc9(3): and %edx,%r12d
2bcc(7): cmp $0x0,0x207540(%rip)
2bd3(6): jnz 0x10d(%rip)
2bd9(8): movzx 0x20752f(%rip),%r15d
2be1(3): test %r15b,%r15b
2be4(6): jnz 0xfc(%rip)
2bea(3): cmp $0x1,%dl
2bed(6): jnz 0x20c(%rip)
2bf3(5): cmp $0x0,0x4e(%rsp)
2bf8(6): jnz 0x201(%rip)
2bfe(7): cmp $0x0,0x20750f(%rip)
2c05(6): jnz 0x1f4(%rip)
2c0b(3): test %r12b,%r12b
2c0e(6): jz 0x21a(%rip)
2c14(2): mov (%rbx),%eax
2c16(2): test %eax,%eax
2c18(6): jnle 0x651(%rip)
2c1e(2): test %eax,%eax
2c20(6): jnz 0x662(%rip)
2c26(3): mov 0x20(%rbx),%eax
2c29(5): and $0xd000,%eax
2c2e(5): cmp $0x8000,%eax
2c33(6): jnz 0x64f(%rip)
2c39(4): mov 0x38(%rbx),%r12
2c3d(3): test %r12,%r12
2c40(6): js 0x642(%rip)
2c46(4): cmp $0xffffffff,%rbp
2c4a(5): mov %r12,0x18(%rsp)
2c4f(7): mov 0x2074aa(%rip),%r13
2c56(6): jz 0x985(%rip)
2c5c(2): xor %edx,%edx
2c5e(3): mov %r12,%rax
2c61(3): div %r13,%rax
2c64(3): test %rdx,%rdx
2c67(6): jnz 0x66f(%rip)
2c6d(5): mov $0x1,%esi
2c72(2): xor %ebp,%ebp
2c74(4): mov 0x40(%rbx),%rax
2c78(a): mov $0x2305843009213693951,%rdx
2c82(4): lea 0xffffffff(%rax),%rcx
2c86(4): add $0x1,%rax
2c8a(3): cmp %rdx,%rcx
2c8d(5): mov $0x201,%ecx
2c92(4): cmovbe %rax,%rcx
2c96(3): mov %r12,%rax
2c99(2): xor %edx,%edx
2c9b(3): div %rcx,%rax
2c9e(3): sub %rdx,%r12
2ca1(3): cmp %rbp,%r12
2ca4(6): jle 0x5de(%rip)
2caa(3): test %sil,%sil
2cad(6): jz 0x5d5(%rip)
2cb3(4): mov 0x48(%rsp),%edi
2cb7(5): mov $0x1,%edx
2cbc(3): mov %r12,%rsi
2cbf(5): call 0xffffee51(%rip)
2cc4(3): test %rax,%rax
2cc7(6): js 0x5bb(%rip)
2ccd(3): sub %rbp,%r12
2cd0(5): mov %r12,0x18(%rsp)
2cd5(5): jmp 0x5b6(%rip)
2cda(6): nop 0x0(%rax,%rax,1)
2ce0(4): mov 0x48(%rsp),%edi
2ce4(5): mov $0x2,%ecx
2ce9(2): xor %edx,%edx
2ceb(2): xor %esi,%esi
2ced(5): call 0xf33(%rip)
2cf2(5): call 0xffffed9e(%rip)
2cf7(4): cmp $0x1,%rax
2cfb(6): jbe 0x414(%rip)
2d01(5): lea 0x60(%rsp),%rax
2d06(3): xor %r12d,%r12d
2d09(9): mov $0x0,0x58(%rsp)
2d12(2): xor %ecx,%ecx
2d14(3): xor %r14d,%r14d
2d17(2): xor %ebx,%ebx
2d19(9): mov $0x0,0x28(%rsp)
2d22(9): mov $0x0,0x18(%rsp)
2d2b(2): xor %ebp,%ebp
2d2d(9): mov $0x0,0x20(%rsp)
2d36(8): mov $0x0,(%rsp)
2d3e(3): mov %r12,%r13
2d41(5): mov %rax,0x30(%rsp)
2d46(a): nop 0x0(%rax,%rax,1)
2d50(5): mov 0x30(%rsp),%rax
2d55(4): mov 0x48(%rsp),%edi
2d59(5): mov $0x4000,%edx
2d5e(3): sub %r13,%rdx
2d61(4): mov %cl,0x8(%rsp)
2d65(4): lea 0x0(%rax,%r13,1),%rsi
2d69(5): call 0x32c7(%rip)
2d6e(3): test %rax,%rax
2d71(5): movzx 0x8(%rsp),%ecx
2d76(6): jz 0x752(%rip)
2d7c(4): cmp $0xffffffff,%rax
2d80(6): jz 0x768(%rip)
2d86(5): mov 0x30(%rsp),%r15
2d8b(3): add %rax,%r13
2d8e(5): add %rax,0x18(%rsp)
2d93(5): lea 0x58(%rsp),%rax
2d98(3): mov %r15,%r12
2d9b(5): mov %rax,0x8(%rsp)
2da0(3): mov %r13,%r15
2da3(5): nop 0x0(%rax,%rax,1)
2da8(2): test %cl,%cl
2daa(6): jnz 0x54e(%rip)
2db0(5): movzx (%r12),%r13d
2db5(7): lea 0x4ae4(%rip),%rsi
2dbc(3): mov %r13d,%eax
2dbf(3): shr $0x5,%al
2dc2(3): and $0x7,%eax
2dc5(3): mov 0x0(%rsi,%rax,4),%eax
2dc8(4): bt %r13d,%eax
2dcc(6): jnb 0x52c(%rip)
2dd2(4): movsx %r13b,%eax
2dd6(4): mov %eax,0x54(%rsp)
2dda(4): lea 0xfffffff7(%r13),%eax
2dde(2): cmp $0x17,%al
2de0(6): jnbe 0x2f0(%rip)
2de6(7): lea 0x43bb(%rip),%rsi
2ded(3): movzx %al,%eax
2df0(4): movsxd 0x0(%rsi,%rax,4),%rax
2df4(3): add %rsi,%rax
2df7(2): jmp %rax
2df9(4): mov 0x48(%rsp),%edi
2dfd(2): xor %edx,%edx
2dff(2): xor %esi,%esi
2e01(5): mov $0x2,%ecx
2e06(5): call 0xe1a(%rip)
2e0b(3): test %r12b,%r12b
2e0e(2): jz 0xf(%rip)
2e10(7): cmp $0x0,0x2072fd(%rip)
2e17(6): jz 0xfffffdfd(%rip)
2e1d(5): cmp $0x0,0x4e(%rsp)
2e22(6): jnz 0xfffffed0(%rip)
2e28(5): lea 0x60(%rsp),%rax
2e2d(3): xor %r13d,%r13d
2e30(5): mov %r15b,0x8(%rsp)
2e35(9): mov $0x0,0x18(%rsp)
2e3e(3): mov %r13d,%r15d
2e41(8): mov $0x0,(%rsp)
2e49(a): mov $0x-8608480567731124087,%r14
2e53(3): mov %rax,%r13
2e56(a): nop 0x0(%rax,%rax,1)
2e60(4): mov 0x48(%rsp),%edi
2e64(5): mov $0x4000,%edx
2e69(3): mov %r13,%rsi
2e6c(5): call 0x31c4(%rip)
2e71(3): test %rax,%rax
2e74(6): jz 0xdc(%rip)
2e7a(4): cmp $0xffffffff,%rax
2e7e(6): jz 0x172(%rip)
2e84(5): add %rax,0x18(%rsp)
2e89(5): lea 0x0(%r13,%rax,1),%rbp
2e8e(3): mul %rax,%r14,%rdx
2e91(3): mov %rdx,%rbx
2e94(4): shr $0x3,%rbx
2e98(3): test %r15b,%r15b
2e9b(2): jz 0x4d(%rip)
2e9d(4): mov (%rsp),%r12
2ea1(3): mov %r13,%rdi
2ea4(2): jmp 0x14(%rip)
2ea6(a): nop 0x0(%rax,%rax,1)
2eb0(4): lea 0x1(%rax),%rdi
2eb4(4): add $0x1,%r12
2eb8(3): mov %rbp,%rdx
2ebb(5): mov $0xa,%esi
2ec0(3): sub %rdi,%rdx
2ec3(5): call 0xffffecad(%rip)
2ec8(3): test %rax,%rax
2ecb(2): jnz 0xffffffe5(%rip)
2ecd(3): mov %r12,%rax
2ed0(4): sub (%rsp),%rax
2ed4(4): mov %r12,(%rsp)
2ed8(3): cmp %rbx,%rax
2edb(4): setbe %r15b
2edf(5): jmp 0xffffff81(%rip)
2ee4(4): nop 0x0(%rax)
2ee8(3): cmp %r13,%rbp
2eeb(6): jz 0x14d(%rip)
2ef1(4): mov (%rsp),%rdx
2ef5(3): mov %r13,%rax
2ef8(8): nop 0x0(%rax,%rax,1)
2f00(4): add $0x1,%rax
2f04(2): xor %ecx,%ecx
2f06(4): cmp $0xa,0xffffffff(%rax)
2f0a(3): setz %cl
2f0d(3): add %rcx,%rdx
2f10(3): cmp %rax,%rbp
2f13(2): jnz 0xffffffed(%rip)
2f15(3): mov %rdx,%rax
2f18(4): sub (%rsp),%rax
2f1c(4): mov %rdx,(%rsp)
2f20(3): cmp %rbx,%rax
2f23(4): setbe %r15b
2f27(5): jmp 0xffffff39(%rip)
2f2c(4): nop 0x0(%rax)
2f30(7): movzx 0x2071db(%rip),%eax
2f37(2): test %dl,%dl
2f39(5): mov $0x0,0x4e(%rsp)
2f3e(3): cmove %eax,%edx
2f41(3): mov %edx,%r12d
2f44(5): jmp 0xfffffc88(%rip)
2f49(7): nop 0x0(%rax)
2f50(3): xor %r14d,%r14d
2f53(2): xor %ebp,%ebp
2f55(3): xor %r12d,%r12d
2f58(6): mov $0x1,%r15d
2f5e(5): movzx 0x4e(%rsp),%eax
2f63(5): mov 0x18(%rsp),%rbx
2f68(3): mov %r14,%r8
2f6b(6): cmp %al,0x2071a1(%rip)
2f71(4): mov (%rsp),%r13
2f75(3): mov %r12,%rsi
2f78(5): mov 0x38(%rsp),%r9
2f7d(3): mov %rbx,%rcx
2f80(3): mov %r13,%rdi
2f83(4): cmovnbe %rbx,%rbp
2f87(3): mov %rbp,%rdx
2f8a(5): call 0xfffff9c6(%rip)
2f8f(7): add %r13,0x2071a2(%rip)
2f96(7): add %r12,0x207193(%rip)
2f9d(7): add %rbp,0x207184(%rip)
2fa4(7): add %rbx,0x207175(%rip)
2fab(7): cmp %r14,0x207166(%rip)
2fb2(2): jnb 0x9(%rip)
2fb4(7): mov %r14,0x20715d(%rip)
2fbb(8): mov 0x4068(%rsp),%rcx
2fc3(9): xor $0x28,%rcx
2fcc(3): mov %r15d,%eax
2fcf(6): jnz 0x657(%rip)
2fd5(7): add $0x4078,%rsp
2fdc(1): pop %rbx
2fdd(1): pop %rbp
2fde(2): pop %r12
2fe0(2): pop %r13
2fe2(2): pop %r14
2fe4(2): pop %r15
2fe6(1): ret near (%rsp)
2fe7(9): nop 0x0(%rax,%rax,1)
2ff0(5): mov 0x40(%rsp),%rdx
2ff5(5): mov $0x3,%esi
2ffa(2): xor %edi,%edi
2ffc(6): movzx 0x8(%rsp),%r15d
3002(3): xor %r14d,%r14d
3005(2): xor %ebp,%ebp
3007(3): xor %r12d,%r12d
300a(5): call 0x2a96(%rip)
300f(3): mov %rax,%rbx
3012(5): call 0xffffe9de(%rip)
3017(2): mov (%rax),%esi
3019(7): lea 0x486d(%rip),%rdx
3020(3): mov %rbx,%rcx
3023(2): xor %edi,%edi
3025(2): xor %eax,%eax
3027(5): call 0xffffeca9(%rip)
302c(5): jmp 0xffffff32(%rip)
3031(7): nop 0x0(%rax)
3038(6): mov $0x1,%r15d
303e(5): jmp 0xfffffe22(%rip)
3043(5): nop 0x0(%rax,%rax,1)
3048(5): mov $0x1,%edx
304d(4): add $0x1,%r14
3051(7): nop 0x0(%rax)
3058(5): add %rbx,0x20(%rsp)
305d(2): xor %ebx,%ebx
305f(3): add %rdx,%r12
3062(3): sub %rdx,%r15
3065(4): add $0x1,%rbp
3069(3): test %r15,%r15
306c(6): jnz 0xfffffd3c(%rip)
3072(3): mov %r15,%r13
3075(5): jmp 0xfffffcdb(%rip)
307a(6): nop 0x0(%rax,%rax,1)
3080(5): mov $0x1,%edx
3085(5): mov 0x28(%rsp),%rax
308a(3): cmp %r14,%rax
308d(4): cmovnb %rax,%r14
3091(5): mov %r14,0x28(%rsp)
3096(3): xor %r14d,%r14d
3099(2): jmp 0xffffffbf(%rip)
309b(5): nop 0x0(%rax,%rax,1)
30a0(5): mov $0x1,%edx
30a5(2): jmp 0xffffffb3(%rip)
30a7(9): nop 0x0(%rax,%rax,1)
30b0(5): mov $0x1,%edx
30b5(5): add $0x1,(%rsp)
30ba(2): jmp 0xffffffcb(%rip)
30bc(4): nop 0x0(%rax)
30c0(5): mov $0x1,%edx
30c5(4): and $0xfffffff8,%r14
30c9(4): add $0x8,%r14
30cd(2): jmp 0xffffff8b(%rip)
30cf(1): nop 
30d0(4): mov %cl,0x10(%rsp)
30d4(4): movzx %r13b,%r13d
30d8(5): call 0xffffecd8(%rip)
30dd(3): mov (%rax),%rax
30e0(5): mov $0x1,%edx
30e5(5): movzx 0x10(%rsp),%ecx
30ea(5): movzx 0x0(%rax,%r13,2),%eax
30ef(3): test $0x40,%ah
30f2(6): jz 0xffffff6d(%rip)
30f8(4): add $0x1,%r14
30fc(3): test $0x20,%ah
30ff(6): jnz 0xffffff59(%rip)
3105(5): mov $0x1,%ebx
310a(5): jmp 0xffffff55(%rip)
310f(5): lea 0x60(%rsp),%rax
3114(2): xor %ebx,%ebx
3116(2): xor %ebp,%ebp
3118(7): lea 0x40e9(%rip),%r15
311f(4): movzx %bl,%r13d
3123(9): mov $0x0,0x18(%rsp)
312c(3): xor %r12d,%r12d
312f(8): mov $0x0,(%rsp)
3137(5): mov %rax,0x30(%rsp)
313c(3): mov %rbp,%rbx
313f(1): nop 
3140(5): mov 0x30(%rsp),%rsi
3145(4): mov 0x48(%rsp),%edi
3149(5): mov $0x4000,%edx
314e(5): call 0x2ee2(%rip)
3153(3): test %rax,%rax
3156(6): jz 0x3d6(%rip)
315c(4): cmp $0xffffffff,%rax
3160(6): jz 0x3f3(%rip)
3166(5): mov 0x30(%rsp),%r14
316b(5): add %rax,0x18(%rsp)
3170(3): mov %rbp,%rdx
3173(3): mov %rbx,%rbp
3176(4): lea 0x0(%r14,%rax,1),%r10
317a(6): nop 0x0(%rax,%rax,1)
3180(4): add $0x1,%r14
3184(5): movzx 0xffffffff(%r14),%ebx
3189(3): lea 0xfffffff7(%rbx),%eax
318c(2): cmp $0x17,%al
318e(2): jnbe 0x52(%rip)
3190(3): movzx %al,%eax
3193(4): movsxd 0x0(%r15,%rax,4),%rax
3197(3): add %r15,%rax
319a(2): jmp %rax
319c(4): nop 0x0(%rax)
31a0(5): add $0x1,(%rsp)
31a5(3): cmp %rbp,%rdx
31a8(4): cmovnae %rbp,%rdx
31ac(2): xor %ebp,%ebp
31ae(3): add %r13,%r12
31b1(3): xor %r13d,%r13d
31b4(3): cmp %r14,%r10
31b7(2): jnz 0xffffffc9(%rip)
31b9(3): mov %rbp,%rbx
31bc(3): mov %rdx,%rbp
31bf(5): jmp 0xffffff81(%rip)
31c4(4): nop 0x0(%rax)
31c8(4): and $0xfffffff8,%rbp
31cc(4): add $0x8,%rbp
31d0(2): jmp 0xffffffde(%rip)
31d2(6): nop 0x0(%rax,%rax,1)
31d8(4): add $0x1,%rbp
31dc(2): jmp 0xffffffd2(%rip)
31de(2): nop 
31e0(5): mov %rdx,0x10(%rsp)
31e5(5): mov %r10,0x8(%rsp)
31ea(5): call 0xffffebc6(%rip)
31ef(3): mov (%rax),%rsi
31f2(3): movzx %bl,%ecx
31f5(5): mov 0x8(%rsp),%r10
31fa(5): mov 0x10(%rsp),%rdx
31ff(4): movzx 0x0(%rsi,%rcx,2),%eax
3203(3): test $0x40,%ah
3206(2): jz 0xffffffae(%rip)
3208(4): add $0x1,%rbp
320c(3): test $0x20,%ah
320f(2): jnz 0xffffff9f(%rip)
3211(3): movzx %bl,%edi
3214(5): call 0xffffeaac(%rip)
3219(7): movzx 0x206ed8(%rip),%ecx
3220(5): mov 0x8(%rsp),%r10
3225(5): mov 0x10(%rsp),%rdx
322a(2): test %cl,%cl
322c(6): jnz 0x2f7(%rip)
3232(5): cmp $0xa0,%eax
3237(6): jz 0xffffff77(%rip)
323d(5): cmp $0x2007,%eax
3242(6): jz 0xffffff6c(%rip)
3248(5): cmp $0x202f,%eax
324d(6): jz 0xffffff61(%rip)
3253(5): cmp $0x2060,%eax
3258(6): jz 0xffffff56(%rip)
325e(6): mov $0x1,%r13d
3264(5): jmp 0xffffff50(%rip)
3269(4): mov 0x48(%rsp),%esi
326d(4): lea 0x8(%rbx),%rdx
3271(5): mov $0x1,%edi
3276(5): call 0xffffe9da(%rip)
327b(2): mov %eax,(%rbx)
327d(5): jmp 0xfffff9a1(%rip)
3282(9): mov $0x0,0x18(%rsp)
328b(4): mov 0x48(%rsp),%ebp
328f(5): mov $0x2,%ecx
3294(2): xor %edx,%edx
3296(2): xor %esi,%esi
3298(5): lea 0x60(%rsp),%r12
329d(2): mov %ebp,%edi
329f(5): call 0x981(%rip)
32a4(5): mov 0x18(%rsp),%rbx
32a9(2): jmp 0x14(%rip)
32ab(5): nop 0x0(%rax,%rax,1)
32b0(4): cmp $0xffffffff,%rax
32b4(6): jz 0x2df(%rip)
32ba(3): add %rax,%rbx
32bd(5): mov $0x4000,%edx
32c2(3): mov %r12,%rsi
32c5(2): mov %ebp,%edi
32c7(5): call 0x2d69(%rip)
32cc(3): test %rax,%rax
32cf(2): jnz 0xffffffe1(%rip)
32d1(5): mov %rbx,0x18(%rsp)
32d6(3): xor %r14d,%r14d
32d9(2): xor %ebp,%ebp
32db(3): xor %r12d,%r12d
32de(8): mov $0x0,(%rsp)
32e6(6): mov $0x1,%r15d
32ec(5): jmp 0xfffffc72(%rip)
32f1(7): nop 0x0(%rax)
32f8(5): mov 0x8(%rsp),%rcx
32fd(5): lea 0x54(%rsp),%rdi
3302(3): mov %r15,%rdx
3305(3): mov %r12,%rsi
3308(5): mov 0x58(%rsp),%r13
330d(5): call 0x3753(%rip)
3312(4): cmp $0xfffffffe,%rax
3316(6): jz 0x12a(%rip)
331c(4): cmp $0xffffffff,%rax
3320(6): jz 0x108(%rip)
3326(5): mov 0x8(%rsp),%rdi
332b(5): mov %rax,0x10(%rsp)
3330(5): call 0xffffea50(%rip)
3335(5): mov 0x10(%rsp),%rdx
333a(2): test %eax,%eax
333c(3): setz %cl
333f(3): test %rdx,%rdx
3342(6): jnz 0xbe(%rip)
3348(8): mov $0x0,0x54(%rsp)
3350(2): xor %edi,%edi
3352(3): xor %r13d,%r13d
3355(5): mov $0x1,%edx
335a(4): mov %cl,0x4f(%rsp)
335e(5): mov %rdx,0x10(%rsp)
3363(5): call 0xffffea2d(%rip)
3368(2): test %eax,%eax
336a(5): mov 0x10(%rsp),%rdx
336f(5): movzx 0x4f(%rsp),%ecx
3374(6): jz 0xfffffceb(%rip)
337a(7): cmp $0x0,0x206d8f(%rip)
3381(6): jnz 0x124(%rip)
3387(5): mov 0x54(%rsp),%r13d
338c(4): mov %cl,0x4f(%rsp)
3390(5): mov %rdx,0x10(%rsp)
3395(3): mov %r13d,%edi
3398(5): call 0xffffe918(%rip)
339d(2): test %eax,%eax
339f(5): mov 0x10(%rsp),%rdx
33a4(5): movzx 0x4f(%rsp),%ecx
33a9(6): jnz 0xfffffcaf(%rip)
33af(7): movzx 0x206d42(%rip),%eax
33b6(2): test %al,%al
33b8(6): jnz 0x163(%rip)
33be(7): cmp $0xa0,%r13d
33c5(6): jz 0xfffffc93(%rip)
33cb(7): cmp $0x2007,%r13d
33d2(6): jz 0xfffffc86(%rip)
33d8(7): cmp $0x202f,%r13d
33df(6): jz 0xfffffc79(%rip)
33e5(7): cmp $0x2060,%r13d
33ec(6): jnz 0xfffffd19(%rip)
33f2(5): jmp 0xfffffc66(%rip)
33f7(9): nop 0x0(%rax,%rax,1)
3400(5): mov 0x54(%rsp),%r13d
3405(4): lea 0xfffffff7(%r13),%eax
3409(3): cmp $0x17,%eax
340c(6): jnbe 0x238(%rip)
3412(7): lea 0x3e4f(%rip),%rsi
3419(4): movsxd 0x0(%rsi,%rax,4),%rax
341d(3): add %rsi,%rax
3420(2): jmp %rax
3422(6): nop 0x0(%rax,%rax,1)
3428(4): add $0x1,%r12
342c(4): sub $0x1,%r15
3430(5): mov $0x1,%ecx
3435(5): jmp 0xfffffc34(%rip)
343a(6): nop 0x0(%rax,%rax,1)
3440(3): mov %r13,%rax
3443(3): mov %r15,%r13
3446(3): mov %r12,%r15
3449(3): test %r13,%r13
344c(5): mov %rax,0x58(%rsp)
3451(2): jz 0x2a(%rip)
3453(7): cmp $0x4000,%r13
345a(2): jnz 0xc(%rip)
345c(4): add $0x1,%r15
3460(6): mov $0x3fff,%r13d
3466(5): mov 0x30(%rsp),%rdi
346b(5): mov $0x4001,%ecx
3470(3): mov %r13,%rdx
3473(3): mov %r15,%rsi
3476(5): call 0xffffe75a(%rip)
347b(5): mov $0x1,%ecx
3480(5): jmp 0xfffff8d0(%rip)
3485(3): nop (%rax)
3488(7): lea 0x3b55(%rip),%rsi
348f(5): mov $0x5,%edx
3494(2): xor %edi,%edi
3496(5): call 0xffffe5ea(%rip)
349b(5): mov %rax,0x40(%rsp)
34a0(5): jmp 0xfffff701(%rip)
34a5(3): mov %r13d,%edi
34a8(5): call 0xffffe778(%rip)
34ad(3): movsxd %eax,%rsi
34b0(5): movzx 0x4f(%rsp),%ecx
34b5(5): mov 0x10(%rsp),%rdx
34ba(3): add %r14,%rsi
34bd(2): test %eax,%eax
34bf(4): cmovnl %rsi,%r14
34c3(5): jmp 0xfffffec4(%rip)
34c8(6): mov $0x1,%r15d
34ce(5): mov 0x28(%rsp),%rax
34d3(4): movzx %bl,%r12d
34d7(3): cmp %r14,%rax
34da(4): cmovnb %rax,%r14
34de(5): add 0x20(%rsp),%r12
34e3(5): jmp 0xfffffa7b(%rip)
34e8(5): mov 0x40(%rsp),%rdx
34ed(5): mov $0x3,%esi
34f2(2): xor %edi,%edi
34f4(3): xor %r15d,%r15d
34f7(5): call 0x25a9(%rip)
34fc(3): mov %rax,%r12
34ff(5): call 0xffffe4f1(%rip)
3504(2): mov (%rax),%esi
3506(7): lea 0x4380(%rip),%rdx
350d(3): mov %r12,%rcx
3510(2): xor %edi,%edi
3512(2): xor %eax,%eax
3514(5): call 0xffffe7bc(%rip)
3519(2): jmp 0xffffffb5(%rip)
351b(3): movzx %al,%ebx
351e(5): jmp 0xfffffb41(%rip)
3523(4): movzx %cl,%r13d
3527(5): jmp 0xfffffc8d(%rip)
352c(3): mov %rbx,%rax
352f(6): mov $0x1,%r15d
3535(4): movzx %r13b,%ebx
3539(3): mov %rbp,%r13
353c(3): mov %rax,%rbp
353f(3): cmp %rbp,%r13
3542(3): mov %rbp,%r14
3545(4): cmovnb %r13,%r14
3549(3): add %rbx,%r12
354c(2): xor %ebp,%ebp
354e(5): jmp 0xfffffa10(%rip)
3553(5): mov 0x40(%rsp),%rdx
3558(3): mov %rbx,%rax
355b(5): mov $0x3,%esi
3560(2): xor %edi,%edi
3562(4): movzx %r13b,%ebx
3566(3): mov %rbp,%r13
3569(3): mov %rax,%rbp
356c(3): xor %r15d,%r15d
356f(5): call 0x2531(%rip)
3574(3): mov %rax,%r14
3577(5): call 0xffffe479(%rip)
357c(2): mov (%rax),%esi
357e(7): lea 0x4308(%rip),%rdx
3585(3): mov %r14,%rcx
3588(2): xor %edi,%edi
358a(2): xor %eax,%eax
358c(5): call 0xffffe744(%rip)
3591(2): jmp 0xffffffae(%rip)
3593(5): mov 0x40(%rsp),%rdx
3598(5): mov $0x3,%esi
359d(2): xor %edi,%edi
359f(5): mov %rbx,0x18(%rsp)
35a4(3): xor %r14d,%r14d
35a7(2): xor %ebp,%ebp
35a9(3): xor %r12d,%r12d
35ac(5): call 0x24f4(%rip)
35b1(3): mov %rax,%rbx
35b4(5): call 0xffffe43c(%rip)
35b9(2): mov (%rax),%esi
35bb(7): lea 0x42cb(%rip),%rdx
35c2(3): mov %rbx,%rcx
35c5(2): xor %edi,%edi
35c7(2): xor %eax,%eax
35c9(5): call 0xffffe707(%rip)
35ce(8): mov $0x0,(%rsp)
35d6(5): jmp 0xfffff988(%rip)
35db(4): mov 0x48(%rsp),%edi
35df(5): mov $0x1,%edx
35e4(2): xor %esi,%esi
35e6(5): call 0xffffe52a(%rip)
35eb(2): xor %edx,%edx
35ed(3): mov %rax,%rbp
35f0(3): mov %r12,%rax
35f3(3): div %r13,%rax
35f6(3): test %rdx,%rdx
35f9(2): jz 0x3c(%rip)
35fb(5): cmp 0x18(%rsp),%rbp
3600(2): jbe 0x2b(%rip)
3602(3): xor %r14d,%r14d
3605(9): mov $0x0,0x18(%rsp)
360e(2): xor %ebp,%ebp
3610(3): xor %r12d,%r12d
3613(8): mov $0x0,(%rsp)
361b(6): mov $0x1,%r15d
3621(5): jmp 0xfffff93d(%rip)
3626(5): call 0xffffe48a(%rip)
362b(5): sub %rbp,0x18(%rsp)
3630(5): jmp 0xfffffca6(%rip)
3635(3): mov %rbp,%rsi
3638(3): not %rsi
363b(4): shr $0x3f,%rsi
363f(5): jmp 0xfffff635(%rip)
3644(3): mov %r13d,%edi
3647(5): jmp 0xfffffd13(%rip)

"usage" :
3650(2): push %r13
3652(2): push %r12
3654(5): mov $0x5,%edx
3659(1): push %rbp
365a(1): push %rbx
365b(2): mov %edi,%ebp
365d(7): sub $0x88,%rsp
3664(7): mov 0x206ae5(%rip),%rbx
366b(9): mov $0x28,%rax
3674(5): mov %rax,0x78(%rsp)
3679(2): xor %eax,%eax
367b(2): test %edi,%edi
367d(2): jz 0x30(%rip)
367f(7): lea 0x3c52(%rip),%rsi
3686(2): xor %edi,%edi
3688(5): call 0xffffe3f8(%rip)
368d(7): mov 0x206a4c(%rip),%rdi
3694(3): mov %rax,%rdx
3697(3): mov %rbx,%rcx
369a(5): mov $0x1,%esi
369f(2): xor %eax,%eax
36a1(5): call 0xffffe6cf(%rip)
36a6(2): mov %ebp,%edi
36a8(5): call 0xffffe6a8(%rip)
36ad(7): lea 0x3c4c(%rip),%rsi
36b4(2): xor %edi,%edi
36b6(5): call 0xffffe3ca(%rip)
36bb(3): mov %rbx,%rcx
36be(3): mov %rbx,%rdx
36c1(3): mov %rax,%rsi
36c4(5): mov $0x1,%edi
36c9(2): xor %eax,%eax
36cb(5): call 0xffffe5c5(%rip)
36d0(7): mov 0x2069d1(%rip),%rbx
36d7(7): lea 0x3c6a(%rip),%rsi
36de(5): mov $0x5,%edx
36e3(2): xor %edi,%edi
36e5(5): call 0xffffe39b(%rip)
36ea(3): mov %rbx,%rsi
36ed(3): mov %rax,%rdi
36f0(5): call 0xffffe4b0(%rip)
36f5(7): mov 0x2069ac(%rip),%rbx
36fc(7): lea 0x3cfd(%rip),%rsi
3703(5): mov $0x5,%edx
3708(2): xor %edi,%edi
370a(5): call 0xffffe376(%rip)
370f(3): mov %rbx,%rsi
3712(3): mov %rax,%rdi
3715(5): call 0xffffe48b(%rip)
371a(7): mov 0x206987(%rip),%rbx
3721(7): lea 0x3d10(%rip),%rsi
3728(5): mov $0x5,%edx
372d(2): xor %edi,%edi
372f(5): call 0xffffe351(%rip)
3734(3): mov %rbx,%rsi
3737(3): mov %rax,%rdi
373a(5): call 0xffffe466(%rip)
373f(7): mov 0x206962(%rip),%rbx
3746(7): lea 0x3e1b(%rip),%rsi
374d(5): mov $0x5,%edx
3752(2): xor %edi,%edi
3754(5): call 0xffffe32c(%rip)
3759(3): mov %rbx,%rsi
375c(3): mov %rax,%rdi
375f(5): call 0xffffe441(%rip)
3764(7): mov 0x20693d(%rip),%rbx
376b(7): lea 0x3f26(%rip),%rsi
3772(5): mov $0x5,%edx
3777(2): xor %edi,%edi
3779(5): call 0xffffe307(%rip)
377e(3): mov %rbx,%rsi
3781(3): mov %rax,%rdi
3784(5): call 0xffffe41c(%rip)
3789(7): mov 0x206918(%rip),%rbx
3790(7): lea 0x3f31(%rip),%rsi
3797(5): mov $0x5,%edx
379c(2): xor %edi,%edi
379e(5): call 0xffffe2e2(%rip)
37a3(3): mov %rbx,%rsi
37a6(3): mov %rax,%rdi
37a9(7): lea 0x3843(%rip),%rbx
37b0(5): call 0xffffe3f0(%rip)
37b5(7): lea 0x383a(%rip),%rax
37bc(7): lea 0x3874(%rip),%rcx
37c3(9): mov $0x0,0x60(%rsp)
37cc(9): mov $0x0,0x68(%rsp)
37d5(3): mov %rsp,%rdx
37d8(4): mov %rax,(%rsp)
37dc(7): lea 0x3815(%rip),%rax
37e3(5): mov %rcx,0x30(%rsp)
37e8(7): lea 0x3852(%rip),%rcx
37ef(5): mov %rax,0x8(%rsp)
37f4(7): lea 0x3875(%rip),%rax
37fb(5): mov %rcx,0x40(%rsp)
3800(7): lea 0x3844(%rip),%rcx
3807(5): mov %rax,0x10(%rsp)
380c(7): lea 0x37f5(%rip),%rax
3813(5): mov %rcx,0x50(%rsp)
3818(5): mov %rax,0x18(%rsp)
381d(7): lea 0x37fa(%rip),%rax
3824(5): mov %rax,0x20(%rsp)
3829(7): lea 0x37f8(%rip),%rax
3830(5): mov %rax,0x28(%rsp)
3835(5): mov %rax,0x38(%rsp)
383a(5): mov %rax,0x48(%rsp)
383f(5): mov %rax,0x58(%rsp)
3844(4): nop 0x0(%rax)
3848(4): add $0x10,%rdx
384c(3): mov (%rdx),%rdi
384f(3): test %rdi,%rdi
3852(2): jz 0x15(%rip)
3854(5): mov $0x3,%ecx
3859(3): mov %rbx,%rsi
385c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
385e(3): setnbe %al
3861(2): sbb $0x0,%al
3863(2): test %al,%al
3865(2): jnz 0xffffffe3(%rip)
3867(4): mov 0x8(%rdx),%r12
386b(2): xor %edi,%edi
386d(5): mov $0x5,%edx
3872(7): lea 0x37dc(%rip),%rsi
3879(3): test %r12,%r12
387c(6): jz 0xc7(%rip)
3882(5): call 0xffffe1fe(%rip)
3887(7): lea 0x3e72(%rip),%rcx
388e(7): lea 0x37d7(%rip),%rdx
3895(3): mov %rax,%rsi
3898(5): mov $0x1,%edi
389d(2): xor %eax,%eax
389f(5): call 0xffffe3f1(%rip)
38a4(2): xor %esi,%esi
38a6(5): mov $0x5,%edi
38ab(5): call 0xffffe3d5(%rip)
38b0(3): test %rax,%rax
38b3(2): jz 0x1e(%rip)
38b5(7): lea 0x37be(%rip),%rsi
38bc(5): mov $0x3,%edx
38c1(3): mov %rax,%rdi
38c4(5): call 0xffffe13c(%rip)
38c9(2): test %eax,%eax
38cb(6): jnz 0x10d(%rip)
38d1(7): lea 0x37a6(%rip),%rsi
38d8(2): xor %edi,%edi
38da(5): mov $0x5,%edx
38df(5): call 0xffffe1a1(%rip)
38e4(7): lea 0x3708(%rip),%rcx
38eb(7): lea 0x3e0e(%rip),%rdx
38f2(3): mov %rax,%rsi
38f5(5): mov $0x1,%edi
38fa(2): xor %eax,%eax
38fc(5): call 0xffffe394(%rip)
3901(3): cmp %rbx,%r12
3904(7): lea 0x3707(%rip),%rcx
390b(7): lea 0x452f(%rip),%rbx
3912(4): cmove %rcx,%rbx
3916(7): lea 0x3e53(%rip),%rsi
391d(2): xor %edi,%edi
391f(5): mov $0x5,%edx
3924(5): call 0xffffe15c(%rip)
3929(3): mov %rbx,%rcx
392c(3): mov %rax,%rsi
392f(3): mov %r12,%rdx
3932(5): mov $0x1,%edi
3937(2): xor %eax,%eax
3939(5): call 0xffffe357(%rip)
393e(5): jmp 0xfffffd68(%rip)
3943(5): call 0xffffe13d(%rip)
3948(7): lea 0x3db1(%rip),%rcx
394f(7): lea 0x3716(%rip),%rdx
3956(3): mov %rax,%rsi
3959(5): mov $0x1,%edi
395e(2): xor %eax,%eax
3960(5): call 0xffffe330(%rip)
3965(2): xor %esi,%esi
3967(5): mov $0x5,%edi
396c(5): call 0xffffe314(%rip)
3971(3): test %rax,%rax
3974(2): jz 0x1a(%rip)
3976(7): lea 0x36fd(%rip),%rsi
397d(5): mov $0x3,%edx
3982(3): mov %rax,%rdi
3985(5): call 0xffffe07b(%rip)
398a(2): test %eax,%eax
398c(2): jnz 0x45(%rip)
398e(7): lea 0x36e9(%rip),%rsi
3995(5): mov $0x5,%edx
399a(2): xor %edi,%edi
399c(7): lea 0x3650(%rip),%r12
39a3(7): lea 0x3668(%rip),%rbx
39aa(5): call 0xffffe0d6(%rip)
39af(7): lea 0x363d(%rip),%rcx
39b6(7): lea 0x3d43(%rip),%rdx
39bd(3): mov %rax,%rsi
39c0(5): mov $0x1,%edi
39c5(2): xor %eax,%eax
39c7(5): call 0xffffe2c9(%rip)
39cc(5): jmp 0xffffff4a(%rip)
39d1(7): lea 0x361b(%rip),%r12
39d8(7): mov 0x2066c9(%rip),%r13
39df(7): lea 0x3d42(%rip),%rsi
39e6(2): xor %edi,%edi
39e8(5): mov $0x5,%edx
39ed(5): call 0xffffe093(%rip)
39f2(3): mov %r13,%rsi
39f5(3): mov %rax,%rdi
39f8(5): call 0xffffe1a8(%rip)
39fd(5): jmp 0xfffffed4(%rip)

"argv_iter_init_argv" :
3a10(1): push %rbx
3a11(3): mov %rdi,%rbx
3a14(5): mov $0x30,%edi
3a19(5): call 0xffffe3af(%rip)
3a1e(3): test %rax,%rax
3a21(2): jz 0x11(%rip)
3a23(7): mov $0x0,(%rax)
3a2a(4): mov %rbx,0x20(%rax)
3a2e(4): mov %rbx,0x28(%rax)
3a32(1): pop %rbx
3a33(1): ret near (%rsp)

"argv_iter_init_stream" :
3a40(1): push %rbx
3a41(3): mov %rdi,%rbx
3a44(5): mov $0x30,%edi
3a49(5): call 0xffffe37f(%rip)
3a4e(3): test %rax,%rax
3a51(2): jz 0x25(%rip)
3a53(3): mov %rbx,(%rax)
3a56(8): mov $0x0,0x10(%rax)
3a5e(8): mov $0x0,0x18(%rax)
3a66(8): mov $0x0,0x8(%rax)
3a6e(8): mov $0x0,0x20(%rax)
3a76(1): pop %rbx
3a77(1): ret near (%rsp)

"argv_iter" :
3a80(3): mov (%rdi),%rcx
3a83(3): test %rcx,%rcx
3a86(2): jz 0x3a(%rip)
3a88(1): push %rbp
3a89(1): push %rbx
3a8a(3): mov %rsi,%rbp
3a8d(3): mov %rdi,%rbx
3a90(4): lea 0x18(%rdi),%rsi
3a94(4): lea 0x10(%rdi),%rdi
3a98(4): sub $0x8,%rsp
3a9c(2): xor %edx,%edx
3a9e(5): call 0xffffe302(%rip)
3aa3(3): test %rax,%rax
3aa6(2): js 0x4a(%rip)
3aa8(7): mov $0x1,0x0(%rbp)
3aaf(5): add $0x1,0x8(%rbx)
3ab4(4): mov 0x10(%rbx),%rax
3ab8(4): add $0x8,%rsp
3abc(1): pop %rbx
3abd(1): pop %rbp
3abe(1): ret near (%rsp)
3abf(1): nop 
3ac0(4): mov 0x28(%rdi),%rdx
3ac4(3): mov (%rdx),%rax
3ac7(3): test %rax,%rax
3aca(2): jz 0x16(%rip)
3acc(4): add $0x8,%rdx
3ad0(6): mov $0x1,(%rsi)
3ad6(4): mov %rdx,0x28(%rdi)
3ada(1): ret near (%rsp)
3adb(5): nop 0x0(%rax,%rax,1)
3ae0(6): mov $0x2,(%rsi)
3ae6(1): ret near (%rsp)
3ae7(9): nop 0x0(%rax,%rax,1)
3af0(3): mov (%rbx),%rdi
3af3(5): call 0xffffe0ed(%rip)
3af8(3): cmp $0x1,%eax
3afb(2): sbb %eax,%eax
3afd(3): and $0x2,%eax
3b00(3): add $0x2,%eax
3b03(3): mov %eax,0x0(%rbp)
3b06(2): xor %eax,%eax
3b08(2): jmp 0xffffffb0(%rip)

"argv_iter_n_args" :
3b10(4): cmp $0x0,(%rdi)
3b14(2): jz 0xc(%rip)
3b16(4): mov 0x8(%rdi),%rax
3b1a(1): ret near (%rsp)
3b1b(5): nop 0x0(%rax,%rax,1)
3b20(4): mov 0x28(%rdi),%rax
3b24(4): sub 0x20(%rdi),%rax
3b28(4): sar $0x3,%rax
3b2c(1): ret near (%rsp)

"argv_iter_free" :
3b30(1): push %rbx
3b31(4): cmp $0x0,(%rdi)
3b35(3): mov %rdi,%rbx
3b38(2): jz 0xb(%rip)
3b3a(4): mov 0x10(%rdi),%rdi
3b3e(5): call 0xffffe282(%rip)
3b43(3): mov %rbx,%rdi
3b46(1): pop %rbx
3b47(5): jmp 0xffffe279(%rip)

"close_stdout_set_file_name" :
3b50(7): mov %rdi,0x2065f1(%rip)
3b57(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
3b60(7): mov %dil,0x2065d9(%rip)
3b67(1): ret near (%rsp)

"close_stdout" :
3b70(1): push %rbp
3b71(1): push %rbx
3b72(4): sub $0x8,%rsp
3b76(7): mov 0x20652b(%rip),%rdi
3b7d(5): call 0x3293(%rip)
3b82(2): test %eax,%eax
3b84(2): jz 0x18(%rip)
3b86(5): call 0xffffde6a(%rip)
3b8b(7): cmp $0x0,0x2065ae(%rip)
3b92(3): mov %rax,%rbx
3b95(2): jz 0x1e(%rip)
3b97(3): cmp $0x20,(%rax)
3b9a(2): jnz 0x19(%rip)
3b9c(7): mov 0x20653d(%rip),%rdi
3ba3(5): call 0x326d(%rip)
3ba8(2): test %eax,%eax
3baa(2): jnz 0x48(%rip)
3bac(4): add $0x8,%rsp
3bb0(1): pop %rbx
3bb1(1): pop %rbp
3bb2(1): ret near (%rsp)
3bb3(7): lea 0x3cc3(%rip),%rsi
3bba(2): xor %edi,%edi
3bbc(5): mov $0x5,%edx
3bc1(5): call 0xffffdebf(%rip)
3bc6(7): mov 0x20657b(%rip),%rdi
3bcd(3): mov %rax,%rbp
3bd0(3): test %rdi,%rdi
3bd3(2): jz 0x2a(%rip)
3bd5(5): call 0x1e9b(%rip)
3bda(2): mov (%rbx),%esi
3bdc(7): lea 0x3ca6(%rip),%rdx
3be3(3): mov %rax,%rcx
3be6(3): mov %rbp,%r8
3be9(2): xor %edi,%edi
3beb(2): xor %eax,%eax
3bed(5): call 0xffffe0e3(%rip)
3bf2(6): mov 0x206420(%rip),%edi
3bf8(5): call 0xffffde18(%rip)
3bfd(2): mov (%rbx),%esi
3bff(7): lea 0x3c87(%rip),%rdx
3c06(3): mov %rax,%rcx
3c09(2): xor %edi,%edi
3c0b(2): xor %eax,%eax
3c0d(5): call 0xffffe0c3(%rip)
3c12(2): jmp 0xffffffe0(%rip)

"fadvise" :
3c30(3): test %rdi,%rdi
3c33(2): jz 0x1d(%rip)
3c35(1): push %rbx
3c36(2): mov %esi,%ebx
3c38(5): call 0xffffdfc8(%rip)
3c3d(2): mov %ebx,%ecx
3c3f(2): xor %edx,%edx
3c41(2): xor %esi,%esi
3c43(1): pop %rbx
3c44(2): mov %eax,%edi
3c46(5): jmp 0xffffdf1a(%rip)
3c4b(5): nop 0x0(%rax,%rax,1)
3c50(2): REP ret near (%rsp)

"umaxtostr" :
3c60(4): lea 0x14(%rsi),%rcx
3c64(4): mov $0x0,0x14(%rsi)
3c68(a): mov $0x-3689348814741910323,%rsi
3c72(6): nop 0x0(%rax,%rax,1)
3c78(3): mov %rdi,%rax
3c7b(4): sub $0x1,%rcx
3c7f(3): mul %rax,%rsi,%rdx
3c82(4): shr $0x3,%rdx
3c86(4): lea 0x0(%rdx,%rdx,4),%rax
3c8a(3): add %rax,%rax
3c8d(3): sub %rax,%rdi
3c90(3): add $0x30,%edi
3c93(3): test %rdx,%rdx
3c96(3): mov %dil,(%rcx)
3c99(3): mov %rdx,%rdi
3c9c(2): jnz 0xffffffdc(%rip)
3c9e(3): mov %rcx,%rax
3ca1(1): ret near (%rsp)

"mb_width_aux" :
3cb0(1): push %rbx
3cb1(2): mov %edi,%ebx
3cb3(5): call 0xffffdf6d(%rip)
3cb8(2): test %eax,%eax
3cba(2): js 0x6(%rip)
3cbc(1): pop %rbx
3cbd(1): ret near (%rsp)
3cbe(2): nop 
3cc0(2): mov %ebx,%edi
3cc2(5): call 0xffffdd7e(%rip)
3cc7(2): test %eax,%eax
3cc9(3): setz %al
3ccc(3): movzx %al,%eax
3ccf(1): pop %rbx
3cd0(1): ret near (%rsp)

"mb_copy" :
3ce0(1): push %rbp
3ce1(1): push %rbx
3ce2(3): mov %rsi,%rbx
3ce5(4): lea 0x18(%rbx),%rax
3ce9(3): mov %rdi,%rbp
3cec(4): sub $0x8,%rsp
3cf0(3): mov (%rsi),%rsi
3cf3(4): mov 0x8(%rbx),%rdx
3cf7(3): cmp %rax,%rsi
3cfa(2): jz 0x26(%rip)
3cfc(3): mov %rsi,(%rdi)
3cff(4): movzx 0x10(%rbx),%eax
3d03(4): mov %rdx,0x8(%rbp)
3d07(2): test %al,%al
3d09(3): mov %al,0x10(%rbp)
3d0c(2): jz 0x8(%rip)
3d0e(3): mov 0x14(%rbx),%eax
3d11(3): mov %eax,0x14(%rbp)
3d14(4): add $0x8,%rsp
3d18(1): pop %rbx
3d19(1): pop %rbp
3d1a(1): ret near (%rsp)
3d1b(5): nop 0x0(%rax,%rax,1)
3d20(4): lea 0x18(%rdi),%rcx
3d24(3): mov %rcx,%rdi
3d27(5): call 0xffffdec9(%rip)
3d2c(4): mov 0x8(%rbx),%rdx
3d30(4): mov %rax,0x0(%rbp)
3d34(2): jmp 0xffffffcb(%rip)

"is_basic" :
3d40(2): mov %edi,%eax
3d42(7): lea 0x3b57(%rip),%rdx
3d49(2): mov %edi,%ecx
3d4b(3): shr $0x5,%al
3d4e(3): and $0x1f,%ecx
3d51(3): and $0x7,%eax
3d54(3): mov 0x0(%rdx,%rax,4),%eax
3d57(2): shr %cl,%eax
3d59(3): and $0x1,%eax
3d5c(1): ret near (%rsp)

"physmem_total" :
3d60(7): sub $0x98,%rsp
3d67(5): mov $0x55,%edi
3d6c(9): mov $0x28,%rax
3d75(8): mov %rax,0x88(%rsp)
3d7d(2): xor %eax,%eax
3d7f(5): call 0xffffdf91(%rip)
3d84(4): pxor %xmm0,%xmm0
3d88(5): mov $0x1e,%edi
3d8d(5): cvtsi2sd %rax,%xmm0
3d92(6): movsd %xmm0,0x8(%rsp)
3d98(5): call 0xffffdf78(%rip)
3d9d(4): pxor %xmm2,%xmm2
3da1(6): movsd 0x8(%rsp),%xmm0
3da7(4): ucomisd %xmm2,%xmm0
3dab(2): jb 0x35(%rip)
3dad(4): pxor %xmm1,%xmm1
3db1(5): cvtsi2sd %rax,%xmm1
3db6(4): ucomisd %xmm2,%xmm1
3dba(2): jb 0x26(%rip)
3dbc(4): mulsd %xmm1,%xmm0
3dc0(8): mov 0x88(%rsp),%rax
3dc8(9): xor $0x28,%rax
3dd1(2): jnz 0x6a(%rip)
3dd3(7): add $0x98,%rsp
3dda(1): ret near (%rsp)
3ddb(5): nop 0x0(%rax,%rax,1)
3de0(5): lea 0x10(%rsp),%rdi
3de5(5): call 0xffffdf4b(%rip)
3dea(2): test %eax,%eax
3dec(8): movsd 0x3acc(%rip),%xmm0
3df4(2): jnz 0xffffffcc(%rip)
3df6(5): mov 0x30(%rsp),%rax
3dfb(3): test %rax,%rax
3dfe(2): js 0x22(%rip)
3e00(4): pxor %xmm0,%xmm0
3e04(5): cvtsi2sd %rax,%xmm0
3e09(4): mov 0x78(%rsp),%eax
3e0d(4): pxor %xmm1,%xmm1
3e11(5): cvtsi2sd %rax,%xmm1
3e16(2): jmp 0xffffffa6(%rip)
3e18(8): nop 0x0(%rax,%rax,1)
3e20(3): mov %rax,%rdx
3e23(4): pxor %xmm0,%xmm0
3e27(3): shr $0x1,%rdx
3e2a(3): and $0x1,%eax
3e2d(3): or %rax,%rdx
3e30(5): cvtsi2sd %rdx,%xmm0
3e35(4): addsd %xmm0,%xmm0
3e39(2): jmp 0xffffffd0(%rip)
3e3b(5): call 0xffffdc75(%rip)

"physmem_available" :
3e40(7): sub $0x98,%rsp
3e47(5): mov $0x56,%edi
3e4c(9): mov $0x28,%rax
3e55(8): mov %rax,0x88(%rsp)
3e5d(2): xor %eax,%eax
3e5f(5): call 0xffffdeb1(%rip)
3e64(4): pxor %xmm0,%xmm0
3e68(5): mov $0x1e,%edi
3e6d(5): cvtsi2sd %rax,%xmm0
3e72(6): movsd %xmm0,0x8(%rsp)
3e78(5): call 0xffffde98(%rip)
3e7d(4): pxor %xmm2,%xmm2
3e81(6): movsd 0x8(%rsp),%xmm0
3e87(4): ucomisd %xmm2,%xmm0
3e8b(2): jb 0x35(%rip)
3e8d(4): pxor %xmm1,%xmm1
3e91(5): cvtsi2sd %rax,%xmm1
3e96(4): ucomisd %xmm2,%xmm1
3e9a(2): jb 0x26(%rip)
3e9c(4): mulsd %xmm1,%xmm0
3ea0(8): mov 0x88(%rsp),%rax
3ea8(9): xor $0x28,%rax
3eb1(6): jnz 0xaa(%rip)
3eb7(7): add $0x98,%rsp
3ebe(1): ret near (%rsp)
3ebf(1): nop 
3ec0(5): lea 0x10(%rsp),%rdi
3ec5(5): call 0xffffde6b(%rip)
3eca(2): test %eax,%eax
3ecc(2): jnz 0x44(%rip)
3ece(5): mov 0x38(%rsp),%rax
3ed3(3): test %rax,%rax
3ed6(2): js 0x6a(%rip)
3ed8(4): pxor %xmm0,%xmm0
3edc(5): cvtsi2sd %rax,%xmm0
3ee1(5): mov 0x48(%rsp),%rax
3ee6(3): test %rax,%rax
3ee9(2): js 0x37(%rip)
3eeb(4): pxor %xmm1,%xmm1
3eef(5): cvtsi2sd %rax,%xmm1
3ef4(4): mov 0x78(%rsp),%eax
3ef8(4): addsd %xmm1,%xmm0
3efc(4): pxor %xmm1,%xmm1
3f00(5): cvtsi2sd %rax,%xmm1
3f05(2): jmp 0xffffff97(%rip)
3f07(9): nop 0x0(%rax,%rax,1)
3f10(5): call 0xfffffe50(%rip)
3f15(8): mulsd 0x39ab(%rip),%xmm0
3f1d(2): jmp 0xffffff83(%rip)
3f1f(1): nop 
3f20(3): mov %rax,%rdx
3f23(4): pxor %xmm1,%xmm1
3f27(3): shr $0x1,%rdx
3f2a(3): and $0x1,%eax
3f2d(3): or %rax,%rdx
3f30(5): cvtsi2sd %rdx,%xmm1
3f35(4): addsd %xmm1,%xmm1
3f39(2): jmp 0xffffffbb(%rip)
3f3b(5): nop 0x0(%rax,%rax,1)
3f40(3): mov %rax,%rdx
3f43(4): pxor %xmm0,%xmm0
3f47(3): shr $0x1,%rdx
3f4a(3): and $0x1,%eax
3f4d(3): or %rax,%rdx
3f50(5): cvtsi2sd %rdx,%xmm0
3f55(4): addsd %xmm0,%xmm0
3f59(2): jmp 0xffffff88(%rip)
3f5b(5): call 0xffffdb55(%rip)

"set_program_name" :
3f60(3): test %rdi,%rdi
3f63(1): push %rbx
3f64(2): jz 0x79(%rip)
3f66(5): mov $0x2f,%esi
3f6b(3): mov %rdi,%rbx
3f6e(5): call 0xffffdb92(%rip)
3f73(3): test %rax,%rax
3f76(2): jz 0x57(%rip)
3f78(4): lea 0x1(%rax),%r8
3f7c(3): mov %r8,%rdx
3f7f(3): sub %rbx,%rdx
3f82(4): cmp $0x6,%rdx
3f86(2): jle 0x47(%rip)
3f88(4): lea 0xfffffffa(%rax),%rsi
3f8c(7): lea 0x3975(%rip),%rdi
3f93(5): mov $0x7,%ecx
3f98(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3f9a(3): setnbe %dl
3f9d(3): sbb $0x0,%dl
3fa0(2): test %dl,%dl
3fa2(2): jnz 0x2b(%rip)
3fa4(7): lea 0x3965(%rip),%rdi
3fab(5): mov $0x3,%ecx
3fb0(3): mov %r8,%rsi
3fb3(3): mov %r8,%rbx
3fb6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3fb8(3): setnbe %dl
3fbb(3): sbb $0x0,%dl
3fbe(2): test %dl,%dl
3fc0(2): jnz 0xd(%rip)
3fc2(4): lea 0x4(%rax),%rbx
3fc6(7): mov %rbx,0x2060d3(%rip)
3fcd(7): mov %rbx,0x20617c(%rip)
3fd4(7): mov %rbx,0x2060ed(%rip)
3fdb(1): pop %rbx
3fdc(1): ret near (%rsp)
3fdd(7): mov 0x2060fc(%rip),%rcx
3fe4(7): lea 0x38e5(%rip),%rdi
3feb(5): mov $0x37,%edx
3ff0(5): mov $0x1,%esi
3ff5(5): call 0xffffdd6b(%rip)
3ffa(5): call 0xffffd9e6(%rip)

"gettext_quote.part.1" :
4000(1): push %rbp
4001(1): push %rbx
4002(3): mov %rdi,%rbp
4005(2): mov %esi,%ebx
4007(4): sub $0x8,%rsp
400b(5): call 0x2ee5(%rip)
4010(3): movzx (%rax),%edx
4013(3): and $0xdf,%edx
4016(3): cmp $0x55,%dl
4019(2): jz 0x77(%rip)
401b(3): cmp $0x47,%dl
401e(2): jz 0x22(%rip)
4020(7): lea 0x38fc(%rip),%rax
4027(7): lea 0x38f7(%rip),%rdx
402e(3): cmp $0x9,%ebx
4031(4): cmovne %rdx,%rax
4035(4): add $0x8,%rsp
4039(1): pop %rbx
403a(1): pop %rbp
403b(1): ret near (%rsp)
403c(4): nop 0x0(%rax)
4040(4): movzx 0x1(%rax),%edx
4044(3): and $0xdf,%edx
4047(3): cmp $0x42,%dl
404a(2): jnz 0xffffffd6(%rip)
404c(4): cmp $0x31,0x2(%rax)
4050(2): jnz 0xffffffd0(%rip)
4052(4): cmp $0x38,0x3(%rax)
4056(2): jnz 0xffffffca(%rip)
4058(4): cmp $0x30,0x4(%rax)
405c(2): jnz 0xffffffc4(%rip)
405e(4): cmp $0x33,0x5(%rax)
4062(2): jnz 0xffffffbe(%rip)
4064(4): cmp $0x30,0x6(%rax)
4068(2): jnz 0xffffffb8(%rip)
406a(4): cmp $0x0,0x7(%rax)
406e(2): jnz 0xffffffb2(%rip)
4070(4): cmp $0x60,0x0(%rbp)
4074(7): lea 0x38a1(%rip),%rax
407b(7): lea 0x389e(%rip),%rdx
4082(4): cmovne %rdx,%rax
4086(4): add $0x8,%rsp
408a(1): pop %rbx
408b(1): pop %rbp
408c(1): ret near (%rsp)
408d(3): nop (%rax)
4090(4): movzx 0x1(%rax),%edx
4094(3): and $0xdf,%edx
4097(3): cmp $0x54,%dl
409a(2): jnz 0xffffff86(%rip)
409c(4): movzx 0x2(%rax),%edx
40a0(3): and $0xdf,%edx
40a3(3): cmp $0x46,%dl
40a6(6): jnz 0xffffff7a(%rip)
40ac(4): cmp $0x2d,0x3(%rax)
40b0(6): jnz 0xffffff70(%rip)
40b6(4): cmp $0x38,0x4(%rax)
40ba(6): jnz 0xffffff66(%rip)
40c0(4): cmp $0x0,0x5(%rax)
40c4(6): jnz 0xffffff5c(%rip)
40ca(4): cmp $0x60,0x0(%rbp)
40ce(7): lea 0x383f(%rip),%rax
40d5(7): lea 0x383c(%rip),%rdx
40dc(4): cmovne %rdx,%rax
40e0(4): add $0x8,%rsp
40e4(1): pop %rbx
40e5(1): pop %rbp
40e6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
40f0(2): push %r15
40f2(2): push %r14
40f4(3): mov %r8d,%r15d
40f7(2): push %r13
40f9(2): push %r12
40fb(3): mov %rdi,%r14
40fe(1): push %rbp
40ff(1): push %rbx
4100(3): mov %r9d,%ebx
4103(3): mov %rsi,%r13
4106(3): mov %rcx,%rbp
4109(3): and $0x2,%ebx
410c(7): sub $0xb8,%rsp
4113(8): mov 0xf0(%rsp),%rax
411b(5): mov %rdx,0x10(%rsp)
4120(5): mov %r8d,0x8(%rsp)
4125(5): mov %r9d,0x78(%rsp)
412a(5): mov %rax,0x20(%rsp)
412f(8): mov 0xf8(%rsp),%rax
4137(5): mov %rax,0x68(%rsp)
413c(8): mov 0x100(%rsp),%rax
4144(5): mov %rax,0x60(%rsp)
4149(9): mov $0x28,%rax
4152(8): mov %rax,0xa8(%rsp)
415a(2): xor %eax,%eax
415c(5): call 0xffffd934(%rip)
4161(4): cmp $0xa,%r15d
4165(5): mov %rax,0x58(%rsp)
416a(6): jnbe 0x11b5(%rip)
4170(7): lea 0x3809(%rip),%rcx
4177(3): mov %r15d,%edx
417a(4): movsxd 0x0(%rcx,%rdx,4),%rax
417e(3): add %rcx,%rax
4181(2): jmp %rax
4183(5): mov $0x1,0xe(%rsp)
4188(5): mov $0x0,0x7c(%rsp)
418d(3): xor %r12d,%r12d
4190(9): mov $0x0,0x50(%rsp)
4199(5): mov $0x1,0xf(%rsp)
419e(5): mov $0x0,0xd(%rsp)
41a3(7): lea 0x377b(%rip),%rax
41aa(9): mov $0x1,0x18(%rsp)
41b3(3): xor %r15d,%r15d
41b6(8): mov $0x2,0x8(%rsp)
41be(5): mov %rax,0x48(%rsp)
41c3(3): xor %r11d,%r11d
41c6(3): mov %rbp,%rax
41c9(3): mov %r12d,%r8d
41cc(3): mov %r11,%rbp
41cf(3): mov %rax,%r11
41d2(6): nop 0x0(%rax,%rax,1)
41d8(3): cmp %rbp,%r11
41db(4): setnz %r12b
41df(4): cmp $0xffffffff,%r11
41e3(2): jnz 0xf(%rip)
41e5(5): mov 0x10(%rsp),%rax
41ea(4): cmp $0x0,0x0(%rax,%rbp,1)
41ee(4): setnz %r12b
41f2(3): test %r12b,%r12b
41f5(6): jz 0x65b(%rip)
41fb(5): cmp $0x2,0x8(%rsp)
4200(5): mov 0x10(%rsp),%rdi
4205(4): lea 0x0(%rdi,%rbp,1),%r9
4209(3): setnz %al
420c(4): and 0xd(%rsp),%al
4210(3): mov %eax,%r10d
4213(6): jz 0xad(%rip)
4219(5): mov 0x18(%rsp),%rax
421e(3): test %rax,%rax
4221(6): jz 0x42f(%rip)
4227(4): cmp $0xffffffff,%r11
422b(5): lea 0x0(%rbp,%rax,1),%rbx
4230(2): jnz 0x30(%rip)
4232(4): cmp $0x1,%rax
4236(2): jbe 0x2a(%rip)
4238(5): mov %r8b,0x38(%rsp)
423d(5): mov %r10b,0x30(%rsp)
4242(5): mov %r9,0x28(%rsp)
4247(5): call 0xffffd859(%rip)
424c(6): movzx 0x38(%rsp),%r8d
4252(6): movzx 0x30(%rsp),%r10d
4258(3): mov %rax,%r11
425b(5): mov 0x28(%rsp),%r9
4260(3): cmp %r11,%rbx
4263(5): mov %r10b,0x28(%rsp)
4268(6): jnbe 0x5b8(%rip)
426e(5): mov 0x18(%rsp),%rdx
4273(5): mov 0x48(%rsp),%rsi
4278(3): mov %r9,%rdi
427b(5): mov %r11,0x40(%rsp)
4280(5): mov %r8b,0x38(%rsp)
4285(5): mov %r9,0x30(%rsp)
428a(5): call 0xffffd906(%rip)
428f(2): test %eax,%eax
4291(5): mov 0x30(%rsp),%r9
4296(6): movzx 0x38(%rsp),%r8d
429c(5): mov 0x40(%rsp),%r11
42a1(6): jnz 0x57f(%rip)
42a7(5): cmp $0x0,0xf(%rsp)
42ac(6): movzx 0x28(%rsp),%r10d
42b2(6): jnz 0xf83(%rip)
42b8(8): nop 0x0(%rax,%rax,1)
42c0(4): movzx (%r9),%ebx
42c4(3): cmp $0x7e,%bl
42c7(6): jnbe 0x321(%rip)
42cd(7): lea 0x36d8(%rip),%rcx
42d4(3): movzx %bl,%edx
42d7(4): movsxd 0x0(%rcx,%rdx,4),%rax
42db(3): add %rcx,%rax
42de(2): jmp %rax
42e0(3): xor %r10d,%r10d
42e3(4): cmp $0x1,%r11
42e7(3): setnz %al
42ea(4): cmp $0xffffffff,%r11
42ee(2): jnz 0xe(%rip)
42f0(5): mov 0x10(%rsp),%rax
42f5(4): cmp $0x0,0x1(%rax)
42f9(3): setnz %al
42fc(5): cmp $0x2,0x8(%rsp)
4301(3): setz %dl
4304(2): test %al,%al
4306(6): jz 0x252(%rip)
430c(3): xor %r12d,%r12d
430f(2): xor %eax,%eax
4311(7): nop 0x0(%rax)
4318(5): cmp $0x1,0xd(%rsp)
431d(6): jnz 0x115(%rip)
4323(2): test %dl,%dl
4325(6): jnz 0x10d(%rip)
432b(5): mov 0x20(%rsp),%rsi
4330(3): test %rsi,%rsi
4333(2): jz 0x16(%rip)
4335(2): mov %ebx,%edx
4337(3): shr $0x5,%dl
433a(3): movzx %dl,%edx
433d(3): mov 0x0(%rsi,%rdx,4),%edx
4340(3): bt %ebx,%edx
4343(6): jb 0x150(%rip)
4349(3): test %r10b,%r10b
434c(6): jnz 0x147(%rip)
4352(3): xor $0x1,%eax
4355(4): add $0x1,%rbp
4359(3): and %r8d,%eax
435c(2): test %al,%al
435e(2): jz 0x22(%rip)
4360(3): cmp %r15,%r13
4363(2): jbe 0x7(%rip)
4365(5): mov $0x27,0x0(%r14,%r15,1)
436a(4): lea 0x1(%r15),%rax
436e(3): cmp %rax,%r13
4371(2): jbe 0x8(%rip)
4373(6): mov $0x27,0x1(%r14,%r15,1)
4379(4): add $0x2,%r15
437d(3): xor %r8d,%r8d
4380(3): cmp %r13,%r15
4383(2): jnb 0x6(%rip)
4385(4): mov %bl,0x0(%r14,%r15,1)
4389(5): movzx 0xe(%rsp),%edi
438e(4): add $0x1,%r15
4392(5): mov $0x0,%eax
4397(3): test %r12b,%r12b
439a(3): cmove %eax,%edi
439d(5): mov %dil,0xe(%rsp)
43a2(5): jmp 0xfffffe36(%rip)
43a7(9): nop 0x0(%rax,%rax,1)
43b0(3): xor %r10d,%r10d
43b3(4): mov 0x8(%rsp),%eax
43b7(3): cmp $0x2,%eax
43ba(6): jz 0x5be(%rip)
43c0(3): cmp $0x5,%eax
43c3(6): jz 0x575(%rip)
43c9(3): cmp $0x2,%eax
43cc(5): mov $0x3f,%ebx
43d1(3): setz %dl
43d4(3): xor %r12d,%r12d
43d7(2): xor %eax,%eax
43d9(5): jmp 0xffffff3f(%rip)
43de(2): nop 
43e0(3): xor %r10d,%r10d
43e3(5): cmp $0x2,0x8(%rsp)
43e8(6): jz 0x508(%rip)
43ee(5): mov %r12b,0x7c(%rsp)
43f3(2): xor %edx,%edx
43f5(2): xor %eax,%eax
43f7(5): mov $0x27,%ebx
43fc(5): jmp 0xffffff1c(%rip)
4401(7): nop 0x0(%rax)
4408(5): mov $0x9,%edx
440d(5): mov $0x74,%ebx
4412(5): cmp $0x2,0x8(%rsp)
4417(3): setz %al
441a(4): and 0xf(%rsp),%al
441e(6): jnz 0x150(%rip)
4424(5): cmp $0x0,0xd(%rsp)
4429(2): jnz 0x67(%rip)
442b(2): mov %edx,%ebx
442d(3): xor %r12d,%r12d
4430(2): xor %eax,%eax
4432(5): cmp $0x0,0xf(%rsp)
4437(6): jnz 0xfffffef4(%rip)
443d(5): jmp 0xffffff0c(%rip)
4442(6): nop 0x0(%rax,%rax,1)
4448(5): mov $0x8,%edx
444d(5): mov $0x62,%ebx
4452(2): jmp 0xffffffd2(%rip)
4454(4): nop 0x0(%rax)
4458(5): cmp $0x2,0x8(%rsp)
445d(6): jz 0x3d3(%rip)
4463(5): cmp $0x0,0xd(%rsp)
4468(6): jz 0x218(%rip)
446e(5): cmp $0x0,0xf(%rsp)
4473(6): jz 0x20d(%rip)
4479(6): cmp $0x0,0x18(%rsp)
447f(6): jnz 0x3bc(%rip)
4485(5): mov $0x5c,%ebx
448a(6): nop 0x0(%rax,%rax,1)
4490(3): xor %r12d,%r12d
4493(5): cmp $0x2,0x8(%rsp)
4498(3): setz %dl
449b(5): cmp $0x0,0xf(%rsp)
44a0(2): mov %edx,%eax
44a2(6): jnz 0x856(%rip)
44a8(3): mov %r8d,%eax
44ab(3): xor $0x1,%eax
44ae(2): and %dl,%al
44b0(2): jz 0x31(%rip)
44b2(3): cmp %r15,%r13
44b5(2): jbe 0x7(%rip)
44b7(5): mov $0x27,0x0(%r14,%r15,1)
44bc(4): lea 0x1(%r15),%rdx
44c0(3): cmp %rdx,%r13
44c3(2): jbe 0x8(%rip)
44c5(6): mov $0x24,0x1(%r14,%r15,1)
44cb(4): lea 0x2(%r15),%rdx
44cf(3): cmp %rdx,%r13
44d2(2): jbe 0x8(%rip)
44d4(6): mov $0x27,0x2(%r14,%r15,1)
44da(4): add $0x3,%r15
44de(3): mov %eax,%r8d
44e1(3): cmp %r15,%r13
44e4(2): jbe 0x7(%rip)
44e6(5): mov $0x5c,0x0(%r14,%r15,1)
44eb(4): add $0x1,%r15
44ef(4): add $0x1,%rbp
44f3(5): jmp 0xfffffe8d(%rip)
44f8(8): nop 0x0(%rax,%rax,1)
4500(5): cmp $0x0,0xd(%rsp)
4505(6): jnz 0x1ce(%rip)
450b(2): xor %edx,%edx
450d(5): test $0x1,0x78(%rsp)
4512(6): jz 0xffffff19(%rip)
4518(4): add $0x1,%rbp
451c(5): jmp 0xfffffcbc(%rip)
4521(7): nop 0x0(%rax)
4528(5): cmp $0x2,0x8(%rsp)
452d(3): setz %dl
4530(2): xor %eax,%eax
4532(5): jmp 0xfffffde6(%rip)
4537(9): nop 0x0(%rax,%rax,1)
4540(5): mov $0x7,%edx
4545(5): mov $0x61,%ebx
454a(5): jmp 0xfffffeda(%rip)
454f(1): nop 
4550(5): cmp $0x2,0x8(%rsp)
4555(3): setz %dl
4558(3): test %rbp,%rbp
455b(6): jnz 0xfffffdb1(%rip)
4561(5): movzx 0xf(%rsp),%eax
4566(2): and %dl,%al
4568(6): jz 0xfffffdb0(%rip)
456e(3): mov %r11,%rbp
4571(8): mov $0x2,0x8(%rsp)
4579(5): jmp 0x700(%rip)
457e(2): nop 
4580(5): cmp $0x2,0x8(%rsp)
4585(3): setz %dl
4588(3): xor %r12d,%r12d
458b(2): jmp 0xffffffd6(%rip)
458d(3): nop (%rax)
4590(5): cmp $0x2,0x8(%rsp)
4595(5): mov $0x20,%ebx
459a(3): setz %dl
459d(2): jmp 0xffffffc4(%rip)
459f(1): nop 
45a0(5): mov $0xd,%edx
45a5(5): mov $0x72,%ebx
45aa(5): jmp 0xfffffe68(%rip)
45af(1): nop 
45b0(5): mov $0xc,%edx
45b5(5): mov $0x66,%ebx
45ba(5): jmp 0xfffffe6a(%rip)
45bf(1): nop 
45c0(5): mov $0xb,%edx
45c5(5): mov $0x76,%ebx
45ca(5): jmp 0xfffffe5a(%rip)
45cf(1): nop 
45d0(5): mov $0xa,%edx
45d5(5): mov $0x6e,%ebx
45da(5): jmp 0xfffffe38(%rip)
45df(1): nop 
45e0(3): xor %r10d,%r10d
45e3(5): nop 0x0(%rax,%rax,1)
45e8(6): cmp $0x1,0x58(%rsp)
45ee(6): jnz 0x3aa(%rip)
45f4(5): mov %r11,0x38(%rsp)
45f9(5): mov %r8b,0x30(%rsp)
45fe(5): mov %r10b,0x28(%rsp)
4603(5): call 0xffffd7ad(%rip)
4608(3): mov (%rax),%rcx
460b(3): movzx %bl,%edx
460e(6): movzx 0x28(%rsp),%r10d
4614(6): movzx 0x30(%rsp),%r8d
461a(5): mov 0x38(%rsp),%r11
461f(5): mov $0x1,%edi
4624(4): movzx 0x0(%rcx,%rdx,2),%eax
4628(4): and $0x4000,%ax
462c(4): setnz %r12b
4630(3): setz %al
4633(4): and 0xd(%rsp),%al
4637(2): test %al,%al
4639(6): jnz 0x998(%rip)
463f(5): cmp $0x2,0x8(%rsp)
4644(3): setz %dl
4647(5): jmp 0xfffffcd1(%rip)
464c(4): nop 0x0(%rax)
4650(4): movzx (%r9),%ebx
4654(3): cmp $0x7e,%bl
4657(2): jnbe 0xffffff89(%rip)
4659(7): lea 0x3548(%rip),%rcx
4660(3): movzx %bl,%edx
4663(4): movsxd 0x0(%rcx,%rdx,4),%rax
4667(3): add %rcx,%rax
466a(2): jmp %rax
466c(4): nop 0x0(%rax)
4670(3): xor %r10d,%r10d
4673(5): cmp $0x0,0xd(%rsp)
4678(6): jnz 0xfffffdf6(%rip)
467e(2): nop 
4680(5): mov $0x5c,%edx
4685(5): mov $0x5c,%ebx
468a(5): jmp 0xfffffd9a(%rip)
468f(1): nop 
4690(5): mov $0xc,%edx
4695(3): xor %r10d,%r10d
4698(5): mov $0x66,%ebx
469d(5): jmp 0xfffffd87(%rip)
46a2(6): nop 0x0(%rax,%rax,1)
46a8(5): mov $0xa,%edx
46ad(3): xor %r10d,%r10d
46b0(5): mov $0x6e,%ebx
46b5(5): jmp 0xfffffd5d(%rip)
46ba(6): nop 0x0(%rax,%rax,1)
46c0(5): mov $0x61,%ebx
46c5(5): jmp 0xfffffdcb(%rip)
46ca(6): nop 0x0(%rax,%rax,1)
46d0(3): xor %r10d,%r10d
46d3(5): cmp $0x2,0x8(%rsp)
46d8(3): setz %dl
46db(5): cmp $0x0,0xf(%rsp)
46e0(6): jnz 0xb9a(%rip)
46e6(3): mov %r8d,%eax
46e9(3): mov %r15,%rcx
46ec(3): xor $0x1,%eax
46ef(2): and %dl,%al
46f1(2): jz 0x2f(%rip)
46f3(3): cmp %r15,%r13
46f6(2): jbe 0x7(%rip)
46f8(5): mov $0x27,0x0(%r14,%r15,1)
46fd(4): lea 0x1(%r15),%rcx
4701(3): cmp %rcx,%r13
4704(2): jbe 0x8(%rip)
4706(6): mov $0x24,0x1(%r14,%r15,1)
470c(4): lea 0x2(%r15),%rcx
4710(3): cmp %rcx,%r13
4713(6): jnbe 0x636(%rip)
4719(4): lea 0x3(%r15),%rcx
471d(3): mov %eax,%r8d
4720(3): cmp %rcx,%r13
4723(2): jbe 0x7(%rip)
4725(5): mov $0x5c,0x0(%r14,%rcx,1)
472a(5): cmp $0x2,0x8(%rsp)
472f(4): lea 0x1(%rcx),%r15
4733(6): jz 0x606(%rip)
4739(4): lea 0x1(%rbp),%rax
473d(3): cmp %r11,%rax
4740(2): jnb 0x1b(%rip)
4742(5): mov 0x10(%rsp),%rax
4747(5): movzx 0x1(%rax,%rbp,1),%eax
474c(4): mov %al,0x28(%rsp)
4750(3): sub $0x30,%eax
4753(2): cmp $0x9,%al
4755(6): jbe 0x834(%rip)
475b(3): mov %r12d,%eax
475e(5): mov $0x30,%ebx
4763(3): xor %r12d,%r12d
4766(5): jmp 0xfffffbb2(%rip)
476b(5): nop 0x0(%rax,%rax,1)
4770(5): cmp $0x2,0x8(%rsp)
4775(3): mov %r10d,%r12d
4778(3): setz %dl
477b(3): xor %r10d,%r10d
477e(2): xor %eax,%eax
4780(5): jmp 0xfffffb98(%rip)
4785(3): nop (%rax)
4788(5): cmp $0x2,0x8(%rsp)
478d(3): setz %dl
4790(3): xor %r10d,%r10d
4793(5): jmp 0xfffffdc5(%rip)
4798(8): nop 0x0(%rax,%rax,1)
47a0(5): cmp $0x2,0x8(%rsp)
47a5(3): setz %dl
47a8(3): xor %r10d,%r10d
47ab(3): xor %r12d,%r12d
47ae(5): jmp 0xfffffdb3(%rip)
47b3(5): nop 0x0(%rax,%rax,1)
47b8(5): cmp $0x2,0x8(%rsp)
47bd(3): mov %r10d,%r12d
47c0(5): mov $0x20,%ebx
47c5(3): setz %dl
47c8(3): xor %r10d,%r10d
47cb(5): jmp 0xfffffd96(%rip)
47d0(5): mov $0xd,%edx
47d5(3): xor %r10d,%r10d
47d8(5): mov $0x72,%ebx
47dd(5): jmp 0xfffffc35(%rip)
47e2(6): nop 0x0(%rax,%rax,1)
47e8(5): mov $0x76,%ebx
47ed(5): jmp 0xfffffca3(%rip)
47f2(6): nop 0x0(%rax,%rax,1)
47f8(5): mov $0x9,%edx
47fd(3): xor %r10d,%r10d
4800(5): mov $0x74,%ebx
4805(5): jmp 0xfffffc0d(%rip)
480a(6): nop 0x0(%rax,%rax,1)
4810(5): mov $0x62,%ebx
4815(5): jmp 0xfffffc7b(%rip)
481a(6): nop 0x0(%rax,%rax,1)
4820(3): xor %r10d,%r10d
4823(5): jmp 0xfffffa9d(%rip)
4828(8): nop 0x0(%rax,%rax,1)
4830(5): cmp $0x0,0xf(%rsp)
4835(6): jnz 0x96b(%rip)
483b(4): add $0x1,%rbp
483f(3): mov %r8d,%eax
4842(3): xor %r12d,%r12d
4845(5): mov $0x5c,%ebx
484a(5): jmp 0xfffffb12(%rip)
484f(1): nop 
4850(5): cmp $0x2,0x8(%rsp)
4855(5): movzx 0xf(%rsp),%ebx
485a(3): mov %r8d,%r12d
485d(3): mov %r11,%rbp
4860(3): setz %dl
4863(2): mov %ebx,%eax
4865(3): test %r15,%r15
4868(3): setz %cl
486b(2): and %edx,%eax
486d(2): and %cl,%al
486f(6): jnz 0xa67(%rip)
4875(2): mov %ebx,%eax
4877(3): xor $0x1,%eax
487a(2): and %al,%dl
487c(6): jz 0x970(%rip)
4882(5): cmp $0x0,0x7c(%rsp)
4887(6): jz 0x963(%rip)
488d(5): cmp $0x0,0xe(%rsp)
4892(6): jnz 0x9fb(%rip)
4898(3): test %r13,%r13
489b(3): setz %al
489e(6): cmp $0x0,0x50(%rsp)
48a4(3): setnz %dl
48a7(2): and %dl,%al
48a9(6): jz 0xa23(%rip)
48af(5): mov 0x50(%rsp),%r13
48b4(7): lea 0x306a(%rip),%rbx
48bb(4): mov $0x27,(%r14)
48bf(8): mov $0x2,0x8(%rsp)
48c7(6): mov $0x1,%r15d
48cd(9): mov $0x1,0x18(%rsp)
48d6(5): mov $0x0,0xf(%rsp)
48db(5): mov %rbx,0x48(%rsp)
48e0(4): mov %al,0x7c(%rsp)
48e4(5): jmp 0xfffff8df(%rip)
48e9(7): nop 0x0(%rax)
48f0(5): cmp $0x0,0xf(%rsp)
48f5(6): jnz 0x8ab(%rip)
48fb(3): test %r13,%r13
48fe(6): jz 0x402(%rip)
4904(2): xor %edx,%edx
4906(6): cmp $0x0,0x50(%rsp)
490c(6): jnz 0x3f4(%rip)
4912(5): mov %r13,0x50(%rsp)
4917(4): add $0x3,%r15
491b(2): xor %eax,%eax
491d(5): mov %r12b,0x7c(%rsp)
4922(3): xor %r8d,%r8d
4925(3): mov %rdx,%r13
4928(5): mov $0x27,%ebx
492d(5): jmp 0xfffffa1c(%rip)
4932(6): nop 0x0(%rax,%rax,1)
4938(5): test $0x4,0x78(%rsp)
493d(2): jz 0x23(%rip)
493f(4): lea 0x2(%rbp),%rcx
4943(3): cmp %r11,%rcx
4946(2): jnb 0x1a(%rip)
4948(5): mov 0x10(%rsp),%rax
494d(5): cmp $0x3f,0x1(%rax,%rbp,1)
4952(6): jz 0x790(%rip)
4958(8): nop 0x0(%rax,%rax,1)
4960(2): xor %edx,%edx
4962(3): xor %r12d,%r12d
4965(2): xor %eax,%eax
4967(5): mov $0x3f,%ebx
496c(5): jmp 0xfffff9ac(%rip)
4971(7): nop 0x0(%rax)
4978(5): cmp $0x0,0xf(%rsp)
497d(6): jnz 0x823(%rip)
4983(3): xor %r12d,%r12d
4986(2): xor %eax,%eax
4988(5): mov $0x3f,%ebx
498d(5): jmp 0xfffff9bc(%rip)
4992(6): nop 0x0(%rax,%rax,1)
4998(8): lea 0xa0(%rsp),%rax
49a0(4): cmp $0xffffffff,%r11
49a4(c): mov $0x0,0xa0(%rsp)
49b0(5): mov %rax,0x28(%rsp)
49b5(2): jnz 0x2f(%rip)
49b7(5): mov 0x10(%rsp),%rdi
49bc(5): mov %r8b,0x40(%rsp)
49c1(5): mov %r10b,0x38(%rsp)
49c6(5): mov %r9,0x30(%rsp)
49cb(5): call 0xffffd0d5(%rip)
49d0(6): movzx 0x40(%rsp),%r8d
49d6(6): movzx 0x38(%rsp),%r10d
49dc(3): mov %rax,%r11
49df(5): mov 0x30(%rsp),%r9
49e4(8): lea 0x9c(%rsp),%rax
49ec(2): xor %ecx,%ecx
49ee(4): mov %bl,0x7e(%rsp)
49f2(5): mov %r8b,0x7d(%rsp)
49f7(3): mov %rcx,%rbx
49fa(8): mov %r9,0x88(%rsp)
4a02(5): mov %rax,0x38(%rsp)
4a07(5): mov %r10b,0x7f(%rsp)
4a0c(8): mov %r15,0x80(%rsp)
4a14(5): mov %r14,0x40(%rsp)
4a19(5): mov %r13,0x70(%rsp)
4a1e(5): mov %r11,0x30(%rsp)
4a23(5): mov 0x10(%rsp),%rax
4a28(5): lea 0x0(%rbp,%rbx,1),%r14
4a2d(5): mov 0x30(%rsp),%rdx
4a32(5): mov 0x28(%rsp),%rcx
4a37(5): mov 0x38(%rsp),%rdi
4a3c(4): lea 0x0(%rax,%r14,1),%r13
4a40(3): sub %r14,%rdx
4a43(3): mov %r13,%rsi
4a46(5): call 0x201a(%rip)
4a4b(3): test %rax,%rax
4a4e(3): mov %rax,%r15
4a51(2): jz 0x50(%rip)
4a53(4): cmp $0xffffffff,%rax
4a57(6): jz 0x61e(%rip)
4a5d(4): cmp $0xfffffffe,%rax
4a61(6): jz 0x5a0(%rip)
4a67(5): cmp $0x2,0x8(%rsp)
4a6c(3): setz %al
4a6f(4): and 0xf(%rsp),%al
4a73(6): jnz 0x19d(%rip)
4a79(7): mov 0x9c(%rsp),%edi
4a80(5): call 0xffffd310(%rip)
4a85(5): mov 0x28(%rsp),%rdi
4a8a(2): test %eax,%eax
4a8c(5): mov $0x0,%eax
4a91(4): cmove %eax,%r12d
4a95(3): add %r15,%rbx
4a98(5): call 0xffffd2e8(%rip)
4a9d(2): test %eax,%eax
4a9f(2): jz 0xffffff84(%rip)
4aa1(3): mov %r12d,%edx
4aa4(3): mov %rbx,%rdi
4aa7(6): movzx 0x7d(%rsp),%r8d
4aad(3): xor $0x1,%edx
4ab0(5): movzx 0x7e(%rsp),%ebx
4ab5(6): movzx 0x7f(%rsp),%r10d
4abb(4): and 0xd(%rsp),%dl
4abf(8): mov 0x80(%rsp),%r15
4ac7(5): mov 0x40(%rsp),%r14
4acc(5): mov 0x70(%rsp),%r13
4ad1(5): mov 0x30(%rsp),%r11
4ad6(4): cmp $0x1,%rdi
4ada(6): jbe 0x601(%rip)
4ae0(3): mov %rdi,%rcx
4ae3(2): xor %esi,%esi
4ae5(6): movzx 0xf(%rsp),%r9d
4aeb(3): add %rbp,%rcx
4aee(5): mov 0x10(%rsp),%rdi
4af3(5): jmp 0xbb(%rip)
4af8(8): nop 0x0(%rax,%rax,1)
4b00(5): cmp $0x2,0x8(%rsp)
4b05(3): setz %al
4b08(3): test %r9b,%r9b
4b0b(6): jnz 0x4b5(%rip)
4b11(3): mov %r8d,%esi
4b14(3): xor $0x1,%esi
4b17(3): and %sil,%al
4b1a(2): jz 0x31(%rip)
4b1c(3): cmp %r15,%r13
4b1f(2): jbe 0x7(%rip)
4b21(5): mov $0x27,0x0(%r14,%r15,1)
4b26(4): lea 0x1(%r15),%rsi
4b2a(3): cmp %rsi,%r13
4b2d(2): jbe 0x8(%rip)
4b2f(6): mov $0x24,0x1(%r14,%r15,1)
4b35(4): lea 0x2(%r15),%rsi
4b39(3): cmp %rsi,%r13
4b3c(2): jbe 0x8(%rip)
4b3e(6): mov $0x27,0x2(%r14,%r15,1)
4b44(4): add $0x3,%r15
4b48(3): mov %eax,%r8d
4b4b(3): cmp %r15,%r13
4b4e(2): jbe 0x7(%rip)
4b50(5): mov $0x5c,0x0(%r14,%r15,1)
4b55(4): lea 0x1(%r15),%rax
4b59(3): cmp %rax,%r13
4b5c(2): jbe 0xf(%rip)
4b5e(2): mov %ebx,%eax
4b60(3): shr $0x6,%al
4b63(3): add $0x30,%eax
4b66(5): mov %al,0x1(%r14,%r15,1)
4b6b(4): lea 0x2(%r15),%rax
4b6f(3): cmp %rax,%r13
4b72(2): jbe 0x12(%rip)
4b74(2): mov %ebx,%eax
4b76(3): shr $0x3,%al
4b79(3): and $0x7,%eax
4b7c(3): add $0x30,%eax
4b7f(5): mov %al,0x2(%r14,%r15,1)
4b84(3): and $0x7,%ebx
4b87(4): add $0x1,%rbp
4b8b(4): add $0x3,%r15
4b8f(3): add $0x30,%ebx
4b92(3): cmp %rcx,%rbp
4b95(6): jnb 0xfffff7eb(%rip)
4b9b(2): mov %edx,%esi
4b9d(3): cmp %r15,%r13
4ba0(2): jbe 0x6(%rip)
4ba2(4): mov %bl,0x0(%r14,%r15,1)
4ba6(4): movzx 0x0(%rdi,%rbp,1),%ebx
4baa(4): add $0x1,%r15
4bae(2): test %dl,%dl
4bb0(6): jnz 0xffffff50(%rip)
4bb6(2): mov %esi,%eax
4bb8(3): xor $0x1,%eax
4bbb(3): and %r8d,%eax
4bbe(3): test %r10b,%r10b
4bc1(2): jz 0x10(%rip)
4bc3(3): cmp %r15,%r13
4bc6(2): jbe 0x7(%rip)
4bc8(5): mov $0x5c,0x0(%r14,%r15,1)
4bcd(4): add $0x1,%r15
4bd1(4): add $0x1,%rbp
4bd5(3): cmp %rcx,%rbp
4bd8(6): jnb 0xfffff784(%rip)
4bde(2): test %al,%al
4be0(6): jz 0x3fe(%rip)
4be6(3): cmp %r15,%r13
4be9(2): jbe 0x7(%rip)
4beb(5): mov $0x27,0x0(%r14,%r15,1)
4bf0(4): lea 0x1(%r15),%rax
4bf4(3): cmp %rax,%r13
4bf7(2): jbe 0x8(%rip)
4bf9(6): mov $0x27,0x1(%r14,%r15,1)
4bff(4): add $0x2,%r15
4c03(3): xor %r10d,%r10d
4c06(3): xor %r8d,%r8d
4c09(2): jmp 0xffffff94(%rip)
4c0b(5): nop 0x0(%rax,%rax,1)
4c10(4): cmp $0x1,%r15
4c14(6): jz 0xfffffe65(%rip)
4c1a(5): mov 0x10(%rsp),%rdi
4c1f(4): lea 0x0(%rdi,%r15,1),%rcx
4c23(5): lea 0x1(%rdi,%r14,1),%rdx
4c28(4): lea 0x0(%rcx,%r14,1),%r8
4c2c(2): jmp 0x11(%rip)
4c2e(2): nop 
4c30(4): add $0x1,%rdx
4c34(3): cmp %rdx,%r8
4c37(6): jz 0xfffffe42(%rip)
4c3d(3): movzx (%rdx),%ecx
4c40(3): sub $0x5b,%ecx
4c43(3): cmp $0x21,%cl
4c46(2): jnbe 0xffffffea(%rip)
4c48(5): mov $0x1,%esi
4c4d(3): shl/sal %cl,%rsi
4c50(3): mov %rsi,%rcx
4c53(a): mov $0x8589934635,%rsi
4c5d(3): test %rsi,%rcx
4c60(2): jz 0xffffffd0(%rip)
4c62(5): mov 0x40(%rsp),%r14
4c67(5): mov 0x70(%rsp),%r13
4c6c(5): mov 0x30(%rsp),%rbp
4c71(8): mov $0x2,0x8(%rsp)
4c79(5): cmp $0x0,0xd(%rsp)
4c7e(2): jz 0x12(%rip)
4c80(2): test %al,%al
4c82(5): mov $0x4,%eax
4c87(5): cmove 0x8(%rsp),%eax
4c8c(4): mov %eax,0x8(%rsp)
4c90(4): sub $0x8,%rsp
4c94(3): mov %rbp,%rcx
4c97(3): mov %r13,%rsi
4c9a(4): push 0x68(%rsp)
4c9e(4): push 0x78(%rsp)
4ca2(3): mov %r14,%rdi
4ca5(2): push $0x0
4ca7(8): mov 0x98(%rsp),%r9d
4caf(5): mov 0x28(%rsp),%r8d
4cb4(5): mov 0x30(%rsp),%rdx
4cb9(4): and $0xfd,%r9d
4cbd(5): call 0xfffff433(%rip)
4cc2(4): add $0x20,%rsp
4cc6(3): mov %rax,%r15
4cc9(8): mov 0xa8(%rsp),%rbx
4cd1(9): xor $0x28,%rbx
4cda(3): mov %r15,%rax
4cdd(6): jnz 0x606(%rip)
4ce3(7): add $0xb8,%rsp
4cea(1): pop %rbx
4ceb(1): pop %rbp
4cec(2): pop %r12
4cee(2): pop %r13
4cf0(2): pop %r14
4cf2(2): pop %r15
4cf4(1): ret near (%rsp)
4cf5(3): nop (%rax)
4cf8(3): mov %r11,%rbp
4cfb(5): jmp 0xffffff7e(%rip)
4d00(3): cmp %r15,%r13
4d03(2): jbe 0x7(%rip)
4d05(5): mov $0x27,0x0(%r14,%r15,1)
4d0a(4): lea 0x1(%r15),%rax
4d0e(3): cmp %rax,%r13
4d11(2): jbe 0x8(%rip)
4d13(6): mov $0x5c,0x1(%r14,%r15,1)
4d19(4): lea 0x2(%r15),%rax
4d1d(3): cmp %rax,%r13
4d20(6): jbe 0x5f2(%rip)
4d26(3): mov %r13,%rdx
4d29(6): mov $0x27,0x2(%r14,%r15,1)
4d2f(5): mov 0x50(%rsp),%r13
4d34(5): jmp 0xfffffbde(%rip)
4d39(3): mov %r12d,%eax
4d3c(5): mov $0x30,%ebx
4d41(3): xor %r12d,%r12d
4d44(5): jmp 0xfffff605(%rip)
4d49(6): mov $0x27,0x2(%r14,%r15,1)
4d4f(5): jmp 0xfffff9ca(%rip)
4d54(2): test %ebx,%ebx
4d56(6): jnz 0xfffff42d(%rip)
4d5c(5): mov $0x1,0xd(%rsp)
4d61(3): test %r13,%r13
4d64(6): jnz 0x596(%rip)
4d6a(7): lea 0x2bb4(%rip),%rax
4d71(9): mov $0x0,0x50(%rsp)
4d7a(5): mov $0x1,0xe(%rsp)
4d7f(5): mov $0x0,0x7c(%rsp)
4d84(3): xor %r12d,%r12d
4d87(5): mov $0x0,0xf(%rsp)
4d8c(9): mov $0x1,0x18(%rsp)
4d95(5): mov %rax,0x48(%rsp)
4d9a(6): mov $0x1,%r15d
4da0(8): mov $0x2,0x8(%rsp)
4da8(5): jmp 0xfffff41b(%rip)
4dad(3): nop (%rax)
4db0(2): test %ebx,%ebx
4db2(6): jnz 0x3fb(%rip)
4db8(3): test %r13,%r13
4dbb(6): jz 0x22b(%rip)
4dc1(4): mov $0x22,(%r14)
4dc5(5): mov $0x1,0xe(%rsp)
4dca(3): xor %r12d,%r12d
4dcd(5): mov $0x0,0x7c(%rsp)
4dd2(9): mov $0x0,0x50(%rsp)
4ddb(7): lea 0x2b41(%rip),%rax
4de2(5): mov $0x0,0xf(%rsp)
4de7(5): mov $0x1,0xd(%rsp)
4dec(9): mov $0x1,0x18(%rsp)
4df5(6): mov $0x1,%r15d
4dfb(5): mov %rax,0x48(%rsp)
4e00(5): jmp 0xfffff3c3(%rip)
4e05(7): lea 0x2b17(%rip),%rax
4e0c(5): mov $0x1,0xe(%rsp)
4e11(5): mov $0x0,0x7c(%rsp)
4e16(3): xor %r12d,%r12d
4e19(9): mov $0x0,0x50(%rsp)
4e22(5): mov $0x1,0xf(%rsp)
4e27(5): mov $0x1,0xd(%rsp)
4e2c(9): mov $0x1,0x18(%rsp)
4e35(3): xor %r15d,%r15d
4e38(5): mov %rax,0x48(%rsp)
4e3d(8): mov $0x5,0x8(%rsp)
4e45(5): jmp 0xfffff37e(%rip)
4e4a(5): mov $0x1,0xe(%rsp)
4e4f(5): mov $0x0,0x7c(%rsp)
4e54(3): xor %r12d,%r12d
4e57(9): mov $0x0,0x50(%rsp)
4e60(5): mov $0x0,0xf(%rsp)
4e65(3): xor %r15d,%r15d
4e68(5): mov $0x1,0xd(%rsp)
4e6d(9): mov $0x0,0x18(%rsp)
4e76(9): mov $0x0,0x48(%rsp)
4e7f(5): jmp 0xfffff344(%rip)
4e84(5): cmp $0xa,0x8(%rsp)
4e89(2): jz 0x58(%rip)
4e8b(7): lea 0x2a95(%rip),%rsi
4e92(2): xor %edi,%edi
4e94(5): mov $0x5,%edx
4e99(5): call 0xffffcbe7(%rip)
4e9e(3): mov %rax,%rcx
4ea1(5): mov %rax,0x68(%rsp)
4ea6(7): lea 0x2a7a(%rip),%rax
4ead(3): cmp %rax,%rcx
4eb0(6): jz 0x39e(%rip)
4eb6(7): lea 0x2a68(%rip),%rsi
4ebd(2): xor %edi,%edi
4ebf(5): mov $0x5,%edx
4ec4(5): call 0xffffcbbc(%rip)
4ec9(3): mov %rax,%rcx
4ecc(5): mov %rax,0x60(%rsp)
4ed1(7): lea 0x2a4d(%rip),%rax
4ed8(3): cmp %rax,%rcx
4edb(6): jz 0x389(%rip)
4ee1(3): xor %r15d,%r15d
4ee4(2): test %ebx,%ebx
4ee6(6): jz 0x1c7(%rip)
4eec(2): test %ebx,%ebx
4eee(5): mov 0x60(%rsp),%rbx
4ef3(5): setnz 0xf(%rsp)
4ef8(3): xor %r12d,%r12d
4efb(3): mov %rbx,%rdi
4efe(5): call 0xffffcba2(%rip)
4f03(5): mov %rbx,0x48(%rsp)
4f08(5): mov %rax,0x18(%rsp)
4f0d(5): mov $0x1,0xe(%rsp)
4f12(5): mov $0x0,0x7c(%rsp)
4f17(9): mov $0x0,0x50(%rsp)
4f20(5): mov $0x1,0xd(%rsp)
4f25(5): jmp 0xfffff29e(%rip)
4f2a(5): mov $0x1,0xe(%rsp)
4f2f(5): mov $0x0,0x7c(%rsp)
4f34(3): xor %r12d,%r12d
4f37(9): mov $0x0,0x50(%rsp)
4f40(5): mov $0x0,0xf(%rsp)
4f45(3): xor %r15d,%r15d
4f48(5): mov $0x0,0xd(%rsp)
4f4d(9): mov $0x0,0x18(%rsp)
4f56(9): mov $0x0,0x48(%rsp)
4f5f(5): jmp 0xfffff264(%rip)
4f64(5): mov $0x1,0xe(%rsp)
4f69(5): mov $0x0,0x7c(%rsp)
4f6e(3): xor %r12d,%r12d
4f71(9): mov $0x0,0x50(%rsp)
4f7a(5): mov $0x1,0xf(%rsp)
4f7f(5): mov $0x1,0xd(%rsp)
4f84(5): jmp 0xfffff21f(%rip)
4f89(3): cmp %r15,%r13
4f8c(2): jbe 0x7(%rip)
4f8e(5): mov $0x30,0x0(%r14,%r15,1)
4f93(4): lea 0x2(%rcx),%rax
4f97(3): cmp %rax,%r13
4f9a(2): jbe 0x8(%rip)
4f9c(6): mov $0x30,0x2(%r14,%rcx,1)
4fa2(3): mov %r12d,%eax
4fa5(4): lea 0x3(%rcx),%r15
4fa9(3): xor %r12d,%r12d
4fac(5): mov $0x30,%ebx
4fb1(5): jmp 0xfffff367(%rip)
4fb6(a): nop 0x0(%rax,%rax,1)
4fc0(5): movzx 0xf(%rsp),%ebx
4fc5(3): mov %r11,%rbp
4fc8(4): mov %bl,0xd(%rsp)
4fcc(5): jmp 0xfffffcad(%rip)
4fd1(5): movzx 0xd(%rsp),%edx
4fd6(3): xor %r12d,%r12d
4fd9(5): jmp 0xfffffb07(%rip)
4fde(3): xor %r10d,%r10d
4fe1(5): jmp 0xfffffbbc(%rip)
4fe6(9): mov $0x0,0x50(%rsp)
4fef(5): mov $0x1,0xe(%rsp)
4ff4(3): xor %r12d,%r12d
4ff7(5): mov $0x0,0x7c(%rsp)
4ffc(5): jmp 0xfffffddf(%rip)
5001(5): mov 0x30(%rsp),%r11
5006(3): mov %r14,%rsi
5009(3): mov %r13,%rcx
500c(3): mov %rbx,%rax
500f(3): mov %rbx,%rdi
5012(6): movzx 0x7d(%rsp),%r8d
5018(5): movzx 0x7e(%rsp),%ebx
501d(8): mov 0x88(%rsp),%r9
5025(3): cmp %r11,%rsi
5028(6): movzx 0x7f(%rsp),%r10d
502e(8): mov 0x80(%rsp),%r15
5036(5): mov 0x40(%rsp),%r14
503b(5): mov 0x70(%rsp),%r13
5040(2): jnb 0x28(%rip)
5042(3): cmp $0x0,(%rcx)
5045(2): jnz 0x12(%rip)
5047(2): jmp 0x21(%rip)
5049(7): nop 0x0(%rax)
5050(5): cmp $0x0,0x0(%r9,%rax,1)
5055(2): jz 0x10(%rip)
5057(4): add $0x1,%rax
505b(5): lea 0x0(%rbp,%rax,1),%rdx
5060(3): cmp %rdx,%r11
5063(2): jnbe 0xffffffed(%rip)
5065(3): mov %rax,%rdi
5068(5): movzx 0xd(%rsp),%edx
506d(3): xor %r12d,%r12d
5070(5): jmp 0xfffffa66(%rip)
5075(3): mov %rbx,%rdi
5078(6): movzx 0x7d(%rsp),%r8d
507e(5): movzx 0x7e(%rsp),%ebx
5083(6): movzx 0x7f(%rsp),%r10d
5089(8): mov 0x80(%rsp),%r15
5091(3): xor %r12d,%r12d
5094(5): mov 0x40(%rsp),%r14
5099(5): mov 0x70(%rsp),%r13
509e(5): mov 0x30(%rsp),%r11
50a3(5): movzx 0xd(%rsp),%edx
50a8(5): jmp 0xfffffa2e(%rip)
50ad(5): mov 0x68(%rsp),%rdx
50b2(3): movzx (%rdx),%eax
50b5(2): test %al,%al
50b7(6): jz 0xfffffe35(%rip)
50bd(3): nop (%rax)
50c0(3): cmp %r15,%r13
50c3(2): jbe 0x6(%rip)
50c5(4): mov %al,0x0(%r14,%r15,1)
50c9(4): add $0x1,%r15
50cd(5): movzx 0x0(%rdx,%r15,1),%eax
50d2(2): test %al,%al
50d4(2): jnz 0xffffffec(%rip)
50d6(5): jmp 0xfffffe16(%rip)
50db(2): mov %edx,%eax
50dd(5): jmp 0xfffff55a(%rip)
50e2(4): movzx 0x0(%rax,%rcx,1),%ebx
50e6(3): cmp $0x3e,%bl
50e9(6): jnbe 0xfffff877(%rip)
50ef(a): mov $0x8070630310989004800,%rax
50f9(4): bt %rbx,%rax
50fd(6): jnb 0xfffff863(%rip)
5103(5): cmp $0x0,0xf(%rsp)
5108(6): jnz 0x1ea(%rip)
510e(3): cmp %r15,%r13
5111(2): jbe 0x7(%rip)
5113(5): mov $0x3f,0x0(%r14,%r15,1)
5118(4): lea 0x1(%r15),%rax
511c(3): cmp %rax,%r13
511f(2): jbe 0x8(%rip)
5121(6): mov $0x22,0x1(%r14,%r15,1)
5127(4): lea 0x2(%r15),%rax
512b(3): cmp %rax,%r13
512e(2): jbe 0x8(%rip)
5130(6): mov $0x22,0x2(%r14,%r15,1)
5136(4): lea 0x3(%r15),%rax
513a(3): cmp %rax,%r13
513d(2): jbe 0x8(%rip)
513f(6): mov $0x3f,0x3(%r14,%r15,1)
5145(4): add $0x4,%r15
5149(2): xor %edx,%edx
514b(3): xor %r12d,%r12d
514e(2): xor %eax,%eax
5150(3): mov %rcx,%rbp
5153(5): jmp 0xfffff1c5(%rip)
5158(2): test %ebx,%ebx
515a(6): jz 0x18e(%rip)
5160(7): lea 0x27be(%rip),%rax
5167(5): mov $0x1,0xe(%rsp)
516c(5): mov $0x0,0x7c(%rsp)
5171(3): xor %r12d,%r12d
5174(9): mov $0x0,0x50(%rsp)
517d(5): mov $0x1,0xf(%rsp)
5182(5): mov $0x0,0xd(%rsp)
5187(9): mov $0x1,0x18(%rsp)
5190(3): xor %r15d,%r15d
5193(5): mov %rax,0x48(%rsp)
5198(5): jmp 0xfffff02b(%rip)
519d(3): nop (%rax)
51a0(3): mov %r11,%rbp
51a3(5): movzx 0xf(%rsp),%eax
51a8(5): jmp 0xfffffad1(%rip)
51ad(7): lea 0x276f(%rip),%rax
51b4(5): mov $0x1,0xe(%rsp)
51b9(5): mov $0x0,0x7c(%rsp)
51be(3): xor %r12d,%r12d
51c1(9): mov $0x0,0x50(%rsp)
51ca(5): mov $0x1,0xf(%rsp)
51cf(5): mov $0x1,0xd(%rsp)
51d4(9): mov $0x1,0x18(%rsp)
51dd(3): xor %r15d,%r15d
51e0(5): mov %rax,0x48(%rsp)
51e5(5): jmp 0xffffefde(%rip)
51ea(2): mov %edx,%eax
51ec(5): mov 0x48(%rsp),%rbx
51f1(3): test %rbx,%rbx
51f4(2): jz 0x2e(%rip)
51f6(2): test %al,%al
51f8(2): jz 0x2a(%rip)
51fa(3): movzx (%rbx),%ecx
51fd(3): mov %rbx,%rax
5200(2): test %cl,%cl
5202(2): jz 0x20(%rip)
5204(3): mov %r15,%rdx
5207(3): sub %r15,%rax
520a(3): cmp %rdx,%r13
520d(2): jbe 0x6(%rip)
520f(4): mov %cl,0x0(%r14,%rdx,1)
5213(4): add $0x1,%rdx
5217(4): movzx 0x0(%rax,%rdx,1),%ecx
521b(2): test %cl,%cl
521d(2): jnz 0xffffffed(%rip)
521f(3): mov %rdx,%r15
5222(3): cmp %r15,%r13
5225(6): jbe 0xfffffaa4(%rip)
522b(5): mov $0x0,0x0(%r14,%r15,1)
5230(5): jmp 0xfffffa99(%rip)
5235(5): cmp $0x2,0x8(%rsp)
523a(5): movzx 0xf(%rsp),%ebx
523f(3): mov %r11,%rbp
5242(3): setz %al
5245(4): mov %bl,0xd(%rsp)
5249(5): jmp 0xfffffa30(%rip)
524e(4): mov 0x8(%rsp),%esi
5252(3): mov %rcx,%rdi
5255(5): call 0xffffedab(%rip)
525a(5): mov %rax,0x68(%rsp)
525f(5): jmp 0xfffffc57(%rip)
5264(4): mov 0x8(%rsp),%esi
5268(3): mov %rcx,%rdi
526b(5): call 0xffffed95(%rip)
5270(5): mov %rax,0x60(%rsp)
5275(5): jmp 0xfffffc6c(%rip)
527a(5): movzx 0xf(%rsp),%ebx
527f(3): mov %r11,%rbp
5282(2): mov %edx,%eax
5284(4): mov %bl,0xd(%rsp)
5288(5): jmp 0xfffff9f1(%rip)
528d(4): sub $0x8,%rsp
5291(6): mov $0x5,%r8d
5297(3): mov %r11,%rcx
529a(4): push 0x68(%rsp)
529e(4): push 0x78(%rsp)
52a2(3): mov %r14,%rdi
52a5(4): push 0x38(%rsp)
52a9(8): mov 0x98(%rsp),%r9d
52b1(5): mov 0x30(%rsp),%rdx
52b6(5): mov 0x70(%rsp),%rsi
52bb(5): call 0xffffee35(%rip)
52c0(4): add $0x20,%rsp
52c4(3): mov %rax,%r15
52c7(5): jmp 0xfffffa02(%rip)
52cc(5): movzx 0x7c(%rsp),%eax
52d1(5): jmp 0xffffff1b(%rip)
52d6(8): mov $0x2,0x8(%rsp)
52de(5): jmp 0xfffff99b(%rip)
52e3(5): call 0xffffc7cd(%rip)
52e8(5): mov $0x0,0xd(%rsp)
52ed(5): jmp 0xfffffa74(%rip)
52f2(3): mov %r11,%rbp
52f5(5): jmp 0xfffff99b(%rip)
52fa(5): mov $0x1,0xe(%rsp)
52ff(2): xor %eax,%eax
5301(3): xor %r12d,%r12d
5304(9): mov $0x0,0x50(%rsp)
530d(5): jmp 0xfffff5a7(%rip)
5312(3): mov %r13,%rdx
5315(5): mov 0x50(%rsp),%r13
531a(5): jmp 0xfffff5f8(%rip)
531f(5): call 0xffffc6c1(%rip)

"quotearg_n_options" :
5330(2): push %r15
5332(2): push %r14
5334(3): movsxd %edi,%r15
5337(2): push %r13
5339(2): push %r12
533b(3): mov %rdx,%r14
533e(1): push %rbp
533f(1): push %rbx
5340(3): mov %rcx,%rbp
5343(4): sub $0x28,%rsp
5347(5): mov %rsi,0x8(%rsp)
534c(5): call 0xffffc6a4(%rip)
5351(3): mov %rax,%r13
5354(2): mov (%rax),%eax
5356(3): test %r15d,%r15d
5359(7): mov 0x204d00(%rip),%rbx
5360(4): mov %eax,0x18(%rsp)
5364(6): js 0x16d(%rip)
536a(7): cmp %r15d,0x204ce7(%rip)
5371(2): jnle 0x64(%rip)
5373(7): cmp $0x7fffffff,%r15d
537a(6): jz 0x15c(%rip)
5380(4): lea 0x1(%r15),%r12d
5384(7): lea 0x204ce5(%rip),%rax
538b(3): movsxd %r12d,%rsi
538e(4): shl/sal $0x4,%rsi
5392(3): cmp %rax,%rbx
5395(6): jz 0x11b(%rip)
539b(3): mov %rbx,%rdi
539e(5): call 0x1372(%rip)
53a3(3): mov %rax,%rbx
53a6(7): mov %rax,0x204cb3(%rip)
53ad(7): movsxd 0x204ca4(%rip),%rdi
53b4(3): mov %r12d,%edx
53b7(2): xor %esi,%esi
53b9(2): sub %edi,%edx
53bb(4): shl/sal $0x4,%rdi
53bf(3): movsxd %edx,%rdx
53c2(3): add %rbx,%rdi
53c5(4): shl/sal $0x4,%rdx
53c9(5): call 0xffffc767(%rip)
53ce(7): mov %r12d,0x204c83(%rip)
53d5(3): mov 0x4(%rbp),%eax
53d8(4): shl/sal $0x4,%r15
53dc(4): sub $0x8,%rsp
53e0(3): add %r15,%rbx
53e3(4): lea 0x8(%rbp),%r15
53e7(4): mov 0x0(%rbp),%r8d
53eb(3): mov (%rbx),%r11
53ee(4): mov 0x8(%rbx),%r12
53f2(3): mov %r14,%rcx
53f5(3): or $0x1,%eax
53f8(4): mov %eax,0x24(%rsp)
53fc(3): push 0x30(%rbp)
53ff(3): mov %eax,%r9d
5402(3): push 0x28(%rbp)
5405(2): push %r15
5407(3): mov %r11,%rsi
540a(5): mov 0x28(%rsp),%rdx
540f(3): mov %r12,%rdi
5412(5): mov %r11,0x30(%rsp)
5417(5): call 0xffffecd9(%rip)
541c(4): add $0x20,%rsp
5420(5): mov 0x10(%rsp),%r11
5425(3): cmp %rax,%r11
5428(2): jnbe 0x69(%rip)
542a(4): lea 0x1(%rax),%rsi
542e(7): lea 0x204d2b(%rip),%rax
5435(3): cmp %rax,%r12
5438(3): mov %rsi,(%rbx)
543b(2): jz 0x14(%rip)
543d(3): mov %r12,%rdi
5440(5): mov %rsi,0x10(%rsp)
5445(5): call 0xffffc97b(%rip)
544a(5): mov 0x10(%rsp),%rsi
544f(3): mov %rsi,%rdi
5452(5): mov %rsi,0x10(%rsp)
5457(5): call 0x1259(%rip)
545c(4): sub $0x8,%rsp
5460(4): mov %rax,0x8(%rbx)
5464(4): mov 0x0(%rbp),%r8d
5468(3): push 0x30(%rbp)
546b(3): push 0x28(%rbp)
546e(3): mov %r14,%rcx
5471(2): push %r15
5473(5): mov 0x3c(%rsp),%r9d
5478(3): mov %rax,%rdi
547b(5): mov 0x28(%rsp),%rdx
5480(5): mov 0x30(%rsp),%rsi
5485(3): mov %rax,%r12
5488(5): call 0xffffec68(%rip)
548d(4): add $0x20,%rsp
5491(4): mov 0x18(%rsp),%eax
5495(4): mov %eax,0x0(%r13)
5499(4): add $0x28,%rsp
549d(3): mov %r12,%rax
54a0(1): pop %rbx
54a1(1): pop %rbp
54a2(2): pop %r12
54a4(2): pop %r13
54a6(2): pop %r14
54a8(2): pop %r15
54aa(1): ret near (%rsp)
54ab(5): nop 0x0(%rax,%rax,1)
54b0(2): xor %edi,%edi
54b2(5): call 0x125e(%rip)
54b7(8): movdqa 0x204bb1(%rip),%xmm0
54bf(3): mov %rax,%rbx
54c2(7): mov %rax,0x204b97(%rip)
54c9(3): movups %xmm0,(%rax)
54cc(5): jmp 0xfffffee1(%rip)
54d1(5): call 0xffffc50f(%rip)
54d6(5): call 0x142a(%rip)

"clone_quoting_options" :
54e0(2): push %r12
54e2(1): push %rbp
54e3(1): push %rbx
54e4(3): mov %rdi,%rbx
54e7(5): call 0xffffc509(%rip)
54ec(3): mov (%rax),%r12d
54ef(3): mov %rax,%rbp
54f2(7): lea 0x204d67(%rip),%rax
54f9(3): test %rbx,%rbx
54fc(5): mov $0x38,%esi
5501(4): cmove %rax,%rbx
5505(3): mov %rbx,%rdi
5508(5): call 0x13a8(%rip)
550d(4): mov %r12d,0x0(%rbp)
5511(1): pop %rbx
5512(1): pop %rbp
5513(2): pop %r12
5515(1): ret near (%rsp)

"get_quoting_style" :
5520(7): lea 0x204d39(%rip),%rax
5527(3): test %rdi,%rdi
552a(4): cmove %rax,%rdi
552e(2): mov (%rdi),%eax
5530(1): ret near (%rsp)

"set_quoting_style" :
5540(7): lea 0x204d19(%rip),%rax
5547(3): test %rdi,%rdi
554a(4): cmove %rax,%rdi
554e(2): mov %esi,(%rdi)
5550(1): ret near (%rsp)

"set_char_quoting" :
5560(7): lea 0x204cf9(%rip),%rax
5567(3): test %rdi,%rdi
556a(2): mov %esi,%ecx
556c(4): cmove %rax,%rdi
5570(2): mov %esi,%eax
5572(3): and $0x1f,%ecx
5575(3): shr $0x5,%al
5578(3): movzx %al,%eax
557b(5): lea 0x8(%rdi,%rax,4),%rdi
5580(2): mov (%rdi),%esi
5582(2): mov %esi,%eax
5584(2): shr %cl,%eax
5586(2): xor %eax,%edx
5588(3): and $0x1,%eax
558b(3): and $0x1,%edx
558e(2): shl/sal %cl,%edx
5590(2): xor %esi,%edx
5592(2): mov %edx,(%rdi)
5594(1): ret near (%rsp)

"set_quoting_flags" :
55a0(7): lea 0x204cb9(%rip),%rax
55a7(3): test %rdi,%rdi
55aa(4): cmove %rax,%rdi
55ae(3): mov 0x4(%rdi),%eax
55b1(3): mov %esi,0x4(%rdi)
55b4(1): ret near (%rsp)

"set_custom_quoting" :
55c0(7): lea 0x204c99(%rip),%rax
55c7(3): test %rdi,%rdi
55ca(4): cmove %rax,%rdi
55ce(3): test %rsi,%rsi
55d1(6): mov $0xa,(%rdi)
55d7(2): jz 0x10(%rip)
55d9(3): test %rdx,%rdx
55dc(2): jz 0xb(%rip)
55de(4): mov %rsi,0x28(%rdi)
55e2(4): mov %rdx,0x30(%rdi)
55e6(1): ret near (%rsp)
55e7(4): sub $0x8,%rsp
55eb(5): call 0xffffc3f5(%rip)

"quotearg_buffer" :
55f0(2): push %r15
55f2(2): push %r14
55f4(7): lea 0x204c65(%rip),%rax
55fb(2): push %r13
55fd(2): push %r12
55ff(3): mov %rdi,%r13
5602(1): push %rbp
5603(1): push %rbx
5604(3): mov %r8,%rbx
5607(3): mov %rsi,%r14
560a(3): mov %rdx,%r15
560d(4): sub $0x18,%rsp
5611(3): test %r8,%r8
5614(4): cmove %rax,%rbx
5618(5): mov %rcx,0x8(%rsp)
561d(5): call 0xffffc3d3(%rip)
5622(3): mov (%rax),%r12d
5625(3): mov %rax,%rbp
5628(4): lea 0x8(%rbx),%rax
562c(4): sub $0x8,%rsp
5630(4): mov 0x4(%rbx),%r9d
5634(3): push 0x30(%rbx)
5637(3): mov (%rbx),%r8d
563a(3): push 0x28(%rbx)
563d(3): mov %r15,%rdx
5640(1): push %rax
5641(5): mov 0x28(%rsp),%rcx
5646(3): mov %r14,%rsi
5649(3): mov %r13,%rdi
564c(5): call 0xffffeaa4(%rip)
5651(4): mov %r12d,0x0(%rbp)
5655(4): add $0x38,%rsp
5659(1): pop %rbx
565a(1): pop %rbp
565b(2): pop %r12
565d(2): pop %r13
565f(2): pop %r14
5661(2): pop %r15
5663(1): ret near (%rsp)

"quotearg_alloc_mem" :
5670(2): push %r15
5672(2): push %r14
5674(7): lea 0x204be5(%rip),%rax
567b(2): push %r13
567d(2): push %r12
567f(3): mov %rdx,%r12
5682(1): push %rbp
5683(1): push %rbx
5684(3): mov %rcx,%rbx
5687(3): mov %rdi,%r14
568a(3): mov %rsi,%r15
568d(4): sub $0x38,%rsp
5691(3): test %rcx,%rcx
5694(4): cmove %rax,%rbx
5698(2): xor %ebp,%ebp
569a(5): call 0xffffc356(%rip)
569f(3): test %r12,%r12
56a2(3): mov %rax,%r13
56a5(2): mov (%rax),%eax
56a7(4): setz %bpl
56ab(3): or 0x4(%rbx),%ebp
56ae(4): lea 0x8(%rbx),%r10
56b2(4): sub $0x8,%rsp
56b6(3): mov (%rbx),%r8d
56b9(3): mov %r15,%rcx
56bc(4): mov %eax,0x14(%rsp)
56c0(3): push 0x30(%rbx)
56c3(3): mov %r14,%rdx
56c6(3): push 0x28(%rbx)
56c9(2): push %r10
56cb(2): xor %esi,%esi
56cd(3): mov %ebp,%r9d
56d0(2): xor %edi,%edi
56d2(5): mov %r10,0x40(%rsp)
56d7(5): call 0xffffea19(%rip)
56dc(4): lea 0x1(%rax),%rsi
56e0(5): mov %rax,0x48(%rsp)
56e5(4): add $0x20,%rsp
56e9(3): mov %rsi,%rdi
56ec(5): mov %rsi,0x18(%rsp)
56f1(5): call 0xfbf(%rip)
56f6(5): mov %rax,0x10(%rsp)
56fb(4): sub $0x8,%rsp
56ff(3): push 0x30(%rbx)
5702(3): push 0x28(%rbx)
5705(5): mov 0x38(%rsp),%r10
570a(3): mov %ebp,%r9d
570d(3): mov (%rbx),%r8d
5710(3): mov %r15,%rcx
5713(3): mov %r14,%rdx
5716(3): mov %rax,%rdi
5719(2): push %r10
571b(5): mov 0x38(%rsp),%rsi
5720(5): call 0xffffe9d0(%rip)
5725(4): mov 0x2c(%rsp),%eax
5729(4): add $0x20,%rsp
572d(3): test %r12,%r12
5730(4): mov %eax,0x0(%r13)
5734(2): jz 0xb(%rip)
5736(5): mov 0x28(%rsp),%r11
573b(4): mov %r11,(%r12)
573f(5): mov 0x10(%rsp),%rax
5744(4): add $0x38,%rsp
5748(1): pop %rbx
5749(1): pop %rbp
574a(2): pop %r12
574c(2): pop %r13
574e(2): pop %r14
5750(2): pop %r15
5752(1): ret near (%rsp)

"quotearg_alloc" :
5760(3): mov %rdx,%rcx
5763(2): xor %edx,%edx
5765(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
5770(6): mov 0x2048e2(%rip),%eax
5776(2): push %r12
5778(7): mov 0x2048e1(%rip),%r12
577f(1): push %rbp
5780(1): push %rbx
5781(3): cmp $0x1,%eax
5784(2): jle 0x2d(%rip)
5786(3): sub $0x2,%eax
5789(5): lea 0x18(%r12),%rbx
578e(4): shl/sal $0x4,%rax
5792(5): lea 0x28(%r12,%rax,1),%rbp
5797(9): nop 0x0(%rax,%rax,1)
57a0(3): mov (%rbx),%rdi
57a3(4): add $0x10,%rbx
57a7(5): call 0xffffc619(%rip)
57ac(3): cmp %rbp,%rbx
57af(2): jnz 0xfffffff1(%rip)
57b1(5): mov 0x8(%r12),%rdi
57b6(7): lea 0x2049a3(%rip),%rbx
57bd(3): cmp %rbx,%rdi
57c0(2): jz 0x19(%rip)
57c2(5): call 0xffffc5fe(%rip)
57c7(b): mov $0x100,0x20489e(%rip)
57d2(7): mov %rbx,0x20489f(%rip)
57d9(7): lea 0x204890(%rip),%rbx
57e0(3): cmp %rbx,%r12
57e3(2): jz 0x11(%rip)
57e5(3): mov %r12,%rdi
57e8(5): call 0xffffc5d8(%rip)
57ed(7): mov %rbx,0x20486c(%rip)
57f4(1): pop %rbx
57f5(a): mov $0x1,0x204859(%rip)
57ff(1): pop %rbp
5800(2): pop %r12
5802(1): ret near (%rsp)

"quotearg_n" :
5810(7): lea 0x204a49(%rip),%rcx
5817(7): mov $0xffffffff,%rdx
581e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
5830(7): lea 0x204a29(%rip),%rcx
5837(5): jmp 0xfffffaf9(%rip)

"quotearg" :
5840(7): lea 0x204a19(%rip),%rcx
5847(3): mov %rdi,%rsi
584a(7): mov $0xffffffff,%rdx
5851(2): xor %edi,%edi
5853(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
5860(7): lea 0x2049f9(%rip),%rcx
5867(3): mov %rsi,%rdx
586a(3): mov %rdi,%rsi
586d(2): xor %edi,%edi
586f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
5880(4): sub $0x48,%rsp
5884(3): mov %rdx,%rax
5887(9): mov $0x28,%rdx
5890(5): mov %rdx,0x38(%rsp)
5895(2): xor %edx,%edx
5897(3): cmp $0xa,%esi
589a(2): jz 0x6a(%rip)
589c(3): mov %esi,(%rsp)
589f(3): mov %rsp,%rcx
58a2(7): mov $0xffffffff,%rdx
58a9(3): mov %rax,%rsi
58ac(9): mov $0x0,0x4(%rsp)
58b5(9): mov $0x0,0xc(%rsp)
58be(9): mov $0x0,0x14(%rsp)
58c7(9): mov $0x0,0x1c(%rsp)
58d0(9): mov $0x0,0x24(%rsp)
58d9(9): mov $0x0,0x2c(%rsp)
58e2(8): mov $0x0,0x34(%rsp)
58ea(5): call 0xfffffa46(%rip)
58ef(5): mov 0x38(%rsp),%rcx
58f4(9): xor $0x28,%rcx
58fd(2): jnz 0xc(%rip)
58ff(4): add $0x48,%rsp
5903(1): ret near (%rsp)
5904(5): call 0xffffc0dc(%rip)
5909(5): call 0xffffc1a7(%rip)

"quotearg_n_style_mem" :
5910(4): sub $0x48,%rsp
5914(3): mov %rdx,%rax
5917(3): mov %rcx,%rdx
591a(9): mov $0x28,%rcx
5923(5): mov %rcx,0x38(%rsp)
5928(2): xor %ecx,%ecx
592a(3): cmp $0xa,%esi
592d(2): jz 0x63(%rip)
592f(3): mov %esi,(%rsp)
5932(3): mov %rsp,%rcx
5935(3): mov %rax,%rsi
5938(9): mov $0x0,0x4(%rsp)
5941(9): mov $0x0,0xc(%rsp)
594a(9): mov $0x0,0x14(%rsp)
5953(9): mov $0x0,0x1c(%rsp)
595c(9): mov $0x0,0x24(%rsp)
5965(9): mov $0x0,0x2c(%rsp)
596e(8): mov $0x0,0x34(%rsp)
5976(5): call 0xfffff9ba(%rip)
597b(5): mov 0x38(%rsp),%rdx
5980(9): xor $0x28,%rdx
5989(2): jnz 0xc(%rip)
598b(4): add $0x48,%rsp
598f(1): ret near (%rsp)
5990(5): call 0xffffc050(%rip)
5995(5): call 0xffffc11b(%rip)

"quotearg_style" :
59a0(3): mov %rsi,%rdx
59a3(2): mov %edi,%esi
59a5(2): xor %edi,%edi
59a7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
59b0(3): mov %rdx,%rcx
59b3(3): mov %rsi,%rdx
59b6(2): mov %edi,%esi
59b8(2): xor %edi,%edi
59ba(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
59c0(4): sub $0x48,%rsp
59c4(2): mov %edx,%ecx
59c6(9): mov $0x28,%rax
59cf(5): mov %rax,0x38(%rsp)
59d4(2): xor %eax,%eax
59d6(7): mov 0x2048b3(%rip),%rax
59dd(3): mov %rsp,%r8
59e0(3): and $0x1f,%ecx
59e3(8): movdqa 0x204875(%rip),%xmm0
59eb(5): mov %rax,0x30(%rsp)
59f0(2): mov %edx,%eax
59f2(4): movaps %xmm0,(%rsp)
59f6(3): shr $0x5,%al
59f9(3): movzx %al,%eax
59fc(5): lea 0x8(%r8,%rax,4),%r9
5a01(8): movdqa 0x204867(%rip),%xmm0
5a09(5): movaps %xmm0,0x10(%rsp)
5a0e(8): movdqa 0x20486a(%rip),%xmm0
5a16(5): movaps %xmm0,0x20(%rsp)
5a1b(3): mov (%r9),%edx
5a1e(2): mov %edx,%eax
5a20(2): shr %cl,%eax
5a22(2): not %eax
5a24(3): and $0x1,%eax
5a27(2): shl/sal %cl,%eax
5a29(3): mov %r8,%rcx
5a2c(2): xor %edx,%eax
5a2e(3): mov %rsi,%rdx
5a31(3): mov %rdi,%rsi
5a34(3): mov %eax,(%r9)
5a37(2): xor %edi,%edi
5a39(5): call 0xfffff8f7(%rip)
5a3e(5): mov 0x38(%rsp),%rsi
5a43(9): xor $0x28,%rsi
5a4c(2): jnz 0x7(%rip)
5a4e(4): add $0x48,%rsp
5a52(1): ret near (%rsp)
5a53(5): call 0xffffc05d(%rip)

"quotearg_char" :
5a60(4): movsx %sil,%edx
5a64(7): mov $0xffffffff,%rsi
5a6b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
5a70(5): mov $0x3a,%edx
5a75(7): mov $0xffffffff,%rsi
5a7c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
5a90(5): mov $0x3a,%edx
5a95(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
5aa0(4): sub $0x48,%rsp
5aa4(3): mov %rdx,%rax
5aa7(9): mov $0x28,%rdx
5ab0(5): mov %rdx,0x38(%rsp)
5ab5(2): xor %edx,%edx
5ab7(3): cmp $0xa,%esi
5aba(2): jz 0x6a(%rip)
5abc(3): mov %esi,(%rsp)
5abf(3): mov %rsp,%rcx
5ac2(7): mov $0xffffffff,%rdx
5ac9(3): mov %rax,%rsi
5acc(9): mov $0x0,0x4(%rsp)
5ad5(9): mov $0x4000000,0xc(%rsp)
5ade(9): mov $0x0,0x14(%rsp)
5ae7(9): mov $0x0,0x1c(%rsp)
5af0(9): mov $0x0,0x24(%rsp)
5af9(9): mov $0x0,0x2c(%rsp)
5b02(8): mov $0x0,0x34(%rsp)
5b0a(5): call 0xfffff826(%rip)
5b0f(5): mov 0x38(%rsp),%rcx
5b14(9): xor $0x28,%rcx
5b1d(2): jnz 0xc(%rip)
5b1f(4): add $0x48,%rsp
5b23(1): ret near (%rsp)
5b24(5): call 0xffffbebc(%rip)
5b29(5): call 0xffffbf87(%rip)

"quotearg_n_custom_mem" :
5b30(4): sub $0x48,%rsp
5b34(3): mov %rcx,%r9
5b37(7): mov 0x204752(%rip),%rcx
5b3e(8): movdqa 0x20471a(%rip),%xmm0
5b46(9): mov $0x28,%rax
5b4f(5): mov %rax,0x38(%rsp)
5b54(2): xor %eax,%eax
5b56(4): movaps %xmm0,(%rsp)
5b5a(3): test %rsi,%rsi
5b5d(5): mov %rcx,0x30(%rsp)
5b62(7): mov $0xa,(%rsp)
5b69(8): movdqa 0x2046ff(%rip),%xmm0
5b71(5): movaps %xmm0,0x10(%rsp)
5b76(8): movdqa 0x204702(%rip),%xmm0
5b7e(5): movaps %xmm0,0x20(%rsp)
5b83(2): jz 0x34(%rip)
5b85(3): test %rdx,%rdx
5b88(2): jz 0x2f(%rip)
5b8a(5): mov %rsi,0x28(%rsp)
5b8f(5): mov %rdx,0x30(%rsp)
5b94(3): mov %rsp,%rcx
5b97(3): mov %r8,%rdx
5b9a(3): mov %r9,%rsi
5b9d(5): call 0xfffff793(%rip)
5ba2(5): mov 0x38(%rsp),%rdi
5ba7(9): xor $0x28,%rdi
5bb0(2): jnz 0xc(%rip)
5bb2(4): add $0x48,%rsp
5bb6(1): ret near (%rsp)
5bb7(5): call 0xffffbe29(%rip)
5bbc(5): call 0xffffbef4(%rip)

"quotearg_n_custom" :
5bd0(7): mov $0xffffffff,%r8
5bd7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
5be0(3): mov %rdx,%rcx
5be3(7): mov $0xffffffff,%r8
5bea(3): mov %rsi,%rdx
5bed(3): mov %rdi,%rsi
5bf0(2): xor %edi,%edi
5bf2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
5c00(3): mov %rcx,%r8
5c03(3): mov %rdx,%rcx
5c06(3): mov %rsi,%rdx
5c09(3): mov %rdi,%rsi
5c0c(2): xor %edi,%edi
5c0e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
5c20(7): lea 0x2043f9(%rip),%rcx
5c27(5): jmp 0xfffff709(%rip)

"quote_mem" :
5c30(7): lea 0x2043e9(%rip),%rcx
5c37(3): mov %rsi,%rdx
5c3a(3): mov %rdi,%rsi
5c3d(2): xor %edi,%edi
5c3f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
5c50(7): lea 0x2043c9(%rip),%rcx
5c57(7): mov $0xffffffff,%rdx
5c5e(5): jmp 0xfffff6d2(%rip)

"quote" :
5c70(7): lea 0x2043a9(%rip),%rcx
5c77(3): mov %rdi,%rsi
5c7a(7): mov $0xffffffff,%rdx
5c81(2): xor %edi,%edi
5c83(5): jmp 0xfffff6ad(%rip)

"save_token" :
5c90(2): push %r12
5c92(1): push %rbp
5c93(1): push %rbx
5c94(4): mov 0x30(%rdi),%rdx
5c98(3): mov %rdi,%rbx
5c9b(4): mov 0x28(%rdi),%r12
5c9f(3): mov %rdx,%rbp
5ca2(3): sub %r12,%rbp
5ca5(4): sub $0x1,%rbp
5ca9(3): cmp %r12,%rdx
5cac(6): jz 0xc4(%rip)
5cb2(4): mov 0x48(%rbx),%rcx
5cb6(4): lea 0x0(%rdx,%rcx,1),%rax
5cba(3): not %rcx
5cbd(4): mov 0x38(%rbx),%rdx
5cc1(3): and %rcx,%rax
5cc4(4): mov 0x20(%rbx),%rcx
5cc8(3): mov %rax,%rsi
5ccb(3): mov %rdx,%rdi
5cce(4): mov %rax,0x30(%rbx)
5cd2(3): sub %rcx,%rsi
5cd5(3): sub %rcx,%rdi
5cd8(3): cmp %rdi,%rsi
5cdb(2): jbe 0x9(%rip)
5cdd(4): mov %rdx,0x30(%rbx)
5ce1(3): mov %rdx,%rax
5ce4(4): mov %rax,0x28(%rbx)
5ce8(7): mov 0x88(%rbx),%rdx
5cef(7): mov 0x90(%rbx),%rax
5cf6(3): sub %rdx,%rax
5cf9(4): cmp $0x7,%rax
5cfd(2): jbe 0x53(%rip)
5cff(3): mov %r12,(%rdx)
5d02(7): mov 0xe0(%rbx),%rdx
5d09(7): mov 0xe8(%rbx),%rax
5d10(8): add $0x8,0x88(%rbx)
5d18(3): sub %rdx,%rax
5d1b(4): cmp $0x7,%rax
5d1f(2): jnbe 0x1a(%rip)
5d21(7): lea 0xc8(%rbx),%rdi
5d28(5): mov $0x8,%esi
5d2d(5): call 0xf13(%rip)
5d32(7): mov 0xe0(%rbx),%rdx
5d39(3): mov %rbp,(%rdx)
5d3c(8): add $0x8,0xe0(%rbx)
5d44(4): add $0x1,(%rbx)
5d48(1): pop %rbx
5d49(1): pop %rbp
5d4a(2): pop %r12
5d4c(1): ret near (%rsp)
5d4d(3): nop (%rax)
5d50(4): lea 0x70(%rbx),%rdi
5d54(5): mov $0x8,%esi
5d59(5): call 0xee7(%rip)
5d5e(7): mov 0x88(%rbx),%rdx
5d65(2): jmp 0xffffff9a(%rip)
5d67(9): nop 0x0(%rax,%rax,1)
5d70(4): or $0x2,0x68(%rdi)
5d74(5): jmp 0xffffff3e(%rip)

"readtokens0_init" :
5d80(2): push %r12
5d82(7): mov 0x20422f(%rip),%r12
5d89(2): xor %edx,%edx
5d8b(1): push %rbp
5d8c(7): mov 0x204245(%rip),%rbp
5d93(2): xor %esi,%esi
5d95(1): push %rbx
5d96(3): mov %rdi,%rbx
5d99(7): mov $0x0,(%rdi)
5da0(8): mov $0x0,0x8(%rdi)
5da8(8): mov $0x0,0x10(%rdi)
5db0(4): lea 0x18(%rdi),%rdi
5db4(3): mov %r12,%r8
5db7(3): mov %rbp,%rcx
5dba(5): call 0xe46(%rip)
5dbf(4): lea 0x70(%rbx),%rdi
5dc3(3): mov %r12,%r8
5dc6(3): mov %rbp,%rcx
5dc9(2): xor %edx,%edx
5dcb(2): xor %esi,%esi
5dcd(5): call 0xe33(%rip)
5dd2(7): lea 0xc8(%rbx),%rdi
5dd9(3): mov %r12,%r8
5ddc(3): mov %rbp,%rcx
5ddf(1): pop %rbx
5de0(1): pop %rbp
5de1(2): pop %r12
5de3(2): xor %edx,%edx
5de5(2): xor %esi,%esi
5de7(5): jmp 0xe19(%rip)

"readtokens0_free" :
5df0(1): push %rbx
5df1(3): mov %rdi,%rbx
5df4(4): lea 0x18(%rdi),%rdi
5df8(2): xor %esi,%esi
5dfa(5): call 0xf76(%rip)
5dff(4): lea 0x70(%rbx),%rdi
5e03(2): xor %esi,%esi
5e05(5): call 0xf6b(%rip)
5e0a(7): lea 0xc8(%rbx),%rdi
5e11(2): xor %esi,%esi
5e13(1): pop %rbx
5e14(5): jmp 0xf5c(%rip)

"readtokens0" :
5e20(2): push %r12
5e22(1): push %rbp
5e23(4): lea 0x18(%rsi),%r12
5e27(1): push %rbx
5e28(3): mov %rdi,%rbp
5e2b(3): mov %rsi,%rbx
5e2e(4): sub $0x10,%rsp
5e32(2): jmp 0x14(%rip)
5e34(4): nop 0x0(%rax)
5e38(4): lea 0x1(%rdx),%rcx
5e3c(2): test %eax,%eax
5e3e(4): mov %rcx,0x30(%rbx)
5e42(2): mov %al,(%rdx)
5e44(2): jz 0x40(%rip)
5e46(3): mov %rbp,%rdi
5e49(5): call 0xffffbcf7(%rip)
5e4e(3): cmp $0xff,%eax
5e51(2): jz 0x4f(%rip)
5e53(4): mov 0x30(%rbx),%rdx
5e57(4): cmp %rdx,0x38(%rbx)
5e5b(2): jnz 0xffffffdd(%rip)
5e5d(5): mov $0x1,%esi
5e62(3): mov %r12,%rdi
5e65(4): mov %eax,0xc(%rsp)
5e69(5): call 0xdd7(%rip)
5e6e(4): mov 0x30(%rbx),%rdx
5e72(4): mov 0xc(%rsp),%eax
5e76(4): lea 0x1(%rdx),%rcx
5e7a(2): test %eax,%eax
5e7c(4): mov %rcx,0x30(%rbx)
5e80(2): mov %al,(%rdx)
5e82(2): jnz 0xffffffc4(%rip)
5e84(3): mov %rbx,%rdi
5e87(5): call 0xfffffe09(%rip)
5e8c(3): mov %rbp,%rdi
5e8f(5): call 0xffffbcb1(%rip)
5e94(3): cmp $0xff,%eax
5e97(2): jnz 0xffffffbc(%rip)
5e99(7): nop 0x0(%rax)
5ea0(4): mov 0x30(%rbx),%rax
5ea4(4): cmp %rax,0x28(%rbx)
5ea8(2): jz 0x1f(%rip)
5eaa(4): cmp %rax,0x38(%rbx)
5eae(6): jz 0x162(%rip)
5eb4(4): lea 0x1(%rax),%rdx
5eb8(3): mov %rbx,%rdi
5ebb(4): mov %rdx,0x30(%rbx)
5ebf(3): mov $0x0,(%rax)
5ec2(5): call 0xfffffdce(%rip)
5ec7(7): mov 0x88(%rbx),%rdx
5ece(7): mov 0x90(%rbx),%rax
5ed5(3): sub %rdx,%rax
5ed8(4): cmp $0x7,%rax
5edc(6): jbe 0xf4(%rip)
5ee2(7): mov $0x0,(%rdx)
5ee9(7): mov 0x88(%rbx),%rax
5ef0(7): mov 0x80(%rbx),%rsi
5ef7(4): lea 0x8(%rax),%rdx
5efb(3): cmp %rsi,%rdx
5efe(7): mov %rdx,0x88(%rbx)
5f05(6): jz 0xfb(%rip)
5f0b(7): mov 0xa0(%rbx),%rcx
5f12(4): lea 0x0(%rdx,%rcx,1),%rax
5f16(3): not %rcx
5f19(4): mov 0x78(%rbx),%rdx
5f1d(3): and %rcx,%rax
5f20(7): mov 0x90(%rbx),%rcx
5f27(3): mov %rax,%rdi
5f2a(7): mov %rax,0x88(%rbx)
5f31(3): sub %rdx,%rdi
5f34(3): mov %rcx,%r8
5f37(3): sub %rdx,%r8
5f3a(3): cmp %r8,%rdi
5f3d(2): jbe 0xc(%rip)
5f3f(7): mov %rcx,0x88(%rbx)
5f46(3): mov %rcx,%rax
5f49(4): mov %rsi,0x8(%rbx)
5f4d(7): mov 0xe0(%rbx),%rdx
5f54(7): mov 0xd8(%rbx),%rsi
5f5b(7): mov %rax,0x80(%rbx)
5f62(3): cmp %rsi,%rdx
5f65(6): jz 0x8b(%rip)
5f6b(7): mov 0xf8(%rbx),%rcx
5f72(4): lea 0x0(%rdx,%rcx,1),%rax
5f76(3): not %rcx
5f79(7): mov 0xe8(%rbx),%rdx
5f80(3): and %rcx,%rax
5f83(7): mov 0xd0(%rbx),%rcx
5f8a(3): mov %rax,%rdi
5f8d(3): mov %rdx,%r9
5f90(7): mov %rax,0xe0(%rbx)
5f97(3): sub %rcx,%rdi
5f9a(3): sub %rcx,%r9
5f9d(3): cmp %r9,%rdi
5fa0(2): jbe 0xc(%rip)
5fa2(7): mov %rdx,0xe0(%rbx)
5fa9(3): mov %rdx,%rax
5fac(7): mov %rax,0xd8(%rbx)
5fb3(4): mov %rsi,0x10(%rbx)
5fb7(3): mov %rbp,%rdi
5fba(5): call 0xffffba76(%rip)
5fbf(2): test %eax,%eax
5fc1(3): setz %al
5fc4(4): add $0x10,%rsp
5fc8(1): pop %rbx
5fc9(1): pop %rbp
5fca(2): pop %r12
5fcc(1): ret near (%rsp)
5fcd(3): nop (%rax)
5fd0(4): lea 0x70(%rbx),%rdi
5fd4(5): mov $0x8,%esi
5fd9(5): call 0xc67(%rip)
5fde(7): mov 0x88(%rbx),%rdx
5fe5(5): jmp 0xfffffefd(%rip)
5fea(6): nop 0x0(%rax,%rax,1)
5ff0(7): or $0x2,0x118(%rbx)
5ff7(5): jmp 0xffffff74(%rip)
5ffc(4): nop 0x0(%rax)
6000(7): or $0x2,0xc0(%rbx)
6007(5): jmp 0xffffff04(%rip)
600c(4): nop 0x0(%rax)
6010(4): lea 0x18(%rbx),%rdi
6014(5): mov $0x1,%esi
6019(5): call 0xc27(%rip)
601e(4): mov 0x30(%rbx),%rax
6022(5): jmp 0xfffffe92(%rip)

"safe_read" :
6030(2): push %r13
6032(2): push %r12
6034(3): mov %edi,%r13d
6037(1): push %rbp
6038(1): push %rbx
6039(3): mov %rsi,%r12
603c(3): mov %rdx,%rbx
603f(4): sub $0x8,%rsp
6043(5): nop 0x0(%rax,%rax,1)
6048(3): mov %rbx,%rdx
604b(3): mov %r12,%rsi
604e(3): mov %r13d,%edi
6051(5): call 0xffffbb2f(%rip)
6056(3): test %rax,%rax
6059(3): mov %rax,%rbp
605c(2): jns 0x24(%rip)
605e(5): call 0xffffb992(%rip)
6063(2): mov (%rax),%eax
6065(3): cmp $0x4,%eax
6068(2): jz 0xffffffe0(%rip)
606a(7): cmp $0x7ff00000,%rbx
6071(2): jbe 0xf(%rip)
6073(3): cmp $0x16,%eax
6076(2): jnz 0xa(%rip)
6078(5): mov $0x7ff00000,%ebx
607d(2): jmp 0xffffffcb(%rip)
607f(1): nop 
6080(4): add $0x8,%rsp
6084(3): mov %rbp,%rax
6087(1): pop %rbx
6088(1): pop %rbp
6089(2): pop %r12
608b(2): pop %r13
608d(1): ret near (%rsp)

"version_etc_arn" :
6090(2): push %r15
6092(2): push %r14
6094(2): push %r13
6096(2): push %r12
6098(3): mov %r9,%r12
609b(1): push %rbp
609c(1): push %rbx
609d(3): mov %rdi,%rbp
60a0(3): mov %r8,%rbx
60a3(4): sub $0x28,%rsp
60a7(3): test %rsi,%rsi
60aa(6): jz 0x11e(%rip)
60b0(3): mov %rdx,%r8
60b3(7): lea 0x1d2e(%rip),%rdx
60ba(3): mov %rcx,%r9
60bd(2): xor %eax,%eax
60bf(3): mov %rsi,%rcx
60c2(5): mov $0x1,%esi
60c7(5): call 0xffffbca9(%rip)
60cc(7): lea 0x1d28(%rip),%rsi
60d3(2): xor %edi,%edi
60d5(5): mov $0x5,%edx
60da(5): call 0xffffb9a6(%rip)
60df(7): lea 0x203a(%rip),%rdx
60e6(3): mov %rax,%rcx
60e9(6): mov $0x7e3,%r8d
60ef(5): mov $0x1,%esi
60f4(3): mov %rbp,%rdi
60f7(2): xor %eax,%eax
60f9(5): call 0xffffbc77(%rip)
60fe(7): lea 0x1d83(%rip),%rsi
6105(2): xor %edi,%edi
6107(5): mov $0x5,%edx
610c(5): call 0xffffb974(%rip)
6111(3): mov %rbp,%rsi
6114(3): mov %rax,%rdi
6117(5): call 0xffffba89(%rip)
611c(4): cmp $0x9,%r12
6120(6): jnbe 0x340(%rip)
6126(7): lea 0x1fbb(%rip),%rdx
612d(4): movsxd 0x0(%rdx,%r12,4),%rax
6131(3): add %rdx,%rax
6134(2): jmp %rax
6136(a): nop 0x0(%rax,%rax,1)
6140(4): mov 0x38(%rbx),%r9
6144(4): mov 0x10(%rbx),%rax
6148(7): lea 0x1ea9(%rip),%rsi
614f(4): mov 0x8(%rbx),%r8
6153(5): mov $0x5,%edx
6158(2): xor %edi,%edi
615a(4): mov 0x30(%rbx),%r13
615e(4): mov 0x28(%rbx),%r12
6162(5): mov %r9,0x10(%rsp)
6167(4): mov 0x20(%rbx),%r15
616b(4): mov 0x18(%rbx),%r14
616f(4): mov %rax,(%rsp)
6173(5): mov %r8,0x8(%rsp)
6178(3): mov (%rbx),%rbx
617b(5): call 0xffffb905(%rip)
6180(4): sub $0x8,%rsp
6184(5): mov 0x18(%rsp),%r9
6189(3): mov %rax,%rdx
618c(3): mov %rbx,%rcx
618f(5): mov $0x1,%esi
6194(3): mov %rbp,%rdi
6197(2): xor %eax,%eax
6199(2): push %r9
619b(2): push %r13
619d(2): push %r12
619f(2): push %r15
61a1(2): push %r14
61a3(5): mov 0x30(%rsp),%r9
61a8(5): mov 0x38(%rsp),%r8
61ad(5): call 0xffffbbc3(%rip)
61b2(4): add $0x30,%rsp
61b6(4): add $0x28,%rsp
61ba(1): pop %rbx
61bb(1): pop %rbp
61bc(2): pop %r12
61be(2): pop %r13
61c0(2): pop %r14
61c2(2): pop %r15
61c4(1): ret near (%rsp)
61c5(3): nop (%rax)
61c8(3): mov %rcx,%r8
61cb(3): mov %rdx,%rcx
61ce(7): lea 0x1c1f(%rip),%rdx
61d5(5): mov $0x1,%esi
61da(2): xor %eax,%eax
61dc(5): call 0xffffbb94(%rip)
61e1(5): jmp 0xfffffeeb(%rip)
61e6(a): nop 0x0(%rax,%rax,1)
61f0(4): mov 0x40(%rbx),%r10
61f4(4): mov 0x38(%rbx),%r9
61f8(7): lea 0x1e29(%rip),%rsi
61ff(4): mov 0x10(%rbx),%rax
6203(4): mov 0x8(%rbx),%r8
6207(5): mov $0x5,%edx
620c(4): mov 0x30(%rbx),%r13
6210(4): mov 0x28(%rbx),%r12
6214(4): mov 0x20(%rbx),%r15
6218(4): mov 0x18(%rbx),%r14
621c(3): mov (%rbx),%rbx
621f(5): mov %r10,0x18(%rsp)
6224(5): mov %r9,0x10(%rsp)
6229(4): mov %rax,(%rsp)
622d(5): mov %r8,0x8(%rsp)
6232(2): xor %edi,%edi
6234(5): call 0xffffb84c(%rip)
6239(5): mov 0x18(%rsp),%r10
623e(2): push %r10
6240(5): jmp 0xffffff44(%rip)
6245(3): nop (%rax)
6248(3): mov (%rbx),%rbx
624b(7): lea 0x1bad(%rip),%rsi
6252(5): mov $0x5,%edx
6257(2): xor %edi,%edi
6259(5): call 0xffffb827(%rip)
625e(4): add $0x28,%rsp
6262(3): mov %rbx,%rcx
6265(3): mov %rbp,%rdi
6268(1): pop %rbx
6269(1): pop %rbp
626a(2): pop %r12
626c(2): pop %r13
626e(2): pop %r14
6270(2): pop %r15
6272(3): mov %rax,%rdx
6275(5): mov $0x1,%esi
627a(2): xor %eax,%eax
627c(5): jmp 0xffffbaf4(%rip)
6281(7): nop 0x0(%rax)
6288(4): mov 0x8(%rbx),%r12
628c(7): lea 0x1b7c(%rip),%rsi
6293(3): mov (%rbx),%rbx
6296(5): mov $0x5,%edx
629b(2): xor %edi,%edi
629d(5): call 0xffffb7e3(%rip)
62a2(4): add $0x28,%rsp
62a6(3): mov %r12,%r8
62a9(3): mov %rbx,%rcx
62ac(3): mov %rbp,%rdi
62af(3): mov %rax,%rdx
62b2(5): mov $0x1,%esi
62b7(1): pop %rbx
62b8(1): pop %rbp
62b9(2): pop %r12
62bb(2): pop %r13
62bd(2): pop %r14
62bf(2): pop %r15
62c1(2): xor %eax,%eax
62c3(5): jmp 0xffffbaad(%rip)
62c8(8): nop 0x0(%rax,%rax,1)
62d0(4): mov 0x10(%rbx),%r13
62d4(4): mov 0x8(%rbx),%r12
62d8(7): lea 0x1b47(%rip),%rsi
62df(3): mov (%rbx),%rbx
62e2(5): mov $0x5,%edx
62e7(2): xor %edi,%edi
62e9(5): call 0xffffb797(%rip)
62ee(4): add $0x28,%rsp
62f2(3): mov %r13,%r9
62f5(3): mov %r12,%r8
62f8(3): mov %rbx,%rcx
62fb(3): mov %rbp,%rdi
62fe(3): mov %rax,%rdx
6301(1): pop %rbx
6302(1): pop %rbp
6303(2): pop %r12
6305(2): pop %r13
6307(2): pop %r14
6309(2): pop %r15
630b(5): mov $0x1,%esi
6310(2): xor %eax,%eax
6312(5): jmp 0xffffba5e(%rip)
6317(9): nop 0x0(%rax,%rax,1)
6320(7): lea 0x1c31(%rip),%rsi
6327(5): mov $0x5,%edx
632c(2): xor %edi,%edi
632e(4): mov 0x18(%rbx),%r14
6332(4): mov 0x10(%rbx),%r13
6336(4): mov 0x8(%rbx),%r12
633a(3): mov (%rbx),%rbx
633d(5): call 0xffffb743(%rip)
6342(4): sub $0x8,%rsp
6346(2): push %r14
6348(3): mov %rax,%rdx
634b(3): mov %r13,%r9
634e(3): mov %r12,%r8
6351(3): mov %rbx,%rcx
6354(3): mov %rbp,%rdi
6357(5): mov $0x1,%esi
635c(2): xor %eax,%eax
635e(5): call 0xffffba12(%rip)
6363(1): pop %rax
6364(1): pop %rdx
6365(4): add $0x28,%rsp
6369(1): pop %rbx
636a(1): pop %rbp
636b(2): pop %r12
636d(2): pop %r13
636f(2): pop %r14
6371(2): pop %r15
6373(1): ret near (%rsp)
6374(4): nop 0x0(%rax)
6378(4): mov 0x20(%rbx),%r15
637c(7): lea 0x1bf5(%rip),%rsi
6383(5): mov $0x5,%edx
6388(2): xor %edi,%edi
638a(4): mov 0x18(%rbx),%r14
638e(4): mov 0x10(%rbx),%r13
6392(4): mov 0x8(%rbx),%r12
6396(3): mov (%rbx),%rbx
6399(5): call 0xffffb6e7(%rip)
639e(2): push %r15
63a0(2): jmp 0xffffffa6(%rip)
63a2(6): nop 0x0(%rax,%rax,1)
63a8(4): mov 0x8(%rbx),%r8
63ac(4): mov 0x28(%rbx),%r12
63b0(7): lea 0x1be9(%rip),%rsi
63b7(4): mov 0x20(%rbx),%r15
63bb(4): mov 0x18(%rbx),%r14
63bf(5): mov $0x5,%edx
63c4(4): mov 0x10(%rbx),%r13
63c8(2): xor %edi,%edi
63ca(3): mov (%rbx),%rbx
63cd(4): mov %r8,(%rsp)
63d1(5): call 0xffffb6af(%rip)
63d6(4): sub $0x8,%rsp
63da(3): mov %r13,%r9
63dd(2): push %r12
63df(2): push %r15
63e1(2): push %r14
63e3(5): mov 0x20(%rsp),%r8
63e8(3): mov %rbx,%rcx
63eb(3): mov %rax,%rdx
63ee(3): mov %rbp,%rdi
63f1(5): mov $0x1,%esi
63f6(2): xor %eax,%eax
63f8(5): call 0xffffb978(%rip)
63fd(4): add $0x20,%rsp
6401(4): add $0x28,%rsp
6405(1): pop %rbx
6406(1): pop %rbp
6407(2): pop %r12
6409(2): pop %r13
640b(2): pop %r14
640d(2): pop %r15
640f(1): ret near (%rsp)
6410(4): mov 0x10(%rbx),%r9
6414(4): mov 0x30(%rbx),%r13
6418(7): lea 0x1ba9(%rip),%rsi
641f(4): mov 0x28(%rbx),%r12
6423(4): mov 0x20(%rbx),%r15
6427(5): mov $0x5,%edx
642c(4): mov 0x18(%rbx),%r14
6430(4): mov 0x8(%rbx),%r8
6434(2): xor %edi,%edi
6436(5): mov %r9,0x8(%rsp)
643b(3): mov (%rbx),%rbx
643e(4): mov %r8,(%rsp)
6442(5): call 0xffffb63e(%rip)
6447(2): push %r13
6449(2): push %r12
644b(2): push %r15
644d(2): push %r14
644f(5): mov 0x28(%rsp),%r9
6454(2): jmp 0xffffff8f(%rip)
6456(a): nop 0x0(%rax,%rax,1)
6460(4): mov 0x40(%rbx),%r10
6464(4): mov 0x38(%rbx),%r9
6468(5): mov $0x5,%edx
646d(4): mov 0x10(%rbx),%rax
6471(4): mov 0x8(%rbx),%r8
6475(7): lea 0x1be4(%rip),%rsi
647c(4): mov 0x30(%rbx),%r13
6480(4): mov 0x28(%rbx),%r12
6484(4): mov 0x20(%rbx),%r15
6488(4): mov 0x18(%rbx),%r14
648c(5): mov %r10,0x18(%rsp)
6491(5): mov %r9,0x10(%rsp)
6496(4): mov %rax,(%rsp)
649a(5): mov %r8,0x8(%rsp)
649f(3): mov (%rbx),%rbx
64a2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
64b0(3): xor %r9d,%r9d
64b3(4): cmp $0x0,(%r8)
64b7(2): jz 0x14(%rip)
64b9(7): nop 0x0(%rax)
64c0(4): add $0x1,%r9
64c4(5): cmp $0x0,0x0(%r8,%r9,8)
64c9(2): jnz 0xfffffff7(%rip)
64cb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
64d0(4): sub $0x68,%rsp
64d4(3): mov %r8,%r10
64d7(3): xor %r9d,%r9d
64da(9): mov $0x28,%rax
64e3(5): mov %rax,0x58(%rsp)
64e8(2): xor %eax,%eax
64ea(3): mov %rsp,%r8
64ed(3): nop (%rax)
64f0(3): mov (%r10),%eax
64f3(3): cmp $0x2f,%eax
64f6(2): jnbe 0x44(%rip)
64f8(3): mov %eax,%r11d
64fb(4): add 0x10(%r10),%r11
64ff(3): add $0x8,%eax
6502(3): mov %eax,(%r10)
6505(3): mov (%r11),%rax
6508(3): test %rax,%rax
650b(4): mov %rax,0x0(%r8,%r9,8)
650f(2): jz 0xc(%rip)
6511(4): add $0x1,%r9
6515(4): cmp $0xa,%r9
6519(2): jnz 0xffffffd7(%rip)
651b(5): call 0xfffffb75(%rip)
6520(5): mov 0x58(%rsp),%rax
6525(9): xor $0x28,%rax
652e(2): jnz 0x7(%rip)
6530(4): add $0x68,%rsp
6534(1): ret near (%rsp)
6535(5): call 0xffffb57b(%rip)
653a(4): mov 0x8(%r10),%r11
653e(4): lea 0x8(%r11),%rax
6542(4): mov %rax,0x8(%r10)
6546(2): jmp 0xffffffbf(%rip)

"version_etc" :
6550(1): push %rbp
6551(1): push %rbx
6552(6): mov $0x20,%r10d
6558(3): xor %r11d,%r11d
655b(7): sub $0xb8,%rsp
6562(9): mov $0x28,%rax
656b(5): mov %rax,0x78(%rsp)
6570(2): xor %eax,%eax
6572(8): lea 0xd0(%rsp),%rax
657a(8): mov %r8,0xa0(%rsp)
6582(8): lea 0xd0(%rsp),%rbx
658a(5): lea 0x20(%rsp),%r8
658f(8): mov %r9,0xa8(%rsp)
6597(8): mov $0x20,0x8(%rsp)
659f(5): mov %rax,0x10(%rsp)
65a4(8): lea 0x80(%rsp),%rax
65ac(3): xor %r9d,%r9d
65af(5): mov %rax,0x18(%rsp)
65b4(3): mov %rax,%rbp
65b7(9): nop 0x0(%rax,%rax,1)
65c0(4): cmp $0x2f,%r10d
65c4(2): jnbe 0x58(%rip)
65c6(3): mov %r10d,%eax
65c9(6): mov $0x1,%r11d
65cf(4): add $0x8,%r10d
65d3(3): add %rbp,%rax
65d6(3): mov (%rax),%rax
65d9(3): test %rax,%rax
65dc(4): mov %rax,0x0(%r8,%r9,8)
65e0(2): jz 0xc(%rip)
65e2(4): add $0x1,%r9
65e6(4): cmp $0xa,%r9
65ea(2): jnz 0xffffffd6(%rip)
65ec(3): test %r11b,%r11b
65ef(2): jnz 0x26(%rip)
65f1(5): call 0xfffffa9f(%rip)
65f6(5): mov 0x78(%rsp),%rax
65fb(9): xor $0x28,%rax
6604(2): jnz 0xc(%rip)
6606(7): add $0xb8,%rsp
660d(1): pop %rbx
660e(1): pop %rbp
660f(1): ret near (%rsp)
6610(5): call 0xffffb4a0(%rip)
6615(5): mov %r10d,0x8(%rsp)
661a(2): jmp 0xffffffd7(%rip)
661c(3): mov %rbx,%rax
661f(4): add $0x8,%rbx
6623(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
6630(1): push %rbx
6631(7): lea 0x180a(%rip),%rsi
6638(5): mov $0x5,%edx
663d(2): xor %edi,%edi
663f(5): call 0xffffb441(%rip)
6644(7): lea 0x180c(%rip),%rdx
664b(3): mov %rax,%rsi
664e(5): mov $0x1,%edi
6653(2): xor %eax,%eax
6655(5): call 0xffffb63b(%rip)
665a(7): lea 0x180c(%rip),%rsi
6661(5): mov $0x5,%edx
6666(2): xor %edi,%edi
6668(5): call 0xffffb418(%rip)
666d(7): lea 0x108c(%rip),%rcx
6674(7): lea 0x9f1(%rip),%rdx
667b(3): mov %rax,%rsi
667e(5): mov $0x1,%edi
6683(2): xor %eax,%eax
6685(5): call 0xffffb60b(%rip)
668a(7): mov 0x203a17(%rip),%rbx
6691(7): lea 0x1a08(%rip),%rsi
6698(2): xor %edi,%edi
669a(5): mov $0x5,%edx
669f(5): call 0xffffb3e1(%rip)
66a4(3): mov %rbx,%rsi
66a7(3): mov %rax,%rdi
66aa(1): pop %rbx
66ab(5): jmp 0xffffb4f5(%rip)

"xmalloc" :
66b0(1): push %rbx
66b1(3): mov %rdi,%rbx
66b4(5): call 0xffffb714(%rip)
66b9(3): test %rax,%rax
66bc(2): jnz 0x7(%rip)
66be(3): test %rbx,%rbx
66c1(2): jnz 0x4(%rip)
66c3(1): pop %rbx
66c4(1): ret near (%rsp)
66c5(5): call 0x23b(%rip)

"xnmalloc" :
66d0(3): mov %rdi,%rax
66d3(3): mul %rax,%rsi,%rdx
66d6(3): mov %rax,%rdi
66d9(3): seto %al
66dc(3): test %rdi,%rdi
66df(2): js 0xc(%rip)
66e1(3): movzx %al,%eax
66e4(3): test %rax,%rax
66e7(2): jnz 0x4(%rip)
66e9(2): jmp 0xffffffc7(%rip)
66eb(4): sub $0x8,%rsp
66ef(5): call 0x211(%rip)

"xrealloc" :
6710(3): test %rsi,%rsi
6713(1): push %rbx
6714(3): mov %rsi,%rbx
6717(2): jnz 0x7(%rip)
6719(3): test %rdi,%rdi
671c(2): jnz 0x1c(%rip)
671e(3): mov %rbx,%rsi
6721(5): call 0xffffb54f(%rip)
6726(3): test %rax,%rax
6729(2): jnz 0x7(%rip)
672b(3): test %rbx,%rbx
672e(2): jnz 0x13(%rip)
6730(1): pop %rbx
6731(1): ret near (%rsp)
6732(6): nop 0x0(%rax,%rax,1)
6738(5): call 0xffffb688(%rip)
673d(2): xor %eax,%eax
673f(1): pop %rbx
6740(1): ret near (%rsp)
6741(5): call 0x1bf(%rip)

"xnrealloc" :
6750(3): mov %rsi,%rax
6753(3): mul %rax,%rdx,%rdx
6756(3): mov %rax,%rsi
6759(3): seto %al
675c(3): test %rsi,%rsi
675f(2): js 0xc(%rip)
6761(3): movzx %al,%eax
6764(3): test %rax,%rax
6767(2): jnz 0x4(%rip)
6769(2): jmp 0xffffffa7(%rip)
676b(4): sub $0x8,%rsp
676f(5): call 0x191(%rip)

"x2nrealloc" :
6780(3): test %rdi,%rdi
6783(3): mov %rdx,%r9
6786(3): mov (%rsi),%rcx
6789(2): jz 0x37(%rip)
678b(2): xor %edx,%edx
678d(a): mov $0x6148914691236517204,%rax
6797(3): div %r9,%rax
679a(3): cmp %rcx,%rax
679d(2): jbe 0x3e(%rip)
679f(3): mov %rcx,%rax
67a2(3): shr $0x1,%rax
67a5(5): lea 0x1(%rax,%rcx,1),%rcx
67aa(3): mov %rcx,(%rsi)
67ad(4): imul %r9,%rcx
67b1(3): mov %rcx,%rsi
67b4(5): jmp 0xffffff5c(%rip)
67b9(7): nop 0x0(%rax)
67c0(3): test %rcx,%rcx
67c3(2): jz 0x25(%rip)
67c5(3): mov %rcx,%rax
67c8(3): mul %rax,%r9,%rdx
67cb(3): seto %dl
67ce(3): test %rax,%rax
67d1(3): movzx %dl,%edx
67d4(2): js 0x7(%rip)
67d6(3): test %rdx,%rdx
67d9(2): jz 0xffffffd1(%rip)
67db(4): sub $0x8,%rsp
67df(5): call 0x121(%rip)
67e4(4): nop 0x0(%rax)
67e8(2): xor %edx,%edx
67ea(5): mov $0x80,%eax
67ef(3): xor %r8d,%r8d
67f2(3): div %r9,%rax
67f5(3): test %rax,%rax
67f8(4): setz %r8b
67fc(4): lea 0x0(%r8,%rax,1),%rcx
6800(2): jmp 0xffffffc5(%rip)

"x2realloc" :
6810(3): test %rdi,%rdi
6813(3): mov (%rsi),%rax
6816(2): jz 0x2a(%rip)
6818(a): mov $0x6148914691236517203,%rdx
6822(3): cmp %rdx,%rax
6825(2): jnbe 0x2c(%rip)
6827(3): mov %rax,%rdx
682a(3): shr $0x1,%rdx
682d(5): lea 0x1(%rdx,%rax,1),%rax
6832(3): mov %rax,(%rsi)
6835(3): mov %rax,%rsi
6838(5): jmp 0xfffffed8(%rip)
683d(3): nop (%rax)
6840(3): test %rax,%rax
6843(5): mov $0x80,%edx
6848(4): cmove %rdx,%rax
684c(3): test %rax,%rax
684f(2): jns 0xffffffe3(%rip)
6851(4): sub $0x8,%rsp
6855(5): call 0xab(%rip)

"xzalloc" :
6860(1): push %rbx
6861(3): mov %rdi,%rbx
6864(5): call 0xfffffe4c(%rip)
6869(3): mov %rbx,%rdx
686c(2): xor %esi,%esi
686e(3): mov %rax,%rdi
6871(1): pop %rbx
6872(5): jmp 0xffffb2be(%rip)

"xcalloc" :
6880(3): mov %rdi,%rax
6883(4): sub $0x8,%rsp
6887(3): mul %rax,%rsi,%rdx
688a(3): seto %dl
688d(3): test %rax,%rax
6890(2): js 0x19(%rip)
6892(3): movzx %dl,%edx
6895(3): test %rdx,%rdx
6898(2): jnz 0x11(%rip)
689a(5): call 0xffffb316(%rip)
689f(3): test %rax,%rax
68a2(2): jz 0x7(%rip)
68a4(4): add $0x8,%rsp
68a8(1): ret near (%rsp)
68a9(5): call 0x57(%rip)

"xmemdup" :
68b0(1): push %rbp
68b1(1): push %rbx
68b2(3): mov %rdi,%rbp
68b5(3): mov %rsi,%rdi
68b8(3): mov %rsi,%rbx
68bb(4): sub $0x8,%rsp
68bf(5): call 0xfffffdf1(%rip)
68c4(4): add $0x8,%rsp
68c8(3): mov %rbx,%rdx
68cb(3): mov %rbp,%rsi
68ce(1): pop %rbx
68cf(1): pop %rbp
68d0(3): mov %rax,%rdi
68d3(5): jmp 0xffffb31d(%rip)

"xstrdup" :
68e0(1): push %rbx
68e1(3): mov %rdi,%rbx
68e4(5): call 0xffffb1bc(%rip)
68e9(3): mov %rbx,%rdi
68ec(4): lea 0x1(%rax),%rsi
68f0(1): pop %rbx
68f1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
6900(7): lea 0x1848(%rip),%rsi
6907(4): sub $0x8,%rsp
690b(5): mov $0x5,%edx
6910(2): xor %edi,%edi
6912(5): call 0xffffb16e(%rip)
6917(6): mov 0x2036fb(%rip),%edi
691d(7): lea 0xf69(%rip),%rdx
6924(3): mov %rax,%rcx
6927(2): xor %esi,%esi
6929(2): xor %eax,%eax
692b(5): call 0xffffb3a5(%rip)
6930(5): call 0xffffb0b0(%rip)

"rpl_fclose" :
6940(2): push %r12
6942(1): push %rbp
6943(1): push %rbx
6944(3): mov %rdi,%rbx
6947(5): call 0xffffb2b9(%rip)
694c(2): test %eax,%eax
694e(3): mov %rbx,%rdi
6951(2): js 0x56(%rip)
6953(5): call 0xffffb30d(%rip)
6958(2): test %eax,%eax
695a(2): jnz 0x2e(%rip)
695c(3): mov %rbx,%rdi
695f(5): call 0x61(%rip)
6964(2): test %eax,%eax
6966(2): jz 0x3e(%rip)
6968(5): call 0xffffb088(%rip)
696d(3): mov (%rax),%r12d
6970(3): mov %rbx,%rdi
6973(3): mov %rax,%rbp
6976(5): call 0xffffb0ea(%rip)
697b(3): test %r12d,%r12d
697e(2): jnz 0x32(%rip)
6980(1): pop %rbx
6981(1): pop %rbp
6982(2): pop %r12
6984(1): ret near (%rsp)
6985(3): nop (%rax)
6988(3): mov %rbx,%rdi
698b(5): call 0xffffb275(%rip)
6990(2): xor %esi,%esi
6992(5): mov $0x1,%edx
6997(2): mov %eax,%edi
6999(5): call 0xffffb177(%rip)
699e(4): cmp $0xffffffff,%rax
69a2(2): jnz 0xffffffba(%rip)
69a4(3): mov %rbx,%rdi
69a7(1): pop %rbx
69a8(1): pop %rbp
69a9(2): pop %r12
69ab(5): jmp 0xffffb0b5(%rip)
69b0(4): mov %r12d,0x0(%rbp)
69b4(5): mov $0xffffffff,%eax
69b9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
69c0(3): test %rdi,%rdi
69c3(1): push %rbx
69c4(3): mov %rdi,%rbx
69c7(2): jz 0x13(%rip)
69c9(5): call 0xffffb297(%rip)
69ce(2): test %eax,%eax
69d0(2): jz 0xa(%rip)
69d2(6): test $0x100,(%rbx)
69d8(2): jnz 0x10(%rip)
69da(3): mov %rbx,%rdi
69dd(1): pop %rbx
69de(5): jmp 0xffffb252(%rip)
69e3(5): nop 0x0(%rax,%rax,1)
69e8(3): mov %rbx,%rdi
69eb(5): mov $0x1,%edx
69f0(2): xor %esi,%esi
69f2(5): call 0xe(%rip)
69f7(3): mov %rbx,%rdi
69fa(1): pop %rbx
69fb(5): jmp 0xffffb235(%rip)

"rpl_fseeko" :
6a00(4): mov 0x8(%rdi),%rax
6a04(4): cmp %rax,0x10(%rdi)
6a08(2): jz 0x8(%rip)
6a0a(5): jmp 0xffffb2e6(%rip)
6a0f(1): nop 
6a10(4): mov 0x20(%rdi),%rax
6a14(4): cmp %rax,0x28(%rdi)
6a18(2): jnz 0xfffffff2(%rip)
6a1a(5): cmp $0x0,0x48(%rdi)
6a1f(2): jnz 0xffffffeb(%rip)
6a21(2): push %r12
6a23(1): push %rbp
6a24(3): mov %edx,%r12d
6a27(1): push %rbx
6a28(3): mov %rsi,%rbp
6a2b(3): mov %rdi,%rbx
6a2e(5): call 0xffffb1d2(%rip)
6a33(3): mov %r12d,%edx
6a36(3): mov %rbp,%rsi
6a39(2): mov %eax,%edi
6a3b(5): call 0xffffb0d5(%rip)
6a40(4): cmp $0xffffffff,%rax
6a44(2): jz 0xe(%rip)
6a46(3): and $0xef,(%rbx)
6a49(7): mov %rax,0x90(%rbx)
6a50(2): xor %eax,%eax
6a52(1): pop %rbx
6a53(1): pop %rbp
6a54(2): pop %r12
6a56(1): ret near (%rsp)

"rpl_mbrtowc" :
6a60(2): push %r13
6a62(2): push %r12
6a64(3): mov %rsi,%r13
6a67(1): push %rbp
6a68(1): push %rbx
6a69(3): mov %rdi,%rbx
6a6c(3): mov %rdx,%r12
6a6f(4): sub $0x18,%rsp
6a73(9): mov $0x28,%rax
6a7c(5): mov %rax,0x8(%rsp)
6a81(2): xor %eax,%eax
6a83(5): lea 0x4(%rsp),%rax
6a88(3): test %rdi,%rdi
6a8b(4): cmove %rax,%rbx
6a8f(3): mov %rbx,%rdi
6a92(5): call 0xffffb03e(%rip)
6a97(4): cmp $0xfffffffd,%rax
6a9b(3): mov %rax,%rbp
6a9e(2): jbe 0x22(%rip)
6aa0(3): test %r12,%r12
6aa3(2): jz 0x1d(%rip)
6aa5(2): xor %edi,%edi
6aa7(5): call 0x3e9(%rip)
6aac(2): test %al,%al
6aae(2): jnz 0x12(%rip)
6ab0(5): movzx 0x0(%r13),%eax
6ab5(5): mov $0x1,%ebp
6aba(2): mov %eax,(%rbx)
6abc(4): nop 0x0(%rax)
6ac0(5): mov 0x8(%rsp),%rdx
6ac5(9): xor $0x28,%rdx
6ace(3): mov %rbp,%rax
6ad1(2): jnz 0xd(%rip)
6ad3(4): add $0x18,%rsp
6ad7(1): pop %rbx
6ad8(1): pop %rbp
6ad9(2): pop %r12
6adb(2): pop %r13
6add(1): ret near (%rsp)
6ade(5): call 0xffffafd2(%rip)

"print_and_abort" :
6af0(7): lea 0x1658(%rip),%rsi
6af7(4): sub $0x8,%rsp
6afb(5): mov $0x5,%edx
6b00(2): xor %edi,%edi
6b02(5): call 0xffffaf7e(%rip)
6b07(7): mov 0x2035d2(%rip),%rdi
6b0e(7): lea 0x12db(%rip),%rdx
6b15(3): mov %rax,%rcx
6b18(5): mov $0x1,%esi
6b1d(2): xor %eax,%eax
6b1f(5): call 0xffffb251(%rip)
6b24(6): mov 0x2034ee(%rip),%edi
6b2a(5): call 0xffffb226(%rip)

"call_chunkfun" :
6b30(4): test $0x1,0x50(%rdi)
6b34(4): mov 0x38(%rdi),%rax
6b38(2): jnz 0x8(%rip)
6b3a(3): mov %rsi,%rdi
6b3d(2): jmp %rax
6b3f(1): nop 
6b40(4): mov 0x48(%rdi),%rdi
6b44(2): jmp %rax

"call_freefun" :
6b50(4): test $0x1,0x50(%rdi)
6b54(4): mov 0x40(%rdi),%rax
6b58(2): jnz 0x8(%rip)
6b5a(3): mov %rsi,%rdi
6b5d(2): jmp %rax
6b5f(1): nop 
6b60(4): mov 0x48(%rdi),%rdi
6b64(2): jmp %rax

"_obstack_begin_worker" :
6b70(3): test %rdx,%rdx
6b73(2): push %r12
6b75(1): push %rbp
6b76(1): push %rbx
6b77(3): mov %rdi,%rbx
6b7a(2): jz 0x66(%rip)
6b7c(4): lea 0xffffffff(%rdx),%r12
6b80(3): mov %rdx,%rbp
6b83(3): test %rsi,%rsi
6b86(5): mov $0xfe0,%eax
6b8b(4): mov %r12,0x30(%rbx)
6b8f(4): cmove %rax,%rsi
6b93(3): mov %rbx,%rdi
6b96(3): mov %rsi,(%rbx)
6b99(5): call 0xffffff97(%rip)
6b9e(3): test %rax,%rax
6ba1(4): mov %rax,0x8(%rbx)
6ba5(2): jz 0x48(%rip)
6ba7(5): lea 0x10(%rax,%r12,1),%rdx
6bac(3): neg %rbp
6baf(3): and %rdx,%rbp
6bb2(3): mov (%rbx),%rdx
6bb5(4): mov %rbp,0x10(%rbx)
6bb9(4): mov %rbp,0x18(%rbx)
6bbd(3): add %rax,%rdx
6bc0(3): mov %rdx,(%rax)
6bc3(4): mov %rdx,0x20(%rbx)
6bc7(8): mov $0x0,0x8(%rax)
6bcf(5): mov $0x1,%eax
6bd4(4): and $0xf9,0x50(%rbx)
6bd8(1): pop %rbx
6bd9(1): pop %rbp
6bda(2): pop %r12
6bdc(1): ret near (%rsp)
6bdd(3): nop (%rax)
6be0(6): mov $0xf,%r12d
6be6(5): mov $0x10,%ebp
6beb(2): jmp 0xffffff98(%rip)
6bed(6): call 0x20348d(%rip)
6bf3(3): nop (%rax)
6bf6(a): nop 0x0(%rax,%rax,1)
6c00(4): and $0xfe,0x50(%rdi)
6c04(4): mov %rcx,0x38(%rdi)
6c08(4): mov %r8,0x40(%rdi)
6c0c(5): jmp 0xffffff64(%rip)

"_obstack_begin" :
6c00(4): and $0xfe,0x50(%rdi)
6c04(4): mov %rcx,0x38(%rdi)
6c08(4): mov %r8,0x40(%rdi)
6c0c(5): jmp 0xffffff64(%rip)

"_obstack_begin_1" :
6c20(4): or $0x1,0x50(%rdi)
6c24(4): mov %rcx,0x38(%rdi)
6c28(4): mov %r8,0x40(%rdi)
6c2c(4): mov %r9,0x48(%rdi)
6c30(5): jmp 0xffffff40(%rip)

"_obstack_newchunk" :
6c40(2): push %r14
6c42(2): push %r13
6c44(2): xor %edx,%edx
6c46(2): push %r12
6c48(1): push %rbp
6c49(1): push %rbx
6c4a(4): mov 0x18(%rdi),%rbx
6c4e(4): sub 0x10(%rdi),%rbx
6c52(4): mov 0x8(%rdi),%rbp
6c56(3): add %rbx,%rsi
6c59(3): mov %rbx,%rcx
6c5c(3): setb %dl
6c5f(4): add 0x30(%rdi),%rsi
6c63(3): setb %al
6c66(4): shr $0x3,%rcx
6c6a(3): cmp %rsi,(%rdi)
6c6d(5): lea 0x64(%rsi,%rcx,1),%r12
6c72(4): cmovnb (%rdi),%rsi
6c76(3): cmp %r12,%rsi
6c79(4): cmovnb %rsi,%r12
6c7d(3): test %rdx,%rdx
6c80(6): jnz 0xa5(%rip)
6c86(3): movzx %al,%eax
6c89(3): test %rax,%rax
6c8c(6): jnz 0x99(%rip)
6c92(3): mov %r12,%rsi
6c95(3): mov %rdi,%r13
6c98(5): call 0xfffffe98(%rip)
6c9d(3): test %rax,%rax
6ca0(3): mov %rax,%r14
6ca3(6): jz 0x82(%rip)
6ca9(4): lea 0x0(%rax,%r12,1),%rsi
6cad(4): mov %rax,0x8(%r13)
6cb1(4): mov %rbp,0x8(%rax)
6cb5(3): mov %rbx,%rdx
6cb8(4): mov %rsi,0x20(%r13)
6cbc(3): mov %rsi,(%rax)
6cbf(4): mov 0x30(%r13),%rax
6cc3(4): mov 0x10(%r13),%rsi
6cc7(5): lea 0x10(%r14,%rax,1),%r12
6ccc(3): not %rax
6ccf(3): and %rax,%r12
6cd2(3): mov %r12,%rdi
6cd5(5): call 0xffffaf1b(%rip)
6cda(5): test $0x2,0x50(%r13)
6cdf(2): jnz 0x17(%rip)
6ce1(4): mov 0x30(%r13),%rax
6ce5(5): lea 0x10(%rbp,%rax,1),%rdx
6cea(3): not %rax
6ced(3): and %rdx,%rax
6cf0(4): cmp %rax,0x10(%r13)
6cf4(2): jz 0x1c(%rip)
6cf6(5): and $0xfd,0x50(%r13)
6cfb(3): add %r12,%rbx
6cfe(4): mov %r12,0x10(%r13)
6d02(4): mov %rbx,0x18(%r13)
6d06(1): pop %rbx
6d07(1): pop %rbp
6d08(2): pop %r12
6d0a(2): pop %r13
6d0c(2): pop %r14
6d0e(1): ret near (%rsp)
6d0f(1): nop 
6d10(4): mov 0x8(%rbp),%rax
6d14(3): mov %rbp,%rsi
6d17(3): mov %r13,%rdi
6d1a(4): mov %rax,0x8(%r14)
6d1e(5): call 0xfffffe32(%rip)
6d23(2): jmp 0xffffffd3(%rip)
6d25(6): call 0x203355(%rip)
6d2b(5): nop 0x0(%rax,%rax,1)
6d30(4): mov 0x8(%rdi),%rax
6d34(3): test %rax,%rax
6d37(2): jz 0x2f(%rip)
6d39(7): nop 0x0(%rax)
6d40(3): cmp %rax,%rsi
6d43(2): jbe 0x7(%rip)
6d45(3): cmp %rsi,(%rax)
6d48(2): jnb 0x18(%rip)
6d4a(4): mov 0x8(%rax),%rax
6d4e(3): test %rax,%rax
6d51(2): jnz 0xffffffef(%rip)
6d53(2): xor %eax,%eax
6d55(1): ret near (%rsp)
6d56(a): nop 0x0(%rax,%rax,1)
6d60(5): mov $0x1,%eax
6d65(1): ret near (%rsp)
6d66(2): REP ret near (%rsp)

"_obstack_allocated_p" :
6d30(4): mov 0x8(%rdi),%rax
6d34(3): test %rax,%rax
6d37(2): jz 0x2f(%rip)
6d39(7): nop 0x0(%rax)
6d40(3): cmp %rax,%rsi
6d43(2): jbe 0x7(%rip)
6d45(3): cmp %rsi,(%rax)
6d48(2): jnb 0x18(%rip)
6d4a(4): mov 0x8(%rax),%rax
6d4e(3): test %rax,%rax
6d51(2): jnz 0xffffffef(%rip)
6d53(2): xor %eax,%eax
6d55(1): ret near (%rsp)
6d56(a): nop 0x0(%rax,%rax,1)
6d60(5): mov $0x1,%eax
6d65(1): ret near (%rsp)
6d66(2): REP ret near (%rsp)

"_obstack_free" :
6d70(2): push %r12
6d72(1): push %rbp
6d73(3): mov %rsi,%rbp
6d76(1): push %rbx
6d77(4): mov 0x8(%rdi),%rsi
6d7b(3): mov %rdi,%rbx
6d7e(3): test %rsi,%rsi
6d81(2): jz 0x2c(%rip)
6d83(5): nop 0x0(%rax,%rax,1)
6d88(3): cmp %rbp,%rsi
6d8b(2): jnb 0xa(%rip)
6d8d(3): mov (%rsi),%rax
6d90(3): cmp %rbp,%rax
6d93(2): jnb 0x2d(%rip)
6d95(4): mov 0x8(%rsi),%r12
6d99(3): mov %rbx,%rdi
6d9c(5): call 0xfffffdb4(%rip)
6da1(4): or $0x2,0x50(%rbx)
6da5(3): test %r12,%r12
6da8(3): mov %r12,%rsi
6dab(2): jnz 0xffffffdd(%rip)
6dad(3): test %rbp,%rbp
6db0(2): jnz 0x25(%rip)
6db2(1): pop %rbx
6db3(1): pop %rbp
6db4(2): pop %r12
6db6(1): ret near (%rsp)
6db7(9): nop 0x0(%rax,%rax,1)
6dc0(4): mov %rbp,0x18(%rbx)
6dc4(4): mov %rbp,0x10(%rbx)
6dc8(4): mov %rax,0x20(%rbx)
6dcc(4): mov %rsi,0x8(%rbx)
6dd0(1): pop %rbx
6dd1(1): pop %rbp
6dd2(2): pop %r12
6dd4(1): ret near (%rsp)
6dd5(5): call 0xffffac0b(%rip)

"_obstack_memory_used" :
6de0(4): mov 0x8(%rdi),%rdx
6de4(2): xor %eax,%eax
6de6(3): test %rdx,%rdx
6de9(2): jz 0x1f(%rip)
6deb(5): nop 0x0(%rax,%rax,1)
6df0(3): mov (%rdx),%rcx
6df3(3): sub %rdx,%rcx
6df6(4): mov 0x8(%rdx),%rdx
6dfa(3): add %rcx,%rax
6dfd(3): test %rdx,%rdx
6e00(2): jnz 0xfffffff0(%rip)
6e02(2): REP ret near (%rsp)
6e04(4): nop 0x0(%rax)
6e08(2): REP ret near (%rsp)

"close_stream" :
6e10(2): push %r12
6e12(1): push %rbp
6e13(3): mov %rdi,%rbp
6e16(1): push %rbx
6e17(5): call 0xffffac09(%rip)
6e1c(3): mov 0x0(%rbp),%ebx
6e1f(3): mov %rbp,%rdi
6e22(3): mov %rax,%r12
6e25(5): call 0xfffffb1b(%rip)
6e2a(3): and $0x20,%ebx
6e2d(2): test %ebx,%ebx
6e2f(2): jnz 0x19(%rip)
6e31(2): test %eax,%eax
6e33(2): jz 0xc(%rip)
6e35(3): test %r12,%r12
6e38(5): mov $0xffffffff,%eax
6e3d(2): jz 0x3b(%rip)
6e3f(1): pop %rbx
6e40(1): pop %rbp
6e41(2): pop %r12
6e43(1): ret near (%rsp)
6e44(4): nop 0x0(%rax)
6e48(2): test %eax,%eax
6e4a(2): jnz 0x1e(%rip)
6e4c(5): call 0xffffaba4(%rip)
6e51(6): mov $0x0,(%rax)
6e57(5): mov $0xffffffff,%eax
6e5c(1): pop %rbx
6e5d(1): pop %rbp
6e5e(2): pop %r12
6e60(1): ret near (%rsp)
6e61(7): nop 0x0(%rax)
6e68(1): pop %rbx
6e69(5): mov $0xffffffff,%eax
6e6e(1): pop %rbp
6e6f(2): pop %r12
6e71(1): ret near (%rsp)
6e72(6): nop 0x0(%rax,%rax,1)
6e78(5): call 0xffffab78(%rip)
6e7d(3): cmp $0x9,(%rax)
6e80(1): pop %rbx
6e81(1): pop %rbp
6e82(2): pop %r12
6e84(3): setnz %al
6e87(3): movzx %al,%eax
6e8a(2): neg %eax
6e8c(1): ret near (%rsp)

"hard_locale" :
6e90(4): sub $0x8,%rsp
6e94(2): xor %esi,%esi
6e96(5): call 0xffffadea(%rip)
6e9b(3): mov %rax,%rdx
6e9e(5): mov $0x1,%eax
6ea3(3): test %rdx,%rdx
6ea6(2): jz 0x1f(%rip)
6ea8(7): lea 0x12b1(%rip),%rdi
6eaf(5): mov $0x2,%ecx
6eb4(3): mov %rdx,%rsi
6eb7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6eb9(3): setnbe %cl
6ebc(3): sbb $0x0,%cl
6ebf(2): xor %eax,%eax
6ec1(2): test %cl,%cl
6ec3(2): jnz 0xd(%rip)
6ec5(4): add $0x8,%rsp
6ec9(1): ret near (%rsp)
6eca(6): nop 0x0(%rax,%rax,1)
6ed0(7): lea 0x128b(%rip),%rdi
6ed7(5): mov $0x6,%ecx
6edc(3): mov %rdx,%rsi
6edf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6ee1(3): setnbe %al
6ee4(2): sbb $0x0,%al
6ee6(2): test %al,%al
6ee8(3): setnz %al
6eeb(4): add $0x8,%rsp
6eef(1): ret near (%rsp)

"locale_charset" :
6ef0(4): sub $0x8,%rsp
6ef4(5): mov $0xe,%edi
6ef9(5): call 0xffffad47(%rip)
6efe(3): test %rax,%rax
6f01(2): jz 0x1f(%rip)
6f03(3): cmp $0x0,(%rax)
6f06(7): lea 0x125b(%rip),%rdx
6f0d(4): cmove %rdx,%rax
6f11(4): add $0x8,%rsp
6f15(1): ret near (%rsp)
6f16(a): nop 0x0(%rax,%rax,1)
6f20(7): lea 0x1241(%rip),%rax
6f27(4): add $0x8,%rsp
6f2b(1): ret near (%rsp)

"__libc_csu_init" :
6f30(2): push %r15
6f32(2): push %r14
6f34(3): mov %rdx,%r15
6f37(2): push %r13
6f39(2): push %r12
6f3b(7): lea 0x202aee(%rip),%r12
6f42(1): push %rbp
6f43(7): lea 0x202aee(%rip),%rbp
6f4a(1): push %rbx
6f4b(3): mov %edi,%r13d
6f4e(3): mov %rsi,%r14
6f51(3): sub %r12,%rbp
6f54(4): sub $0x8,%rsp
6f58(4): sar $0x3,%rbp
6f5c(5): call 0xffffaa44(%rip)
6f61(3): test %rbp,%rbp
6f64(2): jz 0x22(%rip)
6f66(2): xor %ebx,%ebx
6f68(8): nop 0x0(%rax,%rax,1)
6f70(3): mov %r15,%rdx
6f73(3): mov %r14,%rsi
6f76(3): mov %r13d,%edi
6f79(4): call 0x0(%r12,%rbx,8)
6f7d(4): add $0x1,%rbx
6f81(3): cmp %rbx,%rbp
6f84(2): jnz 0xffffffec(%rip)
6f86(4): add $0x8,%rsp
6f8a(1): pop %rbx
6f8b(1): pop %rbp
6f8c(2): pop %r12
6f8e(2): pop %r13
6f90(2): pop %r14
6f92(2): pop %r15
6f94(1): ret near (%rsp)

"atexit" :
6fb0(7): mov 0x203051(%rip),%rdx
6fb7(2): xor %esi,%esi
6fb9(5): jmp 0xffffad67(%rip)

"_fini" :
6fc0(4): sub $0x8,%rsp
6fc4(4): add $0x8,%rsp
6fc8(1): ret near (%rsp)

