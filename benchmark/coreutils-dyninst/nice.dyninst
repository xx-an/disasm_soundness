
"free@plt" :
1330(6): jmp 0x206b2a(%rip)
1336(5): push $0x0

"abort@plt" :
1340(6): jmp 0x206b22(%rip)
1346(5): push $0x1

"__errno_location@plt" :
1350(6): jmp 0x206b1a(%rip)
1356(5): push $0x2

"getpriority@plt" :
1360(6): jmp 0x206b12(%rip)
1366(5): push $0x3

"strncmp@plt" :
1370(6): jmp 0x206b0a(%rip)
1376(5): push $0x4

"_exit@plt" :
1380(6): jmp 0x206b02(%rip)
1386(5): push $0x5

"__fpending@plt" :
1390(6): jmp 0x206afa(%rip)
1396(5): push $0x6

"textdomain@plt" :
13a0(6): jmp 0x206af2(%rip)
13a6(5): push $0x7

"fclose@plt" :
13b0(6): jmp 0x206aea(%rip)
13b6(5): push $0x8

"bindtextdomain@plt" :
13c0(6): jmp 0x206ae2(%rip)
13c6(5): push $0x9

"dcgettext@plt" :
13d0(6): jmp 0x206ada(%rip)
13d6(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
13e0(6): jmp 0x206ad2(%rip)
13e6(5): push $0xb

"strlen@plt" :
13f0(6): jmp 0x206aca(%rip)
13f6(5): push $0xc

"__stack_chk_fail@plt" :
1400(6): jmp 0x206ac2(%rip)
1406(5): push $0xd

"getopt_long@plt" :
1410(6): jmp 0x206aba(%rip)
1416(5): push $0xe

"mbrtowc@plt" :
1420(6): jmp 0x206ab2(%rip)
1426(5): push $0xf

"strchr@plt" :
1430(6): jmp 0x206aaa(%rip)
1436(5): push $0x10

"strrchr@plt" :
1440(6): jmp 0x206aa2(%rip)
1446(5): push $0x11

"lseek@plt" :
1450(6): jmp 0x206a9a(%rip)
1456(5): push $0x12

"__assert_fail@plt" :
1460(6): jmp 0x206a92(%rip)
1466(5): push $0x13

"setpriority@plt" :
1470(6): jmp 0x206a8a(%rip)
1476(5): push $0x14

"memset@plt" :
1480(6): jmp 0x206a82(%rip)
1486(5): push $0x15

"memcmp@plt" :
1490(6): jmp 0x206a7a(%rip)
1496(5): push $0x16

"fputs_unlocked@plt" :
14a0(6): jmp 0x206a72(%rip)
14a6(5): push $0x17

"calloc@plt" :
14b0(6): jmp 0x206a6a(%rip)
14b6(5): push $0x18

"strtol@plt" :
14c0(6): jmp 0x206a62(%rip)
14c6(5): push $0x19

"memcpy@plt" :
14d0(6): jmp 0x206a5a(%rip)
14d6(5): push $0x1a

"fileno@plt" :
14e0(6): jmp 0x206a52(%rip)
14e6(5): push $0x1b

"malloc@plt" :
14f0(6): jmp 0x206a4a(%rip)
14f6(5): push $0x1c

"fflush@plt" :
1500(6): jmp 0x206a42(%rip)
1506(5): push $0x1d

"nl_langinfo@plt" :
1510(6): jmp 0x206a3a(%rip)
1516(5): push $0x1e

"__freading@plt" :
1520(6): jmp 0x206a32(%rip)
1526(5): push $0x1f

"realloc@plt" :
1530(6): jmp 0x206a2a(%rip)
1536(5): push $0x20

"setlocale@plt" :
1540(6): jmp 0x206a22(%rip)
1546(5): push $0x21

"__printf_chk@plt" :
1550(6): jmp 0x206a1a(%rip)
1556(5): push $0x22

"error@plt" :
1560(6): jmp 0x206a12(%rip)
1566(5): push $0x23

"fseeko@plt" :
1570(6): jmp 0x206a0a(%rip)
1576(5): push $0x24

"execvp@plt" :
1580(6): jmp 0x206a02(%rip)
1586(5): push $0x25

"__cxa_atexit@plt" :
1590(6): jmp 0x2069fa(%rip)
1596(5): push $0x26

"exit@plt" :
15a0(6): jmp 0x2069f2(%rip)
15a6(5): push $0x27

"fwrite@plt" :
15b0(6): jmp 0x2069ea(%rip)
15b6(5): push $0x28

"__fprintf_chk@plt" :
15c0(6): jmp 0x2069e2(%rip)
15c6(5): push $0x29

"mbsinit@plt" :
15d0(6): jmp 0x2069da(%rip)
15d6(5): push $0x2a

"iswprint@plt" :
15e0(6): jmp 0x2069d2(%rip)
15e6(5): push $0x2b

"__ctype_b_loc@plt" :
15f0(6): jmp 0x2069ca(%rip)
15f6(5): push $0x2c

".plt.got" :
1600(6): jmp 0x2069e2(%rip)
1606(2): nop 

"_init" :
1300(4): sub $0x8,%rsp
1304(7): mov 0x206ccd(%rip),%rax
130b(3): test %rax,%rax
130e(2): jz 0x4(%rip)
1310(2): call %rax
1312(4): add $0x8,%rsp
1316(1): ret near (%rsp)

"main" :
1610(2): push %r14
1612(2): push %r13
1614(2): push %r12
1616(1): push %rbp
1617(3): mov %edi,%r12d
161a(1): push %rbx
161b(3): mov %rsi,%rbp
161e(5): mov $0x1,%ebx
1623(4): sub $0x10,%rsp
1627(3): mov (%rsi),%rdi
162a(9): mov $0x28,%rax
1633(5): mov %rax,0x8(%rsp)
1638(2): xor %eax,%eax
163a(5): call 0x936(%rip)
163f(7): lea 0x43bb(%rip),%rsi
1646(5): mov $0x6,%edi
164b(5): call 0xfffffef5(%rip)
1650(7): lea 0x39d5(%rip),%rsi
1657(7): lea 0x39a5(%rip),%rdi
165e(5): call 0xfffffd62(%rip)
1663(7): lea 0x3999(%rip),%rdi
166a(5): call 0xfffffd36(%rip)
166f(7): lea 0x84a(%rip),%rdi
1676(a): mov $0x7d,0x206998(%rip)
1680(5): call 0x38e0(%rip)
1685(4): cmp $0x1,%r12d
1689(6): jle 0x188(%rip)
168f(7): lea 0x2064ea(%rip),%r13
1696(3): xor %r14d,%r14d
1699(3): movsxd %ebx,%rax
169c(8): lea 0x0(,%rax,8),%rcx
16a4(5): mov 0x0(%rbp,%rax,8),%rax
16a9(3): cmp $0x2d,(%rax)
16ac(2): jnz 0x3c(%rip)
16ae(4): movzx 0x1(%rax),%esi
16b2(3): lea 0xffffffd5(%rsi),%edx
16b5(6): and $0xfd,%edx
16bb(3): setz %dl
16be(3): movzx %dl,%edx
16c1(3): add $0x1,%edx
16c4(3): movsxd %edx,%rdx
16c7(4): movsx 0x0(%rax,%rdx,1),%edx
16cb(3): sub $0x30,%edx
16ce(3): cmp $0x9,%edx
16d1(2): jnbe 0x17(%rip)
16d3(4): lea 0x1(%rax),%r14
16d7(3): add $0x1,%ebx
16da(3): cmp %r12d,%ebx
16dd(2): jl 0xffffffbc(%rip)
16df(2): jmp 0x5d(%rip)
16e1(7): nop 0x0(%rax)
16e8(4): mov 0x0(%rbp),%rax
16ec(5): lea 0xfffffff8(%rbp,%rcx,1),%rsi
16f1(7): lea 0x394c(%rip),%rdx
16f8(3): mov %r12d,%edi
16fb(3): xor %r8d,%r8d
16fe(3): mov %r13,%rcx
1701(3): mov %rax,(%rsi)
1704(3): lea 0xffffffff(%rbx),%eax
1707(a): mov $0x0,0x20697f(%rip)
1711(2): sub %eax,%edi
1713(5): call 0xfffffcfd(%rip)
1718(6): mov 0x206972(%rip),%edx
171e(5): cmp $0xffffff7e,%eax
1723(4): lea 0xffffffff(%rbx,%rdx,1),%ebx
1727(6): jz 0x269(%rip)
172d(6): jle 0x93(%rip)
1733(3): cmp $0xff,%eax
1736(6): jnz 0xca(%rip)
173c(3): test %r14,%r14
173f(6): jz 0xd2(%rip)
1745(7): lea 0x42b5(%rip),%r8
174c(2): xor %esi,%esi
174e(3): mov %rsp,%rcx
1751(5): mov $0xa,%edx
1756(3): mov %r14,%rdi
1759(5): call 0x2df7(%rip)
175e(3): cmp $0x1,%eax
1761(6): jnbe 0x23b(%rip)
1767(4): mov (%rsp),%rax
176b(6): mov $0xffffffd9,%r13d
1771(4): cmp $0xffffffd9,%rax
1775(2): jl 0x12(%rip)
1777(4): cmp $0x27,%rax
177b(5): mov $0x27,%edx
1780(4): cmovng %rax,%rdx
1784(3): mov %rdx,%r13
1787(3): cmp %r12d,%ebx
178a(6): jnz 0x9e(%rip)
1790(7): lea 0x3cb9(%rip),%rsi
1797(5): mov $0x5,%edx
179c(2): xor %edi,%edi
179e(5): call 0xfffffc32(%rip)
17a3(2): xor %esi,%esi
17a5(3): mov %rax,%rdx
17a8(2): xor %edi,%edi
17aa(2): xor %eax,%eax
17ac(5): call 0xfffffdb4(%rip)
17b1(5): mov $0x7d,%edi
17b6(5): call 0x32a(%rip)
17bb(5): nop 0x0(%rax,%rax,1)
17c0(5): cmp $0xffffff7d,%eax
17c5(2): jnz 0xffffffec(%rip)
17c7(7): mov 0x2068ba(%rip),%rdi
17ce(7): mov 0x20683b(%rip),%rcx
17d5(7): lea 0x386c(%rip),%r8
17dc(7): lea 0x381c(%rip),%rdx
17e3(7): lea 0x379a(%rip),%rsi
17ea(3): xor %r9d,%r9d
17ed(2): xor %eax,%eax
17ef(5): call 0x2971(%rip)
17f4(2): xor %edi,%edi
17f6(5): call 0xfffffdaa(%rip)
17fb(5): nop 0x0(%rax,%rax,1)
1800(3): cmp $0x6e,%eax
1803(2): jnz 0xffffffae(%rip)
1805(7): mov 0x20688c(%rip),%r14
180c(5): jmp 0xfffffece(%rip)
1811(5): call 0xfffffb3f(%rip)
1816(3): cmp %r12d,%ebx
1819(3): mov %rax,%r13
181c(6): jz 0x111(%rip)
1822(6): mov $0xa,%r13d
1828(5): call 0xfffffb28(%rip)
182d(2): xor %esi,%esi
182f(2): xor %edi,%edi
1831(6): mov $0x0,(%rax)
1837(3): mov %rax,%r12
183a(5): call 0xfffffb26(%rip)
183f(3): cmp $0xff,%eax
1842(2): jnz 0x2f(%rip)
1844(5): cmp $0x0,(%r12)
1849(2): jz 0x28(%rip)
184b(7): lea 0x381c(%rip),%rsi
1852(5): mov $0x5,%edx
1857(2): xor %edi,%edi
1859(5): call 0xfffffb77(%rip)
185e(4): mov (%r12),%esi
1862(3): mov %rax,%rdx
1865(5): mov $0x7d,%edi
186a(2): xor %eax,%eax
186c(5): call 0xfffffcf4(%rip)
1871(4): lea 0x0(%rax,%r13,1),%edx
1875(2): xor %esi,%esi
1877(2): xor %edi,%edi
1879(5): call 0xfffffbf7(%rip)
187e(2): test %eax,%eax
1880(2): jz 0x4d(%rip)
1882(7): lea 0x37fd(%rip),%rsi
1889(2): xor %edi,%edi
188b(5): mov $0x5,%edx
1890(5): call 0xfffffb40(%rip)
1895(4): mov (%r12),%esi
1899(3): cmp $0xd,%esi
189c(6): jz 0xed(%rip)
18a2(3): cmp $0x1,%esi
18a5(5): mov $0x7d,%edi
18aa(6): jz 0xdf(%rip)
18b0(3): mov %rax,%rdx
18b3(2): xor %eax,%eax
18b5(5): call 0xfffffcab(%rip)
18ba(7): mov 0x2067ff(%rip),%rax
18c1(3): test $0x20,(%rax)
18c4(2): jz 0x9(%rip)
18c6(5): mov $0x7d,%ebx
18cb(2): jmp 0x43(%rip)
18cd(3): movsxd %ebx,%rbx
18d0(5): lea 0x0(%rbp,%rbx,8),%rbp
18d5(2): xor %ebx,%ebx
18d7(4): mov 0x0(%rbp),%rdi
18db(3): mov %rbp,%rsi
18de(5): call 0xfffffca2(%rip)
18e3(5): cmp $0x2,(%r12)
18e8(4): mov 0x0(%rbp),%rdi
18ec(3): setz %bl
18ef(5): call 0x2391(%rip)
18f4(4): mov (%r12),%esi
18f8(7): lea 0x3b91(%rip),%rdx
18ff(3): mov %rax,%rcx
1902(2): xor %edi,%edi
1904(2): xor %eax,%eax
1906(3): add $0x7e,%ebx
1909(5): call 0xfffffc57(%rip)
190e(5): mov 0x8(%rsp),%rcx
1913(9): xor $0x28,%rcx
191c(2): mov %ebx,%eax
191e(2): jnz 0x79(%rip)
1920(4): add $0x10,%rsp
1924(1): pop %rbx
1925(1): pop %rbp
1926(2): pop %r12
1928(2): pop %r13
192a(2): pop %r14
192c(1): ret near (%rsp)
192d(2): xor %esi,%esi
192f(2): xor %edi,%edi
1931(8): mov $0x0,0x0(%r13)
1939(5): call 0xfffffa27(%rip)
193e(3): cmp $0xff,%eax
1941(2): jnz 0x2f(%rip)
1943(5): cmp $0x0,0x0(%r13)
1948(2): jz 0x28(%rip)
194a(7): lea 0x371d(%rip),%rsi
1951(5): mov $0x5,%edx
1956(2): xor %edi,%edi
1958(5): call 0xfffffa78(%rip)
195d(4): mov 0x0(%r13),%esi
1961(3): mov %rax,%rdx
1964(5): mov $0x7d,%edi
1969(2): xor %eax,%eax
196b(5): call 0xfffffbf5(%rip)
1970(7): lea 0x370b(%rip),%rsi
1977(2): mov %eax,%edx
1979(5): mov $0x1,%edi
197e(2): xor %eax,%eax
1980(2): xor %ebx,%ebx
1982(5): call 0xfffffbce(%rip)
1987(2): jmp 0xffffff87(%rip)
1989(2): xor %edi,%edi
198b(5): jmp 0xffffff25(%rip)
1990(2): xor %edi,%edi
1992(5): call 0x14e(%rip)
1997(5): call 0xfffffa69(%rip)
199c(3): mov %r14,%rdi
199f(5): call 0x22e1(%rip)
19a4(7): lea 0x36ad(%rip),%rsi
19ab(3): mov %rax,%rbx
19ae(5): mov $0x5,%edx
19b3(2): xor %edi,%edi
19b5(5): call 0xfffffa1b(%rip)
19ba(3): mov %rbx,%rcx
19bd(3): mov %rax,%rdx
19c0(2): xor %esi,%esi
19c2(5): mov $0x7d,%edi
19c7(2): xor %eax,%eax
19c9(5): call 0xfffffb97(%rip)
19ce(2): nop 
19d0(2): xor %ebp,%ebp
19d2(3): mov %rdx,%r9
19d5(1): pop %rsi
19d6(3): mov %rsp,%rdx
19d9(4): and $0xfffffff0,%rsp
19dd(1): push %rax
19de(1): push %rsp
19df(7): lea 0x356a(%rip),%r8
19e6(7): lea 0x34f3(%rip),%rcx
19ed(7): lea 0xfffffc1c(%rip),%rdi
19f4(6): call 0x2065d6(%rip)
19fa(1): hlt 

"_start" :
19d0(2): xor %ebp,%ebp
19d2(3): mov %rdx,%r9
19d5(1): pop %rsi
19d6(3): mov %rsp,%rdx
19d9(4): and $0xfffffff0,%rsp
19dd(1): push %rax
19de(1): push %rsp
19df(7): lea 0x356a(%rip),%r8
19e6(7): lea 0x34f3(%rip),%rcx
19ed(7): lea 0xfffffc1c(%rip),%rdi
19f4(6): call 0x2065d6(%rip)
19fa(1): hlt 

"deregister_tm_clones" :
1a00(7): lea 0x206679(%rip),%rdi
1a07(1): push %rbp
1a08(7): lea 0x206671(%rip),%rax
1a0f(3): cmp %rdi,%rax
1a12(3): mov %rsp,%rbp
1a15(2): jz 0x1b(%rip)
1a17(7): mov 0x2065aa(%rip),%rax
1a1e(3): test %rax,%rax
1a21(2): jz 0xf(%rip)
1a23(1): pop %rbp
1a24(2): jmp %rax
1a26(a): nop 0x0(%rax,%rax,1)
1a30(1): pop %rbp
1a31(1): ret near (%rsp)

"register_tm_clones" :
1a40(7): lea 0x206639(%rip),%rdi
1a47(7): lea 0x206632(%rip),%rsi
1a4e(1): push %rbp
1a4f(3): sub %rdi,%rsi
1a52(3): mov %rsp,%rbp
1a55(4): sar $0x3,%rsi
1a59(3): mov %rsi,%rax
1a5c(4): shr $0x3f,%rax
1a60(3): add %rax,%rsi
1a63(3): sar $0x1,%rsi
1a66(2): jz 0x1a(%rip)
1a68(7): mov 0x206571(%rip),%rax
1a6f(3): test %rax,%rax
1a72(2): jz 0xe(%rip)
1a74(1): pop %rbp
1a75(2): jmp %rax
1a77(9): nop 0x0(%rax,%rax,1)
1a80(1): pop %rbp
1a81(1): ret near (%rsp)

"__do_global_dtors_aux" :
1a90(7): cmp $0x0,0x206631(%rip)
1a97(2): jnz 0x31(%rip)
1a99(8): cmp $0x0,0x206547(%rip)
1aa1(1): push %rbp
1aa2(3): mov %rsp,%rbp
1aa5(2): jz 0xe(%rip)
1aa7(7): mov 0x20655a(%rip),%rdi
1aae(5): call 0xfffffb52(%rip)
1ab3(5): call 0xffffff4d(%rip)
1ab8(7): mov $0x1,0x206609(%rip)
1abf(1): pop %rbp
1ac0(1): ret near (%rsp)
1ac1(7): nop 0x0(%rax)
1ac8(2): REP ret near (%rsp)

"frame_dummy" :
1ad0(1): push %rbp
1ad1(3): mov %rsp,%rbp
1ad4(1): pop %rbp
1ad5(5): jmp 0xffffff6b(%rip)

"usage" :
1ae0(2): push %r13
1ae2(2): push %r12
1ae4(5): mov $0x5,%edx
1ae9(1): push %rbp
1aea(1): push %rbx
1aeb(2): mov %edi,%ebp
1aed(7): sub $0x88,%rsp
1af4(7): mov 0x2065e5(%rip),%rbx
1afb(9): mov $0x28,%rax
1b04(5): mov %rax,0x78(%rsp)
1b09(2): xor %eax,%eax
1b0b(2): test %edi,%edi
1b0d(2): jz 0x30(%rip)
1b0f(7): lea 0x35a2(%rip),%rsi
1b16(2): xor %edi,%edi
1b18(5): call 0xfffff8b8(%rip)
1b1d(7): mov 0x20659c(%rip),%rdi
1b24(3): mov %rax,%rdx
1b27(3): mov %rbx,%rcx
1b2a(5): mov $0x1,%esi
1b2f(2): xor %eax,%eax
1b31(5): call 0xfffffa8f(%rip)
1b36(2): mov %ebp,%edi
1b38(5): call 0xfffffa68(%rip)
1b3d(7): lea 0x359c(%rip),%rsi
1b44(2): xor %edi,%edi
1b46(5): call 0xfffff88a(%rip)
1b4b(3): mov %rbx,%rdx
1b4e(3): mov %rax,%rsi
1b51(5): mov $0x1,%edi
1b56(2): xor %eax,%eax
1b58(5): call 0xfffff9f8(%rip)
1b5d(7): lea 0x35a4(%rip),%rsi
1b64(5): mov $0x5,%edx
1b69(2): xor %edi,%edi
1b6b(5): call 0xfffff865(%rip)
1b70(5): mov $0x13,%ecx
1b75(3): mov %rax,%rsi
1b78(5): mov $0xffffffec,%edx
1b7d(5): mov $0x1,%edi
1b82(2): xor %eax,%eax
1b84(5): call 0xfffff9cc(%rip)
1b89(7): mov 0x2064f8(%rip),%rbx
1b90(7): lea 0x3651(%rip),%rsi
1b97(5): mov $0x5,%edx
1b9c(2): xor %edi,%edi
1b9e(5): call 0xfffff832(%rip)
1ba3(3): mov %rbx,%rsi
1ba6(3): mov %rax,%rdi
1ba9(5): call 0xfffff8f7(%rip)
1bae(7): mov 0x2064d3(%rip),%rbx
1bb5(7): lea 0x367c(%rip),%rsi
1bbc(5): mov $0x5,%edx
1bc1(2): xor %edi,%edi
1bc3(5): call 0xfffff80d(%rip)
1bc8(3): mov %rbx,%rsi
1bcb(3): mov %rax,%rdi
1bce(5): call 0xfffff8d2(%rip)
1bd3(7): mov 0x2064ae(%rip),%rbx
1bda(7): lea 0x369f(%rip),%rsi
1be1(5): mov $0x5,%edx
1be6(2): xor %edi,%edi
1be8(5): call 0xfffff7e8(%rip)
1bed(3): mov %rbx,%rsi
1bf0(3): mov %rax,%rdi
1bf3(5): call 0xfffff8ad(%rip)
1bf8(7): mov 0x206489(%rip),%rbx
1bff(7): lea 0x36aa(%rip),%rsi
1c06(5): mov $0x5,%edx
1c0b(2): xor %edi,%edi
1c0d(5): call 0xfffff7c3(%rip)
1c12(3): mov %rbx,%rsi
1c15(3): mov %rax,%rdi
1c18(7): lea 0x3365(%rip),%rbx
1c1f(5): call 0xfffff881(%rip)
1c24(7): lea 0x36bd(%rip),%rsi
1c2b(5): mov $0x5,%edx
1c30(2): xor %edi,%edi
1c32(5): call 0xfffff79e(%rip)
1c37(7): lea 0x3346(%rip),%rdx
1c3e(3): mov %rax,%rsi
1c41(5): mov $0x1,%edi
1c46(2): xor %eax,%eax
1c48(5): call 0xfffff908(%rip)
1c4d(7): lea 0x3335(%rip),%rax
1c54(7): lea 0x336f(%rip),%rcx
1c5b(9): mov $0x0,0x60(%rsp)
1c64(9): mov $0x0,0x68(%rsp)
1c6d(3): mov %rsp,%rdx
1c70(4): mov %rax,(%rsp)
1c74(7): lea 0x3310(%rip),%rax
1c7b(5): mov %rcx,0x30(%rsp)
1c80(7): lea 0x334d(%rip),%rcx
1c87(5): mov %rax,0x8(%rsp)
1c8c(7): lea 0x3370(%rip),%rax
1c93(5): mov %rcx,0x40(%rsp)
1c98(7): lea 0x333f(%rip),%rcx
1c9f(5): mov %rax,0x10(%rsp)
1ca4(7): lea 0x32f0(%rip),%rax
1cab(5): mov %rcx,0x50(%rsp)
1cb0(5): mov %rax,0x18(%rsp)
1cb5(7): lea 0x32f5(%rip),%rax
1cbc(5): mov %rax,0x20(%rsp)
1cc1(7): lea 0x32f3(%rip),%rax
1cc8(5): mov %rax,0x28(%rsp)
1ccd(5): mov %rax,0x38(%rsp)
1cd2(5): mov %rax,0x48(%rsp)
1cd7(5): mov %rax,0x58(%rsp)
1cdc(4): nop 0x0(%rax)
1ce0(4): add $0x10,%rdx
1ce4(3): mov (%rdx),%rdi
1ce7(3): test %rdi,%rdi
1cea(2): jz 0x15(%rip)
1cec(5): mov $0x5,%ecx
1cf1(3): mov %rbx,%rsi
1cf4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1cf6(3): setnbe %al
1cf9(2): sbb $0x0,%al
1cfb(2): test %al,%al
1cfd(2): jnz 0xffffffe3(%rip)
1cff(4): mov 0x8(%rdx),%r12
1d03(2): xor %edi,%edi
1d05(5): mov $0x5,%edx
1d0a(7): lea 0x32d7(%rip),%rsi
1d11(3): test %r12,%r12
1d14(6): jz 0xc7(%rip)
1d1a(5): call 0xfffff6b6(%rip)
1d1f(7): lea 0x3682(%rip),%rcx
1d26(7): lea 0x32d2(%rip),%rdx
1d2d(3): mov %rax,%rsi
1d30(5): mov $0x1,%edi
1d35(2): xor %eax,%eax
1d37(5): call 0xfffff819(%rip)
1d3c(2): xor %esi,%esi
1d3e(5): mov $0x5,%edi
1d43(5): call 0xfffff7fd(%rip)
1d48(3): test %rax,%rax
1d4b(2): jz 0x1e(%rip)
1d4d(7): lea 0x32b9(%rip),%rsi
1d54(5): mov $0x3,%edx
1d59(3): mov %rax,%rdi
1d5c(5): call 0xfffff614(%rip)
1d61(2): test %eax,%eax
1d63(6): jnz 0x10d(%rip)
1d69(7): lea 0x32a1(%rip),%rsi
1d70(2): xor %edi,%edi
1d72(5): mov $0x5,%edx
1d77(5): call 0xfffff659(%rip)
1d7c(7): lea 0x3201(%rip),%rcx
1d83(7): lea 0x361e(%rip),%rdx
1d8a(3): mov %rax,%rsi
1d8d(5): mov $0x1,%edi
1d92(2): xor %eax,%eax
1d94(5): call 0xfffff7bc(%rip)
1d99(3): cmp %rbx,%r12
1d9c(7): lea 0x3202(%rip),%rcx
1da3(7): lea 0x3c57(%rip),%rbx
1daa(4): cmove %rcx,%rbx
1dae(7): lea 0x3663(%rip),%rsi
1db5(2): xor %edi,%edi
1db7(5): mov $0x5,%edx
1dbc(5): call 0xfffff614(%rip)
1dc1(3): mov %rbx,%rcx
1dc4(3): mov %rax,%rsi
1dc7(3): mov %r12,%rdx
1dca(5): mov $0x1,%edi
1dcf(2): xor %eax,%eax
1dd1(5): call 0xfffff77f(%rip)
1dd6(5): jmp 0xfffffd60(%rip)
1ddb(5): call 0xfffff5f5(%rip)
1de0(7): lea 0x35c1(%rip),%rcx
1de7(7): lea 0x3211(%rip),%rdx
1dee(3): mov %rax,%rsi
1df1(5): mov $0x1,%edi
1df6(2): xor %eax,%eax
1df8(5): call 0xfffff758(%rip)
1dfd(2): xor %esi,%esi
1dff(5): mov $0x5,%edi
1e04(5): call 0xfffff73c(%rip)
1e09(3): test %rax,%rax
1e0c(2): jz 0x1a(%rip)
1e0e(7): lea 0x31f8(%rip),%rsi
1e15(5): mov $0x3,%edx
1e1a(3): mov %rax,%rdi
1e1d(5): call 0xfffff553(%rip)
1e22(2): test %eax,%eax
1e24(2): jnz 0x45(%rip)
1e26(7): lea 0x31e4(%rip),%rsi
1e2d(5): mov $0x5,%edx
1e32(2): xor %edi,%edi
1e34(7): lea 0x3149(%rip),%r12
1e3b(7): lea 0x3163(%rip),%rbx
1e42(5): call 0xfffff58e(%rip)
1e47(7): lea 0x3136(%rip),%rcx
1e4e(7): lea 0x3553(%rip),%rdx
1e55(3): mov %rax,%rsi
1e58(5): mov $0x1,%edi
1e5d(2): xor %eax,%eax
1e5f(5): call 0xfffff6f1(%rip)
1e64(5): jmp 0xffffff4a(%rip)
1e69(7): lea 0x3114(%rip),%r12
1e70(7): mov 0x206211(%rip),%r13
1e77(7): lea 0x3552(%rip),%rsi
1e7e(2): xor %edi,%edi
1e80(5): mov $0x5,%edx
1e85(5): call 0xfffff54b(%rip)
1e8a(3): mov %r13,%rsi
1e8d(3): mov %rax,%rdi
1e90(5): call 0xfffff610(%rip)
1e95(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1ea0(7): mov %rdi,0x206231(%rip)
1ea7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1eb0(7): mov %dil,0x206219(%rip)
1eb7(1): ret near (%rsp)

"close_stdout" :
1ec0(1): push %rbp
1ec1(1): push %rbx
1ec2(4): sub $0x8,%rsp
1ec6(7): mov 0x2061bb(%rip),%rdi
1ecd(5): call 0x2dd3(%rip)
1ed2(2): test %eax,%eax
1ed4(2): jz 0x18(%rip)
1ed6(5): call 0xfffff47a(%rip)
1edb(7): cmp $0x0,0x2061ee(%rip)
1ee2(3): mov %rax,%rbx
1ee5(2): jz 0x1e(%rip)
1ee7(3): cmp $0x20,(%rax)
1eea(2): jnz 0x19(%rip)
1eec(7): mov 0x2061cd(%rip),%rdi
1ef3(5): call 0x2dad(%rip)
1ef8(2): test %eax,%eax
1efa(2): jnz 0x48(%rip)
1efc(4): add $0x8,%rsp
1f00(1): pop %rbx
1f01(1): pop %rbp
1f02(1): ret near (%rsp)
1f03(7): lea 0x3576(%rip),%rsi
1f0a(2): xor %edi,%edi
1f0c(5): mov $0x5,%edx
1f11(5): call 0xfffff4bf(%rip)
1f16(7): mov 0x2061bb(%rip),%rdi
1f1d(3): mov %rax,%rbp
1f20(3): test %rdi,%rdi
1f23(2): jz 0x2a(%rip)
1f25(5): call 0x1b5b(%rip)
1f2a(2): mov (%rbx),%esi
1f2c(7): lea 0x3559(%rip),%rdx
1f33(3): mov %rax,%rcx
1f36(3): mov %rbp,%r8
1f39(2): xor %edi,%edi
1f3b(2): xor %eax,%eax
1f3d(5): call 0xfffff623(%rip)
1f42(6): mov 0x2060d0(%rip),%edi
1f48(5): call 0xfffff438(%rip)
1f4d(2): mov (%rbx),%esi
1f4f(7): lea 0x353a(%rip),%rdx
1f56(3): mov %rax,%rcx
1f59(2): xor %edi,%edi
1f5b(2): xor %eax,%eax
1f5d(5): call 0xfffff603(%rip)
1f62(2): jmp 0xffffffe0(%rip)

"set_program_name" :
1f70(3): test %rdi,%rdi
1f73(1): push %rbx
1f74(2): jz 0x79(%rip)
1f76(5): mov $0x2f,%esi
1f7b(3): mov %rdi,%rbx
1f7e(5): call 0xfffff4c2(%rip)
1f83(3): test %rax,%rax
1f86(2): jz 0x57(%rip)
1f88(4): lea 0x1(%rax),%r8
1f8c(3): mov %r8,%rdx
1f8f(3): sub %rbx,%rdx
1f92(4): cmp $0x6,%rdx
1f96(2): jle 0x47(%rip)
1f98(4): lea 0xfffffffa(%rax),%rsi
1f9c(7): lea 0x352d(%rip),%rdi
1fa3(5): mov $0x7,%ecx
1fa8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1faa(3): setnbe %dl
1fad(3): sbb $0x0,%dl
1fb0(2): test %dl,%dl
1fb2(2): jnz 0x2b(%rip)
1fb4(7): lea 0x351d(%rip),%rdi
1fbb(5): mov $0x3,%ecx
1fc0(3): mov %r8,%rsi
1fc3(3): mov %r8,%rbx
1fc6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1fc8(3): setnbe %dl
1fcb(3): sbb $0x0,%dl
1fce(2): test %dl,%dl
1fd0(2): jnz 0xd(%rip)
1fd2(4): lea 0x4(%rax),%rbx
1fd6(7): mov %rbx,0x2060a3(%rip)
1fdd(7): mov %rbx,0x2060fc(%rip)
1fe4(7): mov %rbx,0x2060b5(%rip)
1feb(1): pop %rbx
1fec(1): ret near (%rsp)
1fed(7): mov 0x2060cc(%rip),%rcx
1ff4(7): lea 0x349d(%rip),%rdi
1ffb(5): mov $0x37,%edx
2000(5): mov $0x1,%esi
2005(5): call 0xfffff5ab(%rip)
200a(5): call 0xfffff336(%rip)

"gettext_quote.part.1" :
2010(1): push %rbp
2011(1): push %rbx
2012(3): mov %rdi,%rbp
2015(2): mov %esi,%ebx
2017(4): sub $0x8,%rsp
201b(5): call 0x2d65(%rip)
2020(3): movzx (%rax),%edx
2023(3): and $0xdf,%edx
2026(3): cmp $0x55,%dl
2029(2): jz 0x77(%rip)
202b(3): cmp $0x47,%dl
202e(2): jz 0x22(%rip)
2030(7): lea 0x34b4(%rip),%rax
2037(7): lea 0x34af(%rip),%rdx
203e(3): cmp $0x9,%ebx
2041(4): cmovne %rdx,%rax
2045(4): add $0x8,%rsp
2049(1): pop %rbx
204a(1): pop %rbp
204b(1): ret near (%rsp)
204c(4): nop 0x0(%rax)
2050(4): movzx 0x1(%rax),%edx
2054(3): and $0xdf,%edx
2057(3): cmp $0x42,%dl
205a(2): jnz 0xffffffd6(%rip)
205c(4): cmp $0x31,0x2(%rax)
2060(2): jnz 0xffffffd0(%rip)
2062(4): cmp $0x38,0x3(%rax)
2066(2): jnz 0xffffffca(%rip)
2068(4): cmp $0x30,0x4(%rax)
206c(2): jnz 0xffffffc4(%rip)
206e(4): cmp $0x33,0x5(%rax)
2072(2): jnz 0xffffffbe(%rip)
2074(4): cmp $0x30,0x6(%rax)
2078(2): jnz 0xffffffb8(%rip)
207a(4): cmp $0x0,0x7(%rax)
207e(2): jnz 0xffffffb2(%rip)
2080(4): cmp $0x60,0x0(%rbp)
2084(7): lea 0x3459(%rip),%rax
208b(7): lea 0x3456(%rip),%rdx
2092(4): cmovne %rdx,%rax
2096(4): add $0x8,%rsp
209a(1): pop %rbx
209b(1): pop %rbp
209c(1): ret near (%rsp)
209d(3): nop (%rax)
20a0(4): movzx 0x1(%rax),%edx
20a4(3): and $0xdf,%edx
20a7(3): cmp $0x54,%dl
20aa(2): jnz 0xffffff86(%rip)
20ac(4): movzx 0x2(%rax),%edx
20b0(3): and $0xdf,%edx
20b3(3): cmp $0x46,%dl
20b6(6): jnz 0xffffff7a(%rip)
20bc(4): cmp $0x2d,0x3(%rax)
20c0(6): jnz 0xffffff70(%rip)
20c6(4): cmp $0x38,0x4(%rax)
20ca(6): jnz 0xffffff66(%rip)
20d0(4): cmp $0x0,0x5(%rax)
20d4(6): jnz 0xffffff5c(%rip)
20da(4): cmp $0x60,0x0(%rbp)
20de(7): lea 0x33f7(%rip),%rax
20e5(7): lea 0x33f4(%rip),%rdx
20ec(4): cmovne %rdx,%rax
20f0(4): add $0x8,%rsp
20f4(1): pop %rbx
20f5(1): pop %rbp
20f6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2100(2): push %r15
2102(2): push %r14
2104(3): mov %r8d,%r15d
2107(2): push %r13
2109(2): push %r12
210b(3): mov %rdi,%r14
210e(1): push %rbp
210f(1): push %rbx
2110(3): mov %r9d,%ebx
2113(3): mov %rsi,%r13
2116(3): mov %rcx,%rbp
2119(3): and $0x2,%ebx
211c(7): sub $0xb8,%rsp
2123(8): mov 0xf0(%rsp),%rax
212b(5): mov %rdx,0x10(%rsp)
2130(5): mov %r8d,0x8(%rsp)
2135(5): mov %r9d,0x78(%rsp)
213a(5): mov %rax,0x20(%rsp)
213f(8): mov 0xf8(%rsp),%rax
2147(5): mov %rax,0x68(%rsp)
214c(8): mov 0x100(%rsp),%rax
2154(5): mov %rax,0x60(%rsp)
2159(9): mov $0x28,%rax
2162(8): mov %rax,0xa8(%rsp)
216a(2): xor %eax,%eax
216c(5): call 0xfffff274(%rip)
2171(4): cmp $0xa,%r15d
2175(5): mov %rax,0x58(%rsp)
217a(6): jnbe 0x11b5(%rip)
2180(7): lea 0x33b9(%rip),%rcx
2187(3): mov %r15d,%edx
218a(4): movsxd 0x0(%rcx,%rdx,4),%rax
218e(3): add %rcx,%rax
2191(2): jmp %rax
2193(5): mov $0x1,0xe(%rsp)
2198(5): mov $0x0,0x7c(%rsp)
219d(3): xor %r12d,%r12d
21a0(9): mov $0x0,0x50(%rsp)
21a9(5): mov $0x1,0xf(%rsp)
21ae(5): mov $0x0,0xd(%rsp)
21b3(7): lea 0x3333(%rip),%rax
21ba(9): mov $0x1,0x18(%rsp)
21c3(3): xor %r15d,%r15d
21c6(8): mov $0x2,0x8(%rsp)
21ce(5): mov %rax,0x48(%rsp)
21d3(3): xor %r11d,%r11d
21d6(3): mov %rbp,%rax
21d9(3): mov %r12d,%r8d
21dc(3): mov %r11,%rbp
21df(3): mov %rax,%r11
21e2(6): nop 0x0(%rax,%rax,1)
21e8(3): cmp %rbp,%r11
21eb(4): setnz %r12b
21ef(4): cmp $0xffffffff,%r11
21f3(2): jnz 0xf(%rip)
21f5(5): mov 0x10(%rsp),%rax
21fa(4): cmp $0x0,0x0(%rax,%rbp,1)
21fe(4): setnz %r12b
2202(3): test %r12b,%r12b
2205(6): jz 0x65b(%rip)
220b(5): cmp $0x2,0x8(%rsp)
2210(5): mov 0x10(%rsp),%rdi
2215(4): lea 0x0(%rdi,%rbp,1),%r9
2219(3): setnz %al
221c(4): and 0xd(%rsp),%al
2220(3): mov %eax,%r10d
2223(6): jz 0xad(%rip)
2229(5): mov 0x18(%rsp),%rax
222e(3): test %rax,%rax
2231(6): jz 0x42f(%rip)
2237(4): cmp $0xffffffff,%r11
223b(5): lea 0x0(%rbp,%rax,1),%rbx
2240(2): jnz 0x30(%rip)
2242(4): cmp $0x1,%rax
2246(2): jbe 0x2a(%rip)
2248(5): mov %r8b,0x38(%rsp)
224d(5): mov %r10b,0x30(%rsp)
2252(5): mov %r9,0x28(%rsp)
2257(5): call 0xfffff199(%rip)
225c(6): movzx 0x38(%rsp),%r8d
2262(6): movzx 0x30(%rsp),%r10d
2268(3): mov %rax,%r11
226b(5): mov 0x28(%rsp),%r9
2270(3): cmp %r11,%rbx
2273(5): mov %r10b,0x28(%rsp)
2278(6): jnbe 0x5b8(%rip)
227e(5): mov 0x18(%rsp),%rdx
2283(5): mov 0x48(%rsp),%rsi
2288(3): mov %r9,%rdi
228b(5): mov %r11,0x40(%rsp)
2290(5): mov %r8b,0x38(%rsp)
2295(5): mov %r9,0x30(%rsp)
229a(5): call 0xfffff1f6(%rip)
229f(2): test %eax,%eax
22a1(5): mov 0x30(%rsp),%r9
22a6(6): movzx 0x38(%rsp),%r8d
22ac(5): mov 0x40(%rsp),%r11
22b1(6): jnz 0x57f(%rip)
22b7(5): cmp $0x0,0xf(%rsp)
22bc(6): movzx 0x28(%rsp),%r10d
22c2(6): jnz 0xf83(%rip)
22c8(8): nop 0x0(%rax,%rax,1)
22d0(4): movzx (%r9),%ebx
22d4(3): cmp $0x7e,%bl
22d7(6): jnbe 0x321(%rip)
22dd(7): lea 0x3288(%rip),%rcx
22e4(3): movzx %bl,%edx
22e7(4): movsxd 0x0(%rcx,%rdx,4),%rax
22eb(3): add %rcx,%rax
22ee(2): jmp %rax
22f0(3): xor %r10d,%r10d
22f3(4): cmp $0x1,%r11
22f7(3): setnz %al
22fa(4): cmp $0xffffffff,%r11
22fe(2): jnz 0xe(%rip)
2300(5): mov 0x10(%rsp),%rax
2305(4): cmp $0x0,0x1(%rax)
2309(3): setnz %al
230c(5): cmp $0x2,0x8(%rsp)
2311(3): setz %dl
2314(2): test %al,%al
2316(6): jz 0x252(%rip)
231c(3): xor %r12d,%r12d
231f(2): xor %eax,%eax
2321(7): nop 0x0(%rax)
2328(5): cmp $0x1,0xd(%rsp)
232d(6): jnz 0x115(%rip)
2333(2): test %dl,%dl
2335(6): jnz 0x10d(%rip)
233b(5): mov 0x20(%rsp),%rsi
2340(3): test %rsi,%rsi
2343(2): jz 0x16(%rip)
2345(2): mov %ebx,%edx
2347(3): shr $0x5,%dl
234a(3): movzx %dl,%edx
234d(3): mov 0x0(%rsi,%rdx,4),%edx
2350(3): bt %ebx,%edx
2353(6): jb 0x150(%rip)
2359(3): test %r10b,%r10b
235c(6): jnz 0x147(%rip)
2362(3): xor $0x1,%eax
2365(4): add $0x1,%rbp
2369(3): and %r8d,%eax
236c(2): test %al,%al
236e(2): jz 0x22(%rip)
2370(3): cmp %r15,%r13
2373(2): jbe 0x7(%rip)
2375(5): mov $0x27,0x0(%r14,%r15,1)
237a(4): lea 0x1(%r15),%rax
237e(3): cmp %rax,%r13
2381(2): jbe 0x8(%rip)
2383(6): mov $0x27,0x1(%r14,%r15,1)
2389(4): add $0x2,%r15
238d(3): xor %r8d,%r8d
2390(3): cmp %r13,%r15
2393(2): jnb 0x6(%rip)
2395(4): mov %bl,0x0(%r14,%r15,1)
2399(5): movzx 0xe(%rsp),%edi
239e(4): add $0x1,%r15
23a2(5): mov $0x0,%eax
23a7(3): test %r12b,%r12b
23aa(3): cmove %eax,%edi
23ad(5): mov %dil,0xe(%rsp)
23b2(5): jmp 0xfffffe36(%rip)
23b7(9): nop 0x0(%rax,%rax,1)
23c0(3): xor %r10d,%r10d
23c3(4): mov 0x8(%rsp),%eax
23c7(3): cmp $0x2,%eax
23ca(6): jz 0x5be(%rip)
23d0(3): cmp $0x5,%eax
23d3(6): jz 0x575(%rip)
23d9(3): cmp $0x2,%eax
23dc(5): mov $0x3f,%ebx
23e1(3): setz %dl
23e4(3): xor %r12d,%r12d
23e7(2): xor %eax,%eax
23e9(5): jmp 0xffffff3f(%rip)
23ee(2): nop 
23f0(3): xor %r10d,%r10d
23f3(5): cmp $0x2,0x8(%rsp)
23f8(6): jz 0x508(%rip)
23fe(5): mov %r12b,0x7c(%rsp)
2403(2): xor %edx,%edx
2405(2): xor %eax,%eax
2407(5): mov $0x27,%ebx
240c(5): jmp 0xffffff1c(%rip)
2411(7): nop 0x0(%rax)
2418(5): mov $0x9,%edx
241d(5): mov $0x74,%ebx
2422(5): cmp $0x2,0x8(%rsp)
2427(3): setz %al
242a(4): and 0xf(%rsp),%al
242e(6): jnz 0x150(%rip)
2434(5): cmp $0x0,0xd(%rsp)
2439(2): jnz 0x67(%rip)
243b(2): mov %edx,%ebx
243d(3): xor %r12d,%r12d
2440(2): xor %eax,%eax
2442(5): cmp $0x0,0xf(%rsp)
2447(6): jnz 0xfffffef4(%rip)
244d(5): jmp 0xffffff0c(%rip)
2452(6): nop 0x0(%rax,%rax,1)
2458(5): mov $0x8,%edx
245d(5): mov $0x62,%ebx
2462(2): jmp 0xffffffd2(%rip)
2464(4): nop 0x0(%rax)
2468(5): cmp $0x2,0x8(%rsp)
246d(6): jz 0x3d3(%rip)
2473(5): cmp $0x0,0xd(%rsp)
2478(6): jz 0x218(%rip)
247e(5): cmp $0x0,0xf(%rsp)
2483(6): jz 0x20d(%rip)
2489(6): cmp $0x0,0x18(%rsp)
248f(6): jnz 0x3bc(%rip)
2495(5): mov $0x5c,%ebx
249a(6): nop 0x0(%rax,%rax,1)
24a0(3): xor %r12d,%r12d
24a3(5): cmp $0x2,0x8(%rsp)
24a8(3): setz %dl
24ab(5): cmp $0x0,0xf(%rsp)
24b0(2): mov %edx,%eax
24b2(6): jnz 0x856(%rip)
24b8(3): mov %r8d,%eax
24bb(3): xor $0x1,%eax
24be(2): and %dl,%al
24c0(2): jz 0x31(%rip)
24c2(3): cmp %r15,%r13
24c5(2): jbe 0x7(%rip)
24c7(5): mov $0x27,0x0(%r14,%r15,1)
24cc(4): lea 0x1(%r15),%rdx
24d0(3): cmp %rdx,%r13
24d3(2): jbe 0x8(%rip)
24d5(6): mov $0x24,0x1(%r14,%r15,1)
24db(4): lea 0x2(%r15),%rdx
24df(3): cmp %rdx,%r13
24e2(2): jbe 0x8(%rip)
24e4(6): mov $0x27,0x2(%r14,%r15,1)
24ea(4): add $0x3,%r15
24ee(3): mov %eax,%r8d
24f1(3): cmp %r15,%r13
24f4(2): jbe 0x7(%rip)
24f6(5): mov $0x5c,0x0(%r14,%r15,1)
24fb(4): add $0x1,%r15
24ff(4): add $0x1,%rbp
2503(5): jmp 0xfffffe8d(%rip)
2508(8): nop 0x0(%rax,%rax,1)
2510(5): cmp $0x0,0xd(%rsp)
2515(6): jnz 0x1ce(%rip)
251b(2): xor %edx,%edx
251d(5): test $0x1,0x78(%rsp)
2522(6): jz 0xffffff19(%rip)
2528(4): add $0x1,%rbp
252c(5): jmp 0xfffffcbc(%rip)
2531(7): nop 0x0(%rax)
2538(5): cmp $0x2,0x8(%rsp)
253d(3): setz %dl
2540(2): xor %eax,%eax
2542(5): jmp 0xfffffde6(%rip)
2547(9): nop 0x0(%rax,%rax,1)
2550(5): mov $0x7,%edx
2555(5): mov $0x61,%ebx
255a(5): jmp 0xfffffeda(%rip)
255f(1): nop 
2560(5): cmp $0x2,0x8(%rsp)
2565(3): setz %dl
2568(3): test %rbp,%rbp
256b(6): jnz 0xfffffdb1(%rip)
2571(5): movzx 0xf(%rsp),%eax
2576(2): and %dl,%al
2578(6): jz 0xfffffdb0(%rip)
257e(3): mov %r11,%rbp
2581(8): mov $0x2,0x8(%rsp)
2589(5): jmp 0x700(%rip)
258e(2): nop 
2590(5): cmp $0x2,0x8(%rsp)
2595(3): setz %dl
2598(3): xor %r12d,%r12d
259b(2): jmp 0xffffffd6(%rip)
259d(3): nop (%rax)
25a0(5): cmp $0x2,0x8(%rsp)
25a5(5): mov $0x20,%ebx
25aa(3): setz %dl
25ad(2): jmp 0xffffffc4(%rip)
25af(1): nop 
25b0(5): mov $0xd,%edx
25b5(5): mov $0x72,%ebx
25ba(5): jmp 0xfffffe68(%rip)
25bf(1): nop 
25c0(5): mov $0xc,%edx
25c5(5): mov $0x66,%ebx
25ca(5): jmp 0xfffffe6a(%rip)
25cf(1): nop 
25d0(5): mov $0xb,%edx
25d5(5): mov $0x76,%ebx
25da(5): jmp 0xfffffe5a(%rip)
25df(1): nop 
25e0(5): mov $0xa,%edx
25e5(5): mov $0x6e,%ebx
25ea(5): jmp 0xfffffe38(%rip)
25ef(1): nop 
25f0(3): xor %r10d,%r10d
25f3(5): nop 0x0(%rax,%rax,1)
25f8(6): cmp $0x1,0x58(%rsp)
25fe(6): jnz 0x3aa(%rip)
2604(5): mov %r11,0x38(%rsp)
2609(5): mov %r8b,0x30(%rsp)
260e(5): mov %r10b,0x28(%rsp)
2613(5): call 0xffffefdd(%rip)
2618(3): mov (%rax),%rcx
261b(3): movzx %bl,%edx
261e(6): movzx 0x28(%rsp),%r10d
2624(6): movzx 0x30(%rsp),%r8d
262a(5): mov 0x38(%rsp),%r11
262f(5): mov $0x1,%edi
2634(4): movzx 0x0(%rcx,%rdx,2),%eax
2638(4): and $0x4000,%ax
263c(4): setnz %r12b
2640(3): setz %al
2643(4): and 0xd(%rsp),%al
2647(2): test %al,%al
2649(6): jnz 0x998(%rip)
264f(5): cmp $0x2,0x8(%rsp)
2654(3): setz %dl
2657(5): jmp 0xfffffcd1(%rip)
265c(4): nop 0x0(%rax)
2660(4): movzx (%r9),%ebx
2664(3): cmp $0x7e,%bl
2667(2): jnbe 0xffffff89(%rip)
2669(7): lea 0x30f8(%rip),%rcx
2670(3): movzx %bl,%edx
2673(4): movsxd 0x0(%rcx,%rdx,4),%rax
2677(3): add %rcx,%rax
267a(2): jmp %rax
267c(4): nop 0x0(%rax)
2680(3): xor %r10d,%r10d
2683(5): cmp $0x0,0xd(%rsp)
2688(6): jnz 0xfffffdf6(%rip)
268e(2): nop 
2690(5): mov $0x5c,%edx
2695(5): mov $0x5c,%ebx
269a(5): jmp 0xfffffd9a(%rip)
269f(1): nop 
26a0(5): mov $0xc,%edx
26a5(3): xor %r10d,%r10d
26a8(5): mov $0x66,%ebx
26ad(5): jmp 0xfffffd87(%rip)
26b2(6): nop 0x0(%rax,%rax,1)
26b8(5): mov $0xa,%edx
26bd(3): xor %r10d,%r10d
26c0(5): mov $0x6e,%ebx
26c5(5): jmp 0xfffffd5d(%rip)
26ca(6): nop 0x0(%rax,%rax,1)
26d0(5): mov $0x61,%ebx
26d5(5): jmp 0xfffffdcb(%rip)
26da(6): nop 0x0(%rax,%rax,1)
26e0(3): xor %r10d,%r10d
26e3(5): cmp $0x2,0x8(%rsp)
26e8(3): setz %dl
26eb(5): cmp $0x0,0xf(%rsp)
26f0(6): jnz 0xb9a(%rip)
26f6(3): mov %r8d,%eax
26f9(3): mov %r15,%rcx
26fc(3): xor $0x1,%eax
26ff(2): and %dl,%al
2701(2): jz 0x2f(%rip)
2703(3): cmp %r15,%r13
2706(2): jbe 0x7(%rip)
2708(5): mov $0x27,0x0(%r14,%r15,1)
270d(4): lea 0x1(%r15),%rcx
2711(3): cmp %rcx,%r13
2714(2): jbe 0x8(%rip)
2716(6): mov $0x24,0x1(%r14,%r15,1)
271c(4): lea 0x2(%r15),%rcx
2720(3): cmp %rcx,%r13
2723(6): jnbe 0x636(%rip)
2729(4): lea 0x3(%r15),%rcx
272d(3): mov %eax,%r8d
2730(3): cmp %rcx,%r13
2733(2): jbe 0x7(%rip)
2735(5): mov $0x5c,0x0(%r14,%rcx,1)
273a(5): cmp $0x2,0x8(%rsp)
273f(4): lea 0x1(%rcx),%r15
2743(6): jz 0x606(%rip)
2749(4): lea 0x1(%rbp),%rax
274d(3): cmp %r11,%rax
2750(2): jnb 0x1b(%rip)
2752(5): mov 0x10(%rsp),%rax
2757(5): movzx 0x1(%rax,%rbp,1),%eax
275c(4): mov %al,0x28(%rsp)
2760(3): sub $0x30,%eax
2763(2): cmp $0x9,%al
2765(6): jbe 0x834(%rip)
276b(3): mov %r12d,%eax
276e(5): mov $0x30,%ebx
2773(3): xor %r12d,%r12d
2776(5): jmp 0xfffffbb2(%rip)
277b(5): nop 0x0(%rax,%rax,1)
2780(5): cmp $0x2,0x8(%rsp)
2785(3): mov %r10d,%r12d
2788(3): setz %dl
278b(3): xor %r10d,%r10d
278e(2): xor %eax,%eax
2790(5): jmp 0xfffffb98(%rip)
2795(3): nop (%rax)
2798(5): cmp $0x2,0x8(%rsp)
279d(3): setz %dl
27a0(3): xor %r10d,%r10d
27a3(5): jmp 0xfffffdc5(%rip)
27a8(8): nop 0x0(%rax,%rax,1)
27b0(5): cmp $0x2,0x8(%rsp)
27b5(3): setz %dl
27b8(3): xor %r10d,%r10d
27bb(3): xor %r12d,%r12d
27be(5): jmp 0xfffffdb3(%rip)
27c3(5): nop 0x0(%rax,%rax,1)
27c8(5): cmp $0x2,0x8(%rsp)
27cd(3): mov %r10d,%r12d
27d0(5): mov $0x20,%ebx
27d5(3): setz %dl
27d8(3): xor %r10d,%r10d
27db(5): jmp 0xfffffd96(%rip)
27e0(5): mov $0xd,%edx
27e5(3): xor %r10d,%r10d
27e8(5): mov $0x72,%ebx
27ed(5): jmp 0xfffffc35(%rip)
27f2(6): nop 0x0(%rax,%rax,1)
27f8(5): mov $0x76,%ebx
27fd(5): jmp 0xfffffca3(%rip)
2802(6): nop 0x0(%rax,%rax,1)
2808(5): mov $0x9,%edx
280d(3): xor %r10d,%r10d
2810(5): mov $0x74,%ebx
2815(5): jmp 0xfffffc0d(%rip)
281a(6): nop 0x0(%rax,%rax,1)
2820(5): mov $0x62,%ebx
2825(5): jmp 0xfffffc7b(%rip)
282a(6): nop 0x0(%rax,%rax,1)
2830(3): xor %r10d,%r10d
2833(5): jmp 0xfffffa9d(%rip)
2838(8): nop 0x0(%rax,%rax,1)
2840(5): cmp $0x0,0xf(%rsp)
2845(6): jnz 0x96b(%rip)
284b(4): add $0x1,%rbp
284f(3): mov %r8d,%eax
2852(3): xor %r12d,%r12d
2855(5): mov $0x5c,%ebx
285a(5): jmp 0xfffffb12(%rip)
285f(1): nop 
2860(5): cmp $0x2,0x8(%rsp)
2865(5): movzx 0xf(%rsp),%ebx
286a(3): mov %r8d,%r12d
286d(3): mov %r11,%rbp
2870(3): setz %dl
2873(2): mov %ebx,%eax
2875(3): test %r15,%r15
2878(3): setz %cl
287b(2): and %edx,%eax
287d(2): and %cl,%al
287f(6): jnz 0xa67(%rip)
2885(2): mov %ebx,%eax
2887(3): xor $0x1,%eax
288a(2): and %al,%dl
288c(6): jz 0x970(%rip)
2892(5): cmp $0x0,0x7c(%rsp)
2897(6): jz 0x963(%rip)
289d(5): cmp $0x0,0xe(%rsp)
28a2(6): jnz 0x9fb(%rip)
28a8(3): test %r13,%r13
28ab(3): setz %al
28ae(6): cmp $0x0,0x50(%rsp)
28b4(3): setnz %dl
28b7(2): and %dl,%al
28b9(6): jz 0xa23(%rip)
28bf(5): mov 0x50(%rsp),%r13
28c4(7): lea 0x2c22(%rip),%rbx
28cb(4): mov $0x27,(%r14)
28cf(8): mov $0x2,0x8(%rsp)
28d7(6): mov $0x1,%r15d
28dd(9): mov $0x1,0x18(%rsp)
28e6(5): mov $0x0,0xf(%rsp)
28eb(5): mov %rbx,0x48(%rsp)
28f0(4): mov %al,0x7c(%rsp)
28f4(5): jmp 0xfffff8df(%rip)
28f9(7): nop 0x0(%rax)
2900(5): cmp $0x0,0xf(%rsp)
2905(6): jnz 0x8ab(%rip)
290b(3): test %r13,%r13
290e(6): jz 0x402(%rip)
2914(2): xor %edx,%edx
2916(6): cmp $0x0,0x50(%rsp)
291c(6): jnz 0x3f4(%rip)
2922(5): mov %r13,0x50(%rsp)
2927(4): add $0x3,%r15
292b(2): xor %eax,%eax
292d(5): mov %r12b,0x7c(%rsp)
2932(3): xor %r8d,%r8d
2935(3): mov %rdx,%r13
2938(5): mov $0x27,%ebx
293d(5): jmp 0xfffffa1c(%rip)
2942(6): nop 0x0(%rax,%rax,1)
2948(5): test $0x4,0x78(%rsp)
294d(2): jz 0x23(%rip)
294f(4): lea 0x2(%rbp),%rcx
2953(3): cmp %r11,%rcx
2956(2): jnb 0x1a(%rip)
2958(5): mov 0x10(%rsp),%rax
295d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2962(6): jz 0x790(%rip)
2968(8): nop 0x0(%rax,%rax,1)
2970(2): xor %edx,%edx
2972(3): xor %r12d,%r12d
2975(2): xor %eax,%eax
2977(5): mov $0x3f,%ebx
297c(5): jmp 0xfffff9ac(%rip)
2981(7): nop 0x0(%rax)
2988(5): cmp $0x0,0xf(%rsp)
298d(6): jnz 0x823(%rip)
2993(3): xor %r12d,%r12d
2996(2): xor %eax,%eax
2998(5): mov $0x3f,%ebx
299d(5): jmp 0xfffff9bc(%rip)
29a2(6): nop 0x0(%rax,%rax,1)
29a8(8): lea 0xa0(%rsp),%rax
29b0(4): cmp $0xffffffff,%r11
29b4(c): mov $0x0,0xa0(%rsp)
29c0(5): mov %rax,0x28(%rsp)
29c5(2): jnz 0x2f(%rip)
29c7(5): mov 0x10(%rsp),%rdi
29cc(5): mov %r8b,0x40(%rsp)
29d1(5): mov %r10b,0x38(%rsp)
29d6(5): mov %r9,0x30(%rsp)
29db(5): call 0xffffea15(%rip)
29e0(6): movzx 0x40(%rsp),%r8d
29e6(6): movzx 0x38(%rsp),%r10d
29ec(3): mov %rax,%r11
29ef(5): mov 0x30(%rsp),%r9
29f4(8): lea 0x9c(%rsp),%rax
29fc(2): xor %ecx,%ecx
29fe(4): mov %bl,0x7e(%rsp)
2a02(5): mov %r8b,0x7d(%rsp)
2a07(3): mov %rcx,%rbx
2a0a(8): mov %r9,0x88(%rsp)
2a12(5): mov %rax,0x38(%rsp)
2a17(5): mov %r10b,0x7f(%rsp)
2a1c(8): mov %r15,0x80(%rsp)
2a24(5): mov %r14,0x40(%rsp)
2a29(5): mov %r13,0x70(%rsp)
2a2e(5): mov %r11,0x30(%rsp)
2a33(5): mov 0x10(%rsp),%rax
2a38(5): lea 0x0(%rbp,%rbx,1),%r14
2a3d(5): mov 0x30(%rsp),%rdx
2a42(5): mov 0x28(%rsp),%rcx
2a47(5): mov 0x38(%rsp),%rdi
2a4c(4): lea 0x0(%rax,%r14,1),%r13
2a50(3): sub %r14,%rdx
2a53(3): mov %r13,%rsi
2a56(5): call 0x21ba(%rip)
2a5b(3): test %rax,%rax
2a5e(3): mov %rax,%r15
2a61(2): jz 0x50(%rip)
2a63(4): cmp $0xffffffff,%rax
2a67(6): jz 0x61e(%rip)
2a6d(4): cmp $0xfffffffe,%rax
2a71(6): jz 0x5a0(%rip)
2a77(5): cmp $0x2,0x8(%rsp)
2a7c(3): setz %al
2a7f(4): and 0xf(%rsp),%al
2a83(6): jnz 0x19d(%rip)
2a89(7): mov 0x9c(%rsp),%edi
2a90(5): call 0xffffeb50(%rip)
2a95(5): mov 0x28(%rsp),%rdi
2a9a(2): test %eax,%eax
2a9c(5): mov $0x0,%eax
2aa1(4): cmove %eax,%r12d
2aa5(3): add %r15,%rbx
2aa8(5): call 0xffffeb28(%rip)
2aad(2): test %eax,%eax
2aaf(2): jz 0xffffff84(%rip)
2ab1(3): mov %r12d,%edx
2ab4(3): mov %rbx,%rdi
2ab7(6): movzx 0x7d(%rsp),%r8d
2abd(3): xor $0x1,%edx
2ac0(5): movzx 0x7e(%rsp),%ebx
2ac5(6): movzx 0x7f(%rsp),%r10d
2acb(4): and 0xd(%rsp),%dl
2acf(8): mov 0x80(%rsp),%r15
2ad7(5): mov 0x40(%rsp),%r14
2adc(5): mov 0x70(%rsp),%r13
2ae1(5): mov 0x30(%rsp),%r11
2ae6(4): cmp $0x1,%rdi
2aea(6): jbe 0x601(%rip)
2af0(3): mov %rdi,%rcx
2af3(2): xor %esi,%esi
2af5(6): movzx 0xf(%rsp),%r9d
2afb(3): add %rbp,%rcx
2afe(5): mov 0x10(%rsp),%rdi
2b03(5): jmp 0xbb(%rip)
2b08(8): nop 0x0(%rax,%rax,1)
2b10(5): cmp $0x2,0x8(%rsp)
2b15(3): setz %al
2b18(3): test %r9b,%r9b
2b1b(6): jnz 0x4b5(%rip)
2b21(3): mov %r8d,%esi
2b24(3): xor $0x1,%esi
2b27(3): and %sil,%al
2b2a(2): jz 0x31(%rip)
2b2c(3): cmp %r15,%r13
2b2f(2): jbe 0x7(%rip)
2b31(5): mov $0x27,0x0(%r14,%r15,1)
2b36(4): lea 0x1(%r15),%rsi
2b3a(3): cmp %rsi,%r13
2b3d(2): jbe 0x8(%rip)
2b3f(6): mov $0x24,0x1(%r14,%r15,1)
2b45(4): lea 0x2(%r15),%rsi
2b49(3): cmp %rsi,%r13
2b4c(2): jbe 0x8(%rip)
2b4e(6): mov $0x27,0x2(%r14,%r15,1)
2b54(4): add $0x3,%r15
2b58(3): mov %eax,%r8d
2b5b(3): cmp %r15,%r13
2b5e(2): jbe 0x7(%rip)
2b60(5): mov $0x5c,0x0(%r14,%r15,1)
2b65(4): lea 0x1(%r15),%rax
2b69(3): cmp %rax,%r13
2b6c(2): jbe 0xf(%rip)
2b6e(2): mov %ebx,%eax
2b70(3): shr $0x6,%al
2b73(3): add $0x30,%eax
2b76(5): mov %al,0x1(%r14,%r15,1)
2b7b(4): lea 0x2(%r15),%rax
2b7f(3): cmp %rax,%r13
2b82(2): jbe 0x12(%rip)
2b84(2): mov %ebx,%eax
2b86(3): shr $0x3,%al
2b89(3): and $0x7,%eax
2b8c(3): add $0x30,%eax
2b8f(5): mov %al,0x2(%r14,%r15,1)
2b94(3): and $0x7,%ebx
2b97(4): add $0x1,%rbp
2b9b(4): add $0x3,%r15
2b9f(3): add $0x30,%ebx
2ba2(3): cmp %rcx,%rbp
2ba5(6): jnb 0xfffff7eb(%rip)
2bab(2): mov %edx,%esi
2bad(3): cmp %r15,%r13
2bb0(2): jbe 0x6(%rip)
2bb2(4): mov %bl,0x0(%r14,%r15,1)
2bb6(4): movzx 0x0(%rdi,%rbp,1),%ebx
2bba(4): add $0x1,%r15
2bbe(2): test %dl,%dl
2bc0(6): jnz 0xffffff50(%rip)
2bc6(2): mov %esi,%eax
2bc8(3): xor $0x1,%eax
2bcb(3): and %r8d,%eax
2bce(3): test %r10b,%r10b
2bd1(2): jz 0x10(%rip)
2bd3(3): cmp %r15,%r13
2bd6(2): jbe 0x7(%rip)
2bd8(5): mov $0x5c,0x0(%r14,%r15,1)
2bdd(4): add $0x1,%r15
2be1(4): add $0x1,%rbp
2be5(3): cmp %rcx,%rbp
2be8(6): jnb 0xfffff784(%rip)
2bee(2): test %al,%al
2bf0(6): jz 0x3fe(%rip)
2bf6(3): cmp %r15,%r13
2bf9(2): jbe 0x7(%rip)
2bfb(5): mov $0x27,0x0(%r14,%r15,1)
2c00(4): lea 0x1(%r15),%rax
2c04(3): cmp %rax,%r13
2c07(2): jbe 0x8(%rip)
2c09(6): mov $0x27,0x1(%r14,%r15,1)
2c0f(4): add $0x2,%r15
2c13(3): xor %r10d,%r10d
2c16(3): xor %r8d,%r8d
2c19(2): jmp 0xffffff94(%rip)
2c1b(5): nop 0x0(%rax,%rax,1)
2c20(4): cmp $0x1,%r15
2c24(6): jz 0xfffffe65(%rip)
2c2a(5): mov 0x10(%rsp),%rdi
2c2f(4): lea 0x0(%rdi,%r15,1),%rcx
2c33(5): lea 0x1(%rdi,%r14,1),%rdx
2c38(4): lea 0x0(%rcx,%r14,1),%r8
2c3c(2): jmp 0x11(%rip)
2c3e(2): nop 
2c40(4): add $0x1,%rdx
2c44(3): cmp %rdx,%r8
2c47(6): jz 0xfffffe42(%rip)
2c4d(3): movzx (%rdx),%ecx
2c50(3): sub $0x5b,%ecx
2c53(3): cmp $0x21,%cl
2c56(2): jnbe 0xffffffea(%rip)
2c58(5): mov $0x1,%esi
2c5d(3): shl/sal %cl,%rsi
2c60(3): mov %rsi,%rcx
2c63(a): mov $0x8589934635,%rsi
2c6d(3): test %rsi,%rcx
2c70(2): jz 0xffffffd0(%rip)
2c72(5): mov 0x40(%rsp),%r14
2c77(5): mov 0x70(%rsp),%r13
2c7c(5): mov 0x30(%rsp),%rbp
2c81(8): mov $0x2,0x8(%rsp)
2c89(5): cmp $0x0,0xd(%rsp)
2c8e(2): jz 0x12(%rip)
2c90(2): test %al,%al
2c92(5): mov $0x4,%eax
2c97(5): cmove 0x8(%rsp),%eax
2c9c(4): mov %eax,0x8(%rsp)
2ca0(4): sub $0x8,%rsp
2ca4(3): mov %rbp,%rcx
2ca7(3): mov %r13,%rsi
2caa(4): push 0x68(%rsp)
2cae(4): push 0x78(%rsp)
2cb2(3): mov %r14,%rdi
2cb5(2): push $0x0
2cb7(8): mov 0x98(%rsp),%r9d
2cbf(5): mov 0x28(%rsp),%r8d
2cc4(5): mov 0x30(%rsp),%rdx
2cc9(4): and $0xfd,%r9d
2ccd(5): call 0xfffff433(%rip)
2cd2(4): add $0x20,%rsp
2cd6(3): mov %rax,%r15
2cd9(8): mov 0xa8(%rsp),%rbx
2ce1(9): xor $0x28,%rbx
2cea(3): mov %r15,%rax
2ced(6): jnz 0x606(%rip)
2cf3(7): add $0xb8,%rsp
2cfa(1): pop %rbx
2cfb(1): pop %rbp
2cfc(2): pop %r12
2cfe(2): pop %r13
2d00(2): pop %r14
2d02(2): pop %r15
2d04(1): ret near (%rsp)
2d05(3): nop (%rax)
2d08(3): mov %r11,%rbp
2d0b(5): jmp 0xffffff7e(%rip)
2d10(3): cmp %r15,%r13
2d13(2): jbe 0x7(%rip)
2d15(5): mov $0x27,0x0(%r14,%r15,1)
2d1a(4): lea 0x1(%r15),%rax
2d1e(3): cmp %rax,%r13
2d21(2): jbe 0x8(%rip)
2d23(6): mov $0x5c,0x1(%r14,%r15,1)
2d29(4): lea 0x2(%r15),%rax
2d2d(3): cmp %rax,%r13
2d30(6): jbe 0x5f2(%rip)
2d36(3): mov %r13,%rdx
2d39(6): mov $0x27,0x2(%r14,%r15,1)
2d3f(5): mov 0x50(%rsp),%r13
2d44(5): jmp 0xfffffbde(%rip)
2d49(3): mov %r12d,%eax
2d4c(5): mov $0x30,%ebx
2d51(3): xor %r12d,%r12d
2d54(5): jmp 0xfffff605(%rip)
2d59(6): mov $0x27,0x2(%r14,%r15,1)
2d5f(5): jmp 0xfffff9ca(%rip)
2d64(2): test %ebx,%ebx
2d66(6): jnz 0xfffff42d(%rip)
2d6c(5): mov $0x1,0xd(%rsp)
2d71(3): test %r13,%r13
2d74(6): jnz 0x596(%rip)
2d7a(7): lea 0x276c(%rip),%rax
2d81(9): mov $0x0,0x50(%rsp)
2d8a(5): mov $0x1,0xe(%rsp)
2d8f(5): mov $0x0,0x7c(%rsp)
2d94(3): xor %r12d,%r12d
2d97(5): mov $0x0,0xf(%rsp)
2d9c(9): mov $0x1,0x18(%rsp)
2da5(5): mov %rax,0x48(%rsp)
2daa(6): mov $0x1,%r15d
2db0(8): mov $0x2,0x8(%rsp)
2db8(5): jmp 0xfffff41b(%rip)
2dbd(3): nop (%rax)
2dc0(2): test %ebx,%ebx
2dc2(6): jnz 0x3fb(%rip)
2dc8(3): test %r13,%r13
2dcb(6): jz 0x22b(%rip)
2dd1(4): mov $0x22,(%r14)
2dd5(5): mov $0x1,0xe(%rsp)
2dda(3): xor %r12d,%r12d
2ddd(5): mov $0x0,0x7c(%rsp)
2de2(9): mov $0x0,0x50(%rsp)
2deb(7): lea 0x26f9(%rip),%rax
2df2(5): mov $0x0,0xf(%rsp)
2df7(5): mov $0x1,0xd(%rsp)
2dfc(9): mov $0x1,0x18(%rsp)
2e05(6): mov $0x1,%r15d
2e0b(5): mov %rax,0x48(%rsp)
2e10(5): jmp 0xfffff3c3(%rip)
2e15(7): lea 0x26cf(%rip),%rax
2e1c(5): mov $0x1,0xe(%rsp)
2e21(5): mov $0x0,0x7c(%rsp)
2e26(3): xor %r12d,%r12d
2e29(9): mov $0x0,0x50(%rsp)
2e32(5): mov $0x1,0xf(%rsp)
2e37(5): mov $0x1,0xd(%rsp)
2e3c(9): mov $0x1,0x18(%rsp)
2e45(3): xor %r15d,%r15d
2e48(5): mov %rax,0x48(%rsp)
2e4d(8): mov $0x5,0x8(%rsp)
2e55(5): jmp 0xfffff37e(%rip)
2e5a(5): mov $0x1,0xe(%rsp)
2e5f(5): mov $0x0,0x7c(%rsp)
2e64(3): xor %r12d,%r12d
2e67(9): mov $0x0,0x50(%rsp)
2e70(5): mov $0x0,0xf(%rsp)
2e75(3): xor %r15d,%r15d
2e78(5): mov $0x1,0xd(%rsp)
2e7d(9): mov $0x0,0x18(%rsp)
2e86(9): mov $0x0,0x48(%rsp)
2e8f(5): jmp 0xfffff344(%rip)
2e94(5): cmp $0xa,0x8(%rsp)
2e99(2): jz 0x58(%rip)
2e9b(7): lea 0x264d(%rip),%rsi
2ea2(2): xor %edi,%edi
2ea4(5): mov $0x5,%edx
2ea9(5): call 0xffffe527(%rip)
2eae(3): mov %rax,%rcx
2eb1(5): mov %rax,0x68(%rsp)
2eb6(7): lea 0x2632(%rip),%rax
2ebd(3): cmp %rax,%rcx
2ec0(6): jz 0x39e(%rip)
2ec6(7): lea 0x2620(%rip),%rsi
2ecd(2): xor %edi,%edi
2ecf(5): mov $0x5,%edx
2ed4(5): call 0xffffe4fc(%rip)
2ed9(3): mov %rax,%rcx
2edc(5): mov %rax,0x60(%rsp)
2ee1(7): lea 0x2605(%rip),%rax
2ee8(3): cmp %rax,%rcx
2eeb(6): jz 0x389(%rip)
2ef1(3): xor %r15d,%r15d
2ef4(2): test %ebx,%ebx
2ef6(6): jz 0x1c7(%rip)
2efc(2): test %ebx,%ebx
2efe(5): mov 0x60(%rsp),%rbx
2f03(5): setnz 0xf(%rsp)
2f08(3): xor %r12d,%r12d
2f0b(3): mov %rbx,%rdi
2f0e(5): call 0xffffe4e2(%rip)
2f13(5): mov %rbx,0x48(%rsp)
2f18(5): mov %rax,0x18(%rsp)
2f1d(5): mov $0x1,0xe(%rsp)
2f22(5): mov $0x0,0x7c(%rsp)
2f27(9): mov $0x0,0x50(%rsp)
2f30(5): mov $0x1,0xd(%rsp)
2f35(5): jmp 0xfffff29e(%rip)
2f3a(5): mov $0x1,0xe(%rsp)
2f3f(5): mov $0x0,0x7c(%rsp)
2f44(3): xor %r12d,%r12d
2f47(9): mov $0x0,0x50(%rsp)
2f50(5): mov $0x0,0xf(%rsp)
2f55(3): xor %r15d,%r15d
2f58(5): mov $0x0,0xd(%rsp)
2f5d(9): mov $0x0,0x18(%rsp)
2f66(9): mov $0x0,0x48(%rsp)
2f6f(5): jmp 0xfffff264(%rip)
2f74(5): mov $0x1,0xe(%rsp)
2f79(5): mov $0x0,0x7c(%rsp)
2f7e(3): xor %r12d,%r12d
2f81(9): mov $0x0,0x50(%rsp)
2f8a(5): mov $0x1,0xf(%rsp)
2f8f(5): mov $0x1,0xd(%rsp)
2f94(5): jmp 0xfffff21f(%rip)
2f99(3): cmp %r15,%r13
2f9c(2): jbe 0x7(%rip)
2f9e(5): mov $0x30,0x0(%r14,%r15,1)
2fa3(4): lea 0x2(%rcx),%rax
2fa7(3): cmp %rax,%r13
2faa(2): jbe 0x8(%rip)
2fac(6): mov $0x30,0x2(%r14,%rcx,1)
2fb2(3): mov %r12d,%eax
2fb5(4): lea 0x3(%rcx),%r15
2fb9(3): xor %r12d,%r12d
2fbc(5): mov $0x30,%ebx
2fc1(5): jmp 0xfffff367(%rip)
2fc6(a): nop 0x0(%rax,%rax,1)
2fd0(5): movzx 0xf(%rsp),%ebx
2fd5(3): mov %r11,%rbp
2fd8(4): mov %bl,0xd(%rsp)
2fdc(5): jmp 0xfffffcad(%rip)
2fe1(5): movzx 0xd(%rsp),%edx
2fe6(3): xor %r12d,%r12d
2fe9(5): jmp 0xfffffb07(%rip)
2fee(3): xor %r10d,%r10d
2ff1(5): jmp 0xfffffbbc(%rip)
2ff6(9): mov $0x0,0x50(%rsp)
2fff(5): mov $0x1,0xe(%rsp)
3004(3): xor %r12d,%r12d
3007(5): mov $0x0,0x7c(%rsp)
300c(5): jmp 0xfffffddf(%rip)
3011(5): mov 0x30(%rsp),%r11
3016(3): mov %r14,%rsi
3019(3): mov %r13,%rcx
301c(3): mov %rbx,%rax
301f(3): mov %rbx,%rdi
3022(6): movzx 0x7d(%rsp),%r8d
3028(5): movzx 0x7e(%rsp),%ebx
302d(8): mov 0x88(%rsp),%r9
3035(3): cmp %r11,%rsi
3038(6): movzx 0x7f(%rsp),%r10d
303e(8): mov 0x80(%rsp),%r15
3046(5): mov 0x40(%rsp),%r14
304b(5): mov 0x70(%rsp),%r13
3050(2): jnb 0x28(%rip)
3052(3): cmp $0x0,(%rcx)
3055(2): jnz 0x12(%rip)
3057(2): jmp 0x21(%rip)
3059(7): nop 0x0(%rax)
3060(5): cmp $0x0,0x0(%r9,%rax,1)
3065(2): jz 0x10(%rip)
3067(4): add $0x1,%rax
306b(5): lea 0x0(%rbp,%rax,1),%rdx
3070(3): cmp %rdx,%r11
3073(2): jnbe 0xffffffed(%rip)
3075(3): mov %rax,%rdi
3078(5): movzx 0xd(%rsp),%edx
307d(3): xor %r12d,%r12d
3080(5): jmp 0xfffffa66(%rip)
3085(3): mov %rbx,%rdi
3088(6): movzx 0x7d(%rsp),%r8d
308e(5): movzx 0x7e(%rsp),%ebx
3093(6): movzx 0x7f(%rsp),%r10d
3099(8): mov 0x80(%rsp),%r15
30a1(3): xor %r12d,%r12d
30a4(5): mov 0x40(%rsp),%r14
30a9(5): mov 0x70(%rsp),%r13
30ae(5): mov 0x30(%rsp),%r11
30b3(5): movzx 0xd(%rsp),%edx
30b8(5): jmp 0xfffffa2e(%rip)
30bd(5): mov 0x68(%rsp),%rdx
30c2(3): movzx (%rdx),%eax
30c5(2): test %al,%al
30c7(6): jz 0xfffffe35(%rip)
30cd(3): nop (%rax)
30d0(3): cmp %r15,%r13
30d3(2): jbe 0x6(%rip)
30d5(4): mov %al,0x0(%r14,%r15,1)
30d9(4): add $0x1,%r15
30dd(5): movzx 0x0(%rdx,%r15,1),%eax
30e2(2): test %al,%al
30e4(2): jnz 0xffffffec(%rip)
30e6(5): jmp 0xfffffe16(%rip)
30eb(2): mov %edx,%eax
30ed(5): jmp 0xfffff55a(%rip)
30f2(4): movzx 0x0(%rax,%rcx,1),%ebx
30f6(3): cmp $0x3e,%bl
30f9(6): jnbe 0xfffff877(%rip)
30ff(a): mov $0x8070630310989004800,%rax
3109(4): bt %rbx,%rax
310d(6): jnb 0xfffff863(%rip)
3113(5): cmp $0x0,0xf(%rsp)
3118(6): jnz 0x1ea(%rip)
311e(3): cmp %r15,%r13
3121(2): jbe 0x7(%rip)
3123(5): mov $0x3f,0x0(%r14,%r15,1)
3128(4): lea 0x1(%r15),%rax
312c(3): cmp %rax,%r13
312f(2): jbe 0x8(%rip)
3131(6): mov $0x22,0x1(%r14,%r15,1)
3137(4): lea 0x2(%r15),%rax
313b(3): cmp %rax,%r13
313e(2): jbe 0x8(%rip)
3140(6): mov $0x22,0x2(%r14,%r15,1)
3146(4): lea 0x3(%r15),%rax
314a(3): cmp %rax,%r13
314d(2): jbe 0x8(%rip)
314f(6): mov $0x3f,0x3(%r14,%r15,1)
3155(4): add $0x4,%r15
3159(2): xor %edx,%edx
315b(3): xor %r12d,%r12d
315e(2): xor %eax,%eax
3160(3): mov %rcx,%rbp
3163(5): jmp 0xfffff1c5(%rip)
3168(2): test %ebx,%ebx
316a(6): jz 0x18e(%rip)
3170(7): lea 0x2376(%rip),%rax
3177(5): mov $0x1,0xe(%rsp)
317c(5): mov $0x0,0x7c(%rsp)
3181(3): xor %r12d,%r12d
3184(9): mov $0x0,0x50(%rsp)
318d(5): mov $0x1,0xf(%rsp)
3192(5): mov $0x0,0xd(%rsp)
3197(9): mov $0x1,0x18(%rsp)
31a0(3): xor %r15d,%r15d
31a3(5): mov %rax,0x48(%rsp)
31a8(5): jmp 0xfffff02b(%rip)
31ad(3): nop (%rax)
31b0(3): mov %r11,%rbp
31b3(5): movzx 0xf(%rsp),%eax
31b8(5): jmp 0xfffffad1(%rip)
31bd(7): lea 0x2327(%rip),%rax
31c4(5): mov $0x1,0xe(%rsp)
31c9(5): mov $0x0,0x7c(%rsp)
31ce(3): xor %r12d,%r12d
31d1(9): mov $0x0,0x50(%rsp)
31da(5): mov $0x1,0xf(%rsp)
31df(5): mov $0x1,0xd(%rsp)
31e4(9): mov $0x1,0x18(%rsp)
31ed(3): xor %r15d,%r15d
31f0(5): mov %rax,0x48(%rsp)
31f5(5): jmp 0xffffefde(%rip)
31fa(2): mov %edx,%eax
31fc(5): mov 0x48(%rsp),%rbx
3201(3): test %rbx,%rbx
3204(2): jz 0x2e(%rip)
3206(2): test %al,%al
3208(2): jz 0x2a(%rip)
320a(3): movzx (%rbx),%ecx
320d(3): mov %rbx,%rax
3210(2): test %cl,%cl
3212(2): jz 0x20(%rip)
3214(3): mov %r15,%rdx
3217(3): sub %r15,%rax
321a(3): cmp %rdx,%r13
321d(2): jbe 0x6(%rip)
321f(4): mov %cl,0x0(%r14,%rdx,1)
3223(4): add $0x1,%rdx
3227(4): movzx 0x0(%rax,%rdx,1),%ecx
322b(2): test %cl,%cl
322d(2): jnz 0xffffffed(%rip)
322f(3): mov %rdx,%r15
3232(3): cmp %r15,%r13
3235(6): jbe 0xfffffaa4(%rip)
323b(5): mov $0x0,0x0(%r14,%r15,1)
3240(5): jmp 0xfffffa99(%rip)
3245(5): cmp $0x2,0x8(%rsp)
324a(5): movzx 0xf(%rsp),%ebx
324f(3): mov %r11,%rbp
3252(3): setz %al
3255(4): mov %bl,0xd(%rsp)
3259(5): jmp 0xfffffa30(%rip)
325e(4): mov 0x8(%rsp),%esi
3262(3): mov %rcx,%rdi
3265(5): call 0xffffedab(%rip)
326a(5): mov %rax,0x68(%rsp)
326f(5): jmp 0xfffffc57(%rip)
3274(4): mov 0x8(%rsp),%esi
3278(3): mov %rcx,%rdi
327b(5): call 0xffffed95(%rip)
3280(5): mov %rax,0x60(%rsp)
3285(5): jmp 0xfffffc6c(%rip)
328a(5): movzx 0xf(%rsp),%ebx
328f(3): mov %r11,%rbp
3292(2): mov %edx,%eax
3294(4): mov %bl,0xd(%rsp)
3298(5): jmp 0xfffff9f1(%rip)
329d(4): sub $0x8,%rsp
32a1(6): mov $0x5,%r8d
32a7(3): mov %r11,%rcx
32aa(4): push 0x68(%rsp)
32ae(4): push 0x78(%rsp)
32b2(3): mov %r14,%rdi
32b5(4): push 0x38(%rsp)
32b9(8): mov 0x98(%rsp),%r9d
32c1(5): mov 0x30(%rsp),%rdx
32c6(5): mov 0x70(%rsp),%rsi
32cb(5): call 0xffffee35(%rip)
32d0(4): add $0x20,%rsp
32d4(3): mov %rax,%r15
32d7(5): jmp 0xfffffa02(%rip)
32dc(5): movzx 0x7c(%rsp),%eax
32e1(5): jmp 0xffffff1b(%rip)
32e6(8): mov $0x2,0x8(%rsp)
32ee(5): jmp 0xfffff99b(%rip)
32f3(5): call 0xffffe10d(%rip)
32f8(5): mov $0x0,0xd(%rsp)
32fd(5): jmp 0xfffffa74(%rip)
3302(3): mov %r11,%rbp
3305(5): jmp 0xfffff99b(%rip)
330a(5): mov $0x1,0xe(%rsp)
330f(2): xor %eax,%eax
3311(3): xor %r12d,%r12d
3314(9): mov $0x0,0x50(%rsp)
331d(5): jmp 0xfffff5a7(%rip)
3322(3): mov %r13,%rdx
3325(5): mov 0x50(%rsp),%r13
332a(5): jmp 0xfffff5f8(%rip)
332f(5): call 0xffffe011(%rip)

"quotearg_n_options" :
3340(2): push %r15
3342(2): push %r14
3344(3): movsxd %edi,%r15
3347(2): push %r13
3349(2): push %r12
334b(3): mov %rdx,%r14
334e(1): push %rbp
334f(1): push %rbx
3350(3): mov %rcx,%rbp
3353(4): sub $0x28,%rsp
3357(5): mov %rsi,0x8(%rsp)
335c(5): call 0xffffdff4(%rip)
3361(3): mov %rax,%r13
3364(2): mov (%rax),%eax
3366(3): test %r15d,%r15d
3369(7): mov 0x204cf0(%rip),%rbx
3370(4): mov %eax,0x18(%rsp)
3374(6): js 0x16d(%rip)
337a(7): cmp %r15d,0x204cd7(%rip)
3381(2): jnle 0x64(%rip)
3383(7): cmp $0x7fffffff,%r15d
338a(6): jz 0x15c(%rip)
3390(4): lea 0x1(%r15),%r12d
3394(7): lea 0x204cd5(%rip),%rax
339b(3): movsxd %r12d,%rsi
339e(4): shl/sal $0x4,%rsi
33a2(3): cmp %rax,%rbx
33a5(6): jz 0x11b(%rip)
33ab(3): mov %rbx,%rdi
33ae(5): call 0xf72(%rip)
33b3(3): mov %rax,%rbx
33b6(7): mov %rax,0x204ca3(%rip)
33bd(7): movsxd 0x204c94(%rip),%rdi
33c4(3): mov %r12d,%edx
33c7(2): xor %esi,%esi
33c9(2): sub %edi,%edx
33cb(4): shl/sal $0x4,%rdi
33cf(3): movsxd %edx,%rdx
33d2(3): add %rbx,%rdi
33d5(4): shl/sal $0x4,%rdx
33d9(5): call 0xffffe0a7(%rip)
33de(7): mov %r12d,0x204c73(%rip)
33e5(3): mov 0x4(%rbp),%eax
33e8(4): shl/sal $0x4,%r15
33ec(4): sub $0x8,%rsp
33f0(3): add %r15,%rbx
33f3(4): lea 0x8(%rbp),%r15
33f7(4): mov 0x0(%rbp),%r8d
33fb(3): mov (%rbx),%r11
33fe(4): mov 0x8(%rbx),%r12
3402(3): mov %r14,%rcx
3405(3): or $0x1,%eax
3408(4): mov %eax,0x24(%rsp)
340c(3): push 0x30(%rbp)
340f(3): mov %eax,%r9d
3412(3): push 0x28(%rbp)
3415(2): push %r15
3417(3): mov %r11,%rsi
341a(5): mov 0x28(%rsp),%rdx
341f(3): mov %r12,%rdi
3422(5): mov %r11,0x30(%rsp)
3427(5): call 0xffffecd9(%rip)
342c(4): add $0x20,%rsp
3430(5): mov 0x10(%rsp),%r11
3435(3): cmp %rax,%r11
3438(2): jnbe 0x69(%rip)
343a(4): lea 0x1(%rax),%rsi
343e(7): lea 0x204cbb(%rip),%rax
3445(3): cmp %rax,%r12
3448(3): mov %rsi,(%rbx)
344b(2): jz 0x14(%rip)
344d(3): mov %r12,%rdi
3450(5): mov %rsi,0x10(%rsp)
3455(5): call 0xffffdedb(%rip)
345a(5): mov 0x10(%rsp),%rsi
345f(3): mov %rsi,%rdi
3462(5): mov %rsi,0x10(%rsp)
3467(5): call 0xe59(%rip)
346c(4): sub $0x8,%rsp
3470(4): mov %rax,0x8(%rbx)
3474(4): mov 0x0(%rbp),%r8d
3478(3): push 0x30(%rbp)
347b(3): push 0x28(%rbp)
347e(3): mov %r14,%rcx
3481(2): push %r15
3483(5): mov 0x3c(%rsp),%r9d
3488(3): mov %rax,%rdi
348b(5): mov 0x28(%rsp),%rdx
3490(5): mov 0x30(%rsp),%rsi
3495(3): mov %rax,%r12
3498(5): call 0xffffec68(%rip)
349d(4): add $0x20,%rsp
34a1(4): mov 0x18(%rsp),%eax
34a5(4): mov %eax,0x0(%r13)
34a9(4): add $0x28,%rsp
34ad(3): mov %r12,%rax
34b0(1): pop %rbx
34b1(1): pop %rbp
34b2(2): pop %r12
34b4(2): pop %r13
34b6(2): pop %r14
34b8(2): pop %r15
34ba(1): ret near (%rsp)
34bb(5): nop 0x0(%rax,%rax,1)
34c0(2): xor %edi,%edi
34c2(5): call 0xe5e(%rip)
34c7(8): movdqa 0x204ba1(%rip),%xmm0
34cf(3): mov %rax,%rbx
34d2(7): mov %rax,0x204b87(%rip)
34d9(3): movups %xmm0,(%rax)
34dc(5): jmp 0xfffffee1(%rip)
34e1(5): call 0xffffde5f(%rip)
34e6(5): call 0x102a(%rip)

"clone_quoting_options" :
34f0(2): push %r12
34f2(1): push %rbp
34f3(1): push %rbx
34f4(3): mov %rdi,%rbx
34f7(5): call 0xffffde59(%rip)
34fc(3): mov (%rax),%r12d
34ff(3): mov %rax,%rbp
3502(7): lea 0x204cf7(%rip),%rax
3509(3): test %rbx,%rbx
350c(5): mov $0x38,%esi
3511(4): cmove %rax,%rbx
3515(3): mov %rbx,%rdi
3518(5): call 0xfa8(%rip)
351d(4): mov %r12d,0x0(%rbp)
3521(1): pop %rbx
3522(1): pop %rbp
3523(2): pop %r12
3525(1): ret near (%rsp)

"get_quoting_style" :
3530(7): lea 0x204cc9(%rip),%rax
3537(3): test %rdi,%rdi
353a(4): cmove %rax,%rdi
353e(2): mov (%rdi),%eax
3540(1): ret near (%rsp)

"set_quoting_style" :
3550(7): lea 0x204ca9(%rip),%rax
3557(3): test %rdi,%rdi
355a(4): cmove %rax,%rdi
355e(2): mov %esi,(%rdi)
3560(1): ret near (%rsp)

"set_char_quoting" :
3570(7): lea 0x204c89(%rip),%rax
3577(3): test %rdi,%rdi
357a(2): mov %esi,%ecx
357c(4): cmove %rax,%rdi
3580(2): mov %esi,%eax
3582(3): and $0x1f,%ecx
3585(3): shr $0x5,%al
3588(3): movzx %al,%eax
358b(5): lea 0x8(%rdi,%rax,4),%rdi
3590(2): mov (%rdi),%esi
3592(2): mov %esi,%eax
3594(2): shr %cl,%eax
3596(2): xor %eax,%edx
3598(3): and $0x1,%eax
359b(3): and $0x1,%edx
359e(2): shl/sal %cl,%edx
35a0(2): xor %esi,%edx
35a2(2): mov %edx,(%rdi)
35a4(1): ret near (%rsp)

"set_quoting_flags" :
35b0(7): lea 0x204c49(%rip),%rax
35b7(3): test %rdi,%rdi
35ba(4): cmove %rax,%rdi
35be(3): mov 0x4(%rdi),%eax
35c1(3): mov %esi,0x4(%rdi)
35c4(1): ret near (%rsp)

"set_custom_quoting" :
35d0(7): lea 0x204c29(%rip),%rax
35d7(3): test %rdi,%rdi
35da(4): cmove %rax,%rdi
35de(3): test %rsi,%rsi
35e1(6): mov $0xa,(%rdi)
35e7(2): jz 0x10(%rip)
35e9(3): test %rdx,%rdx
35ec(2): jz 0xb(%rip)
35ee(4): mov %rsi,0x28(%rdi)
35f2(4): mov %rdx,0x30(%rdi)
35f6(1): ret near (%rsp)
35f7(4): sub $0x8,%rsp
35fb(5): call 0xffffdd45(%rip)

"quotearg_buffer" :
3600(2): push %r15
3602(2): push %r14
3604(7): lea 0x204bf5(%rip),%rax
360b(2): push %r13
360d(2): push %r12
360f(3): mov %rdi,%r13
3612(1): push %rbp
3613(1): push %rbx
3614(3): mov %r8,%rbx
3617(3): mov %rsi,%r14
361a(3): mov %rdx,%r15
361d(4): sub $0x18,%rsp
3621(3): test %r8,%r8
3624(4): cmove %rax,%rbx
3628(5): mov %rcx,0x8(%rsp)
362d(5): call 0xffffdd23(%rip)
3632(3): mov (%rax),%r12d
3635(3): mov %rax,%rbp
3638(4): lea 0x8(%rbx),%rax
363c(4): sub $0x8,%rsp
3640(4): mov 0x4(%rbx),%r9d
3644(3): push 0x30(%rbx)
3647(3): mov (%rbx),%r8d
364a(3): push 0x28(%rbx)
364d(3): mov %r15,%rdx
3650(1): push %rax
3651(5): mov 0x28(%rsp),%rcx
3656(3): mov %r14,%rsi
3659(3): mov %r13,%rdi
365c(5): call 0xffffeaa4(%rip)
3661(4): mov %r12d,0x0(%rbp)
3665(4): add $0x38,%rsp
3669(1): pop %rbx
366a(1): pop %rbp
366b(2): pop %r12
366d(2): pop %r13
366f(2): pop %r14
3671(2): pop %r15
3673(1): ret near (%rsp)

"quotearg_alloc_mem" :
3680(2): push %r15
3682(2): push %r14
3684(7): lea 0x204b75(%rip),%rax
368b(2): push %r13
368d(2): push %r12
368f(3): mov %rdx,%r12
3692(1): push %rbp
3693(1): push %rbx
3694(3): mov %rcx,%rbx
3697(3): mov %rdi,%r14
369a(3): mov %rsi,%r15
369d(4): sub $0x38,%rsp
36a1(3): test %rcx,%rcx
36a4(4): cmove %rax,%rbx
36a8(2): xor %ebp,%ebp
36aa(5): call 0xffffdca6(%rip)
36af(3): test %r12,%r12
36b2(3): mov %rax,%r13
36b5(2): mov (%rax),%eax
36b7(4): setz %bpl
36bb(3): or 0x4(%rbx),%ebp
36be(4): lea 0x8(%rbx),%r10
36c2(4): sub $0x8,%rsp
36c6(3): mov (%rbx),%r8d
36c9(3): mov %r15,%rcx
36cc(4): mov %eax,0x14(%rsp)
36d0(3): push 0x30(%rbx)
36d3(3): mov %r14,%rdx
36d6(3): push 0x28(%rbx)
36d9(2): push %r10
36db(2): xor %esi,%esi
36dd(3): mov %ebp,%r9d
36e0(2): xor %edi,%edi
36e2(5): mov %r10,0x40(%rsp)
36e7(5): call 0xffffea19(%rip)
36ec(4): lea 0x1(%rax),%rsi
36f0(5): mov %rax,0x48(%rsp)
36f5(4): add $0x20,%rsp
36f9(3): mov %rsi,%rdi
36fc(5): mov %rsi,0x18(%rsp)
3701(5): call 0xbbf(%rip)
3706(5): mov %rax,0x10(%rsp)
370b(4): sub $0x8,%rsp
370f(3): push 0x30(%rbx)
3712(3): push 0x28(%rbx)
3715(5): mov 0x38(%rsp),%r10
371a(3): mov %ebp,%r9d
371d(3): mov (%rbx),%r8d
3720(3): mov %r15,%rcx
3723(3): mov %r14,%rdx
3726(3): mov %rax,%rdi
3729(2): push %r10
372b(5): mov 0x38(%rsp),%rsi
3730(5): call 0xffffe9d0(%rip)
3735(4): mov 0x2c(%rsp),%eax
3739(4): add $0x20,%rsp
373d(3): test %r12,%r12
3740(4): mov %eax,0x0(%r13)
3744(2): jz 0xb(%rip)
3746(5): mov 0x28(%rsp),%r11
374b(4): mov %r11,(%r12)
374f(5): mov 0x10(%rsp),%rax
3754(4): add $0x38,%rsp
3758(1): pop %rbx
3759(1): pop %rbp
375a(2): pop %r12
375c(2): pop %r13
375e(2): pop %r14
3760(2): pop %r15
3762(1): ret near (%rsp)

"quotearg_alloc" :
3770(3): mov %rdx,%rcx
3773(2): xor %edx,%edx
3775(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
3780(6): mov 0x2048d2(%rip),%eax
3786(2): push %r12
3788(7): mov 0x2048d1(%rip),%r12
378f(1): push %rbp
3790(1): push %rbx
3791(3): cmp $0x1,%eax
3794(2): jle 0x2d(%rip)
3796(3): sub $0x2,%eax
3799(5): lea 0x18(%r12),%rbx
379e(4): shl/sal $0x4,%rax
37a2(5): lea 0x28(%r12,%rax,1),%rbp
37a7(9): nop 0x0(%rax,%rax,1)
37b0(3): mov (%rbx),%rdi
37b3(4): add $0x10,%rbx
37b7(5): call 0xffffdb79(%rip)
37bc(3): cmp %rbp,%rbx
37bf(2): jnz 0xfffffff1(%rip)
37c1(5): mov 0x8(%r12),%rdi
37c6(7): lea 0x204933(%rip),%rbx
37cd(3): cmp %rbx,%rdi
37d0(2): jz 0x19(%rip)
37d2(5): call 0xffffdb5e(%rip)
37d7(b): mov $0x100,0x20488e(%rip)
37e2(7): mov %rbx,0x20488f(%rip)
37e9(7): lea 0x204880(%rip),%rbx
37f0(3): cmp %rbx,%r12
37f3(2): jz 0x11(%rip)
37f5(3): mov %r12,%rdi
37f8(5): call 0xffffdb38(%rip)
37fd(7): mov %rbx,0x20485c(%rip)
3804(1): pop %rbx
3805(a): mov $0x1,0x204849(%rip)
380f(1): pop %rbp
3810(2): pop %r12
3812(1): ret near (%rsp)

"quotearg_n" :
3820(7): lea 0x2049d9(%rip),%rcx
3827(7): mov $0xffffffff,%rdx
382e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3840(7): lea 0x2049b9(%rip),%rcx
3847(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3850(7): lea 0x2049a9(%rip),%rcx
3857(3): mov %rdi,%rsi
385a(7): mov $0xffffffff,%rdx
3861(2): xor %edi,%edi
3863(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
3870(7): lea 0x204989(%rip),%rcx
3877(3): mov %rsi,%rdx
387a(3): mov %rdi,%rsi
387d(2): xor %edi,%edi
387f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3890(4): sub $0x48,%rsp
3894(3): mov %rdx,%rax
3897(9): mov $0x28,%rdx
38a0(5): mov %rdx,0x38(%rsp)
38a5(2): xor %edx,%edx
38a7(3): cmp $0xa,%esi
38aa(2): jz 0x6a(%rip)
38ac(3): mov %esi,(%rsp)
38af(3): mov %rsp,%rcx
38b2(7): mov $0xffffffff,%rdx
38b9(3): mov %rax,%rsi
38bc(9): mov $0x0,0x4(%rsp)
38c5(9): mov $0x0,0xc(%rsp)
38ce(9): mov $0x0,0x14(%rsp)
38d7(9): mov $0x0,0x1c(%rsp)
38e0(9): mov $0x0,0x24(%rsp)
38e9(9): mov $0x0,0x2c(%rsp)
38f2(8): mov $0x0,0x34(%rsp)
38fa(5): call 0xfffffa46(%rip)
38ff(5): mov 0x38(%rsp),%rcx
3904(9): xor $0x28,%rcx
390d(2): jnz 0xc(%rip)
390f(4): add $0x48,%rsp
3913(1): ret near (%rsp)
3914(5): call 0xffffda2c(%rip)
3919(5): call 0xffffdae7(%rip)

"quotearg_n_style_mem" :
3920(4): sub $0x48,%rsp
3924(3): mov %rdx,%rax
3927(3): mov %rcx,%rdx
392a(9): mov $0x28,%rcx
3933(5): mov %rcx,0x38(%rsp)
3938(2): xor %ecx,%ecx
393a(3): cmp $0xa,%esi
393d(2): jz 0x63(%rip)
393f(3): mov %esi,(%rsp)
3942(3): mov %rsp,%rcx
3945(3): mov %rax,%rsi
3948(9): mov $0x0,0x4(%rsp)
3951(9): mov $0x0,0xc(%rsp)
395a(9): mov $0x0,0x14(%rsp)
3963(9): mov $0x0,0x1c(%rsp)
396c(9): mov $0x0,0x24(%rsp)
3975(9): mov $0x0,0x2c(%rsp)
397e(8): mov $0x0,0x34(%rsp)
3986(5): call 0xfffff9ba(%rip)
398b(5): mov 0x38(%rsp),%rdx
3990(9): xor $0x28,%rdx
3999(2): jnz 0xc(%rip)
399b(4): add $0x48,%rsp
399f(1): ret near (%rsp)
39a0(5): call 0xffffd9a0(%rip)
39a5(5): call 0xffffda5b(%rip)

"quotearg_style" :
39b0(3): mov %rsi,%rdx
39b3(2): mov %edi,%esi
39b5(2): xor %edi,%edi
39b7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
39c0(3): mov %rdx,%rcx
39c3(3): mov %rsi,%rdx
39c6(2): mov %edi,%esi
39c8(2): xor %edi,%edi
39ca(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
39d0(4): sub $0x48,%rsp
39d4(2): mov %edx,%ecx
39d6(9): mov $0x28,%rax
39df(5): mov %rax,0x38(%rsp)
39e4(2): xor %eax,%eax
39e6(7): mov 0x204843(%rip),%rax
39ed(3): mov %rsp,%r8
39f0(3): and $0x1f,%ecx
39f3(8): movdqa 0x204805(%rip),%xmm0
39fb(5): mov %rax,0x30(%rsp)
3a00(2): mov %edx,%eax
3a02(4): movaps %xmm0,(%rsp)
3a06(3): shr $0x5,%al
3a09(3): movzx %al,%eax
3a0c(5): lea 0x8(%r8,%rax,4),%r9
3a11(8): movdqa 0x2047f7(%rip),%xmm0
3a19(5): movaps %xmm0,0x10(%rsp)
3a1e(8): movdqa 0x2047fa(%rip),%xmm0
3a26(5): movaps %xmm0,0x20(%rsp)
3a2b(3): mov (%r9),%edx
3a2e(2): mov %edx,%eax
3a30(2): shr %cl,%eax
3a32(2): not %eax
3a34(3): and $0x1,%eax
3a37(2): shl/sal %cl,%eax
3a39(3): mov %r8,%rcx
3a3c(2): xor %edx,%eax
3a3e(3): mov %rsi,%rdx
3a41(3): mov %rdi,%rsi
3a44(3): mov %eax,(%r9)
3a47(2): xor %edi,%edi
3a49(5): call 0xfffff8f7(%rip)
3a4e(5): mov 0x38(%rsp),%rsi
3a53(9): xor $0x28,%rsi
3a5c(2): jnz 0x7(%rip)
3a5e(4): add $0x48,%rsp
3a62(1): ret near (%rsp)
3a63(5): call 0xffffd99d(%rip)

"quotearg_char" :
3a70(4): movsx %sil,%edx
3a74(7): mov $0xffffffff,%rsi
3a7b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
3a80(5): mov $0x3a,%edx
3a85(7): mov $0xffffffff,%rsi
3a8c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3aa0(5): mov $0x3a,%edx
3aa5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3ab0(4): sub $0x48,%rsp
3ab4(3): mov %rdx,%rax
3ab7(9): mov $0x28,%rdx
3ac0(5): mov %rdx,0x38(%rsp)
3ac5(2): xor %edx,%edx
3ac7(3): cmp $0xa,%esi
3aca(2): jz 0x6a(%rip)
3acc(3): mov %esi,(%rsp)
3acf(3): mov %rsp,%rcx
3ad2(7): mov $0xffffffff,%rdx
3ad9(3): mov %rax,%rsi
3adc(9): mov $0x0,0x4(%rsp)
3ae5(9): mov $0x4000000,0xc(%rsp)
3aee(9): mov $0x0,0x14(%rsp)
3af7(9): mov $0x0,0x1c(%rsp)
3b00(9): mov $0x0,0x24(%rsp)
3b09(9): mov $0x0,0x2c(%rsp)
3b12(8): mov $0x0,0x34(%rsp)
3b1a(5): call 0xfffff826(%rip)
3b1f(5): mov 0x38(%rsp),%rcx
3b24(9): xor $0x28,%rcx
3b2d(2): jnz 0xc(%rip)
3b2f(4): add $0x48,%rsp
3b33(1): ret near (%rsp)
3b34(5): call 0xffffd80c(%rip)
3b39(5): call 0xffffd8c7(%rip)

"quotearg_n_custom_mem" :
3b40(4): sub $0x48,%rsp
3b44(3): mov %rcx,%r9
3b47(7): mov 0x2046e2(%rip),%rcx
3b4e(8): movdqa 0x2046aa(%rip),%xmm0
3b56(9): mov $0x28,%rax
3b5f(5): mov %rax,0x38(%rsp)
3b64(2): xor %eax,%eax
3b66(4): movaps %xmm0,(%rsp)
3b6a(3): test %rsi,%rsi
3b6d(5): mov %rcx,0x30(%rsp)
3b72(7): mov $0xa,(%rsp)
3b79(8): movdqa 0x20468f(%rip),%xmm0
3b81(5): movaps %xmm0,0x10(%rsp)
3b86(8): movdqa 0x204692(%rip),%xmm0
3b8e(5): movaps %xmm0,0x20(%rsp)
3b93(2): jz 0x34(%rip)
3b95(3): test %rdx,%rdx
3b98(2): jz 0x2f(%rip)
3b9a(5): mov %rsi,0x28(%rsp)
3b9f(5): mov %rdx,0x30(%rsp)
3ba4(3): mov %rsp,%rcx
3ba7(3): mov %r8,%rdx
3baa(3): mov %r9,%rsi
3bad(5): call 0xfffff793(%rip)
3bb2(5): mov 0x38(%rsp),%rdi
3bb7(9): xor $0x28,%rdi
3bc0(2): jnz 0xc(%rip)
3bc2(4): add $0x48,%rsp
3bc6(1): ret near (%rsp)
3bc7(5): call 0xffffd779(%rip)
3bcc(5): call 0xffffd834(%rip)

"quotearg_n_custom" :
3be0(7): mov $0xffffffff,%r8
3be7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3bf0(3): mov %rdx,%rcx
3bf3(7): mov $0xffffffff,%r8
3bfa(3): mov %rsi,%rdx
3bfd(3): mov %rdi,%rsi
3c00(2): xor %edi,%edi
3c02(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3c10(3): mov %rcx,%r8
3c13(3): mov %rdx,%rcx
3c16(3): mov %rsi,%rdx
3c19(3): mov %rdi,%rsi
3c1c(2): xor %edi,%edi
3c1e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3c30(7): lea 0x2043e9(%rip),%rcx
3c37(5): jmp 0xfffff709(%rip)

"quote_mem" :
3c40(7): lea 0x2043d9(%rip),%rcx
3c47(3): mov %rsi,%rdx
3c4a(3): mov %rdi,%rsi
3c4d(2): xor %edi,%edi
3c4f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3c60(7): lea 0x2043b9(%rip),%rcx
3c67(7): mov $0xffffffff,%rdx
3c6e(5): jmp 0xfffff6d2(%rip)

"quote" :
3c80(7): lea 0x204399(%rip),%rcx
3c87(3): mov %rdi,%rsi
3c8a(7): mov $0xffffffff,%rdx
3c91(2): xor %edi,%edi
3c93(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3ca0(2): push %r15
3ca2(2): push %r14
3ca4(2): push %r13
3ca6(2): push %r12
3ca8(3): mov %r9,%r12
3cab(1): push %rbp
3cac(1): push %rbx
3cad(3): mov %rdi,%rbp
3cb0(3): mov %r8,%rbx
3cb3(4): sub $0x28,%rsp
3cb7(3): test %rsi,%rsi
3cba(6): jz 0x11e(%rip)
3cc0(3): mov %rdx,%r8
3cc3(7): lea 0x1cde(%rip),%rdx
3cca(3): mov %rcx,%r9
3ccd(2): xor %eax,%eax
3ccf(3): mov %rsi,%rcx
3cd2(5): mov $0x1,%esi
3cd7(5): call 0xffffd8e9(%rip)
3cdc(7): lea 0x1cd8(%rip),%rsi
3ce3(2): xor %edi,%edi
3ce5(5): mov $0x5,%edx
3cea(5): call 0xffffd6e6(%rip)
3cef(7): lea 0x1fea(%rip),%rdx
3cf6(3): mov %rax,%rcx
3cf9(6): mov $0x7e3,%r8d
3cff(5): mov $0x1,%esi
3d04(3): mov %rbp,%rdi
3d07(2): xor %eax,%eax
3d09(5): call 0xffffd8b7(%rip)
3d0e(7): lea 0x1d33(%rip),%rsi
3d15(2): xor %edi,%edi
3d17(5): mov $0x5,%edx
3d1c(5): call 0xffffd6b4(%rip)
3d21(3): mov %rbp,%rsi
3d24(3): mov %rax,%rdi
3d27(5): call 0xffffd779(%rip)
3d2c(4): cmp $0x9,%r12
3d30(6): jnbe 0x340(%rip)
3d36(7): lea 0x1f67(%rip),%rdx
3d3d(4): movsxd 0x0(%rdx,%r12,4),%rax
3d41(3): add %rdx,%rax
3d44(2): jmp %rax
3d46(a): nop 0x0(%rax,%rax,1)
3d50(4): mov 0x38(%rbx),%r9
3d54(4): mov 0x10(%rbx),%rax
3d58(7): lea 0x1e59(%rip),%rsi
3d5f(4): mov 0x8(%rbx),%r8
3d63(5): mov $0x5,%edx
3d68(2): xor %edi,%edi
3d6a(4): mov 0x30(%rbx),%r13
3d6e(4): mov 0x28(%rbx),%r12
3d72(5): mov %r9,0x10(%rsp)
3d77(4): mov 0x20(%rbx),%r15
3d7b(4): mov 0x18(%rbx),%r14
3d7f(4): mov %rax,(%rsp)
3d83(5): mov %r8,0x8(%rsp)
3d88(3): mov (%rbx),%rbx
3d8b(5): call 0xffffd645(%rip)
3d90(4): sub $0x8,%rsp
3d94(5): mov 0x18(%rsp),%r9
3d99(3): mov %rax,%rdx
3d9c(3): mov %rbx,%rcx
3d9f(5): mov $0x1,%esi
3da4(3): mov %rbp,%rdi
3da7(2): xor %eax,%eax
3da9(2): push %r9
3dab(2): push %r13
3dad(2): push %r12
3daf(2): push %r15
3db1(2): push %r14
3db3(5): mov 0x30(%rsp),%r9
3db8(5): mov 0x38(%rsp),%r8
3dbd(5): call 0xffffd803(%rip)
3dc2(4): add $0x30,%rsp
3dc6(4): add $0x28,%rsp
3dca(1): pop %rbx
3dcb(1): pop %rbp
3dcc(2): pop %r12
3dce(2): pop %r13
3dd0(2): pop %r14
3dd2(2): pop %r15
3dd4(1): ret near (%rsp)
3dd5(3): nop (%rax)
3dd8(3): mov %rcx,%r8
3ddb(3): mov %rdx,%rcx
3dde(7): lea 0x1bcf(%rip),%rdx
3de5(5): mov $0x1,%esi
3dea(2): xor %eax,%eax
3dec(5): call 0xffffd7d4(%rip)
3df1(5): jmp 0xfffffeeb(%rip)
3df6(a): nop 0x0(%rax,%rax,1)
3e00(4): mov 0x40(%rbx),%r10
3e04(4): mov 0x38(%rbx),%r9
3e08(7): lea 0x1dd9(%rip),%rsi
3e0f(4): mov 0x10(%rbx),%rax
3e13(4): mov 0x8(%rbx),%r8
3e17(5): mov $0x5,%edx
3e1c(4): mov 0x30(%rbx),%r13
3e20(4): mov 0x28(%rbx),%r12
3e24(4): mov 0x20(%rbx),%r15
3e28(4): mov 0x18(%rbx),%r14
3e2c(3): mov (%rbx),%rbx
3e2f(5): mov %r10,0x18(%rsp)
3e34(5): mov %r9,0x10(%rsp)
3e39(4): mov %rax,(%rsp)
3e3d(5): mov %r8,0x8(%rsp)
3e42(2): xor %edi,%edi
3e44(5): call 0xffffd58c(%rip)
3e49(5): mov 0x18(%rsp),%r10
3e4e(2): push %r10
3e50(5): jmp 0xffffff44(%rip)
3e55(3): nop (%rax)
3e58(3): mov (%rbx),%rbx
3e5b(7): lea 0x1b5d(%rip),%rsi
3e62(5): mov $0x5,%edx
3e67(2): xor %edi,%edi
3e69(5): call 0xffffd567(%rip)
3e6e(4): add $0x28,%rsp
3e72(3): mov %rbx,%rcx
3e75(3): mov %rbp,%rdi
3e78(1): pop %rbx
3e79(1): pop %rbp
3e7a(2): pop %r12
3e7c(2): pop %r13
3e7e(2): pop %r14
3e80(2): pop %r15
3e82(3): mov %rax,%rdx
3e85(5): mov $0x1,%esi
3e8a(2): xor %eax,%eax
3e8c(5): jmp 0xffffd734(%rip)
3e91(7): nop 0x0(%rax)
3e98(4): mov 0x8(%rbx),%r12
3e9c(7): lea 0x1b2c(%rip),%rsi
3ea3(3): mov (%rbx),%rbx
3ea6(5): mov $0x5,%edx
3eab(2): xor %edi,%edi
3ead(5): call 0xffffd523(%rip)
3eb2(4): add $0x28,%rsp
3eb6(3): mov %r12,%r8
3eb9(3): mov %rbx,%rcx
3ebc(3): mov %rbp,%rdi
3ebf(3): mov %rax,%rdx
3ec2(5): mov $0x1,%esi
3ec7(1): pop %rbx
3ec8(1): pop %rbp
3ec9(2): pop %r12
3ecb(2): pop %r13
3ecd(2): pop %r14
3ecf(2): pop %r15
3ed1(2): xor %eax,%eax
3ed3(5): jmp 0xffffd6ed(%rip)
3ed8(8): nop 0x0(%rax,%rax,1)
3ee0(4): mov 0x10(%rbx),%r13
3ee4(4): mov 0x8(%rbx),%r12
3ee8(7): lea 0x1af7(%rip),%rsi
3eef(3): mov (%rbx),%rbx
3ef2(5): mov $0x5,%edx
3ef7(2): xor %edi,%edi
3ef9(5): call 0xffffd4d7(%rip)
3efe(4): add $0x28,%rsp
3f02(3): mov %r13,%r9
3f05(3): mov %r12,%r8
3f08(3): mov %rbx,%rcx
3f0b(3): mov %rbp,%rdi
3f0e(3): mov %rax,%rdx
3f11(1): pop %rbx
3f12(1): pop %rbp
3f13(2): pop %r12
3f15(2): pop %r13
3f17(2): pop %r14
3f19(2): pop %r15
3f1b(5): mov $0x1,%esi
3f20(2): xor %eax,%eax
3f22(5): jmp 0xffffd69e(%rip)
3f27(9): nop 0x0(%rax,%rax,1)
3f30(7): lea 0x1be1(%rip),%rsi
3f37(5): mov $0x5,%edx
3f3c(2): xor %edi,%edi
3f3e(4): mov 0x18(%rbx),%r14
3f42(4): mov 0x10(%rbx),%r13
3f46(4): mov 0x8(%rbx),%r12
3f4a(3): mov (%rbx),%rbx
3f4d(5): call 0xffffd483(%rip)
3f52(4): sub $0x8,%rsp
3f56(2): push %r14
3f58(3): mov %rax,%rdx
3f5b(3): mov %r13,%r9
3f5e(3): mov %r12,%r8
3f61(3): mov %rbx,%rcx
3f64(3): mov %rbp,%rdi
3f67(5): mov $0x1,%esi
3f6c(2): xor %eax,%eax
3f6e(5): call 0xffffd652(%rip)
3f73(1): pop %rax
3f74(1): pop %rdx
3f75(4): add $0x28,%rsp
3f79(1): pop %rbx
3f7a(1): pop %rbp
3f7b(2): pop %r12
3f7d(2): pop %r13
3f7f(2): pop %r14
3f81(2): pop %r15
3f83(1): ret near (%rsp)
3f84(4): nop 0x0(%rax)
3f88(4): mov 0x20(%rbx),%r15
3f8c(7): lea 0x1ba5(%rip),%rsi
3f93(5): mov $0x5,%edx
3f98(2): xor %edi,%edi
3f9a(4): mov 0x18(%rbx),%r14
3f9e(4): mov 0x10(%rbx),%r13
3fa2(4): mov 0x8(%rbx),%r12
3fa6(3): mov (%rbx),%rbx
3fa9(5): call 0xffffd427(%rip)
3fae(2): push %r15
3fb0(2): jmp 0xffffffa6(%rip)
3fb2(6): nop 0x0(%rax,%rax,1)
3fb8(4): mov 0x8(%rbx),%r8
3fbc(4): mov 0x28(%rbx),%r12
3fc0(7): lea 0x1b99(%rip),%rsi
3fc7(4): mov 0x20(%rbx),%r15
3fcb(4): mov 0x18(%rbx),%r14
3fcf(5): mov $0x5,%edx
3fd4(4): mov 0x10(%rbx),%r13
3fd8(2): xor %edi,%edi
3fda(3): mov (%rbx),%rbx
3fdd(4): mov %r8,(%rsp)
3fe1(5): call 0xffffd3ef(%rip)
3fe6(4): sub $0x8,%rsp
3fea(3): mov %r13,%r9
3fed(2): push %r12
3fef(2): push %r15
3ff1(2): push %r14
3ff3(5): mov 0x20(%rsp),%r8
3ff8(3): mov %rbx,%rcx
3ffb(3): mov %rax,%rdx
3ffe(3): mov %rbp,%rdi
4001(5): mov $0x1,%esi
4006(2): xor %eax,%eax
4008(5): call 0xffffd5b8(%rip)
400d(4): add $0x20,%rsp
4011(4): add $0x28,%rsp
4015(1): pop %rbx
4016(1): pop %rbp
4017(2): pop %r12
4019(2): pop %r13
401b(2): pop %r14
401d(2): pop %r15
401f(1): ret near (%rsp)
4020(4): mov 0x10(%rbx),%r9
4024(4): mov 0x30(%rbx),%r13
4028(7): lea 0x1b59(%rip),%rsi
402f(4): mov 0x28(%rbx),%r12
4033(4): mov 0x20(%rbx),%r15
4037(5): mov $0x5,%edx
403c(4): mov 0x18(%rbx),%r14
4040(4): mov 0x8(%rbx),%r8
4044(2): xor %edi,%edi
4046(5): mov %r9,0x8(%rsp)
404b(3): mov (%rbx),%rbx
404e(4): mov %r8,(%rsp)
4052(5): call 0xffffd37e(%rip)
4057(2): push %r13
4059(2): push %r12
405b(2): push %r15
405d(2): push %r14
405f(5): mov 0x28(%rsp),%r9
4064(2): jmp 0xffffff8f(%rip)
4066(a): nop 0x0(%rax,%rax,1)
4070(4): mov 0x40(%rbx),%r10
4074(4): mov 0x38(%rbx),%r9
4078(5): mov $0x5,%edx
407d(4): mov 0x10(%rbx),%rax
4081(4): mov 0x8(%rbx),%r8
4085(7): lea 0x1b94(%rip),%rsi
408c(4): mov 0x30(%rbx),%r13
4090(4): mov 0x28(%rbx),%r12
4094(4): mov 0x20(%rbx),%r15
4098(4): mov 0x18(%rbx),%r14
409c(5): mov %r10,0x18(%rsp)
40a1(5): mov %r9,0x10(%rsp)
40a6(4): mov %rax,(%rsp)
40aa(5): mov %r8,0x8(%rsp)
40af(3): mov (%rbx),%rbx
40b2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
40c0(3): xor %r9d,%r9d
40c3(4): cmp $0x0,(%r8)
40c7(2): jz 0x14(%rip)
40c9(7): nop 0x0(%rax)
40d0(4): add $0x1,%r9
40d4(5): cmp $0x0,0x0(%r8,%r9,8)
40d9(2): jnz 0xfffffff7(%rip)
40db(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
40e0(4): sub $0x68,%rsp
40e4(3): mov %r8,%r10
40e7(3): xor %r9d,%r9d
40ea(9): mov $0x28,%rax
40f3(5): mov %rax,0x58(%rsp)
40f8(2): xor %eax,%eax
40fa(3): mov %rsp,%r8
40fd(3): nop (%rax)
4100(3): mov (%r10),%eax
4103(3): cmp $0x2f,%eax
4106(2): jnbe 0x44(%rip)
4108(3): mov %eax,%r11d
410b(4): add 0x10(%r10),%r11
410f(3): add $0x8,%eax
4112(3): mov %eax,(%r10)
4115(3): mov (%r11),%rax
4118(3): test %rax,%rax
411b(4): mov %rax,0x0(%r8,%r9,8)
411f(2): jz 0xc(%rip)
4121(4): add $0x1,%r9
4125(4): cmp $0xa,%r9
4129(2): jnz 0xffffffd7(%rip)
412b(5): call 0xfffffb75(%rip)
4130(5): mov 0x58(%rsp),%rax
4135(9): xor $0x28,%rax
413e(2): jnz 0x7(%rip)
4140(4): add $0x68,%rsp
4144(1): ret near (%rsp)
4145(5): call 0xffffd2bb(%rip)
414a(4): mov 0x8(%r10),%r11
414e(4): lea 0x8(%r11),%rax
4152(4): mov %rax,0x8(%r10)
4156(2): jmp 0xffffffbf(%rip)

"version_etc" :
4160(1): push %rbp
4161(1): push %rbx
4162(6): mov $0x20,%r10d
4168(3): xor %r11d,%r11d
416b(7): sub $0xb8,%rsp
4172(9): mov $0x28,%rax
417b(5): mov %rax,0x78(%rsp)
4180(2): xor %eax,%eax
4182(8): lea 0xd0(%rsp),%rax
418a(8): mov %r8,0xa0(%rsp)
4192(8): lea 0xd0(%rsp),%rbx
419a(5): lea 0x20(%rsp),%r8
419f(8): mov %r9,0xa8(%rsp)
41a7(8): mov $0x20,0x8(%rsp)
41af(5): mov %rax,0x10(%rsp)
41b4(8): lea 0x80(%rsp),%rax
41bc(3): xor %r9d,%r9d
41bf(5): mov %rax,0x18(%rsp)
41c4(3): mov %rax,%rbp
41c7(9): nop 0x0(%rax,%rax,1)
41d0(4): cmp $0x2f,%r10d
41d4(2): jnbe 0x58(%rip)
41d6(3): mov %r10d,%eax
41d9(6): mov $0x1,%r11d
41df(4): add $0x8,%r10d
41e3(3): add %rbp,%rax
41e6(3): mov (%rax),%rax
41e9(3): test %rax,%rax
41ec(4): mov %rax,0x0(%r8,%r9,8)
41f0(2): jz 0xc(%rip)
41f2(4): add $0x1,%r9
41f6(4): cmp $0xa,%r9
41fa(2): jnz 0xffffffd6(%rip)
41fc(3): test %r11b,%r11b
41ff(2): jnz 0x26(%rip)
4201(5): call 0xfffffa9f(%rip)
4206(5): mov 0x78(%rsp),%rax
420b(9): xor $0x28,%rax
4214(2): jnz 0xc(%rip)
4216(7): add $0xb8,%rsp
421d(1): pop %rbx
421e(1): pop %rbp
421f(1): ret near (%rsp)
4220(5): call 0xffffd1e0(%rip)
4225(5): mov %r10d,0x8(%rsp)
422a(2): jmp 0xffffffd7(%rip)
422c(3): mov %rbx,%rax
422f(4): add $0x8,%rbx
4233(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4240(1): push %rbx
4241(7): lea 0x17ba(%rip),%rsi
4248(5): mov $0x5,%edx
424d(2): xor %edi,%edi
424f(5): call 0xffffd181(%rip)
4254(7): lea 0x17bc(%rip),%rdx
425b(3): mov %rax,%rsi
425e(5): mov $0x1,%edi
4263(2): xor %eax,%eax
4265(5): call 0xffffd2eb(%rip)
426a(7): lea 0x17bc(%rip),%rsi
4271(5): mov $0x5,%edx
4276(2): xor %edi,%edi
4278(5): call 0xffffd158(%rip)
427d(7): lea 0x1124(%rip),%rcx
4284(7): lea 0xd74(%rip),%rdx
428b(3): mov %rax,%rsi
428e(5): mov $0x1,%edi
4293(2): xor %eax,%eax
4295(5): call 0xffffd2bb(%rip)
429a(7): mov 0x203de7(%rip),%rbx
42a1(7): lea 0x19b8(%rip),%rsi
42a8(2): xor %edi,%edi
42aa(5): mov $0x5,%edx
42af(5): call 0xffffd121(%rip)
42b4(3): mov %rbx,%rsi
42b7(3): mov %rax,%rdi
42ba(1): pop %rbx
42bb(5): jmp 0xffffd1e5(%rip)

"xmalloc" :
42c0(1): push %rbx
42c1(3): mov %rdi,%rbx
42c4(5): call 0xffffd22c(%rip)
42c9(3): test %rax,%rax
42cc(2): jnz 0x7(%rip)
42ce(3): test %rbx,%rbx
42d1(2): jnz 0x4(%rip)
42d3(1): pop %rbx
42d4(1): ret near (%rsp)
42d5(5): call 0x23b(%rip)

"xnmalloc" :
42e0(3): mov %rdi,%rax
42e3(3): mul %rax,%rsi,%rdx
42e6(3): mov %rax,%rdi
42e9(3): seto %al
42ec(3): test %rdi,%rdi
42ef(2): js 0xc(%rip)
42f1(3): movzx %al,%eax
42f4(3): test %rax,%rax
42f7(2): jnz 0x4(%rip)
42f9(2): jmp 0xffffffc7(%rip)
42fb(4): sub $0x8,%rsp
42ff(5): call 0x211(%rip)

"xrealloc" :
4320(3): test %rsi,%rsi
4323(1): push %rbx
4324(3): mov %rsi,%rbx
4327(2): jnz 0x7(%rip)
4329(3): test %rdi,%rdi
432c(2): jnz 0x1c(%rip)
432e(3): mov %rbx,%rsi
4331(5): call 0xffffd1ff(%rip)
4336(3): test %rax,%rax
4339(2): jnz 0x7(%rip)
433b(3): test %rbx,%rbx
433e(2): jnz 0x13(%rip)
4340(1): pop %rbx
4341(1): ret near (%rsp)
4342(6): nop 0x0(%rax,%rax,1)
4348(5): call 0xffffcfe8(%rip)
434d(2): xor %eax,%eax
434f(1): pop %rbx
4350(1): ret near (%rsp)
4351(5): call 0x1bf(%rip)

"xnrealloc" :
4360(3): mov %rsi,%rax
4363(3): mul %rax,%rdx,%rdx
4366(3): mov %rax,%rsi
4369(3): seto %al
436c(3): test %rsi,%rsi
436f(2): js 0xc(%rip)
4371(3): movzx %al,%eax
4374(3): test %rax,%rax
4377(2): jnz 0x4(%rip)
4379(2): jmp 0xffffffa7(%rip)
437b(4): sub $0x8,%rsp
437f(5): call 0x191(%rip)

"x2nrealloc" :
4390(3): test %rdi,%rdi
4393(3): mov %rdx,%r9
4396(3): mov (%rsi),%rcx
4399(2): jz 0x37(%rip)
439b(2): xor %edx,%edx
439d(a): mov $0x6148914691236517204,%rax
43a7(3): div %r9,%rax
43aa(3): cmp %rcx,%rax
43ad(2): jbe 0x3e(%rip)
43af(3): mov %rcx,%rax
43b2(3): shr $0x1,%rax
43b5(5): lea 0x1(%rax,%rcx,1),%rcx
43ba(3): mov %rcx,(%rsi)
43bd(4): imul %r9,%rcx
43c1(3): mov %rcx,%rsi
43c4(5): jmp 0xffffff5c(%rip)
43c9(7): nop 0x0(%rax)
43d0(3): test %rcx,%rcx
43d3(2): jz 0x25(%rip)
43d5(3): mov %rcx,%rax
43d8(3): mul %rax,%r9,%rdx
43db(3): seto %dl
43de(3): test %rax,%rax
43e1(3): movzx %dl,%edx
43e4(2): js 0x7(%rip)
43e6(3): test %rdx,%rdx
43e9(2): jz 0xffffffd1(%rip)
43eb(4): sub $0x8,%rsp
43ef(5): call 0x121(%rip)
43f4(4): nop 0x0(%rax)
43f8(2): xor %edx,%edx
43fa(5): mov $0x80,%eax
43ff(3): xor %r8d,%r8d
4402(3): div %r9,%rax
4405(3): test %rax,%rax
4408(4): setz %r8b
440c(4): lea 0x0(%r8,%rax,1),%rcx
4410(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4420(3): test %rdi,%rdi
4423(3): mov (%rsi),%rax
4426(2): jz 0x2a(%rip)
4428(a): mov $0x6148914691236517203,%rdx
4432(3): cmp %rdx,%rax
4435(2): jnbe 0x2c(%rip)
4437(3): mov %rax,%rdx
443a(3): shr $0x1,%rdx
443d(5): lea 0x1(%rdx,%rax,1),%rax
4442(3): mov %rax,(%rsi)
4445(3): mov %rax,%rsi
4448(5): jmp 0xfffffed8(%rip)
444d(3): nop (%rax)
4450(3): test %rax,%rax
4453(5): mov $0x80,%edx
4458(4): cmove %rdx,%rax
445c(3): test %rax,%rax
445f(2): jns 0xffffffe3(%rip)
4461(4): sub $0x8,%rsp
4465(5): call 0xab(%rip)

"xzalloc" :
4470(1): push %rbx
4471(3): mov %rdi,%rbx
4474(5): call 0xfffffe4c(%rip)
4479(3): mov %rbx,%rdx
447c(2): xor %esi,%esi
447e(3): mov %rax,%rdi
4481(1): pop %rbx
4482(5): jmp 0xffffcffe(%rip)

"xcalloc" :
4490(3): mov %rdi,%rax
4493(4): sub $0x8,%rsp
4497(3): mul %rax,%rsi,%rdx
449a(3): seto %dl
449d(3): test %rax,%rax
44a0(2): js 0x19(%rip)
44a2(3): movzx %dl,%edx
44a5(3): test %rdx,%rdx
44a8(2): jnz 0x11(%rip)
44aa(5): call 0xffffd006(%rip)
44af(3): test %rax,%rax
44b2(2): jz 0x7(%rip)
44b4(4): add $0x8,%rsp
44b8(1): ret near (%rsp)
44b9(5): call 0x57(%rip)

"xmemdup" :
44c0(1): push %rbp
44c1(1): push %rbx
44c2(3): mov %rdi,%rbp
44c5(3): mov %rsi,%rdi
44c8(3): mov %rsi,%rbx
44cb(4): sub $0x8,%rsp
44cf(5): call 0xfffffdf1(%rip)
44d4(4): add $0x8,%rsp
44d8(3): mov %rbx,%rdx
44db(3): mov %rbp,%rsi
44de(1): pop %rbx
44df(1): pop %rbp
44e0(3): mov %rax,%rdi
44e3(5): jmp 0xffffcfed(%rip)

"xstrdup" :
44f0(1): push %rbx
44f1(3): mov %rdi,%rbx
44f4(5): call 0xffffcefc(%rip)
44f9(3): mov %rbx,%rdi
44fc(4): lea 0x1(%rax),%rsi
4500(1): pop %rbx
4501(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4510(7): lea 0x17f8(%rip),%rsi
4517(4): sub $0x8,%rsp
451b(5): mov $0x5,%edx
4520(2): xor %edi,%edi
4522(5): call 0xffffceae(%rip)
4527(6): mov 0x203aeb(%rip),%edi
452d(7): lea 0xf5c(%rip),%rdx
4534(3): mov %rax,%rcx
4537(2): xor %esi,%esi
4539(2): xor %eax,%eax
453b(5): call 0xffffd025(%rip)
4540(5): call 0xffffce00(%rip)

"xstrtol" :
4550(2): push %r15
4552(2): push %r14
4554(2): push %r13
4556(2): push %r12
4558(1): push %rbp
4559(1): push %rbx
455a(4): sub $0x28,%rsp
455e(9): mov $0x28,%rax
4567(5): mov %rax,0x18(%rsp)
456c(2): xor %eax,%eax
456e(3): cmp $0x24,%edx
4571(6): jnbe 0x66e(%rip)
4577(5): lea 0x10(%rsp),%rax
457c(3): test %rsi,%rsi
457f(3): mov %rsi,%rbx
4582(3): mov %rdi,%r12
4585(2): mov %edx,%ebp
4587(3): mov %rcx,%r14
458a(4): cmove %rax,%rbx
458e(3): mov %r8,%r15
4591(5): call 0xffffcdbf(%rip)
4596(2): mov %ebp,%edx
4598(6): mov $0x0,(%rax)
459e(3): mov %rbx,%rsi
45a1(3): mov %r12,%rdi
45a4(3): mov %rax,%r13
45a7(5): call 0xffffcf19(%rip)
45ac(3): mov (%rbx),%rcx
45af(3): mov %rax,%rbp
45b2(3): cmp %r12,%rcx
45b5(2): jz 0x63(%rip)
45b7(4): mov 0x0(%r13),%eax
45bb(2): test %eax,%eax
45bd(2): jnz 0x43(%rip)
45bf(3): xor %r12d,%r12d
45c2(3): test %r15,%r15
45c5(2): jz 0xf(%rip)
45c7(4): movzx (%rcx),%r13d
45cb(3): test %r13b,%r13b
45ce(6): jnz 0x85(%rip)
45d4(3): mov %rbp,(%r14)
45d7(5): mov 0x18(%rsp),%rdi
45dc(9): xor $0x28,%rdi
45e5(3): mov %r12d,%eax
45e8(6): jnz 0x616(%rip)
45ee(4): add $0x28,%rsp
45f2(1): pop %rbx
45f3(1): pop %rbp
45f4(2): pop %r12
45f6(2): pop %r13
45f8(2): pop %r14
45fa(2): pop %r15
45fc(1): ret near (%rsp)
45fd(3): nop (%rax)
4600(3): cmp $0x22,%eax
4603(6): mov $0x4,%r12d
4609(2): jnz 0xffffffce(%rip)
460b(6): mov $0x1,%r12d
4611(2): jmp 0xffffffb1(%rip)
4613(5): nop 0x0(%rax,%rax,1)
4618(3): test %r15,%r15
461b(6): jz 0x495(%rip)
4621(4): movzx (%rcx),%r13d
4625(5): mov %rcx,0x8(%rsp)
462a(6): mov $0x4,%r12d
4630(3): test %r13b,%r13b
4633(2): jz 0xffffffa4(%rip)
4635(4): movsx %r13b,%esi
4639(3): mov %r15,%rdi
463c(5): call 0xffffcdf4(%rip)
4641(3): test %rax,%rax
4644(5): mov 0x8(%rsp),%rcx
4649(2): jz 0xffffff8e(%rip)
464b(5): mov $0x1,%ebp
4650(3): xor %r12d,%r12d
4653(4): movsx %r13b,%esi
4657(3): mov %r15,%rdi
465a(5): mov %rcx,0x8(%rsp)
465f(5): call 0xffffcdd1(%rip)
4664(3): test %rax,%rax
4667(5): mov 0x8(%rsp),%rcx
466c(2): jz 0x5c(%rip)
466e(4): lea 0xffffffbb(%r13),%eax
4672(2): cmp $0x2f,%al
4674(2): jnbe 0x64(%rip)
4676(a): mov $0x142129060940101,%rdx
4680(4): bt %rax,%rdx
4684(2): jnb 0x54(%rip)
4686(5): mov $0x30,%esi
468b(3): mov %r15,%rdi
468e(5): mov %rcx,0x8(%rsp)
4693(5): call 0xffffcd9d(%rip)
4698(3): test %rax,%rax
469b(5): mov 0x8(%rsp),%rcx
46a0(2): jz 0x38(%rip)
46a2(4): movzx 0x1(%rcx),%eax
46a6(2): cmp $0x44,%al
46a8(2): jz 0xe(%rip)
46aa(2): cmp $0x69,%al
46ac(6): jz 0x4ec(%rip)
46b2(2): cmp $0x42,%al
46b4(2): jnz 0x24(%rip)
46b6(5): mov $0x2,%edi
46bb(5): mov $0x3e8,%eax
46c0(2): jmp 0x22(%rip)
46c2(6): nop 0x0(%rax,%rax,1)
46c8(3): mov %rbp,(%r14)
46cb(4): or $0x2,%r12d
46cf(5): jmp 0xffffff08(%rip)
46d4(4): nop 0x0(%rax)
46d8(5): mov $0x1,%edi
46dd(5): mov $0x400,%eax
46e2(4): sub $0x42,%r13d
46e6(4): cmp $0x35,%r13b
46ea(2): jnbe 0xffffffde(%rip)
46ec(7): lea 0x1675(%rip),%rsi
46f3(4): movzx %r13b,%r13d
46f7(4): movsxd 0x0(%rsi,%r13,4),%rdx
46fb(3): add %rsi,%rdx
46fe(2): jmp %rdx
4700(a): mov $0x-9223372036854775808,%r8
470a(3): movsxd %eax,%rsi
470d(3): mov %r8,%rax
4710(2): cdq %rax
4712(3): idiv %rsi,%rax
4715(3): cmp %rax,%rbp
4718(3): mov %rax,%r9
471b(6): jl 0x4aa(%rip)
4721(a): mov $0x9223372036854775807,%r10
472b(3): mov %r10,%rax
472e(2): cdq %rax
4730(3): idiv %rsi,%rax
4733(3): cmp %rax,%rbp
4736(6): jnle 0x49c(%rip)
473c(4): imul %rsi,%rbp
4740(3): cmp %rbp,%r9
4743(6): jnle 0x482(%rip)
4749(3): cmp %rbp,%rax
474c(6): jl 0x486(%rip)
4752(4): imul %rsi,%rbp
4756(2): xor %eax,%eax
4758(3): or %eax,%r12d
475b(5): nop 0x0(%rax,%rax,1)
4760(3): movsxd %edi,%rax
4763(3): add %rax,%rcx
4766(3): mov %r12d,%eax
4769(3): or $0x2,%eax
476c(3): mov %rcx,(%rbx)
476f(3): cmp $0x0,(%rcx)
4772(4): cmovne %eax,%r12d
4776(5): jmp 0xfffffe5e(%rip)
477b(5): nop 0x0(%rax,%rax,1)
4780(a): mov $0x-4611686018427387904,%rax
478a(3): cmp %rax,%rbp
478d(6): jl 0x333(%rip)
4793(a): mov $0x4611686018427387903,%rax
479d(3): cmp %rax,%rbp
47a0(6): jnle 0x3e0(%rip)
47a6(3): add %rbp,%rbp
47a9(2): jmp 0xffffffb7(%rip)
47ab(5): nop 0x0(%rax,%rax,1)
47b0(a): mov $0x-18014398509481984,%rax
47ba(3): cmp %rax,%rbp
47bd(6): jl 0x303(%rip)
47c3(a): mov $0x18014398509481983,%rax
47cd(3): cmp %rax,%rbp
47d0(6): jnle 0x3b0(%rip)
47d6(4): shl/sal $0x9,%rbp
47da(2): jmp 0xffffff86(%rip)
47dc(4): nop 0x0(%rax)
47e0(3): movsxd %eax,%rsi
47e3(a): mov $0x-9223372036854775808,%rax
47ed(6): mov $0x7,%r8d
47f3(2): cdq %rax
47f5(3): xor %r11d,%r11d
47f8(a): mov $0x9223372036854775807,%r9
4802(3): idiv %rsi,%rax
4805(3): mov %rax,%r10
4808(2): jmp 0x27(%rip)
480a(6): nop 0x0(%rax,%rax,1)
4810(3): mov %r9,%rax
4813(2): cdq %rax
4815(3): idiv %rsi,%rax
4818(3): cmp %rbp,%rax
481b(6): jl 0x2ed(%rip)
4821(4): imul %rsi,%rbp
4825(4): sub $0x1,%r8d
4829(6): jz 0x127(%rip)
482f(3): cmp %rbp,%r10
4832(2): jle 0xffffffde(%rip)
4834(6): mov $0x1,%r11d
483a(a): mov $0x-9223372036854775808,%rbp
4844(2): jmp 0xffffffe1(%rip)
4846(a): nop 0x0(%rax,%rax,1)
4850(3): movsxd %eax,%rsi
4853(a): mov $0x-9223372036854775808,%rax
485d(6): mov $0x8,%r8d
4863(2): cdq %rax
4865(3): xor %r11d,%r11d
4868(a): mov $0x9223372036854775807,%r9
4872(3): idiv %rsi,%rax
4875(3): mov %rax,%r10
4878(2): jmp 0x27(%rip)
487a(6): nop 0x0(%rax,%rax,1)
4880(3): mov %r9,%rax
4883(2): cdq %rax
4885(3): idiv %rsi,%rax
4888(3): cmp %rbp,%rax
488b(6): jl 0x24d(%rip)
4891(4): imul %rsi,%rbp
4895(4): sub $0x1,%r8d
4899(6): jz 0xb7(%rip)
489f(3): cmp %rbp,%r10
48a2(2): jle 0xffffffde(%rip)
48a4(6): mov $0x1,%r11d
48aa(a): mov $0x-9223372036854775808,%rbp
48b4(2): jmp 0xffffffe1(%rip)
48b6(a): nop 0x0(%rax,%rax,1)
48c0(a): mov $0x-9223372036854775808,%r8
48ca(3): movsxd %eax,%rsi
48cd(3): mov %r8,%rax
48d0(2): cdq %rax
48d2(3): idiv %rsi,%rax
48d5(3): cmp %rax,%rbp
48d8(6): jl 0x1e8(%rip)
48de(4): sub $0x1,%r8
48e2(3): mov %r8,%rax
48e5(2): cdq %rax
48e7(3): idiv %rsi,%rax
48ea(3): cmp %rax,%rbp
48ed(6): jnle 0x293(%rip)
48f3(4): imul %rsi,%rbp
48f7(5): jmp 0xfffffe69(%rip)
48fc(4): nop 0x0(%rax)
4900(3): movsxd %eax,%rsi
4903(a): mov $0x-9223372036854775808,%rax
490d(6): mov $0x3,%r8d
4913(2): cdq %rax
4915(3): xor %r11d,%r11d
4918(a): mov $0x9223372036854775807,%r9
4922(3): idiv %rsi,%rax
4925(3): mov %rax,%r10
4928(3): cmp %rbp,%r10
492b(6): jnle 0x1f5(%rip)
4931(3): mov %r9,%rax
4934(2): cdq %rax
4936(3): idiv %rsi,%rax
4939(3): cmp %rbp,%rax
493c(6): jl 0x274(%rip)
4942(4): imul %rsi,%rbp
4946(4): sub $0x1,%r8d
494a(2): jnz 0xffffffde(%rip)
494c(4): nop 0x0(%rax)
4950(3): or %r11d,%r12d
4953(5): jmp 0xfffffe0d(%rip)
4958(8): nop 0x0(%rax,%rax,1)
4960(3): movsxd %eax,%rsi
4963(a): mov $0x-9223372036854775808,%rax
496d(6): mov $0x6,%r8d
4973(2): cdq %rax
4975(3): xor %r11d,%r11d
4978(a): mov $0x9223372036854775807,%r9
4982(3): idiv %rsi,%rax
4985(3): mov %rax,%r10
4988(2): jmp 0x23(%rip)
498a(6): nop 0x0(%rax,%rax,1)
4990(3): mov %r9,%rax
4993(2): cdq %rax
4995(3): idiv %rsi,%rax
4998(3): cmp %rbp,%rax
499b(6): jl 0x19d(%rip)
49a1(4): imul %rsi,%rbp
49a5(4): sub $0x1,%r8d
49a9(2): jz 0xffffffa7(%rip)
49ab(3): cmp %rbp,%r10
49ae(2): jle 0xffffffe2(%rip)
49b0(6): mov $0x1,%r11d
49b6(a): mov $0x-9223372036854775808,%rbp
49c0(2): jmp 0xffffffe5(%rip)
49c2(6): nop 0x0(%rax,%rax,1)
49c8(3): movsxd %eax,%rsi
49cb(a): mov $0x-9223372036854775808,%rax
49d5(6): mov $0x5,%r8d
49db(2): cdq %rax
49dd(3): xor %r11d,%r11d
49e0(a): mov $0x9223372036854775807,%r9
49ea(3): idiv %rsi,%rax
49ed(3): mov %rax,%r10
49f0(2): jmp 0x27(%rip)
49f2(6): nop 0x0(%rax,%rax,1)
49f8(3): mov %r9,%rax
49fb(2): cdq %rax
49fd(3): idiv %rsi,%rax
4a00(3): cmp %rbp,%rax
4a03(6): jl 0x14d(%rip)
4a09(4): imul %rsi,%rbp
4a0d(4): sub $0x1,%r8d
4a11(6): jz 0xffffff3f(%rip)
4a17(3): cmp %rbp,%r10
4a1a(2): jle 0xffffffde(%rip)
4a1c(6): mov $0x1,%r11d
4a22(a): mov $0x-9223372036854775808,%rbp
4a2c(2): jmp 0xffffffe1(%rip)
4a2e(2): nop 
4a30(a): mov $0x-9007199254740992,%rax
4a3a(3): cmp %rax,%rbp
4a3d(6): jl 0x83(%rip)
4a43(a): mov $0x9007199254740991,%rax
4a4d(3): cmp %rax,%rbp
4a50(6): jnle 0x130(%rip)
4a56(4): shl/sal $0xa,%rbp
4a5a(5): jmp 0xfffffd06(%rip)
4a5f(1): nop 
4a60(3): movsxd %eax,%rsi
4a63(a): mov $0x-9223372036854775808,%rax
4a6d(6): mov $0x4,%r8d
4a73(2): cdq %rax
4a75(3): xor %r11d,%r11d
4a78(a): mov $0x9223372036854775807,%r9
4a82(3): idiv %rsi,%rax
4a85(3): mov %rax,%r10
4a88(3): cmp %rbp,%r10
4a8b(2): jnle 0x65(%rip)
4a8d(3): mov %r9,%rax
4a90(2): cdq %rax
4a92(3): idiv %rsi,%rax
4a95(3): cmp %rbp,%rax
4a98(6): jl 0xd0(%rip)
4a9e(4): imul %rsi,%rbp
4aa2(4): sub $0x1,%r8d
4aa6(2): jnz 0xffffffe2(%rip)
4aa8(5): jmp 0xfffffea8(%rip)
4aad(3): nop (%rax)
4ab0(6): mov $0x4,%r12d
4ab6(5): jmp 0xfffffb21(%rip)
4abb(5): nop 0x0(%rax,%rax,1)
4ac0(6): mov $0x1,%r12d
4ac6(a): mov $0x-9223372036854775808,%rbp
4ad0(5): jmp 0xfffffc90(%rip)
4ad5(3): nop (%rax)
4ad8(6): mov $0x1,%r11d
4ade(a): mov $0x9223372036854775807,%rbp
4ae8(5): jmp 0xfffffdad(%rip)
4aed(3): nop (%rax)
4af0(6): mov $0x1,%r11d
4af6(a): mov $0x-9223372036854775808,%rbp
4b00(2): jmp 0xffffffa2(%rip)
4b02(6): nop 0x0(%rax,%rax,1)
4b08(6): mov $0x1,%r11d
4b0e(a): mov $0x9223372036854775807,%rbp
4b18(5): jmp 0xfffffd0d(%rip)
4b1d(3): nop (%rax)
4b20(6): mov $0x1,%r11d
4b26(a): mov $0x-9223372036854775808,%rbp
4b30(5): jmp 0xfffffe16(%rip)
4b35(3): nop (%rax)
4b38(6): mov $0x1,%r11d
4b3e(a): mov $0x9223372036854775807,%rbp
4b48(5): jmp 0xfffffe5d(%rip)
4b4d(3): nop (%rax)
4b50(6): mov $0x1,%r11d
4b56(a): mov $0x9223372036854775807,%rbp
4b60(5): jmp 0xfffffead(%rip)
4b65(3): nop (%rax)
4b68(6): mov $0x1,%r11d
4b6e(a): mov $0x9223372036854775807,%rbp
4b78(5): jmp 0xffffff2a(%rip)
4b7d(3): nop (%rax)
4b80(6): mov $0x1,%r12d
4b86(a): mov $0x9223372036854775807,%rbp
4b90(5): jmp 0xfffffbd0(%rip)
4b95(3): nop (%rax)
4b98(2): xor %edi,%edi
4b9a(4): cmp $0x42,0x2(%rcx)
4b9e(5): mov $0x400,%eax
4ba3(4): setz %dil
4ba7(4): lea 0x1(%rdi,%rdi,1),%edi
4bab(5): jmp 0xfffffb37(%rip)
4bb0(6): mov $0x1,%r11d
4bb6(a): mov $0x9223372036854775807,%rbp
4bc0(5): jmp 0xfffffd86(%rip)
4bc5(5): mov $0x1,%eax
4bca(3): mov %r8,%rbp
4bcd(5): jmp 0xfffffb8b(%rip)
4bd2(5): mov $0x1,%eax
4bd7(3): mov %r10,%rbp
4bda(5): jmp 0xfffffb7e(%rip)
4bdf(7): lea 0x125a(%rip),%rcx
4be6(7): lea 0x1133(%rip),%rsi
4bed(7): lea 0x114c(%rip),%rdi
4bf4(5): mov $0x54,%edx
4bf9(5): call 0xffffc867(%rip)
4bfe(5): call 0xffffc802(%rip)

"rpl_mbrtowc" :
4c10(2): push %r13
4c12(2): push %r12
4c14(3): mov %rsi,%r13
4c17(1): push %rbp
4c18(1): push %rbx
4c19(3): mov %rdi,%rbx
4c1c(3): mov %rdx,%r12
4c1f(4): sub $0x18,%rsp
4c23(9): mov $0x28,%rax
4c2c(5): mov %rax,0x8(%rsp)
4c31(2): xor %eax,%eax
4c33(5): lea 0x4(%rsp),%rax
4c38(3): test %rdi,%rdi
4c3b(4): cmove %rax,%rbx
4c3f(3): mov %rbx,%rdi
4c42(5): call 0xffffc7de(%rip)
4c47(4): cmp $0xfffffffd,%rax
4c4b(3): mov %rax,%rbp
4c4e(2): jbe 0x22(%rip)
4c50(3): test %r12,%r12
4c53(2): jz 0x1d(%rip)
4c55(2): xor %edi,%edi
4c57(5): call 0xc9(%rip)
4c5c(2): test %al,%al
4c5e(2): jnz 0x12(%rip)
4c60(5): movzx 0x0(%r13),%eax
4c65(5): mov $0x1,%ebp
4c6a(2): mov %eax,(%rbx)
4c6c(4): nop 0x0(%rax)
4c70(5): mov 0x8(%rsp),%rdx
4c75(9): xor $0x28,%rdx
4c7e(3): mov %rbp,%rax
4c81(2): jnz 0xd(%rip)
4c83(4): add $0x18,%rsp
4c87(1): pop %rbx
4c88(1): pop %rbp
4c89(2): pop %r12
4c8b(2): pop %r13
4c8d(1): ret near (%rsp)
4c8e(5): call 0xffffc772(%rip)

"close_stream" :
4ca0(2): push %r12
4ca2(1): push %rbp
4ca3(3): mov %rdi,%rbp
4ca6(1): push %rbx
4ca7(5): call 0xffffc6e9(%rip)
4cac(3): mov 0x0(%rbp),%ebx
4caf(3): mov %rbp,%rdi
4cb2(3): mov %rax,%r12
4cb5(5): call 0x10b(%rip)
4cba(3): and $0x20,%ebx
4cbd(2): test %ebx,%ebx
4cbf(2): jnz 0x19(%rip)
4cc1(2): test %eax,%eax
4cc3(2): jz 0xc(%rip)
4cc5(3): test %r12,%r12
4cc8(5): mov $0xffffffff,%eax
4ccd(2): jz 0x3b(%rip)
4ccf(1): pop %rbx
4cd0(1): pop %rbp
4cd1(2): pop %r12
4cd3(1): ret near (%rsp)
4cd4(4): nop 0x0(%rax)
4cd8(2): test %eax,%eax
4cda(2): jnz 0x1e(%rip)
4cdc(5): call 0xffffc674(%rip)
4ce1(6): mov $0x0,(%rax)
4ce7(5): mov $0xffffffff,%eax
4cec(1): pop %rbx
4ced(1): pop %rbp
4cee(2): pop %r12
4cf0(1): ret near (%rsp)
4cf1(7): nop 0x0(%rax)
4cf8(1): pop %rbx
4cf9(5): mov $0xffffffff,%eax
4cfe(1): pop %rbp
4cff(2): pop %r12
4d01(1): ret near (%rsp)
4d02(6): nop 0x0(%rax,%rax,1)
4d08(5): call 0xffffc648(%rip)
4d0d(3): cmp $0x9,(%rax)
4d10(1): pop %rbx
4d11(1): pop %rbp
4d12(2): pop %r12
4d14(3): setnz %al
4d17(3): movzx %al,%eax
4d1a(2): neg %eax
4d1c(1): ret near (%rsp)

"hard_locale" :
4d20(4): sub $0x8,%rsp
4d24(2): xor %esi,%esi
4d26(5): call 0xffffc81a(%rip)
4d2b(3): mov %rax,%rdx
4d2e(5): mov $0x1,%eax
4d33(3): test %rdx,%rdx
4d36(2): jz 0x1f(%rip)
4d38(7): lea 0x1109(%rip),%rdi
4d3f(5): mov $0x2,%ecx
4d44(3): mov %rdx,%rsi
4d47(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4d49(3): setnbe %cl
4d4c(3): sbb $0x0,%cl
4d4f(2): xor %eax,%eax
4d51(2): test %cl,%cl
4d53(2): jnz 0xd(%rip)
4d55(4): add $0x8,%rsp
4d59(1): ret near (%rsp)
4d5a(6): nop 0x0(%rax,%rax,1)
4d60(7): lea 0x10e3(%rip),%rdi
4d67(5): mov $0x6,%ecx
4d6c(3): mov %rdx,%rsi
4d6f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4d71(3): setnbe %al
4d74(2): sbb $0x0,%al
4d76(2): test %al,%al
4d78(3): setnz %al
4d7b(4): add $0x8,%rsp
4d7f(1): ret near (%rsp)

"locale_charset" :
4d80(4): sub $0x8,%rsp
4d84(5): mov $0xe,%edi
4d89(5): call 0xffffc787(%rip)
4d8e(3): test %rax,%rax
4d91(2): jz 0x1f(%rip)
4d93(3): cmp $0x0,(%rax)
4d96(7): lea 0x10b3(%rip),%rdx
4d9d(4): cmove %rdx,%rax
4da1(4): add $0x8,%rsp
4da5(1): ret near (%rsp)
4da6(a): nop 0x0(%rax,%rax,1)
4db0(7): lea 0x1099(%rip),%rax
4db7(4): add $0x8,%rsp
4dbb(1): ret near (%rsp)

"rpl_fclose" :
4dc0(2): push %r12
4dc2(1): push %rbp
4dc3(1): push %rbx
4dc4(3): mov %rdi,%rbx
4dc7(5): call 0xffffc719(%rip)
4dcc(2): test %eax,%eax
4dce(3): mov %rbx,%rdi
4dd1(2): js 0x56(%rip)
4dd3(5): call 0xffffc74d(%rip)
4dd8(2): test %eax,%eax
4dda(2): jnz 0x2e(%rip)
4ddc(3): mov %rbx,%rdi
4ddf(5): call 0x61(%rip)
4de4(2): test %eax,%eax
4de6(2): jz 0x3e(%rip)
4de8(5): call 0xffffc568(%rip)
4ded(3): mov (%rax),%r12d
4df0(3): mov %rbx,%rdi
4df3(3): mov %rax,%rbp
4df6(5): call 0xffffc5ba(%rip)
4dfb(3): test %r12d,%r12d
4dfe(2): jnz 0x32(%rip)
4e00(1): pop %rbx
4e01(1): pop %rbp
4e02(2): pop %r12
4e04(1): ret near (%rsp)
4e05(3): nop (%rax)
4e08(3): mov %rbx,%rdi
4e0b(5): call 0xffffc6d5(%rip)
4e10(2): xor %esi,%esi
4e12(5): mov $0x1,%edx
4e17(2): mov %eax,%edi
4e19(5): call 0xffffc637(%rip)
4e1e(4): cmp $0xffffffff,%rax
4e22(2): jnz 0xffffffba(%rip)
4e24(3): mov %rbx,%rdi
4e27(1): pop %rbx
4e28(1): pop %rbp
4e29(2): pop %r12
4e2b(5): jmp 0xffffc585(%rip)
4e30(4): mov %r12d,0x0(%rbp)
4e34(5): mov $0xffffffff,%eax
4e39(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4e40(3): test %rdi,%rdi
4e43(1): push %rbx
4e44(3): mov %rdi,%rbx
4e47(2): jz 0x13(%rip)
4e49(5): call 0xffffc6d7(%rip)
4e4e(2): test %eax,%eax
4e50(2): jz 0xa(%rip)
4e52(6): test $0x100,(%rbx)
4e58(2): jnz 0x10(%rip)
4e5a(3): mov %rbx,%rdi
4e5d(1): pop %rbx
4e5e(5): jmp 0xffffc6a2(%rip)
4e63(5): nop 0x0(%rax,%rax,1)
4e68(3): mov %rbx,%rdi
4e6b(5): mov $0x1,%edx
4e70(2): xor %esi,%esi
4e72(5): call 0xe(%rip)
4e77(3): mov %rbx,%rdi
4e7a(1): pop %rbx
4e7b(5): jmp 0xffffc685(%rip)

"rpl_fseeko" :
4e80(4): mov 0x8(%rdi),%rax
4e84(4): cmp %rax,0x10(%rdi)
4e88(2): jz 0x8(%rip)
4e8a(5): jmp 0xffffc6e6(%rip)
4e8f(1): nop 
4e90(4): mov 0x20(%rdi),%rax
4e94(4): cmp %rax,0x28(%rdi)
4e98(2): jnz 0xfffffff2(%rip)
4e9a(5): cmp $0x0,0x48(%rdi)
4e9f(2): jnz 0xffffffeb(%rip)
4ea1(2): push %r12
4ea3(1): push %rbp
4ea4(3): mov %edx,%r12d
4ea7(1): push %rbx
4ea8(3): mov %rsi,%rbp
4eab(3): mov %rdi,%rbx
4eae(5): call 0xffffc632(%rip)
4eb3(3): mov %r12d,%edx
4eb6(3): mov %rbp,%rsi
4eb9(2): mov %eax,%edi
4ebb(5): call 0xffffc595(%rip)
4ec0(4): cmp $0xffffffff,%rax
4ec4(2): jz 0xe(%rip)
4ec6(3): and $0xef,(%rbx)
4ec9(7): mov %rax,0x90(%rbx)
4ed0(2): xor %eax,%eax
4ed2(1): pop %rbx
4ed3(1): pop %rbp
4ed4(2): pop %r12
4ed6(1): ret near (%rsp)

"__libc_csu_init" :
4ee0(2): push %r15
4ee2(2): push %r14
4ee4(3): mov %rdx,%r15
4ee7(2): push %r13
4ee9(2): push %r12
4eeb(7): lea 0x202c7e(%rip),%r12
4ef2(1): push %rbp
4ef3(7): lea 0x202c7e(%rip),%rbp
4efa(1): push %rbx
4efb(3): mov %edi,%r13d
4efe(3): mov %rsi,%r14
4f01(3): sub %r12,%rbp
4f04(4): sub $0x8,%rsp
4f08(4): sar $0x3,%rbp
4f0c(5): call 0xffffc3f4(%rip)
4f11(3): test %rbp,%rbp
4f14(2): jz 0x22(%rip)
4f16(2): xor %ebx,%ebx
4f18(8): nop 0x0(%rax,%rax,1)
4f20(3): mov %r15,%rdx
4f23(3): mov %r14,%rsi
4f26(3): mov %r13d,%edi
4f29(4): call 0x0(%r12,%rbx,8)
4f2d(4): add $0x1,%rbx
4f31(3): cmp %rbx,%rbp
4f34(2): jnz 0xffffffec(%rip)
4f36(4): add $0x8,%rsp
4f3a(1): pop %rbx
4f3b(1): pop %rbp
4f3c(2): pop %r12
4f3e(2): pop %r13
4f40(2): pop %r14
4f42(2): pop %r15
4f44(1): ret near (%rsp)

"atexit" :
4f60(7): mov 0x2030a1(%rip),%rdx
4f67(2): xor %esi,%esi
4f69(5): jmp 0xffffc627(%rip)

"_fini" :
4f70(4): sub $0x8,%rsp
4f74(4): add $0x8,%rsp
4f78(1): ret near (%rsp)

