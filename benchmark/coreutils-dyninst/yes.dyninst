
"free@plt" :
11e0(6): jmp 0x205c9a(%rip)
11e6(5): push $0x0

"abort@plt" :
11f0(6): jmp 0x205c92(%rip)
11f6(5): push $0x1

"__errno_location@plt" :
1200(6): jmp 0x205c8a(%rip)
1206(5): push $0x2

"strncmp@plt" :
1210(6): jmp 0x205c82(%rip)
1216(5): push $0x3

"_exit@plt" :
1220(6): jmp 0x205c7a(%rip)
1226(5): push $0x4

"__fpending@plt" :
1230(6): jmp 0x205c72(%rip)
1236(5): push $0x5

"write@plt" :
1240(6): jmp 0x205c6a(%rip)
1246(5): push $0x6

"textdomain@plt" :
1250(6): jmp 0x205c62(%rip)
1256(5): push $0x7

"fclose@plt" :
1260(6): jmp 0x205c5a(%rip)
1266(5): push $0x8

"bindtextdomain@plt" :
1270(6): jmp 0x205c52(%rip)
1276(5): push $0x9

"dcgettext@plt" :
1280(6): jmp 0x205c4a(%rip)
1286(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1290(6): jmp 0x205c42(%rip)
1296(5): push $0xb

"strlen@plt" :
12a0(6): jmp 0x205c3a(%rip)
12a6(5): push $0xc

"__stack_chk_fail@plt" :
12b0(6): jmp 0x205c32(%rip)
12b6(5): push $0xd

"getopt_long@plt" :
12c0(6): jmp 0x205c2a(%rip)
12c6(5): push $0xe

"mbrtowc@plt" :
12d0(6): jmp 0x205c22(%rip)
12d6(5): push $0xf

"strrchr@plt" :
12e0(6): jmp 0x205c1a(%rip)
12e6(5): push $0x10

"lseek@plt" :
12f0(6): jmp 0x205c12(%rip)
12f6(5): push $0x11

"memset@plt" :
1300(6): jmp 0x205c0a(%rip)
1306(5): push $0x12

"memcmp@plt" :
1310(6): jmp 0x205c02(%rip)
1316(5): push $0x13

"fputs_unlocked@plt" :
1320(6): jmp 0x205bfa(%rip)
1326(5): push $0x14

"calloc@plt" :
1330(6): jmp 0x205bf2(%rip)
1336(5): push $0x15

"memcpy@plt" :
1340(6): jmp 0x205bea(%rip)
1346(5): push $0x16

"fileno@plt" :
1350(6): jmp 0x205be2(%rip)
1356(5): push $0x17

"malloc@plt" :
1360(6): jmp 0x205bda(%rip)
1366(5): push $0x18

"fflush@plt" :
1370(6): jmp 0x205bd2(%rip)
1376(5): push $0x19

"nl_langinfo@plt" :
1380(6): jmp 0x205bca(%rip)
1386(5): push $0x1a

"__freading@plt" :
1390(6): jmp 0x205bc2(%rip)
1396(5): push $0x1b

"realloc@plt" :
13a0(6): jmp 0x205bba(%rip)
13a6(5): push $0x1c

"setlocale@plt" :
13b0(6): jmp 0x205bb2(%rip)
13b6(5): push $0x1d

"__printf_chk@plt" :
13c0(6): jmp 0x205baa(%rip)
13c6(5): push $0x1e

"error@plt" :
13d0(6): jmp 0x205ba2(%rip)
13d6(5): push $0x1f

"fseeko@plt" :
13e0(6): jmp 0x205b9a(%rip)
13e6(5): push $0x20

"__cxa_atexit@plt" :
13f0(6): jmp 0x205b92(%rip)
13f6(5): push $0x21

"exit@plt" :
1400(6): jmp 0x205b8a(%rip)
1406(5): push $0x22

"fwrite@plt" :
1410(6): jmp 0x205b82(%rip)
1416(5): push $0x23

"__fprintf_chk@plt" :
1420(6): jmp 0x205b7a(%rip)
1426(5): push $0x24

"mbsinit@plt" :
1430(6): jmp 0x205b72(%rip)
1436(5): push $0x25

"iswprint@plt" :
1440(6): jmp 0x205b6a(%rip)
1446(5): push $0x26

"__ctype_b_loc@plt" :
1450(6): jmp 0x205b62(%rip)
1456(5): push $0x27

".plt.got" :
1460(6): jmp 0x205b7a(%rip)
1466(2): nop 

"_init" :
11b8(4): sub $0x8,%rsp
11bc(7): mov 0x205e0d(%rip),%rax
11c3(3): test %rax,%rax
11c6(2): jz 0x4(%rip)
11c8(2): call %rax
11ca(4): add $0x8,%rsp
11ce(1): ret near (%rsp)

"main" :
1470(2): push %r15
1472(2): push %r14
1474(2): push %r13
1476(2): push %r12
1478(3): mov %edi,%r12d
147b(1): push %rbp
147c(1): push %rbx
147d(3): mov %rsi,%rbx
1480(4): sub $0x18,%rsp
1484(3): mov (%rsi),%rdi
1487(5): call 0xa59(%rip)
148c(7): lea 0x3c2e(%rip),%rsi
1493(5): mov $0x6,%edi
1498(5): call 0xffffff18(%rip)
149d(7): lea 0x34a7(%rip),%rsi
14a4(7): lea 0x3477(%rip),%rdi
14ab(5): call 0xfffffdc5(%rip)
14b0(7): lea 0x346b(%rip),%rdi
14b7(5): call 0xfffffd99(%rip)
14bc(7): lea 0x66d(%rip),%rdi
14c3(5): call 0x33ad(%rip)
14c8(7): lea 0x3494(%rip),%rax
14cf(4): sub $0x8,%rsp
14d3(7): mov 0x205b36(%rip),%r8
14da(2): push $0x0
14dc(7): lea 0x33c1(%rip),%rdx
14e3(7): lea 0x3434(%rip),%rcx
14ea(1): push %rax
14eb(7): lea 0x2ce(%rip),%rax
14f2(6): mov $0x1,%r9d
14f8(3): mov %rbx,%rsi
14fb(3): mov %r12d,%edi
14fe(1): push %rax
14ff(2): xor %eax,%eax
1501(5): call 0x89f(%rip)
1506(7): movsxd 0x205b83(%rip),%rdx
150d(3): mov %rdx,%rax
1510(4): lea 0x0(%rbx,%rdx,8),%rbp
1514(3): movsxd %r12d,%rdx
1517(4): lea 0x0(%rbx,%rdx,8),%rdx
151b(5): mov %rdx,0x20(%rsp)
1520(4): add $0x20,%rsp
1524(3): cmp %r12d,%eax
1527(2): jnz 0x18(%rip)
1529(3): mov %rdx,%rax
152c(7): lea 0x3440(%rip),%rdx
1533(4): add $0x8,%rax
1537(4): mov %rdx,0xfffffff8(%rax)
153b(4): mov %rax,(%rsp)
153f(4): cmp %rbp,(%rsp)
1543(6): jbe 0x15d(%rip)
1549(4): mov 0x0(%rbp),%r13
154d(3): mov %rbp,%rbx
1550(6): mov $0x1,%r15d
1556(3): xor %r12d,%r12d
1559(3): mov %r13,%r14
155c(3): mov %r14,%rdi
155f(4): add $0x8,%rbx
1563(5): call 0xfffffd3d(%rip)
1568(4): add $0x1,%rax
156c(3): add %rax,%r12
156f(4): cmp (%rsp),%rbx
1573(2): jnb 0x1d(%rip)
1575(3): add %r14,%rax
1578(3): mov (%rbx),%r14
157b(3): cmp %r14,%rax
157e(5): mov $0x0,%eax
1583(4): cmovne %eax,%r15d
1587(2): jmp 0xffffffd5(%rip)
1589(7): nop 0x0(%rax)
1590(7): cmp $0x1000,%r12
1597(2): jbe 0x56(%rip)
1599(3): test %r15b,%r15b
159c(2): jz 0x57(%rip)
159e(2): xor %ebx,%ebx
15a0(2): jmp 0x20(%rip)
15a2(6): nop 0x0(%rax,%rax,1)
15a8(4): lea 0x0(%r14,%rbx,1),%rax
15ac(4): add $0x8,%rbp
15b0(4): lea 0x1(%rax),%rbx
15b4(3): add %r13,%rax
15b7(4): cmp %rbp,(%rsp)
15bb(3): mov $0x20,(%rax)
15be(2): jbe 0x4a(%rip)
15c0(4): mov 0x0(%rbp),%rsi
15c4(3): mov %rsi,%rdi
15c7(5): mov %rsi,0x8(%rsp)
15cc(5): call 0xfffffcd4(%rip)
15d1(3): test %r15b,%r15b
15d4(3): mov %rax,%r14
15d7(5): mov 0x8(%rsp),%rsi
15dc(2): jnz 0xffffffcc(%rip)
15de(5): lea 0x0(%r13,%rbx,1),%rdi
15e3(3): mov %rax,%rdx
15e6(5): call 0xfffffd5a(%rip)
15eb(2): jmp 0xffffffbd(%rip)
15ed(6): mov $0x2000,%r12d
15f3(3): mov %r12,%rdi
15f6(3): xor %r15d,%r15d
15f9(5): call 0x2c97(%rip)
15fe(3): mov %rax,%r13
1601(2): jmp 0xffffff9d(%rip)
1603(5): nop 0x0(%rax,%rax,1)
1608(2): xor %edx,%edx
160a(3): mov $0xa,(%rax)
160d(3): mov %r12,%rax
1610(3): div %rbx,%rax
1613(3): mov %rax,%rbp
1616(3): mov %rax,%r12
1619(4): sub $0x1,%rbp
161d(2): jz 0x29(%rip)
161f(5): lea 0x0(%r13,%rbx,1),%rcx
1624(4): nop 0x0(%rax)
1628(3): mov %rcx,%rdi
162b(3): mov %rbx,%rdx
162e(3): mov %r13,%rsi
1631(5): call 0xfffffd0f(%rip)
1636(3): mov %rax,%rcx
1639(3): add %rbx,%rcx
163c(4): sub $0x1,%rbp
1640(2): jnz 0xffffffe8(%rip)
1642(4): imul %r12,%rbx
1646(3): mov %rbx,%rdx
1649(3): mov %r13,%rsi
164c(5): mov $0x1,%edi
1651(5): call 0x58f(%rip)
1656(3): cmp %rbx,%rax
1659(2): jz 0xffffffed(%rip)
165b(7): lea 0x3313(%rip),%rsi
1662(5): mov $0x5,%edx
1667(2): xor %edi,%edi
1669(5): call 0xfffffc17(%rip)
166e(3): mov %rax,%rbx
1671(5): call 0xfffffb8f(%rip)
1676(2): mov (%rax),%esi
1678(3): mov %rbx,%rdx
167b(2): xor %eax,%eax
167d(2): xor %edi,%edi
167f(5): call 0xfffffd51(%rip)
1684(4): add $0x18,%rsp
1688(5): mov $0x1,%eax
168d(1): pop %rbx
168e(1): pop %rbp
168f(2): pop %r12
1691(2): pop %r13
1693(2): pop %r14
1695(2): pop %r15
1697(1): ret near (%rsp)
1698(8): nop 0x0(%rax,%rax,1)
16a0(5): mov $0x2000,%edi
16a5(5): call 0x2beb(%rip)
16aa(4): mov $0xa,0xffffffff(%rax)
16ae(2): ud2 
16b0(2): xor %ebp,%ebp
16b2(3): mov %rdx,%r9
16b5(1): pop %rsi
16b6(3): mov %rsp,%rdx
16b9(4): and $0xfffffff0,%rsp
16bd(1): push %rax
16be(1): push %rsp
16bf(7): lea 0x319a(%rip),%r8
16c6(7): lea 0x3123(%rip),%rcx
16cd(7): lea 0xfffffd9c(%rip),%rdi
16d4(6): call 0x2058ee(%rip)
16da(1): hlt 

"_start" :
16b0(2): xor %ebp,%ebp
16b2(3): mov %rdx,%r9
16b5(1): pop %rsi
16b6(3): mov %rsp,%rdx
16b9(4): and $0xfffffff0,%rsp
16bd(1): push %rax
16be(1): push %rsp
16bf(7): lea 0x319a(%rip),%r8
16c6(7): lea 0x3123(%rip),%rcx
16cd(7): lea 0xfffffd9c(%rip),%rdi
16d4(6): call 0x2058ee(%rip)
16da(1): hlt 

"deregister_tm_clones" :
16e0(7): lea 0x205999(%rip),%rdi
16e7(1): push %rbp
16e8(7): lea 0x205991(%rip),%rax
16ef(3): cmp %rdi,%rax
16f2(3): mov %rsp,%rbp
16f5(2): jz 0x1b(%rip)
16f7(7): mov 0x2058c2(%rip),%rax
16fe(3): test %rax,%rax
1701(2): jz 0xf(%rip)
1703(1): pop %rbp
1704(2): jmp %rax
1706(a): nop 0x0(%rax,%rax,1)
1710(1): pop %rbp
1711(1): ret near (%rsp)

"register_tm_clones" :
1720(7): lea 0x205959(%rip),%rdi
1727(7): lea 0x205952(%rip),%rsi
172e(1): push %rbp
172f(3): sub %rdi,%rsi
1732(3): mov %rsp,%rbp
1735(4): sar $0x3,%rsi
1739(3): mov %rsi,%rax
173c(4): shr $0x3f,%rax
1740(3): add %rax,%rsi
1743(3): sar $0x1,%rsi
1746(2): jz 0x1a(%rip)
1748(7): mov 0x205889(%rip),%rax
174f(3): test %rax,%rax
1752(2): jz 0xe(%rip)
1754(1): pop %rbp
1755(2): jmp %rax
1757(9): nop 0x0(%rax,%rax,1)
1760(1): pop %rbp
1761(1): ret near (%rsp)

"__do_global_dtors_aux" :
1770(7): cmp $0x0,0x205951(%rip)
1777(2): jnz 0x31(%rip)
1779(8): cmp $0x0,0x20585f(%rip)
1781(1): push %rbp
1782(3): mov %rsp,%rbp
1785(2): jz 0xe(%rip)
1787(7): mov 0x20587a(%rip),%rdi
178e(5): call 0xfffffcd2(%rip)
1793(5): call 0xffffff4d(%rip)
1798(7): mov $0x1,0x205929(%rip)
179f(1): pop %rbp
17a0(1): ret near (%rsp)
17a1(7): nop 0x0(%rax)
17a8(2): REP ret near (%rsp)

"frame_dummy" :
17b0(1): push %rbp
17b1(3): mov %rsp,%rbp
17b4(1): pop %rbp
17b5(5): jmp 0xffffff6b(%rip)

"usage" :
17c0(2): push %r13
17c2(2): push %r12
17c4(5): mov $0x5,%edx
17c9(1): push %rbp
17ca(1): push %rbx
17cb(2): mov %edi,%ebp
17cd(7): sub $0x88,%rsp
17d4(7): mov 0x205905(%rip),%rbx
17db(9): mov $0x28,%rax
17e4(5): mov %rax,0x78(%rsp)
17e9(2): xor %eax,%eax
17eb(2): test %edi,%edi
17ed(2): jz 0x30(%rip)
17ef(7): lea 0x3192(%rip),%rsi
17f6(2): xor %edi,%edi
17f8(5): call 0xfffffa88(%rip)
17fd(7): mov 0x2058bc(%rip),%rdi
1804(3): mov %rax,%rdx
1807(3): mov %rbx,%rcx
180a(5): mov $0x1,%esi
180f(2): xor %eax,%eax
1811(5): call 0xfffffc0f(%rip)
1816(2): mov %ebp,%edi
1818(5): call 0xfffffbe8(%rip)
181d(7): lea 0x318c(%rip),%rsi
1824(2): xor %edi,%edi
1826(5): call 0xfffffa5a(%rip)
182b(3): mov %rbx,%rcx
182e(3): mov %rbx,%rdx
1831(3): mov %rax,%rsi
1834(5): mov $0x1,%edi
1839(2): xor %eax,%eax
183b(5): call 0xfffffb85(%rip)
1840(7): mov 0x205841(%rip),%rbx
1847(7): lea 0x318a(%rip),%rsi
184e(5): mov $0x5,%edx
1853(2): xor %edi,%edi
1855(5): call 0xfffffa2b(%rip)
185a(3): mov %rbx,%rsi
185d(3): mov %rax,%rdi
1860(5): call 0xfffffac0(%rip)
1865(7): mov 0x20581c(%rip),%rbx
186c(7): lea 0x31ad(%rip),%rsi
1873(5): mov $0x5,%edx
1878(2): xor %edi,%edi
187a(5): call 0xfffffa06(%rip)
187f(3): mov %rbx,%rsi
1882(3): mov %rax,%rdi
1885(5): call 0xfffffa9b(%rip)
188a(7): mov 0x2057f7(%rip),%rbx
1891(7): lea 0x31b8(%rip),%rsi
1898(5): mov $0x5,%edx
189d(2): xor %edi,%edi
189f(5): call 0xfffff9e1(%rip)
18a4(3): mov %rbx,%rsi
18a7(3): mov %rax,%rdi
18aa(7): lea 0x2ff3(%rip),%rbx
18b1(5): call 0xfffffa6f(%rip)
18b6(7): lea 0x2feb(%rip),%rax
18bd(7): lea 0x3025(%rip),%rcx
18c4(9): mov $0x0,0x60(%rsp)
18cd(9): mov $0x0,0x68(%rsp)
18d6(3): mov %rsp,%rdx
18d9(4): mov %rax,(%rsp)
18dd(7): lea 0x2fc6(%rip),%rax
18e4(5): mov %rcx,0x30(%rsp)
18e9(7): lea 0x3003(%rip),%rcx
18f0(5): mov %rax,0x8(%rsp)
18f5(7): lea 0x3026(%rip),%rax
18fc(5): mov %rcx,0x40(%rsp)
1901(7): lea 0x2ff5(%rip),%rcx
1908(5): mov %rax,0x10(%rsp)
190d(7): lea 0x2fa6(%rip),%rax
1914(5): mov %rcx,0x50(%rsp)
1919(5): mov %rax,0x18(%rsp)
191e(7): lea 0x2fab(%rip),%rax
1925(5): mov %rax,0x20(%rsp)
192a(7): lea 0x2fa9(%rip),%rax
1931(5): mov %rax,0x28(%rsp)
1936(5): mov %rax,0x38(%rsp)
193b(5): mov %rax,0x48(%rsp)
1940(5): mov %rax,0x58(%rsp)
1945(3): nop (%rax)
1948(4): add $0x10,%rdx
194c(3): mov (%rdx),%rdi
194f(3): test %rdi,%rdi
1952(2): jz 0x15(%rip)
1954(5): mov $0x4,%ecx
1959(3): mov %rbx,%rsi
195c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
195e(3): setnbe %al
1961(2): sbb $0x0,%al
1963(2): test %al,%al
1965(2): jnz 0xffffffe3(%rip)
1967(4): mov 0x8(%rdx),%r12
196b(2): xor %edi,%edi
196d(5): mov $0x5,%edx
1972(7): lea 0x2f8e(%rip),%rsi
1979(3): test %r12,%r12
197c(6): jz 0xc7(%rip)
1982(5): call 0xfffff8fe(%rip)
1987(7): lea 0x30fa(%rip),%rcx
198e(7): lea 0x2f89(%rip),%rdx
1995(3): mov %rax,%rsi
1998(5): mov $0x1,%edi
199d(2): xor %eax,%eax
199f(5): call 0xfffffa21(%rip)
19a4(2): xor %esi,%esi
19a6(5): mov $0x5,%edi
19ab(5): call 0xfffffa05(%rip)
19b0(3): test %rax,%rax
19b3(2): jz 0x1e(%rip)
19b5(7): lea 0x2f70(%rip),%rsi
19bc(5): mov $0x3,%edx
19c1(3): mov %rax,%rdi
19c4(5): call 0xfffff84c(%rip)
19c9(2): test %eax,%eax
19cb(6): jnz 0x10d(%rip)
19d1(7): lea 0x2f58(%rip),%rsi
19d8(2): xor %edi,%edi
19da(5): mov $0x5,%edx
19df(5): call 0xfffff8a1(%rip)
19e4(7): lea 0x2eb9(%rip),%rcx
19eb(7): lea 0x3096(%rip),%rdx
19f2(3): mov %rax,%rsi
19f5(5): mov $0x1,%edi
19fa(2): xor %eax,%eax
19fc(5): call 0xfffff9c4(%rip)
1a01(3): cmp %rbx,%r12
1a04(7): lea 0x2eb9(%rip),%rcx
1a0b(7): lea 0x36af(%rip),%rbx
1a12(4): cmove %rcx,%rbx
1a16(7): lea 0x30db(%rip),%rsi
1a1d(2): xor %edi,%edi
1a1f(5): mov $0x5,%edx
1a24(5): call 0xfffff85c(%rip)
1a29(3): mov %rbx,%rcx
1a2c(3): mov %rax,%rsi
1a2f(3): mov %r12,%rdx
1a32(5): mov $0x1,%edi
1a37(2): xor %eax,%eax
1a39(5): call 0xfffff987(%rip)
1a3e(5): jmp 0xfffffdd8(%rip)
1a43(5): call 0xfffff83d(%rip)
1a48(7): lea 0x3039(%rip),%rcx
1a4f(7): lea 0x2ec8(%rip),%rdx
1a56(3): mov %rax,%rsi
1a59(5): mov $0x1,%edi
1a5e(2): xor %eax,%eax
1a60(5): call 0xfffff960(%rip)
1a65(2): xor %esi,%esi
1a67(5): mov $0x5,%edi
1a6c(5): call 0xfffff944(%rip)
1a71(3): test %rax,%rax
1a74(2): jz 0x1a(%rip)
1a76(7): lea 0x2eaf(%rip),%rsi
1a7d(5): mov $0x3,%edx
1a82(3): mov %rax,%rdi
1a85(5): call 0xfffff78b(%rip)
1a8a(2): test %eax,%eax
1a8c(2): jnz 0x45(%rip)
1a8e(7): lea 0x2e9b(%rip),%rsi
1a95(5): mov $0x5,%edx
1a9a(2): xor %edi,%edi
1a9c(7): lea 0x2e01(%rip),%r12
1aa3(7): lea 0x2e1a(%rip),%rbx
1aaa(5): call 0xfffff7d6(%rip)
1aaf(7): lea 0x2dee(%rip),%rcx
1ab6(7): lea 0x2fcb(%rip),%rdx
1abd(3): mov %rax,%rsi
1ac0(5): mov $0x1,%edi
1ac5(2): xor %eax,%eax
1ac7(5): call 0xfffff8f9(%rip)
1acc(5): jmp 0xffffff4a(%rip)
1ad1(7): lea 0x2dcc(%rip),%r12
1ad8(7): mov 0x2055a9(%rip),%r13
1adf(7): lea 0x2fca(%rip),%rsi
1ae6(2): xor %edi,%edi
1ae8(5): mov $0x5,%edx
1aed(5): call 0xfffff793(%rip)
1af2(3): mov %r13,%rsi
1af5(3): mov %rax,%rdi
1af8(5): call 0xfffff828(%rip)
1afd(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1b10(7): mov %rdi,0x2055c1(%rip)
1b17(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1b20(7): mov %dil,0x2055a9(%rip)
1b27(1): ret near (%rsp)

"close_stdout" :
1b30(1): push %rbp
1b31(1): push %rbx
1b32(4): sub $0x8,%rsp
1b36(7): mov 0x20554b(%rip),%rdi
1b3d(5): call 0x2a73(%rip)
1b42(2): test %eax,%eax
1b44(2): jz 0x18(%rip)
1b46(5): call 0xfffff6ba(%rip)
1b4b(7): cmp $0x0,0x20557e(%rip)
1b52(3): mov %rax,%rbx
1b55(2): jz 0x1e(%rip)
1b57(3): cmp $0x20,(%rax)
1b5a(2): jnz 0x19(%rip)
1b5c(7): mov 0x20555d(%rip),%rdi
1b63(5): call 0x2a4d(%rip)
1b68(2): test %eax,%eax
1b6a(2): jnz 0x48(%rip)
1b6c(4): add $0x8,%rsp
1b70(1): pop %rbx
1b71(1): pop %rbp
1b72(1): ret near (%rsp)
1b73(7): lea 0x2fb6(%rip),%rsi
1b7a(2): xor %edi,%edi
1b7c(5): mov $0x5,%edx
1b81(5): call 0xfffff6ff(%rip)
1b86(7): mov 0x20554b(%rip),%rdi
1b8d(3): mov %rax,%rbp
1b90(3): test %rdi,%rdi
1b93(2): jz 0x2a(%rip)
1b95(5): call 0x1e5b(%rip)
1b9a(2): mov (%rbx),%esi
1b9c(7): lea 0x2f99(%rip),%rdx
1ba3(3): mov %rax,%rcx
1ba6(3): mov %rbp,%r8
1ba9(2): xor %edi,%edi
1bab(2): xor %eax,%eax
1bad(5): call 0xfffff823(%rip)
1bb2(6): mov 0x205460(%rip),%edi
1bb8(5): call 0xfffff668(%rip)
1bbd(2): mov (%rbx),%esi
1bbf(7): lea 0x2f7a(%rip),%rdx
1bc6(3): mov %rax,%rcx
1bc9(2): xor %edi,%edi
1bcb(2): xor %eax,%eax
1bcd(5): call 0xfffff803(%rip)
1bd2(2): jmp 0xffffffe0(%rip)

"full_write" :
1be0(2): push %r13
1be2(2): push %r12
1be4(1): push %rbp
1be5(1): push %rbx
1be6(4): sub $0x8,%rsp
1bea(3): test %rdx,%rdx
1bed(2): jz 0x64(%rip)
1bef(3): mov %edi,%r13d
1bf2(3): mov %rsi,%rbp
1bf5(3): mov %rdx,%rbx
1bf8(3): xor %r12d,%r12d
1bfb(2): jmp 0x15(%rip)
1bfd(3): nop (%rax)
1c00(3): test %rax,%rax
1c03(2): jz 0x35(%rip)
1c05(3): add %rax,%r12
1c08(3): add %rax,%rbp
1c0b(3): sub %rax,%rbx
1c0e(2): jz 0x16(%rip)
1c10(3): mov %rbx,%rdx
1c13(3): mov %rbp,%rsi
1c16(3): mov %r13d,%edi
1c19(5): call 0x1ff7(%rip)
1c1e(4): cmp $0xffffffff,%rax
1c22(2): jnz 0xffffffde(%rip)
1c24(4): add $0x8,%rsp
1c28(3): mov %r12,%rax
1c2b(1): pop %rbx
1c2c(1): pop %rbp
1c2d(2): pop %r12
1c2f(2): pop %r13
1c31(1): ret near (%rsp)
1c32(6): nop 0x0(%rax,%rax,1)
1c38(5): call 0xfffff5c8(%rip)
1c3d(6): mov $0x1c,(%rax)
1c43(4): add $0x8,%rsp
1c47(3): mov %r12,%rax
1c4a(1): pop %rbx
1c4b(1): pop %rbp
1c4c(2): pop %r12
1c4e(2): pop %r13
1c50(1): ret near (%rsp)
1c51(3): xor %r12d,%r12d
1c54(2): jmp 0xffffffd0(%rip)

"parse_long_options" :
1c60(2): push %r13
1c62(2): push %r12
1c64(3): mov %r8,%r13
1c67(1): push %rbp
1c68(1): push %rbx
1c69(3): mov %rdx,%rbp
1c6c(3): mov %rcx,%r12
1c6f(7): sub $0xe8,%rsp
1c76(2): test %al,%al
1c78(2): jz 0x3c(%rip)
1c7a(5): movaps %xmm0,0x60(%rsp)
1c7f(5): movaps %xmm1,0x70(%rsp)
1c84(8): movaps %xmm2,0x80(%rsp)
1c8c(8): movaps %xmm3,0x90(%rsp)
1c94(8): movaps %xmm4,0xa0(%rsp)
1c9c(8): movaps %xmm5,0xb0(%rsp)
1ca4(8): movaps %xmm6,0xc0(%rsp)
1cac(8): movaps %xmm7,0xd0(%rsp)
1cb4(9): mov $0x28,%rax
1cbd(5): mov %rax,0x28(%rsp)
1cc2(2): xor %eax,%eax
1cc4(3): cmp $0x2,%edi
1cc7(6): mov 0x2053d3(%rip),%ebx
1ccd(a): mov $0x0,0x2053c9(%rip)
1cd7(2): jz 0x39(%rip)
1cd9(5): mov 0x28(%rsp),%rax
1cde(9): xor $0x28,%rax
1ce7(6): mov %ebx,0x2053b3(%rip)
1ced(a): mov $0x0,0x205399(%rip)
1cf7(6): jnz 0xa3(%rip)
1cfd(7): add $0xe8,%rsp
1d04(1): pop %rbx
1d05(1): pop %rbp
1d06(2): pop %r12
1d08(2): pop %r13
1d0a(1): ret near (%rsp)
1d0b(5): nop 0x0(%rax,%rax,1)
1d10(7): lea 0x204ea9(%rip),%rcx
1d17(7): lea 0x2e25(%rip),%rdx
1d1e(3): xor %r8d,%r8d
1d21(5): mov %r9,0x8(%rsp)
1d26(5): call 0xfffff59a(%rip)
1d2b(3): cmp $0xff,%eax
1d2e(2): jz 0xffffffab(%rip)
1d30(3): cmp $0x68,%eax
1d33(5): mov 0x8(%rsp),%r9
1d38(2): jz 0x58(%rip)
1d3a(3): cmp $0x76,%eax
1d3d(2): jnz 0xffffff9c(%rip)
1d3f(8): lea 0x110(%rsp),%rax
1d47(7): mov 0x20533a(%rip),%rdi
1d4e(5): lea 0x10(%rsp),%r8
1d53(3): mov %r13,%rcx
1d56(3): mov %r12,%rdx
1d59(3): mov %rbp,%rsi
1d5c(5): mov %rax,0x18(%rsp)
1d61(5): lea 0x30(%rsp),%rax
1d66(8): mov $0x30,0x10(%rsp)
1d6e(8): mov $0x30,0x14(%rsp)
1d76(5): mov %rax,0x20(%rsp)
1d7b(5): call 0x2335(%rip)
1d80(2): xor %edi,%edi
1d82(5): call 0xfffff67e(%rip)
1d87(9): nop 0x0(%rax,%rax,1)
1d90(2): xor %edi,%edi
1d92(3): call %r9
1d95(5): jmp 0xffffff44(%rip)
1d9a(5): call 0xfffff516(%rip)

"parse_gnu_standard_options_only" :
1da0(2): push %r14
1da2(2): push %r13
1da4(3): mov %r8,%r14
1da7(2): push %r12
1da9(1): push %rbp
1daa(3): mov %rdx,%r12
1dad(1): push %rbx
1dae(3): mov %rcx,%r13
1db1(7): sub $0xd0,%rsp
1db8(2): test %al,%al
1dba(8): mov 0x100(%rsp),%rbp
1dc2(2): jz 0x39(%rip)
1dc4(5): movaps %xmm0,0x50(%rsp)
1dc9(5): movaps %xmm1,0x60(%rsp)
1dce(5): movaps %xmm2,0x70(%rsp)
1dd3(8): movaps %xmm3,0x80(%rsp)
1ddb(8): movaps %xmm4,0x90(%rsp)
1de3(8): movaps %xmm5,0xa0(%rsp)
1deb(8): movaps %xmm6,0xb0(%rsp)
1df3(8): movaps %xmm7,0xc0(%rsp)
1dfb(9): mov $0x28,%rax
1e04(5): mov %rax,0x18(%rsp)
1e09(2): xor %eax,%eax
1e0b(7): lea 0x32af(%rip),%rdx
1e12(7): lea 0x2d2a(%rip),%rax
1e19(3): test %r9b,%r9b
1e1c(7): lea 0x204d9d(%rip),%rcx
1e23(4): cmove %rax,%rdx
1e27(3): xor %r8d,%r8d
1e2a(6): mov 0x205270(%rip),%ebx
1e30(a): mov $0x1,0x205266(%rip)
1e3a(5): call 0xfffff486(%rip)
1e3f(3): cmp $0xff,%eax
1e42(2): jz 0x66(%rip)
1e44(3): cmp $0x68,%eax
1e47(6): jz 0x89(%rip)
1e4d(3): cmp $0x76,%eax
1e50(2): jnz 0x50(%rip)
1e52(8): lea 0x108(%rsp),%rax
1e5a(7): mov 0x205227(%rip),%rdi
1e61(3): mov %rsp,%r8
1e64(3): mov %r14,%rcx
1e67(3): mov %r13,%rdx
1e6a(3): mov %r12,%rsi
1e6d(5): mov %rax,0x8(%rsp)
1e72(5): lea 0x20(%rsp),%rax
1e77(7): mov $0x30,(%rsp)
1e7e(8): mov $0x30,0x4(%rsp)
1e86(5): mov %rax,0x10(%rsp)
1e8b(5): call 0x2225(%rip)
1e90(2): xor %edi,%edi
1e92(5): call 0xfffff56e(%rip)
1e97(9): nop 0x0(%rax,%rax,1)
1ea0(6): mov 0x205172(%rip),%edi
1ea6(2): call %rbp
1ea8(5): mov 0x18(%rsp),%rax
1ead(9): xor $0x28,%rax
1eb6(6): mov %ebx,0x2051e4(%rip)
1ebc(2): jnz 0x1a(%rip)
1ebe(7): add $0xd0,%rsp
1ec5(1): pop %rbx
1ec6(1): pop %rbp
1ec7(2): pop %r12
1ec9(2): pop %r13
1ecb(2): pop %r14
1ecd(1): ret near (%rsp)
1ece(2): nop 
1ed0(2): xor %edi,%edi
1ed2(2): call %rbp
1ed4(2): jmp 0xffffffd4(%rip)
1ed6(5): call 0xfffff3da(%rip)

"set_program_name" :
1ee0(3): test %rdi,%rdi
1ee3(1): push %rbx
1ee4(2): jz 0x79(%rip)
1ee6(5): mov $0x2f,%esi
1eeb(3): mov %rdi,%rbx
1eee(5): call 0xfffff3f2(%rip)
1ef3(3): test %rax,%rax
1ef6(2): jz 0x57(%rip)
1ef8(4): lea 0x1(%rax),%r8
1efc(3): mov %r8,%rdx
1eff(3): sub %rbx,%rdx
1f02(4): cmp $0x6,%rdx
1f06(2): jle 0x47(%rip)
1f08(4): lea 0xfffffffa(%rax),%rsi
1f0c(7): lea 0x2c7d(%rip),%rdi
1f13(5): mov $0x7,%ecx
1f18(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1f1a(3): setnbe %dl
1f1d(3): sbb $0x0,%dl
1f20(2): test %dl,%dl
1f22(2): jnz 0x2b(%rip)
1f24(7): lea 0x2c6d(%rip),%rdi
1f2b(5): mov $0x3,%ecx
1f30(3): mov %r8,%rsi
1f33(3): mov %r8,%rbx
1f36(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1f38(3): setnbe %dl
1f3b(3): sbb $0x0,%dl
1f3e(2): test %dl,%dl
1f40(2): jnz 0xd(%rip)
1f42(4): lea 0x4(%rax),%rbx
1f46(7): mov %rbx,0x205133(%rip)
1f4d(7): mov %rbx,0x20518c(%rip)
1f54(7): mov %rbx,0x20513d(%rip)
1f5b(1): pop %rbx
1f5c(1): ret near (%rsp)
1f5d(7): mov 0x20515c(%rip),%rcx
1f64(7): lea 0x2bed(%rip),%rdi
1f6b(5): mov $0x37,%edx
1f70(5): mov $0x1,%esi
1f75(5): call 0xfffff49b(%rip)
1f7a(5): call 0xfffff276(%rip)

"gettext_quote.part.1" :
1f80(1): push %rbp
1f81(1): push %rbx
1f82(3): mov %rdi,%rbp
1f85(2): mov %esi,%ebx
1f87(4): sub $0x8,%rsp
1f8b(5): call 0x2705(%rip)
1f90(3): movzx (%rax),%edx
1f93(3): and $0xdf,%edx
1f96(3): cmp $0x55,%dl
1f99(2): jz 0x77(%rip)
1f9b(3): cmp $0x47,%dl
1f9e(2): jz 0x22(%rip)
1fa0(7): lea 0x2c04(%rip),%rax
1fa7(7): lea 0x2bff(%rip),%rdx
1fae(3): cmp $0x9,%ebx
1fb1(4): cmovne %rdx,%rax
1fb5(4): add $0x8,%rsp
1fb9(1): pop %rbx
1fba(1): pop %rbp
1fbb(1): ret near (%rsp)
1fbc(4): nop 0x0(%rax)
1fc0(4): movzx 0x1(%rax),%edx
1fc4(3): and $0xdf,%edx
1fc7(3): cmp $0x42,%dl
1fca(2): jnz 0xffffffd6(%rip)
1fcc(4): cmp $0x31,0x2(%rax)
1fd0(2): jnz 0xffffffd0(%rip)
1fd2(4): cmp $0x38,0x3(%rax)
1fd6(2): jnz 0xffffffca(%rip)
1fd8(4): cmp $0x30,0x4(%rax)
1fdc(2): jnz 0xffffffc4(%rip)
1fde(4): cmp $0x33,0x5(%rax)
1fe2(2): jnz 0xffffffbe(%rip)
1fe4(4): cmp $0x30,0x6(%rax)
1fe8(2): jnz 0xffffffb8(%rip)
1fea(4): cmp $0x0,0x7(%rax)
1fee(2): jnz 0xffffffb2(%rip)
1ff0(4): cmp $0x60,0x0(%rbp)
1ff4(7): lea 0x2ba9(%rip),%rax
1ffb(7): lea 0x2ba6(%rip),%rdx
2002(4): cmovne %rdx,%rax
2006(4): add $0x8,%rsp
200a(1): pop %rbx
200b(1): pop %rbp
200c(1): ret near (%rsp)
200d(3): nop (%rax)
2010(4): movzx 0x1(%rax),%edx
2014(3): and $0xdf,%edx
2017(3): cmp $0x54,%dl
201a(2): jnz 0xffffff86(%rip)
201c(4): movzx 0x2(%rax),%edx
2020(3): and $0xdf,%edx
2023(3): cmp $0x46,%dl
2026(6): jnz 0xffffff7a(%rip)
202c(4): cmp $0x2d,0x3(%rax)
2030(6): jnz 0xffffff70(%rip)
2036(4): cmp $0x38,0x4(%rax)
203a(6): jnz 0xffffff66(%rip)
2040(4): cmp $0x0,0x5(%rax)
2044(6): jnz 0xffffff5c(%rip)
204a(4): cmp $0x60,0x0(%rbp)
204e(7): lea 0x2b47(%rip),%rax
2055(7): lea 0x2b44(%rip),%rdx
205c(4): cmovne %rdx,%rax
2060(4): add $0x8,%rsp
2064(1): pop %rbx
2065(1): pop %rbp
2066(1): ret near (%rsp)

"quotearg_buffer_restyled" :
2070(2): push %r15
2072(2): push %r14
2074(3): mov %r8d,%r15d
2077(2): push %r13
2079(2): push %r12
207b(3): mov %rdi,%r14
207e(1): push %rbp
207f(1): push %rbx
2080(3): mov %r9d,%ebx
2083(3): mov %rsi,%r13
2086(3): mov %rcx,%rbp
2089(3): and $0x2,%ebx
208c(7): sub $0xb8,%rsp
2093(8): mov 0xf0(%rsp),%rax
209b(5): mov %rdx,0x10(%rsp)
20a0(5): mov %r8d,0x8(%rsp)
20a5(5): mov %r9d,0x78(%rsp)
20aa(5): mov %rax,0x20(%rsp)
20af(8): mov 0xf8(%rsp),%rax
20b7(5): mov %rax,0x68(%rsp)
20bc(8): mov 0x100(%rsp),%rax
20c4(5): mov %rax,0x60(%rsp)
20c9(9): mov $0x28,%rax
20d2(8): mov %rax,0xa8(%rsp)
20da(2): xor %eax,%eax
20dc(5): call 0xfffff1b4(%rip)
20e1(4): cmp $0xa,%r15d
20e5(5): mov %rax,0x58(%rsp)
20ea(6): jnbe 0x11b5(%rip)
20f0(7): lea 0x2b09(%rip),%rcx
20f7(3): mov %r15d,%edx
20fa(4): movsxd 0x0(%rcx,%rdx,4),%rax
20fe(3): add %rcx,%rax
2101(2): jmp %rax
2103(5): mov $0x1,0xe(%rsp)
2108(5): mov $0x0,0x7c(%rsp)
210d(3): xor %r12d,%r12d
2110(9): mov $0x0,0x50(%rsp)
2119(5): mov $0x1,0xf(%rsp)
211e(5): mov $0x0,0xd(%rsp)
2123(7): lea 0x2a83(%rip),%rax
212a(9): mov $0x1,0x18(%rsp)
2133(3): xor %r15d,%r15d
2136(8): mov $0x2,0x8(%rsp)
213e(5): mov %rax,0x48(%rsp)
2143(3): xor %r11d,%r11d
2146(3): mov %rbp,%rax
2149(3): mov %r12d,%r8d
214c(3): mov %r11,%rbp
214f(3): mov %rax,%r11
2152(6): nop 0x0(%rax,%rax,1)
2158(3): cmp %rbp,%r11
215b(4): setnz %r12b
215f(4): cmp $0xffffffff,%r11
2163(2): jnz 0xf(%rip)
2165(5): mov 0x10(%rsp),%rax
216a(4): cmp $0x0,0x0(%rax,%rbp,1)
216e(4): setnz %r12b
2172(3): test %r12b,%r12b
2175(6): jz 0x65b(%rip)
217b(5): cmp $0x2,0x8(%rsp)
2180(5): mov 0x10(%rsp),%rdi
2185(4): lea 0x0(%rdi,%rbp,1),%r9
2189(3): setnz %al
218c(4): and 0xd(%rsp),%al
2190(3): mov %eax,%r10d
2193(6): jz 0xad(%rip)
2199(5): mov 0x18(%rsp),%rax
219e(3): test %rax,%rax
21a1(6): jz 0x42f(%rip)
21a7(4): cmp $0xffffffff,%r11
21ab(5): lea 0x0(%rbp,%rax,1),%rbx
21b0(2): jnz 0x30(%rip)
21b2(4): cmp $0x1,%rax
21b6(2): jbe 0x2a(%rip)
21b8(5): mov %r8b,0x38(%rsp)
21bd(5): mov %r10b,0x30(%rsp)
21c2(5): mov %r9,0x28(%rsp)
21c7(5): call 0xfffff0d9(%rip)
21cc(6): movzx 0x38(%rsp),%r8d
21d2(6): movzx 0x30(%rsp),%r10d
21d8(3): mov %rax,%r11
21db(5): mov 0x28(%rsp),%r9
21e0(3): cmp %r11,%rbx
21e3(5): mov %r10b,0x28(%rsp)
21e8(6): jnbe 0x5b8(%rip)
21ee(5): mov 0x18(%rsp),%rdx
21f3(5): mov 0x48(%rsp),%rsi
21f8(3): mov %r9,%rdi
21fb(5): mov %r11,0x40(%rsp)
2200(5): mov %r8b,0x38(%rsp)
2205(5): mov %r9,0x30(%rsp)
220a(5): call 0xfffff106(%rip)
220f(2): test %eax,%eax
2211(5): mov 0x30(%rsp),%r9
2216(6): movzx 0x38(%rsp),%r8d
221c(5): mov 0x40(%rsp),%r11
2221(6): jnz 0x57f(%rip)
2227(5): cmp $0x0,0xf(%rsp)
222c(6): movzx 0x28(%rsp),%r10d
2232(6): jnz 0xf83(%rip)
2238(8): nop 0x0(%rax,%rax,1)
2240(4): movzx (%r9),%ebx
2244(3): cmp $0x7e,%bl
2247(6): jnbe 0x321(%rip)
224d(7): lea 0x29d8(%rip),%rcx
2254(3): movzx %bl,%edx
2257(4): movsxd 0x0(%rcx,%rdx,4),%rax
225b(3): add %rcx,%rax
225e(2): jmp %rax
2260(3): xor %r10d,%r10d
2263(4): cmp $0x1,%r11
2267(3): setnz %al
226a(4): cmp $0xffffffff,%r11
226e(2): jnz 0xe(%rip)
2270(5): mov 0x10(%rsp),%rax
2275(4): cmp $0x0,0x1(%rax)
2279(3): setnz %al
227c(5): cmp $0x2,0x8(%rsp)
2281(3): setz %dl
2284(2): test %al,%al
2286(6): jz 0x252(%rip)
228c(3): xor %r12d,%r12d
228f(2): xor %eax,%eax
2291(7): nop 0x0(%rax)
2298(5): cmp $0x1,0xd(%rsp)
229d(6): jnz 0x115(%rip)
22a3(2): test %dl,%dl
22a5(6): jnz 0x10d(%rip)
22ab(5): mov 0x20(%rsp),%rsi
22b0(3): test %rsi,%rsi
22b3(2): jz 0x16(%rip)
22b5(2): mov %ebx,%edx
22b7(3): shr $0x5,%dl
22ba(3): movzx %dl,%edx
22bd(3): mov 0x0(%rsi,%rdx,4),%edx
22c0(3): bt %ebx,%edx
22c3(6): jb 0x150(%rip)
22c9(3): test %r10b,%r10b
22cc(6): jnz 0x147(%rip)
22d2(3): xor $0x1,%eax
22d5(4): add $0x1,%rbp
22d9(3): and %r8d,%eax
22dc(2): test %al,%al
22de(2): jz 0x22(%rip)
22e0(3): cmp %r15,%r13
22e3(2): jbe 0x7(%rip)
22e5(5): mov $0x27,0x0(%r14,%r15,1)
22ea(4): lea 0x1(%r15),%rax
22ee(3): cmp %rax,%r13
22f1(2): jbe 0x8(%rip)
22f3(6): mov $0x27,0x1(%r14,%r15,1)
22f9(4): add $0x2,%r15
22fd(3): xor %r8d,%r8d
2300(3): cmp %r13,%r15
2303(2): jnb 0x6(%rip)
2305(4): mov %bl,0x0(%r14,%r15,1)
2309(5): movzx 0xe(%rsp),%edi
230e(4): add $0x1,%r15
2312(5): mov $0x0,%eax
2317(3): test %r12b,%r12b
231a(3): cmove %eax,%edi
231d(5): mov %dil,0xe(%rsp)
2322(5): jmp 0xfffffe36(%rip)
2327(9): nop 0x0(%rax,%rax,1)
2330(3): xor %r10d,%r10d
2333(4): mov 0x8(%rsp),%eax
2337(3): cmp $0x2,%eax
233a(6): jz 0x5be(%rip)
2340(3): cmp $0x5,%eax
2343(6): jz 0x575(%rip)
2349(3): cmp $0x2,%eax
234c(5): mov $0x3f,%ebx
2351(3): setz %dl
2354(3): xor %r12d,%r12d
2357(2): xor %eax,%eax
2359(5): jmp 0xffffff3f(%rip)
235e(2): nop 
2360(3): xor %r10d,%r10d
2363(5): cmp $0x2,0x8(%rsp)
2368(6): jz 0x508(%rip)
236e(5): mov %r12b,0x7c(%rsp)
2373(2): xor %edx,%edx
2375(2): xor %eax,%eax
2377(5): mov $0x27,%ebx
237c(5): jmp 0xffffff1c(%rip)
2381(7): nop 0x0(%rax)
2388(5): mov $0x9,%edx
238d(5): mov $0x74,%ebx
2392(5): cmp $0x2,0x8(%rsp)
2397(3): setz %al
239a(4): and 0xf(%rsp),%al
239e(6): jnz 0x150(%rip)
23a4(5): cmp $0x0,0xd(%rsp)
23a9(2): jnz 0x67(%rip)
23ab(2): mov %edx,%ebx
23ad(3): xor %r12d,%r12d
23b0(2): xor %eax,%eax
23b2(5): cmp $0x0,0xf(%rsp)
23b7(6): jnz 0xfffffef4(%rip)
23bd(5): jmp 0xffffff0c(%rip)
23c2(6): nop 0x0(%rax,%rax,1)
23c8(5): mov $0x8,%edx
23cd(5): mov $0x62,%ebx
23d2(2): jmp 0xffffffd2(%rip)
23d4(4): nop 0x0(%rax)
23d8(5): cmp $0x2,0x8(%rsp)
23dd(6): jz 0x3d3(%rip)
23e3(5): cmp $0x0,0xd(%rsp)
23e8(6): jz 0x218(%rip)
23ee(5): cmp $0x0,0xf(%rsp)
23f3(6): jz 0x20d(%rip)
23f9(6): cmp $0x0,0x18(%rsp)
23ff(6): jnz 0x3bc(%rip)
2405(5): mov $0x5c,%ebx
240a(6): nop 0x0(%rax,%rax,1)
2410(3): xor %r12d,%r12d
2413(5): cmp $0x2,0x8(%rsp)
2418(3): setz %dl
241b(5): cmp $0x0,0xf(%rsp)
2420(2): mov %edx,%eax
2422(6): jnz 0x856(%rip)
2428(3): mov %r8d,%eax
242b(3): xor $0x1,%eax
242e(2): and %dl,%al
2430(2): jz 0x31(%rip)
2432(3): cmp %r15,%r13
2435(2): jbe 0x7(%rip)
2437(5): mov $0x27,0x0(%r14,%r15,1)
243c(4): lea 0x1(%r15),%rdx
2440(3): cmp %rdx,%r13
2443(2): jbe 0x8(%rip)
2445(6): mov $0x24,0x1(%r14,%r15,1)
244b(4): lea 0x2(%r15),%rdx
244f(3): cmp %rdx,%r13
2452(2): jbe 0x8(%rip)
2454(6): mov $0x27,0x2(%r14,%r15,1)
245a(4): add $0x3,%r15
245e(3): mov %eax,%r8d
2461(3): cmp %r15,%r13
2464(2): jbe 0x7(%rip)
2466(5): mov $0x5c,0x0(%r14,%r15,1)
246b(4): add $0x1,%r15
246f(4): add $0x1,%rbp
2473(5): jmp 0xfffffe8d(%rip)
2478(8): nop 0x0(%rax,%rax,1)
2480(5): cmp $0x0,0xd(%rsp)
2485(6): jnz 0x1ce(%rip)
248b(2): xor %edx,%edx
248d(5): test $0x1,0x78(%rsp)
2492(6): jz 0xffffff19(%rip)
2498(4): add $0x1,%rbp
249c(5): jmp 0xfffffcbc(%rip)
24a1(7): nop 0x0(%rax)
24a8(5): cmp $0x2,0x8(%rsp)
24ad(3): setz %dl
24b0(2): xor %eax,%eax
24b2(5): jmp 0xfffffde6(%rip)
24b7(9): nop 0x0(%rax,%rax,1)
24c0(5): mov $0x7,%edx
24c5(5): mov $0x61,%ebx
24ca(5): jmp 0xfffffeda(%rip)
24cf(1): nop 
24d0(5): cmp $0x2,0x8(%rsp)
24d5(3): setz %dl
24d8(3): test %rbp,%rbp
24db(6): jnz 0xfffffdb1(%rip)
24e1(5): movzx 0xf(%rsp),%eax
24e6(2): and %dl,%al
24e8(6): jz 0xfffffdb0(%rip)
24ee(3): mov %r11,%rbp
24f1(8): mov $0x2,0x8(%rsp)
24f9(5): jmp 0x700(%rip)
24fe(2): nop 
2500(5): cmp $0x2,0x8(%rsp)
2505(3): setz %dl
2508(3): xor %r12d,%r12d
250b(2): jmp 0xffffffd6(%rip)
250d(3): nop (%rax)
2510(5): cmp $0x2,0x8(%rsp)
2515(5): mov $0x20,%ebx
251a(3): setz %dl
251d(2): jmp 0xffffffc4(%rip)
251f(1): nop 
2520(5): mov $0xd,%edx
2525(5): mov $0x72,%ebx
252a(5): jmp 0xfffffe68(%rip)
252f(1): nop 
2530(5): mov $0xc,%edx
2535(5): mov $0x66,%ebx
253a(5): jmp 0xfffffe6a(%rip)
253f(1): nop 
2540(5): mov $0xb,%edx
2545(5): mov $0x76,%ebx
254a(5): jmp 0xfffffe5a(%rip)
254f(1): nop 
2550(5): mov $0xa,%edx
2555(5): mov $0x6e,%ebx
255a(5): jmp 0xfffffe38(%rip)
255f(1): nop 
2560(3): xor %r10d,%r10d
2563(5): nop 0x0(%rax,%rax,1)
2568(6): cmp $0x1,0x58(%rsp)
256e(6): jnz 0x3aa(%rip)
2574(5): mov %r11,0x38(%rsp)
2579(5): mov %r8b,0x30(%rsp)
257e(5): mov %r10b,0x28(%rsp)
2583(5): call 0xffffeecd(%rip)
2588(3): mov (%rax),%rcx
258b(3): movzx %bl,%edx
258e(6): movzx 0x28(%rsp),%r10d
2594(6): movzx 0x30(%rsp),%r8d
259a(5): mov 0x38(%rsp),%r11
259f(5): mov $0x1,%edi
25a4(4): movzx 0x0(%rcx,%rdx,2),%eax
25a8(4): and $0x4000,%ax
25ac(4): setnz %r12b
25b0(3): setz %al
25b3(4): and 0xd(%rsp),%al
25b7(2): test %al,%al
25b9(6): jnz 0x998(%rip)
25bf(5): cmp $0x2,0x8(%rsp)
25c4(3): setz %dl
25c7(5): jmp 0xfffffcd1(%rip)
25cc(4): nop 0x0(%rax)
25d0(4): movzx (%r9),%ebx
25d4(3): cmp $0x7e,%bl
25d7(2): jnbe 0xffffff89(%rip)
25d9(7): lea 0x2848(%rip),%rcx
25e0(3): movzx %bl,%edx
25e3(4): movsxd 0x0(%rcx,%rdx,4),%rax
25e7(3): add %rcx,%rax
25ea(2): jmp %rax
25ec(4): nop 0x0(%rax)
25f0(3): xor %r10d,%r10d
25f3(5): cmp $0x0,0xd(%rsp)
25f8(6): jnz 0xfffffdf6(%rip)
25fe(2): nop 
2600(5): mov $0x5c,%edx
2605(5): mov $0x5c,%ebx
260a(5): jmp 0xfffffd9a(%rip)
260f(1): nop 
2610(5): mov $0xc,%edx
2615(3): xor %r10d,%r10d
2618(5): mov $0x66,%ebx
261d(5): jmp 0xfffffd87(%rip)
2622(6): nop 0x0(%rax,%rax,1)
2628(5): mov $0xa,%edx
262d(3): xor %r10d,%r10d
2630(5): mov $0x6e,%ebx
2635(5): jmp 0xfffffd5d(%rip)
263a(6): nop 0x0(%rax,%rax,1)
2640(5): mov $0x61,%ebx
2645(5): jmp 0xfffffdcb(%rip)
264a(6): nop 0x0(%rax,%rax,1)
2650(3): xor %r10d,%r10d
2653(5): cmp $0x2,0x8(%rsp)
2658(3): setz %dl
265b(5): cmp $0x0,0xf(%rsp)
2660(6): jnz 0xb9a(%rip)
2666(3): mov %r8d,%eax
2669(3): mov %r15,%rcx
266c(3): xor $0x1,%eax
266f(2): and %dl,%al
2671(2): jz 0x2f(%rip)
2673(3): cmp %r15,%r13
2676(2): jbe 0x7(%rip)
2678(5): mov $0x27,0x0(%r14,%r15,1)
267d(4): lea 0x1(%r15),%rcx
2681(3): cmp %rcx,%r13
2684(2): jbe 0x8(%rip)
2686(6): mov $0x24,0x1(%r14,%r15,1)
268c(4): lea 0x2(%r15),%rcx
2690(3): cmp %rcx,%r13
2693(6): jnbe 0x636(%rip)
2699(4): lea 0x3(%r15),%rcx
269d(3): mov %eax,%r8d
26a0(3): cmp %rcx,%r13
26a3(2): jbe 0x7(%rip)
26a5(5): mov $0x5c,0x0(%r14,%rcx,1)
26aa(5): cmp $0x2,0x8(%rsp)
26af(4): lea 0x1(%rcx),%r15
26b3(6): jz 0x606(%rip)
26b9(4): lea 0x1(%rbp),%rax
26bd(3): cmp %r11,%rax
26c0(2): jnb 0x1b(%rip)
26c2(5): mov 0x10(%rsp),%rax
26c7(5): movzx 0x1(%rax,%rbp,1),%eax
26cc(4): mov %al,0x28(%rsp)
26d0(3): sub $0x30,%eax
26d3(2): cmp $0x9,%al
26d5(6): jbe 0x834(%rip)
26db(3): mov %r12d,%eax
26de(5): mov $0x30,%ebx
26e3(3): xor %r12d,%r12d
26e6(5): jmp 0xfffffbb2(%rip)
26eb(5): nop 0x0(%rax,%rax,1)
26f0(5): cmp $0x2,0x8(%rsp)
26f5(3): mov %r10d,%r12d
26f8(3): setz %dl
26fb(3): xor %r10d,%r10d
26fe(2): xor %eax,%eax
2700(5): jmp 0xfffffb98(%rip)
2705(3): nop (%rax)
2708(5): cmp $0x2,0x8(%rsp)
270d(3): setz %dl
2710(3): xor %r10d,%r10d
2713(5): jmp 0xfffffdc5(%rip)
2718(8): nop 0x0(%rax,%rax,1)
2720(5): cmp $0x2,0x8(%rsp)
2725(3): setz %dl
2728(3): xor %r10d,%r10d
272b(3): xor %r12d,%r12d
272e(5): jmp 0xfffffdb3(%rip)
2733(5): nop 0x0(%rax,%rax,1)
2738(5): cmp $0x2,0x8(%rsp)
273d(3): mov %r10d,%r12d
2740(5): mov $0x20,%ebx
2745(3): setz %dl
2748(3): xor %r10d,%r10d
274b(5): jmp 0xfffffd96(%rip)
2750(5): mov $0xd,%edx
2755(3): xor %r10d,%r10d
2758(5): mov $0x72,%ebx
275d(5): jmp 0xfffffc35(%rip)
2762(6): nop 0x0(%rax,%rax,1)
2768(5): mov $0x76,%ebx
276d(5): jmp 0xfffffca3(%rip)
2772(6): nop 0x0(%rax,%rax,1)
2778(5): mov $0x9,%edx
277d(3): xor %r10d,%r10d
2780(5): mov $0x74,%ebx
2785(5): jmp 0xfffffc0d(%rip)
278a(6): nop 0x0(%rax,%rax,1)
2790(5): mov $0x62,%ebx
2795(5): jmp 0xfffffc7b(%rip)
279a(6): nop 0x0(%rax,%rax,1)
27a0(3): xor %r10d,%r10d
27a3(5): jmp 0xfffffa9d(%rip)
27a8(8): nop 0x0(%rax,%rax,1)
27b0(5): cmp $0x0,0xf(%rsp)
27b5(6): jnz 0x96b(%rip)
27bb(4): add $0x1,%rbp
27bf(3): mov %r8d,%eax
27c2(3): xor %r12d,%r12d
27c5(5): mov $0x5c,%ebx
27ca(5): jmp 0xfffffb12(%rip)
27cf(1): nop 
27d0(5): cmp $0x2,0x8(%rsp)
27d5(5): movzx 0xf(%rsp),%ebx
27da(3): mov %r8d,%r12d
27dd(3): mov %r11,%rbp
27e0(3): setz %dl
27e3(2): mov %ebx,%eax
27e5(3): test %r15,%r15
27e8(3): setz %cl
27eb(2): and %edx,%eax
27ed(2): and %cl,%al
27ef(6): jnz 0xa67(%rip)
27f5(2): mov %ebx,%eax
27f7(3): xor $0x1,%eax
27fa(2): and %al,%dl
27fc(6): jz 0x970(%rip)
2802(5): cmp $0x0,0x7c(%rsp)
2807(6): jz 0x963(%rip)
280d(5): cmp $0x0,0xe(%rsp)
2812(6): jnz 0x9fb(%rip)
2818(3): test %r13,%r13
281b(3): setz %al
281e(6): cmp $0x0,0x50(%rsp)
2824(3): setnz %dl
2827(2): and %dl,%al
2829(6): jz 0xa23(%rip)
282f(5): mov 0x50(%rsp),%r13
2834(7): lea 0x2372(%rip),%rbx
283b(4): mov $0x27,(%r14)
283f(8): mov $0x2,0x8(%rsp)
2847(6): mov $0x1,%r15d
284d(9): mov $0x1,0x18(%rsp)
2856(5): mov $0x0,0xf(%rsp)
285b(5): mov %rbx,0x48(%rsp)
2860(4): mov %al,0x7c(%rsp)
2864(5): jmp 0xfffff8df(%rip)
2869(7): nop 0x0(%rax)
2870(5): cmp $0x0,0xf(%rsp)
2875(6): jnz 0x8ab(%rip)
287b(3): test %r13,%r13
287e(6): jz 0x402(%rip)
2884(2): xor %edx,%edx
2886(6): cmp $0x0,0x50(%rsp)
288c(6): jnz 0x3f4(%rip)
2892(5): mov %r13,0x50(%rsp)
2897(4): add $0x3,%r15
289b(2): xor %eax,%eax
289d(5): mov %r12b,0x7c(%rsp)
28a2(3): xor %r8d,%r8d
28a5(3): mov %rdx,%r13
28a8(5): mov $0x27,%ebx
28ad(5): jmp 0xfffffa1c(%rip)
28b2(6): nop 0x0(%rax,%rax,1)
28b8(5): test $0x4,0x78(%rsp)
28bd(2): jz 0x23(%rip)
28bf(4): lea 0x2(%rbp),%rcx
28c3(3): cmp %r11,%rcx
28c6(2): jnb 0x1a(%rip)
28c8(5): mov 0x10(%rsp),%rax
28cd(5): cmp $0x3f,0x1(%rax,%rbp,1)
28d2(6): jz 0x790(%rip)
28d8(8): nop 0x0(%rax,%rax,1)
28e0(2): xor %edx,%edx
28e2(3): xor %r12d,%r12d
28e5(2): xor %eax,%eax
28e7(5): mov $0x3f,%ebx
28ec(5): jmp 0xfffff9ac(%rip)
28f1(7): nop 0x0(%rax)
28f8(5): cmp $0x0,0xf(%rsp)
28fd(6): jnz 0x823(%rip)
2903(3): xor %r12d,%r12d
2906(2): xor %eax,%eax
2908(5): mov $0x3f,%ebx
290d(5): jmp 0xfffff9bc(%rip)
2912(6): nop 0x0(%rax,%rax,1)
2918(8): lea 0xa0(%rsp),%rax
2920(4): cmp $0xffffffff,%r11
2924(c): mov $0x0,0xa0(%rsp)
2930(5): mov %rax,0x28(%rsp)
2935(2): jnz 0x2f(%rip)
2937(5): mov 0x10(%rsp),%rdi
293c(5): mov %r8b,0x40(%rsp)
2941(5): mov %r10b,0x38(%rsp)
2946(5): mov %r9,0x30(%rsp)
294b(5): call 0xffffe955(%rip)
2950(6): movzx 0x40(%rsp),%r8d
2956(6): movzx 0x38(%rsp),%r10d
295c(3): mov %rax,%r11
295f(5): mov 0x30(%rsp),%r9
2964(8): lea 0x9c(%rsp),%rax
296c(2): xor %ecx,%ecx
296e(4): mov %bl,0x7e(%rsp)
2972(5): mov %r8b,0x7d(%rsp)
2977(3): mov %rcx,%rbx
297a(8): mov %r9,0x88(%rsp)
2982(5): mov %rax,0x38(%rsp)
2987(5): mov %r10b,0x7f(%rsp)
298c(8): mov %r15,0x80(%rsp)
2994(5): mov %r14,0x40(%rsp)
2999(5): mov %r13,0x70(%rsp)
299e(5): mov %r11,0x30(%rsp)
29a3(5): mov 0x10(%rsp),%rax
29a8(5): lea 0x0(%rbp,%rbx,1),%r14
29ad(5): mov 0x30(%rsp),%rdx
29b2(5): mov 0x28(%rsp),%rcx
29b7(5): mov 0x38(%rsp),%rdi
29bc(4): lea 0x0(%rax,%r14,1),%r13
29c0(3): sub %r14,%rdx
29c3(3): mov %r13,%rsi
29c6(5): call 0x1b5a(%rip)
29cb(3): test %rax,%rax
29ce(3): mov %rax,%r15
29d1(2): jz 0x50(%rip)
29d3(4): cmp $0xffffffff,%rax
29d7(6): jz 0x61e(%rip)
29dd(4): cmp $0xfffffffe,%rax
29e1(6): jz 0x5a0(%rip)
29e7(5): cmp $0x2,0x8(%rsp)
29ec(3): setz %al
29ef(4): and 0xf(%rsp),%al
29f3(6): jnz 0x19d(%rip)
29f9(7): mov 0x9c(%rsp),%edi
2a00(5): call 0xffffea40(%rip)
2a05(5): mov 0x28(%rsp),%rdi
2a0a(2): test %eax,%eax
2a0c(5): mov $0x0,%eax
2a11(4): cmove %eax,%r12d
2a15(3): add %r15,%rbx
2a18(5): call 0xffffea18(%rip)
2a1d(2): test %eax,%eax
2a1f(2): jz 0xffffff84(%rip)
2a21(3): mov %r12d,%edx
2a24(3): mov %rbx,%rdi
2a27(6): movzx 0x7d(%rsp),%r8d
2a2d(3): xor $0x1,%edx
2a30(5): movzx 0x7e(%rsp),%ebx
2a35(6): movzx 0x7f(%rsp),%r10d
2a3b(4): and 0xd(%rsp),%dl
2a3f(8): mov 0x80(%rsp),%r15
2a47(5): mov 0x40(%rsp),%r14
2a4c(5): mov 0x70(%rsp),%r13
2a51(5): mov 0x30(%rsp),%r11
2a56(4): cmp $0x1,%rdi
2a5a(6): jbe 0x601(%rip)
2a60(3): mov %rdi,%rcx
2a63(2): xor %esi,%esi
2a65(6): movzx 0xf(%rsp),%r9d
2a6b(3): add %rbp,%rcx
2a6e(5): mov 0x10(%rsp),%rdi
2a73(5): jmp 0xbb(%rip)
2a78(8): nop 0x0(%rax,%rax,1)
2a80(5): cmp $0x2,0x8(%rsp)
2a85(3): setz %al
2a88(3): test %r9b,%r9b
2a8b(6): jnz 0x4b5(%rip)
2a91(3): mov %r8d,%esi
2a94(3): xor $0x1,%esi
2a97(3): and %sil,%al
2a9a(2): jz 0x31(%rip)
2a9c(3): cmp %r15,%r13
2a9f(2): jbe 0x7(%rip)
2aa1(5): mov $0x27,0x0(%r14,%r15,1)
2aa6(4): lea 0x1(%r15),%rsi
2aaa(3): cmp %rsi,%r13
2aad(2): jbe 0x8(%rip)
2aaf(6): mov $0x24,0x1(%r14,%r15,1)
2ab5(4): lea 0x2(%r15),%rsi
2ab9(3): cmp %rsi,%r13
2abc(2): jbe 0x8(%rip)
2abe(6): mov $0x27,0x2(%r14,%r15,1)
2ac4(4): add $0x3,%r15
2ac8(3): mov %eax,%r8d
2acb(3): cmp %r15,%r13
2ace(2): jbe 0x7(%rip)
2ad0(5): mov $0x5c,0x0(%r14,%r15,1)
2ad5(4): lea 0x1(%r15),%rax
2ad9(3): cmp %rax,%r13
2adc(2): jbe 0xf(%rip)
2ade(2): mov %ebx,%eax
2ae0(3): shr $0x6,%al
2ae3(3): add $0x30,%eax
2ae6(5): mov %al,0x1(%r14,%r15,1)
2aeb(4): lea 0x2(%r15),%rax
2aef(3): cmp %rax,%r13
2af2(2): jbe 0x12(%rip)
2af4(2): mov %ebx,%eax
2af6(3): shr $0x3,%al
2af9(3): and $0x7,%eax
2afc(3): add $0x30,%eax
2aff(5): mov %al,0x2(%r14,%r15,1)
2b04(3): and $0x7,%ebx
2b07(4): add $0x1,%rbp
2b0b(4): add $0x3,%r15
2b0f(3): add $0x30,%ebx
2b12(3): cmp %rcx,%rbp
2b15(6): jnb 0xfffff7eb(%rip)
2b1b(2): mov %edx,%esi
2b1d(3): cmp %r15,%r13
2b20(2): jbe 0x6(%rip)
2b22(4): mov %bl,0x0(%r14,%r15,1)
2b26(4): movzx 0x0(%rdi,%rbp,1),%ebx
2b2a(4): add $0x1,%r15
2b2e(2): test %dl,%dl
2b30(6): jnz 0xffffff50(%rip)
2b36(2): mov %esi,%eax
2b38(3): xor $0x1,%eax
2b3b(3): and %r8d,%eax
2b3e(3): test %r10b,%r10b
2b41(2): jz 0x10(%rip)
2b43(3): cmp %r15,%r13
2b46(2): jbe 0x7(%rip)
2b48(5): mov $0x5c,0x0(%r14,%r15,1)
2b4d(4): add $0x1,%r15
2b51(4): add $0x1,%rbp
2b55(3): cmp %rcx,%rbp
2b58(6): jnb 0xfffff784(%rip)
2b5e(2): test %al,%al
2b60(6): jz 0x3fe(%rip)
2b66(3): cmp %r15,%r13
2b69(2): jbe 0x7(%rip)
2b6b(5): mov $0x27,0x0(%r14,%r15,1)
2b70(4): lea 0x1(%r15),%rax
2b74(3): cmp %rax,%r13
2b77(2): jbe 0x8(%rip)
2b79(6): mov $0x27,0x1(%r14,%r15,1)
2b7f(4): add $0x2,%r15
2b83(3): xor %r10d,%r10d
2b86(3): xor %r8d,%r8d
2b89(2): jmp 0xffffff94(%rip)
2b8b(5): nop 0x0(%rax,%rax,1)
2b90(4): cmp $0x1,%r15
2b94(6): jz 0xfffffe65(%rip)
2b9a(5): mov 0x10(%rsp),%rdi
2b9f(4): lea 0x0(%rdi,%r15,1),%rcx
2ba3(5): lea 0x1(%rdi,%r14,1),%rdx
2ba8(4): lea 0x0(%rcx,%r14,1),%r8
2bac(2): jmp 0x11(%rip)
2bae(2): nop 
2bb0(4): add $0x1,%rdx
2bb4(3): cmp %rdx,%r8
2bb7(6): jz 0xfffffe42(%rip)
2bbd(3): movzx (%rdx),%ecx
2bc0(3): sub $0x5b,%ecx
2bc3(3): cmp $0x21,%cl
2bc6(2): jnbe 0xffffffea(%rip)
2bc8(5): mov $0x1,%esi
2bcd(3): shl/sal %cl,%rsi
2bd0(3): mov %rsi,%rcx
2bd3(a): mov $0x8589934635,%rsi
2bdd(3): test %rsi,%rcx
2be0(2): jz 0xffffffd0(%rip)
2be2(5): mov 0x40(%rsp),%r14
2be7(5): mov 0x70(%rsp),%r13
2bec(5): mov 0x30(%rsp),%rbp
2bf1(8): mov $0x2,0x8(%rsp)
2bf9(5): cmp $0x0,0xd(%rsp)
2bfe(2): jz 0x12(%rip)
2c00(2): test %al,%al
2c02(5): mov $0x4,%eax
2c07(5): cmove 0x8(%rsp),%eax
2c0c(4): mov %eax,0x8(%rsp)
2c10(4): sub $0x8,%rsp
2c14(3): mov %rbp,%rcx
2c17(3): mov %r13,%rsi
2c1a(4): push 0x68(%rsp)
2c1e(4): push 0x78(%rsp)
2c22(3): mov %r14,%rdi
2c25(2): push $0x0
2c27(8): mov 0x98(%rsp),%r9d
2c2f(5): mov 0x28(%rsp),%r8d
2c34(5): mov 0x30(%rsp),%rdx
2c39(4): and $0xfd,%r9d
2c3d(5): call 0xfffff433(%rip)
2c42(4): add $0x20,%rsp
2c46(3): mov %rax,%r15
2c49(8): mov 0xa8(%rsp),%rbx
2c51(9): xor $0x28,%rbx
2c5a(3): mov %r15,%rax
2c5d(6): jnz 0x606(%rip)
2c63(7): add $0xb8,%rsp
2c6a(1): pop %rbx
2c6b(1): pop %rbp
2c6c(2): pop %r12
2c6e(2): pop %r13
2c70(2): pop %r14
2c72(2): pop %r15
2c74(1): ret near (%rsp)
2c75(3): nop (%rax)
2c78(3): mov %r11,%rbp
2c7b(5): jmp 0xffffff7e(%rip)
2c80(3): cmp %r15,%r13
2c83(2): jbe 0x7(%rip)
2c85(5): mov $0x27,0x0(%r14,%r15,1)
2c8a(4): lea 0x1(%r15),%rax
2c8e(3): cmp %rax,%r13
2c91(2): jbe 0x8(%rip)
2c93(6): mov $0x5c,0x1(%r14,%r15,1)
2c99(4): lea 0x2(%r15),%rax
2c9d(3): cmp %rax,%r13
2ca0(6): jbe 0x5f2(%rip)
2ca6(3): mov %r13,%rdx
2ca9(6): mov $0x27,0x2(%r14,%r15,1)
2caf(5): mov 0x50(%rsp),%r13
2cb4(5): jmp 0xfffffbde(%rip)
2cb9(3): mov %r12d,%eax
2cbc(5): mov $0x30,%ebx
2cc1(3): xor %r12d,%r12d
2cc4(5): jmp 0xfffff605(%rip)
2cc9(6): mov $0x27,0x2(%r14,%r15,1)
2ccf(5): jmp 0xfffff9ca(%rip)
2cd4(2): test %ebx,%ebx
2cd6(6): jnz 0xfffff42d(%rip)
2cdc(5): mov $0x1,0xd(%rsp)
2ce1(3): test %r13,%r13
2ce4(6): jnz 0x596(%rip)
2cea(7): lea 0x1ebc(%rip),%rax
2cf1(9): mov $0x0,0x50(%rsp)
2cfa(5): mov $0x1,0xe(%rsp)
2cff(5): mov $0x0,0x7c(%rsp)
2d04(3): xor %r12d,%r12d
2d07(5): mov $0x0,0xf(%rsp)
2d0c(9): mov $0x1,0x18(%rsp)
2d15(5): mov %rax,0x48(%rsp)
2d1a(6): mov $0x1,%r15d
2d20(8): mov $0x2,0x8(%rsp)
2d28(5): jmp 0xfffff41b(%rip)
2d2d(3): nop (%rax)
2d30(2): test %ebx,%ebx
2d32(6): jnz 0x3fb(%rip)
2d38(3): test %r13,%r13
2d3b(6): jz 0x22b(%rip)
2d41(4): mov $0x22,(%r14)
2d45(5): mov $0x1,0xe(%rsp)
2d4a(3): xor %r12d,%r12d
2d4d(5): mov $0x0,0x7c(%rsp)
2d52(9): mov $0x0,0x50(%rsp)
2d5b(7): lea 0x1e49(%rip),%rax
2d62(5): mov $0x0,0xf(%rsp)
2d67(5): mov $0x1,0xd(%rsp)
2d6c(9): mov $0x1,0x18(%rsp)
2d75(6): mov $0x1,%r15d
2d7b(5): mov %rax,0x48(%rsp)
2d80(5): jmp 0xfffff3c3(%rip)
2d85(7): lea 0x1e1f(%rip),%rax
2d8c(5): mov $0x1,0xe(%rsp)
2d91(5): mov $0x0,0x7c(%rsp)
2d96(3): xor %r12d,%r12d
2d99(9): mov $0x0,0x50(%rsp)
2da2(5): mov $0x1,0xf(%rsp)
2da7(5): mov $0x1,0xd(%rsp)
2dac(9): mov $0x1,0x18(%rsp)
2db5(3): xor %r15d,%r15d
2db8(5): mov %rax,0x48(%rsp)
2dbd(8): mov $0x5,0x8(%rsp)
2dc5(5): jmp 0xfffff37e(%rip)
2dca(5): mov $0x1,0xe(%rsp)
2dcf(5): mov $0x0,0x7c(%rsp)
2dd4(3): xor %r12d,%r12d
2dd7(9): mov $0x0,0x50(%rsp)
2de0(5): mov $0x0,0xf(%rsp)
2de5(3): xor %r15d,%r15d
2de8(5): mov $0x1,0xd(%rsp)
2ded(9): mov $0x0,0x18(%rsp)
2df6(9): mov $0x0,0x48(%rsp)
2dff(5): jmp 0xfffff344(%rip)
2e04(5): cmp $0xa,0x8(%rsp)
2e09(2): jz 0x58(%rip)
2e0b(7): lea 0x1d9d(%rip),%rsi
2e12(2): xor %edi,%edi
2e14(5): mov $0x5,%edx
2e19(5): call 0xffffe467(%rip)
2e1e(3): mov %rax,%rcx
2e21(5): mov %rax,0x68(%rsp)
2e26(7): lea 0x1d82(%rip),%rax
2e2d(3): cmp %rax,%rcx
2e30(6): jz 0x39e(%rip)
2e36(7): lea 0x1d70(%rip),%rsi
2e3d(2): xor %edi,%edi
2e3f(5): mov $0x5,%edx
2e44(5): call 0xffffe43c(%rip)
2e49(3): mov %rax,%rcx
2e4c(5): mov %rax,0x60(%rsp)
2e51(7): lea 0x1d55(%rip),%rax
2e58(3): cmp %rax,%rcx
2e5b(6): jz 0x389(%rip)
2e61(3): xor %r15d,%r15d
2e64(2): test %ebx,%ebx
2e66(6): jz 0x1c7(%rip)
2e6c(2): test %ebx,%ebx
2e6e(5): mov 0x60(%rsp),%rbx
2e73(5): setnz 0xf(%rsp)
2e78(3): xor %r12d,%r12d
2e7b(3): mov %rbx,%rdi
2e7e(5): call 0xffffe422(%rip)
2e83(5): mov %rbx,0x48(%rsp)
2e88(5): mov %rax,0x18(%rsp)
2e8d(5): mov $0x1,0xe(%rsp)
2e92(5): mov $0x0,0x7c(%rsp)
2e97(9): mov $0x0,0x50(%rsp)
2ea0(5): mov $0x1,0xd(%rsp)
2ea5(5): jmp 0xfffff29e(%rip)
2eaa(5): mov $0x1,0xe(%rsp)
2eaf(5): mov $0x0,0x7c(%rsp)
2eb4(3): xor %r12d,%r12d
2eb7(9): mov $0x0,0x50(%rsp)
2ec0(5): mov $0x0,0xf(%rsp)
2ec5(3): xor %r15d,%r15d
2ec8(5): mov $0x0,0xd(%rsp)
2ecd(9): mov $0x0,0x18(%rsp)
2ed6(9): mov $0x0,0x48(%rsp)
2edf(5): jmp 0xfffff264(%rip)
2ee4(5): mov $0x1,0xe(%rsp)
2ee9(5): mov $0x0,0x7c(%rsp)
2eee(3): xor %r12d,%r12d
2ef1(9): mov $0x0,0x50(%rsp)
2efa(5): mov $0x1,0xf(%rsp)
2eff(5): mov $0x1,0xd(%rsp)
2f04(5): jmp 0xfffff21f(%rip)
2f09(3): cmp %r15,%r13
2f0c(2): jbe 0x7(%rip)
2f0e(5): mov $0x30,0x0(%r14,%r15,1)
2f13(4): lea 0x2(%rcx),%rax
2f17(3): cmp %rax,%r13
2f1a(2): jbe 0x8(%rip)
2f1c(6): mov $0x30,0x2(%r14,%rcx,1)
2f22(3): mov %r12d,%eax
2f25(4): lea 0x3(%rcx),%r15
2f29(3): xor %r12d,%r12d
2f2c(5): mov $0x30,%ebx
2f31(5): jmp 0xfffff367(%rip)
2f36(a): nop 0x0(%rax,%rax,1)
2f40(5): movzx 0xf(%rsp),%ebx
2f45(3): mov %r11,%rbp
2f48(4): mov %bl,0xd(%rsp)
2f4c(5): jmp 0xfffffcad(%rip)
2f51(5): movzx 0xd(%rsp),%edx
2f56(3): xor %r12d,%r12d
2f59(5): jmp 0xfffffb07(%rip)
2f5e(3): xor %r10d,%r10d
2f61(5): jmp 0xfffffbbc(%rip)
2f66(9): mov $0x0,0x50(%rsp)
2f6f(5): mov $0x1,0xe(%rsp)
2f74(3): xor %r12d,%r12d
2f77(5): mov $0x0,0x7c(%rsp)
2f7c(5): jmp 0xfffffddf(%rip)
2f81(5): mov 0x30(%rsp),%r11
2f86(3): mov %r14,%rsi
2f89(3): mov %r13,%rcx
2f8c(3): mov %rbx,%rax
2f8f(3): mov %rbx,%rdi
2f92(6): movzx 0x7d(%rsp),%r8d
2f98(5): movzx 0x7e(%rsp),%ebx
2f9d(8): mov 0x88(%rsp),%r9
2fa5(3): cmp %r11,%rsi
2fa8(6): movzx 0x7f(%rsp),%r10d
2fae(8): mov 0x80(%rsp),%r15
2fb6(5): mov 0x40(%rsp),%r14
2fbb(5): mov 0x70(%rsp),%r13
2fc0(2): jnb 0x28(%rip)
2fc2(3): cmp $0x0,(%rcx)
2fc5(2): jnz 0x12(%rip)
2fc7(2): jmp 0x21(%rip)
2fc9(7): nop 0x0(%rax)
2fd0(5): cmp $0x0,0x0(%r9,%rax,1)
2fd5(2): jz 0x10(%rip)
2fd7(4): add $0x1,%rax
2fdb(5): lea 0x0(%rbp,%rax,1),%rdx
2fe0(3): cmp %rdx,%r11
2fe3(2): jnbe 0xffffffed(%rip)
2fe5(3): mov %rax,%rdi
2fe8(5): movzx 0xd(%rsp),%edx
2fed(3): xor %r12d,%r12d
2ff0(5): jmp 0xfffffa66(%rip)
2ff5(3): mov %rbx,%rdi
2ff8(6): movzx 0x7d(%rsp),%r8d
2ffe(5): movzx 0x7e(%rsp),%ebx
3003(6): movzx 0x7f(%rsp),%r10d
3009(8): mov 0x80(%rsp),%r15
3011(3): xor %r12d,%r12d
3014(5): mov 0x40(%rsp),%r14
3019(5): mov 0x70(%rsp),%r13
301e(5): mov 0x30(%rsp),%r11
3023(5): movzx 0xd(%rsp),%edx
3028(5): jmp 0xfffffa2e(%rip)
302d(5): mov 0x68(%rsp),%rdx
3032(3): movzx (%rdx),%eax
3035(2): test %al,%al
3037(6): jz 0xfffffe35(%rip)
303d(3): nop (%rax)
3040(3): cmp %r15,%r13
3043(2): jbe 0x6(%rip)
3045(4): mov %al,0x0(%r14,%r15,1)
3049(4): add $0x1,%r15
304d(5): movzx 0x0(%rdx,%r15,1),%eax
3052(2): test %al,%al
3054(2): jnz 0xffffffec(%rip)
3056(5): jmp 0xfffffe16(%rip)
305b(2): mov %edx,%eax
305d(5): jmp 0xfffff55a(%rip)
3062(4): movzx 0x0(%rax,%rcx,1),%ebx
3066(3): cmp $0x3e,%bl
3069(6): jnbe 0xfffff877(%rip)
306f(a): mov $0x8070630310989004800,%rax
3079(4): bt %rbx,%rax
307d(6): jnb 0xfffff863(%rip)
3083(5): cmp $0x0,0xf(%rsp)
3088(6): jnz 0x1ea(%rip)
308e(3): cmp %r15,%r13
3091(2): jbe 0x7(%rip)
3093(5): mov $0x3f,0x0(%r14,%r15,1)
3098(4): lea 0x1(%r15),%rax
309c(3): cmp %rax,%r13
309f(2): jbe 0x8(%rip)
30a1(6): mov $0x22,0x1(%r14,%r15,1)
30a7(4): lea 0x2(%r15),%rax
30ab(3): cmp %rax,%r13
30ae(2): jbe 0x8(%rip)
30b0(6): mov $0x22,0x2(%r14,%r15,1)
30b6(4): lea 0x3(%r15),%rax
30ba(3): cmp %rax,%r13
30bd(2): jbe 0x8(%rip)
30bf(6): mov $0x3f,0x3(%r14,%r15,1)
30c5(4): add $0x4,%r15
30c9(2): xor %edx,%edx
30cb(3): xor %r12d,%r12d
30ce(2): xor %eax,%eax
30d0(3): mov %rcx,%rbp
30d3(5): jmp 0xfffff1c5(%rip)
30d8(2): test %ebx,%ebx
30da(6): jz 0x18e(%rip)
30e0(7): lea 0x1ac6(%rip),%rax
30e7(5): mov $0x1,0xe(%rsp)
30ec(5): mov $0x0,0x7c(%rsp)
30f1(3): xor %r12d,%r12d
30f4(9): mov $0x0,0x50(%rsp)
30fd(5): mov $0x1,0xf(%rsp)
3102(5): mov $0x0,0xd(%rsp)
3107(9): mov $0x1,0x18(%rsp)
3110(3): xor %r15d,%r15d
3113(5): mov %rax,0x48(%rsp)
3118(5): jmp 0xfffff02b(%rip)
311d(3): nop (%rax)
3120(3): mov %r11,%rbp
3123(5): movzx 0xf(%rsp),%eax
3128(5): jmp 0xfffffad1(%rip)
312d(7): lea 0x1a77(%rip),%rax
3134(5): mov $0x1,0xe(%rsp)
3139(5): mov $0x0,0x7c(%rsp)
313e(3): xor %r12d,%r12d
3141(9): mov $0x0,0x50(%rsp)
314a(5): mov $0x1,0xf(%rsp)
314f(5): mov $0x1,0xd(%rsp)
3154(9): mov $0x1,0x18(%rsp)
315d(3): xor %r15d,%r15d
3160(5): mov %rax,0x48(%rsp)
3165(5): jmp 0xffffefde(%rip)
316a(2): mov %edx,%eax
316c(5): mov 0x48(%rsp),%rbx
3171(3): test %rbx,%rbx
3174(2): jz 0x2e(%rip)
3176(2): test %al,%al
3178(2): jz 0x2a(%rip)
317a(3): movzx (%rbx),%ecx
317d(3): mov %rbx,%rax
3180(2): test %cl,%cl
3182(2): jz 0x20(%rip)
3184(3): mov %r15,%rdx
3187(3): sub %r15,%rax
318a(3): cmp %rdx,%r13
318d(2): jbe 0x6(%rip)
318f(4): mov %cl,0x0(%r14,%rdx,1)
3193(4): add $0x1,%rdx
3197(4): movzx 0x0(%rax,%rdx,1),%ecx
319b(2): test %cl,%cl
319d(2): jnz 0xffffffed(%rip)
319f(3): mov %rdx,%r15
31a2(3): cmp %r15,%r13
31a5(6): jbe 0xfffffaa4(%rip)
31ab(5): mov $0x0,0x0(%r14,%r15,1)
31b0(5): jmp 0xfffffa99(%rip)
31b5(5): cmp $0x2,0x8(%rsp)
31ba(5): movzx 0xf(%rsp),%ebx
31bf(3): mov %r11,%rbp
31c2(3): setz %al
31c5(4): mov %bl,0xd(%rsp)
31c9(5): jmp 0xfffffa30(%rip)
31ce(4): mov 0x8(%rsp),%esi
31d2(3): mov %rcx,%rdi
31d5(5): call 0xffffedab(%rip)
31da(5): mov %rax,0x68(%rsp)
31df(5): jmp 0xfffffc57(%rip)
31e4(4): mov 0x8(%rsp),%esi
31e8(3): mov %rcx,%rdi
31eb(5): call 0xffffed95(%rip)
31f0(5): mov %rax,0x60(%rsp)
31f5(5): jmp 0xfffffc6c(%rip)
31fa(5): movzx 0xf(%rsp),%ebx
31ff(3): mov %r11,%rbp
3202(2): mov %edx,%eax
3204(4): mov %bl,0xd(%rsp)
3208(5): jmp 0xfffff9f1(%rip)
320d(4): sub $0x8,%rsp
3211(6): mov $0x5,%r8d
3217(3): mov %r11,%rcx
321a(4): push 0x68(%rsp)
321e(4): push 0x78(%rsp)
3222(3): mov %r14,%rdi
3225(4): push 0x38(%rsp)
3229(8): mov 0x98(%rsp),%r9d
3231(5): mov 0x30(%rsp),%rdx
3236(5): mov 0x70(%rsp),%rsi
323b(5): call 0xffffee35(%rip)
3240(4): add $0x20,%rsp
3244(3): mov %rax,%r15
3247(5): jmp 0xfffffa02(%rip)
324c(5): movzx 0x7c(%rsp),%eax
3251(5): jmp 0xffffff1b(%rip)
3256(8): mov $0x2,0x8(%rsp)
325e(5): jmp 0xfffff99b(%rip)
3263(5): call 0xffffe04d(%rip)
3268(5): mov $0x0,0xd(%rsp)
326d(5): jmp 0xfffffa74(%rip)
3272(3): mov %r11,%rbp
3275(5): jmp 0xfffff99b(%rip)
327a(5): mov $0x1,0xe(%rsp)
327f(2): xor %eax,%eax
3281(3): xor %r12d,%r12d
3284(9): mov $0x0,0x50(%rsp)
328d(5): jmp 0xfffff5a7(%rip)
3292(3): mov %r13,%rdx
3295(5): mov 0x50(%rsp),%r13
329a(5): jmp 0xfffff5f8(%rip)
329f(5): call 0xffffdf51(%rip)

"quotearg_n_options" :
32b0(2): push %r15
32b2(2): push %r14
32b4(3): movsxd %edi,%r15
32b7(2): push %r13
32b9(2): push %r12
32bb(3): mov %rdx,%r14
32be(1): push %rbp
32bf(1): push %rbx
32c0(3): mov %rcx,%rbp
32c3(4): sub $0x28,%rsp
32c7(5): mov %rsi,0x8(%rsp)
32cc(5): call 0xffffdf34(%rip)
32d1(3): mov %rax,%r13
32d4(2): mov (%rax),%eax
32d6(3): test %r15d,%r15d
32d9(7): mov 0x203d80(%rip),%rbx
32e0(4): mov %eax,0x18(%rsp)
32e4(6): js 0x16d(%rip)
32ea(7): cmp %r15d,0x203d67(%rip)
32f1(2): jnle 0x64(%rip)
32f3(7): cmp $0x7fffffff,%r15d
32fa(6): jz 0x15c(%rip)
3300(4): lea 0x1(%r15),%r12d
3304(7): lea 0x203d65(%rip),%rax
330b(3): movsxd %r12d,%rsi
330e(4): shl/sal $0x4,%rsi
3312(3): cmp %rax,%rbx
3315(6): jz 0x11b(%rip)
331b(3): mov %rbx,%rdi
331e(5): call 0xfd2(%rip)
3323(3): mov %rax,%rbx
3326(7): mov %rax,0x203d33(%rip)
332d(7): movsxd 0x203d24(%rip),%rdi
3334(3): mov %r12d,%edx
3337(2): xor %esi,%esi
3339(2): sub %edi,%edx
333b(4): shl/sal $0x4,%rdi
333f(3): movsxd %edx,%rdx
3342(3): add %rbx,%rdi
3345(4): shl/sal $0x4,%rdx
3349(5): call 0xffffdfb7(%rip)
334e(7): mov %r12d,0x203d03(%rip)
3355(3): mov 0x4(%rbp),%eax
3358(4): shl/sal $0x4,%r15
335c(4): sub $0x8,%rsp
3360(3): add %r15,%rbx
3363(4): lea 0x8(%rbp),%r15
3367(4): mov 0x0(%rbp),%r8d
336b(3): mov (%rbx),%r11
336e(4): mov 0x8(%rbx),%r12
3372(3): mov %r14,%rcx
3375(3): or $0x1,%eax
3378(4): mov %eax,0x24(%rsp)
337c(3): push 0x30(%rbp)
337f(3): mov %eax,%r9d
3382(3): push 0x28(%rbp)
3385(2): push %r15
3387(3): mov %r11,%rsi
338a(5): mov 0x28(%rsp),%rdx
338f(3): mov %r12,%rdi
3392(5): mov %r11,0x30(%rsp)
3397(5): call 0xffffecd9(%rip)
339c(4): add $0x20,%rsp
33a0(5): mov 0x10(%rsp),%r11
33a5(3): cmp %rax,%r11
33a8(2): jnbe 0x69(%rip)
33aa(4): lea 0x1(%rax),%rsi
33ae(7): lea 0x203d4b(%rip),%rax
33b5(3): cmp %rax,%r12
33b8(3): mov %rsi,(%rbx)
33bb(2): jz 0x14(%rip)
33bd(3): mov %r12,%rdi
33c0(5): mov %rsi,0x10(%rsp)
33c5(5): call 0xffffde1b(%rip)
33ca(5): mov 0x10(%rsp),%rsi
33cf(3): mov %rsi,%rdi
33d2(5): mov %rsi,0x10(%rsp)
33d7(5): call 0xeb9(%rip)
33dc(4): sub $0x8,%rsp
33e0(4): mov %rax,0x8(%rbx)
33e4(4): mov 0x0(%rbp),%r8d
33e8(3): push 0x30(%rbp)
33eb(3): push 0x28(%rbp)
33ee(3): mov %r14,%rcx
33f1(2): push %r15
33f3(5): mov 0x3c(%rsp),%r9d
33f8(3): mov %rax,%rdi
33fb(5): mov 0x28(%rsp),%rdx
3400(5): mov 0x30(%rsp),%rsi
3405(3): mov %rax,%r12
3408(5): call 0xffffec68(%rip)
340d(4): add $0x20,%rsp
3411(4): mov 0x18(%rsp),%eax
3415(4): mov %eax,0x0(%r13)
3419(4): add $0x28,%rsp
341d(3): mov %r12,%rax
3420(1): pop %rbx
3421(1): pop %rbp
3422(2): pop %r12
3424(2): pop %r13
3426(2): pop %r14
3428(2): pop %r15
342a(1): ret near (%rsp)
342b(5): nop 0x0(%rax,%rax,1)
3430(2): xor %edi,%edi
3432(5): call 0xebe(%rip)
3437(8): movdqa 0x203c31(%rip),%xmm0
343f(3): mov %rax,%rbx
3442(7): mov %rax,0x203c17(%rip)
3449(3): movups %xmm0,(%rax)
344c(5): jmp 0xfffffee1(%rip)
3451(5): call 0xffffdd9f(%rip)
3456(5): call 0x108a(%rip)

"clone_quoting_options" :
3460(2): push %r12
3462(1): push %rbp
3463(1): push %rbx
3464(3): mov %rdi,%rbx
3467(5): call 0xffffdd99(%rip)
346c(3): mov (%rax),%r12d
346f(3): mov %rax,%rbp
3472(7): lea 0x203d87(%rip),%rax
3479(3): test %rbx,%rbx
347c(5): mov $0x38,%esi
3481(4): cmove %rax,%rbx
3485(3): mov %rbx,%rdi
3488(5): call 0x1008(%rip)
348d(4): mov %r12d,0x0(%rbp)
3491(1): pop %rbx
3492(1): pop %rbp
3493(2): pop %r12
3495(1): ret near (%rsp)

"get_quoting_style" :
34a0(7): lea 0x203d59(%rip),%rax
34a7(3): test %rdi,%rdi
34aa(4): cmove %rax,%rdi
34ae(2): mov (%rdi),%eax
34b0(1): ret near (%rsp)

"set_quoting_style" :
34c0(7): lea 0x203d39(%rip),%rax
34c7(3): test %rdi,%rdi
34ca(4): cmove %rax,%rdi
34ce(2): mov %esi,(%rdi)
34d0(1): ret near (%rsp)

"set_char_quoting" :
34e0(7): lea 0x203d19(%rip),%rax
34e7(3): test %rdi,%rdi
34ea(2): mov %esi,%ecx
34ec(4): cmove %rax,%rdi
34f0(2): mov %esi,%eax
34f2(3): and $0x1f,%ecx
34f5(3): shr $0x5,%al
34f8(3): movzx %al,%eax
34fb(5): lea 0x8(%rdi,%rax,4),%rdi
3500(2): mov (%rdi),%esi
3502(2): mov %esi,%eax
3504(2): shr %cl,%eax
3506(2): xor %eax,%edx
3508(3): and $0x1,%eax
350b(3): and $0x1,%edx
350e(2): shl/sal %cl,%edx
3510(2): xor %esi,%edx
3512(2): mov %edx,(%rdi)
3514(1): ret near (%rsp)

"set_quoting_flags" :
3520(7): lea 0x203cd9(%rip),%rax
3527(3): test %rdi,%rdi
352a(4): cmove %rax,%rdi
352e(3): mov 0x4(%rdi),%eax
3531(3): mov %esi,0x4(%rdi)
3534(1): ret near (%rsp)

"set_custom_quoting" :
3540(7): lea 0x203cb9(%rip),%rax
3547(3): test %rdi,%rdi
354a(4): cmove %rax,%rdi
354e(3): test %rsi,%rsi
3551(6): mov $0xa,(%rdi)
3557(2): jz 0x10(%rip)
3559(3): test %rdx,%rdx
355c(2): jz 0xb(%rip)
355e(4): mov %rsi,0x28(%rdi)
3562(4): mov %rdx,0x30(%rdi)
3566(1): ret near (%rsp)
3567(4): sub $0x8,%rsp
356b(5): call 0xffffdc85(%rip)

"quotearg_buffer" :
3570(2): push %r15
3572(2): push %r14
3574(7): lea 0x203c85(%rip),%rax
357b(2): push %r13
357d(2): push %r12
357f(3): mov %rdi,%r13
3582(1): push %rbp
3583(1): push %rbx
3584(3): mov %r8,%rbx
3587(3): mov %rsi,%r14
358a(3): mov %rdx,%r15
358d(4): sub $0x18,%rsp
3591(3): test %r8,%r8
3594(4): cmove %rax,%rbx
3598(5): mov %rcx,0x8(%rsp)
359d(5): call 0xffffdc63(%rip)
35a2(3): mov (%rax),%r12d
35a5(3): mov %rax,%rbp
35a8(4): lea 0x8(%rbx),%rax
35ac(4): sub $0x8,%rsp
35b0(4): mov 0x4(%rbx),%r9d
35b4(3): push 0x30(%rbx)
35b7(3): mov (%rbx),%r8d
35ba(3): push 0x28(%rbx)
35bd(3): mov %r15,%rdx
35c0(1): push %rax
35c1(5): mov 0x28(%rsp),%rcx
35c6(3): mov %r14,%rsi
35c9(3): mov %r13,%rdi
35cc(5): call 0xffffeaa4(%rip)
35d1(4): mov %r12d,0x0(%rbp)
35d5(4): add $0x38,%rsp
35d9(1): pop %rbx
35da(1): pop %rbp
35db(2): pop %r12
35dd(2): pop %r13
35df(2): pop %r14
35e1(2): pop %r15
35e3(1): ret near (%rsp)

"quotearg_alloc_mem" :
35f0(2): push %r15
35f2(2): push %r14
35f4(7): lea 0x203c05(%rip),%rax
35fb(2): push %r13
35fd(2): push %r12
35ff(3): mov %rdx,%r12
3602(1): push %rbp
3603(1): push %rbx
3604(3): mov %rcx,%rbx
3607(3): mov %rdi,%r14
360a(3): mov %rsi,%r15
360d(4): sub $0x38,%rsp
3611(3): test %rcx,%rcx
3614(4): cmove %rax,%rbx
3618(2): xor %ebp,%ebp
361a(5): call 0xffffdbe6(%rip)
361f(3): test %r12,%r12
3622(3): mov %rax,%r13
3625(2): mov (%rax),%eax
3627(4): setz %bpl
362b(3): or 0x4(%rbx),%ebp
362e(4): lea 0x8(%rbx),%r10
3632(4): sub $0x8,%rsp
3636(3): mov (%rbx),%r8d
3639(3): mov %r15,%rcx
363c(4): mov %eax,0x14(%rsp)
3640(3): push 0x30(%rbx)
3643(3): mov %r14,%rdx
3646(3): push 0x28(%rbx)
3649(2): push %r10
364b(2): xor %esi,%esi
364d(3): mov %ebp,%r9d
3650(2): xor %edi,%edi
3652(5): mov %r10,0x40(%rsp)
3657(5): call 0xffffea19(%rip)
365c(4): lea 0x1(%rax),%rsi
3660(5): mov %rax,0x48(%rsp)
3665(4): add $0x20,%rsp
3669(3): mov %rsi,%rdi
366c(5): mov %rsi,0x18(%rsp)
3671(5): call 0xc1f(%rip)
3676(5): mov %rax,0x10(%rsp)
367b(4): sub $0x8,%rsp
367f(3): push 0x30(%rbx)
3682(3): push 0x28(%rbx)
3685(5): mov 0x38(%rsp),%r10
368a(3): mov %ebp,%r9d
368d(3): mov (%rbx),%r8d
3690(3): mov %r15,%rcx
3693(3): mov %r14,%rdx
3696(3): mov %rax,%rdi
3699(2): push %r10
369b(5): mov 0x38(%rsp),%rsi
36a0(5): call 0xffffe9d0(%rip)
36a5(4): mov 0x2c(%rsp),%eax
36a9(4): add $0x20,%rsp
36ad(3): test %r12,%r12
36b0(4): mov %eax,0x0(%r13)
36b4(2): jz 0xb(%rip)
36b6(5): mov 0x28(%rsp),%r11
36bb(4): mov %r11,(%r12)
36bf(5): mov 0x10(%rsp),%rax
36c4(4): add $0x38,%rsp
36c8(1): pop %rbx
36c9(1): pop %rbp
36ca(2): pop %r12
36cc(2): pop %r13
36ce(2): pop %r14
36d0(2): pop %r15
36d2(1): ret near (%rsp)

"quotearg_alloc" :
36e0(3): mov %rdx,%rcx
36e3(2): xor %edx,%edx
36e5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
36f0(6): mov 0x203962(%rip),%eax
36f6(2): push %r12
36f8(7): mov 0x203961(%rip),%r12
36ff(1): push %rbp
3700(1): push %rbx
3701(3): cmp $0x1,%eax
3704(2): jle 0x2d(%rip)
3706(3): sub $0x2,%eax
3709(5): lea 0x18(%r12),%rbx
370e(4): shl/sal $0x4,%rax
3712(5): lea 0x28(%r12,%rax,1),%rbp
3717(9): nop 0x0(%rax,%rax,1)
3720(3): mov (%rbx),%rdi
3723(4): add $0x10,%rbx
3727(5): call 0xffffdab9(%rip)
372c(3): cmp %rbp,%rbx
372f(2): jnz 0xfffffff1(%rip)
3731(5): mov 0x8(%r12),%rdi
3736(7): lea 0x2039c3(%rip),%rbx
373d(3): cmp %rbx,%rdi
3740(2): jz 0x19(%rip)
3742(5): call 0xffffda9e(%rip)
3747(b): mov $0x100,0x20391e(%rip)
3752(7): mov %rbx,0x20391f(%rip)
3759(7): lea 0x203910(%rip),%rbx
3760(3): cmp %rbx,%r12
3763(2): jz 0x11(%rip)
3765(3): mov %r12,%rdi
3768(5): call 0xffffda78(%rip)
376d(7): mov %rbx,0x2038ec(%rip)
3774(1): pop %rbx
3775(a): mov $0x1,0x2038d9(%rip)
377f(1): pop %rbp
3780(2): pop %r12
3782(1): ret near (%rsp)

"quotearg_n" :
3790(7): lea 0x203a69(%rip),%rcx
3797(7): mov $0xffffffff,%rdx
379e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
37b0(7): lea 0x203a49(%rip),%rcx
37b7(5): jmp 0xfffffaf9(%rip)

"quotearg" :
37c0(7): lea 0x203a39(%rip),%rcx
37c7(3): mov %rdi,%rsi
37ca(7): mov $0xffffffff,%rdx
37d1(2): xor %edi,%edi
37d3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
37e0(7): lea 0x203a19(%rip),%rcx
37e7(3): mov %rsi,%rdx
37ea(3): mov %rdi,%rsi
37ed(2): xor %edi,%edi
37ef(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
3800(4): sub $0x48,%rsp
3804(3): mov %rdx,%rax
3807(9): mov $0x28,%rdx
3810(5): mov %rdx,0x38(%rsp)
3815(2): xor %edx,%edx
3817(3): cmp $0xa,%esi
381a(2): jz 0x6a(%rip)
381c(3): mov %esi,(%rsp)
381f(3): mov %rsp,%rcx
3822(7): mov $0xffffffff,%rdx
3829(3): mov %rax,%rsi
382c(9): mov $0x0,0x4(%rsp)
3835(9): mov $0x0,0xc(%rsp)
383e(9): mov $0x0,0x14(%rsp)
3847(9): mov $0x0,0x1c(%rsp)
3850(9): mov $0x0,0x24(%rsp)
3859(9): mov $0x0,0x2c(%rsp)
3862(8): mov $0x0,0x34(%rsp)
386a(5): call 0xfffffa46(%rip)
386f(5): mov 0x38(%rsp),%rcx
3874(9): xor $0x28,%rcx
387d(2): jnz 0xc(%rip)
387f(4): add $0x48,%rsp
3883(1): ret near (%rsp)
3884(5): call 0xffffd96c(%rip)
3889(5): call 0xffffda27(%rip)

"quotearg_n_style_mem" :
3890(4): sub $0x48,%rsp
3894(3): mov %rdx,%rax
3897(3): mov %rcx,%rdx
389a(9): mov $0x28,%rcx
38a3(5): mov %rcx,0x38(%rsp)
38a8(2): xor %ecx,%ecx
38aa(3): cmp $0xa,%esi
38ad(2): jz 0x63(%rip)
38af(3): mov %esi,(%rsp)
38b2(3): mov %rsp,%rcx
38b5(3): mov %rax,%rsi
38b8(9): mov $0x0,0x4(%rsp)
38c1(9): mov $0x0,0xc(%rsp)
38ca(9): mov $0x0,0x14(%rsp)
38d3(9): mov $0x0,0x1c(%rsp)
38dc(9): mov $0x0,0x24(%rsp)
38e5(9): mov $0x0,0x2c(%rsp)
38ee(8): mov $0x0,0x34(%rsp)
38f6(5): call 0xfffff9ba(%rip)
38fb(5): mov 0x38(%rsp),%rdx
3900(9): xor $0x28,%rdx
3909(2): jnz 0xc(%rip)
390b(4): add $0x48,%rsp
390f(1): ret near (%rsp)
3910(5): call 0xffffd8e0(%rip)
3915(5): call 0xffffd99b(%rip)

"quotearg_style" :
3920(3): mov %rsi,%rdx
3923(2): mov %edi,%esi
3925(2): xor %edi,%edi
3927(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
3930(3): mov %rdx,%rcx
3933(3): mov %rsi,%rdx
3936(2): mov %edi,%esi
3938(2): xor %edi,%edi
393a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3940(4): sub $0x48,%rsp
3944(2): mov %edx,%ecx
3946(9): mov $0x28,%rax
394f(5): mov %rax,0x38(%rsp)
3954(2): xor %eax,%eax
3956(7): mov 0x2038d3(%rip),%rax
395d(3): mov %rsp,%r8
3960(3): and $0x1f,%ecx
3963(8): movdqa 0x203895(%rip),%xmm0
396b(5): mov %rax,0x30(%rsp)
3970(2): mov %edx,%eax
3972(4): movaps %xmm0,(%rsp)
3976(3): shr $0x5,%al
3979(3): movzx %al,%eax
397c(5): lea 0x8(%r8,%rax,4),%r9
3981(8): movdqa 0x203887(%rip),%xmm0
3989(5): movaps %xmm0,0x10(%rsp)
398e(8): movdqa 0x20388a(%rip),%xmm0
3996(5): movaps %xmm0,0x20(%rsp)
399b(3): mov (%r9),%edx
399e(2): mov %edx,%eax
39a0(2): shr %cl,%eax
39a2(2): not %eax
39a4(3): and $0x1,%eax
39a7(2): shl/sal %cl,%eax
39a9(3): mov %r8,%rcx
39ac(2): xor %edx,%eax
39ae(3): mov %rsi,%rdx
39b1(3): mov %rdi,%rsi
39b4(3): mov %eax,(%r9)
39b7(2): xor %edi,%edi
39b9(5): call 0xfffff8f7(%rip)
39be(5): mov 0x38(%rsp),%rsi
39c3(9): xor $0x28,%rsi
39cc(2): jnz 0x7(%rip)
39ce(4): add $0x48,%rsp
39d2(1): ret near (%rsp)
39d3(5): call 0xffffd8dd(%rip)

"quotearg_char" :
39e0(4): movsx %sil,%edx
39e4(7): mov $0xffffffff,%rsi
39eb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
39f0(5): mov $0x3a,%edx
39f5(7): mov $0xffffffff,%rsi
39fc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
3a10(5): mov $0x3a,%edx
3a15(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
3a20(4): sub $0x48,%rsp
3a24(3): mov %rdx,%rax
3a27(9): mov $0x28,%rdx
3a30(5): mov %rdx,0x38(%rsp)
3a35(2): xor %edx,%edx
3a37(3): cmp $0xa,%esi
3a3a(2): jz 0x6a(%rip)
3a3c(3): mov %esi,(%rsp)
3a3f(3): mov %rsp,%rcx
3a42(7): mov $0xffffffff,%rdx
3a49(3): mov %rax,%rsi
3a4c(9): mov $0x0,0x4(%rsp)
3a55(9): mov $0x4000000,0xc(%rsp)
3a5e(9): mov $0x0,0x14(%rsp)
3a67(9): mov $0x0,0x1c(%rsp)
3a70(9): mov $0x0,0x24(%rsp)
3a79(9): mov $0x0,0x2c(%rsp)
3a82(8): mov $0x0,0x34(%rsp)
3a8a(5): call 0xfffff826(%rip)
3a8f(5): mov 0x38(%rsp),%rcx
3a94(9): xor $0x28,%rcx
3a9d(2): jnz 0xc(%rip)
3a9f(4): add $0x48,%rsp
3aa3(1): ret near (%rsp)
3aa4(5): call 0xffffd74c(%rip)
3aa9(5): call 0xffffd807(%rip)

"quotearg_n_custom_mem" :
3ab0(4): sub $0x48,%rsp
3ab4(3): mov %rcx,%r9
3ab7(7): mov 0x203772(%rip),%rcx
3abe(8): movdqa 0x20373a(%rip),%xmm0
3ac6(9): mov $0x28,%rax
3acf(5): mov %rax,0x38(%rsp)
3ad4(2): xor %eax,%eax
3ad6(4): movaps %xmm0,(%rsp)
3ada(3): test %rsi,%rsi
3add(5): mov %rcx,0x30(%rsp)
3ae2(7): mov $0xa,(%rsp)
3ae9(8): movdqa 0x20371f(%rip),%xmm0
3af1(5): movaps %xmm0,0x10(%rsp)
3af6(8): movdqa 0x203722(%rip),%xmm0
3afe(5): movaps %xmm0,0x20(%rsp)
3b03(2): jz 0x34(%rip)
3b05(3): test %rdx,%rdx
3b08(2): jz 0x2f(%rip)
3b0a(5): mov %rsi,0x28(%rsp)
3b0f(5): mov %rdx,0x30(%rsp)
3b14(3): mov %rsp,%rcx
3b17(3): mov %r8,%rdx
3b1a(3): mov %r9,%rsi
3b1d(5): call 0xfffff793(%rip)
3b22(5): mov 0x38(%rsp),%rdi
3b27(9): xor $0x28,%rdi
3b30(2): jnz 0xc(%rip)
3b32(4): add $0x48,%rsp
3b36(1): ret near (%rsp)
3b37(5): call 0xffffd6b9(%rip)
3b3c(5): call 0xffffd774(%rip)

"quotearg_n_custom" :
3b50(7): mov $0xffffffff,%r8
3b57(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3b60(3): mov %rdx,%rcx
3b63(7): mov $0xffffffff,%r8
3b6a(3): mov %rsi,%rdx
3b6d(3): mov %rdi,%rsi
3b70(2): xor %edi,%edi
3b72(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3b80(3): mov %rcx,%r8
3b83(3): mov %rdx,%rcx
3b86(3): mov %rsi,%rdx
3b89(3): mov %rdi,%rsi
3b8c(2): xor %edi,%edi
3b8e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3ba0(7): lea 0x203479(%rip),%rcx
3ba7(5): jmp 0xfffff709(%rip)

"quote_mem" :
3bb0(7): lea 0x203469(%rip),%rcx
3bb7(3): mov %rsi,%rdx
3bba(3): mov %rdi,%rsi
3bbd(2): xor %edi,%edi
3bbf(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3bd0(7): lea 0x203449(%rip),%rcx
3bd7(7): mov $0xffffffff,%rdx
3bde(5): jmp 0xfffff6d2(%rip)

"quote" :
3bf0(7): lea 0x203429(%rip),%rcx
3bf7(3): mov %rdi,%rsi
3bfa(7): mov $0xffffffff,%rdx
3c01(2): xor %edi,%edi
3c03(5): jmp 0xfffff6ad(%rip)

"safe_write" :
3c10(2): push %r13
3c12(2): push %r12
3c14(3): mov %edi,%r13d
3c17(1): push %rbp
3c18(1): push %rbx
3c19(3): mov %rsi,%r12
3c1c(3): mov %rdx,%rbx
3c1f(4): sub $0x8,%rsp
3c23(5): nop 0x0(%rax,%rax,1)
3c28(3): mov %rbx,%rdx
3c2b(3): mov %r12,%rsi
3c2e(3): mov %r13d,%edi
3c31(5): call 0xffffd60f(%rip)
3c36(3): test %rax,%rax
3c39(3): mov %rax,%rbp
3c3c(2): jns 0x24(%rip)
3c3e(5): call 0xffffd5c2(%rip)
3c43(2): mov (%rax),%eax
3c45(3): cmp $0x4,%eax
3c48(2): jz 0xffffffe0(%rip)
3c4a(3): cmp $0x16,%eax
3c4d(2): jnz 0x13(%rip)
3c4f(7): cmp $0x7ff00000,%rbx
3c56(2): jbe 0xa(%rip)
3c58(5): mov $0x7ff00000,%ebx
3c5d(2): jmp 0xffffffcb(%rip)
3c5f(1): nop 
3c60(4): add $0x8,%rsp
3c64(3): mov %rbp,%rax
3c67(1): pop %rbx
3c68(1): pop %rbp
3c69(2): pop %r12
3c6b(2): pop %r13
3c6d(1): ret near (%rsp)

"version_etc_arn" :
3c70(2): push %r15
3c72(2): push %r14
3c74(2): push %r13
3c76(2): push %r12
3c78(3): mov %r9,%r12
3c7b(1): push %rbp
3c7c(1): push %rbx
3c7d(3): mov %rdi,%rbp
3c80(3): mov %r8,%rbx
3c83(4): sub $0x28,%rsp
3c87(3): test %rsi,%rsi
3c8a(6): jz 0x11e(%rip)
3c90(3): mov %rdx,%r8
3c93(7): lea 0x13ce(%rip),%rdx
3c9a(3): mov %rcx,%r9
3c9d(2): xor %eax,%eax
3c9f(3): mov %rsi,%rcx
3ca2(5): mov $0x1,%esi
3ca7(5): call 0xffffd779(%rip)
3cac(7): lea 0x13c8(%rip),%rsi
3cb3(2): xor %edi,%edi
3cb5(5): mov $0x5,%edx
3cba(5): call 0xffffd5c6(%rip)
3cbf(7): lea 0x16da(%rip),%rdx
3cc6(3): mov %rax,%rcx
3cc9(6): mov $0x7e3,%r8d
3ccf(5): mov $0x1,%esi
3cd4(3): mov %rbp,%rdi
3cd7(2): xor %eax,%eax
3cd9(5): call 0xffffd747(%rip)
3cde(7): lea 0x1423(%rip),%rsi
3ce5(2): xor %edi,%edi
3ce7(5): mov $0x5,%edx
3cec(5): call 0xffffd594(%rip)
3cf1(3): mov %rbp,%rsi
3cf4(3): mov %rax,%rdi
3cf7(5): call 0xffffd629(%rip)
3cfc(4): cmp $0x9,%r12
3d00(6): jnbe 0x340(%rip)
3d06(7): lea 0x165b(%rip),%rdx
3d0d(4): movsxd 0x0(%rdx,%r12,4),%rax
3d11(3): add %rdx,%rax
3d14(2): jmp %rax
3d16(a): nop 0x0(%rax,%rax,1)
3d20(4): mov 0x38(%rbx),%r9
3d24(4): mov 0x10(%rbx),%rax
3d28(7): lea 0x1549(%rip),%rsi
3d2f(4): mov 0x8(%rbx),%r8
3d33(5): mov $0x5,%edx
3d38(2): xor %edi,%edi
3d3a(4): mov 0x30(%rbx),%r13
3d3e(4): mov 0x28(%rbx),%r12
3d42(5): mov %r9,0x10(%rsp)
3d47(4): mov 0x20(%rbx),%r15
3d4b(4): mov 0x18(%rbx),%r14
3d4f(4): mov %rax,(%rsp)
3d53(5): mov %r8,0x8(%rsp)
3d58(3): mov (%rbx),%rbx
3d5b(5): call 0xffffd525(%rip)
3d60(4): sub $0x8,%rsp
3d64(5): mov 0x18(%rsp),%r9
3d69(3): mov %rax,%rdx
3d6c(3): mov %rbx,%rcx
3d6f(5): mov $0x1,%esi
3d74(3): mov %rbp,%rdi
3d77(2): xor %eax,%eax
3d79(2): push %r9
3d7b(2): push %r13
3d7d(2): push %r12
3d7f(2): push %r15
3d81(2): push %r14
3d83(5): mov 0x30(%rsp),%r9
3d88(5): mov 0x38(%rsp),%r8
3d8d(5): call 0xffffd693(%rip)
3d92(4): add $0x30,%rsp
3d96(4): add $0x28,%rsp
3d9a(1): pop %rbx
3d9b(1): pop %rbp
3d9c(2): pop %r12
3d9e(2): pop %r13
3da0(2): pop %r14
3da2(2): pop %r15
3da4(1): ret near (%rsp)
3da5(3): nop (%rax)
3da8(3): mov %rcx,%r8
3dab(3): mov %rdx,%rcx
3dae(7): lea 0x12bf(%rip),%rdx
3db5(5): mov $0x1,%esi
3dba(2): xor %eax,%eax
3dbc(5): call 0xffffd664(%rip)
3dc1(5): jmp 0xfffffeeb(%rip)
3dc6(a): nop 0x0(%rax,%rax,1)
3dd0(4): mov 0x40(%rbx),%r10
3dd4(4): mov 0x38(%rbx),%r9
3dd8(7): lea 0x14c9(%rip),%rsi
3ddf(4): mov 0x10(%rbx),%rax
3de3(4): mov 0x8(%rbx),%r8
3de7(5): mov $0x5,%edx
3dec(4): mov 0x30(%rbx),%r13
3df0(4): mov 0x28(%rbx),%r12
3df4(4): mov 0x20(%rbx),%r15
3df8(4): mov 0x18(%rbx),%r14
3dfc(3): mov (%rbx),%rbx
3dff(5): mov %r10,0x18(%rsp)
3e04(5): mov %r9,0x10(%rsp)
3e09(4): mov %rax,(%rsp)
3e0d(5): mov %r8,0x8(%rsp)
3e12(2): xor %edi,%edi
3e14(5): call 0xffffd46c(%rip)
3e19(5): mov 0x18(%rsp),%r10
3e1e(2): push %r10
3e20(5): jmp 0xffffff44(%rip)
3e25(3): nop (%rax)
3e28(3): mov (%rbx),%rbx
3e2b(7): lea 0x124d(%rip),%rsi
3e32(5): mov $0x5,%edx
3e37(2): xor %edi,%edi
3e39(5): call 0xffffd447(%rip)
3e3e(4): add $0x28,%rsp
3e42(3): mov %rbx,%rcx
3e45(3): mov %rbp,%rdi
3e48(1): pop %rbx
3e49(1): pop %rbp
3e4a(2): pop %r12
3e4c(2): pop %r13
3e4e(2): pop %r14
3e50(2): pop %r15
3e52(3): mov %rax,%rdx
3e55(5): mov $0x1,%esi
3e5a(2): xor %eax,%eax
3e5c(5): jmp 0xffffd5c4(%rip)
3e61(7): nop 0x0(%rax)
3e68(4): mov 0x8(%rbx),%r12
3e6c(7): lea 0x121c(%rip),%rsi
3e73(3): mov (%rbx),%rbx
3e76(5): mov $0x5,%edx
3e7b(2): xor %edi,%edi
3e7d(5): call 0xffffd403(%rip)
3e82(4): add $0x28,%rsp
3e86(3): mov %r12,%r8
3e89(3): mov %rbx,%rcx
3e8c(3): mov %rbp,%rdi
3e8f(3): mov %rax,%rdx
3e92(5): mov $0x1,%esi
3e97(1): pop %rbx
3e98(1): pop %rbp
3e99(2): pop %r12
3e9b(2): pop %r13
3e9d(2): pop %r14
3e9f(2): pop %r15
3ea1(2): xor %eax,%eax
3ea3(5): jmp 0xffffd57d(%rip)
3ea8(8): nop 0x0(%rax,%rax,1)
3eb0(4): mov 0x10(%rbx),%r13
3eb4(4): mov 0x8(%rbx),%r12
3eb8(7): lea 0x11e7(%rip),%rsi
3ebf(3): mov (%rbx),%rbx
3ec2(5): mov $0x5,%edx
3ec7(2): xor %edi,%edi
3ec9(5): call 0xffffd3b7(%rip)
3ece(4): add $0x28,%rsp
3ed2(3): mov %r13,%r9
3ed5(3): mov %r12,%r8
3ed8(3): mov %rbx,%rcx
3edb(3): mov %rbp,%rdi
3ede(3): mov %rax,%rdx
3ee1(1): pop %rbx
3ee2(1): pop %rbp
3ee3(2): pop %r12
3ee5(2): pop %r13
3ee7(2): pop %r14
3ee9(2): pop %r15
3eeb(5): mov $0x1,%esi
3ef0(2): xor %eax,%eax
3ef2(5): jmp 0xffffd52e(%rip)
3ef7(9): nop 0x0(%rax,%rax,1)
3f00(7): lea 0x12d1(%rip),%rsi
3f07(5): mov $0x5,%edx
3f0c(2): xor %edi,%edi
3f0e(4): mov 0x18(%rbx),%r14
3f12(4): mov 0x10(%rbx),%r13
3f16(4): mov 0x8(%rbx),%r12
3f1a(3): mov (%rbx),%rbx
3f1d(5): call 0xffffd363(%rip)
3f22(4): sub $0x8,%rsp
3f26(2): push %r14
3f28(3): mov %rax,%rdx
3f2b(3): mov %r13,%r9
3f2e(3): mov %r12,%r8
3f31(3): mov %rbx,%rcx
3f34(3): mov %rbp,%rdi
3f37(5): mov $0x1,%esi
3f3c(2): xor %eax,%eax
3f3e(5): call 0xffffd4e2(%rip)
3f43(1): pop %rax
3f44(1): pop %rdx
3f45(4): add $0x28,%rsp
3f49(1): pop %rbx
3f4a(1): pop %rbp
3f4b(2): pop %r12
3f4d(2): pop %r13
3f4f(2): pop %r14
3f51(2): pop %r15
3f53(1): ret near (%rsp)
3f54(4): nop 0x0(%rax)
3f58(4): mov 0x20(%rbx),%r15
3f5c(7): lea 0x1295(%rip),%rsi
3f63(5): mov $0x5,%edx
3f68(2): xor %edi,%edi
3f6a(4): mov 0x18(%rbx),%r14
3f6e(4): mov 0x10(%rbx),%r13
3f72(4): mov 0x8(%rbx),%r12
3f76(3): mov (%rbx),%rbx
3f79(5): call 0xffffd307(%rip)
3f7e(2): push %r15
3f80(2): jmp 0xffffffa6(%rip)
3f82(6): nop 0x0(%rax,%rax,1)
3f88(4): mov 0x8(%rbx),%r8
3f8c(4): mov 0x28(%rbx),%r12
3f90(7): lea 0x1289(%rip),%rsi
3f97(4): mov 0x20(%rbx),%r15
3f9b(4): mov 0x18(%rbx),%r14
3f9f(5): mov $0x5,%edx
3fa4(4): mov 0x10(%rbx),%r13
3fa8(2): xor %edi,%edi
3faa(3): mov (%rbx),%rbx
3fad(4): mov %r8,(%rsp)
3fb1(5): call 0xffffd2cf(%rip)
3fb6(4): sub $0x8,%rsp
3fba(3): mov %r13,%r9
3fbd(2): push %r12
3fbf(2): push %r15
3fc1(2): push %r14
3fc3(5): mov 0x20(%rsp),%r8
3fc8(3): mov %rbx,%rcx
3fcb(3): mov %rax,%rdx
3fce(3): mov %rbp,%rdi
3fd1(5): mov $0x1,%esi
3fd6(2): xor %eax,%eax
3fd8(5): call 0xffffd448(%rip)
3fdd(4): add $0x20,%rsp
3fe1(4): add $0x28,%rsp
3fe5(1): pop %rbx
3fe6(1): pop %rbp
3fe7(2): pop %r12
3fe9(2): pop %r13
3feb(2): pop %r14
3fed(2): pop %r15
3fef(1): ret near (%rsp)
3ff0(4): mov 0x10(%rbx),%r9
3ff4(4): mov 0x30(%rbx),%r13
3ff8(7): lea 0x1249(%rip),%rsi
3fff(4): mov 0x28(%rbx),%r12
4003(4): mov 0x20(%rbx),%r15
4007(5): mov $0x5,%edx
400c(4): mov 0x18(%rbx),%r14
4010(4): mov 0x8(%rbx),%r8
4014(2): xor %edi,%edi
4016(5): mov %r9,0x8(%rsp)
401b(3): mov (%rbx),%rbx
401e(4): mov %r8,(%rsp)
4022(5): call 0xffffd25e(%rip)
4027(2): push %r13
4029(2): push %r12
402b(2): push %r15
402d(2): push %r14
402f(5): mov 0x28(%rsp),%r9
4034(2): jmp 0xffffff8f(%rip)
4036(a): nop 0x0(%rax,%rax,1)
4040(4): mov 0x40(%rbx),%r10
4044(4): mov 0x38(%rbx),%r9
4048(5): mov $0x5,%edx
404d(4): mov 0x10(%rbx),%rax
4051(4): mov 0x8(%rbx),%r8
4055(7): lea 0x1284(%rip),%rsi
405c(4): mov 0x30(%rbx),%r13
4060(4): mov 0x28(%rbx),%r12
4064(4): mov 0x20(%rbx),%r15
4068(4): mov 0x18(%rbx),%r14
406c(5): mov %r10,0x18(%rsp)
4071(5): mov %r9,0x10(%rsp)
4076(4): mov %rax,(%rsp)
407a(5): mov %r8,0x8(%rsp)
407f(3): mov (%rbx),%rbx
4082(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
4090(3): xor %r9d,%r9d
4093(4): cmp $0x0,(%r8)
4097(2): jz 0x14(%rip)
4099(7): nop 0x0(%rax)
40a0(4): add $0x1,%r9
40a4(5): cmp $0x0,0x0(%r8,%r9,8)
40a9(2): jnz 0xfffffff7(%rip)
40ab(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
40b0(4): sub $0x68,%rsp
40b4(3): mov %r8,%r10
40b7(3): xor %r9d,%r9d
40ba(9): mov $0x28,%rax
40c3(5): mov %rax,0x58(%rsp)
40c8(2): xor %eax,%eax
40ca(3): mov %rsp,%r8
40cd(3): nop (%rax)
40d0(3): mov (%r10),%eax
40d3(3): cmp $0x2f,%eax
40d6(2): jnbe 0x44(%rip)
40d8(3): mov %eax,%r11d
40db(4): add 0x10(%r10),%r11
40df(3): add $0x8,%eax
40e2(3): mov %eax,(%r10)
40e5(3): mov (%r11),%rax
40e8(3): test %rax,%rax
40eb(4): mov %rax,0x0(%r8,%r9,8)
40ef(2): jz 0xc(%rip)
40f1(4): add $0x1,%r9
40f5(4): cmp $0xa,%r9
40f9(2): jnz 0xffffffd7(%rip)
40fb(5): call 0xfffffb75(%rip)
4100(5): mov 0x58(%rsp),%rax
4105(9): xor $0x28,%rax
410e(2): jnz 0x7(%rip)
4110(4): add $0x68,%rsp
4114(1): ret near (%rsp)
4115(5): call 0xffffd19b(%rip)
411a(4): mov 0x8(%r10),%r11
411e(4): lea 0x8(%r11),%rax
4122(4): mov %rax,0x8(%r10)
4126(2): jmp 0xffffffbf(%rip)

"version_etc" :
4130(1): push %rbp
4131(1): push %rbx
4132(6): mov $0x20,%r10d
4138(3): xor %r11d,%r11d
413b(7): sub $0xb8,%rsp
4142(9): mov $0x28,%rax
414b(5): mov %rax,0x78(%rsp)
4150(2): xor %eax,%eax
4152(8): lea 0xd0(%rsp),%rax
415a(8): mov %r8,0xa0(%rsp)
4162(8): lea 0xd0(%rsp),%rbx
416a(5): lea 0x20(%rsp),%r8
416f(8): mov %r9,0xa8(%rsp)
4177(8): mov $0x20,0x8(%rsp)
417f(5): mov %rax,0x10(%rsp)
4184(8): lea 0x80(%rsp),%rax
418c(3): xor %r9d,%r9d
418f(5): mov %rax,0x18(%rsp)
4194(3): mov %rax,%rbp
4197(9): nop 0x0(%rax,%rax,1)
41a0(4): cmp $0x2f,%r10d
41a4(2): jnbe 0x58(%rip)
41a6(3): mov %r10d,%eax
41a9(6): mov $0x1,%r11d
41af(4): add $0x8,%r10d
41b3(3): add %rbp,%rax
41b6(3): mov (%rax),%rax
41b9(3): test %rax,%rax
41bc(4): mov %rax,0x0(%r8,%r9,8)
41c0(2): jz 0xc(%rip)
41c2(4): add $0x1,%r9
41c6(4): cmp $0xa,%r9
41ca(2): jnz 0xffffffd6(%rip)
41cc(3): test %r11b,%r11b
41cf(2): jnz 0x26(%rip)
41d1(5): call 0xfffffa9f(%rip)
41d6(5): mov 0x78(%rsp),%rax
41db(9): xor $0x28,%rax
41e4(2): jnz 0xc(%rip)
41e6(7): add $0xb8,%rsp
41ed(1): pop %rbx
41ee(1): pop %rbp
41ef(1): ret near (%rsp)
41f0(5): call 0xffffd0c0(%rip)
41f5(5): mov %r10d,0x8(%rsp)
41fa(2): jmp 0xffffffd7(%rip)
41fc(3): mov %rbx,%rax
41ff(4): add $0x8,%rbx
4203(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4210(1): push %rbx
4211(7): lea 0xeaa(%rip),%rsi
4218(5): mov $0x5,%edx
421d(2): xor %edi,%edi
421f(5): call 0xffffd061(%rip)
4224(7): lea 0xeac(%rip),%rdx
422b(3): mov %rax,%rsi
422e(5): mov $0x1,%edi
4233(2): xor %eax,%eax
4235(5): call 0xffffd18b(%rip)
423a(7): lea 0xeac(%rip),%rsi
4241(5): mov $0x5,%edx
4246(2): xor %edi,%edi
4248(5): call 0xffffd038(%rip)
424d(7): lea 0x834(%rip),%rcx
4254(7): lea 0x6c3(%rip),%rdx
425b(3): mov %rax,%rsi
425e(5): mov $0x1,%edi
4263(2): xor %eax,%eax
4265(5): call 0xffffd15b(%rip)
426a(7): mov 0x202e17(%rip),%rbx
4271(7): lea 0x10a8(%rip),%rsi
4278(2): xor %edi,%edi
427a(5): mov $0x5,%edx
427f(5): call 0xffffd001(%rip)
4284(3): mov %rbx,%rsi
4287(3): mov %rax,%rdi
428a(1): pop %rbx
428b(5): jmp 0xffffd095(%rip)

"xmalloc" :
4290(1): push %rbx
4291(3): mov %rdi,%rbx
4294(5): call 0xffffd0cc(%rip)
4299(3): test %rax,%rax
429c(2): jnz 0x7(%rip)
429e(3): test %rbx,%rbx
42a1(2): jnz 0x4(%rip)
42a3(1): pop %rbx
42a4(1): ret near (%rsp)
42a5(5): call 0x23b(%rip)

"xnmalloc" :
42b0(3): mov %rdi,%rax
42b3(3): mul %rax,%rsi,%rdx
42b6(3): mov %rax,%rdi
42b9(3): seto %al
42bc(3): test %rdi,%rdi
42bf(2): js 0xc(%rip)
42c1(3): movzx %al,%eax
42c4(3): test %rax,%rax
42c7(2): jnz 0x4(%rip)
42c9(2): jmp 0xffffffc7(%rip)
42cb(4): sub $0x8,%rsp
42cf(5): call 0x211(%rip)

"xrealloc" :
42f0(3): test %rsi,%rsi
42f3(1): push %rbx
42f4(3): mov %rsi,%rbx
42f7(2): jnz 0x7(%rip)
42f9(3): test %rdi,%rdi
42fc(2): jnz 0x1c(%rip)
42fe(3): mov %rbx,%rsi
4301(5): call 0xffffd09f(%rip)
4306(3): test %rax,%rax
4309(2): jnz 0x7(%rip)
430b(3): test %rbx,%rbx
430e(2): jnz 0x13(%rip)
4310(1): pop %rbx
4311(1): ret near (%rsp)
4312(6): nop 0x0(%rax,%rax,1)
4318(5): call 0xffffcec8(%rip)
431d(2): xor %eax,%eax
431f(1): pop %rbx
4320(1): ret near (%rsp)
4321(5): call 0x1bf(%rip)

"xnrealloc" :
4330(3): mov %rsi,%rax
4333(3): mul %rax,%rdx,%rdx
4336(3): mov %rax,%rsi
4339(3): seto %al
433c(3): test %rsi,%rsi
433f(2): js 0xc(%rip)
4341(3): movzx %al,%eax
4344(3): test %rax,%rax
4347(2): jnz 0x4(%rip)
4349(2): jmp 0xffffffa7(%rip)
434b(4): sub $0x8,%rsp
434f(5): call 0x191(%rip)

"x2nrealloc" :
4360(3): test %rdi,%rdi
4363(3): mov %rdx,%r9
4366(3): mov (%rsi),%rcx
4369(2): jz 0x37(%rip)
436b(2): xor %edx,%edx
436d(a): mov $0x6148914691236517204,%rax
4377(3): div %r9,%rax
437a(3): cmp %rcx,%rax
437d(2): jbe 0x3e(%rip)
437f(3): mov %rcx,%rax
4382(3): shr $0x1,%rax
4385(5): lea 0x1(%rax,%rcx,1),%rcx
438a(3): mov %rcx,(%rsi)
438d(4): imul %r9,%rcx
4391(3): mov %rcx,%rsi
4394(5): jmp 0xffffff5c(%rip)
4399(7): nop 0x0(%rax)
43a0(3): test %rcx,%rcx
43a3(2): jz 0x25(%rip)
43a5(3): mov %rcx,%rax
43a8(3): mul %rax,%r9,%rdx
43ab(3): seto %dl
43ae(3): test %rax,%rax
43b1(3): movzx %dl,%edx
43b4(2): js 0x7(%rip)
43b6(3): test %rdx,%rdx
43b9(2): jz 0xffffffd1(%rip)
43bb(4): sub $0x8,%rsp
43bf(5): call 0x121(%rip)
43c4(4): nop 0x0(%rax)
43c8(2): xor %edx,%edx
43ca(5): mov $0x80,%eax
43cf(3): xor %r8d,%r8d
43d2(3): div %r9,%rax
43d5(3): test %rax,%rax
43d8(4): setz %r8b
43dc(4): lea 0x0(%r8,%rax,1),%rcx
43e0(2): jmp 0xffffffc5(%rip)

"x2realloc" :
43f0(3): test %rdi,%rdi
43f3(3): mov (%rsi),%rax
43f6(2): jz 0x2a(%rip)
43f8(a): mov $0x6148914691236517203,%rdx
4402(3): cmp %rdx,%rax
4405(2): jnbe 0x2c(%rip)
4407(3): mov %rax,%rdx
440a(3): shr $0x1,%rdx
440d(5): lea 0x1(%rdx,%rax,1),%rax
4412(3): mov %rax,(%rsi)
4415(3): mov %rax,%rsi
4418(5): jmp 0xfffffed8(%rip)
441d(3): nop (%rax)
4420(3): test %rax,%rax
4423(5): mov $0x80,%edx
4428(4): cmove %rdx,%rax
442c(3): test %rax,%rax
442f(2): jns 0xffffffe3(%rip)
4431(4): sub $0x8,%rsp
4435(5): call 0xab(%rip)

"xzalloc" :
4440(1): push %rbx
4441(3): mov %rdi,%rbx
4444(5): call 0xfffffe4c(%rip)
4449(3): mov %rbx,%rdx
444c(2): xor %esi,%esi
444e(3): mov %rax,%rdi
4451(1): pop %rbx
4452(5): jmp 0xffffceae(%rip)

"xcalloc" :
4460(3): mov %rdi,%rax
4463(4): sub $0x8,%rsp
4467(3): mul %rax,%rsi,%rdx
446a(3): seto %dl
446d(3): test %rax,%rax
4470(2): js 0x19(%rip)
4472(3): movzx %dl,%edx
4475(3): test %rdx,%rdx
4478(2): jnz 0x11(%rip)
447a(5): call 0xffffceb6(%rip)
447f(3): test %rax,%rax
4482(2): jz 0x7(%rip)
4484(4): add $0x8,%rsp
4488(1): ret near (%rsp)
4489(5): call 0x57(%rip)

"xmemdup" :
4490(1): push %rbp
4491(1): push %rbx
4492(3): mov %rdi,%rbp
4495(3): mov %rsi,%rdi
4498(3): mov %rsi,%rbx
449b(4): sub $0x8,%rsp
449f(5): call 0xfffffdf1(%rip)
44a4(4): add $0x8,%rsp
44a8(3): mov %rbx,%rdx
44ab(3): mov %rbp,%rsi
44ae(1): pop %rbx
44af(1): pop %rbp
44b0(3): mov %rax,%rdi
44b3(5): jmp 0xffffce8d(%rip)

"xstrdup" :
44c0(1): push %rbx
44c1(3): mov %rdi,%rbx
44c4(5): call 0xffffcddc(%rip)
44c9(3): mov %rbx,%rdi
44cc(4): lea 0x1(%rax),%rsi
44d0(1): pop %rbx
44d1(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
44e0(7): lea 0xee8(%rip),%rsi
44e7(4): sub $0x8,%rsp
44eb(5): mov $0x5,%edx
44f0(2): xor %edi,%edi
44f2(5): call 0xffffcd8e(%rip)
44f7(6): mov 0x202b1b(%rip),%edi
44fd(7): lea 0x63c(%rip),%rdx
4504(3): mov %rax,%rcx
4507(2): xor %esi,%esi
4509(2): xor %eax,%eax
450b(5): call 0xffffcec5(%rip)
4510(5): call 0xffffcce0(%rip)

"rpl_mbrtowc" :
4520(2): push %r13
4522(2): push %r12
4524(3): mov %rsi,%r13
4527(1): push %rbp
4528(1): push %rbx
4529(3): mov %rdi,%rbx
452c(3): mov %rdx,%r12
452f(4): sub $0x18,%rsp
4533(9): mov $0x28,%rax
453c(5): mov %rax,0x8(%rsp)
4541(2): xor %eax,%eax
4543(5): lea 0x4(%rsp),%rax
4548(3): test %rdi,%rdi
454b(4): cmove %rax,%rbx
454f(3): mov %rbx,%rdi
4552(5): call 0xffffcd7e(%rip)
4557(4): cmp $0xfffffffd,%rax
455b(3): mov %rax,%rbp
455e(2): jbe 0x22(%rip)
4560(3): test %r12,%r12
4563(2): jz 0x1d(%rip)
4565(2): xor %edi,%edi
4567(5): call 0xc9(%rip)
456c(2): test %al,%al
456e(2): jnz 0x12(%rip)
4570(5): movzx 0x0(%r13),%eax
4575(5): mov $0x1,%ebp
457a(2): mov %eax,(%rbx)
457c(4): nop 0x0(%rax)
4580(5): mov 0x8(%rsp),%rdx
4585(9): xor $0x28,%rdx
458e(3): mov %rbp,%rax
4591(2): jnz 0xd(%rip)
4593(4): add $0x18,%rsp
4597(1): pop %rbx
4598(1): pop %rbp
4599(2): pop %r12
459b(2): pop %r13
459d(1): ret near (%rsp)
459e(5): call 0xffffcd12(%rip)

"close_stream" :
45b0(2): push %r12
45b2(1): push %rbp
45b3(3): mov %rdi,%rbp
45b6(1): push %rbx
45b7(5): call 0xffffcc79(%rip)
45bc(3): mov 0x0(%rbp),%ebx
45bf(3): mov %rbp,%rdi
45c2(3): mov %rax,%r12
45c5(5): call 0x10b(%rip)
45ca(3): and $0x20,%ebx
45cd(2): test %ebx,%ebx
45cf(2): jnz 0x19(%rip)
45d1(2): test %eax,%eax
45d3(2): jz 0xc(%rip)
45d5(3): test %r12,%r12
45d8(5): mov $0xffffffff,%eax
45dd(2): jz 0x3b(%rip)
45df(1): pop %rbx
45e0(1): pop %rbp
45e1(2): pop %r12
45e3(1): ret near (%rsp)
45e4(4): nop 0x0(%rax)
45e8(2): test %eax,%eax
45ea(2): jnz 0x1e(%rip)
45ec(5): call 0xffffcc14(%rip)
45f1(6): mov $0x0,(%rax)
45f7(5): mov $0xffffffff,%eax
45fc(1): pop %rbx
45fd(1): pop %rbp
45fe(2): pop %r12
4600(1): ret near (%rsp)
4601(7): nop 0x0(%rax)
4608(1): pop %rbx
4609(5): mov $0xffffffff,%eax
460e(1): pop %rbp
460f(2): pop %r12
4611(1): ret near (%rsp)
4612(6): nop 0x0(%rax,%rax,1)
4618(5): call 0xffffcbe8(%rip)
461d(3): cmp $0x9,(%rax)
4620(1): pop %rbx
4621(1): pop %rbp
4622(2): pop %r12
4624(3): setnz %al
4627(3): movzx %al,%eax
462a(2): neg %eax
462c(1): ret near (%rsp)

"hard_locale" :
4630(4): sub $0x8,%rsp
4634(2): xor %esi,%esi
4636(5): call 0xffffcd7a(%rip)
463b(3): mov %rax,%rdx
463e(5): mov $0x1,%eax
4643(3): test %rdx,%rdx
4646(2): jz 0x1f(%rip)
4648(7): lea 0xd91(%rip),%rdi
464f(5): mov $0x2,%ecx
4654(3): mov %rdx,%rsi
4657(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4659(3): setnbe %cl
465c(3): sbb $0x0,%cl
465f(2): xor %eax,%eax
4661(2): test %cl,%cl
4663(2): jnz 0xd(%rip)
4665(4): add $0x8,%rsp
4669(1): ret near (%rsp)
466a(6): nop 0x0(%rax,%rax,1)
4670(7): lea 0xd6b(%rip),%rdi
4677(5): mov $0x6,%ecx
467c(3): mov %rdx,%rsi
467f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4681(3): setnbe %al
4684(2): sbb $0x0,%al
4686(2): test %al,%al
4688(3): setnz %al
468b(4): add $0x8,%rsp
468f(1): ret near (%rsp)

"locale_charset" :
4690(4): sub $0x8,%rsp
4694(5): mov $0xe,%edi
4699(5): call 0xffffcce7(%rip)
469e(3): test %rax,%rax
46a1(2): jz 0x1f(%rip)
46a3(3): cmp $0x0,(%rax)
46a6(7): lea 0xd3b(%rip),%rdx
46ad(4): cmove %rdx,%rax
46b1(4): add $0x8,%rsp
46b5(1): ret near (%rsp)
46b6(a): nop 0x0(%rax,%rax,1)
46c0(7): lea 0xd21(%rip),%rax
46c7(4): add $0x8,%rsp
46cb(1): ret near (%rsp)

"rpl_fclose" :
46d0(2): push %r12
46d2(1): push %rbp
46d3(1): push %rbx
46d4(3): mov %rdi,%rbx
46d7(5): call 0xffffcc79(%rip)
46dc(2): test %eax,%eax
46de(3): mov %rbx,%rdi
46e1(2): js 0x56(%rip)
46e3(5): call 0xffffccad(%rip)
46e8(2): test %eax,%eax
46ea(2): jnz 0x2e(%rip)
46ec(3): mov %rbx,%rdi
46ef(5): call 0x61(%rip)
46f4(2): test %eax,%eax
46f6(2): jz 0x3e(%rip)
46f8(5): call 0xffffcb08(%rip)
46fd(3): mov (%rax),%r12d
4700(3): mov %rbx,%rdi
4703(3): mov %rax,%rbp
4706(5): call 0xffffcb5a(%rip)
470b(3): test %r12d,%r12d
470e(2): jnz 0x32(%rip)
4710(1): pop %rbx
4711(1): pop %rbp
4712(2): pop %r12
4714(1): ret near (%rsp)
4715(3): nop (%rax)
4718(3): mov %rbx,%rdi
471b(5): call 0xffffcc35(%rip)
4720(2): xor %esi,%esi
4722(5): mov $0x1,%edx
4727(2): mov %eax,%edi
4729(5): call 0xffffcbc7(%rip)
472e(4): cmp $0xffffffff,%rax
4732(2): jnz 0xffffffba(%rip)
4734(3): mov %rbx,%rdi
4737(1): pop %rbx
4738(1): pop %rbp
4739(2): pop %r12
473b(5): jmp 0xffffcb25(%rip)
4740(4): mov %r12d,0x0(%rbp)
4744(5): mov $0xffffffff,%eax
4749(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
4750(3): test %rdi,%rdi
4753(1): push %rbx
4754(3): mov %rdi,%rbx
4757(2): jz 0x13(%rip)
4759(5): call 0xffffcc37(%rip)
475e(2): test %eax,%eax
4760(2): jz 0xa(%rip)
4762(6): test $0x100,(%rbx)
4768(2): jnz 0x10(%rip)
476a(3): mov %rbx,%rdi
476d(1): pop %rbx
476e(5): jmp 0xffffcc02(%rip)
4773(5): nop 0x0(%rax,%rax,1)
4778(3): mov %rbx,%rdi
477b(5): mov $0x1,%edx
4780(2): xor %esi,%esi
4782(5): call 0xe(%rip)
4787(3): mov %rbx,%rdi
478a(1): pop %rbx
478b(5): jmp 0xffffcbe5(%rip)

"rpl_fseeko" :
4790(4): mov 0x8(%rdi),%rax
4794(4): cmp %rax,0x10(%rdi)
4798(2): jz 0x8(%rip)
479a(5): jmp 0xffffcc46(%rip)
479f(1): nop 
47a0(4): mov 0x20(%rdi),%rax
47a4(4): cmp %rax,0x28(%rdi)
47a8(2): jnz 0xfffffff2(%rip)
47aa(5): cmp $0x0,0x48(%rdi)
47af(2): jnz 0xffffffeb(%rip)
47b1(2): push %r12
47b3(1): push %rbp
47b4(3): mov %edx,%r12d
47b7(1): push %rbx
47b8(3): mov %rsi,%rbp
47bb(3): mov %rdi,%rbx
47be(5): call 0xffffcb92(%rip)
47c3(3): mov %r12d,%edx
47c6(3): mov %rbp,%rsi
47c9(2): mov %eax,%edi
47cb(5): call 0xffffcb25(%rip)
47d0(4): cmp $0xffffffff,%rax
47d4(2): jz 0xe(%rip)
47d6(3): and $0xef,(%rbx)
47d9(7): mov %rax,0x90(%rbx)
47e0(2): xor %eax,%eax
47e2(1): pop %rbx
47e3(1): pop %rbp
47e4(2): pop %r12
47e6(1): ret near (%rsp)

"__libc_csu_init" :
47f0(2): push %r15
47f2(2): push %r14
47f4(3): mov %rdx,%r15
47f7(2): push %r13
47f9(2): push %r12
47fb(7): lea 0x2023ae(%rip),%r12
4802(1): push %rbp
4803(7): lea 0x2023ae(%rip),%rbp
480a(1): push %rbx
480b(3): mov %edi,%r13d
480e(3): mov %rsi,%r14
4811(3): sub %r12,%rbp
4814(4): sub $0x8,%rsp
4818(4): sar $0x3,%rbp
481c(5): call 0xffffc99c(%rip)
4821(3): test %rbp,%rbp
4824(2): jz 0x22(%rip)
4826(2): xor %ebx,%ebx
4828(8): nop 0x0(%rax,%rax,1)
4830(3): mov %r15,%rdx
4833(3): mov %r14,%rsi
4836(3): mov %r13d,%edi
4839(4): call 0x0(%r12,%rbx,8)
483d(4): add $0x1,%rbx
4841(3): cmp %rbx,%rbp
4844(2): jnz 0xffffffec(%rip)
4846(4): add $0x8,%rsp
484a(1): pop %rbx
484b(1): pop %rbp
484c(2): pop %r12
484e(2): pop %r13
4850(2): pop %r14
4852(2): pop %r15
4854(1): ret near (%rsp)

"atexit" :
4870(7): mov 0x202791(%rip),%rdx
4877(2): xor %esi,%esi
4879(5): jmp 0xffffcb77(%rip)

"_fini" :
4880(4): sub $0x8,%rsp
4884(4): add $0x8,%rsp
4888(1): ret near (%rsp)

