
"__uflow@plt" :
14c0(6): jmp 0x20797a(%rip)
14c6(5): push $0x0

"free@plt" :
14d0(6): jmp 0x207972(%rip)
14d6(5): push $0x1

"abort@plt" :
14e0(6): jmp 0x20796a(%rip)
14e6(5): push $0x2

"__errno_location@plt" :
14f0(6): jmp 0x207962(%rip)
14f6(5): push $0x3

"strncmp@plt" :
1500(6): jmp 0x20795a(%rip)
1506(5): push $0x4

"_exit@plt" :
1510(6): jmp 0x207952(%rip)
1516(5): push $0x5

"__fpending@plt" :
1520(6): jmp 0x20794a(%rip)
1526(5): push $0x6

"textdomain@plt" :
1530(6): jmp 0x207942(%rip)
1536(5): push $0x7

"fclose@plt" :
1540(6): jmp 0x20793a(%rip)
1546(5): push $0x8

"bindtextdomain@plt" :
1550(6): jmp 0x207932(%rip)
1556(5): push $0x9

"dcgettext@plt" :
1560(6): jmp 0x20792a(%rip)
1566(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
1570(6): jmp 0x207922(%rip)
1576(5): push $0xb

"strlen@plt" :
1580(6): jmp 0x20791a(%rip)
1586(5): push $0xc

"__stack_chk_fail@plt" :
1590(6): jmp 0x207912(%rip)
1596(5): push $0xd

"getopt_long@plt" :
15a0(6): jmp 0x20790a(%rip)
15a6(5): push $0xe

"mbrtowc@plt" :
15b0(6): jmp 0x207902(%rip)
15b6(5): push $0xf

"strchr@plt" :
15c0(6): jmp 0x2078fa(%rip)
15c6(5): push $0x10

"__overflow@plt" :
15d0(6): jmp 0x2078f2(%rip)
15d6(5): push $0x11

"strrchr@plt" :
15e0(6): jmp 0x2078ea(%rip)
15e6(5): push $0x12

"lseek@plt" :
15f0(6): jmp 0x2078e2(%rip)
15f6(5): push $0x13

"__assert_fail@plt" :
1600(6): jmp 0x2078da(%rip)
1606(5): push $0x14

"__strtoul_internal@plt" :
1610(6): jmp 0x2078d2(%rip)
1616(5): push $0x15

"memset@plt" :
1620(6): jmp 0x2078ca(%rip)
1626(5): push $0x16

"posix_fadvise@plt" :
1630(6): jmp 0x2078c2(%rip)
1636(5): push $0x17

"memcmp@plt" :
1640(6): jmp 0x2078ba(%rip)
1646(5): push $0x18

"fputs_unlocked@plt" :
1650(6): jmp 0x2078b2(%rip)
1656(5): push $0x19

"calloc@plt" :
1660(6): jmp 0x2078aa(%rip)
1666(5): push $0x1a

"__memmove_chk@plt" :
1670(6): jmp 0x2078a2(%rip)
1676(5): push $0x1b

"memcpy@plt" :
1680(6): jmp 0x20789a(%rip)
1686(5): push $0x1c

"fileno@plt" :
1690(6): jmp 0x207892(%rip)
1696(5): push $0x1d

"malloc@plt" :
16a0(6): jmp 0x20788a(%rip)
16a6(5): push $0x1e

"fflush@plt" :
16b0(6): jmp 0x207882(%rip)
16b6(5): push $0x1f

"nl_langinfo@plt" :
16c0(6): jmp 0x20787a(%rip)
16c6(5): push $0x20

"__freading@plt" :
16d0(6): jmp 0x207872(%rip)
16d6(5): push $0x21

"fwrite_unlocked@plt" :
16e0(6): jmp 0x20786a(%rip)
16e6(5): push $0x22

"realloc@plt" :
16f0(6): jmp 0x207862(%rip)
16f6(5): push $0x23

"setlocale@plt" :
1700(6): jmp 0x20785a(%rip)
1706(5): push $0x24

"__printf_chk@plt" :
1710(6): jmp 0x207852(%rip)
1716(5): push $0x25

"error@plt" :
1720(6): jmp 0x20784a(%rip)
1726(5): push $0x26

"fseeko@plt" :
1730(6): jmp 0x207842(%rip)
1736(5): push $0x27

"fopen@plt" :
1740(6): jmp 0x20783a(%rip)
1746(5): push $0x28

"__cxa_atexit@plt" :
1750(6): jmp 0x207832(%rip)
1756(5): push $0x29

"exit@plt" :
1760(6): jmp 0x20782a(%rip)
1766(5): push $0x2a

"fwrite@plt" :
1770(6): jmp 0x207822(%rip)
1776(5): push $0x2b

"__fprintf_chk@plt" :
1780(6): jmp 0x20781a(%rip)
1786(5): push $0x2c

"mbsinit@plt" :
1790(6): jmp 0x207812(%rip)
1796(5): push $0x2d

"iswprint@plt" :
17a0(6): jmp 0x20780a(%rip)
17a6(5): push $0x2e

"__ctype_b_loc@plt" :
17b0(6): jmp 0x207802(%rip)
17b6(5): push $0x2f

".plt.got" :
17c0(6): jmp 0x20781a(%rip)
17c6(2): nop 

"_init" :
1490(4): sub $0x8,%rsp
1494(7): mov 0x207b35(%rip),%rax
149b(3): test %rax,%rax
149e(2): jz 0x4(%rip)
14a0(2): call %rax
14a2(4): add $0x8,%rsp
14a6(1): ret near (%rsp)

"main" :
17d0(2): push %r15
17d2(2): push %r14
17d4(2): push %r13
17d6(2): push %r12
17d8(3): xor %r13d,%r13d
17db(1): push %rbp
17dc(1): push %rbx
17dd(2): mov %edi,%ebp
17df(3): mov %rsi,%rbx
17e2(4): sub $0x18,%rsp
17e6(3): mov (%rsi),%rdi
17e9(5): call 0x1ad7(%rip)
17ee(7): lea 0x55ac(%rip),%rsi
17f5(5): mov $0x6,%edi
17fa(5): call 0xffffff06(%rip)
17ff(7): lea 0x4a42(%rip),%rsi
1806(7): lea 0x4a12(%rip),%rdi
180d(5): call 0xfffffd43(%rip)
1812(7): lea 0x4a06(%rip),%rdi
1819(5): call 0xfffffd17(%rip)
181e(7): lea 0x19ab(%rip),%rdi
1825(5): call 0x491b(%rip)
182a(7): lea 0x5570(%rip),%rax
1831(3): cmp $0x1,%ebp
1834(7): mov $0x0,0x2128f5(%rip)
183b(7): mov $0x0,0x2128ef(%rip)
1842(7): mov $0x0,0x2128e9(%rip)
1849(7): mov $0x0,0x2128e3(%rip)
1850(a): mov $0x4b,0x2128c6(%rip)
185a(7): mov %rax,0x2128c7(%rip)
1861(a): mov $0x0,0x2128b1(%rip)
186b(a): mov $0x0,0x2128a3(%rip)
1875(a): mov $0x0,0x212895(%rip)
187f(2): jle 0xf(%rip)
1881(4): mov 0x8(%rbx),%rax
1885(3): cmp $0x2d,(%rax)
1888(6): jz 0x1b9(%rip)
188e(7): lea 0x20720b(%rip),%r12
1895(3): xor %r14d,%r14d
1898(8): nop 0x0(%rax,%rax,1)
18a0(7): lea 0x49c7(%rip),%rdx
18a7(3): xor %r8d,%r8d
18aa(3): mov %r12,%rcx
18ad(3): mov %rbx,%rsi
18b0(2): mov %ebp,%edi
18b2(5): call 0xfffffcee(%rip)
18b7(3): cmp $0xff,%eax
18ba(3): mov %eax,%r15d
18bd(6): jz 0x1aa(%rip)
18c3(4): cmp $0x70,%r15d
18c7(2): jz 0x71(%rip)
18c9(2): jle 0x37(%rip)
18cb(4): cmp $0x74,%r15d
18cf(6): jz 0x111(%rip)
18d5(6): jle 0xeb(%rip)
18db(4): cmp $0x75,%r15d
18df(6): jz 0xd1(%rip)
18e5(4): cmp $0x77,%r15d
18e9(6): jnz 0x395(%rip)
18ef(7): mov 0x2077aa(%rip),%r13
18f6(2): jmp 0xffffffaa(%rip)
18f8(8): nop 0x0(%rax,%rax,1)
1900(7): cmp $0xffffff7e,%r15d
1907(6): jz 0x370(%rip)
190d(6): jle 0xf3(%rip)
1913(4): cmp $0x63,%r15d
1917(6): jz 0xd9(%rip)
191d(4): cmp $0x67,%r15d
1921(6): jnz 0x35d(%rip)
1927(7): mov 0x207772(%rip),%r14
192e(5): jmp 0xffffff72(%rip)
1933(5): nop 0x0(%rax,%rax,1)
1938(7): mov 0x207761(%rip),%r15
193f(a): mov $0x0,0x2127cf(%rip)
1949(4): cmp $0x20,(%r15)
194d(2): jnz 0x20(%rip)
194f(5): mov $0x1,%eax
1954(4): nop 0x0(%rax)
1958(4): add $0x1,%r15
195c(2): mov %eax,%edx
195e(3): add $0x1,%eax
1961(4): cmp $0x20,(%r15)
1965(2): jz 0xfffffff3(%rip)
1967(6): mov %edx,0x2127ab(%rip)
196d(3): mov %r15,%rdi
1970(7): mov %r15,0x2127b1(%rip)
1977(5): call 0xfffffc09(%rip)
197c(6): mov %eax,0x21279a(%rip)
1982(2): cwde 
1984(3): add %r15,%rax
1987(3): cmp %rax,%r15
198a(2): jb 0xf(%rip)
198c(2): jmp 0x13(%rip)
198e(2): nop 
1990(4): sub $0x1,%rax
1994(3): cmp %rax,%r15
1997(2): jz 0x8(%rip)
1999(4): cmp $0x20,0xffffffff(%rax)
199d(2): jz 0xfffffff3(%rip)
199f(3): mov $0x0,(%rax)
19a2(3): sub %r15,%rax
19a5(6): mov %eax,0x212769(%rip)
19ab(5): jmp 0xfffffef5(%rip)
19b0(7): mov $0x1,0x212779(%rip)
19b7(5): jmp 0xfffffee9(%rip)
19bc(4): nop 0x0(%rax)
19c0(4): cmp $0x73,%r15d
19c4(6): jnz 0x2ba(%rip)
19ca(7): mov $0x1,0x212760(%rip)
19d1(5): jmp 0xfffffecf(%rip)
19d6(a): nop 0x0(%rax,%rax,1)
19e0(7): mov $0x1,0x21274b(%rip)
19e7(5): jmp 0xfffffeb9(%rip)
19ec(4): nop 0x0(%rax)
19f0(7): mov $0x1,0x21273c(%rip)
19f7(5): jmp 0xfffffea9(%rip)
19fc(4): nop 0x0(%rax)
1a00(7): cmp $0xffffff7d,%r15d
1a07(6): jnz 0x277(%rip)
1a0d(7): mov 0x207674(%rip),%rdi
1a14(7): mov 0x2075f5(%rip),%rcx
1a1b(7): lea 0x483e(%rip),%r8
1a22(7): lea 0x47f2(%rip),%rdx
1a29(7): lea 0x4771(%rip),%rsi
1a30(3): xor %r9d,%r9d
1a33(2): xor %eax,%eax
1a35(5): call 0x3a7b(%rip)
1a3a(2): xor %edi,%edi
1a3c(5): call 0xfffffd24(%rip)
1a41(4): movsx 0x1(%rax),%edx
1a45(3): sub $0x30,%edx
1a48(3): cmp $0x9,%edx
1a4b(6): jnbe 0xfffffe43(%rip)
1a51(4): lea 0x1(%rax),%r13
1a55(3): mov (%rbx),%rax
1a58(3): sub $0x1,%ebp
1a5b(4): add $0x8,%rbx
1a5f(3): mov %rax,(%rbx)
1a62(5): jmp 0xfffffe2c(%rip)
1a67(3): test %r13,%r13
1a6a(6): jz 0x149(%rip)
1a70(7): lea 0x480c(%rip),%rsi
1a77(2): xor %edi,%edi
1a79(5): mov $0x5,%edx
1a7e(5): call 0xfffffae2(%rip)
1a83(7): lea 0x5317(%rip),%rcx
1a8a(3): xor %r9d,%r9d
1a8d(2): xor %esi,%esi
1a8f(3): mov %rax,%r8
1a92(5): mov $0x9c4,%edx
1a97(3): mov %r13,%rdi
1a9a(5): call 0x3f06(%rip)
1a9f(3): test %r14,%r14
1aa2(3): mov %rax,%r12
1aa5(6): mov %eax,0x212675(%rip)
1aab(6): jz 0x10d(%rip)
1ab1(7): lea 0x47cb(%rip),%rsi
1ab8(5): mov $0x5,%edx
1abd(2): xor %edi,%edi
1abf(5): call 0xfffffaa1(%rip)
1ac4(7): lea 0x52d6(%rip),%rcx
1acb(3): mov %rax,%r8
1ace(3): movsxd %r12d,%rdx
1ad1(3): xor %r9d,%r9d
1ad4(2): xor %esi,%esi
1ad6(3): mov %r14,%rdi
1ad9(5): call 0x3ec7(%rip)
1ade(6): mov %eax,0x21262c(%rip)
1ae4(6): mov 0x2075ae(%rip),%eax
1aea(2): cmp %ebp,%eax
1aec(6): jz 0xe9(%rip)
1af2(6): mov $0x1,%r12d
1af8(7): lea 0x4d7b(%rip),%r13
1aff(7): lea 0x4d27(%rip),%r14
1b06(2): jl 0x2a(%rip)
1b08(5): jmp 0xdf(%rip)
1b0d(7): mov 0x20757c(%rip),%rdi
1b14(5): call 0xd8c(%rip)
1b19(6): mov 0x207579(%rip),%eax
1b1f(3): add $0x1,%eax
1b22(2): cmp %ebp,%eax
1b24(6): mov %eax,0x20756e(%rip)
1b2a(6): jnl 0xbd(%rip)
1b30(2): cwde 
1b32(5): mov $0x2,%ecx
1b37(3): mov %r13,%rdi
1b3a(4): mov 0x0(%rbx,%rax,8),%r15
1b3e(3): mov %r15,%rsi
1b41(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1b43(3): setnbe %al
1b46(2): sbb $0x0,%al
1b48(2): test %al,%al
1b4a(2): jz 0xffffffc3(%rip)
1b4c(3): mov %r14,%rsi
1b4f(3): mov %r15,%rdi
1b52(5): call 0xfffffbee(%rip)
1b57(3): test %rax,%rax
1b5a(6): jz 0xa4(%rip)
1b60(3): mov %rax,%rdi
1b63(5): mov %rax,0x8(%rsp)
1b68(5): call 0xd38(%rip)
1b6d(5): mov 0x8(%rsp),%rax
1b72(3): mov %rax,%rdi
1b75(5): call 0x427b(%rip)
1b7a(3): add $0x1,%eax
1b7d(2): jnz 0xffffff9c(%rip)
1b7f(3): mov %r15,%rdx
1b82(5): mov $0x3,%esi
1b87(2): xor %edi,%edi
1b89(5): call 0x3277(%rip)
1b8e(3): mov %rax,%r12
1b91(5): call 0xfffff95f(%rip)
1b96(7): lea 0x4c96(%rip),%rdx
1b9d(3): mov %r12,%rcx
1ba0(2): mov (%rax),%esi
1ba2(2): xor %edi,%edi
1ba4(2): xor %eax,%eax
1ba6(3): xor %r12d,%r12d
1ba9(5): call 0xfffffb77(%rip)
1bae(5): jmp 0xffffff6b(%rip)
1bb3(3): test %r14,%r14
1bb6(2): jnz 0x7e(%rip)
1bb8(a): imul 0x21255e(%rip),$0xbb,%eax
1bc2(5): mov $0xc8,%ecx
1bc7(1): cdq %eax
1bc8(2): idiv %ecx,%eax
1bca(6): mov %eax,0x212540(%rip)
1bd0(5): jmp 0xffffff14(%rip)
1bd5(7): mov 0x2074b4(%rip),%rdi
1bdc(6): mov $0x1,%r12d
1be2(5): call 0xcbe(%rip)
1be7(4): add $0x18,%rsp
1beb(4): xor $0x1,%r12d
1bef(1): pop %rbx
1bf0(4): movzx %r12b,%eax
1bf4(1): pop %rbp
1bf5(2): pop %r12
1bf7(2): pop %r13
1bf9(2): pop %r14
1bfb(2): pop %r15
1bfd(1): ret near (%rsp)
1bfe(3): mov %r15,%rsi
1c01(5): mov $0x4,%edi
1c06(5): call 0x30fa(%rip)
1c0b(7): lea 0x467f(%rip),%rsi
1c12(5): mov $0x5,%edx
1c17(2): xor %edi,%edi
1c19(3): mov %rax,%r15
1c1c(5): call 0xfffff944(%rip)
1c21(3): mov %rax,%r12
1c24(5): call 0xfffff8cc(%rip)
1c29(3): mov %r15,%rcx
1c2c(3): mov %r12,%rdx
1c2f(5): jmp 0xffffff71(%rip)
1c34(7): lea 0x4648(%rip),%rsi
1c3b(5): mov $0x5,%edx
1c40(2): xor %edi,%edi
1c42(5): call 0xfffff91e(%rip)
1c47(7): lea 0x5153(%rip),%rcx
1c4e(3): mov %rax,%r8
1c51(3): xor %r9d,%r9d
1c54(5): mov $0x4b,%edx
1c59(2): xor %esi,%esi
1c5b(3): mov %r14,%rdi
1c5e(5): call 0x3d42(%rip)
1c63(6): mov %eax,0x2124a7(%rip)
1c69(3): add $0xa,%eax
1c6c(6): mov %eax,0x2124ae(%rip)
1c72(5): jmp 0xfffffe72(%rip)
1c77(2): xor %edi,%edi
1c79(5): call 0x1157(%rip)
1c7e(4): lea 0xffffffd0(%r15),%eax
1c82(3): cmp $0x9,%eax
1c85(2): jbe 0xc(%rip)
1c87(5): mov $0x1,%edi
1c8c(5): call 0x1144(%rip)
1c91(7): lea 0x4b18(%rip),%rsi
1c98(2): xor %edi,%edi
1c9a(5): mov $0x5,%edx
1c9f(5): call 0xfffff8c1(%rip)
1ca4(3): mov %r15d,%ecx
1ca7(3): mov %rax,%rdx
1caa(2): xor %esi,%esi
1cac(2): xor %edi,%edi
1cae(2): xor %eax,%eax
1cb0(5): call 0xfffffa70(%rip)
1cb5(2): jmp 0xffffffd2(%rip)

"_start" :
1cc0(2): xor %ebp,%ebp
1cc2(3): mov %rdx,%r9
1cc5(1): pop %rsi
1cc6(3): mov %rsp,%rdx
1cc9(4): and $0xfffffff0,%rsp
1ccd(1): push %rax
1cce(1): push %rsp
1ccf(7): lea 0x445a(%rip),%r8
1cd6(7): lea 0x43e3(%rip),%rcx
1cdd(7): lea 0xfffffaec(%rip),%rdi
1ce4(6): call 0x2072de(%rip)
1cea(1): hlt 

"deregister_tm_clones" :
1cf0(7): lea 0x207389(%rip),%rdi
1cf7(1): push %rbp
1cf8(7): lea 0x207381(%rip),%rax
1cff(3): cmp %rdi,%rax
1d02(3): mov %rsp,%rbp
1d05(2): jz 0x1b(%rip)
1d07(7): mov 0x2072b2(%rip),%rax
1d0e(3): test %rax,%rax
1d11(2): jz 0xf(%rip)
1d13(1): pop %rbp
1d14(2): jmp %rax
1d16(a): nop 0x0(%rax,%rax,1)
1d20(1): pop %rbp
1d21(1): ret near (%rsp)

"register_tm_clones" :
1d30(7): lea 0x207349(%rip),%rdi
1d37(7): lea 0x207342(%rip),%rsi
1d3e(1): push %rbp
1d3f(3): sub %rdi,%rsi
1d42(3): mov %rsp,%rbp
1d45(4): sar $0x3,%rsi
1d49(3): mov %rsi,%rax
1d4c(4): shr $0x3f,%rax
1d50(3): add %rax,%rsi
1d53(3): sar $0x1,%rsi
1d56(2): jz 0x1a(%rip)
1d58(7): mov 0x207279(%rip),%rax
1d5f(3): test %rax,%rax
1d62(2): jz 0xe(%rip)
1d64(1): pop %rbp
1d65(2): jmp %rax
1d67(9): nop 0x0(%rax,%rax,1)
1d70(1): pop %rbp
1d71(1): ret near (%rsp)

"__do_global_dtors_aux" :
1d80(7): cmp $0x0,0x207341(%rip)
1d87(2): jnz 0x31(%rip)
1d89(8): cmp $0x0,0x20724f(%rip)
1d91(1): push %rbp
1d92(3): mov %rsp,%rbp
1d95(2): jz 0xe(%rip)
1d97(7): mov 0x20726a(%rip),%rdi
1d9e(5): call 0xfffffa22(%rip)
1da3(5): call 0xffffff4d(%rip)
1da8(7): mov $0x1,0x207319(%rip)
1daf(1): pop %rbp
1db0(1): ret near (%rsp)
1db1(7): nop 0x0(%rax)
1db8(2): REP ret near (%rsp)

"frame_dummy" :
1dc0(1): push %rbp
1dc1(3): mov %rsp,%rbp
1dc4(1): pop %rbp
1dc5(5): jmp 0xffffff6b(%rip)

"fmt_paragraph" :
1dd0(7): mov 0x207329(%rip),%rsi
1dd7(2): push %r15
1dd9(7): lea 0x207340(%rip),%r8
1de0(2): push %r14
1de2(7): mov 0x212337(%rip),%r9d
1de9(2): push %r13
1deb(2): push %r12
1ded(4): lea 0xffffffd8(%rsi),%rcx
1df1(1): push %rbp
1df2(1): push %rbx
1df3(3): mov 0x8(%rsi),%eax
1df6(8): mov $0x0,0x18(%rsi)
1dfe(3): cmp %r8,%rcx
1e01(4): mov %r9d,0x8(%rsi)
1e05(4): mov %eax,0xfffffffc(%rsp)
1e09(6): jb 0x13c(%rip)
1e0f(7): mov 0x2072d6(%rip),%r13d
1e16(7): mov 0x2072d3(%rip),%r12d
1e1d(a): mov $0x9223372036854775807,%rbp
1e27(7): mov 0x2122e2(%rip),%r10d
1e2e(6): mov 0x2072ac(%rip),%ebx
1e34(4): nop 0x0(%rax)
1e38(4): mov 0x8(%rcx),%r11d
1e3c(3): cmp %r8,%rcx
1e3f(3): mov %r13d,%r15d
1e42(4): cmove %r12d,%r15d
1e46(3): mov %rcx,%rdx
1e49(3): mov %rbp,%rdi
1e4c(3): add %r11d,%r15d
1e4f(2): jmp 0x2c(%rip)
1e51(7): nop 0x0(%rax)
1e58(3): cmp %rdi,%rax
1e5b(2): jnl 0xd(%rip)
1e5d(4): mov %rdx,0x20(%rcx)
1e61(4): mov %r15d,0x14(%rcx)
1e65(3): mov %rax,%rdi
1e68(3): cmp %rdx,%rsi
1e6b(2): jz 0x7d(%rip)
1e6d(3): mov 0x8(%rdx),%eax
1e70(3): add 0xffffffe4(%rdx),%eax
1e73(3): add %eax,%r15d
1e76(3): cmp %r15d,%r9d
1e79(2): jle 0x6f(%rip)
1e7b(4): add $0x28,%rdx
1e7f(2): xor %eax,%eax
1e81(3): cmp %rdx,%rsi
1e84(2): jz 0x34(%rip)
1e86(3): mov %r10d,%eax
1e89(3): sub %r15d,%eax
1e8c(3): lea 0x0(%rax,%rax,4),%eax
1e8f(2): add %eax,%eax
1e91(2): cwde 
1e93(4): imul %rax,%rax
1e97(4): cmp 0x20(%rdx),%rsi
1e9b(2): jz 0x1d(%rip)
1e9d(3): mov %r15d,%r14d
1ea0(4): sub 0x14(%rdx),%r14d
1ea4(4): lea 0x0(%r14,%r14,4),%r14d
1ea8(3): add %r14d,%r14d
1eab(3): movsxd %r14d,%r14
1eae(4): imul %r14,%r14
1eb2(3): sar $0x1,%r14
1eb5(3): add %r14,%rax
1eb8(4): add 0x18(%rdx),%rax
1ebc(3): cmp %r8,%rcx
1ebf(2): jnz 0xffffff99(%rip)
1ec1(2): test %ebx,%ebx
1ec3(2): jle 0xffffff95(%rip)
1ec5(3): mov %r15d,%r14d
1ec8(3): sub %ebx,%r14d
1ecb(4): lea 0x0(%r14,%r14,4),%r14d
1ecf(3): add %r14d,%r14d
1ed2(3): movsxd %r14d,%r14
1ed5(4): imul %r14,%r14
1ed9(3): sar $0x1,%r14
1edc(3): add %r14,%rax
1edf(5): jmp 0xffffff79(%rip)
1ee4(4): nop 0x0(%rax)
1ee8(3): cmp %r8,%rcx
1eeb(6): mov $0x1324,%r14d
1ef1(2): jbe 0x20(%rip)
1ef3(4): movzx 0xffffffe8(%rcx),%eax
1ef7(2): test $0x2,%al
1ef9(2): jz 0x77(%rip)
1efb(3): and $0x8,%eax
1efe(2): cmp $0x1,%al
1f00(3): sbb %r14,%r14
1f03(7): and $0x58804,%r14d
1f0a(7): add $0x960,%r14
1f11(4): movzx 0x10(%rcx),%eax
1f15(2): test $0x1,%al
1f17(2): jnz 0x49(%rip)
1f19(2): test $0x8,%al
1f1b(2): jz 0x16(%rip)
1f1d(5): mov $0x57e4,%eax
1f22(4): add $0x2,%r11d
1f26(3): movsxd %r11d,%r11
1f29(2): cdq %rax
1f2b(3): idiv %r11,%rax
1f2e(3): add %rax,%r14
1f31(3): add %r14,%rdi
1f34(4): sub $0x28,%rcx
1f38(4): mov %rdi,0x40(%rcx)
1f3c(3): cmp %r8,%rcx
1f3f(6): jnb 0xfffffef9(%rip)
1f45(4): mov 0xfffffffc(%rsp),%eax
1f49(3): mov %eax,0x8(%rsi)
1f4c(1): pop %rbx
1f4d(1): pop %rbp
1f4e(2): pop %r12
1f50(2): pop %r13
1f52(2): pop %r14
1f54(2): pop %r15
1f56(1): ret near (%rsp)
1f57(9): nop 0x0(%rax,%rax,1)
1f60(7): sub $0x640,%r14
1f67(2): jmp 0xffffffca(%rip)
1f69(7): nop 0x0(%rax)
1f70(2): test $0x4,%al
1f72(6): mov $0xce4,%r14d
1f78(2): jnz 0xffffff99(%rip)
1f7a(7): lea 0x2071c7(%rip),%rax
1f81(6): mov $0x1324,%r14d
1f87(3): cmp %rax,%rcx
1f8a(2): jbe 0xffffff87(%rip)
1f8c(4): test $0x8,0xffffffc0(%rcx)
1f90(6): jz 0xffffff81(%rip)
1f96(3): mov 0xffffffe0(%rcx),%eax
1f99(4): lea 0x2(%rax),%r14d
1f9d(5): mov $0x9c40,%eax
1fa2(2): cdq %rax
1fa4(3): movsxd %r14d,%r14
1fa7(3): idiv %r14,%rax
1faa(7): lea 0x1324(%rax),%r14
1fb1(5): jmp 0xffffff60(%rip)

"get_space" :
1fc0(1): push %rbx
1fc1(2): mov %esi,%eax
1fc3(3): mov %rdi,%rbx
1fc6(2): jmp 0x49(%rip)
1fc8(8): nop 0x0(%rax,%rax,1)
1fd0(3): cmp $0x9,%eax
1fd3(2): jnz 0x5d(%rip)
1fd5(6): mov 0x212131(%rip),%edx
1fdb(7): mov $0x1,0x207116(%rip)
1fe2(3): lea 0x7(%rdx),%eax
1fe5(2): test %edx,%edx
1fe7(3): cmovns %edx,%eax
1fea(3): sar $0x3,%eax
1fed(7): lea 0x8(,%rax,8),%eax
1ff4(6): mov %eax,0x212112(%rip)
1ffa(4): mov 0x8(%rbx),%rax
1ffe(4): cmp 0x10(%rbx),%rax
2002(2): jnb 0x23(%rip)
2004(4): lea 0x1(%rax),%rdx
2008(4): mov %rdx,0x8(%rbx)
200c(3): movzx (%rax),%eax
200f(3): cmp $0x20,%eax
2012(2): jnz 0xffffffbe(%rip)
2014(7): add $0x1,0x2120f1(%rip)
201b(4): mov 0x8(%rbx),%rax
201f(4): cmp 0x10(%rbx),%rax
2023(2): jb 0xffffffe1(%rip)
2025(3): mov %rbx,%rdi
2028(5): call 0xfffff498(%rip)
202d(2): jmp 0xffffffe2(%rip)
202f(1): nop 
2030(1): pop %rbx
2031(1): ret near (%rsp)

"get_prefix" :
2040(1): push %rbp
2041(1): push %rbx
2042(3): mov %rdi,%rbx
2045(4): sub $0x8,%rsp
2049(4): mov 0x8(%rdi),%rax
204d(4): cmp 0x10(%rdi),%rax
2051(a): mov $0x0,0x2120b1(%rip)
205b(6): jnb 0xc5(%rip)
2061(4): lea 0x1(%rax),%rdx
2065(4): mov %rdx,0x8(%rdi)
2069(3): movzx (%rax),%esi
206c(3): mov %rbx,%rdi
206f(5): call 0xffffff51(%rip)
2074(6): mov 0x21209a(%rip),%edx
207a(2): test %edx,%edx
207c(6): jz 0x84(%rip)
2082(7): mov 0x21209f(%rip),%rbp
2089(6): mov 0x21207d(%rip),%edx
208f(4): movzx 0x0(%rbp),%ecx
2093(6): mov %edx,0x20704b(%rip)
2099(2): test %cl,%cl
209b(2): jz 0x55(%rip)
209d(2): cmp %ecx,%eax
209f(2): jz 0x2a(%rip)
20a1(2): jmp 0x78(%rip)
20a3(5): nop 0x0(%rax,%rax,1)
20a8(4): lea 0x1(%rax),%rdx
20ac(4): add $0x1,%rbp
20b0(4): mov %rdx,0x8(%rbx)
20b4(4): movzx 0x0(%rbp),%edx
20b8(3): movzx (%rax),%eax
20bb(2): test %dl,%dl
20bd(2): jz 0x33(%rip)
20bf(2): cmp %eax,%edx
20c1(2): jnz 0x58(%rip)
20c3(6): mov 0x212043(%rip),%edx
20c9(3): add $0x1,%edx
20cc(4): mov 0x8(%rbx),%rax
20d0(4): cmp 0x10(%rbx),%rax
20d4(6): mov %edx,0x212032(%rip)
20da(2): jb 0xffffffce(%rip)
20dc(4): add $0x1,%rbp
20e0(3): mov %rbx,%rdi
20e3(5): call 0xfffff3dd(%rip)
20e8(4): movzx 0x0(%rbp),%edx
20ec(2): test %dl,%dl
20ee(2): jnz 0xffffffd1(%rip)
20f0(4): add $0x8,%rsp
20f4(3): mov %rbx,%rdi
20f7(2): mov %eax,%esi
20f9(1): pop %rbx
20fa(1): pop %rbp
20fb(5): jmp 0xfffffec5(%rip)
2100(6): mov 0x212012(%rip),%edx
2106(6): cmp %edx,0x212000(%rip)
210c(7): cmovng 0x211ff9(%rip),%edx
2113(6): mov %edx,0x206fcb(%rip)
2119(4): add $0x8,%rsp
211d(1): pop %rbx
211e(1): pop %rbp
211f(1): ret near (%rsp)
2120(5): call 0xfffff3a0(%rip)
2125(2): mov %eax,%esi
2127(5): jmp 0xffffff45(%rip)

"put_space" :
2130(1): push %rbp
2131(1): push %rbx
2132(4): sub $0x8,%rsp
2136(7): cmp $0x0,0x206fbb(%rip)
213d(6): mov 0x211fc5(%rip),%edx
2143(3): lea 0x0(%rdx,%rdi,1),%ebx
2146(2): jz 0x67(%rip)
2148(3): lea 0x7(%rbx),%ebp
214b(2): test %ebx,%ebx
214d(3): lea 0x1(%rdx),%ecx
2150(3): cmovns %ebx,%ebp
2153(3): sar $0x3,%ebp
2156(7): lea 0x0(,%rbp,8),%eax
215d(2): cmp %eax,%ecx
215f(2): jnl 0x4e(%rip)
2161(2): cmp %eax,%edx
2163(2): jnl 0x4a(%rip)
2165(3): nop (%rax)
2168(7): mov 0x206f19(%rip),%rdi
216f(4): mov 0x28(%rdi),%rax
2173(4): cmp 0x30(%rdi),%rax
2177(6): jnb 0x89(%rip)
217d(4): lea 0x1(%rax),%rdx
2181(4): mov %rdx,0x28(%rdi)
2185(3): mov $0x9,(%rax)
2188(6): mov 0x211f7a(%rip),%edx
218e(3): lea 0x7(%rdx),%eax
2191(2): test %edx,%edx
2193(3): cmovns %edx,%eax
2196(3): sar $0x3,%eax
2199(3): add $0x1,%eax
219c(7): lea 0x0(,%rax,8),%edx
21a3(2): cmp %eax,%ebp
21a5(6): mov %edx,0x211f5d(%rip)
21ab(2): jnle 0xffffffbd(%rip)
21ad(2): cmp %edx,%ebx
21af(2): jle 0x38(%rip)
21b1(7): nop 0x0(%rax)
21b8(7): mov 0x206ec9(%rip),%rdi
21bf(4): mov 0x28(%rdi),%rax
21c3(4): cmp 0x30(%rdi),%rax
21c7(2): jnb 0x29(%rip)
21c9(4): lea 0x1(%rax),%rdx
21cd(4): mov %rdx,0x28(%rdi)
21d1(3): mov $0x20,(%rax)
21d4(6): mov 0x211f2e(%rip),%eax
21da(3): add $0x1,%eax
21dd(2): cmp %ebx,%eax
21df(6): mov %eax,0x211f23(%rip)
21e5(2): jl 0xffffffd3(%rip)
21e7(4): add $0x8,%rsp
21eb(1): pop %rbx
21ec(1): pop %rbp
21ed(1): ret near (%rsp)
21ee(2): nop 
21f0(5): mov $0x20,%esi
21f5(5): call 0xfffff3db(%rip)
21fa(2): jmp 0xffffffda(%rip)
21fc(4): nop 0x0(%rax)
2200(5): mov $0x9,%esi
2205(5): call 0xfffff3cb(%rip)
220a(5): jmp 0xffffff7e(%rip)

"set_other_indent" :
2210(7): cmp $0x0,0x211f1a(%rip)
2217(2): jnz 0x51(%rip)
2219(7): cmp $0x0,0x211f13(%rip)
2220(2): jz 0x20(%rip)
2222(3): test %dil,%dil
2225(6): mov 0x211ee1(%rip),%eax
222b(7): cmove 0x206ebe(%rip),%eax
2232(6): mov %eax,0x206eb4(%rip)
2238(1): ret near (%rsp)
2239(7): nop 0x0(%rax)
2240(7): cmp $0x0,0x211eeb(%rip)
2247(6): mov 0x206ea3(%rip),%eax
224d(2): jz 0x2b(%rip)
224f(3): test %dil,%dil
2252(2): jz 0x2e(%rip)
2254(6): mov 0x211eb2(%rip),%edx
225a(2): cmp %eax,%edx
225c(2): jz 0x24(%rip)
225e(6): mov %edx,0x206e88(%rip)
2264(1): ret near (%rsp)
2265(3): nop (%rax)
2268(6): mov 0x206e82(%rip),%eax
226e(6): mov %eax,0x206e78(%rip)
2274(1): ret near (%rsp)
2275(3): nop (%rax)
2278(6): mov %eax,0x206e6e(%rip)
227e(2): REP ret near (%rsp)
2280(6): cmp %eax,0x206e66(%rip)
2286(2): jnz 0xfffffff8(%rip)
2288(3): cmp $0x1,%eax
228b(2): sbb %eax,%eax
228d(3): and $0x3,%eax
2290(6): mov %eax,0x206e56(%rip)
2296(1): ret near (%rsp)

"put_word.isra.1" :
22a0(2): mov (%rsi),%eax
22a2(2): test %eax,%eax
22a4(2): jz 0x6c(%rip)
22a6(3): sub $0x1,%eax
22a9(2): push %r12
22ab(1): push %rbp
22ac(5): lea 0x1(%rdi,%rax,1),%rbp
22b1(1): push %rbx
22b2(3): mov %rsi,%r12
22b5(3): mov %rdi,%rbx
22b8(8): nop 0x0(%rax,%rax,1)
22c0(7): mov 0x206dc1(%rip),%rdi
22c7(4): add $0x1,%rbx
22cb(4): movzx 0xffffffff(%rbx),%esi
22cf(4): mov 0x28(%rdi),%rax
22d3(4): cmp 0x30(%rdi),%rax
22d7(2): jnb 0x29(%rip)
22d9(4): lea 0x1(%rax),%rdx
22dd(4): mov %rdx,0x28(%rdi)
22e1(3): mov %sil,(%rax)
22e4(3): cmp %rbp,%rbx
22e7(2): jnz 0xffffffd9(%rip)
22e9(4): mov (%r12),%eax
22ed(6): add %eax,0x211e15(%rip)
22f3(1): pop %rbx
22f4(1): pop %rbp
22f5(2): pop %r12
22f7(1): ret near (%rsp)
22f8(8): nop 0x0(%rax,%rax,1)
2300(5): call 0xfffff2d0(%rip)
2305(2): jmp 0xffffffdf(%rip)
2307(9): nop 0x0(%rax,%rax,1)
2310(6): add %eax,0x211df2(%rip)
2316(1): ret near (%rsp)

"put_line" :
2320(2): push %r13
2322(2): push %r12
2324(3): mov %rdi,%r12
2327(1): push %rbp
2328(1): push %rbx
2329(2): mov %esi,%ebx
232b(4): sub $0x8,%rsp
232f(6): mov 0x206dbf(%rip),%edi
2335(a): mov $0x0,0x211dc9(%rip)
233f(5): call 0xfffffdf1(%rip)
2344(7): mov 0x206d3d(%rip),%rsi
234b(7): mov 0x211dd6(%rip),%rdi
2352(5): call 0xfffff2fe(%rip)
2357(6): mov 0x211db7(%rip),%eax
235d(6): add 0x211da5(%rip),%eax
2363(2): sub %eax,%ebx
2365(6): mov %eax,0x211d9d(%rip)
236b(2): mov %ebx,%edi
236d(5): call 0xfffffdc3(%rip)
2372(5): mov 0x20(%r12),%rax
2377(4): sub $0x28,%rax
237b(3): cmp %rax,%r12
237e(2): jz 0x68(%rip)
2380(5): lea 0x28(%r12),%rdx
2385(5): lea 0x8(%r12),%rbx
238a(3): sub %rdx,%rax
238d(3): mov %rax,%rbp
2390(a): mov $0x922337203685477581,%rax
239a(4): shr $0x3,%rbp
239e(4): imul %rax,%rbp
23a2(a): mov $0x2305843009213693951,%rax
23ac(3): and %rax,%rbp
23af(5): lea 0x0(%rbp,%rbp,4),%rax
23b4(5): lea 0x30(%r12,%rax,8),%r13
23b9(7): nop 0x0(%rax)
23c0(4): mov 0xfffffff8(%rbx),%rdi
23c4(3): mov %rbx,%rsi
23c7(4): add $0x28,%rbx
23cb(5): call 0xfffffed5(%rip)
23d0(3): mov 0xffffffdc(%rbx),%edi
23d3(5): call 0xfffffd5d(%rip)
23d8(3): cmp %r13,%rbx
23db(2): jnz 0xffffffe5(%rip)
23dd(5): lea 0x5(%rbp,%rbp,4),%rax
23e2(4): lea 0x0(%r12,%rax,8),%rax
23e6(3): mov (%rax),%rdi
23e9(4): lea 0x8(%rax),%rsi
23ed(5): call 0xfffffeb3(%rip)
23f2(6): mov 0x211d10(%rip),%eax
23f8(7): mov 0x206c89(%rip),%rdi
23ff(6): mov %eax,0x206cdb(%rip)
2405(4): mov 0x28(%rdi),%rax
2409(4): cmp 0x30(%rdi),%rax
240d(2): jnb 0x1b(%rip)
240f(4): lea 0x1(%rax),%rdx
2413(4): mov %rdx,0x28(%rdi)
2417(3): mov $0xa,(%rax)
241a(4): add $0x8,%rsp
241e(1): pop %rbx
241f(1): pop %rbp
2420(2): pop %r12
2422(2): pop %r13
2424(1): ret near (%rsp)
2425(3): nop (%rax)
2428(4): add $0x8,%rsp
242c(5): mov $0xa,%esi
2431(1): pop %rbx
2432(1): pop %rbp
2433(2): pop %r12
2435(2): pop %r13
2437(5): jmp 0xfffff199(%rip)

"put_paragraph" :
2440(1): push %rbp
2441(1): push %rbx
2442(3): mov %rdi,%rbp
2445(7): lea 0x206cd4(%rip),%rdi
244c(4): sub $0x8,%rsp
2450(6): mov 0x206c9a(%rip),%esi
2456(5): call 0xfffffeca(%rip)
245b(7): mov 0x206cde(%rip),%rbx
2462(3): cmp %rbp,%rbx
2465(2): jz 0x22(%rip)
2467(9): nop 0x0(%rax,%rax,1)
2470(6): mov 0x206c76(%rip),%esi
2476(3): mov %rbx,%rdi
2479(5): call 0xfffffea7(%rip)
247e(4): mov 0x20(%rbx),%rbx
2482(3): cmp %rbx,%rbp
2485(2): jnz 0xffffffeb(%rip)
2487(4): add $0x8,%rsp
248b(1): pop %rbx
248c(1): pop %rbp
248d(1): ret near (%rsp)

"flush_paragraph" :
2490(2): push %r13
2492(2): push %r12
2494(1): push %rbp
2495(1): push %rbx
2496(7): lea 0x206c83(%rip),%rbx
249d(7): lea 0x2108dc(%rip),%rbp
24a4(4): sub $0x8,%rsp
24a8(7): mov 0x206c51(%rip),%r13
24af(3): cmp %rbx,%r13
24b2(6): jz 0x11e(%rip)
24b8(5): call 0xfffff918(%rip)
24bd(7): mov 0x206c7c(%rip),%rcx
24c4(3): cmp %rcx,%r13
24c7(6): jz 0x139(%rip)
24cd(4): mov 0x18(%rcx),%rdx
24d1(3): mov %r13,%r12
24d4(a): mov $0x9223372036854775807,%rax
24de(a): mov $0x9223372036854775798,%r8
24e8(8): nop 0x0(%rax,%rax,1)
24f0(4): mov 0x20(%rcx),%rdi
24f4(4): mov 0x18(%rdi),%rsi
24f8(3): sub %rsi,%rdx
24fb(3): cmp %rax,%rdx
24fe(2): jnl 0x8(%rip)
2500(3): mov %rdx,%rax
2503(3): mov %rcx,%r12
2506(4): lea 0x9(%rax),%rdx
250a(3): cmp %r8,%rax
250d(3): mov %rdi,%rcx
2510(4): cmovng %rdx,%rax
2514(3): cmp %rdi,%r13
2517(3): mov %rsi,%rdx
251a(2): jnz 0xffffffd6(%rip)
251c(3): mov %r12,%rdi
251f(5): call 0xffffff21(%rip)
2524(7): mov 0x210835(%rip),%r13
252b(4): mov (%r12),%rsi
252f(7): lea 0x21084a(%rip),%rdi
2536(5): mov $0x1388,%ecx
253b(3): mov %r13,%rdx
253e(3): sub %rsi,%rdx
2541(5): call 0xfffff12f(%rip)
2546(4): mov (%r12),%rdx
254a(3): mov %rdx,%rcx
254d(3): sub %rbp,%rcx
2550(7): mov 0x206ba9(%rip),%rbp
2557(3): movsxd %ecx,%rcx
255a(3): neg %rcx
255d(3): add %rcx,%r13
2560(3): cmp %rbp,%r12
2563(7): mov %r13,0x2107f6(%rip)
256a(2): jnbe 0x21(%rip)
256c(3): mov %r12,%rax
256f(2): jmp 0xc(%rip)
2571(7): nop 0x0(%rax)
2578(3): mov (%rax),%rdx
257b(3): add %rcx,%rdx
257e(4): add $0x28,%rax
2582(4): mov %rdx,0xffffffd8(%rax)
2586(3): cmp %rbp,%rax
2589(2): jbe 0xffffffef(%rip)
258b(3): mov %rbp,%rax
258e(3): mov %r12,%rsi
2591(7): lea 0x206b88(%rip),%rdi
2598(3): sub %r12,%rax
259b(3): sub %rbx,%r12
259e(5): mov $0x9c40,%ecx
25a3(4): sar $0x3,%rax
25a7(3): sub %r12,%rbp
25aa(8): lea 0x28(,%rax,8),%rdx
25b2(5): call 0xfffff0be(%rip)
25b7(7): mov %rbp,0x206b42(%rip)
25be(4): add $0x8,%rsp
25c2(1): pop %rbx
25c3(1): pop %rbp
25c4(2): pop %r12
25c6(2): pop %r13
25c8(1): ret near (%rsp)
25c9(7): nop 0x0(%rax)
25d0(7): mov 0x210789(%rip),%rdx
25d7(7): mov 0x206aaa(%rip),%rcx
25de(3): mov %rbp,%rdi
25e1(5): mov $0x1,%esi
25e6(3): sub %rbp,%rdx
25e9(5): call 0xfffff0f7(%rip)
25ee(7): mov %rbp,0x21076b(%rip)
25f5(4): add $0x8,%rsp
25f9(1): pop %rbx
25fa(1): pop %rbp
25fb(2): pop %r12
25fd(2): pop %r13
25ff(1): ret near (%rsp)
2600(3): mov %r13,%r12
2603(5): jmp 0xffffff19(%rip)

"get_line" :
2610(2): push %r15
2612(2): push %r14
2614(2): push %r13
2616(2): push %r12
2618(3): mov %esi,%r13d
261b(1): push %rbp
261c(1): push %rbx
261d(3): mov %rdi,%rbx
2620(4): sub $0x28,%rsp
2624(7): mov 0x206ad5(%rip),%rbp
262b(5): call 0xfffff185(%rip)
2630(5): mov %rax,0x8(%rsp)
2635(3): nop (%rax)
2638(7): mov 0x210721(%rip),%rax
263f(4): mov %rax,0x0(%rbp)
2643(2): jmp 0x3f(%rip)
2645(3): nop (%rax)
2648(4): lea 0x1(%rax),%rcx
264c(3): mov %r13b,(%rax)
264f(4): mov 0x8(%rbx),%rax
2653(4): cmp 0x10(%rbx),%rax
2657(7): mov %rcx,0x210702(%rip)
265e(2): jnb 0x52(%rip)
2660(4): lea 0x1(%rax),%rdx
2664(4): mov %rdx,0x8(%rbx)
2668(4): movzx (%rax),%r13d
266c(3): mov %rcx,%rax
266f(5): mov 0x8(%rsp),%rdi
2674(3): movsxd %r13d,%rcx
2677(3): mov (%rdi),%r8
267a(6): test $0x20,0x1(%r8,%rcx,2)
2680(2): jnz 0x50(%rip)
2682(7): lea 0x211a7f(%rip),%rdx
2689(3): cmp %rdx,%rax
268c(2): jnz 0xffffffbc(%rip)
268e(5): mov $0x1,%edi
2693(5): call 0xfffffb7d(%rip)
2698(5): call 0xfffffdf8(%rip)
269d(7): mov 0x2106bc(%rip),%rax
26a4(2): jmp 0xffffffa4(%rip)
26a6(a): nop 0x0(%rax,%rax,1)
26b0(3): mov %rbx,%rdi
26b3(5): call 0xffffee0d(%rip)
26b8(3): mov %eax,%r13d
26bb(7): mov 0x21069e(%rip),%rax
26c2(4): cmp $0xff,%r13d
26c6(2): jnz 0xffffffa9(%rip)
26c8(5): mov 0x8(%rsp),%rsi
26cd(3): mov (%rsi),%r8
26d0(7): mov 0x206a29(%rip),%r15
26d7(6): mov 0x211a2f(%rip),%esi
26dd(7): lea 0x3a80(%rip),%rdi
26e4(5): mov %r8,0x18(%rsp)
26e9(3): mov (%r15),%r12
26ec(3): sub %r12,%rax
26ef(2): add %eax,%esi
26f1(4): mov %eax,0x8(%r15)
26f5(2): cwde 
26f7(4): mov %esi,0x14(%rsp)
26fb(6): mov %esi,0x211a0b(%rip)
2701(5): lea 0xffffffff(%r12,%rax,1),%r14
2706(5): movsx (%r12),%esi
270b(4): movzx (%r14),%ebp
270f(5): call 0xffffeeb1(%rip)
2714(5): mov 0x18(%rsp),%r8
2719(3): test %rax,%rax
271c(5): movzx 0x10(%r15),%eax
2721(4): setnz %dil
2725(5): mov $0x4,%esi
272a(4): and 0x0(%r8,%rbp,2),%sil
272e(3): and $0xfa,%eax
2731(2): or %edi,%eax
2733(2): or %esi,%eax
2735(3): cmp %r14,%r12
2738(4): mov %al,0x10(%r15)
273c(2): jb 0x1c(%rip)
273e(5): jmp 0x152(%rip)
2743(5): nop 0x0(%rax,%rax,1)
2748(4): lea 0xffffffff(%r14),%rax
274c(3): cmp %rax,%r12
274f(6): jz 0x111(%rip)
2755(3): mov %rax,%r14
2758(4): movsx (%r14),%ebp
275c(7): lea 0x3a07(%rip),%rdi
2763(2): mov %ebp,%esi
2765(5): call 0xffffee5b(%rip)
276a(3): test %rax,%rax
276d(2): jnz 0xffffffdb(%rip)
276f(7): lea 0x39f9(%rip),%rdi
2776(2): mov %ebp,%esi
2778(5): call 0xffffee48(%rip)
277d(3): test %rax,%rax
2780(3): mov %r13d,%esi
2783(3): mov %rbx,%rdi
2786(3): setnz %al
2789(3): lea 0x0(%rax,%rax,1),%ecx
278c(5): movzx 0x10(%r15),%eax
2791(3): and $0xfd,%eax
2794(2): or %ecx,%eax
2796(4): mov %al,0x10(%r15)
279a(5): call 0xfffff826(%rip)
279f(6): mov 0x211967(%rip),%ecx
27a5(4): sub 0x14(%rsp),%ecx
27a9(3): mov %eax,%r13d
27ac(7): mov 0x20694d(%rip),%rax
27b3(4): cmp $0xff,%r13d
27b7(3): mov %ecx,0xc(%rax)
27ba(2): jz 0x56(%rip)
27bc(2): xor %esi,%esi
27be(4): test $0x2,0x10(%rax)
27c2(2): jz 0x12(%rip)
27c4(3): cmp $0x1,%ecx
27c7(4): setnle %sil
27cb(4): cmp $0xa,%r13d
27cf(3): setz %cl
27d2(2): or %ecx,%esi
27d4(4): movzx 0x10(%rax),%ecx
27d8(3): shl/sal $0x3,%esi
27db(3): and $0xf7,%ecx
27de(2): or %esi,%ecx
27e0(4): cmp $0xa,%r13d
27e4(3): mov %cl,0x10(%rax)
27e7(2): jz 0x2d(%rip)
27e9(7): cmp $0x0,0x211940(%rip)
27f0(2): jnz 0x24(%rip)
27f2(7): lea 0x210517(%rip),%rdi
27f9(3): cmp %rdi,%rax
27fc(2): jz 0x74(%rip)
27fe(4): lea 0x28(%rax),%rbp
2802(7): mov %rbp,0x2068f7(%rip)
2809(5): jmp 0xfffffe2f(%rip)
280e(2): nop 
2810(4): or $0x8,0x10(%rax)
2814(2): xor %ecx,%ecx
2816(4): test $0x8,0x10(%rax)
281a(7): lea 0x2104ef(%rip),%rdi
2821(3): setnz %cl
2824(3): add $0x1,%ecx
2827(3): cmp %rdi,%rax
282a(3): mov %ecx,0xc(%rax)
282d(2): jz 0x43(%rip)
282f(4): lea 0x28(%rax),%rbp
2833(4): cmp $0xa,%r13d
2837(7): mov %rbp,0x2068c2(%rip)
283e(2): jz 0xc(%rip)
2840(4): cmp $0xff,%r13d
2844(6): jnz 0xfffffdf4(%rip)
284a(4): add $0x28,%rsp
284e(3): mov %rbx,%rdi
2851(1): pop %rbx
2852(1): pop %rbp
2853(2): pop %r12
2855(2): pop %r13
2857(2): pop %r14
2859(2): pop %r15
285b(5): jmp 0xfffff7e5(%rip)
2860(5): movsx 0xffffffff(%r14),%ebp
2865(5): jmp 0xffffff0a(%rip)
286a(6): nop 0x0(%rax,%rax,1)
2870(5): mov $0x1,%edi
2875(5): call 0xfffff99b(%rip)
287a(5): call 0xfffffc16(%rip)
287f(7): mov 0x20687a(%rip),%rax
2886(2): jmp 0xffffffa9(%rip)
2888(8): nop 0x0(%rax,%rax,1)
2890(4): movsx (%r14),%ebp
2894(5): jmp 0xfffffedb(%rip)

"fmt" :
28a0(2): push %r15
28a2(2): push %r14
28a4(5): mov $0x2,%esi
28a9(2): push %r13
28ab(2): push %r12
28ad(3): mov %rdi,%r13
28b0(1): push %rbp
28b1(1): push %rbx
28b2(7): lea 0x2104c7(%rip),%r12
28b9(7): lea 0x206860(%rip),%rbp
28c0(4): sub $0x8,%rsp
28c4(5): call 0x9cc(%rip)
28c9(3): mov %r13,%rdi
28cc(7): mov $0x0,0x206825(%rip)
28d3(a): mov $0x0,0x20680f(%rip)
28dd(5): call 0xfffff763(%rip)
28e2(2): mov %eax,%ebx
28e4(6): mov %eax,0x2067fe(%rip)
28ea(6): nop 0x0(%rax,%rax,1)
28f0(a): mov $0x0,0x2067e6(%rip)
28fa(6): nop 0x0(%rax,%rax,1)
2900(3): cmp $0xa,%ebx
2903(6): mov 0x2067db(%rip),%edi
2909(6): mov 0x2117fd(%rip),%eax
290f(2): jz 0x1f(%rip)
2911(3): cmp $0xff,%ebx
2914(2): jz 0x1a(%rip)
2916(6): cmp %edi,0x2117fc(%rip)
291c(2): jnle 0x12(%rip)
291e(6): mov 0x2117f8(%rip),%edx
2924(2): add %edi,%edx
2926(2): cmp %eax,%edx
2928(6): jle 0x20f(%rip)
292e(3): cmp $0xff,%ebx
2931(a): mov $0x0,0x2117cd(%rip)
293b(4): setnz %r14b
293f(3): cmp $0xa,%ebx
2942(3): setnz %dl
2945(3): and %edx,%r14d
2948(2): cmp %eax,%edi
294a(6): jl 0xd6(%rip)
2950(3): test %r14b,%r14b
2953(6): jz 0x95(%rip)
2959(5): call 0xfffff7d7(%rip)
295e(6): mov 0x2117a4(%rip),%eax
2964(6): mov 0x2117a2(%rip),%ecx
296a(7): mov 0x2117b7(%rip),%r15
2971(2): cmp %ecx,%eax
2973(6): jz 0x267(%rip)
2979(4): movzx (%r15),%esi
297d(3): test %sil,%sil
2980(2): jnz 0x3f(%rip)
2982(5): jmp 0x166(%rip)
2987(9): nop 0x0(%rax,%rax,1)
2990(4): lea 0x1(%rax),%rdx
2994(4): mov %rdx,0x28(%rdi)
2998(3): mov %sil,(%rax)
299b(6): mov 0x211767(%rip),%eax
29a1(3): add $0x1,%eax
29a4(2): cmp %ecx,%eax
29a6(6): mov %eax,0x21175c(%rip)
29ac(6): jz 0x94(%rip)
29b2(4): movzx (%r15),%esi
29b6(3): test %sil,%sil
29b9(6): jz 0x87(%rip)
29bf(7): mov 0x2066c2(%rip),%rdi
29c6(4): add $0x1,%r15
29ca(4): mov 0x28(%rdi),%rax
29ce(4): cmp 0x30(%rdi),%rax
29d2(2): jb 0xffffffbe(%rip)
29d4(5): call 0xffffebfc(%rip)
29d9(6): mov 0x21172d(%rip),%ecx
29df(2): jmp 0xffffffbc(%rip)
29e1(7): nop 0x0(%rax)
29e8(3): cmp $0xff,%ebx
29eb(6): jz 0xe1(%rip)
29f1(7): mov 0x206690(%rip),%rdi
29f8(4): mov 0x28(%rdi),%rax
29fc(4): cmp 0x30(%rdi),%rax
2a00(6): jnb 0x128(%rip)
2a06(4): lea 0x1(%rax),%rdx
2a0a(4): mov %rdx,0x28(%rdi)
2a0e(3): mov $0xa,(%rax)
2a11(3): mov %r13,%rdi
2a14(5): call 0xfffff62c(%rip)
2a19(2): mov %eax,%ebx
2a1b(5): jmp 0xfffffee5(%rip)
2a20(5): call 0xfffff710(%rip)
2a25(6): mov 0x2116dd(%rip),%eax
2a2b(6): mov 0x2116db(%rip),%ecx
2a31(7): mov 0x2116f0(%rip),%r15
2a38(2): cmp %eax,%ecx
2a3a(6): jnz 0xffffff78(%rip)
2a40(3): test %r14b,%r14b
2a43(6): jnz 0xa5(%rip)
2a49(3): cmp $0xff,%ebx
2a4c(2): jnz 0x23(%rip)
2a4e(2): jmp 0x6a(%rip)
2a50(4): lea 0x1(%rax),%rdx
2a54(4): mov %rdx,0x28(%rdi)
2a58(2): mov %bl,(%rax)
2a5a(4): mov 0x8(%r13),%rax
2a5e(4): cmp 0x10(%r13),%rax
2a62(2): jnb 0x46(%rip)
2a64(4): lea 0x1(%rax),%rdx
2a68(4): mov %rdx,0x8(%r13)
2a6c(3): movzx (%rax),%ebx
2a6f(3): cmp $0xa,%ebx
2a72(6): jz 0xffffff76(%rip)
2a78(3): cmp $0xff,%ebx
2a7b(6): jz 0xffffff6d(%rip)
2a81(7): mov 0x206600(%rip),%rdi
2a88(4): mov 0x28(%rdi),%rax
2a8c(4): cmp 0x30(%rdi),%rax
2a90(2): jb 0xffffffc0(%rip)
2a92(3): movzx %bl,%esi
2a95(5): call 0xffffeb3b(%rip)
2a9a(4): mov 0x8(%r13),%rax
2a9e(4): cmp 0x10(%r13),%rax
2aa2(2): jb 0xffffffc2(%rip)
2aa4(4): nop 0x0(%rax)
2aa8(3): mov %r13,%rdi
2aab(5): call 0xffffea15(%rip)
2ab0(2): mov %eax,%ebx
2ab2(2): jmp 0xffffffbd(%rip)
2ab4(4): nop 0x0(%rax)
2ab8(6): mov 0x211656(%rip),%eax
2abe(6): add 0x206620(%rip),%eax
2ac4(6): cmp 0x211642(%rip),%eax
2aca(2): jle 0x36(%rip)
2acc(a): mov $0xffffffff,0x206612(%rip)
2ad6(4): add $0x8,%rsp
2ada(1): pop %rbx
2adb(1): pop %rbp
2adc(2): pop %r12
2ade(2): pop %r13
2ae0(2): pop %r14
2ae2(2): pop %r15
2ae4(1): ret near (%rsp)
2ae5(3): nop (%rax)
2ae8(2): sub %eax,%ecx
2aea(2): mov %ecx,%edi
2aec(5): call 0xfffff644(%rip)
2af1(5): jmp 0xffffff58(%rip)
2af6(a): nop 0x0(%rax,%rax,1)
2b00(7): mov 0x206581(%rip),%rdi
2b07(4): mov 0x28(%rdi),%rax
2b0b(4): cmp 0x30(%rdi),%rax
2b0f(6): jnb 0xd2(%rip)
2b15(4): lea 0x1(%rax),%rdx
2b19(4): mov %rdx,0x28(%rdi)
2b1d(3): mov $0xa,(%rax)
2b20(2): jmp 0xffffffac(%rip)
2b22(6): nop 0x0(%rax,%rax,1)
2b28(5): mov $0xa,%esi
2b2d(5): call 0xffffeaa3(%rip)
2b32(5): jmp 0xfffffedf(%rip)
2b37(6): mov %edi,0x2065b7(%rip)
2b3d(2): mov %ebx,%esi
2b3f(3): mov %r13,%rdi
2b42(6): mov %eax,0x2065a8(%rip)
2b48(7): mov %r12,0x210211(%rip)
2b4f(7): mov %rbp,0x2065aa(%rip)
2b56(5): call 0xfffffaba(%rip)
2b5b(6): mov 0x206583(%rip),%ecx
2b61(7): mov 0x20658c(%rip),%r8d
2b68(2): xor %edi,%edi
2b6a(2): mov %eax,%esi
2b6c(3): cmp %r8d,%ecx
2b6f(2): jz 0x81(%rip)
2b71(5): call 0xfffff69f(%rip)
2b76(7): cmp $0x0,0x2115b4(%rip)
2b7d(2): jnz 0x2b(%rip)
2b7f(7): cmp $0x0,0x2115ad(%rip)
2b86(6): jnz 0x94(%rip)
2b8c(7): cmp $0x0,0x21159f(%rip)
2b93(6): jnz 0x105(%rip)
2b99(3): cmp %r8d,%ecx
2b9c(6): jz 0x188(%rip)
2ba2(6): nop 0x0(%rax,%rax,1)
2ba8(7): mov 0x206551(%rip),%rbx
2baf(3): cmp %rbp,%rbx
2bb2(6): jbe 0x1fe(%rip)
2bb8(4): or $0xa,0xffffffe8(%rbx)
2bbc(6): mov %esi,0x206526(%rip)
2bc2(5): call 0xfffff20e(%rip)
2bc7(3): mov %rbx,%rdi
2bca(5): call 0xfffff876(%rip)
2bcf(6): mov 0x206513(%rip),%ebx
2bd5(5): jmp 0xfffffd1b(%rip)
2bda(2): xor %edi,%edi
2bdc(5): jmp 0xffffff10(%rip)
2be1(5): mov $0xa,%esi
2be6(5): call 0xffffe9ea(%rip)
2beb(5): jmp 0xfffffee1(%rip)
2bf0(6): mov 0x211526(%rip),%eax
2bf6(2): add %ecx,%eax
2bf8(6): cmp 0x21150e(%rip),%eax
2bfe(6): jnle 0xffffff73(%rip)
2c04(3): cmp $0xa,%esi
2c07(3): setnz %al
2c0a(2): xor %edi,%edi
2c0c(3): cmp $0xff,%esi
2c0f(4): setnz %dil
2c13(2): and %eax,%edi
2c15(5): jmp 0xffffff5c(%rip)
2c1a(3): cmp %r8d,%ecx
2c1d(2): jnz 0xffffff8b(%rip)
2c1f(6): add 0x2114f7(%rip),%ecx
2c25(6): cmp 0x2114e1(%rip),%ecx
2c2b(6): jnle 0xffffff7d(%rip)
2c31(3): cmp $0xa,%esi
2c34(6): jz 0xffffff74(%rip)
2c3a(3): cmp $0xff,%esi
2c3d(2): jnz 0x3d(%rip)
2c3f(5): jmp 0xffffff69(%rip)
2c44(4): nop 0x0(%rax)
2c48(6): add 0x2114ce(%rip),%eax
2c4e(6): mov 0x2114b8(%rip),%edx
2c54(2): cmp %edx,%eax
2c56(6): jnle 0xffffff52(%rip)
2c5c(3): cmp $0xa,%esi
2c5f(6): jz 0xffffff49(%rip)
2c65(3): cmp $0xff,%esi
2c68(6): jz 0xffffff40(%rip)
2c6e(6): cmp 0x206478(%rip),%edx
2c74(6): jnz 0xffffff34(%rip)
2c7a(3): mov %r13,%rdi
2c7d(5): call 0xfffff993(%rip)
2c82(2): mov %eax,%esi
2c84(6): mov 0x20645a(%rip),%eax
2c8a(6): cmp 0x206464(%rip),%eax
2c90(6): jnz 0xffffff18(%rip)
2c96(2): jmp 0xffffffb2(%rip)
2c98(3): cmp %r8d,%ecx
2c9b(6): jnz 0xffffff0d(%rip)
2ca1(6): add 0x211475(%rip),%ecx
2ca7(6): mov 0x21145f(%rip),%eax
2cad(2): cmp %eax,%ecx
2caf(6): jnle 0xfffffef9(%rip)
2cb5(3): cmp $0xa,%esi
2cb8(6): jz 0xfffffef0(%rip)
2cbe(3): cmp $0xff,%esi
2cc1(6): jz 0xfffffee7(%rip)
2cc7(6): cmp 0x206423(%rip),%eax
2ccd(2): jnz 0x39(%rip)
2ccf(5): jmp 0xfffffed9(%rip)
2cd4(6): add 0x211442(%rip),%eax
2cda(6): mov 0x21142c(%rip),%edx
2ce0(2): cmp %edx,%eax
2ce2(6): jnle 0xfffffec6(%rip)
2ce8(3): cmp $0xa,%esi
2ceb(6): jz 0xfffffebd(%rip)
2cf1(3): cmp $0xff,%esi
2cf4(6): jz 0xfffffeb4(%rip)
2cfa(6): cmp 0x2063ec(%rip),%edx
2d00(6): jnz 0xfffffea8(%rip)
2d06(3): mov %r13,%rdi
2d09(5): call 0xfffff907(%rip)
2d0e(2): mov %eax,%esi
2d10(6): mov 0x2063ce(%rip),%eax
2d16(6): cmp 0x2063d8(%rip),%eax
2d1c(6): jnz 0xfffffe8c(%rip)
2d22(2): jmp 0xffffffb2(%rip)
2d24(6): add 0x2113f2(%rip),%ecx
2d2a(6): mov 0x2113dc(%rip),%eax
2d30(2): cmp %eax,%ecx
2d32(6): jnle 0xfffffe76(%rip)
2d38(3): cmp $0xff,%esi
2d3b(6): jz 0xfffffe6d(%rip)
2d41(3): cmp $0xa,%esi
2d44(6): jz 0xfffffe64(%rip)
2d4a(6): cmp 0x20639c(%rip),%eax
2d50(2): jz 0x42(%rip)
2d52(5): jmp 0xfffffe56(%rip)
2d57(9): nop 0x0(%rax,%rax,1)
2d60(6): add 0x2113b6(%rip),%eax
2d66(6): mov 0x2113a0(%rip),%edx
2d6c(2): cmp %edx,%eax
2d6e(6): jnle 0xfffffe3a(%rip)
2d74(3): cmp $0xa,%esi
2d77(6): jz 0xfffffe31(%rip)
2d7d(3): cmp $0xff,%esi
2d80(6): jz 0xfffffe28(%rip)
2d86(6): cmp 0x206360(%rip),%edx
2d8c(6): jnz 0xfffffe1c(%rip)
2d92(3): mov %r13,%rdi
2d95(5): call 0xfffff87b(%rip)
2d9a(2): mov %eax,%esi
2d9c(6): mov 0x206342(%rip),%eax
2da2(6): cmp 0x20634c(%rip),%eax
2da8(6): jnz 0xfffffe00(%rip)
2dae(2): jmp 0xffffffb2(%rip)
2db0(7): lea 0x3a59(%rip),%rcx
2db7(7): lea 0x33b5(%rip),%rsi
2dbe(7): lea 0x33ca(%rip),%rdi
2dc5(5): mov $0x25e,%edx
2dca(5): call 0xffffe836(%rip)

"usage" :
2dd0(2): push %r13
2dd2(2): push %r12
2dd4(5): mov $0x5,%edx
2dd9(1): push %rbp
2dda(1): push %rbx
2ddb(2): mov %edi,%ebp
2ddd(7): sub $0x88,%rsp
2de4(7): mov 0x21135d(%rip),%rbx
2deb(9): mov $0x28,%rax
2df4(5): mov %rax,0x78(%rsp)
2df9(2): xor %eax,%eax
2dfb(2): test %edi,%edi
2dfd(2): jz 0x30(%rip)
2dff(7): lea 0x34fa(%rip),%rsi
2e06(2): xor %edi,%edi
2e08(5): call 0xffffe758(%rip)
2e0d(7): mov 0x2062ac(%rip),%rdi
2e14(3): mov %rax,%rdx
2e17(3): mov %rbx,%rcx
2e1a(5): mov $0x1,%esi
2e1f(2): xor %eax,%eax
2e21(5): call 0xffffe95f(%rip)
2e26(2): mov %ebp,%edi
2e28(5): call 0xffffe938(%rip)
2e2d(7): lea 0x34f4(%rip),%rsi
2e34(2): xor %edi,%edi
2e36(5): call 0xffffe72a(%rip)
2e3b(3): mov %rbx,%rdx
2e3e(3): mov %rax,%rsi
2e41(5): mov $0x1,%edi
2e46(2): xor %eax,%eax
2e48(5): call 0xffffe8c8(%rip)
2e4d(7): mov 0x206234(%rip),%rbx
2e54(7): lea 0x34fd(%rip),%rsi
2e5b(5): mov $0x5,%edx
2e60(2): xor %edi,%edi
2e62(5): call 0xffffe6fe(%rip)
2e67(3): mov %rbx,%rsi
2e6a(3): mov %rax,%rdi
2e6d(5): call 0xffffe7e3(%rip)
2e72(7): mov 0x20620f(%rip),%rbx
2e79(7): lea 0x3560(%rip),%rsi
2e80(5): mov $0x5,%edx
2e85(2): xor %edi,%edi
2e87(5): call 0xffffe6d9(%rip)
2e8c(3): mov %rbx,%rsi
2e8f(3): mov %rax,%rdi
2e92(5): call 0xffffe7be(%rip)
2e97(7): mov 0x2061ea(%rip),%rbx
2e9e(7): lea 0x3573(%rip),%rsi
2ea5(5): mov $0x5,%edx
2eaa(2): xor %edi,%edi
2eac(5): call 0xffffe6b4(%rip)
2eb1(3): mov %rbx,%rsi
2eb4(3): mov %rax,%rdi
2eb7(5): call 0xffffe799(%rip)
2ebc(7): mov 0x2061c5(%rip),%rbx
2ec3(7): lea 0x359e(%rip),%rsi
2eca(5): mov $0x5,%edx
2ecf(2): xor %edi,%edi
2ed1(5): call 0xffffe68f(%rip)
2ed6(3): mov %rbx,%rsi
2ed9(3): mov %rax,%rdi
2edc(5): call 0xffffe774(%rip)
2ee1(7): mov 0x2061a0(%rip),%rbx
2ee8(7): lea 0x3691(%rip),%rsi
2eef(5): mov $0x5,%edx
2ef4(2): xor %edi,%edi
2ef6(5): call 0xffffe66a(%rip)
2efb(3): mov %rbx,%rsi
2efe(3): mov %rax,%rdi
2f01(5): call 0xffffe74f(%rip)
2f06(7): mov 0x20617b(%rip),%rbx
2f0d(7): lea 0x378c(%rip),%rsi
2f14(5): mov $0x5,%edx
2f19(2): xor %edi,%edi
2f1b(5): call 0xffffe645(%rip)
2f20(3): mov %rbx,%rsi
2f23(3): mov %rax,%rdi
2f26(5): call 0xffffe72a(%rip)
2f2b(7): mov 0x206156(%rip),%rbx
2f32(7): lea 0x3797(%rip),%rsi
2f39(5): mov $0x5,%edx
2f3e(2): xor %edi,%edi
2f40(5): call 0xffffe620(%rip)
2f45(3): mov %rbx,%rsi
2f48(3): mov %rax,%rdi
2f4b(7): lea 0x324f(%rip),%rbx
2f52(5): call 0xffffe6fe(%rip)
2f57(7): lea 0x3247(%rip),%rax
2f5e(7): lea 0x3281(%rip),%rcx
2f65(9): mov $0x0,0x60(%rsp)
2f6e(9): mov $0x0,0x68(%rsp)
2f77(3): mov %rsp,%rdx
2f7a(4): mov %rax,(%rsp)
2f7e(7): lea 0x3222(%rip),%rax
2f85(5): mov %rcx,0x30(%rsp)
2f8a(7): lea 0x325f(%rip),%rcx
2f91(5): mov %rax,0x8(%rsp)
2f96(7): lea 0x3282(%rip),%rax
2f9d(5): mov %rcx,0x40(%rsp)
2fa2(7): lea 0x3251(%rip),%rcx
2fa9(5): mov %rax,0x10(%rsp)
2fae(7): lea 0x3202(%rip),%rax
2fb5(5): mov %rcx,0x50(%rsp)
2fba(5): mov %rax,0x18(%rsp)
2fbf(7): lea 0x3207(%rip),%rax
2fc6(5): mov %rax,0x20(%rsp)
2fcb(7): lea 0x3205(%rip),%rax
2fd2(5): mov %rax,0x28(%rsp)
2fd7(5): mov %rax,0x38(%rsp)
2fdc(5): mov %rax,0x48(%rsp)
2fe1(5): mov %rax,0x58(%rsp)
2fe6(a): nop 0x0(%rax,%rax,1)
2ff0(4): add $0x10,%rdx
2ff4(3): mov (%rdx),%rdi
2ff7(3): test %rdi,%rdi
2ffa(2): jz 0x15(%rip)
2ffc(5): mov $0x4,%ecx
3001(3): mov %rbx,%rsi
3004(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3006(3): setnbe %al
3009(2): sbb $0x0,%al
300b(2): test %al,%al
300d(2): jnz 0xffffffe3(%rip)
300f(4): mov 0x8(%rdx),%r12
3013(2): xor %edi,%edi
3015(5): mov $0x5,%edx
301a(7): lea 0x31e3(%rip),%rsi
3021(3): test %r12,%r12
3024(6): jz 0xc7(%rip)
302a(5): call 0xffffe536(%rip)
302f(7): lea 0x36d2(%rip),%rcx
3036(7): lea 0x31de(%rip),%rdx
303d(3): mov %rax,%rsi
3040(5): mov $0x1,%edi
3045(2): xor %eax,%eax
3047(5): call 0xffffe6c9(%rip)
304c(2): xor %esi,%esi
304e(5): mov $0x5,%edi
3053(5): call 0xffffe6ad(%rip)
3058(3): test %rax,%rax
305b(2): jz 0x1e(%rip)
305d(7): lea 0x31c5(%rip),%rsi
3064(5): mov $0x3,%edx
3069(3): mov %rax,%rdi
306c(5): call 0xffffe494(%rip)
3071(2): test %eax,%eax
3073(6): jnz 0x10d(%rip)
3079(7): lea 0x31ad(%rip),%rsi
3080(2): xor %edi,%edi
3082(5): mov $0x5,%edx
3087(5): call 0xffffe4d9(%rip)
308c(7): lea 0x310e(%rip),%rcx
3093(7): lea 0x366e(%rip),%rdx
309a(3): mov %rax,%rsi
309d(5): mov $0x1,%edi
30a2(2): xor %eax,%eax
30a4(5): call 0xffffe66c(%rip)
30a9(3): cmp %rbx,%r12
30ac(7): lea 0x310e(%rip),%rcx
30b3(7): lea 0x3ce7(%rip),%rbx
30ba(4): cmove %rcx,%rbx
30be(7): lea 0x36b3(%rip),%rsi
30c5(2): xor %edi,%edi
30c7(5): mov $0x5,%edx
30cc(5): call 0xffffe494(%rip)
30d1(3): mov %rbx,%rcx
30d4(3): mov %rax,%rsi
30d7(3): mov %r12,%rdx
30da(5): mov $0x1,%edi
30df(2): xor %eax,%eax
30e1(5): call 0xffffe62f(%rip)
30e6(5): jmp 0xfffffd40(%rip)
30eb(5): call 0xffffe475(%rip)
30f0(7): lea 0x3611(%rip),%rcx
30f7(7): lea 0x311d(%rip),%rdx
30fe(3): mov %rax,%rsi
3101(5): mov $0x1,%edi
3106(2): xor %eax,%eax
3108(5): call 0xffffe608(%rip)
310d(2): xor %esi,%esi
310f(5): mov $0x5,%edi
3114(5): call 0xffffe5ec(%rip)
3119(3): test %rax,%rax
311c(2): jz 0x1a(%rip)
311e(7): lea 0x3104(%rip),%rsi
3125(5): mov $0x3,%edx
312a(3): mov %rax,%rdi
312d(5): call 0xffffe3d3(%rip)
3132(2): test %eax,%eax
3134(2): jnz 0x45(%rip)
3136(7): lea 0x30f0(%rip),%rsi
313d(5): mov $0x5,%edx
3142(2): xor %edi,%edi
3144(7): lea 0x3056(%rip),%r12
314b(7): lea 0x306f(%rip),%rbx
3152(5): call 0xffffe40e(%rip)
3157(7): lea 0x3043(%rip),%rcx
315e(7): lea 0x35a3(%rip),%rdx
3165(3): mov %rax,%rsi
3168(5): mov $0x1,%edi
316d(2): xor %eax,%eax
316f(5): call 0xffffe5a1(%rip)
3174(5): jmp 0xffffff4a(%rip)
3179(7): lea 0x3021(%rip),%r12
3180(7): mov 0x205f01(%rip),%r13
3187(7): lea 0x35a2(%rip),%rsi
318e(2): xor %edi,%edi
3190(5): mov $0x5,%edx
3195(5): call 0xffffe3cb(%rip)
319a(3): mov %r13,%rsi
319d(3): mov %rax,%rdi
31a0(5): call 0xffffe4b0(%rip)
31a5(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
31b0(7): mov %rdi,0x210f89(%rip)
31b7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
31c0(7): mov %dil,0x210f71(%rip)
31c7(1): ret near (%rsp)

"close_stdout" :
31d0(1): push %rbp
31d1(1): push %rbx
31d2(4): sub $0x8,%rsp
31d6(7): mov 0x205eab(%rip),%rdi
31dd(5): call 0x2dc3(%rip)
31e2(2): test %eax,%eax
31e4(2): jz 0x18(%rip)
31e6(5): call 0xffffe30a(%rip)
31eb(7): cmp $0x0,0x210f46(%rip)
31f2(3): mov %rax,%rbx
31f5(2): jz 0x1e(%rip)
31f7(3): cmp $0x20,(%rax)
31fa(2): jnz 0x19(%rip)
31fc(7): mov 0x205ebd(%rip),%rdi
3203(5): call 0x2d9d(%rip)
3208(2): test %eax,%eax
320a(2): jnz 0x48(%rip)
320c(4): add $0x8,%rsp
3210(1): pop %rbx
3211(1): pop %rbp
3212(1): ret near (%rsp)
3213(7): lea 0x3609(%rip),%rsi
321a(2): xor %edi,%edi
321c(5): mov $0x5,%edx
3221(5): call 0xffffe33f(%rip)
3226(7): mov 0x210f13(%rip),%rdi
322d(3): mov %rax,%rbp
3230(3): test %rdi,%rdi
3233(2): jz 0x2a(%rip)
3235(5): call 0x1b9b(%rip)
323a(2): mov (%rbx),%esi
323c(7): lea 0x35ec(%rip),%rdx
3243(3): mov %rax,%rcx
3246(3): mov %rbp,%r8
3249(2): xor %edi,%edi
324b(2): xor %eax,%eax
324d(5): call 0xffffe4d3(%rip)
3252(6): mov 0x205dc0(%rip),%edi
3258(5): call 0xffffe2b8(%rip)
325d(2): mov (%rbx),%esi
325f(7): lea 0x35cd(%rip),%rdx
3266(3): mov %rax,%rcx
3269(2): xor %edi,%edi
326b(2): xor %eax,%eax
326d(5): call 0xffffe4b3(%rip)
3272(2): jmp 0xffffffe0(%rip)

"fadvise" :
3290(3): test %rdi,%rdi
3293(2): jz 0x1d(%rip)
3295(1): push %rbx
3296(2): mov %esi,%ebx
3298(5): call 0xffffe3f8(%rip)
329d(2): mov %ebx,%ecx
329f(2): xor %edx,%edx
32a1(2): xor %esi,%esi
32a3(1): pop %rbx
32a4(2): mov %eax,%edi
32a6(5): jmp 0xffffe38a(%rip)
32ab(5): nop 0x0(%rax,%rax,1)
32b0(2): REP ret near (%rsp)

"set_program_name" :
32c0(3): test %rdi,%rdi
32c3(1): push %rbx
32c4(2): jz 0x79(%rip)
32c6(5): mov $0x2f,%esi
32cb(3): mov %rdi,%rbx
32ce(5): call 0xffffe312(%rip)
32d3(3): test %rax,%rax
32d6(2): jz 0x57(%rip)
32d8(4): lea 0x1(%rax),%r8
32dc(3): mov %r8,%rdx
32df(3): sub %rbx,%rdx
32e2(4): cmp $0x6,%rdx
32e6(2): jle 0x47(%rip)
32e8(4): lea 0xfffffffa(%rax),%rsi
32ec(7): lea 0x357d(%rip),%rdi
32f3(5): mov $0x7,%ecx
32f8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
32fa(3): setnbe %dl
32fd(3): sbb $0x0,%dl
3300(2): test %dl,%dl
3302(2): jnz 0x2b(%rip)
3304(7): lea 0x356d(%rip),%rdi
330b(5): mov $0x3,%ecx
3310(3): mov %r8,%rsi
3313(3): mov %r8,%rbx
3316(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3318(3): setnbe %dl
331b(3): sbb $0x0,%dl
331e(2): test %dl,%dl
3320(2): jnz 0xd(%rip)
3322(4): lea 0x4(%rax),%rbx
3326(7): mov %rbx,0x205d53(%rip)
332d(7): mov %rbx,0x210e14(%rip)
3334(7): mov %rbx,0x205d6d(%rip)
333b(1): pop %rbx
333c(1): ret near (%rsp)
333d(7): mov 0x205d7c(%rip),%rcx
3344(7): lea 0x34ed(%rip),%rdi
334b(5): mov $0x37,%edx
3350(5): mov $0x1,%esi
3355(5): call 0xffffe41b(%rip)
335a(5): call 0xffffe186(%rip)

"gettext_quote.part.1" :
3360(1): push %rbp
3361(1): push %rbx
3362(3): mov %rdi,%rbp
3365(2): mov %esi,%ebx
3367(4): sub $0x8,%rsp
336b(5): call 0x2d15(%rip)
3370(3): movzx (%rax),%edx
3373(3): and $0xdf,%edx
3376(3): cmp $0x55,%dl
3379(2): jz 0x77(%rip)
337b(3): cmp $0x47,%dl
337e(2): jz 0x22(%rip)
3380(7): lea 0x2de6(%rip),%rax
3387(7): lea 0x34fd(%rip),%rdx
338e(3): cmp $0x9,%ebx
3391(4): cmovne %rdx,%rax
3395(4): add $0x8,%rsp
3399(1): pop %rbx
339a(1): pop %rbp
339b(1): ret near (%rsp)
339c(4): nop 0x0(%rax)
33a0(4): movzx 0x1(%rax),%edx
33a4(3): and $0xdf,%edx
33a7(3): cmp $0x42,%dl
33aa(2): jnz 0xffffffd6(%rip)
33ac(4): cmp $0x31,0x2(%rax)
33b0(2): jnz 0xffffffd0(%rip)
33b2(4): cmp $0x38,0x3(%rax)
33b6(2): jnz 0xffffffca(%rip)
33b8(4): cmp $0x30,0x4(%rax)
33bc(2): jnz 0xffffffc4(%rip)
33be(4): cmp $0x33,0x5(%rax)
33c2(2): jnz 0xffffffbe(%rip)
33c4(4): cmp $0x30,0x6(%rax)
33c8(2): jnz 0xffffffb8(%rip)
33ca(4): cmp $0x0,0x7(%rax)
33ce(2): jnz 0xffffffb2(%rip)
33d0(4): cmp $0x60,0x0(%rbp)
33d4(7): lea 0x34a9(%rip),%rax
33db(7): lea 0x34a6(%rip),%rdx
33e2(4): cmovne %rdx,%rax
33e6(4): add $0x8,%rsp
33ea(1): pop %rbx
33eb(1): pop %rbp
33ec(1): ret near (%rsp)
33ed(3): nop (%rax)
33f0(4): movzx 0x1(%rax),%edx
33f4(3): and $0xdf,%edx
33f7(3): cmp $0x54,%dl
33fa(2): jnz 0xffffff86(%rip)
33fc(4): movzx 0x2(%rax),%edx
3400(3): and $0xdf,%edx
3403(3): cmp $0x46,%dl
3406(6): jnz 0xffffff7a(%rip)
340c(4): cmp $0x2d,0x3(%rax)
3410(6): jnz 0xffffff70(%rip)
3416(4): cmp $0x38,0x4(%rax)
341a(6): jnz 0xffffff66(%rip)
3420(4): cmp $0x0,0x5(%rax)
3424(6): jnz 0xffffff5c(%rip)
342a(4): cmp $0x60,0x0(%rbp)
342e(7): lea 0x3447(%rip),%rax
3435(7): lea 0x3444(%rip),%rdx
343c(4): cmovne %rdx,%rax
3440(4): add $0x8,%rsp
3444(1): pop %rbx
3445(1): pop %rbp
3446(1): ret near (%rsp)

"quotearg_buffer_restyled" :
3450(2): push %r15
3452(2): push %r14
3454(3): mov %r8d,%r15d
3457(2): push %r13
3459(2): push %r12
345b(3): mov %rdi,%r14
345e(1): push %rbp
345f(1): push %rbx
3460(3): mov %r9d,%ebx
3463(3): mov %rsi,%r13
3466(3): mov %rcx,%rbp
3469(3): and $0x2,%ebx
346c(7): sub $0xb8,%rsp
3473(8): mov 0xf0(%rsp),%rax
347b(5): mov %rdx,0x10(%rsp)
3480(5): mov %r8d,0x8(%rsp)
3485(5): mov %r9d,0x78(%rsp)
348a(5): mov %rax,0x20(%rsp)
348f(8): mov 0xf8(%rsp),%rax
3497(5): mov %rax,0x68(%rsp)
349c(8): mov 0x100(%rsp),%rax
34a4(5): mov %rax,0x60(%rsp)
34a9(9): mov $0x28,%rax
34b2(8): mov %rax,0xa8(%rsp)
34ba(2): xor %eax,%eax
34bc(5): call 0xffffe0b4(%rip)
34c1(4): cmp $0xa,%r15d
34c5(5): mov %rax,0x58(%rsp)
34ca(6): jnbe 0x11b5(%rip)
34d0(7): lea 0x3409(%rip),%rcx
34d7(3): mov %r15d,%edx
34da(4): movsxd 0x0(%rcx,%rdx,4),%rax
34de(3): add %rcx,%rax
34e1(2): jmp %rax
34e3(5): mov $0x1,0xe(%rsp)
34e8(5): mov $0x0,0x7c(%rsp)
34ed(3): xor %r12d,%r12d
34f0(9): mov $0x0,0x50(%rsp)
34f9(5): mov $0x1,0xf(%rsp)
34fe(5): mov $0x0,0xd(%rsp)
3503(7): lea 0x3381(%rip),%rax
350a(9): mov $0x1,0x18(%rsp)
3513(3): xor %r15d,%r15d
3516(8): mov $0x2,0x8(%rsp)
351e(5): mov %rax,0x48(%rsp)
3523(3): xor %r11d,%r11d
3526(3): mov %rbp,%rax
3529(3): mov %r12d,%r8d
352c(3): mov %r11,%rbp
352f(3): mov %rax,%r11
3532(6): nop 0x0(%rax,%rax,1)
3538(3): cmp %rbp,%r11
353b(4): setnz %r12b
353f(4): cmp $0xffffffff,%r11
3543(2): jnz 0xf(%rip)
3545(5): mov 0x10(%rsp),%rax
354a(4): cmp $0x0,0x0(%rax,%rbp,1)
354e(4): setnz %r12b
3552(3): test %r12b,%r12b
3555(6): jz 0x65b(%rip)
355b(5): cmp $0x2,0x8(%rsp)
3560(5): mov 0x10(%rsp),%rdi
3565(4): lea 0x0(%rdi,%rbp,1),%r9
3569(3): setnz %al
356c(4): and 0xd(%rsp),%al
3570(3): mov %eax,%r10d
3573(6): jz 0xad(%rip)
3579(5): mov 0x18(%rsp),%rax
357e(3): test %rax,%rax
3581(6): jz 0x42f(%rip)
3587(4): cmp $0xffffffff,%r11
358b(5): lea 0x0(%rbp,%rax,1),%rbx
3590(2): jnz 0x30(%rip)
3592(4): cmp $0x1,%rax
3596(2): jbe 0x2a(%rip)
3598(5): mov %r8b,0x38(%rsp)
359d(5): mov %r10b,0x30(%rsp)
35a2(5): mov %r9,0x28(%rsp)
35a7(5): call 0xffffdfd9(%rip)
35ac(6): movzx 0x38(%rsp),%r8d
35b2(6): movzx 0x30(%rsp),%r10d
35b8(3): mov %rax,%r11
35bb(5): mov 0x28(%rsp),%r9
35c0(3): cmp %r11,%rbx
35c3(5): mov %r10b,0x28(%rsp)
35c8(6): jnbe 0x5b8(%rip)
35ce(5): mov 0x18(%rsp),%rdx
35d3(5): mov 0x48(%rsp),%rsi
35d8(3): mov %r9,%rdi
35db(5): mov %r11,0x40(%rsp)
35e0(5): mov %r8b,0x38(%rsp)
35e5(5): mov %r9,0x30(%rsp)
35ea(5): call 0xffffe056(%rip)
35ef(2): test %eax,%eax
35f1(5): mov 0x30(%rsp),%r9
35f6(6): movzx 0x38(%rsp),%r8d
35fc(5): mov 0x40(%rsp),%r11
3601(6): jnz 0x57f(%rip)
3607(5): cmp $0x0,0xf(%rsp)
360c(6): movzx 0x28(%rsp),%r10d
3612(6): jnz 0xf83(%rip)
3618(8): nop 0x0(%rax,%rax,1)
3620(4): movzx (%r9),%ebx
3624(3): cmp $0x7e,%bl
3627(6): jnbe 0x321(%rip)
362d(7): lea 0x32d8(%rip),%rcx
3634(3): movzx %bl,%edx
3637(4): movsxd 0x0(%rcx,%rdx,4),%rax
363b(3): add %rcx,%rax
363e(2): jmp %rax
3640(3): xor %r10d,%r10d
3643(4): cmp $0x1,%r11
3647(3): setnz %al
364a(4): cmp $0xffffffff,%r11
364e(2): jnz 0xe(%rip)
3650(5): mov 0x10(%rsp),%rax
3655(4): cmp $0x0,0x1(%rax)
3659(3): setnz %al
365c(5): cmp $0x2,0x8(%rsp)
3661(3): setz %dl
3664(2): test %al,%al
3666(6): jz 0x252(%rip)
366c(3): xor %r12d,%r12d
366f(2): xor %eax,%eax
3671(7): nop 0x0(%rax)
3678(5): cmp $0x1,0xd(%rsp)
367d(6): jnz 0x115(%rip)
3683(2): test %dl,%dl
3685(6): jnz 0x10d(%rip)
368b(5): mov 0x20(%rsp),%rsi
3690(3): test %rsi,%rsi
3693(2): jz 0x16(%rip)
3695(2): mov %ebx,%edx
3697(3): shr $0x5,%dl
369a(3): movzx %dl,%edx
369d(3): mov 0x0(%rsi,%rdx,4),%edx
36a0(3): bt %ebx,%edx
36a3(6): jb 0x150(%rip)
36a9(3): test %r10b,%r10b
36ac(6): jnz 0x147(%rip)
36b2(3): xor $0x1,%eax
36b5(4): add $0x1,%rbp
36b9(3): and %r8d,%eax
36bc(2): test %al,%al
36be(2): jz 0x22(%rip)
36c0(3): cmp %r15,%r13
36c3(2): jbe 0x7(%rip)
36c5(5): mov $0x27,0x0(%r14,%r15,1)
36ca(4): lea 0x1(%r15),%rax
36ce(3): cmp %rax,%r13
36d1(2): jbe 0x8(%rip)
36d3(6): mov $0x27,0x1(%r14,%r15,1)
36d9(4): add $0x2,%r15
36dd(3): xor %r8d,%r8d
36e0(3): cmp %r13,%r15
36e3(2): jnb 0x6(%rip)
36e5(4): mov %bl,0x0(%r14,%r15,1)
36e9(5): movzx 0xe(%rsp),%edi
36ee(4): add $0x1,%r15
36f2(5): mov $0x0,%eax
36f7(3): test %r12b,%r12b
36fa(3): cmove %eax,%edi
36fd(5): mov %dil,0xe(%rsp)
3702(5): jmp 0xfffffe36(%rip)
3707(9): nop 0x0(%rax,%rax,1)
3710(3): xor %r10d,%r10d
3713(4): mov 0x8(%rsp),%eax
3717(3): cmp $0x2,%eax
371a(6): jz 0x5be(%rip)
3720(3): cmp $0x5,%eax
3723(6): jz 0x575(%rip)
3729(3): cmp $0x2,%eax
372c(5): mov $0x3f,%ebx
3731(3): setz %dl
3734(3): xor %r12d,%r12d
3737(2): xor %eax,%eax
3739(5): jmp 0xffffff3f(%rip)
373e(2): nop 
3740(3): xor %r10d,%r10d
3743(5): cmp $0x2,0x8(%rsp)
3748(6): jz 0x508(%rip)
374e(5): mov %r12b,0x7c(%rsp)
3753(2): xor %edx,%edx
3755(2): xor %eax,%eax
3757(5): mov $0x27,%ebx
375c(5): jmp 0xffffff1c(%rip)
3761(7): nop 0x0(%rax)
3768(5): mov $0x9,%edx
376d(5): mov $0x74,%ebx
3772(5): cmp $0x2,0x8(%rsp)
3777(3): setz %al
377a(4): and 0xf(%rsp),%al
377e(6): jnz 0x150(%rip)
3784(5): cmp $0x0,0xd(%rsp)
3789(2): jnz 0x67(%rip)
378b(2): mov %edx,%ebx
378d(3): xor %r12d,%r12d
3790(2): xor %eax,%eax
3792(5): cmp $0x0,0xf(%rsp)
3797(6): jnz 0xfffffef4(%rip)
379d(5): jmp 0xffffff0c(%rip)
37a2(6): nop 0x0(%rax,%rax,1)
37a8(5): mov $0x8,%edx
37ad(5): mov $0x62,%ebx
37b2(2): jmp 0xffffffd2(%rip)
37b4(4): nop 0x0(%rax)
37b8(5): cmp $0x2,0x8(%rsp)
37bd(6): jz 0x3d3(%rip)
37c3(5): cmp $0x0,0xd(%rsp)
37c8(6): jz 0x218(%rip)
37ce(5): cmp $0x0,0xf(%rsp)
37d3(6): jz 0x20d(%rip)
37d9(6): cmp $0x0,0x18(%rsp)
37df(6): jnz 0x3bc(%rip)
37e5(5): mov $0x5c,%ebx
37ea(6): nop 0x0(%rax,%rax,1)
37f0(3): xor %r12d,%r12d
37f3(5): cmp $0x2,0x8(%rsp)
37f8(3): setz %dl
37fb(5): cmp $0x0,0xf(%rsp)
3800(2): mov %edx,%eax
3802(6): jnz 0x856(%rip)
3808(3): mov %r8d,%eax
380b(3): xor $0x1,%eax
380e(2): and %dl,%al
3810(2): jz 0x31(%rip)
3812(3): cmp %r15,%r13
3815(2): jbe 0x7(%rip)
3817(5): mov $0x27,0x0(%r14,%r15,1)
381c(4): lea 0x1(%r15),%rdx
3820(3): cmp %rdx,%r13
3823(2): jbe 0x8(%rip)
3825(6): mov $0x24,0x1(%r14,%r15,1)
382b(4): lea 0x2(%r15),%rdx
382f(3): cmp %rdx,%r13
3832(2): jbe 0x8(%rip)
3834(6): mov $0x27,0x2(%r14,%r15,1)
383a(4): add $0x3,%r15
383e(3): mov %eax,%r8d
3841(3): cmp %r15,%r13
3844(2): jbe 0x7(%rip)
3846(5): mov $0x5c,0x0(%r14,%r15,1)
384b(4): add $0x1,%r15
384f(4): add $0x1,%rbp
3853(5): jmp 0xfffffe8d(%rip)
3858(8): nop 0x0(%rax,%rax,1)
3860(5): cmp $0x0,0xd(%rsp)
3865(6): jnz 0x1ce(%rip)
386b(2): xor %edx,%edx
386d(5): test $0x1,0x78(%rsp)
3872(6): jz 0xffffff19(%rip)
3878(4): add $0x1,%rbp
387c(5): jmp 0xfffffcbc(%rip)
3881(7): nop 0x0(%rax)
3888(5): cmp $0x2,0x8(%rsp)
388d(3): setz %dl
3890(2): xor %eax,%eax
3892(5): jmp 0xfffffde6(%rip)
3897(9): nop 0x0(%rax,%rax,1)
38a0(5): mov $0x7,%edx
38a5(5): mov $0x61,%ebx
38aa(5): jmp 0xfffffeda(%rip)
38af(1): nop 
38b0(5): cmp $0x2,0x8(%rsp)
38b5(3): setz %dl
38b8(3): test %rbp,%rbp
38bb(6): jnz 0xfffffdb1(%rip)
38c1(5): movzx 0xf(%rsp),%eax
38c6(2): and %dl,%al
38c8(6): jz 0xfffffdb0(%rip)
38ce(3): mov %r11,%rbp
38d1(8): mov $0x2,0x8(%rsp)
38d9(5): jmp 0x700(%rip)
38de(2): nop 
38e0(5): cmp $0x2,0x8(%rsp)
38e5(3): setz %dl
38e8(3): xor %r12d,%r12d
38eb(2): jmp 0xffffffd6(%rip)
38ed(3): nop (%rax)
38f0(5): cmp $0x2,0x8(%rsp)
38f5(5): mov $0x20,%ebx
38fa(3): setz %dl
38fd(2): jmp 0xffffffc4(%rip)
38ff(1): nop 
3900(5): mov $0xd,%edx
3905(5): mov $0x72,%ebx
390a(5): jmp 0xfffffe68(%rip)
390f(1): nop 
3910(5): mov $0xc,%edx
3915(5): mov $0x66,%ebx
391a(5): jmp 0xfffffe6a(%rip)
391f(1): nop 
3920(5): mov $0xb,%edx
3925(5): mov $0x76,%ebx
392a(5): jmp 0xfffffe5a(%rip)
392f(1): nop 
3930(5): mov $0xa,%edx
3935(5): mov $0x6e,%ebx
393a(5): jmp 0xfffffe38(%rip)
393f(1): nop 
3940(3): xor %r10d,%r10d
3943(5): nop 0x0(%rax,%rax,1)
3948(6): cmp $0x1,0x58(%rsp)
394e(6): jnz 0x3aa(%rip)
3954(5): mov %r11,0x38(%rsp)
3959(5): mov %r8b,0x30(%rsp)
395e(5): mov %r10b,0x28(%rsp)
3963(5): call 0xffffde4d(%rip)
3968(3): mov (%rax),%rcx
396b(3): movzx %bl,%edx
396e(6): movzx 0x28(%rsp),%r10d
3974(6): movzx 0x30(%rsp),%r8d
397a(5): mov 0x38(%rsp),%r11
397f(5): mov $0x1,%edi
3984(4): movzx 0x0(%rcx,%rdx,2),%eax
3988(4): and $0x4000,%ax
398c(4): setnz %r12b
3990(3): setz %al
3993(4): and 0xd(%rsp),%al
3997(2): test %al,%al
3999(6): jnz 0x998(%rip)
399f(5): cmp $0x2,0x8(%rsp)
39a4(3): setz %dl
39a7(5): jmp 0xfffffcd1(%rip)
39ac(4): nop 0x0(%rax)
39b0(4): movzx (%r9),%ebx
39b4(3): cmp $0x7e,%bl
39b7(2): jnbe 0xffffff89(%rip)
39b9(7): lea 0x3148(%rip),%rcx
39c0(3): movzx %bl,%edx
39c3(4): movsxd 0x0(%rcx,%rdx,4),%rax
39c7(3): add %rcx,%rax
39ca(2): jmp %rax
39cc(4): nop 0x0(%rax)
39d0(3): xor %r10d,%r10d
39d3(5): cmp $0x0,0xd(%rsp)
39d8(6): jnz 0xfffffdf6(%rip)
39de(2): nop 
39e0(5): mov $0x5c,%edx
39e5(5): mov $0x5c,%ebx
39ea(5): jmp 0xfffffd9a(%rip)
39ef(1): nop 
39f0(5): mov $0xc,%edx
39f5(3): xor %r10d,%r10d
39f8(5): mov $0x66,%ebx
39fd(5): jmp 0xfffffd87(%rip)
3a02(6): nop 0x0(%rax,%rax,1)
3a08(5): mov $0xa,%edx
3a0d(3): xor %r10d,%r10d
3a10(5): mov $0x6e,%ebx
3a15(5): jmp 0xfffffd5d(%rip)
3a1a(6): nop 0x0(%rax,%rax,1)
3a20(5): mov $0x61,%ebx
3a25(5): jmp 0xfffffdcb(%rip)
3a2a(6): nop 0x0(%rax,%rax,1)
3a30(3): xor %r10d,%r10d
3a33(5): cmp $0x2,0x8(%rsp)
3a38(3): setz %dl
3a3b(5): cmp $0x0,0xf(%rsp)
3a40(6): jnz 0xb9a(%rip)
3a46(3): mov %r8d,%eax
3a49(3): mov %r15,%rcx
3a4c(3): xor $0x1,%eax
3a4f(2): and %dl,%al
3a51(2): jz 0x2f(%rip)
3a53(3): cmp %r15,%r13
3a56(2): jbe 0x7(%rip)
3a58(5): mov $0x27,0x0(%r14,%r15,1)
3a5d(4): lea 0x1(%r15),%rcx
3a61(3): cmp %rcx,%r13
3a64(2): jbe 0x8(%rip)
3a66(6): mov $0x24,0x1(%r14,%r15,1)
3a6c(4): lea 0x2(%r15),%rcx
3a70(3): cmp %rcx,%r13
3a73(6): jnbe 0x636(%rip)
3a79(4): lea 0x3(%r15),%rcx
3a7d(3): mov %eax,%r8d
3a80(3): cmp %rcx,%r13
3a83(2): jbe 0x7(%rip)
3a85(5): mov $0x5c,0x0(%r14,%rcx,1)
3a8a(5): cmp $0x2,0x8(%rsp)
3a8f(4): lea 0x1(%rcx),%r15
3a93(6): jz 0x606(%rip)
3a99(4): lea 0x1(%rbp),%rax
3a9d(3): cmp %r11,%rax
3aa0(2): jnb 0x1b(%rip)
3aa2(5): mov 0x10(%rsp),%rax
3aa7(5): movzx 0x1(%rax,%rbp,1),%eax
3aac(4): mov %al,0x28(%rsp)
3ab0(3): sub $0x30,%eax
3ab3(2): cmp $0x9,%al
3ab5(6): jbe 0x834(%rip)
3abb(3): mov %r12d,%eax
3abe(5): mov $0x30,%ebx
3ac3(3): xor %r12d,%r12d
3ac6(5): jmp 0xfffffbb2(%rip)
3acb(5): nop 0x0(%rax,%rax,1)
3ad0(5): cmp $0x2,0x8(%rsp)
3ad5(3): mov %r10d,%r12d
3ad8(3): setz %dl
3adb(3): xor %r10d,%r10d
3ade(2): xor %eax,%eax
3ae0(5): jmp 0xfffffb98(%rip)
3ae5(3): nop (%rax)
3ae8(5): cmp $0x2,0x8(%rsp)
3aed(3): setz %dl
3af0(3): xor %r10d,%r10d
3af3(5): jmp 0xfffffdc5(%rip)
3af8(8): nop 0x0(%rax,%rax,1)
3b00(5): cmp $0x2,0x8(%rsp)
3b05(3): setz %dl
3b08(3): xor %r10d,%r10d
3b0b(3): xor %r12d,%r12d
3b0e(5): jmp 0xfffffdb3(%rip)
3b13(5): nop 0x0(%rax,%rax,1)
3b18(5): cmp $0x2,0x8(%rsp)
3b1d(3): mov %r10d,%r12d
3b20(5): mov $0x20,%ebx
3b25(3): setz %dl
3b28(3): xor %r10d,%r10d
3b2b(5): jmp 0xfffffd96(%rip)
3b30(5): mov $0xd,%edx
3b35(3): xor %r10d,%r10d
3b38(5): mov $0x72,%ebx
3b3d(5): jmp 0xfffffc35(%rip)
3b42(6): nop 0x0(%rax,%rax,1)
3b48(5): mov $0x76,%ebx
3b4d(5): jmp 0xfffffca3(%rip)
3b52(6): nop 0x0(%rax,%rax,1)
3b58(5): mov $0x9,%edx
3b5d(3): xor %r10d,%r10d
3b60(5): mov $0x74,%ebx
3b65(5): jmp 0xfffffc0d(%rip)
3b6a(6): nop 0x0(%rax,%rax,1)
3b70(5): mov $0x62,%ebx
3b75(5): jmp 0xfffffc7b(%rip)
3b7a(6): nop 0x0(%rax,%rax,1)
3b80(3): xor %r10d,%r10d
3b83(5): jmp 0xfffffa9d(%rip)
3b88(8): nop 0x0(%rax,%rax,1)
3b90(5): cmp $0x0,0xf(%rsp)
3b95(6): jnz 0x96b(%rip)
3b9b(4): add $0x1,%rbp
3b9f(3): mov %r8d,%eax
3ba2(3): xor %r12d,%r12d
3ba5(5): mov $0x5c,%ebx
3baa(5): jmp 0xfffffb12(%rip)
3baf(1): nop 
3bb0(5): cmp $0x2,0x8(%rsp)
3bb5(5): movzx 0xf(%rsp),%ebx
3bba(3): mov %r8d,%r12d
3bbd(3): mov %r11,%rbp
3bc0(3): setz %dl
3bc3(2): mov %ebx,%eax
3bc5(3): test %r15,%r15
3bc8(3): setz %cl
3bcb(2): and %edx,%eax
3bcd(2): and %cl,%al
3bcf(6): jnz 0xa67(%rip)
3bd5(2): mov %ebx,%eax
3bd7(3): xor $0x1,%eax
3bda(2): and %al,%dl
3bdc(6): jz 0x970(%rip)
3be2(5): cmp $0x0,0x7c(%rsp)
3be7(6): jz 0x963(%rip)
3bed(5): cmp $0x0,0xe(%rsp)
3bf2(6): jnz 0x9fb(%rip)
3bf8(3): test %r13,%r13
3bfb(3): setz %al
3bfe(6): cmp $0x0,0x50(%rsp)
3c04(3): setnz %dl
3c07(2): and %dl,%al
3c09(6): jz 0xa23(%rip)
3c0f(5): mov 0x50(%rsp),%r13
3c14(7): lea 0x2c70(%rip),%rbx
3c1b(4): mov $0x27,(%r14)
3c1f(8): mov $0x2,0x8(%rsp)
3c27(6): mov $0x1,%r15d
3c2d(9): mov $0x1,0x18(%rsp)
3c36(5): mov $0x0,0xf(%rsp)
3c3b(5): mov %rbx,0x48(%rsp)
3c40(4): mov %al,0x7c(%rsp)
3c44(5): jmp 0xfffff8df(%rip)
3c49(7): nop 0x0(%rax)
3c50(5): cmp $0x0,0xf(%rsp)
3c55(6): jnz 0x8ab(%rip)
3c5b(3): test %r13,%r13
3c5e(6): jz 0x402(%rip)
3c64(2): xor %edx,%edx
3c66(6): cmp $0x0,0x50(%rsp)
3c6c(6): jnz 0x3f4(%rip)
3c72(5): mov %r13,0x50(%rsp)
3c77(4): add $0x3,%r15
3c7b(2): xor %eax,%eax
3c7d(5): mov %r12b,0x7c(%rsp)
3c82(3): xor %r8d,%r8d
3c85(3): mov %rdx,%r13
3c88(5): mov $0x27,%ebx
3c8d(5): jmp 0xfffffa1c(%rip)
3c92(6): nop 0x0(%rax,%rax,1)
3c98(5): test $0x4,0x78(%rsp)
3c9d(2): jz 0x23(%rip)
3c9f(4): lea 0x2(%rbp),%rcx
3ca3(3): cmp %r11,%rcx
3ca6(2): jnb 0x1a(%rip)
3ca8(5): mov 0x10(%rsp),%rax
3cad(5): cmp $0x3f,0x1(%rax,%rbp,1)
3cb2(6): jz 0x790(%rip)
3cb8(8): nop 0x0(%rax,%rax,1)
3cc0(2): xor %edx,%edx
3cc2(3): xor %r12d,%r12d
3cc5(2): xor %eax,%eax
3cc7(5): mov $0x3f,%ebx
3ccc(5): jmp 0xfffff9ac(%rip)
3cd1(7): nop 0x0(%rax)
3cd8(5): cmp $0x0,0xf(%rsp)
3cdd(6): jnz 0x823(%rip)
3ce3(3): xor %r12d,%r12d
3ce6(2): xor %eax,%eax
3ce8(5): mov $0x3f,%ebx
3ced(5): jmp 0xfffff9bc(%rip)
3cf2(6): nop 0x0(%rax,%rax,1)
3cf8(8): lea 0xa0(%rsp),%rax
3d00(4): cmp $0xffffffff,%r11
3d04(c): mov $0x0,0xa0(%rsp)
3d10(5): mov %rax,0x28(%rsp)
3d15(2): jnz 0x2f(%rip)
3d17(5): mov 0x10(%rsp),%rdi
3d1c(5): mov %r8b,0x40(%rsp)
3d21(5): mov %r10b,0x38(%rsp)
3d26(5): mov %r9,0x30(%rsp)
3d2b(5): call 0xffffd855(%rip)
3d30(6): movzx 0x40(%rsp),%r8d
3d36(6): movzx 0x38(%rsp),%r10d
3d3c(3): mov %rax,%r11
3d3f(5): mov 0x30(%rsp),%r9
3d44(8): lea 0x9c(%rsp),%rax
3d4c(2): xor %ecx,%ecx
3d4e(4): mov %bl,0x7e(%rsp)
3d52(5): mov %r8b,0x7d(%rsp)
3d57(3): mov %rcx,%rbx
3d5a(8): mov %r9,0x88(%rsp)
3d62(5): mov %rax,0x38(%rsp)
3d67(5): mov %r10b,0x7f(%rsp)
3d6c(8): mov %r15,0x80(%rsp)
3d74(5): mov %r14,0x40(%rsp)
3d79(5): mov %r13,0x70(%rsp)
3d7e(5): mov %r11,0x30(%rsp)
3d83(5): mov 0x10(%rsp),%rax
3d88(5): lea 0x0(%rbp,%rbx,1),%r14
3d8d(5): mov 0x30(%rsp),%rdx
3d92(5): mov 0x28(%rsp),%rcx
3d97(5): mov 0x38(%rsp),%rdi
3d9c(4): lea 0x0(%rax,%r14,1),%r13
3da0(3): sub %r14,%rdx
3da3(3): mov %r13,%rsi
3da6(5): call 0x216a(%rip)
3dab(3): test %rax,%rax
3dae(3): mov %rax,%r15
3db1(2): jz 0x50(%rip)
3db3(4): cmp $0xffffffff,%rax
3db7(6): jz 0x61e(%rip)
3dbd(4): cmp $0xfffffffe,%rax
3dc1(6): jz 0x5a0(%rip)
3dc7(5): cmp $0x2,0x8(%rsp)
3dcc(3): setz %al
3dcf(4): and 0xf(%rsp),%al
3dd3(6): jnz 0x19d(%rip)
3dd9(7): mov 0x9c(%rsp),%edi
3de0(5): call 0xffffd9c0(%rip)
3de5(5): mov 0x28(%rsp),%rdi
3dea(2): test %eax,%eax
3dec(5): mov $0x0,%eax
3df1(4): cmove %eax,%r12d
3df5(3): add %r15,%rbx
3df8(5): call 0xffffd998(%rip)
3dfd(2): test %eax,%eax
3dff(2): jz 0xffffff84(%rip)
3e01(3): mov %r12d,%edx
3e04(3): mov %rbx,%rdi
3e07(6): movzx 0x7d(%rsp),%r8d
3e0d(3): xor $0x1,%edx
3e10(5): movzx 0x7e(%rsp),%ebx
3e15(6): movzx 0x7f(%rsp),%r10d
3e1b(4): and 0xd(%rsp),%dl
3e1f(8): mov 0x80(%rsp),%r15
3e27(5): mov 0x40(%rsp),%r14
3e2c(5): mov 0x70(%rsp),%r13
3e31(5): mov 0x30(%rsp),%r11
3e36(4): cmp $0x1,%rdi
3e3a(6): jbe 0x601(%rip)
3e40(3): mov %rdi,%rcx
3e43(2): xor %esi,%esi
3e45(6): movzx 0xf(%rsp),%r9d
3e4b(3): add %rbp,%rcx
3e4e(5): mov 0x10(%rsp),%rdi
3e53(5): jmp 0xbb(%rip)
3e58(8): nop 0x0(%rax,%rax,1)
3e60(5): cmp $0x2,0x8(%rsp)
3e65(3): setz %al
3e68(3): test %r9b,%r9b
3e6b(6): jnz 0x4b5(%rip)
3e71(3): mov %r8d,%esi
3e74(3): xor $0x1,%esi
3e77(3): and %sil,%al
3e7a(2): jz 0x31(%rip)
3e7c(3): cmp %r15,%r13
3e7f(2): jbe 0x7(%rip)
3e81(5): mov $0x27,0x0(%r14,%r15,1)
3e86(4): lea 0x1(%r15),%rsi
3e8a(3): cmp %rsi,%r13
3e8d(2): jbe 0x8(%rip)
3e8f(6): mov $0x24,0x1(%r14,%r15,1)
3e95(4): lea 0x2(%r15),%rsi
3e99(3): cmp %rsi,%r13
3e9c(2): jbe 0x8(%rip)
3e9e(6): mov $0x27,0x2(%r14,%r15,1)
3ea4(4): add $0x3,%r15
3ea8(3): mov %eax,%r8d
3eab(3): cmp %r15,%r13
3eae(2): jbe 0x7(%rip)
3eb0(5): mov $0x5c,0x0(%r14,%r15,1)
3eb5(4): lea 0x1(%r15),%rax
3eb9(3): cmp %rax,%r13
3ebc(2): jbe 0xf(%rip)
3ebe(2): mov %ebx,%eax
3ec0(3): shr $0x6,%al
3ec3(3): add $0x30,%eax
3ec6(5): mov %al,0x1(%r14,%r15,1)
3ecb(4): lea 0x2(%r15),%rax
3ecf(3): cmp %rax,%r13
3ed2(2): jbe 0x12(%rip)
3ed4(2): mov %ebx,%eax
3ed6(3): shr $0x3,%al
3ed9(3): and $0x7,%eax
3edc(3): add $0x30,%eax
3edf(5): mov %al,0x2(%r14,%r15,1)
3ee4(3): and $0x7,%ebx
3ee7(4): add $0x1,%rbp
3eeb(4): add $0x3,%r15
3eef(3): add $0x30,%ebx
3ef2(3): cmp %rcx,%rbp
3ef5(6): jnb 0xfffff7eb(%rip)
3efb(2): mov %edx,%esi
3efd(3): cmp %r15,%r13
3f00(2): jbe 0x6(%rip)
3f02(4): mov %bl,0x0(%r14,%r15,1)
3f06(4): movzx 0x0(%rdi,%rbp,1),%ebx
3f0a(4): add $0x1,%r15
3f0e(2): test %dl,%dl
3f10(6): jnz 0xffffff50(%rip)
3f16(2): mov %esi,%eax
3f18(3): xor $0x1,%eax
3f1b(3): and %r8d,%eax
3f1e(3): test %r10b,%r10b
3f21(2): jz 0x10(%rip)
3f23(3): cmp %r15,%r13
3f26(2): jbe 0x7(%rip)
3f28(5): mov $0x5c,0x0(%r14,%r15,1)
3f2d(4): add $0x1,%r15
3f31(4): add $0x1,%rbp
3f35(3): cmp %rcx,%rbp
3f38(6): jnb 0xfffff784(%rip)
3f3e(2): test %al,%al
3f40(6): jz 0x3fe(%rip)
3f46(3): cmp %r15,%r13
3f49(2): jbe 0x7(%rip)
3f4b(5): mov $0x27,0x0(%r14,%r15,1)
3f50(4): lea 0x1(%r15),%rax
3f54(3): cmp %rax,%r13
3f57(2): jbe 0x8(%rip)
3f59(6): mov $0x27,0x1(%r14,%r15,1)
3f5f(4): add $0x2,%r15
3f63(3): xor %r10d,%r10d
3f66(3): xor %r8d,%r8d
3f69(2): jmp 0xffffff94(%rip)
3f6b(5): nop 0x0(%rax,%rax,1)
3f70(4): cmp $0x1,%r15
3f74(6): jz 0xfffffe65(%rip)
3f7a(5): mov 0x10(%rsp),%rdi
3f7f(4): lea 0x0(%rdi,%r15,1),%rcx
3f83(5): lea 0x1(%rdi,%r14,1),%rdx
3f88(4): lea 0x0(%rcx,%r14,1),%r8
3f8c(2): jmp 0x11(%rip)
3f8e(2): nop 
3f90(4): add $0x1,%rdx
3f94(3): cmp %rdx,%r8
3f97(6): jz 0xfffffe42(%rip)
3f9d(3): movzx (%rdx),%ecx
3fa0(3): sub $0x5b,%ecx
3fa3(3): cmp $0x21,%cl
3fa6(2): jnbe 0xffffffea(%rip)
3fa8(5): mov $0x1,%esi
3fad(3): shl/sal %cl,%rsi
3fb0(3): mov %rsi,%rcx
3fb3(a): mov $0x8589934635,%rsi
3fbd(3): test %rsi,%rcx
3fc0(2): jz 0xffffffd0(%rip)
3fc2(5): mov 0x40(%rsp),%r14
3fc7(5): mov 0x70(%rsp),%r13
3fcc(5): mov 0x30(%rsp),%rbp
3fd1(8): mov $0x2,0x8(%rsp)
3fd9(5): cmp $0x0,0xd(%rsp)
3fde(2): jz 0x12(%rip)
3fe0(2): test %al,%al
3fe2(5): mov $0x4,%eax
3fe7(5): cmove 0x8(%rsp),%eax
3fec(4): mov %eax,0x8(%rsp)
3ff0(4): sub $0x8,%rsp
3ff4(3): mov %rbp,%rcx
3ff7(3): mov %r13,%rsi
3ffa(4): push 0x68(%rsp)
3ffe(4): push 0x78(%rsp)
4002(3): mov %r14,%rdi
4005(2): push $0x0
4007(8): mov 0x98(%rsp),%r9d
400f(5): mov 0x28(%rsp),%r8d
4014(5): mov 0x30(%rsp),%rdx
4019(4): and $0xfd,%r9d
401d(5): call 0xfffff433(%rip)
4022(4): add $0x20,%rsp
4026(3): mov %rax,%r15
4029(8): mov 0xa8(%rsp),%rbx
4031(9): xor $0x28,%rbx
403a(3): mov %r15,%rax
403d(6): jnz 0x606(%rip)
4043(7): add $0xb8,%rsp
404a(1): pop %rbx
404b(1): pop %rbp
404c(2): pop %r12
404e(2): pop %r13
4050(2): pop %r14
4052(2): pop %r15
4054(1): ret near (%rsp)
4055(3): nop (%rax)
4058(3): mov %r11,%rbp
405b(5): jmp 0xffffff7e(%rip)
4060(3): cmp %r15,%r13
4063(2): jbe 0x7(%rip)
4065(5): mov $0x27,0x0(%r14,%r15,1)
406a(4): lea 0x1(%r15),%rax
406e(3): cmp %rax,%r13
4071(2): jbe 0x8(%rip)
4073(6): mov $0x5c,0x1(%r14,%r15,1)
4079(4): lea 0x2(%r15),%rax
407d(3): cmp %rax,%r13
4080(6): jbe 0x5f2(%rip)
4086(3): mov %r13,%rdx
4089(6): mov $0x27,0x2(%r14,%r15,1)
408f(5): mov 0x50(%rsp),%r13
4094(5): jmp 0xfffffbde(%rip)
4099(3): mov %r12d,%eax
409c(5): mov $0x30,%ebx
40a1(3): xor %r12d,%r12d
40a4(5): jmp 0xfffff605(%rip)
40a9(6): mov $0x27,0x2(%r14,%r15,1)
40af(5): jmp 0xfffff9ca(%rip)
40b4(2): test %ebx,%ebx
40b6(6): jnz 0xfffff42d(%rip)
40bc(5): mov $0x1,0xd(%rsp)
40c1(3): test %r13,%r13
40c4(6): jnz 0x596(%rip)
40ca(7): lea 0x27ba(%rip),%rax
40d1(9): mov $0x0,0x50(%rsp)
40da(5): mov $0x1,0xe(%rsp)
40df(5): mov $0x0,0x7c(%rsp)
40e4(3): xor %r12d,%r12d
40e7(5): mov $0x0,0xf(%rsp)
40ec(9): mov $0x1,0x18(%rsp)
40f5(5): mov %rax,0x48(%rsp)
40fa(6): mov $0x1,%r15d
4100(8): mov $0x2,0x8(%rsp)
4108(5): jmp 0xfffff41b(%rip)
410d(3): nop (%rax)
4110(2): test %ebx,%ebx
4112(6): jnz 0x3fb(%rip)
4118(3): test %r13,%r13
411b(6): jz 0x22b(%rip)
4121(4): mov $0x22,(%r14)
4125(5): mov $0x1,0xe(%rsp)
412a(3): xor %r12d,%r12d
412d(5): mov $0x0,0x7c(%rsp)
4132(9): mov $0x0,0x50(%rsp)
413b(7): lea 0x202b(%rip),%rax
4142(5): mov $0x0,0xf(%rsp)
4147(5): mov $0x1,0xd(%rsp)
414c(9): mov $0x1,0x18(%rsp)
4155(6): mov $0x1,%r15d
415b(5): mov %rax,0x48(%rsp)
4160(5): jmp 0xfffff3c3(%rip)
4165(7): lea 0x2001(%rip),%rax
416c(5): mov $0x1,0xe(%rsp)
4171(5): mov $0x0,0x7c(%rsp)
4176(3): xor %r12d,%r12d
4179(9): mov $0x0,0x50(%rsp)
4182(5): mov $0x1,0xf(%rsp)
4187(5): mov $0x1,0xd(%rsp)
418c(9): mov $0x1,0x18(%rsp)
4195(3): xor %r15d,%r15d
4198(5): mov %rax,0x48(%rsp)
419d(8): mov $0x5,0x8(%rsp)
41a5(5): jmp 0xfffff37e(%rip)
41aa(5): mov $0x1,0xe(%rsp)
41af(5): mov $0x0,0x7c(%rsp)
41b4(3): xor %r12d,%r12d
41b7(9): mov $0x0,0x50(%rsp)
41c0(5): mov $0x0,0xf(%rsp)
41c5(3): xor %r15d,%r15d
41c8(5): mov $0x1,0xd(%rsp)
41cd(9): mov $0x0,0x18(%rsp)
41d6(9): mov $0x0,0x48(%rsp)
41df(5): jmp 0xfffff344(%rip)
41e4(5): cmp $0xa,0x8(%rsp)
41e9(2): jz 0x58(%rip)
41eb(7): lea 0x269b(%rip),%rsi
41f2(2): xor %edi,%edi
41f4(5): mov $0x5,%edx
41f9(5): call 0xffffd367(%rip)
41fe(3): mov %rax,%rcx
4201(5): mov %rax,0x68(%rsp)
4206(7): lea 0x2680(%rip),%rax
420d(3): cmp %rax,%rcx
4210(6): jz 0x39e(%rip)
4216(7): lea 0x266e(%rip),%rsi
421d(2): xor %edi,%edi
421f(5): mov $0x5,%edx
4224(5): call 0xffffd33c(%rip)
4229(3): mov %rax,%rcx
422c(5): mov %rax,0x60(%rsp)
4231(7): lea 0x2653(%rip),%rax
4238(3): cmp %rax,%rcx
423b(6): jz 0x389(%rip)
4241(3): xor %r15d,%r15d
4244(2): test %ebx,%ebx
4246(6): jz 0x1c7(%rip)
424c(2): test %ebx,%ebx
424e(5): mov 0x60(%rsp),%rbx
4253(5): setnz 0xf(%rsp)
4258(3): xor %r12d,%r12d
425b(3): mov %rbx,%rdi
425e(5): call 0xffffd322(%rip)
4263(5): mov %rbx,0x48(%rsp)
4268(5): mov %rax,0x18(%rsp)
426d(5): mov $0x1,0xe(%rsp)
4272(5): mov $0x0,0x7c(%rsp)
4277(9): mov $0x0,0x50(%rsp)
4280(5): mov $0x1,0xd(%rsp)
4285(5): jmp 0xfffff29e(%rip)
428a(5): mov $0x1,0xe(%rsp)
428f(5): mov $0x0,0x7c(%rsp)
4294(3): xor %r12d,%r12d
4297(9): mov $0x0,0x50(%rsp)
42a0(5): mov $0x0,0xf(%rsp)
42a5(3): xor %r15d,%r15d
42a8(5): mov $0x0,0xd(%rsp)
42ad(9): mov $0x0,0x18(%rsp)
42b6(9): mov $0x0,0x48(%rsp)
42bf(5): jmp 0xfffff264(%rip)
42c4(5): mov $0x1,0xe(%rsp)
42c9(5): mov $0x0,0x7c(%rsp)
42ce(3): xor %r12d,%r12d
42d1(9): mov $0x0,0x50(%rsp)
42da(5): mov $0x1,0xf(%rsp)
42df(5): mov $0x1,0xd(%rsp)
42e4(5): jmp 0xfffff21f(%rip)
42e9(3): cmp %r15,%r13
42ec(2): jbe 0x7(%rip)
42ee(5): mov $0x30,0x0(%r14,%r15,1)
42f3(4): lea 0x2(%rcx),%rax
42f7(3): cmp %rax,%r13
42fa(2): jbe 0x8(%rip)
42fc(6): mov $0x30,0x2(%r14,%rcx,1)
4302(3): mov %r12d,%eax
4305(4): lea 0x3(%rcx),%r15
4309(3): xor %r12d,%r12d
430c(5): mov $0x30,%ebx
4311(5): jmp 0xfffff367(%rip)
4316(a): nop 0x0(%rax,%rax,1)
4320(5): movzx 0xf(%rsp),%ebx
4325(3): mov %r11,%rbp
4328(4): mov %bl,0xd(%rsp)
432c(5): jmp 0xfffffcad(%rip)
4331(5): movzx 0xd(%rsp),%edx
4336(3): xor %r12d,%r12d
4339(5): jmp 0xfffffb07(%rip)
433e(3): xor %r10d,%r10d
4341(5): jmp 0xfffffbbc(%rip)
4346(9): mov $0x0,0x50(%rsp)
434f(5): mov $0x1,0xe(%rsp)
4354(3): xor %r12d,%r12d
4357(5): mov $0x0,0x7c(%rsp)
435c(5): jmp 0xfffffddf(%rip)
4361(5): mov 0x30(%rsp),%r11
4366(3): mov %r14,%rsi
4369(3): mov %r13,%rcx
436c(3): mov %rbx,%rax
436f(3): mov %rbx,%rdi
4372(6): movzx 0x7d(%rsp),%r8d
4378(5): movzx 0x7e(%rsp),%ebx
437d(8): mov 0x88(%rsp),%r9
4385(3): cmp %r11,%rsi
4388(6): movzx 0x7f(%rsp),%r10d
438e(8): mov 0x80(%rsp),%r15
4396(5): mov 0x40(%rsp),%r14
439b(5): mov 0x70(%rsp),%r13
43a0(2): jnb 0x28(%rip)
43a2(3): cmp $0x0,(%rcx)
43a5(2): jnz 0x12(%rip)
43a7(2): jmp 0x21(%rip)
43a9(7): nop 0x0(%rax)
43b0(5): cmp $0x0,0x0(%r9,%rax,1)
43b5(2): jz 0x10(%rip)
43b7(4): add $0x1,%rax
43bb(5): lea 0x0(%rbp,%rax,1),%rdx
43c0(3): cmp %rdx,%r11
43c3(2): jnbe 0xffffffed(%rip)
43c5(3): mov %rax,%rdi
43c8(5): movzx 0xd(%rsp),%edx
43cd(3): xor %r12d,%r12d
43d0(5): jmp 0xfffffa66(%rip)
43d5(3): mov %rbx,%rdi
43d8(6): movzx 0x7d(%rsp),%r8d
43de(5): movzx 0x7e(%rsp),%ebx
43e3(6): movzx 0x7f(%rsp),%r10d
43e9(8): mov 0x80(%rsp),%r15
43f1(3): xor %r12d,%r12d
43f4(5): mov 0x40(%rsp),%r14
43f9(5): mov 0x70(%rsp),%r13
43fe(5): mov 0x30(%rsp),%r11
4403(5): movzx 0xd(%rsp),%edx
4408(5): jmp 0xfffffa2e(%rip)
440d(5): mov 0x68(%rsp),%rdx
4412(3): movzx (%rdx),%eax
4415(2): test %al,%al
4417(6): jz 0xfffffe35(%rip)
441d(3): nop (%rax)
4420(3): cmp %r15,%r13
4423(2): jbe 0x6(%rip)
4425(4): mov %al,0x0(%r14,%r15,1)
4429(4): add $0x1,%r15
442d(5): movzx 0x0(%rdx,%r15,1),%eax
4432(2): test %al,%al
4434(2): jnz 0xffffffec(%rip)
4436(5): jmp 0xfffffe16(%rip)
443b(2): mov %edx,%eax
443d(5): jmp 0xfffff55a(%rip)
4442(4): movzx 0x0(%rax,%rcx,1),%ebx
4446(3): cmp $0x3e,%bl
4449(6): jnbe 0xfffff877(%rip)
444f(a): mov $0x8070630310989004800,%rax
4459(4): bt %rbx,%rax
445d(6): jnb 0xfffff863(%rip)
4463(5): cmp $0x0,0xf(%rsp)
4468(6): jnz 0x1ea(%rip)
446e(3): cmp %r15,%r13
4471(2): jbe 0x7(%rip)
4473(5): mov $0x3f,0x0(%r14,%r15,1)
4478(4): lea 0x1(%r15),%rax
447c(3): cmp %rax,%r13
447f(2): jbe 0x8(%rip)
4481(6): mov $0x22,0x1(%r14,%r15,1)
4487(4): lea 0x2(%r15),%rax
448b(3): cmp %rax,%r13
448e(2): jbe 0x8(%rip)
4490(6): mov $0x22,0x2(%r14,%r15,1)
4496(4): lea 0x3(%r15),%rax
449a(3): cmp %rax,%r13
449d(2): jbe 0x8(%rip)
449f(6): mov $0x3f,0x3(%r14,%r15,1)
44a5(4): add $0x4,%r15
44a9(2): xor %edx,%edx
44ab(3): xor %r12d,%r12d
44ae(2): xor %eax,%eax
44b0(3): mov %rcx,%rbp
44b3(5): jmp 0xfffff1c5(%rip)
44b8(2): test %ebx,%ebx
44ba(6): jz 0x18e(%rip)
44c0(7): lea 0x23c4(%rip),%rax
44c7(5): mov $0x1,0xe(%rsp)
44cc(5): mov $0x0,0x7c(%rsp)
44d1(3): xor %r12d,%r12d
44d4(9): mov $0x0,0x50(%rsp)
44dd(5): mov $0x1,0xf(%rsp)
44e2(5): mov $0x0,0xd(%rsp)
44e7(9): mov $0x1,0x18(%rsp)
44f0(3): xor %r15d,%r15d
44f3(5): mov %rax,0x48(%rsp)
44f8(5): jmp 0xfffff02b(%rip)
44fd(3): nop (%rax)
4500(3): mov %r11,%rbp
4503(5): movzx 0xf(%rsp),%eax
4508(5): jmp 0xfffffad1(%rip)
450d(7): lea 0x1c59(%rip),%rax
4514(5): mov $0x1,0xe(%rsp)
4519(5): mov $0x0,0x7c(%rsp)
451e(3): xor %r12d,%r12d
4521(9): mov $0x0,0x50(%rsp)
452a(5): mov $0x1,0xf(%rsp)
452f(5): mov $0x1,0xd(%rsp)
4534(9): mov $0x1,0x18(%rsp)
453d(3): xor %r15d,%r15d
4540(5): mov %rax,0x48(%rsp)
4545(5): jmp 0xffffefde(%rip)
454a(2): mov %edx,%eax
454c(5): mov 0x48(%rsp),%rbx
4551(3): test %rbx,%rbx
4554(2): jz 0x2e(%rip)
4556(2): test %al,%al
4558(2): jz 0x2a(%rip)
455a(3): movzx (%rbx),%ecx
455d(3): mov %rbx,%rax
4560(2): test %cl,%cl
4562(2): jz 0x20(%rip)
4564(3): mov %r15,%rdx
4567(3): sub %r15,%rax
456a(3): cmp %rdx,%r13
456d(2): jbe 0x6(%rip)
456f(4): mov %cl,0x0(%r14,%rdx,1)
4573(4): add $0x1,%rdx
4577(4): movzx 0x0(%rax,%rdx,1),%ecx
457b(2): test %cl,%cl
457d(2): jnz 0xffffffed(%rip)
457f(3): mov %rdx,%r15
4582(3): cmp %r15,%r13
4585(6): jbe 0xfffffaa4(%rip)
458b(5): mov $0x0,0x0(%r14,%r15,1)
4590(5): jmp 0xfffffa99(%rip)
4595(5): cmp $0x2,0x8(%rsp)
459a(5): movzx 0xf(%rsp),%ebx
459f(3): mov %r11,%rbp
45a2(3): setz %al
45a5(4): mov %bl,0xd(%rsp)
45a9(5): jmp 0xfffffa30(%rip)
45ae(4): mov 0x8(%rsp),%esi
45b2(3): mov %rcx,%rdi
45b5(5): call 0xffffedab(%rip)
45ba(5): mov %rax,0x68(%rsp)
45bf(5): jmp 0xfffffc57(%rip)
45c4(4): mov 0x8(%rsp),%esi
45c8(3): mov %rcx,%rdi
45cb(5): call 0xffffed95(%rip)
45d0(5): mov %rax,0x60(%rsp)
45d5(5): jmp 0xfffffc6c(%rip)
45da(5): movzx 0xf(%rsp),%ebx
45df(3): mov %r11,%rbp
45e2(2): mov %edx,%eax
45e4(4): mov %bl,0xd(%rsp)
45e8(5): jmp 0xfffff9f1(%rip)
45ed(4): sub $0x8,%rsp
45f1(6): mov $0x5,%r8d
45f7(3): mov %r11,%rcx
45fa(4): push 0x68(%rsp)
45fe(4): push 0x78(%rsp)
4602(3): mov %r14,%rdi
4605(4): push 0x38(%rsp)
4609(8): mov 0x98(%rsp),%r9d
4611(5): mov 0x30(%rsp),%rdx
4616(5): mov 0x70(%rsp),%rsi
461b(5): call 0xffffee35(%rip)
4620(4): add $0x20,%rsp
4624(3): mov %rax,%r15
4627(5): jmp 0xfffffa02(%rip)
462c(5): movzx 0x7c(%rsp),%eax
4631(5): jmp 0xffffff1b(%rip)
4636(8): mov $0x2,0x8(%rsp)
463e(5): jmp 0xfffff99b(%rip)
4643(5): call 0xffffcf4d(%rip)
4648(5): mov $0x0,0xd(%rsp)
464d(5): jmp 0xfffffa74(%rip)
4652(3): mov %r11,%rbp
4655(5): jmp 0xfffff99b(%rip)
465a(5): mov $0x1,0xe(%rsp)
465f(2): xor %eax,%eax
4661(3): xor %r12d,%r12d
4664(9): mov $0x0,0x50(%rsp)
466d(5): jmp 0xfffff5a7(%rip)
4672(3): mov %r13,%rdx
4675(5): mov 0x50(%rsp),%r13
467a(5): jmp 0xfffff5f8(%rip)
467f(5): call 0xffffce61(%rip)

"quotearg_n_options" :
4690(2): push %r15
4692(2): push %r14
4694(3): movsxd %edi,%r15
4697(2): push %r13
4699(2): push %r12
469b(3): mov %rdx,%r14
469e(1): push %rbp
469f(1): push %rbx
46a0(3): mov %rcx,%rbp
46a3(4): sub $0x28,%rsp
46a7(5): mov %rsi,0x8(%rsp)
46ac(5): call 0xffffce44(%rip)
46b1(3): mov %rax,%r13
46b4(2): mov (%rax),%eax
46b6(3): test %r15d,%r15d
46b9(7): mov 0x2049a0(%rip),%rbx
46c0(4): mov %eax,0x18(%rsp)
46c4(6): js 0x16d(%rip)
46ca(7): cmp %r15d,0x204987(%rip)
46d1(2): jnle 0x64(%rip)
46d3(7): cmp $0x7fffffff,%r15d
46da(6): jz 0x15c(%rip)
46e0(4): lea 0x1(%r15),%r12d
46e4(7): lea 0x204985(%rip),%rax
46eb(3): movsxd %r12d,%rsi
46ee(4): shl/sal $0x4,%rsi
46f2(3): cmp %rax,%rbx
46f5(6): jz 0x11b(%rip)
46fb(3): mov %rbx,%rdi
46fe(5): call 0xf72(%rip)
4703(3): mov %rax,%rbx
4706(7): mov %rax,0x204953(%rip)
470d(7): movsxd 0x204944(%rip),%rdi
4714(3): mov %r12d,%edx
4717(2): xor %esi,%esi
4719(2): sub %edi,%edx
471b(4): shl/sal $0x4,%rdi
471f(3): movsxd %edx,%rdx
4722(3): add %rbx,%rdi
4725(4): shl/sal $0x4,%rdx
4729(5): call 0xffffcef7(%rip)
472e(7): mov %r12d,0x204923(%rip)
4735(3): mov 0x4(%rbp),%eax
4738(4): shl/sal $0x4,%r15
473c(4): sub $0x8,%rsp
4740(3): add %r15,%rbx
4743(4): lea 0x8(%rbp),%r15
4747(4): mov 0x0(%rbp),%r8d
474b(3): mov (%rbx),%r11
474e(4): mov 0x8(%rbx),%r12
4752(3): mov %r14,%rcx
4755(3): or $0x1,%eax
4758(4): mov %eax,0x24(%rsp)
475c(3): push 0x30(%rbp)
475f(3): mov %eax,%r9d
4762(3): push 0x28(%rbp)
4765(2): push %r15
4767(3): mov %r11,%rsi
476a(5): mov 0x28(%rsp),%rdx
476f(3): mov %r12,%rdi
4772(5): mov %r11,0x30(%rsp)
4777(5): call 0xffffecd9(%rip)
477c(4): add $0x20,%rsp
4780(5): mov 0x10(%rsp),%r11
4785(3): cmp %rax,%r11
4788(2): jnbe 0x69(%rip)
478a(4): lea 0x1(%rax),%rsi
478e(7): lea 0x20f9cb(%rip),%rax
4795(3): cmp %rax,%r12
4798(3): mov %rsi,(%rbx)
479b(2): jz 0x14(%rip)
479d(3): mov %r12,%rdi
47a0(5): mov %rsi,0x10(%rsp)
47a5(5): call 0xffffcd2b(%rip)
47aa(5): mov 0x10(%rsp),%rsi
47af(3): mov %rsi,%rdi
47b2(5): mov %rsi,0x10(%rsp)
47b7(5): call 0xe59(%rip)
47bc(4): sub $0x8,%rsp
47c0(4): mov %rax,0x8(%rbx)
47c4(4): mov 0x0(%rbp),%r8d
47c8(3): push 0x30(%rbp)
47cb(3): push 0x28(%rbp)
47ce(3): mov %r14,%rcx
47d1(2): push %r15
47d3(5): mov 0x3c(%rsp),%r9d
47d8(3): mov %rax,%rdi
47db(5): mov 0x28(%rsp),%rdx
47e0(5): mov 0x30(%rsp),%rsi
47e5(3): mov %rax,%r12
47e8(5): call 0xffffec68(%rip)
47ed(4): add $0x20,%rsp
47f1(4): mov 0x18(%rsp),%eax
47f5(4): mov %eax,0x0(%r13)
47f9(4): add $0x28,%rsp
47fd(3): mov %r12,%rax
4800(1): pop %rbx
4801(1): pop %rbp
4802(2): pop %r12
4804(2): pop %r13
4806(2): pop %r14
4808(2): pop %r15
480a(1): ret near (%rsp)
480b(5): nop 0x0(%rax,%rax,1)
4810(2): xor %edi,%edi
4812(5): call 0xe5e(%rip)
4817(8): movdqa 0x204851(%rip),%xmm0
481f(3): mov %rax,%rbx
4822(7): mov %rax,0x204837(%rip)
4829(3): movups %xmm0,(%rax)
482c(5): jmp 0xfffffee1(%rip)
4831(5): call 0xffffccaf(%rip)
4836(5): call 0x102a(%rip)

"clone_quoting_options" :
4840(2): push %r12
4842(1): push %rbp
4843(1): push %rbx
4844(3): mov %rdi,%rbx
4847(5): call 0xffffcca9(%rip)
484c(3): mov (%rax),%r12d
484f(3): mov %rax,%rbp
4852(7): lea 0x20fa07(%rip),%rax
4859(3): test %rbx,%rbx
485c(5): mov $0x38,%esi
4861(4): cmove %rax,%rbx
4865(3): mov %rbx,%rdi
4868(5): call 0xfa8(%rip)
486d(4): mov %r12d,0x0(%rbp)
4871(1): pop %rbx
4872(1): pop %rbp
4873(2): pop %r12
4875(1): ret near (%rsp)

"get_quoting_style" :
4880(7): lea 0x20f9d9(%rip),%rax
4887(3): test %rdi,%rdi
488a(4): cmove %rax,%rdi
488e(2): mov (%rdi),%eax
4890(1): ret near (%rsp)

"set_quoting_style" :
48a0(7): lea 0x20f9b9(%rip),%rax
48a7(3): test %rdi,%rdi
48aa(4): cmove %rax,%rdi
48ae(2): mov %esi,(%rdi)
48b0(1): ret near (%rsp)

"set_char_quoting" :
48c0(7): lea 0x20f999(%rip),%rax
48c7(3): test %rdi,%rdi
48ca(2): mov %esi,%ecx
48cc(4): cmove %rax,%rdi
48d0(2): mov %esi,%eax
48d2(3): and $0x1f,%ecx
48d5(3): shr $0x5,%al
48d8(3): movzx %al,%eax
48db(5): lea 0x8(%rdi,%rax,4),%rdi
48e0(2): mov (%rdi),%esi
48e2(2): mov %esi,%eax
48e4(2): shr %cl,%eax
48e6(2): xor %eax,%edx
48e8(3): and $0x1,%eax
48eb(3): and $0x1,%edx
48ee(2): shl/sal %cl,%edx
48f0(2): xor %esi,%edx
48f2(2): mov %edx,(%rdi)
48f4(1): ret near (%rsp)

"set_quoting_flags" :
4900(7): lea 0x20f959(%rip),%rax
4907(3): test %rdi,%rdi
490a(4): cmove %rax,%rdi
490e(3): mov 0x4(%rdi),%eax
4911(3): mov %esi,0x4(%rdi)
4914(1): ret near (%rsp)

"set_custom_quoting" :
4920(7): lea 0x20f939(%rip),%rax
4927(3): test %rdi,%rdi
492a(4): cmove %rax,%rdi
492e(3): test %rsi,%rsi
4931(6): mov $0xa,(%rdi)
4937(2): jz 0x10(%rip)
4939(3): test %rdx,%rdx
493c(2): jz 0xb(%rip)
493e(4): mov %rsi,0x28(%rdi)
4942(4): mov %rdx,0x30(%rdi)
4946(1): ret near (%rsp)
4947(4): sub $0x8,%rsp
494b(5): call 0xffffcb95(%rip)

"quotearg_buffer" :
4950(2): push %r15
4952(2): push %r14
4954(7): lea 0x20f905(%rip),%rax
495b(2): push %r13
495d(2): push %r12
495f(3): mov %rdi,%r13
4962(1): push %rbp
4963(1): push %rbx
4964(3): mov %r8,%rbx
4967(3): mov %rsi,%r14
496a(3): mov %rdx,%r15
496d(4): sub $0x18,%rsp
4971(3): test %r8,%r8
4974(4): cmove %rax,%rbx
4978(5): mov %rcx,0x8(%rsp)
497d(5): call 0xffffcb73(%rip)
4982(3): mov (%rax),%r12d
4985(3): mov %rax,%rbp
4988(4): lea 0x8(%rbx),%rax
498c(4): sub $0x8,%rsp
4990(4): mov 0x4(%rbx),%r9d
4994(3): push 0x30(%rbx)
4997(3): mov (%rbx),%r8d
499a(3): push 0x28(%rbx)
499d(3): mov %r15,%rdx
49a0(1): push %rax
49a1(5): mov 0x28(%rsp),%rcx
49a6(3): mov %r14,%rsi
49a9(3): mov %r13,%rdi
49ac(5): call 0xffffeaa4(%rip)
49b1(4): mov %r12d,0x0(%rbp)
49b5(4): add $0x38,%rsp
49b9(1): pop %rbx
49ba(1): pop %rbp
49bb(2): pop %r12
49bd(2): pop %r13
49bf(2): pop %r14
49c1(2): pop %r15
49c3(1): ret near (%rsp)

"quotearg_alloc_mem" :
49d0(2): push %r15
49d2(2): push %r14
49d4(7): lea 0x20f885(%rip),%rax
49db(2): push %r13
49dd(2): push %r12
49df(3): mov %rdx,%r12
49e2(1): push %rbp
49e3(1): push %rbx
49e4(3): mov %rcx,%rbx
49e7(3): mov %rdi,%r14
49ea(3): mov %rsi,%r15
49ed(4): sub $0x38,%rsp
49f1(3): test %rcx,%rcx
49f4(4): cmove %rax,%rbx
49f8(2): xor %ebp,%ebp
49fa(5): call 0xffffcaf6(%rip)
49ff(3): test %r12,%r12
4a02(3): mov %rax,%r13
4a05(2): mov (%rax),%eax
4a07(4): setz %bpl
4a0b(3): or 0x4(%rbx),%ebp
4a0e(4): lea 0x8(%rbx),%r10
4a12(4): sub $0x8,%rsp
4a16(3): mov (%rbx),%r8d
4a19(3): mov %r15,%rcx
4a1c(4): mov %eax,0x14(%rsp)
4a20(3): push 0x30(%rbx)
4a23(3): mov %r14,%rdx
4a26(3): push 0x28(%rbx)
4a29(2): push %r10
4a2b(2): xor %esi,%esi
4a2d(3): mov %ebp,%r9d
4a30(2): xor %edi,%edi
4a32(5): mov %r10,0x40(%rsp)
4a37(5): call 0xffffea19(%rip)
4a3c(4): lea 0x1(%rax),%rsi
4a40(5): mov %rax,0x48(%rsp)
4a45(4): add $0x20,%rsp
4a49(3): mov %rsi,%rdi
4a4c(5): mov %rsi,0x18(%rsp)
4a51(5): call 0xbbf(%rip)
4a56(5): mov %rax,0x10(%rsp)
4a5b(4): sub $0x8,%rsp
4a5f(3): push 0x30(%rbx)
4a62(3): push 0x28(%rbx)
4a65(5): mov 0x38(%rsp),%r10
4a6a(3): mov %ebp,%r9d
4a6d(3): mov (%rbx),%r8d
4a70(3): mov %r15,%rcx
4a73(3): mov %r14,%rdx
4a76(3): mov %rax,%rdi
4a79(2): push %r10
4a7b(5): mov 0x38(%rsp),%rsi
4a80(5): call 0xffffe9d0(%rip)
4a85(4): mov 0x2c(%rsp),%eax
4a89(4): add $0x20,%rsp
4a8d(3): test %r12,%r12
4a90(4): mov %eax,0x0(%r13)
4a94(2): jz 0xb(%rip)
4a96(5): mov 0x28(%rsp),%r11
4a9b(4): mov %r11,(%r12)
4a9f(5): mov 0x10(%rsp),%rax
4aa4(4): add $0x38,%rsp
4aa8(1): pop %rbx
4aa9(1): pop %rbp
4aaa(2): pop %r12
4aac(2): pop %r13
4aae(2): pop %r14
4ab0(2): pop %r15
4ab2(1): ret near (%rsp)

"quotearg_alloc" :
4ac0(3): mov %rdx,%rcx
4ac3(2): xor %edx,%edx
4ac5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
4ad0(6): mov 0x204582(%rip),%eax
4ad6(2): push %r12
4ad8(7): mov 0x204581(%rip),%r12
4adf(1): push %rbp
4ae0(1): push %rbx
4ae1(3): cmp $0x1,%eax
4ae4(2): jle 0x2d(%rip)
4ae6(3): sub $0x2,%eax
4ae9(5): lea 0x18(%r12),%rbx
4aee(4): shl/sal $0x4,%rax
4af2(5): lea 0x28(%r12,%rax,1),%rbp
4af7(9): nop 0x0(%rax,%rax,1)
4b00(3): mov (%rbx),%rdi
4b03(4): add $0x10,%rbx
4b07(5): call 0xffffc9c9(%rip)
4b0c(3): cmp %rbp,%rbx
4b0f(2): jnz 0xfffffff1(%rip)
4b11(5): mov 0x8(%r12),%rdi
4b16(7): lea 0x20f643(%rip),%rbx
4b1d(3): cmp %rbx,%rdi
4b20(2): jz 0x19(%rip)
4b22(5): call 0xffffc9ae(%rip)
4b27(b): mov $0x100,0x20453e(%rip)
4b32(7): mov %rbx,0x20453f(%rip)
4b39(7): lea 0x204530(%rip),%rbx
4b40(3): cmp %rbx,%r12
4b43(2): jz 0x11(%rip)
4b45(3): mov %r12,%rdi
4b48(5): call 0xffffc988(%rip)
4b4d(7): mov %rbx,0x20450c(%rip)
4b54(1): pop %rbx
4b55(a): mov $0x1,0x2044f9(%rip)
4b5f(1): pop %rbp
4b60(2): pop %r12
4b62(1): ret near (%rsp)

"quotearg_n" :
4b70(7): lea 0x20f6e9(%rip),%rcx
4b77(7): mov $0xffffffff,%rdx
4b7e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
4b90(7): lea 0x20f6c9(%rip),%rcx
4b97(5): jmp 0xfffffaf9(%rip)

"quotearg" :
4ba0(7): lea 0x20f6b9(%rip),%rcx
4ba7(3): mov %rdi,%rsi
4baa(7): mov $0xffffffff,%rdx
4bb1(2): xor %edi,%edi
4bb3(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
4bc0(7): lea 0x20f699(%rip),%rcx
4bc7(3): mov %rsi,%rdx
4bca(3): mov %rdi,%rsi
4bcd(2): xor %edi,%edi
4bcf(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
4be0(4): sub $0x48,%rsp
4be4(3): mov %rdx,%rax
4be7(9): mov $0x28,%rdx
4bf0(5): mov %rdx,0x38(%rsp)
4bf5(2): xor %edx,%edx
4bf7(3): cmp $0xa,%esi
4bfa(2): jz 0x6a(%rip)
4bfc(3): mov %esi,(%rsp)
4bff(3): mov %rsp,%rcx
4c02(7): mov $0xffffffff,%rdx
4c09(3): mov %rax,%rsi
4c0c(9): mov $0x0,0x4(%rsp)
4c15(9): mov $0x0,0xc(%rsp)
4c1e(9): mov $0x0,0x14(%rsp)
4c27(9): mov $0x0,0x1c(%rsp)
4c30(9): mov $0x0,0x24(%rsp)
4c39(9): mov $0x0,0x2c(%rsp)
4c42(8): mov $0x0,0x34(%rsp)
4c4a(5): call 0xfffffa46(%rip)
4c4f(5): mov 0x38(%rsp),%rcx
4c54(9): xor $0x28,%rcx
4c5d(2): jnz 0xc(%rip)
4c5f(4): add $0x48,%rsp
4c63(1): ret near (%rsp)
4c64(5): call 0xffffc87c(%rip)
4c69(5): call 0xffffc927(%rip)

"quotearg_n_style_mem" :
4c70(4): sub $0x48,%rsp
4c74(3): mov %rdx,%rax
4c77(3): mov %rcx,%rdx
4c7a(9): mov $0x28,%rcx
4c83(5): mov %rcx,0x38(%rsp)
4c88(2): xor %ecx,%ecx
4c8a(3): cmp $0xa,%esi
4c8d(2): jz 0x63(%rip)
4c8f(3): mov %esi,(%rsp)
4c92(3): mov %rsp,%rcx
4c95(3): mov %rax,%rsi
4c98(9): mov $0x0,0x4(%rsp)
4ca1(9): mov $0x0,0xc(%rsp)
4caa(9): mov $0x0,0x14(%rsp)
4cb3(9): mov $0x0,0x1c(%rsp)
4cbc(9): mov $0x0,0x24(%rsp)
4cc5(9): mov $0x0,0x2c(%rsp)
4cce(8): mov $0x0,0x34(%rsp)
4cd6(5): call 0xfffff9ba(%rip)
4cdb(5): mov 0x38(%rsp),%rdx
4ce0(9): xor $0x28,%rdx
4ce9(2): jnz 0xc(%rip)
4ceb(4): add $0x48,%rsp
4cef(1): ret near (%rsp)
4cf0(5): call 0xffffc7f0(%rip)
4cf5(5): call 0xffffc89b(%rip)

"quotearg_style" :
4d00(3): mov %rsi,%rdx
4d03(2): mov %edi,%esi
4d05(2): xor %edi,%edi
4d07(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
4d10(3): mov %rdx,%rcx
4d13(3): mov %rsi,%rdx
4d16(2): mov %edi,%esi
4d18(2): xor %edi,%edi
4d1a(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
4d20(4): sub $0x48,%rsp
4d24(2): mov %edx,%ecx
4d26(9): mov $0x28,%rax
4d2f(5): mov %rax,0x38(%rsp)
4d34(2): xor %eax,%eax
4d36(7): mov 0x20f553(%rip),%rax
4d3d(3): mov %rsp,%r8
4d40(3): and $0x1f,%ecx
4d43(8): movdqa 0x20f515(%rip),%xmm0
4d4b(5): mov %rax,0x30(%rsp)
4d50(2): mov %edx,%eax
4d52(4): movaps %xmm0,(%rsp)
4d56(3): shr $0x5,%al
4d59(3): movzx %al,%eax
4d5c(5): lea 0x8(%r8,%rax,4),%r9
4d61(8): movdqa 0x20f507(%rip),%xmm0
4d69(5): movaps %xmm0,0x10(%rsp)
4d6e(8): movdqa 0x20f50a(%rip),%xmm0
4d76(5): movaps %xmm0,0x20(%rsp)
4d7b(3): mov (%r9),%edx
4d7e(2): mov %edx,%eax
4d80(2): shr %cl,%eax
4d82(2): not %eax
4d84(3): and $0x1,%eax
4d87(2): shl/sal %cl,%eax
4d89(3): mov %r8,%rcx
4d8c(2): xor %edx,%eax
4d8e(3): mov %rsi,%rdx
4d91(3): mov %rdi,%rsi
4d94(3): mov %eax,(%r9)
4d97(2): xor %edi,%edi
4d99(5): call 0xfffff8f7(%rip)
4d9e(5): mov 0x38(%rsp),%rsi
4da3(9): xor $0x28,%rsi
4dac(2): jnz 0x7(%rip)
4dae(4): add $0x48,%rsp
4db2(1): ret near (%rsp)
4db3(5): call 0xffffc7dd(%rip)

"quotearg_char" :
4dc0(4): movsx %sil,%edx
4dc4(7): mov $0xffffffff,%rsi
4dcb(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
4dd0(5): mov $0x3a,%edx
4dd5(7): mov $0xffffffff,%rsi
4ddc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
4df0(5): mov $0x3a,%edx
4df5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
4e00(4): sub $0x48,%rsp
4e04(3): mov %rdx,%rax
4e07(9): mov $0x28,%rdx
4e10(5): mov %rdx,0x38(%rsp)
4e15(2): xor %edx,%edx
4e17(3): cmp $0xa,%esi
4e1a(2): jz 0x6a(%rip)
4e1c(3): mov %esi,(%rsp)
4e1f(3): mov %rsp,%rcx
4e22(7): mov $0xffffffff,%rdx
4e29(3): mov %rax,%rsi
4e2c(9): mov $0x0,0x4(%rsp)
4e35(9): mov $0x4000000,0xc(%rsp)
4e3e(9): mov $0x0,0x14(%rsp)
4e47(9): mov $0x0,0x1c(%rsp)
4e50(9): mov $0x0,0x24(%rsp)
4e59(9): mov $0x0,0x2c(%rsp)
4e62(8): mov $0x0,0x34(%rsp)
4e6a(5): call 0xfffff826(%rip)
4e6f(5): mov 0x38(%rsp),%rcx
4e74(9): xor $0x28,%rcx
4e7d(2): jnz 0xc(%rip)
4e7f(4): add $0x48,%rsp
4e83(1): ret near (%rsp)
4e84(5): call 0xffffc65c(%rip)
4e89(5): call 0xffffc707(%rip)

"quotearg_n_custom_mem" :
4e90(4): sub $0x48,%rsp
4e94(3): mov %rcx,%r9
4e97(7): mov 0x20f3f2(%rip),%rcx
4e9e(8): movdqa 0x20f3ba(%rip),%xmm0
4ea6(9): mov $0x28,%rax
4eaf(5): mov %rax,0x38(%rsp)
4eb4(2): xor %eax,%eax
4eb6(4): movaps %xmm0,(%rsp)
4eba(3): test %rsi,%rsi
4ebd(5): mov %rcx,0x30(%rsp)
4ec2(7): mov $0xa,(%rsp)
4ec9(8): movdqa 0x20f39f(%rip),%xmm0
4ed1(5): movaps %xmm0,0x10(%rsp)
4ed6(8): movdqa 0x20f3a2(%rip),%xmm0
4ede(5): movaps %xmm0,0x20(%rsp)
4ee3(2): jz 0x34(%rip)
4ee5(3): test %rdx,%rdx
4ee8(2): jz 0x2f(%rip)
4eea(5): mov %rsi,0x28(%rsp)
4eef(5): mov %rdx,0x30(%rsp)
4ef4(3): mov %rsp,%rcx
4ef7(3): mov %r8,%rdx
4efa(3): mov %r9,%rsi
4efd(5): call 0xfffff793(%rip)
4f02(5): mov 0x38(%rsp),%rdi
4f07(9): xor $0x28,%rdi
4f10(2): jnz 0xc(%rip)
4f12(4): add $0x48,%rsp
4f16(1): ret near (%rsp)
4f17(5): call 0xffffc5c9(%rip)
4f1c(5): call 0xffffc674(%rip)

"quotearg_n_custom" :
4f30(7): mov $0xffffffff,%r8
4f37(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
4f40(3): mov %rdx,%rcx
4f43(7): mov $0xffffffff,%r8
4f4a(3): mov %rsi,%rdx
4f4d(3): mov %rdi,%rsi
4f50(2): xor %edi,%edi
4f52(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
4f60(3): mov %rcx,%r8
4f63(3): mov %rdx,%rcx
4f66(3): mov %rsi,%rdx
4f69(3): mov %rdi,%rsi
4f6c(2): xor %edi,%edi
4f6e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
4f80(7): lea 0x204099(%rip),%rcx
4f87(5): jmp 0xfffff709(%rip)

"quote_mem" :
4f90(7): lea 0x204089(%rip),%rcx
4f97(3): mov %rsi,%rdx
4f9a(3): mov %rdi,%rsi
4f9d(2): xor %edi,%edi
4f9f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
4fb0(7): lea 0x204069(%rip),%rcx
4fb7(7): mov $0xffffffff,%rdx
4fbe(5): jmp 0xfffff6d2(%rip)

"quote" :
4fd0(7): lea 0x204049(%rip),%rcx
4fd7(3): mov %rdi,%rsi
4fda(7): mov $0xffffffff,%rdx
4fe1(2): xor %edi,%edi
4fe3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
4ff0(2): push %r15
4ff2(2): push %r14
4ff4(2): push %r13
4ff6(2): push %r12
4ff8(3): mov %r9,%r12
4ffb(1): push %rbp
4ffc(1): push %rbx
4ffd(3): mov %rdi,%rbp
5000(3): mov %r8,%rbx
5003(4): sub $0x28,%rsp
5007(3): test %rsi,%rsi
500a(6): jz 0x11e(%rip)
5010(3): mov %rdx,%r8
5013(7): lea 0x1d2e(%rip),%rdx
501a(3): mov %rcx,%r9
501d(2): xor %eax,%eax
501f(3): mov %rsi,%rcx
5022(5): mov $0x1,%esi
5027(5): call 0xffffc759(%rip)
502c(7): lea 0x1d28(%rip),%rsi
5033(2): xor %edi,%edi
5035(5): mov $0x5,%edx
503a(5): call 0xffffc526(%rip)
503f(7): lea 0x203a(%rip),%rdx
5046(3): mov %rax,%rcx
5049(6): mov $0x7e3,%r8d
504f(5): mov $0x1,%esi
5054(3): mov %rbp,%rdi
5057(2): xor %eax,%eax
5059(5): call 0xffffc727(%rip)
505e(7): lea 0x1d83(%rip),%rsi
5065(2): xor %edi,%edi
5067(5): mov $0x5,%edx
506c(5): call 0xffffc4f4(%rip)
5071(3): mov %rbp,%rsi
5074(3): mov %rax,%rdi
5077(5): call 0xffffc5d9(%rip)
507c(4): cmp $0x9,%r12
5080(6): jnbe 0x340(%rip)
5086(7): lea 0x1fb7(%rip),%rdx
508d(4): movsxd 0x0(%rdx,%r12,4),%rax
5091(3): add %rdx,%rax
5094(2): jmp %rax
5096(a): nop 0x0(%rax,%rax,1)
50a0(4): mov 0x38(%rbx),%r9
50a4(4): mov 0x10(%rbx),%rax
50a8(7): lea 0x1ea9(%rip),%rsi
50af(4): mov 0x8(%rbx),%r8
50b3(5): mov $0x5,%edx
50b8(2): xor %edi,%edi
50ba(4): mov 0x30(%rbx),%r13
50be(4): mov 0x28(%rbx),%r12
50c2(5): mov %r9,0x10(%rsp)
50c7(4): mov 0x20(%rbx),%r15
50cb(4): mov 0x18(%rbx),%r14
50cf(4): mov %rax,(%rsp)
50d3(5): mov %r8,0x8(%rsp)
50d8(3): mov (%rbx),%rbx
50db(5): call 0xffffc485(%rip)
50e0(4): sub $0x8,%rsp
50e4(5): mov 0x18(%rsp),%r9
50e9(3): mov %rax,%rdx
50ec(3): mov %rbx,%rcx
50ef(5): mov $0x1,%esi
50f4(3): mov %rbp,%rdi
50f7(2): xor %eax,%eax
50f9(2): push %r9
50fb(2): push %r13
50fd(2): push %r12
50ff(2): push %r15
5101(2): push %r14
5103(5): mov 0x30(%rsp),%r9
5108(5): mov 0x38(%rsp),%r8
510d(5): call 0xffffc673(%rip)
5112(4): add $0x30,%rsp
5116(4): add $0x28,%rsp
511a(1): pop %rbx
511b(1): pop %rbp
511c(2): pop %r12
511e(2): pop %r13
5120(2): pop %r14
5122(2): pop %r15
5124(1): ret near (%rsp)
5125(3): nop (%rax)
5128(3): mov %rcx,%r8
512b(3): mov %rdx,%rcx
512e(7): lea 0x1c1f(%rip),%rdx
5135(5): mov $0x1,%esi
513a(2): xor %eax,%eax
513c(5): call 0xffffc644(%rip)
5141(5): jmp 0xfffffeeb(%rip)
5146(a): nop 0x0(%rax,%rax,1)
5150(4): mov 0x40(%rbx),%r10
5154(4): mov 0x38(%rbx),%r9
5158(7): lea 0x1e29(%rip),%rsi
515f(4): mov 0x10(%rbx),%rax
5163(4): mov 0x8(%rbx),%r8
5167(5): mov $0x5,%edx
516c(4): mov 0x30(%rbx),%r13
5170(4): mov 0x28(%rbx),%r12
5174(4): mov 0x20(%rbx),%r15
5178(4): mov 0x18(%rbx),%r14
517c(3): mov (%rbx),%rbx
517f(5): mov %r10,0x18(%rsp)
5184(5): mov %r9,0x10(%rsp)
5189(4): mov %rax,(%rsp)
518d(5): mov %r8,0x8(%rsp)
5192(2): xor %edi,%edi
5194(5): call 0xffffc3cc(%rip)
5199(5): mov 0x18(%rsp),%r10
519e(2): push %r10
51a0(5): jmp 0xffffff44(%rip)
51a5(3): nop (%rax)
51a8(3): mov (%rbx),%rbx
51ab(7): lea 0x1bad(%rip),%rsi
51b2(5): mov $0x5,%edx
51b7(2): xor %edi,%edi
51b9(5): call 0xffffc3a7(%rip)
51be(4): add $0x28,%rsp
51c2(3): mov %rbx,%rcx
51c5(3): mov %rbp,%rdi
51c8(1): pop %rbx
51c9(1): pop %rbp
51ca(2): pop %r12
51cc(2): pop %r13
51ce(2): pop %r14
51d0(2): pop %r15
51d2(3): mov %rax,%rdx
51d5(5): mov $0x1,%esi
51da(2): xor %eax,%eax
51dc(5): jmp 0xffffc5a4(%rip)
51e1(7): nop 0x0(%rax)
51e8(4): mov 0x8(%rbx),%r12
51ec(7): lea 0x1b7c(%rip),%rsi
51f3(3): mov (%rbx),%rbx
51f6(5): mov $0x5,%edx
51fb(2): xor %edi,%edi
51fd(5): call 0xffffc363(%rip)
5202(4): add $0x28,%rsp
5206(3): mov %r12,%r8
5209(3): mov %rbx,%rcx
520c(3): mov %rbp,%rdi
520f(3): mov %rax,%rdx
5212(5): mov $0x1,%esi
5217(1): pop %rbx
5218(1): pop %rbp
5219(2): pop %r12
521b(2): pop %r13
521d(2): pop %r14
521f(2): pop %r15
5221(2): xor %eax,%eax
5223(5): jmp 0xffffc55d(%rip)
5228(8): nop 0x0(%rax,%rax,1)
5230(4): mov 0x10(%rbx),%r13
5234(4): mov 0x8(%rbx),%r12
5238(7): lea 0x1b47(%rip),%rsi
523f(3): mov (%rbx),%rbx
5242(5): mov $0x5,%edx
5247(2): xor %edi,%edi
5249(5): call 0xffffc317(%rip)
524e(4): add $0x28,%rsp
5252(3): mov %r13,%r9
5255(3): mov %r12,%r8
5258(3): mov %rbx,%rcx
525b(3): mov %rbp,%rdi
525e(3): mov %rax,%rdx
5261(1): pop %rbx
5262(1): pop %rbp
5263(2): pop %r12
5265(2): pop %r13
5267(2): pop %r14
5269(2): pop %r15
526b(5): mov $0x1,%esi
5270(2): xor %eax,%eax
5272(5): jmp 0xffffc50e(%rip)
5277(9): nop 0x0(%rax,%rax,1)
5280(7): lea 0x1c31(%rip),%rsi
5287(5): mov $0x5,%edx
528c(2): xor %edi,%edi
528e(4): mov 0x18(%rbx),%r14
5292(4): mov 0x10(%rbx),%r13
5296(4): mov 0x8(%rbx),%r12
529a(3): mov (%rbx),%rbx
529d(5): call 0xffffc2c3(%rip)
52a2(4): sub $0x8,%rsp
52a6(2): push %r14
52a8(3): mov %rax,%rdx
52ab(3): mov %r13,%r9
52ae(3): mov %r12,%r8
52b1(3): mov %rbx,%rcx
52b4(3): mov %rbp,%rdi
52b7(5): mov $0x1,%esi
52bc(2): xor %eax,%eax
52be(5): call 0xffffc4c2(%rip)
52c3(1): pop %rax
52c4(1): pop %rdx
52c5(4): add $0x28,%rsp
52c9(1): pop %rbx
52ca(1): pop %rbp
52cb(2): pop %r12
52cd(2): pop %r13
52cf(2): pop %r14
52d1(2): pop %r15
52d3(1): ret near (%rsp)
52d4(4): nop 0x0(%rax)
52d8(4): mov 0x20(%rbx),%r15
52dc(7): lea 0x1bf5(%rip),%rsi
52e3(5): mov $0x5,%edx
52e8(2): xor %edi,%edi
52ea(4): mov 0x18(%rbx),%r14
52ee(4): mov 0x10(%rbx),%r13
52f2(4): mov 0x8(%rbx),%r12
52f6(3): mov (%rbx),%rbx
52f9(5): call 0xffffc267(%rip)
52fe(2): push %r15
5300(2): jmp 0xffffffa6(%rip)
5302(6): nop 0x0(%rax,%rax,1)
5308(4): mov 0x8(%rbx),%r8
530c(4): mov 0x28(%rbx),%r12
5310(7): lea 0x1be9(%rip),%rsi
5317(4): mov 0x20(%rbx),%r15
531b(4): mov 0x18(%rbx),%r14
531f(5): mov $0x5,%edx
5324(4): mov 0x10(%rbx),%r13
5328(2): xor %edi,%edi
532a(3): mov (%rbx),%rbx
532d(4): mov %r8,(%rsp)
5331(5): call 0xffffc22f(%rip)
5336(4): sub $0x8,%rsp
533a(3): mov %r13,%r9
533d(2): push %r12
533f(2): push %r15
5341(2): push %r14
5343(5): mov 0x20(%rsp),%r8
5348(3): mov %rbx,%rcx
534b(3): mov %rax,%rdx
534e(3): mov %rbp,%rdi
5351(5): mov $0x1,%esi
5356(2): xor %eax,%eax
5358(5): call 0xffffc428(%rip)
535d(4): add $0x20,%rsp
5361(4): add $0x28,%rsp
5365(1): pop %rbx
5366(1): pop %rbp
5367(2): pop %r12
5369(2): pop %r13
536b(2): pop %r14
536d(2): pop %r15
536f(1): ret near (%rsp)
5370(4): mov 0x10(%rbx),%r9
5374(4): mov 0x30(%rbx),%r13
5378(7): lea 0x1ba9(%rip),%rsi
537f(4): mov 0x28(%rbx),%r12
5383(4): mov 0x20(%rbx),%r15
5387(5): mov $0x5,%edx
538c(4): mov 0x18(%rbx),%r14
5390(4): mov 0x8(%rbx),%r8
5394(2): xor %edi,%edi
5396(5): mov %r9,0x8(%rsp)
539b(3): mov (%rbx),%rbx
539e(4): mov %r8,(%rsp)
53a2(5): call 0xffffc1be(%rip)
53a7(2): push %r13
53a9(2): push %r12
53ab(2): push %r15
53ad(2): push %r14
53af(5): mov 0x28(%rsp),%r9
53b4(2): jmp 0xffffff8f(%rip)
53b6(a): nop 0x0(%rax,%rax,1)
53c0(4): mov 0x40(%rbx),%r10
53c4(4): mov 0x38(%rbx),%r9
53c8(5): mov $0x5,%edx
53cd(4): mov 0x10(%rbx),%rax
53d1(4): mov 0x8(%rbx),%r8
53d5(7): lea 0x1be4(%rip),%rsi
53dc(4): mov 0x30(%rbx),%r13
53e0(4): mov 0x28(%rbx),%r12
53e4(4): mov 0x20(%rbx),%r15
53e8(4): mov 0x18(%rbx),%r14
53ec(5): mov %r10,0x18(%rsp)
53f1(5): mov %r9,0x10(%rsp)
53f6(4): mov %rax,(%rsp)
53fa(5): mov %r8,0x8(%rsp)
53ff(3): mov (%rbx),%rbx
5402(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
5410(3): xor %r9d,%r9d
5413(4): cmp $0x0,(%r8)
5417(2): jz 0x14(%rip)
5419(7): nop 0x0(%rax)
5420(4): add $0x1,%r9
5424(5): cmp $0x0,0x0(%r8,%r9,8)
5429(2): jnz 0xfffffff7(%rip)
542b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
5430(4): sub $0x68,%rsp
5434(3): mov %r8,%r10
5437(3): xor %r9d,%r9d
543a(9): mov $0x28,%rax
5443(5): mov %rax,0x58(%rsp)
5448(2): xor %eax,%eax
544a(3): mov %rsp,%r8
544d(3): nop (%rax)
5450(3): mov (%r10),%eax
5453(3): cmp $0x2f,%eax
5456(2): jnbe 0x44(%rip)
5458(3): mov %eax,%r11d
545b(4): add 0x10(%r10),%r11
545f(3): add $0x8,%eax
5462(3): mov %eax,(%r10)
5465(3): mov (%r11),%rax
5468(3): test %rax,%rax
546b(4): mov %rax,0x0(%r8,%r9,8)
546f(2): jz 0xc(%rip)
5471(4): add $0x1,%r9
5475(4): cmp $0xa,%r9
5479(2): jnz 0xffffffd7(%rip)
547b(5): call 0xfffffb75(%rip)
5480(5): mov 0x58(%rsp),%rax
5485(9): xor $0x28,%rax
548e(2): jnz 0x7(%rip)
5490(4): add $0x68,%rsp
5494(1): ret near (%rsp)
5495(5): call 0xffffc0fb(%rip)
549a(4): mov 0x8(%r10),%r11
549e(4): lea 0x8(%r11),%rax
54a2(4): mov %rax,0x8(%r10)
54a6(2): jmp 0xffffffbf(%rip)

"version_etc" :
54b0(1): push %rbp
54b1(1): push %rbx
54b2(6): mov $0x20,%r10d
54b8(3): xor %r11d,%r11d
54bb(7): sub $0xb8,%rsp
54c2(9): mov $0x28,%rax
54cb(5): mov %rax,0x78(%rsp)
54d0(2): xor %eax,%eax
54d2(8): lea 0xd0(%rsp),%rax
54da(8): mov %r8,0xa0(%rsp)
54e2(8): lea 0xd0(%rsp),%rbx
54ea(5): lea 0x20(%rsp),%r8
54ef(8): mov %r9,0xa8(%rsp)
54f7(8): mov $0x20,0x8(%rsp)
54ff(5): mov %rax,0x10(%rsp)
5504(8): lea 0x80(%rsp),%rax
550c(3): xor %r9d,%r9d
550f(5): mov %rax,0x18(%rsp)
5514(3): mov %rax,%rbp
5517(9): nop 0x0(%rax,%rax,1)
5520(4): cmp $0x2f,%r10d
5524(2): jnbe 0x58(%rip)
5526(3): mov %r10d,%eax
5529(6): mov $0x1,%r11d
552f(4): add $0x8,%r10d
5533(3): add %rbp,%rax
5536(3): mov (%rax),%rax
5539(3): test %rax,%rax
553c(4): mov %rax,0x0(%r8,%r9,8)
5540(2): jz 0xc(%rip)
5542(4): add $0x1,%r9
5546(4): cmp $0xa,%r9
554a(2): jnz 0xffffffd6(%rip)
554c(3): test %r11b,%r11b
554f(2): jnz 0x26(%rip)
5551(5): call 0xfffffa9f(%rip)
5556(5): mov 0x78(%rsp),%rax
555b(9): xor $0x28,%rax
5564(2): jnz 0xc(%rip)
5566(7): add $0xb8,%rsp
556d(1): pop %rbx
556e(1): pop %rbp
556f(1): ret near (%rsp)
5570(5): call 0xffffc020(%rip)
5575(5): mov %r10d,0x8(%rsp)
557a(2): jmp 0xffffffd7(%rip)
557c(3): mov %rbx,%rax
557f(4): add $0x8,%rbx
5583(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
5590(1): push %rbx
5591(7): lea 0x180a(%rip),%rsi
5598(5): mov $0x5,%edx
559d(2): xor %edi,%edi
559f(5): call 0xffffbfc1(%rip)
55a4(7): lea 0x180c(%rip),%rdx
55ab(3): mov %rax,%rsi
55ae(5): mov $0x1,%edi
55b3(2): xor %eax,%eax
55b5(5): call 0xffffc15b(%rip)
55ba(7): lea 0x180c(%rip),%rsi
55c1(5): mov $0x5,%edx
55c6(2): xor %edi,%edi
55c8(5): call 0xffffbf98(%rip)
55cd(7): lea 0x1134(%rip),%rcx
55d4(7): lea 0xc40(%rip),%rdx
55db(3): mov %rax,%rsi
55de(5): mov $0x1,%edi
55e3(2): xor %eax,%eax
55e5(5): call 0xffffc12b(%rip)
55ea(7): mov 0x203a97(%rip),%rbx
55f1(7): lea 0x1a08(%rip),%rsi
55f8(2): xor %edi,%edi
55fa(5): mov $0x5,%edx
55ff(5): call 0xffffbf61(%rip)
5604(3): mov %rbx,%rsi
5607(3): mov %rax,%rdi
560a(1): pop %rbx
560b(5): jmp 0xffffc045(%rip)

"xmalloc" :
5610(1): push %rbx
5611(3): mov %rdi,%rbx
5614(5): call 0xffffc08c(%rip)
5619(3): test %rax,%rax
561c(2): jnz 0x7(%rip)
561e(3): test %rbx,%rbx
5621(2): jnz 0x4(%rip)
5623(1): pop %rbx
5624(1): ret near (%rsp)
5625(5): call 0x23b(%rip)

"xnmalloc" :
5630(3): mov %rdi,%rax
5633(3): mul %rax,%rsi,%rdx
5636(3): mov %rax,%rdi
5639(3): seto %al
563c(3): test %rdi,%rdi
563f(2): js 0xc(%rip)
5641(3): movzx %al,%eax
5644(3): test %rax,%rax
5647(2): jnz 0x4(%rip)
5649(2): jmp 0xffffffc7(%rip)
564b(4): sub $0x8,%rsp
564f(5): call 0x211(%rip)

"xrealloc" :
5670(3): test %rsi,%rsi
5673(1): push %rbx
5674(3): mov %rsi,%rbx
5677(2): jnz 0x7(%rip)
5679(3): test %rdi,%rdi
567c(2): jnz 0x1c(%rip)
567e(3): mov %rbx,%rsi
5681(5): call 0xffffc06f(%rip)
5686(3): test %rax,%rax
5689(2): jnz 0x7(%rip)
568b(3): test %rbx,%rbx
568e(2): jnz 0x13(%rip)
5690(1): pop %rbx
5691(1): ret near (%rsp)
5692(6): nop 0x0(%rax,%rax,1)
5698(5): call 0xffffbe38(%rip)
569d(2): xor %eax,%eax
569f(1): pop %rbx
56a0(1): ret near (%rsp)
56a1(5): call 0x1bf(%rip)

"xnrealloc" :
56b0(3): mov %rsi,%rax
56b3(3): mul %rax,%rdx,%rdx
56b6(3): mov %rax,%rsi
56b9(3): seto %al
56bc(3): test %rsi,%rsi
56bf(2): js 0xc(%rip)
56c1(3): movzx %al,%eax
56c4(3): test %rax,%rax
56c7(2): jnz 0x4(%rip)
56c9(2): jmp 0xffffffa7(%rip)
56cb(4): sub $0x8,%rsp
56cf(5): call 0x191(%rip)

"x2nrealloc" :
56e0(3): test %rdi,%rdi
56e3(3): mov %rdx,%r9
56e6(3): mov (%rsi),%rcx
56e9(2): jz 0x37(%rip)
56eb(2): xor %edx,%edx
56ed(a): mov $0x6148914691236517204,%rax
56f7(3): div %r9,%rax
56fa(3): cmp %rcx,%rax
56fd(2): jbe 0x3e(%rip)
56ff(3): mov %rcx,%rax
5702(3): shr $0x1,%rax
5705(5): lea 0x1(%rax,%rcx,1),%rcx
570a(3): mov %rcx,(%rsi)
570d(4): imul %r9,%rcx
5711(3): mov %rcx,%rsi
5714(5): jmp 0xffffff5c(%rip)
5719(7): nop 0x0(%rax)
5720(3): test %rcx,%rcx
5723(2): jz 0x25(%rip)
5725(3): mov %rcx,%rax
5728(3): mul %rax,%r9,%rdx
572b(3): seto %dl
572e(3): test %rax,%rax
5731(3): movzx %dl,%edx
5734(2): js 0x7(%rip)
5736(3): test %rdx,%rdx
5739(2): jz 0xffffffd1(%rip)
573b(4): sub $0x8,%rsp
573f(5): call 0x121(%rip)
5744(4): nop 0x0(%rax)
5748(2): xor %edx,%edx
574a(5): mov $0x80,%eax
574f(3): xor %r8d,%r8d
5752(3): div %r9,%rax
5755(3): test %rax,%rax
5758(4): setz %r8b
575c(4): lea 0x0(%r8,%rax,1),%rcx
5760(2): jmp 0xffffffc5(%rip)

"x2realloc" :
5770(3): test %rdi,%rdi
5773(3): mov (%rsi),%rax
5776(2): jz 0x2a(%rip)
5778(a): mov $0x6148914691236517203,%rdx
5782(3): cmp %rdx,%rax
5785(2): jnbe 0x2c(%rip)
5787(3): mov %rax,%rdx
578a(3): shr $0x1,%rdx
578d(5): lea 0x1(%rdx,%rax,1),%rax
5792(3): mov %rax,(%rsi)
5795(3): mov %rax,%rsi
5798(5): jmp 0xfffffed8(%rip)
579d(3): nop (%rax)
57a0(3): test %rax,%rax
57a3(5): mov $0x80,%edx
57a8(4): cmove %rdx,%rax
57ac(3): test %rax,%rax
57af(2): jns 0xffffffe3(%rip)
57b1(4): sub $0x8,%rsp
57b5(5): call 0xab(%rip)

"xzalloc" :
57c0(1): push %rbx
57c1(3): mov %rdi,%rbx
57c4(5): call 0xfffffe4c(%rip)
57c9(3): mov %rbx,%rdx
57cc(2): xor %esi,%esi
57ce(3): mov %rax,%rdi
57d1(1): pop %rbx
57d2(5): jmp 0xffffbe4e(%rip)

"xcalloc" :
57e0(3): mov %rdi,%rax
57e3(4): sub $0x8,%rsp
57e7(3): mul %rax,%rsi,%rdx
57ea(3): seto %dl
57ed(3): test %rax,%rax
57f0(2): js 0x19(%rip)
57f2(3): movzx %dl,%edx
57f5(3): test %rdx,%rdx
57f8(2): jnz 0x11(%rip)
57fa(5): call 0xffffbe66(%rip)
57ff(3): test %rax,%rax
5802(2): jz 0x7(%rip)
5804(4): add $0x8,%rsp
5808(1): ret near (%rsp)
5809(5): call 0x57(%rip)

"xmemdup" :
5810(1): push %rbp
5811(1): push %rbx
5812(3): mov %rdi,%rbp
5815(3): mov %rsi,%rdi
5818(3): mov %rsi,%rbx
581b(4): sub $0x8,%rsp
581f(5): call 0xfffffdf1(%rip)
5824(4): add $0x8,%rsp
5828(3): mov %rbx,%rdx
582b(3): mov %rbp,%rsi
582e(1): pop %rbx
582f(1): pop %rbp
5830(3): mov %rax,%rdi
5833(5): jmp 0xffffbe4d(%rip)

"xstrdup" :
5840(1): push %rbx
5841(3): mov %rdi,%rbx
5844(5): call 0xffffbd3c(%rip)
5849(3): mov %rbx,%rdi
584c(4): lea 0x1(%rax),%rsi
5850(1): pop %rbx
5851(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
5860(7): lea 0x1848(%rip),%rsi
5867(4): sub $0x8,%rsp
586b(5): mov $0x5,%edx
5870(2): xor %edi,%edi
5872(5): call 0xffffbcee(%rip)
5877(6): mov 0x20379b(%rip),%edi
587d(7): lea 0xfaf(%rip),%rdx
5884(3): mov %rax,%rcx
5887(2): xor %esi,%esi
5889(2): xor %eax,%eax
588b(5): call 0xffffbe95(%rip)
5890(5): call 0xffffbc50(%rip)

"xnumtoumax" :
58a0(2): push %r15
58a2(2): push %r14
58a4(3): mov %rcx,%r15
58a7(2): push %r13
58a9(2): push %r12
58ab(3): mov %rdx,%r14
58ae(1): push %rbp
58af(1): push %rbx
58b0(2): mov %esi,%edx
58b2(2): xor %esi,%esi
58b4(3): mov %rdi,%r12
58b7(3): mov %r9,%r13
58ba(4): sub $0x18,%rsp
58be(3): mov %rsp,%rcx
58c1(4): mov 0x50(%rsp),%ebx
58c5(9): mov $0x28,%rax
58ce(5): mov %rax,0x8(%rsp)
58d3(2): xor %eax,%eax
58d5(5): call 0xfb(%rip)
58da(2): test %eax,%eax
58dc(6): jnz 0x94(%rip)
58e2(4): mov (%rsp),%rbp
58e6(3): cmp %r14,%rbp
58e9(2): jb 0x7(%rip)
58eb(3): cmp %r15,%rbp
58ee(2): jbe 0x56(%rip)
58f0(5): call 0xffffbc00(%rip)
58f5(7): cmp $0x40000000,%rbp
58fc(3): mov %rax,%r14
58ff(2): sbb %eax,%eax
5901(3): and $0xd7,%eax
5904(3): add $0x4b,%eax
5907(3): mov %eax,(%r14)
590a(3): mov %r12,%rdi
590d(5): call 0xfffff6c3(%rip)
5912(3): mov (%r14),%esi
5915(3): mov %rax,%r8
5918(5): mov $0x0,%eax
591d(7): lea 0xf0b(%rip),%rdx
5924(3): mov %r13,%rcx
5927(3): cmp $0x16,%esi
592a(3): cmove %eax,%esi
592d(2): test %ebx,%ebx
592f(5): mov $0x1,%eax
5934(3): cmove %eax,%ebx
5937(2): xor %eax,%eax
5939(2): mov %ebx,%edi
593b(5): call 0xffffbde5(%rip)
5940(4): mov (%rsp),%rbp
5944(5): mov 0x8(%rsp),%rdx
5949(9): xor $0x28,%rdx
5952(3): mov %rbp,%rax
5955(2): jnz 0x46(%rip)
5957(4): add $0x18,%rsp
595b(1): pop %rbx
595c(1): pop %rbp
595d(2): pop %r12
595f(2): pop %r13
5961(2): pop %r14
5963(2): pop %r15
5965(1): ret near (%rsp)
5966(a): nop 0x0(%rax,%rax,1)
5970(2): mov %eax,%ebp
5972(5): call 0xffffbb7e(%rip)
5977(3): cmp $0x1,%ebp
597a(3): mov %rax,%r14
597d(2): jz 0x13(%rip)
597f(3): cmp $0x3,%ebp
5982(2): jnz 0xffffff88(%rip)
5984(6): mov $0x0,(%rax)
598a(5): jmp 0xffffff80(%rip)
598f(1): nop 
5990(6): mov $0x4b,(%rax)
5996(5): jmp 0xffffff74(%rip)
599b(5): call 0xffffbbf5(%rip)

"xdectoumax" :
59a0(4): sub $0x10,%rsp
59a4(2): push %r9
59a6(3): mov %r8,%r9
59a9(3): mov %rcx,%r8
59ac(3): mov %rdx,%rcx
59af(3): mov %rsi,%rdx
59b2(5): mov $0xa,%esi
59b7(5): call 0xfffffee9(%rip)
59bc(4): add $0x18,%rsp
59c0(1): ret near (%rsp)

"xstrtoumax" :
59d0(2): push %r15
59d2(2): push %r14
59d4(2): push %r13
59d6(2): push %r12
59d8(1): push %rbp
59d9(1): push %rbx
59da(4): sub $0x28,%rsp
59de(9): mov $0x28,%rax
59e7(5): mov %rax,0x18(%rsp)
59ec(2): xor %eax,%eax
59ee(3): cmp $0x24,%edx
59f1(6): jnbe 0x364(%rip)
59f7(5): lea 0x10(%rsp),%rax
59fc(3): mov %rsi,%r15
59ff(3): test %rsi,%rsi
5a02(3): mov %rdi,%rbp
5a05(4): mov %edx,0x8(%rsp)
5a09(3): mov %rcx,%r14
5a0c(3): mov %r8,%r13
5a0f(4): cmove %rax,%r15
5a13(5): call 0xffffbadd(%rip)
5a18(6): mov $0x0,(%rax)
5a1e(3): mov %rax,%r12
5a21(4): movzx 0x0(%rbp),%ebx
5a25(5): call 0xffffbd8b(%rip)
5a2a(4): mov 0x8(%rsp),%edx
5a2e(3): mov (%rax),%rsi
5a31(3): mov %rbp,%rax
5a34(2): jmp 0x13(%rip)
5a36(a): nop 0x0(%rax,%rax,1)
5a40(4): add $0x1,%rax
5a44(3): movzx (%rax),%ebx
5a47(3): movzx %bl,%ecx
5a4a(5): test $0x20,0x1(%rsi,%rcx,2)
5a4f(2): jnz 0xfffffff1(%rip)
5a51(3): cmp $0x2d,%bl
5a54(2): jz 0x54(%rip)
5a56(2): xor %ecx,%ecx
5a58(3): mov %r15,%rsi
5a5b(3): mov %rbp,%rdi
5a5e(5): call 0xffffbbb2(%rip)
5a63(3): mov (%r15),%rcx
5a66(3): mov %rax,%rbx
5a69(3): cmp %rbp,%rcx
5a6c(2): jz 0x2c(%rip)
5a6e(4): mov (%r12),%eax
5a72(2): test %eax,%eax
5a74(2): jz 0x64(%rip)
5a76(3): cmp $0x22,%eax
5a79(5): mov $0x1,%ebp
5a7e(2): jnz 0x2a(%rip)
5a80(3): test %r13,%r13
5a83(2): jz 0xb(%rip)
5a85(4): movzx (%rcx),%r12d
5a89(3): test %r12b,%r12b
5a8c(2): jnz 0x7b(%rip)
5a8e(3): mov %rbx,(%r14)
5a91(2): jmp 0x1c(%rip)
5a93(5): nop 0x0(%rax,%rax,1)
5a98(3): test %r13,%r13
5a9b(5): mov %rcx,0x8(%rsp)
5aa0(2): jnz 0x40(%rip)
5aa2(6): nop 0x0(%rax,%rax,1)
5aa8(5): mov $0x4,%ebp
5aad(5): mov 0x18(%rsp),%rdi
5ab2(9): xor $0x28,%rdi
5abb(2): mov %ebp,%eax
5abd(6): jnz 0x293(%rip)
5ac3(4): add $0x28,%rsp
5ac7(1): pop %rbx
5ac8(1): pop %rbp
5ac9(2): pop %r12
5acb(2): pop %r13
5acd(2): pop %r14
5acf(2): pop %r15
5ad1(1): ret near (%rsp)
5ad2(6): nop 0x0(%rax,%rax,1)
5ad8(2): xor %ebp,%ebp
5ada(2): jmp 0xffffffa6(%rip)
5adc(4): nop 0x0(%rax)
5ae0(5): movzx 0x0(%rbp),%r12d
5ae5(3): test %r12b,%r12b
5ae8(2): jz 0xffffffc0(%rip)
5aea(4): movsx %r12b,%esi
5aee(3): mov %r13,%rdi
5af1(2): xor %ebp,%ebp
5af3(5): call 0xffffbacd(%rip)
5af8(3): test %rax,%rax
5afb(5): mov $0x1,%ebx
5b00(5): mov 0x8(%rsp),%rcx
5b05(2): jz 0xffffffa3(%rip)
5b07(4): movsx %r12b,%esi
5b0b(3): mov %r13,%rdi
5b0e(5): mov %rcx,0x8(%rsp)
5b13(5): call 0xffffbaad(%rip)
5b18(3): test %rax,%rax
5b1b(5): mov 0x8(%rsp),%rcx
5b20(6): jz 0xcc(%rip)
5b26(5): lea 0xffffffbb(%r12),%eax
5b2b(2): cmp $0x2f,%al
5b2d(2): jnbe 0x53(%rip)
5b2f(a): mov $0x142129060940101,%rdx
5b39(4): bt %rax,%rdx
5b3d(2): jnb 0x43(%rip)
5b3f(5): mov $0x30,%esi
5b44(3): mov %r13,%rdi
5b47(5): mov %rcx,0x8(%rsp)
5b4c(5): call 0xffffba74(%rip)
5b51(3): test %rax,%rax
5b54(5): mov 0x8(%rsp),%rcx
5b59(2): jz 0x27(%rip)
5b5b(4): movzx 0x1(%rcx),%eax
5b5f(2): cmp $0x44,%al
5b61(2): jz 0xe(%rip)
5b63(2): cmp $0x69,%al
5b65(6): jz 0x1d3(%rip)
5b6b(2): cmp $0x42,%al
5b6d(2): jnz 0x13(%rip)
5b6f(5): mov $0x2,%edi
5b74(5): mov $0x3e8,%esi
5b79(2): jmp 0x11(%rip)
5b7b(5): nop 0x0(%rax,%rax,1)
5b80(5): mov $0x1,%edi
5b85(5): mov $0x400,%esi
5b8a(4): sub $0x42,%r12d
5b8e(4): cmp $0x35,%r12b
5b92(2): jnbe 0x5a(%rip)
5b94(7): lea 0x156d(%rip),%rdx
5b9b(4): movzx %r12b,%r12d
5b9f(4): movsxd 0x0(%rdx,%r12,4),%rax
5ba3(3): add %rdx,%rax
5ba6(2): jmp %rax
5ba8(3): mov %rbx,%rax
5bab(3): mul %rax,%rsi,%rdx
5bae(6): jo 0x1f3(%rip)
5bb4(3): xor %r8d,%r8d
5bb7(3): mul %rax,%rsi,%rdx
5bba(6): jo 0x1d8(%rip)
5bc0(3): mov %rax,%rbx
5bc3(3): or %r8d,%ebp
5bc6(a): nop 0x0(%rax,%rax,1)
5bd0(3): movsxd %edi,%rdi
5bd3(2): mov %ebp,%eax
5bd5(3): add %rdi,%rcx
5bd8(3): or $0x2,%eax
5bdb(3): mov %rcx,(%r15)
5bde(3): cmp $0x0,(%rcx)
5be1(3): mov %rbx,(%r14)
5be4(3): cmovne %eax,%ebp
5be7(5): jmp 0xfffffec6(%rip)
5bec(3): mov %rbx,(%r14)
5bef(3): or $0x2,%ebp
5bf2(5): jmp 0xfffffebb(%rip)
5bf7(5): mov $0x2,%edx
5bfc(3): mov %rdx,%rax
5bff(3): mul %rax,%rbx,%rdx
5c02(6): jo 0x9c(%rip)
5c08(3): add %rbx,%rbx
5c0b(2): jmp 0xffffffc5(%rip)
5c0d(5): mov $0x200,%edx
5c12(3): mov %rdx,%rax
5c15(3): mul %rax,%rbx,%rdx
5c18(6): jo 0x86(%rip)
5c1e(4): shl/sal $0x9,%rbx
5c22(2): jmp 0xffffffae(%rip)
5c24(6): mov $0x7,%r8d
5c2a(3): xor %r9d,%r9d
5c2d(3): nop (%rax)
5c30(3): mov %rbx,%rax
5c33(3): mul %rax,%rsi,%rdx
5c36(3): mov %rax,%rbx
5c39(6): jo 0x195(%rip)
5c3f(4): sub $0x1,%r8d
5c43(2): jnz 0xffffffed(%rip)
5c45(3): or %r9d,%ebp
5c48(2): jmp 0xffffff88(%rip)
5c4a(6): mov $0x8,%r8d
5c50(3): xor %r9d,%r9d
5c53(5): nop 0x0(%rax,%rax,1)
5c58(3): mov %rbx,%rax
5c5b(3): mul %rax,%rsi,%rdx
5c5e(3): mov %rax,%rbx
5c61(6): jo 0x14f(%rip)
5c67(4): sub $0x1,%r8d
5c6b(2): jnz 0xffffffed(%rip)
5c6d(2): jmp 0xffffffd8(%rip)
5c6f(6): mov $0x4,%r8d
5c75(3): xor %r9d,%r9d
5c78(3): mov %rbx,%rax
5c7b(3): mul %rax,%rsi,%rdx
5c7e(3): mov %rax,%rbx
5c81(6): jo 0x102(%rip)
5c87(4): sub $0x1,%r8d
5c8b(2): jnz 0xffffffed(%rip)
5c8d(2): jmp 0xffffffb8(%rip)
5c8f(3): mov %rbx,%rax
5c92(3): mul %rax,%rsi,%rdx
5c95(3): mov %rax,%rbx
5c98(6): jno 0xffffff38(%rip)
5c9e(5): mov $0x1,%ebp
5ca3(4): or $0xffffffff,%rbx
5ca7(5): jmp 0xffffff29(%rip)
5cac(4): nop 0x0(%rax)
5cb0(6): mov $0x5,%r8d
5cb6(3): xor %r9d,%r9d
5cb9(3): mov %rbx,%rax
5cbc(3): mul %rax,%rsi,%rdx
5cbf(3): mov %rax,%rbx
5cc2(6): jo 0xfd(%rip)
5cc8(4): sub $0x1,%r8d
5ccc(2): jnz 0xffffffed(%rip)
5cce(5): jmp 0xffffff77(%rip)
5cd3(6): mov $0x6,%r8d
5cd9(3): xor %r9d,%r9d
5cdc(3): mov %rbx,%rax
5cdf(3): mul %rax,%rsi,%rdx
5ce2(3): mov %rax,%rbx
5ce5(6): jo 0x8f(%rip)
5ceb(4): sub $0x1,%r8d
5cef(2): jnz 0xffffffed(%rip)
5cf1(5): jmp 0xffffff54(%rip)
5cf6(5): mov $0x400,%edx
5cfb(3): mov %rdx,%rax
5cfe(3): mul %rax,%rbx,%rdx
5d01(2): jo 0xffffff9d(%rip)
5d03(4): shl/sal $0xa,%rbx
5d07(5): jmp 0xfffffec9(%rip)
5d0c(3): mov %rbx,%rax
5d0f(3): mul %rax,%rsi,%rdx
5d12(6): jo 0xcb(%rip)
5d18(3): xor %r8d,%r8d
5d1b(3): mul %rax,%rsi,%rdx
5d1e(6): jno 0xfffffe99(%rip)
5d24(6): mov $0x1,%r8d
5d2a(4): or $0xffffffff,%rax
5d2e(5): jmp 0xfffffe89(%rip)
5d33(5): nop 0x0(%rax,%rax,1)
5d38(2): xor %edi,%edi
5d3a(4): cmp $0x42,0x2(%rcx)
5d3e(5): mov $0x400,%esi
5d43(4): setz %dil
5d47(4): lea 0x1(%rdi,%rdi,1),%edi
5d4b(5): jmp 0xfffffe3f(%rip)
5d50(5): call 0xffffb840(%rip)
5d55(7): lea 0x1484(%rip),%rcx
5d5c(7): lea 0x135d(%rip),%rsi
5d63(7): lea 0x1376(%rip),%rdi
5d6a(5): mov $0x54,%edx
5d6f(5): call 0xffffb891(%rip)
5d74(6): mov $0x1,%r9d
5d7a(4): or $0xffffffff,%rbx
5d7e(5): jmp 0xffffff6d(%rip)
5d83(6): mov $0x1,%r9d
5d89(4): or $0xffffffff,%rbx
5d8d(5): jmp 0xfffffefa(%rip)
5d92(6): mov $0x1,%r8d
5d98(4): or $0xffffffff,%rbx
5d9c(5): jmp 0xfffffe27(%rip)
5da1(4): or $0xffffffff,%rax
5da5(6): mov $0x1,%r8d
5dab(5): jmp 0xfffffe0c(%rip)
5db0(6): mov $0x1,%r9d
5db6(4): or $0xffffffff,%rbx
5dba(5): jmp 0xfffffead(%rip)
5dbf(6): mov $0x1,%r9d
5dc5(4): or $0xffffffff,%rbx
5dc9(5): jmp 0xfffffeff(%rip)
5dce(6): mov $0x1,%r9d
5dd4(4): or $0xffffffff,%rbx
5dd8(5): jmp 0xfffffe67(%rip)
5ddd(6): mov $0x1,%r8d
5de3(4): or $0xffffffff,%rax
5de7(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
5df0(2): push %r12
5df2(1): push %rbp
5df3(1): push %rbx
5df4(3): mov %rdi,%rbx
5df7(5): call 0xffffb899(%rip)
5dfc(2): test %eax,%eax
5dfe(3): mov %rbx,%rdi
5e01(2): js 0x56(%rip)
5e03(5): call 0xffffb8cd(%rip)
5e08(2): test %eax,%eax
5e0a(2): jnz 0x2e(%rip)
5e0c(3): mov %rbx,%rdi
5e0f(5): call 0x61(%rip)
5e14(2): test %eax,%eax
5e16(2): jz 0x3e(%rip)
5e18(5): call 0xffffb6d8(%rip)
5e1d(3): mov (%rax),%r12d
5e20(3): mov %rbx,%rdi
5e23(3): mov %rax,%rbp
5e26(5): call 0xffffb71a(%rip)
5e2b(3): test %r12d,%r12d
5e2e(2): jnz 0x32(%rip)
5e30(1): pop %rbx
5e31(1): pop %rbp
5e32(2): pop %r12
5e34(1): ret near (%rsp)
5e35(3): nop (%rax)
5e38(3): mov %rbx,%rdi
5e3b(5): call 0xffffb855(%rip)
5e40(2): xor %esi,%esi
5e42(5): mov $0x1,%edx
5e47(2): mov %eax,%edi
5e49(5): call 0xffffb7a7(%rip)
5e4e(4): cmp $0xffffffff,%rax
5e52(2): jnz 0xffffffba(%rip)
5e54(3): mov %rbx,%rdi
5e57(1): pop %rbx
5e58(1): pop %rbp
5e59(2): pop %r12
5e5b(5): jmp 0xffffb6e5(%rip)
5e60(4): mov %r12d,0x0(%rbp)
5e64(5): mov $0xffffffff,%eax
5e69(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
5e70(3): test %rdi,%rdi
5e73(1): push %rbx
5e74(3): mov %rdi,%rbx
5e77(2): jz 0x13(%rip)
5e79(5): call 0xffffb857(%rip)
5e7e(2): test %eax,%eax
5e80(2): jz 0xa(%rip)
5e82(6): test $0x100,(%rbx)
5e88(2): jnz 0x10(%rip)
5e8a(3): mov %rbx,%rdi
5e8d(1): pop %rbx
5e8e(5): jmp 0xffffb822(%rip)
5e93(5): nop 0x0(%rax,%rax,1)
5e98(3): mov %rbx,%rdi
5e9b(5): mov $0x1,%edx
5ea0(2): xor %esi,%esi
5ea2(5): call 0xe(%rip)
5ea7(3): mov %rbx,%rdi
5eaa(1): pop %rbx
5eab(5): jmp 0xffffb805(%rip)

"rpl_fseeko" :
5eb0(4): mov 0x8(%rdi),%rax
5eb4(4): cmp %rax,0x10(%rdi)
5eb8(2): jz 0x8(%rip)
5eba(5): jmp 0xffffb876(%rip)
5ebf(1): nop 
5ec0(4): mov 0x20(%rdi),%rax
5ec4(4): cmp %rax,0x28(%rdi)
5ec8(2): jnz 0xfffffff2(%rip)
5eca(5): cmp $0x0,0x48(%rdi)
5ecf(2): jnz 0xffffffeb(%rip)
5ed1(2): push %r12
5ed3(1): push %rbp
5ed4(3): mov %edx,%r12d
5ed7(1): push %rbx
5ed8(3): mov %rsi,%rbp
5edb(3): mov %rdi,%rbx
5ede(5): call 0xffffb7b2(%rip)
5ee3(3): mov %r12d,%edx
5ee6(3): mov %rbp,%rsi
5ee9(2): mov %eax,%edi
5eeb(5): call 0xffffb705(%rip)
5ef0(4): cmp $0xffffffff,%rax
5ef4(2): jz 0xe(%rip)
5ef6(3): and $0xef,(%rbx)
5ef9(7): mov %rax,0x90(%rbx)
5f00(2): xor %eax,%eax
5f02(1): pop %rbx
5f03(1): pop %rbp
5f04(2): pop %r12
5f06(1): ret near (%rsp)

"rpl_mbrtowc" :
5f10(2): push %r13
5f12(2): push %r12
5f14(3): mov %rsi,%r13
5f17(1): push %rbp
5f18(1): push %rbx
5f19(3): mov %rdi,%rbx
5f1c(3): mov %rdx,%r12
5f1f(4): sub $0x18,%rsp
5f23(9): mov $0x28,%rax
5f2c(5): mov %rax,0x8(%rsp)
5f31(2): xor %eax,%eax
5f33(5): lea 0x4(%rsp),%rax
5f38(3): test %rdi,%rdi
5f3b(4): cmove %rax,%rbx
5f3f(3): mov %rbx,%rdi
5f42(5): call 0xffffb66e(%rip)
5f47(4): cmp $0xfffffffd,%rax
5f4b(3): mov %rax,%rbp
5f4e(2): jbe 0x22(%rip)
5f50(3): test %r12,%r12
5f53(2): jz 0x1d(%rip)
5f55(2): xor %edi,%edi
5f57(5): call 0xc9(%rip)
5f5c(2): test %al,%al
5f5e(2): jnz 0x12(%rip)
5f60(5): movzx 0x0(%r13),%eax
5f65(5): mov $0x1,%ebp
5f6a(2): mov %eax,(%rbx)
5f6c(4): nop 0x0(%rax)
5f70(5): mov 0x8(%rsp),%rdx
5f75(9): xor $0x28,%rdx
5f7e(3): mov %rbp,%rax
5f81(2): jnz 0xd(%rip)
5f83(4): add $0x18,%rsp
5f87(1): pop %rbx
5f88(1): pop %rbp
5f89(2): pop %r12
5f8b(2): pop %r13
5f8d(1): ret near (%rsp)
5f8e(5): call 0xffffb602(%rip)

"close_stream" :
5fa0(2): push %r12
5fa2(1): push %rbp
5fa3(3): mov %rdi,%rbp
5fa6(1): push %rbx
5fa7(5): call 0xffffb579(%rip)
5fac(3): mov 0x0(%rbp),%ebx
5faf(3): mov %rbp,%rdi
5fb2(3): mov %rax,%r12
5fb5(5): call 0xfffffe3b(%rip)
5fba(3): and $0x20,%ebx
5fbd(2): test %ebx,%ebx
5fbf(2): jnz 0x19(%rip)
5fc1(2): test %eax,%eax
5fc3(2): jz 0xc(%rip)
5fc5(3): test %r12,%r12
5fc8(5): mov $0xffffffff,%eax
5fcd(2): jz 0x3b(%rip)
5fcf(1): pop %rbx
5fd0(1): pop %rbp
5fd1(2): pop %r12
5fd3(1): ret near (%rsp)
5fd4(4): nop 0x0(%rax)
5fd8(2): test %eax,%eax
5fda(2): jnz 0x1e(%rip)
5fdc(5): call 0xffffb514(%rip)
5fe1(6): mov $0x0,(%rax)
5fe7(5): mov $0xffffffff,%eax
5fec(1): pop %rbx
5fed(1): pop %rbp
5fee(2): pop %r12
5ff0(1): ret near (%rsp)
5ff1(7): nop 0x0(%rax)
5ff8(1): pop %rbx
5ff9(5): mov $0xffffffff,%eax
5ffe(1): pop %rbp
5fff(2): pop %r12
6001(1): ret near (%rsp)
6002(6): nop 0x0(%rax,%rax,1)
6008(5): call 0xffffb4e8(%rip)
600d(3): cmp $0x9,(%rax)
6010(1): pop %rbx
6011(1): pop %rbp
6012(2): pop %r12
6014(3): setnz %al
6017(3): movzx %al,%eax
601a(2): neg %eax
601c(1): ret near (%rsp)

"hard_locale" :
6020(4): sub $0x8,%rsp
6024(2): xor %esi,%esi
6026(5): call 0xffffb6da(%rip)
602b(3): mov %rax,%rdx
602e(5): mov $0x1,%eax
6033(3): test %rdx,%rdx
6036(2): jz 0x1f(%rip)
6038(7): lea 0x11ac(%rip),%rdi
603f(5): mov $0x2,%ecx
6044(3): mov %rdx,%rsi
6047(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6049(3): setnbe %cl
604c(3): sbb $0x0,%cl
604f(2): xor %eax,%eax
6051(2): test %cl,%cl
6053(2): jnz 0xd(%rip)
6055(4): add $0x8,%rsp
6059(1): ret near (%rsp)
605a(6): nop 0x0(%rax,%rax,1)
6060(7): lea 0x1186(%rip),%rdi
6067(5): mov $0x6,%ecx
606c(3): mov %rdx,%rsi
606f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
6071(3): setnbe %al
6074(2): sbb $0x0,%al
6076(2): test %al,%al
6078(3): setnz %al
607b(4): add $0x8,%rsp
607f(1): ret near (%rsp)

"locale_charset" :
6080(4): sub $0x8,%rsp
6084(5): mov $0xe,%edi
6089(5): call 0xffffb637(%rip)
608e(3): test %rax,%rax
6091(2): jz 0x1f(%rip)
6093(3): cmp $0x0,(%rax)
6096(7): lea 0x1156(%rip),%rdx
609d(4): cmove %rdx,%rax
60a1(4): add $0x8,%rsp
60a5(1): ret near (%rsp)
60a6(a): nop 0x0(%rax,%rax,1)
60b0(7): lea 0x113c(%rip),%rax
60b7(4): add $0x8,%rsp
60bb(1): ret near (%rsp)

"__libc_csu_init" :
60c0(2): push %r15
60c2(2): push %r14
60c4(3): mov %rdx,%r15
60c7(2): push %r13
60c9(2): push %r12
60cb(7): lea 0x2029be(%rip),%r12
60d2(1): push %rbp
60d3(7): lea 0x2029be(%rip),%rbp
60da(1): push %rbx
60db(3): mov %edi,%r13d
60de(3): mov %rsi,%r14
60e1(3): sub %r12,%rbp
60e4(4): sub $0x8,%rsp
60e8(4): sar $0x3,%rbp
60ec(5): call 0xffffb3a4(%rip)
60f1(3): test %rbp,%rbp
60f4(2): jz 0x22(%rip)
60f6(2): xor %ebx,%ebx
60f8(8): nop 0x0(%rax,%rax,1)
6100(3): mov %r15,%rdx
6103(3): mov %r14,%rsi
6106(3): mov %r13d,%edi
6109(4): call 0x0(%r12,%rbx,8)
610d(4): add $0x1,%rbx
6111(3): cmp %rbx,%rbp
6114(2): jnz 0xffffffec(%rip)
6116(4): add $0x8,%rsp
611a(1): pop %rbx
611b(1): pop %rbp
611c(2): pop %r12
611e(2): pop %r13
6120(2): pop %r14
6122(2): pop %r15
6124(1): ret near (%rsp)

"atexit" :
6140(7): mov 0x202ec1(%rip),%rdx
6147(2): xor %esi,%esi
6149(5): jmp 0xffffb607(%rip)

"_fini" :
6150(4): sub $0x8,%rsp
6154(4): add $0x8,%rsp
6158(1): ret near (%rsp)

