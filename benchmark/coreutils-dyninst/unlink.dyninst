
"free@plt" :
11f0(6): jmp 0x205c8a(%rip)
11f6(5): push $0x0

"abort@plt" :
1200(6): jmp 0x205c82(%rip)
1206(5): push $0x1

"__errno_location@plt" :
1210(6): jmp 0x205c7a(%rip)
1216(5): push $0x2

"unlink@plt" :
1220(6): jmp 0x205c72(%rip)
1226(5): push $0x3

"strncmp@plt" :
1230(6): jmp 0x205c6a(%rip)
1236(5): push $0x4

"_exit@plt" :
1240(6): jmp 0x205c62(%rip)
1246(5): push $0x5

"__fpending@plt" :
1250(6): jmp 0x205c5a(%rip)
1256(5): push $0x6

"textdomain@plt" :
1260(6): jmp 0x205c52(%rip)
1266(5): push $0x7

"fclose@plt" :
1270(6): jmp 0x205c4a(%rip)
1276(5): push $0x8

"bindtextdomain@plt" :
1280(6): jmp 0x205c42(%rip)
1286(5): push $0x9

"dcgettext@plt" :
1290(6): jmp 0x205c3a(%rip)
1296(5): push $0xa

"__ctype_get_mb_cur_max@plt" :
12a0(6): jmp 0x205c32(%rip)
12a6(5): push $0xb

"strlen@plt" :
12b0(6): jmp 0x205c2a(%rip)
12b6(5): push $0xc

"__stack_chk_fail@plt" :
12c0(6): jmp 0x205c22(%rip)
12c6(5): push $0xd

"getopt_long@plt" :
12d0(6): jmp 0x205c1a(%rip)
12d6(5): push $0xe

"mbrtowc@plt" :
12e0(6): jmp 0x205c12(%rip)
12e6(5): push $0xf

"strrchr@plt" :
12f0(6): jmp 0x205c0a(%rip)
12f6(5): push $0x10

"lseek@plt" :
1300(6): jmp 0x205c02(%rip)
1306(5): push $0x11

"memset@plt" :
1310(6): jmp 0x205bfa(%rip)
1316(5): push $0x12

"memcmp@plt" :
1320(6): jmp 0x205bf2(%rip)
1326(5): push $0x13

"fputs_unlocked@plt" :
1330(6): jmp 0x205bea(%rip)
1336(5): push $0x14

"calloc@plt" :
1340(6): jmp 0x205be2(%rip)
1346(5): push $0x15

"memcpy@plt" :
1350(6): jmp 0x205bda(%rip)
1356(5): push $0x16

"fileno@plt" :
1360(6): jmp 0x205bd2(%rip)
1366(5): push $0x17

"malloc@plt" :
1370(6): jmp 0x205bca(%rip)
1376(5): push $0x18

"fflush@plt" :
1380(6): jmp 0x205bc2(%rip)
1386(5): push $0x19

"nl_langinfo@plt" :
1390(6): jmp 0x205bba(%rip)
1396(5): push $0x1a

"__freading@plt" :
13a0(6): jmp 0x205bb2(%rip)
13a6(5): push $0x1b

"realloc@plt" :
13b0(6): jmp 0x205baa(%rip)
13b6(5): push $0x1c

"setlocale@plt" :
13c0(6): jmp 0x205ba2(%rip)
13c6(5): push $0x1d

"__printf_chk@plt" :
13d0(6): jmp 0x205b9a(%rip)
13d6(5): push $0x1e

"error@plt" :
13e0(6): jmp 0x205b92(%rip)
13e6(5): push $0x1f

"fseeko@plt" :
13f0(6): jmp 0x205b8a(%rip)
13f6(5): push $0x20

"__cxa_atexit@plt" :
1400(6): jmp 0x205b82(%rip)
1406(5): push $0x21

"exit@plt" :
1410(6): jmp 0x205b7a(%rip)
1416(5): push $0x22

"fwrite@plt" :
1420(6): jmp 0x205b72(%rip)
1426(5): push $0x23

"__fprintf_chk@plt" :
1430(6): jmp 0x205b6a(%rip)
1436(5): push $0x24

"mbsinit@plt" :
1440(6): jmp 0x205b62(%rip)
1446(5): push $0x25

"iswprint@plt" :
1450(6): jmp 0x205b5a(%rip)
1456(5): push $0x26

"__ctype_b_loc@plt" :
1460(6): jmp 0x205b52(%rip)
1466(5): push $0x27

".plt.got" :
1470(6): jmp 0x205b6a(%rip)
1476(2): nop 

"_init" :
11c0(4): sub $0x8,%rsp
11c4(7): mov 0x205e05(%rip),%rax
11cb(3): test %rax,%rax
11ce(2): jz 0x4(%rip)
11d0(2): call %rax
11d2(4): add $0x8,%rsp
11d6(1): ret near (%rsp)

"main" :
1480(1): push %rbp
1481(1): push %rbx
1482(2): mov %edi,%ebp
1484(3): mov %rsi,%rbx
1487(4): sub $0x8,%rsp
148b(3): mov (%rsi),%rdi
148e(5): call 0x912(%rip)
1493(7): lea 0x3aa7(%rip),%rsi
149a(5): mov $0x6,%edi
149f(5): call 0xffffff21(%rip)
14a4(7): lea 0x3303(%rip),%rsi
14ab(7): lea 0x32d3(%rip),%rdi
14b2(5): call 0xfffffdce(%rip)
14b7(7): lea 0x32c7(%rip),%rdi
14be(5): call 0xfffffda2(%rip)
14c3(7): lea 0x5a6(%rip),%rdi
14ca(5): call 0x3206(%rip)
14cf(7): lea 0x32f0(%rip),%rax
14d6(4): sub $0x8,%rsp
14da(7): mov 0x205b2f(%rip),%r8
14e1(2): push $0x0
14e3(7): lea 0x3297(%rip),%rcx
14ea(7): lea 0x3213(%rip),%rdx
14f1(1): push %rax
14f2(7): lea 0x207(%rip),%rax
14f9(6): mov $0x1,%r9d
14ff(3): mov %rbx,%rsi
1502(2): mov %ebp,%edi
1504(1): push %rax
1505(2): xor %eax,%eax
1507(5): call 0x759(%rip)
150c(6): mov 0x205b7e(%rip),%eax
1512(4): add $0x20,%rsp
1516(2): cmp %ebp,%eax
1518(2): jnl 0x26(%rip)
151a(3): movsxd %eax,%rdx
151d(3): add $0x1,%eax
1520(2): cmp %ebp,%eax
1522(6): jl 0x8e(%rip)
1528(4): mov 0x0(%rbx,%rdx,8),%rdi
152c(5): call 0xfffffcf4(%rip)
1531(2): test %eax,%eax
1533(2): jnz 0x36(%rip)
1535(4): add $0x8,%rsp
1539(2): xor %eax,%eax
153b(1): pop %rbx
153c(1): pop %rbp
153d(1): ret near (%rsp)
153e(7): lea 0x328f(%rip),%rsi
1545(5): mov $0x5,%edx
154a(2): xor %edi,%edi
154c(5): call 0xfffffd44(%rip)
1551(2): xor %edi,%edi
1553(3): mov %rax,%rdx
1556(2): xor %esi,%esi
1558(2): xor %eax,%eax
155a(5): call 0xfffffe86(%rip)
155f(5): mov $0x1,%edi
1564(5): call 0x19c(%rip)
1569(7): movsxd 0x205b20(%rip),%rax
1570(5): mov $0x4,%edi
1575(4): mov 0x0(%rbx,%rax,8),%rsi
1579(5): call 0x2267(%rip)
157e(7): lea 0x3270(%rip),%rsi
1585(5): mov $0x5,%edx
158a(2): xor %edi,%edi
158c(3): mov %rax,%rbp
158f(5): call 0xfffffd01(%rip)
1594(3): mov %rax,%rbx
1597(5): call 0xfffffc79(%rip)
159c(2): mov (%rax),%esi
159e(3): mov %rbp,%rcx
15a1(3): mov %rbx,%rdx
15a4(5): mov $0x1,%edi
15a9(2): xor %eax,%eax
15ab(5): call 0xfffffe35(%rip)
15b0(5): mov 0x8(%rbx,%rdx,8),%rdi
15b5(5): call 0x24fb(%rip)
15ba(7): lea 0x3223(%rip),%rsi
15c1(3): mov %rax,%rbx
15c4(5): mov $0x5,%edx
15c9(2): xor %edi,%edi
15cb(5): call 0xfffffcc5(%rip)
15d0(2): xor %edi,%edi
15d2(3): mov %rax,%rdx
15d5(3): mov %rbx,%rcx
15d8(2): xor %esi,%esi
15da(2): xor %eax,%eax
15dc(5): call 0xfffffe04(%rip)
15e1(5): mov $0x1,%edi
15e6(5): call 0x11a(%rip)

"_start" :
15f0(2): xor %ebp,%ebp
15f2(3): mov %rdx,%r9
15f5(1): pop %rsi
15f6(3): mov %rsp,%rdx
15f9(4): and $0xfffffff0,%rsp
15fd(1): push %rax
15fe(1): push %rsp
15ff(7): lea 0x30ba(%rip),%r8
1606(7): lea 0x3043(%rip),%rcx
160d(7): lea 0xfffffe6c(%rip),%rdi
1614(6): call 0x2059ae(%rip)
161a(1): hlt 

"deregister_tm_clones" :
1620(7): lea 0x205a59(%rip),%rdi
1627(1): push %rbp
1628(7): lea 0x205a51(%rip),%rax
162f(3): cmp %rdi,%rax
1632(3): mov %rsp,%rbp
1635(2): jz 0x1b(%rip)
1637(7): mov 0x205982(%rip),%rax
163e(3): test %rax,%rax
1641(2): jz 0xf(%rip)
1643(1): pop %rbp
1644(2): jmp %rax
1646(a): nop 0x0(%rax,%rax,1)
1650(1): pop %rbp
1651(1): ret near (%rsp)

"register_tm_clones" :
1660(7): lea 0x205a19(%rip),%rdi
1667(7): lea 0x205a12(%rip),%rsi
166e(1): push %rbp
166f(3): sub %rdi,%rsi
1672(3): mov %rsp,%rbp
1675(4): sar $0x3,%rsi
1679(3): mov %rsi,%rax
167c(4): shr $0x3f,%rax
1680(3): add %rax,%rsi
1683(3): sar $0x1,%rsi
1686(2): jz 0x1a(%rip)
1688(7): mov 0x205949(%rip),%rax
168f(3): test %rax,%rax
1692(2): jz 0xe(%rip)
1694(1): pop %rbp
1695(2): jmp %rax
1697(9): nop 0x0(%rax,%rax,1)
16a0(1): pop %rbp
16a1(1): ret near (%rsp)

"__do_global_dtors_aux" :
16b0(7): cmp $0x0,0x205a11(%rip)
16b7(2): jnz 0x31(%rip)
16b9(8): cmp $0x0,0x20591f(%rip)
16c1(1): push %rbp
16c2(3): mov %rsp,%rbp
16c5(2): jz 0xe(%rip)
16c7(7): mov 0x20593a(%rip),%rdi
16ce(5): call 0xfffffda2(%rip)
16d3(5): call 0xffffff4d(%rip)
16d8(7): mov $0x1,0x2059e9(%rip)
16df(1): pop %rbp
16e0(1): ret near (%rsp)
16e1(7): nop 0x0(%rax)
16e8(2): REP ret near (%rsp)

"frame_dummy" :
16f0(1): push %rbp
16f1(3): mov %rsp,%rbp
16f4(1): pop %rbp
16f5(5): jmp 0xffffff6b(%rip)

"usage" :
1700(2): push %r13
1702(2): push %r12
1704(5): mov $0x5,%edx
1709(1): push %rbp
170a(1): push %rbx
170b(2): mov %edi,%ebp
170d(7): sub $0x88,%rsp
1714(7): mov 0x2059c5(%rip),%rbx
171b(9): mov $0x28,%rax
1724(5): mov %rax,0x78(%rsp)
1729(2): xor %eax,%eax
172b(2): test %edi,%edi
172d(2): jz 0x30(%rip)
172f(7): lea 0x30d2(%rip),%rsi
1736(2): xor %edi,%edi
1738(5): call 0xfffffb58(%rip)
173d(7): mov 0x20597c(%rip),%rdi
1744(3): mov %rax,%rdx
1747(3): mov %rbx,%rcx
174a(5): mov $0x1,%esi
174f(2): xor %eax,%eax
1751(5): call 0xfffffcdf(%rip)
1756(2): mov %ebp,%edi
1758(5): call 0xfffffcb8(%rip)
175d(7): lea 0x30cc(%rip),%rsi
1764(2): xor %edi,%edi
1766(5): call 0xfffffb2a(%rip)
176b(3): mov %rbx,%rcx
176e(3): mov %rbx,%rdx
1771(3): mov %rax,%rsi
1774(5): mov $0x1,%edi
1779(2): xor %eax,%eax
177b(5): call 0xfffffc55(%rip)
1780(7): mov 0x205901(%rip),%rbx
1787(7): lea 0x30ca(%rip),%rsi
178e(5): mov $0x5,%edx
1793(2): xor %edi,%edi
1795(5): call 0xfffffafb(%rip)
179a(3): mov %rbx,%rsi
179d(3): mov %rax,%rdi
17a0(5): call 0xfffffb90(%rip)
17a5(7): mov 0x2058dc(%rip),%rbx
17ac(7): lea 0x30e5(%rip),%rsi
17b3(5): mov $0x5,%edx
17b8(2): xor %edi,%edi
17ba(5): call 0xfffffad6(%rip)
17bf(3): mov %rbx,%rsi
17c2(3): mov %rax,%rdi
17c5(5): call 0xfffffb6b(%rip)
17ca(7): mov 0x2058b7(%rip),%rbx
17d1(7): lea 0x30f0(%rip),%rsi
17d8(5): mov $0x5,%edx
17dd(2): xor %edi,%edi
17df(5): call 0xfffffab1(%rip)
17e4(3): mov %rbx,%rsi
17e7(3): mov %rax,%rdi
17ea(7): lea 0x2f13(%rip),%rbx
17f1(5): call 0xfffffb3f(%rip)
17f6(7): lea 0x2f0e(%rip),%rax
17fd(7): lea 0x2f48(%rip),%rcx
1804(9): mov $0x0,0x60(%rsp)
180d(9): mov $0x0,0x68(%rsp)
1816(3): mov %rsp,%rdx
1819(4): mov %rax,(%rsp)
181d(7): lea 0x2ee9(%rip),%rax
1824(5): mov %rcx,0x30(%rsp)
1829(7): lea 0x2f26(%rip),%rcx
1830(5): mov %rax,0x8(%rsp)
1835(7): lea 0x2f49(%rip),%rax
183c(5): mov %rcx,0x40(%rsp)
1841(7): lea 0x2f18(%rip),%rcx
1848(5): mov %rax,0x10(%rsp)
184d(7): lea 0x2ec9(%rip),%rax
1854(5): mov %rcx,0x50(%rsp)
1859(5): mov %rax,0x18(%rsp)
185e(7): lea 0x2ece(%rip),%rax
1865(5): mov %rax,0x20(%rsp)
186a(7): lea 0x2ecc(%rip),%rax
1871(5): mov %rax,0x28(%rsp)
1876(5): mov %rax,0x38(%rsp)
187b(5): mov %rax,0x48(%rsp)
1880(5): mov %rax,0x58(%rsp)
1885(3): nop (%rax)
1888(4): add $0x10,%rdx
188c(3): mov (%rdx),%rdi
188f(3): test %rdi,%rdi
1892(2): jz 0x15(%rip)
1894(5): mov $0x7,%ecx
1899(3): mov %rbx,%rsi
189c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
189e(3): setnbe %al
18a1(2): sbb $0x0,%al
18a3(2): test %al,%al
18a5(2): jnz 0xffffffe3(%rip)
18a7(4): mov 0x8(%rdx),%r12
18ab(2): xor %edi,%edi
18ad(5): mov $0x5,%edx
18b2(7): lea 0x2eb1(%rip),%rsi
18b9(3): test %r12,%r12
18bc(6): jz 0xc7(%rip)
18c2(5): call 0xfffff9ce(%rip)
18c7(7): lea 0x3032(%rip),%rcx
18ce(7): lea 0x2eac(%rip),%rdx
18d5(3): mov %rax,%rsi
18d8(5): mov $0x1,%edi
18dd(2): xor %eax,%eax
18df(5): call 0xfffffaf1(%rip)
18e4(2): xor %esi,%esi
18e6(5): mov $0x5,%edi
18eb(5): call 0xfffffad5(%rip)
18f0(3): test %rax,%rax
18f3(2): jz 0x1e(%rip)
18f5(7): lea 0x2e93(%rip),%rsi
18fc(5): mov $0x3,%edx
1901(3): mov %rax,%rdi
1904(5): call 0xfffff92c(%rip)
1909(2): test %eax,%eax
190b(6): jnz 0x10d(%rip)
1911(7): lea 0x2e7b(%rip),%rsi
1918(2): xor %edi,%edi
191a(5): mov $0x5,%edx
191f(5): call 0xfffff971(%rip)
1924(7): lea 0x2dd9(%rip),%rcx
192b(7): lea 0x2fce(%rip),%rdx
1932(3): mov %rax,%rsi
1935(5): mov $0x1,%edi
193a(2): xor %eax,%eax
193c(5): call 0xfffffa94(%rip)
1941(3): cmp %rbx,%r12
1944(7): lea 0x2ddc(%rip),%rcx
194b(7): lea 0x35ef(%rip),%rbx
1952(4): cmove %rcx,%rbx
1956(7): lea 0x3013(%rip),%rsi
195d(2): xor %edi,%edi
195f(5): mov $0x5,%edx
1964(5): call 0xfffff92c(%rip)
1969(3): mov %rbx,%rcx
196c(3): mov %rax,%rsi
196f(3): mov %r12,%rdx
1972(5): mov $0x1,%edi
1977(2): xor %eax,%eax
1979(5): call 0xfffffa57(%rip)
197e(5): jmp 0xfffffdd8(%rip)
1983(5): call 0xfffff90d(%rip)
1988(7): lea 0x2f71(%rip),%rcx
198f(7): lea 0x2deb(%rip),%rdx
1996(3): mov %rax,%rsi
1999(5): mov $0x1,%edi
199e(2): xor %eax,%eax
19a0(5): call 0xfffffa30(%rip)
19a5(2): xor %esi,%esi
19a7(5): mov $0x5,%edi
19ac(5): call 0xfffffa14(%rip)
19b1(3): test %rax,%rax
19b4(2): jz 0x1a(%rip)
19b6(7): lea 0x2dd2(%rip),%rsi
19bd(5): mov $0x3,%edx
19c2(3): mov %rax,%rdi
19c5(5): call 0xfffff86b(%rip)
19ca(2): test %eax,%eax
19cc(2): jnz 0x45(%rip)
19ce(7): lea 0x2dbe(%rip),%rsi
19d5(5): mov $0x5,%edx
19da(2): xor %edi,%edi
19dc(7): lea 0x2d21(%rip),%r12
19e3(7): lea 0x2d3d(%rip),%rbx
19ea(5): call 0xfffff8a6(%rip)
19ef(7): lea 0x2d0e(%rip),%rcx
19f6(7): lea 0x2f03(%rip),%rdx
19fd(3): mov %rax,%rsi
1a00(5): mov $0x1,%edi
1a05(2): xor %eax,%eax
1a07(5): call 0xfffff9c9(%rip)
1a0c(5): jmp 0xffffff4a(%rip)
1a11(7): lea 0x2cec(%rip),%r12
1a18(7): mov 0x205669(%rip),%r13
1a1f(7): lea 0x2f02(%rip),%rsi
1a26(2): xor %edi,%edi
1a28(5): mov $0x5,%edx
1a2d(5): call 0xfffff863(%rip)
1a32(3): mov %r13,%rsi
1a35(3): mov %rax,%rdi
1a38(5): call 0xfffff8f8(%rip)
1a3d(5): jmp 0xfffffed4(%rip)

"close_stdout_set_file_name" :
1a50(7): mov %rdi,0x205681(%rip)
1a57(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
1a60(7): mov %dil,0x205669(%rip)
1a67(1): ret near (%rsp)

"close_stdout" :
1a70(1): push %rbp
1a71(1): push %rbx
1a72(4): sub $0x8,%rsp
1a76(7): mov 0x20560b(%rip),%rdi
1a7d(5): call 0x2993(%rip)
1a82(2): test %eax,%eax
1a84(2): jz 0x18(%rip)
1a86(5): call 0xfffff78a(%rip)
1a8b(7): cmp $0x0,0x20563e(%rip)
1a92(3): mov %rax,%rbx
1a95(2): jz 0x1e(%rip)
1a97(3): cmp $0x20,(%rax)
1a9a(2): jnz 0x19(%rip)
1a9c(7): mov 0x20561d(%rip),%rdi
1aa3(5): call 0x296d(%rip)
1aa8(2): test %eax,%eax
1aaa(2): jnz 0x48(%rip)
1aac(4): add $0x8,%rsp
1ab0(1): pop %rbx
1ab1(1): pop %rbp
1ab2(1): ret near (%rsp)
1ab3(7): lea 0x2eee(%rip),%rsi
1aba(2): xor %edi,%edi
1abc(5): mov $0x5,%edx
1ac1(5): call 0xfffff7cf(%rip)
1ac6(7): mov 0x20560b(%rip),%rdi
1acd(3): mov %rax,%rbp
1ad0(3): test %rdi,%rdi
1ad3(2): jz 0x2a(%rip)
1ad5(5): call 0x1ddb(%rip)
1ada(2): mov (%rbx),%esi
1adc(7): lea 0x2ed1(%rip),%rdx
1ae3(3): mov %rax,%rcx
1ae6(3): mov %rbp,%r8
1ae9(2): xor %edi,%edi
1aeb(2): xor %eax,%eax
1aed(5): call 0xfffff8f3(%rip)
1af2(6): mov 0x205520(%rip),%edi
1af8(5): call 0xfffff748(%rip)
1afd(2): mov (%rbx),%esi
1aff(7): lea 0x2eb2(%rip),%rdx
1b06(3): mov %rax,%rcx
1b09(2): xor %edi,%edi
1b0b(2): xor %eax,%eax
1b0d(5): call 0xfffff8d3(%rip)
1b12(2): jmp 0xffffffe0(%rip)

"parse_long_options" :
1b20(2): push %r13
1b22(2): push %r12
1b24(3): mov %r8,%r13
1b27(1): push %rbp
1b28(1): push %rbx
1b29(3): mov %rdx,%rbp
1b2c(3): mov %rcx,%r12
1b2f(7): sub $0xe8,%rsp
1b36(2): test %al,%al
1b38(2): jz 0x3c(%rip)
1b3a(5): movaps %xmm0,0x60(%rsp)
1b3f(5): movaps %xmm1,0x70(%rsp)
1b44(8): movaps %xmm2,0x80(%rsp)
1b4c(8): movaps %xmm3,0x90(%rsp)
1b54(8): movaps %xmm4,0xa0(%rsp)
1b5c(8): movaps %xmm5,0xb0(%rsp)
1b64(8): movaps %xmm6,0xc0(%rsp)
1b6c(8): movaps %xmm7,0xd0(%rsp)
1b74(9): mov $0x28,%rax
1b7d(5): mov %rax,0x28(%rsp)
1b82(2): xor %eax,%eax
1b84(3): cmp $0x2,%edi
1b87(6): mov 0x205513(%rip),%ebx
1b8d(a): mov $0x0,0x205509(%rip)
1b97(2): jz 0x39(%rip)
1b99(5): mov 0x28(%rsp),%rax
1b9e(9): xor $0x28,%rax
1ba7(6): mov %ebx,0x2054f3(%rip)
1bad(a): mov $0x0,0x2054d9(%rip)
1bb7(6): jnz 0xa3(%rip)
1bbd(7): add $0xe8,%rsp
1bc4(1): pop %rbx
1bc5(1): pop %rbp
1bc6(2): pop %r12
1bc8(2): pop %r13
1bca(1): ret near (%rsp)
1bcb(5): nop 0x0(%rax,%rax,1)
1bd0(7): lea 0x204fe9(%rip),%rcx
1bd7(7): lea 0x2ddd(%rip),%rdx
1bde(3): xor %r8d,%r8d
1be1(5): mov %r9,0x8(%rsp)
1be6(5): call 0xfffff6ea(%rip)
1beb(3): cmp $0xff,%eax
1bee(2): jz 0xffffffab(%rip)
1bf0(3): cmp $0x68,%eax
1bf3(5): mov 0x8(%rsp),%r9
1bf8(2): jz 0x58(%rip)
1bfa(3): cmp $0x76,%eax
1bfd(2): jnz 0xffffff9c(%rip)
1bff(8): lea 0x110(%rsp),%rax
1c07(7): mov 0x20547a(%rip),%rdi
1c0e(5): lea 0x10(%rsp),%r8
1c13(3): mov %r13,%rcx
1c16(3): mov %r12,%rdx
1c19(3): mov %rbp,%rsi
1c1c(5): mov %rax,0x18(%rsp)
1c21(5): lea 0x30(%rsp),%rax
1c26(8): mov $0x30,0x10(%rsp)
1c2e(8): mov $0x30,0x14(%rsp)
1c36(5): mov %rax,0x20(%rsp)
1c3b(5): call 0x22d5(%rip)
1c40(2): xor %edi,%edi
1c42(5): call 0xfffff7ce(%rip)
1c47(9): nop 0x0(%rax,%rax,1)
1c50(2): xor %edi,%edi
1c52(3): call %r9
1c55(5): jmp 0xffffff44(%rip)
1c5a(5): call 0xfffff666(%rip)

"parse_gnu_standard_options_only" :
1c60(2): push %r14
1c62(2): push %r13
1c64(3): mov %r8,%r14
1c67(2): push %r12
1c69(1): push %rbp
1c6a(3): mov %rdx,%r12
1c6d(1): push %rbx
1c6e(3): mov %rcx,%r13
1c71(7): sub $0xd0,%rsp
1c78(2): test %al,%al
1c7a(8): mov 0x100(%rsp),%rbp
1c82(2): jz 0x39(%rip)
1c84(5): movaps %xmm0,0x50(%rsp)
1c89(5): movaps %xmm1,0x60(%rsp)
1c8e(5): movaps %xmm2,0x70(%rsp)
1c93(8): movaps %xmm3,0x80(%rsp)
1c9b(8): movaps %xmm4,0x90(%rsp)
1ca3(8): movaps %xmm5,0xa0(%rsp)
1cab(8): movaps %xmm6,0xb0(%rsp)
1cb3(8): movaps %xmm7,0xc0(%rsp)
1cbb(9): mov $0x28,%rax
1cc4(5): mov %rax,0x18(%rsp)
1cc9(2): xor %eax,%eax
1ccb(7): lea 0x326f(%rip),%rdx
1cd2(7): lea 0x2ce2(%rip),%rax
1cd9(3): test %r9b,%r9b
1cdc(7): lea 0x204edd(%rip),%rcx
1ce3(4): cmove %rax,%rdx
1ce7(3): xor %r8d,%r8d
1cea(6): mov 0x2053b0(%rip),%ebx
1cf0(a): mov $0x1,0x2053a6(%rip)
1cfa(5): call 0xfffff5d6(%rip)
1cff(3): cmp $0xff,%eax
1d02(2): jz 0x66(%rip)
1d04(3): cmp $0x68,%eax
1d07(6): jz 0x89(%rip)
1d0d(3): cmp $0x76,%eax
1d10(2): jnz 0x50(%rip)
1d12(8): lea 0x108(%rsp),%rax
1d1a(7): mov 0x205367(%rip),%rdi
1d21(3): mov %rsp,%r8
1d24(3): mov %r14,%rcx
1d27(3): mov %r13,%rdx
1d2a(3): mov %r12,%rsi
1d2d(5): mov %rax,0x8(%rsp)
1d32(5): lea 0x20(%rsp),%rax
1d37(7): mov $0x30,(%rsp)
1d3e(8): mov $0x30,0x4(%rsp)
1d46(5): mov %rax,0x10(%rsp)
1d4b(5): call 0x21c5(%rip)
1d50(2): xor %edi,%edi
1d52(5): call 0xfffff6be(%rip)
1d57(9): nop 0x0(%rax,%rax,1)
1d60(6): mov 0x2052b2(%rip),%edi
1d66(2): call %rbp
1d68(5): mov 0x18(%rsp),%rax
1d6d(9): xor $0x28,%rax
1d76(6): mov %ebx,0x205324(%rip)
1d7c(2): jnz 0x1a(%rip)
1d7e(7): add $0xd0,%rsp
1d85(1): pop %rbx
1d86(1): pop %rbp
1d87(2): pop %r12
1d89(2): pop %r13
1d8b(2): pop %r14
1d8d(1): ret near (%rsp)
1d8e(2): nop 
1d90(2): xor %edi,%edi
1d92(2): call %rbp
1d94(2): jmp 0xffffffd4(%rip)
1d96(5): call 0xfffff52a(%rip)

"set_program_name" :
1da0(3): test %rdi,%rdi
1da3(1): push %rbx
1da4(2): jz 0x79(%rip)
1da6(5): mov $0x2f,%esi
1dab(3): mov %rdi,%rbx
1dae(5): call 0xfffff542(%rip)
1db3(3): test %rax,%rax
1db6(2): jz 0x57(%rip)
1db8(4): lea 0x1(%rax),%r8
1dbc(3): mov %r8,%rdx
1dbf(3): sub %rbx,%rdx
1dc2(4): cmp $0x6,%rdx
1dc6(2): jle 0x47(%rip)
1dc8(4): lea 0xfffffffa(%rax),%rsi
1dcc(7): lea 0x2c35(%rip),%rdi
1dd3(5): mov $0x7,%ecx
1dd8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1dda(3): setnbe %dl
1ddd(3): sbb $0x0,%dl
1de0(2): test %dl,%dl
1de2(2): jnz 0x2b(%rip)
1de4(7): lea 0x2c25(%rip),%rdi
1deb(5): mov $0x3,%ecx
1df0(3): mov %r8,%rsi
1df3(3): mov %r8,%rbx
1df6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1df8(3): setnbe %dl
1dfb(3): sbb $0x0,%dl
1dfe(2): test %dl,%dl
1e00(2): jnz 0xd(%rip)
1e02(4): lea 0x4(%rax),%rbx
1e06(7): mov %rbx,0x205273(%rip)
1e0d(7): mov %rbx,0x2052cc(%rip)
1e14(7): mov %rbx,0x20527d(%rip)
1e1b(1): pop %rbx
1e1c(1): ret near (%rsp)
1e1d(7): mov 0x20529c(%rip),%rcx
1e24(7): lea 0x2ba5(%rip),%rdi
1e2b(5): mov $0x37,%edx
1e30(5): mov $0x1,%esi
1e35(5): call 0xfffff5eb(%rip)
1e3a(5): call 0xfffff3c6(%rip)

"gettext_quote.part.1" :
1e40(1): push %rbp
1e41(1): push %rbx
1e42(3): mov %rdi,%rbp
1e45(2): mov %esi,%ebx
1e47(4): sub $0x8,%rsp
1e4b(5): call 0x26a5(%rip)
1e50(3): movzx (%rax),%edx
1e53(3): and $0xdf,%edx
1e56(3): cmp $0x55,%dl
1e59(2): jz 0x77(%rip)
1e5b(3): cmp $0x47,%dl
1e5e(2): jz 0x22(%rip)
1e60(7): lea 0x2bbc(%rip),%rax
1e67(7): lea 0x2bb7(%rip),%rdx
1e6e(3): cmp $0x9,%ebx
1e71(4): cmovne %rdx,%rax
1e75(4): add $0x8,%rsp
1e79(1): pop %rbx
1e7a(1): pop %rbp
1e7b(1): ret near (%rsp)
1e7c(4): nop 0x0(%rax)
1e80(4): movzx 0x1(%rax),%edx
1e84(3): and $0xdf,%edx
1e87(3): cmp $0x42,%dl
1e8a(2): jnz 0xffffffd6(%rip)
1e8c(4): cmp $0x31,0x2(%rax)
1e90(2): jnz 0xffffffd0(%rip)
1e92(4): cmp $0x38,0x3(%rax)
1e96(2): jnz 0xffffffca(%rip)
1e98(4): cmp $0x30,0x4(%rax)
1e9c(2): jnz 0xffffffc4(%rip)
1e9e(4): cmp $0x33,0x5(%rax)
1ea2(2): jnz 0xffffffbe(%rip)
1ea4(4): cmp $0x30,0x6(%rax)
1ea8(2): jnz 0xffffffb8(%rip)
1eaa(4): cmp $0x0,0x7(%rax)
1eae(2): jnz 0xffffffb2(%rip)
1eb0(4): cmp $0x60,0x0(%rbp)
1eb4(7): lea 0x2b61(%rip),%rax
1ebb(7): lea 0x2b5e(%rip),%rdx
1ec2(4): cmovne %rdx,%rax
1ec6(4): add $0x8,%rsp
1eca(1): pop %rbx
1ecb(1): pop %rbp
1ecc(1): ret near (%rsp)
1ecd(3): nop (%rax)
1ed0(4): movzx 0x1(%rax),%edx
1ed4(3): and $0xdf,%edx
1ed7(3): cmp $0x54,%dl
1eda(2): jnz 0xffffff86(%rip)
1edc(4): movzx 0x2(%rax),%edx
1ee0(3): and $0xdf,%edx
1ee3(3): cmp $0x46,%dl
1ee6(6): jnz 0xffffff7a(%rip)
1eec(4): cmp $0x2d,0x3(%rax)
1ef0(6): jnz 0xffffff70(%rip)
1ef6(4): cmp $0x38,0x4(%rax)
1efa(6): jnz 0xffffff66(%rip)
1f00(4): cmp $0x0,0x5(%rax)
1f04(6): jnz 0xffffff5c(%rip)
1f0a(4): cmp $0x60,0x0(%rbp)
1f0e(7): lea 0x2aff(%rip),%rax
1f15(7): lea 0x2afc(%rip),%rdx
1f1c(4): cmovne %rdx,%rax
1f20(4): add $0x8,%rsp
1f24(1): pop %rbx
1f25(1): pop %rbp
1f26(1): ret near (%rsp)

"quotearg_buffer_restyled" :
1f30(2): push %r15
1f32(2): push %r14
1f34(3): mov %r8d,%r15d
1f37(2): push %r13
1f39(2): push %r12
1f3b(3): mov %rdi,%r14
1f3e(1): push %rbp
1f3f(1): push %rbx
1f40(3): mov %r9d,%ebx
1f43(3): mov %rsi,%r13
1f46(3): mov %rcx,%rbp
1f49(3): and $0x2,%ebx
1f4c(7): sub $0xb8,%rsp
1f53(8): mov 0xf0(%rsp),%rax
1f5b(5): mov %rdx,0x10(%rsp)
1f60(5): mov %r8d,0x8(%rsp)
1f65(5): mov %r9d,0x78(%rsp)
1f6a(5): mov %rax,0x20(%rsp)
1f6f(8): mov 0xf8(%rsp),%rax
1f77(5): mov %rax,0x68(%rsp)
1f7c(8): mov 0x100(%rsp),%rax
1f84(5): mov %rax,0x60(%rsp)
1f89(9): mov $0x28,%rax
1f92(8): mov %rax,0xa8(%rsp)
1f9a(2): xor %eax,%eax
1f9c(5): call 0xfffff304(%rip)
1fa1(4): cmp $0xa,%r15d
1fa5(5): mov %rax,0x58(%rsp)
1faa(6): jnbe 0x11b5(%rip)
1fb0(7): lea 0x2ac9(%rip),%rcx
1fb7(3): mov %r15d,%edx
1fba(4): movsxd 0x0(%rcx,%rdx,4),%rax
1fbe(3): add %rcx,%rax
1fc1(2): jmp %rax
1fc3(5): mov $0x1,0xe(%rsp)
1fc8(5): mov $0x0,0x7c(%rsp)
1fcd(3): xor %r12d,%r12d
1fd0(9): mov $0x0,0x50(%rsp)
1fd9(5): mov $0x1,0xf(%rsp)
1fde(5): mov $0x0,0xd(%rsp)
1fe3(7): lea 0x2a3b(%rip),%rax
1fea(9): mov $0x1,0x18(%rsp)
1ff3(3): xor %r15d,%r15d
1ff6(8): mov $0x2,0x8(%rsp)
1ffe(5): mov %rax,0x48(%rsp)
2003(3): xor %r11d,%r11d
2006(3): mov %rbp,%rax
2009(3): mov %r12d,%r8d
200c(3): mov %r11,%rbp
200f(3): mov %rax,%r11
2012(6): nop 0x0(%rax,%rax,1)
2018(3): cmp %rbp,%r11
201b(4): setnz %r12b
201f(4): cmp $0xffffffff,%r11
2023(2): jnz 0xf(%rip)
2025(5): mov 0x10(%rsp),%rax
202a(4): cmp $0x0,0x0(%rax,%rbp,1)
202e(4): setnz %r12b
2032(3): test %r12b,%r12b
2035(6): jz 0x65b(%rip)
203b(5): cmp $0x2,0x8(%rsp)
2040(5): mov 0x10(%rsp),%rdi
2045(4): lea 0x0(%rdi,%rbp,1),%r9
2049(3): setnz %al
204c(4): and 0xd(%rsp),%al
2050(3): mov %eax,%r10d
2053(6): jz 0xad(%rip)
2059(5): mov 0x18(%rsp),%rax
205e(3): test %rax,%rax
2061(6): jz 0x42f(%rip)
2067(4): cmp $0xffffffff,%r11
206b(5): lea 0x0(%rbp,%rax,1),%rbx
2070(2): jnz 0x30(%rip)
2072(4): cmp $0x1,%rax
2076(2): jbe 0x2a(%rip)
2078(5): mov %r8b,0x38(%rsp)
207d(5): mov %r10b,0x30(%rsp)
2082(5): mov %r9,0x28(%rsp)
2087(5): call 0xfffff229(%rip)
208c(6): movzx 0x38(%rsp),%r8d
2092(6): movzx 0x30(%rsp),%r10d
2098(3): mov %rax,%r11
209b(5): mov 0x28(%rsp),%r9
20a0(3): cmp %r11,%rbx
20a3(5): mov %r10b,0x28(%rsp)
20a8(6): jnbe 0x5b8(%rip)
20ae(5): mov 0x18(%rsp),%rdx
20b3(5): mov 0x48(%rsp),%rsi
20b8(3): mov %r9,%rdi
20bb(5): mov %r11,0x40(%rsp)
20c0(5): mov %r8b,0x38(%rsp)
20c5(5): mov %r9,0x30(%rsp)
20ca(5): call 0xfffff256(%rip)
20cf(2): test %eax,%eax
20d1(5): mov 0x30(%rsp),%r9
20d6(6): movzx 0x38(%rsp),%r8d
20dc(5): mov 0x40(%rsp),%r11
20e1(6): jnz 0x57f(%rip)
20e7(5): cmp $0x0,0xf(%rsp)
20ec(6): movzx 0x28(%rsp),%r10d
20f2(6): jnz 0xf83(%rip)
20f8(8): nop 0x0(%rax,%rax,1)
2100(4): movzx (%r9),%ebx
2104(3): cmp $0x7e,%bl
2107(6): jnbe 0x321(%rip)
210d(7): lea 0x2998(%rip),%rcx
2114(3): movzx %bl,%edx
2117(4): movsxd 0x0(%rcx,%rdx,4),%rax
211b(3): add %rcx,%rax
211e(2): jmp %rax
2120(3): xor %r10d,%r10d
2123(4): cmp $0x1,%r11
2127(3): setnz %al
212a(4): cmp $0xffffffff,%r11
212e(2): jnz 0xe(%rip)
2130(5): mov 0x10(%rsp),%rax
2135(4): cmp $0x0,0x1(%rax)
2139(3): setnz %al
213c(5): cmp $0x2,0x8(%rsp)
2141(3): setz %dl
2144(2): test %al,%al
2146(6): jz 0x252(%rip)
214c(3): xor %r12d,%r12d
214f(2): xor %eax,%eax
2151(7): nop 0x0(%rax)
2158(5): cmp $0x1,0xd(%rsp)
215d(6): jnz 0x115(%rip)
2163(2): test %dl,%dl
2165(6): jnz 0x10d(%rip)
216b(5): mov 0x20(%rsp),%rsi
2170(3): test %rsi,%rsi
2173(2): jz 0x16(%rip)
2175(2): mov %ebx,%edx
2177(3): shr $0x5,%dl
217a(3): movzx %dl,%edx
217d(3): mov 0x0(%rsi,%rdx,4),%edx
2180(3): bt %ebx,%edx
2183(6): jb 0x150(%rip)
2189(3): test %r10b,%r10b
218c(6): jnz 0x147(%rip)
2192(3): xor $0x1,%eax
2195(4): add $0x1,%rbp
2199(3): and %r8d,%eax
219c(2): test %al,%al
219e(2): jz 0x22(%rip)
21a0(3): cmp %r15,%r13
21a3(2): jbe 0x7(%rip)
21a5(5): mov $0x27,0x0(%r14,%r15,1)
21aa(4): lea 0x1(%r15),%rax
21ae(3): cmp %rax,%r13
21b1(2): jbe 0x8(%rip)
21b3(6): mov $0x27,0x1(%r14,%r15,1)
21b9(4): add $0x2,%r15
21bd(3): xor %r8d,%r8d
21c0(3): cmp %r13,%r15
21c3(2): jnb 0x6(%rip)
21c5(4): mov %bl,0x0(%r14,%r15,1)
21c9(5): movzx 0xe(%rsp),%edi
21ce(4): add $0x1,%r15
21d2(5): mov $0x0,%eax
21d7(3): test %r12b,%r12b
21da(3): cmove %eax,%edi
21dd(5): mov %dil,0xe(%rsp)
21e2(5): jmp 0xfffffe36(%rip)
21e7(9): nop 0x0(%rax,%rax,1)
21f0(3): xor %r10d,%r10d
21f3(4): mov 0x8(%rsp),%eax
21f7(3): cmp $0x2,%eax
21fa(6): jz 0x5be(%rip)
2200(3): cmp $0x5,%eax
2203(6): jz 0x575(%rip)
2209(3): cmp $0x2,%eax
220c(5): mov $0x3f,%ebx
2211(3): setz %dl
2214(3): xor %r12d,%r12d
2217(2): xor %eax,%eax
2219(5): jmp 0xffffff3f(%rip)
221e(2): nop 
2220(3): xor %r10d,%r10d
2223(5): cmp $0x2,0x8(%rsp)
2228(6): jz 0x508(%rip)
222e(5): mov %r12b,0x7c(%rsp)
2233(2): xor %edx,%edx
2235(2): xor %eax,%eax
2237(5): mov $0x27,%ebx
223c(5): jmp 0xffffff1c(%rip)
2241(7): nop 0x0(%rax)
2248(5): mov $0x9,%edx
224d(5): mov $0x74,%ebx
2252(5): cmp $0x2,0x8(%rsp)
2257(3): setz %al
225a(4): and 0xf(%rsp),%al
225e(6): jnz 0x150(%rip)
2264(5): cmp $0x0,0xd(%rsp)
2269(2): jnz 0x67(%rip)
226b(2): mov %edx,%ebx
226d(3): xor %r12d,%r12d
2270(2): xor %eax,%eax
2272(5): cmp $0x0,0xf(%rsp)
2277(6): jnz 0xfffffef4(%rip)
227d(5): jmp 0xffffff0c(%rip)
2282(6): nop 0x0(%rax,%rax,1)
2288(5): mov $0x8,%edx
228d(5): mov $0x62,%ebx
2292(2): jmp 0xffffffd2(%rip)
2294(4): nop 0x0(%rax)
2298(5): cmp $0x2,0x8(%rsp)
229d(6): jz 0x3d3(%rip)
22a3(5): cmp $0x0,0xd(%rsp)
22a8(6): jz 0x218(%rip)
22ae(5): cmp $0x0,0xf(%rsp)
22b3(6): jz 0x20d(%rip)
22b9(6): cmp $0x0,0x18(%rsp)
22bf(6): jnz 0x3bc(%rip)
22c5(5): mov $0x5c,%ebx
22ca(6): nop 0x0(%rax,%rax,1)
22d0(3): xor %r12d,%r12d
22d3(5): cmp $0x2,0x8(%rsp)
22d8(3): setz %dl
22db(5): cmp $0x0,0xf(%rsp)
22e0(2): mov %edx,%eax
22e2(6): jnz 0x856(%rip)
22e8(3): mov %r8d,%eax
22eb(3): xor $0x1,%eax
22ee(2): and %dl,%al
22f0(2): jz 0x31(%rip)
22f2(3): cmp %r15,%r13
22f5(2): jbe 0x7(%rip)
22f7(5): mov $0x27,0x0(%r14,%r15,1)
22fc(4): lea 0x1(%r15),%rdx
2300(3): cmp %rdx,%r13
2303(2): jbe 0x8(%rip)
2305(6): mov $0x24,0x1(%r14,%r15,1)
230b(4): lea 0x2(%r15),%rdx
230f(3): cmp %rdx,%r13
2312(2): jbe 0x8(%rip)
2314(6): mov $0x27,0x2(%r14,%r15,1)
231a(4): add $0x3,%r15
231e(3): mov %eax,%r8d
2321(3): cmp %r15,%r13
2324(2): jbe 0x7(%rip)
2326(5): mov $0x5c,0x0(%r14,%r15,1)
232b(4): add $0x1,%r15
232f(4): add $0x1,%rbp
2333(5): jmp 0xfffffe8d(%rip)
2338(8): nop 0x0(%rax,%rax,1)
2340(5): cmp $0x0,0xd(%rsp)
2345(6): jnz 0x1ce(%rip)
234b(2): xor %edx,%edx
234d(5): test $0x1,0x78(%rsp)
2352(6): jz 0xffffff19(%rip)
2358(4): add $0x1,%rbp
235c(5): jmp 0xfffffcbc(%rip)
2361(7): nop 0x0(%rax)
2368(5): cmp $0x2,0x8(%rsp)
236d(3): setz %dl
2370(2): xor %eax,%eax
2372(5): jmp 0xfffffde6(%rip)
2377(9): nop 0x0(%rax,%rax,1)
2380(5): mov $0x7,%edx
2385(5): mov $0x61,%ebx
238a(5): jmp 0xfffffeda(%rip)
238f(1): nop 
2390(5): cmp $0x2,0x8(%rsp)
2395(3): setz %dl
2398(3): test %rbp,%rbp
239b(6): jnz 0xfffffdb1(%rip)
23a1(5): movzx 0xf(%rsp),%eax
23a6(2): and %dl,%al
23a8(6): jz 0xfffffdb0(%rip)
23ae(3): mov %r11,%rbp
23b1(8): mov $0x2,0x8(%rsp)
23b9(5): jmp 0x700(%rip)
23be(2): nop 
23c0(5): cmp $0x2,0x8(%rsp)
23c5(3): setz %dl
23c8(3): xor %r12d,%r12d
23cb(2): jmp 0xffffffd6(%rip)
23cd(3): nop (%rax)
23d0(5): cmp $0x2,0x8(%rsp)
23d5(5): mov $0x20,%ebx
23da(3): setz %dl
23dd(2): jmp 0xffffffc4(%rip)
23df(1): nop 
23e0(5): mov $0xd,%edx
23e5(5): mov $0x72,%ebx
23ea(5): jmp 0xfffffe68(%rip)
23ef(1): nop 
23f0(5): mov $0xc,%edx
23f5(5): mov $0x66,%ebx
23fa(5): jmp 0xfffffe6a(%rip)
23ff(1): nop 
2400(5): mov $0xb,%edx
2405(5): mov $0x76,%ebx
240a(5): jmp 0xfffffe5a(%rip)
240f(1): nop 
2410(5): mov $0xa,%edx
2415(5): mov $0x6e,%ebx
241a(5): jmp 0xfffffe38(%rip)
241f(1): nop 
2420(3): xor %r10d,%r10d
2423(5): nop 0x0(%rax,%rax,1)
2428(6): cmp $0x1,0x58(%rsp)
242e(6): jnz 0x3aa(%rip)
2434(5): mov %r11,0x38(%rsp)
2439(5): mov %r8b,0x30(%rsp)
243e(5): mov %r10b,0x28(%rsp)
2443(5): call 0xfffff01d(%rip)
2448(3): mov (%rax),%rcx
244b(3): movzx %bl,%edx
244e(6): movzx 0x28(%rsp),%r10d
2454(6): movzx 0x30(%rsp),%r8d
245a(5): mov 0x38(%rsp),%r11
245f(5): mov $0x1,%edi
2464(4): movzx 0x0(%rcx,%rdx,2),%eax
2468(4): and $0x4000,%ax
246c(4): setnz %r12b
2470(3): setz %al
2473(4): and 0xd(%rsp),%al
2477(2): test %al,%al
2479(6): jnz 0x998(%rip)
247f(5): cmp $0x2,0x8(%rsp)
2484(3): setz %dl
2487(5): jmp 0xfffffcd1(%rip)
248c(4): nop 0x0(%rax)
2490(4): movzx (%r9),%ebx
2494(3): cmp $0x7e,%bl
2497(2): jnbe 0xffffff89(%rip)
2499(7): lea 0x2808(%rip),%rcx
24a0(3): movzx %bl,%edx
24a3(4): movsxd 0x0(%rcx,%rdx,4),%rax
24a7(3): add %rcx,%rax
24aa(2): jmp %rax
24ac(4): nop 0x0(%rax)
24b0(3): xor %r10d,%r10d
24b3(5): cmp $0x0,0xd(%rsp)
24b8(6): jnz 0xfffffdf6(%rip)
24be(2): nop 
24c0(5): mov $0x5c,%edx
24c5(5): mov $0x5c,%ebx
24ca(5): jmp 0xfffffd9a(%rip)
24cf(1): nop 
24d0(5): mov $0xc,%edx
24d5(3): xor %r10d,%r10d
24d8(5): mov $0x66,%ebx
24dd(5): jmp 0xfffffd87(%rip)
24e2(6): nop 0x0(%rax,%rax,1)
24e8(5): mov $0xa,%edx
24ed(3): xor %r10d,%r10d
24f0(5): mov $0x6e,%ebx
24f5(5): jmp 0xfffffd5d(%rip)
24fa(6): nop 0x0(%rax,%rax,1)
2500(5): mov $0x61,%ebx
2505(5): jmp 0xfffffdcb(%rip)
250a(6): nop 0x0(%rax,%rax,1)
2510(3): xor %r10d,%r10d
2513(5): cmp $0x2,0x8(%rsp)
2518(3): setz %dl
251b(5): cmp $0x0,0xf(%rsp)
2520(6): jnz 0xb9a(%rip)
2526(3): mov %r8d,%eax
2529(3): mov %r15,%rcx
252c(3): xor $0x1,%eax
252f(2): and %dl,%al
2531(2): jz 0x2f(%rip)
2533(3): cmp %r15,%r13
2536(2): jbe 0x7(%rip)
2538(5): mov $0x27,0x0(%r14,%r15,1)
253d(4): lea 0x1(%r15),%rcx
2541(3): cmp %rcx,%r13
2544(2): jbe 0x8(%rip)
2546(6): mov $0x24,0x1(%r14,%r15,1)
254c(4): lea 0x2(%r15),%rcx
2550(3): cmp %rcx,%r13
2553(6): jnbe 0x636(%rip)
2559(4): lea 0x3(%r15),%rcx
255d(3): mov %eax,%r8d
2560(3): cmp %rcx,%r13
2563(2): jbe 0x7(%rip)
2565(5): mov $0x5c,0x0(%r14,%rcx,1)
256a(5): cmp $0x2,0x8(%rsp)
256f(4): lea 0x1(%rcx),%r15
2573(6): jz 0x606(%rip)
2579(4): lea 0x1(%rbp),%rax
257d(3): cmp %r11,%rax
2580(2): jnb 0x1b(%rip)
2582(5): mov 0x10(%rsp),%rax
2587(5): movzx 0x1(%rax,%rbp,1),%eax
258c(4): mov %al,0x28(%rsp)
2590(3): sub $0x30,%eax
2593(2): cmp $0x9,%al
2595(6): jbe 0x834(%rip)
259b(3): mov %r12d,%eax
259e(5): mov $0x30,%ebx
25a3(3): xor %r12d,%r12d
25a6(5): jmp 0xfffffbb2(%rip)
25ab(5): nop 0x0(%rax,%rax,1)
25b0(5): cmp $0x2,0x8(%rsp)
25b5(3): mov %r10d,%r12d
25b8(3): setz %dl
25bb(3): xor %r10d,%r10d
25be(2): xor %eax,%eax
25c0(5): jmp 0xfffffb98(%rip)
25c5(3): nop (%rax)
25c8(5): cmp $0x2,0x8(%rsp)
25cd(3): setz %dl
25d0(3): xor %r10d,%r10d
25d3(5): jmp 0xfffffdc5(%rip)
25d8(8): nop 0x0(%rax,%rax,1)
25e0(5): cmp $0x2,0x8(%rsp)
25e5(3): setz %dl
25e8(3): xor %r10d,%r10d
25eb(3): xor %r12d,%r12d
25ee(5): jmp 0xfffffdb3(%rip)
25f3(5): nop 0x0(%rax,%rax,1)
25f8(5): cmp $0x2,0x8(%rsp)
25fd(3): mov %r10d,%r12d
2600(5): mov $0x20,%ebx
2605(3): setz %dl
2608(3): xor %r10d,%r10d
260b(5): jmp 0xfffffd96(%rip)
2610(5): mov $0xd,%edx
2615(3): xor %r10d,%r10d
2618(5): mov $0x72,%ebx
261d(5): jmp 0xfffffc35(%rip)
2622(6): nop 0x0(%rax,%rax,1)
2628(5): mov $0x76,%ebx
262d(5): jmp 0xfffffca3(%rip)
2632(6): nop 0x0(%rax,%rax,1)
2638(5): mov $0x9,%edx
263d(3): xor %r10d,%r10d
2640(5): mov $0x74,%ebx
2645(5): jmp 0xfffffc0d(%rip)
264a(6): nop 0x0(%rax,%rax,1)
2650(5): mov $0x62,%ebx
2655(5): jmp 0xfffffc7b(%rip)
265a(6): nop 0x0(%rax,%rax,1)
2660(3): xor %r10d,%r10d
2663(5): jmp 0xfffffa9d(%rip)
2668(8): nop 0x0(%rax,%rax,1)
2670(5): cmp $0x0,0xf(%rsp)
2675(6): jnz 0x96b(%rip)
267b(4): add $0x1,%rbp
267f(3): mov %r8d,%eax
2682(3): xor %r12d,%r12d
2685(5): mov $0x5c,%ebx
268a(5): jmp 0xfffffb12(%rip)
268f(1): nop 
2690(5): cmp $0x2,0x8(%rsp)
2695(5): movzx 0xf(%rsp),%ebx
269a(3): mov %r8d,%r12d
269d(3): mov %r11,%rbp
26a0(3): setz %dl
26a3(2): mov %ebx,%eax
26a5(3): test %r15,%r15
26a8(3): setz %cl
26ab(2): and %edx,%eax
26ad(2): and %cl,%al
26af(6): jnz 0xa67(%rip)
26b5(2): mov %ebx,%eax
26b7(3): xor $0x1,%eax
26ba(2): and %al,%dl
26bc(6): jz 0x970(%rip)
26c2(5): cmp $0x0,0x7c(%rsp)
26c7(6): jz 0x963(%rip)
26cd(5): cmp $0x0,0xe(%rsp)
26d2(6): jnz 0x9fb(%rip)
26d8(3): test %r13,%r13
26db(3): setz %al
26de(6): cmp $0x0,0x50(%rsp)
26e4(3): setnz %dl
26e7(2): and %dl,%al
26e9(6): jz 0xa23(%rip)
26ef(5): mov 0x50(%rsp),%r13
26f4(7): lea 0x232a(%rip),%rbx
26fb(4): mov $0x27,(%r14)
26ff(8): mov $0x2,0x8(%rsp)
2707(6): mov $0x1,%r15d
270d(9): mov $0x1,0x18(%rsp)
2716(5): mov $0x0,0xf(%rsp)
271b(5): mov %rbx,0x48(%rsp)
2720(4): mov %al,0x7c(%rsp)
2724(5): jmp 0xfffff8df(%rip)
2729(7): nop 0x0(%rax)
2730(5): cmp $0x0,0xf(%rsp)
2735(6): jnz 0x8ab(%rip)
273b(3): test %r13,%r13
273e(6): jz 0x402(%rip)
2744(2): xor %edx,%edx
2746(6): cmp $0x0,0x50(%rsp)
274c(6): jnz 0x3f4(%rip)
2752(5): mov %r13,0x50(%rsp)
2757(4): add $0x3,%r15
275b(2): xor %eax,%eax
275d(5): mov %r12b,0x7c(%rsp)
2762(3): xor %r8d,%r8d
2765(3): mov %rdx,%r13
2768(5): mov $0x27,%ebx
276d(5): jmp 0xfffffa1c(%rip)
2772(6): nop 0x0(%rax,%rax,1)
2778(5): test $0x4,0x78(%rsp)
277d(2): jz 0x23(%rip)
277f(4): lea 0x2(%rbp),%rcx
2783(3): cmp %r11,%rcx
2786(2): jnb 0x1a(%rip)
2788(5): mov 0x10(%rsp),%rax
278d(5): cmp $0x3f,0x1(%rax,%rbp,1)
2792(6): jz 0x790(%rip)
2798(8): nop 0x0(%rax,%rax,1)
27a0(2): xor %edx,%edx
27a2(3): xor %r12d,%r12d
27a5(2): xor %eax,%eax
27a7(5): mov $0x3f,%ebx
27ac(5): jmp 0xfffff9ac(%rip)
27b1(7): nop 0x0(%rax)
27b8(5): cmp $0x0,0xf(%rsp)
27bd(6): jnz 0x823(%rip)
27c3(3): xor %r12d,%r12d
27c6(2): xor %eax,%eax
27c8(5): mov $0x3f,%ebx
27cd(5): jmp 0xfffff9bc(%rip)
27d2(6): nop 0x0(%rax,%rax,1)
27d8(8): lea 0xa0(%rsp),%rax
27e0(4): cmp $0xffffffff,%r11
27e4(c): mov $0x0,0xa0(%rsp)
27f0(5): mov %rax,0x28(%rsp)
27f5(2): jnz 0x2f(%rip)
27f7(5): mov 0x10(%rsp),%rdi
27fc(5): mov %r8b,0x40(%rsp)
2801(5): mov %r10b,0x38(%rsp)
2806(5): mov %r9,0x30(%rsp)
280b(5): call 0xffffeaa5(%rip)
2810(6): movzx 0x40(%rsp),%r8d
2816(6): movzx 0x38(%rsp),%r10d
281c(3): mov %rax,%r11
281f(5): mov 0x30(%rsp),%r9
2824(8): lea 0x9c(%rsp),%rax
282c(2): xor %ecx,%ecx
282e(4): mov %bl,0x7e(%rsp)
2832(5): mov %r8b,0x7d(%rsp)
2837(3): mov %rcx,%rbx
283a(8): mov %r9,0x88(%rsp)
2842(5): mov %rax,0x38(%rsp)
2847(5): mov %r10b,0x7f(%rsp)
284c(8): mov %r15,0x80(%rsp)
2854(5): mov %r14,0x40(%rsp)
2859(5): mov %r13,0x70(%rsp)
285e(5): mov %r11,0x30(%rsp)
2863(5): mov 0x10(%rsp),%rax
2868(5): lea 0x0(%rbp,%rbx,1),%r14
286d(5): mov 0x30(%rsp),%rdx
2872(5): mov 0x28(%rsp),%rcx
2877(5): mov 0x38(%rsp),%rdi
287c(4): lea 0x0(%rax,%r14,1),%r13
2880(3): sub %r14,%rdx
2883(3): mov %r13,%rsi
2886(5): call 0x1afa(%rip)
288b(3): test %rax,%rax
288e(3): mov %rax,%r15
2891(2): jz 0x50(%rip)
2893(4): cmp $0xffffffff,%rax
2897(6): jz 0x61e(%rip)
289d(4): cmp $0xfffffffe,%rax
28a1(6): jz 0x5a0(%rip)
28a7(5): cmp $0x2,0x8(%rsp)
28ac(3): setz %al
28af(4): and 0xf(%rsp),%al
28b3(6): jnz 0x19d(%rip)
28b9(7): mov 0x9c(%rsp),%edi
28c0(5): call 0xffffeb90(%rip)
28c5(5): mov 0x28(%rsp),%rdi
28ca(2): test %eax,%eax
28cc(5): mov $0x0,%eax
28d1(4): cmove %eax,%r12d
28d5(3): add %r15,%rbx
28d8(5): call 0xffffeb68(%rip)
28dd(2): test %eax,%eax
28df(2): jz 0xffffff84(%rip)
28e1(3): mov %r12d,%edx
28e4(3): mov %rbx,%rdi
28e7(6): movzx 0x7d(%rsp),%r8d
28ed(3): xor $0x1,%edx
28f0(5): movzx 0x7e(%rsp),%ebx
28f5(6): movzx 0x7f(%rsp),%r10d
28fb(4): and 0xd(%rsp),%dl
28ff(8): mov 0x80(%rsp),%r15
2907(5): mov 0x40(%rsp),%r14
290c(5): mov 0x70(%rsp),%r13
2911(5): mov 0x30(%rsp),%r11
2916(4): cmp $0x1,%rdi
291a(6): jbe 0x601(%rip)
2920(3): mov %rdi,%rcx
2923(2): xor %esi,%esi
2925(6): movzx 0xf(%rsp),%r9d
292b(3): add %rbp,%rcx
292e(5): mov 0x10(%rsp),%rdi
2933(5): jmp 0xbb(%rip)
2938(8): nop 0x0(%rax,%rax,1)
2940(5): cmp $0x2,0x8(%rsp)
2945(3): setz %al
2948(3): test %r9b,%r9b
294b(6): jnz 0x4b5(%rip)
2951(3): mov %r8d,%esi
2954(3): xor $0x1,%esi
2957(3): and %sil,%al
295a(2): jz 0x31(%rip)
295c(3): cmp %r15,%r13
295f(2): jbe 0x7(%rip)
2961(5): mov $0x27,0x0(%r14,%r15,1)
2966(4): lea 0x1(%r15),%rsi
296a(3): cmp %rsi,%r13
296d(2): jbe 0x8(%rip)
296f(6): mov $0x24,0x1(%r14,%r15,1)
2975(4): lea 0x2(%r15),%rsi
2979(3): cmp %rsi,%r13
297c(2): jbe 0x8(%rip)
297e(6): mov $0x27,0x2(%r14,%r15,1)
2984(4): add $0x3,%r15
2988(3): mov %eax,%r8d
298b(3): cmp %r15,%r13
298e(2): jbe 0x7(%rip)
2990(5): mov $0x5c,0x0(%r14,%r15,1)
2995(4): lea 0x1(%r15),%rax
2999(3): cmp %rax,%r13
299c(2): jbe 0xf(%rip)
299e(2): mov %ebx,%eax
29a0(3): shr $0x6,%al
29a3(3): add $0x30,%eax
29a6(5): mov %al,0x1(%r14,%r15,1)
29ab(4): lea 0x2(%r15),%rax
29af(3): cmp %rax,%r13
29b2(2): jbe 0x12(%rip)
29b4(2): mov %ebx,%eax
29b6(3): shr $0x3,%al
29b9(3): and $0x7,%eax
29bc(3): add $0x30,%eax
29bf(5): mov %al,0x2(%r14,%r15,1)
29c4(3): and $0x7,%ebx
29c7(4): add $0x1,%rbp
29cb(4): add $0x3,%r15
29cf(3): add $0x30,%ebx
29d2(3): cmp %rcx,%rbp
29d5(6): jnb 0xfffff7eb(%rip)
29db(2): mov %edx,%esi
29dd(3): cmp %r15,%r13
29e0(2): jbe 0x6(%rip)
29e2(4): mov %bl,0x0(%r14,%r15,1)
29e6(4): movzx 0x0(%rdi,%rbp,1),%ebx
29ea(4): add $0x1,%r15
29ee(2): test %dl,%dl
29f0(6): jnz 0xffffff50(%rip)
29f6(2): mov %esi,%eax
29f8(3): xor $0x1,%eax
29fb(3): and %r8d,%eax
29fe(3): test %r10b,%r10b
2a01(2): jz 0x10(%rip)
2a03(3): cmp %r15,%r13
2a06(2): jbe 0x7(%rip)
2a08(5): mov $0x5c,0x0(%r14,%r15,1)
2a0d(4): add $0x1,%r15
2a11(4): add $0x1,%rbp
2a15(3): cmp %rcx,%rbp
2a18(6): jnb 0xfffff784(%rip)
2a1e(2): test %al,%al
2a20(6): jz 0x3fe(%rip)
2a26(3): cmp %r15,%r13
2a29(2): jbe 0x7(%rip)
2a2b(5): mov $0x27,0x0(%r14,%r15,1)
2a30(4): lea 0x1(%r15),%rax
2a34(3): cmp %rax,%r13
2a37(2): jbe 0x8(%rip)
2a39(6): mov $0x27,0x1(%r14,%r15,1)
2a3f(4): add $0x2,%r15
2a43(3): xor %r10d,%r10d
2a46(3): xor %r8d,%r8d
2a49(2): jmp 0xffffff94(%rip)
2a4b(5): nop 0x0(%rax,%rax,1)
2a50(4): cmp $0x1,%r15
2a54(6): jz 0xfffffe65(%rip)
2a5a(5): mov 0x10(%rsp),%rdi
2a5f(4): lea 0x0(%rdi,%r15,1),%rcx
2a63(5): lea 0x1(%rdi,%r14,1),%rdx
2a68(4): lea 0x0(%rcx,%r14,1),%r8
2a6c(2): jmp 0x11(%rip)
2a6e(2): nop 
2a70(4): add $0x1,%rdx
2a74(3): cmp %rdx,%r8
2a77(6): jz 0xfffffe42(%rip)
2a7d(3): movzx (%rdx),%ecx
2a80(3): sub $0x5b,%ecx
2a83(3): cmp $0x21,%cl
2a86(2): jnbe 0xffffffea(%rip)
2a88(5): mov $0x1,%esi
2a8d(3): shl/sal %cl,%rsi
2a90(3): mov %rsi,%rcx
2a93(a): mov $0x8589934635,%rsi
2a9d(3): test %rsi,%rcx
2aa0(2): jz 0xffffffd0(%rip)
2aa2(5): mov 0x40(%rsp),%r14
2aa7(5): mov 0x70(%rsp),%r13
2aac(5): mov 0x30(%rsp),%rbp
2ab1(8): mov $0x2,0x8(%rsp)
2ab9(5): cmp $0x0,0xd(%rsp)
2abe(2): jz 0x12(%rip)
2ac0(2): test %al,%al
2ac2(5): mov $0x4,%eax
2ac7(5): cmove 0x8(%rsp),%eax
2acc(4): mov %eax,0x8(%rsp)
2ad0(4): sub $0x8,%rsp
2ad4(3): mov %rbp,%rcx
2ad7(3): mov %r13,%rsi
2ada(4): push 0x68(%rsp)
2ade(4): push 0x78(%rsp)
2ae2(3): mov %r14,%rdi
2ae5(2): push $0x0
2ae7(8): mov 0x98(%rsp),%r9d
2aef(5): mov 0x28(%rsp),%r8d
2af4(5): mov 0x30(%rsp),%rdx
2af9(4): and $0xfd,%r9d
2afd(5): call 0xfffff433(%rip)
2b02(4): add $0x20,%rsp
2b06(3): mov %rax,%r15
2b09(8): mov 0xa8(%rsp),%rbx
2b11(9): xor $0x28,%rbx
2b1a(3): mov %r15,%rax
2b1d(6): jnz 0x606(%rip)
2b23(7): add $0xb8,%rsp
2b2a(1): pop %rbx
2b2b(1): pop %rbp
2b2c(2): pop %r12
2b2e(2): pop %r13
2b30(2): pop %r14
2b32(2): pop %r15
2b34(1): ret near (%rsp)
2b35(3): nop (%rax)
2b38(3): mov %r11,%rbp
2b3b(5): jmp 0xffffff7e(%rip)
2b40(3): cmp %r15,%r13
2b43(2): jbe 0x7(%rip)
2b45(5): mov $0x27,0x0(%r14,%r15,1)
2b4a(4): lea 0x1(%r15),%rax
2b4e(3): cmp %rax,%r13
2b51(2): jbe 0x8(%rip)
2b53(6): mov $0x5c,0x1(%r14,%r15,1)
2b59(4): lea 0x2(%r15),%rax
2b5d(3): cmp %rax,%r13
2b60(6): jbe 0x5f2(%rip)
2b66(3): mov %r13,%rdx
2b69(6): mov $0x27,0x2(%r14,%r15,1)
2b6f(5): mov 0x50(%rsp),%r13
2b74(5): jmp 0xfffffbde(%rip)
2b79(3): mov %r12d,%eax
2b7c(5): mov $0x30,%ebx
2b81(3): xor %r12d,%r12d
2b84(5): jmp 0xfffff605(%rip)
2b89(6): mov $0x27,0x2(%r14,%r15,1)
2b8f(5): jmp 0xfffff9ca(%rip)
2b94(2): test %ebx,%ebx
2b96(6): jnz 0xfffff42d(%rip)
2b9c(5): mov $0x1,0xd(%rsp)
2ba1(3): test %r13,%r13
2ba4(6): jnz 0x596(%rip)
2baa(7): lea 0x1e74(%rip),%rax
2bb1(9): mov $0x0,0x50(%rsp)
2bba(5): mov $0x1,0xe(%rsp)
2bbf(5): mov $0x0,0x7c(%rsp)
2bc4(3): xor %r12d,%r12d
2bc7(5): mov $0x0,0xf(%rsp)
2bcc(9): mov $0x1,0x18(%rsp)
2bd5(5): mov %rax,0x48(%rsp)
2bda(6): mov $0x1,%r15d
2be0(8): mov $0x2,0x8(%rsp)
2be8(5): jmp 0xfffff41b(%rip)
2bed(3): nop (%rax)
2bf0(2): test %ebx,%ebx
2bf2(6): jnz 0x3fb(%rip)
2bf8(3): test %r13,%r13
2bfb(6): jz 0x22b(%rip)
2c01(4): mov $0x22,(%r14)
2c05(5): mov $0x1,0xe(%rsp)
2c0a(3): xor %r12d,%r12d
2c0d(5): mov $0x0,0x7c(%rsp)
2c12(9): mov $0x0,0x50(%rsp)
2c1b(7): lea 0x1e01(%rip),%rax
2c22(5): mov $0x0,0xf(%rsp)
2c27(5): mov $0x1,0xd(%rsp)
2c2c(9): mov $0x1,0x18(%rsp)
2c35(6): mov $0x1,%r15d
2c3b(5): mov %rax,0x48(%rsp)
2c40(5): jmp 0xfffff3c3(%rip)
2c45(7): lea 0x1dd7(%rip),%rax
2c4c(5): mov $0x1,0xe(%rsp)
2c51(5): mov $0x0,0x7c(%rsp)
2c56(3): xor %r12d,%r12d
2c59(9): mov $0x0,0x50(%rsp)
2c62(5): mov $0x1,0xf(%rsp)
2c67(5): mov $0x1,0xd(%rsp)
2c6c(9): mov $0x1,0x18(%rsp)
2c75(3): xor %r15d,%r15d
2c78(5): mov %rax,0x48(%rsp)
2c7d(8): mov $0x5,0x8(%rsp)
2c85(5): jmp 0xfffff37e(%rip)
2c8a(5): mov $0x1,0xe(%rsp)
2c8f(5): mov $0x0,0x7c(%rsp)
2c94(3): xor %r12d,%r12d
2c97(9): mov $0x0,0x50(%rsp)
2ca0(5): mov $0x0,0xf(%rsp)
2ca5(3): xor %r15d,%r15d
2ca8(5): mov $0x1,0xd(%rsp)
2cad(9): mov $0x0,0x18(%rsp)
2cb6(9): mov $0x0,0x48(%rsp)
2cbf(5): jmp 0xfffff344(%rip)
2cc4(5): cmp $0xa,0x8(%rsp)
2cc9(2): jz 0x58(%rip)
2ccb(7): lea 0x1d55(%rip),%rsi
2cd2(2): xor %edi,%edi
2cd4(5): mov $0x5,%edx
2cd9(5): call 0xffffe5b7(%rip)
2cde(3): mov %rax,%rcx
2ce1(5): mov %rax,0x68(%rsp)
2ce6(7): lea 0x1d3a(%rip),%rax
2ced(3): cmp %rax,%rcx
2cf0(6): jz 0x39e(%rip)
2cf6(7): lea 0x1d28(%rip),%rsi
2cfd(2): xor %edi,%edi
2cff(5): mov $0x5,%edx
2d04(5): call 0xffffe58c(%rip)
2d09(3): mov %rax,%rcx
2d0c(5): mov %rax,0x60(%rsp)
2d11(7): lea 0x1d0d(%rip),%rax
2d18(3): cmp %rax,%rcx
2d1b(6): jz 0x389(%rip)
2d21(3): xor %r15d,%r15d
2d24(2): test %ebx,%ebx
2d26(6): jz 0x1c7(%rip)
2d2c(2): test %ebx,%ebx
2d2e(5): mov 0x60(%rsp),%rbx
2d33(5): setnz 0xf(%rsp)
2d38(3): xor %r12d,%r12d
2d3b(3): mov %rbx,%rdi
2d3e(5): call 0xffffe572(%rip)
2d43(5): mov %rbx,0x48(%rsp)
2d48(5): mov %rax,0x18(%rsp)
2d4d(5): mov $0x1,0xe(%rsp)
2d52(5): mov $0x0,0x7c(%rsp)
2d57(9): mov $0x0,0x50(%rsp)
2d60(5): mov $0x1,0xd(%rsp)
2d65(5): jmp 0xfffff29e(%rip)
2d6a(5): mov $0x1,0xe(%rsp)
2d6f(5): mov $0x0,0x7c(%rsp)
2d74(3): xor %r12d,%r12d
2d77(9): mov $0x0,0x50(%rsp)
2d80(5): mov $0x0,0xf(%rsp)
2d85(3): xor %r15d,%r15d
2d88(5): mov $0x0,0xd(%rsp)
2d8d(9): mov $0x0,0x18(%rsp)
2d96(9): mov $0x0,0x48(%rsp)
2d9f(5): jmp 0xfffff264(%rip)
2da4(5): mov $0x1,0xe(%rsp)
2da9(5): mov $0x0,0x7c(%rsp)
2dae(3): xor %r12d,%r12d
2db1(9): mov $0x0,0x50(%rsp)
2dba(5): mov $0x1,0xf(%rsp)
2dbf(5): mov $0x1,0xd(%rsp)
2dc4(5): jmp 0xfffff21f(%rip)
2dc9(3): cmp %r15,%r13
2dcc(2): jbe 0x7(%rip)
2dce(5): mov $0x30,0x0(%r14,%r15,1)
2dd3(4): lea 0x2(%rcx),%rax
2dd7(3): cmp %rax,%r13
2dda(2): jbe 0x8(%rip)
2ddc(6): mov $0x30,0x2(%r14,%rcx,1)
2de2(3): mov %r12d,%eax
2de5(4): lea 0x3(%rcx),%r15
2de9(3): xor %r12d,%r12d
2dec(5): mov $0x30,%ebx
2df1(5): jmp 0xfffff367(%rip)
2df6(a): nop 0x0(%rax,%rax,1)
2e00(5): movzx 0xf(%rsp),%ebx
2e05(3): mov %r11,%rbp
2e08(4): mov %bl,0xd(%rsp)
2e0c(5): jmp 0xfffffcad(%rip)
2e11(5): movzx 0xd(%rsp),%edx
2e16(3): xor %r12d,%r12d
2e19(5): jmp 0xfffffb07(%rip)
2e1e(3): xor %r10d,%r10d
2e21(5): jmp 0xfffffbbc(%rip)
2e26(9): mov $0x0,0x50(%rsp)
2e2f(5): mov $0x1,0xe(%rsp)
2e34(3): xor %r12d,%r12d
2e37(5): mov $0x0,0x7c(%rsp)
2e3c(5): jmp 0xfffffddf(%rip)
2e41(5): mov 0x30(%rsp),%r11
2e46(3): mov %r14,%rsi
2e49(3): mov %r13,%rcx
2e4c(3): mov %rbx,%rax
2e4f(3): mov %rbx,%rdi
2e52(6): movzx 0x7d(%rsp),%r8d
2e58(5): movzx 0x7e(%rsp),%ebx
2e5d(8): mov 0x88(%rsp),%r9
2e65(3): cmp %r11,%rsi
2e68(6): movzx 0x7f(%rsp),%r10d
2e6e(8): mov 0x80(%rsp),%r15
2e76(5): mov 0x40(%rsp),%r14
2e7b(5): mov 0x70(%rsp),%r13
2e80(2): jnb 0x28(%rip)
2e82(3): cmp $0x0,(%rcx)
2e85(2): jnz 0x12(%rip)
2e87(2): jmp 0x21(%rip)
2e89(7): nop 0x0(%rax)
2e90(5): cmp $0x0,0x0(%r9,%rax,1)
2e95(2): jz 0x10(%rip)
2e97(4): add $0x1,%rax
2e9b(5): lea 0x0(%rbp,%rax,1),%rdx
2ea0(3): cmp %rdx,%r11
2ea3(2): jnbe 0xffffffed(%rip)
2ea5(3): mov %rax,%rdi
2ea8(5): movzx 0xd(%rsp),%edx
2ead(3): xor %r12d,%r12d
2eb0(5): jmp 0xfffffa66(%rip)
2eb5(3): mov %rbx,%rdi
2eb8(6): movzx 0x7d(%rsp),%r8d
2ebe(5): movzx 0x7e(%rsp),%ebx
2ec3(6): movzx 0x7f(%rsp),%r10d
2ec9(8): mov 0x80(%rsp),%r15
2ed1(3): xor %r12d,%r12d
2ed4(5): mov 0x40(%rsp),%r14
2ed9(5): mov 0x70(%rsp),%r13
2ede(5): mov 0x30(%rsp),%r11
2ee3(5): movzx 0xd(%rsp),%edx
2ee8(5): jmp 0xfffffa2e(%rip)
2eed(5): mov 0x68(%rsp),%rdx
2ef2(3): movzx (%rdx),%eax
2ef5(2): test %al,%al
2ef7(6): jz 0xfffffe35(%rip)
2efd(3): nop (%rax)
2f00(3): cmp %r15,%r13
2f03(2): jbe 0x6(%rip)
2f05(4): mov %al,0x0(%r14,%r15,1)
2f09(4): add $0x1,%r15
2f0d(5): movzx 0x0(%rdx,%r15,1),%eax
2f12(2): test %al,%al
2f14(2): jnz 0xffffffec(%rip)
2f16(5): jmp 0xfffffe16(%rip)
2f1b(2): mov %edx,%eax
2f1d(5): jmp 0xfffff55a(%rip)
2f22(4): movzx 0x0(%rax,%rcx,1),%ebx
2f26(3): cmp $0x3e,%bl
2f29(6): jnbe 0xfffff877(%rip)
2f2f(a): mov $0x8070630310989004800,%rax
2f39(4): bt %rbx,%rax
2f3d(6): jnb 0xfffff863(%rip)
2f43(5): cmp $0x0,0xf(%rsp)
2f48(6): jnz 0x1ea(%rip)
2f4e(3): cmp %r15,%r13
2f51(2): jbe 0x7(%rip)
2f53(5): mov $0x3f,0x0(%r14,%r15,1)
2f58(4): lea 0x1(%r15),%rax
2f5c(3): cmp %rax,%r13
2f5f(2): jbe 0x8(%rip)
2f61(6): mov $0x22,0x1(%r14,%r15,1)
2f67(4): lea 0x2(%r15),%rax
2f6b(3): cmp %rax,%r13
2f6e(2): jbe 0x8(%rip)
2f70(6): mov $0x22,0x2(%r14,%r15,1)
2f76(4): lea 0x3(%r15),%rax
2f7a(3): cmp %rax,%r13
2f7d(2): jbe 0x8(%rip)
2f7f(6): mov $0x3f,0x3(%r14,%r15,1)
2f85(4): add $0x4,%r15
2f89(2): xor %edx,%edx
2f8b(3): xor %r12d,%r12d
2f8e(2): xor %eax,%eax
2f90(3): mov %rcx,%rbp
2f93(5): jmp 0xfffff1c5(%rip)
2f98(2): test %ebx,%ebx
2f9a(6): jz 0x18e(%rip)
2fa0(7): lea 0x1a7e(%rip),%rax
2fa7(5): mov $0x1,0xe(%rsp)
2fac(5): mov $0x0,0x7c(%rsp)
2fb1(3): xor %r12d,%r12d
2fb4(9): mov $0x0,0x50(%rsp)
2fbd(5): mov $0x1,0xf(%rsp)
2fc2(5): mov $0x0,0xd(%rsp)
2fc7(9): mov $0x1,0x18(%rsp)
2fd0(3): xor %r15d,%r15d
2fd3(5): mov %rax,0x48(%rsp)
2fd8(5): jmp 0xfffff02b(%rip)
2fdd(3): nop (%rax)
2fe0(3): mov %r11,%rbp
2fe3(5): movzx 0xf(%rsp),%eax
2fe8(5): jmp 0xfffffad1(%rip)
2fed(7): lea 0x1a2f(%rip),%rax
2ff4(5): mov $0x1,0xe(%rsp)
2ff9(5): mov $0x0,0x7c(%rsp)
2ffe(3): xor %r12d,%r12d
3001(9): mov $0x0,0x50(%rsp)
300a(5): mov $0x1,0xf(%rsp)
300f(5): mov $0x1,0xd(%rsp)
3014(9): mov $0x1,0x18(%rsp)
301d(3): xor %r15d,%r15d
3020(5): mov %rax,0x48(%rsp)
3025(5): jmp 0xffffefde(%rip)
302a(2): mov %edx,%eax
302c(5): mov 0x48(%rsp),%rbx
3031(3): test %rbx,%rbx
3034(2): jz 0x2e(%rip)
3036(2): test %al,%al
3038(2): jz 0x2a(%rip)
303a(3): movzx (%rbx),%ecx
303d(3): mov %rbx,%rax
3040(2): test %cl,%cl
3042(2): jz 0x20(%rip)
3044(3): mov %r15,%rdx
3047(3): sub %r15,%rax
304a(3): cmp %rdx,%r13
304d(2): jbe 0x6(%rip)
304f(4): mov %cl,0x0(%r14,%rdx,1)
3053(4): add $0x1,%rdx
3057(4): movzx 0x0(%rax,%rdx,1),%ecx
305b(2): test %cl,%cl
305d(2): jnz 0xffffffed(%rip)
305f(3): mov %rdx,%r15
3062(3): cmp %r15,%r13
3065(6): jbe 0xfffffaa4(%rip)
306b(5): mov $0x0,0x0(%r14,%r15,1)
3070(5): jmp 0xfffffa99(%rip)
3075(5): cmp $0x2,0x8(%rsp)
307a(5): movzx 0xf(%rsp),%ebx
307f(3): mov %r11,%rbp
3082(3): setz %al
3085(4): mov %bl,0xd(%rsp)
3089(5): jmp 0xfffffa30(%rip)
308e(4): mov 0x8(%rsp),%esi
3092(3): mov %rcx,%rdi
3095(5): call 0xffffedab(%rip)
309a(5): mov %rax,0x68(%rsp)
309f(5): jmp 0xfffffc57(%rip)
30a4(4): mov 0x8(%rsp),%esi
30a8(3): mov %rcx,%rdi
30ab(5): call 0xffffed95(%rip)
30b0(5): mov %rax,0x60(%rsp)
30b5(5): jmp 0xfffffc6c(%rip)
30ba(5): movzx 0xf(%rsp),%ebx
30bf(3): mov %r11,%rbp
30c2(2): mov %edx,%eax
30c4(4): mov %bl,0xd(%rsp)
30c8(5): jmp 0xfffff9f1(%rip)
30cd(4): sub $0x8,%rsp
30d1(6): mov $0x5,%r8d
30d7(3): mov %r11,%rcx
30da(4): push 0x68(%rsp)
30de(4): push 0x78(%rsp)
30e2(3): mov %r14,%rdi
30e5(4): push 0x38(%rsp)
30e9(8): mov 0x98(%rsp),%r9d
30f1(5): mov 0x30(%rsp),%rdx
30f6(5): mov 0x70(%rsp),%rsi
30fb(5): call 0xffffee35(%rip)
3100(4): add $0x20,%rsp
3104(3): mov %rax,%r15
3107(5): jmp 0xfffffa02(%rip)
310c(5): movzx 0x7c(%rsp),%eax
3111(5): jmp 0xffffff1b(%rip)
3116(8): mov $0x2,0x8(%rsp)
311e(5): jmp 0xfffff99b(%rip)
3123(5): call 0xffffe19d(%rip)
3128(5): mov $0x0,0xd(%rsp)
312d(5): jmp 0xfffffa74(%rip)
3132(3): mov %r11,%rbp
3135(5): jmp 0xfffff99b(%rip)
313a(5): mov $0x1,0xe(%rsp)
313f(2): xor %eax,%eax
3141(3): xor %r12d,%r12d
3144(9): mov $0x0,0x50(%rsp)
314d(5): jmp 0xfffff5a7(%rip)
3152(3): mov %r13,%rdx
3155(5): mov 0x50(%rsp),%r13
315a(5): jmp 0xfffff5f8(%rip)
315f(5): call 0xffffe0a1(%rip)

"quotearg_n_options" :
3170(2): push %r15
3172(2): push %r14
3174(3): movsxd %edi,%r15
3177(2): push %r13
3179(2): push %r12
317b(3): mov %rdx,%r14
317e(1): push %rbp
317f(1): push %rbx
3180(3): mov %rcx,%rbp
3183(4): sub $0x28,%rsp
3187(5): mov %rsi,0x8(%rsp)
318c(5): call 0xffffe084(%rip)
3191(3): mov %rax,%r13
3194(2): mov (%rax),%eax
3196(3): test %r15d,%r15d
3199(7): mov 0x203ec0(%rip),%rbx
31a0(4): mov %eax,0x18(%rsp)
31a4(6): js 0x16d(%rip)
31aa(7): cmp %r15d,0x203ea7(%rip)
31b1(2): jnle 0x64(%rip)
31b3(7): cmp $0x7fffffff,%r15d
31ba(6): jz 0x15c(%rip)
31c0(4): lea 0x1(%r15),%r12d
31c4(7): lea 0x203ea5(%rip),%rax
31cb(3): movsxd %r12d,%rsi
31ce(4): shl/sal $0x4,%rsi
31d2(3): cmp %rax,%rbx
31d5(6): jz 0x11b(%rip)
31db(3): mov %rbx,%rdi
31de(5): call 0xf72(%rip)
31e3(3): mov %rax,%rbx
31e6(7): mov %rax,0x203e73(%rip)
31ed(7): movsxd 0x203e64(%rip),%rdi
31f4(3): mov %r12d,%edx
31f7(2): xor %esi,%esi
31f9(2): sub %edi,%edx
31fb(4): shl/sal $0x4,%rdi
31ff(3): movsxd %edx,%rdx
3202(3): add %rbx,%rdi
3205(4): shl/sal $0x4,%rdx
3209(5): call 0xffffe107(%rip)
320e(7): mov %r12d,0x203e43(%rip)
3215(3): mov 0x4(%rbp),%eax
3218(4): shl/sal $0x4,%r15
321c(4): sub $0x8,%rsp
3220(3): add %r15,%rbx
3223(4): lea 0x8(%rbp),%r15
3227(4): mov 0x0(%rbp),%r8d
322b(3): mov (%rbx),%r11
322e(4): mov 0x8(%rbx),%r12
3232(3): mov %r14,%rcx
3235(3): or $0x1,%eax
3238(4): mov %eax,0x24(%rsp)
323c(3): push 0x30(%rbp)
323f(3): mov %eax,%r9d
3242(3): push 0x28(%rbp)
3245(2): push %r15
3247(3): mov %r11,%rsi
324a(5): mov 0x28(%rsp),%rdx
324f(3): mov %r12,%rdi
3252(5): mov %r11,0x30(%rsp)
3257(5): call 0xffffecd9(%rip)
325c(4): add $0x20,%rsp
3260(5): mov 0x10(%rsp),%r11
3265(3): cmp %rax,%r11
3268(2): jnbe 0x69(%rip)
326a(4): lea 0x1(%rax),%rsi
326e(7): lea 0x203e8b(%rip),%rax
3275(3): cmp %rax,%r12
3278(3): mov %rsi,(%rbx)
327b(2): jz 0x14(%rip)
327d(3): mov %r12,%rdi
3280(5): mov %rsi,0x10(%rsp)
3285(5): call 0xffffdf6b(%rip)
328a(5): mov 0x10(%rsp),%rsi
328f(3): mov %rsi,%rdi
3292(5): mov %rsi,0x10(%rsp)
3297(5): call 0xe59(%rip)
329c(4): sub $0x8,%rsp
32a0(4): mov %rax,0x8(%rbx)
32a4(4): mov 0x0(%rbp),%r8d
32a8(3): push 0x30(%rbp)
32ab(3): push 0x28(%rbp)
32ae(3): mov %r14,%rcx
32b1(2): push %r15
32b3(5): mov 0x3c(%rsp),%r9d
32b8(3): mov %rax,%rdi
32bb(5): mov 0x28(%rsp),%rdx
32c0(5): mov 0x30(%rsp),%rsi
32c5(3): mov %rax,%r12
32c8(5): call 0xffffec68(%rip)
32cd(4): add $0x20,%rsp
32d1(4): mov 0x18(%rsp),%eax
32d5(4): mov %eax,0x0(%r13)
32d9(4): add $0x28,%rsp
32dd(3): mov %r12,%rax
32e0(1): pop %rbx
32e1(1): pop %rbp
32e2(2): pop %r12
32e4(2): pop %r13
32e6(2): pop %r14
32e8(2): pop %r15
32ea(1): ret near (%rsp)
32eb(5): nop 0x0(%rax,%rax,1)
32f0(2): xor %edi,%edi
32f2(5): call 0xe5e(%rip)
32f7(8): movdqa 0x203d71(%rip),%xmm0
32ff(3): mov %rax,%rbx
3302(7): mov %rax,0x203d57(%rip)
3309(3): movups %xmm0,(%rax)
330c(5): jmp 0xfffffee1(%rip)
3311(5): call 0xffffdeef(%rip)
3316(5): call 0x102a(%rip)

"clone_quoting_options" :
3320(2): push %r12
3322(1): push %rbp
3323(1): push %rbx
3324(3): mov %rdi,%rbx
3327(5): call 0xffffdee9(%rip)
332c(3): mov (%rax),%r12d
332f(3): mov %rax,%rbp
3332(7): lea 0x203ec7(%rip),%rax
3339(3): test %rbx,%rbx
333c(5): mov $0x38,%esi
3341(4): cmove %rax,%rbx
3345(3): mov %rbx,%rdi
3348(5): call 0xfa8(%rip)
334d(4): mov %r12d,0x0(%rbp)
3351(1): pop %rbx
3352(1): pop %rbp
3353(2): pop %r12
3355(1): ret near (%rsp)

"get_quoting_style" :
3360(7): lea 0x203e99(%rip),%rax
3367(3): test %rdi,%rdi
336a(4): cmove %rax,%rdi
336e(2): mov (%rdi),%eax
3370(1): ret near (%rsp)

"set_quoting_style" :
3380(7): lea 0x203e79(%rip),%rax
3387(3): test %rdi,%rdi
338a(4): cmove %rax,%rdi
338e(2): mov %esi,(%rdi)
3390(1): ret near (%rsp)

"set_char_quoting" :
33a0(7): lea 0x203e59(%rip),%rax
33a7(3): test %rdi,%rdi
33aa(2): mov %esi,%ecx
33ac(4): cmove %rax,%rdi
33b0(2): mov %esi,%eax
33b2(3): and $0x1f,%ecx
33b5(3): shr $0x5,%al
33b8(3): movzx %al,%eax
33bb(5): lea 0x8(%rdi,%rax,4),%rdi
33c0(2): mov (%rdi),%esi
33c2(2): mov %esi,%eax
33c4(2): shr %cl,%eax
33c6(2): xor %eax,%edx
33c8(3): and $0x1,%eax
33cb(3): and $0x1,%edx
33ce(2): shl/sal %cl,%edx
33d0(2): xor %esi,%edx
33d2(2): mov %edx,(%rdi)
33d4(1): ret near (%rsp)

"set_quoting_flags" :
33e0(7): lea 0x203e19(%rip),%rax
33e7(3): test %rdi,%rdi
33ea(4): cmove %rax,%rdi
33ee(3): mov 0x4(%rdi),%eax
33f1(3): mov %esi,0x4(%rdi)
33f4(1): ret near (%rsp)

"set_custom_quoting" :
3400(7): lea 0x203df9(%rip),%rax
3407(3): test %rdi,%rdi
340a(4): cmove %rax,%rdi
340e(3): test %rsi,%rsi
3411(6): mov $0xa,(%rdi)
3417(2): jz 0x10(%rip)
3419(3): test %rdx,%rdx
341c(2): jz 0xb(%rip)
341e(4): mov %rsi,0x28(%rdi)
3422(4): mov %rdx,0x30(%rdi)
3426(1): ret near (%rsp)
3427(4): sub $0x8,%rsp
342b(5): call 0xffffddd5(%rip)

"quotearg_buffer" :
3430(2): push %r15
3432(2): push %r14
3434(7): lea 0x203dc5(%rip),%rax
343b(2): push %r13
343d(2): push %r12
343f(3): mov %rdi,%r13
3442(1): push %rbp
3443(1): push %rbx
3444(3): mov %r8,%rbx
3447(3): mov %rsi,%r14
344a(3): mov %rdx,%r15
344d(4): sub $0x18,%rsp
3451(3): test %r8,%r8
3454(4): cmove %rax,%rbx
3458(5): mov %rcx,0x8(%rsp)
345d(5): call 0xffffddb3(%rip)
3462(3): mov (%rax),%r12d
3465(3): mov %rax,%rbp
3468(4): lea 0x8(%rbx),%rax
346c(4): sub $0x8,%rsp
3470(4): mov 0x4(%rbx),%r9d
3474(3): push 0x30(%rbx)
3477(3): mov (%rbx),%r8d
347a(3): push 0x28(%rbx)
347d(3): mov %r15,%rdx
3480(1): push %rax
3481(5): mov 0x28(%rsp),%rcx
3486(3): mov %r14,%rsi
3489(3): mov %r13,%rdi
348c(5): call 0xffffeaa4(%rip)
3491(4): mov %r12d,0x0(%rbp)
3495(4): add $0x38,%rsp
3499(1): pop %rbx
349a(1): pop %rbp
349b(2): pop %r12
349d(2): pop %r13
349f(2): pop %r14
34a1(2): pop %r15
34a3(1): ret near (%rsp)

"quotearg_alloc_mem" :
34b0(2): push %r15
34b2(2): push %r14
34b4(7): lea 0x203d45(%rip),%rax
34bb(2): push %r13
34bd(2): push %r12
34bf(3): mov %rdx,%r12
34c2(1): push %rbp
34c3(1): push %rbx
34c4(3): mov %rcx,%rbx
34c7(3): mov %rdi,%r14
34ca(3): mov %rsi,%r15
34cd(4): sub $0x38,%rsp
34d1(3): test %rcx,%rcx
34d4(4): cmove %rax,%rbx
34d8(2): xor %ebp,%ebp
34da(5): call 0xffffdd36(%rip)
34df(3): test %r12,%r12
34e2(3): mov %rax,%r13
34e5(2): mov (%rax),%eax
34e7(4): setz %bpl
34eb(3): or 0x4(%rbx),%ebp
34ee(4): lea 0x8(%rbx),%r10
34f2(4): sub $0x8,%rsp
34f6(3): mov (%rbx),%r8d
34f9(3): mov %r15,%rcx
34fc(4): mov %eax,0x14(%rsp)
3500(3): push 0x30(%rbx)
3503(3): mov %r14,%rdx
3506(3): push 0x28(%rbx)
3509(2): push %r10
350b(2): xor %esi,%esi
350d(3): mov %ebp,%r9d
3510(2): xor %edi,%edi
3512(5): mov %r10,0x40(%rsp)
3517(5): call 0xffffea19(%rip)
351c(4): lea 0x1(%rax),%rsi
3520(5): mov %rax,0x48(%rsp)
3525(4): add $0x20,%rsp
3529(3): mov %rsi,%rdi
352c(5): mov %rsi,0x18(%rsp)
3531(5): call 0xbbf(%rip)
3536(5): mov %rax,0x10(%rsp)
353b(4): sub $0x8,%rsp
353f(3): push 0x30(%rbx)
3542(3): push 0x28(%rbx)
3545(5): mov 0x38(%rsp),%r10
354a(3): mov %ebp,%r9d
354d(3): mov (%rbx),%r8d
3550(3): mov %r15,%rcx
3553(3): mov %r14,%rdx
3556(3): mov %rax,%rdi
3559(2): push %r10
355b(5): mov 0x38(%rsp),%rsi
3560(5): call 0xffffe9d0(%rip)
3565(4): mov 0x2c(%rsp),%eax
3569(4): add $0x20,%rsp
356d(3): test %r12,%r12
3570(4): mov %eax,0x0(%r13)
3574(2): jz 0xb(%rip)
3576(5): mov 0x28(%rsp),%r11
357b(4): mov %r11,(%r12)
357f(5): mov 0x10(%rsp),%rax
3584(4): add $0x38,%rsp
3588(1): pop %rbx
3589(1): pop %rbp
358a(2): pop %r12
358c(2): pop %r13
358e(2): pop %r14
3590(2): pop %r15
3592(1): ret near (%rsp)

"quotearg_alloc" :
35a0(3): mov %rdx,%rcx
35a3(2): xor %edx,%edx
35a5(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
35b0(6): mov 0x203aa2(%rip),%eax
35b6(2): push %r12
35b8(7): mov 0x203aa1(%rip),%r12
35bf(1): push %rbp
35c0(1): push %rbx
35c1(3): cmp $0x1,%eax
35c4(2): jle 0x2d(%rip)
35c6(3): sub $0x2,%eax
35c9(5): lea 0x18(%r12),%rbx
35ce(4): shl/sal $0x4,%rax
35d2(5): lea 0x28(%r12,%rax,1),%rbp
35d7(9): nop 0x0(%rax,%rax,1)
35e0(3): mov (%rbx),%rdi
35e3(4): add $0x10,%rbx
35e7(5): call 0xffffdc09(%rip)
35ec(3): cmp %rbp,%rbx
35ef(2): jnz 0xfffffff1(%rip)
35f1(5): mov 0x8(%r12),%rdi
35f6(7): lea 0x203b03(%rip),%rbx
35fd(3): cmp %rbx,%rdi
3600(2): jz 0x19(%rip)
3602(5): call 0xffffdbee(%rip)
3607(b): mov $0x100,0x203a5e(%rip)
3612(7): mov %rbx,0x203a5f(%rip)
3619(7): lea 0x203a50(%rip),%rbx
3620(3): cmp %rbx,%r12
3623(2): jz 0x11(%rip)
3625(3): mov %r12,%rdi
3628(5): call 0xffffdbc8(%rip)
362d(7): mov %rbx,0x203a2c(%rip)
3634(1): pop %rbx
3635(a): mov $0x1,0x203a19(%rip)
363f(1): pop %rbp
3640(2): pop %r12
3642(1): ret near (%rsp)

"quotearg_n" :
3650(7): lea 0x203ba9(%rip),%rcx
3657(7): mov $0xffffffff,%rdx
365e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
3670(7): lea 0x203b89(%rip),%rcx
3677(5): jmp 0xfffffaf9(%rip)

"quotearg" :
3680(7): lea 0x203b79(%rip),%rcx
3687(3): mov %rdi,%rsi
368a(7): mov $0xffffffff,%rdx
3691(2): xor %edi,%edi
3693(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
36a0(7): lea 0x203b59(%rip),%rcx
36a7(3): mov %rsi,%rdx
36aa(3): mov %rdi,%rsi
36ad(2): xor %edi,%edi
36af(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
36c0(4): sub $0x48,%rsp
36c4(3): mov %rdx,%rax
36c7(9): mov $0x28,%rdx
36d0(5): mov %rdx,0x38(%rsp)
36d5(2): xor %edx,%edx
36d7(3): cmp $0xa,%esi
36da(2): jz 0x6a(%rip)
36dc(3): mov %esi,(%rsp)
36df(3): mov %rsp,%rcx
36e2(7): mov $0xffffffff,%rdx
36e9(3): mov %rax,%rsi
36ec(9): mov $0x0,0x4(%rsp)
36f5(9): mov $0x0,0xc(%rsp)
36fe(9): mov $0x0,0x14(%rsp)
3707(9): mov $0x0,0x1c(%rsp)
3710(9): mov $0x0,0x24(%rsp)
3719(9): mov $0x0,0x2c(%rsp)
3722(8): mov $0x0,0x34(%rsp)
372a(5): call 0xfffffa46(%rip)
372f(5): mov 0x38(%rsp),%rcx
3734(9): xor $0x28,%rcx
373d(2): jnz 0xc(%rip)
373f(4): add $0x48,%rsp
3743(1): ret near (%rsp)
3744(5): call 0xffffdabc(%rip)
3749(5): call 0xffffdb77(%rip)

"quotearg_n_style_mem" :
3750(4): sub $0x48,%rsp
3754(3): mov %rdx,%rax
3757(3): mov %rcx,%rdx
375a(9): mov $0x28,%rcx
3763(5): mov %rcx,0x38(%rsp)
3768(2): xor %ecx,%ecx
376a(3): cmp $0xa,%esi
376d(2): jz 0x63(%rip)
376f(3): mov %esi,(%rsp)
3772(3): mov %rsp,%rcx
3775(3): mov %rax,%rsi
3778(9): mov $0x0,0x4(%rsp)
3781(9): mov $0x0,0xc(%rsp)
378a(9): mov $0x0,0x14(%rsp)
3793(9): mov $0x0,0x1c(%rsp)
379c(9): mov $0x0,0x24(%rsp)
37a5(9): mov $0x0,0x2c(%rsp)
37ae(8): mov $0x0,0x34(%rsp)
37b6(5): call 0xfffff9ba(%rip)
37bb(5): mov 0x38(%rsp),%rdx
37c0(9): xor $0x28,%rdx
37c9(2): jnz 0xc(%rip)
37cb(4): add $0x48,%rsp
37cf(1): ret near (%rsp)
37d0(5): call 0xffffda30(%rip)
37d5(5): call 0xffffdaeb(%rip)

"quotearg_style" :
37e0(3): mov %rsi,%rdx
37e3(2): mov %edi,%esi
37e5(2): xor %edi,%edi
37e7(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
37f0(3): mov %rdx,%rcx
37f3(3): mov %rsi,%rdx
37f6(2): mov %edi,%esi
37f8(2): xor %edi,%edi
37fa(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
3800(4): sub $0x48,%rsp
3804(2): mov %edx,%ecx
3806(9): mov $0x28,%rax
380f(5): mov %rax,0x38(%rsp)
3814(2): xor %eax,%eax
3816(7): mov 0x203a13(%rip),%rax
381d(3): mov %rsp,%r8
3820(3): and $0x1f,%ecx
3823(8): movdqa 0x2039d5(%rip),%xmm0
382b(5): mov %rax,0x30(%rsp)
3830(2): mov %edx,%eax
3832(4): movaps %xmm0,(%rsp)
3836(3): shr $0x5,%al
3839(3): movzx %al,%eax
383c(5): lea 0x8(%r8,%rax,4),%r9
3841(8): movdqa 0x2039c7(%rip),%xmm0
3849(5): movaps %xmm0,0x10(%rsp)
384e(8): movdqa 0x2039ca(%rip),%xmm0
3856(5): movaps %xmm0,0x20(%rsp)
385b(3): mov (%r9),%edx
385e(2): mov %edx,%eax
3860(2): shr %cl,%eax
3862(2): not %eax
3864(3): and $0x1,%eax
3867(2): shl/sal %cl,%eax
3869(3): mov %r8,%rcx
386c(2): xor %edx,%eax
386e(3): mov %rsi,%rdx
3871(3): mov %rdi,%rsi
3874(3): mov %eax,(%r9)
3877(2): xor %edi,%edi
3879(5): call 0xfffff8f7(%rip)
387e(5): mov 0x38(%rsp),%rsi
3883(9): xor $0x28,%rsi
388c(2): jnz 0x7(%rip)
388e(4): add $0x48,%rsp
3892(1): ret near (%rsp)
3893(5): call 0xffffda2d(%rip)

"quotearg_char" :
38a0(4): movsx %sil,%edx
38a4(7): mov $0xffffffff,%rsi
38ab(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
38b0(5): mov $0x3a,%edx
38b5(7): mov $0xffffffff,%rsi
38bc(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
38d0(5): mov $0x3a,%edx
38d5(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
38e0(4): sub $0x48,%rsp
38e4(3): mov %rdx,%rax
38e7(9): mov $0x28,%rdx
38f0(5): mov %rdx,0x38(%rsp)
38f5(2): xor %edx,%edx
38f7(3): cmp $0xa,%esi
38fa(2): jz 0x6a(%rip)
38fc(3): mov %esi,(%rsp)
38ff(3): mov %rsp,%rcx
3902(7): mov $0xffffffff,%rdx
3909(3): mov %rax,%rsi
390c(9): mov $0x0,0x4(%rsp)
3915(9): mov $0x4000000,0xc(%rsp)
391e(9): mov $0x0,0x14(%rsp)
3927(9): mov $0x0,0x1c(%rsp)
3930(9): mov $0x0,0x24(%rsp)
3939(9): mov $0x0,0x2c(%rsp)
3942(8): mov $0x0,0x34(%rsp)
394a(5): call 0xfffff826(%rip)
394f(5): mov 0x38(%rsp),%rcx
3954(9): xor $0x28,%rcx
395d(2): jnz 0xc(%rip)
395f(4): add $0x48,%rsp
3963(1): ret near (%rsp)
3964(5): call 0xffffd89c(%rip)
3969(5): call 0xffffd957(%rip)

"quotearg_n_custom_mem" :
3970(4): sub $0x48,%rsp
3974(3): mov %rcx,%r9
3977(7): mov 0x2038b2(%rip),%rcx
397e(8): movdqa 0x20387a(%rip),%xmm0
3986(9): mov $0x28,%rax
398f(5): mov %rax,0x38(%rsp)
3994(2): xor %eax,%eax
3996(4): movaps %xmm0,(%rsp)
399a(3): test %rsi,%rsi
399d(5): mov %rcx,0x30(%rsp)
39a2(7): mov $0xa,(%rsp)
39a9(8): movdqa 0x20385f(%rip),%xmm0
39b1(5): movaps %xmm0,0x10(%rsp)
39b6(8): movdqa 0x203862(%rip),%xmm0
39be(5): movaps %xmm0,0x20(%rsp)
39c3(2): jz 0x34(%rip)
39c5(3): test %rdx,%rdx
39c8(2): jz 0x2f(%rip)
39ca(5): mov %rsi,0x28(%rsp)
39cf(5): mov %rdx,0x30(%rsp)
39d4(3): mov %rsp,%rcx
39d7(3): mov %r8,%rdx
39da(3): mov %r9,%rsi
39dd(5): call 0xfffff793(%rip)
39e2(5): mov 0x38(%rsp),%rdi
39e7(9): xor $0x28,%rdi
39f0(2): jnz 0xc(%rip)
39f2(4): add $0x48,%rsp
39f6(1): ret near (%rsp)
39f7(5): call 0xffffd809(%rip)
39fc(5): call 0xffffd8c4(%rip)

"quotearg_n_custom" :
3a10(7): mov $0xffffffff,%r8
3a17(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
3a20(3): mov %rdx,%rcx
3a23(7): mov $0xffffffff,%r8
3a2a(3): mov %rsi,%rdx
3a2d(3): mov %rdi,%rsi
3a30(2): xor %edi,%edi
3a32(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
3a40(3): mov %rcx,%r8
3a43(3): mov %rdx,%rcx
3a46(3): mov %rsi,%rdx
3a49(3): mov %rdi,%rsi
3a4c(2): xor %edi,%edi
3a4e(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
3a60(7): lea 0x2035b9(%rip),%rcx
3a67(5): jmp 0xfffff709(%rip)

"quote_mem" :
3a70(7): lea 0x2035a9(%rip),%rcx
3a77(3): mov %rsi,%rdx
3a7a(3): mov %rdi,%rsi
3a7d(2): xor %edi,%edi
3a7f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
3a90(7): lea 0x203589(%rip),%rcx
3a97(7): mov $0xffffffff,%rdx
3a9e(5): jmp 0xfffff6d2(%rip)

"quote" :
3ab0(7): lea 0x203569(%rip),%rcx
3ab7(3): mov %rdi,%rsi
3aba(7): mov $0xffffffff,%rdx
3ac1(2): xor %edi,%edi
3ac3(5): jmp 0xfffff6ad(%rip)

"version_etc_arn" :
3ad0(2): push %r15
3ad2(2): push %r14
3ad4(2): push %r13
3ad6(2): push %r12
3ad8(3): mov %r9,%r12
3adb(1): push %rbp
3adc(1): push %rbx
3add(3): mov %rdi,%rbp
3ae0(3): mov %r8,%rbx
3ae3(4): sub $0x28,%rsp
3ae7(3): test %rsi,%rsi
3aea(6): jz 0x11e(%rip)
3af0(3): mov %rdx,%r8
3af3(7): lea 0x13ee(%rip),%rdx
3afa(3): mov %rcx,%r9
3afd(2): xor %eax,%eax
3aff(3): mov %rsi,%rcx
3b02(5): mov $0x1,%esi
3b07(5): call 0xffffd929(%rip)
3b0c(7): lea 0x13e8(%rip),%rsi
3b13(2): xor %edi,%edi
3b15(5): mov $0x5,%edx
3b1a(5): call 0xffffd776(%rip)
3b1f(7): lea 0x16fa(%rip),%rdx
3b26(3): mov %rax,%rcx
3b29(6): mov $0x7e3,%r8d
3b2f(5): mov $0x1,%esi
3b34(3): mov %rbp,%rdi
3b37(2): xor %eax,%eax
3b39(5): call 0xffffd8f7(%rip)
3b3e(7): lea 0x1443(%rip),%rsi
3b45(2): xor %edi,%edi
3b47(5): mov $0x5,%edx
3b4c(5): call 0xffffd744(%rip)
3b51(3): mov %rbp,%rsi
3b54(3): mov %rax,%rdi
3b57(5): call 0xffffd7d9(%rip)
3b5c(4): cmp $0x9,%r12
3b60(6): jnbe 0x340(%rip)
3b66(7): lea 0x167b(%rip),%rdx
3b6d(4): movsxd 0x0(%rdx,%r12,4),%rax
3b71(3): add %rdx,%rax
3b74(2): jmp %rax
3b76(a): nop 0x0(%rax,%rax,1)
3b80(4): mov 0x38(%rbx),%r9
3b84(4): mov 0x10(%rbx),%rax
3b88(7): lea 0x1569(%rip),%rsi
3b8f(4): mov 0x8(%rbx),%r8
3b93(5): mov $0x5,%edx
3b98(2): xor %edi,%edi
3b9a(4): mov 0x30(%rbx),%r13
3b9e(4): mov 0x28(%rbx),%r12
3ba2(5): mov %r9,0x10(%rsp)
3ba7(4): mov 0x20(%rbx),%r15
3bab(4): mov 0x18(%rbx),%r14
3baf(4): mov %rax,(%rsp)
3bb3(5): mov %r8,0x8(%rsp)
3bb8(3): mov (%rbx),%rbx
3bbb(5): call 0xffffd6d5(%rip)
3bc0(4): sub $0x8,%rsp
3bc4(5): mov 0x18(%rsp),%r9
3bc9(3): mov %rax,%rdx
3bcc(3): mov %rbx,%rcx
3bcf(5): mov $0x1,%esi
3bd4(3): mov %rbp,%rdi
3bd7(2): xor %eax,%eax
3bd9(2): push %r9
3bdb(2): push %r13
3bdd(2): push %r12
3bdf(2): push %r15
3be1(2): push %r14
3be3(5): mov 0x30(%rsp),%r9
3be8(5): mov 0x38(%rsp),%r8
3bed(5): call 0xffffd843(%rip)
3bf2(4): add $0x30,%rsp
3bf6(4): add $0x28,%rsp
3bfa(1): pop %rbx
3bfb(1): pop %rbp
3bfc(2): pop %r12
3bfe(2): pop %r13
3c00(2): pop %r14
3c02(2): pop %r15
3c04(1): ret near (%rsp)
3c05(3): nop (%rax)
3c08(3): mov %rcx,%r8
3c0b(3): mov %rdx,%rcx
3c0e(7): lea 0x12df(%rip),%rdx
3c15(5): mov $0x1,%esi
3c1a(2): xor %eax,%eax
3c1c(5): call 0xffffd814(%rip)
3c21(5): jmp 0xfffffeeb(%rip)
3c26(a): nop 0x0(%rax,%rax,1)
3c30(4): mov 0x40(%rbx),%r10
3c34(4): mov 0x38(%rbx),%r9
3c38(7): lea 0x14e9(%rip),%rsi
3c3f(4): mov 0x10(%rbx),%rax
3c43(4): mov 0x8(%rbx),%r8
3c47(5): mov $0x5,%edx
3c4c(4): mov 0x30(%rbx),%r13
3c50(4): mov 0x28(%rbx),%r12
3c54(4): mov 0x20(%rbx),%r15
3c58(4): mov 0x18(%rbx),%r14
3c5c(3): mov (%rbx),%rbx
3c5f(5): mov %r10,0x18(%rsp)
3c64(5): mov %r9,0x10(%rsp)
3c69(4): mov %rax,(%rsp)
3c6d(5): mov %r8,0x8(%rsp)
3c72(2): xor %edi,%edi
3c74(5): call 0xffffd61c(%rip)
3c79(5): mov 0x18(%rsp),%r10
3c7e(2): push %r10
3c80(5): jmp 0xffffff44(%rip)
3c85(3): nop (%rax)
3c88(3): mov (%rbx),%rbx
3c8b(7): lea 0x126d(%rip),%rsi
3c92(5): mov $0x5,%edx
3c97(2): xor %edi,%edi
3c99(5): call 0xffffd5f7(%rip)
3c9e(4): add $0x28,%rsp
3ca2(3): mov %rbx,%rcx
3ca5(3): mov %rbp,%rdi
3ca8(1): pop %rbx
3ca9(1): pop %rbp
3caa(2): pop %r12
3cac(2): pop %r13
3cae(2): pop %r14
3cb0(2): pop %r15
3cb2(3): mov %rax,%rdx
3cb5(5): mov $0x1,%esi
3cba(2): xor %eax,%eax
3cbc(5): jmp 0xffffd774(%rip)
3cc1(7): nop 0x0(%rax)
3cc8(4): mov 0x8(%rbx),%r12
3ccc(7): lea 0x123c(%rip),%rsi
3cd3(3): mov (%rbx),%rbx
3cd6(5): mov $0x5,%edx
3cdb(2): xor %edi,%edi
3cdd(5): call 0xffffd5b3(%rip)
3ce2(4): add $0x28,%rsp
3ce6(3): mov %r12,%r8
3ce9(3): mov %rbx,%rcx
3cec(3): mov %rbp,%rdi
3cef(3): mov %rax,%rdx
3cf2(5): mov $0x1,%esi
3cf7(1): pop %rbx
3cf8(1): pop %rbp
3cf9(2): pop %r12
3cfb(2): pop %r13
3cfd(2): pop %r14
3cff(2): pop %r15
3d01(2): xor %eax,%eax
3d03(5): jmp 0xffffd72d(%rip)
3d08(8): nop 0x0(%rax,%rax,1)
3d10(4): mov 0x10(%rbx),%r13
3d14(4): mov 0x8(%rbx),%r12
3d18(7): lea 0x1207(%rip),%rsi
3d1f(3): mov (%rbx),%rbx
3d22(5): mov $0x5,%edx
3d27(2): xor %edi,%edi
3d29(5): call 0xffffd567(%rip)
3d2e(4): add $0x28,%rsp
3d32(3): mov %r13,%r9
3d35(3): mov %r12,%r8
3d38(3): mov %rbx,%rcx
3d3b(3): mov %rbp,%rdi
3d3e(3): mov %rax,%rdx
3d41(1): pop %rbx
3d42(1): pop %rbp
3d43(2): pop %r12
3d45(2): pop %r13
3d47(2): pop %r14
3d49(2): pop %r15
3d4b(5): mov $0x1,%esi
3d50(2): xor %eax,%eax
3d52(5): jmp 0xffffd6de(%rip)
3d57(9): nop 0x0(%rax,%rax,1)
3d60(7): lea 0x12f1(%rip),%rsi
3d67(5): mov $0x5,%edx
3d6c(2): xor %edi,%edi
3d6e(4): mov 0x18(%rbx),%r14
3d72(4): mov 0x10(%rbx),%r13
3d76(4): mov 0x8(%rbx),%r12
3d7a(3): mov (%rbx),%rbx
3d7d(5): call 0xffffd513(%rip)
3d82(4): sub $0x8,%rsp
3d86(2): push %r14
3d88(3): mov %rax,%rdx
3d8b(3): mov %r13,%r9
3d8e(3): mov %r12,%r8
3d91(3): mov %rbx,%rcx
3d94(3): mov %rbp,%rdi
3d97(5): mov $0x1,%esi
3d9c(2): xor %eax,%eax
3d9e(5): call 0xffffd692(%rip)
3da3(1): pop %rax
3da4(1): pop %rdx
3da5(4): add $0x28,%rsp
3da9(1): pop %rbx
3daa(1): pop %rbp
3dab(2): pop %r12
3dad(2): pop %r13
3daf(2): pop %r14
3db1(2): pop %r15
3db3(1): ret near (%rsp)
3db4(4): nop 0x0(%rax)
3db8(4): mov 0x20(%rbx),%r15
3dbc(7): lea 0x12b5(%rip),%rsi
3dc3(5): mov $0x5,%edx
3dc8(2): xor %edi,%edi
3dca(4): mov 0x18(%rbx),%r14
3dce(4): mov 0x10(%rbx),%r13
3dd2(4): mov 0x8(%rbx),%r12
3dd6(3): mov (%rbx),%rbx
3dd9(5): call 0xffffd4b7(%rip)
3dde(2): push %r15
3de0(2): jmp 0xffffffa6(%rip)
3de2(6): nop 0x0(%rax,%rax,1)
3de8(4): mov 0x8(%rbx),%r8
3dec(4): mov 0x28(%rbx),%r12
3df0(7): lea 0x12a9(%rip),%rsi
3df7(4): mov 0x20(%rbx),%r15
3dfb(4): mov 0x18(%rbx),%r14
3dff(5): mov $0x5,%edx
3e04(4): mov 0x10(%rbx),%r13
3e08(2): xor %edi,%edi
3e0a(3): mov (%rbx),%rbx
3e0d(4): mov %r8,(%rsp)
3e11(5): call 0xffffd47f(%rip)
3e16(4): sub $0x8,%rsp
3e1a(3): mov %r13,%r9
3e1d(2): push %r12
3e1f(2): push %r15
3e21(2): push %r14
3e23(5): mov 0x20(%rsp),%r8
3e28(3): mov %rbx,%rcx
3e2b(3): mov %rax,%rdx
3e2e(3): mov %rbp,%rdi
3e31(5): mov $0x1,%esi
3e36(2): xor %eax,%eax
3e38(5): call 0xffffd5f8(%rip)
3e3d(4): add $0x20,%rsp
3e41(4): add $0x28,%rsp
3e45(1): pop %rbx
3e46(1): pop %rbp
3e47(2): pop %r12
3e49(2): pop %r13
3e4b(2): pop %r14
3e4d(2): pop %r15
3e4f(1): ret near (%rsp)
3e50(4): mov 0x10(%rbx),%r9
3e54(4): mov 0x30(%rbx),%r13
3e58(7): lea 0x1269(%rip),%rsi
3e5f(4): mov 0x28(%rbx),%r12
3e63(4): mov 0x20(%rbx),%r15
3e67(5): mov $0x5,%edx
3e6c(4): mov 0x18(%rbx),%r14
3e70(4): mov 0x8(%rbx),%r8
3e74(2): xor %edi,%edi
3e76(5): mov %r9,0x8(%rsp)
3e7b(3): mov (%rbx),%rbx
3e7e(4): mov %r8,(%rsp)
3e82(5): call 0xffffd40e(%rip)
3e87(2): push %r13
3e89(2): push %r12
3e8b(2): push %r15
3e8d(2): push %r14
3e8f(5): mov 0x28(%rsp),%r9
3e94(2): jmp 0xffffff8f(%rip)
3e96(a): nop 0x0(%rax,%rax,1)
3ea0(4): mov 0x40(%rbx),%r10
3ea4(4): mov 0x38(%rbx),%r9
3ea8(5): mov $0x5,%edx
3ead(4): mov 0x10(%rbx),%rax
3eb1(4): mov 0x8(%rbx),%r8
3eb5(7): lea 0x12a4(%rip),%rsi
3ebc(4): mov 0x30(%rbx),%r13
3ec0(4): mov 0x28(%rbx),%r12
3ec4(4): mov 0x20(%rbx),%r15
3ec8(4): mov 0x18(%rbx),%r14
3ecc(5): mov %r10,0x18(%rsp)
3ed1(5): mov %r9,0x10(%rsp)
3ed6(4): mov %rax,(%rsp)
3eda(5): mov %r8,0x8(%rsp)
3edf(3): mov (%rbx),%rbx
3ee2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
3ef0(3): xor %r9d,%r9d
3ef3(4): cmp $0x0,(%r8)
3ef7(2): jz 0x14(%rip)
3ef9(7): nop 0x0(%rax)
3f00(4): add $0x1,%r9
3f04(5): cmp $0x0,0x0(%r8,%r9,8)
3f09(2): jnz 0xfffffff7(%rip)
3f0b(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
3f10(4): sub $0x68,%rsp
3f14(3): mov %r8,%r10
3f17(3): xor %r9d,%r9d
3f1a(9): mov $0x28,%rax
3f23(5): mov %rax,0x58(%rsp)
3f28(2): xor %eax,%eax
3f2a(3): mov %rsp,%r8
3f2d(3): nop (%rax)
3f30(3): mov (%r10),%eax
3f33(3): cmp $0x2f,%eax
3f36(2): jnbe 0x44(%rip)
3f38(3): mov %eax,%r11d
3f3b(4): add 0x10(%r10),%r11
3f3f(3): add $0x8,%eax
3f42(3): mov %eax,(%r10)
3f45(3): mov (%r11),%rax
3f48(3): test %rax,%rax
3f4b(4): mov %rax,0x0(%r8,%r9,8)
3f4f(2): jz 0xc(%rip)
3f51(4): add $0x1,%r9
3f55(4): cmp $0xa,%r9
3f59(2): jnz 0xffffffd7(%rip)
3f5b(5): call 0xfffffb75(%rip)
3f60(5): mov 0x58(%rsp),%rax
3f65(9): xor $0x28,%rax
3f6e(2): jnz 0x7(%rip)
3f70(4): add $0x68,%rsp
3f74(1): ret near (%rsp)
3f75(5): call 0xffffd34b(%rip)
3f7a(4): mov 0x8(%r10),%r11
3f7e(4): lea 0x8(%r11),%rax
3f82(4): mov %rax,0x8(%r10)
3f86(2): jmp 0xffffffbf(%rip)

"version_etc" :
3f90(1): push %rbp
3f91(1): push %rbx
3f92(6): mov $0x20,%r10d
3f98(3): xor %r11d,%r11d
3f9b(7): sub $0xb8,%rsp
3fa2(9): mov $0x28,%rax
3fab(5): mov %rax,0x78(%rsp)
3fb0(2): xor %eax,%eax
3fb2(8): lea 0xd0(%rsp),%rax
3fba(8): mov %r8,0xa0(%rsp)
3fc2(8): lea 0xd0(%rsp),%rbx
3fca(5): lea 0x20(%rsp),%r8
3fcf(8): mov %r9,0xa8(%rsp)
3fd7(8): mov $0x20,0x8(%rsp)
3fdf(5): mov %rax,0x10(%rsp)
3fe4(8): lea 0x80(%rsp),%rax
3fec(3): xor %r9d,%r9d
3fef(5): mov %rax,0x18(%rsp)
3ff4(3): mov %rax,%rbp
3ff7(9): nop 0x0(%rax,%rax,1)
4000(4): cmp $0x2f,%r10d
4004(2): jnbe 0x58(%rip)
4006(3): mov %r10d,%eax
4009(6): mov $0x1,%r11d
400f(4): add $0x8,%r10d
4013(3): add %rbp,%rax
4016(3): mov (%rax),%rax
4019(3): test %rax,%rax
401c(4): mov %rax,0x0(%r8,%r9,8)
4020(2): jz 0xc(%rip)
4022(4): add $0x1,%r9
4026(4): cmp $0xa,%r9
402a(2): jnz 0xffffffd6(%rip)
402c(3): test %r11b,%r11b
402f(2): jnz 0x26(%rip)
4031(5): call 0xfffffa9f(%rip)
4036(5): mov 0x78(%rsp),%rax
403b(9): xor $0x28,%rax
4044(2): jnz 0xc(%rip)
4046(7): add $0xb8,%rsp
404d(1): pop %rbx
404e(1): pop %rbp
404f(1): ret near (%rsp)
4050(5): call 0xffffd270(%rip)
4055(5): mov %r10d,0x8(%rsp)
405a(2): jmp 0xffffffd7(%rip)
405c(3): mov %rbx,%rax
405f(4): add $0x8,%rbx
4063(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
4070(1): push %rbx
4071(7): lea 0xeca(%rip),%rsi
4078(5): mov $0x5,%edx
407d(2): xor %edi,%edi
407f(5): call 0xffffd211(%rip)
4084(7): lea 0xecc(%rip),%rdx
408b(3): mov %rax,%rsi
408e(5): mov $0x1,%edi
4093(2): xor %eax,%eax
4095(5): call 0xffffd33b(%rip)
409a(7): lea 0xecc(%rip),%rsi
40a1(5): mov $0x5,%edx
40a6(2): xor %edi,%edi
40a8(5): call 0xffffd1e8(%rip)
40ad(7): lea 0x84c(%rip),%rcx
40b4(7): lea 0x6c6(%rip),%rdx
40bb(3): mov %rax,%rsi
40be(5): mov $0x1,%edi
40c3(2): xor %eax,%eax
40c5(5): call 0xffffd30b(%rip)
40ca(7): mov 0x202fb7(%rip),%rbx
40d1(7): lea 0x10c8(%rip),%rsi
40d8(2): xor %edi,%edi
40da(5): mov $0x5,%edx
40df(5): call 0xffffd1b1(%rip)
40e4(3): mov %rbx,%rsi
40e7(3): mov %rax,%rdi
40ea(1): pop %rbx
40eb(5): jmp 0xffffd245(%rip)

"xmalloc" :
40f0(1): push %rbx
40f1(3): mov %rdi,%rbx
40f4(5): call 0xffffd27c(%rip)
40f9(3): test %rax,%rax
40fc(2): jnz 0x7(%rip)
40fe(3): test %rbx,%rbx
4101(2): jnz 0x4(%rip)
4103(1): pop %rbx
4104(1): ret near (%rsp)
4105(5): call 0x23b(%rip)

"xnmalloc" :
4110(3): mov %rdi,%rax
4113(3): mul %rax,%rsi,%rdx
4116(3): mov %rax,%rdi
4119(3): seto %al
411c(3): test %rdi,%rdi
411f(2): js 0xc(%rip)
4121(3): movzx %al,%eax
4124(3): test %rax,%rax
4127(2): jnz 0x4(%rip)
4129(2): jmp 0xffffffc7(%rip)
412b(4): sub $0x8,%rsp
412f(5): call 0x211(%rip)

"xrealloc" :
4150(3): test %rsi,%rsi
4153(1): push %rbx
4154(3): mov %rsi,%rbx
4157(2): jnz 0x7(%rip)
4159(3): test %rdi,%rdi
415c(2): jnz 0x1c(%rip)
415e(3): mov %rbx,%rsi
4161(5): call 0xffffd24f(%rip)
4166(3): test %rax,%rax
4169(2): jnz 0x7(%rip)
416b(3): test %rbx,%rbx
416e(2): jnz 0x13(%rip)
4170(1): pop %rbx
4171(1): ret near (%rsp)
4172(6): nop 0x0(%rax,%rax,1)
4178(5): call 0xffffd078(%rip)
417d(2): xor %eax,%eax
417f(1): pop %rbx
4180(1): ret near (%rsp)
4181(5): call 0x1bf(%rip)

"xnrealloc" :
4190(3): mov %rsi,%rax
4193(3): mul %rax,%rdx,%rdx
4196(3): mov %rax,%rsi
4199(3): seto %al
419c(3): test %rsi,%rsi
419f(2): js 0xc(%rip)
41a1(3): movzx %al,%eax
41a4(3): test %rax,%rax
41a7(2): jnz 0x4(%rip)
41a9(2): jmp 0xffffffa7(%rip)
41ab(4): sub $0x8,%rsp
41af(5): call 0x191(%rip)

"x2nrealloc" :
41c0(3): test %rdi,%rdi
41c3(3): mov %rdx,%r9
41c6(3): mov (%rsi),%rcx
41c9(2): jz 0x37(%rip)
41cb(2): xor %edx,%edx
41cd(a): mov $0x6148914691236517204,%rax
41d7(3): div %r9,%rax
41da(3): cmp %rcx,%rax
41dd(2): jbe 0x3e(%rip)
41df(3): mov %rcx,%rax
41e2(3): shr $0x1,%rax
41e5(5): lea 0x1(%rax,%rcx,1),%rcx
41ea(3): mov %rcx,(%rsi)
41ed(4): imul %r9,%rcx
41f1(3): mov %rcx,%rsi
41f4(5): jmp 0xffffff5c(%rip)
41f9(7): nop 0x0(%rax)
4200(3): test %rcx,%rcx
4203(2): jz 0x25(%rip)
4205(3): mov %rcx,%rax
4208(3): mul %rax,%r9,%rdx
420b(3): seto %dl
420e(3): test %rax,%rax
4211(3): movzx %dl,%edx
4214(2): js 0x7(%rip)
4216(3): test %rdx,%rdx
4219(2): jz 0xffffffd1(%rip)
421b(4): sub $0x8,%rsp
421f(5): call 0x121(%rip)
4224(4): nop 0x0(%rax)
4228(2): xor %edx,%edx
422a(5): mov $0x80,%eax
422f(3): xor %r8d,%r8d
4232(3): div %r9,%rax
4235(3): test %rax,%rax
4238(4): setz %r8b
423c(4): lea 0x0(%r8,%rax,1),%rcx
4240(2): jmp 0xffffffc5(%rip)

"x2realloc" :
4250(3): test %rdi,%rdi
4253(3): mov (%rsi),%rax
4256(2): jz 0x2a(%rip)
4258(a): mov $0x6148914691236517203,%rdx
4262(3): cmp %rdx,%rax
4265(2): jnbe 0x2c(%rip)
4267(3): mov %rax,%rdx
426a(3): shr $0x1,%rdx
426d(5): lea 0x1(%rdx,%rax,1),%rax
4272(3): mov %rax,(%rsi)
4275(3): mov %rax,%rsi
4278(5): jmp 0xfffffed8(%rip)
427d(3): nop (%rax)
4280(3): test %rax,%rax
4283(5): mov $0x80,%edx
4288(4): cmove %rdx,%rax
428c(3): test %rax,%rax
428f(2): jns 0xffffffe3(%rip)
4291(4): sub $0x8,%rsp
4295(5): call 0xab(%rip)

"xzalloc" :
42a0(1): push %rbx
42a1(3): mov %rdi,%rbx
42a4(5): call 0xfffffe4c(%rip)
42a9(3): mov %rbx,%rdx
42ac(2): xor %esi,%esi
42ae(3): mov %rax,%rdi
42b1(1): pop %rbx
42b2(5): jmp 0xffffd05e(%rip)

"xcalloc" :
42c0(3): mov %rdi,%rax
42c3(4): sub $0x8,%rsp
42c7(3): mul %rax,%rsi,%rdx
42ca(3): seto %dl
42cd(3): test %rax,%rax
42d0(2): js 0x19(%rip)
42d2(3): movzx %dl,%edx
42d5(3): test %rdx,%rdx
42d8(2): jnz 0x11(%rip)
42da(5): call 0xffffd066(%rip)
42df(3): test %rax,%rax
42e2(2): jz 0x7(%rip)
42e4(4): add $0x8,%rsp
42e8(1): ret near (%rsp)
42e9(5): call 0x57(%rip)

"xmemdup" :
42f0(1): push %rbp
42f1(1): push %rbx
42f2(3): mov %rdi,%rbp
42f5(3): mov %rsi,%rdi
42f8(3): mov %rsi,%rbx
42fb(4): sub $0x8,%rsp
42ff(5): call 0xfffffdf1(%rip)
4304(4): add $0x8,%rsp
4308(3): mov %rbx,%rdx
430b(3): mov %rbp,%rsi
430e(1): pop %rbx
430f(1): pop %rbp
4310(3): mov %rax,%rdi
4313(5): jmp 0xffffd03d(%rip)

"xstrdup" :
4320(1): push %rbx
4321(3): mov %rdi,%rbx
4324(5): call 0xffffcf8c(%rip)
4329(3): mov %rbx,%rdi
432c(4): lea 0x1(%rax),%rsi
4330(1): pop %rbx
4331(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
4340(7): lea 0xf08(%rip),%rsi
4347(4): sub $0x8,%rsp
434b(5): mov $0x5,%edx
4350(2): xor %edi,%edi
4352(5): call 0xffffcf3e(%rip)
4357(6): mov 0x202cbb(%rip),%edi
435d(7): lea 0x654(%rip),%rdx
4364(3): mov %rax,%rcx
4367(2): xor %esi,%esi
4369(2): xor %eax,%eax
436b(5): call 0xffffd075(%rip)
4370(5): call 0xffffce90(%rip)

"rpl_mbrtowc" :
4380(2): push %r13
4382(2): push %r12
4384(3): mov %rsi,%r13
4387(1): push %rbp
4388(1): push %rbx
4389(3): mov %rdi,%rbx
438c(3): mov %rdx,%r12
438f(4): sub $0x18,%rsp
4393(9): mov $0x28,%rax
439c(5): mov %rax,0x8(%rsp)
43a1(2): xor %eax,%eax
43a3(5): lea 0x4(%rsp),%rax
43a8(3): test %rdi,%rdi
43ab(4): cmove %rax,%rbx
43af(3): mov %rbx,%rdi
43b2(5): call 0xffffcf2e(%rip)
43b7(4): cmp $0xfffffffd,%rax
43bb(3): mov %rax,%rbp
43be(2): jbe 0x22(%rip)
43c0(3): test %r12,%r12
43c3(2): jz 0x1d(%rip)
43c5(2): xor %edi,%edi
43c7(5): call 0xc9(%rip)
43cc(2): test %al,%al
43ce(2): jnz 0x12(%rip)
43d0(5): movzx 0x0(%r13),%eax
43d5(5): mov $0x1,%ebp
43da(2): mov %eax,(%rbx)
43dc(4): nop 0x0(%rax)
43e0(5): mov 0x8(%rsp),%rdx
43e5(9): xor $0x28,%rdx
43ee(3): mov %rbp,%rax
43f1(2): jnz 0xd(%rip)
43f3(4): add $0x18,%rsp
43f7(1): pop %rbx
43f8(1): pop %rbp
43f9(2): pop %r12
43fb(2): pop %r13
43fd(1): ret near (%rsp)
43fe(5): call 0xffffcec2(%rip)

"close_stream" :
4410(2): push %r12
4412(1): push %rbp
4413(3): mov %rdi,%rbp
4416(1): push %rbx
4417(5): call 0xffffce39(%rip)
441c(3): mov 0x0(%rbp),%ebx
441f(3): mov %rbp,%rdi
4422(3): mov %rax,%r12
4425(5): call 0x10b(%rip)
442a(3): and $0x20,%ebx
442d(2): test %ebx,%ebx
442f(2): jnz 0x19(%rip)
4431(2): test %eax,%eax
4433(2): jz 0xc(%rip)
4435(3): test %r12,%r12
4438(5): mov $0xffffffff,%eax
443d(2): jz 0x3b(%rip)
443f(1): pop %rbx
4440(1): pop %rbp
4441(2): pop %r12
4443(1): ret near (%rsp)
4444(4): nop 0x0(%rax)
4448(2): test %eax,%eax
444a(2): jnz 0x1e(%rip)
444c(5): call 0xffffcdc4(%rip)
4451(6): mov $0x0,(%rax)
4457(5): mov $0xffffffff,%eax
445c(1): pop %rbx
445d(1): pop %rbp
445e(2): pop %r12
4460(1): ret near (%rsp)
4461(7): nop 0x0(%rax)
4468(1): pop %rbx
4469(5): mov $0xffffffff,%eax
446e(1): pop %rbp
446f(2): pop %r12
4471(1): ret near (%rsp)
4472(6): nop 0x0(%rax,%rax,1)
4478(5): call 0xffffcd98(%rip)
447d(3): cmp $0x9,(%rax)
4480(1): pop %rbx
4481(1): pop %rbp
4482(2): pop %r12
4484(3): setnz %al
4487(3): movzx %al,%eax
448a(2): neg %eax
448c(1): ret near (%rsp)

"hard_locale" :
4490(4): sub $0x8,%rsp
4494(2): xor %esi,%esi
4496(5): call 0xffffcf2a(%rip)
449b(3): mov %rax,%rdx
449e(5): mov $0x1,%eax
44a3(3): test %rdx,%rdx
44a6(2): jz 0x1f(%rip)
44a8(7): lea 0xdb1(%rip),%rdi
44af(5): mov $0x2,%ecx
44b4(3): mov %rdx,%rsi
44b7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
44b9(3): setnbe %cl
44bc(3): sbb $0x0,%cl
44bf(2): xor %eax,%eax
44c1(2): test %cl,%cl
44c3(2): jnz 0xd(%rip)
44c5(4): add $0x8,%rsp
44c9(1): ret near (%rsp)
44ca(6): nop 0x0(%rax,%rax,1)
44d0(7): lea 0xd8b(%rip),%rdi
44d7(5): mov $0x6,%ecx
44dc(3): mov %rdx,%rsi
44df(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
44e1(3): setnbe %al
44e4(2): sbb $0x0,%al
44e6(2): test %al,%al
44e8(3): setnz %al
44eb(4): add $0x8,%rsp
44ef(1): ret near (%rsp)

"locale_charset" :
44f0(4): sub $0x8,%rsp
44f4(5): mov $0xe,%edi
44f9(5): call 0xffffce97(%rip)
44fe(3): test %rax,%rax
4501(2): jz 0x1f(%rip)
4503(3): cmp $0x0,(%rax)
4506(7): lea 0xd5b(%rip),%rdx
450d(4): cmove %rdx,%rax
4511(4): add $0x8,%rsp
4515(1): ret near (%rsp)
4516(a): nop 0x0(%rax,%rax,1)
4520(7): lea 0xd41(%rip),%rax
4527(4): add $0x8,%rsp
452b(1): ret near (%rsp)

"rpl_fclose" :
4530(2): push %r12
4532(1): push %rbp
4533(1): push %rbx
4534(3): mov %rdi,%rbx
4537(5): call 0xffffce29(%rip)
453c(2): test %eax,%eax
453e(3): mov %rbx,%rdi
4541(2): js 0x56(%rip)
4543(5): call 0xffffce5d(%rip)
4548(2): test %eax,%eax
454a(2): jnz 0x2e(%rip)
454c(3): mov %rbx,%rdi
454f(5): call 0x61(%rip)
4554(2): test %eax,%eax
4556(2): jz 0x3e(%rip)
4558(5): call 0xffffccb8(%rip)
455d(3): mov (%rax),%r12d
4560(3): mov %rbx,%rdi
4563(3): mov %rax,%rbp
4566(5): call 0xffffcd0a(%rip)
456b(3): test %r12d,%r12d
456e(2): jnz 0x32(%rip)
4570(1): pop %rbx
4571(1): pop %rbp
4572(2): pop %r12
4574(1): ret near (%rsp)
4575(3): nop (%rax)
4578(3): mov %rbx,%rdi
457b(5): call 0xffffcde5(%rip)
4580(2): xor %esi,%esi
4582(5): mov $0x1,%edx
4587(2): mov %eax,%edi
4589(5): call 0xffffcd77(%rip)
458e(4): cmp $0xffffffff,%rax
4592(2): jnz 0xffffffba(%rip)
4594(3): mov %rbx,%rdi
4597(1): pop %rbx
4598(1): pop %rbp
4599(2): pop %r12
459b(5): jmp 0xffffccd5(%rip)
45a0(4): mov %r12d,0x0(%rbp)
45a4(5): mov $0xffffffff,%eax
45a9(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
45b0(3): test %rdi,%rdi
45b3(1): push %rbx
45b4(3): mov %rdi,%rbx
45b7(2): jz 0x13(%rip)
45b9(5): call 0xffffcde7(%rip)
45be(2): test %eax,%eax
45c0(2): jz 0xa(%rip)
45c2(6): test $0x100,(%rbx)
45c8(2): jnz 0x10(%rip)
45ca(3): mov %rbx,%rdi
45cd(1): pop %rbx
45ce(5): jmp 0xffffcdb2(%rip)
45d3(5): nop 0x0(%rax,%rax,1)
45d8(3): mov %rbx,%rdi
45db(5): mov $0x1,%edx
45e0(2): xor %esi,%esi
45e2(5): call 0xe(%rip)
45e7(3): mov %rbx,%rdi
45ea(1): pop %rbx
45eb(5): jmp 0xffffcd95(%rip)

"rpl_fseeko" :
45f0(4): mov 0x8(%rdi),%rax
45f4(4): cmp %rax,0x10(%rdi)
45f8(2): jz 0x8(%rip)
45fa(5): jmp 0xffffcdf6(%rip)
45ff(1): nop 
4600(4): mov 0x20(%rdi),%rax
4604(4): cmp %rax,0x28(%rdi)
4608(2): jnz 0xfffffff2(%rip)
460a(5): cmp $0x0,0x48(%rdi)
460f(2): jnz 0xffffffeb(%rip)
4611(2): push %r12
4613(1): push %rbp
4614(3): mov %edx,%r12d
4617(1): push %rbx
4618(3): mov %rsi,%rbp
461b(3): mov %rdi,%rbx
461e(5): call 0xffffcd42(%rip)
4623(3): mov %r12d,%edx
4626(3): mov %rbp,%rsi
4629(2): mov %eax,%edi
462b(5): call 0xffffccd5(%rip)
4630(4): cmp $0xffffffff,%rax
4634(2): jz 0xe(%rip)
4636(3): and $0xef,(%rbx)
4639(7): mov %rax,0x90(%rbx)
4640(2): xor %eax,%eax
4642(1): pop %rbx
4643(1): pop %rbp
4644(2): pop %r12
4646(1): ret near (%rsp)

"__libc_csu_init" :
4650(2): push %r15
4652(2): push %r14
4654(3): mov %rdx,%r15
4657(2): push %r13
4659(2): push %r12
465b(7): lea 0x20254e(%rip),%r12
4662(1): push %rbp
4663(7): lea 0x20254e(%rip),%rbp
466a(1): push %rbx
466b(3): mov %edi,%r13d
466e(3): mov %rsi,%r14
4671(3): sub %r12,%rbp
4674(4): sub $0x8,%rsp
4678(4): sar $0x3,%rbp
467c(5): call 0xffffcb44(%rip)
4681(3): test %rbp,%rbp
4684(2): jz 0x22(%rip)
4686(2): xor %ebx,%ebx
4688(8): nop 0x0(%rax,%rax,1)
4690(3): mov %r15,%rdx
4693(3): mov %r14,%rsi
4696(3): mov %r13d,%edi
4699(4): call 0x0(%r12,%rbx,8)
469d(4): add $0x1,%rbx
46a1(3): cmp %rbx,%rbp
46a4(2): jnz 0xffffffec(%rip)
46a6(4): add $0x8,%rsp
46aa(1): pop %rbx
46ab(1): pop %rbp
46ac(2): pop %r12
46ae(2): pop %r13
46b0(2): pop %r14
46b2(2): pop %r15
46b4(1): ret near (%rsp)

"atexit" :
46d0(7): mov 0x202931(%rip),%rdx
46d7(2): xor %esi,%esi
46d9(5): jmp 0xffffcd27(%rip)

"_fini" :
46e0(4): sub $0x8,%rsp
46e4(4): add $0x8,%rsp
46e8(1): ret near (%rsp)

