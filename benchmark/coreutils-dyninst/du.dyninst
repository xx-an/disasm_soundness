
"__ctype_toupper_loc@plt" :
23c0(6): jmp 0x2258da(%rip)
23c6(5): push $0x0

"__uflow@plt" :
23d0(6): jmp 0x2258d2(%rip)
23d6(5): push $0x1

"getenv@plt" :
23e0(6): jmp 0x2258ca(%rip)
23e6(5): push $0x2

"endmntent@plt" :
23f0(6): jmp 0x2258c2(%rip)
23f6(5): push $0x3

"abort@plt" :
2400(6): jmp 0x2258ba(%rip)
2406(5): push $0x4

"__errno_location@plt" :
2410(6): jmp 0x2258b2(%rip)
2416(5): push $0x5

"strncmp@plt" :
2420(6): jmp 0x2258aa(%rip)
2426(5): push $0x6

"localtime_r@plt" :
2430(6): jmp 0x2258a2(%rip)
2436(5): push $0x7

"_exit@plt" :
2440(6): jmp 0x22589a(%rip)
2446(5): push $0x8

"strcpy@plt" :
2450(6): jmp 0x225892(%rip)
2456(5): push $0x9

"__fpending@plt" :
2460(6): jmp 0x22588a(%rip)
2466(5): push $0xa

"qsort@plt" :
2470(6): jmp 0x225882(%rip)
2476(5): push $0xb

"iswcntrl@plt" :
2480(6): jmp 0x22587a(%rip)
2486(5): push $0xc

"localeconv@plt" :
2490(6): jmp 0x225872(%rip)
2496(5): push $0xd

"fcntl@plt" :
24a0(6): jmp 0x22586a(%rip)
24a6(5): push $0xe

"setenv@plt" :
24b0(6): jmp 0x225862(%rip)
24b6(5): push $0xf

"textdomain@plt" :
24c0(6): jmp 0x22585a(%rip)
24c6(5): push $0x10

"__strtol_internal@plt" :
24d0(6): jmp 0x225852(%rip)
24d6(5): push $0x11

"iswctype@plt" :
24e0(6): jmp 0x22584a(%rip)
24e6(5): push $0x12

"fclose@plt" :
24f0(6): jmp 0x225842(%rip)
24f6(5): push $0x13

"bindtextdomain@plt" :
2500(6): jmp 0x22583a(%rip)
2506(5): push $0x14

"dcgettext@plt" :
2510(6): jmp 0x225832(%rip)
2516(5): push $0x15

"__ctype_get_mb_cur_max@plt" :
2520(6): jmp 0x22582a(%rip)
2526(5): push $0x16

"strlen@plt" :
2530(6): jmp 0x225822(%rip)
2536(5): push $0x17

"__lxstat@plt" :
2540(6): jmp 0x22581a(%rip)
2546(5): push $0x18

"openat@plt" :
2550(6): jmp 0x225812(%rip)
2556(5): push $0x19

"__stack_chk_fail@plt" :
2560(6): jmp 0x22580a(%rip)
2566(5): push $0x1a

"getopt_long@plt" :
2570(6): jmp 0x225802(%rip)
2576(5): push $0x1b

"mbrtowc@plt" :
2580(6): jmp 0x2257fa(%rip)
2586(5): push $0x1c

"dup2@plt" :
2590(6): jmp 0x2257f2(%rip)
2596(5): push $0x1d

"strchr@plt" :
25a0(6): jmp 0x2257ea(%rip)
25a6(5): push $0x1e

"__fxstatat@plt" :
25b0(6): jmp 0x2257e2(%rip)
25b6(5): push $0x1f

"__overflow@plt" :
25c0(6): jmp 0x2257da(%rip)
25c6(5): push $0x20

"strrchr@plt" :
25d0(6): jmp 0x2257d2(%rip)
25d6(5): push $0x21

"gmtime_r@plt" :
25e0(6): jmp 0x2257ca(%rip)
25e6(5): push $0x22

"lseek@plt" :
25f0(6): jmp 0x2257c2(%rip)
25f6(5): push $0x23

"__assert_fail@plt" :
2600(6): jmp 0x2257ba(%rip)
2606(5): push $0x24

"__strtoul_internal@plt" :
2610(6): jmp 0x2257b2(%rip)
2616(5): push $0x25

"memset@plt" :
2620(6): jmp 0x2257aa(%rip)
2626(5): push $0x26

"freopen@plt" :
2630(6): jmp 0x2257a2(%rip)
2636(5): push $0x27

"close@plt" :
2640(6): jmp 0x22579a(%rip)
2646(5): push $0x28

"closedir@plt" :
2650(6): jmp 0x225792(%rip)
2656(5): push $0x29

"fputc@plt" :
2660(6): jmp 0x22578a(%rip)
2666(5): push $0x2a

"memchr@plt" :
2670(6): jmp 0x225782(%rip)
2676(5): push $0x2b

"memcmp@plt" :
2680(6): jmp 0x22577a(%rip)
2686(5): push $0x2c

"wctype@plt" :
2690(6): jmp 0x225772(%rip)
2696(5): push $0x2d

"fputs_unlocked@plt" :
26a0(6): jmp 0x22576a(%rip)
26a6(5): push $0x2e

"calloc@plt" :
26b0(6): jmp 0x225762(%rip)
26b6(5): push $0x2f

"__getdelim@plt" :
26c0(6): jmp 0x22575a(%rip)
26c6(5): push $0x30

"strcmp@plt" :
26d0(6): jmp 0x225752(%rip)
26d6(5): push $0x31

"dirfd@plt" :
26e0(6): jmp 0x22574a(%rip)
26e6(5): push $0x32

"__memcpy_chk@plt" :
26f0(6): jmp 0x225742(%rip)
26f6(5): push $0x33

"feof@plt" :
2700(6): jmp 0x22573a(%rip)
2706(5): push $0x34

"memcpy@plt" :
2710(6): jmp 0x225732(%rip)
2716(5): push $0x35

"tzset@plt" :
2720(6): jmp 0x22572a(%rip)
2726(5): push $0x36

"fileno@plt" :
2730(6): jmp 0x225722(%rip)
2736(5): push $0x37

"__xstat@plt" :
2740(6): jmp 0x22571a(%rip)
2746(5): push $0x38

"readdir@plt" :
2750(6): jmp 0x225712(%rip)
2756(5): push $0x39

"wcwidth@plt" :
2760(6): jmp 0x22570a(%rip)
2766(5): push $0x3a

"iswalnum@plt" :
2770(6): jmp 0x225702(%rip)
2776(5): push $0x3b

"malloc@plt" :
2780(6): jmp 0x2256fa(%rip)
2786(5): push $0x3c

"wcrtomb@plt" :
2790(6): jmp 0x2256f2(%rip)
2796(5): push $0x3d

"fflush@plt" :
27a0(6): jmp 0x2256ea(%rip)
27a6(5): push $0x3e

"getmntent@plt" :
27b0(6): jmp 0x2256e2(%rip)
27b6(5): push $0x3f

"setmntent@plt" :
27c0(6): jmp 0x2256da(%rip)
27c6(5): push $0x40

"nl_langinfo@plt" :
27d0(6): jmp 0x2256d2(%rip)
27d6(5): push $0x41

"__fxstat@plt" :
27e0(6): jmp 0x2256ca(%rip)
27e6(5): push $0x42

"sscanf@plt" :
27f0(6): jmp 0x2256c2(%rip)
27f6(5): push $0x43

"mktime@plt" :
2800(6): jmp 0x2256ba(%rip)
2806(5): push $0x44

"__freading@plt" :
2810(6): jmp 0x2256b2(%rip)
2816(5): push $0x45

"fchdir@plt" :
2820(6): jmp 0x2256aa(%rip)
2826(5): push $0x46

"realloc@plt" :
2830(6): jmp 0x2256a2(%rip)
2836(5): push $0x47

"setlocale@plt" :
2840(6): jmp 0x22569a(%rip)
2846(5): push $0x48

"__printf_chk@plt" :
2850(6): jmp 0x225692(%rip)
2856(5): push $0x49

"timegm@plt" :
2860(6): jmp 0x22568a(%rip)
2866(5): push $0x4a

"strftime@plt" :
2870(6): jmp 0x225682(%rip)
2876(5): push $0x4b

"btowc@plt" :
2880(6): jmp 0x22567a(%rip)
2886(5): push $0x4c

"memmove@plt" :
2890(6): jmp 0x225672(%rip)
2896(5): push $0x4d

"error@plt" :
28a0(6): jmp 0x22566a(%rip)
28a6(5): push $0x4e

"open@plt" :
28b0(6): jmp 0x225662(%rip)
28b6(5): push $0x4f

"fseeko@plt" :
28c0(6): jmp 0x22565a(%rip)
28c6(5): push $0x50

"fopen@plt" :
28d0(6): jmp 0x225652(%rip)
28d6(5): push $0x51

"towlower@plt" :
28e0(6): jmp 0x22564a(%rip)
28e6(5): push $0x52

"fdopendir@plt" :
28f0(6): jmp 0x225642(%rip)
28f6(5): push $0x53

"unsetenv@plt" :
2900(6): jmp 0x22563a(%rip)
2906(5): push $0x54

"towupper@plt" :
2910(6): jmp 0x225632(%rip)
2916(5): push $0x55

"strtoul@plt" :
2920(6): jmp 0x22562a(%rip)
2926(5): push $0x56

"fstatfs@plt" :
2930(6): jmp 0x225622(%rip)
2936(5): push $0x57

"__cxa_atexit@plt" :
2940(6): jmp 0x22561a(%rip)
2946(5): push $0x58

"exit@plt" :
2950(6): jmp 0x225612(%rip)
2956(5): push $0x59

"fwrite@plt" :
2960(6): jmp 0x22560a(%rip)
2966(5): push $0x5a

"__fprintf_chk@plt" :
2970(6): jmp 0x225602(%rip)
2976(5): push $0x5b

"fflush_unlocked@plt" :
2980(6): jmp 0x2255fa(%rip)
2986(5): push $0x5c

"mbsinit@plt" :
2990(6): jmp 0x2255f2(%rip)
2996(5): push $0x5d

"iswprint@plt" :
29a0(6): jmp 0x2255ea(%rip)
29a6(5): push $0x5e

"hasmntopt@plt" :
29b0(6): jmp 0x2255e2(%rip)
29b6(5): push $0x5f

"getdelim@plt" :
29c0(6): jmp 0x2255da(%rip)
29c6(5): push $0x60

"strstr@plt" :
29d0(6): jmp 0x2255d2(%rip)
29d6(5): push $0x61

"__ctype_tolower_loc@plt" :
29e0(6): jmp 0x2255ca(%rip)
29e6(5): push $0x62

"__ctype_b_loc@plt" :
29f0(6): jmp 0x2255c2(%rip)
29f6(5): push $0x63

"__sprintf_chk@plt" :
2a00(6): jmp 0x2255ba(%rip)
2a06(5): push $0x64

".plt.got" :
2a10(6): jmp 0x2255b2(%rip)
2a16(2): nop 
2a18(6): jmp 0x2255da(%rip)
2a1e(2): nop 

"_init" :
2390(4): sub $0x8,%rsp
2394(7): mov 0x225c4d(%rip),%rax
239b(3): test %rax,%rax
239e(2): jz 0x4(%rip)
23a0(2): call %rax
23a2(4): add $0x8,%rsp
23a6(1): ret near (%rsp)

"mbuiter_multi_next.part.0" :
2a20(7): lea 0x1f039(%rip),%rcx
2a27(7): lea 0x1ea7a(%rip),%rsi
2a2e(7): lea 0x1eac1(%rip),%rdi
2a35(4): sub $0x8,%rsp
2a39(5): mov $0xb3,%edx
2a3e(5): call 0xfffffbc2(%rip)

"main" :
2a50(2): push %r15
2a52(2): push %r14
2a54(3): xor %r15d,%r15d
2a57(2): push %r13
2a59(2): push %r12
2a5b(3): mov %edi,%r12d
2a5e(1): push %rbp
2a5f(1): push %rbx
2a60(3): mov %rsi,%rbp
2a63(7): lea 0x1e556(%rip),%rbx
2a6a(3): xor %r13d,%r13d
2a6d(7): sub $0x138,%rsp
2a74(3): mov (%rsi),%rdi
2a77(9): mov $0x28,%rax
2a80(8): mov %rax,0x128(%rsp)
2a88(2): xor %eax,%eax
2a8a(7): lea 0x1fc0b(%rip),%rax
2a91(c): mov $0x0,0x88(%rsp)
2a9d(5): lea 0x5c(%rsp),%r14
2aa2(8): mov %rax,0x80(%rsp)
2aaa(5): call 0x7ba6(%rip)
2aaf(7): lea 0x1f52b(%rip),%rsi
2ab6(5): mov $0x6,%edi
2abb(5): call 0xfffffd85(%rip)
2ac0(7): lea 0x1d076(%rip),%rsi
2ac7(7): lea 0x1d03d(%rip),%rdi
2ace(5): call 0xfffffa32(%rip)
2ad3(7): lea 0x1d031(%rip),%rdi
2ada(5): call 0xfffff9e6(%rip)
2adf(7): lea 0x210a(%rip),%rdi
2ae6(5): call 0x1cf5a(%rip)
2aeb(5): call 0x2925(%rip)
2af0(7): lea 0x1d05e(%rip),%rdi
2af7(7): mov %rax,0x225642(%rip)
2afe(5): call 0xfffff8e2(%rip)
2b03(7): lea 0x22563e(%rip),%rdx
2b0a(7): lea 0x22565f(%rip),%rsi
2b11(3): mov %rax,%rdi
2b14(5): call 0x6f9c(%rip)
2b19(5): lea 0x60(%rsp),%rax
2b1e(5): mov $0x0,0x1c(%rsp)
2b23(8): mov $0x10,0x18(%rsp)
2b2b(8): mov $0x8,0x10(%rsp)
2b33(5): mov $0x1,0x8(%rsp)
2b38(5): mov $0x0,0x20(%rsp)
2b3d(5): mov %rax,0x28(%rsp)
2b42(6): nop 0x0(%rax,%rax,1)
2b48(7): lea 0x224b91(%rip),%rcx
2b4f(7): lea 0x1d00d(%rip),%rdx
2b56(3): mov %r14,%r8
2b59(3): mov %rbp,%rsi
2b5c(3): mov %r12d,%edi
2b5f(8): mov $0xffffffff,0x5c(%rsp)
2b67(5): call 0xfffffa09(%rip)
2b6c(3): cmp $0xff,%eax
2b6f(6): jz 0x377(%rip)
2b75(5): add $0x83,%eax
2b7a(5): cmp $0x10a,%eax
2b7f(6): jnbe 0x35d(%rip)
2b85(4): movsxd 0x0(%rbx,%rax,4),%rax
2b89(3): add %rbx,%rax
2b8c(2): jmp %rax
2b8e(8): mov $0x48,0x10(%rsp)
2b96(2): jmp 0xffffffb2(%rip)
2b98(7): mov 0x225521(%rip),%rdi
2b9f(7): lea 0x1cfee(%rip),%r8
2ba6(7): lea 0x2255cb(%rip),%rcx
2bad(2): xor %edx,%edx
2baf(2): xor %esi,%esi
2bb1(5): call 0xa13f(%rip)
2bb6(2): test %eax,%eax
2bb8(6): jnz 0x129c(%rip)
2bbe(8): cmp $0x0,0x2255b2(%rip)
2bc6(2): jnz 0xffffff82(%rip)
2bc8(7): mov 0x2254f1(%rip),%rax
2bcf(3): cmp $0x2d,(%rax)
2bd2(6): jnz 0xffffff76(%rip)
2bd8(7): lea 0x1e171(%rip),%rsi
2bdf(5): mov $0x5,%edx
2be4(2): xor %edi,%edi
2be6(5): call 0xfffff92a(%rip)
2beb(2): xor %esi,%esi
2bed(3): mov %rax,%rdx
2bf0(5): mov $0x1,%edi
2bf5(2): xor %eax,%eax
2bf7(5): call 0xfffffca9(%rip)
2bfc(5): mov $0x1,0x1c(%rsp)
2c01(5): jmp 0xffffff47(%rip)
2c06(7): mov %r15d,0x225563(%rip)
2c0d(b): mov $0x100000,0x225530(%rip)
2c18(5): jmp 0xffffff30(%rip)
2c1d(7): mov $0x1,0x225560(%rip)
2c24(5): jmp 0xffffff24(%rip)
2c29(7): mov %r15d,0x225540(%rip)
2c30(b): mov $0x400,0x22550d(%rip)
2c3b(5): jmp 0xffffff0d(%rip)
2c40(a): mov $0xb0,0x225526(%rip)
2c4a(b): mov $0x1,0x2254f3(%rip)
2c55(5): jmp 0xfffffef3(%rip)
2c5a(5): mov 0x28(%rsp),%rcx
2c5f(7): mov 0x22545a(%rip),%rdi
2c66(3): xor %r8d,%r8d
2c69(2): xor %edx,%edx
2c6b(2): xor %esi,%esi
2c6d(5): call 0xa743(%rip)
2c72(2): test %eax,%eax
2c74(6): jnz 0xafe(%rip)
2c7a(5): mov 0x60(%rsp),%rax
2c7f(5): mov $0x1,0x20(%rsp)
2c84(7): mov %rax,0x225385(%rip)
2c8b(5): jmp 0xfffffebd(%rip)
2c90(7): mov $0x1,0x2254ea(%rip)
2c97(5): jmp 0xfffffeb1(%rip)
2c9c(7): mov $0x1,0x2254e2(%rip)
2ca3(7): mov %r15d,0x2254c6(%rip)
2caa(b): mov $0x1,0x225493(%rip)
2cb5(5): jmp 0xfffffe93(%rip)
2cba(7): mov $0x1,0x2254c5(%rip)
2cc1(5): jmp 0xfffffe87(%rip)
2cc6(7): mov 0x2253f3(%rip),%rdx
2ccd(7): mov 0x22546c(%rip),%rsi
2cd4(6): mov $0xa,%r8d
2cda(7): lea 0x2a9f(%rip),%rdi
2ce1(5): mov $0x10000000,%ecx
2ce6(5): call 0x302a(%rip)
2ceb(2): test %eax,%eax
2ced(6): jz 0xfffffe5b(%rip)
2cf3(7): mov 0x2253c6(%rip),%rdx
2cfa(5): mov $0x3,%esi
2cff(2): xor %edi,%edi
2d01(5): call 0x948f(%rip)
2d06(5): mov %rax,0x8(%rsp)
2d0b(5): call 0xfffff705(%rip)
2d10(5): mov 0x8(%rsp),%rcx
2d15(2): mov (%rax),%esi
2d17(7): lea 0x1e772(%rip),%rdx
2d1e(2): xor %edi,%edi
2d20(2): xor %eax,%eax
2d22(5): call 0xfffffb7e(%rip)
2d27(5): mov $0x0,0x8(%rsp)
2d2c(5): jmp 0xfffffe1c(%rip)
2d31(7): mov $0x1,0x225448(%rip)
2d38(5): jmp 0xfffffe10(%rip)
2d3d(8): mov $0x10,0x18(%rsp)
2d45(5): jmp 0xfffffe03(%rip)
2d4a(8): mov $0x2,0x18(%rsp)
2d52(5): jmp 0xfffffdf6(%rip)
2d57(8): mov $0x11,0x18(%rsp)
2d5f(5): jmp 0xfffffde9(%rip)
2d64(7): mov 0x225355(%rip),%rdi
2d6b(7): lea 0x2253d6(%rip),%rdx
2d72(7): lea 0x2253f7(%rip),%rsi
2d79(5): call 0x6d37(%rip)
2d7e(2): test %eax,%eax
2d80(6): jz 0xfffffdc8(%rip)
2d86(7): mov 0x225333(%rip),%r8
2d8d(4): mov 0x5c(%rsp),%esi
2d91(7): lea 0x224948(%rip),%rcx
2d98(5): mov $0x42,%edx
2d9d(2): mov %eax,%edi
2d9f(5): call 0xaa31(%rip)
2da4(7): mov $0x1,0x2253d7(%rip)
2dab(5): jmp 0xfffffd9d(%rip)
2db0(7): lea 0x1ce15(%rip),%rax
2db7(4): sub $0x8,%rsp
2dbb(7): mov 0x2252e6(%rip),%rdi
2dc2(2): push $0x0
2dc4(7): mov 0x22524d(%rip),%rcx
2dcb(7): lea 0x1cdd8(%rip),%r9
2dd2(1): push %rax
2dd3(7): lea 0x1cdff(%rip),%rax
2dda(7): lea 0x1cdd9(%rip),%r8
2de1(7): lea 0x1cd1f(%rip),%rdx
2de8(7): lea 0x1cc9c(%rip),%rsi
2def(1): push %rax
2df0(2): xor %eax,%eax
2df2(5): call 0x9a8e(%rip)
2df7(4): add $0x20,%rsp
2dfb(2): xor %edi,%edi
2dfd(5): call 0xfffffb53(%rip)
2e02(7): mov $0x1,0x225364(%rip)
2e09(5): jmp 0xfffffd3f(%rip)
2e0e(7): mov 0x2252ab(%rip),%rax
2e15(7): mov %rax,0x225344(%rip)
2e1c(5): jmp 0xfffffd2c(%rip)
2e21(7): mov 0x225298(%rip),%rsi
2e28(2): xor %eax,%eax
2e2a(7): mov $0x1,0x22533b(%rip)
2e31(3): test %rsi,%rsi
2e34(2): jz 0x33(%rip)
2e36(7): mov 0x2251e3(%rip),%r9
2e3d(7): lea 0x22485c(%rip),%rdx
2e44(7): lea 0x1e5d5(%rip),%rcx
2e4b(7): lea 0x1cd4e(%rip),%rdi
2e52(6): mov $0x4,%r8d
2e58(5): call 0x1b78(%rip)
2e5d(7): lea 0x1e5bc(%rip),%rdx
2e64(3): mov 0x0(%rdx,%rax,4),%eax
2e67(7): lea 0x1cd39(%rip),%rdi
2e6e(6): mov %eax,0x2252f4(%rip)
2e74(5): call 0xfffff56c(%rip)
2e79(3): mov %rax,%rdi
2e7c(5): call 0x1bfe4(%rip)
2e81(7): mov %rax,0x2252c8(%rip)
2e88(5): jmp 0xfffffcc0(%rip)
2e8d(a): mov $0x90,0x2252d9(%rip)
2e97(b): mov $0x1,0x2252a6(%rip)
2ea2(5): jmp 0xfffffca6(%rip)
2ea7(7): mov 0x225212(%rip),%rsi
2eae(7): mov 0x22528b(%rip),%rdi
2eb5(5): mov $0x10000000,%edx
2eba(5): call 0x28c6(%rip)
2ebf(5): jmp 0xfffffc89(%rip)
2ec4(7): mov $0x1,0x2252ba(%rip)
2ecb(5): jmp 0xfffffc7d(%rip)
2ed0(7): mov 0x2251e9(%rip),%r13
2ed7(5): jmp 0xfffffc71(%rip)
2edc(5): mov $0x0,0x8(%rsp)
2ee1(5): jmp 0xfffffc67(%rip)
2ee6(5): cmp $0x0,0x8(%rsp)
2eeb(6): jz 0x1041(%rip)
2ef1(7): cmp $0x0,0x22528e(%rip)
2ef8(6): jz 0x826(%rip)
2efe(5): cmp $0x0,0x1c(%rsp)
2f03(6): jnz 0x1008(%rip)
2f09(7): cmp $0x0,0x22525d(%rip)
2f10(2): jz 0x1a(%rip)
2f12(7): cmp $0x0,0x22526c(%rip)
2f19(6): jnz 0xb00(%rip)
2f1f(b): mov $0x1,0x22521e(%rip)
2f2a(7): cmp $0x0,0x22523b(%rip)
2f31(2): jz 0x2c(%rip)
2f33(8): cmp $0x0,0x225225(%rip)
2f3b(6): jz 0xcad(%rip)
2f41(7): mov 0x225218(%rip),%r15
2f48(4): cmp $0x2b,(%r15)
2f4c(6): jnz 0xbb9(%rip)
2f52(4): add $0x1,%r15
2f56(7): mov %r15,0x2251fb(%rip)
2f5d(3): test %r13,%r13
2f60(7): movsxd 0x225151(%rip),%rax
2f67(6): jz 0xb30(%rip)
2f6d(3): cmp %eax,%r12d
2f70(6): jnle 0xe79(%rip)
2f76(7): lea 0x1f60d(%rip),%rsi
2f7d(3): mov %r13,%rdi
2f80(5): call 0xfffff750(%rip)
2f85(2): test %eax,%eax
2f87(6): jnz 0x936(%rip)
2f8d(7): mov 0x22511c(%rip),%rdi
2f94(5): call 0x1b2c(%rip)
2f99(7): mov $0x1,0x2251e3(%rip)
2fa0(3): mov %rax,%r15
2fa3(3): test %r15,%r15
2fa6(6): jz 0xe39(%rip)
2fac(5): call 0x1e74(%rip)
2fb1(3): test %rax,%rax
2fb4(7): mov %rax,0x2251dd(%rip)
2fbb(6): jz 0xe24(%rip)
2fc1(7): cmp $0x0,0x2251bc(%rip)
2fc8(6): jnz 0x167(%rip)
2fce(7): cmp $0x0,0x2251ae(%rip)
2fd5(6): jz 0x15a(%rip)
2fdb(4): mov 0x10(%rsp),%eax
2fdf(4): or 0x18(%rsp),%eax
2fe3(3): mov %r14,%r12
2fe6(4): mov %eax,0x1c(%rsp)
2fea(5): movzx 0x8(%rsp),%eax
2fef(4): mov %al,0x18(%rsp)
2ff3(8): lea 0x90(%rsp),%rax
2ffb(5): mov %rax,0x48(%rsp)
3000(3): mov %r12,%rsi
3003(3): mov %r15,%rdi
3006(5): call 0x1afa(%rip)
300b(3): test %rax,%rax
300e(3): mov %rax,%rbx
3011(6): jz 0x518(%rip)
3017(3): test %r13,%r13
301a(6): jz 0x496(%rip)
3020(7): lea 0x1f563(%rip),%rdx
3027(5): mov $0x2,%ecx
302c(3): mov %r13,%rsi
302f(3): mov %rdx,%rdi
3032(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
3034(3): setnbe %al
3037(2): sbb $0x0,%al
3039(2): test %al,%al
303b(2): jnz 0x1c(%rip)
303d(5): mov $0x2,%ecx
3042(3): mov %rbx,%rsi
3045(3): mov %rdx,%rdi
3048(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
304a(3): setnbe %al
304d(2): sbb $0x0,%al
304f(2): test %al,%al
3051(6): jz 0x3c7(%rip)
3057(3): cmp $0x0,(%rbx)
305a(6): jz 0x3fe(%rip)
3060(7): lea 0x2250a9(%rip),%rax
3067(4): mov 0x1c(%rsp),%esi
306b(2): xor %edx,%edx
306d(3): mov %rax,%rdi
3070(3): mov %rbx,(%rax)
3073(5): call 0x9bfd(%rip)
3078(5): mov %rax,0x10(%rsp)
307d(5): movzx 0x8(%rsp),%eax
3082(5): mov %r15,0x28(%rsp)
3087(5): mov %r13,0x20(%rsp)
308c(5): mov %r12,0x30(%rsp)
3091(3): mov %eax,%r15d
3094(5): mov 0x10(%rsp),%rdi
3099(5): call 0xc847(%rip)
309e(3): test %rax,%rax
30a1(3): mov %rax,%r14
30a4(6): jz 0x622(%rip)
30aa(4): movzx 0x70(%rax),%ebp
30ae(4): mov 0x38(%rax),%r13
30b2(3): cmp $0x4,%ebp
30b5(6): jz 0x5d3(%rip)
30bb(3): cmp $0x6,%ebp
30be(6): movzx 0x8(%rsp),%r12d
30c4(6): jz 0xec(%rip)
30ca(7): mov 0x22506f(%rip),%rdi
30d1(3): mov %r13,%rsi
30d4(5): call 0x250c(%rip)
30d9(2): test %al,%al
30db(2): jnz 0x40(%rip)
30dd(3): cmp $0xb,%ebp
30e0(6): jz 0xad8(%rip)
30e6(3): cmp $0xa,%ebp
30e9(4): setz %r8b
30ed(3): cmp $0xd,%ebp
30f0(3): setz %al
30f3(3): or %al,%r8b
30f6(3): mov %r8d,%r12d
30f9(6): jnz 0x8a1(%rip)
30ff(5): mov 0x10(%rsp),%rax
3104(4): test $0x40,0x48(%rax)
3108(2): jz 0x34(%rip)
310a(5): cmp $0x0,0x58(%r14)
310f(2): jle 0x2d(%rip)
3111(4): mov 0x78(%r14),%rcx
3115(4): cmp %rcx,0x18(%rax)
3119(2): jz 0x23(%rip)
311b(3): sub $0x1,%ebp
311e(6): jz 0x921(%rip)
3124(6): movzx 0x8(%rsp),%r12d
312a(5): jmp 0x2d6(%rip)
312f(8): or $0x100,0x10(%rsp)
3137(5): jmp 0xfffffea4(%rip)
313c(7): cmp $0x0,0x225041(%rip)
3143(2): jnz 0x49(%rip)
3145(7): cmp $0x0,0x225037(%rip)
314c(2): jnz 0x1f(%rip)
314e(7): mov 0x90(%r14),%eax
3155(5): and $0xf000,%eax
315a(5): cmp $0x4000,%eax
315f(2): jz 0x2d(%rip)
3161(8): cmp $0x1,0x88(%r14)
3169(2): jbe 0x23(%rip)
316b(7): mov 0x80(%r14),%rdx
3172(4): mov 0x78(%r14),%rsi
3176(7): mov 0x22501b(%rip),%rdi
317d(5): call 0x1d43(%rip)
3182(2): test %eax,%eax
3184(6): js 0xc5b(%rip)
318a(2): jz 0xffffff91(%rip)
318c(3): cmp $0x2,%ebp
318f(6): jz 0xafe(%rip)
3195(3): cmp $0x7,%ebp
3198(6): jz 0xaca(%rip)
319e(3): cmp $0x1,%ebp
31a1(2): jz 0xffffff83(%rip)
31a3(6): movzx 0x8(%rsp),%r12d
31a9(7): nop 0x0(%rax)
31b0(6): mov 0x224fb2(%rip),%eax
31b6(2): test %eax,%eax
31b8(6): jnz 0x355(%rip)
31be(7): mov 0xd0(%r14),%rcx
31c5(7): mov 0xd8(%r14),%r9
31cc(7): cmp $0x0,0x224fb2(%rip)
31d3(6): jz 0x32a(%rip)
31d9(8): cmp $0x0,0xa8(%r14)
31e1(5): mov $0x0,%ebx
31e6(8): cmovns 0xa8(%r14),%rbx
31ee(7): mov 0x224f13(%rip),%rdx
31f5(4): mov 0x58(%r14),%r14
31f9(5): mov %rbx,0x60(%rsp)
31fe(9): mov $0x1,0x68(%rsp)
3207(5): mov %rcx,0x70(%rsp)
320c(5): mov %r9,0x78(%rsp)
3211(3): test %rdx,%rdx
3214(6): jz 0x43f(%rip)
321a(7): mov 0x224f67(%rip),%rax
3221(3): cmp %rax,%r14
3224(6): jz 0xdc(%rip)
322a(6): jbe 0x589(%rip)
3230(3): cmp %rdx,%r14
3233(2): jb 0x67(%rip)
3235(5): mov $0x80,%edx
323a(2): xor %esi,%esi
323c(7): mov 0x224ebd(%rip),%rdi
3243(3): mov %rdx,%rax
3246(3): mul %rax,%r14,%rdx
3249(6): jo 0xc70(%rip)
324f(3): test %rax,%rax
3252(5): mov %r9,0x40(%rsp)
3257(5): mov %rcx,0x38(%rsp)
325c(6): js 0xb83(%rip)
3262(3): test %rsi,%rsi
3265(6): jnz 0xb7a(%rip)
326b(3): mov %r14,%rsi
326e(4): shl/sal $0x7,%rsi
3272(5): call 0x97ce(%rip)
3277(7): mov %rax,0x224e82(%rip)
327e(4): lea 0x0(%r14,%r14,1),%rax
3282(5): mov 0x40(%rsp),%r9
3287(5): mov 0x38(%rsp),%rcx
328c(7): mov %rax,0x224e75(%rip)
3293(7): mov 0x224eee(%rip),%rax
329a(4): lea 0x1(%rax),%rdx
329e(3): cmp %rdx,%r14
32a1(2): jb 0x5f(%rip)
32a3(4): shl/sal $0x6,%rax
32a7(7): add 0x224e52(%rip),%rax
32ae(2): nop 
32b0(a): mov $0x-9223372036854775808,%rsi
32ba(4): add $0x1,%rdx
32be(8): mov $0x0,0x40(%rax)
32c6(8): mov $0x0,0x48(%rax)
32ce(4): mov %rsi,0x50(%rax)
32d2(4): add $0x40,%rax
32d6(8): mov $0xffffffff,0x18(%rax)
32de(8): mov $0x0,0x20(%rax)
32e6(8): mov $0x0,0x28(%rax)
32ee(4): mov %rsi,0x30(%rax)
32f2(8): mov $0xffffffff,0x38(%rax)
32fa(3): cmp %rdx,%r14
32fd(2): jnb 0xffffffb3(%rip)
32ff(1): nop 
3300(7): cmp $0x0,0x224e79(%rip)
3307(7): mov %r14,0x224e7a(%rip)
330e(2): jz 0xc(%rip)
3310(2): mov %ebp,%eax
3312(3): and $0xfd,%eax
3315(3): cmp $0x4,%eax
3318(2): jz 0x48(%rip)
331a(3): mov %r14,%rax
331d(2): xor %esi,%esi
331f(3): mov %rbx,%rdx
3322(4): shl/sal $0x6,%rax
3326(7): add 0x224dd3(%rip),%rax
332d(3): add (%rax),%rdx
3330(4): setb %sil
3334(3): test %rsi,%rsi
3337(7): mov $0xffffffff,%rsi
333e(4): cmovne %rsi,%rdx
3342(5): add $0x1,0x8(%rax)
3347(4): cmp 0x10(%rax),%rcx
334b(3): mov %rdx,(%rax)
334e(6): jnle 0x2f8(%rip)
3354(2): jl 0xc(%rip)
3356(4): cmp %r9d,0x18(%rax)
335a(6): js 0x2ec(%rip)
3360(2): xor %eax,%eax
3362(7): add 0x224db7(%rip),%rbx
3369(3): setb %al
336c(3): test %rax,%rax
336f(7): mov $0xffffffff,%rax
3376(4): cmovne %rax,%rbx
337a(8): add $0x1,0x224da6(%rip)
3382(7): cmp 0x224da7(%rip),%rcx
3389(7): mov %rbx,0x224d90(%rip)
3390(2): jnle 0x78(%rip)
3392(2): jl 0xe(%rip)
3394(7): cmp %r9d,0x224d9d(%rip)
339b(2): js 0x6d(%rip)
339d(3): nop (%rax)
33a0(3): and $0xfd,%ebp
33a3(3): cmp $0x4,%ebp
33a6(6): jz 0x145(%rip)
33ac(7): cmp $0x0,0x224dd3(%rip)
33b3(6): jnz 0x138(%rip)
33b9(3): test %r14,%r14
33bc(2): jnz 0x44(%rip)
33be(7): mov 0x224db3(%rip),%rdx
33c5(7): cmp $0x0,0x224da1(%rip)
33cc(5): mov 0x68(%rsp),%rax
33d1(6): cmove 0x60(%rsp),%rax
33d7(3): test %rdx,%rdx
33da(6): js 0x336(%rip)
33e0(3): cmp %rdx,%rax
33e3(3): setnb %al
33e6(2): test %al,%al
33e8(2): jz 0x18(%rip)
33ea(5): lea 0x60(%rsp),%rdi
33ef(3): mov %r13,%rsi
33f2(5): call 0xcee(%rip)
33f7(9): nop 0x0(%rax,%rax,1)
3400(3): and %r12d,%r15d
3403(5): jmp 0xfffffc91(%rip)
3408(7): mov %rcx,0x224d21(%rip)
340f(7): mov %r9,0x224d22(%rip)
3416(2): jmp 0xffffff8a(%rip)
3418(3): mov %rbx,%rsi
341b(5): mov $0x4,%edi
3420(5): call 0x8c70(%rip)
3425(7): lea 0x1da94(%rip),%rsi
342c(2): xor %edi,%edi
342e(3): mov %rax,%rbp
3431(5): mov $0x5,%edx
3436(5): call 0xfffff0da(%rip)
343b(2): xor %esi,%esi
343d(3): mov %rax,%rdx
3440(2): xor %edi,%edi
3442(2): xor %eax,%eax
3444(3): mov %rbp,%rcx
3447(5): call 0xfffff459(%rip)
344c(3): cmp $0x0,(%rbx)
344f(6): jnz 0x92(%rip)
3455(3): nop (%rax)
3458(3): mov %r15,%rdi
345b(5): call 0x1735(%rip)
3460(7): lea 0x1c8a1(%rip),%rsi
3467(5): mov $0x5,%edx
346c(2): xor %edi,%edi
346e(3): mov %rax,%rbx
3471(5): call 0xfffff09f(%rip)
3476(3): mov %r13,%rdx
3479(5): mov $0x3,%esi
347e(2): xor %edi,%edi
3480(3): mov %rax,%rbp
3483(5): call 0x8d0d(%rip)
3488(7): lea 0x1c897(%rip),%rdx
348f(3): mov %rax,%rcx
3492(3): mov %rbp,%r9
3495(3): mov %rbx,%r8
3498(2): xor %esi,%esi
349a(2): xor %edi,%edi
349c(2): xor %eax,%eax
349e(5): call 0xfffff402(%rip)
34a3(5): mov $0x0,0x18(%rsp)
34a8(5): jmp 0xfffffb58(%rip)
34ad(3): nop (%rax)
34b0(3): cmp $0x0,(%rax)
34b3(6): jnz 0xfffffbad(%rip)
34b9(7): lea 0x1c848(%rip),%rsi
34c0(5): mov $0x5,%edx
34c5(2): xor %edi,%edi
34c7(5): call 0xfffff049(%rip)
34cc(7): lea 0x1dfbd(%rip),%rdx
34d3(3): mov %rax,%rcx
34d6(2): xor %esi,%esi
34d8(2): xor %edi,%edi
34da(2): xor %eax,%eax
34dc(5): call 0xfffff3c4(%rip)
34e1(5): mov $0x0,0x18(%rsp)
34e6(5): jmp 0xfffffb1a(%rip)
34eb(7): cmp 0x224b1e(%rip),%r14
34f2(6): jbe 0xfffffecc(%rip)
34f8(5): jmp 0xfffffec1(%rip)
34fd(7): mov 0xb8(%r14),%rbx
3504(4): shl/sal $0x9,%rbx
3508(5): jmp 0xfffffce6(%rip)
350d(3): cmp $0x2,%eax
3510(6): jz 0x574(%rip)
3516(7): mov 0xe0(%r14),%rcx
351d(7): mov 0xe8(%r14),%r9
3524(5): jmp 0xfffffca8(%rip)
3529(4): mov 0x5c(%rsp),%eax
352d(3): cmp $0x3,%eax
3530(6): jz 0x8af(%rip)
3536(3): cmp $0x4,%eax
3539(2): jz 0x26(%rip)
353b(3): cmp $0x2,%eax
353e(2): jz 0x64(%rip)
3540(7): lea 0x1deb6(%rip),%rcx
3547(7): lea 0x1c718(%rip),%rsi
354e(7): lea 0x1d943(%rip),%rdi
3555(5): mov $0x438,%edx
355a(5): call 0xfffff0a6(%rip)
355f(3): mov %r13,%rdx
3562(5): mov $0x3,%esi
3567(2): xor %edi,%edi
3569(5): call 0x8c27(%rip)
356e(7): lea 0x1c6e2(%rip),%rsi
3575(5): mov $0x5,%edx
357a(2): xor %edi,%edi
357c(3): mov %rax,%rbp
357f(5): call 0xffffef91(%rip)
3584(3): mov %rax,%rbx
3587(5): call 0xffffee89(%rip)
358c(2): mov (%rax),%esi
358e(3): mov %rbp,%rcx
3591(3): mov %rbx,%rdx
3594(2): xor %edi,%edi
3596(2): xor %eax,%eax
3598(5): call 0xfffff308(%rip)
359d(5): mov $0x0,0x18(%rsp)
35a2(3): mov %r15,%rdi
35a5(5): call 0x160b(%rip)
35aa(7): mov 0x224be7(%rip),%rdi
35b1(5): call 0x18df(%rip)
35b6(7): mov 0x224bd3(%rip),%rdi
35bd(3): test %rdi,%rdi
35c0(2): jz 0x7(%rip)
35c2(5): call 0x18ce(%rip)
35c7(3): test %r13,%r13
35ca(2): jz 0x1d(%rip)
35cc(7): mov 0x224add(%rip),%rdi
35d3(3): test $0x20,(%rdi)
35d6(6): jz 0x345(%rip)
35dc(5): cmp $0x0,0x18(%rsp)
35e1(6): jnz 0x8a1(%rip)
35e7(7): cmp $0x0,0x224b93(%rip)
35ee(2): jz 0x24(%rip)
35f0(7): lea 0x1c70b(%rip),%rsi
35f7(2): xor %edi,%edi
35f9(5): mov $0x5,%edx
35fe(5): call 0xffffef12(%rip)
3603(7): lea 0x224b16(%rip),%rdi
360a(3): mov %rax,%rsi
360d(5): call 0xad3(%rip)
3612(5): movzx 0x18(%rsp),%eax
3617(3): xor $0x1,%eax
361a(8): mov 0x128(%rsp),%rcx
3622(9): xor $0x28,%rcx
362b(3): movzx %al,%eax
362e(6): jnz 0x7b6(%rip)
3634(7): add $0x138,%rsp
363b(1): pop %rbx
363c(1): pop %rbp
363d(2): pop %r12
363f(2): pop %r13
3641(2): pop %r14
3643(2): pop %r15
3645(1): ret near (%rsp)
3646(4): mov %rcx,0x10(%rax)
364a(4): mov %r9,0x18(%rax)
364e(5): jmp 0xfffffd12(%rip)
3653(4): lea 0xa(%r14),%rdi
3657(5): mov $0x40,%esi
365c(5): mov %r9,0x40(%rsp)
3661(5): mov %rcx,0x38(%rsp)
3666(7): mov %rdi,0x224a9b(%rip)
366d(5): call 0x9543(%rip)
3672(5): mov 0x38(%rsp),%rcx
3677(7): mov %rax,0x224a82(%rip)
367e(5): mov 0x40(%rsp),%r9
3683(5): jmp 0xfffffc7d(%rip)
3688(3): mov %r13,%rsi
368b(5): mov $0x4,%edi
3690(3): xor %r12d,%r12d
3693(5): call 0x89fd(%rip)
3698(7): lea 0x1c5f6(%rip),%rsi
369f(5): mov $0x5,%edx
36a4(2): xor %edi,%edi
36a6(3): mov %rax,%rbx
36a9(5): call 0xffffee67(%rip)
36ae(4): mov 0x40(%r14),%esi
36b2(3): mov %rax,%rdx
36b5(3): mov %rbx,%rcx
36b8(2): xor %edi,%edi
36ba(2): xor %eax,%eax
36bc(5): call 0xfffff1e4(%rip)
36c1(5): jmp 0xfffffaef(%rip)
36c6(5): call 0xffffed4a(%rip)
36cb(3): cmp $0x0,(%rax)
36ce(3): mov %r15d,%r14d
36d1(5): mov 0x20(%rsp),%r13
36d6(5): mov 0x28(%rsp),%r15
36db(5): mov 0x30(%rsp),%r12
36e0(3): mov %rax,%rbx
36e3(6): jnz 0x273(%rip)
36e9(5): mov 0x10(%rsp),%rdi
36ee(b): mov $0x0,0x224a8f(%rip)
36f9(5): call 0xc057(%rip)
36fe(2): test %eax,%eax
3700(6): jnz 0x22d(%rip)
3706(5): and %r14b,0x18(%rsp)
370b(5): jmp 0xfffff8f5(%rip)
3710(3): neg %rdx
3713(3): cmp %rax,%rdx
3716(3): setnb %al
3719(5): jmp 0xfffffccd(%rip)
371e(5): cmp $0x0,0x20(%rsp)
3723(6): jz 0x74f(%rip)
3729(5): cmp $0x0,0x1c(%rsp)
372e(6): jz 0xfffff7db(%rip)
3734(7): mov 0x2248d5(%rip),%rbx
373b(3): test %rbx,%rbx
373e(6): jz 0x29a(%rip)
3744(7): lea 0x1d695(%rip),%rsi
374b(5): mov $0x5,%edx
3750(2): xor %edi,%edi
3752(5): call 0xffffedbe(%rip)
3757(2): xor %edi,%edi
3759(3): mov %rax,%rdx
375c(3): mov %rbx,%rcx
375f(2): xor %esi,%esi
3761(2): xor %eax,%eax
3763(5): call 0xfffff13d(%rip)
3768(5): mov $0x1,%edi
376d(5): call 0xad3(%rip)
3772(7): mov 0x224947(%rip),%rdi
3779(5): call 0x8be7(%rip)
377e(7): lea 0x1c3f6(%rip),%rsi
3785(5): mov $0x5,%edx
378a(2): xor %edi,%edi
378c(5): mov %rax,0x8(%rsp)
3791(5): call 0xffffed7f(%rip)
3796(5): mov 0x8(%rsp),%rcx
379b(3): mov %rax,%rdx
379e(2): xor %esi,%esi
37a0(2): xor %edi,%edi
37a2(2): xor %eax,%eax
37a4(5): call 0xfffff0fc(%rip)
37a9(5): mov $0x0,0x8(%rsp)
37ae(5): jmp 0xfffff39a(%rip)
37b3(4): lea 0xffffffff(%rax),%rdx
37b7(3): cmp %rdx,%r14
37ba(6): jnz 0x732(%rip)
37c0(7): mov 0x224939(%rip),%rdx
37c7(4): shl/sal $0x6,%rax
37cb(2): xor %edi,%edi
37cd(3): mov %rbx,%rsi
37d0(3): add %rdx,%rax
37d3(3): add (%rax),%rsi
37d6(4): setb %dil
37da(3): test %rdi,%rdi
37dd(7): mov $0xffffffff,%rdi
37e4(4): cmovne %rdi,%rsi
37e8(4): mov 0x8(%rax),%rdi
37ec(5): mov %rsi,0x60(%rsp)
37f1(4): add $0x1,%rdi
37f5(5): mov %rdi,0x68(%rsp)
37fa(4): cmp 0x10(%rax),%rcx
37fe(6): jl 0x2ea(%rip)
3804(2): jnle 0xc(%rip)
3806(4): cmp 0x18(%rax),%r9d
380a(6): js 0x2de(%rip)
3810(7): cmp $0x0,0x224969(%rip)
3817(6): jz 0x34d(%rip)
381d(3): mov %r14,%rsi
3820(2): xor %edi,%edi
3822(4): shl/sal $0x6,%rsi
3826(3): add %rsi,%rdx
3829(3): mov (%rax),%rsi
382c(4): add 0x20(%rdx),%rsi
3830(6): jb 0x693(%rip)
3836(3): test %rdi,%rdi
3839(7): mov $0xffffffff,%rdi
3840(4): mov 0x30(%rdx),%r10
3844(4): cmovne %rdi,%rsi
3848(4): mov 0x8(%rax),%rdi
384c(4): add 0x28(%rdx),%rdi
3850(4): mov %rsi,0x20(%rdx)
3854(4): mov %rdi,0x28(%rdx)
3858(4): cmp 0x10(%rax),%r10
385c(6): jl 0x279(%rip)
3862(2): jnle 0x10(%rip)
3864(4): mov 0x18(%rax),%r11d
3868(4): cmp %r11d,0x38(%rdx)
386c(6): js 0x269(%rip)
3872(3): xor %r11d,%r11d
3875(4): add 0x20(%rax),%rsi
3879(4): setb %r11b
387d(3): test %r11,%r11
3880(7): mov $0xffffffff,%r11
3887(4): cmovne %r11,%rsi
388b(4): add 0x28(%rax),%rdi
388f(4): mov %rsi,0x20(%rdx)
3893(4): mov %rdi,0x28(%rdx)
3897(4): cmp 0x30(%rax),%r10
389b(2): jl 0x14(%rip)
389d(6): jnle 0xfffffa63(%rip)
38a3(3): mov 0x38(%rax),%esi
38a6(3): cmp %esi,0x38(%rdx)
38a9(6): jns 0xfffffa57(%rip)
38af(5): movdqu 0x30(%rax),%xmm0
38b4(4): movups %xmm0,0x30(%rdx)
38b8(5): jmp 0xfffffa48(%rip)
38bd(7): mov 0x2247ec(%rip),%rdx
38c4(7): lea 0x1ef4c(%rip),%rsi
38cb(3): mov %r13,%rdi
38ce(5): call 0x4272(%rip)
38d3(3): test %rax,%rax
38d6(6): jnz 0xfffff6b7(%rip)
38dc(3): mov %r13,%rsi
38df(5): mov $0x4,%edi
38e4(5): call 0x87ac(%rip)
38e9(7): lea 0x1c34c(%rip),%rsi
38f0(5): mov $0x5,%edx
38f5(2): xor %edi,%edi
38f7(3): mov %rax,%rbp
38fa(5): call 0xffffec16(%rip)
38ff(3): mov %rax,%rbx
3902(5): call 0xffffeb0e(%rip)
3907(2): mov (%rax),%esi
3909(3): mov %rbp,%rcx
390c(3): mov %rbx,%rdx
390f(5): mov $0x1,%edi
3914(2): xor %eax,%eax
3916(5): call 0xffffef8a(%rip)
391b(5): call 0xa385(%rip)
3920(2): test %eax,%eax
3922(6): jnz 0xfffffcba(%rip)
3928(5): jmp 0xfffffcbf(%rip)
392d(7): lea 0x1c3ac(%rip),%rsi
3934(5): mov $0x5,%edx
3939(2): xor %edi,%edi
393b(3): xor %r14d,%r14d
393e(5): call 0xffffebd2(%rip)
3943(2): mov (%rbx),%esi
3945(3): mov %rax,%rdx
3948(2): xor %edi,%edi
394a(2): xor %eax,%eax
394c(5): call 0xffffef54(%rip)
3951(5): jmp 0xfffffdb5(%rip)
3956(5): mov 0x10(%rsp),%rax
395b(5): mov $0x3,%esi
3960(2): xor %edi,%edi
3962(3): xor %r14d,%r14d
3965(4): mov 0x20(%rax),%rdx
3969(5): call 0x8827(%rip)
396e(7): lea 0x1c30c(%rip),%rsi
3975(5): mov $0x5,%edx
397a(2): xor %edi,%edi
397c(3): mov %rax,%rbp
397f(5): call 0xffffeb91(%rip)
3984(2): mov (%rbx),%esi
3986(3): mov %rax,%rdx
3989(3): mov %rbp,%rcx
398c(2): xor %edi,%edi
398e(2): xor %eax,%eax
3990(5): call 0xffffef10(%rip)
3995(5): jmp 0xfffffd54(%rip)
399a(3): mov %r13,%rsi
399d(5): mov $0x4,%edi
39a2(3): xor %r12d,%r12d
39a5(5): call 0x86eb(%rip)
39aa(7): lea 0x1c306(%rip),%rsi
39b1(5): mov $0x5,%edx
39b6(2): xor %edi,%edi
39b8(3): mov %rax,%rbx
39bb(5): call 0xffffeb55(%rip)
39c0(4): mov 0x40(%r14),%esi
39c4(3): mov %rax,%rdx
39c7(3): mov %rbx,%rcx
39ca(2): xor %edi,%edi
39cc(2): xor %eax,%eax
39ce(5): call 0xffffeed2(%rip)
39d3(5): jmp 0xfffffa2d(%rip)
39d8(7): lea 0x1d3c9(%rip),%rsi
39df(2): xor %edi,%edi
39e1(5): mov $0x5,%edx
39e6(5): call 0xffffeb2a(%rip)
39eb(2): xor %esi,%esi
39ed(3): mov %rax,%rdx
39f0(2): xor %edi,%edi
39f2(2): xor %eax,%eax
39f4(5): call 0xffffeeac(%rip)
39f9(7): mov 0x224610(%rip),%rbx
3a00(3): test %rbx,%rbx
3a03(6): jnz 0xfffffd41(%rip)
3a09(b): mov $0x0,0x2245fc(%rip)
3a14(5): jmp 0xfffff4f5(%rip)
3a19(7): lea 0x1d3f8(%rip),%rsi
3a20(2): xor %edi,%edi
3a22(5): mov $0x5,%edx
3a27(5): call 0xffffeae9(%rip)
3a2c(2): xor %esi,%esi
3a2e(3): mov %rax,%rdx
3a31(2): xor %edi,%edi
3a33(2): xor %eax,%eax
3a35(5): call 0xffffee6b(%rip)
3a3a(5): jmp 0xfffff4e5(%rip)
3a3f(5): mov 0x10(%rsp),%rbx
3a44(5): mov $0x4,%edx
3a49(3): mov %r14,%rsi
3a4c(3): mov %rbx,%rdi
3a4f(5): call 0xc611(%rip)
3a54(3): mov %rbx,%rdi
3a57(5): call 0xbe89(%rip)
3a5c(3): cmp %rax,%r14
3a5f(6): jz 0xfffff6c5(%rip)
3a65(7): lea 0x1d984(%rip),%rcx
3a6c(7): lea 0x1c1f3(%rip),%rsi
3a73(7): lea 0x1c234(%rip),%rdi
3a7a(5): mov $0x22f,%edx
3a7f(5): call 0xffffeb81(%rip)
3a84(7): mov 0xc0(%r14),%rcx
3a8b(7): mov 0xc8(%r14),%r9
3a92(5): jmp 0xfffff73a(%rip)
3a97(3): cmp %eax,%r12d
3a9a(8): lea 0x80(%rsp),%rdi
3aa2(2): jle 0x7(%rip)
3aa4(5): lea 0x0(%rbp,%rax,8),%rdi
3aa9(5): call 0xfe7(%rip)
3aae(3): mov %rax,%r15
3ab1(6): mov 0x224601(%rip),%eax
3ab7(3): add $0x1,%eax
3aba(3): cmp %r12d,%eax
3abd(3): setl %al
3ac0(5): cmp $0x2,0x18(%rsp)
3ac5(3): setz %dl
3ac8(2): or %edx,%eax
3aca(6): mov %al,0x2246b3(%rip)
3ad0(5): jmp 0xfffff4d3(%rip)
3ad5(5): movdqu 0x10(%rax),%xmm0
3ada(5): movd %xmm0,%r10
3adf(4): movups %xmm0,0x30(%rdx)
3ae3(5): jmp 0xfffffd8f(%rip)
3ae8(5): movdqu 0x10(%rax),%xmm0
3aed(5): movaps %xmm0,0x70(%rsp)
3af2(5): jmp 0xfffffd1e(%rip)
3af7(7): lea 0x1c036(%rip),%r15
3afe(7): mov %r15,0x22465b(%rip)
3b05(7): mov 0x224514(%rip),%r9
3b0c(7): lea 0x223b6d(%rip),%rdx
3b13(7): lea 0x1d8f6(%rip),%rcx
3b1a(7): lea 0x1c0cf(%rip),%rdi
3b21(6): mov $0x4,%r8d
3b27(3): mov %r15,%rsi
3b2a(5): call 0xea6(%rip)
3b2f(7): lea 0x1d8da(%rip),%rdx
3b36(3): mov 0x0(%rdx,%rax,4),%eax
3b39(3): cmp $0x1,%eax
3b3c(6): jz 0x1fc(%rip)
3b42(6): jb 0x1e3(%rip)
3b48(3): cmp $0x2,%eax
3b4b(6): jnz 0xfffff412(%rip)
3b51(7): lea 0x1c0ca(%rip),%rax
3b58(7): mov %rax,0x2245f9(%rip)
3b5f(5): jmp 0xfffff3fe(%rip)
3b64(3): xor %r10d,%r10d
3b67(4): add 0x20(%rax),%rsi
3b6b(7): mov $0xffffffff,%r11
3b72(4): setb %r10b
3b76(3): test %r10,%r10
3b79(4): cmovne %r11,%rsi
3b7d(4): add 0x28(%rax),%rdi
3b81(5): mov %rsi,0x60(%rsp)
3b86(5): mov %rdi,0x68(%rsp)
3b8b(4): mov 0x30(%rax),%rsi
3b8f(5): cmp %rsi,0x70(%rsp)
3b94(2): jl 0x15(%rip)
3b96(6): jnle 0xfffffc87(%rip)
3b9c(3): mov 0x38(%rax),%esi
3b9f(4): cmp %esi,0x78(%rsp)
3ba3(6): jns 0xfffffc7a(%rip)
3ba9(5): movdqu 0x30(%rax),%xmm0
3bae(5): movaps %xmm0,0x70(%rsp)
3bb3(5): jmp 0xfffffc6a(%rip)
3bb8(5): mov 0x10(%rsp),%rbx
3bbd(5): mov $0x1,%edx
3bc2(3): mov %r14,%rsi
3bc5(3): mov %rbx,%rdi
3bc8(5): call 0xc498(%rip)
3bcd(3): mov %rbx,%rdi
3bd0(5): call 0xbd10(%rip)
3bd5(3): cmp %rax,%r14
3bd8(6): jnz 0x2f5(%rip)
3bde(5): movzx 0x70(%r14),%ebp
3be3(5): jmp 0xfffff503(%rip)
3be8(7): lea 0x1bff6(%rip),%rdi
3bef(5): call 0xffffe7f1(%rip)
3bf4(3): test %rax,%rax
3bf7(3): mov %rax,%r15
3bfa(7): mov %rax,0x22455f(%rip)
3c01(6): jz 0xfffffef6(%rip)
3c07(7): lea 0x1bf40(%rip),%rsi
3c0e(3): mov %rax,%rdi
3c11(5): call 0xffffeabf(%rip)
3c16(2): test %eax,%eax
3c18(6): jz 0xfffffedf(%rip)
3c1e(4): cmp $0x2b,(%r15)
3c22(7): lea 0x1d7d9(%rip),%rbx
3c29(2): jnz 0x12(%rip)
3c2b(5): jmp 0x120(%rip)
3c30(4): add $0x6,%r15
3c34(7): mov %r15,0x224525(%rip)
3c3b(7): mov 0x22451e(%rip),%r15
3c42(5): mov $0x6,%edx
3c47(3): mov %rbx,%rsi
3c4a(3): mov %r15,%rdi
3c4d(5): call 0xffffe7d3(%rip)
3c52(2): test %eax,%eax
3c54(2): jz 0xffffffdc(%rip)
3c56(5): jmp 0xfffff2f2(%rip)
3c5b(2): xor %edi,%edi
3c5d(5): call 0x5e3(%rip)
3c62(3): mov %r13,%rdx
3c65(2): xor %edi,%edi
3c67(5): mov $0x3,%esi
3c6c(5): call 0x8524(%rip)
3c71(4): mov 0x40(%r14),%esi
3c75(7): lea 0x1d814(%rip),%rdx
3c7c(3): mov %rax,%rcx
3c7f(2): xor %edi,%edi
3c81(2): xor %eax,%eax
3c83(5): call 0xffffec1d(%rip)
3c88(5): jmp 0xfffff528(%rip)
3c8d(5): mov 0x10(%rsp),%rdi
3c92(3): mov %r14,%rsi
3c95(5): call 0x902b(%rip)
3c9a(2): test %al,%al
3c9c(6): jz 0xfffff488(%rip)
3ca2(8): cmp $0x0,0x2244e6(%rip)
3caa(3): mov (%r14),%rbp
3cad(2): jnz 0x2a(%rip)
3caf(5): jmp 0xba(%rip)
3cb4(7): mov 0x80(%r14),%rdx
3cbb(4): mov 0x78(%r14),%rsi
3cbf(7): mov 0x2244ca(%rip),%rdi
3cc6(5): call 0x125a(%rip)
3ccb(2): test %eax,%eax
3ccd(6): jnle 0xfffff457(%rip)
3cd3(4): mov 0x8(%r14),%r14
3cd7(3): test %r14,%r14
3cda(3): setnz %al
3cdd(3): cmp %r14,%rbp
3ce0(3): setnz %dl
3ce3(2): and %dl,%al
3ce5(2): jnz 0xffffffcf(%rip)
3ce7(3): mov %r13,%rdx
3cea(2): xor %edi,%edi
3cec(5): mov $0x3,%esi
3cf1(3): mov %eax,%r12d
3cf4(5): call 0x849c(%rip)
3cf9(7): lea 0x1d200(%rip),%rsi
3d00(3): mov %rax,%rbx
3d03(2): xor %edi,%edi
3d05(5): mov $0x5,%edx
3d0a(5): call 0xffffe806(%rip)
3d0f(3): mov %rbx,%rcx
3d12(3): mov %rax,%rdx
3d15(2): xor %esi,%esi
3d17(2): xor %edi,%edi
3d19(2): xor %eax,%eax
3d1b(5): call 0xffffeb85(%rip)
3d20(5): jmp 0xfffff6e0(%rip)
3d25(7): lea 0x1becf(%rip),%rax
3d2c(7): mov %rax,0x224425(%rip)
3d33(5): jmp 0xfffff22a(%rip)
3d38(7): lea 0x1bed4(%rip),%rax
3d3f(7): mov %rax,0x224412(%rip)
3d46(5): jmp 0xfffff217(%rip)
3d4b(5): mov $0xa,%esi
3d50(3): mov %r15,%rdi
3d53(5): call 0xffffe84d(%rip)
3d58(3): test %rax,%rax
3d5b(6): jz 0xfffff1f7(%rip)
3d61(3): mov $0x0,(%rax)
3d64(5): jmp 0xfffff1e4(%rip)
3d69(5): call 0x10b7(%rip)
3d6e(3): test %rax,%rax
3d71(7): mov %rax,0x224418(%rip)
3d78(2): jz 0x67(%rip)
3d7a(2): xor %edi,%edi
3d7c(5): call 0xc5c4(%rip)
3d81(3): mov %rax,%r12
3d84(2): jmp 0x12(%rip)
3d86(5): mov 0x30(%r12),%rbx
3d8b(3): mov %r12,%rdi
3d8e(5): call 0xc572(%rip)
3d93(3): mov %rbx,%r12
3d96(3): test %r12,%r12
3d99(6): jz 0xffffff3e(%rip)
3d9f(6): test $0x3,0x28(%r12)
3da5(2): jnz 0xffffffe1(%rip)
3da7(5): mov 0x8(%r12),%rsi
3dac(5): mov 0x48(%rsp),%rdx
3db1(5): mov $0x1,%edi
3db6(5): call 0xffffe98a(%rip)
3dbb(2): test %eax,%eax
3dbd(2): jnz 0xffffffc9(%rip)
3dbf(8): mov 0x98(%rsp),%rdx
3dc7(8): mov 0x90(%rsp),%rsi
3dcf(7): mov 0x2243ba(%rip),%rdi
3dd6(5): call 0x10ea(%rip)
3ddb(2): test %eax,%eax
3ddd(2): jns 0xffffffa9(%rip)
3ddf(5): call 0x8e51(%rip)
3de4(5): call 0xffffe77c(%rip)
3de9(5): mov 0x0(%rbp,%rax,8),%rdi
3dee(5): call 0x8572(%rip)
3df3(7): lea 0x1be31(%rip),%rsi
3dfa(3): mov %rax,%rbx
3dfd(5): mov $0x5,%edx
3e02(2): xor %edi,%edi
3e04(5): call 0xffffe70c(%rip)
3e09(3): mov %rbx,%rcx
3e0c(3): mov %rax,%rdx
3e0f(2): xor %esi,%esi
3e11(2): xor %edi,%edi
3e13(2): xor %eax,%eax
3e15(5): call 0xffffea8b(%rip)
3e1a(7): lea 0x1d03f(%rip),%rsi
3e21(5): mov $0x5,%edx
3e26(2): xor %edi,%edi
3e28(5): call 0xffffe6e8(%rip)
3e2d(7): mov 0x2242ac(%rip),%rdi
3e34(7): lea 0x1e155(%rip),%rdx
3e3b(3): mov %rax,%rcx
3e3e(5): mov $0x1,%esi
3e43(2): xor %eax,%eax
3e45(5): call 0xffffeb2b(%rip)
3e4a(5): mov $0x1,%edi
3e4f(5): call 0x3f1(%rip)
3e54(7): mov 0x224265(%rip),%r8
3e5b(4): mov 0x5c(%rsp),%esi
3e5f(7): lea 0x22387a(%rip),%rcx
3e66(5): mov $0x74,%edx
3e6b(2): mov %eax,%edi
3e6d(5): call 0x9963(%rip)
3e72(5): cmp $0x0,0x1c(%rsp)
3e77(6): jnz 0xfffffb92(%rip)
3e7d(5): jmp 0xfffff08c(%rip)
3e82(3): mov %r13,%rsi
3e85(5): mov $0x4,%edi
3e8a(5): call 0x8206(%rip)
3e8f(7): lea 0x1be5b(%rip),%rsi
3e96(3): mov %rax,%rbx
3e99(5): mov $0x5,%edx
3e9e(2): xor %edi,%edi
3ea0(5): call 0xffffe670(%rip)
3ea5(3): mov %rbx,%rcx
3ea8(3): mov %rax,%rdx
3eab(2): xor %esi,%esi
3ead(5): mov $0x1,%edi
3eb2(2): xor %eax,%eax
3eb4(5): call 0xffffe9ec(%rip)
3eb9(5): mov $0x1,%esi
3ebe(5): jmp 0xfffff391(%rip)
3ec3(5): mov $0x1,%edi
3ec8(5): jmp 0xfffff96e(%rip)
3ecd(7): lea 0x1d51c(%rip),%rcx
3ed4(7): lea 0x1bd8b(%rip),%rsi
3edb(7): lea 0x1bdcc(%rip),%rdi
3ee2(5): mov $0x20e,%edx
3ee7(5): call 0xffffe719(%rip)
3eec(7): lea 0x1d4fd(%rip),%rcx
3ef3(7): lea 0x1bd6c(%rip),%rsi
3efa(7): lea 0x1bdc7(%rip),%rdi
3f01(5): mov $0x27d,%edx
3f06(5): call 0xffffe6fa(%rip)
3f0b(7): lea 0x1ce66(%rip),%rsi
3f12(5): mov $0x5,%edx
3f17(2): xor %edi,%edi
3f19(5): call 0xffffe5f7(%rip)
3f1e(2): xor %esi,%esi
3f20(3): mov %rax,%rdx
3f23(2): xor %edi,%edi
3f25(2): xor %eax,%eax
3f27(5): call 0xffffe979(%rip)
3f2c(5): mov $0x1,%edi
3f31(5): call 0x30f(%rip)

"_start" :
3f40(2): xor %ebp,%ebp
3f42(3): mov %rdx,%r9
3f45(1): pop %rsi
3f46(3): mov %rsp,%rdx
3f49(4): and $0xfffffff0,%rsp
3f4d(1): push %rax
3f4e(1): push %rsp
3f4f(7): lea 0x1bada(%rip),%r8
3f56(7): lea 0x1ba63(%rip),%rcx
3f5d(7): lea 0xffffeaec(%rip),%rdi
3f64(6): call 0x224076(%rip)
3f6a(1): hlt 

"deregister_tm_clones" :
3f70(7): lea 0x224129(%rip),%rdi
3f77(1): push %rbp
3f78(7): lea 0x224121(%rip),%rax
3f7f(3): cmp %rdi,%rax
3f82(3): mov %rsp,%rbp
3f85(2): jz 0x1b(%rip)
3f87(7): mov 0x224042(%rip),%rax
3f8e(3): test %rax,%rax
3f91(2): jz 0xf(%rip)
3f93(1): pop %rbp
3f94(2): jmp %rax
3f96(a): nop 0x0(%rax,%rax,1)
3fa0(1): pop %rbp
3fa1(1): ret near (%rsp)

"register_tm_clones" :
3fb0(7): lea 0x2240e9(%rip),%rdi
3fb7(7): lea 0x2240e2(%rip),%rsi
3fbe(1): push %rbp
3fbf(3): sub %rdi,%rsi
3fc2(3): mov %rsp,%rbp
3fc5(4): sar $0x3,%rsi
3fc9(3): mov %rsi,%rax
3fcc(4): shr $0x3f,%rax
3fd0(3): add %rax,%rsi
3fd3(3): sar $0x1,%rsi
3fd6(2): jz 0x1a(%rip)
3fd8(7): mov 0x224011(%rip),%rax
3fdf(3): test %rax,%rax
3fe2(2): jz 0xe(%rip)
3fe4(1): pop %rbp
3fe5(2): jmp %rax
3fe7(9): nop 0x0(%rax,%rax,1)
3ff0(1): pop %rbp
3ff1(1): ret near (%rsp)

"__do_global_dtors_aux" :
4000(7): cmp $0x0,0x2240e1(%rip)
4007(2): jnz 0x31(%rip)
4009(8): cmp $0x0,0x223fe7(%rip)
4011(1): push %rbp
4012(3): mov %rsp,%rbp
4015(2): jz 0xe(%rip)
4017(7): mov 0x223fea(%rip),%rdi
401e(5): call 0xffffe9fa(%rip)
4023(5): call 0xffffff4d(%rip)
4028(7): mov $0x1,0x2240b9(%rip)
402f(1): pop %rbp
4030(1): ret near (%rsp)
4031(7): nop 0x0(%rax)
4038(2): REP ret near (%rsp)

"frame_dummy" :
4040(1): push %rbp
4041(3): mov %rsp,%rbp
4044(1): pop %rbp
4045(5): jmp 0xffffff6b(%rip)

"print_only_size" :
4050(1): push %rbx
4051(7): sub $0x2a0,%rsp
4058(7): mov 0x224049(%rip),%rbx
405f(9): mov $0x28,%rax
4068(8): mov %rax,0x298(%rsp)
4070(2): xor %eax,%eax
4072(4): cmp $0xffffffff,%rdi
4076(2): jz 0x4a(%rip)
4078(7): mov 0x2240c9(%rip),%r8
407f(6): mov 0x2240eb(%rip),%edx
4085(3): mov %rsp,%rsi
4088(5): mov $0x1,%ecx
408d(5): call 0x5013(%rip)
4092(3): mov %rbx,%rsi
4095(3): mov %rax,%rdi
4098(5): call 0xffffe608(%rip)
409d(8): mov 0x298(%rsp),%rax
40a5(9): xor $0x28,%rax
40ae(2): jnz 0x27(%rip)
40b0(7): add $0x2a0,%rsp
40b7(1): pop %rbx
40b8(1): ret near (%rsp)
40b9(7): nop 0x0(%rax)
40c0(7): lea 0x1b99d(%rip),%rsi
40c7(5): mov $0x5,%edx
40cc(2): xor %edi,%edi
40ce(5): call 0xffffe442(%rip)
40d3(2): jmp 0xffffffbf(%rip)
40d5(5): call 0xffffe48b(%rip)

"print_size" :
40e0(2): push %r13
40e2(2): push %r12
40e4(1): push %rbp
40e5(1): push %rbx
40e6(3): mov %rdi,%rbx
40e9(3): mov %rsi,%rbp
40ec(4): sub $0x78,%rsp
40f0(4): mov 0x8(%rdi),%rdi
40f4(9): mov $0x28,%rax
40fd(5): mov %rax,0x68(%rsp)
4102(2): xor %eax,%eax
4104(7): cmp $0x0,0x224062(%rip)
410b(4): cmove (%rbx),%rdi
410f(5): call 0xffffff41(%rip)
4114(7): cmp $0x0,0x224051(%rip)
411b(2): jz 0x6b(%rip)
411d(7): mov 0x223f84(%rip),%rdi
4124(4): mov 0x28(%rdi),%rax
4128(4): cmp 0x30(%rdi),%rax
412c(6): jnb 0xa4(%rip)
4132(4): lea 0x1(%rax),%rdx
4136(4): mov %rdx,0x28(%rdi)
413a(3): mov $0x9,(%rax)
413d(7): mov 0x22400c(%rip),%r12
4144(3): mov %rsp,%rsi
4147(7): mov 0x22400a(%rip),%r13
414e(5): movdqa 0x10(%rbx),%xmm0
4153(5): lea 0x10(%rsp),%rbx
4158(3): mov %r12,%rdi
415b(3): mov %rbx,%rdx
415e(4): movaps %xmm0,(%rsp)
4162(5): call 0x1afbe(%rip)
4167(3): test %rax,%rax
416a(2): jz 0x76(%rip)
416c(5): mov 0x8(%rsp),%r8d
4171(7): mov 0x223f30(%rip),%rdi
4178(3): mov %r12,%rcx
417b(3): mov %rbx,%rdx
417e(3): mov %r13,%rsi
4181(5): call 0x391f(%rip)
4186(7): cmp $0x1,0x223ff5(%rip)
418d(7): lea 0x1b8f1(%rip),%rsi
4194(3): mov %rbp,%rdx
4197(5): mov $0x1,%edi
419c(2): sbb %ecx,%ecx
419e(2): xor %eax,%eax
41a0(3): and $0xa,%ecx
41a3(5): call 0xffffe6ad(%rip)
41a8(7): mov 0x223ef9(%rip),%rdi
41af(5): call 0xffffe7d1(%rip)
41b4(5): mov 0x68(%rsp),%rax
41b9(9): xor $0x28,%rax
41c2(2): jnz 0x72(%rip)
41c4(4): add $0x78,%rsp
41c8(1): pop %rbx
41c9(1): pop %rbp
41ca(2): pop %r12
41cc(2): pop %r13
41ce(1): ret near (%rsp)
41cf(1): nop 
41d0(5): mov $0x9,%esi
41d5(5): call 0xffffe3eb(%rip)
41da(5): jmp 0xffffff63(%rip)
41df(1): nop 
41e0(4): mov (%rsp),%rdi
41e4(5): lea 0x50(%rsp),%rsi
41e9(5): call 0x5c07(%rip)
41ee(3): mov %rax,%rdi
41f1(3): mov %rax,%rbx
41f4(5): call 0x816c(%rip)
41f9(7): lea 0x1b86d(%rip),%rsi
4200(3): mov %rax,%r12
4203(2): xor %edi,%edi
4205(5): mov $0x5,%edx
420a(5): call 0xffffe306(%rip)
420f(2): xor %esi,%esi
4211(3): mov %rax,%rdx
4214(2): xor %edi,%edi
4216(3): mov %r12,%rcx
4219(2): xor %eax,%eax
421b(5): call 0xffffe685(%rip)
4220(7): mov 0x223e81(%rip),%rsi
4227(3): mov %rbx,%rdi
422a(5): call 0xffffe476(%rip)
422f(5): jmp 0xffffff57(%rip)
4234(5): call 0xffffe32c(%rip)

"usage" :
4240(2): push %r13
4242(2): push %r12
4244(5): mov $0x5,%edx
4249(1): push %rbp
424a(1): push %rbx
424b(2): mov %edi,%ebp
424d(7): sub $0x88,%rsp
4254(7): mov 0x223f55(%rip),%rbx
425b(9): mov $0x28,%rax
4264(5): mov %rax,0x78(%rsp)
4269(2): xor %eax,%eax
426b(2): test %edi,%edi
426d(2): jz 0x30(%rip)
426f(7): lea 0x1bbc2(%rip),%rsi
4276(2): xor %edi,%edi
4278(5): call 0xffffe298(%rip)
427d(7): mov 0x223e5c(%rip),%rdi
4284(3): mov %rax,%rdx
4287(3): mov %rbx,%rcx
428a(5): mov $0x1,%esi
428f(2): xor %eax,%eax
4291(5): call 0xffffe6df(%rip)
4296(2): mov %ebp,%edi
4298(5): call 0xffffe6b8(%rip)
429d(7): lea 0x1bbbc(%rip),%rsi
42a4(2): xor %edi,%edi
42a6(5): call 0xffffe26a(%rip)
42ab(3): mov %rbx,%rcx
42ae(3): mov %rbx,%rdx
42b1(3): mov %rax,%rsi
42b4(5): mov $0x1,%edi
42b9(2): xor %eax,%eax
42bb(5): call 0xffffe595(%rip)
42c0(7): mov 0x223de1(%rip),%rbx
42c7(7): lea 0x1bbda(%rip),%rsi
42ce(5): mov $0x5,%edx
42d3(2): xor %edi,%edi
42d5(5): call 0xffffe23b(%rip)
42da(3): mov %rbx,%rsi
42dd(3): mov %rax,%rdi
42e0(5): call 0xffffe3c0(%rip)
42e5(7): mov 0x223dbc(%rip),%rbx
42ec(7): lea 0x1bbfd(%rip),%rsi
42f3(5): mov $0x5,%edx
42f8(2): xor %edi,%edi
42fa(5): call 0xffffe216(%rip)
42ff(3): mov %rbx,%rsi
4302(3): mov %rax,%rdi
4305(5): call 0xffffe39b(%rip)
430a(7): mov 0x223d97(%rip),%rbx
4311(7): lea 0x1bc28(%rip),%rsi
4318(5): mov $0x5,%edx
431d(2): xor %edi,%edi
431f(5): call 0xffffe1f1(%rip)
4324(3): mov %rbx,%rsi
4327(3): mov %rax,%rdi
432a(5): call 0xffffe376(%rip)
432f(7): mov 0x223d72(%rip),%rbx
4336(7): lea 0x1bdc3(%rip),%rsi
433d(5): mov $0x5,%edx
4342(2): xor %edi,%edi
4344(5): call 0xffffe1cc(%rip)
4349(3): mov %rbx,%rsi
434c(3): mov %rax,%rdi
434f(5): call 0xffffe351(%rip)
4354(7): mov 0x223d4d(%rip),%rbx
435b(7): lea 0x1c056(%rip),%rsi
4362(5): mov $0x5,%edx
4367(2): xor %edi,%edi
4369(5): call 0xffffe1a7(%rip)
436e(3): mov %rbx,%rsi
4371(3): mov %rax,%rdi
4374(5): call 0xffffe32c(%rip)
4379(7): mov 0x223d28(%rip),%rbx
4380(7): lea 0x1c1d9(%rip),%rsi
4387(5): mov $0x5,%edx
438c(2): xor %edi,%edi
438e(5): call 0xffffe182(%rip)
4393(3): mov %rbx,%rsi
4396(3): mov %rax,%rdi
4399(5): call 0xffffe307(%rip)
439e(7): mov 0x223d03(%rip),%rbx
43a5(7): lea 0x1c284(%rip),%rsi
43ac(5): mov $0x5,%edx
43b1(2): xor %edi,%edi
43b3(5): call 0xffffe15d(%rip)
43b8(3): mov %rbx,%rsi
43bb(3): mov %rax,%rdi
43be(5): call 0xffffe2e2(%rip)
43c3(7): mov 0x223cde(%rip),%rbx
43ca(7): lea 0x1c37f(%rip),%rsi
43d1(5): mov $0x5,%edx
43d6(2): xor %edi,%edi
43d8(5): call 0xffffe138(%rip)
43dd(3): mov %rbx,%rsi
43e0(3): mov %rax,%rdi
43e3(5): call 0xffffe2bd(%rip)
43e8(7): mov 0x223cb9(%rip),%rbx
43ef(7): lea 0x1c5c2(%rip),%rsi
43f6(5): mov $0x5,%edx
43fb(2): xor %edi,%edi
43fd(5): call 0xffffe113(%rip)
4402(3): mov %rbx,%rsi
4405(3): mov %rax,%rdi
4408(5): call 0xffffe298(%rip)
440d(7): mov 0x223c94(%rip),%rbx
4414(7): lea 0x1c66d(%rip),%rsi
441b(5): mov $0x5,%edx
4420(2): xor %edi,%edi
4422(5): call 0xffffe0ee(%rip)
4427(3): mov %rbx,%rsi
442a(3): mov %rax,%rdi
442d(5): call 0xffffe273(%rip)
4432(7): mov 0x223c6f(%rip),%rbx
4439(7): lea 0x1c678(%rip),%rsi
4440(5): mov $0x5,%edx
4445(2): xor %edi,%edi
4447(5): call 0xffffe0c9(%rip)
444c(3): mov %rbx,%rsi
444f(3): mov %rax,%rdi
4452(5): call 0xffffe24e(%rip)
4457(7): lea 0x1c692(%rip),%rsi
445e(5): mov $0x5,%edx
4463(2): xor %edi,%edi
4465(5): call 0xffffe0ab(%rip)
446a(7): lea 0x1b61d(%rip),%rdx
4471(3): mov %rax,%rsi
4474(5): mov $0x1,%edi
4479(2): xor %eax,%eax
447b(5): call 0xffffe3d5(%rip)
4480(7): mov 0x223c21(%rip),%rbx
4487(7): lea 0x1c742(%rip),%rsi
448e(5): mov $0x5,%edx
4493(2): xor %edi,%edi
4495(5): call 0xffffe07b(%rip)
449a(3): mov %rbx,%rsi
449d(3): mov %rax,%rdi
44a0(7): lea 0x1b5e4(%rip),%rbx
44a7(5): call 0xffffe1f9(%rip)
44ac(7): lea 0x1b5de(%rip),%rax
44b3(7): lea 0x1b618(%rip),%rcx
44ba(9): mov $0x0,0x60(%rsp)
44c3(9): mov $0x0,0x68(%rsp)
44cc(3): mov %rsp,%rdx
44cf(4): mov %rax,(%rsp)
44d3(7): lea 0x1b5b9(%rip),%rax
44da(5): mov %rcx,0x30(%rsp)
44df(7): lea 0x1b5f6(%rip),%rcx
44e6(5): mov %rax,0x8(%rsp)
44eb(7): lea 0x1b619(%rip),%rax
44f2(5): mov %rcx,0x40(%rsp)
44f7(7): lea 0x1b5e8(%rip),%rcx
44fe(5): mov %rax,0x10(%rsp)
4503(7): lea 0x1b599(%rip),%rax
450a(5): mov %rcx,0x50(%rsp)
450f(5): mov %rax,0x18(%rsp)
4514(7): lea 0x1b59e(%rip),%rax
451b(5): mov %rax,0x20(%rsp)
4520(7): lea 0x1b59c(%rip),%rax
4527(5): mov %rax,0x28(%rsp)
452c(5): mov %rax,0x38(%rsp)
4531(5): mov %rax,0x48(%rsp)
4536(5): mov %rax,0x58(%rsp)
453b(5): nop 0x0(%rax,%rax,1)
4540(4): add $0x10,%rdx
4544(3): mov (%rdx),%rdi
4547(3): test %rdi,%rdi
454a(2): jz 0x15(%rip)
454c(5): mov $0x3,%ecx
4551(3): mov %rbx,%rsi
4554(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
4556(3): setnbe %al
4559(2): sbb $0x0,%al
455b(2): test %al,%al
455d(2): jnz 0xffffffe3(%rip)
455f(4): mov 0x8(%rdx),%r12
4563(2): xor %edi,%edi
4565(5): mov $0x5,%edx
456a(7): lea 0x1b57f(%rip),%rsi
4571(3): test %r12,%r12
4574(6): jz 0xc7(%rip)
457a(5): call 0xffffdf96(%rip)
457f(7): lea 0x1c722(%rip),%rcx
4586(7): lea 0x1b57a(%rip),%rdx
458d(3): mov %rax,%rsi
4590(5): mov $0x1,%edi
4595(2): xor %eax,%eax
4597(5): call 0xffffe2b9(%rip)
459c(2): xor %esi,%esi
459e(5): mov $0x5,%edi
45a3(5): call 0xffffe29d(%rip)
45a8(3): test %rax,%rax
45ab(2): jz 0x1e(%rip)
45ad(7): lea 0x1b561(%rip),%rsi
45b4(5): mov $0x3,%edx
45b9(3): mov %rax,%rdi
45bc(5): call 0xffffde64(%rip)
45c1(2): test %eax,%eax
45c3(6): jnz 0x10d(%rip)
45c9(7): lea 0x1b549(%rip),%rsi
45d0(2): xor %edi,%edi
45d2(5): mov $0x5,%edx
45d7(5): call 0xffffdf39(%rip)
45dc(7): lea 0x1b4a8(%rip),%rcx
45e3(7): lea 0x1c6be(%rip),%rdx
45ea(3): mov %rax,%rsi
45ed(5): mov $0x1,%edi
45f2(2): xor %eax,%eax
45f4(5): call 0xffffe25c(%rip)
45f9(3): cmp %rbx,%r12
45fc(7): lea 0x1b4aa(%rip),%rcx
4603(7): lea 0x1d9d7(%rip),%rbx
460a(4): cmove %rcx,%rbx
460e(7): lea 0x1c703(%rip),%rsi
4615(2): xor %edi,%edi
4617(5): mov $0x5,%edx
461c(5): call 0xffffdef4(%rip)
4621(3): mov %rbx,%rcx
4624(3): mov %rax,%rsi
4627(3): mov %r12,%rdx
462a(5): mov $0x1,%edi
462f(2): xor %eax,%eax
4631(5): call 0xffffe21f(%rip)
4636(5): jmp 0xfffffc60(%rip)
463b(5): call 0xffffded5(%rip)
4640(7): lea 0x1c661(%rip),%rcx
4647(7): lea 0x1b4b9(%rip),%rdx
464e(3): mov %rax,%rsi
4651(5): mov $0x1,%edi
4656(2): xor %eax,%eax
4658(5): call 0xffffe1f8(%rip)
465d(2): xor %esi,%esi
465f(5): mov $0x5,%edi
4664(5): call 0xffffe1dc(%rip)
4669(3): test %rax,%rax
466c(2): jz 0x1a(%rip)
466e(7): lea 0x1b4a0(%rip),%rsi
4675(5): mov $0x3,%edx
467a(3): mov %rax,%rdi
467d(5): call 0xffffdda3(%rip)
4682(2): test %eax,%eax
4684(2): jnz 0x45(%rip)
4686(7): lea 0x1b48c(%rip),%rsi
468d(5): mov $0x5,%edx
4692(2): xor %edi,%edi
4694(7): lea 0x1b3f0(%rip),%r12
469b(7): lea 0x1b40b(%rip),%rbx
46a2(5): call 0xffffde6e(%rip)
46a7(7): lea 0x1b3dd(%rip),%rcx
46ae(7): lea 0x1c5f3(%rip),%rdx
46b5(3): mov %rax,%rsi
46b8(5): mov $0x1,%edi
46bd(2): xor %eax,%eax
46bf(5): call 0xffffe191(%rip)
46c4(5): jmp 0xffffff4a(%rip)
46c9(7): lea 0x1b3bb(%rip),%r12
46d0(7): mov 0x2239d1(%rip),%r13
46d7(7): lea 0x1c5f2(%rip),%rsi
46de(2): xor %edi,%edi
46e0(5): mov $0x5,%edx
46e5(5): call 0xffffde2b(%rip)
46ea(3): mov %r13,%rsi
46ed(3): mov %rax,%rdi
46f0(5): call 0xffffdfb0(%rip)
46f5(5): jmp 0xfffffed4(%rip)

"__argmatch_die" :
4700(5): mov $0x1,%edi
4705(5): jmp 0xfffffb3b(%rip)

"argmatch" :
4710(2): push %r15
4712(2): push %r14
4714(3): mov %rsi,%r15
4717(2): push %r13
4719(2): push %r12
471b(3): mov %rcx,%r13
471e(1): push %rbp
471f(1): push %rbx
4720(3): mov %rdx,%rbp
4723(4): sub $0x28,%rsp
4727(5): mov %rdi,0x8(%rsp)
472c(5): mov %rdx,0x18(%rsp)
4731(5): call 0xffffddff(%rip)
4736(3): mov (%r15),%r14
4739(8): mov $0xffffffff,(%rsp)
4741(3): test %r14,%r14
4744(6): jz 0xb9(%rip)
474a(3): mov %rax,%r12
474d(5): mov $0x0,0x17(%rsp)
4752(2): xor %ebx,%ebx
4754(2): jmp 0x53(%rip)
4756(a): nop 0x0(%rax,%rax,1)
4760(5): mov 0x18(%rsp),%rax
4765(3): test %rax,%rax
4768(6): jz 0xa8(%rip)
476e(4): mov (%rsp),%rdi
4772(3): mov %r13,%rdx
4775(3): mov %rbp,%rsi
4778(4): imul %r13,%rdi
477c(3): add %rax,%rdi
477f(5): call 0xffffdf01(%rip)
4784(2): test %eax,%eax
4786(5): movzx 0x17(%rsp),%eax
478b(5): mov $0x1,%ecx
4790(3): cmovne %ecx,%eax
4793(4): mov %al,0x17(%rsp)
4797(4): add $0x1,%rbx
479b(3): add %r13,%rbp
479e(4): mov 0x0(%r15,%rbx,8),%r14
47a2(3): test %r14,%r14
47a5(2): jz 0x43(%rip)
47a7(5): mov 0x8(%rsp),%rsi
47ac(3): mov %r12,%rdx
47af(3): mov %r14,%rdi
47b2(5): call 0xffffdc6e(%rip)
47b7(2): test %eax,%eax
47b9(2): jnz 0xffffffde(%rip)
47bb(3): mov %r14,%rdi
47be(5): call 0xffffdd72(%rip)
47c3(3): cmp %r12,%rax
47c6(2): jz 0x5a(%rip)
47c8(5): cmp $0xffffffff,(%rsp)
47cd(2): jnz 0xffffff93(%rip)
47cf(4): mov %rbx,(%rsp)
47d3(4): add $0x1,%rbx
47d7(3): add %r13,%rbp
47da(4): mov 0x0(%r15,%rbx,8),%r14
47de(3): test %r14,%r14
47e1(2): jnz 0xffffffc6(%rip)
47e3(5): nop 0x0(%rax,%rax,1)
47e8(5): cmp $0x0,0x17(%rsp)
47ed(7): mov $0xfffffffe,%rax
47f4(5): cmove (%rsp),%rax
47f9(4): mov %rax,(%rsp)
47fd(4): mov (%rsp),%rax
4801(4): add $0x28,%rsp
4805(1): pop %rbx
4806(1): pop %rbp
4807(2): pop %r12
4809(2): pop %r13
480b(2): pop %r14
480d(2): pop %r15
480f(1): ret near (%rsp)
4810(5): mov $0x1,0x17(%rsp)
4815(2): jmp 0xffffff82(%rip)
4817(9): nop 0x0(%rax,%rax,1)
4820(4): mov %rbx,(%rsp)
4824(2): jmp 0xffffffd9(%rip)

"argmatch_invalid" :
4830(4): cmp $0xffffffff,%rdx
4834(2): push %r12
4836(5): mov $0x5,%edx
483b(1): push %rbp
483c(3): mov %rsi,%r12
483f(1): push %rbx
4840(3): mov %rdi,%rbp
4843(2): jz 0x4d(%rip)
4845(7): lea 0x1cc08(%rip),%rsi
484c(2): xor %edi,%edi
484e(5): call 0xffffdcc2(%rip)
4853(3): mov %rax,%rbx
4856(3): mov %rbp,%rsi
4859(5): mov $0x1,%edi
485e(5): call 0x7ae2(%rip)
4863(3): mov %r12,%rdx
4866(3): mov %rax,%rbp
4869(5): mov $0x8,%esi
486e(2): xor %edi,%edi
4870(5): call 0x7700(%rip)
4875(3): mov %rbp,%r8
4878(3): mov %rbx,%rdx
487b(3): mov %rax,%rcx
487e(1): pop %rbx
487f(1): pop %rbp
4880(2): pop %r12
4882(2): xor %esi,%esi
4884(2): xor %edi,%edi
4886(2): xor %eax,%eax
4888(5): jmp 0xffffe018(%rip)
488d(3): nop (%rax)
4890(7): lea 0x1cba2(%rip),%rsi
4897(2): xor %edi,%edi
4899(5): call 0xffffdc77(%rip)
489e(3): mov %rax,%rbx
48a1(2): jmp 0xffffffb5(%rip)

"argmatch_valid" :
48b0(2): push %r15
48b2(2): push %r14
48b4(3): mov %rdi,%r14
48b7(2): push %r13
48b9(2): push %r12
48bb(2): xor %edi,%edi
48bd(1): push %rbp
48be(1): push %rbx
48bf(3): mov %rsi,%rbp
48c2(7): lea 0x1cba8(%rip),%rsi
48c9(3): mov %rdx,%r12
48cc(5): mov $0x5,%edx
48d1(4): sub $0x8,%rsp
48d5(7): mov 0x223804(%rip),%rbx
48dc(5): call 0xffffdc34(%rip)
48e1(3): mov %rax,%rdi
48e4(3): mov %rbx,%rsi
48e7(5): call 0xffffddb9(%rip)
48ec(3): mov (%r14),%r15
48ef(3): test %r15,%r15
48f2(6): jz 0x96(%rip)
48f8(3): xor %r13d,%r13d
48fb(2): xor %ebx,%ebx
48fd(2): jmp 0x3b(%rip)
48ff(1): nop 
4900(3): mov %r15,%rdi
4903(4): add $0x1,%rbx
4907(3): mov %rbp,%r13
490a(5): call 0x7a56(%rip)
490f(7): mov 0x2237ca(%rip),%rdi
4916(7): lea 0x1cb69(%rip),%rdx
491d(3): mov %rax,%rcx
4920(5): mov $0x1,%esi
4925(2): xor %eax,%eax
4927(3): add %r12,%rbp
492a(5): call 0xffffe046(%rip)
492f(4): mov 0x0(%r14,%rbx,8),%r15
4933(3): test %r15,%r15
4936(2): jz 0x52(%rip)
4938(3): test %rbx,%rbx
493b(2): jz 0xffffffc5(%rip)
493d(3): mov %r12,%rdx
4940(3): mov %rbp,%rsi
4943(3): mov %r13,%rdi
4946(5): call 0xffffdd3a(%rip)
494b(2): test %eax,%eax
494d(2): jnz 0xffffffb3(%rip)
494f(3): mov %r15,%rdi
4952(4): add $0x1,%rbx
4956(3): add %r12,%rbp
4959(5): call 0x7a07(%rip)
495e(7): mov 0x22377b(%rip),%rdi
4965(7): lea 0x1cb22(%rip),%rdx
496c(3): mov %rax,%rcx
496f(5): mov $0x1,%esi
4974(2): xor %eax,%eax
4976(5): call 0xffffdffa(%rip)
497b(4): mov 0x0(%r14,%rbx,8),%r15
497f(3): test %r15,%r15
4982(2): jnz 0xffffffb6(%rip)
4984(4): nop 0x0(%rax)
4988(7): mov 0x223751(%rip),%rdi
498f(4): mov 0x28(%rdi),%rax
4993(4): cmp 0x30(%rdi),%rax
4997(2): jnb 0x21(%rip)
4999(4): lea 0x1(%rax),%rdx
499d(4): mov %rdx,0x28(%rdi)
49a1(3): mov $0xa,(%rax)
49a4(4): add $0x8,%rsp
49a8(1): pop %rbx
49a9(1): pop %rbp
49aa(2): pop %r12
49ac(2): pop %r13
49ae(2): pop %r14
49b0(2): pop %r15
49b2(1): ret near (%rsp)
49b3(5): nop 0x0(%rax,%rax,1)
49b8(4): add $0x8,%rsp
49bc(5): mov $0xa,%esi
49c1(1): pop %rbx
49c2(1): pop %rbp
49c3(2): pop %r12
49c5(2): pop %r13
49c7(2): pop %r14
49c9(2): pop %r15
49cb(5): jmp 0xffffdbf5(%rip)

"__xargmatch_internal" :
49d0(2): push %r15
49d2(2): push %r14
49d4(3): mov %rdi,%r14
49d7(2): push %r13
49d9(2): push %r12
49db(3): mov %rsi,%r12
49de(1): push %rbp
49df(1): push %rbx
49e0(3): mov %rcx,%rbp
49e3(3): mov %rdx,%rbx
49e6(3): mov %r8,%rcx
49e9(3): mov %rbp,%rdx
49ec(4): sub $0x8,%rsp
49f0(3): mov %rbx,%rsi
49f3(3): mov %r12,%rdi
49f6(3): mov %r8,%r15
49f9(3): mov %r9,%r13
49fc(5): call 0xfffffd14(%rip)
4a01(3): test %rax,%rax
4a04(2): js 0x11(%rip)
4a06(4): add $0x8,%rsp
4a0a(1): pop %rbx
4a0b(1): pop %rbp
4a0c(2): pop %r12
4a0e(2): pop %r13
4a10(2): pop %r14
4a12(2): pop %r15
4a14(1): ret near (%rsp)
4a15(3): mov %rax,%rdx
4a18(3): mov %r12,%rsi
4a1b(3): mov %r14,%rdi
4a1e(5): call 0xfffffe12(%rip)
4a23(3): mov %r15,%rdx
4a26(3): mov %rbp,%rsi
4a29(3): mov %rbx,%rdi
4a2c(5): call 0xfffffe84(%rip)
4a31(3): call %r13
4a34(7): mov $0xffffffff,%rax
4a3b(2): jmp 0xffffffcb(%rip)

"argmatch_to_argument" :
4a40(2): push %r14
4a42(2): push %r13
4a44(2): push %r12
4a46(1): push %rbp
4a47(1): push %rbx
4a48(3): mov (%rsi),%r14
4a4b(3): test %r14,%r14
4a4e(2): jz 0x33(%rip)
4a50(3): mov %rcx,%r12
4a53(3): mov %rdi,%r13
4a56(3): mov %rdx,%rbp
4a59(4): lea 0x8(%rsi),%rbx
4a5d(2): jmp 0x12(%rip)
4a5f(1): nop 
4a60(3): mov (%rbx),%r14
4a63(3): add %r12,%rbp
4a66(4): add $0x8,%rbx
4a6a(3): test %r14,%r14
4a6d(2): jz 0x14(%rip)
4a6f(3): mov %r12,%rdx
4a72(3): mov %rbp,%rsi
4a75(3): mov %r13,%rdi
4a78(5): call 0xffffdc08(%rip)
4a7d(2): test %eax,%eax
4a7f(2): jnz 0xffffffe1(%rip)
4a81(1): pop %rbx
4a82(3): mov %r14,%rax
4a85(1): pop %rbp
4a86(2): pop %r12
4a88(2): pop %r13
4a8a(2): pop %r14
4a8c(1): ret near (%rsp)

"argv_iter_init_argv" :
4a90(1): push %rbx
4a91(3): mov %rdi,%rbx
4a94(5): mov $0x30,%edi
4a99(5): call 0xffffdce7(%rip)
4a9e(3): test %rax,%rax
4aa1(2): jz 0x11(%rip)
4aa3(7): mov $0x0,(%rax)
4aaa(4): mov %rbx,0x20(%rax)
4aae(4): mov %rbx,0x28(%rax)
4ab2(1): pop %rbx
4ab3(1): ret near (%rsp)

"argv_iter_init_stream" :
4ac0(1): push %rbx
4ac1(3): mov %rdi,%rbx
4ac4(5): mov $0x30,%edi
4ac9(5): call 0xffffdcb7(%rip)
4ace(3): test %rax,%rax
4ad1(2): jz 0x25(%rip)
4ad3(3): mov %rbx,(%rax)
4ad6(8): mov $0x0,0x10(%rax)
4ade(8): mov $0x0,0x18(%rax)
4ae6(8): mov $0x0,0x8(%rax)
4aee(8): mov $0x0,0x20(%rax)
4af6(1): pop %rbx
4af7(1): ret near (%rsp)

"argv_iter" :
4b00(3): mov (%rdi),%rcx
4b03(3): test %rcx,%rcx
4b06(2): jz 0x3a(%rip)
4b08(1): push %rbp
4b09(1): push %rbx
4b0a(3): mov %rsi,%rbp
4b0d(3): mov %rdi,%rbx
4b10(4): lea 0x18(%rdi),%rsi
4b14(4): lea 0x10(%rdi),%rdi
4b18(4): sub $0x8,%rsp
4b1c(2): xor %edx,%edx
4b1e(5): call 0xffffdea2(%rip)
4b23(3): test %rax,%rax
4b26(2): js 0x4a(%rip)
4b28(7): mov $0x1,0x0(%rbp)
4b2f(5): add $0x1,0x8(%rbx)
4b34(4): mov 0x10(%rbx),%rax
4b38(4): add $0x8,%rsp
4b3c(1): pop %rbx
4b3d(1): pop %rbp
4b3e(1): ret near (%rsp)
4b3f(1): nop 
4b40(4): mov 0x28(%rdi),%rdx
4b44(3): mov (%rdx),%rax
4b47(3): test %rax,%rax
4b4a(2): jz 0x16(%rip)
4b4c(4): add $0x8,%rdx
4b50(6): mov $0x1,(%rsi)
4b56(4): mov %rdx,0x28(%rdi)
4b5a(1): ret near (%rsp)
4b5b(5): nop 0x0(%rax,%rax,1)
4b60(6): mov $0x2,(%rsi)
4b66(1): ret near (%rsp)
4b67(9): nop 0x0(%rax,%rax,1)
4b70(3): mov (%rbx),%rdi
4b73(5): call 0xffffdb8d(%rip)
4b78(3): cmp $0x1,%eax
4b7b(2): sbb %eax,%eax
4b7d(3): and $0x2,%eax
4b80(3): add $0x2,%eax
4b83(3): mov %eax,0x0(%rbp)
4b86(2): xor %eax,%eax
4b88(2): jmp 0xffffffb0(%rip)

"argv_iter_n_args" :
4b90(4): cmp $0x0,(%rdi)
4b94(2): jz 0xc(%rip)
4b96(4): mov 0x8(%rdi),%rax
4b9a(1): ret near (%rsp)
4b9b(5): nop 0x0(%rax,%rax,1)
4ba0(4): mov 0x28(%rdi),%rax
4ba4(4): sub 0x20(%rdi),%rax
4ba8(4): sar $0x3,%rax
4bac(1): ret near (%rsp)

"argv_iter_free" :
4bb0(1): push %rbx
4bb1(4): cmp $0x0,(%rdi)
4bb5(3): mov %rdi,%rbx
4bb8(2): jz 0xb(%rip)
4bba(4): mov 0x10(%rdi),%rdi
4bbe(5): call 0xffffde52(%rip)
4bc3(3): mov %rbx,%rdi
4bc6(1): pop %rbx
4bc7(5): jmp 0xffffde49(%rip)

"close_stdout_set_file_name" :
4bd0(7): mov %rdi,0x2235d1(%rip)
4bd7(1): ret near (%rsp)

"close_stdout_set_ignore_EPIPE" :
4be0(7): mov %dil,0x2235b9(%rip)
4be7(1): ret near (%rsp)

"close_stdout" :
4bf0(1): push %rbp
4bf1(1): push %rbx
4bf2(4): sub $0x8,%rsp
4bf6(7): mov 0x2234ab(%rip),%rdi
4bfd(5): call 0x1a723(%rip)
4c02(2): test %eax,%eax
4c04(2): jz 0x18(%rip)
4c06(5): call 0xffffd80a(%rip)
4c0b(7): cmp $0x0,0x22358e(%rip)
4c12(3): mov %rax,%rbx
4c15(2): jz 0x1e(%rip)
4c17(3): cmp $0x20,(%rax)
4c1a(2): jnz 0x19(%rip)
4c1c(7): mov 0x2234bd(%rip),%rdi
4c23(5): call 0x1a6fd(%rip)
4c28(2): test %eax,%eax
4c2a(2): jnz 0x48(%rip)
4c2c(4): add $0x8,%rsp
4c30(1): pop %rbx
4c31(1): pop %rbp
4c32(1): ret near (%rsp)
4c33(7): lea 0x1c859(%rip),%rsi
4c3a(2): xor %edi,%edi
4c3c(5): mov $0x5,%edx
4c41(5): call 0xffffd8cf(%rip)
4c46(7): mov 0x22355b(%rip),%rdi
4c4d(3): mov %rax,%rbp
4c50(3): test %rdi,%rdi
4c53(2): jz 0x2a(%rip)
4c55(5): call 0x750b(%rip)
4c5a(2): mov (%rbx),%esi
4c5c(7): lea 0x1c83c(%rip),%rdx
4c63(3): mov %rax,%rcx
4c66(3): mov %rbp,%r8
4c69(2): xor %edi,%edi
4c6b(2): xor %eax,%eax
4c6d(5): call 0xffffdc33(%rip)
4c72(6): mov 0x2233b0(%rip),%edi
4c78(5): call 0xffffd7c8(%rip)
4c7d(2): mov (%rbx),%esi
4c7f(7): lea 0x1c80a(%rip),%rdx
4c86(3): mov %rax,%rcx
4c89(2): xor %edi,%edi
4c8b(2): xor %eax,%eax
4c8d(5): call 0xffffdc13(%rip)
4c92(2): jmp 0xffffffe0(%rip)

"di_ent_hash" :
4ca0(3): mov (%rdi),%rax
4ca3(2): xor %edx,%edx
4ca5(3): div %rsi,%rax
4ca8(3): mov %rdx,%rax
4cab(1): ret near (%rsp)

"di_ent_compare" :
4cb0(3): mov (%rsi),%rax
4cb3(3): cmp %rax,(%rdi)
4cb6(3): setz %al
4cb9(1): ret near (%rsp)

"di_ino_hash" :
4cc0(3): mov %rdi,%rax
4cc3(2): xor %edx,%edx
4cc5(3): div %rsi,%rax
4cc8(3): mov %rdx,%rax
4ccb(1): ret near (%rsp)

"di_ent_free" :
4cd0(1): push %rbx
4cd1(3): mov %rdi,%rbx
4cd4(4): mov 0x8(%rdi),%rdi
4cd8(5): call 0x3ad8(%rip)
4cdd(3): mov %rbx,%rdi
4ce0(1): pop %rbx
4ce1(5): jmp 0xffffdd2f(%rip)

"map_device.isra.0" :
4cf0(2): push %r12
4cf2(1): push %rbp
4cf3(3): mov %rdi,%r12
4cf6(1): push %rbx
4cf7(3): mov %rsi,%rbp
4cfa(4): sub $0x10,%rsp
4cfe(3): mov (%rsi),%rbx
4d01(3): test %rbx,%rbx
4d04(2): jz 0x44(%rip)
4d06(3): cmp %rdx,(%rbx)
4d09(2): jz 0x2f(%rip)
4d0b(3): mov %rdx,(%rbx)
4d0e(3): mov %rbx,%rsi
4d11(3): mov %r12,%rdi
4d14(5): call 0x404c(%rip)
4d19(3): test %rax,%rax
4d1c(2): jz 0x54(%rip)
4d1e(3): cmp %rax,%rbx
4d21(2): jz 0x57(%rip)
4d23(4): mov 0x8(%rax),%rax
4d27(4): mov %rax,0x8(%rbx)
4d2b(4): add $0x10,%rsp
4d2f(1): pop %rbx
4d30(1): pop %rbp
4d31(2): pop %r12
4d33(1): ret near (%rsp)
4d34(4): nop 0x0(%rax)
4d38(4): mov 0x8(%rbx),%rax
4d3c(4): add $0x10,%rsp
4d40(1): pop %rbx
4d41(1): pop %rbp
4d42(2): pop %r12
4d44(1): ret near (%rsp)
4d45(3): nop (%rax)
4d48(5): mov $0x10,%edi
4d4d(5): mov %rdx,0x8(%rsp)
4d52(5): call 0xffffda2e(%rip)
4d57(3): test %rax,%rax
4d5a(3): mov %rax,%rbx
4d5d(4): mov %rax,0x0(%rbp)
4d61(5): mov 0x8(%rsp),%rdx
4d66(2): jnz 0xffffffa5(%rip)
4d68(8): nop 0x0(%rax,%rax,1)
4d70(2): xor %eax,%eax
4d72(2): jmp 0xffffffb9(%rip)
4d74(4): nop 0x0(%rax)
4d78(7): lea 0xffffff41(%rip),%rdx
4d7f(8): mov $0x0,0x0(%rbp)
4d87(3): xor %r8d,%r8d
4d8a(2): xor %ecx,%ecx
4d8c(2): xor %esi,%esi
4d8e(5): mov $0x3fd,%edi
4d93(5): call 0x37cd(%rip)
4d98(4): mov %rax,0x8(%rbx)
4d9c(4): add $0x10,%rsp
4da0(1): pop %rbx
4da1(1): pop %rbp
4da2(2): pop %r12
4da4(1): ret near (%rsp)

"map_inode_number.isra.1" :
4db0(4): lea 0xffffffff(%rsi),%rdx
4db4(a): mov $0x9223372036854775805,%rax
4dbe(3): cmp %rax,%rdx
4dc1(2): jbe 0x1f(%rip)
4dc3(1): push %rbx
4dc4(3): mov %rdi,%rbx
4dc7(4): sub $0x10,%rsp
4dcb(3): mov (%rdi),%rdi
4dce(3): test %rdi,%rdi
4dd1(2): jz 0x17(%rip)
4dd3(4): add $0x10,%rsp
4dd7(1): pop %rbx
4dd8(5): jmp 0x4f78(%rip)
4ddd(3): nop (%rax)
4de0(3): mov %rsi,%rax
4de3(1): ret near (%rsp)
4de4(4): nop 0x0(%rax)
4de8(a): mov $0x9223372036854775807,%rdi
4df2(5): mov %rsi,0x8(%rsp)
4df7(5): call 0x4ec9(%rip)
4dfc(3): test %rax,%rax
4dff(3): mov %rax,%rdi
4e02(3): mov %rax,(%rbx)
4e05(5): mov 0x8(%rsp),%rsi
4e0a(2): jnz 0xffffffc9(%rip)
4e0c(4): add $0x10,%rsp
4e10(7): mov $0xffffffff,%rax
4e17(1): pop %rbx
4e18(1): ret near (%rsp)

"di_set_alloc" :
4e20(1): push %rbx
4e21(5): mov $0x18,%edi
4e26(5): call 0xffffd95a(%rip)
4e2b(3): test %rax,%rax
4e2e(3): mov %rax,%rbx
4e31(2): jz 0x3b(%rip)
4e33(7): lea 0xfffffe96(%rip),%r8
4e3a(7): lea 0xfffffe6f(%rip),%rcx
4e41(7): lea 0xfffffe58(%rip),%rdx
4e48(2): xor %esi,%esi
4e4a(5): mov $0xb,%edi
4e4f(5): call 0x3711(%rip)
4e54(3): test %rax,%rax
4e57(3): mov %rax,(%rbx)
4e5a(2): jz 0x1e(%rip)
4e5c(8): mov $0x0,0x8(%rbx)
4e64(8): mov $0x0,0x10(%rbx)
4e6c(3): mov %rbx,%rax
4e6f(1): pop %rbx
4e70(1): ret near (%rsp)
4e71(7): nop 0x0(%rax)
4e78(3): mov %rbx,%rdi
4e7b(2): xor %ebx,%ebx
4e7d(5): call 0xffffdb93(%rip)
4e82(2): jmp 0xffffffea(%rip)

"di_set_free" :
4e90(1): push %rbx
4e91(3): mov %rdi,%rbx
4e94(3): mov (%rdi),%rdi
4e97(5): call 0x3919(%rip)
4e9c(4): mov 0x8(%rbx),%rdi
4ea0(5): call 0xffffdb70(%rip)
4ea5(4): mov 0x10(%rbx),%rdi
4ea9(5): call 0xffffdb67(%rip)
4eae(3): mov %rbx,%rdi
4eb1(1): pop %rbx
4eb2(5): jmp 0xffffdb5e(%rip)

"di_set_insert" :
4ec0(2): push %r12
4ec2(3): mov %rsi,%rax
4ec5(1): push %rbp
4ec6(4): lea 0x10(%rdi),%rsi
4eca(1): push %rbx
4ecb(3): mov %rdi,%rbx
4ece(3): mov (%rdi),%rdi
4ed1(3): mov %rdx,%r12
4ed4(3): mov %rax,%rdx
4ed7(5): call 0xfffffe19(%rip)
4edc(3): test %rax,%rax
4edf(2): jz 0x31(%rip)
4ee1(4): lea 0x8(%rbx),%rdi
4ee5(3): mov %r12,%rsi
4ee8(3): mov %rax,%rbp
4eeb(5): call 0xfffffec5(%rip)
4ef0(4): cmp $0xffffffff,%rax
4ef4(2): jz 0x1c(%rip)
4ef6(1): pop %rbx
4ef7(3): mov %rbp,%rdi
4efa(2): xor %edx,%edx
4efc(3): mov %rax,%rsi
4eff(1): pop %rbp
4f00(2): pop %r12
4f02(5): jmp 0x3bce(%rip)
4f07(9): nop 0x0(%rax,%rax,1)
4f10(1): pop %rbx
4f11(5): mov $0xffffffff,%eax
4f16(1): pop %rbp
4f17(2): pop %r12
4f19(1): ret near (%rsp)

"di_set_lookup" :
4f20(2): push %r12
4f22(3): mov %rsi,%rax
4f25(1): push %rbp
4f26(4): lea 0x10(%rdi),%rsi
4f2a(1): push %rbx
4f2b(3): mov %rdi,%rbx
4f2e(3): mov (%rdi),%rdi
4f31(3): mov %rdx,%r12
4f34(3): mov %rax,%rdx
4f37(5): call 0xfffffdb9(%rip)
4f3c(3): test %rax,%rax
4f3f(2): jz 0x31(%rip)
4f41(4): lea 0x8(%rbx),%rdi
4f45(3): mov %r12,%rsi
4f48(3): mov %rax,%rbp
4f4b(5): call 0xfffffe65(%rip)
4f50(4): cmp $0xffffffff,%rax
4f54(2): jz 0x1c(%rip)
4f56(3): mov %rax,%rsi
4f59(3): mov %rbp,%rdi
4f5c(5): call 0x3394(%rip)
4f61(3): test %rax,%rax
4f64(3): setnz %al
4f67(3): movzx %al,%eax
4f6a(1): pop %rbx
4f6b(1): pop %rbp
4f6c(2): pop %r12
4f6e(1): ret near (%rsp)
4f6f(1): nop 
4f70(5): mov $0xffffffff,%eax
4f75(2): jmp 0xfffffff5(%rip)

"string_compare_ci" :
4fa0(4): sub $0x8,%rsp
4fa4(5): call 0x4f9c(%rip)
4fa9(2): test %eax,%eax
4fab(3): setz %al
4fae(4): add $0x8,%rsp
4fb2(1): ret near (%rsp)

"string_compare" :
4fc0(4): sub $0x8,%rsp
4fc4(5): call 0xffffd70c(%rip)
4fc9(2): test %eax,%eax
4fcb(3): setz %al
4fce(4): add $0x8,%rsp
4fd2(1): ret near (%rsp)

"fnmatch_no_wildcards" :
4ff0(2): mov %edx,%eax
4ff2(3): and $0x10,%eax
4ff5(3): and $0x8,%edx
4ff8(2): jnz 0x10(%rip)
4ffa(2): test %eax,%eax
4ffc(2): jz 0x54(%rip)
4ffe(5): jmp 0x4f42(%rip)
5003(5): nop 0x0(%rax,%rax,1)
5008(2): push %r12
500a(1): push %rbp
500b(3): mov %rdi,%rbp
500e(1): push %rbx
500f(3): mov %rsi,%rbx
5012(4): sub $0x10,%rsp
5016(2): test %eax,%eax
5018(2): jnz 0x40(%rip)
501a(5): call 0xffffd516(%rip)
501f(3): mov %rbx,%rsi
5022(3): mov %rax,%rdx
5025(3): mov %rbp,%rdi
5028(3): mov %rax,%r12
502b(5): call 0xffffd3f5(%rip)
5030(2): test %eax,%eax
5032(2): jnz 0xd(%rip)
5034(5): movsx 0x0(%rbx,%r12,1),%edx
5039(3): cmp $0x2f,%edx
503c(3): cmovne %edx,%eax
503f(4): add $0x10,%rsp
5043(1): pop %rbx
5044(1): pop %rbp
5045(2): pop %r12
5047(1): ret near (%rsp)
5048(8): nop 0x0(%rax,%rax,1)
5050(5): jmp 0xffffd680(%rip)
5055(3): nop (%rax)
5058(3): mov %rsi,%rdi
505b(5): call 0x7bb5(%rip)
5060(3): mov %rax,%r12
5063(3): mov %rax,%rdi
5066(2): jmp 0x23(%rip)
5068(8): nop 0x0(%rax,%rax,1)
5070(3): mov $0x0,(%rax)
5073(3): mov %r12,%rsi
5076(3): mov %rbp,%rdi
5079(5): call 0x4ec7(%rip)
507e(2): test %eax,%eax
5080(2): jle 0x26(%rip)
5082(4): lea 0x1(%rbx),%rdi
5086(3): mov $0x2f,(%rbx)
5089(5): mov $0x2f,%esi
508e(5): call 0xffffd512(%rip)
5093(3): test %rax,%rax
5096(3): mov %rax,%rbx
5099(2): jnz 0xffffffd7(%rip)
509b(3): mov %r12,%rsi
509e(3): mov %rbp,%rdi
50a1(5): call 0x4e9f(%rip)
50a6(3): mov %r12,%rdi
50a9(4): mov %eax,0xc(%rsp)
50ad(5): call 0xffffd963(%rip)
50b2(4): mov 0xc(%rsp),%eax
50b6(4): add $0x10,%rsp
50ba(1): pop %rbx
50bb(1): pop %rbp
50bc(2): pop %r12
50be(1): ret near (%rsp)

"string_hasher_ci" :
50c0(2): push %r15
50c2(2): push %r14
50c4(3): xor %r14d,%r14d
50c7(2): push %r13
50c9(2): push %r12
50cb(7): lea 0x1c96e(%rip),%r12
50d2(1): push %rbp
50d3(1): push %rbx
50d4(3): mov %rsi,%rbx
50d7(4): sub $0x68,%rsp
50db(5): lea 0x10(%rsp),%rbp
50e0(5): mov %rdi,0x20(%rsp)
50e5(5): mov $0x0,0x10(%rsp)
50ea(9): mov $0x28,%rax
50f3(5): mov %rax,0x58(%rsp)
50f8(2): xor %eax,%eax
50fa(4): lea 0x4(%rbp),%rax
50fe(9): mov $0x0,0x14(%rsp)
5107(5): mov $0x0,0x1c(%rsp)
510c(5): mov %rax,0x8(%rsp)
5111(2): jmp 0x35(%rip)
5113(5): nop 0x0(%rax,%rax,1)
5118(3): mov %r13d,%edi
511b(5): call 0xffffd7c5(%rip)
5120(3): mov %r14,%rdx
5123(2): cwde 
5125(5): add 0x28(%rsp),%r15
512a(4): shl/sal $0x5,%rdx
512e(5): mov $0x0,0x1c(%rsp)
5133(3): sub %r14,%rdx
5136(3): add %rdx,%rax
5139(2): xor %edx,%edx
513b(3): div %rbx,%rax
513e(5): mov %r15,0x20(%rsp)
5143(3): mov %rdx,%r14
5146(5): cmp $0x0,0x10(%rsp)
514b(2): jnz 0x6c(%rip)
514d(5): mov 0x20(%rsp),%rcx
5152(3): movzx (%rcx),%edx
5155(2): mov %edx,%eax
5157(3): shr $0x5,%al
515a(3): and $0x7,%eax
515d(4): mov 0x0(%r12,%rax,4),%eax
5161(3): bt %edx,%eax
5164(2): jnb 0x3c(%rip)
5166(9): mov $0x1,0x28(%rsp)
516f(4): movsx (%rcx),%r13d
5173(5): mov $0x1,0x30(%rsp)
5178(5): mov $0x1,0x1c(%rsp)
517d(5): mov %r13d,0x34(%rsp)
5182(3): test %r13d,%r13d
5185(6): jz 0xcb(%rip)
518b(5): cmp $0x0,0x30(%rsp)
5190(5): mov 0x20(%rsp),%r15
5195(2): jnz 0xffffff83(%rip)
5197(4): movsx (%r15),%eax
519b(2): jmp 0xffffff85(%rip)
519d(3): nop (%rax)
51a0(5): mov 0x8(%rsp),%rdi
51a5(5): call 0xffffd7eb(%rip)
51aa(2): test %eax,%eax
51ac(6): jz 0x136(%rip)
51b2(5): mov $0x1,0x10(%rsp)
51b7(5): call 0xffffd369(%rip)
51bc(5): mov 0x20(%rsp),%r15
51c1(3): mov %rax,%rsi
51c4(3): mov %r15,%rdi
51c7(5): call 0x71b9(%rip)
51cc(4): lea 0x4(%rbp),%rcx
51d0(4): lea 0x24(%rbp),%rdi
51d4(3): mov %rax,%rdx
51d7(3): mov %r15,%rsi
51da(5): call 0xb006(%rip)
51df(4): cmp $0xffffffff,%rax
51e3(5): mov %rax,0x28(%rsp)
51e8(6): jz 0x98(%rip)
51ee(4): cmp $0xfffffffe,%rax
51f2(6): jz 0xae(%rip)
51f8(3): test %rax,%rax
51fb(6): jnz 0xdd(%rip)
5201(5): mov 0x20(%rsp),%rax
5206(9): mov $0x1,0x28(%rsp)
520f(3): cmp $0x0,(%rax)
5212(6): jnz 0x10e(%rip)
5218(5): mov 0x34(%rsp),%r13d
521d(3): test %r13d,%r13d
5220(6): jnz 0xe1(%rip)
5226(4): lea 0x4(%rbp),%rdi
522a(5): mov $0x1,0x30(%rsp)
522f(5): call 0xffffd761(%rip)
5234(2): test %eax,%eax
5236(6): jz 0x92(%rip)
523c(3): test %r13d,%r13d
523f(5): mov $0x0,0x10(%rsp)
5244(5): mov $0x1,0x1c(%rsp)
5249(6): jnz 0xffffff42(%rip)
524f(1): nop 
5250(5): mov 0x58(%rsp),%rsi
5255(9): xor $0x28,%rsi
525e(3): mov %r14,%rax
5261(6): jnz 0xde(%rip)
5267(4): add $0x68,%rsp
526b(1): pop %rbx
526c(1): pop %rbp
526d(2): pop %r12
526f(2): pop %r13
5271(2): pop %r14
5273(2): pop %r15
5275(1): ret near (%rsp)
5276(a): nop 0x0(%rax,%rax,1)
5280(9): mov $0x1,0x28(%rsp)
5289(5): mov $0x0,0x30(%rsp)
528e(5): mov 0x34(%rsp),%r13d
5293(5): mov $0x1,0x1c(%rsp)
5298(5): jmp 0xfffffef3(%rip)
529d(3): nop (%rax)
52a0(5): mov 0x20(%rsp),%rdi
52a5(5): call 0xffffd28b(%rip)
52aa(5): mov $0x0,0x30(%rsp)
52af(5): mov %rax,0x28(%rsp)
52b4(5): mov 0x34(%rsp),%r13d
52b9(5): mov $0x1,0x1c(%rsp)
52be(5): jmp 0xfffffecd(%rip)
52c3(5): nop 0x0(%rax,%rax,1)
52c8(5): mov $0x1,0x1c(%rsp)
52cd(5): jmp 0xfffffeb5(%rip)
52d2(6): nop 0x0(%rax,%rax,1)
52d8(5): mov 0x34(%rsp),%r13d
52dd(5): jmp 0xffffff49(%rip)
52e2(7): lea 0x1c427(%rip),%rcx
52e9(7): lea 0x1c1b8(%rip),%rsi
52f0(7): lea 0x1c1d1(%rip),%rdi
52f7(5): mov $0x96,%edx
52fc(5): call 0xffffd304(%rip)
5301(7): lea 0x1c408(%rip),%rcx
5308(7): lea 0x1c199(%rip),%rsi
530f(7): lea 0x1c1e0(%rip),%rdi
5316(5): mov $0xb3,%edx
531b(5): call 0xffffd2e5(%rip)
5320(7): lea 0x1c3e9(%rip),%rcx
5327(7): lea 0x1c17a(%rip),%rsi
532e(7): lea 0x1c1aa(%rip),%rdi
5335(5): mov $0xb2,%edx
533a(5): call 0xffffd2c6(%rip)
533f(5): call 0xffffd221(%rip)

"exclude_add_pattern_buffer" :
5350(1): push %rbp
5351(1): push %rbx
5352(3): mov %rdi,%rbx
5355(5): mov $0x10,%edi
535a(3): mov %rsi,%rbp
535d(4): sub $0x8,%rsp
5361(5): call 0x767f(%rip)
5366(4): mov 0x8(%rbx),%rdx
536a(4): mov %rbp,0x8(%rax)
536e(4): mov %rax,0x8(%rbx)
5372(3): mov %rdx,(%rax)
5375(4): add $0x8,%rsp
5379(1): pop %rbx
537a(1): pop %rbp
537b(1): ret near (%rsp)

"fnmatch_pattern_has_wildcards" :
5380(3): movzx (%rdi),%eax
5383(3): mov %esi,%r9d
5386(3): mov %esi,%r8d
5389(7): lea 0x1c180(%rip),%rdx
5390(4): and $0x20,%r9d
5394(7): and $0x8000000,%r8d
539b(3): and $0x2,%esi
539e(2): cmp $0x7d,%al
53a0(4): lea 0x1(%rdi),%rcx
53a4(2): jnbe 0x24(%rip)
53a6(4): movsxd 0x0(%rdx,%rax,4),%rax
53aa(3): add %rdx,%rax
53ad(2): jmp %rax
53af(1): nop 
53b0(2): xor %eax,%eax
53b2(1): ret near (%rsp)
53b3(5): nop 0x0(%rax,%rax,1)
53b8(3): test %r8d,%r8d
53bb(2): jz 0xd(%rip)
53bd(5): mov $0x1,%eax
53c2(1): ret near (%rsp)
53c3(5): nop 0x0(%rax,%rax,1)
53c8(4): movzx 0x1(%rdi),%eax
53cc(3): mov %rcx,%rdi
53cf(2): jmp 0xffffffcf(%rip)
53d1(7): nop 0x0(%rax)
53d8(3): test %r8d,%r8d
53db(2): jnz 0xffffffed(%rip)
53dd(2): test %esi,%esi
53df(4): lea 0x2(%rdi),%rax
53e3(2): jnz 0xa(%rip)
53e5(4): cmp $0x0,0x1(%rdi)
53e9(4): cmovne %rax,%rcx
53ed(3): movzx (%rcx),%eax
53f0(3): mov %rcx,%rdi
53f3(2): jmp 0xffffffab(%rip)
53f5(3): nop (%rax)
53f8(3): test %r9d,%r9d
53fb(2): jz 0xffffffcd(%rip)
53fd(4): movzx 0x1(%rdi),%eax
5401(2): cmp $0x28,%al
5403(2): jz 0xffffffba(%rip)
5405(3): mov %rcx,%rdi
5408(2): jmp 0xffffff96(%rip)

"new_exclude" :
5410(5): mov $0x10,%edi
5415(5): jmp 0x777b(%rip)

"free_exclude" :
5420(2): push %r14
5422(2): push %r13
5424(3): mov %rdi,%r14
5427(2): push %r12
5429(1): push %rbp
542a(1): push %rbx
542b(3): mov (%rdi),%rbx
542e(3): test %rbx,%rbx
5431(2): jz 0x79(%rip)
5433(5): nop 0x0(%rax,%rax,1)
5438(3): mov 0x8(%rbx),%eax
543b(3): mov (%rbx),%r13
543e(2): test %eax,%eax
5440(6): jz 0xa8(%rip)
5446(3): cmp $0x1,%eax
5449(2): jnz 0x51(%rip)
544b(5): cmp $0x0,0x20(%rbx)
5450(4): mov 0x10(%rbx),%rdi
5454(2): jz 0x41(%rip)
5456(3): xor %r12d,%r12d
5459(2): xor %ebp,%ebp
545b(2): jmp 0x13(%rip)
545d(3): nop (%rax)
5460(4): add $0x1,%rbp
5464(4): add $0x48,%r12
5468(4): cmp 0x20(%rbx),%rbp
546c(2): jnb 0x29(%rip)
546e(4): lea 0x0(%rdi,%r12,1),%rax
5472(6): test $0x8000000,(%rax)
5478(2): jz 0xffffffe8(%rip)
547a(4): lea 0x8(%rax),%rdi
547e(4): add $0x1,%rbp
5482(4): add $0x48,%r12
5486(5): call 0x1975a(%rip)
548b(4): cmp 0x20(%rbx),%rbp
548f(4): mov 0x10(%rbx),%rdi
5493(2): jb 0xffffffdb(%rip)
5495(5): call 0xffffd57b(%rip)
549a(3): mov %rbx,%rdi
549d(3): mov %r13,%rbx
54a0(5): call 0xffffd570(%rip)
54a5(3): test %r13,%r13
54a8(2): jnz 0xffffff90(%rip)
54aa(4): mov 0x8(%r14),%rbx
54ae(3): test %rbx,%rbx
54b1(2): jz 0x23(%rip)
54b3(5): nop 0x0(%rax,%rax,1)
54b8(4): mov 0x8(%rbx),%rdi
54bc(3): mov (%rbx),%rbp
54bf(5): call 0xffffd551(%rip)
54c4(3): mov %rbx,%rdi
54c7(3): mov %rbp,%rbx
54ca(5): call 0xffffd546(%rip)
54cf(3): test %rbp,%rbp
54d2(2): jnz 0xffffffe6(%rip)
54d4(1): pop %rbx
54d5(3): mov %r14,%rdi
54d8(1): pop %rbp
54d9(2): pop %r12
54db(2): pop %r13
54dd(2): pop %r14
54df(5): jmp 0xffffd531(%rip)
54e4(4): nop 0x0(%rax)
54e8(4): mov 0x10(%rbx),%rdi
54ec(5): call 0x32c4(%rip)
54f1(3): mov %rbx,%rdi
54f4(3): mov %r13,%rbx
54f7(5): call 0xffffd519(%rip)
54fc(3): test %r13,%r13
54ff(6): jnz 0xffffff39(%rip)
5505(2): jmp 0xffffffa5(%rip)

"exclude_fnmatch" :
5510(2): push %r14
5512(2): push %r13
5514(3): mov %rdi,%r14
5517(2): push %r12
5519(3): mov %edx,%r12d
551c(6): and $0x10000000,%edx
5522(1): push %rbp
5523(7): lea 0xfffffac6(%rip),%r13
552a(1): push %rbx
552b(3): mov %rsi,%rbx
552e(2): jz 0x9(%rip)
5530(7): mov 0x222aa1(%rip),%r13
5537(3): mov %r12d,%edx
553a(3): mov %rbx,%rsi
553d(3): mov %r14,%rdi
5540(3): call %r13
5543(2): test %eax,%eax
5545(3): setz %cl
5548(7): test $0x40000000,%r12d
554f(2): jnz 0x29(%rip)
5551(3): movzx (%rbx),%edx
5554(2): test %dl,%dl
5556(2): jz 0x22(%rip)
5558(2): test %eax,%eax
555a(2): jz 0x5d(%rip)
555c(4): nop 0x0(%rax)
5560(3): cmp $0x2f,%dl
5563(4): lea 0x1(%rbx),%rbp
5567(4): movzx 0x1(%rbx),%eax
556b(2): jz 0x2d(%rip)
556d(2): test %al,%al
556f(2): mov %eax,%edx
5571(3): mov %rbp,%rbx
5574(2): jnz 0xffffffec(%rip)
5576(2): xor %ecx,%ecx
5578(1): pop %rbx
5579(2): mov %ecx,%eax
557b(1): pop %rbp
557c(2): pop %r12
557e(2): pop %r13
5580(2): pop %r14
5582(1): ret near (%rsp)
5583(5): nop 0x0(%rax,%rax,1)
5588(4): movzx 0x1(%rbp),%eax
558c(3): mov %rbp,%rbx
558f(4): add $0x1,%rbp
5593(5): nop 0x0(%rax,%rax,1)
5598(2): cmp $0x2f,%al
559a(2): jz 0xffffffee(%rip)
559c(3): mov %r12d,%edx
559f(3): mov %rbp,%rsi
55a2(3): mov %r14,%rdi
55a5(3): call %r13
55a8(4): movzx 0x1(%rbx),%edx
55ac(2): test %dl,%dl
55ae(2): jz 0x22(%rip)
55b0(2): test %eax,%eax
55b2(3): mov %rbp,%rbx
55b5(2): jnz 0xffffffab(%rip)
55b7(5): mov $0x1,%ecx
55bc(1): pop %rbx
55bd(2): mov %ecx,%eax
55bf(1): pop %rbp
55c0(2): pop %r12
55c2(2): pop %r13
55c4(2): pop %r14
55c6(1): ret near (%rsp)
55c7(9): nop 0x0(%rax,%rax,1)
55d0(2): test %eax,%eax
55d2(3): setz %cl
55d5(2): jmp 0xffffffa3(%rip)

"excluded_file_name" :
55e0(2): push %r15
55e2(2): push %r14
55e4(2): xor %eax,%eax
55e6(2): push %r13
55e8(2): push %r12
55ea(1): push %rbp
55eb(1): push %rbx
55ec(4): sub $0x18,%rsp
55f0(3): mov (%rdi),%r14
55f3(3): test %r14,%r14
55f6(6): jz 0x95(%rip)
55fc(4): mov 0x8(%r14),%eax
5600(2): xor %ebp,%ebp
5602(5): mov %rsi,0x8(%rsp)
5607(2): test %eax,%eax
5609(6): jnz 0xe2(%rip)
560f(1): nop 
5610(3): test %rbp,%rbp
5613(6): jz 0x13d(%rip)
5619(4): mov 0xc(%r14),%r15d
561d(4): mov 0x10(%r14),%r12
5621(5): mov 0x8(%rsp),%rbx
5626(3): mov %r15d,%r13d
5629(4): and $0x8,%r13d
562d(3): mov %rbx,%rsi
5630(3): mov %rbp,%rdi
5633(5): call 0xffffce1d(%rip)
5638(3): mov %rbp,%rsi
563b(3): mov %r12,%rdi
563e(5): call 0x2cb2(%rip)
5643(3): test %rax,%rax
5646(2): jnz 0x2c(%rip)
5648(3): test %r13d,%r13d
564b(2): jz 0x55(%rip)
564d(5): mov $0x2f,%esi
5652(3): mov %rbp,%rdi
5655(5): call 0xffffcf7b(%rip)
565a(3): test %rax,%rax
565d(2): jz 0x43(%rip)
565f(3): mov $0x0,(%rax)
5662(3): mov %rbp,%rsi
5665(3): mov %r12,%rdi
5668(5): call 0x2c88(%rip)
566d(3): test %rax,%rax
5670(2): jz 0xffffffd8(%rip)
5672(2): xor %ebx,%ebx
5674(3): mov %rbp,%rdi
5677(5): call 0xffffd399(%rip)
567c(4): mov 0xc(%r14),%eax
5680(3): shr $0x1d,%eax
5683(3): xor $0x1,%eax
5686(3): and $0x1,%eax
5689(2): xor %ebx,%eax
568b(4): add $0x18,%rsp
568f(1): pop %rbx
5690(1): pop %rbp
5691(2): pop %r12
5693(2): pop %r13
5695(2): pop %r14
5697(2): pop %r15
5699(1): ret near (%rsp)
569a(6): nop 0x0(%rax,%rax,1)
56a0(7): test $0x40000000,%r15d
56a7(2): jnz 0x29(%rip)
56a9(5): mov $0x2f,%esi
56ae(3): mov %rbx,%rdi
56b1(5): call 0xffffceef(%rip)
56b6(3): test %rax,%rax
56b9(2): jz 0x17(%rip)
56bb(4): add $0x1,%rax
56bf(3): mov %rax,%rbx
56c2(6): jnz 0xffffff6b(%rip)
56c8(8): nop 0x0(%rax,%rax,1)
56d0(3): mov (%r14),%rax
56d3(3): test %rax,%rax
56d6(6): jz 0x95(%rip)
56dc(3): mov %rax,%r14
56df(4): mov 0x8(%r14),%eax
56e3(2): test %eax,%eax
56e5(6): jz 0xffffff2b(%rip)
56eb(4): mov 0x20(%r14),%r12
56ef(4): mov 0x10(%r14),%rbx
56f3(3): test %r12,%r12
56f6(2): jz 0xffffffda(%rip)
56f8(4): add $0x8,%rbx
56fc(3): xor %r13d,%r13d
56ff(2): jmp 0x2b(%rip)
5701(7): nop 0x0(%rax)
5708(5): mov 0x8(%rsp),%rsi
570d(3): mov (%rbx),%rdi
5710(5): call 0xfffffe00(%rip)
5715(2): test %al,%al
5717(6): jnz 0xffffff5b(%rip)
571d(4): add $0x1,%r13
5721(4): add $0x48,%rbx
5725(3): cmp %r13,%r12
5728(2): jz 0xffffffa8(%rip)
572a(3): mov 0xfffffff8(%rbx),%edx
572d(6): test $0x8000000,%edx
5733(2): jz 0xffffffd5(%rip)
5735(5): mov 0x8(%rsp),%rsi
573a(3): xor %r8d,%r8d
573d(2): xor %ecx,%ecx
573f(2): xor %edx,%edx
5741(3): mov %rbx,%rdi
5744(5): call 0x194ec(%rip)
5749(2): test %eax,%eax
574b(3): setz %al
574e(2): jmp 0xffffffc7(%rip)
5750(5): mov 0x8(%rsp),%rdi
5755(5): call 0xffffcddb(%rip)
575a(4): lea 0x1(%rax),%rdi
575e(5): call 0x7282(%rip)
5763(3): mov %rax,%rbp
5766(5): jmp 0xfffffeb3(%rip)
576b(5): mov $0x1,%ebx
5770(5): jmp 0xffffff04(%rip)

"add_exclude" :
5780(2): push %r15
5782(2): push %r14
5784(2): push %r13
5786(2): push %r12
5788(3): mov %rsi,%r13
578b(1): push %rbp
578c(1): push %rbx
578d(2): mov %edx,%ebp
578f(3): mov %rdi,%r12
5792(4): sub $0x8,%rsp
5796(6): and $0x18000000,%edx
579c(3): mov (%rdi),%rbx
579f(6): jz 0xe1(%rip)
57a5(2): mov %ebp,%esi
57a7(3): mov %r13,%rdi
57aa(5): call 0xfffffbd6(%rip)
57af(2): test %al,%al
57b1(6): jz 0xcf(%rip)
57b7(3): test %rbx,%rbx
57ba(2): jz 0xc(%rip)
57bc(4): cmp $0x1,0x8(%rbx)
57c0(6): jz 0x228(%rip)
57c6(5): mov $0x28,%edi
57cb(5): call 0x73c5(%rip)
57d0(3): mov %rax,%rbx
57d3(7): mov $0x1,0x8(%rax)
57da(3): mov %ebp,0xc(%rax)
57dd(4): mov (%r12),%rax
57e1(4): mov %rbx,(%r12)
57e5(3): mov %rax,(%rbx)
57e8(4): mov 0x20(%rbx),%rcx
57ec(4): cmp 0x18(%rbx),%rcx
57f0(4): mov 0x10(%rbx),%rdi
57f4(6): jz 0x20c(%rip)
57fa(4): lea 0x0(%rcx,%rcx,8),%rax
57fe(4): lea 0x1(%rcx),%r15
5802(6): test $0x8000000,%ebp
5808(4): lea 0x0(%rdi,%rax,8),%r14
580c(4): mov %r15,0x20(%rbx)
5810(3): mov %ebp,(%r14)
5813(6): jz 0x18d(%rip)
5819(3): mov %ebp,%r12d
581c(4): sar $0x3,%r12d
5820(4): and $0x2,%r12d
5824(4): or $0x9,%r12d
5828(3): and $0x8,%ebp
582b(6): jz 0x245(%rip)
5831(3): mov %r13,%rdi
5834(5): call 0xffffccfc(%rip)
5839(3): test %rax,%rax
583c(2): jz 0x2c(%rip)
583e(6): cmp $0x2f,0xffffffff(%r13,%rax,1)
5844(4): lea 0xffffffff(%rax),%rbp
5848(2): jz 0x1b(%rip)
584a(5): jmp 0x248(%rip)
584f(1): nop 
5850(6): cmp $0x2f,0xffffffff(%r13,%rbp,1)
5856(4): lea 0xffffffff(%rbp),%rax
585a(6): jnz 0x23e(%rip)
5860(3): mov %rax,%rbp
5863(3): test %rbp,%rbp
5866(2): jnz 0xffffffea(%rip)
5868(4): lea 0xffffffff(%r15),%rax
586c(4): mov %rax,0x20(%rbx)
5870(4): add $0x8,%rsp
5874(1): pop %rbx
5875(1): pop %rbp
5876(2): pop %r12
5878(2): pop %r13
587a(2): pop %r14
587c(2): pop %r15
587e(1): ret near (%rsp)
587f(1): nop 
5880(3): test %rbx,%rbx
5883(2): jz 0xd(%rip)
5885(3): mov 0x8(%rbx),%edx
5888(2): test %edx,%edx
588a(6): jz 0xae(%rip)
5890(5): mov $0x28,%edi
5895(5): call 0x72fb(%rip)
589a(7): lea 0xfffff6ff(%rip),%rdx
58a1(3): mov %rax,%rbx
58a4(7): mov $0x0,0x8(%rax)
58ab(3): mov %ebp,0xc(%rax)
58ae(7): lea 0xfffff70b(%rip),%rcx
58b5(2): mov %ebp,%eax
58b7(3): and $0x10,%eax
58ba(7): lea 0xfffff7ff(%rip),%rax
58c1(7): lea 0xfffff6c8(%rip),%r8
58c8(4): cmovne %rdx,%rcx
58cc(7): lea 0xfffff70d(%rip),%rdx
58d3(4): cmovne %rax,%rdx
58d7(2): xor %esi,%esi
58d9(2): xor %edi,%edi
58db(5): call 0x2c85(%rip)
58e0(4): mov %rax,0x10(%rbx)
58e4(4): mov (%r12),%rax
58e8(4): mov %rbx,(%r12)
58ec(3): mov %rax,(%rbx)
58ef(3): mov %r13,%rdi
58f2(6): and $0x10000002,%ebp
58f8(5): call 0x7318(%rip)
58fd(6): cmp $0x10000000,%ebp
5903(3): mov %rax,%r12
5906(2): jz 0x4a(%rip)
5908(4): mov 0x10(%rbx),%rdi
590c(3): mov %r12,%rsi
590f(5): call 0x3451(%rip)
5914(3): cmp %rax,%r12
5917(6): jz 0xffffff59(%rip)
591d(4): add $0x8,%rsp
5921(3): mov %r12,%rdi
5924(1): pop %rbx
5925(1): pop %rbp
5926(2): pop %r12
5928(2): pop %r13
592a(2): pop %r14
592c(2): pop %r15
592e(5): jmp 0xffffd0e2(%rip)
5933(5): nop 0x0(%rax,%rax,1)
5938(3): mov 0xc(%rbx),%eax
593b(2): xor %ebp,%eax
593d(5): test $0x60000018,%eax
5942(2): jz 0xffffffad(%rip)
5944(5): jmp 0xffffff4c(%rip)
5949(7): nop 0x0(%rax)
5950(3): mov %rax,%rdx
5953(3): mov %rax,%rcx
5956(2): jmp 0x18(%rip)
5958(8): nop 0x0(%rax,%rax,1)
5960(4): add $0x1,%rcx
5964(2): test %al,%al
5966(3): mov %al,0xffffffff(%rcx)
5969(2): jz 0xffffff9f(%rip)
596b(3): mov %rsi,%rdx
596e(3): movzx (%rdx),%eax
5971(4): lea 0x1(%rdx),%rsi
5975(2): cmp $0x5c,%al
5977(2): jnz 0xffffffe9(%rip)
5979(4): cmp $0x0,0x1(%rdx)
597d(2): jz 0x13(%rip)
597f(4): movzx 0x1(%rdx),%eax
5983(4): lea 0x2(%rdx),%rsi
5987(2): jmp 0xffffffd9(%rip)
5989(7): nop 0x0(%rax)
5990(4): add $0x1,%rcx
5994(4): mov $0x5c,0xffffffff(%rcx)
5998(2): jmp 0xffffffd3(%rip)
599a(6): nop 0x0(%rax,%rax,1)
59a0(6): and $0x4000000,%ebp
59a6(2): jz 0x28(%rip)
59a8(3): mov %r13,%rdi
59ab(5): call 0x7265(%rip)
59b0(5): mov $0x10,%edi
59b5(3): mov %rax,%r13
59b8(5): call 0x7028(%rip)
59bd(5): mov 0x8(%r12),%rdx
59c2(4): mov %r13,0x8(%rax)
59c6(5): mov %rax,0x8(%r12)
59cb(3): mov %rdx,(%rax)
59ce(4): mov %r13,0x8(%r14)
59d2(4): add $0x8,%rsp
59d6(1): pop %rbx
59d7(1): pop %rbp
59d8(2): pop %r12
59da(2): pop %r13
59dc(2): pop %r14
59de(2): pop %r15
59e0(1): ret near (%rsp)
59e1(7): nop 0x0(%rax)
59e8(3): mov 0xc(%rbx),%eax
59eb(2): xor %ebp,%eax
59ed(5): test $0x20000000,%eax
59f2(6): jz 0xfffffdf6(%rip)
59f8(5): jmp 0xfffffdce(%rip)
59fd(3): nop (%rax)
5a00(3): test %rdi,%rdi
5a03(2): jz 0x3d(%rip)
5a05(a): mov $0x85401592933840515,%rax
5a0f(3): cmp %rax,%rcx
5a12(2): jnbe 0x57(%rip)
5a14(3): mov %rcx,%rax
5a17(3): shr $0x1,%rax
5a1a(5): lea 0x1(%rcx,%rax,1),%rcx
5a1f(4): lea 0x0(%rcx,%rcx,8),%rsi
5a23(4): mov %rcx,0x18(%rbx)
5a27(4): shl/sal $0x3,%rsi
5a2b(5): call 0x7015(%rip)
5a30(4): mov 0x20(%rbx),%rcx
5a34(3): mov %rax,%rdi
5a37(4): mov %rax,0x10(%rbx)
5a3b(5): jmp 0xfffffdbf(%rip)
5a40(3): test %rcx,%rcx
5a43(5): mov $0x1,%eax
5a48(5): mov $0x48,%edx
5a4d(4): cmove %rax,%rcx
5a51(3): mov %rdx,%rax
5a54(2): xor %esi,%esi
5a56(3): mul %rax,%rcx,%rdx
5a59(6): jo 0x8b(%rip)
5a5f(3): test %rax,%rax
5a62(2): js 0x7(%rip)
5a64(3): test %rsi,%rsi
5a67(2): jz 0xffffffb8(%rip)
5a69(5): call 0x71c7(%rip)
5a6e(2): nop 
5a70(4): lea 0x8(%r14),%rdi
5a74(3): mov %r12d,%edx
5a77(3): mov %r13,%rsi
5a7a(5): call 0x18fc6(%rip)
5a7f(2): mov %eax,%ebp
5a81(2): test %ebp,%ebp
5a83(6): jz 0xfffffded(%rip)
5a89(4): mov 0x20(%rbx),%r15
5a8d(5): jmp 0xfffffddb(%rip)
5a92(3): mov %rax,%rbp
5a95(3): nop (%rax)
5a98(4): lea 0x7(%rbp),%rdi
5a9c(5): call 0x6f44(%rip)
5aa1(3): mov %rbp,%rdx
5aa4(3): mov %rax,%r15
5aa7(3): mov %r13,%rsi
5aaa(3): mov %rax,%rdi
5aad(3): add %r15,%rbp
5ab0(5): call 0xffffcc60(%rip)
5ab5(4): lea 0x8(%r14),%rdi
5ab9(5): mov $0x3f29,%eax
5abe(7): mov $0x2a2e2f28,0x0(%rbp)
5ac5(4): mov %ax,0x4(%rbp)
5ac9(4): mov $0x0,0x6(%rbp)
5acd(3): mov %r12d,%edx
5ad0(3): mov %r15,%rsi
5ad3(5): call 0x18f6d(%rip)
5ad8(3): mov %r15,%rdi
5adb(2): mov %eax,%ebp
5add(5): call 0xffffcf33(%rip)
5ae2(2): jmp 0xffffff9f(%rip)
5ae4(5): mov $0x1,%esi
5ae9(5): jmp 0xffffff76(%rip)

"add_exclude_fp" :
5af0(2): push %r15
5af2(2): push %r14
5af4(3): mov %rdx,%r15
5af7(2): push %r13
5af9(2): push %r12
5afb(3): mov %rsi,%r13
5afe(1): push %rbp
5aff(1): push %rbx
5b00(3): mov %r8d,%ebp
5b03(3): xor %r14d,%r14d
5b06(2): xor %ebx,%ebx
5b08(4): sub $0x48,%rsp
5b0c(9): mov $0x28,%rax
5b15(5): mov %rax,0x38(%rsp)
5b1a(2): xor %eax,%eax
5b1c(5): lea 0x30(%rsp),%rax
5b21(5): mov %rdi,0x8(%rsp)
5b26(4): mov %ecx,0x18(%rsp)
5b2a(5): mov %r8d,0x20(%rsp)
5b2f(5): mov %r9,0x10(%rsp)
5b34(9): mov $0x0,0x30(%rsp)
5b3d(4): mov %rax,(%rsp)
5b41(2): jmp 0xf(%rip)
5b43(5): nop 0x0(%rax,%rax,1)
5b48(4): mov %r12b,0x0(%rbx,%r14,1)
5b4c(4): add $0x1,%r14
5b50(4): mov 0x8(%r15),%rax
5b54(4): cmp 0x10(%r15),%rax
5b58(2): jnb 0x28(%rip)
5b5a(4): lea 0x1(%rax),%rdx
5b5e(4): mov %rdx,0x8(%r15)
5b62(4): movzx (%rax),%r12d
5b66(5): cmp %r14,0x30(%rsp)
5b6b(2): jnz 0xffffffdd(%rip)
5b6d(4): mov (%rsp),%rsi
5b71(3): mov %rbx,%rdi
5b74(5): call 0x6fcc(%rip)
5b79(3): mov %rax,%rbx
5b7c(2): jmp 0xffffffcc(%rip)
5b7e(2): nop 
5b80(3): mov %r15,%rdi
5b83(5): call 0xffffc84d(%rip)
5b88(3): cmp $0xff,%eax
5b8b(3): mov %eax,%r12d
5b8e(2): jnz 0xffffffd8(%rip)
5b90(3): mov (%r15),%r12d
5b93(5): call 0xffffc87d(%rip)
5b98(8): mov $0x0,0x1c(%rsp)
5ba0(5): mov %rax,0x28(%rsp)
5ba5(4): and $0x20,%r12d
5ba9(3): test %r12d,%r12d
5bac(2): jz 0x13(%rip)
5bae(3): mov (%rax),%r12d
5bb1(2): xor %eax,%eax
5bb3(3): test %r12d,%r12d
5bb6(3): setnz %al
5bb9(2): neg %eax
5bbb(4): mov %eax,0x1c(%rsp)
5bbf(4): lea 0x1(%r14),%rsi
5bc3(3): mov %rbx,%rdi
5bc6(5): call 0x6e7a(%rip)
5bcb(3): mov %rax,%r15
5bce(4): mov 0x20(%rsp),%eax
5bd2(3): test %r14,%r14
5bd5(4): mov %al,0x0(%r15,%r14,1)
5bd9(6): jz 0xc7(%rip)
5bdf(2): xor %ebx,%ebx
5be1(5): cmp %al,0xffffffff(%r15,%r14,1)
5be6(5): mov $0x10,%edi
5beb(3): setnz %bl
5bee(3): add %r14,%rbx
5bf1(5): call 0x6def(%rip)
5bf6(4): mov 0x8(%r13),%rcx
5bfa(3): add %r15,%rbx
5bfd(4): mov %r15,0x8(%rax)
5c01(3): cmp %rbx,%r15
5c04(4): mov %rax,0x8(%r13)
5c08(3): mov %rcx,(%rax)
5c0b(2): jnb 0x64(%rip)
5c0d(4): movzx %bpl,%eax
5c11(3): mov %r15,%rsi
5c14(5): mov %rax,0x20(%rsp)
5c19(2): jmp 0xf(%rip)
5c1b(5): nop 0x0(%rax,%rax,1)
5c20(3): cmp %r14,%rbx
5c23(3): mov %r14,%r15
5c26(2): jz 0x49(%rip)
5c28(3): cmp %bpl,(%r15)
5c2b(4): lea 0x1(%r15),%r14
5c2f(2): jnz 0xfffffff1(%rip)
5c31(4): mov %rsi,(%rsp)
5c35(5): call 0xffffcdbb(%rip)
5c3a(5): mov 0x20(%rsp),%rcx
5c3f(3): mov (%rax),%rax
5c42(4): mov (%rsp),%rsi
5c46(5): test $0x20,0x1(%rax,%rcx,2)
5c4b(2): jnz 0x75(%rip)
5c4d(4): mov $0x0,(%r15)
5c51(5): mov 0x10(%rsp),%rcx
5c56(3): mov %r13,%rdi
5c59(4): mov 0x18(%rsp),%edx
5c5d(5): mov 0x8(%rsp),%rax
5c62(2): call %rax
5c64(3): cmp %r14,%rbx
5c67(3): mov %r14,%rsi
5c6a(3): mov %r14,%r15
5c6d(2): jnz 0xffffffbb(%rip)
5c6f(5): mov 0x28(%rsp),%rax
5c74(5): mov 0x38(%rsp),%rdi
5c79(9): xor $0x28,%rdi
5c82(3): mov %r12d,(%rax)
5c85(4): mov 0x1c(%rsp),%eax
5c89(2): jnz 0x75(%rip)
5c8b(4): add $0x48,%rsp
5c8f(1): pop %rbx
5c90(1): pop %rbp
5c91(2): pop %r12
5c93(2): pop %r13
5c95(2): pop %r14
5c97(2): pop %r15
5c99(1): ret near (%rsp)
5c9a(6): nop 0x0(%rax,%rax,1)
5ca0(5): mov $0x10,%edi
5ca5(5): call 0x6d3b(%rip)
5caa(4): mov 0x8(%r13),%rdx
5cae(4): mov %r15,0x8(%rax)
5cb2(4): mov %rax,0x8(%r13)
5cb6(3): mov %rdx,(%rax)
5cb9(2): jmp 0xffffffb6(%rip)
5cbb(5): nop 0x0(%rax,%rax,1)
5cc0(3): cmp %rsi,%r15
5cc3(2): jz 0xffffffa1(%rip)
5cc5(5): movzx 0xfffffffe(%r14),%ecx
5cca(5): test $0x20,0x1(%rax,%rcx,2)
5ccf(2): jnz 0x21(%rip)
5cd1(5): jmp 0xffffff7c(%rip)
5cd6(a): nop 0x0(%rax,%rax,1)
5ce0(5): movzx 0xffffffff(%r15),%ecx
5ce5(5): test $0x20,0x1(%rax,%rcx,2)
5cea(6): jz 0xffffff63(%rip)
5cf0(4): sub $0x1,%r15
5cf4(3): cmp %rsi,%r15
5cf7(2): jnz 0xffffffe9(%rip)
5cf9(5): jmp 0xffffff6b(%rip)
5cfe(5): call 0xffffc862(%rip)

"add_exclude_file" :
5d10(2): push %r12
5d12(1): push %rbp
5d13(3): mov %r8d,%r12d
5d16(1): push %rbx
5d17(3): mov %rsi,%rbp
5d1a(4): sub $0x10,%rsp
5d1e(3): cmp $0x2d,(%rdx)
5d21(5): mov %rdi,0x8(%rsp)
5d26(2): jz 0x5a(%rip)
5d28(7): lea 0x1cae8(%rip),%rsi
5d2f(3): mov %rdx,%rdi
5d32(4): mov %ecx,0x4(%rsp)
5d36(5): call 0xffffcb9a(%rip)
5d3b(3): test %rax,%rax
5d3e(3): mov %rax,%rbx
5d41(4): mov 0x4(%rsp),%ecx
5d45(2): jz 0x6b(%rip)
5d47(5): lea 0x8(%rsp),%r9
5d4c(7): lea 0xfffff22d(%rip),%rdi
5d53(3): mov %rbp,%rsi
5d56(4): movsx %r12b,%r8d
5d5a(3): mov %rax,%rdx
5d5d(5): call 0xfffffd93(%rip)
5d62(3): mov %rbx,%rdi
5d65(2): mov %eax,%ebp
5d67(5): call 0x7f39(%rip)
5d6c(2): test %eax,%eax
5d6e(2): jnz 0x42(%rip)
5d70(4): add $0x10,%rsp
5d74(2): mov %ebp,%eax
5d76(1): pop %rbx
5d77(1): pop %rbp
5d78(2): pop %r12
5d7a(1): ret near (%rsp)
5d7b(5): nop 0x0(%rax,%rax,1)
5d80(4): cmp $0x0,0x1(%rdx)
5d84(2): jnz 0xffffffa4(%rip)
5d86(7): mov 0x222323(%rip),%rdx
5d8d(5): lea 0x8(%rsp),%r9
5d92(7): lea 0xfffff1e7(%rip),%rdi
5d99(4): movsx %r8b,%r8d
5d9d(5): call 0xfffffd53(%rip)
5da2(4): add $0x10,%rsp
5da6(2): mov %eax,%ebp
5da8(2): mov %ebp,%eax
5daa(1): pop %rbx
5dab(1): pop %rbp
5dac(2): pop %r12
5dae(1): ret near (%rsp)
5daf(1): nop 
5db0(5): mov $0xffffffff,%ebp
5db5(2): jmp 0xffffffbb(%rip)

"fwrite_lowcase" :
5dc0(3): test %rdx,%rdx
5dc3(2): jz 0x4d(%rip)
5dc5(2): push %r13
5dc7(2): push %r12
5dc9(3): mov %rdi,%r12
5dcc(1): push %rbp
5dcd(1): push %rbx
5dce(3): mov %rdx,%rbp
5dd1(3): mov %rsi,%rbx
5dd4(4): sub $0x8,%rsp
5dd8(3): add %rbx,%rbp
5ddb(5): call 0xffffcc05(%rip)
5de0(3): mov %rax,%r13
5de3(5): nop 0x0(%rax,%rax,1)
5de8(3): movzx (%rbx),%ecx
5deb(4): mov 0x0(%r13),%rax
5def(3): mov %r12,%rsi
5df2(4): add $0x1,%rbx
5df6(3): mov 0x0(%rax,%rcx,4),%edi
5df9(5): call 0xffffc867(%rip)
5dfe(3): cmp %rbp,%rbx
5e01(2): jnz 0xffffffe7(%rip)
5e03(4): add $0x8,%rsp
5e07(1): pop %rbx
5e08(1): pop %rbp
5e09(2): pop %r12
5e0b(2): pop %r13
5e0d(1): ret near (%rsp)
5e0e(2): nop 
5e10(2): REP ret near (%rsp)

"fwrite_uppcase" :
5e20(3): test %rdx,%rdx
5e23(2): jz 0x4d(%rip)
5e25(2): push %r13
5e27(2): push %r12
5e29(3): mov %rdi,%r12
5e2c(1): push %rbp
5e2d(1): push %rbx
5e2e(3): mov %rdx,%rbp
5e31(3): mov %rsi,%rbx
5e34(4): sub $0x8,%rsp
5e38(3): add %rbx,%rbp
5e3b(5): call 0xffffc585(%rip)
5e40(3): mov %rax,%r13
5e43(5): nop 0x0(%rax,%rax,1)
5e48(3): movzx (%rbx),%ecx
5e4b(4): mov 0x0(%r13),%rax
5e4f(3): mov %r12,%rsi
5e52(4): add $0x1,%rbx
5e56(3): mov 0x0(%rax,%rcx,4),%edi
5e59(5): call 0xffffc807(%rip)
5e5e(3): cmp %rbp,%rbx
5e61(2): jnz 0xffffffe7(%rip)
5e63(4): add $0x8,%rsp
5e67(1): pop %rbx
5e68(1): pop %rbp
5e69(2): pop %r12
5e6b(2): pop %r13
5e6d(1): ret near (%rsp)
5e6e(2): nop 
5e70(2): REP ret near (%rsp)

"__strftime_internal" :
5e80(2): push %r15
5e82(2): push %r14
5e84(3): mov %rsi,%r10
5e87(2): push %r13
5e89(2): push %r12
5e8b(3): mov %rdi,%r12
5e8e(1): push %rbp
5e8f(1): push %rbx
5e90(3): mov %r9d,%ebp
5e93(7): sub $0x4b8,%rsp
5e9a(4): mov 0x30(%rdx),%r13
5e9e(4): mov 0x8(%rdx),%r14d
5ea2(8): mov 0x4f0(%rsp),%rax
5eaa(4): mov %rdx,(%rsp)
5eae(5): mov %r8d,0x24(%rsp)
5eb3(4): mov %cl,0x23(%rsp)
5eb7(5): mov %rax,0x18(%rsp)
5ebc(8): mov 0x4f8(%rsp),%rax
5ec4(5): mov %rax,0x10(%rsp)
5ec9(9): mov $0x28,%rax
5ed2(8): mov %rax,0x4a8(%rsp)
5eda(2): xor %eax,%eax
5edc(7): lea 0x1c0fe(%rip),%rax
5ee3(3): test %r13,%r13
5ee6(4): cmove %rax,%r13
5eea(4): cmp $0xc,%r14d
5eee(6): jle 0x15a(%rip)
5ef4(4): sub $0xc,%r14d
5ef8(4): movzx (%r10),%eax
5efc(3): xor %r15d,%r15d
5eff(2): test %al,%al
5f01(2): jz 0x41(%rip)
5f03(2): cmp $0x25,%al
5f05(3): mov %r10,%rbx
5f08(5): mov %r14d,0x30(%rsp)
5f0d(5): mov %r13,0x28(%rsp)
5f12(3): movsxd %ebp,%r10
5f15(6): jz 0x96(%rip)
5f1b(3): test %r10d,%r10d
5f1e(6): mov $0x0,%r14d
5f24(5): mov $0x1,%eax
5f29(4): cmovns %r10,%r14
5f2d(3): test %r14,%r14
5f30(4): cmove %rax,%r14
5f34(3): mov %r15,%rax
5f37(3): not %rax
5f3a(3): cmp %r14,%rax
5f3d(2): jnbe 0x33(%rip)
5f3f(3): xor %r15d,%r15d
5f42(8): mov 0x4a8(%rsp),%rdi
5f4a(9): xor $0x28,%rdi
5f53(3): mov %r15,%rax
5f56(6): jnz 0x1b22(%rip)
5f5c(7): add $0x4b8,%rsp
5f63(1): pop %rbx
5f64(1): pop %rbp
5f65(2): pop %r12
5f67(2): pop %r13
5f69(2): pop %r14
5f6b(2): pop %r15
5f6d(1): ret near (%rsp)
5f6e(2): nop 
5f70(3): test %r12,%r12
5f73(2): jz 0x17(%rip)
5f75(4): cmp $0x1,%r10d
5f79(6): jnle 0x1e7(%rip)
5f7f(3): movsx (%rbx),%edi
5f82(3): mov %r12,%rsi
5f85(5): call 0xffffc6db(%rip)
5f8a(3): add %r14,%r15
5f8d(3): mov %rbx,%rbp
5f90(4): movzx 0x1(%rbp),%eax
5f94(4): lea 0x1(%rbp),%rbx
5f98(7): mov $0xffffffff,%r10
5f9f(2): test %al,%al
5fa1(2): jz 0xffffffa1(%rip)
5fa3(2): cmp $0x25,%al
5fa5(6): jnz 0xffffff76(%rip)
5fab(5): movzx 0x23(%rsp),%eax
5fb0(3): xor %r14d,%r14d
5fb3(8): mov $0x0,0x8(%rsp)
5fbb(4): mov %al,0x34(%rsp)
5fbf(5): mov $0x1,%eax
5fc4(4): add $0x1,%rbx
5fc8(4): movsx (%rbx),%r11d
5fcc(4): lea 0xffffffdd(%r11),%ecx
5fd0(3): mov %r11d,%r13d
5fd3(3): mov %r11d,%edi
5fd6(3): cmp $0x3c,%cl
5fd9(2): jnbe 0x36(%rip)
5fdb(3): mov %rax,%rdx
5fde(a): mov $0x1152921504606856448,%rsi
5fe8(3): shl/sal %cl,%rdx
5feb(3): test %rsi,%rdx
5fee(6): jnz 0x82(%rip)
5ff4(2): test %cl,%cl
5ff6(6): jz 0x8a(%rip)
5ffc(a): mov $0x576460752303423488,%rsi
6006(3): test %rsi,%rdx
6009(6): jnz 0x187(%rip)
600f(4): lea 0xffffffd0(%r11),%eax
6013(3): cmp $0x9,%eax
6016(6): jbe 0x18a(%rip)
601c(4): cmp $0x45,%r13b
6020(2): jz 0x40(%rip)
6022(4): cmp $0x4f,%r13b
6026(2): jz 0x3a(%rip)
6028(3): xor %r11d,%r11d
602b(4): cmp $0x7a,%r13b
602f(2): jnbe 0x61(%rip)
6031(7): lea 0x1b700(%rip),%rsi
6038(4): movzx %r13b,%eax
603c(4): movsxd 0x0(%rsi,%rax,4),%rax
6040(3): add %rsi,%rax
6043(2): jmp %rax
6045(3): nop (%rax)
6048(3): test %r14d,%r14d
604b(5): mov $0xc,%eax
6050(4): cmove %eax,%r14d
6054(5): jmp 0xfffffea4(%rip)
6059(7): nop 0x0(%rax)
6060(4): movsx 0x1(%rbx),%edi
6064(4): add $0x1,%rbx
6068(3): mov %edi,%r13d
606b(2): jmp 0xffffffc0(%rip)
606d(3): nop (%rax)
6070(5): mov %r11d,0x8(%rsp)
6075(5): jmp 0xffffff4f(%rip)
607a(6): nop 0x0(%rax,%rax,1)
6080(6): mov $0x1,%r14d
6086(5): jmp 0xffffff3e(%rip)
608b(5): mov 0x38(%rsp),%rbx
6090(4): lea 0xffffffff(%rbx),%rax
6094(6): mov $0x1,%r13d
609a(3): mov %rax,%rdx
609d(4): lea 0xffffffff(%rax),%rax
60a1(4): add $0x1,%r13d
60a5(4): cmp $0x25,0x1(%rax)
60a9(2): jnz 0xfffffff1(%rip)
60ab(3): test %r10d,%r10d
60ae(5): mov $0x0,%eax
60b3(3): movsxd %r13d,%r13
60b6(4): cmovns %r10d,%eax
60ba(5): mov %rdx,0x38(%rsp)
60bf(3): mov %r13,%r14
60c2(2): cwde 
60c4(3): mov %r15,%rdx
60c7(3): mov %rbx,%rbp
60ca(3): cmp %r13,%rax
60cd(3): not %rdx
60d0(4): cmovnb %rax,%r14
60d4(3): cmp %r14,%rdx
60d7(6): jbe 0xfffffe68(%rip)
60dd(3): test %r12,%r12
60e0(2): jz 0x6e(%rip)
60e2(3): cmp %rax,%r13
60e5(2): jnb 0x4e(%rip)
60e7(4): mov 0x8(%rsp),%eax
60eb(3): movsxd %r10d,%rbx
60ee(3): sub %r13,%rbx
60f1(3): cmp $0x30,%eax
60f4(6): jz 0x122f(%rip)
60fa(3): cmp $0x2b,%eax
60fd(6): jz 0x1226(%rip)
6103(2): xor %edx,%edx
6105(3): test %rbx,%rbx
6108(2): jz 0x2b(%rip)
610a(5): mov %rbp,0x8(%rsp)
610f(3): mov %rdx,%rbp
6112(6): nop 0x0(%rax,%rax,1)
6118(3): mov %r12,%rsi
611b(5): mov $0x20,%edi
6120(4): add $0x1,%rbp
6124(5): call 0xffffc53c(%rip)
6129(3): cmp %rbp,%rbx
612c(2): jnz 0xffffffec(%rip)
612e(5): mov 0x8(%rsp),%rbp
6133(5): cmp $0x0,0x34(%rsp)
6138(6): jz 0x1130(%rip)
613e(5): mov 0x38(%rsp),%rsi
6143(3): mov %r13,%rdx
6146(3): mov %r12,%rdi
6149(5): call 0xfffffcd7(%rip)
614e(3): add %r14,%r15
6151(5): jmp 0xfffffe3f(%rip)
6156(a): nop 0x0(%rax,%rax,1)
6160(4): lea 0xffffffff(%r10),%r13
6164(2): xor %ebp,%ebp
6166(a): nop 0x0(%rax,%rax,1)
6170(3): mov %r12,%rsi
6173(5): mov $0x20,%edi
6178(4): add $0x1,%rbp
617c(5): call 0xffffc4e4(%rip)
6181(3): cmp %rbp,%r13
6184(2): jnz 0xffffffec(%rip)
6186(5): jmp 0xfffffdf9(%rip)
618b(5): nop 0x0(%rax,%rax,1)
6190(5): mov $0x1,0x34(%rsp)
6195(5): jmp 0xfffffe2f(%rip)
619a(6): nop 0x0(%rax,%rax,1)
61a0(3): xor %r10d,%r10d
61a3(5): movsx 0x1(%rbx),%r11d
61a8(7): cmp $0xccccccc,%r10d
61af(4): lea 0x1(%rbx),%rcx
61b3(3): mov %r11d,%r13d
61b6(4): lea 0xffffffd0(%r11),%eax
61ba(2): jnle 0x2b(%rip)
61bc(3): movsx (%rbx),%edx
61bf(2): jz 0x21(%rip)
61c1(4): lea 0x0(%r10,%r10,4),%esi
61c5(3): mov %rcx,%rbx
61c8(5): lea 0xffffffd0(%rdx,%rsi,2),%r10d
61cd(3): cmp $0x9,%eax
61d0(2): jbe 0xffffffd3(%rip)
61d2(3): mov %r11d,%edi
61d5(5): jmp 0xfffffe47(%rip)
61da(6): nop 0x0(%rax,%rax,1)
61e0(3): cmp $0x37,%dl
61e3(2): jle 0xffffffde(%rip)
61e5(3): cmp $0x9,%eax
61e8(2): jnbe 0x20(%rip)
61ea(5): movsx 0x2(%rbx),%r11d
61ef(6): mov $0x7fffffff,%r10d
61f5(4): add $0x2,%rbx
61f9(3): mov %r11d,%r13d
61fc(4): lea 0xffffffd0(%r11),%eax
6200(2): jmp 0xffffffcd(%rip)
6202(6): nop 0x0(%rax,%rax,1)
6208(3): mov %r11d,%edi
620b(3): mov %rcx,%rbx
620e(6): mov $0x7fffffff,%r10d
6214(5): jmp 0xfffffe08(%rip)
6219(7): nop 0x0(%rax)
6220(4): cmp $0x4f,%r11d
6224(6): jz 0xfffffe6c(%rip)
622a(3): xor %r14d,%r14d
622d(5): mov $0x2520,%ebp
6232(3): test %r11d,%r11d
6235(8): mov %bp,0x9b(%rsp)
623d(6): jnz 0x1853(%rip)
6243(8): lea 0x9b(%rsp),%rdx
624b(3): mov %rbx,%rbp
624e(4): lea 0x2(%rdx),%rax
6252(3): mov %r13b,(%rax)
6255(4): mov $0x0,0x1(%rax)
6259(8): lea 0xa0(%rsp),%rax
6261(4): mov (%rsp),%rcx
6265(5): mov $0x400,%esi
626a(5): mov %r10d,0x40(%rsp)
626f(3): mov %rax,%rdi
6272(5): mov %r11d,0x58(%rsp)
6277(5): mov %rax,0x38(%rsp)
627c(5): call 0xffffc5f4(%rip)
6281(3): test %rax,%rax
6284(6): jz 0xfffffd0c(%rip)
628a(5): movsxd 0x40(%rsp),%r10
628f(4): lea 0xffffffff(%rax),%r13
6293(5): mov $0x0,%eax
6298(3): mov %r15,%rdx
629b(3): not %rdx
629e(3): test %r10d,%r10d
62a1(4): cmovns %r10,%rax
62a5(3): cmp %rax,%r13
62a8(3): mov %rax,%rdi
62ab(4): cmovnb %r13,%rdi
62af(3): cmp %rdi,%rdx
62b2(5): mov %rdi,0x40(%rsp)
62b7(6): jbe 0xfffffc88(%rip)
62bd(3): test %r12,%r12
62c0(6): jz 0x83(%rip)
62c6(5): mov 0x58(%rsp),%r11d
62cb(3): test %r11d,%r11d
62ce(2): jnz 0x4d(%rip)
62d0(3): cmp %rax,%r13
62d3(2): jnb 0x48(%rip)
62d5(4): mov 0x8(%rsp),%eax
62d9(3): movsxd %r10d,%rbx
62dc(3): sub %r13,%rbx
62df(3): cmp $0x30,%eax
62e2(6): jz 0x100e(%rip)
62e8(3): cmp $0x2b,%eax
62eb(6): jz 0x1005(%rip)
62f1(2): xor %edx,%edx
62f3(3): test %rbx,%rbx
62f6(2): jz 0x25(%rip)
62f8(5): mov %rbp,0x8(%rsp)
62fd(3): mov %rdx,%rbp
6300(3): mov %r12,%rsi
6303(5): mov $0x20,%edi
6308(4): add $0x1,%rbp
630c(5): call 0xffffc354(%rip)
6311(3): cmp %rbp,%rbx
6314(2): jnz 0xffffffec(%rip)
6316(5): mov 0x8(%rsp),%rbp
631b(3): test %r14b,%r14b
631e(6): jnz 0xf92(%rip)
6324(5): cmp $0x0,0x34(%rsp)
6329(6): jz 0xf5f(%rip)
632f(5): mov 0x38(%rsp),%rsi
6334(3): mov %r13,%rdx
6337(3): mov %r12,%rdi
633a(4): add $0x1,%rsi
633e(5): call 0xfffffae2(%rip)
6343(5): add 0x40(%rsp),%r15
6348(5): jmp 0xfffffc48(%rip)
634d(3): nop (%rax)
6350(3): test %r11d,%r11d
6353(6): jnz 0xfffffd3d(%rip)
6359(5): movzx 0x34(%rsp),%eax
635e(3): test %r14b,%r14b
6361(8): lea 0x9b(%rsp),%rdx
6369(3): mov %rbx,%rbp
636c(4): cmovne %r14d,%eax
6370(3): xor %r14d,%r14d
6373(3): xor %r11d,%r11d
6376(4): mov %al,0x34(%rsp)
637a(5): mov $0x2520,%eax
637f(8): mov %ax,0x9b(%rsp)
6387(4): lea 0x2(%rdx),%rax
638b(5): jmp 0xfffffec7(%rip)
6390(3): test %r10d,%r10d
6393(6): mov $0x0,%r13d
6399(5): mov $0x1,%eax
639e(4): cmovns %r10d,%r13d
63a2(3): movsxd %r13d,%r13
63a5(3): test %r13,%r13
63a8(4): cmove %rax,%r13
63ac(3): mov %r15,%rax
63af(3): not %rax
63b2(3): cmp %r13,%rax
63b5(6): jbe 0xfffffb8a(%rip)
63bb(3): test %r12,%r12
63be(6): jz 0x1a1(%rip)
63c4(4): cmp $0x1,%r10d
63c8(2): jle 0x37(%rip)
63ca(4): mov 0x8(%rsp),%eax
63ce(3): movsxd %r10d,%r10
63d1(4): lea 0xffffffff(%r10),%r14
63d5(3): cmp $0x30,%eax
63d8(6): jz 0x14d7(%rip)
63de(2): xor %ebp,%ebp
63e0(3): cmp $0x2b,%eax
63e3(6): jz 0x14cc(%rip)
63e9(3): mov %r12,%rsi
63ec(5): mov $0x20,%edi
63f1(4): add $0x1,%rbp
63f5(5): call 0xffffc26b(%rip)
63fa(3): cmp %rbp,%r14
63fd(2): jnz 0xffffffec(%rip)
63ff(3): mov %r12,%rsi
6402(5): mov $0x9,%edi
6407(5): call 0xffffc259(%rip)
640c(5): jmp 0x153(%rip)
6411(4): mov (%rsp),%rax
6415(5): mov $0x92492493,%edx
641a(5): mov $0x1,%esi
641f(3): mov 0x18(%rax),%eax
6422(3): lea 0x6(%rax),%ecx
6425(4): mov %eax,0x38(%rsp)
6429(2): mov %ecx,%eax
642b(2): imul %eax,%edx,%edx
642d(3): lea 0x0(%rdx,%rcx,1),%eax
6430(2): mov %ecx,%edx
6432(3): sar $0x1f,%edx
6435(3): sar $0x2,%eax
6438(2): sub %edx,%eax
643a(7): lea 0x0(,%rax,8),%edx
6441(2): sub %eax,%edx
6443(2): sub %edx,%ecx
6445(3): add $0x1,%ecx
6448(8): nop 0x0(%rax,%rax,1)
6450(2): mov %ecx,%eax
6452(3): xor %r8d,%r8d
6455(3): xor %r9d,%r9d
6458(3): shr $0x1f,%eax
645b(3): mov %eax,%r13d
645e(2): mov %ecx,%eax
6460(2): not %eax
6462(3): shr $0x1f,%eax
6465(4): cmp $0x4f,%r11d
6469(6): jnz 0xd17(%rip)
646f(2): test %al,%al
6471(6): jz 0xd0f(%rip)
6477(3): mov %edi,%r13d
647a(5): mov $0x2520,%edx
647f(3): xor %r14d,%r14d
6482(8): mov %dx,0x9b(%rsp)
648a(8): lea 0x9b(%rsp),%rdx
6492(8): mov %r11b,0x9d(%rsp)
649a(3): mov %rbx,%rbp
649d(3): mov %esi,%r11d
64a0(4): lea 0x3(%rdx),%rax
64a4(5): jmp 0xfffffdae(%rip)
64a9(4): cmp $0x45,%r11d
64ad(6): jz 0xfffffbe3(%rip)
64b3(4): mov (%rsp),%rax
64b7(5): mov $0x1,%esi
64bc(3): mov 0x18(%rax),%ecx
64bf(2): jmp 0xffffff91(%rip)
64c1(5): mov $0x1,%eax
64c6(3): test %r14b,%r14b
64c9(6): jnz 0xf61(%rip)
64cf(3): mov %eax,%r14d
64d2(6): mov $0x70,%r13d
64d8(5): jmp 0xfffffd55(%rip)
64dd(7): lea 0x19738(%rip),%rax
64e4(6): mov $0xffffffff,%r14d
64ea(5): mov %rax,0x38(%rsp)
64ef(5): movzx 0x34(%rsp),%ebp
64f4(5): mov %r10d,0x40(%rsp)
64f9(4): sub $0x8,%rsp
64fd(7): mov 0x508(%rsp),%eax
6504(2): xor %edi,%edi
6506(3): mov %r14d,%r9d
6509(1): push %rax
650a(4): push 0x20(%rsp)
650e(2): mov %ebp,%ecx
6510(4): push 0x30(%rsp)
6514(5): mov 0x20(%rsp),%rdx
6519(5): mov 0x28(%rsp),%r8d
651e(5): mov 0x58(%rsp),%rsi
6523(5): call 0xfffff95d(%rip)
6528(4): add $0x20,%rsp
652c(5): movsxd 0x40(%rsp),%r10
6531(5): mov $0x0,%edx
6536(3): mov %r15,%rcx
6539(3): not %rcx
653c(3): test %r10d,%r10d
653f(4): cmovns %r10,%rdx
6543(3): cmp %rdx,%rax
6546(3): mov %rdx,%r13
6549(4): cmovnb %rax,%r13
654d(3): cmp %r13,%rcx
6550(6): jbe 0xfffff9ef(%rip)
6556(3): test %r12,%r12
6559(6): jnz 0xe02(%rip)
655f(3): add %r13,%r15
6562(3): mov %rbx,%rbp
6565(5): jmp 0xfffffa2b(%rip)
656a(4): cmp $0x45,%r11d
656e(6): jz 0xfffffb22(%rip)
6574(4): mov (%rsp),%rax
6578(5): mov $0x2,%esi
657d(2): mov (%rax),%ecx
657f(5): jmp 0xfffffed1(%rip)
6584(4): mov (%rsp),%rax
6588(5): mov 0x10(%rsp),%rdi
658d(5): lea 0x60(%rsp),%rsi
6592(5): mov %r10d,0x40(%rsp)
6597(8): lea 0xb7(%rsp),%r14
659f(4): movdqu (%rax),%xmm0
65a3(5): movaps %xmm0,0x60(%rsp)
65a8(5): movdqu 0x10(%rax),%xmm0
65ad(5): movaps %xmm0,0x70(%rsp)
65b2(5): movdqu 0x20(%rax),%xmm0
65b7(4): mov 0x30(%rax),%rax
65bb(8): movaps %xmm0,0x80(%rsp)
65c3(8): mov %rax,0x90(%rsp)
65cb(5): call 0x18c05(%rip)
65d0(5): mov 0x40(%rsp),%r10d
65d5(3): mov %rax,%rsi
65d8(3): mov %rax,%rcx
65db(8): lea 0xa0(%rsp),%rax
65e3(a): mov $0x7378697629483820647,%r8
65ed(5): mov $0x30,%edi
65f2(5): mov %rax,0x38(%rsp)
65f7(9): nop 0x0(%rax,%rax,1)
6600(3): mov %rcx,%rax
6603(3): imul %rax,%r8,%rdx
6606(3): mov %rcx,%rax
6609(4): sar $0x3f,%rax
660d(4): sar $0x2,%rdx
6611(3): sub %rax,%rdx
6614(3): mov %rdx,%rax
6617(4): lea 0x0(%rdx,%rdx,4),%rdx
661b(3): add %rdx,%rdx
661e(3): sub %rdx,%rcx
6621(3): mov %rcx,%rdx
6624(3): mov %rax,%rcx
6627(2): mov %edi,%eax
6629(2): sub %edx,%eax
662b(3): add $0x30,%edx
662e(3): test %rsi,%rsi
6631(3): cmovs %eax,%edx
6634(4): sub $0x1,%r14
6638(3): test %rcx,%rcx
663b(3): mov %dl,(%r14)
663e(2): jnz 0xffffffc2(%rip)
6640(3): test %r10d,%r10d
6643(5): mov $0x1,%eax
6648(4): cmovnl %r10d,%eax
664c(3): test %rsi,%rsi
664f(4): mov %eax,0x58(%rsp)
6653(6): js 0xb3d(%rip)
6659(5): mov 0x38(%rsp),%rax
665e(3): mov %r15,%rdx
6661(3): not %rdx
6664(4): add $0x17,%rax
6668(3): sub %r14,%rax
666b(5): cmp $0x2d,0x8(%rsp)
6670(5): mov %rax,0x40(%rsp)
6675(2): jz 0x15(%rip)
6677(5): mov 0x58(%rsp),%r13d
667c(5): sub 0x40(%rsp),%r13d
6681(3): test %r13d,%r13d
6684(6): jnle 0x113a(%rip)
668a(3): test %r10d,%r10d
668d(5): mov $0x0,%ecx
6692(3): mov %rbx,%rbp
6695(4): cmovns %r10d,%ecx
6699(3): movsxd %ecx,%r13
669c(5): mov 0x40(%rsp),%rax
66a1(3): cmp %r13,%rax
66a4(3): mov %rax,%rbx
66a7(4): cmovnae %r13,%rbx
66ab(3): cmp %rdx,%rbx
66ae(6): jnb 0xfffff891(%rip)
66b4(3): test %r12,%r12
66b7(2): jz 0x77(%rip)
66b9(4): mov 0x58(%rsp),%edx
66bd(2): test %edx,%edx
66bf(2): jnz 0x54(%rip)
66c1(3): cmp %r13,%rax
66c4(2): jnb 0x4f(%rip)
66c6(3): movsxd %r10d,%r13
66c9(3): sub %rax,%r13
66cc(4): mov 0x8(%rsp),%eax
66d0(3): cmp $0x30,%eax
66d3(6): jz 0xd1d(%rip)
66d9(3): cmp $0x2b,%eax
66dc(6): jz 0xd14(%rip)
66e2(2): xor %edx,%edx
66e4(3): test %r13,%r13
66e7(2): jz 0x2c(%rip)
66e9(5): mov %rbx,0x8(%rsp)
66ee(3): mov %rdx,%rbx
66f1(7): nop 0x0(%rax)
66f8(3): mov %r12,%rsi
66fb(5): mov $0x20,%edi
6700(4): add $0x1,%rbx
6704(5): call 0xffffbf5c(%rip)
6709(3): cmp %rbx,%r13
670c(2): jnz 0xffffffec(%rip)
670e(5): mov 0x8(%rsp),%rbx
6713(5): cmp $0x0,0x34(%rsp)
6718(6): jz 0xbb8(%rip)
671e(5): mov 0x40(%rsp),%rdx
6723(3): mov %r14,%rsi
6726(3): mov %r12,%rdi
6729(5): call 0xfffff6f7(%rip)
672e(3): add %rbx,%r15
6731(5): jmp 0xfffff85f(%rip)
6736(4): mov (%rsp),%rax
673a(4): cmp $0x4f,%r11d
673e(5): mov $0x1,%esi
6743(3): mov 0x10(%rax),%eax
6746(6): jz 0xfffffd34(%rip)
674c(3): lea 0x0(%rax,%rax,4),%edx
674f(3): xor %r9d,%r9d
6752(3): xor %r13d,%r13d
6755(3): xor %r8d,%r8d
6758(3): lea 0x0(%rax,%rdx,2),%ecx
675b(3): sar $0x5,%ecx
675e(3): add $0x1,%ecx
6761(7): nop 0x0(%rax)
6768(8): lea 0xa0(%rsp),%rax
6770(8): lea 0xb7(%rsp),%rdi
6778(6): mov $0xcccccccd,%r11d
677e(5): mov %rax,0x38(%rsp)
6783(5): nop 0x0(%rax,%rax,1)
6788(4): test $0x1,%r8b
678c(4): lea 0xffffffff(%rdi),%r14
6790(2): jz 0x10(%rip)
6792(4): lea 0xfffffffe(%rdi),%rax
6796(4): mov $0x3a,0xffffffff(%rdi)
679a(3): mov %r14,%rdi
679d(3): mov %rax,%r14
67a0(2): mov %ecx,%eax
67a2(3): sar $0x1,%r8d
67a5(3): mul %eax,%r11d,%edx
67a8(3): shr $0x3,%edx
67ab(3): lea 0x0(%rdx,%rdx,4),%eax
67ae(2): add %eax,%eax
67b0(2): sub %eax,%ecx
67b2(3): mov %r8d,%eax
67b5(3): add $0x30,%ecx
67b8(2): or %edx,%eax
67ba(3): mov %cl,0xffffffff(%rdi)
67bd(2): mov %edx,%ecx
67bf(3): mov %r14,%rdi
67c2(2): jnz 0xffffffc6(%rip)
67c4(3): cmp %esi,%r10d
67c7(4): cmovnl %r10d,%esi
67cb(3): test %r13b,%r13b
67ce(4): mov %esi,0x58(%rsp)
67d2(6): jnz 0x9be(%rip)
67d8(3): test %r9b,%r9b
67db(6): jz 0xfffffe7e(%rip)
67e1(5): cmp $0x2d,0x8(%rsp)
67e6(5): mov $0x2b,%ebp
67eb(6): jz 0xdb2(%rip)
67f1(5): mov 0x38(%rsp),%rax
67f6(3): mov %r15,%rdx
67f9(3): not %rdx
67fc(4): add $0x17,%rax
6800(3): sub %r14,%rax
6803(3): mov %rax,%rdi
6806(5): mov %rax,0x40(%rsp)
680b(4): mov 0x58(%rsp),%eax
680f(3): sub $0x1,%eax
6812(2): sub %edi,%eax
6814(2): test %eax,%eax
6816(3): mov %eax,%r13d
6819(6): jle 0xcc7(%rip)
681f(5): cmp $0x5f,0x8(%rsp)
6824(6): jz 0xc18(%rip)
682a(5): movsxd 0x58(%rsp),%rax
682f(3): cmp %rdx,%rax
6832(3): mov %rax,%rdi
6835(6): jnb 0xfffff70a(%rip)
683b(3): test %r10d,%r10d
683e(5): mov $0x0,%eax
6843(5): mov $0x1,%ecx
6848(4): cmovns %r10d,%eax
684c(2): cwde 
684e(3): test %rax,%rax
6851(4): cmovne %rax,%rcx
6855(3): cmp %rdx,%rcx
6858(5): mov %rcx,0x48(%rsp)
685d(6): jnb 0xfffff6e2(%rip)
6863(3): test %r12,%r12
6866(2): jz 0x66(%rip)
6868(2): test %edi,%edi
686a(2): jnz 0x56(%rip)
686c(4): cmp $0x1,%rax
6870(2): jbe 0x50(%rip)
6872(4): mov 0x8(%rsp),%edi
6876(3): movsxd %r10d,%r10
6879(4): lea 0xffffffff(%r10),%rax
687d(3): cmp $0x30,%edi
6880(5): mov %rax,0x38(%rsp)
6885(6): jz 0x110b(%rip)
688b(3): cmp $0x2b,%edi
688e(6): jz 0x1102(%rip)
6894(2): xor %edx,%edx
6896(3): test %rax,%rax
6899(2): jz 0x27(%rip)
689b(5): mov %rbx,0x50(%rsp)
68a0(3): mov %rdx,%rbx
68a3(3): mov %r12,%rsi
68a6(5): mov $0x20,%edi
68ab(4): add $0x1,%rbx
68af(5): call 0xffffbdb1(%rip)
68b4(5): cmp %rbx,0x38(%rsp)
68b9(2): jnz 0xffffffea(%rip)
68bb(5): mov 0x50(%rsp),%rbx
68c0(4): movsx %bpl,%edi
68c4(3): mov %r12,%rsi
68c7(5): call 0xffffbd99(%rip)
68cc(5): add 0x48(%rsp),%r15
68d1(3): mov %rbx,%rbp
68d4(3): movsxd %r13d,%rbx
68d7(3): xor %r13d,%r13d
68da(3): test %r12,%r12
68dd(2): jz 0x19(%rip)
68df(1): nop 
68e0(3): mov %r12,%rsi
68e3(5): mov $0x30,%edi
68e8(4): add $0x1,%r13
68ec(5): call 0xffffbd74(%rip)
68f1(3): cmp %rbx,%r13
68f4(2): jnz 0xffffffec(%rip)
68f6(3): add %rbx,%r15
68f9(3): xor %r13d,%r13d
68fc(3): xor %r10d,%r10d
68ff(3): mov %r15,%rdx
6902(3): not %rdx
6905(5): jmp 0xfffffd97(%rip)
690a(7): lea 0x1ae12(%rip),%rax
6911(6): mov $0xffffffff,%r14d
6917(5): mov %rax,0x38(%rsp)
691c(5): jmp 0xfffffbd3(%rip)
6921(4): cmp $0x45,%r11d
6925(6): jz 0xfffff76b(%rip)
692b(4): mov (%rsp),%rax
692f(5): mov $0x92492493,%edx
6934(3): mov 0x1c(%rax),%esi
6937(3): sub 0x18(%rax),%esi
693a(3): add $0x7,%esi
693d(2): mov %esi,%eax
693f(2): imul %eax,%edx,%edx
6941(3): lea 0x0(%rdx,%rsi,1),%ecx
6944(3): sar $0x1f,%esi
6947(3): sar $0x2,%ecx
694a(2): sub %esi,%ecx
694c(5): mov $0x2,%esi
6951(5): jmp 0xfffffaff(%rip)
6956(4): cmp $0x45,%r11d
695a(6): jz 0xfffff736(%rip)
6960(4): mov (%rsp),%rcx
6964(5): mov $0x92492493,%edx
6969(3): mov 0x14(%rcx),%esi
696c(4): mov 0x1c(%rcx),%r8d
6970(4): mov 0x18(%rcx),%r14d
6974(2): mov %esi,%eax
6976(3): mov %r8d,%ecx
6979(3): sar $0x1f,%eax
697c(3): sub %r14d,%ecx
697f(6): add $0x17e,%ecx
6985(5): and $0x190,%eax
698a(5): lea 0xffffff9c(%rsi,%rax,1),%r9d
698f(2): mov %ecx,%eax
6991(2): imul %eax,%edx,%edx
6993(3): lea 0x0(%rdx,%rcx,1),%eax
6996(2): mov %ecx,%edx
6998(3): sar $0x1f,%edx
699b(3): sar $0x2,%eax
699e(2): sub %edx,%eax
69a0(7): lea 0x0(,%rax,8),%edx
69a7(2): sub %eax,%edx
69a9(3): mov %r8d,%eax
69ac(2): sub %ecx,%eax
69ae(4): lea 0x3(%rax,%rdx,1),%ebp
69b2(2): test %ebp,%ebp
69b4(6): js 0xe2c(%rip)
69ba(4): test $0x3,%r9b
69be(5): mov $0x16d,%eax
69c3(2): jnz 0x47(%rip)
69c5(3): mov %r9d,%eax
69c8(5): mov $0x51eb851f,%edx
69cd(3): mov %r9d,%ecx
69d0(2): imul %eax,%edx,%edx
69d2(3): sar $0x1f,%ecx
69d5(5): mov $0x16e,%eax
69da(4): mov %edx,0x38(%rsp)
69de(3): sar $0x5,%edx
69e1(2): sub %ecx,%edx
69e3(3): imul %edx,$0x64,%edx
69e6(3): cmp %edx,%r9d
69e9(2): jnz 0x21(%rip)
69eb(4): mov 0x38(%rsp),%edx
69ef(3): sar $0x7,%edx
69f2(2): mov %edx,%eax
69f4(2): sub %ecx,%eax
69f6(6): imul %eax,$0x190,%eax
69fc(3): cmp %eax,%r9d
69ff(3): setz %al
6a02(3): movzx %al,%eax
6a05(5): add $0x16d,%eax
6a0a(3): sub %eax,%r8d
6a0d(5): mov $0x92492493,%edx
6a12(3): mov %r8d,%ecx
6a15(3): sub %r14d,%ecx
6a18(6): add $0x17e,%ecx
6a1e(2): mov %ecx,%eax
6a20(3): sub %ecx,%r8d
6a23(2): imul %eax,%edx,%edx
6a25(3): lea 0x0(%rdx,%rcx,1),%eax
6a28(2): mov %ecx,%edx
6a2a(3): sar $0x1f,%edx
6a2d(3): sar $0x2,%eax
6a30(2): sub %edx,%eax
6a32(7): lea 0x0(,%rax,8),%edx
6a39(2): sub %eax,%edx
6a3b(5): lea 0x3(%r8,%rdx,1),%ecx
6a40(6): mov $0x1,%r8d
6a46(2): test %ecx,%ecx
6a48(2): jns 0x7(%rip)
6a4a(2): mov %ebp,%ecx
6a4c(3): xor %r8d,%r8d
6a4f(4): cmp $0x47,%r13b
6a53(6): jz 0xc94(%rip)
6a59(4): cmp $0x67,%r13b
6a5d(6): jnz 0xe0d(%rip)
6a63(5): mov $0x51eb851f,%ecx
6a68(2): mov %esi,%eax
6a6a(3): mov %esi,%r9d
6a6d(2): imul %eax,%ecx,%edx
6a6f(2): mov %edx,%eax
6a71(2): mov %esi,%edx
6a73(3): sar $0x1f,%edx
6a76(3): sar $0x5,%eax
6a79(2): sub %edx,%eax
6a7b(3): imul %eax,$0x64,%eax
6a7e(3): sub %eax,%r9d
6a81(3): add %r8d,%r9d
6a84(3): mov %r9d,%eax
6a87(2): imul %eax,%ecx,%edx
6a89(3): mov %r9d,%eax
6a8c(3): sar $0x1f,%eax
6a8f(2): mov %edx,%ecx
6a91(3): sar $0x5,%ecx
6a94(2): sub %eax,%ecx
6a96(3): imul %ecx,$0x64,%ecx
6a99(3): sub %ecx,%r9d
6a9c(3): mov %r9d,%ecx
6a9f(6): js 0xc05(%rip)
6aa5(4): mov 0x8(%rsp),%esi
6aa9(2): test %esi,%esi
6aab(6): jz 0xc16(%rip)
6ab1(5): mov $0x1,%eax
6ab6(3): xor %r13d,%r13d
6ab9(5): cmp $0x2b,0x8(%rsp)
6abe(6): jz 0xf9f(%rip)
6ac4(3): xor %r9d,%r9d
6ac7(5): mov $0x2,%esi
6acc(3): xor %r8d,%r8d
6acf(5): jmp 0xfffff996(%rip)
6ad4(4): cmp $0x45,%r11d
6ad8(6): jz 0xfffff5b8(%rip)
6ade(4): mov (%rsp),%rax
6ae2(5): mov $0x2,%esi
6ae7(3): mov 0x8(%rax),%ecx
6aea(5): jmp 0xfffff966(%rip)
6aef(4): cmp $0x45,%r11d
6af3(6): jz 0xfffff59d(%rip)
6af9(4): mov (%rsp),%rax
6afd(5): mov $0x2,%esi
6b02(3): mov 0x4(%rax),%ecx
6b05(5): jmp 0xfffff94b(%rip)
6b0a(4): cmp $0x45,%r11d
6b0e(6): jz 0xfffff582(%rip)
6b14(4): cmp $0xff,%r10d
6b18(6): jz 0xc18(%rip)
6b1e(4): cmp $0x8,%r10d
6b22(6): jnle 0xf4a(%rip)
6b28(7): mov 0x500(%rsp),%ecx
6b2f(3): mov %r10d,%esi
6b32(6): mov $0x66666667,%r8d
6b38(8): nop 0x0(%rax,%rax,1)
6b40(2): mov %ecx,%eax
6b42(3): add $0x1,%esi
6b45(3): sar $0x1f,%ecx
6b48(3): imul %eax,%r8d,%edx
6b4b(3): sar $0x2,%edx
6b4e(2): sub %ecx,%edx
6b50(3): cmp $0x9,%esi
6b53(2): mov %edx,%ecx
6b55(2): jnz 0xffffffeb(%rip)
6b57(3): mov %r10d,%esi
6b5a(5): jmp 0xfffff8f6(%rip)
6b5f(4): cmp $0x45,%r11d
6b63(6): jz 0xfffff52d(%rip)
6b69(4): mov 0x30(%rsp),%ecx
6b6d(5): mov $0x2,%esi
6b72(5): jmp 0xfffff8de(%rip)
6b77(4): cmp $0x45,%r11d
6b7b(6): jz 0x8a8(%rip)
6b81(4): mov (%rsp),%rax
6b85(5): mov $0x51eb851f,%edx
6b8a(5): mov 0x8(%rsp),%r9d
6b8f(3): mov 0x14(%rax),%esi
6b92(2): mov %esi,%eax
6b94(2): imul %eax,%edx,%edx
6b96(2): mov %edx,%eax
6b98(2): mov %esi,%edx
6b9a(3): sar $0x1f,%edx
6b9d(3): sar $0x5,%eax
6ba0(2): sub %edx,%eax
6ba2(2): mov %esi,%edx
6ba4(3): lea 0x13(%rax),%ecx
6ba7(3): imul %eax,$0x64,%eax
6baa(2): sub %eax,%edx
6bac(2): mov %edx,%eax
6bae(3): shr $0x1f,%eax
6bb1(2): test %ecx,%ecx
6bb3(3): setnle %dl
6bb6(2): and %edx,%eax
6bb8(6): cmp $0xfffff894,%esi
6bbe(4): setl %r13b
6bc2(2): sub %eax,%ecx
6bc4(6): cmp $0xfffff894,%esi
6bca(3): setnl %al
6bcd(3): test %r9d,%r9d
6bd0(6): jnz 0xfffffee9(%rip)
6bd6(5): cmp $0x2b,0x24(%rsp)
6bdb(6): jz 0xe82(%rip)
6be1(4): mov 0x24(%rsp),%esi
6be5(4): mov %esi,0x8(%rsp)
6be9(5): jmp 0xfffffedb(%rip)
6bee(3): test %r11d,%r11d
6bf1(6): jnz 0xfffff49f(%rip)
6bf7(7): lea 0x1ab2e(%rip),%rax
6bfe(6): mov $0xffffffff,%r14d
6c04(5): mov %rax,0x38(%rsp)
6c09(5): jmp 0xfffff8e6(%rip)
6c0e(3): test %r11d,%r11d
6c11(6): jnz 0xfffff47f(%rip)
6c17(5): mov 0x8(%rsp),%r11d
6c1c(3): test %r11d,%r11d
6c1f(6): jnz 0xd50(%rip)
6c25(3): test %r10d,%r10d
6c28(6): jns 0xd47(%rip)
6c2e(7): lea 0x18fed(%rip),%rax
6c35(6): mov $0x4,%r14d
6c3b(8): mov $0x2b,0x8(%rsp)
6c43(5): mov %rax,0x38(%rsp)
6c48(5): jmp 0xfffff8a7(%rip)
6c4d(4): movzx 0xffffffff(%rbx),%ecx
6c51(4): lea 0xffffffff(%rbx),%rax
6c55(5): mov %rax,0x38(%rsp)
6c5a(3): test %r10d,%r10d
6c5d(5): mov $0x0,%eax
6c62(3): mov %r15,%rdx
6c65(4): cmovns %r10d,%eax
6c69(3): cmp $0x25,%cl
6c6c(3): not %rdx
6c6f(2): cwde 
6c71(6): jnz 0xfffff41a(%rip)
6c77(3): test %rax,%rax
6c7a(6): mov $0x1,%r14d
6c80(5): mov 0x38(%rsp),%rbp
6c85(4): cmovne %rax,%r14
6c89(6): mov $0x1,%r13d
6c8f(5): jmp 0xfffff445(%rip)
6c94(4): cmp $0x45,%r11d
6c98(6): jz 0xfffff3f8(%rip)
6c9e(3): test %r14b,%r14b
6ca1(6): jz 0xfffff58c(%rip)
6ca7(5): mov %r14b,0x34(%rsp)
6cac(5): jmp 0xfffff57e(%rip)
6cb1(3): test %r10d,%r10d
6cb4(5): mov $0x0,%eax
6cb9(6): mov $0x1,%r14d
6cbf(4): cmovns %r10d,%eax
6cc3(3): mov %r15,%rdx
6cc6(2): cwde 
6cc8(3): not %rdx
6ccb(3): test %rax,%rax
6cce(4): cmovne %rax,%r14
6cd2(3): test %r11d,%r11d
6cd5(6): jnz 0xa72(%rip)
6cdb(3): cmp %r14,%rdx
6cde(6): jbe 0xfffff261(%rip)
6ce4(3): test %r12,%r12
6ce7(6): jz 0xfffff2a3(%rip)
6ced(4): cmp $0x1,%r10d
6cf1(6): jle 0xfffff291(%rip)
6cf7(4): mov 0x8(%rsp),%eax
6cfb(3): movsxd %r10d,%r10
6cfe(4): lea 0xffffffff(%r10),%r13
6d02(3): cmp $0x30,%eax
6d05(6): jz 0xd29(%rip)
6d0b(2): xor %ebp,%ebp
6d0d(3): cmp $0x2b,%eax
6d10(6): jz 0xd1e(%rip)
6d16(3): mov %r12,%rsi
6d19(5): mov $0x20,%edi
6d1e(4): add $0x1,%rbp
6d22(5): call 0xffffb93e(%rip)
6d27(3): cmp %rbp,%r13
6d2a(2): jnz 0xffffffec(%rip)
6d2c(5): jmp 0xfffff253(%rip)
6d31(4): movzx 0x1(%rbx),%eax
6d35(4): lea 0x1(%rbx),%rdx
6d39(2): cmp $0x3a,%al
6d3b(6): jz 0xbe6(%rip)
6d41(6): mov $0x1,%r14d
6d47(2): cmp $0x7a,%al
6d49(6): jnz 0xfffff347(%rip)
6d4f(3): mov %rdx,%rbx
6d52(4): mov (%rsp),%rax
6d56(3): mov 0x20(%rax),%ecx
6d59(2): test %ecx,%ecx
6d5b(6): js 0x880(%rip)
6d61(4): mov 0x28(%rax),%rcx
6d65(6): mov $0x1,%r13d
6d6b(2): test %ecx,%ecx
6d6d(2): js 0x16(%rip)
6d6f(6): mov $0x0,%r13d
6d75(2): jnz 0xe(%rip)
6d77(5): mov 0x28(%rsp),%rax
6d7c(3): cmp $0x2d,(%rax)
6d7f(4): setz %r13b
6d83(2): mov %ecx,%eax
6d85(5): mov $0x91a2b3c5,%edx
6d8a(3): mov %ecx,%r9d
6d8d(2): imul %eax,%edx,%edx
6d8f(4): sar $0x1f,%r9d
6d93(6): mov $0x88888889,%r8d
6d99(2): mov %ecx,%eax
6d9b(2): add %ecx,%edx
6d9d(3): sar $0xb,%edx
6da0(3): sub %r9d,%edx
6da3(2): mov %edx,%ebp
6da5(3): imul %eax,%r8d,%edx
6da8(3): lea 0x0(%rdx,%rcx,1),%esi
6dab(3): sar $0x5,%esi
6dae(3): sub %r9d,%esi
6db1(2): mov %esi,%eax
6db3(3): imul %eax,%r8d,%edx
6db6(2): mov %esi,%eax
6db8(3): sar $0x1f,%eax
6dbb(4): lea 0x0(%rdx,%rsi,1),%r8d
6dbf(4): sar $0x5,%r8d
6dc3(3): sub %eax,%r8d
6dc6(2): mov %esi,%eax
6dc8(4): imul %r8d,$0x3c,%r8d
6dcc(3): imul %esi,$0x3c,%esi
6dcf(3): sub %r8d,%eax
6dd2(2): sub %esi,%ecx
6dd4(4): cmp $0x1,%r14
6dd8(3): mov %eax,%r8d
6ddb(6): jz 0xab2(%rip)
6de1(6): jb 0xb70(%rip)
6de7(4): cmp $0x2,%r14
6deb(6): jz 0x9a8(%rip)
6df1(4): cmp $0x3,%r14
6df5(6): jnz 0xb4f(%rip)
6dfb(2): test %ecx,%ecx
6dfd(6): jnz 0x996(%rip)
6e03(2): test %eax,%eax
6e05(6): jnz 0xa88(%rip)
6e0b(3): mov %r13d,%eax
6e0e(2): mov %ebp,%ecx
6e10(6): mov $0x1,%r9d
6e16(3): xor $0x1,%eax
6e19(5): mov $0x3,%esi
6e1e(5): jmp 0xfffff647(%rip)
6e23(5): nop 0x0(%rax,%rax,1)
6e28(4): cmp $0x45,%r11d
6e2c(6): jz 0xfffff264(%rip)
6e32(4): mov (%rsp),%r9
6e36(5): mov $0x92492493,%ecx
6e3b(4): mov 0x18(%r9),%eax
6e3f(3): lea 0x6(%rax),%esi
6e42(4): mov %eax,0x38(%rsp)
6e46(2): mov %esi,%eax
6e48(2): imul %eax,%ecx,%edx
6e4a(3): lea 0x0(%rdx,%rsi,1),%eax
6e4d(2): mov %esi,%edx
6e4f(3): sar $0x1f,%edx
6e52(3): sar $0x2,%eax
6e55(2): sub %edx,%eax
6e57(7): lea 0x0(,%rax,8),%edx
6e5e(2): sub %eax,%edx
6e60(2): mov %edx,%eax
6e62(4): mov 0x1c(%r9),%edx
6e66(2): sub %esi,%eax
6e68(4): lea 0x7(%rax,%rdx,1),%esi
6e6c(2): mov %esi,%eax
6e6e(2): imul %eax,%ecx,%edx
6e70(5): jmp 0xfffffad1(%rip)
6e75(4): cmp $0x45,%r11d
6e79(6): jz 0x5aa(%rip)
6e7f(4): cmp $0x4f,%r11d
6e83(6): jz 0xfffff20d(%rip)
6e89(4): mov (%rsp),%rax
6e8d(5): mov 0x8(%rsp),%r8d
6e92(3): mov 0x14(%rax),%eax
6e95(5): cmp $0xfffff894,%eax
6e9a(6): lea 0x76c(%rax),%ecx
6ea0(4): setl %r13b
6ea4(5): cmp $0xfffff894,%eax
6ea9(3): setnl %al
6eac(3): test %r8d,%r8d
6eaf(6): jnz 0x85f(%rip)
6eb5(4): mov 0x24(%rsp),%esi
6eb9(3): cmp $0x2b,%esi
6ebc(6): jz 0x6eb(%rip)
6ec2(4): mov %esi,0x8(%rsp)
6ec6(3): xor %r9d,%r9d
6ec9(5): mov $0x4,%esi
6ece(5): jmp 0xfffffbfe(%rip)
6ed3(5): movzx 0x34(%rsp),%edi
6ed8(3): test %r14b,%r14b
6edb(5): mov $0x0,%eax
6ee0(5): mov %r10d,0x38(%rsp)
6ee5(3): cmovne %eax,%edi
6ee8(5): mov %dil,0x34(%rsp)
6eed(5): mov 0x28(%rsp),%rdi
6ef2(5): call 0xffffb63e(%rip)
6ef7(5): movsxd 0x38(%rsp),%r10
6efc(3): mov %rax,%r13
6eff(5): mov $0x0,%eax
6f04(3): mov %r15,%rdx
6f07(3): not %rdx
6f0a(3): test %r10d,%r10d
6f0d(4): cmovns %r10,%rax
6f11(3): cmp %rax,%r13
6f14(3): mov %rax,%rbp
6f17(4): cmovnb %r13,%rbp
6f1b(3): cmp %rbp,%rdx
6f1e(6): jbe 0xfffff021(%rip)
6f24(3): test %r12,%r12
6f27(2): jz 0x78(%rip)
6f29(3): cmp %rax,%r13
6f2c(2): jnb 0x4f(%rip)
6f2e(4): mov 0x8(%rsp),%edi
6f32(3): mov %r10,%rax
6f35(3): sub %r13,%rax
6f38(5): mov %rax,0x38(%rsp)
6f3d(3): cmp $0x30,%edi
6f40(6): jz 0xa83(%rip)
6f46(3): cmp $0x2b,%edi
6f49(6): jz 0xa7a(%rip)
6f4f(2): xor %edx,%edx
6f51(3): test %rax,%rax
6f54(2): jz 0x27(%rip)
6f56(5): mov %rbx,0x8(%rsp)
6f5b(3): mov %rdx,%rbx
6f5e(3): mov %r12,%rsi
6f61(5): mov $0x20,%edi
6f66(4): add $0x1,%rbx
6f6a(5): call 0xffffb6f6(%rip)
6f6f(5): cmp %rbx,0x38(%rsp)
6f74(2): jnz 0xffffffea(%rip)
6f76(5): mov 0x8(%rsp),%rbx
6f7b(3): test %r14b,%r14b
6f7e(6): jnz 0x985(%rip)
6f84(5): cmp $0x0,0x34(%rsp)
6f89(6): jz 0x960(%rip)
6f8f(5): mov 0x28(%rsp),%rsi
6f94(3): mov %r13,%rdx
6f97(3): mov %r12,%rdi
6f9a(5): call 0xffffee86(%rip)
6f9f(3): add %rbp,%r15
6fa2(3): mov %rbx,%rbp
6fa5(5): jmp 0xffffefeb(%rip)
6faa(4): cmp $0x45,%r11d
6fae(6): jz 0x475(%rip)
6fb4(4): mov (%rsp),%rax
6fb8(5): mov $0x51eb851f,%edx
6fbd(3): mov 0x14(%rax),%esi
6fc0(2): mov %esi,%eax
6fc2(2): imul %eax,%edx,%edx
6fc4(2): mov %esi,%eax
6fc6(3): sar $0x1f,%eax
6fc9(2): mov %edx,%ecx
6fcb(3): sar $0x5,%ecx
6fce(2): sub %eax,%ecx
6fd0(2): mov %esi,%eax
6fd2(3): imul %ecx,$0x64,%ecx
6fd5(2): sub %ecx,%eax
6fd7(2): mov %eax,%ecx
6fd9(6): jns 0xfffffacc(%rip)
6fdf(2): neg %eax
6fe1(3): add $0x64,%ecx
6fe4(6): cmp $0xfffff893,%esi
6fea(3): cmovng %eax,%ecx
6fed(5): jmp 0xfffffab8(%rip)
6ff2(4): cmp $0x45,%r11d
6ff6(6): jz 0xfffff09a(%rip)
6ffc(4): mov (%rsp),%rax
7000(5): mov $0x2,%esi
7005(3): mov 0xc(%rax),%ecx
7008(5): jmp 0xfffff448(%rip)
700d(4): cmp $0x45,%r11d
7011(6): jz 0xfffff07f(%rip)
7017(4): mov (%rsp),%rax
701b(3): mov 0xc(%rax),%ecx
701e(5): mov 0x8(%rsp),%r8d
7023(5): mov $0x2,%esi
7028(3): test %r8d,%r8d
702b(6): jnz 0xfffff425(%rip)
7031(8): mov $0x5f,0x8(%rsp)
7039(5): jmp 0xfffff417(%rip)
703e(4): cmp $0x45,%r11d
7042(6): jz 0xfffff04e(%rip)
7048(4): mov (%rsp),%rax
704c(5): mov $0x3,%esi
7051(3): mov 0x1c(%rax),%eax
7054(3): cmp $0xff,%eax
7057(3): lea 0x1(%rax),%ecx
705a(4): setl %r13b
705e(3): cmp $0xff,%eax
7061(3): setnl %al
7064(3): xor %r8d,%r8d
7067(3): xor %r9d,%r9d
706a(5): jmp 0xfffff3fb(%rip)
706f(4): cmp $0x45,%r11d
7073(6): jz 0xfffff01d(%rip)
7079(4): mov (%rsp),%rax
707d(3): mov 0x8(%rax),%ecx
7080(2): jmp 0xffffff9e(%rip)
7082(4): cmp $0x45,%r11d
7086(6): jz 0xfffff00a(%rip)
708c(4): mov 0x30(%rsp),%ecx
7090(2): jmp 0xffffff8e(%rip)
7092(4): cmp $0x45,%r11d
7096(6): jz 0xffffeffa(%rip)
709c(4): mov (%rsp),%rax
70a0(5): mov $0x2,%esi
70a5(3): mov 0x10(%rax),%eax
70a8(3): cmp $0xff,%eax
70ab(3): lea 0x1(%rax),%ecx
70ae(4): setl %r13b
70b2(3): cmp $0xff,%eax
70b5(3): setnl %al
70b8(3): xor %r8d,%r8d
70bb(3): xor %r9d,%r9d
70be(5): jmp 0xfffff3a7(%rip)
70c3(3): test %r10d,%r10d
70c6(6): mov $0x0,%r13d
70cc(5): mov $0x1,%eax
70d1(4): cmovns %r10d,%r13d
70d5(3): movsxd %r13d,%r13
70d8(3): test %r13,%r13
70db(4): cmove %rax,%r13
70df(3): mov %r15,%rax
70e2(3): not %rax
70e5(3): cmp %r13,%rax
70e8(6): jbe 0xffffee57(%rip)
70ee(3): test %r12,%r12
70f1(6): jz 0xfffff46e(%rip)
70f7(4): cmp $0x1,%r10d
70fb(2): jle 0x37(%rip)
70fd(4): mov 0x8(%rsp),%eax
7101(3): movsxd %r10d,%r10
7104(4): lea 0xffffffff(%r10),%r14
7108(3): cmp $0x30,%eax
710b(6): jz 0x7c1(%rip)
7111(2): xor %ebp,%ebp
7113(3): cmp $0x2b,%eax
7116(6): jz 0x7b6(%rip)
711c(3): mov %r12,%rsi
711f(5): mov $0x20,%edi
7124(4): add $0x1,%rbp
7128(5): call 0xffffb538(%rip)
712d(3): cmp %rbp,%r14
7130(2): jnz 0xffffffec(%rip)
7132(3): mov %r12,%rsi
7135(5): mov $0xa,%edi
713a(5): call 0xffffb526(%rip)
713f(5): jmp 0xfffff420(%rip)
7144(2): xor %eax,%eax
7146(5): jmp 0xfffff380(%rip)
714b(5): movzx 0x34(%rsp),%eax
7150(3): test %r14b,%r14b
7153(4): cmovne %r14d,%eax
7157(4): cmp $0x45,%r11d
715b(6): jz 0x7bd(%rip)
7161(3): mov %edi,%r13d
7164(4): mov %al,0x34(%rsp)
7168(3): xor %r14d,%r14d
716b(5): jmp 0xfffff0c2(%rip)
7170(3): xor %r14d,%r14d
7173(5): jmp 0xfffffbdf(%rip)
7178(8): nop 0x0(%rax,%rax,1)
7180(2): mov %ecx,%eax
7182(2): neg %eax
7184(3): test %r13b,%r13b
7187(3): cmovne %eax,%ecx
718a(5): jmp 0xfffff5de(%rip)
718f(1): nop 
7190(5): cmp $0x2d,0x8(%rsp)
7195(5): mov $0x2d,%ebp
719a(6): jnz 0xfffff657(%rip)
71a0(5): mov $0x2d,0x40(%rsp)
71a5(3): test %r10d,%r10d
71a8(5): mov $0x0,%ecx
71ad(5): mov $0x1,%eax
71b2(4): cmovns %r10d,%ecx
71b6(3): movsxd %ecx,%r13
71b9(3): test %r13,%r13
71bc(4): cmovne %r13,%rax
71c0(3): mov %rax,%rdi
71c3(5): mov %rax,0x8(%rsp)
71c8(3): mov %r15,%rax
71cb(3): not %rax
71ce(3): cmp %rdi,%rax
71d1(6): jbe 0xffffed6e(%rip)
71d7(3): test %r12,%r12
71da(2): jz 0x5f(%rip)
71dc(4): mov 0x58(%rsp),%edi
71e0(2): test %edi,%edi
71e2(2): jnz 0x40(%rip)
71e4(4): cmp $0x1,%r13
71e8(2): jbe 0x3a(%rip)
71ea(3): movsxd %r10d,%rax
71ed(4): sub $0x1,%rax
71f1(2): jz 0x31(%rip)
71f3(5): mov %rbx,0x48(%rsp)
71f8(2): xor %ebp,%ebp
71fa(3): mov %rax,%rbx
71fd(5): mov %r10d,0x50(%rsp)
7202(3): mov %r12,%rsi
7205(5): mov $0x20,%edi
720a(4): add $0x1,%rbp
720e(5): call 0xffffb452(%rip)
7213(3): cmp %rbp,%rbx
7216(2): jnz 0xffffffec(%rip)
7218(5): mov 0x48(%rsp),%rbx
721d(5): mov 0x50(%rsp),%r10d
7222(5): movsx 0x40(%rsp),%edi
7227(3): mov %r12,%rsi
722a(5): mov %r10d,0x48(%rsp)
722f(5): call 0xffffb431(%rip)
7234(5): mov 0x48(%rsp),%r10d
7239(5): add 0x8(%rsp),%r15
723e(5): mov 0x38(%rsp),%rax
7243(3): mov %rbx,%rbp
7246(8): mov $0x2d,0x8(%rsp)
724e(4): add $0x17,%rax
7252(3): sub %r14,%rax
7255(3): mov %r15,%rdx
7258(5): mov %rax,0x40(%rsp)
725d(3): not %rdx
7260(5): jmp 0xfffff43c(%rip)
7265(3): nop (%rax)
7268(5): mov 0x38(%rsp),%rdi
726d(3): mov %r12,%rcx
7270(5): mov $0x1,%edx
7275(3): mov %r13,%rsi
7278(5): call 0xffffb6e8(%rip)
727d(5): jmp 0xffffeed1(%rip)
7282(6): nop 0x0(%rax,%rax,1)
7288(5): mov 0x38(%rsp),%rdi
728d(3): mov %r12,%rcx
7290(5): mov $0x1,%edx
7295(3): mov %r13,%rsi
7298(4): add $0x1,%rdi
729c(5): call 0xffffb6c4(%rip)
72a1(5): jmp 0xfffff0a2(%rip)
72a6(a): nop 0x0(%rax,%rax,1)
72b0(5): mov 0x38(%rsp),%rsi
72b5(3): mov %r13,%rdx
72b8(3): mov %r12,%rdi
72bb(4): add $0x1,%rsi
72bf(5): call 0xffffeb01(%rip)
72c4(5): jmp 0xfffff07f(%rip)
72c9(7): nop 0x0(%rax)
72d0(5): mov 0x40(%rsp),%rsi
72d5(3): mov %r12,%rcx
72d8(5): mov $0x1,%edx
72dd(3): mov %r14,%rdi
72e0(5): call 0xffffb680(%rip)
72e5(5): jmp 0xfffff449(%rip)
72ea(6): nop 0x0(%rax,%rax,1)
72f0(3): test %rbx,%rbx
72f3(6): jz 0xfffff028(%rip)
72f9(2): xor %edx,%edx
72fb(5): mov %rbp,0x8(%rsp)
7300(3): mov %rdx,%rbp
7303(5): nop 0x0(%rax,%rax,1)
7308(3): mov %r12,%rsi
730b(5): mov $0x30,%edi
7310(4): add $0x1,%rbp
7314(5): call 0xffffb34c(%rip)
7319(3): cmp %rbp,%rbx
731c(2): jnz 0xffffffec(%rip)
731e(5): jmp 0xffffeff8(%rip)
7323(3): test %rbx,%rbx
7326(6): jz 0xffffee0d(%rip)
732c(2): xor %edx,%edx
732e(5): mov %rbp,0x8(%rsp)
7333(3): mov %rdx,%rbp
7336(a): nop 0x0(%rax,%rax,1)
7340(3): mov %r12,%rsi
7343(5): mov $0x30,%edi
7348(4): add $0x1,%rbp
734c(5): call 0xffffb314(%rip)
7351(3): cmp %rbp,%rbx
7354(2): jnz 0xffffffec(%rip)
7356(5): jmp 0xffffedd8(%rip)
735b(3): cmp %rdx,%rax
735e(2): jnb 0x59(%rip)
7360(3): movsxd %r10d,%rdx
7363(3): mov %rdx,%rdi
7366(3): sub %rax,%rdi
7369(4): mov 0x8(%rsp),%eax
736d(3): cmp $0x30,%eax
7370(6): jz 0x3ea(%rip)
7376(3): cmp $0x2b,%eax
7379(6): jz 0x3e1(%rip)
737f(2): xor %edx,%edx
7381(3): test %rdi,%rdi
7384(2): jz 0x33(%rip)
7386(4): mov %ebp,0x34(%rsp)
738a(5): mov %rbx,0x40(%rsp)
738f(3): mov %rdi,%rbp
7392(3): mov %rdx,%rbx
7395(3): nop (%rax)
7398(3): mov %r12,%rsi
739b(5): mov $0x20,%edi
73a0(4): add $0x1,%rbx
73a4(5): call 0xffffb2bc(%rip)
73a9(3): cmp %rbx,%rbp
73ac(2): jnz 0xffffffec(%rip)
73ae(4): mov 0x34(%rsp),%ebp
73b2(5): mov 0x40(%rsp),%rbx
73b7(4): sub $0x8,%rsp
73bb(3): mov %r14d,%r9d
73be(2): mov %ebp,%ecx
73c0(7): mov 0x508(%rsp),%eax
73c7(3): mov %r12,%rdi
73ca(1): push %rax
73cb(4): push 0x20(%rsp)
73cf(4): push 0x30(%rsp)
73d3(5): mov 0x28(%rsp),%r8d
73d8(5): mov 0x20(%rsp),%rdx
73dd(5): mov 0x58(%rsp),%rsi
73e2(5): call 0xffffea9e(%rip)
73e7(4): add $0x20,%rsp
73eb(5): jmp 0xfffff174(%rip)
73f0(3): test %r13,%r13
73f3(6): jz 0xfffff320(%rip)
73f9(2): xor %edx,%edx
73fb(5): mov %rbx,0x8(%rsp)
7400(3): mov %rdx,%rbx
7403(5): nop 0x0(%rax,%rax,1)
7408(3): mov %r12,%rsi
740b(5): mov $0x30,%edi
7410(4): add $0x1,%rbx
7414(5): call 0xffffb24c(%rip)
7419(3): cmp %rbx,%r13
741c(2): jnz 0xffffffec(%rip)
741e(5): jmp 0xfffff2f0(%rip)
7423(2): xor %esi,%esi
7425(5): jmp 0xfffff055(%rip)
742a(6): mov $0x70,%r13d
7430(5): mov $0x0,0x34(%rsp)
7435(5): jmp 0xffffedf8(%rip)
743a(2): xor %ebp,%ebp
743c(3): movsxd %r13d,%rax
743f(3): cmp %rdx,%rax
7442(5): mov %rax,0x8(%rsp)
7447(6): jnb 0xffffeaf8(%rip)
744d(3): test %r12,%r12
7450(2): jz 0x45(%rip)
7452(2): xor %edx,%edx
7454(5): mov %bpl,0x40(%rsp)
7459(5): mov %rbx,0x48(%rsp)
745e(3): mov %rdx,%rbp
7461(3): mov %rax,%rbx
7464(5): mov %r10d,0x50(%rsp)
7469(7): nop 0x0(%rax)
7470(3): mov %r12,%rsi
7473(5): mov $0x20,%edi
7478(4): add $0x1,%rbp
747c(5): call 0xffffb1e4(%rip)
7481(3): cmp %rbp,%rbx
7484(2): jnbe 0xffffffec(%rip)
7486(5): movzx 0x40(%rsp),%ebp
748b(5): mov 0x48(%rsp),%rbx
7490(5): mov 0x50(%rsp),%r10d
7495(5): add 0x8(%rsp),%r15
749a(3): mov %r10d,%eax
749d(3): sub %r13d,%eax
74a0(3): cmp %r13d,%r10d
74a3(6): mov $0x0,%r10d
74a9(4): cmovnl %eax,%r10d
74ad(3): test %bpl,%bpl
74b0(3): mov %r15,%rdx
74b3(3): not %rdx
74b6(6): jnz 0x12d(%rip)
74bc(5): mov 0x38(%rsp),%rax
74c1(3): movsxd %r10d,%r13
74c4(3): mov %rbx,%rbp
74c7(8): mov $0x5f,0x8(%rsp)
74cf(4): add $0x17,%rax
74d3(3): sub %r14,%rax
74d6(5): mov %rax,0x40(%rsp)
74db(5): jmp 0xfffff1c1(%rip)
74e0(3): test %r10d,%r10d
74e3(5): mov $0x0,%ecx
74e8(5): mov $0x1,%eax
74ed(4): cmovns %r10d,%ecx
74f1(3): movsxd %ecx,%r13
74f4(3): test %r13,%r13
74f7(4): cmovne %r13,%rax
74fb(3): cmp %rdx,%rax
74fe(5): mov %rax,0x48(%rsp)
7503(6): jnb 0xffffea3c(%rip)
7509(3): test %r12,%r12
750c(2): jz 0x7e(%rip)
750e(4): mov 0x58(%rsp),%ecx
7512(2): test %ecx,%ecx
7514(2): jnz 0x60(%rip)
7516(4): cmp $0x1,%r13
751a(2): jbe 0x5a(%rip)
751c(4): mov 0x8(%rsp),%edi
7520(3): movsxd %r10d,%rax
7523(4): sub $0x1,%rax
7527(5): mov %rax,0x38(%rsp)
752c(3): cmp $0x30,%edi
752f(6): jz 0x4c7(%rip)
7535(3): cmp $0x2b,%edi
7538(6): jz 0x4be(%rip)
753e(2): xor %edx,%edx
7540(3): test %rax,%rax
7543(2): jz 0x31(%rip)
7545(5): mov %rbx,0x50(%rsp)
754a(5): mov %r10d,0x5c(%rsp)
754f(3): mov %rdx,%rbx
7552(3): mov %r12,%rsi
7555(5): mov $0x20,%edi
755a(4): add $0x1,%rbx
755e(5): call 0xffffb102(%rip)
7563(5): cmp %rbx,0x38(%rsp)
7568(2): jnz 0xffffffea(%rip)
756a(5): mov 0x50(%rsp),%rbx
756f(5): mov 0x5c(%rsp),%r10d
7574(4): movsx %bpl,%edi
7578(3): mov %r12,%rsi
757b(5): mov %r10d,0x38(%rsp)
7580(5): call 0xffffb0e0(%rip)
7585(5): mov 0x38(%rsp),%r10d
758a(5): add 0x48(%rsp),%r15
758f(3): mov %rbx,%rbp
7592(3): mov %r15,%rdx
7595(3): not %rdx
7598(5): jmp 0xfffff104(%rip)
759d(5): mov $0x2b,0x40(%rsp)
75a2(5): jmp 0xfffffc03(%rip)
75a7(5): mov $0x4,%esi
75ac(5): mov $0x270f,%edx
75b1(2): cmp %ecx,%edx
75b3(6): mov $0x1,%r9d
75b9(8): mov $0x2b,0x8(%rsp)
75c1(6): jb 0xfffff50b(%rip)
75c7(3): cmp %esi,%r10d
75ca(8): mov $0x2b,0x8(%rsp)
75d2(4): setnle %r9b
75d6(5): jmp 0xfffff4f6(%rip)
75db(3): mov %rbx,%rbp
75de(5): jmp 0xffffe9b2(%rip)
75e3(3): movsxd %r10d,%rcx
75e6(6): mov $0x1,%r13d
75ec(3): test %rcx,%rcx
75ef(4): cmovne %rcx,%r13
75f3(3): cmp %rdx,%r13
75f6(5): mov %r13,0x8(%rsp)
75fb(6): jnb 0xffffe944(%rip)
7601(3): test %r12,%r12
7604(2): jz 0x71(%rip)
7606(4): mov 0x58(%rsp),%esi
760a(2): test %esi,%esi
760c(2): jnz 0x49(%rip)
760e(4): cmp $0x1,%r10d
7612(2): jbe 0x43(%rip)
7614(4): lea 0xffffffff(%rcx),%rax
7618(3): xor %r13d,%r13d
761b(5): mov %rbx,0x48(%rsp)
7620(5): mov %r10d,0x50(%rsp)
7625(3): mov %r13,%rbx
7628(3): mov %rcx,%r13
762b(5): mov %rax,0x40(%rsp)
7630(3): mov %r12,%rsi
7633(5): mov $0x20,%edi
7638(4): add $0x1,%rbx
763c(5): call 0xffffb024(%rip)
7641(5): cmp %rbx,0x40(%rsp)
7646(2): jnz 0xffffffea(%rip)
7648(5): mov 0x48(%rsp),%rbx
764d(5): mov 0x50(%rsp),%r10d
7652(3): mov %r13,%rcx
7655(4): movsx %bpl,%edi
7659(3): mov %r12,%rsi
765c(5): mov %r10d,0x48(%rsp)
7661(5): mov %rcx,0x40(%rsp)
7666(5): call 0xffffaffa(%rip)
766b(5): mov 0x48(%rsp),%r10d
7670(5): mov 0x40(%rsp),%rcx
7675(5): add 0x8(%rsp),%r15
767a(5): mov 0x38(%rsp),%rax
767f(3): mov %rcx,%r13
7682(3): mov %rbx,%rbp
7685(8): mov $0x5f,0x8(%rsp)
768d(4): add $0x17,%rax
7691(3): sub %r14,%rax
7694(3): mov %r15,%rdx
7697(5): mov %rax,0x40(%rsp)
769c(3): not %rdx
769f(5): jmp 0xffffeffd(%rip)
76a4(5): mov $0xfffff894,%eax
76a9(3): sub %r8d,%eax
76ac(2): cmp %eax,%esi
76ae(6): jnl 0x3cf(%rip)
76b4(2): neg %ecx
76b6(5): cmp $0x0,0x8(%rsp)
76bb(6): jnz 0xfffff3f6(%rip)
76c1(4): mov 0x24(%rsp),%eax
76c5(3): cmp $0x2b,%eax
76c8(6): jz 0x383(%rip)
76ce(4): mov %eax,0x8(%rsp)
76d2(3): xor %r9d,%r9d
76d5(5): mov $0x1,%eax
76da(3): xor %r13d,%r13d
76dd(5): mov $0x2,%esi
76e2(5): jmp 0xfffff3ea(%rip)
76e7(5): mov $0xfffff894,%eax
76ec(5): mov 0x8(%rsp),%r9d
76f1(8): lea 0x76c(%rsi,%r8,1),%ecx
76f9(3): sub %r8d,%eax
76fc(2): cmp %eax,%esi
76fe(4): setl %r13b
7702(3): setnl %al
7705(3): test %r9d,%r9d
7708(6): jz 0xfffff7ad(%rip)
770e(5): cmp $0x2b,0x8(%rsp)
7713(6): jz 0xfffffe94(%rip)
7719(3): xor %r9d,%r9d
771c(5): mov $0x4,%esi
7721(5): jmp 0xfffff3ab(%rip)
7726(a): nop 0x0(%rax,%rax,1)
7730(7): mov 0x500(%rsp),%ecx
7737(5): mov $0x9,%esi
773c(6): mov $0x9,%r10d
7742(5): jmp 0xffffed0e(%rip)
7747(3): mov %rbx,%rbp
774a(5): mov %rbx,0x38(%rsp)
774f(6): mov $0x1,%r13d
7755(5): jmp 0xffffe97f(%rip)
775a(3): test %rdi,%rdi
775d(6): jz 0xfffffc5a(%rip)
7763(2): xor %edx,%edx
7765(4): mov %ebp,0x34(%rsp)
7769(5): mov %rbx,0x40(%rsp)
776e(3): mov %rdi,%rbp
7771(3): mov %rdx,%rbx
7774(4): nop 0x0(%rax)
7778(3): mov %r12,%rsi
777b(5): mov $0x30,%edi
7780(4): add $0x1,%rbx
7784(5): call 0xffffaedc(%rip)
7789(3): cmp %rbx,%rbp
778c(2): jnz 0xffffffec(%rip)
778e(5): jmp 0xfffffc20(%rip)
7793(4): imul %r8d,$0x64,%r8d
7797(6): mov $0x1,%r9d
779d(5): mov $0x9,%esi
77a2(6): imul %ebp,$0x2710,%eax
77a8(3): add %r8d,%eax
77ab(6): mov $0x14,%r8d
77b1(2): add %eax,%ecx
77b3(3): mov %r13d,%eax
77b6(3): xor $0x1,%eax
77b9(5): jmp 0xffffecac(%rip)
77be(5): cmp $0x5f,0x8(%rsp)
77c3(6): jz 0xfffffc77(%rip)
77c9(5): movsxd 0x58(%rsp),%rax
77ce(3): cmp %rdx,%rax
77d1(6): jb 0xfffff100(%rip)
77d7(5): jmp 0xffffe768(%rip)
77dc(4): nop 0x0(%rax)
77e0(4): sub $0x1,%r9d
77e4(5): mov $0x16d,%edx
77e9(4): test $0x3,%r9b
77ed(2): jnz 0x3c(%rip)
77ef(3): mov %r9d,%eax
77f2(5): mov $0x51eb851f,%edx
77f7(2): imul %eax,%edx,%edx
77f9(3): mov %r9d,%eax
77fc(3): sar $0x1f,%eax
77ff(3): sar $0x5,%edx
7802(2): sub %eax,%edx
7804(3): imul %edx,$0x64,%eax
7807(5): mov $0x16e,%edx
780c(3): cmp %eax,%r9d
780f(2): jnz 0x1a(%rip)
7811(3): mov %r9d,%eax
7814(5): mov $0x190,%ecx
7819(1): cdq %eax
781a(2): idiv %ecx,%eax
781c(3): cmp $0x1,%edx
781f(2): sbb %edx,%edx
7821(2): not %edx
7823(6): add $0x16e,%edx
7829(3): add %edx,%r8d
782c(5): mov $0x92492493,%edx
7831(3): mov %r8d,%ecx
7834(3): sub %r14d,%ecx
7837(6): add $0x17e,%ecx
783d(2): mov %ecx,%eax
783f(3): sub %ecx,%r8d
7842(2): imul %eax,%edx,%edx
7844(3): lea 0x0(%rdx,%rcx,1),%eax
7847(2): mov %ecx,%edx
7849(3): sar $0x1f,%edx
784c(3): sar $0x2,%eax
784f(2): sub %edx,%eax
7851(7): lea 0x0(,%rax,8),%edx
7858(2): sub %eax,%edx
785a(5): lea 0x3(%r8,%rdx,1),%ecx
785f(6): mov $0xffffffff,%r8d
7865(5): jmp 0xfffff1ea(%rip)
786a(2): mov %ecx,%eax
786c(5): mov $0x92492493,%edx
7871(5): mov $0x2,%esi
7876(2): imul %eax,%edx,%edx
7878(3): lea 0x0(%rdx,%rcx,1),%eax
787b(3): sar $0x1f,%ecx
787e(3): sar $0x2,%eax
7881(2): sub %ecx,%eax
7883(2): mov %eax,%ecx
7885(3): add $0x1,%ecx
7888(5): jmp 0xffffebc8(%rip)
788d(3): imul %ebp,$0x64,%ecx
7890(3): mov %r13d,%eax
7893(6): mov $0x1,%r9d
7899(3): xor $0x1,%eax
789c(5): mov $0x6,%esi
78a1(3): add %r8d,%ecx
78a4(6): mov $0x4,%r8d
78aa(5): jmp 0xffffebbb(%rip)
78af(2): xor %ebp,%ebp
78b1(3): mov %r12,%rsi
78b4(5): mov $0x30,%edi
78b9(4): add $0x1,%rbp
78bd(5): call 0xffffada3(%rip)
78c2(3): cmp %rbp,%r14
78c5(2): jnz 0xffffffec(%rip)
78c7(5): jmp 0xffffeb38(%rip)
78cc(2): xor %ebp,%ebp
78ce(3): mov %r12,%rsi
78d1(5): mov $0x30,%edi
78d6(4): add $0x1,%rbp
78da(5): call 0xffffad86(%rip)
78df(3): cmp %rbp,%r14
78e2(2): jnz 0xffffffec(%rip)
78e4(5): jmp 0xfffff84e(%rip)
78e9(5): mov 0x28(%rsp),%rdi
78ee(3): mov %r12,%rcx
78f1(5): mov $0x1,%edx
78f6(3): mov %r13,%rsi
78f9(5): call 0xffffb067(%rip)
78fe(5): jmp 0xfffff6a1(%rip)
7903(5): mov 0x28(%rsp),%rsi
7908(3): mov %r13,%rdx
790b(3): mov %r12,%rdi
790e(5): call 0xffffe4b2(%rip)
7913(5): jmp 0xfffff68c(%rip)
7918(4): mov %al,0x34(%rsp)
791c(5): jmp 0xffffe774(%rip)
7921(4): lea 0x2(%rbx),%rcx
7925(6): mov $0x1,%r14d
792b(3): mov %rcx,%rdx
792e(4): add $0x1,%rcx
7932(4): movzx 0xffffffff(%rcx),%eax
7936(4): add $0x1,%r14
793a(2): cmp $0x3a,%al
793c(6): jnz 0xfffff40b(%rip)
7942(2): jmp 0xffffffe9(%rip)
7944(3): movzx (%rbx),%ecx
7947(5): mov %rbx,0x38(%rsp)
794c(5): jmp 0xfffff30e(%rip)
7951(3): imul %ebp,$0x64,%ecx
7954(3): xor %r8d,%r8d
7957(6): mov $0x1,%r9d
795d(5): mov $0x5,%esi
7962(2): add %eax,%ecx
7964(3): mov %r13d,%eax
7967(3): xor $0x1,%eax
796a(5): jmp 0xffffeafb(%rip)
796f(3): mov %r10d,%r14d
7972(5): mov $0x0,%eax
7977(4): sub $0x6,%r14d
797b(4): cmovs %eax,%r14d
797f(7): lea 0x1829c(%rip),%rax
7986(5): mov %rax,0x38(%rsp)
798b(5): jmp 0xffffeb64(%rip)
7990(6): cmp $0x0,0x38(%rsp)
7996(6): jz 0xffffef2a(%rip)
799c(2): xor %edx,%edx
799e(5): mov %rbx,0x50(%rsp)
79a3(3): mov %rdx,%rbx
79a6(3): mov %r12,%rsi
79a9(5): mov $0x30,%edi
79ae(4): add $0x1,%rbx
79b2(5): call 0xffffacae(%rip)
79b7(5): cmp %rbx,0x38(%rsp)
79bc(2): jnz 0xffffffea(%rip)
79be(5): jmp 0xffffeefd(%rip)
79c3(6): cmp $0x0,0x38(%rsp)
79c9(6): jz 0xfffff5b2(%rip)
79cf(2): xor %edx,%edx
79d1(5): mov %rbx,0x8(%rsp)
79d6(3): mov %rdx,%rbx
79d9(3): mov %r12,%rsi
79dc(5): mov $0x30,%edi
79e1(4): add $0x1,%rbx
79e5(5): call 0xffffac7b(%rip)
79ea(5): cmp %rbx,0x38(%rsp)
79ef(2): jnz 0xffffffea(%rip)
79f1(5): jmp 0xfffff585(%rip)
79f6(6): cmp $0x0,0x38(%rsp)
79fc(6): jz 0xfffffb78(%rip)
7a02(2): xor %edx,%edx
7a04(5): mov %rbx,0x50(%rsp)
7a09(5): mov %r10d,0x5c(%rsp)
7a0e(3): mov %rdx,%rbx
7a11(3): mov %r12,%rsi
7a14(5): mov $0x30,%edi
7a19(4): add $0x1,%rbx
7a1d(5): call 0xffffac43(%rip)
7a22(5): cmp %rbx,0x38(%rsp)
7a27(2): jnz 0xffffffea(%rip)
7a29(5): jmp 0xfffffb41(%rip)
7a2e(2): xor %ebp,%ebp
7a30(3): mov %r12,%rsi
7a33(5): mov $0x30,%edi
7a38(4): add $0x1,%rbp
7a3c(5): call 0xffffac24(%rip)
7a41(3): cmp %rbp,%r13
7a44(2): jnz 0xffffffec(%rip)
7a46(5): jmp 0xffffe539(%rip)
7a4b(5): mov $0x1,%eax
7a50(3): xor %r13d,%r13d
7a53(5): mov $0x2,%esi
7a58(5): jmp 0xfffffb6f(%rip)
7a5d(5): mov $0x2,%esi
7a62(5): mov $0x63,%edx
7a67(5): jmp 0xfffffb4a(%rip)
7a6c(7): mov 0x500(%rsp),%ecx
7a73(5): jmp 0xfffff0e4(%rip)
7a78(5): call 0xffffaae8(%rip)
7a7d(3): add $0x64,%ecx
7a80(5): cmp $0x0,0x8(%rsp)
7a85(6): jz 0xfffffc3c(%rip)
7a8b(5): jmp 0xfffff026(%rip)
7a90(2): xor %esi,%esi
7a92(5): jmp 0xffffe9f8(%rip)

"fprintftime" :
7aa0(4): sub $0x20,%rsp
7aa4(6): mov $0xffffffff,%r9d
7aaa(9): mov $0x28,%rax
7ab3(5): mov %rax,0x10(%rsp)
7ab8(2): xor %eax,%eax
7aba(5): mov $0x0,0xf(%rsp)
7abf(2): push %r8
7ac1(3): xor %r8d,%r8d
7ac4(1): push %rcx
7ac5(2): xor %ecx,%ecx
7ac7(5): lea 0x1f(%rsp),%rax
7acc(1): push %rax
7acd(5): call 0xffffe3b3(%rip)
7ad2(4): add $0x20,%rsp
7ad6(5): mov 0x8(%rsp),%rdx
7adb(9): xor $0x28,%rdx
7ae4(2): jnz 0x7(%rip)
7ae6(4): add $0x18,%rsp
7aea(1): ret near (%rsp)
7aeb(5): call 0xffffaa75(%rip)

"protect_fd" :
7af0(1): push %rbp
7af1(1): push %rbx
7af2(2): mov %edi,%ebp
7af4(7): lea 0x19e29(%rip),%rdi
7afb(2): xor %esi,%esi
7afd(2): xor %eax,%eax
7aff(4): sub $0x8,%rsp
7b03(5): mov $0x1,%ebx
7b08(5): call 0xffffada8(%rip)
7b0d(2): cmp %eax,%ebp
7b0f(2): jz 0x1a(%rip)
7b11(2): xor %ebx,%ebx
7b13(2): test %eax,%eax
7b15(2): js 0x14(%rip)
7b17(2): mov %eax,%edi
7b19(5): call 0xffffab27(%rip)
7b1e(5): call 0xffffa8f2(%rip)
7b23(6): mov $0x9,(%rax)
7b29(4): add $0x8,%rsp
7b2d(2): mov %ebx,%eax
7b2f(1): pop %rbx
7b30(1): pop %rbp
7b31(1): ret near (%rsp)

"freopen_safer" :
7b40(2): push %r15
7b42(2): push %r14
7b44(3): mov %rsi,%r15
7b47(2): push %r13
7b49(2): push %r12
7b4b(3): mov %rdx,%r12
7b4e(1): push %rbp
7b4f(1): push %rbx
7b50(4): sub $0x18,%rsp
7b54(5): mov %rdi,0x8(%rsp)
7b59(3): mov %rdx,%rdi
7b5c(5): call 0xffffabd4(%rip)
7b61(2): mov %eax,%ebx
7b63(5): call 0xffffa8ad(%rip)
7b68(3): cmp $0x1,%ebx
7b6b(3): mov %rax,%r14
7b6e(6): jz 0x162(%rip)
7b74(3): cmp $0x2,%ebx
7b77(6): jz 0x149(%rip)
7b7d(2): test %ebx,%ebx
7b7f(6): jz 0xb9(%rip)
7b85(5): mov $0x2,%esi
7b8a(5): mov $0x2,%edi
7b8f(5): call 0xffffaa01(%rip)
7b94(3): cmp $0x2,%eax
7b97(3): setnz %bl
7b9a(5): mov $0x1,%esi
7b9f(5): mov $0x1,%edi
7ba4(5): call 0xffffa9ec(%rip)
7ba9(3): cmp $0x1,%eax
7bac(4): setnz %bpl
7bb0(2): xor %esi,%esi
7bb2(2): xor %edi,%edi
7bb4(5): call 0xffffa9dc(%rip)
7bb9(2): test %eax,%eax
7bbb(6): jz 0x8d(%rip)
7bc1(2): xor %edi,%edi
7bc3(5): call 0xffffff2d(%rip)
7bc8(2): test %al,%al
7bca(3): mov %eax,%r13d
7bcd(6): jz 0x113(%rip)
7bd3(3): test %bpl,%bpl
7bd6(2): jnz 0x7a(%rip)
7bd8(2): test %bl,%bl
7bda(2): jz 0x16(%rip)
7bdc(5): mov $0x2,%edi
7be1(5): call 0xffffff0f(%rip)
7be6(2): test %al,%al
7be8(2): mov %eax,%ebx
7bea(6): jz 0xb6(%rip)
7bf0(5): mov 0x8(%rsp),%rdi
7bf5(3): mov %r12,%rdx
7bf8(3): mov %r15,%rsi
7bfb(5): call 0xffffaa35(%rip)
7c00(3): mov %rax,%r12
7c03(2): test %bl,%bl
7c05(3): mov (%r14),%r15d
7c08(6): jnz 0xa8(%rip)
7c0e(3): test %bpl,%bpl
7c11(2): jnz 0x6f(%rip)
7c13(3): test %r13b,%r13b
7c16(2): jnz 0x79(%rip)
7c18(3): test %r12,%r12
7c1b(2): jnz 0x5(%rip)
7c1d(3): mov %r15d,(%r14)
7c20(4): add $0x18,%rsp
7c24(3): mov %r12,%rax
7c27(1): pop %rbx
7c28(1): pop %rbp
7c29(2): pop %r12
7c2b(2): pop %r13
7c2d(2): pop %r14
7c2f(2): pop %r15
7c31(1): ret near (%rsp)
7c32(6): nop 0x0(%rax,%rax,1)
7c38(2): xor %ebx,%ebx
7c3a(2): xor %ebp,%ebp
7c3c(3): xor %r13d,%r13d
7c3f(2): jmp 0xffffffb1(%rip)
7c41(7): nop 0x0(%rax)
7c48(3): xor %r13d,%r13d
7c4b(3): test %bpl,%bpl
7c4e(2): jz 0xffffff8a(%rip)
7c50(5): mov $0x1,%edi
7c55(5): call 0xfffffe9b(%rip)
7c5a(2): test %al,%al
7c5c(2): mov %eax,%ebp
7c5e(6): jnz 0xffffff7a(%rip)
7c64(3): xor %r12d,%r12d
7c67(2): test %bl,%bl
7c69(3): mov (%r14),%r15d
7c6c(2): jz 0x14(%rip)
7c6e(5): mov $0x2,%edi
7c73(5): call 0xffffa9cd(%rip)
7c78(8): nop 0x0(%rax,%rax,1)
7c80(5): mov $0x1,%edi
7c85(5): call 0xffffa9bb(%rip)
7c8a(3): test %r13b,%r13b
7c8d(2): jz 0xffffff8b(%rip)
7c8f(2): xor %edi,%edi
7c91(5): call 0xffffa9af(%rip)
7c96(2): jmp 0xffffff82(%rip)
7c98(8): nop 0x0(%rax,%rax,1)
7ca0(3): mov (%r14),%r15d
7ca3(3): xor %r12d,%r12d
7ca6(a): nop 0x0(%rax,%rax,1)
7cb0(5): mov $0x2,%edi
7cb5(5): call 0xffffa98b(%rip)
7cba(5): jmp 0xffffff54(%rip)
7cbf(1): nop 
7cc0(2): xor %ebx,%ebx
7cc2(5): jmp 0xfffffed8(%rip)
7cc7(9): nop 0x0(%rax,%rax,1)
7cd0(2): xor %ebx,%ebx
7cd2(2): xor %ebp,%ebp
7cd4(5): jmp 0xfffffedc(%rip)
7cd9(7): nop 0x0(%rax)
7ce0(6): mov $0x1,%r13d
7ce6(3): xor %r12d,%r12d
7ce9(5): jmp 0xffffff1a(%rip)

"next_prime" :
7cf0(4): cmp $0xa,%rdi
7cf4(5): mov $0xa,%eax
7cf9(a): mov $0x-6148914691236517205,%r9
7d03(4): cmovnae %rax,%rdi
7d07(4): or $0x1,%rdi
7d0b(4): cmp $0xffffffff,%rdi
7d0f(2): jz 0x70(%rip)
7d11(7): nop 0x0(%rax)
7d18(3): mov %rdi,%rax
7d1b(3): mov %rdi,%rcx
7d1e(3): mul %rax,%r9,%rdx
7d21(3): mov %rdx,%rax
7d24(3): shr $0x1,%rax
7d27(4): lea 0x0(%rax,%rax,2),%rax
7d2b(3): sub %rax,%rcx
7d2e(4): cmp $0x9,%rdi
7d32(3): mov %rcx,%rax
7d35(2): jbe 0x3b(%rip)
7d37(3): test %rcx,%rcx
7d3a(2): jz 0x3b(%rip)
7d3c(6): mov $0x10,%r8d
7d42(5): mov $0x9,%esi
7d47(5): mov $0x3,%ecx
7d4c(2): jmp 0xd(%rip)
7d4e(2): nop 
7d50(4): add $0x8,%r8
7d54(3): test %rdx,%rdx
7d57(2): jz 0x1e(%rip)
7d59(4): add $0x2,%rcx
7d5d(2): xor %edx,%edx
7d5f(3): mov %rdi,%rax
7d62(3): div %rcx,%rax
7d65(3): add %r8,%rsi
7d68(3): cmp %rdi,%rsi
7d6b(3): mov %rdx,%rax
7d6e(2): jb 0xffffffe2(%rip)
7d70(3): test %rax,%rax
7d73(2): jnz 0xc(%rip)
7d75(4): add $0x2,%rdi
7d79(4): cmp $0xffffffff,%rdi
7d7d(2): jnz 0xffffff9b(%rip)
7d7f(3): mov %rdi,%rax
7d82(1): ret near (%rsp)

"raw_hasher" :
7d90(3): mov %rdi,%rax
7d93(2): xor %edx,%edx
7d95(4): ror $0x3,%rax
7d99(3): div %rsi,%rax
7d9c(3): mov %rdx,%rax
7d9f(1): ret near (%rsp)

"raw_comparator" :
7da0(3): cmp %rsi,%rdi
7da3(3): setz %al
7da6(1): ret near (%rsp)

"safe_hasher" :
7db0(1): push %rbx
7db1(3): mov %rdi,%rbx
7db4(3): mov %rsi,%rdi
7db7(4): mov 0x10(%rbx),%rsi
7dbb(3): call 0x30(%rbx)
7dbe(4): cmp %rax,0x10(%rbx)
7dc2(2): jbe 0xb(%rip)
7dc4(4): shl/sal $0x4,%rax
7dc8(3): add (%rbx),%rax
7dcb(1): pop %rbx
7dcc(1): ret near (%rsp)
7dcd(5): call 0xffffa633(%rip)

"hash_find_entry" :
7de0(2): push %r14
7de2(2): push %r13
7de4(3): mov %rdx,%r14
7de7(2): push %r12
7de9(1): push %rbp
7dea(3): mov %rdi,%r12
7ded(1): push %rbx
7dee(3): mov %rsi,%rbp
7df1(3): mov %ecx,%r13d
7df4(5): call 0xffffffbc(%rip)
7df9(3): mov %rax,(%r14)
7dfc(3): mov (%rax),%rsi
7dff(3): test %rsi,%rsi
7e02(6): jz 0xee(%rip)
7e08(3): cmp %rbp,%rsi
7e0b(3): mov %rax,%rbx
7e0e(6): jz 0x95(%rip)
7e14(3): mov %rbp,%rdi
7e17(5): call 0x38(%r12)
7e1c(2): test %al,%al
7e1e(6): jnz 0x82(%rip)
7e24(4): mov 0x8(%rbx),%rax
7e28(3): test %rax,%rax
7e2b(6): jz 0xc5(%rip)
7e31(3): mov (%rax),%rsi
7e34(3): cmp %rsi,%rbp
7e37(2): jnz 0x22(%rip)
7e39(2): jmp 0x33(%rip)
7e3b(5): nop 0x0(%rax,%rax,1)
7e40(4): mov 0x8(%rbx),%rbx
7e44(4): mov 0x8(%rbx),%rax
7e48(3): test %rax,%rax
7e4b(6): jz 0xa5(%rip)
7e51(3): mov (%rax),%rsi
7e54(3): cmp %rbp,%rsi
7e57(2): jz 0x15(%rip)
7e59(3): mov %rbp,%rdi
7e5c(5): call 0x38(%r12)
7e61(2): test %al,%al
7e63(2): jz 0xffffffdd(%rip)
7e65(4): mov 0x8(%rbx),%rax
7e69(3): mov (%rax),%rsi
7e6c(3): test %r13b,%r13b
7e6f(2): jz 0x1f(%rip)
7e71(4): mov 0x8(%rax),%rdx
7e75(4): mov %rdx,0x8(%rbx)
7e79(7): mov $0x0,(%rax)
7e80(5): mov 0x48(%r12),%rdx
7e85(4): mov %rdx,0x8(%rax)
7e89(5): mov %rax,0x48(%r12)
7e8e(1): pop %rbx
7e8f(3): mov %rsi,%rax
7e92(1): pop %rbp
7e93(2): pop %r12
7e95(2): pop %r13
7e97(2): pop %r14
7e99(1): ret near (%rsp)
7e9a(6): nop 0x0(%rax,%rax,1)
7ea0(3): mov (%rbx),%rsi
7ea3(3): test %r13b,%r13b
7ea6(2): jz 0xffffffe8(%rip)
7ea8(4): mov 0x8(%rbx),%rax
7eac(3): test %rax,%rax
7eaf(2): jz 0x31(%rip)
7eb1(4): movdqu (%rax),%xmm0
7eb5(3): movups %xmm0,(%rbx)
7eb8(7): mov $0x0,(%rax)
7ebf(5): mov 0x48(%r12),%rdx
7ec4(4): mov %rdx,0x8(%rax)
7ec8(5): mov %rax,0x48(%r12)
7ecd(3): mov %rsi,%rax
7ed0(1): pop %rbx
7ed1(1): pop %rbp
7ed2(2): pop %r12
7ed4(2): pop %r13
7ed6(2): pop %r14
7ed8(1): ret near (%rsp)
7ed9(7): nop 0x0(%rax)
7ee0(7): mov $0x0,(%rbx)
7ee7(2): jmp 0xffffffa7(%rip)
7ee9(7): nop 0x0(%rax)
7ef0(2): xor %esi,%esi
7ef2(1): pop %rbx
7ef3(3): mov %rsi,%rax
7ef6(1): pop %rbp
7ef7(2): pop %r12
7ef9(2): pop %r13
7efb(2): pop %r14
7efd(1): ret near (%rsp)

"check_tuning.isra.0" :
7f00(3): mov (%rdi),%rdx
7f03(7): lea 0x19a96(%rip),%rcx
7f0a(5): mov $0x1,%eax
7f0f(3): cmp %rcx,%rdx
7f12(2): jz 0x63(%rip)
7f14(5): movss 0x8(%rdx),%xmm0
7f19(7): ucomiss 0x19a94(%rip),%xmm0
7f20(2): jbe 0x50(%rip)
7f22(8): movss 0x19a8e(%rip),%xmm1
7f2a(3): ucomiss %xmm0,%xmm1
7f2d(2): jbe 0x43(%rip)
7f2f(5): movss 0xc(%rdx),%xmm1
7f34(7): ucomiss 0x19a81(%rip),%xmm1
7f3b(2): jbe 0x35(%rip)
7f3d(4): movss (%rdx),%xmm1
7f41(7): ucomiss 0x19a78(%rip),%xmm1
7f48(2): jb 0x28(%rip)
7f4a(8): addss 0x19a62(%rip),%xmm1
7f52(5): movss 0x4(%rdx),%xmm2
7f57(3): ucomiss %xmm1,%xmm2
7f5a(2): jbe 0x16(%rip)
7f5c(8): movss 0x19a60(%rip),%xmm3
7f64(3): ucomiss %xmm2,%xmm3
7f67(2): jb 0x9(%rip)
7f69(3): ucomiss %xmm1,%xmm0
7f6c(2): jnbe 0x9(%rip)
7f6e(2): nop 
7f70(3): mov %rcx,(%rdi)
7f73(2): xor %eax,%eax
7f75(2): REP ret near (%rsp)

"transfer_entries" :
7f80(2): push %r15
7f82(2): push %r14
7f84(2): push %r13
7f86(2): push %r12
7f88(1): push %rbp
7f89(1): push %rbx
7f8a(4): sub $0x8,%rsp
7f8e(3): mov (%rsi),%r12
7f91(4): cmp 0x8(%rsi),%r12
7f95(6): jnb 0xe3(%rip)
7f9b(3): mov %rdi,%rbp
7f9e(3): mov %rsi,%r13
7fa1(3): mov %edx,%r14d
7fa4(4): nop 0x0(%rax)
7fa8(4): mov (%r12),%r15
7fac(3): test %r15,%r15
7faf(6): jz 0xbb(%rip)
7fb5(5): mov 0x8(%r12),%rbx
7fba(3): test %rbx,%rbx
7fbd(2): jnz 0x1f(%rip)
7fbf(2): jmp 0x5c(%rip)
7fc1(7): nop 0x0(%rax)
7fc8(4): mov 0x8(%rax),%rcx
7fcc(3): test %rdx,%rdx
7fcf(4): mov %rcx,0x8(%rbx)
7fd3(4): mov %rbx,0x8(%rax)
7fd7(3): mov %rdx,%rbx
7fda(2): jz 0x3d(%rip)
7fdc(3): mov (%rbx),%r15
7fdf(3): mov %rbp,%rdi
7fe2(3): mov %r15,%rsi
7fe5(5): call 0xfffffdcb(%rip)
7fea(4): cmp $0x0,(%rax)
7fee(4): mov 0x8(%rbx),%rdx
7ff2(2): jnz 0xffffffd6(%rip)
7ff4(3): mov %r15,(%rax)
7ff7(5): add $0x1,0x18(%rbp)
7ffc(3): test %rdx,%rdx
7fff(7): mov $0x0,(%rbx)
8006(4): mov 0x48(%rbp),%rax
800a(4): mov %rax,0x8(%rbx)
800e(4): mov %rbx,0x48(%rbp)
8012(3): mov %rdx,%rbx
8015(2): jnz 0xffffffc7(%rip)
8017(4): mov (%r12),%r15
801b(3): test %r14b,%r14b
801e(9): mov $0x0,0x8(%r12)
8027(2): jnz 0x43(%rip)
8029(3): mov %r15,%rsi
802c(3): mov %rbp,%rdi
802f(5): call 0xfffffd81(%rip)
8034(4): cmp $0x0,(%rax)
8038(3): mov %rax,%rbx
803b(2): jz 0x55(%rip)
803d(4): mov 0x48(%rbp),%rax
8041(3): test %rax,%rax
8044(2): jz 0x5c(%rip)
8046(4): mov 0x8(%rax),%rdx
804a(4): mov %rdx,0x48(%rbp)
804e(4): mov 0x8(%rbx),%rdx
8052(3): mov %r15,(%rax)
8055(4): mov %rdx,0x8(%rax)
8059(4): mov %rax,0x8(%rbx)
805d(8): mov $0x0,(%r12)
8065(5): sub $0x1,0x18(%r13)
806a(4): add $0x10,%r12
806e(4): cmp %r12,0x8(%r13)
8072(6): jnbe 0xffffff36(%rip)
8078(4): add $0x8,%rsp
807c(5): mov $0x1,%eax
8081(1): pop %rbx
8082(1): pop %rbp
8083(2): pop %r12
8085(2): pop %r13
8087(2): pop %r14
8089(2): pop %r15
808b(1): ret near (%rsp)
808c(4): nop 0x0(%rax)
8090(3): mov %r15,(%rax)
8093(5): add $0x1,0x18(%rbp)
8098(2): jmp 0xffffffc5(%rip)
809a(6): nop 0x0(%rax,%rax,1)
80a0(5): mov $0x10,%edi
80a5(5): call 0xffffa6db(%rip)
80aa(3): test %rax,%rax
80ad(2): jnz 0xffffffa1(%rip)
80af(4): add $0x8,%rsp
80b3(2): xor %eax,%eax
80b5(1): pop %rbx
80b6(1): pop %rbp
80b7(2): pop %r12
80b9(2): pop %r13
80bb(2): pop %r14
80bd(2): pop %r15
80bf(1): ret near (%rsp)

"hash_get_n_buckets" :
80c0(4): mov 0x10(%rdi),%rax
80c4(1): ret near (%rsp)

"hash_get_n_buckets_used" :
80d0(4): mov 0x18(%rdi),%rax
80d4(1): ret near (%rsp)

"hash_get_n_entries" :
80e0(4): mov 0x20(%rdi),%rax
80e4(1): ret near (%rsp)

"hash_get_max_bucket_length" :
80f0(3): mov (%rdi),%rsi
80f3(4): mov 0x8(%rdi),%rdi
80f7(2): xor %eax,%eax
80f9(3): cmp %rdi,%rsi
80fc(2): jnb 0x3b(%rip)
80fe(2): nop 
8100(4): cmp $0x0,(%rsi)
8104(2): jz 0x28(%rip)
8106(4): mov 0x8(%rsi),%rdx
810a(5): mov $0x1,%ecx
810f(3): test %rdx,%rdx
8112(2): jz 0x13(%rip)
8114(4): nop 0x0(%rax)
8118(4): mov 0x8(%rdx),%rdx
811c(4): add $0x1,%rcx
8120(3): test %rdx,%rdx
8123(2): jnz 0xfffffff5(%rip)
8125(3): cmp %rcx,%rax
8128(4): cmovnae %rcx,%rax
812c(4): add $0x10,%rsi
8130(3): cmp %rdi,%rsi
8133(2): jb 0xffffffcd(%rip)
8135(2): REP ret near (%rsp)
8137(2): REP ret near (%rsp)

"hash_table_ok" :
8140(3): mov (%rdi),%rcx
8143(4): mov 0x8(%rdi),%r8
8147(2): xor %edx,%edx
8149(2): xor %esi,%esi
814b(3): cmp %r8,%rcx
814e(2): jnb 0x38(%rip)
8150(4): cmp $0x0,(%rcx)
8154(2): jz 0x29(%rip)
8156(4): mov 0x8(%rcx),%rax
815a(4): add $0x1,%rsi
815e(4): add $0x1,%rdx
8162(3): test %rax,%rax
8165(2): jz 0x18(%rip)
8167(9): nop 0x0(%rax,%rax,1)
8170(4): mov 0x8(%rax),%rax
8174(4): add $0x1,%rdx
8178(3): test %rax,%rax
817b(2): jnz 0xfffffff5(%rip)
817d(4): add $0x10,%rcx
8181(3): cmp %r8,%rcx
8184(2): jb 0xffffffcc(%rip)
8186(2): xor %eax,%eax
8188(4): cmp %rsi,0x18(%rdi)
818c(2): jz 0x4(%rip)
818e(2): REP ret near (%rsp)
8190(4): cmp %rdx,0x20(%rdi)
8194(3): setz %al
8197(1): ret near (%rsp)

"hash_print_statistics" :
81a0(2): push %r13
81a2(2): push %r12
81a4(3): mov %rsi,%r12
81a7(1): push %rbp
81a8(1): push %rbx
81a9(2): xor %ebx,%ebx
81ab(4): sub $0x8,%rsp
81af(3): mov (%rdi),%rsi
81b2(4): mov 0x20(%rdi),%rcx
81b6(4): mov 0x10(%rdi),%rbp
81ba(4): mov 0x18(%rdi),%r13
81be(4): mov 0x8(%rdi),%rdi
81c2(3): cmp %rdi,%rsi
81c5(2): jnb 0x40(%rip)
81c7(9): nop 0x0(%rax,%rax,1)
81d0(4): cmp $0x0,(%rsi)
81d4(2): jz 0x28(%rip)
81d6(4): mov 0x8(%rsi),%rax
81da(5): mov $0x1,%edx
81df(3): test %rax,%rax
81e2(2): jz 0x13(%rip)
81e4(4): nop 0x0(%rax)
81e8(4): mov 0x8(%rax),%rax
81ec(4): add $0x1,%rdx
81f0(3): test %rax,%rax
81f3(2): jnz 0xfffffff5(%rip)
81f5(3): cmp %rdx,%rbx
81f8(4): cmovnae %rdx,%rbx
81fc(4): add $0x10,%rsi
8200(3): cmp %rdi,%rsi
8203(2): jb 0xffffffcd(%rip)
8205(7): lea 0x19722(%rip),%rdx
820c(5): mov $0x1,%esi
8211(3): mov %r12,%rdi
8214(2): xor %eax,%eax
8216(5): call 0xffffa75a(%rip)
821b(7): lea 0x19724(%rip),%rdx
8222(2): xor %eax,%eax
8224(3): mov %rbp,%rcx
8227(5): mov $0x1,%esi
822c(3): mov %r12,%rdi
822f(5): call 0xffffa741(%rip)
8234(3): test %r13,%r13
8237(2): js 0x69(%rip)
8239(4): pxor %xmm0,%xmm0
823d(3): test %rbp,%rbp
8240(5): cvtsi2sd %r13,%xmm0
8245(8): mulsd 0x1978b(%rip),%xmm0
824d(2): js 0x7c(%rip)
824f(4): pxor %xmm1,%xmm1
8253(5): cvtsi2sd %rbp,%xmm1
8258(4): divsd %xmm1,%xmm0
825c(7): lea 0x19715(%rip),%rdx
8263(3): mov %r13,%rcx
8266(3): mov %r12,%rdi
8269(5): mov $0x1,%esi
826e(5): mov $0x1,%eax
8273(5): call 0xffffa6fd(%rip)
8278(4): add $0x8,%rsp
827c(3): mov %rbx,%rcx
827f(3): mov %r12,%rdi
8282(1): pop %rbx
8283(1): pop %rbp
8284(2): pop %r12
8286(2): pop %r13
8288(7): lea 0x196cf(%rip),%rdx
828f(5): mov $0x1,%esi
8294(2): xor %eax,%eax
8296(5): jmp 0xffffa6da(%rip)
829b(5): nop 0x0(%rax,%rax,1)
82a0(3): mov %r13,%rax
82a3(3): mov %r13,%rdx
82a6(4): pxor %xmm0,%xmm0
82aa(3): shr $0x1,%rax
82ad(3): and $0x1,%edx
82b0(3): or %rdx,%rax
82b3(3): test %rbp,%rbp
82b6(5): cvtsi2sd %rax,%xmm0
82bb(4): addsd %xmm0,%xmm0
82bf(8): mulsd 0x19711(%rip),%xmm0
82c7(2): jns 0xffffff88(%rip)
82c9(3): mov %rbp,%rax
82cc(4): pxor %xmm1,%xmm1
82d0(3): shr $0x1,%rax
82d3(3): and $0x1,%ebp
82d6(3): or %rbp,%rax
82d9(5): cvtsi2sd %rax,%xmm1
82de(4): addsd %xmm1,%xmm1
82e2(5): jmp 0xffffff76(%rip)

"hash_lookup" :
82f0(2): push %r12
82f2(1): push %rbp
82f3(3): mov %rdi,%r12
82f6(1): push %rbx
82f7(3): mov %rsi,%rbp
82fa(5): call 0xfffffab6(%rip)
82ff(3): mov (%rax),%rsi
8302(3): test %rsi,%rsi
8305(2): jz 0x28(%rip)
8307(3): mov %rax,%rbx
830a(2): jmp 0x9(%rip)
830c(4): nop 0x0(%rax)
8310(3): mov (%rbx),%rsi
8313(3): cmp %rbp,%rsi
8316(2): jz 0x19(%rip)
8318(3): mov %rbp,%rdi
831b(5): call 0x38(%r12)
8320(2): test %al,%al
8322(2): jnz 0x1e(%rip)
8324(4): mov 0x8(%rbx),%rbx
8328(3): test %rbx,%rbx
832b(2): jnz 0xffffffe5(%rip)
832d(2): xor %esi,%esi
832f(1): pop %rbx
8330(3): mov %rsi,%rax
8333(1): pop %rbp
8334(2): pop %r12
8336(1): ret near (%rsp)
8337(9): nop 0x0(%rax,%rax,1)
8340(3): mov (%rbx),%rsi
8343(1): pop %rbx
8344(1): pop %rbp
8345(3): mov %rsi,%rax
8348(2): pop %r12
834a(1): ret near (%rsp)

"hash_get_first" :
8350(5): cmp $0x0,0x20(%rdi)
8355(2): jz 0x2e(%rip)
8357(3): mov (%rdi),%rdx
835a(4): mov 0x8(%rdi),%rcx
835e(3): cmp %rcx,%rdx
8361(2): jnb 0x27(%rip)
8363(3): mov (%rdx),%rax
8366(3): test %rax,%rax
8369(2): jnz 0x1d(%rip)
836b(5): nop 0x0(%rax,%rax,1)
8370(4): add $0x10,%rdx
8374(3): cmp %rcx,%rdx
8377(2): jnb 0x11(%rip)
8379(3): mov (%rdx),%rax
837c(3): test %rax,%rax
837f(2): jz 0xfffffff1(%rip)
8381(2): REP ret near (%rsp)
8383(2): xor %eax,%eax
8385(1): ret near (%rsp)
8386(2): REP ret near (%rsp)
8388(4): sub $0x8,%rsp
838c(5): call 0xffffa074(%rip)

"hash_get_next" :
83a0(1): push %rbp
83a1(1): push %rbx
83a2(3): mov %rdi,%rbp
83a5(3): mov %rsi,%rbx
83a8(4): sub $0x8,%rsp
83ac(5): call 0xfffffa04(%rip)
83b1(3): mov %rax,%rdx
83b4(3): mov %rax,%rcx
83b7(3): mov (%rdx),%rax
83ba(4): mov 0x8(%rdx),%rdx
83be(3): cmp %rbx,%rax
83c1(2): jz 0x18(%rip)
83c3(5): nop 0x0(%rax,%rax,1)
83c8(3): test %rdx,%rdx
83cb(2): jz 0x13(%rip)
83cd(3): mov (%rdx),%rax
83d0(4): mov 0x8(%rdx),%rdx
83d4(3): cmp %rbx,%rax
83d7(2): jnz 0xfffffff1(%rip)
83d9(3): test %rdx,%rdx
83dc(2): jnz 0x2c(%rip)
83de(4): mov 0x8(%rbp),%rdx
83e2(2): jmp 0xe(%rip)
83e4(4): nop 0x0(%rax)
83e8(3): mov (%rcx),%rax
83eb(3): test %rax,%rax
83ee(2): jnz 0xd(%rip)
83f0(4): add $0x10,%rcx
83f4(3): cmp %rcx,%rdx
83f7(2): jnbe 0xfffffff1(%rip)
83f9(2): xor %eax,%eax
83fb(4): add $0x8,%rsp
83ff(1): pop %rbx
8400(1): pop %rbp
8401(1): ret near (%rsp)
8402(6): nop 0x0(%rax,%rax,1)
8408(3): mov (%rdx),%rax
840b(4): add $0x8,%rsp
840f(1): pop %rbx
8410(1): pop %rbp
8411(1): ret near (%rsp)

"hash_get_entries" :
8420(3): mov (%rdi),%r9
8423(4): cmp %r9,0x8(%rdi)
8427(2): jbe 0x5b(%rip)
8429(3): xor %r8d,%r8d
842c(3): mov (%r9),%rcx
842f(3): test %rcx,%rcx
8432(2): jz 0x3b(%rip)
8434(3): cmp %r8,%rdx
8437(2): jbe 0x40(%rip)
8439(4): mov %rcx,0x0(%rsi,%r8,8)
843d(4): mov 0x8(%r9),%rcx
8441(4): lea 0x1(%r8),%rax
8445(3): test %rcx,%rcx
8448(2): jz 0x22(%rip)
844a(6): nop 0x0(%rax,%rax,1)
8450(3): cmp %rax,%rdx
8453(2): jz 0x2d(%rip)
8455(3): mov (%rcx),%r8
8458(4): add $0x1,%rax
845c(5): mov %r8,0xfffffff8(%rsi,%rax,8)
8461(4): mov 0x8(%rcx),%rcx
8465(3): test %rcx,%rcx
8468(2): jnz 0xffffffe8(%rip)
846a(3): mov %rax,%r8
846d(4): add $0x10,%r9
8471(4): cmp %r9,0x8(%rdi)
8475(2): jnbe 0xffffffb7(%rip)
8477(3): mov %r8,%rax
847a(1): ret near (%rsp)
847b(5): nop 0x0(%rax,%rax,1)
8480(2): REP ret near (%rsp)
8482(2): xor %eax,%eax
8484(1): ret near (%rsp)

"hash_do_for_each" :
8490(2): push %r15
8492(2): push %r14
8494(2): push %r13
8496(2): push %r12
8498(1): push %rbp
8499(1): push %rbx
849a(4): sub $0x8,%rsp
849e(3): mov (%rdi),%r14
84a1(4): cmp %r14,0x8(%rdi)
84a5(2): jbe 0x51(%rip)
84a7(3): mov %rdx,%r13
84aa(3): mov %rsi,%r12
84ad(3): mov %rdi,%r15
84b0(2): xor %ebp,%ebp
84b2(3): mov (%r14),%rdi
84b5(3): test %rdi,%rdi
84b8(2): jz 0x22(%rip)
84ba(3): mov %r14,%rbx
84bd(2): jmp 0x6(%rip)
84bf(1): nop 
84c0(3): mov (%rbx),%rdi
84c3(3): mov %r13,%rsi
84c6(3): call %r12
84c9(2): test %al,%al
84cb(2): jz 0x19(%rip)
84cd(4): mov 0x8(%rbx),%rbx
84d1(4): add $0x1,%rbp
84d5(3): test %rbx,%rbx
84d8(2): jnz 0xffffffe8(%rip)
84da(4): add $0x10,%r14
84de(4): cmp %r14,0x8(%r15)
84e2(2): jnbe 0xffffffd0(%rip)
84e4(4): add $0x8,%rsp
84e8(3): mov %rbp,%rax
84eb(1): pop %rbx
84ec(1): pop %rbp
84ed(2): pop %r12
84ef(2): pop %r13
84f1(2): pop %r14
84f3(2): pop %r15
84f5(1): ret near (%rsp)
84f6(2): xor %ebp,%ebp
84f8(2): jmp 0xffffffec(%rip)

"hash_string" :
8500(3): movzx (%rdi),%ecx
8503(2): xor %edx,%edx
8505(2): test %cl,%cl
8507(2): jz 0x26(%rip)
8509(7): nop 0x0(%rax)
8510(3): mov %rdx,%rax
8513(4): add $0x1,%rdi
8517(4): shl/sal $0x5,%rax
851b(3): sub %rdx,%rax
851e(2): xor %edx,%edx
8520(3): add %rcx,%rax
8523(3): movzx (%rdi),%ecx
8526(3): div %rsi,%rax
8529(2): test %cl,%cl
852b(2): jnz 0xffffffe5(%rip)
852d(3): mov %rdx,%rax
8530(1): ret near (%rsp)

"hash_reset_tuning" :
8540(a): mov $0x4575657221408423936,%rax
854a(4): mov $0x0,0x10(%rdi)
854e(3): mov %rax,(%rdi)
8551(a): mov $0x4590573145673223373,%rax
855b(4): mov %rax,0x8(%rdi)
855f(1): ret near (%rsp)

"hash_initialize" :
8560(2): push %r15
8562(2): push %r14
8564(7): lea 0xfffff825(%rip),%rax
856b(2): push %r13
856d(2): push %r12
856f(3): mov %rdx,%r12
8572(1): push %rbp
8573(1): push %rbx
8574(3): mov %rcx,%r13
8577(3): mov %rdi,%rbp
857a(5): mov $0x50,%edi
857f(3): mov %rsi,%r15
8582(4): sub $0x8,%rsp
8586(3): test %rdx,%rdx
8589(3): mov %r8,%r14
858c(4): cmove %rax,%r12
8590(7): lea 0xfffff809(%rip),%rax
8597(3): test %rcx,%rcx
859a(4): cmove %rax,%r13
859e(5): call 0xffffa1e2(%rip)
85a3(3): test %rax,%rax
85a6(3): mov %rax,%rbx
85a9(6): jz 0xb1(%rip)
85af(3): test %r15,%r15
85b2(4): lea 0x28(%rax),%rdi
85b6(6): jz 0xba(%rip)
85bc(4): mov %r15,0x28(%rax)
85c0(5): call 0xfffff940(%rip)
85c5(2): test %al,%al
85c7(6): jz 0x89(%rip)
85cd(5): cmp $0x0,0x10(%r15)
85d2(6): jz 0xfe(%rip)
85d8(3): mov %rbp,%rdi
85db(5): call 0xfffff715(%rip)
85e0(5): mov $0x8,%edx
85e5(3): mov %rax,%rbp
85e8(2): xor %ecx,%ecx
85ea(3): mov %rdx,%rax
85ed(3): mul %rax,%rbp,%rdx
85f0(6): jo 0x11a(%rip)
85f6(3): test %rax,%rax
85f9(2): js 0x57(%rip)
85fb(3): test %rcx,%rcx
85fe(2): jnz 0x52(%rip)
8600(3): test %rbp,%rbp
8603(4): mov %rbp,0x10(%rbx)
8607(2): jz 0x49(%rip)
8609(5): mov $0x10,%esi
860e(3): mov %rbp,%rdi
8611(5): call 0xffffa09f(%rip)
8616(3): test %rax,%rax
8619(3): mov %rax,(%rbx)
861c(2): jz 0x34(%rip)
861e(4): shl/sal $0x4,%rbp
8622(8): mov $0x0,0x18(%rbx)
862a(8): mov $0x0,0x20(%rbx)
8632(3): add %rax,%rbp
8635(4): mov %r12,0x30(%rbx)
8639(4): mov %r13,0x38(%rbx)
863d(4): mov %rbp,0x8(%rbx)
8641(4): mov %r14,0x40(%rbx)
8645(8): mov $0x0,0x48(%rbx)
864d(2): jmp 0xd(%rip)
864f(1): nop 
8650(3): mov %rbx,%rdi
8653(2): xor %ebx,%ebx
8655(5): call 0xffffa3bb(%rip)
865a(4): add $0x8,%rsp
865e(3): mov %rbx,%rax
8661(1): pop %rbx
8662(1): pop %rbp
8663(2): pop %r12
8665(2): pop %r13
8667(2): pop %r14
8669(2): pop %r15
866b(1): ret near (%rsp)
866c(4): nop 0x0(%rax)
8670(7): lea 0x19329(%rip),%rax
8677(4): mov %rax,0x28(%rbx)
867b(5): call 0xfffff885(%rip)
8680(2): test %al,%al
8682(8): movss 0x1933e(%rip),%xmm1
868a(2): jz 0xffffffc6(%rip)
868c(3): test %rbp,%rbp
868f(2): js 0x4c(%rip)
8691(4): pxor %xmm0,%xmm0
8695(5): cvtsi2ss %rbp,%xmm0
869a(4): divss %xmm1,%xmm0
869e(7): ucomiss 0x19327(%rip),%xmm0
86a5(2): jnb 0xffffffab(%rip)
86a7(7): ucomiss 0x19322(%rip),%xmm0
86ae(2): jb 0x52(%rip)
86b0(8): subss 0x19318(%rip),%xmm0
86b8(a): mov $0x-9223372036854775808,%rax
86c2(5): cvttss2si %xmm0,%rbp
86c7(3): xor %rax,%rbp
86ca(5): jmp 0xffffff0e(%rip)
86cf(1): nop 
86d0(3): test %rbp,%rbp
86d3(6): movss 0x8(%r15),%xmm1
86d9(2): jns 0xffffffb8(%rip)
86db(3): mov %rbp,%rax
86de(4): pxor %xmm0,%xmm0
86e2(3): shr $0x1,%rax
86e5(3): and $0x1,%ebp
86e8(3): or %rbp,%rax
86eb(5): cvtsi2ss %rax,%xmm0
86f0(4): addss %xmm0,%xmm0
86f4(2): jmp 0xffffffa6(%rip)
86f6(a): nop 0x0(%rax,%rax,1)
8700(5): cvttss2si %xmm0,%rbp
8705(5): jmp 0xfffffed3(%rip)
870a(5): mov $0x1,%ecx
870f(5): jmp 0xfffffee7(%rip)

"hash_clear" :
8720(2): push %r12
8722(1): push %rbp
8723(3): mov %rdi,%rbp
8726(1): push %rbx
8727(3): mov (%rdi),%r12
872a(4): cmp 0x8(%rdi),%r12
872e(2): jnb 0x6d(%rip)
8730(5): cmp $0x0,(%r12)
8735(2): jz 0x5c(%rip)
8737(5): mov 0x8(%r12),%rbx
873c(4): mov 0x40(%rbp),%rax
8740(3): test %rbx,%rbx
8743(2): jz 0x32(%rip)
8745(3): nop (%rax)
8748(3): test %rax,%rax
874b(2): jz 0xb(%rip)
874d(3): mov (%rbx),%rdi
8750(2): call %rax
8752(4): mov 0x40(%rbp),%rax
8756(4): mov 0x8(%rbx),%rdx
875a(4): mov 0x48(%rbp),%rcx
875e(7): mov $0x0,(%rbx)
8765(3): test %rdx,%rdx
8768(4): mov %rcx,0x8(%rbx)
876c(4): mov %rbx,0x48(%rbp)
8770(3): mov %rdx,%rbx
8773(2): jnz 0xffffffd5(%rip)
8775(3): test %rax,%rax
8778(2): jz 0x8(%rip)
877a(4): mov (%r12),%rdi
877e(2): call %rax
8780(8): mov $0x0,(%r12)
8788(9): mov $0x0,0x8(%r12)
8791(4): add $0x10,%r12
8795(4): cmp %r12,0x8(%rbp)
8799(2): jnbe 0xffffff97(%rip)
879b(8): mov $0x0,0x18(%rbp)
87a3(8): mov $0x0,0x20(%rbp)
87ab(1): pop %rbx
87ac(1): pop %rbp
87ad(2): pop %r12
87af(1): ret near (%rsp)

"hash_free" :
87b0(2): push %r12
87b2(1): push %rbp
87b3(3): mov %rdi,%r12
87b6(1): push %rbx
87b7(5): cmp $0x0,0x40(%rdi)
87bc(3): mov (%rdi),%rbp
87bf(4): mov 0x8(%rdi),%rax
87c3(2): jz 0x50(%rip)
87c5(5): cmp $0x0,0x20(%rdi)
87ca(2): jz 0x49(%rip)
87cc(3): cmp %rax,%rbp
87cf(2): jnb 0x7d(%rip)
87d1(7): nop 0x0(%rax)
87d8(4): mov 0x0(%rbp),%rdi
87dc(3): test %rdi,%rdi
87df(2): jz 0x27(%rip)
87e1(3): mov %rbp,%rbx
87e4(2): jmp 0xf(%rip)
87e6(a): nop 0x0(%rax,%rax,1)
87f0(3): mov (%rbx),%rdi
87f3(5): call 0x40(%r12)
87f8(4): mov 0x8(%rbx),%rbx
87fc(3): test %rbx,%rbx
87ff(2): jnz 0xfffffff1(%rip)
8801(5): mov 0x8(%r12),%rax
8806(4): add $0x10,%rbp
880a(3): cmp %rbp,%rax
880d(2): jnbe 0xffffffcb(%rip)
880f(4): mov (%r12),%rbp
8813(3): cmp %rax,%rbp
8816(2): jnb 0x36(%rip)
8818(8): nop 0x0(%rax,%rax,1)
8820(4): mov 0x8(%rbp),%rdi
8824(3): test %rdi,%rdi
8827(2): jz 0x1a(%rip)
8829(7): nop 0x0(%rax)
8830(4): mov 0x8(%rdi),%rbx
8834(5): call 0xffffa1dc(%rip)
8839(3): test %rbx,%rbx
883c(3): mov %rbx,%rdi
883f(2): jnz 0xfffffff1(%rip)
8841(4): add $0x10,%rbp
8845(5): cmp %rbp,0x8(%r12)
884a(2): jnbe 0xffffffd6(%rip)
884c(5): mov 0x48(%r12),%rdi
8851(3): test %rdi,%rdi
8854(2): jz 0x1d(%rip)
8856(a): nop 0x0(%rax,%rax,1)
8860(4): mov 0x8(%rdi),%rbx
8864(5): call 0xffffa1ac(%rip)
8869(3): test %rbx,%rbx
886c(3): mov %rbx,%rdi
886f(2): jnz 0xfffffff1(%rip)
8871(4): mov (%r12),%rdi
8875(5): call 0xffffa19b(%rip)
887a(1): pop %rbx
887b(3): mov %r12,%rdi
887e(1): pop %rbp
887f(2): pop %r12
8881(5): jmp 0xffffa18f(%rip)

"hash_rehash" :
8890(2): push %r12
8892(1): push %rbp
8893(3): mov %rdi,%rbp
8896(1): push %rbx
8897(4): sub $0x60,%rsp
889b(4): mov 0x28(%rdi),%r12
889f(9): mov $0x28,%rax
88a8(5): mov %rax,0x58(%rsp)
88ad(2): xor %eax,%eax
88af(6): cmp $0x0,0x10(%r12)
88b5(2): jnz 0x53(%rip)
88b7(3): test %rsi,%rsi
88ba(6): js 0x17e(%rip)
88c0(4): pxor %xmm0,%xmm0
88c4(5): cvtsi2ss %rsi,%xmm0
88c9(7): divss 0x8(%r12),%xmm0
88d0(7): ucomiss 0x190f5(%rip),%xmm0
88d7(6): jnb 0x139(%rip)
88dd(7): ucomiss 0x190ec(%rip),%xmm0
88e4(6): jb 0x17c(%rip)
88ea(8): subss 0x190de(%rip),%xmm0
88f2(a): mov $0x-9223372036854775808,%rax
88fc(5): cvttss2si %xmm0,%rsi
8901(3): xor %rax,%rsi
8904(4): nop 0x0(%rax)
8908(3): mov %rsi,%rdi
890b(5): call 0xfffff3e5(%rip)
8910(5): mov $0x8,%edx
8915(3): mov %rax,%rbx
8918(2): xor %ecx,%ecx
891a(3): mov %rdx,%rax
891d(3): mul %rax,%rbx,%rdx
8920(6): jo 0x19f(%rip)
8926(3): test %rax,%rax
8929(5): mov $0x1,%eax
892e(4): cmovs %rax,%rcx
8932(3): test %rbx,%rbx
8935(6): jz 0xdb(%rip)
893b(3): and $0x1,%ecx
893e(6): jnz 0xd2(%rip)
8944(4): cmp %rbx,0x10(%rbp)
8948(6): jz 0x128(%rip)
894e(5): mov $0x10,%esi
8953(3): mov %rbx,%rdi
8956(5): call 0xffff9d5a(%rip)
895b(3): test %rax,%rax
895e(4): mov %rax,(%rsp)
8962(6): jz 0xae(%rip)
8968(5): mov %rbx,0x10(%rsp)
896d(4): shl/sal $0x4,%rbx
8971(5): mov %r12,0x28(%rsp)
8976(3): add %rax,%rbx
8979(4): mov 0x30(%rbp),%rax
897d(3): mov %rsp,%r12
8980(2): xor %edx,%edx
8982(3): mov %rbp,%rsi
8985(3): mov %r12,%rdi
8988(5): mov %rbx,0x8(%rsp)
898d(9): mov $0x0,0x18(%rsp)
8996(5): mov %rax,0x30(%rsp)
899b(4): mov 0x38(%rbp),%rax
899f(9): mov $0x0,0x20(%rsp)
89a8(5): mov %rax,0x38(%rsp)
89ad(4): mov 0x40(%rbp),%rax
89b1(5): mov %rax,0x40(%rsp)
89b6(4): mov 0x48(%rbp),%rax
89ba(5): mov %rax,0x48(%rsp)
89bf(5): call 0xfffff5c1(%rip)
89c4(2): test %al,%al
89c6(2): mov %eax,%ebx
89c8(6): jnz 0xb8(%rip)
89ce(5): mov 0x48(%rsp),%rax
89d3(5): mov $0x1,%edx
89d8(3): mov %r12,%rsi
89db(3): mov %rbp,%rdi
89de(4): mov %rax,0x48(%rbp)
89e2(5): call 0xfffff59e(%rip)
89e7(2): test %al,%al
89e9(6): jz 0xe0(%rip)
89ef(2): xor %edx,%edx
89f1(3): mov %r12,%rsi
89f4(3): mov %rbp,%rdi
89f7(5): call 0xfffff589(%rip)
89fc(2): test %al,%al
89fe(6): jz 0xcb(%rip)
8a04(4): mov (%rsp),%rdi
8a08(5): call 0xffffa008(%rip)
8a0d(2): jmp 0x5(%rip)
8a0f(1): nop 
8a10(2): xor %ebx,%ebx
8a12(5): mov 0x58(%rsp),%rcx
8a17(9): xor $0x28,%rcx
8a20(2): mov %ebx,%eax
8a22(6): jnz 0x98(%rip)
8a28(4): add $0x60,%rsp
8a2c(1): pop %rbx
8a2d(1): pop %rbp
8a2e(2): pop %r12
8a30(1): ret near (%rsp)
8a31(7): nop 0x0(%rax)
8a38(3): mov %rsi,%rax
8a3b(4): pxor %xmm0,%xmm0
8a3f(3): shr $0x1,%rax
8a42(3): and $0x1,%esi
8a45(3): or %rsi,%rax
8a48(5): cvtsi2ss %rax,%xmm0
8a4d(4): addss %xmm0,%xmm0
8a51(5): jmp 0xfffffe78(%rip)
8a56(a): nop 0x0(%rax,%rax,1)
8a60(5): cvttss2si %xmm0,%rsi
8a65(5): jmp 0xfffffea3(%rip)
8a6a(6): nop 0x0(%rax,%rax,1)
8a70(5): mov $0x1,%ebx
8a75(2): jmp 0xffffff9d(%rip)
8a77(9): nop 0x0(%rax,%rax,1)
8a80(4): mov 0x0(%rbp),%rdi
8a84(5): call 0xffff9f8c(%rip)
8a89(4): mov (%rsp),%rax
8a8d(4): mov %rax,0x0(%rbp)
8a91(5): mov 0x8(%rsp),%rax
8a96(4): mov %rax,0x8(%rbp)
8a9a(5): mov 0x10(%rsp),%rax
8a9f(4): mov %rax,0x10(%rbp)
8aa3(5): mov 0x18(%rsp),%rax
8aa8(4): mov %rax,0x18(%rbp)
8aac(5): mov 0x48(%rsp),%rax
8ab1(4): mov %rax,0x48(%rbp)
8ab5(5): jmp 0xffffff5d(%rip)
8aba(5): call 0xffff9aa6(%rip)
8abf(5): mov $0x1,%ecx
8ac4(5): jmp 0xfffffe62(%rip)
8ac9(5): call 0xffff9937(%rip)

"hash_insert_if_absent" :
8ad0(2): push %r13
8ad2(2): push %r12
8ad4(1): push %rbp
8ad5(1): push %rbx
8ad6(4): sub $0x18,%rsp
8ada(9): mov $0x28,%rax
8ae3(5): mov %rax,0x8(%rsp)
8ae8(2): xor %eax,%eax
8aea(3): test %rsi,%rsi
8aed(6): jz 0x1c0(%rip)
8af3(3): mov %rsp,%r12
8af6(2): xor %ecx,%ecx
8af8(3): mov %rdx,%r13
8afb(3): mov %r12,%rdx
8afe(3): mov %rdi,%rbx
8b01(3): mov %rsi,%rbp
8b04(5): call 0xfffff2dc(%rip)
8b09(3): test %rax,%rax
8b0c(3): mov %rax,%rdx
8b0f(2): jz 0x31(%rip)
8b11(2): xor %eax,%eax
8b13(3): test %r13,%r13
8b16(2): jz 0x6(%rip)
8b18(4): mov %rdx,0x0(%r13)
8b1c(5): mov 0x8(%rsp),%rcx
8b21(9): xor $0x28,%rcx
8b2a(6): jnz 0x225(%rip)
8b30(4): add $0x18,%rsp
8b34(1): pop %rbx
8b35(1): pop %rbp
8b36(2): pop %r12
8b38(2): pop %r13
8b3a(1): ret near (%rsp)
8b3b(5): nop 0x0(%rax,%rax,1)
8b40(4): mov 0x18(%rbx),%rax
8b44(3): test %rax,%rax
8b47(2): js 0x79(%rip)
8b49(4): pxor %xmm1,%xmm1
8b4d(4): mov 0x28(%rbx),%rdx
8b51(5): cvtsi2ss %rax,%xmm1
8b56(4): mov 0x10(%rbx),%rax
8b5a(3): test %rax,%rax
8b5d(6): js 0x8d(%rip)
8b63(4): pxor %xmm0,%xmm0
8b67(5): cvtsi2ss %rax,%xmm0
8b6c(5): mulss 0x8(%rdx),%xmm0
8b71(3): ucomiss %xmm0,%xmm1
8b74(6): jnbe 0x9c(%rip)
8b7a(4): mov (%rsp),%r12
8b7e(5): cmp $0x0,(%r12)
8b83(6): jz 0x135(%rip)
8b89(4): mov 0x48(%rbx),%rax
8b8d(3): test %rax,%rax
8b90(6): jz 0x140(%rip)
8b96(4): mov 0x8(%rax),%rdx
8b9a(4): mov %rdx,0x48(%rbx)
8b9e(5): mov 0x8(%r12),%rdx
8ba3(3): mov %rbp,(%rax)
8ba6(4): mov %rdx,0x8(%rax)
8baa(5): mov %rax,0x8(%r12)
8baf(5): mov $0x1,%eax
8bb4(5): add $0x1,0x20(%rbx)
8bb9(5): jmp 0xffffff63(%rip)
8bbe(2): nop 
8bc0(3): mov %rax,%rdx
8bc3(4): pxor %xmm1,%xmm1
8bc7(3): and $0x1,%eax
8bca(3): shr $0x1,%rdx
8bcd(3): or %rax,%rdx
8bd0(4): mov 0x10(%rbx),%rax
8bd4(5): cvtsi2ss %rdx,%xmm1
8bd9(4): mov 0x28(%rbx),%rdx
8bdd(3): test %rax,%rax
8be0(4): addss %xmm1,%xmm1
8be4(6): jns 0xffffff7f(%rip)
8bea(3): mov %rax,%rcx
8bed(4): pxor %xmm0,%xmm0
8bf1(3): shr $0x1,%rcx
8bf4(3): and $0x1,%eax
8bf7(3): or %rax,%rcx
8bfa(5): cvtsi2ss %rcx,%xmm0
8bff(4): addss %xmm0,%xmm0
8c03(5): jmp 0xffffff69(%rip)
8c08(8): nop 0x0(%rax,%rax,1)
8c10(4): lea 0x28(%rbx),%rdi
8c14(5): call 0xfffff2ec(%rip)
8c19(4): mov 0x10(%rbx),%rax
8c1d(4): mov 0x28(%rbx),%rdx
8c21(3): test %rax,%rax
8c24(5): movss 0x8(%rdx),%xmm2
8c29(6): js 0xc7(%rip)
8c2f(4): pxor %xmm0,%xmm0
8c33(5): cvtsi2ss %rax,%xmm0
8c38(4): mov 0x18(%rbx),%rax
8c3c(3): test %rax,%rax
8c3f(6): js 0xd1(%rip)
8c45(4): pxor %xmm1,%xmm1
8c49(5): cvtsi2ss %rax,%xmm1
8c4e(3): movaps %xmm2,%xmm3
8c51(4): mulss %xmm0,%xmm3
8c55(3): ucomiss %xmm3,%xmm1
8c58(6): jbe 0xffffff22(%rip)
8c5e(4): cmp $0x0,0x10(%rdx)
8c62(5): mulss 0xc(%rdx),%xmm0
8c67(2): jnz 0x6(%rip)
8c69(4): mulss %xmm2,%xmm0
8c6d(7): ucomiss 0x18d58(%rip),%xmm0
8c74(2): jnb 0x6f(%rip)
8c76(7): ucomiss 0x18d53(%rip),%xmm0
8c7d(6): jnb 0xb3(%rip)
8c83(5): cvttss2si %xmm0,%rsi
8c88(3): mov %rbx,%rdi
8c8b(5): call 0xfffffc05(%rip)
8c90(2): test %al,%al
8c92(2): jz 0x51(%rip)
8c94(2): xor %ecx,%ecx
8c96(3): mov %r12,%rdx
8c99(3): mov %rbp,%rsi
8c9c(3): mov %rbx,%rdi
8c9f(5): call 0xfffff141(%rip)
8ca4(3): test %rax,%rax
8ca7(6): jz 0xfffffed3(%rip)
8cad(5): call 0xffff9753(%rip)
8cb2(6): nop 0x0(%rax,%rax,1)
8cb8(4): mov %rbp,(%r12)
8cbc(5): mov $0x1,%eax
8cc1(5): add $0x1,0x20(%rbx)
8cc6(5): add $0x1,0x18(%rbx)
8ccb(5): jmp 0xfffffe51(%rip)
8cd0(5): mov $0x10,%edi
8cd5(5): call 0xffff9aab(%rip)
8cda(3): test %rax,%rax
8cdd(6): jnz 0xfffffec1(%rip)
8ce3(5): mov $0xffffffff,%eax
8ce8(5): jmp 0xfffffe34(%rip)
8ced(3): nop (%rax)
8cf0(3): mov %rax,%rcx
8cf3(4): pxor %xmm0,%xmm0
8cf7(3): shr $0x1,%rcx
8cfa(3): and $0x1,%eax
8cfd(3): or %rax,%rcx
8d00(5): cvtsi2ss %rcx,%xmm0
8d05(4): addss %xmm0,%xmm0
8d09(5): jmp 0xffffff2f(%rip)
8d0e(2): nop 
8d10(3): mov %rax,%rcx
8d13(4): pxor %xmm1,%xmm1
8d17(3): shr $0x1,%rcx
8d1a(3): and $0x1,%eax
8d1d(3): or %rax,%rcx
8d20(5): cvtsi2ss %rcx,%xmm1
8d25(4): addss %xmm1,%xmm1
8d29(5): jmp 0xffffff25(%rip)
8d2e(2): nop 
8d30(8): subss 0x18c98(%rip),%xmm0
8d38(a): mov $0x-9223372036854775808,%rax
8d42(5): cvttss2si %xmm0,%rsi
8d47(3): xor %rax,%rsi
8d4a(5): jmp 0xffffff3e(%rip)
8d4f(5): call 0xffff9811(%rip)

"hash_insert" :
8d60(1): push %rbx
8d61(3): mov %rsi,%rbx
8d64(4): sub $0x10,%rsp
8d68(3): mov %rsp,%rdx
8d6b(9): mov $0x28,%rax
8d74(5): mov %rax,0x8(%rsp)
8d79(2): xor %eax,%eax
8d7b(5): call 0xfffffd55(%rip)
8d80(3): cmp $0xff,%eax
8d83(2): jz 0x2d(%rip)
8d85(2): test %eax,%eax
8d87(2): jnz 0x6(%rip)
8d89(4): mov (%rsp),%rbx
8d8d(5): mov 0x8(%rsp),%rcx
8d92(9): xor $0x28,%rcx
8d9b(3): mov %rbx,%rax
8d9e(2): jnz 0x16(%rip)
8da0(4): add $0x10,%rsp
8da4(1): pop %rbx
8da5(1): ret near (%rsp)
8da6(a): nop 0x0(%rax,%rax,1)
8db0(2): xor %ebx,%ebx
8db2(2): jmp 0xffffffdb(%rip)
8db4(5): call 0xffff97ac(%rip)

"hash_delete" :
8dc0(2): push %r12
8dc2(1): push %rbp
8dc3(5): mov $0x1,%ecx
8dc8(1): push %rbx
8dc9(3): mov %rdi,%rbx
8dcc(4): sub $0x10,%rsp
8dd0(3): mov %rsp,%rdx
8dd3(9): mov $0x28,%rax
8ddc(5): mov %rax,0x8(%rsp)
8de1(2): xor %eax,%eax
8de3(5): call 0xffffeffd(%rip)
8de8(3): test %rax,%rax
8deb(3): mov %rax,%rbp
8dee(2): jz 0x11(%rip)
8df0(4): mov (%rsp),%rax
8df4(5): sub $0x1,0x20(%rbx)
8df9(4): cmp $0x0,(%rax)
8dfd(2): jz 0x23(%rip)
8dff(5): mov 0x8(%rsp),%rcx
8e04(9): xor $0x28,%rcx
8e0d(3): mov %rbp,%rax
8e10(6): jnz 0x1ae(%rip)
8e16(4): add $0x10,%rsp
8e1a(1): pop %rbx
8e1b(1): pop %rbp
8e1c(2): pop %r12
8e1e(1): ret near (%rsp)
8e1f(1): nop 
8e20(4): mov 0x18(%rbx),%rax
8e24(4): sub $0x1,%rax
8e28(3): test %rax,%rax
8e2b(4): mov %rax,0x18(%rbx)
8e2f(6): js 0x101(%rip)
8e35(4): pxor %xmm0,%xmm0
8e39(5): cvtsi2ss %rax,%xmm0
8e3e(4): mov 0x10(%rbx),%rax
8e42(4): mov 0x28(%rbx),%rdx
8e46(3): test %rax,%rax
8e49(6): js 0xc7(%rip)
8e4f(4): pxor %xmm1,%xmm1
8e53(5): cvtsi2ss %rax,%xmm1
8e58(4): mulss (%rdx),%xmm1
8e5c(3): ucomiss %xmm0,%xmm1
8e5f(2): jbe 0xffffffa0(%rip)
8e61(4): lea 0x28(%rbx),%rdi
8e65(5): call 0xfffff09b(%rip)
8e6a(4): mov 0x10(%rbx),%rax
8e6e(4): mov 0x28(%rbx),%rdx
8e72(3): test %rax,%rax
8e75(6): js 0x12b(%rip)
8e7b(4): pxor %xmm0,%xmm0
8e7f(5): cvtsi2ss %rax,%xmm0
8e84(4): mov 0x18(%rbx),%rax
8e88(3): test %rax,%rax
8e8b(6): js 0xf5(%rip)
8e91(4): pxor %xmm1,%xmm1
8e95(5): cvtsi2ss %rax,%xmm1
8e9a(4): movss (%rdx),%xmm2
8e9e(4): mulss %xmm0,%xmm2
8ea2(3): ucomiss %xmm1,%xmm2
8ea5(6): jbe 0xffffff5a(%rip)
8eab(4): cmp $0x0,0x10(%rdx)
8eaf(5): mulss 0x4(%rdx),%xmm0
8eb4(6): jz 0xbc(%rip)
8eba(7): ucomiss 0x18b0f(%rip),%xmm0
8ec1(6): jnb 0x8f(%rip)
8ec7(5): cvttss2si %xmm0,%rsi
8ecc(3): mov %rbx,%rdi
8ecf(5): call 0xfffff9c1(%rip)
8ed4(2): test %al,%al
8ed6(6): jnz 0xffffff29(%rip)
8edc(4): mov 0x48(%rbx),%rdi
8ee0(3): test %rdi,%rdi
8ee3(2): jz 0x16(%rip)
8ee5(3): nop (%rax)
8ee8(4): mov 0x8(%rdi),%r12
8eec(5): call 0xffff9b24(%rip)
8ef1(3): test %r12,%r12
8ef4(3): mov %r12,%rdi
8ef7(2): jnz 0xfffffff1(%rip)
8ef9(8): mov $0x0,0x48(%rbx)
8f01(5): jmp 0xfffffefe(%rip)
8f06(a): nop 0x0(%rax,%rax,1)
8f10(3): mov %rax,%rcx
8f13(4): pxor %xmm1,%xmm1
8f17(3): shr $0x1,%rcx
8f1a(3): and $0x1,%eax
8f1d(3): or %rax,%rcx
8f20(5): cvtsi2ss %rcx,%xmm1
8f25(4): addss %xmm1,%xmm1
8f29(5): jmp 0xffffff2f(%rip)
8f2e(2): nop 
8f30(3): mov %rax,%rdx
8f33(4): pxor %xmm0,%xmm0
8f37(3): shr $0x1,%rdx
8f3a(3): and $0x1,%eax
8f3d(3): or %rax,%rdx
8f40(5): cvtsi2ss %rdx,%xmm0
8f45(4): addss %xmm0,%xmm0
8f49(5): jmp 0xfffffef5(%rip)
8f4e(2): nop 
8f50(8): subss 0x18a78(%rip),%xmm0
8f58(a): mov $0x-9223372036854775808,%rax
8f62(5): cvttss2si %xmm0,%rsi
8f67(3): xor %rax,%rsi
8f6a(5): jmp 0xffffff62(%rip)
8f6f(1): nop 
8f70(5): mulss 0x8(%rdx),%xmm0
8f75(5): jmp 0xffffff45(%rip)
8f7a(6): nop 0x0(%rax,%rax,1)
8f80(3): mov %rax,%rcx
8f83(4): pxor %xmm1,%xmm1
8f87(3): shr $0x1,%rcx
8f8a(3): and $0x1,%eax
8f8d(3): or %rax,%rcx
8f90(5): cvtsi2ss %rcx,%xmm1
8f95(4): addss %xmm1,%xmm1
8f99(5): jmp 0xffffff01(%rip)
8f9e(2): nop 
8fa0(3): mov %rax,%rcx
8fa3(4): pxor %xmm0,%xmm0
8fa7(3): shr $0x1,%rcx
8faa(3): and $0x1,%eax
8fad(3): or %rax,%rcx
8fb0(5): cvtsi2ss %rcx,%xmm0
8fb5(4): addss %xmm0,%xmm0
8fb9(5): jmp 0xfffffecb(%rip)
8fbe(5): call 0xffff95a2(%rip)

"adjust_value.part.0" :
8fd0(6): fld 0x189fa(%rip),%st0
8fd6(4): fld 0x8(%rsp),%st0
8fda(2): fucomi %st1,%st0
8fdc(2): jnb 0x74(%rip)
8fde(2): fstp %st0,%st1
8fe0(4): fstcw 0xfffffff6(%rsp)
8fe4(5): movzx 0xfffffff6(%rsp),%eax
8fe9(3): or $0xc,%ah
8fec(5): mov %ax,0xfffffff4(%rsp)
8ff1(2): fld %st0,%st0
8ff3(4): fldcw 0xfffffff4(%rsp)
8ff7(4): fistp %st0,0xffffffe8(%rsp)
8ffb(4): fldcw 0xfffffff6(%rsp)
8fff(5): mov 0xffffffe8(%rsp),%rax
9004(5): mov %rax,0xffffffe0(%rsp)
9009(3): test %rax,%rax
900c(4): fild 0xffffffe0(%rsp),%st0
9010(2): jns 0x8(%rip)
9012(6): fadd 0x189b4(%rip)
9018(2): test %edi,%edi
901a(2): jnz 0x2e(%rip)
901c(2): fxch %st1,%st0
901e(2): fucomip %st1,%st0
9020(2): jp 0x8(%rip)
9022(2): jz 0x28(%rip)
9024(2): fstp %st0,%st0
9026(2): jmp 0xa(%rip)
9028(2): fstp %st0,%st0
902a(6): nop 0x0(%rax,%rax,1)
9030(4): add $0x1,%rax
9034(5): mov %rax,0xffffffe0(%rsp)
9039(3): test %rax,%rax
903c(4): fild 0xffffffe0(%rsp),%st0
9040(2): js 0x50(%rip)
9042(2): jmp 0x8(%rip)
9044(4): nop 0x0(%rax)
9048(2): fstp %st0,%st1
904a(2): REP ret near (%rsp)
904c(4): nop 0x0(%rax)
9050(4): fstcw 0xfffffff6(%rsp)
9054(5): movzx 0xfffffff6(%rsp),%eax
9059(2): fsubr %st0,%st1
905b(2): fxch %st1,%st0
905d(a): mov $0x-9223372036854775808,%rdx
9067(3): or $0xc,%ah
906a(5): mov %ax,0xfffffff4(%rsp)
906f(4): fldcw 0xfffffff4(%rsp)
9073(4): fistp %st0,0xffffffe8(%rsp)
9077(4): fldcw 0xfffffff6(%rsp)
907b(5): mov 0xffffffe8(%rsp),%rax
9080(3): xor %rdx,%rax
9083(5): jmp 0xffffff81(%rip)
9088(8): nop 0x0(%rax,%rax,1)
9090(6): fadd 0x18936(%rip)
9096(1): ret near (%rsp)

"human_readable" :
90a0(2): push %r15
90a2(2): push %r14
90a4(2): mov %edx,%eax
90a6(2): push %r13
90a8(2): push %r12
90aa(3): mov %edx,%r15d
90ad(1): push %rbp
90ae(1): push %rbx
90af(3): and $0x20,%eax
90b2(4): and $0x3,%r15d
90b6(3): mov %edx,%r12d
90b9(3): mov %rdi,%rbx
90bc(7): sub $0x98,%rsp
90c3(5): mov %rcx,0x18(%rsp)
90c8(4): mov %eax,0x30(%rsp)
90cc(9): mov $0x28,%rcx
90d5(8): mov %rcx,0x88(%rsp)
90dd(2): xor %ecx,%ecx
90df(3): cmp $0x1,%eax
90e2(4): mov %rsi,(%rsp)
90e6(5): mov %r8,0x10(%rsp)
90eb(2): sbb %eax,%eax
90ed(3): and $0xe8,%eax
90f0(5): add $0x400,%eax
90f5(4): mov %eax,0x34(%rsp)
90f9(5): call 0xffff9397(%rip)
90fe(3): mov (%rax),%r14
9101(3): mov %rax,%r13
9104(3): mov %r14,%rdi
9107(5): call 0xffff9429(%rip)
910c(4): mov 0x10(%r13),%rcx
9110(4): mov 0x8(%r13),%r13
9114(3): mov %rax,%rbp
9117(4): sub $0x1,%rax
911b(5): mov $0x1,%edx
9120(4): cmp $0x10,%rax
9124(7): lea 0x19571(%rip),%rax
912b(3): mov %r13,%rdi
912e(4): cmovnb %rdx,%rbp
9132(5): mov %rcx,0x38(%rsp)
9137(4): cmovnb %rax,%r14
913b(5): call 0xffff93f5(%rip)
9140(4): cmp $0x11,%rax
9144(7): lea 0x18e96(%rip),%rax
914b(5): mov 0x10(%rsp),%rdi
9150(5): mov 0x18(%rsp),%rcx
9155(4): cmovnb %rax,%r13
9159(4): mov (%rsp),%rax
915d(6): add $0x287,%rax
9163(3): cmp %rcx,%rdi
9166(5): mov %rax,0x8(%rsp)
916b(6): jnbe 0x14d(%rip)
9171(2): xor %edx,%edx
9173(3): mov %rcx,%rax
9176(3): div %rdi,%rax
9179(3): test %rdx,%rdx
917c(3): mov %rax,%rdi
917f(6): jz 0x361(%rip)
9185(5): mov %rcx,0x18(%rsp)
918a(3): test %rcx,%rcx
918d(4): fild 0x18(%rsp),%st0
9191(2): jns 0x8(%rip)
9193(6): fadd 0x18833(%rip)
9199(5): mov 0x10(%rsp),%rax
919e(5): mov %rax,0x18(%rsp)
91a3(3): test %rax,%rax
91a6(4): fild 0x18(%rsp),%st0
91aa(2): jns 0x8(%rip)
91ac(6): fadd 0x1881a(%rip)
91b2(2): fdivp %st0,%st1
91b4(5): mov %rbx,0x18(%rsp)
91b9(3): test %rbx,%rbx
91bc(4): fild 0x18(%rsp),%st0
91c0(2): jns 0x8(%rip)
91c2(6): fadd 0x18804(%rip)
91c8(4): test $0x10,%r12b
91cc(2): fmulp %st0,%st1
91ce(6): jz 0x1ca(%rip)
91d4(4): fild 0x34(%rsp),%st0
91d8(2): xor %ebx,%ebx
91da(2): fld %st0,%st0
91dc(2): jmp 0x8(%rip)
91de(2): nop 
91e0(2): fstp %st0,%st1
91e2(2): fxch %st2,%st0
91e4(2): fld %st0,%st0
91e6(3): add $0x1,%ebx
91e9(2): fmul %st2
91eb(2): fxch %st3,%st0
91ed(2): fucomi %st3,%st0
91ef(2): jb 0x11(%rip)
91f1(3): cmp $0x8,%ebx
91f4(2): jnz 0xffffffec(%rip)
91f6(2): fstp %st0,%st2
91f8(2): fstp %st0,%st2
91fa(2): jmp 0xa(%rip)
91fc(4): nop 0x0(%rax)
9200(2): fstp %st0,%st2
9202(2): fstp %st0,%st2
9204(4): mov 0x30(%rsp),%ecx
9208(4): add $0x1,%rbp
920c(2): xor %eax,%eax
920e(2): fdivrp %st0,%st1
9210(2): test %ecx,%ecx
9212(3): setz %al
9215(4): cmp $0x1,%r15d
9219(5): lea 0x1(%rbp,%rax,1),%rax
921e(5): mov %rax,0x18(%rsp)
9223(6): jz 0x56d(%rip)
9229(6): fld 0x18801(%rip),%st0
922f(2): fucomip %st1,%st0
9231(6): jnbe 0x3d7(%rip)
9237(2): fld %st0,%st0
9239(4): fstp %st0,0x20(%rsp)
923d(4): sub $0x10,%rsp
9241(7): lea 0x1879e(%rip),%rcx
9248(5): mov $0x1,%esi
924d(7): mov $0xffffffff,%rdx
9254(2): xor %eax,%eax
9256(5): mov 0x10(%rsp),%r14
925b(3): mov %r14,%rdi
925e(3): fstp %st0,(%rsp)
9261(5): call 0xffff979f(%rip)
9266(3): mov %r14,%rdi
9269(5): call 0xffff92c7(%rip)
926e(1): pop %rcx
926f(1): pop %rsi
9270(5): cmp 0x18(%rsp),%rax
9275(3): mov %rax,%r14
9278(4): fld 0x20(%rsp),%st0
927c(6): jnbe 0x5ac(%rip)
9282(4): test $0x8,%r12b
9286(6): jz 0x16a(%rip)
928c(4): mov (%rsp),%rax
9290(6): cmp $0x30,0xffffffff(%rax,%r14,1)
9296(6): jnz 0x162(%rip)
929c(6): fld 0x1878a(%rip),%st0
92a2(4): cmp $0x1,%r15d
92a6(2): fmul %st0,%st1
92a8(6): jnz 0x588(%rip)
92ae(5): jmp 0x535(%rip)
92b3(5): nop 0x0(%rax,%rax,1)
92b8(3): test %rcx,%rcx
92bb(6): jz 0xfffffeca(%rip)
92c1(5): mov 0x10(%rsp),%rax
92c6(2): xor %edx,%edx
92c8(3): div %rcx,%rax
92cb(3): test %rdx,%rdx
92ce(3): mov %rax,%r8
92d1(6): jnz 0xfffffeb4(%rip)
92d7(3): mov %rbx,%rax
92da(2): xor %edx,%edx
92dc(3): div %r8,%rax
92df(3): mov %rax,%rbx
92e2(4): lea 0x0(%rdx,%rdx,4),%rax
92e6(2): xor %edx,%edx
92e8(3): mov %rbx,%rsi
92eb(3): add %rax,%rax
92ee(3): div %r8,%rax
92f1(3): add %rdx,%rdx
92f4(3): mov %eax,%r9d
92f7(3): cmp %rdx,%r8
92fa(6): jbe 0x58e(%rip)
9300(2): xor %edi,%edi
9302(3): test %rdx,%rdx
9305(4): setnz %dil
9309(3): mov %r12d,%ecx
930c(5): mov 0x8(%rsp),%r8
9311(5): mov $0xffffffff,%ebx
9316(3): and $0x10,%ecx
9319(6): jz 0x3c7(%rip)
931f(5): mov 0x34(%rsp),%r8d
9324(3): cmp %rsi,%r8
9327(3): mov %r8,%r11
932a(6): jnbe 0x576(%rip)
9330(2): xor %ebx,%ebx
9332(2): jmp 0x25(%rip)
9334(4): nop 0x0(%rax)
9338(2): test %edi,%edi
933a(4): setnz %dil
933e(4): movzx %dil,%edi
9342(3): add $0x1,%ebx
9345(3): cmp %r10,%r8
9348(6): jnbe 0x315(%rip)
934e(3): cmp $0x8,%ebx
9351(6): jz 0x5a7(%rip)
9357(3): mov %rsi,%rax
935a(2): xor %edx,%edx
935c(2): mov %edi,%esi
935e(3): div %r8,%rax
9361(2): sar $0x1,%esi
9363(3): mov %rax,%r10
9366(3): lea 0x0(%rdx,%rdx,4),%eax
9369(2): xor %edx,%edx
936b(4): lea 0x0(%r9,%rax,2),%eax
936f(3): div %r11d,%eax
9372(3): lea 0x0(%rsi,%rdx,2),%edx
9375(3): mov %eax,%r9d
9378(3): mov %r10,%rsi
937b(2): add %edx,%edi
937d(3): cmp %edx,%r11d
9380(2): jnbe 0xffffffb8(%rip)
9382(3): cmp %edi,%r11d
9385(4): setb %dil
9389(4): movzx %dil,%edi
938d(3): add $0x2,%edi
9390(2): jmp 0xffffffb2(%rip)
9392(6): nop 0x0(%rax,%rax,1)
9398(4): cmp $0x1,%r15d
939c(2): jz 0x10(%rip)
939e(6): fld 0x1868c(%rip),%st0
93a4(2): fucomip %st1,%st0
93a6(6): jnbe 0x28a(%rip)
93ac(4): sub $0x10,%rsp
93b0(7): lea 0x18629(%rip),%rcx
93b7(5): mov $0x1,%esi
93bc(5): mov 0x10(%rsp),%rbx
93c1(7): mov $0xffffffff,%rdx
93c8(2): xor %eax,%eax
93ca(3): fstp %st0,(%rsp)
93cd(2): xor %ebp,%ebp
93cf(3): mov %rbx,%rdi
93d2(5): call 0xffff962e(%rip)
93d7(3): mov %rbx,%rdi
93da(5): mov $0xffffffff,%ebx
93df(5): call 0xffff9151(%rip)
93e4(1): pop %rsi
93e5(1): pop %rdi
93e6(3): mov %rax,%r14
93e9(2): jmp 0x17(%rip)
93eb(5): nop 0x0(%rax,%rax,1)
93f0(2): fstp %st0,%st0
93f2(2): jmp 0xe(%rip)
93f4(4): nop 0x0(%rax)
93f8(2): fstp %st0,%st0
93fa(6): nop 0x0(%rax,%rax,1)
9400(5): mov 0x8(%rsp),%r15
9405(4): mov (%rsp),%rsi
9409(3): mov %r14,%rdx
940c(3): sub %r14,%r15
940f(3): sub %rbp,%r14
9412(3): mov %r15,%rdi
9415(5): call 0xffff947b(%rip)
941a(3): mov %r14,%r8
941d(3): add %r15,%r8
9420(4): test $0x4,%r12b
9424(6): jnz 0xe4(%rip)
942a(4): test $0x80,%r12b
942e(2): jz 0x79(%rip)
9430(3): cmp $0xff,%ebx
9433(6): jz 0x31d(%rip)
9439(3): mov %r12d,%eax
943c(5): and $0x100,%eax
9441(2): mov %eax,%ecx
9443(2): or %ebx,%ecx
9445(2): jz 0x62(%rip)
9447(4): and $0x40,%r12d
944b(6): jnz 0x19d(%rip)
9451(2): test %ebx,%ebx
9453(6): jz 0x633(%rip)
9459(3): cmp $0x1,%ebx
945c(2): jnz 0x10(%rip)
945e(5): mov 0x30(%rsp),%r9d
9463(3): test %r9d,%r9d
9466(6): jz 0x44a(%rip)
946c(7): lea 0x185ad(%rip),%rcx
9473(3): movsxd %ebx,%rbx
9476(5): mov 0x8(%rsp),%rdi
947b(2): test %eax,%eax
947d(4): movzx 0x0(%rcx,%rbx,1),%ecx
9481(4): lea 0x1(%rdi),%rdx
9485(2): mov %cl,(%rdi)
9487(6): jz 0x43d(%rip)
948d(5): mov 0x30(%rsp),%r8d
9492(3): test %r8d,%r8d
9495(6): jnz 0x1bb(%rip)
949b(4): lea 0x1(%rdx),%rax
949f(3): mov $0x42,(%rdx)
94a2(5): mov %rax,0x8(%rsp)
94a7(5): mov 0x8(%rsp),%rax
94ac(8): mov 0x88(%rsp),%rcx
94b4(9): xor $0x28,%rcx
94bd(3): mov $0x0,(%rax)
94c0(3): mov %r15,%rax
94c3(6): jnz 0x598(%rip)
94c9(7): add $0x98,%rsp
94d0(1): pop %rbx
94d1(1): pop %rbp
94d2(2): pop %r12
94d4(2): pop %r13
94d6(2): pop %r14
94d8(2): pop %r15
94da(1): ret near (%rsp)
94db(5): nop 0x0(%rax,%rax,1)
94e0(3): mov %rbx,%rsi
94e3(2): xor %edx,%edx
94e5(4): imul %rax,%rsi
94e9(3): mov %rsi,%rax
94ec(3): div %rdi,%rax
94ef(3): cmp %rbx,%rax
94f2(6): jnz 0xfffffc93(%rip)
94f8(2): xor %edi,%edi
94fa(3): xor %r9d,%r9d
94fd(5): jmp 0xfffffe0c(%rip)
9502(6): nop 0x0(%rax,%rax,1)
9508(3): mov %r8,%r14
950b(3): mov %r13,%rdi
950e(5): mov %r8,0x48(%rsp)
9513(3): sub %r15,%r14
9516(7): mov $0xffffffff,%rbp
951d(5): call 0xffff9013(%rip)
9522(5): lea 0x50(%rsp),%rdi
9527(5): mov $0x29,%ecx
952c(3): mov %r14,%rdx
952f(3): mov %r15,%rsi
9532(5): mov %rax,0x40(%rsp)
9537(5): mov %rdi,0x18(%rsp)
953c(5): call 0xffff91b4(%rip)
9541(3): mov %r12d,%ecx
9544(4): mov %ebx,0x20(%rsp)
9548(3): mov %r14,%r12
954b(3): mov %r13,%rbx
954e(5): mov 0x48(%rsp),%r8
9553(5): mov 0x38(%rsp),%r15
9558(5): mov 0x40(%rsp),%r13
955d(3): mov %ecx,%r14d
9560(2): jmp 0x42(%rip)
9562(6): nop 0x0(%rax,%rax,1)
9568(5): mov 0x18(%rsp),%rax
956d(3): sub %rbp,%r12
9570(3): sub %rbp,%r8
9573(3): mov %r8,%rdi
9576(3): mov %rbp,%rdx
9579(4): lea 0x0(%rax,%r12,1),%rsi
957d(5): call 0xffff9193(%rip)
9582(3): test %r12,%r12
9585(3): mov %rax,%r8
9588(6): jz 0x510(%rip)
958e(3): sub %r13,%r8
9591(3): mov %r13,%rdx
9594(3): mov %rbx,%rsi
9597(3): mov %r8,%rdi
959a(5): call 0xffff9176(%rip)
959f(3): mov %rax,%r8
95a2(4): movzx (%r15),%eax
95a6(2): test %al,%al
95a8(2): jz 0xf(%rip)
95aa(2): cmp $0x7f,%al
95ac(3): movzx %al,%ebp
95af(4): cmovnb %r12,%rbp
95b3(4): add $0x1,%r15
95b7(3): cmp %r12,%rbp
95ba(2): jbe 0xffffffae(%rip)
95bc(3): mov %r14d,%eax
95bf(3): mov %r8,%r15
95c2(3): mov %r12,%r14
95c5(5): mov 0x18(%rsp),%rsi
95ca(3): sub %r14,%r15
95cd(3): mov %r14,%rdx
95d0(3): mov %r15,%rdi
95d3(4): mov 0x20(%rsp),%ebx
95d7(3): mov %eax,%r12d
95da(5): call 0xffff9136(%rip)
95df(5): jmp 0xfffffe4b(%rip)
95e4(4): nop 0x0(%rax)
95e8(4): mov (%rsp),%rcx
95ec(7): lea 0x288(%rcx),%rdi
95f3(7): mov $0x20,0x287(%rcx)
95fa(5): mov %rdi,0x8(%rsp)
95ff(5): jmp 0xfffffe52(%rip)
9604(4): nop 0x0(%rax)
9608(4): sub $0x10,%rsp
960c(3): mov %r15d,%edi
960f(2): fld %st0,%st0
9611(3): fstp %st0,(%rsp)
9614(4): fstp %st0,0x30(%rsp)
9618(5): call 0xfffff9b8(%rip)
961d(1): pop %rax
961e(1): pop %rdx
961f(4): fld 0x20(%rsp),%st0
9623(5): jmp 0xfffffc16(%rip)
9628(8): nop 0x0(%rax,%rax,1)
9630(4): sub $0x10,%rsp
9634(3): mov %r15d,%edi
9637(3): fstp %st0,(%rsp)
963a(5): call 0xfffff996(%rip)
963f(2): pop %r8
9641(2): pop %r9
9643(5): jmp 0xfffffd69(%rip)
9648(8): nop 0x0(%rax,%rax,1)
9650(4): lea 0x2(%rdi),%rdx
9654(4): mov $0x69,0x1(%rdi)
9658(5): jmp 0xfffffe43(%rip)
965d(4): cmp $0x9,%r10
9661(6): jnbe 0x297(%rip)
9667(4): cmp $0x1,%r15d
966b(6): jz 0x2b7(%rip)
9671(3): test %r15d,%r15d
9674(3): setz %dl
9677(2): test %edi,%edi
9679(4): setnle %r8b
967d(3): and %r8d,%edx
9680(2): test %dl,%dl
9682(6): jz 0x287(%rip)
9688(4): lea 0x1(%rax),%r9d
968c(4): cmp $0xa,%r9d
9690(6): jz 0x301(%rip)
9696(4): add $0x30,%r9d
969a(4): mov (%rsp),%rax
969e(7): lea 0x286(%rax),%r8
96a5(7): mov %r9b,0x286(%rax)
96ac(2): mov %ebp,%eax
96ae(3): sub %rbp,%r8
96b1(3): cmp $0x8,%ebp
96b4(6): jnb 0x28d(%rip)
96ba(4): test $0x4,%bpl
96be(6): jnz 0x388(%rip)
96c4(2): test %eax,%eax
96c6(2): jz 0x11(%rip)
96c8(4): movzx (%r14),%edx
96cc(2): test $0x2,%al
96ce(3): mov %dl,(%r8)
96d1(6): jnz 0x38f(%rip)
96d7(2): xor %edi,%edi
96d9(3): xor %r9d,%r9d
96dc(4): nop 0x0(%rax)
96e0(4): cmp $0x1,%r15d
96e4(6): jz 0x17c(%rip)
96ea(3): test %r15d,%r15d
96ed(2): jnz 0x23(%rip)
96ef(3): add %r9d,%edi
96f2(2): test %edi,%edi
96f4(2): jle 0x1c(%rip)
96f6(4): add $0x1,%rsi
96fa(2): test %ecx,%ecx
96fc(2): jz 0x14(%rip)
96fe(4): mov 0x34(%rsp),%eax
9702(3): cmp %rsi,%rax
9705(6): jz 0x1cb(%rip)
970b(5): nop 0x0(%rax,%rax,1)
9710(3): mov %r8,%r15
9713(a): mov $0x-3689348814741910323,%rcx
971d(3): nop (%rax)
9720(3): mov %rsi,%rax
9723(4): sub $0x1,%r15
9727(3): mul %rax,%rcx,%rdx
972a(4): shr $0x3,%rdx
972e(4): lea 0x0(%rdx,%rdx,4),%rax
9732(3): add %rax,%rax
9735(3): sub %rax,%rsi
9738(3): add $0x30,%esi
973b(3): test %rdx,%rdx
973e(3): mov %sil,(%r15)
9741(3): mov %rdx,%rsi
9744(2): jnz 0xffffffdc(%rip)
9746(5): jmp 0xfffffcda(%rip)
974b(5): nop 0x0(%rax,%rax,1)
9750(5): mov 0x10(%rsp),%rcx
9755(4): cmp $0x1,%rcx
9759(6): jbe 0x1a9(%rip)
975f(4): mov 0x34(%rsp),%edx
9763(5): mov $0x1,%ebx
9768(5): mov $0x1,%eax
976d(4): imul %rdx,%rax
9771(3): cmp %rax,%rcx
9774(6): jbe 0xfffffcc5(%rip)
977a(3): add $0x1,%ebx
977d(3): cmp $0x8,%ebx
9780(2): jnz 0xffffffed(%rip)
9782(5): jmp 0xfffffcb7(%rip)
9787(9): nop 0x0(%rax,%rax,1)
9790(4): sub $0x10,%rsp
9794(7): lea 0x1824b(%rip),%rcx
979b(7): mov $0xffffffff,%rdx
97a2(2): fld %st0,%st0
97a4(3): fstp %st0,(%rsp)
97a7(5): mov 0x10(%rsp),%r14
97ac(5): mov $0x1,%esi
97b1(2): xor %eax,%eax
97b3(3): mov %r14,%rdi
97b6(4): fstp %st0,0x30(%rsp)
97ba(5): call 0xffff9246(%rip)
97bf(3): mov %r14,%rdi
97c2(5): call 0xffff8d6e(%rip)
97c7(3): mov %rax,%r14
97ca(1): pop %rax
97cb(1): pop %rdx
97cc(5): cmp 0x18(%rsp),%r14
97d1(4): fld 0x20(%rsp),%st0
97d5(6): jbe 0xfffffaad(%rip)
97db(6): fld 0x1824b(%rip),%st0
97e1(2): fmul %st0,%st1
97e3(2): fdivp %st0,%st1
97e5(4): sub $0x10,%rsp
97e9(7): lea 0x181f0(%rip),%rcx
97f0(5): mov 0x10(%rsp),%r14
97f5(7): mov $0xffffffff,%rdx
97fc(5): mov $0x1,%esi
9801(2): xor %eax,%eax
9803(2): xor %ebp,%ebp
9805(3): mov %r14,%rdi
9808(3): fstp %st0,(%rsp)
980b(5): call 0xffff91f5(%rip)
9810(3): mov %r14,%rdi
9813(5): call 0xffff8d1d(%rip)
9818(2): pop %r10
981a(3): mov %rax,%r14
981d(2): pop %r11
981f(5): jmp 0xfffffbe1(%rip)
9824(4): nop 0x0(%rax)
9828(6): fld 0x181fe(%rip),%st0
982e(2): fmul %st0,%st1
9830(6): fld 0x181fa(%rip),%st0
9836(2): fucomip %st2,%st0
9838(2): jbe 0xffffffab(%rip)
983a(4): fstp %st0,0x18(%rsp)
983e(4): sub $0x10,%rsp
9842(3): mov %r15d,%edi
9845(3): fstp %st0,(%rsp)
9848(5): call 0xfffff788(%rip)
984d(1): pop %rbp
984e(2): pop %r14
9850(4): fld 0x18(%rsp),%st0
9854(2): jmp 0xffffff8f(%rip)
9856(a): nop 0x0(%rax,%rax,1)
9860(3): mov %rsi,%rax
9863(3): movsxd %edi,%rdi
9866(3): and $0x1,%eax
9869(3): add %rdi,%rax
986c(3): setnz %al
986f(3): movzx %al,%eax
9872(3): add %eax,%r9d
9875(4): cmp $0x5,%r9d
9879(6): jnle 0xfffffe7d(%rip)
987f(5): jmp 0xfffffe91(%rip)
9884(4): nop 0x0(%rax)
9888(4): setb %dil
988c(4): movzx %dil,%edi
9890(3): add $0x2,%edi
9893(5): jmp 0xfffffa76(%rip)
9898(8): nop 0x0(%rax,%rax,1)
98a0(5): mov 0x8(%rsp),%r8
98a5(2): xor %ebx,%ebx
98a7(5): jmp 0xfffffe39(%rip)
98ac(4): nop 0x0(%rax)
98b0(5): mov 0x8(%rsp),%rbx
98b5(2): test %eax,%eax
98b7(4): lea 0x1(%rbx),%rdx
98bb(3): mov $0x6b,(%rbx)
98be(6): jnz 0xfffffbdd(%rip)
98c4(5): mov %rdx,0x8(%rsp)
98c9(5): jmp 0xfffffbde(%rip)
98ce(2): nop 
98d0(3): cmp $0x8,%ebx
98d3(6): jz 0xfffffe3d(%rip)
98d9(3): add $0x1,%ebx
98dc(4): test $0x8,%r12b
98e0(6): jz 0xc2(%rip)
98e6(4): lea 0xffffffff(%r8),%r15
98ea(5): mov $0x31,0xffffffff(%r8)
98ef(5): jmp 0xfffffb31(%rip)
98f4(4): nop 0x0(%rax)
98f8(5): mov 0x8(%rsp),%r8
98fd(5): jmp 0xfffffde3(%rip)
9902(2): xor %ebx,%ebx
9904(5): jmp 0xfffffb35(%rip)
9909(2): test %eax,%eax
990b(6): jnz 0xfffffd8b(%rip)
9911(4): test $0x8,%r12b
9915(2): jnz 0x1f(%rip)
9917(6): mov $0x30,%r9d
991d(5): jmp 0xfffffd7d(%rip)
9922(2): mov %eax,%edx
9924(3): and $0x1,%edx
9927(2): add %edi,%edx
9929(3): cmp $0x2,%edx
992c(3): setnle %dl
992f(5): jmp 0xfffffd51(%rip)
9934(5): mov 0x8(%rsp),%r8
9939(3): xor %r9d,%r9d
993c(5): jmp 0xfffffda4(%rip)
9941(3): mov (%r14),%rax
9944(3): mov %r14,%r9
9947(3): mov %rax,(%r8)
994a(2): mov %ebp,%eax
994c(5): mov 0xfffffff8(%r14,%rax,1),%rdx
9951(5): mov %rdx,0xfffffff8(%r8,%rax,1)
9956(4): lea 0x8(%r8),%rdx
995a(3): mov %r8,%rax
995d(4): and $0xfffffff8,%rdx
9961(3): sub %rdx,%rax
9964(3): sub %rax,%r9
9967(2): add %ebp,%eax
9969(3): and $0xf8,%eax
996c(3): cmp $0x8,%eax
996f(6): jb 0xfffffd68(%rip)
9975(3): and $0xf8,%eax
9978(2): xor %edi,%edi
997a(3): mov %edi,%r10d
997d(3): add $0x8,%edi
9980(4): mov 0x0(%r9,%r10,1),%r11
9984(2): cmp %eax,%edi
9986(4): mov %r11,0x0(%rdx,%r10,1)
998a(2): jb 0xfffffff0(%rip)
998c(5): jmp 0xfffffd4b(%rip)
9991(4): lea 0x1(%r10),%rsi
9995(4): cmp $0xa,%rsi
9999(2): jz 0x57(%rip)
999b(2): xor %edi,%edi
999d(5): jmp 0xffffff74(%rip)
99a2(3): mov %rbp,%rax
99a5(5): mov $0x30,0xffffffff(%r8)
99aa(3): not %rax
99ad(3): add %rax,%r8
99b0(3): cmp $0x8,%ebp
99b3(2): mov %ebp,%eax
99b5(2): jnb 0x45(%rip)
99b7(3): and $0x4,%ebp
99ba(6): jnz 0xb7(%rip)
99c0(2): test %eax,%eax
99c2(6): jz 0xffffff24(%rip)
99c8(4): movzx (%r14),%edx
99cc(2): test $0x2,%al
99ce(3): mov %dl,(%r8)
99d1(6): jz 0xffffff15(%rip)
99d7(6): movzx 0xfffffffe(%r14,%rax,1),%edx
99dd(6): mov %dx,0xfffffffe(%r8,%rax,1)
99e3(5): jmp 0xffffff03(%rip)
99e8(8): nop 0x0(%rax,%rax,1)
99f0(5): mov 0x8(%rsp),%r8
99f5(5): jmp 0xfffffce2(%rip)
99fa(3): mov (%r14),%rax
99fd(4): lea 0x8(%r8),%rcx
9a01(4): and $0xfffffff8,%rcx
9a05(3): mov %rax,(%r8)
9a08(2): mov %ebp,%eax
9a0a(5): mov 0xfffffff8(%r14,%rax,1),%rdx
9a0f(5): mov %rdx,0xfffffff8(%r8,%rax,1)
9a14(3): mov %r8,%rax
9a17(3): sub %rcx,%rax
9a1a(3): sub %rax,%r14
9a1d(2): add %ebp,%eax
9a1f(3): and $0xf8,%eax
9a22(3): cmp $0x8,%eax
9a25(6): jb 0xfffffec1(%rip)
9a2b(3): and $0xf8,%eax
9a2e(2): xor %edx,%edx
9a30(2): mov %edx,%esi
9a32(3): add $0x8,%edx
9a35(4): mov 0x0(%r14,%rsi,1),%rdi
9a39(2): cmp %eax,%edx
9a3b(4): mov %rdi,0x0(%rcx,%rsi,1)
9a3f(2): jb 0xfffffff1(%rip)
9a41(5): jmp 0xfffffea5(%rip)
9a46(3): mov (%r14),%edx
9a49(3): mov %edx,(%r8)
9a4c(5): mov 0xfffffffc(%r14,%rax,1),%edx
9a51(5): mov %edx,0xfffffffc(%r8,%rax,1)
9a56(5): jmp 0xfffffc81(%rip)
9a5b(5): call 0xffff8b05(%rip)
9a60(6): movzx 0xfffffffe(%r14,%rax,1),%edx
9a66(6): mov %dx,0xfffffffe(%r8,%rax,1)
9a6c(5): jmp 0xfffffc6b(%rip)
9a71(3): mov (%r14),%edx
9a74(3): mov %edx,(%r8)
9a77(5): mov 0xfffffffc(%r14,%rax,1),%edx
9a7c(5): mov %edx,0xfffffffc(%r8,%rax,1)
9a81(5): jmp 0xfffffe65(%rip)
9a86(2): test %eax,%eax
9a88(5): mov 0x8(%rsp),%rdx
9a8d(6): jnz 0xfffffa0e(%rip)
9a93(5): jmp 0xfffffa14(%rip)
9a98(4): mov 0x20(%rsp),%ebx
9a9c(3): mov %rax,%r15
9a9f(3): mov %r14d,%r12d
9aa2(5): jmp 0xfffff988(%rip)

"human_options" :
9ab0(2): push %r13
9ab2(2): push %r12
9ab4(3): mov %rsi,%r13
9ab7(1): push %rbp
9ab8(1): push %rbx
9ab9(3): mov %rdx,%r12
9abc(3): mov %rdi,%rbx
9abf(4): sub $0x18,%rsp
9ac3(9): mov $0x28,%rax
9acc(5): mov %rax,0x8(%rsp)
9ad1(2): xor %eax,%eax
9ad3(3): test %rdi,%rdi
9ad6(6): jz 0x11a(%rip)
9adc(2): xor %ebp,%ebp
9ade(3): cmp $0x27,(%rbx)
9ae1(2): jnz 0xb(%rip)
9ae3(4): add $0x1,%rbx
9ae7(5): mov $0x4,%ebp
9aec(7): lea 0x17f25(%rip),%rdx
9af3(7): lea 0x21df26(%rip),%rsi
9afa(5): mov $0x4,%ecx
9aff(3): mov %rbx,%rdi
9b02(5): call 0xffffac0e(%rip)
9b07(2): test %eax,%eax
9b09(2): js 0x3f(%rip)
9b0b(7): lea 0x17f06(%rip),%rdx
9b12(2): cwde 
9b14(8): mov $0x1,(%r12)
9b1c(3): or 0x0(%rdx,%rax,4),%ebp
9b1f(2): xor %eax,%eax
9b21(4): mov %ebp,0x0(%r13)
9b25(5): mov 0x8(%rsp),%rcx
9b2a(9): xor $0x28,%rcx
9b33(6): jnz 0x15e(%rip)
9b39(4): add $0x18,%rsp
9b3d(1): pop %rbx
9b3e(1): pop %rbp
9b3f(2): pop %r12
9b41(2): pop %r13
9b43(1): ret near (%rsp)
9b44(4): nop 0x0(%rax)
9b48(7): lea 0x17eb7(%rip),%r8
9b4f(2): xor %edx,%edx
9b51(3): mov %rsp,%rsi
9b54(3): mov %r12,%rcx
9b57(3): mov %rbx,%rdi
9b5a(5): call 0x3d26(%rip)
9b5f(2): test %eax,%eax
9b61(2): jnz 0x47(%rip)
9b63(3): movzx (%rbx),%esi
9b66(3): lea 0xffffffd0(%rsi),%edx
9b69(3): cmp $0x9,%dl
9b6c(2): jbe 0x2c(%rip)
9b6e(4): mov (%rsp),%rcx
9b72(3): cmp %rcx,%rbx
9b75(2): jnz 0x14(%rip)
9b77(5): jmp 0xd9(%rip)
9b7c(4): nop 0x0(%rax)
9b80(3): cmp %rcx,%rbx
9b83(6): jz 0xcd(%rip)
9b89(4): add $0x1,%rbx
9b8d(3): movzx (%rbx),%edi
9b90(3): lea 0xffffffd0(%rdi),%edx
9b93(3): cmp $0x9,%dl
9b96(2): jnbe 0xffffffea(%rip)
9b98(4): mov (%r12),%rdx
9b9c(4): mov %ebp,0x0(%r13)
9ba0(2): jmp 0x14(%rip)
9ba2(6): nop 0x0(%rax,%rax,1)
9ba8(4): mov (%r12),%rdx
9bac(8): mov $0x0,0x0(%r13)
9bb4(3): test %rdx,%rdx
9bb7(6): jnz 0xffffff6e(%rip)
9bbd(7): lea 0x17e32(%rip),%rdi
9bc4(5): call 0xffff881c(%rip)
9bc9(4): cmp $0x1,%rax
9bcd(3): sbb %rax,%rax
9bd0(5): and $0x200,%eax
9bd5(6): add $0x200,%rax
9bdb(4): mov %rax,(%r12)
9bdf(5): mov $0x4,%eax
9be4(5): jmp 0xffffff41(%rip)
9be9(7): nop 0x0(%rax)
9bf0(7): lea 0x15f61(%rip),%rdi
9bf7(5): call 0xffff87e9(%rip)
9bfc(3): test %rax,%rax
9bff(3): mov %rax,%rbx
9c02(6): jnz 0xfffffeda(%rip)
9c08(7): lea 0x17ddd(%rip),%rdi
9c0f(5): call 0xffff87d1(%rip)
9c14(3): test %rax,%rax
9c17(3): mov %rax,%rbx
9c1a(6): jnz 0xfffffec2(%rip)
9c20(7): lea 0x17dcf(%rip),%rdi
9c27(5): call 0xffff87b9(%rip)
9c2c(3): test %rax,%rax
9c2f(2): jz 0x4b(%rip)
9c31(8): mov $0x200,(%r12)
9c39(2): xor %eax,%eax
9c3b(8): mov $0x0,0x0(%r13)
9c43(5): jmp 0xfffffee2(%rip)
9c48(8): nop 0x0(%rax,%rax,1)
9c50(4): cmp $0x42,0xffffffff(%rcx)
9c54(2): jz 0x14(%rip)
9c56(4): or $0x80,%bpl
9c5a(3): or $0x20,%ebp
9c5d(5): jmp 0xffffff3b(%rip)
9c62(6): nop 0x0(%rax,%rax,1)
9c68(6): or $0x180,%ebp
9c6e(4): cmp $0x69,0xfffffffe(%rcx)
9c72(6): jnz 0xffffff26(%rip)
9c78(2): jmp 0xffffffe2(%rip)
9c7a(8): mov $0x400,(%r12)
9c82(2): xor %eax,%eax
9c84(8): mov $0x0,0x0(%r13)
9c8c(5): jmp 0xfffffe99(%rip)
9c91(5): call 0xffff88cf(%rip)

"ino_hash" :
9ca0(3): mov (%rdi),%rax
9ca3(2): xor %edx,%edx
9ca5(3): div %rsi,%rax
9ca8(3): mov %rdx,%rax
9cab(1): ret near (%rsp)

"ino_compare" :
9cb0(3): mov (%rsi),%rax
9cb3(3): cmp %rax,(%rdi)
9cb6(3): setz %al
9cb9(1): ret near (%rsp)

"ino_map_alloc" :
9cc0(1): push %rbp
9cc1(1): push %rbx
9cc2(3): mov %rdi,%rbp
9cc5(5): mov $0x18,%edi
9cca(4): sub $0x8,%rsp
9cce(5): call 0xffff8ab2(%rip)
9cd3(3): test %rax,%rax
9cd6(3): mov %rax,%rbx
9cd9(2): jz 0x37(%rip)
9cdb(7): mov 0x21e2e6(%rip),%r8
9ce2(7): lea 0xffffffc7(%rip),%rcx
9ce9(7): lea 0xffffffb0(%rip),%rdx
9cf0(2): xor %esi,%esi
9cf2(5): mov $0x3fd,%edi
9cf7(5): call 0xffffe869(%rip)
9cfc(3): test %rax,%rax
9cff(3): mov %rax,(%rbx)
9d02(2): jz 0x1e(%rip)
9d04(4): mov %rbp,0x8(%rbx)
9d08(8): mov $0x0,0x10(%rbx)
9d10(4): add $0x8,%rsp
9d14(3): mov %rbx,%rax
9d17(1): pop %rbx
9d18(1): pop %rbp
9d19(1): ret near (%rsp)
9d1a(6): nop 0x0(%rax,%rax,1)
9d20(3): mov %rbx,%rdi
9d23(2): xor %ebx,%ebx
9d25(5): call 0xffff8ceb(%rip)
9d2a(2): jmp 0xffffffe6(%rip)

"ino_map_free" :
9d30(1): push %rbx
9d31(3): mov %rdi,%rbx
9d34(3): mov (%rdi),%rdi
9d37(5): call 0xffffea79(%rip)
9d3c(4): mov 0x10(%rbx),%rdi
9d40(5): call 0xffff8cd0(%rip)
9d45(3): mov %rbx,%rdi
9d48(1): pop %rbx
9d49(5): jmp 0xffff8cc7(%rip)

"ino_map_insert" :
9d50(1): push %rbp
9d51(1): push %rbx
9d52(3): mov %rdi,%rbp
9d55(4): sub $0x18,%rsp
9d59(4): mov 0x10(%rdi),%rbx
9d5d(3): test %rbx,%rbx
9d60(2): jz 0x60(%rip)
9d62(3): cmp %rsi,(%rbx)
9d65(2): jz 0x2b(%rip)
9d67(4): mov 0x0(%rbp),%rdi
9d6b(3): mov %rsi,(%rbx)
9d6e(3): mov %rbx,%rsi
9d71(5): call 0xffffefef(%rip)
9d76(3): test %rax,%rax
9d79(2): jz 0x67(%rip)
9d7b(3): cmp %rax,%rbx
9d7e(2): jz 0x22(%rip)
9d80(4): mov 0x8(%rax),%rax
9d84(4): mov %rax,0x8(%rbx)
9d88(4): add $0x18,%rsp
9d8c(1): pop %rbx
9d8d(1): pop %rbp
9d8e(1): ret near (%rsp)
9d8f(1): nop 
9d90(4): mov 0x8(%rbx),%rax
9d94(4): add $0x18,%rsp
9d98(1): pop %rbx
9d99(1): pop %rbp
9d9a(1): ret near (%rsp)
9d9b(5): nop 0x0(%rax,%rax,1)
9da0(4): mov 0x8(%rbp),%rax
9da4(8): mov $0x0,0x10(%rbp)
9dac(4): lea 0x1(%rax),%rdx
9db0(4): mov %rdx,0x8(%rbp)
9db4(4): mov %rax,0x8(%rbx)
9db8(4): add $0x18,%rsp
9dbc(1): pop %rbx
9dbd(1): pop %rbp
9dbe(1): ret near (%rsp)
9dbf(1): nop 
9dc0(5): mov $0x10,%edi
9dc5(5): mov %rsi,0x8(%rsp)
9dca(5): call 0xffff89b6(%rip)
9dcf(3): test %rax,%rax
9dd2(3): mov %rax,%rbx
9dd5(4): mov %rax,0x10(%rbp)
9dd9(5): mov 0x8(%rsp),%rsi
9dde(2): jnz 0xffffff89(%rip)
9de0(4): add $0x18,%rsp
9de4(7): mov $0xffffffff,%rax
9deb(1): pop %rbx
9dec(1): pop %rbp
9ded(1): ret near (%rsp)

"imaxtostr" :
9df0(3): test %rdi,%rdi
9df3(4): lea 0x14(%rsi),%rcx
9df7(4): mov $0x0,0x14(%rsi)
9dfb(a): mov $0x7378697629483820647,%r9
9e05(a): mov $0x-3689348814741910323,%rsi
9e0f(6): mov $0x30,%r8d
9e15(2): js 0x3e(%rip)
9e17(9): nop 0x0(%rax,%rax,1)
9e20(3): mov %rdi,%rax
9e23(4): sub $0x1,%rcx
9e27(3): mul %rax,%rsi,%rdx
9e2a(4): shr $0x3,%rdx
9e2e(4): lea 0x0(%rdx,%rdx,4),%rax
9e32(3): add %rax,%rax
9e35(3): sub %rax,%rdi
9e38(3): add $0x30,%edi
9e3b(3): test %rdx,%rdx
9e3e(3): mov %dil,(%rcx)
9e41(3): mov %rdx,%rdi
9e44(2): jnz 0xffffffdc(%rip)
9e46(3): mov %rcx,%rax
9e49(1): ret near (%rsp)
9e4a(6): nop 0x0(%rax,%rax,1)
9e50(3): mov %rsi,%rcx
9e53(3): mov %rdi,%rax
9e56(4): lea 0xffffffff(%rcx),%rsi
9e5a(3): imul %rax,%r9,%rdx
9e5d(3): mov %rdi,%rax
9e60(4): sar $0x3f,%rax
9e64(4): sar $0x2,%rdx
9e68(3): sub %rax,%rdx
9e6b(4): lea 0x0(%rdx,%rdx,4),%rax
9e6f(4): lea 0x0(%r8,%rax,2),%eax
9e73(2): sub %edi,%eax
9e75(3): test %rdx,%rdx
9e78(3): mov %rdx,%rdi
9e7b(3): mov %al,0xffffffff(%rcx)
9e7e(2): jnz 0xffffffd2(%rip)
9e80(4): sub $0x2,%rcx
9e84(4): mov $0x2d,0xffffffff(%rsi)
9e88(3): mov %rcx,%rax
9e8b(1): ret near (%rsp)

"mb_width_aux" :
9e90(1): push %rbx
9e91(2): mov %edi,%ebx
9e93(5): call 0xffff88cd(%rip)
9e98(2): test %eax,%eax
9e9a(2): js 0x6(%rip)
9e9c(1): pop %rbx
9e9d(1): ret near (%rsp)
9e9e(2): nop 
9ea0(2): mov %ebx,%edi
9ea2(5): call 0xffff85de(%rip)
9ea7(2): test %eax,%eax
9ea9(3): setz %al
9eac(3): movzx %al,%eax
9eaf(1): pop %rbx
9eb0(1): ret near (%rsp)

"mb_copy" :
9ec0(1): push %rbp
9ec1(1): push %rbx
9ec2(3): mov %rsi,%rbx
9ec5(4): lea 0x18(%rbx),%rax
9ec9(3): mov %rdi,%rbp
9ecc(4): sub $0x8,%rsp
9ed0(3): mov (%rsi),%rsi
9ed3(4): mov 0x8(%rbx),%rdx
9ed7(3): cmp %rax,%rsi
9eda(2): jz 0x26(%rip)
9edc(3): mov %rsi,(%rdi)
9edf(4): movzx 0x10(%rbx),%eax
9ee3(4): mov %rdx,0x8(%rbp)
9ee7(2): test %al,%al
9ee9(3): mov %al,0x10(%rbp)
9eec(2): jz 0x8(%rip)
9eee(3): mov 0x14(%rbx),%eax
9ef1(3): mov %eax,0x14(%rbp)
9ef4(4): add $0x8,%rsp
9ef8(1): pop %rbx
9ef9(1): pop %rbp
9efa(1): ret near (%rsp)
9efb(5): nop 0x0(%rax,%rax,1)
9f00(4): lea 0x18(%rdi),%rcx
9f04(3): mov %rcx,%rdi
9f07(5): call 0xffff8809(%rip)
9f0c(4): mov 0x8(%rbx),%rdx
9f10(4): mov %rax,0x0(%rbp)
9f14(2): jmp 0xffffffcb(%rip)

"is_basic" :
9f20(2): mov %edi,%eax
9f22(7): lea 0x17b17(%rip),%rdx
9f29(2): mov %edi,%ecx
9f2b(3): shr $0x5,%al
9f2e(3): and $0x1f,%ecx
9f31(3): and $0x7,%eax
9f34(3): mov 0x0(%rdx,%rax,4),%eax
9f37(2): shr %cl,%eax
9f39(3): and $0x1,%eax
9f3c(1): ret near (%rsp)

"mbscasecmp" :
9f40(2): push %r15
9f42(2): push %r14
9f44(2): push %r13
9f46(2): push %r12
9f48(1): push %rbp
9f49(1): push %rbx
9f4a(7): sub $0x98,%rsp
9f51(9): mov $0x28,%rax
9f5a(8): mov %rax,0x88(%rsp)
9f62(2): xor %eax,%eax
9f64(3): cmp %rsi,%rdi
9f67(6): jz 0x389(%rip)
9f6d(3): mov %rdi,%rbp
9f70(3): mov %rsi,%r12
9f73(5): call 0xffff85ad(%rip)
9f78(4): cmp $0x1,%rax
9f7c(6): jnbe 0x9c(%rip)
9f82(5): call 0xffff8a6e(%rip)
9f87(3): mov (%rax),%r14
9f8a(2): jmp 0x16(%rip)
9f8c(4): nop 0x0(%rax)
9f90(4): add $0x1,%rbp
9f94(4): add $0x1,%r12
9f98(2): cmp %dl,%bl
9f9a(6): jnz 0x406(%rip)
9fa0(5): movzx 0x0(%rbp),%r13d
9fa5(6): test $0x1,0x1(%r14,%r13,2)
9fab(3): mov %r13,%rbx
9fae(2): jz 0xf(%rip)
9fb0(5): call 0xffff8a30(%rip)
9fb5(3): mov (%rax),%rax
9fb8(5): movzx 0x0(%rax,%r13,4),%ebx
9fbd(5): movzx (%r12),%r13d
9fc2(6): test $0x1,0x1(%r14,%r13,2)
9fc8(3): mov %r13,%rdx
9fcb(2): jz 0xf(%rip)
9fcd(5): call 0xffff8a13(%rip)
9fd2(3): mov (%rax),%rax
9fd5(5): movzx 0x0(%rax,%r13,4),%edx
9fda(2): test %bl,%bl
9fdc(2): jnz 0xffffffb4(%rip)
9fde(2): xor %eax,%eax
9fe0(2): sub %edx,%eax
9fe2(6): nop 0x0(%rax,%rax,1)
9fe8(8): mov 0x88(%rsp),%rsi
9ff0(9): xor $0x28,%rsi
9ff9(6): jnz 0x626(%rip)
9fff(7): add $0x98,%rsp
a006(1): pop %rbx
a007(1): pop %rbp
a008(2): pop %r12
a00a(2): pop %r13
a00c(2): pop %r14
a00e(2): pop %r15
a010(1): ret near (%rsp)
a011(7): nop 0x0(%rax)
a018(5): mov %r12,0x50(%rsp)
a01d(3): mov %rsp,%r12
a020(5): mov %rbp,0x10(%rsp)
a025(4): mov $0x0,(%rsp)
a029(9): mov $0x0,0x4(%rsp)
a032(7): lea 0x17a07(%rip),%r13
a039(5): mov $0x0,0xc(%rsp)
a03e(5): mov $0x0,0x40(%rsp)
a043(5): lea 0x4(%r12),%r14
a048(9): mov $0x0,0x44(%rsp)
a051(5): mov $0x0,0x4c(%rsp)
a056(5): lea 0x40(%rsp),%rbp
a05b(5): jmp 0x9e(%rip)
a060(5): cmp $0x0,0x40(%rsp)
a065(6): jnz 0x1f1(%rip)
a06b(5): mov 0x50(%rsp),%rcx
a070(3): movzx (%rcx),%edx
a073(2): mov %edx,%eax
a075(3): shr $0x5,%al
a078(3): and $0x7,%eax
a07b(5): mov 0x0(%r13,%rax,4),%eax
a080(3): bt %edx,%eax
a083(6): jnb 0x1bd(%rip)
a089(9): mov $0x1,0x58(%rsp)
a092(3): movsx (%rcx),%eax
a095(5): mov $0x1,0x60(%rsp)
a09a(5): mov $0x1,0x4c(%rsp)
a09f(4): mov %eax,0x64(%rsp)
a0a3(5): mov 0x64(%rsp),%r15d
a0a8(3): test %r15d,%r15d
a0ab(6): jz 0x305(%rip)
a0b1(5): cmp $0x0,0x20(%rsp)
a0b6(6): jz 0x30a(%rip)
a0bc(4): mov 0x24(%rsp),%edi
a0c0(5): call 0xffff8820(%rip)
a0c5(3): mov %r15d,%edi
a0c8(2): mov %eax,%ebx
a0ca(5): call 0xffff8816(%rip)
a0cf(2): sub %eax,%ebx
a0d1(2): mov %ebx,%eax
a0d3(2): test %eax,%eax
a0d5(6): jnz 0xffffff13(%rip)
a0db(5): mov 0x18(%rsp),%rax
a0e0(5): add %rax,0x10(%rsp)
a0e5(5): mov 0x58(%rsp),%rax
a0ea(5): add %rax,0x50(%rsp)
a0ef(5): mov $0x0,0xc(%rsp)
a0f4(5): mov $0x0,0x4c(%rsp)
a0f9(4): cmp $0x0,(%rsp)
a0fd(6): jnz 0xa7(%rip)
a103(5): mov 0x10(%rsp),%rcx
a108(3): movzx (%rcx),%edx
a10b(2): mov %edx,%eax
a10d(3): shr $0x5,%al
a110(3): and $0x7,%eax
a113(5): mov 0x0(%r13,%rax,4),%eax
a118(3): bt %edx,%eax
a11b(2): jnb 0x75(%rip)
a11d(9): mov $0x1,0x18(%rsp)
a126(3): movsx (%rcx),%eax
a129(5): mov $0x1,0x20(%rsp)
a12e(5): mov $0x1,0xc(%rsp)
a133(4): mov %eax,0x24(%rsp)
a137(5): mov 0x24(%rsp),%r9d
a13c(3): test %r9d,%r9d
a13f(6): jz 0x2a9(%rip)
a145(5): cmp $0x0,0x4c(%rsp)
a14a(6): jz 0xffffff16(%rip)
a150(5): cmp $0x0,0x60(%rsp)
a155(6): jnz 0xffffff4e(%rip)
a15b(5): cmp $0x0,0x20(%rsp)
a160(6): jnz 0x278(%rip)
a166(5): mov 0x18(%rsp),%rdx
a16b(5): mov 0x58(%rsp),%rax
a170(5): mov 0x10(%rsp),%rdi
a175(5): mov 0x50(%rsp),%rsi
a17a(3): cmp %rax,%rdx
a17d(6): jnz 0x32b(%rip)
a183(5): call 0xffff84fd(%rip)
a188(5): jmp 0xffffff4b(%rip)
a18d(3): nop (%rax)
a190(3): mov %r14,%rdi
a193(5): call 0xffff87fd(%rip)
a198(2): test %eax,%eax
a19a(6): jz 0x466(%rip)
a1a0(4): mov $0x1,(%rsp)
a1a4(5): call 0xffff837c(%rip)
a1a9(5): mov 0x10(%rsp),%rbx
a1ae(3): mov %rax,%rsi
a1b1(3): mov %rbx,%rdi
a1b4(5): call 0x21cc(%rip)
a1b9(5): lea 0x4(%r12),%rcx
a1be(5): lea 0x24(%r12),%rdi
a1c3(3): mov %rax,%rdx
a1c6(3): mov %rbx,%rsi
a1c9(5): call 0x6017(%rip)
a1ce(4): cmp $0xffffffff,%rax
a1d2(5): mov %rax,0x18(%rsp)
a1d7(6): jz 0x129(%rip)
a1dd(4): cmp $0xfffffffe,%rax
a1e1(6): jz 0x15f(%rip)
a1e7(3): test %rax,%rax
a1ea(2): jnz 0x27(%rip)
a1ec(5): mov 0x10(%rsp),%rax
a1f1(9): mov $0x1,0x18(%rsp)
a1fa(3): cmp $0x0,(%rax)
a1fd(6): jnz 0x427(%rip)
a203(5): mov 0x24(%rsp),%r10d
a208(3): test %r10d,%r10d
a20b(6): jnz 0x3f0(%rip)
a211(5): lea 0x4(%r12),%rdi
a216(5): mov $0x1,0x20(%rsp)
a21b(5): call 0xffff8775(%rip)
a220(2): test %eax,%eax
a222(6): jz 0x15e(%rip)
a228(4): mov $0x0,(%rsp)
a22c(5): mov $0x1,0xc(%rsp)
a231(5): jmp 0xffffff06(%rip)
a236(a): nop 0x0(%rax,%rax,1)
a240(4): lea 0x4(%rbp),%rdi
a244(5): call 0xffff874c(%rip)
a249(2): test %eax,%eax
a24b(6): jz 0x3b5(%rip)
a251(5): mov $0x1,0x40(%rsp)
a256(5): call 0xffff82ca(%rip)
a25b(5): mov 0x50(%rsp),%rbx
a260(3): mov %rax,%rsi
a263(3): mov %rbx,%rdi
a266(5): call 0x211a(%rip)
a26b(4): lea 0x4(%rbp),%rcx
a26f(4): lea 0x24(%rbp),%rdi
a273(3): mov %rax,%rdx
a276(3): mov %rbx,%rsi
a279(5): call 0x5f67(%rip)
a27e(4): cmp $0xffffffff,%rax
a282(5): mov %rax,0x58(%rsp)
a287(6): jz 0x99(%rip)
a28d(4): cmp $0xfffffffe,%rax
a291(6): jz 0xcf(%rip)
a297(3): test %rax,%rax
a29a(2): jnz 0x27(%rip)
a29c(5): mov 0x50(%rsp),%rax
a2a1(9): mov $0x1,0x58(%rsp)
a2aa(3): cmp $0x0,(%rax)
a2ad(6): jnz 0x377(%rip)
a2b3(5): mov 0x64(%rsp),%r8d
a2b8(3): test %r8d,%r8d
a2bb(6): jnz 0x340(%rip)
a2c1(4): lea 0x4(%rbp),%rdi
a2c5(5): mov $0x1,0x60(%rsp)
a2ca(5): call 0xffff86c6(%rip)
a2cf(2): test %eax,%eax
a2d1(6): jz 0xbf(%rip)
a2d7(5): mov $0x0,0x40(%rsp)
a2dc(5): mov $0x1,0x4c(%rsp)
a2e1(5): jmp 0xfffffdc2(%rip)
a2e6(a): nop 0x0(%rax,%rax,1)
a2f0(2): xor %eax,%eax
a2f2(5): jmp 0xfffffcf6(%rip)
a2f7(9): nop 0x0(%rax,%rax,1)
a300(9): mov $0x1,0x18(%rsp)
a309(5): mov $0x0,0x20(%rsp)
a30e(5): mov $0x1,0xc(%rsp)
a313(5): jmp 0xfffffe32(%rip)
a318(8): nop 0x0(%rax,%rax,1)
a320(9): mov $0x1,0x58(%rsp)
a329(5): mov $0x0,0x60(%rsp)
a32e(5): mov $0x1,0x4c(%rsp)
a333(5): jmp 0xfffffe28(%rip)
a338(8): nop 0x0(%rax,%rax,1)
a340(5): mov 0x10(%rsp),%rdi
a345(5): call 0xffff81eb(%rip)
a34a(5): mov $0x0,0x20(%rsp)
a34f(5): mov %rax,0x18(%rsp)
a354(5): mov $0x1,0xc(%rsp)
a359(5): jmp 0xfffffdec(%rip)
a35e(2): nop 
a360(5): mov 0x50(%rsp),%rdi
a365(5): call 0xffff81cb(%rip)
a36a(5): mov $0x0,0x60(%rsp)
a36f(5): mov %rax,0x58(%rsp)
a374(5): mov $0x1,0x4c(%rsp)
a379(5): jmp 0xfffffde2(%rip)
a37e(2): nop 
a380(5): mov $0x1,0xc(%rsp)
a385(5): jmp 0xfffffdb2(%rip)
a38a(6): nop 0x0(%rax,%rax,1)
a390(5): mov $0x1,0x4c(%rsp)
a395(5): jmp 0xfffffd0e(%rip)
a39a(6): nop 0x0(%rax,%rax,1)
a3a0(3): movzx %bl,%eax
a3a3(2): sub %edx,%eax
a3a5(5): jmp 0xfffffc43(%rip)
a3aa(6): nop 0x0(%rax,%rax,1)
a3b0(5): cmp $0x0,0xc(%rsp)
a3b5(2): jz 0x3a(%rip)
a3b7(5): cmp $0x0,0x20(%rsp)
a3bc(2): jnz 0x7d(%rip)
a3be(2): nop 
a3c0(5): mov $0x1,%eax
a3c5(5): jmp 0xfffffc23(%rip)
a3ca(5): cmp $0x0,0x60(%rsp)
a3cf(6): jnz 0xc4(%rip)
a3d5(3): nop (%rax)
a3d8(5): mov $0xffffffff,%eax
a3dd(5): jmp 0xfffffc0b(%rip)
a3e2(6): nop 0x0(%rax,%rax,1)
a3e8(5): cmp $0x0,0xc(%rsp)
a3ed(2): jnz 0x58(%rip)
a3ef(4): cmp $0x0,(%rsp)
a3f3(3): mov %rsp,%rbx
a3f6(6): jnz 0xe2(%rip)
a3fc(5): mov 0x10(%rsp),%rcx
a401(7): lea 0x17638(%rip),%rsi
a408(3): movzx (%rcx),%edx
a40b(2): mov %edx,%eax
a40d(3): shr $0x5,%al
a410(3): and $0x7,%eax
a413(3): mov 0x0(%rsi,%rax,4),%eax
a416(3): bt %edx,%eax
a419(6): jnb 0xa7(%rip)
a41f(9): mov $0x1,0x18(%rsp)
a428(3): movsx (%rcx),%eax
a42b(5): mov $0x1,0x20(%rsp)
a430(5): mov $0x1,0xc(%rsp)
a435(4): mov %eax,0x24(%rsp)
a439(4): mov 0x24(%rsp),%esi
a43d(2): test %esi,%esi
a43f(6): jnz 0xffffff81(%rip)
a445(5): cmp $0x0,0x4c(%rsp)
a44a(6): jnz 0xffffff80(%rip)
a450(5): cmp $0x0,0x40(%rsp)
a455(5): lea 0x40(%rsp),%rbx
a45a(6): jnz 0x13e(%rip)
a460(5): mov 0x50(%rsp),%rcx
a465(7): lea 0x175d4(%rip),%rsi
a46c(3): movzx (%rcx),%edx
a46f(2): mov %edx,%eax
a471(3): shr $0x5,%al
a474(3): and $0x7,%eax
a477(3): mov 0x0(%rsi,%rax,4),%eax
a47a(3): bt %edx,%eax
a47d(6): jnb 0x103(%rip)
a483(9): mov $0x1,0x58(%rsp)
a48c(3): movsx (%rcx),%eax
a48f(4): mov %eax,0x64(%rsp)
a493(4): mov 0x64(%rsp),%edx
a497(2): xor %eax,%eax
a499(2): test %edx,%edx
a49b(3): setnz %al
a49e(2): neg %eax
a4a0(5): jmp 0xfffffb48(%rip)
a4a5(3): nop (%rax)
a4a8(6): jnb 0xb9(%rip)
a4ae(5): call 0xffff81d2(%rip)
a4b3(2): test %eax,%eax
a4b5(6): jnle 0xffffff0b(%rip)
a4bb(5): jmp 0xffffff1d(%rip)
a4c0(3): mov %rsp,%rbx
a4c3(4): lea 0x4(%rbx),%rdi
a4c7(5): call 0xffff84c9(%rip)
a4cc(2): test %eax,%eax
a4ce(6): jz 0x132(%rip)
a4d4(4): mov $0x1,(%rsp)
a4d8(5): call 0xffff8048(%rip)
a4dd(5): mov 0x10(%rsp),%rbp
a4e2(3): mov %rax,%rsi
a4e5(3): mov %rbp,%rdi
a4e8(5): call 0x1e98(%rip)
a4ed(4): lea 0x4(%rbx),%rcx
a4f1(4): lea 0x24(%rbx),%rdi
a4f5(3): mov %rax,%rdx
a4f8(3): mov %rbp,%rsi
a4fb(5): call 0x5ce5(%rip)
a500(4): cmp $0xffffffff,%rax
a504(5): mov %rax,0x18(%rsp)
a509(6): jz 0xfffffeb7(%rip)
a50f(4): cmp $0xfffffffe,%rax
a513(6): jz 0xfffffead(%rip)
a519(3): test %rax,%rax
a51c(2): jnz 0x25(%rip)
a51e(5): mov 0x10(%rsp),%rax
a523(9): mov $0x1,0x18(%rsp)
a52c(3): cmp $0x0,(%rax)
a52f(6): jnz 0xf5(%rip)
a535(4): mov 0x24(%rsp),%edi
a539(2): test %edi,%edi
a53b(6): jnz 0xc0(%rip)
a541(4): lea 0x4(%rbx),%rdi
a545(5): mov $0x1,0x20(%rsp)
a54a(5): call 0xffff8446(%rip)
a54f(2): test %eax,%eax
a551(2): jz 0x25(%rip)
a553(4): mov $0x0,(%rsp)
a557(5): mov $0x1,0xc(%rsp)
a55c(5): jmp 0xfffffedd(%rip)
a561(3): mov %rax,%rdx
a564(5): call 0xffff811c(%rip)
a569(2): test %eax,%eax
a56b(6): jns 0xfffffe55(%rip)
a571(5): jmp 0xfffffe67(%rip)
a576(5): mov $0x1,0xc(%rsp)
a57b(5): jmp 0xfffffebe(%rip)
a580(5): lea 0x44(%rsp),%rdi
a585(5): lea 0x40(%rsp),%rbx
a58a(5): call 0xffff8406(%rip)
a58f(2): test %eax,%eax
a591(2): jz 0x6f(%rip)
a593(5): mov $0x1,0x40(%rsp)
a598(5): call 0xffff7f88(%rip)
a59d(5): mov 0x50(%rsp),%rbp
a5a2(3): mov %rax,%rsi
a5a5(3): mov %rbp,%rdi
a5a8(5): call 0x1dd8(%rip)
a5ad(4): lea 0x4(%rbx),%rcx
a5b1(4): lea 0x24(%rbx),%rdi
a5b5(3): mov %rax,%rdx
a5b8(3): mov %rbp,%rsi
a5bb(5): call 0x5c25(%rip)
a5c0(4): lea 0x2(%rax),%rdx
a5c4(5): mov %rax,0x58(%rsp)
a5c9(4): cmp $0x1,%rdx
a5cd(6): jbe 0xfffffe0b(%rip)
a5d3(3): test %rax,%rax
a5d6(6): jnz 0xfffffebd(%rip)
a5dc(5): mov 0x50(%rsp),%rax
a5e1(9): mov $0x1,0x58(%rsp)
a5ea(3): cmp $0x0,(%rax)
a5ed(2): jnz 0x37(%rip)
a5ef(4): mov 0x64(%rsp),%ecx
a5f3(2): test %ecx,%ecx
a5f5(6): jz 0xfffffe9e(%rip)
a5fb(5): call 0xffff8425(%rip)
a600(7): lea 0x17459(%rip),%rcx
a607(7): lea 0x16e9a(%rip),%rsi
a60e(7): lea 0x16eb3(%rip),%rdi
a615(5): mov $0x96,%edx
a61a(5): call 0xffff7fe6(%rip)
a61f(5): call 0xffff7f41(%rip)
a624(7): lea 0x17435(%rip),%rcx
a62b(7): lea 0x16e76(%rip),%rsi
a632(7): lea 0x16ea6(%rip),%rdi
a639(5): mov $0xb2,%edx
a63e(5): call 0xffff7fc2(%rip)

"set_program_name" :
a650(3): test %rdi,%rdi
a653(1): push %rbx
a654(2): jz 0x79(%rip)
a656(5): mov $0x2f,%esi
a65b(3): mov %rdi,%rbx
a65e(5): call 0xffff7f72(%rip)
a663(3): test %rax,%rax
a666(2): jz 0x57(%rip)
a668(4): lea 0x1(%rax),%r8
a66c(3): mov %r8,%rdx
a66f(3): sub %rbx,%rdx
a672(4): cmp $0x6,%rdx
a676(2): jle 0x47(%rip)
a678(4): lea 0xfffffffa(%rax),%rsi
a67c(7): lea 0x1742d(%rip),%rdi
a683(5): mov $0x7,%ecx
a688(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a68a(3): setnbe %dl
a68d(3): sbb $0x0,%dl
a690(2): test %dl,%dl
a692(2): jnz 0x2b(%rip)
a694(7): lea 0x1741d(%rip),%rdi
a69b(5): mov $0x3,%ecx
a6a0(3): mov %r8,%rsi
a6a3(3): mov %r8,%rbx
a6a6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
a6a8(3): setnbe %dl
a6ab(3): sbb $0x0,%dl
a6ae(2): test %dl,%dl
a6b0(2): jnz 0xd(%rip)
a6b2(4): lea 0x4(%rax),%rbx
a6b6(7): mov %rbx,0x21d9e3(%rip)
a6bd(7): mov %rbx,0x21daec(%rip)
a6c4(7): mov %rbx,0x21d9fd(%rip)
a6cb(1): pop %rbx
a6cc(1): ret near (%rsp)
a6cd(7): mov 0x21da0c(%rip),%rcx
a6d4(7): lea 0x1739d(%rip),%rdi
a6db(5): mov $0x37,%edx
a6e0(5): mov $0x1,%esi
a6e5(5): call 0xffff827b(%rip)
a6ea(5): call 0xffff7d16(%rip)

"gettext_quote.part.1" :
a6f0(1): push %rbp
a6f1(1): push %rbx
a6f2(3): mov %rdi,%rbp
a6f5(2): mov %esi,%ebx
a6f7(4): sub $0x8,%rsp
a6fb(5): call 0x14ec5(%rip)
a700(3): movzx (%rax),%edx
a703(3): and $0xdf,%edx
a706(3): cmp $0x55,%dl
a709(2): jz 0x77(%rip)
a70b(3): cmp $0x47,%dl
a70e(2): jz 0x22(%rip)
a710(7): lea 0x173b4(%rip),%rax
a717(7): lea 0x16dd6(%rip),%rdx
a71e(3): cmp $0x9,%ebx
a721(4): cmovne %rdx,%rax
a725(4): add $0x8,%rsp
a729(1): pop %rbx
a72a(1): pop %rbp
a72b(1): ret near (%rsp)
a72c(4): nop 0x0(%rax)
a730(4): movzx 0x1(%rax),%edx
a734(3): and $0xdf,%edx
a737(3): cmp $0x42,%dl
a73a(2): jnz 0xffffffd6(%rip)
a73c(4): cmp $0x31,0x2(%rax)
a740(2): jnz 0xffffffd0(%rip)
a742(4): cmp $0x38,0x3(%rax)
a746(2): jnz 0xffffffca(%rip)
a748(4): cmp $0x30,0x4(%rax)
a74c(2): jnz 0xffffffc4(%rip)
a74e(4): cmp $0x33,0x5(%rax)
a752(2): jnz 0xffffffbe(%rip)
a754(4): cmp $0x30,0x6(%rax)
a758(2): jnz 0xffffffb8(%rip)
a75a(4): cmp $0x0,0x7(%rax)
a75e(2): jnz 0xffffffb2(%rip)
a760(4): cmp $0x60,0x0(%rbp)
a764(7): lea 0x17359(%rip),%rax
a76b(7): lea 0x17356(%rip),%rdx
a772(4): cmovne %rdx,%rax
a776(4): add $0x8,%rsp
a77a(1): pop %rbx
a77b(1): pop %rbp
a77c(1): ret near (%rsp)
a77d(3): nop (%rax)
a780(4): movzx 0x1(%rax),%edx
a784(3): and $0xdf,%edx
a787(3): cmp $0x54,%dl
a78a(2): jnz 0xffffff86(%rip)
a78c(4): movzx 0x2(%rax),%edx
a790(3): and $0xdf,%edx
a793(3): cmp $0x46,%dl
a796(6): jnz 0xffffff7a(%rip)
a79c(4): cmp $0x2d,0x3(%rax)
a7a0(6): jnz 0xffffff70(%rip)
a7a6(4): cmp $0x38,0x4(%rax)
a7aa(6): jnz 0xffffff66(%rip)
a7b0(4): cmp $0x0,0x5(%rax)
a7b4(6): jnz 0xffffff5c(%rip)
a7ba(4): cmp $0x60,0x0(%rbp)
a7be(7): lea 0x172f7(%rip),%rax
a7c5(7): lea 0x172f4(%rip),%rdx
a7cc(4): cmovne %rdx,%rax
a7d0(4): add $0x8,%rsp
a7d4(1): pop %rbx
a7d5(1): pop %rbp
a7d6(1): ret near (%rsp)

"quotearg_buffer_restyled" :
a7e0(2): push %r15
a7e2(2): push %r14
a7e4(3): mov %r8d,%r15d
a7e7(2): push %r13
a7e9(2): push %r12
a7eb(3): mov %rdi,%r14
a7ee(1): push %rbp
a7ef(1): push %rbx
a7f0(3): mov %r9d,%ebx
a7f3(3): mov %rsi,%r13
a7f6(3): mov %rcx,%rbp
a7f9(3): and $0x2,%ebx
a7fc(7): sub $0xb8,%rsp
a803(8): mov 0xf0(%rsp),%rax
a80b(5): mov %rdx,0x10(%rsp)
a810(5): mov %r8d,0x8(%rsp)
a815(5): mov %r9d,0x78(%rsp)
a81a(5): mov %rax,0x20(%rsp)
a81f(8): mov 0xf8(%rsp),%rax
a827(5): mov %rax,0x68(%rsp)
a82c(8): mov 0x100(%rsp),%rax
a834(5): mov %rax,0x60(%rsp)
a839(9): mov $0x28,%rax
a842(8): mov %rax,0xa8(%rsp)
a84a(2): xor %eax,%eax
a84c(5): call 0xffff7cd4(%rip)
a851(4): cmp $0xa,%r15d
a855(5): mov %rax,0x58(%rsp)
a85a(6): jnbe 0x11b5(%rip)
a860(7): lea 0x172b9(%rip),%rcx
a867(3): mov %r15d,%edx
a86a(4): movsxd 0x0(%rcx,%rdx,4),%rax
a86e(3): add %rcx,%rax
a871(2): jmp %rax
a873(5): mov $0x1,0xe(%rsp)
a878(5): mov $0x0,0x7c(%rsp)
a87d(3): xor %r12d,%r12d
a880(9): mov $0x0,0x50(%rsp)
a889(5): mov $0x1,0xf(%rsp)
a88e(5): mov $0x0,0xd(%rsp)
a893(7): lea 0x16c5a(%rip),%rax
a89a(9): mov $0x1,0x18(%rsp)
a8a3(3): xor %r15d,%r15d
a8a6(8): mov $0x2,0x8(%rsp)
a8ae(5): mov %rax,0x48(%rsp)
a8b3(3): xor %r11d,%r11d
a8b6(3): mov %rbp,%rax
a8b9(3): mov %r12d,%r8d
a8bc(3): mov %r11,%rbp
a8bf(3): mov %rax,%r11
a8c2(6): nop 0x0(%rax,%rax,1)
a8c8(3): cmp %rbp,%r11
a8cb(4): setnz %r12b
a8cf(4): cmp $0xffffffff,%r11
a8d3(2): jnz 0xf(%rip)
a8d5(5): mov 0x10(%rsp),%rax
a8da(4): cmp $0x0,0x0(%rax,%rbp,1)
a8de(4): setnz %r12b
a8e2(3): test %r12b,%r12b
a8e5(6): jz 0x65b(%rip)
a8eb(5): cmp $0x2,0x8(%rsp)
a8f0(5): mov 0x10(%rsp),%rdi
a8f5(4): lea 0x0(%rdi,%rbp,1),%r9
a8f9(3): setnz %al
a8fc(4): and 0xd(%rsp),%al
a900(3): mov %eax,%r10d
a903(6): jz 0xad(%rip)
a909(5): mov 0x18(%rsp),%rax
a90e(3): test %rax,%rax
a911(6): jz 0x42f(%rip)
a917(4): cmp $0xffffffff,%r11
a91b(5): lea 0x0(%rbp,%rax,1),%rbx
a920(2): jnz 0x30(%rip)
a922(4): cmp $0x1,%rax
a926(2): jbe 0x2a(%rip)
a928(5): mov %r8b,0x38(%rsp)
a92d(5): mov %r10b,0x30(%rsp)
a932(5): mov %r9,0x28(%rsp)
a937(5): call 0xffff7bf9(%rip)
a93c(6): movzx 0x38(%rsp),%r8d
a942(6): movzx 0x30(%rsp),%r10d
a948(3): mov %rax,%r11
a94b(5): mov 0x28(%rsp),%r9
a950(3): cmp %r11,%rbx
a953(5): mov %r10b,0x28(%rsp)
a958(6): jnbe 0x5b8(%rip)
a95e(5): mov 0x18(%rsp),%rdx
a963(5): mov 0x48(%rsp),%rsi
a968(3): mov %r9,%rdi
a96b(5): mov %r11,0x40(%rsp)
a970(5): mov %r8b,0x38(%rsp)
a975(5): mov %r9,0x30(%rsp)
a97a(5): call 0xffff7d06(%rip)
a97f(2): test %eax,%eax
a981(5): mov 0x30(%rsp),%r9
a986(6): movzx 0x38(%rsp),%r8d
a98c(5): mov 0x40(%rsp),%r11
a991(6): jnz 0x57f(%rip)
a997(5): cmp $0x0,0xf(%rsp)
a99c(6): movzx 0x28(%rsp),%r10d
a9a2(6): jnz 0xf83(%rip)
a9a8(8): nop 0x0(%rax,%rax,1)
a9b0(4): movzx (%r9),%ebx
a9b4(3): cmp $0x7e,%bl
a9b7(6): jnbe 0x321(%rip)
a9bd(7): lea 0x17188(%rip),%rcx
a9c4(3): movzx %bl,%edx
a9c7(4): movsxd 0x0(%rcx,%rdx,4),%rax
a9cb(3): add %rcx,%rax
a9ce(2): jmp %rax
a9d0(3): xor %r10d,%r10d
a9d3(4): cmp $0x1,%r11
a9d7(3): setnz %al
a9da(4): cmp $0xffffffff,%r11
a9de(2): jnz 0xe(%rip)
a9e0(5): mov 0x10(%rsp),%rax
a9e5(4): cmp $0x0,0x1(%rax)
a9e9(3): setnz %al
a9ec(5): cmp $0x2,0x8(%rsp)
a9f1(3): setz %dl
a9f4(2): test %al,%al
a9f6(6): jz 0x252(%rip)
a9fc(3): xor %r12d,%r12d
a9ff(2): xor %eax,%eax
aa01(7): nop 0x0(%rax)
aa08(5): cmp $0x1,0xd(%rsp)
aa0d(6): jnz 0x115(%rip)
aa13(2): test %dl,%dl
aa15(6): jnz 0x10d(%rip)
aa1b(5): mov 0x20(%rsp),%rsi
aa20(3): test %rsi,%rsi
aa23(2): jz 0x16(%rip)
aa25(2): mov %ebx,%edx
aa27(3): shr $0x5,%dl
aa2a(3): movzx %dl,%edx
aa2d(3): mov 0x0(%rsi,%rdx,4),%edx
aa30(3): bt %ebx,%edx
aa33(6): jb 0x150(%rip)
aa39(3): test %r10b,%r10b
aa3c(6): jnz 0x147(%rip)
aa42(3): xor $0x1,%eax
aa45(4): add $0x1,%rbp
aa49(3): and %r8d,%eax
aa4c(2): test %al,%al
aa4e(2): jz 0x22(%rip)
aa50(3): cmp %r15,%r13
aa53(2): jbe 0x7(%rip)
aa55(5): mov $0x27,0x0(%r14,%r15,1)
aa5a(4): lea 0x1(%r15),%rax
aa5e(3): cmp %rax,%r13
aa61(2): jbe 0x8(%rip)
aa63(6): mov $0x27,0x1(%r14,%r15,1)
aa69(4): add $0x2,%r15
aa6d(3): xor %r8d,%r8d
aa70(3): cmp %r13,%r15
aa73(2): jnb 0x6(%rip)
aa75(4): mov %bl,0x0(%r14,%r15,1)
aa79(5): movzx 0xe(%rsp),%edi
aa7e(4): add $0x1,%r15
aa82(5): mov $0x0,%eax
aa87(3): test %r12b,%r12b
aa8a(3): cmove %eax,%edi
aa8d(5): mov %dil,0xe(%rsp)
aa92(5): jmp 0xfffffe36(%rip)
aa97(9): nop 0x0(%rax,%rax,1)
aaa0(3): xor %r10d,%r10d
aaa3(4): mov 0x8(%rsp),%eax
aaa7(3): cmp $0x2,%eax
aaaa(6): jz 0x5be(%rip)
aab0(3): cmp $0x5,%eax
aab3(6): jz 0x575(%rip)
aab9(3): cmp $0x2,%eax
aabc(5): mov $0x3f,%ebx
aac1(3): setz %dl
aac4(3): xor %r12d,%r12d
aac7(2): xor %eax,%eax
aac9(5): jmp 0xffffff3f(%rip)
aace(2): nop 
aad0(3): xor %r10d,%r10d
aad3(5): cmp $0x2,0x8(%rsp)
aad8(6): jz 0x508(%rip)
aade(5): mov %r12b,0x7c(%rsp)
aae3(2): xor %edx,%edx
aae5(2): xor %eax,%eax
aae7(5): mov $0x27,%ebx
aaec(5): jmp 0xffffff1c(%rip)
aaf1(7): nop 0x0(%rax)
aaf8(5): mov $0x9,%edx
aafd(5): mov $0x74,%ebx
ab02(5): cmp $0x2,0x8(%rsp)
ab07(3): setz %al
ab0a(4): and 0xf(%rsp),%al
ab0e(6): jnz 0x150(%rip)
ab14(5): cmp $0x0,0xd(%rsp)
ab19(2): jnz 0x67(%rip)
ab1b(2): mov %edx,%ebx
ab1d(3): xor %r12d,%r12d
ab20(2): xor %eax,%eax
ab22(5): cmp $0x0,0xf(%rsp)
ab27(6): jnz 0xfffffef4(%rip)
ab2d(5): jmp 0xffffff0c(%rip)
ab32(6): nop 0x0(%rax,%rax,1)
ab38(5): mov $0x8,%edx
ab3d(5): mov $0x62,%ebx
ab42(2): jmp 0xffffffd2(%rip)
ab44(4): nop 0x0(%rax)
ab48(5): cmp $0x2,0x8(%rsp)
ab4d(6): jz 0x3d3(%rip)
ab53(5): cmp $0x0,0xd(%rsp)
ab58(6): jz 0x218(%rip)
ab5e(5): cmp $0x0,0xf(%rsp)
ab63(6): jz 0x20d(%rip)
ab69(6): cmp $0x0,0x18(%rsp)
ab6f(6): jnz 0x3bc(%rip)
ab75(5): mov $0x5c,%ebx
ab7a(6): nop 0x0(%rax,%rax,1)
ab80(3): xor %r12d,%r12d
ab83(5): cmp $0x2,0x8(%rsp)
ab88(3): setz %dl
ab8b(5): cmp $0x0,0xf(%rsp)
ab90(2): mov %edx,%eax
ab92(6): jnz 0x856(%rip)
ab98(3): mov %r8d,%eax
ab9b(3): xor $0x1,%eax
ab9e(2): and %dl,%al
aba0(2): jz 0x31(%rip)
aba2(3): cmp %r15,%r13
aba5(2): jbe 0x7(%rip)
aba7(5): mov $0x27,0x0(%r14,%r15,1)
abac(4): lea 0x1(%r15),%rdx
abb0(3): cmp %rdx,%r13
abb3(2): jbe 0x8(%rip)
abb5(6): mov $0x24,0x1(%r14,%r15,1)
abbb(4): lea 0x2(%r15),%rdx
abbf(3): cmp %rdx,%r13
abc2(2): jbe 0x8(%rip)
abc4(6): mov $0x27,0x2(%r14,%r15,1)
abca(4): add $0x3,%r15
abce(3): mov %eax,%r8d
abd1(3): cmp %r15,%r13
abd4(2): jbe 0x7(%rip)
abd6(5): mov $0x5c,0x0(%r14,%r15,1)
abdb(4): add $0x1,%r15
abdf(4): add $0x1,%rbp
abe3(5): jmp 0xfffffe8d(%rip)
abe8(8): nop 0x0(%rax,%rax,1)
abf0(5): cmp $0x0,0xd(%rsp)
abf5(6): jnz 0x1ce(%rip)
abfb(2): xor %edx,%edx
abfd(5): test $0x1,0x78(%rsp)
ac02(6): jz 0xffffff19(%rip)
ac08(4): add $0x1,%rbp
ac0c(5): jmp 0xfffffcbc(%rip)
ac11(7): nop 0x0(%rax)
ac18(5): cmp $0x2,0x8(%rsp)
ac1d(3): setz %dl
ac20(2): xor %eax,%eax
ac22(5): jmp 0xfffffde6(%rip)
ac27(9): nop 0x0(%rax,%rax,1)
ac30(5): mov $0x7,%edx
ac35(5): mov $0x61,%ebx
ac3a(5): jmp 0xfffffeda(%rip)
ac3f(1): nop 
ac40(5): cmp $0x2,0x8(%rsp)
ac45(3): setz %dl
ac48(3): test %rbp,%rbp
ac4b(6): jnz 0xfffffdb1(%rip)
ac51(5): movzx 0xf(%rsp),%eax
ac56(2): and %dl,%al
ac58(6): jz 0xfffffdb0(%rip)
ac5e(3): mov %r11,%rbp
ac61(8): mov $0x2,0x8(%rsp)
ac69(5): jmp 0x700(%rip)
ac6e(2): nop 
ac70(5): cmp $0x2,0x8(%rsp)
ac75(3): setz %dl
ac78(3): xor %r12d,%r12d
ac7b(2): jmp 0xffffffd6(%rip)
ac7d(3): nop (%rax)
ac80(5): cmp $0x2,0x8(%rsp)
ac85(5): mov $0x20,%ebx
ac8a(3): setz %dl
ac8d(2): jmp 0xffffffc4(%rip)
ac8f(1): nop 
ac90(5): mov $0xd,%edx
ac95(5): mov $0x72,%ebx
ac9a(5): jmp 0xfffffe68(%rip)
ac9f(1): nop 
aca0(5): mov $0xc,%edx
aca5(5): mov $0x66,%ebx
acaa(5): jmp 0xfffffe6a(%rip)
acaf(1): nop 
acb0(5): mov $0xb,%edx
acb5(5): mov $0x76,%ebx
acba(5): jmp 0xfffffe5a(%rip)
acbf(1): nop 
acc0(5): mov $0xa,%edx
acc5(5): mov $0x6e,%ebx
acca(5): jmp 0xfffffe38(%rip)
accf(1): nop 
acd0(3): xor %r10d,%r10d
acd3(5): nop 0x0(%rax,%rax,1)
acd8(6): cmp $0x1,0x58(%rsp)
acde(6): jnz 0x3aa(%rip)
ace4(5): mov %r11,0x38(%rsp)
ace9(5): mov %r8b,0x30(%rsp)
acee(5): mov %r10b,0x28(%rsp)
acf3(5): call 0xffff7cfd(%rip)
acf8(3): mov (%rax),%rcx
acfb(3): movzx %bl,%edx
acfe(6): movzx 0x28(%rsp),%r10d
ad04(6): movzx 0x30(%rsp),%r8d
ad0a(5): mov 0x38(%rsp),%r11
ad0f(5): mov $0x1,%edi
ad14(4): movzx 0x0(%rcx,%rdx,2),%eax
ad18(4): and $0x4000,%ax
ad1c(4): setnz %r12b
ad20(3): setz %al
ad23(4): and 0xd(%rsp),%al
ad27(2): test %al,%al
ad29(6): jnz 0x998(%rip)
ad2f(5): cmp $0x2,0x8(%rsp)
ad34(3): setz %dl
ad37(5): jmp 0xfffffcd1(%rip)
ad3c(4): nop 0x0(%rax)
ad40(4): movzx (%r9),%ebx
ad44(3): cmp $0x7e,%bl
ad47(2): jnbe 0xffffff89(%rip)
ad49(7): lea 0x16ff8(%rip),%rcx
ad50(3): movzx %bl,%edx
ad53(4): movsxd 0x0(%rcx,%rdx,4),%rax
ad57(3): add %rcx,%rax
ad5a(2): jmp %rax
ad5c(4): nop 0x0(%rax)
ad60(3): xor %r10d,%r10d
ad63(5): cmp $0x0,0xd(%rsp)
ad68(6): jnz 0xfffffdf6(%rip)
ad6e(2): nop 
ad70(5): mov $0x5c,%edx
ad75(5): mov $0x5c,%ebx
ad7a(5): jmp 0xfffffd9a(%rip)
ad7f(1): nop 
ad80(5): mov $0xc,%edx
ad85(3): xor %r10d,%r10d
ad88(5): mov $0x66,%ebx
ad8d(5): jmp 0xfffffd87(%rip)
ad92(6): nop 0x0(%rax,%rax,1)
ad98(5): mov $0xa,%edx
ad9d(3): xor %r10d,%r10d
ada0(5): mov $0x6e,%ebx
ada5(5): jmp 0xfffffd5d(%rip)
adaa(6): nop 0x0(%rax,%rax,1)
adb0(5): mov $0x61,%ebx
adb5(5): jmp 0xfffffdcb(%rip)
adba(6): nop 0x0(%rax,%rax,1)
adc0(3): xor %r10d,%r10d
adc3(5): cmp $0x2,0x8(%rsp)
adc8(3): setz %dl
adcb(5): cmp $0x0,0xf(%rsp)
add0(6): jnz 0xb9a(%rip)
add6(3): mov %r8d,%eax
add9(3): mov %r15,%rcx
addc(3): xor $0x1,%eax
addf(2): and %dl,%al
ade1(2): jz 0x2f(%rip)
ade3(3): cmp %r15,%r13
ade6(2): jbe 0x7(%rip)
ade8(5): mov $0x27,0x0(%r14,%r15,1)
aded(4): lea 0x1(%r15),%rcx
adf1(3): cmp %rcx,%r13
adf4(2): jbe 0x8(%rip)
adf6(6): mov $0x24,0x1(%r14,%r15,1)
adfc(4): lea 0x2(%r15),%rcx
ae00(3): cmp %rcx,%r13
ae03(6): jnbe 0x636(%rip)
ae09(4): lea 0x3(%r15),%rcx
ae0d(3): mov %eax,%r8d
ae10(3): cmp %rcx,%r13
ae13(2): jbe 0x7(%rip)
ae15(5): mov $0x5c,0x0(%r14,%rcx,1)
ae1a(5): cmp $0x2,0x8(%rsp)
ae1f(4): lea 0x1(%rcx),%r15
ae23(6): jz 0x606(%rip)
ae29(4): lea 0x1(%rbp),%rax
ae2d(3): cmp %r11,%rax
ae30(2): jnb 0x1b(%rip)
ae32(5): mov 0x10(%rsp),%rax
ae37(5): movzx 0x1(%rax,%rbp,1),%eax
ae3c(4): mov %al,0x28(%rsp)
ae40(3): sub $0x30,%eax
ae43(2): cmp $0x9,%al
ae45(6): jbe 0x834(%rip)
ae4b(3): mov %r12d,%eax
ae4e(5): mov $0x30,%ebx
ae53(3): xor %r12d,%r12d
ae56(5): jmp 0xfffffbb2(%rip)
ae5b(5): nop 0x0(%rax,%rax,1)
ae60(5): cmp $0x2,0x8(%rsp)
ae65(3): mov %r10d,%r12d
ae68(3): setz %dl
ae6b(3): xor %r10d,%r10d
ae6e(2): xor %eax,%eax
ae70(5): jmp 0xfffffb98(%rip)
ae75(3): nop (%rax)
ae78(5): cmp $0x2,0x8(%rsp)
ae7d(3): setz %dl
ae80(3): xor %r10d,%r10d
ae83(5): jmp 0xfffffdc5(%rip)
ae88(8): nop 0x0(%rax,%rax,1)
ae90(5): cmp $0x2,0x8(%rsp)
ae95(3): setz %dl
ae98(3): xor %r10d,%r10d
ae9b(3): xor %r12d,%r12d
ae9e(5): jmp 0xfffffdb3(%rip)
aea3(5): nop 0x0(%rax,%rax,1)
aea8(5): cmp $0x2,0x8(%rsp)
aead(3): mov %r10d,%r12d
aeb0(5): mov $0x20,%ebx
aeb5(3): setz %dl
aeb8(3): xor %r10d,%r10d
aebb(5): jmp 0xfffffd96(%rip)
aec0(5): mov $0xd,%edx
aec5(3): xor %r10d,%r10d
aec8(5): mov $0x72,%ebx
aecd(5): jmp 0xfffffc35(%rip)
aed2(6): nop 0x0(%rax,%rax,1)
aed8(5): mov $0x76,%ebx
aedd(5): jmp 0xfffffca3(%rip)
aee2(6): nop 0x0(%rax,%rax,1)
aee8(5): mov $0x9,%edx
aeed(3): xor %r10d,%r10d
aef0(5): mov $0x74,%ebx
aef5(5): jmp 0xfffffc0d(%rip)
aefa(6): nop 0x0(%rax,%rax,1)
af00(5): mov $0x62,%ebx
af05(5): jmp 0xfffffc7b(%rip)
af0a(6): nop 0x0(%rax,%rax,1)
af10(3): xor %r10d,%r10d
af13(5): jmp 0xfffffa9d(%rip)
af18(8): nop 0x0(%rax,%rax,1)
af20(5): cmp $0x0,0xf(%rsp)
af25(6): jnz 0x96b(%rip)
af2b(4): add $0x1,%rbp
af2f(3): mov %r8d,%eax
af32(3): xor %r12d,%r12d
af35(5): mov $0x5c,%ebx
af3a(5): jmp 0xfffffb12(%rip)
af3f(1): nop 
af40(5): cmp $0x2,0x8(%rsp)
af45(5): movzx 0xf(%rsp),%ebx
af4a(3): mov %r8d,%r12d
af4d(3): mov %r11,%rbp
af50(3): setz %dl
af53(2): mov %ebx,%eax
af55(3): test %r15,%r15
af58(3): setz %cl
af5b(2): and %edx,%eax
af5d(2): and %cl,%al
af5f(6): jnz 0xa67(%rip)
af65(2): mov %ebx,%eax
af67(3): xor $0x1,%eax
af6a(2): and %al,%dl
af6c(6): jz 0x970(%rip)
af72(5): cmp $0x0,0x7c(%rsp)
af77(6): jz 0x963(%rip)
af7d(5): cmp $0x0,0xe(%rsp)
af82(6): jnz 0x9fb(%rip)
af88(3): test %r13,%r13
af8b(3): setz %al
af8e(6): cmp $0x0,0x50(%rsp)
af94(3): setnz %dl
af97(2): and %dl,%al
af99(6): jz 0xa23(%rip)
af9f(5): mov 0x50(%rsp),%r13
afa4(7): lea 0x16549(%rip),%rbx
afab(4): mov $0x27,(%r14)
afaf(8): mov $0x2,0x8(%rsp)
afb7(6): mov $0x1,%r15d
afbd(9): mov $0x1,0x18(%rsp)
afc6(5): mov $0x0,0xf(%rsp)
afcb(5): mov %rbx,0x48(%rsp)
afd0(4): mov %al,0x7c(%rsp)
afd4(5): jmp 0xfffff8df(%rip)
afd9(7): nop 0x0(%rax)
afe0(5): cmp $0x0,0xf(%rsp)
afe5(6): jnz 0x8ab(%rip)
afeb(3): test %r13,%r13
afee(6): jz 0x402(%rip)
aff4(2): xor %edx,%edx
aff6(6): cmp $0x0,0x50(%rsp)
affc(6): jnz 0x3f4(%rip)
b002(5): mov %r13,0x50(%rsp)
b007(4): add $0x3,%r15
b00b(2): xor %eax,%eax
b00d(5): mov %r12b,0x7c(%rsp)
b012(3): xor %r8d,%r8d
b015(3): mov %rdx,%r13
b018(5): mov $0x27,%ebx
b01d(5): jmp 0xfffffa1c(%rip)
b022(6): nop 0x0(%rax,%rax,1)
b028(5): test $0x4,0x78(%rsp)
b02d(2): jz 0x23(%rip)
b02f(4): lea 0x2(%rbp),%rcx
b033(3): cmp %r11,%rcx
b036(2): jnb 0x1a(%rip)
b038(5): mov 0x10(%rsp),%rax
b03d(5): cmp $0x3f,0x1(%rax,%rbp,1)
b042(6): jz 0x790(%rip)
b048(8): nop 0x0(%rax,%rax,1)
b050(2): xor %edx,%edx
b052(3): xor %r12d,%r12d
b055(2): xor %eax,%eax
b057(5): mov $0x3f,%ebx
b05c(5): jmp 0xfffff9ac(%rip)
b061(7): nop 0x0(%rax)
b068(5): cmp $0x0,0xf(%rsp)
b06d(6): jnz 0x823(%rip)
b073(3): xor %r12d,%r12d
b076(2): xor %eax,%eax
b078(5): mov $0x3f,%ebx
b07d(5): jmp 0xfffff9bc(%rip)
b082(6): nop 0x0(%rax,%rax,1)
b088(8): lea 0xa0(%rsp),%rax
b090(4): cmp $0xffffffff,%r11
b094(c): mov $0x0,0xa0(%rsp)
b0a0(5): mov %rax,0x28(%rsp)
b0a5(2): jnz 0x2f(%rip)
b0a7(5): mov 0x10(%rsp),%rdi
b0ac(5): mov %r8b,0x40(%rsp)
b0b1(5): mov %r10b,0x38(%rsp)
b0b6(5): mov %r9,0x30(%rsp)
b0bb(5): call 0xffff7475(%rip)
b0c0(6): movzx 0x40(%rsp),%r8d
b0c6(6): movzx 0x38(%rsp),%r10d
b0cc(3): mov %rax,%r11
b0cf(5): mov 0x30(%rsp),%r9
b0d4(8): lea 0x9c(%rsp),%rax
b0dc(2): xor %ecx,%ecx
b0de(4): mov %bl,0x7e(%rsp)
b0e2(5): mov %r8b,0x7d(%rsp)
b0e7(3): mov %rcx,%rbx
b0ea(8): mov %r9,0x88(%rsp)
b0f2(5): mov %rax,0x38(%rsp)
b0f7(5): mov %r10b,0x7f(%rsp)
b0fc(8): mov %r15,0x80(%rsp)
b104(5): mov %r14,0x40(%rsp)
b109(5): mov %r13,0x70(%rsp)
b10e(5): mov %r11,0x30(%rsp)
b113(5): mov 0x10(%rsp),%rax
b118(5): lea 0x0(%rbp,%rbx,1),%r14
b11d(5): mov 0x30(%rsp),%rdx
b122(5): mov 0x28(%rsp),%rcx
b127(5): mov 0x38(%rsp),%rdi
b12c(4): lea 0x0(%rax,%r14,1),%r13
b130(3): sub %r14,%rdx
b133(3): mov %r13,%rsi
b136(5): call 0x50aa(%rip)
b13b(3): test %rax,%rax
b13e(3): mov %rax,%r15
b141(2): jz 0x50(%rip)
b143(4): cmp $0xffffffff,%rax
b147(6): jz 0x61e(%rip)
b14d(4): cmp $0xfffffffe,%rax
b151(6): jz 0x5a0(%rip)
b157(5): cmp $0x2,0x8(%rsp)
b15c(3): setz %al
b15f(4): and 0xf(%rsp),%al
b163(6): jnz 0x19d(%rip)
b169(7): mov 0x9c(%rsp),%edi
b170(5): call 0xffff7830(%rip)
b175(5): mov 0x28(%rsp),%rdi
b17a(2): test %eax,%eax
b17c(5): mov $0x0,%eax
b181(4): cmove %eax,%r12d
b185(3): add %r15,%rbx
b188(5): call 0xffff7808(%rip)
b18d(2): test %eax,%eax
b18f(2): jz 0xffffff84(%rip)
b191(3): mov %r12d,%edx
b194(3): mov %rbx,%rdi
b197(6): movzx 0x7d(%rsp),%r8d
b19d(3): xor $0x1,%edx
b1a0(5): movzx 0x7e(%rsp),%ebx
b1a5(6): movzx 0x7f(%rsp),%r10d
b1ab(4): and 0xd(%rsp),%dl
b1af(8): mov 0x80(%rsp),%r15
b1b7(5): mov 0x40(%rsp),%r14
b1bc(5): mov 0x70(%rsp),%r13
b1c1(5): mov 0x30(%rsp),%r11
b1c6(4): cmp $0x1,%rdi
b1ca(6): jbe 0x601(%rip)
b1d0(3): mov %rdi,%rcx
b1d3(2): xor %esi,%esi
b1d5(6): movzx 0xf(%rsp),%r9d
b1db(3): add %rbp,%rcx
b1de(5): mov 0x10(%rsp),%rdi
b1e3(5): jmp 0xbb(%rip)
b1e8(8): nop 0x0(%rax,%rax,1)
b1f0(5): cmp $0x2,0x8(%rsp)
b1f5(3): setz %al
b1f8(3): test %r9b,%r9b
b1fb(6): jnz 0x4b5(%rip)
b201(3): mov %r8d,%esi
b204(3): xor $0x1,%esi
b207(3): and %sil,%al
b20a(2): jz 0x31(%rip)
b20c(3): cmp %r15,%r13
b20f(2): jbe 0x7(%rip)
b211(5): mov $0x27,0x0(%r14,%r15,1)
b216(4): lea 0x1(%r15),%rsi
b21a(3): cmp %rsi,%r13
b21d(2): jbe 0x8(%rip)
b21f(6): mov $0x24,0x1(%r14,%r15,1)
b225(4): lea 0x2(%r15),%rsi
b229(3): cmp %rsi,%r13
b22c(2): jbe 0x8(%rip)
b22e(6): mov $0x27,0x2(%r14,%r15,1)
b234(4): add $0x3,%r15
b238(3): mov %eax,%r8d
b23b(3): cmp %r15,%r13
b23e(2): jbe 0x7(%rip)
b240(5): mov $0x5c,0x0(%r14,%r15,1)
b245(4): lea 0x1(%r15),%rax
b249(3): cmp %rax,%r13
b24c(2): jbe 0xf(%rip)
b24e(2): mov %ebx,%eax
b250(3): shr $0x6,%al
b253(3): add $0x30,%eax
b256(5): mov %al,0x1(%r14,%r15,1)
b25b(4): lea 0x2(%r15),%rax
b25f(3): cmp %rax,%r13
b262(2): jbe 0x12(%rip)
b264(2): mov %ebx,%eax
b266(3): shr $0x3,%al
b269(3): and $0x7,%eax
b26c(3): add $0x30,%eax
b26f(5): mov %al,0x2(%r14,%r15,1)
b274(3): and $0x7,%ebx
b277(4): add $0x1,%rbp
b27b(4): add $0x3,%r15
b27f(3): add $0x30,%ebx
b282(3): cmp %rcx,%rbp
b285(6): jnb 0xfffff7eb(%rip)
b28b(2): mov %edx,%esi
b28d(3): cmp %r15,%r13
b290(2): jbe 0x6(%rip)
b292(4): mov %bl,0x0(%r14,%r15,1)
b296(4): movzx 0x0(%rdi,%rbp,1),%ebx
b29a(4): add $0x1,%r15
b29e(2): test %dl,%dl
b2a0(6): jnz 0xffffff50(%rip)
b2a6(2): mov %esi,%eax
b2a8(3): xor $0x1,%eax
b2ab(3): and %r8d,%eax
b2ae(3): test %r10b,%r10b
b2b1(2): jz 0x10(%rip)
b2b3(3): cmp %r15,%r13
b2b6(2): jbe 0x7(%rip)
b2b8(5): mov $0x5c,0x0(%r14,%r15,1)
b2bd(4): add $0x1,%r15
b2c1(4): add $0x1,%rbp
b2c5(3): cmp %rcx,%rbp
b2c8(6): jnb 0xfffff784(%rip)
b2ce(2): test %al,%al
b2d0(6): jz 0x3fe(%rip)
b2d6(3): cmp %r15,%r13
b2d9(2): jbe 0x7(%rip)
b2db(5): mov $0x27,0x0(%r14,%r15,1)
b2e0(4): lea 0x1(%r15),%rax
b2e4(3): cmp %rax,%r13
b2e7(2): jbe 0x8(%rip)
b2e9(6): mov $0x27,0x1(%r14,%r15,1)
b2ef(4): add $0x2,%r15
b2f3(3): xor %r10d,%r10d
b2f6(3): xor %r8d,%r8d
b2f9(2): jmp 0xffffff94(%rip)
b2fb(5): nop 0x0(%rax,%rax,1)
b300(4): cmp $0x1,%r15
b304(6): jz 0xfffffe65(%rip)
b30a(5): mov 0x10(%rsp),%rdi
b30f(4): lea 0x0(%rdi,%r15,1),%rcx
b313(5): lea 0x1(%rdi,%r14,1),%rdx
b318(4): lea 0x0(%rcx,%r14,1),%r8
b31c(2): jmp 0x11(%rip)
b31e(2): nop 
b320(4): add $0x1,%rdx
b324(3): cmp %rdx,%r8
b327(6): jz 0xfffffe42(%rip)
b32d(3): movzx (%rdx),%ecx
b330(3): sub $0x5b,%ecx
b333(3): cmp $0x21,%cl
b336(2): jnbe 0xffffffea(%rip)
b338(5): mov $0x1,%esi
b33d(3): shl/sal %cl,%rsi
b340(3): mov %rsi,%rcx
b343(a): mov $0x8589934635,%rsi
b34d(3): test %rsi,%rcx
b350(2): jz 0xffffffd0(%rip)
b352(5): mov 0x40(%rsp),%r14
b357(5): mov 0x70(%rsp),%r13
b35c(5): mov 0x30(%rsp),%rbp
b361(8): mov $0x2,0x8(%rsp)
b369(5): cmp $0x0,0xd(%rsp)
b36e(2): jz 0x12(%rip)
b370(2): test %al,%al
b372(5): mov $0x4,%eax
b377(5): cmove 0x8(%rsp),%eax
b37c(4): mov %eax,0x8(%rsp)
b380(4): sub $0x8,%rsp
b384(3): mov %rbp,%rcx
b387(3): mov %r13,%rsi
b38a(4): push 0x68(%rsp)
b38e(4): push 0x78(%rsp)
b392(3): mov %r14,%rdi
b395(2): push $0x0
b397(8): mov 0x98(%rsp),%r9d
b39f(5): mov 0x28(%rsp),%r8d
b3a4(5): mov 0x30(%rsp),%rdx
b3a9(4): and $0xfd,%r9d
b3ad(5): call 0xfffff433(%rip)
b3b2(4): add $0x20,%rsp
b3b6(3): mov %rax,%r15
b3b9(8): mov 0xa8(%rsp),%rbx
b3c1(9): xor $0x28,%rbx
b3ca(3): mov %r15,%rax
b3cd(6): jnz 0x606(%rip)
b3d3(7): add $0xb8,%rsp
b3da(1): pop %rbx
b3db(1): pop %rbp
b3dc(2): pop %r12
b3de(2): pop %r13
b3e0(2): pop %r14
b3e2(2): pop %r15
b3e4(1): ret near (%rsp)
b3e5(3): nop (%rax)
b3e8(3): mov %r11,%rbp
b3eb(5): jmp 0xffffff7e(%rip)
b3f0(3): cmp %r15,%r13
b3f3(2): jbe 0x7(%rip)
b3f5(5): mov $0x27,0x0(%r14,%r15,1)
b3fa(4): lea 0x1(%r15),%rax
b3fe(3): cmp %rax,%r13
b401(2): jbe 0x8(%rip)
b403(6): mov $0x5c,0x1(%r14,%r15,1)
b409(4): lea 0x2(%r15),%rax
b40d(3): cmp %rax,%r13
b410(6): jbe 0x5f2(%rip)
b416(3): mov %r13,%rdx
b419(6): mov $0x27,0x2(%r14,%r15,1)
b41f(5): mov 0x50(%rsp),%r13
b424(5): jmp 0xfffffbde(%rip)
b429(3): mov %r12d,%eax
b42c(5): mov $0x30,%ebx
b431(3): xor %r12d,%r12d
b434(5): jmp 0xfffff605(%rip)
b439(6): mov $0x27,0x2(%r14,%r15,1)
b43f(5): jmp 0xfffff9ca(%rip)
b444(2): test %ebx,%ebx
b446(6): jnz 0xfffff42d(%rip)
b44c(5): mov $0x1,0xd(%rsp)
b451(3): test %r13,%r13
b454(6): jnz 0x596(%rip)
b45a(7): lea 0x16093(%rip),%rax
b461(9): mov $0x0,0x50(%rsp)
b46a(5): mov $0x1,0xe(%rsp)
b46f(5): mov $0x0,0x7c(%rsp)
b474(3): xor %r12d,%r12d
b477(5): mov $0x0,0xf(%rsp)
b47c(9): mov $0x1,0x18(%rsp)
b485(5): mov %rax,0x48(%rsp)
b48a(6): mov $0x1,%r15d
b490(8): mov $0x2,0x8(%rsp)
b498(5): jmp 0xfffff41b(%rip)
b49d(3): nop (%rax)
b4a0(2): test %ebx,%ebx
b4a2(6): jnz 0x3fb(%rip)
b4a8(3): test %r13,%r13
b4ab(6): jz 0x22b(%rip)
b4b1(4): mov $0x22,(%r14)
b4b5(5): mov $0x1,0xe(%rsp)
b4ba(3): xor %r12d,%r12d
b4bd(5): mov $0x0,0x7c(%rsp)
b4c2(9): mov $0x0,0x50(%rsp)
b4cb(7): lea 0x165f9(%rip),%rax
b4d2(5): mov $0x0,0xf(%rsp)
b4d7(5): mov $0x1,0xd(%rsp)
b4dc(9): mov $0x1,0x18(%rsp)
b4e5(6): mov $0x1,%r15d
b4eb(5): mov %rax,0x48(%rsp)
b4f0(5): jmp 0xfffff3c3(%rip)
b4f5(7): lea 0x165cf(%rip),%rax
b4fc(5): mov $0x1,0xe(%rsp)
b501(5): mov $0x0,0x7c(%rsp)
b506(3): xor %r12d,%r12d
b509(9): mov $0x0,0x50(%rsp)
b512(5): mov $0x1,0xf(%rsp)
b517(5): mov $0x1,0xd(%rsp)
b51c(9): mov $0x1,0x18(%rsp)
b525(3): xor %r15d,%r15d
b528(5): mov %rax,0x48(%rsp)
b52d(8): mov $0x5,0x8(%rsp)
b535(5): jmp 0xfffff37e(%rip)
b53a(5): mov $0x1,0xe(%rsp)
b53f(5): mov $0x0,0x7c(%rsp)
b544(3): xor %r12d,%r12d
b547(9): mov $0x0,0x50(%rsp)
b550(5): mov $0x0,0xf(%rsp)
b555(3): xor %r15d,%r15d
b558(5): mov $0x1,0xd(%rsp)
b55d(9): mov $0x0,0x18(%rsp)
b566(9): mov $0x0,0x48(%rsp)
b56f(5): jmp 0xfffff344(%rip)
b574(5): cmp $0xa,0x8(%rsp)
b579(2): jz 0x58(%rip)
b57b(7): lea 0x1654b(%rip),%rsi
b582(2): xor %edi,%edi
b584(5): mov $0x5,%edx
b589(5): call 0xffff6f87(%rip)
b58e(3): mov %rax,%rcx
b591(5): mov %rax,0x68(%rsp)
b596(7): lea 0x16530(%rip),%rax
b59d(3): cmp %rax,%rcx
b5a0(6): jz 0x39e(%rip)
b5a6(7): lea 0x15f47(%rip),%rsi
b5ad(2): xor %edi,%edi
b5af(5): mov $0x5,%edx
b5b4(5): call 0xffff6f5c(%rip)
b5b9(3): mov %rax,%rcx
b5bc(5): mov %rax,0x60(%rsp)
b5c1(7): lea 0x15f2c(%rip),%rax
b5c8(3): cmp %rax,%rcx
b5cb(6): jz 0x389(%rip)
b5d1(3): xor %r15d,%r15d
b5d4(2): test %ebx,%ebx
b5d6(6): jz 0x1c7(%rip)
b5dc(2): test %ebx,%ebx
b5de(5): mov 0x60(%rsp),%rbx
b5e3(5): setnz 0xf(%rsp)
b5e8(3): xor %r12d,%r12d
b5eb(3): mov %rbx,%rdi
b5ee(5): call 0xffff6f42(%rip)
b5f3(5): mov %rbx,0x48(%rsp)
b5f8(5): mov %rax,0x18(%rsp)
b5fd(5): mov $0x1,0xe(%rsp)
b602(5): mov $0x0,0x7c(%rsp)
b607(9): mov $0x0,0x50(%rsp)
b610(5): mov $0x1,0xd(%rsp)
b615(5): jmp 0xfffff29e(%rip)
b61a(5): mov $0x1,0xe(%rsp)
b61f(5): mov $0x0,0x7c(%rsp)
b624(3): xor %r12d,%r12d
b627(9): mov $0x0,0x50(%rsp)
b630(5): mov $0x0,0xf(%rsp)
b635(3): xor %r15d,%r15d
b638(5): mov $0x0,0xd(%rsp)
b63d(9): mov $0x0,0x18(%rsp)
b646(9): mov $0x0,0x48(%rsp)
b64f(5): jmp 0xfffff264(%rip)
b654(5): mov $0x1,0xe(%rsp)
b659(5): mov $0x0,0x7c(%rsp)
b65e(3): xor %r12d,%r12d
b661(9): mov $0x0,0x50(%rsp)
b66a(5): mov $0x1,0xf(%rsp)
b66f(5): mov $0x1,0xd(%rsp)
b674(5): jmp 0xfffff21f(%rip)
b679(3): cmp %r15,%r13
b67c(2): jbe 0x7(%rip)
b67e(5): mov $0x30,0x0(%r14,%r15,1)
b683(4): lea 0x2(%rcx),%rax
b687(3): cmp %rax,%r13
b68a(2): jbe 0x8(%rip)
b68c(6): mov $0x30,0x2(%r14,%rcx,1)
b692(3): mov %r12d,%eax
b695(4): lea 0x3(%rcx),%r15
b699(3): xor %r12d,%r12d
b69c(5): mov $0x30,%ebx
b6a1(5): jmp 0xfffff367(%rip)
b6a6(a): nop 0x0(%rax,%rax,1)
b6b0(5): movzx 0xf(%rsp),%ebx
b6b5(3): mov %r11,%rbp
b6b8(4): mov %bl,0xd(%rsp)
b6bc(5): jmp 0xfffffcad(%rip)
b6c1(5): movzx 0xd(%rsp),%edx
b6c6(3): xor %r12d,%r12d
b6c9(5): jmp 0xfffffb07(%rip)
b6ce(3): xor %r10d,%r10d
b6d1(5): jmp 0xfffffbbc(%rip)
b6d6(9): mov $0x0,0x50(%rsp)
b6df(5): mov $0x1,0xe(%rsp)
b6e4(3): xor %r12d,%r12d
b6e7(5): mov $0x0,0x7c(%rsp)
b6ec(5): jmp 0xfffffddf(%rip)
b6f1(5): mov 0x30(%rsp),%r11
b6f6(3): mov %r14,%rsi
b6f9(3): mov %r13,%rcx
b6fc(3): mov %rbx,%rax
b6ff(3): mov %rbx,%rdi
b702(6): movzx 0x7d(%rsp),%r8d
b708(5): movzx 0x7e(%rsp),%ebx
b70d(8): mov 0x88(%rsp),%r9
b715(3): cmp %r11,%rsi
b718(6): movzx 0x7f(%rsp),%r10d
b71e(8): mov 0x80(%rsp),%r15
b726(5): mov 0x40(%rsp),%r14
b72b(5): mov 0x70(%rsp),%r13
b730(2): jnb 0x28(%rip)
b732(3): cmp $0x0,(%rcx)
b735(2): jnz 0x12(%rip)
b737(2): jmp 0x21(%rip)
b739(7): nop 0x0(%rax)
b740(5): cmp $0x0,0x0(%r9,%rax,1)
b745(2): jz 0x10(%rip)
b747(4): add $0x1,%rax
b74b(5): lea 0x0(%rbp,%rax,1),%rdx
b750(3): cmp %rdx,%r11
b753(2): jnbe 0xffffffed(%rip)
b755(3): mov %rax,%rdi
b758(5): movzx 0xd(%rsp),%edx
b75d(3): xor %r12d,%r12d
b760(5): jmp 0xfffffa66(%rip)
b765(3): mov %rbx,%rdi
b768(6): movzx 0x7d(%rsp),%r8d
b76e(5): movzx 0x7e(%rsp),%ebx
b773(6): movzx 0x7f(%rsp),%r10d
b779(8): mov 0x80(%rsp),%r15
b781(3): xor %r12d,%r12d
b784(5): mov 0x40(%rsp),%r14
b789(5): mov 0x70(%rsp),%r13
b78e(5): mov 0x30(%rsp),%r11
b793(5): movzx 0xd(%rsp),%edx
b798(5): jmp 0xfffffa2e(%rip)
b79d(5): mov 0x68(%rsp),%rdx
b7a2(3): movzx (%rdx),%eax
b7a5(2): test %al,%al
b7a7(6): jz 0xfffffe35(%rip)
b7ad(3): nop (%rax)
b7b0(3): cmp %r15,%r13
b7b3(2): jbe 0x6(%rip)
b7b5(4): mov %al,0x0(%r14,%r15,1)
b7b9(4): add $0x1,%r15
b7bd(5): movzx 0x0(%rdx,%r15,1),%eax
b7c2(2): test %al,%al
b7c4(2): jnz 0xffffffec(%rip)
b7c6(5): jmp 0xfffffe16(%rip)
b7cb(2): mov %edx,%eax
b7cd(5): jmp 0xfffff55a(%rip)
b7d2(4): movzx 0x0(%rax,%rcx,1),%ebx
b7d6(3): cmp $0x3e,%bl
b7d9(6): jnbe 0xfffff877(%rip)
b7df(a): mov $0x8070630310989004800,%rax
b7e9(4): bt %rbx,%rax
b7ed(6): jnb 0xfffff863(%rip)
b7f3(5): cmp $0x0,0xf(%rsp)
b7f8(6): jnz 0x1ea(%rip)
b7fe(3): cmp %r15,%r13
b801(2): jbe 0x7(%rip)
b803(5): mov $0x3f,0x0(%r14,%r15,1)
b808(4): lea 0x1(%r15),%rax
b80c(3): cmp %rax,%r13
b80f(2): jbe 0x8(%rip)
b811(6): mov $0x22,0x1(%r14,%r15,1)
b817(4): lea 0x2(%r15),%rax
b81b(3): cmp %rax,%r13
b81e(2): jbe 0x8(%rip)
b820(6): mov $0x22,0x2(%r14,%r15,1)
b826(4): lea 0x3(%r15),%rax
b82a(3): cmp %rax,%r13
b82d(2): jbe 0x8(%rip)
b82f(6): mov $0x3f,0x3(%r14,%r15,1)
b835(4): add $0x4,%r15
b839(2): xor %edx,%edx
b83b(3): xor %r12d,%r12d
b83e(2): xor %eax,%eax
b840(3): mov %rcx,%rbp
b843(5): jmp 0xfffff1c5(%rip)
b848(2): test %ebx,%ebx
b84a(6): jz 0x18e(%rip)
b850(7): lea 0x15c9d(%rip),%rax
b857(5): mov $0x1,0xe(%rsp)
b85c(5): mov $0x0,0x7c(%rsp)
b861(3): xor %r12d,%r12d
b864(9): mov $0x0,0x50(%rsp)
b86d(5): mov $0x1,0xf(%rsp)
b872(5): mov $0x0,0xd(%rsp)
b877(9): mov $0x1,0x18(%rsp)
b880(3): xor %r15d,%r15d
b883(5): mov %rax,0x48(%rsp)
b888(5): jmp 0xfffff02b(%rip)
b88d(3): nop (%rax)
b890(3): mov %r11,%rbp
b893(5): movzx 0xf(%rsp),%eax
b898(5): jmp 0xfffffad1(%rip)
b89d(7): lea 0x16227(%rip),%rax
b8a4(5): mov $0x1,0xe(%rsp)
b8a9(5): mov $0x0,0x7c(%rsp)
b8ae(3): xor %r12d,%r12d
b8b1(9): mov $0x0,0x50(%rsp)
b8ba(5): mov $0x1,0xf(%rsp)
b8bf(5): mov $0x1,0xd(%rsp)
b8c4(9): mov $0x1,0x18(%rsp)
b8cd(3): xor %r15d,%r15d
b8d0(5): mov %rax,0x48(%rsp)
b8d5(5): jmp 0xffffefde(%rip)
b8da(2): mov %edx,%eax
b8dc(5): mov 0x48(%rsp),%rbx
b8e1(3): test %rbx,%rbx
b8e4(2): jz 0x2e(%rip)
b8e6(2): test %al,%al
b8e8(2): jz 0x2a(%rip)
b8ea(3): movzx (%rbx),%ecx
b8ed(3): mov %rbx,%rax
b8f0(2): test %cl,%cl
b8f2(2): jz 0x20(%rip)
b8f4(3): mov %r15,%rdx
b8f7(3): sub %r15,%rax
b8fa(3): cmp %rdx,%r13
b8fd(2): jbe 0x6(%rip)
b8ff(4): mov %cl,0x0(%r14,%rdx,1)
b903(4): add $0x1,%rdx
b907(4): movzx 0x0(%rax,%rdx,1),%ecx
b90b(2): test %cl,%cl
b90d(2): jnz 0xffffffed(%rip)
b90f(3): mov %rdx,%r15
b912(3): cmp %r15,%r13
b915(6): jbe 0xfffffaa4(%rip)
b91b(5): mov $0x0,0x0(%r14,%r15,1)
b920(5): jmp 0xfffffa99(%rip)
b925(5): cmp $0x2,0x8(%rsp)
b92a(5): movzx 0xf(%rsp),%ebx
b92f(3): mov %r11,%rbp
b932(3): setz %al
b935(4): mov %bl,0xd(%rsp)
b939(5): jmp 0xfffffa30(%rip)
b93e(4): mov 0x8(%rsp),%esi
b942(3): mov %rcx,%rdi
b945(5): call 0xffffedab(%rip)
b94a(5): mov %rax,0x68(%rsp)
b94f(5): jmp 0xfffffc57(%rip)
b954(4): mov 0x8(%rsp),%esi
b958(3): mov %rcx,%rdi
b95b(5): call 0xffffed95(%rip)
b960(5): mov %rax,0x60(%rsp)
b965(5): jmp 0xfffffc6c(%rip)
b96a(5): movzx 0xf(%rsp),%ebx
b96f(3): mov %r11,%rbp
b972(2): mov %edx,%eax
b974(4): mov %bl,0xd(%rsp)
b978(5): jmp 0xfffff9f1(%rip)
b97d(4): sub $0x8,%rsp
b981(6): mov $0x5,%r8d
b987(3): mov %r11,%rcx
b98a(4): push 0x68(%rsp)
b98e(4): push 0x78(%rsp)
b992(3): mov %r14,%rdi
b995(4): push 0x38(%rsp)
b999(8): mov 0x98(%rsp),%r9d
b9a1(5): mov 0x30(%rsp),%rdx
b9a6(5): mov 0x70(%rsp),%rsi
b9ab(5): call 0xffffee35(%rip)
b9b0(4): add $0x20,%rsp
b9b4(3): mov %rax,%r15
b9b7(5): jmp 0xfffffa02(%rip)
b9bc(5): movzx 0x7c(%rsp),%eax
b9c1(5): jmp 0xffffff1b(%rip)
b9c6(8): mov $0x2,0x8(%rsp)
b9ce(5): jmp 0xfffff99b(%rip)
b9d3(5): call 0xffff6b8d(%rip)
b9d8(5): mov $0x0,0xd(%rsp)
b9dd(5): jmp 0xfffffa74(%rip)
b9e2(3): mov %r11,%rbp
b9e5(5): jmp 0xfffff99b(%rip)
b9ea(5): mov $0x1,0xe(%rsp)
b9ef(2): xor %eax,%eax
b9f1(3): xor %r12d,%r12d
b9f4(9): mov $0x0,0x50(%rsp)
b9fd(5): jmp 0xfffff5a7(%rip)
ba02(3): mov %r13,%rdx
ba05(5): mov 0x50(%rsp),%r13
ba0a(5): jmp 0xfffff5f8(%rip)
ba0f(5): call 0xffff69f1(%rip)

"quotearg_n_options" :
ba20(2): push %r15
ba22(2): push %r14
ba24(3): movsxd %edi,%r15
ba27(2): push %r13
ba29(2): push %r12
ba2b(3): mov %rdx,%r14
ba2e(1): push %rbp
ba2f(1): push %rbx
ba30(3): mov %rcx,%rbp
ba33(4): sub $0x28,%rsp
ba37(5): mov %rsi,0x8(%rsp)
ba3c(5): call 0xffff69d4(%rip)
ba41(3): mov %rax,%r13
ba44(2): mov (%rax),%eax
ba46(3): test %r15d,%r15d
ba49(7): mov 0x21c630(%rip),%rbx
ba50(4): mov %eax,0x18(%rsp)
ba54(6): js 0x16d(%rip)
ba5a(7): cmp %r15d,0x21c617(%rip)
ba61(2): jnle 0x64(%rip)
ba63(7): cmp $0x7fffffff,%r15d
ba6a(6): jz 0x15c(%rip)
ba70(4): lea 0x1(%r15),%r12d
ba74(7): lea 0x21c615(%rip),%rax
ba7b(3): movsxd %r12d,%rsi
ba7e(4): shl/sal $0x4,%rsi
ba82(3): cmp %rax,%rbx
ba85(6): jz 0x11b(%rip)
ba8b(3): mov %rbx,%rdi
ba8e(5): call 0xfb2(%rip)
ba93(3): mov %rax,%rbx
ba96(7): mov %rax,0x21c5e3(%rip)
ba9d(7): movsxd 0x21c5d4(%rip),%rdi
baa4(3): mov %r12d,%edx
baa7(2): xor %esi,%esi
baa9(2): sub %edi,%edx
baab(4): shl/sal $0x4,%rdi
baaf(3): movsxd %edx,%rdx
bab2(3): add %rbx,%rdi
bab5(4): shl/sal $0x4,%rdx
bab9(5): call 0xffff6b67(%rip)
babe(7): mov %r12d,0x21c5b3(%rip)
bac5(3): mov 0x4(%rbp),%eax
bac8(4): shl/sal $0x4,%r15
bacc(4): sub $0x8,%rsp
bad0(3): add %r15,%rbx
bad3(4): lea 0x8(%rbp),%r15
bad7(4): mov 0x0(%rbp),%r8d
badb(3): mov (%rbx),%r11
bade(4): mov 0x8(%rbx),%r12
bae2(3): mov %r14,%rcx
bae5(3): or $0x1,%eax
bae8(4): mov %eax,0x24(%rsp)
baec(3): push 0x30(%rbp)
baef(3): mov %eax,%r9d
baf2(3): push 0x28(%rbp)
baf5(2): push %r15
baf7(3): mov %r11,%rsi
bafa(5): mov 0x28(%rsp),%rdx
baff(3): mov %r12,%rdi
bb02(5): mov %r11,0x30(%rsp)
bb07(5): call 0xffffecd9(%rip)
bb0c(4): add $0x20,%rsp
bb10(5): mov 0x10(%rsp),%r11
bb15(3): cmp %rax,%r11
bb18(2): jnbe 0x69(%rip)
bb1a(4): lea 0x1(%rax),%rsi
bb1e(7): lea 0x21c69b(%rip),%rax
bb25(3): cmp %rax,%r12
bb28(3): mov %rsi,(%rbx)
bb2b(2): jz 0x14(%rip)
bb2d(3): mov %r12,%rdi
bb30(5): mov %rsi,0x10(%rsp)
bb35(5): call 0xffff6edb(%rip)
bb3a(5): mov 0x10(%rsp),%rsi
bb3f(3): mov %rsi,%rdi
bb42(5): mov %rsi,0x10(%rsp)
bb47(5): call 0xe99(%rip)
bb4c(4): sub $0x8,%rsp
bb50(4): mov %rax,0x8(%rbx)
bb54(4): mov 0x0(%rbp),%r8d
bb58(3): push 0x30(%rbp)
bb5b(3): push 0x28(%rbp)
bb5e(3): mov %r14,%rcx
bb61(2): push %r15
bb63(5): mov 0x3c(%rsp),%r9d
bb68(3): mov %rax,%rdi
bb6b(5): mov 0x28(%rsp),%rdx
bb70(5): mov 0x30(%rsp),%rsi
bb75(3): mov %rax,%r12
bb78(5): call 0xffffec68(%rip)
bb7d(4): add $0x20,%rsp
bb81(4): mov 0x18(%rsp),%eax
bb85(4): mov %eax,0x0(%r13)
bb89(4): add $0x28,%rsp
bb8d(3): mov %r12,%rax
bb90(1): pop %rbx
bb91(1): pop %rbp
bb92(2): pop %r12
bb94(2): pop %r13
bb96(2): pop %r14
bb98(2): pop %r15
bb9a(1): ret near (%rsp)
bb9b(5): nop 0x0(%rax,%rax,1)
bba0(2): xor %edi,%edi
bba2(5): call 0xe9e(%rip)
bba7(8): movdqa 0x21c4e1(%rip),%xmm0
bbaf(3): mov %rax,%rbx
bbb2(7): mov %rax,0x21c4c7(%rip)
bbb9(3): movups %xmm0,(%rax)
bbbc(5): jmp 0xfffffee1(%rip)
bbc1(5): call 0xffff683f(%rip)
bbc6(5): call 0x106a(%rip)

"clone_quoting_options" :
bbd0(2): push %r12
bbd2(1): push %rbp
bbd3(1): push %rbx
bbd4(3): mov %rdi,%rbx
bbd7(5): call 0xffff6839(%rip)
bbdc(3): mov (%rax),%r12d
bbdf(3): mov %rax,%rbp
bbe2(7): lea 0x21c6d7(%rip),%rax
bbe9(3): test %rbx,%rbx
bbec(5): mov $0x38,%esi
bbf1(4): cmove %rax,%rbx
bbf5(3): mov %rbx,%rdi
bbf8(5): call 0xfe8(%rip)
bbfd(4): mov %r12d,0x0(%rbp)
bc01(1): pop %rbx
bc02(1): pop %rbp
bc03(2): pop %r12
bc05(1): ret near (%rsp)

"get_quoting_style" :
bc10(7): lea 0x21c6a9(%rip),%rax
bc17(3): test %rdi,%rdi
bc1a(4): cmove %rax,%rdi
bc1e(2): mov (%rdi),%eax
bc20(1): ret near (%rsp)

"set_quoting_style" :
bc30(7): lea 0x21c689(%rip),%rax
bc37(3): test %rdi,%rdi
bc3a(4): cmove %rax,%rdi
bc3e(2): mov %esi,(%rdi)
bc40(1): ret near (%rsp)

"set_char_quoting" :
bc50(7): lea 0x21c669(%rip),%rax
bc57(3): test %rdi,%rdi
bc5a(2): mov %esi,%ecx
bc5c(4): cmove %rax,%rdi
bc60(2): mov %esi,%eax
bc62(3): and $0x1f,%ecx
bc65(3): shr $0x5,%al
bc68(3): movzx %al,%eax
bc6b(5): lea 0x8(%rdi,%rax,4),%rdi
bc70(2): mov (%rdi),%esi
bc72(2): mov %esi,%eax
bc74(2): shr %cl,%eax
bc76(2): xor %eax,%edx
bc78(3): and $0x1,%eax
bc7b(3): and $0x1,%edx
bc7e(2): shl/sal %cl,%edx
bc80(2): xor %esi,%edx
bc82(2): mov %edx,(%rdi)
bc84(1): ret near (%rsp)

"set_quoting_flags" :
bc90(7): lea 0x21c629(%rip),%rax
bc97(3): test %rdi,%rdi
bc9a(4): cmove %rax,%rdi
bc9e(3): mov 0x4(%rdi),%eax
bca1(3): mov %esi,0x4(%rdi)
bca4(1): ret near (%rsp)

"set_custom_quoting" :
bcb0(7): lea 0x21c609(%rip),%rax
bcb7(3): test %rdi,%rdi
bcba(4): cmove %rax,%rdi
bcbe(3): test %rsi,%rsi
bcc1(6): mov $0xa,(%rdi)
bcc7(2): jz 0x10(%rip)
bcc9(3): test %rdx,%rdx
bccc(2): jz 0xb(%rip)
bcce(4): mov %rsi,0x28(%rdi)
bcd2(4): mov %rdx,0x30(%rdi)
bcd6(1): ret near (%rsp)
bcd7(4): sub $0x8,%rsp
bcdb(5): call 0xffff6725(%rip)

"quotearg_buffer" :
bce0(2): push %r15
bce2(2): push %r14
bce4(7): lea 0x21c5d5(%rip),%rax
bceb(2): push %r13
bced(2): push %r12
bcef(3): mov %rdi,%r13
bcf2(1): push %rbp
bcf3(1): push %rbx
bcf4(3): mov %r8,%rbx
bcf7(3): mov %rsi,%r14
bcfa(3): mov %rdx,%r15
bcfd(4): sub $0x18,%rsp
bd01(3): test %r8,%r8
bd04(4): cmove %rax,%rbx
bd08(5): mov %rcx,0x8(%rsp)
bd0d(5): call 0xffff6703(%rip)
bd12(3): mov (%rax),%r12d
bd15(3): mov %rax,%rbp
bd18(4): lea 0x8(%rbx),%rax
bd1c(4): sub $0x8,%rsp
bd20(4): mov 0x4(%rbx),%r9d
bd24(3): push 0x30(%rbx)
bd27(3): mov (%rbx),%r8d
bd2a(3): push 0x28(%rbx)
bd2d(3): mov %r15,%rdx
bd30(1): push %rax
bd31(5): mov 0x28(%rsp),%rcx
bd36(3): mov %r14,%rsi
bd39(3): mov %r13,%rdi
bd3c(5): call 0xffffeaa4(%rip)
bd41(4): mov %r12d,0x0(%rbp)
bd45(4): add $0x38,%rsp
bd49(1): pop %rbx
bd4a(1): pop %rbp
bd4b(2): pop %r12
bd4d(2): pop %r13
bd4f(2): pop %r14
bd51(2): pop %r15
bd53(1): ret near (%rsp)

"quotearg_alloc_mem" :
bd60(2): push %r15
bd62(2): push %r14
bd64(7): lea 0x21c555(%rip),%rax
bd6b(2): push %r13
bd6d(2): push %r12
bd6f(3): mov %rdx,%r12
bd72(1): push %rbp
bd73(1): push %rbx
bd74(3): mov %rcx,%rbx
bd77(3): mov %rdi,%r14
bd7a(3): mov %rsi,%r15
bd7d(4): sub $0x38,%rsp
bd81(3): test %rcx,%rcx
bd84(4): cmove %rax,%rbx
bd88(2): xor %ebp,%ebp
bd8a(5): call 0xffff6686(%rip)
bd8f(3): test %r12,%r12
bd92(3): mov %rax,%r13
bd95(2): mov (%rax),%eax
bd97(4): setz %bpl
bd9b(3): or 0x4(%rbx),%ebp
bd9e(4): lea 0x8(%rbx),%r10
bda2(4): sub $0x8,%rsp
bda6(3): mov (%rbx),%r8d
bda9(3): mov %r15,%rcx
bdac(4): mov %eax,0x14(%rsp)
bdb0(3): push 0x30(%rbx)
bdb3(3): mov %r14,%rdx
bdb6(3): push 0x28(%rbx)
bdb9(2): push %r10
bdbb(2): xor %esi,%esi
bdbd(3): mov %ebp,%r9d
bdc0(2): xor %edi,%edi
bdc2(5): mov %r10,0x40(%rsp)
bdc7(5): call 0xffffea19(%rip)
bdcc(4): lea 0x1(%rax),%rsi
bdd0(5): mov %rax,0x48(%rsp)
bdd5(4): add $0x20,%rsp
bdd9(3): mov %rsi,%rdi
bddc(5): mov %rsi,0x18(%rsp)
bde1(5): call 0xbff(%rip)
bde6(5): mov %rax,0x10(%rsp)
bdeb(4): sub $0x8,%rsp
bdef(3): push 0x30(%rbx)
bdf2(3): push 0x28(%rbx)
bdf5(5): mov 0x38(%rsp),%r10
bdfa(3): mov %ebp,%r9d
bdfd(3): mov (%rbx),%r8d
be00(3): mov %r15,%rcx
be03(3): mov %r14,%rdx
be06(3): mov %rax,%rdi
be09(2): push %r10
be0b(5): mov 0x38(%rsp),%rsi
be10(5): call 0xffffe9d0(%rip)
be15(4): mov 0x2c(%rsp),%eax
be19(4): add $0x20,%rsp
be1d(3): test %r12,%r12
be20(4): mov %eax,0x0(%r13)
be24(2): jz 0xb(%rip)
be26(5): mov 0x28(%rsp),%r11
be2b(4): mov %r11,(%r12)
be2f(5): mov 0x10(%rsp),%rax
be34(4): add $0x38,%rsp
be38(1): pop %rbx
be39(1): pop %rbp
be3a(2): pop %r12
be3c(2): pop %r13
be3e(2): pop %r14
be40(2): pop %r15
be42(1): ret near (%rsp)

"quotearg_alloc" :
be50(3): mov %rdx,%rcx
be53(2): xor %edx,%edx
be55(5): jmp 0xffffff0b(%rip)

"quotearg_free" :
be60(6): mov 0x21c212(%rip),%eax
be66(2): push %r12
be68(7): mov 0x21c211(%rip),%r12
be6f(1): push %rbp
be70(1): push %rbx
be71(3): cmp $0x1,%eax
be74(2): jle 0x2d(%rip)
be76(3): sub $0x2,%eax
be79(5): lea 0x18(%r12),%rbx
be7e(4): shl/sal $0x4,%rax
be82(5): lea 0x28(%r12,%rax,1),%rbp
be87(9): nop 0x0(%rax,%rax,1)
be90(3): mov (%rbx),%rdi
be93(4): add $0x10,%rbx
be97(5): call 0xffff6b79(%rip)
be9c(3): cmp %rbp,%rbx
be9f(2): jnz 0xfffffff1(%rip)
bea1(5): mov 0x8(%r12),%rdi
bea6(7): lea 0x21c313(%rip),%rbx
bead(3): cmp %rbx,%rdi
beb0(2): jz 0x19(%rip)
beb2(5): call 0xffff6b5e(%rip)
beb7(b): mov $0x100,0x21c1ce(%rip)
bec2(7): mov %rbx,0x21c1cf(%rip)
bec9(7): lea 0x21c1c0(%rip),%rbx
bed0(3): cmp %rbx,%r12
bed3(2): jz 0x11(%rip)
bed5(3): mov %r12,%rdi
bed8(5): call 0xffff6b38(%rip)
bedd(7): mov %rbx,0x21c19c(%rip)
bee4(1): pop %rbx
bee5(a): mov $0x1,0x21c189(%rip)
beef(1): pop %rbp
bef0(2): pop %r12
bef2(1): ret near (%rsp)

"quotearg_n" :
bf00(7): lea 0x21c3b9(%rip),%rcx
bf07(7): mov $0xffffffff,%rdx
bf0e(5): jmp 0xfffffb12(%rip)

"quotearg_n_mem" :
bf20(7): lea 0x21c399(%rip),%rcx
bf27(5): jmp 0xfffffaf9(%rip)

"quotearg" :
bf30(7): lea 0x21c389(%rip),%rcx
bf37(3): mov %rdi,%rsi
bf3a(7): mov $0xffffffff,%rdx
bf41(2): xor %edi,%edi
bf43(5): jmp 0xfffffadd(%rip)

"quotearg_mem" :
bf50(7): lea 0x21c369(%rip),%rcx
bf57(3): mov %rsi,%rdx
bf5a(3): mov %rdi,%rsi
bf5d(2): xor %edi,%edi
bf5f(5): jmp 0xfffffac1(%rip)

"quotearg_n_style" :
bf70(4): sub $0x48,%rsp
bf74(3): mov %rdx,%rax
bf77(9): mov $0x28,%rdx
bf80(5): mov %rdx,0x38(%rsp)
bf85(2): xor %edx,%edx
bf87(3): cmp $0xa,%esi
bf8a(2): jz 0x6a(%rip)
bf8c(3): mov %esi,(%rsp)
bf8f(3): mov %rsp,%rcx
bf92(7): mov $0xffffffff,%rdx
bf99(3): mov %rax,%rsi
bf9c(9): mov $0x0,0x4(%rsp)
bfa5(9): mov $0x0,0xc(%rsp)
bfae(9): mov $0x0,0x14(%rsp)
bfb7(9): mov $0x0,0x1c(%rsp)
bfc0(9): mov $0x0,0x24(%rsp)
bfc9(9): mov $0x0,0x2c(%rsp)
bfd2(8): mov $0x0,0x34(%rsp)
bfda(5): call 0xfffffa46(%rip)
bfdf(5): mov 0x38(%rsp),%rcx
bfe4(9): xor $0x28,%rcx
bfed(2): jnz 0xc(%rip)
bfef(4): add $0x48,%rsp
bff3(1): ret near (%rsp)
bff4(5): call 0xffff640c(%rip)
bff9(5): call 0xffff6567(%rip)

"quotearg_n_style_mem" :
c000(4): sub $0x48,%rsp
c004(3): mov %rdx,%rax
c007(3): mov %rcx,%rdx
c00a(9): mov $0x28,%rcx
c013(5): mov %rcx,0x38(%rsp)
c018(2): xor %ecx,%ecx
c01a(3): cmp $0xa,%esi
c01d(2): jz 0x63(%rip)
c01f(3): mov %esi,(%rsp)
c022(3): mov %rsp,%rcx
c025(3): mov %rax,%rsi
c028(9): mov $0x0,0x4(%rsp)
c031(9): mov $0x0,0xc(%rsp)
c03a(9): mov $0x0,0x14(%rsp)
c043(9): mov $0x0,0x1c(%rsp)
c04c(9): mov $0x0,0x24(%rsp)
c055(9): mov $0x0,0x2c(%rsp)
c05e(8): mov $0x0,0x34(%rsp)
c066(5): call 0xfffff9ba(%rip)
c06b(5): mov 0x38(%rsp),%rdx
c070(9): xor $0x28,%rdx
c079(2): jnz 0xc(%rip)
c07b(4): add $0x48,%rsp
c07f(1): ret near (%rsp)
c080(5): call 0xffff6380(%rip)
c085(5): call 0xffff64db(%rip)

"quotearg_style" :
c090(3): mov %rsi,%rdx
c093(2): mov %edi,%esi
c095(2): xor %edi,%edi
c097(5): jmp 0xfffffed9(%rip)

"quotearg_style_mem" :
c0a0(3): mov %rdx,%rcx
c0a3(3): mov %rsi,%rdx
c0a6(2): mov %edi,%esi
c0a8(2): xor %edi,%edi
c0aa(5): jmp 0xffffff56(%rip)

"quotearg_char_mem" :
c0b0(4): sub $0x48,%rsp
c0b4(2): mov %edx,%ecx
c0b6(9): mov $0x28,%rax
c0bf(5): mov %rax,0x38(%rsp)
c0c4(2): xor %eax,%eax
c0c6(7): mov 0x21c223(%rip),%rax
c0cd(3): mov %rsp,%r8
c0d0(3): and $0x1f,%ecx
c0d3(8): movdqa 0x21c1e5(%rip),%xmm0
c0db(5): mov %rax,0x30(%rsp)
c0e0(2): mov %edx,%eax
c0e2(4): movaps %xmm0,(%rsp)
c0e6(3): shr $0x5,%al
c0e9(3): movzx %al,%eax
c0ec(5): lea 0x8(%r8,%rax,4),%r9
c0f1(8): movdqa 0x21c1d7(%rip),%xmm0
c0f9(5): movaps %xmm0,0x10(%rsp)
c0fe(8): movdqa 0x21c1da(%rip),%xmm0
c106(5): movaps %xmm0,0x20(%rsp)
c10b(3): mov (%r9),%edx
c10e(2): mov %edx,%eax
c110(2): shr %cl,%eax
c112(2): not %eax
c114(3): and $0x1,%eax
c117(2): shl/sal %cl,%eax
c119(3): mov %r8,%rcx
c11c(2): xor %edx,%eax
c11e(3): mov %rsi,%rdx
c121(3): mov %rdi,%rsi
c124(3): mov %eax,(%r9)
c127(2): xor %edi,%edi
c129(5): call 0xfffff8f7(%rip)
c12e(5): mov 0x38(%rsp),%rsi
c133(9): xor $0x28,%rsi
c13c(2): jnz 0x7(%rip)
c13e(4): add $0x48,%rsp
c142(1): ret near (%rsp)
c143(5): call 0xffff641d(%rip)

"quotearg_char" :
c150(4): movsx %sil,%edx
c154(7): mov $0xffffffff,%rsi
c15b(5): jmp 0xffffff55(%rip)

"quotearg_colon" :
c160(5): mov $0x3a,%edx
c165(7): mov $0xffffffff,%rsi
c16c(5): jmp 0xffffff44(%rip)

"quotearg_colon_mem" :
c180(5): mov $0x3a,%edx
c185(5): jmp 0xffffff2b(%rip)

"quotearg_n_style_colon" :
c190(4): sub $0x48,%rsp
c194(3): mov %rdx,%rax
c197(9): mov $0x28,%rdx
c1a0(5): mov %rdx,0x38(%rsp)
c1a5(2): xor %edx,%edx
c1a7(3): cmp $0xa,%esi
c1aa(2): jz 0x6a(%rip)
c1ac(3): mov %esi,(%rsp)
c1af(3): mov %rsp,%rcx
c1b2(7): mov $0xffffffff,%rdx
c1b9(3): mov %rax,%rsi
c1bc(9): mov $0x0,0x4(%rsp)
c1c5(9): mov $0x4000000,0xc(%rsp)
c1ce(9): mov $0x0,0x14(%rsp)
c1d7(9): mov $0x0,0x1c(%rsp)
c1e0(9): mov $0x0,0x24(%rsp)
c1e9(9): mov $0x0,0x2c(%rsp)
c1f2(8): mov $0x0,0x34(%rsp)
c1fa(5): call 0xfffff826(%rip)
c1ff(5): mov 0x38(%rsp),%rcx
c204(9): xor $0x28,%rcx
c20d(2): jnz 0xc(%rip)
c20f(4): add $0x48,%rsp
c213(1): ret near (%rsp)
c214(5): call 0xffff61ec(%rip)
c219(5): call 0xffff6347(%rip)

"quotearg_n_custom_mem" :
c220(4): sub $0x48,%rsp
c224(3): mov %rcx,%r9
c227(7): mov 0x21c0c2(%rip),%rcx
c22e(8): movdqa 0x21c08a(%rip),%xmm0
c236(9): mov $0x28,%rax
c23f(5): mov %rax,0x38(%rsp)
c244(2): xor %eax,%eax
c246(4): movaps %xmm0,(%rsp)
c24a(3): test %rsi,%rsi
c24d(5): mov %rcx,0x30(%rsp)
c252(7): mov $0xa,(%rsp)
c259(8): movdqa 0x21c06f(%rip),%xmm0
c261(5): movaps %xmm0,0x10(%rsp)
c266(8): movdqa 0x21c072(%rip),%xmm0
c26e(5): movaps %xmm0,0x20(%rsp)
c273(2): jz 0x34(%rip)
c275(3): test %rdx,%rdx
c278(2): jz 0x2f(%rip)
c27a(5): mov %rsi,0x28(%rsp)
c27f(5): mov %rdx,0x30(%rsp)
c284(3): mov %rsp,%rcx
c287(3): mov %r8,%rdx
c28a(3): mov %r9,%rsi
c28d(5): call 0xfffff793(%rip)
c292(5): mov 0x38(%rsp),%rdi
c297(9): xor $0x28,%rdi
c2a0(2): jnz 0xc(%rip)
c2a2(4): add $0x48,%rsp
c2a6(1): ret near (%rsp)
c2a7(5): call 0xffff6159(%rip)
c2ac(5): call 0xffff62b4(%rip)

"quotearg_n_custom" :
c2c0(7): mov $0xffffffff,%r8
c2c7(5): jmp 0xffffff59(%rip)

"quotearg_custom" :
c2d0(3): mov %rdx,%rcx
c2d3(7): mov $0xffffffff,%r8
c2da(3): mov %rsi,%rdx
c2dd(3): mov %rdi,%rsi
c2e0(2): xor %edi,%edi
c2e2(5): jmp 0xffffff3e(%rip)

"quotearg_custom_mem" :
c2f0(3): mov %rcx,%r8
c2f3(3): mov %rdx,%rcx
c2f6(3): mov %rsi,%rdx
c2f9(3): mov %rdi,%rsi
c2fc(2): xor %edi,%edi
c2fe(5): jmp 0xffffff22(%rip)

"quote_n_mem" :
c310(7): lea 0x21bd29(%rip),%rcx
c317(5): jmp 0xfffff709(%rip)

"quote_mem" :
c320(7): lea 0x21bd19(%rip),%rcx
c327(3): mov %rsi,%rdx
c32a(3): mov %rdi,%rsi
c32d(2): xor %edi,%edi
c32f(5): jmp 0xfffff6f1(%rip)

"quote_n" :
c340(7): lea 0x21bcf9(%rip),%rcx
c347(7): mov $0xffffffff,%rdx
c34e(5): jmp 0xfffff6d2(%rip)

"quote" :
c360(7): lea 0x21bcd9(%rip),%rcx
c367(3): mov %rdi,%rsi
c36a(7): mov $0xffffffff,%rdx
c371(2): xor %edi,%edi
c373(5): jmp 0xfffff6ad(%rip)

"strnlen1" :
c380(1): push %rbp
c381(1): push %rbx
c382(3): mov %rsi,%rdx
c385(3): mov %rsi,%rbx
c388(2): xor %esi,%esi
c38a(3): mov %rdi,%rbp
c38d(4): sub $0x8,%rsp
c391(5): call 0xffff62df(%rip)
c396(3): mov %rax,%rdx
c399(3): sub %rbp,%rdx
c39c(4): add $0x1,%rdx
c3a0(3): test %rax,%rax
c3a3(3): mov %rbx,%rax
c3a6(4): cmovne %rdx,%rax
c3aa(4): add $0x8,%rsp
c3ae(1): pop %rbx
c3af(1): pop %rbp
c3b0(1): ret near (%rsp)

"version_etc_arn" :
c3c0(2): push %r15
c3c2(2): push %r14
c3c4(2): push %r13
c3c6(2): push %r12
c3c8(3): mov %r9,%r12
c3cb(1): push %rbp
c3cc(1): push %rbx
c3cd(3): mov %rdi,%rbp
c3d0(3): mov %r8,%rbx
c3d3(4): sub $0x28,%rsp
c3d7(3): test %rsi,%rsi
c3da(6): jz 0x11e(%rip)
c3e0(3): mov %rdx,%r8
c3e3(7): lea 0x15b9e(%rip),%rdx
c3ea(3): mov %rcx,%r9
c3ed(2): xor %eax,%eax
c3ef(3): mov %rsi,%rcx
c3f2(5): mov $0x1,%esi
c3f7(5): call 0xffff6579(%rip)
c3fc(7): lea 0x15b98(%rip),%rsi
c403(2): xor %edi,%edi
c405(5): mov $0x5,%edx
c40a(5): call 0xffff6106(%rip)
c40f(7): lea 0x15eaa(%rip),%rdx
c416(3): mov %rax,%rcx
c419(6): mov $0x7e3,%r8d
c41f(5): mov $0x1,%esi
c424(3): mov %rbp,%rdi
c427(2): xor %eax,%eax
c429(5): call 0xffff6547(%rip)
c42e(7): lea 0x15bf3(%rip),%rsi
c435(2): xor %edi,%edi
c437(5): mov $0x5,%edx
c43c(5): call 0xffff60d4(%rip)
c441(3): mov %rbp,%rsi
c444(3): mov %rax,%rdi
c447(5): call 0xffff6259(%rip)
c44c(4): cmp $0x9,%r12
c450(6): jnbe 0x340(%rip)
c456(7): lea 0x15e27(%rip),%rdx
c45d(4): movsxd 0x0(%rdx,%r12,4),%rax
c461(3): add %rdx,%rax
c464(2): jmp %rax
c466(a): nop 0x0(%rax,%rax,1)
c470(4): mov 0x38(%rbx),%r9
c474(4): mov 0x10(%rbx),%rax
c478(7): lea 0x15d19(%rip),%rsi
c47f(4): mov 0x8(%rbx),%r8
c483(5): mov $0x5,%edx
c488(2): xor %edi,%edi
c48a(4): mov 0x30(%rbx),%r13
c48e(4): mov 0x28(%rbx),%r12
c492(5): mov %r9,0x10(%rsp)
c497(4): mov 0x20(%rbx),%r15
c49b(4): mov 0x18(%rbx),%r14
c49f(4): mov %rax,(%rsp)
c4a3(5): mov %r8,0x8(%rsp)
c4a8(3): mov (%rbx),%rbx
c4ab(5): call 0xffff6065(%rip)
c4b0(4): sub $0x8,%rsp
c4b4(5): mov 0x18(%rsp),%r9
c4b9(3): mov %rax,%rdx
c4bc(3): mov %rbx,%rcx
c4bf(5): mov $0x1,%esi
c4c4(3): mov %rbp,%rdi
c4c7(2): xor %eax,%eax
c4c9(2): push %r9
c4cb(2): push %r13
c4cd(2): push %r12
c4cf(2): push %r15
c4d1(2): push %r14
c4d3(5): mov 0x30(%rsp),%r9
c4d8(5): mov 0x38(%rsp),%r8
c4dd(5): call 0xffff6493(%rip)
c4e2(4): add $0x30,%rsp
c4e6(4): add $0x28,%rsp
c4ea(1): pop %rbx
c4eb(1): pop %rbp
c4ec(2): pop %r12
c4ee(2): pop %r13
c4f0(2): pop %r14
c4f2(2): pop %r15
c4f4(1): ret near (%rsp)
c4f5(3): nop (%rax)
c4f8(3): mov %rcx,%r8
c4fb(3): mov %rdx,%rcx
c4fe(7): lea 0x15a8f(%rip),%rdx
c505(5): mov $0x1,%esi
c50a(2): xor %eax,%eax
c50c(5): call 0xffff6464(%rip)
c511(5): jmp 0xfffffeeb(%rip)
c516(a): nop 0x0(%rax,%rax,1)
c520(4): mov 0x40(%rbx),%r10
c524(4): mov 0x38(%rbx),%r9
c528(7): lea 0x15c99(%rip),%rsi
c52f(4): mov 0x10(%rbx),%rax
c533(4): mov 0x8(%rbx),%r8
c537(5): mov $0x5,%edx
c53c(4): mov 0x30(%rbx),%r13
c540(4): mov 0x28(%rbx),%r12
c544(4): mov 0x20(%rbx),%r15
c548(4): mov 0x18(%rbx),%r14
c54c(3): mov (%rbx),%rbx
c54f(5): mov %r10,0x18(%rsp)
c554(5): mov %r9,0x10(%rsp)
c559(4): mov %rax,(%rsp)
c55d(5): mov %r8,0x8(%rsp)
c562(2): xor %edi,%edi
c564(5): call 0xffff5fac(%rip)
c569(5): mov 0x18(%rsp),%r10
c56e(2): push %r10
c570(5): jmp 0xffffff44(%rip)
c575(3): nop (%rax)
c578(3): mov (%rbx),%rbx
c57b(7): lea 0x15a1d(%rip),%rsi
c582(5): mov $0x5,%edx
c587(2): xor %edi,%edi
c589(5): call 0xffff5f87(%rip)
c58e(4): add $0x28,%rsp
c592(3): mov %rbx,%rcx
c595(3): mov %rbp,%rdi
c598(1): pop %rbx
c599(1): pop %rbp
c59a(2): pop %r12
c59c(2): pop %r13
c59e(2): pop %r14
c5a0(2): pop %r15
c5a2(3): mov %rax,%rdx
c5a5(5): mov $0x1,%esi
c5aa(2): xor %eax,%eax
c5ac(5): jmp 0xffff63c4(%rip)
c5b1(7): nop 0x0(%rax)
c5b8(4): mov 0x8(%rbx),%r12
c5bc(7): lea 0x159ec(%rip),%rsi
c5c3(3): mov (%rbx),%rbx
c5c6(5): mov $0x5,%edx
c5cb(2): xor %edi,%edi
c5cd(5): call 0xffff5f43(%rip)
c5d2(4): add $0x28,%rsp
c5d6(3): mov %r12,%r8
c5d9(3): mov %rbx,%rcx
c5dc(3): mov %rbp,%rdi
c5df(3): mov %rax,%rdx
c5e2(5): mov $0x1,%esi
c5e7(1): pop %rbx
c5e8(1): pop %rbp
c5e9(2): pop %r12
c5eb(2): pop %r13
c5ed(2): pop %r14
c5ef(2): pop %r15
c5f1(2): xor %eax,%eax
c5f3(5): jmp 0xffff637d(%rip)
c5f8(8): nop 0x0(%rax,%rax,1)
c600(4): mov 0x10(%rbx),%r13
c604(4): mov 0x8(%rbx),%r12
c608(7): lea 0x159b7(%rip),%rsi
c60f(3): mov (%rbx),%rbx
c612(5): mov $0x5,%edx
c617(2): xor %edi,%edi
c619(5): call 0xffff5ef7(%rip)
c61e(4): add $0x28,%rsp
c622(3): mov %r13,%r9
c625(3): mov %r12,%r8
c628(3): mov %rbx,%rcx
c62b(3): mov %rbp,%rdi
c62e(3): mov %rax,%rdx
c631(1): pop %rbx
c632(1): pop %rbp
c633(2): pop %r12
c635(2): pop %r13
c637(2): pop %r14
c639(2): pop %r15
c63b(5): mov $0x1,%esi
c640(2): xor %eax,%eax
c642(5): jmp 0xffff632e(%rip)
c647(9): nop 0x0(%rax,%rax,1)
c650(7): lea 0x15aa1(%rip),%rsi
c657(5): mov $0x5,%edx
c65c(2): xor %edi,%edi
c65e(4): mov 0x18(%rbx),%r14
c662(4): mov 0x10(%rbx),%r13
c666(4): mov 0x8(%rbx),%r12
c66a(3): mov (%rbx),%rbx
c66d(5): call 0xffff5ea3(%rip)
c672(4): sub $0x8,%rsp
c676(2): push %r14
c678(3): mov %rax,%rdx
c67b(3): mov %r13,%r9
c67e(3): mov %r12,%r8
c681(3): mov %rbx,%rcx
c684(3): mov %rbp,%rdi
c687(5): mov $0x1,%esi
c68c(2): xor %eax,%eax
c68e(5): call 0xffff62e2(%rip)
c693(1): pop %rax
c694(1): pop %rdx
c695(4): add $0x28,%rsp
c699(1): pop %rbx
c69a(1): pop %rbp
c69b(2): pop %r12
c69d(2): pop %r13
c69f(2): pop %r14
c6a1(2): pop %r15
c6a3(1): ret near (%rsp)
c6a4(4): nop 0x0(%rax)
c6a8(4): mov 0x20(%rbx),%r15
c6ac(7): lea 0x15a65(%rip),%rsi
c6b3(5): mov $0x5,%edx
c6b8(2): xor %edi,%edi
c6ba(4): mov 0x18(%rbx),%r14
c6be(4): mov 0x10(%rbx),%r13
c6c2(4): mov 0x8(%rbx),%r12
c6c6(3): mov (%rbx),%rbx
c6c9(5): call 0xffff5e47(%rip)
c6ce(2): push %r15
c6d0(2): jmp 0xffffffa6(%rip)
c6d2(6): nop 0x0(%rax,%rax,1)
c6d8(4): mov 0x8(%rbx),%r8
c6dc(4): mov 0x28(%rbx),%r12
c6e0(7): lea 0x15a59(%rip),%rsi
c6e7(4): mov 0x20(%rbx),%r15
c6eb(4): mov 0x18(%rbx),%r14
c6ef(5): mov $0x5,%edx
c6f4(4): mov 0x10(%rbx),%r13
c6f8(2): xor %edi,%edi
c6fa(3): mov (%rbx),%rbx
c6fd(4): mov %r8,(%rsp)
c701(5): call 0xffff5e0f(%rip)
c706(4): sub $0x8,%rsp
c70a(3): mov %r13,%r9
c70d(2): push %r12
c70f(2): push %r15
c711(2): push %r14
c713(5): mov 0x20(%rsp),%r8
c718(3): mov %rbx,%rcx
c71b(3): mov %rax,%rdx
c71e(3): mov %rbp,%rdi
c721(5): mov $0x1,%esi
c726(2): xor %eax,%eax
c728(5): call 0xffff6248(%rip)
c72d(4): add $0x20,%rsp
c731(4): add $0x28,%rsp
c735(1): pop %rbx
c736(1): pop %rbp
c737(2): pop %r12
c739(2): pop %r13
c73b(2): pop %r14
c73d(2): pop %r15
c73f(1): ret near (%rsp)
c740(4): mov 0x10(%rbx),%r9
c744(4): mov 0x30(%rbx),%r13
c748(7): lea 0x15a19(%rip),%rsi
c74f(4): mov 0x28(%rbx),%r12
c753(4): mov 0x20(%rbx),%r15
c757(5): mov $0x5,%edx
c75c(4): mov 0x18(%rbx),%r14
c760(4): mov 0x8(%rbx),%r8
c764(2): xor %edi,%edi
c766(5): mov %r9,0x8(%rsp)
c76b(3): mov (%rbx),%rbx
c76e(4): mov %r8,(%rsp)
c772(5): call 0xffff5d9e(%rip)
c777(2): push %r13
c779(2): push %r12
c77b(2): push %r15
c77d(2): push %r14
c77f(5): mov 0x28(%rsp),%r9
c784(2): jmp 0xffffff8f(%rip)
c786(a): nop 0x0(%rax,%rax,1)
c790(4): mov 0x40(%rbx),%r10
c794(4): mov 0x38(%rbx),%r9
c798(5): mov $0x5,%edx
c79d(4): mov 0x10(%rbx),%rax
c7a1(4): mov 0x8(%rbx),%r8
c7a5(7): lea 0x15a54(%rip),%rsi
c7ac(4): mov 0x30(%rbx),%r13
c7b0(4): mov 0x28(%rbx),%r12
c7b4(4): mov 0x20(%rbx),%r15
c7b8(4): mov 0x18(%rbx),%r14
c7bc(5): mov %r10,0x18(%rsp)
c7c1(5): mov %r9,0x10(%rsp)
c7c6(4): mov %rax,(%rsp)
c7ca(5): mov %r8,0x8(%rsp)
c7cf(3): mov (%rbx),%rbx
c7d2(5): jmp 0xfffffd90(%rip)

"version_etc_ar" :
c7e0(3): xor %r9d,%r9d
c7e3(4): cmp $0x0,(%r8)
c7e7(2): jz 0x14(%rip)
c7e9(7): nop 0x0(%rax)
c7f0(4): add $0x1,%r9
c7f4(5): cmp $0x0,0x0(%r8,%r9,8)
c7f9(2): jnz 0xfffffff7(%rip)
c7fb(5): jmp 0xfffffbc5(%rip)

"version_etc_va" :
c800(4): sub $0x68,%rsp
c804(3): mov %r8,%r10
c807(3): xor %r9d,%r9d
c80a(9): mov $0x28,%rax
c813(5): mov %rax,0x58(%rsp)
c818(2): xor %eax,%eax
c81a(3): mov %rsp,%r8
c81d(3): nop (%rax)
c820(3): mov (%r10),%eax
c823(3): cmp $0x2f,%eax
c826(2): jnbe 0x44(%rip)
c828(3): mov %eax,%r11d
c82b(4): add 0x10(%r10),%r11
c82f(3): add $0x8,%eax
c832(3): mov %eax,(%r10)
c835(3): mov (%r11),%rax
c838(3): test %rax,%rax
c83b(4): mov %rax,0x0(%r8,%r9,8)
c83f(2): jz 0xc(%rip)
c841(4): add $0x1,%r9
c845(4): cmp $0xa,%r9
c849(2): jnz 0xffffffd7(%rip)
c84b(5): call 0xfffffb75(%rip)
c850(5): mov 0x58(%rsp),%rax
c855(9): xor $0x28,%rax
c85e(2): jnz 0x7(%rip)
c860(4): add $0x68,%rsp
c864(1): ret near (%rsp)
c865(5): call 0xffff5cfb(%rip)
c86a(4): mov 0x8(%r10),%r11
c86e(4): lea 0x8(%r11),%rax
c872(4): mov %rax,0x8(%r10)
c876(2): jmp 0xffffffbf(%rip)

"version_etc" :
c880(1): push %rbp
c881(1): push %rbx
c882(6): mov $0x20,%r10d
c888(3): xor %r11d,%r11d
c88b(7): sub $0xb8,%rsp
c892(9): mov $0x28,%rax
c89b(5): mov %rax,0x78(%rsp)
c8a0(2): xor %eax,%eax
c8a2(8): lea 0xd0(%rsp),%rax
c8aa(8): mov %r8,0xa0(%rsp)
c8b2(8): lea 0xd0(%rsp),%rbx
c8ba(5): lea 0x20(%rsp),%r8
c8bf(8): mov %r9,0xa8(%rsp)
c8c7(8): mov $0x20,0x8(%rsp)
c8cf(5): mov %rax,0x10(%rsp)
c8d4(8): lea 0x80(%rsp),%rax
c8dc(3): xor %r9d,%r9d
c8df(5): mov %rax,0x18(%rsp)
c8e4(3): mov %rax,%rbp
c8e7(9): nop 0x0(%rax,%rax,1)
c8f0(4): cmp $0x2f,%r10d
c8f4(2): jnbe 0x58(%rip)
c8f6(3): mov %r10d,%eax
c8f9(6): mov $0x1,%r11d
c8ff(4): add $0x8,%r10d
c903(3): add %rbp,%rax
c906(3): mov (%rax),%rax
c909(3): test %rax,%rax
c90c(4): mov %rax,0x0(%r8,%r9,8)
c910(2): jz 0xc(%rip)
c912(4): add $0x1,%r9
c916(4): cmp $0xa,%r9
c91a(2): jnz 0xffffffd6(%rip)
c91c(3): test %r11b,%r11b
c91f(2): jnz 0x26(%rip)
c921(5): call 0xfffffa9f(%rip)
c926(5): mov 0x78(%rsp),%rax
c92b(9): xor $0x28,%rax
c934(2): jnz 0xc(%rip)
c936(7): add $0xb8,%rsp
c93d(1): pop %rbx
c93e(1): pop %rbp
c93f(1): ret near (%rsp)
c940(5): call 0xffff5c20(%rip)
c945(5): mov %r10d,0x8(%rsp)
c94a(2): jmp 0xffffffd7(%rip)
c94c(3): mov %rbx,%rax
c94f(4): add $0x8,%rbx
c953(2): jmp 0xffffffb3(%rip)

"emit_bug_reporting_address" :
c960(1): push %rbx
c961(7): lea 0x1567a(%rip),%rsi
c968(5): mov $0x5,%edx
c96d(2): xor %edi,%edi
c96f(5): call 0xffff5ba1(%rip)
c974(7): lea 0x1567c(%rip),%rdx
c97b(3): mov %rax,%rsi
c97e(5): mov $0x1,%edi
c983(2): xor %eax,%eax
c985(5): call 0xffff5ecb(%rip)
c98a(7): lea 0x1567c(%rip),%rsi
c991(5): mov $0x5,%edx
c996(2): xor %edi,%edi
c998(5): call 0xffff5b78(%rip)
c99d(7): lea 0x14304(%rip),%rcx
c9a4(7): lea 0x1315c(%rip),%rdx
c9ab(3): mov %rax,%rsi
c9ae(5): mov $0x1,%edi
c9b3(2): xor %eax,%eax
c9b5(5): call 0xffff5e9b(%rip)
c9ba(7): mov 0x21b6e7(%rip),%rbx
c9c1(7): lea 0x15878(%rip),%rsi
c9c8(2): xor %edi,%edi
c9ca(5): mov $0x5,%edx
c9cf(5): call 0xffff5b41(%rip)
c9d4(3): mov %rbx,%rsi
c9d7(3): mov %rax,%rdi
c9da(1): pop %rbx
c9db(5): jmp 0xffff5cc5(%rip)

"xmalloc" :
c9e0(1): push %rbx
c9e1(3): mov %rdi,%rbx
c9e4(5): call 0xffff5d9c(%rip)
c9e9(3): test %rax,%rax
c9ec(2): jnz 0x7(%rip)
c9ee(3): test %rbx,%rbx
c9f1(2): jnz 0x4(%rip)
c9f3(1): pop %rbx
c9f4(1): ret near (%rsp)
c9f5(5): call 0x23b(%rip)

"xnmalloc" :
ca00(3): mov %rdi,%rax
ca03(3): mul %rax,%rsi,%rdx
ca06(3): mov %rax,%rdi
ca09(3): seto %al
ca0c(3): test %rdi,%rdi
ca0f(2): js 0xc(%rip)
ca11(3): movzx %al,%eax
ca14(3): test %rax,%rax
ca17(2): jnz 0x4(%rip)
ca19(2): jmp 0xffffffc7(%rip)
ca1b(4): sub $0x8,%rsp
ca1f(5): call 0x211(%rip)

"xrealloc" :
ca40(3): test %rsi,%rsi
ca43(1): push %rbx
ca44(3): mov %rsi,%rbx
ca47(2): jnz 0x7(%rip)
ca49(3): test %rdi,%rdi
ca4c(2): jnz 0x1c(%rip)
ca4e(3): mov %rbx,%rsi
ca51(5): call 0xffff5ddf(%rip)
ca56(3): test %rax,%rax
ca59(2): jnz 0x7(%rip)
ca5b(3): test %rbx,%rbx
ca5e(2): jnz 0x13(%rip)
ca60(1): pop %rbx
ca61(1): ret near (%rsp)
ca62(6): nop 0x0(%rax,%rax,1)
ca68(5): call 0xffff5fa8(%rip)
ca6d(2): xor %eax,%eax
ca6f(1): pop %rbx
ca70(1): ret near (%rsp)
ca71(5): call 0x1bf(%rip)

"xnrealloc" :
ca80(3): mov %rsi,%rax
ca83(3): mul %rax,%rdx,%rdx
ca86(3): mov %rax,%rsi
ca89(3): seto %al
ca8c(3): test %rsi,%rsi
ca8f(2): js 0xc(%rip)
ca91(3): movzx %al,%eax
ca94(3): test %rax,%rax
ca97(2): jnz 0x4(%rip)
ca99(2): jmp 0xffffffa7(%rip)
ca9b(4): sub $0x8,%rsp
ca9f(5): call 0x191(%rip)

"x2nrealloc" :
cab0(3): test %rdi,%rdi
cab3(3): mov %rdx,%r9
cab6(3): mov (%rsi),%rcx
cab9(2): jz 0x37(%rip)
cabb(2): xor %edx,%edx
cabd(a): mov $0x6148914691236517204,%rax
cac7(3): div %r9,%rax
caca(3): cmp %rcx,%rax
cacd(2): jbe 0x3e(%rip)
cacf(3): mov %rcx,%rax
cad2(3): shr $0x1,%rax
cad5(5): lea 0x1(%rax,%rcx,1),%rcx
cada(3): mov %rcx,(%rsi)
cadd(4): imul %r9,%rcx
cae1(3): mov %rcx,%rsi
cae4(5): jmp 0xffffff5c(%rip)
cae9(7): nop 0x0(%rax)
caf0(3): test %rcx,%rcx
caf3(2): jz 0x25(%rip)
caf5(3): mov %rcx,%rax
caf8(3): mul %rax,%r9,%rdx
cafb(3): seto %dl
cafe(3): test %rax,%rax
cb01(3): movzx %dl,%edx
cb04(2): js 0x7(%rip)
cb06(3): test %rdx,%rdx
cb09(2): jz 0xffffffd1(%rip)
cb0b(4): sub $0x8,%rsp
cb0f(5): call 0x121(%rip)
cb14(4): nop 0x0(%rax)
cb18(2): xor %edx,%edx
cb1a(5): mov $0x80,%eax
cb1f(3): xor %r8d,%r8d
cb22(3): div %r9,%rax
cb25(3): test %rax,%rax
cb28(4): setz %r8b
cb2c(4): lea 0x0(%r8,%rax,1),%rcx
cb30(2): jmp 0xffffffc5(%rip)

"x2realloc" :
cb40(3): test %rdi,%rdi
cb43(3): mov (%rsi),%rax
cb46(2): jz 0x2a(%rip)
cb48(a): mov $0x6148914691236517203,%rdx
cb52(3): cmp %rdx,%rax
cb55(2): jnbe 0x2c(%rip)
cb57(3): mov %rax,%rdx
cb5a(3): shr $0x1,%rdx
cb5d(5): lea 0x1(%rdx,%rax,1),%rax
cb62(3): mov %rax,(%rsi)
cb65(3): mov %rax,%rsi
cb68(5): jmp 0xfffffed8(%rip)
cb6d(3): nop (%rax)
cb70(3): test %rax,%rax
cb73(5): mov $0x80,%edx
cb78(4): cmove %rdx,%rax
cb7c(3): test %rax,%rax
cb7f(2): jns 0xffffffe3(%rip)
cb81(4): sub $0x8,%rsp
cb85(5): call 0xab(%rip)

"xzalloc" :
cb90(1): push %rbx
cb91(3): mov %rdi,%rbx
cb94(5): call 0xfffffe4c(%rip)
cb99(3): mov %rbx,%rdx
cb9c(2): xor %esi,%esi
cb9e(3): mov %rax,%rdi
cba1(1): pop %rbx
cba2(5): jmp 0xffff5a7e(%rip)

"xcalloc" :
cbb0(3): mov %rdi,%rax
cbb3(4): sub $0x8,%rsp
cbb7(3): mul %rax,%rsi,%rdx
cbba(3): seto %dl
cbbd(3): test %rax,%rax
cbc0(2): js 0x19(%rip)
cbc2(3): movzx %dl,%edx
cbc5(3): test %rdx,%rdx
cbc8(2): jnz 0x11(%rip)
cbca(5): call 0xffff5ae6(%rip)
cbcf(3): test %rax,%rax
cbd2(2): jz 0x7(%rip)
cbd4(4): add $0x8,%rsp
cbd8(1): ret near (%rsp)
cbd9(5): call 0x57(%rip)

"xmemdup" :
cbe0(1): push %rbp
cbe1(1): push %rbx
cbe2(3): mov %rdi,%rbp
cbe5(3): mov %rsi,%rdi
cbe8(3): mov %rsi,%rbx
cbeb(4): sub $0x8,%rsp
cbef(5): call 0xfffffdf1(%rip)
cbf4(4): add $0x8,%rsp
cbf8(3): mov %rbx,%rdx
cbfb(3): mov %rbp,%rsi
cbfe(1): pop %rbx
cbff(1): pop %rbp
cc00(3): mov %rax,%rdi
cc03(5): jmp 0xffff5b0d(%rip)

"xstrdup" :
cc10(1): push %rbx
cc11(3): mov %rdi,%rbx
cc14(5): call 0xffff591c(%rip)
cc19(3): mov %rbx,%rdi
cc1c(4): lea 0x1(%rax),%rsi
cc20(1): pop %rbx
cc21(2): jmp 0xffffffbf(%rip)

"xalloc_die" :
cc30(7): lea 0x156b8(%rip),%rsi
cc37(4): sub $0x8,%rsp
cc3b(5): mov $0x5,%edx
cc40(2): xor %edi,%edi
cc42(5): call 0xffff58ce(%rip)
cc47(6): mov 0x21b3db(%rip),%edi
cc4d(7): lea 0x1483c(%rip),%rdx
cc54(3): mov %rax,%rcx
cc57(2): xor %esi,%esi
cc59(2): xor %eax,%eax
cc5b(5): call 0xffff5c45(%rip)
cc60(5): call 0xffff57a0(%rip)

"xfts_open" :
cc70(4): sub $0x8,%rsp
cc74(6): or $0x200,%esi
cc7a(5): call 0x2726(%rip)
cc7f(3): test %rax,%rax
cc82(2): jz 0xe(%rip)
cc84(4): add $0x8,%rsp
cc88(1): ret near (%rsp)
cc89(7): nop 0x0(%rax)
cc90(5): call 0xffff5780(%rip)
cc95(3): cmp $0x16,(%rax)
cc98(2): jz 0x8(%rip)
cc9a(5): call 0xffffff96(%rip)
cc9f(1): nop 
cca0(7): lea 0x15689(%rip),%rcx
cca7(7): lea 0x15652(%rip),%rsi
ccae(7): lea 0x15668(%rip),%rdi
ccb5(5): mov $0x29,%edx
ccba(5): call 0xffff5946(%rip)

"cycle_warning_required" :
ccc0(3): mov 0x48(%rdi),%edx
ccc3(5): mov $0x1,%eax
ccc8(3): and $0x11,%edx
cccb(3): cmp $0x10,%edx
ccce(2): jz 0x9(%rip)
ccd0(2): xor %eax,%eax
ccd2(3): cmp $0x11,%edx
ccd5(2): jz 0xb(%rip)
ccd7(2): REP ret near (%rsp)
ccd9(7): nop 0x0(%rax)
cce0(5): cmp $0x0,0x58(%rsi)
cce5(3): setnz %al
cce8(1): ret near (%rsp)

"xstrtoimax" :
ccf0(2): push %r15
ccf2(2): push %r14
ccf4(2): push %r13
ccf6(2): push %r12
ccf8(1): push %rbp
ccf9(1): push %rbx
ccfa(4): sub $0x28,%rsp
ccfe(9): mov $0x28,%rax
cd07(5): mov %rax,0x18(%rsp)
cd0c(2): xor %eax,%eax
cd0e(3): cmp $0x24,%edx
cd11(6): jnbe 0x66e(%rip)
cd17(5): lea 0x10(%rsp),%rax
cd1c(3): test %rsi,%rsi
cd1f(3): mov %rsi,%rbx
cd22(3): mov %rdi,%r12
cd25(2): mov %edx,%ebp
cd27(3): mov %rcx,%r14
cd2a(4): cmove %rax,%rbx
cd2e(3): mov %r8,%r15
cd31(5): call 0xffff56df(%rip)
cd36(2): xor %ecx,%ecx
cd38(2): mov %ebp,%edx
cd3a(6): mov $0x0,(%rax)
cd40(3): mov %rbx,%rsi
cd43(3): mov %r12,%rdi
cd46(3): mov %rax,%r13
cd49(5): call 0xffff5787(%rip)
cd4e(3): mov (%rbx),%rcx
cd51(3): mov %rax,%rbp
cd54(3): cmp %r12,%rcx
cd57(2): jz 0x61(%rip)
cd59(4): mov 0x0(%r13),%eax
cd5d(2): test %eax,%eax
cd5f(2): jnz 0x41(%rip)
cd61(3): xor %r12d,%r12d
cd64(3): test %r15,%r15
cd67(2): jz 0xf(%rip)
cd69(4): movzx (%rcx),%r13d
cd6d(3): test %r13b,%r13b
cd70(6): jnz 0x83(%rip)
cd76(3): mov %rbp,(%r14)
cd79(5): mov 0x18(%rsp),%rdi
cd7e(9): xor $0x28,%rdi
cd87(3): mov %r12d,%eax
cd8a(6): jnz 0x614(%rip)
cd90(4): add $0x28,%rsp
cd94(1): pop %rbx
cd95(1): pop %rbp
cd96(2): pop %r12
cd98(2): pop %r13
cd9a(2): pop %r14
cd9c(2): pop %r15
cd9e(1): ret near (%rsp)
cd9f(1): nop 
cda0(3): cmp $0x22,%eax
cda3(6): mov $0x4,%r12d
cda9(2): jnz 0xffffffd0(%rip)
cdab(6): mov $0x1,%r12d
cdb1(2): jmp 0xffffffb3(%rip)
cdb3(5): nop 0x0(%rax,%rax,1)
cdb8(3): test %r15,%r15
cdbb(6): jz 0x495(%rip)
cdc1(4): movzx (%rcx),%r13d
cdc5(5): mov %rcx,0x8(%rsp)
cdca(6): mov $0x4,%r12d
cdd0(3): test %r13b,%r13b
cdd3(2): jz 0xffffffa6(%rip)
cdd5(4): movsx %r13b,%esi
cdd9(3): mov %r15,%rdi
cddc(5): call 0xffff57c4(%rip)
cde1(3): test %rax,%rax
cde4(5): mov 0x8(%rsp),%rcx
cde9(2): jz 0xffffff90(%rip)
cdeb(5): mov $0x1,%ebp
cdf0(3): xor %r12d,%r12d
cdf3(4): movsx %r13b,%esi
cdf7(3): mov %r15,%rdi
cdfa(5): mov %rcx,0x8(%rsp)
cdff(5): call 0xffff57a1(%rip)
ce04(3): test %rax,%rax
ce07(5): mov 0x8(%rsp),%rcx
ce0c(2): jz 0x5c(%rip)
ce0e(4): lea 0xffffffbb(%r13),%eax
ce12(2): cmp $0x2f,%al
ce14(2): jnbe 0x64(%rip)
ce16(a): mov $0x142129060940101,%rdx
ce20(4): bt %rax,%rdx
ce24(2): jnb 0x54(%rip)
ce26(5): mov $0x30,%esi
ce2b(3): mov %r15,%rdi
ce2e(5): mov %rcx,0x8(%rsp)
ce33(5): call 0xffff576d(%rip)
ce38(3): test %rax,%rax
ce3b(5): mov 0x8(%rsp),%rcx
ce40(2): jz 0x38(%rip)
ce42(4): movzx 0x1(%rcx),%eax
ce46(2): cmp $0x44,%al
ce48(2): jz 0xe(%rip)
ce4a(2): cmp $0x69,%al
ce4c(6): jz 0x4ec(%rip)
ce52(2): cmp $0x42,%al
ce54(2): jnz 0x24(%rip)
ce56(5): mov $0x2,%edi
ce5b(5): mov $0x3e8,%eax
ce60(2): jmp 0x22(%rip)
ce62(6): nop 0x0(%rax,%rax,1)
ce68(3): mov %rbp,(%r14)
ce6b(4): or $0x2,%r12d
ce6f(5): jmp 0xffffff0a(%rip)
ce74(4): nop 0x0(%rax)
ce78(5): mov $0x1,%edi
ce7d(5): mov $0x400,%eax
ce82(4): sub $0x42,%r13d
ce86(4): cmp $0x35,%r13b
ce8a(2): jnbe 0xffffffde(%rip)
ce8c(7): lea 0x154f5(%rip),%rsi
ce93(4): movzx %r13b,%r13d
ce97(4): movsxd 0x0(%rsi,%r13,4),%rdx
ce9b(3): add %rsi,%rdx
ce9e(2): jmp %rdx
cea0(a): mov $0x-9223372036854775808,%r8
ceaa(3): movsxd %eax,%rsi
cead(3): mov %r8,%rax
ceb0(2): cdq %rax
ceb2(3): idiv %rsi,%rax
ceb5(3): cmp %rax,%rbp
ceb8(3): mov %rax,%r9
cebb(6): jl 0x4aa(%rip)
cec1(a): mov $0x9223372036854775807,%r10
cecb(3): mov %r10,%rax
cece(2): cdq %rax
ced0(3): idiv %rsi,%rax
ced3(3): cmp %rax,%rbp
ced6(6): jnle 0x49c(%rip)
cedc(4): imul %rsi,%rbp
cee0(3): cmp %rbp,%r9
cee3(6): jnle 0x482(%rip)
cee9(3): cmp %rbp,%rax
ceec(6): jl 0x486(%rip)
cef2(4): imul %rsi,%rbp
cef6(2): xor %eax,%eax
cef8(3): or %eax,%r12d
cefb(5): nop 0x0(%rax,%rax,1)
cf00(3): movsxd %edi,%rax
cf03(3): add %rax,%rcx
cf06(3): mov %r12d,%eax
cf09(3): or $0x2,%eax
cf0c(3): mov %rcx,(%rbx)
cf0f(3): cmp $0x0,(%rcx)
cf12(4): cmovne %eax,%r12d
cf16(5): jmp 0xfffffe60(%rip)
cf1b(5): nop 0x0(%rax,%rax,1)
cf20(a): mov $0x-4611686018427387904,%rax
cf2a(3): cmp %rax,%rbp
cf2d(6): jl 0x333(%rip)
cf33(a): mov $0x4611686018427387903,%rax
cf3d(3): cmp %rax,%rbp
cf40(6): jnle 0x3e0(%rip)
cf46(3): add %rbp,%rbp
cf49(2): jmp 0xffffffb7(%rip)
cf4b(5): nop 0x0(%rax,%rax,1)
cf50(a): mov $0x-18014398509481984,%rax
cf5a(3): cmp %rax,%rbp
cf5d(6): jl 0x303(%rip)
cf63(a): mov $0x18014398509481983,%rax
cf6d(3): cmp %rax,%rbp
cf70(6): jnle 0x3b0(%rip)
cf76(4): shl/sal $0x9,%rbp
cf7a(2): jmp 0xffffff86(%rip)
cf7c(4): nop 0x0(%rax)
cf80(3): movsxd %eax,%rsi
cf83(a): mov $0x-9223372036854775808,%rax
cf8d(6): mov $0x7,%r8d
cf93(2): cdq %rax
cf95(3): xor %r11d,%r11d
cf98(a): mov $0x9223372036854775807,%r9
cfa2(3): idiv %rsi,%rax
cfa5(3): mov %rax,%r10
cfa8(2): jmp 0x27(%rip)
cfaa(6): nop 0x0(%rax,%rax,1)
cfb0(3): mov %r9,%rax
cfb3(2): cdq %rax
cfb5(3): idiv %rsi,%rax
cfb8(3): cmp %rbp,%rax
cfbb(6): jl 0x2ed(%rip)
cfc1(4): imul %rsi,%rbp
cfc5(4): sub $0x1,%r8d
cfc9(6): jz 0x127(%rip)
cfcf(3): cmp %rbp,%r10
cfd2(2): jle 0xffffffde(%rip)
cfd4(6): mov $0x1,%r11d
cfda(a): mov $0x-9223372036854775808,%rbp
cfe4(2): jmp 0xffffffe1(%rip)
cfe6(a): nop 0x0(%rax,%rax,1)
cff0(3): movsxd %eax,%rsi
cff3(a): mov $0x-9223372036854775808,%rax
cffd(6): mov $0x8,%r8d
d003(2): cdq %rax
d005(3): xor %r11d,%r11d
d008(a): mov $0x9223372036854775807,%r9
d012(3): idiv %rsi,%rax
d015(3): mov %rax,%r10
d018(2): jmp 0x27(%rip)
d01a(6): nop 0x0(%rax,%rax,1)
d020(3): mov %r9,%rax
d023(2): cdq %rax
d025(3): idiv %rsi,%rax
d028(3): cmp %rbp,%rax
d02b(6): jl 0x24d(%rip)
d031(4): imul %rsi,%rbp
d035(4): sub $0x1,%r8d
d039(6): jz 0xb7(%rip)
d03f(3): cmp %rbp,%r10
d042(2): jle 0xffffffde(%rip)
d044(6): mov $0x1,%r11d
d04a(a): mov $0x-9223372036854775808,%rbp
d054(2): jmp 0xffffffe1(%rip)
d056(a): nop 0x0(%rax,%rax,1)
d060(a): mov $0x-9223372036854775808,%r8
d06a(3): movsxd %eax,%rsi
d06d(3): mov %r8,%rax
d070(2): cdq %rax
d072(3): idiv %rsi,%rax
d075(3): cmp %rax,%rbp
d078(6): jl 0x1e8(%rip)
d07e(4): sub $0x1,%r8
d082(3): mov %r8,%rax
d085(2): cdq %rax
d087(3): idiv %rsi,%rax
d08a(3): cmp %rax,%rbp
d08d(6): jnle 0x293(%rip)
d093(4): imul %rsi,%rbp
d097(5): jmp 0xfffffe69(%rip)
d09c(4): nop 0x0(%rax)
d0a0(3): movsxd %eax,%rsi
d0a3(a): mov $0x-9223372036854775808,%rax
d0ad(6): mov $0x3,%r8d
d0b3(2): cdq %rax
d0b5(3): xor %r11d,%r11d
d0b8(a): mov $0x9223372036854775807,%r9
d0c2(3): idiv %rsi,%rax
d0c5(3): mov %rax,%r10
d0c8(3): cmp %rbp,%r10
d0cb(6): jnle 0x1f5(%rip)
d0d1(3): mov %r9,%rax
d0d4(2): cdq %rax
d0d6(3): idiv %rsi,%rax
d0d9(3): cmp %rbp,%rax
d0dc(6): jl 0x274(%rip)
d0e2(4): imul %rsi,%rbp
d0e6(4): sub $0x1,%r8d
d0ea(2): jnz 0xffffffde(%rip)
d0ec(4): nop 0x0(%rax)
d0f0(3): or %r11d,%r12d
d0f3(5): jmp 0xfffffe0d(%rip)
d0f8(8): nop 0x0(%rax,%rax,1)
d100(3): movsxd %eax,%rsi
d103(a): mov $0x-9223372036854775808,%rax
d10d(6): mov $0x6,%r8d
d113(2): cdq %rax
d115(3): xor %r11d,%r11d
d118(a): mov $0x9223372036854775807,%r9
d122(3): idiv %rsi,%rax
d125(3): mov %rax,%r10
d128(2): jmp 0x23(%rip)
d12a(6): nop 0x0(%rax,%rax,1)
d130(3): mov %r9,%rax
d133(2): cdq %rax
d135(3): idiv %rsi,%rax
d138(3): cmp %rbp,%rax
d13b(6): jl 0x19d(%rip)
d141(4): imul %rsi,%rbp
d145(4): sub $0x1,%r8d
d149(2): jz 0xffffffa7(%rip)
d14b(3): cmp %rbp,%r10
d14e(2): jle 0xffffffe2(%rip)
d150(6): mov $0x1,%r11d
d156(a): mov $0x-9223372036854775808,%rbp
d160(2): jmp 0xffffffe5(%rip)
d162(6): nop 0x0(%rax,%rax,1)
d168(3): movsxd %eax,%rsi
d16b(a): mov $0x-9223372036854775808,%rax
d175(6): mov $0x5,%r8d
d17b(2): cdq %rax
d17d(3): xor %r11d,%r11d
d180(a): mov $0x9223372036854775807,%r9
d18a(3): idiv %rsi,%rax
d18d(3): mov %rax,%r10
d190(2): jmp 0x27(%rip)
d192(6): nop 0x0(%rax,%rax,1)
d198(3): mov %r9,%rax
d19b(2): cdq %rax
d19d(3): idiv %rsi,%rax
d1a0(3): cmp %rbp,%rax
d1a3(6): jl 0x14d(%rip)
d1a9(4): imul %rsi,%rbp
d1ad(4): sub $0x1,%r8d
d1b1(6): jz 0xffffff3f(%rip)
d1b7(3): cmp %rbp,%r10
d1ba(2): jle 0xffffffde(%rip)
d1bc(6): mov $0x1,%r11d
d1c2(a): mov $0x-9223372036854775808,%rbp
d1cc(2): jmp 0xffffffe1(%rip)
d1ce(2): nop 
d1d0(a): mov $0x-9007199254740992,%rax
d1da(3): cmp %rax,%rbp
d1dd(6): jl 0x83(%rip)
d1e3(a): mov $0x9007199254740991,%rax
d1ed(3): cmp %rax,%rbp
d1f0(6): jnle 0x130(%rip)
d1f6(4): shl/sal $0xa,%rbp
d1fa(5): jmp 0xfffffd06(%rip)
d1ff(1): nop 
d200(3): movsxd %eax,%rsi
d203(a): mov $0x-9223372036854775808,%rax
d20d(6): mov $0x4,%r8d
d213(2): cdq %rax
d215(3): xor %r11d,%r11d
d218(a): mov $0x9223372036854775807,%r9
d222(3): idiv %rsi,%rax
d225(3): mov %rax,%r10
d228(3): cmp %rbp,%r10
d22b(2): jnle 0x65(%rip)
d22d(3): mov %r9,%rax
d230(2): cdq %rax
d232(3): idiv %rsi,%rax
d235(3): cmp %rbp,%rax
d238(6): jl 0xd0(%rip)
d23e(4): imul %rsi,%rbp
d242(4): sub $0x1,%r8d
d246(2): jnz 0xffffffe2(%rip)
d248(5): jmp 0xfffffea8(%rip)
d24d(3): nop (%rax)
d250(6): mov $0x4,%r12d
d256(5): jmp 0xfffffb23(%rip)
d25b(5): nop 0x0(%rax,%rax,1)
d260(6): mov $0x1,%r12d
d266(a): mov $0x-9223372036854775808,%rbp
d270(5): jmp 0xfffffc90(%rip)
d275(3): nop (%rax)
d278(6): mov $0x1,%r11d
d27e(a): mov $0x9223372036854775807,%rbp
d288(5): jmp 0xfffffdad(%rip)
d28d(3): nop (%rax)
d290(6): mov $0x1,%r11d
d296(a): mov $0x-9223372036854775808,%rbp
d2a0(2): jmp 0xffffffa2(%rip)
d2a2(6): nop 0x0(%rax,%rax,1)
d2a8(6): mov $0x1,%r11d
d2ae(a): mov $0x9223372036854775807,%rbp
d2b8(5): jmp 0xfffffd0d(%rip)
d2bd(3): nop (%rax)
d2c0(6): mov $0x1,%r11d
d2c6(a): mov $0x-9223372036854775808,%rbp
d2d0(5): jmp 0xfffffe16(%rip)
d2d5(3): nop (%rax)
d2d8(6): mov $0x1,%r11d
d2de(a): mov $0x9223372036854775807,%rbp
d2e8(5): jmp 0xfffffe5d(%rip)
d2ed(3): nop (%rax)
d2f0(6): mov $0x1,%r11d
d2f6(a): mov $0x9223372036854775807,%rbp
d300(5): jmp 0xfffffead(%rip)
d305(3): nop (%rax)
d308(6): mov $0x1,%r11d
d30e(a): mov $0x9223372036854775807,%rbp
d318(5): jmp 0xffffff2a(%rip)
d31d(3): nop (%rax)
d320(6): mov $0x1,%r12d
d326(a): mov $0x9223372036854775807,%rbp
d330(5): jmp 0xfffffbd0(%rip)
d335(3): nop (%rax)
d338(2): xor %edi,%edi
d33a(4): cmp $0x42,0x2(%rcx)
d33e(5): mov $0x400,%eax
d343(4): setz %dil
d347(4): lea 0x1(%rdi,%rdi,1),%edi
d34b(5): jmp 0xfffffb37(%rip)
d350(6): mov $0x1,%r11d
d356(a): mov $0x9223372036854775807,%rbp
d360(5): jmp 0xfffffd86(%rip)
d365(5): mov $0x1,%eax
d36a(3): mov %r8,%rbp
d36d(5): jmp 0xfffffb8b(%rip)
d372(5): mov $0x1,%eax
d377(3): mov %r10,%rbp
d37a(5): jmp 0xfffffb7e(%rip)
d37f(7): lea 0x150da(%rip),%rcx
d386(7): lea 0x14fb3(%rip),%rsi
d38d(7): lea 0x14fcc(%rip),%rdi
d394(5): mov $0x54,%edx
d399(5): call 0xffff5267(%rip)
d39e(5): call 0xffff51c2(%rip)

"xstrtoul" :
d3b0(2): push %r15
d3b2(2): push %r14
d3b4(2): push %r13
d3b6(2): push %r12
d3b8(1): push %rbp
d3b9(1): push %rbx
d3ba(4): sub $0x28,%rsp
d3be(9): mov $0x28,%rax
d3c7(5): mov %rax,0x18(%rsp)
d3cc(2): xor %eax,%eax
d3ce(3): cmp $0x24,%edx
d3d1(6): jnbe 0x364(%rip)
d3d7(5): lea 0x10(%rsp),%rax
d3dc(3): mov %rsi,%r15
d3df(3): test %rsi,%rsi
d3e2(3): mov %rdi,%rbp
d3e5(4): mov %edx,0x8(%rsp)
d3e9(3): mov %rcx,%r14
d3ec(3): mov %r8,%r13
d3ef(4): cmove %rax,%r15
d3f3(5): call 0xffff501d(%rip)
d3f8(6): mov $0x0,(%rax)
d3fe(3): mov %rax,%r12
d401(4): movzx 0x0(%rbp),%ebx
d405(5): call 0xffff55eb(%rip)
d40a(4): mov 0x8(%rsp),%edx
d40e(3): mov (%rax),%rsi
d411(3): mov %rbp,%rax
d414(2): jmp 0x13(%rip)
d416(a): nop 0x0(%rax,%rax,1)
d420(4): add $0x1,%rax
d424(3): movzx (%rax),%ebx
d427(3): movzx %bl,%ecx
d42a(5): test $0x20,0x1(%rsi,%rcx,2)
d42f(2): jnz 0xfffffff1(%rip)
d431(3): cmp $0x2d,%bl
d434(2): jz 0x54(%rip)
d436(3): mov %r15,%rsi
d439(3): mov %rbp,%rdi
d43c(5): call 0xffff54e4(%rip)
d441(3): mov (%r15),%rcx
d444(3): mov %rax,%rbx
d447(3): cmp %rbp,%rcx
d44a(2): jz 0x2e(%rip)
d44c(4): mov (%r12),%eax
d450(2): test %eax,%eax
d452(2): jz 0x66(%rip)
d454(3): cmp $0x22,%eax
d457(5): mov $0x1,%ebp
d45c(2): jnz 0x2c(%rip)
d45e(3): test %r13,%r13
d461(2): jz 0xb(%rip)
d463(4): movzx (%rcx),%r12d
d467(3): test %r12b,%r12b
d46a(2): jnz 0x7d(%rip)
d46c(3): mov %rbx,(%r14)
d46f(2): jmp 0x1e(%rip)
d471(7): nop 0x0(%rax)
d478(3): test %r13,%r13
d47b(5): mov %rcx,0x8(%rsp)
d480(2): jnz 0x40(%rip)
d482(6): nop 0x0(%rax,%rax,1)
d488(5): mov $0x4,%ebp
d48d(5): mov 0x18(%rsp),%rdi
d492(9): xor $0x28,%rdi
d49b(2): mov %ebp,%eax
d49d(6): jnz 0x293(%rip)
d4a3(4): add $0x28,%rsp
d4a7(1): pop %rbx
d4a8(1): pop %rbp
d4a9(2): pop %r12
d4ab(2): pop %r13
d4ad(2): pop %r14
d4af(2): pop %r15
d4b1(1): ret near (%rsp)
d4b2(6): nop 0x0(%rax,%rax,1)
d4b8(2): xor %ebp,%ebp
d4ba(2): jmp 0xffffffa4(%rip)
d4bc(4): nop 0x0(%rax)
d4c0(5): movzx 0x0(%rbp),%r12d
d4c5(3): test %r12b,%r12b
d4c8(2): jz 0xffffffc0(%rip)
d4ca(4): movsx %r12b,%esi
d4ce(3): mov %r13,%rdi
d4d1(2): xor %ebp,%ebp
d4d3(5): call 0xffff50cd(%rip)
d4d8(3): test %rax,%rax
d4db(5): mov $0x1,%ebx
d4e0(5): mov 0x8(%rsp),%rcx
d4e5(2): jz 0xffffffa3(%rip)
d4e7(4): movsx %r12b,%esi
d4eb(3): mov %r13,%rdi
d4ee(5): mov %rcx,0x8(%rsp)
d4f3(5): call 0xffff50ad(%rip)
d4f8(3): test %rax,%rax
d4fb(5): mov 0x8(%rsp),%rcx
d500(6): jz 0xcc(%rip)
d506(5): lea 0xffffffbb(%r12),%eax
d50b(2): cmp $0x2f,%al
d50d(2): jnbe 0x53(%rip)
d50f(a): mov $0x142129060940101,%rdx
d519(4): bt %rax,%rdx
d51d(2): jnb 0x43(%rip)
d51f(5): mov $0x30,%esi
d524(3): mov %r13,%rdi
d527(5): mov %rcx,0x8(%rsp)
d52c(5): call 0xffff5074(%rip)
d531(3): test %rax,%rax
d534(5): mov 0x8(%rsp),%rcx
d539(2): jz 0x27(%rip)
d53b(4): movzx 0x1(%rcx),%eax
d53f(2): cmp $0x44,%al
d541(2): jz 0xe(%rip)
d543(2): cmp $0x69,%al
d545(6): jz 0x1d3(%rip)
d54b(2): cmp $0x42,%al
d54d(2): jnz 0x13(%rip)
d54f(5): mov $0x2,%edi
d554(5): mov $0x3e8,%esi
d559(2): jmp 0x11(%rip)
d55b(5): nop 0x0(%rax,%rax,1)
d560(5): mov $0x1,%edi
d565(5): mov $0x400,%esi
d56a(4): sub $0x42,%r12d
d56e(4): cmp $0x35,%r12b
d572(2): jnbe 0x5a(%rip)
d574(7): lea 0x14ef5(%rip),%rdx
d57b(4): movzx %r12b,%r12d
d57f(4): movsxd 0x0(%rdx,%r12,4),%rax
d583(3): add %rdx,%rax
d586(2): jmp %rax
d588(3): mov %rbx,%rax
d58b(3): mul %rax,%rsi,%rdx
d58e(6): jo 0x1f3(%rip)
d594(3): xor %r8d,%r8d
d597(3): mul %rax,%rsi,%rdx
d59a(6): jo 0x1d8(%rip)
d5a0(3): mov %rax,%rbx
d5a3(3): or %r8d,%ebp
d5a6(a): nop 0x0(%rax,%rax,1)
d5b0(3): movsxd %edi,%rdi
d5b3(2): mov %ebp,%eax
d5b5(3): add %rdi,%rcx
d5b8(3): or $0x2,%eax
d5bb(3): mov %rcx,(%r15)
d5be(3): cmp $0x0,(%rcx)
d5c1(3): mov %rbx,(%r14)
d5c4(3): cmovne %eax,%ebp
d5c7(5): jmp 0xfffffec6(%rip)
d5cc(3): mov %rbx,(%r14)
d5cf(3): or $0x2,%ebp
d5d2(5): jmp 0xfffffebb(%rip)
d5d7(5): mov $0x2,%edx
d5dc(3): mov %rdx,%rax
d5df(3): mul %rax,%rbx,%rdx
d5e2(6): jo 0x9c(%rip)
d5e8(3): add %rbx,%rbx
d5eb(2): jmp 0xffffffc5(%rip)
d5ed(5): mov $0x200,%edx
d5f2(3): mov %rdx,%rax
d5f5(3): mul %rax,%rbx,%rdx
d5f8(6): jo 0x86(%rip)
d5fe(4): shl/sal $0x9,%rbx
d602(2): jmp 0xffffffae(%rip)
d604(6): mov $0x7,%r8d
d60a(3): xor %r9d,%r9d
d60d(3): nop (%rax)
d610(3): mov %rbx,%rax
d613(3): mul %rax,%rsi,%rdx
d616(3): mov %rax,%rbx
d619(6): jo 0x195(%rip)
d61f(4): sub $0x1,%r8d
d623(2): jnz 0xffffffed(%rip)
d625(3): or %r9d,%ebp
d628(2): jmp 0xffffff88(%rip)
d62a(6): mov $0x8,%r8d
d630(3): xor %r9d,%r9d
d633(5): nop 0x0(%rax,%rax,1)
d638(3): mov %rbx,%rax
d63b(3): mul %rax,%rsi,%rdx
d63e(3): mov %rax,%rbx
d641(6): jo 0x14f(%rip)
d647(4): sub $0x1,%r8d
d64b(2): jnz 0xffffffed(%rip)
d64d(2): jmp 0xffffffd8(%rip)
d64f(6): mov $0x4,%r8d
d655(3): xor %r9d,%r9d
d658(3): mov %rbx,%rax
d65b(3): mul %rax,%rsi,%rdx
d65e(3): mov %rax,%rbx
d661(6): jo 0x102(%rip)
d667(4): sub $0x1,%r8d
d66b(2): jnz 0xffffffed(%rip)
d66d(2): jmp 0xffffffb8(%rip)
d66f(3): mov %rbx,%rax
d672(3): mul %rax,%rsi,%rdx
d675(3): mov %rax,%rbx
d678(6): jno 0xffffff38(%rip)
d67e(5): mov $0x1,%ebp
d683(4): or $0xffffffff,%rbx
d687(5): jmp 0xffffff29(%rip)
d68c(4): nop 0x0(%rax)
d690(6): mov $0x5,%r8d
d696(3): xor %r9d,%r9d
d699(3): mov %rbx,%rax
d69c(3): mul %rax,%rsi,%rdx
d69f(3): mov %rax,%rbx
d6a2(6): jo 0xfd(%rip)
d6a8(4): sub $0x1,%r8d
d6ac(2): jnz 0xffffffed(%rip)
d6ae(5): jmp 0xffffff77(%rip)
d6b3(6): mov $0x6,%r8d
d6b9(3): xor %r9d,%r9d
d6bc(3): mov %rbx,%rax
d6bf(3): mul %rax,%rsi,%rdx
d6c2(3): mov %rax,%rbx
d6c5(6): jo 0x8f(%rip)
d6cb(4): sub $0x1,%r8d
d6cf(2): jnz 0xffffffed(%rip)
d6d1(5): jmp 0xffffff54(%rip)
d6d6(5): mov $0x400,%edx
d6db(3): mov %rdx,%rax
d6de(3): mul %rax,%rbx,%rdx
d6e1(2): jo 0xffffff9d(%rip)
d6e3(4): shl/sal $0xa,%rbx
d6e7(5): jmp 0xfffffec9(%rip)
d6ec(3): mov %rbx,%rax
d6ef(3): mul %rax,%rsi,%rdx
d6f2(6): jo 0xcb(%rip)
d6f8(3): xor %r8d,%r8d
d6fb(3): mul %rax,%rsi,%rdx
d6fe(6): jno 0xfffffe99(%rip)
d704(6): mov $0x1,%r8d
d70a(4): or $0xffffffff,%rax
d70e(5): jmp 0xfffffe89(%rip)
d713(5): nop 0x0(%rax,%rax,1)
d718(2): xor %edi,%edi
d71a(4): cmp $0x42,0x2(%rcx)
d71e(5): mov $0x400,%esi
d723(4): setz %dil
d727(4): lea 0x1(%rdi,%rdi,1),%edi
d72b(5): jmp 0xfffffe3f(%rip)
d730(5): call 0xffff4e30(%rip)
d735(7): lea 0x14e0c(%rip),%rcx
d73c(7): lea 0x14bfd(%rip),%rsi
d743(7): lea 0x14c16(%rip),%rdi
d74a(5): mov $0x54,%edx
d74f(5): call 0xffff4eb1(%rip)
d754(6): mov $0x1,%r9d
d75a(4): or $0xffffffff,%rbx
d75e(5): jmp 0xffffff6d(%rip)
d763(6): mov $0x1,%r9d
d769(4): or $0xffffffff,%rbx
d76d(5): jmp 0xfffffefa(%rip)
d772(6): mov $0x1,%r8d
d778(4): or $0xffffffff,%rbx
d77c(5): jmp 0xfffffe27(%rip)
d781(4): or $0xffffffff,%rax
d785(6): mov $0x1,%r8d
d78b(5): jmp 0xfffffe0c(%rip)
d790(6): mov $0x1,%r9d
d796(4): or $0xffffffff,%rbx
d79a(5): jmp 0xfffffead(%rip)
d79f(6): mov $0x1,%r9d
d7a5(4): or $0xffffffff,%rbx
d7a9(5): jmp 0xfffffeff(%rip)
d7ae(6): mov $0x1,%r9d
d7b4(4): or $0xffffffff,%rbx
d7b8(5): jmp 0xfffffe67(%rip)
d7bd(6): mov $0x1,%r8d
d7c3(4): or $0xffffffff,%rax
d7c7(5): jmp 0xffffff34(%rip)

"xstrtol_fatal" :
d7d0(2): push %r13
d7d2(2): push %r12
d7d4(3): mov %esi,%r10d
d7d7(1): push %rbp
d7d8(1): push %rbx
d7d9(3): mov %r8,%r12
d7dc(4): sub $0x18,%rsp
d7e0(9): mov $0x28,%rax
d7e9(5): mov %rax,0x8(%rsp)
d7ee(2): xor %eax,%eax
d7f0(3): cmp $0x3,%edi
d7f3(6): mov 0x21a82f(%rip),%ebp
d7f9(2): jnbe 0x5b(%rip)
d7fb(3): cmp $0x2,%edi
d7fe(2): jnb 0x4d(%rip)
d800(3): sub $0x1,%edi
d803(7): lea 0x14d62(%rip),%rsi
d80a(2): jnz 0x3c(%rip)
d80c(3): test %r10d,%r10d
d80f(3): movsxd %r10d,%rax
d812(2): js 0x50(%rip)
d814(4): shl/sal $0x5,%rax
d818(7): lea 0x14d6a(%rip),%rbx
d81f(4): mov 0x0(%rcx,%rax,1),%r13
d823(5): mov $0x5,%edx
d828(2): xor %edi,%edi
d82a(5): call 0xffff4ce6(%rip)
d82f(3): mov %r12,%r9
d832(3): mov %rax,%rdx
d835(3): mov %r13,%r8
d838(3): mov %rbx,%rcx
d83b(2): xor %esi,%esi
d83d(2): mov %ebp,%edi
d83f(2): xor %eax,%eax
d841(5): call 0xffff505f(%rip)
d846(5): call 0xffff4bba(%rip)
d84b(7): lea 0x14d3e(%rip),%rsi
d852(2): jmp 0xffffffba(%rip)
d854(3): cmp $0x4,%edi
d857(7): lea 0x14cf3(%rip),%rsi
d85e(2): jz 0xffffffae(%rip)
d860(2): jmp 0xffffffe6(%rip)
d862(7): lea 0x14d20(%rip),%rbx
d869(4): mov %dl,0x6(%rsp)
d86d(5): mov $0x0,0x7(%rsp)
d872(5): lea 0x6(%rsp),%r13
d877(3): sub %rax,%rbx
d87a(2): jmp 0xffffffa9(%rip)

"xstrtoumax" :
d880(2): push %r15
d882(2): push %r14
d884(2): push %r13
d886(2): push %r12
d888(1): push %rbp
d889(1): push %rbx
d88a(4): sub $0x28,%rsp
d88e(9): mov $0x28,%rax
d897(5): mov %rax,0x18(%rsp)
d89c(2): xor %eax,%eax
d89e(3): cmp $0x24,%edx
d8a1(6): jnbe 0x364(%rip)
d8a7(5): lea 0x10(%rsp),%rax
d8ac(3): mov %rsi,%r15
d8af(3): test %rsi,%rsi
d8b2(3): mov %rdi,%rbp
d8b5(4): mov %edx,0x8(%rsp)
d8b9(3): mov %rcx,%r14
d8bc(3): mov %r8,%r13
d8bf(4): cmove %rax,%r15
d8c3(5): call 0xffff4b4d(%rip)
d8c8(6): mov $0x0,(%rax)
d8ce(3): mov %rax,%r12
d8d1(4): movzx 0x0(%rbp),%ebx
d8d5(5): call 0xffff511b(%rip)
d8da(4): mov 0x8(%rsp),%edx
d8de(3): mov (%rax),%rsi
d8e1(3): mov %rbp,%rax
d8e4(2): jmp 0x13(%rip)
d8e6(a): nop 0x0(%rax,%rax,1)
d8f0(4): add $0x1,%rax
d8f4(3): movzx (%rax),%ebx
d8f7(3): movzx %bl,%ecx
d8fa(5): test $0x20,0x1(%rsi,%rcx,2)
d8ff(2): jnz 0xfffffff1(%rip)
d901(3): cmp $0x2d,%bl
d904(2): jz 0x54(%rip)
d906(2): xor %ecx,%ecx
d908(3): mov %r15,%rsi
d90b(3): mov %rbp,%rdi
d90e(5): call 0xffff4d02(%rip)
d913(3): mov (%r15),%rcx
d916(3): mov %rax,%rbx
d919(3): cmp %rbp,%rcx
d91c(2): jz 0x2c(%rip)
d91e(4): mov (%r12),%eax
d922(2): test %eax,%eax
d924(2): jz 0x64(%rip)
d926(3): cmp $0x22,%eax
d929(5): mov $0x1,%ebp
d92e(2): jnz 0x2a(%rip)
d930(3): test %r13,%r13
d933(2): jz 0xb(%rip)
d935(4): movzx (%rcx),%r12d
d939(3): test %r12b,%r12b
d93c(2): jnz 0x7b(%rip)
d93e(3): mov %rbx,(%r14)
d941(2): jmp 0x1c(%rip)
d943(5): nop 0x0(%rax,%rax,1)
d948(3): test %r13,%r13
d94b(5): mov %rcx,0x8(%rsp)
d950(2): jnz 0x40(%rip)
d952(6): nop 0x0(%rax,%rax,1)
d958(5): mov $0x4,%ebp
d95d(5): mov 0x18(%rsp),%rdi
d962(9): xor $0x28,%rdi
d96b(2): mov %ebp,%eax
d96d(6): jnz 0x293(%rip)
d973(4): add $0x28,%rsp
d977(1): pop %rbx
d978(1): pop %rbp
d979(2): pop %r12
d97b(2): pop %r13
d97d(2): pop %r14
d97f(2): pop %r15
d981(1): ret near (%rsp)
d982(6): nop 0x0(%rax,%rax,1)
d988(2): xor %ebp,%ebp
d98a(2): jmp 0xffffffa6(%rip)
d98c(4): nop 0x0(%rax)
d990(5): movzx 0x0(%rbp),%r12d
d995(3): test %r12b,%r12b
d998(2): jz 0xffffffc0(%rip)
d99a(4): movsx %r12b,%esi
d99e(3): mov %r13,%rdi
d9a1(2): xor %ebp,%ebp
d9a3(5): call 0xffff4bfd(%rip)
d9a8(3): test %rax,%rax
d9ab(5): mov $0x1,%ebx
d9b0(5): mov 0x8(%rsp),%rcx
d9b5(2): jz 0xffffffa3(%rip)
d9b7(4): movsx %r12b,%esi
d9bb(3): mov %r13,%rdi
d9be(5): mov %rcx,0x8(%rsp)
d9c3(5): call 0xffff4bdd(%rip)
d9c8(3): test %rax,%rax
d9cb(5): mov 0x8(%rsp),%rcx
d9d0(6): jz 0xcc(%rip)
d9d6(5): lea 0xffffffbb(%r12),%eax
d9db(2): cmp $0x2f,%al
d9dd(2): jnbe 0x53(%rip)
d9df(a): mov $0x142129060940101,%rdx
d9e9(4): bt %rax,%rdx
d9ed(2): jnb 0x43(%rip)
d9ef(5): mov $0x30,%esi
d9f4(3): mov %r13,%rdi
d9f7(5): mov %rcx,0x8(%rsp)
d9fc(5): call 0xffff4ba4(%rip)
da01(3): test %rax,%rax
da04(5): mov 0x8(%rsp),%rcx
da09(2): jz 0x27(%rip)
da0b(4): movzx 0x1(%rcx),%eax
da0f(2): cmp $0x44,%al
da11(2): jz 0xe(%rip)
da13(2): cmp $0x69,%al
da15(6): jz 0x1d3(%rip)
da1b(2): cmp $0x42,%al
da1d(2): jnz 0x13(%rip)
da1f(5): mov $0x2,%edi
da24(5): mov $0x3e8,%esi
da29(2): jmp 0x11(%rip)
da2b(5): nop 0x0(%rax,%rax,1)
da30(5): mov $0x1,%edi
da35(5): mov $0x400,%esi
da3a(4): sub $0x42,%r12d
da3e(4): cmp $0x35,%r12b
da42(2): jnbe 0x5a(%rip)
da44(7): lea 0x14b6d(%rip),%rdx
da4b(4): movzx %r12b,%r12d
da4f(4): movsxd 0x0(%rdx,%r12,4),%rax
da53(3): add %rdx,%rax
da56(2): jmp %rax
da58(3): mov %rbx,%rax
da5b(3): mul %rax,%rsi,%rdx
da5e(6): jo 0x1f3(%rip)
da64(3): xor %r8d,%r8d
da67(3): mul %rax,%rsi,%rdx
da6a(6): jo 0x1d8(%rip)
da70(3): mov %rax,%rbx
da73(3): or %r8d,%ebp
da76(a): nop 0x0(%rax,%rax,1)
da80(3): movsxd %edi,%rdi
da83(2): mov %ebp,%eax
da85(3): add %rdi,%rcx
da88(3): or $0x2,%eax
da8b(3): mov %rcx,(%r15)
da8e(3): cmp $0x0,(%rcx)
da91(3): mov %rbx,(%r14)
da94(3): cmovne %eax,%ebp
da97(5): jmp 0xfffffec6(%rip)
da9c(3): mov %rbx,(%r14)
da9f(3): or $0x2,%ebp
daa2(5): jmp 0xfffffebb(%rip)
daa7(5): mov $0x2,%edx
daac(3): mov %rdx,%rax
daaf(3): mul %rax,%rbx,%rdx
dab2(6): jo 0x9c(%rip)
dab8(3): add %rbx,%rbx
dabb(2): jmp 0xffffffc5(%rip)
dabd(5): mov $0x200,%edx
dac2(3): mov %rdx,%rax
dac5(3): mul %rax,%rbx,%rdx
dac8(6): jo 0x86(%rip)
dace(4): shl/sal $0x9,%rbx
dad2(2): jmp 0xffffffae(%rip)
dad4(6): mov $0x7,%r8d
dada(3): xor %r9d,%r9d
dadd(3): nop (%rax)
dae0(3): mov %rbx,%rax
dae3(3): mul %rax,%rsi,%rdx
dae6(3): mov %rax,%rbx
dae9(6): jo 0x195(%rip)
daef(4): sub $0x1,%r8d
daf3(2): jnz 0xffffffed(%rip)
daf5(3): or %r9d,%ebp
daf8(2): jmp 0xffffff88(%rip)
dafa(6): mov $0x8,%r8d
db00(3): xor %r9d,%r9d
db03(5): nop 0x0(%rax,%rax,1)
db08(3): mov %rbx,%rax
db0b(3): mul %rax,%rsi,%rdx
db0e(3): mov %rax,%rbx
db11(6): jo 0x14f(%rip)
db17(4): sub $0x1,%r8d
db1b(2): jnz 0xffffffed(%rip)
db1d(2): jmp 0xffffffd8(%rip)
db1f(6): mov $0x4,%r8d
db25(3): xor %r9d,%r9d
db28(3): mov %rbx,%rax
db2b(3): mul %rax,%rsi,%rdx
db2e(3): mov %rax,%rbx
db31(6): jo 0x102(%rip)
db37(4): sub $0x1,%r8d
db3b(2): jnz 0xffffffed(%rip)
db3d(2): jmp 0xffffffb8(%rip)
db3f(3): mov %rbx,%rax
db42(3): mul %rax,%rsi,%rdx
db45(3): mov %rax,%rbx
db48(6): jno 0xffffff38(%rip)
db4e(5): mov $0x1,%ebp
db53(4): or $0xffffffff,%rbx
db57(5): jmp 0xffffff29(%rip)
db5c(4): nop 0x0(%rax)
db60(6): mov $0x5,%r8d
db66(3): xor %r9d,%r9d
db69(3): mov %rbx,%rax
db6c(3): mul %rax,%rsi,%rdx
db6f(3): mov %rax,%rbx
db72(6): jo 0xfd(%rip)
db78(4): sub $0x1,%r8d
db7c(2): jnz 0xffffffed(%rip)
db7e(5): jmp 0xffffff77(%rip)
db83(6): mov $0x6,%r8d
db89(3): xor %r9d,%r9d
db8c(3): mov %rbx,%rax
db8f(3): mul %rax,%rsi,%rdx
db92(3): mov %rax,%rbx
db95(6): jo 0x8f(%rip)
db9b(4): sub $0x1,%r8d
db9f(2): jnz 0xffffffed(%rip)
dba1(5): jmp 0xffffff54(%rip)
dba6(5): mov $0x400,%edx
dbab(3): mov %rdx,%rax
dbae(3): mul %rax,%rbx,%rdx
dbb1(2): jo 0xffffff9d(%rip)
dbb3(4): shl/sal $0xa,%rbx
dbb7(5): jmp 0xfffffec9(%rip)
dbbc(3): mov %rbx,%rax
dbbf(3): mul %rax,%rsi,%rdx
dbc2(6): jo 0xcb(%rip)
dbc8(3): xor %r8d,%r8d
dbcb(3): mul %rax,%rsi,%rdx
dbce(6): jno 0xfffffe99(%rip)
dbd4(6): mov $0x1,%r8d
dbda(4): or $0xffffffff,%rax
dbde(5): jmp 0xfffffe89(%rip)
dbe3(5): nop 0x0(%rax,%rax,1)
dbe8(2): xor %edi,%edi
dbea(4): cmp $0x42,0x2(%rcx)
dbee(5): mov $0x400,%esi
dbf3(4): setz %dil
dbf7(4): lea 0x1(%rdi,%rdi,1),%edi
dbfb(5): jmp 0xfffffe3f(%rip)
dc00(5): call 0xffff4960(%rip)
dc05(7): lea 0x14a84(%rip),%rcx
dc0c(7): lea 0x1472d(%rip),%rsi
dc13(7): lea 0x14746(%rip),%rdi
dc1a(5): mov $0x54,%edx
dc1f(5): call 0xffff49e1(%rip)
dc24(6): mov $0x1,%r9d
dc2a(4): or $0xffffffff,%rbx
dc2e(5): jmp 0xffffff6d(%rip)
dc33(6): mov $0x1,%r9d
dc39(4): or $0xffffffff,%rbx
dc3d(5): jmp 0xfffffefa(%rip)
dc42(6): mov $0x1,%r8d
dc48(4): or $0xffffffff,%rbx
dc4c(5): jmp 0xfffffe27(%rip)
dc51(4): or $0xffffffff,%rax
dc55(6): mov $0x1,%r8d
dc5b(5): jmp 0xfffffe0c(%rip)
dc60(6): mov $0x1,%r9d
dc66(4): or $0xffffffff,%rbx
dc6a(5): jmp 0xfffffead(%rip)
dc6f(6): mov $0x1,%r9d
dc75(4): or $0xffffffff,%rbx
dc79(5): jmp 0xfffffeff(%rip)
dc7e(6): mov $0x1,%r9d
dc84(4): or $0xffffffff,%rbx
dc88(5): jmp 0xfffffe67(%rip)
dc8d(6): mov $0x1,%r8d
dc93(4): or $0xffffffff,%rax
dc97(5): jmp 0xffffff34(%rip)

"rpl_fclose" :
dca0(2): push %r12
dca2(1): push %rbp
dca3(1): push %rbx
dca4(3): mov %rdi,%rbx
dca7(5): call 0xffff4a89(%rip)
dcac(2): test %eax,%eax
dcae(3): mov %rbx,%rdi
dcb1(2): js 0x56(%rip)
dcb3(5): call 0xffff4b5d(%rip)
dcb8(2): test %eax,%eax
dcba(2): jnz 0x2e(%rip)
dcbc(3): mov %rbx,%rdi
dcbf(5): call 0x61(%rip)
dcc4(2): test %eax,%eax
dcc6(2): jz 0x3e(%rip)
dcc8(5): call 0xffff4748(%rip)
dccd(3): mov (%rax),%r12d
dcd0(3): mov %rbx,%rdi
dcd3(3): mov %rax,%rbp
dcd6(5): call 0xffff481a(%rip)
dcdb(3): test %r12d,%r12d
dcde(2): jnz 0x32(%rip)
dce0(1): pop %rbx
dce1(1): pop %rbp
dce2(2): pop %r12
dce4(1): ret near (%rsp)
dce5(3): nop (%rax)
dce8(3): mov %rbx,%rdi
dceb(5): call 0xffff4a45(%rip)
dcf0(2): xor %esi,%esi
dcf2(5): mov $0x1,%edx
dcf7(2): mov %eax,%edi
dcf9(5): call 0xffff48f7(%rip)
dcfe(4): cmp $0xffffffff,%rax
dd02(2): jnz 0xffffffba(%rip)
dd04(3): mov %rbx,%rdi
dd07(1): pop %rbx
dd08(1): pop %rbp
dd09(2): pop %r12
dd0b(5): jmp 0xffff47e5(%rip)
dd10(4): mov %r12d,0x0(%rbp)
dd14(5): mov $0xffffffff,%eax
dd19(2): jmp 0xffffffc7(%rip)

"rpl_fflush" :
dd20(3): test %rdi,%rdi
dd23(1): push %rbx
dd24(3): mov %rdi,%rbx
dd27(2): jz 0x13(%rip)
dd29(5): call 0xffff4ae7(%rip)
dd2e(2): test %eax,%eax
dd30(2): jz 0xa(%rip)
dd32(6): test $0x100,(%rbx)
dd38(2): jnz 0x10(%rip)
dd3a(3): mov %rbx,%rdi
dd3d(1): pop %rbx
dd3e(5): jmp 0xffff4a62(%rip)
dd43(5): nop 0x0(%rax,%rax,1)
dd48(3): mov %rbx,%rdi
dd4b(5): mov $0x1,%edx
dd50(2): xor %esi,%esi
dd52(5): call 0xe(%rip)
dd57(3): mov %rbx,%rdi
dd5a(1): pop %rbx
dd5b(5): jmp 0xffff4a45(%rip)

"rpl_fseeko" :
dd60(4): mov 0x8(%rdi),%rax
dd64(4): cmp %rax,0x10(%rdi)
dd68(2): jz 0x8(%rip)
dd6a(5): jmp 0xffff4b56(%rip)
dd6f(1): nop 
dd70(4): mov 0x20(%rdi),%rax
dd74(4): cmp %rax,0x28(%rdi)
dd78(2): jnz 0xfffffff2(%rip)
dd7a(5): cmp $0x0,0x48(%rdi)
dd7f(2): jnz 0xffffffeb(%rip)
dd81(2): push %r12
dd83(1): push %rbp
dd84(3): mov %edx,%r12d
dd87(1): push %rbx
dd88(3): mov %rsi,%rbp
dd8b(3): mov %rdi,%rbx
dd8e(5): call 0xffff49a2(%rip)
dd93(3): mov %r12d,%edx
dd96(3): mov %rbp,%rsi
dd99(2): mov %eax,%edi
dd9b(5): call 0xffff4855(%rip)
dda0(4): cmp $0xffffffff,%rax
dda4(2): jz 0xe(%rip)
dda6(3): and $0xef,(%rbx)
dda9(7): mov %rax,0x90(%rbx)
ddb0(2): xor %eax,%eax
ddb2(1): pop %rbx
ddb3(1): pop %rbp
ddb4(2): pop %r12
ddb6(1): ret near (%rsp)

"AD_compare" :
ddc0(2): xor %eax,%eax
ddc2(4): mov 0x8(%rsi),%rdx
ddc6(4): cmp %rdx,0x8(%rdi)
ddca(2): jz 0x6(%rip)
ddcc(2): REP ret near (%rsp)
ddce(2): nop 
ddd0(3): mov (%rsi),%rax
ddd3(3): cmp %rax,(%rdi)
ddd6(3): setz %al
ddd9(1): ret near (%rsp)

"AD_hash" :
dde0(4): mov 0x8(%rdi),%rax
dde4(2): xor %edx,%edx
dde6(3): div %rsi,%rax
dde9(3): mov %rdx,%rax
ddec(1): ret near (%rsp)

"dev_type_hash" :
ddf0(3): mov (%rdi),%rax
ddf3(2): xor %edx,%edx
ddf5(3): div %rsi,%rax
ddf8(3): mov %rdx,%rax
ddfb(1): ret near (%rsp)

"dev_type_compare" :
de00(3): mov (%rsi),%rax
de03(3): cmp %rax,(%rdi)
de06(3): setz %al
de09(1): ret near (%rsp)

"fts_compare_ino" :
de10(3): mov (%rdi),%rdx
de13(3): mov (%rsi),%rax
de16(7): mov 0x80(%rax),%rax
de1d(7): cmp %rax,0x80(%rdx)
de24(2): jb 0xc(%rip)
de26(3): setnbe %al
de29(3): movzx %al,%eax
de2c(1): ret near (%rsp)
de2d(3): nop (%rax)
de30(5): mov $0xffffffff,%eax
de35(1): ret near (%rsp)

"fts_stat" :
de40(2): push %r12
de42(1): push %rbp
de43(3): mov %rsi,%rbp
de46(1): push %rbx
de47(5): cmp $0x0,0x58(%rbp)
de4c(4): lea 0x78(%rsi),%rbx
de50(3): mov %rdi,%r12
de53(3): mov 0x48(%rdi),%eax
de56(4): mov 0x30(%rsi),%rsi
de5a(2): jnz 0x66(%rip)
de5c(2): test $0x1,%al
de5e(2): jz 0x62(%rip)
de60(3): mov %rbx,%rdx
de63(5): mov $0x1,%edi
de68(5): call 0xffff48d8(%rip)
de6d(2): test %eax,%eax
de6f(2): jz 0x7c(%rip)
de71(5): call 0xffff459f(%rip)
de76(3): mov %rax,%r12
de79(2): mov (%rax),%eax
de7b(3): cmp $0x2,%eax
de7e(6): jz 0x112(%rip)
de84(4): lea 0x8(%rbx),%rdi
de88(3): mov %eax,0x40(%rbp)
de8b(8): mov $0x0,0x78(%rbp)
de93(b): mov $0x0,0x88(%rbx)
de9e(2): xor %eax,%eax
dea0(4): and $0xfffffff8,%rdi
dea4(3): sub %rdi,%rbx
dea7(6): lea 0x90(%rbx),%ecx
dead(3): shr $0x3,%ecx
deb0(3): REP stosd %rax,rdi(%es,10)
deb3(5): mov $0xa,%eax
deb8(1): pop %rbx
deb9(1): pop %rbp
deba(2): pop %r12
debc(1): ret near (%rsp)
debd(3): nop (%rax)
dec0(2): test $0x2,%al
dec2(2): jnz 0xffffff9e(%rip)
dec4(2): test %dl,%dl
dec6(2): jnz 0xffffff9a(%rip)
dec8(3): mov %rsi,%rdx
decb(5): mov 0x2c(%r12),%esi
ded0(6): mov $0x100,%r8d
ded6(3): mov %rbx,%rcx
ded9(5): mov $0x1,%edi
dede(5): call 0xffff46d2(%rip)
dee3(2): test %eax,%eax
dee5(6): jnz 0x9b(%rip)
deeb(6): mov 0x90(%rbp),%eax
def1(5): and $0xf000,%eax
def6(5): cmp $0x4000,%eax
defb(2): jz 0x25(%rip)
defd(5): cmp $0xa000,%eax
df02(6): jz 0xd6(%rip)
df08(5): cmp $0x8000,%eax
df0d(3): setz %al
df10(3): movzx %al,%eax
df13(1): pop %rbx
df14(4): lea 0x3(%rax,%rax,4),%eax
df18(1): pop %rbp
df19(2): pop %r12
df1b(1): ret near (%rsp)
df1c(4): nop 0x0(%rax)
df20(7): mov 0x88(%rbp),%rax
df27(4): cmp $0x1,%rax
df2b(6): jbe 0x85(%rip)
df31(5): cmp $0x0,0x58(%rbp)
df36(2): jle 0x7a(%rip)
df38(6): test $0x20,0x48(%r12)
df3e(4): lea 0xfffffffe(%rax),%rdx
df42(4): cmove %rdx,%rax
df46(7): cmp $0x2e,0x108(%rbp)
df4d(4): mov %rax,0x68(%rbp)
df51(5): mov $0x1,%eax
df56(6): jnz 0xffffff62(%rip)
df5c(7): cmp $0x0,0x109(%rbp)
df63(6): jnz 0x85(%rip)
df69(5): cmp $0x1,0x58(%rbp)
df6e(2): sbb %eax,%eax
df70(3): and $0xfc,%eax
df73(3): add $0x5,%eax
df76(5): jmp 0xffffff42(%rip)
df7b(5): nop 0x0(%rax,%rax,1)
df80(5): call 0xffff4490(%rip)
df85(2): mov (%rax),%eax
df87(5): jmp 0xfffffefd(%rip)
df8c(4): nop 0x0(%rax)
df90(4): mov 0x30(%rbp),%rsi
df94(3): mov %rbx,%rdx
df97(5): mov $0x1,%edi
df9c(5): call 0xffff45a4(%rip)
dfa1(2): test %eax,%eax
dfa3(2): jz 0x1d(%rip)
dfa5(4): mov (%r12),%eax
dfa9(5): jmp 0xfffffedb(%rip)
dfae(2): nop 
dfb0(7): mov $0xffffffff,%rax
dfb7(2): jmp 0xffffff8f(%rip)
dfb9(7): nop 0x0(%rax)
dfc0(8): mov $0x0,(%r12)
dfc8(5): mov $0xd,%eax
dfcd(5): jmp 0xfffffeeb(%rip)
dfd2(6): nop 0x0(%rax,%rax,1)
dfd8(5): mov $0xc,%eax
dfdd(5): jmp 0xfffffedb(%rip)
dfe2(6): nop 0x0(%rax,%rax,1)
dfe8(6): mov 0x108(%rbp),%edx
dfee(6): and $0xffff00,%edx
dff4(6): cmp $0x2e00,%edx
dffa(6): jnz 0xfffffebe(%rip)
e000(5): jmp 0xffffff69(%rip)

"fts_sort" :
e010(2): push %r13
e012(2): push %r12
e014(3): mov %rdx,%r12
e017(1): push %rbp
e018(1): push %rbx
e019(3): mov %rdi,%rbp
e01c(3): mov %rsi,%rbx
e01f(4): sub $0x8,%rsp
e023(4): cmp %rdx,0x38(%rbp)
e027(4): mov 0x40(%rdi),%r13
e02b(4): mov 0x10(%rdi),%rdi
e02f(2): jnb 0x36(%rip)
e031(4): lea 0x28(%rdx),%rsi
e035(a): mov $0x2305843009213693951,%rax
e03f(3): cmp %rax,%rsi
e042(4): mov %rsi,0x38(%rbp)
e046(6): jnbe 0x9e(%rip)
e04c(4): shl/sal $0x3,%rsi
e050(5): call 0xffff47e0(%rip)
e055(3): test %rax,%rax
e058(3): mov %rax,%rdi
e05b(6): jz 0x85(%rip)
e061(4): mov %rax,0x10(%rbp)
e065(3): test %rbx,%rbx
e068(2): jz 0x19(%rip)
e06a(3): mov %rdi,%rdx
e06d(3): nop (%rax)
e070(4): add $0x8,%rdx
e074(4): mov %rbx,0xfffffff8(%rdx)
e078(4): mov 0x10(%rbx),%rbx
e07c(3): test %rbx,%rbx
e07f(2): jnz 0xfffffff1(%rip)
e081(3): mov %r13,%rcx
e084(5): mov $0x8,%edx
e089(3): mov %r12,%rsi
e08c(5): call 0xffff43e4(%rip)
e091(4): mov 0x10(%rbp),%r8
e095(3): mov %r12,%rcx
e098(4): sub $0x1,%rcx
e09c(3): mov (%r8),%rax
e09f(2): jz 0x71(%rip)
e0a1(3): mov %rax,%rdi
e0a4(3): mov %r8,%rdx
e0a7(2): jmp 0xc(%rip)
e0a9(7): nop 0x0(%rax)
e0b0(3): mov (%rdx),%rdi
e0b3(4): mov 0x8(%rdx),%rsi
e0b7(4): add $0x8,%rdx
e0bb(4): sub $0x1,%rcx
e0bf(4): mov %rsi,0x10(%rdi)
e0c3(2): jnz 0xffffffed(%rip)
e0c5(5): mov 0xfffffff8(%r8,%r12,8),%rdx
e0ca(8): mov $0x0,0x10(%rdx)
e0d2(4): add $0x8,%rsp
e0d6(1): pop %rbx
e0d7(1): pop %rbp
e0d8(2): pop %r12
e0da(2): pop %r13
e0dc(1): ret near (%rsp)
e0dd(3): nop (%rax)
e0e0(4): mov 0x10(%rbp),%rdi
e0e4(5): call 0xffff492c(%rip)
e0e9(8): mov $0x0,0x10(%rbp)
e0f1(8): mov $0x0,0x38(%rbp)
e0f9(4): add $0x8,%rsp
e0fd(3): mov %rbx,%rax
e100(1): pop %rbx
e101(1): pop %rbp
e102(2): pop %r12
e104(2): pop %r13
e106(1): ret near (%rsp)
e107(9): nop 0x0(%rax,%rax,1)
e110(3): mov %rax,%rdx
e113(2): jmp 0xffffffb7(%rip)

"fts_alloc" :
e120(2): push %r13
e122(2): push %r12
e124(3): mov %rdi,%r12
e127(1): push %rbp
e128(7): lea 0x110(%rdx),%rdi
e12f(1): push %rbx
e130(3): mov %rsi,%r13
e133(3): mov %rdx,%rbp
e136(4): sub $0x8,%rsp
e13a(4): and $0xfffffff8,%rdi
e13e(5): call 0xffff4642(%rip)
e143(3): test %rax,%rax
e146(3): mov %rax,%rbx
e149(2): jz 0x53(%rip)
e14b(7): lea 0x108(%rax),%rdi
e152(3): mov %rbp,%rdx
e155(3): mov %r13,%rsi
e158(5): call 0xffff45b8(%rip)
e15d(5): mov 0x20(%r12),%rax
e162(8): mov $0x0,0x108(%rbx,%rbp,1)
e16a(4): mov %rbp,0x60(%rbx)
e16e(4): mov %r12,0x50(%rbx)
e172(7): mov $0x0,0x40(%rbx)
e179(8): mov $0x0,0x18(%rbx)
e181(4): mov %rax,0x38(%rbx)
e185(7): mov $0x30000,0x72(%rbx)
e18c(8): mov $0x0,0x20(%rbx)
e194(8): mov $0x0,0x28(%rbx)
e19c(4): add $0x8,%rsp
e1a0(3): mov %rbx,%rax
e1a3(1): pop %rbx
e1a4(1): pop %rbp
e1a5(2): pop %r12
e1a7(2): pop %r13
e1a9(1): ret near (%rsp)

"fts_lfree" :
e1b0(3): test %rdi,%rdi
e1b3(2): jz 0x3d(%rip)
e1b5(1): push %rbp
e1b6(1): push %rbx
e1b7(3): mov %rdi,%rbx
e1ba(4): sub $0x8,%rsp
e1be(2): nop 
e1c0(4): mov 0x18(%rbx),%rdi
e1c4(4): mov 0x10(%rbx),%rbp
e1c8(3): test %rdi,%rdi
e1cb(2): jz 0x7(%rip)
e1cd(5): call 0xffff4483(%rip)
e1d2(3): mov %rbx,%rdi
e1d5(3): mov %rbp,%rbx
e1d8(5): call 0xffff4838(%rip)
e1dd(3): test %rbp,%rbp
e1e0(2): jnz 0xffffffe0(%rip)
e1e2(4): add $0x8,%rsp
e1e6(1): pop %rbx
e1e7(1): pop %rbp
e1e8(1): ret near (%rsp)
e1e9(7): nop 0x0(%rax)
e1f0(2): REP ret near (%rsp)

"fd_ring_clear" :
e200(1): push %rbx
e201(3): mov %rdi,%rbx
e204(2): jmp 0x18(%rip)
e206(a): nop 0x0(%rax,%rax,1)
e210(3): mov %rbx,%rdi
e213(5): call 0x1136d(%rip)
e218(2): test %eax,%eax
e21a(2): jns 0x16(%rip)
e21c(3): mov %rbx,%rdi
e21f(5): call 0x11311(%rip)
e224(2): test %al,%al
e226(2): jz 0xffffffea(%rip)
e228(1): pop %rbx
e229(1): ret near (%rsp)
e22a(6): nop 0x0(%rax,%rax,1)
e230(2): mov %eax,%edi
e232(5): call 0xffff440e(%rip)
e237(2): jmp 0xffffffe5(%rip)

"filesystem_type" :
e240(2): push %r13
e242(2): push %r12
e244(1): push %rbp
e245(1): push %rbx
e246(7): sub $0x98,%rsp
e24d(4): mov 0x50(%rdi),%rbx
e251(9): mov $0x28,%rax
e25a(8): mov %rax,0x88(%rsp)
e262(2): xor %eax,%eax
e264(4): test $0x2,0x49(%rbx)
e268(2): jz 0x6a(%rip)
e26a(4): mov 0x50(%rbx),%r12
e26e(3): mov %rdi,%rbp
e271(3): mov %esi,%r13d
e274(3): test %r12,%r12
e277(2): jz 0x29(%rip)
e279(4): mov 0x78(%rbp),%rax
e27d(3): mov %rsp,%rsi
e280(3): mov %r12,%rdi
e283(4): mov %rax,(%rsp)
e287(5): call 0xffffa069(%rip)
e28c(3): test %rax,%rax
e28f(2): jz 0x3e(%rip)
e291(4): mov 0x8(%rax),%rbx
e295(2): jmp 0x3f(%rip)
e297(9): nop 0x0(%rax,%rax,1)
e2a0(7): mov 0x219d21(%rip),%r8
e2a7(7): lea 0xfffffb52(%rip),%rcx
e2ae(7): lea 0xfffffb3b(%rip),%rdx
e2b5(2): xor %esi,%esi
e2b7(5): mov $0xd,%edi
e2bc(5): call 0xffffa2a4(%rip)
e2c1(3): test %rax,%rax
e2c4(3): mov %rax,%r12
e2c7(4): mov %rax,0x50(%rbx)
e2cb(2): jnz 0xffffffae(%rip)
e2cd(3): test %r13d,%r13d
e2d0(2): jns 0x30(%rip)
e2d2(2): xor %ebx,%ebx
e2d4(8): mov 0x88(%rsp),%rdx
e2dc(9): xor $0x28,%rdx
e2e5(3): mov %rbx,%rax
e2e8(2): jnz 0x7a(%rip)
e2ea(7): add $0x98,%rsp
e2f1(1): pop %rbx
e2f2(1): pop %rbp
e2f3(2): pop %r12
e2f5(2): pop %r13
e2f7(1): ret near (%rsp)
e2f8(8): nop 0x0(%rax,%rax,1)
e300(5): lea 0x10(%rsp),%rsi
e305(3): mov %r13d,%edi
e308(5): call 0xffff4628(%rip)
e30d(2): test %eax,%eax
e30f(2): jnz 0xffffffc3(%rip)
e311(3): test %r12,%r12
e314(5): mov 0x10(%rsp),%rbx
e319(2): jz 0xffffffbb(%rip)
e31b(5): mov $0x10,%edi
e320(5): call 0xffff4460(%rip)
e325(3): test %rax,%rax
e328(3): mov %rax,%r13
e32b(2): jz 0xffffffa9(%rip)
e32d(4): mov 0x78(%rbp),%rax
e331(4): mov %rbx,0x8(%r13)
e335(3): mov %r13,%rsi
e338(3): mov %r12,%rdi
e33b(4): mov %rax,0x0(%r13)
e33f(5): call 0xffffaa21(%rip)
e344(3): test %rax,%rax
e347(2): jz 0x11(%rip)
e349(3): cmp %rax,%r13
e34c(2): jnz 0x1b(%rip)
e34e(5): mov 0x10(%rsp),%rbx
e353(5): jmp 0xffffff81(%rip)
e358(3): mov %r13,%rdi
e35b(5): call 0xffff46b5(%rip)
e360(2): jmp 0xffffffee(%rip)
e362(5): call 0xffff41fe(%rip)
e367(5): call 0xffff4099(%rip)

"leaf_optimization" :
e370(4): sub $0x8,%rsp
e374(5): call 0xfffffecc(%rip)
e379(6): cmp $0x52654973,%rax
e37f(2): jz 0x51(%rip)
e381(2): jle 0x2f(%rip)
e383(6): cmp $0x58465342,%rax
e389(2): jz 0x47(%rip)
e38b(5): mov $0xff534d42,%edx
e390(3): cmp %rdx,%rax
e393(2): jz 0x32(%rip)
e395(6): cmp $0x5346414f,%rax
e39b(2): jz 0x2a(%rip)
e39d(5): mov $0x1,%eax
e3a2(4): add $0x8,%rsp
e3a6(1): ret near (%rsp)
e3a7(9): nop 0x0(%rax,%rax,1)
e3b0(6): cmp $0x6969,%rax
e3b6(2): jz 0xf(%rip)
e3b8(6): cmp $0x9fa0,%rax
e3be(2): jz 0x7(%rip)
e3c0(3): test %rax,%rax
e3c3(2): jnz 0xffffffda(%rip)
e3c5(2): xor %eax,%eax
e3c7(4): add $0x8,%rsp
e3cb(1): ret near (%rsp)
e3cc(4): nop 0x0(%rax)
e3d0(5): mov $0x2,%eax
e3d5(4): add $0x8,%rsp
e3d9(1): ret near (%rsp)

"cwd_advance_fd" :
e3e0(1): push %rbp
e3e1(1): push %rbx
e3e2(2): mov %esi,%ebp
e3e4(3): mov %rdi,%rbx
e3e7(4): sub $0x8,%rsp
e3eb(3): mov 0x2c(%rdi),%esi
e3ee(2): cmp %ebp,%esi
e3f0(2): jnz 0x7(%rip)
e3f2(3): cmp $0x9c,%esi
e3f5(2): jnz 0x4c(%rip)
e3f7(2): test %dl,%dl
e3f9(2): jnz 0x17(%rip)
e3fb(4): test $0x4,0x48(%rbx)
e3ff(2): jnz 0x6(%rip)
e401(2): test %esi,%esi
e403(2): jns 0x2d(%rip)
e405(3): mov %ebp,0x2c(%rbx)
e408(4): add $0x8,%rsp
e40c(1): pop %rbx
e40d(1): pop %rbp
e40e(1): ret near (%rsp)
e40f(1): nop 
e410(4): lea 0x60(%rbx),%rdi
e414(5): call 0x1112c(%rip)
e419(2): test %eax,%eax
e41b(2): js 0xffffffea(%rip)
e41d(2): mov %eax,%edi
e41f(5): call 0xffff4221(%rip)
e424(3): mov %ebp,0x2c(%rbx)
e427(4): add $0x8,%rsp
e42b(1): pop %rbx
e42c(1): pop %rbp
e42d(1): ret near (%rsp)
e42e(2): nop 
e430(2): mov %esi,%edi
e432(5): call 0xffff420e(%rip)
e437(3): mov %ebp,0x2c(%rbx)
e43a(4): add $0x8,%rsp
e43e(1): pop %rbx
e43f(1): pop %rbp
e440(1): ret near (%rsp)
e441(5): call 0xffff3fbf(%rip)

"restore_initial_cwd" :
e450(1): push %rbp
e451(1): push %rbx
e452(3): mov %rdi,%rbx
e455(4): sub $0x8,%rsp
e459(3): mov 0x48(%rdi),%edx
e45c(2): mov %edx,%ebp
e45e(3): and $0x4,%ebp
e461(2): jnz 0x47(%rip)
e463(3): and $0x2,%dh
e466(2): jnz 0x2a(%rip)
e468(3): mov 0x28(%rdi),%edi
e46b(2): xor %ebp,%ebp
e46d(5): call 0xffff43b3(%rip)
e472(2): test %eax,%eax
e474(4): setnz %bpl
e478(4): lea 0x60(%rbx),%rdi
e47c(5): call 0xfffffd84(%rip)
e481(4): add $0x8,%rsp
e485(2): mov %ebp,%eax
e487(1): pop %rbx
e488(1): pop %rbp
e489(1): ret near (%rsp)
e48a(6): nop 0x0(%rax,%rax,1)
e490(5): mov $0x1,%edx
e495(5): mov $0xffffff9c,%esi
e49a(5): call 0xffffff46(%rip)
e49f(2): jmp 0xffffffd9(%rip)
e4a1(7): nop 0x0(%rax)
e4a8(2): xor %ebp,%ebp
e4aa(2): jmp 0xffffffce(%rip)

"fts_palloc.isra.2" :
e4b0(1): push %rbx
e4b1(3): mov (%rsi),%rcx
e4b4(3): mov %rdi,%rbx
e4b7(3): mov (%rdi),%rdi
e4ba(8): lea 0x100(%rcx,%rdx,1),%rax
e4c2(3): cmp %rax,%rcx
e4c5(2): jnbe 0x23(%rip)
e4c7(3): mov %rax,(%rsi)
e4ca(3): mov %rax,%rsi
e4cd(5): call 0xffff4363(%rip)
e4d2(3): test %rax,%rax
e4d5(2): jz 0x33(%rip)
e4d7(3): mov %rax,(%rbx)
e4da(5): mov $0x1,%eax
e4df(1): pop %rbx
e4e0(1): ret near (%rsp)
e4e1(7): nop 0x0(%rax)
e4e8(5): call 0xffff4528(%rip)
e4ed(7): mov $0x0,(%rbx)
e4f4(5): call 0xffff3f1c(%rip)
e4f9(6): mov $0x24,(%rax)
e4ff(2): xor %eax,%eax
e501(1): pop %rbx
e502(1): ret near (%rsp)
e503(5): nop 0x0(%rax,%rax,1)
e508(3): mov (%rbx),%rdi
e50b(5): call 0xffff4505(%rip)
e510(7): mov $0x0,(%rbx)
e517(2): xor %eax,%eax
e519(1): pop %rbx
e51a(1): ret near (%rsp)

"setup_dir.isra.4" :
e520(6): and $0x102,%edi
e526(1): push %rbx
e527(3): mov %rsi,%rbx
e52a(2): jz 0x36(%rip)
e52c(7): mov 0x219a95(%rip),%r8
e533(7): lea 0xfffff886(%rip),%rcx
e53a(7): lea 0xfffff89f(%rip),%rdx
e541(2): xor %esi,%esi
e543(5): mov $0x1f,%edi
e548(5): call 0xffffa018(%rip)
e54d(3): test %rax,%rax
e550(3): mov %rax,(%rbx)
e553(3): setnz %al
e556(1): pop %rbx
e557(1): ret near (%rsp)
e558(8): nop 0x0(%rax,%rax,1)
e560(5): mov $0x20,%edi
e565(5): call 0xffff421b(%rip)
e56a(3): mov %rax,%rdi
e56d(3): mov %rax,(%rbx)
e570(2): xor %eax,%eax
e572(3): test %rdi,%rdi
e575(2): jz 0xffffffe1(%rip)
e577(5): call 0x10e29(%rip)
e57c(5): mov $0x1,%eax
e581(1): pop %rbx
e582(1): ret near (%rsp)

"diropen.isra.6" :
e590(3): mov %rdx,%rax
e593(2): mov %esi,%edx
e595(3): shl/sal $0xd,%edx
e598(6): and $0x20000,%edx
e59e(6): or $0x90900,%edx
e5a4(6): and $0x200,%esi
e5aa(2): jnz 0x16(%rip)
e5ac(3): mov %rax,%rdi
e5af(2): mov %edx,%esi
e5b1(2): xor %eax,%eax
e5b3(5): jmp 0x10e8d(%rip)
e5b8(8): nop 0x0(%rax,%rax,1)
e5c0(3): mov %rax,%rsi
e5c3(2): xor %eax,%eax
e5c5(5): jmp 0x1103b(%rip)

"fts_safe_changedir" :
e5d0(2): push %r15
e5d2(2): push %r14
e5d4(3): mov %rsi,%r14
e5d7(2): push %r13
e5d9(2): push %r12
e5db(3): mov %rdi,%r13
e5de(1): push %rbp
e5df(1): push %rbx
e5e0(3): mov %edx,%r12d
e5e3(3): mov %rcx,%rbp
e5e6(7): sub $0xb8,%rsp
e5ed(3): mov 0x48(%rdi),%ebx
e5f0(9): mov $0x28,%rax
e5f9(8): mov %rax,0xa8(%rsp)
e601(2): xor %eax,%eax
e603(3): mov %ebx,%r9d
e606(4): and $0x4,%r9d
e60a(3): test %rcx,%rcx
e60d(6): jz 0xb3(%rip)
e613(7): lea 0x14081(%rip),%rdx
e61a(5): mov $0x3,%ecx
e61f(3): mov %rbp,%rsi
e622(3): mov %rdx,%rdi
e625(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
e627(3): setnbe %al
e62a(2): sbb $0x0,%al
e62c(2): test %al,%al
e62e(6): jnz 0x92(%rip)
e634(3): test %r9d,%r9d
e637(6): jnz 0x8e(%rip)
e63d(3): test %r12d,%r12d
e640(6): jns 0x1ea(%rip)
e646(3): test $0x2,%bh
e649(6): jnz 0x147(%rip)
e64f(5): mov $0x1,0xf(%rsp)
e654(4): mov 0x2c(%r13),%edi
e658(3): mov %rbp,%rdx
e65b(2): mov %ebx,%esi
e65d(5): call 0xffffff33(%rip)
e662(2): test %eax,%eax
e664(3): mov %eax,%r15d
e667(6): js 0x1b4(%rip)
e66d(4): mov 0x48(%r13),%ebx
e671(3): test $0x2,%bl
e674(6): jz 0xa6(%rip)
e67a(6): nop 0x0(%rax,%rax,1)
e680(5): lea 0x10(%rsp),%rdx
e685(3): mov %r15d,%esi
e688(5): mov $0x1,%edi
e68d(5): call 0xffff4153(%rip)
e692(2): test %eax,%eax
e694(6): jz 0xcc(%rip)
e69a(5): mov $0xffffffff,%ebx
e69f(3): test %r12d,%r12d
e6a2(2): jns 0x33(%rip)
e6a4(5): call 0xffff3d6c(%rip)
e6a9(3): mov (%rax),%r12d
e6ac(3): mov %rax,%rbp
e6af(3): mov %r15d,%edi
e6b2(5): call 0xffff3f8e(%rip)
e6b7(4): mov %r12d,0x0(%rbp)
e6bb(2): jmp 0x1a(%rip)
e6bd(3): nop (%rax)
e6c0(3): test %r9d,%r9d
e6c3(2): jz 0x3d(%rip)
e6c5(3): and $0x2,%bh
e6c8(2): jz 0xb(%rip)
e6ca(3): test %r12d,%r12d
e6cd(6): jns 0xb3(%rip)
e6d3(2): xor %ebx,%ebx
e6d5(8): mov 0xa8(%rsp),%rcx
e6dd(9): xor $0x28,%rcx
e6e6(2): mov %ebx,%eax
e6e8(6): jnz 0x13d(%rip)
e6ee(7): add $0xb8,%rsp
e6f5(1): pop %rbx
e6f6(1): pop %rbp
e6f7(2): pop %r12
e6f9(2): pop %r13
e6fb(2): pop %r14
e6fd(2): pop %r15
e6ff(1): ret near (%rsp)
e700(3): test %r12d,%r12d
e703(6): js 0x13d(%rip)
e709(3): test $0x2,%bl
e70c(3): mov %r12d,%r15d
e70f(5): mov $0x0,0xf(%rsp)
e714(6): jnz 0xffffff6c(%rip)
e71a(3): test %rbp,%rbp
e71d(2): jz 0x23(%rip)
e71f(7): lea 0x13f75(%rip),%rdx
e726(5): mov $0x3,%ecx
e72b(3): mov %rbp,%rsi
e72e(3): mov %rdx,%rdi
e731(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
e733(3): setnbe %al
e736(2): sbb $0x0,%al
e738(2): test %al,%al
e73a(6): jz 0xffffff46(%rip)
e740(3): and $0x2,%bh
e743(6): jnz 0x95(%rip)
e749(3): mov %r15d,%edi
e74c(5): call 0xffff40d4(%rip)
e751(2): mov %eax,%ebx
e753(5): jmp 0xffffff4c(%rip)
e758(8): nop 0x0(%rax,%rax,1)
e760(5): mov 0x10(%rsp),%rax
e765(4): cmp %rax,0x78(%r14)
e769(6): jz 0x97(%rip)
e76f(5): call 0xffff3ca1(%rip)
e774(6): mov $0x2,(%rax)
e77a(5): jmp 0xffffff20(%rip)
e77f(1): nop 
e780(3): mov %r12d,%edi
e783(2): xor %ebx,%ebx
e785(5): call 0xffff3ebb(%rip)
e78a(5): jmp 0xffffff4b(%rip)
e78f(1): nop 
e790(4): lea 0x60(%r13),%r15
e794(3): mov %r15,%rdi
e797(5): call 0x10d99(%rip)
e79c(2): test %al,%al
e79e(4): mov %al,0xf(%rsp)
e7a2(6): jnz 0xfffffeb2(%rip)
e7a8(3): mov %r15,%rdi
e7ab(5): call 0x10dd5(%rip)
e7b0(2): test %eax,%eax
e7b2(3): mov %eax,%r15d
e7b5(4): mov 0x48(%r13),%ebx
e7b9(6): js 0xfffffe96(%rip)
e7bf(3): test $0x2,%bl
e7c2(3): mov %eax,%r12d
e7c5(5): mov $0x1,0xf(%rsp)
e7ca(6): jz 0xffffff76(%rip)
e7d0(5): jmp 0xfffffeb0(%rip)
e7d5(3): nop (%rax)
e7d8(6): movzx 0xf(%rsp),%r14d
e7de(3): mov %r15d,%esi
e7e1(3): mov %r13,%rdi
e7e4(2): xor %ebx,%ebx
e7e6(4): xor $0x1,%r14d
e7ea(4): movzx %r14b,%edx
e7ee(5): call 0xfffffbf2(%rip)
e7f3(5): jmp 0xfffffee2(%rip)
e7f8(8): nop 0x0(%rax,%rax,1)
e800(5): mov 0x18(%rsp),%rax
e805(7): cmp %rax,0x80(%r14)
e80c(6): jnz 0xffffff63(%rip)
e812(4): mov 0x48(%r13),%ebx
e816(5): jmp 0xffffff2a(%rip)
e81b(5): mov $0xffffffff,%ebx
e820(5): jmp 0xfffffeb5(%rip)
e825(5): call 0xffff3d3b(%rip)
e82a(3): test $0x2,%bl
e82d(3): mov %r12d,%r15d
e830(5): mov $0x1,0xf(%rsp)
e835(6): jz 0xfffffef1(%rip)
e83b(5): jmp 0xfffffe45(%rip)
e840(5): mov $0x0,0xf(%rsp)
e845(5): jmp 0xfffffe0f(%rip)

"enter_dir.isra.10" :
e850(6): and $0x102,%edi
e856(2): push %r12
e858(3): mov %rsi,%r12
e85b(1): push %rbp
e85c(1): push %rbx
e85d(3): mov %rdx,%rbx
e860(2): jz 0x70(%rip)
e862(5): mov $0x18,%edi
e867(5): call 0xffff3f19(%rip)
e86c(3): test %rax,%rax
e86f(3): mov %rax,%rbp
e872(6): jz 0x86(%rip)
e878(4): mov 0x78(%rbx),%rax
e87c(4): mov (%r12),%rdi
e880(3): mov %rbp,%rsi
e883(4): mov %rbx,0x10(%rbp)
e887(4): mov %rax,0x0(%rbp)
e88b(7): mov 0x80(%rbx),%rax
e892(4): mov %rax,0x8(%rbp)
e896(5): call 0xffffa4ca(%rip)
e89b(3): cmp %rax,%rbp
e89e(3): mov %rax,%r12
e8a1(2): jz 0x20(%rip)
e8a3(3): mov %rbp,%rdi
e8a6(5): call 0xffff416a(%rip)
e8ab(3): test %r12,%r12
e8ae(2): jz 0x4a(%rip)
e8b0(5): mov 0x10(%r12),%rax
e8b5(5): mov $0x2,%ecx
e8ba(4): mov %cx,0x70(%rbx)
e8be(3): mov %rax,(%rbx)
e8c1(1): pop %rbx
e8c2(5): mov $0x1,%eax
e8c7(1): pop %rbp
e8c8(2): pop %r12
e8ca(1): ret near (%rsp)
e8cb(5): nop 0x0(%rax,%rax,1)
e8d0(4): mov (%r12),%rdi
e8d4(4): lea 0x78(%rdx),%rsi
e8d8(5): call 0x10ad8(%rip)
e8dd(2): test %al,%al
e8df(2): jz 0xffffffe2(%rip)
e8e1(5): mov $0x2,%edx
e8e6(3): mov %rbx,(%rbx)
e8e9(4): mov %dx,0x70(%rbx)
e8ed(1): pop %rbx
e8ee(1): pop %rbp
e8ef(2): pop %r12
e8f1(1): ret near (%rsp)
e8f2(6): nop 0x0(%rax,%rax,1)
e8f8(1): pop %rbx
e8f9(2): xor %eax,%eax
e8fb(1): pop %rbp
e8fc(2): pop %r12
e8fe(1): ret near (%rsp)

"leave_dir.isra.12" :
e900(4): sub $0x28,%rsp
e904(3): mov %rsi,%rcx
e907(9): mov $0x28,%rax
e910(5): mov %rax,0x18(%rsp)
e915(2): xor %eax,%eax
e917(6): and $0x102,%edi
e91d(2): jnz 0x43(%rip)
e91f(4): mov 0x8(%rdx),%rax
e923(3): test %rax,%rax
e926(2): jz 0x1f(%rip)
e928(5): cmp $0x0,0x58(%rax)
e92d(2): js 0x18(%rip)
e92f(3): mov (%rsi),%rcx
e932(5): cmp $0x0,0x10(%rcx)
e937(2): jz 0x7c(%rip)
e939(7): mov 0x80(%rdx),%rsi
e940(3): cmp %rsi,(%rcx)
e943(2): jz 0x4d(%rip)
e945(5): mov 0x18(%rsp),%rax
e94a(9): xor $0x28,%rax
e953(2): jnz 0x5b(%rip)
e955(4): add $0x28,%rsp
e959(1): ret near (%rsp)
e95a(6): nop 0x0(%rax,%rax,1)
e960(4): mov 0x78(%rdx),%rax
e964(3): mov (%rcx),%rdi
e967(3): mov %rsp,%rsi
e96a(4): mov %rax,(%rsp)
e96e(7): mov 0x80(%rdx),%rax
e975(5): mov %rax,0x8(%rsp)
e97a(5): call 0xffffa446(%rip)
e97f(3): test %rax,%rax
e982(2): jz 0x31(%rip)
e984(3): mov %rax,%rdi
e987(5): call 0xffff4089(%rip)
e98c(2): jmp 0xffffffb9(%rip)
e98e(2): nop 
e990(4): mov 0x78(%rdx),%rsi
e994(4): cmp %rsi,0x8(%rcx)
e998(2): jnz 0xffffffad(%rip)
e99a(4): mov 0x78(%rax),%rdx
e99e(7): mov 0x80(%rax),%rax
e9a5(4): mov %rdx,0x8(%rcx)
e9a9(3): mov %rax,(%rcx)
e9ac(2): jmp 0xffffff99(%rip)
e9ae(5): call 0xffff3bb2(%rip)
e9b3(5): call 0xffff3a4d(%rip)

"fts_build" :
e9c0(2): push %r15
e9c2(2): push %r14
e9c4(3): mov %rdi,%r15
e9c7(2): push %r13
e9c9(2): push %r12
e9cb(1): push %rbp
e9cc(1): push %rbx
e9cd(4): sub $0x78,%rsp
e9d1(3): mov (%rdi),%rbp
e9d4(9): mov $0x28,%rax
e9dd(5): mov %rax,0x68(%rsp)
e9e2(2): xor %eax,%eax
e9e4(4): mov %esi,0x58(%rsp)
e9e8(4): mov 0x18(%rbp),%rax
e9ec(3): test %rax,%rax
e9ef(5): mov %rax,0x50(%rsp)
e9f4(6): jz 0x43c(%rip)
e9fa(3): mov %rax,%rdi
e9fd(5): call 0xffff3ce3(%rip)
ea02(2): test %eax,%eax
ea04(4): mov %eax,0x64(%rsp)
ea08(6): js 0x558(%rip)
ea0e(5): cmp $0x0,0x40(%r15)
ea13(6): jz 0x7d5(%rip)
ea19(9): mov $0xffffffff,0x38(%rsp)
ea22(4): mov 0x48(%r15),%edi
ea26(5): mov $0x1,0x5f(%rsp)
ea2b(4): mov 0x48(%rbp),%rcx
ea2f(4): mov 0x38(%rbp),%rdx
ea33(9): mov $0x0,0x40(%rsp)
ea3c(5): cmp $0x2f,0xffffffff(%rdx,%rcx,1)
ea41(4): lea 0xffffffff(%rcx),%rax
ea45(4): cmovne %rcx,%rax
ea49(3): and $0x4,%edi
ea4c(5): mov %rax,0x48(%rsp)
ea51(2): jz 0x12(%rip)
ea53(4): add 0x20(%r15),%rax
ea57(4): lea 0x1(%rax),%rbx
ea5b(3): mov $0x2f,(%rax)
ea5e(5): mov %rbx,0x40(%rsp)
ea63(5): mov 0x48(%rsp),%rax
ea68(4): mov 0x30(%r15),%rbx
ea6c(5): mov $0x0,0x5e(%rsp)
ea71(5): mov $0x0,0x5d(%rsp)
ea76(9): mov $0x0,0x8(%rsp)
ea7f(9): mov $0x0,0x10(%rsp)
ea88(4): add $0x1,%rax
ea8c(5): mov %rbp,0x20(%rsp)
ea91(3): sub %rax,%rbx
ea94(5): mov %rax,0x18(%rsp)
ea99(4): mov 0x58(%rbp),%rax
ea9d(5): mov %rbx,0x28(%rsp)
eaa2(2): xor %ebx,%ebx
eaa4(4): add $0x1,%rax
eaa8(5): mov %rax,0x30(%rsp)
eaad(5): jmp 0xe2(%rip)
eab2(6): nop 0x0(%rax,%rax,1)
eab8(3): mov %r14,%r9
eabb(5): add 0x18(%rsp),%r9
eac0(6): jb 0x860(%rip)
eac6(5): mov 0x30(%rsp),%rax
eacb(7): lea 0x108(%r13),%rsi
ead2(4): mov %rax,0x58(%r13)
ead6(3): mov (%r15),%rax
ead9(4): mov %r9,0x48(%r13)
eadd(4): mov %rax,0x8(%r13)
eae1(4): mov 0x0(%rbp),%rax
eae5(7): mov %rax,0x80(%r13)
eaec(4): mov 0x48(%r15),%eax
eaf0(2): test $0x4,%al
eaf2(6): jnz 0x26e(%rip)
eaf8(4): mov %rsi,0x30(%r13)
eafc(5): cmp $0x0,0x40(%r15)
eb01(2): jz 0xb(%rip)
eb03(3): test $0x4,%ah
eb06(6): jz 0x302(%rip)
eb0c(4): movzx 0x12(%rbp),%edx
eb10(3): and $0x18,%eax
eb13(2): mov %edx,%esi
eb15(3): sub $0x1,%edx
eb18(3): cmp $0x18,%eax
eb1b(6): jz 0x2b5(%rip)
eb21(5): mov $0xb,%ecx
eb26(3): cmp $0xb,%edx
eb29(5): mov %cx,0x70(%r13)
eb2e(6): jnbe 0x26a(%rip)
eb34(7): lea 0x13b65(%rip),%rax
eb3b(3): mov 0x0(%rax,%rdx,4),%eax
eb3e(7): mov %eax,0x90(%r13)
eb45(5): mov $0x2,%eax
eb4a(7): mov %rax,0xa8(%r13)
eb51(6): cmp $0x0,0x10(%rsp)
eb57(8): mov $0x0,0x10(%r13)
eb5f(6): jz 0x229(%rip)
eb65(5): mov 0x8(%rsp),%rax
eb6a(4): mov %r13,0x10(%rax)
eb6e(7): cmp $0x2710,%rbx
eb75(6): jz 0xfb(%rip)
eb7b(4): add $0x1,%rbx
eb7f(5): cmp 0x38(%rsp),%rbx
eb84(6): jnb 0x144(%rip)
eb8a(5): mov %r13,0x8(%rsp)
eb8f(5): mov 0x20(%rsp),%rax
eb94(4): mov 0x18(%rax),%r13
eb98(3): test %r13,%r13
eb9b(6): jz 0x4cd(%rip)
eba1(5): call 0xffff386f(%rip)
eba6(3): mov %r13,%rdi
eba9(6): mov $0x0,(%rax)
ebaf(3): mov %rax,%r12
ebb2(5): call 0xffff3b9e(%rip)
ebb7(3): test %rax,%rax
ebba(3): mov %rax,%rbp
ebbd(6): jz 0x583(%rip)
ebc3(5): test $0x20,0x48(%r15)
ebc8(2): jnz 0xc(%rip)
ebca(4): cmp $0x2e,0x13(%rax)
ebce(6): jz 0x1e2(%rip)
ebd4(4): lea 0x13(%rbp),%r13
ebd8(3): mov %r13,%rdi
ebdb(5): call 0xffff3955(%rip)
ebe0(3): mov %r13,%rsi
ebe3(3): mov %rax,%rdx
ebe6(3): mov %r15,%rdi
ebe9(3): mov %rax,%r14
ebec(5): call 0xfffff534(%rip)
ebf1(3): test %rax,%rax
ebf4(3): mov %rax,%r13
ebf7(6): jz 0x419(%rip)
ebfd(5): cmp %r14,0x28(%rsp)
ec02(6): jnbe 0xfffffeb6(%rip)
ec08(4): mov 0x20(%r15),%rax
ec0c(4): lea 0x30(%r15),%rsi
ec10(4): lea 0x20(%r15),%rdi
ec14(5): mov %rax,0x28(%rsp)
ec19(5): mov 0x48(%rsp),%rax
ec1e(5): lea 0x2(%rax,%r14,1),%rdx
ec23(5): call 0xfffff88d(%rip)
ec28(2): test %al,%al
ec2a(6): jz 0x3e6(%rip)
ec30(4): mov 0x20(%r15),%rdx
ec34(5): cmp 0x28(%rsp),%rdx
ec39(6): jz 0x1e7(%rip)
ec3f(5): add 0x18(%rsp),%rdx
ec44(5): test $0x4,0x48(%r15)
ec49(6): cmove 0x40(%rsp),%rdx
ec4f(5): mov %rdx,0x40(%rsp)
ec54(4): mov 0x30(%r15),%rcx
ec58(5): sub 0x18(%rsp),%rcx
ec5d(4): mov %al,0x5d(%rsp)
ec61(5): mov %rcx,0x28(%rsp)
ec66(5): jmp 0xfffffe52(%rip)
ec6b(5): nop 0x0(%rax,%rax,1)
ec70(5): cmp $0x0,0x40(%r15)
ec75(6): jnz 0xffffff06(%rip)
ec7b(4): mov 0x64(%rsp),%esi
ec7f(5): mov 0x20(%rsp),%rdi
ec84(5): call 0xfffff5bc(%rip)
ec89(6): cmp $0x1021994,%rax
ec8f(6): jz 0x371(%rip)
ec95(5): mov $0xff534d42,%ecx
ec9a(3): cmp %rcx,%rax
ec9d(6): jz 0x363(%rip)
eca3(6): cmp $0x6969,%rax
eca9(6): jz 0x357(%rip)
ecaf(4): add $0x1,%rbx
ecb3(5): cmp 0x38(%rsp),%rbx
ecb8(5): mov $0x1,0x5e(%rsp)
ecbd(6): jb 0xfffffecd(%rip)
ecc3(5): nop 0x0(%rax,%rax,1)
ecc8(5): cmp $0x0,0x5d(%rsp)
eccd(5): mov 0x20(%rsp),%rbp
ecd2(6): jz 0x3a4(%rip)
ecd8(4): mov 0x8(%r15),%rax
ecdc(4): mov 0x20(%r15),%rcx
ece0(3): test %rax,%rax
ece3(2): jz 0x2d(%rip)
ece5(3): nop (%rax)
ece8(4): mov 0x30(%rax),%rdx
ecec(7): lea 0x108(%rax),%rsi
ecf3(3): cmp %rsi,%rdx
ecf6(2): jz 0xd(%rip)
ecf8(4): sub 0x38(%rax),%rdx
ecfc(3): add %rcx,%rdx
ecff(4): mov %rdx,0x30(%rax)
ed03(4): mov %rcx,0x38(%rax)
ed07(4): mov 0x10(%rax),%rax
ed0b(3): test %rax,%rax
ed0e(2): jnz 0xffffffda(%rip)
ed10(5): mov 0x10(%rsp),%rax
ed15(2): jmp 0xe(%rip)
ed17(9): nop 0x0(%rax,%rax,1)
ed20(3): mov %rdx,%rax
ed23(5): cmp $0x0,0x58(%rax)
ed28(6): js 0x34e(%rip)
ed2e(4): mov 0x30(%rax),%rdx
ed32(7): lea 0x108(%rax),%rsi
ed39(3): cmp %rsi,%rdx
ed3c(2): jz 0xd(%rip)
ed3e(4): sub 0x38(%rax),%rdx
ed42(3): add %rcx,%rdx
ed45(4): mov %rdx,0x30(%rax)
ed49(4): mov 0x10(%rax),%rdx
ed4d(4): mov %rcx,0x38(%rax)
ed51(3): test %rdx,%rdx
ed54(2): jnz 0xffffffcc(%rip)
ed56(4): mov 0x8(%rax),%rdx
ed5a(2): jmp 0xffffffc6(%rip)
ed5c(4): nop 0x0(%rax)
ed60(4): mov 0x38(%r13),%rax
ed64(5): mov 0x40(%rsp),%rdi
ed69(4): mov %rax,0x30(%r13)
ed6d(4): mov 0x60(%r13),%rax
ed71(4): lea 0x1(%rax),%rdx
ed75(5): call 0xffff3b1b(%rip)
ed7a(4): mov 0x48(%r15),%eax
ed7e(5): jmp 0xfffffd7e(%rip)
ed83(5): nop 0x0(%rax,%rax,1)
ed88(5): mov %r13,0x10(%rsp)
ed8d(5): jmp 0xfffffde1(%rip)
ed92(6): nop 0x0(%rax,%rax,1)
ed98(b): mov $0x0,0x90(%r13)
eda3(5): mov $0x2,%eax
eda8(5): jmp 0xfffffda2(%rip)
edad(3): nop (%rax)
edb0(4): cmp $0x0,0x14(%rax)
edb4(2): jz 0xd(%rip)
edb6(5): cmp $0x2e,0x14(%rax)
edbb(6): jnz 0xfffffe19(%rip)
edc1(5): mov 0x8(%rsp),%r13
edc6(5): jmp 0xfffffdc4(%rip)
edcb(5): nop 0x0(%rax,%rax,1)
edd0(6): and $0xfb,%esi
edd6(6): jz 0xfffffd4b(%rip)
eddc(5): mov $0xb,%eax
ede1(3): cmp $0xb,%edx
ede4(5): mov %ax,0x70(%r13)
ede9(6): jbe 0x58d(%rip)
edef(b): mov $0x0,0x90(%r13)
edfa(5): mov $0x1,%eax
edff(5): jmp 0xfffffd4b(%rip)
ee04(4): nop 0x0(%rax)
ee08(2): xor %edx,%edx
ee0a(3): mov %r13,%rsi
ee0d(3): mov %r15,%rdi
ee10(5): call 0xfffff030(%rip)
ee15(5): mov %ax,0x70(%r13)
ee1a(5): jmp 0xfffffd37(%rip)
ee1f(1): nop 
ee20(5): movzx 0x5d(%rsp),%eax
ee25(5): jmp 0xfffffe2f(%rip)
ee2a(6): nop 0x0(%rax,%rax,1)
ee30(3): mov 0x48(%rdi),%eax
ee33(2): mov %eax,%edx
ee35(3): and $0x10,%edx
ee38(2): jz 0xf(%rip)
ee3a(2): test $0x1,%al
ee3c(5): mov $0x20000,%edx
ee41(6): jnz 0x107(%rip)
ee47(5): and $0x204,%eax
ee4c(4): mov 0x30(%rbp),%rsi
ee50(5): mov $0xffffff9c,%edi
ee55(5): cmp $0x200,%eax
ee5a(2): jnz 0x6(%rip)
ee5c(4): mov 0x2c(%r15),%edi
ee60(5): lea 0x64(%rsp),%rcx
ee65(5): call 0x1080b(%rip)
ee6a(3): test %rax,%rax
ee6d(4): mov %rax,0x18(%rbp)
ee71(6): jz 0x31f(%rip)
ee77(5): cmp $0xb,0x70(%rbp)
ee7c(6): jz 0x394(%rip)
ee82(4): mov 0x48(%r15),%edi
ee86(6): test $0x100,%edi
ee8c(6): jnz 0x124(%rip)
ee92(5): cmp $0x1,0x40(%r15)
ee97(3): sbb %rax,%rax
ee9a(5): and $0x186a1,%eax
ee9f(4): sub $0x1,%rax
eea3(5): cmp $0x2,0x58(%rsp)
eea8(5): mov %rax,0x38(%rsp)
eead(6): jz 0x353(%rip)
eeb3(4): mov 0x48(%r15),%edx
eeb7(4): mov 0x64(%rsp),%eax
eebb(3): and $0x38,%edx
eebe(3): cmp $0x18,%edx
eec1(6): jz 0x3a3(%rip)
eec7(5): cmp $0x3,0x58(%rsp)
eecc(6): mov $0x1,%r12d
eed2(3): setz %bl
eed5(5): test $0x2,0x49(%r15)
eeda(6): jnz 0x3e2(%rip)
eee0(2): test %eax,%eax
eee2(6): jns 0x366(%rip)
eee8(2): test %bl,%bl
eeea(2): jz 0x11(%rip)
eeec(3): test %r12b,%r12b
eeef(2): jz 0xc(%rip)
eef1(5): call 0xffff351f(%rip)
eef6(2): mov (%rax),%eax
eef8(3): mov %eax,0x40(%rbp)
eefb(5): or $0x1,0x72(%rbp)
ef00(4): mov 0x18(%rbp),%rdi
ef04(5): call 0xffff374c(%rip)
ef09(4): mov 0x48(%r15),%edi
ef0d(8): mov $0x0,0x18(%rbp)
ef15(6): test $0x200,%edi
ef1b(2): jz 0x15(%rip)
ef1d(4): mov 0x64(%rsp),%eax
ef21(2): test %eax,%eax
ef23(2): js 0xd(%rip)
ef25(2): mov %eax,%edi
ef27(5): call 0xffff3719(%rip)
ef2c(4): mov 0x48(%r15),%edi
ef30(8): mov $0x0,0x18(%rbp)
ef38(5): mov $0x0,0x5f(%rsp)
ef3d(5): jmp 0xfffffaee(%rip)
ef42(6): nop 0x0(%rax,%rax,1)
ef48(2): xor %edx,%edx
ef4a(5): cmp $0x0,0x58(%rbp)
ef4f(3): setnz %dl
ef52(3): shl/sal $0x11,%edx
ef55(5): jmp 0xfffffef2(%rip)
ef5a(6): nop 0x0(%rax,%rax,1)
ef60(4): mov 0x18(%rbp),%rdi
ef64(5): call 0xffff36ec(%rip)
ef69(5): cmp $0x3,0x58(%rsp)
ef6e(8): mov $0x0,0x18(%rbp)
ef76(6): jz 0x225(%rip)
ef7c(9): mov $0x0,0x10(%rsp)
ef85(5): mov 0x68(%rsp),%rbx
ef8a(9): xor $0x28,%rbx
ef93(5): mov 0x10(%rsp),%rax
ef98(6): jnz 0x3d9(%rip)
ef9e(4): add $0x78,%rsp
efa2(1): pop %rbx
efa3(1): pop %rbp
efa4(2): pop %r12
efa6(2): pop %r13
efa8(2): pop %r14
efaa(2): pop %r15
efac(1): ret near (%rsp)
efad(3): nop (%rax)
efb0(4): lea 0x58(%r15),%rbx
efb4(3): mov %rbp,%rdx
efb7(3): mov %rbx,%rsi
efba(5): call 0xfffff946(%rip)
efbf(2): xor %edx,%edx
efc1(3): mov %rbp,%rsi
efc4(3): mov %r15,%rdi
efc7(5): call 0xffffee79(%rip)
efcc(4): mov 0x48(%r15),%edi
efd0(3): mov %rbp,%rdx
efd3(3): mov %rbx,%rsi
efd6(5): call 0xfffff87a(%rip)
efdb(2): test %al,%al
efdd(6): jnz 0xfffffeb5(%rip)
efe3(5): call 0xffff342d(%rip)
efe8(9): mov $0x0,0x10(%rsp)
eff1(6): mov $0xc,(%rax)
eff7(2): jmp 0xffffff8e(%rip)
eff9(7): nop 0x0(%rax)
f000(5): mov $0x0,0x5e(%rsp)
f005(5): jmp 0xfffffb76(%rip)
f00a(6): nop 0x0(%rax,%rax,1)
f010(3): mov %r13,%rdi
f013(5): mov 0x20(%rsp),%rbp
f018(4): mov (%r12),%ebx
f01c(5): call 0xffff39f4(%rip)
f021(5): mov 0x10(%rsp),%rdi
f026(5): call 0xfffff18a(%rip)
f02b(4): mov 0x18(%rbp),%rdi
f02f(5): call 0xffff3621(%rip)
f034(6): mov $0x7,%r9d
f03a(8): mov $0x0,0x18(%rbp)
f042(9): mov $0x0,0x10(%rsp)
f04b(5): mov %r9w,0x70(%rbp)
f050(8): or $0x2000,0x48(%r15)
f058(4): mov %ebx,(%r12)
f05c(5): jmp 0xffffff29(%rip)
f061(7): nop 0x0(%rax)
f068(3): mov %rax,%rbp
f06b(5): cmp $0x0,0x5d(%rsp)
f070(6): jnz 0xfffffc68(%rip)
f076(5): test $0x4,0x48(%r15)
f07b(2): jz 0x20(%rip)
f07d(5): mov 0x18(%rsp),%rax
f082(4): cmp %rax,0x30(%r15)
f086(2): jz 0x7(%rip)
f088(3): test %rbx,%rbx
f08b(2): jnz 0x8(%rip)
f08d(6): sub $0x1,0x40(%rsp)
f093(5): mov 0x40(%rsp),%rax
f098(3): mov $0x0,(%rax)
f09b(6): cmp $0x0,0x50(%rsp)
f0a1(2): jnz 0x6f(%rip)
f0a3(5): cmp $0x0,0x5f(%rsp)
f0a8(2): jz 0x68(%rip)
f0aa(5): cmp $0x1,0x58(%rsp)
f0af(2): jz 0x41(%rip)
f0b1(3): test %rbx,%rbx
f0b4(2): jz 0x3c(%rip)
f0b6(5): cmp $0x0,0x5e(%rsp)
f0bb(6): jnz 0xfd(%rip)
f0c1(5): cmp $0x0,0x40(%r15)
f0c6(6): jz 0xfffffebf(%rip)
f0cc(4): cmp $0x1,%rbx
f0d0(6): jz 0xfffffeb5(%rip)
f0d6(5): mov 0x10(%rsp),%rsi
f0db(3): mov %rbx,%rdx
f0de(3): mov %r15,%rdi
f0e1(5): call 0xffffef2f(%rip)
f0e6(5): mov %rax,0x10(%rsp)
f0eb(5): jmp 0xfffffe9a(%rip)
f0f0(5): cmp $0x0,0x58(%rbp)
f0f5(6): jnz 0x131(%rip)
f0fb(3): mov %r15,%rdi
f0fe(5): call 0xfffff352(%rip)
f103(2): test %eax,%eax
f105(3): setnz %al
f108(2): test %al,%al
f10a(6): jnz 0x189(%rip)
f110(3): test %rbx,%rbx
f113(2): jnz 0xffffffa3(%rip)
f115(5): cmp $0x3,0x58(%rsp)
f11a(6): jz 0x1be(%rip)
f120(5): mov 0x10(%rsp),%rdi
f125(5): call 0xfffff08b(%rip)
f12a(9): mov $0x0,0x10(%rsp)
f133(5): jmp 0xfffffe52(%rip)
f138(8): nop 0x0(%rax,%rax,1)
f140(4): mov (%r12),%eax
f144(5): mov 0x20(%rsp),%rbp
f149(2): test %eax,%eax
f14b(2): jz 0x23(%rip)
f14d(3): test %rbx,%rbx
f150(3): mov %eax,0x40(%rbp)
f153(6): jnz 0x136(%rip)
f159(6): cmp $0x0,0x50(%rsp)
f15f(5): mov $0x4,%eax
f164(6): jnz 0x125(%rip)
f16a(4): mov %ax,0x70(%rbp)
f16e(4): mov 0x18(%rbp),%rdi
f172(3): test %rdi,%rdi
f175(6): jz 0xfffffef6(%rip)
f17b(5): call 0xffff34d5(%rip)
f180(8): mov $0x0,0x18(%rbp)
f188(5): jmp 0xfffffee3(%rip)
f18d(3): nop (%rax)
f190(5): cmp $0x3,0x58(%rsp)
f195(6): jnz 0xfffffde7(%rip)
f19b(6): mov $0x4,%r10d
f1a1(5): mov %r10w,0x70(%rbp)
f1a6(5): call 0xffff326a(%rip)
f1ab(2): mov (%rax),%eax
f1ad(3): mov %eax,0x40(%rbp)
f1b0(5): jmp 0xfffffdcc(%rip)
f1b5(3): nop (%rax)
f1b8(7): lea 0xffffec51(%rip),%rax
f1bf(5): mov 0x10(%rsp),%rsi
f1c4(3): mov %rbx,%rdx
f1c7(3): mov %r15,%rdi
f1ca(4): mov %rax,0x40(%r15)
f1ce(5): call 0xffffee42(%rip)
f1d3(8): mov $0x0,0x40(%r15)
f1db(5): mov %rax,0x10(%rsp)
f1e0(5): jmp 0xfffffda5(%rip)
f1e5(3): nop (%rax)
f1e8(9): mov $0x186a0,0x38(%rsp)
f1f1(5): mov $0x1,0x5f(%rsp)
f1f6(4): mov 0x48(%r15),%edi
f1fa(5): jmp 0xfffff831(%rip)
f1ff(1): nop 
f200(5): mov $0x0,0x5f(%rsp)
f205(4): mov 0x48(%r15),%edi
f209(5): jmp 0xfffff822(%rip)
f20e(2): nop 
f210(2): xor %edx,%edx
f212(3): mov %rbp,%rsi
f215(3): mov %r15,%rdi
f218(5): call 0xffffec28(%rip)
f21d(4): mov %ax,0x70(%rbp)
f221(5): jmp 0xfffffc71(%rip)
f226(4): mov 0x8(%rbp),%rsi
f22a(7): lea 0x1346a(%rip),%rcx
f231(5): mov $0xffffffff,%edx
f236(3): mov %r15,%rdi
f239(5): call 0xfffff397(%rip)
f23e(2): test %eax,%eax
f240(3): setnz %al
f243(5): jmp 0xfffffec5(%rip)
f248(2): xor %ecx,%ecx
f24a(2): mov %eax,%edx
f24c(3): mov %rbp,%rsi
f24f(3): mov %r15,%rdi
f252(5): call 0xfffff37e(%rip)
f257(2): test %eax,%eax
f259(6): jnz 0xfffffc8f(%rip)
f25f(5): jmp 0xfffff7c3(%rip)
f264(8): cmp $0x2,0x88(%rbp)
f26c(6): jnz 0xfffffc5b(%rip)
f272(2): mov %eax,%esi
f274(3): mov %rbp,%rdi
f277(5): call 0xfffff0f9(%rip)
f27c(2): test %eax,%eax
f27e(2): jnz 0x80(%rip)
f280(4): mov 0x64(%rsp),%eax
f284(5): jmp 0xfffffc43(%rip)
f289(5): mov $0x7,%eax
f28e(5): jmp 0xfffffedc(%rip)
f293(5): mov $0x7,%edi
f298(4): mov %di,0x70(%rbp)
f29c(8): or $0x2000,0x48(%r15)
f2a4(5): mov 0x10(%rsp),%rdi
f2a9(5): call 0xffffef07(%rip)
f2ae(9): mov $0x0,0x10(%rsp)
f2b7(5): jmp 0xfffffcce(%rip)
f2bc(2): mov %eax,%edi
f2be(5): mov $0x3,%edx
f2c3(5): mov $0x406,%esi
f2c8(2): xor %eax,%eax
f2ca(5): call 0x10466(%rip)
f2cf(4): mov %eax,0x64(%rsp)
f2d3(5): jmp 0xfffffc0d(%rip)
f2d8(4): movzx 0x70(%rbp),%eax
f2dc(4): cmp $0x7,%ax
f2e0(6): jz 0xfffffe40(%rip)
f2e6(4): cmp $0x4,%ax
f2ea(6): jz 0xfffffe36(%rip)
f2f0(5): mov $0x6,%esi
f2f5(4): mov %si,0x70(%rbp)
f2f9(5): jmp 0xfffffe27(%rip)
f2fe(5): cmp $0x3,0x58(%rsp)
f303(6): jnz 0xfffffefd(%rip)
f309(4): mov 0x64(%rsp),%eax
f30d(3): xor %r12d,%r12d
f310(5): mov $0x1,%ebx
f315(5): jmp 0xfffffbc0(%rip)
f31a(6): nop 0x0(%rax,%rax,1)
f320(3): mov %r13,%rdi
f323(5): mov 0x20(%rsp),%rbp
f328(5): call 0xffff36e8(%rip)
f32d(5): mov 0x10(%rsp),%rdi
f332(5): call 0xffffee7e(%rip)
f337(4): mov 0x18(%rbp),%rdi
f33b(5): call 0xffff3315(%rip)
f340(6): mov $0x7,%r8d
f346(8): mov $0x0,0x18(%rbp)
f34e(9): mov $0x0,0x10(%rsp)
f357(5): mov %r8w,0x70(%rbp)
f35c(8): or $0x2000,0x48(%r15)
f364(8): mov $0x24,(%r12)
f36c(5): jmp 0xfffffc19(%rip)
f371(5): call 0xffff31ef(%rip)
f376(7): lea 0x13323(%rip),%rax
f37d(3): mov 0x0(%rax,%rdx,4),%eax
f380(7): mov %eax,0x90(%r13)
f387(5): mov $0x1,%eax
f38c(5): jmp 0xfffff7be(%rip)

"rpl_fts_open" :
f3a0(2): push %r15
f3a2(2): push %r14
f3a4(2): push %r13
f3a6(2): push %r12
f3a8(1): push %rbp
f3a9(1): push %rbx
f3aa(4): sub $0x28,%rsp
f3ae(6): test $0xfffff000,%esi
f3b4(6): jnz 0x384(%rip)
f3ba(2): mov %esi,%eax
f3bc(2): mov %esi,%ebp
f3be(5): and $0x204,%eax
f3c3(5): cmp $0x204,%eax
f3c8(6): jz 0x370(%rip)
f3ce(4): test $0x12,%sil
f3d2(6): jz 0x366(%rip)
f3d8(3): mov %rdi,%r13
f3db(5): mov $0x1,%esi
f3e0(5): mov $0x80,%edi
f3e5(3): mov %rdx,%r14
f3e8(5): call 0xffff32c8(%rip)
f3ed(3): test %rax,%rax
f3f0(3): mov %rax,%rbx
f3f3(6): jz 0x25b(%rip)
f3f9(4): test $0x2,%bpl
f3fd(4): mov %r14,0x40(%rax)
f401(6): jnz 0x25f(%rip)
f407(4): mov 0x0(%r13),%rdi
f40b(3): mov %ebp,0x48(%rax)
f40e(7): mov $0xffffff9c,0x2c(%rbx)
f415(3): test %rdi,%rdi
f418(6): jz 0x267(%rip)
f41e(3): mov %r13,%r15
f421(3): xor %r12d,%r12d
f424(4): nop 0x0(%rax)
f428(5): call 0xffff3108(%rip)
f42d(3): cmp %rax,%r12
f430(4): cmovnae %rax,%r12
f434(4): add $0x8,%r15
f438(3): mov (%r15),%rdi
f43b(3): test %rdi,%rdi
f43e(2): jnz 0xffffffea(%rip)
f440(5): lea 0x1(%r12),%rdx
f445(5): mov $0x1000,%eax
f44a(7): cmp $0x1000,%rdx
f451(4): cmovnae %rax,%rdx
f455(4): lea 0x30(%rbx),%rsi
f459(4): lea 0x20(%rbx),%rdi
f45d(5): call 0xfffff053(%rip)
f462(2): test %al,%al
f464(4): mov %al,0x16(%rsp)
f468(6): jz 0x2a1(%rip)
f46e(4): mov 0x0(%r13),%rsi
f472(3): test %rsi,%rsi
f475(6): jz 0x2ab(%rip)
f47b(7): lea 0x12b5f(%rip),%rsi
f482(2): xor %edx,%edx
f484(3): mov %rbx,%rdi
f487(5): call 0xffffec99(%rip)
f48c(3): test %rax,%rax
f48f(3): mov %rax,%r15
f492(6): jz 0x26e(%rip)
f498(7): mov $0xffffffff,%rax
f49f(3): test %r14,%r14
f4a2(4): mov 0x0(%r13),%rsi
f4a6(4): mov %rax,0x58(%r15)
f4aa(4): mov %rax,0x68(%r15)
f4ae(2): jz 0xf(%rip)
f4b0(3): mov 0x48(%rbx),%eax
f4b3(3): shr $0xa,%eax
f4b6(3): and $0x1,%eax
f4b9(4): mov %al,0x16(%rsp)
f4bd(3): test %rsi,%rsi
f4c0(6): jz 0x26c(%rip)
f4c6(3): shr $0xb,%ebp
f4c9(9): mov $0x0,0x18(%rsp)
f4d2(3): xor %r12d,%r12d
f4d5(3): xor $0x1,%ebp
f4d8(2): mov %ebp,%eax
f4da(2): xor %ebp,%ebp
f4dc(3): and $0x1,%eax
f4df(4): mov %al,0x17(%rsp)
f4e3(2): jmp 0x79(%rip)
f4e5(3): nop (%rax)
f4e8(3): mov %rax,%rdx
f4eb(3): mov %rbx,%rdi
f4ee(5): call 0xffffec32(%rip)
f4f3(3): test %rax,%rax
f4f6(3): mov %rax,%rcx
f4f9(6): jz 0x1f7(%rip)
f4ff(8): mov $0x0,0x58(%rax)
f507(4): mov %r15,0x8(%rax)
f50b(7): lea 0x108(%rax),%rax
f512(3): test %r12,%r12
f515(4): mov %rax,0x30(%rcx)
f519(6): jz 0x177(%rip)
f51f(5): cmp $0x0,0x16(%rsp)
f524(6): jz 0x16c(%rip)
f52a(5): mov $0xb,%esi
f52f(3): test %r14,%r14
f532(b): mov $0x2,0xa8(%rcx)
f53d(4): mov %si,0x70(%rcx)
f541(6): jz 0x18f(%rip)
f547(4): mov %r12,0x10(%rcx)
f54b(3): mov %rcx,%r12
f54e(4): add $0x1,%rbp
f552(5): mov 0x0(%r13,%rbp,8),%rsi
f557(3): test %rsi,%rsi
f55a(2): jz 0x56(%rip)
f55c(3): mov %rsi,%rdi
f55f(5): mov %rsi,0x8(%rsp)
f564(5): call 0xffff2fcc(%rip)
f569(4): cmp $0x2,%rax
f56d(5): mov 0x8(%rsp),%rsi
f572(6): jbe 0xffffff76(%rip)
f578(5): cmp $0x0,0x17(%rsp)
f57d(6): jz 0xffffff6b(%rip)
f583(5): cmp $0x2f,0xffffffff(%rsi,%rax,1)
f588(6): jnz 0xffffff60(%rip)
f58e(2): nop 
f590(5): cmp $0x2f,0xfffffffe(%rsi,%rax,1)
f595(6): jnz 0xffffff53(%rip)
f59b(4): sub $0x1,%rax
f59f(4): cmp $0x1,%rax
f5a3(2): jnz 0xffffffed(%rip)
f5a5(5): jmp 0xffffff43(%rip)
f5aa(6): nop 0x0(%rax,%rax,1)
f5b0(3): test %r14,%r14
f5b3(2): jz 0x19(%rip)
f5b5(4): cmp $0x1,%rbp
f5b9(2): jbe 0x13(%rip)
f5bb(3): mov %r12,%rsi
f5be(3): mov %rbp,%rdx
f5c1(3): mov %rbx,%rdi
f5c4(5): call 0xffffea4c(%rip)
f5c9(3): mov %rax,%r12
f5cc(7): lea 0x12a0e(%rip),%rsi
f5d3(2): xor %edx,%edx
f5d5(3): mov %rbx,%rdi
f5d8(5): call 0xffffeb48(%rip)
f5dd(3): test %rax,%rax
f5e0(3): mov %rax,(%rbx)
f5e3(6): jz 0x10d(%rip)
f5e9(3): mov 0x48(%rbx),%edi
f5ec(5): mov $0x9,%edx
f5f1(4): lea 0x58(%rbx),%rsi
f5f5(4): mov %r12,0x10(%rax)
f5f9(4): mov %dx,0x70(%rax)
f5fd(8): mov $0x1,0x58(%rax)
f605(5): call 0xffffef1b(%rip)
f60a(2): test %al,%al
f60c(6): jz 0xe4(%rip)
f612(3): mov 0x48(%rbx),%esi
f615(6): test $0x204,%esi
f61b(2): jnz 0x25(%rip)
f61d(3): mov 0x2c(%rbx),%edi
f620(7): lea 0x13075(%rip),%rdx
f627(5): call 0xffffef69(%rip)
f62c(2): test %eax,%eax
f62e(3): mov %eax,0x28(%rbx)
f631(2): jns 0xf(%rip)
f633(4): or $0x4,0x48(%rbx)
f637(9): nop 0x0(%rax,%rax,1)
f640(4): lea 0x60(%rbx),%rdi
f644(5): mov $0xffffffff,%esi
f649(5): call 0xfec7(%rip)
f64e(4): add $0x28,%rsp
f652(3): mov %rbx,%rax
f655(1): pop %rbx
f656(1): pop %rbp
f657(2): pop %r12
f659(2): pop %r13
f65b(2): pop %r14
f65d(2): pop %r15
f65f(1): ret near (%rsp)
f660(4): mov 0x0(%r13),%rdi
f664(2): mov %ebp,%eax
f666(7): mov $0xffffff9c,0x2c(%rbx)
f66d(3): and $0xfd,%ah
f670(3): or $0x4,%eax
f673(3): test %rdi,%rdi
f676(3): mov %eax,0x48(%rbx)
f679(6): jnz 0xfffffda5(%rip)
f67f(5): mov $0x1000,%edx
f684(5): jmp 0xfffffdd1(%rip)
f689(7): nop 0x0(%rax)
f690(2): xor %edx,%edx
f692(3): mov %rcx,%rsi
f695(3): mov %rbx,%rdi
f698(5): mov %rcx,0x8(%rsp)
f69d(5): call 0xffffe7a3(%rip)
f6a2(5): mov 0x8(%rsp),%rcx
f6a7(3): test %r14,%r14
f6aa(4): mov %ax,0x70(%rcx)
f6ae(6): jnz 0xfffffe99(%rip)
f6b4(3): test %r12,%r12
f6b7(8): mov $0x0,0x10(%rcx)
f6bf(2): jnz 0x19(%rip)
f6c1(5): mov %rcx,0x18(%rsp)
f6c6(3): mov %rcx,%r12
f6c9(5): jmp 0xfffffe85(%rip)
f6ce(2): nop 
f6d0(8): mov $0x0,0x10(%rcx)
f6d8(5): mov 0x18(%rsp),%rax
f6dd(5): mov %rcx,0x18(%rsp)
f6e2(4): mov %rcx,0x10(%rax)
f6e6(5): jmp 0xfffffe68(%rip)
f6eb(5): nop 0x0(%rax,%rax,1)
f6f0(3): mov %r12,%rdi
f6f3(5): call 0xffffeabd(%rip)
f6f8(3): mov %r15,%rdi
f6fb(5): call 0xffff3315(%rip)
f700(4): mov 0x20(%rbx),%rdi
f704(5): call 0xffff330c(%rip)
f709(3): mov %rbx,%rdi
f70c(2): xor %ebx,%ebx
f70e(5): call 0xffff3302(%rip)
f713(5): jmp 0xffffff3b(%rip)
f718(8): nop 0x0(%rax,%rax,1)
f720(3): xor %r15d,%r15d
f723(3): test %r14,%r14
f726(6): jnz 0xfffffd8a(%rip)
f72c(3): xor %r12d,%r12d
f72f(5): jmp 0xfffffe9d(%rip)
f734(4): nop 0x0(%rax)
f738(5): call 0xffff2cd8(%rip)
f73d(2): xor %ebx,%ebx
f73f(6): mov $0x16,(%rax)
f745(5): jmp 0xffffff09(%rip)

"rpl_fts_close" :
f750(2): push %r12
f752(1): push %rbp
f753(3): mov %rdi,%rbp
f756(1): push %rbx
f757(3): mov (%rdi),%rdi
f75a(3): test %rdi,%rdi
f75d(2): jz 0x46(%rip)
f75f(5): cmp $0x0,0x58(%rdi)
f764(2): jns 0x1b(%rip)
f766(5): jmp 0x11a(%rip)
f76b(5): nop 0x0(%rax,%rax,1)
f770(5): call 0xffff32a0(%rip)
f775(5): cmp $0x0,0x58(%rbx)
f77a(3): mov %rbx,%rdi
f77d(2): js 0x1e(%rip)
f77f(4): mov 0x10(%rdi),%rbx
f783(3): test %rbx,%rbx
f786(2): jnz 0xffffffea(%rip)
f788(4): mov 0x8(%rdi),%rbx
f78c(5): call 0xffff3284(%rip)
f791(5): cmp $0x0,0x58(%rbx)
f796(3): mov %rbx,%rdi
f799(2): jns 0xffffffe6(%rip)
f79b(3): mov %rbx,%rdi
f79e(5): call 0xffff3272(%rip)
f7a3(4): mov 0x8(%rbp),%rdi
f7a7(3): test %rdi,%rdi
f7aa(2): jz 0x7(%rip)
f7ac(5): call 0xffffea04(%rip)
f7b1(4): mov 0x10(%rbp),%rdi
f7b5(5): call 0xffff325b(%rip)
f7ba(4): mov 0x20(%rbp),%rdi
f7be(5): call 0xffff3252(%rip)
f7c3(3): mov 0x48(%rbp),%eax
f7c6(3): test $0x2,%ah
f7c9(2): jz 0x67(%rip)
f7cb(3): mov 0x2c(%rbp),%edi
f7ce(2): test %edi,%edi
f7d0(6): jns 0x90(%rip)
f7d6(2): xor %ebx,%ebx
f7d8(4): lea 0x60(%rbp),%rdi
f7dc(5): call 0xffffea24(%rip)
f7e1(4): mov 0x50(%rbp),%rdi
f7e5(3): test %rdi,%rdi
f7e8(2): jz 0x7(%rip)
f7ea(5): call 0xffff8fc6(%rip)
f7ef(7): test $0x102,0x48(%rbp)
f7f6(4): mov 0x58(%rbp),%rdi
f7fa(2): jz 0x26(%rip)
f7fc(3): test %rdi,%rdi
f7ff(2): jz 0x7(%rip)
f801(5): call 0xffff8faf(%rip)
f806(3): mov %rbp,%rdi
f809(5): call 0xffff3207(%rip)
f80e(2): test %ebx,%ebx
f810(6): jnz 0xb1(%rip)
f816(2): mov %ebx,%eax
f818(1): pop %rbx
f819(1): pop %rbp
f81a(2): pop %r12
f81c(1): ret near (%rsp)
f81d(3): nop (%rax)
f820(5): call 0xffff31f0(%rip)
f825(2): jmp 0xffffffe1(%rip)
f827(9): nop 0x0(%rax,%rax,1)
f830(2): test $0x4,%al
f832(2): jnz 0xffffffa4(%rip)
f834(3): mov 0x28(%rbp),%edi
f837(5): call 0xffff2fe9(%rip)
f83c(2): test %eax,%eax
f83e(2): jnz 0x52(%rip)
f840(3): mov 0x28(%rbp),%edi
f843(5): call 0xffff2dfd(%rip)
f848(2): test %eax,%eax
f84a(2): jz 0xffffff8c(%rip)
f84c(5): call 0xffff2bc4(%rip)
f851(3): mov %rax,%r12
f854(2): jmp 0x64(%rip)
f856(a): nop 0x0(%rax,%rax,1)
f860(5): call 0xffff2de0(%rip)
f865(2): test %eax,%eax
f867(6): jz 0xffffff6f(%rip)
f86d(5): call 0xffff2ba3(%rip)
f872(2): mov (%rax),%ebx
f874(5): jmp 0xffffff64(%rip)
f879(7): nop 0x0(%rax)
f880(3): mov %rdi,%rbx
f883(3): mov %rbx,%rdi
f886(5): call 0xffff318a(%rip)
f88b(5): jmp 0xffffff18(%rip)
f890(5): call 0xffff2b80(%rip)
f895(3): mov 0x28(%rbp),%edi
f898(3): mov %rax,%r12
f89b(2): mov (%rax),%ebx
f89d(5): call 0xffff2da3(%rip)
f8a2(2): test %eax,%eax
f8a4(6): jz 0xffffff34(%rip)
f8aa(2): test %ebx,%ebx
f8ac(6): jnz 0xffffff2c(%rip)
f8b2(6): nop 0x0(%rax,%rax,1)
f8b8(4): mov (%r12),%ebx
f8bc(5): jmp 0xffffff1c(%rip)
f8c1(5): call 0xffff2b4f(%rip)
f8c6(2): mov %ebx,(%rax)
f8c8(5): mov $0xffffffff,%ebx
f8cd(5): jmp 0xffffff49(%rip)

"rpl_fts_read" :
f8e0(2): push %r14
f8e2(2): push %r13
f8e4(2): push %r12
f8e6(1): push %rbp
f8e7(1): push %rbx
f8e8(3): mov (%rdi),%rbp
f8eb(3): test %rbp,%rbp
f8ee(6): jz 0x110(%rip)
f8f4(3): mov 0x48(%rdi),%edx
f8f7(3): test $0x20,%dh
f8fa(6): jnz 0x104(%rip)
f900(4): movzx 0x74(%rbp),%eax
f904(5): mov $0x3,%ebx
f909(3): mov %rdi,%r12
f90c(4): mov %bx,0x74(%rbp)
f910(4): cmp $0x1,%ax
f914(6): jz 0x24c(%rip)
f91a(4): cmp $0x2,%ax
f91e(4): movzx 0x70(%rbp),%ecx
f922(6): jz 0xee(%rip)
f928(4): cmp $0x1,%cx
f92c(2): jnz 0x34(%rip)
f92e(5): jmp 0x222(%rip)
f933(5): nop 0x0(%rax,%rax,1)
f938(4): mov %rbx,(%r12)
f93c(3): mov %rbp,%rdi
f93f(5): call 0xffff30d1(%rip)
f944(5): cmp $0x0,0x58(%rbx)
f949(6): jz 0x237(%rip)
f94f(4): movzx 0x74(%rbx),%eax
f953(3): mov %rbx,%rbp
f956(4): cmp $0x4,%ax
f95a(6): jnz 0x32e(%rip)
f960(4): mov 0x10(%rbp),%rbx
f964(3): test %rbx,%rbx
f967(2): jnz 0xffffffd1(%rip)
f969(4): mov 0x8(%rbp),%rbx
f96d(5): cmp $0x0,0x18(%rbx)
f972(6): jnz 0x56e(%rip)
f978(4): mov %rbx,(%r12)
f97c(3): mov %rbp,%rdi
f97f(5): call 0xffff3091(%rip)
f984(5): cmp $0xffffffff,0x58(%rbx)
f989(6): jz 0x4b9(%rip)
f98f(5): cmp $0xb,0x70(%rbx)
f994(6): jz 0x13b(%rip)
f99a(5): mov 0x20(%r12),%rdx
f99f(4): mov 0x48(%rbx),%rax
f9a3(4): mov $0x0,0x0(%rdx,%rax,1)
f9a7(5): cmp $0x0,0x58(%rbx)
f9ac(6): jz 0x3c4(%rip)
f9b2(4): movzx 0x72(%rbx),%eax
f9b6(2): test $0x2,%al
f9b8(6): jz 0x370(%rip)
f9be(5): mov 0x48(%r12),%eax
f9c3(3): mov 0x44(%rbx),%edi
f9c6(2): test $0x4,%al
f9c8(6): jz 0x404(%rip)
f9ce(5): call 0xffff2c72(%rip)
f9d3(5): mov 0x48(%r12),%edi
f9d8(5): cmp $0x2,0x70(%rbx)
f9dd(2): jz 0x16(%rip)
f9df(3): mov 0x40(%rbx),%ecx
f9e2(2): test %ecx,%ecx
f9e4(6): jz 0x3a4(%rip)
f9ea(5): mov $0x7,%edx
f9ef(4): mov %dx,0x70(%rbx)
f9f3(6): and $0x2000,%edi
f9f9(3): mov %rbx,%rbp
f9fc(2): jz 0x7e(%rip)
f9fe(2): xor %ebp,%ebp
fa00(1): pop %rbx
fa01(3): mov %rbp,%rax
fa04(1): pop %rbp
fa05(2): pop %r12
fa07(2): pop %r13
fa09(2): pop %r14
fa0b(1): ret near (%rsp)
fa0c(4): nop 0x0(%rax)
fa10(3): lea 0xfffffff4(%rcx),%eax
fa13(4): cmp $0x1,%ax
fa17(2): jbe 0x79(%rip)
fa19(4): cmp $0x1,%cx
fa1d(6): jnz 0xffffff43(%rip)
fa23(3): test $0x40,%dl
fa26(6): jz 0xb2(%rip)
fa2c(5): mov 0x18(%r12),%rax
fa31(4): cmp %rax,0x78(%rbp)
fa35(6): jz 0xa3(%rip)
fa3b(4): test $0x2,0x72(%rbp)
fa3f(6): jnz 0x4e1(%rip)
fa45(5): mov 0x8(%r12),%rdi
fa4a(3): test %rdi,%rdi
fa4d(2): jz 0x10(%rip)
fa4f(5): call 0xffffe761(%rip)
fa54(9): mov $0x0,0x8(%r12)
fa5d(5): mov 0x48(%r12),%edi
fa62(6): mov $0x6,%r10d
fa68(5): lea 0x58(%r12),%rsi
fa6d(5): mov %r10w,0x70(%rbp)
fa72(3): mov %rbp,%rdx
fa75(5): call 0xffffee8b(%rip)
fa7a(1): pop %rbx
fa7b(3): mov %rbp,%rax
fa7e(1): pop %rbp
fa7f(2): pop %r12
fa81(2): pop %r13
fa83(2): pop %r14
fa85(1): ret near (%rsp)
fa86(a): nop 0x0(%rax,%rax,1)
fa90(5): mov $0x1,%edx
fa95(3): mov %rbp,%rsi
fa98(5): call 0xffffe3a8(%rip)
fa9d(4): cmp $0x1,%ax
faa1(4): mov %ax,0x70(%rbp)
faa5(6): jz 0x347(%rip)
faab(4): cmp $0xb,%ax
faaf(4): mov %rbp,(%r12)
fab3(2): jnz 0xffffffc7(%rip)
fab5(3): nop (%rax)
fab8(7): mov 0xa8(%rbp),%rax
fabf(4): cmp $0x2,%rax
fac3(6): jz 0x3a5(%rip)
fac9(4): cmp $0x1,%rax
facd(2): jz 0xffffffad(%rip)
facf(5): call 0xffff2931(%rip)
fad4(4): nop 0x0(%rax)
fad8(5): mov 0x8(%r12),%rdi
fadd(3): test %rdi,%rdi
fae0(6): jz 0x218(%rip)
fae6(3): test $0x10,%dh
fae9(6): jnz 0x1f9(%rip)
faef(4): mov 0x30(%rbp),%rcx
faf3(5): mov $0xffffffff,%edx
faf8(3): mov %rbp,%rsi
fafb(3): mov %r12,%rdi
fafe(5): call 0xffffead2(%rip)
fb03(2): test %eax,%eax
fb05(6): jz 0x2bd(%rip)
fb0b(5): call 0xffff2905(%rip)
fb10(2): mov (%rax),%eax
fb12(5): or $0x1,0x72(%rbp)
fb17(3): mov %eax,0x40(%rbp)
fb1a(5): mov 0x8(%r12),%rbp
fb1f(3): test %rbp,%rbp
fb22(6): jz 0x1f4(%rip)
fb28(3): mov %rbp,%rax
fb2b(5): nop 0x0(%rax,%rax,1)
fb30(4): mov 0x8(%rax),%rdx
fb34(4): mov 0x30(%rdx),%rdx
fb38(4): mov %rdx,0x30(%rax)
fb3c(4): mov 0x10(%rax),%rax
fb40(3): test %rax,%rax
fb43(2): jnz 0xffffffed(%rip)
fb45(5): jmp 0x1d1(%rip)
fb4a(6): nop 0x0(%rax,%rax,1)
fb50(4): cmp $0x4,%ax
fb54(6): jnz 0xfffffecf(%rip)
fb5a(5): jmp 0xfffffee1(%rip)
fb5f(1): nop 
fb60(3): mov %rbp,%rsi
fb63(2): xor %edx,%edx
fb65(5): call 0xffffe2db(%rip)
fb6a(4): mov %ax,0x70(%rbp)
fb6e(3): mov %rbp,%rax
fb71(1): pop %rbx
fb72(1): pop %rbp
fb73(2): pop %r12
fb75(2): pop %r13
fb77(2): pop %r14
fb79(1): ret near (%rsp)
fb7a(6): nop 0x0(%rax,%rax,1)
fb80(3): mov %r12,%rdi
fb83(5): call 0xffffe8cd(%rip)
fb88(2): test %eax,%eax
fb8a(6): jnz 0x407(%rip)
fb90(9): test $0x102,0x48(%r12)
fb99(5): mov 0x58(%r12),%rdi
fb9e(6): jz 0x13a(%rip)
fba4(3): test %rdi,%rdi
fba7(2): jz 0x7(%rip)
fba9(5): call 0xffff8c07(%rip)
fbae(4): mov 0x60(%rbx),%rdx
fbb2(7): lea 0x108(%rbx),%rbp
fbb9(5): mov 0x20(%r12),%rdi
fbbe(3): mov %rbp,%rsi
fbc1(4): mov %rdx,0x48(%rbx)
fbc5(4): add $0x1,%rdx
fbc9(5): call 0xffff2cc7(%rip)
fbce(5): mov $0x2f,%esi
fbd3(3): mov %rbp,%rdi
fbd6(5): call 0xffff29fa(%rip)
fbdb(3): test %rax,%rax
fbde(2): jz 0x2d(%rip)
fbe0(3): cmp %rax,%rbp
fbe3(6): jz 0x1cd(%rip)
fbe9(4): lea 0x1(%rax),%r13
fbed(3): mov %r13,%rdi
fbf0(5): call 0xffff2940(%rip)
fbf5(4): lea 0x1(%rax),%rdx
fbf9(3): mov %rax,%r14
fbfc(3): mov %r13,%rsi
fbff(3): mov %rbp,%rdi
fc02(5): call 0xffff2c8e(%rip)
fc07(4): mov %r14,0x60(%rbx)
fc0b(5): mov 0x20(%r12),%rax
fc10(5): mov 0x48(%r12),%edi
fc15(5): lea 0x58(%r12),%rsi
fc1a(3): mov %rbx,%rbp
fc1d(4): mov %rax,0x38(%rbx)
fc21(4): mov %rax,0x30(%rbx)
fc25(5): call 0xffffe8fb(%rip)
fc2a(4): movzx 0x70(%rbx),%eax
fc2e(4): cmp $0xb,%ax
fc32(4): mov %rbp,(%r12)
fc36(6): jz 0xfffffe82(%rip)
fc3c(4): cmp $0x1,%ax
fc40(6): jnz 0xfffffe3a(%rip)
fc46(5): cmp $0x0,0x58(%rbp)
fc4b(2): jnz 0xb(%rip)
fc4d(4): mov 0x78(%rbp),%rax
fc51(5): mov %rax,0x18(%r12)
fc56(5): mov 0x48(%r12),%edi
fc5b(5): lea 0x58(%r12),%rsi
fc60(3): mov %rbp,%rdx
fc63(5): call 0xffffebed(%rip)
fc68(2): test %al,%al
fc6a(6): jnz 0xfffffe10(%rip)
fc70(5): call 0xffff27a0(%rip)
fc75(2): xor %ebp,%ebp
fc77(6): mov $0xc,(%rax)
fc7d(5): jmp 0xfffffdfd(%rip)
fc82(6): nop 0x0(%rax,%rax,1)
fc88(4): cmp $0x2,%ax
fc8c(6): jz 0x2a1(%rip)
fc92(4): mov 0x8(%rbp),%rax
fc96(7): lea 0x108(%rbp),%rsi
fc9d(4): mov 0x48(%rax),%rdi
fca1(4): mov 0x38(%rax),%rax
fca5(5): cmp $0x2f,0xffffffff(%rax,%rdi,1)
fcaa(4): lea 0xffffffff(%rdi),%rdx
fcae(4): cmove %rdx,%rdi
fcb2(5): add 0x20(%r12),%rdi
fcb7(3): mov $0x2f,(%rdi)
fcba(4): mov 0x60(%rbp),%rax
fcbe(4): add $0x1,%rdi
fcc2(4): lea 0x1(%rax),%rdx
fcc6(5): call 0xffff2bca(%rip)
fccb(4): movzx 0x70(%rbp),%eax
fccf(5): jmp 0xffffff5f(%rip)
fcd4(4): nop 0x0(%rax)
fcd8(5): call 0xffff2d38(%rip)
fcdd(5): jmp 0xfffffed1(%rip)
fce2(3): and $0xef,%dh
fce5(5): mov %edx,0x48(%r12)
fcea(5): call 0xffffe4c6(%rip)
fcef(9): mov $0x0,0x8(%r12)
fcf8(5): mov $0x3,%esi
fcfd(3): mov %r12,%rdi
fd00(5): call 0xffffecc0(%rip)
fd05(3): test %rax,%rax
fd08(5): mov %rax,0x8(%r12)
fd0d(6): jz 0xf7(%rip)
fd13(3): mov %rax,%rbp
fd16(9): mov $0x0,0x8(%r12)
fd1f(5): jmp 0xffffff73(%rip)
fd24(4): nop 0x0(%rax)
fd28(2): test $0x1,%al
fd2a(6): jnz 0xfffffca9(%rip)
fd30(4): mov 0x8(%rbx),%rsi
fd34(7): lea 0x12960(%rip),%rcx
fd3b(5): mov $0xffffffff,%edx
fd40(3): mov %r12,%rdi
fd43(5): call 0xffffe88d(%rip)
fd48(2): test %eax,%eax
fd4a(6): jz 0xfffffc89(%rip)
fd50(5): call 0xffff26c0(%rip)
fd55(5): mov 0x48(%r12),%edi
fd5a(2): mov (%rax),%eax
fd5c(6): or $0x2000,%edi
fd62(3): mov %eax,0x40(%rbx)
fd65(5): mov %edi,0x48(%r12)
fd6a(5): jmp 0xfffffc6e(%rip)
fd6f(1): nop 
fd70(3): mov %r12,%rdi
fd73(5): call 0xffffe6dd(%rip)
fd78(2): test %eax,%eax
fd7a(2): jnz 0xffffffd6(%rip)
fd7c(5): jmp 0xfffffc57(%rip)
fd81(7): nop 0x0(%rax)
fd88(5): mov $0x6,%eax
fd8d(5): lea 0x58(%r12),%rsi
fd92(3): mov %rbx,%rdx
fd95(4): mov %ax,0x70(%rbx)
fd99(5): call 0xffffeb67(%rip)
fd9e(5): mov 0x48(%r12),%edi
fda3(5): jmp 0xfffffc50(%rip)
fda8(8): nop 0x0(%rax,%rax,1)
fdb0(7): cmp $0x0,0x109(%rbx)
fdb7(6): jnz 0xfffffe32(%rip)
fdbd(5): jmp 0xfffffe4e(%rip)
fdc2(5): mov 0x8(%r12),%rbp
fdc7(5): jmp 0xffffff4f(%rip)
fdcc(3): test $0x2,%ah
fdcf(6): jz 0x19e(%rip)
fdd5(2): mov %edi,%esi
fdd7(5): mov $0x1,%edx
fddc(3): mov %r12,%rdi
fddf(5): call 0xffffe601(%rip)
fde4(3): mov 0x44(%rbx),%edi
fde7(5): jmp 0xfffffbe7(%rip)
fdec(5): mov 0x48(%r12),%esi
fdf1(4): test $0x4,%sil
fdf5(6): jz 0x207(%rip)
fdfb(4): mov %rbp,(%r12)
fdff(5): jmp 0xfffffe47(%rip)
fe04(5): mov 0x48(%r12),%edi
fe09(6): test $0x2000,%edi
fe0f(6): jnz 0xfffffbef(%rip)
fe15(4): mov 0x40(%rbp),%r9d
fe19(3): test %r9d,%r9d
fe1c(2): jz 0x14(%rip)
fe1e(5): cmp $0x4,0x70(%rbp)
fe23(2): jz 0xd(%rip)
fe25(6): mov $0x7,%r8d
fe2b(5): mov %r8w,0x70(%rbp)
fe30(5): lea 0x58(%r12),%rsi
fe35(3): mov %rbp,%rdx
fe38(5): call 0xffffeac8(%rip)
fe3d(5): jmp 0xfffffc3d(%rip)
fe42(3): mov %rbx,%rdi
fe45(2): xor %ebp,%ebp
fe47(5): call 0xffff2bc9(%rip)
fe4c(5): call 0xffff25c4(%rip)
fe51(6): mov $0x0,(%rax)
fe57(8): mov $0x0,(%r12)
fe5f(5): jmp 0xfffffc1b(%rip)
fe64(4): nop 0x0(%rax)
fe68(4): mov 0x8(%rbp),%rbx
fe6c(5): cmp $0x0,0x68(%rbx)
fe71(2): jnz 0x13(%rip)
fe73(5): mov 0x48(%r12),%eax
fe78(3): and $0x18,%eax
fe7b(3): cmp $0x18,%eax
fe7e(6): jz 0x15f(%rip)
fe84(2): xor %edx,%edx
fe86(3): mov %rbp,%rsi
fe89(3): mov %r12,%rdi
fe8c(5): call 0xffffdfb4(%rip)
fe91(6): mov 0x90(%rbp),%edx
fe97(4): mov %ax,0x70(%rbp)
fe9b(6): and $0xf000,%edx
fea1(6): cmp $0x4000,%edx
fea7(6): jnz 0xfffffd95(%rip)
fead(5): cmp $0x0,0x58(%rbp)
feb2(6): jz 0x11c(%rip)
feb8(4): mov 0x68(%rbx),%rcx
febc(4): lea 0xffffffff(%rcx),%rdx
fec0(4): cmp $0xfffffffd,%rdx
fec4(2): jnbe 0x6(%rip)
fec6(4): mov %rdx,0x68(%rbx)
feca(4): cmp $0x1,%ax
fece(6): jnz 0xfffffbac(%rip)
fed4(5): jmp 0xfffffd82(%rip)
fed9(7): nop 0x0(%rax)
fee0(4): mov 0x48(%rbx),%rax
fee4(5): mov 0x20(%r12),%rdx
fee9(5): mov $0x3,%esi
feee(4): mov %rbx,(%r12)
fef2(3): mov %r12,%rdi
fef5(4): mov $0x0,0x0(%rdx,%rax,1)
fef9(5): call 0xffffeac7(%rip)
fefe(3): test %rax,%rax
ff01(3): mov %rax,%rbx
ff04(2): jz 0x54(%rip)
ff06(3): mov %rbp,%rdi
ff09(3): mov %rbx,%rbp
ff0c(5): call 0xffff2b04(%rip)
ff11(5): jmp 0xfffffd81(%rip)
ff16(a): nop 0x0(%rax,%rax,1)
ff20(3): mov 0x44(%rbp),%edi
ff23(5): call 0xffff271d(%rip)
ff28(5): jmp 0xfffffb1d(%rip)
ff2d(5): mov $0x1,%edx
ff32(3): mov %rbx,%rsi
ff35(3): mov %r12,%rdi
ff38(5): call 0xffffdf08(%rip)
ff3d(4): cmp $0x1,%ax
ff41(4): mov %ax,0x70(%rbx)
ff45(2): jz 0x5c(%rip)
ff47(5): mov $0x3,%esi
ff4c(3): mov %rbx,%rbp
ff4f(4): mov %si,0x74(%rbx)
ff53(5): jmp 0xfffffd3f(%rip)
ff58(6): test $0x20,0x49(%r12)
ff5e(6): jnz 0xfffffaa0(%rip)
ff64(4): mov 0x8(%rbp),%rbx
ff68(5): jmp 0xfffffa10(%rip)
ff6d(5): call 0xffff28b3(%rip)
ff72(2): test %eax,%eax
ff74(2): jz 0x15(%rip)
ff76(5): call 0xffff249a(%rip)
ff7b(2): mov (%rax),%eax
ff7d(3): mov %eax,0x40(%rbx)
ff80(9): or $0x2000,0x48(%r12)
ff89(3): mov 0x44(%rbx),%edi
ff8c(5): jmp 0xfffffa42(%rip)
ff91(9): or $0x2000,0x48(%r12)
ff9a(2): xor %ebp,%ebp
ff9c(5): jmp 0xfffffade(%rip)
ffa1(5): mov 0x48(%r12),%esi
ffa6(4): test $0x4,%sil
ffaa(2): jnz 0xffffff9d(%rip)
ffac(5): mov 0x2c(%r12),%edi
ffb1(7): lea 0x126e4(%rip),%rdx
ffb8(5): call 0xffffe5d8(%rip)
ffbd(2): test %eax,%eax
ffbf(3): mov %eax,0x44(%rbx)
ffc2(2): js 0x7e(%rip)
ffc4(5): or $0x2,0x72(%rbx)
ffc9(5): jmp 0xffffff7e(%rip)
ffce(4): cmp $0x1,%ax
ffd2(6): jnz 0xfffffaa8(%rip)
ffd8(5): jmp 0xfffffc75(%rip)
ffdd(5): mov 0x2c(%r12),%esi
ffe2(3): mov %rbx,%rdi
ffe5(5): call 0xffffe38b(%rip)
ffea(3): cmp $0x2,%eax
ffed(6): jnz 0xfffffe97(%rip)
fff3(4): movzx 0x70(%rbp),%eax
fff7(5): jmp 0xfffffc45(%rip)
fffc(5): mov 0x2c(%r12),%edi
10001(7): lea 0x12694(%rip),%rdx
10008(5): call 0xffffe588(%rip)
1000d(2): test %eax,%eax
1000f(3): mov %eax,0x44(%rbp)
10012(2): js 0x10(%rip)
10014(5): or $0x2,0x72(%rbp)
10019(4): movzx 0x70(%rbp),%eax
1001d(5): jmp 0xfffffc11(%rip)
10022(5): call 0xffff23ee(%rip)
10027(2): mov (%rax),%eax
10029(6): mov $0x7,%r11d
1002f(5): mov %r11w,0x70(%rbp)
10034(3): mov %eax,0x40(%rbp)
10037(4): mov %rbp,(%r12)
1003b(5): jmp 0xfffffa3f(%rip)
10040(5): call 0xffff23d0(%rip)
10045(2): mov (%rax),%eax
10047(5): mov $0x7,%edi
1004c(4): mov %di,0x70(%rbx)
10050(3): mov %eax,0x40(%rbx)
10053(5): jmp 0xfffffef4(%rip)

"rpl_fts_set" :
10060(3): cmp $0x4,%edx
10063(2): jnbe 0xd(%rip)
10065(4): mov %dx,0x74(%rsi)
10069(2): xor %eax,%eax
1006b(1): ret near (%rsp)
1006c(4): nop 0x0(%rax)
10070(4): sub $0x8,%rsp
10074(5): call 0xffff239c(%rip)
10079(6): mov $0x16,(%rax)
1007f(5): mov $0x1,%eax
10084(4): add $0x8,%rsp
10088(1): ret near (%rsp)

"rpl_fts_children" :
10090(2): push %r14
10092(2): push %r13
10094(2): push %r12
10096(1): push %rbp
10097(3): mov %esi,%r12d
1009a(1): push %rbx
1009b(3): mov %rdi,%rbx
1009e(5): call 0xffff2372(%rip)
100a3(7): test $0xffffefff,%r12d
100aa(3): mov %rax,%r13
100ad(6): jnz 0xeb(%rip)
100b3(3): mov (%rbx),%rbp
100b6(6): mov $0x0,(%rax)
100bc(4): test $0x20,0x49(%rbx)
100c0(2): jnz 0x80(%rip)
100c2(4): movzx 0x70(%rbp),%eax
100c6(4): cmp $0x9,%ax
100ca(2): jz 0x66(%rip)
100cc(4): cmp $0x1,%ax
100d0(2): jnz 0x70(%rip)
100d2(4): mov 0x8(%rbx),%rdi
100d6(3): test %rdi,%rdi
100d9(2): jz 0x7(%rip)
100db(5): call 0xffffe0d5(%rip)
100e0(7): cmp $0x1000,%r12d
100e7(6): mov $0x1,%r14d
100ed(2): jnz 0xf(%rip)
100ef(7): or $0x1000,0x48(%rbx)
100f6(6): mov $0x2,%r14d
100fc(5): cmp $0x0,0x58(%rbp)
10101(2): jnz 0x14(%rip)
10103(4): mov 0x30(%rbp),%rax
10107(3): cmp $0x2f,(%rax)
1010a(2): jz 0xb(%rip)
1010c(3): mov 0x48(%rbx),%esi
1010f(4): test $0x4,%sil
10113(2): jz 0x3d(%rip)
10115(3): mov %r14d,%esi
10118(3): mov %rbx,%rdi
1011b(5): call 0xffffe8a5(%rip)
10120(4): mov %rax,0x8(%rbx)
10124(1): pop %rbx
10125(1): pop %rbp
10126(2): pop %r12
10128(2): pop %r13
1012a(2): pop %r14
1012c(1): ret near (%rsp)
1012d(3): nop (%rax)
10130(1): pop %rbx
10131(4): mov 0x10(%rbp),%rax
10135(1): pop %rbp
10136(2): pop %r12
10138(2): pop %r13
1013a(2): pop %r14
1013c(1): ret near (%rsp)
1013d(3): nop (%rax)
10140(1): pop %rbx
10141(2): xor %eax,%eax
10143(1): pop %rbp
10144(2): pop %r12
10146(2): pop %r13
10148(2): pop %r14
1014a(1): ret near (%rsp)
1014b(5): nop 0x0(%rax,%rax,1)
10150(3): mov 0x2c(%rbx),%edi
10153(7): lea 0x12542(%rip),%rdx
1015a(5): call 0xffffe436(%rip)
1015f(2): test %eax,%eax
10161(2): mov %eax,%ebp
10163(2): js 0x56(%rip)
10165(3): mov %r14d,%esi
10168(3): mov %rbx,%rdi
1016b(5): call 0xffffe855(%rip)
10170(4): test $0x2,0x49(%rbx)
10174(4): mov %rax,0x8(%rbx)
10178(2): jnz 0x30(%rip)
1017a(2): mov %ebp,%edi
1017c(5): call 0xffff26a4(%rip)
10181(2): test %eax,%eax
10183(2): jnz 0x45(%rip)
10185(2): mov %ebp,%edi
10187(5): call 0xffff24b9(%rip)
1018c(4): mov 0x8(%rbx),%rax
10190(2): jmp 0xffffff94(%rip)
10192(6): nop 0x0(%rax,%rax,1)
10198(6): mov $0x16,(%rax)
1019e(2): xor %eax,%eax
101a0(5): jmp 0xffffff84(%rip)
101a5(3): nop (%rax)
101a8(5): mov $0x1,%edx
101ad(2): mov %ebp,%esi
101af(3): mov %rbx,%rdi
101b2(5): call 0xffffe22e(%rip)
101b7(2): jmp 0xffffffd5(%rip)
101b9(8): mov $0x0,0x8(%rbx)
101c1(2): xor %eax,%eax
101c3(5): jmp 0xffffff61(%rip)
101c8(4): mov 0x0(%r13),%ebx
101cc(2): mov %ebp,%edi
101ce(5): call 0xffff2472(%rip)
101d3(2): xor %eax,%eax
101d5(4): mov %ebx,0x0(%r13)
101d9(5): jmp 0xffffff4b(%rip)

"rpl_mbrtowc" :
101e0(2): push %r13
101e2(2): push %r12
101e4(3): mov %rsi,%r13
101e7(1): push %rbp
101e8(1): push %rbx
101e9(3): mov %rdi,%rbx
101ec(3): mov %rdx,%r12
101ef(4): sub $0x18,%rsp
101f3(9): mov $0x28,%rax
101fc(5): mov %rax,0x8(%rsp)
10201(2): xor %eax,%eax
10203(5): lea 0x4(%rsp),%rax
10208(3): test %rdi,%rdi
1020b(4): cmove %rax,%rbx
1020f(3): mov %rbx,%rdi
10212(5): call 0xffff236e(%rip)
10217(4): cmp $0xfffffffd,%rax
1021b(3): mov %rax,%rbp
1021e(2): jbe 0x22(%rip)
10220(3): test %r12,%r12
10223(2): jz 0x1d(%rip)
10225(2): xor %edi,%edi
10227(5): call 0xf289(%rip)
1022c(2): test %al,%al
1022e(2): jnz 0x12(%rip)
10230(5): movzx 0x0(%r13),%eax
10235(5): mov $0x1,%ebp
1023a(2): mov %eax,(%rbx)
1023c(4): nop 0x0(%rax)
10240(5): mov 0x8(%rsp),%rdx
10245(9): xor $0x28,%rdx
1024e(3): mov %rbp,%rax
10251(2): jnz 0xd(%rip)
10253(4): add $0x18,%rsp
10257(1): pop %rbx
10258(1): pop %rbp
10259(2): pop %r12
1025b(2): pop %r13
1025d(1): ret near (%rsp)
1025e(5): call 0xffff2302(%rip)

"unescape_tab" :
10270(1): push %rbx
10271(3): mov %rdi,%rbx
10274(5): call 0xffff22bc(%rip)
10279(3): mov %rbx,%rcx
1027c(4): add $0x1,%rax
10280(2): xor %edx,%edx
10282(2): jmp 0x15(%rip)
10284(4): nop 0x0(%rax)
10288(3): mov %sil,(%rcx)
1028b(3): mov %rdi,%rdx
1028e(4): add $0x1,%rcx
10292(3): cmp %rdx,%rax
10295(2): jbe 0x5b(%rip)
10297(4): movzx 0x0(%rbx,%rdx,1),%esi
1029b(4): lea 0x1(%rdx),%rdi
1029f(4): cmp $0x5c,%sil
102a3(2): jnz 0xffffffe5(%rip)
102a5(4): lea 0x4(%rdx),%r8
102a9(3): cmp %rax,%r8
102ac(2): jnb 0xffffffdc(%rip)
102ae(5): movzx 0x0(%rbx,%rdi,1),%r9d
102b3(4): lea 0xffffffd0(%r9),%r10d
102b7(4): cmp $0x3,%r10b
102bb(2): jnbe 0xffffffcd(%rip)
102bd(6): movzx 0x2(%rbx,%rdx,1),%r10d
102c3(4): lea 0xffffffd0(%r10),%r11d
102c7(4): cmp $0x7,%r11b
102cb(2): jnbe 0xffffffbd(%rip)
102cd(5): movzx 0x3(%rbx,%rdx,1),%edx
102d2(4): lea 0xffffffd0(%rdx),%r11d
102d6(4): cmp $0x7,%r11b
102da(2): jnbe 0xffffffae(%rip)
102dc(4): lea 0x0(%r10,%r9,8),%edx
102e0(5): lea 0xffffff80(%r11,%rdx,8),%edx
102e5(2): mov %dl,(%rcx)
102e7(3): mov %r8,%rdx
102ea(2): jmp 0xffffffa4(%rip)
102ec(4): nop 0x0(%rax)
102f0(1): pop %rbx
102f1(1): ret near (%rsp)

"free_mount_entry" :
10300(1): push %rbx
10301(3): mov %rdi,%rbx
10304(3): mov (%rdi),%rdi
10307(5): call 0xffff2709(%rip)
1030c(4): mov 0x8(%rbx),%rdi
10310(5): call 0xffff2700(%rip)
10315(4): mov 0x10(%rbx),%rdi
10319(5): call 0xffff26f7(%rip)
1031e(4): test $0x4,0x28(%rbx)
10322(2): jz 0xb(%rip)
10324(4): mov 0x18(%rbx),%rdi
10328(5): call 0xffff26e8(%rip)
1032d(3): mov %rbx,%rdi
10330(1): pop %rbx
10331(5): jmp 0xffff26df(%rip)

"read_file_system_list" :
10340(2): push %r15
10342(2): push %r14
10344(7): lea 0x124cc(%rip),%rsi
1034b(2): push %r13
1034d(2): push %r12
1034f(7): lea 0x1237a(%rip),%rdi
10356(1): push %rbp
10357(1): push %rbx
10358(4): sub $0x68,%rsp
1035c(9): mov $0x28,%rax
10365(5): mov %rax,0x58(%rsp)
1036a(2): xor %eax,%eax
1036c(5): call 0xffff2564(%rip)
10371(3): test %rax,%rax
10374(6): jz 0x44c(%rip)
1037a(5): lea 0x40(%rsp),%r14
1037f(5): lea 0x50(%rsp),%r13
10384(5): lea 0x48(%rsp),%r12
10389(3): mov %rax,%rbp
1038c(9): mov $0x0,0x48(%rsp)
10395(9): mov $0x0,0x50(%rsp)
1039e(2): nop 
103a0(3): mov %rbp,%rcx
103a3(5): mov $0xa,%edx
103a8(3): mov %r13,%rsi
103ab(3): mov %r12,%rdi
103ae(5): call 0xffff2312(%rip)
103b3(4): cmp $0xffffffff,%rax
103b7(6): jz 0x239(%rip)
103bd(5): lea 0x1c(%rsp),%rcx
103c2(5): lea 0x18(%rsp),%rdx
103c7(4): sub $0x8,%rsp
103cb(5): lea 0x1f(%rsp),%rbx
103d0(7): lea 0x123a9(%rip),%rsi
103d7(1): push %rbx
103d8(5): lea 0x34(%rsp),%rax
103dd(1): push %rax
103de(5): lea 0x38(%rsp),%rax
103e3(1): push %rax
103e4(5): mov 0x68(%rsp),%rdi
103e9(2): xor %eax,%eax
103eb(5): lea 0x5c(%rsp),%r9
103f0(5): lea 0x58(%rsp),%r8
103f5(5): call 0xffff23fb(%rip)
103fa(3): and $0xfb,%eax
103fd(4): add $0x20,%rsp
10401(3): cmp $0x3,%eax
10404(2): jnz 0xffffff9c(%rip)
10406(5): movsxd 0x24(%rsp),%rdi
1040b(7): lea 0x122d3(%rip),%rsi
10412(5): add 0x48(%rsp),%rdi
10417(5): call 0xffff25b9(%rip)
1041c(3): test %rax,%rax
1041f(3): mov %rax,%r15
10422(6): jz 0xffffff7e(%rip)
10428(5): lea 0x2c(%rsp),%rcx
1042d(5): lea 0x28(%rsp),%rdx
10432(4): sub $0x8,%rsp
10436(1): push %rbx
10437(7): lea 0x122ab(%rip),%rsi
1043e(3): mov %rax,%rdi
10441(2): xor %eax,%eax
10443(5): lea 0x44(%rsp),%r9
10448(5): lea 0x40(%rsp),%r8
1044d(5): call 0xffff23a3(%rip)
10452(3): and $0xfb,%eax
10455(3): cmp $0x1,%eax
10458(1): pop %rdx
10459(1): pop %rcx
1045a(6): jnz 0xffffff46(%rip)
10460(5): movsxd 0x3c(%rsp),%rax
10465(5): mov 0x48(%rsp),%rdx
1046a(4): mov $0x0,0x0(%rdx,%rax,1)
1046e(5): movsxd 0x24(%rsp),%rax
10473(5): mov 0x48(%rsp),%rdx
10478(4): mov $0x0,0x0(%rdx,%rax,1)
1047c(5): movsxd 0x2c(%rsp),%rax
10481(5): mov $0x0,0x0(%r15,%rax,1)
10486(5): movsxd 0x34(%rsp),%rax
1048b(5): mov $0x0,0x0(%r15,%rax,1)
10490(5): movsxd 0x30(%rsp),%rdi
10495(3): add %r15,%rdi
10498(5): call 0xfffffdd8(%rip)
1049d(5): movsxd 0x20(%rsp),%rdi
104a2(5): add 0x48(%rsp),%rdi
104a7(5): call 0xfffffdc9(%rip)
104ac(5): movsxd 0x38(%rsp),%rdi
104b1(5): add 0x48(%rsp),%rdi
104b6(5): call 0xfffffdba(%rip)
104bb(5): mov $0x38,%edi
104c0(5): call 0xffffc520(%rip)
104c5(5): movsxd 0x30(%rsp),%rdi
104ca(3): mov %rax,%rbx
104cd(3): add %r15,%rdi
104d0(5): call 0xffffc740(%rip)
104d5(5): movsxd 0x20(%rsp),%rdi
104da(3): mov %rax,(%rbx)
104dd(5): add 0x48(%rsp),%rdi
104e2(5): call 0xffffc72e(%rip)
104e7(5): movsxd 0x38(%rsp),%rdi
104ec(4): mov %rax,0x8(%rbx)
104f0(5): add 0x48(%rsp),%rdi
104f5(5): call 0xffffc71b(%rip)
104fa(5): movsxd 0x28(%rsp),%rdi
104ff(4): mov %rax,0x10(%rbx)
10503(3): add %r15,%rdi
10506(5): call 0xffffc70a(%rip)
1050b(4): mov 0x18(%rsp),%edx
1050f(3): mov %rax,%r15
10512(4): mov %rax,0x18(%rbx)
10516(4): mov 0x1c(%rsp),%eax
1051a(a): mov $0x-17592186044416,%rsi
10524(7): lea 0x121d4(%rip),%rdi
1052b(4): or $0x4,0x28(%rbx)
1052f(3): mov %rdx,%rcx
10532(4): shl/sal $0x20,%rdx
10536(4): shl/sal $0x8,%rcx
1053a(3): and %rsi,%rdx
1053d(a): mov $0x17592184995840,%rsi
10547(6): and $0xfff00,%ecx
1054d(3): or %rcx,%rdx
10550(3): movzx %al,%ecx
10553(4): shl/sal $0xc,%rax
10557(3): or %rcx,%rdx
1055a(3): and %rsi,%rax
1055d(5): mov $0x7,%ecx
10562(3): mov %r15,%rsi
10565(3): or %rdx,%rax
10568(5): mov $0x1,%edx
1056d(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1056f(4): mov %rax,0x20(%rbx)
10573(3): setnbe %al
10576(2): sbb $0x0,%al
10578(2): test %al,%al
1057a(2): jz 0x20(%rip)
1057c(7): lea 0x12183(%rip),%rdi
10583(5): mov $0x5,%ecx
10588(3): mov %r15,%rsi
1058b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1058d(3): setnbe %al
10590(2): sbb $0x0,%al
10592(2): test %al,%al
10594(6): jnz 0xb4(%rip)
1059a(4): movzx 0x28(%rbx),%eax
1059e(3): mov (%rbx),%r8
105a1(5): mov $0x3a,%esi
105a6(3): mov %r8,%rdi
105a9(5): mov %r8,0x8(%rsp)
105ae(3): and $0xfe,%eax
105b1(2): or %edx,%eax
105b3(3): mov %al,0x28(%rbx)
105b6(5): call 0xffff1fea(%rip)
105bb(3): test %rax,%rax
105be(5): mov $0x1,%edx
105c3(5): mov 0x8(%rsp),%r8
105c8(6): jz 0x1c8(%rip)
105ce(4): movzx 0x28(%rbx),%eax
105d2(2): add %edx,%edx
105d4(3): and $0xfd,%eax
105d7(2): or %edx,%eax
105d9(3): mov %al,0x28(%rbx)
105dc(3): mov %rbx,(%r14)
105df(4): lea 0x30(%rbx),%r14
105e3(5): jmp 0xfffffdbd(%rip)
105e8(8): nop 0x0(%rax,%rax,1)
105f0(5): mov 0x48(%rsp),%rdi
105f5(5): call 0xffff241b(%rip)
105fa(4): test $0x20,0x0(%rbp)
105fe(6): jnz 0x562(%rip)
10604(3): mov %rbp,%rdi
10607(5): call 0xffffd699(%rip)
1060c(3): cmp $0xff,%eax
1060f(6): jz 0x43f(%rip)
10615(7): mov $0x0,(%r14)
1061c(5): mov 0x40(%rsp),%rax
10621(5): mov 0x58(%rsp),%rbx
10626(9): xor $0x28,%rbx
1062f(6): jnz 0x554(%rip)
10635(4): add $0x68,%rsp
10639(1): pop %rbx
1063a(1): pop %rbp
1063b(2): pop %r12
1063d(2): pop %r13
1063f(2): pop %r14
10641(2): pop %r15
10643(1): ret near (%rsp)
10644(4): nop 0x0(%rax)
10648(7): lea 0x120bc(%rip),%rdi
1064f(5): mov $0x6,%ecx
10654(3): mov %r15,%rsi
10657(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10659(3): setnbe %al
1065c(2): sbb $0x0,%al
1065e(2): test %al,%al
10660(6): jz 0xffffff3a(%rip)
10666(7): lea 0x120a4(%rip),%rdi
1066d(5): mov $0x8,%ecx
10672(3): mov %r15,%rsi
10675(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10677(3): setnbe %al
1067a(2): sbb $0x0,%al
1067c(2): test %al,%al
1067e(6): jz 0xffffff1c(%rip)
10684(7): lea 0x1208e(%rip),%rdi
1068b(5): mov $0x7,%ecx
10690(3): mov %r15,%rsi
10693(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10695(3): setnbe %al
10698(2): sbb $0x0,%al
1069a(2): test %al,%al
1069c(6): jz 0xfffffefe(%rip)
106a2(7): lea 0x12077(%rip),%rdi
106a9(5): mov $0x8,%ecx
106ae(3): mov %r15,%rsi
106b1(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
106b3(3): setnbe %al
106b6(2): sbb $0x0,%al
106b8(2): test %al,%al
106ba(6): jz 0xfffffee0(%rip)
106c0(7): lea 0x12061(%rip),%rdi
106c7(5): mov $0x7,%ecx
106cc(3): mov %r15,%rsi
106cf(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
106d1(3): setnbe %al
106d4(2): sbb $0x0,%al
106d6(2): test %al,%al
106d8(6): jz 0xfffffec2(%rip)
106de(7): lea 0x1204a(%rip),%rdi
106e5(5): mov $0xb,%ecx
106ea(3): mov %r15,%rsi
106ed(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
106ef(3): setnbe %al
106f2(2): sbb $0x0,%al
106f4(2): test %al,%al
106f6(6): jz 0xfffffea4(%rip)
106fc(7): lea 0x12037(%rip),%rdi
10703(5): mov $0x6,%ecx
10708(3): mov %r15,%rsi
1070b(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1070d(3): setnbe %al
10710(2): sbb $0x0,%al
10712(2): test %al,%al
10714(6): jz 0xfffffe86(%rip)
1071a(7): lea 0x1201f(%rip),%rdi
10721(5): mov $0x6,%ecx
10726(3): mov %r15,%rsi
10729(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1072b(3): setnbe %al
1072e(2): sbb $0x0,%al
10730(2): test %al,%al
10732(6): jz 0xfffffe68(%rip)
10738(7): lea 0x12007(%rip),%rdi
1073f(5): mov $0x7,%ecx
10744(3): mov %r15,%rsi
10747(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10749(3): setnbe %al
1074c(2): sbb $0x0,%al
1074e(2): test %al,%al
10750(6): jz 0xfffffe4a(%rip)
10756(7): lea 0x11ff0(%rip),%rsi
1075d(3): mov %r15,%rdi
10760(4): mov %dl,0x8(%rsp)
10764(5): call 0xffff1f6c(%rip)
10769(2): test %eax,%eax
1076b(5): movzx 0x8(%rsp),%edx
10770(6): jz 0xfffffe2a(%rip)
10776(7): lea 0x11fd7(%rip),%rsi
1077d(3): mov %r15,%rdi
10780(5): call 0xffff1f50(%rip)
10785(2): test %eax,%eax
10787(3): setz %dl
1078a(5): jmp 0xfffffe10(%rip)
1078f(1): nop 
10790(4): cmp $0x2f,(%r8)
10794(6): jz 0x32c(%rip)
1079a(7): lea 0x11fc3(%rip),%rsi
107a1(5): mov $0x7,%ecx
107a6(3): mov %r8,%rdi
107a9(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
107ab(3): setnbe %al
107ae(2): sbb $0x0,%al
107b0(2): test %al,%al
107b2(3): setz %dl
107b5(5): jmp 0xfffffe19(%rip)
107ba(6): nop 0x0(%rax,%rax,1)
107c0(7): lea 0x12050(%rip),%rsi
107c7(7): lea 0x11f9d(%rip),%rdi
107ce(5): call 0xffff1ff2(%rip)
107d3(3): test %rax,%rax
107d6(3): mov %rax,%rbx
107d9(6): jz 0x3a3(%rip)
107df(3): mov %rbx,%rdi
107e2(5): lea 0x40(%rsp),%r14
107e7(7): lea 0x11f11(%rip),%rbp
107ee(5): call 0xffff1fc2(%rip)
107f3(3): test %rax,%rax
107f6(3): mov %rax,%r13
107f9(6): jz 0x245(%rip)
107ff(1): nop 
10800(7): lea 0x11f6e(%rip),%rsi
10807(3): mov %r13,%rdi
1080a(5): call 0xffff21a6(%rip)
1080f(5): mov $0x38,%edi
10814(3): mov %rax,%r15
10817(5): call 0xffffc1c9(%rip)
1081c(4): mov 0x0(%r13),%rdi
10820(3): mov %rax,%r12
10823(5): call 0xffffc3ed(%rip)
10828(4): mov 0x8(%r13),%rdi
1082c(4): mov %rax,(%r12)
10830(5): call 0xffffc3e0(%rip)
10835(4): mov 0x10(%r13),%rdi
10839(5): mov %rax,0x8(%r12)
1083e(9): mov $0x0,0x10(%r12)
10847(5): call 0xffffc3c9(%rip)
1084c(5): mov $0x7,%ecx
10851(3): mov %rax,%rsi
10854(3): mov %rbp,%rdi
10857(6): or $0x4,0x28(%r12)
1085d(3): mov %rax,%r13
10860(5): mov %rax,0x18(%r12)
10865(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10867(5): mov $0x1,%edx
1086c(3): setnbe %al
1086f(2): sbb $0x0,%al
10871(2): test %al,%al
10873(6): jz 0x165(%rip)
10879(7): lea 0x11e86(%rip),%rdi
10880(5): mov $0x5,%ecx
10885(3): mov %r13,%rsi
10888(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1088a(3): setnbe %al
1088d(2): sbb $0x0,%al
1088f(2): test %al,%al
10891(6): jz 0x147(%rip)
10897(7): lea 0x11e6d(%rip),%rdi
1089e(5): mov $0x6,%ecx
108a3(3): mov %r13,%rsi
108a6(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
108a8(3): setnbe %al
108ab(2): sbb $0x0,%al
108ad(2): test %al,%al
108af(6): jz 0x129(%rip)
108b5(7): lea 0x11e55(%rip),%rdi
108bc(5): mov $0x8,%ecx
108c1(3): mov %r13,%rsi
108c4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
108c6(3): setnbe %al
108c9(2): sbb $0x0,%al
108cb(2): test %al,%al
108cd(6): jz 0x10b(%rip)
108d3(7): lea 0x11e3f(%rip),%rdi
108da(5): mov $0x7,%ecx
108df(3): mov %r13,%rsi
108e2(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
108e4(3): setnbe %al
108e7(2): sbb $0x0,%al
108e9(2): test %al,%al
108eb(6): jz 0xed(%rip)
108f1(7): lea 0x11e28(%rip),%rdi
108f8(5): mov $0x8,%ecx
108fd(3): mov %r13,%rsi
10900(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10902(3): setnbe %al
10905(2): sbb $0x0,%al
10907(2): test %al,%al
10909(6): jz 0xcf(%rip)
1090f(7): lea 0x11e12(%rip),%rdi
10916(5): mov $0x7,%ecx
1091b(3): mov %r13,%rsi
1091e(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10920(3): setnbe %al
10923(2): sbb $0x0,%al
10925(2): test %al,%al
10927(6): jz 0xb1(%rip)
1092d(7): lea 0x11dfb(%rip),%rdi
10934(5): mov $0xb,%ecx
10939(3): mov %r13,%rsi
1093c(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1093e(3): setnbe %al
10941(2): sbb $0x0,%al
10943(2): test %al,%al
10945(6): jz 0x93(%rip)
1094b(7): lea 0x11de8(%rip),%rdi
10952(5): mov $0x6,%ecx
10957(3): mov %r13,%rsi
1095a(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1095c(3): setnbe %al
1095f(2): sbb $0x0,%al
10961(2): test %al,%al
10963(2): jz 0x75(%rip)
10965(7): lea 0x11dd4(%rip),%rdi
1096c(5): mov $0x6,%ecx
10971(3): mov %r13,%rsi
10974(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10976(3): setnbe %al
10979(2): sbb $0x0,%al
1097b(2): test %al,%al
1097d(2): jz 0x5b(%rip)
1097f(7): lea 0x11dc0(%rip),%rdi
10986(5): mov $0x7,%ecx
1098b(3): mov %r13,%rsi
1098e(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10990(3): setnbe %al
10993(2): sbb $0x0,%al
10995(2): test %al,%al
10997(2): jz 0x41(%rip)
10999(7): lea 0x11dad(%rip),%rsi
109a0(3): mov %r13,%rdi
109a3(4): mov %dl,0x8(%rsp)
109a7(5): call 0xffff1d29(%rip)
109ac(2): test %eax,%eax
109ae(5): movzx 0x8(%rsp),%edx
109b3(2): jz 0x25(%rip)
109b5(7): lea 0x11d98(%rip),%rsi
109bc(3): mov %r13,%rdi
109bf(5): call 0xffff1d11(%rip)
109c4(3): test %r15,%r15
109c7(3): setz %dl
109ca(2): test %eax,%eax
109cc(3): setz %al
109cf(2): and %eax,%edx
109d1(7): nop 0x0(%rax)
109d8(6): movzx 0x28(%r12),%eax
109de(4): mov (%r12),%r15
109e2(5): mov $0x3a,%esi
109e7(3): mov %r15,%rdi
109ea(3): and $0xfe,%eax
109ed(2): or %edx,%eax
109ef(5): mov %al,0x28(%r12)
109f4(5): call 0xffff1bac(%rip)
109f9(3): test %rax,%rax
109fc(5): mov $0x1,%edx
10a01(6): jz 0x97(%rip)
10a07(6): movzx 0x28(%r12),%eax
10a0d(2): add %edx,%edx
10a0f(9): mov $0xffffffff,0x20(%r12)
10a18(3): mov %rbx,%rdi
10a1b(3): and $0xfd,%eax
10a1e(2): or %edx,%eax
10a20(5): mov %al,0x28(%r12)
10a25(3): mov %r12,(%r14)
10a28(5): lea 0x30(%r12),%r14
10a2d(5): call 0xffff1d83(%rip)
10a32(3): test %rax,%rax
10a35(3): mov %rax,%r13
10a38(6): jnz 0xfffffdc8(%rip)
10a3e(3): mov %rbx,%rdi
10a41(5): call 0xffff19af(%rip)
10a46(2): test %eax,%eax
10a48(6): jnz 0xfffffbcd(%rip)
10a4e(5): call 0xffff19c2(%rip)
10a53(3): mov (%rax),%r13d
10a56(3): mov %rax,%r12
10a59(7): mov $0x0,(%r14)
10a60(5): mov 0x40(%rsp),%rdi
10a65(3): test %rdi,%rdi
10a68(2): jz 0x1e(%rip)
10a6a(6): nop 0x0(%rax,%rax,1)
10a70(4): mov 0x30(%rdi),%rbx
10a74(5): call 0xfffff88c(%rip)
10a79(3): test %rbx,%rbx
10a7c(5): mov %rbx,0x40(%rsp)
10a81(3): mov %rbx,%rdi
10a84(2): jnz 0xffffffec(%rip)
10a86(4): mov %r13d,(%r12)
10a8a(2): xor %eax,%eax
10a8c(5): jmp 0xfffffb95(%rip)
10a91(7): nop 0x0(%rax)
10a98(4): cmp $0x2f,(%r15)
10a9c(2): jz 0x74(%rip)
10a9e(7): lea 0x11cbf(%rip),%rsi
10aa5(5): mov $0x7,%ecx
10aaa(3): mov %r15,%rdi
10aad(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10aaf(3): setnbe %al
10ab2(2): sbb $0x0,%al
10ab4(2): test %al,%al
10ab6(3): setz %dl
10ab9(5): jmp 0xffffff4e(%rip)
10abe(2): nop 
10ac0(5): cmp $0x2f,0x1(%r8)
10ac5(6): jnz 0xfffffcd5(%rip)
10acb(7): lea 0x11c87(%rip),%rdi
10ad2(5): mov $0x6,%ecx
10ad7(3): mov %r15,%rsi
10ada(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10adc(3): setnbe %al
10adf(2): sbb $0x0,%al
10ae1(2): test %al,%al
10ae3(6): jz 0xfffffaeb(%rip)
10ae9(7): lea 0x11c6f(%rip),%rdi
10af0(5): mov $0x5,%ecx
10af5(3): mov %r15,%rsi
10af8(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10afa(3): setnbe %al
10afd(2): sbb $0x0,%al
10aff(2): test %al,%al
10b01(6): jz 0xfffffacd(%rip)
10b07(5): jmp 0xfffffc93(%rip)
10b0c(4): nop 0x0(%rax)
10b10(5): cmp $0x2f,0x1(%r15)
10b15(2): jnz 0xffffff89(%rip)
10b17(7): lea 0x11c3b(%rip),%rdi
10b1e(5): mov $0x6,%ecx
10b23(3): mov %r13,%rsi
10b26(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10b28(3): setnbe %al
10b2b(2): sbb $0x0,%al
10b2d(2): test %al,%al
10b2f(6): jz 0xfffffed8(%rip)
10b35(7): lea 0x11c23(%rip),%rdi
10b3c(5): mov $0x5,%ecx
10b41(3): mov %r13,%rsi
10b44(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
10b46(3): setnbe %al
10b49(2): sbb $0x0,%al
10b4b(2): test %al,%al
10b4d(6): jz 0xfffffeba(%rip)
10b53(5): jmp 0xffffff4b(%rip)
10b58(8): nop 0x0(%rax,%rax,1)
10b60(5): call 0xffff18b0(%rip)
10b65(3): mov (%rax),%r13d
10b68(3): mov %rax,%r12
10b6b(3): mov %rbp,%rdi
10b6e(5): call 0xffffd132(%rip)
10b73(4): mov %r13d,(%r12)
10b77(5): jmp 0xfffffee2(%rip)
10b7c(2): xor %eax,%eax
10b7e(5): jmp 0xfffffaa3(%rip)
10b83(5): call 0xffff19dd(%rip)

"peek_token_bracket" :
10b90(4): mov 0x48(%rsi),%rax
10b94(4): cmp %rax,0x68(%rsi)
10b98(2): jle 0x58(%rip)
10b9a(4): mov 0x8(%rsi),%r8
10b9e(7): cmp $0x1,0x90(%rsi)
10ba5(5): movzx 0x0(%r8,%rax,1),%ecx
10baa(2): mov %cl,(%rdi)
10bac(2): jle 0x17(%rip)
10bae(4): cmp 0x30(%rsi),%rax
10bb2(2): jz 0x11(%rip)
10bb4(4): mov 0x10(%rsi),%r9
10bb8(5): cmp $0xff,0x0(%r9,%rax,4)
10bbd(6): jz 0x82(%rip)
10bc3(3): cmp $0x5c,%cl
10bc6(2): jz 0x6a(%rip)
10bc8(3): cmp $0x5b,%cl
10bcb(2): jz 0x35(%rip)
10bcd(3): cmp $0x5d,%cl
10bd0(6): jz 0xa0(%rip)
10bd6(3): cmp $0x5e,%cl
10bd9(6): jz 0x87(%rip)
10bdf(3): cmp $0x2d,%cl
10be2(2): jnz 0x5d(%rip)
10be4(4): mov $0x16,0x8(%rdi)
10be8(5): mov $0x1,%eax
10bed(1): ret near (%rsp)
10bee(2): nop 
10bf0(4): mov $0x2,0x8(%rdi)
10bf4(2): xor %eax,%eax
10bf6(1): ret near (%rsp)
10bf7(9): nop 0x0(%rax,%rax,1)
10c00(4): lea 0x1(%rax),%rcx
10c04(4): cmp 0x58(%rsi),%rcx
10c08(2): jnl 0x48(%rip)
10c0a(6): movzx 0x1(%r8,%rax,1),%eax
10c10(2): cmp $0x3a,%al
10c12(2): mov %al,(%rdi)
10c14(6): jz 0x9c(%rip)
10c1a(2): cmp $0x3d,%al
10c1c(6): jz 0x84(%rip)
10c22(2): cmp $0x2e,%al
10c24(2): jnz 0x2c(%rip)
10c26(4): mov $0x1a,0x8(%rdi)
10c2a(5): mov $0x2,%eax
10c2f(1): ret near (%rsp)
10c30(3): and $0x1,%edx
10c33(2): jz 0xc(%rip)
10c35(4): lea 0x1(%rax),%rdx
10c39(4): cmp 0x58(%rsi),%rdx
10c3d(2): jl 0x43(%rip)
10c3f(4): mov $0x1,0x8(%rdi)
10c43(5): mov $0x1,%eax
10c48(1): ret near (%rsp)
10c49(7): nop 0x0(%rax)
10c50(4): mov $0x1,0x8(%rdi)
10c54(3): mov $0x5b,(%rdi)
10c57(5): mov $0x1,%eax
10c5c(1): ret near (%rsp)
10c5d(3): nop (%rax)
10c60(4): mov $0x19,0x8(%rdi)
10c64(5): mov $0x1,%eax
10c69(1): ret near (%rsp)
10c6a(6): nop 0x0(%rax,%rax,1)
10c70(4): mov $0x15,0x8(%rdi)
10c74(5): mov $0x1,%eax
10c79(1): ret near (%rsp)
10c7a(6): nop 0x0(%rax,%rax,1)
10c80(4): mov %rdx,0x48(%rsi)
10c84(6): movzx 0x1(%r8,%rax,1),%eax
10c8a(4): mov $0x1,0x8(%rdi)
10c8e(2): mov %al,(%rdi)
10c90(5): mov $0x1,%eax
10c95(1): ret near (%rsp)
10c96(a): nop 0x0(%rax,%rax,1)
10ca0(4): mov $0x1c,0x8(%rdi)
10ca4(5): mov $0x2,%eax
10ca9(1): ret near (%rsp)
10caa(6): nop 0x0(%rax,%rax,1)
10cb0(3): and $0x4,%edx
10cb3(2): jz 0xffffff9d(%rip)
10cb5(4): mov $0x1e,0x8(%rdi)
10cb9(5): mov $0x2,%eax
10cbe(1): ret near (%rsp)

"mark_opt_subexp" :
10cc0(4): cmp $0x11,0x30(%rsi)
10cc4(2): jz 0xc(%rip)
10cc6(2): xor %eax,%eax
10cc8(1): ret near (%rsp)
10cc9(7): nop 0x0(%rax)
10cd0(4): cmp 0x28(%rsi),%rdi
10cd4(2): jnz 0xfffffff2(%rip)
10cd6(4): or $0x8,0x32(%rsi)
10cda(2): xor %eax,%eax
10cdc(1): ret near (%rsp)

"check_dst_limits_calc_pos_1" :
10ce0(2): push %r15
10ce2(2): push %r14
10ce4(3): mov %rdx,%r9
10ce7(2): push %r13
10ce9(2): push %r12
10ceb(4): lea 0x0(%rcx,%rcx,2),%rdx
10cef(1): push %rbp
10cf0(1): push %rbx
10cf1(3): mov %esi,%r15d
10cf4(4): sub $0x48,%rsp
10cf8(7): mov 0x98(%rdi),%r14
10cff(4): mov %rdi,(%rsp)
10d03(4): mov 0x30(%r14),%rax
10d07(4): lea 0x0(%rax,%rdx,8),%r12
10d0b(6): cmp $0x0,0x8(%r12)
10d11(6): jle 0x194(%rip)
10d17(4): lea 0x0(%r8,%r8,4),%rax
10d1b(3): mov %rcx,%r11
10d1e(3): mov %r9d,%ecx
10d21(3): mov %r8,%r10
10d24(2): xor %ebx,%ebx
10d26(4): mov %esi,0x20(%rsp)
10d2a(4): shl/sal $0x3,%rax
10d2e(3): mov %r9,%r15
10d31(5): mov %r11,0x10(%rsp)
10d36(5): mov %rax,0x28(%rsp)
10d3b(5): mov $0x1,%eax
10d40(3): shl/sal %cl,%rax
10d43(5): mov %rax,0x18(%rsp)
10d48(2): not %eax
10d4a(5): mov %ax,0x26(%rsp)
10d4f(2): mov %esi,%eax
10d51(3): and $0x1,%eax
10d54(4): mov %eax,0xc(%rsp)
10d58(2): mov %esi,%eax
10d5a(3): and $0x2,%eax
10d5d(4): mov %eax,0x8(%rsp)
10d61(2): jmp 0x24(%rip)
10d63(5): nop 0x0(%rax,%rax,1)
10d68(3): cmp $0x9,%dl
10d6b(6): jz 0x155(%rip)
10d71(3): cmp $0x4,%dl
10d74(2): jz 0x54(%rip)
10d76(4): add $0x1,%rbx
10d7a(5): cmp %rbx,0x8(%r12)
10d7f(6): jle 0x121(%rip)
10d85(5): mov 0x10(%r12),%rax
10d8a(4): mov 0x0(%rax,%rbx,8),%rbp
10d8e(3): mov %rbp,%rax
10d91(4): shl/sal $0x4,%rax
10d95(3): add (%r14),%rax
10d98(4): movzx 0x8(%rax),%edx
10d9c(3): cmp $0x8,%dl
10d9f(2): jnz 0xffffffc9(%rip)
10da1(4): mov 0xc(%rsp),%ecx
10da5(2): test %ecx,%ecx
10da7(2): jz 0xffffffcf(%rip)
10da9(3): cmp %r15,(%rax)
10dac(2): jnz 0xffffffca(%rip)
10dae(4): add $0x48,%rsp
10db2(5): mov $0xffffffff,%eax
10db7(1): pop %rbx
10db8(1): pop %rbp
10db9(2): pop %r12
10dbb(2): pop %r13
10dbd(2): pop %r14
10dbf(2): pop %r15
10dc1(1): ret near (%rsp)
10dc2(6): nop 0x0(%rax,%rax,1)
10dc8(4): cmp $0xffffffff,%r10
10dcc(2): jz 0xffffffaa(%rip)
10dce(4): mov (%rsp),%rax
10dd2(5): mov 0x28(%rsp),%r13
10dd7(3): mov %rbp,%rdi
10dda(5): mov %r12,0x30(%rsp)
10ddf(5): mov %rbx,0x38(%rsp)
10de4(3): mov %r10,%r12
10de7(7): add 0xd8(%rax),%r13
10dee(5): lea 0x0(%rbp,%rbp,2),%rax
10df3(3): mov %r14,%rbp
10df6(3): mov %rdi,%r14
10df9(4): shl/sal $0x3,%rax
10dfd(3): mov %rax,%rbx
10e00(4): cmp %r14,0x0(%r13)
10e04(2): jnz 0x6c(%rip)
10e06(4): cmp $0x3f,%r15
10e0a(2): jnle 0xe(%rip)
10e0c(5): movzx 0x22(%r13),%eax
10e11(5): test %rax,0x18(%rsp)
10e16(2): jz 0x5a(%rip)
10e18(4): mov 0x28(%rbp),%rax
10e1c(5): mov 0x10(%rax,%rbx,1),%rax
10e21(3): mov (%rax),%rcx
10e24(5): cmp %rcx,0x10(%rsp)
10e29(6): jz 0xc7(%rip)
10e2f(4): mov 0x20(%rsp),%esi
10e33(4): mov (%rsp),%rdi
10e37(3): mov %r12,%r8
10e3a(3): mov %r15,%rdx
10e3d(5): call 0xfffffea3(%rip)
10e42(3): cmp $0xff,%eax
10e45(6): jz 0xffffff69(%rip)
10e4b(2): test %eax,%eax
10e4d(2): jnz 0xa(%rip)
10e4f(4): mov 0x8(%rsp),%esi
10e53(2): test %esi,%esi
10e55(2): jnz 0x80(%rip)
10e57(4): cmp $0x3f,%r15
10e5b(2): jnle 0x15(%rip)
10e5d(5): movzx 0x26(%rsp),%eax
10e62(5): and %ax,0x22(%r13)
10e67(9): nop 0x0(%rax,%rax,1)
10e70(4): add $0x28,%r13
10e74(5): cmp $0x0,0xfffffff8(%r13)
10e79(2): jnz 0xffffff87(%rip)
10e7b(5): mov 0x38(%rsp),%rbx
10e80(3): mov %r12,%r10
10e83(5): mov 0x30(%rsp),%r12
10e88(3): mov %rbp,%r14
10e8b(4): add $0x1,%rbx
10e8f(5): cmp %rbx,0x8(%r12)
10e94(6): jnle 0xfffffef1(%rip)
10e9a(6): nop 0x0(%rax,%rax,1)
10ea0(5): mov 0x20(%rsp),%r15d
10ea5(4): add $0x48,%rsp
10ea9(3): mov %r15d,%eax
10eac(1): pop %rbx
10ead(2): sar $0x1,%eax
10eaf(1): pop %rbp
10eb0(2): pop %r12
10eb2(2): pop %r13
10eb4(2): pop %r14
10eb6(2): pop %r15
10eb8(1): ret near (%rsp)
10eb9(7): nop 0x0(%rax)
10ec0(4): mov 0x8(%rsp),%edx
10ec4(2): test %edx,%edx
10ec6(6): jz 0xfffffeb0(%rip)
10ecc(3): cmp %r15,(%rax)
10ecf(6): jnz 0xfffffea7(%rip)
10ed5(4): add $0x48,%rsp
10ed9(2): xor %eax,%eax
10edb(1): pop %rbx
10edc(1): pop %rbp
10edd(2): pop %r12
10edf(2): pop %r13
10ee1(2): pop %r14
10ee3(2): pop %r15
10ee5(1): ret near (%rsp)
10ee6(a): nop 0x0(%rax,%rax,1)
10ef0(5): mov 0x20(%rsp),%r15d
10ef5(4): add $0x48,%rsp
10ef9(1): pop %rbx
10efa(1): pop %rbp
10efb(3): mov %r15d,%eax
10efe(3): and $0x1,%eax
10f01(2): pop %r12
10f03(2): neg %eax
10f05(2): pop %r13
10f07(2): pop %r14
10f09(2): pop %r15
10f0b(1): ret near (%rsp)

"check_dst_limits_calc_pos" :
10f10(7): mov 0xd8(%rdi),%rax
10f17(4): lea 0x0(%rsi,%rsi,4),%rsi
10f1b(4): lea 0x0(%rax,%rsi,8),%rax
10f1f(4): mov 0x10(%rax),%r10
10f23(3): cmp %r8,%r10
10f26(2): jnle 0x4a(%rip)
10f28(4): mov 0x18(%rax),%rax
10f2c(3): cmp %r8,%rax
10f2f(2): jl 0x21(%rip)
10f31(2): xor %esi,%esi
10f33(3): cmp %r8,%r10
10f36(4): setz %sil
10f3a(3): or $0x2,%esi
10f3d(3): cmp %r8,%rax
10f40(2): jz 0x25(%rip)
10f42(2): xor %eax,%eax
10f44(3): cmp %r8,%r10
10f47(2): jz 0x19(%rip)
10f49(2): REP ret near (%rsp)
10f4b(5): nop 0x0(%rax,%rax,1)
10f50(5): mov $0x1,%eax
10f55(1): ret near (%rsp)
10f56(a): nop 0x0(%rax,%rax,1)
10f60(5): mov $0x1,%esi
10f65(3): mov %r9,%r8
10f68(5): jmp 0xfffffd78(%rip)
10f6d(3): nop (%rax)
10f70(5): mov $0xffffffff,%eax
10f75(1): ret near (%rsp)

"postorder" :
10f80(2): push %r12
10f82(3): mov %rsi,%r12
10f85(1): push %rbp
10f86(3): mov %rdx,%rbp
10f89(1): push %rbx
10f8a(3): mov %rdi,%rbx
10f8d(2): jmp 0x6(%rip)
10f8f(1): nop 
10f90(3): mov %rax,%rbx
10f93(4): mov 0x8(%rbx),%rax
10f97(3): test %rax,%rax
10f9a(2): jnz 0xfffffff6(%rip)
10f9c(4): mov 0x10(%rbx),%rax
10fa0(3): test %rax,%rax
10fa3(2): jnz 0xffffffed(%rip)
10fa5(3): mov %rbx,%rsi
10fa8(3): mov %rbp,%rdi
10fab(3): call %r12
10fae(2): test %eax,%eax
10fb0(2): jnz 0x36(%rip)
10fb2(6): nop 0x0(%rax,%rax,1)
10fb8(3): mov (%rbx),%rdx
10fbb(3): test %rdx,%rdx
10fbe(2): jz 0x28(%rip)
10fc0(4): mov 0x10(%rdx),%rax
10fc4(3): cmp %rbx,%rax
10fc7(3): mov %rdx,%rbx
10fca(4): setz %sil
10fce(3): test %rax,%rax
10fd1(3): setz %cl
10fd4(3): or %cl,%sil
10fd7(2): jz 0xffffffb9(%rip)
10fd9(3): mov %rbx,%rsi
10fdc(3): mov %rbp,%rdi
10fdf(3): call %r12
10fe2(2): test %eax,%eax
10fe4(2): jz 0xffffffd4(%rip)
10fe6(1): pop %rbx
10fe7(1): pop %rbp
10fe8(2): pop %r12
10fea(1): ret near (%rsp)

"preorder" :
10ff0(2): push %r12
10ff2(3): mov %rsi,%r12
10ff5(1): push %rbp
10ff6(3): mov %rdx,%rbp
10ff9(1): push %rbx
10ffa(3): mov %rdi,%rbx
10ffd(2): jmp 0x6(%rip)
10fff(1): nop 
11000(3): mov %rdx,%rbx
11003(3): mov %rbx,%rsi
11006(3): mov %rbp,%rdi
11009(3): call %r12
1100c(2): test %eax,%eax
1100e(2): jnz 0x2e(%rip)
11010(4): mov 0x8(%rbx),%rdx
11014(2): xor %ecx,%ecx
11016(3): test %rdx,%rdx
11019(2): jnz 0xffffffe7(%rip)
1101b(2): jmp 0x8(%rip)
1101d(3): nop (%rax)
11020(3): mov %rdx,%rbx
11023(4): mov 0x10(%rbx),%rdx
11027(3): cmp %rcx,%rdx
1102a(2): jz 0x7(%rip)
1102c(3): test %rdx,%rdx
1102f(2): jnz 0xffffffd1(%rip)
11031(3): mov (%rbx),%rdx
11034(3): mov %rbx,%rcx
11037(3): test %rdx,%rdx
1103a(2): jnz 0xffffffe6(%rip)
1103c(1): pop %rbx
1103d(1): pop %rbp
1103e(2): pop %r12
11040(1): ret near (%rsp)

"re_string_realloc_buffers" :
11050(1): push %rbp
11051(1): push %rbx
11052(3): mov %rsi,%rbp
11055(3): mov %rdi,%rbx
11058(4): sub $0x8,%rsp
1105c(7): cmp $0x1,0x90(%rdi)
11063(2): jle 0x4a(%rip)
11065(a): mov $0x2305843009213693951,%rax
1106f(3): cmp %rax,%rsi
11072(2): jnbe 0x6e(%rip)
11074(4): mov 0x10(%rdi),%rdi
11078(8): lea 0x0(,%rsi,4),%rsi
11080(5): call 0xffff17b0(%rip)
11085(3): test %rax,%rax
11088(2): jz 0x58(%rip)
1108a(4): mov 0x18(%rbx),%rdi
1108e(4): mov %rax,0x10(%rbx)
11092(3): test %rdi,%rdi
11095(2): jz 0x18(%rip)
11097(8): lea 0x0(,%rbp,8),%rsi
1109f(5): call 0xffff1791(%rip)
110a4(3): test %rax,%rax
110a7(2): jz 0x39(%rip)
110a9(4): mov %rax,0x18(%rbx)
110ad(7): cmp $0x0,0x8b(%rbx)
110b4(2): jnz 0x14(%rip)
110b6(4): mov %rbp,0x40(%rbx)
110ba(4): add $0x8,%rsp
110be(2): xor %eax,%eax
110c0(1): pop %rbx
110c1(1): pop %rbp
110c2(1): ret near (%rsp)
110c3(5): nop 0x0(%rax,%rax,1)
110c8(4): mov 0x8(%rbx),%rdi
110cc(3): mov %rbp,%rsi
110cf(5): call 0xffff1761(%rip)
110d4(3): test %rax,%rax
110d7(2): jz 0x9(%rip)
110d9(4): mov %rax,0x8(%rbx)
110dd(2): jmp 0xffffffd9(%rip)
110df(1): nop 
110e0(4): add $0x8,%rsp
110e4(5): mov $0xc,%eax
110e9(1): pop %rbx
110ea(1): pop %rbp
110eb(1): ret near (%rsp)

"re_node_set_insert_last" :
110f0(1): push %rbp
110f1(1): push %rbx
110f2(3): mov %rsi,%rbp
110f5(3): mov %rdi,%rbx
110f8(4): sub $0x8,%rsp
110fc(4): mov 0x8(%rdi),%rsi
11100(3): cmp %rsi,(%rdi)
11103(4): mov 0x10(%rdi),%rax
11107(2): jz 0x21(%rip)
11109(4): lea 0x1(%rsi),%rdx
1110d(4): mov %rdx,0x8(%rbx)
11111(4): mov %rbp,0x0(%rax,%rsi,8)
11115(5): mov $0x1,%eax
1111a(4): add $0x8,%rsp
1111e(1): pop %rbx
1111f(1): pop %rbp
11120(1): ret near (%rsp)
11121(7): nop 0x0(%rax)
11128(4): add $0x1,%rsi
1112c(4): lea 0x0(%rsi,%rsi,1),%rdx
11130(4): shl/sal $0x4,%rsi
11134(3): mov %rdx,(%rdi)
11137(3): mov %rax,%rdi
1113a(5): call 0xffff16f6(%rip)
1113f(3): test %rax,%rax
11142(2): jz 0xe(%rip)
11144(4): mov %rax,0x10(%rbx)
11148(4): mov 0x8(%rbx),%rsi
1114c(2): jmp 0xffffffbd(%rip)
1114e(2): nop 
11150(2): xor %eax,%eax
11152(2): jmp 0xffffffc8(%rip)

"re_node_set_insert" :
11160(1): push %rbp
11161(1): push %rbx
11162(3): mov %rsi,%rbp
11165(3): mov %rdi,%rbx
11168(4): sub $0x8,%rsp
1116c(3): mov (%rdi),%rdx
1116f(3): test %rdx,%rdx
11172(2): jz 0x26(%rip)
11174(4): mov 0x8(%rdi),%rsi
11178(4): mov 0x10(%rdi),%rax
1117c(3): test %rsi,%rsi
1117f(2): jnz 0x51(%rip)
11181(3): mov %rbp,(%rax)
11184(5): add $0x1,0x8(%rdi)
11189(5): mov $0x1,%eax
1118e(4): add $0x8,%rsp
11192(1): pop %rbx
11193(1): pop %rbp
11194(1): ret near (%rsp)
11195(3): nop (%rax)
11198(7): mov $0x1,(%rdi)
1119f(8): mov $0x1,0x8(%rdi)
111a7(5): mov $0x8,%edi
111ac(5): call 0xffff15d4(%rip)
111b1(3): test %rax,%rax
111b4(4): mov %rax,0x10(%rbx)
111b8(6): jz 0x90(%rip)
111be(3): mov %rbp,(%rax)
111c1(4): add $0x8,%rsp
111c5(5): mov $0x1,%eax
111ca(1): pop %rbx
111cb(1): pop %rbp
111cc(1): ret near (%rsp)
111cd(3): nop (%rax)
111d0(3): cmp %rsi,%rdx
111d3(6): jz 0x8d(%rip)
111d9(3): cmp %rbp,(%rax)
111dc(8): lea 0x0(,%rsi,8),%rdx
111e4(2): jle 0x3c(%rip)
111e6(3): test %rsi,%rsi
111e9(2): jle 0x1a(%rip)
111eb(3): add %rax,%rdx
111ee(2): nop 
111f0(4): mov 0xfffffff8(%rdx),%rcx
111f4(4): sub $0x8,%rdx
111f8(4): mov %rcx,0x8(%rdx)
111fc(3): cmp %rdx,%rax
111ff(2): jnz 0xfffffff1(%rip)
11201(2): xor %edx,%edx
11203(4): mov %rbp,0x0(%rax,%rdx,1)
11207(5): mov $0x1,%eax
1120c(5): add $0x1,0x8(%rbx)
11211(5): jmp 0xffffff7d(%rip)
11216(a): nop 0x0(%rax,%rax,1)
11220(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
11225(3): cmp %rcx,%rbp
11228(2): jnl 0xffffffdb(%rip)
1122a(6): nop 0x0(%rax,%rax,1)
11230(4): mov %rcx,0x0(%rax,%rdx,1)
11234(4): sub $0x8,%rdx
11238(5): mov 0xfffffff8(%rax,%rdx,1),%rcx
1123d(3): cmp %rbp,%rcx
11240(2): jnle 0xfffffff0(%rip)
11242(2): jmp 0xffffffc1(%rip)
11244(4): nop 0x0(%rax)
11248(8): mov $0x0,0x8(%rbx)
11250(7): mov $0x0,(%rbx)
11257(5): jmp 0xffffff37(%rip)
1125c(4): nop 0x0(%rax)
11260(4): lea 0x0(%rsi,%rsi,1),%rdx
11264(4): shl/sal $0x4,%rsi
11268(3): mov %rdx,(%rdi)
1126b(3): mov %rax,%rdi
1126e(5): call 0xffff15c2(%rip)
11273(3): test %rax,%rax
11276(2): jz 0xf(%rip)
11278(4): mov %rax,0x10(%rbx)
1127c(4): mov 0x8(%rbx),%rsi
11280(5): jmp 0xffffff59(%rip)
11285(2): xor %eax,%eax
11287(5): jmp 0xffffff07(%rip)

"register_state" :
11290(2): push %r14
11292(2): push %r13
11294(3): mov %rdi,%r14
11297(2): push %r12
11299(1): push %rbp
1129a(3): mov %rdx,%r12
1129d(1): push %rbx
1129e(4): mov 0x10(%rsi),%rbx
112a2(3): mov %rsi,%rbp
112a5(3): mov %rdx,(%rsi)
112a8(8): mov $0x0,0x28(%rsi)
112b0(4): lea 0x20(%rsi),%r13
112b4(8): lea 0x0(,%rbx,8),%rdi
112bc(4): mov %rbx,0x20(%rsi)
112c0(5): call 0xffff14c0(%rip)
112c5(3): test %rax,%rax
112c8(4): mov %rax,0x30(%rbp)
112cc(2): jz 0x42(%rip)
112ce(3): test %rbx,%rbx
112d1(2): jle 0x4f(%rip)
112d3(2): xor %ebx,%ebx
112d5(2): jmp 0x15(%rip)
112d7(9): nop 0x0(%rax,%rax,1)
112e0(4): add $0x1,%rbx
112e4(4): cmp %rbx,0x10(%rbp)
112e8(2): jle 0x38(%rip)
112ea(4): mov 0x18(%rbp),%rax
112ee(4): mov 0x0(%rax,%rbx,8),%rsi
112f2(3): mov %rsi,%rax
112f5(4): shl/sal $0x4,%rax
112f9(3): add (%r14),%rax
112fc(4): test $0x8,0x8(%rax)
11300(2): jnz 0xffffffe0(%rip)
11302(3): mov %r13,%rdi
11305(5): call 0xfffffdeb(%rip)
1130a(2): test %al,%al
1130c(2): jnz 0xffffffd4(%rip)
1130e(1): pop %rbx
1130f(5): mov $0xc,%eax
11314(1): pop %rbp
11315(2): pop %r12
11317(2): pop %r13
11319(2): pop %r14
1131b(1): ret near (%rsp)
1131c(4): nop 0x0(%rax)
11320(7): and 0x88(%r14),%r12
11327(4): mov 0x40(%r14),%rax
1132b(4): lea 0x0(%r12,%r12,2),%rdx
1132f(4): lea 0x0(%rax,%rdx,8),%rbx
11333(3): mov (%rbx),%rdx
11336(4): cmp %rdx,0x8(%rbx)
1133a(4): mov 0x10(%rbx),%rax
1133e(4): lea 0x1(%rdx),%rsi
11342(2): jle 0x14(%rip)
11344(3): mov %rsi,(%rbx)
11347(4): mov %rbp,0x0(%rax,%rdx,8)
1134b(2): xor %eax,%eax
1134d(1): pop %rbx
1134e(1): pop %rbp
1134f(2): pop %r12
11351(2): pop %r13
11353(2): pop %r14
11355(1): ret near (%rsp)
11356(4): lea 0x0(%rsi,%rsi,1),%r12
1135a(3): mov %rax,%rdi
1135d(4): shl/sal $0x4,%rsi
11361(5): call 0xffff14cf(%rip)
11366(3): test %rax,%rax
11369(2): jz 0xffffffa5(%rip)
1136b(3): mov (%rbx),%rdx
1136e(4): mov %rax,0x10(%rbx)
11372(4): mov %r12,0x8(%rbx)
11376(4): lea 0x1(%rdx),%rsi
1137a(2): jmp 0xffffffca(%rip)

"build_upper_buffer" :
11380(2): push %r12
11382(4): mov 0x58(%rdi),%r12
11386(4): cmp %r12,0x40(%rdi)
1138a(1): push %rbp
1138b(3): mov %rdi,%rbp
1138e(5): cmovng 0x40(%rdi),%r12
11393(1): push %rbx
11394(4): mov 0x30(%rdi),%rbx
11398(3): cmp %rbx,%r12
1139b(2): jle 0x3a(%rip)
1139d(5): call 0xffff1023(%rip)
113a2(6): nop 0x0(%rax,%rax,1)
113a8(4): mov 0x0(%rbp),%rdx
113ac(4): mov 0x78(%rbp),%rcx
113b0(3): add %rbx,%rdx
113b3(4): add 0x28(%rbp),%rdx
113b7(3): test %rcx,%rcx
113ba(3): movzx (%rdx),%edx
113bd(2): jnz 0x2b(%rip)
113bf(3): mov (%rax),%rsi
113c2(4): mov 0x8(%rbp),%rcx
113c6(3): mov 0x0(%rsi,%rdx,4),%edx
113c9(3): mov %dl,0x0(%rcx,%rbx,1)
113cc(4): add $0x1,%rbx
113d0(3): cmp %rbx,%r12
113d3(2): jnz 0xffffffd5(%rip)
113d5(4): mov %rbx,0x30(%rbp)
113d9(4): mov %rbx,0x38(%rbp)
113dd(1): pop %rbx
113de(1): pop %rbp
113df(2): pop %r12
113e1(1): ret near (%rsp)
113e2(6): nop 0x0(%rax,%rax,1)
113e8(4): movzx 0x0(%rcx,%rdx,1),%edx
113ec(2): jmp 0xffffffd3(%rip)

"build_wcs_buffer" :
113f0(2): push %r15
113f2(2): push %r14
113f4(2): push %r13
113f6(2): push %r12
113f8(1): push %rbp
113f9(1): push %rbx
113fa(3): mov %rdi,%rbx
113fd(4): sub $0x68,%rsp
11401(4): mov 0x58(%rdi),%r12
11405(4): mov 0x30(%rdi),%rbp
11409(9): mov $0x28,%rax
11412(5): mov %rax,0x58(%rsp)
11417(2): xor %eax,%eax
11419(4): cmp %r12,0x40(%rdi)
1141d(5): cmovng 0x40(%rdi),%r12
11422(3): cmp %rbp,%r12
11425(6): jle 0x8f(%rip)
1142b(4): lea 0x20(%rdi),%r14
1142f(5): lea 0xc(%rsp),%r13
11434(4): nop 0x0(%rax)
11438(4): mov 0x78(%rbx),%rdi
1143c(3): mov %r12,%rdx
1143f(4): mov 0x20(%rbx),%r15
11443(3): sub %rbp,%rdx
11446(3): test %rdi,%rdi
11449(6): jnz 0xe7(%rip)
1144f(4): mov 0x28(%rbx),%rsi
11453(3): add %rbp,%rsi
11456(3): add (%rbx),%rsi
11459(3): mov %r14,%rcx
1145c(3): mov %r13,%rdi
1145f(5): call 0xffffed81(%rip)
11464(4): lea 0xffffffff(%rax),%rdx
11468(4): cmp $0xfffffffd,%rdx
1146c(6): jnbe 0x94(%rip)
11472(4): cmp $0xfffffffe,%rax
11476(4): mov 0xc(%rsp),%edx
1147a(2): jz 0x76(%rip)
1147c(4): mov 0x10(%rbx),%rcx
11480(4): lea 0x1(%rbp),%rsi
11484(8): lea 0x0(,%rbp,4),%rdi
1148c(3): mov %edx,0x0(%rcx,%rbp,4)
1148f(3): add %rax,%rbp
11492(3): cmp %rbp,%rsi
11495(2): jnl 0x4b(%rip)
11497(5): lea 0x4(%rcx,%rdi,1),%rdx
1149c(4): lea 0x0(%rcx,%rbp,4),%rax
114a0(6): mov $0xffffffff,(%rdx)
114a6(4): add $0x4,%rdx
114aa(3): cmp %rdx,%rax
114ad(2): jnz 0xfffffff3(%rip)
114af(3): cmp %r12,%rbp
114b2(2): jl 0xffffff86(%rip)
114b4(5): mov 0x58(%rsp),%rax
114b9(9): xor $0x28,%rax
114c2(4): mov %rbp,0x30(%rbx)
114c6(4): mov %rbp,0x38(%rbx)
114ca(6): jnz 0xe4(%rip)
114d0(4): add $0x68,%rsp
114d4(1): pop %rbx
114d5(1): pop %rbp
114d6(2): pop %r12
114d8(2): pop %r13
114da(2): pop %r14
114dc(2): pop %r15
114de(1): ret near (%rsp)
114df(1): nop 
114e0(3): mov %rsi,%rbp
114e3(3): cmp %r12,%rbp
114e6(6): jl 0xffffff52(%rip)
114ec(2): jmp 0xffffffc8(%rip)
114ee(2): nop 
114f0(4): mov 0x58(%rbx),%rax
114f4(4): cmp %rax,0x40(%rbx)
114f8(6): jl 0xa0(%rip)
114fe(2): nop 
11500(3): mov (%rbx),%rax
11503(4): mov 0x78(%rbx),%rcx
11507(3): add %rbp,%rax
1150a(4): add 0x28(%rbx),%rax
1150e(3): test %rcx,%rcx
11511(3): movzx (%rax),%edx
11514(4): mov %edx,0xc(%rsp)
11518(6): jnz 0x89(%rip)
1151e(4): mov %r15,0x20(%rbx)
11522(5): mov $0x1,%eax
11527(5): jmp 0xffffff55(%rip)
1152c(4): nop 0x0(%rax)
11530(6): mov 0x90(%rbx),%ecx
11536(2): xor %eax,%eax
11538(5): lea 0x10(%rsp),%rsi
1153d(2): test %ecx,%ecx
1153f(2): jnle 0x22(%rip)
11541(5): jmp 0xffffff18(%rip)
11546(a): nop 0x0(%rax,%rax,1)
11550(4): add $0x1,%rax
11554(3): cmp %rax,%rdx
11557(6): jz 0xffffff02(%rip)
1155d(4): mov 0x78(%rbx),%rdi
11561(3): mov (%rbx),%rcx
11564(3): add %rbp,%rcx
11567(3): add %rax,%rcx
1156a(4): add 0x28(%rbx),%rcx
1156e(3): movzx (%rcx),%ecx
11571(4): movzx 0x0(%rdi,%rcx,1),%ecx
11575(4): mov 0x8(%rbx),%rdi
11579(3): add %rbp,%rdi
1157c(3): mov %cl,0x0(%rdi,%rax,1)
1157f(3): mov %cl,0x0(%rsi,%rax,1)
11582(3): lea 0x1(%rax),%ecx
11585(6): cmp 0x90(%rbx),%ecx
1158b(2): jl 0xffffffc5(%rip)
1158d(5): jmp 0xfffffecc(%rip)
11592(6): nop 0x0(%rax,%rax,1)
11598(4): mov %r15,0x20(%rbx)
1159c(5): jmp 0xffffff18(%rip)
115a1(4): movzx 0x0(%rcx,%rdx,1),%edx
115a5(4): mov %edx,0xc(%rsp)
115a9(5): jmp 0xffffff75(%rip)
115ae(5): call 0xffff0fb2(%rip)

"build_wcs_upper_buffer" :
115c0(2): push %r15
115c2(2): push %r14
115c4(3): mov %rdi,%r14
115c7(2): push %r13
115c9(2): push %r12
115cb(1): push %rbp
115cc(1): push %rbx
115cd(7): sub $0xa8,%rsp
115d4(4): mov 0x58(%rdi),%rbx
115d8(4): mov 0x30(%rdi),%r15
115dc(9): mov $0x28,%rax
115e5(8): mov %rax,0x98(%rsp)
115ed(2): xor %eax,%eax
115ef(4): cmp %rbx,0x40(%rdi)
115f3(5): cmovng 0x40(%rdi),%rbx
115f8(7): cmp $0x0,0x8a(%rdi)
115ff(2): jnz 0xd(%rip)
11601(5): cmp $0x0,0x78(%rdi)
11606(6): jz 0x18a(%rip)
1160c(4): mov 0x38(%r14),%r13
11610(3): cmp %rbx,%r15
11613(2): jl 0x3d(%rip)
11615(4): mov %r15,0x30(%r14)
11619(4): mov %r13,0x38(%r14)
1161d(2): xor %eax,%eax
1161f(8): mov 0x98(%rsp),%rcx
11627(9): xor $0x28,%rcx
11630(6): jnz 0x58a(%rip)
11636(7): add $0xa8,%rsp
1163d(1): pop %rbx
1163e(1): pop %rbp
1163f(2): pop %r12
11641(2): pop %r13
11643(2): pop %r14
11645(2): pop %r15
11647(1): ret near (%rsp)
11648(8): nop 0x0(%rax,%rax,1)
11650(4): lea 0x20(%r14),%rax
11654(5): mov %rax,0x8(%rsp)
11659(3): mov %rbx,%rax
1165c(3): sub %r15,%rax
1165f(5): mov %rax,0x10(%rsp)
11664(5): lea 0x44(%rsp),%rax
11669(5): mov %rax,0x20(%rsp)
1166e(4): mov 0x78(%r14),%rdx
11672(4): mov 0x20(%r14),%rax
11676(3): test %rdx,%rdx
11679(5): mov %rax,0x48(%rsp)
1167e(6): jnz 0x30b(%rip)
11684(4): mov 0x28(%r14),%rbp
11688(3): add %r13,%rbp
1168b(3): add (%r14),%rbp
1168e(5): mov %rbp,0x18(%rsp)
11693(5): mov 0x8(%rsp),%rcx
11698(5): mov 0x10(%rsp),%rdx
1169d(5): mov 0x18(%rsp),%rsi
116a2(5): mov 0x20(%rsp),%rdi
116a7(5): call 0xffffeb39(%rip)
116ac(3): mov %rax,%rbp
116af(4): lea 0xffffffff(%rax),%rax
116b3(4): cmp $0xfffffffc,%rax
116b7(5): mov %rax,0x20(%rsp)
116bc(6): jnbe 0x33d(%rip)
116c2(4): mov 0x44(%rsp),%edx
116c6(2): mov %edx,%edi
116c8(4): mov %edx,0x10(%rsp)
116cc(5): call 0xffff1244(%rip)
116d1(4): mov 0x10(%rsp),%edx
116d5(3): mov %eax,%r12d
116d8(5): mov %r15,0x8(%rsp)
116dd(2): cmp %eax,%edx
116df(6): jz 0x301(%rip)
116e5(5): lea 0x50(%rsp),%rcx
116ea(5): lea 0x48(%rsp),%rdx
116ef(2): mov %eax,%esi
116f1(3): mov %rcx,%rdi
116f4(5): mov %rcx,0x10(%rsp)
116f9(5): call 0xffff1097(%rip)
116fe(3): cmp %rax,%rbp
11701(3): mov %rax,%r11
11704(5): mov 0x10(%rsp),%rcx
11709(6): jnz 0x38d(%rip)
1170f(4): mov 0x8(%r14),%rdi
11713(3): mov %rbp,%rdx
11716(3): mov %rcx,%rsi
11719(3): add %r15,%rdi
1171c(5): call 0xffff0ff4(%rip)
11721(8): cmp $0x0,0x8c(%r14)
11729(5): lea 0x0(%rbp,%r13,1),%rax
1172e(6): jnz 0x337(%rip)
11734(4): add $0x1,%r15
11738(5): mov 0x8(%rsp),%rsi
1173d(4): mov 0x10(%r14),%rdx
11741(5): lea 0xffffffff(%r15,%rbp,1),%rcx
11746(3): mov %rax,%r13
11749(3): cmp %rcx,%r15
1174c(8): lea 0x0(,%rsi,4),%rax
11754(4): mov %r12d,0x0(%rdx,%rsi,4)
11758(6): jnl 0xfffffeb8(%rip)
1175e(5): lea 0x4(%rdx,%rax,1),%rax
11763(4): lea 0x0(%rdx,%rcx,4),%rdx
11767(9): nop 0x0(%rax,%rax,1)
11770(6): mov $0xffffffff,(%rax)
11776(4): add $0x4,%rax
1177a(3): cmp %rax,%rdx
1177d(2): jnz 0xfffffff3(%rip)
1177f(3): mov %rcx,%r15
11782(5): jmp 0xfffffe8e(%rip)
11787(9): nop 0x0(%rax,%rax,1)
11790(7): cmp $0x0,0x8c(%rdi)
11797(6): jnz 0xfffffe75(%rip)
1179d(3): cmp %rbx,%r15
117a0(6): jnl 0x198(%rip)
117a6(4): lea 0x20(%rdi),%rax
117aa(5): mov %rax,0x8(%rsp)
117af(5): lea 0x44(%rsp),%rax
117b4(5): mov %rax,0x30(%rsp)
117b9(5): lea 0x48(%rsp),%rax
117be(5): mov %rax,0x38(%rsp)
117c3(5): lea 0x50(%rsp),%rax
117c8(5): mov %rax,0x28(%rsp)
117cd(3): nop (%rax)
117d0(4): mov 0x28(%r14),%rbp
117d4(3): mov %r15,%r13
117d7(3): add %r15,%rbp
117da(3): add (%r14),%rbp
117dd(5): movzx 0x0(%rbp),%r12d
117e2(4): test $0x80,%r12b
117e6(2): jnz 0x14(%rip)
117e8(5): mov 0x8(%rsp),%rdi
117ed(5): call 0xffff11a3(%rip)
117f2(2): test %eax,%eax
117f4(6): jnz 0xf4(%rip)
117fa(4): mov 0x20(%r14),%rax
117fe(5): mov 0x30(%rsp),%rdi
11803(3): mov %rbx,%rdx
11806(5): mov 0x8(%rsp),%rcx
1180b(3): sub %r15,%rdx
1180e(3): mov %rbp,%rsi
11811(5): mov %rdx,0x10(%rsp)
11816(5): mov %rax,0x48(%rsp)
1181b(5): mov %rdi,0x20(%rsp)
11820(5): call 0xffffe9c0(%rip)
11825(3): mov %rax,%rbp
11828(4): lea 0xffffffff(%rax),%rax
1182c(4): cmp $0xfffffffc,%rax
11830(6): jnbe 0xe8(%rip)
11836(4): mov 0x44(%rsp),%edx
1183a(2): mov %edx,%edi
1183c(4): mov %edx,0x18(%rsp)
11840(5): call 0xffff10d0(%rip)
11845(4): mov 0x18(%rsp),%edx
11849(3): mov %eax,%r12d
1184c(2): cmp %eax,%edx
1184e(2): jz 0x7a(%rip)
11850(5): mov 0x38(%rsp),%rdx
11855(5): mov 0x28(%rsp),%rdi
1185a(2): mov %eax,%esi
1185c(5): call 0xffff0f34(%rip)
11861(3): cmp %rax,%rbp
11864(6): jnz 0x174(%rip)
1186a(4): mov 0x8(%r14),%rdi
1186e(5): mov 0x28(%rsp),%rsi
11873(3): mov %rbp,%rdx
11876(3): add %r15,%rdi
11879(5): call 0xffff0e97(%rip)
1187e(4): add $0x1,%r15
11882(4): mov 0x10(%r14),%rdx
11886(8): lea 0x0(,%r13,4),%rax
1188e(5): lea 0xffffffff(%r15,%rbp,1),%rcx
11893(3): cmp %rcx,%r15
11896(4): mov %r12d,0x0(%rdx,%r13,4)
1189a(2): jnl 0x20(%rip)
1189c(5): lea 0x4(%rdx,%rax,1),%rax
118a1(4): lea 0x0(%rdx,%rcx,4),%rdx
118a5(3): nop (%rax)
118a8(6): mov $0xffffffff,(%rax)
118ae(4): add $0x4,%rax
118b2(3): cmp %rax,%rdx
118b5(2): jnz 0xfffffff3(%rip)
118b7(3): mov %rcx,%r15
118ba(3): cmp %r15,%rbx
118bd(6): jnle 0xffffff13(%rip)
118c3(2): jmp 0x75(%rip)
118c5(3): nop (%rax)
118c8(4): mov 0x28(%r14),%rsi
118cc(4): mov 0x8(%r14),%rdi
118d0(3): mov %rbp,%rdx
118d3(3): add %r15,%rsi
118d6(3): add (%r14),%rsi
118d9(3): add %r15,%rdi
118dc(5): call 0xffff0e34(%rip)
118e1(2): jmp 0xffffff9d(%rip)
118e3(5): nop 0x0(%rax,%rax,1)
118e8(5): call 0xffff0ad8(%rip)
118ed(3): mov (%rax),%rax
118f0(4): mov 0x8(%r14),%rdx
118f4(4): mov 0x0(%rax,%r12,4),%eax
118f8(4): mov %al,0x0(%rdx,%r15,1)
118fc(4): mov 0x8(%r14),%rdx
11900(4): mov 0x10(%r14),%rax
11904(5): movzx 0x0(%rdx,%r15,1),%edx
11909(4): mov %edx,0x0(%rax,%r15,4)
1190d(4): add $0x1,%r15
11911(2): jmp 0xffffffa9(%rip)
11913(5): nop 0x0(%rax,%rax,1)
11918(4): cmp $0xfffffffd,%rax
1191c(2): jnz 0x34(%rip)
1191e(4): mov 0x58(%r14),%rax
11922(4): cmp %rax,0x40(%r14)
11926(2): jnl 0x2a(%rip)
11928(5): mov 0x48(%rsp),%rax
1192d(4): mov %rax,0x20(%r14)
11931(7): nop 0x0(%rax)
11938(4): mov %r15,0x30(%r14)
1193c(4): mov %r15,0x38(%r14)
11940(2): xor %eax,%eax
11942(5): jmp 0xfffffcdd(%rip)
11947(9): nop 0x0(%rax,%rax,1)
11950(3): mov (%r14),%rax
11953(4): mov 0x8(%r14),%rdx
11957(3): add %r15,%rax
1195a(4): add 0x28(%r14),%rax
1195e(3): movzx (%rax),%eax
11961(4): mov %al,0x0(%rdx,%r15,1)
11965(4): mov 0x10(%r14),%rdx
11969(4): add $0x1,%r15
1196d(4): cmp $0xffffffff,%rbp
11971(4): mov %eax,0x0(%rdx,%r13,4)
11975(6): jnz 0xffffff45(%rip)
1197b(5): mov 0x48(%rsp),%rax
11980(4): mov %rax,0x20(%r14)
11984(5): jmp 0xffffff36(%rip)
11989(7): mov 0x90(%r14),%eax
11990(2): test %eax,%eax
11992(6): jle 0x21e(%rip)
11998(4): mov 0x28(%r14),%rdi
1199c(4): lea 0xffffffff(%rax),%r11d
119a0(5): lea 0x50(%rsp),%rcx
119a5(2): xor %eax,%eax
119a7(3): add %r13,%rdi
119aa(3): add (%r14),%rdi
119ad(2): jmp 0xd(%rip)
119af(4): add $0x1,%rax
119b3(5): cmp %rax,0x10(%rsp)
119b8(2): jz 0x13(%rip)
119ba(4): movzx 0x0(%rdi,%rax,1),%esi
119be(3): cmp %rax,%r11
119c1(4): movzx 0x0(%rdx,%rsi,1),%esi
119c5(4): mov %sil,0x0(%rcx,%rax,1)
119c9(2): jnz 0xffffffe6(%rip)
119cb(5): mov %rcx,0x18(%rsp)
119d0(5): jmp 0xfffffcc3(%rip)
119d5(3): nop (%rax)
119d8(3): mov %r15,%r13
119db(5): jmp 0xfffffc93(%rip)
119e0(4): mov 0x8(%r14),%rdi
119e4(5): mov 0x18(%rsp),%rsi
119e9(3): mov %rbp,%rdx
119ec(3): add %r15,%rdi
119ef(5): call 0xffff0d21(%rip)
119f4(5): jmp 0xfffffd2d(%rip)
119f9(6): cmp $0xfffffffd,0x20(%rsp)
119ff(2): jnz 0xc(%rip)
11a01(4): mov 0x58(%r14),%rax
11a05(4): cmp %rax,0x40(%r14)
11a09(2): jl 0x7f(%rip)
11a0b(3): mov (%r14),%rax
11a0e(4): mov 0x78(%r14),%rdx
11a12(3): add %r13,%rax
11a15(4): add 0x28(%r14),%rax
11a19(3): test %rdx,%rdx
11a1c(3): movzx (%rax),%eax
11a1f(6): jnz 0x1ad(%rip)
11a25(4): mov 0x8(%r14),%rdx
11a29(3): mov %r15,%rcx
11a2c(4): mov %al,0x0(%rdx,%r15,1)
11a30(8): cmp $0x0,0x8c(%r14)
11a38(6): jnz 0x187(%rip)
11a3e(4): mov 0x10(%r14),%rdx
11a42(4): add $0x1,%r13
11a46(4): add $0x1,%r15
11a4a(4): cmp $0xffffffff,%rbp
11a4e(3): mov %eax,0x0(%rdx,%rcx,4)
11a51(6): jnz 0xfffffbbf(%rip)
11a57(5): mov 0x48(%rsp),%rax
11a5c(4): mov %rax,0x20(%r14)
11a60(5): jmp 0xfffffbb0(%rip)
11a65(4): mov 0x18(%r14),%rdx
11a69(3): mov %r15,%rcx
11a6c(3): mov %r13,%r10
11a6f(3): sub %r13,%rcx
11a72(4): lea 0x0(%rdx,%rcx,8),%rdx
11a76(4): mov %r10,0x0(%rdx,%r10,8)
11a7a(4): add $0x1,%r10
11a7e(3): cmp %r10,%rax
11a81(2): jnz 0xfffffff5(%rip)
11a83(5): jmp 0xfffffcb1(%rip)
11a88(5): mov 0x48(%rsp),%rax
11a8d(4): mov %rax,0x20(%r14)
11a91(5): jmp 0xfffffb84(%rip)
11a96(4): cmp $0xffffffff,%rax
11a9a(6): jz 0xffffff46(%rip)
11aa0(4): lea 0x0(%rax,%r15,1),%rax
11aa4(3): mov %rax,%rsi
11aa7(5): mov %rax,0x8(%rsp)
11aac(4): mov 0x40(%r14),%rax
11ab0(3): cmp %rax,%rsi
11ab3(2): jnbe 0xffffffd5(%rip)
11ab5(5): cmp $0x0,0x18(%r14)
11aba(6): jz 0xbe(%rip)
11ac0(8): cmp $0x0,0x8c(%r14)
11ac8(2): jnz 0x22(%rip)
11aca(3): test %r15,%r15
11acd(2): jz 0x15(%rip)
11acf(4): mov 0x18(%r14),%rdx
11ad3(2): xor %eax,%eax
11ad5(4): mov %rax,0x0(%rdx,%rax,8)
11ad9(4): add $0x1,%rax
11add(3): cmp %r15,%rax
11ae0(2): jnz 0xfffffff5(%rip)
11ae2(8): mov $0x1,0x8c(%r14)
11aea(4): mov 0x8(%r14),%rdi
11aee(3): mov %rcx,%rsi
11af1(3): mov %r11,%rdx
11af4(5): mov %r11,0x10(%rsp)
11af9(3): add %r15,%rdi
11afc(5): call 0xffff0c14(%rip)
11b01(4): mov 0x10(%r14),%rax
11b05(5): mov 0x10(%rsp),%r11
11b0a(4): lea 0x0(%rax,%r15,4),%rcx
11b0e(4): mov 0x18(%r14),%rax
11b12(4): cmp $0x1,%r11
11b16(3): mov %r12d,(%rcx)
11b19(4): lea 0x0(%rax,%r15,8),%rsi
11b1d(3): mov %r13,(%rsi)
11b20(2): jbe 0x2a(%rip)
11b22(5): mov $0x1,%eax
11b27(5): mov 0x20(%rsp),%rdx
11b2c(3): cmp %rbp,%rax
11b2f(4): cmovnae %rax,%rdx
11b33(3): add %r13,%rdx
11b36(4): mov %rdx,0x0(%rsi,%rax,8)
11b3a(7): mov $0xffffffff,0x0(%rcx,%rax,4)
11b41(4): add $0x1,%rax
11b45(3): cmp %r11,%rax
11b48(2): jnz 0xffffffdf(%rip)
11b4a(4): mov 0x58(%r14),%rbx
11b4e(3): sub %rbp,%r11
11b51(3): add %r11,%rbx
11b54(4): cmp 0x60(%r14),%r13
11b58(4): mov %rbx,0x58(%r14)
11b5c(2): jnl 0x6(%rip)
11b5e(4): add %r11,0x68(%r14)
11b62(4): cmp %rbx,0x40(%r14)
11b66(5): mov 0x8(%rsp),%r15
11b6b(5): cmovng 0x40(%r14),%rbx
11b70(3): add %rbp,%r13
11b73(5): jmp 0xfffffa9d(%rip)
11b78(8): lea 0x0(,%rax,8),%rdi
11b80(5): mov %rcx,0x18(%rsp)
11b85(5): mov %r11,0x10(%rsp)
11b8a(5): call 0xffff0bf6(%rip)
11b8f(3): test %rax,%rax
11b92(4): mov %rax,0x18(%r14)
11b96(5): mov 0x10(%rsp),%r11
11b9b(5): mov 0x18(%rsp),%rcx
11ba0(6): jnz 0xffffff20(%rip)
11ba6(5): mov $0xc,%eax
11bab(5): jmp 0xfffffa74(%rip)
11bb0(5): lea 0x50(%rsp),%rcx
11bb5(5): jmp 0xfffffe16(%rip)
11bba(5): call 0xffff09a6(%rip)
11bbf(4): mov 0x18(%r14),%rdx
11bc3(4): mov %r13,0x0(%rdx,%r15,8)
11bc7(5): jmp 0xfffffe77(%rip)
11bcc(4): movzx 0x0(%rdx,%rax,1),%eax
11bd0(5): jmp 0xfffffe55(%rip)

"extend_buffers" :
11be0(1): push %rbp
11be1(1): push %rbx
11be2(a): mov $0x1152921504606846974,%rdx
11bec(4): sub $0x8,%rsp
11bf0(4): mov 0x40(%rdi),%rax
11bf4(3): cmp %rdx,%rax
11bf7(6): jnbe 0x111(%rip)
11bfd(4): mov 0x58(%rdi),%rdx
11c01(3): add %rax,%rax
11c04(3): movsxd %esi,%rsi
11c07(3): mov %rdi,%rbx
11c0a(3): cmp %rdx,%rax
11c0d(4): cmovnl %rdx,%rax
11c11(3): cmp %rsi,%rax
11c14(4): cmovnl %rax,%rsi
11c18(5): call 0xfffff438(%rip)
11c1d(2): test %eax,%eax
11c1f(2): mov %eax,%ebp
11c21(6): jnz 0xbc(%rip)
11c27(7): mov 0xb8(%rbx),%rdi
11c2e(3): test %rdi,%rdi
11c31(2): jz 0x23(%rip)
11c33(4): mov 0x40(%rbx),%rax
11c37(8): lea 0x8(,%rax,8),%rsi
11c3f(5): call 0xffff0bf1(%rip)
11c44(3): test %rax,%rax
11c47(6): jz 0xc1(%rip)
11c4d(7): mov %rax,0xb8(%rbx)
11c54(7): cmp $0x0,0x88(%rbx)
11c5b(6): mov 0x90(%rbx),%eax
11c61(2): jz 0x1f(%rip)
11c63(3): cmp $0x1,%eax
11c66(3): mov %rbx,%rdi
11c69(6): jle 0xb7(%rip)
11c6f(4): add $0x8,%rsp
11c73(1): pop %rbx
11c74(1): pop %rbp
11c75(5): jmp 0xfffff94b(%rip)
11c7a(6): nop 0x0(%rax,%rax,1)
11c80(3): cmp $0x1,%eax
11c83(2): jnle 0x6d(%rip)
11c85(4): mov 0x78(%rbx),%rcx
11c89(3): test %rcx,%rcx
11c8c(2): jz 0x51(%rip)
11c8e(4): mov 0x58(%rbx),%rsi
11c92(4): cmp %rsi,0x40(%rbx)
11c96(5): cmovng 0x40(%rbx),%rsi
11c9b(4): mov 0x30(%rbx),%rax
11c9f(3): cmp %rax,%rsi
11ca2(2): jnle 0x12(%rip)
11ca4(2): jmp 0x31(%rip)
11ca6(a): nop 0x0(%rax,%rax,1)
11cb0(4): mov 0x78(%rbx),%rcx
11cb4(3): mov (%rbx),%rdx
11cb7(3): add %rax,%rdx
11cba(4): add 0x28(%rbx),%rdx
11cbe(3): movzx (%rdx),%edx
11cc1(4): movzx 0x0(%rcx,%rdx,1),%ecx
11cc5(4): mov 0x8(%rbx),%rdx
11cc9(3): mov %cl,0x0(%rdx,%rax,1)
11ccc(4): add $0x1,%rax
11cd0(3): cmp %rax,%rsi
11cd3(2): jnz 0xffffffdd(%rip)
11cd5(4): mov %rax,0x30(%rbx)
11cd9(4): mov %rax,0x38(%rbx)
11cdd(4): add $0x8,%rsp
11ce1(2): mov %ebp,%eax
11ce3(1): pop %rbx
11ce4(1): pop %rbp
11ce5(1): ret near (%rsp)
11ce6(a): nop 0x0(%rax,%rax,1)
11cf0(3): mov %rbx,%rdi
11cf3(5): call 0xfffff6fd(%rip)
11cf8(4): add $0x8,%rsp
11cfc(2): mov %ebp,%eax
11cfe(1): pop %rbx
11cff(1): pop %rbp
11d00(1): ret near (%rsp)
11d01(7): nop 0x0(%rax)
11d08(5): mov $0xc,%ebp
11d0d(4): add $0x8,%rsp
11d11(2): mov %ebp,%eax
11d13(1): pop %rbx
11d14(1): pop %rbp
11d15(1): ret near (%rsp)
11d16(a): nop 0x0(%rax,%rax,1)
11d20(5): call 0xfffff660(%rip)
11d25(4): add $0x8,%rsp
11d29(2): mov %ebp,%eax
11d2b(1): pop %rbx
11d2c(1): pop %rbp
11d2d(1): ret near (%rsp)

"clean_state_log_if_needed" :
11d30(2): push %r12
11d32(1): push %rbp
11d33(3): mov %rsi,%rbp
11d36(1): push %rbx
11d37(4): mov 0x40(%rdi),%rax
11d3b(3): mov %rdi,%rbx
11d3e(7): mov 0xc0(%rdi),%r12
11d45(3): cmp %rsi,%rax
11d48(2): jnle 0x28(%rip)
11d4a(4): cmp 0x58(%rdi),%rax
11d4e(2): jnl 0x22(%rip)
11d50(3): lea 0x1(%rbp),%esi
11d53(3): mov %rbx,%rdi
11d56(5): call 0xfffffe8a(%rip)
11d5b(2): test %eax,%eax
11d5d(2): jnz 0x9(%rip)
11d5f(3): cmp %rbp,%r12
11d62(2): jl 0x2e(%rip)
11d64(2): xor %eax,%eax
11d66(1): pop %rbx
11d67(1): pop %rbp
11d68(2): pop %r12
11d6a(1): ret near (%rsp)
11d6b(5): nop 0x0(%rax,%rax,1)
11d70(4): mov 0x30(%rbx),%rax
11d74(3): cmp %rbp,%rax
11d77(2): jnle 0xffffffe8(%rip)
11d79(4): cmp 0x58(%rbx),%rax
11d7d(2): jnl 0xffffffe2(%rip)
11d7f(3): lea 0x1(%rbp),%esi
11d82(3): mov %rbx,%rdi
11d85(5): call 0xfffffe5b(%rip)
11d8a(2): test %eax,%eax
11d8c(2): jz 0xffffffd3(%rip)
11d8e(2): jmp 0xffffffd8(%rip)
11d90(7): mov 0xb8(%rbx),%rax
11d97(3): mov %rbp,%rdx
11d9a(2): xor %esi,%esi
11d9c(3): sub %r12,%rdx
11d9f(4): shl/sal $0x3,%rdx
11da3(5): lea 0x8(%rax,%r12,8),%rdi
11da8(5): call 0xffff0878(%rip)
11dad(7): mov %rbp,0xc0(%rbx)
11db4(2): jmp 0xffffffb0(%rip)

"free_charset" :
11dc0(1): push %rbx
11dc1(3): mov %rdi,%rbx
11dc4(3): mov (%rdi),%rdi
11dc7(5): call 0xffff0c49(%rip)
11dcc(4): mov 0x8(%rbx),%rdi
11dd0(5): call 0xffff0c40(%rip)
11dd5(4): mov 0x10(%rbx),%rdi
11dd9(5): call 0xffff0c37(%rip)
11dde(4): mov 0x18(%rbx),%rdi
11de2(5): call 0xffff0c2e(%rip)
11de7(3): mov %rbx,%rdi
11dea(1): pop %rbx
11deb(5): jmp 0xffff0c25(%rip)

"free_token" :
11df0(3): mov 0x8(%rdi),%eax
11df3(5): and $0x400ff,%eax
11df8(3): cmp $0x6,%eax
11dfb(2): jz 0x15(%rip)
11dfd(3): cmp $0x3,%eax
11e00(2): jz 0x8(%rip)
11e02(2): REP ret near (%rsp)
11e04(4): nop 0x0(%rax)
11e08(3): mov (%rdi),%rdi
11e0b(5): jmp 0xffff0c05(%rip)
11e10(3): mov (%rdi),%rdi
11e13(2): jmp 0xffffffad(%rip)

"free_tree" :
11e20(4): lea 0x28(%rsi),%rdi
11e24(4): sub $0x8,%rsp
11e28(5): call 0xffffffc8(%rip)
11e2d(2): xor %eax,%eax
11e2f(4): add $0x8,%rsp
11e33(1): ret near (%rsp)

"re_dfa_add_node" :
11e40(2): push %r15
11e42(2): push %r14
11e44(3): mov %rsi,%r14
11e47(2): push %r13
11e49(2): push %r12
11e4b(1): push %rbp
11e4c(1): push %rbx
11e4d(3): mov %rdi,%rbx
11e50(4): sub $0x18,%rsp
11e54(4): mov 0x10(%rdi),%rsi
11e58(4): mov 0x8(%rdi),%rbp
11e5c(3): cmp %rbp,%rsi
11e5f(6): jnb 0xb1(%rip)
11e65(4): mov 0x18(%rdi),%r12
11e69(4): mov 0x28(%rdi),%rbp
11e6d(3): mov %rsi,%rax
11e70(2): mov %edx,%ecx
11e72(4): shl/sal $0x4,%rax
11e76(3): add (%rbx),%rax
11e79(6): and $0xfffc00ff,%ecx
11e7f(4): mov %rdx,0x8(%rax)
11e83(3): mov %ecx,0x8(%rax)
11e86(2): xor %ecx,%ecx
11e88(3): cmp $0x6,%dl
11e8b(3): mov %r14,(%rax)
11e8e(3): setz %cl
11e91(3): cmp $0x5,%dl
11e94(2): jnz 0xe(%rip)
11e96(2): xor %ecx,%ecx
11e98(7): cmp $0x1,0xb4(%rbx)
11e9f(3): setnle %cl
11ea2(4): movzx 0xa(%rax),%edx
11ea6(3): shl/sal $0x4,%ecx
11ea9(4): pxor %xmm0,%xmm0
11ead(3): and $0xef,%edx
11eb0(2): or %ecx,%edx
11eb2(3): mov %dl,0xa(%rax)
11eb5(8): mov $0xffffffff,0x0(%r12,%rsi,8)
11ebd(4): mov 0x10(%rbx),%rax
11ec1(4): lea 0x0(%rax,%rax,2),%rax
11ec5(5): lea 0x0(%rbp,%rax,8),%rax
11eca(3): movups %xmm0,(%rax)
11ecd(8): mov $0x0,0x10(%rax)
11ed5(4): mov 0x10(%rbx),%rax
11ed9(4): lea 0x0(%rax,%rax,2),%rdx
11edd(4): mov 0x30(%rbx),%rax
11ee1(4): lea 0x0(%rax,%rdx,8),%rax
11ee5(3): movups %xmm0,(%rax)
11ee8(8): mov $0x0,0x10(%rax)
11ef0(4): mov 0x10(%rbx),%rax
11ef4(4): lea 0x1(%rax),%rdx
11ef8(4): mov %rdx,0x10(%rbx)
11efc(4): add $0x18,%rsp
11f00(1): pop %rbx
11f01(1): pop %rbp
11f02(2): pop %r12
11f04(2): pop %r13
11f06(2): pop %r14
11f08(2): pop %r15
11f0a(1): ret near (%rsp)
11f0b(5): nop 0x0(%rax,%rax,1)
11f10(5): lea 0x0(%rbp,%rbp,1),%r13
11f15(a): mov $0x768614336404564650,%rax
11f1f(3): cmp %rax,%r13
11f22(6): jnbe 0xe0(%rip)
11f28(3): mov (%rdi),%rdi
11f2b(3): mov %rbp,%rsi
11f2e(5): mov %rdx,0x8(%rsp)
11f33(4): shl/sal $0x5,%rsi
11f37(5): call 0xffff08f9(%rip)
11f3c(3): test %rax,%rax
11f3f(6): jz 0xc3(%rip)
11f45(3): mov %rbp,%r15
11f48(4): mov 0x18(%rbx),%rdi
11f4c(3): mov %rax,(%rbx)
11f4f(4): shl/sal $0x4,%r15
11f53(3): mov %r15,%rsi
11f56(5): call 0xffff08da(%rip)
11f5b(4): mov 0x20(%rbx),%rdi
11f5f(3): mov %r15,%rsi
11f62(5): lea 0x0(%r13,%rbp,4),%r15
11f67(3): mov %rax,%r12
11f6a(4): shl/sal $0x3,%r15
11f6e(5): call 0xffff08c2(%rip)
11f73(4): mov 0x28(%rbx),%rdi
11f77(3): mov %r15,%rsi
11f7a(4): mov %rax,(%rsp)
11f7e(5): call 0xffff08b2(%rip)
11f83(4): mov 0x30(%rbx),%rdi
11f87(3): mov %r15,%rsi
11f8a(3): mov %rax,%rbp
11f8d(5): call 0xffff08a3(%rip)
11f92(3): test %r12,%r12
11f95(4): mov (%rsp),%rcx
11f99(2): jz 0x37(%rip)
11f9b(3): test %rcx,%rcx
11f9e(2): jz 0x32(%rip)
11fa0(3): test %rbp,%rbp
11fa3(2): jz 0x2d(%rip)
11fa5(3): test %rax,%rax
11fa8(5): mov 0x8(%rsp),%rdx
11fad(2): jz 0x23(%rip)
11faf(4): mov %r12,0x18(%rbx)
11fb3(4): mov %rcx,0x20(%rbx)
11fb7(4): mov %rbp,0x28(%rbx)
11fbb(4): mov %rax,0x30(%rbx)
11fbf(4): mov %r13,0x8(%rbx)
11fc3(4): mov 0x10(%rbx),%rsi
11fc7(5): jmp 0xfffffea6(%rip)
11fcc(4): nop 0x0(%rax)
11fd0(3): mov %r12,%rdi
11fd3(5): mov %rax,0x8(%rsp)
11fd8(4): mov %rcx,(%rsp)
11fdc(5): call 0xffff0a34(%rip)
11fe1(4): mov (%rsp),%rcx
11fe5(3): mov %rcx,%rdi
11fe8(5): call 0xffff0a28(%rip)
11fed(3): mov %rbp,%rdi
11ff0(5): call 0xffff0a20(%rip)
11ff5(5): mov 0x8(%rsp),%rax
11ffa(3): mov %rax,%rdi
11ffd(5): call 0xffff0a13(%rip)
12002(7): mov $0xffffffff,%rax
12009(5): jmp 0xfffffef3(%rip)

"duplicate_node" :
12010(2): push %r13
12012(2): push %r12
12014(3): mov %rsi,%r13
12017(1): push %rbp
12018(1): push %rbx
12019(4): shl/sal $0x4,%r13
1201d(3): mov %rsi,%rbp
12020(3): mov %edx,%r12d
12023(3): mov %rdi,%rbx
12026(4): sub $0x8,%rsp
1202a(3): mov (%rdi),%rax
1202d(4): mov 0x0(%rax,%r13,1),%rsi
12031(5): mov 0x8(%rax,%r13,1),%rdx
12036(5): call 0xfffffe0a(%rip)
1203b(4): cmp $0xffffffff,%rax
1203f(2): jz 0x65(%rip)
12041(3): mov %r12d,%edi
12044(3): mov (%rbx),%r8
12047(3): mov %rax,%rsi
1204a(5): and $0x3ff,%di
1204f(4): shl/sal $0x4,%rsi
12053(2): mov %edi,%ecx
12055(6): and $0x3ff,%ecx
1205b(3): add %r8,%rsi
1205e(3): shl/sal $0x8,%ecx
12061(2): mov %ecx,%edx
12063(3): mov 0x8(%rsi),%ecx
12066(6): and $0xfffc00ff,%ecx
1206c(2): or %edx,%ecx
1206e(3): mov %ecx,0x8(%rsi)
12071(5): mov 0x8(%r8,%r13,1),%edx
12076(6): and $0xfffc00ff,%ecx
1207c(3): shr $0x8,%edx
1207f(2): or %edi,%edx
12081(6): and $0x3ff,%edx
12087(3): shl/sal $0x8,%edx
1208a(2): or %ecx,%edx
1208c(2): mov %edx,%ecx
1208e(3): mov %edx,0x8(%rsi)
12091(3): shr $0x10,%ecx
12094(2): mov %ecx,%edx
12096(3): or $0x4,%edx
12099(3): mov %dl,0xa(%rsi)
1209c(4): mov 0x20(%rbx),%rdx
120a0(4): mov %rbp,0x0(%rdx,%rax,8)
120a4(4): add $0x8,%rsp
120a8(1): pop %rbx
120a9(1): pop %rbp
120aa(2): pop %r12
120ac(2): pop %r13
120ae(1): ret near (%rsp)

"duplicate_node_closure" :
120b0(2): push %r15
120b2(2): push %r14
120b4(3): mov %rsi,%r9
120b7(2): push %r13
120b9(2): push %r12
120bb(3): mov %rdi,%r14
120be(1): push %rbp
120bf(1): push %rbx
120c0(3): mov %rdx,%r13
120c3(3): mov %r8d,%ebp
120c6(4): sub $0x18,%rsp
120ca(5): mov %rcx,0x8(%rsp)
120cf(3): mov (%r14),%r8
120d2(3): mov %r9,%rax
120d5(4): mov 0x28(%r14),%rdi
120d9(4): shl/sal $0x4,%rax
120dd(3): mov %r13,%r12
120e0(3): add %r8,%rax
120e3(4): cmp $0x4,0x8(%rax)
120e7(6): jz 0x1b9(%rip)
120ed(4): lea 0x0(%r9,%r9,2),%r12
120f1(4): shl/sal $0x3,%r12
120f5(4): lea 0x0(%rdi,%r12,1),%rsi
120f9(4): mov 0x8(%rsi),%rcx
120fd(3): test %rcx,%rcx
12100(6): jz 0x1f9(%rip)
12106(5): lea 0x0(%r13,%r13,2),%rbx
1210b(4): mov 0x10(%rsi),%rsi
1210f(4): shl/sal $0x3,%rbx
12113(3): add %rbx,%rdi
12116(4): cmp $0x1,%rcx
1211a(3): mov (%rsi),%r15
1211d(8): mov $0x0,0x8(%rdi)
12125(6): jz 0x11b(%rip)
1212b(4): mov 0x10(%r14),%rdx
1212f(4): lea 0xffffffff(%rdx),%rsi
12133(3): mov %rsi,%rax
12136(4): shl/sal $0x4,%rax
1213a(3): add %r8,%rax
1213d(4): test $0x4,0xa(%rax)
12141(6): jz 0xaf(%rip)
12147(3): test %rsi,%rsi
1214a(6): jle 0xa6(%rip)
12150(4): shl/sal $0x4,%rdx
12154(3): sub %rax,%r8
12157(4): mov 0x20(%r14),%rcx
1215b(5): lea 0xffffffe0(%r8,%rdx,1),%r8
12160(2): jmp 0x1a(%rip)
12162(6): nop 0x0(%rax,%rax,1)
12168(3): add %r8,%rax
1216b(4): sub $0x1,%rsi
1216f(4): test $0x4,0xa(%rax)
12173(2): jz 0x7d(%rip)
12175(3): test %rsi,%rsi
12178(2): jle 0x78(%rip)
1217a(4): cmp %r15,0x0(%rcx,%rsi,8)
1217e(2): jnz 0xffffffea(%rip)
12180(3): mov 0x8(%rax),%edx
12183(3): shr $0x8,%edx
12186(6): and $0x3ff,%edx
1218c(2): cmp %edx,%ebp
1218e(2): jnz 0xffffffda(%rip)
12190(5): call 0xffffefd0(%rip)
12195(2): test %al,%al
12197(2): jz 0x44(%rip)
12199(4): mov 0x28(%r14),%rax
1219d(2): mov %ebp,%edx
1219f(3): mov %r14,%rdi
121a2(5): mov 0x10(%rax,%r12,1),%rax
121a7(4): mov 0x8(%rax),%r9
121ab(3): mov %r9,%rsi
121ae(4): mov %r9,(%rsp)
121b2(5): call 0xfffffe5e(%rip)
121b7(4): cmp $0xffffffff,%rax
121bb(3): mov %rax,%r13
121be(2): jz 0x1d(%rip)
121c0(4): add 0x28(%r14),%rbx
121c4(3): mov %r13,%rsi
121c7(3): mov %rbx,%rdi
121ca(5): call 0xffffef96(%rip)
121cf(2): test %al,%al
121d1(4): mov (%rsp),%r9
121d5(6): jnz 0xfffffefa(%rip)
121db(5): mov $0xc,%eax
121e0(4): add $0x18,%rsp
121e4(1): pop %rbx
121e5(1): pop %rbp
121e6(2): pop %r12
121e8(2): pop %r13
121ea(2): pop %r14
121ec(2): pop %r15
121ee(1): ret near (%rsp)
121ef(1): nop 
121f0(2): mov %ebp,%edx
121f2(3): mov %r15,%rsi
121f5(3): mov %r14,%rdi
121f8(5): call 0xfffffe18(%rip)
121fd(4): cmp $0xffffffff,%rax
12201(3): mov %rax,%r13
12204(2): jz 0xffffffd7(%rip)
12206(4): mov 0x28(%r14),%rdi
1220a(3): mov %r13,%rsi
1220d(3): add %rbx,%rdi
12210(5): call 0xffffef50(%rip)
12215(2): test %al,%al
12217(2): jz 0xffffffc4(%rip)
12219(5): mov 0x8(%rsp),%rcx
1221e(3): mov %ebp,%r8d
12221(3): mov %r13,%rdx
12224(3): mov %r15,%rsi
12227(3): mov %r14,%rdi
1222a(5): call 0xfffffe86(%rip)
1222f(2): test %eax,%eax
12231(6): jz 0xffffff68(%rip)
12237(2): jmp 0xffffffa9(%rip)
12239(7): nop 0x0(%rax)
12240(5): cmp 0x8(%rsp),%r9
12245(2): jnz 0xb(%rip)
12247(3): cmp %r13,%r9
1224a(6): jnz 0xc2(%rip)
12250(3): mov 0x8(%rax),%eax
12253(3): mov %r15,%rsi
12256(3): mov %r14,%rdi
12259(3): shr $0x8,%eax
1225c(5): and $0x3ff,%eax
12261(2): or %eax,%ebp
12263(2): mov %ebp,%edx
12265(5): call 0xfffffdab(%rip)
1226a(4): cmp $0xffffffff,%rax
1226e(3): mov %rax,%r13
12271(6): jz 0xffffff6a(%rip)
12277(4): add 0x28(%r14),%rbx
1227b(3): mov %rax,%rsi
1227e(3): mov %rbx,%rdi
12281(5): call 0xffffeedf(%rip)
12286(2): test %al,%al
12288(6): jz 0xffffff53(%rip)
1228e(3): mov %r15,%r9
12291(5): jmp 0xfffffe3e(%rip)
12296(a): nop 0x0(%rax,%rax,1)
122a0(4): mov 0x18(%r14),%rax
122a4(5): lea 0x0(%r13,%r13,2),%rbx
122a9(8): lea 0x0(,%r9,8),%r15
122b1(2): mov %ebp,%edx
122b3(4): shl/sal $0x3,%rbx
122b7(4): mov 0x0(%rax,%r9,8),%r9
122bb(9): mov $0x0,0x8(%rdi,%rbx,1)
122c4(3): mov %r14,%rdi
122c7(3): mov %r9,%rsi
122ca(4): mov %r9,(%rsp)
122ce(5): call 0xfffffd42(%rip)
122d3(4): cmp $0xffffffff,%rax
122d7(3): mov %rax,%r13
122da(4): mov (%rsp),%r9
122de(6): jz 0xfffffefd(%rip)
122e4(4): mov 0x18(%r14),%rax
122e8(4): mov %r9,(%rsp)
122ec(4): mov 0x0(%rax,%r15,1),%rcx
122f0(4): mov %rcx,0x0(%rax,%r12,8)
122f4(5): jmp 0xfffffecc(%rip)
122f9(4): mov 0x18(%r14),%rax
122fd(4): mov 0x0(%rax,%r9,8),%rcx
12301(4): mov %rcx,0x0(%rax,%r13,8)
12305(2): xor %eax,%eax
12307(5): jmp 0xfffffed9(%rip)
1230c(3): mov %r15,%rsi
1230f(5): call 0xffffee51(%rip)
12314(2): mov %eax,%edx
12316(2): xor %eax,%eax
12318(2): test %dl,%dl
1231a(6): jnz 0xfffffec6(%rip)
12320(5): jmp 0xfffffebb(%rip)

"free_state" :
12330(1): push %rbx
12331(3): mov %rdi,%rbx
12334(4): mov 0x30(%rdi),%rdi
12338(5): call 0xffff06d8(%rip)
1233d(4): mov 0x48(%rbx),%rdi
12341(5): call 0xffff06cf(%rip)
12346(4): mov 0x50(%rbx),%rax
1234a(4): lea 0x8(%rbx),%rdx
1234e(3): cmp %rdx,%rax
12351(2): jz 0x14(%rip)
12353(4): mov 0x10(%rax),%rdi
12357(5): call 0xffff06b9(%rip)
1235c(4): mov 0x50(%rbx),%rdi
12360(5): call 0xffff06b0(%rip)
12365(4): mov 0x18(%rbx),%rdi
12369(5): call 0xffff06a7(%rip)
1236e(4): mov 0x60(%rbx),%rdi
12372(5): call 0xffff069e(%rip)
12377(4): mov 0x58(%rbx),%rdi
1237b(5): call 0xffff0695(%rip)
12380(3): mov %rbx,%rdi
12383(1): pop %rbx
12384(5): jmp 0xffff068c(%rip)

"re_string_destruct" :
12390(1): push %rbx
12391(3): mov %rdi,%rbx
12394(4): mov 0x10(%rdi),%rdi
12398(5): call 0xffff0678(%rip)
1239d(4): mov 0x18(%rbx),%rdi
123a1(5): call 0xffff066f(%rip)
123a6(7): cmp $0x0,0x8b(%rbx)
123ad(2): jnz 0xb(%rip)
123af(1): pop %rbx
123b0(1): ret near (%rsp)
123b1(7): nop 0x0(%rax)
123b8(4): mov 0x8(%rbx),%rdi
123bc(1): pop %rbx
123bd(5): jmp 0xffff0653(%rip)

"free_dfa_content" :
123d0(2): push %r14
123d2(2): push %r13
123d4(2): push %r12
123d6(3): mov %rdi,%r12
123d9(1): push %rbp
123da(1): push %rbx
123db(3): mov (%rdi),%rdi
123de(3): test %rdi,%rdi
123e1(2): jz 0x2d(%rip)
123e3(6): cmp $0x0,0x10(%r12)
123e9(2): jz 0x25(%rip)
123eb(2): xor %ebx,%ebx
123ed(2): jmp 0x7(%rip)
123ef(1): nop 
123f0(4): mov (%r12),%rdi
123f4(3): mov %rbx,%rax
123f7(4): add $0x1,%rbx
123fb(4): shl/sal $0x4,%rax
123ff(3): add %rax,%rdi
12402(5): call 0xfffff9ee(%rip)
12407(5): cmp %rbx,0x10(%r12)
1240c(2): jnbe 0xffffffe4(%rip)
1240e(5): mov 0x18(%r12),%rdi
12413(5): call 0xffff05fd(%rip)
12418(6): cmp $0x0,0x10(%r12)
1241e(2): jz 0x55(%rip)
12420(2): xor %ebx,%ebx
12422(2): xor %ebp,%ebp
12424(4): nop 0x0(%rax)
12428(5): mov 0x30(%r12),%rax
1242d(3): test %rax,%rax
12430(2): jz 0xc(%rip)
12432(5): mov 0x10(%rax,%rbx,1),%rdi
12437(5): call 0xffff05d9(%rip)
1243c(5): mov 0x38(%r12),%rax
12441(3): test %rax,%rax
12444(2): jz 0xc(%rip)
12446(5): mov 0x10(%rax,%rbx,1),%rdi
1244b(5): call 0xffff05c5(%rip)
12450(5): mov 0x28(%r12),%rax
12455(3): test %rax,%rax
12458(2): jz 0xc(%rip)
1245a(5): mov 0x10(%rax,%rbx,1),%rdi
1245f(5): call 0xffff05b1(%rip)
12464(4): add $0x1,%rbp
12468(4): add $0x18,%rbx
1246c(5): cmp %rbp,0x10(%r12)
12471(2): jnbe 0xffffffb7(%rip)
12473(5): mov 0x28(%r12),%rdi
12478(5): call 0xffff0598(%rip)
1247d(5): mov 0x30(%r12),%rdi
12482(5): call 0xffff058e(%rip)
12487(5): mov 0x38(%r12),%rdi
1248c(5): call 0xffff0584(%rip)
12491(4): mov (%r12),%rdi
12495(5): call 0xffff057b(%rip)
1249a(5): mov 0x40(%r12),%rdi
1249f(3): test %rdi,%rdi
124a2(2): jz 0x55(%rip)
124a4(3): xor %r14d,%r14d
124a7(3): xor %r13d,%r13d
124aa(6): nop 0x0(%rax,%rax,1)
124b0(4): lea 0x0(%rdi,%r14,1),%rbp
124b4(5): cmp $0x0,0x0(%rbp)
124b9(2): jle 0x1e(%rip)
124bb(2): xor %ebx,%ebx
124bd(3): nop (%rax)
124c0(4): mov 0x10(%rbp),%rax
124c4(4): mov 0x0(%rax,%rbx,8),%rdi
124c8(4): add $0x1,%rbx
124cc(5): call 0xfffffe64(%rip)
124d1(4): cmp %rbx,0x0(%rbp)
124d5(2): jnle 0xffffffeb(%rip)
124d7(4): mov 0x10(%rbp),%rdi
124db(4): add $0x1,%r13
124df(4): add $0x18,%r14
124e3(5): call 0xffff052d(%rip)
124e8(8): cmp %r13,0x88(%r12)
124f0(5): mov 0x40(%r12),%rdi
124f5(2): jnb 0xffffffbb(%rip)
124f7(5): call 0xffff0519(%rip)
124fc(5): mov 0x78(%r12),%rdi
12501(7): lea 0x108b8(%rip),%rax
12508(3): cmp %rax,%rdi
1250b(2): jz 0x7(%rip)
1250d(5): call 0xffff0503(%rip)
12512(8): mov 0xe0(%r12),%rdi
1251a(5): call 0xffff04f6(%rip)
1251f(1): pop %rbx
12520(3): mov %r12,%rdi
12523(1): pop %rbp
12524(2): pop %r12
12526(2): pop %r13
12528(2): pop %r14
1252a(5): jmp 0xffff04e6(%rip)

"match_ctx_clean" :
12530(2): push %r14
12532(2): push %r13
12534(3): mov %rdi,%r14
12537(2): push %r12
12539(1): push %rbp
1253a(1): push %rbx
1253b(8): cmp $0x0,0xe8(%rdi)
12543(6): jle 0x86(%rip)
12549(3): xor %r13d,%r13d
1254c(4): nop 0x0(%rax)
12550(7): mov 0xf8(%r14),%rax
12557(4): mov 0x0(%rax,%r13,8),%r12
1255b(6): cmp $0x0,0x20(%r12)
12561(2): jle 0x2c(%rip)
12563(2): xor %ebx,%ebx
12565(3): nop (%rax)
12568(5): mov 0x28(%r12),%rax
1256d(4): mov 0x0(%rax,%rbx,8),%rbp
12571(4): add $0x1,%rbx
12575(4): mov 0x20(%rbp),%rdi
12579(5): call 0xffff0497(%rip)
1257e(3): mov %rbp,%rdi
12581(5): call 0xffff048f(%rip)
12586(5): cmp %rbx,0x20(%r12)
1258b(2): jnle 0xffffffdd(%rip)
1258d(5): mov 0x28(%r12),%rdi
12592(5): call 0xffff047e(%rip)
12597(5): mov 0x10(%r12),%rax
1259c(3): test %rax,%rax
1259f(2): jz 0x15(%rip)
125a1(4): mov 0x10(%rax),%rdi
125a5(5): call 0xffff046b(%rip)
125aa(5): mov 0x10(%r12),%rdi
125af(5): call 0xffff0461(%rip)
125b4(3): mov %r12,%rdi
125b7(4): add $0x1,%r13
125bb(5): call 0xffff0455(%rip)
125c0(7): cmp %r13,0xe8(%r14)
125c7(2): jnle 0xffffff89(%rip)
125c9(1): pop %rbx
125ca(b): mov $0x0,0xe8(%r14)
125d5(b): mov $0x0,0xc8(%r14)
125e0(1): pop %rbp
125e1(2): pop %r12
125e3(2): pop %r13
125e5(2): pop %r14
125e7(1): ret near (%rsp)

"re_string_char_size_at.part.0" :
125f0(4): mov 0x30(%rdi),%rcx
125f4(4): lea 0x1(%rsi),%rax
125f8(3): cmp %rcx,%rax
125fb(2): jnl 0x3d(%rip)
125fd(4): mov 0x10(%rdi),%rdx
12601(8): lea 0x0(,%rax,4),%rdi
12609(4): cmp $0xff,0x0(%rdx,%rax,4)
1260d(2): jnz 0x2b(%rip)
1260f(3): sub %rsi,%rcx
12612(5): lea 0xfffffffc(%rdx,%rdi,1),%rsi
12617(5): mov $0x2,%edx
1261c(2): jmp 0xf(%rip)
1261e(2): nop 
12620(4): add $0x1,%rdx
12624(5): cmp $0xff,0xfffffffc(%rsi,%rdx,4)
12629(2): jnz 0x14(%rip)
1262b(3): cmp %rcx,%rdx
1262e(2): mov %edx,%eax
12630(2): jnz 0xfffffff0(%rip)
12632(2): REP ret near (%rsp)
12634(4): nop 0x0(%rax)
12638(5): mov $0x1,%eax
1263d(2): REP ret near (%rsp)

"re_node_set_compare.part.2" :
12640(4): mov 0x8(%rdi),%rdx
12644(2): xor %eax,%eax
12646(4): cmp 0x8(%rsi),%rdx
1264a(2): jz 0x6(%rip)
1264c(2): REP ret near (%rsp)
1264e(2): nop 
12650(4): lea 0xffffffff(%rdx),%rax
12654(8): lea 0x0(,%rax,8),%rdx
1265c(2): jmp 0x21(%rip)
1265e(2): nop 
12660(4): mov 0x10(%rdi),%rcx
12664(4): mov 0x0(%rcx,%rdx,1),%r8
12668(4): mov 0x10(%rsi),%rcx
1266c(4): mov 0x0(%rcx,%rdx,1),%rcx
12670(4): sub $0x8,%rdx
12674(3): cmp %rcx,%r8
12677(2): jnz 0x19(%rip)
12679(4): sub $0x1,%rax
1267d(3): test %rax,%rax
12680(2): jns 0xffffffe0(%rip)
12682(5): mov $0x1,%eax
12687(1): ret near (%rsp)
12688(8): nop 0x0(%rax,%rax,1)
12690(2): xor %eax,%eax
12692(1): ret near (%rsp)

"re_node_set_contains.isra.3" :
126a0(2): xor %eax,%eax
126a2(3): test %rdi,%rdi
126a5(2): jle 0x40(%rip)
126a7(3): mov (%rsi),%r8
126aa(4): sub $0x1,%rdi
126ae(2): xor %esi,%esi
126b0(3): cmp %rdi,%rsi
126b3(2): jnb 0x2a(%rip)
126b5(4): lea 0x0(%rsi,%rdi,1),%rcx
126b9(3): shr $0x1,%rcx
126bc(4): cmp 0x0(%r8,%rcx,8),%rdx
126c0(2): jle 0x18(%rip)
126c2(2): jmp 0x2e(%rip)
126c4(4): nop 0x0(%rax)
126c8(4): lea 0x0(%rsi,%rcx,1),%rax
126cc(3): shr $0x1,%rax
126cf(4): cmp %rdx,0x0(%r8,%rax,8)
126d3(2): jl 0x2d(%rip)
126d5(3): mov %rax,%rcx
126d8(3): cmp %rcx,%rsi
126db(2): jb 0xffffffed(%rip)
126dd(2): xor %eax,%eax
126df(4): cmp 0x0(%r8,%rsi,8),%rdx
126e3(2): jz 0x2d(%rip)
126e5(2): REP ret near (%rsp)
126e7(9): nop 0x0(%rax,%rax,1)
126f0(3): mov %rcx,%rax
126f3(3): mov %rdi,%rcx
126f6(a): nop 0x0(%rax,%rax,1)
12700(4): lea 0x1(%rax),%rsi
12704(3): mov %rcx,%rdi
12707(2): jmp 0xffffffa9(%rip)
12709(7): nop 0x0(%rax)
12710(4): lea 0x1(%rsi),%rax
12714(1): ret near (%rsp)

"check_arrival_expand_ecl_sub" :
12720(2): push %r15
12722(2): push %r14
12724(4): lea 0x10(%rsi),%r14
12728(2): push %r13
1272a(2): push %r12
1272c(3): mov %rcx,%r15
1272f(1): push %rbp
12730(1): push %rbx
12731(3): mov %rdi,%r12
12734(3): mov %rsi,%rbp
12737(3): mov %rdx,%rbx
1273a(3): mov %r8d,%r13d
1273d(4): sub $0x8,%rsp
12741(4): mov 0x8(%rbp),%rdi
12745(3): mov %rbx,%rdx
12748(3): mov %r14,%rsi
1274b(5): call 0xffffff55(%rip)
12750(3): test %rax,%rax
12753(2): jnz 0x6d(%rip)
12755(3): mov %rbx,%rax
12758(4): shl/sal $0x4,%rax
1275c(4): add (%r12),%rax
12760(4): movzx 0x8(%rax),%edx
12764(3): cmp %r13d,%edx
12767(2): jnz 0x7(%rip)
12769(3): cmp %r15,(%rax)
1276c(2): jz 0x3c(%rip)
1276e(3): mov %rbx,%rsi
12771(3): mov %rbp,%rdi
12774(5): call 0xffffe9ec(%rip)
12779(2): test %al,%al
1277b(2): jz 0x5d(%rip)
1277d(4): lea 0x0(%rbx,%rbx,2),%rbx
12781(5): mov 0x28(%r12),%rdx
12786(4): shl/sal $0x3,%rbx
1278a(3): add %rbx,%rdx
1278d(4): mov 0x8(%rdx),%rax
12791(3): test %rax,%rax
12794(2): jz 0x2c(%rip)
12796(4): cmp $0x2,%rax
1279a(4): mov 0x10(%rdx),%rdx
1279e(2): jz 0x52(%rip)
127a0(3): mov (%rdx),%rbx
127a3(2): jmp 0xffffff9e(%rip)
127a5(3): nop (%rax)
127a8(4): cmp $0x9,%r13d
127ac(2): jnz 0x14(%rip)
127ae(3): mov %rbx,%rsi
127b1(3): mov %rbp,%rdi
127b4(5): call 0xffffe9ac(%rip)
127b9(2): test %al,%al
127bb(2): jz 0x1d(%rip)
127bd(3): nop (%rax)
127c0(2): xor %eax,%eax
127c2(4): add $0x8,%rsp
127c6(1): pop %rbx
127c7(1): pop %rbp
127c8(2): pop %r12
127ca(2): pop %r13
127cc(2): pop %r14
127ce(2): pop %r15
127d0(1): ret near (%rsp)
127d1(7): nop 0x0(%rax)
127d8(4): add $0x8,%rsp
127dc(5): mov $0xc,%eax
127e1(1): pop %rbx
127e2(1): pop %rbp
127e3(2): pop %r12
127e5(2): pop %r13
127e7(2): pop %r14
127e9(2): pop %r15
127eb(1): ret near (%rsp)
127ec(4): nop 0x0(%rax)
127f0(4): mov 0x8(%rdx),%rdx
127f4(3): mov %r13d,%r8d
127f7(3): mov %r15,%rcx
127fa(3): mov %rbp,%rsi
127fd(3): mov %r12,%rdi
12800(5): call 0xffffff20(%rip)
12805(2): test %eax,%eax
12807(2): jnz 0xffffffbb(%rip)
12809(5): mov 0x28(%r12),%rax
1280e(5): mov 0x10(%rax,%rbx,1),%rdx
12813(2): jmp 0xffffff8d(%rip)

"re_node_set_remove_at.isra.4.part.5" :
12820(3): mov (%rdi),%rax
12823(3): cmp %rdx,%rax
12826(2): jle 0x2c(%rip)
12828(4): sub $0x1,%rax
1282c(3): cmp %rax,%rdx
1282f(3): mov %rax,(%rdi)
12832(2): jnl 0x20(%rip)
12834(3): mov (%rsi),%rax
12837(9): nop 0x0(%rax,%rax,1)
12840(5): mov 0x8(%rax,%rdx,8),%rcx
12845(4): mov %rcx,0x0(%rax,%rdx,8)
12849(4): add $0x1,%rdx
1284d(3): cmp (%rdi),%rdx
12850(2): jl 0xfffffff0(%rip)
12852(2): REP ret near (%rsp)

"optimize_subexps" :
12860(4): movzx 0x30(%rsi),%eax
12864(2): cmp $0x4,%al
12866(2): jz 0x5a(%rip)
12868(2): cmp $0x11,%al
1286a(2): jz 0x6(%rip)
1286c(2): xor %eax,%eax
1286e(1): ret near (%rsp)
1286f(1): nop 
12870(4): mov 0x8(%rsi),%rax
12874(3): test %rax,%rax
12877(2): jz 0xfffffff5(%rip)
12879(4): cmp $0x11,0x30(%rax)
1287d(2): jnz 0xffffffef(%rip)
1287f(4): mov 0x28(%rax),%rcx
12883(4): mov 0x8(%rax),%rax
12887(3): test %rax,%rax
1288a(4): mov %rax,0x8(%rsi)
1288e(2): jz 0x5(%rip)
12890(3): mov %rsi,(%rax)
12893(7): mov 0xe0(%rdi),%rax
1289a(4): mov 0x28(%rsi),%rdx
1289e(4): cmp $0x3f,%rcx
128a2(4): mov 0x0(%rax,%rdx,8),%rdx
128a6(4): mov %rdx,0x0(%rax,%rcx,8)
128aa(2): jnle 0xffffffc2(%rip)
128ac(7): mov $0xfffffffe,%rax
128b3(3): rol %cl,%rax
128b6(7): and %rax,0xa0(%rdi)
128bd(2): jmp 0xffffffaf(%rip)
128bf(1): nop 
128c0(7): mov 0xe0(%rdi),%rax
128c7(3): test %rax,%rax
128ca(2): jz 0xffffffa2(%rip)
128cc(4): movsxd 0x28(%rsi),%rdx
128d0(4): mov 0x0(%rax,%rdx,8),%rcx
128d4(5): mov $0x1,%eax
128d9(2): shl/sal %cl,%eax
128db(4): mov %rcx,0x28(%rsi)
128df(2): cwde 
128e1(7): or %rax,0xa0(%rdi)
128e8(2): xor %eax,%eax
128ea(1): ret near (%rsp)

"calc_next" :
128f0(4): movzx 0x30(%rsi),%eax
128f4(4): mov 0x8(%rsi),%rdx
128f8(2): cmp $0xb,%al
128fa(2): jz 0x46(%rip)
128fc(2): cmp $0x10,%al
128fe(2): jz 0x2a(%rip)
12900(3): test %rdx,%rdx
12903(2): jz 0xa(%rip)
12905(4): mov 0x20(%rsi),%rax
12909(4): mov %rax,0x20(%rdx)
1290d(4): mov 0x10(%rsi),%rax
12911(3): test %rax,%rax
12914(2): jz 0xa(%rip)
12916(4): mov 0x20(%rsi),%rdx
1291a(4): mov %rdx,0x20(%rax)
1291e(2): xor %eax,%eax
12920(1): ret near (%rsp)
12921(7): nop 0x0(%rax)
12928(4): mov 0x10(%rsi),%rax
1292c(4): mov 0x18(%rax),%rcx
12930(4): mov %rcx,0x20(%rdx)
12934(4): mov 0x20(%rsi),%rdx
12938(4): mov %rdx,0x20(%rax)
1293c(2): xor %eax,%eax
1293e(1): ret near (%rsp)
1293f(1): nop 
12940(4): mov %rsi,0x20(%rdx)
12944(2): xor %eax,%eax
12946(1): ret near (%rsp)

"check_dst_limits.isra.13" :
12950(2): push %r15
12952(2): push %r14
12954(2): push %r13
12956(2): push %r12
12958(1): push %rbp
12959(1): push %rbx
1295a(2): xor %ebx,%ebx
1295c(4): sub $0x48,%rsp
12960(7): mov 0x98(%rdi),%rax
12967(7): mov 0xc8(%rdi),%r15
1296e(8): mov 0x80(%rsp),%r12
12976(5): mov %rax,0x8(%rsp)
1297b(3): mov %r15,%rbp
1297e(3): cmp %rbp,%rbx
12981(2): jnl 0x5a(%rip)
12983(4): lea 0x0(%rbx,%rbp,1),%rax
12987(7): mov 0xd8(%rdi),%r13
1298e(3): mov %rax,%r10
12991(4): shr $0x3f,%r10
12995(3): add %rax,%r10
12998(3): sar $0x1,%r10
1299b(4): lea 0x0(%r10,%r10,4),%rax
1299f(5): cmp 0x8(%r13,%rax,8),%r8
129a4(2): jle 0x32(%rip)
129a6(5): jmp 0x19a(%rip)
129ab(5): nop 0x0(%rax,%rax,1)
129b0(4): lea 0x0(%rbx,%r10,1),%r11
129b4(3): mov %r11,%rax
129b7(4): shr $0x3f,%rax
129bb(3): add %r11,%rax
129be(3): sar $0x1,%rax
129c1(4): lea 0x0(%rax,%rax,4),%r11
129c5(3): mov %rax,%r14
129c8(5): cmp %r8,0x8(%r13,%r11,8)
129cd(6): jl 0x183(%rip)
129d3(3): mov %rax,%r10
129d6(3): cmp %r10,%rbx
129d9(2): jl 0xffffffd7(%rip)
129db(3): cmp %rbx,%r15
129de(6): jle 0x1a2(%rip)
129e4(7): mov 0xd8(%rdi),%r11
129eb(4): lea 0x0(%rbx,%rbx,4),%rax
129ef(4): lea 0x0(%r11,%rax,8),%rax
129f3(4): cmp 0x8(%rax),%r8
129f7(7): mov $0xffffffff,%rax
129fe(4): cmovne %rax,%rbx
12a02(3): mov %r15,%rax
12a05(2): xor %ebp,%ebp
12a07(3): cmp %rax,%rbp
12a0a(2): jnl 0x5a(%rip)
12a0c(5): lea 0x0(%rbp,%rax,1),%r11
12a11(3): mov %r11,%r10
12a14(4): shr $0x3f,%r10
12a18(3): add %r11,%r10
12a1b(7): mov 0xd8(%rdi),%r11
12a22(3): sar $0x1,%r10
12a25(4): lea 0x0(%r10,%r10,4),%r13
12a29(5): cmp 0x8(%r11,%r13,8),%r12
12a2e(2): jle 0x31(%rip)
12a30(5): jmp 0x130(%rip)
12a35(3): nop (%rax)
12a38(5): lea 0x0(%rbp,%r10,1),%r13
12a3d(3): mov %r13,%rax
12a40(4): shr $0x3f,%rax
12a44(3): add %r13,%rax
12a47(3): sar $0x1,%rax
12a4a(4): lea 0x0(%rax,%rax,4),%r13
12a4e(3): mov %rax,%r14
12a51(5): cmp %r12,0x8(%r11,%r13,8)
12a56(6): jl 0x11a(%rip)
12a5c(3): mov %rax,%r10
12a5f(3): cmp %r10,%rbp
12a62(2): jl 0xffffffd6(%rip)
12a64(3): cmp %rbp,%r15
12a67(6): jle 0x129(%rip)
12a6d(7): mov 0xd8(%rdi),%r10
12a74(5): lea 0x0(%rbp,%rbp,4),%rax
12a79(4): lea 0x0(%r10,%rax,8),%rax
12a7d(4): cmp 0x8(%rax),%r12
12a81(7): mov $0xffffffff,%rax
12a88(4): cmovne %rax,%rbp
12a8c(4): cmp $0x0,(%rsi)
12a90(6): jle 0x122(%rip)
12a96(5): mov %rbp,0x30(%rsp)
12a9b(5): mov %r9,0x20(%rsp)
12aa0(3): mov %rdi,%r13
12aa3(5): mov %r8,0x18(%rsp)
12aa8(5): mov %rcx,0x10(%rsp)
12aad(3): xor %r14d,%r14d
12ab0(5): mov %rsi,0x38(%rsp)
12ab5(5): mov %rbx,0x28(%rsp)
12aba(3): mov %rdx,%rbp
12abd(3): mov %r12,%r15
12ac0(4): mov 0x0(%rbp),%rax
12ac4(7): mov 0xd8(%r13),%rdx
12acb(3): mov %r13,%rdi
12ace(5): mov 0x28(%rsp),%r9
12ad3(5): mov 0x18(%rsp),%r8
12ad8(5): mov 0x10(%rsp),%rcx
12add(4): mov 0x0(%rax,%r14,8),%rsi
12ae1(4): lea 0x0(%rsi,%rsi,4),%rax
12ae5(4): lea 0x0(%rdx,%rax,8),%rax
12ae9(5): mov 0x8(%rsp),%rdx
12aee(3): mov (%rax),%rax
12af1(4): shl/sal $0x4,%rax
12af5(3): add (%rdx),%rax
12af8(3): mov (%rax),%r12
12afb(3): mov %r12,%rdx
12afe(5): call 0xffffe412(%rip)
12b03(2): mov %eax,%ebx
12b05(4): mov 0x0(%rbp),%rax
12b09(5): mov 0x30(%rsp),%r9
12b0e(5): mov 0x20(%rsp),%rcx
12b13(3): mov %r15,%r8
12b16(3): mov %r12,%rdx
12b19(3): mov %r13,%rdi
12b1c(4): mov 0x0(%rax,%r14,8),%rsi
12b20(5): call 0xffffe3f0(%rip)
12b25(2): cmp %eax,%ebx
12b27(2): jz 0x79(%rip)
12b29(5): mov $0x1,%eax
12b2e(4): add $0x48,%rsp
12b32(1): pop %rbx
12b33(1): pop %rbp
12b34(2): pop %r12
12b36(2): pop %r13
12b38(2): pop %r14
12b3a(2): pop %r15
12b3c(1): ret near (%rsp)
12b3d(3): nop (%rax)
12b40(3): mov %r10,%r14
12b43(3): mov %rbp,%r10
12b46(a): nop 0x0(%rax,%rax,1)
12b50(4): lea 0x1(%r14),%rbx
12b54(3): mov %r10,%rbp
12b57(5): jmp 0xfffffe27(%rip)
12b5c(4): nop 0x0(%rax)
12b60(3): mov %r10,%r14
12b63(3): mov %rax,%r10
12b66(a): nop 0x0(%rax,%rax,1)
12b70(4): lea 0x1(%r14),%rbp
12b74(3): mov %r10,%rax
12b77(5): jmp 0xfffffe90(%rip)
12b7c(4): nop 0x0(%rax)
12b80(7): mov $0xffffffff,%rbx
12b87(5): jmp 0xfffffe7b(%rip)
12b8c(4): nop 0x0(%rax)
12b90(7): mov $0xffffffff,%rbp
12b97(5): jmp 0xfffffef5(%rip)
12b9c(4): nop 0x0(%rax)
12ba0(5): mov 0x38(%rsp),%rax
12ba5(4): add $0x1,%r14
12ba9(3): cmp (%rax),%r14
12bac(6): jl 0xffffff14(%rip)
12bb2(2): xor %eax,%eax
12bb4(5): jmp 0xffffff7a(%rip)

"re_node_set_merge" :
12bc0(3): test %rsi,%rsi
12bc3(6): jz 0xf5(%rip)
12bc9(4): mov 0x8(%rsi),%rdx
12bcd(3): test %rdx,%rdx
12bd0(6): jz 0xe8(%rip)
12bd6(2): push %r12
12bd8(1): push %rbp
12bd9(3): mov %rsi,%r12
12bdc(1): push %rbx
12bdd(4): mov 0x8(%rdi),%rax
12be1(3): mov %rdi,%rbx
12be4(3): mov (%rdi),%rsi
12be7(4): lea 0x0(%rax,%rdx,2),%rcx
12beb(3): cmp %rcx,%rsi
12bee(6): jl 0x14a(%rip)
12bf4(3): test %rax,%rax
12bf7(6): jz 0x179(%rip)
12bfd(4): lea 0x0(%rax,%rdx,2),%rbp
12c01(4): sub $0x1,%rdx
12c05(4): sub $0x1,%rax
12c09(3): mov %rdx,%rdi
12c0c(3): not %rdi
12c0f(3): test %rdi,%rdi
12c12(2): jns 0x3e(%rip)
12c14(3): test %rax,%rax
12c17(2): js 0x39(%rip)
12c19(4): mov 0x10(%rbx),%rcx
12c1d(5): mov 0x10(%r12),%rsi
12c22(4): mov 0x0(%rsi,%rdx,8),%rsi
12c26(4): cmp %rsi,0x0(%rcx,%rax,8)
12c2a(6): jz 0x96(%rip)
12c30(6): jnl 0xa8(%rip)
12c36(4): sub $0x1,%rdx
12c3a(4): sub $0x1,%rbp
12c3e(3): mov %rdx,%rdi
12c41(4): mov %rsi,0x0(%rcx,%rbp,8)
12c45(3): not %rdi
12c48(3): test %rdi,%rdi
12c4b(2): js 0xffffffc9(%rip)
12c4d(3): nop (%rax)
12c50(3): test %rdx,%rdx
12c53(6): jns 0x95(%rip)
12c59(4): mov 0x8(%rbx),%rcx
12c5d(5): mov 0x8(%r12),%rax
12c62(5): lea 0xffffffff(%rcx,%rax,2),%r8
12c67(3): mov %r8,%rdx
12c6a(3): sub %rbp,%rdx
12c6d(4): add $0x1,%rdx
12c71(2): jz 0x39(%rip)
12c73(4): mov 0x10(%rbx),%rdi
12c77(4): lea 0xffffffff(%rcx),%rax
12c7b(3): add %rdx,%rcx
12c7e(4): mov %rcx,0x8(%rbx)
12c82(6): nop 0x0(%rax,%rax,1)
12c88(4): mov 0x0(%rdi,%r8,8),%rsi
12c8c(4): mov 0x0(%rdi,%rax,8),%rcx
12c90(4): lea 0x0(%rax,%rdx,1),%r9
12c94(4): lea 0x0(%rdi,%r9,8),%r9
12c98(3): cmp %rcx,%rsi
12c9b(2): jle 0x75(%rip)
12c9d(4): sub $0x1,%r8
12ca1(4): sub $0x1,%rdx
12ca5(3): mov %rsi,(%r9)
12ca8(2): jnz 0xffffffe0(%rip)
12caa(2): xor %eax,%eax
12cac(1): pop %rbx
12cad(1): pop %rbp
12cae(2): pop %r12
12cb0(1): ret near (%rsp)
12cb1(7): nop 0x0(%rax)
12cb8(2): xor %eax,%eax
12cba(1): ret near (%rsp)
12cbb(5): nop 0x0(%rax,%rax,1)
12cc0(4): sub $0x1,%rdx
12cc4(4): sub $0x1,%rax
12cc8(3): mov %rdx,%rdi
12ccb(3): not %rdi
12cce(5): jmp 0xffffff41(%rip)
12cd3(5): nop 0x0(%rax,%rax,1)
12cd8(4): sub $0x1,%rax
12cdc(5): jmp 0xffffff33(%rip)
12ce1(7): nop 0x0(%rax)
12ce8(4): mov 0x10(%rbx),%rax
12cec(4): add $0x1,%rdx
12cf0(5): mov 0x10(%r12),%rsi
12cf5(3): sub %rdx,%rbp
12cf8(4): shl/sal $0x3,%rdx
12cfc(4): lea 0x0(%rax,%rbp,8),%rdi
12d00(5): call 0xfffefa10(%rip)
12d05(5): jmp 0xffffff54(%rip)
12d0a(6): nop 0x0(%rax,%rax,1)
12d10(4): sub $0x1,%rax
12d14(3): mov %rcx,(%r9)
12d17(6): jns 0xffffff71(%rip)
12d1d(4): lea 0x0(%rdi,%rbp,8),%rsi
12d21(4): shl/sal $0x3,%rdx
12d25(5): call 0xfffef9eb(%rip)
12d2a(2): xor %eax,%eax
12d2c(5): jmp 0xffffff80(%rip)
12d31(7): nop 0x0(%rax)
12d38(3): add %rsi,%rdx
12d3b(4): mov 0x10(%rdi),%rdi
12d3f(4): lea 0x0(%rdx,%rdx,1),%rbp
12d43(4): shl/sal $0x4,%rdx
12d47(3): mov %rdx,%rsi
12d4a(5): call 0xfffefae6(%rip)
12d4f(3): test %rax,%rax
12d52(2): jz 0x42(%rip)
12d54(4): mov %rax,0x10(%rbx)
12d58(3): mov %rbp,(%rbx)
12d5b(4): mov 0x8(%rbx),%rax
12d5f(5): mov 0x8(%r12),%rdx
12d64(5): jmp 0xfffffe90(%rip)
12d69(7): nop 0x0(%rax)
12d70(4): mov %rdx,0x8(%rbx)
12d74(5): mov 0x8(%r12),%rax
12d79(4): mov 0x10(%rbx),%rdi
12d7d(5): mov 0x10(%r12),%rsi
12d82(8): lea 0x0(,%rax,8),%rdx
12d8a(5): call 0xfffef986(%rip)
12d8f(5): jmp 0xffffff1b(%rip)
12d94(5): mov $0xc,%eax
12d99(5): jmp 0xffffff13(%rip)

"calc_eclosure_iter" :
12da0(2): push %r15
12da2(2): push %r14
12da4(3): mov %rsi,%r15
12da7(2): push %r13
12da9(2): push %r12
12dab(1): push %rbp
12dac(1): push %rbx
12dad(4): lea 0x0(%rdx,%rdx,2),%rbx
12db1(3): mov %rdx,%rbp
12db4(4): sub $0x68,%rsp
12db8(4): mov 0x28(%rsi),%r12
12dbc(4): shl/sal $0x3,%rbx
12dc0(9): mov $0x28,%rax
12dc9(5): mov %rax,0x58(%rsp)
12dce(2): xor %eax,%eax
12dd0(5): mov %rdi,0x10(%rsp)
12dd5(4): mov %ecx,0x1c(%rsp)
12dd9(3): add %rbx,%r12
12ddc(5): mov 0x8(%r12),%rax
12de1(9): mov $0x0,0x28(%rsp)
12dea(4): lea 0x1(%rax),%rdi
12dee(5): mov %rdi,0x20(%rsp)
12df3(4): shl/sal $0x3,%rdi
12df7(5): call 0xfffef989(%rip)
12dfc(3): test %rax,%rax
12dff(5): mov %rax,0x30(%rsp)
12e04(6): jz 0x23c(%rip)
12e0a(4): mov 0x30(%r15),%rax
12e0e(3): mov (%r15),%rdx
12e11(3): mov %rbp,%r13
12e14(4): shl/sal $0x4,%r13
12e18(9): mov $0xffffffff,0x8(%rax,%rbx,1)
12e21(4): lea 0x0(%rdx,%r13,1),%rax
12e25(4): mov 0x8(%rax),%r8d
12e29(7): test $0x3ff00,%r8d
12e30(6): jnz 0x1a0(%rip)
12e36(4): test $0x8,0x8(%rax)
12e3a(6): jz 0xc6(%rip)
12e40(4): mov 0x28(%r15),%rsi
12e44(4): lea 0x0(%rsi,%rbx,1),%rax
12e48(5): cmp $0x0,0x8(%rax)
12e4d(6): jle 0xb3(%rip)
12e53(5): lea 0x20(%rsp),%rdx
12e58(5): mov $0x0,0x1b(%rsp)
12e5d(3): xor %r14d,%r14d
12e60(5): lea 0x40(%rsp),%r12
12e65(5): mov %rdx,0x8(%rsp)
12e6a(2): jmp 0x1c(%rip)
12e6c(4): nop 0x0(%rax)
12e70(4): mov 0x28(%r15),%rsi
12e74(4): add $0x1,%r14
12e78(4): lea 0x0(%rsi,%rbx,1),%rax
12e7c(4): cmp %r14,0x8(%rax)
12e80(6): jle 0x107(%rip)
12e86(4): mov 0x10(%rax),%rax
12e8a(4): mov 0x0(%rax,%r14,8),%rdx
12e8e(4): mov 0x30(%r15),%rax
12e92(4): lea 0x0(%rdx,%rdx,2),%r8
12e96(8): lea 0x0(,%r8,8),%r13
12e9e(3): add %r13,%rax
12ea1(4): mov 0x8(%rax),%rcx
12ea5(4): cmp $0xffffffff,%rcx
12ea9(6): jz 0xc7(%rip)
12eaf(3): test %rcx,%rcx
12eb2(6): jz 0x176(%rip)
12eb8(4): movdqu (%rax),%xmm0
12ebc(5): movaps %xmm0,0x40(%rsp)
12ec1(4): mov 0x10(%rax),%rax
12ec5(5): mov %rax,0x50(%rsp)
12eca(5): mov 0x8(%rsp),%rdi
12ecf(3): mov %r12,%rsi
12ed2(5): call 0xfffffcee(%rip)
12ed7(2): test %eax,%eax
12ed9(2): jnz 0x6d(%rip)
12edb(4): mov 0x30(%r15),%rax
12edf(6): cmp $0x0,0x8(%rax,%r13,1)
12ee5(2): jnz 0xffffff8b(%rip)
12ee7(5): mov 0x50(%rsp),%rdi
12eec(5): call 0xfffefb24(%rip)
12ef1(5): mov $0x1,0x1b(%rsp)
12ef6(5): jmp 0xffffff7a(%rip)
12efb(5): nop 0x0(%rax,%rax,1)
12f00(5): lea 0x20(%rsp),%rdi
12f05(3): mov %rbp,%rsi
12f08(5): call 0xffffe258(%rip)
12f0d(2): test %al,%al
12f0f(6): jz 0x131(%rip)
12f15(4): mov 0x30(%r15),%rax
12f19(6): movdqa 0x20(%rsp),%xmm0
12f1f(4): movups %xmm0,0x0(%rax,%rbx,1)
12f23(5): mov 0x30(%rsp),%rdx
12f28(5): mov %rdx,0x10(%rax,%rbx,1)
12f2d(5): mov 0x10(%rsp),%rbx
12f32(5): mov 0x30(%rsp),%rax
12f37(6): movdqa 0x20(%rsp),%xmm0
12f3d(3): movaps %xmm0,(%rbx)
12f40(4): mov %rax,0x10(%rbx)
12f44(2): xor %eax,%eax
12f46(5): mov 0x58(%rsp),%rsi
12f4b(9): xor $0x28,%rsi
12f54(6): jnz 0xf6(%rip)
12f5a(4): add $0x68,%rsp
12f5e(1): pop %rbx
12f5f(1): pop %rbp
12f60(2): pop %r12
12f62(2): pop %r13
12f64(2): pop %r14
12f66(2): pop %r15
12f68(1): ret near (%rsp)
12f69(7): nop 0x0(%rax)
12f70(4): lea 0x0(%rsi,%rbx,1),%rax
12f74(4): add $0x1,%r14
12f78(5): mov $0x1,0x1b(%rsp)
12f7d(4): cmp %r14,0x8(%rax)
12f81(6): jnle 0xffffff05(%rip)
12f87(5): lea 0x20(%rsp),%rdi
12f8c(3): mov %rbp,%rsi
12f8f(5): call 0xffffe1d1(%rip)
12f94(2): test %al,%al
12f96(6): jz 0xaa(%rip)
12f9c(5): cmp $0x1,0x1c(%rsp)
12fa1(4): mov 0x30(%r15),%rax
12fa5(4): lea 0x0(%rax,%rbx,1),%rdx
12fa9(6): jz 0xffffff70(%rip)
12faf(5): cmp $0x0,0x1b(%rsp)
12fb4(6): jz 0xffffff65(%rip)
12fba(8): mov $0x0,0x8(%rdx)
12fc2(5): jmp 0xffffff6b(%rip)
12fc7(9): nop 0x0(%rax,%rax,1)
12fd0(6): cmp $0x0,0x8(%r12)
12fd6(6): jz 0xffffff2a(%rip)
12fdc(5): mov 0x10(%r12),%rcx
12fe1(3): mov (%rcx),%rcx
12fe4(4): shl/sal $0x4,%rcx
12fe8(5): test $0x4,0xa(%rdx,%rcx,1)
12fed(6): jnz 0xfffffe49(%rip)
12ff3(4): shr $0x8,%r8d
12ff7(3): mov %rbp,%rcx
12ffa(3): mov %rbp,%rdx
12ffd(7): and $0x3ff,%r8d
13004(3): mov %rbp,%rsi
13007(3): mov %r15,%rdi
1300a(5): call 0xfffff0a6(%rip)
1300f(2): test %eax,%eax
13011(6): jnz 0xffffff35(%rip)
13017(3): mov (%r15),%rax
1301a(3): add %r13,%rax
1301d(5): jmp 0xfffffe19(%rip)
13022(6): nop 0x0(%rax,%rax,1)
13028(3): mov %r15,%rsi
1302b(3): mov %r12,%rdi
1302e(5): call 0xfffffd72(%rip)
13033(2): test %eax,%eax
13035(6): jz 0xfffffe95(%rip)
1303b(5): jmp 0xffffff0b(%rip)
13040(5): mov $0xc,%eax
13045(5): jmp 0xffffff01(%rip)
1304a(5): call 0xfffef516(%rip)

"check_arrival_expand_ecl" :
13050(2): push %r15
13052(2): push %r14
13054(3): mov %rdi,%r14
13057(2): push %r13
13059(2): push %r12
1305b(3): mov %rsi,%r15
1305e(1): push %rbp
1305f(1): push %rbx
13060(3): mov %rdx,%rbp
13063(2): mov %ecx,%ebx
13065(4): sub $0x38,%rsp
13069(4): mov 0x8(%rsi),%r12
1306d(9): mov $0x28,%rax
13076(5): mov %rax,0x28(%rsp)
1307b(2): xor %eax,%eax
1307d(9): mov $0x0,0x18(%rsp)
13086(8): lea 0x0(,%r12,8),%rdi
1308e(5): mov %r12,0x10(%rsp)
13093(5): call 0xfffef6ed(%rip)
13098(3): test %rax,%rax
1309b(5): mov %rax,0x20(%rsp)
130a0(6): jz 0xfd(%rip)
130a6(3): test %r12,%r12
130a9(6): jle 0x92(%rip)
130af(5): lea 0x10(%rsp),%r12
130b4(3): xor %r13d,%r13d
130b7(9): nop 0x0(%rax,%rax,1)
130c0(4): mov 0x10(%r15),%rax
130c4(4): mov 0x0(%rax,%r13,8),%rdx
130c8(4): mov 0x30(%r14),%rax
130cc(4): lea 0x0(%rdx,%rdx,2),%rcx
130d0(4): lea 0x0(%rax,%rcx,8),%rsi
130d4(4): mov 0x8(%rsi),%r8
130d8(3): test %r8,%r8
130db(6): jle 0x85(%rip)
130e1(4): mov 0x10(%rsi),%r10
130e5(3): mov (%r14),%r9
130e8(2): xor %ecx,%ecx
130ea(2): jmp 0xf(%rip)
130ec(4): nop 0x0(%rax)
130f0(4): add $0x1,%rcx
130f4(3): cmp %rcx,%r8
130f7(2): jz 0x69(%rip)
130f9(4): mov 0x0(%r10,%rcx,8),%rdi
130fd(3): mov %rdi,%rax
13100(4): shl/sal $0x4,%rax
13104(3): add %r9,%rax
13107(5): movzx 0x8(%rax),%r11d
1310c(3): cmp %r11d,%ebx
1310f(2): jnz 0xffffffe1(%rip)
13111(3): cmp (%rax),%rbp
13114(2): jnz 0xffffffdc(%rip)
13116(4): cmp $0xffffffff,%rdi
1311a(2): jz 0x46(%rip)
1311c(3): mov %ebx,%r8d
1311f(3): mov %rbp,%rcx
13122(3): mov %r12,%rsi
13125(3): mov %r14,%rdi
13128(5): call 0xfffff5f8(%rip)
1312d(2): test %eax,%eax
1312f(2): jnz 0x3d(%rip)
13131(4): add $0x1,%r13
13135(4): cmp %r13,0x8(%r15)
13139(2): jnle 0xffffff87(%rip)
1313b(4): mov 0x10(%r15),%rdi
1313f(5): call 0xfffef8d1(%rip)
13144(5): mov 0x20(%rsp),%rax
13149(6): movdqa 0x10(%rsp),%xmm0
1314f(4): mov %rax,0x10(%r15)
13153(2): xor %eax,%eax
13155(4): movaps %xmm0,(%r15)
13159(2): jmp 0x25(%rip)
1315b(5): nop 0x0(%rax,%rax,1)
13160(3): mov %r12,%rdi
13163(5): call 0xfffffa5d(%rip)
13168(2): test %eax,%eax
1316a(2): jz 0xffffffc7(%rip)
1316c(5): mov 0x20(%rsp),%rdi
13171(4): mov %eax,0xc(%rsp)
13175(5): call 0xfffef89b(%rip)
1317a(4): mov 0xc(%rsp),%eax
1317e(5): mov 0x28(%rsp),%rdx
13183(9): xor $0x28,%rdx
1318c(2): jnz 0x18(%rip)
1318e(4): add $0x38,%rsp
13192(1): pop %rbx
13193(1): pop %rbp
13194(2): pop %r12
13196(2): pop %r13
13198(2): pop %r14
1319a(2): pop %r15
1319c(1): ret near (%rsp)
1319d(5): mov $0xc,%eax
131a2(2): jmp 0xffffffdc(%rip)
131a4(5): call 0xfffef3bc(%rip)

"re_node_set_add_intersect" :
131b0(4): mov 0x8(%rsi),%r9
131b4(2): xor %eax,%eax
131b6(3): test %r9,%r9
131b9(6): jz 0xbf(%rip)
131bf(4): mov 0x8(%rdx),%r11
131c3(3): test %r11,%r11
131c6(6): jz 0xb2(%rip)
131cc(2): push %r13
131ce(2): push %r12
131d0(4): lea 0x0(%r9,%r11,1),%rax
131d4(1): push %rbp
131d5(1): push %rbx
131d6(3): mov %rdx,%r12
131d9(3): mov %rdi,%rbx
131dc(3): mov %rsi,%rbp
131df(4): sub $0x8,%rsp
131e3(4): mov 0x8(%rdi),%rcx
131e7(3): mov (%rdi),%r13
131ea(4): mov 0x10(%rdi),%rdi
131ee(4): lea 0x0(%rax,%rcx,1),%rdx
131f2(3): cmp %r13,%rdx
131f5(6): jnle 0x12b(%rip)
131fb(4): lea 0x0(%rcx,%r9,1),%rsi
131ff(4): mov 0x10(%rbp),%r13
13203(5): mov 0x10(%r12),%rdx
13208(4): sub $0x1,%r9
1320c(4): sub $0x1,%rcx
13210(3): add %r11,%rsi
13213(4): sub $0x1,%r11
13217(5): mov 0x0(%r13,%r9,8),%rax
1321c(4): mov 0x0(%rdx,%r11,8),%r8
13220(3): cmp %r8,%rax
13223(2): jz 0x13(%rip)
13225(2): jnl 0x5b(%rip)
13227(4): sub $0x1,%r11
1322b(2): js 0x65(%rip)
1322d(4): mov 0x0(%rdx,%r11,8),%r8
13231(3): cmp %r8,%rax
13234(2): jnz 0xfffffff1(%rip)
13236(3): test %rcx,%rcx
13239(2): jns 0x11(%rip)
1323b(2): jmp 0x1d(%rip)
1323d(3): nop (%rax)
13240(4): sub $0x1,%rcx
13244(4): cmp $0xffffffff,%rcx
13248(2): jz 0x10(%rip)
1324a(4): mov 0x0(%rdi,%rcx,8),%r10
1324e(3): cmp %r8,%r10
13251(2): jnle 0xffffffef(%rip)
13253(3): cmp %r8,%r10
13256(2): jz 0xa(%rip)
13258(4): sub $0x1,%rsi
1325c(4): mov %r8,0x0(%rdi,%rsi,8)
13260(4): sub $0x1,%r9
13264(2): js 0x2c(%rip)
13266(4): sub $0x1,%r11
1326a(2): js 0x26(%rip)
1326c(5): mov 0x0(%r13,%r9,8),%rax
13271(2): jmp 0xffffffbc(%rip)
13273(5): nop 0x0(%rax,%rax,1)
13278(2): REP ret near (%rsp)
1327a(6): nop 0x0(%rax,%rax,1)
13280(4): sub $0x1,%r9
13284(2): js 0xc(%rip)
13286(5): mov 0x0(%r13,%r9,8),%rax
1328b(2): jmp 0xffffff95(%rip)
1328d(3): nop (%rax)
13290(4): mov 0x8(%rbx),%rcx
13294(4): mov 0x8(%rbp),%rdx
13298(3): add %rcx,%rdx
1329b(5): add 0x8(%r12),%rdx
132a0(4): lea 0xffffffff(%rcx),%rax
132a4(4): lea 0xffffffff(%rdx),%r9
132a8(3): sub %rsi,%rdx
132ab(3): add %rdx,%rcx
132ae(3): test %rdx,%rdx
132b1(4): mov %rcx,0x8(%rbx)
132b5(2): jle 0x48(%rip)
132b7(3): test %rax,%rax
132ba(2): js 0x43(%rip)
132bc(4): nop 0x0(%rax)
132c0(4): mov 0x0(%rdi,%r9,8),%r8
132c4(4): mov 0x0(%rdi,%rax,8),%rcx
132c8(4): lea 0x0(%rax,%rdx,1),%r10
132cc(4): lea 0x0(%rdi,%r10,8),%r10
132d0(3): cmp %rcx,%r8
132d3(2): jle 0x1d(%rip)
132d5(4): sub $0x1,%r9
132d9(4): sub $0x1,%rdx
132dd(3): mov %r8,(%r10)
132e0(2): jnz 0xffffffe0(%rip)
132e2(2): xor %edx,%edx
132e4(2): jmp 0x1d(%rip)
132e6(a): nop 0x0(%rax,%rax,1)
132f0(4): sub $0x1,%rax
132f4(3): mov %rcx,(%r10)
132f7(4): cmp $0xffffffff,%rax
132fb(2): jnz 0xffffffc5(%rip)
132fd(4): shl/sal $0x3,%rdx
13301(4): lea 0x0(%rdi,%rsi,8),%rsi
13305(5): call 0xfffef40b(%rip)
1330a(2): xor %eax,%eax
1330c(4): add $0x8,%rsp
13310(1): pop %rbx
13311(1): pop %rbp
13312(2): pop %r12
13314(2): pop %r13
13316(1): ret near (%rsp)
13317(9): nop 0x0(%rax,%rax,1)
13320(3): add %rax,%r13
13323(8): lea 0x0(,%r13,8),%rsi
1332b(5): call 0xfffef505(%rip)
13330(3): test %rax,%rax
13333(3): mov %rax,%rdi
13336(2): jz 0x1b(%rip)
13338(4): mov %rax,0x10(%rbx)
1333c(3): mov %r13,(%rbx)
1333f(4): mov 0x8(%rbx),%rcx
13343(4): mov 0x8(%rbp),%r9
13347(5): mov 0x8(%r12),%r11
1334c(5): jmp 0xfffffeaf(%rip)
13351(5): mov $0xc,%eax
13356(2): jmp 0xffffffb6(%rip)

"create_token_tree.isra.16" :
13360(1): push %rbx
13361(3): mov %rdi,%rbx
13364(4): sub $0x20,%rsp
13368(2): mov (%rsi),%eax
1336a(3): cmp $0xf,%eax
1336d(2): jz 0x7b(%rip)
1336f(3): movsxd %eax,%r9
13372(4): lea 0x1(%rax),%r10d
13376(3): mov (%rdi),%rdi
13379(3): mov %r9,%rax
1337c(4): shl/sal $0x6,%rax
13380(4): add $0x8,%rax
13384(4): shl/sal $0x6,%r9
13388(3): mov %r10d,(%rsi)
1338b(3): add %rdi,%rax
1338e(4): lea 0x0(%rdi,%r9,1),%rsi
13392(8): mov $0x0,0x8(%rsi)
1339a(4): mov %rdx,0x10(%rsi)
1339e(4): lea 0x20(%rsi),%rdi
133a2(4): mov %rcx,0x18(%rsi)
133a6(5): movdqu (%r8),%xmm0
133ab(4): movups %xmm0,0x30(%rsi)
133af(4): and $0xf3,0x1a(%rdi)
133b3(3): test %rdx,%rdx
133b6(8): mov $0x0,0x20(%rsi)
133be(8): mov $0x0,0x28(%rsi)
133c6(8): mov $0xffffffff,0x40(%rsi)
133ce(2): jz 0x5(%rip)
133d0(3): mov %rax,(%rdx)
133d3(3): test %rcx,%rcx
133d6(2): jz 0x5(%rip)
133d8(3): mov %rax,(%rcx)
133db(4): add $0x20,%rsp
133df(1): pop %rbx
133e0(1): ret near (%rsp)
133e1(7): nop 0x0(%rax)
133e8(5): mov $0x3c8,%edi
133ed(5): mov %r8,0x18(%rsp)
133f2(5): mov %rcx,0x10(%rsp)
133f7(5): mov %rdx,0x8(%rsp)
133fc(4): mov %rsi,(%rsp)
13400(5): call 0xfffef380(%rip)
13405(3): test %rax,%rax
13408(3): mov %rax,%rdi
1340b(2): jz 0x31(%rip)
1340d(3): mov (%rbx),%rax
13410(6): mov $0x1,%r10d
13416(3): mov %rdi,(%rbx)
13419(3): xor %r9d,%r9d
1341c(5): mov 0x18(%rsp),%r8
13421(5): mov 0x10(%rsp),%rcx
13426(5): mov 0x8(%rsp),%rdx
1342b(4): mov (%rsp),%rsi
1342f(3): mov %rax,(%rdi)
13432(5): mov $0x8,%eax
13437(5): jmp 0xffffff4d(%rip)
1343c(2): xor %eax,%eax
1343e(2): jmp 0xffffff9d(%rip)

"duplicate_tree" :
13440(2): push %r14
13442(2): push %r13
13444(4): lea 0x70(%rsi),%r13
13448(2): push %r12
1344a(1): push %rbp
1344b(7): lea 0x80(%rsi),%r12
13452(1): push %rbx
13453(3): mov %rdi,%rbx
13456(4): sub $0x10,%rsp
1345a(3): mov (%rdi),%rbp
1345d(9): mov $0x28,%rax
13466(5): mov %rax,0x8(%rsp)
1346b(2): xor %eax,%eax
1346d(3): mov %rsp,%r14
13470(4): lea 0x28(%rbx),%r8
13474(2): xor %ecx,%ecx
13476(2): xor %edx,%edx
13478(3): mov %r12,%rsi
1347b(3): mov %r13,%rdi
1347e(5): call 0xfffffee2(%rip)
13483(3): test %rax,%rax
13486(3): mov %rax,(%r14)
13489(2): jz 0x53(%rip)
1348b(3): mov %rbp,(%rax)
1348e(3): mov (%r14),%rbp
13491(4): or $0x4,0x32(%rbp)
13495(4): mov 0x8(%rbx),%rax
13499(3): test %rax,%rax
1349c(2): jz 0x14(%rip)
1349e(4): lea 0x8(%rbp),%r14
134a2(3): mov %rax,%rbx
134a5(2): jmp 0xffffffcb(%rip)
134a7(9): nop 0x0(%rax,%rax,1)
134b0(2): xor %edx,%edx
134b2(2): jmp 0x9(%rip)
134b4(4): nop 0x0(%rax)
134b8(3): mov %rax,%rbx
134bb(4): mov 0x10(%rbx),%rax
134bf(3): test %rax,%rax
134c2(2): jz 0x7(%rip)
134c4(3): cmp %rdx,%rax
134c7(2): jnz 0x39(%rip)
134c9(3): mov (%rbx),%rax
134cc(4): mov 0x0(%rbp),%rbp
134d0(3): mov %rbx,%rdx
134d3(3): test %rax,%rax
134d6(2): jnz 0xffffffe2(%rip)
134d8(4): mov (%rsp),%rax
134dc(5): mov 0x8(%rsp),%rcx
134e1(9): xor $0x28,%rcx
134ea(2): jnz 0x22(%rip)
134ec(4): add $0x10,%rsp
134f0(1): pop %rbx
134f1(1): pop %rbp
134f2(2): pop %r12
134f4(2): pop %r13
134f6(2): pop %r14
134f8(1): ret near (%rsp)
134f9(7): nop 0x0(%rax)
13500(4): lea 0x10(%rbp),%r14
13504(3): mov %rax,%rbx
13507(5): jmp 0xffffff69(%rip)
1350c(5): call 0xfffef054(%rip)

"lower_subexp" :
13520(2): push %r15
13522(2): push %r14
13524(2): push %r13
13526(2): push %r12
13528(3): mov %rdx,%r13
1352b(1): push %rbp
1352c(1): push %rbx
1352d(4): sub $0x48,%rsp
13531(3): mov (%rsi),%rbx
13534(4): mov 0x8(%rdx),%rbp
13538(9): mov $0x28,%rax
13541(5): mov %rax,0x38(%rsp)
13546(2): xor %eax,%eax
13548(4): test $0x10,0x38(%rsi)
1354c(5): mov %rdi,0x18(%rsp)
13551(6): jz 0x177(%rip)
13557(3): test %rbp,%rbp
1355a(2): jz 0x76(%rip)
1355c(4): mov 0x28(%rdx),%rax
13560(4): cmp $0x3f,%rax
13564(6): jnle 0x139(%rip)
1356a(7): mov 0xa0(%rbx),%rdx
13571(4): bt %rax,%rdx
13575(6): jnb 0x128(%rip)
1357b(4): lea 0x70(%rbx),%rax
1357f(5): lea 0x20(%rsp),%r14
13584(4): sub $0xffffff80,%rbx
13588(2): xor %ecx,%ecx
1358a(2): xor %edx,%edx
1358c(3): mov %rbx,%rsi
1358f(3): mov %rax,%r15
13592(3): mov %r14,%r8
13595(3): mov %rax,%rdi
13598(5): mov $0x8,0x28(%rsp)
1359d(5): mov %rax,0x8(%rsp)
135a2(5): call 0xfffffdbe(%rip)
135a7(3): mov %r15,%rdi
135aa(3): mov %r14,%r8
135ad(2): xor %ecx,%ecx
135af(2): xor %edx,%edx
135b1(3): mov %rbx,%rsi
135b4(3): mov %rax,%r12
135b7(5): mov $0x9,0x28(%rsp)
135bc(5): call 0xfffffda4(%rip)
135c1(3): mov %rax,%r15
135c4(5): jmp 0x159(%rip)
135c9(7): nop 0x0(%rax)
135d0(4): lea 0x70(%rbx),%rax
135d4(5): lea 0x20(%rsp),%r14
135d9(4): sub $0xffffff80,%rbx
135dd(2): xor %ecx,%ecx
135df(2): xor %edx,%edx
135e1(3): mov %rbx,%rsi
135e4(3): mov %rax,%r15
135e7(3): mov %r14,%r8
135ea(3): mov %rax,%rdi
135ed(5): mov $0x8,0x28(%rsp)
135f2(5): mov %rax,0x8(%rsp)
135f7(5): call 0xfffffd69(%rip)
135fc(3): mov %r15,%rdi
135ff(3): mov %r14,%r8
13602(2): xor %ecx,%ecx
13604(2): xor %edx,%edx
13606(3): mov %rbx,%rsi
13609(3): mov %rax,%r12
1360c(5): mov $0x9,0x28(%rsp)
13611(5): call 0xfffffd4f(%rip)
13616(3): mov %rax,%r11
13619(3): mov %rax,%r15
1361c(5): mov 0x8(%rsp),%rdi
13621(3): mov %r14,%r8
13624(3): mov %r11,%rcx
13627(3): mov %r12,%rdx
1362a(3): mov %rbx,%rsi
1362d(5): mov $0x10,0x28(%rsp)
13632(5): mov %r11,0x10(%rsp)
13637(5): call 0xfffffd29(%rip)
1363c(3): test %rax,%rax
1363f(3): mov %rax,%rbp
13642(6): jz 0xfe(%rip)
13648(5): mov 0x10(%rsp),%r11
1364d(3): test %r11,%r11
13650(6): jz 0xf0(%rip)
13656(3): test %r12,%r12
13659(6): jz 0xe7(%rip)
1365f(3): test %r15,%r15
13662(6): jz 0xde(%rip)
13668(4): mov 0x28(%r13),%rax
1366c(4): mov %rax,0x28(%r15)
13670(5): mov %rax,0x28(%r12)
13675(5): movzx 0x32(%r13),%eax
1367a(5): movzx 0x32(%r15),%edx
1367f(3): and $0x8,%eax
13682(3): and $0xf7,%edx
13685(2): mov %eax,%ecx
13687(2): or %ecx,%edx
13689(4): mov %dl,0x32(%r15)
1368d(6): movzx 0x32(%r12),%eax
13693(3): and $0xf7,%eax
13696(2): or %ecx,%eax
13698(5): mov %al,0x32(%r12)
1369d(5): mov 0x38(%rsp),%rdi
136a2(9): xor $0x28,%rdi
136ab(3): mov %rbp,%rax
136ae(6): jnz 0xa4(%rip)
136b4(4): add $0x48,%rsp
136b8(1): pop %rbx
136b9(1): pop %rbp
136ba(2): pop %r12
136bc(2): pop %r13
136be(2): pop %r14
136c0(2): pop %r15
136c2(1): ret near (%rsp)
136c3(5): nop 0x0(%rax,%rax,1)
136c8(4): lea 0x70(%rbx),%rax
136cc(5): lea 0x20(%rsp),%r14
136d1(4): sub $0xffffff80,%rbx
136d5(2): xor %ecx,%ecx
136d7(2): xor %edx,%edx
136d9(3): mov %rbx,%rsi
136dc(3): mov %rax,%r15
136df(3): mov %r14,%r8
136e2(3): mov %rax,%rdi
136e5(5): mov $0x8,0x28(%rsp)
136ea(5): mov %rax,0x8(%rsp)
136ef(5): call 0xfffffc71(%rip)
136f4(2): xor %ecx,%ecx
136f6(2): xor %edx,%edx
136f8(3): mov %r15,%rdi
136fb(3): mov %r14,%r8
136fe(3): mov %rbx,%rsi
13701(3): mov %rax,%r12
13704(5): mov $0x9,0x28(%rsp)
13709(5): call 0xfffffc57(%rip)
1370e(3): test %rbp,%rbp
13711(3): mov %rax,%r15
13714(3): mov %rax,%r11
13717(6): jz 0xffffff05(%rip)
1371d(5): mov 0x8(%rsp),%rdi
13722(3): mov %r14,%r8
13725(3): mov %r15,%rcx
13728(3): mov %rbp,%rdx
1372b(3): mov %rbx,%rsi
1372e(5): mov $0x10,0x28(%rsp)
13733(5): call 0xfffffc2d(%rip)
13738(3): mov %rax,%r11
1373b(5): jmp 0xfffffee1(%rip)
13740(5): mov 0x18(%rsp),%rax
13745(2): xor %ebp,%ebp
13747(6): mov $0xc,(%rax)
1374d(5): jmp 0xffffff50(%rip)
13752(5): call 0xfffeee0e(%rip)

"lower_subexps" :
13760(1): push %rbp
13761(1): push %rbx
13762(3): mov %rdi,%rbp
13765(3): mov %rsi,%rbx
13768(4): sub $0x18,%rsp
1376c(4): mov 0x8(%rsi),%rdx
13770(9): mov $0x28,%rax
13779(5): mov %rax,0x8(%rsp)
1377e(2): xor %eax,%eax
13780(8): mov $0x0,0x4(%rsp)
13788(3): test %rdx,%rdx
1378b(2): jz 0x8(%rip)
1378d(4): cmp $0x11,0x30(%rdx)
13791(2): jz 0x4f(%rip)
13793(4): mov 0x10(%rbx),%rdx
13797(3): test %rdx,%rdx
1379a(2): jz 0x8(%rip)
1379c(4): cmp $0x11,0x30(%rdx)
137a0(2): jz 0x20(%rip)
137a2(5): mov 0x8(%rsp),%rcx
137a7(9): xor $0x28,%rcx
137b0(4): mov 0x4(%rsp),%eax
137b4(2): jnz 0x47(%rip)
137b6(4): add $0x18,%rsp
137ba(1): pop %rbx
137bb(1): pop %rbp
137bc(1): ret near (%rsp)
137bd(3): nop (%rax)
137c0(5): lea 0x4(%rsp),%rdi
137c5(3): mov %rbp,%rsi
137c8(5): call 0xfffffd58(%rip)
137cd(3): test %rax,%rax
137d0(4): mov %rax,0x10(%rbx)
137d4(2): jz 0xffffffce(%rip)
137d6(3): mov %rbx,(%rax)
137d9(2): jmp 0xffffffc9(%rip)
137db(5): nop 0x0(%rax,%rax,1)
137e0(5): lea 0x4(%rsp),%rdi
137e5(3): mov %rbp,%rsi
137e8(5): call 0xfffffd38(%rip)
137ed(3): test %rax,%rax
137f0(4): mov %rax,0x8(%rbx)
137f4(2): jz 0xffffff9f(%rip)
137f6(3): mov %rbx,(%rax)
137f9(2): jmp 0xffffff9a(%rip)
137fb(5): call 0xfffeed65(%rip)

"re_node_set_init_copy" :
13800(2): push %r12
13802(1): push %rbp
13803(1): push %rbx
13804(4): mov 0x8(%rsi),%rax
13808(4): mov %rax,0x8(%rdi)
1380c(4): mov 0x8(%rsi),%r12
13810(3): test %r12,%r12
13813(2): jle 0x3d(%rip)
13815(3): mov %rdi,%rbx
13818(3): mov %rax,(%rdi)
1381b(8): lea 0x0(,%rax,8),%rdi
13823(3): mov %rsi,%rbp
13826(5): call 0xfffeef5a(%rip)
1382b(3): test %rax,%rax
1382e(4): mov %rax,0x10(%rbx)
13832(2): jz 0x3e(%rip)
13834(4): mov 0x10(%rbp),%rsi
13838(8): lea 0x0(,%r12,8),%rdx
13840(3): mov %rax,%rdi
13843(5): call 0xfffeeecd(%rip)
13848(2): xor %eax,%eax
1384a(1): pop %rbx
1384b(1): pop %rbp
1384c(2): pop %r12
1384e(1): ret near (%rsp)
1384f(1): nop 
13850(4): pxor %xmm0,%xmm0
13854(8): mov $0x0,0x10(%rdi)
1385c(2): xor %eax,%eax
1385e(3): movups %xmm0,(%rdi)
13861(1): pop %rbx
13862(1): pop %rbp
13863(2): pop %r12
13865(1): ret near (%rsp)
13866(a): nop 0x0(%rax,%rax,1)
13870(8): mov $0x0,0x8(%rbx)
13878(7): mov $0x0,(%rbx)
1387f(5): mov $0xc,%eax
13884(2): jmp 0xffffffc6(%rip)

"re_node_set_init_union" :
13890(3): test %rsi,%rsi
13893(2): push %r14
13895(2): push %r13
13897(2): push %r12
13899(1): push %rbp
1389a(1): push %rbx
1389b(6): jz 0xaa(%rip)
138a1(3): test %rdx,%rdx
138a4(4): mov 0x8(%rsi),%r13
138a8(6): jz 0x98(%rip)
138ae(3): test %r13,%r13
138b1(6): jle 0x8f(%rip)
138b7(4): mov 0x8(%rdx),%r14
138bb(3): test %r14,%r14
138be(6): jle 0xb5(%rip)
138c4(3): mov %rdi,%r12
138c7(5): lea 0x0(%r13,%r14,1),%rdi
138cc(3): mov %rdx,%rbx
138cf(3): mov %rsi,%rbp
138d2(4): mov %rdi,(%r12)
138d6(4): shl/sal $0x3,%rdi
138da(5): call 0xfffeeea6(%rip)
138df(3): test %rax,%rax
138e2(5): mov %rax,0x10(%r12)
138e7(6): jz 0xf1(%rip)
138ed(4): mov 0x10(%rbx),%r9
138f1(4): mov 0x10(%rbp),%r8
138f5(2): xor %ebx,%ebx
138f7(2): xor %ecx,%ecx
138f9(2): xor %esi,%esi
138fb(2): jmp 0x23(%rip)
138fd(3): nop (%rax)
13900(4): setz %dil
13904(5): mov %rdx,0xfffffff8(%rax,%rbx,8)
13909(4): add $0x1,%rsi
1390d(4): movzx %dil,%edi
13911(3): add %rdi,%rcx
13914(3): cmp %rsi,%r13
13917(2): jle 0x69(%rip)
13919(3): cmp %rcx,%r14
1391c(2): jle 0x7c(%rip)
1391e(4): mov 0x0(%r8,%rsi,8),%rdx
13922(4): mov 0x0(%r9,%rcx,8),%rdi
13926(4): add $0x1,%rbx
1392a(3): cmp %rdi,%rdx
1392d(2): jle 0xffffffd3(%rip)
1392f(4): add $0x1,%rcx
13933(5): mov %rdi,0xfffffff8(%rax,%rbx,8)
13938(2): jmp 0xffffffdc(%rip)
1393a(6): nop 0x0(%rax,%rax,1)
13940(3): test %r13,%r13
13943(2): jnle 0x30(%rip)
13945(3): test %rdx,%rdx
13948(2): jz 0x9(%rip)
1394a(5): cmp $0x0,0x8(%rdx)
1394f(2): jnle 0x21(%rip)
13951(4): pxor %xmm0,%xmm0
13955(8): mov $0x0,0x10(%rdi)
1395d(2): xor %eax,%eax
1395f(3): movaps %xmm0,(%rdi)
13962(1): pop %rbx
13963(1): pop %rbp
13964(2): pop %r12
13966(2): pop %r13
13968(2): pop %r14
1396a(1): ret near (%rsp)
1396b(5): nop 0x0(%rax,%rax,1)
13970(3): mov %rdx,%rsi
13973(1): pop %rbx
13974(1): pop %rbp
13975(2): pop %r12
13977(2): pop %r13
13979(2): pop %r14
1397b(5): jmp 0xfffffe85(%rip)
13980(3): cmp %rcx,%r14
13983(2): jnle 0x35(%rip)
13985(5): mov %rbx,0x8(%r12)
1398a(2): xor %eax,%eax
1398c(1): pop %rbx
1398d(1): pop %rbp
1398e(2): pop %r12
13990(2): pop %r13
13992(2): pop %r14
13994(1): ret near (%rsp)
13995(3): nop (%rax)
13998(3): sub %rsi,%r13
1399b(4): lea 0x0(%rax,%rbx,8),%rdi
1399f(4): lea 0x0(%r8,%rsi,8),%rsi
139a3(8): lea 0x0(,%r13,8),%rdx
139ab(3): add %r13,%rbx
139ae(5): call 0xfffeed62(%rip)
139b3(2): jmp 0xffffffd2(%rip)
139b5(3): nop (%rax)
139b8(3): sub %rcx,%r14
139bb(4): lea 0x0(%rax,%rbx,8),%rdi
139bf(4): lea 0x0(%r9,%rcx,8),%rsi
139c3(8): lea 0x0(,%r14,8),%rdx
139cb(3): add %r14,%rbx
139ce(5): call 0xfffeed42(%rip)
139d3(2): jmp 0xffffffb2(%rip)
139d5(3): nop (%rax)
139d8(5): mov $0xc,%eax
139dd(5): jmp 0xffffff85(%rip)

"re_acquire_state_context" :
139f0(2): push %r15
139f2(2): push %r14
139f4(2): push %r13
139f6(2): push %r12
139f8(1): push %rbp
139f9(1): push %rbx
139fa(4): sub $0x28,%rsp
139fe(4): mov 0x8(%rdx),%r10
13a02(3): test %r10,%r10
13a05(6): jz 0x28a(%rip)
13a0b(3): mov %ecx,%r8d
13a0e(3): test %r10,%r10
13a11(4): lea 0x0(%r8,%r10,1),%r12
13a15(2): jle 0x17(%rip)
13a17(4): mov 0x10(%rdx),%rax
13a1b(4): lea 0x0(%rax,%r10,8),%r10
13a1f(1): nop 
13a20(3): add (%rax),%r12
13a23(4): add $0x8,%rax
13a27(3): cmp %rax,%r10
13a2a(2): jnz 0xfffffff6(%rip)
13a2c(7): mov 0x88(%rsi),%rax
13a33(3): mov %rdx,%rbp
13a36(4): mov %ecx,0x4(%rsp)
13a3a(3): mov %rsi,%r13
13a3d(5): mov %rdi,0x18(%rsp)
13a42(3): and %r12,%rax
13a45(4): lea 0x0(%rax,%rax,2),%rdx
13a49(4): mov 0x40(%rsi),%rax
13a4d(4): lea 0x0(%rax,%rdx,8),%rax
13a51(3): mov (%rax),%r11
13a54(3): test %r11,%r11
13a57(2): jle 0x59(%rip)
13a59(4): mov 0x10(%rax),%rbx
13a5d(3): xor %r10d,%r10d
13a60(3): mov %ecx,%r9d
13a63(2): jmp 0xe(%rip)
13a65(3): nop (%rax)
13a68(4): add $0x1,%r10
13a6c(3): cmp %r11,%r10
13a6f(2): jz 0x41(%rip)
13a71(4): mov 0x0(%rbx,%r10,8),%r14
13a75(3): cmp %r12,(%r14)
13a78(2): jnz 0xfffffff0(%rip)
13a7a(5): movzx 0x68(%r14),%eax
13a7f(3): and $0xf,%eax
13a82(3): cmp %r9d,%eax
13a85(2): jnz 0xffffffe3(%rip)
13a87(4): mov 0x50(%r14),%rdi
13a8b(3): test %rdi,%rdi
13a8e(2): jz 0xffffffda(%rip)
13a90(3): mov %rbp,%rsi
13a93(5): call 0xffffebad(%rip)
13a98(2): test %al,%al
13a9a(2): jz 0xffffffce(%rip)
13a9c(4): add $0x28,%rsp
13aa0(3): mov %r14,%rax
13aa3(1): pop %rbx
13aa4(1): pop %rbp
13aa5(2): pop %r12
13aa7(2): pop %r13
13aa9(2): pop %r14
13aab(2): pop %r15
13aad(1): ret near (%rsp)
13aae(2): nop 
13ab0(5): mov $0x1,%esi
13ab5(5): mov $0x70,%edi
13aba(5): call 0xfffeebf6(%rip)
13abf(3): test %rax,%rax
13ac2(3): mov %rax,%r14
13ac5(6): jz 0x141(%rip)
13acb(4): lea 0x8(%rax),%rax
13acf(3): mov %rbp,%rsi
13ad2(3): mov %rax,%rdi
13ad5(3): mov %rax,%rbx
13ad8(5): call 0xfffffd28(%rip)
13add(2): test %eax,%eax
13adf(6): jnz 0x1be(%rip)
13ae5(5): movzx 0x68(%r14),%eax
13aea(5): movzx 0x4(%rsp),%edx
13aef(4): mov %rbx,0x50(%r14)
13af3(3): and $0xf,%edx
13af6(3): and $0xf0,%eax
13af9(2): or %edx,%eax
13afb(5): cmp $0x0,0x8(%rbp)
13b00(4): mov %al,0x68(%r14)
13b04(6): jle 0xe4(%rip)
13b0a(4): lea 0x18(%r14),%rcx
13b0e(3): xor %r15d,%r15d
13b11(5): mov %r12,0x10(%rsp)
13b16(3): xor %r10d,%r10d
13b19(3): mov %r13,%r12
13b1c(3): mov %r15,%r13
13b1f(5): mov %rcx,0x8(%rsp)
13b24(3): mov %rbx,%r15
13b27(9): nop 0x0(%rax,%rax,1)
13b30(4): mov 0x10(%rbp),%rax
13b34(4): mov 0x0(%rax,%r13,8),%rax
13b38(4): shl/sal $0x4,%rax
13b3c(4): add (%r12),%rax
13b40(4): movzx 0x8(%rax),%esi
13b44(3): mov 0x8(%rax),%ebx
13b47(3): shr $0x8,%ebx
13b4a(5): and $0x3ff,%bx
13b4f(3): cmp $0x1,%esi
13b52(3): movzx %bx,%edi
13b55(2): jnz 0x6(%rip)
13b57(2): test %edi,%edi
13b59(2): jz 0x79(%rip)
13b5b(5): movzx 0x68(%r14),%edx
13b60(4): movzx 0xa(%rax),%eax
13b64(3): mov %edx,%r9d
13b67(3): shr $0x4,%al
13b6a(3): and $0xdf,%edx
13b6d(4): shr $0x5,%r9b
13b71(3): or %r9d,%eax
13b74(3): and $0x1,%eax
13b77(3): shl/sal $0x5,%eax
13b7a(2): or %edx,%eax
13b7c(3): cmp $0x2,%esi
13b7f(4): mov %al,0x68(%r14)
13b83(6): jz 0xcd(%rip)
13b89(3): cmp $0x4,%esi
13b8c(2): jnz 0x9(%rip)
13b8e(3): or $0x40,%eax
13b91(4): mov %al,0x68(%r14)
13b95(2): test %edi,%edi
13b97(2): jz 0x3b(%rip)
13b99(4): cmp 0x50(%r14),%r15
13b9d(6): jz 0xc3(%rip)
13ba3(3): test $0x1,%bl
13ba6(2): jz 0x7a(%rip)
13ba8(5): test $0x1,0x4(%rsp)
13bad(2): jz 0xb(%rip)
13baf(3): test $0x2,%bl
13bb2(2): jz 0x7a(%rip)
13bb4(4): nop 0x0(%rax)
13bb8(3): mov %r13,%rdx
13bbb(3): sub %r10,%rdx
13bbe(2): js 0x10(%rip)
13bc0(5): mov 0x8(%rsp),%rsi
13bc5(4): lea 0x10(%r14),%rdi
13bc9(5): call 0xffffec57(%rip)
13bce(4): add $0x1,%r10
13bd2(4): add $0x1,%r13
13bd6(4): cmp 0x8(%rbp),%r13
13bda(6): jl 0xffffff56(%rip)
13be0(3): mov %r12,%r13
13be3(5): mov 0x10(%rsp),%r12
13be8(3): mov %r12,%rdx
13beb(3): mov %r14,%rsi
13bee(3): mov %r13,%rdi
13bf1(5): call 0xffffd69f(%rip)
13bf6(2): test %eax,%eax
13bf8(6): jz 0xfffffea4(%rip)
13bfe(3): mov %r14,%rdi
13c01(5): call 0xffffe72f(%rip)
13c06(5): mov 0x18(%rsp),%rax
13c0b(3): xor %r14d,%r14d
13c0e(6): mov $0xc,(%rax)
13c14(5): jmp 0xfffffe88(%rip)
13c19(7): nop 0x0(%rax)
13c20(3): test $0x2,%bl
13c23(2): jz 0x9(%rip)
13c25(5): test $0x1,0x4(%rsp)
13c2a(2): jnz 0xffffff8e(%rip)
13c2c(3): test $0x10,%bl
13c2f(2): jz 0x9(%rip)
13c31(5): test $0x2,0x4(%rsp)
13c36(2): jz 0xffffff82(%rip)
13c38(3): and $0x40,%ebx
13c3b(2): jz 0xffffff97(%rip)
13c3d(5): test $0x4,0x4(%rsp)
13c42(2): jnz 0xffffff90(%rip)
13c44(5): jmp 0xffffff74(%rip)
13c49(7): nop 0x0(%rax)
13c50(3): or $0x10,%eax
13c53(4): mov %al,0x68(%r14)
13c57(5): jmp 0xffffff3e(%rip)
13c5c(4): nop 0x0(%rax)
13c60(5): mov $0x18,%edi
13c65(5): call 0xfffeeb1b(%rip)
13c6a(3): test %rax,%rax
13c6d(4): mov %rax,0x50(%r14)
13c71(2): jz 0xffffff8d(%rip)
13c73(3): mov %rbp,%rsi
13c76(3): mov %rax,%rdi
13c79(5): call 0xfffffb87(%rip)
13c7e(2): test %eax,%eax
13c80(2): jnz 0xffffff86(%rip)
13c82(5): or $0x80,0x68(%r14)
13c87(3): xor %r10d,%r10d
13c8a(5): jmp 0xffffff19(%rip)
13c8f(6): mov $0x0,(%rdi)
13c95(3): xor %r14d,%r14d
13c98(5): jmp 0xfffffe04(%rip)
13c9d(3): mov %r14,%rdi
13ca0(5): call 0xfffeed70(%rip)
13ca5(5): jmp 0xffffff61(%rip)

"re_acquire_state" :
13cb0(2): push %r15
13cb2(2): push %r14
13cb4(2): push %r13
13cb6(2): push %r12
13cb8(1): push %rbp
13cb9(1): push %rbx
13cba(4): sub $0x8,%rsp
13cbe(4): mov 0x8(%rdx),%rbp
13cc2(3): test %rbp,%rbp
13cc5(6): jz 0x1db(%rip)
13ccb(3): test %rbp,%rbp
13cce(2): jle 0x1e(%rip)
13cd0(4): mov 0x10(%rdx),%rax
13cd4(4): lea 0x0(%rax,%rbp,8),%rcx
13cd8(8): nop 0x0(%rax,%rax,1)
13ce0(3): add (%rax),%rbp
13ce3(4): add $0x8,%rax
13ce7(3): cmp %rax,%rcx
13cea(2): jnz 0xfffffff6(%rip)
13cec(7): mov 0x88(%rsi),%rax
13cf3(3): mov %rdx,%r14
13cf6(3): mov %rsi,%r12
13cf9(3): mov %rdi,%r13
13cfc(3): and %rbp,%rax
13cff(4): lea 0x0(%rax,%rax,2),%rdx
13d03(4): mov 0x40(%rsi),%rax
13d07(4): lea 0x0(%rax,%rdx,8),%rax
13d0b(3): mov (%rax),%r10
13d0e(3): test %r10,%r10
13d11(2): jle 0x35(%rip)
13d13(4): mov 0x10(%rax),%r11
13d17(3): xor %r9d,%r9d
13d1a(6): nop 0x0(%rax,%rax,1)
13d20(4): mov 0x0(%r11,%r9,8),%rbx
13d24(3): cmp %rbp,(%rbx)
13d27(2): jnz 0x16(%rip)
13d29(4): lea 0x8(%rbx),%rdi
13d2d(3): mov %r14,%rsi
13d30(5): call 0xffffe910(%rip)
13d35(2): test %al,%al
13d37(6): jnz 0x108(%rip)
13d3d(4): add $0x1,%r9
13d41(3): cmp %r9,%r10
13d44(2): jnz 0xffffffdc(%rip)
13d46(5): mov $0x1,%esi
13d4b(5): mov $0x70,%edi
13d50(5): call 0xfffee960(%rip)
13d55(3): test %rax,%rax
13d58(3): mov %rax,%rbx
13d5b(6): jz 0x12d(%rip)
13d61(4): lea 0x8(%rax),%r15
13d65(3): mov %r14,%rsi
13d68(3): mov %r15,%rdi
13d6b(5): call 0xfffffa95(%rip)
13d70(2): test %eax,%eax
13d72(6): jnz 0x10e(%rip)
13d78(4): mov 0x8(%r14),%rax
13d7c(4): mov %r15,0x50(%rbx)
13d80(3): test %rax,%rax
13d83(6): jle 0xaa(%rip)
13d89(4): mov 0x10(%r14),%rsi
13d8d(4): mov (%r12),%r8
13d91(4): lea 0x0(%rsi,%rax,8),%r9
13d95(2): jmp 0x4f(%rip)
13d97(9): nop 0x0(%rax,%rax,1)
13da0(4): movzx 0x68(%rbx),%ecx
13da4(4): movzx 0xa(%rax),%edx
13da8(3): mov %ecx,%r10d
13dab(3): shr $0x4,%dl
13dae(3): and $0xdf,%ecx
13db1(4): shr $0x5,%r10b
13db5(3): or %r10d,%edx
13db8(3): and $0x1,%edx
13dbb(3): shl/sal $0x5,%edx
13dbe(2): or %ecx,%edx
13dc0(3): cmp $0x2,%edi
13dc3(3): mov %dl,0x68(%rbx)
13dc6(6): jz 0x92(%rip)
13dcc(3): cmp $0x4,%edi
13dcf(6): jnz 0x99(%rip)
13dd5(3): or $0x40,%edx
13dd8(3): mov %dl,0x68(%rbx)
13ddb(4): add $0x8,%rsi
13ddf(3): cmp %rsi,%r9
13de2(2): jz 0x4b(%rip)
13de4(3): mov (%rsi),%rax
13de7(4): shl/sal $0x4,%rax
13deb(3): add %r8,%rax
13dee(4): movzx 0x8(%rax),%edi
13df2(3): cmp $0x1,%edi
13df5(2): jnz 0xffffffab(%rip)
13df7(7): test $0x3ff00,0x8(%rax)
13dfe(2): jz 0xffffffdd(%rip)
13e00(4): movzx 0x68(%rbx),%edx
13e04(4): movzx 0xa(%rax),%eax
13e08(2): mov %edx,%ecx
13e0a(3): shr $0x4,%al
13e0d(3): and $0xdf,%edx
13e10(3): shr $0x5,%cl
13e13(2): or %ecx,%eax
13e15(3): and $0x1,%eax
13e18(3): shl/sal $0x5,%eax
13e1b(2): or %edx,%eax
13e1d(3): mov %al,0x68(%rbx)
13e20(4): add $0x8,%rsi
13e24(4): or $0x80,0x68(%rbx)
13e28(3): cmp %rsi,%r9
13e2b(2): jnz 0xffffffb9(%rip)
13e2d(3): mov %rbp,%rdx
13e30(3): mov %rbx,%rsi
13e33(3): mov %r12,%rdi
13e36(5): call 0xffffd45a(%rip)
13e3b(2): test %eax,%eax
13e3d(2): jnz 0x57(%rip)
13e3f(4): add $0x8,%rsp
13e43(3): mov %rbx,%rax
13e46(1): pop %rbx
13e47(1): pop %rbp
13e48(2): pop %r12
13e4a(2): pop %r13
13e4c(2): pop %r14
13e4e(2): pop %r15
13e50(1): ret near (%rsp)
13e51(7): nop 0x0(%rax)
13e58(3): or $0x10,%edx
13e5b(3): mov %dl,0x68(%rbx)
13e5e(5): jmp 0xffffff7d(%rip)
13e63(5): nop 0x0(%rax,%rax,1)
13e68(3): cmp $0xc,%edi
13e6b(2): jz 0xffffffb5(%rip)
13e6d(7): test $0x3ff00,0x8(%rax)
13e74(6): jz 0xffffff67(%rip)
13e7a(2): jmp 0xffffffa6(%rip)
13e7c(4): nop 0x0(%rax)
13e80(3): mov %rbx,%rdi
13e83(5): call 0xfffeeb8d(%rip)
13e88(8): mov $0xc,0x0(%r13)
13e90(2): xor %ebx,%ebx
13e92(2): jmp 0xffffffad(%rip)
13e94(3): mov %rbx,%rdi
13e97(5): call 0xffffe499(%rip)
13e9c(2): jmp 0xffffffec(%rip)
13e9e(2): nop 
13ea0(6): mov $0x0,(%rdi)
13ea6(2): xor %ebx,%ebx
13ea8(2): jmp 0xffffff97(%rip)

"merge_state_array" :
13eb0(2): push %r15
13eb2(2): push %r14
13eb4(2): push %r13
13eb6(2): push %r12
13eb8(1): push %rbp
13eb9(1): push %rbx
13eba(4): sub $0x48,%rsp
13ebe(9): mov $0x28,%rax
13ec7(5): mov %rax,0x38(%rsp)
13ecc(2): xor %eax,%eax
13ece(3): test %rcx,%rcx
13ed1(6): jle 0x95(%rip)
13ed7(5): lea 0x1c(%rsp),%rax
13edc(3): mov %rdi,%r14
13edf(3): mov %rsi,%rbx
13ee2(3): mov %rdx,%r12
13ee5(3): mov %rcx,%rbp
13ee8(3): xor %r15d,%r15d
13eeb(5): lea 0x20(%rsp),%r13
13ef0(5): mov %rax,0x8(%rsp)
13ef5(2): jmp 0x57(%rip)
13ef7(9): nop 0x0(%rax,%rax,1)
13f00(3): test %rdx,%rdx
13f03(2): jz 0x40(%rip)
13f05(4): add $0x8,%rdx
13f09(4): add $0x8,%rsi
13f0d(3): mov %r13,%rdi
13f10(5): call 0xfffff980(%rip)
13f15(2): test %eax,%eax
13f17(4): mov %eax,0x1c(%rsp)
13f1b(2): jnz 0x4d(%rip)
13f1d(5): mov 0x8(%rsp),%rdi
13f22(3): mov %r13,%rdx
13f25(3): mov %r14,%rsi
13f28(5): call 0xfffffd88(%rip)
13f2d(5): mov 0x30(%rsp),%rdi
13f32(4): mov %rax,0x0(%rbx,%r15,8)
13f36(5): call 0xfffeeada(%rip)
13f3b(4): mov 0x1c(%rsp),%eax
13f3f(2): test %eax,%eax
13f41(2): jnz 0x27(%rip)
13f43(4): add $0x1,%r15
13f47(3): cmp %r15,%rbp
13f4a(2): jz 0x1c(%rip)
13f4c(4): mov 0x0(%rbx,%r15,8),%rsi
13f50(4): mov 0x0(%r12,%r15,8),%rdx
13f54(3): test %rsi,%rsi
13f57(2): jnz 0xffffffa9(%rip)
13f59(4): mov %rdx,0x0(%rbx,%r15,8)
13f5d(4): add $0x1,%r15
13f61(3): cmp %r15,%rbp
13f64(2): jnz 0xffffffe8(%rip)
13f66(2): xor %eax,%eax
13f68(5): mov 0x38(%rsp),%rcx
13f6d(9): xor $0x28,%rcx
13f76(2): jnz 0x11(%rip)
13f78(4): add $0x48,%rsp
13f7c(1): pop %rbx
13f7d(1): pop %rbp
13f7e(2): pop %r12
13f80(2): pop %r13
13f82(2): pop %r14
13f84(2): pop %r15
13f86(1): ret near (%rsp)
13f87(5): call 0xfffee5d9(%rip)

"expand_bkref_cache" :
13f90(2): push %r15
13f92(2): push %r14
13f94(2): push %r13
13f96(2): push %r12
13f98(3): mov %rdx,%r12
13f9b(1): push %rbp
13f9c(1): push %rbx
13f9d(3): mov %rdi,%rbx
13fa0(3): mov %rsi,%rbp
13fa3(2): xor %esi,%esi
13fa5(4): sub $0x78,%rsp
13fa9(7): mov 0xc8(%rdi),%rdi
13fb0(9): mov $0x28,%rax
13fb9(5): mov %rax,0x68(%rsp)
13fbe(2): xor %eax,%eax
13fc0(5): mov %rcx,0x20(%rsp)
13fc5(5): mov %r8d,0x2c(%rsp)
13fca(3): mov %rdi,%rdx
13fcd(3): cmp %rdx,%rsi
13fd0(2): jnl 0x57(%rip)
13fd2(4): lea 0x0(%rsi,%rdx,1),%rax
13fd6(7): mov 0xd8(%rbx),%r8
13fdd(3): mov %rax,%rcx
13fe0(4): shr $0x3f,%rcx
13fe4(3): add %rax,%rcx
13fe7(3): sar $0x1,%rcx
13fea(4): lea 0x0(%rcx,%rcx,4),%rax
13fee(5): cmp 0x8(%r8,%rax,8),%r12
13ff3(2): jle 0x2f(%rip)
13ff5(5): jmp 0x83(%rip)
13ffa(6): nop 0x0(%rax,%rax,1)
14000(4): lea 0x0(%rsi,%rcx,1),%rdx
14004(3): mov %rdx,%rax
14007(4): shr $0x3f,%rax
1400b(3): add %rdx,%rax
1400e(3): sar $0x1,%rax
14011(4): lea 0x0(%rax,%rax,4),%rdx
14015(3): mov %rax,%r9
14018(5): cmp 0x8(%r8,%rdx,8),%r12
1401d(2): jnle 0x63(%rip)
1401f(3): mov %rax,%rcx
14022(3): cmp %rcx,%rsi
14025(2): jl 0xffffffdb(%rip)
14027(3): cmp %rsi,%rdi
1402a(2): jle 0x23(%rip)
1402c(7): mov 0xd8(%rbx),%rcx
14033(4): lea 0x0(%rsi,%rsi,4),%rax
14037(4): shl/sal $0x3,%rax
1403b(5): cmp %r12,0x8(%rcx,%rax,1)
14040(5): mov %rax,0x30(%rsp)
14045(2): jnz 0x8(%rip)
14047(4): cmp $0xffffffff,%rsi
1404b(2): jnz 0x45(%rip)
1404d(2): xor %eax,%eax
1404f(5): mov 0x68(%rsp),%rbx
14054(9): xor $0x28,%rbx
1405d(6): jnz 0x2cc(%rip)
14063(4): add $0x78,%rsp
14067(1): pop %rbx
14068(1): pop %rbp
14069(2): pop %r12
1406b(2): pop %r13
1406d(2): pop %r14
1406f(2): pop %r15
14071(1): ret near (%rsp)
14072(6): nop 0x0(%rax,%rax,1)
14078(3): mov %rcx,%r9
1407b(3): mov %rdx,%rcx
1407e(2): nop 
14080(4): lea 0x1(%r9),%rsi
14084(3): mov %rcx,%rdx
14087(5): jmp 0xffffff46(%rip)
1408c(4): nop 0x0(%rax)
14090(4): lea 0x10(%rbp),%rax
14094(7): mov 0x98(%rbx),%r13
1409b(4): mov %rax,(%rsp)
1409f(5): lea 0x4c(%rsp),%rax
140a4(5): mov %rax,0x38(%rsp)
140a9(5): lea 0x50(%rsp),%rax
140ae(5): mov %rax,0x10(%rsp)
140b3(5): mov 0x30(%rsp),%rax
140b8(4): lea 0x0(%rcx,%rax,1),%r15
140bc(5): jmp 0xdc(%rip)
140c1(7): nop 0x0(%rax)
140c8(4): mov 0x18(%r13),%rax
140cc(4): mov 0x0(%rax,%r10,8),%rcx
140d0(7): mov 0xb8(%rbx),%r10
140d7(8): lea 0x0(,%r14,8),%rax
140df(5): mov %rax,0x18(%rsp)
140e4(3): add %rax,%r10
140e7(5): mov %rcx,0x8(%rsp)
140ec(3): mov (%r10),%r9
140ef(3): test %r9,%r9
140f2(6): jz 0x18e(%rip)
140f8(4): mov 0x10(%r9),%rdi
140fc(4): lea 0x18(%r9),%rsi
14100(3): mov %rcx,%rdx
14103(5): call 0xffffe59d(%rip)
14108(3): test %rax,%rax
1410b(2): jnz 0x7e(%rip)
1410d(5): mov 0x10(%rsp),%rdi
14112(4): lea 0x8(%r9),%rsi
14116(5): call 0xfffff6ea(%rip)
1411b(5): mov 0x8(%rsp),%rsi
14120(5): mov 0x10(%rsp),%rdi
14125(4): mov %eax,0x4c(%rsp)
14129(5): call 0xffffd037(%rip)
1412e(4): mov 0x4c(%rsp),%edx
14132(2): test %edx,%edx
14134(6): jnz 0x1a2(%rip)
1413a(2): cmp $0x1,%al
1413c(6): jnz 0x19a(%rip)
14142(5): mov 0x18(%rsp),%r10
14147(7): add 0xb8(%rbx),%r10
1414e(5): mov 0x10(%rsp),%rdx
14153(5): mov 0x38(%rsp),%rdi
14158(3): mov %r13,%rsi
1415b(5): mov %r10,0x8(%rsp)
14160(5): call 0xfffffb50(%rip)
14165(5): mov 0x8(%rsp),%r10
1416a(5): mov 0x60(%rsp),%rdi
1416f(3): mov %rax,(%r10)
14172(5): call 0xfffee89e(%rip)
14177(7): mov 0xb8(%rbx),%rax
1417e(5): cmp $0x0,0x0(%rax,%r14,8)
14183(6): jz 0x142(%rip)
14189(4): add $0x28,%r15
1418d(5): cmp $0x0,0xfffffff8(%r15)
14192(6): jz 0xfffffebb(%rip)
14198(3): mov (%r15),%r10
1419b(4): mov 0x8(%rbp),%r9
1419f(4): mov (%rsp),%rsi
141a3(3): mov %r10,%rdx
141a6(3): mov %r9,%rdi
141a9(5): call 0xffffe4f7(%rip)
141ae(3): test %rax,%rax
141b1(2): jz 0xffffffd8(%rip)
141b3(4): mov 0x18(%r15),%r8
141b7(3): add %r12,%r8
141ba(3): mov %r8,%r14
141bd(4): sub 0x10(%r15),%r14
141c1(3): cmp %r14,%r12
141c4(6): jnz 0xffffff04(%rip)
141ca(4): mov 0x28(%r13),%rcx
141ce(4): lea 0x0(%r10,%r10,2),%rax
141d2(4): mov (%rsp),%rsi
141d6(3): mov %r9,%rdi
141d9(4): lea 0x0(%rcx,%rax,8),%rax
141dd(4): mov 0x10(%rax),%rax
141e1(3): mov (%rax),%r14
141e4(3): mov %r14,%rdx
141e7(5): call 0xffffe4b9(%rip)
141ec(3): test %rax,%rax
141ef(2): jnz 0xffffff9a(%rip)
141f1(5): mov $0x8,%edi
141f6(9): mov $0x1,0x50(%rsp)
141ff(9): mov $0x1,0x58(%rsp)
14208(5): call 0xfffee578(%rip)
1420d(3): test %rax,%rax
14210(5): mov %rax,0x60(%rsp)
14215(6): jz 0xf8(%rip)
1421b(3): mov %r14,(%rax)
1421e(2): xor %eax,%eax
14220(5): mov 0x10(%rsp),%r15
14225(5): mov 0x20(%rsp),%rdx
1422a(3): mov %r13,%rdi
1422d(4): mov 0x2c(%rsp),%ecx
14231(4): mov %eax,0x4c(%rsp)
14235(3): mov %r15,%rsi
14238(5): call 0xffffee18(%rip)
1423d(3): mov %r15,%rsi
14240(3): mov %rbp,%rdi
14243(3): mov %eax,%r14d
14246(5): call 0xffffe97a(%rip)
1424b(5): mov 0x60(%rsp),%rdi
14250(3): mov %eax,%r15d
14253(5): call 0xfffee7bd(%rip)
14258(4): mov 0x4c(%rsp),%eax
1425c(3): mov %r14d,%edx
1425f(3): or %r15d,%edx
14262(2): or %eax,%edx
14264(6): jnz 0x92(%rip)
1426a(7): mov 0xd8(%rbx),%rcx
14271(5): jmp 0xfffffe42(%rip)
14276(a): nop 0x0(%rax,%rax,1)
14280(5): mov $0x8,%edi
14285(5): mov %r10,0x18(%rsp)
1428a(9): mov $0x1,0x50(%rsp)
14293(9): mov $0x1,0x58(%rsp)
1429c(5): call 0xfffee4e4(%rip)
142a1(3): test %rax,%rax
142a4(5): mov %rax,0x60(%rsp)
142a9(2): jz 0x43(%rip)
142ab(5): mov 0x8(%rsp),%rdi
142b0(8): mov $0x0,0x4c(%rsp)
142b8(5): mov 0x18(%rsp),%r10
142bd(3): mov %rdi,(%rax)
142c0(5): jmp 0xfffffe8e(%rip)
142c5(4): mov 0x4c(%rsp),%eax
142c9(2): test %eax,%eax
142cb(6): jz 0xfffffebe(%rip)
142d1(5): jmp 0xfffffd7e(%rip)
142d6(5): mov 0x60(%rsp),%rdi
142db(5): call 0xfffee735(%rip)
142e0(4): mov 0x4c(%rsp),%eax
142e4(2): test %eax,%eax
142e6(6): jnz 0xfffffd69(%rip)
142ec(5): mov $0xc,%eax
142f1(5): jmp 0xfffffd5e(%rip)
142f6(2): test %eax,%eax
142f8(6): jnz 0xfffffd57(%rip)
142fe(3): test %r14d,%r14d
14301(3): mov %r14d,%eax
14304(4): cmove %r15d,%eax
14308(5): jmp 0xfffffd47(%rip)
1430d(9): mov $0x0,0x58(%rsp)
14316(9): mov $0x0,0x50(%rsp)
1431f(5): mov $0xc,%eax
14324(5): jmp 0xfffffefc(%rip)
14329(5): call 0xfffee237(%rip)

"check_subexp_matching_top.isra.18" :
14330(2): push %r15
14332(2): push %r14
14334(2): push %r13
14336(2): push %r12
14338(1): push %rbp
14339(1): push %rbx
1433a(4): sub $0x28,%rsp
1433e(4): cmp $0x0,(%rsi)
14342(7): mov 0x98(%rdi),%r13
14349(6): jle 0xc7(%rip)
1434f(3): mov %rdx,%r14
14352(3): mov %rsi,%r12
14355(3): mov %rdi,%r15
14358(2): xor %ebx,%ebx
1435a(2): jmp 0x14(%rip)
1435c(4): nop 0x0(%rax)
14360(4): add $0x1,%rbx
14364(4): cmp (%r12),%rbx
14368(6): jnl 0xa8(%rip)
1436e(3): mov (%r14),%rax
14371(4): mov 0x0(%rax,%rbx,8),%rbp
14375(3): mov %rbp,%rax
14378(4): shl/sal $0x4,%rax
1437c(4): add 0x0(%r13),%rax
14380(4): cmp $0x8,0x8(%rax)
14384(2): jnz 0xffffffdc(%rip)
14386(3): mov (%rax),%rax
14389(4): cmp $0x3f,%rax
1438d(2): jnle 0xffffffd3(%rip)
1438f(7): mov 0xa0(%r13),%rsi
14396(4): bt %rax,%rsi
1439a(2): jnb 0xffffffc6(%rip)
1439c(7): mov 0xe8(%r15),%r8
143a3(7): cmp 0xf0(%r15),%r8
143aa(7): mov 0xf8(%r15),%r9
143b1(2): jz 0x77(%rip)
143b3(5): mov $0x30,%esi
143b8(5): mov $0x1,%edi
143bd(5): mov %r9,0x10(%rsp)
143c2(5): mov %r8,0x8(%rsp)
143c7(5): mov %rcx,0x18(%rsp)
143cc(5): call 0xfffee2e4(%rip)
143d1(5): mov 0x8(%rsp),%r8
143d6(5): mov 0x10(%rsp),%r9
143db(3): test %rax,%rax
143de(4): mov %rax,0x0(%r9,%r8,8)
143e2(2): jz 0x3f(%rip)
143e4(4): add $0x1,%r8
143e8(4): add $0x1,%rbx
143ec(5): mov 0x18(%rsp),%rcx
143f1(7): mov %r8,0xe8(%r15)
143f8(4): cmp (%r12),%rbx
143fc(4): mov %rbp,0x8(%rax)
14400(3): mov %rcx,(%rax)
14403(6): jl 0xffffff6b(%rip)
14409(7): nop 0x0(%rax)
14410(2): xor %eax,%eax
14412(4): add $0x28,%rsp
14416(1): pop %rbx
14417(1): pop %rbp
14418(2): pop %r12
1441a(2): pop %r13
1441c(2): pop %r14
1441e(2): pop %r15
14420(1): ret near (%rsp)
14421(5): mov $0xc,%eax
14426(2): jmp 0xffffffec(%rip)
14428(4): lea 0x0(%r8,%r8,1),%rax
1442c(3): mov %r8,%rsi
1442f(3): mov %r9,%rdi
14432(4): shl/sal $0x4,%rsi
14436(5): mov %rcx,0x8(%rsp)
1443b(5): mov %rax,0x10(%rsp)
14440(5): call 0xfffee3f0(%rip)
14445(3): test %rax,%rax
14448(3): mov %rax,%r9
1444b(5): mov 0x8(%rsp),%rcx
14450(2): jz 0xffffffd1(%rip)
14452(7): mov %rax,0xf8(%r15)
14459(5): mov 0x10(%rsp),%rax
1445e(7): mov 0xe8(%r15),%r8
14465(7): mov %rax,0xf0(%r15)
1446c(5): jmp 0xffffff47(%rip)

"re_string_context_at" :
14480(1): push %rbp
14481(1): push %rbx
14482(3): mov %rdi,%rbp
14485(4): sub $0x8,%rsp
14489(3): test %rsi,%rsi
1448c(2): js 0x54(%rip)
1448e(4): cmp %rsi,0x58(%rdi)
14492(6): jz 0xa6(%rip)
14498(7): cmp $0x1,0x90(%rdi)
1449f(2): jle 0x51(%rip)
144a1(4): mov 0x10(%rdi),%rax
144a5(2): jmp 0x15(%rip)
144a7(9): nop 0x0(%rax,%rax,1)
144b0(4): sub $0x1,%rsi
144b4(4): cmp $0xffffffff,%rsi
144b8(2): jz 0x28(%rip)
144ba(3): mov 0x0(%rax,%rsi,4),%ebx
144bd(3): cmp $0xff,%ebx
144c0(2): jz 0xfffffff0(%rip)
144c2(7): cmp $0x0,0x8e(%rbp)
144c9(2): jnz 0x7f(%rip)
144cb(2): xor %eax,%eax
144cd(3): cmp $0xa,%ebx
144d0(2): jz 0x4c(%rip)
144d2(4): add $0x8,%rsp
144d6(1): pop %rbx
144d7(1): pop %rbp
144d8(1): ret near (%rsp)
144d9(7): nop 0x0(%rax)
144e0(3): mov 0x70(%rbp),%eax
144e3(4): add $0x8,%rsp
144e7(1): pop %rbx
144e8(1): pop %rbp
144e9(1): ret near (%rsp)
144ea(6): nop 0x0(%rax,%rax,1)
144f0(4): mov 0x8(%rdi),%rax
144f4(7): mov 0x80(%rdi),%rcx
144fb(4): movzx 0x0(%rax,%rsi,1),%eax
144ff(3): mov %rax,%rdx
14502(4): sar $0x6,%rax
14506(4): mov 0x0(%rcx,%rax,8),%rcx
1450a(5): mov $0x1,%eax
1450f(4): bt %rdx,%rcx
14513(2): jb 0xffffffbf(%rip)
14515(2): xor %eax,%eax
14517(3): cmp $0xa,%dl
1451a(2): jnz 0xffffffb8(%rip)
1451c(2): xor %eax,%eax
1451e(7): cmp $0x0,0x8d(%rbp)
14525(3): setnz %al
14528(4): add $0x8,%rsp
1452c(2): add %eax,%eax
1452e(1): pop %rbx
1452f(1): pop %rbp
14530(1): ret near (%rsp)
14531(7): nop 0x0(%rax)
14538(3): and $0x2,%edx
1453b(3): cmp $0x1,%edx
1453e(2): sbb %eax,%eax
14540(3): and $0x2,%eax
14543(3): add $0x8,%eax
14546(2): jmp 0xffffff8c(%rip)
14548(2): mov %ebx,%edi
1454a(5): call 0xfffee226(%rip)
1454f(2): test %eax,%eax
14551(2): jnz 0xb(%rip)
14553(3): cmp $0x5f,%ebx
14556(6): jnz 0xffffff75(%rip)
1455c(5): mov $0x1,%eax
14561(5): jmp 0xffffff71(%rip)

"check_node_accept" :
14570(4): mov 0x8(%rdi),%rax
14574(4): movzx 0x0(%rax,%rdx,1),%ecx
14578(4): movzx 0x8(%rsi),%eax
1457c(2): cmp $0x3,%al
1457e(6): jz 0xba(%rip)
14584(6): jbe 0x9c(%rip)
1458a(2): cmp $0x5,%al
1458c(2): jz 0x14(%rip)
1458e(2): cmp $0x7,%al
14590(6): jnz 0xa0(%rip)
14596(2): xor %eax,%eax
14598(2): test %cl,%cl
1459a(6): js 0x90(%rip)
145a0(3): cmp $0xa,%cl
145a3(6): jz 0xc5(%rip)
145a9(2): test %cl,%cl
145ab(2): jnz 0x15(%rip)
145ad(7): mov 0x98(%rdi),%rcx
145b4(2): xor %eax,%eax
145b6(7): test $0x80,0xd8(%rcx)
145bd(2): jnz 0x6d(%rip)
145bf(1): nop 
145c0(1): push %rbx
145c1(3): mov 0x8(%rsi),%ebx
145c4(5): mov $0x1,%eax
145c9(6): test $0x3ff00,%ebx
145cf(2): jz 0x4d(%rip)
145d1(3): mov %rdx,%rsi
145d4(6): mov 0xa0(%rdi),%edx
145da(3): shr $0x8,%ebx
145dd(5): call 0xfffffea3(%rip)
145e2(2): mov %ebx,%ecx
145e4(2): mov %eax,%edx
145e6(5): and $0x3ff,%cx
145eb(3): test $0x4,%bl
145ee(2): jz 0x6a(%rip)
145f0(2): xor %eax,%eax
145f2(3): test $0x1,%dl
145f5(2): jz 0x27(%rip)
145f7(3): and $0x8,%ebx
145fa(2): jnz 0x22(%rip)
145fc(3): test $0x20,%cl
145ff(2): jz 0x9(%rip)
14601(2): xor %eax,%eax
14603(3): test $0x2,%dl
14606(2): jz 0x16(%rip)
14608(3): shr $0x3,%edx
1460b(5): mov $0x1,%eax
14610(3): and $0x1,%edx
14613(6): and $0x80,%ecx
14619(3): cmovne %edx,%eax
1461c(1): pop %rbx
1461d(1): ret near (%rsp)
1461e(2): nop 
14620(2): cmp $0x1,%al
14622(2): jnz 0xe(%rip)
14624(2): xor %eax,%eax
14626(2): cmp %cl,(%rsi)
14628(2): jz 0xffffff98(%rip)
1462a(2): REP ret near (%rsp)
1462c(4): nop 0x0(%rax)
14630(2): xor %eax,%eax
14632(1): ret near (%rsp)
14633(5): nop 0x0(%rax,%rax,1)
14638(3): mov (%rsi),%r8
1463b(3): movzx %cl,%eax
1463e(4): sar $0x6,%rax
14642(4): mov 0x0(%r8,%rax,8),%r8
14646(2): xor %eax,%eax
14648(4): bt %rcx,%r8
1464c(6): jb 0xffffff74(%rip)
14652(2): REP ret near (%rsp)
14654(4): nop 0x0(%rax)
14658(3): and $0x8,%ebx
1465b(2): jz 0xffffffa1(%rip)
1465d(2): test $0x1,%al
1465f(2): jz 0xffffff9d(%rip)
14661(2): xor %eax,%eax
14663(1): pop %rbx
14664(1): ret near (%rsp)
14665(3): nop (%rax)
14668(7): mov 0x98(%rdi),%rcx
1466f(2): xor %eax,%eax
14671(7): test $0x40,0xd8(%rcx)
14678(6): jnz 0xffffff48(%rip)
1467e(2): REP ret near (%rsp)

"check_halt_state_context.isra.20" :
14680(2): push %r12
14682(3): mov %rdx,%r12
14685(1): push %rbp
14686(1): push %rbx
14687(6): mov 0xa0(%rdi),%edx
1468d(3): mov %rsi,%rbx
14690(3): mov %rcx,%rsi
14693(3): mov %rdi,%rbp
14696(5): call 0xfffffdea(%rip)
1469b(3): test %rbx,%rbx
1469e(6): jle 0xaa(%rip)
146a4(7): mov 0x98(%rbp),%rdx
146ab(3): mov %eax,%r11d
146ae(2): mov %eax,%ebp
146b0(3): and $0x1,%eax
146b3(4): mov (%r12),%r9
146b7(2): xor %esi,%esi
146b9(3): and $0x8,%ebp
146bc(4): and $0x2,%r11d
146c0(3): mov %eax,%r10d
146c3(3): mov (%rdx),%r8
146c6(2): jmp 0x13(%rip)
146c8(8): nop 0x0(%rax,%rax,1)
146d0(4): add $0x1,%rsi
146d4(3): cmp %rbx,%rsi
146d7(2): jz 0x71(%rip)
146d9(4): mov 0x0(%r9,%rsi,8),%rax
146dd(3): mov %rax,%rdx
146e0(4): shl/sal $0x4,%rdx
146e4(3): add %r8,%rdx
146e7(3): mov 0x8(%rdx),%ecx
146ea(3): shr $0x8,%ecx
146ed(2): mov %ecx,%edi
146ef(5): and $0x3ff,%di
146f4(4): cmp $0x2,0x8(%rdx)
146f8(2): jnz 0xffffffd8(%rip)
146fa(3): test %di,%di
146fd(2): jz 0x28(%rip)
146ff(3): test $0x4,%cl
14702(2): jz 0x2e(%rip)
14704(3): test %r10d,%r10d
14707(2): jz 0xffffffc9(%rip)
14709(3): and $0x8,%ecx
1470c(2): jnz 0xffffffc4(%rip)
1470e(4): test $0x20,%dil
14712(2): jz 0x7(%rip)
14714(3): test %r11d,%r11d
14717(2): jz 0xffffffb9(%rip)
14719(6): and $0x80,%edi
1471f(2): jz 0x6(%rip)
14721(2): test %ebp,%ebp
14723(2): jz 0xffffffad(%rip)
14725(1): pop %rbx
14726(1): pop %rbp
14727(2): pop %r12
14729(1): ret near (%rsp)
1472a(6): nop 0x0(%rax,%rax,1)
14730(3): and $0x8,%ecx
14733(2): jz 0xffffffdb(%rip)
14735(3): test %r10d,%r10d
14738(2): jnz 0xffffff98(%rip)
1473a(4): test $0x20,%dil
1473e(2): jz 0xffffffdb(%rip)
14740(2): jmp 0xffffffd4(%rip)
14742(6): nop 0x0(%rax,%rax,1)
14748(1): pop %rbx
14749(2): xor %eax,%eax
1474b(1): pop %rbp
1474c(2): pop %r12
1474e(1): ret near (%rsp)

"re_string_reconstruct" :
14750(2): push %r15
14752(2): push %r14
14754(3): mov %rsi,%r15
14757(2): push %r13
14759(2): push %r12
1475b(3): mov %edx,%r10d
1475e(1): push %rbp
1475f(1): push %rbx
14760(3): mov %rsi,%rbp
14763(3): mov %rdi,%rbx
14766(4): sub $0x48,%rsp
1476a(9): mov $0x28,%rax
14773(5): mov %rax,0x38(%rsp)
14778(2): xor %eax,%eax
1477a(4): mov 0x28(%rdi),%rax
1477e(3): sub %rax,%rbp
14781(3): cmp %rsi,%rax
14784(2): jle 0x62(%rip)
14786(7): cmp $0x1,0x90(%rdi)
1478d(6): jnle 0x133(%rip)
14793(4): mov 0x50(%rbx),%rax
14797(8): mov $0x0,0x30(%rbx)
1479f(3): mov %r15,%rbp
147a2(8): mov $0x0,0x28(%rbx)
147aa(8): mov $0x0,0x38(%rbx)
147b2(7): mov $0x0,0x8c(%rbx)
147b9(4): mov %rax,0x58(%rbx)
147bd(4): mov 0x60(%rbx),%rax
147c1(4): mov %rax,0x68(%rbx)
147c5(3): mov %r10d,%eax
147c8(3): and $0x1,%eax
147cb(3): cmp $0x1,%eax
147ce(2): sbb %eax,%eax
147d0(3): and $0x2,%eax
147d3(3): add $0x4,%eax
147d6(7): cmp $0x0,0x8b(%rbx)
147dd(3): mov %eax,0x70(%rbx)
147e0(6): jz 0xd0(%rip)
147e6(3): test %rbp,%rbp
147e9(2): jz 0x65(%rip)
147eb(4): mov 0x38(%rbx),%rax
147ef(7): movzx 0x8c(%rbx),%edx
147f6(4): mov 0x30(%rbx),%r8
147fa(3): cmp %rbp,%rax
147fd(6): jle 0x123(%rip)
14803(2): test %dl,%dl
14805(6): jnz 0x213(%rip)
1480b(4): lea 0xffffffff(%rbp),%rsi
1480f(3): mov %r10d,%edx
14812(3): mov %rbx,%rdi
14815(4): mov %r8,(%rsp)
14819(5): call 0xfffffc67(%rip)
1481e(4): mov (%rsp),%r8
14822(3): mov %eax,0x70(%rbx)
14825(3): sub %rbp,%r8
14828(7): cmp $0x1,0x90(%rbx)
1482f(6): jnle 0xa1(%rip)
14835(7): cmp $0x0,0x8b(%rbx)
1483c(6): jnz 0x3a4(%rip)
14842(4): sub %rbp,0x38(%rbx)
14846(4): mov %r8,0x30(%rbx)
1484a(4): add %rbp,0x8(%rbx)
1484e(4): mov 0x58(%rbx),%rax
14852(4): sub %rbp,0x68(%rbx)
14856(4): mov %r15,0x28(%rbx)
1485a(3): sub %rbp,%rax
1485d(7): cmp $0x1,0x90(%rbx)
14864(4): mov %rax,0x58(%rbx)
14868(6): jle 0xa0(%rip)
1486e(7): cmp $0x0,0x88(%rbx)
14875(3): mov %rbx,%rdi
14878(2): jz 0x80(%rip)
1487a(5): call 0xffffcd46(%rip)
1487f(2): test %eax,%eax
14881(2): jnz 0xc(%rip)
14883(8): mov $0x0,0x48(%rbx)
1488b(2): xor %eax,%eax
1488d(5): mov 0x38(%rsp),%rcx
14892(9): xor $0x28,%rcx
1489b(6): jnz 0x64f(%rip)
148a1(4): add $0x48,%rsp
148a5(1): pop %rbx
148a6(1): pop %rbp
148a7(2): pop %r12
148a9(2): pop %r13
148ab(2): pop %r14
148ad(2): pop %r15
148af(1): ret near (%rsp)
148b0(3): mov (%rbx),%rax
148b3(4): mov %rax,0x8(%rbx)
148b7(5): jmp 0xffffff2f(%rip)
148bc(4): nop 0x0(%rax)
148c0(8): mov $0x0,0x20(%rdi)
148c8(5): jmp 0xfffffecb(%rip)
148cd(3): nop (%rax)
148d0(4): mov 0x10(%rbx),%rdi
148d4(8): lea 0x0(,%r8,4),%rdx
148dc(4): lea 0x0(%rdi,%rbp,4),%rsi
148e0(5): call 0xfffedfb0(%rip)
148e5(4): mov 0x30(%rbx),%r8
148e9(3): sub %rbp,%r8
148ec(5): jmp 0xffffff49(%rip)
148f1(7): nop 0x0(%rax)
148f8(5): call 0xffffcaf8(%rip)
148fd(5): jmp 0xffffff86(%rip)
14902(6): nop 0x0(%rax,%rax,1)
14908(7): cmp $0x0,0x8b(%rbx)
1490f(6): jnz 0x3b1(%rip)
14915(4): mov %rax,0x30(%rbx)
14919(5): jmp 0xffffff6a(%rip)
1491e(2): nop 
14920(2): test %dl,%dl
14922(6): jnz 0x4ab(%rip)
14928(7): movsxd 0x90(%rbx),%rdx
1492f(8): mov $0x0,0x30(%rbx)
14937(4): mov 0x28(%rbx),%r11
1493b(3): cmp $0x1,%edx
1493e(6): jle 0x3ea(%rip)
14944(7): cmp $0x0,0x89(%rbx)
1494b(6): jnz 0x2bd(%rip)
14951(4): lea 0x0(%r11,%rax,1),%r14
14955(3): cmp %r14,%r15
14958(6): jle 0x447(%rip)
1495e(4): lea 0x20(%rbx),%rax
14962(5): lea 0x24(%rsp),%r13
14967(5): mov %rax,0x10(%rsp)
1496c(4): nop 0x0(%rax)
14970(4): mov 0x50(%rbx),%r12
14974(3): mov (%rbx),%rsi
14977(3): mov %r13,%rdi
1497a(4): mov 0x20(%rbx),%rax
1497e(5): mov 0x10(%rsp),%rcx
14983(5): mov %r10d,0xc(%rsp)
14988(4): mov %r8,(%rsp)
1498c(3): sub %r14,%r12
1498f(3): add %r14,%rsi
14992(3): mov %r12,%rdx
14995(5): mov %rax,0x18(%rsp)
1499a(5): call 0xffffb846(%rip)
1499f(4): lea 0xffffffff(%rax),%rcx
149a3(4): mov 0x24(%rsp),%edx
149a7(4): mov (%rsp),%r8
149ab(5): mov 0xc(%rsp),%r10d
149b0(4): cmp $0xfffffffc,%rcx
149b4(6): jnbe 0x441(%rip)
149ba(3): add %rax,%r14
149bd(3): cmp %r14,%r15
149c0(2): jnle 0xffffffb0(%rip)
149c2(3): sub %r15,%r14
149c5(3): cmp $0xff,%edx
149c8(3): mov %r14,%r12
149cb(4): mov %r14,0x30(%rbx)
149cf(6): jz 0x3da(%rip)
149d5(7): cmp $0x0,0x8e(%rbx)
149dc(6): jnz 0x46d(%rip)
149e2(2): xor %eax,%eax
149e4(3): cmp $0xa,%edx
149e7(2): jnz 0x10(%rip)
149e9(2): xor %eax,%eax
149eb(7): cmp $0x0,0x8d(%rbx)
149f2(3): setnz %al
149f5(2): add %eax,%eax
149f7(3): mov %eax,0x70(%rbx)
149fa(4): cmp $0x0,%r12
149fe(6): jnz 0x41c(%rip)
14a04(7): movzx 0x8b(%rbx),%eax
14a0b(4): mov %r12,0x38(%rbx)
14a0f(5): jmp 0x1bd(%rip)
14a14(4): nop 0x0(%rax)
14a18(4): mov 0x18(%rbx),%r14
14a1c(3): mov %r8,%rcx
14a1f(2): xor %esi,%esi
14a21(2): jmp 0x12(%rip)
14a23(5): nop 0x0(%rax,%rax,1)
14a28(2): jnl 0x3b(%rip)
14a2a(4): lea 0x1(%rax),%rsi
14a2e(3): cmp %rcx,%rsi
14a31(2): jnl 0x27(%rip)
14a33(4): lea 0x0(%rsi,%rcx,1),%rdx
14a37(3): mov %rdx,%rax
14a3a(4): shr $0x3f,%rax
14a3e(3): add %rdx,%rax
14a41(3): sar $0x1,%rax
14a44(4): mov 0x0(%r14,%rax,8),%rdx
14a48(3): mov %rax,%r12
14a4b(3): cmp %rbp,%rdx
14a4e(2): jle 0xffffffda(%rip)
14a50(3): mov %rax,%rcx
14a53(2): jmp 0xffffffdb(%rip)
14a55(3): nop (%rax)
14a58(4): lea 0x1(%rax),%r12
14a5c(3): cmp %rbp,%rdx
14a5f(4): cmovnl %rax,%r12
14a63(5): lea 0xffffffff(%r12),%r13
14a68(3): mov %r10d,%edx
14a6b(3): mov %rbx,%rdi
14a6e(4): mov %r8,(%rsp)
14a72(3): mov %r13,%rsi
14a75(5): call 0xfffffa0b(%rip)
14a7a(3): cmp %r12,%rbp
14a7d(3): mov %eax,0x70(%rbx)
14a80(4): mov (%rsp),%r8
14a84(6): jnz 0x84(%rip)
14a8a(3): cmp %r8,%rbp
14a8d(2): jnl 0x7b(%rip)
14a8f(4): cmp %rbp,0x0(%r14,%r12,8)
14a93(2): jnz 0x75(%rip)
14a95(4): mov 0x10(%rbx),%rdi
14a99(3): sub %rbp,%r8
14a9c(8): lea 0x0(,%r8,4),%rdx
14aa4(4): lea 0x0(%rdi,%rbp,4),%rsi
14aa8(5): call 0xfffedde8(%rip)
14aad(4): mov 0x8(%rbx),%rdi
14ab1(4): mov 0x30(%rbx),%rdx
14ab5(4): lea 0x0(%rdi,%rbp,1),%rsi
14ab9(3): sub %rbp,%rdx
14abc(5): call 0xfffeddd4(%rip)
14ac1(4): mov 0x30(%rbx),%rax
14ac5(4): sub %rbp,0x38(%rbx)
14ac9(3): sub %rbp,%rax
14acc(3): test %rax,%rax
14acf(4): mov %rax,0x30(%rbx)
14ad3(2): jle 0x25(%rip)
14ad5(4): mov 0x18(%rbx),%rcx
14ad9(2): xor %eax,%eax
14adb(4): lea 0x0(%rcx,%rbp,8),%rsi
14adf(1): nop 
14ae0(4): mov 0x0(%rsi,%rax,8),%rdx
14ae4(3): sub %rbp,%rdx
14ae7(4): mov %rdx,0x0(%rcx,%rax,8)
14aeb(4): add $0x1,%rax
14aef(4): cmp %rax,0x30(%rbx)
14af3(2): jnle 0xffffffed(%rip)
14af5(3): nop (%rax)
14af8(7): movzx 0x8b(%rbx),%eax
14aff(5): jmp 0xcd(%rip)
14b04(4): nop 0x0(%rax)
14b08(4): mov 0x50(%rbx),%rax
14b0c(7): mov $0x0,0x8c(%rbx)
14b13(3): add %rbp,%rax
14b16(3): sub %r15,%rax
14b19(4): mov %rax,0x58(%rbx)
14b1d(4): mov 0x60(%rbx),%rax
14b21(3): add %rbp,%rax
14b24(3): sub %r15,%rax
14b27(3): test %r12,%r12
14b2a(4): mov %rax,0x68(%rbx)
14b2e(2): jle 0x25(%rip)
14b30(5): cmp %rbp,0xfffffff8(%r14,%r12,8)
14b35(2): jz 0x16(%rip)
14b37(2): jmp 0x1c(%rip)
14b39(7): nop 0x0(%rax)
14b40(5): cmp %rbp,0xfffffff8(%r14,%r13,8)
14b45(2): jnz 0xe(%rip)
14b47(4): sub $0x1,%r13
14b4b(3): test %r13,%r13
14b4e(3): mov %r13,%r12
14b51(2): jnz 0xffffffef(%rip)
14b53(3): cmp %r8,%r12
14b56(6): jnl 0x232(%rip)
14b5c(4): mov 0x10(%rbx),%rax
14b60(2): jmp 0x15(%rip)
14b62(6): nop 0x0(%rax,%rax,1)
14b68(4): add $0x1,%r12
14b6c(3): cmp %r8,%r12
14b6f(6): jz 0x221(%rip)
14b75(5): cmp $0xff,0x0(%rax,%r12,4)
14b7a(2): jz 0xffffffee(%rip)
14b7c(4): mov 0x0(%r14,%r12,8),%rdx
14b80(3): sub %rbp,%rdx
14b83(4): cmp $0x0,%rdx
14b87(4): mov %rdx,0x30(%rbx)
14b8b(2): jz 0x36(%rip)
14b8d(2): jle 0x22(%rip)
14b8f(4): mov 0x10(%rbx),%rax
14b93(4): lea 0x0(%rax,%rdx,4),%rcx
14b97(9): nop 0x0(%rax,%rax,1)
14ba0(6): mov $0xffffffff,(%rax)
14ba6(4): add $0x4,%rax
14baa(3): cmp %rax,%rcx
14bad(2): jnz 0xfffffff3(%rip)
14baf(4): mov 0x8(%rbx),%rdi
14bb3(5): mov $0xff,%esi
14bb8(5): call 0xfffeda68(%rip)
14bbd(4): mov 0x30(%rbx),%rdx
14bc1(7): movzx 0x8b(%rbx),%eax
14bc8(4): mov %rdx,0x38(%rbx)
14bcc(2): test %al,%al
14bce(6): jz 0xfffffc7c(%rip)
14bd4(5): jmp 0xfffffc7a(%rip)
14bd9(7): nop 0x0(%rax)
14be0(4): mov 0x8(%rbx),%rdi
14be4(3): mov %r8,%rdx
14be7(4): lea 0x0(%rdi,%rbp,1),%rsi
14beb(5): call 0xfffedca5(%rip)
14bf0(7): movzx 0x8b(%rbx),%eax
14bf7(4): sub %rbp,0x30(%rbx)
14bfb(4): sub %rbp,0x38(%rbx)
14bff(2): jmp 0xffffffcd(%rip)
14c01(7): nop 0x0(%rax)
14c08(3): mov (%rbx),%rcx
14c0b(3): mov %rbp,%rdi
14c0e(3): sub %rdx,%rdi
14c11(3): mov %rdi,%rdx
14c14(4): lea 0x0(%rcx,%r11,1),%r12
14c18(3): add %r12,%rdx
14c1b(5): lea 0xffffffff(%r12,%rbp,1),%rsi
14c20(3): cmp %rdx,%rcx
14c23(4): cmovnae %rdx,%rcx
14c27(3): cmp %rsi,%rcx
14c2a(2): jbe 0x1b(%rip)
14c2c(5): jmp 0xfffffd25(%rip)
14c31(7): nop 0x0(%rax)
14c38(4): sub $0x1,%rsi
14c3c(3): cmp %rsi,%rcx
14c3f(6): jnbe 0xfffffd12(%rip)
14c45(3): movzx (%rsi),%edx
14c48(3): and $0xc0,%edx
14c4b(3): cmp $0x80,%dl
14c4e(2): jz 0xffffffea(%rip)
14c50(4): mov 0x58(%rbx),%rdx
14c54(4): mov 0x78(%rbx),%rcx
14c58(3): mov %rsi,%r14
14c5b(3): add %r12,%rdx
14c5e(3): sub %rsi,%rdx
14c61(3): test %rcx,%rcx
14c64(6): jnz 0x24e(%rip)
14c6a(5): lea 0x24(%rsp),%r13
14c6f(3): add %rbp,%r12
14c72(5): lea 0x28(%rsp),%rcx
14c77(3): sub %r14,%r12
14c7a(5): mov %r10d,0xc(%rsp)
14c7f(4): mov %r8,(%rsp)
14c83(3): mov %r13,%rdi
14c86(9): mov $0x0,0x28(%rsp)
14c8f(5): call 0xffffb551(%rip)
14c94(3): cmp %rax,%r12
14c97(4): mov (%rsp),%r8
14c9b(5): mov 0xc(%rsp),%r10d
14ca0(2): jnbe 0xc(%rip)
14ca2(4): cmp $0xfffffffd,%rax
14ca6(6): jbe 0x1cb(%rip)
14cac(4): mov 0x28(%rbx),%r11
14cb0(4): mov 0x38(%rbx),%rax
14cb4(5): jmp 0xfffffc9d(%rip)
14cb9(7): nop 0x0(%rax)
14cc0(7): cmp $0x0,0x88(%rbx)
14cc7(6): jnz 0xf9(%rip)
14ccd(4): mov 0x78(%rbx),%rcx
14cd1(3): test %rcx,%rcx
14cd4(6): jz 0xfffffbaf(%rip)
14cda(4): cmp %rax,0x40(%rbx)
14cde(4): mov 0x30(%rbx),%rdx
14ce2(5): cmovng 0x40(%rbx),%rax
14ce7(3): cmp %rdx,%rax
14cea(2): jnle 0xe(%rip)
14cec(2): jmp 0x2c(%rip)
14cee(2): nop 
14cf0(4): mov 0x28(%rbx),%r15
14cf4(4): mov 0x78(%rbx),%rcx
14cf8(3): mov (%rbx),%rsi
14cfb(3): add %rdx,%rsi
14cfe(5): movzx 0x0(%rsi,%r15,1),%esi
14d03(4): movzx 0x0(%rcx,%rsi,1),%esi
14d07(4): mov 0x8(%rbx),%rcx
14d0b(4): mov %sil,0x0(%rcx,%rdx,1)
14d0f(4): add $0x1,%rdx
14d13(3): cmp %rdx,%rax
14d16(2): jnz 0xffffffda(%rip)
14d18(4): mov %rdx,0x30(%rbx)
14d1c(4): mov %rdx,0x38(%rbx)
14d20(5): jmp 0xfffffb63(%rip)
14d25(3): nop (%rax)
14d28(3): mov (%rbx),%rax
14d2b(4): mov 0x78(%rbx),%rdx
14d2f(3): add %rbp,%rax
14d32(3): test %rdx,%rdx
14d35(6): movzx 0xffffffff(%r11,%rax,1),%eax
14d3b(8): mov $0x0,0x38(%rbx)
14d43(2): jz 0x6(%rip)
14d45(4): movzx 0x0(%rdx,%rax,1),%eax
14d49(7): mov 0x80(%rbx),%rcx
14d50(3): movzx %al,%edx
14d53(4): sar $0x6,%rdx
14d57(4): mov 0x0(%rcx,%rdx,8),%rcx
14d5b(5): mov $0x1,%edx
14d60(4): bt %rax,%rcx
14d64(2): jb 0x1c(%rip)
14d66(2): xor %edx,%edx
14d68(2): cmp $0xa,%al
14d6a(2): jnz 0x16(%rip)
14d6c(2): xor %edx,%edx
14d6e(7): cmp $0x0,0x8d(%rbx)
14d75(3): setnz %dl
14d78(2): add %edx,%edx
14d7a(6): nop 0x0(%rax,%rax,1)
14d80(3): mov %edx,0x70(%rbx)
14d83(5): jmp 0xfffffd75(%rip)
14d88(6): jnz 0xfffffdf4(%rip)
14d8e(2): nop 
14d90(8): mov $0x0,0x30(%rbx)
14d98(2): xor %edx,%edx
14d9a(5): jmp 0xfffffe27(%rip)
14d9f(3): sub %r15,%r14
14da2(3): mov %r14,%r12
14da5(4): mov %r14,0x30(%rbx)
14da9(4): lea 0xffffffff(%r8),%rsi
14dad(3): mov %r10d,%edx
14db0(3): mov %rbx,%rdi
14db3(5): call 0xfffff6cd(%rip)
14db8(3): mov %eax,0x70(%rbx)
14dbb(5): jmp 0xfffffc3f(%rip)
14dc0(3): mov %rbx,%rdi
14dc3(5): call 0xffffc5bd(%rip)
14dc8(5): jmp 0xfffffabb(%rip)
14dcd(4): mov 0x50(%rbx),%rdx
14dd1(7): mov $0x0,0x8c(%rbx)
14dd8(3): add %rbp,%rdx
14ddb(3): sub %r15,%rdx
14dde(4): mov %rdx,0x58(%rbx)
14de2(4): mov 0x60(%rbx),%rdx
14de6(3): add %rbp,%rdx
14de9(3): sub %r15,%rdx
14dec(4): mov %rdx,0x68(%rbx)
14df0(5): jmp 0xfffffb38(%rip)
14df5(3): test %rax,%rax
14df8(2): jz 0x75(%rip)
14dfa(3): test %r12,%r12
14dfd(2): jz 0x70(%rip)
14dff(3): mov (%rbx),%rax
14e02(5): movzx 0x0(%rax,%r14,1),%edx
14e07(5): mov 0x18(%rsp),%rax
14e0c(4): mov %rax,0x20(%rbx)
14e10(5): mov $0x1,%eax
14e15(5): jmp 0xfffffba5(%rip)
14e1a(2): jle 0x1d(%rip)
14e1c(4): mov 0x10(%rbx),%rax
14e20(4): lea 0x0(%rax,%r12,4),%rdx
14e24(4): nop 0x0(%rax)
14e28(6): mov $0xffffffff,(%rax)
14e2e(4): add $0x4,%rax
14e32(3): cmp %rax,%rdx
14e35(2): jnz 0xfffffff3(%rip)
14e37(7): cmp $0x0,0x8b(%rbx)
14e3e(2): jnz 0x5a(%rip)
14e40(4): mov %r12,0x38(%rbx)
14e44(5): jmp 0xfffffa06(%rip)
14e49(2): mov %edx,%edi
14e4b(3): mov %edx,(%rsp)
14e4e(5): call 0xfffed922(%rip)
14e53(2): test %eax,%eax
14e55(2): jnz 0xe(%rip)
14e57(3): mov (%rsp),%edx
14e5a(3): cmp $0x5f,%edx
14e5d(6): jnz 0xfffffb85(%rip)
14e63(5): mov $0x1,%eax
14e68(5): jmp 0xfffffb8f(%rip)
14e6d(2): xor %edx,%edx
14e6f(2): jmp 0xffffff98(%rip)
14e71(4): mov 0x24(%rsp),%edx
14e75(3): sub %r12,%rax
14e78(8): mov $0x0,0x20(%rbx)
14e80(3): mov %rax,%r12
14e83(4): mov %rax,0x30(%rbx)
14e87(3): cmp $0xff,%edx
14e8a(6): jnz 0xfffffb4b(%rip)
14e90(5): jmp 0xfffffe1c(%rip)
14e95(3): nop (%rax)
14e98(4): mov 0x8(%rbx),%rdi
14e9c(3): mov %r12,%rdx
14e9f(5): mov $0xff,%esi
14ea4(5): call 0xfffed77c(%rip)
14ea9(4): mov 0x30(%rbx),%r12
14ead(5): jmp 0xfffffb57(%rip)
14eb2(4): cmp $0x6,%rdx
14eb6(5): mov $0x6,%edi
14ebb(5): lea 0x32(%rsp),%r11
14ec0(4): cmovng %rdx,%rdi
14ec4(3): sub $0x1,%edi
14ec7(2): test %edi,%edi
14ec9(3): movsxd %edi,%rax
14ecc(2): js 0x16(%rip)
14ece(4): movzx 0x0(%rsi,%rax,1),%edi
14ed2(4): movzx 0x0(%rcx,%rdi,1),%edi
14ed6(4): mov %dil,0x0(%r11,%rax,1)
14eda(4): sub $0x1,%rax
14ede(2): test %eax,%eax
14ee0(2): jns 0xffffffee(%rip)
14ee2(3): mov %r11,%rsi
14ee5(5): jmp 0xfffffd85(%rip)
14eea(5): call 0xfffed676(%rip)

"sub_epsilon_src_nodes" :
14ef0(2): push %r15
14ef2(2): push %r14
14ef4(3): mov %rdx,%r14
14ef7(2): push %r13
14ef9(2): push %r12
14efb(4): lea 0x0(%rsi,%rsi,2),%rdx
14eff(1): push %rbp
14f00(1): push %rbx
14f01(4): pxor %xmm0,%xmm0
14f05(4): sub $0x48,%rsp
14f09(9): mov $0x28,%rax
14f12(5): mov %rax,0x38(%rsp)
14f17(2): xor %eax,%eax
14f19(4): mov 0x38(%rdi),%rax
14f1d(9): mov $0x0,0x30(%rsp)
14f26(5): movaps %xmm0,0x20(%rsp)
14f2b(5): mov %rcx,0x10(%rsp)
14f30(4): lea 0x0(%rax,%rdx,8),%rbp
14f34(4): mov 0x8(%rbp),%r10
14f38(3): test %r10,%r10
14f3b(6): jle 0x1e7(%rip)
14f41(5): lea 0x20(%rsp),%rax
14f46(3): mov %rdi,%r12
14f49(3): mov %rsi,%r13
14f4c(2): xor %ebx,%ebx
14f4e(5): mov %rax,0x18(%rsp)
14f53(2): jmp 0x5a(%rip)
14f55(3): nop (%rax)
14f58(3): test %rax,%rax
14f5b(6): jnz 0xdd(%rip)
14f61(4): mov 0x8(%r14),%rdi
14f65(4): lea 0x10(%r14),%rsi
14f69(3): mov %r8,%rdx
14f6c(5): call 0xffffd734(%rip)
14f71(3): test %rax,%rax
14f74(6): jz 0xc4(%rip)
14f7a(5): mov 0x38(%r12),%rdx
14f7f(5): mov 0x10(%rsp),%rsi
14f84(5): mov 0x18(%rsp),%rdi
14f89(3): add %r9,%rdx
14f8c(5): call 0xffffe224(%rip)
14f91(2): test %eax,%eax
14f93(6): jnz 0x17d(%rip)
14f99(4): mov 0x8(%rbp),%r10
14f9d(3): nop (%rax)
14fa0(4): add $0x1,%rbx
14fa4(3): cmp %rbx,%r10
14fa7(6): jle 0xd9(%rip)
14fad(4): mov 0x10(%rbp),%rax
14fb1(4): mov 0x0(%rax,%rbx,8),%rax
14fb5(3): cmp %rax,%r13
14fb8(2): jz 0xffffffe8(%rip)
14fba(3): mov %rax,%rdx
14fbd(4): shl/sal $0x4,%rdx
14fc1(4): add (%r12),%rdx
14fc5(4): test $0x8,0x8(%rdx)
14fc9(2): jz 0xffffffd7(%rip)
14fcb(4): lea 0x0(%rax,%rax,2),%r9
14fcf(5): mov 0x28(%r12),%rcx
14fd4(4): lea 0x10(%rbp),%r11
14fd8(3): mov %r10,%rdi
14fdb(4): shl/sal $0x3,%r9
14fdf(3): mov %r11,%rsi
14fe2(3): add %r9,%rcx
14fe5(4): mov 0x10(%rcx),%r15
14fe9(5): mov %rcx,0x8(%rsp)
14fee(3): mov (%r15),%r8
14ff1(3): mov %r8,%rdx
14ff4(4): mov %r8,(%rsp)
14ff8(5): call 0xffffd6a8(%rip)
14ffd(5): mov 0x8(%rsp),%rcx
15002(4): mov (%rsp),%r8
15006(5): cmp $0x1,0x8(%rcx)
1500b(6): jnle 0xffffff4d(%rip)
15011(3): test %rax,%rax
15014(2): jnz 0xffffff8c(%rip)
15016(4): mov 0x8(%r14),%rdi
1501a(4): lea 0x10(%r14),%rsi
1501e(3): mov %r8,%rdx
15021(5): call 0xffffd67f(%rip)
15026(3): test %rax,%rax
15029(6): jnz 0xffffff51(%rip)
1502f(5): jmp 0xffffff71(%rip)
15034(4): nop 0x0(%rax)
15038(4): mov 0x8(%r15),%r15
1503c(3): test %r15,%r15
1503f(6): jle 0xffffff61(%rip)
15045(3): mov %r15,%rdx
15048(3): mov %r11,%rsi
1504b(3): mov %r10,%rdi
1504e(5): call 0xffffd652(%rip)
15053(3): test %rax,%rax
15056(6): jnz 0xffffff4a(%rip)
1505c(4): mov 0x8(%r14),%rdi
15060(4): lea 0x10(%r14),%rsi
15064(5): call 0xffffd63c(%rip)
15069(3): test %rax,%rax
1506c(6): jz 0xffffff34(%rip)
15072(5): jmp 0xffffff08(%rip)
15077(9): nop 0x0(%rax,%rax,1)
15080(3): xor %r9d,%r9d
15083(3): test %r10,%r10
15086(5): lea 0x30(%rsp),%r11
1508b(2): jle 0x51(%rip)
1508d(3): nop (%rax)
15090(4): mov 0x10(%rbp),%rax
15094(5): mov 0x28(%rsp),%rdi
15099(3): mov %r11,%rsi
1509c(4): mov 0x0(%rax,%r9,8),%r10
150a0(3): mov %r10,%rdx
150a3(5): call 0xffffd5fd(%rip)
150a8(3): test %rax,%rax
150ab(2): jnz 0x27(%rip)
150ad(4): lea 0x10(%r14),%rbx
150b1(4): mov 0x8(%r14),%rdi
150b5(3): mov %rbx,%rsi
150b8(5): call 0xffffd5e8(%rip)
150bd(4): sub $0x1,%rax
150c1(3): mov %rax,%rdx
150c4(2): js 0xe(%rip)
150c6(4): lea 0x8(%r14),%rdi
150ca(3): mov %rbx,%rsi
150cd(5): call 0xffffd753(%rip)
150d2(4): add $0x1,%r9
150d6(4): cmp %r9,0x8(%rbp)
150da(2): jnle 0xffffffb6(%rip)
150dc(5): mov 0x30(%rsp),%rdi
150e1(5): call 0xfffed92f(%rip)
150e6(2): xor %eax,%eax
150e8(5): mov 0x38(%rsp),%rsi
150ed(9): xor $0x28,%rsi
150f6(2): jnz 0x30(%rip)
150f8(4): add $0x48,%rsp
150fc(1): pop %rbx
150fd(1): pop %rbp
150fe(2): pop %r12
15100(2): pop %r13
15102(2): pop %r14
15104(2): pop %r15
15106(1): ret near (%rsp)
15107(9): nop 0x0(%rax,%rax,1)
15110(5): mov 0x30(%rsp),%rdi
15115(3): mov %eax,(%rsp)
15118(5): call 0xfffed8f8(%rip)
1511d(3): mov (%rsp),%eax
15120(2): jmp 0xffffffc8(%rip)
15122(2): xor %edi,%edi
15124(2): jmp 0xffffffbd(%rip)
15126(5): call 0xfffed43a(%rip)

"build_trtable" :
15130(2): push %r15
15132(2): push %r14
15134(3): mov %rdi,%r15
15137(2): push %r13
15139(2): push %r12
1513b(5): mov $0x3800,%edi
15140(1): push %rbp
15141(1): push %rbx
15142(7): sub $0x108,%rsp
15149(9): mov $0x28,%rax
15152(8): mov %rax,0xf8(%rsp)
1515a(2): xor %eax,%eax
1515c(5): mov %rsi,0x8(%rsp)
15161(5): call 0xfffed61f(%rip)
15166(3): test %rax,%rax
15169(5): mov %rax,0x18(%rsp)
1516e(6): jz 0x3d2(%rip)
15174(5): mov 0x18(%rsp),%rax
15179(4): pxor %xmm0,%xmm0
1517d(7): lea 0x1800(%rax),%rbx
15184(5): mov 0x8(%rsp),%rax
15189(8): movaps %xmm0,0x90(%rsp)
15191(5): mov %rbx,0x40(%rsp)
15196(8): movaps %xmm0,0xa0(%rsp)
1519e(5): cmp $0x0,0x10(%rax)
151a3(8): mov $0x0,0x58(%rax)
151ab(8): mov $0x0,0x60(%rax)
151b3(6): jle 0xa77(%rip)
151b9(5): mov %r15,0x30(%rsp)
151be(2): xor %ebp,%ebp
151c0(9): mov $0x0,0x10(%rsp)
151c9(3): mov %rbx,%r15
151cc(5): mov 0x10(%rsp),%rbx
151d1(8): lea 0x0(,%rbx,8),%rax
151d9(5): mov %rax,0x20(%rsp)
151de(5): mov 0x8(%rsp),%rax
151e3(4): mov 0x18(%rax),%rax
151e7(4): mov 0x0(%rax,%rbx,8),%r13
151eb(5): mov 0x30(%rsp),%rax
151f0(4): shl/sal $0x4,%r13
151f4(3): add (%rax),%r13
151f7(5): movzx 0x8(%r13),%r14d
151fc(4): mov 0x8(%r13),%eax
15200(3): shr $0x8,%eax
15203(4): and $0x3ff,%ax
15207(4): cmp $0x1,%r14d
1520b(6): jz 0x365(%rip)
15211(4): cmp $0x3,%r14d
15215(6): jz 0x7cb(%rip)
1521b(4): cmp $0x5,%r14d
1521f(6): jz 0x681(%rip)
15225(4): cmp $0x7,%r14d
15229(6): jz 0x7e0(%rip)
1522f(5): mov 0x8(%rsp),%rbx
15234(6): add $0x1,0x10(%rsp)
1523a(5): mov 0x10(%rsp),%rax
1523f(4): cmp 0x10(%rbx),%rax
15243(2): jl 0xffffff89(%rip)
15245(3): test %rbp,%rbp
15248(5): mov 0x30(%rsp),%r15
1524d(6): jle 0xa5c(%rip)
15253(4): lea 0x1(%rbp),%rbx
15257(9): mov $0x0,0x78(%rsp)
15260(5): mov %rbx,0x70(%rsp)
15265(4): shl/sal $0x3,%rbx
15269(3): mov %rbx,%rdi
1526c(5): call 0xfffed514(%rip)
15271(3): test %rax,%rax
15274(3): mov %rax,%r12
15277(8): mov %rax,0x80(%rsp)
1527f(6): jz 0x800(%rip)
15285(a): mov $0x768614336404564053,%rax
1528f(8): mov $0x0,0x6c(%rsp)
15297(3): cmp %rax,%rbp
1529a(6): jnle 0x7e5(%rip)
152a0(5): lea 0x0(%rbp,%rbp,2),%rax
152a5(4): shl/sal $0x3,%rax
152a9(3): mov %rax,%rdi
152ac(5): mov %rax,0x58(%rsp)
152b1(5): call 0xfffed4cf(%rip)
152b6(3): test %rax,%rax
152b9(5): mov %rax,0x10(%rsp)
152be(6): jz 0x7c1(%rip)
152c4(5): mov 0x10(%rsp),%rax
152c9(4): sub $0x8,%rbx
152cd(5): mov 0x40(%rsp),%r12
152d2(4): pxor %xmm0,%xmm0
152d6(5): lea 0x70(%rsp),%r14
152db(5): mov %rbp,0x20(%rsp)
152e0(5): mov $0x0,0x4f(%rsp)
152e5(3): mov %r15,%rbp
152e8(3): add %rbx,%rax
152eb(5): mov %r12,0x50(%rsp)
152f0(3): add %rax,%rbx
152f3(5): mov %rax,0x30(%rsp)
152f8(5): mov 0x18(%rsp),%rax
152fd(8): movaps %xmm0,0xd0(%rsp)
15305(5): mov %rbx,0x38(%rsp)
1530a(2): xor %ebx,%ebx
1530c(4): lea 0x8(%rax),%r13
15310(5): lea 0x6c(%rsp),%rax
15315(8): movaps %xmm0,0xe0(%rsp)
1531d(5): mov %rax,0x28(%rsp)
15322(9): mov $0x0,0x78(%rsp)
1532b(5): cmp $0x0,0x0(%r13)
15330(2): jle 0x48(%rip)
15332(3): xor %r15d,%r15d
15335(3): nop (%rax)
15338(4): mov 0x8(%r13),%rax
1533c(4): mov 0x0(%rax,%r15,8),%rdx
15340(4): mov 0x18(%rbp),%rax
15344(4): mov 0x0(%rax,%rdx,8),%rax
15348(4): cmp $0xffffffff,%rax
1534c(2): jz 0x22(%rip)
1534e(4): lea 0x0(%rax,%rax,2),%rdx
15352(4): mov 0x30(%rbp),%rax
15356(3): mov %r14,%rdi
15359(4): lea 0x0(%rax,%rdx,8),%rsi
1535d(5): call 0xffffd863(%rip)
15362(2): test %eax,%eax
15364(4): mov %eax,0x6c(%rsp)
15368(6): jnz 0x700(%rip)
1536e(4): add $0x1,%r15
15372(4): cmp %r15,0x0(%r13)
15376(2): jnle 0xffffffc2(%rip)
15378(5): mov 0x28(%rsp),%rdi
1537d(2): xor %ecx,%ecx
1537f(3): mov %rbp,%rsi
15382(3): mov %r14,%rdx
15385(5): call 0xffffe66b(%rip)
1538a(5): mov 0x10(%rsp),%rsi
1538f(3): test %rax,%rax
15392(4): mov %rax,0x0(%rsi,%rbx,8)
15396(6): jz 0x7b2(%rip)
1539c(4): cmp $0x0,0x68(%rax)
153a0(6): js 0x720(%rip)
153a6(5): mov 0x30(%rsp),%rdi
153ab(5): mov 0x38(%rsp),%rsi
153b0(4): mov %rax,0x0(%rdi,%rbx,8)
153b4(5): mov 0x10(%rsp),%rax
153b9(4): mov 0x0(%rax,%rbx,8),%rax
153bd(4): mov %rax,0x0(%rsi,%rbx,8)
153c1(8): lea 0xd0(%rsp),%rdx
153c9(2): xor %eax,%eax
153cb(4): mov 0x0(%rdx,%rax,1),%rcx
153cf(4): or 0x0(%r12,%rax,1),%rcx
153d3(4): mov %rcx,0x0(%rdx,%rax,1)
153d7(4): add $0x8,%rax
153db(4): cmp $0x20,%rax
153df(2): jnz 0xffffffec(%rip)
153e1(4): add $0x1,%rbx
153e5(4): add $0x18,%r13
153e9(4): add $0x20,%r12
153ed(5): cmp 0x20(%rsp),%rbx
153f2(6): jnz 0xffffff30(%rip)
153f8(5): cmp $0x0,0x4f(%rsp)
153fd(3): mov %rbp,%r15
15400(5): mov 0x20(%rsp),%rbp
15405(5): mov %rdx,0x20(%rsp)
1540a(6): jnz 0x74f(%rip)
15410(5): mov $0x100,%esi
15415(5): mov $0x8,%edi
1541a(5): call 0xfffed296(%rip)
1541f(3): mov %rax,%r11
15422(5): mov 0x8(%rsp),%rax
15427(3): test %r11,%r11
1542a(4): mov %r11,0x58(%rax)
1542e(6): jz 0x63f(%rip)
15434(5): mov 0x40(%rsp),%rbx
15439(5): mov 0x10(%rsp),%r12
1543e(3): xor %r9d,%r9d
15441(5): mov 0x30(%rsp),%r13
15446(5): mov 0x20(%rsp),%rdx
1544b(4): add $0x20,%rbx
1544f(4): mov 0x0(%rdx,%r9,1),%rax
15453(3): test %rax,%rax
15456(2): jz 0x2e(%rip)
15458(3): mov %r9,%rsi
1545b(5): mov $0x1,%ecx
15460(4): shl/sal $0x6,%rsi
15464(3): add %r11,%rsi
15467(9): nop 0x0(%rax,%rax,1)
15470(2): test $0x1,%al
15472(6): jnz 0x766(%rip)
15478(3): add %rcx,%rcx
1547b(4): add $0x8,%rsi
1547f(3): shr $0x1,%rax
15482(2): jnz 0xffffffee(%rip)
15484(4): add $0x8,%r9
15488(4): cmp $0x20,%r9
1548c(2): jnz 0xffffffc3(%rip)
1548e(8): test $0x4,0xd1(%rsp)
15496(2): jz 0x3c(%rip)
15498(2): xor %eax,%eax
1549a(5): mov 0x50(%rsp),%rdx
1549f(2): jmp 0xf(%rip)
154a1(4): add $0x1,%rax
154a5(4): add $0x20,%rdx
154a9(3): cmp %rbp,%rax
154ac(2): jz 0x26(%rip)
154ae(7): test $0x400,(%rdx)
154b5(2): jz 0xffffffec(%rip)
154b7(5): mov 0x38(%rsp),%rbx
154bc(5): cmp $0x0,0x4f(%rsp)
154c1(4): mov 0x0(%rbx,%rax,8),%rax
154c5(4): mov %rax,0x50(%r11)
154c9(2): jz 0x9(%rip)
154cb(7): mov %rax,0x850(%r11)
154d2(5): mov 0x10(%rsp),%rdi
154d7(5): call 0xfffed539(%rip)
154dc(8): mov 0x80(%rsp),%rdi
154e4(5): call 0xfffed52c(%rip)
154e9(5): mov 0x18(%rsp),%rax
154ee(5): mov 0x58(%rsp),%rbx
154f3(4): lea 0x10(%rax),%rbp
154f7(3): add %rbp,%rbx
154fa(4): mov 0x0(%rbp),%rdi
154fe(4): add $0x18,%rbp
15502(5): call 0xfffed50e(%rip)
15507(3): cmp %rbp,%rbx
1550a(2): jnz 0xfffffff0(%rip)
1550c(5): mov 0x18(%rsp),%rdi
15511(5): call 0xfffed4ff(%rip)
15516(5): mov $0x1,%eax
1551b(2): jmp 0x27(%rip)
1551d(3): test %rbp,%rbp
15520(8): mov $0x0,0x8(%rbx)
15528(7): mov $0x0,(%rbx)
1552f(6): jnz 0x331(%rip)
15535(5): mov 0x18(%rsp),%rdi
1553a(5): call 0xfffed4d6(%rip)
1553f(1): nop 
15540(2): xor %eax,%eax
15542(8): mov 0xf8(%rsp),%rbx
1554a(9): xor $0x28,%rbx
15553(6): jnz 0x751(%rip)
15559(7): add $0x108,%rsp
15560(1): pop %rbx
15561(1): pop %rbp
15562(2): pop %r12
15564(2): pop %r13
15566(2): pop %r14
15568(2): pop %r15
1556a(1): ret near (%rsp)
1556b(5): nop 0x0(%rax,%rax,1)
15570(5): movzx 0x0(%r13),%ecx
15575(8): lea 0x90(%rsp),%r12
1557d(5): mov $0x1,%edi
15582(3): mov %rcx,%rdx
15585(3): and $0x3f,%ecx
15588(4): shr $0x3,%rdx
1558c(3): shl/sal %cl,%rdi
1558f(3): and $0x18,%edx
15592(4): or %rdi,0x0(%r12,%rdx,1)
15596(3): test %ax,%ax
15599(6): jz 0xc7(%rip)
1559f(2): test $0x20,%al
155a1(6): jnz 0x36f(%rip)
155a7(2): test $0x80,%al
155a9(6): jnz 0x29b(%rip)
155af(2): test $0x4,%al
155b1(2): jz 0x54(%rip)
155b3(4): cmp $0x1,%r14d
155b7(6): jz 0x3de(%rip)
155bd(5): mov 0x30(%rsp),%r8
155c2(8): cmp $0x1,0xb4(%r8)
155ca(6): jle 0x458(%rip)
155d0(4): mov 0x78(%r8),%rdi
155d4(2): xor %esi,%esi
155d6(2): xor %ecx,%ecx
155d8(4): mov 0x0(%rdi,%rcx,8),%rdx
155dc(3): not %rdx
155df(8): or 0xb8(%r8,%rcx,8),%rdx
155e7(4): and 0x0(%r12,%rcx,8),%rdx
155eb(4): mov %rdx,0x0(%r12,%rcx,8)
155ef(4): add $0x1,%rcx
155f3(3): or %rdx,%rsi
155f6(4): cmp $0x4,%rcx
155fa(2): jnz 0xffffffde(%rip)
155fc(3): test %rsi,%rsi
155ff(6): jz 0xfffffc30(%rip)
15605(2): test $0x8,%al
15607(2): jz 0x59(%rip)
15609(4): cmp $0x1,%r14d
1560d(6): jz 0x334(%rip)
15613(5): mov 0x30(%rsp),%rdi
15618(7): cmp $0x1,0xb4(%rdi)
1561f(6): jle 0x33f(%rip)
15625(4): mov 0x78(%rdi),%rsi
15629(2): xor %ecx,%ecx
1562b(2): xor %edx,%edx
1562d(8): mov 0xb8(%rdi,%rdx,8),%rax
15635(4): and 0x0(%rsi,%rdx,8),%rax
15639(3): not %rax
1563c(4): and 0x0(%r12,%rdx,8),%rax
15640(4): mov %rax,0x0(%r12,%rdx,8)
15644(4): add $0x1,%rdx
15648(3): or %rax,%rcx
1564b(4): cmp $0x4,%rdx
1564f(2): jnz 0xffffffde(%rip)
15651(3): test %rcx,%rcx
15654(6): jz 0xfffffbdb(%rip)
1565a(6): nop 0x0(%rax,%rax,1)
15660(2): xor %ebx,%ebx
15662(3): test %rbp,%rbp
15665(6): jle 0x166(%rip)
1566b(5): mov %r13,0x28(%rsp)
15670(3): mov %r15,%r13
15673(5): nop 0x0(%rax,%rax,1)
15678(3): mov %rbx,%r10
1567b(4): shl/sal $0x5,%r10
1567f(4): cmp $0x1,%r14d
15683(2): jnz 0x25(%rip)
15685(5): mov 0x28(%rsp),%rax
1568a(3): movzx (%rax),%edx
1568d(3): mov %rdx,%rax
15690(4): shr $0x3,%rax
15694(3): and $0x18,%eax
15697(3): add %r13,%rax
1569a(4): mov 0x0(%rax,%r10,1),%rax
1569e(4): bt %rdx,%rax
156a2(6): jnb 0x119(%rip)
156a8(5): lea 0x0(%r13,%r10,1),%rdi
156ad(8): lea 0xb0(%rsp),%rsi
156b5(2): xor %ecx,%ecx
156b7(2): xor %eax,%eax
156b9(4): mov 0x0(%r12,%rax,8),%rdx
156bd(4): and 0x0(%rdi,%rax,8),%rdx
156c1(4): mov %rdx,0x0(%rsi,%rax,8)
156c5(4): add $0x1,%rax
156c9(3): or %rdx,%rcx
156cc(4): cmp $0x4,%rax
156d0(2): jnz 0xffffffe9(%rip)
156d2(3): test %rcx,%rcx
156d5(6): jz 0xe6(%rip)
156db(8): lea 0xd0(%rsp),%r11
156e3(3): xor %r15d,%r15d
156e6(3): xor %r9d,%r9d
156e9(2): xor %ecx,%ecx
156eb(4): mov 0x0(%r12,%rcx,8),%rsi
156ef(4): mov 0x0(%rdi,%rcx,8),%rax
156f3(3): mov %rsi,%rdx
156f6(3): not %rdx
156f9(3): and %rax,%rdx
156fc(3): not %rax
156ff(3): and %rsi,%rax
15702(4): mov %rdx,0x0(%r11,%rcx,8)
15706(3): or %rdx,%r9
15709(4): mov %rax,0x0(%r12,%rcx,8)
1570d(4): add $0x1,%rcx
15711(3): or %rax,%r15
15714(4): cmp $0x4,%rcx
15718(2): jnz 0xffffffd3(%rip)
1571a(5): mov 0x18(%rsp),%rdi
1571f(4): lea 0x0(%rbx,%rbx,2),%rax
15723(3): test %r9,%r9
15726(4): lea 0x0(%rdi,%rax,8),%rdx
1572a(2): jz 0x6a(%rip)
1572c(3): mov %rbp,%rax
1572f(9): movdqa 0xd0(%rsp),%xmm0
15738(4): shl/sal $0x5,%rax
1573c(3): mov %rdx,%rsi
1573f(5): mov %rdx,0x38(%rsp)
15744(3): add %r13,%rax
15747(3): movups %xmm0,(%rax)
1574a(9): movdqa 0xe0(%rsp),%xmm0
15753(4): movups %xmm0,0x10(%rax)
15757(5): lea 0x0(%rbp,%rbp,2),%rax
1575c(4): lea 0x0(%rdi,%rax,8),%rdi
15760(9): movdqa 0xb0(%rsp),%xmm0
15769(6): movups %xmm0,0x0(%r13,%r10,1)
1576f(9): movdqa 0xc0(%rsp),%xmm0
15778(6): movups %xmm0,0x10(%r13,%r10,1)
1577e(5): call 0xffffe082(%rip)
15783(2): test %eax,%eax
15785(6): jnz 0xdb(%rip)
1578b(5): mov 0x38(%rsp),%rdx
15790(4): add $0x1,%rbp
15794(5): mov 0x8(%rsp),%rax
15799(5): mov 0x20(%rsp),%rsi
1579e(3): mov %rdx,%rdi
157a1(4): mov 0x18(%rax),%rax
157a5(4): mov 0x0(%rax,%rsi,1),%rsi
157a9(5): call 0xffffb9b7(%rip)
157ae(2): test %al,%al
157b0(6): jz 0xb0(%rip)
157b6(3): test %r15,%r15
157b9(2): jz 0xf(%rip)
157bb(4): add $0x1,%rbx
157bf(3): cmp %rbp,%rbx
157c2(6): jl 0xfffffeb6(%rip)
157c8(3): mov %r13,%r15
157cb(3): cmp %rbx,%rbp
157ce(6): jnz 0xfffffa61(%rip)
157d4(3): mov %rbp,%rax
157d7(9): movdqa 0x90(%rsp),%xmm0
157e0(4): shl/sal $0x5,%rax
157e4(5): mov 0x20(%rsp),%rbx
157e9(5): mov $0x8,%edi
157ee(3): add %r15,%rax
157f1(3): movups %xmm0,(%rax)
157f4(9): movdqa 0xa0(%rsp),%xmm0
157fd(4): movups %xmm0,0x10(%rax)
15801(5): mov 0x8(%rsp),%rax
15806(4): mov 0x18(%rax),%rax
1580a(4): mov 0x0(%rax,%rbx,1),%r13
1580e(5): mov 0x18(%rsp),%rbx
15813(5): lea 0x0(%rbp,%rbp,2),%rax
15818(4): lea 0x0(%rbx,%rax,8),%rbx
1581c(7): mov $0x1,(%rbx)
15823(8): mov $0x1,0x8(%rbx)
1582b(5): call 0xfffecf55(%rip)
15830(3): test %rax,%rax
15833(4): mov %rax,0x10(%rbx)
15837(6): jz 0xfffffce6(%rip)
1583d(3): mov %r13,(%rax)
15840(4): add $0x1,%rbp
15844(4): pxor %xmm0,%xmm0
15848(5): movaps %xmm0,(%r12)
1584d(6): movaps %xmm0,0x10(%r12)
15853(5): jmp 0xfffff9dc(%rip)
15858(8): nop 0x0(%rax,%rax,1)
15860(5): mov 0x18(%rsp),%rax
15865(4): lea 0x10(%rax),%rbx
15869(5): lea 0x0(%rbp,%rbp,2),%rax
1586e(4): lea 0x0(%rbx,%rax,8),%rbp
15872(6): nop 0x0(%rax,%rax,1)
15878(3): mov (%rbx),%rdi
1587b(4): add $0x18,%rbx
1587f(5): call 0xfffed191(%rip)
15884(3): cmp %rbx,%rbp
15887(2): jnz 0xfffffff1(%rip)
15889(5): mov 0x18(%rsp),%rdi
1588e(5): call 0xfffed182(%rip)
15893(5): jmp 0xfffffcad(%rip)
15898(8): nop 0x0(%rax,%rax,1)
158a0(5): mov 0x30(%rsp),%rsi
158a5(7): cmp $0x1,0xb4(%rsi)
158ac(6): jle 0x109(%rip)
158b2(4): mov 0x78(%rsi),%rsi
158b6(8): lea 0x90(%rsp),%r12
158be(2): xor %edx,%edx
158c0(4): mov 0x0(%r12,%rdx,1),%rcx
158c4(4): or 0x0(%rsi,%rdx,1),%rcx
158c8(4): mov %rcx,0x0(%r12,%rdx,1)
158cc(4): add $0x8,%rdx
158d0(4): cmp $0x20,%rdx
158d4(2): jnz 0xffffffec(%rip)
158d6(5): mov 0x30(%rsp),%rbx
158db(7): mov 0xd8(%rbx),%rdx
158e2(3): test $0x40,%dl
158e5(2): jnz 0xe(%rip)
158e7(c): and $0xfffffbff,0x90(%rsp)
158f3(6): and $0x80,%edx
158f9(6): jz 0xfffffc9d(%rip)
158ff(9): and $0xfffffffe,0x90(%rsp)
15908(5): jmp 0xfffffc8e(%rip)
1590d(3): nop (%rax)
15910(8): mov 0x90(%rsp),%rdx
15918(4): pxor %xmm0,%xmm0
1591c(3): and $0x4,%dh
1591f(5): movaps %xmm0,(%r12)
15924(6): movaps %xmm0,0x10(%r12)
1592a(6): jz 0xfffff905(%rip)
15930(c): mov $0x400,0x90(%rsp)
1593c(5): jmp 0xfffffc6b(%rip)
15941(5): test $0x40,0xa(%r13)
15946(6): jnz 0xfffffefe(%rip)
1594c(5): mov 0x30(%rsp),%rdi
15951(7): cmp $0x1,0xb4(%rdi)
15958(6): jnle 0xfffffccd(%rip)
1595e(5): mov 0x30(%rsp),%rsi
15963(2): xor %ecx,%ecx
15965(2): xor %edx,%edx
15967(8): mov 0xb8(%rsi,%rdx,8),%rax
1596f(3): not %rax
15972(4): and 0x0(%r12,%rdx,8),%rax
15976(4): mov %rax,0x0(%r12,%rdx,8)
1597a(4): add $0x1,%rdx
1597e(3): or %rax,%rcx
15981(4): cmp $0x4,%rdx
15985(2): jnz 0xffffffe2(%rip)
15987(3): test %rcx,%rcx
1598a(6): jnz 0xfffffcd6(%rip)
15990(5): jmp 0xfffff89f(%rip)
15995(5): test $0x40,0xa(%r13)
1599a(6): jz 0xfffffeaa(%rip)
159a0(5): mov 0x30(%rsp),%r8
159a5(8): cmp $0x1,0xb4(%r8)
159ad(6): jnle 0xfffffc23(%rip)
159b3(2): jmp 0x6f(%rip)
159b5(4): pcmpeqd %xmm0,%xmm0
159b9(8): lea 0x90(%rsp),%r12
159c1(8): movaps %xmm0,0x90(%rsp)
159c9(8): movaps %xmm0,0xa0(%rsp)
159d1(5): jmp 0xffffff05(%rip)
159d6(a): nop 0x0(%rax,%rax,1)
159e0(4): mov 0x0(%r13),%rsi
159e4(8): lea 0x90(%rsp),%r12
159ec(2): xor %edx,%edx
159ee(4): mov 0x0(%r12,%rdx,1),%rcx
159f2(4): or 0x0(%rsi,%rdx,1),%rcx
159f6(4): mov %rcx,0x0(%r12,%rdx,1)
159fa(4): add $0x8,%rdx
159fe(4): cmp $0x20,%rdx
15a02(2): jnz 0xffffffec(%rip)
15a04(5): jmp 0xfffffb92(%rip)
15a09(4): pcmpeqd %xmm0,%xmm0
15a0d(8): lea 0x90(%rsp),%r12
15a15(8): movaps %xmm0,0x90(%rsp)
15a1d(5): jmp 0xfffffeb9(%rip)
15a22(5): mov 0x30(%rsp),%rdi
15a27(2): xor %esi,%esi
15a29(2): xor %edx,%edx
15a2b(4): mov 0x0(%r12,%rdx,8),%rcx
15a2f(8): and 0xb8(%rdi,%rdx,8),%rcx
15a37(4): mov %rcx,0x0(%r12,%rdx,8)
15a3b(4): add $0x1,%rdx
15a3f(3): or %rcx,%rsi
15a42(4): cmp $0x4,%rdx
15a46(2): jnz 0xffffffe5(%rip)
15a48(3): test %rsi,%rsi
15a4b(6): jnz 0xfffffbba(%rip)
15a51(5): jmp 0xfffff7de(%rip)
15a56(4): mov 0x6c(%rsp),%edx
15a5a(2): test %edx,%edx
15a5c(6): jz 0x8b(%rip)
15a62(6): nop 0x0(%rax,%rax,1)
15a68(5): mov 0x20(%rsp),%rbp
15a6d(5): mov 0x10(%rsp),%rdi
15a72(5): call 0xfffecf9e(%rip)
15a77(8): mov 0x80(%rsp),%r12
15a7f(3): mov %r12,%rdi
15a82(5): call 0xfffecf8e(%rip)
15a87(5): mov 0x18(%rsp),%rax
15a8c(4): lea 0x10(%rax),%rbx
15a90(5): lea 0x0(%rbp,%rbp,2),%rax
15a95(4): lea 0x0(%rbx,%rax,8),%rbp
15a99(7): nop 0x0(%rax)
15aa0(3): mov (%rbx),%rdi
15aa3(4): add $0x18,%rbx
15aa7(5): call 0xfffecf69(%rip)
15aac(3): cmp %rbx,%rbp
15aaf(2): jnz 0xfffffff1(%rip)
15ab1(5): mov 0x18(%rsp),%rdi
15ab6(5): call 0xfffecf5a(%rip)
15abb(5): jmp 0xfffffa85(%rip)
15ac0(5): mov 0x28(%rsp),%rdi
15ac5(5): mov $0x1,%ecx
15aca(3): mov %r14,%rdx
15acd(3): mov %rbp,%rsi
15ad0(5): call 0xffffdf20(%rip)
15ad5(5): mov 0x30(%rsp),%rdi
15ada(3): test %rax,%rax
15add(4): mov %rax,0x0(%rdi,%rbx,8)
15ae1(6): jz 0xffffff75(%rip)
15ae7(5): mov 0x10(%rsp),%rdi
15aec(4): cmp 0x0(%rdi,%rbx,8),%rax
15af0(2): jz 0x1b(%rip)
15af2(5): movzx 0x4f(%rsp),%edi
15af7(7): cmp $0x2,0xb4(%rbp)
15afe(5): mov $0x1,%eax
15b03(3): cmovnl %eax,%edi
15b06(5): mov %dil,0x4f(%rsp)
15b0b(5): mov 0x28(%rsp),%rdi
15b10(3): mov %rbp,%rsi
15b13(5): mov $0x2,%ecx
15b18(3): mov %r14,%rdx
15b1b(5): call 0xffffded5(%rip)
15b20(5): mov 0x38(%rsp),%rsi
15b25(3): test %rax,%rax
15b28(4): mov %rax,0x0(%rsi,%rbx,8)
15b2c(6): jnz 0xfffff895(%rip)
15b32(4): mov 0x6c(%rsp),%eax
15b36(2): test %eax,%eax
15b38(6): jz 0xfffff889(%rip)
15b3e(5): jmp 0xffffff2a(%rip)
15b43(5): nop 0x0(%rax,%rax,1)
15b48(4): mov 0x6c(%rsp),%ecx
15b4c(2): test %ecx,%ecx
15b4e(6): jz 0xfffff84e(%rip)
15b54(5): jmp 0xffffff14(%rip)
15b59(5): mov $0x200,%esi
15b5e(5): mov $0x8,%edi
15b63(5): call 0xfffecb4d(%rip)
15b68(3): mov %rax,%r11
15b6b(5): mov 0x8(%rsp),%rax
15b70(3): test %r11,%r11
15b73(4): mov %r11,0x60(%rax)
15b77(6): jz 0xfffffef6(%rip)
15b7d(5): mov 0x40(%rsp),%r13
15b82(5): mov 0x10(%rsp),%r10
15b87(3): mov %r11,%r12
15b8a(5): mov 0x30(%rsp),%r14
15b8f(5): mov 0x20(%rsp),%rdx
15b94(2): xor %ebx,%ebx
15b96(4): add $0x20,%r13
15b9a(4): mov 0x0(%rdx,%rbx,1),%rax
15b9e(3): test %rax,%rax
15ba1(2): jz 0x1e(%rip)
15ba3(3): mov %r12,%rsi
15ba6(5): mov $0x1,%ecx
15bab(2): test $0x1,%al
15bad(6): jnz 0xaf(%rip)
15bb3(3): add %rcx,%rcx
15bb6(4): add $0x8,%rsi
15bba(3): shr $0x1,%rax
15bbd(2): jnz 0xffffffee(%rip)
15bbf(4): add $0x8,%rbx
15bc3(7): add $0x200,%r12
15bca(4): cmp $0x20,%rbx
15bce(2): jnz 0xffffffcc(%rip)
15bd0(5): jmp 0xfffff8be(%rip)
15bd5(3): nop (%rax)
15bd8(5): mov 0x18(%rsp),%rdi
15bdd(8): test %rcx,0x1800(%rdi,%r9,1)
15be5(2): jnz 0x72(%rip)
15be7(4): lea 0x0(%rbx,%r9,1),%rdi
15beb(3): xor %r8d,%r8d
15bee(2): nop 
15bf0(3): mov (%rdi),%r10
15bf3(4): add $0x1,%r8
15bf7(4): add $0x20,%rdi
15bfb(3): and %rcx,%r10
15bfe(3): test %r10,%r10
15c01(2): jz 0xffffffef(%rip)
15c03(4): shl/sal $0x3,%r8
15c07(8): test %rcx,0xb8(%r15,%r9,1)
15c0f(2): jz 0xf(%rip)
15c11(5): mov 0x0(%r13,%r8,1),%rdi
15c16(3): mov %rdi,(%rsi)
15c19(5): jmp 0xfffff85f(%rip)
15c1e(4): mov 0x0(%r12,%r8,1),%rdi
15c22(3): mov %rdi,(%rsi)
15c25(5): jmp 0xfffff853(%rip)
15c2a(5): mov 0x18(%rsp),%rdi
15c2f(5): call 0xfffecde1(%rip)
15c34(5): mov $0x100,%esi
15c39(5): mov $0x8,%edi
15c3e(5): call 0xfffeca72(%rip)
15c43(5): mov 0x8(%rsp),%rbx
15c48(3): test %rax,%rax
15c4b(4): mov %rax,0x58(%rbx)
15c4f(3): setnz %al
15c52(5): jmp 0xfffff8f0(%rip)
15c57(3): xor %r8d,%r8d
15c5a(2): jmp 0xffffffad(%rip)
15c5c(5): mov 0x18(%rsp),%rdi
15c61(8): test %rcx,0x1800(%rdi,%rbx,1)
15c69(2): jnz 0x37(%rip)
15c6b(5): lea 0x0(%r13,%rbx,1),%r9
15c70(3): xor %r8d,%r8d
15c73(3): mov (%r9),%r15
15c76(4): add $0x1,%r8
15c7a(4): add $0x20,%r9
15c7e(3): mov %r8,%rdi
15c81(3): and %rcx,%r15
15c84(3): test %r15,%r15
15c87(2): jz 0xffffffec(%rip)
15c89(4): mov 0x0(%r10,%rdi,8),%r8
15c8d(3): mov %r8,(%rsi)
15c90(4): mov 0x0(%r14,%rdi,8),%rdi
15c94(7): mov %rdi,0x800(%rsi)
15c9b(5): jmp 0xffffff18(%rip)
15ca0(2): xor %edi,%edi
15ca2(2): jmp 0xffffffe7(%rip)
15ca4(5): call 0xfffec8bc(%rip)
15ca9(5): mov 0x18(%rsp),%rdi
15cae(5): call 0xfffecd62(%rip)
15cb3(3): test %rbp,%rbp
15cb6(6): jnz 0xfffff88a(%rip)
15cbc(5): jmp 0xffffff78(%rip)

"calc_first" :
15cd0(4): cmp $0x10,0x30(%rsi)
15cd4(2): jz 0x64(%rip)
15cd6(1): push %rbp
15cd7(1): push %rbx
15cd8(3): mov %rsi,%rbx
15cdb(3): mov %rdi,%rbp
15cde(4): sub $0x8,%rsp
15ce2(4): mov %rsi,0x18(%rbx)
15ce6(4): mov 0x30(%rbx),%rdx
15cea(4): mov 0x28(%rsi),%rsi
15cee(5): call 0xffffc152(%rip)
15cf3(4): cmp $0xffffffff,%rax
15cf7(3): mov %rax,%rdx
15cfa(4): mov %rax,0x38(%rbx)
15cfe(2): jz 0x52(%rip)
15d00(2): xor %eax,%eax
15d02(4): cmp $0xc,0x30(%rbx)
15d06(2): jnz 0x26(%rip)
15d08(3): mov 0x28(%rbx),%ecx
15d0b(4): shl/sal $0x4,%rdx
15d0f(4): add 0x0(%rbp),%rdx
15d13(6): and $0x3ff,%ecx
15d19(3): shl/sal $0x8,%ecx
15d1c(2): mov %ecx,%esi
15d1e(3): mov 0x8(%rdx),%ecx
15d21(6): and $0xfffc00ff,%ecx
15d27(2): or %esi,%ecx
15d29(3): mov %ecx,0x8(%rdx)
15d2c(4): add $0x8,%rsp
15d30(1): pop %rbx
15d31(1): pop %rbp
15d32(1): ret near (%rsp)
15d33(5): nop 0x0(%rax,%rax,1)
15d38(4): mov 0x8(%rsi),%rax
15d3c(4): mov 0x18(%rax),%rdx
15d40(4): mov 0x38(%rax),%rax
15d44(4): mov %rdx,0x18(%rsi)
15d48(4): mov %rax,0x38(%rsi)
15d4c(2): xor %eax,%eax
15d4e(1): ret near (%rsp)
15d4f(1): nop 
15d50(5): mov $0xc,%eax
15d55(2): jmp 0xffffffd7(%rip)

"free_fail_stack_return.part.24" :
15d60(2): push %r12
15d62(1): push %rbp
15d63(3): mov %rdi,%rbp
15d66(1): push %rbx
15d67(4): cmp $0x0,(%rdi)
15d6b(2): jle 0x37(%rip)
15d6d(2): xor %ebx,%ebx
15d6f(3): xor %r12d,%r12d
15d72(6): nop 0x0(%rax,%rax,1)
15d78(4): mov 0x10(%rbp),%rax
15d7c(4): add $0x1,%r12
15d80(5): mov 0x28(%rax,%rbx,1),%rdi
15d85(5): call 0xfffecc8b(%rip)
15d8a(4): mov 0x10(%rbp),%rax
15d8e(5): mov 0x10(%rax,%rbx,1),%rdi
15d93(4): add $0x30,%rbx
15d97(5): call 0xfffecc79(%rip)
15d9c(4): cmp 0x0(%rbp),%r12
15da0(2): jl 0xffffffd8(%rip)
15da2(1): pop %rbx
15da3(4): mov 0x10(%rbp),%rdi
15da7(1): pop %rbp
15da8(2): pop %r12
15daa(5): jmp 0xfffecc66(%rip)

"pop_fail_stack.isra.25" :
15db0(2): push %r12
15db2(1): push %rbp
15db3(1): push %rbx
15db4(3): mov (%rdi),%rax
15db7(4): sub $0x1,%rax
15dbb(3): test %rax,%rax
15dbe(3): mov %rax,(%rdi)
15dc1(2): js 0x64(%rip)
15dc3(4): lea 0x0(%rax,%rax,2),%rbx
15dc7(3): mov (%rsi),%rax
15dca(3): mov %rsi,%r12
15dcd(4): shl/sal $0x4,%rcx
15dd1(3): mov %r9,%rbp
15dd4(3): mov %r8,%rdi
15dd7(4): shl/sal $0x4,%rbx
15ddb(3): add %rbx,%rax
15dde(3): mov (%rax),%rsi
15de1(3): mov %rsi,(%rdx)
15de4(4): mov 0x10(%rax),%rsi
15de8(3): mov %rcx,%rdx
15deb(5): call 0xfffec925(%rip)
15df0(4): mov 0x10(%rbp),%rdi
15df4(5): call 0xfffecc1c(%rip)
15df9(4): mov (%r12),%rax
15dfd(5): mov 0x10(%rax,%rbx,1),%rdi
15e02(5): call 0xfffecc0e(%rip)
15e07(4): add (%r12),%rbx
15e0b(5): movdqu 0x18(%rbx),%xmm0
15e10(4): movaps %xmm0,0x0(%rbp)
15e14(4): mov 0x28(%rbx),%rax
15e18(4): mov %rax,0x10(%rbp)
15e1c(4): mov 0x8(%rbx),%rax
15e20(1): pop %rbx
15e21(1): pop %rbp
15e22(2): pop %r12
15e24(1): ret near (%rsp)
15e25(7): lea 0xcf34(%rip),%rcx
15e2c(7): lea 0xc96d(%rip),%rsi
15e33(7): lea 0xc9ca(%rip),%rdi
15e3a(5): mov $0x555,%edx
15e3f(5): call 0xfffec7c1(%rip)

"build_equiv_class.isra.27" :
15e50(1): push %rbp
15e51(1): push %rbx
15e52(3): mov %rdi,%rbp
15e55(3): mov %rsi,%rdi
15e58(3): mov %rsi,%rbx
15e5b(4): sub $0x8,%rsp
15e5f(5): call 0xfffec6d1(%rip)
15e64(4): cmp $0x1,%rax
15e68(2): jnz 0x28(%rip)
15e6a(3): movzx (%rbx),%ecx
15e6d(3): mov %rcx,%rdx
15e70(3): and $0x3f,%ecx
15e73(4): shr $0x3,%rdx
15e77(3): shl/sal %cl,%rax
15e7a(3): and $0x18,%edx
15e7d(5): or %rax,0x0(%rbp,%rdx,1)
15e82(4): add $0x8,%rsp
15e86(2): xor %eax,%eax
15e88(1): pop %rbx
15e89(1): pop %rbp
15e8a(1): ret near (%rsp)
15e8b(5): nop 0x0(%rax,%rax,1)
15e90(4): add $0x8,%rsp
15e94(5): mov $0x3,%eax
15e99(1): pop %rbx
15e9a(1): pop %rbp
15e9b(1): ret near (%rsp)

"build_charclass.isra.29" :
15ea0(2): push %r14
15ea2(2): push %r13
15ea4(3): mov %rcx,%r13
15ea7(2): push %r12
15ea9(1): push %rbp
15eaa(3): mov %r9,%r12
15ead(1): push %rbx
15eae(3): mov %rdi,%rbp
15eb1(3): mov %rsi,%rbx
15eb4(4): sub $0x10,%rsp
15eb8(9): test $0x400000,0x40(%rsp)
15ec1(2): jz 0x27(%rip)
15ec3(7): lea 0xc949(%rip),%rdi
15eca(5): mov $0x6,%ecx
15ecf(3): mov %r9,%rsi
15ed2(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
15ed4(3): setnbe %al
15ed7(2): sbb $0x0,%al
15ed9(2): test %al,%al
15edb(6): jnz 0xfb(%rip)
15ee1(7): lea 0xc925(%rip),%r12
15ee8(4): mov 0x0(%r13),%rcx
15eec(3): cmp %rcx,(%r8)
15eef(3): mov (%rdx),%rax
15ef2(6): jz 0x117(%rip)
15ef8(4): lea 0x1(%rcx),%rdx
15efc(3): mov %r12,%rdi
15eff(4): mov %rdx,0x0(%r13)
15f03(4): lea 0x0(%rax,%rcx,8),%r13
15f07(5): call 0xfffec789(%rip)
15f0c(7): lea 0xc90c(%rip),%rdi
15f13(4): mov %rax,0x0(%r13)
15f17(5): mov $0x6,%ecx
15f1c(3): mov %r12,%rsi
15f1f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
15f21(3): setnbe %al
15f24(2): sbb $0x0,%al
15f26(2): test %al,%al
15f28(2): jz 0x70(%rip)
15f2a(7): lea 0xc8f4(%rip),%rdi
15f31(5): mov $0x6,%ecx
15f36(3): mov %r12,%rsi
15f39(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
15f3b(3): setnbe %al
15f3e(2): sbb $0x0,%al
15f40(2): test %al,%al
15f42(6): jnz 0x106(%rip)
15f48(5): call 0xfffecaa8(%rip)
15f4d(2): xor %ecx,%ecx
15f4f(3): test %rbp,%rbp
15f52(3): mov (%rax),%rdx
15f55(5): mov $0x1,%edi
15f5a(6): jnz 0x2c0(%rip)
15f60(4): test $0x2,0x0(%rdx,%rcx,2)
15f64(2): jz 0x13(%rip)
15f66(3): mov %rcx,%rax
15f69(3): mov %rdi,%rsi
15f6c(4): sar $0x6,%rax
15f70(3): shl/sal %cl,%rsi
15f73(4): or %rsi,0x0(%rbx,%rax,8)
15f77(4): add $0x1,%rcx
15f7b(7): cmp $0x100,%rcx
15f82(2): jnz 0xffffffde(%rip)
15f84(2): xor %eax,%eax
15f86(4): add $0x10,%rsp
15f8a(1): pop %rbx
15f8b(1): pop %rbp
15f8c(2): pop %r12
15f8e(2): pop %r13
15f90(2): pop %r14
15f92(1): ret near (%rsp)
15f93(5): nop 0x0(%rax,%rax,1)
15f98(5): call 0xfffeca58(%rip)
15f9d(2): xor %ecx,%ecx
15f9f(3): test %rbp,%rbp
15fa2(3): mov (%rax),%rdx
15fa5(5): mov $0x1,%edi
15faa(6): jnz 0x1f0(%rip)
15fb0(4): test $0x8,0x0(%rdx,%rcx,2)
15fb4(2): jz 0x13(%rip)
15fb6(3): mov %rcx,%rax
15fb9(3): mov %rdi,%rsi
15fbc(4): sar $0x6,%rax
15fc0(3): shl/sal %cl,%rsi
15fc3(4): or %rsi,0x0(%rbx,%rax,8)
15fc7(4): add $0x1,%rcx
15fcb(7): cmp $0x100,%rcx
15fd2(2): jnz 0xffffffde(%rip)
15fd4(2): jmp 0xffffffb0(%rip)
15fd6(7): lea 0xc83c(%rip),%rdi
15fdd(5): mov $0x6,%ecx
15fe2(3): mov %r9,%rsi
15fe5(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
15fe7(4): mov 0x0(%r13),%rcx
15feb(3): setnbe %al
15fee(2): sbb $0x0,%al
15ff0(2): test %al,%al
15ff2(7): lea 0xc814(%rip),%rax
15ff9(4): cmove %rax,%r12
15ffd(3): cmp %rcx,(%r8)
16000(3): mov (%rdx),%rax
16003(6): jnz 0xfffffef5(%rip)
16009(5): lea 0x1(%rcx,%rcx,1),%r14
1600e(3): mov %rax,%rdi
16011(5): mov %r8,0x8(%rsp)
16016(4): mov %rdx,(%rsp)
1601a(8): lea 0x0(,%r14,8),%rsi
16022(5): call 0xfffec80e(%rip)
16027(3): test %rax,%rax
1602a(6): jz 0x31e(%rip)
16030(4): mov (%rsp),%rdx
16034(5): mov 0x8(%rsp),%r8
16039(3): mov %rax,(%rdx)
1603c(3): mov %r14,(%r8)
1603f(4): mov 0x0(%r13),%rcx
16043(5): jmp 0xfffffeb5(%rip)
16048(7): lea 0xc7ca(%rip),%rdi
1604f(5): mov $0x6,%ecx
16054(3): mov %r12,%rsi
16057(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
16059(3): setnbe %al
1605c(2): sbb $0x0,%al
1605e(2): test %al,%al
16060(2): jz 0x6a(%rip)
16062(7): lea 0xc7c2(%rip),%rdi
16069(5): mov $0x6,%ecx
1606e(3): mov %r12,%rsi
16071(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
16073(3): setnbe %al
16076(2): sbb $0x0,%al
16078(2): test %al,%al
1607a(6): jnz 0x98(%rip)
16080(5): call 0xfffec970(%rip)
16085(2): xor %ecx,%ecx
16087(3): test %rbp,%rbp
1608a(3): mov (%rax),%rdx
1608d(5): mov $0x1,%edi
16092(6): jnz 0x35c(%rip)
16098(8): nop 0x0(%rax,%rax,1)
160a0(5): test $0x20,0x1(%rdx,%rcx,2)
160a5(2): jz 0x13(%rip)
160a7(3): mov %rcx,%rax
160aa(3): mov %rdi,%rsi
160ad(4): sar $0x6,%rax
160b1(3): shl/sal %cl,%rsi
160b4(4): or %rsi,0x0(%rbx,%rax,8)
160b8(4): add $0x1,%rcx
160bc(7): cmp $0x100,%rcx
160c3(2): jnz 0xffffffdd(%rip)
160c5(5): jmp 0xfffffebf(%rip)
160ca(5): call 0xfffec926(%rip)
160cf(2): xor %ecx,%ecx
160d1(3): test %rbp,%rbp
160d4(3): mov (%rax),%rdx
160d7(5): mov $0x1,%edi
160dc(6): jnz 0x1d6(%rip)
160e2(6): nop 0x0(%rax,%rax,1)
160e8(5): test $0x2,0x1(%rdx,%rcx,2)
160ed(2): jz 0x13(%rip)
160ef(3): mov %rcx,%rax
160f2(3): mov %rdi,%rsi
160f5(4): sar $0x6,%rax
160f9(3): shl/sal %cl,%rsi
160fc(4): or %rsi,0x0(%rbx,%rax,8)
16100(4): add $0x1,%rcx
16104(7): cmp $0x100,%rcx
1610b(2): jnz 0xffffffdd(%rip)
1610d(5): jmp 0xfffffe77(%rip)
16112(7): lea 0xc6f4(%rip),%rdi
16119(5): mov $0x6,%ecx
1611e(3): mov %r12,%rsi
16121(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
16123(3): setnbe %al
16126(2): sbb $0x0,%al
16128(2): test %al,%al
1612a(6): jz 0xa9(%rip)
16130(7): lea 0xc713(%rip),%rdi
16137(5): mov $0x6,%ecx
1613c(3): mov %r12,%rsi
1613f(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
16141(3): setnbe %al
16144(2): sbb $0x0,%al
16146(2): test %al,%al
16148(6): jnz 0x10b(%rip)
1614e(5): call 0xfffec8a2(%rip)
16153(2): xor %ecx,%ecx
16155(3): test %rbp,%rbp
16158(3): mov (%rax),%rdx
1615b(5): mov $0x1,%edi
16160(6): jnz 0x4aa(%rip)
16166(a): nop 0x0(%rax,%rax,1)
16170(5): test $0x8,0x1(%rdx,%rcx,2)
16175(2): jz 0x13(%rip)
16177(3): mov %rcx,%rax
1617a(3): mov %rdi,%rsi
1617d(4): sar $0x6,%rax
16181(3): shl/sal %cl,%rsi
16184(4): or %rsi,0x0(%rbx,%rax,8)
16188(4): add $0x1,%rcx
1618c(7): cmp $0x100,%rcx
16193(2): jnz 0xffffffdd(%rip)
16195(5): jmp 0xfffffdef(%rip)
1619a(2): xor %eax,%eax
1619c(4): nop 0x0(%rax)
161a0(4): test $0x8,0x0(%rdx,%rax,2)
161a4(2): jz 0x1e(%rip)
161a6(5): movzx 0x0(%rbp,%rax,1),%ecx
161ab(3): mov %rdi,%r10
161ae(3): mov %rcx,%rsi
161b1(3): and $0x3f,%ecx
161b4(4): shr $0x3,%rsi
161b8(3): shl/sal %cl,%r10
161bb(3): and $0x18,%esi
161be(4): or %r10,0x0(%rbx,%rsi,1)
161c2(4): add $0x1,%rax
161c6(6): cmp $0x100,%rax
161cc(2): jnz 0xffffffd4(%rip)
161ce(5): jmp 0xfffffdb6(%rip)
161d3(5): call 0xfffec81d(%rip)
161d8(2): xor %ecx,%ecx
161da(3): test %rbp,%rbp
161dd(3): mov (%rax),%rdx
161e0(5): mov $0x1,%edi
161e5(6): jnz 0x1d3(%rip)
161eb(5): nop 0x0(%rax,%rax,1)
161f0(5): test $0x4,0x1(%rdx,%rcx,2)
161f5(2): jz 0x13(%rip)
161f7(3): mov %rcx,%rax
161fa(3): mov %rdi,%rsi
161fd(4): sar $0x6,%rax
16201(3): shl/sal %cl,%rsi
16204(4): or %rsi,0x0(%rbx,%rax,8)
16208(4): add $0x1,%rcx
1620c(7): cmp $0x100,%rcx
16213(2): jnz 0xffffffdd(%rip)
16215(5): jmp 0xfffffd6f(%rip)
1621a(2): xor %eax,%eax
1621c(4): nop 0x0(%rax)
16220(4): test $0x2,0x0(%rdx,%rax,2)
16224(2): jz 0x1e(%rip)
16226(5): movzx 0x0(%rbp,%rax,1),%ecx
1622b(3): mov %rdi,%r11
1622e(3): mov %rcx,%rsi
16231(3): and $0x3f,%ecx
16234(4): shr $0x3,%rsi
16238(3): shl/sal %cl,%r11
1623b(3): and $0x18,%esi
1623e(4): or %r11,0x0(%rbx,%rsi,1)
16242(4): add $0x1,%rax
16246(6): cmp $0x100,%rax
1624c(2): jnz 0xffffffd4(%rip)
1624e(5): jmp 0xfffffd36(%rip)
16253(7): lea 0xc5d7(%rip),%rdi
1625a(5): mov $0x6,%ecx
1625f(3): mov %r12,%rsi
16262(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
16264(3): setnbe %al
16267(2): sbb $0x0,%al
16269(2): test %al,%al
1626b(2): jnz 0x81(%rip)
1626d(5): call 0xfffec783(%rip)
16272(2): xor %ecx,%ecx
16274(3): test %rbp,%rbp
16277(3): mov (%rax),%rdx
1627a(5): mov $0x1,%edi
1627f(6): jnz 0x3f8(%rip)
16285(3): nop (%rax)
16288(5): test $0x40,0x1(%rdx,%rcx,2)
1628d(2): jz 0x13(%rip)
1628f(3): mov %rcx,%rax
16292(3): mov %rdi,%rsi
16295(4): sar $0x6,%rax
16299(3): shl/sal %cl,%rsi
1629c(4): or %rsi,0x0(%rbx,%rax,8)
162a0(4): add $0x1,%rcx
162a4(7): cmp $0x100,%rcx
162ab(2): jnz 0xffffffdd(%rip)
162ad(5): jmp 0xfffffcd7(%rip)
162b2(2): xor %eax,%eax
162b4(4): nop 0x0(%rax)
162b8(5): test $0x2,0x1(%rdx,%rax,2)
162bd(2): jz 0x1e(%rip)
162bf(5): movzx 0x0(%rbp,%rax,1),%ecx
162c4(3): mov %rdi,%r14
162c7(3): mov %rcx,%rsi
162ca(3): and $0x3f,%ecx
162cd(4): shr $0x3,%rsi
162d1(3): shl/sal %cl,%r14
162d4(3): and $0x18,%esi
162d7(4): or %r14,0x0(%rbx,%rsi,1)
162db(4): add $0x1,%rax
162df(6): cmp $0x100,%rax
162e5(2): jnz 0xffffffd3(%rip)
162e7(5): jmp 0xfffffc9d(%rip)
162ec(7): lea 0xc520(%rip),%rdi
162f3(5): mov $0x6,%ecx
162f8(3): mov %r12,%rsi
162fb(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
162fd(3): setnbe %al
16300(2): sbb $0x0,%al
16302(2): test %al,%al
16304(2): jnz 0x4e(%rip)
16306(5): call 0xfffec6ea(%rip)
1630b(2): xor %ecx,%ecx
1630d(3): test %rbp,%rbp
16310(3): mov (%rax),%rax
16313(5): mov $0x1,%edi
16318(6): jnz 0x328(%rip)
1631e(5): test $0x1,0x1(%rax,%rcx,2)
16323(2): jz 0x13(%rip)
16325(3): mov %rcx,%rdx
16328(3): mov %rdi,%rsi
1632b(4): sar $0x6,%rdx
1632f(3): shl/sal %cl,%rsi
16332(4): or %rsi,0x0(%rbx,%rdx,8)
16336(4): add $0x1,%rcx
1633a(7): cmp $0x100,%rcx
16341(2): jnz 0xffffffdd(%rip)
16343(5): jmp 0xfffffc41(%rip)
16348(5): mov $0xc,%eax
1634d(5): jmp 0xfffffc39(%rip)
16352(7): lea 0xc4de(%rip),%rdi
16359(5): mov $0x6,%ecx
1635e(3): mov %r12,%rsi
16361(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
16363(3): setnbe %al
16366(2): sbb $0x0,%al
16368(2): test %al,%al
1636a(6): jnz 0xf4(%rip)
16370(5): call 0xfffec680(%rip)
16375(2): xor %ecx,%ecx
16377(3): test %rbp,%rbp
1637a(3): mov (%rax),%rdx
1637d(5): mov $0x1,%esi
16382(6): jnz 0xa2(%rip)
16388(4): test $0x1,0x0(%rdx,%rcx,2)
1638c(2): jz 0x13(%rip)
1638e(3): mov %rcx,%rax
16391(3): mov %rsi,%rdi
16394(4): sar $0x6,%rax
16398(3): shl/sal %cl,%rdi
1639b(4): or %rdi,0x0(%rbx,%rax,8)
1639f(4): add $0x1,%rcx
163a3(7): cmp $0x100,%rcx
163aa(2): jnz 0xffffffde(%rip)
163ac(5): jmp 0xfffffbd8(%rip)
163b1(7): nop 0x0(%rax)
163b8(2): xor %eax,%eax
163ba(5): test $0x4,0x1(%rdx,%rax,2)
163bf(2): jz 0x1e(%rip)
163c1(5): movzx 0x0(%rbp,%rax,1),%ecx
163c6(3): mov %rdi,%r9
163c9(3): mov %rcx,%rsi
163cc(3): and $0x3f,%ecx
163cf(4): shr $0x3,%rsi
163d3(3): shl/sal %cl,%r9
163d6(3): and $0x18,%esi
163d9(4): or %r9,0x0(%rbx,%rsi,1)
163dd(4): add $0x1,%rax
163e1(6): cmp $0x100,%rax
163e7(2): jnz 0xffffffd3(%rip)
163e9(5): jmp 0xfffffb9b(%rip)
163ee(2): xor %eax,%eax
163f0(5): test $0x20,0x1(%rdx,%rax,2)
163f5(2): jz 0x1e(%rip)
163f7(5): movzx 0x0(%rbp,%rax,1),%ecx
163fc(3): mov %rdi,%r9
163ff(3): mov %rcx,%rsi
16402(3): and $0x3f,%ecx
16405(4): shr $0x3,%rsi
16409(3): shl/sal %cl,%r9
1640c(3): and $0x18,%esi
1640f(4): or %r9,0x0(%rbx,%rsi,1)
16413(4): add $0x1,%rax
16417(6): cmp $0x100,%rax
1641d(2): jnz 0xffffffd3(%rip)
1641f(5): jmp 0xfffffb65(%rip)
16424(2): xor %eax,%eax
16426(5): mov $0x1,%edi
1642b(4): test $0x1,0x0(%rdx,%rax,2)
1642f(2): jz 0x1e(%rip)
16431(5): movzx 0x0(%rbp,%rax,1),%ecx
16436(3): mov %rdi,%r14
16439(3): mov %rcx,%rsi
1643c(3): and $0x3f,%ecx
1643f(4): shr $0x3,%rsi
16443(3): shl/sal %cl,%r14
16446(3): and $0x18,%esi
16449(4): or %r14,0x0(%rbx,%rsi,1)
1644d(4): add $0x1,%rax
16451(6): cmp $0x100,%rax
16457(2): jnz 0xffffffd4(%rip)
16459(5): jmp 0xfffffb2b(%rip)
1645e(7): lea 0xc3d8(%rip),%rsi
16465(3): mov %r12,%rdi
16468(5): call 0xfffec268(%rip)
1646d(2): test %eax,%eax
1646f(2): jnz 0x7b(%rip)
16471(5): call 0xfffec57f(%rip)
16476(2): xor %ecx,%ecx
16478(3): test %rbp,%rbp
1647b(3): mov (%rax),%rsi
1647e(5): mov $0x1,%edx
16483(2): jnz 0x2c(%rip)
16485(5): cmp $0x0,0x0(%rsi,%rcx,2)
1648a(2): jns 0x13(%rip)
1648c(3): mov %rcx,%rax
1648f(3): mov %rdx,%rdi
16492(4): sar $0x6,%rax
16496(3): shl/sal %cl,%rdi
16499(4): or %rdi,0x0(%rbx,%rax,8)
1649d(4): add $0x1,%rcx
164a1(7): cmp $0x100,%rcx
164a8(2): jnz 0xffffffdd(%rip)
164aa(5): jmp 0xfffffada(%rip)
164af(2): xor %eax,%eax
164b1(5): mov $0x1,%edi
164b6(5): cmp $0x0,0x0(%rsi,%rax,2)
164bb(2): jns 0x1e(%rip)
164bd(5): movzx 0x0(%rbp,%rax,1),%ecx
164c2(3): mov %rdi,%r9
164c5(3): mov %rcx,%rdx
164c8(3): and $0x3f,%ecx
164cb(4): shr $0x3,%rdx
164cf(3): shl/sal %cl,%r9
164d2(3): and $0x18,%edx
164d5(4): or %r9,0x0(%rbx,%rdx,1)
164d9(4): add $0x1,%rax
164dd(6): cmp $0x100,%rax
164e3(2): jnz 0xffffffd3(%rip)
164e5(5): jmp 0xfffffa9f(%rip)
164ea(7): lea 0xc352(%rip),%rsi
164f1(3): mov %r12,%rdi
164f4(5): call 0xfffec1dc(%rip)
164f9(2): test %eax,%eax
164fb(2): jnz 0x79(%rip)
164fd(5): call 0xfffec4f3(%rip)
16502(2): xor %ecx,%ecx
16504(3): test %rbp,%rbp
16507(3): mov (%rax),%rsi
1650a(5): mov $0x1,%edx
1650f(2): jnz 0x2b(%rip)
16511(4): test $0x4,0x0(%rsi,%rcx,2)
16515(2): jz 0x13(%rip)
16517(3): mov %rcx,%rax
1651a(3): mov %rdx,%rdi
1651d(4): sar $0x6,%rax
16521(3): shl/sal %cl,%rdi
16524(4): or %rdi,0x0(%rbx,%rax,8)
16528(4): add $0x1,%rcx
1652c(7): cmp $0x100,%rcx
16533(2): jnz 0xffffffde(%rip)
16535(5): jmp 0xfffffa4f(%rip)
1653a(2): xor %eax,%eax
1653c(5): mov $0x1,%edi
16541(4): test $0x4,0x0(%rsi,%rax,2)
16545(2): jz 0x1e(%rip)
16547(5): movzx 0x0(%rbp,%rax,1),%ecx
1654c(3): mov %rdi,%r14
1654f(3): mov %rcx,%rdx
16552(3): and $0x3f,%ecx
16555(4): shr $0x3,%rdx
16559(3): shl/sal %cl,%r14
1655c(3): and $0x18,%edx
1655f(4): or %r14,0x0(%rbx,%rdx,1)
16563(4): add $0x1,%rax
16567(6): cmp $0x100,%rax
1656d(2): jnz 0xffffffd4(%rip)
1656f(5): jmp 0xfffffa15(%rip)
16574(7): lea 0xc2ce(%rip),%rsi
1657b(3): mov %r12,%rdi
1657e(5): call 0xfffec152(%rip)
16583(2): test %eax,%eax
16585(2): jnz 0x7b(%rip)
16587(5): call 0xfffec469(%rip)
1658c(2): xor %ecx,%ecx
1658e(3): test %rbp,%rbp
16591(3): mov (%rax),%rsi
16594(5): mov $0x1,%edx
16599(2): jnz 0x2c(%rip)
1659b(5): test $0x10,0x1(%rsi,%rcx,2)
165a0(2): jz 0x13(%rip)
165a2(3): mov %rcx,%rax
165a5(3): mov %rdx,%rdi
165a8(4): sar $0x6,%rax
165ac(3): shl/sal %cl,%rdi
165af(4): or %rdi,0x0(%rbx,%rax,8)
165b3(4): add $0x1,%rcx
165b7(7): cmp $0x100,%rcx
165be(2): jnz 0xffffffdd(%rip)
165c0(5): jmp 0xfffff9c4(%rip)
165c5(2): xor %eax,%eax
165c7(5): mov $0x1,%edi
165cc(5): test $0x10,0x1(%rsi,%rax,2)
165d1(2): jz 0x1e(%rip)
165d3(5): movzx 0x0(%rbp,%rax,1),%ecx
165d8(3): mov %rdi,%r9
165db(3): mov %rcx,%rdx
165de(3): and $0x3f,%ecx
165e1(4): shr $0x3,%rdx
165e5(3): shl/sal %cl,%r9
165e8(3): and $0x18,%edx
165eb(4): or %r9,0x0(%rbx,%rdx,1)
165ef(4): add $0x1,%rax
165f3(6): cmp $0x100,%rax
165f9(2): jnz 0xffffffd3(%rip)
165fb(5): jmp 0xfffff989(%rip)
16600(5): mov $0x4,%eax
16605(5): jmp 0xfffff981(%rip)
1660a(2): xor %eax,%eax
1660c(5): test $0x8,0x1(%rdx,%rax,2)
16611(2): jz 0x1e(%rip)
16613(5): movzx 0x0(%rbp,%rax,1),%ecx
16618(3): mov %rdi,%r14
1661b(3): mov %rcx,%rsi
1661e(3): and $0x3f,%ecx
16621(4): shr $0x3,%rsi
16625(3): shl/sal %cl,%r14
16628(3): and $0x18,%esi
1662b(4): or %r14,0x0(%rbx,%rsi,1)
1662f(4): add $0x1,%rax
16633(6): cmp $0x100,%rax
16639(2): jnz 0xffffffd3(%rip)
1663b(5): jmp 0xfffff949(%rip)
16640(2): xor %edx,%edx
16642(5): test $0x1,0x1(%rax,%rdx,2)
16647(2): jz 0x1e(%rip)
16649(5): movzx 0x0(%rbp,%rdx,1),%ecx
1664e(3): mov %rdi,%r9
16651(3): mov %rcx,%rsi
16654(3): and $0x3f,%ecx
16657(4): shr $0x3,%rsi
1665b(3): shl/sal %cl,%r9
1665e(3): and $0x18,%esi
16661(4): or %r9,0x0(%rbx,%rsi,1)
16665(4): add $0x1,%rdx
16669(7): cmp $0x100,%rdx
16670(2): jnz 0xffffffd2(%rip)
16672(5): jmp 0xfffff912(%rip)
16677(2): xor %eax,%eax
16679(5): test $0x40,0x1(%rdx,%rax,2)
1667e(2): jz 0x1e(%rip)
16680(5): movzx 0x0(%rbp,%rax,1),%ecx
16685(3): mov %rdi,%r14
16688(3): mov %rcx,%rsi
1668b(3): and $0x3f,%ecx
1668e(4): shr $0x3,%rsi
16692(3): shl/sal %cl,%r14
16695(3): and $0x18,%esi
16698(4): or %r14,0x0(%rbx,%rsi,1)
1669c(4): add $0x1,%rax
166a0(6): cmp $0x100,%rax
166a6(2): jnz 0xffffffd3(%rip)
166a8(5): jmp 0xfffff8dc(%rip)

"build_charclass_op" :
166b0(2): push %r15
166b2(2): push %r14
166b4(3): mov %rdx,%r14
166b7(2): push %r13
166b9(2): push %r12
166bb(3): mov %rcx,%r13
166be(1): push %rbp
166bf(1): push %rbx
166c0(3): mov %rdi,%rbp
166c3(5): mov $0x20,%edi
166c8(3): mov %r8d,%r12d
166cb(4): sub $0x58,%rsp
166cf(4): mov %rsi,(%rsp)
166d3(5): mov $0x1,%esi
166d8(5): mov %r9,0x8(%rsp)
166dd(9): mov $0x28,%rax
166e6(5): mov %rax,0x48(%rsp)
166eb(2): xor %eax,%eax
166ed(9): mov $0x0,0x18(%rsp)
166f6(5): call 0xfffebfba(%rip)
166fb(3): test %rax,%rax
166fe(6): jz 0x1c2(%rip)
16704(5): mov $0x1,%esi
16709(5): mov $0x50,%edi
1670e(3): mov %rax,%rbx
16711(5): call 0xfffebf9f(%rip)
16716(3): test %rax,%rax
16719(3): mov %rax,%r15
1671c(6): jz 0x1b4(%rip)
16722(4): movzx 0x20(%rax),%eax
16726(4): sub $0x8,%rsp
1672a(3): mov %r12d,%edx
1672d(2): push $0x0
1672f(3): and $0x1,%edx
16732(5): mov 0x10(%rsp),%rdi
16737(4): lea 0x48(%r15),%rcx
1673b(3): mov %r14,%r9
1673e(3): mov %rbx,%rsi
16741(5): lea 0x28(%rsp),%r8
16746(3): and $0xfe,%eax
16749(2): or %edx,%eax
1674b(4): lea 0x18(%r15),%rdx
1674f(4): mov %al,0x20(%r15)
16753(5): call 0xfffff74d(%rip)
16758(2): test %eax,%eax
1675a(1): pop %rdx
1675b(1): pop %rcx
1675c(6): jnz 0x194(%rip)
16762(5): movsx 0x0(%r13),%rcx
16767(5): mov $0x1,%esi
1676c(2): test %cl,%cl
1676e(2): jz 0x3c(%rip)
16770(4): lea 0x3f(%rcx),%rax
16774(3): test %rcx,%rcx
16777(3): mov %rcx,%rdx
1677a(4): cmovns %rcx,%rax
1677e(4): sar $0x3f,%rdx
16782(4): add $0x1,%r13
16786(4): shr $0x3a,%rdx
1678a(4): sar $0x6,%rax
1678e(3): add %rdx,%rcx
16791(3): and $0x3f,%ecx
16794(3): sub %rdx,%rcx
16797(3): mov %rsi,%rdx
1679a(3): shl/sal %cl,%rdx
1679d(5): movsx 0x0(%r13),%rcx
167a2(4): or %rdx,0x0(%rbx,%rax,8)
167a6(2): test %cl,%cl
167a8(2): jnz 0xffffffc8(%rip)
167aa(3): test %r12b,%r12b
167ad(2): jz 0x15(%rip)
167af(4): lea 0x20(%rbx),%rdx
167b3(3): mov %rbx,%rax
167b6(3): not (%rax)
167b9(4): add $0x8,%rax
167bd(3): cmp %rax,%rdx
167c0(2): jnz 0xfffffff6(%rip)
167c2(7): cmp $0x1,0xb4(%rbp)
167c9(2): jle 0x1a(%rip)
167cb(4): mov 0x78(%rbp),%rcx
167cf(2): xor %eax,%eax
167d1(4): mov 0x0(%rcx,%rax,1),%rdx
167d5(4): and %rdx,0x0(%rbx,%rax,1)
167d9(4): add $0x8,%rax
167dd(4): cmp $0x20,%rax
167e1(2): jnz 0xfffffff0(%rip)
167e3(5): lea 0x20(%rsp),%r9
167e8(4): lea 0x70(%rbp),%r12
167ec(7): lea 0x80(%rbp),%r13
167f3(2): xor %ecx,%ecx
167f5(2): xor %edx,%edx
167f7(5): mov $0x3,0x28(%rsp)
167fc(3): mov %r9,%r8
167ff(3): mov %r13,%rsi
16802(3): mov %r12,%rdi
16805(5): mov %rbx,0x20(%rsp)
1680a(4): mov %r9,(%rsp)
1680e(5): call 0xffffcb52(%rip)
16813(3): test %rax,%rax
16816(3): mov %rax,%r14
16819(6): jz 0x97(%rip)
1681f(7): cmp $0x1,0xb4(%rbp)
16826(2): jle 0x7a(%rip)
16828(7): or $0x2,0xb0(%rbp)
1682f(4): mov (%rsp),%r9
16833(2): xor %ecx,%ecx
16835(2): xor %edx,%edx
16837(3): mov %r13,%rsi
1683a(3): mov %r12,%rdi
1683d(5): mov $0x6,0x28(%rsp)
16842(5): mov %r15,0x20(%rsp)
16847(3): mov %r9,%r8
1684a(5): call 0xffffcb16(%rip)
1684f(3): test %rax,%rax
16852(2): jz 0x5e(%rip)
16854(5): lea 0x30(%rsp),%r8
16859(3): mov %r14,%rdx
1685c(3): mov %rax,%rcx
1685f(3): mov %r13,%rsi
16862(3): mov %r12,%rdi
16865(5): mov $0xa,0x38(%rsp)
1686a(5): call 0xffffcaf6(%rip)
1686f(3): mov %rax,%r14
16872(5): mov 0x48(%rsp),%rdi
16877(9): xor $0x28,%rdi
16880(3): mov %r14,%rax
16883(6): jnz 0x92(%rip)
16889(4): add $0x58,%rsp
1688d(1): pop %rbx
1688e(1): pop %rbp
1688f(2): pop %r12
16891(2): pop %r13
16893(2): pop %r14
16895(2): pop %r15
16897(1): ret near (%rsp)
16898(8): nop 0x0(%rax,%rax,1)
168a0(3): mov %r15,%rdi
168a3(5): call 0xffffb51d(%rip)
168a8(2): jmp 0xffffffca(%rip)
168aa(6): nop 0x0(%rax,%rax,1)
168b0(3): mov %rbx,%rdi
168b3(5): call 0xfffec15d(%rip)
168b8(3): mov %r15,%rdi
168bb(5): call 0xffffb505(%rip)
168c0(5): mov 0x8(%rsp),%rax
168c5(3): xor %r14d,%r14d
168c8(6): mov $0xc,(%rax)
168ce(2): jmp 0xffffffa4(%rip)
168d0(3): mov %rbx,%rdi
168d3(3): xor %r14d,%r14d
168d6(5): call 0xfffec13a(%rip)
168db(5): mov 0x8(%rsp),%rax
168e0(6): mov $0xc,(%rax)
168e6(2): jmp 0xffffff8c(%rip)
168e8(8): nop 0x0(%rax,%rax,1)
168f0(3): mov %rbx,%rdi
168f3(3): mov %eax,(%rsp)
168f6(3): xor %r14d,%r14d
168f9(5): call 0xfffec117(%rip)
168fe(3): mov %r15,%rdi
16901(5): call 0xffffb4bf(%rip)
16906(5): mov 0x8(%rsp),%rdi
1690b(3): mov (%rsp),%eax
1690e(2): mov %eax,(%rdi)
16910(5): jmp 0xffffff62(%rip)
16915(5): call 0xfffebc4b(%rip)

"re_compile_fastmap_iter.isra.30" :
16920(2): push %r15
16922(2): push %r14
16924(3): mov %rdi,%rax
16927(2): push %r13
16929(2): push %r12
1692b(1): push %rbp
1692c(1): push %rbx
1692d(2): xor %ebx,%ebx
1692f(3): mov %rcx,%rbp
16932(7): sub $0x178,%rsp
16939(3): mov (%rax),%rax
1693c(5): mov %rdi,0x30(%rsp)
16941(5): mov %rsi,0x20(%rsp)
16946(9): mov $0x28,%rdi
1694f(8): mov %rdi,0x168(%rsp)
16957(2): xor %edi,%edi
16959(7): cmp $0x1,0xb4(%rax)
16960(5): mov %rdx,0x28(%rsp)
16965(5): mov %rax,0x8(%rsp)
1696a(2): jnz 0x19(%rip)
1696c(5): mov 0x30(%rsp),%rax
16971(4): mov 0x18(%rax),%rax
16975(3): mov %rax,%rbx
16978(4): mov %rax,(%rsp)
1697c(4): shr $0x16,%rbx
16980(3): and $0x1,%ebx
16983(5): mov 0x20(%rsp),%rax
16988(4): cmp $0x0,(%rax)
1698c(6): jle 0x411(%rip)
16992(5): lea 0x58(%rsp),%rax
16997(8): mov $0x0,(%rsp)
1699f(5): mov %rax,0x40(%rsp)
169a4(5): lea 0x54(%rsp),%rax
169a9(5): mov %rax,0x48(%rsp)
169ae(5): lea 0x60(%rsp),%rax
169b3(5): mov %rax,0x38(%rsp)
169b8(2): jmp 0x46(%rip)
169ba(6): nop 0x0(%rax,%rax,1)
169c0(3): cmp $0x3,%eax
169c3(6): jz 0x2f3(%rip)
169c9(3): cmp $0x6,%eax
169cc(6): jz 0x18c(%rip)
169d2(3): and $0xfd,%edx
169d5(3): cmp $0x5,%dl
169d8(6): jz 0x3fc(%rip)
169de(3): cmp $0x2,%eax
169e1(6): jz 0x353(%rip)
169e7(5): mov 0x20(%rsp),%rdi
169ec(5): add $0x1,(%rsp)
169f1(4): mov (%rsp),%rax
169f5(3): cmp (%rdi),%rax
169f8(6): jnl 0x3a5(%rip)
169fe(5): mov 0x28(%rsp),%rax
16a03(4): mov (%rsp),%rdi
16a07(3): mov (%rax),%rax
16a0a(4): mov 0x0(%rax,%rdi,8),%r12
16a0e(5): mov 0x8(%rsp),%rax
16a13(3): mov (%rax),%rcx
16a16(3): mov %r12,%rax
16a19(4): shl/sal $0x4,%rax
16a1d(5): mov %rax,0x10(%rsp)
16a22(4): lea 0x0(%rcx,%rax,1),%rsi
16a26(4): movzx 0x8(%rsi),%eax
16a2a(3): cmp $0x1,%eax
16a2d(2): mov %eax,%edx
16a2f(2): jnz 0xffffff91(%rip)
16a31(4): movzx (%rsi),%r13d
16a35(2): test %ebx,%ebx
16a37(6): mov $0x1,0x0(%rbp,%r13,1)
16a3d(2): jz 0x13(%rip)
16a3f(5): call 0xfffebfa1(%rip)
16a44(3): mov (%rax),%rax
16a47(4): movsxd 0x0(%rax,%r13,4),%rax
16a4b(5): mov $0x1,0x0(%rbp,%rax,1)
16a50(5): mov 0x30(%rsp),%rax
16a55(4): test $0x40,0x1a(%rax)
16a59(2): jz 0xffffff8e(%rip)
16a5b(5): mov 0x8(%rsp),%rsi
16a60(7): cmp $0x1,0xb4(%rsi)
16a67(6): jle 0xffffff80(%rip)
16a6d(3): mov (%rsi),%rax
16a70(5): mov 0x10(%rsp),%rdi
16a75(4): movzx 0x0(%rax,%rdi,1),%edx
16a79(4): mov %dl,0x60(%rsp)
16a7d(5): lea 0x1(%r12),%rdx
16a82(4): cmp %rdx,0x10(%rsi)
16a86(6): jbe 0x340(%rip)
16a8c(5): lea 0x10(%rax,%rdi,1),%rcx
16a91(3): mov 0x8(%rcx),%eax
16a94(5): and $0x2000ff,%eax
16a99(5): cmp $0x200001,%eax
16a9e(6): jnz 0x328(%rip)
16aa4(4): add $0x20,%rdi
16aa8(3): mov %rdi,%r13
16aab(5): mov 0x38(%rsp),%rdi
16ab0(4): lea 0x1(%rdi),%rax
16ab4(2): jmp 0x27(%rip)
16ab6(a): nop 0x0(%rax,%rax,1)
16ac0(3): mov (%rsi),%rcx
16ac3(3): add %r13,%rcx
16ac6(4): add $0x10,%r13
16aca(3): mov 0x8(%rcx),%edx
16acd(6): and $0x2000ff,%edx
16ad3(6): cmp $0x200001,%edx
16ad9(2): jnz 0x1b(%rip)
16adb(3): movzx (%rcx),%edx
16ade(4): add $0x1,%rax
16ae2(3): mov %dl,0xffffffff(%rax)
16ae5(3): mov %rax,%rdx
16ae8(3): sub %rdi,%rdx
16aeb(3): add %r12,%rdx
16aee(4): cmp %rdx,0x10(%rsi)
16af2(2): jnbe 0xffffffce(%rip)
16af4(5): mov 0x38(%rsp),%rsi
16af9(5): mov 0x40(%rsp),%rcx
16afe(5): mov 0x48(%rsp),%rdi
16b03(3): sub %rsi,%rax
16b06(7): mov $0x0,(%rcx)
16b0d(3): mov %rax,%r12
16b10(3): mov %rax,%rdx
16b13(5): call 0xffff96cd(%rip)
16b18(3): cmp %rax,%r12
16b1b(6): jnz 0xfffffecc(%rip)
16b21(4): mov 0x54(%rsp),%edi
16b25(5): call 0xfffebdbb(%rip)
16b2a(5): mov 0x40(%rsp),%rdx
16b2f(5): mov 0x38(%rsp),%rdi
16b34(2): mov %eax,%esi
16b36(5): call 0xfffebc5a(%rip)
16b3b(4): cmp $0xffffffff,%rax
16b3f(6): jz 0xfffffea8(%rip)
16b45(5): movzx 0x60(%rsp),%eax
16b4a(5): mov $0x1,0x0(%rbp,%rax,1)
16b4f(5): jmp 0xfffffe98(%rip)
16b54(4): nop 0x0(%rax)
16b58(5): mov 0x8(%rsp),%rax
16b5d(3): mov (%rsi),%r12
16b60(7): cmp $0x1,0xb4(%rax)
16b67(2): jle 0x26(%rip)
16b69(6): cmp $0x0,0x48(%r12)
16b6f(6): jnz 0x100(%rip)
16b75(6): test $0x1,0x20(%r12)
16b7b(6): jnz 0xf4(%rip)
16b81(6): cmp $0x0,0x40(%r12)
16b87(6): jnz 0xe8(%rip)
16b8d(3): xor %r13d,%r13d
16b90(6): cmp $0x0,0x28(%r12)
16b96(6): jle 0xfffffe51(%rip)
16b9c(3): mov %r12,%r15
16b9f(5): mov 0x40(%rsp),%r14
16ba4(3): mov %rbp,%r12
16ba7(3): mov %r13,%rbp
16baa(3): mov %ebx,%r13d
16bad(2): jmp 0x10(%rip)
16baf(4): add $0x1,%rbp
16bb3(4): cmp 0x28(%r15),%rbp
16bb7(6): jnl 0xad(%rip)
16bbd(7): mov $0x0,(%r14)
16bc4(3): mov (%r15),%rax
16bc7(3): mov %r14,%rdx
16bca(5): mov 0x38(%rsp),%rdi
16bcf(8): lea 0x0(,%rbp,4),%rbx
16bd7(3): mov 0x0(%rax,%rbp,4),%esi
16bda(5): call 0xfffebbb6(%rip)
16bdf(4): cmp $0xffffffff,%rax
16be3(2): jz 0x2c(%rip)
16be5(5): movzx 0x60(%rsp),%edx
16bea(3): test %r13d,%r13d
16bed(5): mov $0x1,0x0(%r12,%rdx,1)
16bf2(5): mov %rdx,0x10(%rsp)
16bf7(2): jz 0x18(%rip)
16bf9(5): call 0xfffebde7(%rip)
16bfe(5): mov 0x10(%rsp),%rdx
16c03(3): mov (%rax),%rax
16c06(4): movsxd 0x0(%rax,%rdx,4),%rax
16c0a(5): mov $0x1,0x0(%r12,%rax,1)
16c0f(5): mov 0x30(%rsp),%rax
16c14(4): test $0x40,0x1a(%rax)
16c18(2): jz 0xffffff97(%rip)
16c1a(5): mov 0x8(%rsp),%rax
16c1f(7): cmp $0x1,0xb4(%rax)
16c26(2): jle 0xffffff89(%rip)
16c28(3): mov (%r15),%rax
16c2b(3): mov 0x0(%rax,%rbx,1),%edi
16c2e(5): call 0xfffebcb2(%rip)
16c33(5): mov 0x38(%rsp),%rdi
16c38(3): mov %r14,%rdx
16c3b(2): mov %eax,%esi
16c3d(5): call 0xfffebb53(%rip)
16c42(4): cmp $0xffffffff,%rax
16c46(6): jz 0xffffff69(%rip)
16c4c(5): movzx 0x60(%rsp),%eax
16c51(4): add $0x1,%rbp
16c55(5): mov $0x1,0x0(%r12,%rax,1)
16c5a(4): cmp 0x28(%r15),%rbp
16c5e(6): jl 0xffffff5f(%rip)
16c64(3): mov %r13d,%ebx
16c67(3): mov %r12,%rbp
16c6a(5): jmp 0xfffffd7d(%rip)
16c6f(5): mov 0x40(%rsp),%r12
16c74(5): mov 0x48(%rsp),%r13
16c79(5): mov $0x0,0x54(%rsp)
16c7e(2): nop 
16c80(2): xor %edi,%edi
16c82(8): mov $0x0,(%r12)
16c8a(3): mov %r12,%rcx
16c8d(5): mov $0x1,%edx
16c92(3): mov %r13,%rsi
16c95(5): call 0xffff954b(%rip)
16c9a(4): cmp $0xfffffffe,%rax
16c9e(2): jnz 0xc(%rip)
16ca0(5): movzx 0x54(%rsp),%eax
16ca5(5): mov $0x1,0x0(%rbp,%rax,1)
16caa(5): add $0x1,0x54(%rsp)
16caf(2): jnz 0xffffffd1(%rip)
16cb1(5): jmp 0xfffffd36(%rip)
16cb6(3): mov %rbp,%r13
16cb9(3): xor %r12d,%r12d
16cbc(9): mov $0x0,0x18(%rsp)
16cc5(5): mov 0x10(%rsp),%rax
16cca(5): mov 0x18(%rsp),%rsi
16ccf(3): xor %r14d,%r14d
16cd2(4): mov 0x0(%rcx,%rax,1),%rax
16cd6(4): mov 0x0(%rax,%rsi,1),%r15
16cda(6): nop 0x0(%rax,%rax,1)
16ce0(4): bt %r14,%r15
16ce4(2): jnb 0x21(%rip)
16ce6(2): test %ebx,%ebx
16ce8(6): mov $0x1,0x0(%r13,%r14,1)
16cee(2): jz 0x17(%rip)
16cf0(5): call 0xfffebcf0(%rip)
16cf5(3): mov (%rax),%rax
16cf8(4): lea 0x0(%r12,%r14,1),%rdx
16cfc(4): movsxd 0x0(%rax,%rdx,4),%rax
16d00(5): mov $0x1,0x0(%rbp,%rax,1)
16d05(4): add $0x1,%r14
16d09(4): cmp $0x40,%r14
16d0d(2): jnz 0xffffffd3(%rip)
16d0f(4): add $0x40,%r12
16d13(6): add $0x8,0x18(%rsp)
16d19(4): add $0x40,%r13
16d1d(7): cmp $0x100,%r12
16d24(6): jz 0xfffffcc3(%rip)
16d2a(5): mov 0x8(%rsp),%rax
16d2f(3): mov (%rax),%rcx
16d32(2): jmp 0xffffff93(%rip)
16d34(8): movdqa 0xc2c4(%rip),%xmm0
16d3c(4): movups %xmm0,0x0(%rbp)
16d40(4): movups %xmm0,0x10(%rbp)
16d44(4): movups %xmm0,0x20(%rbp)
16d48(4): movups %xmm0,0x30(%rbp)
16d4c(4): movups %xmm0,0x40(%rbp)
16d50(4): movups %xmm0,0x50(%rbp)
16d54(4): movups %xmm0,0x60(%rbp)
16d58(4): movups %xmm0,0x70(%rbp)
16d5c(7): movups %xmm0,0x80(%rbp)
16d63(7): movups %xmm0,0x90(%rbp)
16d6a(7): movups %xmm0,0xa0(%rbp)
16d71(7): movups %xmm0,0xb0(%rbp)
16d78(7): movups %xmm0,0xc0(%rbp)
16d7f(7): movups %xmm0,0xd0(%rbp)
16d86(7): movups %xmm0,0xe0(%rbp)
16d8d(7): movups %xmm0,0xf0(%rbp)
16d94(5): mov 0x30(%rsp),%rax
16d99(4): or $0x1,0x38(%rax)
16d9d(8): mov 0x168(%rsp),%rax
16da5(9): xor $0x28,%rax
16dae(6): jnz 0x94(%rip)
16db4(7): add $0x178,%rsp
16dbb(1): pop %rbx
16dbc(1): pop %rbp
16dbd(2): pop %r12
16dbf(2): pop %r13
16dc1(2): pop %r14
16dc3(2): pop %r15
16dc5(1): ret near (%rsp)
16dc6(5): mov 0x38(%rsp),%rax
16dcb(4): add $0x1,%rax
16dcf(5): jmp 0xfffffd25(%rip)
16dd4(8): movdqa 0xc224(%rip),%xmm0
16ddc(3): cmp $0x2,%eax
16ddf(4): movups %xmm0,0x0(%rbp)
16de3(4): movups %xmm0,0x10(%rbp)
16de7(4): movups %xmm0,0x20(%rbp)
16deb(4): movups %xmm0,0x30(%rbp)
16def(4): movups %xmm0,0x40(%rbp)
16df3(4): movups %xmm0,0x50(%rbp)
16df7(4): movups %xmm0,0x60(%rbp)
16dfb(4): movups %xmm0,0x70(%rbp)
16dff(7): movups %xmm0,0x80(%rbp)
16e06(7): movups %xmm0,0x90(%rbp)
16e0d(7): movups %xmm0,0xa0(%rbp)
16e14(7): movups %xmm0,0xb0(%rbp)
16e1b(7): movups %xmm0,0xc0(%rbp)
16e22(7): movups %xmm0,0xd0(%rbp)
16e29(7): movups %xmm0,0xe0(%rbp)
16e30(7): movups %xmm0,0xf0(%rbp)
16e37(6): jnz 0xffffff66(%rip)
16e3d(5): jmp 0xffffff57(%rip)
16e42(5): call 0xfffeb71e(%rip)

"check_node_accept_bytes.isra.31" :
16e50(4): shl/sal $0x4,%rdx
16e54(2): push %r13
16e56(2): push %r12
16e58(4): lea 0x0(%rdi,%rdx,1),%r9
16e5c(1): push %rbp
16e5d(1): push %rbx
16e5e(4): sub $0x8,%rsp
16e62(5): movzx 0x8(%r9),%r11d
16e67(4): cmp $0x7,%r11b
16e6b(6): jz 0x115(%rip)
16e71(7): cmp $0x1,0x90(%rcx)
16e78(6): jz 0xc8(%rip)
16e7e(3): mov %rsi,%rbx
16e81(3): mov %rcx,%rdi
16e84(3): mov %r8,%rsi
16e87(3): mov %rcx,%r10
16e8a(5): call 0xffffb766(%rip)
16e8f(4): cmp $0x5,%r11b
16e93(2): mov %eax,%ebp
16e95(6): jz 0xbb(%rip)
16e9b(4): cmp $0x6,%r11b
16e9f(6): jnz 0xa1(%rip)
16ea5(3): cmp $0x1,%eax
16ea8(6): jle 0x98(%rip)
16eae(3): mov (%r9),%r13
16eb1(4): mov 0x40(%r13),%rsi
16eb5(4): mov 0x28(%r13),%rdx
16eb9(3): test %rsi,%rsi
16ebc(2): jnz 0xd(%rip)
16ebe(5): cmp $0x0,0x48(%r13)
16ec3(6): jz 0xf5(%rip)
16ec9(4): mov 0x10(%r10),%rax
16ecd(3): test %rdx,%rdx
16ed0(4): mov 0x0(%rax,%r8,4),%r12d
16ed4(2): jle 0x23(%rip)
16ed6(4): mov 0x0(%r13),%rcx
16eda(3): cmp (%rcx),%r12d
16edd(2): jz 0x55(%rip)
16edf(2): xor %eax,%eax
16ee1(2): jmp 0xd(%rip)
16ee3(5): nop 0x0(%rax,%rax,1)
16ee8(4): cmp 0x0(%rcx,%rax,4),%r12d
16eec(2): jz 0x46(%rip)
16eee(4): add $0x1,%rax
16ef2(3): cmp %rdx,%rax
16ef5(2): jnz 0xfffffff3(%rip)
16ef7(4): mov 0x48(%r13),%rax
16efb(3): test %rax,%rax
16efe(6): jle 0xde(%rip)
16f04(2): xor %ebx,%ebx
16f06(2): jmp 0x18(%rip)
16f08(8): nop 0x0(%rax,%rax,1)
16f10(4): add $0x1,%rbx
16f14(4): cmp 0x48(%r13),%rbx
16f18(6): jnl 0xc0(%rip)
16f1e(4): mov 0x18(%r13),%rax
16f22(3): mov %r12d,%edi
16f25(4): mov 0x0(%rax,%rbx,8),%rsi
16f29(5): call 0xfffeb5b7(%rip)
16f2e(2): test %eax,%eax
16f30(2): jz 0xffffffe0(%rip)
16f32(5): test $0x1,0x20(%r13)
16f37(2): jz 0xb(%rip)
16f39(7): nop 0x0(%rax)
16f40(2): xor %ebp,%ebp
16f42(4): add $0x8,%rsp
16f46(2): mov %ebp,%eax
16f48(1): pop %rbx
16f49(1): pop %rbp
16f4a(2): pop %r12
16f4c(2): pop %r13
16f4e(1): ret near (%rsp)
16f4f(1): nop 
16f50(3): cmp $0x1,%eax
16f53(2): jle 0xffffffed(%rip)
16f55(3): mov (%rbx),%rax
16f58(2): test $0x40,%al
16f5a(2): jz 0x16(%rip)
16f5c(2): test $0x80,%al
16f5e(2): jz 0xffffffe4(%rip)
16f60(4): mov 0x8(%r10),%rax
16f64(5): cmp $0x0,0x0(%rax,%r8,1)
16f69(2): jz 0xffffffd7(%rip)
16f6b(2): jmp 0xffffffd7(%rip)
16f6d(3): nop (%rax)
16f70(4): mov 0x8(%r10),%rdx
16f74(5): cmp $0xa,0x0(%rdx,%r8,1)
16f79(2): jnz 0xffffffe3(%rip)
16f7b(2): jmp 0xffffffc5(%rip)
16f7d(3): nop (%rax)
16f80(4): mov 0x8(%rcx),%rdx
16f84(4): lea 0x0(%rdx,%r8,1),%rsi
16f88(3): movzx (%rsi),%eax
16f8b(2): cmp $0xc1,%al
16f8d(2): jbe 0xffffffb3(%rip)
16f8f(4): mov 0x58(%rcx),%rcx
16f93(4): lea 0x1(%r8),%rdi
16f97(3): cmp %rcx,%rdi
16f9a(2): jnl 0xffffffa6(%rip)
16f9c(2): cmp $0xdf,%al
16f9e(6): movzx 0x1(%rdx,%r8,1),%edx
16fa4(2): jnbe 0x6a(%rip)
16fa6(3): add $0x80,%edx
16fa9(5): mov $0x2,%ebp
16fae(3): cmp $0x3f,%dl
16fb1(2): jnbe 0xffffff8f(%rip)
16fb3(2): jmp 0xffffff8f(%rip)
16fb5(3): nop (%rax)
16fb8(3): test %rdx,%rdx
16fbb(6): jnz 0xffffff0e(%rip)
16fc1(5): test $0x1,0x20(%r13)
16fc6(6): jnz 0xffffff7c(%rip)
16fcc(5): jmp 0xffffff74(%rip)
16fd1(7): nop 0x0(%rax)
16fd8(4): mov 0x40(%r13),%rsi
16fdc(3): test %rsi,%rsi
16fdf(2): jle 0xffffffe2(%rip)
16fe1(4): mov 0x8(%r13),%rdx
16fe5(2): xor %eax,%eax
16fe7(2): jmp 0x12(%rip)
16fe9(7): nop 0x0(%rax)
16ff0(4): add $0x1,%rax
16ff4(3): cmp %rsi,%rax
16ff7(2): jz 0xffffffca(%rip)
16ff9(4): cmp 0x0(%rdx,%rax,4),%r12d
16ffd(2): jl 0xfffffff3(%rip)
16fff(4): mov 0x10(%r13),%rcx
17003(4): cmp 0x0(%rcx,%rax,4),%r12d
17007(2): jnle 0xffffffe9(%rip)
17009(5): jmp 0xffffff29(%rip)
1700e(2): cmp $0xef,%al
17010(2): jnbe 0x48(%rip)
17012(2): cmp $0xe0,%al
17014(2): jnz 0xb(%rip)
17016(3): cmp $0x9f,%dl
17019(6): jbe 0xffffff27(%rip)
1701f(5): mov $0x3,%ebp
17024(3): movsxd %ebp,%rdi
17027(3): add %rdi,%r8
1702a(3): cmp %r8,%rcx
1702d(6): jl 0xffffff13(%rip)
17033(5): mov $0x1,%eax
17038(2): jmp 0xf(%rip)
1703a(4): add $0x1,%rax
1703e(3): cmp %rax,%rdi
17041(6): jle 0xffffff01(%rip)
17047(4): movzx 0x0(%rsi,%rax,1),%ebx
1704b(3): lea 0xffffff80(%rbx),%edx
1704e(3): cmp $0x3f,%dl
17051(2): jbe 0xffffffe9(%rip)
17053(5): jmp 0xfffffeed(%rip)
17058(2): cmp $0xf7,%al
1705a(2): jnbe 0x16(%rip)
1705c(2): cmp $0xf0,%al
1705e(2): jnz 0xb(%rip)
17060(3): cmp $0x8f,%dl
17063(6): jbe 0xfffffedd(%rip)
17069(5): mov $0x4,%ebp
1706e(2): jmp 0xffffffb6(%rip)
17070(2): cmp $0xfb,%al
17072(2): jnbe 0x16(%rip)
17074(2): cmp $0xf8,%al
17076(2): jnz 0xb(%rip)
17078(3): cmp $0x87,%dl
1707b(6): jbe 0xfffffec5(%rip)
17081(5): mov $0x5,%ebp
17086(2): jmp 0xffffff9e(%rip)
17088(2): cmp $0xfd,%al
1708a(6): jnbe 0xfffffeb6(%rip)
17090(2): cmp $0xfc,%al
17092(2): jnz 0xb(%rip)
17094(3): cmp $0x83,%dl
17097(6): jbe 0xfffffea9(%rip)
1709d(5): mov $0x6,%ebp
170a2(2): jmp 0xffffff82(%rip)

"check_arrival" :
170b0(2): push %r15
170b2(2): push %r14
170b4(3): mov %rdi,%r15
170b7(2): push %r13
170b9(2): push %r12
170bb(1): push %rbp
170bc(1): push %rbx
170bd(3): mov %rcx,%rbp
170c0(3): mov %rdx,%rbx
170c3(7): sub $0xd8,%rsp
170ca(7): mov 0x98(%rdi),%rcx
170d1(4): mov 0x8(%rsi),%r13
170d5(9): mov $0x28,%rax
170de(8): mov %rax,0xc8(%rsp)
170e6(2): xor %eax,%eax
170e8(3): mov %rdx,%rax
170eb(5): mov %rsi,0x60(%rsp)
170f0(5): mov %r8,0x78(%rsp)
170f5(4): shl/sal $0x4,%rax
170f9(3): add (%rcx),%rax
170fc(5): mov %r9,0x40(%rsp)
17101(5): mov %rcx,0x30(%rsp)
17106(b): mov $0x0,0x88(%rsp)
17111(3): mov (%rax),%rax
17114(5): mov %rax,0x48(%rsp)
17119(7): movsxd 0xe0(%rdi),%rax
17120(3): add %r9,%rax
17123(3): cmp %r13,%rax
17126(6): jnl 0x620(%rip)
1712c(5): mov 0x60(%rsp),%rax
17131(7): mov 0xb8(%r15),%rdx
17138(4): mov 0x48(%r15),%rcx
1713c(3): mov (%rax),%r12
1713f(4): mov 0x10(%rax),%r14
17143(5): mov %rdx,0x68(%rsp)
17148(5): mov %rcx,0x70(%rsp)
1714d(7): mov 0xa0(%r15),%edx
17154(3): test %r12,%r12
17157(7): mov %r14,0xb8(%r15)
1715e(6): jz 0x3e2(%rip)
17164(5): lea 0xffffffff(%r12),%rsi
17169(4): mov %r12,0x48(%r15)
1716d(3): mov %r15,%rdi
17170(5): call 0xffffd310(%rip)
17175(3): cmp %rbp,%r12
17178(3): mov %eax,%r13d
1717b(6): jz 0x3d8(%rip)
17181(4): mov 0x0(%r14,%r12,8),%rbp
17185(3): test %rbp,%rbp
17188(2): jz 0xc(%rip)
1718a(4): test $0x40,0x68(%rbp)
1718e(6): jnz 0x522(%rip)
17194(4): pxor %xmm0,%xmm0
17198(c): mov $0x0,0xa0(%rsp)
171a4(8): movaps %xmm0,0x90(%rsp)
171ac(5): cmp 0x40(%rsp),%r12
171b1(6): jnl 0x327(%rip)
171b7(7): mov 0xe0(%r15),%ecx
171be(2): test %ecx,%ecx
171c0(6): js 0x318(%rip)
171c6(8): lea 0x90(%rsp),%rbx
171ce(8): lea 0x8(,%r12,8),%rax
171d6(4): mov %r12,(%rsp)
171da(9): mov $0x0,0x20(%rsp)
171e3(5): mov %rbx,0x8(%rsp)
171e8(8): lea 0xb0(%rsp),%rbx
171f0(5): mov %rax,0x10(%rsp)
171f5(7): mov 0xb8(%r15),%rax
171fc(5): mov %rbx,0x18(%rsp)
17201(8): lea 0x8c(%rsp),%rbx
17209(5): mov %rbx,0x58(%rsp)
1720e(5): mov 0x10(%rsp),%rcx
17213(c): mov $0x0,0x98(%rsp)
1721f(4): mov 0x0(%rax,%rcx,1),%rsi
17223(3): test %rsi,%rsi
17226(6): jz 0x3c2(%rip)
1722c(5): mov 0x8(%rsp),%rdi
17231(4): add $0x8,%rsi
17235(5): call 0xffffb98b(%rip)
1723a(2): test %eax,%eax
1723c(7): mov %eax,0x88(%rsp)
17243(6): jnz 0x3dd(%rip)
17249(3): test %rbp,%rbp
1724c(6): jz 0x1ac(%rip)
17252(5): cmp $0x0,0x28(%rbp)
17257(5): mov 0x18(%rsp),%rax
1725c(4): pxor %xmm0,%xmm0
17260(7): mov 0x98(%r15),%r12
17267(b): mov $0x0,0x8c(%rsp)
17272(8): mov $0x0,0x10(%rax)
1727a(3): movaps %xmm0,(%rax)
1727d(6): jle 0x533(%rip)
17283(8): lea 0xd8(%r12),%rax
1728b(2): xor %ebx,%ebx
1728d(5): mov %rax,0x28(%rsp)
17292(2): jmp 0x47(%rip)
17294(4): nop 0x0(%rax)
17298(4): mov (%rsp),%rdx
1729c(3): mov %r15,%rdi
1729f(5): call 0xffffd2d1(%rip)
172a4(2): test %al,%al
172a6(2): jz 0x25(%rip)
172a8(8): lea 0x0(,%r14,8),%r13
172b0(5): mov 0x18(%r12),%rax
172b5(5): mov 0x8(%rsp),%rdi
172ba(4): mov 0x0(%rax,%r13,1),%rsi
172be(5): call 0xffff9ea2(%rip)
172c3(2): test %al,%al
172c5(6): jz 0x343(%rip)
172cb(4): add $0x1,%rbx
172cf(4): cmp 0x28(%rbp),%rbx
172d3(6): jnl 0x38d(%rip)
172d9(4): mov 0x30(%rbp),%rax
172dd(4): mov (%r12),%rdi
172e1(4): mov 0x0(%rax,%rbx,8),%r14
172e5(3): mov %r14,%r13
172e8(4): shl/sal $0x4,%r13
172ec(4): lea 0x0(%rdi,%r13,1),%rsi
172f0(4): test $0x10,0xa(%rsi)
172f4(2): jz 0xffffffa4(%rip)
172f6(4): mov (%rsp),%r8
172fa(5): mov 0x28(%rsp),%rsi
172ff(3): mov %r15,%rcx
17302(3): mov %r14,%rdx
17305(5): call 0xfffffb4b(%rip)
1730a(3): cmp $0x1,%eax
1730d(6): jle 0x2c3(%rip)
17313(2): cwde 
17315(4): add (%rsp),%rax
17319(5): mov 0x18(%r12),%rdx
1731e(8): lea 0x0(,%r14,8),%r13
17326(4): mov 0x0(%rdx,%r14,8),%rdx
1732a(3): mov %rax,%rcx
1732d(5): mov %rax,0x38(%rsp)
17332(8): lea 0x0(,%rax,8),%r14
1733a(7): mov 0xb8(%r15),%rax
17341(4): mov 0x0(%rax,%rcx,8),%rsi
17345(c): mov $0x0,0xb8(%rsp)
17351(3): test %rsi,%rsi
17354(2): jz 0x25(%rip)
17356(5): mov 0x18(%rsp),%rdi
1735b(4): add $0x8,%rsi
1735f(5): mov %rdx,0x50(%rsp)
17364(5): call 0xffffb85c(%rip)
17369(2): test %eax,%eax
1736b(7): mov %eax,0x8c(%rsp)
17372(5): mov 0x50(%rsp),%rdx
17377(2): jnz 0x59(%rip)
17379(5): mov 0x18(%rsp),%rdi
1737e(3): mov %rdx,%rsi
17381(5): call 0xffff9ddf(%rip)
17386(2): test %al,%al
17388(6): jz 0x280(%rip)
1738e(7): add 0xb8(%r15),%r14
17395(5): mov 0x18(%rsp),%rdx
1739a(3): mov %r12,%rsi
1739d(5): mov 0x58(%rsp),%rdi
173a2(5): call 0xffffc90e(%rip)
173a7(5): mov 0x38(%rsp),%rdx
173ac(3): mov %rax,(%r14)
173af(7): mov 0xb8(%r15),%rax
173b6(5): cmp $0x0,0x0(%rax,%rdx,8)
173bb(6): jnz 0xfffffef5(%rip)
173c1(7): mov 0x8c(%rsp),%edx
173c8(2): test %edx,%edx
173ca(6): jz 0xfffffee6(%rip)
173d0(8): mov 0xc0(%rsp),%rdi
173d8(5): call 0xfffeb638(%rip)
173dd(7): mov 0x8c(%rsp),%eax
173e4(2): test %eax,%eax
173e6(7): mov %eax,0x88(%rsp)
173ed(6): jnz 0x233(%rip)
173f3(5): nop 0x0(%rax,%rax,1)
173f8(4): mov (%rsp),%rax
173fc(9): cmp $0x0,0x98(%rsp)
17405(4): lea 0x1(%rax),%rbx
17409(3): mov %rbx,%r12
1740c(2): jz 0x58(%rip)
1740e(7): mov 0x110(%rsp),%ecx
17415(5): mov 0x48(%rsp),%rdx
1741a(5): mov 0x8(%rsp),%rsi
1741f(5): mov 0x30(%rsp),%rdi
17424(5): call 0xffffbc2c(%rip)
17429(2): test %eax,%eax
1742b(7): mov %eax,0x88(%rsp)
17432(6): jnz 0x1ee(%rip)
17438(8): mov 0x110(%rsp),%r8d
17440(5): mov 0x48(%rsp),%rcx
17445(3): mov %rbx,%rdx
17448(5): mov 0x8(%rsp),%rsi
1744d(3): mov %r15,%rdi
17450(5): call 0xffffcb40(%rip)
17455(2): test %eax,%eax
17457(7): mov %eax,0x88(%rsp)
1745e(6): jnz 0x1c2(%rip)
17464(7): mov 0xa0(%r15),%edx
1746b(4): mov (%rsp),%rsi
1746f(3): mov %r15,%rdi
17472(5): call 0xffffd00e(%rip)
17477(5): mov 0x8(%rsp),%rdx
1747c(5): mov 0x30(%rsp),%rsi
17481(8): lea 0x88(%rsp),%rdi
17489(2): mov %eax,%ecx
1748b(5): call 0xffffc565(%rip)
17490(3): test %rax,%rax
17493(3): mov %rax,%rbp
17496(6): jz 0x1ea(%rip)
1749c(7): mov 0xb8(%r15),%rax
174a3(5): mov 0x10(%rsp),%rdx
174a8(9): mov $0x0,0x20(%rsp)
174b1(4): mov %rbp,0x0(%rax,%rdx,1)
174b5(5): cmp %rbx,0x40(%rsp)
174ba(2): jle 0x1e(%rip)
174bc(7): movsxd 0xe0(%r15),%rdx
174c3(6): add $0x8,0x10(%rsp)
174c9(5): cmp 0x20(%rsp),%rdx
174ce(4): mov %rbx,(%rsp)
174d2(6): jnl 0xfffffd3c(%rip)
174d8(8): mov 0xa0(%rsp),%rdi
174e0(5): call 0xfffeb530(%rip)
174e5(7): mov 0xb8(%r15),%rax
174ec(5): mov 0x40(%rsp),%rbx
174f1(4): mov 0x0(%rax,%rbx,8),%rax
174f5(3): test %rax,%rax
174f8(6): jz 0x2dd(%rip)
174fe(5): mov 0x60(%rsp),%rbx
17503(5): mov 0x78(%rsp),%rdx
17508(4): lea 0x18(%rax),%rsi
1750c(3): mov %r12,(%rbx)
1750f(5): mov 0x68(%rsp),%rbx
17514(7): mov %rbx,0xb8(%r15)
1751b(5): mov 0x70(%rsp),%rbx
17520(4): mov %rbx,0x48(%r15)
17524(4): mov 0x10(%rax),%rdi
17528(5): call 0xffffb178(%rip)
1752d(3): test %rax,%rax
17530(3): setz %al
17533(3): movzx %al,%eax
17536(5): jmp 0xfe(%rip)
1753b(5): nop 0x0(%rax,%rax,1)
17540(4): lea 0xffffffff(%rbp),%rsi
17544(4): mov %rbp,0x48(%r15)
17548(3): mov %r15,%rdi
1754b(5): call 0xffffcf35(%rip)
17550(3): mov %eax,%r13d
17553(5): mov $0x8,%edi
17558(c): mov $0x1,0x90(%rsp)
17564(c): mov $0x1,0x98(%rsp)
17570(5): call 0xfffeb210(%rip)
17575(3): test %rax,%rax
17578(8): mov %rax,0xa0(%rsp)
17580(6): jz 0x24b(%rip)
17586(3): mov %rbx,(%rax)
17589(7): mov 0x110(%rsp),%ecx
17590(8): lea 0x90(%rsp),%rbx
17598(5): mov 0x48(%rsp),%rdx
1759d(5): mov 0x30(%rsp),%rdi
175a2(3): mov %rbp,%r12
175a5(3): mov %rbx,%rsi
175a8(b): mov $0x0,0x88(%rsp)
175b3(5): call 0xffffba9d(%rip)
175b8(2): test %eax,%eax
175ba(7): mov %eax,0x88(%rsp)
175c1(6): jz 0x11c(%rip)
175c7(2): jmp 0x59(%rip)
175c9(7): nop 0x0(%rax)
175d0(2): test %eax,%eax
175d2(6): jnz 0xfffffcd6(%rip)
175d8(4): mov (%r12),%rsi
175dc(3): add %r13,%rsi
175df(5): jmp 0xfffffcb9(%rip)
175e4(4): nop 0x0(%rax)
175e8(3): test %rbp,%rbp
175eb(6): jnz 0xfffffc67(%rip)
175f1(4): mov (%rsp),%rax
175f5(4): lea 0x1(%rax),%rbx
175f9(3): mov %rbx,%r12
175fc(5): jmp 0xfffffe68(%rip)
17601(7): nop 0x0(%rax)
17608(8): mov 0xc0(%rsp),%rdi
17610(5): call 0xfffeb400(%rip)
17615(b): mov $0xc,0x88(%rsp)
17620(8): mov 0xa0(%rsp),%rdi
17628(5): call 0xfffeb3e8(%rip)
1762d(7): mov 0x88(%rsp),%eax
17634(8): mov 0xc8(%rsp),%rbx
1763c(9): xor $0x28,%rbx
17645(6): jnz 0x1b7(%rip)
1764b(7): add $0xd8,%rsp
17652(1): pop %rbx
17653(1): pop %rbp
17654(2): pop %r12
17656(2): pop %r13
17658(2): pop %r14
1765a(2): pop %r15
1765c(1): ret near (%rsp)
1765d(3): nop (%rax)
17660(8): mov 0xc0(%rsp),%rdi
17668(5): call 0xfffeb3a8(%rip)
1766d(b): mov $0x0,0x88(%rsp)
17678(5): jmp 0xfffffd80(%rip)
1767d(3): nop (%rax)
17680(7): mov 0x88(%rsp),%eax
17687(2): test %eax,%eax
17689(2): jnz 0xffffff97(%rip)
1768b(7): mov 0xb8(%r15),%rax
17692(5): mov 0x10(%rsp),%rdx
17697(6): add $0x1,0x20(%rsp)
1769d(8): mov $0x0,0x0(%rax,%rdx,1)
176a5(5): jmp 0xfffffe10(%rip)
176aa(6): nop 0x0(%rax,%rax,1)
176b0(8): lea 0x90(%rsp),%rbx
176b8(4): lea 0x8(%rbp),%rsi
176bc(3): mov %rbx,%rdi
176bf(5): call 0xffffc141(%rip)
176c4(2): test %eax,%eax
176c6(7): mov %eax,0x88(%rsp)
176cd(6): jnz 0xffffff67(%rip)
176d3(4): test $0x40,0x68(%rbp)
176d7(6): jz 0xfffffad5(%rip)
176dd(9): cmp $0x0,0x98(%rsp)
176e6(2): jz 0x2c(%rip)
176e8(8): mov 0x110(%rsp),%r8d
176f0(5): mov 0x48(%rsp),%rcx
176f5(3): mov %r12,%rdx
176f8(3): mov %rbx,%rsi
176fb(3): mov %r15,%rdi
176fe(5): call 0xffffc892(%rip)
17703(2): test %eax,%eax
17705(7): mov %eax,0x88(%rsp)
1770c(6): jnz 0xffffff14(%rip)
17712(5): mov 0x30(%rsp),%rsi
17717(8): lea 0x88(%rsp),%rdi
1771f(3): mov %r13d,%ecx
17722(3): mov %rbx,%rdx
17725(5): call 0xffffc2cb(%rip)
1772a(3): test %rax,%rax
1772d(3): mov %rax,%rbp
17730(6): jz 0x87(%rip)
17736(7): mov 0xb8(%r15),%rax
1773d(4): mov %rbp,0x0(%rax,%r12,8)
17741(5): jmp 0xfffffa6b(%rip)
17746(4): lea 0x1(%rax),%r12
1774a(a): mov $0x9223372036854775807,%rax
17754(3): sub %r13,%rax
17757(3): cmp %r12,%rax
1775a(2): jl 0x71(%rip)
1775c(5): lea 0x0(%r13,%r12,1),%r14
17761(a): mov $0x2305843009213693951,%rax
1776b(3): cmp %rax,%r14
1776e(2): jnbe 0x5d(%rip)
17770(5): mov 0x60(%rsp),%rax
17775(8): lea 0x0(,%r14,8),%rsi
1777d(4): mov 0x10(%rax),%rdi
17781(5): call 0xfffeb0af(%rip)
17786(3): test %rax,%rax
17789(2): jz 0x42(%rip)
1778b(5): mov 0x60(%rsp),%rcx
17790(8): lea 0x0(,%r12,8),%rdx
17798(4): lea 0x0(%rax,%r13,8),%rdi
1779c(2): xor %esi,%esi
1779e(4): mov %rax,0x10(%rcx)
177a2(4): mov %r14,0x8(%rcx)
177a6(5): call 0xfffeae7a(%rip)
177ab(5): jmp 0xfffff981(%rip)
177b0(2): xor %edi,%edi
177b2(5): jmp 0xfffffeb6(%rip)
177b7(7): mov 0x88(%rsp),%esi
177be(2): test %esi,%esi
177c0(6): jz 0xffffff76(%rip)
177c6(5): jmp 0xfffffe5a(%rip)
177cb(5): mov $0xc,%eax
177d0(5): jmp 0xfffffe64(%rip)
177d5(5): mov 0x60(%rsp),%rax
177da(3): mov %r12,(%rax)
177dd(5): mov 0x68(%rsp),%rax
177e2(7): mov %rax,0xb8(%r15)
177e9(5): mov 0x70(%rsp),%rax
177ee(4): mov %rax,0x48(%r15)
177f2(5): mov $0x1,%eax
177f7(5): jmp 0xfffffe3d(%rip)
177fc(5): call 0xfffead64(%rip)

"set_regs" :
17810(1): push %rbp
17811(3): mov %rsp,%rbp
17814(2): push %r15
17816(2): push %r14
17818(2): push %r13
1781a(2): push %r12
1781c(3): mov %rcx,%r13
1781f(1): push %rbx
17820(3): mov %rsi,%r12
17823(7): sub $0xb8,%rsp
1782a(7): mov %rdx,0xffffff68(%rbp)
17831(8): mov $0x0,0xffffffb0(%rbp)
17839(9): mov $0x28,%rax
17842(4): mov %rax,0xffffffc8(%rbp)
17846(2): xor %eax,%eax
17848(3): mov (%rdi),%rax
1784b(3): test %r8b,%r8b
1784e(8): mov $0x2,0xffffffb8(%rbp)
17856(8): mov $0x0,0xffffffc0(%rbp)
1785e(7): mov %rax,0xffffff70(%rbp)
17865(6): jz 0x7a8(%rip)
1786b(5): mov $0x60,%edi
17870(5): call 0xfffeaf10(%rip)
17875(4): lea 0xffffffb0(%rbp),%rcx
17879(3): test %rax,%rax
1787c(4): mov %rax,0xffffffc0(%rbp)
17880(7): mov %rcx,0xffffff78(%rbp)
17887(6): jz 0x725(%rip)
1788d(7): mov 0xffffff70(%rbp),%rax
17894(4): pxor %xmm0,%xmm0
17898(8): mov $0x0,0xffffffa0(%rbp)
178a0(7): mov 0x90(%rax),%rbx
178a7(7): mov 0xffffff68(%rbp),%rax
178ae(4): movaps %xmm0,0xffffff90(%rbp)
178b2(4): shl/sal $0x4,%rax
178b6(6): cmp $0xfbf,%rax
178bc(7): mov %rax,0xffffff48(%rbp)
178c3(6): jnbe 0x6f3(%rip)
178c9(4): add $0x10,%rax
178cd(7): mov $0x0,0xffffff37(%rbp)
178d4(3): sub %rax,%rsp
178d7(5): lea 0xf(%rsp),%rax
178dc(4): and $0xfffffff0,%rax
178e0(7): mov %rax,0xffffff40(%rbp)
178e7(7): mov 0xffffff48(%rbp),%rdx
178ee(7): mov 0xffffff40(%rbp),%rdi
178f5(3): mov %r13,%rsi
178f8(5): call 0xfffeae18(%rip)
178fd(4): lea 0xffffff90(%rbp),%rax
17901(4): mov 0x0(%r13),%rcx
17905(7): mov %rax,0xffffff58(%rbp)
1790c(4): add $0x10,%rax
17910(4): mov %rcx,0xffffff88(%rbp)
17914(7): mov %rax,0xffffff38(%rbp)
1791b(4): lea 0xffffff88(%rbp),%rax
1791f(7): mov %rax,0xffffff50(%rbp)
17926(5): jmp 0xe3(%rip)
1792b(5): nop 0x0(%rax,%rax,1)
17930(3): cmp $0x9,%esi
17933(6): jz 0x1ed(%rip)
17939(3): cmp %rcx,%rax
1793c(2): jnz 0x10(%rip)
1793e(8): cmp %rbx,0xb0(%r12)
17946(6): jz 0x3da(%rip)
1794c(8): mov 0x98(%r12),%r14
17954(3): mov (%r14),%rdi
17957(4): lea 0x0(%rdi,%r9,1),%rsi
1795b(4): movzx 0x8(%rsi),%eax
1795f(2): test $0x8,%al
17961(6): jnz 0x10f(%rip)
17967(4): test $0x10,0xa(%rsi)
1796b(6): jnz 0x205(%rip)
17971(2): cmp $0x4,%al
17973(6): jz 0x23d(%rip)
17979(4): mov 0xffffff88(%rbp),%rcx
1797d(3): mov %rcx,%rdx
17980(3): mov %r12,%rdi
17983(7): mov %rcx,0xffffff60(%rbp)
1798a(5): call 0xffffcbe6(%rip)
1798f(2): test %al,%al
17991(7): mov 0xffffff60(%rbp),%rcx
17998(6): jz 0x450(%rip)
1799e(4): mov 0x18(%r14),%rax
179a2(4): lea 0x1(%rcx),%rdx
179a6(4): mov 0x0(%rax,%r15,8),%rbx
179aa(8): cmp $0x0,0xffffff78(%rbp)
179b2(4): mov %rdx,0xffffff88(%rbp)
179b6(2): jz 0x3e(%rip)
179b8(8): cmp 0xa8(%r12),%rdx
179c0(6): jnle 0x436(%rip)
179c6(8): mov 0xb8(%r12),%rax
179ce(4): mov 0x0(%rax,%rdx,8),%rax
179d2(3): test %rax,%rax
179d5(6): jz 0x421(%rip)
179db(4): mov 0x10(%rax),%rdi
179df(4): lea 0x18(%rax),%rsi
179e3(3): mov %rbx,%rdx
179e6(5): call 0xffffacba(%rip)
179eb(3): test %rax,%rax
179ee(6): jz 0x408(%rip)
179f4(8): mov $0x0,0xffffff98(%rbp)
179fc(3): test %rbx,%rbx
179ff(6): js 0x3db(%rip)
17a05(4): mov 0xffffff88(%rbp),%rcx
17a09(4): mov 0x8(%r13),%rax
17a0d(3): cmp %rcx,%rax
17a10(6): jl 0x4f0(%rip)
17a16(7): mov 0xffffff70(%rbp),%rdi
17a1d(3): mov %rbx,%r9
17a20(3): mov %rbx,%r15
17a23(4): shl/sal $0x4,%r9
17a27(3): mov (%rdi),%rdx
17a2a(3): add %r9,%rdx
17a2d(4): movzx 0x8(%rdx),%esi
17a31(3): cmp $0x8,%esi
17a34(6): jnz 0xfffffefc(%rip)
17a3a(3): mov (%rdx),%rdx
17a3d(4): add $0x1,%rdx
17a41(7): cmp %rdx,0xffffff68(%rbp)
17a48(6): jle 0xfffffef1(%rip)
17a4e(4): shl/sal $0x4,%rdx
17a52(3): add %r13,%rdx
17a55(8): mov $0xffffffff,0x8(%rdx)
17a5d(3): mov %rcx,(%rdx)
17a60(4): mov 0x8(%r13),%rax
17a64(5): jmp 0xfffffed5(%rip)
17a69(7): nop 0x0(%rax)
17a70(8): mov 0xb8(%r12),%rax
17a78(4): mov 0xffffff88(%rbp),%rdx
17a7c(3): mov %rbx,%rsi
17a7f(7): mov 0xffffff58(%rbp),%rdi
17a86(4): mov 0x0(%rax,%rdx,8),%r9
17a8a(4): mov 0x28(%r14),%rax
17a8e(4): lea 0x0(%rbx,%rbx,2),%rdx
17a92(7): mov %r9,0xffffff60(%rbp)
17a99(4): lea 0x0(%rax,%rdx,8),%r15
17a9d(5): call 0xffff96c3(%rip)
17aa2(2): test %al,%al
17aa4(7): mov 0xffffff60(%rbp),%r9
17aab(6): jz 0x4dd(%rip)
17ab1(4): mov 0x8(%r15),%r10
17ab5(3): test %r10,%r10
17ab8(6): jle 0x330(%rip)
17abe(4): mov 0x10(%r15),%r15
17ac2(4): mov 0x10(%r9),%r11
17ac6(4): lea 0x18(%r9),%r14
17aca(7): mov $0xffffffff,%rbx
17ad1(3): xor %r9d,%r9d
17ad4(7): mov %r12,0xffffff60(%rbp)
17adb(5): nop 0x0(%rax,%rax,1)
17ae0(4): mov 0x0(%r15,%r9,8),%r12
17ae4(3): mov %r14,%rsi
17ae7(3): mov %r11,%rdi
17aea(3): mov %r12,%rdx
17aed(5): call 0xffffabb3(%rip)
17af2(3): test %rax,%rax
17af5(2): jz 0xf(%rip)
17af7(4): cmp $0xffffffff,%rbx
17afb(6): jnz 0x155(%rip)
17b01(3): mov %r12,%rbx
17b04(4): add $0x1,%r9
17b08(3): cmp %r9,%r10
17b0b(2): jnz 0xffffffd5(%rip)
17b0d(7): mov 0xffffff60(%rbp),%r12
17b14(5): jmp 0xfffffee8(%rip)
17b19(7): nop 0x0(%rax)
17b20(3): mov (%rdx),%rdi
17b23(4): lea 0x1(%rdi),%rsi
17b27(7): cmp %rsi,0xffffff68(%rbp)
17b2e(6): jle 0xfffffe0b(%rip)
17b34(4): shl/sal $0x4,%rsi
17b38(5): lea 0x0(%r13,%rsi,1),%rax
17b3d(3): cmp %rcx,(%rax)
17b40(6): jl 0x380(%rip)
17b46(4): test $0x8,0xa(%rdx)
17b4a(2): jz 0x14(%rip)
17b4c(7): mov 0xffffff40(%rbp),%rdi
17b53(5): cmp $0xffffffff,0x0(%rdi,%rsi,1)
17b58(6): jnz 0x3f3(%rip)
17b5e(4): mov %rcx,0x8(%rax)
17b62(4): mov 0x8(%r13),%rax
17b66(5): jmp 0xfffffdd3(%rip)
17b6b(5): nop 0x0(%rax,%rax,1)
17b70(4): mov 0xffffff88(%rbp),%r8
17b74(7): lea 0xd8(%r14),%rsi
17b7b(3): mov %r12,%rcx
17b7e(3): mov %rbx,%rdx
17b81(7): mov %r9,0xffffff60(%rbp)
17b88(5): call 0xfffff2c8(%rip)
17b8d(3): movsxd %eax,%rcx
17b90(3): test %rcx,%rcx
17b93(6): jnz 0x1fe(%rip)
17b99(7): mov 0xffffff60(%rbp),%r9
17ba0(3): mov (%r14),%rsi
17ba3(4): mov 0xffffff88(%rbp),%rcx
17ba7(3): add %r9,%rsi
17baa(5): jmp 0xfffffdd3(%rip)
17baf(1): nop 
17bb0(3): mov (%rsi),%rax
17bb3(4): add $0x1,%rax
17bb7(4): shl/sal $0x4,%rax
17bbb(3): add %r13,%rax
17bbe(4): mov 0x8(%rax),%rdx
17bc2(3): mov (%rax),%rdi
17bc5(3): mov %rdx,%rcx
17bc8(3): sub %rdi,%rcx
17bcb(8): cmp $0x0,0xffffff78(%rbp)
17bd3(6): jz 0x1b5(%rip)
17bd9(4): cmp $0xffffffff,%rdi
17bdd(6): jz 0x219(%rip)
17be3(4): cmp $0xffffffff,%rdx
17be7(6): jz 0x20f(%rip)
17bed(3): test %rcx,%rcx
17bf0(6): jz 0x250(%rip)
17bf6(4): mov 0xffffff88(%rbp),%r15
17bfa(5): mov 0x30(%r12),%rdx
17bff(5): mov 0x8(%r12),%rax
17c04(3): sub %r15,%rdx
17c07(3): cmp %rdx,%rcx
17c0a(6): jnle 0x1ec(%rip)
17c10(4): lea 0x0(%rax,%r15,1),%rsi
17c14(3): add %rax,%rdi
17c17(3): mov %rcx,%rdx
17c1a(7): mov %rcx,0xffffff60(%rbp)
17c21(5): call 0xfffeaa5f(%rip)
17c26(2): test %eax,%eax
17c28(7): mov 0xffffff60(%rbp),%rcx
17c2f(6): jnz 0x1c7(%rip)
17c35(4): mov 0x18(%r14),%rax
17c39(4): lea 0x0(%r15,%rcx,1),%rdx
17c3d(4): mov 0x0(%rax,%rbx,8),%rbx
17c41(5): jmp 0xfffffd69(%rip)
17c46(a): nop 0x0(%rax,%rax,1)
17c50(7): mov 0xffffff38(%rbp),%rsi
17c57(4): mov 0xffffff98(%rbp),%rdi
17c5b(3): mov %rbx,%rdx
17c5e(3): mov %r12,%r14
17c61(7): mov 0xffffff60(%rbp),%r12
17c68(5): call 0xffffaa38(%rip)
17c6d(3): test %rax,%rax
17c70(6): jnz 0x1c0(%rip)
17c76(7): mov 0xffffff78(%rbp),%rcx
17c7d(3): test %rcx,%rcx
17c80(6): jz 0xfffffd7c(%rip)
17c86(3): mov (%rcx),%r15
17c89(4): mov 0xffffff88(%rbp),%rdx
17c8d(4): lea 0x1(%r15),%rax
17c91(4): cmp 0x8(%rcx),%rax
17c95(3): mov %rax,(%rcx)
17c98(6): jz 0x385(%rip)
17c9e(4): mov 0x10(%rcx),%rax
17ca2(4): lea 0x0(%r15,%r15,2),%r15
17ca6(4): shl/sal $0x4,%r15
17caa(3): add %rax,%r15
17cad(4): mov %r14,0x8(%r15)
17cb1(7): mov 0xffffff48(%rbp),%r14
17cb8(3): mov %rdx,(%r15)
17cbb(3): mov %r14,%rdi
17cbe(5): call 0xfffeaac2(%rip)
17cc3(3): test %rax,%rax
17cc6(4): mov %rax,0x10(%r15)
17cca(2): jz 0x28(%rip)
17ccc(3): mov %r14,%rdx
17ccf(3): mov %r13,%rsi
17cd2(3): mov %rax,%rdi
17cd5(5): call 0xfffeaa3b(%rip)
17cda(7): mov 0xffffff58(%rbp),%rsi
17ce1(4): lea 0x18(%r15),%rdi
17ce5(5): call 0xffffbb1b(%rip)
17cea(2): test %eax,%eax
17cec(6): jz 0xfffffd10(%rip)
17cf2(4): mov 0xffffffa0(%rbp),%rdi
17cf6(5): call 0xfffead1a(%rip)
17cfb(7): cmp $0x0,0xffffff37(%rbp)
17d02(6): jnz 0x399(%rip)
17d08(7): mov 0xffffff78(%rbp),%rdi
17d0f(5): call 0xffffe051(%rip)
17d14(5): mov $0xc,%eax
17d19(5): jmp 0x210(%rip)
17d1e(2): nop 
17d20(8): cmp $0x0,0xffffff78(%rbp)
17d28(6): jz 0x334(%rip)
17d2e(7): mov 0xffffff68(%rbp),%rcx
17d35(3): test %rcx,%rcx
17d38(2): jz 0x22(%rip)
17d3a(3): mov %r13,%rax
17d3d(2): xor %edx,%edx
17d3f(1): nop 
17d40(4): cmp $0x0,(%rax)
17d44(2): js 0x9(%rip)
17d46(5): cmp $0xffffffff,0x8(%rax)
17d4b(2): jz 0x55(%rip)
17d4d(4): add $0x1,%rdx
17d51(4): add $0x10,%rax
17d55(3): cmp %rdx,%rcx
17d58(2): jnz 0xffffffe8(%rip)
17d5a(4): mov 0xffffffa0(%rbp),%rdi
17d5e(5): call 0xfffeacb2(%rip)
17d63(7): cmp $0x0,0xffffff37(%rbp)
17d6a(6): jnz 0x37a(%rip)
17d70(7): mov 0xffffff78(%rbp),%rdi
17d77(5): call 0xffffdfe9(%rip)
17d7c(2): xor %eax,%eax
17d7e(5): jmp 0x1ab(%rip)
17d83(5): nop 0x0(%rax,%rax,1)
17d88(3): test %rcx,%rcx
17d8b(6): jz 0xb5(%rip)
17d91(4): mov 0xffffff88(%rbp),%r15
17d95(5): jmp 0xfffffea0(%rip)
17d9a(6): nop 0x0(%rax,%rax,1)
17da0(7): mov 0xffffff78(%rbp),%rdi
17da7(7): mov 0xffffff58(%rbp),%r9
17dae(3): mov %r13,%r8
17db1(7): mov 0xffffff68(%rbp),%rcx
17db8(7): mov 0xffffff50(%rbp),%rdx
17dbf(4): lea 0x10(%rdi),%rsi
17dc3(5): call 0xffffdfed(%rip)
17dc8(3): mov %rax,%r9
17dcb(3): mov %rax,%rbx
17dce(3): mov %rax,%r15
17dd1(4): shl/sal $0x4,%r9
17dd5(5): jmp 0xfffffb77(%rip)
17dda(4): cmp $0xfffffffe,%rbx
17dde(6): jz 0x1aa(%rip)
17de4(4): nop 0x0(%rax)
17de8(8): cmp $0x0,0xffffff78(%rbp)
17df0(6): jz 0x2bc(%rip)
17df6(7): mov 0xffffff78(%rbp),%rdi
17dfd(7): mov 0xffffff68(%rbp),%rcx
17e04(4): lea 0xffffff88(%rbp),%rdx
17e08(7): mov 0xffffff58(%rbp),%r9
17e0f(3): mov %r13,%r8
17e12(4): lea 0x10(%rdi),%rsi
17e16(5): call 0xffffdf9a(%rip)
17e1b(4): mov 0xffffff88(%rbp),%rcx
17e1f(3): mov %rax,%rbx
17e22(5): jmp 0xfffffaf9(%rip)
17e27(9): nop 0x0(%rax,%rax,1)
17e30(3): mov %r14,%rbx
17e33(5): jmp 0xfffffbc9(%rip)
17e38(8): nop 0x0(%rax,%rax,1)
17e40(7): mov 0xffffff58(%rbp),%rdi
17e47(3): mov %rbx,%rsi
17e4a(7): mov %r9,0xffffff60(%rbp)
17e51(5): call 0xffff930f(%rip)
17e56(2): test %al,%al
17e58(6): jz 0x130(%rip)
17e5e(4): mov 0x28(%r14),%rdx
17e62(4): lea 0x0(%rbx,%rbx,2),%rax
17e66(4): mov 0xffffff88(%rbp),%rcx
17e6a(4): lea 0x0(%rdx,%rax,8),%rax
17e6e(7): mov %rcx,0xffffff28(%rbp)
17e75(4): mov 0x10(%rax),%rax
17e79(3): mov (%rax),%rbx
17e7c(8): mov 0xb8(%r12),%rax
17e84(4): mov 0x0(%rax,%rcx,8),%rax
17e88(3): mov %rbx,%rdx
17e8b(4): mov 0x10(%rax),%rdi
17e8f(4): lea 0x18(%rax),%rsi
17e93(5): call 0xffffa80d(%rip)
17e98(3): test %rax,%rax
17e9b(6): jnz 0xfffffb61(%rip)
17ea1(7): mov 0xffffff60(%rbp),%r9
17ea8(3): mov (%r14),%rsi
17eab(7): mov 0xffffff28(%rbp),%rcx
17eb2(3): add %r9,%rsi
17eb5(5): jmp 0xfffffac8(%rip)
17eba(6): nop 0x0(%rax,%rax,1)
17ec0(7): mov 0xffffff48(%rbp),%rdx
17ec7(7): mov 0xffffff40(%rbp),%rdi
17ece(3): mov %r13,%rsi
17ed1(4): mov %rcx,0x8(%rax)
17ed5(7): mov %r9,0xffffff28(%rbp)
17edc(7): mov %rcx,0xffffff60(%rbp)
17ee3(5): call 0xfffea82d(%rip)
17ee8(4): mov 0x8(%r13),%rax
17eec(7): mov 0xffffff60(%rbp),%rcx
17ef3(7): mov 0xffffff28(%rbp),%r9
17efa(5): jmp 0xfffffa3f(%rip)
17eff(1): nop 
17f00(4): mov 0xffffffa0(%rbp),%rdi
17f04(5): call 0xfffeab0c(%rip)
17f09(7): cmp $0x0,0xffffff37(%rbp)
17f10(6): jnz 0xdc(%rip)
17f16(7): mov 0xffffff78(%rbp),%rdi
17f1d(3): test %rdi,%rdi
17f20(2): jz 0x7(%rip)
17f22(5): call 0xffffde3e(%rip)
17f27(2): xor %eax,%eax
17f29(4): mov 0xffffffc8(%rbp),%rbx
17f2d(9): xor $0x28,%rbx
17f36(6): jnz 0x1bf(%rip)
17f3c(4): lea 0xffffffd8(%rbp),%rsp
17f40(1): pop %rbx
17f41(2): pop %r12
17f43(2): pop %r13
17f45(2): pop %r14
17f47(2): pop %r15
17f49(1): pop %rbp
17f4a(1): ret near (%rsp)
17f4b(7): mov 0xffffff48(%rbp),%rdx
17f52(3): mov %rdi,%rsi
17f55(3): mov %r13,%rdi
17f58(7): mov %rcx,0xffffff28(%rbp)
17f5f(7): mov %r9,0xffffff60(%rbp)
17f66(5): call 0xfffea7aa(%rip)
17f6b(4): mov 0x8(%r13),%rax
17f6f(7): mov 0xffffff60(%rbp),%r9
17f76(7): mov 0xffffff28(%rbp),%rcx
17f7d(5): jmp 0xfffff9bc(%rip)
17f82(6): nop 0x0(%rax,%rax,1)
17f88(4): mov 0xffffffa0(%rbp),%rdi
17f8c(5): call 0xfffeaa84(%rip)
17f91(7): cmp $0x0,0xffffff37(%rbp)
17f98(6): jnz 0x103(%rip)
17f9e(8): cmp $0x0,0xffffff78(%rbp)
17fa6(6): jnz 0xfffffd62(%rip)
17fac(5): mov $0xc,%eax
17fb1(5): jmp 0xffffff78(%rip)
17fb6(7): mov 0xffffff48(%rbp),%rdi
17fbd(5): call 0xfffea7c3(%rip)
17fc2(3): test %rax,%rax
17fc5(7): mov %rax,0xffffff40(%rbp)
17fcc(7): mov $0x1,0xffffff37(%rbp)
17fd3(6): jnz 0xfffff914(%rip)
17fd9(7): mov 0xffffff78(%rbp),%rdi
17fe0(3): test %rdi,%rdi
17fe3(2): jz 0xffffffc9(%rip)
17fe5(5): call 0xffffdd7b(%rip)
17fea(2): jmp 0xffffffc2(%rip)
17fec(7): mov 0xffffff40(%rbp),%rdi
17ff3(5): call 0xfffeaa1d(%rip)
17ff8(7): mov 0xffffff78(%rbp),%rdi
17fff(3): test %rdi,%rdi
18002(6): jnz 0xffffff20(%rip)
18008(5): jmp 0xffffff1f(%rip)
1800d(b): mov $0x0,0xffffff78(%rbp)
18018(5): jmp 0xfffff875(%rip)
1801d(4): lea 0x0(%rax,%rax,2),%rsi
18021(7): mov 0xffffff78(%rbp),%rax
18028(7): mov %rdx,0xffffff60(%rbp)
1802f(4): shl/sal $0x5,%rsi
18033(4): mov 0x10(%rax),%rdi
18037(5): call 0xfffea7f9(%rip)
1803c(3): test %rax,%rax
1803f(2): jz 0x46(%rip)
18041(7): mov 0xffffff78(%rbp),%rcx
18048(7): mov 0xffffff60(%rbp),%rdx
1804f(4): shl/sal $0x1,0x8(%rcx)
18053(4): mov %rax,0x10(%rcx)
18057(5): jmp 0xfffffc4b(%rip)
1805c(4): mov 0xffffffa0(%rbp),%rdi
18060(5): call 0xfffea9b0(%rip)
18065(7): cmp $0x0,0xffffff37(%rbp)
1806c(6): jz 0xfffffebb(%rip)
18072(7): mov 0xffffff40(%rbp),%rdi
18079(5): call 0xfffea997(%rip)
1807e(2): xor %eax,%eax
18080(5): jmp 0xfffffea9(%rip)
18085(4): mov 0xffffffa0(%rbp),%rdi
18089(5): call 0xfffea987(%rip)
1808e(7): cmp $0x0,0xffffff37(%rbp)
18095(6): jz 0xfffffc73(%rip)
1809b(7): mov 0xffffff40(%rbp),%rdi
180a2(5): call 0xfffea96e(%rip)
180a7(5): jmp 0xfffffef7(%rip)
180ac(4): mov 0xffffffa0(%rbp),%rdi
180b0(5): call 0xfffea960(%rip)
180b5(7): cmp $0x0,0xffffff37(%rbp)
180bc(5): mov $0x1,%eax
180c1(6): jz 0xfffffe68(%rip)
180c7(7): mov 0xffffff40(%rbp),%rdi
180ce(6): mov %eax,0xffffff78(%rbp)
180d4(5): call 0xfffea93c(%rip)
180d9(6): mov 0xffffff78(%rbp),%eax
180df(5): jmp 0xfffffe4a(%rip)
180e4(7): mov 0xffffff40(%rbp),%rdi
180eb(5): call 0xfffea925(%rip)
180f0(5): jmp 0xfffffc80(%rip)
180f5(5): call 0xfffea46b(%rip)

"get_subexp_sub.isra.32" :
18100(2): push %r15
18102(2): push %r14
18104(3): mov %rcx,%r14
18107(2): push %r13
18109(2): push %r12
1810b(3): mov %rsi,%r13
1810e(1): push %rbp
1810f(1): push %rbx
18110(4): lea 0x10(%rdx),%rsi
18114(3): mov %rdx,%rbp
18117(3): mov %r8,%r9
1811a(3): mov %r8,%r12
1811d(4): sub $0x20,%rsp
18121(4): mov 0x8(%rdx),%rcx
18125(3): mov %r14,%r8
18128(2): push $0x8
1812a(3): mov (%rdx),%rdx
1812d(3): mov %rdi,%rbx
18130(5): call 0xffffef80(%rip)
18135(2): test %eax,%eax
18137(1): pop %rdx
18138(1): pop %rcx
18139(2): jz 0x17(%rip)
1813b(4): add $0x18,%rsp
1813f(1): pop %rbx
18140(1): pop %rbp
18141(2): pop %r12
18143(2): pop %r13
18145(2): pop %r14
18147(2): pop %r15
18149(1): ret near (%rsp)
1814a(6): nop 0x0(%rax,%rax,1)
18150(7): mov 0xc8(%rbx),%rax
18157(7): mov 0xd0(%rbx),%rdx
1815e(4): mov 0x8(%rbp),%r15
18162(4): mov 0x0(%r13),%rcx
18166(7): mov 0xd8(%rbx),%rdi
1816d(3): cmp %rdx,%rax
18170(3): mov %r15,%rsi
18173(6): jnl 0x9d(%rip)
18179(4): lea 0x0(%rax,%rax,4),%rdx
1817d(4): shl/sal $0x3,%rdx
18181(3): test %rax,%rax
18184(2): jle 0xd(%rip)
18186(5): lea 0xffffffd8(%rdi,%rdx,1),%r8
1818b(4): cmp 0x8(%r8),%r12
1818f(2): jz 0x71(%rip)
18191(3): add %rdx,%rdi
18194(2): xor %edx,%edx
18196(3): cmp %rcx,%r15
18199(3): setz %dl
1819c(4): add $0x1,%rax
181a0(3): mov %r14,(%rdi)
181a3(2): neg %edx
181a5(4): mov %r12,0x8(%rdi)
181a9(4): mov %rcx,0x10(%rdi)
181ad(4): mov %dx,0x22(%rdi)
181b1(4): mov %r15,0x18(%rdi)
181b5(7): mov %rax,0xc8(%rbx)
181bc(4): mov $0x0,0x20(%rdi)
181c0(3): mov %r15,%rax
181c3(7): movsxd 0xe0(%rbx),%rdx
181ca(3): sub %rcx,%rax
181cd(3): cmp %rax,%rdx
181d0(2): jnl 0xc(%rip)
181d2(3): sub %ecx,%r15d
181d5(7): mov %r15d,0xe0(%rbx)
181dc(3): add %r12,%rsi
181df(4): sub 0x0(%r13),%rsi
181e3(4): add $0x18,%rsp
181e7(3): mov %rbx,%rdi
181ea(1): pop %rbx
181eb(1): pop %rbp
181ec(2): pop %r12
181ee(2): pop %r13
181f0(2): pop %r14
181f2(2): pop %r15
181f4(5): jmp 0xffff9b3c(%rip)
181f9(7): nop 0x0(%rax)
18200(5): mov $0x1,0x20(%r8)
18205(2): jmp 0xffffff8c(%rip)
18207(9): nop 0x0(%rax,%rax,1)
18210(4): lea 0x0(%rdx,%rdx,4),%rsi
18214(5): mov %rcx,0x8(%rsp)
18219(4): shl/sal $0x4,%rsi
1821d(5): call 0xfffea613(%rip)
18222(3): test %rax,%rax
18225(5): mov 0x8(%rsp),%rcx
1822a(2): jz 0x56(%rip)
1822c(7): mov 0xc8(%rbx),%rsi
18233(7): mov 0xd0(%rbx),%rdx
1823a(7): mov %rax,0xd8(%rbx)
18241(5): mov %rcx,0x8(%rsp)
18246(4): lea 0x0(%rsi,%rsi,4),%rsi
1824a(4): lea 0x0(%rdx,%rdx,4),%rdx
1824e(4): lea 0x0(%rax,%rsi,8),%rdi
18252(4): shl/sal $0x3,%rdx
18256(2): xor %esi,%esi
18258(5): call 0xfffea3c8(%rip)
1825d(7): shl/sal $0x1,0xd0(%rbx)
18264(7): mov 0xc8(%rbx),%rax
1826b(7): mov 0xd8(%rbx),%rdi
18272(4): mov 0x8(%rbp),%rsi
18276(5): mov 0x8(%rsp),%rcx
1827b(5): jmp 0xfffffefe(%rip)
18280(7): mov 0xd8(%rbx),%rdi
18287(5): call 0xfffea789(%rip)
1828c(5): mov $0xc,%eax
18291(5): jmp 0xfffffeaa(%rip)

"transit_state_bkref.isra.34" :
182a0(2): push %r15
182a2(2): push %r14
182a4(2): push %r13
182a6(2): push %r12
182a8(1): push %rbp
182a9(1): push %rbx
182aa(7): sub $0xb8,%rsp
182b1(4): mov 0x48(%rdi),%r15
182b5(9): mov $0x28,%rax
182be(8): mov %rax,0xa8(%rsp)
182c6(2): xor %eax,%eax
182c8(4): cmp $0x0,(%rsi)
182cc(7): mov 0x98(%rdi),%rax
182d3(5): mov %rsi,0x48(%rsp)
182d8(5): mov %rdx,0x40(%rsp)
182dd(5): mov %rax,0x38(%rsp)
182e2(6): jle 0x32e(%rip)
182e8(8): lea 0x0(,%r15,8),%rax
182f0(3): mov %rdi,%r14
182f3(8): mov $0x0,(%rsp)
182fb(5): mov %r15,0x8(%rsp)
18300(5): mov %rax,0x60(%rsp)
18305(8): lea 0x90(%rsp),%rax
1830d(5): mov %rax,0x68(%rsp)
18312(8): lea 0x8c(%rsp),%rax
1831a(5): mov %rax,0x78(%rsp)
1831f(2): jmp 0x48(%rip)
18321(7): nop 0x0(%rax)
18328(2): test $0x1,%al
1832a(2): jz 0x26(%rip)
1832c(3): and $0x8,%edx
1832f(2): jnz 0x21(%rip)
18331(3): test $0x20,%cl
18334(2): jz 0x6(%rip)
18336(2): test $0x2,%al
18338(2): jz 0x18(%rip)
1833a(6): and $0x80,%ecx
18340(6): jz 0xa0(%rip)
18346(2): test $0x8,%al
18348(6): jnz 0x98(%rip)
1834e(2): nop 
18350(5): mov 0x48(%rsp),%rdi
18355(5): add $0x1,(%rsp)
1835a(4): mov (%rsp),%rax
1835e(3): cmp (%rdi),%rax
18361(6): jnl 0x2af(%rip)
18367(5): mov 0x40(%rsp),%rax
1836c(4): mov (%rsp),%rdi
18370(3): mov (%rax),%rax
18373(4): mov 0x0(%rax,%rdi,8),%r13
18377(5): mov 0x38(%rsp),%rdi
1837c(3): mov (%rdi),%rax
1837f(3): mov %r13,%rbx
18382(4): shl/sal $0x4,%rbx
18386(3): add %rbx,%rax
18389(4): cmp $0x4,0x8(%rax)
1838d(2): jnz 0xffffffc3(%rip)
1838f(3): mov 0x8(%rax),%ebp
18392(6): test $0x3ff00,%ebp
18398(2): jz 0x48(%rip)
1839a(7): mov 0xa0(%r14),%edx
183a1(5): mov 0x8(%rsp),%rsi
183a6(3): mov %r14,%rdi
183a9(5): call 0xffffc0d7(%rip)
183ae(2): mov %ebp,%edx
183b0(3): shr $0x8,%edx
183b3(2): mov %edx,%ecx
183b5(5): and $0x3ff,%cx
183ba(3): test $0x4,%dl
183bd(6): jnz 0xffffff6b(%rip)
183c3(3): and $0x8,%edx
183c6(6): jz 0xffffff6b(%rip)
183cc(2): test $0x1,%al
183ce(6): jz 0xffffff63(%rip)
183d4(5): jmp 0xffffff7c(%rip)
183d9(7): nop 0x0(%rax)
183e0(7): mov 0xc8(%r14),%rdi
183e7(7): mov 0x98(%r14),%rax
183ee(2): xor %ecx,%ecx
183f0(4): mov 0x8(%r14),%r10
183f4(5): mov 0x8(%rsp),%r9
183f9(5): mov %rdi,0x70(%rsp)
183fe(5): mov %rax,0x50(%rsp)
18403(3): cmp %rdi,%rcx
18406(2): jnl 0x55(%rip)
18408(4): lea 0x0(%rcx,%rdi,1),%rax
1840c(7): mov 0xd8(%r14),%r11
18413(3): mov %rax,%rsi
18416(4): shr $0x3f,%rsi
1841a(3): add %rax,%rsi
1841d(3): sar $0x1,%rsi
18420(4): lea 0x0(%rsi,%rsi,4),%rax
18424(5): cmp 0x8(%r11,%rax,8),%r9
18429(2): jle 0x2d(%rip)
1842b(5): jmp 0x1cd(%rip)
18430(4): lea 0x0(%rsi,%rcx,1),%rdx
18434(3): mov %rdx,%rax
18437(4): shr $0x3f,%rax
1843b(3): add %rdx,%rax
1843e(3): sar $0x1,%rax
18441(4): lea 0x0(%rax,%rax,4),%rdx
18445(3): mov %rax,%r8
18448(5): cmp 0x8(%r11,%rdx,8),%r9
1844d(6): jnle 0x1b3(%rip)
18453(3): mov %rax,%rsi
18456(3): cmp %rcx,%rsi
18459(2): jnle 0xffffffd7(%rip)
1845b(5): cmp %rcx,0x70(%rsp)
18460(2): jle 0x26(%rip)
18462(7): mov 0xd8(%r14),%rdx
18469(4): lea 0x0(%rcx,%rcx,4),%rax
1846d(5): mov 0x8(%rsp),%rdi
18472(4): lea 0x0(%rdx,%rax,8),%rax
18476(4): cmp %rdi,0x8(%rax)
1847a(2): jnz 0xc(%rip)
1847c(4): cmp $0xffffffff,%rcx
18480(6): jnz 0x1d6(%rip)
18486(5): mov 0x50(%rsp),%rax
1848b(8): cmp $0x0,0xe8(%r14)
18493(3): mov (%rax),%rdx
18496(4): mov 0x0(%rdx,%rbx,1),%rax
1849a(5): mov %rax,0x58(%rsp)
1849f(6): jle 0x1bc(%rip)
184a5(5): mov %r13,0x30(%rsp)
184aa(9): mov $0x0,0x28(%rsp)
184b3(3): mov %r10,%r13
184b6(7): mov 0xf8(%r14),%rax
184bd(5): mov 0x28(%rsp),%rbx
184c2(5): mov 0x58(%rsp),%rdi
184c7(4): mov 0x0(%rax,%rbx,8),%rbx
184cb(4): mov 0x8(%rbx),%rax
184cf(4): shl/sal $0x4,%rax
184d3(4): cmp 0x0(%rdx,%rax,1),%rdi
184d7(2): jz 0x29(%rip)
184d9(6): add $0x1,0x28(%rsp)
184df(5): mov 0x28(%rsp),%rax
184e4(7): cmp 0xe8(%r14),%rax
184eb(6): jnl 0x676(%rip)
184f1(5): mov 0x50(%rsp),%rax
184f6(3): mov (%rax),%rdx
184f9(2): jmp 0xffffffbd(%rip)
184fb(5): nop 0x0(%rax,%rax,1)
18500(5): cmp $0x0,0x20(%rbx)
18505(3): mov (%rbx),%r11
18508(6): jle 0x66a(%rip)
1850e(5): mov 0x8(%rsp),%rcx
18513(3): mov %r13,%r8
18516(2): xor %ebp,%ebp
18518(3): mov %rbx,%r13
1851b(3): mov %rcx,%rbx
1851e(2): jmp 0x6e(%rip)
18520(4): lea 0x0(%r8,%r11,1),%rsi
18524(4): lea 0x0(%r8,%rbx,1),%rdi
18528(5): mov %r9,0x20(%rsp)
1852d(5): mov %r11,0x18(%rsp)
18532(5): mov %r8,0x10(%rsp)
18537(5): call 0xfffea149(%rip)
1853c(2): test %eax,%eax
1853e(5): mov 0x10(%rsp),%r8
18543(5): mov 0x18(%rsp),%r11
18548(5): mov 0x20(%rsp),%r9
1854d(6): jnz 0x4cb(%rip)
18553(5): mov 0x8(%rsp),%r8
18558(5): mov 0x30(%rsp),%rcx
1855d(3): mov %r9,%rdx
18560(3): mov %r13,%rsi
18563(3): mov %r14,%rdi
18566(5): call 0xfffffb9a(%rip)
1856b(3): cmp $0x1,%eax
1856e(4): mov 0x8(%r14),%r8
18572(6): jnbe 0xa6(%rip)
18578(4): add $0x1,%rbp
1857c(4): cmp 0x20(%r13),%rbp
18580(3): mov %r15,%r11
18583(3): mov %r12,%rbx
18586(6): jnl 0x2b2(%rip)
1858c(4): mov 0x28(%r13),%rax
18590(4): mov 0x0(%rax,%rbp,8),%r9
18594(4): mov 0x8(%r9),%r15
18598(3): mov %r15,%rdx
1859b(3): sub %r11,%rdx
1859e(3): test %rdx,%rdx
185a1(4): lea 0x0(%rdx,%rbx,1),%r12
185a5(2): jle 0xffffffae(%rip)
185a7(4): cmp %r12,0x30(%r14)
185ab(6): jnl 0xffffff75(%rip)
185b1(4): cmp %r12,0x58(%r14)
185b5(5): mov %rdx,0x18(%rsp)
185ba(5): mov %r9,0x10(%rsp)
185bf(6): jl 0x459(%rip)
185c5(3): mov %r12,%rsi
185c8(3): mov %r14,%rdi
185cb(5): mov %r11,0x20(%rsp)
185d0(5): call 0xffff9760(%rip)
185d5(2): test %eax,%eax
185d7(2): jnz 0x41(%rip)
185d9(4): mov 0x8(%r14),%r8
185dd(5): mov 0x18(%rsp),%rdx
185e2(5): mov 0x10(%rsp),%r9
185e7(5): mov 0x20(%rsp),%r11
185ec(5): jmp 0xffffff34(%rip)
185f1(7): nop 0x0(%rax)
185f8(3): mov %rsi,%r8
185fb(3): mov %rdi,%rsi
185fe(2): nop 
18600(4): lea 0x1(%r8),%rcx
18604(3): mov %rsi,%rdi
18607(5): jmp 0xfffffdfc(%rip)
1860c(4): nop 0x0(%rax)
18610(2): xor %eax,%eax
18612(6): nop 0x0(%rax,%rax,1)
18618(8): mov 0xa8(%rsp),%rbx
18620(9): xor $0x28,%rbx
18629(6): jnz 0x553(%rip)
1862f(7): add $0xb8,%rsp
18636(1): pop %rbx
18637(1): pop %rbp
18638(2): pop %r12
1863a(2): pop %r13
1863c(2): pop %r14
1863e(2): pop %r15
18640(1): ret near (%rsp)
18641(7): nop 0x0(%rax)
18648(4): add $0x28,%rax
1864c(4): cmp $0x0,0xfffffff8(%rax)
18650(6): jz 0xfffffe36(%rip)
18656(3): cmp (%rax),%r13
18659(2): jnz 0xffffffef(%rip)
1865b(5): mov 0x70(%rsp),%rax
18660(5): cmp %rax,0x70(%rsp)
18665(b): mov $0x0,0x8c(%rsp)
18670(6): jnl 0xfffffce0(%rip)
18676(8): lea 0x0(,%r13,8),%rax
1867e(5): mov 0x70(%rsp),%r12
18683(5): mov 0x38(%rsp),%rbp
18688(5): mov %rax,0x50(%rsp)
1868d(5): lea 0x0(%r13,%r13,2),%rax
18692(4): lea 0x0(%r12,%r12,4),%r8
18696(4): shl/sal $0x3,%rax
1869a(5): mov %rax,0x58(%rsp)
1869f(8): lea 0x0(,%r8,8),%r15
186a7(5): jmp 0x136(%rip)
186ac(4): nop 0x0(%rax)
186b0(4): mov 0x28(%rbp),%rcx
186b4(5): mov 0x58(%rsp),%rdi
186b9(5): mov 0x10(%rcx,%rdi,1),%rcx
186be(3): mov (%rcx),%rcx
186c1(4): lea 0x0(%rcx,%rcx,2),%rcx
186c5(4): lea 0x0(%rdx,%rcx,8),%rcx
186c9(5): mov %rcx,0x18(%rsp)
186ce(5): add 0x8(%rsp),%rbx
186d3(7): mov 0xa0(%r14),%edx
186da(3): mov %r14,%rdi
186dd(3): sub %rax,%rbx
186e0(4): lea 0xffffffff(%rbx),%rsi
186e4(5): call 0xffffbd9c(%rip)
186e9(5): mov 0x60(%rsp),%rsi
186ee(2): mov %eax,%ecx
186f0(7): mov 0xb8(%r14),%rax
186f7(8): lea 0x0(,%rbx,8),%r10
186ff(9): mov $0x0,0x10(%rsp)
18708(4): lea 0x0(%rax,%r10,1),%r11
1870c(4): mov 0x0(%rax,%rsi,1),%rax
18710(3): mov (%r11),%rdx
18713(3): test %rax,%rax
18716(2): jz 0xb(%rip)
18718(4): mov 0x10(%rax),%rax
1871c(5): mov %rax,0x10(%rsp)
18721(3): test %rdx,%rdx
18724(6): jz 0x31c(%rip)
1872a(4): mov 0x50(%rdx),%rsi
1872e(5): mov 0x68(%rsp),%rdi
18733(5): mov 0x18(%rsp),%rdx
18738(5): mov %r10,0x30(%rsp)
1873d(4): mov %ecx,0x28(%rsp)
18741(5): call 0xffffb14f(%rip)
18746(2): test %eax,%eax
18748(7): mov %eax,0x8c(%rsp)
1874f(4): mov 0x28(%rsp),%ecx
18753(5): mov 0x30(%rsp),%r10
18758(6): jnz 0x390(%rip)
1875e(7): add 0xb8(%r14),%r10
18765(5): mov 0x68(%rsp),%rdx
1876a(3): mov %rbp,%rsi
1876d(5): mov 0x78(%rsp),%rdi
18772(5): mov %r10,0x28(%rsp)
18777(5): call 0xffffb279(%rip)
1877c(5): mov 0x28(%rsp),%r10
18781(8): mov 0xa0(%rsp),%rdi
18789(3): mov %rax,(%r10)
1878c(5): call 0xfffea284(%rip)
18791(7): mov 0xb8(%r14),%rdx
18798(5): cmp $0x0,0x0(%rdx,%rbx,8)
1879d(6): jz 0x2d4(%rip)
187a3(6): cmp $0x0,0x20(%rsp)
187a9(2): jnz 0x1f(%rip)
187ab(5): mov 0x60(%rsp),%rax
187b0(5): mov 0x10(%rsp),%rbx
187b5(4): mov 0x0(%rdx,%rax,1),%rax
187b9(4): cmp %rbx,0x10(%rax)
187bd(6): jnle 0x2cb(%rip)
187c3(5): nop 0x0(%rax,%rax,1)
187c8(4): add $0x1,%r12
187cc(4): add $0x28,%r15
187d0(7): cmp 0xc8(%r14),%r12
187d7(6): jnl 0xfffffb79(%rip)
187dd(7): mov 0xd8(%r14),%rax
187e4(3): add %r15,%rax
187e7(3): cmp (%rax),%r13
187ea(2): jnz 0xffffffde(%rip)
187ec(5): mov 0x8(%rsp),%rdi
187f1(4): cmp 0x8(%rax),%rdi
187f5(2): jnz 0xffffffd3(%rip)
187f7(4): mov 0x18(%rax),%rbx
187fb(4): mov 0x10(%rax),%rax
187ff(4): mov 0x30(%rbp),%rdx
18803(3): mov %rbx,%rcx
18806(3): sub %rax,%rcx
18809(5): mov %rcx,0x20(%rsp)
1880e(6): jz 0xfffffea2(%rip)
18814(4): mov 0x18(%rbp),%rcx
18818(5): mov 0x50(%rsp),%rdi
1881d(4): mov 0x0(%rcx,%rdi,1),%rcx
18821(4): lea 0x0(%rcx,%rcx,2),%rcx
18825(4): lea 0x0(%rdx,%rcx,8),%rcx
18829(5): mov %rcx,0x18(%rsp)
1882e(5): jmp 0xfffffea0(%rip)
18833(5): nop 0x0(%rax,%rax,1)
18838(3): mov %r13,%rbx
1883b(3): mov %r8,%r13
1883e(4): lea 0x1(%r15),%r11
18842(5): cmp %r11,0x8(%rsp)
18847(6): jl 0xfffffc92(%rip)
1884d(3): mov %r12,%rax
18850(8): lea 0x0(,%r11,8),%r15
18858(3): mov %rbx,%r12
1885b(3): mov %r11,%rbx
1885e(3): mov %r13,%r11
18861(3): mov %rax,%r13
18864(4): nop 0x0(%rax)
18868(3): mov %rbx,%rax
1886b(4): sub (%r12),%rax
1886f(3): test %rax,%rax
18872(2): jle 0x23(%rip)
18874(4): cmp %r13,0x30(%r14)
18878(6): jle 0x289(%rip)
1887e(6): movzx 0xffffffff(%r11,%rbx,1),%ecx
18884(4): lea 0x1(%r13),%rax
18888(4): cmp %cl,0x0(%r11,%r13,1)
1888c(6): jnz 0x136(%rip)
18892(3): mov %rax,%r13
18895(7): mov 0xb8(%r14),%rax
1889c(4): mov 0x0(%rax,%r15,1),%rax
188a0(3): test %rax,%rax
188a3(6): jz 0x10c(%rip)
188a9(4): mov 0x10(%rax),%rcx
188ad(3): test %rcx,%rcx
188b0(6): jle 0xff(%rip)
188b6(4): mov 0x18(%rax),%rdi
188ba(5): mov 0x50(%rsp),%rax
188bf(2): xor %edx,%edx
188c1(5): mov 0x58(%rsp),%r8
188c6(3): mov (%rax),%rsi
188c9(2): jmp 0x14(%rip)
188cb(5): nop 0x0(%rax,%rax,1)
188d0(4): add $0x1,%rdx
188d4(3): cmp %rdx,%rcx
188d7(6): jz 0xd8(%rip)
188dd(4): mov 0x0(%rdi,%rdx,8),%rbp
188e1(3): mov %rbp,%rax
188e4(4): shl/sal $0x4,%rax
188e8(3): add %rsi,%rax
188eb(4): cmp $0x9,0x8(%rax)
188ef(2): jnz 0xffffffe1(%rip)
188f1(3): cmp (%rax),%r8
188f4(2): jnz 0xffffffdc(%rip)
188f6(4): cmp $0xffffffff,%rbp
188fa(6): jz 0xb5(%rip)
18900(5): mov 0x10(%r12),%rsi
18905(4): mov (%r12),%rcx
18909(3): test %rsi,%rsi
1890c(6): jz 0xc4(%rip)
18912(5): mov %r11,0x10(%rsp)
18917(5): mov 0x8(%r12),%rdx
1891c(4): sub $0x8,%rsp
18920(2): push $0x9
18922(3): mov %rbx,%r9
18925(3): mov %rbp,%r8
18928(3): mov %r14,%rdi
1892b(5): call 0xffffe785(%rip)
18930(1): pop %rdx
18931(3): cmp $0x1,%eax
18934(1): pop %rcx
18935(5): mov 0x10(%rsp),%r11
1893a(2): jz 0x75(%rip)
1893c(2): test %eax,%eax
1893e(6): jnz 0xfffffcda(%rip)
18944(5): mov 0x20(%r12),%rax
18949(5): cmp 0x18(%r12),%rax
1894e(6): jz 0x1da(%rip)
18954(5): mov $0x28,%esi
18959(5): mov $0x1,%edi
1895e(5): call 0xfffe9d52(%rip)
18963(3): test %rax,%rax
18966(6): jz 0xa3(%rip)
1896c(5): mov 0x20(%r12),%rdx
18971(5): mov 0x28(%r12),%rcx
18976(3): mov %r12,%rsi
18979(5): mov 0x8(%rsp),%r8
1897e(3): mov %r14,%rdi
18981(4): mov %rax,0x0(%rcx,%rdx,8)
18985(5): mov 0x30(%rsp),%rcx
1898a(4): add $0x1,%rdx
1898e(3): mov %rbp,(%rax)
18991(4): mov %rbx,0x8(%rax)
18995(5): mov %rdx,0x20(%r12)
1899a(3): mov %rax,%rdx
1899d(5): call 0xfffff763(%rip)
189a2(3): cmp $0x1,%eax
189a5(4): mov 0x8(%r14),%r11
189a9(6): jnbe 0xfffffc6f(%rip)
189af(4): add $0x1,%rbx
189b3(4): add $0x8,%r15
189b7(5): cmp %rbx,0x8(%rsp)
189bc(6): jnl 0xfffffeac(%rip)
189c2(3): mov %r11,%r13
189c5(5): jmp 0xfffffb14(%rip)
189ca(6): nop 0x0(%rax,%rax,1)
189d0(3): mov %rbx,%rsi
189d3(5): mov $0x18,%edi
189d8(5): mov %r11,0x18(%rsp)
189dd(3): sub %rcx,%rsi
189e0(5): mov %rcx,0x10(%rsp)
189e5(4): add $0x1,%rsi
189e9(5): call 0xfffe9cc7(%rip)
189ee(3): test %rax,%rax
189f1(3): mov %rax,%rsi
189f4(5): mov %rax,0x10(%r12)
189f9(5): mov 0x10(%rsp),%rcx
189fe(5): mov 0x18(%rsp),%r11
18a03(6): jnz 0xffffff0f(%rip)
18a09(5): mov $0xc,%eax
18a0e(5): jmp 0xfffffc0a(%rip)
18a13(5): nop 0x0(%rax,%rax,1)
18a18(3): mov %rbx,%rcx
18a1b(3): mov %r13,%rbx
18a1e(3): mov %r8,%r13
18a21(4): cmp %rbp,0x20(%rbx)
18a25(6): jnle 0xfffffab4(%rip)
18a2b(3): test %rbp,%rbp
18a2e(3): mov %rcx,%r12
18a31(6): jz 0xfffffe11(%rip)
18a37(3): mov %r11,%r15
18a3a(5): jmp 0xfffffe04(%rip)
18a3f(1): nop 
18a40(5): mov 0x18(%rsp),%rdx
18a45(5): mov 0x78(%rsp),%rdi
18a4a(3): mov %rbp,%rsi
18a4d(5): mov %r11,0x28(%rsp)
18a52(5): call 0xffffaf9e(%rip)
18a57(5): mov 0x28(%rsp),%r11
18a5c(7): mov 0xb8(%r14),%rdx
18a63(3): mov %rax,(%r11)
18a66(5): cmp $0x0,0x0(%rdx,%rbx,8)
18a6b(6): jnz 0xfffffd38(%rip)
18a71(7): mov 0x8c(%rsp),%eax
18a78(2): test %eax,%eax
18a7a(6): jz 0xfffffd29(%rip)
18a80(5): jmp 0xfffffb98(%rip)
18a85(3): nop (%rax)
18a88(5): mov 0x18(%rsp),%rax
18a8d(5): mov 0x8(%rsp),%rcx
18a92(3): mov %r14,%rdi
18a95(4): lea 0x10(%rax),%r8
18a99(4): lea 0x8(%rax),%rbx
18a9d(3): mov %r8,%rdx
18aa0(3): mov %rbx,%rsi
18aa3(5): mov %r8,0x10(%rsp)
18aa8(5): call 0xffffb888(%rip)
18aad(2): test %eax,%eax
18aaf(7): mov %eax,0x8c(%rsp)
18ab6(6): jnz 0xfffffb62(%rip)
18abc(5): mov 0x10(%rsp),%r8
18ac1(3): mov %rbx,%rsi
18ac4(3): mov %r14,%rdi
18ac7(3): mov %r8,%rdx
18aca(5): call 0xfffff7d6(%rip)
18acf(2): test %eax,%eax
18ad1(7): mov %eax,0x8c(%rsp)
18ad8(6): jz 0xfffffcf0(%rip)
18ade(5): jmp 0xfffffb3a(%rip)
18ae3(5): nop 0x0(%rax,%rax,1)
18ae8(8): mov 0xa0(%rsp),%rdi
18af0(5): call 0xfffe9f20(%rip)
18af5(7): mov 0x8c(%rsp),%eax
18afc(5): jmp 0xfffffb1c(%rip)
18b01(4): cmp %r13,0x58(%r14)
18b05(6): jle 0xfffffebd(%rip)
18b0b(4): lea 0x1(%r13),%esi
18b0f(3): mov %r14,%rdi
18b12(5): call 0xffff90ce(%rip)
18b17(2): test %eax,%eax
18b19(6): jnz 0xfffffaff(%rip)
18b1f(4): mov 0x8(%r14),%r11
18b23(5): jmp 0xfffffd5b(%rip)
18b28(5): lea 0x1(%rax,%rax,1),%rdx
18b2d(5): mov 0x28(%r12),%rdi
18b32(8): lea 0x0(,%rdx,8),%rsi
18b3a(5): mov %rdx,0x10(%rsp)
18b3f(5): call 0xfffe9cf1(%rip)
18b44(3): test %rax,%rax
18b47(6): jz 0xfffffec2(%rip)
18b4d(5): mov 0x10(%rsp),%rdx
18b52(5): mov %rax,0x28(%r12)
18b57(5): mov %rdx,0x18(%r12)
18b5c(5): jmp 0xfffffdf8(%rip)
18b61(5): mov 0x30(%rsp),%r13
18b66(7): mov 0xc8(%r14),%rax
18b6d(5): jmp 0xfffffaf3(%rip)
18b72(5): mov 0x8(%rsp),%r12
18b77(5): jmp 0xfffffccb(%rip)
18b7c(5): call 0xfffe99e4(%rip)

"merge_state_with_log" :
18b90(2): push %r15
18b92(2): push %r14
18b94(2): push %r13
18b96(2): push %r12
18b98(3): mov %rdi,%r13
18b9b(1): push %rbp
18b9c(1): push %rbx
18b9d(3): mov %rsi,%rbx
18ba0(4): sub $0x38,%rsp
18ba4(4): mov 0x48(%rsi),%r12
18ba8(7): mov 0xb8(%rsi),%r14
18baf(9): mov $0x28,%rax
18bb8(5): mov %rax,0x28(%rsp)
18bbd(2): xor %eax,%eax
18bbf(7): mov 0x98(%rsi),%r15
18bc6(8): lea 0x0(,%r12,8),%rbp
18bce(3): add %rbp,%r14
18bd1(7): cmp %r12,0xc0(%rsi)
18bd8(2): jnl 0x48(%rip)
18bda(3): mov %rdx,(%r14)
18bdd(3): mov %rdx,%rbp
18be0(7): mov %r12,0xc0(%rsi)
18be7(8): cmp $0x0,0x98(%r15)
18bef(6): jnz 0x129(%rip)
18bf5(5): mov 0x28(%rsp),%rcx
18bfa(9): xor $0x28,%rcx
18c03(3): mov %rbp,%rax
18c06(6): jnz 0x171(%rip)
18c0c(4): add $0x38,%rsp
18c10(1): pop %rbx
18c11(1): pop %rbp
18c12(2): pop %r12
18c14(2): pop %r13
18c16(2): pop %r14
18c18(2): pop %r15
18c1a(1): ret near (%rsp)
18c1b(5): nop 0x0(%rax,%rax,1)
18c20(3): mov (%r14),%rax
18c23(3): test %rax,%rax
18c26(6): jz 0xe2(%rip)
18c2c(3): test %rdx,%rdx
18c2f(4): mov 0x50(%rax),%rax
18c33(6): jz 0x8d(%rip)
18c39(4): mov 0x50(%rdx),%r14
18c3d(5): lea 0x10(%rsp),%rdi
18c42(3): mov %rax,%rdx
18c45(4): mov %rdi,(%rsp)
18c49(3): mov %r14,%rsi
18c4c(5): call 0xffffac44(%rip)
18c51(2): test %eax,%eax
18c53(4): mov %eax,0x0(%r13)
18c57(6): jnz 0x119(%rip)
18c5d(4): mov 0x48(%rbx),%rax
18c61(6): mov 0xa0(%rbx),%edx
18c67(3): mov %rbx,%rdi
18c6a(4): lea 0xffffffff(%rax),%rsi
18c6e(5): call 0xffffb812(%rip)
18c73(7): mov 0xb8(%rbx),%r8
18c7a(4): mov (%rsp),%rdx
18c7e(2): mov %eax,%ecx
18c80(3): mov %r15,%rsi
18c83(3): mov %r13,%rdi
18c86(3): add %rbp,%r8
18c89(5): mov %r8,0x8(%rsp)
18c8e(5): call 0xffffad62(%rip)
18c93(5): mov 0x8(%rsp),%r8
18c98(3): test %r14,%r14
18c9b(3): mov %rax,%rbp
18c9e(3): mov %rax,(%r8)
18ca1(6): jz 0xffffff46(%rip)
18ca7(5): mov 0x20(%rsp),%rdi
18cac(5): call 0xfffe9d64(%rip)
18cb1(5): jmp 0xffffff36(%rip)
18cb6(a): nop 0x0(%rax,%rax,1)
18cc0(4): movdqu (%rax),%xmm0
18cc4(3): mov %rbx,%rdi
18cc7(6): mov 0xa0(%rsi),%edx
18ccd(5): lea 0xffffffff(%r12),%rsi
18cd2(5): movaps %xmm0,0x10(%rsp)
18cd7(4): mov 0x10(%rax),%rax
18cdb(5): mov %rax,0x20(%rsp)
18ce0(5): call 0xffffb7a0(%rip)
18ce5(5): lea 0x10(%rsp),%rdx
18cea(2): mov %eax,%ecx
18cec(3): mov %r15,%rsi
18cef(3): mov %r13,%rdi
18cf2(5): call 0xffffacfe(%rip)
18cf7(3): mov %rax,%rbp
18cfa(3): mov %rax,(%r14)
18cfd(5): jmp 0xfffffeea(%rip)
18d02(6): nop 0x0(%rax,%rax,1)
18d08(3): mov %rdx,(%r14)
18d0b(3): mov %rdx,%rbp
18d0e(5): jmp 0xfffffed9(%rip)
18d13(5): nop 0x0(%rax,%rax,1)
18d18(3): test %rbp,%rbp
18d1b(2): jz 0x55(%rip)
18d1d(4): lea 0x10(%rbp),%r14
18d21(4): lea 0x18(%rbp),%r15
18d25(3): mov %r12,%rcx
18d28(3): mov %rbx,%rdi
18d2b(3): mov %r15,%rdx
18d2e(3): mov %r14,%rsi
18d31(5): call 0xffffb5ff(%rip)
18d36(2): test %eax,%eax
18d38(4): mov %eax,0x0(%r13)
18d3c(2): jnz 0x34(%rip)
18d3e(4): test $0x40,0x68(%rbp)
18d42(6): jz 0xfffffeb3(%rip)
18d48(3): mov %r15,%rdx
18d4b(3): mov %r14,%rsi
18d4e(3): mov %rbx,%rdi
18d51(5): call 0xfffff54f(%rip)
18d56(2): test %eax,%eax
18d58(4): mov %eax,0x0(%r13)
18d5c(2): jnz 0x14(%rip)
18d5e(7): mov 0xb8(%rbx),%rax
18d65(4): mov 0x0(%rax,%r12,8),%rbp
18d69(5): jmp 0xfffffe8c(%rip)
18d6e(2): nop 
18d70(2): xor %ebp,%ebp
18d72(5): jmp 0xfffffe83(%rip)
18d77(5): call 0xfffe97e9(%rip)

"sift_states_backward" :
18d80(2): push %r15
18d82(2): push %r14
18d84(3): mov %rdi,%r14
18d87(2): push %r13
18d89(2): push %r12
18d8b(3): mov %rsi,%r13
18d8e(1): push %rbp
18d8f(1): push %rbx
18d90(4): sub $0x68,%rsp
18d94(4): mov 0x18(%rsi),%r15
18d98(4): mov 0x10(%rsi),%rbx
18d9c(4): mov %rdi,(%rsp)
18da0(5): mov $0x8,%edi
18da5(9): mov $0x1,0x40(%rsp)
18dae(9): mov $0x28,%rax
18db7(5): mov %rax,0x58(%rsp)
18dbc(2): xor %eax,%eax
18dbe(9): mov $0x1,0x48(%rsp)
18dc7(5): call 0xfffe99b9(%rip)
18dcc(3): test %rax,%rax
18dcf(5): mov %rax,0x50(%rsp)
18dd4(6): jz 0x2e0(%rip)
18dda(5): lea 0x40(%rsp),%rcx
18ddf(3): mov %rbx,(%rax)
18de2(3): mov %r15,%rdx
18de5(3): mov %r13,%rsi
18de8(3): mov %r14,%rdi
18deb(5): mov %rcx,0x10(%rsp)
18df0(5): call 0x1a00(%rip)
18df5(2): test %eax,%eax
18df7(6): jnz 0x28e(%rip)
18dfd(8): lea 0x0(,%r15,8),%rax
18e05(3): test %r15,%r15
18e08(8): mov $0x0,0x2c(%rsp)
18e10(5): mov %rax,0x8(%rsp)
18e15(4): lea 0x30(%r13),%rax
18e19(5): mov %rax,0x38(%rsp)
18e1e(6): jle 0x209(%rip)
18e24(4): mov 0x0(%r13),%rdi
18e28(5): mov 0x8(%rsp),%rax
18e2d(5): cmp $0x0,0x0(%rdi,%rax,1)
18e32(6): jz 0x216(%rip)
18e38(4): mov (%rsp),%rax
18e3c(8): mov $0x0,0x2c(%rsp)
18e44(4): mov 0x2c(%rsp),%ecx
18e48(6): cmp %ecx,0xe0(%rax)
18e4e(6): jl 0x213(%rip)
18e54(4): mov (%rsp),%rbx
18e58(5): mov 0x8(%rsp),%rdi
18e5d(4): sub $0x1,%r15
18e61(9): mov $0x0,0x48(%rsp)
18e6a(7): mov 0xb8(%rbx),%rax
18e71(5): mov 0xfffffff8(%rax,%rdi,1),%r12
18e76(3): test %r12,%r12
18e79(6): jz 0x187(%rip)
18e7f(6): cmp $0x0,0x28(%r12)
18e85(7): mov 0x98(%rbx),%r14
18e8c(6): jle 0x174(%rip)
18e92(2): xor %ebx,%ebx
18e94(5): jmp 0xa7(%rip)
18e99(7): nop 0x0(%rax)
18ea0(4): mov (%rsp),%rdi
18ea4(3): mov %r15,%rdx
18ea7(5): call 0xffffb6c9(%rip)
18eac(2): test %al,%al
18eae(2): jz 0x7e(%rip)
18eb0(4): mov 0x0(%r13),%rax
18eb4(5): mov 0x8(%rsp),%rcx
18eb9(4): mov 0x0(%rax,%rcx,1),%rax
18ebd(3): test %rax,%rax
18ec0(2): jz 0x6c(%rip)
18ec2(4): mov 0x18(%r14),%rdx
18ec6(4): mov 0x10(%rax),%rdi
18eca(4): lea 0x18(%rax),%rsi
18ece(4): mov 0x0(%rdx,%rbp,8),%rdx
18ed2(5): call 0xffff97ce(%rip)
18ed7(3): test %rax,%rax
18eda(2): jz 0x52(%rip)
18edc(6): mov $0x1,%r10d
18ee2(5): cmp $0x0,0x28(%r13)
18ee7(2): jz 0x30(%rip)
18ee9(4): mov 0x18(%r14),%rax
18eed(4): sub $0x8,%rsp
18ef1(4): lea 0x28(%r13),%rsi
18ef5(4): lea 0x0(%r10,%r15,1),%r8
18ef9(3): mov %rbp,%r9
18efc(4): mov 0x0(%rax,%rbp,8),%rcx
18f00(2): push %r15
18f02(5): mov 0x48(%rsp),%rdx
18f07(5): mov 0x10(%rsp),%rdi
18f0c(5): call 0xffff9a44(%rip)
18f11(2): test %al,%al
18f13(1): pop %rdx
18f14(1): pop %rcx
18f15(2): jnz 0x17(%rip)
18f17(5): mov 0x10(%rsp),%rdi
18f1c(3): mov %rbp,%rsi
18f1f(5): call 0xffff8241(%rip)
18f24(2): test %al,%al
18f26(6): jz 0x15a(%rip)
18f2c(4): add $0x1,%rbx
18f30(5): cmp 0x28(%r12),%rbx
18f35(6): jnl 0xcb(%rip)
18f3b(5): mov 0x30(%r12),%rax
18f40(3): mov (%r14),%rsi
18f43(4): mov 0x0(%rax,%rbx,8),%rbp
18f47(3): mov %rbp,%r9
18f4a(4): shl/sal $0x4,%r9
18f4e(3): add %r9,%rsi
18f51(4): test $0x10,0xa(%rsi)
18f55(6): jz 0xffffff4b(%rip)
18f5b(4): mov (%rsp),%rcx
18f5f(4): mov 0x18(%r13),%rax
18f63(3): mov %r15,%r8
18f66(3): mov %rbp,%rdx
18f69(5): mov %r9,0x18(%rsp)
18f6e(7): mov 0x98(%rcx),%r11
18f75(5): mov %rax,0x20(%rsp)
18f7a(3): mov (%r11),%rdi
18f7d(7): lea 0xd8(%r11),%rsi
18f84(5): mov %r11,0x30(%rsp)
18f89(5): call 0xffffdec7(%rip)
18f8e(3): movsxd %eax,%r10
18f91(5): mov 0x18(%rsp),%r9
18f96(4): cmp $0x0,%r10d
18f9a(6): jle 0x96(%rip)
18fa0(3): movsxd %r10d,%rax
18fa3(3): add %r15,%rax
18fa6(5): cmp %rax,0x20(%rsp)
18fab(6): jl 0xffffff37(%rip)
18fb1(4): mov 0x0(%r13),%rdx
18fb5(5): mov 0x30(%rsp),%r11
18fba(4): mov 0x0(%rdx,%rax,8),%rax
18fbe(3): test %rax,%rax
18fc1(2): jz 0x75(%rip)
18fc3(4): mov 0x18(%r11),%rdx
18fc7(4): mov 0x10(%rax),%rdi
18fcb(4): lea 0x18(%rax),%rsi
18fcf(5): mov %r9,0x18(%rsp)
18fd4(4): mov 0x0(%rdx,%rbp,8),%rdx
18fd8(5): call 0xffff96c8(%rip)
18fdd(3): test %rax,%rax
18fe0(6): jnz 0xffffff02(%rip)
18fe6(5): mov 0x18(%rsp),%r9
18feb(3): mov (%r14),%rsi
18fee(3): add %r9,%rsi
18ff1(5): jmp 0xfffffeaf(%rip)
18ff6(a): nop 0x0(%rax,%rax,1)
19000(5): mov 0x10(%rsp),%rcx
19005(4): mov (%rsp),%rdi
19009(3): mov %r15,%rdx
1900c(3): mov %r13,%rsi
1900f(5): call 0x17e1(%rip)
19014(2): test %eax,%eax
19016(2): jnz 0x6f(%rip)
19018(6): sub $0x8,0x8(%rsp)
1901e(3): test %r15,%r15
19021(6): jnz 0xfffffe03(%rip)
19027(2): xor %eax,%eax
19029(2): jmp 0x5c(%rip)
1902b(5): nop 0x0(%rax,%rax,1)
19030(6): jnz 0xfffffeb2(%rip)
19036(3): mov (%r14),%rsi
19039(3): add %r9,%rsi
1903c(5): jmp 0xfffffe64(%rip)
19041(7): nop 0x0(%rax)
19048(4): mov (%rsp),%rax
1904c(5): add $0x1,0x2c(%rsp)
19051(4): mov 0x2c(%rsp),%ecx
19055(6): cmp %ecx,0xe0(%rax)
1905b(6): jnl 0xfffffdf9(%rip)
19061(5): mov 0x8(%rsp),%rdx
19066(2): xor %esi,%esi
19068(5): call 0xfffe95b8(%rip)
1906d(5): mov 0x50(%rsp),%rdi
19072(5): call 0xfffe999e(%rip)
19077(2): xor %eax,%eax
19079(2): jmp 0x1c(%rip)
1907b(5): nop 0x0(%rax,%rax,1)
19080(5): mov $0xc,%eax
19085(5): mov 0x50(%rsp),%rdi
1908a(3): mov %eax,(%rsp)
1908d(5): call 0xfffe9983(%rip)
19092(3): mov (%rsp),%eax
19095(5): mov 0x58(%rsp),%rdx
1909a(9): xor $0x28,%rdx
190a3(2): jnz 0x18(%rip)
190a5(4): add $0x68,%rsp
190a9(1): pop %rbx
190aa(1): pop %rbp
190ab(2): pop %r12
190ad(2): pop %r13
190af(2): pop %r14
190b1(2): pop %r15
190b3(1): ret near (%rsp)
190b4(5): mov $0xc,%eax
190b9(2): jmp 0xffffffdc(%rip)
190bb(5): call 0xfffe94a5(%rip)

"re_search_internal" :
190c0(2): push %r15
190c2(2): push %r14
190c4(2): push %r13
190c6(2): push %r12
190c8(3): mov %r9,%r13
190cb(1): push %rbp
190cc(1): push %rbx
190cd(3): mov %rcx,%rbp
190d0(5): mov $0x20,%ecx
190d5(3): mov %r8,%r12
190d8(7): sub $0x238,%rsp
190df(3): mov (%rdi),%rbx
190e2(8): mov 0x278(%rsp),%rax
190ea(5): mov %rdi,0x48(%rsp)
190ef(5): mov %rsi,0x78(%rsp)
190f4(3): mov %rdi,%rsi
190f7(8): lea 0x120(%rsp),%rdi
190ff(8): mov %rdx,0x88(%rsp)
19107(5): mov %rbx,0x38(%rsp)
1910c(8): mov %rax,0xb8(%rsp)
19114(4): mov %rdi,(%rsp)
19118(9): mov $0x28,%rax
19121(8): mov %rax,0x228(%rsp)
19129(2): xor %eax,%eax
1912b(3): REP stosd %rax,rdi(%es,10)
1912e(4): mov 0x20(%rsi),%rdi
19132(8): mov %rbx,0x1b8(%rsp)
1913a(3): test %rdi,%rdi
1913d(5): mov %rdi,0x68(%rsp)
19142(2): jz 0x24(%rip)
19144(4): movzx 0x38(%rsi),%edx
19148(3): test $0x8,%dl
1914b(6): jz 0x495(%rip)
19151(3): cmp %r8,%rbp
19154(6): jz 0x48c(%rip)
1915a(3): and $0x1,%edx
1915d(4): cmove %rdi,%rax
19161(5): mov %rax,0x68(%rsp)
19166(5): mov 0x48(%rsp),%rax
1916b(c): mov $0x0,0x98(%rsp)
19177(4): mov 0x30(%rax),%rax
1917b(8): cmp 0x270(%rsp),%rax
19183(2): jnb 0x21(%rip)
19185(8): mov 0x270(%rsp),%rcx
1918d(4): lea 0xffffffff(%rcx),%rdx
19191(3): sub %rax,%rdx
19194(8): sub %rdx,0x270(%rsp)
1919c(8): mov %rdx,0x98(%rsp)
191a4(5): mov 0x48(%rsp),%rsi
191a9(5): cmp $0x0,0x10(%rsi)
191ae(6): jz 0xe92(%rip)
191b4(5): mov 0x38(%rsp),%rdi
191b9(4): mov 0x48(%rdi),%rax
191bd(3): test %rax,%rax
191c0(6): jz 0xe80(%rip)
191c6(4): mov 0x50(%rdi),%rdx
191ca(3): test %rdx,%rdx
191cd(6): jz 0xe73(%rip)
191d3(4): mov 0x58(%rdi),%rcx
191d7(3): test %rcx,%rcx
191da(6): jz 0xe66(%rip)
191e0(5): cmp $0x0,0x60(%rdi)
191e5(6): jz 0xe5b(%rip)
191eb(5): cmp $0x0,0x10(%rax)
191f0(2): jnz 0x38(%rip)
191f2(5): cmp $0x0,0x10(%rdx)
191f7(2): jnz 0x31(%rip)
191f9(5): cmp $0x0,0x10(%rcx)
191fe(2): jz 0x8(%rip)
19200(4): cmp $0x0,0x38(%rsi)
19204(2): js 0x24(%rip)
19206(3): test %rbp,%rbp
19209(2): jz 0x13(%rip)
1920b(3): test %r12,%r12
1920e(8): mov $0x1,0x5c(%rsp)
19216(6): jnz 0xa23(%rip)
1921c(3): xor %r12d,%r12d
1921f(2): xor %ebp,%ebp
19221(7): nop 0x0(%rax)
19228(9): cmp $0x0,0x270(%rsp)
19231(8): mov $0x1,0x58(%rsp)
19239(6): jz 0x387(%rip)
1923f(5): mov 0x38(%rsp),%r11
19244(5): mov 0x48(%rsp),%rax
19249(8): mov 0x88(%rsp),%rdi
19251(4): mov 0x10(%r11),%rsi
19255(4): mov 0x28(%rax),%rbx
19259(7): mov 0xb4(%r11),%edx
19260(4): mov 0x18(%rax),%rax
19264(8): mov %rdi,0x178(%rsp)
1926c(8): mov %rdi,0x170(%rsp)
19274(5): mov %rsi,0x8(%rsp)
19279(4): lea 0x1(%rsi),%rsi
1927d(8): mov %rbx,0xb0(%rsp)
19285(3): movsxd %edx,%rcx
19288(4): shr $0x16,%rax
1928c(8): mov %rbx,0x198(%rsp)
19294(3): and $0x1,%eax
19297(3): cmp %rcx,%rsi
1929a(7): mov %edx,0x1b0(%rsp)
192a1(4): cmovnge %rcx,%rsi
192a5(4): lea 0x1(%rdi),%rcx
192a9(7): mov %al,0x1a8(%rsp)
192b0(8): mov %rdi,0x188(%rsp)
192b8(8): mov %rdi,0x180(%rsp)
192c0(3): cmp %rcx,%rsi
192c3(4): mov (%rsp),%rdi
192c7(4): cmovnl %rcx,%rsi
192cb(3): test %rbx,%rbx
192ce(5): mov 0x78(%rsp),%rcx
192d3(3): setnz %bl
192d6(2): or %ebx,%eax
192d8(7): mov %al,0x1ab(%rsp)
192df(8): movzx 0xb0(%r11),%eax
192e7(8): mov %rcx,0x120(%rsp)
192ef(2): mov %eax,%edx
192f1(3): shr $0x3,%al
192f4(3): shr $0x2,%dl
192f7(3): and $0x1,%eax
192fa(3): and $0x1,%edx
192fd(7): mov %al,0x1aa(%rsp)
19304(7): mov %dl,0x1a9(%rsp)
1930b(5): call 0xffff7d45(%rip)
19310(2): test %eax,%eax
19312(4): mov %eax,0x5c(%rsp)
19316(6): jnz 0x8fa(%rip)
1931c(5): mov 0x38(%rsp),%rdi
19321(7): lea 0xb8(%rdi),%rax
19328(8): mov %rax,0x1a0(%rsp)
19330(7): movzx 0xb0(%rdi),%eax
19337(4): mov %al,0x8(%rsp)
1933b(3): shr $0x4,%al
1933e(3): and $0x1,%eax
19341(8): cmp $0x0,0x1ab(%rsp)
19349(7): mov %al,0x1ae(%rsp)
19350(2): jnz 0x25(%rip)
19352(5): mov 0x38(%rsp),%rsi
19357(5): mov 0x78(%rsp),%rax
1935c(7): cmp $0x1,0xb4(%rsi)
19363(8): mov %rax,0x128(%rsp)
1936b(8): mov 0x88(%rsp),%rax
19373(2): jle 0x4(%rip)
19375(2): xor %eax,%eax
19377(8): mov %rax,0x150(%rsp)
1937f(8): mov %rax,0x158(%rsp)
19387(5): mov 0x48(%rsp),%rax
1938c(8): mov %r13,0x188(%rsp)
19394(8): mov %r13,0x180(%rsp)
1939c(4): movzx 0x38(%rax),%eax
193a0(4): mov %al,0x8(%rsp)
193a4(3): shr $0x7,%al
193a7(7): mov %al,0x1ad(%rsp)
193ae(5): mov 0x38(%rsp),%rax
193b3(7): mov 0x98(%rax),%r14
193ba(7): mov 0x280(%rsp),%eax
193c1(c): mov $0xffffffff,0x1c8(%rsp)
193cd(4): lea 0x0(%r14,%r14,1),%r13
193d1(7): mov %eax,0x1c0(%rsp)
193d8(3): test %r13,%r13
193db(2): jle 0x54(%rip)
193dd(a): mov $0x461168601842738790,%rax
193e7(3): cmp %rax,%r13
193ea(6): jnle 0xd46(%rip)
193f0(5): lea 0x0(%r13,%r14,8),%rdi
193f5(4): shl/sal $0x3,%rdi
193f9(5): call 0xfffe9387(%rip)
193fe(3): mov %r14,%rdi
19401(3): mov %rax,%r15
19404(8): mov %rax,0x1f8(%rsp)
1940c(4): shl/sal $0x4,%rdi
19410(5): call 0xfffe9370(%rip)
19415(3): test %rax,%rax
19418(8): mov %rax,0x218(%rsp)
19420(6): jz 0xd10(%rip)
19426(3): test %r15,%r15
19429(6): jz 0xd07(%rip)
1942f(9): cmp $0x1,0x270(%rsp)
19438(8): mov %r13,0x1f0(%rsp)
19440(b): mov $0x1,0x200(%rsp)
1944b(8): mov %r13,0x210(%rsp)
19453(6): jbe 0x1125(%rip)
19459(8): mov 0x160(%rsp),%rax
19461(a): mov $0x2305843009213693950,%rdx
1946b(3): cmp %rdx,%rax
1946e(6): jnbe 0xcc2(%rip)
19474(8): lea 0x8(,%rax,8),%rdi
1947c(5): call 0xfffe9304(%rip)
19481(3): test %rax,%rax
19484(3): mov %rax,%rdi
19487(8): mov %rax,0x1d8(%rsp)
1948f(6): jz 0xcf1(%rip)
19495(7): mov 0x280(%rsp),%eax
1949c(8): mov %rbp,0xd8(%rsp)
194a4(3): and $0x1,%eax
194a7(3): cmp $0x1,%eax
194aa(2): sbb %eax,%eax
194ac(3): and $0x2,%eax
194af(3): add $0x4,%eax
194b2(7): mov %eax,0x190(%rsp)
194b9(2): xor %eax,%eax
194bb(3): cmp %r12,%rbp
194be(3): setle %al
194c1(4): lea 0xffffffff(%rax,%rax,1),%eax
194c5(7): mov %eax,0xac(%rsp)
194cc(3): mov %r12,%rax
194cf(4): cmovng %rbp,%rax
194d3(8): mov %rax,0x90(%rsp)
194db(3): mov %r12,%rax
194de(4): cmovnl %rbp,%rax
194e2(6): cmp $0x0,0x68(%rsp)
194e8(5): mov %rax,0x70(%rsp)
194ed(5): mov 0x38(%rsp),%rax
194f2(6): mov 0xb4(%rax),%esi
194f8(5): mov $0x8,%eax
194fd(7): mov %esi,0xc8(%rsp)
19504(2): jz 0x3b(%rip)
19506(3): cmp $0x1,%esi
19509(5): mov $0x4,%ecx
1950e(2): jz 0x20(%rip)
19510(5): mov 0x48(%rsp),%rax
19515(4): test $0x40,0x1a(%rax)
19519(6): jnz 0xd85(%rip)
1951f(9): cmp $0x0,0xb0(%rsp)
19528(6): jnz 0xd76(%rip)
1952e(2): xor %edx,%edx
19530(3): cmp %r12,%rbp
19533(3): movzx %bl,%eax
19536(3): setle %dl
19539(2): or %ecx,%eax
1953b(2): add %edx,%edx
1953d(2): or %edx,%eax
1953f(5): cmp 0x70(%rsp),%rbp
19544(3): setnle %cl
19547(8): cmp 0x90(%rsp),%rbp
1954f(3): setl %dl
19552(2): or %dl,%cl
19554(6): jnz 0xad5(%rip)
1955a(8): lea 0xd8(%rsp),%rcx
19562(3): cmp %r12,%rbp
19565(5): mov $0x0,%edx
1956a(4): cmovng %rcx,%rdx
1956e(3): test %rdx,%rdx
19571(8): mov %rdx,0xc0(%rsp)
19579(8): setnz 0xcf(%rsp)
19581(3): sub $0x4,%eax
19584(7): mov %eax,0xa8(%rsp)
1958b(8): lea 0xd0(%rsp),%rax
19593(5): mov %rax,0x28(%rsp)
19598(7): mov 0xa8(%rsp),%eax
1959f(3): cmp $0x4,%eax
195a2(6): jnbe 0xbeb(%rip)
195a8(7): lea 0x9331(%rip),%rcx
195af(4): movsxd 0x0(%rcx,%rax,4),%rax
195b3(3): add %rcx,%rax
195b6(2): jmp %rax
195b8(8): nop 0x0(%rax,%rax,1)
195c0(5): mov 0x38(%rsp),%rax
195c5(8): cmp $0x0,0x98(%rax)
195cd(3): setnz %al
195d0(3): movzx %al,%eax
195d3(4): mov %eax,0x58(%rsp)
195d7(5): jmp 0xfffffc68(%rip)
195dc(4): nop 0x0(%rax)
195e0(9): mov $0x0,0x68(%rsp)
195e9(5): jmp 0xfffffb7d(%rip)
195ee(5): cmp %rbp,0x70(%rsp)
195f3(2): jle 0x5c(%rip)
195f5(5): mov 0x78(%rsp),%rax
195fa(5): mov 0x68(%rsp),%rdi
195ff(4): movzx 0x0(%rax,%rbp,1),%edx
19603(4): lea 0x1(%rbp),%rax
19607(4): cmp $0x0,0x0(%rdi,%rdx,1)
1960b(6): jnz 0x8d(%rip)
19611(5): mov 0x68(%rsp),%rsi
19616(5): mov 0x70(%rsp),%rcx
1961b(5): mov 0x78(%rsp),%rdi
19620(2): jmp 0x1a(%rip)
19622(6): nop 0x0(%rax,%rax,1)
19628(4): movzx 0x0(%rdi,%rax,1),%edx
1962c(4): lea 0x1(%rax),%rax
19630(4): cmp $0x0,0x0(%rsi,%rdx,1)
19634(6): jnz 0x119d(%rip)
1963a(3): cmp %rax,%rcx
1963d(3): mov %rax,%rbp
19640(2): jnz 0xffffffe8(%rip)
19642(5): mov 0x70(%rsp),%rax
19647(8): mov %rax,0xd8(%rsp)
1964f(5): cmp %rbp,0x70(%rsp)
19654(2): jnz 0x44(%rip)
19656(2): xor %eax,%eax
19658(5): mov 0x70(%rsp),%rsi
1965d(8): cmp %rsi,0x88(%rsp)
19665(2): jle 0xb(%rip)
19667(5): mov 0x78(%rsp),%rax
1966c(4): movzx 0x0(%rax,%rsi,1),%eax
19670(8): mov 0xb0(%rsp),%rsi
19678(3): test %rsi,%rsi
1967b(2): jz 0x6(%rip)
1967d(4): movzx 0x0(%rsi,%rax,1),%eax
19681(5): mov 0x68(%rsp),%rdi
19686(4): cmp $0x0,0x0(%rdi,%rax,1)
1968a(6): jz 0x99f(%rip)
19690(5): mov 0x70(%rsp),%rbp
19695(3): nop (%rax)
19698(7): mov 0x280(%rsp),%edx
1969f(4): mov (%rsp),%rdi
196a3(3): mov %rbp,%rsi
196a6(5): call 0xffffb0aa(%rip)
196ab(2): test %eax,%eax
196ad(4): mov %eax,0x5c(%rsp)
196b1(6): jnz 0x55f(%rip)
196b7(8): cmp $0x1,0xc8(%rsp)
196bf(2): jz 0x1e(%rip)
196c1(9): cmp $0x0,0x150(%rsp)
196ca(2): jz 0x13(%rip)
196cc(8): mov 0x130(%rsp),%rax
196d4(3): cmp $0xff,(%rax)
196d7(6): jz 0x92a(%rip)
196dd(8): mov 0x1b8(%rsp),%rbx
196e5(5): movzx 0x58(%rsp),%eax
196ea(b): mov $0x0,0x200(%rsp)
196f5(c): mov $0x0,0x1e8(%rsp)
19701(c): mov $0x0,0x1e0(%rsp)
1970d(b): mov $0x0,0xd0(%rsp)
19718(4): mov 0x48(%rbx),%r14
1971c(3): and $0x1,%eax
1971f(7): mov %al,0xce(%rsp)
19726(8): mov 0x168(%rsp),%rax
1972e(5): cmp $0x0,0x68(%r14)
19733(5): mov %rax,0x8(%rsp)
19738(6): js 0x978(%rip)
1973e(8): mov 0x1d8(%rsp),%rax
19746(3): test %rax,%rax
19749(2): jz 0x19(%rip)
1974b(8): cmp $0x0,0x98(%rbx)
19753(5): mov 0x8(%rsp),%rdi
19758(4): mov %r14,0x0(%rax,%rdi,8)
1975c(6): jnz 0xeef(%rip)
19762(8): movzx 0xcf(%rsp),%eax
1976a(4): mov %al,0x18(%rsp)
1976e(5): movzx 0x68(%r14),%eax
19773(2): test $0x10,%al
19775(9): mov $0xffffffff,0x20(%rsp)
1977e(9): mov $0x0,0x30(%rsp)
19787(6): jnz 0xe89(%rip)
1978d(8): mov 0xc0(%rsp),%rax
19795(8): mov 0x168(%rsp),%r8
1979d(5): mov %rax,0x50(%rsp)
197a2(8): lea 0xe0(%rsp),%rax
197aa(5): mov %rax,0x60(%rsp)
197af(8): lea 0xd4(%rsp),%rax
197b7(8): mov %rax,0x80(%rsp)
197bf(2): jmp 0x5d(%rip)
197c1(7): nop 0x0(%rax)
197c8(3): cmp %r13,%r14
197cb(8): mov 0x168(%rsp),%r8
197d3(3): setz %al
197d6(4): and %al,0x18(%rsp)
197da(5): movzx 0x68(%r13),%eax
197df(6): cmove 0x8(%rsp),%rbx
197e5(2): test $0x10,%al
197e7(5): mov %rbx,0x8(%rsp)
197ec(2): jz 0x2d(%rip)
197ee(2): test %al,%al
197f0(6): js 0x4c0(%rip)
197f6(4): mov 0x58(%rsp),%eax
197fa(5): mov %r8,0x20(%rsp)
197ff(2): test %eax,%eax
19801(6): jz 0x125(%rip)
19807(9): mov $0x1,0x30(%rsp)
19810(9): mov $0x0,0x50(%rsp)
19819(3): mov %r13,%r14
1981c(8): cmp %r8,0x188(%rsp)
19824(6): jle 0xf0(%rip)
1982a(8): mov 0x160(%rsp),%rax
19832(4): lea 0x1(%r8),%rbx
19836(3): cmp %rax,%rbx
19839(6): jnl 0x4a7(%rip)
1983f(8): mov 0x150(%rsp),%rax
19847(3): cmp %rax,%rbx
1984a(6): jnl 0x786(%rip)
19850(5): test $0x20,0x68(%r14)
19855(6): jnz 0x4cb(%rip)
1985b(4): lea 0x1(%r8),%rax
1985f(8): mov %rax,0x168(%rsp)
19867(8): mov 0x128(%rsp),%rax
1986f(5): movzx 0x0(%rax,%r8,1),%r13d
19874(4): mov 0x58(%r14),%rax
19878(3): test %rax,%rax
1987b(6): jz 0x715(%rip)
19881(4): mov 0x0(%rax,%r13,8),%r13
19885(9): cmp $0x0,0x1d8(%rsp)
1988e(2): jz 0x16(%rip)
19890(4): mov (%rsp),%rsi
19894(5): mov 0x28(%rsp),%rdi
19899(3): mov %r13,%rdx
1989c(5): call 0xfffff2f4(%rip)
198a1(3): mov %rax,%r13
198a4(3): test %r13,%r13
198a7(6): jnz 0xffffff21(%rip)
198ad(7): mov 0xd0(%rsp),%ecx
198b4(8): mov 0x1d8(%rsp),%rdi
198bc(2): test %ecx,%ecx
198be(6): jnz 0x8c2(%rip)
198c4(3): test %rdi,%rdi
198c7(2): jz 0x4d(%rip)
198c9(8): movzx 0xce(%rsp),%eax
198d1(3): xor $0x1,%eax
198d4(4): test %al,0x30(%rsp)
198d8(2): jnz 0x3c(%rip)
198da(8): mov 0x1e0(%rsp),%rsi
198e2(8): mov 0x168(%rsp),%rax
198ea(2): xor %ecx,%ecx
198ec(2): jmp 0x17(%rip)
198ee(2): nop 
198f0(5): cmp $0x0,0x0(%rdi,%rdx,8)
198f5(3): mov %rdx,%rax
198f8(5): mov $0x1,%ecx
198fd(6): jnz 0x373(%rip)
19903(4): lea 0x1(%rax),%rdx
19907(3): cmp %rdx,%rsi
1990a(2): jnl 0xffffffe6(%rip)
1990c(2): test %cl,%cl
1990e(6): jnz 0xed0(%rip)
19914(5): mov 0x50(%rsp),%rax
19919(3): test %rax,%rax
1991c(2): jz 0xa(%rip)
1991e(5): mov 0x8(%rsp),%rdi
19923(3): add %rdi,(%rax)
19926(5): mov 0x20(%rsp),%rax
1992b(4): cmp $0xffffffff,%rax
1992f(6): jz 0x6c1(%rip)
19935(4): cmp $0xfffffffe,%rax
19939(6): jz 0x7f7(%rip)
1993f(5): mov 0x20(%rsp),%rax
19944(8): mov %rax,0x1c8(%rsp)
1994c(5): mov 0x48(%rsp),%rax
19951(4): test $0x10,0x38(%rax)
19955(6): jnz 0x7bb(%rip)
1995b(9): cmp $0x1,0x270(%rsp)
19964(6): jbe 0x8f8(%rip)
1996a(5): mov 0x20(%rsp),%rcx
1996f(8): mov 0x1d8(%rsp),%rbx
19977(4): mov (%rsp),%rdi
1997b(4): mov 0x0(%rbx,%rcx,8),%rax
1997f(4): mov 0x10(%rax),%rsi
19983(4): lea 0x18(%rax),%rdx
19987(5): call 0xffffacf9(%rip)
1998c(3): mov %rax,%r13
1998f(8): mov %rax,0x1d0(%rsp)
19997(5): mov 0x38(%rsp),%rax
1999c(7): test $0x1,0xb0(%rax)
199a3(2): jnz 0x1d(%rip)
199a5(5): mov 0x38(%rsp),%rax
199aa(8): cmp $0x0,0x98(%rax)
199b2(6): jz 0x99a(%rip)
199b8(8): mov 0x1d0(%rsp),%r13
199c0(a): mov $0x2305843009213693950,%rsi
199ca(5): cmp %rsi,0x20(%rsp)
199cf(8): mov 0x1b8(%rsp),%r15
199d7(6): jnbe 0xc64(%rip)
199dd(5): mov 0x20(%rsp),%rax
199e2(4): add $0x1,%rax
199e6(8): lea 0x0(,%rax,8),%rbx
199ee(5): mov %rax,0x8(%rsp)
199f3(3): mov %rbx,%rdi
199f6(5): call 0xfffe8d8a(%rip)
199fb(3): test %rax,%rax
199fe(3): mov %rax,%r12
19a01(6): jz 0x72f(%rip)
19a07(8): cmp $0x0,0x98(%r15)
19a0f(6): jz 0x896(%rip)
19a15(3): mov %rbx,%rdi
19a18(5): call 0xfffe8d68(%rip)
19a1d(3): test %rax,%rax
19a20(3): mov %rax,%rbp
19a23(6): jz 0x705(%rip)
19a29(5): mov 0x20(%rsp),%r14
19a2e(8): lea 0xe0(%rsp),%rbx
19a36(5): mov %r15,0x10(%rsp)
19a3b(5): mov %rax,0x18(%rsp)
19a40(5): mov 0x8(%rsp),%rax
19a45(2): xor %esi,%esi
19a47(3): mov %rbp,%rdi
19a4a(8): lea 0x0(,%rax,8),%rdx
19a52(5): call 0xfffe8bce(%rip)
19a57(4): pxor %xmm0,%xmm0
19a5b(8): mov %r12,0xe0(%rsp)
19a63(8): mov %rbp,0xe8(%rsp)
19a6b(8): mov %r13,0xf0(%rsp)
19a73(3): mov %rbx,%rsi
19a76(8): mov %r14,0xf8(%rsp)
19a7e(4): mov (%rsp),%rdi
19a82(4): movaps %xmm0,0x20(%rbx)
19a86(8): mov $0x0,0x30(%rbx)
19a8e(5): call 0xfffff2f2(%rip)
19a93(8): mov 0x110(%rsp),%rdi
19a9b(3): mov %eax,%r15d
19a9e(5): call 0xfffe8f72(%rip)
19aa3(3): test %r15d,%r15d
19aa6(6): jnz 0xc1e(%rip)
19aac(5): cmp $0x0,(%r12)
19ab1(6): jnz 0xc72(%rip)
19ab7(5): cmp $0x0,0x0(%rbp)
19abc(6): jnz 0xc67(%rip)
19ac2(8): mov 0x1d8(%rsp),%rdx
19aca(6): nop 0x0(%rax,%rax,1)
19ad0(4): sub $0x1,%r14
19ad4(4): cmp $0xffffffff,%r14
19ad8(6): jz 0xac3(%rip)
19ade(4): mov 0x0(%rdx,%r14,8),%rax
19ae2(3): test %rax,%rax
19ae5(2): jz 0xffffffeb(%rip)
19ae7(4): test $0x10,0x68(%rax)
19aeb(2): jz 0xffffffe5(%rip)
19aed(4): mov 0x10(%rax),%rsi
19af1(4): mov (%rsp),%rdi
19af5(4): lea 0x18(%rax),%rdx
19af9(3): mov %r14,%rcx
19afc(5): call 0xffffab84(%rip)
19b01(3): mov %rax,%r13
19b04(4): lea 0x1(%r14),%rax
19b08(5): mov %rax,0x8(%rsp)
19b0d(5): jmp 0xffffff33(%rip)
19b12(5): cmp %rbp,0x70(%rsp)
19b17(6): jle 0xfffffb38(%rip)
19b1d(5): mov 0x78(%rsp),%rax
19b22(8): mov 0xb0(%rsp),%rdi
19b2a(5): mov 0x68(%rsp),%rsi
19b2f(4): movzx 0x0(%rax,%rbp,1),%eax
19b33(4): movzx 0x0(%rdi,%rax,1),%edx
19b37(4): lea 0x1(%rbp),%rax
19b3b(4): cmp $0x0,0x0(%rsi,%rdx,1)
19b3f(6): jnz 0xfffffb59(%rip)
19b45(5): mov 0x68(%rsp),%rsi
19b4a(8): mov 0xb0(%rsp),%rdi
19b52(5): mov 0x70(%rsp),%rcx
19b57(5): mov 0x78(%rsp),%r8
19b5c(2): jmp 0x1b(%rip)
19b5e(2): nop 
19b60(5): movzx 0x0(%r8,%rax,1),%eax
19b65(4): movzx 0x0(%rdi,%rax,1),%edx
19b69(4): lea 0x1(%rbp),%rax
19b6d(4): cmp $0x0,0x0(%rsi,%rdx,1)
19b71(6): jnz 0xc60(%rip)
19b77(3): cmp %rax,%rcx
19b7a(3): mov %rax,%rbp
19b7d(2): jnz 0xffffffe3(%rip)
19b7f(5): jmp 0xfffffac3(%rip)
19b84(8): cmp %rbp,0x90(%rsp)
19b8c(6): jnle 0x49d(%rip)
19b92(2): xor %ecx,%ecx
19b94(3): mov %rbp,%rax
19b97(5): mov 0x68(%rsp),%rdi
19b9c(8): mov 0xb0(%rsp),%rsi
19ba4(8): mov 0x90(%rsp),%r9
19bac(5): mov 0x78(%rsp),%r10
19bb1(8): mov 0x88(%rsp),%r8
19bb9(2): jmp 0x19(%rip)
19bbb(5): nop 0x0(%rax,%rax,1)
19bc0(4): sub $0x1,%rax
19bc4(5): mov $0x1,%ecx
19bc9(3): cmp %r9,%rax
19bcc(6): jl 0x9e4(%rip)
19bd2(2): xor %edx,%edx
19bd4(3): cmp %rax,%r8
19bd7(2): jle 0x7(%rip)
19bd9(5): movzx 0x0(%r10,%rax,1),%edx
19bde(3): test %rsi,%rsi
19be1(2): jz 0x6(%rip)
19be3(4): movzx 0x0(%rsi,%rdx,1),%edx
19be7(4): cmp $0x0,0x0(%rdi,%rdx,1)
19beb(2): jz 0xffffffd5(%rip)
19bed(2): test %cl,%cl
19bef(6): jz 0xfffffaa9(%rip)
19bf5(8): mov %rax,0xd8(%rsp)
19bfd(3): mov %rax,%rbp
19c00(5): jmp 0xfffffa98(%rip)
19c05(3): nop (%rax)
19c08(4): mov %eax,0x5c(%rsp)
19c0c(4): nop 0x0(%rax)
19c10(8): mov 0x1d8(%rsp),%rdi
19c18(5): call 0xfffe8df8(%rip)
19c1d(5): mov 0x38(%rsp),%rax
19c22(8): cmp $0x0,0x98(%rax)
19c2a(6): jnz 0x926(%rip)
19c30(4): mov (%rsp),%rdi
19c34(5): call 0xffff875c(%rip)
19c39(8): mov 0x228(%rsp),%rsi
19c41(9): xor $0x28,%rsi
19c4a(4): mov 0x5c(%rsp),%eax
19c4e(6): jnz 0xb9d(%rip)
19c54(7): add $0x238,%rsp
19c5b(1): pop %rbx
19c5c(1): pop %rbp
19c5d(2): pop %r12
19c5f(2): pop %r13
19c61(2): pop %r14
19c63(2): pop %r15
19c65(1): ret near (%rsp)
19c66(a): nop 0x0(%rax,%rax,1)
19c70(4): mov (%rsp),%rsi
19c74(5): mov 0x28(%rsp),%rdi
19c79(8): mov %rdx,0x168(%rsp)
19c81(2): xor %edx,%edx
19c83(5): call 0xffffef0d(%rip)
19c88(7): mov 0xd0(%rsp),%edx
19c8f(2): test %edx,%edx
19c91(6): jnz 0x93c(%rip)
19c97(3): test %rax,%rax
19c9a(6): jnz 0x946(%rip)
19ca0(8): mov 0x1d8(%rsp),%rdi
19ca8(5): jmp 0xfffffc32(%rip)
19cad(3): nop (%rax)
19cb0(4): mov 0x10(%r13),%rsi
19cb4(4): mov (%rsp),%rdi
19cb8(4): lea 0x18(%r13),%rdx
19cbc(3): mov %r8,%rcx
19cbf(5): mov %r8,0x10(%rsp)
19cc4(5): call 0xffffa9bc(%rip)
19cc9(3): test %rax,%rax
19ccc(5): mov 0x10(%rsp),%r8
19cd1(6): jz 0xfffffb48(%rip)
19cd7(5): jmp 0xfffffb1f(%rip)
19cdc(4): nop 0x0(%rax)
19ce0(8): cmp 0x178(%rsp),%rax
19ce8(6): jnl 0xfffffb57(%rip)
19cee(4): mov (%rsp),%rdi
19cf2(3): lea 0x1(%rbx),%esi
19cf5(5): call 0xffff7eeb(%rip)
19cfa(2): test %eax,%eax
19cfc(7): mov %eax,0xd0(%rsp)
19d03(6): jnz 0x8e5(%rip)
19d09(5): test $0x20,0x68(%r14)
19d0e(8): mov 0x168(%rsp),%r8
19d16(6): jz 0xfffffb45(%rip)
19d1c(4): nop 0x0(%rax)
19d20(5): cmp $0x0,0x10(%r14)
19d25(8): mov 0x1b8(%rsp),%r13
19d2d(6): jle 0x32e(%rip)
19d33(7): lea 0xd8(%r13),%rax
19d3a(3): xor %r12d,%r12d
19d3d(8): mov %rbx,0xa0(%rsp)
19d45(3): mov %r12,%rbx
19d48(3): mov %r8,%r12
19d4b(5): mov %rax,0x40(%rsp)
19d50(5): jmp 0x158(%rip)
19d55(3): nop (%rax)
19d58(2): test $0x1,%al
19d5a(6): jz 0x140(%rip)
19d60(3): and $0x8,%ecx
19d63(6): jnz 0x137(%rip)
19d69(3): test $0x20,%dl
19d6c(2): jz 0xa(%rip)
19d6e(2): test $0x2,%al
19d70(6): jz 0x12a(%rip)
19d76(6): and $0x80,%edx
19d7c(2): jz 0x14(%rip)
19d7e(2): test $0x8,%al
19d80(6): jz 0x11a(%rip)
19d86(a): nop 0x0(%rax,%rax,1)
19d90(4): mov (%rsp),%rcx
19d94(5): mov 0x40(%rsp),%rsi
19d99(3): mov %r12,%r8
19d9c(3): mov %r15,%rdx
19d9f(3): mov %rbp,%rdi
19da2(5): call 0xffffd0ae(%rip)
19da7(2): test %eax,%eax
19da9(6): jz 0xe9(%rip)
19daf(3): movsxd %eax,%rbp
19db2(8): add 0x168(%rsp),%rbp
19dba(7): cmp %eax,0x200(%rsp)
19dc1(8): cmovnl 0x200(%rsp),%eax
19dc9(4): mov (%rsp),%rdi
19dcd(3): mov %rbp,%rsi
19dd0(7): mov %eax,0x200(%rsp)
19dd7(5): call 0xffff7f59(%rip)
19ddc(2): test %eax,%eax
19dde(7): mov %eax,0xd4(%rsp)
19de5(6): jnz 0x29b(%rip)
19deb(4): mov 0x18(%r13),%rax
19def(8): lea 0x0(,%rbp,8),%r12
19df7(4): mov 0x0(%rax,%r15,8),%rax
19dfb(8): mov 0x1d8(%rsp),%r15
19e03(4): lea 0x0(%rax,%rax,2),%rdx
19e07(4): mov 0x30(%r13),%rax
19e0b(3): add %r12,%r15
19e0e(4): lea 0x0(%rax,%rdx,8),%rdx
19e12(3): mov (%r15),%rax
19e15(3): test %rax,%rax
19e18(6): jz 0x100(%rip)
19e1e(4): mov 0x50(%rax),%rsi
19e22(5): mov 0x60(%rsp),%rdi
19e27(5): call 0xffff9a69(%rip)
19e2c(2): test %eax,%eax
19e2e(7): mov %eax,0xd4(%rsp)
19e35(6): jnz 0x24b(%rip)
19e3b(7): mov 0x1c0(%rsp),%edx
19e42(4): mov (%rsp),%rdi
19e46(4): lea 0xffffffff(%rbp),%rsi
19e4a(5): call 0xffffa636(%rip)
19e4f(5): mov 0x60(%rsp),%rdx
19e54(8): mov 0x80(%rsp),%rdi
19e5c(2): mov %eax,%ecx
19e5e(8): add 0x1d8(%rsp),%r12
19e66(3): mov %r13,%rsi
19e69(5): call 0xffff9b87(%rip)
19e6e(8): mov 0xf0(%rsp),%rdi
19e76(4): mov %rax,(%r12)
19e7a(5): call 0xfffe8b96(%rip)
19e7f(8): mov 0x1d8(%rsp),%rdi
19e87(5): cmp $0x0,0x0(%rdi,%rbp,8)
19e8c(6): jz 0xe5(%rip)
19e92(8): mov 0x168(%rsp),%r12
19e9a(4): add $0x1,%rbx
19e9e(4): cmp 0x10(%r14),%rbx
19ea2(6): jnl 0x1ae(%rip)
19ea8(4): mov 0x18(%r14),%rax
19eac(4): mov 0x0(%r13),%rbp
19eb0(4): mov 0x0(%rax,%rbx,8),%r15
19eb4(3): mov %r15,%rax
19eb7(4): shl/sal $0x4,%rax
19ebb(3): add %rbp,%rax
19ebe(4): test $0x10,0xa(%rax)
19ec2(2): jz 0xffffffd8(%rip)
19ec4(3): mov 0x8(%rax),%ecx
19ec7(6): test $0x3ff00,%ecx
19ecd(4): mov %ecx,0x10(%rsp)
19ed1(6): jz 0xfffffebf(%rip)
19ed7(7): mov 0x1c0(%rsp),%edx
19ede(4): mov (%rsp),%rdi
19ee2(3): mov %r12,%rsi
19ee5(5): call 0xffffa59b(%rip)
19eea(4): mov 0x10(%rsp),%ecx
19eee(3): shr $0x8,%ecx
19ef1(2): mov %ecx,%edx
19ef3(5): and $0x3ff,%dx
19ef8(3): test $0x4,%cl
19efb(6): jnz 0xfffffe5d(%rip)
19f01(3): and $0x8,%ecx
19f04(6): jz 0xfffffe65(%rip)
19f0a(2): test $0x1,%al
19f0c(6): jz 0xfffffe5d(%rip)
19f12(2): jmp 0xffffff88(%rip)
19f14(4): nop 0x0(%rax)
19f18(4): movdqu (%rdx),%xmm0
19f1c(4): lea 0xffffffff(%rbp),%rsi
19f20(4): mov (%rsp),%rdi
19f24(8): movaps %xmm0,0xe0(%rsp)
19f2c(4): mov 0x10(%rdx),%rax
19f30(7): mov 0x1c0(%rsp),%edx
19f37(8): mov %rax,0xf0(%rsp)
19f3f(5): call 0xffffa541(%rip)
19f44(8): mov 0x80(%rsp),%rdi
19f4c(5): mov 0x60(%rsp),%rdx
19f51(2): mov %eax,%ecx
19f53(3): mov %r13,%rsi
19f56(5): call 0xffff9a9a(%rip)
19f5b(8): mov 0x1d8(%rsp),%rdi
19f63(3): mov %rax,(%r15)
19f66(5): cmp $0x0,0x0(%rdi,%rbp,8)
19f6b(6): jnz 0xffffff27(%rip)
19f71(7): mov 0xd4(%rsp),%eax
19f78(2): test %eax,%eax
19f7a(6): jz 0xffffff18(%rip)
19f80(8): mov 0xa0(%rsp),%rbx
19f88(5): jmp 0x108(%rip)
19f8d(3): nop (%rax)
19f90(4): mov 0x60(%r14),%rbp
19f94(3): test %rbp,%rbp
19f97(6): jz 0x1ae(%rip)
19f9d(8): mov 0x168(%rsp),%rax
19fa5(7): mov 0x1c0(%rsp),%edx
19fac(4): mov (%rsp),%rdi
19fb0(4): lea 0xffffffff(%rax),%rsi
19fb4(5): call 0xffffa4cc(%rip)
19fb9(2): test $0x1,%al
19fbb(6): jz 0xb5(%rip)
19fc1(8): mov 0x800(%rbp,%r13,8),%r13
19fc9(5): jmp 0xfffff8bc(%rip)
19fce(2): nop 
19fd0(8): cmp 0x178(%rsp),%rax
19fd8(6): jnl 0xfffff878(%rip)
19fde(5): jmp 0xfffffd10(%rip)
19fe3(3): mov %r12,%rdi
19fe6(5): call 0xfffe8a2a(%rip)
19feb(5): nop 0x0(%rax,%rax,1)
19ff0(4): mov (%rsp),%rdi
19ff4(5): call 0xffff853c(%rip)
19ff9(8): mov 0xd8(%rsp),%rbp
1a001(8): movsxd 0xac(%rsp),%rax
1a009(3): add %rax,%rbp
1a00c(8): cmp 0x90(%rsp),%rbp
1a014(8): mov %rbp,0xd8(%rsp)
1a01c(2): jl 0xd(%rip)
1a01e(5): cmp 0x70(%rsp),%rbp
1a023(6): jle 0xfffff575(%rip)
1a029(8): mov 0x1d8(%rsp),%rdi
1a031(8): mov $0x1,0x5c(%rsp)
1a039(5): jmp 0xfffffbdf(%rip)
1a03e(2): nop 
1a040(8): mov $0x1,0x5c(%rsp)
1a048(5): jmp 0xfffffbf1(%rip)
1a04d(3): nop (%rax)
1a050(8): mov 0xa0(%rsp),%rbx
1a058(3): mov %r12,%r8
1a05b(b): mov $0x0,0xd0(%rsp)
1a066(5): jmp 0xfffff7f5(%rip)
1a06b(5): nop 0x0(%rax,%rax,1)
1a070(5): mov 0x0(%rbp,%r13,8),%r13
1a075(5): jmp 0xfffff810(%rip)
1a07a(6): nop 0x0(%rax,%rax,1)
1a080(8): mov 0xa0(%rsp),%rbx
1a088(8): mov 0x1d8(%rsp),%rdi
1a090(3): test %rdi,%rdi
1a093(7): mov %eax,0xd0(%rsp)
1a09a(6): jz 0xe6(%rip)
1a0a0(3): xor %r13d,%r13d
1a0a3(5): jmp 0xfffff7ed(%rip)
1a0a8(8): nop 0x0(%rax,%rax,1)
1a0b0(7): mov 0x1c0(%rsp),%edx
1a0b7(4): mov (%rsp),%rdi
1a0bb(4): lea 0xffffffff(%rax),%rsi
1a0bf(5): call 0xffffa3c1(%rip)
1a0c4(2): test $0x1,%al
1a0c6(6): jz 0x16f(%rip)
1a0cc(4): mov 0x50(%rbx),%r14
1a0d0(3): test %r14,%r14
1a0d3(6): jnz 0xfffff66b(%rip)
1a0d9(7): mov 0xd0(%rsp),%eax
1a0e0(3): cmp $0xc,%eax
1a0e3(4): mov %eax,0x5c(%rsp)
1a0e7(6): jz 0xfffffb29(%rip)
1a0ed(7): lea 0x8c7c(%rip),%rcx
1a0f4(7): lea 0x86a5(%rip),%rsi
1a0fb(7): lea 0x874e(%rip),%rdi
1a102(5): mov $0x435,%edx
1a107(5): call 0xfffe84f9(%rip)
1a10c(4): nop 0x0(%rax)
1a110(5): mov 0x38(%rsp),%rax
1a115(8): cmp $0x0,0x98(%rax)
1a11d(6): jz 0x22f(%rip)
1a123(5): jmp 0x14c(%rip)
1a128(3): mov %r12,%rdi
1a12b(5): call 0xfffe88e5(%rip)
1a130(8): mov 0x1d8(%rsp),%rdi
1a138(8): mov $0xc,0x5c(%rsp)
1a140(5): jmp 0xfffffad8(%rip)
1a145(8): mov 0x1b8(%rsp),%rdi
1a14d(3): mov %r14,%rsi
1a150(5): call 0xffffafe0(%rip)
1a155(2): test %al,%al
1a157(6): jnz 0xfffff71d(%rip)
1a15d(8): mov 0x1d8(%rsp),%rdi
1a165(b): mov $0xc,0xd0(%rsp)
1a170(3): test %rdi,%rdi
1a173(6): jnz 0xffffff2d(%rip)
1a179(7): nop 0x0(%rax)
1a180(8): mov $0xc,0x5c(%rsp)
1a188(5): jmp 0xfffffa90(%rip)
1a18d(5): mov 0x68(%rsp),%rbx
1a192(8): mov 0xac(%rsp),%r13d
1a19a(8): mov 0x90(%rsp),%r14
1a1a2(5): mov 0x70(%rsp),%r15
1a1a7(8): mov 0x88(%rsp),%r12
1a1af(2): jmp 0x49(%rip)
1a1b1(7): nop 0x0(%rax)
1a1b8(3): cmp %rbp,%r12
1a1bb(3): mov %rbx,%rax
1a1be(2): jle 0x11(%rip)
1a1c0(8): mov 0x128(%rsp),%rax
1a1c8(4): movzx 0x0(%rax,%rdx,1),%eax
1a1cc(3): add %rbx,%rax
1a1cf(3): cmp $0x0,(%rax)
1a1d2(6): jnz 0xfffff4c6(%rip)
1a1d8(3): movsxd %r13d,%rax
1a1db(3): add %rax,%rbp
1a1de(3): cmp %r14,%rbp
1a1e1(8): mov %rbp,0xd8(%rsp)
1a1e9(6): jl 0xfffffe40(%rip)
1a1ef(3): cmp %r15,%rbp
1a1f2(6): jnle 0xfffffe37(%rip)
1a1f8(3): mov %rbp,%rdx
1a1fb(8): sub 0x148(%rsp),%rdx
1a203(8): cmp %rdx,0x158(%rsp)
1a20b(2): jnbe 0xffffffad(%rip)
1a20d(7): mov 0x280(%rsp),%edx
1a214(4): mov (%rsp),%rdi
1a218(3): mov %rbp,%rsi
1a21b(5): call 0xffffa535(%rip)
1a220(2): test %eax,%eax
1a222(6): jnz 0xfffff9e6(%rip)
1a228(3): mov %rbp,%rdx
1a22b(8): sub 0x148(%rsp),%rdx
1a233(2): jmp 0xffffff85(%rip)
1a235(2): test %eax,%eax
1a237(6): jz 0xfffff507(%rip)
1a23d(2): mov %eax,%edx
1a23f(3): and $0x6,%edx
1a242(3): cmp $0x6,%edx
1a245(6): jz 0x46a(%rip)
1a24b(2): test $0x2,%al
1a24d(6): jz 0x4b3(%rip)
1a253(4): mov 0x58(%rbx),%r14
1a257(5): jmp 0xfffffe79(%rip)
1a25c(5): mov 0x38(%rsp),%rax
1a261(8): cmp $0x0,0x98(%rax)
1a269(6): jz 0xe3(%rip)
1a26f(5): mov 0x20(%rsp),%rcx
1a274(8): mov 0x1d8(%rsp),%rbx
1a27c(4): mov (%rsp),%rdi
1a280(4): mov 0x0(%rbx,%rcx,8),%rax
1a284(4): mov 0x10(%rax),%rsi
1a288(4): lea 0x18(%rax),%rdx
1a28c(5): call 0xffffa3f4(%rip)
1a291(8): mov %rax,0x1d0(%rsp)
1a299(5): jmp 0xfffff71f(%rip)
1a29e(2): xor %ecx,%ecx
1a2a0(5): jmp 0xfffff28e(%rip)
1a2a5(4): pxor %xmm0,%xmm0
1a2a9(8): mov %rax,0xe0(%rsp)
1a2b1(4): mov (%rsp),%rdi
1a2b5(5): mov 0x20(%rsp),%rax
1a2ba(8): lea 0xe0(%rsp),%rbx
1a2c2(c): mov $0x0,0xe8(%rsp)
1a2ce(8): mov %r13,0xf0(%rsp)
1a2d6(3): mov %rbx,%rsi
1a2d9(c): mov $0x0,0x110(%rsp)
1a2e5(8): movaps %xmm0,0x100(%rsp)
1a2ed(8): mov %rax,0xf8(%rsp)
1a2f5(5): call 0xffffea8b(%rip)
1a2fa(8): mov 0x110(%rsp),%rdi
1a302(4): mov %eax,0x8(%rsp)
1a306(5): call 0xfffe870a(%rip)
1a30b(4): mov 0x8(%rsp),%eax
1a30f(2): test %eax,%eax
1a311(6): jnz 0x447(%rip)
1a317(5): cmp $0x0,(%r12)
1a31c(6): jz 0xfffffcc7(%rip)
1a322(8): mov 0x1d8(%rsp),%rdi
1a32a(5): call 0xfffe86e6(%rip)
1a32f(5): mov 0x20(%rsp),%rax
1a334(8): mov %r12,0x1d8(%rsp)
1a33c(8): mov %r13,0x1d0(%rsp)
1a344(8): mov %rax,0x1c8(%rsp)
1a34c(9): cmp $0x0,0x270(%rsp)
1a355(6): jz 0xfffff8bb(%rip)
1a35b(9): cmp $0x1,0x270(%rsp)
1a364(6): jz 0x424(%rip)
1a36a(8): mov 0xb8(%rsp),%rsi
1a372(8): mov 0x270(%rsp),%rcx
1a37a(7): mov $0xffffffff,%rdx
1a381(4): shl/sal $0x4,%rcx
1a385(4): lea 0x10(%rsi),%rax
1a389(3): add %rsi,%rcx
1a38c(4): mov %rdx,0x8(%rax)
1a390(3): mov %rdx,(%rax)
1a393(4): add $0x10,%rax
1a397(3): cmp %rax,%rcx
1a39a(2): jnz 0xfffffff2(%rip)
1a39c(8): mov 0xb8(%rsp),%rdi
1a3a4(8): mov 0x1c8(%rsp),%rax
1a3ac(4): mov %rax,0x8(%rdi)
1a3b0(5): mov 0x48(%rsp),%rax
1a3b5(7): mov $0x0,(%rdi)
1a3bc(4): test $0x10,0x38(%rax)
1a3c0(6): jnz 0x3e3(%rip)
1a3c6(9): cmp $0x1,0x270(%rsp)
1a3cf(6): jz 0x3d4(%rip)
1a3d5(5): mov 0x38(%rsp),%rax
1a3da(3): xor %r8d,%r8d
1a3dd(7): test $0x1,0xb0(%rax)
1a3e4(2): jz 0x11(%rip)
1a3e6(3): xor %r8d,%r8d
1a3e9(8): cmp $0x0,0x98(%rax)
1a3f1(4): setnle %r8b
1a3f5(8): mov 0xb8(%rsp),%rbx
1a3fd(8): mov 0x270(%rsp),%rdx
1a405(4): mov (%rsp),%rsi
1a409(5): mov 0x48(%rsp),%rdi
1a40e(3): mov %rbx,%rcx
1a411(5): call 0xffffd3ff(%rip)
1a416(2): test %eax,%eax
1a418(6): jnz 0x2d5(%rip)
1a41e(3): mov (%rbx),%rax
1a421(9): movzx 0x1ac(%rsp),%r11d
1a42a(8): mov 0x150(%rsp),%r10
1a432(2): xor %ecx,%ecx
1a434(8): mov 0x138(%rsp),%r9
1a43c(8): mov 0x158(%rsp),%r8
1a444(8): mov 0xd8(%rsp),%rdi
1a44c(8): mov 0xb8(%rsp),%rdx
1a454(2): jmp 0x5(%rip)
1a456(3): mov (%rdx),%rax
1a459(4): cmp $0xffffffff,%rax
1a45d(2): jz 0x1c(%rip)
1a45f(3): test %r11b,%r11b
1a462(4): mov 0x8(%rdx),%rsi
1a466(6): jnz 0x344(%rip)
1a46c(3): add %rdi,%rax
1a46f(3): add %rdi,%rsi
1a472(3): mov %rax,(%rdx)
1a475(4): mov %rsi,0x8(%rdx)
1a479(4): add $0x1,%rcx
1a47d(4): add $0x10,%rdx
1a481(8): cmp 0x270(%rsp),%rcx
1a489(2): jnz 0xffffffcd(%rip)
1a48b(9): cmp $0x0,0x98(%rsp)
1a494(2): jle 0x41(%rip)
1a496(8): mov 0x98(%rsp),%rdx
1a49e(8): mov 0xb8(%rsp),%rdi
1a4a6(3): mov %rcx,%rax
1a4a9(4): shl/sal $0x4,%rax
1a4ad(3): add %rcx,%rdx
1a4b0(5): lea 0x8(%rdi,%rax,1),%rax
1a4b5(4): shl/sal $0x4,%rdx
1a4b9(5): lea 0x8(%rdi,%rdx,1),%rsi
1a4be(7): mov $0xffffffff,%rdx
1a4c5(4): mov %rdx,0xfffffff8(%rax)
1a4c9(3): mov %rdx,(%rax)
1a4cc(4): add $0x10,%rax
1a4d0(3): cmp %rax,%rsi
1a4d3(2): jnz 0xfffffff2(%rip)
1a4d5(5): mov 0x38(%rsp),%rax
1a4da(8): mov 0x1d8(%rsp),%rdi
1a4e2(7): mov 0xe0(%rax),%r9
1a4e9(3): test %r9,%r9
1a4ec(6): jz 0xfffff72c(%rip)
1a4f2(8): mov 0xb8(%rsp),%r10
1a4fa(3): xor %r8d,%r8d
1a4fd(4): lea 0x10(%r10),%rdx
1a501(2): jmp 0x38(%rip)
1a503(5): mov 0xfffffff8(%r9,%rsi,8),%rax
1a508(3): cmp %r8,%rax
1a50b(2): jz 0x27(%rip)
1a50d(4): add $0x1,%rax
1a511(4): shl/sal $0x4,%rax
1a515(4): mov 0x0(%r10,%rax,1),%rax
1a519(3): mov %rax,(%rdx)
1a51c(5): mov 0xfffffff8(%r9,%rsi,8),%rax
1a521(4): add $0x1,%rax
1a525(4): shl/sal $0x4,%rax
1a529(5): mov 0x8(%r10,%rax,1),%rax
1a52e(4): mov %rax,0x8(%rdx)
1a532(4): add $0x10,%rdx
1a536(3): mov %rsi,%r8
1a539(4): lea 0x1(%r8),%rsi
1a53d(3): cmp %rcx,%rsi
1a540(2): jnz 0xffffffc3(%rip)
1a542(5): jmp 0xfffff6d6(%rip)
1a547(9): nop 0x0(%rax,%rax,1)
1a550(4): mov (%rsp),%rdi
1a554(5): call 0xffff7fdc(%rip)
1a559(8): mov 0x218(%rsp),%rdi
1a561(5): call 0xfffe84af(%rip)
1a566(8): mov 0x1f8(%rsp),%rdi
1a56e(5): call 0xfffe84a2(%rip)
1a573(5): jmp 0xfffff6bd(%rip)
1a578(5): mov 0x38(%rsp),%rax
1a57d(7): test $0x2,0xb0(%rax)
1a584(6): jnz 0xffffeed5(%rip)
1a58a(c): mov $0x0,0x1d8(%rsp)
1a596(5): jmp 0xffffeeff(%rip)
1a59b(3): mov %r12,%rdi
1a59e(5): call 0xfffe8472(%rip)
1a5a3(3): mov %rbp,%rdi
1a5a6(5): call 0xfffe846a(%rip)
1a5ab(5): jmp 0xfffffa45(%rip)
1a5b0(8): mov %rax,0xd8(%rsp)
1a5b8(8): mov 0x1d8(%rsp),%rdi
1a5c0(8): mov $0x1,0x5c(%rsp)
1a5c8(5): jmp 0xfffff650(%rip)
1a5cd(3): test %rax,%rax
1a5d0(3): mov %rax,%r13
1a5d3(6): jnz 0xfffff1f5(%rip)
1a5d9(5): jmp 0xfffff33b(%rip)
1a5de(2): nop 
1a5e0(3): mov %rax,%r13
1a5e3(5): jmp 0xfffff1e5(%rip)
1a5e8(3): cmp $0xc,%eax
1a5eb(6): jz 0xfffffb45(%rip)
1a5f1(7): lea 0x8778(%rip),%rcx
1a5f8(7): lea 0x81a1(%rip),%rsi
1a5ff(7): lea 0x824a(%rip),%rdi
1a606(5): mov $0x46c,%edx
1a60b(5): call 0xfffe7ff5(%rip)
1a610(5): cmp $0x0,0x68(%r14)
1a615(2): js 0x71(%rip)
1a617(4): mov 0x58(%rsp),%esi
1a61b(5): mov 0x8(%rsp),%rax
1a620(2): test %esi,%esi
1a622(5): mov %rax,0x20(%rsp)
1a627(6): jz 0xfffff2ff(%rip)
1a62d(9): mov $0x1,0x30(%rsp)
1a636(5): jmp 0xfffff157(%rip)
1a63b(3): mov %rbx,%rdi
1a63e(8): mov $0xc,0x5c(%rsp)
1a646(5): jmp 0xfffff5d2(%rip)
1a64b(4): lea 0x10(%r14),%rbx
1a64f(4): lea 0x18(%r14),%rbp
1a653(4): mov (%rsp),%rdi
1a657(2): xor %ecx,%ecx
1a659(3): mov %rbp,%rdx
1a65c(3): mov %rbx,%rsi
1a65f(5): call 0xffff9cd1(%rip)
1a664(2): test %eax,%eax
1a666(7): mov %eax,0xd0(%rsp)
1a66d(2): jnz 0x4b(%rip)
1a66f(5): movzx 0x68(%r14),%eax
1a674(2): test $0x40,%al
1a676(6): jnz 0xea(%rip)
1a67c(5): mov $0x0,0x18(%rsp)
1a681(5): jmp 0xfffff0f2(%rip)
1a686(4): mov 0x10(%r14),%rsi
1a68a(5): mov 0x8(%rsp),%rcx
1a68f(4): lea 0x18(%r14),%rdx
1a693(4): mov (%rsp),%rdi
1a697(5): call 0xffff9fe9(%rip)
1a69c(3): test %rax,%rax
1a69f(5): mov %rax,0x30(%rsp)
1a6a4(6): jz 0xfffff0e9(%rip)
1a6aa(5): jmp 0xffffff6d(%rip)
1a6af(4): mov 0x60(%rbx),%r14
1a6b3(5): jmp 0xfffffa1d(%rip)
1a6b8(2): cwde 
1a6ba(5): mov %rax,0x20(%rsp)
1a6bf(5): jmp 0xfffff267(%rip)
1a6c4(5): mov 0x18(%rsp),%r14
1a6c9(3): mov %r15d,%eax
1a6cc(3): mov %r12,%rdi
1a6cf(4): mov %eax,0x8(%rsp)
1a6d3(5): call 0xfffe833d(%rip)
1a6d8(3): mov %r14,%rdi
1a6db(5): call 0xfffe8335(%rip)
1a6e0(4): mov 0x8(%rsp),%eax
1a6e4(3): cmp $0x1,%eax
1a6e7(6): jz 0xfffff909(%rip)
1a6ed(8): mov 0x1d8(%rsp),%rdi
1a6f5(4): mov %eax,0x5c(%rsp)
1a6f9(5): jmp 0xfffff51f(%rip)
1a6fe(2): nop 
1a700(2): test $0x4,%al
1a702(6): jz 0xfffff03c(%rip)
1a708(4): mov 0x50(%r14),%rdx
1a70c(5): mov 0x28(%rsp),%rdi
1a711(2): mov %eax,%ecx
1a713(3): mov %rbx,%rsi
1a716(5): call 0xffff92da(%rip)
1a71b(3): mov %rax,%r14
1a71e(5): jmp 0xfffff9b2(%rip)
1a723(5): mov 0x10(%rsp),%r15
1a728(5): mov 0x8(%rsp),%rcx
1a72d(3): mov %rbp,%rdx
1a730(3): mov %r12,%rsi
1a733(5): mov %r14,0x20(%rsp)
1a738(3): mov %r15,%rdi
1a73b(5): call 0xffff9775(%rip)
1a740(3): mov %rbp,%rdi
1a743(4): mov %eax,0x8(%rsp)
1a747(5): call 0xfffe82c9(%rip)
1a74c(4): mov 0x8(%rsp),%eax
1a750(2): test %eax,%eax
1a752(6): jz 0xfffffbd0(%rip)
1a758(3): xor %r14d,%r14d
1a75b(5): jmp 0xffffff71(%rip)
1a760(4): mov (%rsp),%rdi
1a764(3): mov %rbp,%rdx
1a767(3): mov %rbx,%rsi
1a76a(5): call 0xffffdb36(%rip)
1a76f(2): test %eax,%eax
1a771(7): mov %eax,0xd0(%rsp)
1a778(6): jnz 0xffffff40(%rip)
1a77e(5): movzx 0x68(%r14),%eax
1a783(5): jmp 0xfffffef9(%rip)
1a788(8): mov 0xb8(%rsp),%rsi
1a790(8): mov 0x1c8(%rsp),%rax
1a798(7): mov $0x0,(%rsi)
1a79f(4): mov %rax,0x8(%rsi)
1a7a3(2): xor %eax,%eax
1a7a5(5): jmp 0xfffffc7c(%rip)
1a7aa(3): cmp %rax,%r10
1a7ad(2): jz 0x1f(%rip)
1a7af(4): mov 0x0(%r9,%rax,8),%rax
1a7b3(3): cmp %rsi,%r10
1a7b6(3): mov %rax,(%rdx)
1a7b9(2): jz 0xb(%rip)
1a7bb(4): mov 0x0(%r9,%rsi,8),%rsi
1a7bf(5): jmp 0xfffffcad(%rip)
1a7c4(3): mov %r8,%rsi
1a7c7(5): jmp 0xfffffca5(%rip)
1a7cc(3): mov %r8,%rax
1a7cf(2): jmp 0xffffffe4(%rip)
1a7d1(8): mov %rbp,0xd8(%rsp)
1a7d9(5): jmp 0xffffeebf(%rip)
1a7de(8): mov %rax,0x168(%rsp)
1a7e6(5): jmp 0xfffff12e(%rip)
1a7eb(5): call 0xfffe7d75(%rip)

"update_cur_sifted_state" :
1a7f0(2): push %r15
1a7f2(2): push %r14
1a7f4(3): mov %rdi,%rax
1a7f7(2): push %r13
1a7f9(2): push %r12
1a7fb(3): mov %rsi,%r13
1a7fe(1): push %rbp
1a7ff(1): push %rbx
1a800(3): mov %rdx,%rbp
1a803(3): mov %rcx,%rbx
1a806(8): lea 0x0(,%rdx,8),%rcx
1a80e(7): sub $0xa8,%rsp
1a815(7): mov 0x98(%rax),%r12
1a81c(7): mov 0xb8(%rax),%rax
1a823(5): mov %rdi,0x8(%rsp)
1a828(5): mov %rcx,0x18(%rsp)
1a82d(9): mov $0x28,%rdi
1a836(8): mov %rdi,0x98(%rsp)
1a83e(2): xor %edi,%edi
1a840(4): mov 0x0(%rax,%rdx,8),%rdx
1a844(8): mov $0x0,0x5c(%rsp)
1a84c(4): mov 0x8(%rbx),%rcx
1a850(3): test %rdx,%rdx
1a853(6): jz 0x255(%rip)
1a859(4): lea 0x8(%rdx),%rdi
1a85d(3): test %rcx,%rcx
1a860(5): mov %rdi,0x10(%rsp)
1a865(2): jnz 0x53(%rip)
1a867(3): mov (%rsi),%rdx
1a86a(8): mov $0x0,0x0(%rdx,%rbp,8)
1a872(4): mov 0x0(%rax,%rbp,8),%rdx
1a876(2): xor %eax,%eax
1a878(4): test $0x40,0x68(%rdx)
1a87c(6): jnz 0xe3(%rip)
1a882(6): nop 0x0(%rax,%rax,1)
1a888(8): mov 0x98(%rsp),%rdi
1a890(9): xor $0x28,%rdi
1a899(6): jnz 0x7a2(%rip)
1a89f(7): add $0xa8,%rsp
1a8a6(1): pop %rbx
1a8a7(1): pop %rbp
1a8a8(2): pop %r12
1a8aa(2): pop %r13
1a8ac(2): pop %r14
1a8ae(2): pop %r15
1a8b0(1): ret near (%rsp)
1a8b1(7): nop 0x0(%rax)
1a8b8(5): lea 0x60(%rsp),%rdi
1a8bd(3): mov %rbx,%rdx
1a8c0(3): mov %r12,%rsi
1a8c3(8): mov $0x0,0x60(%rsp)
1a8cb(5): call 0xffff93e5(%rip)
1a8d0(3): mov %rax,%rdx
1a8d3(4): mov 0x60(%rsp),%eax
1a8d7(2): test %eax,%eax
1a8d9(2): jnz 0xffffffaf(%rip)
1a8db(4): mov 0x38(%rdx),%r15
1a8df(4): lea 0x38(%rdx),%r14
1a8e3(3): test %r15,%r15
1a8e6(6): jz 0x20a(%rip)
1a8ec(5): mov 0x10(%rsp),%rsi
1a8f1(3): mov %r14,%rdx
1a8f4(3): mov %rbx,%rdi
1a8f7(5): call 0xffff88b9(%rip)
1a8fc(2): test %eax,%eax
1a8fe(4): mov %eax,0x5c(%rsp)
1a902(2): jnz 0xffffff86(%rip)
1a904(5): cmp $0x0,0x28(%r13)
1a909(6): jnz 0x277(%rip)
1a90f(5): mov 0x18(%rsp),%r14
1a914(4): add 0x0(%r13),%r14
1a918(5): lea 0x5c(%rsp),%rdi
1a91d(3): mov %rbx,%rdx
1a920(3): mov %r12,%rsi
1a923(5): call 0xffff938d(%rip)
1a928(3): mov %rax,(%r14)
1a92b(4): mov 0x5c(%rsp),%eax
1a92f(2): test %eax,%eax
1a931(6): jnz 0xffffff57(%rip)
1a937(6): cmp $0x0,0x10(%rsp)
1a93d(6): jz 0xffffff4b(%rip)
1a943(5): mov 0x8(%rsp),%rax
1a948(7): mov 0xb8(%rax),%rax
1a94f(4): mov 0x0(%rax,%rbp,8),%rdx
1a953(2): xor %eax,%eax
1a955(4): test $0x40,0x68(%rdx)
1a959(6): jz 0xffffff2f(%rip)
1a95f(5): mov 0x8(%rsp),%rax
1a964(2): xor %ebx,%ebx
1a966(7): mov 0xc8(%rax),%rsi
1a96d(3): mov %rsi,%rdx
1a970(3): cmp %rdx,%rbx
1a973(2): jnl 0x60(%rip)
1a975(4): lea 0x0(%rbx,%rdx,1),%rax
1a979(3): mov %rax,%rcx
1a97c(4): shr $0x3f,%rcx
1a980(3): add %rax,%rcx
1a983(5): mov 0x8(%rsp),%rax
1a988(3): sar $0x1,%rcx
1a98b(7): mov 0xd8(%rax),%rdi
1a992(4): lea 0x0(%rcx,%rcx,4),%rax
1a996(5): cmp 0x8(%rdi,%rax,8),%rbp
1a99b(2): jle 0x33(%rip)
1a99d(5): jmp 0x13a(%rip)
1a9a2(6): nop 0x0(%rax,%rax,1)
1a9a8(4): lea 0x0(%rbx,%rcx,1),%rdx
1a9ac(3): mov %rdx,%rax
1a9af(4): shr $0x3f,%rax
1a9b3(3): add %rdx,%rax
1a9b6(3): sar $0x1,%rax
1a9b9(4): lea 0x0(%rax,%rax,4),%rdx
1a9bd(3): mov %rax,%r8
1a9c0(5): cmp 0x8(%rdi,%rdx,8),%rbp
1a9c5(6): jnle 0x11b(%rip)
1a9cb(3): mov %rax,%rcx
1a9ce(3): cmp %rcx,%rbx
1a9d1(2): jl 0xffffffd7(%rip)
1a9d3(3): cmp %rbx,%rsi
1a9d6(6): jle 0xfa(%rip)
1a9dc(4): lea 0x0(%rbx,%rbx,4),%rax
1a9e0(8): lea 0x0(,%rax,8),%rsi
1a9e8(5): mov 0x8(%rsp),%rax
1a9ed(5): mov %rsi,0x40(%rsp)
1a9f2(7): mov 0xd8(%rax),%rax
1a9f9(5): cmp 0x8(%rax,%rsi,1),%rbp
1a9fe(6): jnz 0xd2(%rip)
1aa04(4): cmp $0xffffffff,%rbx
1aa08(6): jz 0xc8(%rip)
1aa0e(5): mov 0x8(%rsp),%rax
1aa13(9): mov $0x0,0x60(%rsp)
1aa1c(7): mov 0x98(%rax),%r12
1aa23(5): mov 0x10(%rsp),%rax
1aa28(5): cmp $0x0,0x8(%rax)
1aa2d(6): jle 0xa3(%rip)
1aa33(5): lea 0x60(%rsp),%rax
1aa38(9): mov $0x0,0x20(%rsp)
1aa41(5): mov %rbx,0x48(%rsp)
1aa46(3): mov %r13,%r15
1aa49(5): mov %rax,0x38(%rsp)
1aa4e(2): jmp 0x24(%rip)
1aa50(2): cmp $0x4,%al
1aa52(6): jz 0x386(%rip)
1aa58(5): mov 0x10(%rsp),%rcx
1aa5d(6): add $0x1,0x20(%rsp)
1aa63(5): mov 0x20(%rsp),%rax
1aa68(4): cmp 0x8(%rcx),%rax
1aa6c(6): jnl 0x5bf(%rip)
1aa72(5): mov 0x10(%rsp),%rax
1aa77(5): mov 0x20(%rsp),%rdi
1aa7c(4): mov 0x10(%rax),%rax
1aa80(4): mov 0x0(%rax,%rdi,8),%r14
1aa84(3): mov %r14,%rax
1aa87(4): shl/sal $0x4,%rax
1aa8b(4): add (%r12),%rax
1aa8f(4): cmp 0x10(%r15),%r14
1aa93(4): movzx 0x8(%rax),%eax
1aa97(2): jnz 0xffffffb9(%rip)
1aa99(4): cmp 0x18(%r15),%rbp
1aa9d(2): jnz 0xffffffb3(%rip)
1aa9f(2): jmp 0xffffffb9(%rip)
1aaa1(7): nop 0x0(%rax)
1aaa8(8): lea 0x0(,%rbp,8),%r14
1aab0(3): add (%rsi),%r14
1aab3(3): test %rcx,%rcx
1aab6(6): jnz 0xba(%rip)
1aabc(7): mov $0x0,(%r14)
1aac3(2): xor %eax,%eax
1aac5(5): jmp 0xfffffdc3(%rip)
1aaca(6): nop 0x0(%rax,%rax,1)
1aad0(2): xor %eax,%eax
1aad2(5): jmp 0xfffffdb6(%rip)
1aad7(3): mov %rcx,%r8
1aada(3): mov %rdx,%rcx
1aadd(3): nop (%rax)
1aae0(4): lea 0x1(%r8),%rbx
1aae4(3): mov %rcx,%rdx
1aae7(5): jmp 0xfffffe89(%rip)
1aaec(4): nop 0x0(%rax)
1aaf0(4): mov 0x8(%rbx),%rdi
1aaf4(8): mov $0x0,0x40(%rdx)
1aafc(5): mov %rdx,0x20(%rsp)
1ab01(4): mov %rdi,0x38(%rdx)
1ab05(4): shl/sal $0x3,%rdi
1ab09(5): call 0xfffe7c77(%rip)
1ab0e(5): mov 0x20(%rsp),%rdx
1ab13(3): test %rax,%rax
1ab16(4): mov %rax,0x48(%rdx)
1ab1a(2): jz 0x49(%rip)
1ab1c(5): cmp $0x0,0x8(%rbx)
1ab21(8): mov $0x0,0x60(%rsp)
1ab29(2): jnle 0x15(%rip)
1ab2b(5): jmp 0xfffffdc1(%rip)
1ab30(4): add $0x1,%r15
1ab34(4): cmp 0x8(%rbx),%r15
1ab38(6): jnl 0xfffffdb4(%rip)
1ab3e(4): mov 0x10(%rbx),%rax
1ab42(3): mov %r14,%rdi
1ab45(4): mov 0x0(%rax,%r15,8),%rax
1ab49(4): lea 0x0(%rax,%rax,2),%rdx
1ab4d(5): mov 0x38(%r12),%rax
1ab52(4): lea 0x0(%rax,%rdx,8),%rsi
1ab56(5): call 0xffff806a(%rip)
1ab5b(2): test %eax,%eax
1ab5d(4): mov %eax,0x60(%rsp)
1ab61(2): jz 0xffffffcf(%rip)
1ab63(5): mov $0xc,%eax
1ab68(5): jmp 0xfffffd20(%rip)
1ab6d(3): nop (%rax)
1ab70(9): mov $0x0,0x10(%rsp)
1ab79(5): jmp 0xfffffd9f(%rip)
1ab7e(2): nop 
1ab80(5): mov 0x8(%rsp),%rax
1ab85(7): mov 0xd8(%rax),%rax
1ab8c(5): mov %rax,0x20(%rsp)
1ab91(6): jle 0xda(%rip)
1ab97(3): xor %r15d,%r15d
1ab9a(6): nop 0x0(%rax,%rax,1)
1aba0(4): mov 0x30(%r13),%rax
1aba4(5): mov 0x20(%rsp),%rdi
1aba9(4): mov 0x0(%rax,%r15,8),%rax
1abad(4): lea 0x0(%rax,%rax,4),%rax
1abb1(4): lea 0x0(%rdi,%rax,8),%rdx
1abb5(4): cmp 0x10(%rdx),%rbp
1abb9(6): jle 0xa4(%rip)
1abbf(4): cmp 0x8(%rdx),%rbp
1abc3(6): jnle 0x9a(%rip)
1abc9(3): mov (%rdx),%rcx
1abcc(4): mov (%r12),%rax
1abd0(4): mov 0x8(%rbx),%rsi
1abd4(4): shl/sal $0x4,%rcx
1abd8(4): cmp 0x18(%rdx),%rbp
1abdc(4): mov 0x0(%rax,%rcx,1),%r8
1abe0(6): jz 0xa0(%rip)
1abe6(3): xor %r14d,%r14d
1abe9(3): test %rsi,%rsi
1abec(2): jle 0x71(%rip)
1abee(5): mov %rbp,0x28(%rsp)
1abf3(3): mov %r8,%rbp
1abf6(2): jmp 0x18(%rip)
1abf8(8): nop 0x0(%rax,%rax,1)
1ac00(4): add $0x1,%r14
1ac04(4): cmp 0x8(%rbx),%r14
1ac08(2): jnl 0x50(%rip)
1ac0a(4): mov (%r12),%rax
1ac0e(4): mov 0x10(%rbx),%rdx
1ac12(4): mov 0x0(%rdx,%r14,8),%rsi
1ac16(3): mov %rsi,%rdx
1ac19(4): shl/sal $0x4,%rdx
1ac1d(3): add %rdx,%rax
1ac20(4): movzx 0x8(%rax),%edx
1ac24(3): sub $0x8,%edx
1ac27(3): cmp $0x1,%edx
1ac2a(2): jnbe 0xffffffd6(%rip)
1ac2c(3): cmp (%rax),%rbp
1ac2f(2): jnz 0xffffffd1(%rip)
1ac31(5): mov 0x10(%rsp),%rcx
1ac36(3): mov %rbx,%rdx
1ac39(3): mov %r12,%rdi
1ac3c(5): call 0xffffa2b4(%rip)
1ac41(2): test %eax,%eax
1ac43(6): jnz 0xfffffc45(%rip)
1ac49(4): add $0x1,%r14
1ac4d(4): cmp 0x8(%rbx),%r14
1ac51(2): jl 0xffffffb9(%rip)
1ac53(5): nop 0x0(%rax,%rax,1)
1ac58(5): mov 0x28(%rsp),%rbp
1ac5d(4): add $0x1,%r15
1ac61(4): cmp 0x28(%r13),%r15
1ac65(6): jl 0xffffff3b(%rip)
1ac6b(8): mov $0x0,0x5c(%rsp)
1ac73(5): jmp 0xfffffc9c(%rip)
1ac78(8): nop 0x0(%rax,%rax,1)
1ac80(3): test %rsi,%rsi
1ac83(2): jle 0xffffffda(%rip)
1ac85(4): mov 0x10(%rbx),%r10
1ac89(7): mov $0xffffffff,%r9
1ac90(4): lea 0x0(%r10,%rsi,8),%r11
1ac94(3): mov %r10,%rcx
1ac97(3): mov %r9,%rsi
1ac9a(2): jmp 0x1c(%rip)
1ac9c(4): nop 0x0(%rax)
1aca0(4): cmp $0x9,%r14d
1aca4(2): jnz 0x9(%rip)
1aca6(3): cmp (%rdx),%r8
1aca9(4): cmove %rdi,%r9
1acad(4): add $0x8,%rcx
1acb1(3): cmp %rcx,%r11
1acb4(2): jz 0x2a(%rip)
1acb6(3): mov (%rcx),%rdi
1acb9(3): mov %rdi,%rdx
1acbc(4): shl/sal $0x4,%rdx
1acc0(3): add %rax,%rdx
1acc3(5): movzx 0x8(%rdx),%r14d
1acc8(4): cmp $0x8,%r14d
1accc(2): jnz 0xffffffd4(%rip)
1acce(3): cmp (%rdx),%r8
1acd1(4): cmove %rdi,%rsi
1acd5(4): add $0x8,%rcx
1acd9(3): cmp %rcx,%r11
1acdc(2): jnz 0xffffffda(%rip)
1acde(3): test %rsi,%rsi
1ace1(3): mov %r9,%r14
1ace4(5): mov %r9,0x28(%rsp)
1ace9(6): js 0xc7(%rip)
1acef(5): mov 0x10(%rsp),%rcx
1acf4(3): mov %rbx,%rdx
1acf7(3): mov %r12,%rdi
1acfa(5): call 0xffffa1f6(%rip)
1acff(2): test %eax,%eax
1ad01(6): jnz 0xfffffb87(%rip)
1ad07(3): test %r14,%r14
1ad0a(6): js 0xffffff53(%rip)
1ad10(5): cmp $0x0,0x8(%rbx)
1ad15(6): jle 0xffffff48(%rip)
1ad1b(4): mov 0x10(%rbx),%r10
1ad1f(3): xor %r14d,%r14d
1ad22(5): mov %rbp,0x30(%rsp)
1ad27(3): mov %r14,%rbp
1ad2a(5): mov 0x28(%rsp),%r14
1ad2f(2): jmp 0x1b(%rip)
1ad31(7): nop 0x0(%rax)
1ad38(4): add $0x1,%rbp
1ad3c(4): cmp 0x8(%rbx),%rbp
1ad40(6): jnl 0x88(%rip)
1ad46(4): mov 0x10(%rbx),%r10
1ad4a(4): mov 0x0(%r10,%rbp,8),%r10
1ad4e(5): mov 0x38(%r12),%rax
1ad53(3): mov %r14,%rdx
1ad56(4): lea 0x0(%r10,%r10,2),%r9
1ad5a(4): shl/sal $0x3,%r9
1ad5e(3): add %r9,%rax
1ad61(4): mov 0x8(%rax),%rdi
1ad65(4): lea 0x10(%rax),%rsi
1ad69(5): call 0xffff7937(%rip)
1ad6e(3): test %rax,%rax
1ad71(2): jnz 0xffffffc7(%rip)
1ad73(5): add 0x30(%r12),%r9
1ad78(4): mov 0x8(%r9),%rdi
1ad7c(4): lea 0x10(%r9),%rsi
1ad80(5): call 0xffff7920(%rip)
1ad85(3): test %rax,%rax
1ad88(2): jnz 0xffffffb0(%rip)
1ad8a(5): mov 0x10(%rsp),%rcx
1ad8f(3): mov %rbx,%rdx
1ad92(3): mov %r10,%rsi
1ad95(3): mov %r12,%rdi
1ad98(5): call 0xffffa158(%rip)
1ad9d(2): test %eax,%eax
1ad9f(6): jnz 0xfffffae9(%rip)
1ada5(4): sub $0x1,%rbp
1ada9(2): jmp 0xffffff8f(%rip)
1adab(5): nop 0x0(%rax,%rax,1)
1adb0(6): cmp $0x0,0x28(%rsp)
1adb6(6): jns 0xffffff69(%rip)
1adbc(5): jmp 0xfffffea1(%rip)
1adc1(7): nop 0x0(%rax)
1adc8(5): mov 0x30(%rsp),%rbp
1adcd(5): jmp 0xfffffe90(%rip)
1add2(6): nop 0x0(%rax,%rax,1)
1add8(5): mov 0x8(%rsp),%rax
1addd(5): mov 0x40(%rsp),%r13
1ade2(5): mov 0x48(%rsp),%rbx
1ade7(7): add 0xd8(%rax),%r13
1adee(4): lea 0x0(%r14,%r14,2),%rax
1adf2(4): shl/sal $0x3,%rax
1adf6(5): mov %rax,0x30(%rsp)
1adfb(8): lea 0x0(,%r14,8),%rax
1ae03(5): mov %rax,0x28(%rsp)
1ae08(3): mov %r15,%rax
1ae0b(3): mov %r13,%r15
1ae0e(3): mov %rbx,%r13
1ae11(3): mov %rax,%rbx
1ae14(5): jmp 0x16a(%rip)
1ae19(7): nop 0x0(%rax)
1ae20(4): mov 0x18(%r15),%rax
1ae24(4): sub 0x10(%r15),%rax
1ae28(3): test %rax,%rax
1ae2b(5): lea 0x0(%rbp,%rax,1),%r9
1ae30(6): jz 0x160(%rip)
1ae36(5): mov 0x18(%r12),%rax
1ae3b(5): mov 0x28(%rsp),%rsi
1ae40(4): mov 0x0(%rax,%rsi,1),%r10
1ae44(4): cmp 0x18(%rbx),%r9
1ae48(6): jnle 0x13f(%rip)
1ae4e(3): mov (%rbx),%rax
1ae51(4): mov 0x0(%rax,%r9,8),%rax
1ae55(3): test %rax,%rax
1ae58(6): jz 0x12f(%rip)
1ae5e(4): mov 0x10(%rax),%rdi
1ae62(4): lea 0x18(%rax),%rsi
1ae66(3): mov %r10,%rdx
1ae69(5): call 0xffff7837(%rip)
1ae6e(3): test %rax,%rax
1ae71(6): jz 0x116(%rip)
1ae77(4): sub $0x8,%rsp
1ae7b(4): lea 0x30(%rbx),%rdx
1ae7f(4): lea 0x28(%rbx),%rsi
1ae83(2): push %r9
1ae85(5): mov 0x18(%rsp),%rdi
1ae8a(3): mov %r14,%rcx
1ae8d(3): mov %r10,%r9
1ae90(3): mov %rbp,%r8
1ae93(5): call 0xffff7abd(%rip)
1ae98(2): test %al,%al
1ae9a(1): pop %rdx
1ae9b(1): pop %rcx
1ae9c(6): jnz 0xeb(%rip)
1aea2(6): cmp $0x0,0x60(%rsp)
1aea8(6): jz 0x110(%rip)
1aeae(5): mov 0x38(%rsp),%rax
1aeb3(3): mov %r13,%rsi
1aeb6(5): mov %r14,0x70(%rsp)
1aebb(5): mov %rbp,0x78(%rsp)
1aec0(4): lea 0x20(%rax),%rdi
1aec4(5): call 0xffff629c(%rip)
1aec9(2): test %al,%al
1aecb(6): jz 0x159(%rip)
1aed1(5): mov 0x18(%rsp),%rdi
1aed6(5): mov 0x60(%rsp),%rax
1aedb(5): mov 0x38(%rsp),%rsi
1aee0(4): mov 0x0(%rax,%rdi,1),%r15
1aee4(5): mov 0x8(%rsp),%rdi
1aee9(5): call 0xffffde97(%rip)
1aeee(2): test %eax,%eax
1aef0(6): jnz 0x10e(%rip)
1aef6(4): mov 0x8(%rbx),%rsi
1aefa(5): mov 0x60(%rsp),%rdx
1aeff(3): test %rsi,%rsi
1af02(2): jz 0x1b(%rip)
1af04(4): lea 0x1(%rbp),%rcx
1af08(3): mov %r12,%rdi
1af0b(5): call 0xffff8fa5(%rip)
1af10(2): test %eax,%eax
1af12(6): jnz 0xec(%rip)
1af18(5): mov 0x60(%rsp),%rdx
1af1d(5): mov 0x38(%rsp),%r11
1af22(5): mov 0x18(%rsp),%rax
1af27(8): mov 0x88(%rsp),%rdi
1af2f(4): lea 0x30(%r11),%r9
1af33(4): mov %r15,0x0(%rdx,%rax,1)
1af37(3): mov %r13,%rdx
1af3a(3): mov %r9,%rsi
1af3d(5): call 0xffff7763(%rip)
1af42(4): sub $0x1,%rax
1af46(3): mov %rax,%rdx
1af49(2): js 0xe(%rip)
1af4b(4): lea 0x28(%r11),%rdi
1af4f(3): mov %r9,%rsi
1af52(5): call 0xffff78ce(%rip)
1af57(5): mov 0x8(%rsp),%rcx
1af5c(5): lea 0x0(%r13,%r13,4),%rax
1af61(7): mov 0xd8(%rcx),%rdx
1af68(4): lea 0x0(%rdx,%rax,8),%rax
1af6c(4): nop 0x0(%rax)
1af70(4): add $0x1,%r13
1af74(4): cmp $0x0,0x20(%rax)
1af78(4): lea 0x28(%rax),%r15
1af7c(2): jz 0x34(%rip)
1af7e(3): cmp (%r15),%r14
1af81(6): jz 0xfffffe9f(%rip)
1af87(3): mov %r15,%rax
1af8a(2): jmp 0xffffffe6(%rip)
1af8c(4): nop 0x0(%rax)
1af90(5): mov 0x28(%r12),%rax
1af95(5): mov 0x30(%rsp),%rdi
1af9a(5): mov 0x10(%rax,%rdi,1),%rax
1af9f(3): mov (%rax),%r10
1afa2(5): jmp 0xfffffea2(%rip)
1afa7(9): nop 0x0(%rax,%rax,1)
1afb0(3): mov %rbx,%r15
1afb3(5): jmp 0xfffffaa5(%rip)
1afb8(4): mov 0x30(%rbx),%rax
1afbc(4): lea 0x20(%rbx),%rsi
1afc0(4): movdqa (%rbx),%xmm0
1afc4(8): mov %rax,0x90(%rsp)
1afcc(5): mov 0x38(%rsp),%rax
1afd1(5): movaps %xmm0,0x60(%rsp)
1afd6(4): lea 0x20(%rax),%rdi
1afda(5): movdqa 0x10(%rbx),%xmm0
1afdf(5): movaps %xmm0,0x70(%rsp)
1afe4(5): movdqa 0x20(%rbx),%xmm0
1afe9(8): movaps %xmm0,0x80(%rsp)
1aff1(5): call 0xffff880f(%rip)
1aff6(2): test %eax,%eax
1aff8(6): jz 0xfffffeb6(%rip)
1affe(6): cmp $0x0,0x60(%rsp)
1b004(6): jz 0xfffff884(%rip)
1b00a(8): mov 0x90(%rsp),%rdi
1b012(4): mov %eax,0x8(%rsp)
1b016(5): call 0xfffe79fa(%rip)
1b01b(4): mov 0x8(%rsp),%eax
1b01f(5): jmp 0xfffff869(%rip)
1b024(5): mov $0xc,%eax
1b029(2): jmp 0xffffffd5(%rip)
1b02b(6): cmp $0x0,0x60(%rsp)
1b031(6): jz 0xfffffa9f(%rip)
1b037(2): xor %eax,%eax
1b039(2): jmp 0xffffffd1(%rip)
1b03b(5): call 0xfffe7525(%rip)

"parse_bracket_element.constprop.37" :
1b040(2): push %r14
1b042(2): push %r13
1b044(3): mov %rsi,%r10
1b047(2): push %r12
1b049(1): push %rbp
1b04a(3): movsxd %ecx,%r11
1b04d(1): push %rbx
1b04e(3): mov %rdx,%rbp
1b051(3): mov %rdi,%rbx
1b054(4): sub $0x20,%rsp
1b058(4): mov 0x48(%rsi),%r12
1b05c(9): mov $0x28,%rax
1b065(5): mov %rax,0x18(%rsp)
1b06a(2): xor %eax,%eax
1b06c(7): cmp $0x1,0x90(%rsi)
1b073(2): jz 0x55(%rip)
1b075(3): mov %r12,%rsi
1b078(3): mov %r10,%rdi
1b07b(5): call 0xffff7575(%rip)
1b080(3): cmp $0x1,%eax
1b083(2): jle 0x45(%rip)
1b085(4): mov 0x10(%r10),%rdx
1b089(2): cwde 
1b08b(6): mov $0x1,(%rbx)
1b091(3): add %r12,%rax
1b094(4): mov 0x0(%rdx,%r12,4),%edx
1b098(3): mov %edx,0x8(%rbx)
1b09b(4): mov %rax,0x48(%r10)
1b09f(2): xor %eax,%eax
1b0a1(5): mov 0x18(%rsp),%rcx
1b0a6(9): xor $0x28,%rcx
1b0af(6): jnz 0x1e9(%rip)
1b0b5(4): add $0x20,%rsp
1b0b9(1): pop %rbx
1b0ba(1): pop %rbp
1b0bb(2): pop %r12
1b0bd(2): pop %r13
1b0bf(2): pop %r14
1b0c1(1): ret near (%rsp)
1b0c2(6): nop 0x0(%rax,%rax,1)
1b0c8(4): movzx 0x8(%rbp),%eax
1b0cc(3): add %r12,%r11
1b0cf(4): mov %r11,0x48(%r10)
1b0d3(2): mov %eax,%edx
1b0d5(3): and $0xfb,%edx
1b0d8(3): cmp $0x1a,%dl
1b0db(2): jz 0x25(%rip)
1b0dd(2): cmp $0x1c,%al
1b0df(2): jz 0x21(%rip)
1b0e1(2): cmp $0x16,%al
1b0e3(2): jnz 0xb(%rip)
1b0e5(3): test %r9b,%r9b
1b0e8(6): jz 0x14a(%rip)
1b0ee(4): movzx 0x0(%rbp),%eax
1b0f2(6): mov $0x0,(%rbx)
1b0f8(3): mov %al,0x8(%rbx)
1b0fb(2): xor %eax,%eax
1b0fd(2): jmp 0xffffffa4(%rip)
1b0ff(1): nop 
1b100(4): mov 0x68(%r10),%r12
1b104(3): cmp %r12,%r11
1b107(6): jnl 0x121(%rip)
1b10d(5): movzx 0x0(%rbp),%r13d
1b112(3): xor %r8d,%r8d
1b115(2): jmp 0x2d(%rip)
1b117(9): nop 0x0(%rax,%rax,1)
1b120(4): mov 0x8(%rbx),%rax
1b124(4): mov %r9b,0x0(%rax,%r8,1)
1b128(4): add $0x1,%r8
1b12c(4): cmp $0x20,%r8
1b130(6): jz 0xf8(%rip)
1b136(4): movzx 0x8(%rbp),%eax
1b13a(4): mov 0x48(%r10),%r11
1b13e(4): mov 0x68(%r10),%r12
1b142(2): cmp $0x1e,%al
1b144(3): movsxd %r8d,%r14
1b147(2): jz 0x69(%rip)
1b149(4): mov 0x8(%r10),%rdx
1b14d(4): lea 0x1(%r11),%rax
1b151(4): mov %rax,0x48(%r10)
1b155(5): movzx 0x0(%rdx,%r11,1),%r9d
1b15a(3): cmp %r12,%rax
1b15d(6): jnl 0xcb(%rip)
1b163(3): cmp %r9b,%r13b
1b166(2): jnz 0xffffffba(%rip)
1b168(4): mov 0x8(%r10),%rdx
1b16c(4): cmp $0x5d,0x0(%rdx,%rax,1)
1b170(2): jnz 0xffffffb0(%rip)
1b172(4): add $0x1,%rax
1b176(4): mov %rax,0x48(%r10)
1b17a(4): mov 0x8(%rbx),%rax
1b17e(5): mov $0x0,0x0(%rax,%r14,1)
1b183(4): movzx 0x8(%rbp),%eax
1b187(2): cmp $0x1c,%al
1b189(6): jz 0x102(%rip)
1b18f(2): cmp $0x1e,%al
1b191(6): jz 0xed(%rip)
1b197(2): cmp $0x1a,%al
1b199(6): jz 0xd8(%rip)
1b19f(2): xor %eax,%eax
1b1a1(5): jmp 0xffffff00(%rip)
1b1a6(a): nop 0x0(%rax,%rax,1)
1b1b0(8): cmp $0x0,0x8b(%r10)
1b1b8(2): jz 0xffffff91(%rip)
1b1ba(8): cmp $0x0,0x8c(%r10)
1b1c2(6): jz 0x96(%rip)
1b1c8(4): cmp 0x30(%r10),%r11
1b1cc(2): jz 0x11(%rip)
1b1ce(4): mov 0x10(%r10),%rax
1b1d2(5): cmp $0xff,0x0(%rax,%r11,4)
1b1d7(6): jz 0xffffff72(%rip)
1b1dd(4): mov 0x18(%r10),%rax
1b1e1(4): mov 0x0(%rax,%r11,8),%rax
1b1e5(3): add (%r10),%rax
1b1e8(4): add 0x28(%r10),%rax
1b1ec(4): movzx (%rax),%r9d
1b1f0(4): test $0x80,%r9b
1b1f4(6): jnz 0xffffff55(%rip)
1b1fa(8): cmp $0x1,0x90(%r10)
1b202(5): mov $0x1,%eax
1b207(2): jz 0xf(%rip)
1b209(3): mov %r11,%rsi
1b20c(3): mov %r10,%rdi
1b20f(5): call 0xffff73e1(%rip)
1b214(2): cwde 
1b216(3): add %r11,%rax
1b219(4): mov %rax,0x48(%r10)
1b21d(5): jmp 0xffffff3d(%rip)
1b222(6): nop 0x0(%rax,%rax,1)
1b228(5): mov $0x7,%eax
1b22d(5): jmp 0xfffffe74(%rip)
1b232(3): mov %rsp,%rdi
1b235(3): mov %r8,%rdx
1b238(3): mov %r10,%rsi
1b23b(5): call 0xffff5955(%rip)
1b240(5): cmp $0x15,0x8(%rsp)
1b245(5): mov $0xb,%eax
1b24a(6): jz 0xfffffea4(%rip)
1b250(5): jmp 0xfffffe51(%rip)
1b255(3): nop (%rax)
1b258(4): lea 0x1(%r11),%rax
1b25c(3): add (%r10),%r11
1b25f(4): mov 0x28(%r10),%rdx
1b263(4): mov %rax,0x48(%r10)
1b267(5): movzx 0x0(%r11,%rdx,1),%r9d
1b26c(5): jmp 0xfffffeee(%rip)
1b271(6): mov $0x3,(%rbx)
1b277(2): xor %eax,%eax
1b279(5): jmp 0xfffffe28(%rip)
1b27e(6): mov $0x4,(%rbx)
1b284(2): xor %eax,%eax
1b286(5): jmp 0xfffffe1b(%rip)
1b28b(6): mov $0x2,(%rbx)
1b291(2): xor %eax,%eax
1b293(5): jmp 0xfffffe0e(%rip)
1b298(5): call 0xfffe72c8(%rip)

"peek_token" :
1b2a0(2): push %r15
1b2a2(2): push %r14
1b2a4(2): push %r13
1b2a6(2): push %r12
1b2a8(1): push %rbp
1b2a9(1): push %rbx
1b2aa(3): mov %rdi,%rbp
1b2ad(4): sub $0x38,%rsp
1b2b1(4): mov 0x48(%rsi),%r14
1b2b5(9): mov $0x28,%rax
1b2be(5): mov %rax,0x28(%rsp)
1b2c3(2): xor %eax,%eax
1b2c5(4): cmp %r14,0x68(%rsi)
1b2c9(6): jle 0x97(%rip)
1b2cf(5): movzx 0xa(%rdi),%r13d
1b2d4(3): mov %rdx,%r15
1b2d7(4): mov 0x8(%rsi),%rdx
1b2db(3): mov %rsi,%rbx
1b2de(5): movzx 0x0(%rdx,%r14,1),%r12d
1b2e3(4): and $0x9f,%r13d
1b2e7(4): mov %r13b,0xa(%rdi)
1b2eb(6): mov 0x90(%rsi),%eax
1b2f1(3): mov %r12b,(%rdi)
1b2f4(3): cmp $0x1,%eax
1b2f7(6): jle 0x99(%rip)
1b2fd(4): cmp 0x30(%rsi),%r14
1b301(6): jz 0x19f(%rip)
1b307(4): mov 0x10(%rsi),%rcx
1b30b(4): mov 0x0(%rcx,%r14,4),%ecx
1b30f(3): cmp $0xff,%ecx
1b312(6): jz 0xde(%rip)
1b318(4): cmp $0x5c,%r12b
1b31c(6): jz 0xf4(%rip)
1b322(4): mov $0x1,0x8(%rdi)
1b326(2): mov %ecx,%edi
1b328(5): mov %rdx,0x8(%rsp)
1b32d(3): mov %ecx,(%rsp)
1b330(5): call 0xfffe7440(%rip)
1b335(3): mov (%rsp),%ecx
1b338(2): test %eax,%eax
1b33a(3): setnz %al
1b33d(3): cmp $0x5f,%ecx
1b340(3): setz %cl
1b343(2): or %ecx,%eax
1b345(3): shl/sal $0x6,%eax
1b348(3): or %eax,%r13d
1b34b(4): mov %r13b,0xa(%rbp)
1b34f(5): mov 0x8(%rsp),%rdx
1b354(2): jmp 0x78(%rip)
1b356(a): nop 0x0(%rax,%rax,1)
1b360(4): mov $0x2,0x8(%rdi)
1b364(5): mov 0x28(%rsp),%rdi
1b369(9): xor $0x28,%rdi
1b372(6): jnz 0x626(%rip)
1b378(4): add $0x38,%rsp
1b37c(1): pop %rbx
1b37d(1): pop %rbp
1b37e(2): pop %r12
1b380(2): pop %r13
1b382(2): pop %r14
1b384(2): pop %r15
1b386(1): ret near (%rsp)
1b387(9): nop 0x0(%rax,%rax,1)
1b390(4): cmp $0x5c,%r12b
1b394(2): jz 0x7c(%rip)
1b396(4): mov $0x1,0x8(%rbp)
1b39a(4): mov %rdx,(%rsp)
1b39e(5): call 0xfffe7652(%rip)
1b3a3(3): mov (%rax),%rsi
1b3a6(4): movzx %r12b,%ecx
1b3aa(4): movzx 0x0(%rsi,%rcx,2),%eax
1b3ae(4): shr $0x3,%ax
1b3b2(3): and $0x1,%eax
1b3b5(4): cmp $0x5f,%r12b
1b3b9(3): setz %cl
1b3bc(2): or %ecx,%eax
1b3be(3): shl/sal $0x6,%eax
1b3c1(3): or %eax,%r13d
1b3c4(4): mov %r13b,0xa(%rbp)
1b3c8(4): mov (%rsp),%rdx
1b3cc(4): sub $0xa,%r12d
1b3d0(4): cmp $0x73,%r12b
1b3d4(6): jnbe 0x138(%rip)
1b3da(7): lea 0x7513(%rip),%rcx
1b3e1(4): movzx %r12b,%r12d
1b3e5(4): movsxd 0x0(%rcx,%r12,4),%rax
1b3e9(3): add %rcx,%rax
1b3ec(2): jmp %rax
1b3ee(2): nop 
1b3f0(4): or $0x20,%r13d
1b3f4(4): mov $0x1,0x8(%rdi)
1b3f8(5): mov $0x1,%eax
1b3fd(4): mov %r13b,0xa(%rdi)
1b401(5): jmp 0xffffff63(%rip)
1b406(a): nop 0x0(%rax,%rax,1)
1b410(4): lea 0x1(%r14),%rsi
1b414(4): cmp 0x58(%rbx),%rsi
1b418(6): jnl 0xa8(%rip)
1b41e(7): cmp $0x0,0x8b(%rbx)
1b425(6): jnz 0x48b(%rip)
1b42b(6): movzx 0x1(%rdx,%r14,1),%edi
1b431(3): mov %edi,%r12d
1b434(4): mov %edi,0x8(%rsp)
1b438(3): cmp $0x1,%eax
1b43b(4): mov %r12b,0x0(%rbp)
1b43f(4): mov $0x1,0x8(%rbp)
1b443(6): jle 0x44d(%rip)
1b449(4): mov 0x10(%rbx),%rax
1b44d(4): mov 0x0(%rax,%rsi,4),%r8d
1b451(3): mov %r8d,%edi
1b454(4): mov %r8d,(%rsp)
1b458(5): call 0xfffe7318(%rip)
1b45d(4): mov (%rsp),%r8d
1b461(2): test %eax,%eax
1b463(3): setnz %al
1b466(4): cmp $0x5f,%r8d
1b46a(3): setz %dl
1b46d(5): lea 0xffffffd9(%r12),%ecx
1b472(2): or %edx,%eax
1b474(3): shl/sal $0x6,%eax
1b477(3): or %eax,%r13d
1b47a(3): cmp $0x56,%cl
1b47d(4): mov %r13b,0xa(%rbp)
1b481(6): jnbe 0x404(%rip)
1b487(7): lea 0x7636(%rip),%rdx
1b48e(3): movzx %cl,%ecx
1b491(4): movsxd 0x0(%rdx,%rcx,4),%rax
1b495(3): add %rdx,%rax
1b498(2): jmp %rax
1b49a(6): nop 0x0(%rax,%rax,1)
1b4a0(4): cmp $0x5c,%r12b
1b4a4(6): jz 0xffffff6c(%rip)
1b4aa(4): mov 0x10(%rbx),%rax
1b4ae(4): mov $0x1,0x8(%rbp)
1b4b2(4): mov 0x0(%rax,%r14,4),%ecx
1b4b6(5): jmp 0xfffffe70(%rip)
1b4bb(5): nop 0x0(%rax,%rax,1)
1b4c0(4): mov $0x24,0x8(%rbp)
1b4c4(5): mov $0x1,%eax
1b4c9(5): jmp 0xfffffe9b(%rip)
1b4ce(2): nop 
1b4d0(7): and $0x1200,%r15d
1b4d7(5): mov $0x1,%eax
1b4dc(7): cmp $0x1200,%r15
1b4e3(6): jnz 0xfffffe81(%rip)
1b4e9(4): mov $0x18,0x8(%rbp)
1b4ed(5): jmp 0xfffffe77(%rip)
1b4f2(6): nop 0x0(%rax,%rax,1)
1b4f8(7): and $0x8400,%r15d
1b4ff(7): cmp $0x8000,%r15
1b506(6): jz 0xdc(%rip)
1b50c(5): mov $0x1,%eax
1b511(5): jmp 0xfffffe53(%rip)
1b516(a): nop 0x0(%rax,%rax,1)
1b520(7): and $0x1200,%r15d
1b527(5): mov $0x1,%eax
1b52c(7): cmp $0x1200,%r15
1b533(6): jnz 0xfffffe31(%rip)
1b539(4): mov $0x17,0x8(%rbp)
1b53d(5): jmp 0xfffffe27(%rip)
1b542(6): nop 0x0(%rax,%rax,1)
1b548(7): test $0x800008,%r15d
1b54f(2): jnz 0xb(%rip)
1b551(3): test %r14,%r14
1b554(6): jnz 0x3c6(%rip)
1b55a(4): mov $0xc,0x8(%rbp)
1b55e(7): mov $0x10,0x0(%rbp)
1b565(5): mov $0x1,%eax
1b56a(5): jmp 0xfffffdfa(%rip)
1b56f(1): nop 
1b570(4): mov $0x14,0x8(%rbp)
1b574(5): mov $0x1,%eax
1b579(5): jmp 0xfffffdeb(%rip)
1b57e(2): nop 
1b580(7): test $0x402,%r15d
1b587(5): mov $0x1,%eax
1b58c(6): jnz 0xfffffdd8(%rip)
1b592(4): mov $0x13,0x8(%rbp)
1b596(5): jmp 0xfffffdce(%rip)
1b59b(5): nop 0x0(%rax,%rax,1)
1b5a0(4): mov $0x5,0x8(%rbp)
1b5a4(5): mov $0x1,%eax
1b5a9(5): jmp 0xfffffdbb(%rip)
1b5ae(2): nop 
1b5b0(7): test $0x402,%r15d
1b5b7(5): mov $0x1,%eax
1b5bc(6): jnz 0xfffffda8(%rip)
1b5c2(4): mov $0x12,0x8(%rbp)
1b5c6(5): jmp 0xfffffd9e(%rip)
1b5cb(5): nop 0x0(%rax,%rax,1)
1b5d0(7): test $0x800,%r15d
1b5d7(5): mov $0x1,%eax
1b5dc(6): jz 0xfffffd88(%rip)
1b5e2(4): mov $0xa,0x8(%rbp)
1b5e6(5): mov $0x1,%eax
1b5eb(5): jmp 0xfffffd79(%rip)
1b5f0(4): mov $0xb,0x8(%rbp)
1b5f4(5): mov $0x1,%eax
1b5f9(5): jmp 0xfffffd6b(%rip)
1b5fe(2): nop 
1b600(7): test $0x2000,%r15d
1b607(5): mov $0x1,%eax
1b60c(6): jz 0xfffffd58(%rip)
1b612(4): mov $0x9,0x8(%rbp)
1b616(5): jmp 0xfffffd4e(%rip)
1b61b(5): nop 0x0(%rax,%rax,1)
1b620(7): test $0x2000,%r15d
1b627(5): mov $0x1,%eax
1b62c(6): jz 0xfffffd38(%rip)
1b632(4): mov $0x8,0x8(%rbp)
1b636(5): jmp 0xfffffd2e(%rip)
1b63b(5): nop 0x0(%rax,%rax,1)
1b640(4): test $0x8,%r15b
1b644(2): jnz 0x10(%rip)
1b646(4): add $0x1,%r14
1b64a(4): cmp 0x58(%rbx),%r14
1b64e(6): jnz 0x2fd(%rip)
1b654(4): mov $0xc,0x8(%rbp)
1b658(7): mov $0x20,0x0(%rbp)
1b65f(5): mov $0x1,%eax
1b664(5): jmp 0xfffffd00(%rip)
1b669(7): test $0x8400,%r15d
1b670(5): mov $0x2,%eax
1b675(6): jnz 0xfffffcef(%rip)
1b67b(4): mov $0xa,0x8(%rbp)
1b67f(5): jmp 0xfffffce5(%rip)
1b684(7): and $0x1200,%r15d
1b68b(5): mov $0x2,%eax
1b690(7): cmp $0x200,%r15
1b697(6): jnz 0xfffffccd(%rip)
1b69d(5): jmp 0xfffffe9c(%rip)
1b6a2(7): test $0x80000,%r15d
1b6a9(5): mov $0x2,%eax
1b6ae(6): jnz 0xfffffcb6(%rip)
1b6b4(4): mov $0x20,0x8(%rbp)
1b6b8(5): jmp 0xfffffcac(%rip)
1b6bd(7): test $0x80000,%r15d
1b6c4(5): mov $0x2,%eax
1b6c9(6): jnz 0xfffffc9b(%rip)
1b6cf(4): mov $0x22,0x8(%rbp)
1b6d3(5): jmp 0xfffffc91(%rip)
1b6d8(7): and $0x1200,%r15d
1b6df(5): mov $0x2,%eax
1b6e4(7): cmp $0x200,%r15
1b6eb(6): jnz 0xfffffc79(%rip)
1b6f1(5): jmp 0xfffffdf8(%rip)
1b6f6(7): test $0x80000,%r15d
1b6fd(5): mov $0x2,%eax
1b702(6): jnz 0xfffffc62(%rip)
1b708(4): mov $0xc,0x8(%rbp)
1b70c(7): mov $0x100,0x0(%rbp)
1b713(5): jmp 0xfffffc51(%rip)
1b718(7): test $0x80000,%r15d
1b71f(5): mov $0x2,%eax
1b724(6): jnz 0xfffffc40(%rip)
1b72a(4): mov $0xc,0x8(%rbp)
1b72e(7): mov $0x40,0x0(%rbp)
1b735(5): jmp 0xfffffc2f(%rip)
1b73a(7): test $0x80000,%r15d
1b741(5): mov $0x2,%eax
1b746(6): jnz 0xfffffc1e(%rip)
1b74c(4): mov $0x21,0x8(%rbp)
1b750(5): jmp 0xfffffc14(%rip)
1b755(7): test $0x80000,%r15d
1b75c(5): mov $0x2,%eax
1b761(6): jnz 0xfffffc03(%rip)
1b767(4): mov $0x23,0x8(%rbp)
1b76b(5): jmp 0xfffffbf9(%rip)
1b770(7): test $0x80000,%r15d
1b777(5): mov $0x2,%eax
1b77c(6): jnz 0xfffffbe8(%rip)
1b782(4): mov $0xc,0x8(%rbp)
1b786(7): mov $0x200,0x0(%rbp)
1b78d(5): jmp 0xfffffbd7(%rip)
1b792(7): and $0x402,%r15d
1b799(5): mov $0x2,%eax
1b79e(4): cmp $0x2,%r15
1b7a2(6): jnz 0xfffffbc2(%rip)
1b7a8(5): jmp 0xfffffdea(%rip)
1b7ad(7): test $0x80000,%r15d
1b7b4(5): mov $0x2,%eax
1b7b9(6): jnz 0xfffffbab(%rip)
1b7bf(4): mov $0xc,0x8(%rbp)
1b7c3(7): mov $0x9,0x0(%rbp)
1b7ca(5): jmp 0xfffffb9a(%rip)
1b7cf(7): test $0x80000,%r15d
1b7d6(5): mov $0x2,%eax
1b7db(6): jnz 0xfffffb89(%rip)
1b7e1(4): mov $0xc,0x8(%rbp)
1b7e5(7): mov $0x6,0x0(%rbp)
1b7ec(5): jmp 0xfffffb78(%rip)
1b7f1(7): test $0x4000,%r15d
1b7f8(5): mov $0x2,%eax
1b7fd(6): jnz 0xfffffb67(%rip)
1b803(4): mov 0x8(%rsp),%edx
1b807(4): mov $0x4,0x8(%rbp)
1b80b(3): sub $0x31,%edx
1b80e(3): movsxd %edx,%rdx
1b811(4): mov %rdx,0x0(%rbp)
1b815(5): jmp 0xfffffb4f(%rip)
1b81a(7): and $0x402,%r15d
1b821(5): mov $0x2,%eax
1b826(4): cmp $0x2,%r15
1b82a(6): jnz 0xfffffb3a(%rip)
1b830(5): jmp 0xfffffd92(%rip)
1b835(7): test $0x2000,%r15d
1b83c(5): mov $0x2,%eax
1b841(6): jnz 0xfffffb23(%rip)
1b847(5): jmp 0xfffffdcb(%rip)
1b84c(7): test $0x2000,%r15d
1b853(5): mov $0x2,%eax
1b858(6): jnz 0xfffffb0c(%rip)
1b85e(5): jmp 0xfffffdd4(%rip)
1b863(7): test $0x80000,%r15d
1b86a(5): mov $0x2,%eax
1b86f(6): jnz 0xfffffaf5(%rip)
1b875(4): mov $0xc,0x8(%rbp)
1b879(7): mov $0x80,0x0(%rbp)
1b880(5): jmp 0xfffffae4(%rip)
1b885(5): mov $0x2,%eax
1b88a(5): jmp 0xfffffada(%rip)
1b88f(1): nop 
1b890(5): call 0xfffe7160(%rip)
1b895(3): mov (%rax),%rsi
1b898(4): movzx %r12b,%edx
1b89c(4): movzx 0x0(%rsi,%rdx,2),%eax
1b8a0(4): shr $0x3,%ax
1b8a4(3): and $0x1,%eax
1b8a7(4): cmp $0x5f,%r12b
1b8ab(5): jmp 0xfffffbbf(%rip)
1b8b0(3): cmp $0x1,%eax
1b8b3(2): jle 0x31(%rip)
1b8b5(4): mov 0x10(%rbx),%rcx
1b8b9(8): lea 0x0(,%rsi,4),%rdi
1b8c1(4): mov 0x0(%rcx,%rsi,4),%r8d
1b8c5(4): cmp $0xff,%r8d
1b8c9(6): jz 0xb6(%rip)
1b8cf(4): lea 0x2(%r14),%r9
1b8d3(4): cmp %r9,0x30(%rbx)
1b8d7(2): jz 0xd(%rip)
1b8d9(5): cmp $0xff,0x4(%rcx,%rdi,1)
1b8de(6): jz 0xa1(%rip)
1b8e4(7): cmp $0x0,0x8c(%rbx)
1b8eb(3): mov (%rbx),%rcx
1b8ee(4): mov 0x28(%rbx),%rdi
1b8f2(2): jz 0x46(%rip)
1b8f4(4): mov 0x18(%rbx),%r8
1b8f8(3): add %rdi,%rcx
1b8fb(4): add 0x0(%r8,%rsi,8),%rcx
1b8ff(3): movzx (%rcx),%edi
1b902(3): mov %edi,%r12d
1b905(4): mov %edi,0x8(%rsp)
1b909(6): and $0x80,%edi
1b90f(6): jnz 0xfffffb1c(%rip)
1b915(5): jmp 0xfffffb23(%rip)
1b91a(6): cmp $0xa,0xffffffff(%rdx,%r14,1)
1b920(6): jnz 0xfffffbec(%rip)
1b926(7): test $0x800,%r15d
1b92d(6): jz 0xfffffbdf(%rip)
1b933(5): jmp 0xfffffc27(%rip)
1b938(3): add %rsi,%rcx
1b93b(4): movzx 0x0(%rcx,%rdi,1),%edi
1b93f(3): mov %edi,%r12d
1b942(4): mov %edi,0x8(%rsp)
1b946(5): jmp 0xfffffaf2(%rip)
1b94b(5): lea 0x10(%rsp),%rdi
1b950(3): mov %r15,%rdx
1b953(4): mov %r14,0x48(%rbx)
1b957(3): mov %rbx,%rsi
1b95a(5): call 0xfffff946(%rip)
1b95f(5): movzx 0x18(%rsp),%eax
1b964(5): sub $0x1,0x48(%rbx)
1b969(3): lea 0xfffffff7(%rax),%edx
1b96c(5): mov $0x1,%eax
1b971(3): cmp $0x1,%dl
1b974(6): jnbe 0xfffff9f0(%rip)
1b97a(5): jmp 0xfffffcda(%rip)
1b97f(6): movzx 0x1(%rdx,%r14,1),%eax
1b985(4): mov $0x1,0x8(%rbp)
1b989(3): mov %eax,%r12d
1b98c(3): mov %al,0x0(%rbp)
1b98f(4): mov %eax,0x8(%rsp)
1b993(5): jmp 0xfffffabe(%rip)
1b998(5): call 0xfffe6bc8(%rip)

"fetch_number" :
1b9a0(2): push %r14
1b9a2(3): mov %rdi,%r14
1b9a5(2): push %r13
1b9a7(3): mov %rsi,%r13
1b9aa(2): push %r12
1b9ac(7): mov $0xfffffffe,%r12
1b9b3(1): push %rbp
1b9b4(3): mov %rdx,%rbp
1b9b7(1): push %rbx
1b9b8(7): mov $0xffffffff,%rbx
1b9bf(1): nop 
1b9c0(3): mov %rbp,%rdx
1b9c3(3): mov %r14,%rsi
1b9c6(3): mov %r13,%rdi
1b9c9(5): call 0xfffff8d7(%rip)
1b9ce(2): cwde 
1b9d0(4): add %rax,0x48(%r14)
1b9d4(5): movzx 0x8(%r13),%eax
1b9d9(5): movzx 0x0(%r13),%edx
1b9de(2): cmp $0x2,%al
1b9e0(2): jz 0x50(%rip)
1b9e2(2): cmp $0x18,%al
1b9e4(2): jz 0x53(%rip)
1b9e6(3): cmp $0x2c,%dl
1b9e9(2): jz 0x4e(%rip)
1b9eb(2): cmp $0x1,%al
1b9ed(2): jz 0xb(%rip)
1b9ef(3): mov %r12,%rbx
1b9f2(2): jmp 0xffffffce(%rip)
1b9f4(4): nop 0x0(%rax)
1b9f8(3): lea 0xffffffd0(%rdx),%eax
1b9fb(2): cmp $0x9,%al
1b9fd(2): jnbe 0xfffffff2(%rip)
1b9ff(4): cmp $0xfffffffe,%rbx
1ba03(2): jz 0xffffffec(%rip)
1ba05(4): cmp $0xffffffff,%rbx
1ba09(2): jz 0x3f(%rip)
1ba0b(4): lea 0x0(%rbx,%rbx,4),%rax
1ba0f(4): lea 0x0(%rdx,%rax,2),%rbx
1ba13(5): mov $0x8030,%eax
1ba18(7): cmp $0x8030,%rbx
1ba1f(4): cmovnl %rax,%rbx
1ba23(4): sub $0x30,%rbx
1ba27(2): jmp 0xffffff99(%rip)
1ba29(7): nop 0x0(%rax)
1ba30(7): mov $0xfffffffe,%rbx
1ba37(3): mov %rbx,%rax
1ba3a(1): pop %rbx
1ba3b(1): pop %rbp
1ba3c(2): pop %r12
1ba3e(2): pop %r13
1ba40(2): pop %r14
1ba42(1): ret near (%rsp)
1ba43(5): nop 0x0(%rax,%rax,1)
1ba48(3): movzx %dl,%ebx
1ba4b(3): sub $0x30,%ebx
1ba4e(3): movsxd %ebx,%rbx
1ba51(5): jmp 0xffffff6f(%rip)

"parse_expression" :
1ba60(2): push %r15
1ba62(2): push %r14
1ba64(2): push %r13
1ba66(2): push %r12
1ba68(1): push %rbp
1ba69(1): push %rbx
1ba6a(7): sub $0x128,%rsp
1ba71(5): mov %rcx,0x20(%rsp)
1ba76(4): movzx 0x8(%rdx),%ecx
1ba7a(9): mov $0x28,%rax
1ba83(8): mov %rax,0x118(%rsp)
1ba8b(2): xor %eax,%eax
1ba8d(3): mov (%rsi),%rax
1ba90(5): mov %rdx,0x18(%rsp)
1ba95(5): mov %r9,0x40(%rsp)
1ba9a(3): cmp $0x24,%cl
1ba9d(5): mov %rax,0x10(%rsp)
1baa2(6): jnbe 0xbe(%rip)
1baa8(3): mov %rsi,%rbp
1baab(7): lea 0x716e(%rip),%rsi
1bab2(3): movzx %cl,%edx
1bab5(3): mov %rdi,%r14
1bab8(4): movsxd 0x0(%rsi,%rdx,4),%rax
1babc(3): add %rsi,%rax
1babf(2): jmp %rax
1bac1(4): mov 0x30(%rbp),%rbx
1bac5(5): mov 0x20(%rsp),%r15
1baca(3): mov %rdi,%rsi
1bacd(5): mov 0x18(%rsp),%r13
1bad2(4): mov %r8,(%rsp)
1bad6(4): lea 0x1(%rbx),%rax
1bada(3): mov %r15,%rdx
1badd(7): or $0x800000,%rdx
1bae4(3): mov %r13,%rdi
1bae7(4): mov %rax,0x30(%rbp)
1baeb(5): call 0xfffff7b5(%rip)
1baf0(2): cwde 
1baf2(4): add %rax,0x48(%r14)
1baf6(2): xor %eax,%eax
1baf8(5): cmp $0x9,0x8(%r13)
1bafd(3): mov %r13,%rdx
1bb00(6): jz 0xb00(%rip)
1bb06(5): mov 0x40(%rsp),%r13
1bb0b(4): mov (%rsp),%r8
1bb0f(3): mov %r15,%rcx
1bb12(3): mov %rbp,%rsi
1bb15(3): mov %r14,%rdi
1bb18(4): add $0x1,%r8
1bb1c(3): mov %r13,%r9
1bb1f(5): call 0x15b1(%rip)
1bb24(4): mov 0x0(%r13),%r11d
1bb28(3): test %r11d,%r11d
1bb2b(2): jnz 0x35(%rip)
1bb2d(5): mov 0x18(%rsp),%rdx
1bb32(4): cmp $0x9,0x8(%rdx)
1bb36(6): jz 0xaca(%rip)
1bb3c(3): test %rax,%rax
1bb3f(2): jz 0x13(%rip)
1bb41(7): lea 0xffff62d8(%rip),%rsi
1bb48(2): xor %edx,%edx
1bb4a(3): mov %rax,%rdi
1bb4d(5): call 0xffff5433(%rip)
1bb52(5): mov 0x40(%rsp),%rax
1bb57(6): mov $0x8,(%rax)
1bb5d(3): nop (%rax)
1bb60(9): mov $0x0,0x28(%rsp)
1bb69(7): nop 0x0(%rax)
1bb70(8): mov 0x118(%rsp),%rdi
1bb78(9): xor $0x28,%rdi
1bb81(5): mov 0x28(%rsp),%rax
1bb86(6): jnz 0x1378(%rip)
1bb8c(7): add $0x128,%rsp
1bb93(1): pop %rbx
1bb94(1): pop %rbp
1bb95(2): pop %r12
1bb97(2): pop %r13
1bb99(2): pop %r14
1bb9b(2): pop %r15
1bb9d(1): ret near (%rsp)
1bb9e(9): test $0x1000000,0x20(%rsp)
1bba7(6): jnz 0x256(%rip)
1bbad(5): mov 0x20(%rsp),%rax
1bbb2(2): test $0x20,%al
1bbb4(6): jnz 0x249(%rip)
1bbba(2): test $0x10,%al
1bbbc(6): jnz 0xe69(%rip)
1bbc2(3): cmp $0x9,%cl
1bbc5(6): jz 0xa13(%rip)
1bbcb(5): mov 0x10(%rsp),%rax
1bbd0(5): mov 0x18(%rsp),%r8
1bbd5(2): xor %ecx,%ecx
1bbd7(2): xor %edx,%edx
1bbd9(7): lea 0x80(%rax),%rsi
1bbe0(4): lea 0x70(%rax),%rdi
1bbe4(5): mov $0x1,0x8(%r8)
1bbe9(5): call 0xffff7777(%rip)
1bbee(3): test %rax,%rax
1bbf1(5): mov %rax,0x28(%rsp)
1bbf6(6): jz 0x9d2(%rip)
1bbfc(5): mov 0x18(%rsp),%rbx
1bc01(5): mov 0x20(%rsp),%rdx
1bc06(3): mov %r14,%rsi
1bc09(8): lea 0xc0(%rsp),%r15
1bc11(3): mov %rbx,%rdi
1bc14(5): call 0xfffff68c(%rip)
1bc19(2): cwde 
1bc1b(4): add %rax,0x48(%r14)
1bc1f(4): movzx 0x8(%rbx),%eax
1bc23(5): nop 0x0(%rax,%rax,1)
1bc28(2): cmp $0x17,%al
1bc2a(6): jnbe 0xffffff46(%rip)
1bc30(2): cmp $0x12,%al
1bc32(5): mov $0x8c0800,%ecx
1bc37(3): setz %bl
1bc3a(4): bt %rax,%rcx
1bc3e(6): jnb 0xffffff32(%rip)
1bc44(5): mov 0x18(%rsp),%rcx
1bc49(2): cmp $0x17,%al
1bc4b(4): mov 0x48(%r14),%rbp
1bc4f(4): movdqa (%rcx),%xmm0
1bc53(6): jz 0x325(%rip)
1bc59(2): cmp $0x13,%al
1bc5b(3): movzx %bl,%ebx
1bc5e(6): jz 0x2b2(%rip)
1bc64(5): mov 0x20(%rsp),%rdx
1bc69(5): mov 0x18(%rsp),%rdi
1bc6e(3): mov %r14,%rsi
1bc71(5): call 0xfffff62f(%rip)
1bc76(2): cwde 
1bc78(4): add %rax,0x48(%r14)
1bc7c(6): cmp $0x0,0x28(%rsp)
1bc82(6): jz 0x38e(%rip)
1bc88(8): mov $0xffffffff,(%rsp)
1bc90(3): test %rbx,%rbx
1bc93(5): mov 0x28(%rsp),%rbp
1bc98(9): mov $0x0,0x30(%rsp)
1bca1(6): jnle 0x17f(%rip)
1bca7(4): cmp $0x11,0x30(%rbp)
1bcab(6): jz 0x345(%rip)
1bcb1(5): cmp $0xffffffff,(%rsp)
1bcb6(3): mov %rbp,%rdx
1bcb9(3): mov %r15,%r8
1bcbc(3): setz %al
1bcbf(2): xor %ecx,%ecx
1bcc1(3): add $0xa,%eax
1bcc4(7): mov %al,0xc8(%rsp)
1bccb(5): mov 0x10(%rsp),%rax
1bcd0(4): lea 0x70(%rax),%r12
1bcd4(7): lea 0x80(%rax),%r13
1bcdb(3): mov %r12,%rdi
1bcde(3): mov %r13,%rsi
1bce1(5): call 0xffff767f(%rip)
1bce6(3): test %rax,%rax
1bce9(3): mov %rax,%rdx
1bcec(6): jz 0x1f4(%rip)
1bcf2(4): add $0x2,%rbx
1bcf6(4): cmp (%rsp),%rbx
1bcfa(2): jnle 0x81(%rip)
1bcfc(5): mov %r14,0x48(%rsp)
1bd01(3): mov %rax,%r14
1bd04(5): mov 0x10(%rsp),%rsi
1bd09(3): mov %rbp,%rdi
1bd0c(5): call 0xffff7734(%rip)
1bd11(3): mov %r15,%r8
1bd14(3): mov %rax,%rbp
1bd17(3): mov %rax,%rcx
1bd1a(3): mov %r14,%rdx
1bd1d(3): mov %r13,%rsi
1bd20(3): mov %r12,%rdi
1bd23(8): mov $0x10,0xc8(%rsp)
1bd2b(5): call 0xffff7635(%rip)
1bd30(3): test %rbp,%rbp
1bd33(6): jz 0x1ad(%rip)
1bd39(3): test %rax,%rax
1bd3c(6): jz 0x1a4(%rip)
1bd42(2): xor %ecx,%ecx
1bd44(3): mov %r15,%r8
1bd47(3): mov %rax,%rdx
1bd4a(3): mov %r13,%rsi
1bd4d(3): mov %r12,%rdi
1bd50(8): mov $0xa,0xc8(%rsp)
1bd58(5): call 0xffff7608(%rip)
1bd5d(3): test %rax,%rax
1bd60(3): mov %rax,%r14
1bd63(6): jz 0x17d(%rip)
1bd69(4): add $0x1,%rbx
1bd6d(4): cmp (%rsp),%rbx
1bd71(2): jle 0xffffff93(%rip)
1bd73(5): mov 0x48(%rsp),%r14
1bd78(3): mov %rax,%rdx
1bd7b(5): mov 0x30(%rsp),%rax
1bd80(3): test %rax,%rax
1bd83(6): jz 0x2ad(%rip)
1bd89(3): mov %rdx,%rcx
1bd8c(3): mov %r15,%r8
1bd8f(3): mov %rax,%rdx
1bd92(3): mov %r13,%rsi
1bd95(3): mov %r12,%rdi
1bd98(8): mov $0x10,0xc8(%rsp)
1bda0(5): call 0xffff75c0(%rip)
1bda5(5): mov 0x40(%rsp),%rdi
1bdaa(2): mov (%rdi),%edx
1bdac(2): test %edx,%edx
1bdae(2): jz 0xb(%rip)
1bdb0(3): test %rax,%rax
1bdb3(6): jz 0x358(%rip)
1bdb9(5): mov %rax,0x28(%rsp)
1bdbe(9): test $0x1000000,0x20(%rsp)
1bdc7(5): mov 0x18(%rsp),%rax
1bdcc(4): movzx 0x8(%rax),%eax
1bdd0(6): jz 0xfffffe58(%rip)
1bdd6(2): cmp $0xb,%al
1bdd8(2): jz 0xa(%rip)
1bdda(2): cmp $0x17,%al
1bddc(6): jnz 0xfffffe4c(%rip)
1bde2(5): mov 0x28(%rsp),%rax
1bde7(3): test %rax,%rax
1bdea(2): jz 0x13(%rip)
1bdec(7): lea 0xffff602d(%rip),%rsi
1bdf3(2): xor %edx,%edx
1bdf5(3): mov %rax,%rdi
1bdf8(5): call 0xffff5188(%rip)
1bdfd(5): mov 0x40(%rsp),%rax
1be02(9): mov $0x0,0x28(%rsp)
1be0b(6): mov $0xd,(%rax)
1be11(5): jmp 0xfffffd5f(%rip)
1be16(a): nop 0x0(%rax,%rax,1)
1be20(4): cmp $0x1,%rbx
1be24(6): jz 0x838(%rip)
1be2a(5): mov 0x10(%rsp),%rax
1be2f(3): mov %rbp,%r13
1be32(5): mov %r14,0x48(%rsp)
1be37(7): lea 0x80(%rax),%r12
1be3e(4): lea 0x70(%rax),%rdi
1be42(3): mov %rbp,%rax
1be45(3): mov %rax,%r14
1be48(5): mov $0x2,%ebp
1be4d(3): mov %r12,%rsi
1be50(5): mov %rdi,0x30(%rsp)
1be55(3): mov %r13,%r12
1be58(3): mov %rbx,%r13
1be5b(3): mov %rsi,%rbx
1be5e(2): nop 
1be60(5): mov 0x10(%rsp),%rsi
1be65(3): mov %r12,%rdi
1be68(5): call 0xffff75d8(%rip)
1be6d(5): mov 0x30(%rsp),%rdi
1be72(3): mov %rax,%r12
1be75(3): mov %r14,%rdx
1be78(3): mov %r15,%r8
1be7b(3): mov %rax,%rcx
1be7e(3): mov %rbx,%rsi
1be81(8): mov $0x10,0xc8(%rsp)
1be89(5): call 0xffff74d7(%rip)
1be8e(3): test %r12,%r12
1be91(3): mov %rax,%r14
1be94(2): jz 0x4c(%rip)
1be96(3): test %rax,%rax
1be99(2): jz 0x47(%rip)
1be9b(4): add $0x1,%rbp
1be9f(3): cmp %r13,%rbp
1bea2(2): jle 0xffffffbe(%rip)
1bea4(5): mov 0x48(%rsp),%r14
1bea9(3): mov %r13,%rbx
1beac(5): mov %rax,0x30(%rsp)
1beb1(3): mov %r12,%r13
1beb4(4): cmp %rbx,(%rsp)
1beb8(6): jz 0x16c(%rip)
1bebe(5): mov 0x10(%rsp),%rsi
1bec3(3): mov %r13,%rdi
1bec6(5): call 0xffff757a(%rip)
1becb(3): test %rax,%rax
1bece(3): mov %rax,%rbp
1bed1(6): jnz 0xfffffdd6(%rip)
1bed7(9): nop 0x0(%rax,%rax,1)
1bee0(5): mov 0x40(%rsp),%rax
1bee5(6): mov $0xc,(%rax)
1beeb(5): mov 0x28(%rsp),%rdi
1bef0(7): lea 0xffff5f29(%rip),%rsi
1bef7(2): xor %edx,%edx
1bef9(5): call 0xffff5087(%rip)
1befe(9): mov $0x0,0x28(%rsp)
1bf07(5): jmp 0xfffffc69(%rip)
1bf0c(4): nop 0x0(%rax)
1bf10(8): mov $0x1,(%rsp)
1bf18(5): mov 0x20(%rsp),%rdx
1bf1d(5): mov 0x18(%rsp),%rdi
1bf22(3): mov %r14,%rsi
1bf25(5): call 0xfffff37b(%rip)
1bf2a(2): cwde 
1bf2c(4): add %rax,0x48(%r14)
1bf30(6): cmp $0x0,0x28(%rsp)
1bf36(6): jz 0xda(%rip)
1bf3c(4): mov (%rsp),%rax
1bf40(3): or %rbx,%rax
1bf43(6): jnz 0xfffffd4d(%rip)
1bf49(5): mov 0x28(%rsp),%rdi
1bf4e(7): lea 0xffff5ecb(%rip),%rsi
1bf55(2): xor %edx,%edx
1bf57(5): call 0xffff5029(%rip)
1bf5c(5): mov 0x40(%rsp),%rax
1bf61(2): mov (%rax),%esi
1bf63(2): test %esi,%esi
1bf65(2): jnz 0xffffff86(%rip)
1bf67(9): mov $0x0,0x28(%rsp)
1bf70(5): jmp 0xfffffe4e(%rip)
1bf75(3): nop (%rax)
1bf78(5): mov 0x20(%rsp),%rdx
1bf7d(3): mov %rcx,%rsi
1bf80(3): mov %r14,%rdi
1bf83(4): movaps %xmm0,(%rsp)
1bf87(5): call 0xfffffa19(%rip)
1bf8c(4): cmp $0xffffffff,%rax
1bf90(3): mov %rax,%rbx
1bf93(5): movdqa (%rsp),%xmm0
1bf98(6): jz 0xa8(%rip)
1bf9e(4): cmp $0xfffffffe,%rax
1bfa2(2): jz 0x1b(%rip)
1bfa4(5): mov 0x18(%rsp),%rax
1bfa9(4): movzx 0x8(%rax),%eax
1bfad(2): cmp $0x18,%al
1bfaf(6): jz 0x121(%rip)
1bfb5(2): cmp $0x1,%al
1bfb7(6): jz 0x12c(%rip)
1bfbd(9): test $0x200000,0x20(%rsp)
1bfc6(6): jz 0xf3d(%rip)
1bfcc(5): mov 0x18(%rsp),%rax
1bfd1(4): mov %rbp,0x48(%r14)
1bfd5(3): movaps %xmm0,(%rax)
1bfd8(4): mov $0x1,0x8(%rax)
1bfdc(5): mov 0x28(%rsp),%rax
1bfe1(5): jmp 0xfffffdc4(%rip)
1bfe6(a): nop 0x0(%rax,%rax,1)
1bff0(4): mov 0x28(%rbp),%rdx
1bff4(7): lea 0xffff4cc5(%rip),%rsi
1bffb(3): mov %rbp,%rdi
1bffe(5): call 0xffff4f82(%rip)
1c003(5): jmp 0xfffffcae(%rip)
1c008(8): nop 0x0(%rax,%rax,1)
1c010(5): mov 0x40(%rsp),%rax
1c015(2): mov (%rax),%ecx
1c017(2): test %ecx,%ecx
1c019(6): jz 0xffffff4e(%rip)
1c01f(5): jmp 0xfffffb41(%rip)
1c024(5): mov 0x30(%rsp),%rdx
1c029(7): nop 0x0(%rax)
1c030(5): mov %rdx,0x28(%rsp)
1c035(5): jmp 0xfffffd89(%rip)
1c03a(6): nop 0x0(%rax,%rax,1)
1c040(5): mov 0x18(%rsp),%rax
1c045(4): cmp $0x1,0x8(%rax)
1c049(6): jnz 0xb7(%rip)
1c04f(5): mov 0x18(%rsp),%rax
1c054(3): cmp $0x2c,(%rax)
1c057(6): jnz 0xa9(%rip)
1c05d(2): xor %ebx,%ebx
1c05f(5): mov 0x20(%rsp),%rdx
1c064(5): mov 0x18(%rsp),%rsi
1c069(3): mov %r14,%rdi
1c06c(5): movaps %xmm0,0x30(%rsp)
1c071(5): call 0xfffff92f(%rip)
1c076(4): cmp $0xfffffffe,%rax
1c07a(4): mov %rax,(%rsp)
1c07e(6): movdqa 0x30(%rsp),%xmm0
1c084(6): jz 0xffffff39(%rip)
1c08a(4): mov (%rsp),%rax
1c08e(4): cmp $0xffffffff,%rax
1c092(2): jz 0x7(%rip)
1c094(3): cmp %rbx,%rax
1c097(2): jl 0x69(%rip)
1c099(5): mov 0x18(%rsp),%rax
1c09e(4): cmp $0x18,0x8(%rax)
1c0a2(2): jnz 0x5e(%rip)
1c0a4(5): cmp $0xffffffff,(%rsp)
1c0a9(2): jnz 0x2b(%rip)
1c0ab(2): xor %eax,%eax
1c0ad(7): cmp $0x7fff,%rbx
1c0b4(3): setnle %al
1c0b7(3): test %rax,%rax
1c0ba(6): jz 0xfffffe5e(%rip)
1c0c0(5): mov 0x40(%rsp),%rax
1c0c5(6): mov $0xf,(%rax)
1c0cb(2): jmp 0x40(%rip)
1c0cd(3): nop (%rax)
1c0d0(4): mov %rbx,(%rsp)
1c0d4(2): xor %eax,%eax
1c0d6(8): cmp $0x7fff,(%rsp)
1c0de(3): setnle %al
1c0e1(2): jmp 0xffffffd6(%rip)
1c0e3(5): mov 0x18(%rsp),%rax
1c0e8(3): cmp $0x2c,(%rax)
1c0eb(6): jz 0xffffff74(%rip)
1c0f1(9): test $0x200000,0x20(%rsp)
1c0fa(6): jnz 0xfffffed2(%rip)
1c100(5): mov 0x40(%rsp),%rax
1c105(6): mov $0xa,(%rax)
1c10b(6): cmp $0x0,0x28(%rsp)
1c111(6): jnz 0xfffffdda(%rip)
1c117(5): jmp 0xfffffa49(%rip)
1c11c(4): nop 0x0(%rax)
1c120(5): mov 0x18(%rsp),%rax
1c125(2): mov (%rax),%ebp
1c127(6): test $0x30f,%ebp
1c12d(2): jz 0x64(%rip)
1c12f(5): mov 0x10(%rsp),%rax
1c134(7): movzx 0xb0(%rax),%eax
1c13b(2): test $0x10,%al
1c13d(2): jnz 0x54(%rip)
1c13f(5): mov 0x10(%rsp),%rdi
1c144(3): or $0x10,%eax
1c147(2): test $0x8,%al
1c149(6): mov %al,0xb0(%rdi)
1c14f(6): jnz 0xc04(%rip)
1c155(a): mov $0x287948901175001088,%rdx
1c15f(2): test $0x4,%al
1c161(7): mov %rdx,0xb8(%rdi)
1c168(a): mov $0x576460745995190270,%rdx
1c172(7): mov %rdx,0xc0(%rdi)
1c179(6): jz 0xb5f(%rip)
1c17f(4): pxor %xmm0,%xmm0
1c183(5): mov 0x18(%rsp),%rax
1c188(7): movups %xmm0,0xc8(%rdi)
1c18f(2): mov (%rax),%ebp
1c191(5): mov 0x10(%rsp),%rax
1c196(4): lea 0x70(%rax),%rbx
1c19a(7): lea 0x80(%rax),%r12
1c1a1(6): lea 0xffffff00(%rbp),%eax
1c1a7(5): test $0xfffffeff,%eax
1c1ac(6): jnz 0x66e(%rip)
1c1b2(6): cmp $0x100,%ebp
1c1b8(5): mov 0x18(%rsp),%r15
1c1bd(6): jz 0x635(%rip)
1c1c3(7): mov $0x5,(%r15)
1c1ca(3): mov %r15,%r8
1c1cd(2): xor %ecx,%ecx
1c1cf(2): xor %edx,%edx
1c1d1(3): mov %r12,%rsi
1c1d4(3): mov %rbx,%rdi
1c1d7(5): call 0xffff7189(%rip)
1c1dc(7): mov $0xa,(%r15)
1c1e3(3): mov %rax,%rbp
1c1e6(5): mov 0x18(%rsp),%r8
1c1eb(2): xor %ecx,%ecx
1c1ed(2): xor %edx,%edx
1c1ef(3): mov %r12,%rsi
1c1f2(3): mov %rbx,%rdi
1c1f5(5): call 0xffff716b(%rip)
1c1fa(8): lea 0xc0(%rsp),%r8
1c202(3): mov %rbp,%rdx
1c205(3): mov %rbx,%rdi
1c208(3): mov %rax,%rcx
1c20b(3): mov %r12,%rsi
1c20e(3): mov %rax,%r13
1c211(8): mov $0xa,0xc8(%rsp)
1c219(5): call 0xffff7147(%rip)
1c21e(3): test %rbp,%rbp
1c221(3): mov %rax,%rdi
1c224(5): mov %rax,0x28(%rsp)
1c229(3): setz %dl
1c22c(3): test %r13,%r13
1c22f(3): setz %al
1c232(2): or %al,%dl
1c234(6): jnz 0x394(%rip)
1c23a(3): test %rdi,%rdi
1c23d(6): jz 0x38b(%rip)
1c243(5): mov 0x20(%rsp),%rdx
1c248(5): mov 0x18(%rsp),%rdi
1c24d(3): mov %r14,%rsi
1c250(5): call 0xfffff050(%rip)
1c255(2): cwde 
1c257(4): add %rax,0x48(%r14)
1c25b(5): jmp 0xfffff915(%rip)
1c260(5): mov $0x1,%esi
1c265(5): mov $0x20,%edi
1c26a(c): mov $0x0,0x98(%rsp)
1c276(5): call 0xfffe643a(%rip)
1c27b(5): mov $0x1,%esi
1c280(3): mov %rax,%r12
1c283(5): mov $0x50,%edi
1c288(5): call 0xfffe6428(%rip)
1c28d(3): test %r12,%r12
1c290(3): mov %rax,%r13
1c293(3): setz %dl
1c296(3): test %rax,%rax
1c299(3): setz %al
1c29c(2): or %al,%dl
1c29e(6): jnz 0x7db(%rip)
1c2a4(5): mov 0x18(%rsp),%r10
1c2a9(5): mov 0x20(%rsp),%rdx
1c2ae(3): mov %r14,%rsi
1c2b1(3): mov %r10,%rdi
1c2b4(5): call 0xffff48dc(%rip)
1c2b9(3): movsxd %eax,%rbx
1c2bc(5): movzx 0x8(%r10),%eax
1c2c1(2): cmp $0x2,%al
1c2c3(6): jz 0x7a6(%rip)
1c2c9(2): cmp $0x19,%al
1c2cb(5): mov $0x0,0x57(%rsp)
1c2d0(6): jz 0x4ca(%rip)
1c2d6(2): cmp $0x15,%al
1c2d8(6): jz 0x50c(%rip)
1c2de(8): lea 0xd0(%rsp),%rax
1c2e6(5): mov 0x18(%rsp),%r15
1c2eb(7): lea 0x69c2(%rip),%rbp
1c2f2(9): mov $0x0,0x48(%rsp)
1c2fb(6): mov $0x1,%r9d
1c301(9): mov $0x0,0x30(%rsp)
1c30a(5): mov %rax,0x28(%rsp)
1c30f(8): lea 0xa0(%rsp),%rax
1c317(4): mov %rax,(%rsp)
1c31b(8): lea 0x98(%rsp),%rax
1c323(5): mov %rax,0x58(%rsp)
1c328(8): lea 0xc0(%rsp),%rax
1c330(5): mov %rax,0x60(%rsp)
1c335(8): lea 0xf0(%rsp),%rax
1c33d(5): mov %rax,0x68(%rsp)
1c342(5): mov 0x28(%rsp),%rax
1c347(5): mov 0x20(%rsp),%r8
1c34c(4): and $0x1,%r9d
1c350(4): mov (%rsp),%rdi
1c354(2): mov %ebx,%ecx
1c356(3): mov %r15,%rdx
1c359(3): mov %r14,%rsi
1c35c(b): mov $0x3,0xa0(%rsp)
1c367(8): mov %rax,0xa8(%rsp)
1c36f(5): call 0xffffecd1(%rip)
1c374(2): test %eax,%eax
1c376(6): jnz 0x4e5(%rip)
1c37c(5): mov 0x20(%rsp),%rdx
1c381(3): mov %r14,%rsi
1c384(3): mov %r15,%rdi
1c387(5): call 0xffff4809(%rip)
1c38c(3): movsxd %eax,%rbx
1c38f(7): mov 0xa0(%rsp),%eax
1c396(3): lea 0xfffffffe(%rax),%edx
1c399(3): and $0xfd,%edx
1c39c(2): jz 0x19(%rip)
1c39e(5): movzx 0x8(%r15),%edx
1c3a3(3): cmp $0x2,%dl
1c3a6(6): jz 0x49b(%rip)
1c3ac(3): cmp $0x16,%dl
1c3af(6): jz 0x4b8(%rip)
1c3b5(3): cmp $0x4,%eax
1c3b8(6): jnbe 0x9a2(%rip)
1c3be(5): movsxd 0x0(%rbp,%rax,4),%rax
1c3c3(3): add %rbp,%rax
1c3c6(2): jmp %rax
1c3c8(5): mov 0x40(%rsp),%rbx
1c3cd(3): cmp $0x23,%cl
1c3d0(4): mov 0x78(%rdi),%rsi
1c3d4(4): setz %r8b
1c3d8(7): lea 0x5c02(%rip),%rcx
1c3df(7): lea 0x6445(%rip),%rdx
1c3e6(4): movzx %r8b,%r8d
1c3ea(3): mov %rbx,%r9
1c3ed(5): mov 0x10(%rsp),%rdi
1c3f2(5): call 0xffffa2be(%rip)
1c3f7(2): mov (%rbx),%edi
1c3f9(5): mov %rax,0x28(%rsp)
1c3fe(2): test %edi,%edi
1c400(6): jz 0xfffff7fc(%rip)
1c406(3): test %rax,%rax
1c409(6): jnz 0xfffff7f3(%rip)
1c40f(5): jmp 0xfffff751(%rip)
1c414(4): nop 0x0(%rax)
1c418(5): mov 0x40(%rsp),%rbx
1c41d(3): cmp $0x21,%cl
1c420(4): mov 0x78(%rdi),%rsi
1c424(4): setz %r8b
1c428(7): lea 0x36e8(%rip),%rcx
1c42f(7): lea 0x63e9(%rip),%rdx
1c436(4): movzx %r8b,%r8d
1c43a(3): mov %rbx,%r9
1c43d(2): jmp 0xffffffb0(%rip)
1c43f(5): mov 0x18(%rsp),%rax
1c444(5): mov 0x10(%rsp),%rdi
1c449(3): mov (%rax),%rcx
1c44c(5): mov $0x1,%eax
1c451(2): shl/sal %cl,%eax
1c453(2): cwde 
1c455(7): test %rax,0xa8(%rdi)
1c45c(6): jz 0x632(%rip)
1c462(5): mov 0x10(%rsp),%rbx
1c467(5): mov 0x18(%rsp),%r8
1c46c(2): xor %ecx,%ecx
1c46e(2): xor %edx,%edx
1c470(7): or %rax,0xa0(%rbx)
1c477(7): lea 0x80(%rbx),%rsi
1c47e(4): lea 0x70(%rbx),%rdi
1c482(5): call 0xffff6ede(%rip)
1c487(3): test %rax,%rax
1c48a(5): mov %rax,0x28(%rsp)
1c48f(6): jz 0x139(%rip)
1c495(8): add $0x1,0x98(%rbx)
1c49d(7): or $0x2,0xb0(%rbx)
1c4a4(5): jmp 0xfffff758(%rip)
1c4a9(5): mov 0x10(%rsp),%rbx
1c4ae(5): mov 0x18(%rsp),%r8
1c4b3(2): xor %ecx,%ecx
1c4b5(2): xor %edx,%edx
1c4b7(7): lea 0x80(%rbx),%rsi
1c4be(4): lea 0x70(%rbx),%rdi
1c4c2(5): call 0xffff6e9e(%rip)
1c4c7(3): test %rax,%rax
1c4ca(5): mov %rax,0x28(%rsp)
1c4cf(6): jz 0xf9(%rip)
1c4d5(7): cmp $0x1,0xb4(%rbx)
1c4dc(6): jle 0xfffff720(%rip)
1c4e2(7): or $0x2,0xb0(%rbx)
1c4e9(5): jmp 0xfffff713(%rip)
1c4ee(5): mov 0x10(%rsp),%rax
1c4f3(5): mov 0x18(%rsp),%r8
1c4f8(2): xor %ecx,%ecx
1c4fa(2): xor %edx,%edx
1c4fc(4): lea 0x70(%rax),%rbx
1c500(7): lea 0x80(%rax),%rbp
1c507(3): mov %rbx,%rdi
1c50a(3): mov %rbp,%rsi
1c50d(5): call 0xffff6e53(%rip)
1c512(3): test %rax,%rax
1c515(5): mov %rax,0x28(%rsp)
1c51a(6): jz 0xae(%rip)
1c520(5): mov 0x10(%rsp),%rax
1c525(8): lea 0xc0(%rsp),%r12
1c52d(5): mov 0x28(%rsp),%r15
1c532(7): cmp $0x1,0xb4(%rax)
1c539(6): jle 0xfffff6c3(%rip)
1c53f(4): mov 0x48(%r14),%rax
1c543(4): cmp %rax,0x68(%r14)
1c547(6): jle 0x30a(%rip)
1c54d(4): cmp 0x30(%r14),%rax
1c551(6): jz 0x300(%rip)
1c557(4): mov 0x10(%r14),%rdx
1c55b(4): cmp $0xff,0x0(%rdx,%rax,4)
1c55f(6): jnz 0x2f2(%rip)
1c565(5): mov 0x18(%rsp),%r13
1c56a(5): mov 0x20(%rsp),%rdx
1c56f(3): mov %r14,%rsi
1c572(3): mov %r13,%rdi
1c575(5): call 0xffffed2b(%rip)
1c57a(2): cwde 
1c57c(4): add %rax,0x48(%r14)
1c580(3): mov %r13,%r8
1c583(2): xor %ecx,%ecx
1c585(2): xor %edx,%edx
1c587(3): mov %rbp,%rsi
1c58a(3): mov %rbx,%rdi
1c58d(5): call 0xffff6dd3(%rip)
1c592(3): mov %r15,%rdx
1c595(3): mov %rax,%r13
1c598(3): mov %r12,%r8
1c59b(3): mov %rax,%rcx
1c59e(3): mov %rbp,%rsi
1c5a1(3): mov %rbx,%rdi
1c5a4(8): mov $0x10,0xc8(%rsp)
1c5ac(5): call 0xffff6db4(%rip)
1c5b1(3): test %r13,%r13
1c5b4(3): mov %rax,%r15
1c5b7(3): setz %dl
1c5ba(3): test %rax,%rax
1c5bd(3): setz %al
1c5c0(2): or %al,%dl
1c5c2(6): jz 0xffffff7d(%rip)
1c5c8(5): mov 0x40(%rsp),%rax
1c5cd(6): mov $0xc,(%rax)
1c5d3(5): jmp 0xfffff58d(%rip)
1c5d8(9): test $0x20000,0x20(%rsp)
1c5e1(6): jnz 0xfffff5ea(%rip)
1c5e7(5): mov 0x40(%rsp),%rax
1c5ec(9): mov $0x0,0x28(%rsp)
1c5f5(6): mov $0x10,(%rax)
1c5fb(5): jmp 0xfffff575(%rip)
1c600(4): cmp $0x8,%rbx
1c604(2): jbe 0x67(%rip)
1c606(5): mov 0x10(%rsp),%rdi
1c60b(8): lea 0xc0(%rsp),%r8
1c613(2): xor %ecx,%ecx
1c615(3): mov %rax,%rdx
1c618(8): mov $0x11,0xc8(%rsp)
1c620(7): lea 0x80(%rdi),%rsi
1c627(4): add $0x70,%rdi
1c62b(5): call 0xffff6d35(%rip)
1c630(3): test %rax,%rax
1c633(5): mov %rax,0x28(%rsp)
1c638(2): jz 0xffffff90(%rip)
1c63a(4): mov %rbx,0x28(%rax)
1c63e(5): jmp 0xfffff5be(%rip)
1c643(5): mov 0x40(%rsp),%rax
1c648(9): mov $0x0,0x28(%rsp)
1c651(6): mov $0x5,(%rax)
1c657(5): jmp 0xfffff519(%rip)
1c65c(5): mov 0x28(%rsp),%r13
1c661(5): mov %r13,0x30(%rsp)
1c666(5): jmp 0xfffff84e(%rip)
1c66b(5): mov 0x10(%rsp),%rsi
1c670(5): mov $0x1,%edx
1c675(2): mov %ebx,%ecx
1c677(2): shl/sal %cl,%edx
1c679(3): movsxd %edx,%rdx
1c67c(7): or %rdx,0xa8(%rsi)
1c683(2): jmp 0xffffff83(%rip)
1c685(8): mov 0xa8(%rsp),%rsi
1c68d(3): mov %r12,%rdi
1c690(5): call 0xffff97c0(%rip)
1c695(5): mov 0x40(%rsp),%rdx
1c69a(2): test %eax,%eax
1c69c(2): mov %eax,(%rdx)
1c69e(2): jnz 0x3a(%rip)
1c6a0(5): movzx 0x8(%r15),%eax
1c6a5(2): cmp $0x2,%al
1c6a7(6): jz 0x19a(%rip)
1c6ad(2): cmp $0x15,%al
1c6af(6): jz 0x413(%rip)
1c6b5(3): xor %r9d,%r9d
1c6b8(5): jmp 0xfffffc8a(%rip)
1c6bd(8): mov 0xa8(%rsp),%rsi
1c6c5(3): mov %r12,%rdi
1c6c8(5): call 0xffff9788(%rip)
1c6cd(5): mov 0x40(%rsp),%rdx
1c6d2(2): test %eax,%eax
1c6d4(2): mov %eax,(%rdx)
1c6d6(2): jz 0xffffffca(%rip)
1c6d8(3): mov %r12,%rdi
1c6db(5): call 0xfffe6335(%rip)
1c6e0(3): mov %r13,%rdi
1c6e3(5): call 0xffff56dd(%rip)
1c6e8(5): mov 0x40(%rsp),%rax
1c6ed(3): mov (%rax),%r8d
1c6f0(3): test %r8d,%r8d
1c6f3(6): jnz 0xfffff46d(%rip)
1c6f9(9): mov $0x0,0x28(%rsp)
1c702(5): jmp 0xfffff4fa(%rip)
1c707(4): mov 0x28(%r13),%rdx
1c70b(5): cmp 0x30(%rsp),%rdx
1c710(4): mov 0x0(%r13),%rax
1c714(6): jz 0x4fa(%rip)
1c71a(4): lea 0x1(%rdx),%rcx
1c71e(4): mov %rcx,0x28(%r13)
1c722(7): mov 0xa8(%rsp),%ecx
1c729(3): mov %ecx,0x0(%rax,%rdx,4)
1c72c(5): jmp 0xffffff74(%rip)
1c731(8): movzx 0xa8(%rsp),%edx
1c739(5): mov $0x1,%esi
1c73e(3): mov %rdx,%rax
1c741(3): and $0x3f,%edx
1c744(4): shr $0x3,%rax
1c748(2): mov %edx,%ecx
1c74a(3): and $0x18,%eax
1c74d(3): shl/sal %cl,%rsi
1c750(4): or %rsi,0x0(%r12,%rax,1)
1c754(5): jmp 0xffffff4c(%rip)
1c759(4): sub $0x8,%rsp
1c75d(4): mov 0x78(%r14),%rdi
1c761(4): lea 0x18(%r13),%rdx
1c765(4): push 0x28(%rsp)
1c769(8): mov 0xb8(%rsp),%r9
1c771(4): lea 0x48(%r13),%rcx
1c775(5): mov 0x68(%rsp),%r8
1c77a(3): mov %r12,%rsi
1c77d(5): call 0xffff9723(%rip)
1c782(5): mov 0x50(%rsp),%rdx
1c787(2): test %eax,%eax
1c789(2): mov %eax,(%rdx)
1c78b(2): pop %r9
1c78d(2): pop %r10
1c78f(6): jz 0xffffff11(%rip)
1c795(5): jmp 0xffffff43(%rip)
1c79a(5): or $0x1,0x20(%r13)
1c79f(9): test $0x100,0x20(%rsp)
1c7a8(2): jz 0xa(%rip)
1c7aa(8): or $0x400,(%r12)
1c7b2(4): add %rbx,0x48(%r14)
1c7b6(5): mov 0x18(%rsp),%r11
1c7bb(3): mov %r14,%rsi
1c7be(5): mov 0x20(%rsp),%rdx
1c7c3(3): mov %r11,%rdi
1c7c6(5): call 0xffff43ca(%rip)
1c7cb(2): mov %eax,%ebx
1c7cd(5): movzx 0x8(%r11),%eax
1c7d2(2): cmp $0x2,%al
1c7d4(6): jz 0x295(%rip)
1c7da(5): mov $0x1,0x57(%rsp)
1c7df(5): jmp 0xfffffaf7(%rip)
1c7e4(5): mov 0x18(%rsp),%rax
1c7e9(4): mov $0x1,0x8(%rax)
1c7ed(5): jmp 0xfffffaf1(%rip)
1c7f2(7): mov $0x6,(%r15)
1c7f9(3): mov %r15,%r8
1c7fc(2): xor %ecx,%ecx
1c7fe(2): xor %edx,%edx
1c800(3): mov %r12,%rsi
1c803(3): mov %rbx,%rdi
1c806(5): call 0xffff6b5a(%rip)
1c80b(7): mov $0x9,(%r15)
1c812(3): mov %rax,%rbp
1c815(5): jmp 0xfffff9d1(%rip)
1c81a(5): mov 0x18(%rsp),%r8
1c81f(2): xor %ecx,%ecx
1c821(2): xor %edx,%edx
1c823(3): mov %r12,%rsi
1c826(3): mov %rbx,%rdi
1c829(5): call 0xffff6b37(%rip)
1c82e(3): test %rax,%rax
1c831(5): mov %rax,0x28(%rsp)
1c836(6): jnz 0xfffffa0d(%rip)
1c83c(5): jmp 0xfffffd8c(%rip)
1c841(5): mov 0x40(%rsp),%rax
1c846(6): mov $0x7,(%rax)
1c84c(5): jmp 0xfffffe8c(%rip)
1c851(5): mov %r15,0x28(%rsp)
1c856(5): jmp 0xfffff3a6(%rip)
1c85b(5): mov 0x40(%rsp),%rdx
1c860(2): mov %eax,(%rdx)
1c862(5): jmp 0xfffffe76(%rip)
1c867(3): movsxd %ebx,%rax
1c86a(5): mov 0x20(%rsp),%r11
1c86f(4): add %rax,0x48(%r14)
1c873(5): mov 0x60(%rsp),%r10
1c878(3): mov %r11,%rdx
1c87b(3): mov %r10,%rdi
1c87e(5): call 0xffff4312(%rip)
1c883(8): movzx 0xc8(%rsp),%edx
1c88b(3): cmp $0x2,%dl
1c88e(2): jz 0xffffffb3(%rip)
1c890(3): cmp $0x15,%dl
1c893(6): jz 0x214(%rip)
1c899(5): mov 0x68(%rsp),%rdx
1c89e(8): lea 0xb0(%rsp),%rdi
1c8a6(6): mov $0x1,%r9d
1c8ac(3): mov %r11,%r8
1c8af(2): mov %eax,%ecx
1c8b1(b): mov $0x3,0xb0(%rsp)
1c8bc(8): mov %rdx,0xb8(%rsp)
1c8c4(3): mov %r10,%rdx
1c8c7(5): call 0xffffe779(%rip)
1c8cc(2): test %eax,%eax
1c8ce(2): jnz 0xffffff8d(%rip)
1c8d0(5): mov 0x20(%rsp),%rdx
1c8d5(3): mov %r14,%rsi
1c8d8(3): mov %r15,%rdi
1c8db(5): call 0xffff42b5(%rip)
1c8e0(3): movsxd %eax,%rbx
1c8e3(5): mov 0x10(%rsp),%rax
1c8e8(7): mov 0xa0(%rsp),%esi
1c8ef(6): mov $0x0,%r9d
1c8f5(7): cmp $0x1,0xb4(%rax)
1c8fc(3): lea 0xfffffffe(%rsi),%eax
1c8ff(4): cmovnl %r13,%r9
1c903(3): and $0xfd,%eax
1c906(6): jz 0x473(%rip)
1c90c(8): mov 0xb0(%rsp),%r10d
1c914(4): lea 0xfffffffe(%r10),%eax
1c918(3): and $0xfd,%eax
1c91b(6): jz 0x45e(%rip)
1c921(3): cmp $0x3,%esi
1c924(4): setz %r11b
1c928(6): jz 0x495(%rip)
1c92e(4): cmp $0x3,%r10d
1c932(6): jz 0x457(%rip)
1c938(2): test %esi,%esi
1c93a(6): jnz 0x36f(%rip)
1c940(8): movzx 0xa8(%rsp),%edx
1c948(3): test %r10d,%r10d
1c94b(6): jnz 0x342(%rip)
1c951(9): movzx 0xb8(%rsp),%r8d
1c95a(2): test %esi,%esi
1c95c(6): jz 0x2ea(%rip)
1c962(3): test %r11b,%r11b
1c965(6): jnz 0x2e1(%rip)
1c96b(3): test %r9,%r9
1c96e(7): mov 0xa8(%rsp),%edx
1c975(2): jz 0x1f(%rip)
1c977(3): mov %r8d,%edi
1c97a(4): mov %edx,0x78(%rsp)
1c97e(5): mov %r9,0x70(%rsp)
1c983(5): call 0xfffe5efd(%rip)
1c988(5): mov 0x70(%rsp),%r9
1c98d(4): mov 0x78(%rsp),%edx
1c991(3): mov %eax,%r8d
1c994(3): cmp $0xff,%edx
1c997(6): jz 0x416(%rip)
1c99d(4): cmp $0xff,%r8d
1c9a1(6): jz 0x40c(%rip)
1c9a7(9): test $0x10000,0x20(%rsp)
1c9b0(2): jz 0xb(%rip)
1c9b2(3): cmp %edx,%r8d
1c9b5(6): jb 0x3c4(%rip)
1c9bb(3): test %r9,%r9
1c9be(2): jz 0x28(%rip)
1c9c0(4): mov 0x40(%r9),%rax
1c9c4(5): cmp 0x48(%rsp),%rax
1c9c9(4): mov 0x8(%r9),%rcx
1c9cd(6): jz 0x416(%rip)
1c9d3(3): mov %edx,0x0(%rcx,%rax,4)
1c9d6(4): mov 0x10(%r9),%rcx
1c9da(4): lea 0x1(%rax),%rsi
1c9de(4): mov %rsi,0x40(%r9)
1c9e2(4): mov %r8d,0x0(%rcx,%rax,4)
1c9e6(2): xor %eax,%eax
1c9e8(5): mov $0x1,%edi
1c9ed(2): cmp %eax,%edx
1c9ef(2): mov %eax,%ecx
1c9f1(2): jnbe 0x18(%rip)
1c9f3(3): cmp %eax,%r8d
1c9f6(2): jb 0x13(%rip)
1c9f8(3): mov %rax,%rsi
1c9fb(3): mov %rdi,%r11
1c9fe(4): sar $0x6,%rsi
1ca02(3): shl/sal %cl,%r11
1ca05(4): or %r11,0x0(%r12,%rsi,8)
1ca09(4): add $0x1,%rax
1ca0d(6): cmp $0x100,%rax
1ca13(2): jnz 0xffffffda(%rip)
1ca15(5): mov 0x40(%rsp),%rax
1ca1a(6): mov $0x0,(%rax)
1ca20(5): jmp 0xfffffc80(%rip)
1ca25(5): mov 0x18(%rsp),%rbx
1ca2a(3): mov %rax,%rdx
1ca2d(3): mov %r14,%rsi
1ca30(4): mov %r8,(%rsp)
1ca34(3): mov %rax,%r15
1ca37(3): mov %rbx,%rdi
1ca3a(5): call 0xffffe866(%rip)
1ca3f(2): cwde 
1ca41(4): add %rax,0x48(%r14)
1ca45(5): mov 0x40(%rsp),%r9
1ca4a(4): mov (%rsp),%r8
1ca4e(3): mov %r15,%rcx
1ca51(3): mov %rbx,%rdx
1ca54(3): mov %rbp,%rsi
1ca57(3): mov %r14,%rdi
1ca5a(5): call 0xfffff006(%rip)
1ca5f(5): mov %rax,0x28(%rsp)
1ca64(5): jmp 0xfffff10c(%rip)
1ca69(5): mov 0x40(%rsp),%rax
1ca6e(6): mov $0x2,(%rax)
1ca74(5): jmp 0xfffffc64(%rip)
1ca79(3): mov %r12,%rdi
1ca7c(5): call 0xfffe5f94(%rip)
1ca81(3): mov %r13,%rdi
1ca84(5): call 0xfffe5f8c(%rip)
1ca89(5): jmp 0xfffffb3f(%rip)
1ca8e(5): mov 0x40(%rsp),%rax
1ca93(9): mov $0x0,0x28(%rsp)
1ca9c(6): mov $0x6,(%rax)
1caa2(5): jmp 0xfffff0ce(%rip)
1caa7(2): mov %ebx,%eax
1caa9(2): neg %eax
1caab(2): cwde 
1caad(4): add %rax,0x48(%r14)
1cab1(5): mov $0x1,0x8(%r15)
1cab6(7): mov 0xa0(%rsp),%eax
1cabd(5): jmp 0xfffff8f8(%rip)
1cac2(4): add %rbx,0x48(%r14)
1cac6(5): cmp $0x0,0x57(%rsp)
1cacb(2): jz 0x16(%rip)
1cacd(5): lea 0x20(%r12),%rdx
1cad2(3): mov %r12,%rax
1cad5(3): not (%rax)
1cad8(4): add $0x8,%rax
1cadc(3): cmp %rax,%rdx
1cadf(2): jnz 0xfffffff6(%rip)
1cae1(5): mov 0x10(%rsp),%rax
1cae6(6): mov 0xb4(%rax),%edx
1caec(3): cmp $0x1,%edx
1caef(2): jle 0x1a(%rip)
1caf1(4): mov 0x78(%rax),%rcx
1caf5(2): xor %eax,%eax
1caf7(4): mov 0x0(%rcx,%rax,1),%rsi
1cafb(4): and %rsi,0x0(%r12,%rax,1)
1caff(4): add $0x8,%rax
1cb03(4): cmp $0x20,%rax
1cb07(2): jnz 0xfffffff0(%rip)
1cb09(5): cmp $0x0,0x28(%r13)
1cb0e(6): jnz 0x8a(%rip)
1cb14(5): cmp $0x0,0x30(%r13)
1cb19(2): jnz 0x7f(%rip)
1cb1b(5): cmp $0x0,0x38(%r13)
1cb20(2): jnz 0x78(%rip)
1cb22(5): cmp $0x0,0x40(%r13)
1cb27(2): jnz 0x71(%rip)
1cb29(3): sub $0x1,%edx
1cb2c(2): jle 0x10(%rip)
1cb2e(5): cmp $0x0,0x48(%r13)
1cb33(2): jnz 0x65(%rip)
1cb35(5): test $0x1,0x20(%r13)
1cb3a(2): jnz 0x5e(%rip)
1cb3c(3): mov %r13,%rdi
1cb3f(5): call 0xffff5281(%rip)
1cb44(5): mov 0x10(%rsp),%rax
1cb49(8): lea 0xb0(%rsp),%r8
1cb51(2): xor %ecx,%ecx
1cb53(2): xor %edx,%edx
1cb55(8): mov $0x3,0xb8(%rsp)
1cb5d(8): mov %r12,0xb0(%rsp)
1cb65(7): lea 0x80(%rax),%rsi
1cb6c(4): lea 0x70(%rax),%rdi
1cb70(5): call 0xffff67f0(%rip)
1cb75(3): test %rax,%rax
1cb78(5): mov %rax,0x28(%rsp)
1cb7d(6): jnz 0xfffff07f(%rip)
1cb83(5): mov 0x40(%rsp),%rax
1cb88(6): mov $0xc,(%rax)
1cb8e(5): jmp 0xfffffb4a(%rip)
1cb93(5): nop 0x0(%rax,%rax,1)
1cb98(5): mov 0x10(%rsp),%rax
1cb9d(8): lea 0xb0(%rsp),%r15
1cba5(2): xor %edx,%edx
1cba7(2): xor %ecx,%ecx
1cba9(3): mov %r15,%r8
1cbac(7): or $0x2,0xb0(%rax)
1cbb3(4): lea 0x70(%rax),%rbx
1cbb7(7): lea 0x80(%rax),%rbp
1cbbe(8): mov $0x6,0xb8(%rsp)
1cbc6(8): mov %r13,0xb0(%rsp)
1cbce(3): mov %rbx,%rdi
1cbd1(3): mov %rbp,%rsi
1cbd4(5): call 0xffff678c(%rip)
1cbd9(3): mov %rax,%rdi
1cbdc(5): mov %rax,0x28(%rsp)
1cbe1(5): lea 0x20(%r12),%rdx
1cbe6(3): test %rdi,%rdi
1cbe9(3): mov %r12,%rax
1cbec(2): jz 0xffffff97(%rip)
1cbee(4): cmp $0x0,(%rax)
1cbf2(6): jnz 0x2ab(%rip)
1cbf8(4): add $0x8,%rax
1cbfc(3): cmp %rax,%rdx
1cbff(2): jnz 0xffffffef(%rip)
1cc01(3): mov %r12,%rdi
1cc04(5): call 0xfffe5e0c(%rip)
1cc09(5): jmp 0xffffeff3(%rip)
1cc0e(5): mov 0x30(%rsp),%rdx
1cc13(5): lea 0x1(%rdx,%rdx,1),%rdi
1cc18(8): lea 0x0(,%rdi,4),%rsi
1cc20(5): mov %rdi,0x30(%rsp)
1cc25(3): mov %rax,%rdi
1cc28(5): call 0xfffe5c08(%rip)
1cc2d(3): test %rax,%rax
1cc30(6): jz 0xffffff53(%rip)
1cc36(4): mov %rax,0x0(%r13)
1cc3a(4): mov 0x28(%r13),%rdx
1cc3e(5): jmp 0xfffffadc(%rip)
1cc43(3): xor %r8d,%r8d
1cc46(3): test %r9,%r9
1cc49(2): jz 0x7b(%rip)
1cc4b(2): mov %edx,%edi
1cc4d(5): mov %r8d,0x78(%rsp)
1cc52(5): mov %r9,0x70(%rsp)
1cc57(5): call 0xfffe5c29(%rip)
1cc5c(2): mov %eax,%edx
1cc5e(7): mov 0xb0(%rsp),%eax
1cc65(5): mov 0x70(%rsp),%r9
1cc6a(5): mov 0x78(%rsp),%r8d
1cc6f(3): cmp $0x3,%eax
1cc72(6): jz 0xfffffd05(%rip)
1cc78(2): test %eax,%eax
1cc7a(6): jz 0xfffffcfd(%rip)
1cc80(8): mov 0xb8(%rsp),%r8d
1cc88(5): jmp 0xfffffd0c(%rip)
1cc8d(4): cmp $0x3,%r10d
1cc91(6): jz 0x291(%rip)
1cc97(2): test %esi,%esi
1cc99(2): jz 0xffffffaa(%rip)
1cc9b(3): test %r11b,%r11b
1cc9e(2): jnz 0xffffffa5(%rip)
1cca0(7): mov 0xa8(%rsp),%edx
1cca7(2): jmp 0xffffffd9(%rip)
1cca9(2): xor %edx,%edx
1ccab(3): cmp $0x3,%esi
1ccae(6): jnz 0xfffffc9a(%rip)
1ccb4(8): mov 0xa8(%rsp),%rax
1ccbc(3): movzx (%rax),%edx
1ccbf(5): jmp 0xfffffc89(%rip)
1ccc4(3): test %r10d,%r10d
1ccc7(6): jz 0xfffffce0(%rip)
1cccd(4): cmp $0x3,%r10d
1ccd1(2): jnz 0xffffffaf(%rip)
1ccd3(5): jmp 0xfffffcd4(%rip)
1ccd8(5): mov $0x80,%ebx
1ccdd(6): mov $0x2,%r12d
1cce3(5): call 0xfffe5d0d(%rip)
1cce8(3): movsxd %ebx,%rdx
1cceb(3): movsxd %r12d,%r9
1ccee(6): mov $0x1,%r8d
1ccf4(3): add %rdx,%rdx
1ccf7(3): add (%rax),%rdx
1ccfa(5): mov 0x10(%rsp),%rax
1ccff(4): lea 0x0(%rax,%r9,8),%rdi
1cd03(2): xor %eax,%eax
1cd05(2): jmp 0x1d(%rip)
1cd07(9): nop 0x0(%rax,%rax,1)
1cd10(3): lea 0x0(%rbx,%rax,1),%esi
1cd13(3): cmp $0x5f,%esi
1cd16(2): jz 0x14(%rip)
1cd18(4): add $0x1,%rax
1cd1c(4): cmp $0x40,%rax
1cd20(2): jz 0x19(%rip)
1cd22(4): test $0x8,0x0(%rdx,%rax,2)
1cd26(2): mov %eax,%ecx
1cd28(2): jz 0xffffffe8(%rip)
1cd2a(3): mov %r8,%rsi
1cd2d(3): shl/sal %cl,%rsi
1cd30(7): or %rsi,0xb8(%rdi)
1cd37(2): jmp 0xffffffe1(%rip)
1cd39(4): add $0x1,%r9
1cd3d(3): add $0x40,%ebx
1cd40(4): sub $0xffffff80,%rdx
1cd44(4): add $0x8,%rdi
1cd48(4): cmp $0x3,%r9d
1cd4c(2): jle 0xffffffb7(%rip)
1cd4e(5): jmp 0xfffff443(%rip)
1cd53(2): xor %ebx,%ebx
1cd55(3): xor %r12d,%r12d
1cd58(2): jmp 0xffffff8b(%rip)
1cd5a(7): lea 0x602f(%rip),%rcx
1cd61(7): lea 0x5a58(%rip),%rsi
1cd68(7): lea 0x4797(%rip),%rdi
1cd6f(5): mov $0xced,%edx
1cd74(5): call 0xfffe588c(%rip)
1cd79(5): mov 0x40(%rsp),%rax
1cd7e(6): mov $0xb,(%rax)
1cd84(5): jmp 0xfffff954(%rip)
1cd89(8): mov 0xb8(%rsp),%rdi
1cd91(2): xor %eax,%eax
1cd93(4): or $0xffffffff,%rcx
1cd97(2): REPNZ scasb rdi(%es,10),%al
1cd99(3): mov %rcx,%rax
1cd9c(3): not %rax
1cd9f(4): sub $0x1,%rax
1cda3(4): cmp $0x1,%rax
1cda7(6): jbe 0xfffffb91(%rip)
1cdad(5): mov 0x40(%rsp),%rax
1cdb2(6): mov $0x3,(%rax)
1cdb8(5): jmp 0xfffff920(%rip)
1cdbd(8): mov 0xa8(%rsp),%rdi
1cdc5(2): xor %eax,%eax
1cdc7(4): or $0xffffffff,%rcx
1cdcb(2): REPNZ scasb rdi(%es,10),%al
1cdcd(3): mov %rcx,%rax
1cdd0(3): not %rax
1cdd3(4): sub $0x1,%rax
1cdd7(4): cmp $0x1,%rax
1cddb(6): jbe 0xfffffb53(%rip)
1cde1(2): jmp 0xffffffcc(%rip)
1cde3(5): mov 0x48(%rsp),%rax
1cde8(3): mov %rcx,%rdi
1cdeb(8): mov %r8d,0x8c(%rsp)
1cdf3(7): mov %edx,0x88(%rsp)
1cdfa(5): mov %r9,0x70(%rsp)
1cdff(3): add %rax,%rax
1ce02(4): add $0x1,%rax
1ce06(8): lea 0x0(,%rax,4),%r10
1ce0e(5): mov %rax,0x48(%rsp)
1ce13(3): mov %r10,%rsi
1ce16(8): mov %r10,0x80(%rsp)
1ce1e(5): call 0xfffe5a12(%rip)
1ce23(5): mov 0x70(%rsp),%r9
1ce28(8): mov 0x80(%rsp),%r10
1ce30(5): mov %rax,0x78(%rsp)
1ce35(4): mov 0x10(%r9),%rdi
1ce39(3): mov %r10,%rsi
1ce3c(5): call 0xfffe59f4(%rip)
1ce41(5): mov 0x78(%rsp),%rcx
1ce46(3): test %rcx,%rcx
1ce49(2): jz 0x2c(%rip)
1ce4b(3): test %rax,%rax
1ce4e(5): mov 0x70(%rsp),%r9
1ce53(7): mov 0x88(%rsp),%edx
1ce5a(8): mov 0x8c(%rsp),%r8d
1ce62(2): jz 0x13(%rip)
1ce64(4): mov %rax,0x10(%r9)
1ce68(4): mov %rcx,0x8(%r9)
1ce6c(4): mov 0x40(%r9),%rax
1ce70(5): jmp 0xfffffb63(%rip)
1ce75(3): mov %rcx,%rdi
1ce78(4): mov %rax,(%rsp)
1ce7c(5): call 0xfffe5b94(%rip)
1ce81(4): mov (%rsp),%rax
1ce85(3): mov %rax,%rdi
1ce88(5): call 0xfffe5b88(%rip)
1ce8d(5): mov 0x40(%rsp),%rax
1ce92(6): mov $0xc,(%rax)
1ce98(5): jmp 0xfffff840(%rip)
1ce9d(2): xor %ecx,%ecx
1ce9f(2): xor %edx,%edx
1cea1(3): mov %r15,%r8
1cea4(3): mov %rbp,%rsi
1cea7(3): mov %rbx,%rdi
1ceaa(8): mov $0x3,0xb8(%rsp)
1ceb2(8): mov %r12,0xb0(%rsp)
1ceba(5): call 0xffff64a6(%rip)
1cebf(3): test %rax,%rax
1cec2(6): jz 0xfffffcc1(%rip)
1cec8(5): mov 0x28(%rsp),%rcx
1cecd(8): lea 0xc0(%rsp),%r8
1ced5(3): mov %rax,%rdx
1ced8(3): mov %rbp,%rsi
1cedb(3): mov %rbx,%rdi
1cede(8): mov $0xa,0xc8(%rsp)
1cee6(5): call 0xffff647a(%rip)
1ceeb(3): test %rax,%rax
1ceee(5): mov %rax,0x28(%rsp)
1cef3(6): jnz 0xffffed09(%rip)
1cef9(5): jmp 0xfffffc8a(%rip)
1cefe(5): call 0xfffe5662(%rip)
1cf03(5): mov 0x18(%rsp),%rax
1cf08(4): cmp $0x2,0x8(%rax)
1cf0c(6): jnz 0xfffff1f4(%rip)
1cf12(5): mov 0x40(%rsp),%rax
1cf17(6): mov $0x9,(%rax)
1cf1d(5): jmp 0xfffff1ee(%rip)
1cf22(8): mov 0xb8(%rsp),%rax
1cf2a(4): movzx (%rax),%r8d
1cf2e(5): jmp 0xfffffa2c(%rip)

"parse_branch" :
1cf40(2): push %r15
1cf42(2): push %r14
1cf44(3): mov %rcx,%r15
1cf47(2): push %r13
1cf49(2): push %r12
1cf4b(3): mov %rsi,%r13
1cf4e(1): push %rbp
1cf4f(1): push %rbx
1cf50(3): mov %r9,%rbx
1cf53(3): mov %rdx,%rbp
1cf56(3): mov %r8,%r12
1cf59(4): sub $0x48,%rsp
1cf5d(9): mov $0x28,%rax
1cf66(5): mov %rax,0x38(%rsp)
1cf6b(2): xor %eax,%eax
1cf6d(3): mov (%rsi),%rax
1cf70(4): mov %rdi,(%rsp)
1cf74(5): mov %rax,0x10(%rsp)
1cf79(5): call 0xffffeae7(%rip)
1cf7e(2): mov (%rbx),%edx
1cf80(3): mov %rax,%r14
1cf83(2): test %edx,%edx
1cf85(2): jz 0xb(%rip)
1cf87(3): test %rax,%rax
1cf8a(6): jz 0x100(%rip)
1cf90(5): lea 0x20(%rsp),%rax
1cf95(5): mov %rax,0x18(%rsp)
1cf9a(6): nop 0x0(%rax,%rax,1)
1cfa0(4): movzx 0x8(%rbp),%eax
1cfa4(2): mov %eax,%edx
1cfa6(3): and $0xf7,%edx
1cfa9(3): cmp $0x2,%dl
1cfac(6): jz 0x94(%rip)
1cfb2(2): cmp $0x9,%al
1cfb4(2): jnz 0xb(%rip)
1cfb6(3): test %r12,%r12
1cfb9(6): jnz 0x87(%rip)
1cfbf(4): mov (%rsp),%rdi
1cfc3(3): mov %rbx,%r9
1cfc6(3): mov %r12,%r8
1cfc9(3): mov %r15,%rcx
1cfcc(3): mov %rbp,%rdx
1cfcf(3): mov %r13,%rsi
1cfd2(5): call 0xffffea8e(%rip)
1cfd7(3): mov %rax,%r9
1cfda(2): mov (%rbx),%eax
1cfdc(2): test %eax,%eax
1cfde(2): jz 0xb(%rip)
1cfe0(3): test %r9,%r9
1cfe3(6): jz 0x91(%rip)
1cfe9(3): test %r14,%r14
1cfec(2): jz 0x7c(%rip)
1cfee(3): test %r9,%r9
1cff1(2): jz 0x77(%rip)
1cff3(5): mov 0x10(%rsp),%rax
1cff8(5): mov 0x18(%rsp),%r8
1cffd(3): mov %r9,%rcx
1d000(3): mov %r14,%rdx
1d003(5): mov %r9,0x8(%rsp)
1d008(5): mov $0x10,0x28(%rsp)
1d00d(7): lea 0x80(%rax),%rsi
1d014(4): lea 0x70(%rax),%rdi
1d018(5): call 0xffff6348(%rip)
1d01d(3): test %rax,%rax
1d020(5): mov 0x8(%rsp),%r9
1d025(2): jz 0x6b(%rip)
1d027(3): mov %rax,%r14
1d02a(4): movzx 0x8(%rbp),%eax
1d02e(2): mov %eax,%edx
1d030(3): and $0xf7,%edx
1d033(3): cmp $0x2,%dl
1d036(6): jnz 0xffffff7c(%rip)
1d03c(4): nop 0x0(%rax)
1d040(5): mov 0x38(%rsp),%rcx
1d045(9): xor $0x28,%rcx
1d04e(3): mov %r14,%rax
1d051(2): jnz 0x6c(%rip)
1d053(4): add $0x48,%rsp
1d057(1): pop %rbx
1d058(1): pop %rbp
1d059(2): pop %r12
1d05b(2): pop %r13
1d05d(2): pop %r14
1d05f(2): pop %r15
1d061(1): ret near (%rsp)
1d062(6): nop 0x0(%rax,%rax,1)
1d068(3): test %r14,%r14
1d06b(4): cmove %r9,%r14
1d06f(5): jmp 0xffffff31(%rip)
1d074(3): test %r14,%r14
1d077(2): jz 0x13(%rip)
1d079(7): lea 0xffff4da0(%rip),%rsi
1d080(2): xor %edx,%edx
1d082(3): mov %r14,%rdi
1d085(5): call 0xffff3efb(%rip)
1d08a(3): xor %r14d,%r14d
1d08d(2): jmp 0xffffffb3(%rip)
1d08f(1): nop 
1d090(7): lea 0xffff4d89(%rip),%rsi
1d097(3): mov %r9,%rdi
1d09a(2): xor %edx,%edx
1d09c(5): call 0xffff3ee4(%rip)
1d0a1(7): lea 0xffff4d78(%rip),%rsi
1d0a8(3): mov %r14,%rdi
1d0ab(2): xor %edx,%edx
1d0ad(3): xor %r14d,%r14d
1d0b0(5): call 0xffff3ed0(%rip)
1d0b5(6): mov $0xc,(%rbx)
1d0bb(2): jmp 0xffffff85(%rip)
1d0bd(5): call 0xfffe54a3(%rip)

"parse_reg_exp" :
1d0d0(2): push %r15
1d0d2(2): push %r14
1d0d4(3): mov %rcx,%r14
1d0d7(2): push %r13
1d0d9(2): push %r12
1d0db(3): mov %r9,%r13
1d0de(1): push %rbp
1d0df(1): push %rbx
1d0e0(3): mov %rdx,%rbp
1d0e3(3): mov %rdi,%r12
1d0e6(4): sub $0x58,%rsp
1d0ea(3): mov (%rsi),%rbx
1d0ed(9): mov $0x28,%rax
1d0f6(5): mov %rax,0x48(%rsp)
1d0fb(2): xor %eax,%eax
1d0fd(5): mov %rsi,0x28(%rsp)
1d102(5): mov %r8,0x10(%rsp)
1d107(7): mov 0xa8(%rbx),%rax
1d10e(5): mov %rax,0x20(%rsp)
1d113(5): call 0xfffffe2d(%rip)
1d118(4): mov 0x0(%r13),%edx
1d11c(3): mov %rax,%r15
1d11f(2): test %edx,%edx
1d121(2): jz 0xb(%rip)
1d123(3): test %rax,%rax
1d126(6): jz 0xec(%rip)
1d12c(5): lea 0x30(%rsp),%rax
1d131(5): mov %rax,0x8(%rsp)
1d136(5): jmp 0x8e(%rip)
1d13b(5): nop 0x0(%rax,%rax,1)
1d140(2): cmp $0x9,%al
1d142(2): jnz 0xe(%rip)
1d144(6): cmp $0x0,0x10(%rsp)
1d14a(6): jnz 0xae(%rip)
1d150(7): mov 0xa8(%rbx),%rax
1d157(5): mov 0x10(%rsp),%r8
1d15c(3): mov %r14,%rcx
1d15f(5): mov 0x28(%rsp),%rsi
1d164(3): mov %r13,%r9
1d167(3): mov %rbp,%rdx
1d16a(3): mov %r12,%rdi
1d16d(5): mov %rax,0x18(%rsp)
1d172(5): mov 0x20(%rsp),%rax
1d177(7): mov %rax,0xa8(%rbx)
1d17e(5): call 0xfffffdc2(%rip)
1d183(3): mov %rax,%rcx
1d186(4): mov 0x0(%r13),%eax
1d18a(2): test %eax,%eax
1d18c(2): jz 0x7(%rip)
1d18e(3): test %rcx,%rcx
1d191(2): jz 0x6b(%rip)
1d193(5): mov 0x18(%rsp),%rax
1d198(7): or %rax,0xa8(%rbx)
1d19f(5): mov 0x8(%rsp),%r8
1d1a4(7): lea 0x80(%rbx),%rsi
1d1ab(4): lea 0x70(%rbx),%rdi
1d1af(3): mov %r15,%rdx
1d1b2(5): mov $0xa,0x38(%rsp)
1d1b7(5): call 0xffff61a9(%rip)
1d1bc(3): test %rax,%rax
1d1bf(3): mov %rax,%r15
1d1c2(2): jz 0x7e(%rip)
1d1c4(4): cmp $0xa,0x8(%rbp)
1d1c8(2): jnz 0x50(%rip)
1d1ca(3): mov %r14,%rdx
1d1cd(3): mov %r12,%rsi
1d1d0(3): mov %rbp,%rdi
1d1d3(7): or $0x800000,%rdx
1d1da(5): call 0xffffe0c6(%rip)
1d1df(2): cwde 
1d1e1(5): add %rax,0x48(%r12)
1d1e6(4): movzx 0x8(%rbp),%eax
1d1ea(2): mov %eax,%edx
1d1ec(3): and $0xf7,%edx
1d1ef(3): cmp $0x2,%dl
1d1f2(6): jnz 0xffffff4e(%rip)
1d1f8(2): xor %ecx,%ecx
1d1fa(2): jmp 0xffffffa5(%rip)
1d1fc(3): test %r15,%r15
1d1ff(2): jz 0x13(%rip)
1d201(7): lea 0xffff4c18(%rip),%rsi
1d208(2): xor %edx,%edx
1d20a(3): mov %r15,%rdi
1d20d(5): call 0xffff3d73(%rip)
1d212(3): xor %r15d,%r15d
1d215(3): nop (%rax)
1d218(5): mov 0x48(%rsp),%rcx
1d21d(9): xor $0x28,%rcx
1d226(3): mov %r15,%rax
1d229(2): jnz 0x21(%rip)
1d22b(4): add $0x58,%rsp
1d22f(1): pop %rbx
1d230(1): pop %rbp
1d231(2): pop %r12
1d233(2): pop %r13
1d235(2): pop %r14
1d237(2): pop %r15
1d239(1): ret near (%rsp)
1d23a(6): nop 0x0(%rax,%rax,1)
1d240(8): mov $0xc,0x0(%r13)
1d248(2): jmp 0xffffffd0(%rip)
1d24a(5): call 0xfffe5316(%rip)

"re_compile_internal" :
1d250(2): push %r15
1d252(2): push %r14
1d254(2): push %r13
1d256(2): push %r12
1d258(1): push %rbp
1d259(1): push %rbx
1d25a(7): sub $0x128,%rsp
1d261(4): mov %rcx,0x18(%rdi)
1d265(8): mov $0x0,0x10(%rdi)
1d26d(9): mov $0x28,%rax
1d276(8): mov %rax,0x118(%rsp)
1d27e(2): xor %eax,%eax
1d280(4): movzx 0x38(%rdi),%eax
1d284(5): mov %rdi,0x8(%rsp)
1d289(5): mov %rsi,0x10(%rsp)
1d28e(4): mov %rdx,(%rsp)
1d292(5): mov %rcx,0x18(%rsp)
1d297(8): mov $0x0,0x4c(%rsp)
1d29f(8): mov $0x0,0x30(%rdi)
1d2a7(3): mov (%rdi),%rbx
1d2aa(4): mov %al,0x20(%rsp)
1d2ae(3): and $0x90,%eax
1d2b1(8): cmp $0xe7,0x8(%rdi)
1d2b9(3): mov %al,0x38(%rdi)
1d2bc(6): jbe 0xdfa(%rip)
1d2c2(4): lea 0x8(%rbx),%rdi
1d2c6(5): mov 0x8(%rsp),%rax
1d2cb(3): mov %rbx,%rcx
1d2ce(4): and $0xfffffff8,%rdi
1d2d2(3): sub %rdi,%rcx
1d2d5(8): mov $0xe8,0x10(%rax)
1d2dd(2): xor %eax,%eax
1d2df(6): add $0xe8,%ecx
1d2e5(7): mov $0x0,(%rbx)
1d2ec(b): mov $0x0,0xe0(%rbx)
1d2f7(3): shr $0x3,%ecx
1d2fa(3): REP stosd %rax,rdi(%es,10)
1d2fd(a): mov $0x384307168202282324,%rax
1d307(a): mov $0xf,0x80(%rbx)
1d311(4): cmp %rax,(%rsp)
1d315(6): jnbe 0x641(%rip)
1d31b(4): mov (%rsp),%r14
1d31f(4): lea 0x1(%r14),%rax
1d323(3): mov %rax,%rdi
1d326(4): mov %rax,0x8(%rbx)
1d32a(5): mov %rax,0x28(%rsp)
1d32f(4): shl/sal $0x4,%rdi
1d333(5): call 0xfffe544d(%rip)
1d338(3): test %r14,%r14
1d33b(3): mov %rax,(%rbx)
1d33e(6): jz 0xce7(%rip)
1d344(5): mov $0x1,%esi
1d349(7): nop 0x0(%rax)
1d350(3): add %rsi,%rsi
1d353(4): cmp %rsi,(%rsp)
1d357(2): jnb 0xfffffff9(%rip)
1d359(4): lea 0xffffffff(%rsi),%rbp
1d35d(5): mov $0x18,%edi
1d362(5): call 0xfffe534e(%rip)
1d367(7): mov %rbp,0x88(%rbx)
1d36e(4): mov %rax,0x40(%rbx)
1d372(5): call 0xfffe51ae(%rip)
1d377(5): mov $0xe,%edi
1d37c(6): mov %eax,0xb4(%rbx)
1d382(5): call 0xfffe544e(%rip)
1d387(3): movzx (%rax),%edx
1d38a(3): and $0xdf,%edx
1d38d(3): cmp $0x55,%dl
1d390(2): jnz 0x50(%rip)
1d392(4): movzx 0x1(%rax),%edx
1d396(3): and $0xdf,%edx
1d399(3): cmp $0x54,%dl
1d39c(2): jnz 0x44(%rip)
1d39e(4): movzx 0x2(%rax),%edx
1d3a2(3): and $0xdf,%edx
1d3a5(3): cmp $0x46,%dl
1d3a8(2): jnz 0x38(%rip)
1d3aa(2): xor %edx,%edx
1d3ac(4): cmp $0x2d,0x3(%rax)
1d3b0(7): lea 0x54ab(%rip),%rdi
1d3b7(5): mov $0x2,%ecx
1d3bc(3): setz %dl
1d3bf(5): lea 0x3(%rax,%rdx,1),%rsi
1d3c4(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1d3c6(3): setnbe %al
1d3c9(2): sbb $0x0,%al
1d3cb(2): test %al,%al
1d3cd(2): jnz 0x13(%rip)
1d3cf(7): or $0x4,0xb0(%rbx)
1d3d6(a): nop 0x0(%rax,%rax,1)
1d3e0(7): movzx 0xb0(%rbx),%eax
1d3e7(2): mov %eax,%edx
1d3e9(3): and $0xf7,%edx
1d3ec(7): cmp $0x1,0xb4(%rbx)
1d3f3(6): mov %dl,0xb0(%rbx)
1d3f9(2): jle 0x15(%rip)
1d3fb(2): test $0x4,%al
1d3fd(6): jz 0x566(%rip)
1d403(7): lea 0x59b6(%rip),%rax
1d40a(4): mov %rax,0x78(%rbx)
1d40e(4): cmp $0x0,(%rbx)
1d412(6): jz 0x544(%rip)
1d418(5): cmp $0x0,0x40(%rbx)
1d41d(6): jz 0x539(%rip)
1d423(5): mov 0x18(%rsp),%rax
1d428(8): lea 0x80(%rsp),%rbp
1d430(5): mov $0x12,%ecx
1d435(8): mov $0x0,0x4c(%rsp)
1d43d(4): lea 0x8(%rbp),%r8
1d441(5): and $0x400000,%eax
1d446(5): mov %rax,0x20(%rsp)
1d44b(5): mov 0x8(%rsp),%rax
1d450(3): setnz %dl
1d453(3): mov %r8,%rdi
1d456(4): mov 0x28(%rax),%rsi
1d45a(2): xor %eax,%eax
1d45c(3): REP stosd %rax,rdi(%es,10)
1d45f(5): mov 0x10(%rsp),%rax
1d464(4): mov (%rsp),%rdi
1d468(3): test %rsi,%rsi
1d46b(7): mov %dl,0x108(%rsp)
1d472(6): mov 0xb4(%rbx),%ecx
1d478(4): setnz %r12b
1d47c(8): mov %rsi,0xf8(%rsp)
1d484(8): mov %rax,0x80(%rsp)
1d48c(7): movzx 0xb0(%rbx),%eax
1d493(3): or %edx,%r12d
1d496(8): mov %rdi,0xd8(%rsp)
1d49e(8): mov %rdi,0xd0(%rsp)
1d4a6(3): mov %r12d,%esi
1d4a9(8): mov %r12b,0x10b(%rsp)
1d4b1(7): mov %ecx,0x110(%rsp)
1d4b8(8): mov %rdi,0xe8(%rsp)
1d4c0(8): mov %rdi,0xe0(%rsp)
1d4c8(2): mov %eax,%edx
1d4ca(3): shr $0x3,%al
1d4cd(3): shr $0x2,%dl
1d4d0(3): and $0x1,%eax
1d4d3(3): and $0x1,%edx
1d4d6(3): test %rdi,%rdi
1d4d9(7): mov %al,0x10a(%rsp)
1d4e0(7): mov %dl,0x109(%rsp)
1d4e7(6): jnz 0x43e(%rip)
1d4ed(3): test %sil,%sil
1d4f0(2): jz 0xf(%rip)
1d4f2(8): mov 0x88(%rsp),%rax
1d4fa(5): mov %rax,0x10(%rsp)
1d4ff(6): cmp $0x0,0x20(%rsp)
1d505(5): mov 0x10(%rsp),%rax
1d50a(8): mov %rax,0x88(%rsp)
1d512(6): jz 0x103(%rip)
1d518(3): cmp $0x1,%ecx
1d51b(6): jle 0xbf2(%rip)
1d521(3): mov %rbp,%rdi
1d524(5): call 0xffff409c(%rip)
1d529(2): test %eax,%eax
1d52b(2): jnz 0x45(%rip)
1d52d(4): mov (%rsp),%rax
1d531(8): cmp 0xb8(%rsp),%rax
1d539(6): jle 0xbb7(%rip)
1d53f(7): movsxd 0xb4(%rbx),%rax
1d546(8): mov 0xc0(%rsp),%rsi
1d54e(8): add 0xb0(%rsp),%rax
1d556(3): cmp %rax,%rsi
1d559(6): jnle 0xb97(%rip)
1d55f(3): add %rsi,%rsi
1d562(3): mov %rbp,%rdi
1d565(5): call 0xffff3aeb(%rip)
1d56a(2): test %eax,%eax
1d56c(2): jz 0xffffffb5(%rip)
1d56e(2): nop 
1d570(4): mov %eax,0x4c(%rsp)
1d574(5): mov 0x8(%rsp),%rax
1d579(3): mov (%rax),%r13
1d57c(4): mov 0x70(%r13),%rdi
1d580(3): test %rdi,%rdi
1d583(2): jz 0x15(%rip)
1d585(3): nop (%rax)
1d588(3): mov (%rdi),%r12
1d58b(5): call 0xfffe5485(%rip)
1d590(3): test %r12,%r12
1d593(3): mov %r12,%rdi
1d596(2): jnz 0xfffffff2(%rip)
1d598(4): mov 0x20(%r13),%rdi
1d59c(8): mov $0x0,0x70(%r13)
1d5a4(b): mov $0xf,0x80(%r13)
1d5af(8): mov $0x0,0x68(%r13)
1d5b7(5): call 0xfffe5459(%rip)
1d5bc(8): mov $0x0,0x20(%r13)
1d5c4(3): mov %rbp,%rdi
1d5c7(5): call 0xffff4dc9(%rip)
1d5cc(3): mov %rbx,%rdi
1d5cf(5): call 0xffff4e01(%rip)
1d5d4(5): mov 0x8(%rsp),%rax
1d5d9(7): mov $0x0,(%rax)
1d5e0(8): mov $0x0,0x8(%rax)
1d5e8(4): mov 0x4c(%rsp),%eax
1d5ec(8): mov 0x118(%rsp),%rbx
1d5f4(9): xor $0x28,%rbx
1d5fd(6): jnz 0xd43(%rip)
1d603(7): add $0x128,%rsp
1d60a(1): pop %rbx
1d60b(1): pop %rbp
1d60c(2): pop %r12
1d60e(2): pop %r13
1d610(2): pop %r14
1d612(2): pop %r15
1d614(1): ret near (%rsp)
1d615(3): cmp $0x1,%ecx
1d618(6): jnle 0x9b2(%rip)
1d61e(3): test %r12b,%r12b
1d621(8): mov 0xc0(%rsp),%rsi
1d629(6): jz 0x61b(%rip)
1d62f(8): cmp %rsi,0xd8(%rsp)
1d637(8): mov 0xb0(%rsp),%rax
1d63f(9): cmovng 0xd8(%rsp),%rsi
1d648(3): cmp %rax,%rsi
1d64b(2): jnle 0x12(%rip)
1d64d(2): jmp 0x43(%rip)
1d64f(1): nop 
1d650(8): mov 0x88(%rsp),%rdx
1d658(5): mov %rdx,0x10(%rsp)
1d65d(8): mov 0x80(%rsp),%rdx
1d665(8): mov 0xf8(%rsp),%rcx
1d66d(3): add %rax,%rdx
1d670(8): add 0xa8(%rsp),%rdx
1d678(3): movzx (%rdx),%edx
1d67b(4): movzx 0x0(%rcx,%rdx,1),%edx
1d67f(5): mov 0x10(%rsp),%rcx
1d684(3): mov %dl,0x0(%rcx,%rax,1)
1d687(4): add $0x1,%rax
1d68b(3): cmp %rax,%rsi
1d68e(2): jnz 0xffffffc2(%rip)
1d690(8): mov %rax,0xb0(%rsp)
1d698(8): mov %rax,0xb8(%rsp)
1d6a0(8): mov $0x0,0x4c(%rsp)
1d6a8(5): mov 0x8(%rsp),%r12
1d6ad(5): mov 0x18(%rsp),%r14
1d6b2(5): lea 0x50(%rsp),%r13
1d6b7(3): mov %rbp,%rsi
1d6ba(3): mov %r13,%rdi
1d6bd(5): mov %r13,0x28(%rsp)
1d6c2(4): mov (%r12),%r15
1d6c6(3): mov %r14,%rdx
1d6c9(9): mov $0x0,0x30(%r12)
1d6d2(7): or $0x800000,%rdx
1d6d9(7): mov %r14,0xd8(%r15)
1d6e0(5): call 0xffffdbc0(%rip)
1d6e5(5): lea 0x4c(%rsp),%r9
1d6ea(3): xor %r8d,%r8d
1d6ed(3): mov %r14,%rcx
1d6f0(3): mov %r13,%rdx
1d6f3(3): mov %r12,%rsi
1d6f6(3): mov %rbp,%rdi
1d6f9(2): cwde 
1d6fb(8): add %rax,0xc8(%rsp)
1d703(5): call 0xfffff9cd(%rip)
1d708(4): mov 0x4c(%rsp),%ecx
1d70c(2): test %ecx,%ecx
1d70e(6): jnz 0xa29(%rip)
1d714(4): lea 0x70(%r15),%r13
1d718(5): lea 0x60(%rsp),%r12
1d71d(4): sub $0xffffff80,%r15
1d721(2): xor %edx,%edx
1d723(2): xor %ecx,%ecx
1d725(3): mov %r15,%rsi
1d728(3): mov %r12,%r8
1d72b(3): mov %r13,%rdi
1d72e(4): mov %rax,(%rsp)
1d732(5): mov $0x2,0x68(%rsp)
1d737(5): call 0xffff5c29(%rip)
1d73c(4): mov (%rsp),%r9
1d740(3): mov %rax,%r11
1d743(3): mov %rax,%rdx
1d746(3): test %r9,%r9
1d749(2): jz 0x29(%rip)
1d74b(3): mov %r11,%rcx
1d74e(3): mov %r9,%rdx
1d751(3): mov %r12,%r8
1d754(3): mov %r15,%rsi
1d757(3): mov %r13,%rdi
1d75a(4): mov %r11,(%rsp)
1d75e(5): mov $0x10,0x68(%rsp)
1d763(5): call 0xffff5bfd(%rip)
1d768(4): mov (%rsp),%r11
1d76c(3): mov %r11,%rdx
1d76f(3): mov %rax,%r11
1d772(3): test %rdx,%rdx
1d775(5): mov 0x8(%rsp),%rcx
1d77a(3): setz %dl
1d77d(3): test %r11,%r11
1d780(3): setz %al
1d783(2): or %al,%dl
1d785(3): mov (%rcx),%r13
1d788(6): jnz 0x99a(%rip)
1d78e(4): mov 0x8(%r13),%r15
1d792(4): mov %r11,0x68(%rbx)
1d796(8): lea 0x0(,%r15,8),%rcx
1d79e(4): lea 0x0(%r15,%r15,2),%r15
1d7a2(3): mov %rcx,%rdi
1d7a5(4): mov %rcx,(%rsp)
1d7a9(4): shl/sal $0x3,%r15
1d7ad(5): call 0xfffe4fd3(%rip)
1d7b2(4): mov (%rsp),%rcx
1d7b6(4): mov %rax,0x18(%r13)
1d7ba(5): mov %rax,0x18(%rsp)
1d7bf(3): mov %rcx,%rdi
1d7c2(5): call 0xfffe4fbe(%rip)
1d7c7(3): mov %r15,%rdi
1d7ca(4): mov %rax,0x20(%r13)
1d7ce(5): mov %rax,0x10(%rsp)
1d7d3(5): call 0xfffe4fad(%rip)
1d7d8(3): mov %r15,%rdi
1d7db(4): mov %rax,0x28(%r13)
1d7df(4): mov %rax,(%rsp)
1d7e3(5): call 0xfffe4f9d(%rip)
1d7e8(5): mov 0x18(%rsp),%rdx
1d7ed(4): mov %rax,0x30(%r13)
1d7f1(4): mov (%rsp),%rsi
1d7f5(5): mov 0x10(%rsp),%rcx
1d7fa(3): test %rdx,%rdx
1d7fd(6): jz 0x7c0(%rip)
1d803(3): test %rcx,%rcx
1d806(6): jz 0x7b7(%rip)
1d80c(3): test %rsi,%rsi
1d80f(6): jz 0x7ae(%rip)
1d815(3): test %rax,%rax
1d818(6): jz 0x7a5(%rip)
1d81e(5): mov 0x8(%rsp),%rax
1d823(4): mov 0x30(%rax),%r15
1d827(8): lea 0x0(,%r15,8),%rdi
1d82f(5): call 0xfffe4f51(%rip)
1d834(3): test %rax,%rax
1d837(7): mov %rax,0xe0(%r13)
1d83e(2): jz 0x6f(%rip)
1d840(3): test %r15,%r15
1d843(2): jz 0x1a(%rip)
1d845(2): xor %edx,%edx
1d847(9): nop 0x0(%rax,%rax,1)
1d850(4): mov %rdx,0x0(%rax,%rdx,8)
1d854(4): add $0x1,%rdx
1d858(3): cmp %r15,%rdx
1d85b(2): jnz 0xfffffff5(%rip)
1d85d(4): mov 0x68(%r13),%rdi
1d861(7): lea 0xffff4ff8(%rip),%rsi
1d868(3): mov %r13,%rdx
1d86b(5): call 0xffff3785(%rip)
1d870(5): mov 0x8(%rsp),%rax
1d875(7): mov 0xe0(%r13),%rdi
1d87c(4): mov 0x30(%rax),%rdx
1d880(3): test %rdx,%rdx
1d883(6): jz 0x8f1(%rip)
1d889(3): mov (%rdi),%rax
1d88c(3): test %rax,%rax
1d88f(2): jz 0xf(%rip)
1d891(2): jmp 0x1c(%rip)
1d893(5): nop 0x0(%rax,%rax,1)
1d898(4): cmp %rax,0x0(%rdi,%rax,8)
1d89c(2): jnz 0x11(%rip)
1d89e(4): add $0x1,%rax
1d8a2(3): cmp %rax,%rdx
1d8a5(2): jnbe 0xfffffff3(%rip)
1d8a7(6): jz 0x8cd(%rip)
1d8ad(4): mov 0x68(%r13),%rdi
1d8b1(5): mov 0x8(%rsp),%rdx
1d8b6(7): lea 0xffff5ea3(%rip),%rsi
1d8bd(5): call 0xffff36c3(%rip)
1d8c2(2): test %eax,%eax
1d8c4(6): jnz 0xfffffcac(%rip)
1d8ca(4): mov 0x68(%r13),%rdi
1d8ce(7): lea 0xffff83fb(%rip),%rsi
1d8d5(3): mov %r13,%rdx
1d8d8(5): call 0xffff36a8(%rip)
1d8dd(2): test %eax,%eax
1d8df(6): jnz 0xfffffc91(%rip)
1d8e5(4): mov 0x68(%r13),%rdi
1d8e9(7): lea 0xffff5000(%rip),%rsi
1d8f0(3): mov %r13,%rdx
1d8f3(5): call 0xffff36fd(%rip)
1d8f8(4): mov 0x68(%r13),%rdx
1d8fc(7): lea 0x53c5(%rip),%rsi
1d903(5): nop 0x0(%rax,%rax,1)
1d908(4): movzx 0x30(%rdx),%ecx
1d90c(4): mov 0x38(%rdx),%rdi
1d910(3): cmp $0x10,%cl
1d913(6): jnbe 0xd5(%rip)
1d919(3): movzx %cl,%eax
1d91c(4): movsxd 0x0(%rsi,%rax,4),%rax
1d920(3): add %rsi,%rax
1d923(2): jmp %rax
1d925(5): mov 0x28(%rsp),%rsi
1d92a(3): mov %rbp,%rdi
1d92d(5): call 0xffff3723(%rip)
1d932(2): test %eax,%eax
1d934(6): jnz 0xfffffc3c(%rip)
1d93a(8): movzx 0x10b(%rsp),%esi
1d942(6): mov 0xb4(%rbx),%ecx
1d948(3): test %sil,%sil
1d94b(6): jz 0xfffffbb4(%rip)
1d951(5): jmp 0xfffffba1(%rip)
1d956(8): mov $0xc,0x4c(%rsp)
1d95e(5): jmp 0xfffffc6e(%rip)
1d963(5): mov $0x1,%esi
1d968(5): mov $0x20,%edi
1d96d(5): call 0xfffe4d43(%rip)
1d972(3): test %rax,%rax
1d975(4): mov %rax,0x78(%rbx)
1d979(2): jz 0xffffffdd(%rip)
1d97b(3): xor %r12d,%r12d
1d97e(2): xor %ebp,%ebp
1d980(6): mov $0x1,%r13d
1d986(3): xor %r15d,%r15d
1d989(7): nop 0x0(%rax)
1d990(5): lea 0x0(%rbp,%r15,1),%r14d
1d995(3): mov %r14d,%edi
1d998(5): call 0xfffe4ee8(%rip)
1d99d(3): cmp $0xff,%eax
1d9a0(2): jz 0x15(%rip)
1d9a2(4): mov 0x78(%rbx),%rsi
1d9a6(3): mov %r13,%rdi
1d9a9(3): mov %r15d,%ecx
1d9ac(3): shl/sal %cl,%rdi
1d9af(3): add %r12,%rsi
1d9b2(3): or %rdi,(%rsi)
1d9b5(7): test $0xffffff80,%r14d
1d9bc(2): jnz 0xe(%rip)
1d9be(3): cmp %r14d,%eax
1d9c1(2): jz 0x9(%rip)
1d9c3(7): or $0x8,0xb0(%rbx)
1d9ca(4): add $0x1,%r15
1d9ce(4): cmp $0x40,%r15
1d9d2(2): jnz 0xffffffbe(%rip)
1d9d4(3): add $0x40,%ebp
1d9d7(4): add $0x8,%r12
1d9db(6): cmp $0x100,%ebp
1d9e1(2): jnz 0xffffffa5(%rip)
1d9e3(5): jmp 0xfffffa2b(%rip)
1d9e8(3): and $0x8,%ecx
1d9eb(6): jnz 0x917(%rip)
1d9f1(4): mov 0x20(%rdx),%rax
1d9f5(4): mov 0x38(%rax),%rcx
1d9f9(4): mov 0x18(%r13),%rax
1d9fd(4): mov %rcx,0x0(%rax,%rdi,8)
1da01(4): mov 0x8(%rdx),%r15
1da05(2): xor %edi,%edi
1da07(3): test %r15,%r15
1da0a(2): jz 0x11(%rip)
1da0c(3): mov %r15,%rdx
1da0f(5): jmp 0xfffffef9(%rip)
1da14(4): nop 0x0(%rax)
1da18(3): mov %rax,%rdx
1da1b(4): mov 0x10(%rdx),%r15
1da1f(3): test %r15,%r15
1da22(3): setz %cl
1da25(3): cmp %rdi,%r15
1da28(3): setz %al
1da2b(2): or %al,%cl
1da2d(4): mov %cl,0x10(%rsp)
1da31(2): jz 0xffffffdb(%rip)
1da33(3): mov (%rdx),%rax
1da36(3): mov %rdx,%rdi
1da39(3): test %rax,%rax
1da3c(2): jnz 0xffffffdc(%rip)
1da3e(3): xor %r14d,%r14d
1da41(3): xor %r15d,%r15d
1da44(4): nop 0x0(%rax)
1da48(4): mov 0x10(%r13),%rdx
1da4c(3): cmp %r15,%rdx
1da4f(2): jz 0x27(%rip)
1da51(4): lea 0x0(%r15,%r15,2),%r10
1da55(4): mov 0x30(%r13),%rax
1da59(4): shl/sal $0x3,%r10
1da5d(6): cmp $0x0,0x8(%rax,%r10,1)
1da63(6): jz 0x205(%rip)
1da69(4): mov 0x10(%r13),%rdx
1da6d(4): add $0x1,%r15
1da71(3): cmp %r15,%rdx
1da74(2): jnz 0xffffffdd(%rip)
1da76(3): test %r14b,%r14b
1da79(6): jz 0x245(%rip)
1da7f(3): xor %r14d,%r14d
1da82(3): xor %r15d,%r15d
1da85(2): jmp 0xffffffcc(%rip)
1da87(8): or $0x1,0xb0(%r13)
1da8f(4): mov 0x8(%rdx),%r15
1da93(3): test %r15,%r15
1da96(6): jz 0x613(%rip)
1da9c(4): mov 0x18(%r15),%rax
1daa0(4): mov 0x38(%rax),%rcx
1daa4(4): mov 0x10(%rdx),%rax
1daa8(3): test %rax,%rax
1daab(6): jz 0x5f1(%rip)
1dab1(4): mov 0x18(%rax),%rax
1dab5(4): mov 0x38(%rax),%r9
1dab9(3): test %rcx,%rcx
1dabc(6): js 0x865(%rip)
1dac2(3): test %r9,%r9
1dac5(6): js 0x81e(%rip)
1dacb(4): mov 0x28(%r13),%rax
1dacf(4): lea 0x0(%rdi,%rdi,2),%rdi
1dad3(5): mov %rsi,0x38(%rsp)
1dad8(5): mov %r9,0x30(%rsp)
1dadd(5): mov %rcx,0x18(%rsp)
1dae2(5): mov %rdx,0x10(%rsp)
1dae7(4): lea 0x0(%rax,%rdi,8),%r10
1daeb(5): mov $0x10,%edi
1daf0(7): mov $0x2,(%r10)
1daf7(4): mov %r10,(%rsp)
1dafb(5): call 0xfffe4c85(%rip)
1db00(4): mov (%rsp),%r10
1db04(3): test %rax,%rax
1db07(5): mov 0x10(%rsp),%rdx
1db0c(5): mov 0x18(%rsp),%rcx
1db11(5): mov 0x30(%rsp),%r9
1db16(5): mov 0x38(%rsp),%rsi
1db1b(4): mov %rax,0x10(%r10)
1db1f(6): jz 0x29b(%rip)
1db25(3): cmp %r9,%rcx
1db28(6): jz 0x5d5(%rip)
1db2e(8): mov $0x2,0x8(%r10)
1db36(6): jl 0x5ae(%rip)
1db3c(3): mov %r9,(%rax)
1db3f(4): mov %rcx,0x8(%rax)
1db43(5): jmp 0xfffffec2(%rip)
1db48(4): mov 0x20(%rdx),%rax
1db4c(4): lea 0x0(%rdi,%rdi,2),%rcx
1db50(5): mov $0x8,%edi
1db55(5): mov %rsi,0x10(%rsp)
1db5a(4): mov %rdx,(%rsp)
1db5e(4): mov 0x38(%rax),%r14
1db62(4): mov 0x28(%r13),%rax
1db66(4): lea 0x0(%rax,%rcx,8),%r15
1db6a(7): mov $0x1,(%r15)
1db71(8): mov $0x1,0x8(%r15)
1db79(5): call 0xfffe4c07(%rip)
1db7e(3): test %rax,%rax
1db81(4): mov %rax,0x10(%r15)
1db85(4): mov (%rsp),%rdx
1db89(5): mov 0x10(%rsp),%rsi
1db8e(6): jz 0x6aa(%rip)
1db94(3): mov %r14,(%rax)
1db97(4): mov 0x8(%rdx),%r15
1db9b(5): jmp 0xfffffe6a(%rip)
1dba0(5): cmp $0x0,0x20(%rdx)
1dba5(6): jz 0xfffffe5c(%rip)
1dbab(7): lea 0x51ce(%rip),%rcx
1dbb2(7): lea 0x4c07(%rip),%rsi
1dbb9(7): lea 0x4ca4(%rip),%rdi
1dbc0(5): mov $0x59f,%edx
1dbc5(5): call 0xfffe4a3b(%rip)
1dbca(6): nop 0x0(%rax,%rax,1)
1dbd0(4): mov 0x20(%rdx),%rax
1dbd4(4): mov 0x38(%rax),%r15
1dbd8(4): mov 0x18(%r13),%rax
1dbdc(4): mov %r15,0x0(%rax,%rdi,8)
1dbe0(4): cmp $0x4,0x30(%rdx)
1dbe4(6): jnz 0xfffffe1d(%rip)
1dbea(4): mov 0x28(%r13),%rax
1dbee(4): lea 0x0(%rdi,%rdi,2),%rcx
1dbf2(5): mov $0x8,%edi
1dbf7(5): mov %rsi,0x18(%rsp)
1dbfc(5): mov %rdx,0x10(%rsp)
1dc01(4): lea 0x0(%rax,%rcx,8),%rcx
1dc05(7): mov $0x1,(%rcx)
1dc0c(8): mov $0x1,0x8(%rcx)
1dc14(4): mov %rcx,(%rsp)
1dc18(5): call 0xfffe4b68(%rip)
1dc1d(4): mov (%rsp),%rcx
1dc21(3): test %rax,%rax
1dc24(5): mov 0x10(%rsp),%rdx
1dc29(5): mov 0x18(%rsp),%rsi
1dc2e(4): mov %rax,0x10(%rcx)
1dc32(6): jz 0x64e(%rip)
1dc38(3): mov %r15,(%rax)
1dc3b(4): mov 0x8(%rdx),%r15
1dc3f(5): jmp 0xfffffdc6(%rip)
1dc44(8): mov %rsi,0xb0(%rsp)
1dc4c(8): mov %rsi,0xb8(%rsp)
1dc54(8): mov $0x0,0x4c(%rsp)
1dc5c(5): jmp 0xfffffa4c(%rip)
1dc61(7): nop 0x0(%rax)
1dc68(5): mov $0x1,%ecx
1dc6d(3): mov %r15,%rdx
1dc70(3): mov %r13,%rsi
1dc73(3): mov %r12,%rdi
1dc76(4): mov %r10,(%rsp)
1dc7a(5): call 0xffff5126(%rip)
1dc7f(2): test %eax,%eax
1dc81(6): jnz 0xfffff8ef(%rip)
1dc87(4): mov 0x30(%r13),%rax
1dc8b(4): mov (%rsp),%r10
1dc8f(4): add $0x1,%r15
1dc93(6): cmp $0x0,0x8(%rax,%r10,1)
1dc99(6): jnz 0xfffffdaf(%rip)
1dc9f(5): mov 0x70(%rsp),%rdi
1dca4(5): call 0xfffe4d6c(%rip)
1dca9(4): cmp %r15,0x10(%r13)
1dcad(6): jz 0xfffffdd2(%rip)
1dcb3(6): movzx 0x10(%rsp),%r14d
1dcb9(5): jmp 0xfffffd98(%rip)
1dcbe(5): mov 0x8(%rsp),%rax
1dcc3(4): test $0x10,0x38(%rax)
1dcc7(2): jnz 0x13(%rip)
1dcc9(5): cmp $0x0,0x30(%rax)
1dcce(2): jz 0xc(%rip)
1dcd0(8): test $0x1,0xb0(%r13)
1dcd8(2): jnz 0x10(%rip)
1dcda(8): cmp $0x0,0x98(%r13)
1dce2(6): jz 0xf9(%rip)
1dce8(4): lea 0x0(%rdx,%rdx,2),%rdi
1dcec(4): mov %rdx,(%rsp)
1dcf0(4): shl/sal $0x3,%rdi
1dcf4(5): call 0xfffe4a8c(%rip)
1dcf9(3): test %rax,%rax
1dcfc(4): mov %rax,0x38(%r13)
1dd00(6): jz 0x54c(%rip)
1dd06(4): mov (%rsp),%rdx
1dd0a(2): xor %esi,%esi
1dd0c(2): xor %ecx,%ecx
1dd0e(3): test %rdx,%rdx
1dd11(2): jnz 0x13(%rip)
1dd13(5): jmp 0xc8(%rip)
1dd18(8): nop 0x0(%rax,%rax,1)
1dd20(4): mov 0x38(%r13),%rax
1dd24(4): pxor %xmm0,%xmm0
1dd28(3): add %rsi,%rax
1dd2b(4): add $0x1,%rcx
1dd2f(8): mov $0x0,0x10(%rax)
1dd37(4): add $0x18,%rsi
1dd3b(3): movups %xmm0,(%rax)
1dd3e(4): mov 0x10(%r13),%rax
1dd42(3): cmp %rax,%rcx
1dd45(2): jb 0xffffffdb(%rip)
1dd47(3): test %rax,%rax
1dd4a(6): jz 0x91(%rip)
1dd50(4): mov 0x30(%r13),%rax
1dd54(9): mov $0x0,0x18(%rsp)
1dd5d(9): mov $0x0,0x10(%rsp)
1dd66(5): mov 0x18(%rsp),%rcx
1dd6b(4): lea 0x0(%rax,%rcx,1),%rdx
1dd6f(5): cmp $0x0,0x8(%rdx)
1dd74(4): mov 0x10(%rdx),%rcx
1dd78(2): jle 0x4c(%rip)
1dd7a(3): xor %r15d,%r15d
1dd7d(2): jmp 0x1b(%rip)
1dd7f(1): nop 
1dd80(4): mov 0x30(%r13),%rax
1dd84(5): mov 0x18(%rsp),%rdx
1dd89(4): add $0x1,%r15
1dd8d(4): mov (%rsp),%rcx
1dd91(5): cmp 0x8(%rax,%rdx,1),%r15
1dd96(2): jnl 0x2e(%rip)
1dd98(4): mov 0x0(%rcx,%r15,8),%rax
1dd9c(4): mov %rcx,(%rsp)
1dda0(4): lea 0x0(%rax,%rax,2),%rsi
1dda4(4): mov 0x38(%r13),%rax
1dda8(4): lea 0x0(%rax,%rsi,8),%rdi
1ddac(5): mov 0x10(%rsp),%rsi
1ddb1(5): call 0xffff333f(%rip)
1ddb6(2): test %al,%al
1ddb8(2): jnz 0xffffffc8(%rip)
1ddba(5): mov $0xc,%eax
1ddbf(5): jmp 0xfffff7b1(%rip)
1ddc4(6): add $0x1,0x10(%rsp)
1ddca(6): add $0x18,0x18(%rsp)
1ddd0(5): mov 0x10(%rsp),%rdx
1ddd5(4): cmp 0x10(%r13),%rdx
1ddd9(2): jb 0xffffff8d(%rip)
1dddb(7): movzx 0xb0(%rbx),%eax
1dde2(8): mov $0x0,0x4c(%rsp)
1ddea(3): shr $0x2,%al
1dded(6): cmp $0x0,0x20(%rsp)
1ddf3(3): setz %dl
1ddf6(2): and %dl,%al
1ddf8(6): jnz 0x1e7(%rip)
1ddfe(4): mov 0x68(%rbx),%rax
1de02(3): mov %r12,%rdi
1de05(4): mov 0x18(%rax),%rax
1de09(4): mov 0x38(%rax),%rax
1de0d(4): lea 0x0(%rax,%rax,2),%rdx
1de11(7): mov %rax,0x90(%rbx)
1de18(4): mov 0x30(%rbx),%rax
1de1c(4): lea 0x0(%rax,%rdx,8),%rsi
1de20(5): call 0xffff59e0(%rip)
1de25(2): test %eax,%eax
1de27(3): mov %eax,%r15d
1de2a(4): mov %eax,0x50(%rsp)
1de2e(6): jnz 0x121(%rip)
1de34(8): cmp $0x0,0x98(%rbx)
1de3c(6): jle 0xd4(%rip)
1de42(5): mov 0x68(%rsp),%r9
1de47(3): test %r9,%r9
1de4a(6): jle 0xc6(%rip)
1de50(3): xor %r10d,%r10d
1de53(5): lea 0x10(%r12),%r13
1de58(2): jmp 0x15(%rip)
1de5a(6): nop 0x0(%rax,%rax,1)
1de60(4): add $0x1,%r10
1de64(3): cmp %r10,%r9
1de67(6): jle 0xa9(%rip)
1de6d(5): mov 0x70(%rsp),%rcx
1de72(3): mov (%rbx),%rsi
1de75(4): mov 0x0(%rcx,%r10,8),%r8
1de79(3): mov %r8,%rdi
1de7c(4): shl/sal $0x4,%rdi
1de80(3): add %rsi,%rdi
1de83(4): cmp $0x4,0x8(%rdi)
1de87(2): jnz 0xffffffd9(%rip)
1de89(2): xor %edx,%edx
1de8b(2): jmp 0xe(%rip)
1de8d(3): nop (%rax)
1de90(4): add $0x1,%rdx
1de94(3): cmp %rdx,%r9
1de97(2): jz 0xffffffc9(%rip)
1de99(4): mov 0x0(%rcx,%rdx,8),%rax
1de9d(4): shl/sal $0x4,%rax
1dea1(3): add %rsi,%rax
1dea4(4): cmp $0x9,0x8(%rax)
1dea8(2): jnz 0xffffffe8(%rip)
1deaa(3): mov (%rdi),%r11
1dead(3): cmp %r11,(%rax)
1deb0(2): jnz 0xffffffe0(%rip)
1deb2(4): mov 0x28(%rbx),%rdx
1deb6(4): lea 0x0(%r8,%r8,2),%rax
1deba(3): mov %r13,%rsi
1debd(3): mov %r9,%rdi
1dec0(4): lea 0x0(%rdx,%rax,8),%rax
1dec4(4): mov 0x10(%rax),%rax
1dec8(3): mov (%rax),%r11
1decb(3): mov %r11,%rdx
1dece(5): call 0xffff47d2(%rip)
1ded3(3): test %rax,%rax
1ded6(2): jnz 0xffffff8a(%rip)
1ded8(4): mov 0x30(%rbx),%rax
1dedc(4): lea 0x0(%r11,%r11,2),%rdx
1dee0(3): mov %r12,%rdi
1dee3(4): lea 0x0(%rax,%rdx,8),%rsi
1dee7(5): call 0xffff4cd9(%rip)
1deec(2): test %eax,%eax
1deee(6): jnz 0x342(%rip)
1def4(5): mov 0x68(%rsp),%r9
1def9(6): mov $0x1,%r10d
1deff(3): cmp %r10,%r9
1df02(6): jnle 0xffffff6b(%rip)
1df08(8): nop 0x0(%rax,%rax,1)
1df10(5): mov 0x28(%rsp),%rdi
1df15(2): xor %ecx,%ecx
1df17(3): mov %r12,%rdx
1df1a(3): mov %rbx,%rsi
1df1d(5): call 0xffff5ad3(%rip)
1df22(3): test %rax,%rax
1df25(4): mov %rax,0x48(%rbx)
1df29(6): jz 0x169(%rip)
1df2f(4): cmp $0x0,0x68(%rax)
1df33(6): js 0xfe(%rip)
1df39(4): mov %rax,0x60(%rbx)
1df3d(4): mov %rax,0x58(%rbx)
1df41(4): mov %rax,0x50(%rbx)
1df45(5): mov 0x70(%rsp),%rdi
1df4a(5): call 0xfffe4ac6(%rip)
1df4f(5): mov 0x8(%rsp),%rax
1df54(5): mov %r15d,0x4c(%rsp)
1df59(3): mov (%rax),%r13
1df5c(4): mov 0x70(%r13),%rdi
1df60(3): test %rdi,%rdi
1df63(2): jz 0x15(%rip)
1df65(3): nop (%rax)
1df68(3): mov (%rdi),%r12
1df6b(5): call 0xfffe4aa5(%rip)
1df70(3): test %r12,%r12
1df73(3): mov %r12,%rdi
1df76(2): jnz 0xfffffff2(%rip)
1df78(4): mov 0x20(%r13),%rdi
1df7c(8): mov $0x0,0x70(%r13)
1df84(b): mov $0xf,0x80(%r13)
1df8f(8): mov $0x0,0x68(%r13)
1df97(5): call 0xfffe4a79(%rip)
1df9c(8): mov $0x0,0x20(%r13)
1dfa4(3): mov %rbp,%rdi
1dfa7(5): call 0xffff43e9(%rip)
1dfac(4): mov 0x4c(%rsp),%eax
1dfb0(2): test %eax,%eax
1dfb2(6): jz 0xfffff63a(%rip)
1dfb8(5): jmp 0xfffff614(%rip)
1dfbd(8): mov $0xc,0x4c(%rsp)
1dfc5(5): jmp 0xfffff5b7(%rip)
1dfca(3): mov %rbp,%rdi
1dfcd(5): call 0xffff3423(%rip)
1dfd2(8): mov $0x0,0x4c(%rsp)
1dfda(5): jmp 0xfffff6ce(%rip)
1dfdf(5): mov 0x8(%rsp),%rcx
1dfe4(5): cmp $0x0,0x28(%rcx)
1dfe9(6): jnz 0xfffffe15(%rip)
1dfef(4): mov 0x10(%rbx),%r10
1dff3(3): test %r10,%r10
1dff6(6): jz 0x2b4(%rip)
1dffc(3): mov (%rbx),%rsi
1dfff(7): lea 0x4d06(%rip),%r9
1e006(3): xor %r8d,%r8d
1e009(2): xor %edx,%edx
1e00b(3): mov %rsi,%rcx
1e00e(4): cmp $0xc,0x8(%rcx)
1e012(6): jnbe 0x2cc(%rip)
1e018(4): movzx 0x8(%rcx),%edi
1e01c(4): movsxd 0x0(%r9,%rdi,4),%rdi
1e020(3): add %r9,%rdi
1e023(2): jmp %rdi
1e025(2): xor %ebp,%ebp
1e027(5): mov $0x1,%esi
1e02c(5): jmp 0xfffff331(%rip)
1e031(5): mov 0x28(%rsp),%r14
1e036(5): mov $0x1,%ecx
1e03b(3): mov %r12,%rdx
1e03e(3): mov %rbx,%rsi
1e041(3): mov %r14,%rdi
1e044(5): call 0xffff59ac(%rip)
1e049(5): mov $0x2,%ecx
1e04e(3): mov %r12,%rdx
1e051(3): mov %rbx,%rsi
1e054(3): mov %r14,%rdi
1e057(4): mov %rax,0x50(%rbx)
1e05b(5): call 0xffff5995(%rip)
1e060(5): mov $0x6,%ecx
1e065(4): mov %rax,0x58(%rbx)
1e069(3): mov %r12,%rdx
1e06c(3): mov %rbx,%rsi
1e06f(3): mov %r14,%rdi
1e072(5): call 0xffff597e(%rip)
1e077(5): cmp $0x0,0x50(%rbx)
1e07c(4): mov %rax,0x60(%rbx)
1e080(2): jz 0x12(%rip)
1e082(5): cmp $0x0,0x58(%rbx)
1e087(2): jz 0xb(%rip)
1e089(3): test %rax,%rax
1e08c(6): jnz 0xfffffeb9(%rip)
1e092(5): mov 0x50(%rsp),%r15d
1e097(5): jmp 0xfffffeb8(%rip)
1e09c(4): mov 0x20(%rdx),%rax
1e0a0(4): mov 0x38(%rax),%r9
1e0a4(5): jmp 0xfffffa15(%rip)
1e0a9(4): mov 0x20(%rdx),%rax
1e0ad(4): mov 0x38(%rax),%rcx
1e0b1(5): jmp 0xfffff9f3(%rip)
1e0b6(3): mov %rbx,%rdi
1e0b9(5): mov $0xe8,%esi
1e0be(5): call 0xfffe4772(%rip)
1e0c3(3): test %rax,%rax
1e0c6(3): mov %rax,%rbx
1e0c9(6): jz 0x198(%rip)
1e0cf(5): mov 0x8(%rsp),%rax
1e0d4(8): mov $0xe8,0x8(%rax)
1e0dc(3): mov %rbx,(%rax)
1e0df(5): jmp 0xfffff1e3(%rip)
1e0e4(3): mov %rcx,(%rax)
1e0e7(4): mov %r9,0x8(%rax)
1e0eb(5): jmp 0xfffff91a(%rip)
1e0f0(8): mov $0x0,0x4c(%rsp)
1e0f8(5): jmp 0xfffff5b0(%rip)
1e0fd(8): mov $0x1,0x8(%r10)
1e105(3): mov %rcx,(%rax)
1e108(5): jmp 0xfffff8fd(%rip)
1e10d(3): mov %rbp,%rdi
1e110(5): call 0xffff3270(%rip)
1e115(8): mov $0x0,0x4c(%rsp)
1e11d(5): jmp 0xfffff58b(%rip)
1e122(8): mov $0xc,0x4c(%rsp)
1e12a(8): mov $0x0,0x68(%rbx)
1e132(5): jmp 0xfffff44a(%rip)
1e137(3): test %rax,%rax
1e13a(6): jz 0x131(%rip)
1e140(4): lea 0x70(%r15),%r13
1e144(5): lea 0x60(%rsp),%r12
1e149(4): sub $0xffffff80,%r15
1e14d(2): xor %ecx,%ecx
1e14f(2): xor %edx,%edx
1e151(3): mov %r15,%rsi
1e154(3): mov %r12,%r8
1e157(3): mov %r13,%rdi
1e15a(4): mov %rax,(%rsp)
1e15e(5): mov $0x2,0x68(%rsp)
1e163(5): call 0xffff51fd(%rip)
1e168(4): mov (%rsp),%r9
1e16c(3): mov %rax,%r11
1e16f(5): jmp 0xfffff5dc(%rip)
1e174(5): call 0xfffe489c(%rip)
1e179(b): mov $0x0,0xe0(%r13)
1e184(5): jmp 0xfffff729(%rip)
1e189(3): mov %eax,%r8d
1e18c(4): add $0x1,%rdx
1e190(4): add $0x10,%rcx
1e194(3): cmp %r10,%rdx
1e197(6): jnz 0xfffffe77(%rip)
1e19d(3): or %r8b,%r14b
1e1a0(6): jz 0x10a(%rip)
1e1a6(3): mov %rdx,%rax
1e1a9(4): shl/sal $0x4,%rax
1e1ad(3): add %rsi,%rax
1e1b0(2): jmp 0x18(%rip)
1e1b2(3): cmp $0x5,%dl
1e1b5(2): jnz 0x6(%rip)
1e1b7(4): mov $0x7,0x8(%rsi)
1e1bb(4): add $0x10,%rsi
1e1bf(3): cmp %rsi,%rax
1e1c2(6): jz 0xe5(%rip)
1e1c8(4): movzx 0x8(%rsi),%edx
1e1cc(3): cmp $0x1,%dl
1e1cf(2): jnz 0xffffffe3(%rip)
1e1d1(3): cmp $0x0,(%rsi)
1e1d4(2): jns 0xffffffe7(%rip)
1e1d6(4): and $0xdf,0xa(%rsi)
1e1da(2): jmp 0xffffffe1(%rip)
1e1dc(4): nop 0x0(%rax)
1e1e0(3): cmp $0x0,(%rcx)
1e1e3(4): cmovs %eax,%r14d
1e1e7(2): jmp 0xffffffa5(%rip)
1e1e9(2): mov (%rcx),%edi
1e1eb(3): cmp $0x20,%edi
1e1ee(2): jz 0xffffff9e(%rip)
1e1f0(6): jbe 0xa9(%rip)
1e1f6(3): cmp $0x40,%edi
1e1f9(2): jz 0xffffff93(%rip)
1e1fb(3): add $0x80,%edi
1e1fe(2): jz 0xffffff8e(%rip)
1e200(5): jmp 0xfffffbfe(%rip)
1e205(3): nop (%rax)
1e208(3): mov (%rcx),%rdi
1e20b(5): cmp $0x0,0x10(%rdi)
1e210(6): jnz 0xfffffbee(%rip)
1e216(5): cmp $0x0,0x18(%rdi)
1e21b(6): jz 0xffffff71(%rip)
1e221(5): jmp 0xfffffbdd(%rip)
1e226(a): nop 0x0(%rax,%rax,1)
1e230(3): mov %eax,%r15d
1e233(5): jmp 0xfffffd1c(%rip)
1e238(8): mov $0x0,0x8(%r15)
1e240(7): mov $0x0,(%r15)
1e247(5): jmp 0xfffffb73(%rip)
1e24c(5): mov 0x8(%rsp),%rax
1e251(8): mov $0xc,0x4c(%rsp)
1e259(3): mov (%rax),%r13
1e25c(5): jmp 0xfffff320(%rip)
1e261(5): mov $0xc,%eax
1e266(5): jmp 0xfffff386(%rip)
1e26b(5): mov 0x8(%rsp),%rax
1e270(8): mov $0x0,0x68(%rbx)
1e278(3): mov (%rax),%r13
1e27b(5): jmp 0xfffff301(%rip)
1e280(8): mov $0x0,0x8(%rcx)
1e288(7): mov $0x0,(%rcx)
1e28f(5): mov $0xc,%eax
1e294(5): jmp 0xfffff2dc(%rip)
1e299(3): cmp $0x10,%edi
1e29c(6): jz 0xfffffef0(%rip)
1e2a2(5): jmp 0xfffffb5c(%rip)
1e2a7(3): mov %r8d,%r14d
1e2aa(8): cmp $0x0,0x98(%rbx)
1e2b2(7): movzx 0xb0(%rbx),%edx
1e2b9(a): mov $0x1,0xb4(%rbx)
1e2c3(3): setnle %al
1e2c6(3): and $0xf9,%edx
1e2c9(3): or %r14d,%eax
1e2cc(3): and $0x1,%eax
1e2cf(2): add %eax,%eax
1e2d1(2): or %edx,%eax
1e2d3(6): mov %al,0xb0(%rbx)
1e2d9(5): jmp 0xfffffb25(%rip)
1e2de(5): call 0xfffe4122(%rip)
1e2e3(7): lea 0x4a96(%rip),%rcx
1e2ea(7): lea 0x44cf(%rip),%rsi
1e2f1(7): lea 0x4589(%rip),%rdi
1e2f8(5): mov $0x5b0,%edx
1e2fd(5): call 0xfffe4303(%rip)
1e302(7): lea 0x4a77(%rip),%rcx
1e309(7): lea 0x44b0(%rip),%rsi
1e310(7): lea 0x44c9(%rip),%rdi
1e317(5): mov $0x5c2,%edx
1e31c(5): call 0xfffe42e4(%rip)
1e321(7): lea 0x4a58(%rip),%rcx
1e328(7): lea 0x4491(%rip),%rsi
1e32f(7): lea 0x4541(%rip),%rdi
1e336(5): mov $0x5af,%edx
1e33b(5): call 0xfffe42c5(%rip)
1e340(5): call 0xfffe4220(%rip)

"rpl_re_compile_pattern" :
1e350(4): sub $0x8,%rsp
1e354(7): mov 0x209fa5(%rip),%rcx
1e35b(3): mov %rdi,%r8
1e35e(3): mov %rdx,%rdi
1e361(3): mov %rcx,%rax
1e364(4): shr $0x19,%rax
1e368(3): and $0x1,%eax
1e36b(3): shl/sal $0x4,%eax
1e36e(2): mov %eax,%edx
1e370(4): movzx 0x38(%rdi),%eax
1e374(3): and $0xef,%eax
1e377(2): or %edx,%eax
1e379(3): mov %rsi,%rdx
1e37c(3): mov %r8,%rsi
1e37f(3): or $0x80,%eax
1e382(3): mov %al,0x38(%rdi)
1e385(5): call 0xffffeecb(%rip)
1e38a(2): test %eax,%eax
1e38c(2): jz 0x2c(%rip)
1e38e(7): lea 0x4a4b(%rip),%rdx
1e395(2): cwde 
1e397(7): lea 0x4ae2(%rip),%rsi
1e39e(2): xor %edi,%edi
1e3a0(4): add 0x0(%rdx,%rax,8),%rsi
1e3a4(5): mov $0x5,%edx
1e3a9(4): add $0x8,%rsp
1e3ad(5): jmp 0xfffe4163(%rip)
1e3b2(6): nop 0x0(%rax,%rax,1)
1e3b8(2): xor %eax,%eax
1e3ba(4): add $0x8,%rsp
1e3be(1): ret near (%rsp)

"rpl_re_set_syntax" :
1e3c0(7): mov 0x209f39(%rip),%rax
1e3c7(7): mov %rdi,0x209f32(%rip)
1e3ce(1): ret near (%rsp)

"rpl_re_compile_fastmap" :
1e3d0(2): push %r12
1e3d2(1): push %rbp
1e3d3(2): xor %eax,%eax
1e3d5(1): push %rbx
1e3d6(4): mov 0x20(%rdi),%rbp
1e3da(3): mov %rdi,%rbx
1e3dd(3): mov (%rdi),%r12
1e3e0(4): lea 0x8(%rbp),%rdi
1e3e4(3): mov %rbp,%rcx
1e3e7(8): mov $0x0,0x0(%rbp)
1e3ef(b): mov $0x0,0xf8(%rbp)
1e3fa(4): and $0xfffffff8,%rdi
1e3fe(3): sub %rdi,%rcx
1e401(6): add $0x100,%ecx
1e407(3): shr $0x3,%ecx
1e40a(3): REP stosd %rax,rdi(%es,10)
1e40d(3): mov %rbp,%rcx
1e410(3): mov %rbx,%rdi
1e413(5): mov 0x48(%r12),%rsi
1e418(4): lea 0x18(%rsi),%rdx
1e41c(4): add $0x10,%rsi
1e420(5): call 0xffff8500(%rip)
1e425(5): mov 0x50(%r12),%rax
1e42a(5): cmp %rax,0x48(%r12)
1e42f(2): jz 0x1a(%rip)
1e431(4): lea 0x18(%rax),%rdx
1e435(4): lea 0x10(%rax),%rsi
1e439(3): mov %rbp,%rcx
1e43c(3): mov %rbx,%rdi
1e43f(5): call 0xffff84e1(%rip)
1e444(5): mov 0x48(%r12),%rax
1e449(5): mov 0x58(%r12),%rsi
1e44e(3): cmp %rax,%rsi
1e451(2): jz 0x1a(%rip)
1e453(4): lea 0x18(%rsi),%rdx
1e457(3): mov %rbp,%rcx
1e45a(4): add $0x10,%rsi
1e45e(3): mov %rbx,%rdi
1e461(5): call 0xffff84bf(%rip)
1e466(5): mov 0x48(%r12),%rax
1e46b(5): mov 0x60(%r12),%rsi
1e470(3): cmp %rax,%rsi
1e473(2): jz 0x15(%rip)
1e475(4): lea 0x18(%rsi),%rdx
1e479(3): mov %rbp,%rcx
1e47c(4): add $0x10,%rsi
1e480(3): mov %rbx,%rdi
1e483(5): call 0xffff849d(%rip)
1e488(4): or $0x8,0x38(%rbx)
1e48c(2): xor %eax,%eax
1e48e(1): pop %rbx
1e48f(1): pop %rbp
1e490(2): pop %r12
1e492(1): ret near (%rsp)

"re_search_stub" :
1e4a0(2): push %r15
1e4a2(2): push %r14
1e4a4(3): mov %r8,%rax
1e4a7(2): push %r13
1e4a9(2): push %r12
1e4ab(3): add %rcx,%r8
1e4ae(1): push %rbp
1e4af(1): push %rbx
1e4b0(4): sub $0x38,%rsp
1e4b4(3): test %rcx,%rcx
1e4b7(4): mov 0x78(%rsp),%ebx
1e4bb(5): mov 0x70(%rsp),%r12
1e4c0(4): mov %ebx,0x28(%rsp)
1e4c4(6): js 0x33c(%rip)
1e4ca(3): cmp %rdx,%rcx
1e4cd(6): jnle 0x333(%rip)
1e4d3(3): cmp %rdx,%r8
1e4d6(3): mov %rcx,%rbx
1e4d9(3): mov %rdi,%r15
1e4dc(6): jnle 0x284(%rip)
1e4e2(3): test %rax,%rax
1e4e5(2): js 0xb(%rip)
1e4e7(3): cmp %r8,%rcx
1e4ea(6): jnle 0x276(%rip)
1e4f0(3): test %r8,%r8
1e4f3(6): js 0x2e5(%rip)
1e4f9(3): test %rax,%rax
1e4fc(2): jns 0xb(%rip)
1e4fe(3): cmp %r8,%rbx
1e501(6): jle 0x2d7(%rip)
1e507(5): movzx 0x38(%r15),%eax
1e50c(3): mov %eax,%r13d
1e50f(4): shr $0x5,%r13b
1e513(3): mov %r13d,%edi
1e516(3): and $0x3,%edi
1e519(3): cmp %rbx,%r8
1e51c(4): mov %edi,0x2c(%rsp)
1e520(2): jle 0x11(%rip)
1e522(5): cmp $0x0,0x20(%r15)
1e527(2): jz 0xa(%rip)
1e529(2): test $0x8,%al
1e52b(6): jz 0x1f5(%rip)
1e531(2): test $0x10,%al
1e533(6): jnz 0x1cd(%rip)
1e539(3): test %r12,%r12
1e53c(6): jz 0x1c4(%rip)
1e542(3): and $0x6,%eax
1e545(4): mov 0x30(%r15),%rcx
1e549(2): cmp $0x4,%al
1e54b(6): jz 0x195(%rip)
1e551(4): lea 0x1(%rcx),%r14
1e555(3): mov %r14,%r13
1e558(3): mov %r14,%rdi
1e55b(4): shl/sal $0x4,%rdi
1e55f(5): mov %r9,0x20(%rsp)
1e564(5): mov %rdx,0x18(%rsp)
1e569(5): mov %rsi,0x10(%rsp)
1e56e(5): mov %r8,0x8(%rsp)
1e573(5): call 0xfffe420d(%rip)
1e578(3): test %rax,%rax
1e57b(3): mov %rax,%rbp
1e57e(6): jz 0x292(%rip)
1e584(4): sub $0x8,%rsp
1e588(3): mov %rbx,%rcx
1e58b(3): mov %r15,%rdi
1e58e(4): mov 0x34(%rsp),%eax
1e592(1): push %rax
1e593(1): push %rbp
1e594(2): push %r14
1e596(5): mov 0x40(%rsp),%r9
1e59b(5): mov 0x28(%rsp),%r8
1e5a0(5): mov 0x38(%rsp),%rdx
1e5a5(5): mov 0x30(%rsp),%rsi
1e5aa(5): call 0xffffab16(%rip)
1e5af(4): add $0x20,%rsp
1e5b3(2): test %eax,%eax
1e5b5(2): jz 0x33(%rip)
1e5b7(3): cmp $0x1,%eax
1e5ba(7): mov $0xffffffff,%r12
1e5c1(2): jz 0x9(%rip)
1e5c3(7): mov $0xfffffffe,%r12
1e5ca(3): mov %rbp,%rdi
1e5cd(5): call 0xfffe4443(%rip)
1e5d2(4): add $0x38,%rsp
1e5d6(3): mov %r12,%rax
1e5d9(1): pop %rbx
1e5da(1): pop %rbp
1e5db(2): pop %r12
1e5dd(2): pop %r13
1e5df(2): pop %r14
1e5e1(2): pop %r15
1e5e3(1): ret near (%rsp)
1e5e4(4): nop 0x0(%rax)
1e5e8(3): test %r12,%r12
1e5eb(6): jz 0xcd(%rip)
1e5f1(5): movzx 0x38(%r15),%eax
1e5f6(4): lea 0x1(%r13),%rdx
1e5fa(2): shr $0x1,%al
1e5fc(3): and $0x3,%eax
1e5ff(6): jz 0x171(%rip)
1e605(3): cmp $0x1,%eax
1e608(6): jz 0x218(%rip)
1e60e(3): cmp $0x2,%eax
1e611(6): jnz 0x2ef(%rip)
1e617(4): cmp (%r12),%r14
1e61b(6): jnbe 0x2c6(%rip)
1e621(6): mov $0x2,%r9d
1e627(3): test %r13,%r13
1e62a(6): jle 0x26e(%rip)
1e630(5): mov 0x8(%r12),%r8
1e635(5): mov 0x10(%r12),%rdi
1e63a(8): lea 0x0(,%r13,8),%rsi
1e642(3): mov %r13,%rdx
1e645(2): xor %eax,%eax
1e647(9): nop 0x0(%rax,%rax,1)
1e650(5): mov 0x0(%rbp,%rax,2),%rcx
1e655(4): mov %rcx,0x0(%r8,%rax,1)
1e659(5): mov 0x8(%rbp,%rax,2),%rcx
1e65e(4): mov %rcx,0x0(%rdi,%rax,1)
1e662(4): add $0x8,%rax
1e666(3): cmp %rax,%rsi
1e669(2): jnz 0xffffffe7(%rip)
1e66b(4): cmp %rdx,(%r12)
1e66f(2): jbe 0x2e(%rip)
1e671(5): mov 0x10(%r12),%rsi
1e676(5): mov 0x8(%r12),%rcx
1e67b(7): mov $0xffffffff,%rax
1e682(6): nop 0x0(%rax,%rax,1)
1e688(4): mov %rax,0x0(%rsi,%rdx,8)
1e68c(4): add $0x1,%r13
1e690(4): mov %rax,0x0(%rcx,%rdx,8)
1e694(4): cmp (%r12),%r13
1e698(3): mov %r13,%rdx
1e69b(2): jb 0xffffffed(%rip)
1e69d(5): movzx 0x38(%r15),%eax
1e6a2(4): lea 0x0(%r9,%r9,1),%r13d
1e6a6(3): and $0xf9,%eax
1e6a9(3): or %r13d,%eax
1e6ac(2): test $0x6,%al
1e6ae(4): mov %al,0x38(%r15)
1e6b2(6): jz 0xffffff11(%rip)
1e6b8(5): cmp $0x0,0x28(%rsp)
1e6bd(4): mov 0x0(%rbp),%r12
1e6c1(6): jz 0xffffff09(%rip)
1e6c7(3): cmp %rbx,%r12
1e6ca(6): jnz 0x1f8(%rip)
1e6d0(4): mov 0x8(%rbp),%r12
1e6d4(3): sub %rbx,%r12
1e6d7(5): jmp 0xfffffef3(%rip)
1e6dc(4): nop 0x0(%rax)
1e6e0(4): mov (%r12),%r14
1e6e4(3): cmp %rcx,%r14
1e6e7(6): jnbe 0xfffffe6a(%rip)
1e6ed(3): test %r14,%r14
1e6f0(3): mov %r14,%r13
1e6f3(6): jnle 0xfffffe65(%rip)
1e6f9(7): nop 0x0(%rax)
1e700(5): mov $0x10,%edi
1e705(6): mov $0x1,%r14d
1e70b(6): mov $0x1,%r13d
1e711(3): xor %r12d,%r12d
1e714(5): jmp 0xfffffe4b(%rip)
1e719(7): nop 0x0(%rax)
1e720(3): mov %r15,%rdi
1e723(5): mov %r9,0x20(%rsp)
1e728(5): mov %rdx,0x18(%rsp)
1e72d(5): mov %rsi,0x10(%rsp)
1e732(5): mov %r8,0x8(%rsp)
1e737(5): call 0xfffffc99(%rip)
1e73c(5): movzx 0x38(%r15),%eax
1e741(5): mov 0x20(%rsp),%r9
1e746(5): mov 0x18(%rsp),%rdx
1e74b(5): mov 0x10(%rsp),%rsi
1e750(5): mov 0x8(%rsp),%r8
1e755(5): jmp 0xfffffddc(%rip)
1e75a(6): nop 0x0(%rax,%rax,1)
1e760(3): mov %rdx,%r8
1e763(5): jmp 0xfffffda4(%rip)
1e768(8): nop 0x0(%rax,%rax,1)
1e770(8): lea 0x0(,%rdx,8),%r14
1e778(5): mov %rdx,0x8(%rsp)
1e77d(3): mov %r14,%rdi
1e780(5): call 0xfffe4000(%rip)
1e785(3): test %rax,%rax
1e788(5): mov %rax,0x8(%r12)
1e78d(5): mov 0x8(%rsp),%rdx
1e792(6): jz 0x118(%rip)
1e798(3): mov %r14,%rdi
1e79b(5): mov %rdx,0x8(%rsp)
1e7a0(5): mov %rax,0x10(%rsp)
1e7a5(5): call 0xfffe3fdb(%rip)
1e7aa(3): test %rax,%rax
1e7ad(5): mov %rax,0x10(%r12)
1e7b2(5): mov 0x8(%rsp),%rdx
1e7b7(5): mov 0x10(%rsp),%rcx
1e7bc(6): jz 0xe6(%rip)
1e7c2(4): mov %rdx,(%r12)
1e7c6(6): mov $0x1,%r9d
1e7cc(5): jmp 0xfffffe5b(%rip)
1e7d1(7): nop 0x0(%rax)
1e7d8(5): movzx 0x38(%r15),%eax
1e7dd(3): xor %r8d,%r8d
1e7e0(3): mov %eax,%r13d
1e7e3(4): shr $0x5,%r13b
1e7e7(3): mov %r13d,%edi
1e7ea(3): and $0x3,%edi
1e7ed(4): mov %edi,0x2c(%rsp)
1e7f1(5): jmp 0xfffffd40(%rip)
1e7f6(a): nop 0x0(%rax,%rax,1)
1e800(7): mov $0xffffffff,%r12
1e807(5): jmp 0xfffffdcb(%rip)
1e80c(4): nop 0x0(%rax)
1e810(7): mov $0xfffffffe,%r12
1e817(5): jmp 0xfffffdbb(%rip)
1e81c(4): nop 0x0(%rax)
1e820(4): cmp %rdx,(%r12)
1e824(6): mov $0x1,%r9d
1e82a(6): jnb 0xfffffdfd(%rip)
1e830(8): lea 0x0(,%rdx,8),%rcx
1e838(5): mov 0x8(%r12),%rdi
1e83d(5): mov %r9b,0x18(%rsp)
1e842(5): mov %rdx,0x10(%rsp)
1e847(3): mov %rcx,%rsi
1e84a(5): mov %rcx,0x8(%rsp)
1e84f(5): call 0xfffe3fe1(%rip)
1e854(3): test %rax,%rax
1e857(3): mov %rax,%r14
1e85a(2): jz 0x50(%rip)
1e85c(5): mov 0x8(%rsp),%rcx
1e861(5): mov 0x10(%r12),%rdi
1e866(3): mov %rcx,%rsi
1e869(5): call 0xfffe3fc7(%rip)
1e86e(3): test %rax,%rax
1e871(5): mov 0x10(%rsp),%rdx
1e876(6): movzx 0x18(%rsp),%r9d
1e87c(2): jz 0x36(%rip)
1e87e(5): mov %r14,0x8(%r12)
1e883(5): mov %rax,0x10(%r12)
1e888(4): mov %rdx,(%r12)
1e88c(5): jmp 0xfffffd9b(%rip)
1e891(7): nop 0x0(%rax)
1e898(2): xor %edx,%edx
1e89a(3): xor %r13d,%r13d
1e89d(5): jmp 0xfffffdce(%rip)
1e8a2(3): mov %rcx,%rdi
1e8a5(5): call 0xfffe416b(%rip)
1e8aa(3): xor %r9d,%r9d
1e8ad(5): jmp 0xfffffdf0(%rip)
1e8b2(3): mov %r14,%rdi
1e8b5(5): call 0xfffe415b(%rip)
1e8ba(3): xor %r9d,%r9d
1e8bd(5): jmp 0xfffffde0(%rip)
1e8c2(7): lea 0x4487(%rip),%rcx
1e8c9(7): lea 0x3ed0(%rip),%rsi
1e8d0(7): lea 0x3fea(%rip),%rdi
1e8d7(5): mov $0x1be,%edx
1e8dc(5): call 0xfffe3d24(%rip)
1e8e1(7): lea 0x4458(%rip),%rcx
1e8e8(7): lea 0x3eb1(%rip),%rsi
1e8ef(7): lea 0x3fb3(%rip),%rdi
1e8f6(5): mov $0x1fb,%edx
1e8fb(5): call 0xfffe3d05(%rip)
1e900(7): lea 0x4439(%rip),%rcx
1e907(7): lea 0x3e92(%rip),%rsi
1e90e(7): lea 0x3f77(%rip),%rdi
1e915(5): mov $0x1f9,%edx
1e91a(5): call 0xfffe3ce6(%rip)

"re_search_2_stub" :
1e920(2): push %r15
1e922(2): push %r14
1e924(2): push %r13
1e926(2): push %r12
1e928(3): mov %rdi,%r12
1e92b(1): push %rbp
1e92c(1): push %rbx
1e92d(3): mov %r8,%rbp
1e930(3): mov %rdx,%rbx
1e933(3): mov %rbp,%rdx
1e936(4): sub $0x28,%rsp
1e93a(4): shr $0x3f,%rdx
1e93e(5): mov 0x70(%rsp),%rax
1e943(2): mov %edx,%edi
1e945(5): mov 0x78(%rsp),%r8d
1e94a(4): shr $0x3f,%rax
1e94e(3): or %al,%dil
1e951(6): jnz 0xcf(%rip)
1e957(3): test %rbx,%rbx
1e95a(6): js 0xc6(%rip)
1e960(3): mov %rbx,%r15
1e963(3): add %rbp,%r15
1e966(6): jo 0xba(%rip)
1e96c(3): test %rbp,%rbp
1e96f(3): mov %rcx,%r14
1e972(3): mov %r9,%rcx
1e975(6): jz 0xbb(%rip)
1e97b(3): xor %r13d,%r13d
1e97e(3): test %rbx,%rbx
1e981(5): mov %rsi,0x8(%rsp)
1e986(2): jnz 0x4a(%rip)
1e988(4): movzx %r8b,%r8d
1e98c(3): mov %r15,%rdx
1e98f(3): mov %r14,%rsi
1e992(2): push %r8
1e994(4): push 0x70(%rsp)
1e998(3): mov %r12,%rdi
1e99b(8): mov 0x80(%rsp),%r9
1e9a3(5): mov 0x70(%rsp),%r8
1e9a8(5): call 0xfffffaf8(%rip)
1e9ad(3): mov %r13,%rdi
1e9b0(3): mov %rax,%rbx
1e9b3(5): call 0xfffe405d(%rip)
1e9b8(1): pop %rax
1e9b9(1): pop %rdx
1e9ba(4): add $0x28,%rsp
1e9be(3): mov %rbx,%rax
1e9c1(1): pop %rbx
1e9c2(1): pop %rbp
1e9c3(2): pop %r12
1e9c5(2): pop %r13
1e9c7(2): pop %r14
1e9c9(2): pop %r15
1e9cb(1): ret near (%rsp)
1e9cc(4): nop 0x0(%rax)
1e9d0(3): mov %r15,%rdi
1e9d3(5): mov %r8d,0x1c(%rsp)
1e9d8(5): mov %r9,0x10(%rsp)
1e9dd(5): call 0xfffe3da3(%rip)
1e9e2(3): test %rax,%rax
1e9e5(3): mov %rax,%r13
1e9e8(2): jz 0x38(%rip)
1e9ea(5): mov 0x8(%rsp),%rsi
1e9ef(3): mov %rbx,%rdx
1e9f2(3): mov %rax,%rdi
1e9f5(5): call 0xfffe3d1b(%rip)
1e9fa(5): lea 0x0(%r13,%rbx,1),%rdi
1e9ff(3): mov %r14,%rsi
1ea02(3): mov %rbp,%rdx
1ea05(3): mov %r13,%r14
1ea08(5): call 0xfffe3d08(%rip)
1ea0d(5): mov 0x10(%rsp),%rcx
1ea12(5): mov 0x1c(%rsp),%r8d
1ea17(5): jmp 0xffffff71(%rip)
1ea1c(4): nop 0x0(%rax)
1ea20(7): mov $0xfffffffe,%rbx
1ea27(2): jmp 0xffffff93(%rip)
1ea29(7): nop 0x0(%rax)
1ea30(3): mov %rsi,%r14
1ea33(3): xor %r13d,%r13d
1ea36(5): jmp 0xffffff52(%rip)

"rpl_regcomp" :
1ea40(2): mov %edx,%eax
1ea42(2): push %r14
1ea44(2): push %r13
1ea46(3): and $0x1,%eax
1ea49(2): push %r12
1ea4b(1): push %rbp
1ea4c(3): cmp $0x1,%eax
1ea4f(1): push %rbx
1ea50(3): mov %rdi,%rbx
1ea53(3): sbb %r14,%r14
1ea56(7): mov $0x0,(%rdi)
1ea5d(8): mov $0x0,0x8(%rdi)
1ea65(7): and $0xfd4fca,%r14d
1ea6c(8): mov $0x0,0x10(%rdi)
1ea74(5): mov $0x100,%edi
1ea79(3): mov %rsi,%r12
1ea7c(2): mov %edx,%ebp
1ea7e(7): add $0x3b2fc,%r14
1ea85(5): call 0xfffe3cfb(%rip)
1ea8a(3): test %rax,%rax
1ea8d(4): mov %rax,0x20(%rbx)
1ea91(6): jz 0xaf(%rip)
1ea97(3): mov %rbp,%r13
1ea9a(4): shl/sal $0x15,%r13
1ea9e(7): and $0x400000,%r13d
1eaa5(3): or %r14,%r13
1eaa8(4): test $0x4,%bpl
1eaac(2): jnz 0x64(%rip)
1eaae(4): and $0x7f,0x38(%rbx)
1eab2(4): movzx 0x38(%rbx),%edx
1eab6(3): shr $0x3,%ebp
1eab9(3): mov %r12,%rdi
1eabc(3): and $0x1,%ebp
1eabf(8): mov $0x0,0x28(%rbx)
1eac7(3): shl/sal $0x4,%ebp
1eaca(3): and $0xef,%edx
1eacd(2): or %edx,%ebp
1eacf(4): mov %bpl,0x38(%rbx)
1ead3(5): call 0xfffe3a5d(%rip)
1ead8(3): mov %r13,%rcx
1eadb(3): mov %rax,%rdx
1eade(3): mov %r12,%rsi
1eae1(3): mov %rbx,%rdi
1eae4(5): call 0xffffe76c(%rip)
1eae9(3): cmp $0x10,%eax
1eaec(2): mov %eax,%ebp
1eaee(2): jz 0x3a(%rip)
1eaf0(2): test %eax,%eax
1eaf2(2): jnz 0x3b(%rip)
1eaf4(3): mov %rbx,%rdi
1eaf7(5): call 0xfffff8d9(%rip)
1eafc(1): pop %rbx
1eafd(2): mov %ebp,%eax
1eaff(1): pop %rbp
1eb00(2): pop %r12
1eb02(2): pop %r13
1eb04(2): pop %r14
1eb06(1): ret near (%rsp)
1eb07(9): nop 0x0(%rax,%rax,1)
1eb10(4): and $0xffffffbf,%r13
1eb14(4): or $0x80,0x38(%rbx)
1eb18(7): or $0x100,%r13
1eb1f(2): jmp 0xffffff93(%rip)
1eb21(7): nop 0x0(%rax)
1eb28(5): mov $0x8,%ebp
1eb2d(4): mov 0x20(%rbx),%rdi
1eb31(5): call 0xfffe3edf(%rip)
1eb36(8): mov $0x0,0x20(%rbx)
1eb3e(2): jmp 0xffffffbe(%rip)
1eb40(5): mov $0xc,%ebp
1eb45(1): pop %rbx
1eb46(2): mov %ebp,%eax
1eb48(1): pop %rbp
1eb49(2): pop %r12
1eb4b(2): pop %r13
1eb4d(2): pop %r14
1eb4f(1): ret near (%rsp)

"rpl_regerror" :
1eb50(2): push %r13
1eb52(2): push %r12
1eb54(1): push %rbp
1eb55(1): push %rbx
1eb56(4): sub $0x8,%rsp
1eb5a(3): cmp $0x10,%edi
1eb5d(2): jnbe 0x63(%rip)
1eb5f(7): lea 0x427a(%rip),%rax
1eb66(3): movsxd %edi,%rdi
1eb69(7): lea 0x4310(%rip),%rsi
1eb70(3): mov %rdx,%rbp
1eb73(5): mov $0x5,%edx
1eb78(3): mov %rcx,%r12
1eb7b(4): add 0x0(%rax,%rdi,8),%rsi
1eb7f(2): xor %edi,%edi
1eb81(5): call 0xfffe398f(%rip)
1eb86(3): mov %rax,%rdi
1eb89(3): mov %rax,%r13
1eb8c(5): call 0xfffe39a4(%rip)
1eb91(3): test %r12,%r12
1eb94(4): lea 0x1(%rax),%rbx
1eb98(2): jz 0x15(%rip)
1eb9a(3): cmp %r12,%rbx
1eb9d(3): mov %rbx,%rdx
1eba0(2): jnbe 0x28(%rip)
1eba2(3): mov %r13,%rsi
1eba5(3): mov %rbp,%rdi
1eba8(5): call 0xfffe3b68(%rip)
1ebad(4): add $0x8,%rsp
1ebb1(3): mov %rbx,%rax
1ebb4(1): pop %rbx
1ebb5(1): pop %rbp
1ebb6(2): pop %r12
1ebb8(2): pop %r13
1ebba(1): ret near (%rsp)
1ebbb(5): nop 0x0(%rax,%rax,1)
1ebc0(5): call 0xfffe3840(%rip)
1ebc5(3): nop (%rax)
1ebc8(5): lea 0xffffffff(%r12),%rdx
1ebcd(6): mov $0x0,0xffffffff(%rbp,%r12,1)
1ebd3(2): jmp 0xffffffcf(%rip)

"rpl_regfree" :
1ebe0(1): push %rbx
1ebe1(3): mov %rdi,%rbx
1ebe4(3): mov (%rdi),%rdi
1ebe7(3): test %rdi,%rdi
1ebea(2): jz 0x7(%rip)
1ebec(5): call 0xffff37e4(%rip)
1ebf1(4): mov 0x20(%rbx),%rdi
1ebf5(7): mov $0x0,(%rbx)
1ebfc(8): mov $0x0,0x8(%rbx)
1ec04(5): call 0xfffe3e0c(%rip)
1ec09(4): mov 0x28(%rbx),%rdi
1ec0d(8): mov $0x0,0x20(%rbx)
1ec15(5): call 0xfffe3dfb(%rip)
1ec1a(8): mov $0x0,0x28(%rbx)
1ec22(1): pop %rbx
1ec23(1): ret near (%rsp)

"rpl_regexec" :
1ec30(7): test $0xfffffff8,%r8d
1ec37(6): jnz 0x91(%rip)
1ec3d(2): push %r13
1ec3f(2): push %r12
1ec41(3): mov %rdx,%r13
1ec44(1): push %rbp
1ec45(1): push %rbx
1ec46(3): mov %rcx,%r12
1ec49(3): mov %r8d,%ebx
1ec4c(3): mov %rdi,%rbp
1ec4f(4): sub $0x18,%rsp
1ec53(4): test $0x4,%r8b
1ec57(2): jnz 0x51(%rip)
1ec59(3): mov %rsi,%rdi
1ec5c(5): mov %rsi,0x8(%rsp)
1ec61(5): call 0xfffe38cf(%rip)
1ec66(2): xor %ecx,%ecx
1ec68(4): test $0x10,0x38(%rbp)
1ec6c(3): mov %rax,%rdx
1ec6f(5): mov 0x8(%rsp),%rsi
1ec74(2): jz 0x42(%rip)
1ec76(4): sub $0x8,%rsp
1ec7a(1): push %rbx
1ec7b(2): push $0x0
1ec7d(2): push $0x0
1ec7f(3): mov %rbp,%rdi
1ec82(3): mov %rdx,%r9
1ec85(3): mov %rdx,%r8
1ec88(5): call 0xffffa438(%rip)
1ec8d(4): add $0x20,%rsp
1ec91(2): test %eax,%eax
1ec93(3): setnz %al
1ec96(4): add $0x18,%rsp
1ec9a(1): pop %rbx
1ec9b(3): movzx %al,%eax
1ec9e(1): pop %rbp
1ec9f(2): pop %r12
1eca1(2): pop %r13
1eca3(1): ret near (%rsp)
1eca4(4): nop 0x0(%rax)
1eca8(4): test $0x10,0x38(%rbp)
1ecac(3): mov (%rcx),%rcx
1ecaf(5): mov 0x8(%r12),%rdx
1ecb4(2): jnz 0xffffffc2(%rip)
1ecb6(4): sub $0x8,%rsp
1ecba(1): push %rbx
1ecbb(2): push %r12
1ecbd(2): push %r13
1ecbf(2): jmp 0xffffffc0(%rip)
1ecc1(7): nop 0x0(%rax)
1ecc8(5): mov $0x2,%eax
1eccd(1): ret near (%rsp)

"rpl_re_match" :
1ecd0(4): sub $0x8,%rsp
1ecd4(3): mov %rdx,%r9
1ecd7(2): push $0x1
1ecd9(2): push %r8
1ecdb(3): xor %r8d,%r8d
1ecde(5): call 0xfffff7c2(%rip)
1ece3(4): add $0x18,%rsp
1ece7(1): ret near (%rsp)

"rpl_re_search" :
1ecf0(4): sub $0x8,%rsp
1ecf4(2): push $0x0
1ecf6(2): push %r9
1ecf8(3): mov %rdx,%r9
1ecfb(5): call 0xfffff7a5(%rip)
1ed00(4): add $0x18,%rsp
1ed04(1): ret near (%rsp)

"rpl_re_match_2" :
1ed10(4): sub $0x8,%rsp
1ed14(2): push $0x1
1ed16(4): push 0x20(%rsp)
1ed1a(4): push 0x20(%rsp)
1ed1e(2): push $0x0
1ed20(5): call 0xfffffc00(%rip)
1ed25(4): add $0x28,%rsp
1ed29(1): ret near (%rsp)

"rpl_re_search_2" :
1ed30(4): sub $0x8,%rsp
1ed34(2): push $0x0
1ed36(4): push 0x28(%rsp)
1ed3a(4): push 0x28(%rsp)
1ed3e(4): push 0x28(%rsp)
1ed42(5): call 0xfffffbde(%rip)
1ed47(4): add $0x28,%rsp
1ed4b(1): ret near (%rsp)

"rpl_re_set_registers" :
1ed50(3): test %rdx,%rdx
1ed53(2): jnz 0x25(%rip)
1ed55(4): and $0xf9,0x38(%rdi)
1ed59(7): mov $0x0,(%rsi)
1ed60(8): mov $0x0,0x10(%rsi)
1ed68(8): mov $0x0,0x8(%rsi)
1ed70(1): ret near (%rsp)
1ed71(7): nop 0x0(%rax)
1ed78(4): movzx 0x38(%rdi),%eax
1ed7c(3): and $0xf9,%eax
1ed7f(3): or $0x2,%eax
1ed82(3): mov %al,0x38(%rdi)
1ed85(3): mov %rdx,(%rsi)
1ed88(4): mov %rcx,0x8(%rsi)
1ed8c(4): mov %r8,0x10(%rsi)
1ed90(1): ret near (%rsp)

"setenv_TZ" :
1eda0(3): test %rdi,%rdi
1eda3(2): jz 0x1d(%rip)
1eda5(3): mov %rdi,%rsi
1eda8(7): lea 0xdf8(%rip),%rdi
1edaf(5): mov $0x1,%edx
1edb4(5): jmp 0xfffe36fc(%rip)
1edb9(7): nop 0x0(%rax)
1edc0(7): lea 0xde0(%rip),%rdi
1edc7(5): jmp 0xfffe3b39(%rip)

"tzfree.part.0" :
1edd0(3): test %rdi,%rdi
1edd3(2): jz 0x25(%rip)
1edd5(1): push %rbx
1edd6(a): nop 0x0(%rax,%rax,1)
1ede0(3): mov (%rdi),%rbx
1ede3(5): call 0xfffe3c2d(%rip)
1ede8(3): test %rbx,%rbx
1edeb(3): mov %rbx,%rdi
1edee(2): jnz 0xfffffff2(%rip)
1edf0(1): pop %rbx
1edf1(1): ret near (%rsp)
1edf2(6): nop 0x0(%rax,%rax,1)
1edf8(2): REP ret near (%rsp)

"revert_tz.part.1" :
1ee00(2): push %r13
1ee02(2): push %r12
1ee04(1): push %rbp
1ee05(1): push %rbx
1ee06(3): mov %rdi,%rbp
1ee09(4): sub $0x8,%rsp
1ee0d(5): call 0xfffe3603(%rip)
1ee12(4): cmp $0x0,0x8(%rbp)
1ee16(3): mov %rax,%rbx
1ee19(3): mov (%rax),%r12d
1ee1c(4): lea 0x9(%rbp),%rdi
1ee20(2): jnz 0x4(%rip)
1ee22(2): xor %edi,%edi
1ee24(5): call 0xffffff7c(%rip)
1ee29(2): test %eax,%eax
1ee2b(2): jz 0x25(%rip)
1ee2d(3): mov (%rbx),%r12d
1ee30(3): xor %r13d,%r13d
1ee33(3): mov %rbp,%rdi
1ee36(5): call 0xffffff9a(%rip)
1ee3b(3): mov %r12d,(%rbx)
1ee3e(4): add $0x8,%rsp
1ee42(3): mov %r13d,%eax
1ee45(1): pop %rbx
1ee46(1): pop %rbp
1ee47(2): pop %r12
1ee49(2): pop %r13
1ee4b(1): ret near (%rsp)
1ee4c(4): nop 0x0(%rax)
1ee50(5): call 0xfffe38d0(%rip)
1ee55(6): mov $0x1,%r13d
1ee5b(2): jmp 0xffffffd8(%rip)

"tzalloc" :
1ee60(3): test %rdi,%rdi
1ee63(2): push %r12
1ee65(1): push %rbp
1ee66(1): push %rbx
1ee67(2): jz 0x61(%rip)
1ee69(3): mov %rdi,%r12
1ee6c(5): call 0xfffe36c4(%rip)
1ee71(4): lea 0x1(%rax),%rbp
1ee75(5): mov $0x76,%edi
1ee7a(4): cmp $0x76,%rbp
1ee7e(4): cmovnb %rbp,%rdi
1ee82(4): add $0x11,%rdi
1ee86(4): and $0xfffffff8,%rdi
1ee8a(5): call 0xfffe38f6(%rip)
1ee8f(3): test %rax,%rax
1ee92(3): mov %rax,%rbx
1ee95(2): jz 0x26(%rip)
1ee97(7): mov $0x0,(%rax)
1ee9e(4): lea 0x9(%rbx),%rdi
1eea2(5): mov $0x1,%eax
1eea7(4): mov %ax,0x8(%rbx)
1eeab(3): mov %rbp,%rdx
1eeae(3): mov %r12,%rsi
1eeb1(5): call 0xfffe385f(%rip)
1eeb6(5): mov $0x0,0x9(%rbx,%rbp,1)
1eebb(3): mov %rbx,%rax
1eebe(1): pop %rbx
1eebf(1): pop %rbp
1eec0(2): pop %r12
1eec2(1): ret near (%rsp)
1eec3(5): nop 0x0(%rax,%rax,1)
1eec8(5): mov $0x80,%edi
1eecd(5): call 0xfffe38b3(%rip)
1eed2(3): test %rax,%rax
1eed5(3): mov %rax,%rbx
1eed8(2): jz 0xffffffe3(%rip)
1eeda(2): xor %edx,%edx
1eedc(7): mov $0x0,(%rbx)
1eee3(3): mov %rbx,%rax
1eee6(4): mov %dx,0x8(%rbx)
1eeea(1): pop %rbx
1eeeb(1): pop %rbp
1eeec(2): pop %r12
1eeee(1): ret near (%rsp)

"save_abbr" :
1eef0(2): push %r15
1eef2(2): push %r14
1eef4(5): mov $0x1,%eax
1eef9(2): push %r13
1eefb(2): push %r12
1eefd(1): push %rbp
1eefe(1): push %rbx
1eeff(4): sub $0x8,%rsp
1ef03(4): mov 0x30(%rsi),%rbp
1ef07(3): test %rbp,%rbp
1ef0a(6): jz 0x96(%rip)
1ef10(3): cmp %rbp,%rsi
1ef13(3): mov %rdi,%r12
1ef16(3): mov %rsi,%r13
1ef19(2): jnbe 0xb(%rip)
1ef1b(4): lea 0x38(%rsi),%rdx
1ef1f(3): cmp %rdx,%rbp
1ef22(2): jb 0x7e(%rip)
1ef24(4): cmp $0x0,0x0(%rbp)
1ef28(5): lea 0x9(%r12),%rbx
1ef2d(2): jz 0x63(%rip)
1ef2f(1): nop 
1ef30(3): mov %rbp,%rsi
1ef33(3): mov %rbx,%rdi
1ef36(5): call 0xfffe379a(%rip)
1ef3b(2): test %eax,%eax
1ef3d(2): jz 0x5a(%rip)
1ef3f(3): cmp $0x0,(%rbx)
1ef42(2): jnz 0x14(%rip)
1ef44(5): lea 0x9(%r12),%r14
1ef49(3): cmp %rbx,%r14
1ef4c(2): jnz 0x64(%rip)
1ef4e(6): cmp $0x0,0x8(%r12)
1ef54(2): jz 0x5c(%rip)
1ef56(3): mov %rbx,%rdi
1ef59(5): call 0xfffe35d7(%rip)
1ef5e(5): lea 0x1(%rbx,%rax,1),%rbx
1ef63(3): cmp $0x0,(%rbx)
1ef66(2): jnz 0xffffffca(%rip)
1ef68(4): mov (%r12),%rax
1ef6c(3): test %rax,%rax
1ef6f(2): jz 0xffffffc1(%rip)
1ef71(4): lea 0x9(%rax),%rbx
1ef75(3): mov %rbp,%rsi
1ef78(3): mov %rax,%r12
1ef7b(3): mov %rbx,%rdi
1ef7e(5): call 0xfffe3752(%rip)
1ef83(2): test %eax,%eax
1ef85(2): jnz 0xffffffba(%rip)
1ef87(2): jmp 0x10(%rip)
1ef89(7): nop 0x0(%rax)
1ef90(7): lea 0x304a(%rip),%rbx
1ef97(4): mov %rbx,0x30(%r13)
1ef9b(5): mov $0x1,%eax
1efa0(4): add $0x8,%rsp
1efa4(1): pop %rbx
1efa5(1): pop %rbp
1efa6(2): pop %r12
1efa8(2): pop %r13
1efaa(2): pop %r14
1efac(2): pop %r15
1efae(1): ret near (%rsp)
1efaf(1): nop 
1efb0(3): mov %rbp,%rdi
1efb3(5): call 0xfffe357d(%rip)
1efb8(4): lea 0x1(%rax),%rdx
1efbc(3): mov %rax,%r15
1efbf(3): mov %rbx,%rax
1efc2(3): sub %r14,%rax
1efc5(3): mov %rax,%rcx
1efc8(3): not %rcx
1efcb(3): cmp %rdx,%rcx
1efce(2): jb 0x32(%rip)
1efd0(3): add %rdx,%rax
1efd3(4): cmp $0x76,%rax
1efd7(2): jbe 0x39(%rip)
1efd9(3): mov %rbp,%rdi
1efdc(5): call 0xfffffe84(%rip)
1efe1(3): mov %rax,%rbx
1efe4(4): mov %rax,(%r12)
1efe8(2): xor %eax,%eax
1efea(3): test %rbx,%rbx
1efed(2): jz 0xffffffb3(%rip)
1efef(4): mov $0x0,0x8(%rbx)
1eff3(4): add $0x9,%rbx
1eff7(2): jmp 0xffffffa0(%rip)
1eff9(7): nop 0x0(%rax)
1f000(5): call 0xfffe3410(%rip)
1f005(6): mov $0xc,(%rax)
1f00b(2): xor %eax,%eax
1f00d(2): jmp 0xffffff93(%rip)
1f00f(1): nop 
1f010(3): mov %rbp,%rsi
1f013(3): mov %rbx,%rdi
1f016(5): call 0xfffe36fa(%rip)
1f01b(6): mov $0x0,0x1(%rbx,%r15,1)
1f021(5): jmp 0xffffff76(%rip)

"set_tz" :
1f030(2): push %r12
1f032(1): push %rbp
1f033(3): mov %rdi,%rbp
1f036(1): push %rbx
1f037(7): lea 0xb69(%rip),%rdi
1f03e(4): sub $0x10,%rsp
1f042(5): call 0xfffe339e(%rip)
1f047(3): test %rax,%rax
1f04a(3): mov %rax,%rbx
1f04d(6): jz 0x9b(%rip)
1f053(4): cmp $0x0,0x8(%rbp)
1f057(2): jnz 0x69(%rip)
1f059(3): mov %rbx,%rdi
1f05c(5): call 0xfffffe04(%rip)
1f061(3): test %rax,%rax
1f064(3): mov %rax,%r12
1f067(2): jz 0x46(%rip)
1f069(2): xor %edi,%edi
1f06b(4): cmp $0x0,0x8(%rbp)
1f06f(2): jz 0x6(%rip)
1f071(4): lea 0x9(%rbp),%rdi
1f075(5): call 0xfffffd2b(%rip)
1f07a(2): test %eax,%eax
1f07c(6): jz 0x8c(%rip)
1f082(5): call 0xfffe338e(%rip)
1f087(4): cmp $0x1,%r12
1f08b(2): mov (%rax),%ebx
1f08d(2): jz 0x1b(%rip)
1f08f(3): mov %r12,%rdi
1f092(5): mov %rax,0x8(%rsp)
1f097(5): call 0xfffffd39(%rip)
1f09c(5): mov 0x8(%rsp),%rax
1f0a1(7): nop 0x0(%rax)
1f0a8(2): mov %ebx,(%rax)
1f0aa(3): xor %r12d,%r12d
1f0ad(4): add $0x10,%rsp
1f0b1(3): mov %r12,%rax
1f0b4(1): pop %rbx
1f0b5(1): pop %rbp
1f0b6(2): pop %r12
1f0b8(1): ret near (%rsp)
1f0b9(7): nop 0x0(%rax)
1f0c0(4): lea 0x9(%rbp),%rdi
1f0c4(3): mov %rax,%rsi
1f0c7(6): mov $0x1,%r12d
1f0cd(5): call 0xfffe3603(%rip)
1f0d2(2): test %eax,%eax
1f0d4(2): jnz 0xffffff85(%rip)
1f0d6(4): add $0x10,%rsp
1f0da(3): mov %r12,%rax
1f0dd(1): pop %rbx
1f0de(1): pop %rbp
1f0df(2): pop %r12
1f0e1(1): ret near (%rsp)
1f0e2(6): nop 0x0(%rax,%rax,1)
1f0e8(4): cmp $0x0,0x8(%rbp)
1f0ec(6): mov $0x1,%r12d
1f0f2(6): jnz 0xffffff67(%rip)
1f0f8(4): add $0x10,%rsp
1f0fc(3): mov %r12,%rax
1f0ff(1): pop %rbx
1f100(1): pop %rbp
1f101(2): pop %r12
1f103(1): ret near (%rsp)
1f104(4): nop 0x0(%rax)
1f108(5): call 0xfffe3618(%rip)
1f10d(2): jmp 0xffffffa0(%rip)

"tzfree" :
1f110(4): cmp $0x1,%rdi
1f114(2): jz 0x7(%rip)
1f116(5): jmp 0xfffffcba(%rip)
1f11b(1): ret near (%rsp)

"localtime_rz" :
1f120(2): push %r13
1f122(2): push %r12
1f124(1): push %rbp
1f125(1): push %rbx
1f126(3): mov %rsi,%rbp
1f129(4): sub $0x8,%rsp
1f12d(3): test %rdi,%rdi
1f130(2): jz 0x70(%rip)
1f132(3): mov %rdx,%r13
1f135(3): mov %rdi,%rbx
1f138(5): call 0xfffffef8(%rip)
1f13d(3): test %rax,%rax
1f140(3): mov %rax,%r12
1f143(2): jz 0x4b(%rip)
1f145(3): mov %r13,%rsi
1f148(3): mov %rbp,%rdi
1f14b(5): call 0xfffe32e5(%rip)
1f150(3): test %rax,%rax
1f153(2): jz 0x2d(%rip)
1f155(3): mov %r13,%rsi
1f158(3): mov %rbx,%rdi
1f15b(5): call 0xfffffd95(%rip)
1f160(2): test %al,%al
1f162(2): jz 0x1e(%rip)
1f164(4): cmp $0x1,%r12
1f168(2): jnz 0x4d(%rip)
1f16a(4): add $0x8,%rsp
1f16e(3): mov %r13,%rax
1f171(1): pop %rbx
1f172(1): pop %rbp
1f173(2): pop %r12
1f175(2): pop %r13
1f177(1): ret near (%rsp)
1f178(8): nop 0x0(%rax,%rax,1)
1f180(4): cmp $0x1,%r12
1f184(2): jz 0xa(%rip)
1f186(3): mov %r12,%rdi
1f189(5): call 0xfffffc77(%rip)
1f18e(4): add $0x8,%rsp
1f192(2): xor %eax,%eax
1f194(1): pop %rbx
1f195(1): pop %rbp
1f196(2): pop %r12
1f198(2): pop %r13
1f19a(1): ret near (%rsp)
1f19b(5): nop 0x0(%rax,%rax,1)
1f1a0(4): add $0x8,%rsp
1f1a4(3): mov %rbp,%rdi
1f1a7(3): mov %rdx,%rsi
1f1aa(1): pop %rbx
1f1ab(1): pop %rbp
1f1ac(2): pop %r12
1f1ae(2): pop %r13
1f1b0(5): jmp 0xfffe3430(%rip)
1f1b5(3): mov %r12,%rdi
1f1b8(5): call 0xfffffc48(%rip)
1f1bd(2): test %al,%al
1f1bf(2): jnz 0xffffffab(%rip)
1f1c1(2): jmp 0xffffffcd(%rip)

"mktime_z" :
1f1d0(2): push %r12
1f1d2(1): push %rbp
1f1d3(1): push %rbx
1f1d4(3): mov %rsi,%rbx
1f1d7(4): sub $0x50,%rsp
1f1db(9): mov $0x28,%rax
1f1e4(5): mov %rax,0x48(%rsp)
1f1e9(2): xor %eax,%eax
1f1eb(3): test %rdi,%rdi
1f1ee(6): jz 0x102(%rip)
1f1f4(3): mov %rdi,%rbp
1f1f7(5): call 0xfffffe39(%rip)
1f1fc(3): test %rax,%rax
1f1ff(3): mov %rax,%r12
1f202(6): jz 0xfe(%rip)
1f208(3): mov %rbx,%rdi
1f20b(5): call 0xfffe35f5(%rip)
1f210(4): cmp $0xffffffff,%rax
1f214(5): mov %rax,0x8(%rsp)
1f219(2): jz 0x57(%rip)
1f21b(3): mov %rbx,%rsi
1f21e(3): mov %rbp,%rdi
1f221(5): call 0xfffffccf(%rip)
1f226(2): test %al,%al
1f228(2): jnz 0xb(%rip)
1f22a(9): mov $0xffffffff,0x8(%rsp)
1f233(4): cmp $0x1,%r12
1f237(2): jz 0x12(%rip)
1f239(3): mov %r12,%rdi
1f23c(5): call 0xfffffbc4(%rip)
1f241(2): test %al,%al
1f243(6): jz 0xbd(%rip)
1f249(5): mov 0x8(%rsp),%rax
1f24e(5): mov 0x48(%rsp),%rcx
1f253(9): xor $0x28,%rcx
1f25c(6): jnz 0xb0(%rip)
1f262(4): add $0x50,%rsp
1f266(1): pop %rbx
1f267(1): pop %rbp
1f268(2): pop %r12
1f26a(1): ret near (%rsp)
1f26b(5): nop 0x0(%rax,%rax,1)
1f270(5): lea 0x10(%rsp),%rsi
1f275(5): lea 0x8(%rsp),%rdi
1f27a(5): call 0xfffe31b6(%rip)
1f27f(3): test %rax,%rax
1f282(2): jz 0xffffffb1(%rip)
1f284(2): mov (%rbx),%eax
1f286(3): mov 0x4(%rbx),%edx
1f289(4): xor 0x10(%rsp),%eax
1f28d(4): xor 0x14(%rsp),%edx
1f291(4): mov 0x30(%rsp),%ecx
1f295(2): or %edx,%eax
1f297(3): mov 0x8(%rbx),%edx
1f29a(4): xor 0x18(%rsp),%edx
1f29e(2): or %edx,%eax
1f2a0(3): mov 0xc(%rbx),%edx
1f2a3(4): xor 0x1c(%rsp),%edx
1f2a7(2): or %edx,%eax
1f2a9(3): mov 0x10(%rbx),%edx
1f2ac(4): xor 0x20(%rsp),%edx
1f2b0(2): or %edx,%eax
1f2b2(3): mov 0x14(%rbx),%edx
1f2b5(4): xor 0x24(%rsp),%edx
1f2b9(2): or %edx,%eax
1f2bb(3): mov 0x20(%rbx),%edx
1f2be(2): test %edx,%edx
1f2c0(4): setz %dil
1f2c4(2): test %ecx,%ecx
1f2c6(4): setz %sil
1f2ca(3): cmp %sil,%dil
1f2cd(2): jz 0xe(%rip)
1f2cf(2): test %edx,%edx
1f2d1(2): js 0xa(%rip)
1f2d3(2): test %ecx,%ecx
1f2d5(6): jns 0xffffff5e(%rip)
1f2db(2): test %eax,%eax
1f2dd(6): jz 0xffffff3e(%rip)
1f2e3(5): jmp 0xffffff50(%rip)
1f2e8(8): nop 0x0(%rax,%rax,1)
1f2f0(3): mov %rsi,%rdi
1f2f3(5): call 0xfffe356d(%rip)
1f2f8(5): jmp 0xffffff56(%rip)
1f2fd(3): nop (%rax)
1f300(7): mov $0xffffffff,%rax
1f307(5): jmp 0xffffff47(%rip)
1f30c(5): call 0xfffe3254(%rip)

"close_stream" :
1f320(2): push %r12
1f322(1): push %rbp
1f323(3): mov %rdi,%rbp
1f326(1): push %rbx
1f327(5): call 0xfffe3139(%rip)
1f32c(3): mov 0x0(%rbp),%ebx
1f32f(3): mov %rbp,%rdi
1f332(3): mov %rax,%r12
1f335(5): call 0xfffee96b(%rip)
1f33a(3): and $0x20,%ebx
1f33d(2): test %ebx,%ebx
1f33f(2): jnz 0x19(%rip)
1f341(2): test %eax,%eax
1f343(2): jz 0xc(%rip)
1f345(3): test %r12,%r12
1f348(5): mov $0xffffffff,%eax
1f34d(2): jz 0x3b(%rip)
1f34f(1): pop %rbx
1f350(1): pop %rbp
1f351(2): pop %r12
1f353(1): ret near (%rsp)
1f354(4): nop 0x0(%rax)
1f358(2): test %eax,%eax
1f35a(2): jnz 0x1e(%rip)
1f35c(5): call 0xfffe30b4(%rip)
1f361(6): mov $0x0,(%rax)
1f367(5): mov $0xffffffff,%eax
1f36c(1): pop %rbx
1f36d(1): pop %rbp
1f36e(2): pop %r12
1f370(1): ret near (%rsp)
1f371(7): nop 0x0(%rax)
1f378(1): pop %rbx
1f379(5): mov $0xffffffff,%eax
1f37e(1): pop %rbp
1f37f(2): pop %r12
1f381(1): ret near (%rsp)
1f382(6): nop 0x0(%rax,%rax,1)
1f388(5): call 0xfffe3088(%rip)
1f38d(3): cmp $0x9,(%rax)
1f390(1): pop %rbx
1f391(1): pop %rbp
1f392(2): pop %r12
1f394(3): setnz %al
1f397(3): movzx %al,%eax
1f39a(2): neg %eax
1f39c(1): ret near (%rsp)

"cycle_check_init" :
1f3a0(8): mov $0x0,0x10(%rdi)
1f3a8(7): mov $0x95f616,0x18(%rdi)
1f3af(1): ret near (%rsp)

"cycle_check" :
1f3b0(7): cmp $0x95f616,0x18(%rdi)
1f3b7(2): jnz 0x60(%rip)
1f3b9(4): mov 0x10(%rdi),%rdx
1f3bd(4): mov 0x8(%rsi),%rcx
1f3c1(3): test %rdx,%rdx
1f3c4(2): jz 0x1c(%rip)
1f3c6(3): cmp %rcx,(%rdi)
1f3c9(2): jz 0x2f(%rip)
1f3cb(4): lea 0x1(%rdx),%r8
1f3cf(2): xor %eax,%eax
1f3d1(3): test %r8,%rdx
1f3d4(4): mov %r8,0x10(%rdi)
1f3d8(2): jz 0x38(%rip)
1f3da(2): REP ret near (%rsp)
1f3dc(4): nop 0x0(%rax)
1f3e0(8): mov $0x1,0x10(%rdi)
1f3e8(3): mov (%rsi),%rax
1f3eb(3): mov %rcx,(%rdi)
1f3ee(4): mov %rax,0x8(%rdi)
1f3f2(2): xor %eax,%eax
1f3f4(1): ret near (%rsp)
1f3f5(3): nop (%rax)
1f3f8(4): mov 0x8(%rdi),%rax
1f3fc(3): cmp %rax,(%rsi)
1f3ff(2): jnz 0xffffffcc(%rip)
1f401(5): mov $0x1,%eax
1f406(1): ret near (%rsp)
1f407(9): nop 0x0(%rax,%rax,1)
1f410(3): test %r8,%r8
1f413(2): jz 0xffffffee(%rip)
1f415(2): jmp 0xffffffd3(%rip)
1f417(7): lea 0x3c32(%rip),%rcx
1f41e(7): lea 0x3beb(%rip),%rsi
1f425(7): lea 0x3c0c(%rip),%rdi
1f42c(4): sub $0x8,%rsp
1f430(5): mov $0x3c,%edx
1f435(5): call 0xfffe31cb(%rip)

"open_safer" :
1f440(4): sub $0x58,%rsp
1f444(5): mov %rdx,0x30(%rsp)
1f449(2): xor %edx,%edx
1f44b(9): mov $0x28,%rax
1f454(5): mov %rax,0x18(%rsp)
1f459(2): xor %eax,%eax
1f45b(4): test $0x40,%sil
1f45f(2): jnz 0x29(%rip)
1f461(2): xor %eax,%eax
1f463(5): call 0xfffe344d(%rip)
1f468(2): mov %eax,%edi
1f46a(5): call 0x286(%rip)
1f46f(5): mov 0x18(%rsp),%rcx
1f474(9): xor $0x28,%rcx
1f47d(2): jnz 0x2c(%rip)
1f47f(4): add $0x58,%rsp
1f483(1): ret near (%rsp)
1f484(4): nop 0x0(%rax)
1f488(5): lea 0x60(%rsp),%rax
1f48d(7): mov $0x10,(%rsp)
1f494(4): mov 0x30(%rsp),%edx
1f498(5): mov %rax,0x8(%rsp)
1f49d(5): lea 0x20(%rsp),%rax
1f4a2(5): mov %rax,0x10(%rsp)
1f4a7(2): jmp 0xffffffba(%rip)
1f4a9(5): call 0xfffe30b7(%rip)

"hard_locale" :
1f4b0(4): sub $0x8,%rsp
1f4b4(2): xor %esi,%esi
1f4b6(5): call 0xfffe338a(%rip)
1f4bb(3): mov %rax,%rdx
1f4be(5): mov $0x1,%eax
1f4c3(3): test %rdx,%rdx
1f4c6(2): jz 0x1f(%rip)
1f4c8(7): lea 0x3b8d(%rip),%rdi
1f4cf(5): mov $0x2,%ecx
1f4d4(3): mov %rdx,%rsi
1f4d7(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1f4d9(3): setnbe %cl
1f4dc(3): sbb $0x0,%cl
1f4df(2): xor %eax,%eax
1f4e1(2): test %cl,%cl
1f4e3(2): jnz 0xd(%rip)
1f4e5(4): add $0x8,%rsp
1f4e9(1): ret near (%rsp)
1f4ea(6): nop 0x0(%rax,%rax,1)
1f4f0(7): lea 0x3b67(%rip),%rdi
1f4f7(5): mov $0x6,%ecx
1f4fc(3): mov %rdx,%rsi
1f4ff(2): REP cmpsb rdi(%es,10),rsi(%ds,10)
1f501(3): setnbe %al
1f504(2): sbb $0x0,%al
1f506(2): test %al,%al
1f508(3): setnz %al
1f50b(4): add $0x8,%rsp
1f50f(1): ret near (%rsp)

"i_ring_init" :
1f510(4): mov $0x1,0x1c(%rdi)
1f514(8): mov $0x0,0x14(%rdi)
1f51c(2): mov %esi,(%rdi)
1f51e(3): mov %esi,0x4(%rdi)
1f521(3): mov %esi,0x8(%rdi)
1f524(3): mov %esi,0xc(%rdi)
1f527(3): mov %esi,0x10(%rdi)
1f52a(1): ret near (%rsp)

"i_ring_empty" :
1f530(4): movzx 0x1c(%rdi),%eax
1f534(1): ret near (%rsp)

"i_ring_push" :
1f540(4): movzx 0x1c(%rdi),%edx
1f544(3): mov 0x14(%rdi),%ecx
1f547(3): xor $0x1,%edx
1f54a(3): movzx %dl,%edx
1f54d(2): add %edx,%ecx
1f54f(3): and $0x3,%ecx
1f552(2): mov %ecx,%eax
1f554(4): lea 0x0(%rdi,%rax,4),%r8
1f558(3): mov (%r8),%eax
1f55b(3): mov %esi,(%r8)
1f55e(3): mov 0x18(%rdi),%esi
1f561(3): mov %ecx,0x14(%rdi)
1f564(2): cmp %ecx,%esi
1f566(2): jnz 0xa(%rip)
1f568(2): add %esi,%edx
1f56a(3): and $0x3,%edx
1f56d(3): mov %edx,0x18(%rdi)
1f570(4): mov $0x0,0x1c(%rdi)
1f574(1): ret near (%rsp)

"i_ring_pop" :
1f580(4): cmp $0x0,0x1c(%rdi)
1f584(2): jnz 0x31(%rip)
1f586(3): mov 0x14(%rdi),%eax
1f589(3): mov 0x10(%rdi),%esi
1f58c(4): lea 0x0(%rdi,%rax,4),%rcx
1f590(3): mov %rax,%rdx
1f593(2): mov (%rcx),%eax
1f595(2): mov %esi,(%rcx)
1f597(3): cmp 0x18(%rdi),%edx
1f59a(2): jz 0x16(%rip)
1f59c(3): add $0x3,%edx
1f59f(3): and $0x3,%edx
1f5a2(3): mov %edx,0x14(%rdi)
1f5a5(1): ret near (%rsp)
1f5a6(a): nop 0x0(%rax,%rax,1)
1f5b0(4): mov $0x1,0x1c(%rdi)
1f5b4(1): ret near (%rsp)
1f5b5(4): sub $0x8,%rsp
1f5b9(5): call 0xfffe2e47(%rip)

"locale_charset" :
1f5c0(4): sub $0x8,%rsp
1f5c4(5): mov $0xe,%edi
1f5c9(5): call 0xfffe3207(%rip)
1f5ce(3): test %rax,%rax
1f5d1(2): jz 0x1f(%rip)
1f5d3(3): cmp $0x0,(%rax)
1f5d6(7): lea 0x3a87(%rip),%rdx
1f5dd(4): cmove %rdx,%rax
1f5e1(4): add $0x8,%rsp
1f5e5(1): ret near (%rsp)
1f5e6(a): nop 0x0(%rax,%rax,1)
1f5f0(7): lea 0x3a6d(%rip),%rax
1f5f7(4): add $0x8,%rsp
1f5fb(1): ret near (%rsp)

"openat_safer" :
1f600(4): sub $0x58,%rsp
1f604(5): mov %rcx,0x38(%rsp)
1f609(2): xor %ecx,%ecx
1f60b(9): mov $0x28,%rax
1f614(5): mov %rax,0x18(%rsp)
1f619(2): xor %eax,%eax
1f61b(3): test $0x40,%dl
1f61e(2): jnz 0x2a(%rip)
1f620(2): xor %eax,%eax
1f622(5): call 0xfffe2f2e(%rip)
1f627(2): mov %eax,%edi
1f629(5): call 0xc7(%rip)
1f62e(5): mov 0x18(%rsp),%rsi
1f633(9): xor $0x28,%rsi
1f63c(2): jnz 0x2d(%rip)
1f63e(4): add $0x58,%rsp
1f642(1): ret near (%rsp)
1f643(5): nop 0x0(%rax,%rax,1)
1f648(5): lea 0x60(%rsp),%rax
1f64d(7): mov $0x18,(%rsp)
1f654(4): mov 0x38(%rsp),%ecx
1f658(5): mov %rax,0x8(%rsp)
1f65d(5): lea 0x20(%rsp),%rax
1f662(5): mov %rax,0x10(%rsp)
1f667(2): jmp 0xffffffb9(%rip)
1f669(5): call 0xfffe2ef7(%rip)

"opendirat" :
1f670(2): push %r13
1f672(2): push %r12
1f674(6): or $0x90900,%edx
1f67a(1): push %rbp
1f67b(1): push %rbx
1f67c(2): xor %eax,%eax
1f67e(3): mov %rcx,%r12
1f681(4): sub $0x8,%rsp
1f685(5): call 0xffffff7b(%rip)
1f68a(2): test %eax,%eax
1f68c(2): js 0x54(%rip)
1f68e(2): mov %eax,%edi
1f690(2): mov %eax,%ebx
1f692(5): call 0xfffe325e(%rip)
1f697(3): test %rax,%rax
1f69a(3): mov %rax,%rbp
1f69d(2): jz 0x1b(%rip)
1f69f(4): mov %ebx,(%r12)
1f6a3(4): add $0x8,%rsp
1f6a7(3): mov %rbp,%rax
1f6aa(1): pop %rbx
1f6ab(1): pop %rbp
1f6ac(2): pop %r12
1f6ae(2): pop %r13
1f6b0(1): ret near (%rsp)
1f6b1(7): nop 0x0(%rax)
1f6b8(5): call 0xfffe2d58(%rip)
1f6bd(3): mov (%rax),%r13d
1f6c0(3): mov %rax,%r12
1f6c3(2): mov %ebx,%edi
1f6c5(5): call 0xfffe2f7b(%rip)
1f6ca(3): mov %rbp,%rax
1f6cd(4): mov %r13d,(%r12)
1f6d1(4): add $0x8,%rsp
1f6d5(1): pop %rbx
1f6d6(1): pop %rbp
1f6d7(2): pop %r12
1f6d9(2): pop %r13
1f6db(1): ret near (%rsp)
1f6dc(4): nop 0x0(%rax)
1f6e0(4): add $0x8,%rsp
1f6e4(2): xor %ebp,%ebp
1f6e6(1): pop %rbx
1f6e7(3): mov %rbp,%rax
1f6ea(1): pop %rbp
1f6eb(2): pop %r12
1f6ed(2): pop %r13
1f6ef(1): ret near (%rsp)

"fd_safer" :
1f6f0(2): push %r13
1f6f2(2): push %r12
1f6f4(1): push %rbp
1f6f5(1): push %rbx
1f6f6(2): mov %edi,%ebx
1f6f8(4): sub $0x8,%rsp
1f6fc(3): cmp $0x2,%edi
1f6ff(2): jnbe 0x23(%rip)
1f701(5): call 0x2af(%rip)
1f706(3): mov %eax,%r12d
1f709(5): call 0xfffe2d07(%rip)
1f70e(3): mov (%rax),%r13d
1f711(3): mov %rax,%rbp
1f714(2): mov %ebx,%edi
1f716(5): call 0xfffe2f2a(%rip)
1f71b(3): mov %r12d,%ebx
1f71e(4): mov %r13d,0x0(%rbp)
1f722(4): add $0x8,%rsp
1f726(2): mov %ebx,%eax
1f728(1): pop %rbx
1f729(1): pop %rbp
1f72a(2): pop %r12
1f72c(2): pop %r13
1f72e(1): ret near (%rsp)

"rpl_fcntl" :
1f730(2): push %r12
1f732(1): push %rbp
1f733(2): mov %edi,%ebp
1f735(1): push %rbx
1f736(4): sub $0x50,%rsp
1f73a(9): mov $0x28,%rax
1f743(5): mov %rax,0x18(%rsp)
1f748(2): xor %eax,%eax
1f74a(5): lea 0x70(%rsp),%rax
1f74f(2): test %esi,%esi
1f751(5): mov %rdx,0x30(%rsp)
1f756(5): mov %rcx,0x38(%rsp)
1f75b(5): mov %r8,0x40(%rsp)
1f760(5): mov %rax,0x8(%rsp)
1f765(5): lea 0x20(%rsp),%rax
1f76a(5): mov %r9,0x48(%rsp)
1f76f(7): mov $0x10,(%rsp)
1f776(5): mov %rax,0x10(%rsp)
1f77b(6): jz 0x207(%rip)
1f781(6): cmp $0x406,%esi
1f787(2): jnz 0x49(%rip)
1f789(5): mov 0x10(%rsp),%rax
1f78e(7): cmp $0x0,0x208b63(%rip)
1f795(7): mov $0x18,(%rsp)
1f79c(4): mov 0x10(%rax),%r12d
1f7a0(3): mov %r12d,%edx
1f7a3(6): js 0x130(%rip)
1f7a9(2): xor %eax,%eax
1f7ab(5): mov $0x406,%esi
1f7b0(5): call 0xfffe2cf0(%rip)
1f7b5(2): test %eax,%eax
1f7b7(2): mov %eax,%ebx
1f7b9(6): js 0x18f(%rip)
1f7bf(a): mov $0x1,0x208b2f(%rip)
1f7c9(2): jmp 0x47(%rip)
1f7cb(5): nop 0x0(%rax,%rax,1)
1f7d0(3): cmp $0xb,%esi
1f7d3(2): jz 0x2d(%rip)
1f7d5(2): jnle 0x5b(%rip)
1f7d7(3): cmp $0x4,%esi
1f7da(6): jz 0xd6(%rip)
1f7e0(6): jnle 0xc0(%rip)
1f7e6(3): cmp $0x2,%esi
1f7e9(6): jz 0xc7(%rip)
1f7ef(2): jnle 0x11(%rip)
1f7f1(3): cmp $0x1,%esi
1f7f4(2): jnz 0x64(%rip)
1f7f6(a): nop 0x0(%rax,%rax,1)
1f800(2): mov %ebp,%edi
1f802(2): xor %eax,%eax
1f804(5): call 0xfffe2c9c(%rip)
1f809(2): mov %eax,%ebx
1f80b(5): nop 0x0(%rax,%rax,1)
1f810(5): mov 0x18(%rsp),%rcx
1f815(9): xor $0x28,%rcx
1f81e(2): mov %ebx,%eax
1f820(6): jnz 0x15d(%rip)
1f826(4): add $0x50,%rsp
1f82a(1): pop %rbx
1f82b(1): pop %rbp
1f82c(2): pop %r12
1f82e(1): ret near (%rsp)
1f82f(1): nop 
1f830(6): cmp $0x407,%esi
1f836(2): jnle 0x4a(%rip)
1f838(6): cmp $0x406,%esi
1f83e(2): jnl 0x72(%rip)
1f840(6): cmp $0x401,%esi
1f846(2): jz 0xffffffba(%rip)
1f848(6): cmp $0x402,%esi
1f84e(2): jz 0x62(%rip)
1f850(6): cmp $0x400,%esi
1f856(2): jz 0x5a(%rip)
1f858(3): mov (%rsp),%eax
1f85b(3): cmp $0x2f,%eax
1f85e(6): jnbe 0x13c(%rip)
1f864(5): add 0x10(%rsp),%rax
1f869(3): mov (%rax),%rdx
1f86c(2): mov %ebp,%edi
1f86e(2): xor %eax,%eax
1f870(5): call 0xfffe2c30(%rip)
1f875(2): mov %eax,%ebx
1f877(2): jmp 0xffffff99(%rip)
1f879(7): nop 0x0(%rax)
1f880(6): cmp $0x409,%esi
1f886(2): jz 0x2a(%rip)
1f888(6): jl 0xffffff78(%rip)
1f88e(6): cmp $0x40a,%esi
1f894(2): jnz 0xffffffc4(%rip)
1f896(5): jmp 0xffffff6a(%rip)
1f89b(5): nop 0x0(%rax,%rax,1)
1f8a0(3): cmp $0x9,%esi
1f8a3(6): jz 0xffffff5d(%rip)
1f8a9(2): jnle 0x7(%rip)
1f8ab(3): cmp $0x8,%esi
1f8ae(2): jnz 0xffffffaa(%rip)
1f8b0(3): mov (%rsp),%eax
1f8b3(3): cmp $0x2f,%eax
1f8b6(6): jnbe 0xee(%rip)
1f8bc(5): add 0x10(%rsp),%rax
1f8c1(2): mov (%rax),%edx
1f8c3(2): mov %ebp,%edi
1f8c5(2): xor %eax,%eax
1f8c7(5): call 0xfffe2bd9(%rip)
1f8cc(2): mov %eax,%ebx
1f8ce(5): jmp 0xffffff42(%rip)
1f8d3(2): xor %esi,%esi
1f8d5(2): xor %eax,%eax
1f8d7(5): call 0xfffe2bc9(%rip)
1f8dc(2): test %eax,%eax
1f8de(2): mov %eax,%ebx
1f8e0(6): js 0xffffff30(%rip)
1f8e6(7): cmp $0xff,0x208a0b(%rip)
1f8ed(6): jnz 0xffffff23(%rip)
1f8f3(2): xor %eax,%eax
1f8f5(5): mov $0x1,%esi
1f8fa(2): mov %ebx,%edi
1f8fc(5): call 0xfffe2ba4(%rip)
1f901(2): test %eax,%eax
1f903(2): js 0x1e(%rip)
1f905(3): or $0x1,%eax
1f908(5): mov $0x2,%esi
1f90d(2): mov %ebx,%edi
1f90f(2): mov %eax,%edx
1f911(2): xor %eax,%eax
1f913(5): call 0xfffe2b8d(%rip)
1f918(3): cmp $0xff,%eax
1f91b(6): jnz 0xfffffef5(%rip)
1f921(5): call 0xfffe2aef(%rip)
1f926(3): mov (%rax),%r12d
1f929(3): mov %rax,%rbp
1f92c(2): mov %ebx,%edi
1f92e(5): call 0xfffe2d12(%rip)
1f933(5): mov $0xffffffff,%ebx
1f938(4): mov %r12d,0x0(%rbp)
1f93c(5): jmp 0xfffffed4(%rip)
1f941(7): nop 0x0(%rax)
1f948(5): call 0xfffe2ac8(%rip)
1f94d(3): cmp $0x16,(%rax)
1f950(6): jnz 0xfffffe6f(%rip)
1f956(2): xor %esi,%esi
1f958(2): xor %eax,%eax
1f95a(3): mov %r12d,%edx
1f95d(2): mov %ebp,%edi
1f95f(5): call 0xfffe2b41(%rip)
1f964(2): test %eax,%eax
1f966(2): mov %eax,%ebx
1f968(6): js 0xfffffea8(%rip)
1f96e(a): mov $0xffffffff,0x208980(%rip)
1f978(5): jmp 0xffffff7b(%rip)
1f97d(5): call 0xfffe2be3(%rip)
1f982(5): mov 0x10(%rsp),%rax
1f987(2): xor %esi,%esi
1f989(3): mov 0x10(%rax),%edx
1f98c(2): xor %eax,%eax
1f98e(5): call 0xfffe2b12(%rip)
1f993(2): mov %eax,%ebx
1f995(5): jmp 0xfffffe7b(%rip)
1f99a(5): mov 0x8(%rsp),%rax
1f99f(5): jmp 0xfffffeca(%rip)
1f9a4(5): mov 0x8(%rsp),%rax
1f9a9(5): jmp 0xffffff18(%rip)

"dup_safer" :
1f9b0(5): mov $0x3,%edx
1f9b5(2): xor %esi,%esi
1f9b7(2): xor %eax,%eax
1f9b9(5): jmp 0xfffffd77(%rip)

"__libc_csu_init" :
1f9c0(2): push %r15
1f9c2(2): push %r14
1f9c4(3): mov %rdx,%r15
1f9c7(2): push %r13
1f9c9(2): push %r12
1f9cb(7): lea 0x207c9e(%rip),%r12
1f9d2(1): push %rbp
1f9d3(7): lea 0x207c9e(%rip),%rbp
1f9da(1): push %rbx
1f9db(3): mov %edi,%r13d
1f9de(3): mov %rsi,%r14
1f9e1(3): sub %r12,%rbp
1f9e4(4): sub $0x8,%rsp
1f9e8(4): sar $0x3,%rbp
1f9ec(5): call 0xfffe29a4(%rip)
1f9f1(3): test %rbp,%rbp
1f9f4(2): jz 0x22(%rip)
1f9f6(2): xor %ebx,%ebx
1f9f8(8): nop 0x0(%rax,%rax,1)
1fa00(3): mov %r15,%rdx
1fa03(3): mov %r14,%rsi
1fa06(3): mov %r13d,%edi
1fa09(4): call 0x0(%r12,%rbx,8)
1fa0d(4): add $0x1,%rbx
1fa11(3): cmp %rbx,%rbp
1fa14(2): jnz 0xffffffec(%rip)
1fa16(4): add $0x8,%rsp
1fa1a(1): pop %rbx
1fa1b(1): pop %rbp
1fa1c(2): pop %r12
1fa1e(2): pop %r13
1fa20(2): pop %r14
1fa22(2): pop %r15
1fa24(1): ret near (%rsp)

"atexit" :
1fa40(7): mov 0x2085c1(%rip),%rdx
1fa47(2): xor %esi,%esi
1fa49(5): jmp 0xfffe2ef7(%rip)

"_fini" :
1fa50(4): sub $0x8,%rsp
1fa54(4): add $0x8,%rsp
1fa58(1): ret near (%rsp)

